push
call
ret
ret
dec
xchg
movsl
sub
adc
dec
lds
push
mov
inc
lods
cmp
inc
and
roll
dec
faddp
scas
out
jo
jl
addr16
pushf
in
bound
ret
jns
or
movsb
pop
in
jl
xor
add
sbb
xor
add
push
push
mov
cmp
mov
aas
mov
fsubs
jbe
adc
scas
pop
movsl
leave
aaa
inc
pop
fwait
std
rorb
xor
jl
pop
cltd
into
orl
add
sti
stos
push
sbb
sarb
or
sti
clc
sbb
xchg
lret
nop
imul
push
movsb
call
xchg
cmpsl
jb
or
mov
mov
pop
xchg
sub
mov
inc
int3
jae
push
xlat
jge
out
call
out
and
push
push
insl
outsb
loope
mov
push
mov
mov
mov
mov
std
imul
std
inc
or
dec
dec
mov
movsl
stos
push
inc
js
inc
in
outsb
inc
push
dec
mov
add
mov
fcompl
mov
pop
sub
xchg
sbb
out
adc
mov
jno
inc
mov
std
fisttpll
mov
jno
lret
mov
xchg
dec
push
aaa
insb
outsl
repz
andb
fsubs
or
hlt
in
xchg
jl
cmp
mov
and
pop
mov
std
mov
subl
jbe
inc
sbb
inc
dec
inc
jmp
mov
pop
mov
pop
mov
jge
mov
or
mov
and
loop
bound
add
dec
xchg
pop
inc
lea
fists
jbe
dec
mov
sub
mov
mov
imul
pop
jns
cmp
and
les
in
aas
lcall
dec
push
out
pop
mov
int
sti
adc
xor
ljmp
mov
dec
cmp
insb
mov
sahf
jbe
sub
mull
aam
inc
addr16
sub
leave
cmc
push
mov
divl
push
jecxz
dec
inc
push
lea
data16
adc
dec
loopne
cmpsl
leave
rcrb
fidivrs
mov
cwtl
cmpb
cltd
or
sub
sbb
aam
cmp
xlat
test
or
fcomps
nop
movsl
aas
cmp
scas
stos
shrl
inc
jne
lret
jb
push
jne
outsl
les
cmove
imul
pop
sbb
ficomps
jecxz
in
mov
loop
out
mov
mov
aam
in
push
jno
sub
adc
fimull
or
xchg
and
pop
clc
or
mov
push
das
pop
jge
fdiv
sahf
insl
xor
cmp
movq
jp
push
lock
cmpsl
jmp
addr16
cmp
fsubrp
sub
push
sti
jp
inc
out
sbb
dec
fdivl
and
sub
rcrb
sub
data16
jecxz
lods
pop
inc
fcmove
pop
mov
clc
add
lret
jns
rcll
xorb
sbb
or
fiadds
xor
jecxz
cli
mov
jg
imul
bound
pop
pop
pushl
subb
dec
or
jnp
or
scas
dec
dec
repnz
inc
int
pop
cld
adc
je
popa
mov
pop
xlat
xchg
sbb
lock
fstpt
test
mov
fbstp
push
xlat
nop
adc
or
mov
mov
add
mov
or
fcomi
insb
sbb
push
mov
dec
xchg
push
mov
mov
jae
movq
outsb
add
pop
test
orb
cli
in
roll
sbb
addl
shlb
jo
shl
rorb
cmp
repz
sbb
xor
sbb
das
sub
adc
subb
repnz
inc
pop
jne
mov
mov
pop
xchg
insb
mov
sti
cmp
movsl
popa
loop
adc
das
sbb
fildl
inc
test
test
shlb
push
inc
test
dec
sub
fistpll
daa
or
rorb
mov
cmp
cli
aad
ja
movsb
cmpsb
mov
sbb
mov
insl
jae
daa
lods
xor
xchg
mov
pusha
dec
cld
sub
add
sti
out
ja
frstor
cmpsl
push
sub
adc
int3
cmp
and
cmp
lahf
pop
loope
repz
repz
movsb
in
pop
inc
outsl
out
fstps
mov
pop
mov
cmc
lret
pop
sbbl
outsl
sub
stos
aam
iret
scas
and
jbe
sbb
mov
add
mov
push
mov
pop
repnz
sbbl
dec
mov
xchg
addr16
movsb
and
or
xchg
adc
jno
sbb
add
sbb
loope
mov
jecxz
cmovle
bound
loope
inc
cli
jmp
cmp
cmp
mov
aaa
pop
out
xchg
orl
scas
and
mov
loope
testl
out
jns
push
stos
xlat
andb
lods
adc
mov
imul
stos
aam
gs
pop
mov
dec
or
flds
inc
jle
pop
stos
andl
sub
push
mov
sarl
leave
sub
sbb
push
pop
mov
roll
popa
mov
cwtl
mov
pusha
cmp
ret
xchg
adc
dec
int3
cmpsl
push
or
sub
aaa
jecxz
or
push
and
xor
lea
scas
cmc
dec
test
cmp
mov
gs
and
jle
mov
imul
jmp
inc
inc
insl
jne
dec
pop
fcoms
xchg
add
add
push
jns
out
cld
jbe
stos
nop
jg
pop
jg
cmp
hlt
or
push
testb
sbb
mov
xchg
in
adc
out
pop
imul
cmp
mov
mov
pusha
add
add
rcrl
pop
cld
mov
adc
fidivrs
rorb
push
add
pushf
pushf
mov
sbb
cmp
mov
shl
bound
cltd
leave
ds
inc
cmp
mov
xlat
mov
and
mov
xor
push
add
pop
repnz
xor
inc
movsl
sbb
dec
dec
nop
dec
mov
and
push
and
cmp
jae
pop
mov
jge
and
adc
mov
dec
fmuls
repnz
jp
sbb
js
lcall
in
in
mov
add
lret
push
inc
jns
sbb
mov
pop
push
fwait
fs
lods
push
adc
andl
subb
and
jl
mov
pop
scas
adc
mov
mov
fs
jae
movb
xor
mov
loopne
mov
jne
xchg
mov
sar
and
jne
fadd
inc
shll
xchg
lods
or
movsb
and
and
call
testl
push
test
push
pop
rolb
inc
mov
and
rorl
cmpl
adc
lahf
test
sub
dec
sub
add
mov
xchg
mov
imul
aaa
hlt
adc
pop
inc
ret
in
test
sub
jns
xlat
jns
fadds
lret
push
mov
or
fcmove
fs
xchg
mov
xchg
leave
dec
repnz
clc
inc
mov
lret
jg
fistps
daa
fdivrl
pop
cmp
xor
mov
lds
lods
xchg
jbe
inc
pop
cmp
mov
loope
dec
and
cmpsb
bound
pop
roll
push
pop
fsubrp
aad
cwtl
lock
mov
sub
xor
loope
lds
les
xchg
jl
rcrl
jge
or
sub
sbb
mov
adc
test
std
dec
cli
jae
dec
adc
push
int
mov
mov
pop
ja
ret
aaa
icebp
add
jge
gs
test
add
dec
popa
sbb
mull
std
test
jbe
sbb
and
cmp
mov
inc
inc
data16
jo
minps
add
int3
and
dec
movsl
and
pmulhw
stos
sub
dec
push
movsb
mov
out
test
ret
rcl
dec
pop
jge
sbb
mov
cmc
ret
ss
gs
das
je
lock
cmpsl
out
push
pop
add
in
push
or
and
mov
sbb
jno
push
ficoms
aaa
mov
jecxz
out
sub
enter
jg
push
mov
mov
xor
xchg
mov
xchg
xor
add
popf
adc
dec
mov
ds
das
cmp
add
sub
add
sbb
fdivs
xor
push
inc
decb
mov
push
outsl
repz
and
push
mov
movsl
jno
iret
out
jne
xor
pop
addr16
xlat
int
fistpll
mov
mov
xor
leave
xor
push
sbb
push
test
mov
in
mov
mov
ret
pop
shll
mov
out
out
mov
out
imul
mov
push
test
out
push
or
mov
pop
aas
sti
cmp
sarb
pop
xchg
cs
inc
fwait
jmp
loope
std
cmp
scas
dec
xor
adc
ret
push
sbbl
mov
pusha
xchg
push
lcall
aam
shrl
sbb
mov
les
xchg
ljmp
fwait
xor
and
cltd
test
ds
dec
sbb
loope
cmp
mov
fldt
test
cmpsb
es
sbb
fcomps
adc
lahf
push
cmc
fdivs
in
mov
adcb
mov
or
and
faddl
cld
fisttps
mov
add
cmp
fmuls
lods
inc
test
mov
xchg
fs
or
mov
sub
scas
cld
jmp
cmpl
sbb
add
bound
cmp
sbb
mov
cltd
sub
jno
or
stos
sub
out
or
das
lods
pop
pop
ljmp
and
xor
xor
les
sbb
movsb
enter
ss
jbe
mov
xor
lret
arpl
outsl
sub
cmpsl
in
stos
iret
test
lock
stos
imul
mov
push
aaa
mov
jno
or
lret
fsubs
push
lea
sub
pop
dec
in
fsts
ds
mov
out
jae
dec
and
jne
mov
pop
mov
not
test
outsl
sar
jle
cmpsl
rcrb
jo
sbb
popf
mov
cmp
jo
lods
mov
pop
push
dec
xor
and
iret
test
xchg
mov
std
mov
push
xor
inc
xor
and
popa
xor
inc
and
fidivs
pop
and
cmp
ret
mov
jmp
imul
ljmp
xor
cmp
push
ret
mov
push
out
cmpsb
pusha
cmp
sub
xlat
inc
pop
mov
mov
mov
popf
sbb
mov
outsb
push
aas
into
sti
mov
mov
mov
andb
arpl
mov
arpl
sub
daa
shl
add
and
cmc
adc
jbe
ljmp
sub
xor
cmpsl
jl
xor
aam
cmpsl
push
cmc
inc
mov
loop
sbb
sbb
addr16
mov
dec
mov
es
mov
jle
imul
loop
sbbl
or
jle
ja
stc
inc
mov
cli
rolb
stos
cmpsb
cmp
xorl
pop
ficoml
repz
cmp
mov
cld
pop
movsb
rcll
mov
xchg
xor
shlb
mov
adc
xchg
iret
popf
push
push
loop
cmp
jb
inc
imul
lods
xor
addr16
and
add
sti
cmpsb
push
mov
popf
fldl
adc
imul
enter
and
mov
fmull
and
xor
jae
paddw
add
dec
popf
fistps
fsubs
psubq
cmp
dec
xchg
xorl
mov
jmp
outsb
mov
jecxz
dec
mov
ds
push
je
jle
outsl
jmp
ficomps
out
mov
stos
push
out
inc
push
add
scas
sbb
adc
cmpsb
movb
int3
sub
flds
es
adc
cmp
leave
mov
std
sub
xor
sahf
fistps
adc
aas
pop
push
pop
je
mov
imul
outsb
adc
cmp
and
lea
cmp
call
aaa
jl
fisubl
mov
repnz
enter
popa
sub
sbb
int
leave
dec
das
push
arpl
aad
loope
adc
xor
movsb
mov
mov
mov
dec
sub
stc
mov
mov
and
dec
inc
sub
pop
pop
out
xchg
in
sbb
iret
or
pop
cmp
movsl
mov
ds
testl
cmpl
scas
sti
test
add
mov
leave
push
push
decb
sbb
mov
nop
ds
scas
jno
ja
inc
inc
inc
xchg
push
or
icebp
dec
sub
pop
dec
dec
pop
mov
pop
dec
movsl
loopne
xchg
mov
push
iret
insb
addl
push
mov
insb
leave
lahf
xlat
stc
xchg
dec
in
dec
add
aaa
loope
adc
repnz
outsl
mov
jns
mov
sti
add
or
mov
orl
push
xor
lahf
mov
sbb
adc
inc
imul
ds
arpl
push
and
clc
mov
xor
and
hlt
or
mov
cld
xor
negl
or
addr16
in
pop
jns
nop
ret
cs
aaa
pop
cwtl
fstl
in
jne
dec
jp
sub
add
loope
xchg
xchg
mov
cmpsl
add
stos
lcall
adc
sub
test
xchg
push
addr16
or
sub
pop
mov
outsb
pop
sub
in
adc
adc
lods
xchg
xlat
scas
fwait
pop
push
push
pop
xchg
test
rolb
fs
add
cltd
xlat
xor
inc
sub
enter
xchg
imul
lds
fcoms
arpl
enter
xchg
mov
and
or
mov
mov
popa
or
mov
dec
std
ds
int
loop
std
mov
sbb
call
ret
fs
inc
lods
das
mov
pop
aaa
push
jl
pop
mov
sub
cmp
cmp
sarl
imul
mov
in
insb
dec
aaa
add
shlb
ds
imul
adc
daa
xchg
jl
inc
into
ret
xlat
aam
xchg
nop
xor
xlat
dec
fbstp
daa
jae
add
pusha
into
sbb
mov
xchg
loope
sub
push
notl
push
mov
mov
filds
inc
push
dec
pop
mov
xchg
js
sahf
outsl
xchg
mov
pop
loopne
hlt
add
mov
popa
and
pop
sbb
popa
cmp
insb
ljmp
pusha
or
mov
or
stc
dec
jo
js
es
adc
jae
push
add
and
inc
insl
pop
cmp
hlt
in
popl
in
pop
mov
jno
dec
mov
repz
push
adc
xor
adc
and
aad
push
cmp
inc
cmp
add
push
aas
lea
push
jo
mov
mov
xor
jno
lea
cmp
xor
adc
xchg
dec
mov
lock
mov
pop
pop
push
cwtl
mov
rcrl
push
cmpsb
loopne
sbb
nop
add
rcll
imul
popa
addb
loop
xchg
ja
std
lock
xchg
mov
push
arpl
mov
mov
and
out
xor
orl
test
dec
mov
mov
jno
insl
mov
aaa
mov
mov
mov
mov
xlat
rcrb
sti
lahf
sub
loopne
and
dec
shlb
into
lea
sub
lret
xchg
mov
jns
push
call
daa
mov
incl
push
stos
dec
cmp
js
mov
dec
adc
rcrb
inc
pop
insl
sarl
test
sbb
mov
mov
into
leave
or
mov
jbe
aas
mov
out
cmp
xchg
adc
mov
sub
aaa
movsl
mov
test
int3
pop
jle
mov
push
or
pop
mov
bound
or
das
mov
test
jns
pop
cld
pop
xchg
fldl
cmp
ret
sub
clc
mov
mov
test
mov
daa
cmp
cld
call
mov
adc
aas
sbb
je
xchg
sbbl
shlb
imul
push
std
sbb
jle
ficompl
dec
fnstsw
fimull
or
fsubr
leave
fwait
push
out
orl
xchg
pushf
aam
push
inc
jmp
dec
mov
adcb
or
sarl
mov
es
lods
xor
lea
cld
pop
xlat
in
push
xchg
sbb
insb
pop
mov
push
jnp
fidivs
add
sti
dec
sbb
in
mov
test
test
add
jne
inc
movsb
cmp
dec
iret
lret
sahf
inc
rcl
lea
adc
xchg
cltd
pop
mov
shrb
xorl
add
outsb
rcrb
lahf
test
dec
push
xchg
jge
fwait
je
sahf
mov
imul
jns
dec
cmp
inc
push
mov
mov
pop
std
out
mov
leave
xor
cwtl
andl
inc
xchg
sbb
std
push
xlat
out
rclb
cmpsb
mov
fldt
in
es
maxps
punpcklwd
stos
sub
sub
cmp
jmp
ja
jae
mov
xor
mov
loope
jae,pt
fcompl
push
xchg
rorb
bound
sub
adc
dec
fwait
aaa
or
cltd
jo
cmp
lret
int3
add
pop
je
fistps
scas
test
sub
outsb
shl
mov
pop
jne
mov
ret
ds
fiaddl
imul
inc
out
xlat
leave
or
jns
insl
test
addr16
cmpsb
mul
std
scas
push
xchg
push
mov
add
aas
nop
mov
mov
mov
mov
ret
in
call
ficomps
fisubrl
leave
cmp
pop
xor
xchg
insb
mov
and
push
shrb
jno
and
out
les
and
jge
cs
test
inc
cmpl
jnp
out
popa
lock
int
lret
pusha
pop
lahf
stos
stos
jmp
div
pop
scas
xor
es
and
push
loopne
insl
and
rcr
and
jo
xlat
pushf
sub
sub
pop
out
xchg
loope
stos
sub
dec
icebp
jae
push
dec
leave
push
jne
shll
ja
loope
xor
sub
aas
or
mov
xor
insl
push
jecxz
repz
dec
xchg
idiv
inc
adc
negb
sub
imul
push
sbb
adc
pop
leave
or
cmp
pop
mov
jg
mov
cld
pop
xchg
les
sbb
loope
cmp
fcmovu
aam
and
mov
cmpsl
or
stos
sti
arpl
push
adc
mov
stos
cmc
xchg
adc
pop
ret
dec
sti
bound
jns
xchg
sbb
daa
lods
add
xchg
jp
les
fldt
nop
jl
dec
into
xor
cmp
fimuls
or
les
gs
xlat
repnz
xor
lods
mov
dec
cli
cltd
inc
mov
push
scas
xor
fcmovnbe
sahf
outsl
dec
rclb
inc
ljmp
and
adc
aad
insl
mov
add
mov
mov
repz
mov
pop
shrl
sbb
xor
out
ss
mov
shrb
in
sbb
or
sahf
xchg
push
jp,pt
push
loope
dec
stc
les
xchg
pushf
cmp
xor
ss
gs
mov
pop
push
mov
mov
mov
daa
mov
data16
cld
push
inc
and
pop
cmp
out
dec
xchg
mov
or
pop
es
insl
mov
fldcw
mov
cmp
js
mov
mov
or
out
or
mov
push
sbb
sbb
and
add
cmpsb
nop
xchg
sbb
dec
add
lret
cli
loop
in
mov
dec
and
mov
xchg
cmc
cwtl
mov
jb
mov
iret
lea
sbb
pop
lret
shrb
xchg
add
sarl
xlat
cli
into
xchg
cmp
adcb
mov
ljmp
dec
push
or
addb
pop
cltd
scas
sbb
xchg
aam
adc
leave
outsb
adc
jl
add
jmp
movsl
jbe
popa
in
dec
mov
setno
xchg
outsl
dec
imul
arpl
fwait
xor
test
fdivrs
xorl
mov
fisubl
int3
aas
sahf
xlat
gs
xchg
ds
and
jle
movb
cs
mov
xchg
add
xchg
roll
sti
ret
add
xor
xor
popa
adc
roll
sbb
sbb
repz
out
pop
adc
lcall
aam
xor
xor
and
sbb
dec
fnstcw
mov
lret
shll
ror
mov
dec
aam
add
dec
mov
xchg
sub
jl
nop
dec
pop
das
sub
subb
sub
inc
mov
or
and
in
inc
sub
jbe
jnp
add
and
das
hlt
inc
imul
fbstp
mov
pop
mov
sub
jp
xchg
scas
in
je
or
orb
pop
pop
xor
xchg
cwtl
fst
es
add
and
adc
outsl
xor
inc
ljmp
xlat
push
mov
lret
and
lahf
jo
add
adc
push
ja
jo
jnp
inc
add
mov
sti
syscall
inc
ficompl
aaa
mov
fwait
or
sub
xor
pop
jne
mov
cmp
lret
outsb
cwtl
lods
push
lea
or
leave
insb
xchg
out
add
mov
mov
cmp
lret
gs
xor
and
mov
sub
mov
imul
cmpl
cwtl
jecxz
sub
inc
push
pop
insl
cmp
or
sbb
push
rol
mov
push
ja
cmpsb
or
add
clc
test
testb
int
push
mov
sahf
push
add
test
mov
mov
ret
mov
clc
mov
push
xchg
aad
push
sbb
clc
mov
addr16
xchg
adc
dec
clc
lock
repnz
xchg
cmpsb
shr
rcll
push
dec
ficomps
and
or
xchg
shlb
or
push
js
aam
dec
rdmsr
int3
xlat
mov
decb
and
pop
insb
cmpsl
ds
mov
jbe
lahf
idivb
pop
jae
xor
sub
stos
leave
repz
inc
repnz
and
push
sbb
jp
push
push
loope
xor
mov
dec
call
mov
sbb
aam
pop
gs
jmp
ds
out
push
aaa
mov
mov
lcall
dec
adc
fcmovnbe
ja
xchg
cmc
lcall
xchg
lea
sbb
add
sub
xchg
pop
lds
xchg
ja
sub
loope
push
nop
sub
rcrl
or
bound
cmp
in
gs
add
adc
mov
adc
xchg
daa
jo
in
movsb
jne
lea
mov
inc
xor
push
or
pop
icebp
inc
xor
dec
dec
sbb
insl
push
sub
orb
sub
ret
mov
stos
into
sbb
xor
cmp
test
mov
in
jo
xor
add
imul
push
ds
or
jb
pop
rolb
inc
inc
test
mov
rol
cmp
xchg
mov
fsts
repnz
mov
cmp
cld
xchg
dec
divb
pop
xor
bound
mov
mov
add
out
into
and
dec
fsubrp
pop
shrb
pop
js
std
call
xchg
push
mov
sbb
js
mov
repnz
xor
sub
mov
or
lea
xchg
divb
dec
lret
mov
jo
adc
movsl
incb
ret
xchg
stos
js
and
shrb
les
dec
pop
cld
mov
loope
movsl
testl
xor
aad
sti
pop
arpl
sbb
pop
inc
mov
sub
push
stos
inc
into
adc
cmp
mov
sar
and
loopne
loopne
xorb
pop
jge
pop
add
xor
shlb
xor
push
add
sbb
pop
sub
sbb
loope
mov
cmp
jg
cmpsb
loope
jno
out
scas
mov
fimull
dec
dec
mov
loopne
sti
cltd
jno
test
hlt
mov
clc
inc
sub
pushf
or
mov
push
inc
sarl
cmp
scas
xchg
push
and
int
mov
jp
pusha
pop
and
es
and
sbb
mov
mov
dec
test
mov
inc
add
push
gs
cld
repz
adc
mov
les
pusha
adc
push
fimuls
scas
or
and
push
in
mov
es
and
lret
ret
pusha
addr16
ljmp
dec
cmp
jg
int3
inc
or
notl
push
lods
mov
and
pop
jb
insl
xchg
ror
or
fistpll
ret
call
out
call
or
push
flds
cmp
daa
decb
jb
jbe
testl
popf
and
jo
and
ss
ljmp
cmpsb
mov
pop
stc
xor
lea
sub
cltd
jb
push
mov
mov
fsubl
call
jns
dec
adc
push
mov
jg
lahf
in
lea
movsl
pop
incb
nop
xchg
rclb
stos
cmp
add
cltd
jbe
mov
inc
enter
cmp
testl
inc
add
inc
sbb
jmp
mov
jns
in
add
cmp
and
mov
pop
and
xchg
xor
cmp
adc
jb
dec
mov
mov
xor
stos
int
andb
cmp
ret
xor
jecxz
lods
sbb
repz
imul
mov
jge
sub
mov
pop
or
js
jmp
push
mov
cmp
lock
or
or
std
dec
test
mov
cmp
shll
xchg
daa
aam
sbb
jne
out
mov
outsb
pop
rcrb
jge
pop
jno
es
aas
push
roll
adc
mov
inc
insl
sub
inc
add
push
mull
add
mov
sub
mov
test
sbb
mov
push
or
push
mov
sbb
pop
jnp
inc
sub
popa
out
xor
lret
cmpsb
dec
call
mov
nop
test
das
mov
add
fstps
cmpsb
inc
and
nop
stos
test
in
bound
inc
lods
mov
mov
jne
push
mov
cwtl
adc
inc
xor
rclb
jmp
fsubs
or
aaa
push
cwtl
mov
fsub
popl
ret
jl
daa
push
rcl
xlat
stc
outsl
nop
xlat
xchg
dec
loop
lcall
sub
inc
push
dec
push
cmc
mov
mov
cmp
icebp
std
mov
cmpsl
test
js
in
inc
xchg
and
into
xchg
in
filds
cmc
sub
pop
mov
adc
jcxz
stc
mov
add
xchg
xor
or
and
out
int3
ret
cwtl
dec
push
and
cmpsl
cmp
sahf
push
popf
in
out
lods
pop
lahf
sbb
mov
cmp
xchg
test
popf
xor
stos
or
sub
lret
js
sarl
pop
push
xor
shl
pusha
cmpl
mov
popf
vpsubsb
out
push
mov
jae
hlt
shll
jl
je
and
sub
push
in
push
test
mov
nopl
mov
add
pop
fstpt
mov
mov
sub
lea
dec
in
test
mov
adc
xchg
stos
add
push
stc
test
and
jmp
dec
int3
adc
mov
pop
cmovo
sub
mov
push
and
outsb
jne
push
xor
imul
push
jmp
jns
and
mov
and
cwtl
pop
stos
cmpsb
inc
dec
stos
mov
pop
into
aam
dec
inc
xor
jo
test
cmp
xchg
rol
outsb
scas
nop
mov
mov
dec
fistl
aas
neg
sti
out
stos
lcall
nop
and
mov
mov
nop
xchg
inc
ror
orl
push
push
fnstsw
fistpl
in
popa
or
xor
adc
pop
xadd
enter
inc
ret
in
fists
fldcw
inc
insb
sub
mov
adc
sahf
addr16
outsl
pop
cmp
dec
dec
mov
pop
sbb
and
or
stc
xor
add
dec
lea
or
faddl
add
sub
mov
dec
or
mov
xchg
pop
mov
pop
cmpsb
jl
mov
push
aaa
lcall
in
push
xchg
nop
jno
cld
fdivrs
test
mov
push
cmp
rcr
sub
xor
push
bnd
call
push
jb
mov
add
adcb
fdivrl
cmp
icebp
loop
jp
add
in
add
or
adc
inc
jge
loope
cwtl
loopne
pop
xchg
xor
lcall
or
push
inc
movsl
popf
and
data16
xchg
add
jae
inc
fisubl
add
push
ds
xchg
ja
sub
test
inc
iret
and
lods
jmp
push
clc
rclb
inc
inc
cmpsb
je
mov
ja
or
scas
xchg
mov
pop
cwtl
cs
pop
inc
adc
out
loopne
scas
outsb
js
leave
out
adc
insb
test
add
sbb
call
mov
or
js
sub
push
lods
pusha
idivl
imul
mov
xor
in
cmp
or
das
dec
sbb
fbld
xorl
fistps
xor
mov
xchg
xor
aad
ja
outsl
mov
pop
std
push
inc
pop
xor
mov
imul
out
sub
mov
gs
lods
xor
or
adc
sub
div
cld
loope
out
dec
jns
fmuls
lds
enter
inc
mov
outsl
sbb
aas
lret
cmpb
mov
not
xchg
cmpsb
es
ljmp
pushf
adc
loop
stos
imul
js
cld
dec
xor
xchg
pop
pop
adc
push
shlb
in
dec
stos
push
leave
fmuls
add
int
sub
insb
mov
test
mov
mov
pop
jecxz
insb
jecxz
aas
outsb
int3
int
sub
push
imul
add
adc
lods
mov
xchg
push
or
divb
and
bound
scas
lahf
jecxz
dec
dec
mov
cmp
lock
and
mov
jns
imul
mov
das
push
pop
adc
pusha
aaa
test
mov
outsb
test
loopne
sti
cld
cmpl
scas
js
jp
push
cmpsb
sbb
lret
and
xchg
in
lds
adc
dec
js
andl
ror
icebp
xchg
jl
fwait
push
sub
jno
jne
mov
dec
jl
pop
sub
or
test
sbb
and
stc
xchg
imul
add
push
sbb
xor
insl
cltd
loope
mov
xor
xchg
frstor
inc
addr16
xor
inc
mov
mov
cmp
xchg
cld
daa
cmpxchg
xor
popa
mov
gs
or
arpl
push
pop
pushf
sbb
push
xchg
cltd
push
cmpsl
mov
imul
scas
jge
cld
stc
push
and
xchg
jnp
xorb
cmpsl
test
pushf
inc
cltd
mov
xchg
mov
sub
lock
cmp
push
jg
jbe
push
fldenv
pop
push
mov
in
sti
pop
xchg
cli
mov
mov
daa
mov
push
mov
adc
push
test
mov
stos
xor
in
nop
out
aad
push
push
xor
mov
loop
push
push
and
and
adc
dec
push
call
cltd
stos
cmpb
ret
rclb
xor
out
push
int3
lds
cld
test
push
popa
fwait
shll
inc
lret
outsw
roll
sub
adc
aam
outsl
in
addr16
int3
jl
nop
int
dec
jns
repnz
mov
les
push
fwait
lret
dec
xchg
cmc
or
push
dec
dec
popa
leave
push
repnz
or
insb
es
sub
fadds
xor
les
pop
xchg
mov
adcl
sub
cmp
stos
repz
enter
and
mov
mov
inc
sbb
clc
dec
repnz
xor
lahf
mov
jg
mov
sahf
jge
push
enter
shll
sub
cmovbe
out
pop
sbb
inc
xor
and
sbb
and
pop
jne
loope
mov
fstps
xor
fisttpl
dec
cmp
jo
mov
scas
sbb
sub
xor
fldenv
fsubrs
and
jo
cli
xor
xchg
sub
inc
insb
adc
add
ret
push
aam
add
jo
jg
lods
push
in
stc
push
fsts
loop
into
dec
push
push
jmp
out
push
test
and
xchg
in
jp
sar
add
in
pop
bound
push
adc
xorl
push
iret
sbb
dec
pop
and
das
mov
aas
fxam
pop
sbb
aam
iret
pop
shll
dec
fistpl
outsb
xlat
sbb
mov
or
cmpsl
or
test
mov
adc
jo
sbb
mov
adc
fcompl
and
jg
or
stos
gs
push
ret
jle
xor
fnstsw
gs
les
lcall
pop
adc
or
dec
enter
mov
lds
mov
adc
imul
pop
rcl
add
mov
cld
jnp
pop
fs
pushf
push
and
add
pop
data16
daa
add
lods
cmp
lods
mov
adc
adcl
subb
and
ds
ret
push
adc
gs
add
push
sahf
xchg
or
adc
shlb
std
in
mov
je
into
push
jnp
int
sbb
sub
nop
pop
lcall
scas
jp,pn
add
jecxz
sbb
imulb
test
dec
fimuls
inc
test
imul
ficoml
adc
ret
jo
mov
popf
mov
imul
add
adc
mov
and
sar
xchg
xor
mov
mov
adc
sbb
pop
jae
jb
cmp
stos
daa
and
dec
xor
out
mov
inc
mov
popa
shl
rcrb
or
cmp
inc
hlt
inc
loope
xor
sbb
mov
lret
fucom
repz
mov
addr16
insl
jns
or
cld
lds
shrb
dec
ds
pop
fmuls
pop
sub
and
das
dec
aam
repz
frstor
scas
jmp
mov
add
push
fidivrl
out
loope
mov
jmp
dec
jp
cmpb
push
and
ss
sub
push
fisttpll
push
push
mov
add
mov
add
push
adc
sbb
and
lods
mov
pop
iret
stc
leave
scas
mov
fstps
daa
add
fwait
sahf
rorl
mov
daa
fistpl
add
in
mov
and
aas
scas
xor
sbb
shl
mov
xor
jl
lahf
scas
mov
push
movsl
mov
aas
cmc
dec
ja
scas
jo
pushf
hlt
adc
cltd
adc
in
xchg
jnp
scas
cld
cmp
insb
sub
aas
mov
sbb
cwtl
pop
sbb
xor
out
movsl
sub
mov
or
adc
data16
mov
sbb
add
and
sbb
shr
jmp
fs
sahf
dec
mov
bound
xchg
dec
xor
dec
or
aad
cmp
push
sbb
push
repnz
xchg
inc
popa
inc
jle
push
aaa
pop
andl
jle
sti
ret
pop
xchg
ljmp
mov
adc
adc
out
pop
fdivrl
test
cmp
jae
dec
rcrl
xor
mov
cli
movsb
aas
iret
fsubl
mov
xchg
pop
mov
lods
push
jge
repz
lcall
inc
mov
sahf
daa
xchg
mov
test
jns
mov
dec
jno
cld
stos
dec
inc
adc
scas
mov
inc
rclb
push
ret
xor
daa
push
adc
in
rcll
cmpsb
int
or
mov
jne
cmpsb
inc
inc
sbb
call
pop
adc
jle
lcall
mov
add
mov
les
cltd
loopne
add
int
clc
lcall
gs
sub
push
xor
out
fcom
dec
aaa
cli
mov
movsb
shr
mov
stos
and
mov
xchg
sti
sub
mov
hlt
leave
jne
xor
cmpsl
xor
inc
sub
dec
mov
dec
xlat
sahf
push
jp
fcomi
xchg
cltd
dec
ss
or
cmc
xchg
xor
insl
rcll
jb
pop
pusha
cs
xor
and
xchg
inc
mov
inc
repz
push
inc
dec
push
sub
or
jl
rclb
xchg
mov
push
ret
inc
adc
ret
out
mov
xorb
xor
mov
pusha
push
xor
adc
scas
and
scas
or
add
xor
sbb
dec
push
jnp
sbb
test
xor
stos
ret
sbb
loop
call
xor
push
jl
adc
int
sbb
aaa
loopne
es
fildll
cld
mov
mov
popa
aam
out
pop
jb
aam
js
ja
cli
bound
lcall
fs
push
aaa
icebp
pop
adc
pop
ljmp
mov
adc
repnz
mov
jl
lods
sub
jb
sbb
pop
jg
insl
stos
push
aaa
shl
xlat
and
test
mov
xchg
add
lcall
jno
cmp
call
imul
enter
jbe
lods
mov
fsubrs
ss
hlt
gs
or
ficoml
fwait
fwait
mov
mov
jb
outsl
stos
add
mov
int
int
xor
sub
inc
push
loop
je
push
and
jo
push
pushf
jbe
aas
sub
xor
dec
fildl
js
cmpl
inc
dec
mov
andb
loope
mov
sti
cmpsb
push
testb
out
shll
or
cmp
je
ss
dec
mov
dec
arpl
or
lods
mov
iret
into
lcall
stos
arpl
stos
mov
pop
les
xor
jo
jl
cld
addr16
inc
and
push
sarb
push
inc
mov
push
std
ret
push
shll
cmp
scas
fcoms
adc
or
inc
xchg
repnz
dec
sbb
jmp
les
mov
cmpl
mov
fwait
sub
and
pop
sbb
in
push
fwait
andb
jns
rclb
inc
insl
mov
pop
int3
fsubs
jl
negb
sbb
jb
mov
subl
cmp
and
add
xchg
enter
das
xchg
push
aas
repnz
mov
and
jb
testl
add
jns
cld
mov
mov
cs
popa
lds
push
xor
pop
repnz
scas
psubusb
xor
dec
lcall
test
mov
call
mov
or
es
jmp
mov
or
ds
scas
jns
pop
xor
mov
scas
mov
jne
pop
jg,pt
leave
add
imul
and
icebp
lea
mov
fwait
aas
push
cmpsl
mov
sbb
rcll
stos
inc
mov
pop
fs
loop
sub
inc
cmp
pop
lahf
cwtl
scas
out
pop
out
dec
test
or
lcall
sahf
js
sub
cmp
mov
inc
repnz
mov
loop
fisttps
adc
or
adc
out
lods
cmp
in
dec
dec
jbe
inc
sbb
outsl
pop
ja
cmp
mov
out
testb
ret
movsl
or
xor
repz
leave
xor
xchg
sub
push
mov
ljmp
push
aad
jb
or
aam
push
xor
lea
loop
ss
lods
inc
les
lea
or
and
bound
outsb
jnp
aam
jecxz
lock
data16
stos
pop
add
push
or
lods
inc
or
cld
mov
pop
testb
push
adc
lods
adc
mov
pop
mov
jbe
arpl
dec
push
add
xchg
sub
xchg
pop
int3
insl
dec
ja
mov
iret
ja
adc
stos
lods
jge
arpl
stos
xor
jecxz
in
jo
mov
out
outsl
add
mov
or
and
ret
push
dec
mov
fcompl
mov
fnstenv
pop
add
sub
xchg
cmp
and
outsb
inc
cli
and
cmp
iret
jne
mov
stos
fildll
in
xlat
int
movsb
push
push
stos
dec
lcall
inc
and
jae
jl
aam
imul
xchg
jno
ja
fisttpll
hlt
stos
add
js
frstor
xor
cmp
ljmp
xchg
test
iret
inc
repnz
cmp
push
outsl
and
arpl
insb
loopne
fmul
sbb
inc
mov
jl
pop
cltd
adc
aas
sbbl
paddusb
jecxz
mov
adc
stos
xchg
idivb
int3
mov
fdivrl
sbb
xchg
cmp
iret
filds
call
je
pop
int3
daa
push
cltd
adcl
stc
sbb
push
in
push
pop
fsubrs
iret
xchg
das
adc
rcrb
adc
shll
testl
ret
insl
mov
mov
pop
sub
stos
test
mov
ret
stos
cltd
ljmp
add
dec
jns
add
mov
push
cwtl
unpcklps
dec
outsb
mov
push
shl
push
fistl
add
mov
jbe
cmp
movsl
mov
aad
test
stos
adc
sub
or
pop
jns
xchg
add
sbb
jnp
divb
jmp
or
mov
mov
mov
shlb
je
add
cmp
stos
push
sbb
sbb
addr16
ljmp
and
shlb
ss
pop
push
stos
cmp
and
fxch
icebp
dec
cltd
mov
adcb
push
iret
cmpsb
mov
add
mov
mov
jg
push
adc
mov
les
adc
xor
inc
js
jb
sub
xor
stos
daa
stc
sbb
in
xor
or
test
jne
push
aam
sub
ds
or
jmp
pop
sub
rcrb
in
mov
cli
aaa
push
xor
cmp
je
lock
icebp
in
mov
or
in
add
xchg
mov
xor
mov
fbstp
cwtl
mov
fiaddl
fidivrl
lcall
xor
icebp
or
test
loope
xchg
hlt
adcl
and
rcrl
int3
pshufw
das
repz
popa
cmpl
fstps
iret
imul
fnstenv
mov
fs
cmp
in
jl
xchg
dec
popa
testb
bound
das
rcrb
pop
sti
andl
adc
mov
jge
push
dec
jae
mov
ljmp
dec
std
xor
loopne
dec
mov
enter
mov
movsb
cmp
mov
push
ja
xchg
push
inc
ret
pop
xor
aad
jno
push
std
in
outsl
decl
loopne
xor
xchg
jg
sbb
cs
adc
mov
mov
jns
es
test
xor
xor
shlb
ss
leave
fcomps
ret
aas
xchg
xchg
iret
inc
xor
int
cli
daa
in
xor
loop
movsl
sub
mulb
push
add
or
push
pop
ds
mov
rcrb
dec
andb
mov
dec
sahf
jne
pop
xor
cwtl
mov
out
lahf
daa
mov
mov
out
inc
inc
int3
inc
dec
mov
mov
jle
ljmp
xor
push
cmc
lea
out
in
sbb
mov
addr16
adc
sub
push
fdivrl
lock
mov
nop
sub
xchg
add
shlb
and
mov
mov
push
dec
or
push
cmc
sti
adc
movb
subl
xchg
addr16
inc
mov
sbb
xor
roll
fdivs
pop
xchg
fldt
or
adc
push
sahf
test
sub
sbb
stos
dec
insb
test
mov
mov
and
xchg
jae
icebp
or
add
scas
inc
xchg
or
ja
or
test
andl
stos
and
aaa
jae
mov
loop
stos
lods
add
daa
jmp
lar
in
sbb
mov
arpl
and
ljmp
jae
or
and
jle
adc
cli
out
mov
jp
and
mov
xor
or
dec
and
xlat
hlt
sbb
adc
out
and
andl
adc
add
dec
out
lcall
pop
cmp
out
pop
or
stos
push
ret
mov
mov
ret
sarb
repnz
and
mov
push
and
xor
sub
push
iret
adc
sub
pop
nop
push
jp
add
or
mov
enter
nop
push
push
mov
ss
mov
inc
fistpl
sbb
xchg
stc
popf
movsl
mov
out
push
sbb
leave
fdivs
in
imull
lock
adc
psubsb
sbb
adc
jl
xchg
and
pop
sti
inc
jbe
faddl
jb
daa
insl
imul
push
pop
insb
in
cs
les
cmp
movsl
mov
or
jecxz
adc
push
and
xchg
push
xchg
in
xchg
jb
nop
and
inc
jne
push
xlat
js
rol
out
lods
fadd
int
hlt
push
jno
fs
stos
cli
aaa
divb
cmp
xchg
cmpsl
mov
pusha
mov
shll
adc
xchg
xor
push
cmp
lret
or
jle
mov
pop
fidivs
roll
cmp
cmp
push
aas
rcrl
ret
sbb
inc
jne
jb
aad
mov
fs
sub
inc
adc
mov
sub
jl
mov
fcmovnbe
in
mov
push
test
pushf
repz
shll
sbb
jge
cli
or
jge
jne
popf
in
repz
jle
leave
inc
repnz
or
or
cld
ret
jbe
push
xlat
shr
subl
mov
fimuls
clc
mov
fincstp
sbb
aam
sub
insl
inc
pop
inc
call
loopne
add
lcall
icebp
mulb
sbb
and
in
ja
xor
pop
and
push
pop
std
outsl
or
out
pop
shrb
mov
js
enter
sbb
jns
adc
mov
call
jecxz
data16
ret
mov
cmp
nop
pop
push
xchg
inc
add
dec
xchg
or
jl
mull
aam
jnp,pt
nop
roll
xchg
clc
repnz
cmp
shll
add
rolb
xor
push
movsl
jno
sub
pop
sbb
jae
test
popf
xchg
cmc
push
ja
jmp
enter
stos
jo
bndstx
pushf
cltd
adc
dec
and
push
xor
xor
adc
sti
mov
push
les
jge
addl
push
push
bound
dec
cltd
imul
or
mov
jns
daa
int3
mov
filds
pop
xchg
cmp
mov
xchg
fsubl
mov
xchg
gs
dec
out
mov
inc
mov
repnz
inc
push
outsl
pop
dec
gs
pop
dec
adc
mov
sub
cmp
add
ret
movl
faddp
addr16
sub
jno
les
add
insb
loope
mov
movsb
dec
in
pop
xchg
in
fistl
and
lock
dec
dec
sarl
in
and
fisubl
mov
pop
adc
cmp
mov
lods
rorb
mov
lds
xor
test
push
ljmp
arpl
es
popl
pop
adcb
mov
into
and
pop
xchg
inc
and
mov
out
stos
add
outsb
mov
adc
jnp
cmp
mov
pushw
ja
adc
shr
cmp
jecxz
cmp
das
mov
cwtl
cmp
ret
in
out
shll
sbb
repz
rcrl
add
cmp
dec
incl
outsb
xor
push
inc
filds
outsl
gs
pop
lahf
out
sbb
pop
testb
xchg
mov
scas
xchg
lods
push
lret
ficoml
arpl
lea
ss
fstl
push
inc
int
jae
fadd
cmp
insb
push
mov
add
xchg
sub
mov
and
int3
xchg
push
and
mov
icebp
mov
bound
in
lea
call
mov
mov
pop
xchg
daa
dec
stos
jae
idivl
ss
inc
push
aas
cwtl
lods
cmp
adc
stos
mov
inc
jbe
mov
divb
sbbl
shr
sub
and
push
mov
mov
cmc
pop
cli
ljmp
mov
or
fists
sbb
mov
and
popf
sbb
mov
fistps
arpl
cmp
push
cltd
fstps
xchg
ljmp
dec
mov
or
aam
jmp
arpl
adc
in
lods
adc
dec
mov
cli
add
mov
mov
or
push
jg
out
jmp
icebp
jnp
mov
leave
loope
cmpsb
shlb
xlat
xchg
cli
mov
jae
sbb
xor
inc
fadds
push
in
dec
cmp
aas
jbe
loop
cmp
xchg
movsb
cmp
push
addl
mov
mov
in
adc
push
inc
addr16
fs
scas
push
lea
data16
into
jbe
inc
xlat
jnp
inc
jcxz
xchg
arpl
lahf
or
xor
push
adc
stc
push
push
mov
dec
loopne
je
cmp
imul
adc
xor
fistps
push
lea
cmc
mov
rol
inc
leave
xor
loopne
stos
and
dec
lret
cmp
arpl
loop
add
push
push
cld
fld
mov
mov
mov
insl
and
aas
push
pushl
dec
sti
sub
jge
fisubrl
cltd
test
and
aas
mov
mov
xor
add
cmpsb
mov
je
in
ret
rorl
xchg
dec
push
jb
xchg
xor
out
arpl
pop
fidivs
push
push
fcmovbe
pop
cmp
xchg
cmp
xor
adc
inc
lods
leave
jne
mov
mov
ljmp
lret
adc
and
mov
dec
lods
jb
pop
dec
lods
das
mov
mov
outsl
cmp
call
dec
daa
sub
push
or
sti
sub
insb
or
stos
adcb
push
jo
aaa
inc
lds
enter
aas
inc
popf
std
pop
dec
xchg
push
pop
ss
xchg
fiaddl
es
and
shl
stc
sub
sbb
jno
jae
jae
add
add
scas
mov
dec
mov
subb
xchg
sub
add
pusha
sub
std
adc
outsl
outsb
push
adc
xor
mov
mov
ret
rcr
pop
jle
ss
xor
sub
sub
frstor
les
adc
jb
mov
sarl
scas
fcomi
insl
subb
and
call
fcompl
ds
or
in
mov
mov
pop
xchg
lret
repnz
arpl
negl
xchg
pushf
cmpsl
test
mov
mov
lds
popf
sub
pushf
dec
rcll
mov
negl
cmp
cmp
stc
nop
bound
stc
and
je
inc
mov
mov
sbb
lods
pushf
sbb
leave
inc
cld
fldenv
mov
or
dec
and
dec
push
rclb
cmpb
fiadds
lds
ljmp
in
and
cmpsb
cmp
stos
xchg
mov
sub
or
xor
push
ror
mov
mov
imul
adc
mov
fisttps
xlat
pop
mov
mov
iret
imul
inc
test
repz
push
cmp
cltd
fwait
pushf
lcall
dec
mov
fnsave
jnp
lods
imul
cmpsb
outsb
mov
mov
js
andl
addr16
fistpll
jecxz
inc
sub
or
push
mov
mov
stos
pop
jmp
sub
inc
jns
and
daa
stos
std
in
sbbb
pop
mov
pop
lret
cmp
jl
stc
xchg
push
imul
sbb
sahf
fisubrs
stos
mov
fs
lahf
cwtl
movb
in
xor
mov
fadds
insb
push
test
gs
jb
ret
pusha
pushf
in
push
std
repnz
cltd
iret
dec
pushf
stc
adc
mov
jno
push
lods
sbb
sbb
sub
pop
int3
push
pop
lahf
lret
mov
xchg
add
push
shll
std
jecxz
jp
inc
mulb
lods
lea
cmp
mov
adc
sbb
add
stc
sarl
jp
pushf
cmp
dec
iret
pushf
loop
icebp
pop
lea
push
xor
stos
mov
cmp
and
shr
addr16
push
sahf
mov
cmp
mov
or
ret
jl
pop
sbb
inc
dec
fcoml
push
mov
incl
call
faddl
dec
sarb
lds
fsts
mov
push
dec
arpl
sub
jae
sub
inc
loope
xor
pop
fs
xor
cmp
jbe
dec
mov
mov
xchg
push
test
or
mov
insb
fldcw
sbb
jge
hlt
cltd
les
mov
push
lods
and
negb
mov
mov
dec
mov
and
fidivl
stos
iret
lock
insl
dec
add
xchg
out
repnz
jnp
pushl
mov
clc
dec
adc
pop
negb
ja
aaa
rcrb
xor
cmp
inc
pushf
xor
outsl
push
jmp
imul
push
jmp
push
xchg
lea
shll
in
mov
addr16
aas
mov
scas
ret
mov
ret
mov
xchg
or
out
inc
xchg
outsb
outsl
jl
enter
lods
das
dec
das
xor
call
shrl
lods
xor
push
hlt
push
in
imul
shlb
xchg
cmp
inc
inc
cmp
mov
jp
push
lods
jp
mov
adc
jns
es
xchg
push
adc
inc
xchg
ret
scas
pop
loopne
aas
in
adc
stos
mov
test
and
mov
pop
scas
jp
inc
icebp
pop
rcr
test
fcompl
and
push
dec
mov
pop
popa
clc
cmp
outsl
jg
ret
mov
adc
incl
jl
movsl
sub
mov
push
mov
inc
fisubrl
mov
cmp
fsubp
insb
cmp
jns
test
jno
mov
mov
insb
push
out
movsb
adc
push
gs
ja
cmp
pop
xchg
out
or
aad
adc
fnsave
push
adc
inc
xor
sub
in
ds
xor
add
xor
jle
flds
shlb
cmpsl
xchg
mov
inc
les
push
mov
into
into
xchg
push
pushf
clc
faddl
add
xchg
out
push
scas
mov
mov
test
pop
ljmp
sbb
mov
xor
int3
dec
sbb
jnp
ja
cmp
dec
inc
fnstcw
and
adc
negl
sbb
sub
push
sbb
xchg
adc
lea
jns
sahf
jge
xchg
test
cli
xor
les
mov
adc
cmp
out
xchg
movsb
xchg
cltd
fmuls
into
adc
jnp
xchg
inc
mov
mov
in
push
sahf
pop
hlt
shlb
xor
sub
in
mov
es
mov
xor
adc
mov
push
outsb
mov
xchg
stos
mov
cmp
xchg
and
popa
cli
pop
loopne
out
lods
jae
lret
clc
loop
stos
cmpsb
int3
sub
sbb
das
lahf
movb
aam
adc
mov
lahf
or
sub
push
cld
imul
outsl
out
stos
mov
aaa
aaa
rcr
cltd
mov
jae
xchg
xor
or
leave
adc
movb
dec
mov
into
lret
xor
xchg
push
xor
xchg
mov
mov
xchg
and
jmp
outsb
repnz
ret
adc
outsb
and
mov
std
mov
cmc
or
adc
in
push
mov
mov
push
jne
sbb
cmpsl
es
dec
test
lods
mov
data16
jae
or
rclb
or
cmpsb
ret
cmp
imul
sahf
adc
xor
jle
imul
mov
push
inc
pushf
ja
pop
dec
incl
lcall
mov
push
lock
repz
push
test
xchg
outsb
sbb
jmp
and
es
mov
loop
popf
popf
rorb
ret
xchg
push
jmp
jns
adc
sti
in
imul
push
pusha
mov
clc
leave
icebp
cmp
fldenv
push
test
fcmovne
popl
lods
cltd
gs
arpl
mov
jno
int3
pop
or
add
jb
hlt
inc
repz
and
adc
ret
sub
push
test
adc
mov
inc
push
add
mov
add
adc
push
mov
adc
pop
sbb
mov
ja
add
jns
push
cmpsb
int
scas
aas
hlt
lret
mov
lahf
movsl
iret
js
xchg
fmull
xor
pop
xchg
mov
mov
adc
mov
adc
xor
push
xor
mov
orb
int
rcr
mov
jg
repnz
adc
rcrb
loopne
inc
push
add
subb
mov
arpl
stos
fwait
pop
jp
adc
cwtl
inc
xchg
xchg
and
in
jmp
scas
sbb
outsb
inc
and
or
sbbb
in
movsl
sub
stos
dec
sbb
std
dec
sarb
out
lds
pop
and
test
add
add
icebp
or
in
mov
loopne
ds
ror
aad
aam
cwtl
sub
fsubs
inc
dec
pop
jle
out
jl
xchg
rcrl
jne
push
xor
iret
icebp
cs
negl
mov
loopne
jns
jecxz
pop
stos
pop
les
cmp
clc
out
xor
pop
jge
xor
fprem1
pop
call
addr16
inc
jo
sub
in
xchg
lret
test
add
or
sub
popa
repz
outsb
loopne
mov
xor
xor
dec
bsf
lret
aad
inc
sub
lret
cmpsb
push
jmp
bswap
and
adc
fbstp
aad
inc
jl
xor
push
dec
push
jmp
or
lret
pop
dec
mov
test
pop
arpl
cmc
lods
testl
mull
ljmp
adc
test
dec
inc
mull
shl
dec
lds
push
jne
mov
dec
sub
mov
scas
jnp
adc
push
mov
mov
jns
ds
loop
ja
lods
or
daa
sbb
aas
stos
stos
pop
xor
inc
cmp
add
mov
out
sti
push
shrl
cli
dec
xor
je
test
imul
and
test
ljmp
pop
inc
lahf
jle
and
pop
mov
add
inc
lret
test
xchg
adc
dec
test
iret
fisttpll
mov
out
test
lock
add
inc
inc
pop
mov
icebp
sbb
xor
jp
adc
imul
stos
cld
inc
inc
cmp
cmp
add
pop
mov
add
iret
subb
les
push
cltd
xorb
push
mov
loope
fistl
imul
enter
test
inc
dec
adc
xchg
xor
stos
cwtl
mov
push
xor
push
roll
lahf
mov
dec
mov
jmp
cmpb
mov
lret
jmp
arpl
scas
push
mov
sahf
in
push
push
in
push
fcoms
ret
mov
fimuls
hlt
push
mov
adc
test
cmc
call
lret
adc
arpl
repz
icebp
mov
xchg
jge
lret
lods
rorb
pop
and
add
xor
clc
xorb
cmpps
add
push
pop
jns
xchg
scas
adc
cltd
adc
cmp
les
dec
sbb
dec
xor
or
cmpsb
or
sahf
jmp
push
jg
inc
cmp
movsl
scas
jne
or
divl
adc
ja
in
pop
jno
mov
call
push
jge
mov
ja
shlb
lods
test
loopne
and
mov
sbb
inc
dec
fwait
adc
xor
adc
cltd
movsb
cmc
outsl
roll
dec
loop
cmp
in
xor
add
out
jge
enter
cmc
aas
ror
rclb
cmp
mov
aaa
cmc
xor
dec
or
jno
cmp
imull
mov
lea
and
lods
jl
fiadds
aaa
les
xchg
rclb
inc
mov
jmp
int3
inc
jae
scas
add
add
rolb
xchg
mov
cmpsl
jecxz
cmpsb
and
call
adc
dec
sbb
insb
outsl
inc
adc
je
std
xchg
push
xchg
or
sarl
divb
fmull
xor
and
stos
das
mov
dec
andb
in
addb
push
jmp
ss
push
test
mov
mov
jmp
and
daa
mov
dec
cmp
and
xchg
adc
pusha
dec
xchg
or
fisttps
mov
repnz
jecxz
dec
lret
mov
sub
pop
lret
ficompl
lods
sub
jg
outsb
mov
cltd
sub
jmp
dec
popl
in
mov
push
je
dec
mov
jecxz
push
sub
int3
test
gs
sub
rcr
cmp
mov
push
inc
das
fdivrs
xchg
cld
or
add
cmp
in
sbb
mov
xchg
sub
mov
adc
mov
inc
or
mov
mov
int3
and
and
out
cmp
pop
lcall
iret
jg
sbb
sarb
add
test
jne
or
push
push
pop
xchg
jo
dec
test
shl
pop
xor
movsb
xchg
lcall
popf
out
pushf
mov
fwait
mov
dec
ret
or
insb
push
lcall
mov
xchg
cmp
pop
pop
pop
lea
and
inc
stos
xchg
pushl
sbb
sti
gs
push
pushf
push
xchg
inc
inc
stos
es
jmp
stos
mov
cmp
pop
lret
xor
jp
hlt
cmp
xchg
shr
stc
sub
popf
mov
mov
sahf
loopne
xchg
pop
fnstsw
cmpsl
cwtl
inc
mov
sub
test
daa
jno
lahf
cmc
add
inc
dec
aaa
lds
shl
decl
imul
rorl
movl
std
mov
pop
sub
adc
loop
fidivl
mov
mov
or
mov
lds
mov
push
dec
adc
pop
fmuls
aas
sub
mov
lock
outsb
out
sbb
adc
fcomip
pop
in
mov
outsb
out
mov
inc
hlt
push
ret
mov
push
dec
cmp
pushf
shl
mov
sbb
mov
js
inc
pop
dec
pop
test
scas
ss
testb
stos
mov
and
sub
push
repnz
sub
rorl
pop
adc
add
xor
cmc
sbb
lock
cmp
dec
xchg
rcll
mov
add
push
rcll
mov
or
mov
ret
dec
pop
sti
out
inc
fnsave
pop
xor
mov
dec
xchg
fildll
mov
sarl
xchg
es
pop
loopne
std
ja
or
fcmovnu
mov
xlat
mov
jl
movsb
mov
and
pushl
lods
push
sub
add
cmpsb
xor
test
lahf
loopne
xorl
pop
cmp
test
or
mov
enter
pop
mov
and
orb
jbe
jno
lods
jmp
enter
js
mov
negb
stos
aas
fwait
lcall
cmp
adc
jnp
lret
add
sub
xor
cltd
mov
lds
call
inc
pushf
mov
jmp
cmp
mov
mov
fs
xchg
frstor
xchg
jne
push
mov
cmp
shlb
push
pusha
incl
dec
push
mov
faddl
cmc
sub
insb
push
bound
bound
cmpsl
mov
cmp
and
and
lea
add
mov
mov
fcomi
xor
out
sub
mov
nop
push
sbb
add
mov
sbb
pop
xchg
mov
adc
mov
jnp
mov
fxch
sbb
idiv
popa
fwait
cmp
leave
popf
xor
and
nop
psubd
stos
xchg
ret
addr16
enter
test
mov
mov
int3
lret
sarb
shlb
push
stos
push
adc
jg
push
push
faddl
lcall
pop
xor
adc
call
iret
jmp
cmc
lret
push
mov
ret
xchg
sub
jp
leavew
bound
jmp
lods
sbb
out
mov
call
out
stos
addr16
sub
mov
pop
dec
jecxz
jge
test
fdivrs
and
pop
pop
fcomip
pop
xor
setp
cmpb
lret
arpl
cltd
hlt
pop
aaa
popf
mov
cld
incb
fisttpll
and
repnz
nop
mov
rorb
cmpsl
inc
add
adc
bound
clc
push
sarb
or
pop
inc
loope
shrb
push
addr16
stc
mov
mov
lds
mov
aas
inc
jo
push
or
mov
sti
clc
cli
mov
xor
mov
jg
ljmp
pop
insl
cmp
mov
std
sub
fldl
out
mov
jne
clc
aam
jns
xchg
ljmp
mov
cmp
aas
add
shl
mov
dec
mov
in
fs
aam
sti
out
mov
hlt
cs
and
fstl
nop
out
repz
scas
daa
jge
outsb
inc
mov
imul
lods
jle
jo
fnstenv
shll
aaa
or
adc
add
xor
fstpl
mov
sub
inc
ret
call
jmp
insl
and
or
loopne
pop
insb
or
pop
mov
or
inc
shrb
mov
sub
incb
test
fisubrs
jecxz
movsb
nop
adc
enter
fildl
test
add
xor
inc
loope
add
jecxz
dec
sub
adc
cmp
push
xor
outsb
jg
les
lcall
je
jecxz
xchg
xchg
lcall
js
mov
addl
xchg
dec
cs
sbb
iret
inc
cld
outsl
adc
out
push
dec
dec
inc
or
shrl
lock
add
and
mov
and
push
mov
inc
test
xchg
ds
aam
je
clc
outsb
cmp
out
arpl
push
and
dec
inc
add
and
add
pop
mov
aaa
loop
std
and
mov
mov
sar
sub
jno
dec
pusha
or
test
sub
push
mov
out
and
or
mov
adc
dec
sbb
cwtl
setnp
jb
pop
add
negl
sub
mov
int3
nop
inc
int
adc
stc
lds
mov
scas
cwtl
add
loope
je
clc
adc
aaa
mov
or
test
adc
das
sbb
pop
add
mov
cli
adc
lcall
sub
scas
je
repnz
pop
nop
mov
popa
fstl
ljmp
je
mov
test
xchg
iret
xor
adc
add
inc
ret
mov
lods
xchg
popf
jl
push
adc
data16
xchg
mov
imul
or
push
mov
ret
pcmpeqw
lods
or
sbb
ljmp
cmp
les
mov
rorb
xor
orl
das
mov
shll
popf
adc
inc
pop
sarb
sbb
and
sbb
leave
mov
hlt
test
and
jmp
fsub
mov
lea
sub
add
dec
inc
stos
push
and
jb
dec
adc
mov
xchg
cmp
jo
out
out
push
push
test
imul
xchg
cmp
push
pop
scas
adc
dec
int3
es
jg
mov
adc
ds
movsb
test
xchg
out
dec
scas
dec
fsubl
pop
xchg
repnz
sar
mov
sbb
jb
mov
jbe
push
mov
jl
jo
stos
faddl
out
je
xchg
add
sub
mov
xchg
jle
repnz
imul
adc
lahf
mov
mov
scas
cld
leave
inc
outsl
nop
mov
mov
sub
sbb
arpl
cmp
add
push
mov
sbb
cs
add
push
sti
jp
out
mov
popa
push
pop
inc
lds
dec
dec
add
push
lret
int
imulb
stc
sub
movsb
xorl
fsubrl
test
repz
mov
leave
loopne
lock
lea
je
loop
rcrl
lds
das
sbbl
shll
sbb
adc
fucomip
xchg
les
adc
leave
test
testl
add
nop
jae
shl
outsb
jecxz
and
inc
pop
dec
push
lcall
nop
or
rcr
cltd
fmul
fcomps
mov
frstor
in
inc
shlb
stos
cmp
cmp
add
jno,pt
ret
insl
push
subl
mov
inc
mov
sub
add
aas
jecxz
mov
and
repz
sahf
jae
sub
xchg
into
inc
das
xchg
xchg
pop
inc
dec
jo
jbe
mov
mov
inc
dec
cld
pop
mov
aam
rorb
outsb
rep
sbb
lret
shrb
gs
gs
and
or
pop
shlb
ss
add
adc
lds
sbb
fdivrl
out
int
adc
pushf
cmp
mov
cs
stc
sbb
mov
pop
pop
add
jle
clc
iret
test
ja
shlb
test
rcrb
and
rorl
sarl
ret
and
xor
aas
dec
sbb
pushf
jae
pop
mov
lds
jg
sarb
jnp
out
test
jno
outsb
fwait
or
xor
sub
loopne
mov
jns
dec
xchg
cmp
add
aad
adc
stos
add
daa
jne
add
imul
into
cmp
cmpsl
gs
repnz
loope
divb
testl
inc
jno
jecxz
adc
add
dec
adc
pusha
fwait
ja
gs
mov
rorb
xchg
push
mov
mov
and
std
imul
aaa
fisubl
and
dec
lahf
sbb
cmp
daa
jo
dec
sbb
mov
mov
stos
into
pushf
inc
bound
cmp
aam
push
push
arpl
pop
dec
push
sub
mov
scas
add
xor
xchg
sub
jp
cld
lahf
and
loope
jbe
gs
je
cli
inc
push
mov
sub
jo
in
jae
and
xchg
es
jns
lcall
dec
add
scas
jle
dec
xchg
jecxz
push
ficomps
stos
inc
imul
sub
inc
and
pop
sub
dec
test
in
in
mov
aaa
jecxz
int
pop
or
sbb
mov
mov
inc
inc
xor
and
repnz
jnp
push
jmp
nop
sbb
outsl
jecxz
out
jno
mov
mov
lock
popa
in
in
adc
ret
jmp
js
lea
cltd
sahf
push
into
imul
sub
imul
pop
adc
xchg
fs
xor
push
cmpb
cltd
enter
xchg
sub
dec
mov
fisttps
push
and
adc
xchg
notb
inc
jmp
in
hlt
xchg
test
mov
pop
cmp
test
fdiv
inc
add
insl
and
les
xlat
lret
int
scas
jnp
xor
pop
lcall
inc
das
sbb
insb
gs
andb
stc
xlat
repz
lcall
xchg
xchg
push
jnp
inc
out
mov
dec
mov
sbbl
loop
inc
aad
roll
call
dec
aas
dec
mov
xorl
jl
push
ret
and
cmpsb
pop
loop
adc
test
jae
ljmp
mov
xchg
dec
adc
mov
sbb
in
inc
adc
mov
out
pop
dec
sbb
or
iret
push
leave
mov
bound
loopne
mov
pushf
std
shll
sbb
mov
repz
push
test
scas
je
out
inc
dec
sub
shlb
into
pop
sub
shl
dec
inc
mov
test
mov
sub
dec
popa
cltd
dec
shrl
lcall
popa
loope
jne
adc
pop
gs
push
lret
out
insl
sub
mov
rorl
test
ja
mov
pusha
adc
repz
fsubrl
push
cli
or
out
inc
or
inc
mov
out
mov
mov
test
xchg
inc
mov
mov
repnz
or
mov
loope
movsb
mov
lock
cmp
fdivrs
fnstsw
rcll
sbb
xchg
push
cli
mov
adcl
lock
pop
mov
nop
push
sub
inc
or
or
ds
imul
adc
pusha
inc
std
sbb
add
add
cwtl
aas
dec
push
adcb
mov
fstpt
dec
cmpsl
inc
insl
cltd
scas
pop
dec
mov
xchg
inc
push
lock
xchg
rcrb
icebp
das
push
cmp
push
out
xlat
sbbl
cli
in
dec
xchg
js
enter
mov
xchg
dec
pop
xchg
inc
mov
sarb
mov
and
lds
or
adc
pop
jb
jl
sbb
cwtl
xchg
stos
xor
dec
mov
dec
xchg
pop
jo
or
inc
shrb
pop
cmp
or
lock
xlat
mov
pop
and
and
aam
sub
cmc
cs
mov
jnp
pushf
cmp
cmpsl
dec
jnp
sti
test
push
lahf
inc
movsb
jecxz
es
rorl
in
or
mov
sub
xlat
push
mov
fldln2
cs
add
mov
scas
inc
dec
inc
mov
ret
lahf
pop
sti
ja
imul
dec
clc
push
sbb
rcrl
mov
fwait
and
xchg
ljmp
out
sbb
mov
rol
add
fildll
pop
loopne
ret
jecxz
enter
jl
sbb
lods
xor
cmp
adc
in
xor
sbb
add
leave
insb
stc
fs
stos
pushf
mov
sbb
test
jg
cmc
mov
sub
or
insb
ja
test
js
xorl
mov
sbb
inc
cmp
stos
nop
mov
rcr
dec
arpl
out
repz
mov
dec
jge
mov
subb
mov
cs
clc
sar
aad
popf
das
lret
pop
arpl
inc
xchg
add
pusha
ret
lahf
xchg
inc
jp
ja
rcrl
scas
add
ljmp
mov
xor
rclb
aas
adcl
je
or
add
xor
mov
cld
insb
insl
lea
movsb
or
pop
jae
movsb
dec
fucom
mov
shll
xchg
xor
loope
inc
aad
decl
daa
imul
and
inc
aam
pushl
dec
dec
aaa
js
repnz
jg
and
pop
sub
push
les
lods
es
mov
out
stos
add
mov
push
mov
or
lret
cmp
jnp
adc
jle
xchg
cmp
sbb
xchg
push
cs
lahf
inc
add
mov
dec
mov
sarl
jmp
ljmp
jg
jmp
test
adc
sbb
cs
in
mov
cmp
mov
sbbb
pop
and
xchg
pop
or
sub
shl
and
das
pop
int
sbb
ret
shll
jno
jp
and
je
mov
icebp
dec
inc
loopne
adc
fnstsw
or
daa
cld
push
lods
repnz
or
shrb
adc
xlat
and
mov
movsl
fwait
daa
sbb
push
xchg
insl
xor
stos
mov
inc
test
psubusb
push
sti
test
icebp
push
jb
xor
sub
sbb
xchg
lret
shl
movsb
mov
hlt
dec
jne
test
scas
leave
adc
stos
je
or
xorb
cs
mov
sub
push
xchg
fs
jnp
mov
push
imul
cltd
dec
push
pop
dec
inc
roll
dec
cmp
pop
shl
jbe
clc
xchg
mov
pop
cs
lods
xor
and
push
push
sbb
repnz
jnp
into
sbb
dec
adc
ljmp
imul
ljmp
in
pop
outsb
call
dec
addr16
dec
ljmp
fidivl
pop
clc
sbb
xor
in
jno
push
and
outsl
pop
or
mov
dec
div
pop
daa
stos
outsl
aaa
lahf
mov
shrb
sbb
push
je
ret
call
outsb
add
fisttpll
aam
mov
in
mov
cmp
ja
pop
icebp
sbb
or
mov
mov
int
inc
cmp
fnsave
addr16
jle
sti
int3
adc
fcomp
hlt
lret
pop
xlat
adc
and
lock
test
inc
bnd
repnz
add
ja
clc
mov
lea
popa
shlb
pushl
in
in
cwtl
es
cmp
imul
test
xchg
pop
ja
mov
mov
das
shl
int
mov
xor
lods
stos
sarl
adc
jmp
xchg
xor
jae
mov
add
jae
neg
pushf
mov
push
jno
or
sub
jmp
jle
daa
mov
shlb
insl
ds
es
cltd
add
lods
xchg
loopne
mov
fsubs
push
mov
dec
jb
insb
mull
mov
sbb
push
pop
cmpl
mov
inc
dec
cmc
ss
mov
cmp
mov
dec
xchg
mov
and
lods
mov
xor
xor
shll
jnp
loop
lea
mov
mov
mov
inc
fistps
dec
lret
les
sbb
ja
sbb
lods
sub
jmp
cmpsb
inc
cli
mov
sbb
mov
pop
addr16
jns
bound
xchg
outsl
shrb
aas
xlat
ret
les
dec
sbb
ja
fdivl
pop
dec
bound
xchg
jl
ret
or
mov
push
and
jmp
int
std
mov
je
enter
xor
xor
dec
mov
sbb
dec
dec
mov
stos
pop
and
mov
into
ds
push
imul
or
bound
es
fadd
pop
xchg
push
jp
and
mov
mov
aad
testb
pop
push
mov
jge
pop
xchg
inc
ja
dec
outsb
inc
dec
cmp
pushl
arpl
adc
or
lea
mov
dec
push
aaa
cli
jp
or
jmp
push
in
aam
xchg
push
push
es
xchg
bound
inc
push
pop
es
in
jle
cld
jg
clc
aad
sbb
mov
jge,pt
sub
das
scas
loopne
mov
sti
addr16
cs
inc
lret
int
inc
adc
push
dec
pushf
pop
push
add
push
fstpt
mov
dec
adc
xchg
mov
mov
sti
xchg
pop
add
ficoms
push
scas
fimuls
jmp
or
xchg
xchg
into
lret
fadds
imul
push
cmp
outsl
js
xchg
rcll
rol
jns
mov
loopne
lret
sti
push
out
insl
mov
lods
dec
jmp
inc
sub
adc
aad
inc
cwtl
leave
call
mov
jns
pop
std
push
enter
cmpsb
std
int3
bound
pop
jmp
and
mov
cld
pop
cmpb
ret
cmpsb
sub
pop
push
xchg
sub
jmp
xor
sbb
push
gs
stos
cltd
mov
fildll
sbb
jmp
enter
mov
pop
pop
aam
not
pop
mov
daa
data16
mov
in
add
loope
push
shlb
sub
and
add
aam
ljmp
dec
pop
cmp
adcl
xchg
xchg
mov
inc
cmc
gs
int
in
cmc
mov
sbb
ret
dec
rclb
mov
dec
enter
dec
cmp
sub
divl
dec
and
js
aam
adc
mov
cmp
inc
jns
jg
iret
lcall
inc
push
mov
mov
xor
jge
adc
je
or
cmpsl
adc
out
call
cmp
cwtl
jae
addr16
mov
mov
inc
pushl
push
pushf
ljmp
mov
push
mov
dec
push
clc
rcll
jo
sub
je
add
jo
aam
lret
imul
pop
mov
sahf
orl
push
jo
loop
js
enter
mov
aas
sbb
mov
jmp
inc
fsub
dec
push
scas
scas
mov
call
mov
and
jmp
loop
jae
cmp
fldl
imul
jge
cmp
mov
roll
dec
mov
test
sub
pushf
push
mov
repz
enter
rcl
pushf
jmp
bound
jmp
das
or
scas
push
es
push
adc
shrb
ret
and
pop
cmpsl
xchg
ret
jmp
push
adc
mov
int
xlat
adc
ljmp
adc
iret
rclb
out
call
push
mov
add
ljmp
xchg
push
es
sub
xor
cli
inc
ret
jge
push
inc
sahf
cmp
or
dec
mov
dec
xor
in
xchg
push
dec
and
cmp
ss
or
addr16
ja
dec
call
jle
cmc
sarl
ljmp
movsl
sbb
jns
rcr
mov
into
jbe
add
sbb
pop
mov
fisubrl
lcall
push
pop
cmp
lret
fbld
xchg
sbb
dec
mulb
xchg
or
mov
mov
pop
dec
pushf
in
mov
sbbl
adc
insl
lahf
faddp
js
pusha
inc
dec
mov
in
xor
pop
mov
add
test
jo
xchg
popa
arpl
xor
jb
je
mov
into
in
leave
dec
imul
jmp
xchg
cmp
mov
inc
lret
mov
mov
pusha
int
xchg
in
mov
push
scas
mov
pop
orb
inc
sbb
movsl
andb
dec
lods
out
in
and
xor
adc
aaa
xchg
aaa
sub
add
lds
cmc
sbb
movsb
popa
jns
or
sahf
xchg
std
dec
mov
add
mov
lahf
hlt
fnsave
in
mov
insl
push
add
fucomi
jl
mov
call
fidivl
push
xchg
data16
inc
dec
repnz
clc
xchg
sub
loopne
insl
les
add
xor
and
xchg
mov
cmc
push
push
inc
mov
int
aam
mov
rol
add
add
xchg
fucom
xchg
lods
cmpsb
sub
and
jge
stos
aas
fwait
daa
lcall
out
rcr
or
repz
repnz
pop
stos
xchg
je
pop
in
dec
pop
jns
repz
push
mov
push
xchg
out
inc
int3
pop
or
xchg
daa
jge
sbb
cli
inc
mov
cmp
pusha
pop
inc
inc
inc
dec
inc
lret
stc
push
inc
das
sti
lcall
mov
mov
out
mov
stos
mov
inc
jle
lods
xor
lds
cmc
notb
jnp
xor
addr16
outsb
sbb
lcall
adc
and
enter
cmp
outsl
es
fwait
ret
repz
mov
inc
lock
cmp
mov
xlat
mov
fsubrl
jne
inc
adcl
jge
mov
into
je
xchg
dec
jnp
jo
xor
test
push
cmp
bnd
xchg
call
sti
rclb
imul
pop
addr16
mov
push
sub
mov
push
loopne
inc
cmc
nop
cmp
pop
and
popa
add
xchg
or
ja
ret
les
jp
addb
js
mov
jne
bound
dec
and
mov
xor
mov
fists
fdivrs
fcomp
xorb
fstl
loope
shl
sbb
xchg
inc
iret
testb
lret
hlt
push
lret
test
xchg
daa
out
mov
incb
lods
add
dec
loop
imul
and
notl
jns
mov
popa
mov
fdivs
es
inc
divl
cmpsb
mov
jb
or
icebp
popa
jecxz
pop
push
mov
push
dec
mov
test
mov
inc
jg
lahf
inc
push
insb
fstpl
jns
adcb
dec
or
stos
or
push
aaa
add
mov
push
test
or
sbbl
lahf
xchg
ja
or
push
fisttpll
pop
clc
jp
xorl
or
mov
adc
jnp
or
cmp
sbb
xlat
sub
xchg
mov
repz
and
sbb
shl
pop
dec
push
shrl
cmpsl
data16
cmpsb
ficompl
subl
sbb
inc
pushl
inc
outsl
and
sub
mov
cmpsl
jp
out
jnp
mov
inc
sub
enter
adc
push
aad
jmp
inc
loop
das
xor
ret
and
pop
mov
clc
jne
inc
push
cmp
push
mov
mov
outsl
jb
call
ljmp
pusha
dec
pushf
das
add
insb
jp
sbb
push
add
adc
decl
cltd
inc
fsts
data16
mov
es
daa
jne
movsb
test
push
mov
jno
xor
sbb
jns
les
or
fnstenv
mov
jo
xchg
pop
roll
push
mov
jge
enter
sahf
mov
aam
scas
rorb
mov
aas
popa
lock
fstps
fstpl
add
dec
jo
fsubs
out
adc
lret
pop
out
bound
ror
push
fisubrl
loop
hlt
push
push
mov
lret
or
and
enter
ss
and
xchg
into
push
fmuls
add
jp
out
sbb
scas
mov
jmp
push
cwtl
mov
adc
sbb
out
in
loopne
add
mov
sbb
sub
fdivs
stc
mov
imul
jo
test
inc
or
icebp
sub
out
sets
dec
mov
jne
aad
mov
int3
or
cwtl
ss
cmpb
fwait
xor
and
add
inc
jle
imul
jp
push
pushf
rol
les
or
mov
mov
testb
icebp
and
xchg
jecxz
mov
xchg
dec
scas
mov
pushw
adc
add
adc
mov
lahf
inc
push
pop
jns
loope
gs
jnp
int
xor
jmp
mov
xchg
orl
repnz
and
test
mov
jg
xor
cli
in
jae
in
test
aaa
mov
mov
loope
imul
or
popf
jb
jmp
xchg
mov
daa
push
and
imul
xchg
pushl
inc
lcall
stos
bound
or
inc
ror
incb
add
sub
pop
das
jae
mov
adc
jae
cs
in
or
pop
dec
jmp
pop
xor
jnp
lret
clc
mov
in
rcrl
out
clc
or
mov
pop
dec
sub
in
bnd
sub
mov
mov
sbb
sub
imul
push
lret
popf
cmp
sbb
xor
xor
xor
pop
jecxz
nop
xor
mov
shrl
pop
xor
pop
mov
int3
inc
addr16
and
cltd
test
repnz
dec
mov
inc
ss
stos
movsl
mov
cmp
mov
xchg
decb
add
jmp
xchg
push
arpl
adc
int3
repz
out
cwtl
test
ljmp
inc
leave
mov
jp
nop
lret
cli
sbb
ret
jecxz
cmp
jecxz
xchg
pop
je
pop
mov
sahf
rorl
xor
outsb
jns
cmc
inc
lahf
repnz
dec
mov
mov
pop
ret
fs
dec
cwtl
inc
test
xchg
cmp
shll
sub
add
lock
insb
daa
cmp
jns
jge
xor
jle
clc
adc
mov
ds
mov
sub
jle
sbb
gs
push
xchg
in
or
push
xor
shrb
int3
lods
cmp
cmp
imul
jp
xor
jne
ljmp
rcll
rorb
cwtl
dec
push
and
mov
mov
ss
sub
sbb
pop
sbb
subb
cwtl
dec
pop
cmp
lds
sbb
fsts
repz
mov
pop
out
mov
jp
out
jp
sbb
pusha
mov
arpl
fwait
pop
outsb
xor
or
js
ja
mov
icebp
fwait
jmp
push
into
dec
mov
scas
orl
mov
jae
popa
add
sbb
xchg
das
mov
and
mov
test
insl
daa
xor
mov
movsl
jns
mov
inc
aaa
mov
add
add
jl
mov
sub
outsl
mov
jne
inc
orl
scas
cmp
add
ja
bnd
mov
stos
or
jo
insl
insl
popl
push
inc
mov
sub
push
push
shrl
inc
movsl
push
push
pop
addr16
cmc
fisttpl
inc
dec
les
ret
xchg
testl
pop
add
mov
das
mov
push
sub
xor
enter
jns
mov
enter
mov
add
dec
mov
inc
pop
jne
repnz
add
pop
or
push
mov
test
sbb
xchg
outsb
cmp
int3
push
ret
cmpsl
mov
or
cmp
or
pusha
lahf
enter
pop
or
push
cmp
movsl
sbb
sti
add
mov
mov
rcrb
mov
mov
mov
dec
ret
cmp
dec
cmpb
xor
cmp
daa
xchg
jecxz
test
aad
faddl
sbb
xchg
fcoms
mov
push
mov
mov
ss
adc
int3
mov
lods
ljmp
add
push
lcall
and
rcrl
push
int
orb
jl
jecxz
sub
lret
icebp
fdivp
outsl
in
pop
add
push
daa
adc
int3
push
xchg
and
fmuls
insl
mov
stos
push
int
dec
adc
sub
lahf
adc
adc
jle
imul
mov
mov
push
cmp
sub
and
adc
cld
mov
fistps
nop
jbe
loope
pop
cmc
test
dec
fs
mov
sub
pop
faddl
mov
or
add
cmpsl
xchg
movsl
xor
sbb
mov
push
push
add
dec
dec
jo
mov
ljmp
fdivs
and
adc
loopne
sub
pop
loop
mov
or
dec
push
fwait
movsb
sub
in
incl
sub
or
mov
push
inc
cmp
sbb
jle
add
cltd
mov
push
jne
out
and
mov
hlt
add
pop
lods
or
mov
mov
cmc
xchg
in
leave
sbb
jbe
movsl
cmp
scas
push
sbb
je
jle
pop
shll
jl
xchg
mov
ret
jne
push
sub
fsubp
out
sbb
iret
ljmp
pop
mov
pop
push
lret
or
addl
mov
sbb
cmpsb
ja
test
push
jb
inc
cli
dec
push
inc
sub
pop
mov
sbb
mov
in
inc
xchg
push
sub
cwtl
and
xor
std
fcoml
cmp
sub
push
xchg
jg
inc
add
mov
repnz
bnd
arpl
mov
hlt
insl
out
mov
add
test
cmp
jge
sub
sbb
shll
lret
xchg
ljmp
inc
ja
je
mov
push
push
jp
shll
pop
aam
add
insl
js
sar
xor
shrb
roll
inc
push
jg
sub
fistpl
push
aaa
sub
rcll
scas
sub
pop
xchg
jge
ret
repnz
pop
lahf
call
bound
scas
xchg
outsl
cmp
or
fnsave
cmpsl
inc
popa
movsb
adc
and
adc
mov
rclb
fidivrs
pop
jmp
push
enter
cwtl
inc
out
testb
sub
shlb
setp
pop
pop
cmpb
outsb
in
sbb
jb
sahf
xchg
mov
mov
cltd
ds
and
and
adc
pop
lods
push
pop
mov
adc
xchg
dec
orb
xlat
loop
pop
add
lahf
daa
orl
mov
lods
mov
push
mov
jns
xchg
das
or
xchg
jmp
mov
fistl
filds
jb
sub
scas
jo
and
aam
xchg
shr
or
xor
mov
out
cmpsb
in
sbb
out
inc
sub
xor
cmp
jb
inc
bound
stc
push
scas
xor
dec
imul
inc
divb
addr16
neg
fsubl
xor
scas
sbb
jns
movsb
or
and
outsb
mov
dec
push
aad
inc
cmp
data16
fnclex
mov
cli
loope
sub
jb
jae
adc
add
lahf
aad
out
sahf
cmpsl
jmp
inc
testl
divl
cmp
test
push
jb
jns
dec
push
call
nop
stos
sti
es
fcmovbe
iret
or
jle
or
lock
inc
roll
cmp
cmp
add
mov
leave
mov
cmp
scas
xlat
inc
dec
fisttpll
pop
pushw
data16
mov
add
rcrb
fwait
xchg
lcall
cmpsb
gs
cmp
movsl
and
sbb
leave
sub
stc
arpl
cmpsl
sub
mov
ret
fcoms
jae
fdivrp
int3
xchg
jnp
mov
fucomip
lcall
ret
mov
lcall
jecxz
sbb
sahf
addr16
inc
shll
rcll
dec
xor
ljmp
mov
mov
outsl
adc
and
test
jl
leave
addr16
ljmp
cmp
ss
fs
and
sbb
mov
movsl
mov
sbb
test
inc
insb
bound
inc
leave
mov
jbe
lret
movsb
mov
push
jl
and
xchg
xor
sub
mov
test
inc
test
faddl
outsl
add
jle
mov
shlb
adc
jmp
nop
pop
js
outsl
mov
fwait
jb
jmp
mov
fdivl
or
stos
scas
ss
les
mov
mov
adc
sahf
push
inc
cmp
loop
jae
cld
movsb
mov
and
and
add
mov
bound
in
stos
sub
pop
nop
in
rep
and
pushf
popa
pop
cmp
mov
rclb
pushf
arpl
outsl
mov
mov
loopne
imul
out
es
test
or
loop
lea
pushf
pop
in
pop
sbb
test
push
arpl
sub
imul
pop
nop
jno
or
inc
jmp
cmp
fiaddl
add
jbe
imul
cmp
loopne
adc
push
jle
jge
jae
cmp
hlt
imul
cmp
cmpsb
lock
les
out
sbb
cmpsl
out
in
xchg
and
mov
cmp
clc
xchg
jnp
enter
adc
and
cmp
subb
xchg
pop
outsl
mov
sbb
and
xchg
cmpsl
push
sub
mov
jae
lods
jle
mov
sti
nop
pop
lret
jp
jl
inc
imul
nop
xor
xor
jae
jns
mov
jns
xchg
orl
sub
mov
adc
and
push
mov
adc
sbb
pop
cmpsl
enter
sbbb
arpl
or
test
jp
jecxz
push
call
lods
xchg
xor
jbe
sub
outsb
push
or
mov
push
dec
sarl
mov
ja
cmpsl
mov
adc
pop
sbb
popa
test
xor
xchg
mov
adc
fidivrs
push
xchg
sarl
sbb
jg
inc
lods
repnz
lods
movsl
insb
imull
or
test
sbb
call
xchg
jo
aas
inc
inc
jo
in
adc
jae
jns
in
enter
and
inc
and
jb
movsl
dec
dec
cmp
or
ljmp
or
iret
insb
push
dec
fsts
sub
and
xchg
xchg
orl
xchg
int3
inc
sti
jg
xchg
nop
mov
jae
out
pop
cltd
ja
and
loopne
test
enter
call
jbe
aas
add
jge
pop
das
mov
or
pop
lret
mov
push
fstp
jmp
in
or
or
imul
jp
sbb
mov
mov
mov
ret
test
js
ljmp
out
fsubs
mov
add
pushf
in
pop
add
in
fadds
jle
and
sbb
adc
pop
test
es
sbb
inc
fwait
cmpsb
and
push
sbbl
push
int
or
bound
adc
popf
xchg
mov
movl
xchg
fldl
loop
aam
adc
jge
mov
mov
sub
xor
mov
stos
sub
cwtl
jae
adc
ds
inc
cld
inc
ret
fmuls
pop
jbe
jne
pop
das
insl
imul
movsl
push
shll
mov
dec
and
imul
inc
lods
push
sub
push
mov
rcll
mov
pmuludq
adcl
in
lahf
dec
push
sub
fisubs
into
add
lcall
out
xchg
repz
sub
jecxz
jns
push
xchg
cwtl
adc
xor
fwait
xor
outsl
rolb
push
cmp
xchg
shlb
movsb
xchg
add
ds
cmp
incb
repz
les
frstor
sbb
inc
addr16
xchg
jl
sbb
sbb
jmp
xlat
pop
nop
out
cltd
mov
add
or
or
sbb
and
mov
or
test
cmp
push
mov
rclb
out
jge
and
mov
or
pop
dec
mov
add
dec
fldenv
pop
popf
xchg
test
dec
in
cmp
cmpsb
or
popa
aaa
movsl
inc
leave
repnz
sbb
add
popa
push
xchg
nop
mov
iret
and
pusha
mov
lret
jbe
addl
scas
std
stc
imul
sub
sub
movsl
push
xchg
jecxz
push
jg
ret
sti
arpl
mov
enter
cld
inc
insb
outsl
movb
push
sbb
ror
int
cmpsb
cmc
mov
scas
xchg
mov
cwtl
push
sti
test
jg
fldl2e
jnp
push
in
mulb
insl
insl
lea
imul
mov
dec
lods
xor
in
das
nop
jae
mov
mov
test
mov
and
cmp
xor
xor
into
add
shr
shrb
mov
add
fcompl
xor
lahf
imul
push
not
inc
test
jle
sub
xchg
pusha
mov
push
aas
imul
add
les
mov
mov
sahf
pop
mov
mov
fisubs
outsl
jge
stos
fisttpll
testb
icebp
mov
dec
loope
pop
xchg
imul
vpmacsww
repnz
call
jnp
and
sbb
into
pop
jb
inc
mov
loopne
jmp
add
xor
lret
jb
adc
loope
sbb
shll
fnstenv
inc
pusha
mov
mov
lret
aaa
push
fwait
sub
push
or
imul
push
push
lods
mov
cmp
pop
imul
and
jmp
inc
ss
test
lea
mov
mov
pop
call
and
icebp
aad
inc
mov
fstps
mov
aas
and
cld
xor
jg
push
arpl
sub
test
sub
bound
inc
pop
mov
sarb
add
jo
movsl
pusha
fmul
js
outsl
repz
pop
fcomip
gs
dec
adc
ja
mov
outsb
mov
or
clc
xchg
jg
popa
adc
sarb
or
scas
xor
cmp
unpcklps
lret
popf
pop
xchg
pop
cmp
mov
and
call
inc
xchg
push
js
inc
mov
and
orb
inc
mov
or
test
xchg
ror
pusha
push
loope
lods
out
sbb
aam
lret
inc
cmpsb
jp
scas
fsubp
in
jno
mov
leave
push
and
outsl
int
inc
cmp
dec
cltd
cmc
pop
adc
ja
je
lods
mov
sbb
test
and
push
mov
mov
push
and
xchg
clc
adcl
js
inc
or
xchg
mov
sbb
xchg
dec
mov
cmp
xchg
add
cli
int3
push
mov
mov
mov
mov
jno
es
jns
sti
cmp
or
int3
dec
sahf
scas
push
out
pop
loope
or
push
adc
lcall
ja
daa
xchg
xor
notb
stc
add
cmpsb
and
fcmovnu
mov
and
sarb
out
lcall
lods
push
sub
cmp
jecxz
lods
mov
call
ss
out
lea
adc
negl
ret
in
jae
jp
pop
call
sarl
push
in
rcl
dec
mov
je
sbb
movlps
leave
cmp
cs
ret
or
fcoms
cmp
jno
outsl
fisubrl
std
push
inc
sub
dec
arpl
mov
aaa
jl
js
and
ficompl
xor
loop
jnp
mov
inc
gs
and
int3
out
add
rolb
test
out
sti
or
mov
dec
fdivl
mov
sub
mov
test
pusha
mov
hlt
inc
stc
stc
rorb
fildl
out
mov
scas
xor
roll
pop
xlat
shrl
xchg
mov
dec
push
sub
push
ret
lods
inc
dec
mov
sub
push
sbb
push
jmp
push
dec
mov
cmp
push
sub
adc
xor
shl
aaa
in
in
xchg
xor
mov
adc
mov
popa
jmp
mov
inc
mov
pop
movsl
push
mov
mov
out
inc
xchg
or
fmuls
sahf
aas
or
sbb
and
insb
xor
scas
ret
dec
jge
xchg
and
push
lods
lret
daa
add
and
dec
jge
clc
lock
arpl
pop
push
cmp
fcoml
push
push
mov
jmp
add
test
jp
sbb
cltd
ljmp
or
push
loope
bound
rolb
sub
sahf
outsb
adc
ficompl
pop
orl
addr16
mov
pop
rorl
or
or
jg
xor
and
or
sub
xchg
stos
sti
cmc
pop
movsl
pop
out
andb
loop
mov
inc
loope
out
fidivl
or
vhsubpd
mov
add
push
xor
pop
jmp
dec
xor
lcall
dec
aad
pop
sbb
cli
shlb
pop
aaa
addb
sti
mov
adc
lcall
ret
divb
mov
add
and
mov
subb
and
or
dec
out
cmp
in
test
insb
mov
inc
pop
loop,pn
inc
cmpl
push
sbb
stc
push
dec
cmovns
jne
push
add
adc
fwait
adc
cmc
sbb
sti
sbb
mov
xchg
xchg
cmp
mov
shll
and
push
jnp
sbb
fwait
inc
add
mov
or
aam
jno
je
dec
adc
or
out
insb
lret
push
add
mov
jg
pop
call
icebp
fcoms
mov
in
scas
hlt
mov
nop
mov
dec
in
loope
xchg
mov
scas
mov
mov
xchg
shlb
mov
roll
sbb
aad
add
movsl
dec
sub
test
add
pop
inc
pop
fadd
andb
inc
dec
xchg
mov
arpl
jle
aas
dec
in
addl
call
call
pop
jle
fstp
dec
mov
mov
repz
adc
inc
out
ss
jnp
xchg
rcrw
inc
mov
loop
ja
xchg
je
mov
pop
adc
dec
out
or
jmp
lret
scas
lods
int
sbb
pop
inc
outsb
cmp
int3
and
mov
repnz
movsl
push
ja
push
pushf
xchg
jl
push
and
pop
mov
dec
fwait
pusha
lds
call
out
mov
pushf
out
add
ret
mov
jge
mov
call
jp
loop
pop
and
lcall
cwtl
sbb
xchg
adc
stos
hlt
pop
out
push
mov
stc
pop
ds
in
dec
outsb
dec
scas
lcall
rclb
fnstcw
jno
mov
sbb
dec
mov
xchg
loopne
std
dec
jno
xchg
scas
cld
mov
xchg
out
pop
int3
dec
aas
gs
jne
jo
sbb
mov
sbb
roll
mov
mov
jo
cmpsb
fcoms
icebp
dec
lret
fildl
daa
fcompl
sbb
push
xchg
push
dec
jo
cmc
mov
popf
cmp
fs
mov
sbb
jnp
cmp
movsl
dec
sbb
mov
les
movsb
mov
jp
xor
inc
add
mov
subb
lds
gs
push
cmp
fldt
popf
arpl
and
nop
xchg
lahf
xchg
push
xchg
xchg
cmp
clc
imul
inc
pop
mov
sti
js
imul
dec
sti
aam
inc
add
es
adc
mov
dec
ret
cmpsb
fsubrl
data16
insb
enter
repnz
jne
in
pop
outsl
jge
mov
mov
mov
jecxz
xor
loopne
adc
push
mov
fidivrl
test
lock
inc
dec
mov
xor
lcall
jae
cmp
add
cmp
mov
out
sbbb
cli
insb
shlb
mov
adc
jl
ret
loope
mov
inc
mov
cmpb
pop
cs
adc
and
mov
inc
pop
lcall
aam
int
andb
pop
mov
jb
fnstcw
nop
jecxz
sbb
stos
scas
push
mov
push
shll
jmp
cmp
call
cmp
inc
jno
pusha
or
out
je
pop
jo
mov
xorl
hlt
add
pop
test
movsb
xchg
pop
adc
sahf
jmp
push
insb
jnp
mov
ja
popf
add
mov
jl
int
pushf
divl
fwait
data16
mov
add
aad
push
pop
mov
mov
sub
inc
cmp
call
stos
push
pop
lds
mov
loopne
xor
sti
lea
stos
xchg
ja
aas
xchg
js
jmp
jg
mov
jg
in
push
mov
aas
push
push
jmp
mov
or
jo
mov
mov
pavgw
fadds
in
push
sbbl
test
mov
jge
or
addr16
push
ror
sub
xor
sahf
sbb
mov
cwtl
in
fidivs
les
pop
aad
std
push
xchg
testb
push
leave
add
push
xchg
mov
mov
inc
ret
je
sbb
adc
pop
cmpsb
xchg
or
ljmp
cmp
push
ss
movsb
inc
loop
repnz
fiadds
pop
aas
cmpsb
sub
sbb
or
scas
and
sbb
sub
or
xchg
aad
mov
xchg
rolb
notl
and
imul
xor
aas
pusha
pop
cmc
leave
scas
arpl
adc
dec
jl
sub
fbstp
aad
xlat
jnp
jmp
dec
test
jmp
inc
aad
js
jle
sub
popf
add
roll
adc
lcall
xchg
jmp
add
sahf
xor
aad
cmp
daa
sub
fisttps
movsl
arpl
jo
inc
mov
testb
dec
hlt
push
sbb
movsl
sbb
xchg
pop
icebp
test
mov
pop
inc
cmp
mov
mov
repnz
sarl
pop
or
jge
mov
add
movsl
cmpsb
into
test
out
adc
push
int
add
push
jmp
test
sub
and
dec
insl
aas
icebp
sti
dec
pop
dec
js
fisubs
mov
xchg
fwait
stos
in
ss
cs
icebp
mov
xchg
fbld
inc
scas
imul
lcall
cmpsl
out
jecxz
add
add
pop
int
sbb
push
in
ja
scas
loope
dec
and
pop
data16
enter
test
stos
jb
push
pop
mov
fadd
movsb
xor
mov
mov
in
push
and
fwait
loope
outsl
inc
std
ds
cs
cld
scas
and
test
movsb
xchg
jg
ljmp
cmpl
mov
add
dec
call
xor
cmp
sbb
mov
insl
inc
jns
mov
popf
pop
jmp
mov
mov
dec
mov
sub
mov
pop
es
pop
test
jl
outsl
xor
xchg
lods
stos
scas
fistl
and
sbb
out
je
push
jns
sar
push
call
xor
xchg
push
cmpsl
push
adc
dec
mov
stc
mov
xchg
lret
cwtl
faddl
xchg
sbb
addl
enter
inc
pushf
mov
cmp
aaa
and
das
test
popa
dec
adc
jecxz
out
shl
inc
sbb
sbb
das
add
mov
lods
popf
testb
shrb
push
mov
jecxz
xchg
jbe
loop
insl
adc
dec
and
push
int
shr
sub
push
xor
fs
sub
cmp
xchg
push
cs
shlb
mov
in
cwtd
gs
nop
mov
add
sub
arpl
dec
pop
xchg
jecxz
and
mov
jg
stos
cwtl
enter
mov
cmp
push
jl,pt
sub
in
xchg
int
add
adc
dec
jo
xchg
add
dec
jge
movb
test
sub
jo
pop
mov
loop
mov
sub
mov
mov
jge
cmc
mov
out
movsb
repnz
ss
add
sub
mov
ljmp
pusha
in
rcrl
loop
lock
jmp
mov
out
add
rol
pop
mov
fsts
or
enter
and
fbstp
mov
xor
mov
fsubrs
mov
outsl
sarl
dec
sbb
inc
mov
adc
mov
xlat
dec
lret
pop
mov
outsb
cli
mov
bound
xchg
sub
mov
nop
das
pop
push
lret
out
mov
mov
insl
cmp
mov
mov
loop
stc
push
mov
daa
scas
mov
pop
jmp
gs
mov
mov
xchg
pop
jmp
pushf
popf
inc
mov
cmp
inc
lahf
mov
cmpsl
fucomi
clc
or
mov
xchg
movhps
mov
lea
lea
adc
push
pusha
sub
inc
loope
int3
push
test
nop
mov
sti
sub
test
mov
jle
pop
sub
push
mov
jp
bound
aas
stos
in
sarb
add
jnp
cmp
ljmp
mov
push
gs
mov
jns
insl
mov
imul
sti
test
mov
inc
sbb
cmp
xor
insb
hlt
jb
push
jmp
imul
fs
je
stos
and
andl
adc
mov
pop
push
scas
in
bound
cmp
testb
adc
repz
pusha
cwtl
nop
xlat
fisubl
cwtl
fisttps
sahf
pop
cmp
sbb
test
loope
negl
ja
xchg
mov
ja
jecxz
lahf
aad
inc
mov
movsl
mov
push
sub
int
mov
xchg
xchg
and
scas
fmul
outsl
jecxz
cld
sub
faddl
sahf
adc
pop
dec
add
sub
leave
das
mov
mov
in
cs
pop
fldt
sbb
pusha
lret
inc
dec
das
rcr
push
jp
js
add
or
and
out
and
pusha
out
cltd
imul
mov
add
inc
jp
movsb
jl
sub
in
out
ret
cmpsl
fcompl
nop
mov
pop
orl
lods
in
push
aad
cli
xlat
xor
sbb
call
xlat
jmp
scas
push
dec
xlat
mov
jge
xchg
fsubs
cmc
shll
push
cld
add
sbb
in
inc
sahf
out
scas
mov
insb
in
pop
fwait
pop
mov
inc
adc
jecxz
in
popa
popf
xchg
aam
xor
inc
mov
cmp
cmc
lahf
inc
or
addr16
je
jnp
push
add
ja
nop
dec
xchg
dec
gs
mov
pop
inc
test
sub
push
xchg
clc
and
fcmovnu
adc
jmp
jmp
lds
cmp
test
jecxz
jnp
inc
ret
xor
sbb
bound
cmpsb
sbb
imul
mov
fisubl
jle
push
nop
in
mov
dec
cli
out
cmp
leave
jecxz
sarb
jnp
pop
sbb
icebp
fsubrl
jne
in
sub
outsl
cmp
mov
in
sbb
aam
mov
mov
nop
out
xor
mov
sarb
lea
mov
mov
add
in
cmp
cmp
sub
movsl
pop
cs
out
and
pop
pusha
mov
adc
shll
das
in
inc
dec
mov
subb
dec
xchg
ja
jo
xor
push
pop
mov
pop
insb
movb
sub
fucomi
shll
pop
adc
mov
cmp
push
subl
sbb
xor
push
sbb
cmp
lret
or
je
ljmp
push
push
mov
fildl
insl
cltd
lret
jmp
es
cmp
mov
iret
cmpsb
adc
idivl
ja
in
sbb
dec
mov
insl
inc
jmp
dec
pop
sub
leave
inc
mov
push
jae
adcb
mov
stos
jle
dec
lods
sbb
fs
aad
ror
jae
loope
push
cmp
cmp
rol
andl
cld
lods
loopne
xor
out
aad
movhlps
sahf
mov
ja
cmc
out
xor
pop
iret
or
mov
insl
shll
push
add
adc
jb
std
in
lret
movsb
mov
add
or
mov
shlb
mov
sarl
or
and
cs
cmp
mov
les
sub
mov
or
jnp
pop
inc
xchg
push
pusha
jmp
hlt
inc
idivb
inc
shlb
adc
dec
and
adc
xchg
ljmp
cmp
in
or
cmp
in
inc
xor
sub
push
popf
aam
outsb
daa
movsb
fcomi
and
inc
jmp
lahf
mov
jl
rcrl
pop
and
dec
test
mulb
jo
inc
dec
fists
sahf
jmp
nop
xchg
mov
bound
jne
fistl
stc
ja
sarl
movsl
mov
mov
jo
mov
out
test
cmpsb
jo
in
xchg
xor
mov
in
push
push
sti
mov
ret
or
out
jb
dec
mov
iret
mov
mov
mov
push
mov
pop
and
sbb
enter
xchg
adc
xchg
cmpsl
add
jmp
ficoms
test
dec
adc
cmp
pop
jo
in
fwait
inc
jle
sub
mov
pop
add
add
popa
inc
std
outsl
pop
ficoms
popa
pushf
mov
mov
sbbl
inc
pop
sub
or
pop
pusha
fs
call
sbb
mov
pop
adc
jae
mov
enter
cwtl
adc
in
pop
insl
lahf
xor
mov
cmp
mov
stc
add
pop
cld
inc
pushf
push
std
or
pop
mov
mov
inc
mov
add
mov
inc
cli
ljmp
mov
lahf
loop
arpl
inc
mov
ret
xchg
inc
roll
mov
rol
push
mov
cmp
and
scas
loop
dec
mov
dec
lea
xor
jmp
rorb
jbe
fwait
xor
cmpsb
inc
mov
sub
cs
ss
pop
icebp
fstp
push
add
push
push
xchg
push
inc
ret
cmp
mov
stc
mov
inc
and
idivb
xchg
sbb
cwtl
aas
movb
jnp
push
insb
mov
imul
and
test
and
sub
dec
pop
cmpsl
ficoml
or
test
neg
cmpb
pop
mov
mov
dec
fildll
sbb
or
jb
xor
cwtl
lret
ljmp
mov
sbb
adc
icebp
or
dec
scas
jecxz
and
adc
ljmp
xchg
sbb
test
add
and
dec
cmpsl
mov
xchg
mov
add
imul
pusha
out
lock
pop
sub
insb
dec
pop
in
adc
mov
sbb
repz
out
int
mov
inc
dec
daa
fbstp
sarl
xor
aaa
std
xlat
addb
fwait
in
jp
jmp
push
push
jecxz
lahf
imul
xor
and
mov
in
mov
ret
test
cmp
fdivrl
inc
leave
cmp
insl
sub
out
ds
bound
out
adc
pop
aad
adc
inc
mov
add
xlat
mov
ret
pop
mov
push
out
ja,pn
sbb
add
je
xchg
or
xor
lcall
xlat
out
dec
das
mov
mov
jmp
jle
repz
pop
mov
cmp
push
cmc
popf
aas
push
lea
sub
ret
scas
dec
es
rorl
push
xchg
out
xchg
int3
push
mov
jecxz
fistps
in
adc
adc
es
inc
lods
xor
xlat
jno
xchg
in
in
adc
in
dec
jge
cmp
jne
adc
out
mov
outsb
or
jnp
add
fnstenv
aas
add
int
adc
gs
sub
dec
xor
add
in
sbb
mov
daa
push
xchg
push
int
jae
xlat
push
loopne
lret
data16
mov
lods
xorb
pusha
xor
mul
inc
test
ret
insl
aam
and
pushf
dec
push
push
ret
nop
jge
adc
sub
push
inc
in
ficomps
push
imul
push
lret
sbb
inc
push
fsubrl
repz
lret
lret
lahf
das
shlb
lock
or
in
add
insb
cld
sbb
outsl
cmp
mov
pop
clc
inc
scas
adc
repz
ss
dec
loopne
into
pop
rorb
les
adc
pusha
int3
xchg
inc
scas
aas
lea
rol
jae
pop
mov
stos
iret
cld
cwtl
call
pusha
mov
xor
mov
mov
fs
dec
xchg
mov
jecxz
push
pop
jle
and
daa
xchg
add
pop
sarb
cli
jl
dec
xchg
mov
sub
mov
adc
sar
push
inc
xchg
cwtl
sub
icebp
and
xor
push
fidivrs
mov
jg
dec
setle
mov
cmp
xchg
push
es
out
outsl
cmp
dec
mov
test
subb
popa
inc
popf
push
movsb
daa
rcl
rol
lods
daa
and
mov
sub
or
push
jmp
pop
loop
or
push
fwait
xor
pop
dec
fstpt
inc
fdivrl
dec
adc
dec
jg
mov
mov
and
or
lods
sub
ret
bound
jae
movsl
andb
xchg
sarl
xchg
stos
mov
scas
push
jmp
sbb
test
jne
and
testl
fld
push
xor
cmp
push
scas
fisubl
or
fisttpl
inc
gs
or
add
mov
dec
fsub
fcoml
bound
pop
jo
cli
lods
sub
inc
cmp
mov
sbb
jo
add
shl
xor
adc
scas
and
adc
stos
cmp
xchg
fiaddl
cmp
lret
mov
cmp
jge
xchg
sbb
pusha
iret
push
sbb
mov
add
andb
cmp
adc
add
test
sub
xor
sbb
mov
add
pop
mov
loop
pop
mov
xorb
adc
loop
divl
sbb
push
sbb
mov
sub
test
enter
xor
inc
int
cmp
fbld
xchg
sub
divb
mov
dec
aaa
push
insl
jae
inc
mov
bound
cwtl
fcmovnu
aaa
fnstcw
stos
cmpsl
inc
or
in
arpl
push
stos
push
lret
and
jo
scas
xchg
jb
mov
test
xchg
lock
jbe
mov
repz
lcall
repnz
mov
jns
sub
sbb
hlt
push
scas
popf
jg
movsb
dec
pop
into
jnp
or
push
fisubs
cmp
jnp
lods
lea
mov
add
leave
fcomps
jno
int3
es
or
sbbl
mov
nop
js
rclb
xchg
dec
test
cs
addr16
stos
inc
ret
sarl
fadds
jno
icebp
push
adc
pop
xchg
mov
sti
mov
inc
add
and
dec
rolb
pop
addl
nop
mov
push
shlb
cmp
jno
mov
add
push
push
mov
dec
addb
mov
leave
test
les
inc
and
loopne
jno
add
dec
cmp
push
push
in
outsb
push
test
xor
repnz
popf
mov
popf
cwtl
in
fnstsw
test
jle
pop
lret
cli
adcb
sbb
aaa
gs
int
pop
adc
imul
cltd
loop
push
ret
lods
fs
adc
cltd
scas
xchg
jbe
pop
add
adc
push
jbe
sub
in
xchg
push
outsb
cmp
lahf
dec
popa
xchg
popf
cli
lret
out
out
aad
sbb
sbb
mov
outsb
orl
mov
lea
mov
imul
arpl
mov
or
adc
dec
dec
dec
fcomip
insl
ds
or
xchg
aaa
test
outsb
push
jo
rolb
add
insb
cld
add
hlt
incl
dec
test
and
and
and
cmp
mov
hlt
test
xchg
test
repnz
xor
ds
inc
push
scas
subl
mov
scas
mov
xchg
xor
test
movsl
pop
das
dec
pop
test
mov
sbb
fwait
adc
sub
push
pop
jbe
sbb
lcall
insb
jp
sbb
arpl
sbb
ficompl
pushl
insl
pop
push
test
lea
push
jecxz
outsl
lret
in
jbe
imul
fs
mov
aam
add
xor
loopne
jmp
pushf
dec
scas
test
cmp
jp
sahf
inc
jns
mov
mov
jmp
or
cli
mov
out
ja
inc
mov
fsubrl
adc
adc
mov
and
stc
push
jb
cwtl
cmp
dec
jbe
lahf
jle
xor
or
jmp
sub
jo
imul
and
mov
jge
lods
xchg
ss
mov
divl
sub
mov
sub
mov
adc
xchg
xor
cmp
fs
jle
cmp
dec
lcall
jb
ss
xchg
ds
out
lods
dec
sub
xor
mov
inc
cmp
xchg
gs
mov
or
mov
lods
movsl
test
stos
xor
lock
cmp
cmp
cli
cltd
xchg
cmp
inc
aaa
mov
adc
imul
mov
mov
dec
adc
pop
negl
cwtl
gs
mov
and
cmpsb
cltd
push
js
repz
mov
dec
sub
and
jo
xlat
or
into
jns
lahf
mov
insb
outsl
sar
test
xchg
stos
shrl
push
sbb
dec
inc
imul
subl
pop
cmc
inc
sub
outsl
test
adc
mul
or
out
add
mov
jne
test
adc
jno
xchg
je
adc
cmpsl
ljmp
or
std
push
xor
sub
jb
add
fidivrl
dec
jbe
clc
dec
lock
loope
data16
repnz
push
lds
mov
dec
xchg
shlb
daa
jmp
mov
dec
cmp
sbb
dec
adc
ljmp
sub
sarb
cmpsb
arpl
or
inc
fbld
xor
testl
scas
adc
xchg
jecxz
xor
jae
xlat
mov
pushf
fs
andl
sub
mov
and
aas
add
jl
push
mov
dec
ljmp
or
fs
cld
lea
pushf
and
and
iret
repz
pushf
ret
add
jl
js
or
out
push
pop
jge
lret
xchg
sbb
jne
jecxz
pop
fsubrs
cli
xor
cmp
andl
xchg
jmp
mov
in
jg
pop
push
fldt
outsl
cwtl
inc
in
test
test
mov
call
fcmovnu
xlat
jno
neg
in
push
add
xchg
push
add
jmp
mov
leave
int3
and
xchg
cmpb
and
add
aam
inc
test
sbb
fstl
or
jg
lds
adc
testl
push
jge
cmp
fsubs
dec
shlb
sbb
negl
add
mov
lahf
fldcw
adc
pop
cmp
sbb
mov
xchg
pop
sarb
movb
nop
movsl
cld
mov
or
insb
js
pop
jl
gs
dec
xorl
adc
push
insb
xor
mov
push
mov
out
scas
jb
pop
subl
sub
ds
insb
pop
ret
std
sub
xorl
fs
push
pop
jbe
adc
daa
ret
inc
cli
xor
dec
icebp
mov
imul
shll
imul
pop
or
addr16
inc
mov
fildll
mov
mov
inc
aaa
lods
adc
iret
lds
or
xchg
pop
adcl
sbb
movsb
mov
mov
test
adc
es
cmpsl
dec
cmc
sbb
dec
lcall
mov
in
test
dec
ss
cld
push
inc
sbb
xor
cmp
push
mov
cs
daa
pop
adc
stos
pop
xor
insl
mov
addr16
das
loope
pop
stc
pop
jns
push
sahf
xor
inc
xchg
pop
or
iret
bnd
test
imul
pop
insb
pop
in
mov
jne
lock
jnp
or
out
mov
adc
stc
mov
pop
in
mov
stos
or
pop
and
ljmp
cld
outsl
js
xchg
jo
xlat
dec
mov
cli
bound
movsl
cmp
push
cmp
insl
mov
xchg
xor
lock
sbb
mov
jp
in
test
popa
or
lods
xchg
push
fmuls
popa
outsl
sub
outsb
pop
cwtl
mov
fcompp
and
imul
popf
inc
jo
inc
into
push
insl
je
into
pop
decl
filds
insb
jge
push
xor
ja
push
xor
pushf
adc
rolb
add
xchg
xlat
in
xlat
pop
mov
icebp
xchg
fldl
pushf
out
scas
sbbb
push
nopl
cmp
psubd
fisubrs
push
lods
mov
xchg
adc
lods
stos
enter
mov
movsb
test
data16
loope
and
sub
mov
fisttps
imul
mov
clc
jge
mov
mov
rol
xor
push
ljmp
pop
xchg
adc
pmaxsw
xor
cmp
sbb
dec
aaa
addr16
sub
inc
test
inc
inc
mov
xchg
popl
andb
xor
adc
sar
loop
add
push
ja
imul
and
mov
mov
cs
aad
jbe
mov
in
icebp
or
sub
movsl
push
pushf
arpl
mov
mov
add
mov
loope
adc
js
test
sbb
xchg
bound
jae
jge
orb
out
mov
out
mov
dec
mov
mov
shll
popa
cmp
mov
test
insb
bound
adc
xchg
popf
ss
out
outsl
sbb
sar
jns
ds
in
sub
stos
cwtl
mov
or
mov
add
pop
ljmp
add
jne
push
mov
jae
push
sbb
xlat
out
iret
mov
dec
and
repz
xor
mov
mov
mov
mov
mov
inc
cmp
ljmp
push
lea
sbb
sub
imulb
enter
icebp
loope
shrl
cmp
loope
cmpsl
rclb
aad
push
rcrb
cmp
jecxz
xor
or
pushf
or
mov
adc
les
je
mull
mul
leave
jg
ss
fisttpll
popf
pop
pop
fmull
mov
cmp
imul
fsubrl
xchg
pushf
push
mov
dec
fidivrl
shlb
sbb
jecxz
stos
mov
xchg
mov
mov
les
pusha
inc
mov
into
cli
push
outsb
add
pop
mov
je
es
dec
pop
stos
sbb
mov
jge
mov
sahf
popa
cmpl
inc
jno
imul
add
sti
dec
fisubl
xchg
pushf
adc
ss
iret
pop
mov
rcrb
aaa
cmp
cli
dec
sub
mov
ficompl
push
or
push
pushf
push
sbb
adcb
call
bound
sbb
pop
jle
cs
gs
sti
mov
dec
lret
jno
jno
shlb
mov
cmp
mov
inc
repz
jne
stc
dec
cmp
sbb
cs
and
pop
clc
ror
loopne
shrl
push
pushf
icebp
fldt
fld
and
cltd
in
sub
mov
or
dec
loope
mov
and
sbb
push
stos
dec
mov
jo
pusha
in
sub
repnz
imul
jmp
mov
sbb
arpl
or
pop
fsubrp
pop
mov
mov
outsl
mov
aaa
sbb
push
xchg
sbb
lds
or
inc
scas
sbb
insl
popf
movsl
popa
ret
cmpsl
popf
lea
mov
dec
mov
or
test
lock
bound
bound
xorl
pop
mov
enter
pop
cmp
daa
test
or
sub
fimuls
sahf
inc
shrl
add
xor
pop
in
imul
jecxz
mov
sbb
call
dec
or
xchg
das
push
xor
push
shrl
lahf
add
loop
mov
mov
mov
mov
push
dec
sub
jb
out
js
cmp
mov
int
mov
add
xorb
call
add
sbb
and
mov
data16
int3
aas
scas
adc
sub
test
repz
jb
fisttpl
sahf
shll
stos
aaa
sub
lahf
loop
lret
mov
pop
jae
mov
push
out
push
mov
jo
push
leave
mov
ds
int
jg
xchg
loop
add
in
js
sbb
xchg
and
inc
scas
popa
data16
sub
cmpsl
push
lea
pop
or
mov
ljmp
xchg
fildl
cli
mov
cmp
push
sub
popf
jae
mov
aas
add
rcl
jmp
dec
push
ss
jmp
sbb
ja
jbe
cmp
pop
add
jg
ret
fisttpl
dec
jne
in
jl
test
cmp
jl
aam
clc
fnsave
es
clc
aaa
fidivl
jns
mov
pop
mov
dec
sbb
mov
add
rcl
orl
jno
xchg
inc
ret
add
popa
and
arpl
dec
popa
out
lods
jae
aam
cmp
or
push
cltd
sub
imul
sub
push
rcr
push
ja
stos
test
mov
push
cmp
xchg
in
mov
inc
sbb
mov
hlt
mov
sbb
loope
sub
adc
loope
mov
leave
sbb
arpl
push
scas
fcomp
jb
push
or
mov
mov
jnp
movsb
jbe
movb
repnz
aam
jl
sahf
push
cmp
dec
pop
sti
in
mov
sti
or
fmuls
mov
pop
xor
push
add
mov
push
mov
push
mov
and
push
and
mov
pavgb
inc
jp
lahf
cmp
xchg
pop
sbb
push
push
addr16
aaa
mov
hlt
pop
sbb
gs
fists
int
cli
rcll
insl
int3
inc
test
cmp
sub
icebp
fstpt
into
xchg
pop
mov
dec
sbb
push
mov
lret
jnp
mov
pop
mov
ss
lds
and
mov
sti
xor
pop
sub
push
imul
xchg
mov
pop
aad
js
fnstsw
or
sub
arpl
and
std
repz
mov
jecxz
pop
and
fdivrl
insl
cld
test
repz
lret
popa
loope
inc
imull
das
outsb
lret
outsb
adc
push
pop
test
mov
call
pop
mov
dec
cmp
cmpsb
add
in
inc
dec
std
sbb
loop
dec
jne
jo
enter
dec
pop
push
sub
pop
sbb
cs
dec
xchg
fisubrs
movsl
sbb
cltd
mov
push
scas
mov
clc
add
out
scas
xchg
enter
push
addr16
insl
push
test
mov
flds
hlt
inc
and
dec
test
notb
xchg
fs
xor
jp
sbb
inc
xchg
shlb
mov
xlat
mov
jl
cwtl
aam
jae
mul
inc
loopne
les
xchg
das
fimull
out
or
adc
roll
mov
jg
cmp
and
inc
cld
cmp
fcmovnu
das
xor
pop
adc
xor
outsl
push
out
and
jns
insl
add
mov
rclb
xchg
lods
xchg
enter
jbe
xchg
mov
les
stos
push
mov
push
cltd
jae
xchg
or
call
adc
loopne
xchg
cltd
pop
xor
insl
cmp
ret
rolb
xor
xor
loopne
or
jecxz
mov
int3
xchg
fstpt
pop
jb
push
inc
and
mov
aas
call
adc
std
jb
xor
ss
mov
test
out
in
orl
push
and
in
outsl
cli
sbb
cmp
sbb
jmp
popf
aam
mov
sub
std
add
inc
lcall
xor
inc
sti
jl
pop
imul
lcall
xchg
inc
jo
insl
jnp
filds
dec
lods
movsb
or
and
sbb
cmp
push
mov
aad
cmp
and
stos
push
testb
jne
popw
repz
jmp
cltd
dec
fsubs
ret
xchg
in
xor
icebp
xor
adc
repnz
sbb
inc
push
mov
cli
fcompl
jmp
clc
push
pop
inc
iret
rolb
mov
jl
push
pop
push
pop
lret
icebp
push
fdivs
call
cmp
enter
inc
sbb
xlat
fdivl
pop
cld
xchg
sbb
mov
mov
aam
test
mov
sub
rclb
frstor
push
xor
and
enter
cld
pop
xor
jns
pop
pop
pop
lods
cld
rorl
adc
cmp
ficoml
xchg
pop
xchg
pop
add
cmp
insb
sub
dec
aam
test
in
or
xchg
inc
adc
lahf
fimull
and
cmp
or
cmpsb
jno
ret
adc
fidivl
notb
pop
adc
or
pop
sbb
int3
cmp
sbb
sbb
fisubs
psubd
pop
or
les
int3
and
adcl
rcll
inc
fldcw
movsl
sbb
jbe
les
pusha
or
cltd
pop
pop
fstpt
nop
xor
cmp
mov
xor
lods
out
cli
adc
test
out
hlt
cmp
push
inc
pop
jnp
pop
fwait
jmp
xor
jg
int3
loopne
xchg
xchg
insb
pop
and
push
push
adc
retw
pop
push
aas
shl
gs
lods
cmc
notb
jmp
js
out
mov
xchg
mov
mov
or
mov
jmp
adc
lcall
xor
addr16
js
inc
adc
fnstsw
sub
rcrl
movb
add
je
icebp
xor
stc
cmp
sub
pop
cmp
xchg
rol
push
push
push
or
insl
mov
jl
nop
pop
mov
mov
inc
lock
add
loope
pop
mov
mov
setbe
fdivp
imul
mov
pop
mov
fsubl
inc
jae
push
rorl
cli
push
cmp
mov
les
mov
xor
mov
and
cs
sbb
cmp
mov
rorb
sbb
mov
lret
gs
adc
push
inc
insb
ss
test
repnz
mov
push
fdivrs
mov
add
out
in
in
mov
push
sub
xor
jmp
xor
and
pushf
sbb
dec
iret
pop
mov
adcl
popa
adc
out
test
add
push
cmp
pop
push
movsl
repnz
jbe
lahf
pop
jno
inc
jg
inc
push
and
nop
push
popa
bsr
loop
out
xchg
shlb
addb
test
aas
mov
jo
ret
push
jbe
iret
lcall
and
fadds
je
cmp
enter
jg
aad
fbld
stc
sti
and
mov
aad
fcmovnu
jne
cld
sbb
add
shl
aaa
sbb
fisttps
outsl
dec
popa
insl
or
cwtl
mov
dec
mov
ljmp
xchg
cli
aam
push
scas
sbb
mov
stc
jae
leave
xor
jl
jbe
and
lock
sbb
out
or
mov
pop
sbb
rclb
mov
fsubr
fsubp
dec
pop
xor
cs
cmpsl
mov
into
lods
shr
dec
inc
xchg
jo
lahf
lea
popf
mov
scas
mov
lods
push
js
adc
push
inc
cmpsb
loope
xchg
dec
mov
aam
inc
fidivs
nop
addr16
std
or
aaa
adcb
call
out
jecxz
test
shrb
insb
imul
fldl
jl
push
add
scas
and
cmp
add
sbb
sub
mov
and
ret
pop
xor
lea
or
xchg
xcrypt-cfb
cmpsl
jecxz
mov
mov
jns
or
lods
xchg
testb
jg
fs
loop
mov
jge
cwtl
repz
push
movsb
add
dec
and
dec
out
mov
jns
add
add
dec
add
lea
xchg
inc
mov
jne
mov
stos
fisubl
inc
inc
cmp
and
mov
inc
adc
jl
mov
jecxz,pn
mov
dec
pop
inc
jmp
repz
adc
xchg
and
and
nop
lcall
inc
shlb
xchg
xchg
iret
mov
sbb
xlat
movsl
in
xchg
jge
jg
xor
cmp
out
add
adcl
insl
or
xchg
mov
add
jp
xchg
fwait
mov
sahf
call
mov
scas
add
mov
pop
mov
dec
add
mov
les
fisubrs
mov
daa
pop
stos
out
lret
les
mov
jns
das
hlt
inc
pop
outsl
mov
rcrb
xchg
push
jno
loopne
mov
das
and
jecxz
pop
aam
adc
repz
cmpb
js
fs
fs
pusha
pop
push
orb
icebp
xor
mov
push
out
pop
aad
insb
sbb
xchg
jns
dec
mov
aad
jp
or
dec
mov
cmp
adc
mov
sbb
push
fdivs
loop
stos
adc
nop
add
dec
pop
xchg
test
leave
fcompl
push
push
add
add
hlt
dec
clc
push
pop
icebp
loope
in
div
push
cmp
ds
jns
sbb
sub
or
sti
lea
mov
in
data16
and
out
mov
sbb
and
cmc
push
jo
loop
stc
sub
sbb
add
int
cmpsb
or
cmpsl
fbld
into
or
cmpb
inc
and
test
or
es
aas
sbb
mov
leave
in
enter
xchg
xor
pop
popf
into
lahf
shll
fs
roll
bound
dec
imul
cmp
sub
mov
mov
and
cmp
mov
repz
pop
adc
cmp
fs
icebp
push
mov
sub
mov
sub
inc
into
loop
inc
hlt
in
xor
cmp
popf
test
xchg
cli
loope
inc
inc
adc
jae
mov
xchg
inc
dec
and
sub
jnp
idiv
and
pop
shl
push
sbb
push
adc
lods
mov
out
pop
and
imul
mov
ljmp
lds
pushf
sbb
inc
push
arpl
scas
adc
imul
jo
dec
jg
sahf
mov
push
and
mov
enter
sbbb
cmpsb
push
ja
push
ljmp
jge
in
pop
add
loopne
xlat
iret
xor
cld
adc
sarl
aas
jo
movsl
shl
lea
add
subb
rolb
aaa
dec
nop
add
in
sahf
jbe
bound
addr16
ffree
add
xor
das
hlt
rol
mov
jg
sbb
push
icebp
add
add
cmp
pop
push
xchg
mov
cmpsb
pop
jbe
mov
pop
dec
mov
into
in
in
xor
xchg
lods
xor
testl
sub
mov
mov
dec
fistpl
xor
sbb
das
xor
or
pop
jmp
pusha
xorl
mov
sub
xor
pushf
dec
loope
into
not
dec
adc
lea
leave
push
xchg
pop
xchg
xchg
xor
cmp
pop
mov
loopne
mov
xchg
hlt
or
inc
adc
shl
loop
and
lods
push
rol
push
je
cld
push
inc
psubsb
jae
mov
mov
mov
xor
xor
sub
test
call
repnz
pusha
lret
mov
jnp
jg
pop
div
fstpl
jmp
shll
mov
cmpb
cmc
int3
and
movsb
insl
aaa
sub
inc
insb
pop
mov
pusha
add
sbb
sbb
inc
mov
sub
inc
and
or
into
sub
test
out
notb
cmpsb
push
out
mov
lret
push
loope
test
lret
out
add
or
cmp
repnz
mov
add
cs
rclb
pop
adc
xchg
xchg
je
cmp
xchg
lcall
fmull
mov
push
xchg
mov
and
mov
mov
inc
xchg
ret
add
out
aaa
repnz
push
mov
sti
mov
outsb
fucom
fwait
movsl
popa
pop
cli
into
aad
mov
push
xchg
sbb
mov
stos
xchg
daa
ss
movsb
lret
les
cmp
xlat
sahf
popa
shlb
pop
push
sbb
insb
ja
loope
aam
shl
shr
push
add
jno
sar
mov
push
or
pushl
lea
test
push
divl
rcrl
mov
pop
fwait
js
out
mov
ljmp
inc
int3
push
test
data16
mov
mov
lods
mov
or
jbe
push
stos
inc
scas
sbbb
imul
xchg
dec
in
cmp
push
sbb
mov
xchg
pop
mov
fdivrs
mov
pminub
pand
cmp
sbb
je
cs
nopl
test
cmpsb
sub
movsl
rolb
in
mov
mov
push
push
pop
jne
dec
jge
lahf
mov
mov
sub
leave
xlat
stc
sbb
mov
xchg
adc
fsubp
lods
insl
xchg
jns
cmp
cmp
jae
popf
push
inc
test
subl
dec
add
orl
jae
sbb
aad
aad
loope
mov
mov
mov
dec
nop
outsl
inc
inc
fildll
and
xor
inc
ljmp
add
push
xor
pop
sbb
xchg
aaa
fisttps
daa
xor
cwtl
sbb
ds
mov
jne
aas
inc
or
cmp
and
bound
lret
faddl
repnz
cmpb
fsubl
bound
insb
das
cli
dec
int
cmp
add
int
push
push
je
int3
stos
out
outsl
pushf
mov
cmp
movsb
sub
ficoms
xlat
add
mov
xchg
push
inc
pop
daa
fcmovu
cmpsl
movl
lods
notl
mov
aad
dec
pop
adc
lock
and
jns
jecxz
cmp
std
loop
and
adc
add
in
insb
enter
and
bound
mov
cmp
xor
hlt
leave
xlat
popl
arpl
xor
mov
add
sub
push
xchg
addr16
dec
mov
iret
pushf
adc
mov
ja
stc
bound
xchg
ljmp
lods
adc
test
in
imull
enter
gs
idiv
mov
dec
iret
lahf
je
js
pop
shlb
out
out
dec
mov
ror
std
push
insb
mov
xchg
dec
push
xchg
pusha
cmp
lock
popa
loope
icebp
fdivrs
sbb
movsb
mov
push
pop
mov
movsl
adc
mov
jo
mov
pop
xchg
ljmp
cmp
fwait
mov
loope
ljmp
ljmp
je
sbb
xchg
xor
sub
jb
jbe
cmp
xchg
add
push
addr16
jnp
sahf
dec
popa
xor
shll
or
jmp
iret
call
sahf
mov
std
in
sub
sti
mov
aam
inc
pop
in
das
push
lret
nop
cmc
lods
jecxz
loope
and
push
xor
adc
je
pop
mov
test
fst
pop
sbb
or
popf
mov
js
out
mov
daa
jne
stos
sub
inc
outsl
jge
xchg
lret
fisubrs
cs
roll
outsl
cmpl
into
dec
scas
sbb
dec
and
std
imul
jl
inc
test
repnz
addl
aad
mov
jmp
jns
out
scas
popf
mov
insl
cmp
mov
in
popa
mov
jmp
push
sub
push
xchg
add
js
cmp
sbb
test
add
dec
jp
shlb
std
xchg
hlt
xchg
sbb
in
cld
xchg
xor
adc
lret
sti
jecxz
cmc
jge
out
not
sub
fmulp
or
add
push
jle
aad
inc
mov
push
jp
sbb
mov
sub
cmpsb
inc
inc
mov
xchg
pop
rcr
imul
out
mov
mov
mov
in
mov
call
mov
stos
push
inc
pop
fwait
pop
es
sbb
outsl
mov
xchg
jle
in
sbb
popa
out
jp
out
lcall
mov
int
sub
loop
xchg
adc
cmc
jecxz
arpl
pop
out
sub
fsubl
push
sti
sbb
jle
push
stos
mov
dec
push
mov
clc
insl
ret
xchg
aas
dec
push
jne
xchg
nop
push
xor
movsl
dec
fs
inc
dec
ret
enter
lret
ds
xchg
int
xchg
or
insl
push
fldt
cmp
push
cmp
test
out
and
das
sahf
inc
bound
fadds
adc
sbb
into
bound
insb
jecxz
in
mov
std
push
sub
and
pop
sub
sbb
sub
pushf
enter
cltd
mov
dec
fdivl
std
aam
fcmove
aam
aam
xchg
sub
int3
fcomi
clc
iret
shlb
bound
mov
nop
addr16
das
lock
gs
sti
jnp
lret
in
fcmovnbe
outsl
shr
sub
sbb
jno
pop
fisubrl
ljmp
mov
mov
imul
dec
sub
gs
mov
jae
jl
movsb
jae
jp
cmp
add
inc
popf
clc
and
fld1
lcall
jae
je
pop
xchg
mov
push
push
cmp
push
cld
add
inc
pusha
aam
jle
jmp
repnz
push
mov
pop
jmp
aas
dec
inc
hlt
mov
fs
sarl
nop
cmp
dec
out
fadd
push
insl
scas
das
jg
inc
lods
mov
ja
outsb
dec
mov
pusha
daa
dec
stos
adc
jmp
int3
nop
inc
push
or
mov
xchg
es
ret
inc
jmp
loope
jl
jmp
icebp
jnp
pop
lahf
pop
dec
jns
add
addr16
mov
lret
cmp
push
or
arpl
dec
rclb
xor
lods
cltd
cmp
arpl
inc
and
sbbl
dec
outsl
lret
inc
pop
inc
cltd
imul
add
or
loop
jmp
add
and
and
cmp
pop
mov
les
sti
scas
ret
lds
push
jb
add
xchg
arpl
pop
test
pop
cmpsl
jle
sti
not
xor
fisttpl
jp
sub
cltd
stos
xor
inc
jne,pt
cmp
adc
jae
pop
pop
jbe
xor
lods
mov
xchg
popf
dec
push
ror
mov
bound
lods
popf
or
adc
xchg
push
inc
mov
xchg
pop
mov
stos
rcrb
mov
inc
stc
mov
outsl
xor
or
punpckldq
xchg
insl
clc
push
sbb
das
mov
addl
xchg
pop
and
jge
or
mov
jmp
call
icebp
sbb
adcb
int3
cltd
orb
mov
fstps
addl
and
xchg
pop
std
sbb
movsb
lret
xchg
mov
dec
xchg
sub
cmp
ljmp
push
je
dec
adc
pushf
mov
mov
sub
lock
test
cld
aaa
into
and
lcall
push
leave
jle
mov
mov
ret
jb
fstl
pushf
je
cld
je
push
aaa
lock
jns
pop
fwait
jmp
lret
je
mov
addr16
sub
sub
pop
movsb
xchg
bound
lods
and
ss
push
mov
ljmp
push
pop
lret
pop
aad
pop
push
inc
sbb
stos
gs
xchg
dec
leave
cmp
es
or
or
jne
stos
jbe
std
repz
push
pop
adc
les
daa
out
popa
sub
mov
xchg
xlat
test
lret
fstpt
and
es
jnp
dec
push
mov
fnstenv
ret
fmull
mov
insl
imul
and
cmpsl
xor
int
mov
int
loope
aas
add
pop
in
cmc
jno
mov
and
pop
mov
in
dec
push
lcall
lcall
in
mov
repz
aam
mov
scas
mov
mov
hlt
xorl
adc
inc
call
popf
dec
loope
adc
push
negl
stos
push
test
adc
movsb
adc
pop
movsb
sbb
inc
jg
imul
add
cmp
std
push
lods
xor
sbb
adc
mov
sbb
push
iret
sbb
sub
mov
sbb
ficoms
adc
dec
or
sub
push
pushw
inc
pop
rclb
popl
dec
or
cld
mov
mov
mov
lods
in
fistl
push
js
xor
daa
sub
xor
outsl
and
out
sbb
data16
lods
test
sub
mov
jno
sub
sahf
push
arpl
push
pushf
fbstp
repz
push
shll
and
pop
mov
cmp
and
mov
mov
and
stos
sbb
sbb
add
add
arpl
push
fcmovne
shr
pop
mov
lods
daa
xchg
push
shlb
mov
dec
cmp
lret
xchg
cmpsl
out
push
pop
xchg
bound
jge
inc
xlat
rorl
lock
cmp
imul
pop
pop
mov
xchg
mov
pop
data16
dec
xchg
add
adc
dec
and
xchg
sbb
gs
loopne,pt
in
jb
mov
lods
in
or
mov
out
xor
insb
inc
push
mov
lock
shlb
inc
cli
int
loopne
jo
add
mov
test
imul
and
push
pop
mov
cmpsb
inc
push
or
and
adc
cltd
test
shrl
in
push
xchg
jecxz
test
lcall
loop
movsb
inc
in
add
sti
mov
mov
pop
je
or
jl
cmpsb
xor
mov
mov
or
push
orb
cmpb
cli
pop
push
rol
jp
adc
in
daa
mov
sub
mov
imul
push
mov
add
scas
jo
add
mov
aaa
lock
fistpll
xchg
adc
test
add
jbe
sub
sub
ljmp
ret
push
daa
or
mov
lret
sub
pop
out
push
das
mov
xchg
adcb
inc
fsubrs
xor
pop
sub
mov
xor
and
jbe
stc
lret
mov
dec
xchg
out
fcomp
js
jnp
or
adc
jecxz
fs
mov
xor
and
adc
push
adc
xor
sub
mov
add
in
push
jecxz
mov
pop
mov
roll
sub
movsb
outsl
jns
insl
ficomps
xor
pop
pop
jne
bound
sbb
mov
jg
clc
and
cli
adc
mov
dec
or
ljmp
pop
inc
pop
inc
push
loopne
sbb
pop
hlt
stos
jl
jle
daa
jnp
adc
pushl
pop
lock
fsub
add
fcomip
pop
add
fabs
ljmp
mov
out
ljmp
inc
xlat
sub
negl
stos
jecxz
js
stos
mov
cmp
into
xchg
icebp
inc
dec
arpl
cmp
outsl
mov
aam
jo
and
stc
out
addr16
addr16
inc
and
data16
jne
pop
dec
iret
orb
push
movsl
cmpsb
addl
mov
mov
adc
push
cmp
enter
loopne
pop
cmp
pusha
inc
mov
and
test
mov
fisttpl
mov
sbbl
lret
dec
jl
and
daa
call
cmpb
xchg
icebp
addr16
push
movsb
mov
int3
pop
mov
imul
out
sbb
decb
xchg
mov
ret
adc
dec
mov
aaa
aas
sahf
pusha
cwtl
roll
xlat
into
mov
stos
je
mov
outsl
xor
int3
rorl
and
jmp
movsb
aas
mov
dec
jns
ss
aad
fdivrl
push
loopne
pop
add
add
outsl
cmpsb
inc
and
jae
push
add
sbb
adc
lea
dec
daa
cmp
mov
and
push
jg
mov
orb
adcl
mov
cmpsb
xchg
leave
test
lods
dec
aam
fxch
lods
dec
inc
cmpsb
lret
sahf
mov
pop
jo
sub
mov
pop
lret
iret
jge
shr
les
cmp
lahf
xchg
scas
rcl
movsb
arpl
popa
jle
ljmp
in
dec
mov
repz
call
les
jnp
pusha
xchg
ja
sahf
rolb
es
aad
jge
mov
das
xchg
push
mov
stos
add
push
data16
and
xchg
mov
jno
push
cli
jp
xor
popa
out
adc
xchg
sbbl
idiv
sarb
pop
je
ret
pushf
sahf
loopne
shlb
or
clc
xor
mov
xchg
enter
add
xor
add
outsl
aad
cmp
imul
push
mov
mov
testb
add
repz
call
movsl
movsb
ljmp
test
and
sbb
daa
mov
das
pop
rcl
pop
stos
sbb
inc
mov
mov
outsl
inc
test
jg
jl
sbb
hlt
cmp
popf
push
dec
jl
and
push
das
pop
jae
push
push
leave
sbb
xchg
add
fbld
push
add
shl
out
sbb
outsl
scas
aam
enter
dec
or
movntq
mov
lret
and
push
test
fisttpll
mov
add
je
mov
xlat
test
cld
push
test
sub
sahf
sbbb
push
jle
xchg
int3
xchg
fwait
scas
loopne
lcall
xchg
sbb
rorb
xor
aam
in
nop
cli
pop
bswap
test
adc
stos
cmp
adc
leave
cld
pop
ret
insb
push
adc
shll
adc
daa
es
shlb
test
add
sub
mov
add
out
jmp
insb
xor
notl
pop
mov
cmc
lea
sbb
and
pop
arpl
test
xchg
xor
loope
lea
xor
mov
ljmp
mov
sub
js
mov
sbb
push
pop
leave
and
inc
xlat
cmc
movsb
fwait
dec
dec
mov
mov
das
cmpsl
pop
testb
ret
ja
dec
mov
rolb
mov
lcall
fs
dec
addl
lds
push
dec
lods
loop
test
movsl
inc
iret
test
gs
or
bound
hlt
ss
push
ror
mov
and
or
sbb
inc
test
and
pop
and
fisubs
aas
and
es
pop
mov
fnstsw
add
mov
mov
iret
pop
push
icebp
xchg
jb
cmp
mov
add
shl
loop
and
setne
loop
mov
add
push
sti
pop
movsl
pop
iret
ja
mov
lods
xor
aaa
ja
fcompl
inc
gs
xor
aam
mov
imulb
jmp
jl
shll
movsb
lret
mov
loope
inc
into
sti
pushf
or
mov
das
jg
cmpsl
pop
movb
mov
inc
sbb
mov
pop
pop
fisubs
mov
mov
iret
repnz
fnop
call
cmp
call
cmc
bound
sbb
sbbb
dec
repnz
std
not
bswap
xchg
jmp
jnp
popf
dec
or
stos
repz
adc
xchg
jecxz
pop
and
leave
mov
inc
sub
ds
or
and
dec
sub
pop
mov
xor
popa
fsubrs
xchg
pop
lds
inc
outsl
and
rcrb
jbe
sub
fiaddl
mov
iret
sbb
out
mov
mov
jge
add
xchg
jp
leave
add
pop
test
jp
in
rclb
divl
jne
out
ret
and
sbb
aas
push
rorl
cltd
cli
pop
ljmp
jne
es
cmpsb
test
cld
outsb
adc
scas
ljmp
and
pop
mov
cmp
cmp
cwtl
fsubl
mov
lock
push
lock
push
mov
sbb
pop
adc
jp
sub
sub
mov
stos
add
scas
lret
jmp
push
push
shrl
sub
sahf
pop
int
push
lcall
jge
sbb
fldl
adc
je
hlt
mov
out
test
orl
test
pushf
and
pushf
push
inc
daa
cmpsb
and
lret
arpl
mov
or
jns
shlb
pop
shrb
adc
ss
xor
enter
push
pop
sahf
mov
scas
add
aad
pop
fisubl
out
xchg
outsb
dec
inc
mov
jnp
xor
mov
inc
adc
jp
flds
je
mov
pop
subl
xor
outsl
out
sub
loope
mov
xor
and
jo
jbe
adc
mov
jae
aad
cmpsl
and
mov
popa
pop
and
std
nop
or
inc
lret
das
popa
lods
mov
mov
test
cmp
add
imul
fsubp
mov
stc
iret
lods
imul
imul
push
add
fwait
jge
push
and
clc
mov
lods
cmp
mov
call
mov
ret
lret
or
mov
cmp
data16
movsb
sub
scas
lock
leave
ret
lds
jne
push
movsl
adc
andl
scas
imul
repnz
iret
mov
mov
mov
in
lods
bound
add
shl
aad
mov
jmp
loopne
mov
or
mov
pop
and
xor
cwtl
push
in
jnp
lds
jecxz
and
scas
jae
adc
add
movsl
adc
pusha
inc
or
adc
push
std
jle
aad
xor
scas
stc
mov
push
xchg
adc
pusha
mov
fsubrl
adc
hlt
cs
xchg
adc
out
mov
idiv
mov
int
loope
pop
cmp
mov
xlat
xor
sbb
outsb
call
cltd
out
in
dec
enter
mov
ljmp
xchg
hlt
cmpsl
mov
mov
jno
bound
dec
add
jae
frstor
adc
sub
cmc
nop
test
push
jmp
pop
mov
ret
cld
jmp
das
mov
stc
stc
mov
nop
testb
fildll
jns
test
push
sub
inc
jb
fs
sarl
movsl
cmpsl
mov
stc
ficomps
jbe
inc
mov
fcomip
lcall
loop
push
sbb
cbtw
pop
rep
sbb
mov
xchg
test
lret
repnz
mov
sub
and
idiv
sbb
push
insl
cmp
adc
pop
sub
add
mov
jns
xchg
and
xor
js
shl
push
push
in
lock
add
mov
pop
cmp
out
xchg
xor
daa
cmpsb
add
es
std
adc
inc
cmpsl
fdivs
inc
xor
xor
nop
sahf
fisttpl
jmp
loop
mov
mov
clc
xchg
stc
add
loope
movsl
xor
out
fstpt
lock
cmp
aas
jmp
mulb
push
pop
aaa
or
outsb
xor
mov
inc
jl
movsl
icebp
bound
or
rolb
addb
mov
xchg
sbb
or
in
ret
imul
push
dec
int
lret
dec
add
mov
fisubrl
adc
adc
inc
and
push
loopne
jl
in
xchg
jnp
jle
xchg
es
rcll
adc
out
jg
popf
rorb
pop
addr16
icebp
jmp
mov
mov
push
dec
aad
out
sbb
dec
push
insl
mov
mov
push
pop
into
loop
jns
sbb
lea
add
mov
mov
lret
mov
lds
lock
push
add
push
ret
or
cmp
cmp
aas
test
out
lods
out
push
stc
jb
bound
inc
xor
xor
pusha
rcll
in
jmp
in
sub
push
into
xchg
inc
xchg
cs
scas
in
mov
fidivrl
push
ja,pt
jmp
jno
dec
pop
ficompl
lods
sub
dec
dec
hlt
and
inc
cmc
aam
xor
mov
adc
mov
test
jecxz
faddl
xor
add
ljmp
mov
scas
pop
ficoms
inc
lahf
arpl
dec
data16
push
lret
cltd
nop
js
adc
sbb
and
fiaddl
pop
out
pop
mov
arpl
dec
daa
inc
dec
sub
dec
jle
inc
mov
jo
and
xor
or
aam
call
pop
push
imul
mov
arpl
push
orb
add
mov
sbb
stos
lcall
jge
fldenv
sub
jl
add
xchg
mov
xor
cltd
add
fiaddl
jge
fcompl
xchg
test
pop
loope
movsl
mov
mov
and
aad
mov
int
mov
adc
push
cmp
int3
repz
jnp
and
popw
inc
in
push
pop
faddl
xlat
gs
dec
addr16
nop
not
jle
mov
sbb
mov
div
test
or
add
xor
andl
icebp
je
xchg
mov
pop
pop
dec
push
mov
xchg
aas
and
leave
and
push
jge
fdivl
inc
movsl
push
xchg
aad
aam
sub
lds
pop
inc
movsl
add
lret
rep
ror
adc
ret
push
jo
into
int3
mov
std
jge
xlat
pop
adc
adc
jp
ret
dec
fs
xchg
sub
dec
xlat
mov
stos
jl
push
sub
inc
loop
xlat
push
mov
mov
call
xchg
ja
das
int
stos
adc
sub
mov
or
shrb
loop
xor
dec
sub
rol
adc
mov
pushf
sbb
mov
inc
insl
mov
mov
cmpsl
xor
movsl
into
dec
pusha
xor
push
adcb
cmpsb
cmpsl
imul
xchg
test
ror
jecxz
add
mov
xor
or
push
xor
sub
dec
mov
dec
negl
dec
sub
jne
push
or
ret
stc
mov
mov
pop
mov
jne
lods
pop
or
pop
mov
jns
dec
aam
fistpl
push
ret
inc
inc
aas
fsubrp
pusha
aam
lock
aas
xchg
xor
pop
movsl
push
xlat
dec
inc
ret
insb
dec
mov
int
cltd
mov
push
xchg
xchg
jbe
fnstsw
cltd
cmpsb
out
pop
ficoml
js
call
xchg
sarb
push
mov
fdivs
popa
or
sbb
mov
jp
jno
cltd
jbe
pop
dec
fstsw
xchg
xor
adc
and
popa
mov
data16
push
ds
and
mov
mov
jle
add
lds
cld
jno
in
push
sti
scas
rcrl
sarl
shlb
or
jle
mov
fadds
lret
pop
jge
stc
jmp
add
std
data16
lahf
out
jnp
daa
jb
clc
and
imul
sti
jno
xor
out
jb
jae
popf
testl
sub
repz
sub
adc
jns
xchg
scas
lock
cld
mov
jno
sahf
dec
fsubrl
sti
lahf
ja
imul
and
pop
in
push
inc
sbbl
fwait
cmp
popf
pop
push
add
movsl
lea
lret
loop
mov
sbb
in
stos
push
ss
hlt
outsb
push
sub
jg
push
xchg
adc
cmp
scas
and
cmp
inc
repnz
mov
adc
mov
repz
mov
les
or
push
imul
ret
mov
jecxz
out
insl
mov
pop
cmp
xor
cmc
xor
sub
pop
pop
daa
push
or
pop
jo
test
pop
test
sbb
shl
mov
out
pop
or
pop
adc
jecxz
popa
xor
dec
dec
repz
dec
push
cmp
and
mov
xchg
add
movsb
adc
jge
fstps
lock
adc
dec
inc
rolb
jle
test
mov
call
xor
lock
pop
in
test
mov
cli
adc
dec
mov
and
stos
mov
mov
dec
pusha
xor
cmp
and
cmpsb
and
cmp
js
cmp
sbb
jnp
push
sarl
jp
test
lret
pop
outsb
pop
pop
adc
jae
popf
mov
fs
gs
jne
test
pop
imul
jecxz
adc
sub
scas
cwtl
or
test
icebp
sbb
xchg
xchg
andb
mov
fbld
test
dec
dec
dec
jnp
stos
xchg
mov
lret
cwtl
out
push
call
add
stos
or
scas
pop
jbe
cmp
mov
dec
inc
data16
lds
or
in
adc
inc
add
fcoml
nop
hlt
out
jge
sbb
inc
mov
pop
inc
inc
lcall
and
imul
sbb
mov
scas
daa
lea
jne
hlt
mov
out
lods
sub
fnsave
outsb
pop
push
mov
outsl
cld
cmp
mov
inc
mov
jl
mov
cmp
jae
xchg
push
mov
xlat
sti
sub
lds
movsb
cmp
xchg
sub
lret
jl
icebp
and
sti
xor
fsubl
or
push
xchg
inc
hlt
sbb
push
jl
xchg
and
jmp
cmp
test
jmp
mov
jecxz
shll
movsl
push
insl
mov
and
xchg
pop
xchg
dec
cmp
hlt
and
lock
in
mov
jl
sbb
mov
cmp
repnz
and
adc
cmp
ret
cmp
mov
call
leave
hlt
mov
jbe
add
sbb
xchg
pop
push
jecxz
lods
ss
jns
mov
neg
mov
cmp
jbe
inc
jle
lcall
mov
xor
adc
xchg
call
loope
mov
iret
push
adc
adc
faddl
clc
cmpl
cltd
and
out
in
jge
es
call
out
rcrl
arpl
rol
jp
lea
repz
adc
cli
push
psubb
fisttpl
dec
les
or
fldt
fmuls
inc
clc
in
xchg
ret
jle
addr16
mov
jg
mov
in
bswap
inc
js
mov
hlt
xchg
add
ljmp
xor
sub
jnp
inc
cmpl
push
imul
inc
iret
test
dec
sti
loopne
enter
dec
roll
outsb
out
imul
xlat
inc
and
insl
or
adc
add
mov
jno
lea
push
mov
xchg
mov
jge
stos
sbb
insl
insb
pusha
cmpsb
gs
add
sar
out
and
in
add
dec
mov
dec
mov
xor
jmp
add
jnp
push
xchg
int3
xchg
ljmp
iret
les
incb
fdivp
inc
mov
test
add
sub
lds
xchg
int
push
sbb
rcrl
outsb
popf
mov
fistps
mov
cmpsl
je
shlb
xchg
jbe
test
rcrl
fwait
stc
push
shl
lods
mov
sub
in
xor
and
push
or
or
imul
mov
outsl
push
ss
pop
xchg
std
mov
in
jo
das
scas
add
in
pop
jmp
push
mov
and
xchg
sub
mov
push
xor
movsb
jl
mov
adc
add
mov
std
subl
sbb
and
andl
jbe
imul
int
pop
push
xchg
nop
jmp
ss
mov
jg
mov
mov
lahf
and
xchg
and
lahf
inc
cmp
xor
push
in
fimull
mov
push
lcall
in
in
in
mov
aaa
mov
in
ret
wrmsr
sahf
outsb
mov
test
adc
mov
jne
cltd
fcomps
xchg
rclb
lcall
xor
inc
push
cmc
movsb
xor
sub
ds
push
lds
push
outsb
push
mov
sub
into
inc
imul
stos
movsb
cmpb
mov
stos
icebp
dec
xlat
jae
jbe
mov
push
push
dec
ret
cmpsl
push
dec
addl
add
hlt
leave
bound
pop
and
push
xchg
jae
fdivr
repz
add
cmp
dec
xchg
in
and
push
and
push
add
adc
jns
subl
fdivp
pop
lret
or
aam
xchg
dec
lock
es
ret
in
xor
push
pop
xor
mov
push
jg
or
scas
out
mov
and
outsb
mov
ficomps
xor
imul
into
jecxz
pop
pop
xor
cmpsb
cmp
mov
and
pop
lods
aad
popa
sbb
sub
fwait
in
mov
dec
out
add
mov
pop
aas
fstl
or
enter
and
je
xchg
nop
outsl
xchg
adc
cltd
xor
ja
cmpsb
aam
mov
mov
insb
dec
jno
iret
xchg
lock
xchg
xor
dec
and
shl
out
andl
push
int
xchg
pop
popfw
inc
dec
mov
out
mov
in
sbb
push
sub
fiadds
mov
pop
xchg
mov
mov
mov
jmp
imul
cmp
das
lret
sbb
ficompl
pop
sub
enter
adc
dec
cmp
mov
mov
clc
push
sub
lods
or
addb
xor
adc
jg
push
nop
dec
xchg
jae
rolb
push
xchg
xor
mov
iret
loope
fnstsw
hlt
lret
push
gs
sub
sub
cmp
mov
cmc
shll
and
adc
mov
push
sar
out
cmp
loop
sbb
dec
xor
sbb
or
outsb
imul
out
inc
push
std
stc
inc
inc
mov
loop
xlat
push
adc
int3
xchg
add
in
imul
ja
movsb
push
in
call
jno
mov
jp
popa
add
cmpsb
mov
lret
mov
or
dec
dec
and
dec
test
gs
xor
mov
shrl
adc
cmc
ja
test
enter
cld
or
push
rcr
jecxz
jo
sbb
xchg
fildll
fildl
jo
and
pop
bound
jne
mov
rcll
rorl
cltd
mov
sub
jmp
lods
push
lock
dec
pop
and
adc
cmc
add
pop
test
mov
adc
int
dec
cmp
mov
in
push
cmp
dec
in
rcrb
xor
roll
int3
xor
nop
int
add
mov
pop
hlt
test
mov
out
add
outsl
cli
and
cmp
mov
out
mov
int
das
fmull
dec
inc
and
add
aam
adc
add
lods
fcomi
add
mov
pop
mov
adc
jge
jo
test
stos
push
mov
mov
stos
inc
push
sbb
frstpm(287
test
jne
lds
aam
jle
and
xchg
jb
push
xor
imul
jne
je
push
push
nop
popf
mov
scas
or
xor
dec
scas
xorb
mov
cld
daa
mov
mov
sbb
jne
insb
loope
jmp
xor
push
mov
mov
in
mov
out
inc
js
jno
int3
in
jmp
call
subb
imul
sub
movsl
shll
pop
or
fiadds
or
rcr
mov
cmp
out
mov
push
mov
xor
inc
in
cmp
fidivrs
add
push
movsb
out
xchg
movsl
push
jmp
enter
dec
xor
adc
push
xchg
pop
sub
sbb
clc
xchg
xchg
pop
push
xchg
scas
ljmp
in
mov
inc
dec
pop
add
ret
xor
xlat
push
arpl
cmp
sub
daa
lahf
jp
inc
mov
pop
inc
aad
and
inc
cmp
cli
cmpsl
out
inc
fs
cld
sahf
test
repz
sbb
sbb
cmp
dec
dec
mov
inc
mov
xchg
dec
sub
dec
jnp
inc
sub
xchg
ss
int
pop
cld
mov
in
fdivrs
mov
mov
and
push
pop
sbb
cmpsb
mov
add
fsts
sbb
movsb
gs
loopne
mov
cltd
in
call
and
movsb
test
xchg
jnp
push
mov
ror
in
aam
fnsave
arpl
mov
sahf
loope
pop
mov
js
divb
test
push
aad
sub
lods
and
outsw
or
bound
imul
popa
push
or
loope
jecxz
adc
aam
cmpsb
nop
scas
cmpsl
clc
add
rcr
sbb
les
jmp
movsb
xchg
imul
xor
inc
mov
fucomi
imul
or
xchg
or
fsubrs
ffree
into
dec
fistpl
fistpll
sub
mov
dec
jle
fimull
cmpsb
pushf
mov
xchg
push
sbb
je
rclb
out
loopne
insb
pop
les
jo
std
andb
testl
fistpll
sbb
xchg
push
and
shl
cmp
and
inc
cmpb
mov
push
jb
dec
hlt
into
cmpsb
xchg
sahf
shlb
andl
idivb
jne
mov
push
xchg
lea
push
mov
les
cltd
ds
dec
mov
out
hlt
add
jl
lods
out
mov
sbb
inc
sub
mov
xor
add
xchg
jl
cmp
pop
mov
push
mov
test
jb
shrb
mov
popa
pop
cmp
into
aam
and
xchg
movhps
mov
fisubrs
repz
inc
hlt
and
xchg
loope
mov
cli
cld
mov
dec
add
dec
push
std
sbb
inc
cmp
int
psrad
lods
enter
in
aas
fbld
jmp
dec
mov
sbb
or
inc
repnz
pop
inc
cmp
mov
xchg
pop
pop
sub
dec
fnstsw
cmc
lds
stos
mov
mov
dec
cwtl
dec
sub
push
pop
inc
repz
daa
dec
std
cmp
xlat
pop
mov
call
or
stos
in
mov
jno
adc
je
inc
cmc
int3
jno
hlt
xchg
cmpsb
rcl
in
dec
push
lret
test
addr16
inc
out
lcall
and
aaa
fimull
pop
xor
bnd
loope
pop
mov
inc
shl
pop
cmp
mov
jne
jo,pt
push
add
push
out
int3
xchg
fsub
sub
dec
je
scas
fdivl
cmp
dec
bound
and
enter
cmp
repz
dec
add
mov
jmp
jmp
inc
outsb
les
xchg
add
pop
cwtl
daa
pop
es
mov
add
inc
pop
and
adc
push
inc
into
cmc
and
movsb
roll
rclb
adc
mov
loopne
push
adc
loope
popa
movsb
mov
mov
push
cmp
outsl
jne
or
xchg
xor
mov
aad
jbe
ja
aad
inc
ds
stos
orl
pop
arpl
aam
sbb
icebp
dec
inc
and
adc
cli
scas
sub
call
jecxz
iret
mov
repz
ds
cwtl
jp
lcall
dec
mov
aam
dec
inc
add
dec
imul
fsubs
inc
mov
pop
sahf
roll
adc
pop
mov
test
les
mov
mov
aam
dec
add
mov
jg
pop
xchg
loope
adc
mov
and
lret
xchg
lock
in
sbb
sarl
and
and
call
xchg
lret
inc
xchg
mov
sub
and
jle
cltd
fistpll
lods
cld
jecxz
push
push
pop
inc
lahf
jno
sbb
lods
mov
push
cmp
rcrb
jl
shlb
add
mov
enter
mov
ljmp
call
out
sub
aas
dec
jae
pop
sahf
clc
addr16
push
popf
inc
push
mov
push
repnz
nop
add
clc
xor
outsl
add
cmp
jecxz
orb
pop
mov
out
pop
pop
push
cmpsb
cmp
dec
js
push
ror
loop
mov
pop
fcoms
cmp
jns
mov
sub
or
inc
ds
add
xor
movsl
inc
adc
push
lock
sti
cs
out
test
push
inc
fwait
inc
xchg
mov
fsubs
aas
icebp
xor
sbb
jne
lret
out
stos
xchg
xlat
pop
loopne
add
out
jbe
data16
rcrb
sub
sbb
repz
push
sbb
jb
sbb
push
test
mov
pop
fnsave
xchg
add
add
xchg
addr16
pop
clc
adc
or
add
repz
fldenv
jae
pop
stos
fwait
int3
daa
clc
rolb
icebp
movsb
pushf
adc
mov
pop
gs
lret
rcll
sub
int3
pop
and
add
pop
arpl
fs
pop
pop
out
out
cli
jo
leave
inc
inc
pop
inc
addr16
cmp
xchg
lds
outsl
pop
sub
jb,pn
lahf
ror
sbb
push
outsb
or
cmp
cs
lcall
imul
jl
xchg
or
sbb
dec
xchg
cwtl
addr16
loop
sub
in
inc
mov
jo
sarb
flds
or
sti
lahf
insb
add
inc
flds
or
out
dec
mov
test
cli
and
aad
sbb
cli
ja
insb
dec
out
sub
xchg
and
repz
jae
and
inc
movsl
negl
repnz
lahf
jae
jmp
and
les
fiadds
add
and
imul
cld
or
or
movsb
add
cmp
dec
sbb
sti
jbe
cmp
aad
fmull
inc
std
mov
sub
cmc
divl
fiaddl
mov
outsb
rcrb
out
loop
in
cmc
xor
or
stos
push
push
push
xchg
repnz
ss
cmpsb
sbb
js
pavgw
nop
jge
sub
int3
sahf
cmpsb
into
adc
or
mov
into
push
loop
shlb
jge
xor
pop
ror
das
je
rcll
or
jae
inc
mov
pop
jns
lods
in
repnz
sub
mov
aam
adc
ss
sti
push
repnz
adc
js
pop
and
mov
icebp
or
lock
stos
pop
mov
mov
lret
pop
cmp
insb
pop
dec
mov
lret
roll
xor
mov
call
pop
pop
and
inc
mov
lahf
je
lret
xor
sbb
cld
cld
or
iret
or
xchg
add
cltd
std
cmpsl
lahf
imul
mov
xchg
in
repz
pop
or
js
xor
jne
inc
xor
bound
xchg
push
cmp
std
jge
inc
stos
jmp
xlat
or
mov
repnz
jno
inc
xchg
mov
mov
insb
xchg
add
jl
and
pop
pop
xor
inc
iret
daa
dec
lcall
inc
scas
jno
dec
aam
mov
xorb
jnp
mov
and
mov
iret
push
lret
mov
ja
and
es
adc
mov
mov
xchg
addr16
push
out
xchg
pusha
xor
hlt
xor
mov
jae,pn
dec
cmp
jge
jl
insl
xor
fidivrs
scas
call
inc
in
pop
adc
das
xchg
pop
sbb
push
dec
and
je
test
or
mov
mov
push
roll
and
sbb
roll
jns
aas
jg
in
mov
sbb
icebp
jns
outsb
xchg
les
cld
jns
aaa
and
aaa
or
mov
push
mov
cmc
arpl
rclb
xchg
cmpsl
test
mov
sub
or
sahf
jmp
cmpsl
push
scas
imul
jne
out
adc
push
leave
or
sbb
adc
push
cmc
mov
or
sub
cmp
sub
inc
xchg
sbb
mov
aas
push
std
jmp
mov
or
ret
jle
push
rclb
mov
fcoms
lds
mov
push
push
lret
stos
push
inc
popf
movsb
in
sbb
test
clc
push
in
xchg
movsb
fcoml
mov
jmp
jbe
xchg
add
sub
loop
popf
cmp
movsb
cmp
xlat
mov
dec
popf
stos
mov
pop
pop
xor
pop
mov
jmp
sub
mov
ja
cmp
dec
incl
adc
adc
and
push
push
adcl
dec
cs
sub
mov
fdivl
mov
adc
jns
std
lds
cmc
pushf
test
incl
xchg
int3
adc
jmp
mov
pushf
movsl
cmpsb
add
sbb
push
test
sub
daa
sbb
cld
mov
mov
sbb
icebp
add
daa
insb
sub
iret
inc
test
bound
adc
push
fisubs
dec
push
test
pop
push
lods
inc
sbb
xor
push
mov
jb
mov
push
xor
sti
ret
fwait
jne
aas
xchg
aas
mov
push
inc
ljmp
jnp
cli
mov
scas
aas
pop
shlb
movsl
mov
and
aam
out
adc
push
int3
pop
fwait
pop
not
add
js
xchg
sbb
in
pop
xor
pop
in
mov
dec
imul
popf
cmp
add
push
xor
hlt
std
or
jb
lods
mov
addr16
and
cltd
push
lret
int
bound
and
fs
sub
stos
lods
sbb
mov
lret
sub
fsubrl
cld
mov
inc
inc
div
mov
pushf
nop
xchg
mov
sbb
pop
pop
lods
fs
push
xchg
into
insb
shrl
cmp
stos
aas
mov
fucomip
in
jecxz
rorb
lret
fstpt
mov
jo
inc
cmc
mov
out
sti
pop
sub
ljmp
mov
mov
aad
in
pop
and
cli
movsl
pop
sahf
xor
cmc
and
loope
dec
les
popf
mov
idiv
jp
les
fs
push
setnp
inc
or
jle
mov
adc
ljmp
jae
xchg
pushf
loopne
jnp
popa
repz
dec
fwait
movsb
movsl
int
shll
jbe
xchg
test
pop
fwait
jmp
xor
imul
loop
out
xchg
or
call
aam
daa
arpl
fs
pop
daa
xchg
xor
or
jne
mov
sub
or
jge
mov
jmp
mov
mov
xor
inc
sub
or
call
fsts
xchg
jne
mov
test
sub
sbb
mov
insl
mov
jle
xchg
push
or
mov
mov
xchg
mov
mov
ljmp
sbb
les
or
sbb
std
cmp
loopne
push
push
mov
out
lds
xchg
icebp
add
loopne
mov
movsb
adc
in
and
mov
leave
dec
sub
jbe
std
ljmp
or
scas
in
mov
ror
cli
inc
adc
cmpl
push
sub
inc
dec
insl
xchg
fisttpl
fwait
pushf
clc
movsb
fsubrs
fs
in
sbb
in
mov
adc
mov
dec
mov
pop
mov
test
dec
mov
repnz
push
push
out
mov
xchg
test
sub
xchg
das
sub
lods
adc
inc
aas
push
cs
adc
and
dec
jmp
jg
cmpb
cs
rcrl
mov
sbb
mov
loopne
aam
ficoms
fs
xor
shll
adc
ja
adc
ja
lods
push
cmp
pusha
push
jnp
push
fstl
aaa
outsl
jo
xor
iret
xchg
mov
clc
or
xchg
and
add
mov
imul
in
pushf
mov
nop
shr
inc
pop
mov
push
daa
lret
xchg
stos
in
jp
jnp
push
bound
movsl
push
cmp
imul
in
push
inc
or
sub
and
test
pushf
lcall
push
sbb
dec
es
mov
fwait
pop
fnstsw
test
dec
inc
pushf
pop
lods
jb
cs
xor
pop
push
push
xchg
mov
push
mov
add
dec
fisubrl
icebp
dec
jae
inc
adc
in
jnp
mov
xor
cmp
std
or
aas
outsb
pop
jno
add
sub
inc
ja
push
and
bound
jge
out
adc
fdiv
ret
js
add
stos
rorl
insl
loop
mov
sbb
daa
inc
jl
push
sti
pop
shll
xor
cld
xor
cmp
jg
insb
clc
aam
and
repnz
repz
jo
xchg
push
stos
xor
cmc
pop
aad
js
xlat
fwait
xchg
sbb
test
adc
jb
int3
push
call
dec
mov
dec
add
sahf
scas
cmp
testb
mov
inc
xchg
fistpll
fwait
mov
lret
lods
mov
js
mov
push
mov
scas
inc
insb
inc
mov
div
in
shlb
adc
in
mov
xor
js
xchg
test
pop
lock
jecxz
movsb
out
movsl
icebp
jbe
popw
dec
dec
dec
call
push
int
cmpsb
cs
cmp
inc
fwait
push
pop
pop
mov
add
lea
mov
aad
jo
mov
hlt
mov
adc
movsl
ficoml
jl
sub
mov
stos
pop
pextrw
bound
jb
dec
mov
lds
insl
enter
dec
arpl
dec
int3
mov
mov
int3
sbb
pop
int
std
dec
cld
in
push
retw
mov
push
out
loopne
or
pop
in
inc
jb
add
insl
out
pop
jo
mov
pop
shl
and
xchg
mov
ret
lcall
xchg
mov
pop
subl
xor
sbb
dec
test
sbb
inc
mov
xchg
and
mov
ret
xchg
fisubrl
mov
fisubrl
aas
xchg
sub
mov
inc
insb
and
mov
xor
cld
sub
clc
mov
loopne
push
push
bound
lcall
add
daa
push
pop
push
jg
in
mov
hlt
dec
push
test
stc
xor
pop
push
or
loop
clc
add
mov
sbb
loopne
test
ljmp
fstpt
dec
arpl
bound
lock
imul
shrb
inc
sub
cmc
cmp
mov
jb
mov
das
fimull
mov
dec
mov
dec
xchg
adc
out
stos
and
xchg
mov
lods
push
cltd
mov
mov
inc
sbb
pop
mov
lods
and
inc
sbb
idivb
cmpsl
cmp
mov
adc
in
std
lea
ds
je
mov
dec
cs
jl
xchg
jae
or
jae
xchg
scas
filds
xor
addb
add
into
sbb
and
pusha
xor
fucomp
and
sti
push
mov
out
in
pop
lock
sbbl
mov
int
mov
mov
icebp
mov
mov
cmc
jg
cmp
add
push
xor
cmp
inc
xor
subl
pop
es
jle
mov
mov
test
mov
push
xchg
inc
cli
push
icebp
sbb
in
pop
cmp
xchg
xchg
es
jo
inc
mov
jge
and
mov
push
repz
cmp
inc
inc
jp
fcoml
adc
data16
lods
inc
pop
dec
jo
sub
fnstsw
mov
mov
stos
in
mov
jle
mov
xor
push
cli
xor
les
les
lcall
lret
arpl
out
insb
call
pop
les
cwtl
xlat
call
iret
adc
cmp
add
movb
fstpl
cmp
or
ss
dec
repnz
add
icebp
decb
js
fldenv
aaa
outsl
mov
subb
sub
push
jnp
mov
push
icebp
sbb
arpl
mov
mov
sub
mov
mov
insl
jns
dec
sub
test
inc
loopne
cmp
in
fnstsw
shr
lock
mov
cli
pushf
ret
shlb
outsl
in
out
adc
or
push
dec
int
jnp
xchg
push
shr
mov
add
cmp
vunpcklps
arpl
mov
sbb
and
stos
inc
rol
mov
lods
fbstp
mov
mov
lods
lahf
mov
xchg
push
lea
pop
in
mov
mov
jecxz
push
push
imul
sbb
xor
ljmp
adc
pop
push
or
enter
mov
rcrb
cmpsb
push
xchg
test
pop
imul
inc
sbb
cwtl
cmp
lods
xchg
or
jmp
add
mov
out
cmp
push
xor
sbb
mov
out
sahf
shrb
loop
les
adc
add
inc
test
sbb
lcall
mov
int
es
or
sti
outsb
cmpsl
xor
mov
hlt
add
mov
sti
mov
int3
lea
fs
pop
and
dec
xchg
or
shrb
js
ja
cltd
push
sub
fcmovnbe
xor
or
mov
xlat
or
dec
bound
enter
bound
cmp
jge
adc
sbb
adc
cmpsb
insb
jae
in
mov
xchg
mov
pop
cltd
mov
mov
adc
scas
push
mov
lods
fisubl
mov
xchg
push
cmp
std
rolb
and
popa
or
cld
pusha
fisubl
sbb
jl
out
adc
or
cltd
dec
and
jmp
push
fldl
jecxz
or
gs
lret
cltd
jle
je
mov
jno
sub
pop
xlat
mov
sahf
dec
add
int
lret
test
dec
bound
or
add
lods
cmpxchg8b
jp
outsb
sbb
mov
lcall
pop
mov
cmc
jmp
inc
outsl
ds
inc
aad
xlat
mov
and
loopne
jno
std
cmpsl
mov
jle
sbb
sbb
sub
pop
aam
push
dec
or
jl
shl
cmp
je
movsl
mov
aad
sbb
pusha
nop
sub
stos
js
adcb
mov
adc
jmp
idivb
mov
mov
add
mov
or
mov
adc
loopne
mov
and
mov
mov
stc
int
pop
in
jbe
ret
jae
in
cmpsl
push
cmp
aaa
mov
fldenv
nop
stos
fadds
pop
in
data16
fsubrs
lret
xchg
insl
jo
adc
inc
loop
xor
mov
or
insl
loopne
insb
or
ja
xchg
fcoml
pop
std
lret
push
sti
mov
enter
push
push
data16
cs
adc
int
insl
imul
cs
push
cmpsb
out
repz
pop
out
stos
jmp
cmc
mov
ret
mov
aas
pushl
cmc
stos
subl
shlb
aaa
inc
or
push
xchg
jne
mov
nop
mov
cmp
or
xchg
stc
dec
mov
outsl
stc
mov
je
cmc
add
cmp
xlat
int
mov
xor
ret
sbb
jno
jl
fld
jp
jp
aas
aas
xchg
cmp
out
inc
xor
fnclex
push
push
cli
xor
inc
mov
ja
into
mov
psllq
adcl
repz
clc
mov
aam
add
sub
cmpb
pop
xor
jae
dec
and
jecxz
xor
scas
lods
dec
mov
sbbb
xlat
movsb
mov
mov
inc
mov
ret
jo
out
pop
jecxz
mov
dec
push
cmpsl
xchg
jmp
std
imul
out
out
jl
arpl
pop
arpl
stos
mov
das
movsl
pop
ja
test
into
stc
dec
in
mov
icebp
pop
sbb
scas
cmp
xchg
mov
icebp
imul
stc
stos
mov
xchg
mov
pop
and
jbe
and
dec
sub
jb
data16
fcoms
pop
cmp
pop
cmp
in
sub
in
xchg
call
sbb
jp
not
mov
rolb
cmp
sbb
and
js
rep
aam
aaa
mov
inc
jae
bnd
sbbb
movsb
lret
dec
insl
mov
inc
rcrb
iret
fs
mov
fcomps
das
fisttpll
xor
rcrl
push
adc
pop
pop
icebp
sti
xchg
movsb
nop
mov
pusha
test
and
aaa
mov
cmpsl
jo
xor
jne
stc
clc
mov
cli
decl
out
xchg
push
fwait
xchg
dec
jge
xchg
lods
jmp
aaa
mov
dec
scas
std
addr16
sbb
inc
mov
shlb
mov
mov
mov
push
out
dec
lcall
inc
test
dec
pop
insb
inc
fcmovne
fcmovnb
jl
movsl
pop
test
lock
lock
push
dec
imul
sub
cwtl
nop
test
outsl
sbb
inc
xor
inc
ret
stc
pop
in
aam
pop
inc
adc
je
jnp
and
fs
scas
mov
mov
sub
hlt
loopne
dec
sahf
xor
inc
int
aam
shrb
pop
incl
jbe
mov
jl
stc
mov
shll
sbb
and
popf
out
add
test
int
loop
sarb
mov
adc
movsbl
pop
scas
test
out
adc
cmpsl
dec
icebp
repz
int
dec
pop
stc
push
fstl
push
xor
mov
mov
xchg
fsubl
repz
ret
mov
cmp
sub
push
pop
andl
and
jae
push
xchg
insb
and
dec
ljmp
pop
xor
or
xchg
fwait
sub
mov
add
xchg
xchg
xchg
sbb
mov
mov
cmpsl
in
mov
adc
inc
sarb
pop
pop
mov
popf
lods
test
daa
sub
in
mov
data16
ljmp
mov
adc
jno
adc
or
push
jbe
sbb
mov
outsl
pushf
ret
cmp
sub
adc
xchg
push
mov
ret
icebp
mov
push
jo
dec
lods
xor
xchg
das
sbb
in
cmpsl
and
dec
ret
or
xor
jecxz
arpl
dec
loope
movsb
mov
push
fists
sub
stc
adc
jae
out
stos
aaa
jmp
dec
pop
mov
andb
and
bound
lock
cmpsl
push
xchg
dec
dec
popf
cmp
mov
xchg
pop
lret
mov
dec
hlt
xchg
shl
jbe
js
fdivl
or
loopne
shl
jne
dec
xor
inc
roll
sbb
and
fs
mov
inc
sub
push
dec
push
call
cs
jecxz
push
add
add
jg
int3
sub
inc
repnz
push
sub
jbe
jae
xor
aas
leave
lds
and
bound
movsl
shr
repnz
data16
sbb
ret
popf
test
xlat
fimuls
aas
or
dec
mov
outsb
jns
pop
icebp
dec
inc
xchg
sub
out
lret
nop
stos
fwait
cmpsl
adc
stos
push
ret
cmc
inc
jo
insl
pop
push
push
mov
jne
ficoms
push
add
jmp
loope
sub
or
and
xchg
jge
xor
jnp
jns
xchg
sub
rolb
std
ss
sti
jmp
outsb
inc
gs
xchg
xchg
test
sahf
jo
pusha
add
add
fldt
cltd
mov
or
push
ds
jae
shll
sbb
pop
pop
imul
mov
or
dec
jp
push
and
adc
jmp
shll
mov
dec
adc
add
imul
out
and
loope
xchg
sub
fstps
jo
sub
ds
xchg
mov
lock
adc
jo
dec
out
adcl
jge
sahf
out
rorb
jmp
aad
push
sub
int
out
jle
out
aam
fldenv
jp
push
es
lret
ljmp
adc
and
push
or
or
dec
adc
dec
lret
pusha
push
sub
rcr
jg
cld
lea
dec
dec
dec
sbb
cmp
fildl
sbb
and
leave
jae
stos
inc
jno
iret
filds
mov
push
aad
stc
pop
adc
js
fwait
cmpsb
inc
and
sub
sub
in
aad
sub
jns
jg
mov
pusha
jg
or
sub
cwtl
xchg
adc
pop
bound
call
adc
or
xchg
test
cwtl
pop
xor
sub
repnz
shl
cld
or
add
jge
or
pop
or
cwtl
add
inc
xchg
inc
subl
sub
js
jne
adc
mov
fnstcw
je
mov
sub
outsb
inc
lods
lea
test
scas
inc
sti
adc
pop
mov
xor
jo
dec
sub
insl
mov
in
add
sbb
inc
inc
jae
stc
mov
mov
out
xchg
xchg
ljmp
leave
int
ljmp
inc
sbbl
and
jno
cwtl
enter
inc
outsl
jns
inc
mov
gs
and
sbb
js
clc
push
push
mov
in
sbb
xor
sub
lahf
shll
xor
call
pop
movsb
mov
cltd
data16
adc
loop
push
dec
dec
rolb
xchg
pop
cld
pusha
shrl
adc
xchg
mov
insb
fistpll
repz
or
push
fisubl
stos
jae
iret
inc
mov
out
lret
in
xor
pushf
add
push
push
es
andb
shl
test
fildl
and
pop
push
jno
adcl
cld
push
mov
mov
and
cmp
push
movsl
les
inc
pushf
sarb
push
jl
addb
daa
aam
cmpsb
mov
mov
lods
push
jp
std
jnp
addr16
loopne
jmp
inc
scas
pop
pop
out
fidivrl
xchg
rcl
xchg
mov
adc
daa
pushf
int
aam
push
or
mov
sbb
mov
xor
sub
iret
pop
lods
mov
test
arpl
and
jecxz
adc
push
sbb
cmpsb
sti
push
loope
fs
popf
xchg
cmpsl
popf
dec
sub
leave
out
sub
jge
xor
in
pop
push
out
jp
or
idivb
xor
sub
mov
data16
and
outsb
out
adc
shrb
inc
push
xchg
jg
in
lds
pop
pop
cli
int3
js
repnz
xchg
sbb
aad
pop
pop
inc
in
pushf
and
aas
mov
and
sar
fildll
inc
mov
inc
call
inc
push
sub
fwait
inc
mov
cmp
mov
gs
int
out
cmp
xor
add
jmp
jno
pop
test
ret
xchg
push
idivb
scas
sti
imul
jno
cmc
into
and
in
push
lahf
mov
in
inc
jne
lret
les
cwtl
add
adc
js
rorb
push
adc
mov
cmp
xchg
adc
out
fwait
adc
mov
test
mov
inc
mov
rcrl
icebp
xchg
xor
dec
lret
push
sbb
daa
mov
pop
sub
clc
jno
out
out
sbb
cmpsl
repnz
jae
in
jecxz
jl
or
into
or
pop
pop
sub
repnz
movsb
aas
cmc
mov
cmp
push
xchg
imul
imul
mov
cli
sarb
ret
pop
sti
mov
rcr
jl
aad
jp
jns
add
sub
and
test
add
daa
xor
cmp
and
or
mov
xlat
test
jae
repz
je
rcrb
stc
cmp
fstpt
adc
or
fildll
and
es
mov
lock
ret
imul
and
mov
aaa
shlb
adc
fidivrl
mov
rclb
push
call
add
and
xchg
clc
mov
popf
and
mov
push
dec
out
or
jecxz
out
xchg
incl
jb
mov
or
scas
popa
add
mov
sub
jns
lods
lods
sbb
and
add
rcrb
aam
mov
jne
fisttps
stc
daa
dec
inc
xchg
xor
filds
mov
push
stc
sub
xchg
adc
paddusw
mov
rcrl
fs
mov
sti
movsb
clc
adc
lcall
xor
daa
pop
jle
sahf
out
cmp
mov
jle
outsb
inc
pop
jae
in
xchg
mov
jp
icebp
popa
mov
cltd
stos
repnz
mov
test
orl
int3
push
pop
jbe
and
pop
pusha
push
ljmp
enter
mov
sbb
or
dec
mov
outsb
repnz
stos
data16
jmp
orl
mov
inc
arpl
subl
mov
loop
sub
and
jb
jb
aam
js
in
mov
fists
sbbl
pop
xchg
and
mov
sbb
scas
ficoms
jecxz
mov
jg
jg
xchg
jecxz
xor
enter
pop
cmpl
dec
aam
xchg
and
add
mov
or
popa
lret
repz
sub
push
shll
cmp
gs
aam
shrl
test
xor
das
rcll
jae
in
pop
orb
adc
in
mov
pop
mov
add
ret
xor
arpl
lds
add
shr
arpl
xchg
add
push
push
cmp
fldcw
int
sbb
xlat
sub
test
xor
pop
xchg
insl
fdivrs
inc
push
pop
int3
ljmp
pop
fisubrl
stos
in
adc
leave
int
and
mov
addr16
push
fsub
mov
dec
aas
out
inc
xor
lcall
xlat
cld
jmp
jno
xor
arpl
int
js
xlat
cmp
incl
popa
xchg
ret
lods
cmp
inc
xchg
outsl
popa
inc
addl
jecxz
rcrl
and
push
mov
fisubl
cmp
or
sub
hlt
push
mov
shll
lcall
inc
sub
push
lret
push
cmp
push
les
shrd
imul
fwait
xor
mov
jge
leave
and
add
xchg
add
ss
add
inc
dec
ljmp
xor
xchg
pop
shl
jb
mov
adc
lahf
int3
cltd
dec
pop
push
daa
rcrl
pop
leave
inc
in
jg
adc
fisubrl
call
or
and
mov
sub
mov
xor
imul
in
and
enter
aad
or
push
pop
or
xchg
jge
mov
pop
popa
add
nop
neg
je
stc
sub
xor
sbb
mov
shr
das
adc
lcall
xlat
sub
les
repz
je
jmp
mov
dec
insl
pop
out
scas
adc
into
add
sub
add
push
addr16
loope
call
pop
loope
out
bound
movq
lret
in
fsub
dec
and
xchg
out
add
insb
leave
lock
pusha
pop
popf
scas
or
clc
xor
std
sub
cwtl
cld
sbb
jo
jo
hlt
xorl
cmp
pop
xchg
iret
out
or
int
xor
test
push
pusha
mov
mov
daa
inc
bound
mov
mov
xabort
jno
adcb
in
adc
push
add
sub
fsubrs
push
les
mov
loope
movsl
bound
pop
jns
dec
shll
pop
sahf
nop
aaa
push
imul
jne
mov
mov
gs
fwait
mov
inc
ret
jle
inc
sbb
jp
xchg
lea
push
sbbl
out
add
pop
lret
mov
roll
xor
xor
push
dec
lret
cwtl
or
es
add
push
mov
out
mov
jae
xor
cmp
es
decb
xchg
and
xor
jle
add
int
lock
cltd
movsb
test
add
ss
xor
dec
mov
out
jle
dec
mov
popa
fwait
xlat
cmp
popf
pop
pop
call
leave
nop
fstps
and
dec
sbb
ljmp
dec
jl
test
inc
sbb
cmovg
jmp
sub
rolb
sub
mov
sbb
test
pop
and
xor
inc
test
mov
in
int3
je
jge
jl
out
xchg
sub
and
and
push
add
mov
pop
popa
out
dec
stos
jecxz
in
mov
add
ljmp
outsl
enter
push
lcall
pop
icebp
aam
mov
icebp
lcall
mov
movsb
cltd
cmp
add
clc
stc
mov
out
push
pop
mov
into
ds
jne
jbe
ret
push
fs
es
ret
pop
xchg
dec
sbb
outsb
cmp
jbe
loopne
adc
ja
xlat
dec
movsb
lcall
aam
jnp
xor
cmp
divl
in
and
mov
insb
mov
push
ss
xchg
cwtl
outsl
arpl
xor
jae
lds
sub
loop
cwtl
popa
popf
dec
sub
and
add
adc
pop
push
aam
insl
mov
lods
mov
jo
mov
test
xchg
pop
cmp
xchg
pop
outsb
mov
movsl
popf
stc
xchg
das
and
cwtl
data16
fs
inc
mov
into
cmpsl
adc
cmp
stos
subb
ljmp
inc
je
mov
outsb
outsb
ror
loope
cs
xchg
push
lods
push
push
mov
push
xor
lahf
push
sub
nopl
movhps
cwtl
and
dec
xor
jp
jne
mov
dec
push
repz
pop
clc
jnp
push
sub
adc
loop
movsl
push
cmp
sbb
jp
xchg
pop
addr16
cmovge
scas
cltd
mov
mov
xor
aad
dec
fwait
cmp
es
cmp
fidivrs
xchg
or
movsb
nopl
roll
or
or
mov
into
fscale
or
rcrl
out
addl
test
flds
int3
and
push
rol
stos
scas
mov
mov
ss
jge
adc
enter
push
push
pop
test
jle
icebp
or
fxam
push
pop
jmp
jae
and
cmp
mov
push
in
sarb
mov
jb
sub
jg
loope
lret
push
mov
push
out
les
divb
fdivr
pop
popf
outsl
int3
mov
sub
ret
adc
movsl
adc
test
out
mov
inc
mov
lods
dec
mov
loopne
lahf
cmc
int
jb
jg
mov
out
pop
jge
cli
cmp
imul
mov
ret
lds
in
pop
push
and
push
insl
pop
or
mov
xchg
add
mov
pop
mov
cwtl
cmpsl
es
sar
clc
aaa
mov
add
in
jecxz
loop
cmp
hlt
fists
cmp
mov
sbb
xchg
fs
je
jl
aam
pusha
mov
sahf
nop
cmpb
dec
ja
cmpsl
das
les
nop
add
jno
cmc
std
ljmp
aaa
iret
fildll
jg
jne
int
ljmp
cmpsl
insl
inc
cltd
push
mov
scas
aas
lods
push
adc
rcrl
jle
lods
ficoml
cli
imul
pop
stc
out
xchg
test
cmp
call
jg
sbb
in
fwait
cmpsl
sub
shl
test
movsl
mov
and
mov
xchg
insb
leave
adc
dec
push
mov
adc
imul
stos
dec
xor
rcr
xor
jo
add
adc
mov
add
pop
dec
lret
mov
nop
clc
jne
inc
nop
hlt
dec
lret
xor
call
dec
mov
popf
repz
js
lcall
cmp
dec
mov
cmpsb
jp
cli
cmp
cvtps2pi
or
daa
popa
xor
fwait
or
xor
xor
ljmp
mov
cltd
and
pop
lahf
and
sahf
push
inc
icebp
rolb
mov
data16
sti
icebp
call
leave
mov
cs
hlt
xor
push
cli
jecxz
lods
jmp
scas
ret
clc
sbb
jne
lret
sahf
xor
jle
into
mov
ja
add
aad
or
rcrb
jge
jl
daa
xor
push
cmp
js,pt
mov
mov
mov
add
xor
ljmp
dec
int3
xor
pusha
push
pushf
mov
dec
insl
ja
pop
or
pop
aaa
ficoml
icebp
adc
leave
jne
add
add
lret
roll
xchg
sbb
jnp
cld
xor
lahf
outsl
mov
adc
fimull
dec
repnz
push
or
xchg
lcall
inc
test
jle
lret
insb
imul
out
add
movb
add
scas
es
loopne
mov
fmuls
out
es
lcall
sbb
shr
xchg
popf
cli
fstl
and
inc
into
xorb
xlat
adc
pop
jp
imul
push
and
sub
mov
adc
cmp
fwait
dec
inc
gs
pop
cmp
in
mov
sub
fsubs
mov
push
push
stc
inc
ss
sbb
cmpsb
ss
arpl
inc
cwtl
xchg
cltd
sbbb
out
cmp
ja
mov
mov
stos
fists
insb
xlat
pop
imul
adc
push
xor
insl
push
jns
cmp
mov
add
pop
mov
mov
insl
mov
mov
out
inc
adc
cmp
mov
test
mov
jmp
pop
into
jbe
call
sahf
fwait
imul
jb
sbb
mov
sysenter
push
pop
sub
cld
pushl
push
sbb
outsl
jbe
mov
push
push
inc
mov
mov
add
push
pop
imul
icebp
and
push
sti
jbe
xadd
repz
cmpsb
adc
mov
mov
mov
inc
rolb
popf
and
mov
insl
xchg
fstl
stc
mov
fcomip
dec
in
iret
push
enter
loope
test
test
frstor
imul
insl
mov
fstps
sbb
loopne
sbb
jno
xlat
cmpl
es
adc
repz
sub
sub
sbb
subl
adc
cli
xchg
cld
stos
cmp
jnp
xchg
fbstp
cmp
js
leave
xchg
sub
arpl
mov
dec
fisubrl
push
fcmovnu
sub
dec
std
lea
aas
shrl
clc
nop
xor
mov
push
push
loopne
lret
xchg
inc
dec
adc
pop
aaa
ss
enter
lahf
mov
dec
ljmp
jns
push
adc
or
jl
std
and
popa
adc
sbb
cltd
cmp
push
jnp
push
add
dec
mov
inc
xlat
xor
fwait
sub
shll
pop
jo
nop
subb
lea
mov
add
mov
fmul
mov
cli
pop
ss
das
lret
inc
push
and
dec
jno
xlat
stos
in
mov
cltd
insl
cmp
pop
push
dec
cmp
lods
mov
fldenv
mov
std
pushf
add
dec
jae
or
insl
cmp
filds
mov
lods
push
add
in
pop
jg
push
shrl
adc
xchg
jbe
inc
iret
inc
bound
rcll
fnsave
adc
adc
imul
cmp
mov
lret
adc
sub
ret
dec
push
mov
push
lods
push
lret
cltd
mov
imul
mov
mov
aaa
loope
out
daa
jg
pop
and
pop
fistpll
or
lahf
mov
dec
cmp
std
xor
icebp
jp
add
sbb
fstps
push
mov
pop
pop
sub
sbb
xor
mov
xchg
popa
sub
mov
insb
gs
fcomp
ret
xor
inc
sar
and
sub
add
mov
das
mov
mov
notl
push
in
sbb
cs
cmpsb
lea
mov
mov
add
xlat
xor
push
or
jb
sbb
cmp
mov
cmpsb
push
nop
inc
or
jb
dec
dec
pusha
rcll
loopne
and
pop
xchg
aas
push
xor
mov
jno
cli
cwtl
arpl
sub
imul
and
xchg
and
jge
mov
add
inc
cmp
or
dec
mov
lahf
pop
jne
cmpsl
loope
cmp
xor
leave
rcrl
push
jb
jmp
ds
rcrb
sahf
adc
leave
rclb
in
adc
xor
pop
cmpsl
shlb
sub
hlt
mov
pop
shrb
fcmovnu
sub
xchg
jb
sub
push
stos
das
xchg
add
and
pop
adc
jo
scas
fldl
xor
mov
aam
sub
call
sbb
fs
popa
and
xor
les
lds
mov
loope
aam
cmp
and
pop
std
sbb
pop
loop
cmp
movsb
test
aam
mov
std
cwtl
das
cmp
arpl
cltd
mov
js
pop
sbb
xchg
les
shll
mov
mov
lret
ds
popf
xor
xor
cmpsb
mov
xchg
add
test
dec
ljmp
repz
jg
out
sub
or
mov
mov
je
or
adc
mov
dec
sbb
xor
shlb
in
pop
xchg
sti
xor
push
shll
push
leave
imulb
fsubr
mov
sub
jbe
rclb
sub
jle
jno
orl
sub
jmp
xchg
loopne
dec
lds
dec
addr16
xor
les
mov
xchg
fsubr
test
lret
and
stos
imul
inc
lret
mov
insb
push
popf
std
insl
ret
pop
js
mov
sbb
push
mov
push
xor
cmp
clc
or
and
mov
aaa
fcmovnu
out
and
in
add
lahf
xor
inc
mov
jp
jge
iret
cmpsb
popa
mov
pop
test
jb
pop
cmpsb
fs
stc
and
cwtl
je
push
mov
jnp
outsl
push
adc
mov
cld
repz
or
sub
incb
add
es
mov
ret
loope
popf
add
adc
push
int3
or
and
loope
or
inc
add
cmpsl
stos
or
jg
addr16
cmp
cmp
ret
cld
shl
push
call
data16
icebp
cmovns
mov
into
ret
stos
dec
out
dec
addr16
mov
daa
jle
dec
in
push
imul
into
xchg
sub
outsl
mov
jl
cli
mov
pop
push
stc
or
les
mov
adc
lea
jge
pusha
mov
scas
outsb
xor
test
and
or
repnz
test
lret
xor
lds
xchg
mov
pop
test
pop
mov
and
add
pop
arpl
movlps
into
es
std
aas
push
xor
imul
jae
popf
pop
scas
jecxz
jnp
inc
push
les
inc
mov
lock
orl
lods
mov
divl
pop
repz
loop
sti
xchg
int3
int
mov
inc
cmc
push
cmp
shlb
jp
fdivp
mov
inc
imul
dec
mov
stc
dec
mov
mov
dec
sub
jnp
jno
dec
push
jecxz
push
orl
subb
sbb
jl
mov
xchg
or
cmp
pop
les
int
add
popa
sub
ret
pop
push
xchg
add
ret
xchg
dec
adc
inc
lods
xchg
inc
daa
pop
repnz
cmp
inc
loop
fwait
ljmp
and
aam
ret
fcmovne
or
push
inc
mov
popf
ss
test
sub
sbb
dec
sbb
cli
inc
xchg
and
pop
pop
jo
dec
popf
push
stos
imul
and
js
dec
outsl
dec
pop
ss
or
aaa
add
xor
adc
in
lahf
xchg
cmp
push
inc
ficomps
and
shrl
cmp
pop
cmpsl
or
jmp
int3
xchg
dec
adc
mov
aaa
xchg
mov
inc
aam
jge
adc
sti
lahf
sub
ss
adc
mov
loop
inc
cmp
pop
adc
jns
adc
pusha
std
sub
xor
mov
je
push
movsl
ja
pop
pop
dec
ret
loopne
mov
stc
cmpb
xchg
inc
adc
cmp
cli
or
mov
push
popl
mov
fdivl
cmp
xlat
cmp
dec
push
mov
or
mov
in
push
rcrl
xlat
mov
scas
or
rcrb
adc
test
lods
call
inc
push
add
scas
out
pop
mov
pop
frstor
fimull
sub
popa
cmp
iret
in
outsl
mov
inc
xlat
inc
stos
into
inc
int
jne
mov
mov
adcb
push
stos
jle
int
adc
dec
push
lahf
push
xor
out
cmc
jo
mov
xchg
incl
xchg
mov
clc
clc
and
mov
aad
in
in
lret
mov
mov
mov
es
and
in
jl
popa
jge
nop
sbb
mov
adc
std
pusha
cmp
mov
jmp
mov
xchg
test
add
test
out
popf
lret
dec
repnz
in
mov
repz
test
jp
fdivs
inc
fs
lea
out
leave
add
add
push
mov
rcrl
cld
lret
push
sarl
jmp
fwait
pop
fsubs
les
js
shll
jle
push
mov
mov
rcll
sub
cs
aaa
xchg
xchg
sbb
loope
movsl
or
roll
mov
bound
mov
clc
mov
and
push
mov
cwtl
mov
fnsave
xchg
call
fisubrl
sub
mov
add
xchg
mov
in
in
push
xor
test
push
mov
mov
imul
ret
push
jg
frstor
sbb
sub
cmp
mov
gs
fsubr
xchg
cmp
rolb
cmp
pusha
std
push
jecxz
in
lret
cwtl
mov
std
popa
sub
dec
rcrl
inc
jl
jo
daa
jge
jb
lahf
jns
jmp
adc
lret
sbb
fnstcw
into
xor
push
dec
cwtl
outsl
sbb
adc
push
addb
roll
clc
add
mov
jg
xor
movsb
inc
outsl
cmp
imul
imul
call
push
mov
sub
arpl
inc
dec
dec
inc
mov
mov
fucomp
sub
jnp
and
mov
fdivs
inc
cmpsl
jg
mov
cmp
xchg
out
xor
lea
scas
add
rcll
add
notb
shrl
jecxz
add
jmp
stos
outsl
outsl
popa
mov
movsb
mov
dec
mov
xchg
push
xchg
inc
test
and
inc
jp
cmp
dec
test
xchg
xor
pushf
rcrb
repnz
loopne
aaa
push
insb
mov
jb
roll
push
cmp
mov
lret
fcoms
cmp
rorb
sub
adc
sub
adc
xchg
scas
ja
mov
cmp
inc
jae
loop
jg
in
xchg
leave
test
push
lcall
sbb
out
mov
ja
sub
rcrb
lret
mov
inc
daa
shlb
sub
bound
ret
in
cmp
je
push
leave
sbb
xchg
test
mov
jb
inc
pop
adc
push
xchg
pop
call
sbb
jp
cmp
arpl
and
mov
sahf
inc
gs
loop
mov
add
int3
in
jne
or
sbb
out
int
xlat
inc
ja
mov
mov
inc
aad
das
in
dec
mov
pushl
ja
je
or
cmpsb
add
mov
jp
ror
xor
adc
mov
xchg
mov
xchg
sti
or
bound
arpl
adc
aaa
add
xchg
sub
mov
xlat
lret
orb
sbb
int
ss
imul
aaa
leave
mov
mov
stc
cltd
and
lcall
mov
or
xor
push
loop
inc
lock
mov
mov
cltd
pop
cmp
mov
pop
jnp
movups
and
mov
icebp
ljmp
add
dec
mov
rcl
fisubrs
inc
aad
cmp
mov
enter
fcoms
push
je
sub
or
push
mov
imul
dec
sub
jecxz
mov
dec
xor
pop
into
and
and
pop
inc
jo
je
dec
xchg
test
fistpl
inc
ljmp
or
dec
push
ret
mov
pop
mov
sbb
xchg
jno
sbb
inc
dec
or
stc
pushf
add
mov
inc
outsl
mov
out
aaa
es
repnz
stos
addl
aaa
mov
movsl
xorb
xchg
xor
mov
imul
fmul
out
pusha
mov
adc
mov
ret
pop
adc
and
and
jns
dec
loopne
divl
jb
cmp
daa
pop
fistl
lock
lret
mov
inc
popf
xchg
js
adc
jmp
pop
je
mov
xchg
pop
cmp
test
loopne
and
xor
insl
cltd
jb
pop
mov
nop
and
push
sbbl
dec
repz
sbb
repnz
out
iret
jbe
outsb
aam
dec
and
fdivrs
cmp
in
cmp
insl
scas
cmp
push
sbb
stos
xor
add
xchg
lods
jb
dec
and
mov
sbbl
outsl
sbb
rcr
mov
sub
mov
or
jns
leave
lret
leave
cmpsl
push
mov
push
xlat
pusha
or
jns
mov
outsb
mov
lret
vsubss
stos
sbb
sahf
add
addl
mov
aaa
push
mov
outsl
push
imul
jp
mov
sub
add
pop
fstl
mov
outsb
leave
imul
imul
fiadds
sub
push
int
insb
mov
dec
dec
inc
dec
and
lret
mov
addr16
shl
xor
push
mov
pop
aad
pop
insb
repnz
lock
jo
das
test
cmpsl
andb
rclb
xor
outsb
rol
lahf
loop
lods
and
cmp
sbb
mov
popf
sub
inc
add
dec
dec
mov
rsqrtps
addr16
movl
in
ja
cwtl
lret
les
mov
xchg
jl
repnz
hlt
push
mov
sub
fsts
mov
leave
sbb
fbstp
jno
mov
insb
inc
push
out
dec
sarl
lcall
sar
cmc
mov
loope
out
sub
test
cmp
sub
mov
imul
or
orl
jl
lea
enter
insl
jmp
pop
jmp
sti
into
dec
pusha
data16
leave
xchg
adc
inc
arpl
xor
dec
fnsave
jns
xchg
xchg
push
scas
sub
xor
sbb
or
outsl
inc
scas
scas
mov
sub
dec
sub
roll
inc
mov
pop
xchg
rolb
inc
xor
adc
lret
incl
loopne
xorb
fisttpll
mov
in
daa
and
jno
nop
mov
outsl
and
mov
xchg
enter
adc
test
push
sub
pushf
mov
mov
inc
clc
mov
out
adc
inc
add
lcall
fistl
in
daa
adcb
test
test
and
mov
ss
mov
sub
dec
push
std
call
orb
adc
aam
cwtl
pop
cmc
cld
fs
adc
push
repz
lahf
andb
xchg
xchg
imul
add
pop
add
in
mov
sbb
dec
cmp
dec
lods
adc
cmpsl
daa
mov
lahf
mov
repz
mov
sub
ljmp
mov
cmc
jae
jbe
cwtl
mov
repz
test
stos
in
cmpsb
loopne
xchg
adc
pop
lds
jno
adc
fwait
stc
shrb
and
ds
dec
cwtl
pop
dec
sbb
mov
inc
jne
or
stos
outsl
ljmp
adc
daa
in
into
sub
jnp
outsb
ljmp
stos
or
scas
dec
fbld
scas
dec
fcoms
data16
rol
aaa
pushf
mov
jge
xchg
pop
icebp
dec
xor
adc
in
pop
xor
roll
roll
add
rorl
pop
lods
push
inc
push
ds
lret
movsl
adc
cmp
div
popf
shl
enter
rcll
imulb
cmp
cmp
fsubrs
outsb
fs
mov
jbe
xchg
out
mov
into
jae
or
out
mov
mov
add
stc
adc
xor
add
or
push
mov
jmp
in
and
mov
xchg
ret
data16
mov
fcomps
xchg
test
xorb
push
pop
sahf
xchg
pop
pop
xor
mov
xor
lahf
int
xchg
xchg
inc
xor
scas
clc
fsubrs
sbb
xor
ret
xchg
fmull
fildl
leave
mov
enter
mov
cld
mov
scas
jnp
dec
loope
lock
pop
iret
imul
cmp
aam
xchg
lret
aam
inc
xlat
mov
ja
shll
sbb
and
cmp
and
inc
rol
mov
mov
dec
fistl
test
pop
cld
mov
mov
inc
cwtl
mul
outsb
repnz
mov
push
jae
mov
fwait
sahf
mov
shlb
lods
enter
push
lods
add
mov
iret
pop
loope
in
xlat
sub
aas
add
shlb
loope
fstpt
popa
pop
mov
xchg
jae
cmpsb
cmp
cmpsb
and
icebp
leave
sbb
jle
xchg
clc
sub
clc
xlat
aas
xchg
es
push
xor
dec
and
shll
js
das
pop
inc
and
cld
cld
fistpll
nop
stos
lret
mov
inc
sub
push
fimuls
xchg
outsl
sbb
in
ss
cltd
pop
push
inc
addr16
xchg
imul
sar
hlt
dec
mov
out
jl
scas
fcos
pop
add
xchg
aam
push
sbb
sub
shl
out
arpl
mov
add
jae
adc
in
or
faddl
int
ja
repz
jbe
insl
pop
push
inc
dec
jnp
ffree
fisttpll
mov
rolb
iret
ror
fnstsw
insl
cltd
cmp
and
sti
iret
push
test
mov
add
xchg
call
outsl
fsts
or
pop
imul
sbb
in
xor
inc
cltd
loopne
fdivrs
adc
sub
aam
xchg
xchg
mov
cmc
jmp
es
inc
ljmp
jbe
cmc
add
sbb
add
arpl
inc
push
mov
mov
xchg
inc
sahf
lds
xchg
push
in
imul
sub
in
adc
fs
push
cmpl
mov
loopne
loope
imul
jae
inc
mov
div
mov
test
cwtl
or
insb
stos
adc
sbb
xor
cmp
xchg
int3
pop
les
and
jle
cld
dec
mov
shrb
sub
mov
aaa
ss
or
rcrl
outsb
push
fucomp
btr
testb
add
fsubrs
sarb
dec
mov
aam
dec
mov
mov
call
outsb
scas
add
shlb
imul
add
arpl
rolb
into
fistps
adc
gs
xor
sub
pop
adc
rcl
jmp
xor
jge
lods
pop
test
shrl
jge
sbb
jo
pop
pop
pop
pusha
jl
or
push
leave
shlb
orb
pushf
jp
adc
push
sbb
cmpsl
call
adc
rolb
cs
fdivr
push
in
outsb
call
sbb
inc
jb
test
in
int
in
icebp
dec
inc
dec
enter
pop
xchg
js
hlt
test
xor
push
stc
sbb
mov
adc
sub
test
popa
push
je
je
push
in
jne
icebp
out
and
outsl
lcall
cmp
daa
cld
push
cmp
mov
test
mov
outsb
leave
aam
jae
add
inc
int3
faddp
sbb
call
or
pop
xchg
jae
push
mov
push
addl
dec
push
jle
xor
inc
mov
and
fbld
or
dec
xor
dec
xor
xchg
jg
mov
mov
loope
out
stos
or
js
outsb
scas
fsubrs
cmp
in
shl
loopne
sub
jmp
jmp
mov
loope
pop
test
sub
mov
mov
cs
jle
loope
addr16
jge
fstpl
es
mov
sbb
into
stos
adc
xrelease
mov
sub
fistpll
fldl
hlt
lods
mov
fneni(8087
push
mov
inc
cmpsb
aas
shr
cmp
push
stos
rol
mov
add
jl
pop
idivb
pop
xrelease
fidivs
imul
mov
or
xchg
imul
lahf
jle
pop
xor
lcall
gs
dec
mov
jnp
lea
mov
ljmp
xor
fsubrl
sbb
cmpsb
pop
jp
lds
aam
mov
into
xchg
frstor
xchg
shll
sub
ret
sbb
cmpsb
leave
mov
inc
adc
mov
nop
and
lock
xor
in
add
outsl
jmp
jge
cmp
outsl
or
jg
dec
mov
scas
out
mov
outsl
insl
jle
les
cltd
insl
inc
aad
out
push
popa
adc
pop
jne
arpl
shll
mov
mov
std
pop
cmp
movsb
xor
xor
or
adc
mov
mov
add
sti
clc
xor
loop
insl
xchg
das
int
fcom
scas
lods
inc
inc
jae
and
pop
cld
pushl
ss
cmp
mov
fdivs
fnsave
test
int3
cmp
xchg
cmp
cmp
pop
xor
dec
fnsave
rorb
mov
xchg
push
in
cli
imul
cli
cmp
or
adc
fstpt
xor
jle
test
out
testl
mov
cmp
push
movsb
aaa
shlb
repnz
push
jecxz
xchg
adc
push
mov
push
add
inc
mov
mov
mov
out
fnstcw
pop
cltd
std
push
mov
out
aad
dec
dec
hlt
add
or
ss
leave
push
xchg
mov
or
mov
ret
xchg
or
iret
negb
or
in
pop
arpl
imul
mov
arpl
push
dec
fdivrs
test
jge,pn
nop
push
xor
cmp
nop
inc
sahf
test
cmc
popa
jbe
mov
jle
pop
inc
jno
mov
shll
cmp
out
xchg
pushf
sbb
idivb
out
mov
sbb
pop
fmul
pop
xchg
lea
fdivrs
enter
aas
inc
lea
adc
cld
sbbb
sbb
jns
jno
mov
mov
jg
cmp
dec
jl
fwait
push
inc
pop
stos
fwait
xchg
lret
hlt
lret
out
xor
stos
sbb
test
fistpl
movsb
or
adcl
jp
sub
sbb
mov
jne
mov
inc
xor
test
gs
int3
sbb
pop
mov
cmp
cld
push
and
out
test
xor
cli
fdivp
mov
jae
repz
imul
loopne
push
push
cmpsl
js
ret
and
sub
push
adc
xor
jecxz
xor
add
or
and
push
sub
fisubrs
fsubrl
push
lahf
xor
ja
enter
cmp
insb
cmp
push
lret
movl
mov
add
dec
sub
sbb
xor
imul
add
xor
std
mov
sbb
adc
mov
in
push
sahf
dec
push
mov
pop
pop
stc
je
or
xchg
out
mov
mov
xchg
in
cmp
pop
rorb
fisttpll
iret
mov
push
mov
cmp
sbb
out
mov
xchg
aaa
test
enter
adc
je
fmull
xchg
mov
xchg
lods
add
in
aam
fsubr
es
or
xchg
push
test
mov
push
sbbb
sarb
pop
mov
enter
orl
jge
jl
stos
add
or
outsl
push
jnp
pushf
fbstp
and
aam
jns
ss
in
mov
je
fdivrl
jnp
and
push
jae
scas
movsl
adc
jb
mov
dec
fnstsw
pop
stos
inc
test
mov
jno
ret
cmc
repz
mov
popa
ret
aad
jl
idivl
xchg
and
stos
lret
cmpsb
dec
jo
repnz
repnz
pop
lret
inc
daa
or
int
sarl
pop
mov
pop
jnp
fwait
jb
lahf
jae
fs
repnz
or
dec
cmp
dec
mov
cmp
xchg
mov
fcoml
lret
mov
test
mov
out
stos
ja
lock
add
lods
push
or
adc
and
ret
cmpsl
in
lods
stc
pop
adc
int
add
adc
xchg
cwtl
pop
cld
xor
mov
stc
lds
jmp
ds
pop
cmpsb
mov
clc
mov
xchg
inc
hlt
mov
jmp
fstpt
jge
and
in
stos
pop
xor
mov
iret
cwtl
test
push
adc
fwait
sbb
cwtl
stos
mov
arpl
int
loope
aad
scas
call
clc
push
inc
pop
jae
into
sahf
mov
std
and
xor
sub
shll
call
adc
cli
test
pop
adc
cmpsb
call
enter
or
lahf
inc
pop
jmp
mov
das
cmpsb
aam
fwait
sub
lret
test
ret
cmpsl
pop
je
repnz
hlt
cmp
xchg
adc
ficompl
shl
js
sub
mov
and
mov
inc
sbb
push
mov
jg
pushf
inc
or
push
popf
sarb
mov
and
xor
mov
add
inc
jns
sub
and
xchg
dec
mov
stos
and
and
pop
rcr
pusha
adc
stos
fdivrs
popf
mov
sub
ja
stos
sub
stos
repnz
jns
aas
add
sub
jl
andps
mov
xchg
xchg
test
nop
inc
test
imul
push
mov
ljmp
nop
push
adc
sub
mov
testb
mov
push
cmp
and
loop
or
cmp
push
mov
out
icebp
loop
cmc
cwtl
int
loope
in
or
test
imul
arpl
daa
pop
adc
fwait
add
addr16
sub
push
aas
push
dec
add
insb
sbb
add
xchg
xlat
sub
pop
inc
jmp
mov
flds
das
or
mov
xor
sbb
adc
fs
mov
out
cmp
inc
pop
addl
push
test
mov
cli
repz
mov
xchg
fcomps
sti
xlat
push
aaa
lock
jne
ljmp
pop
push
js
push
mov
fs
aam
popa
ffreep
mov
add
decl
mov
adcl
adc
in
lret
mov
add
int3
push
mov
aas
adcl
nop
lcall
es
aad
mov
cwtl
mov
dec
inc
adc
push
sbb
stos
xchg
xchg
inc
cltd
mov
imul
test
mov
out
loope
mov
mov
xor
test
subb
mov
and
jge
pop
inc
xchg
in
cmpsb
das
adc
in
std
sbb
or
push
add
daa
fildll
jae
xor
stos
or
mov
dec
add
repnz
cmpsl
jl
and
aad
or
sub
xchg
scas
jle
or
test
push
mov
push
jecxz
lcall
pop
es
push
js
fcmovbe
jo
movsb
pusha
and
pop
dec
sti
sbb
int
insb
gs
mov
inc
stos
push
mov
and
aaa
mov
test
mov
int3
push
add
mov
mov
js
push
cmp
pop
movsb
jbe
call
ds
mov
paddd
push
and
and
in
and
bound
xor
cmp
cmc
xlat
mov
sbb
push
outsl
xor
pop
pop
out
iret
add
loop
mov
mov
pop
push
sar
jne
mov
stos
add
jecxz
mov
jb
cli
outsb
aas
loopne
cmp
add
fcomps
pop
or
std
lcall
cmpsl
pop
lahf
repnz
mov
insl
sbb
bound
jb
inc
cmpl
xchg
cld
xor
cmpsb
xor
sbb
xor
movsb
fadds
add
inc
cltd
vpaddusb
inc
fcoms
xchg
adc
xlat
adc
mov
inc
xchg
adc
out
in
divl
xchg
sbb
cmpsl
dec
sbb
rolb
sbb
popf
fs
push
xor
jg
in
pop
lret
jb
xchg
lret
inc
adc
test
mov
push
fsts
adc
subb
ds
adcl
push
xchg
insb
shr
inc
je
test
es
xchg
fldcw
into
inc
jae
dec
mov
insb
out
fdivrs
dec
faddl
add
or
push
sbb
mov
int
mov
les
sbb
add
push
and
in
sbb
cmp
repz
arpl
mov
stos
mov
fnstenv
jecxz
imul
popf
sbb
daa
xchg
rolb
or
fistl
subb
or
xlat
sbb
or
inc
push
loope
movsl
inc
or
mov
sbb
pop
sbbb
jns
sub
push
stos
xlat
pop
lock
test
sub
mov
sbb
aam
in
out
sahf
inc
mov
mov
je
std
xrelease
ret
nop
cmp
mov
iret
lret
cltd
sti
popf
int
sub
aaa
fdivl
mov
sbb
push
mov
inc
xlat
inc
and
inc
push
js
cwtl
mov
shl
imul
out
in
arpl
ds
loopne
pop
inc
or
and
pop
outsl
cwtl
divb
jb
inc
mov
popa
adcb
insl
mov
ja
xor
addr16
shrb
and
pop
out
dec
rclb
ljmp
vpslld
pop
lods
cmc
mov
push
mov
xor
inc
push
pop
sub
cmp
aaa
fxch
mov
icebp
mov
in
inc
ss
subl
and
scas
mov
ljmp
and
add
sub
lahf
xchg
jmp
xor
mov
fadd
xchg
test
mov
das
sbb
movsb
sub
jge
rorl
into
out
in
mov
sub
jecxz
mov
xchg
repz
ror
outsb
enter
xor
or
in
add
mov
js
shl
jg
iret
cmp
xchg
mov
insb
mov
and
bound
and
clc
fwait
sbb
push
out
and
jl
mov
inc
lods
in
lcall
scas
or
push
xor
ret
out
xor
cmp
and
outsb
les
aas
mov
in
pop
dec
inc
mov
vmread
pop
xchg
sub
xchg
pusha
adc
cltd
decb
or
stc
scas
stos
testl
sbb
jle
ja
xor
add
mov
fwait
dec
add
jp
enter
xchg
call
cmpsb
insb
loope
adc
xlat
orl
ss
xor
icebp
add
std
sbb
lods
les
push
xchg
insb
mov
xchg
mov
cmc
xorb
clc
insb
sarl
dec
pop
jg
push
jbe
xor
ret
fnstsw
cmpsl
stc
pop
adc
daa
xor
push
push
ret
mov
mov
enter
out
cwtl
sbb
add
sbb
gs
ret
xor
fstl
add
loop
xchg
sbb
hlt
imul
lods
arpl
mov
dec
hlt
and
int
popa
mov
sub
jmp
into
out
in
pop
mov
jne
sub
cmp
cmc
cmpsl
ret
fwait
out
sbb
mov
pop
mov
jmp
adc
adc
test
sti
add
lret
ficomps
mov
jnp
xchg
rorb
pop
test
leave
lods
call
cs
int
and
stc
xchg
mov
mov
mov
les
dec
mov
mov
in
mov
int3
jne
jns
pop
sub
dec
dec
clc
test
xchg
push
outsl
out
mov
aas
out
ror
inc
jle
cli
shlb
add
mov
push
jge
loop
les
rorb
out
sbb
mov
pop
sbb
out
adc
mov
push
repz
mov
in
int
or
xor
sub
dec
imul
into
pop
xchg
xor
scas
push
xlat
sub
push
test
in
pop
adc
pop
in
or
fwait
mov
adc
jmp
les
inc
dec
ret
dec
sub
call
aaa
inc
nop
lods
push
scas
xlat
fisttps
push
jae
arpl
mov
push
ss
xor
mov
imul
or
sub
cs
test
push
mov
cmp
add
sub
ds
dec
xchg
sub
push
lahf
js
rclb
mov
popa
cmp
xchg
mul
clc
pusha
lahf
lret
or
mov
in
js
adc
imul
xchg
decb
jno
into
mov
enter
jb
push
repnz
sbb
rolb
cwtl
jle
mov
stc
aad
inc
mov
mov
nop
loop
add
mov
sbb
or
push
push
jp
jno
les
addr16
pop
add
les
loopne
inc
imul
imul
leave
adc
sub
addl
mov
jbe
push
out
icebp
out
es
out
adc
push
mov
xor
fcompl
or
out
addr16
cmp
jmp
movsb
insb
pop
sar
lcall
push
lret
xchg
ljmp
jmp
int
imul
inc
mulb
push
stos
inc
push
fdivrl
adc
lcall
pop
mov
xor
cli
jbe
add
xor
sub
imul
in
xor
push
and
cmpsb
and
nop
lcall
scas
xchg
inc
ljmp
sub
cltd
jns,pn
popf
xchg
btc
mov
shlb
xor
cmp
sbb
ljmp
pop
loopne
insl
mov
jp
mov
push
aam
pushf
adc
mov
fisubs
hlt
cltd
fldl
subb
outsl
push
push
mov
or
sub
dec
add
repz
push
incb
dec
push
scas
stos
pop
mov
stc
inc
rolb
sbb
push
jno
mov
scas
outsl
je
jno
pusha
or
out
push
lahf
fst
cmp
icebp
sbb
jl
push
inc
dec
push
lds
xor
arpl
sub
test
arpl
bound
push
pop
movsl
lds
inc
roll
clc
mov
mov
das
loope
fs
rol
jle
filds
popa
hlt
mov
lcall
push
lods
lret
fcomp
data16
adc
fidivrl
inc
mov
xor
lock
xor
mov
rep
cmpsb
fildl
call
into
pop
adc
mov
mov
adc
push
stc
xor
hlt
lcall
push
loope
pop
dec
xchg
mov
jp
imul
nop
je
jp
sub
cmp
mov
sbb
cwtl
or
mov
pop
out
jb
push
xor
into
adc
rcll
iret
bswap
sti
mov
imul
popa
pop
add
xchg
jno
mov
mov
xor
mov
cmp
into
std
pop
cmp
mov
sbb
xorb
loopne
mov
cs
repnz
xor
fwait
jnp
iret
pop
lock
clc
push
int
pop
xor
call
mov
fsub
dec
cli
insb
sbb
stos
inc
ljmp
cltd
and
jecxz
je
xor
data16
or
dec
lock
inc
imul
lods
lret
rorl
sub
ret
inc
add
leavew
and
test
inc
mov
adc
xor
insl
ss
andl
gs
stos
or
pushf
jle
in
push
loop
sbb
hlt
rorb
addr16
lahf
pop
cs
dec
std
mov
inc
insb
jae
daa
jle
sub
rcrl
xchg
adc
arpl
xchg
js
fstpl
adc
sbb
popa
cmpsb
ss
and
sub
add
roll
cltd
std
out
lock
test
pop
xor
ds
cmp
mov
push
jnp
in
xor
xor
mov
jo
sub
cmp
in
lret
jo
sti
sub
stos
jb
and
mov
fists
in
scas
dec
jl
fs
jnp
push
add
sbb
jae
jno
mov
pop
xor
aas
ja
outsl
mov
lea
arpl
sbb
mov
insl
push
outsl
es
roll
cli
mov
jge
fstps
xchg
sti
push
xchg
adc
sbb
adc
lods
stc
dec
inc
ss
aam
mov
mov
in
int3
xor
mov
sub
adc
push
or
dec
ljmp
mov
or
xchg
cltd
push
sub
pop
pop
mul
popf
repnz
frstor
xchg
jbe
sub
push
outsl
pextrw
cmp
adc
inc
rclb
cmp
jae
pop
and
mov
adc
or
xor
pop
out
mov
mov
xchg
push
push
adc
adc
jo
dec
pop
rcrb
push
incb
daa
dec
adc
in
and
lret
leave
in
call
sbb
pop
mov
mov
jecxz
jecxz
fidivs
rorl
cmp
jge
out
and
sub
rcl
je
loop
sbb
jecxz
inc
int3
inc
pop
pop
push
std
call
lods
movsb
out
insl
sbb
pop
imul
mov
push
push
lahf
scas
dec
pop
les
gs
xchg
adc
mov
pop
xlat
xsaves
arpl
lcall
in
lahf
push
fwait
xchg
test
xor
sub
sbb
push
mov
mov
out
push
movsl
add
mov
fsincos
daa
push
leave
pushf
stc
or
add
in
adc
loopne
jp
lods
shl
pop
inc
js
add
and
inc
out
mov
cmp
insl
pop
rorb
sbb
cmp
imul
roll
jge
iret
fisttpl
insb
and
dec
jmp
test
sub
xor
mov
dec
sahf
negb
xchg
and
pop
dec
lret
mov
idiv
movsl
fidivl
hlt
out
lcall
adc
push
ds
orl
fdivl
cli
xchg
add
popaw
repz
adc
sbb
xor
in
cs
cmp
sbb
xchg
je
push
adc
sub
push
sub
adc
push
pop
lcall
mov
loopne
mov
pop
in
push
pop
lock
popa
xlat
lret
push
jp
cmpsb
loope
pop
cmp
cmpsb
test
xchg
pop
std
jmp
in
and
sub
mov
dec
pop
mov
fsts
lret
icebp
lock
pavgb
pop
sbb
cmpsl
push
scas
addr16
stos
cld
lock
scas
mov
xchg
push
and
adc
push
mov
inc
ret
jno
mov
jns
push
ret
les
and
add
push
add
sub
movsb
mull
in
mov
ljmp
add
xor
fsubl
xchg
xchg
adc
adc
cmc
clc
in
sub
dec
or
pop
aad
sbb
adc
xchg
mov
dec
push
cmpsb
mov
xchg
dec
jecxz
stos
push
adc
lea
push
gs
cld
add
push
repz
push
mov
hlt
addr16
popf
stos
jecxz
ror
jno
sti
mov
dec
mov
enter
cmp
xchg
jo
movsb
imul
pop
mov
cltd
ret
push
repnz
jbe
adc
bound
adc
jp
sub
int3
jb
jbe,pt
mov
dec
rol
jno
scas
negb
movsb
xchg
repz
int
sbb
hlt
je
pop
pop
scas
cmp
mov
jnp
add
and
repz
stos
or
adc
jge
mov
es
xchg
rcll
inc
mov
jno
sub
fs
test
add
pop
mov
outsb
pop
dec
stos
inc
ret
mov
and
les
movsb
or
mov
into
jg
sbb
and
or
mov
inc
or
mov
push
or
and
fldl
jecxz
popf
pop
inc
cwtl
pop
inc
cld
sbb
jp
xor
jmp
or
decl
jnp
add
pusha
mov
in
lods
cltd
xchg
int
aas
dec
adc
xor
push
lret
mov
leave
or
enter
mov
fnsave
call
stos
es
mov
stc
add
xorb
cmp
stos
in
aaa
test
jge
shll
or
icebp
sbb
push
and
cmp
xchg
dec
mov
mov
movsb
pushl
outsb
xchg
movsl
jne
dec
cli
outsb
sub
or
stos
fnstcw
adc
leave
sbb
call
gs
lret
xchg
lds
scas
leave
or
mov
mov
cmp
popf
fs
sub
jno
dec
xor
aad
ret
inc
pop
es
stc
aaa
js
sbb
hlt
jp
jo
adc
xchg
jnp
or
test
lds
xchg
call
mov
jl
xchg
ja
sub
pushf
jp
cltd
sub
sahf
push
enter
dec
and
push
inc
sub
std
cwtl
stos
jmp
faddl
mov
sbb
test
cmp
jl
jo
or
mov
adc
testl
jg
xlat
cmpsb
dec
rorb
in
movsl
mov
invd
and
jae
insb
sub
pop
push
lahf
adc
add
dec
aad
int
lds
fs
movsb
lahf
sti
xor
mov
popa
jmp
jae
ds
cwtl
test
cmp
mov
pop
fsub
test
sub
or
fiaddl
jg
mov
sbb
cmc
push
aas
rclb
cmpsb
mov
mov
lahf
mov
call
lret
cmp
mov
icebp
jo
mov
pop
mov
in
jp
xchg
xchg
and
push
xchg
je
daa
inc
enter
xor
mov
mov
pop
and
sbbl
dec
cmp
pop
lret
ds
mov
sub
xor
dec
aaa
scas
and
jns
js
push
aaa
adc
push
lret
in
rorb
fs
pop
std
jmp
cli
add
int
mov
shlw
sbb
fadd
and
mov
lods
leave
popl
in
jno
sub
xor
xor
sub
ret
aad
lock
inc
rcl
dec
outsb
cld
sub
fbld
inc
cmp
pushf
dec
mov
mov
jo
xor
fnsetpm(287
sub
sbb
add
pop
sub
ljmp
ja
mov
cs
popa
rclb
push
out
in
xor
xchg
dec
xor
loop
inc
mov
add
push
das
sub
mov
sub
in
mov
xchg
mov
fdivl
dec
dec
mov
fwait
pop
push
mov
dec
loope
testl
sbb
sbb
push
popl
je
pop
mov
cmp
jbe
iret
call
and
jecxz
lret
dec
fnstenv
sarb
mov
hlt
je
sub
and
xlat
sub
jno
out
sbbb
cmp
push
movsl
mov
dec
inc
xchg
insl
jg
xchg
roll
mov
fwait
inc
dec
adcb
hlt
test
xor
push
xchg
out
sub
and
out
or
into
mov
or
and
mov
fsubl
lock
inc
mov
cmp
cli
adcb
or
mov
mov
lahf
xchg
xor
sahf
xchg
ffreep
xor
mov
jnp
sti
push
jp
loope
test
lods
jne
cmp
mov
es
mov
xor
adcb
les
mov
cmp
sahf
mov
inc
sti
in
stos
into
or
or
mov
addb
call
lock
dec
or
fidivrs
pop
int3
mov
xchg
xor
cwtl
rcrb
movsb
dec
xchg
adcl
adc
pop
or
mov
orl
or
pop
outsb
test
xor
mov
filds
cmp
mov
pop
mov
sbbb
ja
pop
sbb
lahf
in
mov
or
fistpl
cmp
cwtl
xor
mov
into
mov
sub
sub
adc
pop
int
mov
pop
popa
int3
addr16
aam
sbb
stos
iret
pop
pushf
xor
or
lea
mov
sahf
les
push
or
ret
inc
fwait
cmp
sbb
lods
sbb
cmp
pop
outsl
fbld
les
or
pushf
jnp
orl
push
mov
addr16
lods
rcrl
sub
das
dec
fisubs
popa
cmp
add
out
jo
jae
inc
xor
enter
adc
push
popa
js
bound
inc
push
lods
jns
mov
imul
lret
lea
mov
test
mov
dec
fcmove
test
shrl
mov
pop
int
adc
xor
sbb
push
stos
xchg
jo
push
dec
jns
hlt
xor
push
mov
sbb
scas
fidivl
fstl
add
fwait
arpl
and
pop
pop
jmp
dec
sbb
sbb
iret
ljmp
roll
or
inc
cwtl
or
les
push
mov
les
xchg
push
mov
pop
fldt
loop
std
pop
and
loope
in
sub
pop
daa
xor
push
popf
push
test
lods
jnp
std
jno
and
addb
out
jg
loop
hlt
xchg
jmp
inc
mov
jbe
js
lret
sub
mov
fwait
lods
add
lcall
sti
lods
bound
push
pop
add
pop
sbb
xor
in
sbb
out
icebp
or
mov
push
sub
and
div
and
inc
ffreep
fmull
imul
int
xor
push
in
and
push
sbb
jmp
mov
popf
imul
cmpsl
push
roll
cmpb
pop
mov
pushf
rorb
or
push
rolb
sub
sub
cmpsl
bound
xlat
jg
sbb
fcomps
inc
pop
in
nop
adcb
imul
sub
or
test
add
insl
pop
dec
loopne
push
mov
pop
push
outsb
jl
sbb
mov
dec
ljmp
xor
mov
push
push
jge
fs
fsubrl
dec
lcall
cwtl
divb
test
adc
fbstp
dec
ret
andl
outsl
xor
xor
lods
fabs
dec
xchg
lcall
mov
mov
pop
pop
sub
mov
pop
in
dec
inc
adcb
enter
inc
dec
test
mov
mov
icebp
adc
jmp
jae
in
sbb
call
sub
ficomps
pop
xchg
test
xorl
adc
ss
sbb
insb
pop
shll
dec
sahf
and
xorl
rorb
enter
mov
and
push
push
sbb
mov
insl
xor
jge
or
popl
popf
pop
daa
mov
jl
push
sub
sbb
xchg
jns
pop
mov
sub
cwtl
loop
ljmp
jno
stc
fs
sbb
pop
movsl
or
pop
dec
arpl
jne
mov
jmp
repnz
test
scas
and
adc
add
inc
out
dec
adc
loop
jmp
lods
mov
test
xor
jp
jbe
out
pushf
pop
shlb
leave
add
bound
cli
xchg
push
mov
adc
xlat
xchg
into
jg
mov
sbb
fisubs
dec
fxch
in
mov
loopne
in
or
fidivl
imull
js
sub
into
lahf
dec
cmpsb
mov
dec
push
es
call
add
add
addr16
gs
mov
ss
nop
clc
sub
dec
jp
in
pop
lcall
adc
das
push
push
mov
imulb
insb
ss
xor
xor
pop
repnz
ret
mov
sbb
mov
xchg
out
mov
out
dec
in
sbb
sbb
inc
push
pop
pop
mov
jg
and
out
aaa
push
push
idivb
in
mov
inc
fs
or
lahf
call
ds
subl
mov
sub
ljmp
ret
mov
rcl
out
shrb
dec
fnstcw
jg
cld
push
dec
push
mov
cwtl
std
hlt
jns
xchg
cmp
inc
cmp
pushf
adc
pop
andb
iret
and
imul
add
loop
push
sbb
rcll
sbb
jmp
pop
ret
pop
mov
or
mov
call
rcrl
stos
push
data16
data16
mov
cwtl
testl
lret
add
cmpsl
push
int
sahf
scas
cmpsb
or
fdivs
test
jne
int
sbb
xchg
mov
add
dec
mov
mov
inc
or
or
mov
movsl
or
sbb
push
mov
jg
mov
jl
int3
andb
movsb
or
test
ja
mov
or
sub
rolb
add
xchg
pop
and
mov
mov
inc
lret
xchg
arpl
add
pop
push
adcl
mov
adcb
dec
mov
pop
cmpsb
movsb
call
mov
cwtl
roll
jb
push
mov
aad
or
aas
ficoms
pop
pop
push
push
sub
push
lods
mov
mov
xchg
inc
ret
icebp
test
test
test
adc
movsl
mov
test
cmc
shll
and
dec
mov
into
xor
xlat
sarl
insb
xchg
sub
in
lcall
fldl
mov
call
cmp
je
subb
adc
in
fwait
repz
movsl
jno
pop
or
bound
aad
pop
mov
rcrl
sahf
lea
jns
ret
mov
push
xlat
popl
mov
repnz
inc
insb
outsl
adc
not
and
xor
adc
sbb
xchg
ljmp
mov
sub
ss
inc
insl
ljmp
adc
lcall
pop
fdivp
out
push
add
ret
and
shr
shrl
push
mov
cwtl
inc
jle
mov
ljmp
push
fsubl
popf
push
cmp
push
int3
xchg
orb
jecxz
int
aaa
or
cli
mov
pop
adc
int3
leave
or
repnz
int3
pop
inc
cmp
add
daa
mov
sub
pushf
int3
mov
push
in
pop
adc
mov
adc
jg
xchg
enter
scas
mov
pop
adc
jnp,pn
mov
xor
aad
bound
add
sahf
mov
ret
repnz
mov
xor
add
andb
pop
adc
jb
arpl
lcall
dec
inc
imulb
sbb
stc
lea
enter
and
outsl
lods
inc
push
pusha
lods
push
push
std
dec
mov
repz
in
mov
push
add
xor
mov
add
inc
insl
cmp
mov
icebp
or
push
incb
mov
shufps
mov
pop
add
xchg
test
mov
sbb
rorb
or
daa
xor
pop
mov
stc
push
mov
mov
push
pop
mov
cmpsb
jecxz
int
pusha
add
push
test
repz
arpl
xor
in
sbb
int3
jns
push
cwtl
mov
je
cmp
enter
test
les
push
sahf
rsm
fsubs
push
cs
rolb
mov
arpl
inc
fmull
movsl
in
sarb
pop
sbb
outsl
lahf
xchg
pop
sub
lock
push
aas
xchg
mov
sbb
popf
or
add
add
add
setge
shlb
push
push
aam
fsubrs
pop
mov
imul
rclb
rclb
cwtl
and
fistps
vpmacswd
add
and
mov
mov
xlat
jp
insb
std
xor
xchg
inc
add
out
jmp
or
xchg
loopne
jl
addb
sub
xchg
daa
cmp
mov
and
cld
aaa
jbe
clc
or
adcb
mov
stc
inc
in
cmpsb
cmp
push
jg
dec
repz
nop
sub
ja
fldt
es
and
rcr
inc
fsub
pushf
sbb
in
lret
lret
mov
gs
sub
xchg
inc
andb
push
and
std
or
test
and
int
andb
gs
ljmp
stos
xchg
loope
dec
aad
addl
pop
scas
test
test
loopne
not
sbb
pop
xchg
xchg
out
dec
out
aam
test
inc
shl
movsb
out
pop
xor
cwtl
and
dec
movsb
test
push
dec
or
repz
dec
ds
pop
push
mov
arpl
pmuludq
movsb
pop
cld
pop
subb
mov
inc
push
xchg
xchg
fldcw
call
or
cmp
xchg
inc
dec
sub
pop
mov
cli
adc
fcmovnbe
sub
loop
shlb
inc
xor
adc
nop
outsb
sub
dec
int
xor
out
xchg
and
inc
xchg
rol
stos
fidivrl
out
and
js
jl
mov
bound
insl
in
icebp
fldcw
and
aaa
cs
in
sbb
xchg
mov
jecxz
cmp
popa
pop
mov
aas
or
xchg
mov
cmp
sub
test
cmp
sbb
jae
stos
pop
and
xchg
stos
fadds
lods
test
sarl
push
movsb
aad
or
cmpsl
clc
sbb
and
sbb
mov
xchg
fs
inc
pop
pop
cmc
adc
xchg
hlt
gs
sub
inc
lea
jg
cmpsb
push
mov
outsl
adc
daa
cmp
jge
jo
mov
daa
jecxz
insb
mov
push
pop
xlat
mov
call
add
sub
and
orl
ffree
addr16
data16
stc
pop
push
push
add
subb
scas
aam
jmp
shr
dec
sbb
mov
mov
lret
dec
xor
pop
xchg
fisttps
clc
nop
pop
push
ret
fcompl
xor
inc
jg
in
inc
mov
shlb
dec
cwtl
add
jnp
jmp
das
rcll
shlb
gs
lock
mov
loop
fstpl
add
fldcw
mov
pop
mov
outsl
loope
movsl
dec
iret
lret
xor
inc
test
shlb
push
xchg
sarl
pop
loopne
fidivs
cli
cld
iret
jecxz
pop
cmp
std
shl
pushf
cmp
imul
out
fwait
mov
xchg
sub
inc
or
mov
push
fldl
add
outsb
cs
shll
dec
adc
pop
adc
adc
or
sbbb
mov
fdivrl
cmp
sbb
pop
pop
pusha
stos
mov
jne
xchg
dec
xor
fstl
mov
nop
push
data16
and
arpl
add
push
clc
loop
mov
jle
sub
icebp
ret
jmp
adc
mov
jb
or
fnclex
push
jo
das
add
decl
or
sub
inc
pop
xor
pop
mov
cltd
ds
cmp
fisubl
inc
iret
mov
mov
movsl
or
ret
in
sar
push
leave
pop
cmc
pop
fs
movsl
jg
cmpsb
xor
lods
inc
xorl
loop
dec
push
mov
gs
inc
cmp
pop
stc
dec
mov
pop
popa
pop
xor
sahf
xchg
dec
mov
sarl
sub
lods
push
fnstsw
mov
lcall
jle
jge
in
jmp
outsb
outsl
or
jmp
fimull
jmp
loopne
push
sbb
out
mov
std
in
push
xchg
ret
pop
xchg
adc
cmp
ret
add
inc
sub
cmp
cwtl
add
sub
sbb
xchg
adc
push
pop
mov
xor
ret
arpl
lret
sbb
cmp
mov
fwait
and
test
xchg
cltd
xlat
push
jmp
add
xor
mov
xor
sbb
mov
enter
xor
ficompl
js
pop
sbb
ret
mov
daa
ret
xor
inc
loope
inc
add
icebp
mov
mull
iret
pop
jne
mov
push
into
mov
push
mov
cmp
sarb
ficoml
xor
fcompl
and
inc
xchg
bound
and
clts
add
sqrtps
test
imul
inc
mov
pop
mov
lahf
cwtl
dec
mov
punpcklbw
inc
lahf
or
in
jle
jns
movsl
add
inc
sub
jmp
cltd
lock
xchg
push
outsb
in
add
xor
fisttpl
in
and
cmp
outsb
push
push
outsl
fistpl
jbe
pusha
mov
or
fldenv
aad
jb
pop
insb
fildl
cmpl
inc
xchg
pop
sbb
mov
ss
sahf
mov
mov
ja
lahf
lea
insb
pop
dec
push
in
insl
lock
mov
cmp
loope
cmpsb
xor
mov
inc
stos
jae
or
and
jmp
btr
icebp
cmc
cmpb
sbb
and
cld
enter
mov
sub
push
or
das
pushf
mov
clc
jecxz
xchg
in
outsl
out
adc
mov
popa
pushf
sarb
mov
and
mov
jp
xchg
in
pop
push
sbb
jnp
fstpt
dec
orb
lods
lahf
pop
adc
adc
dec
pop
sahf
inc
mov
push
fistpl
nop
test
imul
aas
lcall
cmp
xchg
mov
dec
jl
cmp
lods
loope
xchg
xor
add
xchg
mov
jae
mov
mov
and
adc
mov
xchg
inc
sbb
fcmovbe
push
sbb
fdivr
sub
daa
cltd
cmpsl
in
popa
fiadds
mov
negl
movsl
das
sub
adc
addl
adc
adc
iret
add
ljmp
mov
push
icebp
push
fcomps
loope
jnp
vminsd
aas
rorl
into
stos
jle
or
push
fmull
adc
ret
iret
jmp
cmpsb
ja
shr
sti
imul
adc
mov
in
xor
push
push
fisubs
ds
test
xchg
mov
dec
rcll
or
inc
mov
aaa
aad
icebp
je
ja
ja
push
cmp
mov
push
aam
or
lret
and
push
scas
pop
out
xor
mov
mov
add
jnp
mov
negb
outsb
mov
fisttpl
iret
mov
fdivl
jle
cmp
cmc
lret
stos
stc
fisubl
sub
sarb
and
into
jne
mov
loope
fiadds
mov
int3
mov
sbb
lret
je
fisubrs
cli
into
cld
cmp
hlt
mov
xchg
cmp
mov
daa
push
fbstp
mov
dec
push
sbb
mov
and
cmp
mov
repz
in
in
or
xor
mov
and
ss
jae
std
cwtl
push
repnz
inc
in
push
jbe
sbb
sub
adc
into
fs
mov
scas
dec
cmpsb
ja
in
inc
fildl
iret
sbb
punpckhbw
lock
pop
cmp
iret
shrl
inc
ljmp
out
fistpll
push
lahf
xchg
sbb
js
ret
lcall
rcrb
add
mov
adc
and
cmp
lock
loop
les
js
jp
inc
ret
sub
jl
cmpsl
pop
pop
clc
and
push
xchg
shlb
mov
mov
btc
inc
pop
test
dec
lock
lcall
cs
call
jno
adc
jo
mulb
pop
fnstsw
dec
jo
pop
mov
lods
rcr
fcomps
adc
inc
jmp
and
pushf
and
insl
lods
pop
xchg
scas
arpl
inc
xorb
fcompl
int3
mov
js
outsl
push
and
xor
add
les
pop
enter
push
jb
push
dec
orb
inc
dec
int3
mov
and
bound
aad
orb
sti
das
and
and
mov
int
xchg
lret
gs
int
dec
adc
iret
nop
jne
xor
jle
cli
stos
adc
lock
mov
out
lods
jno
jno
shl
or
jb
xor
loope
clc
nop
frndint
rorb
lea
lcall
mov
or
lcall
addb
lcall
mov
shll
mov
nop
div
fisubrs
das
popa
insl
xchg
sub
into
or
jae
data16
mov
sbb
mov
cmpsb
pop
and
push
nop
es
stos
mov
loop
mov
stos
and
int
lea
bswap
pop
jp
sbb
mov
cmc
pop
inc
push
cmp
xchg
ljmp
adc
pusha
push
out
loope
test
jecxz
inc
mov
pop
xchg
sub
sahf
xor
or
dec
aad
aad
inc
dec
sbb
jge
icebp
cmpsb
mov
push
out
movsb
fwait
pop
sub
fidivrs
pop
cmpsb
notl
pop
pop
clc
mov
jle
mov
in
inc
mulb
mov
xor
or
xor
pushf
push
lock
xor
dec
lcall
dec
cwtl
xor
pop
lock
popf
dec
xchg
mov
or
rcrb
ja
fcoml
fsub
ss
and
mov
bound
pop
xor
mov
andl
lds
ljmp
outsb
decl
cltd
iret
push
das
sbb
pop
aad
shlb
stos
or
sbb
idivl
jp
mov
xchg
mov
sbb
fistl
xchg
into
cmp
shl
or
push
ss
or
inc
sub
lods
outsb
jno
popf
and
popa
incb
imul
lret
iret
das
push
js
cmp
xor
insb
jmp
xchg
ret
hlt
jge
stc
cmp
inc
les
mov
cmp
pop
ljmp
xchg
mov
push
cmovnp
mov
aad
xor
das
scas
decl
add
mov
fwait
cmp
dec
jns
out
adc
and
les
leave
xor
sub
addr16
push
insl
ret
dec
cmp
inc
xor
adc
dec
dec
cmp
pop
push
add
addr16
and
jl
shlb
pop
cmpsb
pop
or
dec
int3
fidivrl
testl
scas
out
in
pop
pop
lret
sahf
jmp
loope
mov
xor
daa
fstps
in
pop
jecxz
stc
push
cmpsb
adc
push
jg
inc
add
xor
mov
lods
mov
movsl
xchg
shrb
pop
push
aaa
nop
orb
sti
das
sar
and
les
neg
push
sub
nop
mov
enter
lea
inc
sahf
xlat
sti
imul
in
pop
imul
fs
dec
push
adc
fstl
imul
imul
push
lret
ret
mov
ret
sbb
lods
mov
push
push
ficoml
iret
mov
dec
mov
out
aad
inc
lahf
fidivrs
sbb
xchg
sti
and
mov
pop
sub
repnz
cmp
xor
nop
ret
jecxz
test
lahf
sub
push
cwtl
gs
push
push
mov
sbb
push
mov
pop
push
fnsave
jle
mov
pop
sub
mov
cmp
adc
xchg
ljmp
test
scas
mov
and
clc
lock
and
jg
js
outsb
xor
xor
in
loopne
mov
xor
lds
or
push
xor
and
cmp
or
gs
dec
call
dec
popf
out
insl
add
jo
xor
shll
mov
je
pop
sub
in
add
out
cmp
adc
inc
jle
cli
ljmp
mov
cltd
popa
nop
xor
lods
cmp
mov
aas
fdivs
jae
jno
fwait
ret
fisttpll
pushf
xchg
inc
rcr
xchg
push
mov
and
test
sti
xchg
xchg
movsl
mov
js
movsb
je
packuswb
jnp,pt
mov
outsb
push
prefetch
into
push
or
push
divb
cmpsl
sub
adc
jl
adc
mov
aam
sbb
bound
je
adc
sbb
jbe
cli
xchg
mov
push
xor
mov
mov
mov
xchg
orl
add
xor
sub
xor
mov
popa
rolb
cmp
sub
xchg
xchg
push
mov
pop
and
mov
add
push
divb
dec
imul
jne
je
imul
sub
mov
loope
and
jge
mov
rclb
fidivrl
sbbl
das
inc
test
lds
mov
test
and
adc
mov
dec
pop
and
push
xchg
repnz
aad
aad
inc
outsl
in
fs
aad
daa
adc
mov
adc
and
daa
and
out
cltd
pop
cld
fldl
push
ja
lods
arpl
dec
in
pop
jae
enter
mov
in
mov
std
inc
test
xchg
shlb
out
fistps
std
leave
je
test
repnz
arpl
dec
into
lcall
repnz
cmpsb
sahf
adc
sti
xor
lcall
sti
sti
icebp
or
in
inc
and
pop
add
inc
and
leave
stc
fs
jp
jne
dec
inc
xlat
es
fcomps
sbb
mov
jne
filds
mov
int3
pop
pop
inc
rcrb
mov
nop
inc
jae
cmp
leave
xchg
imul
mov
and
testl
sub
and
out
mov
lock
out
notl
sbb
pusha
mov
push
sub
xchg
inc
repz
jne
mov
mov
fstps
cmp
pushf
dec
jp
divl
lock
leave
jecxz
loopne
cmp
hlt
in
iret
mov
insl
mov
subb
sub
sub
aam
mov
sbbb
push
add
dec
loope
pushf
mov
rcr
ficoml
adc
leave
test
insl
or
enter
shlb
push
and
pusha
jecxz
jmp
mov
or
and
sub
insl
jle
sbb
fcoml
int
lea
push
out
test
jo
lock
and
or
iret
mov
popf
mov
sahf
pop
idivb
dec
int3
sbb
inc
loopne
jle
inc
cwtl
negb
dec
inc
pop
pop
in
lcall
out
daa
std
cmp
pop
xrelease
and
inc
in
dec
mov
lcall
icebp
push
aam
pusha
mov
test
fwait
pop
and
pusha
jle
pusha
lcall
movsb
ret
pop
popa
xchg
mov
out
mov
arpl
roll
xchg
cltd
ret
mov
ud2
jmp
insb
push
fmuls
je
loop
sar
iret
mov
or
jl
ret
in
imul
push
pop
jmp
adc
push
push
leave
fistpll
push
ret
in
adc
push
call
sub
bound
sbb
adc
cmp
push
lods
scas
push
cmp
vmovq
inc
add
push
adc
add
sbb
clc
in
cmp
jbe
pushw
xchg
cwtl
add
out
cld
dec
call
sahf
fisttpl
xchg
pop
popa
mov
out
mov
aam
cli
loope
or
lret
lods
sub
xor
inc
xor
js
hlt
lods
cld
push
stc
sti
inc
pop
clc
dec
loope
xor
clc
in
inc
adc
cmc
sub
add
cmpsb
jnp
xor
jl
inc
and
cmp
add
jne
jge
jg
sub
dec
inc
leave
xchg
ljmp
push
push
aaa
pop
jb
mov
ja
xchg
cmpsl
out
imul
dec
sub
popf
dec
cmp
mov
push
push
in
ret
xchg
dec
adc
push
mov
ljmp
mov
push
push
sahf
into
or
mov
dec
adcl
lahf
cltd
scas
popl
ret
pusha
inc
xchg
inc
mov
movsl
out
pusha
push
inc
lret
and
in
mov
pop
sbb
sarb
or
xchg
mov
jb
sbb
repnz
mov
adc
test
data16
cltd
cli
mov
outsb
xchg
pushf
xchg
es
mov
pop
cli
in
repz
pop
shlb
lods
mov
mov
or
jnp
aad
cmp
pop
sbb
xor
sub
jo
adc
jbe
lahf
and
nop
in
mov
push
mov
int
and
pop
sbb
adc
xor
leave
movb
aam
adc
aas
nop
cmp
mov
jnp
mov
xorl
push
outsb
push
mov
movsl
inc
xchg
cmpsb
repnz
in
pop
pop
mov
in
or
ret
shrb
test
push
insb
mov
daa
iret
push
xor
sahf
iret
dec
lods
std
fsts
lret
lret
xor
mov
and
fs
inc
xchg
mov
out
inc
imul
jl
sub
push
mov
scas
gs
lahf
ja
jmp
jne
lods
sar
cmp
jp
ror
mov
incb
popf
add
lahf
mov
mov
pop
xchg
insb
divb
dec
mov
cmpsw
mov
ret
cld
lods
push
pop
repz
push
inc
jo
fwait
mov
xchg
ljmp
inc
pop
test
bound
mov
dec
arpl
icebp
pop
fisttps
out
inc
je
out
scas
mov
out
mov
cmc
sub
adc
fadds
lds
ja
mov
mov
ffree
push
cwtl
mov
xchg
clc
call
dec
call
inc
mov
and
xchg
aad
movsb
sub
dec
mov
sub
add
fwait
pop
cwtl
jg
cltd
fcoml
mov
fiadds
pushf
push
ljmp
mov
stos
pop
dec
cmp
std
sub
and
inc
or
pop
xchg
mov
mov
mov
enter
test
fbld
pop
xchg
jb
daa
mov
xchg
fmulp
addb
inc
aaa
sbb
sub
nop
pop
or
movsb
jae
lods
test
add
xor
mov
sub
pusha
test
fldt
sub
jmp
adc
rcll
addr16
shlb
mov
hlt
mov
adc
mov
test
mov
jg
mov
jle
ss
push
bound
xchg
xor
pop
inc
idiv
adcb
sub
fs
dec
add
mov
mov
pop
xlat
inc
sbb
jecxz
add
xor
lds
lods
sub
ss
orb
jnp
cs
scas
adc
adc
lret
test
in
xchg
xlat
or
adc
jge
int3
dec
lret
fistl
mov
or
cltd
jmp
bound
loope
popa
mov
les
sahf
mov
cmp
shlb
adc
mov
and
inc
mov
pop
iret
prefetcht1
mov
int
jmp
mov
pusha
xor
xchg
jl
sub
push
test
xchg
push
pop
fiaddl
mov
subb
mov
pop
jmp
test
jb
adc
sahf
dec
jbe
and
js
jbe
imul
pop
loop
jb
nop
mov
sbb
sbb
add
cmpsb
outsl
mov
lahf
or
jne
and
pushf
cmp
sub
rclb
repz
add
leave
call
and
ds
jmp
adc
adc
repnz
lret
leave
and
sub
fneni(8087
fs
loope
adc
repnz
in
xchg
mov
or
ss
mov
fiadds
cmpsl
push
das
mov
mov
or
imul
mov
mov
inc
adc
cmpsl
push
fs
mov
cmovne
es
mov
cltd
xchg
mov
cmp
call
addr16
ljmp
rorl
jae
inc
stc
and
in
xor
pop
push
add
mov
inc
mov
pushl
stc
into
mov
mov
adc
push
push
sarl
inc
lds
aas
fisttpll
rcll
lahf
jle
aaa
cmp
lods
and
ja
loop
repnz
jns
pop
notb
add
rorl
sbb
enter
nop
repnz
xlat
aam
lcall
mov
ret
inc
leave
mov
or
int
call
lret
int3
loope
jb
outsb
mov
and
push
rcll
ljmp
cld
fdivs
repz
fidivl
sub
add
jge
mov
in
lods
mov
aam
jns
xchg
test
rcrl
pushf
push
scas
xchg
sbb
and
mov
or
jg
bound
cmp
mov
mov
pop
loopne
adc
ret
enter
jmp
cld
jl
xor
stos
and
out
pop
das
mov
pop
cli
popa
add
shll
xchg
addr16
pop
pop
push
sbb
mov
mov
bound
out
call
lahf
mov
call
jge
sbb
popf
movsl
rcrl
into
ret
imul
cmp
outsb
or
cli
sub
les
lods
out
mov
add
repnz
out
pop
xchg
addr16
xchg
add
push
sbbl
and
stos
js
stos
xor
cmp
ret
jmp
fnstsw
pop
jmp
in
inc
xchg
jp
sbb
sbb
aad
add
and
lds
mov
mov
into
sub
jns
arpl
mov
adc
add
leave
movsb
sub
ss
clc
stc
sub
mov
nop
push
mov
sahf
test
fwait
movsb
outsl
push
fmul
fcompl
cld
mov
test
fdivp
loopne
mov
cmp
lods
filds
mov
lcall
dec
adc
in
movl
pop
jnp
out
daa
xchg
cmp
push
push
pop
xor
lcall
inc
sub
ficoms
in
inc
or
in
push
mov
jp
jne
aam
push
negb
xchg
push
popf
xlat
pop
lret
fldcw
sbb
sarb
sahf
nop
fwait
iret
fstpl
sub
hlt
insl
mov
out
xor
push
and
into
mov
pop
aas
bound
int3
ds
aad
test
xchg
ss
push
push
and
mov
scas
inc
aaa
shlb
aad
sbb
lods
fnstenv
dec
lret
push
pushf
out
mov
push
xor
pop
mov
divb
rorb
jg
mov
aaa
outsl
cmpsl
jo
cmpsl
jo
cs
enter
xchg
stos
xchg
push
popa
rcrl
pusha
xchg
fld
or
cs
sarb
out
cmp
loopne
cmpsl
push
mov
mov
and
sti
popf
adc
loopne
stc
mov
lock
pop
or
adc
in
lods
jg
mov
loopne
xor
pusha
pushf
data16
sub
cmp
lock
push
push
stc
sbbl
and
pushf
insb
mov
pop
and
scas
shlb
mov
jg
popf
hlt
addr16
sbb
ljmp
or
sub
and
loope
iret
inc
mov
adc
cld
or
mov
aaa
bound
xchg
mov
jmp
rorl
xchg
sub
jnp
and
push
ret
out
mov
lcall
mov
lret
and
push
push
js
and
shrb
mov
adc
aam
jo
popf
and
test
les
jp
pop
pop
test
fistl
xchg
adc
cmp
dec
dec
and
sub
mov
mov
lods
shlb
sbbl
push
jge
xchg
sbb
ffreep
sub
ja
stos
push
mov
xlat
sub
sub
inc
aam
push
push
jno
repz
mov
and
inc
sbb
or
jmp
adc
arpl
cltd
sbb
pop
fsubs
mov
lods
les
dec
fidivl
jmp
xchg
lea
fstpt
sub
push
les
sahf
mov
adc
xor
test
test
jmp
enter
xlat
cmp
push
jmp
shll
ret
inc
ret
dec
inc
rcr
jl,pt
call
int3
lret
push
xor
push
sbbl
pop
mov
push
pop
stos
jno
out
orb
rep
test
lcall
lahf
and
and
inc
mov
xor
mov
mov
lds
sbb
sub
xchg
push
cltd
xchg
enter
daa
push
sub
or
loopne
add
mov
mov
loope
in
inc
push
push
lret
int3
lret
sub
add
daa
imul
insl
push
jge
dec
mov
sub
rclb
sub
sbb
es
mov
jle
mov
mov
rcrl
dec
icebp
into
cs
iret
cmpb
test
adc
insl
daa
loope
je
movsb
pop
cmpl
cmp
cmc
jnp
repnz
cmp
pop
and
add
mov
ror
sub
fldl
pop
jmp
in
mov
jne
xor
stos
push
daa
push
add
pop
mov
lcall
icebp
pop
in
lcall
out
sbb
repnz
rcll
insl
std
int
xor
ljmp
jns
push
lds
inc
dec
pusha
dec
inc
pop
cmpsb
jmp
cmp
shr
inc
sub
es
in
xchg
scas
loope
cmp
mov
sub
xchg
or
nop
xor
je
dec
sub
add
addb
jmp
fnsave
cmpsl
mov
push
sti
loop
pop
dec
repnz
sub
test
shrb
or
xchg
aad
dec
sub
mov
dec
xor
inc
fsubl
ret
jb
bound
mov
push
add
mov
jmp
inc
push
aaa
fwait
lea
push
imul
adc
and
cli
or
xchg
add
dec
pop
mov
sub
xchg
sbb
add
cmc
jmp
ss
push
outsl
ja
out
movsl
push
or
xor
hlt
fistpl
divb
dec
mov
inc
inc
jb
jle
in
es
adc
and
insb
add
test
repz
adc
xor
arpl
xchg
rolb
and
push
add
jecxz
mov
lods
mov
popf
mov
jmp
lods
mov
pushf
xor
dec
leave
sahf
xchg
jmp
jg
xlat
push
jle
mov
aaa
jle
outsb
lret
dec
out
lock
pop
shrb
popa
push
hlt
dec
inc
inc
aas
loop
dec
mov
jno
dec
popf
loope
imul
ror
dec
insl
xchg
stos
add
xchg
cwtl
not
mov
dec
lea
out
mov
sbb
rclb
or
shl
test
inc
in
outsl
sbb
jle
shrb
loopne
loopne
adc
push
dec
xor
popa
sbb
jb
pop
cwtl
out
mov
lods
lods
sbb
les
add
loopne
inc
dec
or
and
and
sbb
ret
imul
cs
dec
pushf
push
repz
sahf
sub
jno
cwtl
in
mov
mov
xor
xchg
sar
or
inc
mov
cltd
lahf
sbb
orl
mov
jns
adc
fucomi
std
sbb
jg
cmpsb
xor
loopne
pop
jge
outsl
repnz
iret
outsl
roll
xchg
push
mov
dec
jmp
jge
movsl
jo
sarl
daa
jno
dec
loop
sub
and
jle
sub
pusha
adc
ja
int3
std
lcall
movsbl
popf
in
xlat
inc
psrad
jecxz
movswl
movsb
sub
adc
cwtl
test
movsl
jmp
push
btc
sub
lcall
or
fdiv
jle
lods
xchg
mov
movsl
xchg
iret
lds
pop
sbb
xchg
cli
pop
movsl
xchg
dec
lahf
or
cmpsl
in
or
jge
sbb
cwtl
add
lods
addb
push
loope
mov
xchg
jp
insl
cmp
rorl
lahf
mov
in
cmp
movsl
shrb
sahf
jbe
ficoml
cmp
fisubrl
jnp
lret
mov
push
movsl
fildl
push
cmp
dec
call
xchg
mov
pop
cmp
imul
insl
js
nop
xchg
xchg
inc
xor
push
aaa
mov
pusha
icebp
mov
adc
lods
dec
int3
ss
inc
iret
sub
imul
and
push
jb
mov
adc
xor
insb
pop
arpl
jb
or
les
cltd
lret
mov
scas
fidivrs
flds
push
and
fmuls
dec
movsl
pop
and
aad
int3
and
inc
loope
lret
and
aam
adc
xchg
lret
jmp
mov
push
fiadds
rol
xchg
pop
icebp
push
dec
xchg
jbe
call
xor
mov
mov
dec
testl
push
cmc
jge
inc
ret
and
cwtl
push
mov
aam
repz
mov
loope
rcll
and
and
inc
fldt
fbld
jns
add
mov
jp
lds
imul
xor
fdivrs
mov
cwtl
movsb
add
fmul
pop
add
setbe
xor
xor
sbb
fisubrs
shrb
xor
fsubrp
jbe
pop
inc
lds
jmp
into
push
pushf
repnz
dec
jbe
pop
add
push
or
mov
sahf
push
hlt
jb
mov
mov
jg
mov
mov
mov
cmpsb
cli
ds
popa
loop
jl
jp
dec
sti
fldt
xor
mov
jnp
xchg
nop
js
fs
data16
xor
cwtl
repnz
push
loopne
sbb
in
xchg
orl
sbb
cs
das
fisubrl
cmp
outsb
push
or
cmp
push
sub
jp
int3
aaa
mov
add
movsl
and
xchg
ds
push
jmp
pop
add
mov
push
jno
or
sbb
adc
shrb
mov
in
mov
out
push
adc
adc
jmp
cmpsb
xor
ret
pop
xor
cwtl
sub
pop
repz
push
sbb
jo
add
or
xbegin
es
mov
xor
addr16
pusha
rcrb
stos
bound
jmp
mov
stos
or
cmp
int
sub
je
repz
cld
cwtl
test
jp
pop
jmp
sub
push
dec
push
shlb
ret
sahf
adcb
mov
jg
mov
lea
roll
bound
in
in
mov
push
and
jns
dec
xchg
mov
shlb
std
mov
pop
sbb
test
jmp
aas
xor
loop
aad
out
test
add
nop
sbb
xchg
jmp
inc
adc
scas
mov
mov
mov
loopne
fcoml
mov
push
sbb
and
lea
les
xchg
aaa
and
scas
add
arpl
or
fld
mov
dec
dec
and
xor
popa
sbb
xrelease
sub
inc
sub
add
dec
lcall
lods
push
and
mov
add
pop
sbb
sbb
inc
pop
call
outsb
or
pop
jp
push
sbb
pop
sbb
sbb
pop
aas
rcrl
outsl
push
mov
xchg
push
mov
jecxz
pop
mov
lods
imul
xchg
cs
rolb
pop
sub
pop
mov
std
add
push
fnsave
mov
dec
jnp
inc
pop
inc
aam
scas
pushl
jae
add
popf
loope
adc
mov
and
lcall
test
xchg
pop
add
lcall
sub
mov
xor
mov
xchg
out
cmpsl
pop
shll
push
test
mov
inc
daa
adc
dec
leave
push
push
and
lret
roll
gs
icebp
daa
dec
test
lea
pop
sbb
rol
mov
mov
stos
push
gs
jle
rcl
sarl
aam
in
adc
jp
lock
cld
arpl
mov
aaa
fdivrl
loopne
lods
mov
mov
xor
mov
mov
outsl
pop
test
in
movsb
mov
xor
outsl
gs
gs
and
mov
cmp
mov
lods
add
lret
loop
js
mov
jns
loopne
add
or
pop
movsb
imul
and
push
test
inc
and
sahf
pop
or
rcll
cmp
imul
cld
iret
mov
jno
mov
cmpsb
xlat
or
lcall
pushf
xchg
stc
push
dec
cmpsl
popf
adc
xor
les
dec
ljmp
ja
mov
mov
movsl
xor
sub
fisttpll
push
push
adc
mov
sub
mov
or
dec
ja
xchg
fcoml
xchg
outsb
stos
addb
pop
adc
fldl
jae
sbb
xchg
fisttpl
outsl
ja
inc
mov
icebp
lret
sbb
xchg
xchg
inc
sahf
push
pop
xrelease
jg
int3
out
movsb
or
sbb
add
dec
push
insl
push
pop
xchg
dec
das
insb
mov
lods
mov
test
clc
jb
pushf
sub
cmp
sbb
cld
je
mov
mov
shr
sbb
sbb
pop
sub
xlat
imul
push
xchg
cmp
fmuls
scas
add
test
movsl
inc
rcrl
movsl
in
adc
movsb
cli
insb
xor
cli
int
or
mov
mov
push
rcr
push
jo
gs
aas
push
adc
mov
loopne
push
cmp
or
cmpsl
in
inc
pop
adcl
xchg
loopne
pop
and
push
scas
mov
aad
mov
in
add
cmpsl
stos
int
mov
ljmp
out
lock
mov
mov
imul
ja
and
cmp
push
lock
xlat
clc
sbb
push
xchg
adc
jb
lods
test
lcall
ljmp
xchg
ret
cmc
push
stos
inc
mov
lock
pop
pop
ds
jnp
dec
popf
add
inc
lea
arpl
push
mov
test
cli
shrb
push
fwait
push
sbb
imul
or
popf
or
add
data16
mov
imul
mov
cmc
mov
inc
jns
jno
xlat
in
jno
enter
xchg
push
push
cmc
mov
dec
das
dec
add
add
sahf
insb
add
clc
lods
insb
repnz
mov
outsl
outsl
cmp
sbb
xchg
mov
mov
adc
fcomip
add
adc
loope
ret
dec
jnp
jg
stos
xchg
insl
lret
lcall
stos
stos
push
loop
les
gs
jno
mov
gs
ljmp
scas
out
xchg
lods
fistl
incl
imul
mov
aas
push
add
or
int3
std
pop
sarb
sub
push
adc
mov
cmp
or
fxch
cmc
cmp
xor
sub
je
mov
add
xor
push
pop
out
xchg
pushf
cli
enter
iret
inc
sbb
xchg
sbb
rorl
arpl
jbe
mov
fbstp
popf
mov
icebp
pop
lahf
mov
mov
add
sub
push
sarb
into
mov
imul
sub
cld
sbb
sbb
dec
ret
and
aaa
mov
jo
pop
ljmp
dec
inc
pop
int3
es
mov
loope
xor
dec
fsubr
loope
inc
rcrl
sbb
sub
jl
rcl
xlat
into
jge
mov
mov
or
pushf
sub
stos
stc
fistps
cmpsb
rcrb
fiaddl
push
mov
inc
add
int3
sub
ss
pop
loopne
and
xchg
sbb
imul
xor
sub
in
pushf
call
adcl
inc
mov
push
insl
cmp
inc
xchg
adc
fists
int
jbe
sti
ss
std
dec
test
lret
inc
cmp
inc
call
daa
pop
mov
dec
inc
cld
push
pusha
adc
ds
mov
sti
aad
bound
addr16
mov
movsb
imul
imul
leave
ljmp
adc
fisttps
dec
add
cmp
xchg
sub
inc
insl
cmp
lock
popl
dec
add
roll
popa
in
inc
mov
sub
ret
and
inc
imul
mov
lds
lock
sub
xchg
pushf
cmp
leave
xor
pop
push
lahf
dec
sbb
inc
outsl
jae
inc
repnz
sub
in
out
push
adc
mov
sti
cld
cmpsl
sub
shrb
aad
lret
jmp
mov
xorl
mov
daa
call
negl
call
mov
out
and
repnz
shlb
xchg
push
pop
test
jb
daa
add
xchg
pushf
add
cwtl
movsl
pop
rcll
in
cmp
mov
and
cmp
pop
lods
imul
mov
fsubs
jbe
inc
xchg
sub
add
push
lock
mov
mov
lret
jno
mov
mov
imul
cmp
push
cmp
jp
sarl
nop
adc
fisttpl
les
sub
in
mov
dec
dec
jle
xchg
push
mov
inc
mov
lock
mov
pusha
fwait
mov
sub
sbb
pop
inc
je
outsl
cli
aad
ja
out
pushf
mov
jl
sub
xor
sub
sub
xor
cmp
sbb
cmp
adcl
sbb
out
fildll
jne
xchg
inc
movsb
aad
notb
inc
mov
sbb
subl
and
dec
fsub
clc
pop
stos
inc
mov
es
and
jg
jo
adc
jno
xchg
add
mov
mov
loop
pushf
pop
mov
inc
jmp
jg
add
fs
jle
pop
scas
mov
mov
sbbl
adc
notb
lea
sbb
loopne
add
inc
je
mov
sub
mov
add
loop
shr
mov
push
push
jmp
movsl
xor
adc
jp
sbb
cld
testl
mov
jp
xor
repnz
inc
dec
mov
inc
jmp
sti
aas
mov
rcrl
mov
and
jb
stc
arpl
pop
clc
mov
movsb
cmp
int3
sti
outsb
push
xor
jae
jno
mov
mov
inc
mov
sbb
shl
scas
fmuls
dec
sub
add
cmp
mov
shrb
jp
push
ss
icebp
or
stos
jg
push
ficoml
mov
fiaddl
xchg
sub
fdivr
xor
pop
add
xchg
test
out
mov
cwtl
imul
mov
fnstcw
adc
addr16
scas
jmp
das
push
mov
pop
shr
ss
lahf
in
push
in
mov
push
shl
dec
or
dec
jo
sbb
bound
and
xchg
andl
jecxz
add
jmp
fdivp
insb
in
loop
jecxz
lret
in
dec
lods
rorl
push
ficomps
dec
push
dec
mov
rcll
int
jmp
and
mov
push
aam
ret
push
mov
and
sub
fs
mov
setge
xchg
mov
lods
mov
xor
mov
push
sti
xchg
mov
cltd
or
jmp
cmp
cmpsl
sbb
gs
imul
push
push
aad
cmc
inc
pop
int3
int3
pop
mov
mov
nop
movsl
es
jg
add
or
out
leave
popa
enter
ret
pop
ja
xor
sarl
fcmove
aam
mov
mov
jo
jb
movsb
xchg
loopne
sub
shll
xchg
xor
mov
or
faddl
inc
ds
mov
pop
adc
insl
xchg
js
call
inc
cmp
push
xor
mov
dec
lds
call
cltd
jbe
or
ror
add
push
outsb
dec
je
divb
mov
addr16
hlt
push
adcl
addr16
sbb
ss
in
cmp
fsubrl
repnz
fwait
popf
lds
push
jle
dec
push
adc
lods
jle
stc
aad
popf
xchg
fstps
scas
push
stc
xor
fs
lret
arpl
and
aad
in
stos
push
dec
mov
fistl
sub
outsb
testl
stos
fsubp
lea
mov
bound
loopne
sbb
mov
and
adc
fwait
sbb
inc
push
xor
lods
sub
push
rol
roll
clc
int3
outsl
sub
call
out
lds
movsb
xchg
imul
or
es
jecxz
mov
shrl
cmp
xchg
mov
jle
cmp
push
addr16
push
loope
push
pop
push
ja
jge
addr16
mov
jbe
ds
push
scas
dec
sarb
lods
dec
sbb
xchg
aam
and
or
xlat
es
adc
mov
cltd
mov
cmpsl
pushf
imul
aad
xchg
jecxz
mov
dec
mov
out
mov
inc
ret
push
jge
imul
dec
ret
rcr
cwtl
mov
add
jb
push
into
les
mov
dec
shrb
pop
popf
pop
add
mov
xor
mov
pop
xor
xchg
subb
jae
pop
iret
bound
enter
push
mov
add
push
adc
mov
pop
dec
test
push
lea
inc
cmc
mov
add
addr16
js
test
int3
xor
test
jns
xchg
and
pop
adc
cwtl
pop
pop
daa
or
mov
jp
xchg
add
dec
xchg
outsl
push
popa
loop
daa
add
ret
repnz
mov
pop
inc
cmp
or
mov
ss
cmp
xchg
std
iret
cmp
sbb
push
mov
xchg
push
ja
pop
insb
shll
xchg
sub
jge
xor
pop
jmp
test
mov
cli
cltd
ljmp
pop
push
in
cld
jne
imul
jb
movsb
cs
sub
add
mov
in
lods
mov
fdivr
sbb
add
mov
les
mov
push
clc
fcmovnb
and
fs
popf
inc
cmpsb
xchg
cli
inc
into
add
add
xor
dec
cli
hlt
dec
add
xchg
adc
adc
pop
aam
loope
sub
inc
lcall
mov
sbb
cmp
loope
iret
mov
scas
mov
icebp
ficomps
pushf
out
fisubs
pop
mov
sti
inc
js
mov
imul
mov
fsubrl
dec
sub
std
nop
xchg
push
dec
and
mov
sar
mov
fidivrs
push
add
dec
nop
push
testl
out
repz
shlb
lret
pop
dec
rcll
push
mov
ror
xchg
push
sub
add
lds
sbb
mov
push
cmp
call
xor
push
push
sbb
scas
stos
sub
cmp
jecxz
dec
test
mov
and
and
mov
lcall
nop
mov
jae
xchg
lcall
pop
pop
ja
pop
and
adc
jmp
jo
xchg
push
cmp
mov
imul
lds
and
sahf
jnp
addb
push
test
sti
sub
mov
adc
test
aam
cmp
stos
lahf
out
test
frstor
pusha
pop
out
ljmp
pop
rorb
xchg
gs
mov
insb
inc
sbb
xchg
jns
mov
pop
lahf
rorb
movsb
or
sub
addr16
dec
dec
fsubp
mov
lcall
into
mov
jo
and
sti
pop
sbb
stos
push
loopne
mov
out
and
adc
ljmp
lret
pop
xchg
xchg
mov
mov
in
test
inc
pop
call
mov
fwait
repz
mov
mov
lock
popa
xor
clc
test
imul
or
mov
repnz
mov
xor
cmpsl
cs
mov
cmpsb
les
push
data16
lods
lret
push
enter
adc
lea
add
add
insb
lcall
sub
cmpsl
fimull
sub
pop
pop
xor
movsb
es
jle
jge
jg
pop
bound
inc
mov
and
cmp
mov
lock
xchg
or
dec
mov
push
xchg
divb
daa
cs
fimuls
call
mov
push
mov
loop
push
pop
mov
push
mov
sub
imul
das
mov
add
in
mov
push
imul
pop
jne
shr
sub
pop
insl
mov
arpl
pop
repz
mov
sbbl
xor
bound
idiv
pop
sub
sbb
and
pusha
mov
sub
popa
xorl
add
mov
pop
lret
inc
dec
fsts
lods
jp
loope
repnz
out
addr16
outsl
jle
dec
std
test
push
and
push
dec
cmp
out
out
adc
stos
lret
and
inc
punpckhdq
test
ds
cmp
iret
mov
or
incl
or
inc
ficompl
or
xor
fwait
inc
test
aas
call
jbe
cmpl
int3
aas
push
sbb
xchg
std
out
ljmp
mov
sbbb
add
in
cs
mov
rorl
test
and
mov
lret
mov
or
and
mov
cmpsl
or
lcall
mov
jnp
loop
mov
or
mov
repnz
jge
or
xor
inc
lret
and
pop
push
fldt
pop
adc
loop
dec
pop
push
xor
sbbl
dec
out
and
xchg
fucomp
or
lahf
mov
pushf
push
sbb
popf
stc
jg
fldl
and
clc
cwtl
inc
add
xor
xchg
sbb
ja
adc
push
repnz
sbb
cmp
outsb
imul
daa
inc
pop
mov
jmp
fbstp
jae
adc
test
pop
xor
pushl
ss
fnstsw
ret
inc
fisubs
push
fs
add
roll
std
arpl
mov
in
pop
loop
out
shr
mov
sbb
loope
pop
aam
mov
lret
push
push
cmpsb
rol
dec
addr16
add
orb
mov
or
leave
xorl
adc
jg
fs
clc
xor
jecxz
pop
mov
imul
imul
ja,pn
or
data16
shrb
mov
jbe
push
pop
je
push
inc
data16
ret
fcomi
add
xchg
subb
or
mov
call
loop
xchg
and
dec
cwtl
and
fcmovbe
push
adc
inc
cmpsb
add
mov
lret
aaa
sub
cld
cli
stos
into
xchg
lcall
out
pop
xlat
mov
add
ffreep
outsb
mov
cmovno
mov
sub
cld
sbb
or
mov
adc
push
cmp
add
cmp
sub
xor
cmpsb
out
cmpsb
pop
pop
fwait
outsl
mov
inc
neg
loope
inc
push
popf
push
neg
int3
jmp
or
push
insl
push
or
mov
fs
mov
dec
push
cld
xor
cmp
andb
add
stc
or
leave
jle
movsb
jl
cmp
test
int
icebp
pusha
cld
lods
test
jmp
mull
clc
mov
xchg
mov
rorl
cmp
popf
fcomps
and
ret
jnp
out
pop
jl
mov
push
shl
adc
shlb
test
and
xchg
pusha
add
call
loope
push
push
shrl
outsl
ret
iret
shr
or
bound
fiadds
orb
push
notb
sbb
fnstenv
arpl
orl
add
xchg
sub
cltd
cli
pop
cmpsb
in
mov
add
movsb
mov
xchg
fisttpll
xor
xchg
sub
push
sub
jg
in
outsl
jno
adc
stos
addb
repz
enter
inc
push
ficomps
lahf
lahf
pop
rcrl
addb
rorl
lret
mov
and
adc
add
inc
outsb
sbb
shr
cmpsb
mov
je
aam
ss
xor
mov
mov
xlat
inc
repnz
sub
mov
outsl
push
push
outsb
testl
jmp
inc
ret
mov
jo
add
loopne
dec
cli
test
mov
in
xchg
int
pop
mov
ftst
add
stos
dec
xchg
fmuls
cld
mov
xchg
call
mov
pop
bound
lret
jmp
fidivl
das
js
or
mov
daa
int
add
push
enter
sbb
sub
sbb
js
mov
jo
mov
mov
stos
ss
cmp
fisttpl
xor
gs
xchg
xorb
dec
jne
or
push
ja
js
or
push
out
add
jle
xor
and
inc
or
pop
loopne
push
data16
or
mov
adc
mov
stos
adc
mov
pop
add
sbb
mov
mov
xor
add
jle
push
xor
pop
cmc
mov
adc
xlat
test
outsb
sub
int
xchg
popl
dec
test
outsb
das
cmpsl
and
jge
cmpsb
jl
fwait
in
nop
sub
cwtl
cmc
xchg
add
xor
xlat
mov
and
in
mov
and
and
ds
sbb
dec
call
xor
cs
not
rorb
imull
movsb
pop
adc
pop
sbb
sar
sbbb
ljmp
cmp
xorps
xor
mov
jmp
cli
insl
popf
pop
ret
test
pop
ficompl
pop
pop
subl
sbb
test
outsl
aad
mov
add
inc
mov
fcoms
jns
pusha
fwait
iret
stc
fstpt
pop
scas
push
jbe
push
stos
inc
popf
xor
sbbb
icebp
cli
xor
jle
push
or
xchg
push
mov
pop
nop
aam
repnz
in
int
xchg
xor
mul
addb
mov
cmp
andl
incl
push
cwtl
ret
pop
repz
inc
aam
dec
mov
movsl
push
stc
push
mov
not
in
inc
add
xor
rcll
or
cld
sbb
shrb
xor
test
mov
out
cmp
pop
xor
jmp
add
std
into
sbb
into
sbb
mov
push
stos
out
loope
xor
adc
ror
repnz
imul
jns
loopne
mov
outsb
inc
jno
mov
sub
add
aad
pop
aad
or
mov
call
psllw
pop
push
ret
incl
jns
fs
outsb
cmp
lds
inc
lds
sbb
imul
adc
mov
jae
stos
movsb
cmp
mov
mov
outsl
push
sarl
insb
mov
das
dec
sahf
pop
xor
incb
rorb
mov
lods
fdiv
jno
or
mov
std
icebp
jbe
dec
mov
jae
ss
adc
fcmovu
pop
iret
cmp
pusha
imul
sub
dec
int
dec
adc
xchg
push
pop
subl
pop
inc
cmp
movsb
std
sbb
int
mov
add
push
pop
ja
mov
mov
sub
insb
das
in
lods
daa
roll
dec
mov
sub
sbb
leave
mov
push
pop
bound
cmp
adc
mov
mov
xchg
xor
int3
cltd
std
leave
push
pop
mov
lret
mov
mov
sbb
push
fldenv
pop
scas
xlat
adc
inc
jp
arpl
dec
sub
inc
xchg
cmpsb
lods
xor
mov
or
rcrb
and
filds
movsl
sahf
and
paddusb
or
sti
push
test
cltd
lock
pop
sbb
dec
adc
not
dec
ftst
jle
popf
das
lret
aas
add
jo
inc
mov
fs
adc
stos
and
popa
jle
inc
sub
int3
pop
int
sub
popa
imul
jg
fcmovne
outsb
inc
jl
mov
sub
movsl
dec
push
cmp
xor
lahf
or
or
inc
outsl
pop
sub
mov
aas
adc
bound
into
jmp
addr16
fbld
dec
xchg
gs
mov
fcmovnbe
mov
mov
stos
mov
xchg
fs
or
xor
pushf
mov
mov
jle
jns
leave
mov
ret
push
rorl
cwtl
or
xchg
in
jl
cmp
aas
sub
sbb
aas
or
lret
cmp
insl
lea
or
jbe
sahf
push
negb
push
or
addb
jl
jmp
mov
stc
sti
xchg
and
mov
inc
xor
mov
xchg
jg
mov
push
fwait
inc
lods
mov
arpl
lcall
ss
das
fs
cmp
adc
ljmp
ss
xchg
fcoml
cmc
jmp
int
daa
jl
aam
xor
xchg
jp
adc
mov
cmc
insl
push
std
add
mov
sbb
add
mov
jmp
push
scas
sbb
lret
or
xor
cmp
adc
sbb
rep
xor
adc
dec
push
sub
test
ja
push
inc
adc
popa
mov
mov
pop
lods
or
ret
lret
dec
xchg
iret
mov
imul
adc
movsb
movsb
repz
pop
arpl
lret
adc
out
xor
scas
xchg
mov
or
les
ds
ret
dec
stos
out
dec
xchg
mov
xchg
orl
push
fists
dec
or
xor
sbb
rcll
xor
push
scas
adc
sbb
incb
movsb
pop
mov
fdivp
inc
insl
sub
xchg
hlt
pushf
shrd
and
aas
mov
or
stos
repz
fstl
mov
mov
add
sub
scas
bnd
outsl
mov
and
pop
pavgb
xor
and
aad
sahf
lods
dec
adc
mov
jl
pop
push
data16
cmp
bound
outsb
cmovbe
push
mov
push
push
sub
sbb
and
testl
roll
inc
pushf
adc
insl
pop
cmp
aam
divb
jmp
das
cwtl
xor
inc
sub
fstl
jecxz
clc
jo
into
jg
sbb
fimull
adc
mov
pop
les
lcall
jg
cmp
mov
jge
jae
pushf
out
pushf
xchg
icebp
sbb
jne
pop
in
mov
or
mov
adc
pop
sub
sbb
rcl
pop
jmp
call
sub
sub
sub
fsub
sub
popf
pop
ljmp
fmul
pusha
mov
je
loopne
dec
fwait
neg
loopne
xor
mov
hlt
adc
push
sahf
out
inc
fiaddl
cmp
cs
pushf
mov
hlt
and
xchg
daa
and
outsl
and
gs
nop
dec
pop
cs
inc
and
pushf
enter
call
js
dec
lods
je
clc
add
pop
adc
pop
gs
aam
or
roll
ficompl
in
push
std
or
push
xchg
dec
push
repz
rcl
int
out
or
adc
movsb
sahf
push
sub
and
xchg
ja
shl
loope
cmp
ljmp
xchg
mov
popf
insb
sub
mov
mov
mov
adc
rcll
lcall
iret
mov
inc
adc
loope
jbe
out
xchg
nop
push
lcall
xchg
jl
cmp
xchg
jecxz
jno
jl
loopne,pn
js
icebp
cs
jns
stos
mov
in
xorl
pushf
jp
xchg
or
sub
pop
inc
xchg
or
stos
xchg
and
into
leave
ja
lods
test
pop
xor
lcall
fmull
sbbb
adc
and
sbb
jnp
inc
ljmp
pop
fs
ds
xchg
pushf
enter
push
xor
xor
jb
fcmove
dec
pushf
ss
in
pusha
leave
loope
jecxz
repz
fs
lret
sti
jae
mov
mov
jg
insb
jle
push
or
mov
xor
jns
mov
mov
lret
stc
testl
inc
jnp
into
int
aad
push
cmpsl
add
in
jge
mov
mov
or
push
xchg
aaa
leave
icebp
push
loope
inc
sbb
pop
xorb
dec
pop
sub
sarl
sub
xor
ret
or
addl
or
jb
jmp
xor
jb
lret
jo
push
sbb
mov
divl
das
loopne
ficomps
mov
lahf
ljmp
add
shl
and
pop
mov
pop
inc
cli
inc
ret
test
adc
jle
les
add
inc
pop
loopne
jno
and
cmpsl
fbld
pop
movsb
mov
inc
ds
push
push
pop
cmpl
mov
rcl
mov
lahf
inc
rcll
mov
lcall
add
mov
push
jo
out
lock
daa
pusha
dec
stc
xor
in
mov
stc
icebp
inc
addr16
in
push
sbb
fmulp
js
fs
dec
mov
lea
ficomps
mov
ret
test
pop
enter
outsb
xor
jp
jne
dec
mov
inc
inc
mov
or
xor
mov
daa
shll
lock
jns
sub
adc
and
aaa
ret
jno
jnp
jno
ss
sti
dec
clc
ss
inc
les
in
adc
jbe
cmp
lea
in
add
inc
fcompl
sbb
fs
dec
lea
cs
ret
add
stos
and
push
xchg
inc
adc
pop
adc
out
mov
pop
out
dec
cwtl
sbb
fwait
ja
rep
add
fcom
mov
inc
xchg
add
in
xor
pop
ret
lea
mov
lret
cmpsb
ret
das
pop
pop
daa
test
and
inc
mov
mov
popf
sbb
jo
mov
imul
movsl
daa
icebp
hlt
das
or
test
and
mov
add
movsb
cmovs
in
fwait
pop
in
stc
push
dec
pusha
loop
fsubl
enter
scas
fcmovnu
or
jp
movsl
ret
inc
dec
movsb
jae
push
pop
ror
push
xchg
mov
sub
xchg
addl
clc
movsb
ljmp
xchg
mov
negl
mov
xor
shrl
out
xorb
sub
and
fs
cmpsb
into
sbb
xchg
ret
call
out
loop
test
pusha
xchg
mov
or
or
fildll
outsb
int3
mov
mov
fbld
sbb
dec
cmp
push
sub
mov
inc
jno
push
pop
dec
mov
adc
imul
outsl
cmp
pop
jbe
sub
xchg
sbb
rcrb
bound
sub
cmp
adc
mov
inc
mov
mov
popf
rcll
mov
js
cs
clc
dec
test
pop
bound
clc
ljmp
repnz
or
fadd
sbb
dec
testl
cmp
mov
stc
out
adc
aad
pop
dec
pop
jno
push
push
push
adc
add
adc
movsb
pushf
pop
mov
mov
inc
test
rorl
pop
push
dec
enter
mov
or
ror
enter
sbb
jnp
xor
cli
outsl
cld
enter
pop
addr16
es
push
sbb
mov
insb
mov
mov
popf
outsl
cld
dec
repnz
wbinvd
push
imul
inc
jle
testl
icebp
fisttps
loopne
xor
dec
push
test
or
add
xchg
add
jbe
mov
xlat
push
mov
int
or
std
insb
cmp
lock
mov
sub
or
and
pop
popf
mov
out
xchg
mov
out
jmp
push
scas
fstpt
icebp
push
cs
movsl
pop
cmp
imul
nop
pop
inc
pop
jno
mov
test
cmp
cmpsb
nop
jne
cmp
loope
dec
xchg
jnp
xor
fidivrl
xor
cmp
pop
vmovups
cmp
in
test
mov
jp
mov
dec
lods
push
mov
lcall
fdivr
mov
addl
push
ret
movsl
bswap
lret
dec
out
cmp
jne
mov
je
test
cli
xor
fcomps
xor
in
out
pop
sbb
pop
sbb
adc
sub
xor
mov
dec
rcll
ret
add
sub
inc
cs
stc
push
fisubl
sbb
cmp
sub
pop
mov
or
daa
push
lea
lret
jmp
cmp
push
jle
aas
mov
xorb
xchg
jle
fwait
mov
push
lahf
and
rcrl
cmp
mov
mov
movsl
cmp
fildl
sub
test
les
dec
jb
rcl
nop
xchg
xor
test
jno
pushf
int
add
data16
jmp
xor
int3
dec
xchg
or
std
jle
push
mov
ljmp
inc
and
scas
aam
inc
push
adc
cltd
test
push
nop
out
push
in
sbb
int3
aaa
ret
jb
insb
cli
into
adc
pop
scas
inc
jge
pop
or
subb
mov
movsb
pop
adc
lahf
push
jo
ds
dec
cmpsb
leave
icebp
or
ret
repnz
inc
popf
sbb
int3
fcomip
pop
inc
sbb
popa
add
sub
mov
dec
das
or
shrl
lea
inc
dec
or
popa
in
adc
mov
xchg
cmpsb
pushf
inc
pop
movsl
mov
mov
pop
cwtl
xchg
jb
ror
jg
cmp
cmp
lods
out
cmpsl
mov
cmc
mov
out
fstpl
xor
fiadds
add
cmp
pop
or
imul
stos
ret
lods
pop
mov
sub
jno
mov
mov
mov
mov
jge
sbb
out
adc
mov
rorb
std
repz
ret
test
and
int3
jg
lods
iret
mov
fwait
sub
enter
ja
mov
mov
pop
outsl
push
sub
sbb
mov
bound
lods
mov
dec
dec
fidivrl
mov
adc
addr16
pop
test
loope
addr16
and
xchg
test
sub
jmp
or
mov
out
out
orl
lret
fwait
jmp
xchg
jg
call
lahf
jle
aad
cmp
js
push
mov
cmp
sub
xor
addr16
incb
add
inc
and
xor
outsb
add
pop
dec
or
cmc
inc
fdivr
mov
or
adc
aad
push
push
mov
inc
mov
mov
jbe
dec
test
push
xchg
out
pop
fdivrs
addr16
sub
popf
mov
push
adc
mov
pop
pop
xchg
mov
cltd
loope
stos
ficompl
xor
jl
pop
mull
pop
jp
xchg
push
xor
scas
movsb
mov
addr16
roll
sahf
sbb
enter
push
fsubrs
mov
hlt
test
jl
stc
fildl
in
addr16
cltd
fwait
mov
xchg
ja
adc
movsb
jl
adc
outsb
std
sbb
push
fldt
jns
test
fsubr
mov
stos
sti
mov
add
mov
insl
cmp
sbb
sbb
sbb
mov
cmp
mov
and
ret
rcrb
pop
hlt
push
mov
insb
inc
xor
inc
mov
sahf
xlat
push
cmp
jl
lods
insl
push
xabort
jb
jge
jns
pushf
xchg
daa
adc
mov
inc
xor
cmp
insl
mulb
jne
bound
ficoml
and
out
mov
adc
jecxz
xchg
test
sub
shrl
pop
out
adc
push
lock
fstpl
xchg
in
jl
adcl
icebp
and
mov
cmp
test
cs
enter
mov
mov
add
aam
lret
imul
inc
rcrl
adc
inc
rolb
in
test
adc
je
adc
clc
dec
sub
ror
cltd
cwtl
xchg
aam
fdivl
in
imul
adc
movsl
stc
cld
insb
movsb
or
mov
xchg
out
or
mov
sub
call
or
xchg
mov
mov
or
add
int3
mov
sbb
out
dec
roll
pop
pop
dec
cmp
int3
ja
ror
jge
push
stos
sarl
dec
push
sub
mov
js
cmp
sbb
pop
in
fisttps
cli
mov
ja
pop
xchg
orl
xor
mov
test
into
loopne
pop
jns
xchg
lock
jne
mov
bsr
out
cld
repnz
xor
data16
int3
jo
std
sub
jge
dec
inc
imul
mov
sti
pop
sub
js
push
sub
stos
incb
loope
out
fwait
xor
or
adc
sahf
mov
aad
out
or
xchg
aad
inc
iret
dec
inc
or
mov
push
movsb
xor
fs
ret
mov
leave
test
jecxz
xor
iret
mov
xchg
cmp
fisttps
icebp
jle
ret
test
into
xchg
or
mov
cltd
adc
mov
xchg
and
xor
jne
mov
lods
adc
int
hlt
sbb
imul
shlb
out
push
inc
sbb
add
xchg
pop
repz
jle
jge
lahf
xchg
adc
out
outsb
lcall
popf
scas
add
xor
imul
fsts
mov
inc
push
xor
ret
arpl
lock
nop
xchg
jo
loopne
lea
ds
xorl
or
pusha
mov
popf
movsl
fs
xor
pushf
gs
loopne
data16
sub
xlat
subb
cld
fistpll
sbb
mov
push
lret
xchg
mov
adc
mov
jnp
or
aam
push
repz
mov
push
xor
daa
lock
stos
adc
gs
popf
sbb
xchg
sbb
xlat
pop
jbe
pop
mov
rorl
enter
pop
add
outsl
inc
mov
jb
ret
test
leave
and
and
mov
ds
aad
add
mov
pop
cmpsl
mov
jb
push
or
jp
add
mov
pop
cli
add
std
rcl
int
ss
mov
movsb
out
xchg
dec
aad
xchg
mov
pop
xor
scas
lods
xchg
je
pusha
mov
jns
mov
int3
jo
loope
dec
mov
push
cs
leave
outsb
sbb
lds
scas
mov
in
mov
mov
jb
ds
pop
lods
inc
icebp
out
iret
adc
mov
fldl
in
xor
lcall
cwtl
je
in
f2xm1
mov
xchg
and
repnz
inc
xchg
fisttpl
pop
dec
or
mov
cwtl
mov
push
popf
insb
mov
mov
mov
xor
and
xor
fistps
test
and
adc
sbb
push
push
dec
xchg
lret
jmp
scas
pop
push
inc
and
mov
testl
pusha
xor
lret
or
pop
inc
xchg
ret
scas
push
loop
jmp
in
cmpl
aas
xchg
cmp
xchg
xchg
stos
and
cmpsl
adc
jne
xor
jmp
pop
bound
sbb
inc
jno
jns
jle
movsb
lcall
mov
inc
ds
fdiv
push
sbb
leave
push
lahf
pop
lahf
inc
or
pop
dec
in
mov
add
addl
pop
fistpll
sti
push
into
insl
jo
icebp
cmpsl
mov
cld
cli
jne
push
mov
jnp
movsb
fwait
xchg
sub
jo
fistpll
push
mov
loop
out
mov
shlb
jbe
jmp
sub
adc
xchg
cli
rolb
jb
pop
stos
bound
cmp
shrb
xor
lods
push
cwtl
addr16
pop
push
adc
cmp
mov
or
in
leave
xor
xor
xchg
cmc
out
shrl
in
or
xor
push
movsl
inc
out
shlb
or
and
stos
test
mov
mov
push
andl
sbb
mov
add
lahf
inc
push
push
and
leave
push
call
jg
iret
in
push
sbb
sbb
and
int3
addr16
outsb
and
rolb
loopne
sub
loopne
test
incl
aaa
cmp
mov
xchg
loopne
pushf
addr16
xor
xor
rorb
mov
xchg
stc
loop
cltd
mov
inc
or
sbb
push
pop
pusha
gs
and
cld
xchg
push
inc
fcomip
imul
inc
adc
xchg
loopne
jge
scas
xlat
xchg
aas
xchg
mov
sub
ds
sub
xor
mov
sahf
rorl
sub
jmp
inc
sbb
lcall
push
sbb
and
push
fidivrs
add
int
shrl
decb
mov
and
lret
adc
aas
sub
jnp
in
mov
mov
scas
mov
mov
push
cmp
jno
insb
test
cmp
icebp
jne
es
inc
gs
mov
in
push
mov
pop
push
sarl
loopne
lret
repnz
leave
aad
fistl
in
int3
and
repnz
lea
dec
xor
mov
out
mov
mov
sbb
cmp
out
jl
cmp
in
addr16
lods
scas
mov
pop
divl
repnz
xchg
scas
mov
sti
inc
or
jl
sti
iret
test
add
in
fwait
shld
add
das
sbb
ret
and
mov
jno
loop
add
lods
loopne
pop
push
ds
sub
shrl
cmc
jnp
fmul
adc
xor
lsl
je
mov
xorl
lahf
leave
scas
inc
nop
cltd
mov
mov
push
mov
sbbb
nop
aam
push
jnp
xorb
dec
stc
pop
dec
dec
mov
xchg
std
sub
test
pop
xchg
jnp
xchg
and
pop
aaa
mov
nop
jae
shlb
ja
iret
lds
dec
pop
push
ljmp
fs
mov
fisubl
mov
jbe
sarb
fstps
les
mov
inc
pop
cmp
popa
pop
push
cmpb
adc
xchg
xchg
xor
xchg
idivl
sub
scas
loope
test
sbb
adc
inc
incl
in
fnstcw
cmp
dec
and
sub
jle
cwtl
fnsetpm(287
mov
test
call
rorb
or
jo
popa
in
jns
enter
movsl
push
and
dec
ret
enter
popa
inc
pop
lods
pop
or
int3
sti
ret
add
jle
addr16
nop
cmp
add
lea
push
and
xor
cmp
mov
inc
iret
and
add
pop
jbe
fxch
pusha
or
pop
rorb
dec
adc
pop
push
mov
and
sub
dec
hlt
dec
mov
or
push
xchg
mov
push
dec
jo
and
in
jge
adc
xor
movb
xchg
scas
mov
lods
subb
mov
xchg
gs
add
vcvtps2pd
cwtl
or
clc
dec
loop
pushf
sbb
mov
shl
inc
shrb
dec
fisttpll
cmc
nop
jno
dec
mov
xor
leave
rclb
or
arpl
js
push
mov
or
leave
add
push
in
pop
adc
mov
test
ficompl
ficoms
ja
jg
repz
xor
dec
adcb
pop
cwtl
dec
ss
cld
ljmp
lret
test
lahf
cltd
mov
mov
jg
pop
arpl
mov
dec
mov
scas
or
lahf
mov
fisubrl
jmp
pop
bound
mov
pop
pop
in
sti
scas
jmp
std
inc
dec
stos
sbb
mov
pop
pop
dec
push
test
dec
int
inc
mov
repz
mov
adc
xor
in
int
lds
add
subps
jmp
mov
idivb
push
dec
inc
sub
xlat
pop
cmc
andb
ret
add
mov
xchg
xor
mov
adc
mov
stc
shrb
test
psubd
add
insb
sub
xchg
xchg
mov
lret
cwtl
mov
or
jns
insl
push
cmp
out
xlat
mov
movsl
jg
cmpsb
sbb
pushf
imulb
jbe
sbb
in
pop
or
gs
outsl
sar
cwtl
xor
clc
push
mov
pop
pop
addr16
test
sbb
jno
jp
sahf
loopne
int3
ret
jo
out
push
addr16
xchg
jbe
sahf
les
loopne
loope
inc
inc
in
pop
sbb
jle
or
push
lds
mov
sub
and
int
dec
iret
icebp
cld
mov
pop
hlt
mov
mov
pop
mov
cwtl
mov
shlb
mov
iret
jb
sbb
mov
popf
in
lods
mov
sti
jecxz
dec
and
or
cmp
arpl
movsb
and
mov
jecxz
cmp
jp
lods
shl
ljmp
data16
ret
xchg
popf
push
mov
lret
outsl
jmp
dec
jp
mov
xlat
and
int
push
lds
rcl
mov
mov
in
lock
xchg
movsb
adc
adc
push
inc
sub
movsb
add
xlat
push
mov
icebp
jg
fwait
rclb
or
mov
pop
popf
sar
mov
mov
mov
sub
stc
out
popf
outsl
xchg
adc
loopne
aas
jo
dec
sub
push
out
push
push
lret
sbb
or
popf
int3
xor
mov
pop
int
cmp
orl
inc
stos
and
dec
xor
aas
xchg
jg
adc
jno
pushf
addl
stos
mov
test
sbb
outsl
mov
test
leave
cmpsb
leave
inc
adc
push
ret
popf
xorb
mov
lods
xor
pop
imul
cltd
and
adc
insl
sub
fdiv
xorl
jns
test
sub
insl
sahf
push
sub
pop
mov
not
stc
gs
pop
mov
cmpsl
xor
adc
inc
stos
adc
lock
mov
add
mov
xchg
out
mov
xchg
inc
std
stos
les
and
push
call
sbb
xchg
xchg
loopne
lret
cmpsb
jmp
add
icebp
push
stc
shl
cmp
sarl
push
sub
subl
mov
mov
and
jns
fmul
dec
xchg
incl
out
xchg
ret
test
adc
mov
sbb
inc
mov
push
mov
test
push
data16
push
fcomp
movsl
lea
test
scas
xor
and
mov
gs
les
incb
adc
adc
aaa
pusha
add
stos
lock
in
sahf
jbe
fidivrl
add
xor
xor
imul
pop
or
add
stos
dec
into
jno
shr
mov
jg
cli
jae
cltd
push
icebp
jns
mov
xor
rorl
mov
mov
enter
or
sbb
test
pusha
sbb
mov
xchg
insl
rclb
xchg
nop
mov
jp
fidivl
and
push
mov
cmp
es
sub
cmp
ficomps
dec
sbb
data16
fistl
adc
lds
jl
out
aad
sub
sahf
outsl
jp
cmc
lcall
adc
in
push
cmp
fadds
rorb
sbb
popf
add
sbb
std
scas
sbb
xor
mov
jns
sub
iret
mov
fadd
mov
mov
dec
and
lods
js
out
mov
xor
jae
and
cmp
icebp
mov
add
jb
psubd
sub
ss
repnz
lret
sbb
jp
or
gs
pop
push
adc
add
mov
dec
push
xor
push
mov
stos
pusha
xchg
push
mov
pop
out
mov
aas
add
pop
hlt
adcl
pop
cs
mov
das
test
pop
mov
sti
mov
jnp
mov
cs
clc
ret
sub
or
xchg
dec
fnstcw
add
in
mov
xchg
rol
mov
adc
fcmovu
cmp
xchg
roll
xor
sub
loope
loope
cli
mov
jbe
test
xor
ja
sub
mov
sub
stos
xor
xor
fcoms
shlb
iret
xchg
jge
dec
int3
mov
pop
mov
dec
push
mov
test
stc
pop
fcmovne
loop
loop
sti
mov
sub
ds
or
aam
call
loop
shr
push
addr16
out
dec
pop
sbb
enter
pop
push
addl
cmpsl
int
andl
dec
sbb
sbb
hlt
xchg
and
es
xor
fnstsw
leave
pop
fisttpll
mov
popa
push
outsl
outsl
out
sub
bound
push
movsb
xor
divl
lcall
insl
loop
daa
rcr
and
dec
jp
add
daa
mov
loope
fadd
mov
and
jle
xor
mov
inc
inc
pop
aas
mov
out
pushf
dec
add
lods
sub
test
push
push
mov
lret
addr16
xchg
das
bound
xchg
cmp
lret
and
data16
imul
rcrl
pop
sbb
fisttpll
dec
cmpsb
cmp
dec
psubw
push
loopne
inc
and
sbb
hlt
sahf
repnz
mov
minps
add
lea
pop
dec
std
mov
nop
xchg
mov
iret
inc
mov
roll
xor
fnstsw
pusha
push
push
mov
cmp
and
movsl
mov
lahf
je
mov
or
bound
pop
lods
dec
popf
sbbl
cmp
mov
lcall
orl
rclb
adcl
cltd
pop
out
xchg
mov
or
xchg
fwait
xor
adc
inc
jmp
stos
sahf
mul
jp
sub
cmp
movsl
inc
mov
push
in
daa
sbb
fs
cmp
inc
cmpsl
pop
fimuls
cmp
enter
repz
mov
jmp
arpl
push
add
ja
sti
inc
lcall
idiv
mov
pop
pop
fbstp
xchg
adc
cld
pop
xor
mov
xchg
cmovne
ret
dec
out
in
sbbb
sti
andb
or
in
js
shll
adc
push
mov
movsl
insb
out
lahf
xchg
insl
repz
test
orl
jmp
testb
lock
leave
aaa
xor
pop
lock
or
incb
inc
and
test
repnz
bound
pop
jmp
data16
call
dec
lahf
rorl
push
enter
lahf
xchg
mov
fucomip
and
cmp
scas
add
faddl
sbb
sub
scas
faddp
cmp
jp
pop
adc
inc
or
dec
fiadds
in
sbb
movsb
xchg
xchg
adc
dec
add
aas
cltd
rcrl
or
xchg
popa
mov
jg
fwait
fwait
xor
sahf
jp
jmp
pop
movsl
pushf
ret
nop
add
cmp
mov
mov
mov
repz
aam
mov
mov
lahf
int
ss
push
enter
xor
into
scas
fcmove
push
test
loope
addps
fidivrs
andb
or
inc
push
cld
int
dec
incb
xchg
movsl
or
xor
or
sbb
shl
shlb
mov
inc
sub
push
lret
shr
inc
lret
add
in
xchg
roll
lds
stc
into
mov
shrl
xchg
std
xchg
jnp
dec
xchg
mov
iret
adc
std
add
pop
inc
cmp
mov
repz
int3
into
aaa
sbb
out
mov
add
dec
cmp
scas
push
cmpsb
adc
xchg
inc
cwtl
mov
xlat
push
push
fmull
lods
cs
imul
pusha
or
daa
jg
cmp
sbb
aam
mov
add
add
imul
mov
in
push
xlat
stos
and
push
cmc
pushf
pop
inc
push
cmp
mov
sub
sbb
outsl
ljmp
or
insb
push
insl
adc
lret
push
or
mov
dec
lret
dec
push
and
add
out
mov
pop
daa
cmpsl
add
lret
int
stos
test
pusha
or
testl
loopne
or
jb
sbb
or
pop
stc
fidivrl
test
test
mov
not
lea
cmp
sub
xorl
shrl
push
cmpsb
in
insb
or
test
in
into
mov
addb
push
xor
pop
push
out
push
mov
rorb
inc
xchg
or
movsl
ret
cmp
and
movsb
mov
testl
cmp
movsl
adc
repnz
iret
lcall
sub
pop
mov
pop
ljmp
push
add
inc
mov
push
filds
mov
in
inc
pop
rclb
mov
and
int
clc
and
inc
in
mov
int
jle
fstl
fptan
and
js
mov
inc
popa
or
or
jno
jle
sahf
aaa
mov
pop
insb
and
or
ret
xor
les
push
sbb
iret
clc
xchg
popa
inc
mov
add
mov
mov
push
jl
mov
in
xor
out
xchg
popa
push
arpl
test
out
mov
push
xor
push
repz
mov
fiadds
jnp
mov
push
pop
push
call
mov
jbe
int
jge
xor
lock
ds
xchg
mov
in
and
cld
fadd
les
or
std
dec
cmc
jle
xchg
pusha
pop
bound
mov
gs
into
and
iret
pop
xchg
in
dec
pop
pop
outsb
push
mov
call
mov
xchg
mov
addr16
or
and
jl
jg
daa
cld
and
shlb
or
pop
jp
dec
addl
cwtl
lods
or
flds
pop
dec
pop
pmaddwd
movsb
pusha
fs
rolb
pop
push
nop
aad
dec
dec
cmpsb
xor
cwtl
xchg
daa
push
dec
test
aaa
in
rol
adc
in
xchg
adc
xchg
test
mov
mov
xlat
mov
push
pop
js
dec
daa
xor
outsl
add
cmp
mov
inc
loop
ds
aam
cs
into
lahf
outsl
testl
dec
sbb
xchg
fcmovbe
int
push
xor
test
push
jne
pop
frstor
jge
xor
xchg
in
out
or
fs
xor
pop
sbb
jbe
push
shlb
pushl
xchg
fisttpl
push
and
aad
sbb
lea
clc
rcll
jne
xlat
jne
fists
adc
jo
mov
pop
cmp
outsb
sbb
lret
sbb
rorb
cmp
movsl
ss
out
inc
in
push
mov
insl
out
lods
pop
frstor
pop
inc
inc
dec
mov
mov
cmp
mov
dec
jb
or
test
adc
jl
lcall
mov
and
mov
mov
stos
mov
inc
into
fisttpl
ret
stos
xlat
inc
fcmovnbe
xchg
xlat
repnz
bound
xchg
pop
rcrb
xchg
leave
ja
sub
fstpt
outsl
lods
stc
xchg
sub
jb
xchg
int3
iret
add
inc
outsl
arpl
adc
arpl
out
or
or
out
in
fdivr
xor
or
mov
push
out
xchg
mov
les
and
fcomp
iret
mov
mov
jg
sti
addl
loopne
aam
sahf
sub
addr16
fstpl
inc
jns
pop
xor
dec
push
add
cli
adc
cmc
xchg
mov
stos
popa
ss
into
pop
stc
cmp
jbe
and
mov
inc
adc
enter
sbb
andl
push
or
shrl
loope
fldl2e
cmpsl
loop
pop
mov
mov
test
lahf
mov
add
adc
jbe
in
test
ljmp
adc
divl
negl
into
pop
push
lds
and
jmp
jno
movsl
mov
xchg
lods
pushf
aad
sbb
add
and
dec
xor
je
inc
jne
push
xchg
ret
fwait
mov
inc
mov
out
leave
sub
ficoms
jp
sub
inc
cmp
push
icebp
cmp
scas
add
loope
or
roll
mov
jnp
jmp
sub
bound
notb
dec
in
ja
and
lea
out
cmp
imul
movsb
xchg
sub
add
fcmovnu
adc
pop
iret
or
imul
outsl
fdiv
push
mov
sbb
xor
cltd
add
in
xchg
push
dec
aaa
ret
pop
nop
xor
out
sbb
lds
psubusw
sbb
je
lods
loopne
push
pusha
add
scas
and
daa
call
sbb
xor
fdivl
jo
in
add
loop
je
ljmp
inc
jmp
cwtl
repnz
inc
and
sti
mov
and
and
test
mov
xor
jg
clc
loope
push
dec
and
aad
dec
ja
nop
mov
dec
stos
add
mov
lret
mov
pop
inc
jp
loope
cltd
imul
out
inc
fstpl
mov
push
dec
fs
mov
jns
inc
jmp
fwait
push
fld
lahf
mov
cmp
and
lea
mov
or
sub
mov
sub
rolb
lret
fbstp
pop
test
mov
xor
dec
shl
push
jbe
inc
pop
cs
ds
lahf
and
fs
sbb
jb
fstl
add
pop
insl
in
adc
lock
aas
fimuls
sub
inc
insb
push
in
es
lret
inc
push
mov
out
leave
adc
inc
cmp
or
movups
sti
addb
int
mov
scas
and
mov
outsl
sarl
in
add
jecxz
mov
cmp
inc
or
shll
pusha
push
in
push
mov
mov
iret
adc
dec
imul
mov
xor
pop
or
mov
lods
icebp
mov
pushf
stos
sub
mov
aas
sahf
add
add
iret
outsl
call
mov
xchg
movsb
jns
sub
insb
pop
sub
fldenv
das
icebp
pop
jp
repz
icebp
out
dec
xchg
and
popf
or
je
jge
stc
fbld
int3
int
dec
sub
xor
jno
pop
cmp
adc
pop
push
xor
imul
int
push
mov
out
fs
stc
mov
test
ja
pop
xchg
mov
pusha
rcll
sub
jne
mov
cmpxchg
addl
or
les
aas
mov
in
in
mov
jp
adc
add
mov
loopne
ds
mov
icebp
sub
mov
cmp
aaa
inc
insb
inc
scas
cmp
insl
sbb
data16
sub
mov
mov
mov
enter
and
lahf
xchg
xchg
dec
mov
xor
sub
pop
mov
mov
add
lret
inc
sub
xchg
xor
fcompl
xchg
dec
mov
movsl
inc
lcall
push
cmc
scas
or
lret
dec
dec
add
xlat
xor
xchg
into
iret
xchg
imul
mov
stos
jnp
enter
mov
test
push
mov
cmc
mov
std
test
xor
xchg
out
mov
aaa
xor
repz
lahf
lret
mov
popf
push
sbb
mov
repz
iret
sbb
shll
inc
loopne
cmpsl
pop
test
stos
jmp
dec
lret
int
jne
xor
aaa
js
repnz
dec
mov
sbb
mov
es
movsl
add
bound
dec
xchg
scas
fldcw
mov
mov
xor
jp
pop
xchg
int3
movsl
sbb
bound
sub
popa
outsl
es
fs
sti
xchg
jl
adc
mov
decl
inc
dec
mov
and
pop
mov
jp
xchg
icebp
mov
cli
sahf
mov
in
xor
repnz
nop
das
jl
mov
and
jbe
setnp
jns
xchg
jne
repnz
cwtl
push
cli
out
xchg
es
dec
icebp
fisubl
rcrl
insl
or
sbb
push
int
test
pop
movsl
bound
aam
jmp
pop
push
imul
cli
sub
cmp
xchg
mov
mov
mov
rcl
push
int3
adc
daa
sub
sub
loope
sti
and
xor
xorl
call
popa
lcall
sbb
jecxz
xor
xor
inc
in
mov
pop
sub
lea
and
ss
sbb
sbb
in
sbb
and
testb
fnsave
push
sub
pusha
push
lcall
adc
out
mov
jns
in
sbb
xchg
add
dec
scas
push
jne
mov
push
int
jmp
cmpb
push
pop
push
pop
mulb
dec
insb
mov
add
xchg
mov
pop
call
or
jge
jno
imul
notl
jae
inc
shlb
push
ds
movsl
and
mov
shld
push
xchg
dec
fnsave
pop
pop
cli
pop
xor
pusha
je
cwtl
aas
test
iret
pop
push
sub
or
xchg
and
clc
mov
xchg
adc
mov
test
data16
pop
xchg
adc
imul
pop
mov
xor
in
sbb
repnz
cmp
mov
gs
fmull
aad
mov
pop
icebp
jmp
jno
std
mov
repnz
push
cmp
out
and
cmp
add
es
sub
int3
adc
shr
sub
jb
xor
shrb
inc
inc
add
push
imul
mov
test
test
shlb
movsl
push
icebp
fidivs
lods
xchg
popl
lret
add
mov
clc
pop
ret
repnz
mov
movsb
pop
in
pop
mov
mov
adc
dec
jnp
sbb
aad
inc
push
leave
in
mov
rol
mov
xchg
repz
lods
pop
cld
fcmovbe
lahf
or
shrb
dec
mov
pop
scas
outsl
inc
push
push
push
into
push
repnz
sbb
out
aam
out
subl
jb
cwtl
stc
pop
add
enter
adc
pop
add
popf
test
clc
xchg
cwtl
adc
xor
jp
mov
rcrl
movsl
shll
push
lock
pushf
cs
xchg
mov
loopne,pn
dec
mov
rolb
jle
repnz
shll
xor
scas
out
insl
mov
push
fcoms
scas
sbb
sbb
bound
cwtl
mov
sub
mov
imul
inc
data16
fistps
test
pop
push
shl
lret
pushl
int
dec
push
mov
clc
je
pop
mov
dec
push
cmp
push
sub
ds
or
or
push
aaa
dec
dec
push
rcrb
inc
loope
xchg
sbb
sub
or
out
imul
ret
push
or
leave
mov
dec
mov
jno
fisttpll
add
push
mov
shrl
sti
pusha
push
sub
adc
push
shlb
sbb
cmp
fimull
mov
adcl
out
pop
jnp
cmp
mov
lahf
cmp
lock
shr
fs
jecxz
mov
lea
push
outsl
dec
mov
pop
lods
mov
ret
mov
int3
sub
mov
adc
mov
or
or
movsl
jo
rcl
cmpsb
jne
xchg
adc
lods
inc
dec
in
es
jae
jbe
push
popa
xchg
mov
jg
popa
repnz
mov
mov
mov
fsubp
jmp
divl
xchg
rorb
and
dec
cmp
pop
pop
stc
jp
xchg
adc
mov
sub
pop
sbb
adc
jecxz
shrl
std
and
test
mov
cld
fisubl
bound
sbb
or
mov
ret
scas
adc
cmp
jp
es
dec
and
pop
mov
mov
cmp
fiadds
add
mov
pop
int
mov
mov
lret
pop
xchg
xchg
xchg
cmp
xchg
dec
jb
out
cmp
and
dec
fwait
icebp
push
cmp
rclb
insl
jecxz
mov
aaa
mov
movsb
imul
mov
sub
insb
xlat
shll
inc
sbbl
cmpsl
push
push
xchg
mov
jmp
loope
movhlps
cwtl
loopne
ds
ds
lret
mov
fs
push
mov
push
into
mov
add
adc
fistps
dec
mov
cmp
fidivl
loope
xchg
into
sub
adc
jae
mov
into
mov
jl
je
int3
aam
lret
push
and
std
mov
testl
les
stos
stos
add
insb
aad
rclb
xchg
lcall
inc
mov
xlat
xchg
or
cmp
mov
jmp
xor
loopne
jp
jg
into
inc
ret
stc
dec
cld
xchg
int
push
mov
bound
pop
jne
mov
cwtl
enter
idivl
data16
loopne
mov
out
sti
fdivrp
fisubrl
inc
xor
adc
mov
or
loop
dec
test
add
jns
mov
xor
cmp
or
xchg
insb
sbb
scas
ja
lret
dec
jb
push
pushf
xlat
mov
cwtl
scas
bound
outsb
and
ror
fsts
mov
jae
xchg
xchg
faddl
dec
scas
test
loopne
cmp
pop
es
addr16
out
or
jbe
or
or
fnstcw
test
insb
cmc
add
out
or
mov
mov
inc
add
or
push
push
pusha
sub
addr16
jne
mov
lods
out
push
mov
ljmp
ja
inc
cmp
push
push
pop
add
adc
das
pop
inc
xchg
cmp
xchg
xchg
enter
mov
mulb
sub
outsb
mov
cmp
pop
mov
lret
rorl
xor
cli
or
in
pop
aas
sbb
mov
cmpsl
pop
pop
push
xor
fcmovu
ljmp
mov
cmp
jge
fwait
aam
dec
mov
add
call
inc
xchg
sbb
scas
jp
adc
or
insb
stos
jnp
mov
outsb
cmp
gs
push
cmp
push
out
inc
push
push
sahf
nop
mov
lods
lea
mov
sub
jg
cwtl
sbb
cmp
mov
je
pop
mov
lret
xor
push
push
mov
aam
cltd
cmp
stos
jmp
xchg
out
pop
push
and
mov
adc
testb
call
pop
sbb
ja
mov
sbb
cmp
or
ljmp
pop
jle
pop
lret
and
pop
lods
nop
pop
sahf
xchg
mov
inc
jg
dec
pop
cmpsb
sub
jae
push
fildl
cwtl
inc
cmpsl
adc
lods
jb
rorb
pop
inc
dec
pushf
cmpsl
mov
lea
out
pop
mov
mov
xchg
or
fcomp
faddp
shlb
sti
adc
stc
cmpsl
push
pushf
xor
add
and
jb
mov
sbb
jae
dec
aam
mov
aaa
dec
in
mov
cmp
xor
mov
inc
in
sbb
divb
lods
jne
sub
rcll
nop
mov
mov
cmp
mov
mov
xor
lea
gs
push
aam
xchg
mov
in
loopne
out
or
dec
je
mov
sarl
addr16
enter
xchg
ljmp
loope
sti
std
and
rorl
sarl
cmp
mov
or
repnz
add
and
pusha
inc
imull
ret
mov
lods
out
lock
mov
add
jno
leave
es
ja
addr16
out
daa
add
pop
jl
scas
lcall
callw
inc
push
xor
jns
aas
fsub
fdivrs
and
ret
fistl
fsub
mov
xchg
push
mov
outsb
pop
je
jne
mov
inc
xchg
push
addr16
pushf
and
ss
mov
inc
insb
mov
rorl
dec
sub
mov
pop
fistl
lea
sub
push
pusha
and
daa
push
test
jmp
cmp
ret
daa
dec
lahf
imul
movsl
clc
inc
enter
stos
xor
aas
fimull
add
push
call
cs
mov
pop
adc
arpl
push
adc
add
repz
popa
out
dec
and
js
xor
mov
push
cwtl
fistpl
sahf
push
dec
and
push
lods
jge
gs
repnz
addb
clc
lods
push
loop
push
xchg
test
iret
lret
adc
inc
clc
shrl
je
lret
cmp
or
sar
xor
out
js
nop
cli
inc
nop
aad
jge
and
das
mov
sub
mov
add
xor
lds
fstpl
outsb
mov
fdivl
mov
lret
jne
imul
push
call
iret
or
xorb
mov
pop
and
and
adc
mov
add
and
outsb
mov
out
nop
cld
jmp
imul
xor
int
fldcw
and
mov
imul
inc
lock
xchg
insl
push
and
das
test
cmp
mov
pop
pop
dec
out
in
xor
pop
fs
adc
jp
repz
popa
jae
arpl
mov
ret
fwait
pop
cmpsw
mov
in
ficompl
lret
mov
loope
movsl
push
push
loop
sbb
push
push
pop
and
xor
aad
call
dec
add
or
jae
cmc
dec
scas
xorl
cmp
xchg
mov
xchg
lods
in
add
sbb
mov
adc
inc
mov
fs
ja
push
fwait
subb
and
add
cs
pop
inc
les
subb
add
les
sub
mov
push
xchg
pushf
cmp
cmp
sbb
or
xor
ds
fsubr
dec
xchg
and
test
pop
add
xchg
sar
xchg
and
call
jl
sbb
test
xor
icebp
fstpt
add
xchg
jo
imulb
pusha
std
cmpsb
fnstsw
xchg
test
in
sti
and
js
pushf
int3
push
in
add
lods
jnp
lcall
es
ljmp
icebp
iret
and
jae
inc
repz
and
mov
jnp
hlt
pusha
push
push
push
sub
stos
sarl
jmp
je
scas
lret
or
call
fbld
lret
ror
push
mov
inc
dec
xchg
repz
ljmp
mov
mov
fwait
dec
mov
insl
dec
inc
jae
mov
lods
lea
push
mov
jl
add
jl
sbb
loop
clc
jg
loope
cmp
aaa
mov
add
fnstcw
mov
ret
dec
iret
xor
jge
in
and
pop
pop
sub
movsl
lret
sahf
cmc
pop
aad
outsb
aas
adc
adc
and
lahf
flds
jno
adc
push
insl
ret
int
inc
add
mov
stos
call
pushf
inc
jb
lods
mov
movsl
push
psadbw
xchg
pop
outsl
mull
jge
sbbb
pop
pop
and
push
mov
sub
int3
arpl
dec
loopne
sub
scas
test
pop
xor
inc
out
cmp
inc
mov
fs
addb
in
js
cmp
popf
inc
movsl
adc
pop
add
jl
lock
xchg
xchg
fmuls
xchg
jbe
cmp
push
sbbb
nop
jns
mov
aas
icebp
dec
mov
ja
cmp
xor
fs
scas
xchg
aaa
clc
pop
les
push
testb
stos
cmpsl
les
add
stc
mov
test
popl
cmp
add
in
dec
sbb
in
sub
mov
testl
enter
push
pop
sahf
jge
pusha
out
adc
cmc
xchg
lock
xchg
mov
pop
pop
adc
mov
insl
dec
cmp
dec
lahf
dec
insl
push
outsb
sahf
push
add
sbb
mov
mov
sbb
mov
mov
sub
cmp
in
pop
stos
adc
push
add
outsb
jg
push
cmp
mov
cwtl
mov
nop
inc
or
mov
addl
lcall
pop
dec
pop
insl
pop
decb
mov
inc
shrb
outsl
fisubrl
imul
out
in
cmc
xor
stos
test
and
add
pushf
add
out
jnp
addb
es
push
xchg
or
add
inc
popa
push
pop
mov
xchg
or
fcompl
dec
add
sbb
add
xchg
pop
sub
mov
or
enter
mov
fwait
push
jecxz
inc
xor
scas
cld
cwtl
cld
gs
lds
aam
jg
dec
xor
cmp
sub
loopne
or
lret
jl
xchg
outsb
push
mov
or
xorb
push
xor
mov
inc
js
xor
mov
cltd
stos
jo
stos
sub
inc
rcr
cmp
pop
lods
add
cmp
bound
mov
in
add
sbb
aad
aam
fiadds
add
and
in
fld
fmull
outsb
xchg
fidivs
xchg
andb
clc
jns
xchg
sbb
popa
jg
cli
leave
icebp
in
call
adc
popa
fdivp
sbb
cmp
jae
dec
ljmp
sahf
sbb
cmp
dec
lods
mov
ja
fnstcw
adc
mov
rcl
adc
dec
stos
and
or
inc
leave
jns
add
and
inc
js
imul
pop
xor
or
push
mov
fistps
adc
cmp
jno
jbe
incb
push
out
fwait
sbb
lods
incb
push
jns
sbb
popf
sbb
lahf
inc
vmovups
dec
lods
add
call
nop
add
adc
pushf
pop
xchg
push
mov
jmp
and
rorl
stos
cmp
cld
int3
fwait
mov
ret
ds
xchg
or
out
xchg
stc
fstps
pop
in
scas
jg
push
pop
test
fstl
adc
cmpsb
adc
fs
int
push
scas
sbb
jno
pusha
sub
and
or
pop
neg
push
mov
push
push
push
mov
jl
jmp
inc
or
not
pop
aam
push
stos
push
out
out
mov
push
daa
dec
and
shl
push
outsb
pop
dec
mov
adc
aas
xor
fnstenv
inc
jne
push
push
fwait
sub
test
adc
mov
dec
pusha
and
mov
mov
fcoms
pusha
and
mov
fcmovnu
test
cmpsl
inc
je
aam
push
xchg
dec
mov
inc
test
call
insl
mov
pop
cwtl
outsb
pop
nop
pop
pop
fildl
fxch
cmp
test
out
xchg
xor
xchg
in
push
xor
jecxz
dec
mov
pop
mov
rcl
mov
cmpsl
in
ljmp
subl
push
lods
incb
lods
mov
mov
and
imul
dec
xor
or
inc
fimull
jp
mov
addb
jp
and
nop
pop
adc
ljmp
push
test
jmp
adcl
ja
sbb
or
mov
or
and
jbe
rcr
mov
dec
mov
pop
repz
adc
lock
jg
dec
mov
std
xchg
test
or
pusha
push
sub
fdivrl
sbb
jge
scas
mov
pop
xorl
les
std
int3
cld
xlat
insb
mov
pop
mov
lcall
iret
hlt
mov
movsb
mov
add
push
loop
push
cmp
lock
lods
cmp
mov
movsb
stos
daa
outsl
ret
cltd
or
in
into
in
adc
pop
std
cli
adc
repz
mov
addr16
mov
cs
es
ds
outsb
sub
stc
pop
jnp
gs
fs
dec
push
mov
ret
shl
inc
mov
cmpsl
pusha
sarb
mov
sub
in
fwait
and
test
push
sahf
shrb
jbe
test
xchg
nop
das
dec
movsl
in
push
dec
scas
jecxz
repz
and
jno
add
push
and
xchg
cmp
fisubrl
pop
pop
inc
fstpt
daa
aam
sbb
sub
jp
dec
and
sbb
fnsave
and
mov
xlat
jecxz
mov
popf
sub
and
adc
xchg
rcrb
sub
leave
jecxz
std
nop
push
repz
sub
dec
push
insb
das
in
sbb
or
add
ja
out
daa
stos
dec
xor
or
ss
repz
bnd
jnp
mov
pop
out
shrb
jae
add
xchg
je
sub
insl
dec
add
dec
sub
sub
in
in
cmp
inc
fisttps
mov
xor
cwtl
in
mov
or
mov
pop
insb
pop
mov
leave
daa
and
mov
in
adc
imul
cmp
push
mov
or
test
cld
stos
addps
lea
and
or
insb
pop
xchg
jmp
lret
xor
xor
idiv
and
add
insb
dec
in
cld
sub
jmp
add
push
xchg
cli
xchg
iret
sti
fwait
adc
and
push
out
xchg
jb
add
lret
cmp
cmpsl
std
rorb
sbb
cmpsl
cmp
nop
sbb
mov
aaa
dec
loopne
mov
insb
shll
cmp
lahf
sbb
or
imul
imul
aaa
out
scas
repz
int
xchg
adc
mov
or
cmpsb
sub
cs
popf
cltd
loopne
sti
into
test
push
into
test
mov
pop
sysenter
sbb
loop
sub
call
push
movsl
pop
jae
fists
sbb
sub
xchg
lahf
addr16
jecxz
into
loopne
xor
pop
mov
fnop
cli
scas
testb
mov
mov
test
pop
rcrb
and
mov
cmpsl
inc
xor
push
and
nop
enter
dec
movsb
scas
push
mov
mov
mov
fisubrl
sbbb
sub
mov
lea
xchg
push
addr16
mov
outsb
in
popf
inc
mov
sub
int3
imul
push
mov
jecxz
lods
pop
pop
ds
xor
pop
mov
fwait
inc
ficomps
in
jl
add
into
pop
mov
in
rorb
clc
out
cltd
sub
lahf
cmp
and
ds
orb
or
jne
push
inc
mov
js
mov
cmp
mov
mov
pop
aas
dec
lcall
lods
cmp
int3
mov
push
popa
lahf
fdiv
and
cmpl
push
add
les
xlat
mov
aas
ret
inc
dec
push
call
das
or
daa
sarl
scas
hlt
lret
and
xchg
insb
xor
adc
fwait
mov
pop
xchg
ja
pop
add
mov
repz
mov
jne
push
adc
ss
or
je
dec
out
sbb
fildl
dec
mov
cltd
sarl
inc
cwtl
out
lea
sarl
xchg
mov
mov
ret
jg
pop
xor
pop
popa
aam
inc
cwtl
jo
insl
inc
sar
cmc
mov
jg
repz
push
loopne
cmp
xchg
sub
xchg
rcll
sbb
rcrl
fcompl
out
in
mov
push
and
out
frstor
sbb
in
cmpsb
es
cmpsl
xchg
loope
or
roll
push
sar
and
mov
mov
ret
insb
or
xor
push
mov
enter
cmp
pop
fidivrs
int
pop
out
mov
rorb
jle
enter
outsb
push
xor
mov
aas
ds
test
enter
cltd
dec
mov
mull
js
iret
lock
pop
sub
and
shll
xchg
adc
inc
stos
cmc
in
bound
inc
mov
mov
xchg
test
xchg
cmp
add
or
push
lds
xchg
jge
xchg
pop
mov
pop
shrl
fidivrl
call
sbb
mov
mov
cmp
xlat
aam
xor
loop
or
jo
into
pop
aad
js
and
mov
add
clc
mov
mov
xor
stc
pop
sbb
aam
jns
enter
sub
push
and
dec
fbstp
pop
push
aas
or
fs
insl
sbb
int
push
inc
mov
in
xor
mov
out
dec
xchg
mov
sub
enter
add
mov
imul
mov
pop
movsl
xor
jg
jno
mov
sub
dec
test
mov
loopne
pop
scas
mov
mov
ljmp
push
movsb
cmp
sbb
push
aaa
jnp
test
cmp
in
jb
mov
sahf
sub
jns
iret
xadd
rcl
inc
negb
je
aaa
hlt
jmp
insl
mov
out
push
sbb
cmp
mov
jl
into
xchg
sbb
loop
push
fwait
mov
data16
jae
or
mov
dec
lret
inc
loope
jnp
lret
mov
push
fiaddl
and
jae
mov
adc
movsb
shlb
aad
int3
daa
jo
or
imul
fst
in
and
dec
scas
mov
sbb
cld
add
lret
add
sub
or
addr16
jns
or
imul
sub
mov
sub
lret
aas
xlat
jne
imul
push
punpckldq
push
leave
das
and
insb
add
aaa
xor
jge
loope
fidivrl
ret
inc
clc
hlt
popa
lods
sahf
push
pop
fstps
lock
and
pushf
in
into
loopne
mov
mov
es
sub
stos
cmpsb
mov
jnp
inc
and
out
fsubr
inc
inc
adc
or
jo
out
mov
arpl
mov
test
data16
mov
cltd
jge
mov
lods
fidivs
xchg
pop
scas
xchg
lahf
cmp
hlt
ss
insb
jp
rolb
cmc
push
stc
sbb
fidivs
sti
and
push
lds
and
xorb
test
push
loop
pop
fdivrs
fxch
mov
or
dec
mov
nop
pop
xlat
push
lret
fwait
xor
aaa
fstps
cmpsb
outsb
push
mov
mov
and
adc
stos
scas
xchg
cli
sub
and
mov
xchg
add
cltd
adc
jb
out
maskmovq
negl
or
fisubl
fmull
ss
adc
lock
int
cmpsl
jmp
mov
repz
xchg
lahf
cmp
icebp
hlt
adc
xor
out
xchg
jb
lcall
xchg
gs
sbb
dec
shlb
inc
sub
fimull
int
adc
cmp
decl
xchg
faddl
pop
test
or
cmpsb
and
lcall
push
fucomp
fwait
jnp
push
shlb
scas
icebp
inc
or
inc
les
jae
popf
jne
mov
and
sbb
enter
rcrb
je
mov
test
in
mov
scas
push
mov
mov
push
pop
xor
repnz
xchg
in
call
mov
fwait
lea
mov
push
mov
mov
push
jae
adc
mov
jbe
nop
cmp
fcmove
loopne
push
mov
mov
int
stos
mov
cmpsb
test
xchg
divl
mov
jl
test
or
negb
cmp
xchg
adcb
mov
sbb
imul
push
mov
aas
jl
repz
sbb
push
and
cmp
add
clc
loop
fxtract
cmpb
add
add
and
push
jno
push
imul
fstl
xchg
pushl
mov
negb
inc
xlat
pop
push
mov
imulb
sarl
xchg
and
pop
jl
xor
mov
or
sbb
iret
je
mov
cmp
das
mov
mov
and
mov
ror
cmpsb
data16
mov
sahf
std
add
xor
mov
int
push
repnz
cmpsb
icebp
pop
mov
jecxz,pn
mov
inc
mov
dec
lds
lock
mov
ficoms
std
imul
test
sbb
sahf
sub
outsb
scas
test
je
mov
cli
in
lret
xchg
sbb
lds
lods
sub
pop
fnstenv
xor
daa
pop
xchg
mov
repnz
pop
rorb
out
punpckhwd
push
cld
orl
enter
sbb
push
push
jg
fidivrs
popa
add
jbe
cmpl
in
and
hlt
ljmp
movsb
fimull
jo
ret
adc
cmc
sbb
nop
call
sub
inc
scas
xchg
sahf
inc
nop
lret
ret
jnp
dec
sbb
fwait
test
jp
cld
and
bsr
inc
ja
aas
fcomps
es
and
int
pop
ja
iret
push
push
xchg
fdivrp
arpl
adc
in
lret
sub
faddp
in
add
dec
popf
sub
neg
inc
inc
addr16
jne
mov
mov
jmp
push
xor
inc
idivl
and
cmc
aad
jg
or
pop
mov
sbb
mov
fst
insl
ret
cmp
loop
mov
mov
pushf
dec
mov
test
xorb
sub
aam
mov
mov
inc
pop
adc
bnd
mov
cli
iret
pop
popa
inc
xchg
cmpsb
lds
hlt
loopne
xchg
dec
push
sahf
pushf
mov
pop
movsb
pop
xor
outsb
cmp
jbe
hlt
jp
test
movsl
xorb
mov
pop
cmp
add
and
into
fisubl
mov
adc
mov
insb
pop
icebp
jnp
cmp
mov
add
xchg
adc
nop
mov
stos
mov
fisubrs
and
jns
cmpl
push
ss
mov
adc
in
cli
xchg
data16
dec
xor
xchg
mov
or
mov
and
ja
pop
ss
mov
adc
mov
out
mov
arpl
jnp
hlt
shl
add
add
insl
jb
push
aas
mov
push
sbbb
rcrl
das
iret
loopne
xchg
decl
mov
out
xchg
jp
lds
test
pop
outsl
fnstsw
das
jb
ljmp
add
jmp
cmp
sub
int
test
inc
mov
leave
adc
call
mov
dec
mov
bndldx
sti
pushf
sub
xlat
sub
mov
ffree
imul
inc
andl
in
mov
lods
cmc
imul
fiaddl
cmpsl
dec
and
outsb
and
fsubl
xlat
jmp
cmc
sub
movl
xchg
jne
iret
sbb
add
cs
adc
in
mov
fldt
iret
lret
adc
sti
je
and
jns
mov
gs
fiaddl
loopne
frstpm(287
fwait
add
add
ss
cmp
pop
sub
fsubrl
out
or
adc
xchg
xor
aaa
in
cmpb
push
xor
or
sub
jae
adc
fnstcw
and
xlat
add
pop
cmp
std
add
or
arpl
mov
mov
ds
mov
jle
mov
inc
rolb
inc
icebp
femms
push
push
or
mov
jecxz
gs
jne
notb
adc
push
dec
rorl
shr
or
add
ljmp
fst
cli
or
nop
sahf
and
or
aas
lret
loope
sbb
xor
test
xchg
lret
test
mov
cmp
push
lret
jecxz
dec
in
popf
mov
or
lcall
cmpsl
cs
jbe
mov
pop
insb
popf
jnp
adc
dec
daa
lods
fs
packuswb
shll
jmp
sub
mov
fimuls
int
ljmp
or
popf
ficoml
mov
sbb
insl
xor
out
push
es
xchg
sbb
icebp
fdivl
enter
mov
aaa
add
daa
cmp
push
dec
cmp
mov
les
jg
mov
pop
inc
xchg
push
or
ja
jecxz
xchg
nop
mov
fdivl
lods
jno
nop
or
scas
jb
add
sbb
pop
out
std
iret
addl
mov
mov
cwtl
cmc
std
sub
imul
mov
aaa
ret
cwtl
mov
xlat
out
inc
pop
cltd
call
dec
arpl
and
jecxz
pushf
mov
aam
xor
repz
pop
test
lahf
ss
xor
push
pop
cli
or
test
pop
jb
cmc
adc
test
jbe
mov
das
sbb
xchg
xor
xchg
xor
xchg
ret
cmp
test
lret
scas
mov
lds
ffree
data16
pop
adc
cmpsb
orb
sub
loopne
rolb
stc
scas
cmp
or
mov
out
add
sbb
pushf
imul
and
mov
testl
adc
addr16
int
lods
jge
out
ja
repnz
div
fcoml
arpl
xor
push
inc
pop
arpl
mov
mov
and
outsb
push
xor
push
push
jo
inc
add
dec
inc
in
cmp
ss
imul
add
pusha
sbb
mov
mov
jecxz
jae
mov
out
pusha
xor
xchg
in
and
cmp
cmp
dec
jmp
adc
test
ds
jbe
lock
lock
das
or
dec
dec
dec
movsb
mov
xor
shlb
mov
into
loop
in
cmp
cmp
or
lods
mov
and
out
inc
mov
femms
test
push
ljmp
std
mov
push
xor
cwtl
pop
outsl
pop
cmpb
repz
fs
clc
jae
or
es
mov
add
push
add
push
mov
inc
sahf
adc
xor
in
push
push
push
xchg
in
xor
mov
mov
mov
mov
sbb
and
or
es
or
mov
jge
dec
movsl
mov
xor
sbb
nop
mov
or
out
push
adc
sahf
shrl
nop
adc
out
mov
inc
pop
inc
popa
insb
stos
pop
out
cmp
aaa
jne
sub
gs
mov
inc
mov
pop
or
ljmp
movsl
sub
mov
imul
mov
lahf
jmp
mov
nop
dec
subl
pop
or
mov
lea
sub
enter
sub
fstl
dec
movsl
pop
jnp
ja
and
add
ret
cmp
sub
je
push
mov
fcomps
lea
pushf
jb
cmc
repnz
int
aad
sub
lods
fwait
mov
and
cmp
pop
iret
repz
cmp
inc
sbb
inc
xorb
int3
das
dec
xor
mov
into
iret
xchg
add
fnstsw
test
stos
adc
ss
outsb
lahf
or
jp
lock
lcall
lcall
jno
mov
mov
pop
dec
mov
mov
lahf
test
add
pmuludq
imul
cld
call
add
leave
or
in
adc
scas
out
pushf
xor
pop
mov
mov
aad
adc
fcomip
adc
xchg
pop
push
popa
push
dec
inc
adc
or
adc
or
fldenv
xchg
insb
mov
rcrb
mov
movsl
mov
lods
jae
sub
cmpsl
or
cmp
push
add
data16
inc
inc
outsb
in
pop
mov
push
mov
pop
pusha
lret
cltd
and
pop
sub
pop
sbb
aad
in
call
fcompl
xchg
adc
sub
and
ret
cmp
jp
mov
add
ficompl
lcall
adc
sub
xchg
popl
push
sub
mov
std
xlat
push
ja
out
mov
movsl
sbb
inc
xchg
pushf
out
mov
cltd
jmp
popf
and
mov
outsb
mov
lock
fimull
mov
push
push
pop
mov
insl
push
movsl
addr16
push
cld
cmc
pop
cmp
pop
jnp
outsl
and
add
adc
in
popf
inc
enter
ljmp
inc
push
push
aaa
imul
jne
jmp
push
jmp
adc
int
test
xchg
loopne
mov
sub
push
sub
push
mov
mov
inc
lods
test
movsb
adc
fdivrl
add
jb
cli
repz
add
or
or
jge
mov
mov
test
sub
push
loope
sarl
xchg
pushf
lock
xchg
mov
mov
rcll
jne
xchg
sub
js
cmp
in
dec
xchg
idivl
and
xor
jge
cmp
pop
push
cmpsb
xchg
pop
sbbl
stc
mov
in
orb
and
out
in
mov
pop
enter
in
stc
scas
mov
mov
jnp
rorl
fwait
ja
push
xchg
aad
adc
fs
push
push
sti
stos
cmpsl
repz
mov
test
dec
jae
fs
into
lea
adc
dec
out
imul
insl
test
adc
icebp
push
inc
leave
int3
pop
jge
or
mov
cli
ret
xor
and
cmp
cmpsb
mov
ds
pop
mov
sbb
mov
push
scas
lcall
and
add
inc
inc
mov
push
fdivrl
xchg
jge
dec
sti
inc
jnp
in
cmpsb
sti
dec
push
xor
repnz
lret
daa
pop
jo
sub
jp
adc
sub
outsl
pop
outsb
pop
std
or
lahf
pop
jg
loope
jge
cmp
ds
xor
mov
addr16
test
jl
icebp
jg
lods
test
insb
jle
aas
movb
cwtl
lret
lock
enter
xor
mov
test
rol
popf
adc
jnp
test
xlat
jns
dec
aam
out
loope
ljmp
mov
mov
jmp
dec
daa
sub
or
daa
and
int3
mov
test
xchg
inc
fsub
popa
inc
and
loop
push
or
pop
inc
sub
adc
or
aam
pusha
mov
es
pop
cmp
and
sub
insl
cmpsl
sahf
les
mov
add
sub
inc
sub
mov
stos
fdivr
mov
cltd
idivl
cwtl
or
out
fnstcw
cmp
lahf
ss
hlt
out
scas
in
filds
mov
dec
inc
jne
repz
filds
mov
inc
test
aad
clc
bound
cs
jno
push
push
xchg
test
addr16
lret
inc
call
and
pop
test
loop
cmc
push
insb
sbbb
mov
fwait
cmpsb
movsl
cltd
loopne
jo
and
xchg
mov
cmp
das
or
bound
sub
ffreep
dec
aaa
int
out
jnp
lcall
sbb
imul
and
xor
fldl
inc
push
push
leave
mov
mov
xor
mov
nop
lock
arpl
ljmp
test
cmp
adc
pop
dec
outsl
nop
mov
jb
jne
sbb
mov
insb
test
jb
mov
not
js
pop
push
xor
sti
cmpsb
ss
mov
cwtl
mov
pushf
sbb
sub
jecxz
pushf
fcmovne
push
aam
or
dec
fcoms
cld
pushl
test
sbb
in
fwait
test
call
iret
scas
leave
and
jne
and
push
test
add
or
xchg
not
push
add
filds
add
outsb
fs
imul
pop
push
inc
test
imul
mov
xchg
iret
ret
ret
dec
jae
inc
jmp
in
rcrl
call
aam
adc
mov
push
pushl
cmp
mov
shl
pusha
scas
icebp
cmp
jge
notb
or
xor
adc
pop
mov
mov
xchg
dec
or
stos
popa
in
add
or
push
mov
push
loopne
fadd
scas
pop
std
outsb
test
arpl
and
in
out
das
inc
fs
lods
cmp
sub
je
loope
inc
cmp
aad
das
xchg
sarl
stc
mov
mov
gs
adc
mov
rcll
adc
mov
clc
cmc
cmc
mov
iret
inc
add
rcll
outsb
xor
pusha
dec
fcoml
mov
popl
jns
iret
xchg
pop
lahf
push
das
loopne
jmp
xor
add
inc
fistl
out
inc
pop
sbb
push
ds
mov
inc
lret
xchg
mov
inc
out
out
and
jne
cld
cmp
stc
sub
adcl
push
fdivs
cmp
ret
cli
imul
lret
stos
jns
push
jg
push
enter
ja
les
ret
jb
popf
hlt
pop
jno
inc
jle
enter
mov
jb
outsl
push
jecxz
push
lods
mov
test
adc
shlb
dec
icebp
inc
mov
and
mov
out
repnz
fucomi
inc
xchg
inc
mov
push
inc
data16
test
jnp
xchg
jg
in
jno
push
pop
andb
repz
mov
imul
leave
mov
add
sbb
enter
shlb
sarb
adc
sbb
mov
out
mov
jl
jmp
push
test
jecxz
rcl
lahf
movsb
imul
mov
dec
dec
das
jg
mov
cmpsl
daa
mov
jns
push
pop
and
inc
scas
pop
sbb
fidivrs
mov
insb
push
push
pusha
xchg
inc
jecxz
faddl
call
insl
bound
and
cmc
insl
jbe
xor
push
cmpsl
std
movsl
cmp
out
or
sbb
xor
xchg
outsb
leave
imul
arpl
in
cmp
mov
movsb
aad
sub
lret
test
mov
enter
mov
xchg
lea
fucom
mov
sbb
daa
movsb
push
es
int3
adc
mov
out
sbb
in
stc
ret
mov
sub
test
mov
jecxz
xchg
lea
add
mov
out
lods
or
cmp
or
and
arpl
pop
adc
sbb
push
movsb
leave
mov
cmp
nop
mov
or
nop
mov
popa
mov
cwtl
je
adcl
add
fs
pushf
loopne
cmpsb
in
loope
frstor
test
aas
loop
hlt
cmp
xor
jmp
xor
cmp
daa
lea
sbb
ds
cltd
add
push
in
test
lcall
xchg
jae
mov
xchg
xor
cmc
cmp
cmp
jo
enter
test
mov
jecxz
mov
push
inc
nop
add
fsubr
pop
jb
loop
xchg
mov
mov
xor
jl
jae
push
out
test
imul
or
dec
mov
push
outsb
mov
push
mov
sbb
in
dec
js
xor
push
adc
xor
fistpll
loope
inc
ljmp
jp
jmp
cmpsb
inc
ret
scas
imul
in
rorl
cld
and
movsb
gs
mov
pop
and
scas
push
cmp
bound
jo
outsl
data16
repz
and
stos
pop
jmp
movsb
mov
xchg
ficompl
faddl
pushf
mov
das
movsb
push
adcl
jle
rcl
and
mov
dec
cltd
add
pop
and
xor
cld
adc
dec
mov
add
xor
repz
add
movsl
and
in
bound
mov
shr
xchg
scas
pop
sti
inc
mov
lds
pop
dec
xchg
out
shr
fimull
movsl
and
gs
adc
xor
nop
or
push
push
fsts
push
xchg
insb
inc
addb
mov
mov
jne
sbb
add
mov
mov
or
cld
mov
movsb
xor
or
pop
sbb
inc
call
daa
mov
push
lret
inc
inc
daa
les
xchg
mov
stos
hlt
add
add
or
mov
or
data16
icebp
inc
cltd
arpl
in
into
jle
add
mov
jne
push
sbb
jne
dec
add
aad
movsl
jae
wbinvd
jp
mov
insl
mov
popa
push
shlb
aaa
dec
fidivrl
out
mov
xor
xchg
cs
mull
iret
enter
or
icebp
nop
test
mov
sub
pushf
or
push
pushaw
clc
out
in
loop
jge
in
xchg
pop
or
pusha
movsb
and
and
push
lahf
movsb
lods
mov
test
pop
frstor
pop
jnp
mov
rolb
dec
or
sub
jnp
sub
jb
in
inc
mov
cld
lods
sbb
add
xorl
mov
mov
out
push
dec
sbb
xchg
or
hlt
je
mov
daa
jecxz
adc
sti
popf
aas
pop
mov
lret
push
xor
lods
inc
ror
test
je
jp
scas
lahf
cmc
cli
sub
or
fidivl
mov
adcl
popa
enter
jecxz
mov
sahf
scas
nop
sub
test
int3
pop
sbb
imul
leave
mov
repz
dec
fs
or
in
push
or
inc
ficoms
scas
adc
and
cmp
xorb
push
mov
cmp
repz
stc
or
ss
clc
wbinvd
sub
sub
mov
int
jp
lea
mov
add
inc
cmpsl
out
mov
sub
out
pop
mov
push
outsl
push
pusha
push
mov
es
dec
int3
cmp
or
dec
stos
xchg
sub
dec
shlb
push
mov
pop
je
js
icebp
ret
dec
jl
data16
xchg
enter
xchg
push
inc
jecxz
adcl
mov
or
xchg
mov
cmpb
and
push
xchg
stos
pop
mov
popf
jnp
jle
jae
inc
adc
push
std
push
cmp
lods
orl
pop
outsl
inc
push
arpl
dec
xor
shll
sbb
pop
adc
pop
cmpsl
mov
mov
sti
int
xchg
xlat
cmc
outsl
jle
mov
repz
call
std
mov
in
dec
mov
fldcw
icebp
call
addr16
adc
cmp
popa
sub
outsb
cmc
jbe
dec
and
cmc
cmp
mov
aas
ss
ret
mov
sub
jp
cmp
int3
cmpsl
xchg
adc
jecxz
mov
xor
mov
shrl
imul
adc
lods
out
xchg
out
test
xor
xchg
sbb
mov
pop
cld
test
icebp
out
lcall
pop
insb
in
pusha
pop
dec
adcb
aaa
pop
xchg
pop
insb
jb
stos
shl
addr16
pop
pop
mov
cmc
popf
repnz
int3
xchg
xor
mov
mov
sarl
stos
adcl
jl
mov
ret
jl
out
insl
call
aam
adc
aam
cli
mov
in
imul
pusha
mov
inc
call
jecxz
fldl
ja
inc
lea
adc
filds
mov
xor
pop
loope
addl
ret
add
outsb
and
cmp
mov
daa
aam
pop
and
popf
mov
sub
and
pop
testb
and
test
sub
adcl
sub
dec
xchg
aas
mov
add
in
add
mov
mov
fdivrp
jbe
loop
aas
pop
push
xchg
aad
cli
lods
push
fcmovne
lcall
or
test
jmp
insl
mov
ret
icebp
jge
addb
inc
inc
push
adc
adc
scas
je
inc
mov
dec
adc
cmpsb
add
pop
xchg
xor
test
pop
movsb
ficomps
jo
add
shll
add
lods
pop
inc
adc
lock
out
js
mov
pop
jb
mov
cwtl
xchg
push
cmp
lret
sbb
xor
sar
faddl
popf
push
in
mov
xchg
test
pop
adc
inc
icebp
loope
stos
push
adc
loopne
movswl
das
in
fsubl
call
mov
loopne
insl
sarl
push
daa
fidivrl
cmpsb
mov
movsb
xor
bound
das
mov
dec
mov
mov
push
ljmp
sub
insb
pop
push
fldpi
leave
mov
pop
jnp
andl
push
inc
leave
cli
dec
mov
jno
xor
mov
in
xchg
xlat
fdecstp
aad
cltd
pop
lods
ret
aaa
jg
dec
mov
xor
dec
xchg
jo
lea
sbb
ljmp
jbe
bound
and
or
ljmp
sub
pop
xor
lods
ret
stc
movsl
jg
cmp
bnd
rorb
add
sbb
pusha
movsl
js
lahf
jae
fcmovnb
mov
stos
cmp
sub
mov
jmp
cmp
scas
jge
inc
rcll
sti
fmul
loopne
or
push
cmp
cmp
repz
and
mov
cmp
ret
push
hlt
out
stc
cmp
mov
push
imul
test
dec
or
jbe
jb
fstpl
xchg
add
xchg
sti
push
pop
std
clc
daa
loope
xor
stc
mov
cmp
jl
mov
orb
xchg
shll
insb
scas
cld
xor
arpl
push
cmp
jbe
pop
jle
push
pop
mov
scas
fidivrl
xchg
or
mov
mov
pop
and
push
sub
rep
add
jge
icebp
mov
xor
cmc
shl
sub
add
cmpb
out
into
or
xchg
rcrb
mov
scas
or
and
cld
das
xor
sub
xchg
push
mov
sub
add
fdivrl
stos
push
pop
jecxz
stos
out
mov
outsl
lods
xchg
jmp
arpl
push
andb
jp
add
mov
lods
cwtl
lea
rcr
daa
dec
ljmp
adc
push
popa
or
negb
js
mov
mov
add
ret
xor
pop
arpl
dec
imul
mov
xor
nop
mov
xor
push
jns
xor
int3
ja
xchg
jae
in
cmp
out
cmp
mov
sub
mov
bound
lret
inc
inc
or
cmpl
jo
jbe
adc
hlt
xchg
mov
add
cmc
dec
dec
daa
stos
push
xlat
stc
xchg
out
repz
or
ror
jno
fdivl
addr16
sub
cmc
sub
mov
push
mov
ljmp
xor
push
fdivs
and
addr16
dec
pop
mov
adc
sub
or
adc
jmp
push
js
sub
in
xor
das
pop
leave
aam
inc
imul
mov
and
xchg
in
cmp
aad
or
nop
into
xor
cmp
adc
cld
mov
and
sbb
jae
insl
sub
inc
lds
push
repz
shll
orl
xor
cmpsl
xchg
mov
filds
inc
jb
lret
repnz
repz
pop
bound
adc
fcmovnb
cmpsl
add
and
push
or
int
mov
push
and
xchg
cmp
mov
out
orb
sti
pop
pop
ljmp
add
mov
aas
or
lods
or
jb
and
inc
aad
sti
repnz
sub
add
aad
xor
lds
dec
or
loopne
sub
xor
jo
cmp
roll
push
pushl
pop
fimull
scas
adc
adc
ds
xor
mov
dec
lcall
lock
test
fcmovu
xlat
xchg
inc
jp
fcoml
jo
rcrb
fs
pop
sbb
sbb
cmpb
push
push
addr16
push
push
dec
push
xchg
stos
pusha
cmp
pop
sub
in
fs
mov
aas
pop
ljmp
xor
cli
sarl
push
test
mov
mov
inc
pop
enter
jle
dec
sarl
mov
push
mov
nop
adc
dec
push
cli
inc
lcall
jmp
inc
cli
jle
incl
mov
imul
adc
fdivs
jecxz
scas
sbb
out
cwtl
mov
dec
pop
xchg
cmc
dec
push
enter
jecxz
push
sbb
icebp
test
cltd
popa
mov
push
aam
test
pop
mov
sub
mov
adc
scas
dec
jbe
sahf
xor
jb
lahf
mov
jecxz
jl
push
xchg
jmp
jae
insb
mov
gs
add
in
jle
popaw
jle
mov
fsubl
push
shrl
sbb
inc
pop
inc
mov
pop
bound
inc
insl
roll
mov
js
enter
int
pop
cmp
ljmp
lsl
shll
icebp
mov
pop
add
mov
into
in
pop
pop
sbb
lret
cld
ljmp
mov
stos
scas
and
cs
dec
dec
fistl
adc
mov
jno
inc
std
sti
leave
in
dec
imul
flds
push
test
pop
stos
mov
and
pushw
push
movsb
je
cs
cmp
or
cmp
cld
in
sub
jmp
jecxz
mov
push
jnp
mov
jbe
lods
pop
cmc
ss
imul
push
call
mov
daa
in
lds
xchg
pusha
call
movsl
dec
xor
pop
sbb
fstps
scas
xor
rcrb
stos
lods
std
scas
dec
daa
xor
repnz
lret
in
cli
inc
mov
inc
dec
pop
mov
or
mov
sbb
fs
sub
das
adc
xchg
sbb
mov
adc
jb
mov
adc
mov
mov
ficomps
jo
mov
pop
push
imul
add
sub
adc
sbbl
lcall
mov
push
cmp
mov
shr
and
cs
lds
cld
outsb
lea
test
xor
loope
mov
dec
fistpl
mov
pop
lret
jp
xor
test
inc
es
xlat
push
or
xor
pop
out
in
lret
inc
add
dec
lahf
or
popf
dec
xor
dec
dec
inc
pop
xchg
jno
sbb
dec
sub
inc
inc
int3
pop
xchg
jno
sbb
nop
into
fcmovb
mov
aas
idivb
sub
dec
add
adcl
in
inc
lods
xor
push
out
jne
in
mov
mov
fcomps
in
sahf
jnp
out
inc
cs
jle
shll
push
out
inc
cld
or
outsb
inc
xor
call
pop
cmpsb
adc
inc
cmp
cmp
shlb
test
movb
lds
js
xchg
mov
shlb
or
cmp
xor
ret
stos
out
jae
jo
and
jnp
jp
outsl
jno
lods
mov
dec
mov
jle
cli
xchg
insb
mov
jb
dec
jno
loope
das
sbb
ja
xchg
pop
inc
rcr
pop
aas
xor
inc
stos
fcompl
xor
call
cld
fistl
icebp
xchg
ljmp
cs
push
es
fldt
cmc
dec
sbb
nop
sahf
mov
mov
gs
movsl
xor
mov
loopne
sub
add
push
sub
ss
xor
dec
push
movsb
jl
cli
rcl
mov
out
shl
cmp
jns
inc
ss
sub
sti
xchg
mulb
jmp
pop
sbb
arpl
mov
mov
leave
dec
push
stos
sub
push
xlat
popa
fiaddl
jbe
mov
dec
addr16
out
shr
cmpsb
aam
cmpsl
loopne
sahf
sub
pop
xchg
mov
sbb
cs
rcrl
outsb
mov
pop
pop
bound
add
popf
adcl
push
dec
lahf
pop
movsb
out
mul
sub
mov
fbstp
xor
stc
dec
repz
dec
add
cmc
cmp
cld
mov
shlb
cmp
cltd
cmp
adc
push
xchg
and
insb
mov
idivb
xchg
scas
outsb
or
mov
imul
add
test
and
sbb
inc
pusha
imul
mov
dec
pop
addr16
inc
sbb
push
data16
sub
xor
mov
inc
push
test
inc
jbe
pop
mov
jns
mov
inc
dec
cwtl
test
stos
cmp
imul
mov
cmp
in
jecxz
sahf
cmpsl
xchg
sahf
lock
sti
mov
mov
push
inc
sahf
pshufw
pop
cmc
orl
dec
jmp
mov
add
inc
xchg
sar
adc
cs
cmpsl
fs
xchg
xchg
stc
add
xor
mov
mov
push
mov
jecxz
sub
pop
xorb
sbb
fnstcw
std
in
mov
sub
fldcw
test
or
sub
mull
lods
hlt
xlat
fisubs
les
enter
xorl
ja
or
and
cmp
jge
iret
scas
xlat
adc
mov
fidivrs
mov
sar
vpandn
mov
in
repz
pusha
fiadds
aaa
jne
jp
xchg
cwtl
dec
add
xor
sub
or
dec
xchg
mov
pop
adc
arpl
lret
leave
cmc
adc
ja
or
enter
lahf
lods
push
mov
pop
aas
dec
out
dec
sbb
lahf
fcmove
fs
shr
jbe
push
lcall
push
cmp
xchg
fbstp
pop
and
or
cwtl
ss
adc
cmc
push
xchg
pop
cmpsb
mov
xorl
jmp
push
add
je
add
lret
add
scas
add
push
and
in
push
sub
nop
data16
mov
sub
sub
scas
jb
js
pushf
repnz
scas
loopne
sub
add
fldcw
cmp
sub
pop
pop
and
lret
fwait
hlt
aad
loope
jl
jmp
sbb
inc
movsb
xor
xor
cmp
and
arpl
frstor
shll
popa
rcll
lcall
cmpsb
int3
xchg
or
arpl
jg
mov
xchg
aam
sbb
and
repnz
negl
pop
mov
fidivrs
std
sbb
cltd
arpl
loope
adc
inc
dec
sti
or
cmc
fsubrp
sahf
sti
fxch
cltd
fcoml
xor
subl
xor
and
fnstenv
ret
cmp
dec
bound
jle
cmpl
inc
push
add
mov
dec
xchg
icebp
in
mov
shll
mov
and
lahf
and
mov
push
dec
sub
shr
jp
data16
aas
add
sbb
aad
test
mov
push
lds
cs
mov
jnp
xchg
std
push
jp
push
test
push
adc
mov
cmpsb
add
jns
ret
sub
xchg
dec
mov
pop
cld
arpl
xor
mov
push
rolb
push
add
mov
mov
fwait
rcll
add
loope
fstl
nop
fadds
cmp
xor
and
add
jne
popa
cltd
jns
aam
jl
cmp
inc
stc
stos
inc
sarb
in
je
inc
pop
pop
sbb
leave
mov
test
inc
add
ret
jp
outsb
jb
dec
clc
js
mov
int3
sahf
imul
sub
xchg
stos
dec
mov
add
add
xchg
adc
pop
adc
rorb
in
out
inc
cmpsb
fsubr
or
and
jo
sub
loope
mov
jg
clc
xchg
ja
sub
jo
scas
pop
sub
lods
stos
int
mov
in
ficompl
aas
int
pop
inc
mov
push
leave
lds
insb
hlt
in
mov
cmpsl
adc
ljmp
cmp
push
lahf
nop
rcrb
mov
pop
ret
insl
pop
xchg
adc
cmpsb
daa
mov
and
or
xchg
xchg
loop,pt
xor
adc
pusha
scas
int
jg
movsb
inc
filds
packuswb
pop
jmp
mov
jns
adc
push
jmp
jns
mov
mov
call
hlt
lcall
jne
fiadds
test
test
ds
movsb
xchg
lea
into
lock
add
push
fcoml
pop
popa
insl
sub
jns
dec
pop
lcall
add
jb
jno
cli
cmp
inc
or
lret
inc
pop
fwait
ja
mov
cmp
in
xlat
jne
dec
fs
inc
inc
test
sub
dec
adc
ficoms
pop
fldenv
loop
or
lret
cmpb
add
xor
mov
xor
sarb
pop
xchg
into
push
dec
sub
mov
lock
cltd
push
pop
in
or
cmp
add
roll
dec
or
or
movsl
sahf
mov
mov
imul
clc
dec
test
xchg
mov
mov
dec
xor
and
out
inc
cmp
fdivl
inc
pop
jnp
aam
out
or
adc
int
das
mov
xchg
pop
push
pop
xorl
xchg
sub
shll
das
test
and
xchg
pop
lock
and
mov
mov
pop
lret
insl
push
sbb
sbb
scas
xor
xor
mov
scas
inc
movq
sub
xor
add
lods
out
mov
jecxz
in
cli
icebp
or
cmp
outsb
lret
jno
xor
mov
or
push
add
outsb
in
les
jge
in
insl
mov
clc
stos
ss
out
imul
inc
lahf
imul
mov
mov
cmpsl
sbb
insb
arpl
inc
cmp
xchg
movsb
inc
das
mov
fcmovnb
add
push
in
inc
push
xchg
jmp
shrb
push
sbb
adc
adc
pushf
lds
in
dec
xor
sahf
repz
shrb
int3
mov
dec
push
hlt
andb
push
popa
jl
inc
mov
mov
ss
movsl
xchg
xor
cwtl
sub
lock
mov
mov
imul
inc
add
fstpt
inc
cwtl
cmpsb
cs
mov
lcall
push
jno
test
mov
scas
cmp
adc
incb
adc
adc
dec
cmp
mov
inc
mov
outsl
push
repnz
bound
or
imul
dec
xor
outsl
lods
jb
call
in
popf
dec
mov
and
aam
aam
inc
in
jb
scas
ljmp
les
lods
es
jp
adc
and
add
inc
cmp
pusha
sbb
dec
jmp
mov
push
mov
cli
add
je
cltd
push
mov
jo
mov
lock
cmc
in
imul
shr
jg
push
push
ljmp
mov
loope
nop
or
xor
pop
loope
shl
xchg
xchg
fimuls
cwtl
dec
ss
les
rclb
pop
aas
mov
push
mov
xor
push
repnz
cmp
pop
rclb
gs
xchg
nop
sbb
dec
jnp
rcl
pushf
xor
idivb
pop
sub
or
out
test
test
or
cmp
ds
stos
add
and
shl
dec
daa
test
mov
pop
ret
arpl
loope
cwtl
add
outsl
adc
mov
mov
loopne
aaa
je
icebp
rcll
ret
jmp
pop
addr16
ret
sti
jns
push
in
cmpsb
stos
addl
pop
jbe
out
push
mov
js
adc
in
push
xchg
cmpsl
aad
push
in
and
adc
jl
jne
aaa
push
xor
into
insl
repz
mov
rol
sub
mov
test
xchg
mov
mov
xor
jg
jno
rorb
mov
mov
mov
adc
movsl
xor
push
repz
addr16
add
pusha
mov
pop
and
cwtl
jae
xor
clc
fadds
lods
mov
mull
ss
push
aaa
jb
insb
ja
or
sub
xor
xor
cmp
and
ss
pop
inc
stos
adc
mov
xor
negl
rcll
or
xorb
dec
lret
jecxz
inc
mov
out
pop
ss
pop
pop
xor
cld
mov
cmp
jno
xor
mov
mov
js
jb
ret
decl
rcrb
int
cmp
mov
mov
and
add
jmp
enter
and
mov
loop
and
sarb
cmp
dec
lea
cmc
cmp
push
jle
xchg
js
ja
shl
inc
stos
jmp
fcomi
mov
cmc
aad
push
ds
push
sub
outsl
test
dec
jle
int3
jb
inc
fwait
mov
jno
repnz
push
jno
jp
notb
pop
add
dec
pop
sbb
mov
lock
mov
xor
shrl
adc
pop
jle
cld
or
addr16
mov
fisttps
mov
icebp
cmc
mov
pop
inc
mov
addr16
rcr
loop
mov
xor
xchg
mov
push
enter
sbb
iret
imul
les
inc
lret
mov
fs
cli
push
pop
sbb
mov
cli
sahf
xchg
jle
rdmsr
xor
jne
loope
xor
pop
push
push
dec
mov
incl
int3
scas
sub
mov
pop
xchg
arpl
pop
jp
jo
rcll
stos
decb
arpl
shlb
pop
push
enter
cmpsb
inc
cwtl
or
out
xchg
jns
jecxz
repnz
mov
addr16
idivb
shll
sbb
cmp
cld
mov
out
jbe
cmp
jmp
test
jp
or
out
pop
dec
cld
and
inc
jmp
xor
lret
inc
test
lcall
sub
or
dec
mov
icebp
and
frstor
mov
rorl
inc
xor
push
repz
pop
out
inc
inc
mov
fiadds
hlt
cwtl
xchg
insl
leave
roll
xchg
movsl
jecxz
push
fcoml
aas
ja
mov
loopne
jl
mull
inc
unpckhps
jo
mov
lds
in
push
mov
mov
in
xor
mov
pop
mov
xchg
enter
xor
sub
inc
dec
les
mov
fildll
in
jbe
xchg
mov
jg
loopne
push
sub
cmpsb
xor
mov
adc
neg
into
sbb
insb
add
cwtl
or
rorb
or
cmpsl
sahf
lahf
jmp
sbb
int
sbb
xor
sar
mov
aas
adc
in
int
mov
dec
stos
idivb
inc
loope
jnp
ljmp
push
fsubrp
mov
imul
test
adc
fmuls
cli
fwait
ja
pop
hlt
imulb
pop
popa
mov
je
into
push
jge
pop
out
mov
es
or
inc
or
push
icebp
jge
inc
push
inc
cmp
testb
loope
stc
jbe
shlb
rcrb
out
and
insb
imul
xor
dec
sub
push
jns
in
imul
loop
pop
adc
and
adc
ljmp
and
inc
or
mov
sar
or
stc
outsb
xchg
sbb
ljmp
loope
pop
addr16
cmp
inc
dec
pop
jecxz
mov
sub
mov
or
mov
rclb
sarl
lods
jge
and
mov
push
lea
rclb
in
dec
mov
nop
sub
repz
mov
shrl
lods
popa
jb
pushl
cmp
in
mov
pop
stc
xchg
jnp
pop
je
in
imul
mov
psubb
loope
insl
rcll
dec
in
repnz
nop
xchg
popa
dec
pop
and
inc
les
sub
cmp
mov
pusha
xor
cmp
lea
jge
mov
outsl
or
jno
idivb
push
aaa
adcb
cmp
neg
jb
adc
std
inc
addr16
test
xchg
cmp
xorb
cmp
mov
loop
scas
lcall
icebp
icebp
loopne
stos
insl
pushf
les
cmp
leave
mov
push
pop
fists
lods
cmp
cwtl
stc
lahf
lret
jo
aam
add
sarl
bnd
imul
dec
pop
fs
in
mov
in
sbbl
or
iret
and
pop
xchg
dec
ja
pop
and
lds
mov
into
pop
mov
sub
jns
cmc
and
lock
dec
outsb
packuswb
add
cmc
push
push
and
leave
popf
lea
and
pop
mov
push
inc
sbb
addb
aaa
mov
lret
sub
int3
orl
mov
inc
jb
cmp
sbb
xchg
dec
jl
lret
push
inc
shll
jne
insb
adc
out
fwait
in
cli
fcomi
jmp
sahf
pop
test
test
pop
clc
jge
es
xchg
mov
inc
push
lds
jecxz
dec
roll
pop
pop
or
dec
ss
fmuls
sub
fists
pop
insb
or
push
imul
sbb
jecxz
mov
xorl
cmp
hlt
cmp
sbb
sbb
xor
dec
rol
loopne
outsl
mov
in
or
movsl
mov
mov
xchg
shll
dec
int
xchg
push
sub
icebp
lods
sbbb
adc
sahf
mov
and
cld
mov
mov
jmp
call
sti
pop
gs
add
sbb
scas
into
push
fwait
cmp
mov
mov
hlt
jmp
dec
or
popa
aam
sbb
imul
add
std
cmp
and
dec
gs
bound
cmc
ja
shlb
or
cmpsb
pop
dec
push
scas
cwtl
inc
das
cli
das
push
mov
pop
dec
sbb
jns
je
and
jle
mov
jo
or
xchg
stc
ficomps
jle
test
and
mov
lcall
and
xchg
pop
hlt
xchg
xor
xchg
scas
cmpsb
enter
sub
popl
push
sbbb
cltd
and
or
or
jmp
cs
or
or
mov
xchg
call
add
insb
xchg
mov
daa
cli
lea
mov
or
adc
mov
jecxz
pushf
cmpsb
lds
js
push
scas
sub
sub
fdivs
inc
cmp
pop
ja
sbb
mov
inc
dec
pop
xor
stc
pop
mov
in
adc
loop
iret
mov
push
popf
test
fs
mov
cmc
and
cmc
test
push
into
pop
sbb
rcr
dec
inc
dec
mov
mov
xchg
or
lods
dec
xor
mov
lcall
aam
pop
or
jne
push
push
push
cmp
lds
pop
andl
mov
scas
jge
lret
pop
imul
pop
ljmp
inc
jb
adc
sbb
mov
add
pop
aas
in
push
jbe
fcomp
enter
lea
mov
call
bound
sbb
mov
inc
popf
dec
adc
shll
lds
dec
pop
xchg
fcmovnbe
jmp
dec
cmp
or
aas
cmp
cmp
inc
mov
sahf
sub
int
out
sub
mov
lods
dec
cmp
data16
mov
js
in
ret
ljmp
jb
outsl
sbb
xchg
mov
xchg
jae
jge
dec
push
dec
adc
cmpsl
dec
add
xor
sub
movsl
sbb
in
repnz
and
jb
call
ljmp
call
aaa
mov
and
in
out
fnstsw
mov
es
pop
subb
xchg
push
sbb
xor
lods
shll
push
cmp
jp
iret
pusha
stc
js
scas
sub
fimuls
and
lahf
out
outsl
mov
sti
dec
xchg
jmp
in
and
loop
sarb
adc
sahf
push
dec
mov
xor
aad
jns
sub
outsb
xchg
mov
mov
repz
addr16
mov
xchg
push
aad
pop
aaa
loope
loope
mov
std
loopne
fdivs
push
and
dec
mov
adc
sbb
stos
xchg
inc
icebp
mov
sbb
dec
and
loope
jmp
enter
out
enter
fsubrs
fcomps
xor
out
stos
jne
sarl
out
jp
test
xor
cmpsl
lock
sbb
leave
popa
add
inc
lods
jp
adc
into
setge
adc
jg
or
or
test
repz
pop
out
imul
push
jmp
sub
shl
ret
orl
or
lds
xor
rcrl
ret
aam
imul
shll
les
pop
aaa
outsb
xchg
ja
mov
fbld
push
and
add
test
inc
inc
in
sub
ja
loopne
shrl
out
fsubs
xchg
and
fstps
sbb
das
sbb
mov
scas
xor
aas
cli
cmc
xchg
stos
xor
int3
enter
fadd
scas
hlt
sbb
inc
jnp
xor
stos
mov
fistpl
sbb
add
notb
es
add
pop
jo
jmp
pop
sbb
xor
aad
add
shlb
pop
lcall
cld
inc
shl
and
inc
pop
fistl
xor
adc
out
or
inc
sbb
jns
ror
stc
jle
inc
xchg
cmp
sbb
mov
fnstsw
and
std
inc
addr16
push
inc
mov
cmpsb
mov
sbb
fildll
inc
notb
inc
lock
push
mov
mov
sub
sbb
scas
mov
mov
and
shrl
andb
xor
adc
addl
outsb
outsl
add
jne
mov
repnz
mov
in
lcall
scas
ret
mov
sbb
lds
outsl
js
cld
mov
cltd
orb
repz
jae
adc
outsl
cld
push
aam
push
cmpsb
mov
add
std
repnz
and
sti
push
jne
sti
add
xchg
scas
ja
and
es
mov
mov
inc
fnsave
into
adc
ljmp
mov
sub
movsb
sbb
adc
insl
sub
sub
inc
sub
sub
sub
add
dec
xlat
scas
mov
cmp
das
imul
js
mov
jecxz
add
or
adc
outsl
mov
or
inc
les
push
or
add
pusha
mov
outsl
lods
ds
test
xchg
insb
clc
aaa
cmp
lods
push
push
adc
loopne
push
rcrb
popa
cmc
mov
mov
or
insl
sbb
add
cmp
das
in
mov
lahf
inc
pop
cltd
js
pop
jp
pop
out
dec
jge
mov
fbstp
out
aas
xchg
ret
in
xchg
fisubs
jo
lods
lahf
jb
imul
jb
fistpl
xor
pop
fstps
test
insl
push
xchg
push
loopne
std
call
pusha
stos
mov
rclb
inc
pop
popf
ss
pop
sahf
push
out
imul
cltd
mov
and
jle
sti
mov
imul
int3
aas
outsl
cmp
dec
cmp
mov
rcrl
test
mov
cmp
movsl
popf
jno
xor
scas
jmp
aas
ja
fwait
and
lods
test
mov
sub
out
popf
push
jle
aaa
fidivrs
insb
cld
mov
stc
and
sub
insb
inc
mov
dec
cmc
mov
sub
enter
jae
iret
cwtl
push
ss
cld
outsl
inc
lcall
add
xchg
lahf
repnz
jbe
outsb
jmp
rorb
sub
test
inc
mov
push
mov
sbb
push
aas
or
and
sub
mov
subb
or
fwait
dec
jns
or
fildll
inc
sar
xchg
cmpsb
mov
mov
inc
adc
shll
enter
out
into
xor
cs
in
lret
fnsave
outsl
or
aaa
sbb
mov
fstpl
sbb
lahf
in
in
dec
mov
bound
pop
cmp
ljmp
or
adc
lahf
aam
aas
cmpsb
fists
xchg
inc
shr
dec
push
or
fisttpll
inc
cmp
pop
insb
push
call
jecxz
mov
mov
pop
push
js
jo
mov
lock
in
xchg
and
inc
outsl
adc
imul
mov
sub
roll
mov
iret
push
rclb
push
lahf
sbb
rolb
mov
and
je
sub
sbb
xchg
pop
sub
dec
xorl
cmpsl
pusha
adc
jp
sub
jecxz
in
mov
popa
mov
xor
push
nop
xor
lods
es
divb
mov
xchg
aaa
loopne
sbbl
test
dec
mov
and
sbbb
and
dec
sbb
inc
mov
mov
inc
imul
repnz
xchg
imul
out
push
push
mov
movsl
cmp
fcompl
add
jecxz
aaa
push
stc
xor
repz
sbb
or
adc
or
clc
fimuls
ljmp
pop
add
cmc
stos
mov
dec
fwait
add
repz
xor
cmp
cmp
or
push
inc
ret
or
loopne
push
pop
lock
xchg
pop
cmpsl
pop
inc
sbb
or
mov
inc
stc
cld
cmpsl
add
and
jp
bswap
xchg
xchg
add
pop
shrl
wbinvd
ja
outsb
pop
xchg
inc
xchg
or
cwtl
out
fdivl
int3
fdivl
insl
sbb
repnz
in
in
and
adc
sub
adc
testl
cmc
adc
or
fildl
movsb
cmpsb
dec
fildl
jle
and
fwait
addr16
xchg
cli
loop,pt
pop
or
std
add
push
daa
adc
jns
dec
mov
dec
nop
popl
inc
insb
int3
pop
movl
cltd
cmpl
ret
hlt
mov
sub
dec
mov
push
lods
pop
movsb
mov
mov
arpl
sbb
xor
sbb
orl
jp
mov
jge
adc
rcll
pop
adc
in
add
and
or
fdivrs
andb
cli
outsb
push
mov
lods
sarb
pop
or
xchg
xlat
sbb
push
inc
jmp
jno
repnz
lret
sbb
jp
jp
mov
repnz
push
xlat
cmp
xchg
xchg
hlt
in
daa
jle
loope
mov
mov
aam
dec
bound
pop
stos
bound
sbb
rorb
mov
int
int3
popa
mov
je
fs
pop
imul
in
inc
jge
lret
rorl
xor
sbbl
sub
pop
std
sahf
add
movsl
xchg
int
rorb
mov
dec
cwtl
mov
jb
negb
mov
push
sub
push
mov
incl
lret
mov
lahf
inc
lahf
ljmp
int
push
xchg
js
add
dec
stos
je
shlb
inc
cmpsb
pop
movsb
jle
jae
std
cmpsl
mov
lcall
stc
sub
push
push
sub
enter
mov
in
xor
mov
jmp
push
imul
sti
sbb
lahf
pop
in
push
gs
or
jo
mov
in
add
int
adc
enter
mov
cmp
dec
in
repnz
mov
outsl
iret
inc
adc
cs
adc
inc
mov
rolb
add
dec
sahf
jp
xchg
icebp
aad
adc
pop
and
or
mov
mov
inc
out
fs
fst
xor
punpckhdq
adc
lds
lock
mov
mov
inc
inc
xchg
sbb
xor
xor
lea
sti
xor
pop
hlt
mov
popa
push
sarl
push
cmpb
rcrb
add
cmp
mov
loop
es
jmp
sti
cmp
sarl
dec
sbb
sbb
es
mov
shlb
iret
xor
add
sub
test
es
mov
je
mov
mov
mov
out
cld
lock
dec
add
sub
shll
std
add
rclb
fucom
mov
cmp
xlat
dec
xor
xor
jge
or
imul
out
data16
mov
dec
xchg
or
je
sti
lods
mov
rcrl
or
adc
cmp
dec
push
cli
loopne
shl
pop
push
and
mov
push
insb
dec
and
int3
sbb
mov
xchg
xchg
inc
icebp
rcll
call
push
mov
adc
into
fs
add
jns
mov
sbb
mov
jp
ljmp
popa
aas
out
mov
xchg
ss
ja
adc
add
mov
jae
xchg
fs
je
pop
les
jle
repnz
inc
loope
icebp
pop
cmpsb
outsl
cmpsb
sub
stos
fiaddl
imul
pop
add
out
pushf
push
sub
push
cwtl
std
out
xchg
jle
les
pop
fxch
inc
and
sub
mov
push
jno
jae
jle
in
dec
leave
xchg
and
lret
sbb
orb
adc
push
adc
xor
jbe,pt
adc
xor
dec
add
inc
xchg
xchg
pushf
gs
add
movd
mov
shll
repz
cld
push
ss
in
cmpsl
adc
stc
ftst
fwait
out
lods
lcall
out
ret
popa
divb
sbb
mov
insl
hlt
cmp
add
dec
push
jmp
out
xlat
jecxz
in
push
fstp
pop
pop
push
cmc
scas
into
gs
ficoms
fmull
pop
cmp
sub
lcall
pop
jge
fidivrl
sti
jge
ljmp
pop
mov
ljmp
and
sbb
mov
sbb
sub
orl
and
ret
push
mov
stos
xchg
adc
and
stos
pushl
pop
inc
loop
in
idivl
mov
jge
xchg
int
jnp
outsb
push
dec
out
scas
fwait
es
adc
inc
sub
lods
pop
imul
xor
pop
xlat
adc
jae
mov
dec
out
lret
sahf
sub
or
scas
inc
fistpll
mov
xchg
mov
loope
out
dec
cmp
jnp
or
mov
ret
mov
nop
daa
dec
sub
lahf
ficompl
jg
pop
and
in
in
or
xchg
cwtl
fistps
pushf
jae
ds
and
imul
scas
cs
movsb
cmp
sub
aas
add
jo
adc
and
stos
push
mov
pop
push
sub
fmul
shll
outsl
faddl
mov
ja
pop
adc
mov
daa
insl
inc
push
repz
xorb
call
imul
rol
xorb
jge
mov
cmpsb
sub
dec
sbbl
sbb
ljmp
mov
jne
cmpsb
xchg
sahf
lcall
test
shlb
mulb
or
sub
fmul
xorb
push
and
shlb
mov
sbb
sahf
sub
jae
xor
imul
insl
adc
scas
sbb
cmp
outsb
jg
outsl
cmp
sbb
inc
inc
ffreep
mov
nop
call
sbb
test
rep
inc
jns
sub
ja
das
mov
loop
lds
scas
sarl
mov
loope
imul
cmpsl
xor
test
sub
sbb
jle
sbb
xchg
or
cli
sbb
add
mov
jl
mov
sbb
mov
stos
push
add
or
les
inc
in
inc
popa
hlt
stc
insl
dec
fnsetpm(287
mov
cmp
cmpsb
mov
and
mov
mov
dec
adc
rorb
push
mov
mov
rcrb
add
repnz
into
xor
cwtl
jns
and
jae
and
notb
push
push
inc
inc
mov
adc
mov
test
pop
in
les
cltd
xlat
and
das
icebp
int3
stc
test
icebp
test
push
mov
xchg
stc
cld
pop
lods
pop
jmp
jne
push
out
jp
xor
jbe
jmp
dec
ja
adc
or
push
movsl
push
sub
fucomip
mov
push
cmp
or
cmp
lods
mov
lret
sub
push
rcl
xchg
popa
sub
arpl
rorb
mov
cmp
jmp
nop
add
cmp
loopne
xor
inc
jg
mov
push
push
lahf
dec
bound
into
aam
jb
pop
lret
add
inc
stos
into
std
mov
mov
sbb
inc
or
adc
test
pop
sbb
cmp
cmp
jl
inc
push
cmc
push
mov
jle
pop
ffreep
ficompl
cmp
jns
out
pop
jge
popf
jp
sbb
jl
int3
stos
mov
testb
pop
mov
setns
mov
imul
mov
into
nop
aad
ljmp
dec
add
lods
sbb
sbb
mov
imulb
pop
fldcw
dec
mov
sbb
or
imul
movsl
iret
inc
and
inc
ss
pop
add
pop
and
pop
cmpsl
pop
cs
fisttpl
dec
xor
xchg
xor
dec
mov
hlt
and
or
icebp
popl
push
mov
lods
mov
push
mov
aaa
xor
cltd
jg
flds
aam
adc
jg
loopne
js
jg
repz
sbb
cltd
xchg
cltd
dec
cmp
fwait
xor
cmp
in
xor
clc
cmp
aad
icebp
fstp
jge
pop
pusha
mov
xchg
inc
subb
xor
pop
mov
xchg
mov
and
dec
jns
push
push
es
jae
fistpl
adcl
insb
das
push
repz
int
cld
imul
shll
cmp
adc
mov
lock
xchg
mov
mov
test
push
lcall
hlt
lahf
cmp
mov
add
adc
arpl
and
mov
push
xor
daa
mov
mov
sub
adc
inc
stos
or
pop
mov
dec
movsb
pop
mov
aas
sahf
xchg
popa
out
mov
push
pop
push
jl
cmpsl
mov
or
fdivp
and
push
cmpsl
xlat
or
sub
call
sub
push
and
dec
jne
nop
mov
into
push
ss
das
dec
jp
jle
push
dec
jnp
dec
movsb
mov
or
mov
mov
inc
xchg
sbb
lods
in
push
mov
xchg
xlat
scas
jns
mov
sub
and
idivb
ud0
in
mov
or
mov
scas
cmp
adc
es
dec
adcl
fxch
jg
arpl
mov
mov
xchg
lock
xor
sarl
stos
dec
xchg
push
in
jns
mov
pop
lds
cltd
inc
sbb
dec
xchg
and
test
xor
xchg
arpl
lahf
inc
rcrb
cmp
mov
adc
sahf
pop
adc
push
call
cld
lods
xchg
sub
fldl
lds
pop
aas
sub
pop
dec
add
lods
jecxz
xchg
adc
push
mov
inc
scas
fidivrs
cmpb
pop
or
sub
push
mov
mov
xchg
jo
mov
ss
emms
push
hlt
sti
jno
sarl
xchg
sarb
and
aam
lock
ds
cmc
sbb
mov
mov
adc
add
ljmp
int3
aad
outsl
push
in
cmc
movsb
mov
jg
mov
test
xlat
int
and
inc
in
xchg
fcoml
ret
sub
hlt
out
jg
dec
inc
adc
js
cmp
lret
jmp
cmp
iret
adc
loop
and
cmpb
loope
push
cltd
mov
push
xor
add
cmpsb
adc
sbb
lods
fs
sub
aas
lea
mov
loop
into
clc
repnz
in
shlb
cmc
dec
xchg
ja
add
xchg
xor
fldcw
repnz
aad
mov
fucomip
addr16
xchg
pop
mov
out
cmpsb
mov
lock
mov
cmpsl
movsb
xchg
cmp
test
icebp
into
lods
divb
shl
push
ljmp
rcl
pop
jae
pop
pop
shr
out
sub
fists
jns
clc
movsl
xchg
mov
jmp
mov
xchg
jp
mov
lds
jp
jae
pop
pop
and
outsb
repnz
sub
ja
push
movsb
mov
jae
sub
adc
mov
inc
jns
mov
mov
loope
mov
in
arpl
mov
std
push
cli
or
dec
xor
enter
adc
xchg
dec
add
jg
jnp
clc
aam
push
movsl
adc
xor
test
adc
mov
sbb
sub
lret
adc
inc
add
mov
mov
cmp
popf
mov
dec
addr16
and
adcb
fldt
cmpsb
int3
int3
xor
out
and
sahf
fwait
loop
dec
dec
mov
jle
cld
xchg
inc
inc
mov
aad
call
nop
roll
add
rclb
jp
push
data16
clc
mov
jp
loope
pop
inc
jl
enter
xlat
adc
inc
or
in
mov
dec
adc
add
mov
and
cmp
inc
cmp
sbb
sbb
sbb
int3
dec
xchg
movsb
pop
notl
nop
jbe
xchg
out
jns
out
lcall
test
scas
mov
mov
lods
aad
push
lods
push
scas
data16
xor
lods
dec
xchg
lret
subl
lock
lret
cmc
push
xor
mov
sbb
xchg
jne
lret
push
adc
sahf
xor
push
fadd
pop
jne
and
mov
sbb
pop
mov
inc
incb
xchg
jb
xchg
and
dec
lahf
push
mov
jne
fsubrl
dec
jmp
adc
in
repz
pusha
test
push
mov
push
adc
mov
sub
test
sbb
popa
inc
mov
inc
fst
out
mov
lock
xchg
bnd
inc
pop
out
jne
insl
adc
lock
dec
std
sahf
cmp
xchg
out
jle
sub
adc
mov
mov
stos
cmc
fistpl
pop
sbb
sbb
ret
enter
mov
popa
sbb
mov
lret
test
mov
fadd
sbb
mov
std
ret
insb
lock
mov
addl
jge
jns
sbb
jl
jb
or
ret
mov
push
lret
popa
clc
pop
pop
mov
push
imul
fistpll
rcrl
pop
jge
test
pushf
vrcpps
or
ja
and
gs
push
xchg
hlt
xor
mov
loopne
dec
jg
xchg
pushf
stos
jl
dec
xor
daa
test
mov
inc
loop
lret
cmpl
and
fiadds
dec
push
sbb
in
or
jle
mov
ss
mov
ficomps
jno
cwtl
scas
enter
pop
xorl
iret
adc
push
cmp
and
int
mov
lahf
insb
imul
or
ret
stos
fldz
imul
mov
lock
fisttpl
mov
or
sub
cmp
inc
cmpl
xchg
pop
popa
out
ret
in
dec
insb
push
fnsave
shlb
ror
loope
jns
mov
lcall
add
dec
jp
cmp
adc
scas
das
push
xchg
addr16
leave
test
cltd
jp
push
pushf
sbb
fisubl
xchg
aam
dec
jo
mov
mov
imul
mov
mov
ja
xchg
sarl
add
nop
cmp
enter
and
loopne
sub
mov
xor
faddp
jo
enter
xor
add
hlt
out
pop
and
jne
jns
or
xlat
ret
aad
sbb
mov
pop
insb
mov
lods
pushf
dec
cwtl
push
fdivrs
test
in
pop
pop
push
cltd
dec
pop
adc
je
pop
pop
xchg
out
ret
cli
jo
dec
shl
mov
inc
sbb
sub
push
lret
out
xchg
push
addl
or
insb
inc
mov
ja
pop
cmc
fistpll
xchg
mov
sahf
push
push
mov
add
loopne
hlt
aad
push
lcall
stos
push
cmp
mov
and
setne
inc
or
pop
mov
xor
repz
setns
cmp
dec
mov
aas
or
dec
mov
inc
mov
push
test
sbb
subl
imul
jle
ffree
and
cmpsb
fwait
rolb
mov
cmpsl
dec
xchg
int3
imul
and
pop
out
jnp
in
sub
sbb
cmp
xchg
enter
push
call
pop
pop
push
add
arpl
pop
scas
inc
push
mov
mov
xor
push
sbb
xor
jle
mov
movsb
jmp
push
push
adc
pop
cmp
test
fidivs
mov
xchg
mov
dec
and
mov
sbb
cmc
mov
dec
inc
aaa
das
dec
add
cli
xchg
mov
and
push
cmc
cmp
loopne
je
cmp
sub
jmp
or
mov
mov
arpl
daa
pop
sahf
jne
inc
mov
pop
push
add
xchg
fs
lods
leave
adc
or
inc
nop
sbb
shl
in
jle
imul
or
test
mov
addl
das
sbb
jp
and
stos
cs
bound
dec
negb
mov
and
xor
lods
dec
je
idivb
inc
stos
loopne
xchg
daa
inc
cmp
pusha
lods
sbb
mov
mov
notl
and
jmp
sub
fildll
pop
pop
cmpl
mov
pop
adc
inc
xchg
sarl
pushf
inc
pop
lea
pop
push
push
imul
and
lcall
mov
scas
imul
pop
adc
pop
add
mov
iret
cmp
push
fsts
jae
adc
add
mov
stos
outsl
mov
je
js
adc
add
shrb
aam
test
stc
push
fwait
inc
jno
pop
int3
bound
mov
sbb
inc
int3
leave
jnp
in
add
sbb
imulb
jmp
add
mov
inc
mov
loopne
stos
pop
leave
lret
sbb
mov
les
dec
mov
adc
stos
jge
ficomps
xchg
mov
stos
sbb
aaa
cmp
jbe
adc
ljmp
lods
xor
inc
xchg
pop
mov
out
lahf
jg
mov
ja
sbb
repnz
lock
pop
xchg
jp
mov
add
fnstsw
int
cmc
adc
xchg
sbb
arpl
loope
cmp
mov
mov
idivb
xchg
push
inc
sbb
subb
arpl
inc
fdivrs
adc
jle
or
dec
pushf
insl
lcall
xor
push
cltd
es
push
inc
sub
cs
add
ds
jae
fsubl
or
sbb
sbb
inc
daa
hlt
lcall
or
ja
mov
nop
ja
popf
pop
jb
push
add
mov
cmc
cmc
cmovl
loopne
sti
cli
pop
jle
push
lret
dec
xchg
test
adc
jae
mov
fmulp
jge
mov
sbb
test
push
in
jmp
inc
pop
sti
mov
mov
push
sar
in
mov
aas
mov
hlt
dec
jo
sahf
xchg
out
std
adc
out
jae
popf
data16
xchg
fs
xchg
loope
aas
add
nop
or
lret
in
jmp
pop
outsl
xchg
mov
popf
sbb
movsb
or
dec
xor
imul
aas
sbb
jnp
mov
sbbl
loop
jle
lret
and
mov
or
xor
inc
xor
xchg
push
loop
lcall
xchg
mov
popf
test
jmp
hlt
mov
pop
cs
push
or
adc
dec
push
mov
movsl
cmp
mov
mov
or
out
add
xor
mov
xchg
addr16
inc
xor
mov
shl
dec
mov
xorl
lock
xchg
mov
je
inc
dec
dec
lahf
repz
adc
adc
jb
std
out
dec
and
push
mov
adc
outsl
pusha
pop
mov
in
lds
sub
dec
mov
xorb
ficoms
mov
subb
ja
inc
clc
cld
outsb
cli
xor
imul
adc
fbstp
fptan
xchg
ret
inc
mov
sub
xor
popf
pop
and
add
push
mov
std
push
daa
scas
aad
sar
out
or
and
dec
cli
aam
or
mov
adc
sbb
fs
in
jns
mov
xor
mov
jbe
stc
insb
fisttpll
cld
shlb
xchg
cmc
push
jns
xchg
xchg
mov
mov
std
sub
mov
push
and
mov
in
aad
xor
sub
pop
popf
push
or
fidivrl
cmc
mov
push
jbe
cmpsl
jg
sub
dec
dec
jle
mov
hlt
add
stos
ja
stos
out
push
jae
xchg
push
cmovnp
mov
sub
cmp
lret
lcall
stc
xorb
inc
cmpb
or
mov
daa
add
bound
dec
jmp
jno
push
notb
out
xor
jb
dec
mov
add
imul
mov
jo,pt
adc
int
scas
jne
xchg
pop
call
cli
cli
inc
in
test
shrb
pop
sarb
rorb
fisubl
sti
jne
aas
cs
add
aad
xchg
mov
push
mov
and
inc
out
outsb
movsl
cwtl
push
mov
cmp
icebp
xchg
pop
fsubs
and
jb
mov
std
jmp
mov
clc
mov
jecxz
in
mov
adc
push
adc
mull
shlb
fstp
mov
xlat
fimull
mov
inc
pop
ret
imul
sbb
inc
cwtl
popa
subl
insl
add
jge
jae
cmc
mov
inc
pop
and
mov
xchg
lret
push
sbbl
jb
in
push
pop
es
xorb
incb
xor
aas
in
std
xchg
scas
shlb
insb
aas
shlb
push
lods
push
or
mov
push
cmpsb
sub
pop
adc
je
cmp
adc
les
stos
pusha
push
test
mov
pushf
lods
xchg
and
xor
mov
push
test
push
sbbb
stos
insl
fs
xor
js
jno
lret
add
jecxz
push
clc
pop
test
mov
neg
fcoms
clc
inc
sbb
xor
dec
xchg
movsb
pop
cmc
sub
jle
xor
pushf
mov
lcall
fists
mov
not
mov
and
rcl
jle
int
andl
rorl
pusha
cmpsl
ret
sub
dec
jle
xlat
or
out
dec
aas
fwait
jae
imul
pop
jmp
rcll
push
push
aad
xor
inc
nop
jmp
xor
xchg
xor
fisttpll
xchg
mov
mov
imul
lds
cld
jle
jl
jle
std
mov
or
int3
adc
mov
mov
aad
ficoms
mov
data16
fs
jns
jno
lret
repnz
outsl
addr16
cld
repz
xlat
or
shl
shl
mov
xchg
push
mov
scas
inc
movsb
je
stos
push
xchg
push
lret
punpckhdq
and
push
repz
negl
arpl
cmpsb
xchg
lods
sbb
mov
mov
les
pop
gs
xchg
sbb
aas
pop
repnz
mov
in
cmp
sub
sbb
sti
cmc
xor
cmc
out
mov
mov
dec
jmp
push
in
icebp
add
push
jnp
jg
sbb
popa
clc
lods
or
mov
fstps
fidivrl
adc
xor
mov
lcall
shll
mov
lret
or
pop
sbb
imul
adc
popf
push
sbb
jo
pop
push
push
sub
xor
mov
mov
jg
mov
sub
add
loop
ja
xchg
lods
sbb
leave
sbbl
pop
mov
jmp
mov
jbe
sbb
lahf
insb
sbb
push
fldcw
test
push
aaa
cmpsb
roll
cmp
sahf
cmpsb
mov
in
push
out
dec
mov
push
clc
lea
into
inc
cmp
push
aas
push
cltd
pop
push
push
push
ret
mov
and
mov
dec
mov
lret
mov
loop
cmp
leave
cmp
adc
xchg
rcll
push
jp
shlb
push
fildl
cmp
popa
push
jne
xchg
imul
push
fs
mov
adc
scas
dec
mov
lret
dec
cltd
std
xchg
in
out
cltd
sarl
mov
aaa
add
ficoml
inc
int3
pop
rcrb
fldenv
imul
xor
sarb
in
push
loope
mov
or
cld
mov
mov
sub
icebp
jno
inc
and
pop
jl
push
imul
dec
add
ror
testl
dec
popl
mov
fnstcw
sbb
mov
pop
jge
ljmp
push
jb
sub
orb
cmp
aad
iret
sbb
xor
mov
scas
into
or
inc
aam
xor
mov
ljmp
pusha
jl
jbe
fdivrs
cmp
loopne
cmpsl
sbb
lcall
inc
icebp
cmp
push
movsb
jo
lcall
ret
sti
je
rolb
or
jge
jbe
inc
push
call
aaa
pop
pop
mov
clc
pop
dec
pusha
movsl
fwait
je
mov
divb
push
mov
add
rolb
pop
mov
jl
shlb
orl
jmp
cmp
js
push
lea
sbb
lret
inc
mov
dec
cmp
sub
add
int3
test
add
fldenv
jne
cli
daa
cmp
mov
icebp
xor
add
pop
push
iret
adc
adcb
in
clc
sar
jo
cmp
incl
stos
mov
pop
stc
xchg
push
pop
nop
jno
push
inc
les
jae
fldt
sub
and
jmp
add
pop
icebp
push
adc
cmp
pop
adcb
cld
sbb
sbb
jp
test
mov
clc
and
mov
sbb
or
cmpsl
fwait
lds
pop
dec
jae
in
sarl
sub
icebp
add
push
adc
mov
aam
xorl
test
ficoms
mov
push
xlat
pop
andl
repz
jp
roll
inc
xchg
inc
mov
push
test
lcall
lret
xor
lods
sbb
pop
js
sub
jmp
jns
push
or
xor
fisttpl
cmp
xor
mov
fdivrs
jmp
cmpb
daa
and
mov
or
enter
pop
and
sub
hlt
enter
test
out
adc
jb
xorl
sbb
bound
fcomp
mov
jns
movsb
jmp
inc
aaa
jnp
in
mov
scas
scas
lret
dec
lock
sub
adc
cmc
xlat
xor
mov
into
lea
mov
repz
nop
leave
repz
xchg
mov
aaa
aad
loope
loopne
cmp
pushf
in
cmp
inc
mov
test
add
jb
test
je
xchg
roll
enter
inc
into
arpl
lds
aas
ja
inc
adc
orb
les
out
iret
push
push
test
js
sbb
pop
xor
ret
mov
in
fists
xor
and
xchg
dec
mov
mov
xlat
xor
pop
enter
and
stos
cmp
push
dec
in
mov
es
leave
xchg
mov
jg
in
fcomp
mov
inc
in
jp
or
push
sub
and
xchg
in
cmp
cld
push
mov
shl
int
insl
sahf
lods
aaa
mov
add
mov
sub
lods
inc
mov
push
dec
sbb
push
jno
adc
pop
ljmp
jmp
push
add
sbb
dec
das
inc
fistpl
adc
shlb
xor
out
scas
mov
mov
cld
and
xchg
lea
repz
cmp
imul
mov
lock
ja
ficoms
jmp
repz
aas
sbb
dec
and
xchg
mov
adc
jae
pop
test
out
cmc
in
popa
adc
lea
les
dec
push
adc
sub
fbld
or
mov
in
in
push
jg
stc
rol
sub
sub
mov
pushf
sub
js
int
dec
les
int
aad
dec
aam
cltd
adc
ret
sbb
and
fadd
xor
dec
cwtl
scas
lcall
inc
cld
adc
mov
cmpsb
daa
cltd
and
dec
adc
adc
or
mov
movsl
mov
add
fidivrs
jl
and
ljmp
sub
mov
and
and
das
xor
decl
pop
cmp
dec
xor
sbb
add
sbb
and
aaa
fyl2x
pop
movsl
cmp
fcmovnbe
add
jno
std
test
dec
icebp
xchg
xlat
cmp
add
jne
dec
pop
mov
or
fstpt
xchg
jge
rcl
jns
imulb
pusha
das
mov
sub
mov
sub
push
mov
mov
inc
dec
mov
inc
fistpl
dec
lcall
sbb
faddl
push
test
loop
cmp
or
xor
lahf
das
lds
add
cmpsb
add
xor
ja
test
and
cmp
out
add
out
scas
adc
outsb
loop
push
and
test
pop
jecxz
cmpsl
mov
stos
xor
addb
and
mov
loopne
test
sbb
inc
sub
pop
cmp
pop
sbb
in
test
shr
pop
lcall
out
int
xchg
mov
mov
test
xchg
xor
ja
pushf
in
sbb
lea
les
and
xchg
in
cmp
add
mov
cmp
pushf
xorb
mov
jg
popl
cs
mov
ficoml
lock
pop
adc
mov
mov
inc
icebp
gs
shrl
test
or
pop
lcall
into
cmp
mov
inc
mov
dec
push
clc
insl
xor
imul
push
jl
xchg
sbb
imul
lds
adc
outsl
push
xchg
mov
fbstp
pop
cli
outsl
scas
dec
sbb
inc
push
ljmp
out
cmpsb
push
out
es
fnsave
test
clc
out
pop
cs
push
push
int3
pop
lea
sub
xlat
dec
xor
xchg
mov
into
jno
test
jmp
or
mov
fucomi
loop
push
repnz
icebp
movsl
in
xchg
lds
or
int3
sub
cmp
jle
pop
outsb
push
adc
pusha
aaa
mov
sub
lock
frstor
popa
mov
ja
into
daa
jg
pushf
fwait
jb
sar
dec
xor
stc
ljmp
pop
pop
popf
and
mov
xor
mov
mov
gs
lret
and
sti
cltd
xchg
xlat
pop
and
inc
aaa
ljmp
je
add
into
sahf
aad
aaa
das
and
cs
pop
add
or
into
lods
adc
das
or
jns
push
aam
push
jmp
insl
add
xchg
lahf
aad
mov
dec
mov
jae
jge
enter
inc
adc
sarl
movsb
jne
aas
test
adc
sub
dec
adc
aad
es
repz
mov
xorb
add
mov
inc
nop
lret
sub
in
fsub
mov
sub
cmp
push
pushf
mov
addr16
sbb
push
call
pop
mov
out
mov
rcll
int
ret
xchg
sbb
add
iret
addr16
jmp
fisubrl
mov
rolb
ror
and
mov
outsl
fcmovbe
pushf
in
xchg
out
leave
inc
mov
loop
sbb
movsl
out
xor
rcrl
lret
mov
sub
xchg
leave
scas
pushf
fs
in
out
loop
sub
inc
movsl
xchg
adc
or
rolb
mov
outsb
bound
sub
dec
mov
andl
jbe
jno
adc
adc
mov
jb
inc
jbe
sub
idivb
mov
mov
test
push
inc
jne
out
notb
nop
xor
insb
iret
hlt
mov
pop
sbb
mov
pop
xchg
cmp
sub
pop
jbe
psraw
lcall
outsl
test
inc
mov
int3
int
loope
xor
sbb
jo
or
scas
xchg
mov
cltd
fwait
fs
mov
gs
jns
and
imul
push
fwait
sahf
adc
jo
cld
ja
lcall
dec
mov
ficomps
mov
xchg
outsl
paddusb
mov
dec
ljmp
mov
ja
pop
mov
and
or
out
push
loop
mov
mov
ds
jo
jp
clc
jo
jo
cmp
mov
enter
jno
insb
icebp
push
mov
es
sbb
pop
loop
cmp
jo
scas
mov
fcomps
adc
cmpl
int3
test
cltd
ret
aaa
mov
cli
test
scas
aaa
and
pop
daa
push
pop
lret
jmp
xor
cs
pushf
or
sbb
cmp
icebp
mov
mul
lods
fwait
lret
pop
lods
inc
ret
push
pop
add
cmpsl
scas
inc
shr
cwtl
pushf
cmc
sub
pop
jmp
mov
jb
sahf
xor
sbb
test
aaa
adc
jno
les
xchg
addb
sbb
scas
sub
rcl
and
jae
mov
xor
push
xchg
jecxz
insb
and
pop
dec
ja
adc
push
and
jp
add
mov
addr16
aad
jne
mov
jmp
mov
decl
xlat
std
sub
xchg
pop
ds
pop
sbb
xchg
mov
out
gs
cwtl
push
cs
sub
and
clc
fsubl
push
outsb
cmpsl
int
mov
lock
mov
push
sub
lock
push
stos
subb
icebp
cmpsb
inc
popf
mov
inc
cltd
mov
adc
clc
and
push
icebp
xchg
xchg
pop
lock
aam
xor
jno
dec
test
loopne
lds
xor
cwtl
hlt
cmp
movsl
lret
or
jb
fisubs
in
mov
int
jg
sub
xor
or
jns
fdivs
aam
pop
or
es
xchg
lret
fwait
or
mov
movb
outsb
jae
rorl
loope
js
xchg
mov
xchg
data16
test
repz
shlb
dec
mov
jle
xchg
in
adc
pop
aaa
sti
xchg
mov
mov
dec
pop
pop
test
jbe
mov
mov
cmp
jg
jecxz
lds
add
mov
add
fldcw
mov
jno
push
data16
mov
rcrb
mov
adc
leave
sub
insb
push
jns
repnz
cld
push
sbb
imulw
cmp
mov
sbb
adc
sub
xlat
cltd
pop
adc
out
fsubs
cmp
jecxz
scas
arpl
sub
out
into
into
movsl
sbb
rorl
push
jo
jge
and
push
mulb
lcall
movsb
sub
test
movsl
cmp
jp
sbb
aam
arpl
push
inc
xorb
mov
pusha
sahf
lock
cmp
mov
dec
xchg
jecxz
cltd
call
sub
xlat
xchg
inc
addb
mov
into
lds
or
in
add
or
xor
mov
sbb
sbbl
pop
ret
int
jae
cmp
idiv
push
and
rol
and
fimull
rcl
nop
jl
enter
test
nop
mov
shlb
out
cmp
jecxz
sub
out
sti
xchg
sub
mov
mov
scas
roll
ja
and
jne
lock
outsl
cmc
jnp
mov
dec
das
cld
sbb
cmp
inc
insl
andl
icebp
push
test
and
gs
hlt
int3
mov
andl
movsl
sbb
inc
addl
das
jl
je
or
push
and
cmp
mov
nop
jp
stos
jg
fwait
nop
and
cmp
lods
mov
pushf
jge
pushl
call
or
adc
xor
mov
mov
movl
repz
cld
and
std
mov
adc
or
jl
shr
in
or
push
mov
mov
negb
sub
aaa
fiadds
cmpsb
lcall
lcall
mov
rcl
sub
dec
in
mov
sbb
or
lahf
add
aas
adc
out
in
outsl
rclb
fsubrl
bound
and
sub
push
pop
inc
lods
fildll
pop
adc
addl
stos
and
subb
mov
repz
scas
cmc
adc
jbe
enter
sub
ja
lods
arpl
xor
and
es
hlt
in
stc
cmp
mov
add
mov
inc
sbb
or
xchg
fbld
in
and
dec
xor
xchg
inc
lods
cld
ret
add
cld
mov
repz
cmp
mov
cmp
movsl
out
adc
arpl
in
sub
lods
hlt
push
int3
fdivl
aas
lahf
xchg
je
fidivs
out
xchg
sub
and
inc
in
into
pop
stos
jg
xchg
mov
sbbb
dec
scas
lret
sbbl
mov
sub
clc
adc
push
add
pop
mov
adc
bswap
xchg
mov
insb
jmp
movsl
test
or
pop
lcall
das
orb
push
xorl
mov
jb
and
inc
imulb
mov
mov
cld
fildl
xchg
xor
rcll
in
sub
jl
jge
rcl
and
jbe
mov
xchg
icebp
test
lods
pop
push
aas
jge
sbb
xchg
sti
mov
leave
and
pushf
lret
clc
and
mov
sub
les
lea
loopne
inc
inc
sbb
or
sub
outsl
add
sbb
sub
mov
aam
or
add
out
mov
ds
bndstx
sub
ret
enter
or
in
mov
cmovo
mov
cmp
fs
outsl
movsl
test
cli
and
ffree
mov
leave
mov
mov
movsb
popf
pop
xchg
jmp
sub
es
aas
aas
mov
push
fildll
rcrl
push
pop
inc
sub
mov
jl
pop
adc
cld
popa
mov
div
add
mov
jge
stc
jns
in
inc
fiaddl
xchg
mov
ja
xlat
repz
sub
ds
push
pop
or
mov
pop
lret
add
add
or
cmpsb
mov
int3
or
cli
outsl
dec
pop
xchg
pop
mov
or
fisubrs
jge
std
bound
je
popa
iret
adc
lods
add
mov
repnz
jbe
es
sbb
loopne
aas
mov
int
out
in
iret
aad
xchg
jmp
xchg
je
cmpsb
shrl
scas
loop
fs
jnp
xchg
jns
push
idivl
add
cmp
mov
imul
sub
cs
xor
cmc
loope
leave
ret
push
aam
jns
ljmp
out
mov
mov
push
data16
test
mov
aaa
fwait
mov
js
cmpsb
ja
dec
fnstenv
jb
or
mov
push
mov
pop
and
mov
cmp
ljmp
xchg
mov
icebp
pusha
mov
mov
adc
icebp
repnz
dec
cli
fdivl
test
hlt
mov
and
ret
leave
jne
repnz
pop
pop
pop
pop
and
js
dec
lret
fildl
fiaddl
inc
jo
jae
and
das
cmpsl
sub
imul
ss
iret
data16
xchg
xchg
lea
jbe
rcrb
fimull
hlt
mov
shll
int3
lock
dec
add
adc
in
ja
pop
cmp
arpl
jns
jae
lods
rolb
call
xor
lahf
jne
es
jae
jp
mov
pushf
stc
sar
repz
movsb
push
insl
jecxz
dec
cmpps
cmpsb
imul
daa
push
mov
fs
inc
pop
mov
xchg
add
or
mov
mov
mov
imul
and
push
stos
scas
ret
lock
les
imul
test
shr
ror
mov
ret
popf
pop
aas
insl
fs
lods
cmpsl
lods
daa
adc
mov
xchg
pop
xchg
fisubrl
xchg
xchg
test
sbb
pop
cltd
xchg
scas
lcall
sbb
hlt
subb
std
xchg
addr16
das
neg
scas
in
mov
mov
push
push
cmp
mov
dec
aam
sbb
mov
stos
sub
test
mov
movsb
cmpsl
and
jecxz
shlb
jle
push
adc
not
dec
mov
cmpsb
or
mov
in
xchg
xlat
and
jmp
iret
xchg
test
or
xorb
call
mov
mov
pop
fwait
mov
mov
test
dec
mov
or
cmp
push
push
xchg
jae
add
cmp
sbb
mov
inc
in
popa
push
imul
out
pusha
mov
push
mov
mov
xchg
push
push
xlat
xor
push
dec
mov
add
dec
pop
pusha
push
mov
pop
mov
jno
and
rclb
sbb
add
leave
add
lcall
cs
nop
xor
test
cwtl
and
dec
jae
mov
mov
int3
pop
stos
and
ds
cmpsl
orb
repz
jg
cld
pop
xchg
popf
pop
adc
imul
ljmp
fwait
outsl
sub
and
ja
lcall
jo,pn
mov
mov
mov
mov
je
xor
cmp
in
movsl
push
pop
cld
sub
dec
lcall
jae
fildl
ror
pop
ds
xchg
inc
cmpb
adc
outsl
jns
mov
and
xchg
leave
and
sbbl
mov
roll
cli
ja
dec
cltd
pop
xchg
insb
xlat
xchg
scas
and
jle
jne
pop
push
aas
sbb
mov
lcall
jnp
call
lods
in
fimuls
and
ja
mov
mov
xchg
pop
movsb
mov
dec
lahf
sub
pop
in
jle
outsl
mov
or
fsubr
lods
sbb
bound
in
or
or
ja
adc
lret
adc
out
jnp
mov
jo
inc
jns
iret
ljmp
insl
sbb
inc
jecxz
out
pop
mov
xchg
add
sbb
push
sbb
adc
inc
fistl
adc
aaa
in
or
movsb
lcall
popa
dec
push
inc
push
push
daa
js
mov
dec
mov
ljmp
out
xor
lcall
inc
add
dec
lea
cli
mov
adc
pop
div
pop
xchg
int
stc
and
sbb
xchg
js
mov
jno
lret
ret
imul
ret
cmpsb
lret
mov
popa
pop
pop
les
and
xchg
push
push
inc
into
mov
stc
lea
sbb
add
std
dec
cli
popf
jmp
sbb
dec
cmpsl
movsl
jb
ficomps
jb
lahf
fs
sarl
daa
in
divb
stos
pusha
pop
pop
mov
jne
rolb
das
mov
mov
in
data16
xor
pushf
jmp
jp
add
add
jbe
lea
sahf
mov
xor
xchg
in
jo
push
inc
pop
fmul
jg
add
mov
mov
mov
inc
jb
mov
pusha
jl
ret
adc
pop
mov
jae
out
rcrl
leave
scas
out
out
dec
imul
cmpsl
test
not
push
adcl
jmp
push
ljmp
jg
xor
es
hlt
sbb
popa
mov
mov
stc
shll
sti
rcl
int
mov
test
cs
adc
fwait
and
and
clc
out
xchg
and
or
sub
movsb
fsubrs
and
cli
sub
pop
movsl
in
sub
pusha
inc
movsl
jmp
jae
out
mov
fldt
gs
cs
xchg
add
mov
sub
pop
jl
cld
popf
pop
mov
loope
ljmp
outsl
xor
sub
test
add
xchg
push
lea
push
in
outsl
and
mov
dec
adc
add
mov
dec
adc
sub
iret
inc
and
lret
mov
inc
xor
sahf
mov
pusha
mov
test
leave
add
jmp
ret
sbb
add
push
cmpsl
test
sbb
test
clc
movsb
les
and
mov
mov
sbb
xor
stos
jle
dec
cmp
filds
dec
push
popf
fucom
ss
sub
mov
mov
aam
int3
sub
jmp
das
xor
adc
adc
fbstp
ror
fs
or
dec
ja
out
inc
in
cs
sbb
ja
xor
pop
push
sub
xchg
mov
cltd
andb
jb
xchg
shlb
cmp
sub
mov
rcl
into
addr16
test
hlt
dec
popf
cmp
mov
dec
inc
idiv
xchg
insb
das
dec
xor
pop
push
shrb
xchg
imul
jo
lahf
inc
mov
int3
into
xor
sti
pop
jp
imul
add
dec
out
and
mov
rorb
cli
maxps
xchg
out
fsts
push
cmpsl
cmpsl
add
stos
inc
hlt
ret
xor
jmp
fwait
pop
and
jmp
xlat
outsl
push
push
imul
jnp
mov
nop
arpl
popf
repnz
stos
stos
and
ret
mov
sub
inc
daa
inc
cmp
cmp
leave
mov
int3
sahf
in
lods
cli
jecxz
jo
jo
test
jo
or
testl
lods
mov
lret
xorb
pop
test
push
int
int
or
pop
fwait
cmc
cmp
repnz
cmp
pop
loop
js
hlt
ljmp
cmp
and
insl
or
sti
lods
dec
mull
sub
push
cwtl
xlat
adc
or
add
cmp
sti
bound
mov
adc
jo
std
jg
movsl
loop
sbb
xchg
arpl
lds
adc
push
inc
inc
jg
mov
aad
push
clc
mov
aad
xorb
add
insb
out
shll
leave
jge
pop
sub
push
pop
dec
pop
jge
inc
xor
push
je
out
push
movsl
icebp
sbb
inc
fidivrs
and
aad
push
test
jle
idivl
sbb
mov
inc
add
mov
lock
orb
cld
call
inc
cmp
fidivs
movl
dec
cs
ja
in
cmp
push
imul
repz
out
xor
fs
insl
add
jmp
or
and
add
cmp
loopne
int
subb
dec
mov
fnstsw
dec
insl
mov
test
aas
mov
push
and
ret
mov
lods
mov
jle
inc
movsb
aas
data16
jmp
out
inc
test
push
cltd
mov
mov
imul
orb
fnstenv
dec
mov
enter
arpl
pusha
shr
lcall
dec
push
fnstsw
push
jns
xlat
push
scas
sbbb
fmull
mov
or
test
sub
push
je
stc
jecxz
push
mov
cltd
cld
inc
sub
or
push
pop
lret
xor
les
sbb
insl
xchg
cmp
cmc
test
jb
mov
sbb
jg
daa
in
ss
jmp
cmp
mov
test
xor
out
pop
das
cltd
mov
xchg
jmp
push
cmpsb
mov
sub
das
xchg
and
and
pushf
call
aas
mov
sub
mull
mov
xor
shl
add
mov
mov
lods
sbb
js
cmc
mov
loopne
loope
jae
pushf
aaa
nop
out
loope
in
fistpl
xchg
add
push
pop
sti
fldcw
fadd
push
test
jns
push
divl
and
jno
cmp
pop
push
mov
or
lret
out
andb
aam
and
cmp
ja
into
adc
sub
imul
mov
pop
sub
and
sub
pop
sti
sbb
mov
fldl
jb
sbb
ds
in
and
inc
fcoml
aas
in
fbstp
jne
sub
xchg
lahf
mov
push
xlat
push
pop
es
loop
dec
push
dec
movsb
cltd
mov
sarb
cld
cli
sub
inc
and
mov
sbb
dec
xor
popf
insl
lahf
push
mov
pop
imul
pop
data16
xchg
cmp
sti
pop
rcrb
push
mov
mov
imul
pop
leave
push
in
out
dec
gs
jl
out
mov
xchg
mov
dec
enter
fildl
sub
stos
fists
loop
scas
inc
push
divb
or
xchg
mov
jae
int3
lock
jmp
sub
outsl
int
adc
sahf
les
dec
inc
iret
cmpsl
mov
cli
insl
popf
fcmovne
inc
js
jmp
and
es
fs
pop
and
jns
push
int3
shr
lock
lods
jb
popf
in
pop
punpckhwd
out
lock
sbb
in
rorb
and
es
lock
adc
mov
gs
pop
test
pop
xor
jg
pop
sub
xchg
cwtl
pusha
mov
push
push
xor
sbb
dec
sub
pop
mov
mov
cmp
in
out
cmpsl
rcll
jp
ja
dec
xchg
roll
cli
or
fnsave
mov
lock
jbe
loopne
enter
popl
daa
rcll
cltd
stos
xchg
mov
js
mov
mov
stc
add
test
mov
ret
clc
dec
xor
pop
xchg
dec
push
outsb
je
sub
fdivs
and
into
pop
jb
pop
lret
repz
mov
inc
adc
sahf
or
push
or
xor
push
in
aam
adc
fidivrl
lcall
pop
add
jmp
out
in
lods
adc
mov
pop
mov
cmp
loopne
pop
aas
mov
dec
xorl
inc
and
mov
pop
jns
xchg
add
xor
insb
inc
call
stc
mov
sub
lret
nop
jbe
lods
rcr
int
pop
flds
cltd
hlt
hlt
enter
push
mov
or
xlat
sub
je
lods
lock
pop
cmpsb
orl
and
mov
inc
or
cwtl
jae
cmp
lods
pop
add
cltd
fisubrl
dec
iret
push
fldenv
push
stos
in
js
jne
pop
inc
pop
fistpl
lods
mov
aad
xor
dec
push
sub
arpl
xor
mov
inc
sbb
ficoms
mov
pop
cmpsl
out
ja
addr16
xor
mov
stc
repnz
fwait
bound
mov
cmp
xchg
pop
in
sub
mov
mov
and
xorb
divl
imul
lcall
pop
cmpsb
add
adc
xor
vdivpd
cmp
movsl
jmp
adc
adc
xor
mov
xchg
cmp
stos
sahf
dec
scas
mov
outsl
xor
push
mov
test
xor
fdivl
or
push
out
fdivrl
es
idiv
push
outsl
movsb
and
out
jo
mov
or
dec
xor
mov
cmp
test
xor
fsubrp
jnp
in
xor
xchg
add
int3
daa
dec
roll
test
int3
cld
out
jae
movsb
or
movsl
sbb
pop
dec
cld
mov
lods
lds
js
lcall
ret
cmp
addb
push
push
lcall
lock
pop
xor
inc
clc
jnp
mov
mov
and
clc
out
cmp
movsb
add
loope
mov
mov
jecxz
mov
imul
mov
call
mov
je
dec
xor
mov
inc
mov
sbb
pop
lret
push
je
push
and
cwtl
mov
cmp
mov
mov
jne
icebp
or
es
ret
pop
sbbl
mov
or
sbb
cld
jno
cmc
mov
cmp
xchg
ret
cmp
xor
das
cmp
xchg
test
movsb
and
cmpsl
xchg
std
aad
mov
mov
jnp
jl
lret
xchg
xchg
or
pop
repz
decb
jge
mov
push
fdivrs
lret
pop
jmp
cmp
test
fldt
pop
sbb
mov
mov
sub
leave
cmp
lock
fisttps
inc
icebp
gs
and
jbe
call
fs
jg
dec
push
mov
das
cli
xchg
pslld
jo
jge
sub
push
mov
cmp
pop
xchg
xlat
rorb
ss
add
sbb
cwtl
repz
add
adc
xor
popa
pop
jle
xor
push
xchg
mov
loopne
insl
mul
dec
sbb
ss
sub
add
xchg
test
aas
jg
add
fs
imul
data16
pop
imul
lods
bound
mov
jnp
sub
das
dec
pusha
add
cmp
dec
push
cmpsb
adc
push
je
les
push
jb
inc
jge
insb
mov
in
das
in
push
jg
cmpsl
xor
enter
add
insb
lahf
sbb
cmc
dec
dec
iret
and
add
popa
roll
ja
dec
jge
adc
les
sub
ret
push
in
push
pusha
xor
in
mov
mov
stos
cmovo
imul
test
push
push
and
jp
lds
push
and
sahf
repz
cmp
fwait
xor
scas
icebp
jbe
test
test
mov
fiadds
std
push
mov
adc
call
popa
jae
in
sbb
cmpsb
xchg
imul
jns
jb
pop
sub
add
cmpsb
cltd
js
test
dec
lock
in
jl
fsubl
fs
es
cmp
cs
ret
cld
pop
dec
stos
mov
jg
mov
fmuls
jge
add
mov
mov
xchg
cmp
imul
test
in
sub
fnstcw
mov
fnsave
xchg
push
push
or
movl
stc
push
cmp
ret
and
pop
mov
pop
push
in
push
pop
arpl
cmp
sbb
fimull
sarb
mov
push
inc
jno
dec
popl
into
mov
pushf
ss
mov
enter
and
ja
aam
addr16
push
push
push
int3
outsb
xchg
jl
sub
jb
outsb
lock
in
lds
or
enter
test
lret
jo
subb
push
or
outsl
pop
enter
movsb
mov
xlat
xchg
test
lock
aaa
or
jo
aaa
int
xchg
mov
pusha
pop
out
out
loop
testl
ds
fisubrl
xchg
jae
jne
mov
xor
sbb
push
sub
cmpsb
rcrl
scas
scas
push
decl
fcmovnb
movsl
mov
and
fnstenv
jb
sbb
daa
stos
mov
fwait
int
mov
test
mov
and
or
sbb
cld
xor
imul
inc
pop
pop
adc
fsqrt
xchg
pop
jno
adc
xchg
mov
cmp
ss
pop
mov
xchg
test
adc
cmp
ret
or
out
add
lahf
mov
iret
stos
mov
xor
xor
add
xchg
jb
inc
scas
popa
xor
lret
jne
ds
ror
dec
cmc
xchg
xchg
jae
es
clc
jecxz
adc
lahf
cmpsl
negl
mov
dec
fcomi
out
xchg
jbe
mov
pop
sbb
les
push
ljmp
aaa
ja
push
cli
dec
adc
nop
shll
xchg
test
mov
push
cmc
in
push
sub
loopne
push
rolb
cmpsb
iret
mov
xchg
mov
mov
inc
loopew
sub
mov
jbe
xor
pop
aas
inc
mov
adc
jb
rcrb
inc
mov
xlat
push
aaa
aam
inc
nop
push
cli
scas
mov
fstl
and
xchg
jecxz
cli
addr16
mov
out
cmp
cmpsb
out
imul
jne
dec
lock
and
fcoml
inc
jb
inc
or
push
movsl
out
out
cmp
pop
leave
mov
insl
call
testl
lea
ficoml
mov
xchg
mov
loop
jno
mov
mov
in
mov
insb
xor
divl
negb
jl
jmp
pop
frstor
or
mov
fwait
adc
cmp
cli
sub
insb
popf
or
push
pushf
out
jno
mov
xlat
lods
lret
in
fadd
mov
ret
sbb
mov
sbb
mov
sarl
test
push
or
mov
shlb
pop
add
add
cmpsl
mov
add
test
push
pushl
shlb
bound
mov
add
out
adc
cmp
sbb
sbb
sub
mov
push
or
lahf
xor
mov
inc
loope
std
adc
cmc
push
flds
or
jae
add
test
dec
sbb
outsl
pusha
sbbb
cmp
push
into
scas
xchg
lea
dec
adcl
jp
mov
mov
out
add
std
test
xor
decl
daa
cmp
popa
fwait
push
push
or
test
xchg
aas
add
scas
mov
jo
and
in
mov
xchg
mov
pusha
enter
adc
mov
xchg
out
daa
hlt
pcmpgtd
add
ljmp
outsl
xchg
lcall
iret
xchg
cli
addr16
enter
mov
jnp
and
imul
les
in
add
imul
and
in
jle
sub
mov
pop
add
lds
fsubrl
shlb
mov
je
xor
dec
push
aaa
xor
dec
dec
push
inc
push
mov
movsl
jge
enter
xchg
jle
pop
jno
cmp
les
mov
push
lret
jmp
mov
cmpl
out
push
adc
filds
push
cmp
sub
ret
in
jb
xor
or
arpl
ret
push
shll
jmp
negb
out
pushf
adc
or
dec
jnp,pn
iret
pushl
jae
add
lcall
adc
push
mov
inc
cwtl
out
push
out
out
repnz
fcompl
fwait
int3
sbb
addl
cwtl
push
in
xchg
push
sbb
cmpsb
pop
hlt
cmp
imul
dec
xchg
adc
loop
push
cmp
sbb
xchg
iret
push
dec
jo
daa
fisttps
jo
and
inc
aas
fisttpl
arpl
mov
rclb
out
mov
inc
fisubrl
mov
mov
fcoms
ja
sub
in
inc
enter
adc
lods
rcr
sarb
xlat
or
pop
cmpsb
cwtl
dec
cltd
mov
lcall
scas
rcrb
jg
push
jns
push
sbb
mov
pop
adc
lahf
adc
scas
in
leave
out
adc
pushf
stos
bound
sbb
mov
and
xchg
fs
aam
popa
and
movsl
lea
andb
rclb
ret
data16
jbe
lea
aaa
stos
in
mov
sbb
jecxz
mov
ret
mov
out
sbb
bound
movsl
mov
bswap
pop
sbb
jns
cmpsl
fiadds
push
ss
subl
mov
add
mov
in
cmp
mov
pop
lret
sti
xchg
popa
pop
sahf
insl
sub
bound
adc
jecxz
add
fdivrl
jge
inc
cmp
cltd
push
cmp
xchg
mov
sub
andb
loope
movsb
pop
mov
gs
mov
push
push
xchg
lea
cwtl
fldt
push
sbb
adc
dec
rcr
pushf
push
repnz
lods
sbb
push
sbb
mov
jo
lods
aad
popa
push
roll
fcomip
dec
inc
je
clc
stos
dec
inc
movsl
xor
pop
push
pop
out
lds
and
jecxz
dec
pop
test
rcll
mov
sub
push
lods
xor
mov
lods
adc
add
popf
mov
sarl
xchg
push
or
cwtl
outsb
rcll
out
dec
xchg
lahf
mov
jbe
mov
enter
push
lods
in
mov
es
nop
scas
ret
lock
inc
adc
insl
hlt
je
cwtl
sbb
out
std
cmp
sahf
cmp
dec
mov
push
xor
inc
ljmp
aas
mov
add
out
xchg
stos
stos
and
rcl
mov
rcrl
hlt
fwait
mov
xchg
aam
mov
out
icebp
jbe
push
hlt
es
movsb
mov
dec
jo
stos
out
add
pop
repz
dec
outsb
xor
pop
popa
jmp
neg
mov
rol
fwait
jno
pop
ljmp
inc
add
sub
iret
sbb
adc
add
dec
adc
leave
cmpsl
add
test
sub
ret
out
into
jecxz
lret
inc
pop
push
ds
loop
lock
stos
dec
cmp
roll
cmc
and
in
test
mov
scas
popa
mov
cs
lea
pop
sbb
pop
sub
sahf
mov
pop
add
lahf
mov
sub
mov
inc
xchg
adc
insl
inc
push
add
int
leave
ds
std
cltd
pop
lods
inc
lds
test
sbb
rclb
xor
stos
pop
xchg
unpcklps
dec
sub
stos
xchg
push
mov
sub
test
sub
dec
add
lock
push
cmpsb
push
outsl
and
mov
fidivrs
fsub
and
inc
pop
mov
sbb
in
adc
or
ret
iret
mov
out
stos
dec
xlat
cmp
icebp
popa
add
insl
cltd
jle
out
out
ret
arpl
jmp
inc
push
repz
lods
int3
add
dec
sbbb
push
je
push
pop
jo
test
xor
popf
scas
jnp
les
fsubl
cmp
rcll
jmp
lahf
mov
mov
imul
cmp
outsl
inc
test
mov
test
shll
lret
shll
sar
mov
cmp
xor
pop
mov
jmp
repnz
das
jle
aad
xchg
fildl
loopne
add
loop
cmpb
inc
out
cld
bound
mov
add
mov
insb
mov
inc
pop
clc
ja
shrb
and
in
fadds
xchg
xchg
mov
push
mov
xchg
sub
mov
cs
or
aam
and
xor
mov
outsb
sbb
xchg
adc
and
xchg
mov
jae
jne
pusha
mov
mov
sarl
push
xchg
mov
sbb
std
xchg
lock
cmpl
sub
cld
mov
addb
mov
pop
xlat
mov
fwait
cltd
push
push
hlt
push
dec
cmc
lods
lcall
arpl
mulb
movsl
popa
jae
xor
std
jp
adc
or
or
add
enter
inc
es
dec
sub
in
xor
cli
pop
jecxz
mov
mov
cmp
inc
jle
in
adc
pop
lock
sub
outsl
mov
adc
xchg
add
dec
jae
into
xchg
adc
push
fisubs
mov
jp
mov
mov
mov
cmpsl
sbb
pop
dec
imul
imulb
lret
iret
dec
mov
test
mov
out
lock
sub
rolb
imul
popf
in
cli
movsl
gs
dec
pop
cmp
dec
arpl
add
jnp
cwtl
hlt
sub
mov
add
xlat
xchg
clc
mov
cmpsl
jo
jg
mov
pop
mov
sbb
inc
clc
ljmp
fldl2t
sbb
ss
pushf
repnz
xchg
push
outsl
stos
or
roll
aaa
movsl
fs
movsb
lea
ljmp
inc
add
dec
mov
adc
push
orb
mov
mov
mov
data16
or
jno
add
jno
scas
in
add
sub
shrb
push
jo
jge
fildll
jecxz
arpl
adcl
cs
es
xchg
subb
fs
fstps
xchg
aad
pop
shrb
sbb
fsubrs
dec
sarl
mov
mov
loope
cmc
xchg
add
mov
mov
inc
loop
add
sbb
pop
sub
out
dec
pop
fcomip
mov
cmp
xchg
fisttpll
lods
inc
test
imul
shl
cmp
sbb
stos
popa
aad
jg
inc
mov
pop
mov
and
add
dec
inc
xchg
outsl
icebp
adc
cmp
sub
std
sbb
cli
mov
movsb
mov
movsl
insl
mov
cld
scas
adc
into
or
scas
insb
int
lds
mov
loopne
loope
ffreep
and
mov
pop
imul
jnp
xor
mov
les
cmp
test
xorb
xor
pushf
decb
push
sub
loopne
lcall
popf
out
pop
jns
fnstcw
and
xchg
cmpsb
mov
pusha
pusha
fs
jno
and
dec
jle
adc
addr16
xchg
nop
xor
pushf
ljmp
sahf
orb
hlt
data16
jecxz
js
xchg
dec
xchg
and
sbb
pusha
push
jae
sbb
int3
popf
aad
sbb
pop
ss
int
adc
pop
test
or
enterw
scas
out
lcall
add
jne
rep
sub
fs
repnz
push
pop
and
test
mov
cs
je
jge
mov
out
mov
jno
pop
roll
and
fisubl
fcompl
xchg
test
mov
lods
inc
pop
je
jp
jg
inc
sbb
and
push
icebp
adcb
out
nop
pop
insl
cmp
stos
push
repz
pop
jne
add
xchg
push
jae
push
outsb
adc
push
out
and
pop
int
aaa
clc
dec
cli
movb
jecxz
in
mov
sub
and
sub
pop
fsubl
das
adc
push
xchg
insl
jnp
sbb
ret
xor
mov
jg
cltd
jb
ds
popf
cli
nop
mov
stos
ret
cmpsl
loop
js
xchg
jns
lret
add
cmp
sub
pop
xor
xor
es
incl
lahf
mov
sub
test
adc
mov
mov
mov
fcmovu
shlb
daa
cmp
icebp
jg
add
push
mov
inc
imul
mov
sub
xlat
jnp
inc
pushf
sub
add
cli
and
cmp
aad
sbb
push
jb
mov
dec
je
mov
or
dec
movsl
add
lret
sbb
addr16
aam
scas
push
mov
add
hlt
aas
sbb
mov
mov
std
sbb
jo
xor
loopne
xchg
sub
add
adc
aaa
and
je
xor
mov
jb
mov
mov
subb
pop
movsl
rcl
bndstx
cmp
adc
pop
jae
push
xchg
les
mov
cmp
and
movsl
dec
shl
hlt
pop
pop
mov
out
pop
testl
pusha
shr
dec
cmp
push
nop
icebp
jp
lret
adc
jp
adc
mov
addr16
nop
lds
lret
dec
xchg
push
push
out
add
push
sub
movl
insl
sub
inc
js
mov
aam
dec
mov
jae
and
imulb
les
xor
jns
outsl
adc
jp
cmp
and
fstpt
stos
adc
dec
repz
movsl
push
mov
adc
jae
stos
jle
lock
cmpsl
stos
sbb
sbb
jecxz
sbb
lret
lods
sarl
and
cwtl
icebp
push
movsb
or
dec
aad
insl
filds
xchg
dec
lcall
or
out
add
and
int3
leave
iret
js
xchg
mov
dec
jno
inc
shl
add
in
cmp
jmp
or
pop
mov
xor
xchg
mov
lock
mov
clc
push
test
ja
inc
jmp
and
adc
sahf
enter
aam
out
pop
sub
std
in
mov
add
sbb
add
mov
cmp
je
jb
fwait
scas
roll
sbb
sub
shr
int3
mov
sbb
pop
mov
iret
push
push
xor
lcall
iret
fwait
aas
add
and
sbb
stc
aad
jmp
call
rcrb
outsb
inc
loop
test
scas
movsl
xchg
push
popa
in
sbb
aad
cmp
pop
mov
movsb
pop
dec
loope
loope
cli
les
leave
inc
cs
and
repz
mov
repnz
dec
jl
push
aas
cmp
ds
inc
addr16
inc
sbb
dec
dec
mov
pop
xor
sbb
push
inc
notb
nop
movb
mov
lcall
mov
fistpll
pop
xchg
mov
repz
cwtl
xchg
sub
sbb
es
add
cmp
push
stc
cwtl
adc
in
sbb
and
cmpsb
sti
fsubrl
aas
mov
fs
lds
aaa
fldt
loope
filds
fiadds
fildll
repz
fnstcw
int
int
mov
pop
sbb
mov
xor
or
inc
xchg
add
adc
jne
mov
mov
sub
popf
sbb
int
mov
outsl
jmp
leave
je
mov
mov
mov
imul
mov
in
mov
sub
into
mov
sub
stc
and
js
xor
insb
inc
pop
js
in
std
aaa
gs
add
push
movsl
jl
clc
jo
dec
clc
lahf
mov
adc
dec
add
lds
inc
push
adc
adc
mov
sbb
adc
dec
mov
mov
popf
push
sub
xchg
cli
out
faddl
sub
pop
movsl
loop
cmp
lret
add
fistpll
sub
xchg
mov
js
popf
mov
mov
or
cmp
mov
sub
loope
inc
sbb
call
stc
jge
cmpsb
or
mov
fistpll
mov
mov
adc
or
xlat
scas
hlt
mov
mov
xor
lret
mov
push
push
loope
dec
push
adc
cmp
scas
jbe
lahf
lcall
pusha
mov
push
in
push
jp
test
xchg
enter
add
xlat
ret
stc
inc
leave
inc
push
ficoms
test
pop
bound
aad
xchg
gs
mov
mov
inc
jae
or
lret
loopne
push
mov
adc
sbb
sbb
pop
mov
push
js
test
adc
cmpsl
into
into
cmpsb
xlat
lea
ss
lret
insb
push
mov
js
shrb
negb
mov
movsb
xchg
js
mov
loope
jns
int3
jne
mov
or
jmp
lcall
daa
pop
jmp
or
test
mov
xchg
fbld
test
sub
loop
aad
enter
inc
jno
pop
xor
inc
mov
incl
out
mov
imulb
insl
adc
ret
jle,pn
hlt
rcrl
sbb
icebp
lock
push
dec
jae
sahf
fnstsw
add
cld
test
sbb
push
jns
xchg
jle
and
cli
jmp
pusha
dec
iret
outsl
imul
inc
adcl
push
cwtl
cmpsl
mov
stos
sbb
sub
stos
mov
xchg
fisubrl
mov
sbb
jge
stos
icebp
push
ds
cwtl
frstpm(287
jae
out
stc
loope
insl
cwtl
aad
int
add
dec
xor
imulb
icebp
sub
and
pusha
lcall
lea
sbb
mov
lahf
push
ret
insl
cmpsb
sbb
sub
mov
pop
cmpsb
jno
or
jo
aam
ret
sub
pusha
or
add
test
jns
cmp
int3
push
fwait
pop
shrl
mov
pop
or
not
in
xchg
push
ffree
mov
sub
mov
xor
or
jg
test
push
xchg
faddl
add
push
jmp
sahf
iret
xlat
sti
in
ret
stos
adc
scas
std
repz
lock
out
cmp
push
push
daa
mov
pop
gs
add
jecxz
icebp
cmp
or
cs
clc
adc
sub
mov
or
int3
jne
add
sub
push
fnsave
mov
aas
cli
out
xor
xchg
insl
sbb
lods
mov
fisubs
xchg
or
jno
fists
push
lock
lret
pushf
pop
daa
fdiv
push
pop
jecxz
cmp
push
cli
or
xchg
jecxz
ss
sub
push
dec
notl
shll
xchg
add
cld
and
imul
pop
stos
jg
jl
lods
int
rolb
je
push
popf
push
dec
lahf
jne
ds
inc
or
mov
js
std
and
pusha
nop
sarb
pop
adc
mov
push
fbld
fs
ja
mov
cmp
lahf
call
cmp
fistpll
push
shlb
add
jae
pop
sub
pop
add
in
and
jp
adc
pop
clc
push
mov
mov
adc
push
pop
xor
cs
mov
jp
or
mov
cs
sbb
xlat
frstor
dec
and
and
sub
push
lea
inc
das
stc
lret
orl
fs
into
inc
sti
aam
push
xchg
bound
scas
loope
dec
or
movlhps
aad
mov
aas
nop
jb
xbegin
leave
dec
iret
js
pop
cltd
arpl
stc
xchg
jo
push
pop
cli
xor
or
test
xor
cmp
pop
mov
adc
dec
dec
mov
xor
outsb
andl
inc
cmp
data16
or
and
pusha
lods
or
and
cli
sub
and
dec
mov
mov
pop
mov
out
ficomps
mov
fdivl
shrb
mov
adc
fcmovnb
lods
cmc
ja
imul
aaa
or
gs
cmp
xor
mov
scas
add
clc
jg
pop
fs
cli
adc
sbb
test
cld
pop
loop
bound
cmp
and
jnp
adc
mov
pop
pop
loope
sbb
xor
je
dec
adc
mov
mov
push
push
jbe
xor
clc
outsl
mov
jno
test
pop
cmc
mov
mov
aam
popa
lock
sbb
in
mov
mov
pusha
jle
mov
daa
cmp
aam
xor
xchg
jo
sub
fistpl
xchg
mov
mov
fldenv
pop
jne
cmp
adc
pop
aam
dec
add
jge
dec
push
fnstcw
push
push
addr16
lret
mov
lahf
lret
insb
aaa
and
add
add
xchg
mov
inc
out
mov
popf
pop
push
movb
jo
mov
jge
ret
pop
mov
push
sub
xor
jb
test
sub
hlt
add
inc
test
loope
sti
lods
out
lock
pop
enter
jns
out
mov
stc
jns
mov
fsubr
sbb
jp
jp
dec
in
andl
push
cli
mov
inc
mov
or
or
dec
jae
imul
push
pop
pop
hlt
mov
ds
push
shrb
pop
fistps
dec
lret
mov
cwtl
popf
sar
mov
xchg
xchg
inc
cli
ds
jns
outsb
cmpsl
ds
mov
xor
and
js
inc
fldl
mov
pop
cmpb
icebp
push
test
sbb
and
flds
xchg
mov
popa
ret
mov
push
and
mov
lret
jle
sub
cli
xor
ljmp
orb
xchg
cs
test
out
das
push
cwtl
ret
push
xchg
and
push
jle
popa
repnz
fisubl
sbb
inc
xchg
cmp
js
inc
stos
aaa
adc
dec
mov
sub
cmp
jg
gs
or
ret
out
dec
loop
xchg
mov
push
js
inc
mov
cmp
dec
fs
xor
push
ret
jb
addr16
insb
js
decb
mov
lods
dec
jb
ljmp
jle
inc
xchg
sar
pop
add
push
in
movsl
lret
mov
mov
adc
in
or
xchg
ret
mov
sbbb
mov
cwtl
fwait
sbb
sbb
xchg
adc
push
cmp
ret
and
mov
pop
or
inc
rorb
cwtl
mov
fstpt
insl
sub
pusha
test
sub
mov
jecxz
es
insb
in
sub
aas
pop
js
lods
es
dec
icebp
or
jnp
xchg
mov
int
or
in
push
cwtl
mov
insb
add
aam
sahf
dec
cmp
pop
inc
xchg
in
ret
js
mov
outsb
mov
lea
mov
ret
dec
jb
xchg
push
adc
dec
fbld
cli
cmp
outsb
clts
sbb
lds
xor
arpl
stos
add
movsb
dec
inc
jae
push
insb
adc
shl
fisttpl
cmc
nop
dec
in
cmp
dec
lret
push
jl
dec
out
aas
lahf
loopne
popa
push
popa
jne
mov
inc
add
test
jmp
out
scas
push
dec
adc
fcmovnb
xor
pop
shlb
fsubl
mov
mov
mov
cltd
call
mov
mov
lea
data16
cmp
cmp
lods
or
mov
into
inc
daa
inc
cmpsl
mov
and
push
mov
sti
sbbl
mov
push
loopne
call
mov
pop
or
out
sub
arpl
mov
sub
cltd
lret
sub
fldenv
mov
push
jp
pop
and
and
pop
adc
pop
movsl
aam
adc
jge
pop
insb
je
lret
adc
out
ret
push
pop
in
and
jmp
fmuls
push
faddp
inc
cmpsb
hlt
mov
mov
and
in
fldt
out
cmpsb
mov
gs
testb
icebp
mov
sbbl
leave
call
jnp
and
jbe
test
xor
mov
mov
jnp
push
test
notl
fwait
xor
mov
sti
lods
daa
lea
mov
lcall
das
lock
mov
divl
test
jp
loop
iret
rolb
jae
mulb
insl
rcll
mov
xchg
fistpl
repz
fimull
jecxz
pop
ror
jg
rclb
mov
out
in
or
mov
jl
negl
pop
push
push
push
rcll
in
rep
mov
daa
adc
in
push
add
sub
inc
into
lahf
xor
jae
add
rol
adc
dec
fdivl
push
fistpll
cmpsb
fmull
aaa
gs
ds
jb
popa
or
adc
adc
fsts
mov
push
lock
lahf
and
dec
lret
adc
jae
in
add
out
adc
adc
out
dec
into
mov
cwtl
icebp
pop
insl
jmp
cmp
inc
fildll
cmp
test
notb
imulb
jmp
stc
xchg
push
pop
add
add
sbbl
jl
mov
jo
sbb
or
cs
sub
inc
int3
lret
sub
stos
mov
ret
sub
cld
fimuls
push
inc
xchg
out
std
dec
dec
std
repz
insl
cwtl
cmp
jne
pop
xchg
mov
test
mov
addr16
outsl
pop
adc
cs
xor
ljmp
ret
loopne
mov
jb,pt
xchg
and
test
push
jge
cld
pop
or
or
test
dec
mov
dec
dec
xchg
adc
rcl
adc
std
inc
imul
in
popa
dec
out
push
in
insl
inc
push
sbb
loop
cmp
pop
iret
pop
fld
sub
xchg
out
ja
sahf
inc
lods
arpl
sbb
hlt
mov
push
xlat
das
mov
sbbl
enter
jmp
sub
ljmp
orl
icebp
mov
adc
mov
jmp
add
fs
shll
jl
xchg
stc
arpl
pusha
xchg
adc
push
mov
mov
lods
test
and
pop
jae
out
rorl
pop
sbb
adc
cltd
cmpsl
xor
jmp
cltd
cmc
xchg
pop
inc
adc
or
iret
cld
repnz
ret
jne
aaa
or
int
xor
call
ror
cmp
mov
mov
das
addr16
mov
xor
xlat
cli
add
jl
inc
test
lods
xchg
adc
stos
loop
or
fstpt
jo
lret
push
clc
sbb
adc
push
jge
inc
sbb
fsubl
inc
scas
sbb
insl
fnstenv
cmp
repnz
sbb
jg
fistl
out
sbb
ret
jnp
int3
ljmp
sbb
adc
jecxz
sub
test
jle
dec
push
add
sub
ds
pop
jmp
inc
add
nop
inc
mov
inc
adc
loop
cs
popf
pop
daa
or
out
imul
and
aas
nop
xor
push
cld
add
mov
and
inc
jno
add
fstp
lret
push
fwait
or
call
cltd
push
rcrb
movb
sbbb
mov
sbb
mov
or
sub
bound
std
lret
dec
cmp
add
push
mov
inc
addr16
les
popa
call
inc
mov
in
sbb
ds
hlt
popf
movsb
lahf
mov
mov
loopne
fadds
push
imul
jnp
pop
add
lods
loope
sbb
or
add
or
into
xor
call
sub
adc
jg
push
xchg
pop
sub
push
xchg
xor
push
movsb
scas
inc
or
fcmovbe
inc
sub
mov
push
sbb
or
dec
nop
daa
out
add
testl
inc
insb
cwtl
mov
push
nop
lock
jl
mov
xor
mov
mov
es
aad
xchg
mov
leave
mov
in
push
fmull
aas
and
jmp
xchg
loop
dec
cmp
out
adc
cmp
pop
dec
sahf
test
xorl
into
cmovno
jg
mov
in
imul
outsl
js
xchg
sub
repz
cmp
sub
mov
cs
jmp
mov
repz
ficoml
lret
jb
push
rorb
inc
leave
dec
orl
nop
sbb
and
xchg
test
aas
std
out
sub
add
dec
cwtl
inc
shl
push
mov
mov
out
jbe
mov
dec
mov
fs
inc
js
imul
mov
int
fidivl
int
out
xlat
sbb
lods
pop
push
lods
cmp
mov
scas
test
jne
sub
xchg
push
out
jo
push
rcr
dec
push
push
loop
push
popf
ret
in
mov
daa
daa
or
daa
jns
xchg
dec
sub
and
xchg
inc
jbe
fdiv
sub
inc
push
or
sbb
insl
test
dec
aas
jns
adc
adc
cvtps2pd
jnp
add
add
ret
mov
or
orb
call
push
push
xor
pop
mov
mov
sub
decl
test
mov
and
pop
prefetch
inc
arpl
xchg
lret
mov
iret
repnz
data16
test
and
push
mov
es
setg
sar
inc
mov
mov
add
cld
mov
aas
mov
sbb
das
mov
sahf
pop
xchg
repz
mov
dec
jne
sbb
dec
add
sbb
sahf
das
lea
push
inc
push
rol
and
push
bnd
out
mov
add
outsb
nop
sub
daa
ds
cmp
mov
xor
mov
icebp
cmp
aam
xchg
gs
mov
mov
push
out
cmc
lods
test
rcrl
into
call
dec
sbb
sti
jo
push
adc
out
lds
cmpsl
mov
or
ljmp
jae
inc
add
xchg
jno
and
aas
xchg
gs
gs
and
pop
mov
out
pop
imul
pop
lret
out
hlt
xor
fldenv
xor
mov
sbb
rcr
inc
in
or
shlb
sbb
lds
mov
mov
hlt
push
std
in
xchg
ds
hlt
mov
test
mov
inc
stos
dec
adc
jno
pop
mov
hlt
pop
repnz
cld
jb
jle
or
lods
add
test
jb
adc
ja
sub
dec
jmp
sub
fstpt
repz
pop
or
dec
sti
sbb
pusha
orb
xchg
lock
xchg
bound
jecxz
je
pusha
sarb
repnz
cmpb
movsb
mov
popf
test
xchg
adc
mov
inc
mov
dec
and
or
cmpsl
popa
int
icebp
int
add
gs
mov
add
dec
jp
add
jns
out
pusha
adc
outsb
jmp
mov
jnp
mov
ret
xchg
test
aad
xor
and
mov
scas
aas
call
xchg
scas
insl
jp
addr16
and
inc
cmp
roll
lea
jne
pop
daa
push
xor
cmp
pop
fldt
jnp
in
aas
mov
pop
fs
push
push
push
adc
xor
inc
push
jns
mov
outsb
mov
jnp
sti
mov
jo
cmpsb
es
push
stos
dec
fcomps
in
pop
std
xchg
push
sar
lret
xchg
adc
or
lahf
nop
inc
xor
aas
add
std
mov
insb
or
jg
aad
cmp
or
jmp
cmc
icebp
xor
xchg
mov
ljmp
shrb
mov
imul
add
push
scas
les
push
int
aas
out
mov
mov
pop
cmp
cmpl
mov
loope
ret
and
rolb
pop
push
xchg
pusha
cltd
mov
fidivl
out
xor
movsb
imul
repz
rcr
and
sub
xor
mov
cmp
fldt
imul
into
inc
inc
adc
cmp
xlat
xchg
lahf
or
xchg
dec
ljmp
shrl
xchg
push
sbb
loopne
in
inc
jb
into
mov
aas
repz
loopne
mov
cmp
mov
pop
in
shr
mov
test
mov
popf
aad
movsb
or
test
fisubl
mov
and
cmp
shr
and
adc
mov
cmp
inc
pop
jmp
sub
ja
mov
mov
scas
repnz
outsb
es
xchg
fmulp
or
mov
mov
and
mov
jmp
jecxz
mov
insb
les
pusha
mov
test
repnz
mov
jo
jo
and
dec
mov
das
fisttps
fcmovb
xor
mov
lods
xchg
xchg
add
mov
xchg
jae
or
in
gs
push
or
pop
mov
jae
in
push
mov
pop
ret
subb
mov
xor
cltd
push
jp
mov
add
fwait
push
inc
xchg
inc
movsb
push
adcl
add
mov
and
and
push
leave
pushf
xchg
inc
sbb
daa
add
mov
stc
mov
or
mov
in
jl
lods
out
sub
mov
push
inc
adc
sub
int
mov
sbb
loop
mov
je
fwait
test
fwait
test
roll
test
ret
out
fadds
es
xchg
lock
pop
int
sbb
call
fidivs
or
inc
arpl
daa
pusha
in
mov
cmp
cli
dec
jno
jle
inc
xchg
stos
xabort
ficoml
data16
dec
mov
fistps
mov
mov
xchg
call
flds
or
xchg
jp
dec
jno
inc
cmp
mov
outsl
lahf
bound
inc
fs
bound
movsb
and
mov
dec
loopne
xchg
test
inc
jae
xor
rorl
sbb
mov
dec
rorl
mov
cmp
cltd
inc
mov
jnp
mov
fs
jmp
mov
mov
test
sbb
xchg
push
mov
lods
in
mov
fs
xlat
xorb
lret
xor
lods
shlb
push
dec
fbld
js
xchg
and
and
xchg
repnz
rclb
pushf
sahf
adc
clc
jmp
rcl
xor
adc
iret
shrb
lods
pop
cmp
aam
dec
ss
cmc
mov
sub
lret
mov
sbb
mov
pushf
and
aaa
add
aas
popf
jae
push
bound
xchg
je
dec
lods
into
lret
mov
xchg
loope
add
imul
push
daa
mov
mov
sbb
adc
add
insl
cmp
xor
pushf
push
sbb
stos
hlt
icebp
fwait
mov
add
push
test
mov
sbb
dec
jmp
jg
pop
add
imul
push
test
dec
and
cmp
mov
sbb
enter
stc
add
out
dec
decl
xchg
cmpsb
pop
or
jo
arpl
cmp
ret
mov
mov
js
ret
push
mov
inc
mov
pop
scas
popf
pop
fistpll
pop
cmp
mov
int3
push
test
lods
popf
lods
and
incl
pop
dec
pusha
outsb
leave
cmp
les
push
in
aad
sbb
sub
mov
aam
fs
and
inc
xchg
inc
lods
jg
test
stos
ja
es
and
out
repz
jmp
xor
lds
cmp
pusha
mov
push
in
mov
ficompl
mov
out
jp
fwait
or
push
jg
adc
or
push
lds
xchg
sub
add
je
imul
sub
mov
or
push
cmpsb
xor
pop
inc
lcall
mov
shll
icebp
es
cmp
pop
mov
scas
and
mov
lret
push
jnp
shl
pop
shl
sub
sbb
icebp
add
push
mov
dec
pop
sub
aaa
pop
jbe
fstp
push
lds
aas
cli
sub
cmp
shll
push
and
lcall
fwait
and
or
jo
push
test
adc
and
in
jae
es
sbb
data16
jnp
inc
push
jae
add
mov
mov
sbb
pop
mov
sub
mov
mov
fsub
sbb
pushf
stos
push
lret
lret
push
or
sub
mov
stos
cld
btc
push
push
stos
push
fstpl
out
xchg
jl
stos
xchg
pushf
jmp
call
lret
dec
sti
lret
mov
inc
lods
sub
jl
popa
sbb
push
push
mov
inc
daa
popa
adc
sbb
ja
mov
mov
mov
cli
inc
mov
mov
enter
cmpsl
or
mov
ret
cmp
push
or
loopne
movsl
movsb
test
xchg
imul
nop
out
das
add
pop
xor
xor
mov
jbe
add
and
or
shl
in
jbe
out
cwtl
add
lods
sub
push
push
push
pop
shll
jmp
jge
leave
sbbl
pop
stc
sbb
call
sub
sub
inc
rep
lcall
les
sbb
aaa
es
xor
es
push
iret
dec
je
cmc
cmpsb
out
ret
test
mov
dec
ds
fwait
or
incl
daa
call
push
test
mov
cmpsb
sub
sti
add
ret
pop
testb
xchg
sarb
adc
xlat
or
mov
cwtl
js
imul
pop
enter
sub
fs
movb
movsb
and
xchg
int
stos
mov
sub
sub
jo
je
add
outsb
push
push
insb
xor
fisubl
out
and
fwait
mov
xchg
mov
xor
sub
nop
mov
push
mov
loopne
and
jecxz
sbb
inc
sub
add
pop
loopne
push
flds
inc
jmp
or
adcb
push
pop
xor
je
cld
shll
inc
and
mov
outsl
insl
xor
jl
mov
and
repz
ds
mov
xchg
and
aad
add
xor
add
pop
xchg
cmp
pop
and
hlt
clc
mov
jge
fs
jnp
roll
call
xchg
fsubs
push
mov
jmp
sbb
ret
xor
test
ljmp
xchg
frstor
lods
repnz
dec
leave
dec
pmuludq
xlat
xor
push
fs
mov
mov
fistpl
xchg
add
movsb
jle
daa
cmpsb
or
int3
push
aas
sub
pop
and
loopne
in
fsubr
lods
mov
push
xor
jnp
cmp
and
fcmovb
mov
popf
lahf
fdiv
and
insl
mov
dec
test
jecxz
mov
dec
push
mov
jno
jae
sbb
inc
xorl
xor
or
mov
add
sub
lcall
add
out
repz
int
jbe
inc
rcll
sbb
xchg
pop
jb
sbbb
cltd
pop
xchg
outsl
mov
cltd
outsb
not
or
pop
cmp
dec
mov
and
jno
daa
incl
adcl
mov
and
dec
rorb
js
into
jge
pop
add
sbbb
rcl
adc
mov
hlt
frstor
push
mov
fldt
out
or
sbb
enter
mov
enter
repnz
das
fwait
ret
mov
cmp
mov
cmp
jle
jo
loopne
jbe
lret
jne
dec
cwtl
fwait
mov
imul
rcrb
jae
sub
shl
into
rol
inc
jg
adc
mov
jle
add
add
mov
xchg
sbb
adc
pop
jge
sbb
pop
jecxz
inc
xor
or
mov
dec
mov
pop
test
or
movsl
adc
decl
and
sti
jmp
push
in
cmp
mov
aam
js
jo
xor
pop
mov
inc
das
mov
cmc
or
push
lret
daa
xor
sbb
cltd
sub
jle
adc
jmp
jo
jno
lret
and
ret
adc
jbe
fnstcw
fldenv
rcll
adc
add
gs
nop
mov
inc
ficoml
js
sub
imul
and
pop
pusha
fs
roll
ss
faddp
pushf
imul
cli
repnz
and
pop
bound
pop
jmp
xchg
jo
mov
arpl
lds
pavgw
lock
and
xor
and
mov
jae
cmp
bound
enter
dec
adc
js
sti
enter
das
imul
bound
in
jno
dec
ret
sub
sub
js
lea
mov
in
dec
outsl
mov
cld
insb
inc
sti
and
dec
enter
bswap
insl
dec
xchg
mov
mov
test
loop
inc
sahf
mov
dec
mov
ljmp
or
xchg
insb
mov
lcall
mov
jbe
mov
in
adc
xchg
aam
fstps
pop
ret
lea
ficomps
mov
test
sbb
and
test
es
add
pop
add
dec
inc
sti
addr16
scas
adc
mov
adc
mov
dec
adc
mov
or
inc
pop
cltd
ret
enter
adc
mov
mov
cmp
movb
lahf
push
pushf
fdivr
mov
ds
icebp
call
jle
loope
adc
leave
xor
mov
test
add
mov
movsb
dec
mov
lods
rcll
and
sub
jl
fstps
jbe
fistps
dec
xor
cmp
loope
jp
movsl
and
adc
dec
inc
push
sub
mov
lret
jnp
or
mov
sarl
cmp
push
jmp
or
mov
lcall
psllq
sbb
gs
dec
je
hlt
je
dec
and
push
sbb
nop
mov
xchg
imul
aaa
arpl
scas
sub
xor
add
scas
insb
cmp
cltd
dec
call
sbb
sarl
into
jge
aaa
rorl
jp
pop
sub
mov
call
add
fwait
push
out
test
jne
and
pop
cld
icebp
pop
pop
in
aas
push
imull
push
cmp
mov
and
adc
mov
jg
scas
fistpll
clc
push
out
cmp
cltd
ja
test
cmp
scas
scas
lret
cmp
in
cs
xlat
in
push
jecxz
fdivl
lret
outsl
iret
negb
loopne
jmp
dec
shlb
sbb
push
out
mov
add
jo
lock
idivb
hlt
mov
and
xchg
and
mov
mov
int3
or
cmp
mov
ljmp
mov
push
mov
inc
jmp
mov
cmpsl
nop
xchg
xorl
in
nop
data16
loope
push
iret
scas
mov
mov
adc
mov
mov
pop
pusha
sti
movsl
insb
add
cmp
mov
xchg
mov
aam
inc
mov
fdivl
lahf
faddl
mov
and
fisttpll
scas
in
js
jns
xchg
dec
rcrl
int
arpl
jb
movsl
xor
pop
xor
and
mov
sub
push
mov
lret
lcall
lret
cltd
dec
insb
stos
stos
or
fidivs
scas
ret
xor
jmp
loop
bound
sub
cmpsb
xor
and
xchg
pop
enter
push
call
or
xor
dec
cwtl
or
jnp
cmp
andb
int
negb
fs
pop
ret
sub
cmp
ret
mov
imul
mov
push
repnz
stos
cmp
sub
daa
jmp
sbb
and
fwait
dec
insl
cmpsb
lods
push
inc
pop
jp
loop
dec
push
add
leave
cmc
and
bound
push
imul
mov
das
jecxz
test
cmpsl
ficomps
pop
jmp
lods
stos
aaa
cmp
stos
in
outsb
sub
decl
xchg
sbb
add
xchg
inc
sub
testw
pushf
adc
mov
xchg
movsl
test
or
xchg
enter
adc
sbb
sbb
mov
adc
dec
loope
cmp
mov
aaa
fisttpl
xor
ret
in
mov
add
xor
aaa
mov
pop
push
mov
xorb
aam
and
stos
orl
sub
xchg
xor
sub
push
push
or
xchg
sbb
push
repz
push
repz
mov
xchg
push
xor
mov
lahf
push
mov
adc
aaa
sti
mov
cmc
xchg
xchg
insl
mov
clc
mov
ret
clc
jmp
push
shlb
ret
pop
mov
add
in
inc
cmp
shrl
jmp
cmp
lahf
test
mov
cld
into
xor
sub
and
sbb
jg
jle
cltd
out
testb
in
dec
push
jne
mov
and
lret
cmp
pop
xor
adc
xor
or
mov
dec
xchg
jmp
rcr
mov
call
fstpt
mov
add
cli
jge
mov
cmp
pop
and
scas
mov
aam
sub
leave
jb
push
addb
xchg
movb
ret
xor
cmp
flds
cs
imul
and
xor
sbb
jmp
xor
hlt
adc
mov
push
xor
adc
add
push
mov
inc
fwait
leave
mov
xor
add
lea
pop
leave
jnp
mov
loope
das
xor
cmp
in
cld
outsb
fwait
xchg
outsb
adc
jae
jge
cmc
in
leave
roll
cwtl
mov
or
test
inc
fadds
sbb
and
jge
mov
xchg
das
dec
int
xchg
add
adc
test
out
mov
addl
add
add
ljmp
pop
inc
sub
adc
push
iret
push
loope
inc
mov
inc
sbb
adc
mov
lahf
inc
or
xchg
ss
movsl
bound
jecxz
adc
mov
mov
fadd
std
sub
mov
scas
mov
pop
sbb
ficomps
stc
sbb
sarb
lock
and
mov
mov
pop
xlat
xor
adc
hlt
out
inc
xor
cmp
sbb
adc
decl
mov
xchg
in
and
sbb
and
jge
gs
pop
jmp
nop
mov
xchg
jnp
add
enter
sbb
xchg
loop
and
fcoms
or
out
xchg
xor
pop
loope
call
add
jmp
andb
dec
add
nopl
in
jno
dec
add
pop
or
mov
js
mov
aam
jp
xor
mov
dec
cli
add
fnstcw
adcl
insl
jne
mov
sub
sti
push
add
xchg
insl
mov
mov
inc
jge
push
mov
daa
cs
movsl
aam
sub
add
mov
clc
out
mov
xor
imul
sub
cmp
stos
push
and
out
sub
inc
repnz
adc
rorl
neg
jo
scas
jp
das
call
arpl
push
fwait
adc
xlat
icebp
mov
roll
ret
xor
fs
out
mov
fildll
lahf
xchg
lock
fcomi
iret
pop
dec
xchg
imul
or
lock
jp
pop
nop
in
pop
and
movsb
sarl
std
mov
jo
es
addr16
xor
nop
inc
jge
in
push
pop
es
mov
ret
push
mov
adc
sub
pop
pusha
cltd
test
pop
push
sub
inc
adc
xor
push
xchg
sub
inc
sub
xchg
es
lret
fildll
testb
mov
inc
and
ljmp
fsts
push
stc
addl
es
xchg
shrd
push
imul
xchg
mov
popa
outsb
scas
dec
jg
dec
pop
add
subb
or
ss
xchg
imul
ds
adc
xchg
arpl
aam
pop
ljmp
mov
mov
popf
mov
aaa
sbbb
shll
loope
or
push
xor
and
ficoms
rorl
or
les
mov
test
xchg
lods
inc
mov
dec
das
js
cmp
aam
or
js
push
sahf
daa
sbbl
cmp
push
jg
fsubrp
pop
arpl
add
and
xorb
out
push
mov
je
addr16
mov
sbb
push
and
push
jbe
js
hlt
aad
ret
push
cmp
push
sub
stos
push
inc
and
sti
cwtl
repnz
cli
les
dec
decl
int
adc
sbb
mov
lock
cmp
adc
ds
out
cmc
xor
push
mov
ljmp
lds
dec
lea
popf
pop
cmp
inc
add
adc
jmp
insb
fcompl
cmp
jge
mov
imul
mov
data16
mov
repnz
daa
sahf
push
out
push
mov
mov
scas
mov
adcl
inc
jno
rolb
push
or
mov
xchg
outsb
es
jno
mov
dec
sahf
xor
testb
push
movsb
add
fcom
pop
cli
push
xchg
xor
sub
fcmovnu
inc
out
mov
sti
push
arpl
sbb
repnz
cli
scas
cmp
fcomi
jmp
test
cltd
fildll
ffreep
or
sbb
pop
cmpsb
jl
fwait
shrl
adc
mov
ret
popf
mov
add
push
add
lret
mov
nop
fwait
sbb
lret
xchg
mov
push
cmp
cmpsl
cwtl
ljmp
xchg
mov
setp
mov
cltd
repnz
dec
jmp
fcompl
cmc
inc
mov
sub
inc
mov
or
xchg
fadds
arpl
mov
xchg
test
pop
sub
and
inc
inc
jne
lods
mov
xchg
mov
push
aaa
or
clc
jo
pop
mov
mov
mov
jmp
addr16
cmp
aad
inc
stos
daa
push
jns
subl
or
sbb
cltd
add
stc
cmpsl
pop
rorl
movsb
or
push
negl
dec
dec
xor
push
sub
adc
xchg
sbb
sub
mov
out
cld
push
stos
ficompl
mov
jge
xor
sub
sbb
fwait
cmp
jmp
jbe
lcall
jle
mov
or
roll
out
mov
jbe
xchg
add
addr16
and
mov
mov
clc
ficompl
in
je
sti
repz
jae
insb
ret
mov
dec
or
pushw
outsb
jg
xlat
push
aad
sub
mov
dec
xchg
add
adc
test
sbb
mov
mov
xorl
lods
mov
shrb
sbb
push
int
jne
jge
nop
nop
clc
call
cli
test
ret
xchg
insb
ljmp
add
cli
loop
lcall
lea
movsl
les
jnp
inc
dec
ja
lcall
fiadds
and
pop
sti
outsb
imul
xor
or
sub
arpl
mov
adc
dec
sbb
dec
pop
pusha
mov
cmpsb
fcmovnbe
dec
sbb
inc
repnz
shl
cmp
add
cmp
xor
out
cli
int3
fwait
and
nop
pusha
imul
sti
inc
loopne
sti
es
pop
inc
loope
fwait
mov
bound
jecxz
push
sbb
add
pop
lods
xor
in
out
sbb
out
outsb
ja
stc
jnp
mov
in
sbb
cli
push
mov
inc
pop
lock
xor
push
mov
dec
out
sarl
jl
and
inc
push
pop
sub
sbb
movsl
aad
fucomi
jnp
in
aaa
mov
call
addr16
aaa
test
lcall
movsl
fnstenv
rol
cmpsb
xor
cs
movsl
lock
and
inc
fimuls
in
rcrl
xor
sar
jae
xor
into
ds
sub
into
add
mov
or
inc
das
push
std
aas
push
cmp
lods
rol
push
popf
out
mov
dec
xlat
fidivrl
or
dec
fwait
adc
push
scas
sarl
pop
movl
mov
movsb
mov
fildl
sub
fwait
pushl
push
lods
jb
bnd
in
imul
insl
push
inc
ret
insb
lahf
jp
pop
repnz
push
mov
icebp
push
add
sub
sbb
fldcw
xchg
fwait
mov
int3
xchg
faddl
or
mov
addb
dec
in
icebp
xlat
cmp
pop
shr
insb
hlt
repnz
jnp
mov
aas
adc
es
push
jp
xor
stos
inc
sub
stos
scas
lock
mulb
hlt
and
xchg
insl
dec
stc
es
in
iret
dec
pop
push
fsubrs
add
sbb
add
das
pop
inc
movsl
out
sub
add
fs
sbb
sub
addr16
sub
movsb
or
cmp
fistpll
cmpsb
cs
xchg
icebp
cs
sbb
xchg
in
mov
test
aaa
shlb
lret
push
lods
popa
cs
lret
icebp
mov
repz
xor
ljmp
or
add
ficompl
cltd
scas
loope
pop
cmpb
outsl
das
xor
leave
cltd
cmp
scas
pushf
cmp
gs
imul
jl
cs
push
lahf
fadd
and
dec
push
sub
sub
lcall
fsubl
dec
sub
fildll
sub
int
stos
pop
and
fistpl
ficomps
lock
adc
add
xlat
clc
pop
add
jmp
cmpsl
lret
adc
jbe
cmp
ljmp
jmp
mov
scas
sbb
outsb
repnz
add
xchg
inc
xor
push
test
jo
xchg
mov
mov
jbe
lret
std
sbb
iret
mov
pop
je
orb
jne
cld
lcall
and
push
in
lea
push
push
jne
mov
jb
shl
pop
inc
pop
icebp
repz
pop
ja
sbb
push
es
jecxz
jb
push
and
cmp
xor
pop
int
lds
xchg
das
int
idivl
mov
stos
jnp
mov
xchg
jecxz
stc
mov
js
or
mov
mov
insl
dec
ret
mov
adcl
insb
inc
mov
jge
add
stos
and
jg
sub
push
pop
push
testb
push
and
jno
ja
sub
imul
jl
daa
xchg
fsubr
inc
mul
outsb
sbb
cli
sub
gs
jnp
jb
cmpsb
gs
inc
mov
ss
leave
inc
add
add
cmp
push
aad
nop
sahf
pusha
push
pushf
test
mov
dec
lods
jge
pop
je
xor
mov
sahf
inc
push
jle
jbe
xor
rcll
xchg
jp
or
test
popf
or
pushf
movb
lahf
or
sub
fcmovnb
loope,pt
add
xor
jae
push
xchg
jmp
leave
std
into
ret
xchg
mov
fsubs
dec
dec
sub
cmp
push
sbb
mov
mov
xor
imul
sbb
or
inc
jg
pop
aam
xchg
lods
or
out
inc
shll
pop
inc
scas
enter
add
xchg
fiaddl
mov
sub
lcall
imul
fbld
sub
fildll
or
dec
mov
scas
mov
pop
and
or
cmp
mov
jo
lahf
lods
xchg
mov
repnz
iret
test
push
gs
push
jl
sub
daa
jb
enter
mov
mov
inc
xchg
pop
js
imulb
ret
aad
adc
sub
sbb
inc
into
lds
xor
dec
xchg
xor
dec
repnz
stc
pop
add
outsb
scas
frstor
xchg
sbb
test
sarl
jno
out
and
and
hlt
out
das
hlt
jge
lods
or
dec
jne
xchg
inc
dec
xor
adc
int3
fwait
les
mov
cmp
rorb
and
pop
das
sub
jge
pop
mov
loope
dec
pop
sub
pop
es
jbe
and
fadds
in
cmp
sarb
scas
bound
pop
lock
cmc
xor
sub
sbb
decb
es
xchg
pop
cmpb
lret
js
sub
pop
movsl
mov
fstpl
xchg
inc
aas
pop
sbb
arpl
sbb
sbb
and
sbb
stos
sub
push
roll
mov
inc
aas
cmp
sbb
cmc
mov
pop
mov
push
push
lret
shl
jbe
pop
cmp
add
loopne
cwtl
cmp
adc
fidivs
adc
dec
repz
scas
rclb
jle
inc
mov
sub
and
jge
adc
in
or
push
push
outsl
xchg
adc
push
sub
repnz
push
push
inc
dec
gs
bound
flds
cmp
pop
pop
mov
fsubl
add
pop
sbb
mov
jbe
cs
pop
sub
jbe
fucomi
jbe
xchg
ss
mov
xchg
xor
add
idivl
add
ja
mov
sub
call
idivl
fmulp
or
movsb
or
or
pushf
ss
icebp
pop
add
lock
push
cmp
inc
cwtl
cmpsl
or
sub
push
orb
lret
test
repnz
jp
pop
repnz
lahf
jns
in
js
stc
adc
into
mov
pop
dec
xchg
popa
pop
test
in
mov
imul
push
popf
inc
mov
inc
mov
adc
cmc
cltd
shlb
lret
js
ljmp
xor
mov
lret
xchg
inc
lds
mov
ret
dec
add
sbb
jecxz
inc
loope
push
stc
cmp
lahf
pop
arpl
or
add
mov
test
lret
das
arpl
movsb
mov
fwait
out
pop
mov
jnp
push
sbb
or
call
push
rcrb
mov
pop
push
imul
sbb
in
mov
xor
lods
adc
fisttpll
sub
sbb
or
fwait
push
lret
add
sti
lods
jmp
jo
xor
jecxz
fwait
cmpsl
pop
pop
lahf
jnp
and
or
insb
jle
xor
or
xor
dec
scas
xor
or
test
push
xchg
sub
lock
repnz
xor
mov
pavgw
jg
aaa
stos
mov
jb
mov
loope
xchg
lret
mov
xchg
pop
fisttpl
shlb
sti
sub
mov
pop
sti
push
cmpsb
call
mov
sub
mov
out
out
xor
adc
and
mov
mov
stc
pop
jne
and
and
dec
mov
fisttpl
fidivrl
stos
jl
arpl
xor
push
mov
pop
jl
popf
dec
cmp
movaps
xor
mov
test
xchg
lods
adc
lods
ret
xor
bound
xchg
stos
loop
scas
jnp
pop
mov
push
push
aad
fdivl
xchg
fisttps
in
cld
add
cmp
jo
jo
out
xor
cmc
ret
mov
mov
aas
inc
ljmp
xchg
jg
leave
mov
mov
mov
ljmp
xchg
jb
and
push
jae
cmc
pop
mov
lret
pop
and
adc
loope
sbb
cmp
mov
sbb
pop
mov
inc
ret
pop
xchg
rcrb
imul
sbb
cmp
ret
test
add
adc
mov
jge
cmp
sbb
inc
cltd
dec
test
divb
xor
lret
sub
mov
daa
adc
mov
inc
fdivr
cmp
test
test
outsl
push
jno
sub
and
pusha
xor
repnz
rorb
in
mov
data16
ret
jae
imull
mov
repz
push
sbb
loope
mov
fbstp
cwtl
outsb
add
cli
jb
leave
jb
cmpb
fdivp
jle
sahf
jae
loope
add
inc
cmp
mov
push
mov
sub
jno
movsl
hlt
cmpsb
cmp
in
jns
add
scas
push
jg
adc
jne
js
ja
faddl
pop
fisubs
in
mov
mov
xchg
or
out
xchg
faddl
inc
movsb
mov
fsubrs
fsubs
and
adc
inc
cmp
daa
dec
enter
mov
push
sub
mov
sub
popf
and
dec
jb
inc
test
xchg
inc
push
mov
pop
test
xchg
sbb
mov
stc
cmp
lock
fstps
jb
outsb
sbb
xchg
insl
mov
addr16
adc
sahf
mov
pop
test
push
adc
inc
imul
inc
lret
mov
and
aas
mov
pop
cmp
repnz
int
icebp
pop
dec
sti
cmc
jae
fstps
fldt
lods
cmpsb
jl
rcl
dec
jge
xor
mov
test
test
insl
add
test
xorb
arpl
jns
in
sti
out
stos
bound
xor
sbbb
mov
push
ficompl
enter
enter
sbb
mov
sbb
icebp
or
imul
fcomps
mov
pop
pusha
adc
inc
loop
cmp
xchg
lods
adc
mov
pop
jnp
aad
xchg
pop
aaa
ss
ret
push
mov
jns
sub
fcmove
jne
aam
fwait
stc
outsb
xor
and
jo
inc
adc
loop
inc
push
loopne
pop
call
pop
jb
push
mov
cld
std
iret
cs
int
outsb
mov
inc
adc
cmpsb
or
mov
popf
mov
inc
mov
lcall
mov
out
inc
popf
inc
ds
lahf
movsb
dec
das
cmp
dec
jl
jp
hlt
pop
insb
loopne
sub
insb
jae
data16
xadd
int3
mov
mov
cmp
scas
lcall
jnp
mov
shlb
ljmp
mov
jg
push
xchg
add
aas
and
mov
mov
adcl
loope
jnp
in
jnp
mov
aaa
sub
push
add
push
xorl
push
add
les
cmc
or
mov
rcl
cmp
cmpsl
mov
mov
xchg
pop
pop
fcmovb
xor
ja
out
jo
mov
test
sbb
inc
xchg
lds
rol
mov
dec
es
or
fnstcw
out
xor
lock
xchg
jno
xchg
scas
adcb
repnz
sub
popa
shlb
cmp
mov
push
xor
shl
hlt
pop
das
inc
xlat
cmc
and
jnp
mov
negb
cmp
jae
add
and
mov
gs
mov
lods
adc
mov
push
dec
push
sub
leave
dec
pop
and
mov
mov
fs
aad
in
adc
pop
dec
sub
mov
rcr
jl
pop
and
xchg
mov
mov
fiaddl
push
dec
arpl
enter
sbb
push
mov
aad
jp
inc
or
jmp
sbb
inc
sbb
push
aas
mov
daa
test
test
fldenv
sti
movlps
pop
xchg
add
mov
rcr
sub
mov
bound
dec
push
jmp
xlat
cmp
iret
jne
outsb
mov
mov
dec
pop
nop
sub
mov
out
movsl
xchg
enter
mov
sub
hlt
push
dec
xchg
cmp
ret
test
addr16
iret
mov
fcom
sbb
in
lds
mov
jecxz
test
inc
xchg
repnz
out
loopne
aaa
testl
js
mov
inc
ret
push
ja
inc
dec
out
push
xor
sbb
ss
js
inc
jns
mov
fwait
sbb
xor
imul
xchg
out
shrb
pusha
leave
mov
push
cmp
iret
cmp
je
fs
push
push
cmp
push
into
or
and
cmc
jb
and
push
sub
adc
mov
push
add
sbb
dec
lahf
xchg
push
cmp
dec
add
test
imul
or
xchg
aam
add
lods
repnz
mov
pop
xor
jno
dec
mov
xor
mov
cli
pop
xor
pop
out
adc
dec
call
test
bound
and
and
push
lods
xchg
jnp
xchg
out
jnp
sti
xchg
dec
push
imul
inc
es
push
ja
rorl
ret
aaa
push
mov
mov
mov
or
js
ret
adc
xor
sbb
cltd
int
pop
dec
clc
test
push
movsb
xchg
popa
adc
inc
int3
or
add
cwtl
cmpsb
cmc
inc
dec
call
lea
in
xor
test
cmp
rorl
push
test
add
or
pop
stos
jmp
push
sub
pop
adc
mov
dec
cmpsb
inc
jo
add
xchg
cltd
jle
aam
scas
fiaddl
cmpl
into
and
outsb
in
xchg
lods
mov
in
nop
fildl
dec
pop
cmp
aas
and
cli
sub
xchg
addr16
mov
lds
ret
js
lds
aaa
shlb
ret
arpl
fdivs
cmpsb
inc
xlat
stos
jecxz
dec
jae
sti
add
mov
jle
test
imul
rcrb
test
pushf
loop
mov
cs
cmp
cmp
push
mov
test
stos
fstpl
adc
lahf
cmpsb
push
adc
adc
adc
adc
iret
mov
andb
das
push
jecxz
sbb
mov
shl
lods
psrlw
cmp
out
xchg
push
ja
lahf
fldcw
jg
pop
adc
imul
lret
inc
aaa
add
push
jno
pop
mov
fst
outsb
test
sbb
aaa
inc
in
out
or
jb
push
adc
sbb
inc
mov
and
js
xchg
dec
les
mov
mov
dec
inc
or
in
popa
popf
mov
mov
ljmp
pop
or
sbb
loop
ja
repnz
cmpsl
loop
aaa
xor
loopne
jne
cli
sbb
call
pop
or
into
das
add
cmp
jg
adc
xchg
xchg
inc
and
aas
sub
adc
dec
push
mov
sbb
sub
sbb
repz
ja
arpl
inc
pusha
mov
movsl
arpl
les
notb
loope
shlb
push
xchg
add
jmp
push
push
push
mov
ret
fcoms
scas
cmp
repz
push
xor
lods
lods
mov
mov
addr16
mov
lods
mov
and
jmp
frstor
les
mov
es
mov
mov
mov
gs
ss
dec
ja
push
cmp
or
scas
js
lods
fcoms
sbb
xlat
push
or
rcrb
rorl
fwait
cs
adc
imul
sbb
out
insb
add
jno
dec
sub
sub
idivl
jmp
mov
pop
mov
inc
push
xchg
add
ret
pushf
movsb
adc
fwait
sub
sub
xor
aam
mov
jns
xchg
mov
dec
aad
dec
cmpsb
xlat
fsubs
mov
sbb
or
inc
jb
neg
cmpsl
push
loopne
xchg
sbb
or
aam
movsl
popf
mov
sbb
xor
push
loope
les
adc
lds
in
and
sbb
test
popl
sbb
ficoml
or
xchg
fwait
adc
mov
lcall
mov
movsb
sub
push
addb
sub
cmp
mov
in
sbb
mov
inc
loopne
arpl
ror
add
xor
jg
pop
cmpsb
lahf
push
cwtl
mov
mov
insb
pop
fisttps
ljmp
cld
imulb
insl
pop
xchg
filds
adc
jle
dec
int
sub
hlt
mov
inc
int3
leave
popf
pop
inc
xlat
aas
mov
xorl
mov
add
aas
lock
lds
push
xor
cs
inc
lcall
sbb
mov
mov
ret
mov
sbb
test
inc
hlt
int
jp
loop
push
dec
cmc
mov
rcll
xor
mov
repnz
iret
faddl
fldl
xchg
sbb
mov
idiv
or
and
mov
cmp
lret
outsb
push
jmp
negb
out
cmpsb
icebp
nop
sub
lcall
jmp
push
adc
les
ret
cmp
sar
mov
cmp
xchg
addr16
out
pop
lret
je
mov
mov
jp
adc
fs
in
test
push
movsb
jmp
mov
jp
repz
mov
xor
or
clc
xchg
divl
and
jl
dec
and
shrl
lahf
lock
fsubrs
lcall
dec
dec
subb
rorb
cli
imul
adc
imul
xchg
arpl
std
inc
lret
cmp
jb
daa
int3
enter
int3
imul
rorl
jb
and
sbbl
std
leave
lret
mov
dec
xor
rcll
inc
filds
shr
dec
lods
mov
lahf
mov
mov
inc
fadds
gs
cld
mov
imul
cmp
push
fs
loopne
mov
insl
dec
lods
pop
popa
or
pop
xchg
notb
push
jne
or
aad
pop
sub
stos
std
iret
add
add
jo
mov
mov
jge
hlt
in
add
dec
stos
adc
dec
pop
push
gs
loope
jno
stos
sub
inc
jno
ljmp
xchg
cmp
inc
es
scas
movsl
mov
popf
ljmp
call
mov
dec
mov
xchg
pop
push
mov
stos
repz
roll
imul
fisttps
xor
icebp
inc
jno
shrl
fisttpll
and
iret
pop
sbb
adc
jmp
add
cmp
out
in
bsr
ror
inc
call
xor
push
cmpsb
xchg
in
push
or
cld
mov
in
push
sbb
fimuls
sahf
xchg
pusha
jnp
outsb
sbb
popf
dec
std
fisubrl
push
sarb
scas
mov
adc
cld
in
adc
ss
repz
icebp
xchg
rcr
or
je
scas
dec
pop
cmp
cmp
subb
lods
xchg
minps
or
push
cmpsl
daa
push
shl
xor
loope
fwait
jb
adc
fldenv
dec
sbb
lods
iret
in
cmpsb
inc
jae
cwtl
aad
out
mov
xchg
mov
add
or
mov
push
xor
out
popf
rolb
dec
pop
xchg
sbb
and
lods
sbb
std
shll
pop
imul
adc
push
bound
insl
es
jl
icebp
jno
xchg
dec
imul
adc
jmp
cwtl
pop
jecxz
mov
mov
push
movsl
lret
div
jp
rclb
pop
and
inc
add
sahf
mov
aaa
pop
xor
jl
into
push
mov
int3
xchg
insl
inc
inc
sbb
pop
out
ret
sbb
pop
in
cwtl
js
ljmp
jb
inc
popf
xchg
mov
stc
dec
xor
xlat
pop
dec
adc
gs
mov
push
cli
dec
xchg
mov
lret
ljmp
mov
add
fs
sub
stos
cmpsl
scas
add
cmp
inc
cmp
adc
xor
popa
xchg
nop
lds
dec
cli
push
div
xchg
mov
jns
cmp
xor
sub
dec
les
lahf
test
pop
fdivrs
test
ficompl
sbb
daa
or
mov
mov
lahf
sub
push
imul
ficoms
mov
ss
sub
mov
push
mov
sbb
mov
cmp
pop
push
mov
push
loop
xor
out
or
filds
sbbl
out
push
sbb
test
int3
mov
test
ljmp
test
pop
mov
cmp
jmp
add
sub
arpl
cwtl
lcall
jo
mov
mov
scas
loope
push
inc
fcoml
mul
mov
std
je
movsl
and
clc
loope
sbb
xor
jge
lea
lcall
cwtl
cmpsl
cmpsl
popf
ffree
js
pop
js
aaa
add
dec
jo
adc
lock
test
mov
adc
pop
es
jnp
sub
dec
fsubrl
jmp
fisubrs
mov
sbb
ficoml
dec
fnsave
fisubrs
repnz
cmp
out
or
call
mov
dec
jecxz
jle
stos
sbb
or
cmp
roll
fwait
paddsw
js
add
lods
xor
loopne
xor
mov
or
push
xor
sti
jbe
rcrb
stc
mov
pop
lahf
xchg
cld
mov
jno
push
or
pop
int3
fimull
cmpsl
inc
mov
adc
in
mov
test
sub
mov
dec
stc
sbb
repz
mov
jne
out
ds
sub
mov
sbb
data16
lahf
orb
test
test
clc
and
test
outsb
sub
mov
cmp
addr16
sahf
bound
xor
dec
ds
pop
cltd
out
aas
mov
fstps
shl
mov
sbb
lahf
sarl
stos
or
pop
push
jmp
pop
sbb
adc
cmp
stc
testl
call
dec
out
mov
inc
push
and
fistl
out
xlat
ret
insl
in
pop
stc
rcrb
mov
mov
or
pop
outsl
mov
ret
nop
stc
push
add
mov
cmp
or
mov
mov
fs
clc
inc
pop
or
fstpl
mov
sahf
mov
add
jmp
mov
or
in
in
popa
dec
out
fs
insl
dec
bound
dec
ret
lahf
sub
mov
mov
sub
cmpsl
or
cmp
pusha
lods
addl
daa
gs
sub
jns
repnz
jne
push
mov
and
jp
xor
lds
gs
xchg
imul
xchg
sbb
ret
test
js
jnp
into
std
pusha
push
pop
fiadds
xor
adc
push
fs
add
cmp
xlat
mov
mov
leave
mov
xchg
xor
pop
xchg
add
and
into
fstpt
jnp
test
sub
loope
xchg
inc
js
subl
pop
jne
clc
mov
and
nop
gs
mov
cmc
int
push
in
cmp
jle
popa
pusha
mov
and
inc
push
in
and
es
cmp
stos
loope
add
gs
push
jl
and
sbb
adc
test
jmp
pop
mov
scas
nop
scas
gs
mov
sbb
xchg
xchg
xor
xchg
in
mov
mov
jp
cmc
cmp
inc
lahf
sti
sub
rcrb
and
test
jb
sahf
mov
cmpsl
loop
cmp
nop
imul
mov
cmp
add
gs
addr16
jnp
or
pop
sahf
rorb
cmpsb
cwtl
mov
aad
rclb
ret
outsl
adcb
fwait
or
pop
iret
int3
cltd
iret
lcall
jmp
addr16
mov
ds
lock
iret
xor
xor
test
aad
clc
push
dec
aad
sub
leave
popa
add
sarl
aam
add
dec
add
test
jns
cs
leave
lahf
dec
inc
subb
cmpsl
js
adc
mov
push
xchg
jb
ss
and
mov
lds
mov
orl
ss
js
test
sub
jge
pusha
arpl
or
in
mov
cmp
pop
or
add
xchg
mov
stos
cld
xchg
pop
push
test
inc
les
sbb
data16
adc
jl
cmp
pop
xor
mov
loope
sub
and
push
mov
ret
cwtl
scas
xorl
movsl
aas
xchg
sub
push
or
mov
push
or
adc
cs
mov
mov
jecxz
jno
cld
loopne
cltd
rorb
inc
or
outsl
jno
xor
xor
jne
test
mov
rclb
filds
push
dec
pop
fnsave
pop
jae
sub
cmp
std
popf
popf
mov
cmp
mov
orl
test
xor
sbb
fisubrs
jl
dec
subl
xor
dec
dec
movsl
sbb
inc
xor
adc
push
lcall
out
xchg
js
jmp
jne
sbb
lds
sbb
jge
ss
out
jge
cmpsb
jl
pop
das
push
rcrl
adc
out
lock
dec
outsl
fiadds
mov
movsl
mov
stc
scas
mov
adc
xchg
ja
push
int3
or
insb
push
js
setge
inc
icebp
pop
mov
add
or
loope
pop
stos
out
das
call
and
jle
jnp
fidivs
fstps
mov
dec
and
push
popa
push
loopne
pop
push
or
or
es
stc
cmp
mov
sar
cli
mov
fwait
cmp
les
repnz
mov
push
lret
xchg
ret
ljmp
xor
inc
pop
mov
je
filds
mov
outsb
lds
je
pop
loope
int3
cli
push
aaa
cmc
int
jg
test
cmp
ds
mov
psrad
jnp
outsb
mov
outsb
scas
stc
std
out
in
mov
adc
cs
ret
sbb
or
adc
pop
je
loop
push
sbb
mov
hlt
jno
or
out
xchg
jo
or
mov
fcomps
pop
popf
imul
fcoml
inc
push
out
mov
lods
fwait
xor
pushf
adc
add
scas
out
xchg
or
mov
dec
sbb
rcll
js
mov
inc
push
cli
mov
icebp
inc
push
repz
push
idivb
push
add
cwtl
mov
add
add
pop
shrl
and
stos
shll
adc
jo
or
fcmovnu
and
cmpsl
out
mov
mov
add
xchg
dec
jle
and
daa
pop
lahf
ljmp
or
jnp
mov
mov
cmp
clc
mov
popf
xchg
adc
loop
dec
mov
shrl
and
jb
cmp
push
dec
fistl
jne
addr16
push
loop
fcompl
int
xchg
pushf
loope
adc
mov
into
das
dec
jb
mov
addr16
dec
lret
jne
fwait
arpl
in
fadd
sbb
insb
dec
lahf
add
xchg
pop
pop
imul
cwtl
fmuls
movsb
and
add
cld
ds
mov
mov
jbe
aad
cmp
test
int
test
adc
add
push
cmpsb
and
mov
sarb
adc
lea
xchg
xor
xchg
pop
inc
sub
push
xchg
cmovle
hlt
mov
xchg
jo
outsb
pop
jg
dec
leave
in
dec
and
out
mov
hlt
scas
pop
pop
ljmp
popa
jmp
adc
pop
rcl
sbb
leave
add
data16
mov
xchg
loop
rorl
cmp
or
dec
add
push
xchg
lods
xchg
imul
or
shr
pop
push
loopne
popf
adcb
adc
adc
xchg
jns
das
adc
xor
and
mov
push
out
sub
int
fcmovnu
lret
stos
les
orb
sub
cwtl
sahf
jae
das
clc
mov
push
jg
ja
addr16
sub
sub
inc
sbb
xchg
mov
adc
pop
pop
xchg
adc
sti
pop
cli
fists
test
not
pop
inc
push
fidivrl
call
ret
push
xchg
fsubrs
imul
pop
add
sbb
add
sbb
movsl
nop
push
fstps
push
adc
int
mov
push
pusha
and
lret
loop
jl
fldl
mov
stos
xchg
mov
outsl
in
add
aas
or
mov
divb
bound
je
test
lret
mov
jp
hlt
out
or
xchg
mov
lahf
xor
daa
imul
aaa
clc
push
mov
mov
mov
pop
aad
jb
lock
mov
dec
inc
and
sti
fisubl
lods
mov
rorb
push
dec
dec
dec
xor
cmpsb
shl
xlat
daa
or
mov
aas
mov
testl
cmp
popa
daa
popa
loope
mov
sbb
pop
mov
hlt
das
cmp
loope
std
add
lea
xor
sqrtps
sbbl
mov
gs
inc
orl
push
sahf
push
jmp
inc
gs
pop
pusha
jecxz,pn
inc
jb
jle
cmp
je
stc
imulb
xchg
das
mov
or
arpl
cld
xor
cld
es
aaa
nop
mov
add
cmp
push
cld
adc
push
aam
adc
int3
pop
pop
xlat
aaa
cmpsl
add
sar
enter
inc
jne
adc
rcrl
das
loope
cmp
dec
mov
ret
or
sbbb
dec
aaa
rcrb
test
push
aam
xchg
in
mov
add
inc
into
stc
fsubs
mov
mov
lcall
cmp
push
pop
jns
test
into
dec
and
xlat
sbb
jmp
push
test
pop
sub
inc
pop
mov
and
lds
push
add
sbb
call
das
cmc
push
popa
xor
orl
or
les
aam
xchg
fnstsw
stos
cld
push
sub
sbb
push
mov
in
stc
dec
mov
cmc
adc
mov
loopne
push
mov
sti
enter
iret
pop
mov
or
jae
shll
fimuls
pop
pop
rcr
int
inc
mov
dec
imull
into
aad
sahf
xor
mov
icebp
mov
andb
in
pop
mov
inc
mov
aad
cmc
dec
mov
mov
cmc
rcr
jmp
mov
and
jmp
cli
dec
xchg
push
pushf
sbb
xchg
sbb
push
sub
loope
mov
cwtl
rol
sub
stc
inc
gs
ret
in
out
ret
jns
scas
and
mov
cltd
lret
or
lods
nop
jns
adc
mov
mov
test
jmp
jmp
sub
push
lock
sar
mov
push
mov
cmp
fidivrl
clc
cmp
xchg
fwait
int
push
xor
notb
and
inc
mov
push
outsl
xor
push
fwait
insb
push
idivb
cmp
mov
mov
sbb
cmc
sbb
push
jp
sub
ds
sbb
dec
add
into
ds
loop
arpl
xchg
lahf
cmc
cmpl
xchg
xchg
dec
lcall
and
mov
mov
sub
fdivrl
leave
insb
mov
jae
scas
xchg
dec
pop
ljmp
xchg
dec
or
or
insl
js
sub
fistl
cmp
fcmovu
pop
cld
notb
fmuls
pop
add
leave
pusha
aam
pop
mov
adc
ljmp
int
scas
or
loope
mov
sahf
das
es
xchg
adc
sub
movsb
jecxz
stos
stc
dec
mov
fdiv
dec
dec
sbb
cld
push
fisttpl
dec
repz
add
cmpsb
mov
iret
or
xchg
in
ret
in
movw
dec
es
mov
mov
jg
dec
sbb
cmpl
add
mov
lahf
or
aam
and
loope
jle
ret
dec
dec
pop
mov
xchg
xchg
test
adc
test
sbb
lods
mov
cltd
or
daa
dec
sbb
das
and
mov
les
negl
sub
dec
in
pop
xchg
ret
jns
xchg
mov
xchg
std
jmp
and
and
stos
push
imul
jle
bsf
and
xchg
loop
es
pop
mov
test
lods
jge
data16
lods
lds
mov
dec
xor
cwtl
mov
cmp
popf
inc
cmpb
push
out
loope
push
jmp
mov
cwtl
push
pop
sbbl
pop
jmp
imul
cmp
gs
cmp
mov
into
jge
mov
stos
sbb
pushf
ljmp
mov
mov
aam
in
adc
rol
xlat
adc
aaa
and
sub
icebp
jmp
inc
inc
bnd
loope
test
cmp
mov
jae
xchg
popf
dec
bound
fs
imul
stc
sub
pop
scas
xlat
cltd
push
dec
ret
mov
mov
aad
jbe
lods
jae
ss
cmp
jle
push
add
loope
test
dec
sub
sbb
movsb
add
xor
ds
inc
adc
pop
xchg
arpl
mov
or
mov
or
loopne
fwait
neg
lret
popf
ficomps
arpl
and
in
xchg
loopne
roll
andnps
mov
xchg
and
jbe
and
outsb
and
imul
inc
mov
xchg
pushf
xchg
mov
lods
out
lret
xor
fwait
xor
xor
movups
push
mov
add
loope
scas
mov
mov
mov
out
shrb
jle
push
iret
test
cmc
loopne
adc
cs
int
int
lahf
ret
insb
test
outsl
push
or
out
js
mov
pop
in
adc
pop
fadds
fidivs
lret
mul
push
addr16
jg
addb
mov
out
mov
adc
nop
push
popf
int3
rolb
mov
mov
pop
icebp
and
add
shlb
pop
je
fisubs
cs
mov
xor
aam
das
out
mov
jo
mov
sub
pop
popa
cmpsb
pop
aad
into
push
push
lods
or
stos
sub
lods
xlat
lret
jo
into
fcos
sub
push
icebp
aaa
cmp
dec
sbb
xor
mov
outsb
xor
mov
outsb
cmp
mov
jmp
dec
daa
inc
push
rorl
sub
cmp
loope
or
cmp
stos
pop
ljmp
mov
push
inc
lret
cmc
and
mov
fdivrs
add
fmuls
mov
jle
loope
mov
push
xchg
lds
dec
fsubs
es
ret
lret
cmpsl
push
or
xchg
sub
in
xchg
mov
pop
pop
imul
lea
fists
mov
fistpl
mov
test
bound
jl
mov
pop
jmp
add
sbb
or
int3
xchg
divb
lds
ror
add
jne
or
or
scas
dec
jecxz
mov
sbb
pop
std
loope
insl
rcrb
js
adc
ljmp
mov
stos
mov
aas
fists
inc
pop
push
sbb
int
xchg
ds
or
stos
and
dec
movsb
nop
stos
ljmp
repz
or
aas
icebp
incb
mov
fucomp
inc
mov
mov
mov
pop
cmp
gs
mov
mov
test
shll
cs
jle
adc
in
cmpsb
xchg
dec
inc
mov
add
adc
add
in
pusha
xchg
jp
out
repz
negb
adc
aam
jne
mov
sub
ljmp
jg
and
imul
xchg
or
xchg
jns
mov
aaa
xchg
fs
dec
out
fucom
mov
stc
lcall
ficoml
inc
cld
inc
movsb
cmpsb
pushw
or
rcll
lret
xor
mov
and
ficompl
inc
enterw
and
arpl
sub
out
test
loope
movd
and
and
mov
push
inc
and
movsl
pop
xchg
mov
lea
pop
push
xchg
push
mov
dec
fwait
enter
cltd
int
sbb
cmp
cmp
sahf
xchg
jne
adc
pop
push
ss
jae
inc
in
stos
cwtl
pop
sahf
add
int3
cmp
mov
or
sbb
icebp
xchg
int
pop
and
jp
ret
add
xor
mov
sbb
in
lea
sti
js
sub
and
lods
cld
push
sub
movsb
sbb
into
lods
xchg
ds
je
loope
add
daa
fistpll
outsl
inc
or
jmp
cmp
inc
movsl
jge
mov
mov
dec
test
das
mov
int
adc
mov
pop
out
cmpsb
test
cmp
sbb
push
sbb
dec
xor
jge
outsb
out
dec
test
loope
iret
sahf
mov
js
ret
aad
sub
jbe
push
mov
sub
push
xor
lret
sub
inc
inc
mov
inc
clc
inc
jmp
data16
mov
loop
adc
ljmp
xor
subl
dec
popa
push
xchg
jbe
mov
div
popa
dec
add
aad
or
mov
je
sbb
les
mov
fmuls
mov
push
xlat
cmp
jecxz
or
pushf
aam
pop
pop
push
es
call
lds
and
dec
rcrb
fsts
test
sub
mov
jo
adc
or
mov
lret
add
test
adc
mov
aad
rorl
shr
or
fildll
inc
push
pop
popa
mov
imul
add
dec
scas
test
mov
push
test
jb
insb
sub
mov
add
inc
dec
mov
sbb
sub
addr16
pop
cmp
mov
je
pop
adc
add
jge
lods
pop
push
inc
push
lds
jne
imul
xchg
sub
and
xchg
push
jmp
pop
repnz
cmc
stc
xchg
cmp
xor
std
add
inc
int
push
xchg
dec
dec
aaa
stc
clc
call
rorb
int3
pop
int
icebp
mov
add
jo
lret
mov
insb
xor
push
loope
int3
dec
cmc
jle
loopne
cld
call
mov
scas
or
pop
repz
add
push
jae
jecxz
pop
invd
lcall
dec
mov
xor
xchg
push
adc
push
sti
mov
dec
test
in
push
add
cs
loop
int
add
es
mov
je
mov
cmp
xor
test
pop
push
call
lock
roll
fs
or
push
inc
mov
lock
mov
inc
in
fiadds
loop
pop
push
xchg
andl
adc
add
addb
jmp
mov
xor
mov
pop
xchg
lods
xchg
or
insl
in
mov
lods
pop
into
pushf
leave
lret
repz
sarb
xor
lcall
nop
push
push
popa
or
es
mov
mov
and
les
movsl
pop
fsts
xor
mov
pop
imul
aas
data16
test
xor
jbe
sub
mov
dec
iret
dec
ret
ret
pop
es
pop
hlt
into
cld
test
clc
out
push
decl
sbb
add
jne
out
pop
ret
jp
fs
sahf
gs
inc
or
push
add
mov
fs
push
add
in
sbb
and
jno
add
xchg
and
fnop
les
dec
fwait
jno
pop
jg
mov
into
push
cs
leave
out
pop
mov
clc
jge
jecxz
pop
xor
shr
inc
mov
out
fmull
cwtl
dec
cli
jmp
out
loope
mov
sbb
xor
fsts
adc
jle
push
inc
add
mov
stos
xchg
fwait
dec
aad
mov
or
xchg
lcall
xchg
inc
dec
push
jno
in
xchg
aam
ret
cmp
rcrl
popf
inc
inc
push
xchg
lock
inc
jge
outsb
imul
jge
ds
mov
dec
sbb
mov
xchg
stos
sbb
fisubrs
int
pop
xor
mov
lea
pop
mov
leave
jecxz
mov
and
jnp
add
mov
dec
push
cmp
mov
jecxz
cmp
add
mov
std
or
pop
push
ds
pushl
mov
add
lret
pop
cmp
mulb
in
sbb
lock
test
dec
jp
mov
fwait
inc
fnstsw
adc
loop
data16
out
mov
andb
insb
aas
fisubl
mov
icebp
add
mov
pusha
cwtl
in
mov
ret
cmp
cmp
mov
sahf
mov
cli
ret
jge
xor
ret
fwait
outsl
leave
mov
cmp
mov
in
jnp
outsb
pop
shrl
and
sub
and
jb
fldenv
sbb
and
sub
mov
push
xor
jecxz
clc
sti
lret
inc
popa
in
adcl
mov
rol
mov
mov
push
ljmp
mov
lods
push
divl
test
mov
movsb
cmc
adc
mov
mov
hlt
ret
cmpb
mov
jne
push
xchg
pop
mov
lret
inc
mov
mov
fsubrl
jge
and
aam
sbb
or
inc
jb
shl
dec
in
mov
dec
mov
out
mov
enter
sbb
fdivrs
clc
shll
movsb
mov
sbb
rcrb
mov
rcl
xor
call
test
ss
fidivs
cltd
push
popa
dec
mov
out
xor
mov
lahf
xchg
pop
dec
dec
or
das
fwait
int3
outsb
int
mov
xor
mov
pop
arpl
cmp
inc
shl
mov
fisubs
jmp
xchg
nop
mov
inc
imul
divb
sahf
cmp
shll
fs
mov
mov
ss
and
push
adcb
cmp
insl
insl
jmp
fld
repnz
push
xchg
dec
mov
sub
inc
cmc
push
and
and
push
roll
mov
add
rorl
sub
sub
inc
cs
or
pop
push
jne
roll
mov
stos
jl
daa
push
xchg
mov
xchg
mov
lret
pop
aaa
ja
lods
push
inc
or
pop
push
ficoml
push
push
jne
std
xchg
jge
inc
fldl
mov
das
sub
into
clc
push
cltd
add
test
fsubs
adc
or
shll
mov
xchg
clc
mov
pop
add
inc
adc
stos
popf
sbb
test
inc
cmp
jae
adcl
and
and
loopne
pushf
scas
dec
pop
or
push
movsl
add
in
sahf
dec
xor
aam
mov
dec
push
bound
icebp
je
cs
sbb
push
ds
popf
cs
sbb
cmp
cmp
and
shrb
cmp
or
or
jg
or
daa
out
adc
fwait
mov
adc
dec
in
add
enter
fsts
mov
pop
mov
fisubrs
push
jo
leave
xchg
rorb
lret
in
mov
cmc
out
mov
add
or
pop
xchg
cld
pop
dec
int
mov
push
arpl
shlb
pop
imul
mov
outsb
aaa
in
aam
popf
jbe
mov
jl
cmp
outsl
mov
movsb
je
sub
je
xor
adc
fdivrs
mov
sub
fnstenv
adc
add
outsb
sahf
dec
lret
lcall
test
into
imul
lock
and
in
xchg
sbbl
lock
std
and
icebp
cmp
std
shlb
mov
xchg
sbb
cmc
scas
sub
cmp
fs
pop
jbe
adc
cmc
iret
movsb
and
lcall
xlat
sub
mov
dec
xchg
cmp
inc
cs
lea
xchg
les
or
pop
push
cmp
pop
mov
lret
cmpb
ss
push
test
mov
push
mov
inc
mov
dec
sbb
das
lahf
or
mov
data16
mov
ja
xchg
testl
mov
aas
js
aam
xchg
lods
out
or
and
insl
loopne
addr16
clc
adc
dec
add
js
jo
ret
xor
push
push
mov
or
dec
subb
lods
imul
scas
jbe
jl
jne
xor
stc
fistpll
ret
roll
cwtl
cmc
test
pop
dec
and
sbb
cmp
dec
ljmp
push
cmp
fcomp
push
sub
test
scas
push
gs
or
and
xchg
jp
mov
sti
aas
mov
mov
movsb
pushf
cli
and
lock
mov
mov
lret
pushf
nop
lret
lret
push
cld
mov
mov
xchg
mov
cmp
add
sarb
adc
xor
ljmp
dec
daa
mov
fsubrl
inc
shr
aaa
call
xchg
loop
mov
scas
outsb
jmp
mov
aas
scas
movsl
pop
loop
bound
fwait
cltd
test
fs
push
addr16
fisubl
xchg
or
je
and
jae,pt
pop
das
je
faddl
sub
xor
sbbb
mov
decb
dec
jbe
pop
jns
fldenv
mov
dec
les
mov
push
imul
repnz
fsubrl
and
in
mov
push
cltd
neg
je
pop
mov
insl
inc
scas
test
cmp
xor
dec
sub
mov
pushf
fimuls
pushf
push
out
mov
dec
add
lcall
dec
xchg
push
cmpsl
cmp
and
mov
das
xor
test
mov
clc
out
inc
inc
stc
orl
aad
push
sbb
and
leave
and
mov
fnstenv
daa
stos
sub
inc
call
jb
cmpsb
mov
add
sti
inc
sub
mov
xchg
aad
adc
pop
mov
xlat
jbe
mov
pop
mov
loop
xor
xchg
mov
in
call
or
ja
lock
loop
xchg
mov
xor
adc
daa
dec
ds
filds
scas
jmp
enter
inc
push
daa
fistpl
or
adc
inc
lcall
add
lea
cmp
sub
cmc
mov
xchg
movsb
sahf
addl
aas
out
jb
or
xor
xor
mov
xor
dec
lret
mov
jge
jne
mov
mov
sarb
inc
subl
stc
outsl
adc
xchg
push
lds
in
out
jae
fidivrl
add
jo
sub
dec
pusha
jbe
js
xchg
mov
ja
pop
dec
xchg
or
pop
test
mov
lahf
cmp
push
rclb
ja
cmp
adc
pop
call
jmp
stos
stos
pop
les
in
lock
lahf
mov
insb
cmp
sbb
lret
xchg
lahf
dec
out
sub
xor
leave
aam
push
inc
jb
das
int
gs
arpl
cs
movsl
mov
xor
sbb
or
mov
xor
add
cmp
filds
pop
loopne
mov
aaa
mov
push
hlt
xchg
xor
popa
call
nop
lods
stos
lods
call
jle
adc
lret
pop
je
pop
cmpsb
test
mov
cmc
push
push
js
scas
adc
ja
inc
add
sar
lods
pop
xor
xor
push
xchg
push
inc
ss
std
dec
mov
stos
push
jmp
pushf
jg
jmp
xchg
fiaddl
shll
push
inc
shrl
pop
lahf
sub
dec
dec
adc
ljmp
fsubl
pop
cmp
pop
loope
mov
inc
out
xchg
dec
push
adc
mov
sub
fldenv
fadds
add
xor
xchg
lock
mov
out
popf
jne
push
dec
out
lret
imul
fcmove
lcall
dec
mov
pop
add
cmp
sub
dec
andb
add
or
jmp
cmp
sti
jbe
repz
in
cli
or
xchg
out
mov
test
mov
sahf
pop
sti
test
repz
sbb
insl
xchg
sbb
stos
and
rol
icebp
jnp
lock
inc
insl
fistps
mov
add
and
cmp
push
mov
sbb
out
sub
sti
fildl
int
idivl
cmp
mov
outsb
jb
ret
ss
test
mov
xchg
out
jns
in
mov
mov
test
xor
and
shlb
pop
ljmp
loope
pop
ja
popf
out
filds
fadds
sbb
ret
scas
lock
add
mov
or
or
adc
outsl
inc
fisubl
cmp
imul
jo
push
pop
out
int3
or
push
cmpsb
inc
filds
es
fsubl
fisttps
out
mov
xor
lds
popf
in
lret
xchg
mov
je
jge
add
pop
jle
jns
inc
mov
cli
nop
or
sbb
repz
lods
andl
pop
add
cmp
cmpsb
mov
rcl
mov
loopne
pop
jp
adc
sbbl
outsl
movsl
jne
sbb
xchg
mov
stos
nop
adc
pop
aam
and
bnd
mov
outsl
lods
or
mov
sti
loopne
jle
clc
jle
xchg
aam
mov
cmp
mov
dec
cld
xor
cmc
mov
sub
push
call
out
jns
iret
bound
mov
push
lahf
fs
dec
pop
popa
into
dec
sub
lret
add
lret
mov
in
jo
icebp
enter
dec
push
in
xchg
lods
inc
es
cmp
subb
out
mov
and
mov
pop
sbb
or
dec
lret
loop
lea
cmpsb
jmp
xchg
sub
lahf
and
mov
push
test
xor
sarb
or
fidivrs
cmp
mov
loop
cwtl
sbb
lea
pop
or
mov
in
test
lods
push
outsl
add
dec
in
push
imul
mov
push
xchg
in
lea
ret
pushf
push
cli
sbb
outsb
xor
scas
mov
push
mov
pop
into
mov
add
jp
jp
stos
pop
xor
int
pushf
add
rorl
and
mov
nop
movsl
pusha
push
lahf
stc
lock
pop
rol
repz
adc
xor
ja
mov
inc
cmp
nop
lret
sarb
dec
dec
fsubs
xchg
mov
dec
mov
rcr
xchg
repnz
xchg
push
adc
pushf
repnz
inc
aam
pop
rolb
leave
or
adc
add
inc
sar
push
and
pop
inc
sub
mov
movl
insb
xchg
dec
nop
pop
sbb
or
mov
cltd
adc
or
add
xchg
xor
jp
dec
inc
xor
into
mov
in
pop
or
push
xlat
outsb
dec
gs
dec
add
jns
dec
push
mov
cwtl
scas
pusha
mov
and
inc
jae
mov
orb
jne
stc
push
xchg
mov
push
data16
lods
rol
xchg
imul
mov
fstps
mov
lret
jecxz
jl
pusha
rcll
fnstcw
or
inc
lcall
ds
pop
push
mov
aas
je
push
in
inc
aas
dec
vmaxps
mov
notl
xor
jae
dec
lds
lea
stos
fsubl
mov
dec
lret
inc
and
mov
iret
cltd
adc
call
clc
test
loop
mov
jle
enter
jns
cmp
stc
loop
lcall
mov
xlat
cmpsb
or
stc
push
ret
sbb
int3
loope
idivb
push
add
fcompp
pop
or
mov
int3
cmp
rcrl
fcompl
jl
push
iret
inc
mov
push
pop
sub
sub
xlat
rcl
sub
stc
enter
scas
mov
cmpsb
sbb
js
and
insl
mov
aas
lret
xchg
cmp
cld
inc
mov
insb
scas
out
jle
sbb
push
cmc
in
and
mov
cld
aas
mov
sub
cmp
mov
inc
pop
mov
fwait
xchg
add
cltd
lods
in
dec
outsb
mov
xlat
imul
sbb
jb
sub
sub
scas
cs
xor
sbb
lea
lahf
sbb
inc
cmc
cmp
mov
push
jnp
in
xchg
data16
pop
scas
mov
mov
xor
push
ss
mov
imul
repz
dec
dec
dec
mov
das
xor
jns
in
fcmovb
and
cmp
mov
sbb
pusha
pop
cmp
pop
adc
jle
or
es
add
lea
dec
call
sarb
ret
jmp
das
cmc
pop
gs
and
push
jo
inc
imul
xor
je
pop
lret
cmp
rolb
cmpsb
push
inc
xchg
fcompl
dec
cwtl
xor
mov
sbb
test
cmp
jmp
aam
lahf
bound
adc
sub
mov
scas
repz
xchg
bound
aas
cmp
pusha
test
jle
cmp
lret
and
in
xor
inc
in
mov
cmpsb
rcll
mov
adc
jo
pushf
sub
mov
insl
sbb
dec
stos
jns
and
xchg
push
fwait
xchg
aad
xor
stc
les
mov
fidivrl
add
loop
cli
pop
ja
in
or
adc
pop
stos
push
nop
in
add
xchg
sbb
inc
cmp
jae
jbe
xchg
loop
jp
jl
lcall
inc
cmp
pop
jmp
sub
xor
adc
outsb
jne
pop
imul
aas
scas
fisttpll
out
int
add
xlat
mov
mov
fcmovnb
xorl
dec
mov
xchg
pop
lock
xor
mov
incb
lret
cmp
in
out
mov
jg
clc
inc
sub
aaa
fistl
mov
iret
and
mov
mov
fdivs
or
mov
clc
push
fisttpll
sbb
adc
nop
fdivrs
rcrb
insl
push
push
or
cld
incl
ss
dec
dec
sbb
lahf
sahf
push
sub
fs
mov
mov
jae
fistl
inc
push
sub
xchg
or
sbb
xor
repz
ret
xchg
sbb
mov
repnz
xor
jmp
adc
jle
mov
out
les
adc
mov
mov
outsb
shrl
and
jo
xor
sbb
mov
loop
xchg
sbb
xchg
mov
fidivl
stos
inc
bnd
popa
sbb
out
pusha
lahf
add
add
mov
sbb
dec
decl
cmove
jo
xchg
movsl
cmpsl
jo
adc
mov
mov
push
loop
push
and
imul
stos
jb
outsb
out
mov
and
add
roll
shlb
pop
pop
in
adc
mov
lock
push
pop
mov
and
or
xor
or
dec
pop
push
cmp
cmp
pushf
mov
jae
test
mov
xor
cmp
mov
icebp
adc
jge
enter
jae
mov
fstps
mov
lods
xor
mov
lods
call
lods
data16
iret
andl
aad
lock
add
ficomps
add
sbb
mov
pop
and
mov
cmp
xchg
repz
mov
inc
add
lods
xor
sub
pop
mov
mov
mov
loope
hlt
push
push
adc
out
popf
jle
sub
enter
dec
out
pop
and
push
lock
test
enter
outsb
insb
mov
adc
bsr
repnz
add
jle
fdiv
lock
xchg
cmpsl
dec
and
es
leave
jecxz
mov
adc
inc
shrb
out
jge
sbb
jmp
jo
sbb
jae
sbb
inc
add
push
popa
sub
lock
fwait
orb
or
aaa
ja
rcrl
mov
mov
daa
mov
add
pop
loop
sub
cli
jo
push
mov
and
jbe
not
push
pushf
xchg
clc
pushf
xor
push
mov
movsb
inc
mov
inc
jle
outsb
sarb
inc
mov
inc
rcll
pop
mov
cwtl
outsb
cmpb
jg
fsubp
cmp
daa
adc
jb
loopne
cs
push
dec
mov
cmpl
mov
xchg
out
ss
or
out
insb
xor
adc
xchg
or
push
sbb
mov
or
push
jns
xor
mov
je
out
lret
sbb
scas
dec
in
cmp
mov
fs
sub
jae
mov
test
jns
adc
mov
xor
push
mov
and
push
gs
data16
inc
push
jp
sbb
dec
pop
testl
and
mov
int
aaa
aaa
lret
and
test
cmp
fs
jmp
js
xchg
outsl
pushf
add
fidivrs
and
or
in
lods
dec
mov
loopne
push
xchg
shll
rorb
adc
inc
add
cmp
int3
mov
sub
popa
pusha
push
repz
aas
dec
addr16
jae
mov
push
add
push
into
popf
mov
rorb
clc
test
or
sbbb
stos
out
les
mov
pushf
rorb
xor
add
push
je
xchg
push
xor
xchg
repnz
psubd
mov
or
ss
insb
jl
sub
pop
std
push
hlt
dec
test
in
int3
mul
stos
data16
and
andb
sub
mov
insl
iret
loop
rcrb
mov
mov
fwait
inc
jb
cmp
adc
mov
mov
add
std
outsl
stos
mov
push
cmp
push
add
outsl
xchg
roll
popf
clc
cmp
lea
jecxz
fs
in
sbb
lods
sub
dec
ret
std
jl
subl
adc
aas
cmpsb
shl
adc
jns
rorl
mov
push
and
je
mov
outsb
ljmp
adc
push
in
test
in
ss
xchg
and
sbb
mov
push
sbb
ja
xchg
ret
mov
std
pusha
faddl
pushf
sub
stos
pusha
mov
inc
mov
add
iret
cwtl
add
mov
test
arpl
mov
mov
out
pop
orl
ds
sbb
rcr
push
cltd
jo
insb
nop
nop
mov
mov
pop
movsb
inc
xchg
pusha
bound
orb
jp
out
cltd
stos
out
mov
pop
mov
popf
xchg
aam
sbb
cld
mov
call
pop
or
data16
and
adc
cmpb
cld
into
add
cmpsl
adc
les
xlat
lds
push
ja
or
jbe
fcoml
xchg
out
leave
adc
jmp
pop
xor
fidivs
adc
mov
or
mov
popf
daa
pop
test
or
or
insl
movb
outsl
lock
in
xchg
js
insl
jg
pop
xor
add
outsl
out
mov
push
int3
aas
popf
push
dec
jl
xor
arpl
jmp
shll
or
jmp
test
outsl
and
xchg
dec
sti
dec
push
mov
and
add
mov
test
fistps
adc
lret
sbb
clc
jecxz
jle
inc
mov
ret
lea
mov
pop
dec
clc
scas
arpl
inc
mov
cmc
outsl
mov
test
cmpl
nop
dec
pop
mov
dec
or
fsubr
inc
sub
call
mov
sti
adc
sbb
cli
popf
push
mov
mov
push
ret
and
and
cmp
imul
repz
aad
adc
cmpsl
lds
clc
gs
jge
jne
and
mov
shr
inc
loope
fisttpll
leave
pop
xor
cmpb
jns
push
adc
lret
shr
push
fcoml
xchg
add
inc
cmp
fistl
clc
adc
fisttpl
fwait
nop
lock
popf
shlb
mov
xchg
pop
jo
xchg
mov
push
lret
xor
xchg
jmp
dec
std
push
mov
in
in
arpl
fcoms
mov
rclb
stos
jp
test
push
in
aam
pop
mov
push
adc
pop
push
in
imul
fidivs
adc
xchg
xor
ret
cmp
ret
repz
push
enter
sbb
mov
xchg
mov
pop
cmp
fistps
mov
arpl
call
cmpsb
xor
push
mov
imul
in
cmp
roll
test
add
add
jo
bound
ficoml
xchg
mov
sub
pop
cmp
mov
insl
jp
mov
stos
in
add
xchg
mov
and
out
pand
icebp
mov
insl
mov
sbb
leave
xchg
test
mov
js
inc
inc
in
inc
adc
jne
inc
jb
pop
mov
mov
ret
adc
in
out
dec
dec
dec
lods
jg
icebp
bound
inc
ficoml
jle
mull
push
aad
arpl
mov
imulb
ljmp
data16
cld
out
test
fldcw
cmp
xchg
adc
pop
lret
mov
add
leave
cli
mov
das
mov
or
aaa
rolb
sub
jbe
in
or
imul
nop
mov
sbb
or
sbb
lea
cwtl
mov
jmp
in
jle
cmp
shrl
addr16
movsl
pop
mov
lahf
hlt
push
fimull
shr
dec
pusha
rorl
mov
cmp
add
mov
xchg
addl
jmp
aad
push
xorl
cltd
shlb
stos
in
outsl
rcll
pushf
inc
sub
and
pop
push
inc
jp
xor
cmp
rorl
inc
jg
add
and
ljmp
push
xor
pop
inc
pop
mov
loope
mov
insb
bound
pop
loop
cmp
stos
popf
loopne
xchg
sbb
aaa
popf
cmp
cmp
mov
cmp
jmp
fs
cmp
add
cmp
pop
out
mov
mov
xchg
or
mov
sbb
out
sbbl
rorl
lahf
fs
adc
xor
adc
ljmp
negb
xchg
mov
and
inc
push
js
insb
adc
lock
cltd
fwait
lods
dec
int
sbb
je
fistpll
rcr
sub
fwait
leave
pop
xchg
in
lret
mov
or
sbb
addr16
lods
mov
xchg
jo
clc
hlt
mov
dec
repnz
mov
cs
arpl
std
rcl
xchg
mov
add
sbbb
jmp
ljmp
std
jl
xor
and
xchg
scas
mov
sub
lds
dec
movsb
and
xchg
pop
jp
jo
or
ret
mov
nop
or
xchg
negb
xchg
add
hlt
aam
stos
pop
push
cld
inc
ja
mov
sub
cli
shlb
lock
lds
mov
cmp
les
add
mov
cli
jg
and
xor
into
push
psubq
mov
pop
mov
lret
xchg
cltd
popf
insl
pop
cmp
mov
in
lods
cli
pop
push
test
outsl
js
in
sub
stos
push
daa
and
out
mov
rorb
fwait
or
push
or
hlt
sub
cmp
lea
adc
jbe
pop
jns
daa
xchg
loopne
jns
fidivl
mov
xor
test
xorl
sahf
lcall
adc
or
enter
cli
sbb
push
fsub
in
mov
mov
jmp
pushf
clc
dec
or
sbb
xor
ret
popf
das
es
xchg
push
dec
cmc
mov
push
dec
iret
in
inc
arpl
push
mov
cmc
es
pop
in
dec
push
lock
in
outsb
dec
sub
mov
mov
shll
fs
jg
cs
xchg
in
mov
into
sub
pop
pop
aas
mov
adc
pushf
xchg
jmp
cmpsl
lret
mov
outsl
push
xchg
mov
cltd
stos
mov
bound
sbb
sbb
stos
and
movsb
rcrl
xchg
mov
pop
mov
test
lret
mov
jo
add
call
and
cmp
mov
mov
ret
lret
js
sti
js
mov
add
aad
lret
cmp
lods
inc
add
pop
xchg
and
mov
in
push
out
addl
loope
shlb
es
jae
sarl
mov
lahf
aam
push
jecxz
iret
mov
icebp
arpl
fs
fisubrl
lock
push
sbb
xor
nop
xor
or
jmp
mov
insb
hlt
mov
push
lret
sti
call
sti
mov
sbb
ficomps
faddl
or
adc
mov
cmc
or
cltd
and
mov
repz
push
sbb
cmp
jle
out
mov
aaa
int3
xor
stc
mov
pop
scas
lret
jbe
cmp
pop
pop
int
out
sbb
scas
js
mov
and
hlt
jmp
repz
mov
shlb
stos
imul
lds
ljmp
ja
data16
shll
dec
jb
les
sbb
cwtl
inc
push
sahf
aaa
imul
outsl
xchg
outsb
rcll
pop
xchg
and
cmp
in
in
dec
push
scas
pop
mov
mov
test
cmpsb
cmp
daa
cmp
call
int3
pop
mov
das
and
out
cmp
das
lret
add
xorb
add
mov
sbb
cmp
push
push
movsb
cwtl
jecxz
stos
lcall
push
cmpl
lods
push
adc
sbb
int
and
mov
scas
sbb
xor
jmp
call
mov
inc
adc
addr16
shrl
mov
sbb
jno
movsb
xchg
aad
add
imul
mov
call
je
lods
ss
ret
arpl
addr16
adc
das
jmp
xorl
pop
les
mov
push
xchg
adc
test
mov
xor
mov
push
aas
mov
add
mov
xchg
cld
jge,pt
subl
jecxz
or
mov
insb
add
popa
and
clc
push
aaa
xor
dec
cli
fstl
aas
movsb
push
push
xchg
sub
cli
addr16
inc
cmp
or
mov
mov
inc
in
pop
aas
fnstsw
jge
pop
pop
jbe
and
insb
adc
orl
xchg
shlb
ja
adc
push
or
lea
sbbl
push
sub
jb
push
and
pop
in
mov
add
xor
les
lret
ljmp
fs
inc
in
inc
inc
jns
push
push
leave
jle
cli
in
and
sbb
xor
cltd
or
pop
fucomp
mov
lock
xorl
sub
in
cmpsb
jo
mov
push
inc
mov
and
cld
inc
stc
ss
cwtl
xchg
mov
pop
and
jge
add
push
out
jno
jnp
xor
push
and
sub
jnp
shr
push
mov
and
or
pop
into
mov
dec
les
dec
rolb
dec
stos
mov
out
out
mov
fldenv
jle
ja
aam
pusha
shrb
sub
std
add
jp
popa
arpl
repnz
pop
jae
mov
sub
or
cli
push
mov
inc
adc
in
xlat
ljmp
mov
stos
push
shll
loop
lret
and
add
imul
jle
jb
or
adc
and
rclb
or
or
arpl
pop
enter
mov
and
pop
test
ror
fisubrl
xor
mov
mov
push
jno
lret
mov
outsl
push
out
stos
mov
mov
xor
add
repnz
cmpsl
sub
and
test
mov
jo
and
mov
mov
cmc
xchg
ljmp
jecxz
sahf
divl
enter
mov
ljmp
div
in
xchg
push
jmp
push
ja
push
gs
out
sub
sub
int3
pop
lret
push
jne
pop
ds
cld
mov
xor
int3
mov
addl
jge
sub
dec
jae
xor
pushf
test
lahf
bound
sahf
inc
mov
fisubl
bound
mov
inc
int
mov
aas
test
loope
push
stos
in
sarl
xor
cmp
sbb
test
dec
mov
into
out
lahf
mov
mov
mov
jnp
cwtl
mov
test
jne
push
cmp
fwait
pop
cmp
push
loopne
jb
sub
cmp
in
hlt
cmc
int
rolb
popf
dec
insl
repz
rcrb
pop
insl
mov
das
out
push
xor
cmp
flds
xchg
into
cmc
js
sub
imul
arpl
adc
cs
pop
mov
adc
sbb
in
scas
cmp
mov
lods
imul
jge
fnstcw
lock
pop
lahf
jo
inc
pop
out
int
mov
test
sbb
push
mov
insl
pop
inc
sarb
aas
cltd
mov
pushl
notb
daa
jno
in
cwtl
shrb
leave
aaa
xor
mov
xor
inc
stos
or
int3
es
xchg
pop
das
sub
in
lds
or
daa
adc
cmp
int
push
in
pop
das
loopne
ret
cmp
cmp
pop
jnp
xlat
sbb
aam
fimull
jae
lock
aad
adc
mov
int
xor
adc
das
shlb
inc
cmp
push
popa
fistps
icebp
xor
jns
jb
or
mov
xor
pop
cmpsb
fimuls
mov
mov
sbb
cs
mov
and
xlat
push
dec
lds
xor
imul
xchg
ss
adcl
pop
enter
fs
cmp
xor
ljmp
adc
fistpl
adc
pop
lret
sbb
fwait
push
sub
bound
add
adc
jns,pn
xchg
ljmp
insl
push
cmpsb
pushf
mov
repnz
inc
mov
in
sub
inc
xchg
mov
jmp
jg
xor
rcll
cltd
add
dec
insb
movsl
addr16
fsub
adc
inc
inc
sbb
mov
sbb
push
sbb
mov
jbe
sti
cmpsl
out
adc
loope
ljmp
mov
scas
ret
divl
xchg
and
ljmp
dec
pop
pop
ret
sbb
or
add
or
incl
and
std
inc
mov
fsubp
fmul
js
movsb
pop
scas
pop
xchg
in
mov
and
outsb
cmp
lods
test
or
ret
and
fsubrp
lods
dec
cs
xor
mov
jle
gs
push
pop
gs
push
gs
rclb
das
aaa
sar
addr16
je
push
adc
lock
and
dec
push
std
movsl
enter
mov
fisubl
andb
xor
fcmovnbe
cmpsl
jae
add
lds
and
push
push
rep
dec
cmc
or
or
lea
xor
int3
adc
cltd
sub
adc
das
sarl
xlat
pop
iret
mov
test
sub
fsubrp
rcrl
and
cmp
fsubp
inc
push
out
rolb
lds
adc
aam
ret
mov
cmp
add
jnp
scas
mov
dec
mov
mov
xchg
fbld
jno
jae
add
mov
cwtl
movb
and
mov
std
lods
dec
or
iret
dec
and
cmpsl
subl
sbbl
push
sub
pop
lds
or
imul
xchg
cmp
xor
outsl
dec
lcall
mov
inc
mov
sub
adc
adc
xchg
pcmpgtw
shrb
cmpsl
orl
andb
dec
push
sbb
scas
pop
lahf
pushf
push
xor
push
inc
xchg
cmpsb
add
and
adc
jp
dec
cmp
pop
pop
popf
loope
mov
push
mov
add
sub
bound
addr16
sub
mov
jb
mov
sbb
ret
dec
icebp
jns
adc
xor
dec
mov
or
cmp
inc
jb
inc
jnp
add
jl
jecxz
mov
sbb
pop
xor
jb
arpl
jg
cs
in
int
or
xchg
and
repz
movsb
add
shlb
repz
insb
adc
inc
mov
jp
or
mov
xorb
fcmovu
push
je
mov
loope
sbb
xchg
push
pop
jg
push
jle
sti
push
test
insl
push
into
popf
out
sbbb
mov
sbb
xor
jmp
fiadds
cwtl
stos
cmp
dec
test
mov
and
push
xorb
jg
xchg
stc
mov
xchg
ss
inc
and
bound
pop
dec
inc
cs
or
sbb
cwtl
std
inc
cltd
or
popf
sbb
inc
mov
lods
add
xor
cs
test
movb
ds
cmp
mov
push
ret
and
xchg
insl
das
jmp
sub
loope
cltd
add
add
mov
pop
inc
addr16
movsb
and
orb
clc
xor
ret
je
pop
sbb
lock
lods
jmp
data16
stc
mov
std
pop
rcrb
in
xor
nop
xchg
or
jp
ss
xor
add
scas
adc
xor
in
cmp
imul
mov
dec
out
outsb
loopne
in
xchg
js
pop
or
or
jl
sbb
mov
sbb
mov
sbb
add
test
xor
dec
test
jne
loope
mov
in
mov
inc
push
cmp
pop
aas
mov
pusha
mov
or
or
mov
push
xchg
leave
notl
jle
rorb
xor
mov
stc
fwait
mul
jmp
fldt
mov
push
and
xor
pop
repz
and
shl
adc
ljmp
aaa
lock
aad
mov
stos
pop
xchg
mov
add
dec
filds
mov
mov
imul
push
and
je
push
push
ret
inc
cmp
cmp
mov
inc
add
stos
adcl
test
test
cs
mov
push
or
push
sarl
inc
dec
mov
and
inc
inc
pop
rclb
popf
mov
stos
gs
loop
fiadds
jno
mov
mov
mov
inc
or
stc
cmc
clc
pop
xor
out
ljmp
and
sbb
icebp
aaa
sub
or
enter
movsb
imul
jae
icebp
ljmp
and
adc
into
cltd
jb
mov
xor
mov
sbb
mov
jb
nop
jns
stos
sarl
push
xchg
sub
imul
aaa
es
mov
aaa
push
or
xor
jp
sub
xchg
pop
add
mov
loope
ds
lock
sub
rcrl
nop
dec
dec
iret
hlt
jmp
push
lea
jb
in
mov
scas
xchg
xchg
fsubr
xor
ss
cld
dec
fidivs
mov
iret
imul
std
jl
xor
sbb
sub
ja
fstps
scas
push
clc
adc
push
idiv
dec
xchg
pop
xor
gs
popa
cld
add
push
add
mov
and
mov
pop
push
repnz
shl
movsb
xor
pop
mov
cltd
xchg
xchg
out
enter
mov
into
mov
pop
sbb
jae
movsl
imul
je
scas
cld
loop
or
shll
mov
cmpsb
push
mov
pop
daa
mov
mov
or
shll
mov
outsl
loopne
divl
subl
icebp
add
pusha
mov
push
outsl
movsl
cmp
hlt
dec
stos
out
popa
add
sbb
aad
inc
dec
mov
dec
in
sbb
or
int3
pusha
mov
add
lret
push
rcrb
jg
mov
gs
loop
lds
daa
lret
or
mov
out
adc
movsl
xchg
mov
xor
mov
fdiv
daa
adc
jle
push
xor
sub
sti
mov
jg
jo
or
loop
stc
lea
loope
add
xor
mov
divb
pop
inc
aad
push
setle
lods
mov
outsl
shll
fmull
lock
stos
cwtl
pop
mov
pusha
pop
mov
in
out
xor
sti
movsl
loopne
jl
xchg
cli
icebp
sti
lahf
mov
js
or
ret
and
lret
push
icebp
stos
fistps
xchg
pop
jnp
lcall
shlb
data16
mov
lea
inc
pop
mov
xor
pop
sbb
rolb
das
cmp
xchg
mov
push
cmp
dec
leave
roll
psrld
xor
mov
sub
cmpsl
je
fsts
push
mov
jb
dec
jns
nop
adc
xor
aas
mov
mov
xchg
aas
mov
and
js
mov
lret
dec
lret
ss
mov
fidivs
insl
pop
xchg
or
nop
ret
jp
pop
jno
aaa
jle
out
cmp
adc
movb
cmpsl
test
and
pop
pop
sti
insl
push
xchg
jo
mov
int
and
xchg
gs
cmp
std
ds
jnp
cmpsb
je
in
or
test
jp
dec
jo
or
xchg
mov
push
mov
insl
movsb
sub
push
push
sbb
ret
mov
and
pop
loope
mov
nop
stos
icebp
sbb
movsl
filds
repnz
loopne
rep
int3
sbb
push
pop
mov
dec
mov
push
sti
mov
dec
fidivrl
sub
fsubl
imul
stc
and
mov
inc
rcrl
fnsave
sub
adc
and
or
sbb
push
leave
das
scas
ja
sub
xlat
sub
mov
push
pop
inc
outsb
rcrb
movb
push
into
ffreep
in
notb
push
inc
xchg
in
loopne
ret
jb
xchg
imul
std
pop
packuswb
roll
ret
jp
inc
fwait
enter
jne
mov
sub
push
xor
ja
or
mov
or
jnp
lds
call
mov
repz
sbb
pop
cmc
loop
mov
mov
nop
inc
adc
imul
in
sub
pop
scas
mov
dec
popa
jp
enter
divb
addr16
dec
fadd
cmp
cmp
enter
xchg
or
ja
sub
jmp
pop
jo
jne
mov
sar
mov
mov
lahf
cli
subl
dec
jbe
adc
scas
rcll
mov
jl
sbbb
insb
scas
mov
nop
or
lret
pop
jnp
pop
xchg
mov
cli
sub
push
fwait
and
testl
sbb
mov
or
cli
or
bound
sbb
adc
movsb
pop
cltd
das
mov
push
mov
iret
add
xchg
mov
add
mov
lock
jne
sbb
movsb
sub
bound
pop
movsb
xchg
and
negb
jge
xchg
in
int
repz
cmp
stc
fstpt
mov
sub
imul
adc
jge
ljmp
push
sub
scas
ljmp
lods
dec
inc
rorb
inc
or
insl
imul
dec
data16
inc
mov
lods
cli
mov
mov
sti
sbb
jecxz
dec
bt
insl
jbe
lret
outsb
xchg
aad
cmp
xor
xlat
adcb
repnz
sbb
push
dec
lock
sub
addb
mov
jns
or
dec
cld
or
pop
adcl
jne
mov
and
lods
cmp
lods
push
jl
lea
xor
into
paddsb
movb
ljmp
es
jae
xor
out
je
mov
cmp
arpl
push
fists
lock
mov
jo
test
sub
ret
jnp
push
add
fmuls
jno
push
pop
mov
int3
popa
dec
out
fidivs
call
cmc
pop
lds
fldt
mov
cmp
mov
int
sahf
and
movsb
loope
mov
cmp
sub
xlat
mov
sub
fisubl
lods
out
xchg
in
scas
data16
insl
repnz
or
arpl
or
sub
inc
mov
jb
or
sbb
and
fcoms
lret
arpl
jns
outsb
scas
loop
mov
push
sub
push
push
jl
inc
add
sub
mov
mov
andb
ret
xchg
test
or
nop
and
int3
pusha
gs
dec
nop
and
cwtl
test
sar
insl
dec
movsl
callw
outsl
out
add
or
pop
jp
movsl
cwtl
outsl
jmp
xor
add
pop
push
xor
stc
cmp
cmpsl
adc
xor
cmp
jnp
cmpsb
xlat
jle
pop
lods
imul
jo
adc
sahf
ds
and
scas
adc
sub
cmpsl
hlt
add
mov
pop
xor
xchg
sbb
call
cmp
popf
cmpsb
cmp
lret
jg
sbb
dec
shll
pop
scas
cmpsl
pop
sub
ja
inc
add
adc
cmp
ret
sahf
mov
cs
fcmovnu
mov
js
inc
imul
aas
arpl
adc
pop
jl
inc
inc
rclw
and
pop
int3
pushf
rcr
icebp
aam
dec
cmp
fs
jl
xchg
or
stc
or
mov
pop
lock
enter
popa
xchg
lods
fsubs
jo
mov
insl
addr16
push
inc
pop
jns
jmp
mov
lea
dec
mov
iret
pop
movsb
sbb
pop
fnstenv
dec
and
jle
add
xchg
orb
inc
jle
push
sbb
or
pop
push
test
das
repz
pop
gs
das
mov
push
iret
mov
loop
in
lock
xlat
xchg
cmp
or
test
data16
fmull
push
fimull
pop
sub
sbb
outsl
pop
sbb
popf
push
lahf
cwtl
adc
adc
pop
cmpb
xlat
mov
sbbl
insl
push
mov
dec
sub
xchg
pop
mov
push
pusha
cli
adc
mov
outsb
arpl
xchg
pop
adc
test
shrb
dec
fsts
bound
xchg
xchg
mov
cmp
cmpsb
test
pop
jmp
mov
cmp
fwait
mov
popf
cmp
leave
mov
dec
mov
dec
pusha
stos
aaa
cltd
cmp
pop
sub
mov
pop
adc
mov
test
sub
std
xchg
clc
push
push
sahf
repz
push
cmp
adc
clc
jg
and
cld
ja
xor
pop
or
je
mov
push
and
inc
xor
adcb
fnsave
jl
int
gs
jnp
jne
mov
daa
negb
loope
mov
ljmp
dec
lods
push
fstpl
insl
test
in
and
test
inc
push
std
in
adc
adc
or
mov
cmc
dec
mov
mov
add
dec
or
jp
ret
lcall
aaa
xchg
sar
lcall
mov
sub
shrl
mov
mov
cli
pushf
test
hlt
cmp
cmp
aaa
cwtl
cwtl
mov
pop
xchg
sti
jnp
mov
fwait
imul
mov
bound
jle
test
push
mov
pop
add
loop
cmp
fdivr
divl
mov
jne
sub
es
insl
dec
inc
sub
adc
std
ret
in
arpl
fidivs
cmp
add
xor
cmp
insb
jecxz,pt
sarb
addr16
sbbl
mov
adc
push
loop
jecxz
stos
mov
adc
push
je
jne
idivl
sbb
push
xchg
cmp
or
jmp
popf
push
push
mov
stos
cmpsb
test
icebp
cs
lock
push
add
aaa
push
rcr
add
sub
fs
in
inc
in
mov
gs
jmp
jmp
dec
std
fstps
push
ret
push
mov
lret
mov
outsb
pusha
pop
enter
jl
dec
jecxz
mov
mov
xchg
push
inc
bound
enter
inc
mov
push
dec
sti
xor
out
adc
data16
adc
jbe
rcr
sahf
push
int
mov
inc
dec
xor
jb
enter
ror
out
adc
sub
in
xchg
sbb
push
jecxz
mov
cltd
adc
pop
dec
shll
data16
and
cs
fmulp
fwait
push
fnstenv
cmp
movsl
sbb
notl
mov
ficompl
outsl
add
mov
in
mov
lret
xor
lods
cmp
mov
fsubl
testl
lahf
testb
xor
inc
es
cmp
cmp
das
adc
mov
mov
outsb
jbe
leave
xor
and
pop
dec
aam
cmpsb
dec
js
push
push
jae
inc
test
call
jae
mov
fs
les
pop
sub
and
cmp
cmpsl
inc
sub
inc
mov
push
jl
rcll
xchg
outsb
outsb
inc
add
add
mov
add
and
pop
int
lods
movsl
stc
shll
mov
nop
sbb
pop
or
iret
mov
cmc
cmp
clc
adc
andb
dec
bound
pop
pushf
test
mov
inc
jo
sbb
and
call
add
cmp
jo
cmp
mov
ljmp
stos
imul
negl
mov
aas
inc
out
ja
hlt
repz
int3
fisttpl
push
sti
arpl
and
scas
jl
inc
inc
cmp
mov
test
ljmp
sbb
pop
push
iret
add
lods
cmp
lcall
out
ds
fcmovnu
mov
movsw
mov
mov
mov
enter
inc
pop
ljmp
imul
shlb
and
xor
mov
xor
sub
dec
sbb
add
jae
dec
nop
lcall
imul
and
scas
outsl
std
es
mov
or
es
jecxz
imul
subl
sbb
pop
lcall
and
out
mov
pushf
cmc
xchg
fisubrl
sub
pop
loopne
jnp
pop
out
cmc
bound
fdivs
or
mov
repz
rcrb
xchg
pusha
into
icebp
mov
jo
mov
cmp
cmp
shrl
insb
adc
je
xchg
out
data16
aas
inc
or
inc
add
or
mov
and
xor
mov
cmp
push
lret
es
pusha
mov
test
test
cwtl
jnp
mov
pop
push
jmp
neg
push
add
aas
mov
cmp
decb
push
iret
js
fdivs
sub
testb
lret
xchg
xchg
jg
mov
imul
rcr
mov
insl
mov
mov
mov
stc
or
pop
sub
addb
xchg
sub
test
test
cmpsb
add
cmpsb
mov
in
xchg
push
imul
in
fldenv
or
mov
pop
shlb
out
mov
push
in
push
mov
fidivrs
data16
pusha
imul
xchg
push
in
nop
or
imul
lods
or
and
jnp
ret
ror
cmpsb
jbe
cmp
or
sbb
mov
out
repz
aad
push
xchg
mov
out
jbe
test
addr16
std
jbe
cmp
dec
pop
loop
xor
lea
mov
in
loope
cmc
mov
sbb
xor
lcall
xor
loope
stos
fiadds
shlb
jmp
add
cmp
cld
inc
cltd
push
repnz
stos
push
sbb
ja
add
nop
push
fwait
adc
add
inc
add
push
push
nop
xor
bound
push
cmp
lea
clc
mov
mov
adc
sub
inc
in
sub
pushf
pop
in
lods
aad
sub
mov
jae
push
out
or
outsl
xchg
pmulhw
inc
popa
fbstp
xchg
add
push
adc
insl
in
fldt
mov
sub
into
ret
or
pop
xor
test
std
lret
push
xor
pop
sbb
xchg
xchg
outsl
test
pop
inc
xor
cmp
sub
stc
cld
or
fwait
ja
ja
fcompl
lret
flds
ds
push
inc
fstl
pop
inc
or
fwait
mov
movl
ret
or
cs
pop
mov
popl
pop
add
dec
adc
jb
pop
dec
sahf
ja
inc
cmp
sbb
adc
lds
rorl
cld
dec
adc
mov
cmp
add
and
inc
fbld
add
inc
test
fnsave
mov
js
push
adc
out
mov
gs
test
mov
xor
push
popf
out
loopne
in
cli
divl
pusha
mov
pop
inc
cmc
xchg
mov
addr16
jp
jg
mov
aam
rorb
sub
mov
fcompl
repnz
pop
loopne
fsubl
test
xor
pushl
and
mov
call
inc
outsb
fldcw
fstpt
shll
xor
mov
nop
sub
dec
mov
frndint
lock
lret
ret
add
test
xchg
xchg
pop
add
or
jecxz
jb
push
sub
xchg
mov
test
pop
in
cmp
jg
pop
stos
lods
lock
aam
adc
cs
psrlw
lods
sub
and
pop
movsl
or
dec
push
mov
shlb
fwait
inc
popa
xchg
sahf
jl
ret
jecxz
dec
add
cmpl
inc
gs
movsl
enter
xchg
adc
mov
leave
shlb
stos
insb
jns
mov
add
jne
fistps
ss
or
aam
mov
mov
mov
mov
sub
jae
add
mov
mov
inc
cmp
scas
mov
cltd
push
jge
shll
mov
loop
out
sub
mov
cmp
xchg
aad
stos
mov
push
neg
inc
out
pop
outsl
adc
adc
loope
pop
cwtl
aaa
pop
cmpsl
ds
mov
enter
divl
inc
inc
pop
add
and
xchg
mov
xor
dec
push
sbb
pop
xor
jnp
cmc
and
jl
sbb
mov
sti
pusha
or
lods
add
lret
scas
in
pop
push
push
add
repnz
sbbb
sbb
aas
and
cltd
or
subl
sar
fsubr
xlat
mov
ret
mov
scas
ret
mov
test
repz
test
mov
cltd
sahf
pop
int3
push
mov
sub
fdivrl
jae
lods
out
add
inc
push
mov
adc
cmp
pop
call
mov
cwtl
call
in
push
pop
outsl
sbb
jnp
cmp
pop
filds
mov
negb
inc
push
cwtl
pop
and
sbb
and
outsl
icebp
pusha
imul
sbb
hlt
push
rorb
and
shl
jae
inc
push
scas
mov
dec
fistl
xor
mov
shl
jb
adcb
xchg
xor
or
inc
dec
cmc
lock
stc
mov
adc
lcall
mov
jle
pop
mov
divb
leave
loop
xchg
aaa
lds
jmp
push
mov
or
mov
cmp
jbe
or
mov
mov
test
adc
ldmxcsr
mov
jp
jne
mov
lea
in
adc
cmp
shlb
lods
jnp
pop
inc
mov
dec
mov
dec
sbb
add
les
push
das
cmpb
stc
xchg
stos
cmp
clc
in
mov
int
cmpsl
sbbb
and
iret
xor
fimull
jo
scas
clc
push
jbe
sub
cmovge
pop
shl
mov
mov
dec
enter
sbb
cmp
dec
fldcw
ds
rolb
push
add
jecxz
xchg
daa
cld
aam
aam
mov
inc
inc
mov
mov
sbb
dec
cmpsb
test
repz
pop
pusha
in
das
enter
hlt
add
sahf
aaa
orl
or
pop
dec
test
and
or
mov
xorl
inc
in
mov
lahf
popa
outsl
jno
sahf
into
dec
xor
cmp
in
cmp
add
adc
movsl
fwait
jle
scas
pop
lret
or
jno
xorb
ds
lock
daa
or
sub
loop
xor
rorb
data16
sub
shrl
cmp
out
mov
cmp
lods
xor
pop
adc
cld
aaa
push
sbb
jns
gs
subl
xor
cld
pop
jle
jae
push
scas
adc
sar
js
and
xor
jnp
std
sbb
shlb
setne
mov
sbb
aam
mov
jns
jo
push
frstor
or
arpl
into
out
xor
add
push
dec
pushf
addr16
insl
jmp
sbb
mov
repnz
mov
xchg
jl
roll
jns
jg
fcmovb
shr
stos
mov
loopne
and
enter
xchg
into
out
test
mov
pop
iret
int
cli
aaa
add
cli
pop
cltd
or
mov
leave
in
in
out
es
push
mov
insb
mov
lock
mov
sbb
pop
stc
mov
adc
xor
xchg
lods
push
test
ret
pushf
cli
sbb
inc
xor
xchg
and
jle
pop
pushf
or
sbb
xor
xchg
fnsave
mov
inc
push
decb
test
inc
in
add
push
mov
xchg
bound
dec
enter
outsl
aaa
xor
test
mov
add
cld
insb
mov
aaa
out
stc
sbb
inc
dec
lret
aaa
sub
xchg
and
push
adc
sub
stc
mov
ss
aam
iret
es
xlat
addr16
xor
mov
cmp
pop
gs
pop
lds
insl
out
out
push
dec
add
push
daa
add
call
insb
std
and
push
arpl
push
shrb
xchg
insb
adc
pop
ja
xchg
cmc
mov
pop
xor
cli
hlt
call
dec
in
or
mov
jns
leave
ficompl
andb
loope
sub
push
or
ffreep
frstor
push
cmp
outsb
data16
shll
jle
mov
adc
ds
push
inc
push
sub
push
movsb
outsl
call
cmp
call
dec
push
jecxz
and
repz
pop
fsubl
mov
je
xlat
jmp
aad
mov
daa
dec
and
lahf
jmp
push
mov
jb
orb
inc
cld
ret
or
push
sbb
pop
scas
inc
add
hlt
testb
xor
insl
sub
jmp
cmp
or
subb
sahf
jne
cli
cs
jg
fnsave
mov
in
int3
addl
lret
push
sbb
and
mov
push
xor
or
shr
stos
lcall
jg
dec
or
mov
and
sub
lret
inc
mov
int
jae
icebp
mov
cmpsb
jl
sti
add
fistpll
sbb
push
imul
stos
in
mov
je
xor
and
dec
xchg
and
shl
out
popf
loop
rep
xchg
insb
mov
mov
push
lret
test
or
mov
cmp
lock
movsb
in
cwtl
ss
fsubs
out
out
inc
cmc
mov
pop
test
andl
aad
jbe
adc
dec
mov
lret
jno
xchg
call
xchg
inc
rorb
push
pop
popa
cmp
adc
fsub
cwtl
mov
mov
stos
movsb
test
pop
dec
sbb
jmp
mov
sub
jmp
ds
aas
sub
sti
js
ret
in
mov
test
test
mov
gs
inc
stc
mov
or
leave
mov
mov
xor
and
sub
pushl
ja
popf
lods
mov
inc
orl
cs
push
les
adc
jmp
pop
push
mov
mov
inc
mov
lahf
fldt
and
test
mov
xor
pop
fstpt
sub
cmpb
sti
dec
testl
and
vucomisd
push
xor
cmp
adc
lret
jecxz
mov
mov
adcb
sub
sbb
in
orl
out
stos
repnz
mov
mov
or
add
gs
fsubs
test
mov
add
das
in
sbb
add
rorl
pop
mov
ljmp
nop
dec
push
dec
mov
lods
pop
mov
sub
insl
mov
out
pusha
cli
jg
icebp
aad
mov
lds
sti
push
jns
dec
sub
jb
jmp
mov
inc
leave
mov
mov
jnp
cmp
movsb
loopne
jnp
aad
bound
loope
mov
lcall
mov
pop
mull
fmuls
int
scas
bnd
push
sti
or
dec
pop
mov
imul
in
loop
bound
push
jns
adc
loope
sub
roll
mov
or
mov
inc
xor
fisubl
lret
cmpsl
mov
xchg
dec
daa
inc
fldl
stos
adc
lock
lret
shrl
push
jnp
imul
repnz
xchg
or
sbb
repz
ret
cmpsl
mov
and
in
pop
test
call
cmpsl
xor
aam
mov
stos
ud2
popa
inc
and
cltd
pop
mov
sti
dec
xor
repnz
jb
jmp
fmul
testb
fldl
or
pop
dec
ret
imul
xor
inc
xorb
mov
inc
insb
loop
nop
imul
jns
out
sbb
push
ljmp
outsl
loope
loope
inc
fldcw
nop
or
pop
xchg
sub
into
xchg
and
push
mov
into
ret
and
popa
shl
inc
inc
sbb
popa
or
pop
int
fcoml
inc
jb
test
decl
pop
out
xchg
scas
lock
int
insl
mov
jbe
mov
dec
inc
cmp
mov
ltr
scas
xor
stos
sub
adc
jl
data16
xlat
inc
pop
xchg
sbbl
sbb
out
gs
sar
push
pop
pop
lcall
shlb
rclb
cltd
daa
cmp
int3
scas
and
fsubrp
and
mov
mov
cli
jne
lret
dec
lds
mov
push
and
int
cmp
sbb
fstl
mov
cli
cmpsb
mov
or
fs
bound
jno
mov
icebp
in
jge
pop
cmp
cmc
loopne
inc
lret
test
adc
jmp
xchg
aaa
iret
xchg
xor
aad
add
movsl
xchg
jns
rolb
out
cmp
aaa
push
outsb
mov
cmp
sbb
mov
int3
mov
cmp
clc
push
repz
js
mov
fistpll
pop
xor
adc
xchg
cmp
icebp
fdivrl
and
insb
xchg
leave
sti
loopne
push
push
pop
cmp
mov
and
cld
xor
pop
pop
je
sar
mov
inc
pop
mov
test
dec
adc
rcll
sbb
iret
lds
lock
or
enter
lea
mov
push
jge
mov
icebp
or
jl
pop
cmpsl
loopne
xchg
fwait
xor
repz
repz
vpaddw
and
enter
sub
ss
push
or
mov
mov
repz
in
stos
sbb
decl
xchg
xchg
mov
or
mov
stc
jl
cmp
dec
push
xor
or
addr16
call
xlat
ret
lret
outsl
xor
add
pop
pop
out
push
lock
insb
in
or
lret
insb
inc
movntq
es
imul
insl
xor
outsb
mov
and
fstl
lods
xor
pop
call
fidivrs
insb
push
cmp
insl
mov
lock
lock
lret
gs
pop
das
xor
mov
jb
pusha
jbe
imul
je
pop
mov
adc
mov
repnz
jns
xchg
in
jl
add
insb
aas
jnp
stos
adc
xor
lret
inc
rorb
adc
int
push
cli
pop
ret
call
adc
sbb
push
ret
push
sub
fsubrl
mov
enter
mov
dec
cmp
mov
sarl
imul
push
shlb
mov
ror
pop
faddl
nop
xchg
xor
xor
cmpsb
fcomp
xor
cld
mov
and
mov
test
sub
lock
xchg
pop
mov
or
adc
and
hlt
aam
mov
arpl
fidivrl
jnp
rcrl
mov
in
test
fstps
mov
out
or
je
push
sub
xchg
sarb
pushf
fsubrl
dec
add
adc
fwait
sub
bound
sarb
in
fistl
xchg
rsqrtps
xlat
enter
sub
jbe
jmp
jecxz
lahf
icebp
dec
mov
movsb
cmp
aam
sbb
cmp
clc
jbe
outsb
cltd
lds
aad
test
dec
sbb
push
pop
inc
popf
cmpb
fistl
mov
aam
mov
les
scas
mov
mov
dec
xchg
xor
rolb
sbb
mov
ds
nop
pusha
fwait
mov
std
in
ret
lret
fs
mov
in
ret
popa
sub
jl
dec
dec
outsb
add
dec
js
nop
adc
cmp
lret
xchg
jbe
and
aam
stos
enter
cmp
movsl
call
and
xchg
or
adc
adc
insb
outsl
rcll
iret
mov
clc
mov
and
mov
jl
sar
sub
clc
clc
je
int
into
clc
mov
cmpsb
push
lcall
call
rcrl
inc
fildl
push
or
callw
into
mov
fidivl
cmpl
cmpsl
dec
repz
insl
ret
pop
xchg
aas
popf
adc
int3
xchg
test
jmp
rorl
sub
sbb
xchg
jns
wbinvd
shl
jp
adc
ss
jmp
dec
cld
mov
pop
or
inc
pop
pop
dec
outsb
lods
dec
push
daa
xchg
and
ret
leave
and
icebp
mov
out
xchg
lods
into
scas
sub
stos
je
jne
cmp
and
cld
fdivrs
pop
cmpsb
in
pop
cmp
mov
sbb
test
push
pop
mov
popf
out
push
sub
mov
test
sbbl
add
fbstp
int3
rol
ret
dec
int3
orl
add
aas
lret
mov
mov
pop
fists
mov
in
pusha
push
push
das
xchg
pop
pop
jle
scas
div
push
inc
sub
xor
adc
lods
data16
test
xor
mov
das
in
leave
adc
imul
test
loop
out
dec
sbb
fucomi
sub
loope
ret
add
movb
or
das
mov
xchg
movsb
mov
xor
or
mov
cld
fcoms
push
loopne
aam
pop
out
repz
jmp
add
loopne
pop
xlat
loopne
lahf
jge
cwtl
adc
mov
cmp
stc
stos
sbb
pop
mov
xchg
out
popf
pop
inc
mov
dec
mov
inc
jae
sarl
adc
js
inc
in
in
mov
mov
mov
cmpl
mov
xchg
stos
cmp
mov
jb
ror
loop
adc
jns
ss
mov
sub
flds
inc
aas
nop
sub
and
jns
or
and
out
sbb
out
cmp
jle
fildl
lock
push
pop
pop
push
fdivs
dec
mov
stos
jae
mov
movsl
lcall
repz
jp
pop
pop
in
popa
jns
adc
les
mov
std
and
push
mov
stos
call
inc
dec
movsl
xor
sub
lret
dec
rolb
xor
int3
call
data16
inc
leave
std
out
adc
push
js
xor
out
jnp
into
lods
jmp
inc
inc
ljmp
testl
xchg
push
pop
test
push
mov
dec
ret
out
xlat
push
sbb
sti
inc
and
cmp
xchg
mov
jle
push
adc
and
mov
movsb
incl
mov
inc
mov
sub
mov
lods
in
pop
cltd
sbb
fmulp
push
jae
jbe
mov
fs
jmp
addl
pop
push
iret
inc
pop
sbb
arpl
cld
sub
out
dec
push
notb
lods
pavgw
mov
mov
mov
xchg
adc
rorb
jmp
sub
xor
cld
adc
xchg
dec
xor
jnp
dec
icebp
xchg
cmp
pop
mov
mov
lret
stc
outsl
pop
iret
adc
dec
sbb
add
incl
push
nop
jecxz
push
inc
enter
jbe
xor
movl
scas
pop
xchg
cmpsb
inc
adc
push
packssdw
mov
sub
outsl
inc
mov
mov
mov
cld
pop
js
push
mov
test
filds
pop
add
dec
movsl
sbb
push
and
leave
add
fldl
push
repnz
fsubp
cmp
in
xchg
push
mov
inc
xor
mov
lcall
fadds
clc
add
push
lahf
dec
mov
jle
pop
adc
dec
pop
push
or
push
xlat
mov
pop
scas
xor
pushf
mov
in
inc
rclb
mov
sub
outsb
es
mov
push
mov
inc
dec
xor
mov
or
inc
mov
dec
cmp
xchg
pop
pop
xchg
or
jecxz
and
test
dec
xchg
int3
jbe
cmp
andl
clc
sub
or
mov
xchg
add
adc
test
or
fcomps
inc
sahf
imul
mov
and
mov
push
scas
sub
call
pop
jge
lret
mov
test
icebp
xchg
fimuls
ja
orb
mov
popf
jbe
dec
xchg
dec
aas
mov
cmp
pop
inc
cmp
and
cmp
imul
mov
mov
ret
mov
int
mov
push
bound
or
sbb
mov
xor
bound
push
mov
mov
lods
orb
pop
lods
repnz
adc
in
sub
out
lea
inc
inc
stc
cltd
aas
jl
add
pop
pop
test
scas
jnp
scas
test
testb
mov
jp
add
dec
aam
push
mov
data16
je
std
xor
pop
mov
jle
xor
inc
inc
push
addl
sub
cmp
out
cltd
xor
xchg
iret
mov
xchg
dec
xchg
in
outsl
jp
sbb
cltd
sbb
push
out
faddl
iret
ljmp
mov
in
not
pop
jnp
and
aaa
stos
movsl
or
andl
ss
pop
add
daa
das
stc
mov
fidivrs
aaa
cmp
dec
testl
movb
cli
dec
out
pop
sahf
push
inc
ffreep
and
pushf
cmp
cmp
mov
insl
push
mov
cmc
sbb
cmp
mov
repnz
repz
orb
and
movsb
es
out
in
std
inc
mov
inc
les
push
les
jmp
or
push
sti
iret
jbe
adc
scas
mov
mov
dec
out
and
aam
and
out
stos
stos
xorb
xor
mov
push
cmp
es
adc
cmpsb
out
je
insl
mov
push
add
adc
inc
cwtl
int3
stos
out
mov
test
imul
mov
or
insl
inc
cltd
int
pushf
bound
fwait
mov
pop
inc
mov
or
arpl
ror
out
in
mov
mov
std
push
fdivl
mov
jecxz
aad
jo
js
insb
mov
xor
inc
push
mov
add
pop
and
jb
adc
and
or
sbb
subl
or
lods
out
adc
lahf
sbb
out
sbb
inc
push
jbe
add
mov
data16
lret
pop
pop
jns
outsb
xor
xchg
push
scas
adc
xchg
rcll
mov
mov
xor
ficoml
fstl
sbb
cltd
lret
xchg
add
add
xchg
dec
aad
sbb
xchg
xchg
cld
es
test
pop
sbb
sti
lds
imul
std
mov
xor
out
jno
mov
xchg
add
data16
mov
or
jl
adc
ret
test
cmp
cmpsb
test
or
jae
mov
addr16
add
fcoms
cmp
jmp
mov
jo
hlt
push
inc
xor
daa
sub
out
push
dec
push
mov
push
push
addb
xchg
mov
sbb
add
aaa
lcall
into
xchg
adc
sub
mov
pop
lahf
mov
or
neg
bound
push
and
dec
pop
leave
popf
fs
int
arpl
ror
in
std
sub
je
mov
push
xor
insb
or
lea
inc
or
xchg
jb
hlt
pushf
dec
jg
nopl
sbb
dec
frndint
cmp
cmp
mov
imul
mov
insb
xor
mov
movl
insl
cltd
mov
mov
mov
jmp
scas
pop
ss
pushf
xchg
xchg
out
loope
flds
dec
mov
icebp
inc
addr16
nop
dec
insl
lods
repz
pop
negl
push
add
fcoms
or
push
jnp
or
outsb
test
in
lahf
add
inc
nop
or
mov
add
dec
inc
cmp
das
push
mov
or
popaw
imul
cmpsl
lahf
dec
fstps
into
mov
add
xchg
dec
in
mov
faddl
mov
xor
ja
pop
je
and
pop
or
cmp
loopne
xlat
arpl
ljmp
out
push
and
adc
jb
ror
inc
stos
imul
mov
out
vmovq
idivb
xchg
xchg
push
not
jnp
adc
aas
cmp
fstps
gs
push
dec
sbb
adc
jle
inc
int3
xor
stos
push
add
test
repz
jg
sbb
mov
jge
fildl
stos
pop
dec
add
cmpsb
ljmp
sar
add
push
inc
xor
sbb
setge
repz
sbb
push
insb
ljmp
jl
or
lds
fs
push
jmp
sarb
rol
xor
dec
pop
les
sbb
and
int
enter
dec
pop
lcall
pop
lret
mov
arpl
push
stc
jo
scas
leave
ja
mov
and
jbe
aaa
iret
xchg
aas
bound
pop
lods
out
pop
hlt
jg
in
push
out
aaa
xor
inc
xchg
ffreep
adc
scas
je
mov
dec
add
push
movsb
movsl
push
mov
lret
loop
xchg
jnp
lcall
in
jo
insb
jns
xchg
adcb
mov
dec
adc
sub
mov
daa
std
xchg
mov
mov
loop
es
sub
push
mov
inc
mov
lret
xor
or
ss
sub
mov
aad
test
cli
dec
out
loopne
test
inc
addr16
dec
xlat
insl
cmp
andb
mov
dec
jne
inc
xor
rcll
push
ret
mov
push
lods
xchg
xor
dec
push
sbbl
mov
je
or
test
test
in
push
loopnew
jnp
je
jo
test
sub
inc
and
xor
pop
add
into
inc
cmp
outsb
rorb
jns
loop
push
fsubrs
mov
add
insl
lock
out
dec
mov
dec
add
mov
ss
mov
inc
add
daa
jmp
push
shll
xor
roll
cmpsb
ret
clc
xchg
leave
xchg
and
lods
and
lds
int3
nop
xchg
mov
das
fwait
add
inc
push
sahf
xchg
or
jge
out
mov
in
iret
test
xorl
and
insb
jmp
leave
or
inc
push
mov
dec
int
add
andl
fs
hlt
sar
mov
out
int
out
adc
lcall
mov
sub
jnp
arpl
jnp
test
sub
sbb
mov
int
sub
sbb
sbb
rcr
push
mov
push
movsl
cs
shll
cmp
fcmovne
rorl
pop
add
push
fs
nop
jge
fsubrl
testl
or
ret
push
push
xchg
call
lahf
or
jecxz
mov
push
stos
pop
ja
sub
in
adc
push
inc
sbb
push
aad
repz
pushf
sub
jle
xor
rcll
mov
xchg
lret
aad
mov
mov
movsl
mov
and
stos
js
inc
mov
sbb
adc
sahf
daa
insb
xchg
hlt
jmp
cmp
cmp
aas
dec
adc
push
inc
out
out
fstps
add
sbb
test
jmp
mov
sbb
loope
repz
test
inc
lret
pop
xor
sti
daa
rclb
adc
pop
push
aam
and
push
xor
adc
insb
fdivs
ret
scas
push
xor
push
push
adc
insb
pop
pop
notl
test
mov
stos
push
shll
xor
mov
fdivrs
fistpl
addr16
stc
popf
mov
loopne
sbb
ds
subb
imul
sub
dec
push
inc
je
outsb
xchg
test
insb
cmp
fs
sbb
popf
push
gs
push
pop
es
lret
lahf
nop
mov
xor
iret
xor
mov
scas
fildll
aad
mov
inc
fisubrs
fwait
or
daa
cmpsl
out
call
lods
mov
xchg
adc
xor
push
push
pusha
add
dec
pop
lret
cmp
mov
addr16
rcrb
jns
stos
stos
sbb
cmp
lcall
add
or
jnp
xor
ret
dec
dec
iret
jo
dec
sbb
popf
int
sbb
mov
dec
shlb
pop
add
mov
mov
in
shrb
popf
jae
cmp
sub
fisttps
shl
in
movsl
test
shlb
out
pop
push
pop
inc
and
add
lahf
stc
inc
push
repnz
arpl
adc
out
mov
jecxz
mull
ret
das
enter
jo
jge
insb
jl
adc
test
mov
cmp
mov
test
in
fstpl
ja
pusha
xchg
push
jmp
add
test
arpl
adc
das
push
scas
cmpl
mov
shlb
rol
adcl
push
shl
mov
inc
push
adc
enter
inc
jno
adc
pop
xchg
mov
sub
lods
sbb
add
xlat
int3
jmp
jb
aaa
movsl
ljmp
ss
mov
xor
lahf
outsb
jmp
test
add
andl
sarb
aaa
sbb
mov
cmp
xchg
jmp
inc
xor
xor
scas
add
insl
jbe
call
call
sub
cmp
rcrl
ret
outsl
pop
or
stos
cmpl
fwait
pop
mov
jae
inc
adc
adc
fmull
pop
mov
jp
ficoml
les
pop
xor
add
fimuls
test
int3
dec
xchg
out
jns
xchg
or
icebp
add
shl
sbb
or
sub
dec
push
or
sbb
xor
or
out
loopne
arpl
mov
mov
jp
jl
cmc
cs
shr
add
es
int3
mov
cmc
aam
outsb
gs
iret
out
lret
aas
es
movsb
inc
mov
jne
scas
or
push
inc
ds
ds
loopne
mov
cmc
jge
arpl
xchg
jl
jno
subb
pop
inc
push
mov
loope
sub
test
aas
pop
int3
mov
cmp
lods
ret
xchg
cmp
rorl
rep
movsl
sub
mov
arpl
test
sbb
inc
dec
push
insl
xchg
loopne
cmp
daa
adc
fistps
adc
mov
xor
mov
gs
push
cli
cmp
or
push
or
add
add
or
cmc
ficoml
xor
sub
sub
pop
pop
rorb
push
sub
int
lret
mov
add
incb
add
and
mov
adc
data16
xor
mov
inc
or
imul
adc
add
push
jbe
pop
notl
xchg
mov
sub
xor
pop
add
cmpsb
xchg
cmc
add
shl
xor
mov
hlt
aad
and
test
push
inc
adc
jo
xor
mov
cltd
inc
adc
mov
call
and
dec
or
sahf
pop
int3
and
insl
addb
fdivr
inc
sub
mov
pop
and
xor
std
fistps
icebp
aam
aas
mov
std
out
sbb
cmp
loop
fwait
add
fs
dec
addr16
jo
ja
pop
out
mov
imul
sub
or
test
jl
push
loopne
sub
cmp
jne
cmc
cmp
imul
sbb
adc
mov
test
rclb
xchg
sbb
mov
int
loop
xchg
mov
int
push
xor
mov
movsl
dec
enter
subl
push
sub
test
pusha
xor
and
fcomps
rcl
sub
std
cli
movsl
lods
lret
ds
lea
inc
and
dec
int3
jne
loope
add
inc
push
leave
xchg
cld
cmp
test
mov
mov
and
sbb
fs
pop
push
mov
pop
aas
xchg
push
clc
or
notb
icebp
cs
lcall
pop
mov
sbb
divb
adc
pop
scas
scas
test
cld
mov
cmc
lods
sub
mov
mov
adc
popf
bswap
lds
jne
loopne
loopne
xchg
repnz
repz
pop
and
insl
dec
xchg
xor
cmpsb
aaa
ret
fistpl
mov
cmp
mov
mov
cltd
mov
ret
movsb
mov
lahf
repnz
sbb
jg
cld
cmp
shlb
mov
scas
mov
movsb
mul
jae
jno
loop
push
mov
repz
cmp
xor
cmp
and
mov
cld
outsb
addps
pop
adc
into
sub
fs
xchg
mov
cltd
andl
sub
or
pop
push
or
sti
aas
pop
ret
or
push
mov
or
lods
pop
pop
lods
fdivrl
xor
mov
sbb
mov
adc
mov
jns
jae
movsl
ret
sub
pop
int3
lcall
add
lahf
leave
scas
insb
xchg
mov
bound
adc
daa
test
mov
dec
jne
in
andb
ljmp
movups
divb
inc
out
dec
into
es
mov
cmp
enter
xchg
cli
cmp
imul
mov
lret
sahf
push
xchg
int3
or
hlt
dec
stos
rol
jns
jno
and
pop
mov
rcrb
daa
cmpsb
test
dec
test
mov
mov
and
lcall
test
xchg
pusha
iret
mov
xchg
mov
fcos
insl
sbb
push
into
lret
fs
jge
push
inc
push
clc
fisttpl
xchg
push
popa
sub
loopne
inc
xchg
shll
xchg
inc
jb
jb
sub
lcall
cld
cmpsl
push
jno
jns
push
in
mov
outsl
lds
cmpsb
sub
movsb
and
fnsave
xlat
add
push
jp
mov
sub
mov
mov
mov
std
adc
jnp
arpl
ret
pop
sbb
xchg
popa
push
dec
mov
inc
jg
dec
or
outsb
or
jbe
inc
xchg
xor
dec
adc
mov
sbb
iret
lcall
repz
mov
loop
fs
pop
cli
mov
int3
aaa
cld
mov
insl
leave
add
insb
adc
cltd
pop
mov
pop
scas
xor
sub
pop
ror
ret
push
lea
je
cmp
mov
int
gs
jg
call
ret
add
xchg
xor
add
adc
cmp
jmp
mov
fwait
lahf
loop
shrl
cmp
into
and
ret
das
mov
test
gs
mov
add
aas
mov
dec
push
imul
and
sbb
scas
xor
enter
push
mov
cwtl
dec
and
cmp
cltd
out
fisttpl
inc
xchg
add
mov
movsl
fistl
sub
cmc
out
inc
sbbl
lgs
push
subb
mov
sub
repz
cld
dec
out
out
jnp
leave
push
es
and
lds
sub
lock
negl
arpl
and
adc
add
jmp
jae
jp
cmp
in
std
mov
inc
adc
xchg
in
pop
sbb
or
push
adc
lods
flds
cwtl
mov
dec
js
fsts
and
les
jmp
fnstsw
imul
jb
std
push
pop
aad
ja
andl
stos
sub
add
jae
int
call
outsl
mov
xchg
push
cmp
sbbl
insl
sahf
sub
mov
mov
push
xchg
xor
shl
or
inc
sub
and
aad
pop
and
pop
mov
xchg
mov
mov
loop
jp
repz
ss
nop
es
aaa
add
mov
addr16
pop
cmp
mov
shrl
sbb
in
mov
hlt
jb
sbb
pop
movsl
push
pop
mul
jl
clc
daa
xchg
cmp
dec
nop
in
jb
shlb
cmpsb
and
scas
insl
pop
insb
cmp
push
ret
cmp
cli
negb
add
ds
mov
and
daa
es
mov
push
sbb
scas
ljmp
sbb
xchg
push
mov
shrb
repnz
xchg
inc
subl
push
xor
out
xchg
sub
dec
sbb
scas
jmp
imul
inc
int3
jno
popf
cmpsl
push
or
in
and
cmpsb
mov
ljmp
ljmp
je
ljmp
in
out
imul
arpl
shll
je
jg
push
jle
aaa
mov
mov
adc
xor
inc
sbb
out
mov
ror
jnp
testb
repz
es
sub
rcr
dec
add
or
adc
push
push
cmp
push
fsubp
rcl
push
jecxz
dec
ficoml
int
sub
and
das
fisubl
sbb
cli
stos
xor
push
and
xchg
sub
into
push
mov
pop
rcl
ficoms
dec
sbb
iret
lcall
movsb
pop
mov
aam
or
jb
stos
cmpsl
outsl
cmpsb
rorl
add
bound
jmp
insl
dec
inc
cmpsl
dec
sbb
cmp
data16
sbb
mov
imul
mov
mov
sbb
clc
adc
fimuls
cmp
mov
jp
movsb
sbb
in
and
mov
add
pop
cmp
push
outsb
imul
push
jmp
mov
mov
ldmxcsr
push
pusha
aaa
sbb
jb
negl
hlt
insb
mov
icebp
data16
xor
nop
std
test
in
rcll
inc
push
push
add
icebp
add
inc
arpl
ds
out
iret
andl
push
cld
cmpb
mov
sub
in
jbe
lcall
and
pop
xchg
sbb
jno,pn
das
push
pushf
movsb
nop
scas
lret
mov
clc
add
mov
mov
mov
testb
das
lcall
dec
jbe
and
inc
add
sbb
mov
xchg
fdivs
scas
add
fstps
xchg
hlt
jecxz
roll
mov
add
dec
lds
sbb
movsl
clc
dec
dec
lods
aas
xchg
sub
mov
push
mov
icebp
loopne
nop
mov
xchg
popf
jbe
popf
xor
jecxz
out
sub
xchg
push
cmc
loope
sbb
mov
les
fisubs
sub
adc
xor
mov
ljmp
pop
mov
add
sbb
mov
jg
or
add
stc
orl
arpl
jecxz
in
out
jae
and
add
and
outsl
or
pop
inc
adc
subl
pcmpgtd
or
dec
mov
cmp
mov
fidivs
xor
xor
mov
mov
dec
leave
pop
add
xchg
lods
xchg
sub
mov
lock
mov
add
shrb
movsb
push
repz
xor
adc
or
movsb
and
lret
shl
jo
loopne
jb
roll
in
fidivs
and
or
in
sub
std
mov
je
fistpll
pushf
lcall
and
loope
sahf
sbb
push
mov
and
in
and
pop
imul
pusha
fnstcw
fwait
and
lcall
add
sti
push
and
adc
mov
loopne
outsl
data16
jmp
jmp
push
je
fs
out
mov
in
das
jnp
dec
pushf
add
mov
imul
pop
sub
int3
sbb
dec
add
imul
hlt
mov
adc
ds
adc
lea
jg
imul
decb
fisubrs
test
pop
push
fisubl
pminsw
sub
and
dec
sbb
pop
rcrb
ljmp
sahf
xchg
dec
push
and
sub
shrl
sbb
cltd
movsl
enter
insl
pop
pop
lods
mov
sarb
and
sub
aaa
subb
in
js
inc
or
jb
adc
push
cmp
mov
xchg
jae
sbb
mov
loopne
daa
add
jae
mov
adc
lds
push
sbb
imul
gs
lret
lds
mov
aaa
imul
and
xchg
aas
loopne
sbb
bound
dec
xchg
dec
mov
popf
les
mov
sbb
jecxz
shl
repnz
mov
push
dec
mov
fsubs
push
scas
loop
push
repz
jns
sub
cmpsb
jb
insb
mov
prefetcht1
hlt
xor
insl
je
movsb
in
and
add
and
lods
stos
rcrl
imulb
or
mov
xchg
fsubl
mov
xor
add
test
repnz
dec
mov
mov
cld
iret
stos
in
mov
test
inc
lods
loopne
mov
scas
sbb
jae
dec
mov
pop
test
xor
sub
add
mov
in
pushf
bound
sbbl
lods
cli
fs
lock
and
andb
xchg
clc
xor
sbb
call
sub
xlat
sahf
jle
inc
adcl
pop
mov
jb
xchg
jo
xor
cltd
sbb
xchg
hlt
out
push
xor
call
pop
xor
fs
sahf
imul
icebp
andb
inc
arpl
cmp
xor
ficoml
gs
das
out
adc
mov
in
test
dec
xor
lods
in
popa
push
movsb
iret
call
sub
add
ja
adcl
sub
cwtl
in
xor
adc
inc
das
xorl
add
xchg
inc
jmp
lret
movsb
fs
clc
out
xchg
xor
out
lods
arpl
mov
or
outsb
jecxz
scas
repnz
addr16
xchg
fsubs
sar
daa
push
mov
push
xchg
and
icebp
cmp
jnp
inc
insb
scas
push
jecxz
repnz
fcompl
jg
andb
cld
sbb
mov
mov
add
sbb
jnp
pop
add
js
pop
jl
sub
stos
insl
jge
inc
inc
or
cli
cmpsl
push
inc
ret
mov
lock
dec
inc
rclb
jle
sub
mov
xchg
mov
fidivs
in
test
int3
lcall
sub
out
push
mov
xchg
bound
dec
test
adc
cld
loopne
add
xchg
or
mov
lods
or
inc
push
adc
sub
fsubl
insl
int3
push
push
adc
cltd
xchg
sbb
pop
sbb
add
adc
mov
push
int3
push
pushf
xchg
sbb
push
and
jbe
add
movsb
daa
mov
cwtl
in
leave
jae
mov
xor
les
push
negl
out
sahf
xchg
mov
or
sahf
mov
inc
int3
js
pop
push
jnp
hlt
xor
movsb
shrb
ret
andb
sub
xchg
jbe
rcrb
mov
testb
ds
mov
jbe
or
mov
into
xor
mov
push
adc
or
mov
jae
pop
imulb
cli
xchg
int
popa
push
and
mov
mov
dec
xor
mov
in
movl
cmp
inc
xor
mov
ret
mov
or
mov
pop
push
inc
fs
mov
mov
add
std
jle
cmp
roll
add
mov
xlat
out
inc
sarl
dec
nop
repnz
popf
xchg
or
mov
scas
pop
add
es
int3
xor
pop
enter
insb
xorb
test
push
movsb
insl
jae
jb
and
adc
test
test
movsl
add
stos
js
popf
cltd
icebp
mov
gs
xchg
popa
gs
mov
push
imul
adc
cmp
loop
rcll
sahf
jno
cwtl
dec
xchg
mov
jbe
adc
jecxz
out
sub
pop
mov
nop
mov
mov
outsb
xchg
into
pop
cltd
mov
inc
in
sbb
ret
mov
cwtl
in
or
jmp
push
js
mov
sahf
pushf
insl
sub
loop
mov
cmp
into
sbb
cwtl
and
jno
in
adc
sub
inc
or
cli
fdivrs
cwtl
stos
aad
pop
daa
mov
fmuls
in
push
inc
cltd
adc
mov
out
movsl
mov
test
scas
xchg
push
xchg
test
fwait
les
lock
pop
xor
pop
mov
gs
pushf
ret
scas
xchg
test
jns
dec
fisttpll
in
out
je
popl
and
xchg
int
push
fiaddl
lock
es
pop
or
cmp
jmp
cmp
jno
sbb
divl
sub
shlb
aaa
sub
pop
jecxz
mov
jp
dec
lret
popa
arpl
jle
mov
cmpsl
and
pop
xchg
jnp
movsl
inc
fs
inc
mov
push
mov
aam
dec
push
je
xchg
jno
lods
stc
inc
enter
xchg
xor
push
jmp
xlat
ret
insl
cmpsb
add
aad
push
insl
xchg
lock
scas
add
sbb
bound
sub
sub
cmpsb
sub
and
ljmp
fwait
ret
jmp
fucomp
mov
repz
cmp
mull
cmc
lock
lret
mov
push
inc
ss
cwtl
inc
fdivrs
add
jle
insb
dec
stos
es
fldl
sbb
inc
inc
call
pop
xchg
lret
push
loope
mov
gs
jg
mov
cmp
mov
xchg
mov
jns
mov
repnz
in
and
pop
mov
loopne
pop
jno
out
scas
xchg
pop
cmp
xorb
and
xor
inc
femms
push
sbb
dec
xchg
sub
dec
mov
and
je
sbb
ret
or
andl
jmp
xlat
or
jbe
cmp
mov
xor
dec
xchg
fstl
in
stos
daa
movsl
call
vmovd
aad
out
sbb
pushf
mov
jecxz
jge
lods
dec
sbb
or
push
fisubs
pop
xchg
xchg
aad
sub
sbb
insb
lret
out
test
repz
dec
outsl
push
cmp
or
add
push
mov
dec
push
lods
sub
out
pop
add
jbe
cs
shll
in
jecxz
out
stc
fdivr
or
mov
shrb
or
mov
push
push
fs
jecxz
pop
push
aad
pop
or
shll
movsb
insb
fsubl
xchg
sbb
push
pop
cld
movsl
inc
sbb
scas
pop
or
icebp
jp
add
add
imul
aam
dec
mov
and
fwait
sbb
das
bound
jge
js
mov
dec
es
push
jp
loop
sub
or
adc
or
push
insl
xchg
dec
xchg
insl
push
mov
and
jno
iret
mov
iret
adcl
and
lods
sahf
mov
data16
stos
int
xlat
sub
data16
loope
les
sub
add
add
jae
movb
mov
ficoml
adc
f2xm1
inc
es
in
and
xchg
jo
das
push
cltd
test
xorb
out
push
add
insb
pushf
lahf
mov
or
mov
fs
push
ret
xchg
or
mov
aas
into
push
imul
outsl
mov
sub
icebp
sub
xor
out
mov
jno
ja
fcmovnu
add
pop
mov
xchg
bound
jno
and
xchg
ljmp
movsb
push
pop
lods
pop
lock
sbb
mov
clc
cmp
push
jnp
cltd
rorb
cmpsb
out
or
lcall
xlat
or
insb
in
cs
mov
and
leave
iret
xchg
cmpsb
sbb
dec
lret
jno
hlt
xor
xchg
jle
in
out
mov
iret
dec
int3
jmp
in
daa
adc
gs
scas
fdivl
jns
add
pushf
in
data16
mov
ljmp
sahf
insb
mov
xor
les
mov
imul
cmp
jbe
jbe
and
pop
jmp
imul
cs
vcvttsd2si
inc
lock
mov
mov
mov
outsl
pop
lcall
scas
mov
out
out
and
dec
push
add
clc
add
addr16
add
adc
cld
cmp
leave
ja
mov
pop
ficoml
fildl
inc
nop
lods
mov
jge
jmp
outsl
jno
sub
xor
ja
loop
sub
rcll
sbb
sbb
xchg
pop
cmp
test
pop
add
insl
out
scas
adc
xor
jno
dec
inc
std
out
cli
lret
idivb
add
arpl
fdivs
and
mov
mov
js
lock
icebp
cmp
adc
cmp
outsl
push
pop
xor
jl
fstpt
dec
std
xchg
xor
movsl
jmp
dec
mov
adc
shrl
mov
push
pop
pop
fcmovnbe
cmp
stos
aas
pop
into
adc
mov
jmp
aas
inc
stos
jp
in
xor
xlat
jns
or
mul
loop
and
adc
jnp,pn
int
fildl
lods
sbb
or
cmp
addl
dec
lahf
xchg
jae
das
jno
mov
dec
mov
dec
shl
cmp
adc
sub
test
add
scas
addl
pop
pushf
xchg
jp
fwait
iret
fcoml
add
shl
mov
out
jne
xchg
imul
data16
stc
leave
mov
std
cmpl
aaa
stos
mov
xorl
cmp
mov
sbb
inc
sub
jbe
and
imul
jl
int
out
mov
gs
dec
ljmp
movsl
or
dec
aam
in
push
inc
into
mov
ss
fcomp
mov
lods
std
and
nop
sub
test
push
inc
fldl
insb
fdivs
jno
inc
out
ds
shlb
sbbl
ss
push
dec
mov
pop
push
xchg
enter
lret
rclb
out
pop
lret
inc
cmp
mov
lret
pusha
adc
test
push
push
test
and
cmpsl
lret
cmp
sub
adc
ja
clc
or
ljmp
sti
sti
inc
pop
lahf
mov
inc
and
jl
mov
add
mov
dec
mov
mov
xchg
inc
daa
dec
dec
andb
push
xchg
pop
aaa
push
cmp
and
les
xor
enter
jmp
dec
sbb
mov
sub
shlb
sarl
fists
mov
insl
mov
mov
add
shl
push
sbb
pop
mov
das
jno
gs
mov
ror
mov
or
rcll
add
stos
dec
pop
and
pop
fs
divl
mov
jne
ret
xchg
jno
xchg
aam
pop
mov
pop
and
dec
inc
enter
fwait
xor
dec
push
movsb
je
arpl
imul
push
sbb
call
loope
jnp
pushf
icebp
jbe
int3
icebp
mov
and
iret
inc
xchg
rcrb
pop
in
push
push
add
test
or
scas
outsb
out
add
xorl
daa
adc
jg
inc
je
aad
mov
mov
fisubs
loope
arpl
add
mov
mov
jge
sub
in
js
xchg
push
mov
pop
and
stos
push
pop
xorl
push
jnp
sub
imul
adc
subl
sbb
outsl
shrl
push
ret
and
shrl
push
imul
push
shlb
sub
loopne
pop
xor
in
xlat
cmp
std
push
fistpl
cmpsb
cmp
inc
cwtl
mov
lret
mov
jmp
jo
cmp
or
pop
push
popa
mov
xor
shrl
ret
hlt
in
daa
mov
stos
popa
mov
and
jo
mov
add
mov
test
repz
and
mov
cmp
ja
add
adc
ret
cmp
aam
cltd
cli
lret
test
sub
sbb
movsl
fidivl
mov
pop
bswap
inc
lock
mov
leave
and
ss
sbb
clc
mov
pop
ja
je
push
shlb
std
repz
test
sub
push
dec
int3
mov
mov
call
xchg
push
mov
sub
aaa
mov
push
add
int3
mov
jp
nop
imul
ret
or
mov
jmp
stc
or
les
xchg
arpl
sbb
out
cmc
push
fwait
xor
mov
gs
scas
jns
xchg
fwait
pop
leave
bound
lods
pop
jl
adc
pop
pop
les
stos
mov
fcomip
movl
ret
jae
cmp
and
int
dec
xchg
js
and
push
adc
clc
push
leave
rcll
sbb
cmp
mov
or
aam
mov
push
ret
mov
xor
xchg
out
rcrl
add
push
xchg
test
rol
adc
and
cmpsb
stc
outsb
rcrb
gs
jno
sbb
popa
cmp
add
inc
inc
gs
pop
mov
clc
imul
lahf
test
cmpsb
lahf
movsb
clc
mov
stc
cmp
add
inc
shlb
xchg
sub
xor
sub
jb
add
lods
pop
mov
cmp
stc
movl
ror
push
pop
bound
data16
sbb
nop
sub
push
loop
or
add
popa
stos
push
jle
and
rcl
xor
push
cwtl
in
mov
xchg
inc
mov
clc
push
inc
loop
das
in
je
stc
xchg
sbb
cmp
sub
imul
cmp
mov
test
lock
adc
out
mov
daa
xchg
cmp
test
jg
sbb
stos
add
push
mov
or
mov
loop
cli
xor
mov
pop
aam
xchg
fisubrs
inc
rcll
jp
daa
mov
and
and
movsl
mov
mov
xchg
sbb
sbb
mov
pushf
xchg
and
mov
xchg
ljmp
in
sbb
seta
mov
mov
mov
or
ds
cmp
lahf
int
repz
sbb
jo
call
sti
cltd
in
iret
les
rorb
fdivrl
aas
jne
pop
mov
test
sbb
and
or
jnp
out
imul
push
arpl
xchg
andl
sub
and
fwait
pop
sub
or
insl
pop
dec
int
scas
jl
imul
hlt
or
fld
and
cmp
dec
loopne
pop
sbbl
push
popf
sub
pop
add
in
cli
inc
loop
loopne
pop
out
jbe
xor
adc
ss
push
ret
mov
jle
push
in
jbe
call
ror
fucomip
hlt
or
adcl
jnp
std
fidivrl
cmp
ss
fnstsw
out
jb
testl
dec
lret
cmp
cmp
cmp
rolb
xchg
jb
test
cmp
push
mull
shlb
dec
and
xchg
out
sub
lahf
fnstenv
push
xor
mov
mov
push
lds
mov
sub
sbb
js
pop
out
jl
ret
add
lahf
mov
xchg
jmp
iret
xor
out
jo
xchg
mov
imull
cmp
adc
mov
mov
fs
cmp
iret
ficoml
dec
mul
jae
sub
ja
fildl
cmp
mov
mov
and
inc
ss
add
insl
addl
push
pop
mov
negl
jmp
test
cmp
mov
hlt
dec
and
and
fistpll
xchg
push
movsl
mov
adc
idiv
mov
xchg
xor
adc
fcomps
xchg
xchg
xchg
xor
loop
fs
xor
mov
sub
jle
mov
pop
repz
xchg
jmp
movsl
mov
int3
dec
mov
jmp
loop
sub
xor
push
mov
aaa
outsl
arpl
fstps
in
jmp
test
icebp
test
test
jge
mov
push
cmc
mov
jp
adc
data16
mov
mov
sbb
pushf
fbld
jecxz
aas
cmp
inc
dec
fdivs
shlb
lcall
scas
lods
jae
lock
add
fdivl
aad
jbe
movzwl
pop
mov
cmp
out
add
adcb
push
mov
lea
mov
cmp
test
sbb
nop
adc
add
test
js
adcl
add
sbb
lea
dec
sbb
pop
ficoml
mull
stos
arpl
push
mov
in
xchg
pop
loopne
insl
or
imul
test
sarb
lock
lea
sbb
std
and
sub
pusha
aas
popf
ds
rol
add
jecxz
cmpsl
pop
cmp
fisubs
xchg
pusha
pusha
sbb
into
lds
popf
cmc
das
adc
int
scas
lds
xchg
dec
out
pop
inc
popl
icebp
out
adc
sbb
popf
rcrl
cmc
jmp
pop
push
sbb
add
dec
mov
mov
cmpsl
push
dec
xor
ret
xchg
repnz
shll
fidivrs
fnstcw
push
nop
jo
lret
fcmovnb
icebp
shlb
mov
nop
mov
xchg
jbe
data16
or
outsl
jl
xor
mov
arpl
ret
cmpsl
add
push
insl
xchg
adc
dec
inc
fmuls
ljmp
pop
inc
mov
fucom
in
push
bound
pop
outsl
in
dec
jl
scas
xor
shl
loop
mov
xchg
xor
xor
lea
cltd
loopne
inc
xor
and
sub
lcall
inc
outsb
inc
mov
cli
fidivs
adcl
and
xchg
sub
dec
adc
jecxz
sti
and
adc
mov
jbe
popf
cmc
mov
lds
mov
ficoms
movsl
in
sub
dec
mov
jg
scas
sarb
mov
lea
popa
stos
adc
mov
push
cmp
inc
jns
enter
daa
add
pop
ret
cmp
ja
mov
and
dec
xor
out
hlt
pop
and
test
imul
pop
mov
inc
pop
out
cmp
sub
negl
pop
les
out
cmp
outsl
nop
xor
dec
std
adc
cmpsb
ret
out
pop
shrl
loopne
fnstsw
adc
repnz
xchg
cmp
stos
jo
xchg
mov
pop
test
ljmp
dec
adc
mov
add
inc
mov
xlat
pop
dec
jo
sar
push
mov
sub
jl
xor
add
ror
dec
adc
rcrl
sub
mov
cld
fsts
push
fwait
jl
sbb
cmp
aas
fimull
xorl
jl
sahf
adc
sbbb
into
pop
popf
aad
xchg
add
jl
lods
cli
ss
mov
cld
add
jl
or
mov
jecxz
cwtl
sub
cli
mov
xchg
pop
cmpsb
adc
negb
rcrb
lcall
ret
nop
inc
je
mov
sbb
pop
hlt
jl
loope
xlat
insb
adc
push
out
jns
jns
and
or
push
and
sub
pop
dec
cmp
repz
inc
aad
in
jns
push
cmp
movsl
sub
fwait
cwtl
neg
add
jnp
lcall
insl
adc
cld
ss
popf
sbb
cmp
adc
or
mov
imul
xor
stc
dec
stos
mov
push
enter
add
repnz
fadds
repnz
mov
das
jge
ss
push
hlt
add
ret
lret
inc
mov
mov
gs
xchg
movsb
jecxz
xor
adc
fldl
or
mov
pusha
cmp
dec
dec
adc
sub
sar
scas
je
inc
dec
pop
roll
inc
dec
test
loope
out
adc
lock
mov
cmp
mov
sbb
inc
iret
mov
dec
dec
ja
rcll
andb
cmc
jle
daa
cmp
lret
fistps
pop
jae
aaa
fsub
fsts
xchg
repz
in
jns
mov
sbb
and
cs
out
std
add
sub
jb
jmp
mov
testb
loope
ficoml
fmull
es
xchg
sti
aaa
or
scas
ds
imul
subb
pop
push
sbb
cli
and
imul
jge
shr
popf
inc
pop
outsb
xor
mov
and
jl
ljmp
jp
sub
mov
push
mov
addr16
pop
ds
or
jmp
shrl
stos
jl
lods
or
xchg
cmp
loopne
out
cmp
and
push
dec
call
mov
in
scas
test
cmpsb
jge
dec
inc
or
popa
inc
fdivp
mov
cmp
inc
sahf
xchg
pop
int
enter
test
mov
jmp
push
test
int
decl
inc
sahf
ljmp
sub
adc
loopne
loopne
mov
test
movsl
or
lods
mov
mov
aas
ret
inc
arpl
imul
xor
into
dec
subb
xor
add
nop
loope
loope
xlat
mov
and
sub
jno
xor
mov
bound
add
xchg
mov
into
subl
cmp
shlb
dec
mov
mov
imul
addl
xor
push
or
in
sti
mov
pop
insb
sub
push
mov
mov
mov
aam
adc
adc
inc
ret
inc
sahf
repnz
sub
hlt
sub
mov
jge
cs
add
mov
cli
clc
pop
pop
cmp
inc
bound
xor
mov
lock
es
or
pop
mov
fmull
cmpl
or
ret
cmp
xor
sti
or
hlt
sbb
jmp
add
pop
push
in
adc
xchg
and
ret
lods
sbb
sub
dec
sbb
stos
sbb
inc
movsl
jp
xchg
dec
fwait
pop
daa
sub
mov
repz
add
aaa
call
sbb
leave
pop
add
push
sti
push
mov
cmp
inc
hlt
stc
stc
imulb
arpl
jecxz
mov
push
dec
dec
jg
pushf
outsb
mov
out
dec
and
cmp
cld
jb
jo
lods
mov
scas
dec
fwait
hlt
inc
and
mov
fildl
shl
out
test
popa
cmpsb
and
iret
insb
clc
and
cmpl
cmc
mov
xchg
mov
cld
mov
daa
mov
shlb
imul
mov
or
ja
mov
mov
cmp
mov
mov
or
cmpsb
xchg
jmp
xchg
and
push
mov
jbe
xchg
popf
mov
xchg
lcall
jae
add
stc
ret
and
mov
xchg
fwait
test
mov
in
push
inc
scas
ss
rcrl
pop
stc
and
cmc
sbb
and
cs
adc
cmp
scas
push
popf
fildl
cmpb
imulb
out
outsl
dec
daa
test
xchg
aam
and
pop
add
in
sbb
mov
fnstcw
push
jle
dec
repnz
mov
scas
sarl
pop
stc
and
jecxz
imul
cmp
lea
pop
out
lods
mov
xchg
pop
mov
vpcmpeqd
aam
jg
jno
rcrb
hlt
gs
adc
scas
fimull
xchg
xorl
add
lds
popf
inc
or
cli
mov
out
lret
loope
sbb
add
movsl
add
sbb
pushf
in
nop
aad
xchg
insb
dec
push
mov
and
and
sbb
stos
out
hlt
jle
sub
dec
cmc
mov
repnz
loopne
rcll
pop
xchg
sub
mov
mov
jge
test
outsb
fidivrs
sub
xchg
cltd
inc
sub
sbb
cmp
push
idiv
pop
in
les
aaa
xor
out
ret
in
inc
lcall
or
dec
pushf
insb
daa
in
sub
xchg
mov
cwtl
shll
ss
xor
mov
imul
stos
mov
std
faddl
mov
outsb
cld
and
pop
repz
mov
mov
mov
daa
aas
pushf
outsl
dec
xor
addr16
jne
sub
outsl
daa
scas
or
push
out
and
push
push
scas
mov
push
push
movsl
sbb
xchg
cmpsb
lret
push
pushf
push
imul
cwtl
lds
out
push
std
and
sbb
imul
or
stos
imulb
adc
fwait
sbb
lret
nop
mov
loopne
iret
adcb
fnstenv
or
push
add
rcrb
sub
lock
incb
push
ret
xor
outsb
repnz
sub
andb
cmpsb
rorb
inc
sub
add
add
jle
fldt
push
pusha
pop
clc
xor
or
loop
aas
pop
xchg
push
loopne
frstor
lock
insb
cmp
mov
pop
lss
xor
icebp
sbb
mov
mov
push
xchg
lds
xchg
pop
mov
lock
push
cli
xchg
and
shrb
addr16
adcb
idivb
jb
test
lret
sbb
cmp
dec
and
jns
imul
sub
rorb
imul
cmc
jl
or
lret
adc
adc
push
outsb
or
cmpsl
adc
add
sbb
mov
arpl
repnz
dec
xorb
mov
mov
outsb
das
sbb
fdivr
test
push
mov
cmpsb
mov
push
out
xabort
loop
test
clc
ss
pop
push
bound
in
cmp
inc
repz
outsb
rcl
jmp
mov
and
leave
loopne
ss
addr16
push
mov
adc
iret
xor
inc
push
push
out
bound
loop
mov
add
cld
adc
push
lds
test
add
lret
lds
arpl
cmp
out
and
mov
je
movsl
mov
flds
dec
mov
xlat
out
fdivrl
xchg
mov
call
xchg
lods
fstps
adc
jb
xchg
cmp
jns
test
fcmovb
xchg
in
movsl
xorl
jge
rolb
daa
cmp
ljmp
jns
jb
ja
inc
adc
aaa
xor
aaa
push
xor
andl
dec
mov
lea
jecxz
nop
inc
jno
cmc
lahf
aad
popl
fsubl
out
pop
and
mov
repnz
add
stc
or
pop
lret
dec
inc
pop
cmp
jo
dec
mov
add
sbb
pop
ja
iret
fdivrl
inc
sbb
outsb
xor
xchg
repnz
xchg
or
or
test
adc
jo
xlat
cmpl
add
js
mov
imul
shl
jmp
sti
stc
stos
bound
inc
pop
push
inc
sub
ffreep
cmp
cli
inc
mov
mov
mov
fstps
xorb
mov
push
mov
add
enter
cmp
xchg
mov
nop
popa
mov
sub
cmc
std
test
jno
icebp
sub
xchg
cli
dec
lea
dec
cmp
lret
loop
shrl
mov
movsl
sarl
in
dec
fists
adc
pushf
add
stc
push
negb
push
je
and
mov
or
cmp
or
aam
jnp
or
dec
sbb
xor
js
lea
lret
pushl
jmp
mov
std
and
ja
xchg
icebp
xor
push
cli
outsl
sbb
sub
int3
sbb
sarl
imul
addr16
fmull
xchg
pop
inc
movsb
loope
xor
add
lcall
insb
cld
xlat
sbb
sbb
add
and
jg
inc
mov
lret
dec
fimull
or
ljmp
pusha
dec
sub
fdivrp
enter
ds
and
jnp
push
cmc
pop
lahf
cs
mull
pop
push
mov
cmp
fisubs
cmp
sarb
popa
xchg
add
pop
xchg
arpl
lahf
loopne
lahf
ret
mov
mov
xor
hlt
lods
cmp
adc
jl
sbb
mov
mov
mov
add
jno
jmp
loope
lds
mov
shll
and
push
popl
fsubl
or
aaa
pop
jb
xchg
stos
repz
adc
add
out
cmp
mov
in
pop
pushf
xor
add
adc
inc
jp
jl
add
fs
fnsave
adc
sbb
and
pop
std
add
shrl
inc
mov
adc
pop
in
push
fsubs
mov
sbb
jmp
pop
inc
movsl
addl
xchg
decl
int3
bound
icebp
lret
pushf
outsb
aam
dec
push
dec
std
push
movsb
sub
mov
and
mov
mov
iret
jmp
xchg
or
cli
or
xchg
xor
test
std
adc
add
imul
sbb
ret
push
popa
inc
pusha
ret
cli
insb
jbe
movsb
arpl
insl
lods
mov
sub
repnz
cli
dec
stos
dec
mov
xchg
ljmp
mov
push
pusha
jae
xlat
push
inc
lods
xlat
ljmp
imul
mov
sti
mov
add
test
mov
pop
xchg
inc
xor
and
dec
shrb
or
lods
jnp
ja
ret
xor
sbb
cmpsl
xchg
es
mov
add
sti
xchg
dec
test
pop
xor
ds
cld
aas
fistpl
ret
and
cmp
jmp
pop
or
pop
inc
lods
out
stos
xchg
jb
cmp
adc
fcoml
and
hlt
aaa
pop
or
icebp
mov
dec
lcall
cli
xchg
or
fcomps
add
mov
lds
cltd
adc
inc
stos
push
out
push
mov
push
movsl
dec
inc
dec
rcll
aaa
push
cmp
mov
mov
push
fcmovbe
aad
mov
cmp
add
clc
dec
test
cmp
sarl
sub
push
dec
jo
je
inc
mov
pop
in
or
mov
ljmp
into
iret
pushf
cmp
test
cld
cmp
push
out
arpl
stc
pop
and
arpl
fcmovnu
cwtl
fwait
pop
mov
push
fmuls
test
std
in
add
pop
ret
cwtl
cmp
sbb
mov
sub
cmc
hlt
lahf
add
adc
ficompl
jecxz
lds
ret
icebp
jmp
inc
shr
into
mov
push
test
or
cli
xlat
pop
lods
sbb
std
mov
scas
push
pop
mov
lds
pusha
shlb
mov
in
xor
loopne
rolb
je
js
cld
cmpsl
adc
in
movaps
xchg
push
dec
decb
dec
and
and
out
cmpsl
std
mov
push
dec
outsl
xchg
loopne
sub
sub
clc
mov
push
out
aas
neg
xchg
mov
in
fisubs
dec
sub
ja
out
call
ret
dec
inc
pusha
test
xchg
loopne
imul
jle
xchg
inc
mov
xchg
add
xor
jns
jns
je
repz
sub
sub
das
xchg
pusha
jns
xchg
rolb
aad
fldt
mov
jnp
imul
subb
xchg
ds
cmpsb
lds
add
roll
stc
mov
dec
dec
mov
and
imul
rorb
xchg
xor
mov
or
stos
mov
in
cmc
loop
into
fsubs
cwtl
xchg
jnp
rolb
dec
fistl
in
push
push
movsl
out
sti
pop
inc
sub
cmp
dec
out
dec
fnstenv
mov
test
in
mov
inc
daa
pop
adc
outsl
clc
fs
xlat
cwtl
pusha
mov
and
test
cmp
rclb
jne
or
add
dec
cmp
dec
cmc
cmp
add
repz
mov
mov
push
fiaddl
aad
imul
add
imul
xchg
sub
lea
jg
aad
repz
cmp
mov
addl
jl
and
and
mov
push
scas
push
loop
aad
and
popf
dec
insb
addr16
jp
push
and
jae
or
xor
add
movsb
jl
aaa
rolb
lea
adc
scas
jns
in
jl
stc
call
js
push
shll
xchg
cmpsl
out
sahf
pushf
adc
cmp
inc
addl
test
divb
mov
jns
and
jo
pop
data16
cmpb
sti
repnz
mov
or
jp
shr
mov
mov
pop
pop
ficompl
adc
pop
or
loop
sub
test
and
mov
cwtl
push
push
add
ss
and
pop
cmp
and
roll
jecxz
jae
orl
pop
nop
hlt
pop
cmp
add
jle
fcompl
lods
fsubrs
push
mov
inc
dec
dec
sbbb
test
mov
aas
pop
pop
sub
cmpsl
jecxz
adc
mull
add
jbe
sbb
in
xor
loopne
pop
sub
add
pusha
xchg
gs
xchg
stc
std
adc
nop
sub
lret
mov
aam
movsb
out
dec
insl
test
out
outsb
mov
daa
sbb
into
icebp
dec
cmp
xchg
loopne
inc
push
or
dec
sub
sub
sub
shlb
adc
inc
jnp
sub
jns
mov
pop
icebp
mov
mov
imul
gs
xchg
xor
insl
xor
adc
cli
arpl
fistpll
xchg
lock
hlt
scas
and
xchg
hlt
sub
loope
ja
xor
scas
jmp
das
int3
outsl
scas
xchg
stos
lods
bound
je
push
pop
or
and
inc
adc
aam
aaa
les
lea
and
arpl
call
dec
jne
test
push
push
add
push
cld
mov
in
xor
and
les
or
pushw
sub
push
ficomps
sbb
xlat
add
movsl
mov
sbb
jmp
sub
jb
lret
pop
out
cmpsl
xor
daa
sbb
mov
movsb
or
sti
jg,pt
js
into
dec
lock
andb
popf
fistl
mov
fadds
lret
lods
ret
inc
out
rol
mov
cld
clc
xchg
jmp
pop
icebp
sbbb
cmovno
cmovle
add
xor
roll
or
pop
ss
jl
imulb
sar
and
jno
and
scas
sub
add
xchg
sbb
jge
push
cmc
mov
push
decl
pop
inc
mov
adc
add
sub
aaa
test
fimuls
pmullw
dec
cmc
jge
dec
sub
in
mov
rorl
cli
mov
inc
jae
push
loopne
jg
fisttps
push
mov
aad
push
in
or
shll
fcomps
jne
xchg
fstps
pop
dec
pop
out
mov
xor
fcoml
shll
inc
inc
das
adcl
mov
jae
inc
mov
mov
sub
lret
fs
add
xor
pusha
pop
stos
xchg
or
lds
es
xor
test
imul
in
push
mov
js
call
mov
xchg
das
sub
mov
fistps
ds
xchg
mov
ficoms
mov
add
std
jb
daa
popa
pop
cs
ret
ret
inc
dec
sti
popf
cmpsb
cmc
bound
lods
das
dec
mov
loop
and
mov
sub
xchg
dec
pop
mov
outsl
test
and
sbb
popa
sbb
cli
shl
inc
push
jecxz
rcrl
sbb
int
hlt
cld
cmp
subb
cmp
mov
idivb
add
add
insb
adc
push
insl
rcrb
popa
xor
orb
push
fstpl
js
popf
cmpsb
push
push
xchg
xor
xlat
popa
push
fsubs
std
adc
lock
push
rcll
dec
mov
mov
pusha
dec
shrb
fidivrs
cmpsb
adc
packsswb
stos
mov
sbb
pushf
cs
mov
mov
popf
jno
dec
jne
popa
insb
lret
xchg
cltd
sar
mov
cmc
ret
pop
mov
mov
adc
cmpsl
inc
les
movsl
sbb
iret
sbb
push
add
sti
lahf
int
sbb
and
popa
add
jp
mov
int
sbb
push
mov
cmp
sbb
mov
jnp
scas
or
movsb
jae
push
sbb
es
jae
mov
mov
cltd
pushf
jp
roll
sub
cmp
loope
xchg
mov
mov
cmovo
fcomps
xor
aaa
mov
je
mov
sub
insb
mov
outsl
jae
cmpsb
in
jl
pop
fldenv
add
sub
daa
pop
push
pop
and
sub
mov
xor
iret
pop
cmp
push
cltd
xchg
mov
push
clc
add
jne
sbb
mov
stos
scas
mov
aas
pop
jmp
and
mov
test
jno
jl
hlt
or
inc
scas
fstl
fsubs
inc
mov
adc
bound
repz
jb
outsl
jno
bound
mov
sub
fsubrs
sub
shlb
pop
inc
stc
push
jmp
add
inc
rcl
loope
int3
rclb
fsubs
add
in
ss
fnsave
mov
sub
sbb
inc
xchg
jb
inc
fidivrl
and
movsb
enter
mov
aad
mov
inc
dec
sbb
mov
xlat
adc
cli
nop
xchg
xchg
int
test
addr16
mov
sub
outsb
and
les
jl
ret
and
andl
fisubrl
imul
dec
ds
scas
fs
and
cmp
cmpsb
xchg
pop
ret
mov
sbb
mov
mov
jbe
push
fs
xchg
mov
shll
mov
xorl
sub
fs
add
into
sbb
sar
mov
test
adc
jecxz
ret
push
int
push
mov
leave
xchg
sti
in
push
xor
inc
or
dec
cmpsb
jbe
jle
lods
add
dec
shrb
sti
sbb
leave
xchg
fs
fists
cmp
pop
xchg
or
mov
mov
cmp
fists
js
inc
xor
jle
xchg
leave
lcall
scas
adc
aad
push
dec
stos
or
cmp
and
out
xchg
fs
push
mov
and
dec
or
test
pop
cld
cwtl
cmp
xor
pop
mov
loop
pop
jns
sub
sbb
dec
ror
jl
mov
xor
xchg
inc
xor
popa
inc
fisttpl
out
stos
jecxz
pop
mov
mov
fsubrl
testb
scas
or
shll
pop
je,pn
inc
popf
outsb
lds
iret
and
adc
sti
aam
push
in
push
out
hlt
ret
adc
push
lea
or
in
cmp
xor
pop
mov
aad
hlt
fildll
add
cli
mov
adc
out
cli
iret
mov
cmp
lret
inc
insb
mov
lock
movsb
cmpsl
or
inc
fucomp
mov
shll
sub
pop
xchg
loop
pushf
mov
sub
mov
push
cmp
int
adc
cs
lahf
jecxz
jae
cmp
pop
lock
and
mov
and
xchg
fstps
fistps
mov
mov
cmp
aam
dec
stos
or
and
inc
jl
inc
xor
and
inc
add
shll
push
std
iret
inc
lret
mov
pop
and
mov
push
push
or
dec
or
push
jg
inc
mov
lock
mov
inc
jnp
inc
ss
push
in
pop
mov
out
adc
mov
ss
insb
mov
ret
out
out
jge
sbb
sbb
pop
movzbl
jnp
xchg
imul
ret
test
in
xlat
adc
xlat
stc
dec
adc
sub
shrl
std
subl
enter
inc
push
dec
lret
jno
push
test
enter
mov
aam
imul
cli
test
daa
roll
dec
cmpsl
cmp
and
sub
xor
lret
in
adc
sub
mov
mov
lcall
xor
xchg
xchg
or
jne
xchg
push
mov
xlat
mov
and
push
arpl
mov
adc
push
push
lahf
orb
gs
mov
cmpsb
mov
jle
add
mov
mov
leave
bnd
rcl
sbb
adc
inc
push
lds
xchg
xor
jg
ret
lods
add
pushf
repnz
adc
cmp
lods
lea
mov
and
ja
mov
iret
dec
jo
stos
fwait
push
shll
dec
mov
js
xor
dec
rol
rorl
push
pop
mov
out
xchg
mov
daa
ret
inc
notl
out
cwtl
das
cmp
jo
mov
sbbl
sarb
ficoms
dec
lcall
sub
insb
push
push
push
push
lret
xchg
ds
dec
gs
push
ret
dec
cmp
pop
dec
add
push
sub
add
sti
dec
nop
cli
pop
pop
aas
pop
mov
cmc
inc
cmp
imul
and
xor
cmp
ds
push
enter
sti
mov
xchg
sub
mov
aam
add
add
cmp
jno
lret
aam
popf
or
movsb
lret
imul
cmc
test
or
pop
hlt
jp
ret
mov
scas
xchg
stos
fcmovnbe
fucom
scas
jle
inc
and
dec
scas
scas
movsb
jl
cmpsb
fiadds
push
push
bswap
fmulp
popf
xor
jge
dec
push
call
lods
mov
push
jo
cli
pop
cld
cwtd
cltd
and
sub
movsl
xchg
mov
push
pop
pop
xchg
sbb
ficomps
out
loop
lcall
repnz
push
and
stc
jg
repz
adc
pop
cmc
test
inc
leave
lcall
repz
mov
xchg
inc
stc
xlat
xor
mov
mov
fs
sbb
repnz
sbb
je
push
push
sub
sub
fstp
mov
ficompl
negl
push
mov
dec
aaa
mov
in
pushf
stos
dec
in
and
adc
repz
sub
fcmove
out
dec
aam
into
icebp
ljmp
pop
adc
inc
loop
push
ljmp
xchg
mov
pop
leave
ds
subl
mov
cmpsb
pop
mov
mov
xchg
push
dec
inc
mov
movsl
ja
aaa
push
in
lahf
add
int3
shlb
or
pop
jle
jge
iret
outsb
into
aas
movsl
loope
mov
js
sbb
inc
scas
and
mov
ja
cmp
push
push
scas
cmpsb
aad
xor
pop
push
cmp
mov
mov
stos
iret
mov
ljmp
nop
stos
imul
push
push
lret
add
or
push
xor
cli
pop
mov
nopl
cli
push
and
negl
jmp
adc
cmc
push
in
fwait
stc
ret
mov
das
adc
jmp
rcl
outsb
dec
das
movsl
sbb
sti
mov
xchg
popf
or
sub
in
jae
jo
jp
arpl
pop
fs
mov
cmc
xor
push
jmp
pslld
scas
clc
loopne
cli
jbe
mov
iret
push
es
push
xorl
inc
insl
rcrl
sbb
jge
cmpsl
test
fs
orb
or
int
sbb
sub
push
enter
leave
add
mov
shlb
jecxz
mov
mov
cli
xor
mov
arpl
sbb
pushf
dec
cmp
inc
scas
cli
mov
enter
clc
fwait
ss
enter
jp
jnp
mov
inc
stc
pop
mov
cmp
js
dec
lea
mov
je
pop
fisubl
arpl
loop
loop
ja
xor
cmpsl
mov
sub
cmc
add
cmpsl
push
fsubrs
or
mov
pop
adc
jnp
adc
rcll
loopne
addb
cltd
and
xchg
dec
sbb
into
imul
in
dec
gs
lods
aam
xor
dec
notb
xchg
das
cs
aad
shlb
sarl
imul
jmp
mov
shlb
cli
mov
xchg
inc
popf
pop
cmp
sbb
jp
pop
stos
push
cmp
mov
lret
imul
jno
inc
call
add
lods
lods
mov
aam
inc
mov
loopne
frstor
sub
lret
int
sub
clc
into
sub
mov
push
push
add
or
xchg
clc
or
adc
in
jg
and
push
repnz
xchg
jl
or
mov
or
jae
cld
cli
and
stos
data16
dec
or
and
nop
cmpl
addr16
adc
mov
pop
cmp
inc
pop
test
dec
insb
lret
ret
jbe
xchg
fstpl
add
enter
insb
int3
test
jbe
mov
push
pushf
lahf
jb
push
add
xchg
scas
mov
stc
jno
cmp
hlt
pop
movsl
jp
inc
mov
sbb
push
and
sub
push
mov
push
test
scas
inc
sahf
out
lods
test
push
or
push
adc
dec
pop
xchg
push
jo
mov
xchg
or
fidivrl
jmp
pop
jg
xor
fisttpl
mov
fldt
sub
push
adc
jae
jb
fistl
pusha
cmc
jecxz
stos
mov
repz
sbb
and
add
push
aam
test
push
lock
bound
or
push
loope
and
sbb
shl
mov
loop
xchg
ljmp
ljmp
sub
add
fwait
cmp
aad
inc
fld
enter
mov
call
imul
lahf
loope
mov
cmp
xchg
ds
inc
pop
imul
mov
sub
jp
xchg
pushf
lock
inc
ds
pusha
pusha
sbb
jns
out
inc
test
popa
add
incb
inc
std
sbb
jo
rolb
jp
mov
mov
je
xor
push
into
scas
mov
popf
add
scas
jb
shll
rep
mov
xor
adc
inc
sub
lods
pop
inc
leave
fs
mov
cs
mov
ljmp
lea
mov
mov
aad
add
outsb
adc
mov
mov
int3
clc
or
notl
mov
jnp
inc
pop
inc
xor
je
outsl
jl
inc
xchg
mov
xchg
add
arpl
pop
scas
in
aam
xchg
ret
lods
jno
popa
mov
fcompl
jae
bound
mov
dec
add
sti
jb
ds
inc
sbb
shll
in
repnz
add
notb
cli
jle
stc
cmc
or
daa
decb
mov
cmp
call
imul
pop
xor
outsl
fsubp
fldl
jl
inc
cmp
jl
imul
imul
xchg
sub
insl
in
or
mov
lds
mov
in
in
popf
sbb
inc
mov
clc
xchg
stos
jnp
sahf
ret
les
push
aam
add
xor
fs
in
mov
push
mov
in
jg
cmpsb
popa
hlt
rorl
mov
mov
stos
addr16
cmp
mov
bnd
and
call
movb
jnp
adc
inc
ret
ja
ret
sbb
mov
arpl
and
and
mov
xchg
push
das
mov
push
adc
hlt
xchg
push
add
xchg
push
mov
cmp
push
scas
sub
jae
imul
xor
out
adc
repz
sbb
out
cld
cmp
sub
push
jno
in
js
lods
dec
pop
jle
push
repz
stos
push
je
push
sub
fnclex
push
aaa
push
das
inc
dec
mov
nop
sub
subb
jecxz
dec
fld
arpl
shll
outsl
xchg
test
jo
cmp
pop
lcall
je
adc
and
mov
cmp
mov
inc
imul
xor
imul
lret
mov
xchg
int3
setno
inc
jbe
mov
ret
daa
out
sub
cmpb
es
dec
lea
aaa
fdivrs
mov
jnp
or
mov
es
in
pop
out
dec
mov
and
sub
ret
nop
sub
or
and
ja
out
nop
cli
fwait
push
cmp
scas
sub
lret
fcmovnu
test
mov
adc
ret
ret
sbb
aad
jns
js
sub
mov
inc
add
mov
mov
lret
and
jge
outsb
hlt
rol
cmpsl
ficoml
test
pop
popa
test
addr16
test
ja
test
cltd
mov
xor
mov
mov
imul
inc
xchg
jb
idiv
mov
cmc
stos
test
dec
push
imul
pushw
ret
mov
jo
xor
cmpsl
dec
das
out
popf
mov
loope
cmpsb
or
add
lods
nop
cmpsl
xor
ljmp
scas
mov
cmpsl
test
sti
xchg
je
jb
mov
jg
shll
sbb
dec
jae
pop
rcll
pop
lds
sbb
insb
mov
in
pusha
aas
xor
aad
pop
xor
js
sub
push
nop
inc
enter
push
inc
and
fsubrs
or
adc
leave
or
sbb
popf
xor
push
or
or
cmc
xor
les
cmp
xor
sbb
shl
xchg
inc
cmp
pop
push
aam
aaa
mov
mov
sub
inc
push
dec
pop
fcmovbe
fnclex
or
or
outsb
inc
lret
in
fwait
sbb
mov
push
stos
mov
mov
mov
jnp
shll
cli
and
jp
pop
adc
data16
pop
push
xchg
jmp
aaa
aam
loope
pop
dec
cmp
mov
and
sub
mov
call
sahf
jg
fmuls
test
bound
or
push
mov
in
imul
cmpb
push
loopne
nop
bound
mulb
cmpsb
mov
inc
dec
imul
lret
cmp
ja
cld
fs
subl
scas
add
ret
push
jl
pop
pop
inc
xchg
mov
movsl
mov
xor
test
das
adc
daa
pop
repz
sti
push
sahf
xchg
cli
jnp
push
addb
dec
and
inc
push
add
push
push
jno
mov
cmpb
mov
sub
inc
or
sarb
fidivrl
repz
adc
arpl
xchg
xor
fisttpll
lahf
movsb
sub
lahf
mov
cmc
or
xlat
outsb
xor
push
mov
cmp
mov
sbbl
or
scas
sub
insl
movnti
xlat
cmpb
cmp
lahf
lds
or
or
out
add
arpl
movsb
mov
xor
icebp
lock
aad
andl
ret
inc
cmp
lods
ficompl
jp
dec
mov
repnz
inc
xchg
fs
sbb
cmp
cmp
mov
ss
test
sbb
or
dec
push
cli
push
xor
mov
pop
dec
jbe
lds
mov
jb
add
rol
lret
shlb
sbb
sbb
mov
cmp
outsl
cmp
imul
stos
out
decb
test
adc
in
aaa
loope
jg
outsb
dec
sub
outsb
rcl
push
xchg
data16
xor
adc
xor
hlt
add
add
stos
cmpsb
outsl
and
aaa
jl
sub
repnz
push
jb
test
mov
out
xor
jae
pop
jne
jecxz
xchg
jge
imul
popa
decl
rclb
popf
jns
out
scas
fcmovnu
popf
out
jae
mov
sub
mov
andl
lea
jns
sahf
xchg
and
push
or
mov
jb
in
pushf
ret
test
mov
mov
in
sub
leave
cmp
sbb
les
insl
pop
lret
cmp
leave
add
aaa
jmp
push
lcall
arpl
icebp
clc
jmp
add
outsb
jecxz
aas
or
inc
mov
into
cmp
stos
int3
push
mov
mov
pop
sbb
mov
xor
cmp
xchg
mov
or
sub
cmc
fisubs
cmc
mov
push
aas
adc
jle
test
call
arpl
shrb
cwtl
inc
and
outsb
xor
xor
or
nop
jl
push
jb
bound
inc
rcr
clc
xchg
or
dec
int
push
ficompl
mov
inc
mov
xor
mov
int3
les
subb
push
dec
int
jle
pop
sbbb
lods
loop
fnstenv
push
fs
testl
fs
repnz
add
sub
fcom
adc
dec
dec
pop
mov
jne
jg
cmc
push
imul
adc
jg
hlt
lcall
jge
shr
inc
mov
fstpt
fsubrs
daa
mov
stos
in
call
aaa
arpl
mov
fadd
jmp
aas
push
adc
sar
les
and
jbe
push
lcall
and
sub
aad
sbb
popf
shr
push
mov
jbe
fs
std
les
jo
insb
int
jg
xor
inc
push
sbb
int3
mov
adc
xor
push
shll
andb
stos
test
sub
test
dec
xor
add
xchg
cwtl
jge
sahf
mov
xrelease
in
jmp
and
inc
pop
push
stos
leave
push
xlat
stc
rcr
pop
cmpb
dec
test
add
pop
and
daa
pop
dec
pop
mov
sbb
cltd
sub
mov
xchg
andb
lods
xor
push
cmp
mov
inc
std
orb
xchg
inc
mov
arpl
ror
shlb
shll
or
jle
and
popf
mov
push
mov
xchg
out
daa
pop
jo
js
jl
add
push
rolb
sbbl
mov
dec
cli
dec
out
or
out
mov
rcrb
decb
or
sub
int
inc
sub
in
push
mov
fwait
dec
in
xor
push
pop
xchg
jl
pop
loopne
dec
xchg
inc
or
adc
fmuls
sbb
cmpsl
inc
dec
push
dec
jns
or
pop
sbb
out
lods
fdivrs
stc
movsl
call
movsb
mov
pushf
test
mov
mov
sub
cli
xchg
bound
mov
xor
fs
push
jp
ud0
lahf
sbb
pop
sbb
add
sub
push
ficoms
xchg
xchg
stos
lret
xchg
mov
or
or
inc
or
pushf
xchg
mov
loopne
leave
mov
xor
xchg
jg
mov
out
fimuls
jg
pushf
jl
mov
loop
mov
dec
pop
int3
cmp
std
pop
xor
outsl
or
dec
jne
inc
aad
jne
pop
lcall
mov
leavew
movsl
adc
jae
mov
or
es
call
scas
stos
aas
movsw
xor
insb
out
adc
and
jg
xchg
mov
mov
dec
jns
rcrl
sbb
sti
aam
scas
and
rorb
shrb
xlat
mov
push
je
dec
fisttps
inc
addr16
dec
jg
ret
jle
dec
push
sub
sbb
inc
push
add
rcrb
clc
sub
sbb
lahf
push
loopne
test
mov
xchg
xchg
cmp
sbb
and
mov
mov
adc
testl
movsl
mov
imulb
stos
mov
inc
xor
dec
cltd
add
cmpsl
xchg
daa
lahf
push
jae
dec
push
xchg
mov
jo
xchg
sub
mov
aas
cmp
inc
pusha
inc
inc
sbbb
ja
test
jo
roll
push
or
or
xor
mov
xchg
popf
xor
out
adc
cmpsl
adc
add
cwtl
lock
add
xchg
and
pop
bound
xchg
mov
arpl
adc
aam
pop
icebp
ret
sahf
lret
scas
push
faddl
push
test
sahf
js
and
or
mov
out
mov
sarl
shrb
inc
mov
stos
repz
cmp
ds
test
nop
imul
pop
fwait
mov
jo
iret
rolb
pop
inc
and
pop
test
bound
clc
sbb
and
sbb
cmp
mov
cwtl
fdivs
xchg
cmc
shl
popl
cltd
or
nop
mov
mov
sub
jmp
jbe
movsb
push
cmc
xor
mov
dec
mov
xor
ss
or
aad
loope
pop
loopne
and
insl
stos
dec
mov
fimuls
hlt
add
test
jg
cmp
inc
cmp
mov
lds
daa
aaa
xor
in
pusha
std
sub
pop
sbb
in
push
das
psraw
xchg
cmp
repz
in
mov
jecxz
and
mov
push
aas
dec
adcl
cmp
push
push
test
adc
fidivrs
aas
ja
icebp
insb
mov
cwtl
mov
jb
xor
pop
jp
fstpt
test
or
loope
icebp
sbb
mov
pop
dec
mov
aam
and
cmp
xchg
jo
cmp
aas
mov
xor
xchg
test
rcll
mov
mov
xchg
xor
stos
pop
sarb
mov
xlat
in
clc
and
inc
outsb
jnp
les
mov
xchg
gs
pop
xchg
and
cmp
jl
in
insl
fdiv
shll
shl
inc
jmp
mov
push
fmull
lcall
xchg
aad
sub
pop
lea
cli
dec
sti
jecxz
fs
cld
jle
lcall
push
push
shlb
jle
adcl
inc
sahf
hlt
popf
out
popa
or
add
cmp
cmp
fadd
dec
mov
test
nop
adc
mov
push
push
test
mov
cld
xchg
push
mov
add
in
sub
call
sub
dec
popf
sub
xor
pop
stc
and
pop
mov
enter
pop
pop
loop
jnp
and
sbb
cld
cmp
xchg
dec
xor
ja
jmp
std
mov
xor
rclb
pop
rolb
jns
cmp
lock
cmc
in
ror
push
sahf
inc
shlb
xchg
sarb
push
outsb
outsb
in
repnz
addr16
scas
xchg
jl
pop
push
push
sbb
hlt
and
aad
dec
test
lods
mov
mov
jb
movsl
cld
sub
cmp
xor
sub
jge
jecxz
lret
xchg
or
ror
rcr
popf
stos
cmp
add
insl
and
pop
fwait
dec
daa
or
and
xchg
cmp
push
cli
shlb
popf
mov
ljmp
or
insb
aaa
inc
inc
pop
shrb
xor
test
xchg
ds
adc
mov
in
rcll
je
sbb
ret
jo,pt
negl
mov
test
imul
ss
iret
cmp
pusha
inc
clc
inc
push
cmp
pop
xchg
push
dec
and
dec
jge
inc
popa
jb
xlat
in
cmpsb
fsubs
add
or
movsb
add
pop
mov
or
cmp
sbb
subl
cld
dec
in
pushf
pop
js
xor
mov
adcl
inc
sbb
cmc
xchg
jb
mov
adc
sahf
push
lcall
adc
inc
int3
xchg
cmp
mov
add
push
in
in
inc
xor
hlt
aas
jne
and
or
dec
jae
push
and
jmp
inc
xchg
popa
inc
inc
pushl
in
add
cli
cwtl
dec
pop
dec
mov
mov
push
mov
pop
jle
adc
in
jecxz
mov
dec
or
js
cltd
add
test
cmp
fimuls
inc
jae
test
sub
popl
and
call
adc
xchg
cs
repz
dec
xor
dec
outsb
xor
pushf
mov
mov
pcmpgtb
adc
mov
test
cmp
mov
sub
aad
cltd
pop
xor
sub
out
push
xlat
ja
ret
xchg
pop
jge
andl
in
lret
adc
fcoml
xchg
or
ljmp
adc
js
sbb
orb
mov
mov
das
dec
jbe
insb
mov
rcrl
xchg
and
nop
daa
std
mov
lds
or
lock
push
scas
outsl
test
cs
pop
lock
ss
inc
jbe
test
popl
sub
lret
cld
jecxz
dec
into
jb
leave
push
pop
popf
sub
inc
shlb
sub
fisubl
aaa
lods
inc
add
xor
out
inc
xchg
mov
insl
in
sbb
inc
outsb
cmp
jno
loop,pn
cli
dec
xchg
gs
int3
pop
push
dec
mov
stos
jecxz
add
gs
es
push
insl
addr16
cmp
dec
jo
iret
jmp
aaa
inc
iret
fdivrs
aam
insb
ja
scas
sub
inc
movsl
sbb
sarl
sbb
ds
dec
add
cmp
push
iret
xchg
and
xor
mov
addr16
pop
add
pop
mov
jns
mov
jbe
adc
sbb
aaa
sub
add
insb
lock
clc
aam
movsb
cmp
nop
nop
pop
daa
push
inc
pop
add
sbb
or
insb
pop
adc
inc
jno
insl
xchg
dec
pushl
adc
ja
adc
call
les
jmp
mov
xchg
in
inc
xor
mov
inc
aam
in
xorl
add
mov
cld
lock
jb
ds
pop
inc
mov
xchg
iret
std
pop
data16
lods
pop
outsl
sub
xorb
inc
adc
xchg
xchg
xorb
sbb
pop
pop
jno
push
fnstsw
push
or
scas
push
aam
mov
sbb
out
mov
xor
mov
dec
push
test
mov
test
and
pop
lahf
mov
stos
xchg
dec
popl
nop
adc
xchg
call
or
add
xlat
xor
jnp
cwtl
add
jle
insl
stc
jnp
int
xor
jno
jb
xor
jnp
pop
stc
jae
in
add
xchg
testb
jmp
inc
loopne
in
inc
out
fiadds
sub
stos
inc
imul
insb
add
into
loope
mov
push
adc
imul
sahf
jb,pn
jae
or
hlt
xchg
inc
rol
add
into
jg
push
int
lods
inc
test
cmp
cmpsl
imul
jp
std
jno
mov
in
sub
sbb
or
stc
or
pop
jp
and
sbb
jg
mov
dec
mov
inc
fs
mov
int3
or
repnz
cmp
or
mov
xor
jg
inc
mov
std
pop
adc
jge
into
ficoml
pop
adc
inc
ja
jle
in
jne
leave
pop
tzcnt
dec
mov
loope
pushf
subl
fdivrl
or
lahf
jecxz
mov
or
push
popf
movl
outsl
pusha
hlt
and
fwait
out
in
or
pop
rorl
push
mov
sub
loopne
jne
call
xchg
adc
add
pop
xchg
and
shrb
xchg
and
cmp
xor
inc
popf
mov
mov
push
jl
ror
add
xchg
lret
mov
stos
lcall
fsts
inc
or
push
ret
push
imul
aam
aam
and
inc
aaa
out
mov
popf
jle
or
jbe
lret
pmullw
dec
xchg
mov
lods
bound
mov
adc
cmp
test
pop
push
xor
ret
or
inc
outsb
cmp
xchg
cli
ficomps
mov
sbb
scas
mov
adc
scas
xor
or
or
mov
cwtl
mov
into
pop
arpl
aad
rcl
push
and
push
xlat
mov
dec
add
mov
mov
stos
stc
out
cld
stos
ret
sub
lahf
ljmp
inc
fisttpl
cld
aaa
loop
pushf
mov
cld
mov
mov
jno
scas
mov
aaa
mov
insb
fstl
in
sbb
movsb
stos
cmp
movsl
push
jecxz
or
lahf
mov
push
cld
iret
xchg
pop
pop
mov
into
or
cmp
push
scas
dec
ffree
or
push
xor
jb
cwtl
xchg
xor
nop
loope
mov
mov
iret
int
loop
mov
push
test
repnz
mov
int3
xchg
inc
sbb
mov
mov
adc
bound
stos
scas
sbb
test
mov
js
mov
js
mov
loop
inc
sbb
cmp
mov
roll
adc
mov
in
lret
iret
out
jae
push
add
dec
xor
sbb
mov
into
test
mov
jmp
sub
je
dec
sahf
mov
loop
xchg
mov
adc
pop
imul
leave
shll
push
fnstsw
mov
pop
jo
inc
dec
test
stos
fs
cwtl
sub
daa
cmp
enter
shlb
int
loop
lret
jecxz
push
xchg
and
adc
push
pop
mov
pop
sahf
adc
mov
jne
stc
adcb
das
out
mov
rcrl
lods
add
or
cmpsb
fldenv
mov
mov
push
repz
sbb
sub
pop
adc
mov
and
les
xor
push
inc
loop
in
rcr
sti
scas
push
or
xor
push
push
inc
scas
arpl
loope
ljmp
scas
push
mov
pop
push
les
jbe
xchg
les
fcompl
dec
sub
push
xor
inc
gs
mov
xchg
loop
jg
xchg
mulb
xorb
jnp
mov
xor
jp
sub
adc
aad
push
clc
mov
or
fwait
sbb
dec
mov
lock
rcl
in
add
ds
ljmp
cmp
and
jge
xchg
mov
mov
scas
mov
sub
xor
sbb
mov
cmpsb
pop
push
hlt
cmpsb
mov
jmp
mov
pop
iret
jecxz
jo
std
aaa
dec
dec
das
jne
cmp
insb
xor
out
sub
and
das
adc
push
and
insb
xor
stos
clc
mov
popf
inc
xchg
mov
ljmp
mov
mov
in
jne
ljmp
shlb
leave
pusha
push
ficoml
cld
mov
mov
das
es
js
sub
xchg
xchg
jg
sahf
dec
mov
imul
dec
dec
cwtl
lods
mov
mov
cmp
jl
js
xor
jae
add
fistl
mov
mov
ret
insl
filds
inc
shll
jmp
push
loopne
xchg
push
mov
imul
lcall
test
cwtl
jae
cld
sub
xchg
test
dec
lcall
mov
jl
fdivrl
sbb
outsl
shl
stos
jo
cmp
sub
add
push
push
xlat
xchg
and
pushf
nop
das
in
dec
or
mov
push
lods
inc
inc
in
jo
mov
mov
or
sbb
xor
dec
int
lahf
mov
pop
xor
pusha
xor
hlt
enter
cmpsl
iret
cmpsb
xchg
fs
test
dec
and
jnp
lods
shl
jno
push
dec
and
adc
and
xor
mov
rcll
test
mov
or
push
ds
jp
push
push
inc
nop
flds
mov
test
mov
mov
mov
lock
ja
xchg
mov
push
cli
sbb
or
add
sub
adc
loop
or
cwtl
mov
pop
inc
cmpsl
loopne
sub
inc
rolb
lret
adc
leave
xlat
push
xchg
push
gs
lsl
scas
xchg
adc
hlt
jno
mov
inc
mov
inc
stc
or
inc
jae
roll
xlat
mov
and
and
cmp
or
enter
xor
jl
in
dec
arpl
xchg
fs
xchg
jbe
stos
sub
jmp
mov
leave
aaa
mov
imul
sahf
pushf
add
adc
xor
fstl
adc
xchg
inc
aad
std
cld
xchg
pop
cmp
out
int3
inc
lahf
int3
lods
xchg
idivb
hlt
movsl
popf
lret
mov
loopne
in
xchg
sbb
aam
addl
push
test
dec
sbb
std
sub
add
adc
or
addr16
daa
xchg
sbb
pop
xchg
mov
inc
out
and
mov
std
les
jle
or
stos
imul
lret
ret
push
fisubl
mov
subb
pop
jbe
mov
sub
inc
mov
or
dec
bound
mov
dec
dec
test
push
dec
jmp
repz
cmpsb
gs
sub
xlat
add
cmp
mov
and
rclb
adc
rcll
mov
sbb
add
dec
or
out
cld
xor
das
fsub
add
sub
adc
insb
pop
outsb
pop
pop
push
or
jecxz
ret
dec
lods
xchg
pop
adc
pop
adc
xchg
xchg
jle
popf
cmp
pop
jecxz
fcoml
push
enter
imul
jle
scas
mov
pushf
cmp
cmp
movsl
push
lds
je
add
je
cmpsb
inc
push
xchg
loope,pt
lret
lret
cmpsb
xchg
outsl
ret
nop
mov
rorl
mov
push
enter
sub
adc
stc
jp
loop
rolb
lock
roll
das
data16
cwtl
push
sbb
pusha
jp
fidivrs
stos
icebp
xchg
xchg
outsb
pop
push
fs
xorb
or
dec
xor
or
pop
mov
test
pop
xchg
aaa
jb
ret
cmp
fsubrl
hlt
sbb
nop
push
hlt
movsb
xlat
or
or
lahf
aaa
xor
jo
sub
imul
xchg
pop
inc
xor
jne
xor
lods
xchg
mov
decl
popf
sub
nopl
std
pop
pop
dec
je
jmp
addr16
outsb
jo
testl
fsubl
jle
and
or
push
arpl
push
fisttps
xor
lcall
push
lock
and
cli
add
mov
xchg
scas
lock
push
add
dec
xor
or
cli
mov
in
ss
clc
or
jb
and
and
lods
lods
jnp
jno
and
xlat
adc
pop
add
adc
lds
dec
fstp
icebp
insl
sub
cmpsl
mov
enter
jo
jmp
xchg
sbb
pop
xchg
orl
ja
dec
test
inc
cmp
scas
jns
in
mov
jnp
cli
mov
sub
in
into
xchg
cmc
add
and
push
and
mov
dec
shl
cmp
mov
pop
mov
jg
jl
sbb
js
sbb
add
xor
or
jo
loop
lods
dec
sti
xor
dec
hlt
mov
daa
jo
xor
outsb
mov
cmc
jle
fwait
ret
rolb
sub
mov
sbb
sbb
lcall
add
sub
jg
out
push
mov
loopne
in
pop
cmc
sub
mov
pop
pop
inc
jbe
subb
and
stos
fiadds
and
lahf
jge
mov
test
sti
xchg
scas
ror
sbb
inc
or
sti
cli
rcr
outsb
es
jg
lock
jmp
sub
jmp
cltd
lock
mov
scas
jp
inc
jnp
adc
push
int3
xchg
mov
sub
fstpt
sbb
ss
sbb
sub
cmp
iret
movsl
test
fistpll
cld
shll
in
fdiv
pop
jb
js
pop
push
rolb
mov
sub
in
paddusw
loope
or
in
scas
jae
insl
in
bound
data16
insb
popa
into
lea
inc
dec
mov
mov
out
pushf
mov
mov
aam
jae
mov
jge
popf
arpl
and
mov
sbb
pop
inc
jne
cmp
jae
or
fwait
mov
jle
enter
fcoml
aam
test
call
cli
mov
cmpl
pop
cmp
xor
divl
mov
lahf
xchg
out
shrb
lret
popf
loop
xlat
das
xchg
hlt
fdivrs
js
pop
cmp
fistps
ljmp
call
xchg
lcall
scas
mov
adc
pop
jo
dec
mov
sub
lret
test
push
fs
xor
mov
sbb
iret
sbb
dec
xchg
jbe
out
ss
into
clc
leave
movsl
mov
or
testb
jns,pn
sub
mov
add
gs
jmp
mov
xor
les
jns
fisubrs
xor
dec
or
cmp
stc
pop
push
bound
mov
pop
daa
pushf
mov
mov
pushf
and
lods
or
pop
dec
pop
push
ljmp
sbb
addr16
push
je
and
rcrl
cmp
fisttps
out
loopne
add
test
inc
dec
sub
pop
push
inc
push
mov
outsl
lret
mov
ljmp
fmulp
testl
bound
pmullw
pop
cmp
jmp
fidivl
pop
xchg
ficoms
push
xor
xlat
add
xchg
xchg
fists
add
std
ret
dec
push
sbb
inc
je
pop
negl
jecxz
lret
shr
dec
and
call
daa
imul
mov
ja
mov
ret
das
in
cmp
faddl
fdivs
addl
test
jno
inc
sbb
ret
stc
lods
aad
cmp
repz
pop
and
fidivrs
xor
ss
push
into
push
dec
lds
movsl
fldl
fdivr
pop
shlb
loope
lahf
adc
or
test
divb
dec
mov
out
scas
or
inc
mov
or
sarb
ret
sbb
push
out
sub
xchg
adc
lods
aaa
daa
or
fsubl
mov
jae
frstor
idiv
jle
sub
fdiv
fisubs
pop
dec
xor
mov
xor
out
popa
adc
and
push
repz
cli
or
in
aad
mov
dec
lods
jne
cmp
adc
or
ffree
xchg
or
cmp
sub
sbb
out
pop
imul
fwait
inc
mov
test
add
sbb
and
lods
gs
inc
xor
add
pusha
sbb
scas
jbe
and
addr16
xorl
pop
cmp
pop
scas
in
lcall
sub
mov
fistpll
sbb
add
loope
stos
jb
dec
inc
or
imul
cmpsb
and
and
cmp
popa
sbb
pop
cmpsw
lock
xor
sub
std
and
jmp
mov
mov
out
aaa
mov
test
pop
cli
push
out
int3
ficoms
or
not
movsb
dec
mov
dec
pusha
js
dec
adc
stos
lret
mov
mov
mov
xchg
repz
xchg
mov
push
jns
scas
bound
lret
rolb
repz
popf
das
in
xor
dec
jnp
ficomps
out
aaa
test
in
cld
cmp
jnp
push
into
inc
mov
mov
rorl
cmpl
pop
js
scas
hlt
js
mov
push
pop
and
push
and
mov
sbb
cmp
test
in
imulb
adc
lcall
cld
ret
dec
pushf
outsl
mov
loop
insb
incl
and
mov
js
pusha
out
dec
jge
fcomps
aam
cltd
sub
pop
adc
inc
fiadds
sarb
sbb
sub
sub
push
push
mov
and
les
add
pop
add
mov
mov
add
jg
lahf
fstps
scas
roll
mov
lahf
or
outsl
addr16
stos
jno
pop
jmp
imul
xor
push
hlt
push
cmpsb
xchg
jl
mov
and
push
sub
jns
xchg
sbb
roll
jns
lods
fsub
fstpt
ja
sahf
cwtl
add
sahf
repz
in
inc
arpl
daa
cmp
mov
fwait
or
mov
nop
stos
movsl
jb
inc
lea
xor
sbbb
sub
sub
ljmp
xchg
cmc
movsl
test
addr16
in
mov
ds
dec
adc
mov
clc
sti
aam
xchg
mov
in
and
icebp
xchg
sub
and
scas
insl
les
jl
push
out
dec
xor
xchg
imulb
stc
inc
jp
icebp
int
push
cmp
lock
sub
push
xor
pop
pushfw
pop
cmp
cmpsb
jnp
add
pop
popf
test
fldl
cltd
xchg
rorl
lock
sub
std
and
sbb
cmp
pusha
pop
imul
cs
out
test
mov
sbb
in
movsl
stc
dec
mov
cmc
or
fnstenv
add
je
lcall
dec
sahf
cmc
hlt
test
xchg
es
mov
mov
pop
iret
in
xchg
mov
pusha
xor
sbb
sub
jne
popa
adc
mov
clc
pushf
pop
jo
pop
scas
xor
testb
daa
mov
rclb
sub
psubusw
stos
cmp
cmp
mov
pop
dec
js
shrl
dec
pop
lock
or
int
push
xchg
fdivrs
ret
xchg
sub
outsb
adc
mov
ds
adc
pop
lret
push
movsb
loopne
roll
bound
mov
stc
mov
mov
inc
dec
mov
test
scas
test
sub
push
push
nop
jmp
xchg
xlat
addr16
pop
jecxz
push
push
push
movsb
popf
jge
push
shrb
xor
fsubrs
sbb
adc
mov
lods
jo
mov
mov
push
push
jg
dec
cmp
add
aam
mov
dec
mov
mov
outsb
or
mov
sbb
mov
xor
or
mov
ds
in
mov
mov
mov
inc
stos
push
or
lock
cmp
popa
push
loopne
xor
jmp
pushf
mov
leave
imul
fnstenv
push
push
cmp
cli
jp
jbe
jbe
cli
in
sbb
fnstcw
outsl
xor
dec
inc
cltd
xchg
aad
imul
daa
jo
ror
inc
gs
pop
add
mov
and
xor
and
sbb
bound
mov
adc
sbb
aad
cld
orb
pop
inc
dec
push
movsw
dec
mov
push
jae
cld
sub
pop
cmc
pop
xchg
stos
movsb
dec
stos
dec
aas
movsl
or
inc
imul
mov
fistpll
jnp
fisubrs
mov
xchg
into
sbb
lods
fistps
or
xchg
movsl
pop
push
data16
stos
out
daa
jp
and
mov
popl
cli
mov
and
cmp
into
and
daa
inc
xchg
mov
mov
pushf
cmp
cmp
xor
xchg
dec
pop
jg
or
cmpsl
push
nop
std
lret
test
mov
xchg
fcomps
sbb
testb
mov
aam
ds
adc
jp
aad
xchg
pop
push
scas
sub
push
dec
inc
test
stos
adc
adc
or
mov
clc
mov
inc
pop
and
and
dec
inc
xchg
xchg
cltd
out
push
iret
hlt
fnstcw
notl
jns
pushf
stos
cwtl
out
sub
pop
es
pop
shrl
push
jo
aam
imul
xchg
scas
push
pop
scas
sbb
add
mov
xchg
jno
ja
cs
push
in
cmp
ds
arpl
insl
push
jns
das
pop
cvtpi2ps
pop
movsb
mov
cli
sub
push
dec
lahf
cmp
push
mov
aas
ds
int3
jl
pop
loop
cmp
ja
cmp
push
in
out
push
or
mov
dec
adc
icebp
xor
flds
xchg
sbb
rol
mov
or
xor
subb
test
sbb
xor
push
int3
stos
add
nop
arpl
adc
addr16
lea
mov
and
push
cmpsl
adc
xchg
add
testb
jae
int3
cmp
mov
jg
lahf
movsl
loope
mov
inc
xchg
stos
cmp
xchg
shl
pop
inc
adc
js
sahf
fisttpll
inc
data16
bnd
scas
cmp
faddl
push
push
pushf
repz
int
out
cmp
pop
cmp
push
mov
in
mov
mov
sbb
aas
rcl
es
nop
hlt
jo
mov
mov
sbbl
das
rclb
push
testl
sbb
pushf
cwtl
pop
outsl
dec
mov
push
mov
and
rolb
js
rcrb
add
outsb
inc
clc
dec
xlat
fdivl
pop
mov
shr
push
sub
aaa
pusha
repnz
sbb
arpl
loope
or
jl
cli
push
lea
sti
pop
xor
dec
jecxz
or
inc
inc
mov
mov
cli
sub
arpl
jg
jnp
cmpsl
call
mov
or
push
push
testl
lock
jae
test
in
push
mov
ret
mov
xor
js
hlt
xchg
push
mov
mov
mov
test
aam
mov
bound
shrb
xor
into
repz
push
mov
adc
dec
cmp
sub
jno
pushf
inc
nop
leave
stos
cmp
mov
mov
inc
or
push
sbb
ds
mov
cltd
imull
shrl
cmc
fstpl
xor
pop
mov
push
out
jo
int3
fistl
mov
mov
xchg
test
movsb
int3
test
jnp
stos
lds
fbld
push
gs
add
ret
xor
int3
cmp
pop
repnz
dec
cmp
lcall
cltd
mov
fisubs
add
adc
or
cmp
addl
lret
mov
dec
outsb
ret
shr
mov
pusha
test
es
ds
jae
pop
divl
dec
cwtl
pushf
jo
fildl
mov
enter
loope
jle
cmpsl
repz
sub
ljmp
outsb
inc
jb
dec
push
jae
jp
add
aad
and
xchg
mov
push
in
sbb
pop
add
into
xchg
dec
add
movsl
pop
in
call
outsb
cmp
fsubrs
jge
pop
ss
aas
pop
add
shlb
movsl
loop
in
notb
cld
inc
stos
insb
push
pop
das
dec
std
cmp
repz
adc
xchg
test
cmpsb
jnp
push
filds
loope
mov
mov
popa
sub
clc
not
in
jb
stc
sbb
leave
sub
leave
mull
xor
scas
and
jge
xchg
fisubl
jb
push
xor
jns
negb
xor
js
sub
mov
mov
xor
dec
mov
xchg
dec
insb
lahf
add
sahf
fcomip
cmpsl
cmp
dec
mov
gs
adc
mov
add
push
movsb
mov
pusha
jne
mov
mov
int
rcr
xor
mov
ret
and
lods
ds
loopne
add
xor
lds
leave
xor
xchg
jmp
jmp
dec
push
adc
pop
and
pop
outsb
clc
pop
pusha
rcl
or
sbb
rcrl
cmp
sub
dec
add
xor
mov
in
jbe
pop
int3
ds
or
movsl
push
or
add
shrb
or
fdivrs
pop
mov
dec
add
sbb
pusha
lds
push
movsl
or
cmpsb
loop
mov
sub
into
mov
std
idivl
into
add
push
and
stos
cmp
cmc
or
test
jne
je
ja
pop
jge
adc
call
daa
lock
stos
aaa
mov
mov
test
enter
dec
repnz
out
ficompl
jae
es
mov
inc
xor
scas
sub
ret
xchg
mov
xchg
pop
stos
lods
mov
inc
mov
dec
fidivrl
jmp
xchg
xchg
jmp
les
mov
imull
sub
mov
int3
dec
repz
ja
xchg
mov
test
and
dec
xchg
pop
call
test
rcll
fucomp
inc
out
push
cmp
idivb
push
add
jae
stos
inc
mov
cwtl
test
mov
fbstp
xor
dec
and
jae
cmp
adc
insb
or
inc
sbb
roll
jne
sub
lret
push
mov
xor
pusha
je
lock
xor
in
ljmp
insl
cli
and
aaa
inc
sub
mov
xor
xor
inc
shlb
scas
adc
pop
dec
xchg
push
sbb
or
and
mov
lds
adc
aaa
jg
cmp
mov
xor
cmp
or
in
pop
in
mov
and
pop
daa
xchg
imul
int3
jne
mov
pop
xlat
test
test
test
in
cmp
mov
cmp
jo
adc
inc
push
ret
push
test
rcr
cmp
push
xchg
mov
mov
inc
fadds
stos
mov
cmp
mov
lahf
out
mov
mov
insl
stc
pop
inc
cmp
mov
xlat
mov
shlb
rolb
inc
dec
out
or
fistpl
sub
stos
jne
push
add
xor
in
ja
push
add
and
mov
xchg
rcr
hlt
repz
bound
xor
shlb
pop
xchg
repnz
dec
iret
mov
addr16
lret
xor
mov
adc
dec
cs
or
or
push
nop
sarb
inc
dec
pop
add
pop
test
loop
push
cmp
aam
pop
cmpsl
dec
push
bound
ret
sub
fstpl
loopne
jecxz
jmp
sbb
and
xor
arpl
fsub
int
push
dec
sbb
inc
sub
xchg
and
xchg
sub
ljmp
nopl
bsf
xor
mov
sbb
sarl
or
xlat
imul
sub
mov
rcrb
ret
insl
cmpsl
shlb
ljmp
rcll
adc
aad
nop
repnz
jle
cmp
mov
push
sub
es
pop
xchg
cmpsb
sarl
xchg
stos
std
and
pop
pop
mov
test
cmc
ljmp
adc
mov
pop
mov
js
daa
jnp
js
sub
adc
int3
enter
cmp
lds
andb
sbb
lods
scas
aaa
hlt
faddp
fsubr
ret
add
gs
mov
jb
adcb
jmp
call
and
in
and
xchg
movsb
pop
stos
push
iret
sti
adc
or
mov
inc
icebp
ret
loopne
sbb
push
pop
stos
pop
pusha
add
push
inc
adc
fmuls
fucomip
sbb
dec
jecxz
or
and
pop
and
jge
or
jne
mov
shll
lods
lcall
dec
pop
cli
xor
mov
adc
bound
lods
adc
mov
cli
or
out
lock
mov
fdivrs
cmpsl
jne
push
push
outsb
packuswb
adc
in
dec
ja
idiv
fisubrl
js
jne
add
pause
pop
pop
dec
imul
cmp
add
push
test
int3
loope
mov
fs
lea
mov
push
aaa
mov
pushf
inc
mov
cmp
pop
sahf
clc
inc
imul
inc
dec
cwtl
out
out
lcall
mov
jmp
aaa
decl
ds
jge
sbb
aaa
jbe
adc
sbb
shrb
mov
inc
cmp
and
sub
test
daa
mov
xchg
aam
push
push
inc
jmp
jae,pt
paddq
pushf
pop
pop
cmc
cmc
xchg
mov
push
push
cld
xchg
or
inc
aam
jl
inc
push
add
mov
lret
hlt
fs
outsb
pop
and
or
movsl
lock
movsl
xchg
shll
sti
mov
insl
cmp
mov
sti
outsb
jae
lret
dec
dec
mov
add
loop
mov
fidivl
sbb
mov
cltd
dec
xlat
sarl
clts
jne
sub
push
popf
push
into
popf
inc
daa
hlt
lock
cmp
fiaddl
test
in
mov
jnp
add
mov
xchg
jmp
push
xlat
std
in
imul
pop
push
sti
mov
sub
xlat
es
icebp
shll
add
jb
jg
jg
scas
adc
int3
mov
fadd
mov
out
prefetcht0
test
pop
pop
add
mov
iret
jmp
in
xor
sbb
js
adc
hlt
and
in
adc
cs
adc
lods
dec
mov
ret
add
test
int3
xor
xchg
pop
mov
xchg
jle
lods
mov
pop
ficompl
out
popa
call
loop
mov
or
repz
inc
mov
lods
cmpsl
mov
outsl
mov
dec
rclb
ss
or
xor
cwtl
sbb
pop
mov
adc
popa
pop
movsl
stos
test
sbb
push
hlt
stos
push
enter
lret
mov
mov
push
cmpsb
lods
icebp
clc
xlat
pop
inc
stos
sbb
mov
pop
ficoms
addb
mov
or
std
add
sub
test
push
imul
push
xorl
inc
repz
test
loope
mov
out
pop
repz
cmc
std
fists
btr
mov
mov
enter
out
push
lcall
ret
es
es
out
mov
adc
test
lahf
and
xor
out
sbb
cli
mov
outsb
push
push
in
negl
cwtl
rclb
into
dec
inc
adc
notl
test
pop
stc
cmp
lods
mov
frndint
sub
mov
es
jle
mov
aaa
jne
sub
stos
flds
mov
xor
mov
add
mov
jp
push
push
sub
push
or
dec
pusha
sbb
jg
or
cwtl
add
add
dec
sub
cli
xchg
jle
xor
xorb
imul
ljmp
jae
and
lods
jbe
subb
sbb
into
inc
bound
mov
and
lahf
es
lock
add
pop
cld
popa
popf
push
cltd
lds
mov
xchg
sahf
jmp
mov
test
mov
pop
ror
jecxz
sarl
mov
xchg
xor
add
and
push
sub
cwtl
jecxz
sbb
stos
cltd
add
jl
mov
xor
dec
sub
jae
pop
les
aaa
mov
and
inc
popf
sbb
cmp
les
adc
in
add
mov
in
mov
cmp
inc
sarl
xchg
out
pushf
inc
aaa
insl
imul
push
adc
sbb
pop
test
stc
cmpsl
push
mov
ja
daa
aaa
pop
mov
out
add
adc
mov
mov
mov
push
movsb
mov
sbb
leave
loopne
test
pop
test
pusha
xor
inc
fwait
dec
mov
das
jmp
out
imul
cli
mov
cltd
scas
fs
mov
push
clc
and
orb
mov
push
mov
pop
cmpsl
lret
xchg
cli
cwtl
lds
popa
and
mov
mul
lock
cmc
push
xor
test
xchg
clc
das
testb
mov
push
jg
rorl
lret
jae
icebp
push
es
popa
mov
ja
sbb
pop
jns
xchg
inc
xor
or
or
sub
xchg
es
ja
std
cmp
fisubrs
adc
aas
shlb
xchg
or
push
sub
fisubrs
push
mov
mov
push
ret
sub
lea
dec
ficoml
outsb
in
mov
mov
pop
push
dec
addr16
inc
cmp
xchg
lods
add
jbe
adc
cli
dec
sub
adc
test
loope
mull
or
mov
add
stos
cmpsl
xchg
cmc
push
and
cltd
xchg
mov
sub
fildll
mov
pop
std
mov
mov
and
sub
inc
cmp
pop
das
mov
jge
jnp
inc
mov
dec
jmp
xchg
xchg
adc
nop
fisubrs
cwtl
or
pop
mov
lahf
ret
push
jnp
xchg
mov
sbb
inc
or
sub
and
mov
pop
pop
adc
call
popa
mov
or
rorb
sahf
arpl
and
bound
pop
jg
push
adc
bound
push
pop
xor
or
add
mov
incb
sahf
js
sbb
leave
adc
out
xor
inc
sbb
stc
pop
out
pushf
pop
adc
mov
sbb
inc
pop
outsb
mov
leave
cli
movsl
test
and
or
push
gs
pushf
lods
lock
and
sbb
push
xor
insl
lock
mov
mov
int
jg
pusha
mov
fcmovb
or
test
mov
xor
repz
mov
arpl
sbb
cmp
ss
cld
push
inc
out
mov
pop
rorb
fadd
mov
and
add
test
cmp
add
push
dec
in
ficoms
call
lods
inc
js
je
pop
stc
and
rorb
or
andb
in
jle
inc
sti
add
push
sub
gs
xchg
vpmacsdd
fnsave
xchg
mov
lock
push
bound
daa
cmp
rorl
loopne
jle
cmp
mov
movsl
sub
push
mov
mov
inc
bound
sbb
push
sahf
lcall
outsl
in
stos
sahf
mov
lds
inc
out
int
stc
cmp
mov
es
pushf
sbb
cwtl
add
sbb
pop
pop
into
xchg
movsb
fcoms
stos
dec
mov
dec
xchg
test
insl
push
pop
xchg
pop
push
stos
cmp
push
pop
pop
jmp
dec
push
sub
mov
icebp
adcb
lods
adc
inc
addr16
xchg
xor
and
mov
int3
loopne
daa
out
or
scas
repz
pusha
incb
cmpsb
jbe
bound
mov
inc
jns
ljmp
imul
jo
lock
pop
stos
scas
movsl
pop
lcall
les
jmp
into
outsl
fldenv
jmp
push
jbe
inc
lcall
xor
fcoml
and
lret
cmp
mov
testb
sbb
test
in
dec
sbb
and
xor
ret
jecxz
ja
mov
fsubrl
adc
inc
shlb
in
in
pusha
push
dec
test
movsl
fcmovnbe
cli
xor
xor
cmp
ret
fcoml
lds
das
cmp
mov
nop
sbb
addr16
xchg
rcll
jp
mov
push
outsl
fsubrp
sub
bound
cmp
iret
and
push
xor
decb
mov
jp
gs
push
punpcklbw
and
xor
xor
and
mov
sbb
lods
lret
pop
fistps
lret
push
dec
xchg
mov
aas
dec
andl
mov
ds
mov
and
xlat
xchg
aad
into
sub
xchg
push
in
or
fwait
adc
aas
adc
cmp
sub
sbb
xchg
jbe
int
push
test
jno
loopne
or
out
aad
daa
add
int
ret
dec
cmpsb
xchg
lock
sub
pushf
add
sti
jb
push
mov
fmuls
push
call
int
stos
and
clc
dec
xchg
out
cltd
ds
outsb
xchg
cmp
rcll
dec
xorb
aaa
jb
and
mov
sub
sahf
adc
and
fistpll
cmp
mov
out
add
fsubrs
das
cmp
sub
xchg
in
mov
and
cli
jecxz
mov
and
insl
pop
xchg
xlat
stos
vmovups
and
jg
cli
mov
adc
ljmpw
test
stc
clc
push
mov
in
icebp
xchg
cltd
push
sbb
sub
xchg
imul
mov
sbb
mov
push
cltd
je
daa
test
stos
adcb
fnstcw
out
dec
lea
popl
push
pop
leave
inc
jo
and
pop
aad
out
mov
add
leave
push
xchg
mov
mov
cmc
xor
hlt
shl
sbb
cmp
aaa
lahf
pusha
or
das
jl
ss
addb
hlt
or
insb
push
jp
and
mov
dec
aaa
add
push
std
dec
sub
mov
cmp
out
int3
sub
lret
push
inc
inc
push
push
pop
inc
push
jbe
inc
icebp
ja
xchg
mulb
and
mov
jge
sub
sub
dec
add
inc
push
pusha
and
push
and
rcll
add
jbe
inc
stos
leave
jne
stos
repnz
outsb
push
es
push
outsl
loope
movsb
mov
fnsave
shl
int
inc
dec
jae
fisttpl
daa
pop
call
pop
xchg
sbb
into
push
movb
dec
and
jno
dec
int
xor
cs
add
and
xchg
pop
xchg
xchg
xor
js
pop
bound
bound
pusha
in
xchg
mov
xor
test
cli
icebp
xchg
fidivl
pop
jecxz
gs
daa
insl
lock
arpl
mov
inc
dec
subl
and
mov
dec
mov
xchg
sub
mov
and
mov
imul
in
fidivrl
and
repz
sbb
lea
adc
lahf
xchg
outsb
gs
xchg
scas
pop
push
clc
jnp
fists
es
xchg
insl
push
push
push
push
sbb
xchg
and
sbb
push
jmp
loopne
in
xor
mov
inc
cmp
mov
xchg
sahf
adc
mov
xchg
int3
test
ss
and
sub
dec
pushf
jnp
xor
es
fwait
insl
or
xlat
push
rolb
fwait
fwait
repz
sbb
dec
mov
lock
pop
daa
adc
call
inc
push
test
inc
icebp
mov
or
mov
or
adc
in
js
xchg
inc
loope
in
push
push
repz
orl
inc
or
loopne
fcmovb
bound
jb
sahf
clc
add
inc
rcr
pop
xor
mov
enter
fs
les
sbb
pop
push
add
ss
cmpsb
pop
pushf
test
dec
or
cmpsl
ds
fldcw
pop
mov
pop
sub
push
mov
rorl
mov
insb
loope
idivb
jg
dec
mov
pop
xor
add
xchg
push
enter
inc
in
xchg
jno
xor
or
add
lea
mov
mov
lahf
shll
jnp
daa
dec
jnp
pop
cmc
add
outsl
xor
lea
rol
mov
pop
mov
dec
xor
dec
ficomps
push
pop
fmuls
jnp
daa
shlb
out
mov
xor
cmc
pop
jno
stos
jl
leave
test
cmpsl
loope
adc
mov
fdivrl
jl
and
and
cmp
imul
xor
subl
rorl
xlat
shr
pop
lds
add
call
sub
or
xor
out
sub
pop
mov
aas
mov
rorl
mov
and
pop
inc
outsb
cli
fwait
lret
pop
loop
inc
xchg
fdivs
jge
rol
and
pushf
frstor
and
xchg
cmp
xchg
mov
push
sbb
xor
cltd
or
cmp
and
xor
imul
add
call
adc
ret
lods
mov
shlb
push
push
xchg
test
jnp
jbe,pn
push
fistpll
mov
test
pop
loopne
nop
fiaddl
pop
push
cld
arpl
fbstp
jecxz
inc
mov
enter
add
test
sub
xchg
in
xlat
xchg
dec
mov
push
mov
mov
sub
stos
fsts
add
pop
add
test
pop
clc
pushf
sbb
push
mov
in
gs
mul
and
inc
std
and
push
adc
and
mov
sub
cmpsl
out
fistps
mov
popa
or
add
fs
jnp
jle
xchg
aas
decl
jno
cltd
jnp
fcoml
inc
repnz
fistpll
and
test
ficomps
add
dec
icebp
shlb
push
mov
mov
shlb
ret
pop
push
jecxz
ficoml
lock
aam
mov
or
cmc
jns
or
aam
mov
mov
sub
stos
add
ja
add
sub
cmp
xchg
mov
pop
nop
xlat
bound
nop
cmp
out
mov
sbb
add
jp
inc
mov
rclb
xchg
push
movsb
inc
xor
fldenv
or
aas
pop
in
inc
pop
lods
jnp
pop
sti
add
leave
shll
ljmp
mov
ficoms
into
push
fcoms
dec
in
push
mov
lea
or
sarl
sub
add
and
cmpsl
sub
imul
insb
testb
lds
lahf
arpl
jp
test
push
dec
hlt
lock
out
rolb
movl
orl
mov
mov
movsl
daa
out
add
in
push
imul
mov
lret
jle
faddl
sub
xchg
jp
dec
bnd
dec
push
lcall
ret
inc
inc
ds
push
pop
dec
lea
jnp
lea
mov
int
mov
push
or
push
pop
bound
push
mov
je
push
fs
push
jnp
popa
mov
popf
pop
cmc
sub
mov
hlt
cmpsl
iret
dec
aam
arpl
cld
out
jmp
push
dec
loope
push
lds
add
mov
jae
cmp
ds
cmpsb
shrl
sub
dec
push
add
push
lcall
std
lods
out
jbe
mov
in
jg
leave
mov
sub
loop
mov
cmpb
and
fsubrs
fildll
push
mov
push
repz
and
push
movsb
test
xchg
push
or
arpl
stos
les
and
sub
dec
bound
out
mov
push
sbb
movsl
pop
or
daa
inc
or
les
hlt
push
aaa
testl
int
adc
mov
das
push
out
adc
inc
pop
adc
mov
jl
or
incb
cmp
das
cmp
daa
dec
int
aam
js
fcmovu
rcll
mov
mov
push
jg
les
arpl
xchg
insl
xlat
or
pop
popf
sbb
fildl
pop
neg
js
inc
jmp
mov
dec
jp
xlat
in
aaa
jl
cmc
push
in
sbb
add
cmp
adc
movsb
mov
xor
jge
mov
repnz
mov
cmp
push
les
mov
mov
filds
inc
mov
xchg
cmc
jge
sub
insb
cld
pop
movsl
dec
cwtl
imul
insb
push
fs
lods
push
sub
call
inc
insl
xchg
loope
addr16
mov
add
xchg
iret
or
add
lcall
shrb
mov
lcall
mov
mov
mov
mov
push
sub
xor
gs
pop
cmp
gs
xchg
out
int3
push
push
dec
imul
xor
xchg
xor
les
data16
jecxz
loope
jnp
js
cmp
adcl
repnz
push
notb
std
aaa
and
je
push
sahf
lock
pop
hlt
int3
mov
lea
out
dec
xchg
xchg
lahf
pop
mov
push
pop
push
mov
mov
shlb
inc
cmp
pop
arpl
push
add
leave
xchg
or
add
xchg
subb
out
mov
cmp
popa
jle
jl
pop
xor
jmp
test
sub
dec
fadds
cld
js
test
hlt
in
mov
jg
cmc
pop
loop
sbb
push
es
ja
add
ja
jp
outsb
pop
fcmovnu
shrb
mov
pusha
fidivs
cmpsl
jmp
or
popf
seto
inc
fwait
loop
sub
div
jo
lock
shlb
sbb
pop
xor
lds
sub
add
dec
jp
pop
rcrl
inc
mov
std
ds
orl
inc
push
sub
addr16
mov
jmp
js
outsb
jle
lock
bswap
adc
sub
pop
and
and
repnz
push
cmp
ret
daa
rclb
mov
push
das
iret
mov
pop
jno
lcall
push
int3
push
mov
aad
and
daa
and
lds
dec
xchg
pop
mov
inc
xor
lea
fdivs
stc
stos
lods
cmp
loopne
ss
inc
xor
inc
pop
ljmp
popa
mov
jp
insl
clc
mov
xchg
int3
arpl
inc
and
out
ficompl
mov
mov
and
and
adc
aaa
jo
jmp
and
mov
push
inc
shlb
sahf
fstl
ja
pop
pop
call
aas
insb
and
dec
push
inc
sarl
or
inc
stos
mov
fs
adc
push
orl
cmpsl
aas
xchg
shl
mov
in
sbb
and
jo
xor
gs
js
mov
mov
adc
daa
cmpsl
test
mov
fsubrs
es
ljmp
dec
lret
xchg
je
movsb
mov
mov
nop
dec
orb
adc
push
pop
inc
add
push
add
cwtl
fcoml
adc
jo
data16
in
out
js
fidivs
js
popf
dec
jbe
xor
mov
jecxz
dec
mov
imul
icebp
insl
sub
scas
xchg
dec
imul
mov
dec
imulb
xor
or
sarl
fstps
push
incl
push
xchg
pop
cmovo
jge
rorl
adc
and
test
ljmp
scas
pop
nop
fcoms
jmp
call
mov
repz
shlb
mov
mov
pavgw
jl
gs
out
mov
ss
nop
lret
mov
imul
setl
mov
jl
sub
push
xchg
stos
mov
mov
mov
sub
mov
lock
cmpsb
jno
shlb
mov
mov
ljmp
into
adc
mov
scas
pop
mov
shll
sbbl
out
addr16
adc
or
mov
ret
push
push
add
xor
insb
dec
arpl
sar
add
imul
mov
push
cmpsl
xlat
inc
insl
daa
shll
je
stos
inc
adc
shr
and
pusha
fnstsw
imul
in
push
nop
lcall
mov
in
mov
jg
outsb
loope
cmp
sbb
mov
sbb
mov
dec
les
mov
push
dec
mov
add
sub
mov
pop
imul
pop
sub
out
fldenv
or
xor
ret
call
enter
sub
push
add
fmull
in
mov
mov
es
movsl
or
mov
icebp
fists
outsl
leave
cmp
or
mov
movsl
xchg
xchg
icebp
fisttpll
xor
push
mov
insl
ret
mov
push
jmp
fs
xchg
dec
mov
inc
mov
adcl
ret
ds
xchg
std
dec
xor
sarb
incb
jb
js
shll
into
or
pop
out
jns
fcoml
push
aaa
pusha
xor
add
ret
push
xchg
fidivs
and
lret
and
ljmp
push
fucomip
mov
lods
mov
mov
jl
repnz
xchg
and
int
jae
inc
jecxz
inc
lcall
jo
push
fwait
add
pop
lar
cld
inc
push
sub
fs
imul
sbb
stos
jno
into
gs
pop
push
sub
jmp
test
xchg
mov
push
mov
imul
icebp
push
sarl
shl
or
movsb
sar
inc
mov
inc
or
or
mov
mov
pop
int
jmp
gs
mov
mov
popa
inc
pusha
imul
call
push
scas
push
sbb
inc
aam
sub
push
dec
repz
mov
jns
test
in
ret
push
mov
or
aam
mov
ja
sahf
xchg
out
shr
push
lods
and
dec
sti
jecxz
dec
inc
lcall
mull
mov
pop
xor
outsb
pop
cmp
mov
adc
sbb
lods
inc
loope
fwait
lea
adc
ret
mov
sbb
btc
hlt
xor
push
pop
shrl
push
inc
or
and
mov
lock
out
cmp
mov
ja
movsb
pop
add
pusha
xor
jbe
xchg
mov
decb
mov
push
inc
xor
adc
add
mov
sbb
push
bound
and
xchg
aaa
dec
cmpsb
mov
sbb
mov
sbb
sbb
mov
pop
gs
pop
ja
leave
pxor
jmp
sub
fstl
sbbl
cmc
pop
mov
leave
or
js
imul
push
xchg
dec
out
jl
jmp
std
adc
inc
mov
cmp
sbb
pushf
mov
dec
nop
loop
adc
jmp
pop
mov
loope
mov
in
dec
ret
or
jb
nop
pushw
aas
dec
or
hlt
js
dec
mov
jg
dec
fs
adc
loop
out
push
ja
test
cmc
pop
push
push
mov
popa
push
pop
push
nop
cwtl
mov
adc
push
mov
pop
cmp
neg
lret
inc
icebp
dec
addb
shll
fistpll
sar
mov
cmpsl
clc
dec
lcall
mov
pop
jno
xchg
or
test
mov
sub
push
jns
imul
addl
or
out
stos
imul
pop
stos
mov
push
fmuls
popf
xor
pop
push
stc
jne
pop
add
pop
loopne
xchg
inc
movsb
xor
movsl
cmp
push
dec
daa
add
ja
movsl
cmpl
lahf
and
ret
jg
sti
fists
jb
andl
cs
lods
lahf
js
pop
mov
aaa
stos
out
stos
pop
mov
je
push
repz
out
cmp
inc
data16
shlb
movsl
test
aaa
and
test
cld
push
pop
popa
cmp
cwtl
pop
pop
and
aam
add
and
xchg
pop
pop
aaa
imul
cmp
push
arpl
btc
push
scas
pop
dec
int3
push
mov
sbb
test
and
add
or
push
mov
iret
push
sbb
fdivr
out
lcall
dec
das
sbb
push
xor
adcl
popl
push
mov
mov
mov
cmp
or
inc
xor
lea
pop
lods
in
mov
pop
shll
imul
xchg
out
movsb
ss
jne
rorb
jecxz
dec
jae
popa
popf
out
lods
or
fwait
adc
popa
into
outsb
cltd
outsl
sub
mov
jecxz
xchg
lods
and
bound
xor
cmp
imul
or
and
pop
call
mov
cwtl
inc
out
adc
loop
sbb
sub
inc
repnz
pop
mov
pop
mov
jnp
mov
lcall
mov
adc
gs
mov
push
pushf
adc
mov
lahf
push
stos
and
orb
xchg
jle
shrb
outsb
jge
adc
or
cmpb
inc
outsl
cmp
addr16
test
loop
inc
ljmp
out
xchg
xorb
cli
fadds
icebp
test
inc
xchg
mov
adc
jns
push
mov
ret
addl
cli
mov
jecxz
ret
das
mov
add
inc
sub
mov
xchg
dec
sbb
jp
shll
pop
seta
popf
bound
jg
xor
scas
movsb
jo
push
inc
inc
lahf
scas
lret
je
mov
dec
in
inc
loop
fwait
mov
pop
sbb
xor
lret
cs
xor
push
jb
pop
fwait
inc
sbb
loope
cmpsb
lret
jle
loop
fistpll
mov
sbb
enter
push
inc
iret
scas
aaa
js
nop
jo
cmpsb
inc
pop
arpl
pop
adc
mov
int
repz
inc
aad
lds
mov
xlat
shlb
in
insb
lods
inc
inc
xchg
addr16
dec
xchg
in
pop
int
sub
pop
inc
imul
cmp
xor
and
movsl
push
ds
pop
cs
aaa
cmp
mov
in
ljmp
and
test
xchg
dec
into
inc
les
sub
mov
mov
add
fiadds
adc
and
mov
test
mov
movsl
jl
xchg
dec
cmpsl
mov
push
adc
xlat
jg
add
pusha
shrl
cmpsl
orl
xor
scas
xchg
pcmpgtb
jnp
out
mov
or
cmp
and
jno
cwtl
xor
sti
xlat
lret
ja
es
pop
stos
ljmp
mov
test
adc
jmp
jb
mov
cmc
sub
mov
push
pop
cmpsl
adc
xchg
je
test
or
lea
xchg
fwait
push
fs
shlb
fcmovbe
daa
mov
push
adc
cmp
clc
push
mov
test
imul
xchg
mov
mov
popa
adc
mov
xchg
test
cmp
xchg
addr16
repnz
leave
rcll
movsb
push
pop
adc
arpl
push
sbb
inc
jae
pop
gs
add
cli
out
stos
cmp
dec
xchg
pop
bound
xchg
pop
sub
jb
fistps
fldt
leave
sti
int3
enter
imul
imul
sbb
sub
hlt
mov
shll
pusha
test
ret
fstpl
cmc
mov
pop
jmp
sub
sub
cmpb
cmpsl
dec
test
lods
clc
arpl
iret
bound
sbb
add
call
push
cs
fstps
mov
push
icebp
or
repnz
cld
ret
xchg
sbb
sbbl
and
div
mov
cmp
data16
xchg
pop
test
mov
sub
pop
jbe
scas
insb
in
fldl
in
movsl
mov
xchg
adc
repnz
inc
mov
sahf
jp
not
sub
xchg
dec
test
jmp
int
pop
mov
sub
flds
xchg
sbb
mov
ror
into
mov
bswap
inc
insl
mov
pop
iret
aas
and
test
sahf
sbb
dec
in
jecxz
mov
insl
push
in
cmp
mov
je
push
push
xchg
movsb
xor
inc
jecxz
cmp
sub
dec
rcl
fildl
ret
scas
js
xchg
and
adc
ja
xor
push
sti
int3
fmul
adc
scas
mov
mov
fcmovb
imul
ljmp
pop
mov
stos
rorb
arpl
push
push
fidivrs
pop
lds
xor
jge
ret
sbb
enter
mov
lret
or
std
shr
enter
jge
lds
fiadds
jbe
mov
loope
rorl
push
popf
or
mov
push
pop
cmp
dec
fisubrs
adc
sub
lods
jbe
sub
mov
dec
add
xchg
mov
orl
mov
movsl
dec
in
out
les
xchg
in
mov
mov
xor
pop
pop
fildl
inc
aas
rcll
ljmp
cltd
pop
dec
test
pop
enter
jno
push
mov
mov
sahf
call
out
in
sbb
in
sbb
mov
dec
or
push
sub
mov
or
xor
and
pop
fnstcw
cmp
xor
nop
pop
adc
cs
std
cs
xchg
xchg
jne
mov
scas
out
push
clc
pop
mov
push
arpl
shll
pop
sets
cmp
pushf
in
daa
and
xor
cltd
and
adc
cmpsl
jmp
dec
out
je
bound
aad
out
clc
jge
int3
xchg
inc
test
sbb
cld
pop
std
push
jnp
daa
jecxz
xor
out
into
aas
popa
cmp
mov
stos
or
out
jo
sbb
xchg
in
sti
shlb
push
aad
out
dec
daa
pop
mov
shlb
mov
sahf
mov
rorl
inc
repnz
pop
icebp
and
in
adc
push
xchg
outsl
mov
sahf
jbe
cmp
xchg
ss
pop
movsb
addr16
push
dec
sahf
sub
mov
es
cli
and
cwtl
ds
out
fsubrs
repnz
push
in
sbb
int3
mov
iret
loope
dec
push
out
add
fisttps
xor
cmp
sub
mov
in
nop
or
data16
pop
movsl
cli
mov
xor
xchg
cmpsl
ficompl
pop
stos
or
out
xor
dec
adc
pushl
xchg
es
dec
mov
in
inc
push
mov
add
xchg
ss
sbb
pop
lret
cmp
cmp
xchg
mov
and
xor
or
cmc
mov
add
dec
icebp
lret
xor
cs
mov
jne
adc
aaa
mov
mov
out
mov
scas
sarl
scas
jbe
mov
mov
pop
fidivl
jo
stos
stos
jmp
es
rcll
sub
adc
mov
inc
iret
mov
jns
out
pop
mov
cwtl
icebp
sbb
stos
xor
imul
push
movsl
and
hlt
lock
dec
or
mov
jno
scas
xor
jl
jmp
xor
xchg
mov
sbb
jecxz
push
jae
in
dec
xchg
adc
push
je
jg
inc
and
in
push
aaa
bound
cmp
push
xor
or
adc
jbe
add
and
lret
bound
add
jmp
add
es
dec
fimuls
std
out
loope
push
jge
inc
in
pop
lahf
dec
shr
jo
cmc
pop
jg
pop
push
xor
or
mov
push
mov
inc
add
push
inc
mov
add
mov
fmul
push
mov
jmp
out
adc
sub
cli
out
jl
xchg
cmpsb
mov
sbb
mov
or
roll
fsubrl
rcrb
jne
mov
dec
bound
cli
fistpll
cmpsl
mov
add
mov
in
add
push
push
cmp
loope
lock
fldl
add
popl
jge
ss
adc
jmp
jo
pop
je
jp
repz
xchg
pop
xor
push
pop
es
outsl
std
fidivs
mov
fwait
push
lds
push
sbb
dec
fsubl
aas
lods
jb
daa
out
ljmp
pop
cmp
jmp
cmp
movsl
push
shlb
cmp
clc
inc
imul
xchg
push
daa
lods
lds
call
insb
bound
popf
scas
xchg
cwtl
cmpl
xor
sub
mov
aaa
inc
cmp
push
es
mov
test
out
sbb
lods
pop
dec
pushf
cmpsb
cmp
and
lock
mov
inc
push
mov
xlat
mov
mov
outsb
negb
ret
loopne
das
call
mov
cmp
mov
dec
je
gs
mov
std
inc
clc
jp
cwtl
into
repz
mov
mov
or
call
in
jns
fwait
pusha
arpl
mov
jl
mov
in
imul
or
jnp
shrl
mov
sub
xchg
ret
in
dec
sub
sub
packsswb
push
inc
lcall
dec
xchg
aaa
dec
mov
jne
lods
push
js,pn
or
cmc
or
movsl
rcrb
mov
adc
mov
xor
pop
int3
adc
rcrl
insl
std
pusha
jae
dec
mov
inc
rcr
daa
xor
jb
mov
adc
out
aaa
add
and
inc
lods
cli
adc
add
jge
movsb
shlb
int3
cs
inc
cmc
fnsave
dec
ds
dec
mov
push
ret
into
je
fsub
or
inc
xchg
filds
icebp
sahf
xchg
xchg
and
push
je
outsb
cmp
adcl
repz
clc
add
and
insb
jnp,pn
int3
dec
js
inc
pop
xchg
ljmp
loopne
mov
bnd
sbb
lcall
push
mov
jb
mov
jnp
and
pop
fwait
dec
pop
rcl
pop
test
xchg
dec
out
jecxz
xor
mov
lret
mov
out
ja
imul
add
cmp
lds
mov
xor
or
sub
mov
cs
adc
dec
adc
movsb
xchg
in
xor
cmp
jle
or
dec
popf
add
dec
lret
and
out
rcrl
sub
imul
xor
hlt
jns
jne
scas
xchg
imul
dec
dec
jecxz
loopne
mov
mov
cmp
fildl
cmp
ror
sbb
stos
hlt
shlb
loopne
xor
xor
xchg
mov
mov
mov
and
mov
in
pop
dec
add
adc
enter
mov
ret
sub
popf
outsb
xorl
dec
xchg
adc
jo
inc
lock
xchg
jmp
lods
and
js
enter
sub
cs
in
xchg
jo
cmpsb
out
cmp
inc
jl
popf
pop
testl
mov
test
sub
push
adc
add
or
mov
sbb
insl
pop
ss
or
xlat
loop
jecxz
lods
xchg
inc
pop
stos
daa
out
mov
scas
in
mov
and
mov
ss
sbb
mov
int
ret
xchg
jbe
add
movsl
push
and
out
inc
cli
jb
insl
shr
push
or
js
xor
ja
orb
add
test
loopne
fcmovnu
dec
dec
sahf
add
test
scas
jecxz
out
mov
jbe
arpl
sbb
std
mov
jo
lcall
jne
sbb
je
mov
cmp
aad
in
or
and
push
jle
add
sub
mov
fs
mov
pop
add
ret
mov
cmpsb
lock
pop
ja
scas
scas
sub
insl
std
push
mov
shrb
arpl
xor
or
sbb
insl
sbb
aad
outsb
xor
mov
loop
xor
fmul
in
add
add
push
imul
jmp
cmpsb
ljmp
stc
jb
mov
and
pop
pop
xchg
lods
sub
push
add
js
call
enter
sbb
test
fsubp
scas
sub
out
cmp
in
insl
mov
rep
xlat
out
mov
push
push
xchg
in
shrl
outsl
ret
mov
sbb
test
test
xchg
xor
cld
push
jno
push
mov
or
lea
cmc
push
lret
push
mov
jg
adcl
push
xchg
push
cmpsl
xlat
cmpsb
xlat
lods
pop
fcmovb
mov
sbb
or
dec
fnstcw
sub
mov
xor
add
cwtl
movsb
sub
mov
pop
pop
mov
add
sbb
jecxz
ljmp
add
and
in
fidivs
xchg
add
and
inc
push
pop
std
push
lret
out
add
or
in
cmp
push
adc
dec
and
movsl
or
mov
mov
push
mov
xchg
adc
sahf
and
fisubl
push
cmc
sbb
add
dec
or
xchg
in
movsb
repz
and
enter
lods
mov
mov
imul
leave
daa
sti
call
aad
call
aas
int3
pop
adc
xor
mov
pop
jl
push
pop
in
mov
mov
adc
pop
popa
pushf
std
xchg
ret
scas
jge
loop
cld
sbb
cmp
aad
enter
cmp
jno
or
adc
mov
add
jmp
add
out
data16
push
loope
xchg
xchg
inc
adc
outsb
cmp
cld
insl
pop
inc
xor
adc
mov
ret
outsb
mov
mov
cmc
js
std
cmc
jl
push
cmp
inc
out
loope
nop
sub
lcall
fsubrl
lcall
pop
outsb
andb
pop
outsl
mov
fcmovnb
faddl
and
xchg
scas
jecxz
mov
cwtl
nop
xor
enter
stos
fsubp
lcall
hlt
ficoms
int
fisttps
mov
push
shll
sub
fstl
int3
daa
jb
sbb
lds
arpl
sbb
mov
outsb
xchg
mov
out
in
js
addl
mov
and
jmp
and
jg
lods
adc
aaa
cld
xchg
add
push
adc
into
cltd
mov
lods
daa
pop
and
mov
or
jno
jns
adc
mov
pop
xor
jl
js
movsl
mov
sbb
testb
movsl
mov
out
jecxz
cs
or
cmp
clc
inc
fwait
shrb
addr16
cmpsb
das
in
mov
mov
addr16
push
ret
stos
xchg
dec
iret
pop
mov
fsubrl
out
mov
loope
mov
gs
ljmp
jle
pop
mov
cld
stos
mov
rorb
jp
jb
and
xor
test
icebp
cmc
xchg
das
lret
xchg
mov
mov
and
cltd
mov
jb
dec
mov
cmp
repz
pop
pop
pop
sbb
cli
or
add
cmp
sbb
repz
bound
out
jns
lret
stc
pop
outsl
xor
mov
add
adc
jb
pop
popf
pushf
rcr
inc
adc
les
and
leave
dec
inc
add
jecxz
or
adcb
and
adc
stos
pop
pop
jmp
jmp
mov
pop
popf
jnp
pop
pop
in
aaa
pop
flds
ret
jae
jp
or
pop
cmp
lds
dec
mov
mov
dec
into
addr16
into
mov
mov
adc
jns
mov
filds
mov
in
stc
mov
loop
bound
inc
dec
cmp
mov
jno
jns
jae
and
pop
mov
hlt
iret
aas
and
push
dec
subb
push
insb
push
lret
mov
sbb
lods
or
fsubrs
xor
adc
inc
scas
gs
adc
mov
mov
dec
pop
jmp
jae
and
fmull
mov
cmp
jae
push
movsb
cmp
fs
xchg
pop
data16
add
test
scas
cld
xor
dec
sti
sub
jmp
jle
out
sbb
mov
cmp
rorb
sbb
out
aam
pusha
jns
bnd
mov
jbe
push
inc
in
das
fwait
scas
jnp
sub
add
jne
mov
pop
dec
in
jns
pop
ljmp
pop
mov
out
sahf
xchg
addr16
and
push
jl
lock
aam
enter
cmp
fldt
and
mov
sbb
jl
test
ss
push
mov
pop
mov
cmp
sahf
mov
cmp
rcrl
pusha
xchg
adc
shl
adc
cmp
insb
out
js
repnz
cli
lret
out
sbb
sbb
add
lds
out
insb
dec
iret
lods
ret
insl
inc
lds
test
xor
lret
stos
jnp
mov
cmp
je
jno
mov
movsb
xor
inc
adc
nop
lea
scas
pop
ds
xchg
push
inc
fidivs
xor
inc
sahf
adc
pop
test
out
fists
in
mov
fincstp
movsl
sub
sti
out
jbe
and
shlb
xchg
pop
sarb
xchg
and
arpl
cmp
mov
jge
mov
xor
into
jmp
insl
inc
xor
gs
dec
pop
xchg
int
jg
inc
idivb
and
cltd
daa
int
ljmp
loop
rcr
leave
xchg
xchg
aas
aas
cli
mov
mov
push
hlt
clc
lret
push
fwait
lods
inc
pop
ret
es
sbb
cli
popf
jns
cmc
inc
std
jp
nop
sub
loopne
stc
js
push
xor
call
inc
xchg
int3
add
and
adc
ss
popf
adc
or
xor
shrl
sbb
repz
div
adc
lock
mov
cwtl
insl
adc
int
push
cmp
adc
je
clc
sbb
or
add
sbb
scas
mov
jl
mov
mov
mov
icebp
add
fmulp
stos
sar
xchg
aas
jg
jle
push
dec
leave
mov
stos
std
push
jmp
add
shr
lds
push
ds
scas
push
cmpl
mov
push
mov
lret
dec
gs
test
pop
in
pushf
jl
hlt
xor
loopne
xchg
jge
data16
into
and
rolb
and
adc
sbb
mov
xchg
mov
adc
xchg
mov
repnz
mov
fwait
inc
or
or
mull
in
fldcw
aam
and
shl
daa
jb
push
icebp
add
jg
and
pop
mov
xchg
into
push
ficomps
test
pop
cs
inc
jg
popa
dec
hlt
push
add
sahf
inc
mov
insb
sbb
jbe
call
cmp
dec
loope
xor
js
cmpb
xor
sub
loop
jnp
inc
dec
cmp
sti
jbe
add
mov
cld
bound
in
psrlq
mov
pop
mov
into
aaa
cs
insb
loope
pop
clc
jp
pop
std
mov
inc
adc
out
and
mov
ds
xchg
pushf
lret
dec
fimull
outsb
popa
test
rolb
cmp
ret
testl
mov
xor
jp
insl
andb
cltd
push
or
cli
sbb
int
les
ret
push
rorb
stos
sbb
mov
add
xchg
int3
fnstcw
lods
fsts
xchg
push
lock
mov
mov
cld
xbegin
or
sbb
fstps
aaa
xchg
pop
inc
neg
rolb
mov
inc
xchg
sti
or
fadd
jp
sub
add
stos
mov
dec
sbb
mov
pop
fwait
arpl
cs
fiaddl
stc
and
jne
mov
pop
jbe
xchg
data16
and
les
stc
cmc
test
jmp
jp
fdivrs
lcall
aas
dec
jg
add
cmp
mov
xor
movsl
dec
jp
arpl
jle
orl
and
ds
or
je
xor
shrl
enter
sbb
cmp
push
or
rcll
mov
pop
stos
cld
sub
and
lcall
loope
mov
movsb
test
arpl
jg
mov
movsb
les
xchg
pop
lds
je
arpl
or
in
pop
daa
divl
cmp
das
mov
push
sub
rorl
add
int
cmpb
mov
push
add
fucom
rcr
push
out
ficomps
out
int
mov
sbb
in
scas
xorl
add
push
lahf
lret
cmp
sub
cmpl
hlt
inc
stos
nop
fnstsw
sarl
pop
hlt
jb
cmp
push
jo
imul
cmc
ret
jl
ja
ret
pop
push
mov
jbe
filds
cmp
jmp
hlt
sbb
psubsw
ds
jge
xchg
xor
sahf
push
jmp
sti
push
mov
jb
shr
sbb
test
mov
adc
popa
daa
sbb
sbb
cmpsl
cmp
lret
enter
cmp
cli
mov
loop
shll
ja
sub
mov
cmp
push
lods
xchg
mov
add
loopne
xor
fwait
add
rol
outsl
fcmove
fsubr
test
out
lds
insl
popf
daa
xor
mov
cmp
incb
or
shlb
xor
scas
in
and
ret
test
jo
lret
mov
adc
ljmp
pop
ds
inc
jb
rcr
shlb
mov
lea
fsubr
cmpsb
lahf
dec
jp
pop
mov
pusha
xchg
xchg
loope
repz
scas
pop
lret
lret
jmp
int3
test
and
mov
inc
int3
into
rorb
xor
sub
mov
sti
jmp
das
push
in
leave
das
insl
pop
sahf
jg
stc
aas
cli
cmp
sbb
aas
inc
xlat
mov
int
das
mov
ljmp
adc
sbb
ljmp
ljmp
and
jns
les
lock
lock
cmp
xlat
nop
pop
inc
mov
das
jp
dec
cmp
mov
lret
pop
xor
xor
icebp
inc
inc
adc
cmp
adc
in
out
push
dec
push
jmp
xlat
out
and
or
mov
rcrl
ja
push
ljmp
pop
lahf
cs
test
push
int
das
pop
xchg
cmp
and
or
lds
mov
repz
leave
add
xchg
pop
fcoms
bound
pop
or
fs
lea
imul
xchg
mov
mov
inc
and
and
bound
push
inc
repnz
mov
mov
lret
bound
cmpsb
mov
fldt
rcl
sub
push
inc
inc
lahf
sbb
pusha
jne
stc
out
es
sub
cld
xorl
lods
je
ss
mov
in
ficoml
dec
xor
mov
cmp
hlt
loope
and
xor
icebp
insb
push
lods
mov
and
cs
push
bound
es
adc
test
adc
pop
pop
out
aas
fistpll
cs
adc
lahf
xchg
cmp
mov
fwait
mov
sub
mov
insl
push
insb
in
int3
inc
adc
sti
loope
addr16
cmp
loopne
mov
int
ret
pop
scas
mull
or
jno
jns
fidivrs
outsb
jg
xchg
mov
rcll
xor
in
push
stc
rcr
fwait
xor
test
push
test
rcrl
or
sbb
mov
sbb
data16
dec
pusha
je
mov
inc
fdivrp
xchg
xor
mov
xorl
lock
cmpsb
adc
sub
pop
js
imul
dec
ja
or
outsl
dec
out
xlat
cmp
andb
fwait
pushf
pop
cmc
mov
add
cmp
and
daa
pop
push
ljmp
stos
dec
sahf
jecxz
popf
adc
sub
add
mov
fadd
loop
fs
xor
cltd
ja
pop
movsl
loopne
mov
jecxz
adc
mov
jge
push
xor
imul
filds
cmp
fadds
mov
sub
jp
ret
in
cwtl
adc
cltd
jle
dec
add
movsb
out
mov
and
lods
mov
lea
fcoms
or
js
imul
jp
movsl
xchg
cmpsb
sbb
or
aad
xorb
push
test
xchg
in
push
sbb
push
in
clc
icebp
jbe
mov
and
andb
call
fcompl
mov
loopne
dec
lahf
push
dec
js
test
add
sbb
and
mov
inc
loop
std
jmp
dec
cmc
inc
loope
cwtl
dec
and
xchg
or
cmp
popf
in
fsubrl
dec
dec
out
mov
mov
mov
cmp
std
push
mov
sbb
cmp
push
mov
outsb
addl
cs
out
xor
data16
pop
push
les
stos
dec
lds
dec
daa
ss
push
mov
sahf
jne
stc
inc
mov
mov
inc
xor
dec
cmc
add
fldenv
xchg
incl
jo
popa
push
jl
or
call
cmpl
xor
lock
mov
or
stos
sbb
xchg
xchg
push
xchg
xchg
imul
push
mov
pop
xchg
mov
mov
testl
ss
pop
in
jp
xchg
add
or
xor
jnp
pop
mov
jno
in
rcrl
rolb
pop
pop
ljmp
sub
push
mov
and
ss
add
shlb
jns
push
pop
adc
jne
xor
ds
sbb
je,pn
jnp
or
in
sbb
lret
dec
push
and
push
lock
test
pop
dec
mov
pop
mov
scas
lret
add
jbe
mov
push
hlt
jecxz
shlb
cmp
int3
aad
jmp
sbb
mov
adc
xchg
and
add
stc
jp
mov
imul
cmp
xchg
std
testb
lcall
sbb
decl
add
adc
popa
les
scas
ss
dec
sti
xor
xlat
lahf
and
sub
inc
pop
add
xlat
push
xchg
or
xlat
inc
out
jmp
xchg
pushl
fildl
mov
pop
pop
cmc
shrl
add
and
and
push
in
in
fcomip
icebp
lds
leave
sub
lods
insl
andl
adc
or
mov
pop
out
pop
or
lret
std
jecxz
sub
jl
dec
xchg
test
lods
cmp
fstpt
addr16
ffreep
push
add
jnp
mov
dec
adc
sbb
pop
movsb
mov
cmp
jmp
fs
loop
shrl
cmp
cld
mov
out
add
or
mov
loope
insb
test
sbb
inc
pop
mov
or
cli
rorl
sti
mov
sahf
stos
test
mov
in
ror
adc
loop
jo
adc
adc
xor
mov
sbb
xor
inc
dec
pop
insl
andl
dec
xor
push
pop
int
pop
decl
ss
cmp
jnp
imul
pop
dec
enter
push
clc
xor
gs
mov
adc
loopne
mov
xchg
sti
mov
xor
cmp
or
bound
aad
jne
or
out
ret
jns
dec
cmp
add
fisubs
test
jmp
iret
sbb
dec
lods
adc
mul
xchg
cld
pop
mov
and
add
mov
cmp
insb
insb
and
or
inc
inc
idiv
jae
cmp
lcall
mov
xchg
xchg
and
das
out
adc
adc
jecxz
pushl
ss
call
je
dec
enter
cmp
in
test
adc
les
in
or
loop
in
or
lea
cli
ret
adc
outsb
ljmp
jmp
and
dec
cmc
xchg
call
fldln2
rcrb
lods
sbb
out
daa
xchg
outsl
lea
aam
outsb
popa
scas
daa
jbe
mov
popf
aad
jg
sub
mov
in
aaa
clc
ds
shrl
addr16
stc
stos
dec
pop
jmp
lcall
lea
sbb
je
imul
cmp
stc
add
rclb
repnz
nop
mov
fiadds
adc
pop
add
sbb
pop
inc
in
adc
mov
insl
out
adc
or
xchg
rclb
jne
xchg
jns
mov
mov
inc
inc
cmp
in
mov
sub
ror
cmpsl
mov
or
cmp
popf
xor
sti
fwait
cmpsb
dec
add
test
push
hlt
scas
xlat
das
out
insb
xor
push
sub
rorb
jg
sbb
pop
daa
int3
sub
lock
push
es
jb
int
lcall
inc
sub
dec
ret
cld
test
imul
xchg
sub
jno
rcr
sahf
ds
cs
nop
int3
inc
dec
iret
rolb
adc
andb
ja
add
lahf
hlt
adc
push
mov
addl
pop
addb
jmp
cmp
adc
fsubl
lock
dec
pop
lret
dec
mov
lock
and
cmp
fisttpl
push
in
xchg
cmc
pop
in
or
mov
pop
jae
cmc
add
push
dec
out
mov
xchg
jp
lods
push
sub
add
sub
add
outsb
je
pop
stos
cmp
xchg
pop
mov
iret
or
mov
lock
jp
fs
pop
pushf
xlat
in
sbb
mov
gs
call
mov
push
test
call
stc
iret
or
nop
cltd
jns
mov
ja
nop
cmp
dec
daa
shl
aad
test
ret
cmp
lods
xor
xchg
mov
dec
and
lea
push
out
sub
outsb
scas
push
test
ljmp
mov
rcll
push
cmp
in
in
jle
sbbl
cmpsb
adc
aam
jmp
dec
lcall
pop
inc
in
sahf
xchg
test
cmp
xor
movsl
inc
or
sub
gs
or
mov
mov
cmp
push
jne
sub
mov
fwait
jo
jmp
add
aas
rolb
and
mov
dec
stos
pop
jbe
mov
jno
leave
fistps
lahf
adc
mov
fnsetpm(287
gs
test
mov
orb
aad
test
scas
push
mov
push
into
loopne
or
jbe
jg
pusha
stc
xor
mov
out
daa
imul
mov
test
incb
testl
push
push
lods
sarl
push
xchg
idivl
jns
and
jae
or
mov
sbb
mov
out
ds
data16
andl
cmpsl
mov
imul
sbb
jno
jecxz
pop
mov
push
lods
aad
lret
sub
jo
inc
or
loope
jl
cmp
mov
push
pusha
std
fcoml
mov
push
inc
js
adc
iret
xlat
pop
mov
pop
pop
loopne
ret
mov
mov
movsl
fmuls
xchg
sub
or
sub
out
mov
ja
hlt
sbb
push
icebp
jb
xlat
adc
xor
aad
mov
xor
fisubs
mov
mov
call
push
idivb
ret
add
push
sbb
jp
xchg
sub
jae
add
scas
sbb
insl
pop
aad
pushl
sahf
mov
aad
sbb
lgs
bound
out
sbb
mov
cmp
push
add
lret
mov
push
into
inc
jnp,pn
gs
std
sub
jno
repz
pop
stos
insl
jo
adc
loope
stos
cmp
ss
push
ds
push
xchg
add
jge,pn
ss
push
mov
push
nop
push
cmp
cmp
push
xor
push
mov
adc
test
mov
adc
or
lret
mov
stos
jmp
js
and
cmp
cmp
mov
inc
pop
and
movsl
pop
and
jmp
and
sarl
or
repz
das
cltd
jo
pop
movsl
popf
mov
or
js
rorb
addr16
hlt
cmp
out
lds
sbb
testb
sbb
jbe
rcrl
jle
in
arpl
jecxz
sahf
outsl
in
ror
fsubrp
adc
lods
insb
repnz
inc
cmp
lcall
out
bnd
lods
sub
lock
nop
pop
pop
push
rolb
pop
aad
xchg
xor
scas
cmp
subb
data16
les
bound
jmp
xchg
fwait
lret
fidivrs
or
push
dec
jae
ret
das
sub
add
and
pop
test
mov
pop
jmp
lods
shrb
mov
push
mov
add
pusha
negl
es
pushf
movsb
xchg
test
jae
shll
mov
or
leave
mov
arpl
lods
fidivl
dec
mov
fidivl
test
jns
pop
mov
repz
push
pusha
test
jbe
test
fs
push
test
cwtl
mov
ja
pop
sbb
dec
mov
mov
dec
jmp
out
es
arpl
or
loopne
cmp
je
aam
lock
sbbb
notl
stos
loopne
addr16
xchg
xor
lret
sarb
xor
sbb
sahf
sub
sbb
push
cmp
push
jno
cld
xor
outsl
rol
ret
push
les
arpl
push
xor
mov
fistpl
imul
lcall
inc
pop
pop
mov
or
mov
xchg
mov
lods
out
int3
imul
adc
fs
or
lret
jbe
add
aaa
outsl
add
mov
aaa
xchg
mov
inc
lods
test
and
mov
push
inc
cli
mov
and
inc
mov
cmpsb
push
pushf
hlt
or
mov
aam
cmp
dec
mov
test
push
and
xchg
pusha
nopl
sub
fcom
pop
je
roll
nop
jecxz
cltd
clc
jo
sbb
add
or
in
xor
dec
daa
inc
adc
call
pop
and
dec
jae
mov
sub
xor
sub
or
xor
sbb
test
push
xchg
imul
aam
push
jnp
fcmovbe
mov
into
adc
xor
lret
mov
pop
mov
cmpsb
fs
xor
pop
sbb
movzwl
pop
pop
lret
jecxz
les
pop
xchg
loopne
in
xor
cwtl
movsl
mov
jb
cld
mov
pop
and
lret
jns
add
mov
jg
pop
stos
dec
repnz
fstpt
daa
fadds
ljmp
jo
out
xor
lret
push
insb
out
jbe
fcompp
arpl
nop
push
cltd
dec
sub
gs
add
xchg
lods
dec
sub
pop
enter
movl
hlt
sbb
mov
adc
inc
gs
addr16
lods
call
movsl
adc
cltd
jns
jmp
pop
flds
jo
cmp
pop
divps
lcall
imul
pop
fs
push
dec
std
loope
mov
ja
fdivrs
cmp
jae
arpl
sub
inc
popa
mov
mov
xor
or
test
je
sub
cmp
data16
xor
pop
push
arpl
lret
and
and
mov
stos
rolb
add
xor
xor
adc
xor
addr16
hlt
add
xchg
test
leave
pushf
sub
mov
mov
pusha
pop
movl
or
pop
sbb
test
in
jno
aad
push
sbb
xlat
jl
mov
and
test
ret
cmp
addr16
ljmp
aad
and
fsubs
setnp
sub
mov
movsl
mov
ret
aaa
mov
fnsave
xor
dec
enter
sahf
ret
mov
mov
mov
jns
or
dec
jno
push
xchg
lock
outsb
leave
stos
out
inc
stos
mov
sbb
outsl
pop
adc
setle
mov
addl
mov
sbb
outsl
int3
jecxz
dec
cmp
negl
xor
das
icebp
in
pop
inc
jne
repnz
xchg
popf
pop
fildll
ja
dec
push
rclb
scas
add
in
in
into
outsl
xchg
sbb
ror
cmp
sti
fistpl
push
popa
arpl
iret
ss
xor
roll
or
test
cs
dec
lea
fcmovnbe
xchg
cmp
cli
pop
mov
testb
xchg
sub
cmpl
mov
sub
or
rcrl
jbe
pop
in
mov
popa
dec
loope
xor
in
aad
sbbb
mov
jp
adc
sahf
out
repz
jb
xor
sti
xchg
or
and
repz
cli
xchg
push
daa
popf
call
adc
fldl2t
pop
mov
jns
mov
mov
mov
mov
mov
bnd
jl
test
repnz
xor
xchg
repz
xchg
xor
mov
das
es
adc
push
clc
ret
adc
mov
mov
push
fstpl
xor
sbb
push
lods
add
cmp
pushf
cs
push
cmp
or
daa
in
pushf
js
ds
sbb
imul
loop
xor
add
jmp
dec
xchg
scas
pop
cmp
popf
fnstcw
sub
push
cmp
hlt
cmp
lret
mov
iret
stos
mov
adc
xchg
sub
push
push
or
dec
aas
and
push
mov
pushf
lcall
jo
ja
sbb
adc
rol
mov
and
ja
fdivrs
hlt
mov
out
in
pusha
jmp
cld
jle
cmpsb
xor
push
pop
lret
out
adc
push
xor
xor
and
or
mov
repz
rcrl
inc
test
aaa
rorb
loope
shlb
xchg
sub
lods
incb
sbb
add
stos
inc
xchg
cld
mov
mov
adc
add
ss
xchg
cmp
mov
stc
or
cmp
test
clc
adc
jo
xchg
faddl
jecxz
iret
loop
enter
xchg
fs
call
leave
jg
dec
pop
inc
hlt
cmc
xchg
or
xor
sti
inc
inc
xchg
adc
in
mov
sahf
mov
nop
xchg
mov
push
mov
fstpl
imul
push
pop
mov
hlt
pop
call
incb
lock
dec
dec
fwait
pop
sahf
push
pop
rolb
or
scas
sub
sbb
cs
jecxz
push
jb
sbb
push
cwtl
ss
adc
cmp
fbstp
out
mov
insb
insl
lahf
pop
mov
sub
arpl
daa
mov
ret
mov
divb
lahf
loop
xlat
ds
pop
or
adc
pop
mov
cmp
cli
bound
cmp
mov
mov
stc
outsl
ja
xor
mov
int
insb
and
dec
sbb
std
movsl
dec
dec
shll
in
sub
cs
cmp
mov
push
mov
xchg
lods
arpl
sarb
dec
out
mov
ret
fsubrl
jns
sbb
jbe
push
call
test
mov
add
frstor
xlat
daa
lds
test
nop
dec
mov
push
or
inc
mov
add
call
mov
dec
insl
mulb
mov
xchg
xor
iret
js
pop
nop
mov
orl
and
loopne
in
cmp
mov
shll
add
jb
idiv
fimull
fsubr
filds
inc
push
addb
test
fwait
movsb
sub
ds
popf
jle
icebp
out
ljmp
into
pop
jecxz
data16
xor
hlt
mov
ficoms
mov
clc
mov
out
loopne
jecxz
bound
pop
ret
dec
jb
icebp
sbb
pop
xor
insb
cwtl
and
fs
adc
xchg
mov
and
add
xchg
inc
xchg
cmp
rcrl
jecxz
and
sub
jbe
iret
int3
lods
shl
sbb
cli
ja
ja
mov
cmc
pop
movsb
push
pop
fisubs
lret
xchg
jno
xchg
and
out
dec
and
popf
stos
dec
fwait
test
sub
int
xlat
xchg
test
dec
and
fcmovnbe
js
jge
aam
pop
dec
lcall
push
fimull
xor
pop
std
xchg
cmp
repnz
shl
lret
loopne
jecxz
inc
or
xor
dec
cmc
or
icebp
jp
xchg
sub
cmc
cmp
and
in
rcrb
push
push
movsl
lret
dec
hlt
push
loop
push
les
imul
arpl
fwait
and
mov
icebp
and
sahf
mov
pop
inc
jmp
and
inc
cmp
rcl
push
jo
cmpl
push
test
or
sbb
into
sbb
int3
jns
mov
dec
dec
insl
push
nop
pushf
aam
aas
dec
imul
mov
mov
test
nop
inc
push
out
adc
jg
outsb
mov
sub
dec
into
cltd
push
push
cld
jb
in
xor
rcr
or
push
sub
test
imul
cmpb
mov
pop
repnz
or
push
cli
mov
dec
lods
in
mov
andl
js
imul
lods
xchg
jle
or
and
mov
jae
test
imul
dec
cmc
ljmp
mov
pop
mov
outsl
pop
jg
iret
inc
out
das
loopne
mov
int3
or
ja
test
mov
mov
jb
jecxz
cmp
pop
and
adc
mov
jg
pushf
aad
in
push
pop
dec
int3
scas
adc
cmpsb
sarb
outsl
inc
pop
xchg
xor
mull
fcomps
jmp
int3
ljmp
jle
jnp
lock
jns
cmc
cwtl
jge
or
loopne
ret
in
mov
mov
dec
fstps
jge
push
sub
sub
add
loope
or
mov
jl
loope
pop
pop
sbb
jl
inc
cltd
mov
iret
sti
mov
stos
xchg
lods
in
imul
ljmp
repnz
lods
outsl
mov
mov
xchg
mov
int3
test
leave
sbb
xor
lahf
mov
test
pop
lret
cmp
loop
jno
mov
addl
repz
int
roll
icebp
sahf
imulb
cmp
pop
xor
mov
sbb
xchg
push
mov
fdivrs
aad
lea
lods
repnz
add
adc
dec
mov
mov
push
xchg
jo
adc
sub
aas
clc
pop
pop
loopne
cltd
ds
inc
test
add
sbb
xchg
cwtl
out
pushf
xchg
dec
jmp
xchg
pop
cmp
imul
push
dec
jnp
loop
test
mov
data16
dec
test
sarb
cltd
pop
out
and
inc
jo
imul
es
out
scas
adc
nop
or
push
lea
pushf
sbbb
es
mov
lret
aaa
jle
xchg
pop
rcr
fcom
clc
push
lods
cmp
mov
jno
std
xchg
cli
xor
das
add
jmp
jle
dec
jl
mov
adc
sub
push
sub
jl
pop
or
mov
and
inc
loope
xchg
data16
out
insb
mov
gs
cltd
mulb
or
cmpsl
add
xchg
jns
aad
mov
cwtl
lock
pusha
in
aaa
lock
mov
loop
scas
and
fs
in
xor
mov
imul
add
sub
jae
shl
hlt
dec
lret
dec
js
pop
sub
gs
jp
xor
mov
jmp
inc
jo
adc
add
sbb
jg
int
aas
js
in
xchg
icebp
mov
mov
dec
sbb
inc
and
gs
pop
nop
mov
mov
sbb
push
mov
xrelease
std
or
mov
pop
imul
ljmp
lock
out
xor
test
add
or
jecxz
fimuls
sbb
mov
inc
sub
enter
call
fdivrs
push
jo
push
jbe
pop
sbb
cld
loop
pop
ja
push
inc
sbb
in
lcall
inc
add
xor
add
xor
test
scas
or
dec
dec
xchg
lret
push
addr16
mov
push
fdivr
sbb
fisubl
sub
adc
aaa
imul
push
sbb
lods
lea
inc
ljmp
sub
out
push
inc
movsl
cld
xchg
pop
sub
mov
in
std
or
data16
lds
and
cwtl
cltd
icebp
add
mov
dec
insb
mov
lahf
into
mov
leave
or
sahf
or
addr16
loope
cmpb
adc
loopne
ret
xor
and
repnz
sti
push
int
repz
push
pop
adc
and
add
dec
sub
sbb
rolb
loope
outsl
dec
sub
lret
jb
sarl
jne
sbb
xrelease
ss
mov
cmc
daa
push
jg
mov
cwtl
les
stos
fimull
ret
and
pushl
cmp
arpl
int
call
in
dec
icebp
or
adc
sub
dec
add
mov
pop
imul
jnp
insl
adc
mov
xchg
xor
lcall
and
dec
dec
loope
jecxz
cmp
xchg
cmp
ret
lea
fstps
pop
push
insl
pop
dec
mov
loopne
std
pop
push
mov
and
xchg
jg
cmp
movsl
mov
xor
mov
ss
fcmovbe
lods
insl
sbb
jecxz
mov
xor
xor
les
imul
data16
mov
and
rcll
popa
and
test
shll
aaa
cmpsb
pushf
adc
jo
fnstcw
adc
xchg
fiaddl
or
xchg
ljmp
pop
pop
add
inc
xchg
jbe
jge
outsl
push
push
out
decl
ffree
xchg
lods
sbb
out
push
mov
cmp
cli
xchg
add
sbb
fdivp
dec
ret
addb
js
dec
push
ret
sub
adc
add
push
xor
dec
mov
sbb
sarl
mov
add
incb
stos
sti
mov
inc
out
das
cmpsb
out
xchg
mov
loope
jp
jmp
sub
adc
jo
dec
add
cmp
jno
lods
aad
pop
adc
je
js
sub
stos
sbb
clc
dec
sbb
cmp
push
xchg
push
leave
sti
adc
mov
clc
nop
pop
mov
fisubs
inc
cmp
shlb
movsb
notb
cmp
inc
inc
gs
in
in
push
sub
mov
pop
dec
ljmp
jmp
add
adc
test
aad
sub
xchg
jge
cmp
mov
in
das
lock
cmpsl
or
or
addr16
shll
push
mov
aad
xor
jb
or
push
sub
dec
std
push
cs
dec
sti
jmp
inc
ja
lea
sarl
xchg
fstpt
stos
cmp
fmull
hlt
mov
in
fldenv
or
iret
cmc
std
cwtl
sti
jns
adc
cmpsl
into
into
bound
jecxz
daa
aam
test
jg
test
jae
inc
movsb
mov
test
iret
leave
add
in
cwtl
push
stc
push
movsb
mov
push
xchg
orb
ljmp
popa
add
push
mov
shrl
dec
data16
lret
lock
add
lods
mov
fsubr
scas
jl
aad
cmc
enter
push
test
sbb
jmp
cli
js
mov
xlat
lods
mov
add
fs
lcall
sbb
cmp
jo
xlat
mov
pop
out
ret
inc
in
pop
cmc
icebp
clc
adc
movsb
dec
scas
and
int
pshufw
or
pop
xchg
cmp
movsb
cmp
bound
cmp
mov
xor
mov
or
mov
shl
rcrl
shlb
mov
roll
xchg
aaa
sub
scas
incl
pop
lret
arpl
jge
dec
test
test
pop
into
fistpll
and
scas
dec
pop
jbe
shrd
dec
test
aaa
es
jb
push
and
mov
fistpl
lods
mov
push
push
and
fdivs
btc
shlb
fimuls
loop
jo
fistl
xchg
cwtl
adc
xchg
loopne
pop
pop
jbe
mov
cmp
fadd
push
inc
inc
mov
pop
xchg
das
std
mov
and
mov
push
loope
sub
pop
stc
fcomps
mov
jnp
in
or
in
dec
insl
jmp
push
adc
mov
lss
mov
insb
orl
adc
daa
les
fistl
cmpsb
int3
push
lods
dec
push
mov
in
jns
fisubs
mov
jbe
xchg
outsb
xchg
and
inc
add
cmp
add
add
sahf
and
sub
mov
test
leave
repz
dec
insb
test
lahf
std
in
and
and
loopne
out
repz
aaa
push
mov
mov
insl
add
imul
out
stos
enter
cmovnp
xchg
iret
cmp
jg
mov
and
dec
adc
sub
and
cmp
jbe
cmp
jge
mov
into
mov
or
jo
xchg
mov
scas
mov
jae
jl
cltd
dec
subb
jo
xchg
jb
fs
repz
lock
dec
adc
mov
pop
dec
jb
xor
lods
mov
sbb
adc
adc
insl
mov
sbbl
adc
fisubl
imul
repz
sahf
push
xchg
push
lods
scas
or
pop
adc
jle
sbb
sub
pusha
and
clc
jmp
pop
lret
aaa
pop
mov
sub
mov
jns
push
insl
call
nop
jbe
inc
lea
inc
push
iret
inc
lods
or
fidivl
sbbb
sbb
lods
lahf
sbb
iret
mov
test
or
repz
pusha
nop
out
mov
adc
cmp
ss
xchg
mov
and
xor
mov
out
fbld
push
adc
pop
jle
xor
fwait
int3
stos
imul
insb
jae
sub
dec
fs
scas
jb
loope
inc
push
mov
je
inc
loop
sub
fwait
lcall
es
mov
pop
daa
in
lcall
mov
dec
inc
aaa
xlat
sbb
stos
les
cmp
mov
adc
dec
pop
jo
in
ret
bound
aam
or
xchg
bound
pop
push
int
xor
inc
sbb
sbb
repnz
or
lods
and
movsb
push
cmpsb
mov
push
jle
insl
pop
aad
fdivl
fucomp
mov
ret
adc
mov
inc
jmp
gs
mov
das
imul
jno
cmp
jg
fs
in
inc
std
push
mov
aam
xor
dec
ds
cmp
orl
cltd
xchg
addr16
fidivs
sbb
scas
jp
daa
and
lahf
rcpps
scas
jmp
push
adc
push
sbb
lds
aaa
inc
and
outsb
xor
fs
push
int
loop
pop
mov
sbb
ror
jle
in
imul
ja
jnp,pn
arpl
lds
lret
inc
stos
mov
xorb
jno
xchg
mov
sbb
adc
xchg
mov
adc
xchg
pop
dec
and
push
or
xor
lea
xor
mov
popf
xor
mov
sub
je
repnz
pushf
xorl
jmp
mov
inc
in
int3
inc
ljmp
or
lods
mov
repnz
das
js
add
mov
push
shll
fcmovu
dec
and
cwtl
mov
cmp
or
jo
andl
insl
inc
adc
icebp
rol
mov
daa
mov
pop
mov
dec
mov
mov
sub
fldenv
mov
inc
mov
or
xorl
ret
fnsave
xor
les
xor
xor
push
outsb
and
ljmp
ljmp
sarl
cmpl
fisubrs
adc
cs
vpmacsdd
jg
lret
adc
xchg
mov
fnsave
out
jl
loop
loope
inc
aad
xchg
push
pop
xchg
inc
pop
mov
ss
cld
mov
xor
jae
mov
pop
push
sub
push
frstpm(287
fiaddl
dec
cmp
subl
test
sbb
fst
pop
call
loopne
sbb
in
fs
lret
cmp
xchg
fdivl
mov
and
jmp
adc
movsb
movb
cmpsb
dec
or
hlt
dec
mov
or
xor
cmp
jo
jl
ja
sbb
fs
mov
sub
leavew
lret
xchg
jecxz
adc
cld
xor
test
adc
xor
ljmp
aas
push
mov
mov
mov
out
or
and
ljmp
jno
int
or
dec
inc
inc
fcoms
sbb
aas
and
adc
jecxz
pop
in
cmp
cmp
xchg
dec
pmullw
cmp
fwait
and
xchg
lret
out
mov
roll
jmp
mov
jb
sbb
aam
movb
jo
enter
insl
xor
cwtl
lcall
insb
fsub
sub
inc
xchg
sti
push
mov
sub
insb
ljmp
lock
mov
jle
adc
mov
bound
xlat
jmp
out
mov
sub
sub
pop
and
jle
clc
mov
inc
jne
jmp
push
mov
adc
in
ss
ret
and
sub
cli
cs
sbb
cmp
mov
add
jns
or
xlat
enter
popa
idivb
cmp
aad
lods
fldt
push
dec
mov
shll
inc
fwait
xchg
xchg
ss
lods
sahf
push
cmp
rclb
mov
stc
sbb
xchg
xchg
mov
scas
push
fwait
add
fs
rcll
loop
mov
insl
xor
dec
andl
lock
icebp
fsts
aas
loop
stos
int
pop
inc
lock
xor
sub
and
jne
add
sarb
mov
mov
mov
adc
push
divb
pop
arpl
jge
push
jo
icebp
sbb
ljmp
std
mov
mov
cmpsb
lahf
aas
ret
add
out
iret
push
pop
push
ljmp
popf
data16
xchg
jp
dec
and
dec
mov
add
push
mov
cmpsb
fsubs
js
or
pop
jnp
and
push
es
xchg
add
sbb
dec
or
aas
dec
or
inc
ljmp
call
mov
aas
std
cmpsb
rorl
dec
xor
in
out
adc
stc
sub
cwtl
repz
iret
dec
dec
sub
mov
inc
fnop
push
ljmp
inc
fisttpll
or
into
add
mov
out
jp
ljmp
sbb
cmc
ds
xor
inc
mov
mov
scas
mov
cmc
stc
dec
xor
clc
cltd
jmp
hlt
mov
xor
sub
notb
mov
mov
in
cltd
test
les
js
repz
insb
and
int
fdivrs
lret
test
inc
sbb
ret
or
push
mov
and
mov
pop
pop
adc
js
inc
cltd
inc
and
cmp
ja
add
out
inc
add
std
adcb
jmp
js
mov
inc
pop
and
sbb
add
pop
iret
sub
add
xchg
outsl
sbbb
jbe
inc
xchg
sub
repnz
in
or
add
nop
sub
mov
in
xchg
push
popf
iret
lods
adc
roll
dec
push
fldenv
xor
es
adc
cmp
jp
xchg
sub
das
js
pop
int
outsl
int3
cmp
nop
xchg
je
shrl
adc
addb
dec
bound
mov
lret
int3
push
in
push
fmulp
mov
fcom
sub
push
mov
iret
in
stos
scas
in
outsb
leave
xchg
mov
stos
sbb
mov
clc
push
imulb
shll
dec
xchg
and
jg
mov
das
mov
xchg
sbb
mov
stos
rclb
cmp
cmp
adc
stc
mov
jg
arpl
sub
sbb
das
lods
mov
hlt
aas
andb
fwait
test
mov
movsl
push
adc
push
movsb
jne
bound
pop
mov
inc
out
iret
int3
mov
ss
sti
dec
ljmp
fistps
mov
xchg
decl
adc
xchg
cs
ret
mov
push
mov
cli
dec
lahf
mov
xlat
xor
dec
scas
push
and
addr16
pusha
sub
adc
fisubrs
out
add
invd
shll
inc
cli
add
incl
mov
lods
ret
jb
je
mov
outsb
fldenv
mov
mov
and
test
data16
jo
mov
add
mov
adc
stos
fstpl
fdivrl
cltd
stos
pop
push
mov
test
jecxz
push
push
fldenv
xor
scas
movsb
ret
xorl
jbe
cld
mov
mov
jl
lods
adc
ljmp
and
xchg
jbe
xor
loopne
ret
pop
test
movsb
gs
mov
insb
push
mov
cmpb
ret
ss
push
mov
push
pop
mov
mov
pusha
mov
ss
das
loop
mov
jbe
outsb
fs
inc
cmp
fadd
cmp
fdivrl
outsl
rolb
sub
divl
push
arpl
mov
aad
push
js
lods
dec
in
sti
or
aaa
aaa
push
clc
jp
adc
cltd
aad
into
in
sarl
jno,pt
mov
ds
adc
repnz
mov
imul
cmpb
ljmp
add
inc
mov
xor
push
in
push
push
pop
xor
stos
shll
adc
jnp
mov
mov
subl
aam
mov
mov
aad
inc
insl
les
xchg
mov
lods
js
or
dec
and
add
cmpsb
jle
mov
repz
repz
inc
inc
dec
in
adc
bound
adc
add
cli
dec
xor
and
mov
dec
sub
add
adc
dec
lods
addl
movsb
ljmp
push
popf
in
imul
jle
xor
sub
pop
mov
das
ret
jno
add
jae
mov
jns
xchg
icebp
and
ljmp
cmp
mov
pop
sbb
lahf
pusha
lahf
pop
xchg
inc
nop
stc
sub
mov
push
mov
add
clc
jno
xlat
lret
int3
xchg
mov
test
mov
mov
add
sub
outsl
and
inc
in
mov
mov
or
sub
jne
xchg
dec
push
or
std
pop
in
adc
in
les
rorl
adc
sbb
rcrb
xor
mov
je
jb
movsl
insb
sbb
addb
cmpsb
push
nop
xchg
imul
jl
jecxz
and
pop
aaa
repz
ret
xchg
imul
push
sti
push
cmp
mov
nop
and
gs
pop
aas
mov
cmpsl
xchg
fcomi
rorl
mov
mov
clc
push
dec
add
sub
mov
in
jae
xor
movl
or
jge
dec
jbe
roll
shrl
cmpb
adc
dec
call
adc
insl
cmpsb
scas
iret
sbb
fwait
lods
inc
out
push
jae
cld
ret
popa
jnp
scas
gs
fidivl
stos
daa
mov
movsb
cmc
jecxz
xchg
scas
cld
iret
lock
dec
test
xchg
mov
out
sub
les
fs
dec
shlb
and
inc
push
fs
lods
in
dec
loope
inc
jno
insb
imul
mov
cli
push
jns
lods
iret
sub
pop
xchg
das
bound
dec
push
repz
lahf
shlb
xor
and
and
loop
and
movsb
popa
int
pop
pop
jno
adc
sarl
idiv
lods
loopne
mov
sub
dec
mov
push
mov
pop
sbb
jo
push
push
cmp
mov
jnp
fwait
lds
cld
xchg
mov
xor
outsb
repnz
xor
test
xchg
jmp
mov
shll
pop
scas
popa
push
fmull
shlb
add
lahf
cld
push
ss
jp
fdivrs
pop
add
test
out
xchg
adc
lds
dec
pop
xor
hlt
clc
insb
push
jnp
cmp
add
pop
fs
mov
jle
cmp
pop
pop
and
lret
push
pop
mov
pop
sbb
fisubl
in
pop
dec
mov
ja
sub
arpl
mov
add
adc
sub
sbb
aad
sbb
mov
adc
xchg
mov
add
aas
in
cmpsl
idivl
jge
jns
cvtdq2ps
jbe
insb
into
mov
shll
jbe
das
shll
xchg
lcall
mov
out
call
sub
mov
inc
int
sbb
add
mov
in
out
pop
and
pop
dec
cmpsl
cltd
std
hlt
xor
ss
insl
cmp
js
fcoml
iret
lea
dec
cmp
adc
pushw
repnz
pop
jmp
push
adc
pushf
jmp
insb
push
mov
sbb
pop
scas
lods
roll
push
mov
cs
push
and
or
jno
test
mov
cwtl
mov
into
inc
leave
repz
ret
add
push
pop
push
xchg
jnp
sub
hlt
shll
shrb
in
out
stc
dec
mov
mov
notb
push
ja
push
xchg
mov
sbb
mov
out
sbb
xor
or
pop
xor
xor
dec
in
xchg
inc
outsb
lods
xor
xchg
out
mov
dec
xor
repnz
mov
sub
out
pop
mov
nop
into
sub
xor
loopne
jbe
xlat
add
leave
xchg
movsb
sbb
icebp
xchg
add
mull
int
imull
lods
push
jo
hlt
mov
pop
fsts
and
fcomps
mov
sbb
cmpsl
jmp
adc
adc
punpcklwd
inc
jnp
lds
adc
outsb
sub
subb
adc
push
jne
mov
icebp
jle
pop
dec
test
lods
rcll
imul
scas
aas
mov
test
sub
cs
mov
cmp
aas
stc
cs
outsb
in
es
fs
ret
sub
push
xor
lods
push
inc
lret
test
jle
ss
mov
fbld
mov
outsw
dec
fldcw
out
fidivrs
xchg
push
sub
in
in
nop
pop
ret
push
add
lea
push
cmp
ja
push
out
cld
add
adc
mov
nop
cltd
pushf
adc
adc
lahf
xor
sbb
fisttpll
out
pop
mov
lret
adc
ds
cmp
shrl
shl
xchg
push
mov
jb
cmc
xchg
mov
jp
popa
fidivs
and
rol
xchg
pop
lret
stos
mov
sub
mov
mov
sbb
in
sub
cltd
cmc
and
fnstsw
sub
jae
repnz
icebp
stos
ret
arpl
cmp
hlt
sbbl
mov
add
inc
in
ljmp
jl
lods
mov
xor
jl
mov
gs
mov
and
loope
popf
fwait
mov
dec
mov
or
cmpsb
insb
aaa
popf
fwait
andps
xchg
cmpsl
sbb
scas
push
cmc
or
mov
mov
mov
ss
das
mov
subl
mov
iret
jae
loopne
cmp
dec
or
sahf
fs
push
sbb
mov
sahf
je
add
mov
test
mov
cltd
and
loop
insl
inc
add
push
inc
pushf
loopne
push
cli
mov
pop
mov
dec
inc
test
movsl
scas
xor
or
push
push
adc
cmp
in
in
xchg
shlb
addr16
test
mov
sbb
mov
sbb
dec
pop
sbbb
aaa
repz
push
inc
mov
push
cmp
pop
add
mov
ret
sbb
xchg
xchg
loop
loopne
sub
mov
or
jg
lret
push
xchg
cld
mov
shll
add
xchg
adc
lods
jnp
xchg
dec
adc
insb
sahf
cmp
cmpsb
pop
push
lret
jg
in
sbb
dec
push
dec
data16
mov
shlb
rcl
push
lret
ss
mov
lods
xor
pop
mov
sub
les
daa
cmpsb
pop
sbb
jo
jbe
sub
sbb
sub
jecxz
lcall
push
pop
cltd
pop
daa
imull
nop
sbb
mov
out
cmpsb
imul
adc
dec
fildll
add
daa
fistl
mov
pushf
jb
cld
mov
call
lahf
iret
movsl
cli
adc
or
dec
std
sbb
and
add
or
les
adc
jo
mov
push
sbb
ss
mov
sub
xchg
sub
sub
jge
mov
pop
dec
mov
imul
popa
popa
jge
push
mov
add
mov
ret
cmp
push
into
aam
aas
xor
lcall
adc
push
testl
adc
xor
pop
cld
mov
pop
out
xchg
xor
cmp
push
fs
or
shrb
pop
mov
xchg
mov
mov
cmp
sbb
sbb
mov
mov
out
in
out
sub
xchg
push
out
fnstenv
adc
gs
lods
cs
and
mov
xchg
mov
push
push
jp
rorl
ljmp
test
mov
inc
mov
adc
out
push
or
cmpsl
cwtl
in
and
xchg
mov
xchg
mov
mov
pop
cmc
imul
pop
outsl
jecxz
adc
mov
dec
scas
lds
pop
inc
je
ljmp
xor
pop
stos
inc
scas
jns
push
jbe
cli
in
sbb
cltd
pop
enter
or
shll
stos
pop
test
jge
push
xor
loope
adc
pop
pop
sbb
addr16
mov
or
xor
lea
push
es
popl
mov
mov
jge
xchg
mov
sahf
xor
xchg
xor
aam
jmp
xchg
into
shlb
pop
lcall
add
lcall
scas
into
xchg
push
cmp
andb
mov
aad
aam
xor
mov
xlat
dec
xchg
sbb
out
xor
sti
adc
push
inc
xchg
sub
mov
es
push
clc
clc
add
je
add
pop
clc
and
enter
dec
adc
fwait
in
js
add
xchg
jno
add
stc
mov
mov
sbb
inc
sbb
xor
cmp
je
mov
mov
movsl
popa
mov
jecxz
enter
fadds
mov
icebp
lods
sub
out
test
and
daa
xor
pop
xor
jg
divl
imul
and
and
subb
adc
pop
inc
rol
aas
enter
ljmp
lods
aam
xchg
sti
mov
sbb
ss
dec
into
fxch
insl
push
or
aaa
xor
cwtl
push
cwtl
or
cmpsl
rcrb
xor
cmp
xor
mov
hlt
movsl
push
mov
scas
xchg
dec
push
outsl
dec
nop
mov
pusha
cmpsb
pop
in
or
leave
dec
mov
je
jae
int3
jns
outsb
sub
ja
push
add
mov
pop
idiv
mov
mov
inc
data16
ja
aas
dec
stc
jo
cli
mov
jg
jne
xlat
arpl
sti
insl
jb
cmp
outsb
dec
adc
fcmove
cmp
xchg
pop
dec
pop
das
adc
jge
jl
xchg
jge
lcall
stc
xor
cs
fcompl
negb
pop
les
in
ja
and
or
pusha
jecxz
dec
cmpsl
test
orb
jmp
pop
stos
mov
xchg
push
std
adc
xchg
stos
push
or
divl
orb
mov
adc
in
push
push
mov
mov
cli
ljmp
cmp
xchg
xor
test
mov
fists
mov
mov
mov
in
ljmp
adc
mov
daa
cmpl
push
adc
out
mov
sti
mov
cld
in
repnz
shll
xor
push
popa
in
dec
pop
in
push
pop
or
shrb
jle
je
push
add
icebp
add
shlb
sub
mov
hlt
lret
mov
inc
jg
lret
sbb
adc
adc
and
cwtl
scas
xchg
sbb
jnp
fcoml
nop
xchg
push
mov
je
mov
stos
xor
and
repz
push
aam
lcall
push
pop
ja
jl
mov
in
fidivl
mov
xchg
push
lods
loope
rclb
sbb
jg
adc
lds
gs
data16
push
repnz
sbbl
adc
imul
rclb
mov
sub
sbb
call
adc
xor
xor
call
stc
pop
test
cmpsb
loopne
sbb
xor
push
cltd
inc
pop
lods
in
push
push
xchg
daa
lods
sbb
push
into
hlt
add
jb
dec
mov
sbb
mov
xchg
pop
cmp
xchg
or
push
push
loopne
fidivrs
clc
movsl
dec
daa
in
sub
push
push
scas
xchg
movsl
mov
jo,pn
out
add
jl
sahf
daa
addr16
pop
add
sbb
mov
rorl
roll
cmpb
xchg
sub
sub
sbb
dec
mov
call
sahf
push
hlt
mov
mov
popl
cmp
cmpsl
mov
addr16
lods
xchg
cmp
inc
add
fbld
std
nop
fsts
mov
push
xor
push
insl
pop
xchg
shrl
push
nop
adc
mov
mov
cwtl
stos
imul
test
fnstcw
sbb
lcall
jbe
push
dec
jae
bound
arpl
dec
arpl
push
enter
ja
testb
push
jle
sub
fmull
sarb
mov
sar
sub
mov
jecxz
inc
dec
mov
and
cmp
addr16
jbe
mov
into
and
jmp
roll
mov
mov
jbe
fcoms
outsb
cld
mov
int3
jge
jmp
out
je
int3
xchg
ja
lods
jmp
lahf
inc
jle
cmp
adc
dec
cltd
push
inc
fstl
and
incl
pop
or
inc
jnp
adc
mov
pusha
add
mov
inc
push
sbb
outsl
ficoms
fldl
mov
lock
and
pop
xor
das
es
idivb
xchg
test
mov
sbb
sbb
sub
out
cltd
aaa
movsl
ljmp
ror
lock
mov
mov
dec
pop
dec
jmp
dec
adc
inc
jo
jno
std
dec
es
daa
call
jp
sbbb
or
rorl
dec
pop
aam
pop
lcall
and
icebp
or
xchg
mov
or
testl
pop
mov
out
sub
popa
pop
test
out
fwait
imul
fdivr
shr
bound
dec
int
lods
lea
xlat
sahf
pop
push
xchg
mov
lods
mov
inc
dec
adc
cmpl
pusha
and
scas
cmp
mov
not
bound
fldenv
sub
lock
lcall
je
jnp
stos
jecxz
and
mov
inc
data16
arpl
and
ret
lcall
mov
add
jecxz
scas
insl
pop
daa
xchg
mov
pop
cltd
pushf
or
imul
pop
hlt
pusha
divl
sbb
lcall
xchg
repz
int
int
xchg
lcall
icebp
cmpsl
dec
inc
cmp
ss
fwait
test
or
mov
out
or
gs
ja
push
jle
in
pop
imul
mov
imul
mov
push
cmp
jle
fcompl
cmpsb
mov
add
dec
outsb
das
and
push
sub
cmpsl
or
pop
push
call
and
jae
aad
adc
push
sbb
lds
xchg
insb
mov
test
jg
scas
lsl
pop
xor
and
test
cmpsl
sbb
sub
dec
jne
movsl
xor
test
xchg
mov
and
mov
imull
pop
outsl
add
rep
inc
ljmp
xchg
repnz
mov
xchg
sbbl
adc
dec
and
jns
push
sbb
stos
add
and
jne
stc
adc
mov
fldenv
adc
sbb
into
jnp
fisttps
pop
fisttpll
adc
or
loopne
or
insb
mov
bound
gs
xor
mov
cmp
leave
push
sub
xchg
fisubrs
or
sbb
or
mov
out
mov
inc
cli
adc
aas
loopne
clc
push
xor
inc
sbb
arpl
fisubl
adc
out
enter
scas
or
shl
cmp
jle
nop
jbe
pushf
mov
popa
test
cmp
test
adc
mov
fsubrl
shll
mov
jae
lock
rorb
mov
inc
xchg
stc
push
das
push
inc
or
dec
div
pop
dec
hlt
aam
xchg
mov
mov
push
sub
sub
mull
xchg
or
rcl
sbb
test
mov
enter
adc
rorb
mov
mov
outsl
mov
inc
dec
inc
adc
imul
out
pusha
mov
push
out
jge
sbb
sbb
pusha
cmpsl
sbb
jnp
push
xor
outsl
pop
fadds
or
cmc
rolb
add
mov
xor
test
push
fs
mov
pusha
mov
out
cltd
adc
ss
and
or
jbe
push
rcll
mov
sbb
lahf
xlat
cltd
jno
adc
sub
shrl
sbb
xor
adc
push
xchg
adc
xchg
or
mov
or
mov
xchg
mov
cmp
mov
sbb
hlt
ljmp
cmpsl
cmp
jecxz
adc
clc
mov
ja
ror
and
stc
nop
outsb
add
mov
xchg
scas
lret
clc
inc
out
jne
inc
fnstcw
push
sub
gs
jo
shl
cmp
popf
mov
nop
sub
push
cmp
dec
pop
sbb
adc
cmp
and
pinsrw
xchg
adc
enter
jns
shlb
imul
dec
adcl
push
lahf
fmuls
repnz
nop
dec
mov
push
popa
sbb
testl
bound
daa
xchg
fisubrl
mov
stc
xor
rclb
cmpsb
je
or
popf
mov
mov
mov
std
psubb
les
dec
mov
jl
aas
pop
inc
dec
cmp
sti
call
outsl
sbb
lret
ret
loopne
clc
jl
mov
in
js
push
pop
loopne
lret
pop
notl
sub
inc
cmp
cmp
int
and
push
sub
adc
xor
arpl
mov
scas
pushf
add
iret
adc
and
lds
dec
pusha
push
out
mulb
sbb
js
mov
fldt
xor
jns
lock
add
loope
jl
pop
inc
adc
movsb
inc
insl
out
lret
daa
iret
cmc
movsl
pop
in
js
jns
inc
jmp
and
insb
out
fstp
push
rcll
in
fyl2xp1
xor
repz
jmp
pop
lcall
sub
adcl
inc
shr
sbb
outsb
das
std
fstpl
xor
loopne
les
test
inc
pop
push
or
stc
or
pop
xor
lcall
sbb
inc
sbb
js
push
push
pusha
lahf
fistps
insb
ja
dec
and
ret
stc
sub
adc
insl
clc
adc
add
aad
mov
inc
bnd
xchg
popf
cmp
mov
lods
out
out
es
mov
mov
call
adc
popf
pop
shl
icebp
pop
jecxz
mov
push
cmpl
mov
cld
xor
gs
aad
in
push
incl
mov
cmp
hlt
xlat
lahf
mov
xlat
push
std
test
lcall
imul
out
ss
pusha
push
in
aam
or
pop
add
inc
fs
stos
icebp
ret
dec
inc
mov
xchg
outsb
cld
push
std
rcr
dec
loopne
xchg
jo
xchg
mov
push
dec
pop
int3
jbe
pop
aas
dec
xor
out
sub
inc
imul
push
ljmp
xor
push
dec
das
xchg
mov
mov
jnp
icebp
jnp,pn
mull
pop
ret
dec
movl
cmp
inc
test
jmp
xor
jnp
jp
sub
push
pop
and
sti
mov
sarb
dec
jp
xor
xchg
sub
pop
xchg
nop
dec
push
imul
mov
rclb
add
push
mov
jmp
sbb
clc
std
scas
lods
clc
dec
adc
mov
jg
stos
ds
sahf
lods
movsl
mov
cmp
dec
xchg
lcall
mov
mov
and
and
aam
jle
imul
out
xchg
insl
sbb
push
mov
push
call
imul
push
fisttps
insl
mov
push
cs
inc
call
or
pop
mov
jp
xchg
inc
jnp
aas
jbe
sti
push
int
sub
mov
mov
dec
pop
call
mov
or
jbe
dec
adc
inc
int3
outsb
xor
pop
cwtl
shll
pop
dec
push
out
xchg
imul
jo
adc
cmc
fstpt
jmp
movl
lea
lea
lret
sub
aas
sbb
xchg
push
push
mov
inc
lret
cmp
jb
push
mov
stos
sbb
hlt
add
std
mov
lock
inc
pop
movsl
loop
addr16
cmp
stos
pop
mov
lret
cmp
push
adc
pop
mov
daa
ljmp
sbb
out
pushf
mov
scas
mov
push
imul
push
cwtl
mov
sbb
unpckhps
rcr
std
jno
xor
xor
shl
dec
mov
cltd
ret
lahf
test
push
popl
nop
addb
or
test
addr16
jge
in
lret
gs
add
sti
mov
lea
popf
jecxz
daa
cmp
test
push
jae
mov
jns
mov
mov
mov
aam
inc
lods
lea
xchg
mov
loope
dec
fistps
add
shl
mov
jge
popaw
dec
or
es
and
mov
in
and
mov
enter
dec
pop
rorb
lret
fcoml
leave
push
ret
jmp
pop
rcll
lcall
jne
out
jmp
into
inc
addl
cmpsb
gs
push
negb
cmp
adcl
test
push
daa
push
fsubrl
pop
mov
inc
enter
mov
pop
icebp
icebp
jnp
sub
outsl
ret
icebp
xchg
in
push
or
fnclex
or
fsubs
js
outsl
andl
mov
mov
jecxz
mov
add
movsl
scas
ret
push
loop
jae
insl
inc
cwtl
pop
sbb
cmpsb
and
inc
mov
mov
xchg
jbe
mov
inc
scas
hlt
jns
out
or
sbb
pop
repz
rolb
ja
pop
mov
nop
iret
rolb
lret
daa
dec
cwtl
fisttps
aad
sbb
cmp
mov
inc
dec
outsb
jle
xor
ds
clc
cli
pop
pop
fs
loop
or
jle
sub
pop
loopne
jo
inc
clc
sahf
pop
inc
std
xchg
mov
xor
mov
aas
mov
popf
mov
dec
fdiv
pop
repnz
lret
call
repz
ljmp
lret
xor
xor
cmpsb
iret
mov
ficompl
cmpsl
pop
lds
out
mov
or
jnp
test
leave
sbb
insl
sub
ljmp
shrb
aaa
mov
fists
fstp
mov
jp
jge
testb
or
xor
int3
dec
or
cmc
push
test
cmp
sub
repnz
les
ljmp
pop
leave
lea
out
movsl
push
subl
jmp
pushf
in
dec
xchg
decb
aas
inc
inc
pop
or
popf
aaa
fucomp
lret
mov
imul
adc
jns
adc
inc
add
imul
dec
jo
or
pop
cmp
stc
std
insb
xchg
orb
lahf
cmp
pop
cmpl
lahf
shll
daa
or
mov
dec
pop
es
popa
or
popf
mov
xor
push
lcall
mov
push
sbb
inc
iret
lods
mov
bound
ja
lock
inc
and
add
loopne
push
lret
or
adc
andl
add
adc
arpl
enter
and
pop
jge
pop
sahf
cmpsl
notb
xor
inc
cmp
loope
cmp
lds
int3
pop
cmp
push
add
or
or
test
pop
inc
xor
add
addl
lods
mov
mov
sahf
movsl
pop
cmpsb
rclb
xor
jmp
ret
rorb
mov
sbb
push
mov
je
xchg
or
repz
ret
push
outsb
call
imul
mov
hlt
and
lods
mov
imul
xor
lret
cmp
xchg
pop
jne
rorb
orl
hlt
fdiv
mov
mov
mov
push
mov
and
cmp
insb
push
in
pop
jl
mov
lahf
push
mov
fs
jl
pop
cwtl
jb
pop
sbb
mov
sti
in
mov
aaa
je
cmp
jl
xchg
mov
sub
mov
cmp
sub
cmp
mov
fsts
adc
jecxz
in
mov
push
lods
ja
jnp
add
push
adc
dec
mov
test
and
jnp
dec
xor
add
div
push
cmp
jecxz
pop
mov
insb
imul
xor
push
ljmp
sub
fsub
cli
arpl
sub
dec
adc
cwtl
pop
movsb
cmpl
cli
cmp
push
jmp
out
push
pop
int
mov
mov
xchg
es
cmpsb
jmp
jmp
in
enter
cmp
and
xchg
inc
ret
addb
dec
lock
cmpsb
sbb
clc
pop
jno
dec
cs
mov
ret
pop
aam
sub
aam
insl
fsts
jne
dec
cmp
subb
sbb
jo
and
pop
xor
es
sub
in
pop
pop
push
adc
cli
xchg
dec
pushl
test
xchg
repz
adc
int3
fisttps
add
or
sbb
int3
cmp
inc
loopne
inc
pop
xchg
cmc
dec
cmpsb
mov
sbb
loopne
cmp
or
xchg
jg
or
mov
xor
sbb
and
fisubl
adc
jbe
pop
cmp
push
loop
test
or
push
int3
jmp
lret
enter
jp
daa
in
nop
jg
jne
gs
push
cli
or
aas
pop
xchg
fsts
loop
jno
insl
xchg
and
cmp
xor
dec
dec
ss
stos
inc
jno
clc
cmp
gs
push
sbb
cmpl
je
jmp
adc
daa
mov
pop
and
jae
in
fdivrs
leave
sbb
ss
mov
call
push
jns
jnp
sahf
test
xor
and
sti
pop
mov
xchg
leave
dec
jnp
or
insb
dec
mov
adc
subl
pusha
mov
arpl
aam
bound
pop
fisttps
and
and
push
push
clc
mov
mov
ret
sbb
in
out
adc
push
jg
lods
inc
pop
jns
repz
inc
lcall
jo
add
xor
sbb
or
negl
pop
mov
and
mov
jnp
xchg
lock
ds
rcrb
add
mov
and
cmp
adc
into
popf
jecxz
push
int
mov
inc
and
jl
stc
mov
mov
sarl
rorl
addr16
adc
fdiv
jl
adc
mov
sbbl
xchg
inc
sbb
mov
xchg
lea
bound
dec
mov
jnp
and
fisubs
sbb
aam
arpl
sub
cld
lahf
sbb
mov
or
aad
lahf
mov
sbb
aaa
and
and
sbb
jmp
or
stos
in
jno
mov
sub
in
loop
andb
or
mov
or
adc
push
mov
xchg
dec
mov
push
cmp
mov
adc
dec
push
sbb
xchg
inc
sbb
sub
sub
popa
popa
xor
nop
mov
scas
aas
aad
pop
mov
arpl
test
loop
sbbb
aam
xor
std
dec
dec
aas
loope
xlat
jmp
rorl
pop
jbe
push
and
leave
rcll
lret
dec
lahf
fbld
inc
xorl
cltd
xor
mov
xchg
stos
int
dec
sub
mov
add
and
mov
pop
aaa
dec
mov
cmp
add
xor
sbb
mov
xor
xchg
add
cmc
mov
cmp
mov
stc
adc
xchg
and
addb
cmp
icebp
or
je
daa
std
loopne
xchg
pop
lods
xchg
push
adc
xor
ljmp
mov
mov
xor
rol
xor
cmc
adc
inc
cmpsl
pop
inc
adc
test
lret
shl
inc
xor
lock
sbb
sbb
pusha
pop
push
test
cli
push
pop
cli
sar
pop
xor
jge
cld
rorb
cwtl
mov
movsb
mov
mov
dec
fwait
in
dec
xlat
icebp
xor
nop
call
xor
xor
mov
xchg
push
lahf
loope
pop
stos
pop
xchg
adc
xchg
pop
adc
add
notb
or
pop
xor
sbb
out
jge
or
inc
adc
rorb
cwtl
sti
aam
pop
xchg
jp
pusha
lahf
xchg
pop
leave
je
es
lret
lcall
cmp
mov
into
les
clc
lods
mov
cmp
sti
int3
mov
sub
loope
pop
ret
test
adc
cltd
xchg
movsb
push
dec
sbb
pusha
sbb
cmp
cld
mov
and
mov
bound
inc
shr
inc
aaa
cmp
gs
pop
adc
rolb
mov
imul
pop
lret
ret
sbb
sbb
outsl
cmp
aam
scas
icebp
sbb
sar
jmp
adc
stos
pop
sbb
fs
int3
fdivrs
orb
dec
rcrb
andl
js
mov
inc
int
adc
sub
pop
outsl
xor
or
clc
sub
orl
stos
cmc
imul
rorb
negb
cmp
sbb
sub
cmc
add
loope
inc
dec
test
adc
shrl
jno
cmp
pusha
lea
push
bound
mov
ret
dec
xchg
or
inc
jecxz
push
dec
aad
rclb
mov
push
pop
xchg
xor
or
das
roll
je
in
mov
shll
mov
mov
dec
jecxz
add
ljmp
js
mov
xchg
push
cmp
scas
pop
test
negb
sub
mov
rclb
jns
stos
mov
insl
sbb
out
inc
mov
sahf
sbb
sbb
mov
movsb
in
mov
or
and
xor
add
mov
dec
clc
sub
push
enter
jbe
mov
push
rclb
pop
add
cmp
lock
lods
mov
or
daa
cmc
add
sbb
fucomi
mov
cmpsb
lea
gs
and
mov
aaa
add
add
sarb
aad
shll
push
stc
mov
fwait
lret
mov
pop
push
imulb
xor
rorb
xchg
jg
shll
mov
push
cmp
dec
lret
stc
mov
cmp
std
cmp
inc
push
lods
js
and
sub
iret
jno
imul
inc
out
add
pop
addr16
add
ljmp
test
inc
cwtl
sahf
test
sub
adc
daa
movsl
adc
and
jb
xor
insb
mov
pop
test
inc
flds
xor
in
lock
sbb
loop
es
jmp
pop
jne
mov
js
jge
lea
lods
xor
test
repnz
pop
leave
inc
cmc
add
imul
or
cli
shlb
imulb
xor
testl
lea
cmpsb
movsb
out
xchg
fisubrs
lret
or
mov
adc
jb
int
into
mov
add
dec
lods
ret
dec
gs
cmpsl
mov
daa
cmpsb
aad
sub
or
fiadds
addr16
out
aas
arpl
pushf
lret
jmp
inc
retw
cwtl
jne
cli
iret
and
int
shlb
out
pop
outsl
inc
mov
shll
cmp
mov
mov
pusha
jp
icebp
adc
fdivrl
nop
push
sbb
and
xchg
push
cld
jns
clc
jns
pushf
hlt
enter
pushf
aaa
mov
aam
sarl
adc
test
jl
gs
repz
xchg
icebp
mov
addr16
pop
imul
iret
jne
test
orl
lret
shr
cltd
outsb
fnstenv
pusha
scas
outsb
mov
mov
sbb
xor
xlat
cwtl
mov
imul
pop
mov
insb
cltd
dec
jnp
push
ret
xchg
inc
mov
rorl
pop
addr16
mov
jmp
add
push
sar
sbb
jb
cltd
or
sbb
mov
clc
test
fistpll
or
inc
adc
xor
mov
cmp
pop
stc
test
loop
sbb
sbb
inc
sbb
cmpsl
aam
push
movsb
cltd
into
xchg
push
jle
outsb
daa
mov
lods
pop
mov
inc
outsl
mov
adc
sbbl
in
fcomp
pop
mov
pop
xchg
pushf
push
mov
adc
cs
pop
scas
or
cmp
imul
mov
push
xor
mov
push
push
sub
or
fsts
arpl
cmc
inc
jl
inc
mov
pop
pusha
shlb
adcb
jle
fmulp
push
or
filds
add
iret
outsl
xchg
push
sbb
mov
dec
or
add
movsl
inc
scas
fdivs
fisubrs
or
cmpsb
test
loopne
aaa
pop
orb
sarb
pop
dec
test
imul
out
sbb
jo
adc
jbe
int3
or
rorl
fisttps
cmp
adc
inc
or
cmp
stc
adc
popa
adc
mov
pop
mov
xchg
inc
adc
mov
mov
ss
das
enter
adc
enter
push
test
cmp
xor
sbb
push
xchg
fisubs
or
cmpsl
pop
cltd
push
sbb
add
xor
and
test
cmp
sbb
lret
fistpll
sub
loop
imul
test
dec
hlt
pusha
idivb
jl
xchg
andl
jge
inc
cmp
shl
xor
add
inc
inc
les
pop
cmc
add
dec
jecxz
pop
aaa
int3
add
ds
ss
sbb
cltd
inc
fwait
pop
pop
push
aam
lds
pusha
push
fldz
pop
stc
ljmp
sbb
lret
repnz
loope
cltd
lds
inc
xchg
dec
outsl
lret
push
scas
movsb
mov
cmp
and
sub
mov
mov
lds
dec
or
movsb
mov
cmp
and
xchg
inc
lret
mov
mov
jmp
add
add
addr16
stos
lock
rolb
bound
mov
push
stos
sub
test
dec
sbb
lds
push
push
mov
add
daa
jge
out
ljmp
pop
xchg
in
adc
pop
cs
cmpsl
leave
divb
mov
cmp
bound
xchg
stos
inc
loope
add
add
fidivs
mov
cmp
dec
jmp
stos
adc
push
jle
das
and
pop
cmpsl
push
xchg
push
mov
sarb
push
int
and
sti
or
hlt
imul
fcoml
mov
mov
stos
mov
mov
scas
imul
push
jo
mov
fdivrp
sbb
cmp
cmpsb
add
pop
scas
mov
mov
adc
mov
mov
cmp
add
imul
data16
test
outsl
add
add
cmc
shlb
fnstsw
inc
into
sbb
shlb
sub
js
mov
xchg
sbb
test
xchg
mov
mov
inc
stc
lds
dec
add
cli
xchg
and
stc
push
sub
shlb
pop
insl
dec
mov
lock
js
cmc
mov
enter
push
pop
jbe
push
jmp
jb
aas
cltd
mov
adc
push
push
jb
int
pop
je
adc
xchg
cmp
xchg
dec
mov
insb
lea
push
sbb
insb
nop
add
lods
adc
ljmp
mov
les
pusha
cmp
arpl
clc
sahf
loopne
mov
outsb
ss
inc
pop
pop
mov
jno
int
xor
jbe
icebp
stos
jae
cwtl
xorb
movsb
stc
mov
xor
mov
clc
push
das
push
clc
dec
add
jg
jp
roll
xchg
or
cmp
mov
pop
xchg
ss
stc
ljmp
fwait
cld
stos
push
mov
iret
scas
add
pop
adc
cmp
cli
negl
push
std
xchg
ret
sub
fdivl
test
ss
inc
insb
add
mov
stc
mov
mov
scas
test
push
mov
loope
sahf
ss
repz
add
sub
mov
push
pop
pop
cmp
jecxz
inc
cmp
mov
jecxz
adc
lock
enter
notb
adc
pop
fsubl
rclb
repnz
cwtl
stc
out
int
mov
sub
in
daa
pop
jecxz
aaa
or
mov
enter
int
scas
mov
xchg
jmp
push
mov
mov
aam
test
dec
jbe
test
aas
or
nop
jo
jae
out
lret
xor
lds
test
shrb
xor
xor
fadd
push
ss
mov
jle,pt
aaa
sub
test
leave
xor
cmp
push
cmpb
fmull
arpl
dec
add
push
xor
mov
dec
inc
inc
jle
enter
and
gs
ficompl
cmpsb
push
fs
mov
sub
mov
mov
in
xchg
dec
shrl
mov
ja
pop
fistpll
insl
mov
inc
mov
mov
mov
stos
adc
mov
hlt
int3
jnp
iret
aad
cltd
xchg
enter
dec
sbb
sub
jecxz
pop
ss
arpl
push
lock
push
out
insl
clc
push
clc
iret
ret
in
mov
and
clc
sbb
enter
nop
add
jnp
jo
imul
xlat
out
pop
push
mov
pusha
sti
pop
jb
mov
out
sub
popf
insb
into
lret
jne
ljmp
sbb
dec
popf
mulb
out
fs
mov
pop
mov
inc
xor
test
push
fwait
mov
aam
sub
push
xor
jmp
enter
xchg
mov
aaa
inc
cmp
icebp
push
add
push
mov
push
mov
xor
repnz
adc
repz
adc
out
sub
dec
ljmp
cmpb
xchg
sub
or
mov
adc
inc
jns
push
out
aam
xchg
jae
rclb
xchg
leave
xchg
cltd
lock
fldz
xchg
xchg
addr16
dec
and
sub
xchg
push
movsl
es
inc
adc
fbld
fsts
mov
and
sbb
and
or
testl
in
mov
test
xor
pop
sub
gs
push
ja
or
cltd
loope
mov
clc
mov
push
add
jmp
rcrb
aas
inc
cmp
loop
mov
clc
pop
push
lret
adc
inc
cmp
push
leave
sub
fsubrp
hlt
push
fnstcw
cmp
ja,pn
and
popa
mov
push
xor
mov
repz
jo
in
dec
xor
fmull
jmp
shll
pusha
inc
fcmovnu
clc
mov
cld
je
jnp
addr16
xchg
aam
and
out
push
rcrl
xor
jnp
cmp
or
or
imul
in
pop
orl
daa
lods
add
push
sbb
repz
pop
ret
scas
mov
hlt
jp
adc
jge
ror
cmp
jne
dec
xor
mov
jae
je
scas
sub
in
push
mov
sahf
xchg
movsb
outsb
and
pop
rorb
test
pop
mov
sub
lret
call
push
and
outsl
clc
mov
lock
and
pop
lds
add
lret
ret
test
pushf
mov
push
mov
jae
jmp
into
sti
sbb
add
sbb
test
mov
fsts
push
addr16
add
notl
dec
mov
cltd
test
mov
pop
int
and
jl
arpl
mov
inc
pop
or
das
add
loop
and
xchg
out
or
fsts
xchg
pop
daa
fisubrs
loop
in
lods
movsb
enter
jg
cmp
xchg
mov
cmp
aad
sbb
cld
adc
sbb
leave
ret
lods
or
xchg
repz
lea
mov
cmp
dec
sahf
push
clc
outsl
xchg
ret
xor
fs
jne
lods
pop
jg
add
push
aas
jg
jl
sbb
xor
je
negl
pop
jbe
repz
push
pop
xchg
mov
sarb
xlat
fisttps
sub
adc
pop
pop
mov
xchg
add
pop
inc
test
inc
scas
fldenv
rolb
and
inc
jmp
cld
pushf
fadds
sbb
js
push
fildl
jcxz
dec
jmp
lahf
xchg
pop
inc
das
and
inc
jge
cs
xchg
sbb
push
push
push
mov
sub
mov
ret
roll
cmp
adc
pop
ja
inc
insb
mov
rcrl
jle
xchg
sbb
addr16
sahf
mov
push
ret
dec
sbb
cltd
popf
xor
sbb
ret
adc
in
xchg
xor
mov
and
js
leave
lods
ss
adc
movsb
xor
out
mov
insb
or
rorb
rcl
insl
or
mov
xchg
lcall
insb
ret
mov
xor
in
xchg
push
jo
and
neg
add
out
lock
shll
push
aad
dec
xchg
popf
loop
sub
imul
mov
cld
outsb
fldenv
xor
xlat
dec
pop
xor
add
push
xchg
cmp
scas
enter
cmc
iret
ja
mov
call
test
and
dec
repz
movb
fimuls
clc
xchg
mov
shl
pop
pop
cmp
dec
xchg
sbb
cmpsl
add
int
testb
scas
jmp
pop
mov
cmp
pop
and
dec
pop
mov
mov
cld
and
aaa
outsb
or
shll
mov
cmc
fmull
xchg
lds
sbb
lahf
and
arpl
push
push
mov
cwtl
and
dec
or
push
adc
xchg
mov
lds
test
pop
push
sbb
and
sti
lret
push
xor
sbb
lahf
test
xchg
fnsave
ds
and
mov
inc
mov
or
mov
add
mov
cmpsl
xlat
mov
jbe
mov
data16
out
or
sbb
scas
cmp
daa
adc
ucomiss
or
in
inc
mov
ss
dec
ficoms
dec
insb
out
and
or
popf
jne
mov
addr16
xchg
cmp
mov
flds
test
das
aam
fs
std
mov
xchg
push
out
rol
or
xor
add
dec
xchg
push
je
clc
xor
inc
adc
push
ret
xchg
mov
movsb
aaa
aad
rcrb
daa
inc
mov
imul
add
adc
cmp
andb
fstl
jnp
cli
sub
jge
mov
xor
popa
pop
xchg
jne
loop
jmp
mov
lods
das
lea
mov
clc
push
data16
inc
mov
fmulp
sub
cltd
push
cmpb
data16
xchg
leave
jno
pop
xorb
shlb
fistpll
ret
loop
icebp
js
add
stc
and
cli
inc
cltd
movsl
out
add
push
rcr
sbb
cltd
adcb
dec
ja
incb
or
hlt
aaa
mov
mov
xor
mov
xchg
mov
mov
enter
mov
jo
jmp
and
jns
popa
jb
push
add
cwtl
mov
andb
or
sub
int
sbb
mov
imul
inc
clc
dec
xadd
or
xor
pop
aaa
pop
push
xchg
aad
or
mov
lds
mov
mov
or
imul
loope
rclb
cmp
push
push
or
test
pop
fcompl
mov
xchg
xchg
mov
lea
mov
mov
lahf
fs
lods
and
jg
and
xchg
or
and
adc
push
add
aas
loop
push
lock
adc
mov
sbb
push
loop
jmp
es
nop
xor
pop
pop
xchg
stos
movsl
das
cli
inc
dec
jecxz
sbb
mov
pop
repnz
jl
stos
mov
push
push
jnp
in
std
popa
cltd
jb
jecxz
cmp
mov
pop
test
cmc
flds
add
out
jmp
push
insb
xchg
xchg
mov
daa
mov
rcr
imul
shll
fscale
or
jo
jecxz
dec
bound
sarl
push
notl
push
push
cmp
inc
loope
lret
xchg
xchg
cmp
ljmp
out
inc
mov
add
push
testl
xor
xor
imul
add
and
push
inc
lods
loop
cs
lods
xlat
adc
into
sub
pop
out
int
jno
sub
test
ss
js
push
in
sbb
lret
cld
push
sahf
jb
sarl
ds
in
bound
fcompl
and
xor
xor
cmp
cmpsl
push
mov
jbe
xor
bound
ret
daa
clc
loop
in
xchg
cld
sti
sub
repnz
push
movsl
mov
add
pushf
fmul
xrelease
xchg
in
pop
outsb
lcall
pop
jg
mov
push
push
lret
or
das
pop
sub
mov
and
jge
add
xchg
addr16
sbb
lahf
jge
popf
fwait
psrlw
incl
lods
push
mov
lock
mov
adc
dec
mov
sti
pop
xchg
cmpsb
xchg
push
push
jae
scas
inc
dec
fmuls
cmp
or
dec
in
negl
mov
hlt
pop
mov
xchg
cmp
nop
add
and
pushf
ljmpw
adc
cli
test
icebp
dec
lods
push
push
ljmp
sbb
mov
jne
adc
cli
stc
icebp
loopne
test
loopne
push
cli
std
and
movsb
pushf
shrl
daa
sub
xchg
mov
pop
roll
xchg
mov
dec
or
cmp
fistpl
xchg
aaa
xor
cmp
xor
mov
stc
dec
or
or
mov
jnp
pop
xor
std
cmp
xchg
jmp
rolb
inc
and
push
imul
inc
ja
das
push
dec
mov
bound
cmp
stc
jae
push
pop
sub
inc
dec
call
sarb
pusha
sbb
dec
testb
jge
jg
imul
and
mov
add
fcmovb
fs
jns
dec
out
mov
pminsw
inc
xchg
xorb
inc
inc
adc
gs
mov
out
insl
cmp
inc
mov
push
mov
sbb
mov
adc
fdivr
scas
out
sub
lods
mov
mov
or
aad
mov
mov
lcall
scas
cli
adc
sbb
inc
shlb
shll
and
ret
es
mov
dec
push
jmp
imul
ja
sub
repz
cmp
fsubs
pop
push
or
jle
push
mov
mov
mov
in
fadds
add
popf
fstpl
dec
out
clc
or
aam
mov
cmp
mov
ret
jo
cmp
cmp
movsb
fwait
pop
in
pop
sbb
int
stos
and
cmp
cmp
push
mov
lahf
pop
les
incl
jno
inc
es
outsl
mov
fisubs
cmpsb
sub
int
xchg
pop
ret
stos
aam
std
cltd
push
jg
addr16
nop
je
pop
popf
fldenv
xor
js
cmpsb
out
push
mov
scas
call
inc
push
fildl
insl
sbb
sahf
imul
dec
fs
iret
adc
ret
or
es
adc
pop
mov
fldenv
mov
push
pop
stc
lods
nop
jp
xchg
cmpl
inc
aaa
into
popf
ret
cmp
fisubrl
lahf
repz
add
repz
ljmp
movsb
cwtl
add
jge
fcmovb
ficoml
pusha
testb
sbb
lods
repnz
or
xchg
mov
sub
fwait
xchg
add
ja
pusha
outsb
ss
xor
repz
andl
outsl
das
repz
mov
shll
test
inc
fcomi
add
lods
add
mov
push
hlt
sbb
fnsetpm(287
out
push
std
aaa
or
rolb
div
outsb
or
movsb
inc
ret
jge
jb
cs
cmp
jbe
mov
xchg
std
es
mov
packsswb
fcomp
inc
xor
xchg
popa
cwtl
mov
pop
xchg
push
xchg
stos
jns
adc
cwtl
push
and
sub
jle
sbb
mov
xchg
push
sbb
cmp
mov
push
sbb
aas
mov
cmpsb
fildl
xor
or
jge
sub
scas
ss
ss
or
cmc
cmp
outsl
loopne
dec
in
xorl
sub
lea
dec
cld
gs
repz
fldenv
pusha
adc
sbb
cmp
cltd
loope
ja
fbstp
or
addr16
add
lcall
sbb
lock
add
inc
push
xor
and
movsl
jo
das
cmc
mov
aam
push
mov
subl
das
movb
mov
jl
push
test
imul
int3
lcall
xchg
imul
sub
mov
jne
dec
loop
shrb
rclb
jo
lea
mov
xor
aad
pop
xchg
test
das
movsb
dec
enter
stos
fs
ds
rcrb
sbb
mov
ret
push
xchg
sub
mov
insb
sbb
sub
into
mov
or
push
mov
or
inc
xchg
cmpl
push
sysenter
push
add
mov
in
fcmovbe
or
sbb
data16
xor
pop
enter
loop
mov
shlb
mov
jo
mov
icebp
lea
cmpsb
cmp
adc
leave
jne
decl
pop
sub
je
fldt
add
cmp
lret
mov
call
jmp
cmp
cltd
aam
nop
xor
mov
lret
mov
dec
mov
mov
jecxz
out
inc
xor
sahf
xor
arpl
jo
dec
pop
stc
jecxz
js
imul
mov
leave
sub
lock
out
ja
xchg
mov
cmpb
jle
shll
add
inc
ret
sar
mov
sbb
jp
mov
jle
cmpsb
je
scas
call
clc
mov
mov
nop
cmpsl
or
mov
adc
mov
jecxz
sub
jbe
or
xor
stos
sti
js
cmpsb
cmp
cmp
push
aam
mov
mov
or
mov
stos
rorb
test
jmp
pop
in
test
and
jno
in
out
sbb
jg
or
mov
rcrb
cmp
cltd
into
and
ss
fisubs
sti
faddl
dec
jnp
xchg
xor
bound
mov
sbbb
filds
adc
jmp
out
push
shll
div
es
fldcw
pusha
sub
test
sbb
stos
lahf
lret
mov
sbb
inc
fimull
push
fwait
lret
mov
jmp
popa
mov
std
jecxz
cmpsb
fisubl
pop
iret
sbb
xlat
push
inc
dec
inc
pop
push
inc
xchg
adc
inc
cmpsb
or
ret
add
and
out
aam
icebp
dec
and
dec
mov
std
mov
bswap
lock
int3
mov
ja
mov
mov
rclb
cmpsb
testl
xorl
cmp
add
pop
mov
or
jnp
flds
jg
push
xchg
and
push
mov
xchg
pop
ljmp
aad
insl
aas
dec
and
adc
movsl
dec
and
ret
mov
jne
imul
shr
popf
enter
pop
addl
imul
jmp
add
mov
stos
jp
addl
out
mov
sub
ss
shrl
cmp
cmp
into
jne
push
lock
lret
sti
daa
push
out
and
push
arpl
adc
cwtl
aaa
adc
loope
push
mov
sub
fnstsw
insb
push
or
mov
push
fcoms
ret
xor
or
test
sti
cmpsl
lret
xchg
dec
mov
pop
movsb
push
jo
jge
and
pop
js
shll
push
inc
xchg
pop
insb
loop
cmp
sbb
pop
rolb
inc
jae
lock
pop
cltd
jb
dec
addr16
mov
mov
pop
cmp
or
lcall
xchg
movsb
add
push
pop
lds
pop
inc
aam
xchg
into
mov
ds
loopne
mov
mov
loop
cmpb
jae
mov
lods
adc
ja
or
ljmp
scas
das
scas
jno
cli
stc
call
daa
sub
adc
or
pop
jae
fs
cmpsl
clc
loop
mov
mov
mov
int3
dec
dec
addr16
xor
pop
dec
push
xchg
sub
clc
push
xorb
and
xchg
test
sub
setle
insb
sbbl
out
lret
xor
adc
or
mov
add
jecxz
test
add
loopne
test
lock
or
adc
out
cmpsb
mov
mov
out
outsl
les
mov
and
pop
repnz
pushf
clc
lahf
cld
sub
push
das
jnp
mov
cmpsb
jle
inc
jecxz,pn
sub
pop
pop
stc
in
cmc
ljmp
xchg
loopne
js
sti
mov
inc
sub
in
mov
jp
or
push
call
sar
pop
insb
outsb
loopne
dec
mov
js
jecxz
mov
push
aas
or
test
pusha
lods
mov
and
pop
sbb
mov
leave
cwtl
iret
mov
inc
outsb
push
add
lahf
sub
jl
push
push
inc
sub
jmp
cmpsb
lcall
addr16
add
cmp
mov
push
out
mov
pop
cmpsl
mov
shll
pop
insl
ds
lret
loop
add
cmp
or
lods
cli
scas
mov
add
out
push
mov
sbb
xchg
ret
jno
add
test
sarl
pop
clc
adc
das
cmp
jno
jno
jb
in
sub
push
sbb
jns
jo
inc
test
out
sub
jp
mov
mov
into
pop
testb
and
inc
or
pop
xchg
jecxz
cmp
jp
jp
sbb
add
ljmp
dec
iret
cmp
lret
jp
mov
push
sub
fidivrl
cmp
mov
addr16
push
les
pop
pop
imul
add
pop
jecxz
icebp
shlb
fdivl
and
xor
repnz
in
or
in
je
adc
sub
jno
jne
popa
jmp
imul
mov
mov
xchg
xchg
xchg
sbb
and
mov
fcomp
and
enter
sbb
jmp
push
rorl
fcomps
es
mov
lea
mov
or
xor
xchg
mov
leave
ret
clc
int
nop
sbb
dec
enter
cmp
dec
mov
and
cmp
inc
jle
out
mov
lock
and
mov
inc
pop
in
mov
pop
add
adc
imul
or
mov
ret
xchg
mov
iret
add
daa
es
in
in
sbb
jno
xchg
add
les
sbb
cmp
data16
mov
out
outsl
sub
sbb
sbb
sbb
cmp
test
and
insb
push
mov
out
push
rclb
mov
add
andl
dec
lock
repz
sub
mov
rorb
push
xchg
add
adc
hlt
ss
adc
adc
cli
iret
push
or
xchg
fs
sti
mov
push
sbb
dec
das
ret
dec
daa
rolb
negl
pop
loop
cmp
ficomps
movsl
pushf
nop
lahf
fdivl
test
les
push
test
test
or
sbb
movsl
mov
lret
addr16
cmpsb
jl
mov
pop
xchg
fildl
int3
push
je
notb
push
fs
loope
out
xchg
mov
out
js
in
repnz
xchg
pop
sarb
pop
fwait
adc
mov
fidivrs
aam
mov
stc
pop
xchg
or
cld
icebp
adc
enter
jge
cmp
xlat
pop
dec
mov
push
xchg
fs
and
and
inc
mov
mov
int3
jg
daa
mov
call
js
ret
add
mov
dec
les
scas
fcmovbe
subl
jae
jp
imul
stos
out
xchg
push
ds
mov
int
mov
mov
lcall
inc
cs
cmp
mov
xor
mov
lods
outsl
call
je
popa
dec
push
sub
sbb
mov
push
ja
jae
inc
xchg
sbb
test
xor
lea
lret
insl
push
ljmp
sub
mov
inc
je
aam
or
push
jo
jae
rcr
cli
push
jbe
mov
or
hlt
loope
mov
adc
pop
cmp
in
mov
sbb
pop
mov
and
mov
in
mov
mov
daa
aaa
adc
loope
jns
mov
int3
mov
sahf
fsubs
and
punpckhbw
add
scas
out
xor
and
pop
lods
insb
into
dec
lahf
jecxz
pop
ffreep
cmp
cs
xchg
and
add
mov
push
pusha
xor
mov
mov
mov
repz
pop
ja
popa
arpl
push
repz
pop
stos
mov
inc
xor
je
lahf
clc
mov
nop
orb
andb
sbbb
push
inc
jno
inc
das
ret
xor
push
mov
inc
add
cli
xchg
lods
and
pop
lea
fnstsw
mov
cmpsb
mov
jecxz
cmpsb
pusha
adc
mov
fwait
push
and
lret
daa
js
les
cmc
and
arpl
das
outsl
pop
and
add
imul
fisubs
int3
push
xor
inc
stc
cmp
popf
iret
sub
hlt
cld
jne
lods
sub
adc
cmp
lods
jb
loope
pop
xor
test
stc
mov
sub
test
fdivr
cld
sti
ds
clc
push
sbb
bound
pop
fcmove
movsl
inc
mov
lahf
mov
pop
popa
cmpsl
add
gs
cmp
aad
popf
aad
push
repz
scas
xor
es
lock
icebp
shll
in
jmp
adc
jecxz
test
mov
xor
leave
mov
clc
sarb
in
lods
in
rorb
shlb
push
xchg
lods
fwait
fists
add
inc
test
mov
sbb
insb
out
callw
imul
jo
or
sub
cs
inc
cmpsb
fimuls
and
sub
psubsb
rcrb
testl
and
subb
icebp
test
inc
adc
push
push
adc
pop
ss
out
outsb
ljmp
enter
or
mov
lahf
mov
pop
outsl
cmc
call
xchg
xor
push
adcl
into
dec
inc
out
aaa
push
imul
ljmp
es
in
xor
add
lcall
or
gs
inc
cmp
adc
sub
mov
mov
push
lock
sbb
adc
add
jnp
xchg
ret
adc
daa
vmovq
outsl
xchg
popf
js
in
cwtl
aam
shll
sub
shll
loopne
adc
sarl
sbb
mov
punpcklbw
xor
call
mov
icebp
notl
and
mov
dec
adc
popa
mov
push
int
sub
dec
leave
bound
idiv
fsubs
inc
data16
mov
popa
insb
jo
sub
mov
ret
inc
mov
mov
jns
mov
fsub
aam
dec
jge
test
jecxz
iret
test
cwtl
push
and
fcoms
test
rcll
jecxz
xchg
adc
lock
and
mov
loop
sahf
lods
or
sub
sbb
push
pop
jge
fstpl
popf
jmp
xchg
movsb
inc
fistpl
movb
mov
push
mov
sbbb
jno
mov
jecxz
mov
repnz
xchg
loope
add
xor
cmc
scas
ret
inc
and
test
push
insb
add
add
aam
push
jns
sbbl
je
ret
add
test
cmp
dec
iret
mov
fdivrl
xor
ds
ucomiss
adc
aaa
xchg
sbb
ljmp
or
outsb
int3
and
push
sub
out
pop
lahf
push
add
inc
mov
jno
pusha
lods
pop
in
in
test
cmp
fwait
jbe
out
pop
mov
xchg
fsubrs
pushf
pop
inc
aaa
daa
mov
fdivl
add
add
lcall
mov
imul
movsb
mov
lret
leave
add
popa
int3
add
lcall
xor
addr16
xchg
je
lcall
lods
xlat
addb
js
mov
fucom
cs
orb
mov
or
enter
mov
jl
mov
inc
icebp
adcb
sbb
cmp
add
dec
sbb
push
dec
fs
or
insl
cs
in
sub
push
or
outsl
pushf
adc
sahf
pop
pop
add
fildll
or
mov
cmp
das
mov
push
mov
shl
cli
pop
arpl
push
mov
xor
ljmp
out
nop
mov
repz
push
jle
repnz
xchg
ljmp
mov
enter
imul
mov
push
or
or
dec
pop
outsb
in
std
ljmp
lods
dec
jo
jno
scas
cmp
lock
ficoms
mov
pop
mov
les
cmp
mov
jo
or
push
ficomps
or
xor
rcl
pop
mov
mov
jne
outsl
push
mov
loopne
cmp
dec
push
push
jl
add
sarb
mov
or
inc
pushf
cmp
cmp
pop
aam
and
sbb
pop
cmp
push
flds
push
sarb
divb
aaa
scas
stos
mov
mov
out
movb
bound
aam
mov
lea
les
sbbl
lea
add
loop
dec
mov
push
add
jg
nop
int
or
scas
out
xchg
test
xchg
mov
jl
and
mov
lods
ret
lea
sub
adc
loopne
push
cmp
js
out
hlt
dec
ljmp
mov
ror
xor
jo
sbb
mov
mov
dec
jne
or
divl
sti
and
outsb
aas
out
mov
ds
into
jbe
pop
dec
push
movb
sbb
orl
jo
jo
cmc
ja
or
sub
incl
inc
jmp
push
andl
mov
pop
sub
iret
add
int3
sahf
out
mov
sbb
mov
nop
or
int3
popf
dec
aam
sbb
xor
mov
pop
sub
jg
into
es
hlt
mov
jecxz
push
ja
push
stos
cmp
pop
ljmp
ljmp
pop
mov
je
cmp
inc
test
movsb
jl
add
xor
aam
inc
xchg
shlb
mov
push
sahf
or
mov
xor
js
mov
icebp
pop
sbb
outsb
xor
insb
bound
dec
and
cltd
xor
repnz
pop
push
fistpl
jae
push
sub
daa
ljmp
push
insl
repnz
ljmp
ret
stos
jae
lds
xlat
gs
xor
loop
leave
ljmp
mov
mov
push
lret
push
pushf
add
scas
inc
sub
sbb
xchg
rorb
lock
jl
mov
insl
decb
xchg
jae
jo
dec
jle
daa
xor
pushf
cmpsb
inc
sti
nop
nop
or
vcvttps2dq
mov
imul
mov
cmp
mov
push
jbe
insl
push
out
lea
in
mov
mov
in
fdivp
pop
sub
in
lods
add
adc
enter
fildl
orb
add
push
cmp
into
adc
dec
leave
xor
xor
mov
add
cs
mov
cld
mov
mov
push
add
xchg
add
pop
jb
jecxz
inc
sub
add
cltd
je
stos
xor
ja
xor
cmp
lods
repz
xchg
or
jg
test
xchg
xchg
out
adcl
popf
addr16
sub
inc
mov
data16
xlat
and
dec
mov
jb
mov
mov
iret
sti
aam
mov
test
xlat
loope
or
pop
pop
in
mov
test
out
sub
test
xchg
add
cmc
pop
xor
data16
and
dec
dec
mov
jp
cld
sbb
int3
ds
mov
enter
sub
movsb
jle
shll
mov
push
movsl
xor
add
pop
clc
and
data16
cmc
mov
stos
movsb
jns
repnz
jo
aas
pop
jne
pop
inc
mov
mov
lea
adc
loopne
mov
dec
loopne
repz
out
aaa
or
je
pop
cwtl
addr16
or
jge
mov
mov
call
in
or
xor
ret
ficoms
add
adc
shlb
arpl
jge
shll
cmp
popf
movb
and
pop
in
sbb
cld
mov
push
je
addr16
rorb
mov
out
sbb
aaa
mov
jbe
gs
add
pop
sub
sbb
hlt
mov
dec
inc
mov
or
cs
and
adc
arpl
or
stos
data16
pop
jmp
loopne
mov
in
mov
in
jle
mov
push
jno
xor
fistpl
les
mov
push
xchg
addr16
push
ficomps
sar
out
mov
imul
mov
movsl
mov
data16
fwait
push
jnp
lods
das
xor
mov
ds
jb
pop
cltd
sti
dec
push
movsb
notl
out
movb
adc
rclb
add
xchg
xor
or
push
into
or
mov
inc
jae
dec
cli
mov
leave
call
xchg
pop
out
sbb
cmp
lds
sbb
mov
and
pop
ja
aas
adc
das
inc
out
xor
and
aam
xchg
sbb
dec
add
icebp
jbe
jl
xchg
inc
out
jmp
sarl
andb
pop
push
and
dec
mov
sub
pop
dec
add
fdivl
pop
mov
ret
jp
jnp
lds
popw
mov
mov
test
rcrl
xchg
xchg
enter
sub
xchg
out
scas
or
and
add
cltd
sub
pop
sub
in
ljmp
push
mov
and
std
test
jb
stc
aas
stc
ljmp
in
push
leave
stos
adcb
xor
push
push
iret
xor
shll
xor
push
dec
mul
mov
nop
push
xchg
xbegin
or
cmc
leave
ljmp
and
xchg
sti
xor
inc
in
lretw
and
xlat
shll
fcomps
lock
sub
jp
pop
sub
or
clc
mov
add
jge
jge
inc
mov
push
xchg
fadds
cld
jae
xor
xorl
mov
pop
sbb
f2xm1
daa
loope
ficomps
lods
pop
in
cwtl
mov
outsl
xchg
arpl
mov
ja
mov
jo
push
dec
jp
into
jmp
push
sub
test
and
dec
out
sbb
popf
dec
pop
inc
sbb
int3
call
or
lret
pop
sub
in
cmp
lcall
out
ljmp
les
loop
dec
xchg
xor
bound
jno
xchg
dec
pop
jle
shrb
push
loopnew
lods
pusha
mov
pushf
imul
cmp
repz
add
int3
fdivrs
lret
inc
mov
dec
cmp
out
sub
vpaddsw
ret
orl
sbb
ja
jecxz
shll
mov
ja
stos
cmpsb
stos
es
mov
ror
mull
rclb
ja
inc
shll
lock
mov
xchg
mov
xor
addr16
lock
mov
cltd
sub
bound
mov
outsl
fwait
test
push
add
mov
sti
je
inc
push
or
dec
icebp
stos
outsl
add
test
sarb
mov
int3
iret
xchg
in
dec
ss
adc
and
or
add
cmp
cltd
lods
out
ljmp
cmp
push
mov
mov
out
dec
adc
add
les
cmp
xchg
push
mov
gs
or
popf
cld
lea
sub
jge
mov
mov
mov
jecxz
addr16
inc
lret
jge
cmp
dec
xchg
mov
jae
mov
sti
mov
inc
inc
xchg
wbinvd
stc
cmp
push
adc
push
sbb
add
dec
std
push
std
cmp
dec
xchg
in
clc
add
outsl
insl
and
adc
fiaddl
call
or
into
mov
lcall
and
mov
xor
insl
mov
jmp
xchg
cwtl
and
cmp
and
dec
lahf
mov
orb
ljmp
in
test
in
hlt
loop
xchg
mov
loop
aad
mov
xchg
adc
insb
std
outsl
sbb
push
xchg
mov
out
movsb
xchg
mov
les
fstpt
jb
and
jbe
mov
mov
cmp
out
loop
push
inc
ret
xor
sbb
insl
mov
fistps
inc
add
inc
mov
jmp
inc
shll
outsb
jmp
subb
dec
push
inc
cmp
sub
std
inc
sbb
aaa
movsl
loop
std
ja
hlt
das
dec
sbb
stos
dec
push
xchg
lock
cwtl
lcall
fimuls
and
sbb
fnstcw
sub
push
notb
imul
fs
test
nop
repnz
pop
mov
imul
xor
cmpl
mov
movsb
sub
jge
sbb
hlt
mov
fs
scas
sbb
cmp
arpl
mov
mov
fwait
xor
js
xchg
enter
shrl
mov
enter
popf
out
dec
cltd
push
lret
sbb
jmp
mov
shrb
push
pop
das
in
mov
xchg
cli
xchg
and
jnp
fisubrs
scas
repz
insl
jae
sub
icebp
fsubs
xchg
stc
add
int
nop
stos
jae
imul
clc
popf
jbe
leave
ret
ds
adc
mov
sbb
xor
mov
movsl
idivl
stc
mov
push
jno
fwait
lea
in
inc
es
shl
mov
lret
sub
les
or
adc
faddp
adc
pop
inc
dec
inc
in
xor
ja
sarb
pop
jmp
xchg
pop
loop
xchg
scas
xchg
cmpsb
jb
cmpsb
je
jle
mov
push
cmp
mov
ljmp
jo
es
xor
xchg
sbb
les
ljmp
lahf
jle
fdivr
dec
or
cmp
movsb
and
pop
repnz
mov
loope
loope
imul
and
aas
pop
ror
leave
xchg
mov
inc
rorb
int3
movsl
inc
or
into
or
sub
adc
aas
js
sub
push
roll
dec
xchg
xor
and
outsb
cmp
jge
pusha
out
cmpsl
out
and
hlt
dec
add
pop
mov
roll
inc
add
mov
jbe
in
fxch
lea
adc
sbb
in
jo
ljmp
test
fidivrl
push
in
iret
dec
push
fistl
inc
gs
push
add
ret
or
aam
mov
cmp
mov
adc
les
add
mov
enter
sahf
dec
cli
sub
xchg
xor
or
int
cmpsw
in
mov
add
cmpsl
out
popa
mov
mov
mov
mov
daa
mov
stos
fldenv
imul
push
add
dec
rcrb
iret
xchg
xor
mov
push
add
push
jb
jmp
and
rcr
inc
xchg
add
loope
jo
adc
daa
xchg
push
pop
xor
pop
xor
lret
scas
mov
xor
gs
mov
sahf
ret
je
mov
pop
imul
xchg
and
fmuls
add
lock
filds
mov
rcl
mov
jne
arpl
pop
jecxz
mov
sub
lods
cmp
dec
sahf
jb
push
mov
adc
lock
xchg
xchg
jne
push
inc
int3
xlat
xchg
fwait
xor
and
int
pop
pop
insl
dec
or
pushf
pop
jo
jmp
or
sub
inc
repz
icebp
mov
and
imul
js
out
jecxz
mov
stc
test
push
pop
sbb
push
cmpsl
into
and
test
loope
scas
mov
cmp
outsb
dec
push
shl
pop
imulb
jo
lret
push
mov
ja
add
mov
sti
call
jmp
lahf
aas
mov
xchg
cmpsb
rcrb
rorl
cwtl
push
loopne
xor
push
bound
jmp
jl
insl
and
or
mov
xor
lea
std
lods
mov
jl
mov
push
stc
inc
fisubs
lds
add
enter
out
lea
mov
sbb
dec
icebp
jb
mov
shll
lock
sub
push
in
popf
xlat
inc
andb
cmp
mov
inc
in
or
and
inc
outsb
cmpsl
fs
les
ja
sbb
or
pushf
jmp
stos
frstor
mov
sub
pusha
repz
jns
inc
xchg
pop
popf
lock
inc
sbb
and
pop
pop
ret
dec
pop
add
xchg
pop
sbb
pusha
scas
mov
cltd
das
lret
push
jmp
dec
push
repz
fldt
jecxz
cwtl
gs
dec
xor
bound
pushf
mov
add
cs
pushf
out
les
jmp
jns
pushw
int
add
sbb
out
dec
xor
popf
and
push
cmpsb
cmp
outsb
and
dec
jo
mov
add
add
and
outsb
int3
mov
clc
scas
xor
loop
mov
test
xor
clc
in
fstps
lds
push
push
mov
aas
add
dec
decb
loope
inc
push
mov
jbe
xchg
insl
and
and
mov
pop
push
mov
outsl
rol
nop
aaa
pop
in
dec
inc
es
fnstenv
xor
add
imul
or
imul
rcrb
xor
dec
mov
xchg
cmp
pop
dec
mov
pop
adcb
out
mov
in
arpl
into
add
ljmp
xchg
xor
xor
in
xchg
loop
dec
adc
fldl2t
cmpsb
in
das
in
dec
ret
stos
sub
push
sbb
mov
int
in
decb
cld
ret
shrl
push
clc
arpl
scas
shl
jmp
fs
outsl
jne
clc
mov
enterw
rcrb
iret
or
jle
sub
xor
cmpsb
inc
jae
std
movsl
sbb
and
fnop
pop
xchg
fs
das
cs
mov
cmp
sahf
ficomps
sti
push
or
lods
push
outsl
cmp
push
push
or
adc
test
sub
mov
in
mov
xor
sub
cmp
cld
mov
test
and
xchg
fistps
outsl
lret
jl
adc
nop
dec
push
lods
fs
push
xorb
pop
imul
dec
cwtl
xchg
jae
std
jbe
loop
sub
push
mov
test
pushl
push
mov
imul
aas
add
lock
loop
lock
flds
add
lock
mov
jnp
adc
mov
daa
xchg
push
hlt
lea
mov
aad
mov
out
stos
mov
popf
mov
fs
subb
push
push
fwait
popa
lcall
push
xlat
cwtl
jb
lret
dec
gs
mov
mov
ja
jne
mov
lods
mov
gs
cltd
pop
sahf
divb
jns,pt
scas
js
sbb
outsb
mov
mov
xchg
mov
sahf
sahf
daa
incb
stos
or
cmp
aam
in
fwait
mov
lret
std
inc
xor
add
lret
mov
add
andl
inc
imul
mov
movsb
sbb
imull
jns
addb
leave
sub
push
in
jne
or
or
cwtl
cmp
sub
gs
nop
scas
outsb
fcompl
xchg
aas
or
int
mov
adc
outsl
mov
jno
loop
jo
jmp
jle
int3
test
fisubrs
inc
adc
mov
cmpsb
jb,pn
sbbb
sbb
adc
push
jmp
lods
dec
and
cmpsb
mov
mull
xchg
push
xchg
sub
xchg
sbb
lret
sub
aas
add
loopne
lret
jp
and
xor
out
lret
sbb
cmp
pop
cmp
scas
mov
xor
add
in
addr16
scas
or
jns
push
xor
or
cmp
sub
or
bnd
xchg
inc
scas
jb
lret
in
test
push
dec
cmp
jb
sarb
add
mov
pop
ret
inc
dec
lret
iret
inc
test
push
xor
ds
pop
or
sahf
or
sub
mov
scas
push
pushf
int
imul
push
push
insl
icebp
dec
xchg
dec
push
fidivrs
mov
and
jp
xchg
mov
insl
cmp
ss
jno
push
jnp
fcoml
cwtl
mov
or
push
andnps
roll
adc
aas
roll
dec
vmread
out
popf
std
push
cwtl
cmp
iret
cli
aas
jae
xchg
inc
jl
loope
inc
mov
sbb
je
xlat
mov
pop
rorb
adc
rcrl
sub
sbb
in
xchg
stos
mov
fisubl
push
mov
sti
ljmp
mov
push
xor
in
xchg
js
sbbl
mov
imul
call
cmp
js
and
add
push
and
inc
lahf
test
dec
scas
movsb
mov
stos
xchg
push
in
mov
loop
pop
cli
push
pop
testl
pop
pop
call
push
pop
sbb
mov
xor
cld
mov
aaa
stos
leave
aam
sub
mov
test
sbb
adc
push
fucom
jae
movsl
pop
xlat
outsb
fdivrp
xchg
es
lahf
push
je
repnz
xchg
mov
fsubs
out
scas
dec
jge
mov
out
adc
or
mov
mov
sub
insl
inc
js
inc
cmc
lret
dec
mov
mov
ss
dec
in
into
cwtl
or
or
ss
scas
fs
mov
adc
xchg
mov
mov
cli
lcall
jle
sbb
adc
inc
cmp
jb
add
mov
jo
cmpl
cmp
dec
sarl
in
push
and
leave
rdtsc
push
into
popf
jg
xor
clc
pop
mov
popa
or
jb
xchg
loope
lds
push
or
mov
or
subb
ret
sbb
addr16
dec
arpl
std
addl
fwait
push
xor
lret
xor
aas
mov
inc
xor
add
dec
mov
loopne
out
sti
xor
pop
xchg
mov
pop
push
dec
imull
insl
jmp
imul
jl
or
in
nop
add
and
dec
jo
xchg
sub
cli
movsl
pop
jecxz
aaa
out
or
adc
mov
inc
push
and
imul
mov
cmp
add
mov
shlb
add
mov
out
mov
xchg
movsl
jle
adc
cmp
scas
mov
push
push
roll
shrb
dec
jp
repnz
add
inc
mov
jg
jno
cmc
shll
xchg
mov
mov
sar
insb
arpl
jns
movsb
add
inc
dec
and
insb
jmp
insb
dec
nop
arpl
xor
inc
jb
rcr
in
lcall
mov
pushf
mov
inc
clc
fistpl
add
fimuls
dec
mov
cwtl
inc
sub
jl
pop
imul
mov
addr16
inc
lcall
int
xor
fsubr
imul
pusha
js
sub
push
add
mov
stos
stc
dec
adc
xchg
lock
outsl
sbb
ss
adc
hlt
pop
sub
dec
sbb
loopne
cli
out
sbb
ds
test
push
mov
mulb
lret
adc
inc
fdivs
inc
repnz
xor
mov
ret
push
arpl
xor
jp
movsl
shrb
insl
cmpsl
mov
inc
push
imul
push
aam
dec
adc
aas
inc
pop
test
and
mov
xlat
repnz
out
mov
call
sub
cld
jge
xchg
push
call
imul
sub
repz
daa
lahf
popf
inc
and
gs
je
cmpl
in
or
movsl
lcall
mov
or
rcll
dec
mov
hlt
adc
aas
push
mov
push
cld
xchg
jmp
inc
icebp
dec
or
data16
push
clc
ljmp
mov
aad
imul
sub
cmp
push
pop
sub
jp
jecxz
nop
sarl
pop
mov
popf
push
call
pop
jns
cmp
cli
testl
and
aaa
js
xchg
cmp
pop
test
ds
xor
std
or
mov
or
adc
add
inc
mov
jmp
shrb
flds
jnp
fisttpl
dec
jnp
adcl
pop
inc
mov
das
test
das
sub
mov
push
inc
pop
xor
les
jge
cmp
push
hlt
mov
mov
and
aam
jnp
test
mov
addr16
xchg
cmp
jecxz
mov
inc
dec
shll
mov
xchg
mov
enter
addr16
icebp
push
or
or
dec
popa
fsubrl
push
sbb
push
xor
ss
test
mov
cmpsb
inc
jmp
mov
sbb
lahf
mov
icebp
addb
xchg
and
cs
mov
nop
out
repnz
mov
add
lds
inc
cmpsl
fbstp
push
cmp
lods
mov
pop
xchg
ret
pop
xor
repnz
leave
adc
fwait
adc
addr16
stos
cmp
dec
cld
pop
jnp
mov
loopne
out
dec
push
sbb
loop
test
dec
popf
stos
cmp
xchg
xor
dec
outsl
xor
mov
iret
fldcw
xchg
sbb
ljmp
popa
cmpsl
fdivrl
popa
andb
aad
data16
scas
test
dec
inc
bound
mov
xchg
pusha
and
sub
sbb
inc
xchg
cmovno
arpl
loop
xchg
lea
add
add
and
je
lahf
pop
mov
test
ljmp
inc
xchg
shll
push
xchg
add
add
lds
jbe
fistpl
sub
pushf
ja
stc
test
icebp
pop
push
jno
pop
dec
jne
push
hlt
pop
and
inc
clc
sub
in
dec
add
std
addr16
push
push
test
sbb
pop
cs
xlat
pop
add
ds
cwtl
or
fdivrl
and
xor
cmc
jp
jnp
sbb
cmpsl
idivb
ret
subl
loope
fwait
stos
std
arpl
sub
fsin
cltd
jb
outsl
adc
cltd
sbb
js,pn
pop
pop
icebp
lret
pop
jo
sbb
add
jl
xlat
add
pop
pop
lds
mov
inc
mov
movsl
pop
stc
mov
out
ds
lea
sub
xor
outsl
sub
fdivs
imul
in
xchg
push
ds
push
in
les
cmp
mov
mov
dec
add
out
cmp
cs
mov
inc
mulb
test
inc
inc
aam
mov
inc
int3
pop
stc
rolb
pop
jb
imul
icebp
les
iret
loop
xchg
push
inc
idivb
and
push
pop
xor
pop
cld
xor
incl
jns
mov
cmpsl
sbb
clc
aad
inc
lret
jnp
imul
pusha
leave
loope
inc
push
mov
cmp
loop
das
leave
fsts
mov
jmp
mov
cs
sbb
iret
mov
sbb
dec
xchg
decl
xor
fcompl
jecxz
movsb
stos
inc
out
sub
sbb
pop
ss
out
push
popf
repnz
popa
push
lret
dec
inc
push
fisubrl
mull
push
adc
test
mov
addl
les
in
roll
sarb
jecxz
adc
xor
adc
jp
and
xor
inc
ds
inc
pushf
in
mov
xchg
pop
sarl
xchg
inc
mov
outsb
sub
xor
mov
adc
pop
cli
adcl
jmp
fwait
dec
in
pop
sub
mov
mov
sbb
bound
jp
sahf
jp,pn
cltd
ljmp
in
cmp
das
cmpsl
pop
cmp
ljmp
lcall
mov
or
cmp
popa
cmp
lahf
xor
std
ficoms
xchg
lea
or
fstps
mov
fisubl
outsb
sub
jnp
out
or
jmp
in
mov
push
lock
push
cltd
mov
add
aam
mov
lcall
xchg
shl
out
cmp
popf
ficoms
push
inc
jecxz
pop
popa
js
into
shll
popf
or
push
mov
dec
and
fbld
lock
inc
jle
pusha
lcall
enter
iret
jno
or
and
mov
lcall
add
ret
les
adc
cmc
xchg
mov
mov
test
jmp
mov
adc
cmp
push
adc
loop
leave
sub
add
pusha
xchg
imul
hlt
js
inc
mov
mov
inc
lcall
enter
xchg
es
cmp
mov
mov
dec
aas
stos
ss
cld
mov
sbbb
fmull
cld
mov
xchg
inc
test
out
cmpb
into
ret
adc
or
into
push
loope
pop
movsl
mov
aaa
hlt
pushf
popf
mov
mov
cltd
jmp
sbb
fstpt
jae
popa
xchg
gs
leave
loop
mov
adc
add
pop
and
gs
mov
xchg
fidivs
sbb
addr16
xchg
push
arpl
jecxz
pop
arpl
loopne
fstl
sbb
ret
sarl
mov
jecxz
sub
movsl
jge
and
fs
pop
scas
cmpsb
out
mov
mov
dec
xchg
popf
mov
pop
pop
mov
sub
cmp
adc
ljmp
pop
stos
ret
sahf
into
in
dec
pop
jo
jge
aam
test
in
imul
adc
out
sti
xchg
lea
test
movsl
jecxz
fldenv
xchg
out
sbb
leave
lods
mov
add
nop
gs
lock
cmp
inc
popa
cmp
inc
imul
hlt
dec
mov
xor
loope
es
out
lods
cmp
xor
jae
insb
add
ds
cwtl
and
andl
jge
cld
sbb
or
sub
mov
mov
notl
push
es
data16
jl
push
fildl
neg
mov
outsb
xor
clc
das
mov
jecxz
mov
jnp
movsb
test
add
lods
insb
adc
incl
jb
mov
adc
es
jg
rcrb
iret
mov
xchg
adc
out
pop
in
inc
push
cmc
icebp
in
cmp
outsl
cld
inc
bnd
stos
fs
jmp
dec
mov
cltd
inc
in
push
leave
xchg
js
rcl
mov
jae
daa
xlat
shlb
test
mov
or
mov
push
and
add
mov
cmp
push
dec
scas
sub
sub
inc
inc
pusha
push
sub
push
dec
jge
sbb
rolb
in
ss
mov
sbb
outsl
push
lock
xor
and
lahf
pop
or
into
mov
lods
subl
gs
dec
lods
leave
and
cwtl
test
das
fstpl
push
jge
or
mov
push
or
fimull
orb
sbb
rol
push
inc
sbb
gs
xor
xchg
stc
jns
xor
and
dec
dec
jg
sbb
int
mov
rolb
mov
and
in
enter
cmp
daa
fidivs
jns
out
lret
cmp
mov
loopne
sub
repnz
push
xchg
pop
jp
mov
sti
icebp
sub
xor
mov
xlat
xchg
je
jmp
push
add
or
sub
push
in
mov
pop
jns
push
adc
push
cmp
insl
bound
fstpt
jnp
inc
leave
mul
mov
lret
jmp
cmp
pop
in
sub
ja
sub
add
pop
call
push
scas
push
push
push
movsb
mov
xchg
adc
hlt
mov
mov
mov
mov
iret
xor
xor
out
mov
pop
inc
fcoms
sub
fdivrl
sbb
pop
hlt
insl
and
int
lret
sub
arpl
insb
out
inc
fwait
adc
stc
repz
push
sbb
dec
xchg
sbb
add
mov
push
jnp
insl
gs
xor
pop
dec
scas
pusha
test
adc
mov
add
xchg
in
push
rorl
adc
sbb
push
test
xchg
sub
push
xor
push
ret
or
ficoml
lock
fisubs
mov
push
push
mov
pop
out
adc
test
roll
js
insl
push
xor
pop
clc
cmp
sub
jb
cwtl
aaa
adc
fcoms
sbb
sti
jl
adc
mov
jge
xchg
testb
cs
pop
jmp
ljmp
mov
push
ret
mov
rcl
mov
stc
les
xchg
mov
and
es
mov
pop
andb
cwtl
xchg
fnstsw
xor
sub
out
cwtl
scas
fwait
lea
lahf
mov
clc
xor
leave
sub
sbb
movsb
xchg
dec
sub
jns
push
je
or
adc
add
cltd
dec
add
cli
cltd
popa
cmp
push
or
orl
hlt
gs
jns
leave
sbb
popf
mov
mov
add
cmpsb
push
push
cmovle
jp
and
and
repnz
push
dec
test
or
sbb
out
adc
pop
jo
arpl
jp
mov
outsl
sbbb
call
mov
iret
pop
xchg
push
adc
dec
jo
test
or
xor
jecxz
movsb
repz
xor
add
push
stos
jle
cmp
inc
mov
fisubrl
jbe
js
cmc
jb
mov
jmp
and
jbe
cld
iret
dec
lahf
mov
mov
lcall
imul
sbb
and
adc
cltd
rcrb
mov
xchg
sbb
pushf
fidivrl
and
xor
dec
dec
mov
aaa
pop
ja
iret
hlt
inc
xchg
shlb
fwait
jo
lods
push
lret
iret
dec
mov
mov
fcmovne
mov
mov
dec
mov
pop
inc
adc
pop
mov
jno
add
leave
adc
mov
jns
cltd
or
sub
flds
sbb
imul
xor
gs
and
sub
xlat
adc
inc
ret
out
lret
jl
jge,pt
xchg
xchg
sarl
cltd
mov
and
ds
pop
jg
fcoms
mov
mov
adc
sbb
in
adc
mov
and
flds
add
xchg
lea
pop
sbb
xor
pop
add
add
or
scas
pushf
addr16
add
int
mov
and
cmp
mov
mov
or
ja
popf
xor
mov
pop
push
test
sbb
xchg
xor
shlb
jg
adc
test
ljmp
and
icebp
jmp
jg
or
sbb
mov
sbb
mov
inc
outsb
mov
cmp
push
push
aas
mov
cli
add
mov
mov
jns
sbb
lods
push
and
lock
pop
inc
das
jmp
adc
xchg
sub
lods
in
mov
xor
idivb
aam
mov
es
jmp
push
mov
sahf
cmpsl
push
push
xor
mov
gs
dec
shlb
stos
pop
inc
sub
mov
orl
lret
xchg
xchg
sbb
inc
xchg
or
into
jle
mov
jbe
pop
push
ds
push
cmp
add
or
fistl
fldt
lods
jmp
loopne
pop
xor
jle
xor
int3
xchg
mov
dec
out
aaa
test
fs
inc
and
sbb
mov
sub
gs
and
mov
dec
dec
sarl
rep
arpl
call
push
add
xchg
scas
adcl
jne
xchg
ret
inc
ret
scas
adc
mov
pop
arpl
aam
loopne
scas
pop
mov
push
jb
aas
out
fidivs
imul
or
lea
outsl
mov
jns
or
test
es
jns
std
mov
mov
iret
pop
jo
bnd
ret
mov
mov
inc
loop
out
jmp
lret
sub
xchg
das
call
push
cltd
inc
inc
je
jnp
popa
cwtl
outsl
jae
mov
daa
or
push
cmp
mov
call
adc
jp
jg
int
dec
jno
test
push
aas
sbb
mov
stc
cmp
js
imull
jle
push
adc
or
push
icebp
das
lahf
add
add
insl
xchg
addr16
inc
sub
subb
add
xchg
popa
orb
xor
into
add
ljmp
sub
sub
test
cltd
jns
popa
pushf
lcall
punpckldq
test
aaa
push
xor
sbb
xchg
negl
iret
setae
scas
adc
ret
push
adc
inc
inc
pop
popa
popl
xor
push
pextrw
cmp
rol
xchg
out
pop
in
iret
cmp
fcmovu
push
mov
inc
mov
jnp
sub
inc
inc
dec
xor
add
popa
pop
aaa
sbb
stos
pop
mov
outsb
movsl
ret
ret
sbb
popa
leave
rorl
sbb
add
lret
sbb
out
scas
mov
mov
xchg
in
rcrb
jo
xor
loope
dec
lret
clc
dec
ret
std
mov
and
xor
mov
lock
movsl
cli
hlt
fwait
dec
sbb
mov
insl
dec
push
inc
lods
sub
xchg
popa
stc
in
lahf
outsb
insb
gs
insl
jb
xorl
std
inc
pushf
mov
add
insl
jecxz
xlat
ss
inc
bound
jo
js
and
ds
das
mov
mov
jbe
jmp
push
mov
fwait
xor
movsb
push
add
lods
dec
hlt
pop
xchg
out
rep
out
imul
movsl
test
mull
in
mov
sub
cmp
mov
sbb
aas
xor
js
pop
testl
sbb
mov
imul
das
jno
dec
inc
cmp
arpl
cld
sub
mov
fidivrl
xor
repz
cmpl
adc
sti
je
cld
lea
sub
jmp
mov
daa
in
xlat
fsubrp
mov
cmp
cld
mov
in
xchg
aas
mov
in
negb
loope
fdivl
das
out
rcr
loopne
call
ja
cli
in
scas
push
rclb
pushf
iret
xor
sub
and
mov
sub
adc
cmpsb
cmpsb
push
mov
push
or
leave
leave
std
pop
dec
mov
jp
mov
push
xchg
mull
nop
mov
movsl
mov
dec
ficomps
fisttps
pop
lea
ja
testb
int
dec
call
roll
jmp
dec
out
push
inc
and
ret
or
push
cmpsl
bound
inc
outsl
popa
mov
in
or
ds
ret
or
pushf
and
je
cmp
aaa
mov
mov
sub
xchg
inc
mov
mov
aam
popf
into
lret
rcrb
leave
call
jg
nop
xchg
and
shrb
push
lret
jnp
fisttps
pop
fwait
sbb
lods
sub
inc
stc
lret
lret
ret
jns
add
fs
aas
pop
jge
out
cmp
mov
orl
repnz
insw
ljmp
or
pop
mov
iret
pop
ds
xlat
pop
sub
sub
movsb
leave
loope
orb
mov
stos
mov
pushf
xorb
or
xlat
adc
movsb
cwtl
scas
jl
ret
mov
ja
int
mov
xchg
adc
les
mov
pop
and
sbbb
mov
push
fisubrs
jecxz
mov
arpl
test
repz
push
lret
add
sahf
cmp
and
jg
bound
sub
cmp
cwtl
scas
pop
push
add
decl
stc
cmp
rcrl
imul
or
adc
rcll
lret
push
adc
int
xchg
aad
adc
mov
add
jnp
call
push
mov
and
add
mov
das
adc
shll
rcl
std
pushw
cwtl
repz
lods
out
push
jl
push
rcrb
loop
mov
ror
xor
pop
mov
rcrb
and
sbbl
sbb
cmc
push
out
imul
add
mov
scas
subb
push
movsl
cmp
jge
sub
push
inc
rolb
cltd
xchg
sub
call
dec
cmp
pop
das
add
mov
movsb
and
and
and
sub
xchg
in
jno
xlat
xor
jle
mov
xchg
and
pop
sbb
push
mov
mov
icebp
fistpll
jmp
fnstcw
ss
cmpsb
xchg
push
repnz
out
and
xchg
into
or
mov
daa
sbb
sbb
inc
push
and
add
fisttps
dec
jge
push
fstl
dec
test
jns
sahf
lods
insb
or
jno
push
dec
stos
mov
popf
cmp
add
jp
decl
jl
ljmp
movsl
mov
xchg
imul
icebp
cmpsb
jbe
ja
push
mov
push
sub
cmpsl
sbb
push
jae
xor
jae
xor
or
aam
mov
stos
clc
xchg
cmp
int
mov
sarb
outsb
lcall
mov
aas
cs
mov
inc
pop
rcr
jl
addr16
sbb
xor
inc
or
movsb
int3
mov
cli
inc
je
sub
and
mov
jae
stc
lret
cmc
add
ja
xchg
pushw
rep
sbb
stc
test
mov
movsb
cs
mov
fistps
xor
rorl
inc
or
cmpxchg
sbb
mov
test
mov
dec
push
fdivrp
xchg
mov
dec
cmp
cmp
roll
sbb
icebp
xchg
xchg
inc
cmp
push
shl
sub
in
pop
popf
into
aam
inc
mov
xchg
sarl
addb
xor
add
push
mov
int
mov
sbb
mov
inc
into
inc
push
add
xchg
adc
dec
mov
cmp
stos
pop
out
add
imul
inc
mov
std
popa
push
notl
cmp
cmc
mov
aad
mov
das
insl
outsl
arpl
jge
sub
test
push
mov
inc
mov
and
ljmp
mov
jne
push
icebp
jecxz
popa
add
sbb
lahf
cltd
sbb
movsl
ret
and
xor
sbb
fcomps
fiadds
fstpl
push
mov
push
or
adc
ret
fidivrl
loop
rcrl
ljmp
mov
or
mov
sarl
inc
sbbb
mov
movsl
enter
stc
dec
gs
ss
and
in
xor
loope
aad
jae
push
xorl
pop
lea
sub
adc
ss
fdivrs
adc
dec
in
mov
sub
pop
aas
rol
push
stos
push
repnz
lea
and
lods
sarb
ljmp
pop
stos
mov
test
fidivl
ds
push
mull
mov
fcoml
repnz
pusha
add
adc
scas
lahf
sbb
into
inc
jae
in
movsl
sbb
jle
imul
dec
adc
fimull
mov
lahf
imul
jg
iret
roll
mov
xchg
push
or
mov
or
jbe
fisubl
int
gs
test
jae
ljmp
jl
cmp
repz
rolb
push
xchg
jae
popa
hlt
inc
ret
mov
adc
int
lret
ljmp
dec
mov
ret
roll
xchg
and
stc
fs
das
call
cmpsl
lret
xor
cmc
jb
sbbb
and
test
mov
mov
push
sub
lret
jge
std
add
pop
mov
dec
dec
sbb
imul
movsb
push
sub
mov
idivb
or
repnz
pminub
into
cmpsl
ja
bound
ficoms
stos
cmp
xor
mov
in
inc
call
adc
cmp
inc
stos
movsb
inc
scas
fidivrl
lock
jmp
pushf
cmpl
nop
push
sbb
outsb
mov
aas
mov
daa
add
test
call
out
outsb
cmpsb
out
imul
jp
jg
outsl
roll
test
jl
daa
or
and
popl
xor
pop
ljmp
cmp
xor
lret
add
xchg
xchg
aam
fcmovu
and
adc
cmp
pushf
aad
inc
cwtl
mov
xor
add
test
pop
movsl
inc
or
cmp
aad
into
scas
in
mov
inc
mov
add
add
mov
lcall
in
in
aaa
in
arpl
lods
outsb
pop
sahf
leave
icebp
mul
shr
sub
mov
iret
in
data16
sbb
jle
arpl
outsl
in
mov
inc
pop
dec
insl
rcrb
inc
fisubrs
pop
mov
dec
gs
int
inc
cli
xchg
mov
popf
push
pop
insb
push
scas
pop
inc
rcl
mov
fsts
ret
push
xchg
jae
jb
mov
in
cmp
mov
movsl
test
xor
add
stc
pop
repz
bound
lret
stos
leave
cmc
nop
pop
in
rcrb
jp
add
rcrb
pop
and
cwtl
sub
pop
cmp
sarb
add
push
mov
lods
or
cmp
in
xchg
cmp
jp
shll
pop
ljmp
cmpsb
adc
test
jns
aaa
call
fs
mov
iret
adc
push
out
mov
mov
inc
add
mov
push
jne
lds
imul
mov
popf
fucomip
test
mov
lret
adc
stos
fldl
pop
and
adc
add
insb
or
adc
out
clc
push
sbb
sahf
stc
ret
mov
movsl
cmc
pop
mov
test
loop
sbb
add
add
jne
dec
sub
out
aas
sti
jbe
dec
loop
inc
dec
dec
jg
xchg
mov
dec
stos
sbbb
loop
jge
int3
mov
jmp
clc
cmc
push
inc
pop
jno
mov
scas
xor
lcall
aad
mov
movsb
xor
pushf
imul
enter
jb
into
xor
mov
cmp
mull
cmp
in
xchg
lock
jg
inc
mov
xor
fs
mov
nop
mov
pop
pop
ret
shl
inc
push
xchg
add
mov
mov
int3
xor
addr16
sub
imul
aam
in
enter
add
pop
mov
push
cli
fwait
divb
mov
rolb
ret
mov
outsl
outsl
pop
mov
popf
movsl
xor
sbb
sbb
lcall
jae
stos
in
in
and
dec
mov
pushf
push
and
jne
cltd
rclb
fisttps
cld
dec
cs
fwait
scas
xchg
fcomps
push
std
push
mov
inc
cmpb
sbb
sbbb
pusha
jmp
sub
xchg
movsl
pop
sub
sbb
mov
or
sbb
xchg
jo
pop
fmuls
xchg
out
loope
rorb
jns
mov
mov
xchg
cltd
sub
outsl
ljmp
add
add
pop
lea
push
add
mov
jno
jmp
xor
add
cmp
sbb
nop
in
push
jp
push
ret
push
test
rorb
fs
fs
adc
cs
push
adc
lret
lret
dec
mov
cmp
outsl
push
jo
cmp
fdivs
pop
inc
or
sti
push
pop
scas
add
and
pop
jl
xchg
push
aam
rorb
orps
jl
cmp
scas
fcoms
mov
mov
call
pop
pop
jl
add
or
leavew
lret
inc
into
sub
bound
sar
in
repz
mov
mov
xor
pop
repnz
and
sarb
shll
dec
bound
pop
ud0
movsl
stc
dec
adc
sbb
notb
jmp
out
test
dec
pop
dec
mov
push
pusha
roll
dec
xchg
lahf
fs
jmp
mov
mov
sub
and
addr16
pop
fwait
mov
ljmp
pop
loop
mov
filds
mov
xlat
ret
sub
idivb
call
adc
addr16
xchg
xchg
adc
or
mov
xor
sbb
into
movsl
aaa
dec
in
pop
jl
pop
mov
cmpb
inc
jp
fstpl
lret
bound
lock
scas
rclb
fidivrl
std
push
jmp
stos
gs
icebp
jecxz
int
push
push
shrl
xchg
test
enter
xchg
mov
dec
out
add
mov
push
jle
xor
sbb
in
je
sbb
jbe
ljmp
mov
out
testb
mov
mov
push
xchg
cs
xchg
mov
enter
idivl
cmpsl
shr
mov
cmp
mov
or
lahf
mov
mov
movsl
mov
adc
sub
cmpsl
mov
push
arpl
push
idivb
aaa
ds
or
pop
hlt
xchg
jecxz
sub
jg
dec
rcll
outsb
mov
loope
mov
mov
movsb
inc
out
cmp
mov
out
mov
inc
ret
jle
adc
mov
or
jns
sub
jns
mov
add
call
sbb
scas
stos
fs
jg
push
pop
pop
jo
push
pop
xor
mov
out
dec
mov
leave
sub
inc
add
push
mov
push
insb
push
cmpsl
xchg
clc
cli
imul
and
push
clc
cmp
or
and
push
ss
hlt
subl
roll
jns
or
jno
cmp
sbb
xchg
cltd
ret
pop
xor
inc
pop
jecxz
sub
aam
xchg
push
hlt
out
sub
push
jns
xlat
cmp
shll
das
enter
push
mov
push
test
daa
test
cmp
mov
ficoms
jae
push
cwtl
mov
jno
negl
xor
out
xchg
mov
pop
inc
aam
jmp
xor
and
mov
inc
or
add
out
mov
mov
xchg
push
in
mov
dec
outsb
in
xchg
sbb
push
call
in
cmp
pop
jecxz
aas
push
xlat
add
dec
stos
jae
push
sbb
aaa
dec
or
jle
pop
or
leave
out
or
jge
sub
xor
cmp
iret
lods
rcll
std
inc
icebp
out
xor
test
xchg
dec
pop
out
divb
xor
xlat
push
mov
cmpsl
jge
je
hlt
cmpsb
mov
or
jge
add
data16
cmp
jb
mov
mov
jbe
add
enter
sub
dec
out
add
leavew
cmpl
decl
add
rcrb
addl
mov
mov
xchg
lods
mov
jle
test
test
sahf
jp
push
shlb
xchg
or
and
ja
jl
pop
inc
rcr
xchg
jp
fistpll
jl
xor
arpl
pushf
and
sbb
and
xor
test
mov
fwait
sbb
xor
test
xor
pushf
ret
nop
mov
sbb
orl
adc
in
shl
inc
pop
mov
mov
call
jne
repz
xchg
mov
xor
insl
lcall
and
mov
xchg
lock
mov
vmovaps
cltd
and
and
mov
jmp
hlt
les
jbe
lahf
mov
pop
inc
cli
pushf
inc
addr16
test
inc
pop
xchg
push
test
out
push
addl
das
ret
jle
stos
mov
pop
mov
test
dec
sbb
subl
jle
adc
lea
adc
pop
imull
sub
aaa
stc
push
inc
ja
jl
fwait
xchg
orl
pop
or
mov
clc
mov
fwait
sub
scas
scas
push
test
inc
aaa
shrb
jl
dec
sub
sub
bound
inc
and
adc
sub
dec
push
dec
bound
dec
jmp
adc
and
xor
in
popa
test
pop
stos
push
es
loop
test
adc
addl
pop
pop
sub
or
jnp
jmp
mov
jns
push
xor
mov
out
repz
sbb
popa
push
add
cmpl
sahf
lods
vmwrite
cmp
cmp
js
push
dec
loopne
mov
popa
fptan
loopne
adc
lea
cwtl
das
mov
mov
std
fwait
sbbb
push
push
mov
dec
in
inc
push
mov
push
cmp
test
inc
jge
inc
maxps
cmc
sbb
lds
pop
mov
sbb
mov
sub
fisubrl
shrl
sub
or
cmp
pop
sub
jo
daa
mov
adc
xor
xchg
inc
dec
sub
pop
imul
cmp
sbb
push
rcll
je
sbb
fwait
incb
pop
fcomps
pop
pop
inc
loop
add
aad
push
or
push
mov
pop
lods
add
jns
insb
daa
dec
add
mov
aas
or
pop
in
mov
and
leave
rorl
add
les
fcom
dec
iret
jp
push
sbbl
dec
repz
mov
notb
xchg
or
lea
fidivs
jne
jbe
jmp
dec
insb
ret
cmpb
cld
push
outsb
ret
sub
out
pop
ss
insl
bound
pop
jo
sub
hlt
inc
arpl
add
or
sub
ds
and
pop
imul
xor
in
in
xor
je
mov
cmp
shrb
divb
pop
cmpsb
push
sub
lea
icebp
xchg
mov
pushf
mov
cmc
cmc
sub
cs
arpl
nop
fdivs
sahf
aad
cmp
jbe
dec
lahf
cmc
cmp
adc
sub
cwtl
fiaddl
ficoml
pusha
cmp
ss
fmull
jge
stc
sub
dec
push
mov
cmpsb
xchg
int3
mov
pop
push
iret
pop
test
adc
fmuls
push
cmp
pop
sbb
jb
mov
dec
cmp
test
inc
mov
sub
stos
out
sahf
mov
lock
cmp
push
inc
test
insb
sub
sub
in
pop
and
inc
lods
mov
loopne
shll
jmp
inc
pop
loop
pop
imul
lock
mov
xor
data16
dec
mov
mov
pop
mov
pusha
lock
push
pop
cwtl
outsb
add
fnstsw
pop
mov
pop
shrl
and
mov
std
jl
mov
pop
pop
cmp
movsl
or
jle
lea
in
xor
test
gs
idivl
out
popf
call
lods
aaa
aam
outsl
push
idivl
mov
jmp
aas
xchg
dec
aaa
test
mov
ret
mov
ret
mov
fcomps
xchg
js
das
mov
addr16
and
in
lock
sbb
std
inc
dec
test
jbe
das
cmp
mov
and
sub
out
lods
adcb
adc
mov
fstpt
jbe
mov
mov
jmp
scas
inc
push
push
gs
xorb
out
push
out
jmp
cmp
in
ret
ss
lcall
aam
pop
mov
jp
pusha
jnp
sub
out
mov
and
mov
jno
inc
aas
loope
aad
repnz
sub
push
sbb
xchg
mov
leave
sbb
ja
lret
mov
stc
ja
jno
pop
sti
jp
mov
inc
enter
shll
pop
lret
rolb
ljmp
jno
inc
test
rcrb
rep
dec
push
fst
lcall
lock
xchg
nop
out
repz
inc
jl
and
inc
inc
push
cwtl
out
fldln2
pop
lahf
cs
popa
iret
std
jnp
cmp
loope
xchg
xchg
pop
inc
es
ss
movsb
mov
mov
cmc
fucomi
in
cltd
mov
mov
repnz
insb
dec
dec
outsb
popf
lea
in
jns
lock
subb
jo
adc
icebp
sbb
inc
bound
jnp
in
and
jae
mov
adc
test
stos
jle
mov
cli
bswap
lods
imul
cmp
sub
or
int
dec
xor
sub
es
lock
aas
fists
push
cmp
adc
xor
imul
iret
aaa
shlb
cmpsl
sub
lahf
daa
jno
aam
mov
ficoms
mov
and
into
outsb
addb
pop
loopne
outsl
pop
lahf
test
mov
jp
xchg
jae
aam
adc
iret
loope
jecxz
rcl
inc
test
push
stc
mov
aas
cmp
arpl
call
leave
outsl
cmp
test
shrl
jl
jne
pop
int3
pop
mov
out
test
inc
cmp
mov
shll
sahf
xor
mov
sbb
fisubs
clc
push
cld
or
push
add
cli
mov
or
je
hlt
jp
ror
call
cmpb
leave
push
popa
push
pop
neg
cwtl
pop
dec
sbb
mov
pop
sub
sub
pop
cld
out
lret
adc
sub
jmp
push
push
sbb
inc
out
in
adc
mov
iret
jmp
js
test
mov
cmp
jne
jmp
mov
dec
mov
cmp
dec
sbb
ljmp
mov
arpl
xchg
cmpsl
inc
xchg
shlb
mov
push
fisubrl
mov
and
inc
jge
sbb
push
popa
flds
jecxz
add
bound
xor
gs
mov
lahf
mov
xchg
xchg
dec
les
adc
aam
sti
add
addb
hlt
pop
std
push
test
push
and
pop
outsl
and
rorl
and
dec
cmp
rorl
inc
loope
inc
dec
shll
push
or
push
xchg
clc
jg
dec
aaa
lahf
sbb
movsl
dec
mov
cmp
movsl
cmp
fsubl
cmp
js
mov
mov
out
testl
popf
dec
cmp
test
leave
in
adc
cmp
dec
cmp
in
xorl
clc
mov
cli
lock
add
xchg
mov
aam
test
mov
cmp
ret
lock
add
push
mov
pop
lods
mov
pop
mov
xlat
cmpl
mov
pop
push
nop
jno
andb
mov
mov
jno
cld
out
bound
addl
push
out
inc
ss
xlat
in
dec
dec
sub
les
push
jle
dec
mov
outsb
jg
and
jmp
call
sbb
rolb
xchg
sti
std
adc
fs
pop
aam
jp
das
lds
xchg
jnp
mov
ja
negl
sbb
inc
ljmp
cs
adc
stos
or
sahf
sub
divl
xchg
fstpl
gs
xchg
jmp
dec
out
mov
adc
lcall
mov
stos
sub
out
xchg
sbb
clc
xor
popf
or
adc
gs
lods
leave
leave
mov
enter
leave
jbe
sub
shr
inc
lahf
or
adc
push
stos
negb
lret
inc
pop
int
jge
jecxz
test
push
or
xchg
ss
mov
sarb
mov
cmp
push
jle
aad
sbb
pop
pop
and
dec
push
test
add
icebp
lea
mov
pminsw
or
and
xchg
stc
negb
inc
mov
mov
mov
jle
inc
daa
int
adc
mov
pop
pop
inc
cmpsl
cwtl
sbb
add
cs
mov
push
sahf
sub
pop
dec
inc
sub
jge
cld
push
mov
mov
and
or
test
stos
pop
into
add
test
sarb
xchg
stc
or
hlt
outsb
inc
cmp
push
or
xchg
fsub
rolb
fiadds
inc
inc
in
pop
icebp
fs
repnz
push
mov
jae
pop
adc
jmp
fwait
clc
mov
roll
or
dec
sub
flds
fstpt
jp
icebp
jl
fyl2xp1
popf
dec
jo
xorl
jns
mov
icebp
xor
mov
mov
popa
test
dec
cmp
enter
jno
loopne
cmp
movsl
test
jb
das
daa
push
push
sub
shl
pop
cmc
loope
dec
sbb
adc
xor
out
addb
mull
mov
push
into
dec
ja
in
push
dec
inc
fidivrl
mov
and
push
pop
add
push
rolb
adc
js
fwait
cli
pusha
inc
outsl
mov
insb
outsl
cmp
mov
mov
push
mov
loop
ret
test
xchg
xchg
jge
int
cmp
int
adc
jl
sbb
shlb
das
out
stos
ret
mov
sub
mov
lret
jmp
fldcw
pop
jb
ficompl
sbb
mov
stos
fimuls
fs
xor
fsubrl
andl
addl
push
sti
or
mov
adc
cmp
ret
test
cmc
xchg
cmc
xor
bound
fnstcw
mov
jb
aam
mov
or
outsl
aaa
sbb
ds
mov
cli
call
lret
gs
mov
mov
or
mov
dec
mov
std
or
mov
cmp
pause
fisttps
jg
sarb
cmp
lods
cmpsb
xchg
mov
lock
xor
fstpl
and
sub
xlat
out
xor
mov
mov
ds
cmc
xchg
addl
std
ret
push
lcall
cmp
data16
fstpl
imul
mov
mov
mov
enter
fstl
mov
stos
sbb
notl
dec
xchg
mov
xor
loop
popa
dec
mov
int
iret
cmp
imul
xchg
ficoml
xchg
in
sub
xchg
in
sub
out
pop
repz
adc
fisubs
sahf
gs
push
fdivrl
bound
and
push
sub
push
fsubr
jbe
loop
push
jmp
leave
data16
push
js
bound
and
inc
pop
shll
jo
mov
xor
or
jecxz
pop
data16
sbb
andl
mov
mov
sub
push
cmp
mov
stos
rclb
cmp
jg
mov
bound
mov
mov
scas
sub
xchg
mov
mov
aas
jo
mov
jl
les
pop
jae
sbb
adc
mov
inc
leave
aad
sub
js
js
add
lret
push
add
mov
ljmp
addr16
les
in
xor
js
fisttps
test
movsb
ss
mov
data16
fisubrl
mov
mov
ret
outsl
movsl
mov
cmp
adc
arpl
xor
push
fs
js
pop
adc
pop
inc
cmpsb
mov
ret
hlt
int
push
jne
cmpsl
clc
inc
ds
lcall
mov
mov
nop
mov
call
inc
xor
push
xchg
push
xor
sub
sub
mov
cmp
push
iret
repz
nop
ret
and
sbb
inc
shr
jne
iret
shrb
sub
push
inc
incl
and
xor
or
adc
dec
sub
sbb
int
xchg
mov
outsb
repz
inc
sbb
addr16
mov
add
gs
repnz
jmp
and
mov
mov
rolb
imul
jno
fisubs
dec
adc
shll
add
dec
test
cmp
mov
scas
jb
and
xor
gs
sbb
sub
mov
add
mov
push
mov
jmp
test
mov
rcll
aas
int3
andl
sbb
mov
add
loope
es
xchg
js
sbb
pop
push
js
adc
hlt
lods
fidivrl
mov
xor
mov
lds
shl
push
add
xor
out
daa
xlat
repnz
xchg
push
mov
xor
lret
lods
lds
jae
and
sub
pop
xor
push
adc
imul
in
jbe
ja
jbe
xchg
adc
rorb
adc
leave
and
outsl
fnsave
popf
outsl
mov
push
xchg
dec
lret
roll
jnp
test
push
mov
mov
fidivs
clc
push
pop
xor
add
pop
lret
mov
mov
je
dec
push
fisubrl
imul
test
lods
push
popf
in
jmp
inc
fstl
sbb
dec
outsl
mov
add
mov
das
icebp
scas
cwtl
out
xor
jo
ret
cmp
scas
cmp
or
fucom
xor
inc
out
lret
rorl
jnp
adc
stos
push
popf
les
outsb
mov
ret
xor
in
xchg
cmpsb
mov
popa
xorb
pushw
std
adc
sub
xchg
jle
cmp
cld
adc
in
lock
pop
push
mov
adc
xchg
cmp
test
sahf
js
or
jo
cmp
inc
sub
daa
lcall
xchg
adc
ds
hlt
push
fadds
orl
ss
insb
ror
pop
loop
popf
jl
clc
std
psubw
sahf
or
push
jp
mov
addb
std
add
loope
mov
sti
fcomip
push
outsb
push
punpcklbw
xchg
cmp
push
aas
mov
and
push
add
ja
lret
cltd
movsl
jns
out
loope
or
js
int
xor
cmp
fisttps
add
add
lret
repnz
pop
pop
addr16
xchg
adc
cmp
dec
adc
or
imul
xchg
dec
into
aad
xchg
mov
pop
sub
flds
mov
jmp
sbb
xor
dec
sbb
jne
cli
stos
jmp
les
cmp
dec
adcl
mov
setl
std
scas
ret
shl
add
lret
jge
mov
dec
sub
and
cltd
outsl
mov
push
mov
out
daa
xor
inc
dec
dec
add
cltd
enter
sarl
in
fwait
call
popf
mov
xchg
sub
inc
push
pop
or
push
jle
push
push
adc
and
ss
mov
inc
test
dec
mov
add
inc
jb
mov
xor
imul
sub
add
movsl
roll
cmp
fidivs
mov
emms
sub
aas
dec
adc
inc
movsb
mov
pop
sbb
jbe
lods
jg
jo
mov
pop
dec
stc
mov
jle
lcall
adc
sbb
nop
sahf
pop
sub
mov
leave
mov
je
or
inc
fadds
bound
mov
fisubs
lcall
shll
mull
daa
mov
mov
daa
mov
mov
scas
imul
inc
rcrl
test
adc
roll
add
xor
adc
mov
adc
and
xor
sbb
dec
add
in
xor
jns
push
xchg
shll
or
xchg
call
xchg
xchg
cwtl
orl
stos
push
jae
sub
pusha
push
cltd
enter
pop
mov
adc
or
test
aaa
cmpsb
adc
std
int
rcr
jmp
jmp
push
push
add
in
in
out
outsl
xchg
xchg
fs
mov
scas
scas
or
cmp
jp
stc
add
add
xor
lods
xchg
add
push
lahf
pop
les
cmpsb
imul
lods
outsb
pop
xchg
sub
pop
data16
lcall
addb
jmp
nop
mov
cmc
lock
nop
bound
loope,pn
jno
xor
dec
pop
push
mov
stos
stos
daa
loopne
push
push
cmp
addr16
test
pop
repz
xchg
and
pop
ds
sub
and
or
sub
or
mov
lret
rcl
mov
sub
cltd
paddb
int3
nop
lea
add
dec
xchg
mov
cmpsl
fstps
pop
stc
scas
into
movsb
in
pop
jns
test
rcrl
fcoml
icebp
vmovmskpd
or
sahf
out
rol
scas
in
fwait
fwait
or
loope
mov
xchg
mov
dec
lods
mov
jae
js
into
aam
xor
out
sbb
loopne
movsl
das
insl
adc
iret
rclb
xor
mov
mov
sbb
lds
push
push
out
in
adc
jno
jmp
sub
out
sahf
sbb
aad
or
clc
mov
ret
out
shll
and
call
fadd
lret
pop
push
mov
loope
push
xchg
lcall
dec
shll
mov
or
in
lahf
push
mov
xchg
pop
adc
push
ljmp
pop
mov
mov
mov
xor
xor
idivb
int3
sub
pop
adc
jge
or
stos
pop
push
mov
aaa
ja
dec
pop
add
test
mov
stos
dec
popa
repnz
jecxz
lret
push
int
cld
or
hlt
pop
test
xchg
mov
push
loopne
lahf
faddl
cmp
xor
flds
and
mov
sbb
jae
add
xorb
lcall
xor
push
jne
mov
shlb
int
std
enter
dec
xchg
push
and
lcall
outsl
push
ret
push
cmp
xor
cmp
je
mov
jbe
jns
cmpb
mov
out
sub
rolb
dec
outsl
pushf
add
movsb
dec
fwait
or
xor
bound
shrl
lea
pop
xchg
lret
mov
dec
sub
mov
and
cltd
daa
pop
cltd
xor
and
in
imul
pop
lret
and
mov
or
dec
inc
mov
push
jnp
popa
icebp
xchg
dec
loope
jmp
mov
inc
js
cmp
lock
invd
mov
jb
sbb
sbb
test
outsl
mov
sbb
sti
xor
dec
inc
mov
in
hlt
test
in
sub
push
push
imul
cmp
sarl
cmp
inc
jp
imul
push
or
or
ja
lcall
sti
pop
aad
gs
xchg
clc
jns
pusha
fsts
push
outsl
fcmove
pop
jecxz
xchg
ss
or
push
cmpsl
xor
fstpl
xchg
aas
pop
test
incb
xor
mov
cmpsb
add
sub
in
mov
add
jmp
xor
data16
adc
insl
movsl
imul
pop
sbbb
pop
mov
mov
push
stos
subl
xor
add
cli
xchg
add
push
mov
cltd
sahf
les
lret
inc
lods
ljmp
ja
pop
mov
sti
ja
push
into
adc
les
xor
movb
sub
stc
test
mov
fmull
or
mov
inc
mov
cwtl
sub
ret
test
pusha
mov
arpl
xchg
mov
jmp
lea
leave
xchg
jge
call
arpl
xor
jecxz
xor
pop
dec
daa
fdivs
xor
dec
ret
hlt
xlat
sbb
jmp
xorb
fs
push
call
insb
push
cmpsl
icebp
clc
mov
cmc
test
or
push
mov
xchg
sbb
pop
jne
and
mov
inc
out
xor
sub
loop
ret
pop
int3
test
inc
cmpsb
add
mov
cmovo
jge
fsubrs
idivl
loope
aaa
xchg
add
outsb
es
xchg
fadd
jl
cwtl
xor
and
leave
lea
mov
sbb
jbe
jge
cmpsl
lret
imul
jne
shl
mov
jge
mov
ja
push
jg
inc
sbb
in
adc
out
cld
nop
push
repz
outsb
ljmp
mov
xchg
in
ret
cmp
daa
mov
cltd
mov
add
repz
sti
cli
ljmp
addr16
lods
mov
fidivl
mov
xchg
mov
dec
mov
dec
add
xchg
cltd
pop
cmp
mov
jno
xchg
and
xchg
nop
out
movb
pmaddwd
rclb
pop
xor
mov
out
sti
stos
icebp
dec
and
dec
or
mov
inc
sbb
push
push
sbb
pop
cmp
and
lahf
dec
sahf
dec
mov
jp
test
test
mov
iret
stos
lretw
call
jae
test
nop
mov
dec
es
stos
sbb
mov
adc
jg
sub
lock
jmp
sbb
or
shll
dec
gs
sarl
adc
out
add
xchg
mov
movsb
stos
pop
mov
dec
orb
sbb
or
int
mov
jne
ss
xor
push
std
or
xchg
pop
pop
jp
stos
lods
adc
xor
xor
xor
xor
and
movsl
adc
mull
pop
sbb
jmp
imul
inc
mov
leave
out
push
jbe
inc
lds
pop
inc
lods
dec
lcall
ret
jo
in
ret
imul
xor
dec
int3
rolb
int
fwait
fs
cmp
xchg
xchg
je
jmp
xor
mov
xchg
imul
sbb
dec
adc
and
mov
push
rol
sbb
jae
fmuls
cmpsb
lds
jns
mov
dec
insl
scas
push
dec
mov
mov
dec
mov
repz
mov
lret
jae
mov
repnz
cmp
fcmovu
in
xor
mov
adc
push
jle
outsl
in
pop
insl
xor
imulb
dec
pop
popa
ja
xlat
push
jmp
cltd
or
push
pop
add
fnstenv
mov
aas
sbb
push
lahf
ficoms
mov
inc
and
mov
cwtl
sbb
and
das
mov
xlat
jp
shlb
and
cmp
xchg
cmp
ret
insb
pop
inc
int
jbe
ja
cld
mov
push
and
js
cmp
mov
rcl
pop
rorb
daa
pop
fidivrl
push
into
cmpsl
sub
mov
push
lret
mov
sub
insb
cmc
pop
push
faddl
add
inc
movsb
je
fnstsw
in
test
pop
inc
shrb
adc
cmpsb
fnsave
sub
mov
insb
loope
xchg
rorb
mov
ds
sahf
shll
pop
xchg
inc
mov
fdiv
arpl
sub
in
add
pushf
cwtl
dec
inc
add
int
arpl
push
xchg
orb
jle
stos
jne
and
xchg
movsl
inc
mov
or
dec
ror
inc
stc
xchg
mov
data16
loope
mull
fwait
je
push
push
rcr
and
and
inc
pop
inc
in
flds
jg
dec
mov
push
sbbl
push
mov
adc
xchg
arpl
push
popa
fidivs
lds
mov
call
scas
clc
jne
dec
pop
ja
push
sbb
xchg
sub
dec
ds
shrb
cltd
and
nop
les
dec
xor
xlat
iret
sarl
mov
daa
jbe
scas
inc
loop
lods
add
and
shl
ja
loope
stos
fildl
outsb
pop
mov
pop
cmc
xchg
rcrl
pop
repz
es
and
push
stos
xchg
push
and
dec
mov
xlat
mov
mov
and
sub
push
mov
push
stc
mov
out
jo
pop
xchg
ret
lds
pop
push
add
inc
jge
std
xchg
mov
lds
and
jg
sub
sub
add
mov
push
js
bound
sbb
xor
xor
xor
jge
jns
xchg
adc
or
scas
pop
mov
cmpsl
pop
call
mov
push
sti
xor
or
push
pushf
lret
cmc
call
imul
push
out
ljmp
stc
test
rcl
push
sbb
int3
lods
sub
dec
lahf
jmp
dec
sarb
lods
jb
xlat
jmp
popa
xor
addr16
xchg
sub
fs
test
cs
ja
loop
push
sub
mov
cmpsb
xchg
and
rep
xchg
cmpsb
int3
xorb
gs
cld
out
imul
and
stos
arpl
dec
daa
mov
jge
jecxz
std
mov
int
rclb
dec
pop
lret
scas
out
je
ret
fldcw
mov
mov
out
jb
imul
or
lret
cmp
mov
movsb
mov
les
cmc
repz
les
mov
cmpsb
scas
lods
loope
mov
jno
xchg
pop
jo
jbe
pop
imul
adc
lods
jmp
cmp
jno
hlt
shr
imul
mov
and
cltd
movsb
mov
lods
push
push
xor
adc
fwait
sub
ss
sbb
jl
aam
inc
das
ljmp
push
outsl
fwait
and
aam
cmpsb
adcb
inc
mov
lds
gs
lea
fstpt
cmp
cwtl
mov
leave
and
sti
movsl
dec
inc
adcb
inc
clc
mov
lods
push
outsl
or
jp
je
dec
mov
js
inc
and
faddl
mov
cmp
and
mov
adc
sbb
gs
sub
in
ficoml
int
adc
jmp
xchg
and
add
push
imul
xchg
add
iret
or
lcall
fsubp
sbb
cltd
stc
jnp
cli
xchg
add
add
aad
filds
lret
aad
rolb
jne
loopne
pop
sub
stos
flds
cmpsl
fidivs
dec
fidivs
ret
mov
sub
xchg
xchg
shlb
mov
shll
lods
out
add
sahf
scas
ds
push
and
push
sbb
hlt
dec
mov
loop
test
cmp
fdivrl
sub
cmp
aad
pop
dec
in
sub
out
dec
fidivl
inc
adc
xor
push
cwtl
daa
inc
in
xor
xchg
ss
mov
pop
into
mov
inc
mov
mov
adc
mov
idivl
xchg
enter
jns
and
pop
xchg
sbb
data16
int3
in
lods
mov
addb
mov
sbbl
icebp
jl
sti
pusha
cmp
cmp
add
lret
decb
arpl
mov
adc
lcall
fcmovnbe
adc
xchg
fwait
xorl
jb
jns
in
pop
adc
jne
push
sbb
adc
push
rcll
cmc
data16
sbb
dec
bound
dec
mov
sub
adc
and
jno
and
clc
test
aaa
and
mov
stos
mov
out
add
pop
jl
and
ret
in
sbbl
fidivs
mov
ret
in
scas
pushf
in
xlat
jp
xchg
pusha
pop
dec
dec
popa
cltd
sbb
pop
xor
cli
sarb
leave
push
xor
cmpsl
xchg
rep
jle
mov
mov
add
jbe
aaa
stc
dec
jno
add
ljmp
sub
aas
jae,pt
out
push
mov
mov
aad
iret
mov
aam
insl
dec
pop
test
fmull
insl
mov
mov
jle
mov
xchg
stos
movsl
lret
imul
int3
jno
xchg
pop
and
stos
pop
xor
lret
test
push
insl
add
out
mov
cmp
daa
sbb
mov
cltd
mov
cmp
loope
mov
lock
xor
push
cld
push
pop
mov
lds
inc
or
aas
push
mov
or
fisubs
cmp
add
testl
pushf
sub
or
jo
xchg
push
movsb
sbb
xor
adc
jg
repz
inc
clc
sbb
jns
dec
int3
pop
pop
push
call
movsb
sbb
ds
pop
cwtl
pop
adc
fnstsw
inc
movsl
mov
mov
sbb
mov
dec
inc
mov
and
aas
icebp
push
mov
sub
jbe
popf
add
in
cmpsl
scas
jmp
ljmp
sub
add
and
mov
add
push
jb
inc
imul
insb
ret
xor
fnsave
fwait
subb
jo
es
mov
adc
scas
add
jae
xchg
adc
pusha
push
xchg
jo
sti
repz
aam
dec
push
jo
xchg
ja
pushf
test
pop
cmc
es
jbe
insl
movsl
cmp
mov
or
rcrl
xchg
xchg
push
mov
dec
mov
addr16
repnz
pop
inc
xlat
js
inc
dec
push
and
mov
adc
cs
cmp
lahf
and
scas
mov
mov
mov
scas
nop
iret
mov
imul
ret
adc
cmc
movsb
and
insl
decl
inc
mov
inc
jl
sub
repz
lahf
test
les
jns
xchg
lahf
mov
mov
test
iret
outsl
hlt
jnp
sub
lods
rcl
push
and
js
mov
adc
cmpsl
cmp
outsb
adc
arpl
leave
jo
xor
dec
add
dec
ds
mov
fs
xchg
adc
popf
jle
xor
xchg
fwait
jae
loopne
adcb
dec
repz
xchg
pop
in
popl
rolb
push
shlb
cmpsb
push
lret
mov
fdivrl
add
clc
add
sbb
push
ss
xchg
fs
adc
jae
sbb
leave
cmp
mov
lret
dec
adc
mov
loope
xchg
or
ret
add
fimuls
or
mov
into
scas
push
mul
shrl
pop
pop
in
lds
daa
cmp
add
ret
and
jo
inc
fcom
and
in
cmp
pop
mov
adc
arpl
imul
stos
icebp
mov
or
add
jecxz
je
test
and
sub
jns
cmp
pushf
fwait
adcl
mov
push
les
or
add
leave
xor
imul
adc
stos
rolb
jmp
inc
lahf
pop
stc
xchg
dec
mov
bound
test
popa
stos
sbb
or
stc
lock
jae
sbb
ret
dec
aas
je
and
jecxz
and
or
ja
ret
leave
pop
pop
and
push
ret
xchg
lea
inc
lret
mov
nop
xor
je
jmp
movsl
jp
stos
jp
or
jg
aas
jno
call
sbb
xchg
dec
adc
sub
xchg
xchg
imul
test
jb
xchg
ret
cmp
push
clc
adc
test
xchg
cli
bound
rcl
popa
mov
gs
mov
pop
jo
mov
in
push
mov
cmp
aas
insb
out
int
and
push
jne
jecxz
cmp
mov
push
lahf
scas
and
and
arpl
sub
xor
xchg
ret
xchg
aam
or
push
xor
loop
std
mov
dec
das
sub
or
sub
or
sub
xchg
cmp
daa
pop
push
pop
push
push
xchg
cmp
mov
rol
sub
mov
push
int
mov
mov
insb
decb
jp
je
mov
cltd
lret
cwtl
mov
cltd
lds
add
ret
out
push
jmp
pop
jmp
jb
pop
dec
ds
xlat
sti
ljmp
scas
add
mov
data16
outsb
js
lds
jnp
cs
mov
add
in
jg
cs
enter
insl
xor
iret
out
push
dec
xor
push
xor
dec
ja
and
dec
loope
cmp
clc
repnz
mov
and
call
jge
push
movsl
daa
mov
push
pop
add
sub
xchg
mov
ret
sahf
pop
idivl
loope
cmp
sub
sub
outsb
std
int
pop
push
mov
sbb
movsl
push
dec
fstpl
dec
xor
cmp
inc
add
jbe
std
add
enter
mov
sub
pop
aaa
xchg
jle
sbb
sahf
jge
out
mov
inc
jg
testl
nop
mov
imul
fildll
mov
inc
lahf
das
push
sbb
lahf
mov
push
and
rorb
ret
pop
mov
das
xor
push
shlb
xchg
leave
loopne
mov
jnp
dec
stc
ret
inc
cmp
outsl
cmpsb
adc
jae
and
cmp
lock
testl
xor
sbb
jl
mov
mov
xchg
shr
es
es
adc
fsubrl
out
gs
popa
cmp
inc
cmpsl
push
dec
rclb
insl
out
rcll
out
repz
repz
prefetchnta
cmp
arpl
sub
cmpl
mov
and
jecxz
cltd
xchg
cmpsl
enter
aad
jno
mov
popf
arpl
cld
lea
ss
jbe
mov
mov
sti
jmp
int3
imul
daa
in
int3
fsubrs
repz
arpl
xor
pusha
adc
in
test
jp
daa
adc
xor
mov
sbb
fs
pop
lahf
lahf
cmp
addl
mov
jmp
and
ja
mov
adc
adc
cld
mov
lock
xor
pop
dec
sbb
call
jecxz
xlat
add
orl
nopl
push
jns
xchg
pop
test
add
dec
cmp
rol
pop
mov
stc
jmp
inc
leave
vhsubpd
fldt
stc
sbb
sahf
xlat
mov
test
in
pop
aaa
cmc
add
xor
insb
int3
stos
loop
xchg
data16
xchg
orb
outsl
rorl
enter
ljmp
pop
mov
pop
repnz
pop
mov
xor
dec
popa
mov
iret
ja
in
push
in
ret
call
dec
push
xor
test
scas
cmpsb
and
jecxz
ljmp
cmp
call
push
fildl
adc
push
sbb
sarl
mov
push
jno
or
push
mov
pop
pushf
mov
xlat
cmp
inc
lock
sbb
call
repz
fbld
pop
push
cmp
or
cmp
mov
and
mov
leave
in
inc
gs
imul
jmp
stc
aaa
es
or
cmpsl
pop
das
adc
add
jp
lcall
jo
mov
pop
ret
aad
aaa
sbb
push
subl
mov
test
andb
pop
push
push
xchg
xchg
popf
stc
adcb
and
scas
sbb
jb
jmp
jno
out
add
adc
mov
or
dec
dec
jge
gs
add
pop
xlat
jmp
fcomps
imul
xchg
fwait
sbb
clc
stos
lods
decb
inc
mov
push
dec
ds
xchg
loop
dec
fstps
test
mov
sub
mov
mov
pop
js
insb
sub
out
pop
mov
add
leave
je
cmp
and
cmpsl
loop
das
sbb
icebp
or
sub
enter
test
add
imul
mov
fwait
sbb
jg
hlt
daa
xor
push
adcl
sbb
lahf
jne
and
jge
shl
xor
push
sub
push
push
or
loopne
adcb
loopne
and
sub
dec
xor
jae
or
pop
fmull
jo
push
or
inc
cltd
sti
rep
fnstenv
call
testl
pusha
mov
in
cmpsb
das
sub
push
imul
mov
xor
xchg
clc
gs
lahf
arpl
outsb
jne
in
sbb
jae
add
fcoms
loop
outsl
loope
jne
out
push
push
arpl
loop
jae
call
and
mov
scas
sub
mov
in
inc
orb
sbb
nop
jg
icebp
and
push
pop
movmskps
push
cmp
outsb
xchg
shl
je
sub
mov
push
lods
scas
shll
shlb
insb
mov
mov
mov
xchg
xchg
jo
xchg
mov
je
lcall
hlt
cwtl
xorb
fsubs
dec
mov
iret
jno
cli
xchg
mov
cvtps2pi
sarb
sub
fsubrl
and
lret
and
push
fs
mov
cmpsb
add
pop
jb
clc
ficomps
jle
cmp
inc
or
fmul
fcomps
popa
popf
or
inc
repz
dec
lret
dec
frstor
mov
lcall
lea
inc
je
jmp
pop
jo
mov
cmpb
sub
adc
and
iret
xchg
mov
add
shr
call
pop
or
pop
addr16
aad
cmp
int3
add
push
mov
cmp
bound
ret
cmp
jne
ds
fwait
xor
add
xchg
inc
and
ret
cmp
hlt
loope
jmp
in
mov
push
sbb
adc
xor
in
insl
int
mov
mov
mov
dec
aad
notb
xor
push
dec
sub
mov
frndint
push
gs
scas
insb
xor
lods
stc
and
mov
push
aaa
xchg
pop
lock
sbb
cmc
cmp
push
mov
add
push
pop
lahf
mov
fucom
fcoms
or
and
dec
push
add
in
mov
cs
test
jl
sar
sbb
xchg
and
leave
add
popa
add
add
enter
mov
push
out
mov
clc
bound
loope
sbb
xchg
inc
je
imul
rcrb
jmp
pop
push
add
dec
out
sub
and
adc
call
mov
cmp
or
subl
sub
lods
js
out
clc
or
repnz
ljmp
fld
rolb
or
xor
in
xchg
mov
adc
mov
nop
into
xchg
jecxz
lret
xor
pop
cmc
outsl
cmp
shr
sub
jnp
sub
test
xchg
popa
movsb
negl
push
mov
inc
mov
fildl
sub
push
aad
aam
dec
or
loop
mov
inc
stos
cmp
pushf
adc
outsl
cmp
test
ds
mov
icebp
xchg
daa
xchg
xor
xchg
cli
dec
xor
cltd
scas
imul
mov
jbe
pop
addr16
stos
jmp
add
ss
add
xor
loopne
insl
shl
mov
ja
xor
pop
inc
dec
dec
xchg
xor
pusha
shr
repnz
dec
fcomps
adc
aad
ljmp
loopne
lods
das
adc
popa
int3
mov
fdivs
ret
add
mov
add
lods
adc
lods
and
test
aaa
xchg
stos
je
lahf
ljmp
xlat
xorl
shrl
xchg
stc
cmc
sub
clc
adc
iret
sahf
add
lock
mov
push
push
add
add
jbe
inc
add
add
sbb
inc
mov
sti
aam
xor
and
cmp
icebp
insl
cmp
sub
mov
pop
xor
xchg
jbe
scas
inc
xchg
std
push
inc
ficoml
movsb
sub
dec
loope
pushf
inc
ret
xor
fisubrs
pop
stc
sbb
pop
mov
mov
out
xor
cmp
mov
jnp
out
xchg
out
in
fwait
popa
sarl
jae
arpl
or
shlb
clc
push
jge
add
mov
es
push
pop
mov
jl
and
in
ljmp
in
dec
xor
or
pop
xchg
pushf
and
loop
imul
fdivrp
scas
cmpl
cmpsl
pop
jp
popf
xor
lahf
dec
ret
mov
sub
adc
mov
jg
mov
push
cmp
mov
insl
pop
lock
mov
ds
sti
fbstp
out
outsl
shlb
je
lods
add
or
loope
jno
cmc
adc
imul
out
into
mov
mov
adc
fldl
add
adc
in
or
loope,pt
ficompl
aaa
or
cli
cmc
orl
fidivrl
cli
and
das
jge
cmc
shll
pop
stos
fnsave
jmp
outsb
ss
sbb
iret
mov
cs
pushf
ljmp
cmpsb
push
imul
into
subl
add
mov
test
bound
stc
push
xchg
clc
mov
das
ret
outsl
push
leave
inc
mov
std
pop
pop
jle
pop
mov
mov
fdivr
scas
out
sbb
lods
mov
mov
lock
xchg
mov
sbb
incl
add
popa
mov
dec
int
cmc
xchg
mov
jg
mov
cmp
inc
jp
movsl
xor
push
jae
scas
mov
loop
xchg
std
les
pop
add
jo
jmp
jb
jns
pop
imul
cmc
call
mov
cmc
sub
sub
xchg
xchg
mov
inc
sbb
dec
sub
xor
mov
mov
mov
stos
dec
jge
ret
inc
addl
mov
data16
or
sub
data16
call
sub
dec
mov
cltd
cltd
xlat
mov
lret
and
mov
fwait
pop
sub
push
fistpll
adc
inc
add
jb
xor
lret
and
mov
sbb
test
lret
andl
fs
decl
lret
scas
jmp
mov
xlat
adc
adc
jp
push
mov
scas
mov
int
push
movsl
mov
enter
mov
mov
mov
xor
ljmp
nop
popf
test
in
stos
pop
orl
add
or
nop
inc
add
cld
and
add
daa
stc
cmp
inc
sbb
mov
push
dec
dec
out
pop
dec
pop
aad
push
jae
fmull
inc
daa
or
daa
xchg
enter
mov
jle
out
stos
push
fwait
pop
mov
gs
pop
sbb
fldt
loopne
aam
xchg
sahf
std
xor
aad
jae
add
aas
push
cmp
pop
cmp
adc
sti
inc
punpcklbw
mov
arpl
scas
and
cltd
fistps
xchg
dec
pop
stc
loopne
popf
jp
cmpsl
dec
loop
call
ds
lahf
sar
xchg
inc
jmp
mov
sbb
shlb
xchg
sub
sub
sbb
sbb
fwait
push
cmp
sub
cld
decl
das
or
popf
push
jle
cltd
dec
mov
inc
pusha
jne
divb
fs
cli
lea
xor
loope
outsb
or
sub
add
addr16
push
adc
fwait
xchg
inc
or
scas
or
mov
or
jecxz
fs
das
and
jb
cmc
push
mov
into
jb
mov
lret
cld
jg
inc
shll
inc
std
out
ljmp
loopne
clc
cmpb
hlt
cmpsb
xchg
push
lahf
push
cmpsl
lods
push
ja
lcall
or
movsl
repz
stos
bnd
enter
ss
int
and
mov
push
push
ljmp
cmpsl
fcmove
out
imulb
repz
shlb
iret
lock
push
sbb
ss
test
lcall
jno
arpl
fs
jb
loopne
rclb
clc
ret
rcrb
mov
jge
sbb
lcall
mov
mov
lahf
int3
cwtl
adc
in
adc
pusha
and
mov
sbb
mov
repnz
jns
xlat
sub
rolb
fadd
xchg
aam
mov
daa
mov
arpl
and
mov
jecxz
jne
and
jno
mov
inc
std
dec
aad
cmp
pop
int
sbb
notl
in
out
arpl
xorl
add
pop
lock
jno
lea
and
adc
daa
aam
cs
mov
jmp
das
jo
dec
adc
jno
leave
pop
adc
add
dec
adc
int3
scas
lret
xchg
lahf
mov
cmpsb
xchg
xorb
cmc
xchg
add
cmp
pop
jle
jecxz
js
leave
pusha
adc
sub
in
mov
cmpsl
leave
jo
cmp
iret
aaa
sub
sarb
inc
mov
mov
jno
lds
push
push
push
or
rolb
jp
cld
pushf
sbb
aam
pop
sbb
push
inc
push
add
jne
scas
in
pop
enter
mov
xor
mov
loopne
sahf
pop
xchg
jmp
cmpsb
dec
xor
pop
hlt
adcl
xchg
repz
insl
sbbl
jns
adc
pop
lods
jle
pushf
out
cltd
add
int
loope
bound
and
les
inc
insb
lret
outsl
add
push
inc
adc
cmp
rcll
decb
ss
sbb
xor
lret
arpl
push
xchg
dec
mov
mov
add
or
or
mov
loope
xchg
outsb
and
jnp
addr16
decb
jl
sub
pop
pop
lea
add
inc
arpl
shlb
daa
jl
add
xor
xor
push
mov
ljmp
xchg
cs
adc
push
jge
fisttpll
or
sbb
insb
sarb
mov
dec
mov
sbb
mov
rorb
and
xchg
cmp
ror
xchg
cmpsl
loopne
popf
pop
fisttps
cmp
inc
ds
xor
adc
aad
popf
scas
lods
and
imul
cld
pop
jg
sbbb
fldcw
jp
jecxz
fmuls
ljmp
mov
jbe
shlb
jmp
add
and
push
mov
add
dec
jl
cmp
fdivrs
fisttpll
sub
popa
push
sbb
xor
adc
xchg
loopne
in
insb
xchg
fdivr
stos
in
cmp
out
nop
lock
ret
es
mov
loopne
in
enter
mov
sub
scas
cmpb
out
mov
mov
push
jg
xchg
add
out
cmpb
ljmp
jmp
dec
cmc
xchg
dec
xchg
jle
out
adc
test
sub
dec
scas
sbb
fldenv
xor
sub
push
or
imul
inc
fnstsw
lods
addb
and
mov
repnz
inc
aas
popa
dec
pop
mov
jl
fidivrs
and
adc
and
xchg
iret
sub
out
out
cwtl
lods
mov
test
sub
subb
loope
enter
cmp
das
sub
aam
xchg
subl
das
invd
lahf
mov
mulps
sub
cli
push
inc
jo
out
sahf
push
addr16
and
jae
movsb
xor
adc
aam
jae
aam
addr16
ljmp
pop
jg
inc
jmp
adc
iret
bswap
fisubs
adc
rcrl
aaa
push
sbb
mov
pop
mov
jp
out
lds
adc
cli
scas
mov
pusha
leave
sbb
aad
inc
jl
cmp
gs
and
jmp
in
dec
or
scas
push
testl
sub
fidivl
in
lds
push
ficoms
jmp
sbb
data16
add
jg
xabort
sub
jp
dec
test
aaa
and
mov
es
outsl
fwait
repnz
sub
inc
stos
adc
les
pop
cwtl
fcomps
fldcw
leave
aaa
movsb
adc
test
or
pop
cs
pop
fnsave
mov
sub
jle
mov
in
mov
mov
mov
outsb
and
pushf
cmpsb
sahf
in
orb
shlb
mov
jecxz
call
psubusb
mov
addb
fists
or
icebp
stc
sub
cmp
add
xchg
stc
fnstsw
push
stos
in
xchg
mov
stos
cmp
out
dec
xchg
lock
nop
jge
cmp
or
mov
or
push
push
mov
xchg
ss
push
adc
arpl
cs
and
push
scas
es
pushf
stos
cmp
lret
push
mov
mov
add
sqrtps
les
add
cmpsl
push
sub
mov
mov
cld
loopne
xchg
cltd
xchg
mov
add
es
mov
xlat
xor
push
movsb
dec
rorb
or
xchg
shll
xorl
testb
stos
jle
pop
push
mov
xchg
cld
inc
xchg
ljmp
stos
jge
rcl
mov
inc
jne
fidivl
sbb
stos
sbb
clc
lea
rcl
mov
push
adc
jns
mov
jl
pop
mov
pop
xchg
add
lock
xchg
adc
movsb
mov
pop
int
jge
aam
xchg
jge
add
xchg
and
test
pop
sub
leave
jae
arpl
lahf
add
mov
mov
cld
push
xor
lcall
sahf
out
out
fsubr
outsb
sar
inc
push
imul
pop
jle
paddw
into
mov
mov
fucomi
aaa
leave
xchg
outsb
mov
cmpb
mov
ss
xlat
fidivs
orl
sbb
mov
push
shl
sbb
jno
pop
inc
cwtl
movsb
add
mov
inc
xchg
dec
or
arpl
push
cmp
mov
lcall
sbb
ljmp
xchg
or
in
push
and
in
xchg
stos
in
ljmp
fs
pop
loop
gs
lds
rcrb
sbb
or
or
test
pop
out
addb
rcrb
in
mov
pop
dec
scas
xor
lods
pop
jp
add
cltd
sub
inc
cmp
out
fnstcw
mov
mov
cltd
add
push
insl
lcall
fs
std
xor
loopne
out
ds
dec
mov
adc
iret
push
mov
push
mov
lods
or
lea
mov
add
push
jle
popf
or
or
stos
sub
pop
sub
fs
outsl
insl
pop
nop
lods
xchg
xchg
mov
arpl
hlt
push
mov
imul
mov
out
or
jns
mov
adc
adc
out
outsl
sub
cmpsb
jbe
add
cltd
je
fildl
pushf
les
and
sub
out
xchg
aaa
push
lret
out
and
adc
or
ds
push
cmp
out
imul
jle
cmp
loope
imul
jg
ret
xor
jo
outsb
popf
mov
roll
or
in
enter
hlt
xchg
mov
test
loope
ljmp
movsl
pop
xchg
push
mov
push
scas
stos
stos
add
cmpsb
popw
cmp
std
mov
or
pop
lea
scas
out
push
pop
shll
dec
mov
mov
or
outsl
mov
or
push
aad
rcll
loop
mov
sbb
xchg
ja
fs
rcrl
fsubl
inc
pop
shlb
adc
hlt
mov
std
lret
aam
stos
in
cltd
mov
out
pop
xlat
add
dec
mov
in
sub
stos
addr16
adc
fmuls
xchg
fidivrs
fwait
sahf
and
sub
sub
hlt
sub
test
gs
popf
shl
outsl
lea
jae
jle
outsl
add
cmpl
push
mov
jle
pop
js
lret
ljmp
dec
rolb
xor
call
xor
adc
xchg
arpl
push
shll
in
push
loopne
shlb
bound
xlat
or
sbb
mov
inc
sbb
jmp
inc
jmp
out
pushf
ss
cmp
inc
xchg
mov
lret
sti
adc
mov
inc
or
sub
xor
std
mov
sbb
rolb
sbb
es
lahf
mov
stc
mov
hlt
xchg
xor
push
jb
js
lock
jo
mov
xchg
xor
adc
mov
sub
sbb
or
lock
sbb
fldln2
dec
jge
sahf
fcmovnbe
gs
rcll
test
cmp
jae
outsb
fldenv
pop
dec
imul
fldt
loopne
and
enter
cmp
mov
mov
adc
xor
sub
adc
cltd
push
adc
cwtl
add
sbb
cmpsb
shll
adc
mov
mov
mov
stos
movsl
lds
aas
int
adc
lret
inc
out
pop
lods
imul
out
mov
aas
cltd
roll
repz
out
xchg
adc
mov
lret
sbb
mov
mov
cmpb
cmc
mov
loope
pushf
inc
fsubrl
stos
es
cmp
add
sbb
dec
popf
lcall
adc
popa
or
icebp
push
push
cmp
mov
dec
loope
js
mov
mov
dec
aaa
enter
cmpb
adc
xor
je
cmc
fistpll
jmp
call
imul
mov
daa
jns
ret
mov
ss
es
clc
xchg
dec
in
scas
test
leave
divb
fs
jl
jl
inc
inc
add
dec
adcl
lret
sub
inc
mov
cld
aam
insb
les
cmpsl
fsub
xchg
cmp
pop
mov
cltd
dec
insl
aaa
pop
enter
mov
bound
aam
mov
stos
pop
dec
jge
sub
mov
lods
int
loope
jae
adc
rcll
sub
sbb
sahf
je
js
xchg
bound
repz
push
cmp
out
mov
push
les
shlb
and
roll
scas
movsl
fisubrs
outsb
iret
jecxz
push
sub
cmp
loope
shl
mov
jne
mov
out
arpl
add
ficompl
xchg
lods
lret
rclb
sbb
cs
xlat
lds
insb
push
mov
dec
dec
mov
pushf
jg
inc
faddp
sbb
jmp
mov
xor
dec
push
push
cwtl
adc
in
or
das
pop
test
repnz
mov
push
xchg
in
pusha
int3
bound
repnz
or
adc
add
cltd
mov
dec
mov
aam
push
xor
mov
vsqrtsd
imul
arpl
popf
pusha
add
in
jno
lret
cwtl
jp
enter
js
push
cmp
call
out
sub
sub
sbb
cpuid
fisubrs
pop
repnz
xchg
pusha
jle
inc
add
jbe
outsl
xor
jp
jg
shll
clc
lret
data16
enter
lds
aas
jle
leave
jecxz
sbb
jl
sti
insb
cwtl
dec
xchg
push
sarl
mov
xchg
in
andl
mov
cmpsb
pop
leave
out
call
shll
xor
out
push
fwait
xor
or
jno
mov
roll
in
push
push
cmpsl
int3
rcll
pop
pop
and
fcmovnu
push
aad
mov
pop
jp
push
mov
xor
gs
sbb
ret
xor
add
pop
push
mov
into
cmp
mov
js
adc
clc
cmc
cmpsb
push
in
movsl
fstps
int3
adc
pop
ss
fstp
jnp
adc
or
adc
and
pop
dec
mov
icebp
shll
xchg
push
ss
xorb
cmp
ss
cli
nop
cli
pop
sbb
xlat
test
pop
sbb
jg
push
insl
or
or
in
mov
aad
or
aaa
push
andl
or
cmp
test
or
and
insl
xchg
pop
inc
inc
aad
mov
mov
pop
sub
pop
dec
ljmp
pop
imul
outsb
fs
stos
push
push
outsl
cmpsb
sub
push
cmp
mov
sbbl
mov
lret
push
inc
xchg
inc
ljmp
sbb
push
mov
call
push
ret
push
imul
and
dec
int3
js
dec
add
jno
aam
pop
push
dec
jb
xchg
mov
fimuls
inc
or
dec
fldcw
inc
add
push
mov
lods
sbb
dec
leave
push
les
test
mov
inc
sahf
sub
and
aas
xor
nop
clc
inc
mulb
jl
insb
push
mov
test
subl
clc
imul
push
mov
add
mov
mov
or
push
mov
mov
shl
sub
mov
pop
aas
repnz
icebp
in
sbb
cli
je
xchg
add
adc
push
lods
mov
mov
mov
fwait
sub
outsb
push
jecxz
add
lea
mov
sub
ret
jmp
sbb
cmpsl
adc
jmp
sbb
pop
xor
daa
aaa
xlat
mov
sbbb
jmp
pop
push
adc
pop
ret
aam
ljmp
leave
pushf
mov
icebp
fcmove
or
and
popa
cmp
mov
adc
jno
adcb
xor
ret
xor
sub
daa
bound
mov
fwait
sbb
leavew
leave
jae
xchg
sub
mov
jno
mov
xchg
js
aad
push
das
imul
push
imull
dec
add
sub
es
std
mov
negb
pop
out
push
cmp
push
and
sub
xor
mov
sar
mov
adc
jg
jb
loop
mov
loopne
dec
cmpb
sbb
ljmp
or
sbb
jnp
pop
pop
jns
test
in
xor
mov
mov
jmp
mov
pop
pop
nop
pop
cmp
xchg
outsl
insb
add
and
arpl
mov
bound
popf
addr16
pop
scas
xchg
ljmp
or
xlat
jae
inc
jecxz
add
lods
mov
rorb
stc
push
sti
mull
ret
mov
fadds
in
add
loopne
push
jmp
fcomps
shrl
fisttpll
mulb
xor
nop
fsubrs
pushf
into
mov
jmp
sub
jl
rcrl
pop
or
std
sbb
mov
ret
mov
pop
adc
jmp
dec
or
xchg
adc
rcrl
xor
jge
jmp
add
lods
jle
loopne
mov
cld
inc
lcall
loopne
test
stos
ljmp
test
outsb
cmp
ficoms
dec
xchg
xchg
daa
test
pop
push
cld
les
ljmp
inc
jbe
rcrb
stos
or
dec
jg
aam
cmp
cld
lds
aaa
xchg
pusha
or
mov
mov
pushf
scas
repz
push
inc
scas
arpl
aas
cli
push
or
inc
add
bound
cli
cmp
add
je
or
test
dec
dec
fisttpll
loopne
lods
out
arpl
mov
andb
push
pusha
lret
sahf
movsl
mov
fldenv
cmpsb
fldt
nop
adc
cmp
pusha
not
cmpsb
jo
cltd
xchg
dec
cmp
test
hlt
fsts
stos
mov
lea
repnz
rcll
cmpsl
sbb
div
mov
mov
loop
jo
xor
lock
cmp
movsb
push
dec
movsl
fcomps
mov
bound
pop
js
cltd
rcr
xor
mov
inc
cmp
movl
iret
mov
call
clc
adcl
popa
pop
push
rep
aaa
popf
push
cmpsl
les
in
push
or
jp
bound
xchg
jmp
mov
fndisi(8087
shll
jl
pop
and
out
cmp
pop
lret
loop
cmpb
outsl
push
aaa
lahf
mov
xor
test
ds
ja
push
push
mov
push
stos
pushf
insl
sub
xorl
rcrb
xlat
addr16
sbb
cli
fs
mov
es
dec
inc
sub
add
mov
clc
jae
stos
xchg
call
sub
add
cmp
andb
jecxz
xlat
or
repnz
int3
out
jb
call
addb
aaa
pop
fbld
or
pop
jo
out
dec
jo
xchg
subb
jo
outsb
dec
add
xor
pop
pop
jg
int
sub
nop
and
mov
sahf
int
je
clc
push
adc
adc
push
mov
push
std
pop
and
out
inc
insb
push
outsb
mov
pop
push
mov
jecxz
push
push
jge
dec
or
adc
pop
inc
fwait
dec
mov
and
add
add
mov
inc
outsl
stos
xchg
lds
push
loop
adc
adc
pop
je
or
cs
daa
add
sub
push
jle
and
fsubl
movsl
es
js
ljmp
or
jnp
iret
in
mov
dec
fnstcw
sbb
bnd
out
aad
cmpsb
mov
xchg
repz
arpl
in
repz
sahf
push
outsl
in
dec
into
push
xchg
out
stos
add
je
or
arpl
inc
push
fucomip
push
push
pop
add
jp
outsl
in
mov
jmp
mov
mov
push
incl
popl
jle
mov
in
or
andb
pop
and
in
pusha
lds
jg
shlb
sbb
ret
divl
push
sbb
push
and
aam
addr16
and
or
stc
mov
jle
in
xchg
add
cwtl
cs
cmp
jg
mov
mov
inc
jno
sub
nop
jg
ljmp
dec
cmc
lret
add
fisttpll
mov
pop
sbb
push
xchg
les
or
mov
sub
push
fidivrs
xchg
xor
das
je
push
mov
jno
test
xchg
das
adc
gs
mov
jp
xchg
mov
pop
scas
cmc
jecxz
sbb
or
ret
sbb
sub
pop
in
cmp
aas
xchg
pop
push
dec
lahf
cmp
rclb
or
sar
xchg
inc
insl
scas
jb
mov
sub
and
rcrl
pop
pushf
mov
pop
inc
or
mov
pop
out
adc
loop
and
lret
int
jecxz
hlt
mov
jg
xchg
sbb
add
les
and
sarl
les
test
es
push
idivl
jle
jge
daa
iret
xor
stos
jbe
sub
mov
jmp
mov
and
das
add
push
pop
repnz
xchg
mov
pushf
xorl
push
mov
push
ret
xchg
out
outsb
aad
roll
lret
outsl
negl
inc
dec
inc
or
pop
dec
xor
add
test
or
jp
int
popa
mov
popf
adc
sbb
push
ds
xchg
movsb
cmp
inc
adc
lock
push
das
data16
movl
scas
rorb
scas
repnz
cmpsl
pop
in
jmp
mov
insb
and
and
scas
mov
cmc
stc
es
or
xor
inc
sbb
cs
fsubs
or
je
dec
dec
adc
or
cmpl
ljmp
push
fmuls
je
popa
mov
adc
jb
mov
cli
incb
sub
jecxz
mov
shrl
and
cmp
das
sti
movsl
cmp
inc
les
shlb
xchg
mov
fsubl
mov
lods
cmpb
and
call
call
pop
mov
scas
movsl
xchg
fwait
movb
pop
divl
and
aas
mov
add
sbb
xor
jo
mov
push
sbb
movsl
jns
push
push
js
test
mov
jmp
push
insl
enter
xchg
sbb
pop
push
subl
mov
and
lcall
sbb
jge
sub
mov
push
or
rcll
std
add
popl
clc
add
pop
rcll
or
lock
push
jnp
rcrb
jmp
daa
mov
enter
test
in
xchg
xor
in
push
mov
dec
inc
in
xchg
cs
push
jo
xor
pop
mov
test
test
add
push
enter
lret
cmp
jecxz
jp
imul
push
lret
cmp
rcr
adc
add
enter
std
fwait
jb
xor
mov
push
lret
leave
orb
cmp
push
out
scas
fs
mov
push
xchg
dec
test
cmp
scas
mov
add
or
test
int3
mov
adc
out
push
jge
cmc
into
test
pop
fucom
adc
idiv
std
mov
mov
inc
lret
loope
mov
mov
and
add
inc
sbb
lahf
jecxz
hlt
int3
mov
in
jp
add
add
cltd
pop
fstps
fnstcw
add
stos
fiadds
lds
dec
cmpsl
icebp
mov
dec
add
dec
data16
lcall
mov
sahf
sbb
xchg
or
daa
rclb
mov
mov
popa
cmp
ret
inc
popa
pushl
lods
nop
mov
mov
fwait
iret
add
xor
adc
pop
jno
inc
fdivs
ret
sub
imul
or
out
push
sub
ds
hlt
jns
add
cltd
dec
inc
dec
inc
and
dec
jns
sub
cmp
xor
jg
daa
add
aad
push
sbb
fsts
shlb
fildll
sbb
clc
int
cld
sub
dec
clc
mov
int3
pop
repnz
dec
mov
inc
cltd
mov
xchg
pop
dec
pop
sub
xchg
enter
adc
cmp
arpl
roll
int3
pop
out
mov
lret
fnstenv
inc
mov
xchg
push
lods
dec
sub
imul
out
pop
insb
hlt
daa
sub
cmp
adcl
mov
mov
fcmovnb
out
lret
das
out
pop
call
lods
test
dec
fcmovnb
mov
lods
les
sub
mov
push
outsb
add
cmp
fucomip
cmc
cmp
cmp
fwait
andb
push
outsb
adc
sub
shlb
into
loope
xor
mov
mov
cmp
ja
pushf
xor
mov
out
lock
adcl
fnstcw
mov
call
mov
add
and
adc
bound
ror
dec
mov
mov
sar
adc
jge
push
fs
mov
push
push
sbbl
cli
adc
negl
push
jb
ds
aad
cmpb
dec
cmp
jle
xchg
mov
xor
jge
sahf
test
pop
adc
sarl
jae
ret
mov
cwtl
xlat
outsb
les
mov
int3
sbb
push
jle
outsl
sarl
scas
xor
jno
sar
repz
cmc
sub
jo
mov
sub
add
jne
or
cmp
lahf
cmc
xchg
insl
jecxz
into
jae
rcll
jg
sarb
dec
pushw
imul
cld
xlat
cmp
jmp
mov
popa
imul
inc
stos
les
addl
mov
add
xor
jns
out
push
imul
addr16
adc
movsw
roll
outsb
out
loopne
bound
dec
push
inc
pop
xchg
push
iret
outsb
enter
into
cmpsb
ljmp
repnz
push
out
mov
ret
pop
inc
in
shll
scas
nop
popa
lret
fmul
enter
xor
mov
dec
scas
inc
mov
pop
inc
mov
insl
xor
jnp
cmc
sbb
ds
pop
enter
inc
pop
or
and
inc
jle
mov
imul
cmpsl
xchg
adc
adc
fcoml
dec
dec
xchg
xor
mov
imul
lret
outsl
test
mov
mov
addr16
jp
leave
sub
stos
add
and
add
popf
outsb
mov
mov
test
or
je
sbb
loope
pop
stos
push
cltd
xor
sub
pusha
and
cmp
scas
jns
jb
inc
xor
dec
cmc
adc
mov
dec
enter
and
sub
mov
sub
sbb
xor
sbb
and
iret
and
mov
leave
adc
insb
mov
dec
jecxz
mov
push
nop
test
or
adcl
jmp
test
cwtl
mov
loop
mov
sbb
outsb
je
jo
jge
pop
lret
or
pop
repz
pop
mov
add
fistps
scas
pop
mov
mov
stc
pop
and
mov
xchg
pop
mov
ret
dec
ljmp
mov
xchg
shlb
inc
inc
int3
adc
inc
cwtl
push
lahf
aad
mov
loopne
and
loopne
adc
lea
shrb
test
mov
cs
mov
xor
mov
inc
xlat
cld
push
lods
and
push
clc
cs
sarl
mov
adc
arpl
mov
inc
jae
dec
rorb
mov
sbb
and
pop
cmp
cwtl
push
pop
in
pop
mov
mov
mov
bound
inc
pop
sarb
xor
cmp
sub
adc
arpl
mov
push
push
push
ret
cmp
repz
enter
sub
cltd
pop
adc
push
cmp
jns
pushf
cld
mov
aad
xchg
shll
pop
mov
lods
push
add
popa
xor
test
cmp
movsl
pop
lods
test
dec
jb
inc
call
repnz
xchg
cmc
ja
in
jl
in
xor
ja
test
les
decl
mov
xchg
jge
push
hlt
xor
and
cli
lret
cmp
out
data16
or
iret
pop
idivb
int
cmp
add
dec
jns
ret
add
mov
shlb
xor
sbb
mov
loopne
jge
jle
inc
xchg
adc
dec
mov
inc
out
sub
cmp
scas
repnz
imulb
xchg
repnz
cld
pop
cwtl
cmp
jg
roll
movsb
sbb
lock
or
and
and
ror
and
jbe
les
mov
pcmpgtw
pop
pop
push
lods
mov
jge
fstpl
rolb
rcll
push
clc
adc
inc
out
test
std
mov
or
dec
cmpsl
xchg
mov
mov
inc
lods
les
movnti
cmp
addr16
add
inc
ret
lock
adc
push
mov
inc
push
cwtl
push
dec
loopne
les
lea
in
sbb
adc
push
test
gs
rcll
icebp
std
xchg
call
jmp
pop
jl
clc
stc
inc
jns
vpbroadcastmw2d
or
xchg
xchg
and
inc
sti
in
jg
stos
push
loope
pop
lcall
dec
inc
mov
rcrl
dec
mov
in
inc
sbb
xchg
jp
push
psrld
mov
and
mulb
pop
ficomps
jge
popa
jno
ja
sub
repz
arpl
test
jns
or
call
rcrl
das
pop
pop
mov
and
in
push
fisttps
cmc
insb
xor
jg
lret
jns
iret
sahf
add
xchg
ljmp
addl
cli
inc
mov
mov
xchg
inc
rcrl
push
cmp
xor
mov
xchg
xchg
adc
out
jecxz
repz
mov
sbb
inc
lret
js
xchg
push
outsb
lea
jl
cmp
jae
adc
add
sub
sub
clc
aam
push
fimull
lock
testl
and
cmpb
push
push
or
mov
add
loope
cmpsb
aaa
adcb
cmp
js
fs
lret
stc
push
mov
cltd
push
test
test
sub
mov
push
nop
and
dec
dec
dec
add
and
in
push
sub
aam
hlt
lods
leave
xchg
incb
cmp
push
and
lcall
pop
cmpsl
icebp
xor
fmul
pop
and
mov
xchg
xor
clc
call
xchg
dec
sahf
pop
jg
scas
pop
in
pop
sbb
call
push
or
inc
pushf
mov
popa
addr16
int
stc
sbb
fcoml
pop
sbb
fwait
mov
or
aas
jge
push
xchg
stos
add
cltd
and
xchg
notb
mov
inc
pop
jle
pop
jbe,pn
push
add
jg
stos
outsl
adc
jns
int
jg
test
scas
loope
sarb
sub
pop
pop
push
loop
in
xor
fidivrs
ds
adc
pop
int
xchg
push
push
add
and
dec
clc
dec
insb
test
adc
mov
lods
insl
cmp
pop
sbb
pop
sbb
popa
hlt
insl
popf
cs
dec
sbb
jle
sub
and
lahf
mov
std
lods
gs
icebp
rcrb
jecxz
cltd
test
scas
pushf
inc
fwait
and
movsl
into
mov
hlt
cs
addr16
mov
imul
movsb
mov
adc
add
xor
xlat
cmp
pop
cmp
adc
jbe
lcall
insl
mov
cmp
fistpll
icebp
inc
ljmp
xor
sbb
cld
stos
cli
push
shl
push
cmp
cmpb
pushf
mov
xchg
je
mov
lahf
dec
pusha
sub
insb
jle
cmpsb
pop
jne
out
xchg
or
push
stos
xchg
loop
data16
dec
cmc
jne
jge
aad
xor
data16
aas
in
jge
fsubl
inc
pop
pop
cmp
pop
add
push
and
push
aas
rcr
stos
stos
xor
or
inc
nop
jecxz
or
loope
mov
hlt
clc
cmpl
test
pushf
cltd
xchg
mov
sub
dec
sbb
mov
dec
sarb
fxch
lods
lods
mov
in
ljmp
mov
insb
xor
adc
push
filds
icebp
push
push
cld
xchg
in
adc
inc
mov
mov
cwtl
rolb
lret
xchg
pop
roll
mov
or
test
cs
xchg
lds
out
cli
mov
mov
jns
sub
stos
daa
mov
ret
push
pop
xchg
push
dec
aam
and
push
mov
inc
stos
add
shr
or
xchg
lods
push
xor
add
scas
mov
iret
cmp
and
icebp
ficoms
dec
jbe
fistps
xchg
push
pop
sub
popf
hlt
dec
jecxz
xchg
cmp
cmpsl
jle
jp
or
dec
lahf
or
shrl
fistl
lock
idivl
sbb
mov
leave
push
daa
popa
sbb
sub
or
fsub
lss
popa
cwtl
scas
enter
cs
testl
test
xchg
shlb
sbb
xlat
dec
cmpsb
ret
les
das
hlt
pop
push
inc
inc
ret
sub
adc
lock
push
lods
rolb
test
or
es
inc
imul
cmp
sbb
rcr
aas
dec
mov
movsb
popa
cmp
es
lds
cli
das
cli
mov
sbbl
in
mov
out
cltd
inc
fs
mov
mov
pop
cmpb
adc
lods
push
mov
cmc
pop
and
jno
add
fwait
or
and
lock
aam
adc
sti
mov
pop
sbb
pop
sub
movsb
aas
cwtl
fidivs
add
je
sbb
movsb
cs
out
adc
mov
cmovns
lahf
push
pop
icebp
dec
call
mov
add
fsubrs
test
es
loopne
sti
jno
inc
xor
push
fwait
int3
js
clc
mov
in
test
into
inc
jae
push
mov
lods
cld
and
jbe
pop
cltd
jl
movsl
aas
stos
fnstenv
jg
outsl
cltd
jmp
bound
pop
cs
rclb
addl
les
jnp
fiadds
pop
hlt
decl
pusha
arpl
daa
sub
push
mov
add
imul
lds
mov
or
aaa
add
pop
or
pop
clc
mov
sahf
inc
js
cmc
mov
and
lds
push
pop
jae
dec
sub
loopne
daa
inc
pop
daa
data16
das
cld
push
sbb
mov
adc
cwtl
nop
je
imul
mov
bound
pop
mov
adc
dec
fcmove
stos
xchg
cli
xchg
ret
sub
cli
jmp
shlb
int3
js
movsl
or
xchg
push
dec
test
out
mov
ret
fs
or
cmc
aas
into
pop
rorb
mov
sub
cwtl
daa
lahf
add
adc
stc
ss
popf
fdivs
mov
sysenter
inc
cli
data16
xor
dec
mov
xchg
sbb
push
decb
xlat
push
adc
or
rorb
push
popa
lods
test
lds
xchg
sbb
pop
lods
lahf
sbb
push
push
xchg
lods
mov
out
adc
jnp
icebp
xor
aaa
cld
xlat
inc
or
enter
jp
pop
imul
pop
push
fldenv
and
mov
and
ret
cmc
lahf
xor
pushf
das
push
movq
cmpsl
shrl
push
rcr
aaa
fimull
push
cmp
mov
fmull
mov
jmp
xchg
adc
sti
mov
stos
sub
xchg
pop
sbb
sbb
jns
lock
stos
js
pmaxsw
inc
orb
jge
cmpsl
mov
jl
push
pop
repz
lods
in
cmc
les
adc
add
and
mov
and
xor
jp
sti
dec
or
push
lret
lods
adc
jo
and
icebp
mov
xor
stc
imul
cmp
add
fidivl
in
dec
les
pusha
add
popa
test
stc
fiaddl
in
pusha
lock
rcr
cmp
fwait
divl
ljmp
xlat
xor
scas
mov
imul
inc
push
sub
push
cmp
sti
add
jb
dec
js
sbb
push
pop
nop
call
je
jb
dec
push
mov
nop
cmp
jmp
xor
fsub
pop
inc
loop
and
adc
xchg
mov
dec
das
add
adc
xor
mov
mov
loop
jl
cmp
test
pop
cmp
xchg
shll
out
mov
fcoml
sub
lret
jns
adc
cmp
sbbl
pop
in
out
scas
ret
pop
lret
sub
imul
jae
and
cmp
pop
ja
mov
or
daa
lcall
mov
fdivl
inc
pop
mov
mov
cmpb
dec
imul
cmp
repz
fmuls
or
int3
jmp
dec
or
inc
aam
push
mov
jmp
lds
subb
dec
fldt
adc
adc
add
imul
ss
pop
inc
scas
or
lods
xchg
fidivl
xchg
into
lcall
dec
rolb
jo
fldcw
mov
insb
fstpl
aad
mov
ljmp
dec
icebp
xchg
sarb
lds
sti
divl
push
xor
mov
jb
pop
cli
ficoml
cltd
sub
pop
mov
jae
cwtl
int
sub
and
ret
lret
into
mov
ret
je
sbb
lcall
fcmovu
loop
mov
push
push
or
arpl
fwait
stos
sub
lods
dec
adc
jecxz
fs
stos
push
test
inc
cmp
fdivrl
add
imul
test
jp
imul
stc
xchg
mov
dec
dec
cmp
out
push
ss
add
dec
fs
or
lea
and
push
std
mov
mov
xchg
cmpsl
daa
xor
lret
fldcw
inc
jmp
xchg
lods
or
addr16
mov
out
mov
push
push
lcall
sbb
adc
call
stos
xor
mov
popa
dec
flds
cli
or
loop
or
sub
xchg
xlat
xlat
and
mov
mov
adc
hlt
xor
js
lods
lcall
jbe
lret
shrl
jnp
xor
or
hlt
fldt
xor
nop
lea
lahf
inc
push
or
out
adc
outsb
xor
scas
push
rcrl
or
mov
pop
les
xchg
push
jmp
iret
lcall
xor
sbb
aas
ret
stc
or
cmpsb
or
aad
scas
fisubs
pop
aaa
int
icebp
roll
cmp
shll
adc
xchg
jg
inc
cmp
mov
and
lcall
pop
movsl
pop
stc
std
adc
inc
das
xchg
push
push
rorl
or
xor
xor
enter
xor
rorb
pop
inc
movsl
inc
mov
mov
out
ljmp
pop
lret
adc
xor
or
incb
ljmp
pop
xchg
push
jo
dec
mov
mov
icebp
je
inc
shlb
sbb
sbb
sti
das
sub
sahf
xchg
sbb
mov
in
sub
imul
and
lods
inc
and
bound
mov
and
std
ljmp
cmp
mov
push
mov
and
mov
mov
jg
scas
repz
cwtl
rdmsr
jo
sahf
mov
dec
dec
jle
jne
inc
ret
fs
cmp
dec
fdivs
insl
add
test
push
jp
sub
enter
xchg
rclb
shll
jecxz,pn
loopne
imul
jns
pop
stos
dec
lods
or
jae
jo
inc
incl
sbb
adc
jne
daa
jle
fistl
fstpt
jge
adc
inc
aad
mov
std
movsb
jnp
pop
sub
xor
jno
inc
dec
jne
xor
xchg
out
test
fcmovnb
xlat
popf
xor
je
sahf
icebp
mov
int
fistpl
mul
mov
jnp
xor
mov
sbb
mov
test
lods
dec
cltd
adc
mov
jne
fidivl
int
fiadds
adc
mov
insb
out
jnp
inc
cmp
jmp
clc
xchg
inc
xor
mov
imul
imul
push
dec
mov
int3
mov
adc
imul
inc
lcall
cmp
pop
pop
mov
sahf
adc
pop
and
mov
mov
sbb
mov
jle
shrb
std
xchg
jmp
gs
mov
mov
int
inc
dec
rcrb
xor
and
imul
cwtl
mov
aaa
ds
je
cmpsb
mov
or
lock
push
inc
and
or
fstpt
aas
loope
int3
lret
xchg
and
pop
sub
sub
xchg
sub
xchg
xchg
dec
loop
pop
sbb
xchg
sbb
ficomps
stc
add
mov
jnp
out
daa
mov
fidivrl
data16
and
mov
pop
push
aam
adc
cmp
or
sub
ljmp
stos
imul
rolb
push
lahf
notl
jae
mov
mov
push
inc
daa
ss
mov
xor
jnp
dec
mov
add
and
push
adc
rcrl
lret
ret
xor
scas
mov
jo
pop
out
movsl
rcrl
mov
mov
les
sub
push
rclb
dec
fsubrl
jnp
jo
in
stos
sub
add
js
cmp
cmp
add
xor
dec
push
sbb
fcoml
add
pop
setne
mov
push
sbb
mov
ret
dec
lcall
outsl
jp
pop
cli
popa
mov
mov
cmc
xchg
cmp
rep
xchg
sub
out
inc
fadds
lahf
jno
decb
jbe
cmc
mov
jno
pop
loop
mov
lret
and
pop
mov
int
cmp
ds
enter
aam
xchg
daa
jno
shl
js
popa
mov
fmuls
mov
or
inc
pop
mov
test
jb
insl
sub
mov
cmp
dec
sar
sbb
push
pop
mov
mov
adc
lods
sub
push
push
fisubl
popa
mov
lea
jmp
add
inc
adc
jl
loopne
loop
and
jb
pop
enter
ds
xor
loopne
hlt
stc
jge
scas
mov
lret
add
iret
push
imull
or
test
inc
push
adc
sub
js
sub
ret
cmp
mov
lock
cmpsl
stc
pop
pop
stos
push
sub
pop
push
lods
sub
cmpsl
mov
jae
fdivp
push
xchg
cmpsl
imul
push
icebp
sbb
lock
dec
inc
mov
mov
or
clc
fiadds
jmp
sbb
push
lea
aaa
ljmp
movsl
bound
sti
mov
add
inc
inc
sub
rolb
lahf
push
or
dec
cmp
mov
popa
add
sbb
arpl
mov
jae
outsl
frstor
cmp
insl
mul
cld
xchg
inc
js
shrl
shr
sbbl
push
ret
stos
repnz
sbb
cmp
or
pop
jo
adc
lds
popf
pop
stos
jo
sub
cmp
out
jbe
pop
mov
mov
std
mov
xor
lret
loopne,pt
imul
stc
jp
xchg
pop
cld
mov
ja
in
movsl
mov
mov
and
dec
mov
cmpsl
frstor
pop
dec
hlt
adc
cmp
int3
mov
fldl
lds
out
popa
and
movl
push
pop
ds
push
xor
insb
inc
hlt
xchg
mov
lock
movsl
bound
adc
cmp
test
out
mov
pop
sub
dec
jno
xchg
dec
xchg
mov
loope
sub
sub
into
and
in
fldt
jp
add
cltd
popf
push
jbe,pt
rclb
add
jge
test
out
stos
cmp
mov
loop
jge
fists
in
fistpl
sub
dec
inc
daa
incb
push
scas
je
sahf
mov
cmp
lret
les
divl
sbb
loope
xchg
hlt
lods
adc
cwtl
negl
gs
dec
andb
das
in
inc
inc
mov
mov
aad
jo
rcr
adc
out
sbb
adcb
cs
mov
or
das
insl
and
jmp
cmc
inc
popa
inc
jns
lods
inc
out
dec
mov
push
mov
leave
data16
daa
xor
insb
rcl
notl
xchg
xorb
popf
sbb
std
pop
fs
lock
cmp
xchg
in
dec
sarb
inc
mov
notl
sahf
sub
pop
filds
mov
xchg
jl
data16
scas
test
popa
sarb
mov
insl
loope
popw
mov
leave
pop
mov
fs
pop
mov
jmp
or
pop
int
sbb
in
dec
mov
cld
xor
jmp
jmp
out
xor
jecxz
js
insl
lock
push
imul
int
cld
sub
sahf
mov
xchg
xchg
fsubr
sub
loop
xchg
inc
ficompl
xlat
dec
bound
push
iret
inc
hlt
subl
push
xor
fiadds
pop
insl
repnz
push
sti
and
insl
iret
push
popf
ret
and
mov
ja
repz
mull
fs
push
sbb
mov
add
xchg
jle
test
and
push
push
les
dec
inc
jecxz
rcr
mov
sbb
call
popa
xchg
shll
and
and
andl
testb
mov
mov
cmpsb
xchg
inc
in
idivb
sbb
mov
scas
js
mov
push
std
das
jno
cmp
push
xchg
stos
movsb
in
push
mov
aam
test
loopne
push
cltd
jae
dec
sub
cmc
out
xor
js
mov
daa
enter
shlb
or
clc
sbb
add
fimuls
inc
adc
mov
xor
fnstsw
cmp
inc
push
test
xchg
rorl
lea
or
ficompl
cmpsb
push
cld
pop
shll
mov
filds
mov
pop
mov
aam
push
scas
push
cmpl
aas
ss
incb
jle
jle
aad
adc
in
fmull
daa
sub
and
lea
and
adc
jno
out
inc
pop
cmp
ss
movsb
gs
cmpsb
dec
repz
mov
test
push
pop
into
into
ds
dec
mov
gs
push
xchg
out
cli
dec
xor
fiaddl
cmp
imul
imulb
pop
jge
in
insb
add
push
cmp
aaa
xchg
sub
das
and
pop
cmp
adc
mov
popf
fstps
les
fdiv
les
xchg
idivb
test
adc
mov
incb
push
test
outsl
xchg
jmp
mov
or
in
data16
xor
orl
sub
mov
hlt
fisubl
outsb
cli
pop
out
mov
cld
or
pop
in
cmpsb
rcrl
mov
push
cli
add
mov
pop
jle
lds
jno
icebp
cmc
add
pop
call
lcall
push
pop
or
leave
jno
cmp
int
pop
push
dec
test
cs
jle
fidivrs
pop
pop
shl
jg
sub
out
add
dec
lock
bound
sbb
pop
sub
xchg
mov
push
mov
in
adc
or
adc
mov
lds
inc
pop
xor
pop
push
mov
add
lcall
and
icebp
jecxz
push
pop
call
fwait
xchg
or
add
cmpsb
adc
push
out
sbb
adc
sub
mov
jne
les
aad
mov
dec
inc
jne
rorb
cmp
sahf
sub
add
rorl
jne
lret
and
addb
inc
adc
push
jmp
jge
dec
bound
cmp
roll
mov
lret
pop
insl
pop
dec
sub
testl
test
sub
lcall
sbb
push
adc
divl
sub
pop
push
or
andb
fucomip
inc
aaa
push
test
or
mov
daa
push
jbe
xchg
add
sbb
in
push
adcl
xchg
insl
stos
add
das
lret
pop
and
inc
mov
sub
adc
xchg
pop
xor
xchg
push
or
sbb
xchg
outsl
in
jp
inc
cwtl
pop
frstor
in
xor
mov
pop
outsb
inc
add
and
jl
movsl
mov
inc
leave
cmp
mov
jo
test
sbb
sub
out
or
push
mov
orb
pop
xor
sahf
add
sub
jecxz,pn
addl
push
cmp
in
test
mov
xchg
rcl
popf
xchg
out
and
out
cmp
mov
jecxz
pop
cmp
ret
imul
sub
nop
pusha
mov
fistpll
ds
dec
add
cmp
dec
int
xchg
mov
mov
orl
mov
rorl
stc
orb
mov
insl
in
shlb
outsb
stos
dec
fsubrl
cld
lods
fnstcw
inc
xlat
scas
fsts
jns
fdiv
jg
repnz
fwait
lods
stos
jl
pop
ret
sbb
mov
neg
lods
inc
adc
mov
xlat
lds
xrelease
xchg
lock
or
pop
stc
into
mov
push
aaa
nop
and
adc
add
data16
xlat
fs
mov
decl
and
dec
jno
mov
lret
adc
std
ljmp
pop
je
jnp
int
xchg
pop
and
mov
add
cmp
dec
pusha
inc
or
mov
pop
std
jle
xor
pop
jne
iret
jle
stc
stos
xor
in
mov
popf
or
inc
cmp
pop
rep
mov
cmp
hlt
mov
mov
sub
mov
sbbb
fwait
xchg
das
out
popl
mov
dec
mov
ja
sub
jl
cmc
and
ljmp
test
add
aad
jae
pop
hlt
scas
fstpl
stos
mov
ss
lds
fldcw
mov
popl
inc
lock
cli
adc
fs
std
inc
push
mov
or
sub
mov
shlb
fsubp
xchg
in
repz
jmp
adc
mov
sbb
mov
xor
add
mov
cmp
in
arpl
push
jge
scas
mov
or
sub
sbb
sub
in
dec
outsb
call
outsl
lahf
inc
pushf
mulb
cmpsb
adc
adc
adcb
fs
and
and
fs
in
mov
inc
stos
mull
mov
pop
mov
inc
sub
dec
popf
add
cld
aam
int
and
or
divb
push
inc
into
or
ret
and
mov
scas
hlt
xor
pushf
push
sbb
cmp
push
lahf
sub
push
ds
iret
push
jge
cmp
cmpsl
inc
dec
or
push
dec
icebp
loopne
or
repnz
pusha
sbb
dec
xor
push
sbb
cwtl
jge
jne
call
popa
lock
mov
int3
in
fcompl
push
add
adc
mov
in
bound
sub
int3
test
xchg
int3
xchg
lahf
add
movsb
sub
scas
sub
inc
addr16
pop
fs
mov
mov
pop
out
loop
or
mov
aas
mov
cmp
dec
lea
test
push
mov
rcr
test
loopne
adc
mov
or
stos
jo
xlat
mov
push
pop
insb
or
repz
mov
push
adc
std
sub
das
lods
add
fldl
es
data16
jno
daa
push
icebp
jle
sbb
int
pop
clc
ljmp
enter
pushl
jns
xor
mov
or
scas
mov
dec
mov
mov
lds
xchg
enter
xor
pop
mov
push
aas
aad
sub
ret
lea
cmp
add
cmc
or
iret
cwtl
jo
int3
and
fsubrs
lea
xlat
sbb
cmp
popa
in
lea
jl
inc
jae
ds
adcl
adc
pop
and
imul
push
mov
pop
stc
sub
stos
xchg
xor
sbb
push
sarb
xchg
mov
xchg
sbb
jg
insl
out
in
in
sbb
in
inc
fucom
cmp
sub
in
adc
jge
scas
xor
dec
xchg
xchg
cs
push
sbb
fsubrs
test
jmp
imul
mov
add
inc
dec
inc
repz
outsb
lea
mov
fs
call
out
loopne
xchg
dec
pop
add
clc
ret
jle
pop
mov
xorb
xorl
nop
push
ljmp
out
movsl
iret
out
adc
push
xchg
testb
shll
cmp
imul
add
adc
or
std
imul
sbb
jl
mov
fucomi
adc
loop
shlb
adcb
sub
mov
cmp
mov
das
insl
and
frstor
or
pop
sub
or
pop
sub
insl
mov
sbb
xchg
scas
mov
add
loopne
cmc
and
aam
dec
sahf
sub
cmc
fwait
outsb
and
push
xchg
and
cs
inc
pop
pop
sti
insb
hlt
ss
insl
or
jae
stos
mov
iret
je
ljmp
xor
aas
daa
mov
fwait
pop
push
inc
popa
fisubrl
fwait
mov
jge
in
xchg
add
jae
jae
or
mov
pop
ss
icebp
call
adc
scas
mov
push
mov
pop
push
rcrl
mov
test
sarl
data16
lods
or
hlt
add
aaa
push
ds
and
test
sub
in
loop
push
outsl
push
sbb
push
adc
daa
jae
out
lods
inc
cmp
std
mov
mull
pop
fsubrs
jge
dec
leave
mov
mov
in
mov
subl
mov
loope
popa
into
ret
dec
repz
adc
jmp
out
mov
mov
mov
adc
into
jmp
jne
push
mov
div
inc
lods
pop
xchg
sbb
add
adc
scas
rolb
outsb
ja
adc
sub
sub
sbb
lock
inc
in
iret
daa
jb
pop
js
jne
inc
dec
hlt
scas
movsb
fdivl
sarb
adc
mov
stos
cmp
lcall
pop
and
xor
jecxz
dec
loop
sbb
out
adc
sbb
add
jge
icebp
outsl
or
add
imul
push
aaa
mov
inc
mov
fwait
sub
mov
fstpt
es
cmp
inc
xchg
psadbw
aaa
mov
xor
cwtl
ss
push
or
pop
les
aam
or
fcmovbe
jbe
push
ljmp
cmpsb
sub
xchg
xor
sbb
jge
mov
insb
sti
imul
sbb
adc
xchg
mov
sarb
push
and
mov
int3
popf
sahf
pop
jg
dec
testl
adc
mov
mov
dec
pop
roll
aam
es
sbb
in
jmp
fistpl
mov
jb
adc
mov
bound
pop
mov
xor
testb
xlat
xor
dec
adc
rcl
jp
cmc
loopne
mov
push
in
test
mov
pop
inc
cltd
shlb
shll
sbb
stos
int
jns
mov
push
cli
aaa
fadd
movsb
aam
std
mov
filds
into
pusha
jecxz
daa
notb
cmp
adc
out
mov
mov
mov
cmpsl
test
pusha
cld
pop
rcr
or
int3
jnp
sti
xchg
cmc
insb
lods
jl
push
stos
bound
cmp
adc
icebp
cli
sbb
inc
roll
xchg
test
or
push
jmp
cmp
aaa
movsl
pop
fsts
lods
out
mov
gs
sbb
pop
mov
cmp
jl
test
xchg
aad
cld
and
mov
and
cmp
and
or
add
pop
fldcw
stc
sbb
sub
fimuls
addr16
jle
ljmp
push
shrb
out
push
les
lock
xchg
sahf
mov
fbld
mov
xchg
outsl
pop
dec
jmp
repz
outsb
scas
cmc
sub
mov
mov
repnz
push
popf
mov
sbb
clc
dec
insb
sbb
xchg
sti
fldt
lret
shlb
inc
dec
daa
xchg
les
and
arpl
inc
call
xchg
and
sbb
cltd
shlb
mov
arpl
xlat
in
mov
add
inc
sub
movsb
cmp
mov
mov
into
test
in
pop
push
sbb
mov
clc
pop
into
in
test
mov
fildll
es
mov
push
daa
bound
loopne
mov
into
or
push
movsl
xor
mov
inc
mov
add
push
adc
mov
imul
aas
mov
xchg
ret
and
aas
xor
aam
cli
jbe
cli
rcrl
jge
push
and
xor
cli
jns
xchg
add
cltd
xchg
sub
aaa
lods
and
popf
mov
mov
test
lcall
hlt
sub
stos
cwtl
mov
rolb
mov
in
mov
xor
pop
sub
pop
adc
decl
and
jns
mov
mov
iret
jb
std
gs
in
aaa
out
or
pop
icebp
sbb
loopne
subb
inc
les
sub
jmp
roll
push
das
das
loopne
loope
jg
call
shlb
dec
ja
cld
pop
adc
andl
push
cmp
loop
out
in
mov
mov
popl
cs
into
cmp
cmp
andb
inc
fucom
cltd
in
daa
mov
loopne
sub
rcrb
jb
sti
cmp
pop
push
push
jle
cli
test
lahf
pushf
rcll
or
adc
stc
jns
inc
out
ljmp
add
outsb
push
js
in
fwait
mov
or
dec
sbb
sbbl
inc
movsb
rcrb
jb
mov
cmp
cmc
mov
push
mov
idivl
jns
pop
out
ficoml
or
xchg
lea
sub
adc
xchg
xor
cli
mov
push
xchg
jg
test
das
dec
xor
arpl
or
sbb
test
loopne
xchg
pushf
test
xchg
sarl
mov
sub
jo
xor
out
andl
and
adcl
sub
jb
mov
test
mov
mov
cmp
aaa
scas
push
mov
arpl
les
out
pop
pop
mov
sub
xor
pop
notb
mov
adc
mov
fwait
jb
dec
jle
xchg
pop
lcall
leave
push
lret
loope
inc
ret
movsl
sbbb
xor
push
loope
adc
xor
gs
inc
and
dec
xchg
sahf
int
out
pop
jle
jg
adc
dec
sbb
addl
jbe
mov
push
jbe
jns
movsb
xchg
test
push
jle
bound
cmp
push
cld
lock
mov
int3
or
push
jno
stos
pushf
pusha
push
mov
xchg
cmp
sbbl
into
mov
jne
ljmp
inc
enter
add
ja
aaa
adc
mov
and
mov
rcll
xchg
mov
cmpsb
sti
out
jle
push
test
fdivl
sbb
fs
inc
stc
sbb
mov
or
test
and
or
jl
pop
rcr
out
test
gs
aam
lea
movsl
sbb
repnz
data16
cmp
jne
ljmp
mov
mov
rcrb
dec
or
loope
cltd
lea
jnp
inc
push
sub
mov
cmp
xor
addr16
mov
jo
push
push
dec
ret
add
push
mov
pop
lret
aad
jae
imul
jae
jecxz
fwait
sbb
lret
or
loopne
aaa
scas
in
push
loope
lods
dec
mov
lods
lret
and
mov
stc
data16
loop
ja
xor
sbbl
xor
daa
pusha
mov
arpl
adc
xchg
test
inc
pop
pop
jbe
clc
pop
inc
inc
cmp
push
and
into
clc
pop
mov
mov
xchg
pop
pop
dec
sub
cmpsb
fistps
mov
cli
mov
push
push
gs
shr
inc
call
add
xchg
aaa
xor
rcll
push
into
mov
rolb
shrl
mov
mov
xlat
inc
jno
mov
int
fwait
or
sbb
dec
mov
adc
sbb
pop
cwtl
mov
lds
mov
cld
loop
hlt
lea
icebp
aaa
aas
inc
scas
pop
ret
dec
xchg
mov
push
arpl
push
mov
xchg
fidivrl
cmp
adc
jmp
push
lcall
pushf
ret
andb
loopne
nop
add
or
movsb
add
fistps
pusha
mov
int
scas
inc
mov
lret
fmuls
sahf
sbb
lods
pusha
push
jo
xlat
jbe
in
ljmp
jp
xor
push
je
stos
test
fs
mov
add
push
fs
sarl
iret
cwtl
lahf
out
mov
adc
test
cmp
fisubrl
gs
mov
jno
mov
ret
push
sbb
mov
sbb
sti
cmovge
lcall
daa
xchg
or
jle
jb
jbe
in
andb
outsl
mov
add
sub
dec
dec
sbb
sbb
pop
xor
cmpsl
mov
mov
mov
ljmp
mov
call
rorl
cmpsl
out
mov
xchg
inc
es
adc
jae
xor
dec
fdivr
jns
cmp
outsl
inc
aaa
cmc
cld
scas
xor
pusha
inc
adc
cmpsl
popa
xlat
scas
push
mov
xchg
mov
add
or
fstps
ret
sub
xchg
in
ss
and
pop
push
pusha
into
test
lahf
mov
xlat
shl
stc
push
pop
jl
ss
mov
and
in
sub
and
gs
ror
loopne
fildll
add
sub
dec
stc
nop
mov
aas
mov
mov
jb
mov
fistps
out
jmp
jle
jge
test
jl
push
lods
inc
inc
nop
out
mov
cmp
out
sbb
cmc
loop
jns
cmpsl
lcall
push
popl
int3
aaa
jne
fdiv
jp
arpl
cmp
cwtl
mov
cmpsb
stos
in
xlat
inc
or
mov
jo
cmp
inc
inc
dec
cwtl
pop
mov
xchg
sub
insb
add
inc
add
sub
add
mov
in
push
adc
cmp
ds
push
dec
subl
pushl
pusha
repz
and
pop
iret
arpl
cltd
mov
pop
or
jo
mov
inc
sbb
and
jo
js
add
jle
xchg
lea
decl
xchg
stos
jns
pop
jmp
mov
out
loop
popa
ss
mov
clc
pushw
mov
adc
jne
dec
aas
repz
adc
push
mov
clc
test
xlat
pop
push
jecxz
xlat
xor
push
arpl
and
outsl
jns
les
rcrb
xor
aam
idivb
mov
pop
into
lods
add
lcall
mov
mov
mov
push
jbe
push
paddd
popl
test
popa
popa
hlt
cmp
jge
sub
test
lods
mov
jne
xchg
jb
scas
mov
mov
fldl2e
lds
lds
repnz
imul
mov
or
les
lret
pop
mov
xchg
shlb
insl
out
mov
aad
push
mov
mov
xlat
pand
sbb
sbb
sub
test
icebp
aaa
imul
jno
dec
pop
out
dec
add
pop
subps
bound
lods
dec
xor
sbb
jmp
lods
mov
fistl
dec
cs
lock
insl
cmp
aas
dec
mov
pushf
push
pop
jg
push
jo
xlat
dec
stos
pop
and
je
sar
jp
js
ret
jmp
xchg
add
pop
loop
std
or
and
insl
cmp
or
or
mov
aam
or
fadd
sbb
mov
add
pushf
andb
out
inc
sub
daa
pop
jno
pushf
repnz
fwait
cmp
inc
call
dec
lods
cli
loope
add
aaa
shlb
aam
push
nop
dec
push
subb
cmpsl
pushf
jmp
into
xor
setns
sbb
push
fmull
xchg
adc
cwtl
push
inc
ret
cmp
scas
jne
push
movsb
fildll
sarl
inc
adc
sub
cmp
iret
stos
clc
xchg
leave
push
mov
aam
jmp
push
xor
xchg
sbb
cmp
fstl
rcrl
xor
addb
int
and
aam
jmp
mov
mulb
lock
sbb
sbb
lea
in
js
lods
mov
pop
inc
mov
outsl
or
mov
sub
jp
pop
mov
inc
inc
adc
fnstenv
xchg
imul
inc
cmp
add
cld
push
pop
push
xor
mov
fcmove
lods
in
les
insb
iret
leave
fimull
in
lock
fldcw
fstpl
sbb
adc
cltd
or
adc
imul
push
iret
inc
pop
ds
and
pop
or
add
test
cwtl
fldcw
cmc
pop
xchg
xor
inc
sbb
repz
clc
add
mov
in
mov
or
movsl
roll
dec
fnstcw
sti
ss
jb
adc
lods
inc
pop
cmpsb
jl
adc
mov
xlat
mov
jo
push
cmpsb
call
and
jl
jne
pop
pop
ss
rcl
sbbl
jle
jne
inc
push
js
xchg
rcrb
lds
mov
ds
out
xchg
adc
lods
xchg
mov
dec
fwait
cld
push
bound
xchg
cld
cmp
pop
das
add
fcompl
fildll
add
pop
xlat
loopne
mov
dec
call
inc
pop
into
mul
jg
pop
inc
dec
cmp
adc
int
jnp
dec
daa
in
stos
enter
arpl
fldcw
je
lods
pop
inc
pop
pushaw
jno
lcall
cmpsb
lods
adc
sbb
push
and
sti
mov
push
test
xor
and
mov
mov
incb
xchg
test
outsb
or
insb
fdivrl
jecxz
sarl
stos
jl
dec
stos
lret
pop
jns
rcrb
std
pushf
loopne
addr16
pop
ficoms
sbb
out
movsb
fs
scas
fimull
fisubrs
rorl
xchg
adc
mov
push
imul
cld
inc
cwtl
mov
or
fnstenv
push
mov
sub
out
inc
push
push
sbb
xlat
add
xor
je
sbb
and
jecxz
and
cmp
push
cmp
lods
mov
lret
cmp
mov
sub
test
xchg
mov
std
lods
mov
dec
arpl
push
out
sbb
bnd
and
mov
sbb
notl
push
xor
pop
leave
jge
out
xor
mov
jno
fimuls
out
sub
arpl
xor
fisttpl
or
inc
mov
gs
pop
pop
dec
mov
mov
nop
sbb
pop
jno
mov
inc
sbb
ds
xor
adc
cli
sub
xchg
arpl
mov
sbb
mov
push
arpl
lock
fs
add
daa
lods
sub
inc
loope
fadds
dec
out
lcall
and
cmp
cmp
sbb
xchg
lahf
divb
jl
adc
inc
jp
dec
inc
or
pop
sbb
lods
or
xchg
xorb
ret
push
cwtl
push
fisubrs
mov
pop
jmp
jae
mov
arpl
mov
insb
push
cli
and
addr16
push
dec
into
mov
pop
push
out
add
aam
sub
pop
in
sub
or
aas
les
push
mov
pop
dec
pop
inc
mov
fs
adc
stc
fwait
subl
insb
mov
ss
test
aaa
push
ret
add
inc
xor
lea
cltd
mov
mov
int3
adcl
mov
push
into
scas
orb
jne
out
mov
adc
sub
sar
or
dec
loope
jmp
pop
jge
or
mov
jnp
pop
sbb
inc
adc
mov
fistl
sbb
sub
pop
sub
dec
or
xor
cmp
mov
stc
mov
adc
mov
add
xor
xchg
mov
popf
xchg
stos
mov
sub
and
mov
jmp
divl
inc
pop
push
sub
mov
les
mov
nop
ljmp
dec
in
fiadds
mov
pop
or
out
sub
adc
adc
and
xchg
mov
push
loopne
lcall
rcll
bnd
lods
out
mov
push
and
jmp
lods
add
mov
inc
imul
lret
nop
jg
gs
mov
mov
cmp
push
lods
xor
nop
cmp
sbb
mov
icebp
inc
xchg
inc
inc
jecxz
testb
test
inc
je
mov
cmc
xor
fistpll
stos
mov
inc
mov
stos
sbbb
inc
in
push
mov
add
ror
sub
enter
pop
lret
pop
movsl
fwait
repnz
mov
lock
and
pop
fisubs
inc
push
sub
rorb
mov
push
dec
pop
jecxz
data16
jb
xchg
popa
leave
inc
fadds
cmp
cmpsb
push
mov
repz
push
or
mov
clc
ds
shl
negl
mov
push
pop
mov
out
ret
je
das
push
xchg
cltd
or
push
pop
sub
push
dec
mov
sub
mov
pusha
pushf
out
mov
cld
mov
xchg
or
dec
sbb
mov
cmpsl
lock
xchg
incl
xchg
pop
mov
pop
lcall
icebp
es
lods
lahf
or
dec
sub
loop
sub
xor
shl
sbb
mov
in
or
mov
roll
and
mov
sahf
ljmp
xchg
jle
in
arpl
shlb
cmpsl
shll
mov
mov
xchg
inc
lret
mov
cmp
ds
ja
cmpsl
inc
mov
push
dec
aaa
icebp
and
xlat
xlat
jg
adc
clc
xor
into
outsb
in
sbb
stos
adc
int
aad
ret
push
outsb
ja
inc
shlb
and
adc
loope
lds
xor
movb
incb
inc
outsl
test
sbb
jmp
adc
rcl
sbb
nop
out
loop
shll
xchg
jl
pop
lahf
and
fnstcw
cmpsl
adc
push
dec
fs
cmp
dec
dec
push
nop
data16
pushf
mov
dec
sub
out
lock
sub
unpckhps
pop
clc
into
push
adc
outsl
ficompl
sar
hlt
out
test
test
cmp
pop
das
push
nop
jmp
cltd
jb
jae
xchg
rol
pop
js
lret
adc
icebp
lods
fistps
popa
cmpsl
mov
xchg
rclb
add
in
les
xor
mov
lds
xchg
mov
jns
xchg
jno
mov
stos
and
pusha
int
or
sub
add
test
cwtl
sub
pop
add
jmp
add
mov
das
repnz
dec
cmc
popf
and
inc
add
sbb
dec
outsb
mov
mov
sub
or
test
aaa
and
mov
lds
fimuls
idivb
xor
xchg
inc
push
rorl
insl
outsl
pop
mov
jno
mov
ljmp
mov
leave
inc
icebp
push
xor
loop
xchg
inc
popa
mov
adc
jne
mov
mov
and
repnz
xchg
push
les
cmpsb
mov
leave
gs
enter
mov
test
into
xchg
mov
cwtl
adc
or
cld
mov
pushf
aas
mov
dec
or
and
xchg
cmp
push
cmp
ficomps
lds
out
div
insl
pop
movsl
xor
inc
xor
outsb
fs
xchg
loop
sbb
pop
fwait
bound
mov
or
mov
adc
mov
jno
ret
adc
lcall
jns
ret
mov
xor
mov
stos
sbb
mov
pusha
stos
push
movsl
cmp
ljmp
mov
aam
mov
cli
sub
or
std
fiaddl
es
inc
sbb
jae
fbld
xchg
jp
in
enter
out
je
adc
jge
in
popa
sbb
mov
add
jns
testb
and
shl
popf
scas
fsts
mov
psrld
sbb
adc
out
sbb
test
sti
mov
movsl
aam
movb
pop
sub
add
dec
jne
outsl
xorl
and
mov
cmp
jecxz
push
repz
dec
sti
jge
dec
adc
adc
stos
mov
jle
dec
xor
and
push
mov
and
sarb
cmc
xor
mov
fisttpl
movsl
insl
dec
xor
loopne
loop
xlat
pop
outsl
popa
push
cs
mov
scas
lea
pop
inc
test
jbe
push
push
and
out
nop
lret
jle
call
out
pop
mov
or
pop
mov
pop
dec
in
lret
sub
sub
cmovne
outsl
test
test
clc
inc
stc
sbb
ret
ret
fistpl
push
mov
or
push
cmp
xchg
cmp
stc
outsb
pop
add
jp
push
popf
fbstp
xor
imul
repnz
mov
xor
inc
mov
jns
mov
push
out
shl
adc
rorb
faddp
fdivs
imul
inc
lcall
ljmp
frstor
xlat
mov
jo
aaa
xor
lods
pushf
mov
add
js
or
idivl
je
mov
dec
xor
dec
test
xchg
xchg
cmp
pop
ficomps
adc
dec
das
addr16
fnstenv
es
sti
or
lahf
addl
or
ds
mov
mov
dec
dec
sub
adc
and
mov
testb
lret
test
popa
inc
imul
mov
stc
outsl
push
mov
pushf
sahf
jns
rolb
xchg
jae
sub
das
push
cmp
mov
mov
adc
xchg
iret
add
adcl
ljmp
cmc
xor
fistl
dec
inc
ja
sarl
addr16
mov
pop
lock
pop
adc
jbe
mov
fwait
add
cwtl
dec
aas
jbe
inc
sbb
loope
ljmp
cmpsl
and
testl
fcompl
mov
dec
pop
shrl
inc
cld
fwait
jecxz
negb
mov
rol
xor
cmpsl
sbbb
jo
push
lods
mov
cs
sahf
xor
pop
sub
push
mov
fiaddl
inc
xchg
or
pusha
addr16
and
dec
jle
sbbb
sbb
or
icebp
mov
add
inc
aad
mov
in
cmpsb
test
test
mov
pop
arpl
daa
push
cli
lret
fisttpll
mov
mov
cmp
xchg
xchg
push
adc
jae
sbb
mov
mov
adc
cmpsl
xchg
lahf
jp
add
stos
fistps
jg
mov
into
mov
movsb
nop
dec
cmpsb
add
mov
xor
and
decw
mov
xor
push
scas
jp
or
cmp
test
aas
loop
or
mov
cmp
adc
or
aas
sub
sbb
xchg
or
test
push
pop
add
and
cld
out
mov
gs
lds
sahf
ret
test
fisubs
push
out
pushf
add
or
int
pushf
push
lods
fildll
or
jge
inc
lea
add
xor
add
cmpsw
dec
cmp
lods
and
lret
add
jae
xchg
jnp
ret
test
add
into
push
test
and
test
imul
cmp
movl
xor
mov
cmp
cmpsl
pop
and
fistl
hlt
add
dec
jbe
push
fsubs
xor
jne
mov
les
mov
lods
icebp
mov
xchg
or
aaa
ds
out
imul
std
ret
rorl
cli
pop
and
jnp
and
sub
xor
cltd
or
nop
movsl
scas
cmpsl
das
adc
lods
mov
je
xor
nop
jge
icebp
cs
push
ds
test
es
jg
cs
inc
pushf
push
cltd
pop
cmp
pusha
push
jmp
add
sub
cmc
or
xchg
sub
ret
ja
frstor
dec
ret
imul
fbstp
gs
push
jns
inc
out
scas
push
mov
rclb
xchg
daa
jecxz
pop
jae
insb
fstps
sub
imul
pop
sbb
aam
mov
pop
jle
pop
sub
inc
and
cli
cmp
mov
and
inc
inc
mov
xchg
loopne
sahf
inc
sub
inc
or
jle
inc
test
lahf
pop
mov
xor
inc
mov
lret
js
pop
jae
lock
out
or
and
dec
scas
mov
adc
scas
fidivrl
mov
js
mov
out
pop
test
iret
shl
mov
inc
inc
shl
mov
stc
dec
sbb
mov
rorl
das
daa
sub
insl
jo
loopne
fnstcw
cmp
push
sub
mov
xor
fisttpll
repnz
icebp
inc
enter
cmp
pop
lret
dec
icebp
ja
iret
out
fwait
or
mov
dec
sub
xlat
popf
xor
ja
jp
dec
fdivrl
sbb
xlat
ljmp
mov
test
stos
and
inc
call
pop
movsb
repz
pop
orl
xchg
test
cmpsb
mov
out
sbb
subb
dec
fbld
or
fstps
mov
mov
xor
jns
insl
test
lcall
shlb
lods
ret
test
xchg
jmp
in
cld
mulb
pop
lcall
in
xchg
inc
jp
dec
rolb
and
jp
inc
out
loop
mov
inc
addb
jl
jg,pt
repz
xor
mov
and
loope
push
test
mov
je
and
mov
test
cmp
dec
out
cmc
daa
jp
dec
sbb
sbb
stos
add
insl
mov
mov
inc
outsb
jno
test
jl
gs
sbb
push
xor
mov
out
dec
cmp
push
xchg
mov
dec
test
stos
negb
ljmp
inc
mov
ss
out
or
out
ficoms
out
jb
loopne
mov
jb
ja
dec
mov
lock
outsb
cmpsb
mov
ja
pop
inc
aas
dec
mov
pop
inc
mov
push
mov
test
pop
xchg
mov
add
dec
mov
rcll
into
fsubs
in
push
fistpll
addr16
adc
or
mov
movsb
adc
in
loope
mov
cmpsb
fdivr
nop
stc
sbb
mov
out
sub
adc
jp
push
div
cmp
jmp
lahf
cli
aas
add
lcall
jecxz
push
mov
xor
loop
push
mov
pusha
inc
dec
cmc
mov
jg
and
sbb
cmp
loop
sahf
inc
add
das
ds
notb
fisubrl
ret
xchg
mov
mov
inc
pop
xchg
xchg
cmp
push
pop
or
test
in
jnp
mov
and
pop
lock
push
in
outsl
mov
xchg
pop
push
fisttpll
inc
aam
jne
jae
mov
xor
movsl
sahf
sub
paddsw
test
jmp
xor
ret
je
jno
arpl
iret
sub
add
xor
imulb
test
mov
popf
outsb
mov
xor
inc
test
mov
mov
cltd
sbb
push
cmpsl
xchg
clc
jg
data16
test
push
cld
and
push
jno
cltd
sbb
pop
shlb
outsb
test
and
outsl
sub
nop
xchg
pop
sbb
mov
pop
test
and
push
es
outsl
mov
mov
xchg
loop
outsb
pop
fmull
xor
xor
outsb
or
dec
repz
xchg
mov
outsl
or
into
xchg
stos
nop
cmp
subb
sbb
fnstenv
ret
push
mov
notb
sbb
or
pop
add
push
dec
jnp
xchg
dec
or
mov
sahf
je
push
push
sbb
mov
lock
cli
xor
cmpsb
lea
mov
cmp
pop
dec
sbb
xchg
cmp
call
cmp
inc
pusha
push
lret
adc
mov
dec
add
leave
iret
xlat
push
dec
aam
pop
adc
aam
inc
leave
repnz
jp
out
mov
push
or
cmp
cltd
jp
stos
data16
fiaddl
test
addl
inc
loope
test
in
adc
in
xchg
pop
inc
mov
in
xor
f2xm1
xchg
ror
xor
xchg
stc
ss
xor
sti
mov
xlat
and
ficompl
and
push
cmp
jl
jae
mov
lahf
push
jecxz
inc
lret
rol
sbb
sbb
pop
mov
cld
fisubl
and
popf
scas
es
fwait
xorl
jne
push
inc
loopne
sub
dec
xchg
ret
outsb
mov
testb
sub
dec
mov
sub
mov
hlt
pop
xor
jmp
aaa
js
xor
into
mov
lahf
loope
mov
ljmp
jns
adc
test
lahf
ret
dec
test
fistpll
xchg
insl
dec
jmp
adcb
push
dec
cmp
xor
jg
mov
outsb
pop
and
or
addr16
jae
into
fwait
sti
pop
add
call
pmaddwd
dec
pop
js
stc
rorb
stos
inc
lods
cmp
out
out
and
cltd
stc
rorb
cmp
xor
pop
xchg
scas
and
xchg
push
inc
mov
fucomip
add
ret
dec
or
stos
mov
xor
sub
or
setle
sbb
mov
nop
sbb
mov
jne
push
pop
jge
pop
fsubl
pop
sarb
ret
sahf
enter
lods
jb
scas
je
sub
stos
stos
dec
mov
mov
clc
jae
mov
push
cmpsb
iret
icebp
and
mov
stos
add
sahf
nop
aaa
pop
shlb
fsubs
cmp
mov
cli
lcall
pop
xor
jnp
push
arpl
cld
dec
sub
cmp
adc
pop
lret
insl
leave
outsl
xchg
lock
addb
bound
fwait
std
push
xor
gs
pop
dec
cmp
push
mov
sub
inc
arpl
mov
sub
in
lea
subl
xchg
pop
sub
sub
orl
lcall
cltd
negl
sub
sub
cmp
sub
lret
daa
cmp
rol
and
loopne
imul
popf
jmp
xor
push
add
and
mov
jecxz
or
add
adc
or
shrb
cmp
sub
cld
mov
dec
push
cmp
mov
shr
hlt
jg
pushf
jle
dec
je
mov
iret
mov
inc
imul
push
sti
pop
jl
movsb
dec
shrb
aam
dec
ret
int
out
ss
roll
mov
or
enter
clc
push
cmp
mov
pop
push
cmp
mov
dec
out
or
mov
mov
stc
cmp
ret
sbb
lea
adc
mov
repz
pop
inc
xchg
sub
fistl
and
add
pop
push
mul
ljmp
adc
push
int
and
aaa
sbb
addl
or
inc
jne
ss
mov
mov
das
inc
fmull
add
pop
jne
je
fidivrl
dec
xchg
adc
inc
xchg
xlat
sarl
insb
cs
mov
loop
or
in
lods
xchg
push
insb
ljmp
ret
cmp
mov
xchg
adc
mov
mov
mov
out
or
adc
insb
pusha
ficoms
adc
jp
es
test
ja
sti
mov
dec
ja
lahf
pushf
push
and
int
mov
or
add
jae
je
cmp
xchg
mov
fbstp
mov
jge
mov
stos
xchg
fsubrl
sbb
scas
mov
aam
sub
adc
shll
fldenv
addr16
test
repz
mov
and
std
mov
mov
adc
xchg
push
shrb
nop
scas
mov
or
in
push
fildl
adc
sub
mov
or
mov
pop
cltd
sbb
repnz
jnp
jno
call
mov
lret
pop
scas
cmp
insl
jmp
addr16
xchg
lds
jecxz
adc
mov
loop
sarb
inc
xor
and
iret
xchg
sbb
sbb
aas
push
test
adc
xchg
adc
iret
mov
pop
cmp
in
inc
adc
cmp
and
add
flds
mov
jp
xorl
pop
or
mov
dec
loope
int
mov
nop
or
pusha
in
clc
ret
sbb
mov
xchg
pop
into
cmpsl
push
insl
cmc
adc
mov
lret
inc
lock
and
hlt
stos
sbb
cltd
xchg
push
out
sub
cltd
outsl
xchg
mov
sbb
aad
lods
jg
xor
adc
movsb
jne
enter
ja
repz
jge
jp
cmpb
sarb
xchg
mov
push
pop
pop
xlat
push
jno
dec
sub
lahf
orb
sbb
scas
fldt
stos
fwait
sti
and
roll
mov
xchg
clc
inc
cmpsl
mov
adc
adc
cmp
pop
leave
jl
mov
or
in
add
push
sbb
bound
shll
lret
dec
xor
cmp
mov
js
xlat
fisttps
sarl
in
xor
int
sarb
pop
enter
out
push
lcall
sti
fildl
je
and
xor
push
mov
inc
jnp
out
jns
sbb
jle
pop
cld
mov
xchg
lods
std
or
jle
sub
adc
and
mov
mov
sbb
mov
scas
adc
and
in
and
sub
js
daa
mov
inc
sti
add
es
xor
rcrb
clc
je
sbb
enter
popa
loopne
movsl
adc
in
push
faddl
lahf
inc
push
mov
sbb
out
ss
or
pop
lods
hlt
mov
stc
inc
mov
cmp
add
sbb
dec
addr16
nop
push
pop
jb
test
cltd
mov
jp
cld
std
inc
sbb
mov
repz
loop
shll
add
popa
popa
dec
aaa
inc
ss
jle
ljmp
xchg
inc
imul
cmp
sarb
xchg
in
inc
fwait
add
xchg
test
sub
sub
sub
cwtl
dec
mov
sub
daa
inc
ret
nop
mov
loopne
cmp
and
cli
xchg
int
adc
ss
xchg
fldt
stc
jno
jns
xor
dec
pop
xor
mov
mov
jge
xchg
push
xchg
out
push
or
jecxz
roll
dec
daa
sub
daa
mov
ja
cmp
jp
jecxz
int3
fwait
push
push
divb
mov
adc
and
cmpsl
mov
mov
mul
xchg
xchg
jle
pop
add
notl
aad
gs
sti
leave
pop
imul
lret
mov
test
mov
adc
mov
ret
mov
or
mov
fs
sbb
mov
inc
mov
enter
xlat
int
int3
popf
xlat
pop
mov
jmp
jge
fld
dec
scas
sub
scas
mov
mov
mov
outsb
lds
mov
scas
mov
les
jmp
xor
sbb
stos
lock
cmpsl
sbb
xor
mov
mov
aam
xor
cmpsl
test
imul
xchg
lcall
aaa
and
dec
xlat
gs
adc
xchg
jno
inc
xor
cmp
fmull
fmul
fcoms
bound
pop
xor
in
lcall
pop
cmp
cmpl
sub
or
in
xchg
movsb
push
mov
add
mov
xchg
sub
push
jmp
xchg
pop
mov
test
xchg
shll
cltd
loopne
pop
popf
dec
cmp
mov
out
dec
test
adc
adcb
inc
inc
mov
cmpsb
out
cmp
jl
sub
jno
cmc
cmp
popf
pop
adc
data16
shl
iret
inc
js
or
mov
jne
out
test
fcompl
fldt
stc
sahf
mov
or
push
std
cmp
lock
aas
scas
cmp
fisubrs
lcall
cmc
push
mov
adcb
mov
rolb
cmp
cmpsb
ret
mov
es
push
mov
ret
xor
adcb
or
fldt
daa
adc
mov
es
cmpsl
test
pop
stc
pushw
push
out
aaa
add
iret
cli
insl
push
push
inc
hlt
imul
xchg
fdiv
sub
mov
jno
jge
cmpsb
and
adc
sarl
add
push
adc
int
insl
into
iret
rcr
js
int3
sti
mov
mov
insb
sbb
mov
ds
das
or
shl
add
in
mov
insl
push
dec
je
add
mov
clc
adc
adc
mov
add
fidivrl
pop
pop
int
leave
jecxz
inc
push
mov
lcall
in
xlat
push
push
cltd
leave
lret
add
fcmovnb
jns
mov
add
dec
and
mov
sbb
mov
in
lahf
js
call
outsl
mov
inc
shlb
int
and
mov
packsswb
fildll
and
pop
leave
imull
in
mov
inc
mov
sti
int
sbb
lret
les
push
popf
cmp
incb
popa
jne
cmc
int3
sbb
push
cmp
lahf
adc
pop
push
outsb
inc
and
mulb
xchg
inc
push
sarb
add
int3
insb
push
mov
jp
sbb
xchg
dec
movsl
mov
adc
xor
pop
sbb
mov
push
pop
add
cmp
jae
out
das
sti
push
rcrl
ret
add
mov
jmp
mov
outsl
sbb
xchg
push
arpl
mov
inc
mov
cmp
repnz
loop,pt
push
mov
and
inc
call
cmp
cs
mov
jp
aad
sub
push
sahf
adc
loope
jmp
push
shl
add
jne
jmp
aaa
cltd
out
mov
jge
mulb
cmp
pop
outsb
div
hlt
pop
out
cltd
mov
add
lock
test
pop
dec
lcall
shlb
inc
fwait
sub
es
sbb
loope
mov
pop
cmp
jae
iret
fdivl
pop
mov
or
xchg
add
pop
mov
sub
jns
clc
jmp
jge
cli
outsb
lret
inc
aam
out
lock
in
or
mov
popl
ds
sub
pop
int3
fistpl
je
mov
sbb
outsl
xor
xchg
test
xor
ds
dec
dec
ja
imul
cmpsb
xchg
add
arpl
cmp
lea
mov
jbe
jno
ljmp
test
sbbl
cltd
mov
mov
mov
or
jmp
in
add
mov
adc
mov
push
pop
and
push
mov
ret
scas
xchg
popf
ret
out
outsb
add
int
dec
sbb
xchg
mov
xorl
mov
sub
and
cltd
jae
mov
xor
lret
sbb
fstp
mov
je,pn
or
in
mov
aad
mov
les
jnp
lods
neg
jp
mov
fpatan
dec
dec
xor
leave
mov
hlt
dec
dec
lds
sub
movsl
mov
fxam
fidivrs
cmpsl
mov
or
hlt
jno
repz
out
dec
jg
inc
lcall
lret
stos
adc
and
out
push
add
mov
popa
mov
stc
aam
out
pop
out
js
outsl
add
and
fcomps
cmp
mov
xlat
jp
iret
lock
pop
mov
leave
cmpsl
cltd
into
xchg
adc
scas
shlb
xchg
clc
xor
sub
sbb
mov
and
bound
adc
jg
cmpsl
xor
out
mov
pop
jge
and
mov
insb
inc
jle
jge
cmp
or
popa
lods
into
pop
dec
adc
mov
adc
pop
pop
sbb
mov
jp
xchg
inc
lahf
add
pop
scas
xchg
fcompl
pop
ficompl
roll
dec
jp
int3
xor
mov
in
xchg
xlat
mov
stos
in
mov
loop
dec
clc
mov
adc
lahf
sti
stos
push
push
int3
js
aam
es
mov
fsubrl
add
insb
fadds
and
jb
pop
push
adc
lahf
rclb
push
outsb
fwait
insl
insb
sbb
test
loop
iret
dec
and
pop
inc
cmp
loop
lcall
mov
movsl
sbb
repz
xchg
or
sub
inc
pop
out
dec
inc
pusha
nop
and
jge
xchg
loop
and
mov
je
test
clc
movsb
jno
mov
or
addb
pushf
sbb
jl
dec
xor
adc
es
jbe
adc
incb
aad
aad
pusha
loopne
and
orl
test
std
mov
loope
jne
sub
xor
cmp
add
adc
arpl
mov
in
cld
xchg
popf
inc
jmp
ds
jnp
jne
movsl
int
cmpsl
in
dec
mov
lret
xor
int3
sub
fstps
mov
pusha
js
xchg
sarl
sub
lock
mov
sbb
loope
add
push
sar
in
sbb
mov
push
rorb
jns
pushl
insb
inc
adc
test
xor
shrb
push
dec
aam
lahf
xor
mov
inc
cmp
jp
xchg
into
dec
jns
pop
rcl
jp
push
aas
leave
mov
mov
xlat
sub
inc
bound
stos
jae
add
add
mov
mov
fdivl
fimull
sub
test
leave
dec
mov
jno
stc
cmp
test
and
mov
fsts
xor
mov
push
pop
fmull
add
popl
icebp
loopne
and
add
push
mov
orl
popa
pushf
scas
ds
add
arpl
jg
ret
pusha
pushf
lret
fwait
and
mov
test
xor
and
cmp
ljmp
mov
fbld
stos
mov
push
enter
add
cmp
in
rolb
outsl
mov
ss
and
push
lods
push
or
push
mov
mov
addps
testb
or
mov
jo
cs
loop
adc
outsb
dec
cmp
fwait
push
pand
mov
roll
sbb
inc
mov
shlb
cli
movsl
pop
and
jp
pop
int3
inc
jo
push
ljmp
mov
mov
xor
repnz
mov
and
mov
fimull
xor
push
dec
adc
push
pop
in
and
jo
sub
adc
insl
adc
or
push
jp
call
add
sbb
xor
pop
mov
fnstcw
arpl
inc
dec
mov
imul
mov
push
sub
popl
popl
outsb
ss
lret
inc
mov
add
fnstcw
loope
jo
jb
mov
push
inc
aam
aad
mov
or
sub
mov
xchg
sbb
adc
fstpl
popf
cmp
mov
add
insb
cmp
leave
pop
cld
adc
outsl
add
loopne
jmp
cmpsb
popa
mov
sarb
pop
mov
test
insb
jb
test
mov
inc
adc
mov
jecxz
xor
fsubs
inc
jecxz
xchg
cmpsl
sbb
call
jne
into
push
pop
add
jb
mov
std
rorb
add
jle
neg
out
add
ret
inc
test
xor
std
stos
cmc
xchg
ja
add
xchg
xchg
stos
mull
imul
mov
icebp
sub
pop
out
shll
push
pop
push
js
outsl
inc
notl
addr16
fildll
sbb
push
pop
xorb
xor
fucompp
mov
cmpsb
nop
push
mov
loope
or
data16
lcall
sti
stos
mov
pusha
push
push
imul
jo
inc
adcl
lods
jo
inc
mov
pop
and
mov
pop
and
call
mov
lret
xchg
jg
rep
xor
scas
mov
pop
jae
leave
call
fsubr
lahf
pop
ja
pop
movsl
sub
adc
ret
jp
lret
cmp
in
bound
jno
data16
loop
in
aas
ret
inc
pop
xor
idivb
dec
dec
les
daa
cltd
sub
add
stos
ss
dec
xorb
mov
mov
or
ret
mov
lar
cmp
shr
das
jb
mov
push
xorl
popl
rorl
aad
hlt
fbstp
mov
in
cmp
int3
mov
call
sbbl
mov
mov
mov
dec
jb
popf
mov
or
sahf
sbb
sar
add
data16
mov
int3
cmc
in
inc
adcl
aaa
mov
je
mov
test
add
push
push
or
push
and
std
adc
popa
in
push
and
inc
xchg
fildl
shrl
dec
cmp
out
outsb
xor
sbb
dec
push
mov
jo
add
ficoml
jle
inc
outsb
fs
lea
mov
mov
clc
test
out
mov
cmc
adcl
xor
lods
or
call
leave
or
adc
or
push
es
sub
xorl
pushf
pop
repnz
xorl
cmp
inc
rorl
xor
sbbl
push
in
xor
outsl
sbb
sub
mov
mov
mov
inc
pop
rcll
cli
add
aad
cmp
pop
ficompl
test
inc
inc
inc
dec
das
mov
shll
push
inc
xchg
sbb
xchg
push
xchg
xchg
push
and
or
in
jo
push
cmp
stos
mov
xor
das
je
imulb
pop
lcall
mov
jg
inc
push
lods
out
xor
xchg
lea
jne
sahf
xchg
dec
in
and
loopne
test
push
lock
aad
stc
add
xchg
movl
inc
adc
push
inc
jg
test
mov
ffree
dec
jne
movsl
jg
sub
pop
add
jle
sbb
inc
data16
lods
out
mov
and
adc
push
fcmove
pop
fnsaves
jecxz
inc
jle
mov
push
dec
ja
fscale
sti
jae
push
jne
jg
lea
arpl
inc
jmp
scas
in
pop
mov
pop
mov
push
loope
mov
cli
xor
mov
in
insb
jae
sbb
push
packssdw
mov
or
inc
jg
andl
lret
fnsave
or
add
pop
icebp
in
jmp
fbld
dec
pop
xor
cmp
stos
add
cmpsb
ss
adc
jmp
call
int
pop
lods
mov
xchg
sbb
mov
add
push
push
xchg
mov
push
inc
mov
and
xchg
mov
stos
jmp
xor
les
jmp
mov
testl
shlb
repz
cmp
lods
cmp
jp
fimuls
lock
cmpsb
movsl
add
sarb
and
aas
mov
orb
push
out
dec
pop
outsb
push
xchg
div
lcall
insl
test
insl
jmp
lods
jp
cld
sub
dec
das
or
lds
and
in
mov
call
enter
test
repnz
cltd
xchg
or
idiv
in
out
inc
pusha
mov
mov
adc
xchg
outsb
push
jbe
cltd
in
adc
mov
cmpsb
pop
popa
xchg
pushf
lock
outsl
stos
test
data16
xor
xchg
push
outsb
lea
arpl
push
lret
pop
push
out
cli
jo
push
xchg
into
push
and
dec
in
mov
mov
je
call
or
or
inc
pop
sub
pop
xorb
test
test
int
cmpsl
sub
stos
in
imul
mov
out
adc
pushf
das
sub
mov
adc
rorl
mov
addr16
sbb
sub
mov
insb
loop
cmp
fsts
popf
jecxz
mov
std
jbe
loope
mov
stc
sahf
pusha
mov
dec
dec
add
xchg
icebp
lods
mov
movsl
in
out
adc
cmp
jnp
les
outsl
repnz
push
jle
js
lahf
loop
jns
addr16
xor
dec
gs
or
mov
push
sbb
les
pop
jno
ror
inc
insl
add
or
lret
mov
cmp
add
movl
cmpsl
nop
gs
dec
add
lods
push
imul
and
xor
mov
pusha
xchg
inc
flds
dec
jns
mov
cmc
push
pop
xchg
je
ja
icebp
push
sub
into
sbb
call
jg
lods
gs
mov
mov
aas
inc
sub
fstp
ljmp
pop
ds
popa
scas
lock
pop
sbb
sahf
xor
jns
push
pusha
and
icebp
daa
lock
adc
fwait
cmpsb
popa
xchg
inc
xor
pop
mov
std
push
dec
dec
pop
pop
jns
mov
sbb
mov
adc
and
sub
scas
test
fisubs
push
outsl
loopne
push
outsb
xor
outsl
or
mov
mov
int3
or
cmp
cmp
push
pushf
rcrb
xchg
jns
and
xchg
xor
jl
cmp
inc
jmp
mov
imul
jl
xchg
leave
rorl
stos
and
mov
inc
aaa
ljmp
xor
or
xchg
mov
test
xchg
cs
xor
sarl
adc
mov
out
inc
and
and
cwtl
mov
jae
push
data16
jae
and
enter
adc
mov
ds
push
notl
js
icebp
jno
dec
mov
mov
jb
mov
sub
mov
xor
roll
mov
jns
mov
push
adc
fcos
cltd
leave
std
push
mov
je
push
ljmp
adc
xchg
pop
ret
lret
jge
aas
jae
stos
inc
dec
mov
test
cmp
push
icebp
sbb
lret
mov
push
or
jmp
mov
sbb
setge
addr16
mov
shrb
insl
or
lock
xor
out
daa
jge
lcall
out
fstpl
dec
push
inc
pop
lret
test
or
je
and
or
adc
shll
jae
mov
std
and
mov
lods
out
ret
pop
mov
xor
cmp
adc
js
adc
fwait
int3
inc
sbbl
mov
es
dec
movsl
mov
sbbl
mov
bound
xlat
or
test
lret
jnp
sbb
sbb
cmpsb
or
int3
mov
add
xchg
cmp
dec
push
call
adc
bound
xchg
dec
and
das
aas
xor
popa
adc
aad
add
data16
aas
adc
jmp
fs
cmp
xchg
clc
sbb
fimull
mov
lods
nop
lret
sub
sbb
aam
into
mov
repz
sbb
cltd
fcoml
jg
push
jns
fdivr
dec
dec
fwait
push
pushl
sbb
mov
or
push
insl
cltd
push
push
xchg
mov
push
push
sbb
push
adc
loop
mov
lods
dec
cltd
sti
push
rcll
sbb
arpl
fdivp
add
rorb
insb
std
adc
inc
imul
cli
cmc
push
sbb
cmp
daa
in
popf
popa
sbb
gs
jge
mov
push
lret
outsl
cmp
push
daa
sti
sbb
nop
push
dec
arpl
push
nop
jle
orl
inc
lods
stos
xorl
repnz
mov
int3
test
rol
xor
fpatan
fists
bound
adcb
mov
jge
mov
mov
mov
push
inc
jmp
xor
sbb
fs
push
sbb
dec
push
push
mov
adc
es
cmpl
dec
cwtl
xor
int
into
dec
adc
sarl
cmpsl
scas
aas
cli
loop
mov
jo
cmp
mov
aad
dec
out
insl
xor
inc
out
jne
stos
push
sbb
aad
jp
mov
lea
fs
jae
and
movsl
inc
mov
mov
shll
mov
inc
adc
mov
or
shlb
jl
orl
adcl
jns
or
ljmp
xlat
test
cld
push
mov
outsb
dec
and
sub
fimull
stc
cmpsb
out
or
mov
in
negb
add
fucomi
sarl
mov
lea
dec
adc
iret
int3
xor
adc
sub
inc
sbb
xor
mov
fsts
fs
jp
lahf
fst
sbb
adc
shrl
push
mov
push
or
mov
cld
add
push
mov
push
roll
dec
push
bswap
imul
sbb
gs
xor
mov
out
loop
cmp
cmp
cli
popa
and
outsl
pop
jnp
jp
push
mov
fs
sti
sub
push
mov
sub
jp
pop
mov
inc
je
cmpsl
mov
sub
loopne
call
sub
pop
jle
mov
dec
fidivs
lahf
aam
jge
enter
lea
div
popf
enter
aad
bound
rcrb
popf
clc
pop
adc
jb
cmpsl
sub
mov
cmpsl
xor
stos
and
rorb
pop
xlat
loopne
pop
cmc
cmpsl
sub
mov
popl
pop
std
mov
shrl
sarl
lods
sti
dec
in
sub
jo
dec
fstpl
lahf
jle
shll
or
movsb
aam
icebp
lds
xor
arpl
cmc
pop
test
jo
xchg
rorl
pop
jmp
or
mov
mov
sahf
and
mov
jge
pop
jnp
adc
fldenv
mov
into
divb
sbb
jae
mov
shlb
and
pop
mov
inc
mov
adc
es
scas
dec
or
jbe
iret
xchg
xor
cmp
adc
aaa
pop
push
sub
jg
arpl
fdivs
xor
addr16
lret
pop
sarb
ret
or
dec
jno
cltd
pop
data16
jge
ds
inc
into
mov
rdtsc
in
icebp
mov
xchg
fidivrl
cmpb
push
shll
mov
adc
and
add
sub
xor
and
ror
mov
mov
sbb
sbb
std
jg
cwtl
cmp
repz
negb
mov
xor
dec
sbb
pop
mov
adc
flds
in
inc
xchg
enter
pop
sbb
push
cli
sbb
inc
stc
mov
xchg
dec
cmp
clc
and
xchg
in
lcall
scas
jmp
stc
pushf
add
sbb
int3
inc
xor
leave
xchg
xor
sbb
dec
mov
cmp
xlat
mov
lcall
and
in
push
sbb
and
mov
jge
dec
inc
aam
jle
cmc
xor
insb
xchg
into
fldl
mov
fcoml
mov
popf
loope
ficomps
enter
movsl
cmpl
inc
adc
lret
lret
pop
push
leave
aas
dec
out
sub
sbb
or
inc
push
ja
sbb
dec
mov
enter
mov
inc
fwait
jge
out
mov
lods
xchg
xor
add
xchg
push
es
mov
dec
mov
push
pop
or
sbb
mov
fs
jge
stc
fdivl
jmp
in
inc
sbb
mov
cmp
sub
lcall
xchg
sub
sub
cmp
push
aaa
lods
mov
insl
cmovle
ljmp
icebp
sub
push
ds
imul
cmc
frstor
pop
jo
xor
xlat
aam
push
pop
les
in
dec
mov
cmpsl
mov
and
jp
not
sar
dec
lret
sbb
push
inc
mov
inc
mov
adc
jg
in
cs
fstpl
popa
mov
pop
int3
aas
fnstsw
xchg
lcall
or
ss
fimuls
xchg
dec
cmc
pushf
mov
fcomp
outsb
cmp
cmp
mov
dec
mov
mov
xchg
out
sbb
movsl
popa
pop
ljmp
mov
adc
scas
shlb
imul
je
shr
insb
cmp
in
sub
shlb
jne
mov
pop
cwtl
jne
mov
subb
cmpsb
mov
jecxz
cltd
xchg
and
stos
cmp
push
or
fstpl
add
lock
sub
push
daa
pusha
in
fnstenv
orl
mov
nop
xchg
dec
xchg
in
sbb
cmp
sarb
pop
cmc
pusha
xor
shrb
xchg
gs
and
jle
dec
pop
sub
mov
int3
add
leave
inc
fiaddl
ss
repnz
mov
add
loope
shl
addr16
pushf
push
lret
pusha
and
repz
daa
div
xchg
shl
mov
test
jne
xchg
ret
mov
sbb
jae
imul
int
jecxz
mov
in
adc
push
jo
icebp
pop
shl
pop
sub
inc
jbe
idiv
jl
mov
ljmp
push
mov
sbb
xor
imul
cmp
sbb
test
in
dec
cmpsl
out
pop
cmpsl
xor
push
inc
xchg
jmp
aam
inc
aad
sbb
mov
adc
stos
sub
fcomip
in
push
mov
push
jmp
popf
push
cs
in
or
mov
or
dec
jle
add
push
sub
sub
lds
icebp
xchg
jmp
and
inc
test
inc
cmpb
and
dec
fisttpl
inc
cltd
jecxz
mov
push
sti
push
cmpsl
sub
xchg
pop
lods
inc
pop
out
mov
sub
stos
dec
std
sbb
fadd
mov
fists
fs
or
lea
mov
fsubrl
mov
js
je
data16
xchg
mull
mov
or
not
cmp
or
xor
pop
sbb
xchg
loope
mov
pop
push
fdivs
rcrl
ffreep
sub
push
jle
xor
mov
pop
cs
pop
mov
sbb
jb
inc
sarb
sub
mov
divl
jnp
jmp
push
xor
mov
push
pop
sub
ss
je
aam
faddp
in
or
push
pushf
adc
testl
lock
add
or
mov
sti
orl
mov
or
scas
out
xchg
jmp
repnz
lock
mov
mov
cmpsb
rolb
popl
stc
adcb
punpckhwd
repnz
adc
stos
jp
and
xlat
imull
lcall
dec
jmp
pop
lock
fwait
jl
orb
cld
mov
pop
ss
lret
lds
imul
imul
aaa
rol
mov
iret
sbb
stos
dec
hlt
movsl
and
sub
jmp
das
mov
bound
xchg
adc
mov
out
xchg
add
fildll
sbbl
add
leave
pop
xor
jne
jmp
xchg
in
fsubrs
leave
pop
cs
jl
mov
imul
fdiv
loope
xor
dec
ja
jo
add
dec
iret
push
loopne
adc
dec
push
shll
repnz
adc
sbb
jle
mov
outsb
out
inc
sub
mov
in
mov
pop
leave
outsl
shl
pop
inc
lcall
imul
xchg
jle
rcrl
movsl
arpl
scas
out
addr16
icebp
iret
add
inc
mov
pop
xchg
pop
sub
or
mov
and
arpl
and
push
sbbb
insl
mov
jne
mov
xlat
lret
lret
in
sti
adc
push
push
sbbl
dec
cmp
addl
pop
jnp
popl
fs
add
or
push
mov
mov
and
cs
pop
ds
sub
sub
repz
out
xor
sbbl
aad
fs
mov
ds
cmp
add
mov
sub
jle
sbb
add
dec
mov
mov
mov
add
mov
fnsave
jmp
loope
or
push
sbb
pushf
cmp
addb
add
cwtl
and
pop
loope
mov
out
aas
insb
rorb
arpl
rcll
repnz
mov
xor
idiv
hlt
fucomi
xchg
adc
ret
xor
push
fstpl
call
sbb
mov
subl
jae
cld
mov
cmovno
insl
inc
push
fistpll
incb
outsb
push
pop
adc
push
sahf
lret
into
inc
xchg
clc
sbbl
dec
loop
add
cltd
mov
inc
mov
cwtl
test
push
pop
adc
hlt
and
ret
movsb
push
adcb
xor
mov
es
mov
jge
sbb
sbb
xorb
push
jmp
bswap
adc
mov
cmpsb
das
out
pop
fwait
mov
out
jno
ds
xor
pop
aam
add
fdivrl
mov
xchg
hlt
test
cmp
lret
loopne
xor
lods
pop
push
adc
and
outsl
pop
fldl
inc
cmp
mov
mov
mov
lods
adc
fists
dec
lahf
lds
mov
and
ret
out
call
mov
jmp
fdivrl
xor
and
xor
pop
stos
inc
adc
xchg
idivl
cltd
int3
add
jbe
scas
int3
call
leavew
test
and
imul
xor
sbbb
js
jg
mov
adc
loop
mov
jp
dec
push
das
rol
xor
mov
dec
cmp
mov
mov
add
xor
lret
xor
imul
cmp
dec
ja
adc
aaa
xchg
cmp
cmp
sbb
insb
clc
pop
rclb
xlat
xor
xchg
or
lock
stc
cld
pop
je
sub
add
fucomi
push
and
imul
ret
fstl
mov
push
fwait
das
dec
into
ljmp
pop
addr16
out
mov
loope
je
out
mov
movsb
fldenv
xchg
inc
xlat
add
sahf
pop
inc
mov
cmp
mov
add
xchg
fisubs
lea
adc
nop
cmp
mov
inc
pop
imul
in
xchg
add
in
pop
leave
popf
popa
mov
mov
daa
pop
call
xor
mov
adc
jle
pop
sbb
stos
push
xor
pop
jae
add
xchg
xor
cmpsb
push
sbb
cmp
pop
push
xor
mov
vpackuswb
int3
xor
sub
loop
xchg
dec
in
mov
testl
mov
cltd
mov
arpl
sub
push
loop
mov
and
xchg
xchg
mov
pop
inc
adc
loopne
iret
lds
and
xchg
stos
sahf
inc
std
mov
xlat
xchg
inc
xor
es
lock
in
xchg
lock
jg
lea
mov
xchg
mov
mov
pop
pop
add
out
xchg
xlat
cwtl
jnp
outsl
pop
cli
push
pop
pop
lock
push
or
hlt
xor
sub
call
dec
jp
push
mov
dec
sub
push
mov
adc
inc
sub
sbb
and
lret
dec
pop
lea
es
dec
aad
mov
cltd
sbb
cmp
fxch
push
frstor
fcmovnbe
jns
dec
addr16
rolb
in
adc
pop
sub
mull
sub
lahf
push
or
push
ss
xor
hlt
testb
cs
in
push
jo
sbb
xor
xchg
mov
push
int
lcall
roll
adc
leave
aam
clc
and
adc
mov
jg
dec
inc
xchg
pop
mov
loop
stc
pop
mov
jmp
int3
sarb
sub
inc
ret
and
xchg
fsts
scas
enter
push
mov
xchg
pop
or
adc
xlat
jge
es
jbe
jp
jge
stos
adc
int3
aam
add
xchg
fnstcw
fidivl
push
pop
mov
add
inc
mov
les
push
mov
mov
xor
xchg
in
cwtl
jp
dec
mov
xchg
lret
mov
xlat
mov
dec
call
mov
ficoms
out
adc
jmp
mov
pop
pusha
das
lods
bound
test
fs
in
aad
cli
aad
stc
xor
inc
lea
mov
push
lea
mov
and
cmp
cmp
jbe
and
push
rclb
in
sub
xchg
scas
xlat
jecxz
fwait
loopne
sahf
mov
adc
sbb
lock
pusha
jbe
test
pop
sbb
inc
repnz
gs
mov
cwtl
sbb
mov
je
xchg
push
insb
rcrl
into
andb
iret
lea
jne
add
sub
jmp
xchg
popf
cli
sub
sti
mov
mov
xchg
pop
movsl
xlat
cwtl
loopne
stc
sbb
jg
std
adc
xor
pop
adc
aad
mov
inc
subps
xchg
jnp
mov
shll
movsl
or
enter
mov
pop
jb
nop
mov
pusha
mov
inc
mov
fidivs
dec
je
dec
shll
gs
add
mov
inc
mov
enter
lahf
addl
push
subl
cmp
fimuls
cmc
out
inc
sbb
popf
jle
out
out
mov
mov
add
add
arpl
sbbb
js
pop
out
out
push
jne
inc
jbe
jge
int
or
enter
mov
mov
repz
int3
add
in
clc
jbe
mov
sbb
ljmp
mov
pop
mov
mov
pop
sahf
sbb
fs
pushf
cmp
pop
mov
add
sub
pop
mov
push
mov
mov
adc
jne
mov
ds
mov
inc
and
ss
dec
mov
sahf
mov
xchg
ljmp
in
test
cli
fidivrl
hlt
cmp
mov
mov
push
push
xor
stc
das
rcr
xor
frstor
cmp
ret
and
imul
fidivrs
push
sub
pusha
mov
xchg
push
jp
cmp
xor
cmp
ficoms
pop
mov
rol
jo
arpl
xor
mov
xor
adc
into
add
test
movsb
dec
je
enter
decb
int3
sub
clc
arpl
in
dec
xchg
mov
push
js
stos
fstenv
fisttps
push
jne
sub
mov
ljmp
xor
je
leave
mov
pop
mov
fwait
push
inc
stos
inc
push
sbb
imul
ss
cmpsb
shrb
rclb
xchg
test
notb
lods
cmp
stos
imul
push
mov
or
pop
xchg
stos
aam
lahf
pop
mov
jmp
inc
insl
pop
jno
jl,pn
je
xchg
pop
imul
in
sarl
dec
jns
xchg
push
call
adc
xor
or
push
stos
outsl
xchg
out
pop
pop
loopne
scas
mov
mov
pop
inc
testl
push
mov
pop
sbb
inc
sahf
adc
and
mov
sbb
cmp
js
xor
fwait
pop
add
imul
adc
int3
cltd
mov
aas
repnz
adc
mov
mov
sbb
xor
sub
sub
cmp
test
push
in
dec
cld
clc
cwtl
dec
ficomps
add
aam
repz
or
imul
inc
xor
dec
fsubrs
xchg
insb
and
popa
daa
mov
xchg
mov
xchg
adc
ja
gs
std
push
popa
mov
shlb
notl
push
into
push
and
adc
inc
mov
add
jb
lods
repz
lahf
out
repz
loop
jbe
int3
or
mov
test
cmp
imul
or
xor
std
adc
data16
sbb
repnz
push
jle
mov
jmp
je
fiaddl
sbb
xor
pop
cli
sub
push
push
js
add
sub
iret
push
fstp
pop
fdivrl
mov
push
mov
imul
lods
cmp
inc
out
xchg
push
cli
vorps
shlb
adc
jb
imulb
pusha
rol
sub
mov
ror
xchg
ja
pusha
ja
aas
adc
call
mov
shlb
jb
sarl
lods
push
cmp
cmc
pop
mov
push
xlat
divb
std
js
icebp
or
add
fbld
fisttpl
sbb
and
movl
bound
sub
mov
pop
test
dec
icebp
jb
xor
jecxz
cmp
inc
iret
lods
imul
mov
in
orb
lret
repz
inc
fiadds
push
xchg
lcall
mov
ss
mov
jb
aas
scas
xor
ss
and
aaa
out
pusha
sahf
outsl
jge
pop
lahf
mov
xchg
mov
mov
inc
adc
sbb
outsl
lods
inc
sub
pop
sub
xor
test
ficomps
arpl
mov
sub
push
mov
iret
mov
jae
in
insl
mov
ror
movsb
xchg
jecxz
stos
cmpb
jecxz
loopne
daa
arpl
sub
lods
fsts
adc
pushf
test
shlb
xchg
sbb
in
cmpsl
mov
jns
add
movsl
push
add
push
fistpll
bound
xor
fdivrs
mov
dec
cmp
cld
or
push
sbb
inc
mov
xchg
andl
out
arpl
clc
imul
loop
ja
in
adc
mov
mov
ret
inc
call
add
sbb
mov
outsl
fimull
out
jne
sbb
outsb
leave
sbb
mov
cmp
adc
and
aad
into
ja
leave
jo
clc
out
enter
mov
or
cmp
mov
add
arpl
mov
pushf
mov
jno
insb
sbbl
popa
dec
lods
je
or
sub
in
lret
adc
pop
cmpsb
add
faddl
add
leave
mov
adc
icebp
jecxz
lcall
idivl
cld
arpl
cmp
mov
mov
bound
leave
mov
cli
call
inc
pop
inc
inc
cmpsl
or
and
popf
sbb
pop
sub
jae
dec
inc
call
in
lods
mov
push
xor
push
jge
jae
repnz
pop
and
cmp
inc
jge
inc
call
mov
pop
stc
inc
cltd
mov
jns
mov
jg
jbe
xor
push
nop
mov
aas
shl
jnp
int
mov
mov
sbb
imul
xor
xorl
push
pop
imul
push
mul
pop
sbb
ror
ds
sahf
je
scas
inc
out
sbb
rcll
sbb
mov
out
mov
adc
adc
mov
inc
leave
arpl
scas
std
cmp
ss
pushf
cmp
pop
test
adc
ja
and
test
insb
data16
xor
rcrb
or
mov
jae
jnp
out
mov
jbe
mov
adc
sbb
out
fists
push
adc
aam
mov
movsl
xchg
out
enter
pop
mov
mov
leave
mov
adc
aas
fwait
fwait
xchg
aas
sbb
sbb
inc
jnp
clc
mov
adc
adc
push
loop
inc
leave
notb
inc
jp
push
je
sbb
push
mov
loope
cmp
xchg
mov
test
xchg
cltd
xor
sbb
popa
adc
xchg
fucom
sbb
cs
pop
pop
adc
sub
hlt
in
fdivrs
or
push
enter
sti
arpl
add
cmp
pushf
nop
cwtl
cmp
outsl
sub
push
xorl
imul
sbbl
in
ja
jmp
dec
pop
inc
cmp
clc
sbbl
mov
fnstsw
test
pusha
cmc
ss
aas
in
clc
mov
enter
popa
sbb
dec
cwtl
add
xchg
test
or
or
outsl
insb
scas
lret
adc
orl
dec
xor
hlt
fisttpl
xor
pop
and
dec
into
dec
shrb
cmc
inc
mov
fldl
push
push
scas
addr16
jecxz
dec
xorl
daa
mov
jg
movsl
jno
mov
push
jne
push
inc
test
jecxz
rcll
jo
push
rcll
ret
add
std
arpl
xor
inc
fstl
push
leave
mov
pop
jo
or
lods
movsb
mov
sub
out
in
push
add
lods
adc
loope
push
push
xlat
push
rcll
cltd
mov
mov
cs
sbb
lea
xor
inc
mov
cmp
icebp
je
cmp
inc
mov
adc
jp
lods
ljmp
repnz
icebp
fistpll
fmull
filds
lret
cs
cmp
xchg
dec
dec
sub
add
movsl
and
mov
inc
popf
xchg
leave
mov
dec
leave
xchg
jle
inc
or
jnp
pop
arpl
fbstp
lahf
pop
rep
xchg
xor
lret
sub
dec
shl
jl
dec
mov
gs
inc
pop
aad
push
cs
aad
daa
stc
and
int
push
xorl
cmp
mov
cwtl
or
lds
jno
jae
pop
cs
sub
mov
or
into
xchg
or
shlb
inc
push
es
mov
dec
cmp
cbtw
insb
push
cmpb
dec
mov
mov
cs
jno
dec
jno
shrl
lahf
add
inc
inc
and
sbb
xchg
iret
jne
fnsave
popf
movsl
xchg
test
out
add
dec
jg
in
inc
xchg
or
push
dec
push
pop
lock
and
mov
in
rcrb
jae
repz
ret
mov
test
in
mov
inc
inc
stos
imul
inc
inc
daa
pop
addr16
add
cli
add
mov
cmp
rcrl
scas
add
ljmp
xchg
sub
push
sub
ss
testl
leave
push
sub
mov
pop
jge
cmp
dec
out
repnz
fisttps
dec
lods
push
push
outsl
push
sahf
push
stc
mov
sbb
and
jg
push
in
fisubl
xchg
adc
push
movsb
es
inc
dec
loop
sarb
arpl
mov
or
mov
or
push
dec
mov
popf
xchg
adc
or
pop
cmpsl
pop
andl
das
jbe
sub
cmpsb
pushf
add
xor
mov
xchg
add
sub
stc
imul
stos
cld
aam
push
out
mov
mov
pusha
repnz
pop
cmp
ljmp
leave
ss
mov
fsubl
pop
or
lea
ss
bound
pop
add
sub
jmp
jae
xlat
mov
jbe
imul
stc
lea
addr16
inc
aas
lcall
pop
into
cmp
repz
dec
jo
subl
nop
xchg
arpl
es
jg
mov
int3
mov
inc
xchg
aaa
cli
and
push
xor
out
adc
stos
push
cmpsb
fwait
mov
stc
rclb
mov
imul
dec
icebp
xor
cmp
addb
ljmp
daa
lea
mov
aad
xor
sbb
sbb
stos
mov
mov
dec
mov
fildl
movsb
leave
lock
mov
push
dec
imul
xchg
pop
jp
add
cmp
xchg
xor
insb
mov
loop
int3
fwait
loop
inc
dec
fsubl
mov
cmp
aad
push
adcb
mov
nop
mov
pop
add
dec
jmp
sbb
in
notl
pop
iret
stos
xor
hlt
fistl
push
mov
pop
das
mov
dec
push
sbb
shlb
loopne
sahf
sub
cmc
fisubrs
sub
lds
mov
stos
adc
add
or
rorl
and
stos
andl
add
scas
sub
out
stos
sbb
in
fsubrl
mov
fwait
push
sbb
inc
cmp
popf
in
add
push
out
mov
xchg
push
inc
addr16
stos
xchg
dec
dec
push
lods
xchg
inc
rcr
or
pusha
pop
jb
pop
or
gs
popa
jmp
cmp
inc
into
and
aad
pusha
mov
mov
ds
lock
loope
adc
fistl
mov
mov
out
out
shr
pop
iret
in
push
and
movb
sub
mov
mov
cld
pop
and
mov
neg
or
mov
jp
add
jl
test
jo
test
cwtl
pop
mov
mov
insl
jae
femms
mov
mov
sahf
cmpsl
sbb
cmp
push
xchg
xor
repnz
sub
ret
enter
in
cmp
xchg
sahf
sub
jb
adc
mov
dec
inc
aaa
or
pop
push
jg
popf
mov
mov
xor
dec
mov
sbb
testl
mov
push
xchg
movb
lret
push
sbb
decl
stos
outsl
push
jl
add
fs
pop
movl
adc
cli
xchg
xchg
ss
loope
cld
push
test
je
cmp
dec
mov
leave
in
and
adc
lahf
jbe
jne
cltd
out
add
sub
pop
or
in
mov
pushf
dec
jbe
jb
call
vmovntps
mov
mov
jae
int3
sub
aam
sbb
push
jl
sarb
mov
addr16
hlt
ret
movsl
or
adc
mov
mov
adc
test
or
lock
xchg
xor
mov
js
imul
insb
imul
xor
sar
lahf
cs
fidivl
test
popa
lock
fwait
mov
inc
fs
insb
sbb
aaa
xorl
je
je
xchg
popa
or
in
push
mov
xor
jo
out
das
xor
arpl
test
sub
enter
sub
jecxz
enter
bnd
cmp
int3
pop
mov
xorl
xor
push
daa
add
inc
test
mov
scas
sub
jp
adc
frstor
imul
jp
sbb
sub
cmp
stos
lcall
inc
ja
pop
cmp
ljmp
fimuls
fcoml
enter
add
or
aam
shlb
sub
not
mov
xchg
jg
movsb
xor
sub
es
mov
stos
or
jb
lds
cmp
xlat
aad
popa
or
cmp
das
cmp
pop
add
pusha
mov
aam
sar
notl
cmp
push
jns
repz
xor
repnz
loope
mov
sbb
enter
jno
leave
test
mov
xchg
pmaxub
cmp
mov
lea
mov
out
mov
xchg
push
aaa
push
push
xchg
sbb
int
push
push
jne
sbb
add
sub
pop
mov
pop
jecxz
mov
rcr
pop
inc
mov
leave
or
into
sub
jbe
sbbl
push
cli
in
jns
int
push
cmp
mov
sub
pop
adc
and
cmp
jae
mov
mov
jmp
mov
adc
cwtl
test
or
add
mov
sub
xor
cmp
inc
std
adc
sti
insb
xor
jl
mov
mov
repz
pop
lret
mov
das
add
sub
loop
leave
lret
mov
jge
sti
jae
jo
in
mov
hlt
loopne
fs
arpl
cltd
and
into
push
or
push
movsb
in
mov
push
testl
or
test
je
cmpb
imul
test
dec
cli
adc
jno
sub
movsl
cmp
xchg
add
jb
jno
xlat
pop
sbb
clc
pop
add
xchg
xlat
jl
mov
mov
push
lcall
lcall
cmp
insb
aas
sub
jg
scas
jb
or
data16
dec
xchg
jge
push
leave
out
popl
dec
rcl
and
lods
lahf
push
mov
iret
and
and
sti
into
mov
mov
in
pop
dec
lods
xchg
pushf
push
loop
mov
pop
xchg
xchg
test
std
xchg
push
xchg
and
adc
add
shrl
inc
dec
sbb
insb
adc
roll
test
cli
push
sub
clc
jecxz
stos
stos
lock
or
xchg
lret
xor
push
mov
sahf
fwait
cmp
mov
push
out
fsubr
iret
je
add
bound
dec
stc
dec
das
xchg
fdivrl
cmp
cwtl
dec
daa
inc
and
jne
xorb
push
xor
and
ljmp
cmp
jg
je
fisubrl
lcall
xchg
aas
cmpsl
pop
mov
ja
push
sbb
je
ljmp
fiadds
dec
int
xor
popa
test
push
loop
jp
push
nop
int
sbb
cmp
in
pop
ja
sbb
fisttps
inc
and
rcrb
and
sub
in
or
repnz
dec
adc
add
push
dec
lret
shrl
imul
inc
clc
mov
xor
mov
or
sbb
mov
jg
cmpsb
pop
es
sub
daa
inc
jnp
pop
dec
es
jle
test
movsb
les
fnstenv
addr16
push
sub
call
mov
jg
nop
push
or
inc
and
loopne
ja
sbb
adc
hlt
lea
push
xchg
push
ljmp
loopne
int3
adc
gs
fcompl
leave
daa
aaa
lret
add
cmc
shlb
dec
cmc
inc
dec
mov
jmp
push
daa
cs
adc
cmpb
fdivrl
push
and
pop
out
xor
mov
fcoml
nop
jae
sarb
xchg
add
shll
mov
outsb
jne
mov
movsb
jno
ss
hlt
dec
movl
lods
fdivr
subl
sti
mull
sbb
add
and
and
sti
mov
lds
pop
shr
es
out
jo
js
sub
std
jmp
xor
mov
xor
or
sub
push
fwait
jnp
mov
push
call
test
lods
jb
xchg
add
fwait
aas
in
lret
cmp
rep
call
cltd
cmpsl
in
ret
lahf
out
pop
xor
ret
adcb
movsb
scas
mov
pop
movsl
sub
xor
adc
jle
mov
mov
push
dec
xor
mov
daa
inc
xchg
adc
sti
dec
push
cmpsb
fidivrl
imul
jle
inc
mov
call
into
jae
outsl
hlt
xorl
inc
loope
jp
jge
lds
les
sub
cmpl
jl
mov
fldl
loope
inc
mov
call
adc
out
adc
cltd
lock
and
aam
insb
jle
stc
add
divl
xor
aam
dec
mov
dec
pop
cli
adc
xor
popf
fs
xlat
mov
test
lahf
mov
inc
jmp
mov
mov
sub
push
push
stos
mov
pop
insb
add
or
ja
aaa
mov
jo
jbe
or
jle
jbe
xchg
fisttpll
mov
jg
xchg
pop
int
xchg
ret
loop
lea
dec
push
ss
xchg
xchg
fsts
ds
ffree
pushf
adc
out
fidivrs
imul
mov
or
sbbb
lahf
lods
fwait
dec
loop
aas
cwtl
hlt
mov
call
and
daa
gs
test
das
ret
cmp
and
ljmp
ss
jg
pop
and
addb
inc
icebp
xor
fidivrl
push
mov
or
int3
xchg
jb
hlt
lock
or
xchg
pop
aad
xchg
testl
jl
out
mov
testb
imul
lods
int
icebp
xor
jb
xchg
xor
pushf
push
cltd
fsubl
cmp
out
popa
jl
mov
sbb
imulb
outsl
mov
pop
xlat
dec
jg
lds
pushf
xorb
and
pop
push
nop
mov
xchg
ret
rcl
mov
nop
sahf
add
pop
or
xchg
and
aaa
sbb
mov
mov
pop
push
or
adc
cli
inc
jbe
mov
aad
cmpsl
icebp
xor
pushf
jmp
mov
test
pop
or
pop
popa
push
repz
fs
jo
push
adc
jne
dec
out
imul
jae
icebp
mov
push
mov
adc
push
jp
or
xor
sbb
jp
sbb
lds
xchg
fnsave
repz
cmp
outsb
ds
xchg
adc
inc
mov
mov
icebp
add
cli
xchg
rolb
movsb
aas
frstor
push
std
cmpsb
mov
neg
int
pop
inc
popa
xchg
jg
jnp
inc
mov
in
test
pop
mov
loope
dec
sti
or
jns
mov
ret
scas
xor
or
xchg
fists
xor
aaa
lock
imul
in
jecxz
xor
jge
xor
cmp
xchg
imul
adc
cmp
out
scas
out
loope
adc
cmp
leave
cltd
sub
mov
notl
iret
aaa
push
xlat
roll
adc
int
es
shll
adc
adc
icebp
stc
sbb
pop
xchg
ljmp
cltd
popa
cwtl
xor
test
mov
stc
scas
popa
cmpsl
insb
pop
inc
test
xor
pushf
icebp
xlat
in
ja
push
pop
bound
mov
xchg
cmp
cmp
adc
dec
adc
sbb
or
mov
push
popa
xchg
mov
jmp
add
lret
jo
dec
into
and
aad
loope
xchg
push
pop
pop
inc
fwait
mov
test
xchg
pop
pop
ds
add
fsubr
adc
lahf
lahf
pop
add
negl
mov
xchg
mov
fs
add
mov
cmpl
cli
js
push
or
ss
pop
mov
insl
imulb
xchg
aad
lahf
or
lds
push
cmp
or
pop
shl
inc
cmp
xchg
jmp
int3
repnz
xor
mov
push
int3
pop
mov
sub
mov
xor
fbld
rolb
push
push
mov
or
imul
fbld
insb
xchg
mull
add
fadds
inc
mov
stos
sub
fs
stc
push
outsb
or
cld
cmp
mov
dec
push
dec
loop
push
ret
popf
pop
inc
adc
sub
sbb
out
ffree
inc
test
jb
std
out
sbb
mov
in
loop
insb
mov
imul
enter
in
push
loopne
jbe
idivb
psubb
push
xor
cwtl
cmp
enter
in
negl
leave
xchg
and
les
aas
ja
clc
mov
jns
imul
push
and
in
or
movsl
addl
lcall
pop
faddl
add
pop
adc
inc
adc
jae
das
cmpsl
mov
mov
adc
outsb
jo
jbe
mov
cmp
outsb
cmp
jns
in
pop
cmc
mov
mov
push
cmp
mov
push
cli
dec
adc
in
push
push
push
and
pop
push
rcrl
outsl
and
ds
fidivrl
mov
jbe
lcall
push
sub
imul
mov
cmpsl
lea
cmp
js
pushf
inc
pop
ljmp
je
mov
mov
arpl
daa
mov
jmp
pusha
mov
flds
shrb
cld
out
dec
and
inc
push
loop
loop
ficompl
pushf
mov
call
mov
pop
pop
movsb
cmp
add
sti
outsb
jae
out
xchg
jle
add
xchg
push
movsb
xchg
outsl
pop
pop
mov
fchs
inc
imul
shll
jl
test
rcrb
loopne
pop
out
pop
cmp
lahf
mov
cmp
xchg
adc
sub
cmp
fidivs
mov
sbb
xor
xchg
cld
mov
push
or
lock
push
sahf
rcl
ret
pop
movsb
xor
insb
cld
push
inc
push
mov
sbb
xor
sbb
inc
lret
inc
idivb
cmp
inc
xchg
or
cli
out
and
jne
pop
aaa
loop
or
sbb
sarb
cmpsb
push
push
cld
nop
mov
inc
jge
pop
xchg
in
repz
loope
test
pop
ss
insl
or
dec
ja
je
data16
mov
mov
lret
xor
jae
or
lcall
cwtl
or
dec
jge
mov
mov
adc
shrl
adc
repz
cmp
in
pcmpeqb
stos
xchg
loopne
dec
and
pop
in
movsb
je
ficompl
bound
jle
mov
cmpl
popl
scas
addb
insb
ficoml
inc
mov
fildl
push
push
subl
mov
ljmp
lea
ds
jo
mov
xorb
clc
addb
ficompl
mov
jmp
cmpl
movsb
mov
inc
daa
fst
sbb
ds
xor
ljmp
add
hlt
sbb
mov
aaa
push
sahf
mov
jb
jns
aam
or
ficomps
in
push
loopne
rolb
cmpsl
or
xorl
push
mov
jne
aaa
push
dec
jae
dec
sbb
cmp
rorl
jb
cld
jae
fwait
xchg
mov
in
pop
les
in
mov
das
hlt
jle
pop
push
test
sbb
mov
mov
scas
cmpsl
pop
and
pop
mov
push
pop
mov
pushf
pop
shrb
pop
ljmp
dec
ret
fstpt
je
scas
sahf
and
mov
lahf
ja
lea
mov
mov
popa
cs
mov
popf
mov
push
scas
fprem1
sarl
je
push
mov
outsb
ss
xor
xchg
in
ret
or
bound
fsubrs
movsb
hlt
push
cmpsl
out
stos
fistl
rcll
inc
adc
sbb
in
add
sbb
bound
sbbl
cmpsb
or
std
mov
add
insl
mov
push
lds
popa
jns
inc
mov
test
je
int
lods
scas
popa
adc
xchg
push
lcall
add
out
adc
jb
aas
pop
aam
out
or
das
pop
add
lds
adc
repnz
xor
or
jg
ret
adc
aaa
add
imul
pop
adcb
ss
dec
sbb
testb
push
inc
stos
insl
adc
xor
cmp
xor
sbb
adc
jmp
sbb
mov
adc
push
stos
orl
daa
push
jg
mov
or
lret
js
shrb
push
insl
sub
imul
gs
mov
out
inc
cmp
ds
iret
arpl
xchg
ret
and
lods
adc
fmuls
add
and
or
add
test
xchg
jecxz
or
outsl
pop
xchg
dec
scas
pop
fists
mov
lret
ror
cmp
scas
ficoml
cmpsl
addb
xchg
mov
repnz
xchg
mov
xor
arpl
lock
divb
aaa
mov
and
inc
xchg
in
test
lea
testb
push
insb
sub
inc
jmp
mov
inc
imul
xor
test
ret
out
repz
jg
xchg
and
popf
cmpsb
dec
daa
dec
fsubs
dec
mov
int3
push
dec
jb
ret
sahf
hlt
sub
sbbl
popf
lret
or
lock
jmp
or
add
and
inc
sub
rcrl
in
lret
cmpsb
cmpsb
pop
sbb
xor
mov
lods
adc
fs
pop
dec
cmp
mov
lods
xchg
loopne
inc
xchg
les
sbb
out
sub
xor
or
cmpsb
push
adcb
in
mov
dec
mov
lods
xchg
jge
stc
loopne
mov
dec
gs
dec
inc
adc
fbld
in
or
mov
test
jne
popf
sbb
xorl
push
lods
and
cmp
pop
insl
rcrl
cmpl
icebp
pop
out
jmp
xchg
std
mov
popa
sub
sahf
mov
sbb
clc
in
lock
aad
lcall
fdivs
lcall
mov
cmp
insb
cltd
out
or
test
dec
loop
mov
fs
mov
in
xchg
and
idivl
aam
sbb
and
mov
imul
lock
std
push
mov
pop
mov
jle
shrb
sub
aas
arpl
scas
inc
lcall
pop
push
sarb
mov
mov
adc
dec
sbb
aas
in
ja
cmpsl
pop
or
mov
pop
xchg
into
rcr
add
mov
les
gs
adc
inc
pop
xchg
into
or
sbb
enter
dec
ret
lcall
lret
mov
xor
and
idivl
in
lcall
mov
mov
out
mov
cmc
pop
outsb
mov
pop
xorl
mov
scas
and
in
in
pop
enter
cmp
out
lea
mov
fdivrl
mov
dec
sub
sub
sti
rclb
add
test
inc
sahf
push
fists
out
in
daa
flds
cmp
mov
xor
xor
mov
fisubs
rorb
pop
jne
in
in
filds
loope
mov
testl
je
imul
icebp
jo
arpl
out
pop
mov
mov
daa
ds
cltd
pop
les
cs
jmp
arpl
and
push
xor
das
shll
adc
leave
push
pop
fidivrs
jp
repz
addb
jnp
test
cmc
call
push
pusha
aas
mov
cltd
repz
stos
fimull
jb
roll
sbb
xchg
test
xchg
subb
out
mov
pop
inc
lahf
scas
pop
xchg
inc
cmp
mov
ret
lods
jbe
out
subb
and
push
push
lods
cs
mov
mulb
and
nop
sub
addr16
adc
cltd
sub
jae
mov
mov
sbb
mov
icebp
stos
int3
inc
cmpsl
decl
push
clc
mov
shr
and
add
jo
pop
mov
xchg
sub
pop
adc
mov
mov
xchg
mov
movsb
inc
sbb
inc
mov
sbb
in
mov
pop
movhps
xchg
mov
or
push
sub
pop
or
or
adc
lret
and
push
js
pop
sbb
dec
pushf
inc
sbb
jl
mov
xchg
jg
in
mov
nop
adc
clc
lods
push
sub
sbb
add
dec
cmpsl
ss
dec
lcall
fldcw
lds
xchg
push
ja
es
adc
shll
test
jg
es
jp
jg
sbb
mov
xchg
pop
push
sub
roll
mov
in
adc
or
jmp
jge
mov
or
inc
add
loope
repnz
fcmovnu
dec
lods
call
das
or
jns
int3
aas
daa
lea
sarb
sub
and
mov
xlat
aas
push
push
adc
cmp
push
mov
and
test
add
xor
and
cli
jnp
dec
lahf
mov
push
push
mov
inc
hlt
fisttpll
test
std
loopne
ret
mov
in
repnz
enter
call
adc
and
aas
xchg
mov
js
mov
jne
push
lods
sub
adc
cmc
and
add
in
arpl
xchg
sub
mov
and
ret
and
inc
sub
inc
in
inc
test
add
mov
cmp
pop
sub
mov
xor
inc
shll
scas
fsubl
mov
cwtl
enter
stos
test
dec
negl
pop
mov
and
jnp
jg
arpl
rcrl
lret
xchg
repz
dec
inc
scas
addr16
push
mov
mov
inc
std
jl
xor
xchg
sub
sub
aaa
insb
push
or
or
addr16
xor
int3
aas
leave
fdivs
stc
decl
adc
xchg
dec
xor
sahf
shrb
repnz
pop
loopne
popf
mov
jae
aas
cltd
bound
mov
aaa
mov
stos
dec
push
std
dec
push
imul
push
push
rcll
inc
adc
sub
popa
mov
in
xor
gs
clc
and
push
inc
add
pop
lret
mov
shll
mov
and
jmp
sub
lds
inc
nop
jnp
jg
cli
sbbb
xchg
clc
pop
out
ret
addr16
cmp
jmp
add
mov
ret
inc
xchg
scas
cwtl
mov
clc
loope
xor
xchg
or
cmp
mov
mov
mov
insb
and
add
mov
mov
sar
pop
or
ficompl
fidivrs
je
fstl
or
notb
stc
pop
movsl
cmpsl
pushf
test
mov
xor
into
pop
ret
daa
loop
xor
cmp
adcl
pop
ljmp
adc
in
leave
mov
pop
mov
dec
cmp
mov
mov
xlat
jg
and
inc
and
pop
jne
and
jl
mov
hlt
inc
repnz
cmp
add
push
test
cs
mov
mov
and
inc
call
jae
in
data16
in
sub
outsb
pop
hlt
mov
ret
insl
mov
cmp
out
xor
in
es
or
mov
dec
pop
fs
jb
mulb
ljmp
push
call
sbb
outsl
cld
and
sarb
cmpsb
and
adc
into
or
loopne
out
aas
hlt
loope
mov
push
jl
cvtdq2ps
pop
xchg
repnz
je
push
mov
inc
sbbb
je
mov
mov
pushf
mov
xchg
xchg
jb
enter
xchg
insl
lret
lock
ja
mov
sbb
rorb
les
push
push
pop
xchg
outsl
test
je
stc
ds
sub
mov
dec
mov
push
sub
sbb
mov
dec
daa
ret
cmp
sbb
cmp
ds
lea
ss
les
add
fildll
daa
add
bound
or
add
je
xchg
test
js
pop
lock
xor
mov
dec
and
push
mov
or
sbb
pop
add
idivb
mov
dec
aad
divl
bound
setnp
out
inc
sarb
inc
jle
test
icebp
xchg
shl
das
mov
xchg
jns
scas
sbbb
adcb
out
enter
jno
jge
cmpsb
test
xchg
pop
adc
imul
lahf
dec
mov
pop
sub
lock
ret
stc
push
or
lea
bound
jecxz
cmp
aam
sbb
xchg
cli
jp
mov
call
filds
gs
stos
mov
fsubl
stc
or
jae
push
frstor
xchg
xchg
cmpsb
push
or
fdivl
shll
sub
lock
jge
mov
mov
lock
jbe
out
mov
out
pop
jmp
lods
xchg
je
pop
cli
mov
and
jge
das
sbb
loope
cmp
fldcw
sub
xchg
xchg
sub
loope
inc
jnp
cs
jg
push
lds
inc
cmpsl
stos
dec
arpl
push
mov
xor
test
ffree
cltd
fbld
xchg
sbb
jl
insb
mov
xchg
sbb
sub
cmc
movsl
adc
repz
mov
jns
mov
stc
xchg
jbe
ret
add
jb
ss
cmpl
jbe
fsubrl
jmp
into
xchg
mov
cs
jmp
ja
pop
call
sbb
pop
dec
dec
mov
int3
mov
mov
add
es
xor
hlt
das
pop
notl
orl
adcb
ss
add
push
es
sub
add
inc
mov
push
mov
sub
jns
repnz
mov
cmp
in
movsl
push
sbb
pop
sahf
je
shll
int
pop
mov
mov
test
fimull
sarl
or
pop
mov
jno
ja
aaa
sub
shll
aam
xchg
inc
add
or
push
push
jp
or
and
xor
push
or
sub
and
mov
in
xor
adc
aam
mov
xchg
jae
push
mov
sub
xchg
mov
pop
mov
fisubs
cmp
iret
in
aaa
inc
andl
jle
jmp
out
or
aas
add
movsb
dec
loope
mov
mov
test
test
mov
mov
cmpsb
mov
popf
mov
lcall
clc
or
fbstp
or
jmp
mov
addr16
fs
ljmp
addr16
insb
int
mov
cmpsb
or
call
sbb
push
out
push
add
xchg
xor
hlt
pop
daa
rolb
adc
pop
pop
sub
out
sbb
es
xchg
cmp
pop
aaa
stc
outsb
push
mov
pop
call
mov
xchg
roll
shrl
or
std
push
bound
andl
adc
rcl
idiv
or
xor
push
pop
sbb
testl
push
mov
in
jae
jmp
push
rcr
stos
or
in
xor
push
mov
add
sub
in
ja
cmp
dec
add
push
and
mov
das
sbb
pop
mov
imul
lods
bound
es
inc
jp
fldenv
paddw
shrb
sbb
mov
mov
and
loope
pop
xlat
xchg
cmp
and
push
sarl
or
cmpsb
cli
jns
pusha
lcall
icebp
xor
cmp
sub
and
das
imull
jne
clc
repz
mov
adc
popa
mov
xor
mov
push
xchg
movsb
andb
xchg
sar
lret
and
adc
jb
into
jne
add
outsb
xchg
popa
iret
cld
push
enter
in
pop
pushf
mov
fs
sbb
les
xor
pop
sub
jb
or
jge
imul
dec
xchg
jb
sbb
fsubs
dec
xchg
fcom
stc
adc
lods
push
leave
mov
outsb
lock
mov
xchg
in
sbb
sbb
ds
push
jae
test
dec
fidivl
lods
pop
mov
repnz
lret
andl
inc
adcl
shl
push
movsb
lret
pop
inc
sbb
or
stc
stc
adc
hlt
inc
pop
push
daa
sbb
hlt
inc
push
sbb
jle
or
ret
pop
push
lret
pop
out
mov
sub
push
xor
loop
jp
push
loop
lock
adc
lret
or
mov
jnp
mov
movsb
fsubl
sbb
in
mov
ds
lret
pop
mov
fcompl
pushf
jbe
cmc
cli
pop
jp
or
push
adc
xor
mov
add
and
fisttpll
xchg
sahf
xchg
sbb
lods
mov
mov
cmp
and
pusha
sub
cmp
lods
test
xlat
lods
sbb
sub
aaa
mov
lea
loop
scas
in
jp
jo
divb
xchg
dec
ret
das
addr16
testl
repz
aaa
xor
les
data16
add
jmp
aad
xlat
adcl
add
jno
fdivs
and
rol
jno,pn
and
addr16
jno
pusha
scas
lahf
in
loopne
pop
pusha
pushf
cmp
pop
mov
jo
shll
addb
rcll
test
sub
inc
adc
sbb
push
data16
push
xor
cmp
xchg
and
xchg
mulb
inc
push
ja
xor
mov
gs
fimuls
ljmp
mov
sbb
addr16
jle
add
subb
jl
mov
fcomp
push
dec
xchg
mov
pop
cmpsl
inc
or
inc
add
ds
outsl
or
and
push
jns
orb
pop
mov
mov
add
adc
sbb
cmpsl
push
int
sub
shr
scas
stos
loope
adc
or
push
lods
mov
cmp
js
loope
add
lods
pop
adc
addb
mov
jl
ljmp
mov
dec
or
adc
scas
xchg
fmuls
jbe,pn
dec
inc
stos
sub
cmpsl
dec
outsb
mov
mov
dec
mov
and
pop
rclb
js
cld
push
inc
jo
fmuls
popa
ljmp
add
cs
aas
and
or
ds
and
push
test
imul
fisttps
dec
or
pause
xor
call
pop
sahf
sub
cwtl
add
mov
cvttps2dq
xor
push
test
cmpsl
out
sahf
je
and
cld
or
xchg
loop
jg
jne
bnd
push
xor
popf
push
ss
inc
rcl
scas
sbb
jnp
fistpl
inc
lahf
ficoml
inc
outsl
and
lahf
ret
sahf
sub
sub
push
sub
mov
or
and
mov
mov
pop
push
mov
push
push
lods
and
dec
pop
xor
adc
test
lret
shrl
jp
rcrb
sbb
fcmovu
sbbl
test
push
cltd
cmpsb
arpl
cmpsb
rcll
push
inc
xchg
fsub
adc
bound
jnp
mov
push
pusha
shr
push
adc
lds
movsb
xor
and
fcoml
pop
push
test
mov
js
mov
adc
or
or
orb
sbb
mov
sbb
mov
or
mov
jl
mov
push
sarb
iret
mov
out
and
mov
dec
push
test
hlt
stos
pop
popa
idivb
rcll
jmp
into
bound
push
and
outsl
push
cmp
mov
or
aaa
and
sub
fmull
mov
lods
adc
sbb
ljmp
into
jnp
xor
pop
and
mov
sbb
mov
mov
mov
lret
adc
or
pushf
lea
das
xchg
mov
push
add
scas
adc
push
push
xchg
jno
fistl
int
mov
adc
xchg
sbbb
arpl
push
jmp
int3
add
mov
nop
mov
in
mov
test
xchg
ljmp
pushf
xchg
pop
cmp
dec
sub
jle
dec
push
sbb
xchg
mov
mov
push
add
repz
xor
jns
ret
sub
pop
and
mov
jle
pop
add
dec
xchg
mov
and
jbe
xchg
sbb
fmul
addr16
es
popf
xor
popa
lods
jmp
jnp
xchg
shll
mov
hlt
cli
inc
sub
sub
xchg
imul
jb
mov
aad
cmp
add
insl
shr
clc
adc
ret
imul
mov
fwait
ss
addb
sti
cltd
dec
idiv
cmc
adc
ljmp
xchg
mov
pcmpgtb
outsb
dec
cmp
cmp
lds
mov
xchg
jg
sahf
pop
add
xor
jnp
push
jmp
pop
rclb
cmc
dec
xor
dec
inc
mov
jg
inc
mov
jne
ret
test
mov
jmp
xor
inc
sub
stc
and
jno
sbb
inc
aad
cltd
popa
std
add
rcl
mov
nop
sub
fldt
stc
mov
pop
mov
ds
aas
fisttpl
imul
mov
lock
sbb
add
jns
repz
loopne
sub
xlat
outsl
mov
leave
jg
jg
ss
xchg
cld
cmp
pop
mov
mov
add
adc
xor
and
inc
and
mov
in
int
or
and
call
addr16
pusha
pop
cld
lock
mov
imul
add
dec
dec
adcb
xchg
rcrb
or
dec
cmp
in
nop
pop
cmp
jo
popf
arpl
and
es
pop
mov
test
mov
sub
mov
cmp
scas
mov
inc
push
arpl
ficomps
pop
repnz
fistpl
mov
add
xchg
adc
cs
jle
loopne
xchg
repnz
lahf
xchg
mov
call
xchg
in
fadds
ret
call
addr16
or
bound
push
push
das
mov
mov
or
and
push
mov
popa
add
jge
lcall
cmp
ja
ljmp
pop
stos
xchg
push
imul
adc
and
jl
jo
mov
mov
jno
idiv
ret
add
aam
fwait
mov
inc
lret
or
hlt
inc
loopne,pt
arpl
ss
test
loope
into
mov
sti
xor
add
push
xchg
xor
and
adc
inc
stos
sbb
jo
xlat
ret
cmp
int
mov
inc
lahf
cmp
pop
dec
pop
lcall
mov
arpl
sbb
arpl
loopne
push
cmp
jg
cmpsl
push
add
jo
mov
or
cmp
inc
mov
in
movsl
mov
mov
push
pop
or
into
inc
je
scas
dec
adc
mov
loop
mov
scas
out
hlt
into
xchg
in
jecxz
ds
and
sub
in
mov
sar
and
pop
mov
rclb
pushf
sbb
out
adcl
scas
mov
jg,pt
cmp
fsub
lea
inc
xlat
mov
mov
in
out
cmp
xor
mov
push
and
leave
int
inc
ja
in
ja
xchg
popf
xor
xchg
xchg
cmc
mov
mov
fisttpll
pop
popf
cmp
in
data16
fcomps
fwait
adc
pop
rorb
xchg
dec
std
roll
adc
sbb
dec
add
rclb
mov
out
cmc
xor
lcall
stc
repz
out
mov
push
sahf
xor
xor
xor
push
fldenv
das
jae
mov
cmp
lcall
imul
test
and
push
movsl
and
fdivs
popf
push
push
enter
cmp
and
push
andb
dec
shr
daa
mov
gs
scas
lahf
pushl
add
mov
xor
sub
inc
or
xchg
xor
xchg
dec
push
sub
std
fildll
cmc
cmp
rcll
xchg
in
fwait
pop
testb
pusha
int
cmpsl
and
mov
push
cmp
xorb
jmp
mov
adc
xchg
push
xchg
cli
adc
xor
sbb
scas
inc
pop
xor
and
rcl
jmp
sarb
shll
mov
sub
ret
dec
and
xor
mov
aaa
lcall
popf
std
stos
pop
ds
repnz
jmp
jmp
je
and
dec
inc
stc
icebp
test
data16
xchg
lcall
hlt
mov
lds
pop
loopne
mov
out
test
jbe
les
dec
cmpsl
aad
adc
mov
aam
and
fildll
ljmp
xor
ret
dec
popa
cmp
outsb
cld
push
iret
mov
pop
jns
dec
ret
adc
lods
jl
daa
imul
jbe
jmp
mov
add
lea
lret
pop
lock
mov
iret
or
mov
in
jge
rorb
insb
hlt
sbb
sub
push
cmp
fadds
jecxz
mov
or
repnz
aad
fwait
push
rorb
add
clc
sahf
mov
sbb
ret
xchg
mov
pop
mov
dec
and
outsl
add
adc
adc
icebp
dec
leave
leave
xchg
or
aad
int3
out
dec
mov
es
sahf
inc
xor
cs
in
xor
xchg
lods
loopne
cmpsb
out
popf
rcl
and
cwtl
vmovapd
mov
xchg
pusha
inc
call
lea
cmp
daa
addr16
mov
insl
loopne
aam
daa
xor
lret
arpl
push
aas
sbb
ret
pop
lcall
jbe
imul
int
dec
cmp
xor
repnz
xchg
push
mov
pop
pop
dec
outsl
jl
aaa
inc
loope
sbb
cltd
mov
cld
mov
jecxz
add
insl
fs
mov
into
adc
sub
orl
in
int
fistpl
fwait
or
dec
lods
inc
or
sub
or
flds
sahf
jg
xchg
mov
and
jns
jecxz
out
xchg
lahf
test
in
rcl
push
mov
inc
or
int
in
cmpsl
xchg
mov
and
das
mov
inc
pop
orl
or
jl
inc
cmc
adc
xor
dec
bound
push
cmpsb
lods
mov
imul
push
xor
and
xchg
push
stos
leave
inc
push
lret
sub
cltd
cmp
outsl
mov
adc
and
stos
lret
mov
pop
clc
jmp
js
arpl
jbe
sahf
mov
rol
mov
loop
adc
jg
movsl
insb
enter
cli
bound
hlt
push
sahf
push
sbb
insb
xor
test
fs
mov
int
pushf
mov
push
mov
mov
or
mov
mov
pusha
dec
xchg
adc
inc
and
pop
push
dec
sub
das
or
ljmp
mov
jge
fst
lea
pop
xor
mov
cld
push
ljmp
mov
and
loope
stos
jne
jno
cmp
dec
push
pop
push
mov
out
es
jge
jmp
pop
jnp
dec
insb
xchg
cmpsl
xchg
test
leave
adc
mov
jne
dec
imul
jl
into
mov
adc
jne
frstor
pop
bound
daa
fimuls
stos
xchg
ss
xor
lods
pop
mov
loop
je
ret
jo
sub
jo
movsb
push
push
jo
pop
aad
push
jmp
sbb
pop
loope
inc
in
in
cs
dec
add
shrl
sbb
inc
xor
lahf
int3
loopne
out
test
clc
test
mov
movsb
popa
icebp
push
sbb
xor
jne
xor
sbb
inc
cmp
ret
push
out
mov
mov
xchg
xor
jg
lock
ss
cmpb
out
jno
and
adc
adc
cmp
test
in
mov
nopl
div
pop
sahf
cmp
sbb
push
dec
mov
mov
shll
mov
pusha
inc
push
test
jecxz
jbe
fisttpl
fistpl
xchg
mov
xchg
xchg
bound
mov
mov
sbb
adc
das
inc
loope
jecxz
jns
push
push
push
rcl
xor
into
popa
dec
add
adc
push
mov
and
pushf
inc
adc
cmp
test
and
pop
and
mov
iret
lods
fsts
pushf
and
cmc
mov
sti
xchg
in
stos
ds
into
push
and
test
mov
fisttpll
ja
inc
mov
jecxz
jp
ljmp
mov
push
or
in
push
aad
push
jecxz
je
outsl
loope
jmp
cmpsl
cli
push
movd
scas
xor
and
movsl
in
mull
mov
hlt
test
in
jbe
push
stc
xor
pushf
icebp
fcmovne
mov
sub
ljmp
outsl
xchg
mov
adc
sbbb
out
mov
pop
xchg
out
test
popf
test
mov
jmp
dec
sbb
xchg
jns
add
push
ss
and
pop
jl
cld
pop
dec
pop
std
mov
lods
xor
data16
loope
lea
and
pop
insb
fs
or
xlat
push
mov
cmp
and
shl
loop
outsb
iret
xchg
lods
popa
call
ds
inc
daa
mov
or
lods
or
or
inc
out
je
mov
mov
xchg
adc
ss
adc
ds
das
and
pop
mov
cmpsb
xchg
rcl
sbb
jae
sbb
mov
in
fists
or
mov
cmp
mov
imul
inc
insb
dec
dec
mov
sub
mov
mov
lods
add
add
sub
xor
lea
pop
adc
push
push
lret
out
insb
movsl
hlt
rolb
add
insb
jge
mov
hlt
shl
in
fisubs
jg
cmpsb
and
jne
mov
pop
arpl
pop
adc
pop
inc
out
or
pop
pop
dec
fcmovu
pushf
andl
inc
out
sbb
cmp
mov
mov
push
out
sbb
inc
add
gs
dec
cmp
popa
scas
stc
cs
scas
push
fbstp
arpl
dec
jno
push
push
mov
push
rolb
adc
jp
mov
leave
lock
int
aad
out
and
insl
or
cli
mov
lods
in
xchg
mov
lret
sub
sbbl
sbbb
out
adc
mov
sbb
pop
xchg
push
pop
mov
mov
adc
xor
test
adc
insb
loopne
pop
leave
movsl
inc
iret
cmpsb
ret
adc
or
mov
jns
pop
test
push
call
int3
inc
lcall
rcl
cmp
sub
push
mov
add
popa
ffreep
mov
mov
popa
jmp
cwtl
push
fwait
lahf
fiadds
or
or
inc
jnp
stc
cmpsl
pop
mov
fucomip
cmpsb
or
sbb
fcmove
add
adcl
loope
data16
hlt
pop
push
adc
jbe
rcr
sbb
xor
adc
pop
lds
icebp
mov
pop
inc
jg
das
push
cli
lcall
icebp
mov
sub
or
xchg
ljmp
icebp
cmp
in
inc
sbb
loop
lods
xorb
loope
sbb
xor
cmp
dec
cmp
dec
push
cld
push
sbb
inc
mov
jns
cmp
cmpsb
mov
cli
mov
jae
pop
adc
jb
aad
rcll
popf
jnp
mov
mov
or
or
and
sbb
std
lock
aad
in
jl
hlt
adc
insl
loopne
mov
adc
inc
and
xchg
sub
adc
mov
cmp
jl
fidivrl
out
in
push
fs
inc
add
out
stos
jns
jns
repnz
enter
jo
or
add
std
scas
jne
pop
int3
cli
scas
stos
icebp
or
inc
jge
and
add
out
rcl
nop
mov
and
xor
or
add
adcl
pop
in
pop
adc
ret
movsb
or
cmp
or
sbb
icebp
mov
jmp
data16
fimull
bound
call
jns
cmp
adc
xchg
shlb
scas
sub
dec
mov
test
xchg
jg
xchg
lret
mov
fcomps
cmp
pop
and
dec
and
repz
popa
mov
cmc
dec
push
push
cmp
dec
cmp
jae
in
repnz
cmp
test
push
jo
into
shlb
shlb
jne
mov
inc
jmp
mov
mov
outsl
mov
popa
jmp
test
lds
cmp
or
mov
loope
sbb
mov
pop
mov
mov
bound
fcoml
fs
jb
push
loope
mov
inc
stc
and
fmuls
mov
mov
dec
inc
push
cmc
push
outsl
cmp
outsb
lahf
xlat
mov
leave
fchs
pusha
xor
jno
fldt
jb
shl
scas
pop
cs
sbb
mov
pushf
xchg
rclb
push
cwtl
or
jmp
mov
sub
jb
repnz
mov
push
in
inc
imul
or
mov
lahf
imull
or
mov
and
push
repnz
and
lahf
pushf
call
dec
sub
cmp
mov
popa
mov
cmp
push
sub
mov
xchg
adc
pop
mov
xor
jp,pt
pop
mov
add
in
stc
cwtl
sbb
sub
cmpsb
inc
inc
int
or
inc
aaa
or
cmp
mov
or
jge
cmpsb
sub
imul
mov
xor
je
push
rcrl
jne
or
jp
ret
sahf
test
mov
fucomip
into
fnstsw
jne
data16
enter
xchg
aam
jg
add
push
pop
daa
rcll
xchg
out
cld
rclb
jne
out
fdivl
push
add
test
adc
cmp
shl
mov
icebp
adc
push
dec
enter
adc
stos
sbb
sbb
jae
lds
icebp
cmp
cs
ljmp
test
pop
idivb
pop
fs
out
test
fdivl
gs
add
xor
insl
mov
imul
adc
xchg
aas
jo
sub
inc
decl
xlat
lods
sub
and
pop
sbbl
xchg
repz
inc
pop
outsb
fisttpll
in
clc
adc
movsb
mov
sar
xor
add
incl
xor
arpl
xor
xchg
sbb
mov
sub
cmpsl
mov
adc
into
loope
movsb
in
and
push
inc
mov
out
inc
popa
cmp
fdivrp
enter
dec
cwtl
jae
ljmp
and
or
push
xor
aas
add
cwtl
loope
repnz
push
clc
xchg
adc
aad
jmp
sub
ss
xor
mov
psllq
clc
aas
mov
data16
rep
imul
push
pop
pushf
cmp
xchg
iret
movsl
int
shl
mov
inc
push
or
push
hlt
ret
add
es
fbstp
and
cmc
rcl
loop
loopne
cmp
xor
stos
in
fsts
sbb
data16
arpl
inc
arpl
shlb
sbb
sbb
push
mov
ss
sub
out
or
pushf
scas
fldt
dec
sub
jl
xchg
adc
push
nop
add
dec
sarl
iret
or
cmpsb
aas
push
dec
pop
dec
into
testl
add
jmp
and
add
add
shll
clc
hlt
test
pop
or
and
insb
in
call
pop
adc
in
insl
dec
dec
std
xor
sahf
pop
inc
jbe
sbb
xchg
daa
mov
inc
pop
jno
pushf
repz
add
sbb
xchg
jl
repz
nop
dec
and
inc
ficompl
in
mov
jb
clc
add
sbb
add
in
shr
and
jnp
mov
mov
push
sahf
shrl
mov
cmc
dec
popf
lahf
sbb
push
ja
lods
jno
cmp
dec
pop
ss
cmpsl
ret
lcall
rclb
icebp
jns
pushf
inc
jp
jle
push
test
jecxz
xchg
xchg
sbbl
repnz
arpl
push
inc
sub
jg
add
fcoml
test
mov
sbb
jb
pop
and
mov
jbe
or
pop
sbb
in
popf
push
ret
scas
ficompl
popf
inc
push
out
inc
pop
jno
inc
in
popa
ja
out
neg
fcomps
outsb
and
pop
in
or
mov
sbb
inc
and
adc
daa
jecxz
inc
enter
inc
mov
mov
sub
xchg
decl
add
pop
fwait
cmp
in
mov
push
cs
inc
push
lods
test
outsl
loope
sub
mov
fucomp
testl
push
int3
inc
mov
in
or
fsubrs
pop
cld
cltd
mov
push
ja
orb
push
stos
scas
xor
incb
xor
popl
out
mov
add
mov
mov
loop
pop
mov
pop
cli
xchg
in
or
lods
push
sub
movsb
rorl
fwait
jle
movsl
hlt
adc
leave
aas
fimull
ljmp
pop
sub
out
mov
hlt
rcrl
xor
popa
aaa
sub
std
shld
decb
push
ljmp
pop
jae
fcoms
inc
push
cwtl
and
xchg
mov
dec
jmp
jo
out
arpl
adc
adc
sarb
pop
mov
sub
mov
mov
arpl
pop
and
push
sbb
adc
lock
rcr
adc
inc
int
mov
jb
repz
faddl
call
fidivrs
pop
jl
call
je
adc
or
cmpsl
jno
mov
xchg
leave
jle
lock
mov
fstpl
sub
mov
roll
lods
xor
stos
rclb
jmp
shrl
rolb
dec
out
jno
mov
mov
and
les
xor
lds
ja
pushf
push
sti
imul
jae
mov
pop
ss
out
sub
push
xchg
mov
xrelease
fnsave
xchg
stos
into
xchg
sbb
aam
xor
dec
call
fisubs
rcr
inc
dec
ss
ret
iret
stos
jg
pop
dec
repnz
mov
add
pop
and
add
sbb
inc
arpl
mov
dec
out
xor
xor
fdivs
nop
add
lret
dec
xchg
xor
in
mov
push
sbb
nop
mov
jecxz
cltd
dec
mov
jbe
push
cs
in
and
sahf
outsl
cmpsb
inc
pop
mov
inc
hlt
lds
add
sbbb
cmp
push
in
repnz
test
mov
hlt
je
jge
sbb
scas
in
sarl
cmp
test
cli
fildl
pop
add
aad
cmp
out
sbb
mov
loopne
iret
mov
in
iret
mov
clc
jecxz
adc
pushf
xor
sbb
stos
fldcw
lret
aas
mov
stc
adc
lods
mov
ficomps
cmpsb
mov
and
and
cli
xchg
out
mov
cmc
call
scas
mov
push
jnp
xor
or
mov
sub
xchg
stos
mov
enter
faddl
fcoml
sub
leave
xchg
xchg
lods
ret
lret
jne
sahf
rclb
or
jnp
mov
push
sub
jb
hlt
mov
addb
mov
xchg
movsl
sub
sub
shlb
jl
fdivrs
fisttps
cltd
mov
mov
cmp
pop
xor
xor
mov
aaa
cmpsl
jp
cmpsl
sbb
daa
insb
pop
xchg
xor
xchg
cmp
fcompl
add
mov
insb
aam
aad
data16
hlt
and
lds
sub
sbb
mov
subb
test
jne
test
loop
aam
dec
notb
dec
xchg
mov
xorl
mov
adc
and
cmp
inc
push
out
mov
pop
je
dec
push
rcl
or
lret
mov
leave
or
mov
in
jne
lret
mov
test
sbb
pusha
stos
fdiv
adc
or
lahf
jmp
movsl
jmp
mov
xorl
mov
sbb
xchg
add
imul
inc
addb
push
nop
loop
xor
icebp
mov
nop
les
inc
sub
scas
hlt
out
jne
fwait
fwait
gs
xchg
rclb
pop
fs
ret
dec
incb
sbb
daa
test
mov
mov
rcrl
scas
push
add
xchg
add
rep
out
sub
sarl
push
cmpsb
mov
movb
cmp
test
xor
sub
loopne
adc
lret
test
pop
fdivrs
pop
leave
sub
pop
push
dec
dec
mov
jmp
ja
inc
imul
pop
out
lret
sbb
adc
inc
mov
fidivrl
push
xorb
lahf
scas
mov
pop
sub
mov
add
clc
xor
stos
int
aaa
les
lock
int
outsb
int3
push
sbb
in
mov
jae
repnz
int3
out
pop
stos
xchg
jp
sbb
std
pop
nop
cmp
mov
ja
iret
test
inc
lds
inc
push
mov
push
adc
test
cli
ficompl
repz
outsl
cmpsl
dec
lds
dec
cld
test
out
frstor
fs
ret
iret
push
dec
insb
cmp
incb
sub
or
lahf
repnz
movsl
pop
cmp
jbe
ret
fidivl
cmp
dec
fcmovu
sub
cmp
or
pusha
in
inc
pop
out
xor
fildll
xchg
cmp
mov
jle
cmp
cmp
pop
jo
mov
mov
inc
dec
mov
fisubrs
and
push
loopne
push
fidivs
pop
inc
test
pop
scas
fldt
push
fnstsw
adc
add
mov
jae
popa
fidivrl
xchg
mov
dec
pushf
jns
rorb
add
test
mov
pop
cmp
xorl
push
add
push
cmpsb
jle
pop
mov
ret
push
jnp
sbb
aas
popa
lahf
addr16
cmpsb
pop
lret
jge
cmp
loope
lret
fs
and
pop
pushf
movsb
xchg
sub
push
pop
pop
fcomip
push
lds
push
adc
sti
mov
or
pusha
inc
rorb
les
in
lods
sbb
cmp
xor
fwait
jne
stos
jo
rcrb
dec
ret
mov
pop
xor
addr16
xor
pop
mov
movsb
rcr
adcb
or
xchg
out
into
xchg
inc
ss
push
cmp
jmp
aad
mov
pop
out
sub
sbb
repnz
push
inc
mov
xor
push
mov
in
fcmovb
rorl
mov
add
or
ds
mulb
mov
push
push
sub
clc
xchg
shrb
enter
cmp
jg
sub
xor
sti
int3
aas
js
inc
push
stos
idivl
pop
int3
mov
or
mov
mov
fidivrs
push
popa
add
adc
sti
mov
aaa
and
push
or
mov
insl
jg
xchg
mov
mul
out
push
push
movsb
rcrb
faddp
lret
mov
inc
jns
sub
push
pop
pop
cmc
in
in
inc
xchg
lcall
push
cmpsb
jmp
jl
pop
stos
pop
sti
fnsave
sbb
shrb
negl
rcr
adc
fxtract
mov
or
movsb
adc
mov
insl
inc
sbb
ret
mov
sbb
mov
int
ret
push
aad
sub
cmp
addb
popa
icebp
fnsave
cld
test
fdivs
ret
or
fwait
inc
loopne
jecxz
lcall
push
pop
xchg
push
adc
sub
pop
cld
or
add
pop
sub
in
jne
iret
cmp
or
inc
push
mov
xorl
or
lods
popa
repnz
push
inc
nop
and
add
inc
xchg
sbb
pop
mov
pop
es
inc
pop
shll
test
lret
push
mov
mov
adc
dec
nop
push
pop
gs
mov
and
flds
cmp
cmp
cmp
jae
pop
pop
pop
cmpsl
jnp
and
jbe
and
xlat
inc
jl
cmp
lret
sbb
mov
aaa
sub
inc
ret
fs
push
lods
xlat
mov
mov
data16
leave
adc
xchg
inc
loope
test
pop
cmp
out
pop
mov
lcall
inc
sub
mov
shll
imul
jno
outsb
xchg
push
xchg
add
mov
jecxz
in
cmp
sbb
sub
aad
mov
sti
sbb
add
mov
mov
pop
lock
cmp
jmp
test
dec
jle
sub
test
jmp
rcrb
fstpt
lods
insb
rcl
sbb
cld
mov
push
stos
test
push
push
jnp
in
ja
ljmp
sahf
std
sub
shlb
arpl
inc
popf
das
movsb
mov
sbb
xlat
push
xchg
mov
jge
lea
loopne
adc
das
fnstcw
in
add
and
xlat
jl
dec
mov
push
int3
nop
clc
sub
and
sub
xchg
and
lcall
aaa
cmpsb
inc
fimull
popl
sbb
imul
add
jne
jno
add
adc
push
push
movsl
add
pop
mov
cwtl
mov
das
inc
jp
push
adc
in
test
dec
lods
sub
ret
jmp
out
dec
push
dec
push
dec
inc
dec
and
push
icebp
mov
bound
dec
pop
aam
mov
bound
rclb
test
and
imul
shrl
nop
sarb
or
push
mov
jnp
xlat
ss
rcr
xor
xor
scas
loop
sbb
and
cld
and
loope
daa
inc
in
push
out
adc
mov
mov
jle
jecxz
sub
push
shl
xchg
jle
movsl
jle
sti
cwtl
or
lret
lcall
shl
int3
cwtl
cltd
fs
imul
repz
jno
push
shlb
xor
add
movb
or
clc
jge
cmp
mov
or
sub
xor
test
and
in
lods
sbb
into
imul
xor
or
xchg
pop
je
mov
ja
jo
pop
push
int
incl
mov
dec
scas
sti
es
test
dec
stc
xchg
aaa
pop
xchg
sub
sub
pop
fdivs
leave
aas
fstp
mov
xor
sub
adc
or
lea
repnz
jl
fnstsw
scas
pop
outsb
adc
rclb
push
fcoms
rcll
xchg
gs
dec
sbbb
add
or
notl
sub
arpl
jge
lret
out
enter
popl
scas
and
pop
fidivrl
jbe
cmp
dec
lods
cltd
sbb
push
sbb
imul
push
mov
cld
cmp
push
sbb
add
stos
test
inc
mov
adc
xor
inc
push
in
push
xlat
and
dec
add
outsl
dec
cld
xor
call
dec
mov
cmpb
mov
out
push
dec
repnz
gs
inc
jmp
pushf
jmp
nop
arpl
movsl
xor
jg
enter
aaa
add
sbb
add
sbb
adc
mov
mov
add
mov
nop
pusha
scas
movsb
lcall
fs
lret
stc
add
clc
sbbb
mov
xor
jl
mov
dec
mov
loop
xlat
mov
repnz
xchg
adc
stos
mov
adc
icebp
loope
xchg
jbe
adc
push
adc
push
daa
xchg
arpl
stos
in
pop
call
jl
pop
shlb
das
pop
dec
sub
mov
out
movsb
fcompl
nop
or
push
pop
daa
cmp
lcall
cmp
mov
xor
popf
int3
test
jle
dec
mov
in
movsl
hlt
and
lods
add
daa
scas
int3
jno
jl
shll
mov
push
inc
mov
add
mov
mov
mov
jle
add
sarl
scas
mov
cmpsl
pop
repz
inc
insb
jbe
adc
push
popa
clc
adc
cli
xchg
sahf
pop
mov
sub
push
mov
sub
mov
scas
dec
shr
out
dec
or
test
jnp
sbb
and
pop
mov
outsl
repz
push
push
push
mov
push
inc
ja
adc
pop
inc
mov
in
loopne
pop
mov
cmp
pop
adcl
push
insl
mov
rorl
add
xchg
sahf
jmp
hlt
add
int3
leave
pop
test
cmpsb
mov
ja
out
into
out
sbb
mov
pop
xchg
ja
and
bound
loop
hlt
add
imul
sub
xchg
inc
in
sbb
mov
or
es
sub
and
add
push
cmpsb
les
fcmovnb
ret
push
push
pop
fsubs
sbb
or
or
cld
repz
aad
cmp
inc
mov
loop
and
les
lahf
stos
or
cmpsl
decb
shl
arpl
cmp
data16
scas
negl
xchg
and
xchg
and
in
push
lret
ret
xor
imul
xchg
adc
xlat
mov
sub
adc
fwait
push
leave
inc
fs
icebp
loop
dec
xchg
cmp
cmp
out
or
pop
mov
jae
lret
shrl
push
pop
sub
xorl
insl
add
pop
ret
shll
les
shll
adcl
mov
pop
mov
jl
lock
sti
call
add
int
pusha
mov
bt
bound
shll
xchg
jne
fwait
aas
enter
mov
scas
push
mov
sbb
lcall
fldenv
push
orb
sbb
icebp
adc
mov
insl
hlt
sbb
inc
mov
nop
mov
fimuls
dec
fdivrl
test
mov
filds
ret
add
pop
mov
dec
repz
sub
lret
stos
imul
sbb
mov
fs
cld
int
inc
inc
sbb
clc
jge
inc
ja
pop
mov
insb
daa
inc
mov
push
inc
stc
aaa
push
in
std
or
sbb
inc
pop
jae
adc
lcall
adc
pop
push
mul
cmp
rorl
inc
cs
mov
push
stos
jnp
or
mov
lods
cmp
adc
movsb
test
ds
mov
loop
ficoml
xor
mov
jnp
xchg
mov
enter
push
sbb
jp
mov
insl
xor
push
stos
sub
adcl
sbb
sbb
std
int
in
inc
dec
aad
xor
add
mov
aaa
adc
imul
mov
lahf
leave
aad
hlt
mov
add
mov
mov
sti
hlt
test
mov
jg
and
mov
jl
idiv
push
cmp
ret
adc
dec
arpl
into
fmuls
imul
and
xor
pop
push
mov
jge,pt
and
jno
clc
faddl
xor
jecxz
imul
mov
jecxz
and
and
int
insb
push
nop
pop
popa
nop
dec
xor
xlat
xor
out
test
sub
jge
arpl
xorb
in
aaa
cmc
shlb
test
dec
frstor
pushf
sub
scas
aad
imul
inc
and
xlat
call
or
mov
scas
xchg
into
cld
fmulp
jmp
out
xchg
or
push
push
jo
clc
or
shlb
sbb
test
sub
xchg
xor
dec
jl
into
mov
sbb
xor
jmp
insb
sub
cmc
mov
shrl
sbb
pop
push
vmwrite
adc
push
inc
insb
ret
clc
lea
or
pop
outsl
push
adc
and
push
pusha
cmpsb
sub
mov
pusha
into
into
rclb
mov
jl
push
jo
and
mov
sti
xor
adc
mov
jl
mov
xor
sub
pusha
xor
into
lahf
mov
fidivs
adc
xor
aad
cmp
mov
aam
insb
ret
pushf
scas
int3
xor
sbb
pop
out
adc
arpl
test
pop
dec
int
xor
xchg
mov
cmp
or
jecxz
jecxz
xchg
outsl
in
xchg
mov
addr16
rorl
mov
jp
rcrb
pusha
push
aas
sahf
xchg
subb
mov
jmp
cs
outsl
inc
pop
xchg
sbb
nop
jp
cs
scas
mov
mov
fdivrs
in
mov
test
pop
adc
repz
ret
pop
jae
sahf
push
imulb
imul
mov
or
pop
mov
or
lds
test
aas
insl
add
jnp
xlat
inc
lods
dec
xchg
stos
cmp
push
inc
dec
repnz
mov
popa
push
fildl
dec
lods
ljmp
iret
popa
or
fcoml
test
inc
and
xlat
mov
in
xor
jae
add
fs
pop
mov
sbb
push
xor
jmp
jge
dec
mulb
daa
push
iret
bound
daa
adc
out
popf
add
jns
mov
add
leave
xchg
fcmovu
push
mov
inc
orb
push
jge,pt
ret
lret
test
push
ja
xor
or
mov
jg
call
jecxz
add
inc
ljmp
and
mov
mov
ficoms
jbe
add
int3
sbb
movl
adc
clc
jle
dec
popa
xchg
sarb
push
push
les
jge
jae
push
sub
test
or
add
fs
lret
sti
imul
add
xchg
aam
jo
and
jno
mov
jl
or
cmp
int3
sub
call
add
cs
fdivrl
add
rcrb
fimull
stos
inc
add
lods
cmpsb
loope
cmp
xchg
sub
sahf
push
mov
mov
inc
cmpb
into
idivb
xchg
and
mov
mov
jne
sub
loopne
jno
inc
jb
xor
addr16
xchg
repz
or
push
cmp
lcall
mov
out
in
enterw
sti
mov
sub
mov
push
jle
imul
cmpsb
lret
xor
test
or
sbb
adc
inc
dec
xchg
sbb
add
pop
sbb
fiadds
push
cmc
push
ja
mov
popf
insl
fxch
hlt
jo
jp
ficoms
cmp
stos
sbb
dec
in
arpl
add
and
push
push
mov
inc
pusha
loopne
lret
adc
cmp
cmp
data16
jp
addr16
cli
mov
aam
fistps
call
inc
cmp
scas
xchg
out
mov
outsb
or
sahf
pop
xor
xchg
fadds
movsl
inc
mov
add
push
xor
dec
je
test
pop
mul
adc
outsl
out
sub
or
loopne
pusha
addl
cmp
xor
mov
aas
mov
gs
clc
push
data16
test
cmpsb
xor
outsl
mov
pop
add
or
icebp
in
movsl
stc
mov
push
xor
lock
xor
pop
jns
push
shlb
subb
xor
gs
or
fstpt
daa
fsubr
and
mov
movsb
outsb
leave
cmp
fistpll
mov
xor
cmp
int
mov
sti
ficoms
scas
mov
addr16
sbbl
pop
fcomps
mov
mov
mov
clc
inc
mov
adc
in
fsubrl
adc
shl
mov
adc
mov
mov
test
mov
test
xchg
scas
jle
adc
addr16
loopne
sarb
mov
mov
sbb
out
xchg
enter
push
cli
xor
jle,pn
and
pop
mov
int
movsb
dec
add
adc
lds
sub
jo
pop
xchg
push
es
test
adc
pop
cld
in
nop
je
sarb
int
rol
addl
pop
ficoml
pop
int3
push
pop
pop
mov
push
or
pop
dec
les
arpl
jle
sbb
xlat
inc
aaa
scas
inc
js
cmp
cmc
outsb
faddp
js
xorl
lock
into
pop
and
scas
mov
pop
out
cmp
std
stos
inc
xchg
test
mov
fisubrs
scas
fnstenv
shrb
mov
pushf
xor
icebp
aas
sub
bswap
or
add
jg
cmpsl
or
pop
push
sar
fucom
add
call
push
test
mov
popf
loopne
xorb
cmc
loopne
cmp
mov
push
pop
stos
sarb
lods
loope
daa
and
jecxz
cs
dec
mov
scas
lret
mov
mov
pop
sub
jle
mov
and
icebp
push
sub
lret
cli
jecxz
inc
je
mov
push
pop
loopne
ljmp
jl
loopne
dec
cltd
jae
jae
adc
inc
lahf
sbb
les
push
mov
jmp
arpl
push
xor
jle
adc
test
ss
call
add
enter
xchg
dec
pop
loop
mov
loopne
or
arpl
pop
xor
push
mov
pop
lret
cli
cld
push
jge
lock
xchg
push
lods
sbb
insl
rorb
notb
dec
and
shlb
movsl
mov
inc
data16
adc
fildl
xchg
push
and
sahf
test
adc
adc
aaa
xor
or
out
xor
jbe
mov
in
push
testb
inc
sub
leave
pop
sahf
fcoml
int3
inc
daa
shll
sub
pop
or
pop
negl
or
out
sub
in
add
and
sub
inc
popa
mov
xchg
xor
shlb
add
mov
movsb
jne
cld
into
sti
iret
pop
inc
push
mov
mov
daa
inc
sbb
outsb
mov
pop
ds
nop
sbb
pusha
pop
jmp
pop
aas
neg
scas
and
mov
xchg
mov
xlat
nop
insb
pop
subl
add
fs
mov
adc
out
inc
push
aas
outsl
ja
hlt
or
dec
sbb
fwait
jg
js
negb
mov
sbbl
pop
rcll
pop
insb
lock
scas
test
iret
cld
push
pop
fwait
dec
and
in
cltd
mov
mov
test
ss
adc
pop
notb
outsb
leave
stos
inc
gs
and
imul
mov
add
jo
dec
cli
sbb
jmp
mov
cli
xor
mov
sub
pop
scas
dec
sti
mov
push
stos
jo
sbb
rcrb
pusha
and
stos
mov
icebp
sahf
aad
jmp
xchg
and
jmp
enter
aas
sti
mov
inc
daa
lods
inc
pop
mov
cmpsb
addl
push
mov
clc
pop
push
sub
popa
fs
sahf
lods
xor
fnsave
xchg
loope
mov
fildll
push
sub
xchg
leave
daa
pop
lods
xorb
int
pushf
xor
fsubrs
insb
cmpsl
in
mov
dec
jae
mov
movsl
lret
rolb
outsb
test
add
or
or
nop
cmp
push
jns
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
or
call
add
add
add
mov
add
inc
popa
or
sub
add
mov
add
addb
add
add
add
enter
sbb
or
and
add
add
add
lock
addb
add
add
add
or
add
in
pop
or
xor
add
and
add
add
add
mov
dec
es
jae
loop
xchg
mov
sbb
add
fiadds
push
dec
mov
xchg
adc
inc
mov
and
int3
adc
and
dec
jl
lahf
cmp
jl
inc
push
ljmp
mov
mov
fisttps
fs
cmc
std
adc
sbbb
xlat
xor
xor
push
dec
lea
nop
roll
les
mov
xor
sti
jmp
xchg
dec
jp
jbe
xlat
loop
push
js
fcoms
xor
test
or
test
push
pop
pop
jp
pop
mov
and
orb
push
scas
adc
jmp
mov
xor
sub
or
push
stc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
call
mov
cmp
xchg
pop
add
and
pop
pop
call
xor
shlb
int3
adc
shlb
push
jmp
out
cld
test
or
add
addl
jle
sub
pop
add
mov
mov
xor
push
call
dec
loope
hlt
sbb
fidivrs
mov
pop
pop
mov
jne
movzwl
sub
call
inc
sar
lahf
in
mov
or
out
sbb
sbb
mov
add
mov
mov
mov
sub
push
push
mov
pop
pop
add
mov
dec
jne
mov
cli
ja
pop
daa
fists
lea
ljmp
and
sub
jge
cmpl
not
jecxz
idivb
ljmp
mov
mov
sub
mov
js
fwait
inc
fwait
xchg
cmpsl
movsl
inc
jge
jle
xchg
test
mov
xchg
jmp
xlat
push
inc
cmp
cwtl
jnp
adc
inc
ss
pop
pop
and
xchg
pusha
pop
sar
aas
ret
pop
loop
bound
outsb
dec
push
cld
dec
dec
xlat
ret
pop
inc
loopne
fstl
repnz
xchg
testb
jge
jle
xchg
inc
orb
cld
and
movsb
popa
test
xor
adc
jl
inc
insb
inc
push
push
jno
pop
jge
xchg
cmp
test
shlb
pushl
xor
or
aaa
mov
sahf
mov
xchg
cmpsl
inc
out
add
repnz
imul
outsl
jl
das
cwtl
push
enter
ret
mov
scas
mov
pop
xlat
popf
sarl
push
inc
fisttpll
cld
jo
mov
or
or
sbb
or
test
mov
das
movsl
fimuls
aad
jg
add
arpl
adc
lds
movsb
lcall
movsb
or
jns
sbb
movsb
add
sbb
push
push
push
mov
into
add
push
nop
push
les
cmp
movsl
inc
jg
das
mov
sarb
bound
cmp
mov
inc
shlb
push
sahf
mov
jg
in
add
cltd
xor
mov
inc
scas
mov
std
adc
lret
push
add
imul
dec
notb
rolb
and
pop
mov
es
and
mov
int3
pop
repnz
aas
mov
dec
dec
mov
dec
mulb
and
jmp
enter
int
ss
xchg
movsb
xchg
addl
aaa
dec
sti
lods
dec
dec
idivb
jg
jmp
cli
std
arpl
das
aam
movsb
cmc
mov
jns
jne
outsb
mov
mov
popf
sub
hlt
sub
cmpsl
jmp
out
rorl
mov
into
scas
shlb
imul
pop
cmp
scas
inc
push
cwtl
cmp
sbb
sarb
repz
incl
dec
negb
clc
ror
dec
idivb
jecxz
orl
xor
xor
fsts
int
and
imul
or
jns
xor
insb
fsub
pusha
sahf
test
pop
cmpsb
jge
in
iret
push
roll
or
xor
ds
and
cmp
jg
popa
out
or
loop
push
and
pop
stos
jns
fcmove
jns
fcmove
jns
in
xchg
mov
xor
sub
mov
test
jns
sub
cmp
push
add
xor
mov
mov
mov
scas
movsl
jmp
sub
xorb
fcmove
xchg
data16
sub
int
mov
int
sahf
test
or
int
and
mov
jp
add
lea
or
jns
xchg
mov
pop
dec
je
or
xchg
aad
jns
test
or
ror
mov
jg
bound
cmp
pushf
test
dec
and
int
gs
dec
sbb
fcmove
mov
lea
int
sahf
pop
ret
mov
enter
cmp
sti
cmp
mov
ret
int
pushf
in
cmp
and
mov
cwtl
pop
loopne
test
or
leave
iret
jns
dec
cmp
mov
lea
int
sahf
cmp
sahf
push
shlb
and
cmp
dec
and
divb
and
test
or
lea
mov
fsubs
addr16
in
loope
stc
and
fiaddl
and
int
and
ror
jns
fcmove
jns
xor
cmp
dec
daa
push
mov
inc
ss
lcall
xor
loope
and
jecxz
fwait
repz
cmp
in
pop
in
lcall
xor
mov
jns
enter
repz
cmp
add
aam
das
inc
sar
lcall
pop
pop
add
in
lcall
xor
sarl
add
dec
jg
fs
add
add
fcmove
sti
roll
ds
pop
add
in
lcall
xor
loop
movsb
popa
rcrl
and
add
ds
pop
add
lcall
xor
loop
outsl
jle
push
push
xor
xor
jns
inc
adc
sbb
mov
pushf
popa
or
and
push
aam
das
inc
sar
rcl
roll
ds
pop
add
es
and
call
push
push
xor
icebp
into
jns
push
leave
stc
pushf
push
leave
and
pop
jl
bound
dec
fidivrl
push
pop
cmpsb
clc
cmp
loope
movsb
enter
xor
pop
jl
bound
dec
fisubrl
lret
test
insl
leave
sbb
int
and
cmc
mov
and
fcmovbe
jns
fxch
push
and
das
in
lds
int
cmc
jge
or
shll
subb
mov
or
and
int
nop
andb
fcmove
jns
push
adc
push
into
lcall
mov
jae
divl
ja
int
or
negl
cmp
sbb
sahf
idiv
cmp
sarb
and
stos
or
jge
or
jg
sub
cmp
jp
mov
cmp
add
add
aam
push
sbb
shl
cmp
inc
in
subb
mov
xor
ds
and
ror
jecxz
pop
fxch
jns
fcmove
jns
fcmove
jns
fcmove
jns
fcmove
jns
fcmove
jns
fcmove
jns
fcmovu
or
dec
jne
and
fimull
jns
fcmove
jns
fxch
jns
fcmove
jns
fcmove
jns
fcmove
and
int
and
fcmove
jns
fcmove
jns
fiaddl
insb
aaa
push
push
popa
xlat
or
pop
push
push
add
clc
xchg
sti
and
push
aas
into
daa
aaa
pop
add
cmp
dec
add
sysexit
add
das
dec
cld
int
pop
fmuls
rcrl
or
pop
or
mov
cmp
and
xchg
mov
or
fs
and
cmpsb
push
jmp
cmp
clc
cmp
xorb
lcall
mov
push
add
daa
test
pop
rclb
sub
or
bnd
jne
pop
aam
insl
inc
pop
fldenv
es
inc
ret
xchg
leave
lret
mov
push
pop
rclb
xorl
xchg
in
mov
xchg
dec
arpl
fnsave
pop
jb
xor
pop
sub
fisttpll
dec
imul
out
lret
add
lcall
sbb
in
push
outsb
and
sub
imul
jno
roll
mov
jmp
mov
and
popf
xor
stc
fcompl
xchg
das
call
xchg
dec
dec
popf
cs
xchg
dec
xor
outsl
sub
hlt
scas
adcb
or
sub
mov
pop
xor
ret
dec
dec
and
xor
mov
clc
xchg
idiv
and
xchg
mov
cli
jp
dec
adc
xchg
mov
push
jae
mov
push
repz
and
jne
fidivl
pusha
mov
test
sub
xchg
add
xchg
bound
mov
sbb
mov
sub
xor
stc
add
ficoml
daa
test
xchg
test
xor
test
cltd
aaa
in
mov
icebp
scas
pop
mov
sbb
int
pop
fisubrl
adc
sbb
fildl
pusha
das
sbb
daa
pop
stos
loopne
out
cmp
sahf
mov
popf
dec
jmp
jp
adc
mov
push
add
xorl
lret
xor
test
subb
mov
fst
ret
cmpl
cmpl
mov
je
push
or
sbb
adc
nop
xchg
shl
jae
mov
hlt
icebp
repnz
cmp
lcall
mov
outsl
clc
shl
inc
xchg
int3
aas
ds
fs
jl
aad
inc
lods
xor
movsb
scas
mov
outsl
sahf
sbb
leave
add
and
push
cli
dec
pop
dec
add
mov
inc
xor
cld
adc
add
add
add
or
add
adc
pop
or
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
or
hlt
pop
or
cwtl
pop
or
mov
or
movsl
pop
or
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
pop
or
add
add
fcomps
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
xor
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
insb
add
add
add
add
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
or
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
in
rolb
add
add
add
sub
and
push
fstl
fcomp
inc
int
jge
js
and
hlt
in
jae
rol
jmp
or
fdivrs
jg
sbb
or
loope
mov
inc
iret
in
push
and
out
cmp
adcb
or
adc
mov
jns
sahf
xchg
lret
xchg
aam
into
cmp
fdivs
and
inc
push
xor
iret
daa
call
inc
adc
movsb
in
lret
push
adc
pop
jno
in
lahf
testb
jp
dec
clc
out
add
test
mov
jg
cli
push
jecxz
stos
cmp
testb
dec
cwtl
or
ljmp
dec
xchg
lcall
out
mov
adc
out
lcall
inc
xchg
popa
xor
dec
jg
repz
sub
js
sub
and
out
jae
lahf
dec
add
outsb
sbb
xchg
lea
pop
in
push
mov
pop
sub
in
dec
aaa
jne
jp
shll
xchg
daa
std
loopne
jno
std
jp
inc
mov
fcmovb
sbb
cmpsb
inc
jmp
je
sub
xor
hlt
arpl
loope
cmc
mov
out
lahf
imul
repnz
mov
sub
out
push
and
lcall
mov
test
inc
insb
icebp
popf
repnz
or
outsl
es
icebp
or
sti
leave
and
sbb
jge
fistps
or
js
pusha
loopne
inc
dec
cwtl
arpl
push
data16
mov
mov
xor
or
pop
xchg
ljmp
add
aad
push
xor
mov
mulb
push
add
add
or
mov
int3
rorl
push
pop
pop
lret
aam
or
fldenv
cmp
push
mov
push
lcall
add
imul
dec
adc
pop
push
adc
xchg
fwait
push
in
pop
sti
lret
mov
cli
inc
add
shld
test
inc
push
fwait
leave
arpl
addr16
and
mov
inc
xchg
lret
je
std
sbb
imul
lar
data16
pushf
cmp
adc
lahf
push
push
popf
sbb
outsb
cmp
cmpb
les
int3
jbe
gs
insb
movsb
jle
lcall
add
sbb
mov
ficoml
loopne
jg
dec
xor
leave
cmp
xchg
jo
mov
xchg
dec
in
xor
andl
sub
mov
cmp
int3
int
sbb
adc
jl
add
add
add
in
mov
fistps
test
mov
jbe
push
xlat
xorb
and
sbb
mov
lods
mov
add
hlt
addr16
sub
into
cmp
movsl
sub
insb
and
divl
or
pop
loop
xor
cmc
negb
shlb
sub
adc
push
into
sub
cli
cmp
or
jns
xchg
pop
mov
int
sarl
roll
inc
js
sub
add
mov
push
sub
ljmp
xchg
sub
mov
jns
or
adc
jae
repz
mov
push
push
mov
or
xchg
stos
cmp
cmpsb
rol
sahf
rorb
jmp
mov
pop
popa
cmpsl
mov
paddq
adc
inc
mov
pop
std
jns
sub
add
pushf
xchg
pop
lahf
xor
push
cmpsl
movl
mov
jno
xor
inc
mov
sub
lds
fstpl
stc
gs
cmc
leave
sbbl
mov
or
mov
jmp
cmp
mov
sub
pop
inc
popa
out
lcall
mov
mov
popf
sub
dec
fwait
popa
outsb
or
lds
lret
push
mov
call
xchg
adc
mov
test
xlat
inc
inc
test
adc
cmpb
xor
xor
es
int3
sbb
aad
mov
rcrb
lock
cwtl
ja
int3
jo
rcll
daa
ret
sti
cmp
inc
dec
adc
bound
mov
in
add
jnp
jp
fisubl
pop
lcall
std
idivl
popf
cs
in
mov
subb
je
fbstp
les
pop
jb
fisttps
or
cwtl
inc
push
cmp
dec
adcl
sbb
pop
lahf
adc
jno
mov
insb
cld
stos
pop
cmpsl
int
adc
pop
push
test
inc
and
icebp
inc
aas
push
call
sub
mov
mov
leave
xchg
push
cmpsl
xchg
ss
into
lock
scas
bound
std
xlat
and
push
adcb
xor
add
ja
mov
adc
add
call
shr
push
jbe
aaa
gs
mov
rorb
fisttps
inc
fmul
push
add
xchg
adc
jbe
jb
or
out
jb
jns
les
xor
icebp
movsb
sbb
std
inc
pop
in
sbb
ljmp
int3
xchg
adc
ja
add
mov
mov
insb
cmc
add
xchg
repz
mov
ror
xchg
les
dec
dec
ret
loope
and
add
out
lcall
jae
dec
xchg
call
add
inc
mov
mov
je
js,pt
mov
out
lock
or
jmp
popf
dec
sbb
add
xor
add
frstor
sbb
xchg
xchg
lret
outsb
xchg
jne
xor
je
xor
std
jns
popa
inc
repz
je
cmpsb
inc
jmp
fs
dec
cld
pop
mov
outsb
das
xor
cmpsb
jl
inc
push
fstl
adc
or
scas
push
and
add
jecxz
mov
mull
mov
jmp
or
test
xor
sbb
sbb
sbb
pushf
jp
inc
std
and
add
test
mov
sti
jns
inc
cltd
sub
lock
jo
pushf
and
dec
pop
adc
nop
aad
and
mov
int3
ffree
push
dec
mov
out
ret
mov
mov
aas
adc
push
movsb
aaa
push
mov
mov
dec
aas
fisttps
daa
out
push
jbe
sub
or
shrl
int3
mov
mov
aaa
pop
adc
or
loopne
sbb
inc
mov
xchg
daa
fistpl
cwtl
cmpsl
icebp
js
or
xchg
xor
addb
mov
aam
mov
mov
mov
jl
loope
sti
dec
pop
mov
jnp
mov
mov
ja
adc
inc
das
in
push
add
xchg
lret
orl
lret
cmpb
jne
pop
fwait
stos
jmp
roll
out
incl
pop
nop
jbe
xor
xchg
inc
dec
jmp
mov
popa
cmp
dec
jp
inc
fistpll
fs
push
push
xchg
pop
mov
mov
shrl
ret
inc
test
mov
mov
mov
movsl
push
daa
add
cld
jg
outsl
enter
xchg
xchg
fldt
mov
cmpsb
pushf
test
sarl
sub
daa
daa
fidivl
outsl
ljmp
dec
pop
jmp
lcall
aas
pop
xchg
mov
mov
cmp
outsb
lods
fnstcw
jb
mov
jle
js
mov
xchg
test
sbb
xchg
and
push
shrl
mov
js
pushf
cmpl
jo
orl
and
ss
mov
fwait
or
daa
and
sub
roll
and
adc
addr16
mov
and
ret
push
pop
pushf
xchg
push
test
push
das
pop
mov
cwtl
inc
jg
enter
sbbb
pop
cs
lods
lock
lret
pop
sysexit
sahf
test
or
mov
cmpsl
or
xor
xor
mov
mov
cli
jl
push
xchg
push
push
out
mov
jge
repnz
sbb
mov
mov
ljmp
cltd
loope
sub
add
out
out
push
mov
push
mov
and
fsubs
xlat
xor
in
repnz
pop
mov
add
inc
dec
addr16
push
xchg
int
sbb
xchg
mov
xlat
loopne
dec
sub
lret
mov
out
xchg
mov
mov
sbb
leave
les
sub
pushf
jb
pop
cmp
enter
mov
sarb
pop
mov
inc
out
mov
jle
pop
mov
mov
dec
lods
or
jne
aaa
mov
ds
sbb
push
sahf
cmp
mov
out
push
push
inc
mov
mov
out
add
dec
cwtl
lods
cli
cmpsl
mov
mov
and
lods
jae
aad
inc
xchg
mov
cmp
push
fstpl
push
xchg
mov
addr16
cmpsl
leave
ljmp
cmp
cli
add
sub
pop
lahf
cmpsb
cs
add
and
dec
sahf
popf
add
outsl
add
rorb
inc
mov
test
push
xor
push
adc
add
aam
emms
jg
shrb
aad
mov
dec
sahf
js
test
jecxz
sbb
enter
add
inc
pop
xchg
enter
cltd
aaa
je
xchg
add
sbb
in
pop
sbb
jne
outsl
enter
pop
test
aas
mov
jns
cld
cmp
mov
or
lret
fs
enter
or
movsb
adc
add
lods
clc
add
test
and
clc
hlt
lahf
cmp
rorl
push
movsb
push
mov
adc
push
stos
dec
in
das
inc
push
xor
mov
arpl
mov
dec
or
xchg
push
hlt
sbb
mov
bound
shll
loopne
pop
push
orl
lret
mov
fldt
dec
xchg
mov
fimull
jmp
mov
mov
shr
push
dec
add
loope
jg
or
andb
loop
inc
cld
inc
shl
mov
xchg
xchg
jle
test
push
xor
data16
mov
sbb
repnz
inc
jge
sub
aaa
mov
aam
jecxz
aad
jno
hlt
sub
mov
mov
pop
mov
loop
std
mov
cmp
mov
movsl
xchg
xchg
jne
push
add
out
inc
aam
lea
cli
mov
inc
sub
jg
mov
arpl
sub
cmp
add
aad
loope
aaa
adc
jp
fsub
cmc
insb
loope
cmpsb
jb
push
cmc
xchg
and
lahf
mov
outsl
xor
minps
inc
dec
repnz
or
adcb
inc
incl
inc
loope
adc
push
dec
push
mov
test
js
sbb
aas
add
add
xorl
cmpsl
fidivl
cmp
in
or
out
xor
sub
in
mov
mov
dec
sbb
loop
push
sbb
jp
fstl
xlat
push
or
lock
jne
fucomip
call
test
sub
js
outsb
aam
mov
lret
mov
mov
repz
xchg
insl
add
es
xorl
js
stos
and
xchg
int
lahf
mov
xlat
add
jb
dec
add
inc
adc
in
jb
jns
std
inc
cmp
shll
or
and
into
mov
repz
sbb
inc
test
pop
int3
in
dec
xor
pop
std
ljmp
pop
test
inc
mov
loop
icebp
sub
shrl
xlat
or
ja
stc
loopne
sti
cmp
mov
push
dec
pop
xchg
and
inc
xor
sub
ret
xchg
sar
sahf
inc
enter
add
push
loop
dec
jg
lods
imul
outsl
adc
daa
add
loopne
push
cmp
inc
test
pop
hlt
out
xor
cmp
sbb
mov
or
movsl
sub
ljmp
or
pop
hlt
idiv
add
xchg
mov
loopne
mov
sbb
inc
fwait
or
xor
mov
rol
movsl
jle
xlat
jge
enter
add
out
add
test
inc
mov
gs
pop
insb
dec
or
ds
jp
and
int
mov
mov
jl
sarl
fnstenv
ljmp
xor
loope
data16
lock
cmp
loopne
fldcw
jmp
mov
xor
addr16
rorb
pusha
cmp
sub
scas
mov
lds
xor
adc
in
mov
mov
loop
js
orl
cli
mov
and
xor
mov
imul
inc
mov
jns
je
push
mov
vmovaps
cmp
add
mov
sub
mov
inc
xchg
sbb
cmp
inc
aad
mov
inc
andb
push
and
push
popf
rcrl
mov
push
mov
dec
push
push
dec
sub
loopne
popf
leave
lea
and
push
cltd
jo
fwait
jl
stc
xor
add
cmpsl
aad
call
les
nop
pop
sub
pop
in
leave
es
jno
add
dec
push
filds
and
or
repz
jge
lods
mov
dec
ljmp
addr16
ret
pop
sub
push
test
cltd
fimull
xchg
test
int
xchg
insb
dec
les
mov
mov
xor
push
add
xchg
sbb
dec
xor
or
fs
call
lahf
pop
es
inc
inc
cmp
jbe
orb
inc
das
dec
mov
mov
mov
jns
pop
setg
xchg
xchg
sbb
cld
or
sbb
loope
adc
lea
out
lock
das
mov
jno
pop
push
cwtl
movswl
jno
mov
in
int
pop
or
jne
push
sbb
dec
or
inc
cmp
jp
repz
bswap
xchg
scas
mov
stc
sub
or
mov
cs
aam
add
and
out
loop
or
sub
out
dec
rolb
cmc
mov
js
popa
aad
cmpb
test
push
inc
rorl
andb
add
mov
mov
lcall
adc
jle
mov
or
cmpsb
mov
mov
out
fistl
dec
mov
popa
cmpb
mov
lahf
jecxz
lods
mov
jne
cmp
outsl
je
xchg
int
or
sub
xor
mov
mov
imul
iret
add
ret
jl
test
mov
push
pop
aam
inc
mov
je
mov
cmp
jmp
xchg
inc
outsb
cmpsb
ja
push
mov
pop
popa
orl
loop
movsl
out
mov
cltd
mov
iret
sbb
orb
popf
repnz
mov
mov
adc
movsb
pop
imul
jp
mov
or
sbb
data16
jl
inc
inc
int
std
aas
cmp
jne
or
and
movsl
fwait
pop
in
ret
adc
loope
insl
mov
rolb
dec
mov
adc
movsl
dec
imulb
xchg
sbb
xchg
sub
mov
mov
int3
icebp
jo
mov
push
push
sti
in
lea
mov
mov
xchg
jno
arpl
ret
movsl
cmp
loop,pt
je
sahf
mov
divb
push
or
shll
movsl
push
jbe
and
inc
in
call
jecxz
adc
add
pusha
sbb
mov
push
inc
shl
push
cmp
or
les
sbb
mov
add
mov
iret
icebp
pop
jp
mov
scas
adc
mov
or
data16
xchg
test
or
jnp
or
or
aad
mov
and
pop
mov
in
loope
mov
cmp
jmp
inc
das
iret
add
gs
icebp
loope
jl
jo
arpl
out
push
test
mov
mov
jo
xor
jne
sahf
xchg
sbb
mov
clc
movsb
push
inc
popl
pushf
lock
or
mov
push
sbb
or
movsb
pusha
test
cs
int
xchg
xor
xchg
pop
dec
je
xchg
xor
pushf
daa
cmp
pop
std
xor
in
popa
aad
bound
pop
test
cmp
mov
and
rclb
push
repz
mov
inc
scas
xor
jne
inc
ja
inc
insl
fistps
insl
aas
cmp
push
mov
cli
imul
push
cs
push
cmp
addr16
scas
daa
add
movsb
mov
mov
pop
mov
mov
imul
pop
in
or
sub
jg
or
or
mov
pop
gs
dec
mov
fcmovne
pop
inc
inc
aaa
inc
and
test
inc
add
aas
insl
scas
xor
dec
out
push
lods
cmp
insb
outsb
or
xor
or
scas
jae
xchg
jge
out
sub
xor
bound
js
inc
aas
sub
mov
in
call
repnz
cs
push
lret
fildll
insl
dec
and
insl
jge
sub
cli
lods
mov
aad
lods
ja
push
testb
fists
in
aam
dec
hlt
xchg
sub
and
inc
aaa
test
es
test
ja
idivl
out
inc
sbb
mov
xchg
fldcw
and
or
push
fs
jo
outsl
out
pop
dec
shrb
mov
repz
gs
in
adc
mov
into
xor
popf
repz
xchg
jo
xchg
loopne
mov
loop
jl
repnz
sti
cwtl
pop
sbb
lea
xor
dec
enter
cmpsb
leave
cmp
xchg
mov
add
rclb
add
mov
pop
or
sbb
mov
pop
mov
test
nop
cmp
pop
adc
pop
stc
push
sub
imul
add
pop
and
cmpsb
int
add
rclb
adc
aas
mov
aam
pop
jge
imul
or
insb
je
mov
push
jecxz
push
push
adc
pop
fs
popf
jle
pushf
mov
cmp
or
jg
cmpsl
jne
add
leave
xchg
cmpsb
inc
shll
das
stos
jp
sbb
rorl
lret
xlat
adc
ljmp
pop
cwtl
cmc
push
sbb
repz
aam
pop
nop
pop
sbb
adc
scas
add
aad
push
push
cmpb
mov
data16
or
adc
jge
cmp
dec
pop
mov
push
in
pop
and
lods
ss
cmpsl
notl
or
loop
divb
jl
jno
sub
push
xor
ss
je
inc
fisubrl
aad
lods
add
push
lods
push
je
mov
aaa
add
icebp
xor
xchg
nop
mov
jle
aas
into
cltd
mov
cmp
nop
movaps
in
movsl
cltd
adc
fs
iret
mov
dec
dec
pushl
bnd
inc
pusha
xor
xor
add
mov
sbb
das
xchg
aad
push
mov
mov
bound
aad
adc
mov
xchg
xchg
rcr
inc
jnp
and
imul
jae
adc
fstpt
pop
jmp
jle
jb
outsl
mov
cli
or
cld
xchg
add
pushf
push
push
inc
mov
mov
out
xlat
daa
add
add
push
push
pop
jmp
push
fcomi
in
or
cmp
or
xor
dec
ret
nop
push
popl
mov
shrb
jecxz
pusha
movsl
or
insb
mov
push
btc
jbe
xor
mov
pop
push
in
pop
mov
pop
sarb
inc
jecxz
fwait
cwtl
mov
data16
xchg
insl
shr
sbb
ret
mov
pusha
jae
pop
and
jae
fistpl
cmpl
and
faddl
inc
rclb
repz
ja
scas
xor
xchg
sub
shl
out
sub
xchg
xor
fcmovb
test
loopne
arpl
add
outsb
in
aaa
mov
lods
sarb
pusha
mov
pop
pop
call
popa
into
ret
jge
aas
xlat
addr16
arpl
pop
mov
out
or
jnp
mov
outsb
scas
sahf
subl
push
fwait
lock
shll
mov
xor
cmp
ljmp
jb
test
arpl
push
fisubl
sbb
xor
and
jo
cltd
pop
in
test
es
aam
pop
push
mov
or
mov
ja
std
sti
xchg
mov
or
out
sbb
push
and
cmp
hlt
int
pop
and
cmc
pop
add
mov
mov
std
and
jecxz
push
in
movsb
in
rcrb
add
lret
js
and
and
sub
fldenv
xchg
cmp
mov
leave
mov
nop
leave
roll
mov
mov
push
insb
inc
jo
stos
xchg
iret
push
hlt
mov
cs
add
into
sub
push
adc
mov
rorb
addr16
cs
push
hlt
jmp
shl
xor
xlat
test
arpl
test
jl
xchg
lea
orl
push
insl
and
mov
das
sub
push
je
mov
mov
call
das
dec
pop
inc
add
or
in
inc
and
cltd
xchg
mov
xchg
jmp
and
inc
mov
out
sub
out
xchg
nop
sbb
push
pop
xchg
mov
aaa
movsl
xchg
jecxz
xor
loopne
sbb
insb
pop
vcvttpd2dqy
xchg
and
pop
xchg
bound
xor
jp
inc
add
add
and
dec
loop
sub
push
sub
movsl
inc
fcomip
adc
in
push
xor
dec
cld
inc
add
int
call
mov
mov
inc
jge
mov
cmp
dec
sahf
imul
mov
js
pop
dec
lock
enter
hlt
or
adc
cmpsl
xchg
lock
cmp
jae
and
aad
inc
sub
add
inc
data16
lods
movsb
loope
mov
add
pushf
mov
test
clc
cmp
ficomps
imull
inc
pop
ret
push
ljmp
cmp
cmp
sbb
loope
cmp
sub
insb
incl
lods
add
aad
dec
or
or
jbe
mov
push
out
pop
pop
fwait
pop
shl
inc
mov
pop
int3
sarb
inc
stc
mov
mov
mov
push
pop
mov
push
xor
mov
pop
inc
xlat
das
ror
push
jmp
cmp
je
fs
push
jp
sub
leave
aad
or
or
sbb
add
hlt
mov
int
lea
jnp
subl
inc
xor
test
jne
jp
cmp
loope
movsl
mov
arpl
scas
dec
mov
cld
cwtl
jmp
out
mov
imul
and
je
and
js
jle
xchg
clc
or
or
daa
or
dec
xor
adc
je
mov
sahf
rol
sbb
pop
les
xchg
and
stc
ret
lea
xchg
and
movsb
cmpsb
jno
xor
aas
sub
sub
lods
xor
xor
scas
test
ljmp
push
jge
ds
xor
jne
dec
jmp
and
cltd
jne
push
loop
out
jb
enter
stos
fs
and
add
call
cmpsl
shll
ljmp
mov
inc
cld
ret
movsb
mov
inc
outsl
ret
cwtl
push
cmc
popa
sub
pop
out
or
and
push
insl
repz
popf
push
inc
lods
aam
jg
test
loopne
cmpsl
addb
in
clc
push
loope
sub
add
xorl
shrb
jle
in
cld
aaa
pop
movsl
pop
jmp
mov
out
lahf
inc
loopne
push
jae
ds
aam
mov
shll
sbb
sub
fucomp
fucomp
shl
push
jne
outsl
rorl
mov
cs
and
enter
sub
mov
arpl
inc
mov
sbb
fs
fldl
enter
ljmp
cmp
mov
xor
inc
in
sarl
xchg
mov
mov
subl
push
iret
outsb
fistl
pop
aam
jne
aas
mov
sub
push
jle
sub
fs
lods
pop
sub
add
jl
mov
jbe
sbb
pop
out
xor
fs
xlat
pop
mov
push
loopne
aad
testl
into
ret
rorl
test
pop
xor
js
cltd
adcl
lods
mov
pop
jo
stc
mov
hlt
add
cmpsl
popf
sub
pop
add
adc
or
push
push
push
cli
leave
xor
stos
jmp
mov
pop
loope
jp
xor
popa
mov
imul
das
loop
test
daa
mul
and
pushf
dec
enter
outsw
cmp
xor
sbb
add
inc
adc
mov
add
push
cli
push
shlb
xchg
imul
mov
jge
outsl
imul
cmp
adc
inc
mov
mov
xchg
inc
sub
fildll
push
int3
and
jb
fs
or
aas
insb
xchg
xlat
mov
cs
lret
jmp
popf
and
pop
dec
cld
push
loop
in
cwtl
sbb
repnz
mov
xor
mov
enter
fcomps
xchg
inc
int3
adc
nop
pop
icebp
movsl
dec
lahf
mov
popf
xor
jo
sbbb
xchg
cmp
out
and
inc
jnp
jecxz
or
pop
cmpsb
cmp
mov
lahf
jae
aaa
and
les
stos
out
pop
insb
mov
cmp
mov
cmp
mov
add
xchg
ret
xchg
lock
dec
xchg
or
test
sub
add
fcmovnbe
inc
lock
pop
mov
cld
scas
mov
je
ret
xchg
js
mov
add
outsl
into
or
daa
jg
popa
divb
aam
dec
stos
movsb
loopne
inc
jg
sub
jl
push
movsl
cmp
xchg
mov
movsb
divb
mov
jmp
data16
pop
pop
or
add
in
mov
cmpl
jne
mov
xor
std
pop
xchg
je
lcall
stc
ss
jecxz
leave
sub
adc
xchg
push
daa
aaa
subb
gs
mov
cmp
test
mov
out
imul
jecxz
ffreep
and
jge
mov
loope
lock
mov
pop
rclb
mov
jns
cmpsl
cmp
cmp
mov
outsl
imul
setne
call
add
test
sub
dec
shlb
mov
icebp
das
mov
shll
and
pop
cmp
push
outsl
adcb
movsl
popa
jo
js
inc
dec
decl
aam
jg
in
pop
lock
xor
es
inc
push
mov
mov
pop
loope
mov
pop
mov
xor
and
and
add
mov
cli
orl
cmc
push
pop
xchg
sbb
mov
dec
insl
cmp
inc
out
pop
ror
adc
cmpsb
stos
xchg
push
scas
or
sbb
push
xchg
rcrl
jg
cmp
mov
pop
test
lds
pop
mov
in
cs
jno
push
scas
cwtl
aad
in
sub
cmp
sti
stc
xor
or
jl
enter
sbb
and
mov
sub
mov
inc
or
pop
xchg
imul
sahf
add
push
add
or
into
push
adc
jno
fsub
divl
and
push
adc
pop
scas
cmp
cmp
mov
cmp
out
sbb
dec
enter
or
pop
imul
pop
mull
cmp
jns
aam
lret
xchg
pop
scas
or
fstl
xchg
das
push
mov
mov
pop
mov
lock
and
jecxz
inc
sub
jg
jecxz
sbb
aad
jg
sub
jns
xchg
xchg
mov
dec
xor
xchg
out
fwait
mov
inc
sub
cli
mov
adc
dec
stos
push
cmp
push
dec
jg
jl
arpl
push
aas
inc
je
push
xchg
out
pop
jb
mov
mov
test
loope
pop
dec
mov
rcll
lods
scas
aas
mov
shl
add
roll
popa
mov
dec
cmp
adc
arpl
sub
pop
push
push
cwtl
mov
inc
xchg
sub
or
mov
inc
nop
adc
addb
xchg
mov
xchg
push
dec
dec
test
or
fwait
xorl
adc
mov
mov
lea
ror
jle
lahf
adc
sub
pop
in
dec
xlat
inc
jp
pop
loope
mov
xor
fwait
xchg
and
in
dec
mov
ret
icebp
dec
xor
outsb
jno
dec
rolw
sub
out
adc
fwait
int
pusha
xchg
jne
test
and
jp
mov
cld
sbb
repnz
inc
roll
int3
test
outsl
dec
sbb
mov
ds
lcall
into
inc
inc
je
test
push
jo
or
adc
fcoml
xchg
adc
xchg
sbb
leave
fcompl
cwtl
add
or
lods
outsb
push
mov
out
mov
loopne
jmp
cli
add
ret
adc
icebp
aad
cmp
js
xchg
lods
idivb
mov
ret
dec
cmc
xor
jo
inc
sahf
test
mov
dec
sbb
or
mov
in
test
pop
mov
dec
aas
nop
es
pop
xlat
or
mov
loopne
mov
mov
dec
sbb
inc
push
in
push
pushf
sub
push
stos
test
jl
mov
iret
sbb
test
js
or
mov
cmpsb
xchg
or
adc
pushl
xchg
adc
subl
mov
jecxz
movsl
jg
mov
fildl
mov
dec
mov
imul
mov
testb
and
xchg
xchg
sbb
into
adc
popf
popf
jle
jl
or
pop
jae
outsb
push
fiadds
xor
stc
add
popf
sub
jmp
popf
popa
mov
int3
in
xor
lret
jmp
es
aam
loope
in
in
adcb
jbe
gs
sti
jl
jecxz
inc
sbb
inc
es
sbb
and
inc
iret
pop
mov
ret
imul
insb
test
dec
pop
lret
stos
fsubrp
jge
das
xchg
scas
sub
jge
test
out
loope
dec
int
cmp
loop
pushf
jmp
inc
rcrb
cmp
jo
loop
iret
addr16
sti
pop
mov
rorl
xchg
je
ljmp
push
pop
out
mov
dec
cmpsl
push
aaa
les
mov
fstps
xchg
lret
jp
lods
mul
leave
push
pop
add
andb
fiadds
aas
or
mov
or
in
dec
test
push
int
sub
add
xchg
or
test
fwait
das
adc
loopne
enter
enter
jg
adc
cmpsl
mov
imul
inc
push
sub
arpl
shlb
out
xor
jl
adc
rclb
and
fadd
mov
jmp
jmp
divl
pop
push
jp
cmp
xor
out
or
cmc
mov
xchg
push
add
test
sub
stc
mov
mov
and
das
mov
fs
adc
cmpsb
inc
adc
test
pop
stos
cmc
dec
les
jmp
addr16
test
cmp
sub
imul
test
mov
mov
adc
lret
pop
aas
sti
aad
pop
mov
mov
sahf
push
dec
dec
ljmp
fdivr
and
jmp
lret
xor
jo
dec
popa
pop
pop
sbb
and
addr16
ljmp
cmpsl
xchg
jb
movsl
sbb
idivb
push
insb
mov
sub
popa
mov
jg
stc
push
sub
inc
andb
pusha
test
pop
mov
jno
mov
nop
scas
imul
sbb
sub
xchg
fwait
or
add
in
or
cmp
inc
push
enter
sbbl
jo
outsl
popf
xor
mov
aam
mov
test
ljmp
adc
divl
pop
ret
repz
dec
cmp
push
add
loope
cmp
in
bound
xlat
pop
xor
out
into
outsl
push
jno
xor
sub
popf
mov
sub
xchg
cmp
sub
aas
in
mov
in
repnz
addr16
adc
jmp
cmpsb
sbb
lahf
out
xchg
test
int
add
lods
dec
push
mov
jns
sbb
inc
mov
add
ret
loope
aam
jge
adcl
jb
movsb
mov
mov
mov
push
jbe
inc
lds
fiaddl
add
cld
stos
hlt
adc
push
push
out
negl
ret
sarb
sub
dec
add
push
int3
in
or
mov
jbe
out
lret
dec
test
jp
int3
enter
jge
in
cmp
push
sbb
or
xor
jbe
fisubs
adc
into
push
push
scas
ret
adc
ret
mov
scas
adc
mov
sbb
or
jne
dec
xchg
bound
or
xchg
cs
jb
stos
rcr
inc
or
out
ss
lods
lea
roll
and
jb
ret
add
xchg
push
cmp
xor
or
xor
cltd
xor
mov
cmp
sti
mulb
test
add
dec
xchg
jno
push
jl
idivb
dec
add
lock
ja
mov
daa
sahf
test
hlt
js
push
mov
imul
mov
iret
adcb
lods
mov
and
call
nop
loopne
jns
mov
daa
cmpl
xchg
xchg
repnz
push
imul
sub
or
in
add
mov
fwait
mov
pop
push
push
xor
mov
mov
hlt
sub
test
sub
add
mov
cwtl
push
dec
cmp
into
xlat
mov
add
jmp
sbb
out
mov
pushf
pop
jge
iret
movsl
cltd
stos
addb
mov
mov
loope
mov
jg
jae
das
cmc
adc
jno
mov
pusha
fld
mov
fdivrs
mov
add
arpl
maskmovq
notl
sub
test
jmp
std
je
jmp
mov
movb
test
push
xchg
and
and
scas
sbb
popf
inc
lret
ljmp
push
mov
sub
outsl
test
lahf
dec
and
cs
cmp
cmpsb
or
dec
cli
pop
xchg
fabs
movups
lcall
xor
out
stc
lahf
aad
in
stc
outsl
in
pop
ja
test
dec
xlat
in
jle
lret
and
mov
mov
adc
lret
popa
pop
mov
cmp
jo
add
add
add
daa
in
shlb
mov
and
andl
aam
aas
push
sbb
push
fstpt
and
push
hlt
lea
add
call
adc
mov
xor
jge
and
dec
dec
add
adcl
int3
inc
imul
dec
xor
loop
iret
lahf
ret
bnd
cli
scas
repz
insb
fldl
push
push
cmp
add
fidivs
pop
shll
fld
insl
ficoms
mov
jg
dec
cmpl
cmp
xchg
push
cwtl
jo
dec
xor
sarl
dec
push
stos
push
movsl
lret
addr16
cmp
mov
ss
add
or
shl
gs
int
lcall
icebp
and
inc
sub
insb
mov
mov
inc
je
jne
xchg
mov
jae
in
cmpsl
cwtl
cwtl
mov
lcall
inc
push
idivb
arpl
pop
dec
and
ja
pop
add
mov
cwtl
das
or
ret
push
repnz
mov
push
lods
mov
xchg
jbe,pt
ss
insl
lahf
cmc
sub
mov
xchg
test
cs
add
pop
adc
imul
mov
jo
out
or
les
pop
test
pop
mov
or
mov
push
std
mov
leave
adc
scas
jne
inc
aam
lods
adc
adc
cltd
xchg
ret
movsb
cmp
mov
jmp
sub
mov
cwtl
in
cmp
fidivl
leave
push
mov
into
fs
enter
lret
jns
ja
ss
jle
mov
addl
das
aam
out
and
fwait
roll
lods
inc
inc
pop
test
clc
lcall
push
pop
jns
and
subl
adc
add
jge
dec
pslld
loopne
push
push
shl
inc
hlt
push
lods
fs
pop
in
adc
repnz
imul
xchg
mov
cld
sti
loop
add
xchg
ficomps
jne
push
int
cld
fs
inc
push
add
repnz
jmp
jo
xchg
pop
pusha
repz
fsub
cmp
mov
je
rcl
inc
cmp
jnp
aad
repz
pop
push
and
xor
add
add
mov
fdivrs
test
aam
xchg
out
inc
add
in
cmp
fbstp
xchg
ret
popf
in
fistps
pop
sbb
mov
stc
fidivrs
outsl
mov
sub
bound
fidivl
push
mov
loopne
push
pop
xorb
xchg
adc
mov
sbb
test
mov
push
push
and
mov
dec
aad
clc
push
fs
mov
mov
iret
sub
in
jp
loopne
mov
in
movsl
in
sub
insb
ss
adc
add
add
and
add
add
cmp
push
pop
jg
nop
ja
pop
xchg
mov
loope
pop
in
xor
dec
jmp
or
mov
jno
inc
and
nop
aad
add
mov
scas
xor
pop
jb
mov
ljmp
push
mov
and
push
jecxz
rolb
cs
das
inc
sub
rcll
cmp
mov
adc
push
ror
gs
pop
xor
sbb
aaa
mov
leave
test
aas
in
xor
mov
loopne
shl
adc
or
mov
push
xor
out
pop
xor
sub
or
lods
stos
ret
lds
jle
scas
pop
aad
push
jbe
jl
cmp
fdivr
lods
dec
xor
fwait
sbb
or
pop
xchg
fwait
and
inc
out
scas
cwtl
jns
fwait
xchg
mov
inc
insl
xchg
and
mov
stos
shl
lds
fs
subl
xlat
dec
out
sub
popa
jne
cmp
es
pusha
cmpsb
pop
into
test
nop
test
inc
ret
push
jle
inc
pushf
and
cmp
adc
idivb
dec
xchg
push
cmpsb
jne
sbb
adc
dec
cltd
xor
inc
mov
jae
xor
dec
in
dec
jb
in
test
add
xchg
les
mov
lret
mov
loop
in
or
in
sub
and
js
mov
jbe
fcom
add
sub
ja
or
push
mov
inc
xchg
testl
inc
shl
push
imul
ret
sub
mov
or
xor
jmp
loop
xchg
fcoms
orb
xor
dec
xchg
fldl
adc
into
cmp
insb
mov
out
pop
xor
mov
push
out
cwtl
push
dec
cmpsl
stc
rcrl
and
aam
ss
xchg
pushf
ret
xchg
insl
or
les
pop
cmp
jne
movsl
mov
push
sub
dec
or
cwtl
push
out
test
iret
mov
xchg
push
fidivrs
cmp
jle
rcr
push
sub
and
add
cmc
xchg
xor
dec
adc
dec
outsl
cmc
jo
sub
xchg
jg
faddl
jle
icebp
jo
jmp
loop
sbb
je
xor
mov
aas
pop
adc
addr16
lods
and
dec
rcrb
pop
jb
inc
andps
lret
inc
aam
lret
sub
xor
xchg
ret
out
jo
fadd
stos
jno
gs
xchg
mov
cmp
xor
ret
pop
into
cmp
fwait
mov
leave
test
inc
enter
pop
mov
dec
pop
orb
jl
pop
mov
pop
cmp
daa
lea
push
repnz
fisttpll
out
enter
push
mov
out
and
push
jg
add
inc
jp
push
shrb
pop
and
mov
jle
sqrtps
aas
dec
pop
push
out
add
mov
or
mov
cmp
out
dec
or
xor
inc
popf
test
mov
push
cs
jp
mov
dec
xchg
inc
sub
xor
xchg
xlat
mov
int
push
enter
sbb
or
dec
out
lret
pop
xor
pop
mov
aas
in
std
pop
divb
fcomps
adc
jno
cmp
loop
in
stos
sti
in
ret
test
sub
add
xor
and
cmp
sub
movsl
lcall
push
aaa
in
or
sbb
mov
lods
xchg
cmp
adc
dec
inc
in
push
xor
popf
add
loope
stos
sub
scas
stc
loopne
cltd
in
push
mov
mov
icebp
adc
adc
mov
imul
insl
and
jmp
xor
fwait
in
or
adc
out
insl
mov
ss
xchg
shlb
adc
add
sub
leave
push
call
repz
mov
xchg
lock
mov
xchg
or
sbb
or
stos
imul
sbb
lods
push
xor
nop
cli
and
loop
jns
and
fldenv
pushf
or
imul
mov
repnz
xorb
jl
in
fcoms
mov
sub
xor
ret
push
sub
sahf
out
lcall
pop
jne
xchg
ss
loope
xchg
xchg
daa
inc
add
movsl
xchg
push
push
pop
rcrb
movsl
pop
ja
mov
pop
imul
mov
mov
or
decb
add
jne
sbbl
ret
hlt
insl
test
rcrl
sub
mov
add
lods
scas
rcrl
push
fists
or
lock
xor
aaa
in
je
sbb
jo
mov
ss
aas
sub
sub
dec
xchg
aaa
sub
dec
outsb
pop
mov
add
out
out
sbb
in
sbbb
int3
mov
mov
testl
xor
or
iret
jge
cmpsl
mov
jl
jge
jns
xchg
lcall
cltd
jmp
sub
testl
jmp
ret
xchg
mov
xor
jnp
outsl
sbb
aam
fs
sub
icebp
mov
jg
adc
pusha
xor
mov
scas
loop
pop
cld
sbbl
scas
js
pop
sbb
mov
or
fwait
lock
cmpb
inc
mov
mov
out
inc
push
mov
in
mov
repnz
insl
ret
rolb
mov
pop
xor
mov
rcll
mov
js
jp
mov
and
repnz
adc
jle
cld
mov
jns
sahf
cmpsl
inc
or
adc
inc
mov
xor
cs
test
inc
xchg
roll
sbb
mov
push
test
divl
mov
aam
jno
es
xchg
aas
imul
pop
mov
mov
inc
xor
dec
xorl
cld
pop
inc
call
mov
stos
pop
mov
dec
cmpsl
pusha
in
int
inc
pushf
cmpsb
mov
div
loope
std
mov
cmp
divb
pop
jp
in
xor
out
jne
mov
shld
scas
mov
xor
cmpsl
lret
xchg
sahf
scas
notl
ror
jne
pop
cmp
and
sub
push
pop
sbbl
repz
mov
push
adc
ss
mov
insb
int
xchg
and
cmp
xchg
lret
jecxz
cli
dec
dec
push
jl
sbbl
mov
roll
fsub
push
test
icebp
into
stos
cmp
pop
jnp
xchg
ds
xor
fimull
popf
hlt
adc
xchg
mov
add
lret
inc
test
xchg
push
stc
adc
jb
repz
leave
and
xchg
pushl
out
in
rolb
ljmp
repz
pop
int
loop
cmpb
jae
loop
adcl
sarb
or
lds
push
jecxz
or
inc
aam
insl
sbb
sbb
add
sbb
mov
push
push
add
push
mov
insl
leave
sub
in
je
dec
sub
mov
or
xchg
mov
dec
aam
popl
lods
adc
sub
stc
and
mov
cmp
cmpsl
ss
sub
lcall
push
xchg
les
mov
lds
xor
pop
shr
int
sti
repz
jne
loop
les
int
and
sub
push
xchg
adc
mov
mov
mov
sbb
imul
iret
adc
imul
jae
leave
add
repnz
enter
mov
fstpl
cmp
add
call
dec
xchg
fcomp
push
je
mov
shll
xor
fisubs
movsb
mov
mov
jae
mov
cmp
mov
roll
push
cmp
and
in
mov
imul
rcr
jae
push
push
mov
push
cmpsb
fwait
imul
ss
fstp
mov
icebp
or
daa
mov
incl
fcoml
out
daa
xchg
mov
sbb
iret
mov
loop
movsl
push
mov
and
insl
jns
mov
cmpsl
pop
cmc
enter
imul
pop
arpl
dec
xor
add
or
and
js
cmp
dec
cltd
shll
mov
xor
adc
cli
ds
fwait
punpcklwd
mov
inc
mov
roll
in
or
cwtl
adc
lea
sbb
enter
in
sbb
cmpl
fwait
jae
dec
mov
sub
sti
out
fs
or
dec
push
pop
rorl
lcall
arpl
cmp
and
out
mov
mov
xchg
dec
movsl
dec
jo
xor
loop
xor
sarb
scas
adc
push
add
shlb
push
jp
ret
stos
das
ret
rcrb
js
push
sbbl
popa
cwtl
mov
pop
inc
mov
lods
pop
aad
sti
fbld
jbe
jo
scas
jge
lret
xchg
fisttpll
pop
xchg
ds
fcoms
ljmp
inc
call
push
movsl
dec
adc
dec
insb
stos
pop
jge
nop
or
cmp
aaa
cmp
dec
mov
pop
push
jge
mov
fwait
daa
lds
cmpsl
jmp
leave
pop
cwtl
jno
mov
stos
mov
mov
scas
add
in
outsl
pop
outsb
and
cltd
lock
fimull
sub
fmulp
out
mov
mov
pop
pop
lret
inc
push
imul
inc
cli
sarb
dec
lock
js
imul
les
push
pop
stc
sbb
cmc
in
xchg
sub
rol
pop
inc
ljmp
push
fs
popa
iret
js
cmc
push
dec
adc
sti
cmp
nop
add
push
sbb
pop
xlat
test
jmp
xchg
aam
and
ret
add
xlat
mov
adc
xor
xorb
cmp
or
popf
out
and
imul
cmpsl
xor
out
adc
fadd
lcall
jecxz
mov
xor
sysenter
and
mov
fists
cmp
shll
ss
stos
and
push
pop
psrad
sub
mov
and
pop
jl
or
bound
stc
ja
roll
inc
mov
lret
sbb
lods
mov
int
lahf
add
sahf
add
or
sub
es
jmp
pop
int
jo
sbb
pop
add
adc
inc
inc
jmp
jg
rorb
imul
sub
sbb
xchg
arpl
loop
push
cmp
dec
xchg
jno
xor
sbb
ja
push
rcrb
pop
cmpsb
and
inc
sbb
cmp
sbbl
in
jno
clc
out
and
fisttps
outsl
or
adc
std
inc
iret
scas
mov
or
inc
mov
aas
sub
cwtl
jno
push
test
in
and
cmpl
mov
fadds
xchg
js
jecxz
ds
sbb
sarl
cld
stos
xchg
mov
xor
jns
xchg
std
pop
sub
mov
stos
stos
imul
mov
mov
jns
fiaddl
sub
jge
push
xor
out
pop
dec
stos
jl
test
inc
scas
pop
dec
adc
aam
rcr
cld
test
mov
jo
mov
pop
push
push
inc
adc
ja
mov
test
cmp
mov
icebp
mov
cmpsl
shlb
cwtl
nop
aad
xchg
adcl
js
mov
out
gs
stos
mov
into
popa
mov
or
sbb
pusha
xchg
dec
bound
mov
jg
addb
cmpsb
push
es
aam
sub
adc
cmp
adc
inc
cmp
scas
int3
je
pop
cmp
sub
sbb
js
in
inc
out
stc
sub
dec
push
push
scas
mov
fwait
orl
lea
rorb
xor
bound
cmp
int
jno
and
mov
repnz
push
xor
mov
movsl
ss
fsts
jl
push
push
aad
outsl
imul
fbld
fbstp
cwtl
mov
inc
daa
out
rcrl
pop
or
xchg
xchg
sub
dec
jb
mov
or
xor
xor
cmp
push
inc
pop
inc
in
xor
and
and
add
xor
jo
ret
or
jmp
scas
scas
scas
or
mov
gs
jg
je
sub
addb
mov
js
arpl
subl
andb
cmpsl
add
ret
adc
xchg
mov
in
fcomps
xchg
imul
or
jecxz
divl
repz
mov
mov
xchg
aas
rcrl
push
pop
xchg
or
xlat
mov
in
incl
mov
cmp
movsl
sbb
mov
sbb
cli
into
addr16
sub
sbb
sub
subl
jmp
das
jecxz
dec
xor
cmpsl
ret
faddl
testl
imul
mov
inc
inc
icebp
cltd
inc
cmp
or
push
mov
sbb
notb
dec
jecxz
lcall
jb
cs
push
xor
jecxz
inc
inc
and
es
lods
in
mov
test
adc
ds
or
cmpsl
jle
pop
xchg
mov
add
sub
jecxz
push
mov
lock
and
imul
lahf
mov
subb
punpckhdq
adc
and
pushf
bnd
hlt
dec
clc
xor
pop
fidivs
adc
adc
mov
cmpsb
add
leave
xchg
mov
dec
test
add
sub
idivb
jmp
js
push
cmp
mov
stos
test
add
mov
in
jb
cmp
pushf
cmpsl
sub
jns
ret
xorb
push
mov
cmp
mov
movsl
flds
icebp
xchg
fs
leave
outsl
in
mov
inc
or
pop
lods
addb
lea
xor
mov
out
push
ficoms
jg
mov
xchg
xchg
pusha
cmp
fwait
daa
std
in
dec
pop
jo
or
sub
push
push
sub
cltd
jb
mov
mov
and
dec
fdivl
and
xor
mov
sahf
push
cwtl
call
jo
or
pop
xor
lcall
mov
inc
push
shll
imul
sub
dec
inc
sahf
sbb
and
fdivp
stos
pushf
hlt
insl
mov
rep
movsl
lock
mov
enter
jp
fucomip
ret
shlb
push
mov
adc
cmp
push
daa
sub
movsb
cmp
sbb
mov
push
jnp
sarl
push
inc
lret
jp
and
ljmp
in
or
dec
sbb
std
insb
pop
inc
lods
sahf
sub
push
pop
pushf
mov
mov
or
dec
xor
push
bound
nop
push
push
add
test
les
pop
fmull
in
push
mov
adc
pop
pop
in
sarl
cmp
stos
dec
in
mov
mov
xor
stos
xor
aaa
mov
mul
fldenv
cltd
inc
lcall
jbe
out
icebp
in
pop
push
mov
repnz
lret
pop
and
mov
jo
adc
pop
pop
xor
inc
mov
xchg
in
insl
gs
jns
jnp
mov
mov
cmpl
popa
jae
out
add
cmp
pusha
popa
outsb
in
jae
sub
test
shll
jp
call
test
and
sbb
inc
daa
mov
jno
cltd
push
lcall
inc
mov
loopne
adc
mov
mov
scas
pop
inc
jnp
mov
outsb
inc
mov
popf
hlt
mov
mov
jg
sahf
cld
adc
jecxz
dec
xor
out
iret
and
push
mov
movsl
pop
not
ret
lods
sub
push
in
ja
inc
adcl
jae
out
inc
pop
mov
cmp
adc
sub
jo
jmp
inc
cmpsl
sti
jbe
lahf
mov
adc
xchg
xchg
jle
clc
loopne
inc
mov
sub
mov
inc
cmc
jg
pop
mov
shl
cld
pop
push
xchg
sub
and
jmp
mov
sbb
push
lds
xchg
pop
fstps
xchg
out
mov
push
sub
push
and
movsl
lock
mov
daa
or
repnz
imul
add
cmp
in
pop
jbe
jae
mov
and
inc
fs
sub
cli
sub
sbb
scas
dec
mov
or
shll
jbe
jbe
cmp
dec
dec
insl
jmp
es
pushf
arpl
push
jno
clc
daa
out
adc
dec
aas
lock
or
and
xor
inc
xor
imul
push
pusha
push
es
mov
or
rcll
dec
mov
scas
xchg
aas
mov
and
xlat
and
jnp
sarl
mov
jl
push
jl
stos
sub
mov
jle
mov
jge
loopne
xorb
mov
jnp
jle
ja
mov
sbb
push
adc
ss
stc
cli
mov
fistpll
hlt
pop
inc
mov
adc
cmp
push
ja
aam
push
and
aam
dec
mov
xchg
bndstx
xor
mov
shl
cmp
and
enter
push
or
and
mov
stos
mov
and
gs
aaa
dec
shl
stos
les
mov
cmp
adc
pop
mov
fbstp
xor
pop
idivb
adc
and
and
xchg
sbb
jmp
mov
mov
into
aam
inc
pushf
in
or
ret
dec
fbld
cmpsb
jle
xchg
mov
lock
sbb
dec
cmp
dec
sub
inc
pop
arpl
jnp
addb
sub
pusha
pop
pop
xchg
loopne
xlat
je
shlb
lods
dec
or
jmp
int3
shl
dec
jg
adc
sbb
xchg
xor
mov
sbb
ljmp
daa
sbb
sbb
sub
shlb
xchg
mov
cmc
pandn
mov
repnz
icebp
mov
mov
popf
rorb
jp
arpl
xchg
test
xor
pop
push
in
dec
ja
jnp
stos
inc
pop
push
push
mov
sub
lcall
inc
fwait
subb
sub
sbb
jno
pop
pop
sub
mov
jno
outsl
xor
gs
cmp
das
dec
dec
mov
dec
cmc
scas
xlat
push
movl
sti
inc
xor
xchg
push
xchg
inc
lret
mov
push
and
cmp
jns
fistps
dec
ret
xor
xlat
xchg
std
inc
ficompl
dec
insb
dec
mov
rcrb
push
xchg
sti
xor
dec
lock
loop
fsubl
in
jo
leave
mov
xlat
jmp
mov
aaa
push
in
dec
mov
and
sbb
dec
adc
push
lock
sub
mov
iret
testb
mov
xor
cmc
dec
pop
jecxz
inc
ja
xor
adc
das
outsl
fmul
popf
fucomp
scas
rorb
mov
mov
mov
cs
cmp
dec
jns
cmpsb
insl
addr16
mov
sbb
movl
xchg
pushf
xchg
jge
pushf
iret
mov
fistpll
imul
out
xchg
in
pop
in
mov
das
add
pop
and
push
cmc
push
jle
cmpsb
cmp
cmp
scas
sahf
repz
loopne
dec
je
aam
inc
adc
imul
and
into
push
pusha
repz
mov
negb
repz
cmp
pop
pop
push
test
dec
push
test
mov
stos
into
outsl
dec
jp
sti
xor
in
rcrb
cld
xchg
mov
addr16
cmp
sbb
xor
xor
jmp
movsl
sahf
pop
or
aas
icebp
insl
jbe
mov
scas
jle
inc
ljmp
lods
aas
int3
pop
xor
lret
mov
iret
sub
stos
dec
xchg
cmp
insl
jg
inc
inc
pop
es
fs
and
dec
mov
jno
push
icebp
cltd
test
xchg
aas
je
push
sub
mov
xchg
jno
mov
scas
subb
inc
jmp
in
and
rcl
xchg
in
in
je
jecxz
mov
mov
add
movsl
imull
int3
mov
movsb
adc
mov
lret
sahf
xor
jo
ret
inc
fs
sub
xor
jmp
nop
add
cld
lcall
dec
sbb
inc
push
pushf
ja
jg
ret
mov
jae
repnz
mov
jg
inc
cmp
pushf
inc
mov
sub
movsl
aaa
inc
or
mov
mov
rorb
mov
ds
cltd
pop
add
and
cmp
pushf
cmp
inc
int3
pop
stc
push
icebp
jne
clc
xchg
push
fs
or
aad
out
sarb
std
movsb
cmp
xor
mov
mov
ds
rcl
aas
adc
pop
jp
inc
fs
lds
push
shlb
imul
daa
jbe
add
bound
movsb
lea
push
hlt
fcoml
push
lds
sti
insl
add
addr16
repnz
rorl
xor
fidivl
xor
mov
jge
jne
push
xlat
iret
lahf
int3
jns
cmp
pop
xchg
mov
pusha
sti
and
gs
mov
dec
aaa
xor
sbb
shrb
mov
xchg
out
mov
mov
cwtl
mov
dec
inc
pushf
adc
outsl
sbb
xchg
repz
jle
push
inc
mov
push
pop
adc
xchg
sbb
cmp
scas
sub
pop
mov
inc
mov
jb
imul
dec
ss
inc
or
adc
sti
arpl
out
jl
push
hlt
mov
cltd
pop
mov
dec
sub
xchg
loop
xlat
or
sbb
push
in
lock
add
jl
rolb
mov
mov
push
mov
or
xchg
xchg
mov
lods
cmp
pop
stc
mov
and
aas
cmp
shl
repnz
jne
ret
add
je
stos
inc
arpl
jo
fsts
jbe
int
sub
in
repz
fs
leave
popl
jno
pop
dec
or
cmp
jns
or
ds
adc
jmp
stos
popa
jp
inc
data16
adc
lods
fstps
pop
pop
pop
test
push
push
mov
xchg
jge
aas
cmp
inc
stos
inc
rcll
xor
ror
lds
scas
sti
and
je
out
int
sbb
sbb
sbb
pop
xchg
imul
outsl
aam
push
call
or
stos
add
aas
push
ljmp
std
xchg
cltd
ds
cld
lock
decb
ss
ret
xchg
sahf
in
or
inc
mov
push
shlb
and
inc
pop
outsl
jg
pop
add
dec
shll
icebp
loopne
jnp
fstl
dec
sub
jp
imul
push
test
jbe
scas
fstpl
ret
cmp
fs
adc
mov
sahf
call
lahf
daa
push
xor
aam
aas
jnp
push
pop
pop
inc
sub
push
shll
push
test
mov
mov
inc
arpl
shl
mov
mov
ret
lods
aas
mov
xor
xchg
ja
outsb
out
jmp
inc
cwtl
jmp
clc
mov
mov
pop
xor
ret
jae
ss
mov
loopne
mov
sbb
repnz
iret
inc
clc
les
lahf
cmp
fsubr
mov
pop
pop
loop
dec
adc
in
lock
imul
inc
stc
popf
aaa
dec
xchg
xor
or
push
call
into
dec
int3
adc
std
add
lea
mov
sti
imul
or
inc
gs
cmp
scas
loope
cmpb
mov
mov
loopne
jmp
add
pop
fnstcw
or
lea
jbe
outsb
mov
xchg
xchg
jb
and
gs
xchg
ret
in
sub
ror
push
cmp
fists
popf
adc
test
push
ds
pop
rorb
cmp
rclb
rolb
or
xchg
hlt
in
jp
cmpb
mov
jmp
cwtl
movsb
inc
out
mov
scas
outsb
dec
ficompl
push
add
shr
sub
mov
push
pop
mov
mov
sti
dec
int
jo
xchg
lods
bound
add
and
dec
enter
jp
lret
add
out
inc
add
fldenv
xor
loop
mov
pop
or
in
or
jo
movsl
mov
pop
test
ss
mov
cs
shl
lds
sbb
cltd
mov
in
shr
loop
mov
daa
roll
sub
notb
jle
inc
into
cmpsb
inc
hlt
sti
xchg
ss
test
pop
cmc
popf
stos
cmp
call
mov
and
out
popa
push
xlat
pop
mov
lods
jno
and
popf
into
arpl
mov
stos
data16
int3
mov
mov
movsb
cwtl
cmpsl
pop
outsl
pop
mov
jp
push
arpl
jle
push
ret
cmpsb
fs
jb
lods
roll
inc
jle
inc
jb
popf
sbb
movl
xor
jo
pop
sbb
pusha
dec
les
lret
mov
arpl
mov
std
xchg
or
stos
mov
clc
cmc
mov
loop
lret
mov
pop
incl
stc
std
and
imul
out
pop
dec
xor
xchg
pop
fwait
adc
xchg
sub
xorl
loope
xchg
mov
test
xchg
inc
push
mov
inc
popa
inc
fcos
bnd
cmp
negl
aad
es
mov
mov
ljmp
mov
das
xchg
stos
ror
mov
xorb
idivl
inc
aad
push
sub
cli
out
jbe
sbb
inc
andb
pop
and
aas
int
es
jne
mov
add
test
rclb
out
iret
pop
test
movsb
mov
ja
inc
dec
rorb
push
gs
out
dec
dec
jb
cmpsb
int3
pop
test
cmp
ds
add
mov
sub
push
inc
sbb
push
addr16
cltd
sub
popf
and
sub
jb
std
out
push
jae
jl
jns
mov
cmp
mov
jge
and
cmp
shrl
jl
pop
or
scas
sub
test
inc
arpl
ss
stos
imul
inc
mov
aad
jge
fdivl
xchg
cmp
inc
push
cmp
shlb
stos
popf
incb
mov
lods
arpl
shll
ds
aas
sub
dec
xchg
mov
xchg
add
pop
or
fisubrs
aad
mov
div
test
in
or
and
adc
mov
xchg
fdivr
es
aam
js
xlat
ljmp
rol
scas
cwtl
shll
mov
cmpsl
int
inc
cmp
hlt
xchg
xchg
lea
jae
insl
xchg
inc
addr16
out
sbb
adc
xchg
scas
or
cmpsb
and
or
add
popa
xchg
lea
les
dec
sti
mov
mov
pop
cmp
push
movsb
pushf
test
in
dec
dec
lret
jnp
add
aaa
cld
mov
mov
jno
dec
or
cmpsb
mov
scas
lret
pushf
pop
mov
adc
add
mov
fwait
inc
jl
mov
fdivp
xor
std
outsl
cwtl
ds
adc
lcall
repnz
mov
fsubl
and
bound
mov
jno
hlt
xchg
adc
insb
add
pop
xor
dec
call
out
mov
and
enter
jge
ret
insb
testb
sub
fldcw
mov
mov
test
cwtl
ret
sbb
dec
lret
mov
lcall
or
nop
ljmp
andb
mov
mov
mov
sti
sbbb
ja
ljmp
push
sub
cli
mov
sub
sub
mov
mov
mov
push
push
cli
das
in
cmpl
sbb
mov
adc
sub
mov
shrb
mov
inc
jno
jae
sbb
ja
popa
aad
in
push
xor
add
push
mov
in
fsubrl
push
fwait
adc
jmp
and
jae
cs
gs
ja
es
ror
test
in
inc
pushl
adc
lds
pop
je
xor
movsl
and
jp
lret
and
push
cmp
jl
lahf
fwait
int3
jno
nop
repnz
inc
push
add
cmp
jge
push
add
sti
arpl
idivl
les
icebp
dec
ljmp
sub
mov
subb
push
pop
cmp
sbb
inc
add
dec
shrb
les
dec
jnp
ficoms
fs
mov
icebp
push
test
mov
sbb
xor
fs
movl
mov
or
ror
repz
fs
stos
stos
gs
cmpsb
mov
aas
jle
int
and
call
xor
outsl
jo
gs
lods
or
mov
push
clc
cmp
fcmove
jle
cmp
out
add
cmp
jne
adc
cmp
xchg
gs
scas
and
xor
dec
inc
imul
insl
popf
addl
gs
jno
into
push
daa
sub
jb
rol
fcmove
outsb
xchg
adc
aas
movsb
add
xchg
push
loopne
outsb
xor
jge
sbb
xor
shrb
shl
push
mov
jmp
xchg
pop
lea
stc
lret
cltd
incb
push
in
lock
dec
stc
fisubrs
or
pop
mov
addr16
aad
movl
push
loopne
xchg
or
xchg
add
jne
cmpsl
or
lock
repz
and
fstpt
js
mov
in
cmpsb
pop
pop
dec
and
pop
fucomip
stos
pop
push
dec
in
adcl
mov
sbb
cld
pop
lahf
sub
push
xchg
sub
fdivrl
shrl
mov
or
push
scas
mov
enter
fstl
xchg
push
sbb
fucomip
scas
cli
xor
sub
xor
pop
mov
test
bound
adc
dec
sbb
out
sti
pop
insl
cmc
std
sti
fs
lods
push
xor
pop
stc
pop
push
cs
rcll
pushf
test
test
add
std
push
movsb
fwait
add
sub
or
inc
inc
jp
or
pop
cltd
ret
repnz
jecxz
stc
cmp
or
sbb
clc
sbb
jge
dec
add
out
xchg
gs
sbb
cmp
std
ja
iret
je
xor
lods
dec
xchg
pop
loope
hlt
or
lcall
fdivs
mov
addl
popa
push
in
mov
mov
inc
mov
inc
aad
fwait
or
dec
pop
sahf
jmp
pop
push
push
insb
xor
push
adc
cmpsl
scas
pop
sbb
jno
ljmp
fmuls
lret
cmp
and
dec
out
inc
in
in
stc
push
les
clc
movsb
cmp
jbe
push
inc
stos
push
and
xchg
dec
dec
test
pop
fsubrp
sbb
jle
pop
repz
shl
mov
or
pop
or
lds
xor
inc
hlt
lods
xor
fnsaves
jo
loopne
ljmp
rcll
icebp
lcall
cmp
sti
hlt
faddl
push
icebp
adc
fs
lods
ss
lods
pushf
test
add
jge
inc
adc
rorl
cltd
mov
nop
or
testb
push
pop
add
add
mov
in
cli
dec
cmp
pop
lcall
in
add
mov
int
imul
enter
int3
outsl
dec
jne
jne
add
test
in
insb
shrb
out
lahf
xor
adc
ds
nop
push
ficomps
xchg
mov
jg
arpl
pop
push
sbb
mov
jecxz
or
cmp
nop
jb
push
mov
cli
int3
inc
test
test
jae
ja
arpl
add
jecxz
dec
sbb
mov
jmp
adc
jmp
ljmp
fnstenv
mov
sbb
xchg
adc
in
aad
test
lahf
and
cmp
mov
and
iret
ss
mov
or
inc
push
push
pop
mov
lahf
inc
imul
mov
bound
xor
mov
add
popf
out
sub
daa
repnz
outsb
and
je
imul
mov
push
sub
stc
fcomps
and
daa
mov
and
les
xchg
imul
jo
aas
icebp
out
les
iret
enter
clc
pop
pop
cmp
add
int
add
jne
xchg
sub
les
add
bound
or
push
sahf
decb
or
adc
setle
hlt
daa
lret
incb
adc
lds
push
add
aas
pop
xor
sti
mov
fdivrs
test
jl
mov
mov
push
and
aaa
icebp
in
pop
adc
cmp
dec
mov
inc
inc
jmp
lahf
ja
add
in
insl
sub
dec
dec
ret
xor
inc
cmp
mov
inc
xchg
pusha
push
hlt
jmp
and
mov
jp
mov
xor
xchg
inc
imulb
add
lcall
or
xor
jb
inc
inc
in
add
sbb
ret
dec
mov
les
es
mov
push
push
jl
shlb
scas
mov
inc
leave
jns
gs
cmp
in
loop
jnp
aam
lret
jbe
fcomps
ja
inc
insl
jp
dec
inc
jg
pop
mov
sub
or
in
test
adc
sub
jns
cltd
aas
out
mov
mov
add
ja
push
xchg
adc
dec
imul
pop
inc
les
aad
cmp
push
bound
push
xchg
sti
lahf
pop
mov
popf
xor
xor
inc
pop
cmpsb
subl
mov
in
and
pop
movsl
ss
xlat
in
stos
cmpsl
jle
lahf
jp
ljmp
adc
cmc
ds
les
clc
cmc
sub
push
test
xchg
notl
in
ficompl
popf
mov
sti
aad
adc
ja
push
jne
dec
mov
mov
test
icebp
mov
jo
cwtl
test
mov
sub
pmulhw
xor
lret
mov
or
sub
in
dec
fldcw
fidivrs
imul
or
adc
data16
mov
add
mov
ss
insb
jge
sbb
jecxz
jmp
fcoms
jo
inc
jp
cmp
sbb
sbb
lds
pop
loope
mov
test
or
push
cld
adc
mov
rcrb
shll
jnp
add
sub
and
cmp
jge
xchg
out
mov
test
loop
sbb
cwtl
out
pop
fstpl
sbb
mov
mov
inc
jne
jb
mov
and
cmp
push
lods
jg
cs
and
push
push
insl
sub
xchg
cwtl
dec
sbb
clc
cmp
pushf
mov
mov
dec
mov
sti
out
adc
cmp
notb
jno
add
add
push
ficoms
jne
fisubrs
gs
lcall
sbb
cli
push
scas
mov
dec
sahf
loop
add
add
or
cmpl
jp
lock
cmp
xchg
xchg
jns
push
jns
je
scas
call
jae
xchg
jp
pop
in
xor
pusha
clc
push
out
xor
lret
jnp
sarb
jae
xchg
mul
xor
xchg
repz
jg
paddsb
ret
clc
mov
movsl
test
dec
xor
mov
icebp
in
and
push
arpl
jbe
cmp
andl
xchg
sub
cmp
std
push
lea
dec
pop
in
mov
aam
cmp
movsl
mov
popf
lret
cmpsl
and
sbb
inc
pushf
push
mov
sbb
orb
int3
sub
xchg
add
mov
mov
or
mov
mov
loopne
or
mov
dec
jno
outsb
xor
xor
hlt
insl
andb
xchg
jns
mov
lret
cwtl
and
sub
jae
xchg
lock
in
adc
lods
jbe
jae
jo
es
sbb
add
std
add
dec
sbb
popf
jg
jns
lock
sub
in
mov
fdivl
push
hlt
cli
xchg
pop
lret
bt
xor
icebp
mov
stc
push
arpl
lods
stos
outsb
cmc
mov
push
fistpll
jg
scas
xchg
xchg
sbb
cli
leave
cmp
inc
sub
add
addr16
xlat
xor
int3
sbb
icebp
dec
outsl
loope
sbb
imul
cs
fwait
or
dec
push
mov
xchg
jg
out
std
lret
dec
xchg
outsb
rorb
jne
lea
jl
outsb
nop
aaa
stos
insl
and
int
inc
pop
or
or
inc
insb
pop
dec
cmp
leave
xor
scas
pop
adcl
ljmp
lret
xchg
popf
or
dec
in
and
or
movsl
lods
mov
mov
and
sub
push
add
dec
fistl
adc
mov
movsb
jne
leave
div
negl
cmp
cmpsb
mov
jae
cmc
mov
arpl
shll
cmp
push
xchg
mov
leave
testl
test
lea
mov
inc
push
cmpl
ret
pop
ror
inc
mov
das
mov
les
cld
xor
add
mov
in
push
or
dec
cltd
cmp
lods
dec
pop
mov
popf
sti
xchg
mov
add
mov
std
inc
and
inc
jl
cmp
jg
ret
in
rclb
add
repz
mov
sahf
xchg
sbb
and
dec
push
sub
lret
test
inc
jbe
pop
push
icebp
popa
enter
jne
lahf
aam
aaa
push
popa
lods
mov
adcl
loope
adc
or
ret
pop
cmovg
adc
dec
inc
subl
xchg
cmp
or
stc
inc
insb
xchg
ret
sub
push
push
sbb
adc
xchg
clc
sarb
dec
popf
les
sub
mov
pop
sub
jp
pop
call
dec
ljmp
test
movsl
imul
enter
mov
rcrl
mov
or
xchg
pop
cmpsl
addb
into
adc
jae
dec
lahf
push
adc
scas
dec
cmp
sbb
out
popa
repz
call
and
inc
dec
fs
lahf
gs
push
mov
fsubl
or
icebp
xchg
xor
mov
cmp
xor
pushf
leave
cmp
adc
data16
stos
lods
frstor
out
in
out
xchg
pusha
iret
mov
cmp
sub
or
add
push
daa
jp
jmp
lock
inc
shrb
and
sub
insl
stos
addr16
xor
cmp
cmpl
int
or
sub
mov
or
jns
lods
ret
mov
xor
roll
test
and
push
jns
adc
pop
in
cmp
push
mov
aas
ljmp
jmp
data16
mov
insl
push
fldl
mov
xor
or
add
fisttpl
movsb
in
cmc
xchg
fimull
gs
push
pop
adc
fmuls
lcall
or
xor
mov
adc
fisttpl
jge
inc
out
fildll
dec
xor
adc
iret
mov
xchg
and
inc
rcr
rcl
and
mov
mov
test
fucomip
or
in
scas
orl
xchg
mov
fstpt
cmp
daa
push
inc
bound
pop
jl
sub
dec
fistl
cmpb
push
cmp
cld
mov
lahf
idivl
fwait
push
jmp
daa
orb
xor
ds
push
sub
out
cmp
fidivrs
inc
xchg
loop
jmp
pop
mov
loop
xorb
fwait
clc
add
push
ss
hlt
jp
ljmp
je
sbb
ret
add
or
aas
mov
add
add
pop
adc
and
pop
sub
mov
jae
int
addr16
test
cmp
pop
sub
leave
stc
outsl
jp
add
ljmp
imul
adc
lret
test
cwtl
pop
hlt
cmp
adcl
ds
inc
push
cmpsb
pushf
pop
test
add
xor
lds
leave
xchg
pmulhw
ss
daa
cmp
arpl
cld
jle
sbb
xor
lock
push
inc
push
call
ja
dec
rorb
daa
mov
outsl
dec
sbb
scas
adc
adc
je
les
outsl
pop
cli
leave
xchg
aaa
add
push
std
jmp
insb
sub
fs
imul
mov
mov
jo
xchg
imul
inc
inc
test
pop
lea
jno
mov
test
je
clc
jl
jmp
pop
pop
cmp
stc
pop
mov
pop
andl
sub
pop
ret
cmp
push
fcom
shll
incb
mov
fcoml
sbb
test
xchg
repnz
push
xchg
mov
push
nop
sarl
movsl
fs
cmp
sbb
pop
cli
pusha
jo
js
stc
test
and
testl
push
int
xchg
fnstcw
test
mov
daa
push
outsb
dec
rcrl
daa
adc
sub
mov
and
sti
popf
cmp
cld
ret
mov
sbb
out
jae
adc
das
jmp
lea
dec
sub
rdpmc
aas
dec
mov
cmp
sub
xor
xchg
push
and
adc
mov
pushf
shrl
mov
or
mov
xchg
repnz
inc
adc
insl
or
xchg
mov
push
inc
fiaddl
insb
out
fsts
mov
ljmp
jbe
ds
mov
roll
out
sub
mov
jb
jae
adcb
dec
jb
sbb
sbb
nop
sbb
fisttpl
lret
xchg
decl
aas
movsl
cmp
xchg
xor
sub
or
mov
or
aad
lcall
jne
fldcw
ljmp
stc
ljmp
int3
xorb
pause
sar
xlat
ja
xchg
shr
lcall
jb
push
fsub
sbb
in
mov
data16
inc
sbb
aad
cmc
inc
xchg
out
jns
xchg
sub
and
push
test
out
jo
sar
or
loopne
stc
std
push
repz
sbb
arpl
mov
lcall
xchg
push
dec
xchg
sbb
lahf
loop
xchg
mov
fadds
jle
insb
stos
mov
pop
xchg
call
je
popf
sub
xchg
dec
int
lahf
and
outsb
sbb
and
sarb
repnz
iret
mov
push
imull
mov
sbb
in
js
into
loopne
or
jge
popa
rcr
cmp
jne
xchg
arpl
pusha
pop
push
pop
cmc
jl
sub
pop
fildl
push
movsl
mov
lcall
pop
push
or
inc
dec
cmp
insl
aad
dec
lds
lret
inc
dec
ljmp
add
and
push
mov
leave
xor
mov
xor
aas
adc
out
jge
mov
adc
ret
pop
xor
mov
test
push
vpshufd
xor
mov
cmp
add
aad
sbb
iret
outsb
cmp
mov
stos
push
inc
int3
daa
cli
in
loop
out
mov
xchg
addr16
xor
inc
cli
xor
mov
pop
inc
adc
enter
cmp
aaa
addl
inc
gs
add
divb
jnp
sub
cmp
push
mov
push
popf
popa
push
arpl
sbb
xchg
fistpll
mov
outsb
ljmp
scas
das
mov
popl
adc
icebp
pop
adcl
decb
sar
test
or
stc
rcrl
xchg
or
shl
into
fadds
and
cmpsb
inc
dec
aas
and
out
mov
jle
xchg
loope
mov
iret
icebp
pop
daa
cld
sbb
lds
and
das
pop
daa
jne
pop
imul
push
xor
cmpsb
inc
adc
pop
mov
cltd
ror
jl
movsb
xor
sub
test
mov
xlat
xchg
std
dec
or
sub
repz
fdivrl
mov
rcll
xchg
lods
pop
dec
subl
or
add
pop
ret
test
cli
inc
push
jno
ret
xchg
int
lret
cld
jo
cmp
ret
cmp
mov
pop
push
mov
sub
in
fldt
js
cmp
dec
mov
fistl
lods
lock
hlt
xor
inc
sub
stc
cmp
push
into
arpl
sub
aaa
movsl
mov
psubusb
cmp
fistps
pusha
test
int
jmp
test
repnz
and
jns
xor
jae
jle
popa
add
aad
ret
dec
pop
fldenv
sbb
mov
dec
inc
lcall
mov
and
push
inc
xor
mov
mov
sbb
aad
bound
pusha
inc
lret
je
clc
imul
xor
add
mov
repz
cld
or
je
adc
xlat
loopne
arpl
adc
mov
xchg
ret
sbb
je
push
mov
in
adc
icebp
xor
add
pop
sub
mov
outsb
add
aaa
and
movsl
stos
lret
cmp
cmpsl
jno
xchg
xchg
pop
xor
xchg
or
fidivs
or
lods
pop
rcll
pusha
pop
in
add
jge
int
jb
push
hlt
mov
and
pop
cs
sarl
cmp
push
push
jle
adc
add
pop
and
mov
add
leave
push
adc
fisttpl
in
xchg
das
and
test
push
pop
push
ret
pop
and
cmpsl
xchg
pop
add
cwtl
mov
mov
hlt
mov
mov
cwtl
fmull
xadd
popa
dec
adc
and
jecxz
sbb
jmp
popf
add
jne
adc
lock
fidivl
mov
add
iret
mov
and
dec
dec
scas
es
mov
jmp
sub
das
sbb
mov
outsl
adc
pop
fcomps
mov
stc
add
outsl
testb
test
mov
sarb
loopne
mov
adc
and
dec
repnz
jbe
hlt
pop
pop
mov
lods
adc
inc
out
call
or
daa
movsl
dec
jne
add
xchg
je
out
mov
xchg
sub
lock
xchg
dec
out
adc
iret
push
dec
mov
mov
orb
mov
push
ja
shrb
mov
push
sbbl
jae
fsub
int3
push
bsr
cs
xlat
sub
gs
es
in
stos
fstp
cmp
subb
imul
stos
hlt
dec
pop
cmp
and
bound
iret
sbb
lret
adc
out
mov
pop
js
sbb
adc
xor
in
inc
aad
ja
mov
aad
add
bound
fisubrs
inc
test
and
sbb
aad
into
xor
adc
lods
or
xchg
cltd
fistps
mov
mov
sbb
leave
add
mov
push
sahf
or
pop
dec
push
dec
mov
dec
je
cmp
push
shr
negl
sti
mov
jo
pop
popa
je
mov
push
adc
lahf
mov
push
sarb
cmp
sbb
jg
clc
mov
inc
add
fsin
fidivrl
lock
mov
mov
push
mov
pop
jg
movsl
pop
mov
imul
adc
pop
mov
inc
jns
addr16
push
xchg
jno
dec
jp
jecxz
jmp
sub
ss
add
adc
cmp
pop
in
add
push
les
mov
mov
cld
loope
arpl
add
or
jg
sti
push
test
push
mov
fs
sub
pushf
in
or
mov
sub
fmulp
nop
lret
outsl
sbb
sbb
orb
in
xlat
push
pop
cs
cli
sti
test
les
push
mov
dec
popf
aas
ret
out
dec
nop
cli
cmp
in
mov
sub
push
leave
or
sbb
pop
divl
into
and
jne
mov
mov
in
mov
sub
cli
iret
mov
xchg
ret
push
arpl
mov
xchg
dec
adc
jbe
test
jb
lods
test
test
lods
lods
mov
and
cmpsb
xchg
cld
add
jnp
lock
mov
stc
sbb
adc
fidivrs
mov
add
sbb
inc
and
fsubp
and
xlat
pop
insl
mov
popf
mov
cltd
dec
mov
popf
sbb
xchg
int3
inc
sbb
pop
mov
mov
sahf
dec
and
icebp
out
jg
mov
adc
sub
mov
mov
jle
cld
bound
lea
inc
fstpl
push
adc
out
fmuls
mov
repz
cmpsb
jbe
inc
pop
cmc
and
mov
xor
pop
mov
add
into
mov
or
lret
adc
mov
jmp
add
into
lods
cmc
mov
loopne,pn
cmp
or
fcomp
dec
jmp
in
mov
xor
test
pop
in
fwait
sti
test
pop
mov
fwait
push
fsubr
mov
imul
lcall
outsb
loop
call
and
cltd
scas
cwtl
fs
jmp
out
mov
or
or
jl
push
jae
lods
mulb
mov
mov
jb
pop
shrl
xchg
in
jno
mov
cwtl
mov
add
ret
xchg
jecxz
insl
scas
es
scas
fnop
or
add
bswap
sbb
lcall
xor
xchg
lea
aad
popa
fninit
mov
dec
lea
fwait
and
inc
mov
mov
xchg
sbb
inc
xlat
dec
je
loopne
inc
jl
sahf
sbb
push
or
iret
or
lock
and
pusha
push
arpl
adc
lcall
jle
rdtsc
xchg
in
dec
aaa
inc
jne
and
mov
and
inc
mov
lds
flds
mov
stos
push
fdivrs
jl
fwait
xchg
aas
xor
scas
adc
test
out
sbb
cwtl
sub
clc
adc
ret
and
dec
pop
jo
es
cld
cmp
pop
xor
rclb
add
jnp
mov
mov
ljmp
lahf
clc
repz
push
call
aam
jne
js
in
adc
testb
inc
bound
mov
lock
jbe
adc
add
fwait
in
nop
dec
adc
xchg
test
pop
aas
pop
icebp
sub
push
xchg
pop
mov
inc
inc
es
and
adc
mov
repnz
sbb
dec
fs
out
sub
xor
arpl
adc
sbbl
popl
inc
jno
daa
adc
out
xchg
jmp
adc
push
jmp
jns
popa
lcall
inc
jbe
std
sti
pop
movsb
mov
pop
cmp
repz
push
jnp
roll
pop
inc
jle
sbb
test
jge
aam
pop
repz
iret
cmp
pop
sbb
repnz
xor
jp
in
push
jb
in
addl
fisubs
cli
test
jnp
push
imul
mov
adc
jmp
dec
shll
popa
or
repnz
addb
add
xor
adc
sbb
inc
pop
mov
cmpb
add
mov
scas
mov
inc
and
imul
pop
movb
mov
jnp
xchg
std
push
movsl
scas
sub
fidivl
xchg
or
or
cmp
mov
xchg
stc
and
imul
sub
div
cmpsl
arpl
lret
add
lea
setae
bound
or
push
and
loopne
dec
add
xor
fs
sbb
jbe
dec
mov
mov
test
in
add
adc
jnp
insl
das
jb
xchg
adc
filds
cmp
or
rcr
fildll
das
fistpll
inc
in
pop
adc
call
xchg
add
ja
leave
sbb
call
lods
xchg
ljmp
test
les
pop
data16
dec
inc
cwtl
imul
fisubs
fsubrl
push
sbb
inc
arpl
lods
xchg
test
rcr
call
xchg
int3
jmp
sahf
scas
cmc
in
rcrb
sub
and
jmp
sbb
and
sub
fsts
mov
lret
js
stos
mov
iret
jp
and
push
mov
fucomip
test
jecxz
push
xor
dec
and
xor
pop
jnp
push
adc
enter
loop
push
out
cwtl
pop
and
ja
add
out
or
out
in
xor
or
cmpsb
in
movsl
es
lock
dec
in
rorl
scas
xchg
pop
pop
jg
fucomp
call
jnp
or
faddp
push
mov
jb
add
xor
popa
clc
fisttpl
mov
mull
adc
mov
mov
inc
repnz
push
mov
scas
add
xchg
sub
mov
cmpsb
xlat
clc
adc
push
sbb
cmp
push
sub
push
insb
and
lret
adc
xor
and
pop
mov
hlt
fucomi
repnz
dec
ror
cwtl
stc
jae
stos
ljmp
lret
ds
adc
jns
popa
jbe
mov
fldl
adc
or
inc
cmc
and
inc
das
mov
jo
scas
jg
sbb
dec
jns
pusha
das
mov
and
pop
test
pop
ja
cltd
add
mov
aaa
mov
ljmp
inc
add
mov
out
mov
scas
pop
aas
xchg
sarb
and
bound
loope
in
icebp
or
jbe
mulb
or
mull
mov
pop
cld
shr
pop
icebp
jno
fwait
jl
mov
and
sub
mov
push
bound
cli
out
mov
inc
les
mov
subl
add
sbb
dec
int
jge
inc
push
xchg
pop
hlt
xor
jb,pn
out
sbb
or
xor
cli
stos
cmp
aas
nop
bound
scas
aam
adc
into
adc
mov
xor
jmp
xchg
movsl
sub
rcl
mov
out
add
ss
inc
repnz
fiaddl
pop
out
imulb
cmpsl
pushl
ret
repz
pop
or
pop
cwtl
sbb
jb
ss
cmp
push
mov
orb
xchg
shlb
cli
jns
sti
out
addr16
dec
outsb
nop
iret
dec
ret
pop
es
jo
jae
pop
int
push
mov
lds
fcmovu
xchg
les
loopne
push
fdivl
cmp
add
imul
push
pop
lds
in
adc
xor
out
push
std
aad
sbb
int
loopew
es
push
jb
sub
mov
push
aaa
inc
mov
aad
ss
add
inc
jl
xchg
das
test
rorl
mov
xor
xor
test
std
fstps
fistps
xor
and
xchg
pushf
mov
cmpsl
mov
rolb
mov
push
orb
mov
movsb
pop
std
roll
fs
xor
sti
fisttps
mov
std
mov
aad
and
mov
aas
mov
ljmp
lahf
leave
test
adc
mov
sahf
stc
add
and
daa
rcrl
cmp
lcall
mov
out
rclb
je
cmc
fmuls
je
notl
shr
jp
cmpsl
inc
shrl
jecxz
outsb
in
inc
repnz
xor
in
test
xchg
ja
outsb
loope
lods
mov
adc
pop
xor
mov
sbb
ret
xchg
pop
lods
hlt
adc
xchg
in
aaa
inc
movsl
mov
add
orb
mov
fwait
inc
xchg
cwtl
fs
jne
jle
mov
insl
sbb
stc
fdivl
test
aas
xchg
dec
xchg
inc
bound
sub
popf
mov
xor
pop
sub
bound
xchg
jae
add
dec
xor
lods
dec
data16
mov
xor
cld
es
rcr
xchg
jns
xchg
daa
pushf
test
or
or
jmp
lds
ja
rcl
imul
jbe
mov
nop
mov
ds
dec
ss
cmpsb
sub
shrl
pop
jns
and
in
mov
call
out
xor
sbb
push
arpl
aaa
enter
inc
hlt
cmp
jb
les
in
int3
xchg
fwait
mov
and
mov
xorl
cmp
aam
movsb
hlt
sub
push
or
ret
into
addr16
jmp
lock
push
lret
icebp
dec
fdivrs
dec
dec
adc
mov
fnstsw
push
arpl
out
stos
movsb
mov
xchg
mov
out
jne
push
cmp
push
sub
adc
cli
fsubrs
je
negb
mov
inc
inc
cmpsl
mov
mov
xchg
fbld
pop
aad
inc
fs
sbb
xchg
sbb
or
icebp
cwtl
push
cwtl
xchg
mull
sub
xchg
sar
insl
in
xchg
inc
cld
ret
data16
ljmp
mov
xchg
add
clc
or
jl
stos
jno
cmp
repnz
sti
or
dec
xor
pop
mov
cmp
pusha
mov
lret
aas
cmp
shll
ds
cwtl
aaa
mov
aam
mov
std
jo
lods
loop
nop
stos
sbb
mov
pop
movsl
xor
pop
je
dec
add
fs
inc
mov
divb
lret
mov
push
test
cmp
int
mov
cmpsl
mov
cld
cmpsb
jmp
lock
jp
enter
mov
inc
sbb
addl
dec
fidivs
js
outsl
jecxz
lcall
cmp
popa
icebp
pop
mov
lahf
rorl
fmul
and
enter
mov
mov
rolb
mov
fsubl
push
fildl
fs
fwait
fs
icebp
jae
ja
pop
lds
push
addr16
sub
or
mov
push
mov
pop
add
lods
sbb
movhps
inc
aas
inc
dec
dec
add
push
mov
mov
sub
add
sti
stc
cmovae
lret
test
out
out
adc
mov
loope
push
pusha
data16
ljmp
jp
enter
es
mov
ljmp
stos
ret
popa
xchg
shlb
fbld
jecxz
inc
repz
xor
int3
fadd
xchg
pop
inc
out
call
sti
inc
rorb
icebp
outsb
leave
and
and
outsb
dec
mov
cwtl
inc
roll
mov
test
push
sbb
push
cli
xor
lea
je
shrb
shlb
adc
mov
inc
push
add
scas
lahf
dec
fucomip
adc
inc
push
xor
push
sahf
decb
sub
adc
jge
stos
pop
adc
subl
adc
inc
fldl
push
ljmp
mov
fs
mov
lahf
pop
mov
rolb
arpl
cmp
ror
in
adc
cmpl
push
cmpsl
add
pushf
cmp
loope
andl
pop
mov
mov
cwtl
stos
mov
mov
fisttps
xor
jle
and
lahf
enter
xor
jbe
stos
fists
lods
lods
xchg
mov
sub
out
add
in
push
aas
dec
xor
mov
fildl
movsl
cmp
or
enter
adc
adc
mov
mov
in
repz
xchg
cli
jecxz
rorl
xor
push
stos
add
mov
mov
into
fists
jae
inc
adc
jne
pop
hlt
daa
mov
mov
gs
mov
out
inc
pop
or
cmp
adc
clc
pop
pop
sbb
stos
push
pop
int
pop
je
add
sti
sub
repnz
adc
mov
in
fsubrl
adc
lret
dec
stc
call
push
or
inc
in
pop
loopne
xchg
jo
cs
stc
push
movsl
loope
xor
clc
cli
inc
adc
jg
mov
dec
mov
push
mov
jl
js
jg
mov
adc
xchg
rep
mov
jns
inc
outsl
mov
add
stc
out
out
imul
loopne
cmpsl
sti
inc
pop
cs
xor
sbb
sub
out
rclb
xchg
call
ljmp
xorl
addr16
sbb
divl
mov
fsubrs
dec
and
test
inc
push
lods
repz
ljmp
loop
inc
pop
or
cmp
jno
mov
outsl
icebp
add
jno
jne
faddp
push
pop
scas
sub
bound
add
outsb
add
sub
sarl
mov
sub
jb
out
cmpsl
dec
or
in
arpl
call
repnz
ja
jae
aaa
aas
xor
mov
mov
dec
or
pop
pop
pop
sub
lea
cltd
leave
clc
inc
fmul
lods
jmp
dec
in
js
js
divb
std
cwtl
jo
pop
jns
repz
lods
dec
out
push
or
iret
les
cs
pop
xchg
scas
movsl
dec
ss
push
lock
mov
js
arpl
push
cmpsb
dec
xor
subb
in
or
pop
movsl
push
sahf
into
inc
enter
pusha
dec
sub
daa
and
movsl
cld
pushf
push
fstpl
les
shr
xchg
jp
xor
in
or
xchg
sbb
lahf
insl
fistpl
sub
testl
aaa
xchg
xchg
fwait
pop
sub
sub
mov
int3
sub
outsl
inc
mov
inc
es
jns
stos
scas
out
mov
lods
push
push
or
shll
mov
fiaddl
sti
clc
repz
out
pop
test
call
mov
aaa
cmp
mov
xor
xor
movsl
inc
in
aas
pusha
mov
negb
subl
xor
inc
rcrb
fldl
out
iret
cmp
into
lret
mov
iret
outsl
pop
daa
mov
sub
jo
fstpt
push
fcmovu
into
jmp
repz
inc
cmc
pop
imulb
mov
jle
and
movsl
sti
push
pushf
sub
push
dec
cmpsb
xchg
int3
or
test
xchg
iret
dec
out
push
inc
lret
and
mov
je
out
cmpsl
out
into
or
inc
cmpsl
outsb
mov
jg
fcoms
aam
cltd
lret
mov
orl
clc
cs
pop
jae
mov
jbe
inc
daa
mov
mov
sti
or
adc
test
xchg
ja
fs
adc
shlb
fsubr
adcb
or
ret
xor
push
fdivrl
cmpl
cmpsb
dec
orl
adc
cmp
xchg
rcrb
xchg
fcoml
mov
imul
repnz
sahf
out
jmp
sbb
cmpl
stos
or
xor
ljmp
pop
ror
sti
rorb
das
negl
outsl
ficompl
push
dec
lea
scas
inc
jne
xchg
fistpl
std
xor
cmpl
aad
leave
sub
add
lds
pushf
or
or
insb
or
pop
popa
inc
enter
pop
out
cmp
dec
jmp
or
lods
cli
xchg
cmpsl
xor
mov
push
and
bound
lret
movsl
mov
xchg
jbe
sub
inc
sub
icebp
imul
and
pusha
pop
insl
sbb
loop
into
ret
jnp
xchg
push
les
xchg
dec
mov
pop
fs
mov
and
or
xor
jbe
aas
stc
and
sbb
xchg
es
jb
add
dec
cmp
mov
adc
xchg
mov
rcrl
jg
test
inc
or
jae
mov
mov
jecxz
push
cli
fldcw
aas
lret
or
pop
push
add
decl
sub
in
test
frstor
lods
adcb
xchg
shr
xor
xchg
sbb
les
sub
inc
and
enter
lahf
mov
jns
inc
pop
push
movsb
addb
or
mov
das
and
or
dec
ret
ja
push
push
dec
hlt
and
jae
xchg
sbbb
mov
das
cmp
stc
pop
add
push
arpl
bound
repnz
and
loopne
xor
xor
xchg
mov
cld
mov
pop
imul
xchg
pop
or
jns
adc
pop
xor
push
jp
call
and
jbe
pop
in
or
mov
incb
insl
imul
int
shl
mov
mov
xchg
testl
pop
inc
xor
mov
pop
int
dec
dec
js
mov
clc
push
addr16
into
ja
add
mov
imul
sbb
fcoml
push
ret
pop
push
aad
mov
add
mov
lret
sub
addr16
xchg
aam
mov
inc
cmp
lret
cmc
popf
inc
sbb
xchg
je
pop
enter
mov
sub
or
or
ljmp
push
aaa
ja
lret
ret
dec
fwait
in
mov
sbb
mov
or
add
jae
popa
movsb
pushf
sub
jg,pn
mov
loopne
and
fwait
in
addr16
dec
mov
das
fisubrs
in
cld
cmp
scas
fstpl
xchg
xor
addr16
fimull
dec
or
mov
jno
pop
fs
mov
mov
jns
mov
adc
and
push
cltd
outsb
mov
sub
lcall
ret
add
clc
sbb
dec
mov
sbb
lea
aas
fsubs
outsl
hlt
iret
rclb
in
in
xchg
dec
fucomip
pop
mov
outsb
pop
jecxz
inc
mov
into
fnsave
enter
and
shrl
into
scas
lods
mov
notl
cli
dec
jmp
xchg
and
add
or
push
mov
pop
das
aaa
jns
and
stc
inc
jnp
sbb
out
jne
lret
js
ds
xor
xchg
and
sbb
movsb
mov
cmp
cmp
gs
adc
ret
xor
push
pusha
jb
push
in
fnstsw
shrb
add
cltd
cmpsb
repz
xchg
ret
mov
jnp
mov
mov
xor
xchg
push
pop
jae
push
jnp
pop
cli
fs
or
popa
cmpsb
pushf
ret
mov
in
mov
mov
pop
daa
xchg
xor
dec
rclb
lea
pop
inc
ret
mov
leave
jo
stos
test
lahf
stc
jne
fs
fnstenv
add
push
in
lret
sti
xchg
jle
out
xchg
cmp
inc
pop
cmc
daa
in
movsb
notl
mov
lock
scas
mov
pop
lods
xor
sbb
hlt
push
frstor
jo
imul
push
lods
inc
std
and
jno
aam
push
in
mov
shr
es
mov
mov
popf
dec
push
call
xlat
les
mov
mov
cmpsl
push
jnp
xor
cmp
in
std
and
cmpsb
pop
aaa
cwtl
cmp
outsb
enter
icebp
test
mov
pop
repnz
aas
adc
pop
add
sub
mov
xor
gs
lahf
add
jge
mov
gs
js
shlb
test
jbe
fstps
cmp
aaa
aas
sbb
add
cwtl
cmpsl
add
cwtl
les
pop
imul
jp
test
fsubrs
sbb
push
mov
push
jns
mov
insb
adcl
push
add
add
xchg
sbb
jge
push
sub
add
test
xchg
out
icebp
jge
mov
rcll
clc
inc
dec
orb
jl
cmc
mov
dec
into
stos
scas
ljmp
mov
mov
inc
pushf
and
fists
sbb
add
jmp
push
xchg
push
jecxz
subl
inc
xor
or
cmp
mul
jecxz
pop
or
imul
test
jae
repnz
cmpsl
cmpsb
jmp
movsl
xlat
cmpsl
es
ret
cmpsb
xor
or
mov
in
xchg
add
out
and
mov
and
ret
iret
inc
mov
lahf
lds
test
cld
sub
sbb
clc
push
ljmp
xchg
std
js
out
in
cmp
pop
cmp
or
nop
mov
adc
sbb
mov
add
mov
call
mov
shrl
mov
sub
arpl
bound
lock
movsl
stos
inc
add
push
dec
or
cmc
xchg
xor
and
pop
je
dec
aaa
mov
imul
dec
repz
cmpsb
adc
sub
jmp
jle
mov
or
xor
dec
lahf
lock
and
aam
nop
mov
mov
fwait
xchg
popf
addr16
xchg
rcr
xor
cltd
out
cmc
xor
dec
psubw
sbb
jecxz
jmp
ja
fimuls
int3
sbbl
ljmp
add
sub
pop
pushf
jne
push
jbe
and
aaa
iret
loope
sbb
inc
ss
aam
imul
xor
gs
es
fwait
sbb
fdivrs
lods
xchg
sahf
icebp
mov
insb
mov
dec
mov
push
cmp
test
dec
fsts
mov
mov
push
pop
hlt
imul
clc
sub
pop
push
or
rclb
imul
inc
and
fwait
loope
sbb
iret
xor
sbb
push
insl
enter
mov
jae
in
sahf
in
ja
mov
inc
notb
in
dec
outsb
leave
repnz
cltd
in
jl
cmp
sbb
lea
sbb
sti
cld
leave
pushf
mov
stc
mov
rorl
sbb
repnz
xor
dec
fists
push
jl
sub
jg
push
sub
fstps
pop
cli
inc
push
add
popa
daa
jne
jmp
ret
xchg
repz
fwait
imul
js
nop
dec
xchg
xor
out
push
jle
adc
xchg
mov
daa
xor
push
cmc
in
xor
mov
mov
mov
mov
and
loopne
xchg
arpl
mov
mov
and
and
fstpt
cmc
add
gs
sbb
aaa
mov
lahf
dec
lea
pop
movsb
sbb
and
test
fdivrl
ret
xchg
sarl
sub
mov
imul
sbb
cli
das
les
icebp
int
das
or
inc
jno
sbb
mov
inc
jecxz,pt
mov
daa
mov
push
lock
push
or
pop
fwait
insl
fiadds
or
pop
dec
mov
mov
push
outsb
cld
xor
xor
pop
xlat
adc
mov
adc
sub
sub
xchg
push
push
cld
mov
add
lds
push
pop
out
movsl
and
mov
jmp
cmp
cmp
pop
lret
mov
leave
pop
insb
imul
pushf
push
sub
loopne
daa
push
lods
cld
sbb
loopne
mov
inc
sarl
out
jae
jp
pop
adc
insl
xchg
add
xorb
xchg
xor
mov
add
imul
icebp
mov
sbb
sbb
daa
cwtl
push
mov
int3
adc
shll
jns
arpl
insl
imulb
hlt
in
test
cmp
adc
push
scas
les
mov
cltd
mov
mov
jl
jo
fisubrl
xchg
jae
pop
in
mov
mov
aas
adc
enter
roll
rcrl
out
cli
lock
push
repz
fstps
jns
rcll
xchg
jmp
iret
sahf
sbb
sbb
arpl
jo
je
sub
sub
aam
outsb
mov
pop
dec
cmp
cmp
xlat
sbb
push
sub
divl
jecxz
cli
jmp
push
pop
lret
insl
or
cmp
dec
mov
inc
hlt
cmpsb
push
mov
in
fcmovu
ret
or
int
ja
jmp
icebp
pop
pop
out
xchg
pushf
orl
ud0
xorl
mov
ja
divl
pop
adc
std
loopne
repnz
repz
lods
sbb
mov
xchg
pop
arpl
sub
sbb
add
jo
sbb
dec
or
inc
push
lret
sbb
mov
add
jb
testb
push
sbb
inc
lret
cs
imul
xlat
mov
xchg
and
mov
stos
xor
pop
jg
push
mov
fsubrs
xor
jmp
pop
inc
popf
aas
inc
dec
or
xchg
pop
xor
ss
jns
adc
jg
sub
inc
inc
xchg
or
xchg
pop
cmp
sub
cltd
fdivrl
cli
xlat
outsl
je
aaa
xchg
xor
fnsave
push
call
lahf
push
arpl
mov
in
lcall
cmp
imul
adc
mov
mov
xchg
and
popf
in
add
jg
rorl
int
or
push
ljmp
sbb
mov
dec
mov
mov
out
jbe
insl
test
aam
int3
xchg
dec
lret
popf
xchg
test
aas
push
cs
cli
push
insl
mov
and
adc
cmp
cmpl
call
cld
je
enter
adc
inc
xor
call
sub
pop
pop
sub
push
lret
daa
and
pop
ss
inc
sub
push
rcr
mov
push
shr
adc
mov
dec
testb
fucom
loopne
push
add
inc
hlt
lret
or
add
jl
mov
pop
xchg
nop
mov
test
test
in
scas
leave
jg
fmull
dec
lods
mov
and
push
pop
cmp
call
ss
mov
cmp
jmp
insb
lea
in
and
or
mov
sbbl
into
xlat
xchg
and
sti
mov
adc
outsb
in
sub
data16
sub
cli
int3
int3
or
pop
scas
in
andb
pop
icebp
adc
je
push
movsb
pushf
mov
xchg
and
pop
sub
loopne
xor
sbb
push
and
cmp
pop
aam
mov
in
leave
pop
pop
jl
sbb
sbb
hlt
xchg
mov
loop
adc
subl
and
and
and
jb
mov
std
sahf
jmp
jmp
rclb
inc
out
clc
dec
test
sti
fidivl
mov
test
jle
adc
movzwl
push
int3
rol
das
lock
xor
scas
shlb
scas
adc
sub
jbe
adc
cmc
mov
jno
sub
pop
jecxz
daa
or
imul
adcb
push
dec
xor
xlat
je
test
pop
stos
and
dec
xchg
inc
je
xchg
lret
xor
lret
mov
cmp
jl
out
icebp
sti
or
mov
clc
jnp
adc
push
and
clc
xchg
and
scas
sti
not
sub
mov
mov
gs
xor
loopne
cs
stos
sarl
xchg
xor
in
xlat
loopne
mov
es
cmp
jo
lods
adcl
cwtl
push
mov
out
fs
call
dec
inc
sbb
push
lret
sub
out
mov
pop
jp
adc
js
popf
popa
jmp
xchg
shrb
sti
repnz
push
int
fildll
outsb
xchg
mov
mov
scas
test
gs
sub
insl
mov
rclb
test
mov
xor
or
dec
mov
mov
insl
cmp
push
lahf
stos
add
cmp
call
lods
mov
lret
mov
lods
loope
add
int
sbb
rorb
shrl
pop
orl
xchg
or
lock
jle
cmp
gs
xchg
fcompl
adc
fbld
mov
and
dec
inc
xor
aaa
movsb
in
mov
jle
pop
aaa
aam
jmp
cmp
dec
fstps
and
push
xchg
int3
sub
or
leave
pop
sbb
ljmp
es
and
pop
pop
pop
xor
mov
adcb
lcall
xchg
lret
or
sub
xor
mov
fwait
sarl
cmp
adc
xor
aad
mov
push
das
xchg
movsl
pop
or
jno
and
ret
jle
mulb
or
pop
mov
pop
lret
movsb
push
push
dec
pop
fldcw
jbe,pt
fiaddl
jecxz
ret
sbb
inc
shrb
jbe
xor
jp
loop
loopne
and
adc
sub
loop
sbb
jle
loop
dec
mov
negl
dec
popf
xlat
lea
pop
jg
dec
ret
aad
lods
dec
aad
ret
mov
dec
sub
pop
mov
lds
or
dec
adc
mov
dec
inc
jne
jno
sub
out
xor
mov
sbb
push
cli
test
jb
push
mov
add
mov
add
jo
jecxz
cmpb
rorl
mov
and
movsl
inc
sbb
dec
add
sti
xor
cmp
push
push
push
leave
sub
lds
mov
add
shl
lds
mov
mov
push
push
sbb
aad
push
xchg
movsl
scas
xchg
mov
push
gs
xor
push
mov
test
aad
inc
push
lods
xor
dec
out
fcomps
aad
fcomp
insb
jecxz
lds
and
je
addb
sub
idivl
or
lods
xor
sbb
pop
clc
addr16
add
insb
xor
or
orb
push
lock
cmp
cs
popa
leave
mov
lea
jae
mov
push
cmc
loope
inc
lods
sarl
dec
roll
sub
fwait
lcall
jl
clc
cli
mov
packuswb
fadds
cmp
jp
push
outsb
fiadds
adc
mov
mov
inc
inc
ror
jo
mov
testb
jge
dec
shl
dec
add
cmp
pop
lods
xchg
hlt
dec
repz
add
jmp
add
cmc
push
outsl
jge
fnsave
adc
enter
xor
pop
sti
cmc
pop
je
mov
out
inc
dec
fdivs
js
push
insb
xor
sbb
mov
fwait
mov
jle
xor
cltd
cwtl
out
flds
ficompl
push
jnp
cld
scas
rorl
mov
pop
mov
add
imul
stc
in
adc
or
lock
adc
push
sarb
imul
faddl
in
cld
jecxz
add
mov
es
push
jnp
cmc
outsb
xor
dec
mov
mov
add
test
ret
sub
inc
dec
and
or
jp
add
jg
loopne
mov
test
pop
cmp
xchg
xor
sbb
test
inc
adc
mov
out
rclb
inc
inc
ret
in
jo
je
push
loop
adc
mov
adc
or
sahf
adc
dec
imul
lods
cmpsl
jno
mov
adc
or
lret
jecxz
lret
fwait
jle
sbb
or
mov
adc
xchg
and
out
test
mov
shrb
outsb
std
jle
cmp
and
fcomp
sbb
cmp
xor
ds
jle
or
push
add
daa
jo
jmp
mulb
dec
and
inc
test
pop
into
out
stos
add
jne
mov
pop
cli
lods
xor
or
mov
inc
outsl
lcall
loopne
gs
sbb
cmp
sbb
adc
ljmp
insb
stos
mov
leave
ss
pusha
xor
push
movsb
jno
movsb
lahf
xor
hlt
test
xor
pusha
and
xor
fiadds
push
sub
push
inc
jmp
fisubs
jno
es
jmp
mov
mov
add
fidivl
dec
cli
cmpsl
out
js
pop
out
hlt
lods
out
add
push
mov
arpl
or
dec
jle
sbb
lods
aad
loop
cmp
shll
push
pop
je
shrb
ficomps
pop
clc
mov
push
sbbl
jecxz
aad
loop
in
xchg
cmp
push
mov
push
rclb
jge
bnd
jne
mov
xor
enter
pop
jp
xchg
lret
int3
or
cmp
push
ret
xchg
stos
xchg
mov
dec
dec
mov
inc
int3
sbb
adc
jae
mov
out
insl
xor
inc
mov
jecxz
cmp
nop
pusha
sub
ret
cmpsb
leave
adc
xor
mov
inc
popa
adc
push
test
jne
dec
decb
rcrl
sarl
std
mov
icebp
flds
mov
insl
in
mov
in
push
cmp
dec
add
jmp
adc
dec
sbb
imul
loop
push
or
pop
pop
cmp
int
lock
mov
loop
dec
push
xchg
pop
jg
xorl
aam
imul
ficomps
xchg
sahf
inc
pop
ss
fisubl
mov
jne
adc
icebp
outsl
and
sbb
nop
pop
popf
add
mov
xchg
jmp
mov
test
orl
sbb
lret
incl
enter
xchg
ja
test
mov
xchg
mov
xor
push
lret
mov
mov
sbb
iret
inc
popf
roll
pop
call
cmp
imul
xchg
outsl
cld
adc
dec
aaa
test
mov
out
rcrb
mov
push
jl
lret
scas
cli
loop
or
mov
and
push
push
cmp
and
pop
cmc
inc
mov
frstor
mov
ja
xchg
mov
hlt
call
clc
mov
lahf
jg
or
bound
ret
sbb
jp
cmp
lock
mov
inc
adc
test
dec
mov
loop
inc
loopne
nop
adcl
pop
std
cs
int3
mov
clc
mov
jno
fists
ds
inc
xchg
fisubl
and
rcll
cmpsl
jbe
mov
stos
mov
mov
xor
push
add
sub
sbb
andb
inc
xlat
pop
popf
inc
xchg
sub
cmp
or
adc
test
xchg
dec
add
ficompl
sub
stos
jg
fldenv
jl
out
insb
dec
outsl
mov
mov
adc
cmp
cmp
aam
sub
push
cmp
scas
data16
leave
add
push
in
sbb
xor
add
add
and
es
jmp
pop
and
jb
mov
orps
rorb
test
jne
rcrb
aaa
xchg
jae
arpl
add
add
jae
add
or
sub
jo
lods
jnp
and
dec
push
xor
cmp
scas
inc
push
loope
jae
add
int
subl
ret
cltd
dec
bound
es
mov
dec
aad
je
pop
lahf
sbb
sbb
fwait
xchg
mov
lret
imul
xchg
push
popf
xor
mov
and
or
das
loopne
aas
loope
push
scas
or
outsl
mov
xchg
fistps
mov
int3
mov
mov
push
mov
jno
pop
or
popa
incb
sbb
imul
ret
outsb
jmp
insl
cmpb
dec
xor
adc
movsl
pop
sbb
lods
call
cmpsl
mov
jae
outsl
das
pop
jl
xchg
dec
mov
xor
fcmovu
lds
fs
lahf
test
adc
ficoml
ds
add
xor
mov
outsl
push
push
or
jnp
aas
mov
test
dec
xchg
or
out
jbe
sbb
ds
cmp
lock
lcall
test
popf
sub
call
dec
pop
sbb
xchg
in
xlat
pop
ret
push
dec
xor
in
imul
bnd
xor
enter
jle
push
jnp
xchg
inc
sahf
mov
iret
cli
or
in
jge
popa
cli
xor
je
mov
or
mov
clc
and
mov
outsb
subl
loope
or
xor
in
adc
jl
push
mov
cmp
inc
idivl
sarl
andl
jns
pop
mov
add
in
not
ret
adc
int3
aam
sub
pop
loope
popa
insb
vmulss
xchg
call
rcrb
stos
rcll
mov
dec
mov
jmp
adc
sub
scas
inc
sbb
lahf
call
push
push
adc
loope
mov
mov
cmp
negl
divb
mov
cld
add
jnp
call
pop
inc
bound
xor
fnstenv
lret
mov
adc
and
and
and
sti
jno
or
sbb
lret
pop
in
pop
push
pop
js
cs
jno
inc
or
xchg
jb
popf
adc
or
out
andl
mov
and
dec
cmpsb
sub
sbb
add
std
inc
push
scas
mov
sub
sbb
mov
mov
dec
cwtl
insl
pop
add
jb
pop
push
and
add
pop
sti
scas
std
daa
push
subl
repz
fnstenv
jl
stos
sbb
pop
push
rcrl
shlb
fisubrl
pushf
cs
testl
push
fdiv
push
cli
push
sahf
rcll
xchg
mov
mov
ror
stos
subb
xor
jne
xchg
inc
mov
enter
dec
arpl
or
add
sahf
iret
ud1
sti
fisubrs
cmp
mov
in
mov
imul
xchg
test
daa
ss
mov
lahf
mov
je
add
arpl
mov
and
std
or
xchg
inc
rorb
xchg
xchg
popf
cmc
cmc
sub
test
lret
loop
inc
jmp
pop
out
mov
mov
scas
push
add
add
insl
or
mov
cmp
adcb
rol
pop
jne
data16
xorb
test
shrl
cmp
test
adc
dec
xor
jp
pusha
cmp
clc
mov
imul
xchg
jnp
sub
inc
out
hlt
pop
mov
xchg
lock
mov
stos
push
jle
cmpsl
mov
mov
pop
cmp
cmp
es
call
dec
and
dec
out
rcrb
int
xor
popf
mov
pop
out
pop
cmc
mov
add
rorl
outsl
les
int3
pop
fchs
and
leave
es
xchg
popf
push
mov
loopne
xchg
ficoml
jle
xchg
xchg
dec
and
add
xor
cmp
xchg
arpl
push
popf
loopne
cli
std
scas
jns
mov
mov
nop
outsl
jbe
dec
lcall
movsl
rorl
xchg
inc
gs
jne
push
sbb
sub
cmp
ret
lahf
dec
push
ret
mov
gs
push
test
mov
xor
lret
or
negl
jmp
jo
cs
in
test
jns
movlhps
enter
jno
jmp
and
shll
pop
std
movsl
jne
add
sbb
dec
mov
icebp
ror
aaa
or
inc
mov
jne
scas
mov
movups
xlat
push
and
scas
aas
xchg
push
fsubp
adc
xchg
aaa
add
inc
sub
icebp
movsb
stos
subb
push
ja
mov
add
xlat
sti
andb
mov
repz
ret
mov
test
in
add
push
or
lret
scas
or
popa
pop
mov
xchg
push
dec
inc
mov
popf
out
add
stos
ljmp
cwtl
xchg
cmp
outsb
mov
cld
inc
mov
jge
ljmp
pusha
bound
int3
mov
mov
dec
lret
inc
cmp
or
cmp
adcb
orl
out
pop
pop
int3
jecxz
jnp
mov
enter
xor
loope
rcrl
data16
jge
sub
and
or
push
lds
cwtl
in
fidivs
out
arpl
test
cmp
je
add
xchg
pop
test
aad
scas
sub
fcmove
aad
pushf
mov
js
test
add
fnstcw
push
cmp
sbb
rclb
subb
arpl
or
fbstp
cmp
mov
shl
loopne
pop
rclb
cmpsl
sub
xor
fcoml
loope
adc
int3
jno
sub
fs
js
mov
rorb
cmp
mov
repz
sub
sub
popa
out
xorl
popa
adc
cmpsl
adc
sbb
pop
pop
cmp
jmp
adc
mov
into
out
mulb
push
mov
bound
subl
sub
mov
inc
jmp
jge
mov
adc
test
repz
adc
push
cld
dec
mov
loope
fsub
stos
mov
mov
test
or
push
dec
cmpsb
pop
fisubl
nop
pop
mov
or
jbe
dec
add
mov
mov
adc
push
jl
push
sub
cmp
sub
or
push
shll
xchg
pop
jns
push
push
pop
test
cmp
or
into
jne
lods
mov
dec
insb
mov
repnz
enter
sub
mov
xor
jo
rcl
pop
push
jno
push
in
rcll
push
push
xor
icebp
enter
cld
jecxz
push
add
sbb
inc
push
pop
ljmp
into
or
mov
jmp
stos
add
movsl
mov
pop
cwtl
xor
jg
adc
mov
movsb
jne
in
pop
insl
aam
daa
scas
adc
leave
aad
jb
test
std
in
popa
sub
push
lcall
repnz
jno
test
xor
xchg
lahf
xor
and
or
js
push
sahf
mov
or
shl
out
and
xor
cmc
enter
daa
cmc
xor
fldl
jmp
xchg
add
psubq
into
dec
dec
pop
jne
ret
repnz
test
inc
les
jp
pop
imul
pop
test
mov
stc
xchg
inc
cmp
out
mov
cmpsl
pushf
jg
pop
dec
xchg
inc
pop
cltd
xlat
jnp
sbb
ret
rorl
mov
xchg
or
mov
fcmovnu
dec
out
dec
sbb
dec
fcompp
mov
hlt
ret
jbe
mov
cmpsl
xchg
ret
xchg
lea
push
pop
imul
or
sti
vphaddwq
popf
or
popa
xor
mov
sbb
dec
mov
cld
mov
sbb
mov
mov
dec
adc
adc
dec
xchg
dec
xchg
add
nop
and
imull
inc
das
aad
sub
cmpsb
sub
out
ja
sbb
daa
stos
pusha
push
sahf
mov
mov
sbb
cmp
inc
addr16
iret
mov
daa
jg
xorl
and
imull
xor
ret
cwtl
mov
in
cli
aad
mov
mov
jp
ja
in
enter
ja
mov
jo
in
aaa
roll
jecxz
or
aam
xor
dec
into
js
inc
dec
xlat
sbb
repz
jns
jl
mov
push
pop
inc
add
fsubr
arpl
and
subb
or
push
fistpl
out
mov
push
xor
dec
stos
push
pop
or
or
sbb
lahf
jmp
dec
lods
inc
loope
stc
jbe
sahf
out
test
bsr
roll
jg
cmp
or
outsb
mov
hlt
sub
int
lea
adc
roll
cltd
xchg
dec
aas
inc
movsb
jne
movsb
into
dec
lea
xorb
imul
xchg
push
out
and
pop
push
cmpsl
es
mov
add
xchg
out
mov
mov
xchg
and
push
add
push
fs
or
cmp
loop
adc
push
lret
pop
mov
push
js
out
or
push
cld
and
idiv
mov
js
xchg
aas
pop
lret
push
jne
sbb
movsl
jmp
jmp
xor
ret
mov
lahf
pop
lods
inc
hlt
add
ljmp
push
movsl
cmpl
pop
cmp
fucomi
jno
mov
mov
ret
push
movsl
and
jmp
xor
fisttpl
push
aaa
xor
int3
jo
mov
bound
es
push
inc
lock
jl
lahf
pop
out
cmpsl
aam
xor
sub
cmp
ja
inc
push
mov
dec
movb
imul
out
mov
push
shl
adc
leave
test
xchg
jns
psubsb
nop
jle
jno
dec
inc
add
lds
or
cli
out
leave
cltd
fstpl
or
ret
call
in
and
insl
cli
sub
roll
pop
jmp
or
cmp
push
pushf
cmp
cmp
out
dec
pinsrw
cli
insb
in
or
fwait
out
mov
and
iret
mov
les
push
outsb
mov
scas
mov
fisttps
repnz
cli
fbstp
flds
daa
test
sub
xor
sahf
out
jmp
mov
cs
or
or
cmp
cltd
cli
jo
mov
mov
mov
fsubl
in
addr16
in
rcl
outsl
push
test
mov
jmp
test
jmp
ja
mov
sar
mov
sbb
stos
jae
loopne
or
mov
mov
pop
push
pusha
jne
pusha
xchg
aad
js
movsb
adc
bound
cld
iret
or
mov
or
push
or
mov
mov
mov
je
lea
popa
or
inc
movsl
outsl
add
jae,pn
mov
push
xchg
cwtl
in
mov
stc
stc
mov
mov
xchg
into
cld
inc
mov
aad
iret
movsl
inc
test
xchg
xchg
and
test
scas
mov
jne
rcrb
xor
rcr
data16
aam
xchg
repz
aad
ficompl
cmp
mov
xchg
lea
fldt
push
ret
mov
test
ja
xchg
push
push
dec
notl
decb
mov
mov
pop
mov
adc
pmulhw
pop
es
sub
pop
imul
pop
dec
into
pop
mov
test
stc
cmp
or
adc
xor
adc
nop
jl
xor
sbb
and
repz
cmpsb
bound
push
add
pop
fs
stos
js
sub
pop
cmp
hlt
aas
rclb
hlt
xor
add
jne
push
xor
insl
mov
adc
hlt
jb
out
test
ror
ja
lds
add
lods
pop
lea
jmp
ja
ja
lods
cmp
stc
mov
jg
xor
xchg
and
pop
adc
jg
push
icebp
aam
orb
bnd
xor
mov
xorl
pop
pop
ja
xchg
pop
pop
repz
mov
and
xor
sub
pusha
push
aas
iret
ror
aam
cmp
leave
push
enter
popl
bound
xchg
inc
adc
enter
es
lret
lret
dec
or
and
sub
arpl
jo
dec
roll
int
push
andl
or
push
rcl
sub
dec
add
movsl
into
mov
cwtl
int
inc
adc
icebp
mov
in
shll
arpl
test
fidivrs
xor
add
out
pop
cmp
mov
xchg
xchg
or
inc
add
outsl
lods
push
dec
mov
mov
sub
fnstenv
sub
dec
jns
sbb
out
and
or
es
ret
push
lret
xchg
test
adcl
movsl
imul
inc
shr
sti
mov
mov
hlt
fsubs
testl
rcrb
cld
and
dec
addr16
cmp
ja
xchg
ret
sbb
mov
inc
and
cmp
iret
repz
cli
and
cmc
push
stc
or
dec
xchg
inc
xor
bnd
jnp
test
push
push
jecxz
aam
and
jecxz
mov
mov
lods
fs
cwtl
ret
in
inc
add
xlat
andl
xchg
cmp
inc
and
lock
jle
test
frstor
push
scas
jmp
neg
or
inc
cs
ficompl
xchg
mov
mov
cld
dec
sbb
push
scas
test
jae
gs
xor
mov
imul
mov
in
dec
jnp
cwtl
popa
imul
mov
cmc
mov
jecxz
cmp
adc
sub
movsb
mov
sbb
xor
mov
inc
je
push
leave
xchg
cld
cmp
ja
in
and
xchg
pop
xchg
int
mov
adc
push
sahf
or
mov
cmp
mov
into
fstpl
daa
xor
cwtl
idivb
pop
dec
mov
loop
sbb
push
ficoml
movsb
in
dec
add
push
inc
loop
aas
jle
movsb
out
jns
enter
and
xchg
pop
outsl
leave
add
mov
call
xorl
loopne
add
movsl
sbb
movsl
sub
xchg
lret
imul
xor
and
lds
xchg
add
fstl
xchg
mov
out
jmp
lcall
push
aam
addr16
in
out
pop
mov
fstl
xchg
push
adc
mov
jecxz
push
jmp
fdivp
iret
adc
decb
mov
xchg
insl
out
or
adc
dec
jae
stc
jae
adc
out
int3
dec
or
pop
push
inc
jg
lcall
xchg
in
outsb
into
inc
movsb
setbe
loope
out
mov
mov
and
out
shl
xorb
cmpsl
rol
fdivrl
imul
pop
fwait
cmp
jbe
andb
stc
xchg
mov
dec
repz
push
mov
pop
push
insb
xchg
cmovo
sbb
rclb
add
pop
shll
adc
jge
leave
xchg
std
sbb
xchg
mov
pusha
pop
setp
jmp
loope
in
subl
cmp
les
push
and
sub
rclb
mov
pop
mov
icebp
rclb
mov
mov
or
mov
test
pushf
or
ja
lret
loopne
ss
int3
dec
jnp
push
gs
in
movsb
adc
daa
mov
mov
dec
sahf
mov
ficomps
cmp
fstl
dec
xchg
testb
cld
inc
ljmp
cld
adc
lret
ss
rclb
cltd
sbb
repnz
adc
lock
lock
or
test
pop
sub
jmp
add
or
out
mov
push
xorb
test
divb
out
ret
faddp
ret
aaa
je
inc
iret
das
shrb
popa
inc
mov
movsb
sbbl
in
popf
mov
add
or
out
inc
push
mov
cltd
fistpll
cmp
int3
xchg
loope
leave
pop
out
add
xchg
cmp
cmp
dec
nop
add
inc
inc
xchg
cltd
jecxz
push
add
pop
das
lock
pop
sbb
push
sub
push
cs
xchg
mov
shll
pop
rcrb
rolb
ja
cmp
mov
test
jb
push
aaa
pop
dec
test
dec
aas
jge
outsb
mov
aad
addb
adc
clc
hlt
and
or
jmp
add
arpl
sarl
push
xor
nop
movsl
enter
mov
inc
and
adc
cmp
gs
cltd
or
xor
cmpl
mov
ja
push
cwtl
xchg
popa
add
popa
jmp
xchg
cmc
inc
push
mov
shrb
or
inc
and
out
arpl
daa
mov
test
test
push
std
inc
aaa
rolb
mov
mov
xchg
mov
imul
mov
xor
or
sbb
cmpsl
pop
stos
push
inc
inc
aad
cmp
insl
in
lahf
xchg
adc
sbb
imul
add
fisubl
js
call
xchg
sbb
test
or
mov
push
xor
cwtl
ds
push
cli
sub
xchg
out
lock
push
jnp
pop
pop
aad
xor
popa
xchg
pop
sarl
iret
leave
cmp
iret
add
sub
loope
leave
arpl
or
pop
lock
js
xchg
addb
jbe
or
test
mov
repz
repnz
stc
dec
call
dec
sahf
xlat
sub
popf
sub
ljmp
mov
lcall
fdivrp
cmpsb
cmpsb
push
add
insb
mov
cmpsb
xor
sbb
mov
adcb
mov
push
pop
int
out
scas
push
fcmovnbe
cmc
mov
sbb
sub
rcrl
orl
add
adc
scas
pop
mov
ret
daa
insb
push
es
lock
xchg
or
add
loope
or
sbb
fnsave
push
jo
jg
popa
dec
test
or
addr16
lahf
sbb
pop
jmp
and
int
xor
sbb
sbb
mov
push
adc
movsl
rcr
xor
ljmp
imul
push
cmp
fdivs
jmp
mov
push
ljmp
mov
inc
adc
and
pop
pushf
in
pop
sbb
mov
in
jmp
in
mov
cmpsl
movsb
loopne
sbb
xchg
das
lret
and
pop
mov
dec
jno
es
xchg
dec
xor
mov
aas
sub
test
jecxz
cmp
or
cs
fdivrs
pop
aas
dec
pop
into
xor
loope
in
mov
stos
loope
lock
sbb
mov
mov
aad
out
or
adc
xchg
pop
in
int
add
popf
imul
fimull
xor
mov
push
push
cmp
sbb
xor
lcall
sub
dec
out
in
test
dec
lods
sub
sbb
adc
das
mov
mov
or
enter
in
into
pop
mov
mov
out
xor
add
outsl
mov
jmp
mov
push
cmp
out
in
cmp
fstp
fnstsw
adc
xchg
out
and
mov
xlat
sub
in
leave
repz
fs
shlb
ret
xor
xchg
cltd
mov
lret
sti
fsub
xor
xchg
pop
push
and
dec
sub
and
jae
adc
sub
movaps
cmpsl
mov
mov
test
push
mov
mov
ds
fimull
pop
mov
adc
ret
stos
movsb
fidivl
out
xchg
enter
ret
xor
nop
fst
jnp
mov
into
test
sub
loopne
icebp
xor
enter
addr16
inc
mov
xchg
pop
out
imul
int3
sti
sbb
addl
int
inc
pop
lahf
int
mov
xchg
mov
lods
enter
fsubrl
mov
fsubrl
fdivr
dec
pop
adcb
mov
mov
cld
pop
xchg
cmp
xchg
rclb
dec
jg
icebp
push
out
add
outsl
inc
iret
dec
xchg
scas
lret
lcall
repz
sub
pop
out
xchg
adc
or
xor
orl
fmul
fldl
cmpsb
sub
and
icebp
daa
sahf
flds
jle
popf
shll
lods
jmp
inc
or
and
mov
adc
imul
and
dec
shl
inc
mov
test
and
push
dec
fs
notl
pusha
insb
inc
lret
mov
clc
fucom
xor
xor
in
daa
loopne
repz
cs
xchg
jns
outsb
lahf
out
push
push
xchg
add
in
insb
leave
inc
int3
xchg
rorb
push
scas
push
jl
adc
pop
jecxz
inc
xchg
sbb
movsb
mov
insl
loop
jmp
call
dec
rcrb
imul
in
imul
xchg
jl
aaa
pop
push
dec
sub
leave
dec
adc
loopne
out
dec
int3
cmp
pop
lret
cmp
fs
into
std
lds
sbb
add
negb
mov
rorb
xlat
in
mov
lret
jl
xor
and
adc
testl
out
add
inc
rclb
push
andl
lahf
aam
ret
int
or
dec
mov
leave
inc
ficoms
jl
and
mov
lea
push
movsl
test
test
repz
scas
jno
jb
ja
int3
adc
out
add
maskmovq
divl
sbb
pop
push
outsl
int
test
inc
xchg
inc
iret
xchg
mov
dec
outsb
test
out
fdivrs
xchg
rcrb
cmp
test
mov
movsb
jge
rcrb
jecxz
xlat
test
fwait
aas
pop
cmc
mov
scas
jbe
dec
addr16
fcompl
adc
pop
cmpsl
insb
xor
aam
out
imul
or
iret
mov
imul
cmp
inc
cmpsb
mov
mov
adc
inc
inc
mov
push
sbb
add
adc
inc
in
push
dec
mov
insl
enter
sbb
mov
addl
cmpsl
shlb
push
cmp
cmp
shlb
adc
add
mov
xor
sub
mov
in
pop
and
dec
jno
pop
pop
and
xchg
push
lods
fldt
fwait
mov
mov
mov
bound
mov
je
dec
mov
repnz
ja
jnp
call
jae
aas
daa
stc
bnd
lock
inc
cmpsb
dec
adc
or
pop
jge,pn
aas
repnz
aas
pop
and
test
inc
inc
lea
popa
or
mov
fdivrl
dec
pop
sbb
sbb
jmp
push
dec
es
and
aam
aad
cmp
push
addr16
shll
pop
mov
out
add
add
in
movsb
fdivrl
push
push
pushf
xor
mov
sub
je
movsb
pushf
inc
ja
push
scas
push
nop
push
xor
xchg
mov
add
in
xor
imul
aaa
xor
or
push
mov
xchg
es
jge
and
ficompl
ss
pop
in
bound
sti
jo
fwait
mov
faddl
push
outsb
pop
mov
mov
mov
push
and
dec
cmpb
div
jbe
fbld
cmpsl
cmp
adc
cli
popa
adc
dec
and
fimull
sbb
sahf
cmp
shlb
push
push
stc
lret
in
jge
call
aad
lahf
and
je
jne
insl
out
shlb
shll
xor
adc
scas
test
jnp
mov
sbb
scas
pop
test
sbb
xchg
cmp
sbb
adc
xchg
push
or
dec
aas
push
or
test
test
loop
push
xlat
js
jne
xchg
push
mov
loope
dec
cmp
data16
ja
fs
lcall
cmp
loop
cmp
mov
loop
inc
flds
xlat
xchg
ljmp
mov
jno
mov
and
shlb
push
cmpsl
dec
mov
adc
inc
pushl
mov
mov
mov
fmull
mov
jbe
gs
adc
sbb
faddp
or
subl
mov
mov
sub
jle
inc
nop
aad
sbbb
mov
enter
daa
and
incb
mov
cmpsb
popa
into
loop
test
imul
leave
pop
std
cmp
jnp
mov
movsl
cmp
and
or
or
add
fwait
inc
ljmp
je
pop
bound
mov
int
ljmp
in
add
dec
cmp
scas
cwtl
cmpsl
repz
dec
cmp
adcb
and
xor
cmpsb
clc
pop
cmpsl
dec
mov
pop
sub
fcmove
mov
cmp
mov
hlt
jae
out
jb
pop
mov
push
sarl
adc
xchg
js
adc
arpl
rorb
les
shl
cmp
mov
or
std
xor
fs
ficompl
dec
shrb
sub
jo
sub
ret
dec
sarl
add
ficoms
scas
mov
dec
xchg
xor
or
out
or
push
outsl
cmpsl
testl
jle
sbb
and
or
lock
lcall
ja
outsb
mov
xchg
aas
jo
inc
push
hlt
add
and
cmp
push
mov
jge
sbb
jl
mov
roll
pop
mov
iret
cmp
xchg
xor
jns
and
std
pop
test
mov
or
imul
adc
mov
push
arpl
xchg
mov
mov
imul
xchg
enter
sbb
jne
adc
push
shlb
mov
mov
lods
mov
add
loop
repnz
cltd
das
xchg
data16
jl
jg
xchg
rcrb
xor
xchg
in
ret
inc
mov
pop
xchg
cld
fisubs
pop
ss
or
mov
mov
xor
inc
mov
jae
cmc
cmp
jnp
insl
mov
clc
jae
sti
insl
inc
adc
in
mov
push
push
jns
mov
ret
outsb
repnz
xlat
pop
jl
outsl
dec
cs
aas
jae
ja
dec
aaa
inc
adc
jno
addr16
cs
iret
fwait
sbb
sub
xchg
test
cmpsl
stc
stos
pop
mov
rcll
arpl
and
roll
jnp
add
popa
cli
xchg
mov
into
xchg
pop
int
arpl
aas
sbb
jg
push
jp
jcxz
lds
mov
push
push
fucom
bound
inc
xchg
push
comiss
pxor
push
pop
inc
pop
in
add
cmp
aad
scas
cmp
scas
jmp
inc
xor
jp
push
cld
loope
jne
call
push
into
leave
mov
mov
fisttpl
call
roll
inc
das
outsl
mov
cwtl
sbb
mov
or
add
outsl
jbe
sbb
xorl
test
cmp
mov
or
lret
inc
sahf
inc
lcall
clc
mov
inc
das
mov
dec
aam
mov
popf
push
xor
inc
lods
push
or
and
shlb
movsb
mov
ficoms
xlat
dec
mov
scas
lret
pop
test
push
inc
out
call
jne
aad
repnz
daa
and
xchg
je
jno
add
cltd
test
sub
insl
sbb
fidivl
xchg
jb
sbb
iret
dec
jb
fldcw
sub
dec
scas
mov
insb
sbb
sahf
faddl
out
jp
adc
cmp
in
imul
dec
adc
int3
test
stos
add
mov
push
insb
xor
adc
push
sbb
cmp
pop
fcmovbe
into
jge
pop
or
add
cmp
adc
mov
jl
das
inc
xchg
mov
mov
out
in
into
in
xchg
jle
push
sub
ror
andb
dec
and
adc
movl
lcall
push
jbe
push
inc
push
add
cs
jb
sub
mov
mov
das
test
shrb
aaa
lret
pop
repnz
jno
cmp
loope
std
inc
loope
jmp
pop
fwait
and
jmp
inc
insl
sub
subb
iret
pop
cs
jl
test
dec
push
push
mov
jnp
insl
ja
scas
mov
ds
sbb
insb
or
stc
jmp
sbbl
fwait
cmp
xchg
xor
subb
repnz
xchg
or
inc
ja
and
push
scas
xchg
rol
jb
mov
lock
jno
test
sbb
add
je
mov
lret
jb
scas
clc
out
repz
and
cltd
pop
fldenv
pop
xchg
inc
jl
icebp
cmp
sub
or
mov
adc
jb
das
ljmp
sti
lock
xor
jl
push
clc
mov
xchg
sub
mov
ret
add
mov
pushl
xor
mov
xchg
loope
rorb
inc
or
sub
sbb
xor
or
sbb
out
sarb
leave
dec
loope
adc
xchg
mov
in
and
mov
or
stc
cmp
lock
rcrl
cs
push
xchg
jns
add
jno
or
mov
in
pop
jmp
inc
xchg
inc
jle
cwtl
pop
jecxz
sbb
lods
xchg
dec
add
jae
inc
add
mov
cmc
or
adc
xchg
test
push
outsb
stc
in
adc
bound
mov
push
sub
mov
mov
mov
lds
xlat
icebp
leave
int
leave
mov
lret
cmp
loop
fisubrs
mov
arpl
mov
test
int3
cmp
inc
sbb
orb
jb
jge
pop
cmp
adc
repz
fwait
adc
lds
sub
aam
mov
rcrb
clc
in
and
enter
fstpt
int3
add
loopne,pn
int3
cmpsl
mov
outsl
imul
dec
fstl
cwtl
lods
sarb
adc
lods
sub
mov
dec
bound
cmp
mov
movsl
repnz
jg
out
pop
cmp
lods
push
sbb
push
xor
inc
jmp
fdivl
dec
jmp
inc
adc
jmp
adc
or
enter
lods
iret
nop
testl
sub
sub
int
arpl
ljmp
rorl
sti
jne
mov
mov
icebp
popa
mov
and
jge
and
sbb
addr16
in
mov
fldl
ficomps
jg
mov
outsb
and
gs
inc
cmp
aas
mov
mov
dec
loope
or
cwtl
inc
push
or
movsl
je
leave
push
cmp
dec
mov
pop
and
pop
shrb
mov
andl
pop
lret
aaa
stos
test
idivl
or
xchg
mov
xor
mov
pop
ret
jmp
cs
cmpsb
andb
mov
call
pop
add
xlat
xor
sbb
jp
shlb
ja
jno
push
aam
icebp
mov
mov
mov
adc
scas
xor
dec
mov
mov
cwtl
icebp
mov
aam
lret
or
hlt
mov
dec
arpl
fistpl
mov
call
or
jo
push
push
call
pushf
or
scas
decl
rolb
add
push
fxch
add
mov
mov
add
push
sbb
jne
pop
aam
push
mov
mov
pop
out
je
ljmp
jns
sti
pop
mov
outsl
jno
adc
xlat
xchg
and
pop
push
addr16
sub
xchg
enter
lods
jle
in
or
fucomip
stos
jl
movsl
aas
cmpsb
jecxz
test
pop
xorb
stos
cli
mov
mov
fistpl
jg
repz
pop
sub
add
jb
stos
arpl
mov
jle
insl
mov
mov
and
out
pop
push
add
lret
jo
repz
jmp
pop
jbe
aad
fdivrp
push
inc
dec
sub
loop
in
lret
out
push
adc
out
cltd
add
ja
nop
test
js
scas
out
and
pop
mov
pop
jnp
mov
jg
dec
cmp
es
adc
cmpsl
jbe
sub
shlb
mov
sbbb
pop
rcl
mov
movsb
out
xor
sbb
xor
mov
or
mov
mov
or
aam
or
pop
lock
mov
xor
inc
cld
out
push
leave
mov
xchg
shlb
addr16
add
lods
sbb
mov
outsb
ds
loop
mov
xor
jbe
pushw
mov
setne
push
xchg
scas
mov
es
mov
iret
cli
bound
mov
outsb
lret
jle
push
sbb
jp
daa
or
mov
or
out
mov
jg
dec
mov
lcall
mov
flds
xor
cmp
into
pop
dec
push
mov
jnp
addr16
shl
faddl
sub
push
push
sbb
div
flds
sbb
les
cmpl
sub
imul
es
test
mov
or
pop
mov
inc
mov
inc
mov
add
scas
popf
arpl
mov
movsl
jmp
xchg
mov
mov
jbe
and
mov
mov
xor
xor
cwtl
stos
jmp
notb
pop
cmp
lret
test
xchg
xchg
lock
mov
xchg
push
sub
fs
adcl
pop
cmpsl
dec
cs
pop
imul
dec
mov
inc
je
cmpsl
dec
fsubs
in
xor
adc
outsb
scas
in
push
orb
ljmp
rcrb
xchg
das
enter
repnz
xchg
js
cmp
mov
xchg
xchg
scas
and
mov
enter
pop
cld
es
jns
cmp
in
loope
jg
dec
cmp
leave
movsl
scas
jo
aas
mov
andb
loope
adc
sub
jp
dec
je
add
cmp
stc
sti
cmp
leave
loope
xchg
adc
mov
cmp
cmp
ret
dec
or
lods
hlt
das
jns
lea
inc
fnstsw
cli
add
xchg
xchg
ret
out
mov
lcall
aam
adc
lcall
lret
inc
sbb
sbb
add
inc
pusha
pop
xor
stos
outsl
lock
pop
mov
cmc
cmc
inc
mov
lcall
pop
mov
mov
jns
or
and
lods
xchg
jae
mov
dec
mov
jbe
cltd
adc
stos
popa
and
addl
cwtl
pop
xlat
fistpl
pop
repnz
lret
sub
pop
mov
shl
incb
pop
in
mov
dec
js
jbe
dec
dec
inc
cmp
inc
lret
jno
jne
mov
mov
js
cltd
sti
add
adc
pop
and
aam
ret
or
cmp
inc
movsb
dec
cmpsl
jg
dec
lods
and
cmp
test
cltd
adc
loopne
xchg
test
adc
inc
in
dec
lcall
dec
xchg
aad
sti
xchg
jo
xchg
je
and
in
jo
sbb
loope
loop
sub
bound
lock
xor
xchg
mov
pop
test
adc
push
ja
mov
inc
push
add
mov
pop
and
mov
mov
fsubrp
or
jmp
mov
sub
mov
pop
out
enter
shrl
mov
jne
cltd
dec
cmpsl
or
mov
out
enter
es
lret
rcl
add
pop
mov
adc
dec
mov
fldl
shr
nop
jmp
sarb
rcrb
sarb
test
add
cltd
mov
sbb
test
movsb
sarl
int
mov
push
popf
sub
repnz
jb
cld
or
jge
jecxz
out
add
rcll
icebp
addl
in
push
ret
testl
ljmp
mov
jmp
xlat
jne
shll
inc
data16
arpl
sbb
in
cmpsb
pop
pop
pop
mov
xchg
add
data16
test
pop
stc
daa
stos
jb
les
cs
into
pop
flds
xor
push
pop
cmpsl
dec
lods
fcoml
inc
inc
cltd
pavgw
mov
mov
add
out
popf
and
cmpsl
popa
dec
push
jge
iret
mov
adc
test
push
mov
outsl
mov
cli
or
shll
inc
add
outsl
daa
mov
cmp
shlb
cmpsl
mov
or
dec
mov
xor
jns
inc
push
inc
mov
cwtl
sub
rcrb
cli
sbb
or
stc
outsl
adc
jle
lods
xchg
cmp
adc
insb
pop
in
cmp
ds
inc
mov
sti
les
jl
and
xchg
xor
in
das
dec
fidivs
adc
add
test
shll
lcall
je
mov
cs
inc
aam
jle
ret
and
sti
cli
jl
cld
adc
pop
xchg
in
mov
adc
repz
mov
sbb
jl
xlat
out
push
push
xchg
test
pop
and
jo
sbb
jp
call
ds
push
jne
nop
inc
fmuls
xor
mov
mov
scas
ds
test
in
push
and
fnstsw
gs
push
pop
dec
inc
lods
repz
mov
jno
dec
and
pop
in
mov
iret
fwait
push
nop
adc
cmp
nop
and
inc
xor
xchg
insl
pusha
in
mov
mov
pop
test
lret
cli
iret
push
inc
pushl
pop
stos
sbb
jg
movsb
loope
fidivrl
xchg
jno
mov
or
mov
dec
fdivl
into
popa
and
sub
and
fwait
mov
shlb
push
mov
insl
xor
and
in
cltd
mov
push
or
in
cmpsb
adc
test
fldt
mov
sub
mulb
push
sahf
jp
enter
cmpsl
push
mov
cld
xchg
data16
jno
sahf
pop
insl
inc
ds
popa
or
dec
push
sub
jmp
mov
je
outsb
int3
fsub
jnp
sahf
add
adc
mull
movsb
lea
add
cwtl
add
sub
jl
xchg
pop
xchg
inc
scas
cwtl
test
in
cltd
pop
jge
decl
add
call
jb
imul
push
adc
cmc
lret
jg
sti
push
adc
cli
adc
jae
add
and
std
push
movsl
fbstp
loopne
cld
bound
xchg
outsb
jl
js
cmp
outsl
jle
and
nop
pop
sbb
loopne
inc
dec
arpl
addr16
das
les
sub
and
push
icebp
jnp
movsb
sub
inc
adc
aam
mov
inc
repnz
std
push
into
jecxz
mov
frstor
mull
std
jecxz
lcall
leave
jno
adc
mov
push
pushf
aad
pusha
mov
cmp
xlat
icebp
pop
testb
adc
mov
jp
icebp
dec
fstps
aas
pop
push
divl
scas
xchg
mov
fbstp
repz
ficoms
aad
push
add
fsubs
pop
fidivrs
out
xchg
cmp
pop
pushf
xchg
and
aad
mov
xlat
mov
lea
push
mov
int
inc
fsubp
fstpt
pop
daa
notb
mov
sbb
mov
pop
jp
push
mov
mov
test
pop
sbb
test
outsl
push
jmp
and
xchg
arpl
sbb
dec
dec
loope
push
push
push
jo
mov
sub
fcoms
ds
mov
in
lods
gs
clc
sbb
mov
lea
jecxz
xchg
dec
call
scas
arpl
mov
xchg
dec
push
xor
scas
or
inc
jae
fcmove
add
sub
cmp
in
icebp
jmp
sahf
mov
call
or
dec
jge
jl
push
sbb
push
cltd
and
roll
addb
xorl
sti
cmp
fimull
cmp
arpl
roll
daa
mov
mov
pushf
ljmp
sbb
int
mov
fwait
dec
pop
fcomps
fcoml
into
hlt
xchg
inc
pop
pop
add
xor
aas
sti
adc
ret
pop
daa
insb
into
mov
popa
loope
dec
inc
mov
enter
or
stos
stos
jecxz
fstpl
pop
call
dec
scas
mov
lret
icebp
lahf
mov
jecxz
sbb
fwait
rcrl
add
frstor
cwtl
ja
adc
js
pop
push
or
push
xchg
jmp
out
push
out
inc
and
insl
aas
xchg
fwait
cvtpi2ps
dec
push
pushf
test
mov
dec
leave
push
sti
mov
inc
sti
push
scas
add
fbstp
cld
mov
dec
sbb
add
ffree
in
push
sahf
popf
pop
xor
imul
sbb
lahf
push
scas
pop
dec
mov
mov
outsb
fmull
jns
mov
in
icebp
in
aam
insl
mov
mov
push
sbb
push
xchg
push
xchg
push
xlat
test
pop
lock
ret
lods
jmp
xchg
mul
xor
inc
lahf
mov
mov
push
mov
pop
lret
dec
push
filds
ljmp
push
daa
and
push
dec
scas
mov
adc
loop
xchg
das
outsl
and
mov
mov
cltd
fcoms
jae
jns
movsl
jl
mov
in
rcrl
sub
sti
push
inc
sbb
inc
aas
and
mov
out
adc
xchg
repnz
xchg
mov
das
cmp
stos
inc
add
insl
xchg
mov
push
pop
stos
xor
arpl
std
xchg
jnp
repz
mov
in
xlat
adc
rcrb
lea
pop
jnp
lock
and
xor
xchg
lcall
repnz
mov
mov
test
mov
les
sbb
jge
mov
push
inc
lret
fdivrl
int
xchg
jo
adc
and
add
jle
sub
mov
mov
and
mov
ds
pop
movsb
cmp
dec
jns
inc
test
add
pop
or
shr
pop
popl
xchg
xchg
sbb
out
mov
mov
packssdw
rorl
cmc
xchg
xchg
outsl
dec
daa
dec
jl
cmp
push
xor
cmp
and
jmp
in
cwtl
pop
aad
pop
adc
rcrl
daa
outsb
lcall
testb
test
sbb
mov
lea
sub
push
iret
sti
push
jmp
inc
cwtl
push
lahf
test
in
mov
xchg
xor
pushf
xchg
or
sti
mov
add
or
lds
stc
js
mov
jmp
mov
jp
cltd
xchg
xor
fisttpl
push
aas
inc
jbe
xchg
les
ja
jg
mov
out
call
pop
push
lea
ss
stos
mov
lcall
je
mov
ds
insb
push
dec
pop
push
push
lret
mov
shlb
xor
mov
dec
popa
adc
aam
ja
stos
mov
add
push
inc
inc
xchg
cwtl
test
enter
jg
mov
imull
inc
bound
imul
in
mov
adc
push
sbb
js
xor
je
out
lcall
in
ret
adc
add
adc
outsb
nop
xchg
mov
dec
mov
rcll
adc
jge
mov
lea
and
xchg
mov
dec
daa
or
rcrb
pop
int
add
pop
hlt
aaa
mov
push
hlt
call
inc
and
enter
push
push
outsb
jecxz
jnp
fldenv
and
cmc
shrl
out
xor
pushl
int
notl
fdivs
addr16
xor
pop
es
pusha
and
jmp
mov
lods
sub
xor
sbb
inc
adc
imul
movsl
mov
dec
popf
and
push
sub
ja
inc
pop
push
roll
out
clc
pop
mov
add
stos
call
dec
mov
je
push
sti
cwtl
fnsave
mov
pop
cli
mov
push
xchg
cmp
pop
rclb
lods
mov
mov
leave
and
mov
stc
pop
adc
adcb
and
lret
movsl
pop
jmp
jbe
sbb
aas
aaa
mov
and
cwtl
and
cltd
mov
cmp
sti
cs
mov
je
jmp
mov
push
cltd
xor
and
xor
push
outsl
adc
sbb
mov
and
sub
adc
sbb
push
mov
mov
iret
mov
adc
or
xlat
ds
shrb
mov
inc
fwait
in
fs
cmp
in
push
into
inc
mov
and
and
mov
aas
divl
pop
sub
inc
jo
sbb
jne
lahf
push
cs
lea
sub
loop
int3
insl
int
add
call
mov
xor
sbb
dec
cmp
push
pop
fwait
cmp
mov
adc
jl
cmp
pusha
sti
jnp,pn
push
xor
addl
sbb
mov
mov
mov
adc
xchg
inc
or
jp
jo
xor
add
movsl
cmp
sarl
xchg
or
scas
mov
push
daa
adc
cmp
and
inc
jb
xchg
xchg
pop
dec
aas
jae
sub
repz
jo
jp
sarb
jl
jecxz
add
fistps
lahf
and
outsb
lahf
jmp
sbb
and
loop
test
lahf
shrb
mov
sub
cli
hlt
or
fs
bound
repz
dec
pop
adc
push
pop
mov
into
outsl
std
lahf
mov
repnz
lcall
mov
shlb
in
push
pop
out
xor
jns
sbbl
dec
cmp
les
adc
cmpsb
movsb
testl
icebp
inc
inc
or
and
iret
adc
xlat
out
fistpll
lods
push
jp
xchg
and
cmp
cld
sbbb
std
movsb
and
xor
ljmp
mov
imul
sub
add
out
inc
rorb
les
insb
push
das
adc
mov
xor
and
or
pusha
adc
jo
jnp
jae
push
sbb
js
jnp
int3
jns
les
sbb
inc
cs
jae
xchg
lods
adc
and
ljmp
and
addr16
lock
test
or
lea
jo
test
aaa
sbb
mov
imul
adc
mov
adc
aaa
sarb
xchg
sbb
adc
arpl
mov
subb
xchg
aaa
pop
xchg
mov
jp
and
int
or
nop
je
mov
dec
pop
mov
scas
out
lods
fmuls
les
sbb
push
ss
and
pop
aam
adc
or
sar
push
sub
clc
sbb
xchg
or
mov
enter
xor
mov
or
daa
clc
mov
gs
jb
into
push
lret
cli
int
ljmp
lods
jae
shlb
aad
repz
fsubl
dec
arpl
daa
or
out
pushw
leave
js
pop
mov
and
cli
popfw
ss
movsb
aaa
jecxz
ljmp
pop
mov
pop
fisubrs
inc
out
and
inc
fucomip
js
or
subb
push
push
lock
jg
jb
stc
or
popf
pop
inc
inc
mov
add
es
je
sbb
or
outsl
in
inc
insb
cmp
adc
xchg
test
jnp
popa
push
stos
cmp
movsl
sbb
aad
sbb
int
outsl
xor
pop
outsb
and
aaa
xchg
push
jae
mov
les
imul
adc
pop
xchg
outsb
xor
jmp
mov
pop
insb
icebp
scas
dec
rcll
addl
cmp
jno
loope
aad
mov
mov
shlb
pop
add
jg
mov
popf
inc
inc
jne
sub
jmp
mov
mov
mov
jb
iret
pushf
mov
fwait
xor
aaa
lods
adc
ret
and
in
xor
movsl
jo
xor
outsb
insl
fwait
dec
jmp
ljmp
int
daa
lahf
test
fmull
test
loop
jp
dec
jae
faddl
enter
jmp
jecxz
ljmp
fistl
daa
and
pusha
lret
cmp
mov
mov
mov
lret
dec
pop
jg
fs
mov
xor
sahf
ficoml
lods
addr16
pop
dec
mov
and
lret
inc
pop
sti
push
mov
sbb
loope
pop
adc
add
push
dec
int3
or
ss
arpl
cmpsl
mull
add
inc
outsl
adc
arpl
icebp
andl
in
outsb
nop
or
sub
inc
daa
cltd
ret
leave
and
loop
or
mov
mov
rolb
shlb
mov
daa
jb
jne
jae
jne
or
loopne
mov
or
test
daa
jae
gs
mov
cmpsb
and
cmp
mov
cmp
in
jg
push
push
cmp
jge
clc
jp
mov
xchg
out
sarb
call
daa
jne
out
clc
sub
xlat
cmp
add
push
sub
loope
add
xor
dec
push
push
or
sbb
mov
icebp
pop
xor
xchg
jb
cmp
shrl
cmp
daa
cmp
call
das
andl
insl
inc
in
data16
ficompl
movsl
adc
or
ss
jne
testl
in
fs
int3
xchg
dec
ljmp
add
testl
mov
int
pop
mov
daa
aaa
das
lahf
ss
stc
lret
xor
shrb
mov
inc
mov
inc
mov
jp
test
cs
sub
daa
ret
cmp
mov
test
lea
sub
data16
jl
mov
fdivrs
pusha
xchg
sub
insb
sahf
push
push
ss
mov
idivl
fwait
scas
scas
adc
out
pop
stos
pop
pop
push
lds
pop
add
mov
subb
mov
fldt
idivb
push
sbb
add
out
jge
sbb
rolb
cmpsl
cld
cld
xor
push
dec
xchg
outsl
sbb
sbb
out
leave
inc
sub
jne
mov
jns
cmpsb
arpl
push
jmp
data16
xor
movsl
jl
test
push
into
in
test
ds
push
push
fucomi
lods
lcall
xchg
dec
jmp
jecxz
stos
sar
shll
and
sub
jmp
push
and
divl
add
dec
mov
jno
stc
test
sahf
mov
pop
call
iret
lods
adc
hlt
push
mov
pop
or
sbb
dec
mov
jg
add
pop
shlb
scas
push
mov
push
cmp
fsubrl
mov
mov
push
jae
sub
out
adc
fcomps
loopne
xchg
push
jns
stc
jo
iret
inc
push
fcmovne
dec
add
mov
daa
pop
idivl
decb
adc
loop
mov
imul
add
cmp
jo
sbb
cltd
add
jecxz
fmuls
jno
mov
pop
aaa
sahf
daa
push
sub
loope
lds
mov
ljmpw
or
ss
cwtl
jne
loop
pushf
push
loope
iret
movsl
dec
mov
sbb
add
jb
push
stos
cs
pop
sub
lret
call
pop
bound
lea
jp
push
aam
getsec
jne
stos
movl
dec
or
mov
fmuls
xor
movsl
fldenv
add
jns
movsl
and
mov
xorb
mov
lock
mov
mov
push
into
push
jae
movsl
dec
fistpll
sbb
dec
sub
and
shl
push
movsl
mov
loopne
push
cmp
pop
das
stos
ret
fldl
out
aam
mov
test
addr16
xchg
push
lcall
loopne
iret
ljmp
inc
xor
push
outsb
out
lret
xchg
cmp
inc
and
jle
ret
nop
mov
fadds
cmp
fs
das
loop
xchg
insl
inc
divb
mov
mov
stc
pop
pop
jns
or
nop
add
leave
add
ret
mov
jle
mov
lahf
mov
jne
pop
mov
stc
js
jno
data16
shl
orl
xlat
mov
insb
call
pushf
mov
subl
ds
sbb
adc
jge
mov
lods
movsb
push
in
mov
movsl
or
jno
sbb
jne
jmp
adc
ja
lods
add
or
sarb
dec
pusha
add
lret
push
int
xchg
mov
add
adc
loope
or
xlat
add
hlt
std
xchg
es
lock
inc
mov
mov
mov
push
inc
cmc
decl
je
push
icebp
outsb
mov
add
jl
add
inc
outsl
sbb
sub
data16
pop
test
aas
out
mov
sbb
rcr
shll
imul
nopl
std
call
and
cmp
add
inc
mov
push
xor
imul
mov
mov
pop
dec
inc
sub
dec
ret
into
in
stos
xor
jnp
dec
inc
adc
jmp
aam
int3
pop
or
popa
add
mov
sub
jnp
push
pushf
cmp
sub
xchg
add
xlat
test
xor
cmp
cli
call
leave
jo
cmp
xchg
es
sbb
mov
jmp
pop
cmp
and
pop
adc
lahf
jecxz
cmp
inc
push
orl
xor
or
fisubl
add
pop
mov
sbb
jp
xchg
cmp
jl
adc
cmp
fistps
jae
ljmp
insl
sbb
addb
adcl
pop
mov
push
jg
dec
in
rolb
into
pop
xlat
test
xor
lret
inc
adc
jb
insl
test
push
mov
daa
stos
xchg
inc
jae
mov
cmpsw
les
push
int3
xor
mov
pop
bound
dec
adc
xor
add
std
pop
adc
pop
arpl
repz
sahf
and
addr16
xor
mov
jne
les
jbe
push
es
fnstcw
and
cmpsb
test
stc
add
aad
sub
mov
aam
add
push
sbb
dec
mov
add
xchg
loope
mov
dec
in
insb
lds
aam
or
pop
mov
xor
cli
das
imul
jnp
lret
adc
lahf
shr
adc
test
mov
dec
cmp
inc
cmp
push
push
xchg
jnp
xchg
push
shll
mov
out
mov
inc
add
mov
decb
js
aam
adc
andl
or
mov
pop
arpl
aad
or
mov
pop
sti
sar
push
nop
add
cmp
lea
lahf
pop
xchg
lds
inc
aad
add
in
dec
movb
int
push
or
in
cmpsl
out
cltd
ret
insl
and
clc
jbe
pop
shr
sub
pop
cwtl
adc
call
aas
scas
je
cli
sbb
in
adc
xchg
fsubr
imul
xchg
adc
sbb
xor
out
int
std
adc
les
mov
insb
push
push
ss
test
inc
shrl
rcrl
mov
shll
out
bound
jecxz
add
insl
pop
loop
inc
mov
mov
cmp
ret
jmp
insl
mov
or
pop
push
rcrb
in
outsl
dec
shlb
cli
iret
pop
cmp
rol
inc
sbb
imul
fdivrl
cmp
out
cld
out
pushf
xchg
shl
iret
das
fdiv
fucom
fidivrl
pop
mov
xchg
mov
movsb
adc
fs
adc
test
mov
pushf
icebp
pop
jno
sbb
lods
je
mov
adc
movsb
dec
push
int
push
mov
push
pusha
cs
loop
mov
call
lods
leave
mov
mov
push
icebp
jle
push
xchg
aam
dec
test
loopne
push
mov
out
sub
jbe
sub
testb
dec
pop
jmp
repnz
fdivr
stos
fdivrs
rep
add
les
inc
mov
jae
adc
test
inc
lods
mov
imul
push
scas
xor
dec
es
jp
aas
mov
sti
pop
scas
mov
adc
or
mov
aad
in
popf
stc
xchg
pop
cmp
fildll
pushf
mov
jns
negb
cmpsb
call
arpl
sbb
cmp
sbb
pop
pop
dec
xor
insl
xchg
testl
cmp
jo
and
sbb
sbb
pop
fwait
cmc
and
fldl
sbb
pushf
xchg
icebp
inc
pop
or
mov
lret
fmuls
out
or
mov
or
pop
pandn
mov
push
adcl
loope
add
sub
les
jbe
popa
mov
adc
pop
leave
flds
pop
mov
push
mov
push
sbb
lahf
mov
lcall
and
mov
es
fidivl
movsb
sbb
jecxz
insl
arpl
pushf
leave
adc
add
int
jno
mov
movsl
mov
xchg
jbe
mov
subb
mov
aad
push
out
fisubs
mov
xchg
stc
mov
movsb
scas
insl
andb
outsl
roll
call
pushf
rcll
nop
stos
push
loop
cmp
fildl
mov
hlt
scas
out
and
push
sub
cmp
push
inc
or
ds
cs
xor
jecxz
inc
cmp
or
clc
mov
mov
lsl
cmpsb
mov
loope
pushf
jmp
xor
test
dec
pusha
hlt
and
mov
lret
sub
mov
xor
adc
dec
jne
and
mov
xchg
push
pop
xchg
xchg
jp
cmp
inc
insl
fnstsw
dec
inc
pop
xor
fnstenv
push
cmp
sub
cltd
jns
sub
push
sbb
daa
cmp
ffreep
xchg
mov
push
adc
pop
cmp
clc
dec
mov
mov
add
aaa
jl
rolb
jae
call
jl
mov
daa
daa
and
scas
adc
lret
or
aam
loop
xorl
cmc
adc
xchg
and
loope
jae
pop
incb
sbb
in
out
repz
push
push
add
mov
sarb
jb
in
pushf
mov
mov
pop
jp
addb
cmp
mov
jno
fsubs
sti
or
adc
outsl
stos
inc
cld
sbb
cli
sub
js
push
nop
or
sub
or
jbe
pop
xchg
mov
mov
pusha
rol
dec
inc
xchg
pop
mov
sqrtps
jno
cmp
push
sahf
mov
add
mov
notb
push
enter
and
outsl
push
arpl
or
cltd
popa
out
mov
jle
pop
test
pop
faddl
nop
fldl
mov
icebp
test
sub
mov
les
jns
clc
xor
adc
gs
ja
and
out
push
stc
sub
mov
mov
pop
xor
repz
leave
fadds
or
dec
or
out
mov
dec
cwtl
cmp
pop
cli
mov
inc
cmp
sub
ffreep
imull
mov
insl
dec
pop
mov
mov
and
xor
lret
bound
popf
scas
clc
dec
rolb
fmul
sti
aas
or
jmp
mov
or
dec
jns
les
adc
das
fdivl
lret
push
fsubl
pop
xor
or
enter
xor
sbb
cmpsl
adc
shl
jae
jp
and
icebp
push
repnz
andb
jmp
push
dec
mov
addr16
iret
dec
js
jnp
adc
xor
cmp
sub
jmp
decb
push
and
mov
push
loope
and
jmp
repz
pop
mov
in
in
arpl
sub
and
testb
pop
out
and
add
movsl
mov
dec
scas
jg
inc
les
into
inc
call
jmp
arpl
insb
inc
test
dec
das
jmp
ljmp
fwait
ret
loopne
jl
rclb
dec
enter
mov
add
dec
jmp
adc
mov
fcompl
cli
int
fnsave
out
or
ja
jno
cmp
mov
shl
sti
and
cmc
out
iret
arpl
mov
jp
aaa
inc
aas
or
inc
pop
sub
in
iret
mov
addr16
loope
sahf
xchg
stc
sbb
and
loopne
or
mov
aad
loope
iret
push
aad
ds
or
shlb
cmc
lahf
xchg
pop
aam
adc
mov
sub
das
inc
cmpsb
cwtl
sbb
inc
jle
jb
dec
push
add
out
aam
xchg
jne,pt
pop
fbstp
jb
dec
sub
outsl
xor
ret
rolb
popa
loope
dec
fs
mov
xchg
shl
pop
jne
es
mov
popf
sahf
adc
scas
xor
pop
xchg
mov
decl
mov
and
mov
sbb
push
jbe
aas
inc
mov
sub
mov
jge
mov
stc
add
pop
popa
loop
and
jg
fstl
fldt
dec
jmp
insb
fstl
or
hlt
mov
adc
movsb
or
mov
jecxz
out
mov
jb
jne
push
fidivrl
mov
jecxz
ret
rcl
loopne
adc
adc
cwtl
rcr
fdivs
adc
sub
rcrl
enter
ret
lods
insl
or
test
repnz
inc
xorb
mov
test
add
add
outsb
mov
repz
popa
adc
flds
sub
jmp
sahf
pop
gs
mov
push
xchg
push
or
fst
ja
stc
add
jno
mov
pop
imul
scas
data16
mov
mov
jg
cli
mov
mov
xchg
inc
data16
or
pop
cltd
lock
imul
push
push
mov
in
aad
or
xchg
lock
ret
imul
shrb
pop
stc
enter
outsb
addr16
leave
js
mov
mov
xor
cmc
mov
aam
jne
mov
icebp
aaa
test
pop
sti
rolb
mov
sti
lret
mov
mov
jae
jne
push
sbb
test
xchg
ret
clc
ud0
xor
cltd
ret
not
into
push
outsb
les
jne
enter
push
cmp
fs
clc
jmp
jae
stos
popf
lea
mov
sub
clc
jne
insl
loopne
inc
adc
outsb
mov
xchg
shll
inc
adc
xchg
inc
mov
lret
scas
cli
pop
in
out
cld
insb
jne
jno
sete
adc
aam
and
lret
sub
dec
add
adc
cmpl
loopne
cmp
lods
out
sahf
dec
jno
test
push
arpl
xchg
movsb
sbbb
mov
out
iret
adc
cwtl
adc
mov
xor
cmp
dec
sbb
push
xchg
std
in
bswap
mov
jl
mov
lods
or
data16
adc
sbb
aam
push
mov
lret
hlt
adc
push
in
mov
stos
mov
ds
leave
test
jb
sbbl
shrl
lea
mov
into
mov
xchg
mov
pop
ljmp
andb
mov
ja
hlt
dec
nop
cmpsb
push
jmp
outsl
loope
stc
scas
sub
mov
xchg
add
test
jno
data16
xor
cmpsb
inc
xor
jmp
stos
mov
cltd
push
jg
adc
repnz
cltd
push
xchg
setne
inc
sub
loop
push
mov
scas
loop
repz
lret
mov
sbb
inc
add
mov
push
imul
movsl
add
adc
xchg
xchg
push
addr16
das
or
test
push
and
popa
insl
mov
ss
pop
fsts
pusha
sbb
ja
aas
mov
xchg
jl
cmpl
fmull
dec
mov
mov
imul
mov
mov
dec
sbb
cmp
jae
notl
pop
and
call
fiadds
add
xchg
int3
and
jmp
rcll
pop
cmc
loopne
enter
push
xchg
fld
popa
cltd
icebp
cmp
adc
cld
inc
call
mov
jle
dec
mov
addr16
das
and
push
loopne
mov
adc
das
cmp
loop
jne
jmp
pop
lcall
push
test
ss
inc
jecxz
pop
and
ss
and
push
mov
lret
ficompl
int
dec
fwait
sub
je
pop
mov
sub
fadds
loop
or
dec
fisttpl
jo
sbb
test
dec
sub
jne
icebp
cmp
inc
adc
sbb
pop
inc
inc
test
push
pop
cs
or
mov
lret
adc
sbb
jle
xor
cmp
call
ret
loopne
fisubrl
or
cs
cld
mov
pop
lret
inc
stc
loop
xor
sbbl
bound
xlat
or
dec
xor
mov
dec
adc
mov
push
and
mov
mov
rcl
mov
hlt
xor
std
add
push
and
jo
sub
dec
das
add
push
std
shll
xor
int3
inc
out
fwait
in
test
outsb
mov
repnz
addr16
lock
xor
in
xchg
loop
xor
out
cmp
cmpsl
mov
enter
test
xchg
hlt
or
mov
or
jp
adc
int
and
mov
xchg
mov
jns
aaa
mov
test
add
sub
sbb
cmc
in
mov
pop
and
ret
cmc
push
test
xchg
push
outsl
pop
adc
sub
mov
sti
sbbb
jmp
pop
movsb
roll
test
rorl
outsb
imull
and
add
jns
jo
xor
imul
cmp
xor
les
dec
stos
jnp
out
pop
pop
faddl
repz
xchg
test
mov
inc
icebp
mov
les
xlat
mov
in
jno
or
jmp
in
add
pop
inc
jle
pop
enter
jns
mov
gs
xlat
cld
mov
pop
or
cmp
inc
push
sub
jne
popf
sub
xchg
je
or
push
icebp
out
mov
rcl
ja
add
push
pop
mov
filds
or
loopne
adc
jge
fs
sbb
lods
jnp
and
mov
push
push
pop
xchg
movsl
pop
imull
pushl
and
sub
cmp
out
sbbl
mov
shlb
cwtl
fbstp
gs
sub
mov
cmpsl
sti
mov
cwtl
insl
mov
adc
test
sub
or
add
bound
mov
das
dec
cmp
sub
dec
inc
aas
and
pop
scas
push
jecxz
cs
fsubrl
fsubs
cld
insb
fsubrl
push
and
or
icebp
pop
data16
pop
lds
push
lods
testl
fwait
sbb
or
dec
sub
mov
test
xchg
adc
leave
lods
fadd
cli
dec
and
mov
pusha
cmp
xor
out
shl
add
negl
ja
xchg
pushl
cltd
fbstp
mov
jno
gs
rorb
pop
fwait
aad
sbb
push
cmp
aaa
pop
cmp
add
int3
cmpl
loop
lea
mov
xchg
ret
mov
inc
inc
add
stos
ficoml
xchg
pop
mov
jle
into
imul
jmp
notb
aam
inc
dec
mov
lahf
add
xchg
outsl
cli
cmc
shl
in
add
jnp
mov
ljmp
sti
lcall
sbb
and
nop
adc
or
cld
push
in
icebp
aad
imul
sbb
insb
mov
movsl
ljmp
in
xor
or
das
pop
xor
outsl
cld
ja
leave
pop
stos
jge
jp
push
aaa
mov
push
mov
xchg
pusha
dec
pop
sti
mov
mov
rcrl
jecxz
imull
lds
inc
stos
rorb
das
push
xchg
sbb
clc
jae
jnp
pop
and
push
and
into
push
cld
jp
inc
sbb
ljmp
insb
pop
inc
repz
lret
jl
fwait
clc
pop
sbb
fisttpll
mov
out
sahf
pop
push
gs
ret
xrelease
pusha
sbb
notb
mov
sub
xchg
clc
pop
pop
shl
out
mov
mov
sbb
pop
jnp
ss
scas
cmpl
inc
dec
je
jmp
pop
mov
fmull
addl
mov
mov
lret
cmpsl
xor
cwtl
add
lock
mov
sub
xchg
int
int
cmc
mov
aad
mov
out
push
out
and
sbb
dec
out
adc
and
ret
out
movsb
rcrb
adc
xchg
xchg
jo
mov
cmpsb
rcl
pop
pop
hlt
xor
shll
repz
inc
push
stc
repz
dec
inc
cs
pop
stc
cmp
inc
negb
jb
mov
push
rcrb
cs
mov
push
test
cmp
ja
nop
incl
jnp
inc
jns
out
mov
pop
pop
sbb
pop
test
ja
and
jno
xchg
pop
mov
mov
dec
jbe
shll
mov
jle
stos
sub
xor
or
jnp
or
movsb
mov
ja
addr16
push
cmpsl
sub
test
or
cmpsl
out
push
aam
idiv
stos
adc
mov
icebp
gs
rolb
iret
cwtl
or
into
test
aaa
sbb
and
cld
data16
mov
pop
imul
fisttps
push
pop
cmpsl
adc
daa
dec
mov
call
dec
push
je
mov
xor
push
push
ret
mov
jecxz
dec
inc
mov
lahf
jns
movsl
out
scas
in
mov
mov
mov
push
push
pushf
jne
pop
xor
loope
dec
sub
repnz
sbb
mov
gs
sub
popf
adc
shr
jl
test
fnstenv
cmpsl
xlat
push
fcomip
xchg
pop
push
xor
movntps
ss
sbb
aad
fwait
jecxz
or
fisubl
nop
loop
mov
bound
lret
add
xchg
jl
pop
dec
rcr
lret
dec
mov
jge
ja
scas
test
clc
inc
xor
mov
sbb
inc
mov
mov
sbb
divl
nop
cmpsb
jno
es
popa
lret
out
insb
mov
pop
lret
pop
push
hlt
mov
add
adc
push
loop
mov
adc
in
dec
inc
test
sahf
insl
adc
jne
xor
in
jns
inc
nop
mov
xor
js
cmc
iret
int
mov
jge
pop
push
lds
shlb
fwait
jo
movsb
dec
movsb
adcb
push
and
cmp
jge
sub
or
into
push
push
add
adc
xchg
iret
mov
ss
ds
fidivrl
popf
xchg
cmp
ja
lahf
xor
dec
mov
lret
mov
xchg
xor
lret
notl
jo
lret
popf
sbb
loop
dec
add
outsl
andb
mov
loopne
sbb
call
dec
sbb
pop
push
mov
fwait
das
sub
sub
dec
cmpb
inc
mov
test
iret
ret
mov
lahf
or
test
fwait
dec
cmp
cwtl
in
sub
aad
enter
pop
test
mov
fcomi
fs
mov
test
je
adc
dec
int
aas
mov
jns
jmp
dec
jp
ljmp
lods
xchg
cwtl
dec
das
aam
sar
inc
mov
fxrstor
and
xor
cmp
popa
insb
hlt
call
insb
idivb
aad
lea
xor
rcll
fisubrs
aas
fdivr
fxam
out
lds
cmp
add
sarb
dec
imul
xor
aad
push
jbe
mov
ret
sarb
fcoml
out
out
xchg
subb
pop
cltd
dec
push
adc
pop
mov
mov
fiaddl
inc
dec
xor
cld
out
xor
push
xor
cs
xchg
pop
jnp
cmc
or
mov
ss
mov
aaa
push
fstp
shlb
mov
cmc
fwait
sub
or
ja
std
in
andb
es
ret
or
je
popf
and
xchg
dec
push
xor
gs
outsb
pop
jmp
push
mov
mov
stos
mov
pop
ret
pop
mov
cmp
xchg
jnp
xchg
mov
jecxz
inc
inc
sbb
lock
or
cmpsb
jno
bound
jmp
pop
mov
xchg
nop
fnstcw
pop
mov
pop
sbb
jbe
popf
arpl
jmp
cmp
and
cltd
ja
insl
stos
xchg
add
cltd
sub
cli
jne
insl
mov
xchg
cs
sbb
ds
pop
fsubs
mov
mov
push
adc
pop
xor
addr16
loope
push
stc
out
stc
inc
mov
aam
push
rol
mov
adc
mov
and
inc
jbe
adc
js
fmul
stc
and
or
inc
rep
in
xchg
pop
inc
aam
mov
jl
popa
pop
cmpsb
push
js
jmp
decl
outsl
out
cmc
sbb
jns
inc
xor
push
inc
test
mov
xor
xchg
loop
in
cmpsb
mov
cmp
add
rcll
call
lods
adc
loope
pop
loope
mov
mov
test
pavgw
scas
xor
arpl
mov
xchg
pop
into
pop
xchg
frstor
dec
fninit
mov
jno,pt
notl
cmp
cmp
std
cld
mov
orl
dec
es
fdivs
add
sti
dec
rcr
cmp
or
fistl
mov
or
mov
cld
xchg
xor
pop
mov
cld
add
lret
aas
cmp
jecxz
xchg
hlt
or
addb
das
jl
xchg
gs
mov
ds
sbb
lahf
mov
jo
cmp
ficoms
ds
dec
mov
inc
xchg
inc
jae
or
push
jle
adc
mov
jbe,pn
inc
xchg
test
add
lods
jbe
loopne
sub
push
pusha
sub
jno
cmpb
pop
push
into
fnstsw
xchg
push
dec
sub
das
inc
mov
dec
push
pop
adc
jge
cmc
lods
push
mov
xchg
add
imul
testb
dec
mov
cmp
dec
jns
mov
cmpsl
es
inc
arpl
std
mov
pop
es
repz
cmpsl
jnp
rcrb
bound
int3
push
cmp
jno
jno
movsb
or
dec
insl
loop
sub
push
mov
adc
mov
nop
xchg
movl
aad
mov
scas
mov
pusha
and
pop
cmpsb
push
scas
mov
popf
xchg
fsub
or
lods
dec
and
leave
sbb
mov
icebp
addb
inc
repz
lcall
adc
pop
mov
mov
sbb
xchg
mov
cmc
xchg
mov
cmp
mov
inc
mov
jne
cmp
testl
or
fsts
push
inc
pop
dec
mov
mov
pop
outsb
adc
hlt
and
jge
mov
lahf
leave
outsb
mov
lcall
bound
jne
scas
loopne
out
cli
shll
mov
add
rolb
cwtl
xchg
xchg
mov
push
clc
mov
into
mov
stos
insb
and
call
cmp
jl
cmp
mov
pop
push
pop
int
pop
jnp
in
mov
call
sarb
and
je
dec
dec
add
xor
xchg
sub
divl
fs
or
push
lods
push
leave
test
das
mov
test
sub
xor
mov
popa
push
aas
pushf
insl
push
mov
mov
xor
in
pop
pop
jbe
mov
jmp
mov
andb
les
sbb
sarl
jne
out
nop
insb
jns
aaa
jg
add
lcall
pop
dec
dec
scas
fidivrl
jp
push
xor
test
int
enter
inc
or
addr16
xor
cmp
ss
aaa
out
cmc
mov
icebp
push
mov
sbb
mov
add
outsb
ljmp
sub
push
mov
dec
push
popf
mov
test
xchg
fisubrl
aam
call
das
filds
mov
je
iret
bound
add
push
and
push
andl
lahf
in
inc
push
bound
test
sarb
push
cmc
mov
xchg
mov
outsb
pop
sub
sub
xchg
mov
xchg
jns
sahf
inc
push
pop
dec
jmp
jae
in
sub
cli
push
inc
inc
push
push
xchg
push
mov
inc
push
inc
sub
mov
pushf
push
xor
data16
push
push
call
out
add
in
sahf
xor
or
dec
inc
xchg
es
jne
loope
xchg
in
fcom
scas
test
enter
jae
mov
insl
bound
in
or
mov
add
pop
xor
mov
push
out
sarl
and
lock
push
insl
sarb
outsb
jecxz
ljmp
fwait
in
and
dec
sub
add
mov
ficompl
xor
cwtl
hlt
lds
test
and
ret
push
sub
lods
sub
inc
mov
into
add
pusha
nop
je
push
xor
mov
je
adc
in
push
adc
std
cld
mov
inc
movsl
cmp
mov
jl
cmpsl
out
test
pop
xchg
or
cmovp
out
dec
hlt
ret
inc
cmpsb
or
pusha
and
lcall
add
sub
mov
mov
out
mov
dec
les
or
test
xchg
bound
xchg
fiadds
jmp
mov
insb
popw
cmp
out
xchg
mov
movsb
fdivs
lret
or
or
and
mov
xchg
xchg
or
adc
fisubl
add
leave
xor
inc
popa
das
pop
icebp
outsb
mov
adc
push
nop
jne
clc
stc
in
and
add
jo
adc
cli
mov
add
aas
cmp
adc
int
pushf
xchg
or
fcmovbe
fucom
mov
and
cmpsb
cmp
pop
xor
mov
sub
scas
mov
lock
sub
pop
shll
push
sbbb
xor
mov
js
xlat
mov
mov
jo
std
add
stos
cmpl
stos
mov
jp
adc
test
and
jl
cmp
push
sbb
outsl
negl
movsb
and
das
ja
hlt
pop
sub
gs
fidivrs
test
inc
jecxz
mov
add
mov
pop
lret
and
lods
lahf
popa
xor
mulb
add
icebp
cmpsb
stc
sysret
out
mov
pushf
pop
test
bound
mov
lahf
sti
mov
push
push
mov
jbe
lahf
fisubs
push
idivl
mov
mov
das
out
xchg
push
and
add
xchg
mov
jecxz
fdivr
lods
insb
jge
pop
xchg
js
imul
cmp
pop
or
fildl
cmp
dec
jbe
jbe
mov
jmp
jno
and
mov
or
add
cmp
pop
mov
std
std
sbb
imul
aam
sbb
pop
pop
cmpb
mov
or
add
inc
shr
and
movsl
pushl
push
es
stos
data16
mov
je
das
int3
dec
pop
ds
loopne
outsl
lret
ss
jae
mov
or
sahf
pop
sbb
lods
push
or
pop
lcall
push
gs
dec
test
mov
adc
ret
fisubl
add
in
rorl
cltd
jns
sub
inc
dec
xchg
test
sti
inc
add
or
cwtl
inc
cmp
mov
push
dec
cmp
movups
mov
push
sub
inc
mov
pusha
ret
icebp
mov
loope
leave
fs
push
scas
int
enter
mov
jb
imul
pop
test
xor
xchg
mov
andl
and
and
xchg
stc
mov
sbbl
dec
inc
dec
jle
repnz
out
insl
in
imul
xchg
pushf
jo
ja
jecxz
lcall
leave
lret
pop
mov
push
pusha
fadd
cmp
push
cld
dec
adc
mov
mov
adcb
adc
pop
inc
mov
jle
scas
jns
aaa
xchg
dec
cmp
sbb
jmp
sbb
gs
fcmovu
dec
cmp
adc
aaa
pushf
negb
jp
fs
push
out
fdivrs
dec
out
cmp
loopne
push
dec
push
fbld
in
test
repnz
fld
xchg
and
clc
scas
out
paddusb
push
loope
pusha
aaa
aas
in
xor
arpl
xchg
fildll
mov
cwtl
or
pop
and
push
lods
nop
loop
addr16
arpl
adc
mov
pop
and
int
ds
call
iret
mov
or
sbb
adc
icebp
shll
mov
cmp
adcl
mulb
push
ficoml
stos
adc
cmpsl
sahf
lahf
ljmp
cltd
jecxz
and
jmp
sub
add
repz
ja
pop
sub
clc
mulps
lret
pop
addb
aas
mov
pushf
pop
in
lcall
mov
sti
adc
cld
inc
dec
cld
jae
iret
adc
ret
sbb
or
sbb
mov
int
test
push
and
mov
xor
inc
pop
inc
mov
repz
xlat
scas
inc
loopne
dec
popa
shl
stos
push
pusha
pop
out
xor
mov
cmp
cmpsl
inc
mov
fs
ud1
ficoms
loopne
mov
or
movsb
fisubl
loop
dec
cltd
sbb
sub
in
pop
inc
dec
push
stc
pop
out
test
push
push
aam
push
xorl
mov
mov
pushl
movb
stos
pop
pushf
add
es
add
xchg
add
sub
aaa
add
stos
or
xchg
xchg
inc
inc
aas
in
push
xor
mov
outsb
dec
sbb
hlt
and
xor
movsl
pop
dec
out
cli
jbe
aad
jno
mov
pop
in
int
pushf
testb
orb
fsubrl
xor
pop
lods
ror
lret
gs
bound
sub
ret
xor
popa
pop
mov
mov
fs
mov
fsubrp
rcrb
mov
notl
dec
das
out
ret
cs
mov
bound
mov
fldl
lods
das
adc
add
aas
xor
flds
dec
pop
shlb
fidivrl
or
ret
cld
fdivrs
imul
jmp
shll
push
cwtl
cmpsb
jmp
lock
xchg
cmpsb
mov
dec
les
mov
int
cmp
lods
daa
shr
sbb
hlt
jecxz
mov
mov
or
push
cmp
jno
xor
dec
in
pushl
jno
pusha
or
repz
inc
cmpsl
xchg
xor
fucomip
add
and
and
dec
fldt
or
xor
in
sub
fs
daa
xchg
test
ja
mov
notl
outsb
inc
enter
js
xchg
enter
ret
or
and
push
jae
enter
pop
aaa
in
and
pop
dec
cmp
jl
inc
aam
or
mov
xor
push
into
mov
cmp
aam
out
inc
pop
lods
pop
imul
icebp
std
dec
jae
outsl
inc
push
fidivrs
lcall
in
je
leave
pusha
or
sub
sarl
cltd
testb
lret
inc
notb
mov
shll
pop
push
mov
int
sbb
rcl
pop
je
es
or
mov
adc
gs
or
in
push
aad
data16
push
test
xchg
fiaddl
mov
ficoms
mov
es
jne
outsl
dec
outsb
pop
xchg
ss
mov
stos
pop
jb
mov
rolb
sbb
pop
dec
xor
cmpsb
mov
mov
sbb
push
xlat
jecxz
ror
inc
leave
mov
insl
movsl
inc
mov
sbb
shrl
or
in
loopne
adc
fisubrs
push
cmc
xchg
into
test
sahf
mov
jbe
cmp
insb
push
int
xlat
push
cmp
pop
bnd
int3
jno
sti
rorb
or
mov
stos
mov
stos
aad
mov
fwait
sbb
cmc
ret
pusha
mov
movsb
mov
pop
subl
mov
into
or
daa
jg
cmp
enter
push
sbb
sbb
imul
or
pop
mov
mov
add
test
dec
lods
jnp
lds
dec
dec
sub
je
add
gs
xchg
addr16
mov
adc
jb
push
push
mov
outsl
cmp
adc
or
or
sbb
adc
repz
int3
sti
cmpsl
mov
fdivrs
mov
lcall
push
aaa
jns
dec
mov
xchg
outsl
dec
bts
lcall
bound
mov
jmp
xor
pop
xchg
sub
scas
add
dec
mov
lds
xchg
mov
lods
in
sub
mull
mov
pop
push
mov
sarl
je
notl
or
mov
or
in
xchg
and
loope
es
lcall
xchg
cli
outsb
push
sbb
insb
jecxz,pt
pop
xchg
in
cmp
xchg
cmc
lahf
imul
mov
mov
in
sub
mov
imul
push
movsl
push
fs
js
mull
xchg
dec
lret
addb
insl
sub
rcrb
and
popl
stos
sti
ja
std
vmovaps
sti
aaa
scas
mov
jge
rcl
xchg
cld
add
pop
adc
imul
stc
js
popa
ja
jl
pop
dec
sub
enter
imull
loopne
or
pop
insl
mov
push
xchg
jle
mov
mov
push
cltd
imul
xchg
sub
out
pop
outsl
lods
ss
push
clc
pushf
cli
inc
lock
push
push
sub
sub
mov
and
jle
and
fistpl
adc
xchg
aam
mov
adc
and
push
xor
adc
sahf
sti
pop
stos
out
cmpsb
int3
push
mov
jae
cmpsb
dec
inc
divl
push
pop
xor
inc
jbe
lcall
les
fstpt
cmp
rclb
push
leave
inc
aas
sub
xchg
lea
add
xchg
adc
push
sub
xchg
pop
lods
clc
int3
bound
out
jb
mov
test
lret
pop
loopew
push
add
mov
add
ja
lcall
jae
enter
push
pushf
mov
test
xor
add
push
cltd
int
and
out
stos
mov
insl
cs
xor
xchg
addr16
push
out
jne
js
fimull
js
fildll
pop
cltd
mov
sbb
enter
leave
outsb
pop
mov
repz
or
jnp
jecxz
out
and
adc
pop
jle
js
iret
cmpsb
fcomps
lcall
jge
loop
rcl
xchg
jns
jbe
mov
cmp
faddl
in
xchg
data16
lret
jle
mov
cmp
pop
out
pop
hlt
ret
or
loopne
lds
std
xchg
push
fists
gs
dec
movsb
xchg
enter
rolb
loop
cmp
movb
jl
sbb
shll
aad
daa
xor
fidivrs
mov
mov
movsl
mov
mov
sub
jle
push
add
mov
dec
fisttpll
ret
dec
mov
roll
fimuls
xor
sbb
dec
std
cmp
lret
jmp
pop
jae
push
call
sarl
pop
cs
adc
out
mov
push
inc
fsubr
mov
cmp
shl
gs
mov
pop
jae
icebp
iret
shll
aam
mov
xchg
xor
or
sahf
outsl
call
test
or
nop
mov
push
mov
lret
fnsave
add
in
mov
out
loopne
addr16
dec
movsl
fnsave
aaa
fsubs
std
imul
sbb
xor
mov
out
out
or
mov
stos
enter
mov
mov
cmpsl
jge
rol
and
jns
dec
je
mov
scas
icebp
adc
movsb
mov
jle
sub
movsb
pop
ret
mov
push
int
and
dec
push
add
sub
fsubp
sahf
dec
cs
or
and
xor
ja
pop
rcr
ficompl
jno
test
shr
leave
mov
jo
movsb
and
in
mov
mov
mov
ja
movsb
xchg
imul
xor
sbb
ljmp
aas
mov
or
pop
sti
int3
cmp
insb
xor
jge
sbb
fmull
xchg
cli
xchg
push
mov
xlat
add
pushf
test
clc
fs
dec
mov
dec
mov
data16
scas
popf
adc
outsl
or
call
frstor
mov
jecxz
je
lcall
add
jnp
cmp
dec
xor
stc
or
add
mov
mov
mov
in
inc
es
lret
hlt
jns
aas
loopne
mov
pop
add
iret
xchg
imul
movsl
xchg
xor
mov
sbb
hlt
sub
gs
shll
nop
sbb
repz
lret
or
js
lahf
push
inc
ss
mov
push
add
dec
mov
or
sub
imul
cmp
add
sbb
mov
sbb
fisubrs
mov
cmp
add
fdivp
pop
sub
or
mov
ret
pop
imul
xor
push
ds
xor
insb
pusha
data16
lret
movsl
xor
mov
bnd
sbb
insl
xchg
inc
mov
sarl
in
mov
push
movsl
sub
xlat
fmuls
push
movsb
add
shlb
lahf
mov
fs
or
or
pushf
inc
repz
ljmp
xchg
mov
jb
jge
repz
xchg
pop
inc
movsb
mov
insl
fstpt
jecxz
imul
push
cmp
xlat
sbbl
adc
aas
mov
pop
hlt
cmp
shl
xchg
enter
icebp
xor
add
test
add
jl
adc
fwait
lret
inc
xchg
hlt
adc
outsl
mov
sub
fs
mov
loope
cmp
pop
jg
out
movsb
movsb
mov
add
dec
sub
xor
xchg
pop
xor
jl
add
fmuls
mov
scas
mov
mov
add
mov
mov
mov
mov
cld
addb
popf
sahf
mov
mov
push
jnp
fst
jp
lock
jg
popf
mov
cmp
fs
sub
gs
mov
xor
gs
jmp
orb
jge
or
imul
xchg
push
jb
mov
js
mull
popf
fs
sbb
jns
push
fwait
cmp
fldl
mov
mov
jb
idivl
mov
adc
dec
lods
sbb
add
dec
lods
jle
pop
mov
mov
ss
xor
xor
push
pop
hlt
adc
leave
sbb
in
jbe
js
sarb
add
sti
cmpb
addr16
mov
mov
pop
insl
ds
inc
or
mov
mov
cmp
add
sti
inc
xchg
or
push
jmp
jbe
setns
cli
mov
adcb
clc
call
add
negl
sbb
cmp
bound
cmpsl
jg
and
nop
je
inc
scas
xchg
imul
pop
cmp
lock
cmp
mov
xor
aas
cmp
cmp
push
mov
jle
in
mov
or
jl
push
mov
sub
mov
xchg
enter
adc
sub
jge
mov
add
int
xchg
insl
scas
jb
test
leave
and
jb
out
stos
repnz
nop
pop
push
push
sbb
push
dec
xchg
add
arpl
leave
fnstsw
into
add
in
mov
es
fisubl
repnz
mov
and
pop
cmpb
mov
aam
add
idiv
movsl
daa
adc
pop
adc
push
lcall
adc
lret
mov
mov
xlat
sub
or
mov
fdivrs
jb
outsb
imul
cmpsl
push
cmp
fldcw
stos
cmc
dec
push
mov
cwtl
mov
and
mov
or
jecxz
xchg
mov
scas
dec
insl
sbb
pop
add
mov
lahf
ret
jmp
cs
lea
xchg
pop
jecxz
adc
jnp
jle
mov
ljmp
adc
adc
inc
mov
push
push
mov
lods
or
gs
out
add
pop
daa
xchg
jb
in
insl
push
loop
add
mov
fnstcw
loopne
lock
sarl
jns
es
stos
lahf
xchg
fnstcw
pop
cltd
xor
js
xchg
xor
std
mov
mov
push
movsl
xchg
pop
out
popl
or
orb
fwait
cmp
loope
xchg
adc
xchg
test
sub
lods
decl
rorb
cmp
inc
out
adc
fs
inc
leave
stos
mov
fisttps
mov
test
pop
sahf
daa
mov
or
pop
xor
idivb
or
inc
neg
xchg
lods
cmc
lea
test
sbb
out
jmp
jbe
aam
sti
add
xchg
xor
dec
daa
ljmp
fcomps
cmp
sahf
sbb
out
lods
adc
inc
mov
mov
xchg
aas
mov
mov
out
xlat
loop
pop
cmpsb
pop
dec
push
aad
xchg
xchg
and
push
xchg
out
mov
push
cli
hlt
adc
fnstcw
jb
lods
mov
fsubr
and
stos
cmp
cwtl
cld
into
inc
dec
xchg
add
loopne
lds
fstp
aaa
adc
loope
xor
fisubs
mov
fdivl
cli
jbe
pop
fdivrs
fcmovnb
not
ja
test
cli
in
dec
into
out
adc
fcomip
xor
mov
mov
popa
cmp
add
xchg
leave
sbb
fsubrl
loopne
mov
iret
clc
cmpl
mov
hlt
out
jp
icebp
les
lods
jg
bound
inc
clc
pusha
int3
std
in
dec
int
gs
addr16
loopne
mov
fimull
in
cmpsb
ficompl
or
sub
cmp
mov
scas
xchg
pop
cmc
leave
mov
pop
movsb
icebp
add
mov
stc
pop
mov
mov
or
sbb
push
movsl
jp
jg
sbb
adc
jecxz
aad
insl
adc
popf
test
inc
jnp
mov
ror
bnd
popa
inc
sbb
xor
jl
mov
sub
ret
pop
and
adc
cmp
cmc
jp
jmp
fs
cmp
or
lock
dec
das
stos
jmp
test
or
lret
sub
push
xchg
in
mov
scas
inc
fcomi
test
cmp
inc
lahf
imull
mov
scas
mov
loopne
imul
aas
fisubrl
xchg
mov
popa
xor
aaa
xchg
xor
repnz
add
bswap
in
adc
mov
fidivrl
nop
ss
inc
xchg
jo
ret
fmull
cli
lahf
push
dec
icebp
add
add
xor
movsl
mov
push
nop
stc
shrl
rcrl
mov
in
shrb
mov
dec
stc
cmp
test
cmp
sub
or
cmp
daa
cltd
xor
and
popa
sar
std
xchg
frstor
popl
sti
ds
mov
ds
lods
mov
push
xor
in
nop
ja
mov
ss
jecxz
xchg
inc
push
cmp
ret
jmp
or
mov
jno
inc
cld
dec
lahf
pop
rolb
cmp
mov
cmp
and
jle
push
cmp
aas
lcall
shlb
in
daa
jns
adc
test
mov
dec
les
lds
and
leave
gs
cwtl
sahf
std
in
push
jle
mov
jl
dec
negl
std
hlt
pop
mov
clc
xor
stos
push
movsl
lock
pop
mov
mov
fimull
jne
push
mov
xchg
jbe
mov
push
jl
cmp
pop
test
cmp
xor
mov
inc
jmp
fcmovnb
movsb
jmp
test
stos
jle
mov
dec
sub
inc
sar
fisubl
push
imul
sub
and
inc
inc
jb
push
inc
inc
aas
orb
in
xchg
test
lock
inc
add
fs
dec
jecxz
subb
lret
fisttpl
or
inc
push
inc
rcl
and
insl
cmp
dec
sahf
mov
mov
rorb
fstpl
icebp
add
arpl
xor
xchg
in
sub
mov
negb
mov
ljmp
stos
rcll
or
es
dec
icebp
test
repz
mov
sahf
movsl
frstor
xchg
add
xchg
repz
mov
icebp
mov
popf
xor
adc
cld
bound
jo
push
cmp
out
das
mov
movb
iret
insb
sbb
and
push
push
mov
mov
aad
in
pop
push
int
cmp
jg
push
cmp
pop
sbb
pop
aas
in
data16
loop
pop
mov
mov
cmpsb
xchg
push
push
movsl
adc
shrb
xchg
dec
je
enter
icebp
scas
notb
push
xchg
add
dec
stc
out
sti
push
jno
fistpl
cmpsl
test
fisubrl
loop
in
mov
or
lret
fadd
or
mov
push
dec
imul
loop
mov
jno
insb
ds
ret
repz
or
sti
imul
jg
inc
movsl
aaa
aas
loop
xor
bswap
lea
adc
mov
into
push
aas
clc
ret
pop
loop
addr16
or
int3
movsl
idivl
lds
fcompl
push
enter
das
push
ret
ljmp
pop
in
adc
jne
stos
push
fmull
dec
or
mov
jnp
mov
ror
sub
mov
rorl
decl
xlat
inc
call
mov
sarb
rorb
leave
fmul
movsb
ljmp
dec
push
sti
mov
pop
jnp
insl
test
test
sbb
aaa
cmpsl
pop
mov
stc
xor
inc
or
and
push
imul
pushf
push
or
icebp
cmpl
cmc
adc
nop
push
and
movsb
enter
sub
shr
ret
mov
stc
push
cmc
pop
xor
cmpsl
rcrb
jecxz
lods
push
mov
xor
popa
ljmp
inc
cmc
cmc
movsl
jnp
stos
lods
out
loop
jg
fwait
xchg
mov
mov
fisttps
in
mov
int3
sbb
cli
mov
adc
jecxz
pop
xchg
fidivs
insb
into
loopne
xchg
daa
and
mulb
in
mov
cmp
xor
pop
rolb
outsl
mov
cmp
les
mov
insb
pop
cmpsb
adc
xchg
jl
mov
cwtl
cmc
daa
mov
xor
sub
jl
push
data16
loop
pop
xchg
xrelease
push
cmp
outsb
jmp
xor
or
into
and
ja
cld
sub
jae
sub
sbb
lea
repnz
lahf
shlb
and
mov
in
fisttps
mov
popa
fiaddl
cltd
pop
sbb
not
jg
pusha
add
call
test
insl
sti
in
adc
mov
add
lret
fists
lcall
or
pop
in
sub
cli
mov
movsb
jno
lods
mov
mov
cmpb
xor
cmpsl
call
or
and
pop
inc
ja
scas
daa
fdivp
pop
and
mov
add
mov
mov
pop
incl
out
mov
sti
fwait
xor
push
into
sub
adc
mov
dec
pop
add
jo
dec
jle
mov
mov
or
cmpb
mov
cmp
fmull
mov
mov
push
divl
sbb
lea
push
fldt
clc
jp
mov
sbb
shrl
mov
jae
xchg
adc
cmpb
mov
push
stos
pop
and
add
sbb
xchg
andl
mov
mov
lret
inc
xchg
loope
dec
sub
shlb
pop
nopl
test
mov
push
js
mov
in
mov
jbe
xchg
jle
push
into
xchg
push
repz
fdivrl
xchg
mov
mov
and
out
orl
mov
aas
out
inc
lods
inc
aaa
sbb
mov
outsl
jmp
xchg
outsl
pop
icebp
inc
imul
jecxz
out
dec
push
mov
xchg
int3
ret
mov
shrl
add
xchg
cmpsl
mov
rorb
or
adc
into
push
jle
repnz
mov
jge
sub
in
arpl
repnz
addr16
stos
push
mov
add
ret
pop
out
popf
in
adc
sbb
dec
mov
pop
jl
es
pop
push
fistpl
jo
xchg
mov
inc
xchg
pop
dec
lods
das
enter
imull
arpl
inc
and
cmc
mov
adc
xor
and
mov
mov
jns
lahf
mov
ss
inc
faddl
dec
mov
imul
cltd
pushf
decb
roll
add
fstp
mov
ds
mov
js
jg
xor
jl
or
mov
mov
cmc
imulb
outsl
xchg
xchg
cmpsb
inc
cli
mov
mov
incb
fidivrl
lds
out
jne
cwtl
je
adc
test
loopne
mov
xchg
xor
ljmp
and
sub
push
push
lods
loopne
icebp
push
sub
sbb
pop
jp
fstl
fldpi
stos
pop
fwait
imul
jmp
lods
pop
subl
add
xlat
cmp
pop
out
ficompl
lret
or
xor
mov
iret
and
xchg
sbb
pushf
mov
sahf
cmp
pop
and
push
jl
ret
and
ret
out
xchg
xchg
imul
gs
daa
lret
or
cmp
cmc
fisubs
inc
pop
int3
movsl
xchg
push
mov
cmp
add
mov
mov
dec
jmp
lods
arpl
mov
int
mov
push
xchg
data16
pop
pop
sbb
cmp
jg
xor
xor
adc
and
out
aas
scas
cmp
into
ja
xchg
xchg
sub
dec
loopne
adc
mov
int3
mov
shlb
xchg
adc
jle
fstpt
loope
jg
adc
clc
jmp
stos
adc
and
mov
xchg
push
cmp
xor
sub
ljmp
int
sbb
test
jge
jo
scas
scas
leave
movsb
adc
add
lret
mov
ljmp
stc
cmpsb
arpl
mov
aas
nop
pop
ficomps
rorb
push
add
mov
dec
aas
leave
or
divb
loopne
and
sub
xchg
xchg
shr
xchg
dec
sbb
cmpl
clc
fmul
cmp
out
out
int3
aaa
pop
add
test
jg
inc
jne
sub
jno
imul
lods
je
xor
mov
push
nop
inc
stos
pushf
notb
mov
repnz
movsl
ret
jmp
cmp
add
rcl
inc
jo
mov
xorb
push
lahf
icebp
inc
push
cmp
xchg
aam
push
fstpl
mov
sarb
push
cwtl
push
mov
or
fsubp
xlat
mov
test
rcll
imul
ret
push
xchg
jne
mov
sbb
ljmp
lods
mov
lret
rol
push
mov
mov
or
fmul
loopne
dec
movsb
mov
or
movsl
dec
or
mov
cwtl
pop
mov
cs
xchg
test
enter
adc
popa
add
fisttpl
shrl
mov
mov
add
xchg
movsl
in
xchg
push
call
pop
fs
hlt
stos
inc
xor
test
jo
pop
inc
rolb
rcrb
adc
push
stos
cmpsb
inc
rcl
cltd
es
sti
and
jg
fidivl
add
xlat
hlt
add
cmc
dec
int
cmp
stos
fistps
pop
addr16
test
dec
xchg
mov
stos
xchg
or
ret
mov
loopw
aam
testl
das
mov
out
mov
push
iret
fsubl
cmp
test
xor
ds
into
sub
insl
repz
inc
inc
xchg
in
jp
mov
iret
xchg
jmp
ja
sbb
xchg
push
mov
imul
arpl
adc
iret
and
test
xchg
popa
filds
sarl
lret
mov
cmpsb
mov
xlat
and
push
xor
sahf
sub
jbe
xor
scas
call
inc
jge
js
addr16
sub
pop
cmp
fucomp
call
cmpsb
ds
leave
jnp
xor
jb
clc
mov
jo
jo
int3
in
mov
pop
xchg
jle
push
mov
jp
das
adc
jp
push
std
sbb
out
inc
add
mov
rcll
push
outsb
mov
jae
les
hlt
xor
test
aam
adc
cmpl
cmp
cmp
and
jo
imul
xor
sti
data16
out
adc
sbb
lock
xchg
add
xor
cmp
jae
das
jp
loopne
sub
sti
addr16
or
repz
push
xchg
aam
rcrl
sub
or
sbb
adc
xchg
sbb
aas
push
fistl
jp
out
add
hlt
xchg
int
xchg
xchg
jnp
popf
insl
insl
popf
inc
fs
xchg
aam
ret
or
jle
mov
data16
push
in
push
and
cmp
or
dec
popa
mov
insl
aaa
adc
sarl
xchg
sub
add
aad
into
jg
scas
ss
xchg
push
xchg
or
in
xchg
jmp
sti
mov
xlat
gs
rol
jp
mov
scas
cmp
dec
jno
fwait
sbbl
adc
cmpsl
dec
mov
movsb
js
shrl
ret
inc
clc
and
add
jge
sarw
mov
aaa
xchg
into
adc
scas
faddp
mov
pop
pop
cld
es
jl
or
push
bound
mov
or
add
xor
add
movsl
dec
push
add
lods
inc
pop
xchg
jno
movl
rcll
push
shl
sbb
mov
test
lds
xor
icebp
mov
jle
aad
push
push
xchg
sub
insb
bound
imul
fmull
or
jne
xor
inc
lods
push
sub
jp
mov
je
fcmovnb
inc
pop
test
lcall
mov
and
xchg
and
rcrb
mov
scas
std
and
in
dec
ret
mov
jb
jp
jmp
loopne
dec
or
xlat
xchg
pop
mov
dec
add
sbb
out
ljmp
lods
xor
aam
mov
aas
xor
dec
inc
or
insb
push
test
pop
addr16
pop
in
movsl
jbe
adc
xchg
inc
in
cmp
jno
std
push
push
pop
ret
and
loope
push
push
rcrb
bound
sub
test
xor
test
xor
or
push
lret
lahf
add
pop
mov
sub
lock
and
icebp
mov
xchg
mov
push
enter
mov
shl
dec
sti
movsl
inc
mov
ds
psubw
test
popf
push
push
sub
mov
mov
mov
iret
or
xchg
sahf
idivb
dec
inc
pushf
pop
fcmovne
push
jo
xchg
aaa
pushf
push
lea
jmp
inc
cmp
jl
jnp
sbb
jl,pn
paddsb
leave
mov
push
push
js
pop
lods
gs
or
outsb
mov
dec
jo
test
pop
inc
leave
gs
stos
mov
mov
pop
push
push
sbb
les
negb
stc
shll
test
ljmp
push
popa
data16
in
sbb
in
fwait
inc
out
pop
outsl
push
cmp
test
or
push
add
in
aam
loopne
les
push
outsl
adc
je
les
ljmp
adc
sub
aad
aad
cmp
dec
xor
mov
dec
mov
test
dec
pusha
add
ret
jnp
cmp
mov
jmp
inc
fwait
and
outsb
mov
add
add
je
sti
int
push
push
lods
hlt
mov
dec
mov
je
lcall
push
mov
pop
rol
es
fnsave
mov
test
je
cmp
inc
adcl
aam
jp
lock
lcall
sub
mov
imul
and
fildl
mov
mov
cmp
insl
ds
fbld
mov
es
scas
mov
and
adc
stos
shl
push
sub
mov
sbb
mov
js
mov
sub
int3
mov
shll
or
daa
mov
mov
dec
or
mov
sbb
ret
imul
test
ds
loope
jnp
xorb
andl
and
or
dec
mov
xor
scas
and
or
cltd
adc
cld
sbb
int3
adc
mov
out
push
mov
jp
inc
mov
fimull
push
fs
nop
aam
sbb
dec
jle
push
scas
mov
xchg
xlat
xchg
mov
pop
inc
or
jne
adc
leave
mov
pop
lcall
ja
arpl
rol
mov
xchg
sub
daa
inc
pop
sbbl
iret
mov
adc
xchg
mov
ret
adc
das
cmp
sahf
dec
gs
xor
lods
out
in
movsb
ja
repz
xchg
mov
int3
aad
test
std
mov
leave
stos
lret
xor
push
fs
cmpsb
pop
and
leave
clc
adc
lea
out
push
xchg
add
xchg
jg
lods
xor
mov
cmp
outsb
mov
jno
lock
adc
lock
inc
xchg
fmuls
sub
aad
jae
cmp
jne
push
xchg
cmp
or
xchg
mov
mov
orl
pop
or
shlb
xor
inc
dec
or
lds
xchg
jge
clc
push
in
cmpsb
push
shr
fwait
in
cmp
sbb
cmc
out
inc
mov
mov
jmp
in
aaa
fidivrl
mov
push
jno
cmpsl
in
mov
mov
test
sub
insl
xchg
loopne
mov
adc
sar
int3
add
ficomps
jl
jne
ljmp
lret
fwait
clc
or
xor
scas
mov
int
xor
and
add
inc
dec
mov
subb
test
xchg
daa
jg
leave
cmp
push
mov
jg
imul
test
aaa
dec
out
push
movsl
into
imul
call
xchg
pop
add
movsl
cmp
or
inc
and
loope
mov
pop
pusha
popf
movsl
sbb
or
cwtl
mov
lods
lods
mov
sub
test
lock
mov
fwait
xchg
xor
sub
std
insl
mov
sub
sbb
test
fs
and
pop
in
mov
sub
stos
subb
outsl
mov
test
xchg
cmp
add
hlt
jno
cltd
insl
pop
mov
sub
mov
and
mov
insl
ss
int3
sub
xlat
shll
and
jbe
adc
fsubr
nop
std
inc
or
out
test
test
mov
ss
repnz
sbb
cmp
sarl
scas
cmp
or
movsb
pop
mov
xor
icebp
in
adc
rclb
les
sti
cmp
sahf
shrl
out
xlat
movsl
pop
mov
gs
push
dec
adc
daa
rol
cmpsl
push
push
mull
shll
cmpsl
jns
in
xlat
shrl
sub
popa
ja
addr16
push
lods
xor
xor
or
inc
pop
xchg
notl
test
stc
sbb
adc
xlat
test
pop
lock
in
imul
pop
imul
cltd
or
push
cmp
xchg
xor
add
pop
cli
xlat
mov
enter
add
inc
mov
sbb
fwait
adc
cmp
mov
push
int
shl
dec
push
push
sub
enter
or
push
dec
push
mov
bsr
add
pushf
ret
iret
pop
or
and
es
lods
out
js
xor
add
rep
inc
or
mov
loopne
sbb
mov
xchg
ss
xchg
jae
loopne
out
pop
xchg
std
cmp
add
xor
test
or
jmp
adc
cli
mov
scas
push
mov
push
mov
xor
popa
xchg
cs
adc
shll
dec
pop
cmp
std
or
and
lcall
push
cmpsl
push
mov
dec
stos
dec
xor
mov
out
in
fsubrs
adc
into
cmp
repz
dec
les
or
jg
in
dec
ret
jecxz
inc
cltd
jbe
xor
lds
xchg
call
loope
push
lret
cmpsl
adc
cmc
lods
data16
sub
push
leave
cltd
aas
fisubl
rcl
cmp
push
mov
test
cltd
inc
xor
lahf
jmp
xor
pop
loopne
xchg
fistpll
cmp
scas
cmp
xor
cmp
mov
arpl
popf
mov
xor
mov
ret
mov
orl
pop
mov
pop
data16
hlt
pushf
push
das
sbb
mov
dec
lods
arpl
daa
loop
adc
pop
je
xor
mov
add
sub
cli
jb
adcb
roll
lcall
cmp
mov
mov
repnz
mov
fistps
pop
fildll
xchg
ss
icebp
dec
std
mov
dec
adc
push
mov
mov
xor
insb
lods
xor
rclb
out
jg
xchg
or
sbb
mov
div
enter
rcll
or
gs
xchg
xchg
push
pop
jp
xchg
int3
mov
fstps
adc
cltd
aas
jb
push
ja
lret
out
cmp
es
xor
std
fcmovnbe
dec
mov
stc
push
xor
stos
pop
inc
inc
divl
jbe
mov
inc
mov
push
jo
mov
jo
pop
fbstp
jno
or
mov
icebp
or
movsl
jne
mov
out
std
cwtl
aad
ja
pop
pop
out
rclb
aaa
jp
cli
in
pop
test
mov
or
lahf
ss
rorl
add
frstor
jp
mov
push
mov
mov
jecxz
adc
div
cli
mov
std
adc
pop
cmc
xchg
sahf
aas
fildl
bound
xchg
push
mov
fcoms
mov
mov
lods
testl
daa
dec
int3
pop
sbb
xchg
mov
jb
in
leave
test
inc
and
sbbb
int3
pop
lods
sbb
adc
test
out
aam
inc
ret
push
in
xor
ffree
cmc
jae
hlt
rorl
and
mov
pop
adc
idivl
inc
add
or
int3
ret
or
fbstp
ljmp
jge
adc
jmp
roll
pop
sub
in
add
jp
outsl
cltd
pop
xor
test
into
mov
inc
lcall
mov
test
testb
cltd
imul
aam
movsb
xor
xchg
push
xchg
stc
icebp
and
je
insl
pop
es
push
mov
data16
push
mov
dec
xor
push
aas
movsb
xchg
lret
fs
sbb
lret
in
sub
hlt
sti
pop
stc
and
ret
inc
movl
mov
lods
insb
pop
dec
cmpl
sub
shrb
mov
std
cmp
fld1
sub
push
shrb
mov
shrb
mov
into
adc
add
test
cmp
out
sub
fisubrs
popa
jg
xchg
pop
mov
dec
mov
stos
out
arpl
pop
mov
fs
dec
push
incl
adc
insl
std
in
or
dec
jb
rolb
add
jmp
xor
jb
sahf
push
pop
in
in
mov
sbb
call
lock
cmpsb
xchg
fistpll
sbb
lahf
xchg
cwtl
clc
notl
push
mov
mov
imul
ds
fneni(8087
adc
mov
fsqrt
pushf
test
add
andl
je
mov
ret
stos
mov
sbb
sbb
and
out
inc
dec
mov
lods
loopne
add
divb
xor
push
out
fs
popf
xchg
mov
mov
aam
add
cmc
test
rcrl
xchg
mul
test
push
inc
mov
push
pop
lods
icebp
pop
dec
and
repz
das
sti
imul
mov
decb
cltd
inc
js
ficoms
popf
mov
popa
andl
iret
andl
mov
lret
push
mov
scas
test
je
les
std
pop
out
std
mov
mov
sub
fadds
push
mov
jbe
rcr
jb
fidivrl
pop
call
cmp
cmp
enter
lods
mov
rolb
pop
pushf
movsb
dec
jo
jmp
rclb
mov
cmpsl
jns
cmpsb
imul
push
ret
leave
jno
mov
inc
push
dec
rcll
xlat
sub
call
cmp
cwtl
sbb
jnp
jmp
dec
std
mov
iret
xchg
xchg
fldl
xorb
xchg
sub
nop
sub
xor
outsl
les
xchg
pusha
out
lods
into
mov
loope
or
ret
jbe
dec
xchg
pop
js
or
pop
aaa
mov
ret
ret
jbe
testb
inc
or
fcmovnb
in
out
adc
sbb
js
mov
dec
sbb
int
mov
and
jg
pop
cmp
dec
icebp
push
orl
je
xchg
fisubrl
fs
fs
mov
je
or
push
pusha
filds
movsb
test
dec
ret
sti
jge
jno
jb
xchg
clc
dec
mov
int3
adc
arpl
cmpsb
xlat
sahf
outsl
push
enter
jg
cmp
mov
inc
xor
adc
or
sub
cmpsl
popf
dec
imul
dec
push
fucomip
jecxz
mov
and
cmpsl
inc
pop
aas
jb
test
popf
rcr
add
subl
push
xchg
jno
fs
loop
push
xchg
adc
sub
rorb
pop
fimuls
cltd
xor
jl
xchg
rorl
aad
stos
in
add
dec
loop
lret
das
and
xor
pop
jp
divb
addr16
mov
cmp
adc
push
adc
daa
and
sub
jecxz
fiadds
push
aad
fsubrs
outsl
add
inc
out
and
insl
ret
and
mov
dec
nop
push
sub
jp
sbb
std
stos
push
pop
lret
mov
mov
call
xchg
xchg
push
lods
and
or
push
out
mov
cmpsl
xchg
gs
cltd
repnz
out
dec
out
lret
insl
das
cs
and
jmp
sti
rorl
pop
fwait
sub
scas
cmp
pop
idivl
mov
iret
movsb
ret
out
push
test
inc
es
in
scas
lret
shrb
bound
cmpsl
lds
lods
inc
xchg
pop
daa
ret
pop
cmp
lea
movb
dec
loope
pop
jae
cmp
or
add
cltd
dec
adc
push
push
popf
ret
outsb
pop
loopne,pn
cmpsb
and
add
iret
dec
jp
test
pop
sbb
dec
into
cmp
inc
rorl
loope
jmp
ffree
cld
es
int3
incb
adc
and
in
lock
orb
fcmovb
cmp
add
sbb
leave
mov
jnp
xor
sub
out
rcll
sub
stos
push
xor
add
mov
xchg
inc
dec
mov
mov
sub
gs
ljmp
test
cmp
aam
add
fisttps
into
xor
lock
push
sub
enter
mov
pop
out
int
cmp
mov
mov
pop
adc
xchg
lds
lods
sub
sub
arpl
cs
mov
inc
loop
scas
je
pop
sbb
jmp
add
jnp
hlt
xchg
sbb
inc
es
xchg
mov
enter
pop
aas
mov
ret
int
push
sbb
in
xchg
ss
mov
dec
jo
shll
leave
jb
icebp
std
cbtw
adc
dec
insl
sub
mov
fsubr
int3
jno
push
aam
mov
add
iret
cmpsl
mov
imul
cwtl
push
pop
loope
into
xchg
mov
iret
pop
ret
repz
add
out
inc
xor
mov
pop
cwtl
insb
xchg
sbb
fwait
push
mov
insl
pop
in
jmp
add
in
adcb
int3
and
jo
cmpsb
cli
ret
fwait
notb
push
cld
dec
into
pop
jg
out
pusha
mov
sub
lods
dec
mov
negb
popf
popa
jno
insl
out
add
fildll
xor
add
add
pop
test
inc
nop
push
repnz
sbb
sarb
or
dec
jg
leave
cmp
ret
xor
xor
std
mov
movsb
idivb
xor
rcl
mov
cmp
mov
mov
jl
enter
and
popf
fs
incl
movsb
inc
subl
insb
cwtl
bound
xorb
cmp
sbb
mov
es
push
fsub
push
mov
out
fstpl
mov
pop
es
inc
nop
pop
mov
inc
orl
popf
popa
pusha
arpl
or
pop
and
fdivs
test
dec
gs
cmpsb
sbb
xor
sbb
pop
adc
pushf
loopne
dec
imul
mov
popf
xor
inc
mov
pop
xchg
cmp
mov
mov
fwait
jne
lods
popa
loope
jns
loope
adc
imul
mov
std
or
xchg
xchg
mov
xor
sub
mov
add
sub
mov
adc
inc
cwtl
push
aam
movsb
sbb
add
pusha
push
pop
jno
dec
ret
and
pop
jle
jns
jl
jecxz
mov
lret
cmp
cmc
shl
push
jne
mov
adc
push
mov
lret
jbe
pop
inc
lahf
adc
sahf
ret
sbb
shlb
mov
xchg
sarl
mov
adc
mov
cmp
cmp
lahf
hlt
in
push
mov
testl
sub
enter
dec
pop
or
sbb
push
lret
loope
cmp
xchg
popl
outsl
cld
sbb
fisubrs
or
inc
or
scas
pop
xor
aam
push
xchg
xchg
and
mov
and
repz
cmpb
jns
cs
add
cmp
sbbl
aas
aam
xchg
fstpl
cmp
ljmp
cmc
cmp
addr16
outsb
cld
pushf
jo
cs
cmpps
out
into
xor
stos
pop
lock
imul
or
sub
push
xchg
fidivs
fisttpll
mov
cmpsl
and
aaa
mov
mov
std
cmp
push
xchg
shlb
aam
gs
jo
sbb
cmpsb
push
insb
mov
mov
cmp
and
pop
lahf
cmp
xor
das
jmp
jns
imul
bound
aad
adc
and
mov
dec
xchg
push
mov
dec
inc
mov
mov
pop
adc
pop
out
bound
int
fisttpl
xor
pop
cmp
enter
or
adc
push
cmpsb
mov
mov
iret
mov
mov
mov
fcompl
dec
xlat
xchg
adc
add
push
popa
dec
or
mov
repz
or
pop
jg
or
xlat
into
out
pop
inc
mov
mov
fidivrl
dec
xor
cmc
xchg
mov
je
xchg
xor
das
xlat
push
pop
xor
testl
adc
lods
jnp
test
dec
push
lds
jmp
int3
mov
jmp
push
and
or
pop
mov
in
fwait
mov
fidivrl
and
fstpl
sbb
rcll
xor
inc
nop
test
xchg
xor
mov
test
scas
sbb
insb
les
ds
add
sub
mov
in
clc
loope
sub
iret
push
das
inc
aaa
stc
outsl
sti
mov
int3
pushf
inc
push
inc
leave
inc
sti
xchg
cmc
in
sbb
orb
rcrl
sub
jno
mov
sub
mov
imul
push
mov
inc
aam
call
gs
push
mov
dec
ror
push
dec
push
iret
add
xchg
mov
push
sbb
lods
dec
dec
pop
jg
fwait
std
mov
sub
adc
and
inc
icebp
mov
mov
xor
xchg
mov
push
mov
pusha
jle
dec
xor
sbb
call
repnz
ja
mov
js
cli
jecxz
cmp
lods
jns
mov
or
sti
clc
sub
mov
scas
lock
xor
adc
dec
adc
inc
rcrl
les
mov
inc
mov
mov
repnz
adc
clc
cmc
mov
and
loop
arpl
pop
fucomp
push
adc
jo
mov
in
lcall
inc
xor
rorb
pop
stos
pop
sbb
fcomps
xor
sbb
mov
aad
jmp
iret
cmp
cli
fcomip
mov
cs
push
jmp
cs
pop
imul
aad
js
pop
push
cmp
fisubrl
mov
adc
data16
leave
sbb
shl
jp
out
test
mov
sub
nop
lcall
dec
into
nop
xor
outsl
push
adc
lods
sub
mov
jmp
cltd
jbe
stos
sbb
lods
lret
pop
fwait
inc
sub
clc
stos
mov
push
mov
inc
pop
sub
enter
lcall
sub
orb
outsl
xor
mov
mov
mov
mov
ss
xchg
sbbb
or
sarb
into
aam
test
jmp
push
lods
repnz
insl
push
dec
push
or
sub
cwtl
xor
and
lahf
rcrl
and
insl
jns
scas
jge
sub
xchg
in
mov
ljmp
ljmp
add
jmp
and
jecxz
push
arpl
xchg
cvtps2pi
test
mov
mov
jge
sbb
pop
ret
aam
mov
pop
pop
cmc
inc
cmp
ljmp
dec
inc
xor
fisttpl
add
mov
imul
and
in
loopne
shll
mov
jmp
repz
and
jp
xchg
test
loop
stos
lahf
call
push
sbbl
popf
sub
and
notb
pop
cli
incl
pusha
or
imul
push
loop
sub
in
push
mov
imul
movsl
cmp
divl
pushf
js
sbb
cmp
lods
push
rolb
nop
push
or
rcll
jge
mov
sbb
cmp
mov
scas
scas
push
rol
out
hlt
mov
fldl
mov
rolb
push
add
add
pop
cmc
cmpsl
push
pop
arpl
ja
cmc
pop
xchg
shlb
jnp
add
icebp
lret
test
jp
dec
in
aam
int
pop
push
cmpsb
mov
cmp
test
push
roll
in
scas
sub
pop
cmp
mov
jecxz
xchg
test
xchg
push
test
int3
dec
dec
add
imul
adc
cmp
pop
mov
addb
aaa
add
add
mov
lods
xchg
mov
mov
push
lahf
pop
push
push
outsb
xor
call
xor
fldenv
xor
out
outsb
pop
cwtl
and
outsl
xlat
aaa
stos
out
push
clc
shrl
mov
dec
lea
addr16
lock
arpl
call
push
rorl
and
out
jo
pop
hlt
or
bound
dec
es
mov
and
cli
aad
mov
add
outsl
out
xchg
mov
mov
arpl
jecxz,pn
int
push
fdivrl
insb
imul
push
insb
test
test
outsb
lret
or
mov
add
mov
mov
mov
cli
and
icebp
mov
and
add
in
mov
cs
mov
notl
push
loope
sbb
inc
into
clc
xchg
int
and
sahf
xlat
pop
jecxz
dec
clc
pushf
aad
aas
loope
test
and
mov
xor
mov
lahf
or
sub
mov
cmovae
mov
xchg
repz
push
negl
push
jne
add
mov
lret
cmp
push
imul
xor
bound
sub
cmp
fbld
cmp
lcall
lcall
fwait
clc
sbb
mov
push
cli
inc
andb
mov
loop
ret
into
add
cmp
test
or
push
xor
das
xor
xor
or
cmp
sbb
dec
sbb
das
lods
sbb
jmp
xor
pop
xchg
xchg
push
jge
cmp
adc
cmp
xor
aaa
pusha
loopne
sbb
enter
bound
fmull
shl
add
out
scas
sbb
adc
mov
fsub
cltd
add
jo
xor
adc
mov
cmp
mov
sub
cmp
test
xchg
or
repnz
jno
nop
subb
cvtps2pd
cs
inc
ljmp
sbb
push
push
cwtl
add
cmpsb
daa
cmp
inc
mov
fcmovb
cmp
int
nop
mov
leave
out
pop
ljmp
jecxz
movsb
push
push
fnsave
enter
lret
ja
sti
pop
push
adc
xchg
sub
jge
jno
xchg
popf
out
pop
adc
clc
jns
xlat
lret
dec
mov
fcompl
loope
loope,pt
jge
push
outsb
jo
push
ret
lds
insl
pop
out
clc
jmp
call
fldt
lahf
mov
mov
ja
lock
test
gs
jne
adc
mov
fldt
add
std
out
aaa
or
sub
pop
jp
jle
int
inc
mov
addr16
inc
jb
clc
loope
mov
sahf
or
mov
jbe
je
out
xchg
cmpsl
int
loope
and
lahf
call
sbb
jp
add
cmp
or
and
rclb
in
lea
cmpsl
clc
jae
and
out
lret
ss
or
mov
call
jbe
int3
jb
aad
repnz
mov
scas
xchg
mov
xchg
lods
daa
aad
fchs
mov
mov
mov
mov
nop
mov
dec
or
cmpsl
xchg
rorl
jno
aam
pushf
mov
enter
xor
cwtl
push
and
push
add
frstor
icebp
add
negb
dec
pop
inc
xchg
std
outsb
ja
roll
std
xchg
das
decl
fiaddl
xor
ss
xlat
mov
aam
test
push
in
addl
mov
push
xchg
mov
popf
dec
scas
add
or
xchg
loop
sub
test
push
push
pop
sub
xchg
lds
inc
xor
bound
scas
shr
xor
adc
or
or
pushf
test
idiv
cmpsb
mov
and
sub
ret
mov
inc
cmp
sub
mov
mov
push
push
repnz
jns
insl
pop
icebp
jnp
pop
sbb
lcall
sub
mov
pop
fs
sahf
les
inc
jecxz
xor
imul
jnp
cli
or
mov
adc
jns
pop
push
out
xchg
ss
hlt
stc
pop
das
jl
rclb
push
aas
ja
mov
popa
add
mov
mov
scas
jb
cld
mov
xchg
nop
jg
ficomps
dec
popa
mov
dec
push
fcomp
subb
dec
push
pop
out
mov
orl
cmp
and
and
pop
shlb
push
pop
outsl
push
movsl
mov
inc
mov
sbb
stos
and
ss
frstor
cmc
es
adc
xor
xor
sar
dec
xorl
sbb
out
mov
js
inc
cli
cmc
rorb
adcb
add
cmpsl
jo
dec
nop
sbb
mov
ja
push
fisttpl
cwtl
mov
xchg
mov
xchg
inc
cmp
cmc
inc
sahf
sarb
out
mov
nop
repnz
push
pop
cmp
sarl
lds
cmpsl
and
jmp
inc
pop
cmpsl
lahf
mov
xchg
push
daa
sbb
in
insl
mov
call
cmpb
test
push
mov
or
ss
pop
scas
mov
sbb
popf
mov
ja
push
mov
push
scas
fwait
adc
ret
add
movsb
andl
xor
cmp
and
std
rclb
adc
pop
and
mov
dec
cwtl
stc
xchg
sub
sbb
jge
ret
sub
and
ljmp
in
or
mov
inc
or
lods
pop
add
jo
xor
add
call
adc
add
sub
scas
mov
mov
sub
mov
inc
pop
xchg
fnsave
mov
ljmp
clc
adc
xor
sub
ss
ljmp
divl
nop
rcrl
pop
jbe
insl
daa
loopne
and
aaa
lret
mov
push
sbb
fdivl
aam
cltd
xchg
sub
push
adc
lods
mov
stos
xchg
mov
xchg
mov
incb
je
idivl
sbb
and
dec
jecxz
or
pop
xchg
cmp
movsb
in
outsb
test
ret
out
xor
aas
push
iret
lds
mov
inc
mov
iret
ret
add
insl
pop
sahf
loopne
enter
dec
fldcw
insb
add
mov
out
mov
or
ds
lea
sbb
pop
add
data16
mov
adc
push
mov
jg
mov
jne
or
jb
sbb
pop
push
fsub
in
shlb
push
sahf
add
test
decb
movsl
cs
jecxz
mov
dec
mov
mov
popa
aam
js
mull
xor
lret
sbb
lock
in
mov
push
in
cmpsl
dec
ret
lea
xor
sub
aad
cmc
repnz
adc
insb
aad
gs
js
in
push
cmp
sar
mov
xlat
adc
or
push
mov
call
frstor
adcb
push
lds
mov
in
mov
pop
inc
jb
imul
push
int
jb
mov
sub
dec
in
xchg
in
push
sbb
push
pusha
fwait
icebp
xor
jp
xchg
nop
stc
mov
adc
test
dec
jg
icebp
xor
fsubl
in
adc
ret
out
bound
cmpsl
mov
mov
fsubrl
insl
popa
xchg
ss
aad
mov
xchg
aad
pop
pop
dec
shll
daa
xor
xor
cmpsb
mov
shll
orl
lcall
adc
loope
mov
push
neg
xor
das
push
inc
jg
xor
test
mov
xor
xor
shll
int
push
mov
adc
mov
cwtl
dec
int3
and
mov
pop
push
call
mov
aaa
enter
imul
xchg
cmpsl
or
cmpsb
or
int
push
mov
test
add
cli
inc
xchg
stc
sbbb
pop
fsubrs
mov
sub
fsin
cmp
lods
ja
adc
pop
push
push
mov
adc
push
xor
imulb
shll
and
push
mov
add
push
jl
xor
xor
int3
ds
insb
xor
out
jp
neg
into
push
insb
rcrl
fnstcw
sub
into
sbb
mov
xchg
add
xor
mov
inc
cmp
jmp
xchg
jo
push
je
rcrb
and
ret
and
mov
rol
cmp
mov
push
sti
sub
and
aam
ficomps
mov
push
mov
jae,pt
xchg
mov
cmpl
lahf
std
and
mov
sbb
xor
outsb
adc
pop
rorb
repnz
ds
push
mov
pop
xchg
fisttps
stos
jno
sbb
mov
dec
fwait
add
enter
je
inc
lods
movsl
jno
mull
cli
sbb
jae
mov
mov
sar
xchg
mov
adc
ljmp
pop
mov
lock
das
ljmp
in
ljmp
mov
movsl
movsb
filds
pop
mov
mov
call
test
pop
adc
adc
jo
adc
cwtl
cmp
xchg
and
and
push
inc
popf
aas
push
mov
jmp
mov
mov
mov
jg
or
cmp
nop
inc
xchg
mov
stc
ljmp
adc
mov
into
inc
aaa
loop,pn
test
rcll
jnp
or
aas
push
enter
push
mov
mov
dec
inc
fsubl
lret
pop
jb
sbb
into
cmp
in
je
xchg
arpl
xor
dec
adc
lods
mov
lds
pop
xchg
mov
pop
lret
shrl
inc
fistpl
pop
sbb
mov
mov
int3
fildll
xlat
mov
adc
sbb
mov
pop
cmpsb
rol
mov
insb
lret
mov
pop
lcall
in
divb
xlat
mov
mov
out
lods
and
add
add
jge,pt
test
mov
sbb
stos
mov
mov
jle
std
push
mov
cwtl
dec
fisttpl
sbb
xchg
rcrl
sahf
cmp
push
in
test
xchg
jae
lea
jo
testl
adc
iret
icebp
das
and
pushf
int3
cmc
sbb
inc
fisubs
rcrl
or
inc
xor
add
jbe
mov
push
adc
dec
xchg
pop
sbbb
lods
scas
and
bnd
xchg
ljmp
push
test
into
adc
ficoml
cmpsb
cmp
cld
add
arpl
testl
push
mov
inc
movsl
mov
or
push
mov
xor
je
sbb
lret
jge
cmpsb
dec
cmpsl
jo
sbb
and
fsubs
xchg
xchg
push
dec
cmp
jecxz
jns
gs
adc
xchg
jno
mov
mov
push
sbbb
das
dec
fisttps
adc
inc
ficoms
lret
cmpsb
xchg
into
push
into
sbb
gs
pop
pusha
sbb
aad
lea
mov
cmp
xor
mov
lods
clc
mov
rorl
sub
cmpsl
mov
cwtl
inc
dec
pop
mov
scas
xor
movsb
pop
jne
sti
mov
pop
outsl
xchg
ret
sti
rolb
adc
outsl
repz
jbe
pusha
dec
jmp
imul
mov
scas
stos
dec
mov
mov
and
rcrl
mov
push
js
jg
jle
fidivs
cmp
adc
stos
cmp
scas
mov
scas
and
sbb
mov
in
jl
cli
outsb
jbe
xor
loopne
leave
dec
mov
jmp
incb
stos
cld
movsb
stos
add
cmpsl
fdiv
mov
stos
push
cmp
mov
iret
mov
popf
xlat
dec
out
mov
push
dec
clc
ret
xlat
insb
dec
mov
fninit
push
inc
sahf
mov
sti
shlb
insb
imul
xor
jl
mull
sti
nop
xchg
sbb
lods
dec
ffreep
out
clc
sti
inc
aas
mov
loop
mov
sahf
sub
and
push
mov
mov
and
xchg
scas
je
test
mov
ret
fcoml
scas
inc
int3
pop
jnp
push
movsb
int
rcll
adc
mov
int3
shll
jb
test
dec
iret
outsl
sbb
filds
push
mov
xchg
mov
iret
outsl
nop
adc
xchg
pusha
pcmpeqw
adc
lds
ss
and
push
fidivrs
jmp
fmull
jecxz
mov
fs
nop
mov
pushf
or
xlat
inc
mov
jp
jno
fisubs
js
lods
incb
sahf
mov
and
imul
push
cmp
push
ret
daa
int
push
xor
scas
or
js
mov
fdivl
cmp
subl
jmp
mov
adc
gs
loope
push
cmp
outsl
jle
pop
pop
mov
stos
fsubs
and
fadds
pop
fs
and
jb
dec
and
movsl
mov
sub
inc
je
das
stos
adc
shlb
aaa
in
mov
or
mov
push
andb
jo
dec
daa
test
cwtl
imul
add
xchg
adc
gs
adc
aas
fimuls
and
fistps
push
push
push
fistl
pop
fwait
jne
movsl
fldcw
add
pop
pslld
or
pop
test
bound
mov
cmp
dec
das
out
pop
add
daa
cmp
inc
xchg
mov
jle
in
imul
push
jb
mov
mov
inc
cmp
push
cmpsb
mov
sub
jle
or
cmp
jl
adcl
fadd
cmpsb
cs
jecxz
and
jg
out
add
aam
push
ljmp
cs
pop
insb
outsl
popa
xchg
or
loope
sti
bts
jl
jp
stos
leave
fcmovnb
push
test
shlb
leave
mov
and
clc
rorb
cmp
and
aas
xor
lock
sub
sbb
mov
add
pop
andl
scas
popa
nop
push
cwtl
mov
in
xorl
dec
ss
mov
sbb
iret
fcmovnb
insb
mov
xchg
lods
pop
xor
and
mov
and
pop
test
add
lcall
push
int
shrb
clc
or
sub
add
cmp
mov
andb
lods
or
inc
es
lods
ja
hlt
rcrl
mov
push
jne
cmc
scas
sarb
mov
mov
insb
and
mov
fcomps
int
sub
jmp
dec
jno
xchg
dec
pop
pop
xor
dec
xor
jno
sbb
push
int3
lahf
mov
in
call
sbb
shlb
nop
jns
pop
lret
adc
insl
loope
pop
add
sbb
cli
cmpsb
xor
imul
in
sub
push
sbb
xor
leave
xchg
dec
pop
pop
rclb
mov
ljmp
fs
jl
mov
add
pop
out
push
mov
mov
push
cltd
mov
imul
outsl
into
das
bound
pop
shrb
mov
movsl
fistpl
idivl
sbb
loop
sub
xchg
jl
icebp
mov
shrl
aaa
add
lds
push
inc
or
push
sub
imulb
aad
call
addr16
mov
aad
sbb
push
lea
add
xchg
xchg
cmp
shrb
dec
pop
inc
dec
ret
mov
push
lret
cwtl
sbb
push
push
das
mov
mov
dec
or
push
icebp
inc
dec
pop
sbb
inc
rcl
pusha
dec
notb
jae
mov
les
es
cmpsl
repnz
les
lock
mov
add
ljmp
data16
cmp
imul
pop
out
mov
inc
xchg
fbstp
mov
popf
pop
jmp
cwtl
cs
xor
lds
test
or
xchg
adc
mov
cmp
push
rorl
pop
clc
jo
jge
push
in
mov
mov
fdivrs
lock
add
dec
pop
push
outsl
inc
pop
mov
iret
push
dec
nop
add
retw
xor
daa
loope
test
sbb
ds
push
xlat
ljmp
data16
aad
shl
add
mov
sub
mov
mov
cli
xor
ret
add
lods
fs
repz
xor
jnp
adc
pop
xchg
sbb
outsb
and
hlt
mov
test
or
adc
xchg
shr
adc
clc
xchg
or
rcrb
push
lods
in
arpl
push
mov
push
push
pop
int
mov
cmc
popa
lods
mov
lods
xchg
hlt
insl
addb
xor
out
ja
nop
push
mov
cmpsb
es
incl
jle
outsl
daa
or
jle
fsubrs
pop
lods
repnz
ret
cltd
adc
mov
lcall
mov
jns,pn
jo
pop
xor
ret
sub
jmp
mov
mov
scas
jmp
jp
mov
shl
dec
lods
leave
popa
xchg
es
xor
jbe
xchg
sbb
push
jg
adc
jns
stos
dec
lcall
mov
dec
addr16
cld
ret
inc
int3
inc
test
push
test
pop
and
lcall
das
push
adc
pop
jmp
dec
std
mov
jmp
xor
inc
pop
mov
xor
mov
or
movsl
lods
lods
std
dec
gs
out
add
push
call
jle
shll
push
and
int3
jecxz
test
jb
mov
addl
nop
mov
addr16
pushf
mov
aad
xchg
call
rorb
inc
pop
sahf
or
adc
cmp
sbb
sub
fsubrs
jecxz
into
mov
ds
push
push
dec
jp
pop
movsl
movsb
dec
xor
call
cwtl
sbb
addr16
xchg
mov
jp
lea
dec
shl
push
and
out
dec
cmp
aaa
or
std
mov
in
fsts
nop
test
mov
sbb
mov
cltd
dec
adc
push
outsb
cmc
sahf
push
adc
sub
inc
fnstcw
rcr
xchg
fnstcw
xchg
int3
dec
xor
cmc
ds
sti
iret
xor
mov
sbb
pop
js
and
jle
push
cmpsl
dec
inc
loope
jecxz
cmpsl
imul
inc
pop
js
fucomp
cmp
push
pushf
ror
xchg
cld
add
outsl
insl
movsl
test
mov
and
xor
mov
sahf
jmp
xorl
mov
fdivr
push
dec
inc
fiaddl
and
sbb
adc
jns
inc
aaa
push
push
cld
scas
scas
ljmp
mov
xchg
mov
jbe
push
imul
sbb
stc
sbb
ja
cmc
into
and
in
shr
xchg
gs
jmp
xlat
mov
pop
adc
je
insl
push
add
or
lcall
outsb
ja
mov
sti
mov
push
inc
jo
in
cld
pop
fsubrp
fisubl
push
fs
lock
fstps
loope
lods
jge
movsb
push
inc
push
jp
sub
jp
lods
cmp
add
push
aaa
popf
mov
and
popf
test
daa
cmp
in
jmp
stc
ret
fidivs
jmp
das
inc
sbb
pop
loop
outsb
push
xchg
decl
fdivr
mov
rolb
inc
bound
cltd
jb
divl
mov
cmpsl
loopne
testb
cmpsl
adc
mov
mov
or
pop
addr16
int3
lods
test
xor
das
into
ds
cmp
sbb
in
xor
mov
mov
ret
sub
pop
scas
sbb
mov
movsl
mov
cmp
sbb
pop
into
mov
sub
xchg
jo
push
sbb
inc
pop
icebp
sbb
cmp
pop
cmp
jae
adc
pop
cmp
test
fadd
xchg
sahf
xor
adc
sub
pusha
pop
push
push
nop
inc
movsl
adc
adc
cmp
mov
or
push
jmp
ret
lods
cs
mov
cmpl
pushf
xor
sarl
add
mov
nop
roll
inc
lahf
jae
cmp
filds
daa
fldenv
push
shr
pop
nop
out
enter
xor
outsb
inc
into
xor
fldcw
pop
inc
lret
in
out
mov
inc
arpl
dec
gs
pop
and
adc
add
mov
add
mov
mov
sbb
pop
lret
popf
jno
pusha
vpaddb
mov
add
enter
jmp
and
xor
mov
pop
sub
ret
dec
pusha
sub
bound
fsubl
mov
xchg
loop
sub
cmp
adc
sti
jecxz
dec
lods
push
push
aad
cmpsb
test
cmp
ja
aaa
add
xchg
jmp
sub
test
push
adc
dec
ljmp
mov
adc
jle
scas
out
pop
shlb
imul
jp
dec
inc
pop
fucomi
rorb
aas
jle
sar
jl
mov
or
imul
aas
pop
sub
xchg
sub
loop
sub
add
test
add
shll
icebp
and
lret
push
mov
jmp
xchg
fsub
mov
gs
push
stos
das
cmp
sar
pop
or
mov
bound
cmp
mov
jle
mov
xor
sbb
lret
repnz
and
jp
cltd
mov
sbb
dec
xor
inc
sub
sar
sbb
out
fnstsw
lret
adc
addr16
mov
int3
pop
jecxz
cmc
outsl
test
sbb
in
sbb
sub
pop
shll
repnz
in
xorl
hlt
inc
xor
inc
cld
cld
js
mov
sahf
pop
into
pop
es
xchg
aas
push
mov
lock
dec
in
mov
mov
adc
adc
push
push
loopne
mov
mov
and
shrb
xor
push
inc
shlb
cmc
pop
lcall
nop
cmp
mov
sti
daa
shlb
pusha
jno
push
dec
mov
in
add
jb
arpl
inc
lret
push
mov
sbb
loop
push
sahf
and
fwait
pop
pop
sbb
test
adcl
imul
add
inc
test
mov
jp
adc
mov
sbbb
cmp
loop
shrb
cmp
xchg
and
ret
sub
add
mov
ret
lret
es
scas
jecxz
and
pop
jne
push
test
mov
mov
jo
xchg
cmp
add
cmc
pop
pop
jle
sub
cltd
imul
adc
push
mov
mov
rol
pop
test
and
mov
jo
pop
adc
inc
shlb
mov
rolb
xchg
sub
rolb
gs
into
cmp
sub
xchg
rolb
jb
es
das
std
jae
shll
jo
and
push
insb
loope
rcrl
adc
ret
mov
inc
mov
pop
jl
sarl
mov
fwait
in
out
push
loop
xor
sbb
push
cli
inc
std
fmul
lods
aas
jbe
into
in
mov
jae
int
xor
movsb
pop
pop
lock
inc
fwait
inc
adc
push
mov
mov
sub
stc
ficomps
push
shrl
jg
xor
loopne
mov
push
cld
imul
or
pop
test
shrb
fxch
js
and
and
cmp
iret
and
fadds
daa
in
pop
cmp
cli
cwtl
rolb
andl
push
xlat
jle
loopne
pop
scas
xchg
das
fists
rcll
mov
daa
or
dec
jb
cmpsl
sub
loop
pop
cmp
les
inc
cmc
sbb
aam
xchg
ret
popa
cmpsb
adc
inc
xor
das
mov
fnsave
mov
out
push
mov
dec
lret
jno
or
icebp
test
lock
sub
lods
dec
lea
outsb
xchg
mov
ljmp
and
iret
mov
sarb
repnz
mov
ret
push
inc
and
iret
push
inc
mov
ss
test
aas
dec
xchg
add
jnp
add
sub
pusha
daa
mov
pop
in
push
lret
pop
sbb
test
sbb
push
jns
mov
es
sub
dec
mov
sbb
dec
imul
jg
dec
dec
out
push
cmp
mov
and
mov
inc
in
pop
je
mov
lret
dec
lock
cmp
mov
push
push
out
inc
icebp
sti
xor
inc
lcall
pop
mov
adc
pop
mov
jo
mov
nop
sub
imul
prefetchw
fidivs
ljmp
or
mov
sbb
push
ja
scas
stos
lods
cmp
inc
add
jmp
jae
clc
sbb
outsl
in
lock
pop
sub
cmp
xchg
sbb
adc
lea
je
ds
scas
sbb
push
dec
lret
repz
push
fwait
mov
out
mov
insl
je
mov
cmp
jbe
jns
push
pop
sub
ss
xor
jb
jge
cmp
aam
fcoml
sti
test
int3
ror
out
cli
adc
movl
lahf
movsl
cs
sbb
enter
dec
push
fsubrl
hlt
pop
and
jge
mov
inc
inc
jmp
enter
push
loopne
mov
adc
repz
loop
lea
adc
fnsave
stos
mov
sbb
fcomps
mov
arpl
cmc
outsb
imul
ljmp
jnp
sbb
push
and
lock
mov
push
or
push
leave
clc
mov
adc
or
sub
or
add
cltd
push
jo
lods
scas
cmp
add
ss
jne
repz
mov
aaa
sti
idivb
add
orl
mov
les
sbb
js
in
cli
stos
out
add
test
in
cmp
or
dec
pop
int3
cmc
lods
lea
lret
jns
adc
cmp
fwait
aam
mov
aad
addr16
push
hlt
cmp
dec
push
cld
sub
jecxz
popf
dec
rol
xor
shl
dec
inc
sbb
fistl
adc
mov
mov
loop
sahf
imul
call
loope
faddl
push
cli
cmc
and
test
fcoml
pusha
mov
inc
xor
jne
cld
loope
rorb
lods
ret
out
mov
adc
inc
sbb
jp
mov
in
mov
xor
sub
cmp
pop
les
pop
pop
push
inc
int
or
mov
icebp
cmpb
adc
mov
pop
ljmp
das
ds
test
xor
call
cwtl
das
dec
xchg
xchg
push
not
mov
int3
adc
ja
jne
jo,pn
push
sti
popa
lea
mov
movsl
pop
jnp
cmc
scas
push
jns
jns
sbb
lods
daa
mov
lea
mov
jmp
jmp
loopne
cmpsb
xor
stc
cmp
cmpsl
cmp
xchg
stos
jg
lock
and
cs
test
mov
sub
or
sbb
int3
fwait
mov
add
lea
push
js
popf
scas
add
xor
jae
or
sub
cmp
js
xor
outsl
mov
sbb
movsl
pop
push
fdivs
jb
inc
out
pop
mov
int
mov
hlt
movsl
sbb
insb
outsl
test
iret
loope
sbb
inc
push
imul
dec
imul
and
scas
push
scas
addr16
std
das
mov
sub
lret
or
inc
sbb
out
mov
or
xor
inc
xchg
mov
sub
adc
jnp
mov
out
xchg
jge
insb
imul
cltd
sbb
imulb
imul
mov
ja
cld
arpl
out
jge
into
cmpsb
push
lret
and
xlat
lcall
xor
pop
push
cld
nop
mov
mov
dec
and
shrl
dec
rolb
and
insl
inc
mov
mov
pop
sbb
mov
mov
mov
negb
pop
aad
ljmp
adc
xchg
push
inc
aam
lahf
je
jle
or
call
xor
sub
cs
adc
pop
rcrb
sti
test
jnp
iret
insl
outsl
popf
es
or
push
mov
sub
pop
pusha
in
je
dec
ret
bound
adc
cwtl
into
add
arpl
or
and
mov
jge
enter
iret
pop
dec
xchg
add
pop
clc
mov
push
mov
push
orl
xchg
addr16
mov
mov
mov
js
and
push
xorl
clc
xchg
repz
clc
lahf
jns
pusha
pop
movsl
sub
out
popf
sti
out
inc
pop
jb
dec
mov
repz
sub
fdivrs
cltd
push
adc
adc
push
stc
lahf
icebp
cmp
cwtl
sub
cld
bound
or
popa
dec
pop
insl
in
xchg
popa
repz
aam
loop
decl
mov
mov
push
dec
jnp
hlt
lds
rcll
lock
subl
fisttpll
ds
ljmp
cmp
or
mov
ss
mov
cli
xchg
push
imul
inc
je
dec
sarb
inc
dec
inc
adc
xchg
lcall
filds
mov
mov
adc
cs
adc
addr16
dec
jns
clc
mov
lret
setle
cmpsb
xor
shrl
outsl
dec
cs
push
adc
rcll
jp
testl
test
in
adc
arpl
leave
jo
je
and
jl
fs
sahf
lahf
push
imul
leave
jae
repnz
mov
add
inc
in
insl
popa
roll
stc
aaa
sub
cmp
lea
adc
lods
ret
callw
stos
mov
jle
fdivrl
rcrb
push
sbb
push
fisubrl
dec
pop
fdivs
sti
inc
xor
push
jl
dec
fdivrp
shll
xor
and
ja
push
cmp
mov
mov
xchg
je
mov
mov
adc
sbb
push
ja
mull
js
sbb
bound
jge
mov
pop
fmulp
mov
adc
int
xchg
dec
push
lds
gs
addr16
jae
dec
pushf
sub
mov
xchg
lcall
int
daa
fdivrl
or
xchg
adc
cs
push
insb
in
mov
insb
mov
sbb
mov
hlt
cmpsl
push
in
mov
in
mov
mov
leave
loop
add
mov
push
add
imul
mov
add
jmp
imul
mov
aad
pop
int
mov
jne
inc
inc
imul
nop
mov
xchg
movsl
push
inc
inc
cmpsb
cld
mov
int3
add
mov
aaa
icebp
and
sub
xchg
and
mov
push
in
aad
jo
xchg
sub
xchg
repnz
sbb
clc
xorb
xchg
in
adc
xor
test
sbbb
add
stos
lcall
enter
and
pop
fisubl
pop
push
shlb
icebp
fwait
repnz
cmp
cmp
sub
pop
fs
dec
jne
cmp
or
push
out
ja
pop
pusha
jns
call
gs
ljmp
lcall
jp
inc
cmp
add
cmpb
dec
inc
sub
inc
sbbl
sub
std
mov
leave
je
pop
ffreep
cld
fs
out
sbb
lods
mov
rorl
sub
decb
jle
jecxz
and
sbb
pop
push
sahf
filds
sbb
jmp
mov
xchg
jbe
xor
pop
xchg
mov
mov
pop
pop
lods
sub
lods
jecxz
inc
dec
jne
and
adc
pop
sti
jns
push
fwait
add
mov
pushf
repnz
mov
mov
lret
sub
mov
les
dec
popa
pop
test
adc
fists
xchg
iret
add
int
ds
sbb
movsl
aam
arpl
mov
aas
ljmp
push
jns
movb
sbb
pop
xor
stos
cld
sbb
unpckhps
add
sub
mov
xor
incl
int3
stos
mov
sub
ret
mov
ss
imul
sbb
mov
lcall
insl
pop
xor
mov
sub
dec
xchg
nop
sub
mov
fdivr
sahf
jnp
and
cmc
push
insl
notb
mov
inc
sub
test
mov
dec
aaa
subl
mov
pop
mov
jp
cmc
shlb
inc
shll
dec
ss
xlat
mov
jmp
cwtl
mov
jb
stos
add
dec
xchg
xchg
cltd
insl
mov
xchg
iret
mov
push
cmc
std
shrb
jb
stos
shrb
push
mov
fistl
cmc
in
jno
out
xchg
stc
xorb
fcompl
jle
pop
mov
rcrl
mov
out
pop
scas
mov
arpl
sti
mov
out
cli
and
testb
fdivs
cld
cmp
xchg
mov
mov
out
fcomps
xorb
les
pop
jle
fdivrl
dec
sbb
sbb
aam
cmpsl
data16
cmp
in
push
das
push
popa
hlt
jno
jmp
push
push
jae
lds
fisttps
sub
push
sbb
imul
mov
dec
dec
ds
xor
jbe
cmpsb
neg
sbb
and
mov
dec
xor
nop
sti
adc
mov
loopne
aad
jnp
les
into
cmpps
stc
inc
jmp
sarl
fistl
cmc
fmuls
fwait
rolb
scas
ljmp
idiv
dec
add
dec
test
inc
dec
xchg
push
cmc
js
in
lcall
add
cmovs
xchg
out
scas
mov
jecxz
cltd
mov
mov
lret
mov
dec
clc
and
das
sbb
or
lea
jae
lcall
cmp
ss
sub
jns
xor
xchg
xchg
sbb
jb
nop
ret
or
xor
and
roll
add
pop
out
ljmp
call
mov
insb
and
inc
clc
mov
mov
shlb
and
adc
icebp
push
mov
js
test
mov
and
inc
cmpsb
mov
inc
test
lret
pop
cwtl
pop
adc
push
sub
xchg
iret
mov
mov
pushf
xlat
arpl
mov
cmpsb
mov
jnp
popa
push
push
dec
ret
pop
arpl
mov
out
push
push
bound
jns
dec
clc
inc
lock
dec
xchg
jns
mov
adc
mov
jecxz
xchg
lahf
lds
jbe
pop
pop
je
shl
xor
shl
scas
test
aam
sub
hlt
push
aad
aaa
add
cmc
arpl
fxch
fldenv
xchg
add
test
loope
mov
cmpsl
dec
mov
loopne
lret
in
pusha
pusha
or
push
lea
cmp
ja
mov
or
mov
je
ljmp
push
jp
push
int
add
mov
js
push
sub
notb
adc
jnp
add
cmpsb
fcoml
push
ret
cs
or
inc
aaa
jg
cmp
les
mov
popf
outsb
mov
test
in
fisttpll
fldt
push
xor
xlat
divl
icebp
hlt
aaa
cmc
imul
popa
jg
jp
and
or
mov
dec
int
nop
ret
push
call
cmp
faddp
fwait
pop
subl
loope
lock
pop
dec
inc
xchg
pop
cmpsl
out
or
jbe
lods
leave
xchg
repz
xchg
mov
nop
shll
sub
lock
xchg
push
jno
mov
inc
xchg
xlat
mov
and
roll
popa
leave
cmp
xchg
cmp
mov
insl
test
insl
pop
inc
pop
mov
les
sub
sahf
and
mov
cmp
pop
xor
mov
sub
outsb
pop
lahf
or
push
xchg
addr16
or
lock
mov
outsl
insl
dec
repnz
adc
mov
jg
add
js
je
mov
mov
fidivl
mov
add
je
sub
addr16
rol
jo
js
xor
mov
xor
es
or
stos
cmp
mov
scas
mov
sti
mov
push
int
add
dec
mov
sub
out
or
push
test
pushf
shrl
imul
pop
gs
shl
hlt
pop
call
imul
sbb
mov
push
jle
out
mull
mov
jne
adc
imul
loope
or
loop
and
pop
mov
pop
jne
jo
and
jno
fisubrs
jns
mov
xor
xor
loopne
fmuls
sub
cmp
or
push
movsl
hlt
lea
jbe
inc
xor
lds
xor
sbb
dec
cs
pop
xor
js
jae
jg
add
inc
push
mov
lret
daa
mov
popf
insl
xor
sbb
add
or
jae
or
mov
sbb
or
and
cs
push
ja
aad
dec
or
lcall
sbb
mov
sub
jb
adc
iret
mulb
loope
aaa
aaa
lahf
es
xor
pop
fs
jnp
xor
das
inc
push
inc
add
sub
es
fucom
orb
mov
sub
inc
scas
test
into
mov
lcall
in
lods
lret
or
aad
push
xchg
pusha
lods
xchg
push
int3
les
or
pop
in
jge
xlat
mov
in
sbbl
or
clc
add
fmuls
xor
adc
sub
jl
loop
mulb
pop
gs
pop
ret
push
lods
dec
mov
hlt
loopne
dec
inc
sbb
add
mov
dec
iret
and
fs
mov
jb
jmp
ja
sti
insb
aaa
mov
outsb
mov
ss
cltd
mov
jmp
roll
int3
inc
icebp
fucom
push
insb
xchg
pop
jns
hlt
and
pop
mov
test
dec
jmp
in
aas
sbb
int
jne
fildl
push
outsl
sub
into
ret
jo
jecxz
pop
push
add
mov
dec
or
ja
ss
mov
and
fnsave
mov
pop
dec
insl
push
mov
xchg
inc
add
pop
xchg
repz
adc
shrl
mov
sbb
insl
mov
xchg
in
mov
jae
repnz
cmp
sbb
add
and
movsl
sub
cmp
leavew
fcmovnbe
and
lcall
int3
rcrb
pop
bound
rcll
mov
sbb
imul
inc
daa
push
jmp
je
sbb
ds
xor
dec
inc
cld
fildl
dec
jle
in
fstl
das
jbe
and
outsb
loope
push
lds
aaa
jle
popf
push
sbb
mov
mov
mov
jae
dec
sbb
repnz
cmp
pop
incl
mov
pop
mov
or
rolb
sbb
in
jmp
lret
fs
dec
jno
imul
cmp
in
xchg
icebp
sbb
std
pop
and
and
and
jge
add
sbb
mov
dec
xchg
xchg
cli
cmpsl
out
pop
orb
movsb
and
fnstsw
sbb
pop
mov
or
mov
into
and
and
sub
dec
mov
imul
push
scas
jnp
iret
iret
pop
out
loop
cli
cmp
lods
js
f2xm1
lock
iret
inc
pushf
pushf
jne
test
inc
cmp
mov
sahf
pop
adc
js
lock
mov
or
fmulp
pop
mov
mov
or
fimuls
mov
dec
fmuls
xchg
mov
es
bound
fidivrs
test
add
and
aaa
int
sti
add
sahf
lret
jecxz
lea
shrl
loope
dec
dec
dec
sbb
sbbb
and
xor
loopne
jmp
sbb
dec
test
jecxz
lods
jnp
push
nop
roll
pop
dec
cltd
sub
xor
sti
xchg
xchg
or
aaa
fadd
out
cli
pop
scas
xchg
add
pop
test
xchg
pop
std
addr16
push
xchg
ljmp
bound
xchg
cmp
inc
mov
je
lret
mov
fisubs
sbb
dec
dec
addr16
fisubrs
inc
cli
or
movsb
add
or
push
cmp
push
dec
and
int
mov
fildl
das
xchg
sar
jmp
mov
push
inc
inc
test
sti
lds
int3
dec
negl
mov
scas
neg
daa
outsb
jge
push
jle
shrb
stc
pushf
stc
loope
lret
addb
lock
lock
xchg
daa
mov
lret
sbb
inc
dec
loop
stos
sarl
pop
fistl
dec
cltd
push
xlat
rcrb
mov
dec
mov
orb
arpl
adc
mov
dec
mov
cmp
lret
out
rcrl
stc
sub
push
loopne
push
xor
arpl
sbb
or
scas
and
sub
pusha
mov
sbb
pushf
mov
xchg
jmp
sbb
mov
out
out
push
xchg
divb
mov
and
sbb
mov
dec
jl
mov
testl
pop
mov
pushl
jecxz
gs
into
xchg
push
daa
pop
in
xchg
jl
dec
and
ficoms
adc
or
clc
push
mov
jno
sub
sub
fwait
neg
or
adc
adc
inc
lahf
mov
dec
or
xchg
jle
std
int3
mov
dec
imul
call
or
decb
sbb
xchg
stos
push
and
repnz
push
mov
sub
movsl
enter
dec
add
addr16
test
pushf
sbb
fidivrs
lret
inc
sbb
mov
mov
ret
enter
jb
jb
cld
test
repz
adc
out
in
cmpsl
mov
fnstenv
enter
add
or
add
aas
gs
repnz
dec
push
and
subl
push
nop
pop
lods
adcb
or
xchg
mov
mov
dec
pusha
sbb
adc
orb
movsb
mov
cwtl
push
imul
test
aas
and
jmp
inc
jns
cmp
pop
in
pop
sbb
lret
sbb
dec
imul
enter
sbb
or
jmp
sbb
pop
push
sbb
cmp
sbb
push
arpl
in
loope
data16
mov
pop
inc
outsl
int3
pop
mov
pop
iret
mov
icebp
addl
mov
mov
std
sbb
sub
xor
cmpsl
mov
push
insl
push
mov
sub
adc
push
hlt
push
loop
pop
stc
and
cwtl
adc
js
shlb
bound
loopew
cmp
xchg
add
fstpl
mov
fisttpll
inc
imul
inc
es
inc
fdivl
jb
decl
pop
mov
pop
bound
mov
mov
roll
push
cmp
out
xchg
stos
mov
and
xor
jns
in
outsb
sub
mov
ljmp
mov
in
push
mov
fadds
fistpl
xchg
gs
add
or
shrl
mov
fucomip
bound
mov
sti
inc
icebp
fmull
xor
mov
sub
pop
pop
je
sbb
cmp
xchg
int
and
lahf
xchg
ret
xchg
or
rcrl
out
mov
push
adc
fnstsw
stos
fldl
add
repnz
test
inc
jns
push
cmp
and
adc
sub
rcll
lock
out
out
push
fs
mov
push
xor
out
sub
das
pop
loope
push
popf
push
pop
push
jnp
ljmp
mov
adc
mov
mov
or
lret
jp
mov
cmp
arpl
cmc
outsb
test
in
jmp
and
or
adc
fwait
pop
das
mov
cwtl
xor
xor
es
lahf
nop
pop
push
jns
push
pop
xlat
pusha
les
vcvttps2dq
loop
jmp
xchg
xchg
aas
and
jno
lret
jne
sahf
inc
and
je
popf
cs
adc
xchg
adc
or
popw
inc
cmp
enter
mov
adc
xor
jb
rcll
shlb
add
cs
mov
ja
add
pop
ss
xchg
rol
aas
mov
fwait
adc
insl
nop
fstpl
lock
sub
shl
popf
daa
fidivl
insl
mov
mov
scas
push
mov
sbb
sti
inc
pop
aaa
ret
int
mov
add
mov
jae
dec
stos
das
lret
push
scas
ret
lcall
jno
call
mov
test
out
dec
pop
mov
std
mov
neg
sbb
push
inc
mov
sub
aas
pop
data16
in
push
mov
fyl2xp1
or
cmp
cmpsl
inc
cwtl
icebp
add
cld
lahf
or
lret
lcall
push
cs
adcb
push
mov
roll
sbb
mov
enter
mov
xchg
test
or
push
int
rorb
xchg
lret
cmp
sarl
or
and
dec
movsb
nop
mov
sub
push
pop
push
jecxz
insl
sbb
push
mov
sbb
fwait
xor
cwtl
lods
and
imul
dec
shr
cld
or
mov
xchg
sub
lahf
xchg
je
lods
aam
popf
mov
cli
xchg
pop
repnz
cmp
push
out
nop
sbb
push
es
dec
call
addl
inc
inc
aas
push
pop
mov
loopne
or
in
ret
lret
cmc
scas
fisttpll
pushl
or
pop
mov
idivb
mov
mov
mov
or
into
test
sub
cmpb
lock
mov
jnp
fbld
shll
stos
aaa
mov
and
jae
shll
cmp
pop
lods
mov
add
mov
push
push
aam
mov
and
mov
push
pop
ss
xchg
adc
inc
pop
imul
cmp
rclb
sbb
lods
shrb
push
cld
jmp
sarb
cmc
pop
pusha
out
jno
aam
gs
push
int
cmpl
jecxz
adc
mov
push
insl
outsb
mov
ss
stos
negb
insb
fildl
mov
or
fdivrs
cmp
out
push
out
add
sbb
sub
rclb
ret
fstps
dec
push
xchg
lcall
notl
pop
fisubrs
sbb
insb
cmp
cs
out
dec
js
xchg
imul
mov
and
ret
stos
push
and
or
sbb
nop
fwait
sbb
sahf
xor
pop
sub
cmpsb
sbb
pusha
addr16
rcrb
inc
in
xor
pop
xlat
jnp
sbb
aaa
and
inc
popf
mov
popf
jl
int
mov
cmpsb
lods
mov
lods
mov
fucomp
scas
jge
push
jae
pusha
xchg
and
jmp
sbb
mov
mov
jno
jle
adc
xchg
jns
pop
dec
or
sbb
jl
sti
adc
out
xchg
or
and
out
scas
out
jecxz
jge
mov
add
inc
pop
adc
jmp
rcr
and
mov
and
mov
lds
mov
pop
add
jns
pop
push
sub
ds
fistpl
push
xchg
and
and
cmpl
push
cmp
cmc
jmp
mov
inc
jl
sbbl
ret
je
aad
stc
test
push
incb
es
sbb
int3
fsts
push
cmc
jns
dec
and
or
cmp
inc
cmc
dec
push
pop
ljmp
dec
xor
insb
xor
mov
lds
push
and
mov
sbb
push
adcl
xchg
push
sbb
outsb
iret
adc
pop
dec
daa
pop
sbb
or
xor
add
xchg
mov
xor
popa
dec
add
mov
push
push
or
jnp
or
loop
push
sub
mov
rcrb
mov
sbb
test
mov
and
inc
xchg
push
and
in
sub
movsb
xchg
push
nop
test
insb
mov
movsb
inc
das
xor
fnsave
sbb
out
mov
or
out
and
stc
lods
inc
add
mov
sub
mov
ljmp
andl
ja
jbe
imul
inc
mov
pop
sub
xchg
cmpsl
push
lods
lods
rol
out
loop
jo
notb
les
push
jo
cmp
orb
stos
in
popf
jg
aad
shl
jp
sub
fsubs
cltd
mov
add
imul
mov
and
xchg
loopne
jge
xlat
insb
ds
aam
cmp
jo
icebp
std
in
xor
test
sbb
cmp
lcall
sub
nop
jecxz
adc
lock
or
and
mov
mov
stc
jbe
or
adc
xlat
xchg
cltd
sub
out
es
lds
or
and
andb
daa
adc
out
roll
lea
cwtl
scas
ret
xor
rcrl
adc
fiaddl
adc
repnz
xor
es
sbb
xor
pop
pop
dec
enter
and
jmp
mov
push
fiaddl
test
sarl
scas
outsb
in
cld
cmpsl
lcall
mov
mov
sbb
es
jae
xchg
out
sbb
rclb
mov
iret
pusha
movsl
mov
aad
dec
mov
sub
sbb
pop
and
ds
xor
outsb
sub
push
mov
mov
ss
sti
popa
mov
mov
mov
mov
mov
ficoml
sub
push
add
xchg
lcall
push
mov
lock
sub
inc
mov
es
mov
out
test
mov
js
hlt
into
mov
fs
outsb
jmp
or
in
imul
subl
outsb
xchg
inc
mov
lods
xlat
mov
cmp
mov
cmpsb
or
sbb
fsubl
repnz
lcall
stc
fisttps
push
test
lds
sarb
mov
jne
in
xchg
out
in
push
jp
push
enter
jnp
in
and
rcll
and
xchg
ss
aas
lea
or
in
pop
lods
dec
add
into
mov
jecxz
outsb
roll
cld
stc
or
imul
loopne
jb
push
inc
subb
test
shl
into
negl
jecxz
jb
jne
rep
scas
sub
insb
mov
adc
jge
pop
push
icebp
mov
jno
in
sbb
jmp
jb
mov
or
jb
cmp
jne
out
in
pop
pop
dec
aam
sbb
roll
lods
std
adc
or
fs
test
arpl
addr16
xchg
mov
aas
cmc
push
mov
sbb
mov
sbb
mov
and
les
jg
lods
sbb
fsubl
insl
xchg
popa
xor
into
push
mov
hlt
es
call
adc
and
and
mov
sub
stos
cmp
sub
mov
add
xor
and
neg
in
cmc
pop
loope
int3
mov
and
aaa
in
mov
bound
sbb
jge
sti
adc
rcrl
or
jae
sbb
stos
cmc
or
mov
mov
aaa
cwtl
testl
cmp
addr16
sbb
or
pop
mov
data16
lods
or
push
mov
add
xchg
mov
jp
xorb
mov
cmpsl
push
mov
cld
test
add
out
inc
pop
or
mov
xchg
add
ret
loope
ja
or
pop
fisttpll
mov
push
cwtl
jbe
lahf
nop
adc
or
adcl
push
pop
xor
out
jno
sbb
mov
in
push
outsl
call
or
arpl
dec
and
inc
ja
pop
jae
xchg
sahf
insl
add
or
ret
bound
jo
call
jns
js
pop
mov
inc
lods
dec
jl
cmp
jmp
inc
push
xor
cmp
in
inc
mull
add
adc
pop
dec
adc
push
insl
adc
daa
cmp
loope
insl
jge
orb
aaa
push
xchg
in
push
mov
aad
addr16
pop
push
out
pop
inc
call
jns
lea
mov
mov
mov
dec
jnp
push
add
mov
inc
ret
ror
push
aaa
int
fists
jns
mov
addb
adc
sbb
cmc
cmp
add
icebp
dec
and
mov
lcall
sahf
push
cmpsb
or
mov
and
push
outsb
push
mov
jae
xor
mov
xor
jp
les
jb
sbb
cs
adc
leave
pop
rcr
push
test
ds
inc
movb
lahf
out
ficoml
mov
pop
add
sbb
dec
clc
mov
mov
jmp
scas
sub
hlt
js
add
call
mov
inc
ljmp
je
inc
lods
in
push
inc
jb
mov
scas
cli
add
fsubl
fcompl
push
sub
movsb
rep
in
mov
cmpsl
dec
arpl
dec
insb
push
lods
mov
insl
lahf
ror
sub
dec
push
and
jmp
in
out
in
adc
mov
cwtl
inc
test
sub
dec
cmp
and
pushf
add
xchg
pop
push
add
dec
call
orl
inc
out
enter
adc
jno
fcmovnbe
roll
add
js
sbb
hlt
data16
fwait
negl
push
aad
inc
dec
nop
loop
mov
mov
or
mov
pop
outsb
stos
jne
jns
lahf
nop
adc
adc
mov
pusha
cmp
cltd
rdpmc
push
sbb
sbb
cmp
gs
andb
sbb
out
pop
scas
pushf
jb
fmulp
fcoml
lea
adc
or
push
inc
mov
sub
push
dec
and
cld
add
mov
sti
fisttpl
loope
loope
int
pushf
mov
xor
in
cs
adc
into
test
testl
outsb
stos
push
into
sti
rclb
inc
xor
inc
mov
popa
xor
pop
xor
adc
daa
aaa
stc
ror
rcrl
cmpl
mov
es
jne
ja
sbb
sbb
dec
fcoms
test
xchg
cli
aaa
into
into
sub
mov
iret
add
inc
mov
jno
sarb
je
testb
std
hlt
mov
xchg
in
or
and
and
pop
mov
mov
subl
push
cmpsb
push
ret
outsl
cmp
push
push
sarl
mov
xchg
jbe
dec
es
loope
aas
loope
xchg
daa
sbb
aad
pop
dec
or
xchg
cltd
sti
pop
cld
adc
test
test
push
adc
popf
fwait
std
push
aas
mov
sbb
outsb
icebp
shr
inc
jo
or
adc
mov
scas
aam
arpl
gs
dec
sub
sub
push
pop
std
fninit
xchg
shll
mov
pusha
jp
das
fidivs
jmp
push
jecxz
shl
ficomps
mov
iret
popf
scas
stc
call
inc
aas
in
in
push
or
lea
sbb
out
adc
cltd
or
add
popf
cmp
pop
adc
call
sub
repz
bound
stc
fisttpl
popf
add
push
lret
fnstcw
sub
pop
mov
shrl
fiaddl
xchg
sti
mov
adc
jno
daa
scas
or
movb
test
add
xor
mov
push
sahf
cmp
movsl
imul
insb
sbb
xor
dec
sarb
jb
inc
mov
fcmovbe
inc
lods
mov
aas
adc
insl
mov
jg,pt
ss
out
push
jmp
sti
xor
sbb
repz
adc
pop
arpl
add
adcb
addr16
xor
sub
icebp
fimuls
xor
icebp
jl
loopne
pop
je
dec
adc
out
in
imul
mov
test
pusha
add
mov
push
dec
out
insb
and
jmp
stos
out
psubsb
pop
jo
lret
aaa
in
out
sub
subl
mov
jle
in
ljmp
jo
jge
push
pusha
ss
push
std
roll
cmp
sub
mov
and
or
dec
pop
adc
cs
sub
push
pop
fs
movsl
not
pop
ss
sub
inc
inc
push
add
mov
dec
push
xorl
cmp
lret
xchg
jg
sbb
xchg
ret
cmp
lds
ficoml
das
jp
out
out
sbb
add
push
jnp
shll
jo
fiaddl
jmp
mov
mov
jno
idivb
jno
test
add
rolb
cld
adcb
mov
sbbl
pop
pop
fisubs
sbb
aas
adc
pop
lock
mov
lds
xlat
mov
mov
push
mov
pop
cmpsb
jp
cmp
sub
in
cmp
jg
lret
sbb
in
out
nop
mov
js
outsl
das
xor
and
xor
mov
push
mov
in
sbb
jl
out
mov
ljmp
add
mov
scas
xchg
loope
cli
mov
mov
jne
push
add
into
adc
mov
mov
mov
add
sub
jge
mov
and
add
pop
mov
and
jmp
jp
dec
jmp
mov
dec
cmp
cmpb
and
lahf
in
punpckhbw
mov
jl
aad
push
shr
call
jge
cld
and
or
insl
rorb
fistps
mov
lret
in
sub
and
shrb
xor
xor
mov
xchg
lods
lds
pop
jbe
sub
outsb
cmp
xchg
xchg
xor
adc
popaw
fdivs
jg
fmuls
adc
stos
test
sbb
mov
cltd
fisubs
sbb
push
sub
jae
arpl
jbe
cmp
cmp
bound
ljmp
mov
int
test
jp
pop
outsb
jb
xchg
lods
cmp
add
mov
sahf
outsb
loopne
sbb
sbb
mov
arpl
xchg
and
rorb
adc
in
testb
gs
xor
pop
sub
pop
adc
inc
xor
stos
scas
sti
scas
pop
mov
and
mov
and
ljmp
sbb
xor
or
jge
mov
sub
cmpsl
pop
incb
jb
test
rep
inc
and
xor
xor
add
pop
inc
movsl
incl
inc
outsl
out
push
lret
repnz
es
xchg
pop
cmp
mov
ss
adc
xchg
xor
dec
mov
mov
xor
lcall
dec
inc
sub
mov
lods
sbb
sub
xchg
pop
xchg
mov
lret
lea
mov
cmp
push
dec
fsubrl
dec
mov
daa
scas
pop
arpl
dec
cmp
call
push
or
fldenv
lea
jecxz
mov
add
or
push
add
or
sarb
push
fcomp
js
adc
xor
xor
mov
xchg
pop
cmpsb
rorl
lods
mulb
sub
xor
inc
bound
shlb
pop
out
insl
dec
mov
cwtl
stos
jl
loopne
ss
mov
mov
xchg
fdivs
or
add
divl
sub
push
test
enter
adc
jl
pusha
mov
sbb
repz
out
push
test
mov
inc
push
xchg
cltd
hlt
mov
test
sbb
jp
inc
and
jb
pop
xorl
pop
and
lods
sbbl
mull
jge
cmpsb
incb
inc
mov
dec
dec
mov
pusha
pushf
dec
mov
loop
jb
test
jle
popa
jmp
cmp
shll
int3
jp
push
sub
addl
nop
popa
popf
xor
xor
cli
std
mov
sarl
adc
push
sbb
or
inc
inc
inc
push
in
jge
fadds
in
popf
cli
mov
mov
imul
stos
repnz
mov
add
dec
jg
pop
xchg
ret
fs
das
dec
push
or
sbbb
loope
enter
lods
cmpsl
push
loope
xor
lods
popa
cs
xchg
pop
mov
stos
sbb
loop
test
adc
loopne
emms
inc
lcall
jae
ljmp
sbb
dec
jb
test
cmc
imul
mov
shrb
je
shll
and
jno
repz
mov
adc
lret
sub
or
in
je
cltd
push
and
ss
cltd
jbe
in
sbb
loop
repz
call
cld
fisttps
inc
cli
cltd
pop
push
fisubrs
out
loope
jp
test
stos
jns
hlt
frstor
and
cmp
popa
jb
dec
rcrl
cwtl
sarb
sbb
or
lret
jle
push
ficomps
mov
out
into
push
jae
push
inc
icebp
inc
cmp
and
ds
out
xchg
adc
jge
jmp
sbb
into
roll
xor
push
jae
mov
popf
daa
xchg
out
test
cmp
and
out
sub
or
das
mov
dec
repnz
mov
mov
lds
or
mov
out
dec
inc
pushf
cmc
sub
mov
jb
dec
inc
popa
add
pop
nop
mov
or
jnp
dec
loope
int3
fildl
sbb
sub
cmp
jbe
repz
ret
scas
sbb
test
rcr
sub
mov
rcl
dec
push
testl
int
cmpsb
add
dec
adc
arpl
sti
xor
mov
sbb
aam
mov
inc
and
cmp
clc
leave
sub
xchg
aam
shrl
negl
adc
pop
sub
out
fsubrl
push
fdivrs
orb
jo
sub
imul
pop
cmp
outsb
insl
testb
out
out
mov
inc
or
mov
loope
icebp
ja
jne
mov
out
cmp
mov
cli
in
inc
pop
dec
dec
lds
fimull
mov
fldenv
or
lret
push
cmp
out
xchg
loop
scas
popf
pop
sub
or
mov
push
add
iret
jae
pop
cld
mov
xchg
inc
ret
lds
mulb
mov
dec
jno
jo
in
pop
fnsave
mov
fiadds
sbb
les
dec
add
adc
iret
popa
mov
sub
dec
in
fwait
ljmp
xor
and
lock
enter
rcl
lea
jmp
push
ficoml
xchg
ja
jge
repz
cmp
repnz
lds
pop
in
pusha
cmpsb
clc
out
mov
bound
sti
cmpsb
aaa
addb
fcmovbe
pop
sbb
notb
in
pop
sub
cmp
xor
xchg
ja
loope
pop
movsl
test
push
std
lahf
lcall
popa
test
iret
and
push
pusha
dec
faddl
add
push
adc
cmp
mov
add
inc
outsl
push
jo
popw
sub
int3
jae
mov
jno
cmp
cmp
popf
scas
pop
pushf
aad
insl
shrl
int3
cmpsb
pusha
popf
data16
xor
push
mov
cwtl
shr
fs
aas
adc
fsubl
test
lock
jge
rolb
push
movsl
sub
mov
cltd
cwtl
fwait
or
push
pop
pusha
mov
clc
cmp
jns
in
sub
dec
scas
mov
jo
ljmp
rcll
je
sahf
mov
dec
dec
lds
icebp
mov
pop
daa
adc
adc
or
in
into
es
mov
ret
mov
call
jnp
aaa
mov
scas
lds
scas
or
mov
dec
and
cmp
jne
mov
push
add
inc
mov
mov
pop
fiadds
or
push
es
ret
pop
xor
addr16
mov
fs
add
outsb
mov
inc
in
fcoms
in
pop
lock
je
add
jbe
xor
imul
adc
rep
negl
mov
pop
jno
mov
test
das
sbb
mov
xchg
push
and
dec
dec
data16
fistpl
in
sub
cwtl
stc
popf
imul
aaa
ror
pop
shlb
stos
or
or
mov
shr
xchg
push
cmpb
pop
adc
push
dec
mov
fdivr
lahf
and
outsl
cwtl
nop
mov
sbb
xor
ja
mov
subl
paddq
lahf
xchg
dec
inc
inc
mov
mov
ret
pusha
fsubl
jl
mov
fildl
in
adc
mov
faddl
jl
jmp
fdiv
sbbl
mov
xor
add
push
fstpl
adc
sub
and
mov
addl
add
inc
rolb
sub
outsb
push
push
push
sbb
pushl
jb
sbb
mov
addr16
test
pop
or
mov
fsubp
movsl
jbe
mov
test
lods
mov
jmp
push
dec
lock
fs
cmp
stos
ja
push
jae
jns
dec
lods
mov
lods
xchg
sbb
mov
mov
add
mov
in
insb
dec
daa
stc
or
lds
ret
xor
mov
adc
daa
cmp
pop
mov
sarb
mov
add
aam
fldt
mov
fcompl
lcall
hlt
addr16
nop
jecxz
jle
push
and
mov
inc
outsl
adc
fldt
sub
dec
popa
sub
fsubl
leave
dec
xor
and
mov
popa
jg
jns
mov
cmp
pop
inc
fdivl
dec
xor
push
jae
pop
xor
jg
jnp
fmul
movsb
xor
xchg
adc
push
mov
mov
xor
mov
popf
paddb
mov
popa
sarl
out
pop
rcll
repnz
jle
sbb
inc
and
xor
mov
push
jp
lret
fsts
inc
popf
outsl
aam
aad
and
push
dec
orl
into
in
add
sbb
repz
lods
sbb
movsb
outsb
sbb
and
or
fdivr
or
jmp
mov
insb
pop
cmp
push
push
sbb
clc
fdiv
mov
popa
push
ss
push
shll
lret
hlt
inc
jmp
mov
cmp
add
je
inc
sub
jae
push
fdiv
fwait
icebp
jne
mov
pop
xor
rcl
fsubs
inc
movsb
mov
dec
or
fmuls
jb
mov
fsubrl
iret
shlb
in
lock
outsl
enter
mov
shrl
scas
pop
enter
push
xchg
mov
sub
mov
psrlw
lods
rep
cmp
sub
push
xchg
loop
stc
andb
out
mov
mov
loope
inc
dec
cs
ljmp
daa
adc
mov
gs
movsb
ss
pop
loope
mov
subl
rcl
fdivl
in
js
xor
sub
hlt
in
pop
test
xchg
and
mov
mov
mov
xchg
dec
in
lahf
aam
xchg
jle
sub
mov
std
xor
jno
addr16
push
push
inc
mov
mov
jl
inc
jo
int3
sahf
and
jp
dec
xchg
mov
xchg
mov
jo
je
pop
out
dec
xor
push
inc
and
sub
jp
jns
cmp
sub
jmp
and
jg
leave
pop
pop
addr16
push
jecxz
mov
pop
test
or
fisttps
fucom
mov
inc
les
in
cmp
adc
cmpb
inc
jle
shll
mov
les
sub
gs
push
fwait
sysenter
dec
lods
xor
call
mov
mov
and
call
push
and
jp
shlb
movsl
lds
imul
mov
or
or
inc
push
add
sbb
mov
imul
leave
mov
enter
push
into
mov
popf
or
add
push
sub
jbe
dec
cmpsl
mov
pusha
fwait
cld
or
out
lahf
imul
popa
xor
mov
in
rorl
mov
mov
push
mov
and
aad
popa
and
xlat
jne
es
int
push
mov
sbb
int3
xchg
in
and
jle
int3
repz
cmp
xchg
in
and
popf
xchg
dec
mov
scas
push
inc
inc
bnd
sbb
sbbl
mov
mov
int
adcl
lock
xlat
mov
inc
pop
cmp
cltd
lods
or
shrl
cwtl
imul
jno
xor
sub
ja
pop
lds
xor
xchg
dec
out
fwait
mov
mov
cli
scas
test
push
mov
ror
in
mov
imul
test
cmpsl
adcb
loopne
hlt
mov
mov
imul
sbb
clc
xchg
sahf
testl
imul
pop
push
loope
or
sbb
inc
cld
mov
sbb
add
scas
mov
mov
js
mov
mov
jns
jle
mov
fistpll
lahf
xor
push
fnstcw
jo
mov
pop
jnp
jp
test
aas
pop
dec
push
add
sti
in
insl
pop
lods
int3
ljmp
pop
sahf
add
push
leave
cld
inc
es
aam
sub
mov
cmp
push
mov
add
pop
or
adcb
stc
jne
adc
lods
das
sub
dec
rorl
popl
pusha
mov
ret
pushf
xchg
sbb
mov
adc
xor
adc
cmp
pop
pushf
adc
stc
push
ret
jl
pop
sub
push
aaa
add
xor
xchg
sbb
push
out
cmp
sbb
jmp
mov
adc
fwait
repnz
mov
mov
mov
fwait
inc
faddl
scas
cmpsl
add
in
scas
movsl
push
push
xchg
dec
mov
adc
inc
and
sub
add
pop
sub
and
cmp
stos
out
cmp
pop
and
outsb
mov
stos
imul
adc
sub
sbb
das
fiadds
add
xchg
push
gs
push
mov
cmp
insb
arpl
xchg
adc
js
addr16
outsl
sarb
sbb
lods
jo
cmpsl
cmp
imul
or
or
movsl
mov
outsl
les
and
mov
stos
sbb
mov
pop
pop
xchg
lds
mov
sbb
pop
popa
fidivrs
sbb
mov
lret
in
dec
sahf
dec
inc
sahf
push
fstpl
icebp
cli
jmp
push
xchg
outsb
pop
or
mov
jg
sbb
xor
push
cmpb
push
dec
push
or
enter
cmp
jl
jns
movsb
mov
sti
push
popa
cwtl
push
xor
mov
jecxz
inc
movsl
ror
mov
and
mov
sahf
push
jl
and
ss
loope
shl
mov
cmp
push
pushf
mov
stc
jne
stos
xor
sub
jno
or
xor
cwtl
gs
and
fldl
or
bound
loopne
es
stos
inc
mov
fsin
je
cwtl
add
ss
enter
jge
mov
or
or
xchg
cmpsl
dec
lcall
mov
jb
adc
mov
mov
dec
lock
pop
xchg
jp
inc
pop
das
mov
sub
jae
or
fwait
jge
jge
dec
xchg
lret
pop
xor
test
mov
xchg
dec
je
mov
cwtl
adc
sbb
mov
push
inc
les
fstpt
and
pop
jno
or
out
test
push
jp
int3
cli
mov
dec
xor
dec
ret
lea
std
dec
mov
leave
xchg
fcompl
ret
aam
fwait
jmp
or
loop
test
iret
cmp
sbb
stc
pushf
add
daa
loop
repz
push
pushf
mov
xchg
dec
dec
jecxz
cmc
pop
fcom
es
xor
aad
movsb
aam
hlt
in
or
push
push
push
shll
mov
mov
dec
and
clc
mov
incb
cmp
adc
pop
mov
repnz
pop
xor
lock
into
xor
in
push
dec
push
mov
fcoms
dec
and
add
scas
jae
outsb
mov
pop
test
pop
adc
stos
xchg
lret
sbb
xchg
cmp
mov
les
mov
std
or
or
mov
cmpl
xor
setge
sbb
mov
push
cs
mov
add
sub
cmp
adc
pop
pop
shlb
fwait
inc
xor
dec
negl
cmc
xchg
mov
mov
sbb
jo
mov
mov
outsl
mov
add
cmp
adc
jl
inc
mov
jb
sbb
int3
cmp
mov
jnp
insb
lea
rolb
fwait
call
test
sub
cmpsb
mov
add
jbe
pop
xchg
repnz
xor
xchg
test
fcmove
ror
in
sub
inc
cwtl
push
sub
dec
mov
test
out
jno
pop
mov
or
jmp
cmpsl
push
stos
pop
mov
add
and
ficoml
or
lret
mov
out
lret
insl
add
ds
and
lds
jecxz
pop
jp
loopne
xchg
push
mov
cmp
jb
jnp
inc
jl
rolb
or
jnp
mov
hlt
mov
adc
jnp
fldcw
jnp
xlat
fcompl
push
stos
jle
jl
jl
and
test
cmpsb
pop
inc
dec
loopne
jge
cld
loopne
sub
mov
cmp
lds
dec
popa
mov
mov
loopne
inc
imul
insl
inc
pop
daa
data16
les
out
xor
ficoml
cmp
test
dec
js
mov
cld
sbb
push
scas
in
sar
aaa
int
pop
es
hlt
dec
imul
sbb
fsubs
inc
add
mov
out
push
mov
es
jg
jo
add
ja
xchg
and
xchg
push
xlat
fisubs
mov
jp
adc
jge
dec
test
mov
mov
mov
dec
js
repz
pop
pusha
das
cmp
jl
push
jg
inc
js
xor
jae
fmul
jo
and
jo
dec
dec
push
je
rcr
jb
imul
and
dec
or
xor
jg
cwtl
push
sub
scas
in
xchg
stc
sub
mov
jl
and
add
sbb
leave
lahf
cmp
or
fstp
pop
addr16
mov
stc
lods
sub
out
or
inc
leave
rol
lahf
leave
or
rcl
idivb
movsb
imul
fisubrl
xchg
aas
inc
iret
hlt
adc
pushf
lods
popf
xchg
push
es
xchg
cmp
xchg
stc
mov
and
push
inc
insb
xlat
jmp
fcmovne
fdiv
jmp
mov
mov
lea
push
add
ljmp
push
push
lret
subb
repz
push
or
mov
out
out
mov
sar
out
stos
das
fiaddl
dec
jmp
rorl
or
push
daa
cmp
mov
stc
cmp
push
or
xorl
or
aam
hlt
pop
jmp
sbbb
in
sub
dec
mov
or
sub
stos
inc
add
and
push
mov
fwait
sub
add
adc
leave
pop
cmp
iret
or
clc
insl
xchg
xor
push
aad
push
iret
sub
add
cmp
inc
lret
xor
pop
mov
lahf
mov
lahf
test
mov
and
ja
fwait
jbe
inc
int
nop
ret
lods
stc
ds
mov
lret
mov
and
xchg
xlat
pusha
mov
mov
sub
das
or
int
cltd
sarb
dec
mov
push
push
icebp
out
or
imul
into
js
xchg
loope
pop
rorl
test
jge
js
and
fimull
testl
lret
cwtl
lods
fdivrl
test
ret
inc
sbb
xchg
pusha
sub
jg
dec
out
xor
hlt
adc
cmp
push
cmpsl
dec
lds
jge
movsl
icebp
and
dec
ss
push
mov
fsubr
call
jb
mov
sub
aam
out
push
dec
stos
xor
dec
test
sub
mov
mov
add
or
test
lahf
inc
xchg
faddp
cmp
cmp
cmp
pop
adc
in
and
outsl
mov
jno
cmp
cld
mov
out
inc
jns
cmpl
int3
mov
cmp
pushf
inc
sub
push
mov
sub
pop
gs
push
sarl
repz
push
dec
jg
fadds
rclb
sub
repnz
inc
mov
xor
push
lcall
pop
xchg
test
mov
pop
adc
mov
out
out
push
xor
xchg
mov
aaa
mov
repz
imul
scas
aam
sub
xor
push
mov
stos
aas
scas
lahf
sbb
xchg
imul
mov
arpl
jbe
fwait
in
out
ds
lea
add
xchg
adc
sub
test
cmpsb
ret
push
ljmp
adc
mov
int3
ficoms
scas
mov
das
adc
xlat
cwtl
mov
xor
inc
in
push
out
sbb
shr
xor
test
aam
out
iret
add
mov
lods
sub
xor
movsb
mov
pushf
or
das
js
aaa
sahf
stc
pop
or
fsubp
lea
mov
mov
mov
divl
mov
mov
call
push
fsubrl
loop
je
add
mov
push
sbb
push
and
lods
ss
cmc
adc
pop
add
aas
es
and
sub
cld
mov
fstpt
xchg
add
leave
fcomps
mov
out
inc
pop
push
inc
test
cwtl
mov
adc
mov
leave
cmp
pop
cmp
outsb
adc
add
sbb
xchg
mov
aaa
stos
mov
scas
lods
not
add
or
xchg
out
insl
movsl
rcrl
adc
adc
pop
in
lahf
dec
outsl
push
lretw
loopne
mov
mov
lret
data16
test
xor
test
mov
sbb
pop
mov
punpckhdq
mov
or
inc
push
xchg
fnstcw
cmp
lods
rolb
ret
jp
sbb
mov
add
push
hlt
push
cld
pop
inc
inc
mov
sbb
lock
pop
test
mov
xchg
or
mov
fildll
mov
movl
sub
pop
and
popf
ljmp
pop
hlt
pop
or
out
out
or
nop
inc
push
repz
jg
adc
aad
cmp
pop
push
pusha
aaa
cmp
inc
jmp
push
pop
inc
repz
adc
rclb
jmp
xchg
jo
mov
out
js
fmull
test
pop
sbb
jge
loopne
outsb
pop
add
inc
cli
mov
push
add
aaa
aas
and
sub
out
lahf
nop
pop
js
test
addr16
jg
mov
aad
int
add
mov
jle
mov
xlat
sbb
in
xchg
pop
add
inc
mov
stos
clc
mov
push
pop
scas
cmpsl
pop
push
icebp
out
mov
fs
cmpsl
movsb
push
add
adc
movsb
add
push
mov
cld
add
add
mov
sahf
out
in
adc
sbb
das
sahf
cmp
add
jno
or
push
xchg
sti
add
jmp
pop
fidivs
add
lret
aas
enter
add
xchg
fildl
fwait
jns
pop
ja
pop
ljmp
cs
leave
jne
dec
cmp
or
jmp
nop
sbb
add
push
lret
xor
dec
mov
and
ja
leavew
jmp
pushf
sbb
or
dec
cmp
das
rcll
dec
jo
pop
jmp
ljmp
xlat
aad
js
push
xchg
pop
mov
jae
adc
xor
pop
gs
lret
cmp
mov
in
fnsave
aam
add
lret
push
pop
test
jne
aam
sbb
adc
fcomi
cmpl
xchg
ds
xchg
imul
or
loop
orl
xchg
jne
jge
xchg
jno
add
sbb
inc
negl
cli
xchg
xchg
xor
push
push
outsl
inc
aam
pop
inc
cmp
jecxz
add
mov
outsb
cmpsb
bound
push
dec
sbb
jns
cmp
push
cmp
sub
sbb
xor
sbb
push
adc
sti
loop
loope
stc
and
andl
aad
push
adc
jnp
shl
mov
test
iret
daa
sarb
or
jbe
sub
mov
push
and
aaa
dec
xchg
jne
jns
lds
aas
es
adc
push
lock
mov
cmp
lret
push
dec
adc
inc
sub
xor
dec
out
jno
aad
xor
in
movsl
movntps
mov
stos
push
out
lods
sub
mov
aaa
in
and
fwait
sar
dec
in
cmp
xchg
je
inc
and
jae
jne
cltd
xchg
aam
bnd
inc
sub
sub
std
scas
in
addr16
mov
inc
push
dec
or
xor
mov
insb
lods
stc
aas
or
test
sub
push
insb
lock
lret
dec
jg
add
pop
xor
cmp
pop
test
or
rorl
stc
jecxz
pop
pop
cmp
inc
fsts
nop
add
mov
addr16
xchg
add
add
cmp
rorb
cmp
push
xor
and
outsb
xor
popa
fcmove
clc
or
in
test
into
dec
sbb
cmpsb
jae
out
cmp
adc
jle
addl
jo
repz
sub
loop
shll
idivb
or
sub
out
dec
jle
xchg
xchg
inc
cmp
jge
xchg
jbe
xchg
sub
add
popa
dec
int3
and
lea
push
rolb
and
add
subb
js
jo
sub
int
std
aad
cmp
daa
sbb
mov
or
int
dec
dec
dec
push
es
jno
addr16
cmc
sahf
mov
rcl
sbb
add
int3
jg
fsubr
int
add
inc
pop
xchg
xor
test
push
mov
subb
xor
cmpsl
dec
dec
and
sbb
pop
aas
jne
cmp
cltd
and
jns
mov
mov
mov
bound
push
cmpsl
sub
into
jno
xchg
jnp
ret
out
push
and
sarb
data16
fistpll
inc
mov
xor
xlat
lret
mov
xor
dec
inc
jmp
push
lcall
lea
into
sbb
and
jo
rsqrtps
aas
outsl
adc
cwtl
mov
les
xchg
scas
cld
mov
cli
inc
out
and
or
jne
jecxz
repz
fwait
aas
cmp
ss
fstp
icebp
mov
xor
xlat
addb
xlat
dec
xor
mov
dec
push
addr16
cli
cmp
insl
dec
pop
push
mul
jns
in
mov
int
ret
xchg
inc
mov
mov
push
pop
or
das
aas
mov
cmpsl
adc
outsl
imul
xchg
sub
clc
test
mov
push
sub
or
imul
inc
stc
arpl
filds
sbb
jecxz
add
adc
sbb
sti
movsl
pushf
jecxz
jecxz
test
dec
pop
shll
rcrl
test
sub
xchg
sbb
push
ds
sub
xchg
repz
out
xchg
jp
pop
lret
ret
icebp
push
mov
pop
arpl
nop
imul
scas
ret
mov
movsl
jne
jae
mov
pop
jmp
imul
mov
cmp
jns
pop
cmp
mov
push
test
mov
mov
xchg
xlat
and
pop
mov
sar
cmpb
decb
cmp
enter
sbb
jp
leave
hlt
notb
outsb
cmp
sbb
xchg
xor
popa
pop
scas
xchg
sbb
cmp
push
pushf
xor
push
xor
dec
cld
cli
sbb
lret
mov
ss
pop
pop
pop
fidivl
xor
pop
mov
add
push
xchg
and
jl
loop
sub
das
push
xchg
loop
rorb
ficoms
shlb
pop
rolb
out
dec
shlb
and
push
add
pushf
sub
fs
push
dec
xchg
rorb
pop
sub
cmpsl
into
mov
cmpsb
xchg
int3
ds
lods
xor
outsl
ret
rcrl
add
outsl
sbb
jmp
ss
cli
adc
or
mov
imul
dec
adc
sub
ds
jecxz
les
mov
xchg
dec
pop
mov
adc
dec
dec
jns
xor
mov
adc
pusha
push
sti
push
pop
in
cmpb
mov
inc
mov
inc
jne
adc
test
das
orl
mov
xchg
mov
adc
add
cltd
jg
mov
shll
push
cwtl
dec
sbb
in
inc
shlb
ret
mov
shrd
xlat
adc
mov
in
cmp
push
inc
adc
jl
iret
pop
pop
sti
push
dec
pop
ss
aaa
scas
pop
lret
xor
sub
and
insl
movsb
inc
roll
inc
in
pop
les
push
out
lea
mov
mov
mov
mov
add
aam
pop
and
inc
mov
filds
jbe
or
cmp
mov
pop
adc
jae
jecxz
pop
popf
sbb
pop
ds
and
xchg
fwait
dec
pop
mov
cld
add
daa
sahf
ljmp
pushl
out
jl
pop
scas
psubsw
dec
and
sti
stos
jge
outsl
gs
pop
sbb
push
cmpsb
fisttps
mov
shrl
mov
scas
xor
icebp
pop
xorl
pop
cmp
out
outsb
and
add
sbb
fimull
loopne
fwait
or
push
cmp
dec
sbb
aas
mov
test
xchg
stos
fldcw
in
fiaddl
inc
push
jae
mov
pushf
adc
and
iret
mov
scas
mov
mov
cwtl
xor
fnstenv
xor
xor
adc
lret
add
ja,pt
dec
xlat
mov
cld
fstpt
add
mov
ja
daa
imul
movsb
xor
or
arpl
js
jle
jns
dec
cmc
and
addr16
sub
mov
or
scas
cmp
out
dec
sti
and
mov
popa
sbb
and
das
pop
pop
jge
lahf
jmp
jp
mov
sbb
popf
add
aad
jge
jo
outsb
push
inc
clc
cmpb
fisubl
xor
xchg
cli
adc
jge,pn
xchg
or
je
subb
push
lahf
lds
aam
hlt
pushf
push
xlat
push
adc
pop
cmp
jge
push
mov
ds
xor
gs
xorb
mov
xor
pop
mov
pop
mov
xchg
add
mov
pop
and
or
cs
or
push
mov
lods
cmp
dec
cmp
adc
cmp
shl
fmul
icebp
popa
push
decl
pusha
dec
insb
xchg
adcl
push
je
pop
adc
add
dec
dec
sub
iret
mov
xchg
in
push
mov
cmc
jmp
repnz
mov
mov
jle
xchg
jp
push
pop
pusha
sbb
sbb
mov
push
test
or
dec
adc
or
pop
test
shr
adc
adc
enter
movsb
cmp
and
outsb
pop
cmpsb
xorb
shl
std
stos
lods
mov
fidivrl
repnz
jle
fnstenv
mov
pusha
cmp
push
mov
adc
or
std
nop
add
aam
xchg
shll
or
stos
arpl
mov
mov
xlat
and
in
jl
inc
xchg
mov
and
add
mov
fwait
push
push
sub
outsl
mov
mov
mov
iret
inc
add
jp
lcall
cmp
js
outsl
mov
mov
cmpsl
and
xchg
in
scas
dec
cmpsb
lods
scas
mov
lea
push
outsb
pop
mov
cmpsl
jbe
test
inc
xor
rcr
loop
insl
lret
test
test
mov
push
cld
imul
pop
fisttps
mov
push
mov
inc
ljmp
leave
mov
or
mov
test
xchg
or
insb
imul
jp
and
incb
shrl
mov
iretw
nop
bound
sbb
bound
jb
pop
pusha
dec
add
js
cs
sti
and
and
ja
xor
rcl
cmp
imul
mov
pop
inc
jo
cmpsb
ss
inc
sahf
xor
adc
and
jge
xor
xchg
cmc
mov
cmc
mov
mov
sub
mov
adc
fnsetpm(287
icebp
fisttpll
iret
in
fidivrs
xchg
push
movsl
leave
xor
repz
mov
cmp
popa
jb
sub
pop
mov
cmc
xlat
pop
mov
pop
cltd
adcb
jne
bound
int
mov
mov
xchg
xchg
ret
xor
insl
lock
mov
mov
addl
sbb
inc
or
mov
jg
mov
jecxz
mov
sub
int3
call
leave
inc
rcrl
addb
je
inc
push
inc
imul
daa
jno
inc
mov
arpl
mov
mov
jne
test
xchg
pop
mov
ss
call
add
adc
mov
mov
clc
push
inc
pop
movsl
mov
mov
popa
nop
rclb
jp
and
mov
iret
cltd
sub
popf
xchg
fs
dec
pop
je
sbb
xchg
ljmp
stos
mov
pop
mov
dec
punpcklbw
jbe
cld
sti
shlb
outsl
push
fbstp
add
mov
or
push
scas
push
and
loopne
xchg
mov
pushf
out
loope
leave
jnp
dec
lret
push
xchg
pop
fnstsw
push
movsl
das
pop
jmp
lds
dec
xlat
pop
jp
ss
out
push
das
push
pop
dec
gs
mov
cmp
stc
or
push
dec
lds
arpl
fidivl
jl
stc
je
adc
and
cld
outsl
inc
fildll
and
adc
daa
insl
mov
mull
mov
lret
cmp
inc
test
stos
push
pop
add
jmp
das
daa
aad
iret
insb
imul
sub
icebp
add
pop
inc
xchg
mov
mov
sbb
pop
jns
push
test
pop
pop
push
sbb
lods
bound
movsl
xor
cmc
ds
push
sub
addr16
ss
lock
test
mov
aam
push
ljmp
in
pushf
fcomps
shrl
jne
xchg
sub
push
lods
movl
es
lahf
sti
cmpsl
orb
xchg
push
cmpsl
loop
xlat
jmp
pop
imul
cltd
sbb
lcall
clc
and
inc
fmull
mov
mov
out
insb
pop
inc
dec
movsb
lcall
dec
icebp
cwtl
int
and
ljmp
ljmp
xor
jo
cmp
fiadds
pop
aad
and
cmc
cmc
test
insl
pop
jae
repz
outsb
mov
jp
test
lea
push
stos
xor
jge
pop
cmpsb
inc
sub
lea
test
mov
mov
stc
mov
mov
mov
fmull
adc
push
movsb
xor
repnz
out
sti
sub
xchg
inc
cltd
mov
and
push
cld
aaa
test
push
sbb
les
pop
mov
push
mov
shl
lret
mov
pop
dec
and
mov
xchg
call
jns
pop
ja
pop
nop
in
and
ffreep
adc
clc
addl
test
leave
inc
inc
xor
xchg
loopne
cmpsb
xor
popf
pop
lods
push
fwait
mov
pop
sub
pop
fisttpll
xchg
mov
cli
xchg
lea
pushf
aas
rclb
mov
outsb
cmp
cli
clc
mov
sbb
or
rolb
adc
xchg
cmp
div
fisubrl
jge
fdivrs
and
jbe
inc
divl
imul
inc
mov
dec
cmp
add
jne
std
lret
pop
mov
jbe
and
sbb
scas
jno
inc
test
lret
inc
sbb
mov
fst
lret
dec
or
scas
cltd
in
int3
pop
jo
loop
sub
movsb
and
pop
jl
rolb
movsb
shlb
sbb
in
xor
shlb
jmp
add
cld
add
mov
and
in
ret
cmpsl
add
ficompl
pop
sbb
push
inc
mov
push
xchg
cwtl
shl
pop
sub
pop
repz
enter
orb
mov
pop
push
js
jo
loop
dec
xlat
ret
mov
push
xchg
dec
xor
cmc
xor
jl
sbbb
fdivs
out
push
repnz
cmp
pop
data16
gs
cmp
fidivrl
jnp
fdiv
adc
fimull
jne
sbb
dec
insb
or
stc
pop
das
ljmp
add
pushf
sarb
push
pusha
push
lahf
xor
cmpsb
daa
dec
push
push
dec
adc
xchg
mov
inc
mov
in
insb
pop
fsts
cmc
movsl
pop
icebp
jae
xor
adc
aas
cmp
std
mov
hlt
cli
movsl
pop
arpl
xor
in
in
sahf
push
jns
push
and
pop
xchg
lcall
inc
xchg
sub
mov
jo
inc
arpl
lcall
pop
outsb
adc
xchg
shlb
into
pop
push
fstpl
or
ja
pop
pop
xorl
in
clc
cmc
jmp
sbb
mov
sub
sub
mov
jae
das
sbbl
sub
test
mov
jo
pop
shrb
int3
mov
dec
pop
xor
mov
das
add
out
fldenv
mov
les
xor
add
mov
mov
sub
movsb
pop
pop
or
sub
xor
out
call
sub
lret
jecxz
xchg
outsl
add
adc
mov
lods
or
pop
sbb
test
jle
and
insb
mov
pop
loop
cmpb
push
xchg
sahf
out
push
push
push
jg
scas
sbb
aaa
std
lea
lcall
ds
mov
movsb
sub
mov
push
cld
xlat
mov
ja
fwait
dec
and
and
inc
test
jg
sub
scas
pop
stos
out
xor
pop
lods
outsl
pop
sbb
daa
insl
ss
mov
mov
int
cmp
cmpsb
xorb
lods
inc
push
xor
mov
push
cmc
cmpsb
and
dec
cmp
and
loop
out
movsb
sub
cmpsb
mov
and
int3
jecxz
popf
je
loop
xor
je,pt
mov
push
xchg
inc
pushf
movsb
aas
imul
lods
cltd
mov
loop
lds
popa
aad
loope
popa
xchg
mov
adc
outsb
cmpsb
push
out
sbb
ficoms
jge
push
push
push
inc
jns
pop
aam
dec
add
bound
in
movsl
jl
jmp
pop
xlat
icebp
out
clc
jbe
inc
fs
pop
fstpt
outsb
lods
cmp
out
movsl
sub
icebp
mov
idiv
add
cwtl
jbe
sbb
or
mov
in
inc
cmp
push
xor
fbld
ljmp
enter
outsl
cmpsl
sbb
push
insl
in
rorl
jns
ss
mov
xchg
call
scas
jg
xorl
je
push
and
stc
lret
aam
jnp
xor
stos
stos
es
xor
adc
filds
scas
inc
pop
and
cmpsl
pushf
loopne
lods
ja
pop
and
or
mov
mov
sbb
mov
xchg
mov
push
dec
lock
faddp
jge
js
nop
cmpb
outsl
cli
mov
sbbb
scas
test
mov
dec
push
mov
mov
adc
or
mov
push
mov
sbb
ljmp
lds
mov
in
mov
cmp
enter
mov
xor
cwtl
sub
cmp
jp
repz
dec
ja
mov
imul
rorl
aas
inc
add
test
rolb
pushf
push
cmp
out
pop
testl
inc
push
mov
dec
inc
insl
loop
out
cmc
jge
lcall
inc
jno
sub
cmp
icebp
and
pop
mov
pop
pushf
mov
aam
or
pop
pop
cwtl
xlat
sti
mov
cwtl
or
into
xchg
movsl
incl
xchg
imul
into
lahf
negl
fbld
mov
pop
mov
and
arpl
scas
fldt
push
test
jmp
enter
mov
stos
push
mov
shlb
int
fs
mov
and
incb
xchg
sub
std
lds
xchg
sbb
push
mov
mov
adc
push
pop
dec
push
inc
inc
mov
cmpsb
xchg
jle
adc
popf
aaa
xchg
lds
into
lret
and
and
leave
je
xchg
lock
pop
push
lds
clc
inc
jo
sbb
and
out
push
jno
inc
rolb
repnz
test
call
shll
cmc
sub
ret
push
push
sbb
mov
stos
pop
push
pop
pop
rcl
dec
and
jo
sbb
ss
mov
mov
imul
fidivs
jo
mov
push
mov
loop
adc
mov
dec
mov
fistps
jne
lock
mov
icebp
lock
lahf
fnstcw
inc
jg
or
andl
loop
dec
dec
sub
leave
mov
mov
cmc
lea
or
dec
mov
data16
mov
cli
add
push
mov
fisubrs
cmp
xor
fwait
xlat
mov
jbe
stos
push
nop
sub
jne
cwtl
or
lods
pusha
dec
lret
inc
push
xor
popf
or
mov
jne
imul
lahf
ret
popa
idiv
popa
adc
mov
push
test
mov
inc
cltd
xchg
mov
pop
pop
mov
add
das
jno
add
mov
stc
xchg
pop
jo
inc
mov
mov
mov
mov
sub
pop
jo
push
jecxz
fldln2
cmpsb
mov
out
sub
les
push
jmp
pop
pop
ja
divb
ljmp
jl
nop
lahf
or
ret
xchg
ljmp
ficomps
mov
sbb
push
loopne
aad
sbb
fadd
rcrb
rolb
and
mov
shrl
in
or
and
pop
mov
mov
jbe
stos
jno
mov
push
dec
mov
dec
xor
stc
pop
and
jp
xchg
int3
inc
in
loop
int3
shlb
notl
xor
test
mov
iret
mov
cmp
pop
ret
pop
cs
mov
outsl
xchg
mov
pop
mov
movsb
adc
mov
adc
dec
pop
pop
addr16
sti
jecxz
sub
ja
jle
add
fcmovnu
dec
fwait
adc
xor
xor
push
push
shrl
jl
movsb
inc
ret
cmp
sub
push
or
add
fdivs
mov
hlt
push
popf
dec
popf
pop
std
pop
and
dec
call
push
sub
lret
mov
cli
ja
dec
xchg
shlb
shll
push
jae
sub
lret
mov
ds
gs
outsb
mov
in
pop
enter
std
aaa
mov
sbb
xor
jl
bound
fstl
adc
mov
and
sub
sahf
jp
psubusb
and
pop
andb
cmp
sbb
repnz
int
dec
add
adc
lods
xor
jb
pop
cmp
lahf
xchg
fstps
dec
xchg
mov
test
pop
popf
and
mov
in
test
cmp
jge
lcall
mov
clc
sub
xchg
lods
repnz
mov
call
dec
xchg
ret
and
inc
sub
inc
out
add
xchg
lds
add
inc
push
push
inc
xor
popa
adc
inc
leave
push
daa
ja
icebp
mov
and
inc
mov
jbe
jl
fldenv
cli
mov
xchg
in
test
fsubl
daa
lret
sbb
sti
stos
xchg
xchg
scas
stos
or
xchg
pop
in
inc
cmp
aad
orb
js
repnz
jne
aad
cmp
test
pushf
shll
jp
xchg
cmp
test
movsb
pop
mov
mov
aad
into
sub
push
sub
or
call
lahf
jecxz
mov
push
cmc
cwtl
sbb
mov
cmp
jp
sub
enter
push
popa
jp
add
or
push
mov
movsb
in
stc
fistpll
or
inc
cmpsl
hlt
sub
pusha
jp
mov
lret
add
lea
and
dec
push
shrl
add
mov
loop
ret
iret
in
bound
mov
xorl
enter
inc
dec
inc
sti
mov
xchg
aas
cmp
int
mov
sbb
popa
mov
pop
in
jge
testl
popf
lcall
xchg
cmp
cmpsl
xchg
cld
inc
add
pop
add
cmp
hlt
add
out
in
popa
out
call
mov
dec
lret
shrl
jecxz
mov
or
push
mov
das
mov
out
mov
fisubs
sub
inc
ret
sub
push
sbb
xchg
dec
mov
negl
cmp
mov
mov
iret
cmpsb
xor
push
imul
and
ds
jecxz
sbb
ja
stos
inc
sbb
sbb
adc
xor
sbb
aad
int3
jle
js
fisubrl
pop
ret
or
sub
sub
inc
pop
sbb
ljmp
adc
dec
cmp
fimuls
cmp
push
push
mov
inc
xchg
push
mov
sub
test
int
ret
mov
push
mov
push
shll
ljmp
cli
je
cli
adc
lahf
jp
xor
xchg
cmp
inc
jae
mov
scas
aad
jbe
mov
sar
fwait
cmp
cs
icebp
rcrl
and
or
push
mov
or
int
mov
inc
pop
push
rorb
inc
mov
push
add
daa
pop
push
mov
imul
xor
add
outsl
gs
dec
add
sti
inc
jne
rcrb
mov
in
xor
fstpt
adc
sbb
mov
nop
mov
es
mov
aad
inc
lock
sbb
inc
pusha
scas
or
mov
in
out
les
sub
in
ljmp
in
push
les
insb
cmp
xchg
or
call
and
fwait
ja
cmp
xor
add
roll
sbb
and
jp
xchg
ljmp
or
xor
inc
inc
pushf
inc
xor
xchg
lock
call
imul
in
loope
stos
dec
inc
mov
sahf
mov
dec
insl
clc
pop
dec
xchg
insb
insb
in
push
mov
cmp
xchg
mov
or
int3
dec
xor
movsb
xchg
popa
mov
dec
push
mov
sbb
fadds
out
notb
push
xlat
xor
pop
inc
xchg
repz
push
pop
gs
pop
and
sub
fildll
mov
xchg
dec
lods
mov
xchg
mov
out
sti
mov
cwtl
popa
mov
jb
sbb
jb
xchg
jp
ds
pusha
or
aam
in
xchg
mov
xchg
stos
pop
aas
test
data16
inc
and
mov
hlt
lds
movsb
mov
add
mov
inc
outsl
inc
icebp
and
mov
insb
insl
icebp
loope
aas
xor
add
loope
pop
sbb
int3
add
xlat
mov
inc
out
out
int3
add
out
add
add
jne
xlat
adc
popa
xor
data16
pop
loop
popf
sub
xchg
xlat
out
dec
sbb
mov
mov
pop
loopne
cmp
cs
push
xor
fsubrs
lods
sub
inc
mov
xchg
in
cli
dec
xchg
clc
in
adc
fisubrl
xorb
fldt
ret
fildl
cwtl
ljmp
bound
call
das
mov
adc
mov
ret
into
or
outsb
mov
test
add
popf
aam
in
fwait
sub
push
ret
mov
mov
roll
movsb
pop
loope
xchg
cmp
bound
outsl
push
add
hlt
fwait
in
mov
and
out
lea
mov
inc
out
jae
daa
inc
out
lock
adc
aaa
outsb
lret
xor
jg
sbb
jne,pt
sbb
or
ja
fimull
push
mov
ss
inc
adc
outsl
mov
popa
out
pop
and
sub
and
scas
lea
shll
pop
add
inc
js
pop
faddl
cmc
pop
inc
mov
aad
cmp
cmp
dec
mov
jmp
enter
ret
scas
pop
mov
loopne
stos
push
mov
adc
mov
ficompl
hlt
push
aas
xor
sbb
cli
repz
test
inc
and
ljmp
push
or
sub
inc
stos
and
fs
fsts
xor
or
out
mov
int
sub
dec
adc
cmp
shlb
mov
mov
orps
pushf
rclb
push
and
mov
lcall
pop
jo
push
push
stos
add
jmp
cmp
jnp
fdivl
cs
push
mov
cmc
test
push
enter
cmp
fs
stos
mov
sarl
outsb
and
mov
js
sub
orb
xor
or
lods
insb
lods
and
mov
lods
insl
add
repz
pop
fstl
dec
dec
inc
or
push
sub
jae
mov
and
cld
fldl
sbb
cmc
inc
int
js
popf
sbb
jle
rcr
xor
jle
es
push
cmp
push
out
sub
es
inc
sarb
int
adc
adc
xchg
pop
cmpl
bound
pop
mov
bound
ss
or
addr16
lahf
loopne
mov
xchg
pop
push
rcrb
mov
faddl
jmp
enter
cmp
cmp
mov
in
in
outsl
adc
jl
sbb
add
pop
or
dec
ss
test
std
stos
lock
ja
std
rorb
dec
stos
mov
loopne
fsubr
jecxz
sahf
pop
or
and
sub
out
rcrb
and
inc
mov
inc
sub
xor
xchg
ja
push
xor
xor
loope
mov
jne
xchg
and
adc
lret
jg
inc
out
push
in
jb
nop
ss
adc
lods
out
cmpsb
push
nop
clc
mov
ret
adcb
or
fimull
push
mov
sbb
or
push
mov
in
outsl
into
icebp
push
mov
rcrb
jne
mov
push
test
cmp
sub
outsb
ja
xor
mov
inc
mov
push
pop
adc
mov
stos
push
aam
push
and
fcompl
nop
clc
shl
adc
mov
or
cmc
mul
fstps
loopne
push
sbb
stc
int
mov
cmpsl
lret
pop
inc
jns
pusha
loope
rcr
cmp
mov
and
mov
vcvtdq2ps
in
fcmovb
or
jnp
popf
mov
fsubs
dec
into
in
xlat
lods
shll
mov
xchg
jmp
mov
push
into
andl
jb
push
pop
add
inc
mov
inc
jns
and
and
mov
jb
mov
push
imull
jbe
jbe
dec
xor
stos
xchg
shlb
inc
xor
aad
xor
xchg
push
cmpsl
lods
dec
adc
insb
sub
imul
jp
mov
js
sub
lods
jnp
lock
loopne
outsl
call
iret
push
movsb
mov
dec
arpl
movsl
mov
imul
push
pop
xchg
in
cmc
rorb
or
push
ss
jno
pusha
fnstsw
cwtl
cmp
aaa
fwait
cmp
std
sub
or
stc
xchg
cmpsl
dec
mov
cmp
jo
and
pop
cld
lcall
insb
js
lahf
pop
push
subl
jbe
cmp
mov
ja
inc
cmpsl
dec
push
push
lods
xchg
fiadds
fiadds
movsb
loopne
mov
imul
mov
stos
cld
and
dec
mov
movsl
aaa
dec
popf
data16
arpl
dec
bound
sahf
lcall
roll
in
in
lods
lods
fistl
sub
cmpsl
repz
fsub
mov
xchg
dec
mov
and
xor
add
jns
jge
jae
sahf
cmp
mov
aas
repz
fs
mov
jp
adc
sub
rorl
mov
pop
nop
inc
sub
test
or
cmp
push
lahf
ret
add
and
add
popf
add
int3
xchg
out
jmp
xchg
and
leave
jp
adc
jmp
sbb
adc
stc
inc
jecxz
jns
xlat
mov
adc
dec
xchg
fdivr
icebp
pop
xor
pusha
pusha
and
loope
repnz
pop
loop
jno
scas
jp
inc
push
scas
addl
aam
push
mov
loopne
fwait
or
cmpsb
rcr
add
imul
frstor
sarl
leave
dec
frstor
mov
int
add
lods
add
in
cmp
ds
sub
cld
aad
fs
data16
ret
pop
add
xchg
stc
out
pop
inc
gs
push
incb
push
in
dec
cmpsb
sar
pop
sub
pop
dec
cwtl
xchg
pop
ljmp
jecxz
icebp
shlb
jb
xor
lcall
dec
jmp
mov
push
mov
ret
es
fsubrs
or
pop
test
ss
filds
xlat
shrb
movsb
repz
data16
cwtl
sbb
mov
repz
dec
mov
fcmovnb
fwait
mov
sbb
add
stc
mov
and
ljmp
pop
sub
call
repnz
jl
in
ret
inc
cli
add
inc
ljmp
xor
and
lods
add
hlt
add
cwtl
mov
mov
jnp
adc
fsubs
repz
insb
mov
mov
add
jle
dec
sbb
and
pusha
or
shr
and
push
das
push
ja
add
lret
out
sub
or
sub
test
std
jns
adc
je
daa
in
es
add
mov
pop
insb
inc
in
push
mov
popa
out
xor
or
pop
and
mov
cmp
sub
cmpsl
push
sub
mov
outsb
add
std
fiaddl
add
les
jl
xchg
repnz
or
mov
add
mov
in
dec
cltd
inc
mov
test
in
pushf
and
inc
adc
xor
pop
or
jp
xchg
rcll
or
or
push
push
test
xchg
jl
sub
mov
stos
sbb
pop
mov
das
out
adc
push
jns
push
or
mov
xchg
xor
pusha
xor
clc
mov
adc
sub
inc
fs
and
inc
aaa
out
ljmp
lcall
aas
lret
jmp
or
clc
sbb
aad
stc
adc
jmp
sbb
dec
xchg
inc
int
xor
jbe
in
pop
pop
mov
movsl
shlb
loop
add
cs
aad
pop
arpl
pop
cltd
mov
cmp
jle
sahf
addr16
movsb
mov
test
dec
es
mov
outsb
clc
sbb
jns
mov
mov
cmp
push
push
out
sub
mov
int3
in
sub
cwtl
adc
sbb
jae
cltd
mov
xor
sub
xchg
fstpt
mov
cmp
and
fistpll
ret
dec
outsl
fdivrs
and
xchg
dec
pop
cmpsb
add
loopne
jno
xchg
xor
dec
xchg
or
call
mov
sarl
jmp
out
lahf
popl
sub
or
arpl
enter
pop
lret
mov
cs
pop
das
xchg
repz
mov
xor
jbe
gs
lods
xchg
lock
imul
lea
sahf
or
dec
cmp
sub
fmull
xor
rclb
dec
orb
fucom
lock
adc
lea
cmp
jno
pop
lods
cld
hlt
xchg
js
cmp
or
cmp
adc
adc
push
xor
nop
pop
jne
mov
and
movsl
jg
inc
cmp
in
sbb
ret
imul
add
push
sub
xor
pop
std
stc
lret
outsb
push
ret
fdivrs
aaa
cmc
push
inc
inc
push
cmpsb
data16
pop
jns
cs
fldt
jg
stc
dec
xchg
mov
inc
andl
push
popf
jl
aaa
ja
bnd
mov
sahf
or
scas
jnp
movsb
push
jmp
loopne
dec
push
xchg
mov
pusha
push
adc
mov
fs
pop
push
adc
sub
mov
adc
es
sub
or
xchg
sbb
iret
mov
cld
das
add
jne
pop
fs
pop
int
push
cmp
pop
shll
lods
sarb
dec
enter
mov
xchg
scas
nop
push
xor
cs
loopne
mov
fs
cli
rcrl
sbb
mov
repz
lock
inc
xchg
decl
inc
jb
sahf
sub
or
sbb
jo
repnz
sahf
push
pop
or
mov
push
rclb
push
notb
inc
jp
xchg
xor
mov
enter
insl
adc
push
or
dec
xor
or
movsb
les
dec
leave
and
stc
mov
mov
and
mov
in
fstpt
push
jbe
xlat
movsl
xor
mov
pop
addl
xchg
scas
adc
hlt
arpl
push
adc
push
daa
int3
cmpsl
dec
mov
or
push
imul
adc
fisttps
in
mov
test
int
inc
mov
mov
les
lahf
push
adc
repnz
sti
and
cltd
sbb
jnp
push
outsb
movsb
sbb
lret
ror
mov
jmp
mov
mov
cmp
mov
aad
decl
inc
pop
and
xor
pushf
test
xchg
dec
mov
xlat
or
fmull
scas
inc
add
mov
pop
lahf
cmc
jns
pop
loop
push
sarb
inc
xorb
lret
push
adc
fstps
sbbb
popf
xor
dec
inc
cld
daa
push
xchg
aam
mov
push
loopne
fnstenv
enter
jle
mov
add
dec
pop
adc
pusha
inc
lods
sbb
dec
and
mov
ror
jmp
add
fsts
jo
mov
sti
out
sarb
shlb
test
jns
repz
sub
pusha
scas
pop
inc
push
dec
cmp
add
pop
out
sbb
mov
adc
jne
jle
dec
cltd
or
jmp
scas
mov
cmpb
scas
es
and
push
push
movsb
xchg
inc
sub
sbb
lods
nop
loope
mov
jns
ret
xor
outsl
int3
push
and
jp
cmp
dec
mov
mov
xor
pop
sub
ficompl
jae
xchg
sbbb
repnz
popa
loop
push
adc
pushf
jge
add
aam
push
or
sub
sub
sbb
popa
push
aaa
lock
xor
cmc
nop
or
outsb
sbb
xlat
or
pop
and
cmp
xchg
or
daa
sbb
inc
sbb
inc
bound
mov
push
dec
xor
dec
jp
lds
shl
int3
test
mov
add
subb
dec
mov
std
pop
rcrb
mov
push
imul
out
pop
xor
push
call
and
push
mov
scas
and
jns
in
sbb
pop
pop
jo
sub
cs
lret
popf
cmp
popa
adc
or
stos
or
adc
push
je
cmpl
push
iret
xor
mov
enter
insl
xchg
fnstsw
repz
sub
test
sbb
and
movsb
mov
adc
cltd
dec
imul
popf
inc
xchg
dec
mov
std
xor
in
fwait
out
lds
inc
dec
rcrb
cmp
sbb
ja
and
jnp
add
fcom
movsl
mov
daa
test
sbb
cmc
sbb
mov
jle
xchg
sub
cld
notl
std
lahf
addb
dec
push
adc
pop
ret
push
mov
xchg
or
adc
sarl
lret
fdivs
frndint
mov
imul
dec
sarl
mov
push
fcompl
scas
or
mov
setne
cs
mov
cwtl
jge
pop
mov
push
sbb
inc
jbe
xor
test
rcl
sub
shufps
ret
nop
rorb
cmp
adc
cli
gs
in
jne
stc
movsl
mov
scas
addr16
add
subl
push
sub
nop
hlt
lcall
xchg
into
mov
sbb
mov
and
push
cltd
imul
fidivl
xchg
xorl
call
cli
in
and
add
scas
xlat
repnz
mov
mov
mov
imul
jge
push
adc
gs
mov
cld
fwait
jg
sub
and
push
cli
jp
pop
dec
jl
or
in
add
mov
cli
mov
out
gs
dec
or
fistpl
stos
jge
or
jg
push
rclb
addr16
and
lock
mov
adc
cwtl
add
add
test
jecxz
fwait
push
fbld
rclb
ljmp
insb
lds
outsb
std
and
sub
fadds
xchg
dec
xchg
pushf
imul
and
js
xchg
xchg
insb
xchg
into
idiv
leave
gs
je
inc
data16
sbb
xor
adc
hlt
pop
pop
sbb
lock
pop
mov
adc
mov
ret
std
imul
lock
lock
xchg
lret
ja
push
mov
notb
pop
push
pop
fld
mov
or
lcall
call
insl
cmpsl
and
adc
pop
or
and
and
clc
dec
icebp
xor
stc
mov
mov
divb
inc
pusha
ja
jnp
lds
jge
inc
mov
add
out
and
xor
pop
push
mov
aas
lock
scas
xor
pop
ud1
insl
inc
dec
add
push
xor
hlt
incb
ja
mov
aas
dec
js
xchg
fptan
pushf
jg
fsubrl
sbb
test
notl
inc
push
cmp
cmp
jl
nop
ltr
popa
std
lcall
rcl
cmpsl
push
es
hlt
rcrl
and
fcmovnbe
dec
cli
inc
mov
pop
push
test
sub
dec
push
repnz
inc
out
sub
mov
in
std
add
cmp
je
in
cmpsl
lods
out
push
mov
sti
xor
adc
jl
inc
ret
addr16
cmp
mov
fmuls
sbb
sub
and
cwtl
or
inc
dec
hlt
into
popf
jge
adc
sarl
jnp
dec
xor
lea
in
gs
lcall
call
adc
adc
and
add
ret
std
jge
mov
cmp
inc
cli
adc
idivb
cmp
and
pop
and
pop
jl
pop
and
hlt
pusha
popa
mov
loop
test
sbb
arpl
adc
mov
pop
jne
mov
in
jp
dec
out
aas
cltd
and
mov
lds
in
mov
xchg
mov
dec
jne
roll
das
faddp
insl
mov
pop
lea
xchg
and
insl
jl
sbb
jecxz,pn
inc
jae
push
cmp
sub
movsl
fmul
dec
sub
mov
add
inc
movsb
inc
xor
lret
inc
mov
insl
adc
not
fs
lock
pop
ss
insl
dec
jnp
xchg
mov
adc
mov
test
lahf
js
pushaw
popa
sbb
lret
push
pusha
hlt
hlt
mov
call
call
and
bound
sub
pop
pop
out
inc
jg
add
add
cmp
movsl
into
xchg
in
jge
push
shll
cmp
rcrb
mov
sbb
test
push
mov
mov
xchg
pop
adc
xor
mov
xor
fsubs
mov
sti
pop
xchg
mov
aam
stos
nop
jno
jge
addb
xor
outsl
inc
jmp
lods
dec
pop
mov
clc
push
inc
cli
cmp
push
pop
daa
cmp
jbe
cmpsl
je
push
xchg
repnz
add
pop
add
aaa
add
inc
das
xorb
add
mov
pop
clc
sub
js
lods
mov
loop
pop
push
shl
xchg
divl
sub
xor
jne
jg
mov
xchg
inc
in
push
cwtl
scas
xchg
out
dec
sbb
movsl
shll
fistps
push
add
out
push
mov
test
xor
mov
pop
jp
loope
aam
push
add
cmp
add
pop
sub
scas
lock
push
addr16
sub
out
xchg
adc
and
or
out
xchg
mov
sub
call
dec
mov
in
jge
stos
mov
lods
mov
negl
lock
out
pop
jmp
pop
jbe
rorl
outsl
in
jle
das
cmp
sub
fidivrl
les
inc
push
je
push
xchg
push
sti
lods
jbe
or
pop
sbb
sti
sbb
dec
scas
mov
leave
push
pop
cmp
cmc
jmp
pusha
mov
mov
scas
stos
test
and
xchg
sbb
fmull
lds
imul
xchg
lds
add
mov
es
ficomps
or
pop
mov
cmp
sub
adc
push
jmp
in
stc
mov
pop
pop
xor
mov
jbe
fdivs
adc
sub
gs
inc
int
repz
and
add
cmp
dec
bound
movsb
xlat
aaa
xor
pop
cli
lds
xchg
lahf
dec
push
imull
adc
outsb
or
in
push
xor
and
xchg
xlat
cmp
and
xor
mov
inc
fistps
lahf
adc
jne
icebp
jne
gs
lock
xor
ret
jbe
mov
jns
frstor
or
cmp
adc
test
xor
and
add
adc
add
xor
or
testb
out
xor
cmp
les
fs
mov
pop
les
jns
xor
sub
ja
mov
add
test
mov
mov
inc
push
and
mul
dec
into
fdivp
pop
bound
cld
es
data16
inc
mov
inc
inc
jle
test
mov
mov
orb
pusha
das
xchg
push
aad
ja
mov
sti
test
gs
out
ds
add
in
xchg
pop
cmp
push
gs
inc
push
cmp
popf
int3
mov
or
pop
cmp
inc
insb
je
jg
std
les
push
nop
pop
arpl
mov
int3
mov
cmp
shlb
jnp
sbb
lahf
push
add
mov
out
fmuls
or
mov
iret
std
lds
push
jge
test
dec
mov
das
mov
nop
es
jb
xchg
std
test
sbb
pop
jg
cmp
repz
dec
jbe
inc
clc
adc
call
inc
arpl
into
mov
or
iret
cmpsl
outsb
mov
xchg
scas
test
push
cli
adc
les
stos
lret
pop
mov
push
dec
es
inc
or
out
push
lods
icebp
addr16
dec
sub
mov
dec
cmpsl
cmp
dec
xchg
mov
or
push
pop
sbb
cs
insl
outsl
and
mov
xchg
push
sub
push
or
mov
and
rcrl
push
mov
push
insb
mov
mov
in
sub
fsubr
into
inc
popl
inc
push
pop
sbb
imul
push
jnp
rcl
push
mov
loop
adc
jecxz
mov
push
fisttpl
ret
imul
push
dec
dec
pop
inc
testl
and
adcb
jecxz
xchg
sub
imul
jmp
insl
jle
cmpsl
and
dec
fdiv
fisubrs
addr16
nop
xor
dec
jb
lret
or
pop
aad
outsl
push
and
push
mov
cmp
add
jecxz
aaa
mov
aam
jno
repnz
aas
mov
js
jae
mov
ljmp
sbbb
and
sti
call
push
divl
mov
fnstenv
sub
pop
sbb
inc
inc
mov
xchg
jnp
in
mov
xchg
mov
jbe
mov
icebp
dec
lret
mov
mov
dec
nop
popf
cmp
iret
dec
loopne
imul
jmp
shrb
stos
aam
mov
pop
testb
iret
dec
pop
push
rorb
mov
push
jo
add
adc
fs
mov
mov
cmp
fwait
pop
jne
cmpsl
mov
adcb
pop
or
decl
jbe
mov
jmp
push
mov
je
sub
in
dec
bnd
in
sub
loopne
leave
in
xchg
push
rclb
pusha
inc
and
jp
roll
in
outsb
rcpps
inc
jle
pop
cmp
in
and
or
add
ds
fistpl
xchg
loope
fsubp
mov
ret
repnz
or
fldt
pop
xchg
jnp
subl
add
mov
lret
mov
jae
out
fcmovnbe
rcll
push
mov
push
mov
push
mov
mov
fistpl
cli
test
shr
push
sub
aaa
inc
cld
lahf
addl
out
and
nop
mov
stos
jmp
or
mov
aad
push
jle
in
push
loop
daa
sub
sahf
movsl
mov
jno
or
or
push
add
add
shlb
mov
test
jecxz
xor
mov
adc
inc
ss
lds
dec
test
in
mov
repnz
stc
cli
jle
adc
call
mov
data16
fmulp
inc
mov
lret
fistl
adc
sub
out
std
popf
cmpsl
aam
inc
cwtl
xchg
jns
cs
cmp
push
adc
inc
cmp
mov
pop
pop
pusha
inc
int
test
out
adcl
loopne
mov
mov
out
pushf
inc
pop
pop
daa
pop
insb
xchg
jg
adc
imul
rolb
pop
les
mov
xchg
sbb
repz
aad
cwtl
cmp
inc
cmp
pop
movsb
add
cmc
in
js
xchg
and
mov
pop
dec
mov
mov
dec
xchg
inc
stc
and
jmp
dec
lods
mov
mov
and
xchg
and
xor
int3
jge
xchg
adc
lret
sbb
mov
push
stos
mov
imul
sub
cs
lock
sub
aas
je
jnp,pn
lods
addr16
jge
loop
mov
pop
dec
popa
add
pop
jg,pn
ljmp
fidivs
pop
adc
filds
adc
outsl
hlt
dec
mov
divl
sbbl
aad
jge
in
push
or
push
xchg
test
rol
dec
loopne
mov
pop
inc
or
mov
cmp
xchg
test
rcll
xchg
setg
or
mov
hlt
test
jo
outsl
mov
adc
xchg
test
or
fsubrs
jp
xor
dec
es
ss
pop
in
mov
add
cmp
cli
test
sub
std
stc
add
or
mov
imul
push
mov
jg
mov
pop
lods
movb
pop
jge
bound
dec
pop
hlt
out
xchg
lcall
arpl
fwait
stos
xor
ds
mov
cmp
sbb
sbb
scas
jmp
imul
imul
xor
lea
add
cmp
cli
dec
xor
orb
push
lcall
mov
jne
inc
and
pop
push
xlat
testl
sbb
xchg
xor
leave
jg
repz
and
cli
cmp
xchg
scas
addb
ds
out
jb
mov
jnp
dec
jo
dec
insb
shlb
outsb
scas
enter
jmp
rcr
jno
push
fwait
cmp
add
fcomps
mov
jo
sarb
std
insb
jle
pop
in
mov
jecxz
hlt
sub
mov
in
cld
xchg
mov
arpl
cmp
imul
dec
shlb
fcoml
inc
inc
cmp
js
popa
xchg
adc
mov
xchg
jnp
add
out
xchg
jae
mov
fisttpll
mov
sti
cmp
imul
jo
inc
enter
inc
xlat
dec
enter
scas
push
pop
xchg
jne
aam
dec
adc
cwtl
push
fistpl
pop
fists
in
les
push
aad
in
pop
lcall
push
and
lret
or
and
xchg
sbb
mov
fisttps
loope
out
sub
test
xchg
and
fisubl
mov
inc
repnz
jp
or
jp
or
idiv
xchg
cltd
outsb
xor
in
dec
dec
mov
push
adc
or
mov
jp
cmc
push
movsl
xor
jnp
stos
aas
ret
daa
xlat
mov
xlat
cmp
repz
xor
mov
sub
dec
lea
repz
xlat
fmuls
push
mov
jb
lea
daa
lods
jo
cwtl
ja
ret
out
mov
add
imul
jno
sub
test
stos
scas
hlt
aas
dec
xor
int
adc
fstpt
cld
xor
movsl
jl
cmp
test
xor
enter
adc
int3
xchg
mull
push
cmp
out
xchg
lds
leave
inc
adc
pop
jl
adc
in
and
sbb
sub
xchg
in
fists
and
sub
int
xor
nop
push
xchg
ret
in
loope
jecxz
rcll
out
ret
mov
and
mov
sbb
out
cli
inc
scas
and
xchg
jp
in
fcom
mov
ret
pop
sub
sub
loop
dec
add
cwtl
in
jecxz
fwait
orl
les
stc
mov
xlat
repz
jns
dec
jge
mov
jae
int3
lahf
loopne
cmc
sbb
push
les
adc
mov
addr16
cltd
or
sarl
jbe
jmp
push
outsb
and
in
popf
test
inc
in
cltd
mov
out
fmul
sbb
out
cwtl
pusha
aam
pop
xchg
add
jae
mov
mov
add
xchg
cmc
xor
sbb
cli
inc
inc
cs
dec
jne
inc
mov
jl
xor
pop
jae
in
lahf
aam
stos
mov
loope
xchg
cli
and
lcall
mov
cmp
push
jb
push
or
xchg
pop
push
cmc
mov
repnz
xor
mov
stc
push
int3
lock
out
nop
mov
popl
or
push
sub
sahf
insb
jmp
or
dec
mov
idivb
bound
push
sub
loop
push
rorl
or
sub
in
push
arpl
jnp
arpl
imulb
popa
fs
inc
movsb
xor
pop
outsl
add
fistps
add
fwait
push
jns
pop
sub
or
push
ljmp
pushf
cmp
xorl
push
bound
mov
add
sbbl
push
cwtl
cmpsb
cli
jo
or
sub
cld
sbb
or
stos
jno
push
rclb
jns
xchg
or
test
jmp
and
hlt
mov
cmp
mov
and
add
sub
or
xor
mov
dec
std
in
cli
popf
mov
xchg
test
xor
xchg
jp
gs
jno
and
lcall
in
jecxz
ja
out
lret
pop
rorl
push
pop
xchg
cwtl
push
cmpsl
dec
std
push
xchg
out
pop
jmp
pop
dec
inc
outsl
and
add
pop
pop
mov
movsl
lods
jbe
cmp
mov
jb
cmp
lods
test
es
jmp
mov
dec
sbb
pop
je
out
pop
mov
in
dec
leave
popf
and
and
fstpt
mov
inc
loopne
test
and
aaa
push
push
in
push
lcall
data16
pop
hlt
in
insl
into
stos
pop
lods
cmp
jle
mov
add
add
xor
test
lds
or
xor
dec
sbbb
push
mov
iret
mov
jnp
inc
adc
add
clc
adc
cs
mov
lods
add
insb
enter
push
repnz
enter
aam
cwtl
mov
cli
jge
sbb
or
inc
lret
mov
stc
sub
ficoms
inc
sti
out
or
rolb
stos
icebp
add
sub
xchg
and
ss
dec
mov
sbb
pop
loop
push
shlb
or
je
inc
xorb
jge
inc
mov
sbb
jb
shr
push
add
sub
movl
aad
aas
xor
jl
sbb
cmpsl
and
or
imul
sbb
scas
add
mov
sub
out
pop
mov
stos
les
pop
xor
mov
rolb
icebp
pusha
pop
mov
shlb
rcrl
xor
jecxz
loope
loopne
xor
leave
sete
mov
and
ds
inc
imul
sub
push
pop
popf
jb
mov
inc
cmp
lods
dec
je
mov
hlt
push
lahf
jo
test
jmp
aam
mov
std
subl
jo
adc
add
sub
jl
mov
push
popf
shrb
xor
ss
mov
jno
adc
add
or
sub
mov
ds
outsb
and
nop
ret
adc
cmp
js
stos
adc
inc
rolb
inc
mov
add
in
test
mov
mov
loopne
cli
dec
lods
xor
mov
fucomi
scas
xor
inc
adc
and
pop
arpl
add
cmp
xchg
outsb
and
push
xor
fbld
test
paddq
xchg
lcall
dec
mov
fstps
add
pop
add
sub
or
imul
add
push
call
dec
push
pop
fsubrs
pop
mov
std
ror
mov
sub
jmp
push
jne
insb
cmp
int
jne
sbb
mov
or
mov
stos
cmpsl
jmp
sti
dec
insl
lahf
scas
inc
xchg
push
repz
imul
push
fdivrs
lahf
inc
out
pop
mov
push
mov
aam
adc
std
outsl
xchg
push
sbb
lods
mov
lods
gs
xchg
movsb
ret
addr16
imul
jg
sbb
mov
lcall
xchg
add
mov
inc
test
hlt
mov
ret
pop
repz
imul
dec
dec
shl
call
xchg
test
push
aas
loope
dec
cs
icebp
mov
lret
sbb
cmpsb
mov
mov
mov
or
inc
cld
popf
int
mov
cmp
cmc
and
mov
std
xchg
jge
cmp
sbb
mov
cli
cli
mov
lods
insb
mov
fistpl
jl
sbbb
movsb
sbb
dec
mov
out
mov
or
daa
xchg
xchg
add
inc
mov
out
and
je
inc
adc
insl
jle
insb
mov
jecxz
cmp
mov
cwtl
add
iret
iret
xchg
inc
mov
lea
mov
scas
and
leave
dec
aas
cmc
test
addr16
fldl
push
mov
repz
mov
jnp
outsl
pop
aaa
xor
out
clc
movl
adc
gs
mov
ret
jl
cld
popa
jl
xchg
xchg
add
adc
jp
push
mov
aam
fs
jb
sarl
psubd
clc
mov
daa
lea
stc
mov
repz
das
push
mov
fsubp
or
out
sbb
ljmp
adc
mov
adc
leave
mov
popf
pop
jmp
jge
repz
push
and
jmp
dec
sbb
mov
repz
popf
add
test
mov
ret
scas
push
mov
sbb
and
or
rcl
fbld
and
je
bound
shr
jbe
cmp
les
int3
pop
lock
fildll
sbb
cmpsl
add
in
lea
cmp
xor
sub
lds
mull
cmp
xchg
int3
fwait
adc
mov
shl
mov
mov
push
psubsb
push
jp
jl
aad
jo
iret
jnp
jle
xchg
in
adc
pop
mov
out
gs
scas
add
mov
mov
mov
push
mov
sub
jno
mov
daa
ss
dec
xorb
fisttpl
fstpl
xchg
fnsave
bound
pop
jb
ficomps
mov
std
lret
cmp
ja
fwait
mov
and
lods
es
mov
loopne
scas
popf
add
call
adc
ljmp
and
add
adc
push
add
mov
aas
movsb
scas
sbb
adc
ficoms
outsl
sbb
adc
jnp
lret
add
pop
adc
mov
sbb
and
aam
fsubs
out
xchg
sub
push
lea
loop
xchg
inc
pusha
clc
in
pop
pop
pop
stos
xchg
lcall
xchg
push
js
sbb
mov
jecxz
nop
jbe
out
pushf
sub
scas
xchg
push
outsl
leave
je
mov
icebp
sub
push
sbb
ret
fisubs
dec
test
cmp
mov
mov
jg
xchg
movsb
and
xor
push
or
push
call
outsb
test
adc
push
push
sti
xor
test
jnp
push
es
mov
std
push
sbb
or
mov
cmp
popa
stos
xchg
cwtl
shrb
lahf
xor
in
mov
mov
sub
dec
shrl
lahf
inc
fdivrs
or
fisttpll
in
and
xlat
xor
push
fisubl
in
xor
fisttpll
adc
bound
or
inc
pop
arpl
push
sahf
xlat
pop
xchg
pusha
push
pop
mov
pop
adc
fwait
pop
push
xchg
dec
and
xor
rcrb
outsb
inc
test
ret
dec
mov
push
push
sbb
push
cli
rcl
mov
lret
dec
ljmp
xchg
mov
pop
jl
call
xor
add
sbb
sbb
fisttpll
cli
mov
sahf
in
add
fstp
inc
jo
sbb
mov
push
sahf
sti
cld
xchg
insb
mov
fisttpl
cli
sub
shr
lcall
push
mov
cmp
or
jle
jle
call
pop
adc
lret
ljmp
fimull
push
sarl
and
sub
into
mov
mov
push
movsb
push
xchg
mov
cmpsb
xchg
push
nop
inc
cmpsl
mov
lock
push
iret
push
or
xor
xor
lods
mov
cli
loopne
lret
jl
lahf
cmpsl
add
call
cmp
pop
ret
adcb
popa
jmp
mov
stc
mov
xor
sbb
mov
outsl
mov
adc
ret
cli
push
iret
mov
out
push
enter
sub
mov
cwtl
adc
scas
inc
xor
dec
cmc
cmp
fsubrl
lock
rclb
push
or
mov
arpl
popf
movsb
fidivrl
cld
out
jns
aas
add
push
lods
sbb
popa
inc
cmp
xor
rcl
fidivl
adc
test
cltd
int
and
adc
fwait
sahf
cwtl
sbb
repz
leave
subl
lcall
mov
sub
push
or
lods
std
subb
das
push
scas
mov
inc
repnz
pop
decb
xchg
cmp
and
pop
push
jge
xor
loope
push
sub
sbb
pop
jp
mov
dec
dec
mov
test
lcall
fdivrs
outsb
pop
negb
into
add
cmc
sub
std
shll
xchg
mov
jne
rcrb
lret
sbb
sbb
es
scas
movl
int
rcr
mov
sti
sar
imul
push
add
inc
popa
test
test
idivb
scas
movsl
dec
xchg
jl
add
pop
or
push
cmpsb
jns
jge
xchg
bound
dec
fdiv
es
jo
mov
sub
mov
xor
jae
loopne
pinsrw
lds
push
popf
add
lods
jbe
sti
inc
lea
sbb
shrb
mov
into
stos
fsub
add
repnz
aaa
mov
lds
adc
fcom
and
push
and
mov
clc
add
lahf
cmp
lock
jmp
pop
notl
add
ja
mov
mov
xlat
xor
cmpsb
lods
pop
je
loop
xor
cld
leave
pop
lcall
push
lret
cmp
xchg
xchg
popf
sbb
clc
push
xchg
sub
inc
pushf
mov
jae
hlt
pop
mov
push
jge
std
out
iret
mov
lods
imul
sub
jl
aas
inc
bound
inc
loope
push
pusha
sahf
or
pop
xor
out
push
ret
aad
les
jl
adc
mov
dec
sub
inc
xor
mov
jl
fwait
in
pop
cmp
adc
lods
xchg
js
jo
test
rcrb
imull
scas
xchg
mov
hlt
sbb
stos
lret
xchg
mov
fnstcw
sbb
sub
pushf
adc
xor
call
loopne
popf
push
or
ret
sbb
cltd
stos
cltd
cmp
jae
int3
or
adc
add
sbb
mov
adc
jns
adc
jp
leave
and
repnz
and
or
cmp
test
insl
insb
dec
xor
xchg
xor
mov
in
sub
mov
sub
addb
cmpsb
std
insl
int3
popa
popf
arpl
and
int3
js
pop
push
push
add
cmpsb
scas
inc
dec
mov
mov
pop
popa
daa
hlt
stc
js
sti
or
imul
fistl
dec
inc
out
cmc
int
xor
lahf
mov
insl
insl
push
out
std
inc
adc
dec
and
sbb
jb
jge
pushf
loopne
bound
dec
lret
jl
add
sbb
push
mov
stos
lods
fidivrl
dec
cmp
sbb
pushf
lcall
rcrl
in
push
cwtl
jnp
pop
test
fistpl
out
lods
fcoml
lock
clc
fildl
lock
out
add
xor
xchg
dec
xchg
push
js
insb
ljmp
lret
and
or
mov
mov
inc
repz
pop
jmp
push
sbb
jle
lock
cmp
push
adc
xorb
cmpsb
xor
sbb
lods
push
inc
sbb
mov
jp
inc
jo
mov
or
push
pop
out
mov
int3
mov
sahf
imull
inc
jge
pop
lea
shlb
xlat
and
sub
inc
insl
scas
ss
push
or
jmp
inc
cwtl
out
gs
jmp
outsl
and
int3
cld
mov
dec
inc
daa
mov
pop
cmpb
lea
in
pusha
add
xchg
mov
cltd
repnz
jmp
hlt
xchg
pop
add
sbb
jae
leave
push
test
fmuls
xchg
or
pmaddwd
push
mov
mov
and
or
xor
mov
nop
adc
es
hlt
fbld
fstpt
es
movsb
stos
lea
cltd
pop
cmpsb
add
push
clc
dec
sub
xor
pop
sbb
mov
and
or
pop
sbb
inc
add
mov
movsb
mov
mov
mov
and
mov
scas
xchg
std
leave
mov
lea
fmull
xchg
add
enter
lahf
orb
cmpsb
pop
rolb
mov
cmpsl
push
loopne
push
mov
xor
mov
add
xchg
inc
pop
push
add
inc
out
mov
add
loop
xchg
imul
imull
bound
inc
in
mov
sub
loop
inc
mov
loope
fwait
push
jecxz
mov
fdivrl
int
fcomps
add
add
mov
fadds
pop
mov
ret
mov
mov
mov
cwtl
adc
inc
mov
sub
adc
ds
out
test
arpl
icebp
add
mov
xor
or
imul
push
xchg
xchg
ficoml
ja
add
mov
test
test
xor
or
mov
je
xor
dec
daa
jle
fdivr
in
dec
out
add
inc
xor
xor
dec
cmp
inc
add
js
in
cltd
push
arpl
ret
sbb
aam
pop
mov
pop
aam
inc
mov
out
cmp
negl
shll
mov
inc
into
ja
les
mov
mov
movsb
aad
lret
test
inc
cwtl
add
mov
test
jl
fimull
lods
inc
out
pushf
bnd
fadd
push
or
cwtl
lcall
and
incl
movsb
mov
sub
xchg
mov
test
fnstcw
bound
mov
xcrypt-ofb
cmpsl
outsb
mov
mov
sti
pop
nop
repz
pop
push
mov
mov
push
mov
rorb
addr16
xor
into
jae
movsl
xchg
loope
mov
mov
mov
lcall
aaa
mov
int3
pop
je
jge
stos
into
sub
xchg
cmc
subl
lret
adc
dec
popa
stos
std
cltd
jge
adc
xchg
mov
dec
ret
popa
cmpsl
pop
mov
dec
push
push
icebp
call
pushl
ja
int
dec
dec
sub
repnz
adc
test
jecxz
icebp
mov
sbb
xchg
and
jne
call
jb
mov
jno
pop
add
cmp
jns
mov
jbe
inc
xor
into
test
cmp
cmp
jae
xlat
push
adc
clc
insb
int
inc
jecxz
push
aad
xor
cmc
xlat
and
push
aad
arpl
gs
lods
inc
shl
je
cltd
push
fisttps
mov
or
mov
andb
sub
push
adc
rol
daa
xor
sbb
pushf
pop
enter
or
cwtl
cs
in
fmul
adc
mov
pop
fs
lret
adcl
pop
dec
jecxz
fimull
stos
inc
cli
or
mov
lret
adc
mov
inc
adc
dec
and
lcallw
les
loopne
add
push
sbb
mov
lcall
inc
cmpsb
mov
loopne
outsl
push
aaa
scas
push
add
cld
pop
xor
mov
cwtl
rcr
hlt
jle
fwait
popf
sti
add
dec
xor
fs
roll
cmp
lfs
pop
jle
je
clc
sub
push
out
pusha
loopne
xor
es
cmp
push
dec
int
inc
xchg
leave
jo
sbb
ja
mov
ja
fld
mov
dec
imul
mov
dec
mov
out
imull
dec
mov
mov
add
cmpsl
add
mov
xlat
pop
shl
and
cld
mov
push
add
inc
cmp
ljmp
push
cmp
lods
or
jl
mov
lcall
cmc
hlt
das
pusha
icebp
or
xor
in
mov
mov
mov
fndisi(8087
scas
jl
cmp
inc
pusha
out
icebp
mov
cmc
inc
jl
pusha
imul
mov
sub
add
sti
mov
xlat
jmp
je
mov
jmp
sbb
out
popa
mov
xor
cmp
repnz
in
insl
clc
and
dec
cltd
cmp
jo
and
mov
cltd
jge
popa
arpl
fimuls
pop
fildl
adc
mov
gs
pop
test
xchg
pop
dec
in
push
out
sub
dec
lods
mov
xor
push
gs
stos
sbb
scas
mov
cli
imul
out
lods
sti
mov
add
test
insb
adc
and
xlat
imul
sbb
cmpsb
xchg
loop
adc
mov
mov
icebp
cli
lods
mov
popa
adc
out
ja
fildl
inc
popaw
xchg
or
negb
xchg
das
add
fdivl
scas
data16
js
push
jg
andl
int
mov
jmp
inc
xchg
sbb
pushf
ret
dec
adc
jmp
stc
push
fwait
pop
movsl
jae
push
jg
ss
mov
inc
iret
xchg
insl
add
sbb
push
push
mov
lret
sub
rorl
mov
mov
xchg
push
push
cmpsb
imul
cs
mov
cmpsl
mov
pop
xchg
adc
lds
fildl
mov
loope
xor
push
pop
fwait
cltd
cltd
lock
inc
data16
push
sbb
xchg
roll
jae
or
dec
lahf
jge
lock
rclb
mov
ret
sahf
jmp
jp
lret
dec
sub
fisubrs
jmp
adc
jno
inc
popa
pop
stos
frstor
lds
cmp
jl
mov
jne
xor
or
dec
je
add
and
cli
jae
sahf
lods
jle
pop
das
add
adc
outsl
inc
dec
icebp
aam
hlt
xchg
notb
dec
add
subl
int
cld
mov
push
stos
sub
xchg
mov
adc
jge
test
rol
or
icebp
xor
push
ret
leave
cmovl
xor
xchg
int3
pushf
bound
insl
sbb
push
pop
and
cltd
xchg
cmpsl
fmull
icebp
aam
loopne
add
enter
es
add
nop
out
js
sbb
mov
sub
shll
hlt
jp
outsl
sub
xchg
adc
ja
lret
jbe
or
pushf
pop
add
mov
or
cmp
pop
sbb
inc
and
mov
adc
jl
push
and
mov
mov
lret
push
lret
cs
mov
nop
leave
adc
idivb
adc
cmp
roll
pop
jmp
mov
sub
out
add
push
mov
jno
movsb
lock
push
mov
pop
loop
aaa
insb
inc
jle
icebp
data16
mov
or
pop
and
inc
sub
adc
push
call
lods
push
pop
mov
bound
fcoms
xor
xor
ss
lds
iret
mov
jb
lds
inc
inc
and
sti
aas
cmp
push
xor
mov
cltd
insb
cmc
and
sub
xlat
cmpsl
lret
imul
or
lcall
inc
jnp
and
adc
test
cmpsb
or
inc
or
cmp
cmp
or
fdivs
mov
call
shr
pop
cs
in
lds
xor
add
sub
sbb
pop
shrl
bound
sbb
xchg
jo
outsb
shl
and
sti
jmp
inc
aas
shll
sub
mov
jmp
dec
incb
pop
idiv
roll
cmp
mov
mov
cmp
cltd
adc
clc
mov
xor
xor
push
jmp
mov
jns
int
or
mov
and
add
loop
out
sub
mov
arpl
js
sub
orb
inc
repz
xchg
mov
test
adc
fisubrl
test
cmp
push
mov
rcrb
iret
jne
sub
lea
into
adc
mov
mov
into
mov
pop
add
dec
out
fisubl
cmp
pop
cmp
jae
mov
or
movsb
and
mov
jb
fcmovnbe
pop
aad
pop
jmp
jb
or
add
push
cmp
xchg
push
push
lock
leave
dec
sahf
lods
lods
or
push
imul
iret
mov
lret
in
test
push
lret
jmp
dec
jmpw
imul
repnz
xchg
fistpl
pop
and
cmovb
push
jp
insb
in
addr16
mov
shr
push
jp
jnp
aaa
pop
or
adc
mov
lea
rolb
std
dec
mov
les
adcl
rcll
pusha
sub
adc
push
repz
dec
js
loopne
push
inc
leave
dec
mov
sbb
dec
fisttpll
popf
mov
mull
mov
jo
inc
or
ret
insb
int
mov
rorb
sbb
and
aaa
mov
sbb
dec
jns
sub
or
adc
xor
popa
scas
xchg
cmpsb
hlt
sbbb
aas
repnz
push
mov
mov
jge
mov
jnp
hlt
mov
xchg
or
fdiv
cwtl
ficoml
ret
sbb
int3
and
dec
ficomps
mov
pop
lods
vmread
push
xchg
cltd
ljmp
jge
and
out
mov
in
cmp
popf
pusha
stos
mov
cmp
sbb
aaa
lret
rcl
and
and
xor
jae
jno
inc
xchg
sbb
mov
iret
cltd
pop
xor
iret
sub
mov
data16
leave
mov
mov
jmp
dec
pop
jmp
andb
pop
fstl
fildl
adc
cwtl
in
push
daa
xor
or
sbb
sbb
or
mov
lods
add
push
add
addr16
jl,pt
fsubrs
mov
inc
test
sbb
mov
sub
add
fisubrl
neg
jne
mov
or
arpl
les
movsb
hlt
out
push
stos
jno,pn
sbb
mov
enter
mov
lods
push
int3
jb
dec
jecxz
xchg
mov
stos
std
and
add
dec
fiaddl
aaa
rol
popa
mov
int
mov
outsb
or
and
sub
mov
xchg
xlat
push
pushf
dec
andl
test
pop
cs
cltd
jmp
cmp
mov
xchg
mov
ljmp
movsl
sbb
test
bound
push
dec
dec
add
loope
aam
jl
or
mov
mov
hlt
mov
das
push
rcl
insl
push
sbb
das
mov
gs
shll
cltd
movb
testl
insl
jns
mov
mov
xlat
iret
sbb
jp
fxch
push
lods
jle
and
mov
and
adc
std
mov
stos
inc
cmp
loope
push
mov
mov
xor
sub
ficoms
pop
jg
pushf
movsl
scas
mov
pop
stos
xchg
dec
data16
or
mov
mov
leave
push
idivl
inc
push
lahf
insb
addb
push
mov
add
sbb
xchg
and
push
mov
cld
add
pusha
xor
jmp
jle
fadd
mov
inc
cld
pop
lods
fucom
xchg
fcmovnu
cld
sub
adc
push
jl
int
xchg
pop
shll
ds
mov
outsl
sar
or
aad
sar
add
inc
mov
pop
rclb
mov
jecxz
mov
adc
sub
jle
add
mov
jnp
rorl
xchg
jge
in
mov
aas
out
sbb
inc
jecxz
sub
jge
loopne
jb
outsl
fmuls
mov
push
insl
mov
pop
enter
or
xchg
inc
sub
xchg
push
xor
sub
pop
dec
das
xchg
lahf
mov
popa
lds
or
shlb
cmc
push
pop
ljmp
mov
xchg
adc
mov
adc
mov
cmp
loope
dec
ss
jle
insl
adc
dec
ss
adc
or
xorb
sbb
lods
rcr
aad
sbb
ja
cli
ss
mov
adcb
insl
add
mov
das
into
insb
int
xchg
xchg
adcl
rol
inc
ljmp
pop
cmp
jne
xchg
outsb
push
adc
dec
sbb
cmova
rcrb
in
mov
xor
or
out
adc
repz
insl
mov
loope
mov
mov
pop
clc
clc
decl
inc
and
ja
pop
test
out
ja
arpl
jnp
mov
inc
push
leave
lret
jo
clc
mov
lods
dec
shl
mov
cmp
dec
mov
daa
ss
push
xchg
pop
or
or
push
stos
shll
inc
add
push
lods
xchg
ja
call
mov
pusha
xor
aad
mov
mov
jb
push
idiv
ret
stc
lds
aam
cs
aaa
out
in
shl
add
cmp
dec
inc
jg
sahf
js
shlb
dec
cmp
mulb
movsb
ja
sub
std
hlt
test
int
sbb
cmp
daa
xchg
xchg
imul
mov
test
jecxz
xchg
inc
stos
fucomi
das
jns
sub
gs
pop
xchg
dec
cltd
lea
mov
ja
inc
cltd
push
dec
es
jp
shlb
cli
aam
add
xor
loopne
or
add
hlt
mov
xor
jnp
mov
sbb
pop
pop
or
sub
rorb
mov
enter
mov
les
mov
jnp
dec
cld
imul
pop
jnp
push
sub
or
and
retw
mov
pop
pop
ds
loop
mov
movsl
sub
test
int
sbb
push
aad
sbb
jge
and
shlb
cmp
adc
add
and
jbe
iret
pop
sbb
das
pop
inc
lock
inc
push
jo
jle
xchg
push
test
mov
pop
cld
sbb
scas
aad
push
sbb
insl
xor
insb
fcoms
roll
aad
cwtl
pop
fisubs
mov
incl
shll
outsl
push
adc
leave
fcompl
outsl
dec
pop
mov
cmp
arpl
testb
sbbb
mov
arpl
fiadds
adc
cmpl
fs
fsubs
jmp
test
arpl
adc
arpl
push
pop
jo
adc
mov
bound
loope
mov
mov
out
xchg
sbb
cli
popa
lret
sub
or
les
dec
bound
dec
cwtl
arpl
mov
adc
leave
loopne
push
mov
fdivr
test
out
inc
xchg
push
js
mov
cmp
sbb
mov
inc
into
push
lock
pop
imul
mov
in
movsl
xchg
sahf
dec
aas
add
mov
mov
push
push
sbb
ret
scas
add
jmp
mov
push
aas
outsb
ficoms
inc
in
into
or
xor
jne
js
clc
pop
lret
pop
insb
hlt
pop
xchg
divl
sbb
xchg
in
outsl
dec
lcall
dec
pop
push
scas
inc
sub
aas
les
xchg
or
int3
xor
notb
xchg
push
mov
mov
lods
dec
testl
imul
jmp
adc
jne
mov
pop
inc
xchg
cli
in
test
test
inc
mov
aam
xchg
int3
out
fs
lock
outsl
push
imul
mov
mov
loope
dec
js
cmc
scas
push
adc
es
lcall
ljmp
ds
sub
loop
jae
and
fmul
ds
sub
or
mov
cwtl
das
iret
cmpsl
xchg
mov
xchg
shl
ret
fucomp
outsb
dec
adc
mov
jg
std
add
mov
xchg
mov
fcomps
dec
cmp
aam
sbb
lcall
lock
jno
jp
ret
or
ss
lock
push
push
addr16
add
dec
pop
xchg
clc
lret
pop
jecxz
add
lea
in
fs
xlat
enter
es
mov
loope
xor
xor
xchg
cmpsb
clc
mov
loop
pop
arpl
or
stos
nop
imul
dec
mov
imul
xchg
pop
stos
lret
sbb
out
popf
arpl
xor
cs
push
inc
mov
mov
fstpl
in
or
sbb
in
or
dec
mov
ds
adc
jae
addb
hlt
dec
jp
mov
push
sbb
mov
lea
push
jnp
movsb
mov
addl
lcall
cmp
mov
lea
inc
bound
test
inc
test
scas
add
mov
jp
into
in
jns
or
sub
jecxz
orl
adc
jecxz
xchg
int3
addb
inc
aam
add
sar
push
mov
jg
loop
dec
push
push
daa
fldt
add
mov
or
mov
daa
shr
jnp
out
sbb
movsl
test
mov
xor
xor
inc
inc
insl
lret
lahf
pop
insb
adcb
push
adc
loop
xchg
std
xchg
or
cmp
cmp
sahf
loop
adc
gs
dec
or
out
int
or
pushf
mov
les
out
in
fwait
pop
sbb
cli
mov
jo
sarb
xor
shll
sahf
cwtl
ficomps
dec
mov
mov
insl
mov
notl
lret
pop
lahf
push
cmp
js
inc
mov
cmpb
stos
shrl
dec
mov
shll
adc
fsubrl
cs
loop
add
es
cs
fnstsw
ds
add
imul
scas
and
lret
jecxz
pushf
out
jle
lods
dec
cld
dec
sub
pop
lret
out
cwtl
rcrl
or
jbe
sahf
lods
jnp
call
scas
repz
ret
sub
mov
jg
push
ret
or
or
in
pop
test
aaa
inc
push
push
iret
js
push
sub
cmp
fucomip
aad
shrb
andl
cld
in
ror
pop
outsl
or
out
xchg
sbb
fcoml
out
adc
sbb
push
cmpsl
mov
cmpsb
push
jge
jb
push
fistpl
mov
imul
aaa
addr16
adc
sbb
jg
repz
and
dec
mov
popl
adc
inc
sbb
iret
je
lods
xor
mov
stos
push
push
cmp
or
mov
cmp
sub
jbe
or
dec
adcl
data16
fwait
mov
ss
test
jne
pop
in
xor
fwait
and
jns
adc
push
cmp
test
jle
mov
lock
push
pop
rclb
push
sbb
mov
rcrl
push
test
jmp
dec
orb
dec
fucomip
push
daa
mov
sub
insl
mov
out
sbb
or
fistps
mov
mov
pop
icebp
mov
cmpsb
aas
or
adc
dec
cmpsl
mov
in
jbe
mov
lods
dec
push
mov
push
fcmovne
lods
call
nop
mov
dec
movd
sbb
cmp
call
fsts
and
je
movsl
into
inc
mov
test
int3
out
test
test
sbb
or
pop
rol
pop
pop
push
aaa
jp
mov
inc
xchg
stc
pop
adc
sarb
mov
cmp
out
out
sbb
mov
cld
notb
push
pop
int
xor
pop
icebp
push
inc
js
rcl
cmp
cmpsl
fidivrl
lods
inc
in
jbe
sbb
adc
sbb
frstor
mov
test
ljmp
mov
sbb
sub
mov
fcmovb
pushf
add
mov
jecxz
inc
addr16
jmp
pop
scas
mov
cmp
inc
dec
jbe
jbe
mov
addb
mov
mov
sbb
out
jnp
xchg
sbb
or
roll
xor
dec
inc
sub
mov
mov
xchg
or
test
mov
mov
jo
scas
hlt
inc
or
cmp
call
scas
aam
out
gs
jae
out
mov
add
ret
test
and
mov
test
popa
enter
hlt
cwtl
jle
cwtl
aam
xor
cli
sbb
cmpsb
xchg
or
or
lea
ds
or
dec
mov
pop
sbb
cwtl
inc
mov
fiaddl
int
fcmovbe
inc
stos
fs
inc
int3
mov
cmp
jno
clc
pop
pop
xchg
mov
mov
pushf
and
cmp
sub
aaa
jecxz
and
add
les
mov
pop
icebp
cmp
mov
cmp
sti
mov
xchg
testl
in
cmpsl
movsb
xor
push
dec
inc
or
mulb
inc
fdivrl
push
repnz
cmp
ret
push
add
scas
cmpsl
loopne
leave
push
adc
push
das
clc
mov
fsubrs
ljmp
sbb
sbb
fdivrs
sub
mov
movsb
pop
pop
xchg
mov
sbbb
push
insl
jl
push
test
mov
xlat
mov
addr16
fdivs
mov
jecxz
ds
mov
mov
scas
lret
push
xchg
pop
xchg
mov
cmp
shr
mov
clc
mov
mov
mov
mov
xchg
loopne
mov
mov
cmp
pop
jb,pn
outsb
sbb
dec
cmp
and
imul
call
fisubs
ret
popa
outsl
jl
lock
das
sub
push
pop
movsl
int
xlat
test
ds
xor
sbb
cmp
sub
int
push
outsb
in
test
gs
jae
cmp
int
xor
mov
sahf
sahf
popa
je
add
js
mov
lods
js
mov
je
mov
dec
cmp
aam
fsubr
or
fstl
push
push
jg
in
mov
sarl
mov
xor
nop
ds
push
insl
xchg
pop
jecxz
popa
cmp
iret
xor
or
test
aad
bound
mov
push
dec
add
movsb
cmpsl
test
mov
lods
scas
cmp
jecxz
mov
loop
pusha
mov
sti
sarl
mov
imul
pop
sahf
mov
pop
sbb
nop
push
sbb
pop
aas
imul
xchg
lods
mov
out
and
faddl
sub
lock
cmp
cli
arpl
and
arpl
dec
test
arpl
pop
arpl
testb
mov
mov
aas
lods
ljmp
dec
mov
fsincos
or
cmovns
stos
xlat
inc
and
jnp
scas
cwtl
lea
lret
cltd
outsb
test
js
sarb
loope
xor
mov
xor
sbb
in
cmp
fs
je
adc
or
fmuls
jns
xchg
sbb
shlb
mov
mov
and
out
clc
sub
pop
jae
movsl
dec
arpl
lds
aad
dec
push
in
jbe
out
leave
fistpll
loope
push
add
lcall
inc
insb
jmp
mov
roll
adc
and
es
rorb
and
popf
push
mov
xchg
mov
sub
out
jg
jl
adc
inc
add
sbb
cmp
lret
hlt
arpl
jns
cs
test
cmp
insb
pop
fdivrl
add
pop
lret
push
dec
inc
sub
xchg
cmc
jnp
mov
cmp
lods
sahf
imul
or
repnz
aas
aam
push
loopne
mov
jg
adc
dec
mov
sub
nop
leave
and
rol
in
icebp
clc
jae
sbb
stos
cmp
inc
ss
aas
xor
push
cmp
rolb
pop
push
sub
cmp
xchg
add
lock
mov
pop
test
add
lods
pop
mov
movsb
and
inc
add
xchg
decl
std
out
into
dec
or
icebp
mov
daa
cld
ret
push
xchg
in
jecxz
sub
add
mov
shl
jl
scas
pop
sub
sbb
push
adc
cmp
mov
adc
fstpl
or
xchg
mov
mov
cmc
adc
fdivs
push
and
mov
rorl
push
roll
in
cmp
daa
push
mov
mov
ror
mov
ret
jecxz
mov
sbb
push
mov
xor
das
cmp
aaa
lret
cmp
imull
aaa
sub
into
test
xchg
push
xchg
jne
fidivl
rorl
cmp
movsb
mov
aad
lahf
and
pop
and
test
push
in
and
test
and
mov
fiadds
xlat
mov
push
sub
sub
insl
inc
jns
push
cmp
inc
jns
roll
mov
jge
jb
lahf
lods
iret
enter
sbb
inc
add
xchg
add
mov
das
jne
add
and
pop
addr16
pand
xor
loop
and
add
fsubrl
cmpsb
or
xor
fldl
out
clc
fidivrl
in
xor
into
call
insb
mov
sub
repz
xor
stos
insl
sub
sbb
mov
in
lock
sub
push
outsb
cmp
std
movsl
lret
lea
jns
pop
roll
xchg
jl
aas
mov
push
inc
add
cmpsl
insl
repnz
push
sub
push
fstps
inc
cmp
hlt
sahf
fwait
mov
jp
int
in
subb
stos
fadds
dec
or
test
jns
push
and
cwtl
dec
not
test
sub
jb
adc
or
lret
mov
mov
mov
repz
imul
mov
aad
pop
cmpsb
iret
jo
xchg
pop
daa
jp
rorl
gs
dec
add
add
mov
add
xchg
test
and
lahf
xchg
es
pop
dec
fs
mov
fcompp
roll
xor
stos
popf
mov
and
inc
jle
inc
add
inc
in
jle
xor
mov
or
sub
mov
arpl
sbb
add
aam
xor
or
dec
mov
rcl
and
xchg
sub
scas
outsl
xchg
mov
jno,pt
cwtl
rcr
push
sbb
jle
fsts
push
dec
push
leave
ljmp
into
lcall
inc
sub
movsb
enter
ljmp
in
or
into
lods
cmpsl
in
inc
adc
inc
idiv
fdivr
pop
imul
pop
mov
cli
loopne
pop
rol
jp
pop
cmp
inc
sub
adc
sbb
dec
push
xchg
mov
pop
fcmovnb
xchg
dec
jno
movsb
inc
jne
cmpsb
mov
pop
pop
std
lock
inc
mov
mov
jmp
mov
fildl
rolb
sbb
mov
cld
arpl
pop
sbb
lea
pop
sub
imul
pop
add
xchg
hlt
iret
stos
and
shll
in
sub
inc
adc
xor
push
fucomi
stos
sbb
inc
pcmpeqb
cmp
jg
sbb
dec
push
jecxz
lock
push
mov
mov
mov
jecxz
dec
jge
bound
in
sahf
ds
fmul
test
dec
dec
sbb
outsl
lea
ss
dec
cli
push
inc
jg
mov
sar
xchg
xor
dec
xchg
test
nop
xlat
and
sub
addr16
add
imul
cmpsb
pusha
lds
cmp
sti
xchg
mov
addr16
lock
test
rep
mov
and
inc
fdivr
xchg
adc
and
or
sbb
inc
mov
push
aam
lds
and
leave
movsl
and
mov
or
push
movsl
jg
icebp
adc
inc
into
xchg
adc
mov
add
leave
jmp
gs
or
adc
imull
push
clc
adc
lods
es
push
and
mov
iret
and
mov
fwait
mull
outsb
cmp
or
sbb
xchg
mov
add
jecxz
cmp
mov
ret
and
pusha
mov
mov
adc
dec
inc
shrl
outsl
movsb
push
sbbl
pushl
addr16
ror
xchg
imul
or
add
sub
cmp
jo
movsb
je
in
pop
pop
xchg
filds
cwtl
ds
push
in
test
loop
frstor
imul
das
lock
sbb
jnp
push
jns
pop
adc
inc
xor
jo
hlt
and
insb
xor
xchg
mov
mov
and
xor
mov
adcl
push
cmp
jae
ret
xor
stc
jne
aad
aam
fstl
mov
subb
push
test
js
nop
in
fstpl
pop
mulb
cwtl
sti
cld
xchg
pop
jbe
movb
lds
jnp
outsl
stos
jne
add
mov
mov
xor
add
hlt
popf
cmp
add
xlat
xlat
les
push
xchg
push
push
inc
movsb
mov
lods
sbb
or
fildll
outsl
loope
daa
mov
mov
leave
cwtl
mov
pushf
inc
adc
sub
mov
movsb
add
push
popa
inc
push
xchg
out
lcall
fstl
popf
pop
not
addl
xchg
out
pop
int
xchg
test
and
aam
insb
dec
or
test
dec
out
xchg
int
push
mov
inc
xchg
jecxz
mov
cmc
mov
xchg
jbe
imul
adc
and
xchg
in
sub
je
ror
mov
cmc
dec
sbb
and
sub
ja
jle
inc
dec
mov
lret
sbb
arpl
imul
inc
daa
sbb
jl
push
scas
pusha
dec
pop
xchg
jmp
xchg
inc
mov
idivb
pop
mov
push
mov
in
sbb
mov
xor
dec
aas
pmuludq
sub
sub
xorb
jecxz
cmpsb
or
inc
inc
inc
push
hlt
pushf
filds
stos
int
xchg
ret
loop
jg
enter
sub
xor
popa
daa
jnp
out
inc
lods
inc
ret
jle
sub
xor
add
movl
scas
ljmp
nop
or
jp
out
cmp
push
sub
or
mov
out
inc
mov
push
nop
loopne
ret
das
imulb
cmp
jno
dec
call
out
daa
loopne
inc
std
xor
and
lea
notl
fdivs
xchg
je
icebp
jno
fbld
xor
mov
push
adc
loop
or
enter
repnz
insb
or
push
cmp
pop
dec
cwtl
cltd
adc
std
sbb
push
jge
pop
adc
outsl
xchg
imul
mov
sub
mov
in
ret
push
fidivrl
xchg
loope
mov
mov
xchg
or
ret
lahf
add
adc
outsl
mov
int
push
mov
loope
jle
cli
pop
mov
push
push
sbb
mov
test
sahf
adcl
xor
in
dec
imul
ret
push
pop
mov
mov
mov
das
push
test
pop
mov
pop
loopne
jg
aas
imul
sub
scas
cmp
fwait
dec
cwtl
test
movsl
aad
sub
aad
mov
dec
mov
mov
xchg
dec
lret
push
imul
test
jae
dec
add
in
mov
push
sbb
dec
jnp
nop
xchg
jne
lods
and
adc
fisubs
test
or
mov
xor
clc
std
arpl
adcl
mov
movsb
cmp
or
pop
sbb
fs
dec
inc
cmp
or
push
std
popf
inc
jbe
push
inc
push
lret
inc
xor
cmc
mov
adc
test
mov
movsb
rcr
in
and
shl
sbb
fs
adcb
mov
ja
push
push
mov
fmull
int3
cmp
in
clc
mov
loope
and
repz
cmp
sub
mov
pop
cmp
data16
movsl
loop
add
xor
pop
or
mov
loopne
xor
scas
jo
add
jp
push
imul
lods
adc
mov
push
adc
mov
push
sub
out
push
test
cmp
jns
into
ljmp
bound
push
lea
repnz
xchg
jnp
out
xchg
aaa
lret
loop
cmpsb
lahf
xor
movsb
push
repnz
dec
dec
ret
dec
push
test
sbb
add
and
shl
sbb
mov
adc
addb
push
ja
or
sub
js
insb
mov
jp
mov
int
xor
inc
lds
popa
jmp
add
xchg
testb
xchg
repz
fnstsw
cmpsl
pop
fnsave
sbb
sub
ficomps
loop
out
repnz
aas
jns
cltd
inc
xor
dec
aam
sbb
fs
and
and
dec
je
fldcw
ljmp
or
jae
xlat
or
jmp
icebp
int3
mov
fs
fstl
cmp
test
pop
leave
in
jle
add
push
sbb
inc
ja
adc
stos
cltd
inc
xor
mov
xor
test
stos
es
xor
in
cmp
js
sar
xor
sub
rcl
push
sbb
dec
adcb
mov
add
pop
hlt
pop
sar
lods
insb
icebp
lret
jns
je
pusha
jmp
inc
xor
jns
xchg
jae
and
cmp
sbb
add
pop
mov
test
rolb
ret
mov
dec
mov
addl
mov
sub
fs
shr
sub
insb
movsb
pop
pop
fcomps
stos
sub
loop
dec
xchg
cwtl
cld
push
test
mov
mov
flds
mov
ss
bound
pop
add
jo
cmp
and
js
push
outsb
loope
add
sbb
mov
pop
mov
std
dec
pop
into
cs
js
rol
imull
cmp
lcall
aas
mov
pop
in
into
jecxz
shl
mov
ljmp
cmp
push
test
sub
add
or
inc
mov
mov
sbb
mov
jge
std
pop
sti
insl
aas
sbb
push
daa
jae
pop
mov
cmpsb
sahf
add
scas
mov
mov
jecxz
lret
jmp
mov
or
mov
jnp
lods
cmp
or
mov
lahf
rorl
mov
mov
inc
les
inc
pop
or
add
pop
int
shl
add
mov
adc
dec
push
ljmp
lret
adc
add
inc
fstps
jo
lods
roll
pusha
fsincos
pop
cwtl
adc
cmovnp
jmp
test
inc
push
and
push
pop
fst
aam
into
lds
loopne
popf
fcoml
scas
and
push
pop
or
mov
popa
loope
dec
movsl
adc
inc
cmpb
push
sub
lret
insb
int3
adc
sti
sbb
mov
push
insb
jne
lods
test
mov
pop
xchg
push
and
fstps
test
ror
push
scas
push
adc
sbb
daa
in
push
fsts
fisubs
int3
mov
popf
push
stos
or
and
add
scas
popa
sub
mov
add
pop
nop
jbe
and
and
cmp
pop
or
rcl
pop
addb
sub
in
cld
sub
sti
jge
jl
xor
jns
es
jecxz
pop
mov
int
aad
repnz
mov
jno
pop
aaa
jmp
inc
lret
sbb
insb
mov
add
es
sar
test
gs
es
lock
mov
xor
loope
ret
rcrb
xchg
lahf
outsb
es
addb
gs
data16
jb
int
int3
shll
shlb
frstor
movl
sbb
call
mov
mov
shlb
cltd
jle
shll
mov
nop
jne
lea
cwtl
cltd
cmp
lock
push
or
mov
cmpl
mov
hlt
push
push
mov
adc
or
sub
xchg
dec
mov
outsl
inc
jp
push
ds
sub
pop
xchg
mov
test
inc
dec
or
mov
ss
insb
movb
repz
loope
jge
or
clc
out
les
arpl
ja
jo
pop
and
inc
gs
add
fcmovnu
in
jb
icebp
subb
mov
pop
mov
repz
test
and
mov
lock
arpl
cmpsl
lahf
ret
bound
add
adcb
add
enter
jb
mov
xchg
cwtl
jb
xor
mov
idivl
mov
ljmp
pop
out
and
cmpsb
fsubs
shrb
jnp
jns
mov
lret
ss
lea
cmp
push
enter
mov
push
lods
cmp
add
ljmp
xor
in
out
cmp
xor
imul
dec
push
and
or
adc
push
jns
mov
fimuls
ret
mov
js
sub
imul
fcmove
or
movsb
mov
mov
mov
push
jecxz
ss
imul
push
and
aad
mov
pop
sbb
data16
int3
and
cmp
or
adcl
repnz
dec
mov
rclb
out
xchg
inc
insl
mov
or
ret
xchg
stc
jp
stc
mov
dec
xchg
insb
sbb
and
lahf
andl
mov
scas
and
sahf
jg
sub
mov
jae
test
loop
mov
mov
sub
fcompl
xor
mov
movsl
imul
lcall
pop
daa
sub
mov
mov
cmp
jae
pop
adc
in
sbb
addr16
push
shll
fldcw
dec
ljmp
rclb
in
add
paddw
dec
cmc
cmpb
test
rcrl
xor
jbe
ret
icebp
lret
stos
push
push
dec
movsl
inc
movsl
rcrl
pushf
aas
pop
add
jle
or
xchg
lods
cmp
das
pop
jnp
insl
cltd
negb
popa
jb
add
jno
mov
mov
and
and
mov
or
clc
outsl
stos
icebp
dec
mov
lret
xchg
jl
leave
leave
out
jae
mov
sub
jne
inc
repz
pop
mov
pop
inc
mov
fwait
sti
inc
das
sahf
push
cmp
pop
adc
xor
mov
adc
dec
jne
mov
outsl
out
sbb
inc
rcll
test
rolb
cmc
sbb
push
and
and
jl
cmp
inc
and
cmp
pop
add
sahf
leave
stos
mov
adc
jecxz
dec
bound
jnp
or
add
xor
outsl
inc
insb
mov
xor
inc
pop
fildl
psubq
sahf
aad
into
ss
jl
in
push
mov
ret
repnz
push
pop
jecxz
in
and
movb
lahf
adcl
out
or
adcb
fiadds
mov
fistpll
or
sub
iret
in
sub
nop
adc
add
pop
imul
or
test
dec
add
and
imul
add
xor
mov
fwait
adc
push
cmc
mov
addr16
mov
or
rcrb
inc
pop
and
push
adc
mov
scas
imul
pop
fmuls
clc
stc
in
fsubrl
hlt
or
stos
dec
stos
xor
inc
in
cwtl
sbb
jmp
in
jnp
cmp
shr
dec
pop
xchg
ds
xchg
ds
sub
xor
inc
sub
inc
repnz
pop
mov
arpl
enter
jns
lgs
fnstsw
push
dec
xor
push
add
imul
push
in
fwait
decb
cmp
pusha
and
adc
push
jno
push
aam
daa
sub
test
adc
push
xchg
loop
sti
shrl
sub
xchg
data16
stc
movsl
mov
push
repz
jl
je
xor
jae
xchg
push
pop
jb
mov
cwtl
lods
pop
jmp
inc
shl
out
prefetchw
sub
in
inc
out
sbb
movsl
shrb
xchg
rcrl
mov
push
pop
cmp
lret
push
push
iret
or
cs
sbb
imul
push
lahf
xchg
dec
jo
movsb
mov
montmul
cmpsb
addl
sbb
int3
mov
xor
movsl
bound
push
pop
pop
xchg
xor
je
lcall
out
inc
scas
lds
out
stc
divb
dec
mov
mov
imul
pop
iret
mov
xchg
test
cmc
iret
imul
mov
outsl
push
fadd
clc
jae
ja
shlb
cmpsb
test
push
adc
leave
mov
jle
cli
cmp
subl
mov
pop
add
lea
xor
dec
inc
aad
mov
enter
movsl
cmpsl
fcmovne
test
cltd
imul
pop
adc
popa
shll
add
lret
mov
dec
into
mov
imul
sbb
mov
inc
pop
cmp
js
rcrl
orl
and
xor
mov
sub
or
mov
aas
jecxz
xchg
faddp
mov
js
and
ret
xchg
movsl
in
dec
sbb
xor
movsb
cli
lea
insb
xchg
fmuls
lcall
test
fs
call
xor
jge
xlat
dec
sub
arpl
add
adc
lret
xor
jmp
push
in
dec
rcrb
fistps
in
sbb
addr16
aam
sbb
and
out
jl
sti
out
test
pop
and
sbb
push
jl
fimull
lahf
in
add
test
cltd
es
jmp
insb
add
mov
shl
lds
repnz
pushl
push
mov
adc
out
pop
pusha
xchg
jecxz
xor
jne
mov
inc
mov
cmp
cmp
lcall
inc
inc
mov
mov
shll
pushf
js
lret
outsb
sub
mov
hlt
mov
xchg
popa
sub
adc
push
fstpl
mov
jb
push
nop
push
or
sti
jbe
push
sbb
repnz
pop
push
stos
test
mov
or
mov
mov
inc
fs
jmp
mov
lods
push
dec
js
push
sbb
xchg
movsl
pop
mov
popa
jne
jge
lahf
daa
dec
fildll
and
jg
jg
testl
push
sar
lret
jb
enter
push
sub
aas
jmp
fcomi
adc
popf
add
jecxz
daa
mov
sti
sti
mov
jnp
cmc
aam
cltd
mov
cmpsb
pop
lahf
xchg
fists
cmpsl
cld
cmp
and
mov
int3
imul
dec
lods
and
or
pop
inc
jle
sbb
sub
cmc
push
mov
and
outsl
daa
cld
dec
and
jp
mov
xchg
inc
and
test
pop
dec
int3
push
push
cltd
lahf
test
sub
mov
loop
imul
icebp
repnz
cwtl
mov
adc
sahf
test
jb
nop
or
cmpsl
mov
clc
and
jo
cmpsb
rcl
push
xchg
push
lock
lar
imulb
aam
outsb
jmp
mov
dec
sti
sub
push
jne
dec
pop
mov
test
cmp
push
push
sub
jl
sti
testl
adc
loopne
xchg
fidivrs
add
push
mov
stc
jp
jno
fistps
std
cmp
int
imul
add
sub
mov
popa
test
mov
rcrl
scas
xlat
decb
jo
mov
pusha
mov
nop
fs
mov
or
push
cld
push
jp
and
shll
sub
fsubs
test
xchg
sbb
fwait
mov
jle
arpl
je
xor
loopne
push
pop
push
int3
sarb
mov
enter
data16
movsl
filds
cltd
cmp
lret
xchg
mov
add
inc
and
mov
loopne
mov
mov
or
adc
pop
mov
lea
jne
jmp
div
jle
ja
dec
sarl
pop
push
dec
loopne
in
mov
add
cld
sbb
mov
mov
nop
das
in
andb
or
hlt
add
popf
das
sub
shll
out
sti
popa
movsl
add
movsl
sub
in
or
xchg
inc
loop
sbb
jnp
es
mov
and
je
inc
push
mov
or
jbe
adc
jle
scas
mov
into
or
rorl
fnsave
xor
and
addr16
push
pop
call
adc
sbb
popf
jp
lcall
in
enter
inc
jb
lods
and
jmp
aaa
cli
jecxz
js
lods
pop
imull
outsl
roll
cs
pop
push
mov
fistps
cli
pushf
movsl
push
les
mov
pop
enter
pop
in
jbe
out
iret
lahf
push
gs
mov
cld
mov
fucom
dec
jecxz
sbb
sbbb
xlat
stos
outsb
leave
add
adc
sub
and
push
outsl
cld
push
je
dec
cmp
fisubrl
int
sbb
or
dec
inc
sbb
sti
test
or
adc
dec
cmp
jno
outsb
out
sti
out
add
pop
push
popa
jl
or
lahf
insl
cltd
pop
xchg
icebp
pop
pop
out
hlt
jbe
std
xchg
sarl
mov
sbb
add
add
mov
pop
fildll
lea
sahf
or
imul
fs
sbb
je
dec
adc
mov
cwtl
scas
dec
mov
imul
push
add
mov
incl
aaa
ds
pushf
shrl
stos
push
dec
sub
clc
aas
test
stc
mulb
jb
cs
xchg
sub
enter
xor
or
clc
insl
jl
push
xchg
jl
push
or
test
xor
push
ret
xchg
mov
add
cmp
iret
cwtl
mov
nop
xchg
lret
inc
cwtl
test
mov
mov
out
cmp
mov
jg
mov
mov
aad
adc
lret
jae
bound
jle
inc
mov
cmc
loope
mov
insl
adc
sub
inc
and
sarl
test
jno
mov
dec
shl
pop
push
out
cli
inc
push
xchg
add
jecxz
sub
sbb
sbb
iret
addr16
test
fwait
iret
ret
mov
mov
clc
sbb
cwtl
or
mov
mov
out
adc
stc
lret
inc
sbb
jns
xchg
xor
lds
xchg
testb
xchg
lds
adc
fnsave
add
inc
shl
mov
mov
sub
adc
xor
test
inc
pop
pop
adc
sti
out
xor
nop
sbb
add
push
cmp
idivl
or
adc
leave
add
inc
xor
sbb
int3
les
mov
and
repz
test
fsubrl
mov
and
iret
dec
dec
pusha
cs
cmp
iret
xor
shlb
ds
movsb
cmp
mov
maxps
test
xchg
xchg
shl
stos
in
lods
insl
inc
sbb
movsb
push
adc
fsubs
out
and
pop
sub
nop
outsl
insb
into
clc
in
add
lds
out
adc
mov
xchg
stc
sub
idivb
jo
repz
push
lock
in
es
inc
and
pop
pop
cmp
lahf
das
stc
aas
cmp
and
lret
sub
ss
xlat
cwtl
pop
les
cmp
jne
test
rcrb
lods
shrl
jle
push
adc
daa
mov
pusha
fs
jecxz
pop
shll
xchg
movsl
cmp
fisubl
js
iret
and
popa
push
mov
aad
cmp
sub
movsb
pop
adc
popl
in
sub
push
push
test
pop
xchg
sub
int
nop
add
push
fisubl
sahf
pusha
out
add
and
lret
out
mov
mov
cmp
iret
icebp
dec
xchg
push
lea
pop
add
cmpl
stc
dec
or
scas
sbb
repnz
aam
jmp
fldenv
adc
xor
cltd
ljmp
frstor
jp
jbe
loope
xchg
call
insb
addl
loope
xchg
ds
mov
int3
lods
pop
sbb
outsl
xlat
or
push
repz
add
cmp
nop
sbb
clc
outsl
xor
outsl
outsb
cmc
cmpsb
in
sub
test
inc
mov
cmp
mov
mov
jns
out
rcrb
scas
cmp
mov
mov
lret
ds
and
lcall
dec
mov
scas
fs
add
loopne
daa
mov
mov
or
repz
sbb
loopne
lea
jne
loope
adc
rcrb
xchg
int
xchg
fldl
jge
cmpsb
dec
sub
repz
test
pop
loop
aam
jle
lods
insb
aaa
hlt
ja
lock
lock
mov
popf
test
out
shl
js
es
or
arpl
xchg
rcrl
std
pop
outsb
pop
test
rcrl
mov
xchg
les
rep
jns
xlat
cmp
or
push
mov
leave
outsb
fisttpll
les
add
loop
xchg
pop
in
xchg
sub
or
hlt
lds
cmc
ret
sub
sbb
outsl
lock
inc
jmp
xlat
xlat
jno
add
stc
fcmovnbe
mov
imul
pop
mov
arpl
lock
stc
repnz
aam
adc
add
out
rclb
mov
inc
scas
out
cs
jmp
in
fists
lds
bound
adc
rol
aam
pop
jecxz
testb
pop
mov
mov
sbb
xchg
push
jne
push
jge
fisttpl
mov
enter
adc
lods
daa
popa
cmp
loopne
rcll
test
push
jle
std
insl
pop
movsl
adc
divb
jg
push
rolb
sahf
push
xor
mov
adc
cs
xor
enter
or
mov
imul
mov
sub
scas
push
mov
jg
sub
xchg
pop
lahf
and
push
test
push
cmp
fst
cmpsl
inc
sbb
or
cmp
sub
cmc
shrb
nop
cmpsb
inc
fs
loopne
dec
sti
aad
jmp
clc
clc
cmp
adc
push
push
jae
lds
and
mov
fldl
pop
push
xchg
or
or
lock
adcb
fmuls
fidivs
iret
and
adc
rorb
push
adc
mov
mov
arpl
addr16
cld
add
fnstenv
arpl
into
dec
inc
add
jns
push
das
rorl
in
test
dec
mov
mov
fsubrs
stc
lods
shlb
insb
mov
jo
mov
in
and
in
cld
lods
push
mov
lahf
mov
mov
cmp
jmp
jo
lahf
cmp
sub
and
imulb
sub
jle
mov
add
mov
sarb
fs
movsl
repz
int
leave
add
enter
mov
push
push
sub
mov
fmuls
push
adc
pop
xchg
shr
cmpsb
in
mov
pop
mov
mov
dec
mov
mov
pop
jmp
test
lret
cmp
mov
push
fdivrs
mov
add
mov
cltd
cmp
enter
pop
add
lock
hlt
test
sub
mov
lods
and
insl
rclb
adc
test
icebp
mov
or
int3
push
cmpsb
adc
pop
mov
gs
dec
and
scas
shr
ret
xchg
fbstp
shll
mov
add
add
jns
cmp
inc
mul
jo
cltd
mov
shrl
dec
ja
lock
adc
inc
sub
xchg
mov
sub
mov
pop
sbb
nop
into
sti
jnp
dec
or
popa
pop
add
enter
dec
cmp
fs
adc
xchg
imul
test
in
jb
add
ffree
out
xchg
daa
aam
ljmp
inc
int
test
adc
xor
push
out
cmp
pop
jp
cmpsb
stc
jbe
mov
ljmp
mov
inc
mov
cmp
mov
mov
sahf
pop
jge
insl
shl
hlt
lahf
iret
rcrl
aas
adc
scas
sbb
stos
stos
int
or
mov
int
lcall
push
mov
mov
inc
adc
mov
xchg
sbb
and
jl
jnp
lods
cmpsb
aam
pop
and
push
mov
cs
test
push
jnp
cmp
push
ss
xchg
in
in
in
sahf
negl
jmp
xchg
mov
jne
jns
lahf
sti
dec
and
outsl
mov
jns
mov
inc
popf
sarl
insl
or
dec
xrelease
fcoml
and
js
push
push
ljmp
mov
inc
jl
cmpl
aad
mov
in
lret
or
sbb
add
sbb
out
push
mulb
push
sub
js
adc
pop
sbbl
iret
enter
ss
loope
lea
xchg
mov
daa
mov
push
jmp
xchg
ss
or
mov
and
mov
pop
pushf
jmp
cmp
notb
add
in
mov
dec
jge
jp
repnz
xor
push
xor
mov
cmp
stc
js
decl
loope
inc
push
cmp
insl
repz
test
and
dec
bound
aaa
jae
inc
lea
out
fadds
lods
fidivrl
add
xchg
arpl
and
add
pop
shrl
add
xor
outsb
mov
repnz
repnz
lea
dec
lret
add
cld
dec
mov
mov
dec
cwtl
adc
lods
fucomi
in
sub
call
sub
pushf
ljmp
mov
test
jl
test
xor
push
out
jns
test
les
cmc
add
frstor
jbe
or
test
push
test
and
inc
mov
inc
lods
rcrl
fsubrs
sahf
mov
pmaxsw
or
dec
mov
jno
arpl
loop
pop
test
pusha
and
test
or
dec
mov
repz
insl
push
push
push
inc
fldenv
xchg
repnz
mov
adc
jmp
bound
adc
pop
xchg
inc
fcompl
and
in
insb
xor
stos
shlb
mov
add
scas
pop
dec
or
xchg
adc
outsb
hlt
mov
or
test
out
cmp
mov
lcall
inc
inc
aas
fs
inc
cmpsl
orb
push
add
push
push
and
mov
out
clc
les
xchg
out
jae
dec
int
xchg
loope
or
loopne
or
pop
or
jns
scas
dec
lret
andb
pop
jne
lea
inc
inc
sub
xor
or
jb
outsl
outsb
bsr
jecxz
sub
pop
outsb
cmp
leave
lret
mov
in
in
mov
pop
pop
lods
and
popa
xchg
sbb
jp
push
push
rcll
mov
mov
jge
xor
in
and
mov
dec
pop
cmc
pop
test
sbb
xchg
sbb
pop
fs
jns
xchg
mov
mov
test
fwait
ss
mov
cpuid
inc
or
mov
repnz
sub
xor
ja
mov
nop
dec
cmp
cmpsb
pop
pop
orl
sub
sub
and
fisubs
or
shll
cli
stc
jno
pop
inc
ficompl
adc
sbb
ljmp
pusha
mov
mov
ja
nop
cld
inc
cltd
insb
pop
stos
lahf
jmp
push
int3
loop
pop
sti
jns
inc
add
dec
push
test
push
adc
pusha
add
cwtl
scas
or
jl
pop
sbb
out
js
xor
or
lds
dec
cwtl
imull
xbegin
fisttpll
or
jno
cwtl
gs
cmpl
mov
mov
and
cmc
pop
cmc
movsb
lretw
push
je
negl
lret
pop
bound
sub
mov
push
out
add
push
lods
push
jae
push
cmp
ret
jns
js
test
gs
sub
lods
ja
push
pop
in
loope
or
push
add
cltd
lds
rcl
arpl
and
cmpsl
imul
das
mov
ds
rcr
daa
sti
xor
xor
mov
and
mov
mov
aaa
test
mov
mov
inc
jp
int
out
pusha
mov
adc
and
cmp
add
mov
loopne
outsl
js
test
and
dec
out
xchg
lret
pusha
iret
inc
scas
rorb
jmp
movb
out
and
mov
mov
sbb
jg
idivb
icebp
adc
xor
cwtl
out
mov
mov
cmp
ja
pop
inc
push
shrl
outsl
in
outsb
cmpsb
xchg
inc
in
add
sahf
fistl
mov
gs
mov
movsl
fstps
daa
adc
xorl
sub
popl
icebp
sbb
cmp
mov
and
push
mov
xchg
lahf
sbb
ja
clc
mov
mov
add
lcall
test
lcall
cmp
aaa
insl
jnp
icebp
inc
inc
dec
enter
sub
jb
call
xor
popa
pop
mov
fcoms
and
je
mov
cld
test
and
pop
mov
nop
add
and
fsubrl
jmp
subb
jecxz
dec
inc
rcrb
rorb
mov
xchg
ficompl
cli
push
rorl
test
add
ja
fbstp
or
sbbl
push
or
xor
jne
and
push
mov
popa
dec
add
lret
mov
add
adc
xchg
sti
pop
adc
sub
fcoml
adc
jo
addr16
lds
push
clc
testl
lods
cmpsl
push
sbb
jnp
and
cmpsb
sbb
ret
rorl
or
push
pop
ss
xchg
or
dec
and
mov
pop
out
inc
enter
xor
inc
push
xor
mov
notl
rcr
ret
rorb
sub
adcb
std
scas
je
mov
xchg
cmp
icebp
push
or
and
fsubp
repz
dec
and
lahf
fcmovb
icebp
mov
lea
mov
jge
loope
adc
jb
les
mov
ja
repz
test
std
scas
dec
mov
mov
or
jge
andl
ds
loope
enter
imul
test
inc
jbe
cmc
jno
or
xor
pop
loope
inc
add
mov
inc
mov
push
sub
stc
ficoml
mov
mov
into
mov
or
and
mov
loope
dec
inc
pop
cmp
dec
repnz
jo
fmuls
dec
jmp
loop
dec
rorb
cs
cmp
push
push
mov
ja
popa
mov
outsb
in
shll
jnp
mov
or
jne
fwait
lret
pop
arpl
push
fldt
cmpsb
and
ret
dec
fdivs
scas
inc
mov
mov
and
mov
call
ret
ljmp
test
fisttps
sarb
inc
out
push
add
push
pop
xchg
movsw
aaa
pusha
mov
adc
mov
lahf
sbb
enter
push
and
insb
maskmovq
testl
clc
jno
cmp
jno,pn
daa
mov
in
push
jno
cmp
mov
aam
sbb
icebp
ljmp
rcrl
dec
inc
bound
lret
xchg
cltd
stc
mov
sub
jge
mov
sbb
cmp
xchg
shl
push
out
xchg
lods
jae
add
loop
repnz
les
mov
jne
pop
andb
cltd
push
shlb
inc
push
dec
xorl
pop
fucompp
fcmovu
fcmove
mov
int3
push
push
test
nop
lock
lcall
sbb
popa
sbb
cwtl
dec
sbb
in
rcll
pop
pop
push
rorl
les
dec
add
test
addr16
jnp
std
orb
aaa
xchg
xlat
xchg
cmc
mov
ja,pn
rcrb
pop
repz
cmp
nop
mov
ljmp
adc
enter
mov
dec
pop
ljmp
mov
mov
add
in
mov
sbb
lcall
orl
adc
loope
push
hlt
cmp
int3
in
aam
push
inc
stc
xchg
mov
mov
subb
sar
lds
push
das
sub
imul
enter
stos
gs
clc
inc
and
js
and
inc
aad
pop
xchg
and
js
test
test
cmp
dec
dec
addr16
mov
and
lods
out
jns
jae
push
rcl
fdivp
rcl
ja
jns
rcl
xchg
pop
or
sarl
out
nop
bound
pop
testl
mov
adc
ret
mov
push
mov
arpl
push
and
popf
shll
dec
addr16
or
inc
sahf
pushf
loop
cltd
scas
sarb
mov
mov
or
in
cmp
cmpsb
lock
fisubl
or
lret
mov
std
cmpsl
dec
cmp
insb
xchg
shr
jl
hlt
pop
inc
and
loop
jbe
cmp
push
inc
pusha
xor
paddw
add
lock
jns
inc
nop
xchg
pusha
in
leave
mov
das
sbb
pop
xor
shr
jg
stc
jg
mov
mov
fisttps
ss
pop
daa
addr16
adc
lock
jae
ret
mov
movsl
adc
cmpsb
dec
add
lret
dec
mov
lahf
cwtl
je
add
out
dec
and
inc
adc
outsl
push
mov
fstps
out
or
mov
icebp
cltd
psubusb
add
cs
pop
push
sarl
out
jnp
pop
fidivrl
and
imul
push
idivb
outsb
jo
xor
out
cmp
iret
xchg
mov
insl
pop
sbb
push
dec
mov
dec
fdivrl
in
inc
inc
daa
stos
into
or
repnz
mov
mov
hlt
addl
out
pop
std
in
mov
dec
sqrtps
xchg
sbb
ret
mov
dec
arpl
cli
aad
xchg
imul
stos
ret
pusha
adc
or
pop
hlt
xchg
cwtl
push
xlat
idivl
jnp
mov
mov
int
xchg
dec
sub
xchg
testl
nop
imul
or
sbb
mov
je
test
dec
sti
pop
jnp
jp
movsl
jle
mov
ljmp
sahf
aad
faddp
scas
pop
fisttps
bound
sub
jne
adc
mov
insb
cld
add
add
fisttps
add
inc
xchg
sbb
mov
jmp
fcmovb
fsubr
mov
ret
cmp
jns
enter
push
xchg
adc
hlt
xchg
pushf
add
daa
jbe
inc
pusha
addr16
push
or
jns
out
sub
mov
jmp
adc
sub
jae
je
or
data16
mov
cmpsl
fistpl
xor
fidivl
xlat
xchg
sub
mov
jo
pop
faddl
and
xchg
out
in
sub
mov
mov
scas
idivl
sahf
lods
out
lods
jne
jg
or
icebp
inc
cmp
push
fidivl
dec
rclb
mov
sbb
jne
dec
and
jl
movsb
pop
pop
lret
cmp
inc
test
and
mov
sub
out
mov
shlb
and
pop
cmp
test
dec
push
jne
add
repnz
jge
push
mov
sub
stos
mov
xchg
addr16
fldt
scas
and
inc
pop
shlb
adc
dec
js
lock
into
lds
gs
fnstsw
mov
jecxz
dec
jecxz
aad
adc
cmpb
xlat
jb
and
xlat
shrb
inc
icebp
les
pop
insl
pushf
xor
cld
jbe
and
sbb
jmp
mov
mov
icebp
pop
dec
mov
or
dec
clc
lret
mov
sub
jp
inc
jle
imul
inc
imul
in
mulb
cmp
std
repz
mov
push
arpl
enter
pop
lods
xor
subb
in
pop
mov
add
fs
xor
push
push
mov
popaw
and
pop
pop
push
push
ffree
mov
add
in
mov
push
mov
testb
jg
fcmovnb
hlt
sub
icebp
leave
movb
cmc
mov
inc
mov
repz
ds
cmpsl
fimull
adcl
push
imul
es
push
aas
movsb
inc
cwtl
enter
stos
jnp
sub
mov
negl
ret
and
cli
adc
enter
rolb
bound
iret
lds
int
push
cmpsb
jmp
dec
scas
xchg
insl
ljmp
adc
push
icebp
push
pop
push
xchg
pop
call
popa
jne
scas
pop
nop
pop
dec
xorb
push
add
sub
adc
lcall
ljmp
xor
xor
rorl
notb
push
add
lcall
mov
test
cli
mov
and
je
push
lea
pop
mov
enter
add
adc
adc
mov
or
mov
mov
in
jge
add
cld
in
and
stc
stos
leave
fsubs
and
in
fs
std
aas
mov
loop
inc
movsb
and
cltd
sbb
sbb
popf
push
imul
and
lods
or
xchg
shr
push
mov
cmp
sub
cmp
nop
test
daa
or
int
xchg
fadd
mov
cmpl
sbb
jns
or
push
add
push
fisttpll
add
xor
or
sbb
mov
movsl
cmp
sub
popa
mov
push
push
sbb
insl
and
cmp
insb
sbb
test
fstl
stos
mov
and
ret
std
mov
sti
sbb
outsl
mov
js
push
xor
dec
xorl
inc
dec
sub
sbb
scas
push
push
push
pop
mov
test
imul
jb
sbb
jns
sbb
mov
lahf
data16
pop
lret
punpcklbw
fsubs
push
loope
ss
add
out
imull
dec
cmp
jns
addl
leave
aam
jmp
stos
push
pop
out
clc
xchg
outsl
mov
dec
push
sbb
xchg
xchg
cwtl
stc
loope
cli
or
out
and
mov
fists
cmp
or
adc
out
idivl
mov
jp
adc
mov
ljmp
xor
into
and
frstor
int
xchg
mov
mov
jb
in
cmp
jge
insl
xor
mov
xor
inc
mov
xlat
sub
fidivl
scas
jb
fdivrp
add
dec
mov
mov
test
and
mov
sub
test
roll
fidivrs
pop
pop
xor
faddl
jl
insb
sub
and
jnp
js
pop
imul
mov
mov
inc
fs
mov
add
push
out
mov
adc
dec
xor
in
sbb
mov
fdivrl
jp
xchg
dec
scas
leave
fwait
hlt
push
ret
push
adc
stc
mov
movl
pop
jge
sub
call
sub
pop
loope
in
ja
je
bound
or
mov
stc
rcrb
adc
pop
pop
mov
enter
aad
mov
outsb
push
js
call
sarb
je
mov
or
cli
jecxz
mov
sub
mov
cmp
notb
ljmp
or
aam
stos
sarl
loop
or
dec
jmp
outsl
sub
scas
lcall
mov
loopne
subb
das
fistl
ljmp
fsubs
adc
imul
pop
inc
adc
jne
fwait
iret
test
cmpsb
std
xchg
sbb
sbbl
push
push
cld
push
pop
call
icebp
push
cld
or
cmpsb
fs
scas
dec
imul
xchg
sbb
push
rcll
push
negl
fsubp
and
mov
sub
ljmp
lock
inc
mull
pop
and
adc
dec
mov
cmp
jns
scas
movsl
jl
sbb
imul
cmp
pop
sbb
xchg
lea
xlat
outsl
pop
xchg
sti
fcomi
mov
pop
mov
popf
sbb
in
inc
mov
cmp
push
adc
adc
test
pop
into
jg
lea
inc
pop
lret
dec
xchg
loopne
cld
or
cmc
test
adc
in
xchg
cmpsl
lcall
filds
add
adc
jge
jl
add
mov
mov
stc
or
lods
and
mov
mov
addr16
jne
dec
xchg
lock
shll
xchg
sahf
test
dec
pop
ficompl
aad
and
popf
and
insl
mov
jns
mov
and
push
ja
les
add
xchg
xchg
xor
scas
mov
arpl
cld
popf
fdivr
add
push
adc
mov
cmp
jno
ds
mov
scas
mov
push
mov
or
lods
fistpl
adc
xchg
pop
push
outsb
pushl
pop
rol
in
lds
sub
lock
mov
ljmp
inc
xchg
xchg
sbb
orl
pop
and
outsl
nop
cmpsb
das
mov
popf
scas
lods
dec
jne
add
into
mov
rorb
or
imul
jnp
inc
xchg
push
lret
test
cmp
insl
in
push
loopne
stos
cli
movaps
outsl
ret
rcr
int3
fisubrs
std
dec
test
inc
push
jne
bound
jp
cli
arpl
jg
pop
mov
insl
lea
sub
out
mov
mov
stc
inc
dec
mov
inc
pop
ret
daa
push
dec
sub
or
mov
xchg
lods
fadd
inc
mov
fcmovbe
sbb
mov
dec
in
mov
push
push
sbb
cs
pop
outsl
es
ja
sub
dec
jle
mov
insl
popa
cmp
mov
dec
lods
inc
jae
add
push
sbb
fwait
push
xchg
ds
jb
and
sbb
inc
test
or
imul
xlat
dec
jbe
mov
and
cmp
popa
adc
adc
mov
adc
daa
inc
js
xor
mov
hlt
push
call
adc
addr16
out
pop
shr
popf
xor
push
sbb
sub
add
cmc
and
iret
lds
fisubrl
mov
cmpl
lret
and
fadds
inc
cld
lds
out
mov
je
jmp
xchg
ljmp
pop
in
pop
add
fcompl
stos
push
mov
cmc
dec
adc
test
dec
cwtl
stc
sbb
cmp
add
add
mov
in
sbb
repz
cwtl
add
dec
xor
jmp
sub
add
cmp
rorb
jp
jge
sub
jns
mov
sub
cld
sahf
out
notb
daa
arpl
sub
mov
cmpsl
fimull
add
loope
in
cmpl
mov
cmp
cmp
xchg
cmc
push
xorl
dec
scas
mov
jle
mov
or
imul
cmpsl
adc
jge
sti
es
jle
loop
cmpsl
loop
das
or
dec
loopne
stos
loop
adc
movsl
movsl
pusha
arpl
push
imul
push
nop
mov
aam
fldcw
rolb
mov
add
je
cli
push
dec
fbstp
xor
pop
ror
outsl
mov
mov
in
mov
in
add
stos
push
jg
adc
and
xchg
mov
mov
in
out
rclb
mov
xchg
por
icebp
mov
xchg
ret
dec
aaa
mov
mov
sbb
mov
jg
popf
test
cltd
mov
loope
mov
mov
insl
aam
mov
xor
mov
mov
xchg
inc
pop
sarl
mov
jae
push
pusha
add
movsb
inc
or
lds
adc
push
or
xchg
jnp
pop
lea
cmc
fcompl
add
data16
lahf
mov
and
add
test
xchg
adc
push
dec
add
mov
mov
mov
pop
and
xchg
fstpt
int3
xor
and
ss
shll
into
inc
mov
lret
inc
loopne
mov
les
iret
mov
xor
push
adc
sbb
add
insb
sarb
add
rorb
leave
daa
jns
cmp
jae
mov
out
fwait
push
mov
loop
push
ds
jmp
cli
aam
cmp
jle
pop
xlat
lock
or
dec
inc
cmp
jbe
in
xor
mov
xchg
mov
push
std
loopne
cmp
push
int3
mov
outsb
jae
dec
rclb
inc
into
push
pop
jge
dec
jmp
inc
and
dec
pop
pop
pop
fimuls
movsl
add
hlt
xor
aas
daa
mov
jno
fdivl
xchg
xor
iret
cmp
add
push
sub
dec
aam
cmpb
loope
mov
lods
xor
scas
outsl
imul
add
sub
int3
scas
jmp
jnp
dec
add
clc
jecxz
imul
aad
fimull
sbb
out
xchg
ficomps
jg
adc
push
add
push
ss
cmp
rcrl
adc
mov
adc
jb
push
ja
cmp
bsf
xor
movsb
push
mov
jno
xchg
fnstcw
repz
shrl
rclb
addb
or
mov
pop
ret
pop
sbb
rolb
test
jle
xchg
xchg
xchg
movsl
xor
and
xchg
mov
imul
mov
orl
xor
sub
pmulhuw
inc
push
aad
xlat
fstps
bound
fprem
icebp
sub
pop
ret
sub
aas
cmp
or
stc
andl
cltd
pop
sti
xor
dec
pop
xor
cmpsb
fsubp
icebp
sarl
xchg
imul
clc
in
mov
call
insl
aad
clc
and
jmp
and
fistl
out
int
retw
mov
cmp
dec
adc
cmpsb
cmp
sbb
push
test
testl
push
cmp
sbb
arpl
and
or
outsl
mov
or
dec
test
push
jp
cmp
pusha
js
sbb
xchg
loopne
and
pop
aas
xor
mov
pusha
ffreep
jns
outsw
int
adc
das
inc
lods
xchg
mov
push
adc
pop
loop
inc
add
lea
adc
cltd
mov
jne
in
loopne
push
mov
scas
mov
je
cmpl
call
in
xchg
mov
add
jecxz
call
inc
adc
push
es
sahf
scas
xchg
insb
or
fildl
dec
decb
and
push
in
cmpb
dec
andb
jg
mov
pop
imulb
xchg
mov
call
xchg
std
pop
das
jnp
ja
aas
add
int
xchg
stos
push
cld
shll
enter
mov
push
mov
push
fucomi
jae
mov
mov
daa
or
and
xor
sub
sbb
ret
cmpsl
dec
cmp
push
mov
pop
xchg
mov
or
jne
sbb
xor
dec
add
mov
adc
sbb
mov
xchg
into
insl
jb
ret
pop
in
inc
loopne
out
inc
add
sub
inc
iret
nop
push
scas
gs
adc
sub
jle
jno
mov
ljmp
adc
les
and
rcl
lock
dec
inc
fcomp
cmp
fisubl
cmp
fcmovu
add
pop
and
jmp
push
into
sub
cmp
idivb
insb
dec
std
and
mov
sbb
inc
pusha
sub
int
dec
mov
sbb
stos
jb
push
lea
sahf
arpl
adcl
push
inc
lret
jb
adc
mov
ror
test
add
rcl
adc
das
in
adc
aad
insb
mov
sbb
sub
xor
sub
xor
es
adc
popw
inc
push
sub
rclb
sub
xchg
xlat
test
addr16
lods
pusha
mov
in
sbb
pop
and
push
xchg
out
roll
jmp
cmp
fsubrs
pop
cmp
addl
push
mov
sbb
push
inc
rorb
lahf
cmp
movhps
clc
inc
popa
aaa
pop
xorl
push
mull
out
stc
lret
sbbb
lods
mov
mov
ficoms
mov
sbb
rcl
inc
jae
lret
bound
jl
les
loope
outsl
rorb
dec
adc
push
xchg
lcall
popa
gs
xchg
sub
sbbl
mov
mov
pop
xchg
xor
cmp
push
addr16
add
inc
das
decl
daa
scas
push
rcrl
mov
lcall
mov
or
aas
and
push
dec
sub
movsl
sub
jae
out
push
push
add
pop
mov
shlb
and
jle
pushl
mov
pusha
adc
adc
enter
sub
pop
and
mov
inc
cwtl
cmp
push
dec
test
or
jae
jmp
mov
mov
sti
sbb
aas
inc
daa
sbb
mov
dec
and
mov
adc
into
icebp
mov
cld
lret
sub
shlb
test
jp
andl
xchg
fisttps
arpl
and
jmp
mov
mov
xor
jle
add
lcall
inc
add
mov
repz
pop
aaa
push
outsb
adc
mov
mov
sbb
mov
or
daa
ror
jb
in
xor
sbb
les
pop
and
adc
sbb
shll
and
dec
mov
xchg
and
mov
push
mov
push
xorb
push
fs
adc
rcrl
icebp
pusha
xchg
icebp
scas
clc
lahf
sbb
push
imul
sbb
fdivl
pop
test
add
shll
sarb
stc
jl
push
in
or
inc
jb
out
movsb
pop
aaa
or
pop
sbbl
pushf
loopne
imul
dec
lods
xor
or
cmp
push
bound
cli
ror
sub
repnz
dec
mov
inc
mov
lcall
dec
xor
shr
andb
sbb
push
aas
mov
testb
dec
std
icebp
cli
push
push
lahf
xor
cmp
lcall
int3
popl
xor
inc
sub
xor
popf
jp
lcall
mov
mov
inc
imul
xor
test
and
and
jmp
fwait
mov
adc
mov
xor
lahf
push
push
stc
std
pusha
sbb
fucomi
cmp
fidivs
js
mov
jp
stos
shrl
cmp
jo
add
pop
adc
lds
popa
xor
divb
mov
jle
sbb
out
andl
shlb
mov
cmp
loop
jecxz
inc
enter
inc
dec
dec
xor
mov
mov
add
dec
cmp
shrb
sbb
inc
pop
push
sbb
out
ja
push
adc
pop
bnd
or
inc
sarb
xchg
jmp
outsl
xchg
dec
adc
jb
sbb
cmp
push
nop
push
lret
imul
clc
cltd
cmp
scas
out
dec
enter
data16
outsl
arpl
jle
lods
cmp
ljmp
pop
sbb
inc
and
mov
lret
stc
in
mov
pop
mov
xchg
sbb
pusha
insb
std
sbb
loopne
jbe
std
jns
fucomi
mov
sbb
and
xrelease
push
mov
or
movsb
sbb
das
jne
popf
pop
aaa
in
push
or
push
inc
push
rclb
fistl
es
aad
lods
push
pop
and
ljmp
mov
or
cmp
mov
xlat
es
sbb
lar
leave
movsl
or
iret
sub
ljmp
sub
or
push
inc
jne
outsl
fisubrs
cmpsb
pop
imul
push
xchg
mov
mov
xchg
cmc
cli
fisubl
sahf
mov
lds
cmpsb
aas
push
xor
in
mov
aam
jmp
and
mov
lock
sbb
outsb
jmp
je
mov
mov
push
mov
mov
or
adc
mov
loope
dec
scas
cmp
mov
rorl
test
clc
loope
jl
sar
mov
inc
test
stos
nop
movsb
fnsave
mov
add
mov
adc
push
cmpsl
leave
imul
push
cli
sahf
jns
mov
lea
and
out
or
jo
rolw
movsb
sbb
add
xchg
push
pop
mov
cmp
cmp
test
pop
or
mov
cmp
orb
fucomip
push
dec
es
cmp
cmp
ss
adc
and
js
cmpsl
into
pop
dec
out
lret
andl
inc
clc
shrb
xor
and
pop
lock
rcrb
mov
jp
cmp
push
push
mov
mov
jmp
push
das
int
int
popa
jo
push
xchg
js
std
rcrb
shr
dec
pop
xorb
and
cmp
lret
jno
fcoml
lret
cltd
jae
pop
stos
dec
out
pop
xchg
lock
decl
and
sbb
pop
test
sub
push
mov
dec
popf
cld
repz
gs
sbb
into
gs
out
daa
or
xchg
mov
mov
fisttpll
je
cltd
arpl
insb
popa
sub
lret
pop
imul
push
loopne
scas
addr16
push
mov
xchg
fwait
jo
mov
sarb
data16
je
lds
mov
rcll
sub
ret
out
fwait
adc
inc
and
cmp
dec
pop
test
jge
out
push
mov
or
jge
shl
in
clc
sbb
arpl
int3
sbb
jmp
mov
inc
mov
inc
mov
or
xor
inc
dec
lods
std
aad
push
cs
mov
add
jl
inc
scas
mov
rorl
inc
scas
insb
fimuls
jno
pop
or
lcall
mov
push
mov
fucomp
sti
scas
jp
shll
cwtl
inc
and
pop
bound
mov
sbb
jae
dec
jge
daa
mov
cmp
pop
in
add
sti
cmpsb
jne
adc
inc
pop
jne
shrb
leave
jmp
outsl
lods
cmp
shll
add
test
sbb
popf
pusha
andl
xor
and
lods
push
push
jecxz
jne
gs
rcr
jne
or
rcr
shll
mov
aas
mov
jb
iret
pop
mov
cmp
iret
sub
lea
fs
cmp
jo
jp
xor
inc
stos
push
jl
shll
add
or
and
cmpsl
sbb
push
mov
push
gs
and
mull
and
popf
jnp
pop
jecxz
jae
repz
icebp
pop
in
and
fdivp
mov
pop
sub
test
lods
fcoml
into
int
mov
xor
mov
fsts
or
imul
jne
hlt
ret
mov
fists
pop
mov
adc
test
and
adc
pop
push
pop
jno
or
pop
mov
xchg
xchg
sbb
sub
mov
push
mov
cmp
js
dec
mov
mov
adcb
rcrb
in
jnp
sbb
enter
idivl
fsubs
scas
xchg
in
push
jle
jecxz
test
pop
jmp
xchg
repz
cmpsl
mov
push
sub
and
inc
lea
push
jp
lock
mov
push
mov
or
push
mov
jb
test
xor
and
and
fildl
pop
aam
icebp
dec
jmp
sbb
test
adc
push
adc
outsl
dec
pop
stc
xchg
stos
mov
stos
xchg
push
cmp
lods
out
xor
jns
sarl
xchg
push
and
cmpsb
mov
into
cmp
clc
sti
stos
dec
iret
adc
mul
sbb
cmpsb
and
sti
push
inc
hlt
mov
popf
mov
jmp
js
in
cli
adc
arpl
lods
sub
js
pop
mov
dec
dec
repz
mov
and
jge
adc
xor
mulb
xor
add
mov
add
paddusb
mov
test
int3
rcr
cmp
cmpsb
inc
movsb
popf
xchg
mov
or
mov
mov
inc
data16
mov
int
add
stos
mov
jg
mov
insl
jg
xor
cld
push
sbb
jmp
leave
xor
test
xor
jg
adc
pushf
test
imul
fdivl
mov
cltd
std
test
sbb
mov
bound
dec
add
sbb
pop
pushf
cmp
das
ja
add
jle
mov
push
loopne
repnz
push
mov
xor
aas
cmp
push
icebp
push
mov
mov
sub
leave
jo
gs
inc
add
pop
mov
into
imul
dec
sbb
xor
faddl
xchg
cmp
add
out
dec
sbb
nop
cld
add
loopne
bound
xor
xlat
add
jle
imul
pop
pop
pop
lret
lahf
cld
imul
andl
or
mov
loope
pop
rclb
hlt
mov
jb
pop
insl
das
sbb
jg
inc
jg
in
call
loop
or
pop
mov
adc
cmpsl
ret
fcomi
lods
inc
push
daa
mov
sub
cmp
and
xor
es
mov
adc
enter
ljmp
shll
jp
mov
push
rcrb
sbb
push
repz
cmp
push
nop
insl
sub
setns
rorb
enter
push
fcomps
aaa
jp
push
scas
mov
sahf
imul
pop
push
dec
sub
clc
movsb
inc
pop
xchg
ficomps
xor
daa
arpl
sti
cmc
pop
inc
ret
cmp
cld
insb
insb
mov
xchg
lods
dec
jb
mov
out
shl
dec
scas
scas
push
pop
cmp
fisubrs
aam
sti
pop
pushf
adc
test
xchg
dec
ret
shlb
in
xor
mov
aad
scas
int3
inc
push
clc
pop
jle
inc
sub
jae
pop
imull
inc
loop
xor
and
inc
cmpsb
or
and
push
mov
lock
pop
pop
pop
jbe
add
xor
sub
pop
out
loop
fidivs
add
cwtl
std
inc
call
shrb
jnp
sbb
add
mov
xchg
sarb
lret
mov
add
data16
sub
push
mov
mov
push
sub
repnz
sbb
mov
iret
stos
push
dec
xchg
cmp
shlb
sti
sbb
sti
dec
sub
nop
rcr
cmp
fidivrs
jge
fldt
mov
int3
stos
xor
popa
lahf
loopne
add
mov
scas
or
std
adc
xorb
and
push
ljmp
add
or
xchg
add
into
sub
sarl
xchg
sub
dec
scas
repz
pop
out
cli
pop
sub
cmpsl
out
dec
jne
shr
outsb
add
inc
ret
push
or
inc
push
cld
dec
sahf
daa
loop
sbb
pop
fisubl
xor
mov
mov
pusha
cmpsb
xor
jle
hlt
pop
repz
push
dec
xor
stc
jb
sub
inc
sub
outsl
andl
jae
push
sarl
repnz
xor
jae
xchg
xchg
stc
fsubr
or
dec
enter
and
mov
movsb
mov
gs
inc
jae
sarl
inc
adc
mov
out
cmp
sbb
xchg
adc
mov
and
mov
mov
push
add
loop
ljmp
sub
outsb
jae
cmp
out
cmp
call
xor
pop
sbb
xchg
inc
cltd
repnz
dec
adc
or
push
scas
fwait
jl
addb
fs
repnz
or
int3
int
test
ljmp
loopne
sbbb
fidivl
jb
out
in
fs
shl
push
in
mov
aad
cs
sbb
cmp
adc
call
xor
lahf
gs
jge
faddl
xchg
cmpsl
loop
jo
out
sarb
sub
mov
or
add
imul
cs
cmp
add
cmp
sbb
cwtl
clc
xchg
popf
cs
cmpsb
test
mov
data16
out
roll
je
aam
sub
outsb
roll
popf
pop
out
fcoml
push
inc
mov
add
testl
sbb
jns
stos
and
ror
lea
dec
test
stc
push
xor
xchg
xchg
leave
push
int
jnp
sbb
dec
ficompl
lret
dec
xor
xchg
bound
xor
cmpsl
pusha
imul
in
ss
outsb
rolb
sub
adc
inc
fldcw
jnp
movlps
cmp
ja
sti
fwait
sbb
jl
insl
mov
f2xm1
lds
shll
in
pop
adc
dec
out
std
sub
les
repz
sub
std
cmp
imul
xor
movsl
cmp
notb
ljmp
xor
mov
inc
ret
dec
pop
mov
sub
and
call
mov
cltd
mov
ret
js
in
shll
nop
out
push
adc
inc
mov
stos
sahf
xchg
mov
mov
js
mov
cs
sbb
add
pop
pop
cmp
mov
add
xchg
mov
inc
or
sub
in
sub
fsts
push
and
jnp
sbb
inc
pop
or
and
dec
out
imul
sub
addr16
xchg
push
scas
mov
push
cmp
jbe
clc
lods
xchg
cmpsl
mov
stos
das
outsb
mov
mov
push
out
lea
mov
cmp
imul
jg
mov
inc
jns
inc
xor
lret
fldenv
cmp
sbb
loopne
aaa
mov
cld
jae
mov
out
js
out
push
push
jecxz
cltd
mov
ret
arpl
mov
fistl
mov
xchg
aam
sahf
add
rol
sub
shrl
outsb
repz
dec
cmp
sbb
inc
sbb
hlt
lret
sbb
cmp
gs
loopne
xchg
xor
push
sub
mov
mov
push
cs
adc
push
fldl
cmpsb
and
cmpb
sub
jbe
call
pop
xor
outsl
jbe
popa
mov
fs
inc
add
sbb
push
pop
dec
int3
mov
insb
mov
pop
mov
shll
mov
jp
xor
repz
imul
sbb
loopne
outsb
gs
mov
mov
lea
lods
orl
cmpsl
iret
push
pop
fildll
pop
jae
cmp
push
outsl
mov
xchg
movsl
ja
int3
mov
cmp
repz
jbe
jne
ljmp
mov
daa
popf
jg
jne
iret
mov
mov
push
mov
pop
inc
add
add
and
stc
movsb
stos
mov
xor
aad
push
push
mov
ja
cmpsl
lcall
push
and
shrl
sub
adc
sbb
cs
xchg
mov
ret
je
dec
leave
cmp
add
arpl
jnp
aam
dec
lcall
das
xor
pusha
pop
out
mov
mov
mov
mov
jne
inc
cmpsl
fdivrl
and
pop
jo
fidivrl
sbb
les
mov
rorb
mov
push
ret
push
cmpsb
fistpl
fstpt
shrb
push
pop
in
and
xchg
inc
mov
gs
jno
push
aam
xor
dec
loope
jge
adc
sarb
xor
pop
sbb
jbe
aaa
andb
int
out
xchg
adc
fisubl
inc
call
pop
movsl
mov
test
cmpsl
pop
mov
mov
xchg
lock
or
push
arpl
sbb
mov
out
test
ds
ffree
lcall
add
mov
rcll
sub
outsb
inc
aaa
ror
mov
inc
mov
sbb
scas
arpl
pop
data16
xchg
mov
loope
sahf
sub
mov
outsb
cwtl
sbb
mov
pop
dec
lret
sub
or
arpl
repz
cmc
imulb
xchg
sub
je
call
or
imul
sarb
into
lret
inc
sub
jne
das
mov
push
cmp
jne
stc
ss
stos
je
negl
int3
cmp
jecxz
mov
adc
push
sub
xchg
in
cmp
repz
mov
repz
insl
lcall
mov
xor
mov
loope
mov
xor
ljmp
mov
in
mov
mov
pop
cwtl
push
xchg
popa
repnz
movl
cli
sbb
cmp
ss
xchg
or
stos
mov
imul
in
decl
dec
ss
movsb
aaa
leave
xchg
cmp
push
ljmp
push
add
and
adc
mov
mov
pop
dec
nop
int3
jecxz
jnp
lret
and
mov
gs
subb
orb
arpl
adc
rorb
push
addr16
fidivl
ljmp
scas
jnp
out
sahf
dec
fdivs
or
into
insb
sub
pop
call
out
xor
dec
and
sbbl
mov
jns
lret
or
push
jl
in
adc
or
es
aad
sahf
jl
int3
pop
mov
add
jno
lds
sbb
mov
dec
jecxz
pop
stos
lock
push
loopne
dec
hlt
cmp
xor
cmpsb
cmp
sahf
jnp
inc
and
sbbb
jb
orl
and
jmp
clc
push
inc
ret
dec
loop
mov
lea
sbb
mov
rol
repnz
fisttpl
not
repnz
bound
mov
sub
orl
outsl
xor
jnp
pop
jecxz
jg
and
movsb
ljmp
iret
inc
sarb
hlt
jg
aad
jns
inc
testb
jno
aad
mov
imul
add
jb
ss
pop
icebp
es
fsubrs
or
pop
repz
and
iret
lret
call
lds
test
std
mov
mov
jmp
sub
mov
leave
mov
mov
test
jo
insl
adc
xor
sub
iret
xor
adc
test
dec
mov
pop
mov
aaa
test
jecxz
pop
push
xchg
jg
adc
scas
push
js
sbb
mov
test
add
arpl
in
in
or
mov
xor
pop
sub
add
inc
xor
sbb
aaa
in
adc
mov
mov
push
add
mov
mov
jmp
leave
xor
int3
jp
mov
call
pop
addl
pop
cld
test
repz
push
dec
or
call
stos
cmp
das
fimuls
in
arpl
lea
pusha
int3
jg
push
dec
push
nop
cmc
aas
fisubrs
jns
or
dec
test
cmpsb
lods
xchg
out
xor
aas
mov
neg
or
aas
sbb
fdivs
or
daa
mov
sbb
mov
mov
loop
lods
mov
das
push
pop
cmp
in
jae
dec
sti
sub
dec
aas
mov
pop
xor
inc
and
ret
out
xor
enter
or
sbb
imul
add
insl
sti
add
pushf
push
jl
lahf
lds
mov
sub
mov
in
pop
repnz
pop
cmpsb
movlps
popa
gs
mov
sub
int
cmp
sbbl
movsb
xchg
movsb
xchg
in
or
cwtl
jnp
push
mov
rorl
mov
mov
repz
mov
xor
and
adc
push
xlat
mov
xor
jns
int
inc
cwtl
lcall
sub
push
out
repz
push
jnp
sbb
test
ss
mov
loope
mov
cmp
fcomip
test
bound
sbb
imul
inc
pop
or
gs
or
mov
lods
or
les
lahf
xor
inc
or
in
pushf
arpl
popa
or
mov
dec
stos
cmp
aad
lods
xlat
cs
mov
loope
sub
data16
xchg
sahf
adcl
in
out
and
or
fs
pushf
mov
enter
mov
fisubs
xor
lods
jbe
adc
mov
sbb
in
shrb
icebp
scas
xor
cmpsl
cltd
push
mov
push
pop
xchg
cli
mov
pop
xor
xor
out
mov
out
loop
add
out
push
or
push
andl
mov
test
jae
sahf
add
insl
and
fcmovb
test
hlt
sti
jle
jae
insl
cli
add
aam
adc
jmp
inc
movsb
mov
mov
lcall
cmpsb
pushf
adc
addl
paddusb
add
pop
xchg
mov
inc
add
pop
loop
push
sub
pop
mov
inc
ret
les
lds
je
inc
cmp
jns
add
push
insl
mov
lods
jne
inc
lods
and
pop
mov
ss
xor
jmp
in
push
jne
adc
and
pop
aad
into
pop
sarl
or
test
sub
mov
lods
shrb
jo
flds
sbb
test
repnz
test
loopne
xchg
leave
jmp
push
shlb
push
push
mov
nop
mov
fs
insl
pusha
push
mov
mov
xchg
jne
test
sbb
mov
xor
mov
les
cmc
dec
cmp
icebp
dec
xchg
push
jns
jmp
xchg
sahf
add
dec
jnp,pt
je
fcmovu
mov
nop
sti
leave
mov
xchg
js
inc
mov
out
gs
lcall
add
mov
fidivl
jbe
mov
xor
imul
outsl
rcl
repnz
stos
test
sub
scas
scas
je
arpl
lods
lds
inc
adc
push
or
mov
inc
fisubrs
lahf
sub
repnz
cwtl
lahf
jmp
shlb
repnz
stos
and
popf
add
sub
pop
mov
mov
sbb
sub
fs
mov
ds
in
xor
sbb
dec
jmp
in
loope
nop
imul
test
sub
mov
push
sbb
and
adc
pop
aam
inc
repz
sub
dec
jp
call
fimuls
dec
or
sbb
gs
mov
gs
fld
ret
pop
jmp
pop
imul
cld
mov
push
ret
aad
inc
mov
mull
mov
mov
je
in
popf
and
fdivrp
fsubrs
sbb
sub
fdiv
filds
sbb
pop
lock
ljmp
add
insl
jle
ljmp
mov
out
aam
jge
cld
mov
jp
jns
mov
ja
out
scas
faddl
xchg
orl
sti
test
sarb
cmp
fcompp
mov
enter
test
cmp
pushf
mul
jp
cmpsb
sti
fcomi
insl
and
jle
out
inc
xchg
inc
or
add
les
xchg
popf
fxtract
jmp
loopne
xor
mov
jae
mov
arpl
add
pop
xchg
gs
mov
xchg
jno
adc
scas
cmp
ja
insl
cltd
xchg
mov
mov
gs
or
enter
cmpsl
pop
and
dec
inc
sahf
jb
push
push
icebp
iret
pop
and
imul
push
stos
int3
mov
cltd
movsb
in
add
jnp
movsl
cmpb
enter
or
outsb
pusha
adc
adc
popa
test
adc
mov
in
mov
popa
test
mov
ds
pop
adc
push
lea
clc
xchg
iret
cmp
imul
xor
idiv
outsl
lret
cmp
das
repz
xchg
mov
cltd
xor
dec
inc
rorb
push
xor
mov
mov
and
push
daa
add
cmpsb
ss
cmp
mov
jns
repz
into
out
cmp
shrb
pop
inc
in
je
call
cwtl
test
cmp
out
push
cmp
and
push
fbld
adc
movsb
out
mov
dec
fstpl
push
pop
adc
push
std
cmp
inc
in
cmpsl
push
pop
loop
inc
shr
push
dec
mov
add
mov
out
daa
mov
cld
sbb
movsb
sub
cli
pop
xor
xchg
scas
outsl
out
fs
jo
test
mov
ljmp
fdivrl
stos
sub
sub
out
xchg
iret
arpl
jg
cmp
das
pop
dec
test
hlt
fadds
sub
popa
repz
cwtl
dec
push
mov
sahf
mov
or
sbb
pop
cmp
lds
push
adc
fistpll
jl
xlat
fidivl
icebp
mov
rcrb
push
mov
mov
mov
std
add
xor
pusha
cmp
loopne
fistl
jbe
stos
push
dec
xor
cltd
pop
mov
mov
aam
lea
lock
mov
stos
aas
sbb
pop
jb
subb
cmpb
push
jg
mov
cmp
insb
sti
ljmp
push
insl
repnz
stos
fcoms
mov
mov
inc
js
test
sub
inc
cmpsl
clc
mov
scas
xchg
sub
lahf
fstpt
cmp
addr16
push
or
mov
mov
cmpb
and
shl
movsb
ret
and
divl
jns
add
mov
inc
mov
cmp
mov
cmpl
sub
movsl
or
add
or
repz
popa
into
jne
push
mov
xchg
inc
lea
add
daa
add
push
sbb
repnz
xor
cmp
lea
xchg
or
mov
mov
jne
imul
pop
push
inc
and
sbb
in
or
adc
and
int3
imul
mov
cmp
mov
sahf
sub
xor
dec
out
lods
and
ret
mov
cmp
mov
call
jecxz
sbb
lock
inc
pop
int
rcl
mov
and
mov
lock
fldcw
push
sbb
adc
inc
insb
popa
insl
adc
int
and
ljmp
imul
into
fisttpl
and
or
dec
add
movsb
imul
daa
push
aam
pop
adc
inc
inc
jo
dec
dec
jmp
xchg
xchg
and
sahf
add
hlt
jbe
cmp
mov
jg
repnz
pop
hlt
mov
mov
loopne
xor
xlat
pop
pop
call
fldt
xchg
adc
out
out
mov
lds
test
xchg
je
fmuls
pop
mov
dec
adc
pop
sbb
mov
push
aas
je
ficomps
or
enter
pop
cmpsb
or
cmp
fwait
mov
cli
sbb
or
mov
sub
push
xchg
in
ret
outsb
cs
sub
adc
insb
sub
inc
add
pusha
adc
pop
xlat
notl
jl
jecxz
jg
xor
je
xor
sub
pushf
ja
loop
mov
pop
lret
dec
sbb
insl
ds
pop
outsb
and
dec
out
sahf
or
or
lock
jno
mov
adc
inc
cltd
mov
jns
pop
or
adc
dec
mov
mov
inc
pop
adc
pop
mov
mov
pop
dec
mov
inc
push
outsl
outsl
xchg
jo
fisttpl
lret
dec
fimull
addb
sbb
jmp
rcl
sub
les
aas
aad
pop
mov
mov
in
out
in
iret
stos
fnstcw
movsb
mov
adc
cmp
sub
pop
lret
inc
js
adc
push
or
push
mov
mov
dec
jb
nop
pusha
aad
push
or
mov
push
test
and
mov
sub
mov
addr16
jg
into
int
adc
mov
jae
jbe
or
popf
cmp
jns
gs
popa
mov
pop
cmp
shll
pushf
test
outsb
xor
adc
scas
inc
cwtl
pushl
inc
adc
sti
mov
push
insb
adc
xor
fldt
test
push
push
mov
cmp
jl
adc
jg
aas
mov
or
adc
or
sub
jae
xchg
into
insl
pusha
fisubrl
jp
stos
pop
data16
pop
push
subl
xor
roll
sarb
movb
sub
stos
icebp
cmp
adc
mov
xor
sahf
cli
or
xchg
or
xchg
lods
sbb
mov
roll
pslld
add
lock
xchg
js
sub
xlat
pop
sub
dec
je
fwait
cmp
popa
mov
mov
add
sti
pop
pop
or
add
cwtl
iret
push
scas
inc
or
ret
add
mov
aad
adc
push
stc
and
in
push
test
xlat
call
xchg
pop
cwtl
xchg
mov
lea
pushf
mov
push
sbb
or
cmpsb
out
cmp
pop
sahf
add
movsl
mov
in
push
cmpsl
xor
xchg
jae
insl
test
jnp
sbbb
jecxz
sahf
pop
loope
psllq
push
fucomp
jg
or
sbb
mov
orb
pop
cltd
inc
hlt
mov
xor
xor
xor
lahf
je
or
icebp
leave
mov
mov
xor
adc
jae
rcll
scas
aad
enter
stos
test
push
jnp
nop
mov
cmp
sub
leave
stc
fsubr
dec
inc
jns
pop
mov
test
jle
push
dec
fsubrs
or
cwtl
dec
xor
inc
or
push
add
sahf
mov
hlt
enter
push
es
lea
dec
xchg
cmpsl
ljmp
or
loope
sbb
jg
adc
inc
adc
out
or
cmp
cmc
je
cltd
cmc
mov
xchg
mov
out
lret
idivb
fs
in
or
dec
cs
mov
rclb
aaa
jecxz
incl
inc
jecxz
push
inc
xchg
bound
pop
xchg
jbe
div
std
arpl
add
mov
xor
jg
in
into
das
iret
adc
jbe
adc
mov
loope
mov
xor
outsl
in
scas
in
jns
mov
mov
and
imul
scas
mov
lea
adc
arpl
sbb
xchg
cli
mov
xor
rcrb
mov
out
les
nop
mov
ret
lret
inc
or
lods
jo
dec
stos
enter
inc
fdivl
pop
mov
mov
movsl
pop
sbb
mov
cwtl
movsl
fs
sub
lods
popl
addr16
rcll
data16
outsl
aas
cmpsb
mov
ja
pop
inc
xchg
mov
xor
jl
mov
lcall
push
std
cmpb
adc
popf
es
mov
xchg
sbb
inc
pusha
mov
fildl
jno
dec
lds
imul
adc
in
cmp
xor
ret
dec
insl
jmp
rcrb
mov
mov
ljmp
fldt
jecxz
add
xor
sub
jl
inc
filds
and
ja
in
leave
push
popf
dec
scas
lret
lcall
xchg
push
cs
sar
add
movsl
add
adc
fs
mov
sarb
cmp
push
pop
add
repz
sahf
test
cmc
sbb
xor
mov
jno
fnsave
dec
cs
jp
je
pop
dec
lods
xor
and
or
pop
fs
and
inc
leave
add
fadds
xchg
mov
cmp
and
daa
test
mov
ss
xor
stos
xchg
cmp
arpl
insl
aas
jmp
pop
pop
mov
adc
into
scas
repnz
sti
sbb
jno
dec
inc
and
push
add
inc
jbe
and
std
xchg
sahf
push
cmc
insl
pusha
notl
jle
scas
push
adcl
fldl
fcompl
hlt
cmp
cmp
pushf
insb
or
add
jno
ja
cwtl
aam
out
repnz
sub
dec
and
push
or
and
pop
div
mov
js
dec
divl
std
xchg
out
dec
sahf
insb
aas
and
fadds
nop
jle
dec
or
xor
pop
cmp
lods
or
sbb
lods
adc
out
fs
data16
mov
loop
out
push
inc
psrlw
jae
mov
sub
ja
fwait
into
mov
fistps
xchg
or
insb
jle
rorl
mov
jnp
popa
pop
aaa
gs
ss
push
adc
cmp
test
dec
pop
push
xchg
xchg
clc
insl
xor
jecxz
push
lods
mov
loop
lds
insb
insl
push
cmpsb
mov
xchg
mov
pop
cmpl
xor
sbb
mov
mov
into
std
shrb
mov
ljmpw
idiv
leave
xchg
shll
cs
inc
xchg
nop
iret
aam
add
and
sub
aaa
xor
lods
ds
inc
inc
cmp
mov
pop
push
xor
inc
mov
dec
arpl
push
imul
lahf
cmp
inc
push
adcl
mov
imul
xor
scas
test
jp
sub
shl
subl
hlt
addr16
in
sarb
sub
mov
hlt
sub
xlat
mov
into
adc
pop
cs
push
jge
vaddsd
mov
out
adc
cmp
push
repz
sub
lock
mov
xchg
lea
jnp
pop
sbb
idiv
stos
or
lret
es
push
ficomps
jmp
jp
adc
mov
sbb
mov
sbb
xor
test
pop
jb
fcoms
dec
mov
cmp
sbb
mov
clc
pop
xchg
cwtl
mov
adc
into
fiadds
jmp
inc
ds
shl
movq
arpl
ja
cmpsb
rclb
test
ffreep
xchg
daa
adc
lahf
sub
push
push
add
mov
andb
cmp
push
sub
push
xchg
imul
shrb
popa
repnz
repz
adc
out
cmp
dec
js
add
pop
orl
dec
insb
pop
outsl
jo
xchg
mov
pop
in
mov
data16
pop
mov
incb
es
test
jno
dec
pushf
xchg
mov
mov
loop
lea
lret
daa
or
call
loope
push
inc
lahf
inc
pop
test
cmpsl
in
add
push
and
push
inc
loop
arpl
xchg
sbb
mov
and
inc
call
es
xor
fwait
sub
pop
cmp
pop
sbb
push
test
lods
dec
popf
mov
xor
mov
imul
mov
stos
das
les
and
sbb
sbb
xlat
sbb
dec
add
leave
push
fistpl
bound
mov
push
xchg
scas
or
mov
addl
mov
dec
call
push
mov
enter
jnp
and
mov
fbld
cli
inc
mov
xor
imul
cmp
xchg
jae
xor
mov
and
vandps
mov
fidivrs
das
sbb
in
pop
ss
and
jbe
sub
es
stos
inc
mov
add
adcl
inc
sbb
xor
push
xor
sbb
cld
jae
cld
mov
fnstsw
hlt
jl
cmp
aas
ret
stos
in
xchg
fistps
call
mov
sub
or
fnsave
dec
int3
fucomi
je
leave
sahf
add
imul
mov
js
adc
pop
lock
pushf
or
loopne
push
jae
and
cmp
ljmp
rcll
in
mov
rclb
xor
mov
pop
xor
push
or
imul
lods
cmp
clc
ss
adc
loope
ret
mov
test
les
or
std
mov
ret
lods
dec
jns
mov
mov
stc
push
mov
jle
jge
int
jno
out
in
xor
mov
enter
in
mov
push
out
mov
lcall
pusha
leave
daa
roll
xchg
in
sub
inc
gs
aam
fiaddl
jno
and
mov
test
enter
dec
sti
jg
clc
dec
sbb
mov
push
push
addb
sbb
mov
adc
outsl
dec
and
rolb
scas
sbb
push
add
lcall
sbb
fdivr
jg
lock
pop
ja
and
pop
call
push
shll
xchg
jnp
push
clc
dec
ss
push
cmp
inc
adc
in
lods
lcall
add
push
xchg
fimuls
fwait
sbb
lcall
lahf
cmp
fwait
lret
sbb
cmp
ret
sbb
cmc
mov
icebp
and
fmul
outsl
daa
cltd
cwtl
jbe
jns
xlat
jns
mov
push
pop
jge
lock
and
shll
sbb
jmp
sahf
mov
dec
xchg
int3
movsl
push
jnp
fcomps
fstps
mov
rcl
test
popa
sbbl
cwtl
stos
sub
inc
cmp
leave
loop
adc
mov
aad
imulb
gs
lods
xchg
pop
mov
push
jge
cmp
inc
push
push
xchg
push
mov
fadds
dec
mov
and
or
inc
or
adc
cmp
sbb
js
xlat
negl
mov
mov
jge
push
fcomip
sub
sub
das
push
add
mov
movsb
cmp
jne
xchg
dec
sub
imul
cmp
ds
data16
and
das
xchg
or
xchg
mov
mov
imul
roll
std
ret
adc
and
push
fmulp
int3
inc
mov
pop
adc
enter
idivl
cmpsl
inc
jns
and
pop
in
mov
mov
xor
adc
cmp
int
mov
pop
cmp
clc
mov
dec
mov
add
or
pop
sbb
and
test
mov
pop
in
es
lds
mov
rol
fsubs
mov
lea
mov
adc
sub
loope
push
or
leave
and
mov
cmp
inc
lods
daa
jno
outsb
test
cltd
adc
add
aas
leave
dec
mov
je
arpl
sbb
sbb
fisttpll
ljmp
popa
leave
or
xchg
ret
scas
mov
dec
out
xchg
inc
add
call
sar
and
mov
insl
pop
jnp
insl
inc
dec
iret
adc
inc
decb
pop
xchg
xor
mov
push
and
mov
out
push
notl
jo
outsl
lods
loopne
mov
push
imul
sbb
inc
cli
xor
rolb
push
hlt
clc
adcl
inc
movsb
cltd
inc
xchg
pop
cmp
cmp
aaa
imul
push
testb
cmp
lret
mov
or
mov
clc
cs
push
inc
mov
push
xor
jle
pop
add
xor
jmp
add
push
mov
cmp
fs
jmp
mov
cmpsl
cmp
clc
loope
dec
inc
div
ret
aam
call
negl
fwait
hlt
lcall
fisubrl
outsb
and
xorl
fadd
stos
repnz
inc
cmp
inc
jle
fnstenv
dec
mov
js
aas
test
jb
adc
das
sub
stos
push
dec
cwtl
push
insb
imul
lahf
xor
xchg
out
mov
fidivs
scas
mov
mov
sti
xorl
imul
sbb
add
dec
sbb
es
into
mov
mov
inc
jnp
mov
movsb
jns
lret
stos
std
iret
mov
mov
outsb
scas
das
pop
movsl
xchg
push
outsb
mov
cmpsb
push
cli
xor
insb
scas
or
mov
xchg
mov
mov
cs
cmp
pop
and
rol
dec
jmp
xor
pop
mov
or
call
lock
pusha
fnsave
ret
push
repnz
sub
notl
mov
or
mov
mov
nop
sbb
or
adc
sbb
cmpsb
out
movsb
arpl
xor
adc
ficoml
add
or
sbb
push
lcall
and
arpl
iret
jg
mov
mov
leave
fistpl
daa
into
cmp
fdivs
add
sarl
mov
pop
pop
mov
fsubl
push
jg
js
int3
push
cwtl
sahf
shll
xchg
out
lret
push
movsb
addb
cltd
mov
loope
lahf
and
sahf
in
push
sub
cmp
mov
cmpsl
stos
out
jp
xor
les
je
cwtl
pop
addr16
testb
mov
in
rcl
jmp
ret
xchg
lds
addr16
pop
xor
cmp
mov
test
andb
test
ja
enter
pop
cmpsb
insl
lahf
jnp
mov
enter
mov
fildl
stos
stc
adc
scas
enter
mov
pushf
adc
xchg
sub
out
test
inc
stos
insb
fstpl
jp
lret
inc
sub
xchg
mov
lahf
push
lods
or
mov
jne
and
xchg
cltd
popa
pop
sahf
or
cmp
jle
imul
xchg
gs
ss
fcmovu
repnz
or
ret
mov
ss
add
inc
jp
insb
jg
fcoml
rcrl
dec
inc
jg
mov
push
flds
push
in
mov
fs
and
push
lds
test
lods
dec
jmp
inc
lret
jne
sub
xchg
scas
adc
test
in
push
xchg
imul
stos
pop
stc
jne
movsb
es
push
stos
adcl
push
mov
shrl
lods
pop
mov
inc
add
xchg
mov
inc
inc
cmp
mov
mull
cmp
jp
jnp
sti
add
in
jb
xor
aaa
js
mov
push
cmp
test
jp
xchg
cmpb
xor
mov
mov
adc
rclb
add
and
rolb
add
inc
fiaddl
add
lcall
push
cmp
fisubl
in
push
fcmovbe
pop
not
lcall
in
add
pop
pushf
cld
mov
in
xchg
xchg
xor
movsl
popf
fcmovne
cltd
test
add
cmp
cs
test
inc
mov
jecxz
xor
call
ss
push
lods
push
jo
xchg
dec
jge
mov
lock
shlb
iret
shl
sbb
sbb
push
mov
cmp
mov
jge
mov
movsb
ret
fisubrl
fsin
inc
fsubrl
call
pmuludq
xchg
sahf
sub
push
mov
call
dec
and
push
mov
test
test
push
mov
imul
inc
popf
stc
insl
addr16
xlat
imul
cmp
add
mov
cwtl
push
sbb
mov
pusha
pop
jle
clc
arpl
inc
mov
das
roll
scas
adc
nop
cmp
sbb
fwait
repz
cmp
mov
mov
jge
int
in
aad
add
sub
inc
popf
out
neg
mov
xchg
aaa
xchg
lea
ljmp
pop
shlb
jmp
cmpsl
sbb
dec
adc
jg
xchg
divb
xchg
icebp
fadds
jge
ljmp
mov
sbb
shll
and
nop
mov
insb
mov
inc
je
push
fucomp
lods
bound
sub
or
fs
jmp
imulb
sti
iret
test
sbb
out
adc
stos
jge
lds
outsb
sub
inc
fdivrs
mov
cmp
fcoms
fsubrp
pushf
mov
lds
jp
push
test
sar
mov
push
sarb
and
sub
push
neg
add
sub
out
push
sbb
bound
or
cli
add
mov
add
sub
clc
add
out
fidivl
daa
mov
sub
call
cwtl
cs
pushf
out
jo
pop
test
enter
fidivs
xchg
adc
and
sub
lret
rclb
or
jno
dec
push
int3
cmp
mov
sub
dec
popa
add
test
in
mov
imul
mov
shll
jp
jl
sahf
cmc
insl
dec
repnz
aaa
adc
xchg
push
sti
push
mov
rcl
push
inc
and
sbb
dec
jmp
aad
push
out
mov
andl
or
or
dec
cli
aam
adc
stos
shlb
sub
mov
or
bound
xor
scas
adc
mov
out
es
adc
or
jnp
cltd
jbe
mov
aas
scas
imul
lea
xor
cmp
push
pop
and
shlb
in
lret
pop
xor
bnd
xchg
adc
in
xchg
mov
lcall
mov
mov
loopne
jne
mov
je
mov
mov
jmp
sbb
mov
popf
and
rcll
adc
mov
add
ror
sub
repnz
dec
pop
std
mov
ret
sub
xchg
test
out
lods
imul
pop
repnz
fdivrl
add
dec
pushf
mov
fdivl
sbb
fbld
adc
adc
dec
shrb
fwait
addr16
shlb
lahf
or
rorl
fsub
fcoml
ret
jne
fptan
jns
stos
mov
xchg
and
mov
popf
add
cmp
xor
int3
sarb
mov
cmpsb
jns
repz
int3
das
xchg
es
jle
sbb
push
mov
cmp
mov
nop
jg
out
popf
push
arpl
aad
inc
inc
gs
mov
sub
stc
sbb
adc
mov
hlt
fiadds
stc
popa
imul
hlt
gs
mov
test
bnd
dec
inc
mov
push
cmp
aad
and
gs
and
xlat
cmpsl
bound
rcl
inc
cmc
jl
jle
sub
add
pop
mov
inc
sub
test
cs
sbb
mov
ret
push
fldcw
cmpsb
shl
cs
insl
sbb
in
decb
testl
pusha
sbb
jle
cmp
shlb
scas
add
xchg
fsubrs
out
pop
scas
xchg
out
enter
rclb
outsl
cli
or
push
and
int
int3
mov
imul
addl
jbe
dec
mov
inc
adc
in
std
lahf
add
test
inc
add
mov
add
and
dec
push
jmp
jns
pushf
xor
jle
inc
xor
repnz
aad
xor
fcoms
jle
lds
mov
hlt
pop
test
imul
inc
jno
in
cmpl
lods
jl
loope
rclb
mov
lahf
push
xchg
daa
xlat
jecxz
add
or
arpl
enter
inc
push
sahf
xor
sub
aaa
movsl
imul
cmp
int3
dec
push
mov
lea
hlt
out
lret
clc
loopne
fdivl
pop
sub
rcl
sub
or
pop
and
out
push
mov
push
ljmp
xor
std
jl
sub
adc
cld
mov
xchg
mov
sub
loopne
jns
fdivl
movsb
push
adc
movsl
mov
inc
outsl
cmpb
push
mov
addb
cmp
imul
jne
pop
scas
out
bound
jmp
fmuls
cld
sub
inc
push
mov
fucomp
stos
pop
lds
lods
hlt
xor
scas
ret
mov
js
ja
add
in
imul
mov
push
sbb
cltd
mov
mov
cltd
cmp
jg
loop
rcrb
stc
inc
test
xchg
cmp
sbb
lret
and
push
es
jne
andl
mov
notb
mov
rol
sub
jnp
pop
insl
ret
into
pop
or
adc
mov
fidivl
movsb
pushf
jno
add
cmpsb
movsb
icebp
or
sbb
aam
jge
leave
sbb
hlt
in
fcmovnu
js
call
je
inc
dec
adc
dec
xor
ror
outsl
or
fildl
data16
pusha
enter
ljmp
out
fadds
divl
adc
jnp
xchg
notb
mov
addr16
jns
fwait
xorb
add
ffreep
jle
dec
out
scas
cli
ds
push
mov
push
xor
xor
test
rcrb
popf
cmpsl
jp
push
mov
enter
mov
mov
in
push
sbb
repz
popf
aam
imul
cli
aad
leave
lds
push
in
iret
je
and
xlat
aas
dec
cmpsl
push
ss
cmp
lcall
add
mov
pop
mov
bound
call
stos
andl
arpl
push
addb
test
pushf
scas
jo
pop
pop
cmp
iret
adc
ss
popl
insl
rcll
and
sti
pop
dec
xor
or
xchg
enter
dec
aad
ss
lret
xchg
out
lds
jmp
dec
sub
mov
loopne
test
mov
je
popa
mov
sbb
xchg
mov
mov
sbb
and
or
mov
scas
std
xchg
stc
nop
mov
inc
mov
cltd
ljmp
mov
test
push
cltd
clc
in
out
jns
cmp
in
out
mov
fisttps
and
lea
gs
xchg
lret
leave
xchg
mov
push
add
or
cmp
xchg
jb
fldl
mov
dec
cwtl
test
gs
push
or
dec
jae
seta
sbb
pop
and
add
and
xchg
jp
ja
insb
mov
adc
fsubrs
test
push
sbb
mov
xor
xchg
dec
cmp
or
ret
addr16
pop
testl
pop
arpl
cmpl
or
insl
shlb
and
enter
lds
loopne
xor
std
insb
or
xor
test
stc
ret
cmp
dec
into
repz
mov
daa
push
mov
xor
sysexit
jmp
cli
adc
sub
mov
push
shrl
pop
sbb
enter
xor
mov
lock
clc
and
sbb
fs
movsl
test
movntps
dec
sbb
hlt
cwtl
imul
pop
xor
dec
pop
repnz
add
loopne
cmp
mov
dec
mov
fcomip
mov
add
fiadds
or
test
stos
adc
push
mov
sbb
lea
movsb
jl
enter
push
xchg
dec
adc
mov
xor
cmp
jnp
add
fchs
add
mov
push
mov
push
dec
mov
orb
jbe
mov
bound
js
xchg
or
cmp
cmpsb
dec
aas
aaa
aaa
xchg
hlt
imulb
mov
jns
xchg
in
and
jae
sub
cwtl
push
enter
std
add
dec
outsl
add
jl
jmp
imul
mov
pop
sub
pop
jo
xor
and
sbb
pop
mul
cmp
test
ljmp
outsb
into
push
add
jmp
or
sarb
loopne
sbb
jg
inc
sbb
sub
sbb
cmp
mov
ds
test
push
aam
cmp
mov
icebp
mov
pop
dec
dec
xor
dec
repz
enter
pushf
out
mov
sub
cmpsb
rolb
sbbb
pop
out
dec
jns
push
mov
sub
jae
jg
out
xchg
push
aad
nop
inc
std
mov
mov
leave
negl
xor
jle
and
ljmp
pop
scas
push
dec
sub
mov
js
mov
das
cmp
xlat
call
adc
sbb
xchg
or
mov
push
lods
inc
push
nop
fldt
call
sahf
in
add
lcall
ljmp
jno
mov
mov
push
stos
xchg
daa
lret
jp
sub
push
loopne
out
inc
or
inc
data16
insb
test
xchg
sbb
pop
in
mov
test
xor
into
mov
cmpsb
dec
sub
fstps
ss
mov
in
mov
dec
xchg
iret
outsb
or
cld
sbbl
xchg
add
cltd
jne
daa
cli
add
xchg
adcl
ja
fwait
jo
push
aas
jbe
sahf
sub
fwait
jmp
aas
sbb
or
cmp
outsl
ljmp
addr16
jb
push
popf
and
mov
fisttpl
sahf
inc
or
cmp
comiss
out
jecxz
imul
imul
mov
decl
shll
es
push
mov
pop
inc
inc
mov
dec
and
dec
aad
push
les
or
xchg
int3
aaa
mov
or
insb
mov
in
leave
out
ret
mov
pusha
sbbb
stos
cmpsl
mov
addr16
orb
pop
pop
movsb
mov
and
sub
sbb
leave
mov
mov
xlat
jecxz
stc
lods
outsl
outsb
sbb
cmp
imul
cmpsl
fsub
mov
cltd
jg
mov
jg
pop
mov
xchg
rorl
rcll
rol
xchg
inc
rcr
adc
test
movsl
add
dec
fs
dec
and
jmp
adcb
mov
dec
lods
jbe
jbe
mov
inc
fmuls
xchg
inc
scas
pop
in
fisubrs
lcall
and
sub
and
jb
inc
lahf
fdivs
jae
mov
ficompl
loop
cmpsb
dec
data16
cli
lret
push
dec
and
js
mov
and
mov
add
fcomps
lcall
frstor
andl
imul
das
inc
mov
cmp
imul
ljmp
aam
add
or
stc
pop
push
data16
or
cwtl
pop
add
pop
add
dec
sbb
xor
adc
lock
jb
gs
loopne
les
xchg
dec
xchg
xchg
adc
mulb
out
cmpb
in
into
xor
hlt
insb
je
in
test
lcall
insb
xor
mov
icebp
lahf
push
xchg
int3
loop
pop
cmp
popf
mov
das
jns
gs
or
inc
jecxz
lret
xor
mov
adc
add
lock
lods
or
sbb
ljmp
test
or
mov
call
addl
push
xchg
sti
data16
jl
pop
cld
mov
mov
push
sbb
push
ret
test
mov
adc
hlt
adc
sub
scas
add
shl
jns
cld
shlb
or
insl
mov
dec
and
xor
sbb
rorb
stc
jg
add
mov
lea
jns
in
adc
sahf
push
mov
std
lcall
rolb
cmovl
push
dec
mov
dec
or
sbb
jg
xchg
ret
jb
leave
rorl
ret
push
clc
rcrb
add
sub
outsl
xchg
mov
call
pop
call
aas
sbb
dec
dec
imul
push
fsub
dec
xor
pusha
push
in
lahf
mov
jnp
push
sarl
add
sub
lods
or
inc
stc
pop
mov
push
icebp
mov
jne
add
sbb
shl
jb
lods
add
idivb
cwtl
inc
iret
xor
pop
stos
sbb
pop
mov
mov
mov
cmp
mov
xchg
pop
aaa
jne
pop
cmp
fmull
daa
mov
int
add
sbb
jp
imul
xor
mov
add
push
pop
out
cmp
ret
add
adc
fimuls
adc
pop
pop
imul
jo
nop
movsb
adc
aam
faddp
mov
pop
sbb
push
sub
inc
lea
in
jge
xor
and
pushf
sbb
sbb
xchg
int
pop
movsl
cmp
sub
sahf
jae
dec
int
fbstp
pop
jbe
out
mov
in
out
mov
mov
rcll
inc
jle
rcrb
add
cltd
xchg
aam
sahf
mov
sbb
popf
fdivrl
jg
xchg
in
aam
pop
in
or
xor
and
pop
incb
pop
scas
jmp
dec
cmc
je
clc
cld
sti
shr
dec
icebp
lea
adc
push
jae
sub
arpl
lahf
jb
fcoms
out
push
jno
push
cmp
leave
enter
lret
sbb
aad
mov
into
stc
lods
mov
xchg
inc
dec
popf
sarl
jb
and
mov
cmpsl
sbb
aas
fisubrs
or
jnp
inc
jnp
nop
or
mov
out
mov
cld
inc
and
mov
jbe
and
pusha
rorl
sahf
and
mov
cmp
int
sbb
xchg
stos
push
and
push
mov
add
dec
mov
jne,pt
add
push
sbb
xlat
xchg
jbe
pop
das
sarl
jb
push
jbe
nop
mov
add
mov
sub
sbb
outsl
out
xchg
in
cmp
add
aad
mov
push
sub
pusha
push
mov
fisubrl
sub
into
push
icebp
fildl
das
lcall
cmp
test
sub
xor
iret
mov
adc
push
repz
jl
sti
xchg
mov
clc
mov
push
jle
lret
repz
in
mov
sub
sub
int
mov
out
sbb
mov
in
std
dec
add
pop
xor
jl
std
je
and
mull
orl
orl
pop
sarb
or
cmp
je
adc
dec
cmp
sbb
xchg
jmp
push
fildll
sub
mov
or
idivb
push
xchg
inc
stos
add
pop
ja
pop
nop
adc
lock
jecxz
pextrw
imul
jg
and
pop
xchg
mov
popf
sub
adc
dec
push
xor
push
dec
mov
incb
or
jp
popa
mov
jnp
adcl
popf
lea
inc
out
cmp
bound
mov
inc
iret
pop
pop
iret
cmp
std
push
jb
lahf
cli
or
dec
mov
or
mov
sbb
insl
arpl
pop
sbb
sbb
out
cmpxchg
and
xchg
and
sti
lds
aad
and
mulb
dec
cmpl
xchg
mov
adc
rcl
pop
daa
jp
dec
mov
mov
cltd
jl
lcall
and
xor
mov
xchg
in
sbb
pop
aam
jae
bound
mov
add
loope
mov
push
sub
or
and
ljmp
mov
sub
repnz
cmp
mov
add
cwtl
fbstp
inc
xchg
andl
xchg
imul
jl
fwait
xchg
cmp
fs
cmp
pop
jle
stos
aad
loopne
mov
cmp
add
aam
mov
jle
test
lret
xchg
xor
add
and
dec
push
or
cltd
mov
adc
sub
mov
iret
sub
pop
out
cmpsl
jle
les
rcll
fnstsw
dec
push
in
cmc
mov
in
jmp
lods
inc
scas
mov
add
cmpsl
xor
mov
dec
imul
imul
pop
and
push
popf
movsb
dec
cmp
inc
jbe
int
mov
jnp
xchg
add
pop
jno
xor
add
mov
sub
pusha
pop
sub
pop
push
rcrl
adc
xlat
shll
stos
or
and
sub
imul
inc
inc
in
mov
sbb
adc
dec
loopne
sub
and
cmp
fdivr
lods
movsl
shlb
imul
data16
lea
mov
es
test
dec
jmp
xchg
scas
ja
mov
xchg
cmc
popa
ret
out
call
xor
fmul
shll
cmp
inc
sbb
mov
lret
push
sub
pop
push
xchg
je
enter
push
fnstsw
xchg
bound
subl
test
xlat
fidivrs
dec
xchg
in
fldl
sbb
out
fisttpl
js
push
sbb
inc
push
lahf
div
aaa
dec
daa
popf
pushf
sbb
add
push
pop
or
cmp
cli
std
pushw
push
xchg
push
xor
add
mov
repz
rclb
aaa
lret
add
pushf
test
adc
mov
xor
cld
ja
fstps
shll
jnp
dec
mov
dec
shr
das
bound
and
pop
scas
dec
shll
pop
mov
dec
push
xchg
sti
roll
jo
test
cli
faddl
mov
push
xchg
sti
or
jae
cmpl
sub
lret
lock
cmp
push
mov
push
jb
xchg
in
test
push
and
push
jnp
clc
xor
imul
jl
dec
popa
ds
fcoml
nop
out
adc
inc
int
mov
les
out
or
testb
fs
stc
xchg
ds
push
pushf
sbb
iret
inc
ficomps
insb
sahf
mov
or
movsl
push
ss
dec
mov
dec
ret
xor
cmc
jecxz
push
lret
out
push
insl
test
inc
dec
push
cmpsl
leave
movsl
cmc
xchg
lret
incb
mov
ret
xchg
and
hlt
rolb
mov
sbb
loope
aas
xor
mov
movsb
and
popa
xlat
pop
es
jge
icebp
jge
pop
cmc
ret
jo
xchg
aaa
mov
mov
lods
mov
cmp
addl
jp
je
sub
jmp
inc
in
mov
imul
push
and
js
mov
mov
mov
fcoml
fcoml
addr16
inc
mov
mov
mov
adc
in
leave
mov
ret
mov
int
mov
and
xchg
add
cmp
jne
pop
mov
xchg
iret
mov
test
cltd
add
loope
mov
fadds
jb
scas
bound
pop
movsb
add
fsubrp
std
add
lea
push
mov
test
movsl
outsb
sahf
loop
sub
lods
cmpsb
lret
add
push
rcr
and
dec
pop
fwait
test
cs
cmp
mov
lds
enter
mov
add
stos
int3
mov
js
icebp
insb
mov
pusha
push
xchg
in
adc
lret
je
pop
pop
addl
stc
scas
popf
xchg
sbb
add
push
movsb
sbb
and
ljmp
aas
xor
mull
lret
mov
fbld
mov
xchg
mov
push
ja
in
jmp
cmp
enter
or
fisubrs
out
pop
stos
jmp
add
fisttpll
push
jo
rcrb
ja
or
scas
pusha
mov
cmpsl
jns
or
push
cmp
out
scas
dec
xor
gs
pop
cmpsl
flds
cwtl
mov
insl
mov
cmp
mov
push
xchg
adc
lret
stc
sbb
call
rep
sub
push
xor
pop
adc
xchg
pop
fsubl
cmp
mul
pop
shl
mov
xorl
loope
push
leave
int3
repnz
das
push
call
mov
insb
xchg
nop
mov
xor
sbb
pushf
jbe
lret
inc
xor
add
pop
cmp
xor
bound
in
imul
or
cmpb
int3
sub
stos
mov
lods
cmpsl
inc
sub
inc
adc
fidivrs
sub
wrmsr
das
roll
orb
fiadds
sub
repnz
test
imul
out
add
fwait
and
mov
push
dec
add
rorb
and
sbb
or
dec
lock
lds
fcoms
xchg
xchg
pop
test
pop
pop
and
call
sti
mov
xor
mov
xchg
test
pusha
mov
cmpsl
ja
or
cld
repz
mov
mov
std
inc
lret
xchg
shl
testl
xchg
imul
ss
add
mov
xlat
ljmp
fwait
shrl
jp
sbb
icebp
cmpsb
mov
add
jge
jmp
popf
aad
jno
lods
fidivrl
pop
xor
sub
jbe
xor
dec
dec
es
push
sub
mov
lods
mov
push
push
cmp
add
mov
and
pop
xor
inc
mov
sbb
inc
imul
loope
mov
mov
stc
push
stc
lock
aas
mov
add
into
push
add
test
ljmp
cs
idivl
adc
jno
sbb
cmp
xchg
aaa
push
aaa
leave
into
jb
inc
inc
js
rclb
push
mov
push
test
std
mov
loope
inc
insb
je
stos
ret
push
inc
jno
jb
inc
cmp
cmc
fidivrs
out
test
pop
clc
es
mov
and
jmp
mov
bound
cmc
dec
or
sahf
pop
aam
ret
sti
aaa
iret
es
cld
xor
clc
in
shl
xchg
aad
push
fcompl
das
jle
xchg
and
lcall
and
les
add
bound
enter
mov
adc
imul
ljmp
inc
lea
jnp
push
ljmp
and
mov
testb
data16
adc
test
push
jmp
jge
adc
inc
push
daa
adc
jb
scas
adc
pusha
popa
add
xor
push
lahf
ret
mov
push
loopne
test
fdivl
xor
insb
sbb
mull
cmc
cmpsb
xchg
js
inc
inc
cmpsl
xlat
push
xchg
fiaddl
mulb
push
mov
jno,pn
repnz
jns
jnp
fbstp
les
sub
gs
fwait
pop
push
mov
sbb
repz
cltd
adc
std
pop
cmc
stc
xor
pop
sub
mov
icebp
movsl
lcall
add
loop
mov
pop
in
mov
std
mov
les
iret
movsb
or
mov
call
mov
mov
pop
mov
dec
mov
jg
or
inc
iret
adc
xchg
sbb
out
pop
loop
push
test
sbb
cli
cmp
stos
stos
sbb
test
mov
js
in
arpl
dec
rorl
outsb
push
mov
xchg
addb
xor
dec
xchg
pop
mov
add
and
jne
fisubrl
dec
mov
mov
shll
imul
push
mov
test
icebp
fwait
in
jmp
clc
imul
jnp
adc
jmp
pop
lods
mov
cmp
pop
jnp
adc
ret
mov
sti
arpl
dec
xchg
int3
arpl
mov
fcomps
sub
push
sub
mov
xlat
test
mov
inc
add
jnp
mov
popa
sbb
nop
and
adc
and
add
idivb
dec
aaa
add
mov
mov
test
cmc
arpl
jp
fcoms
fwait
push
aaa
jecxz
inc
mov
push
adc
cmp
outsl
insl
rolb
adc
loop
fiadds
ljmp
stos
jp
cwtl
repnz
out
inc
adc
push
test
jbe
jge
rclb
pop
jne
pop
push
xchg
dec
mov
sti
dec
jge
or
ror
mov
mov
pop
push
mov
mov
inc
inc
js
pusha
inc
and
jle
adc
dec
aam
sbb
inc
adc
mov
insl
inc
jns
jno
test
cmp
sarb
out
sahf
pop
push
mov
sub
arpl
jnp
or
jl
outsl
js
out
pop
sbb
or
mov
leave
xchg
cmc
shrb
mov
das
stos
jae
cwtl
jg
mov
jno
cmpsb
ss
popf
sub
into
dec
mov
xchg
in
mov
jg
mov
sub
pop
ror
sub
xchg
dec
xchg
mov
pop
outsb
push
mov
xor
popf
or
test
scas
imul
cmpsb
dec
inc
ss
adc
cld
adc
fdivrl
mov
adc
fnstsw
ret
fimuls
mov
pop
mov
call
imul
push
mov
mov
out
mov
mov
adc
cli
or
lds
aas
ja
rol
jb
adc
sbb
aas
push
cli
push
jbe
or
cmp
pop
mov
push
pushf
shr
pop
sbb
ret
das
pop
outsb
mov
nop
xchg
stos
xor
in
mov
out
lods
mov
push
lret
aaa
xchg
out
inc
daa
mov
loopne
pop
adc
addr16
cmpsb
cmpsb
dec
ja
push
lahf
arpl
cmp
addr16
add
sahf
or
out
enter
test
and
nop
push
notl
out
xchg
aas
mov
jne
lahf
sti
sti
cwtl
mov
push
sub
mov
mov
movsb
aaa
xchg
ret
inc
jo
hlt
mov
cmp
mov
push
adc
dec
sbb
rcl
or
add
outsb
cmp
mov
adc
lahf
dec
cwtl
cmp
dec
into
sbb
mov
cmp
lahf
aad
and
jae
pop
aad
into
ljmp
cmpsl
jle
rorl
cmc
aam
mov
mov
lcall
aam
in
or
xchg
cmp
mov
hlt
xor
push
adc
rcl
outsb
pusha
aam
in
call
adc
in
sbb
fcmovnbe
in
lods
xchg
stc
cmp
dec
test
repnz
adc
enter
mov
xchg
addr16
push
xchg
xchg
sub
sbb
push
pop
decl
stos
sub
outsb
pushw
inc
enter
je
xchg
js
scas
rol
movb
or
cld
hlt
xor
mov
sbb
cmpsl
outsl
push
add
jmp
loope
xchg
cmp
cwtl
inc
pop
jno
call
sbb
lahf
mov
movsl
jecxz
mov
mov
push
xlat
repnz
jl
fld
data16
mov
mov
popf
and
dec
add
test
xchg
sbb
nop
daa
mov
lcall
or
lea
xchg
add
push
arpl
push
es
push
and
jp
inc
dec
adc
std
cs
daa
sti
adc
subb
fcoms
jnp
dec
mov
sub
lcall
and
stos
aam
iret
mov
repnz
adc
das
cs
dec
ret
mov
cltd
in
fdivs
lea
and
jb
pop
test
lcall
add
cmp
add
xor
inc
call
imul
jnp
dec
lret
jmp
adc
add
std
scas
add
movsl
xchg
jmp
jge
xor
jl
mov
or
xorl
fsubrp
pop
aaa
hlt
push
jmp
fidivrs
sbb
in
jno
dec
push
aaa
ret
mov
out
jmp
push
into
cmpsl
mov
mov
push
jp
mov
mov
repz
pop
rorl
mov
out
jns
adc
lods
insl
xor
mov
add
aas
ja
xchg
lods
lea
sbb
jecxz
push
loopne
hlt
aam
fidivrl
sub
and
sti
jo
cmp
or
test
fld1
out
mov
sub
dec
js
jns
mov
lock
dec
and
in
scas
clc
adc
mov
jne
pop
lods
push
orps
loop
repnz
push
rorb
pop
fucomip
test
or
adcl
fdivrs
pop
mov
cmp
jg
add
into
mov
ret
push
inc
rcrb
popl
arpl
adcl
test
push
pop
int
add
or
mov
push
fxch
mov
and
or
stos
pop
outsl
xchg
int3
add
lcall
int3
xlat
imull
adc
filds
sbb
sub
inc
lds
xor
jae
mov
setb
sub
and
jb
fwait
add
sub
adc
mov
xchg
icebp
fidivs
mov
sbb
mov
loopne
les
dec
mov
adc
cmp
frstor
and
inc
sub
dec
fidivrl
out
mov
shrb
jecxz
xchg
mov
aam
test
rcll
adc
sbb
je
aam
push
push
cmove
repnz
inc
cli
aas
inc
in
enter
jle
add
repnz
inc
push
mov
and
out
shll
sbb
sbb
push
or
or
xor
int
adc
push
sbb
jg
loopne
jg
rclb
fstps
pusha
cltd
mov
sub
sbb
leave
and
inc
cld
cltd
aas
shrl
or
sub
and
jnp
push
loopne
push
pop
test
mov
mov
int
xchg
cmp
fwait
inc
xorl
insl
popf
sbb
dec
mov
movsb
test
neg
pusha
jecxz
jl
pop
icebp
jo
lahf
les
sbbl
mov
mov
xchg
stos
pop
aaa
mov
clc
nop
arpl
sub
jae
mov
lock
ficoms
or
cmp
scas
call
sub
mov
lods
nopl
data16
cld
mov
sub
cwtl
xchg
inc
sub
adc
push
mov
test
xchg
in
sbb
jo
add
cmpsb
jg
insb
push
mov
ljmp
and
mov
daa
lea
sbb
pushf
xor
sbb
mov
lea
push
stos
push
sbb
call
mov
mov
jno
cmc
sub
lock
push
pop
jecxz
ret
pop
daa
jne
sbb
das
xor
test
xor
in
and
les
shll
push
pop
pusha
jne
push
adc
arpl
mov
dec
aas
xor
xchg
addr16
push
push
mov
sbb
cmpsb
or
push
and
inc
lods
nop
loop
or
cmp
popf
aas
iret
int3
cmc
call
dec
adc
testb
mov
xchg
sub
and
cmpsl
aam
faddl
adc
fnstenv
mov
mov
xchg
nop
jno
fsubl
mov
jbe
push
leave
cmp
dec
mov
pop
cmpsl
push
sub
test
ret
scas
sub
mov
push
adc
lea
lds
fists
push
test
sbb
mov
mov
or
sbb
jb
jge
in
nop
lcall
jae
mov
cs
push
sbb
inc
lods
sub
mov
mov
jo
cmp
mov
cmp
lods
stc
add
cmp
xchg
lods
push
inc
sbb
popf
daa
xchg
xchg
add
mov
cmpsl
sbb
repz
fs
cltd
push
repz
jns
popa
xchg
shrl
shl
in
out
daa
pop
cwtl
jl
push
mov
dec
or
icebp
mov
push
jl
inc
cmc
scas
movl
inc
mov
icebp
inc
aaa
cmp
xchg
orb
test
xlat
adc
mov
lock
xchg
and
int
nop
outsl
sarb
pop
imul
add
or
mov
cmpsb
js
in
fucom
push
fnstcw
int
xchg
mov
pop
test
mov
out
push
sub
sbb
mov
pop
sbb
push
add
fs
cmp
in
jns
pop
xchg
inc
and
repz
lods
and
adc
push
xchg
mov
sub
mov
cld
lea
movsl
lods
repnz
sub
sti
and
and
sub
cmpsb
xor
push
pop
outsl
xor
or
fwait
xchg
or
out
out
mov
pop
test
ja
or
xor
fnstenv
xor
push
sub
ss
cmp
iret
sub
imul
add
cli
das
mov
popa
push
mov
pusha
aas
scas
nop
cmp
xor
sbb
xchg
in
data16
xor
mov
fisttps
lea
xchg
push
push
out
das
test
iret
in
testb
push
aaa
test
stc
imul
movsb
lret
jnp
fnstsw
jmp
int3
cwtl
negl
adc
xchg
jns
push
or
pop
sub
aaa
mov
add
lcall
in
add
cmpsb
mov
fwait
shll
inc
xchg
lods
addr16
ret
add
stos
or
sahf
mov
inc
or
clc
add
mov
xchg
sub
pop
das
adc
xchg
pop
dec
push
cmp
lret
adc
ds
cli
sar
cmp
jp
decl
sub
or
add
mov
pop
faddl
insb
aad
xchg
mov
mov
stos
ret
xor
dec
xor
popf
mov
or
fdivrs
and
out
cltd
and
lcall
js
data16
push
or
mov
xor
dec
ljmp
xchg
bound
sti
out
sti
fstpt
fldz
xor
mull
psllq
flds
and
mov
mov
inc
outsb
jp
cmp
fwait
rorb
xchg
aad
loopne
push
adc
fisttpl
xchg
dec
sbb
push
cmp
sar
jae
or
sahf
xor
enter
bound
js
pop
cmp
or
imul
pusha
mov
insl
jno
icebp
cltd
add
pusha
push
fisttpl
mov
mov
xchg
xchg
pop
or
sbb
jmp
inc
daa
js
stos
mov
loop
xchg
xchg
adc
shrb
and
xor
xor
adc
fnstenv
or
mov
insl
icebp
shlb
ds
repnz
in
ret
push
xchg
xchg
sub
dec
loope
jb
lret
popa
mov
je
mov
das
sbb
xor
movsl
mov
push
popf
sub
rep
sbb
xchg
or
inc
cmp
gs
inc
inc
daa
sbb
das
xchg
cli
fwait
ret
je
pop
add
mov
scas
push
out
inc
mov
divl
adc
daa
push
mov
inc
inc
das
mov
sbb
adc
adc
in
fsubrl
adc
das
xchg
fs
mov
das
dec
jle
je
jge
cld
lods
movsb
shlb
clc
or
ja
loop
mov
sub
and
out
xorb
lcall
sub
jecxz
subw
ds
fs
jl
xchg
rcrb
cmp
mov
pop
mov
mov
inc
int3
add
add
mov
aad
or
aaa
mov
jbe
and
sub
ds
in
jnp
push
shrb
loop
popf
mov
and
out
popa
pop
das
jge
lock
aaa
jmp
jbe
push
adcb
mov
mov
inc
mov
ds
mov
fildll
mov
fxch
xchg
shlb
out
dec
mov
pop
or
mov
aad
push
adc
or
cs
mov
inc
out
into
or
dec
daa
pop
adc
clc
push
jae
and
cmp
dec
mov
in
xchg
push
rcrl
inc
js
inc
dec
loopne
lock
test
xchg
fildl
sub
dec
mov
das
clc
ss
xchg
testl
cmc
mov
das
rorb
sbb
cmpsb
int3
jnp
leave
lea
xor
xchg
cs
lds
or
and
mov
gs
jecxz
fs
cmc
sbb
in
popl
xchg
mov
pop
push
jmp
scas
xchg
push
inc
cmp
sti
in
push
pop
ficomps
sarb
xor
push
mov
pushf
xchg
sub
dec
inc
loop
sbb
xor
add
shrd
imul
ret
outsl
hlt
xchg
xor
sbb
lcall
cmp
scas
cmp
mov
in
xchg
shrl
frstor
adc
add
adc
dec
pop
addr16
cmp
mov
add
cmp
or
dec
sbb
stos
adc
mov
int
push
les
mov
xor
xchg
mov
xchg
popa
or
sbb
in
mov
mov
subl
ds
pop
inc
jns
cmp
mov
ds
arpl
inc
sub
hlt
mov
adc
sbb
xchg
xchg
orl
pop
sub
aam
aaa
xor
push
das
insl
cmp
jae
add
movsb
scas
sbb
out
lret
push
inc
out
leave
fsubrs
mov
sbb
dec
es
into
mov
imul
sti
jg
dec
mov
jle
faddl
or
insl
insl
pusha
cmp
outsl
sub
enter
jo
pop
nop
jb
sete
mov
outsb
and
xor
jb
or
mov
scas
pmulhuw
jp
and
and
pop
and
arpl
jg
scas
sbb
mov
shl
test
rolb
stos
mov
fdiv
repz
xlat
cmp
faddl
cli
mov
sbb
rorl
jmp
shlb
les
adc
rep
or
xor
ret
jmp
cli
mov
popf
fs
add
xor
xlat
icebp
in
push
pause
or
sub
adc
fbstp
packsswb
leave
xor
lock
add
sub
shll
repnz
inc
sbb
data16
enter
movsl
shr
pop
sbb
mov
data16
push
sarb
mov
mov
loopne
shr
lods
pusha
jns
subl
repnz
mov
fmuls
in
inc
mov
lea
jge
js
and
out
lea
imul
sbb
fstpl
xchg
ds
and
mov
jmp
out
nop
das
dec
cmp
ja
jl
leave
mov
pop
sahf
lret
lods
cmpsb
in
rol
add
cli
lret
mov
push
xor
shlb
jbe
jle
sbb
dec
enter
adc
cmp
scas
loop
mov
add
lea
and
jp
inc
or
in
jbe
andl
hlt
jp
cmp
sub
pop
pop
movsl
loop
int3
out
les
jl
jns
outsb
jns
std
or
pusha
xchg
outsl
mov
popa
cltd
hlt
pop
in
popa
pusha
xor
lods
or
pop
inc
hlt
xor
xchg
inc
notb
leave
push
in
cmpsb
lock
pop
test
and
insl
cs
out
push
sbb
sbb
push
mov
dec
in
add
dec
mov
movsl
xorb
push
ret
xor
addr16
mov
push
shll
or
cmp
mov
fmull
daa
cmpsl
sbb
push
inc
aad
pop
inc
sbb
stos
dec
mov
mov
mov
jl
lret
xchg
lea
inc
aad
xchg
pop
inc
sub
ret
rcl
dec
rcll
imul
dec
adc
loopne
pop
ret
lods
dec
dec
shrl
dec
in
and
test
xorb
add
xor
cmpsl
xor
ficoml
pop
inc
stc
sub
lret
mov
insl
xor
push
jno
movsl
jo
jb
das
arpl
sub
and
in
push
sub
dec
test
loopne
repnz
repnz
loopne
loop
mov
mov
pushf
push
iret
cmc
and
clc
out
adc
jmp
mov
sbb
imul
adc
xchg
sbb
jo
out
daa
jmp
repnz
aam
inc
in
adc
imul
jl
pop
mov
and
mov
cltd
xchg
pop
and
in
imul
jle
lea
cmc
enter
call
scas
mov
jo
pop
int3
or
enter
xor
push
repnz
jbe
sub
xchg
insl
cld
pop
mov
lods
jle
xchg
fiadds
lret
rcll
sub
lds
fsts
xlat
jae
sub
fbstp
dec
ffree
adc
add
xchg
ja
jbe
inc
imul
xchg
adc
xor
sub
dec
les
xor
mov
pop
fimull
xor
fisubrs
scas
and
mov
sbb
in
js
mull
inc
fnstcw
fildll
movsb
xor
aam
push
adc
dec
cmp
mov
inc
or
subb
fsts
dec
sbb
out
mov
sbb
das
cmp
out
cmpsl
mov
pusha
mov
imul
gs
jne
pop
sbb
sub
push
jg
push
sbbl
andb
push
iret
std
sub
movsl
arpl
cmp
jg
cmp
lock
inc
insl
lds
lret
mov
xchg
cmp
daa
and
ret
int3
mov
std
xor
mov
sbb
lods
enter
icebp
adc
aad
ds
adc
push
stos
cmp
jb
ret
scas
add
lods
js
mov
xchg
inc
mov
sbb
mov
and
mov
leave
adc
add
jle
or
out
lods
or
sub
and
lahf
xor
sub
or
movsb
jns
stos
shll
sbb
xlat
in
inc
cltd
xchg
or
jecxz
pop
sbb
shrl
mov
mov
ja
pop
jp
shrl
test
aad
mov
movsl
scas
xor
ds
lahf
rorl
lret
cmp
leave
lds
pusha
pop
cltd
pop
sahf
mov
sbb
popl
sti
xor
inc
jmp
mov
push
pop
mov
fs
sti
xchg
aas
mov
movsl
les
test
rcll
mov
cmp
decb
sbb
dec
enter
int3
cli
scas
or
enter
xchg
cld
test
sbb
mov
int3
dec
ja
stos
and
outsl
pop
mov
xchg
jl
hlt
xchg
icebp
push
leave
jno
inc
arpl
dec
and
xor
daa
loopne
sub
aam
inc
mov
inc
cmp
fldl
sbb
lods
int3
addr16
mov
bound
in
aam
push
out
pop
mov
xor
jp
int
lods
mov
mov
or
stc
pop
mov
jl
lret
ja
jmp
pop
test
insb
push
call
sbb
xlat
inc
insl
mov
fistpl
add
pop
inc
fwait
adc
int3
pop
fcomps
dec
cmp
imul
int
stc
hlt
enter
int
test
add
repz
pop
movnti
call
lods
adc
push
in
aad
sbb
js
stc
xorb
loopne
fmull
call
fdivrl
in
pushf
xchg
test
cmp
xchg
inc
mov
movsb
data16
and
cmp
cmp
jae
mov
mov
sbb
mov
sub
je
mov
jb
sub
jne
in
cmp
shlb
jb
movsb
and
mov
jne
movsb
ss
stos
shlb
jge
push
mov
cs
popf
sbb
mov
or
insl
notb
mov
inc
pop
jo
fiadds
mov
testb
adc
lock
sbb
add
cmpsb
mov
sub
out
lea
mov
push
sub
push
mov
stos
clc
cmp
mov
add
mov
push
dec
adc
adc
cltd
out
push
es
jge
mov
pop
movsb
mov
bnd
push
hlt
cmp
imul
dec
jae
or
dec
dec
jne
adc
inc
fcmovnb
push
xchg
das
xlat
mov
xor
jle
popa
lock
jp
sbb
xor
jle
and
pop
loopne
sti
pop
ljmp
mov
xor
stos
jnp
fnsave
pop
loopne
es
sbb
xchg
fisttpll
sub
repnz
aam
jmp
xlat
aam
sub
adc
cmp
mov
stc
jmp
xchg
aam
mov
pop
mov
lret
icebp
xchg
lock
loopne
into
and
iret
clc
sahf
pop
mov
hlt
out
lahf
pop
push
paddusb
xorl
popa
mov
pop
jg
aad
incl
int3
fdivrs
sbb
sbb
add
shll
aaa
xchg
call
repz
xor
jmp
cmp
lahf
and
into
test
pop
sahf
ss
xchg
in
test
jge
xchg
xchg
lcall
adc
mov
push
dec
cwtl
mov
cmpxchg
or
inc
adc
mov
into
fstps
dec
or
outsb
cmp
sbb
cmp
repnz
mov
pop
pop
iret
jg
xchg
ds
add
shlb
or
mov
mov
pop
fmull
icebp
or
push
out
out
xchg
ret
dec
filds
adc
scas
jae
sbb
es
mov
push
mov
xor
push
jae
sub
imul
mov
lret
sbb
cli
inc
fildll
std
pop
sbb
mov
cmp
daa
cmp
stos
dec
movsb
add
dec
adc
xchg
rcr
imul
push
mov
leave
into
fldcw
fdivs
adc
xchg
out
stc
push
mov
mov
add
dec
fldt
xchg
aas
gs
aam
out
pop
jnp
adc
jb
notb
or
sub
dec
jg
push
adc
and
dec
pushf
pushf
es
sbb
add
add
inc
lcall
xor
mov
stc
ljmp
iret
push
dec
inc
outsl
mov
dec
fimull
outsb
cmp
daa
dec
cmpsl
sbb
inc
outsl
lret
lahf
inc
int3
push
jg
xchg
icebp
mov
fisubrl
test
test
aaa
inc
ja
sahf
lahf
sub
cmpsb
pop
mov
mov
notl
and
out
mov
and
pop
cwtl
lcall
adc
push
movsl
fisttpl
jns
movd
add
xchg
inc
jecxz
mov
addl
adc
int
addr16
cmp
call
sarl
arpl
xchg
jecxz
and
int
pop
int3
and
rcrl
popa
outsb
ret
ret
cmp
sub
loopne
lods
leave
sub
les
nop
insl
lds
cmp
out
xchg
ficoml
ret
in
shl
sbb
out
mov
push
imul
movsl
in
lret
lea
test
pop
xor
loop
add
or
lea
add
inc
pop
dec
sbb
and
fs
lea
popf
incb
out
addr16
outsb
sbb
cs
dec
in
cmp
sahf
pop
jae
test
cmp
lock
testl
das
sti
testb
pop
std
sbb
adcb
lret
pusha
das
addr16
xlat
jns
in
jecxz
lret
lret
cmp
sub
stos
lock
cmp
push
test
mov
push
cmc
int
mov
mov
aas
mov
jb
or
mov
dec
or
xchg
rorl
rolb
push
inc
sbb
daa
xor
shr
xchg
mov
mov
stos
or
mov
pop
mov
cs
ret
daa
xchg
in
clc
jns
push
stc
mov
adc
ffreep
add
ds
xchg
dec
gs
stc
jae
shld
test
cli
inc
xchg
inc
nop
adc
mov
pop
pop
mov
fcmovne
les
inc
leave
dec
inc
jl
xchg
paddd
cs
int
cltd
js
sbb
pop
dec
jbe
lods
dec
mov
adc
inc
dec
loop
pusha
push
jmp
rorb
add
xor
mov
rol
inc
ss
push
mov
jns
add
or
xchg
jecxz
add
sbb
imul
rcl
pop
dec
mov
mov
xchg
fmuls
sbb
dec
es
arpl
mov
repnz
jbe
lea
xchg
jns
stos
inc
push
fsubs
inc
push
nop
sub
push
cmpsl
cltd
cmp
stc
sahf
les
push
jno
js
gs
jg
dec
xor
xorb
into
mov
lahf
dec
pcmpgtw
aad
xchg
aas
shrb
sbb
mov
