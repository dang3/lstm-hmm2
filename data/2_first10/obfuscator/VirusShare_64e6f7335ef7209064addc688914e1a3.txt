inc
clc
mov
daa
out
lds
dec
sbb
ds
clc
cmpsl
pushf
arpl
or
cmp
adc
aas
lods
push
inc
pop
adc
in
add
pop
imul
pusha
out
loope
dec
popf
lcall
adc
jmp
mov
shl
mov
add
in
jae
jp
lret
notl
scas
or
xorb
sub
sub
bswap
shll
cmp
int3
push
mov
xlat
sub
xor
es
pop
mov
daa
cmp
mov
mov
cmc
and
cmp
mov
inc
sbb
mov
fld
mov
iret
js
test
movsb
push
inc
dec
dec
out
mov
lcall
adc
xchg
pop
push
push
sbb
mov
cmp
ficoms
rcll
jmp
repz
inc
mov
shll
mov
adc
arpl
and
adc
orb
sbb
popa
jecxz
xor
hlt
addr16
xchg
pusha
dec
popf
test
mov
test
xor
xor
pop
fsubrs
sbb
pop
pop
xchg
mov
mov
aaa
xchg
inc
mov
push
icebp
leave
test
sbb
inc
lahf
push
jbe
add
sahf
push
out
push
and
cmp
bound
push
sbb
push
mov
scas
jo
mov
xor
testl
lds
mov
pop
enter
loope
mov
scas
mov
jae
push
addr16
out
cli
dec
outsb
pop
bound
divb
dec
cs
push
iret
arpl
xchg
repnz
shrb
mov
insl
pop
test
cltd
inc
mov
call
insb
mov
loopne
push
xchg
and
push
xchg
mov
imul
in
inc
push
sti
xor
jno
mov
push
mov
in
or
sub
ds
xchg
cmp
sbb
cmpsb
jbe
cmc
cmp
in
fistpll
inc
lods
mov
jo
sbbl
mov
inc
sbb
daa
int
pop
pop
push
mov
xor
sub
stc
pusha
lea
pusha
pushf
call
aaa
add
or
mov
in
mov
fdivrs
push
inc
mov
lods
add
cltd
pop
cmp
push
aas
mov
sub
and
jb
mov
fisubrl
daa
push
jge
sub
adcl
out
dec
clc
insb
daa
mov
mov
jge
rol
fdivrl
kmovd
or
mov
push
aas
insl
ss
sbb
ljmp
fbld
sub
fistl
je
ljmp
stos
mov
sbb
inc
xchg
sbb
enter
out
add
fldenv
inc
sarb
ret
pop
sbb
outsl
test
fisubrl
mov
repnz
mov
pop
pop
test
mov
sbb
sub
mov
push
or
push
sub
jbe
shrb
cmpsb
movsb
push
sbb
add
or
push
xlat
mov
cwtl
and
jne
push
inc
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
bt
push
xor
jmp
rep
lea
pushl
push
pusha
mov
movb
lea
jmp
movb
movl
pushf
push
mov
pushl
lea
jmp
inc
or
xchg
inc
mov
xchg
lcall
sub
movsl
or
jno
pop
push
sahf
add
mov
sbbb
cs
aaa
mov
inc
cmp
add
sarl
das
cwtl
pop
iret
aaa
sub
cmp
vprotb
xchg
xor
xorl
add
fs
push
pop
mov
ret
lea
out
xor
lcall
add
shl
insl
lods
and
push
iret
xchg
mov
xchg
inc
mov
push
mov
cmp
xchg
icebp
fnsave
in
sub
mov
jp
and
push
pop
mov
popa
fwait
je
aaa
mov
sti
rorb
cmp
icebp
daa
dec
pop
or
rorl
inc
and
sub
push
add
xchg
cmp
or
sub
popf
pop
fucomip
xchg
in
mov
xlat
test
sub
aam
jmp
mov
lods
lea
call
pusha
sub
pushl
movb
pushf
call
cmp
pushl
cmp
call
aam
or
mov
jne
stc
fs
cmpsb
xchg
jmp
shl
push
pop
aad
clc
add
in
ljmp
sbb
mov
leave
bound
leave
leave
cmpl
fucomi
inc
pop
mov
mov
js
adc
and
scas
cmp
mov
andb
mov
gs
pop
lods
shl
aaa
pop
out
pop
jnp
pop
sbb
lret
pop
add
lea
je
bt
clc
test
cmp
push
jmp
add
xchg
inc
mov
add
sti
sbb
loop
or
test
jns
insb
int3
mov
mov
mov
int3
insl
jle
push
cli
mov
or
scas
inc
inc
sbb
jo
pop
aas
push
andb
and
push
lcall
fildl
out
in
and
sub
mov
dec
mov
cmp
decb
paddd
pop
xorb
or
imul
mov
cmp
in
arpl
jbe
aad
mov
mov
pop
mov
add
test
mov
inc
mov
popf
sbb
mov
inc
dec
ret
push
mov
arpl
test
cwtl
cs
add
inc
mov
or
push
iret
cwtl
scas
sub
movhps
push
mov
fldt
lahf
icebp
in
mov
mov
imul
push
out
stc
xorb
pop
mov
js
daa
adc
js
and
inc
mov
jmp
test
dec
xor
cs
insb
add
rcll
insl
or
xchg
stos
dec
aam
xchg
sbb
hlt
mov
mov
sub
jmp
popf
cmp
sti
jo
xor
mov
shll
daa
sbb
fldl
fwait
aad
bound
inc
cld
or
jmp
push
ret
mov
mov
push
lret
das
mov
pause
or
sbb
xchg
mov
inc
bswap
jg
sbb
fstpl
mov
jecxz
sbb
cltd
shrb
sbb
or
pusha
fwait
inc
aaa
xchg
xchg
inc
mov
mov
push
jno
int
cmp
jecxz
cmpsb
and
aas
mov
cld
insb
push
jns
gs
sbb
dec
push
pop
sub
mov
jl
fiaddl
arpl
inc
mov
inc
inc
out
sti
inc
adc
jb
fdiv
rorl
in
inc
aas
lret
sahf
inc
mov
sbb
pushf
push
jge
ret
mov
sub
add
popa
loopne
cmp
xchg
addr16
into
daa
nop
outsb
xchg
xor
andb
cmpsb
jp
outsb
inc
je
xor
rcrb
imul
movb
pushf
sub
call
and
sub
cli
push
sbb
popa
or
or
inc
fcmovne
and
or
iret
mov
leave
cmp
shrl
es
repz
adc
popf
fimull
scas
push
je
sbb
outsl
enter
jl
pop
stc
jb
add
lods
faddp
inc
outsb
dec
lahf
dec
xor
jns
std
int
jb
mov
push
call
xchg
test
pushf
jmp
cwtl
jg
cwtl
inc
mov
cs
sbb
sub
fidivrl
in
in
inc
lahf
sti
dec
mov
mov
bound
inc
add
outsl
xor
and
and
inc
sub
jnp
mov
test
jmp
ja
sub
pusha
jns
jg
call
test
shlb
cwtl
popf
rorb
call
dec
loopne
lahf
xlat
mov
mov
dec
pop
xor
mov
jbe
sbb
mov
icebp
outsl
or
xchg
subps
pop
std
std
mov
fadd
jg
jnp
inc
xor
scas
lods
and
pushf
mov
pop
call
ja
push
nopl
jg
in
cmp
loope
jne
pop
pop
enter
fisubrl
adc
test
xchg
lea
add
in
pop
xor
xchg
push
push
cmpsl
aam
mov
sar
mov
cld
push
fildl
push
jb
inc
mov
loopne
or
cs
jae
cmp
outsl
or
xchg
fmuls
xchg
dec
dec
les
sti
stos
jb
and
sub
in
cmp
add
scas
push
lret
push
repz
adc
jne
rorl
hlt
fsubs
sub
inc
inc
in
lahf
sbb
mov
mov
pop
xor
ja
fcmovne
jae
xlat
hlt
cmp
xchg
lcall
into
jmp
je
mov
popf
push
jmp
mov
pushf
movzbw
pushl
mov
xchg
mov
lea
mov
jmp
jmp
dec
movsb
xchg
lcall
sarb
in
in
lret
dec
sbb
cmpsb
jne
lahf
mov
mov
inc
or
ljmp
pop
dec
pop
push
sub
les
in
test
add
mov
and
test
add
xlat
push
adc
push
ja
bswap
sbbl
pushf
jmp
pop
cmp
sub
rcrb
pop
aaa
xchg
ret
fldl
sub
lahf
inc
inc
mov
lret
and
fwait
inc
mov
add
pop
inc
add
jg
jmp
outsb
jmp
push
mov
mov
push
lret
enter
mov
xor
daa
mov
fmul
pushf
test
sub
add
sub
lret
jmp
sub
es
sarb
dec
jg
movsb
pop
mov
rcll
lar
out
xor
aam
shrb
pop
aaa
movsb
out
or
jge
push
fwait
inc
mov
jbe
negl
imulb
out
pushf
adc
lret
aam
adc
jge
inc
aad
in
jmp
mov
leave
cmpsb
sahf
daa
aam
jb
and
jge
jl
out
stc
push
test
mov
push
and
push
movsl
mov
mov
push
das
push
gs
or
jns
adc
jne
rcrb
push
popf
pop
lcall
xor
push
stos
adc
arpl
test
xor
test
mov
shlb
push
push
add
or
add
bswap
lea
pusha
movl
pusha
mov
pushl
popl
mov
pushl
ret
stc
jg
pushf
inc
mov
jnp
imul
jne
mov
cs
or
adc
movsb
out
xchg
cld
jmp
shlb
fisubrs
push
jbe
fildll
push
stos
mov
sub
nop
ficoml
inc
pop
pop
jnp
xor
inc
xor
stc
lahf
jle
loop
and
xor
rcr
fistl
hlt
sti
jle
push
add
mov
push
pushl
fldenv
push
andl
xor
cwtl
clc
gs
push
push
jb
xchg
lock
nop
xchg
subb
stos
movsl
inc
mov
and
jecxz
ret
rolb
insb
lods
call
pop
push
mov
test
ret
and
rolb
insl
shll
and
mov
addr16
sbb
jmp
and
lret
jg
dec
movsb
jae
iret
and
rcr
cmp
std
into
cmp
inc
imul
loope
and
jp
sahf
fadd
scas
mov
xchg
inc
mov
xor
je
mov
add
pop
mov
fldl
mov
xchg
ljmp
inc
mov
pop
popf
xor
adc
imul
outsb
bound
nop
or
sub
cs
xchg
inc
scas
imul
es
xlat
mov
outsb
andb
cltd
pop
je
enter
nop
loopne
or
fistps
hlt
scas
cmp
xchg
inc
dec
adc
rclb
mov
popf
loop
pop
lcall
pushf
jmp
test
or
call
outsb
cmp
sahf
inc
mov
sbb
dec
xlat
dec
fwait
cmp
mov
add
xchg
and
into
mov
sti
mov
cld
dec
outsb
mov
xchg
mov
loopne
lds
cmpsl
cld
pop
and
cmp
mov
shl
dec
jg
dec
pop
shrb
adc
ret
scas
and
adc
jno
push
pop
sub
push
outsb
cmp
dec
add
das
les
pop
or
inc
mov
insb
loope
xchg
test
addr16
mov
push
rorl
mov
jl
mov
mov
std
xorb
test
xchg
test
xchg
ret
adc
js
mov
push
and
or
les
test
cmp
fldt
insl
inc
or
outsb
aas
es
pop
pop
icebp
mov
mov
jo
clc
aas
or
mov
mov
inc
push
inc
xor
and
jl
jp
fdivs
pop
pop
lock
popf
arpl
sahf
xchg
cmp
push
les
loopne
pusha
movzwl
pushl
lea
pushf
movsbl
bswap
movsbw
mov
jmp
bound
fbstp
rcrl
test
mov
cmp
pop
dec
js
mov
pop
pop
mov
xor
jecxz
popa
mov
mov
xor
inc
aad
call
out
inc
adc
push
xchg
aas
xchg
push
popa
xor
add
leave
daa
or
jp
test
out
mov
adc
sub
or
push
xor
test
aam
sarb
jp
lcall
xchg
repz
aad
lret
pusha
inc
mov
pop
push
sti
cmpl
push
js
enter
or
mov
cmp
orl
shrb
je
outsb
out
lods
insb
sub
jne
dec
int
inc
mov
jae
and
sbb
into
hlt
mov
mov
jae
or
aaa
sbbb
cmp
or
adc
ds
xchg
movsl
outsb
dec
call
fnstenv
add
jmp
addr16
cmp
cmc
mov
inc
bswap
add
movsbw
ror
adc
bts
add
shl
pushf
mov
jmp
str
push
pushl
jmp
nop
pop
pusha
inc
mov
xchg
push
test
sbb
aaa
in
fiadds
pop
arpl
mov
cmp
pop
loope
add
mov
imul
or
or
push
dec
js
leave
call
daa
xchg
mov
movsb
scas
add
mov
jne
int
or
xor
ja
sbb
adc
loop
lahf
popa
inc
mov
scas
loop
jmp
lahf
sti
sub
pop
dec
or
pop
test
cmp
cwtl
dec
cmp
mov
test
cmpsb
cmc
movl
rolb
fistps
jl
add
or
mov
insb
lods
inc
pusha
mov
stc
aad
mov
sub
popf
xor
mov
call
in
push
mov
push
pushf
dec
push
cmp
mov
arpl
inc
sub
fadds
ja
mov
insl
in
in
hlt
push
sub
fs
inc
mov
pop
out
mov
xor
xor
pop
call
adc
push
aaa
subl
pop
lret
in
imul
adc
das
push
push
orl
sub
cld
mov
scas
arpl
sbb
adc
jno
fucomip
add
jmp
mov
push
pop
adc
mov
fidivs
push
ja
in
mov
lock
rcrb
dec
insl
nop
sbb
addr16
pop
dec
sub
insl
in
addr16
xchg
outsb
mov
push
jmp
jl
jnp
andb
xor
out
mov
xor
clc
andl
mov
bound
mov
mov
subb
mov
mov
xchg
xor
test
loop
and
jns
icebp
and
test
je
add
jmp
jb
add
jno
jg
test
or
fisttpll
adc
inc
outsb
sbb
sub
xor
pop
out
pushf
push
pop
pop
sub
sbb
add
inc
or
bound
sbb
add
insb
adc
fiaddl
arpl
pushf
push
mov
mov
xchg
xor
jo
jle
xor
stos
sub
testb
cwtl
addr16
ljmp
data16
js
jg
leave
jns
popf
jmp
jns
loope
sbb
cld
clc
cltd
mov
push
mov
fs
call
pusha
lea
jne
pusha
pop
pushf
not
mov
movb
lea
jmp
and
mov
rol
mov
and
hlt
addl
rolb
dec
add
inc
fsubl
or
stos
xlat
push
movsl
add
xlat
push
sbb
hlt
ret
rolb
cmp
push
sub
mulps
inc
inc
push
add
add
cmp
mov
cmp
mov
movsl
add
call
lock
das
fs
mov
fsubrl
add
les
imul
jmp
or
mov
mov
insl
cmpsl
imul
sti
mov
test
mov
mov
mov
mov
ds
dec
sbb
jmp
ja
jno
xor
lret
mov
xchg
xor
sbb
inc
dec
or
repnz
pop
fsub
cwtl
push
inc
popa
aad
divb
dec
jb
lds
and
mov
sub
int
sti
lods
jne
fs
mov
out
push
out
les
aam
cwtl
aam
lods
sbb
or
das
xor
loope
loopne
aad
mov
push
mov
call
dec
xchg
cmp
rorl
arpl
aaa
pop
cmp
push
mov
mov
pop
out
inc
xchg
sahf
pop
jb
sbb
mov
lods
cmpl
fsubs
out
sub
cltd
adc
pop
push
xchg
push
outsb
std
insl
xchg
and
xchg
adc
call
sub
pushf
cmp
jmp
pushf
jmp
aas
lods
or
mov
dec
and
cld
push
add
lods
mov
out
je
iret
loopne
popa
aad
je
xchg
sysenter
pop
jno
cmpsb
mov
in
pop
or
andl
stc
repz
mov
in
cmp
xchg
repz
jns
lock
xor
mov
push
xor
into
xor
call
mov
or
cltd
inc
rolb
or
test
add
movzbw
jmp
pushl
bt
cmp
jmp
pushf
lea
pusha
movl
mov
mov
push
pushf
pushf
push
pushl
ret
add
sub
or
int3
in
cmp
add
cmp
fcomps
or
filds
or
mov
mov
xchg
scas
daa
sbb
bound
orb
push
test
imul
and
mov
ret
imul
inc
and
xchg
inc
add
xchg
jl
inc
cltd
rcrl
adc
mov
mov
pop
js
mov
rcrl
jp
jo
sub
fs
fsubr
push
mov
ffree
push
dec
mov
add
lea
push
pushl
ret
bt
add
pushf
clc
movzwl
bsf
btc
stc
mov
pushl
call
insb
xor
inc
mov
xor
mov
pop
push
xor
stc
iret
pop
cmp
push
out
in
and
popf
lcall
jbe
mov
sbb
andb
repnz
pop
stos
cmpsl
fldcw
mov
jns
mov
movsb
lds
ret
mov
rep
add
inc
andb
mov
loope
push
pop
ss
push
cmc
loope
jecxz
bound
fnstsw
popf
xor
sbb
jmp
or
imul
jg
inc
mov
iret
add
jmp
sbb
mov
fidivl
ljmp
testl
cld
sub
loope
sub
sbb
jnp
inc
in
stos
mov
inc
dec
imul
idivb
dec
push
aaa
clc
pop
or
and
sarb
daa
cmpsb
test
inc
adc
push
mov
push
out
out
stos
mov
pusha
imul
jns
sarb
subb
scas
mov
mov
loop
cmp
fistps
jl
repnz
inc
jp
cld
pop
lds
mov
adc
sub
cli
clc
sti
or
adcb
lcall
sub
mov
hlt
cltd
andl
mov
mov
je
es
mov
sar
or
int
sbb
and
mov
mov
jb
popw
add
dec
xchg
out
bound
jg
push
cmp
frstor
cmp
jb
les
inc
mov
xchg
aas
popa
cs
imul
cmc
xchg
mov
jge
test
stos
mov
fldpi
xor
div
cmc
inc
push
sarl
movsl
stos
imul
jle
sub
filds
shl
mov
in
popf
sahf
out
sbb
std
sbb
pop
and
pop
test
test
ljmp
imul
adc
leave
and
mov
xchg
daa
xor
dec
lock
dec
out
test
pop
add
cli
hlt
sbb
dec
mov
mov
movsb
or
in
jmp
pop
sub
adc
test
dec
sbb
mov
test
imul
push
gs
mov
outsl
aad
in
pop
push
xchg
xchg
mov
out
in
pop
loope
int
in
lcall
and
mov
enter
hlt
add
cwtl
xchg
nop
dec
sbb
outsl
imul
adc
movsl
mov
gs
dec
push
mov
sub
mov
insl
stos
imul
dec
mov
dec
fwait
sbb
lea
int3
mov
or
mov
mov
jne
sarl
xor
sub
push
push
or
dec
call
inc
setnp
adc
push
jge
imul
fucom
frstor
divb
lods
lods
dec
jmp
jmp
bt
shr
cmc
stc
stc
cmp
jmp
neg
mov
jmp
pushf
pusha
lea
ja
cmp
test
call
pusha
lea
jbe
bts
rol
neg
sub
sub
ror
lea
mov
bsf
call
sub
and
in
out
stos
fisubl
mov
fnstcw
adc
popf
daa
in
sbb
jmp
sub
mov
pop
iret
xlat
dec
inc
enter
in
push
sbb
ja
jle
cs
and
mov
call
cmp
ja
mov
xor
and
cmp
out
jecxz
fdiv
adc
mov
leave
iret
rcl
pop
adc
xchg
mov
push
jbe
rol
inc
out
mov
pop
pop
hlt
and
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
shr
add
cli
sbb
rolb
sti
fisubl
push
xchg
fidivrs
xchg
je
movsl
aas
out
push
movsb
fisttpll
cmp
pop
test
lea
mov
xlat
jo
sbb
andb
mov
inc
cltd
js
push
or
cmpl
aas
and
add
jno
pop
jne
aam
xlat
ja
fsubrs
jp
mov
cmp
adc
cmp
cld
mov
cmp
and
mov
mov
daa
sbb
fidivrl
test
sar
ja
pushf
pushl
movl
mov
jmp
pusha
lea
jae
shr
shl
mov
or
add
bts
rcl
mov
or
btc
mov
jmp
pop
inc
out
insb
inc
mov
pop
adc
jno
loop
adc
incb
icebp
mov
fsubrs
xor
lret
mov
hlt
sub
adc
sub
lods
call
mull
cvtdq2ps
adcb
les
push
cmp
fcomps
dec
andb
hlt
add
gs
adc
inc
sub
pop
nop
jge
pop
xchg
inc
fdivl
jp
call
mov
movzbl
mov
pushf
sete
movsbw
pusha
mov
pushf
mov
call
movb
mov
call
cmpb
pusha
lea
jne
pushf
mov
cmc
jmp
xchg
jmp
test
cmc
pushf
add
pushl
call
inc
mov
mov
xchg
in
push
stos
jnp
push
mov
xchg
iret
xor
repz
mov
mov
inc
subps
scas
test
cmc
dec
add
cwtl
xor
mov
lret
add
nop
adc
inc
repnz
mov
push
jecxz
jnp
lods
cmp
stos
clc
imul
or
mov
or
mov
pusha
cmp
jg
jmp
loop
pop
jp
pop
jle
xor
loop
fidivrs
inc
sbb
cmp
or
dec
xchg
cmp
sub
fdivp
mov
mov
xchg
mov
lahf
pushf
push
imul
loope
adc
dec
mov
arpl
mov
adc
push
mov
repz
gs
inc
sahf
out
lahf
sbb
lcall
mov
pop
cmp
or
mov
repnz
ds
out
mov
pop
inc
pop
sub
out
in
nop
out
mov
int
sub
inc
out
ret
stos
aaa
mov
fistps
notb
jl
mov
jge
in
fstps
in
pop
xlat
add
adc
aad
mov
add
std
pushf
cmp
mov
sbb
push
and
pop
or
mov
pusha
lods
loope
daa
jle
mov
push
mov
inc
adc
fldl
adc
imul
sbb
movsl
mov
out
sbb
adc
mov
daa
test
xchg
movsl
lret
mov
and
out
es
in
add
cmp
fimuls
sbb
pushf
out
jmp
jns
mov
cld
add
lcall
dec
scas
add
or
cmp
pushl
call
pusha
or
jmp
pushf
sub
bt
stc
bt
cmp
jmp
pushl
or
call
lea
call
call
jmp
mov
sub
jo
mov
dec
mov
bound
jp
sbb
or
jl
jbe
and
push
pop
sbb
sub
add
xchg
xchg
fsubrl
jae
out
pop
pusha
fwait
movsb
inc
leave
jnp
fstpt
cmp
jmp
mov
stos
lret
aaa
push
xlat
add
call
shr
or
dec
xchg
stc
add
notl
clc
pusha
mov
test
test
pusha
movb
lea
je
cmc
add
test
bt
jmp
dec
jecxz
outsl
inc
mov
subb
les
loop
mov
sbb
andl
rorb
push
jo
xchg
mov
fidivl
xchg
xchg
or
mov
insb
es
mov
sub
and
in
mov
cwtl
inc
test
xor
push
cld
shrd
nop
popf
cmpsb
out
int3
rolb
cmc
or
mov
imul
xor
xorb
sbb
aas
pop
cs
mov
dec
andl
je
or
jno
verw
dec
mov
add
jnp
test
push
lea
je
stc
stc
stc
cmc
sub
jmp
pop
mov
hlt
call
jo
fyl2xp1
cmpsb
dec
push
push
sbb
mov
imul
in
fidivl
mov
mov
jb
mov
inc
push
and
sub
push
shlb
shlb
xchg
daa
xchg
xchg
or
or
xchg
out
popf
mov
ja
mov
jmp
jnp
call
jl
sub
loopne
pop
and
sub
or
jp
cli
mov
pop
mov
dec
imul
jne
pop
adc
insl
jp
mov
push
les
fcmovnb
push
or
cmp
jns
mov
bswap
sbb
sbb
jnp
and
xchg
insb
aaa
cmpsb
scas
and
mov
aas
inc
xor
jmp
cmp
dec
data16
lds
push
dec
scas
push
mov
dec
mov
push
stc
lods
lock
mov
outsb
rclb
test
fmull
ret
jno
mov
cld
dec
je
outsb
mov
pop
push
pop
adc
es
fiadds
std
push
in
mov
cmp
push
andl
push
cmp
xchg
enter
insb
add
add
adc
adc
minps
push
out
adc
out
pop
std
cli
inc
lods
lret
repz
shl
mov
stos
aam
int
pop
xor
mov
leave
add
cmp
jp
sub
hlt
mov
fdivl
fsts
mov
outsb
xor
pop
cmp
idivb
adc
rol
inc
sahf
aam
daa
and
sbb
mov
xchg
enter
or
jg
dec
int3
outsl
lahf
xor
imul
sbb
stc
shll
int
jecxz
mov
gs
sbb
push
jb
mov
std
xor
fisubs
xor
cmp
lods
cltd
xchg
inc
fcmovnu
pop
stos
jmp
or
dec
pop
in
pop
cltd
dec
pop
jle
lods
xor
in
popf
push
bound
or
andb
sub
fld
popa
mov
popf
pop
mov
and
jo
jne
or
loopne
lds
jmp
stos
or
cwtl
dec
mov
push
sub
jb
mov
insl
sbb
jle
or
cmpsl
inc
push
gs
push
cltd
sub
out
mov
inc
mov
mov
dec
mov
jmp
xchg
adc
xor
push
scas
push
in
mov
mov
dec
jo
test
in
cmp
shrl
inc
xchg
test
add
mov
mov
cmp
xor
or
shrb
push
adc
or
fwait
mov
or
notl
mov
repnz
data16
mov
sbb
xor
inc
inc
popa
cs
hlt
push
xchg
mov
fucomp
rorl
xor
repz
sbb
jne
dec
mov
sub
xor
inc
cmp
cmp
test
pop
mov
sarl
cmp
adc
cli
mov
stos
loope
xor
movl
mov
push
pushl
mov
lea
jmp
mov
jmp
or
cltd
in
adc
or
in
dec
pop
les
call
out
add
lods
fdivrl
add
adc
imul
push
imul
adcl
push
sub
push
outsb
daa
sbb
adc
and
adc
in
jnp
jbe
andb
xchg
ds
pop
mov
js
pop
ret
aaa
inc
adc
fcom
cmc
cmp
imul
push
jno
pushl
cmp
mov
pop
arpl
push
adc
imul
push
push
js
ds
imul
lea
rclb
enter
add
and
lea
test
xor
and
pop
dec
add
jbe
ss
sti
call
fs
mov
xor
cld
ret
sub
je
rcrl
dec
test
push
imul
ljmp
fs
lds
cli
xor
and
push
xchg
bound
cmp
jl
cmpsb
ret
lret
mov
add
fldl
mov
addr16
lock
mov
cld
sarb
imul
xchg
pop
lods
aam
mov
lahf
shr
sub
adc
mov
je
jmp
out
cmp
sub
ss
in
push
pop
push
xchg
xor
cli
aaa
pop
mull
lret
divb
icebp
arpl
mov
pushf
jne
mov
cmp
shlb
mov
pop
scas
or
mov
pop
callw
xor
dec
les
hlt
sbb
stos
into
clc
mov
pop
test
push
or
jle
mov
or
jl
and
push
fidivs
jmp
out
ja
jg
push
inc
mov
mov
mov
or
loopne
mov
mov
xor
cmpsl
repnz
fdivrs
adc
ds
movb
cmc
jae
clc
call
ja
lcall
lcall
daa
xchg
jo
ja
leave
dec
inc
inc
jle
or
push
xlat
add
push
push
mov
pop
aam
cmp
and
cli
and
xor
mov
pop
clc
in
mov
or
jo
pop
jle
addr16
or
add
push
mov
rolb
jp
js
in
call
movl
mov
pushf
mov
pushf
lea
jmp
retw
jae
inc
mov
roll
inc
jle
cs
mov
inc
addr16
xchg
int
sbb
push
test
add
ffreep
and
cmpsb
or
jl
ljmp
outsb
mov
into
loopne
mov
sarb
and
rclb
pop
and
rclb
lds
mov
mov
pop
nop
ret
lahf
ljmp
jmp
arpl
pop
stc
jb
data16
cmp
sbb
xchg
dec
xchg
and
pushf
mov
pushf
jmp
std
add
ja
mov
pusha
push
dec
andl
xchg
xor
shrl
scas
lods
sub
push
adc
repz
sbb
fxch
cmp
popa
outsb
jmp
push
mov
mov
repz
jecxz
mov
repz
pop
repnz
jge
ds
insb
lcall
jl
mov
jmp
ror
xor
pop
mov
push
xor
push
push
arpl
test
shll
cmpsb
xchg
cmp
inc
je
xchg
mov
pop
lods
add
fld1
push
pop
and
add
add
add
add
add
add
add
adc
add
sbb
add
add
sbb
mov
popa
cmpsb
fcmovbe
js
aad
mov
lret
sbb
bound
mov
cs
jno
xchg
xchg
cmp
nop
mov
int
sbb
xorb
mov
push
inc
mov
orl
scas
xor
dec
cmpsl
jmp
push
imul
ficomps
xlat
test
push
gs
or
in
shl
das
cmp
lods
xchg
sahf
lods
test
cli
and
or
mov
dec
loopne
mov
mov
stos
pusha
lret
sbb
in
sub
xchg
shll
jge
orl
shll
xchg
jg
ja
jecxz
xchg
popl
in
jle
dec
dec
imul
or
out
add
push
fldenv
cltd
ret
dec
mov
mov
loopne
sti
in
das
push
sbb
cmp
xchg
mov
hlt
test
out
jbe
insl
jmp
xchg
cli
dec
dec
loopne
jmp
dec
jne
sbb
idivl
popa
ljmp
loope
or
popa
push
cmp
pop
xchg
out
arpl
dec
sub
fs
pop
xor
or
outsb
aaa
aaa
shrl
xchg
mov
call
lds
shll
mov
loope
insl
mov
std
fcomps
je
lret
negl
loope
pop
mov
jge
nop
ds
push
sub
daa
cmp
sahf
faddp
pop
shrl
call
les
mov
repz
xchg
pop
cs
cmc
pop
add
movsl
aad
sbb
sbb
push
fprem
movsb
pop
jl
lcall
test
mov
daa
jl
mov
push
xchg
xor
pop
cmp
mov
mov
sub
dec
ja
test
rorl
xor
test
cmpl
xchg
xchg
xchg
mov
and
test
pop
pop
xchg
cld
jae
mov
adc
test
sbb
xchg
jne
xchg
imul
movsl
sub
fidivs
leave
push
fcomps
xchg
negl
pop
pop
push
mov
lock
test
sar
fcomp
pusha
ret
sbb
inc
and
mov
cmc
aam
xorb
pusha
jae
lds
cmpsl
gs
jns
mov
aam
xchg
ds
mov
rorl
sub
cs
cmp
jle
scas
test
jg
and
xchg
test
cmp
cs
sub
nop
add
push
or
adc
in
cmp
stos
cmpsb
fucomi
loopne
mov
outsl
add
push
bound
sub
pop
dec
in
jle
hlt
nop
cmp
sub
pop
ret
mov
dec
cwtl
jb
sub
pop
add
sbb
and
frstor
mov
cs
pushf
mov
and
add
cmp
xor
mov
popf
adcl
xchg
arpl
cmpsl
cltd
fbld
ljmp
jle
add
scas
dec
mov
fstl
jle
jbe
scas
sbb
inc
or
inc
lods
inc
inc
xlat
insb
sub
data16
sete
stc
jle
mov
scas
or
lcall
xor
std
std
sub
pop
mov
push
jecxz
adc
pushf
cmp
push
pop
push
lods
rolb
ja
mov
fdivs
jae
jnp
push
push
inc
add
sarl
fiaddl
lods
les
sub
xlat
loope
rcr
cmpsl
mov
aas
jge
xchg
jmp
sub
icebp
jmp
jnp
jne
adc
aas
test
shl
aam
jbe
mov
cmp
mov
dec
mov
mov
bound
push
jge
add
pop
aam
adc
fwait
xor
xor
mov
mov
jmp
imul
mov
call
outsb
rcrl
inc
pop
cmc
xorb
mov
int
mov
sbb
cmpsl
xchg
outsl
mov
divb
ljmp
lods
iret
jmp
add
call
repz
jb
adc
jns
sub
inc
test
mov
adc
pop
sbb
push
leave
cmp
fstl
cs
aad
mov
into
pop
jae
inc
push
shr
mov
cmp
or
pop
or
scas
lahf
fnstsw
sti
ficomps
mov
int3
adc
jns
shll
repnz
icebp
add
add
repnz
push
mov
dec
mov
subb
scas
stos
hlt
sbb
or
jecxz
inc
in
fisubrs
and
lea
dec
dec
mov
xchg
pop
inc
aas
bound
fs
out
mov
idiv
ret
sub
pop
mov
lcall
fnsave
mov
jp
stos
mov
cmpb
pop
sti
adc
pop
sub
sub
lret
ficompl
pop
add
sub
inc
cltd
mov
pop
orb
or
cmp
dec
or
mov
data16
xchg
sbb
sbb
sub
pop
outsl
rcrb
push
xchg
dec
sub
mov
sahf
loop
and
js
fldcw
lods
les
fidivl
sub
pop
mov
xchg
jl
sbb
fcomps
scas
std
mov
negb
lods
dec
test
outsl
xchg
scas
fldl
push
lods
push
jnp
adc
ss
add
ja
shlb
fldl
icebp
dec
js
jnp
call
mov
sbb
sub
sarb
mov
aas
sbbb
in
cmp
sub
mov
das
sbb
lea
push
xchg
ret
in
mov
push
jmp
imul
sub
data16
dec
jle
xchg
test
mov
clc
push
jmp
mov
and
adc
mov
ret
jmp
loope
stos
mov
xorb
inc
shrl
dec
sbb
imul
stos
cmpsb
sbb
cs
cmp
cmp
sub
dec
mov
inc
loopne
cmp
aad
repnz
mov
out
imull
stc
call
popf
shrb
enter
lret
out
jbe
sub
jne
fisttpll
les
mov
pop
mov
mov
pop
push
sub
dec
or
adc
outsl
faddl
test
dec
int
mov
pushf
dec
xor
or
test
stos
negl
test
dec
scas
inc
or
filds
and
iret
inc
lahf
inc
pavgb
push
ret
and
push
sub
adc
dec
jge
rcl
or
lahf
in
sahf
shl
pop
retw
in
movsb
xchg
sbb
sbb
dec
out
cmp
mov
addr16
ret
xchg
insl
outsb
add
in
negb
sbb
dec
testl
adc
je
pop
movsl
daa
in
push
movsl
sarl
pop
adc
inc
sbb
out
xlat
into
fucomp
lea
sbb
stos
das
scas
cmp
dec
and
or
xchg
push
jp
lea
lds
in
pop
xchg
jge
repnz
mov
pop
sub
imull
and
pop
stos
push
aaa
test
mov
sbb
movsb
or
imul
ret
sub
bound
mov
in
negl
xchg
mov
les
dec
int3
clc
jbe
push
pop
push
sub
int
loop
outsl
fcoms
or
ss
xchg
fdivrp
aam
imul
mov
dec
mov
jecxz
sbb
shl
mov
cmc
mov
outsl
and
lahf
out
test
mov
cmp
jbe
pop
lea
sub
loopne
mov
cltd
movsb
loop
pop
rcl
es
repnz
leave
shlb
pop
push
mov
mov
sbb
fs
or
dec
pushf
out
jns
js
xchg
xor
sbb
pop
cmp
dec
xor
pop
in
push
sbb
mov
xchg
xchg
jb
pop
push
lea
cwtl
stos
push
push
aas
ret
sub
std
ret
inc
std
mov
or
mov
inc
popa
sub
lret
sbb
ja
jae
jmp
and
test
lods
sti
leave
lahf
adc
dec
push
add
push
fisttpll
jnp
inc
jge
adc
adc
dec
imul
jge
ljmp
and
fsubr
out
mov
jne
inc
jmp
sti
loope
push
mov
dec
decb
sbb
mov
push
aam
xor
nop
push
xor
icebp
mov
xchg
sub
cmpsb
sub
sbb
inc
adc
out
out
iret
xchg
ja
mov
jp
dec
inc
add
xchg
push
aaa
pop
jo
sbb
fdivr
dec
ljmp
scas
jbe
or
adc
hlt
and
inc
mov
push
rolb
inc
ret
xchg
mov
ret
dec
mov
loope
dec
or
push
dec
pusha
lahf
mov
xor
mov
loopne
lods
js
mull
aam
xchg
fldlg2
mov
in
pop
adc
stos
sar
ds
scas
dec
mov
pushf
sbb
fnstsw
inc
cli
jg
sbb
imul
test
xchg
jl
jbe
or
jecxz
mov
mov
cmc
addl
or
inc
pop
jns
insb
mov
adc
daa
adc
xor
mov
dec
mov
std
adc
and
inc
cmc
push
jmp
mov
mov
mov
push
inc
cmp
enter
dec
lods
leave
inc
cmp
sti
pusha
xor
outsb
fsubr
xlat
pop
xchg
out
test
jl
ljmp
jno
sub
movzbl
outsb
nop
imul
pop
mov
mov
mov
incl
mov
lods
xchg
sub
mov
push
negb
push
jecxz
jo
xchg
frstor
mov
les
adc
mov
flds
push
insl
out
push
dec
sub
das
xlat
dec
xor
mov
and
sub
adc
frstor
mov
sub
dec
sub
das
daa
mov
inc
fisttpl
sbb
insb
inc
sbb
arpl
iret
mov
data16
ds
dec
sbbb
sub
std
mov
mov
sub
pop
cmp
cwtl
cltd
or
mov
xor
mov
and
dec
ss
fiaddl
inc
ret
das
test
push
in
repnz
or
mov
xorb
mov
les
mov
push
lods
cmp
aaa
mov
rcl
mov
pop
or
cli
mov
mov
data16
scas
int3
hlt
adc
or
and
push
stc
xor
popf
jl
in
fldcw
lods
out
dec
cmpsb
push
push
lcall
ret
mov
ss
cwtl
scas
std
jnp
jns
push
ja
sub
cmp
push
cmp
fs
roll
add
add
mov
loope
jp
dec
loope
dec
mov
adc
les
ss
dec
jecxz
cli
or
or
jno
add
pop
mov
aas
dec
pop
pusha
and
jno
push
jno
mov
and
and
loopne
clc
enter
fcomps
mov
popa
call
sub
test
pop
aad
push
pop
jmp
mov
pop
jg
fwait
cmp
inc
int3
dec
loope
pusha
adc
xchg
mov
cmc
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
add
add
aad
movsbw
setns
shl
cmp
mov
shl
sub
inc
inc
push
bsf
test
shl
aas
push
rcl
neg
lea
cmc
push
bswap
cmp
or
movzbl
xor
mov
lea
call
mov
mov
jmp
push
dec
adc
mov
mov
mov
xchg
push
pop
xchg
jbe
xchg
pop
adcb
pushf
nop
xor
pop
fwait
sub
jmp
xchg
daa
insl
jg
mov
dec
rorb
sub
loop
sbb
push
lret
inc
and
repnz
jne
stos
jns
add
inc
imul
xchg
jle
shrl
cmc
out
pop
jae
xchg
jmp
testb
adc
into
xor
jg
fs
add
inc
inc
cli
pop
add
mov
inc
or
popf
outsl
mov
loop
es
adcl
dec
xor
cs
insb
add
imul
add
cmp
adc
repnz
imul
jo
xchg
addb
xchg
insb
and
lock
mov
push
call
cmpsl
and
pop
nop
addl
mov
pop
pusha
mov
pop
stos
pop
cmpsb
aas
call
inc
jmp
pusha
aad
inc
sti
jl
andb
jp
mov
sahf
lock
inc
and
leave
stos
add
and
sldt
xor
leave
test
mov
cli
jbe
repnz
in
dec
mov
adcb
jbe
rcll
adc
into
sbb
out
ret
sti
fbstp
push
js
in
mov
pop
out
jl
repz
daa
cmp
sarb
pop
mov
rorl
les
sub
jl
ljmp
out
cmp
insl
jae
lahf
pushf
mov
andb
shlb
mov
mov
call
orb
mov
dec
test
cwtl
lock
and
mov
mov
pushl
mov
adc
cmp
xchg
pop
in
loope
ret
bound
cmp
fmull
adc
or
les
cs
stos
add
ja
orl
and
mov
sbb
pop
push
out
lcall
negb
bt
xor
call
les
inc
mov
loope
push
fldenv
and
jbe
loope
std
ret
push
jmp
jno
stos
lret
out
sbb
mull
cmp
out
in
xchg
mov
jae
cmp
jmp
mov
mov
inc
cmp
dec
xchg
data16
jmp
sbb
out
out
jae
jge
das
jg
pop
int3
out
pop
jno
and
dec
pop
cli
call
ljmp
loope
push
sub
daa
into
xchg
movsl
aaa
cmp
xchg
jo
dec
inc
mov
jmp
addl
fsubl
mov
stos
jmp
mov
cld
pop
push
lds
cmp
mov
xchg
fmull
imul
in
loop
sbb
adc
xchg
sub
and
jns
dec
push
fisubrs
cmp
push
cmc
repnz
test
movsl
add
cmpsb
jns
mov
mov
sbb
push
jl
pop
pop
jp
inc
mov
or
stos
cmpsl
mov
mov
fnstsw
and
xchg
push
inc
push
jns
fldenv
std
sbb
jnp
mov
mov
adc
sub
fnstcw
out
adc
test
jmp
cmp
test
imul
imul
cmp
mov
sbb
mov
push
pop
xor
sub
add
adc
sub
cli
adc
jl
add
jmp
mov
lret
arpl
ss
inc
mov
das
fs
sti
push
push
lret
mov
dec
addr16
arpl
xchg
inc
mov
fistl
mov
pop
ljmp
std
push
push
pop
pop
mov
inc
push
rcrb
popw
jb
mov
mov
lsl
fwait
pusha
fs
ror
outsb
push
movsb
xchg
xor
add
xor
push
iret
inc
gs
cmp
test
adc
push
pushl
popl
mov
cmp
push
jmp
mov
lea
ja
push
pusha
pusha
movb
sub
push
movb
lea
jmp
call
cmc
movzwl
sub
jmp
push
stos
mov
push
pusha
lea
jmp
mov
mov
mov
cwtl
into
xchg
stc
sub
insl
sub
lea
cmp
hlt
bswap
jnp
xchg
push
or
arpl
xor
mov
mov
fldenv
pop
dec
in
mov
mov
jmp
mov
adc
minps
inc
mov
inc
into
subl
or
push
cmc
repz
lock
sub
sub
in
addr16
sbb
mov
aas
insl
test
pop
mov
aaa
push
adc
movsl
popf
jo
push
mov
sub
test
daa
jg
adc
mov
fistps
ficompl
adc
adc
out
mov
dec
push
pusha
mov
lahf
sub
fists
ja
cmp
mov
loop
pop
xchg
sub
inc
add
jb
data16
mov
xchg
xchg
push
lods
iret
std
sbb
lea
mov
push
mov
mov
and
int3
xlat
adc
aam
popl
ficomps
imul
pushf
cld
xor
xchg
jmp
mov
adc
pop
fldt
mov
fidivs
xchg
fidivs
pop
movsl
jns
in
or
jg
imul
test
je
inc
arpl
mov
fcompl
call
pushf
pop
bswap
push
lahf
jmp
in
or
inc
mov
fidivs
xor
xchg
int3
out
out
mov
incl
mov
fs
int3
scas
fsubl
mov
or
sub
sub
loop
scas
push
clc
pop
pop
dec
sbb
and
dec
adc
push
cwtl
ret
ss
fsubrs
sbb
sub
jb
xchg
decb
lds
adc
inc
sbb
rorl
dec
out
repnz
nop
cmpsb
mov
adc
cwtl
xlat
std
int
cld
iret
push
mov
cmp
mov
dec
inc
mov
mov
inc
mov
shrb
stos
cmpsl
and
push
cwtl
fcmovu
mov
scas
loopne
in
enter
rcrb
out
cmp
inc
cmpsl
cmp
sub
and
mov
imul
sbb
js
pusha
pushl
stos
pushf
pushf
movb
movb
lea
jmp
lea
ja
pusha
call
lahf
out
dec
inc
mov
xchg
jno
in
rcll
mov
lods
into
repz
jp
call
jl,pt
dec
ds
cmp
push
inc
cmp
jbe
xchg
in
imul
fldenv
cmp
stc
or
sub
pop
movsl
aaa
push
movsl
lds
lcall
xor
cmpsb
arpl
add
aam
jge
cmp
and
jmp
xchg
add
pop
addr16
fs
idivl
cmp
inc
cs
cmc
xor
sub
popf
hlt
jae
cmpsl
cmp
add
int3
sar
clc
or
jmp
mov
mov
jl
mov
fdiv
sbb
adc
jecxz
rclb
pop
aad
stos
push
mov
jns
push
sarb
push
enter
dec
pop
insl
popf
jmp
or
mov
fnstenv
in
xor
push
pushf
cmc
shrl
sbb
insl
xlat
or
adc
sub
or
stos
sbb
sub
sub
jns
inc
xchg
leave
jnp
mov
sbb
mov
insl
insl
pop
out
add
or
lret
add
cmp
ret
aaa
ja
ffree
lcall
hlt
xchg
adc
ljmp
gs
jno
push
xor
call
lea
jb
pusha
bt
push
cmp
push
call
repnz
decl
mov
xchg
pusha
ds
pop
inc
mov
pop
jp
in
push
into
mov
hlt
jmp
xor
aaa
xchg
mov
cltd
aaa
andb
add
cld
icebp
pop
in
cmpsb
dec
addl
loop
xchg
mov
movsl
and
dec
xchg
mov
xor
sar
jnp
dec
sbb
add
cwtl
and
inc
mov
lea
add
mov
adc
jl
gs
add
call
push
xor
add
add
cmp
daa
xchg
or
pop
xchg
ret
stc
mov
add
mov
mov
jns
stos
jne
dec
push
pushf
jmp
xchg
lock
mov
fildl
aad
mov
imul
dec
inc
mov
pop
dec
loope
movsl
dec
xor
cmp
adc
add
mov
imul
jmp
jae
stos
inc
mov
jecxz
lock
dec
cwtl
jb
xor
xlat
shl
repz
shrl
faddl
inc
int
inc
jg
inc
and
stos
xchg
xchg
aad
insb
fiadds
jno
cmp
cs
and
add
cmp
adc
movsl
pusha
mov
pusha
stos
leave
addb
aaa
push
pushf
bnd
add
in
push
mov
mov
or
mov
and
je
scas
ret
push
add
ret
je
add
inc
sti
roll
xchg
sbb
xchg
loope
pop
jo
mov
sarb
jns
int3
jmp
jnp
daa
cmpsb
scas
jne
xor
cmp
mov
and
test
les
scas
int
repz
int3
inc
das
xchg
in
mov
sti
sti
ret
fwait
jo
fwait
insb
sub
fs
xchg
pop
jo
adc
push
inc
mov
cmp
bound
adc
cmc
fldt
in
icebp
mov
mov
data16
pcmpgtb
cmp
mov
dec
sbb
inc
jmp
movsb
xchg
and
scas
fwait
outsb
ss
pop
inc
mov
mov
mov
xor
lcall
xchg
test
push
xchg
pop
or
ds
or
adc
cmc
pop
test
mov
fs
je
call
mov
js
not
lods
pushf
bt
neg
movb
pusha
mov
inc
cmp
call
pusha
cmp
call
add
add
push
add
push
add
loopne
add
xor
gs
push
add
add
add
les
mov
cs
jb
scas
js
push
iret
dec
xchg
repz
stos
add
dec
jns
cmp
es
mov
dec
std
hlt
fwait
mov
sarl
jmp
outsl
popf
ds
dec
cmp
adc
fs
sub
out
ret
jl
dec
mov
sub
dec
fcoml
enter
jge
lret
push
add
pop
dec
jp
test
and
sti
fcomps
push
pop
iret
dec
pop
mov
mov
dec
in
cmc
pushl
fnsave
pop
mov
orb
dec
daa
and
mov
ja
sbb
dec
out
adc
aaa
dec
out
fstl
dec
rorl
setb
dec
inc
sbb
inc
dec
mov
jg
rorl
and
xchg
mov
xchg
add
xlat
inc
xor
ja
les
pop
inc
mov
xor
jne
pusha
out
les
sbb
orb
and
and
lds
sbb
pop
movsb
dec
sar
imul
sbb
pop
dec
mov
dec
lcall
fadd
aas
dec
or
and
mov
or
shrl
scas
into
mov
dec
rolb
icebp
jg
jne
dec
lret
pop
sub
std
xchg
dec
xchg
jbe
sbb
sub
ja
dec
push
push
jg
daa
fiaddl
or
sbb
mov
fldt
shr
and
mov
xor
add
dec
js
aam
xchg
orb
loope
xor
jae
popl
xor
ds
pop
lret
jl
dec
or
js
in
adc
add
pop
rclb
mov
arpl
adc
repz
push
sub
mov
scas
cwtl
jae
popa
fnstenv
dec
xor
sbb
in
xchg
jo
xchg
mov
adc
iret
lods
into
aam
sti
inc
dec
xor
or
mov
mov
inc
pop
xchg
adc
test
hlt
es
ss
ljmp
push
stc
xor
scas
jl
rorb
loope
rcll
testb
push
sub
or
ja
clc
les
cmp
push
and
rcrb
nop
shrl
pushf
ret
and
scas
push
and
dec
jnp
dec
push
cmp
mov
dec
loope
xchg
hlt
ret
push
cmp
mov
push
dec
fs
push
mov
movsb
xchg
cmpsb
bound
cld
repnz
xchg
pop
popa
cs
ss
ljmp
int
dec
cs
add
sbb
inc
mov
dec
out
push
sub
jbe
dec
sbb
push
pop
sbb
stos
or
cmp
inc
inc
fcoml
jmp
or
and
ljmp
mov
mov
std
jecxz
adc
adc
and
gs
pop
pop
push
sub
cld
mov
pop
inc
mov
push
ljmp
scas
imul
dec
in
stos
cmp
dec
test
pop
sbb
dec
pop
mov
hlt
rcll
jns
lret
dec
ss
addr16
test
cltd
loope
mov
movsl
jge
mov
out
add
inc
mov
cmp
cmp
dec
out
pop
sti
lahf
inc
bound
sbb
repz
and
jmp
xchg
inc
aaa
dec
xchg
in
cs
aas
mov
mov
subl
loop
scas
int3
cmp
xchg
push
aad
push
out
add
dec
inc
or
inc
rorl
add
dec
ret
sarb
dec
cld
jb
xchg
arpl
in
ret
dec
scas
mov
add
leave
mov
push
cmp
dec
imul
dec
imull
fcomps
sbb
sub
mov
mov
call
xor
jbe
xchg
je
xor
loop
xchg
outsb
movsl
mov
xchg
and
aam
dec
mov
dec
xor
out
fcomps
adc
rcr
dec
insb
push
or
push
divl
push
mov
xchg
adc
dec
inc
push
test
jb
outsl
cld
mov
js
into
enter
sub
mov
push
fidivrs
bound
jl
cwtl
dec
fisttpl
xsaves
enter
int
movsb
pop
dec
ret
aas
ljmp
xchg
pop
or
ss
ret
mov
or
sub
dec
push
notb
out
cmp
dec
mov
loop
mov
test
and
stos
outsb
push
movb
xor
fs
dec
inc
outsb
in
dec
stos
xlat
fiadds
cwtl
adc
mov
dec
sbb
cmpsl
jecxz
push
into
mov
test
push
dec
xchg
xlat
clc
xchg
scas
cli
cmp
pushf
mov
mov
mov
fwait
dec
js
test
ret
test
dec
pop
stc
cli
inc
jg
movsl
in
fistpll
add
and
push
mov
mov
cmp
out
jns
ror
arpl
pop
gs
dec
push
jge
mov
aas
scas
push
aaa
in
xchg
leave
dec
add
mov
mov
rcrl
mov
push
xchg
jl
add
shll
int
push
decb
cwtl
jle
es
call
push
sbb
dec
in
lret
xchg
loopne
add
xor
shrb
dec
dec
mov
dec
leave
xlat
push
cld
popa
cmp
sbb
xchg
mov
pop
je
and
sahf
or
stc
int3
dec
les
fmulp
popf
sub
subl
cmp
inc
lahf
ljmp
or
lcall
adc
cmp
pop
push
push
inc
jmp
push
scas
inc
enter
fwait
adc
add
dec
push
insl
jge
mov
mov
shll
daa
out
sbb
aaa
push
mov
loope
inc
dec
and
daa
enter
fcomps
add
daa
mov
push
mov
pop
mov
mov
rcrl
or
sbb
and
mov
cmp
jecxz
into
scas
adc
fisubl
cmp
movsl
data16
adc
cmp
test
mov
sub
sti
xor
aaa
sbb
dec
movsl
mov
or
outsl
ljmp
arpl
pop
cmp
xchg
pop
aas
jb
inc
scas
xor
xor
push
popf
or
push
stos
adc
pop
jmp
lods
push
dec
mov
iret
mov
adc
push
das
sbb
add
aas
sub
pop
inc
inc
ss
sbb
das
cmp
dec
pop
outsl
stc
aas
out
cs
or
jl
psubw
int
sub
addr16
scas
jecxz
in
cmp
out
add
mov
std
jl
out
fstpt
inc
sub
dec
fwait
pop
or
sahf
jb
aad
dec
xlat
xchg
dec
std
sbb
adc
stc
dec
xlat
outsb
add
pop
mov
ja
iret
xor
pop
cmp
das
pushl
cmp
sub
mov
mov
sub
bsr
pop
xchg
ret
push
aas
std
lcall
ds
pop
cmp
sub
lahf
out
int
aas
or
insl
lret
sub
imul
cmp
cwtl
push
inc
adcl
es
cmp
adc
xchg
std
incl
imul
sbb
int3
das
or
int3
xchg
or
xor
dec
sahf
scas
aas
mov
sub
das
mov
scas
cmp
out
mov
jae
scas
gs
outsl
cmp
test
or
mov
out
testl
adc
sub
mov
add
aas
inc
sub
or
les
jge
dec
in
xor
stos
push
sbb
cmp
mov
or
sti
in
or
stos
or
or
out
into
sub
fucomip
add
setg
push
dec
mov
inc
imul
imul
push
cs
gs
leave
ljmp
push
cmp
mov
imul
pop
scas
jmp
clc
aas
mov
dec
cmp
aas
pop
pushf
and
xor
sub
and
mov
sub
inc
pop
pop
cmp
push
int3
cmp
into
xchg
test
xchg
sub
xlat
movl
pop
cmp
stos
mul
mov
in
pop
cmp
out
or
dec
and
out
popf
outsl
sub
pop
sub
leave
dec
mov
jle
outsl
cli
sbb
xchg
push
clc
lret
iret
jbe
or
jg
jg
shr
test
cltd
cmp
xor
imul
mov
rorb
mov
dec
cmp
popl
mov
icebp
pop
aam
mov
lahf
fucom
mov
ucomiss
es
xchg
sub
add
cmp
or
jl
outsl
mov
cmp
insl
out
mov
inc
dec
mov
inc
mov
es
pop
das
das
mov
mov
inc
adc
leave
mov
pushf
scas
sub
ret
mov
aas
dec
test
rcl
cmp
or
scas
inc
insb
into
lods
sahf
push
aas
lahf
test
sbb
lods
aaa
scas
lods
out
in
sbb
in
xchg
scas
adc
jbe
les
bound
sbb
sbb
out
mov
inc
push
lock
das
sub
adc
das
stos
stc
adc
sahf
jno
push
stos
iret
and
into
out
and
jbe
lret
sahf
fimuls
lret
sahf
js
out
sahf
shrl
out
in
fistpll
sub
outsb
outsl
cltd
xchg
fnstcw
and
mov
push
out
std
out
nop
pop
lds
inc
pop
pop
push
add
pop
daa
push
inc
lods
pop
mov
adc
jl
pop
std
iret
pop
jg
insl
scas
mov
pop
fwait
pop
pop
stos
outsl
pop
scas
pop
mov
in
pop
jmp
sets
cmp
mov
int
jae
repz
inc
jb
mov
mov
repz
popf
out
mov
pop
negl
or
pop
lds
fisttpll
int3
int
or
jl
out
leave
dec
ds
dec
in
mov
pop
push
loope
cmpl
pop
sub
mov
inc
sub
jg
es
lds
stos
fisttps
or
cmp
xchg
or
out
push
repz
mov
and
test
aas
sub
addr16
iret
imul
dec
mov
mov
sti
fistps
lds
jmp
mov
pop
scas
add
and
es
pop
lods
insb
and
cmp
insl
scas
mov
mov
es
fildll
inc
sub
iret
popf
out
xchg
or
xchg
xlat
sbb
adc
outsb
xor
sbb
leave
mov
repz
sub
mov
sbb
inc
ja
shll
sbb
sbb
lds
mov
pushaw
adc
enter
fcmovne
push
iretw
and
dec
out
in
jmp
out
jecxz
dec
lea
and
sbb
imull
cs
sub
or
pop
inc
mov
int
mov
or
or
mov
or
stos
cs
scas
out
fucomi
aas
out
or
arpl
aas
mov
int
inc
push
or
shl
dec
or
and
inc
sub
xchg
pushf
neg
lods
decb
mov
out
cli
or
lea
outsb
addr16
xor
in
insl
outsb
test
in
fldt
in
shrb
testb
xor
fbld
hlt
int
aas
dec
das
hlt
int
inc
pmuludq
fnstcw
out
hlt
int
cmp
add
xchg
rorl
iret
aas
adc
fiadds
aam
testl
roll
pop
mov
pop
in
das
add
and
cs
xor
mov
jae
lahf
add
into
lret
jge
jne
lea
pop
scas
ret
jno
jae
ds
iret
push
aaa
imul
das
fiadds
bswap
scas
test
sahf
xor
dec
lods
xor
or
sahf
cmpsl
mov
scas
lea
cmp
mov
ss
in
daa
add
ret
and
mov
ja
jge
lods
mov
rorl
or
addr16
mov
dec
movsl
imul
jge
test
into
sar
dec
stos
test
imul
jl
inc
push
scas
aas
cli
ljmp
mov
lea
push
imul
repz
sbb
mov
ret
fcoms
pop
test
sbb
cmp
sub
scas
cmp
and
mov
rsqrtps
ss
lahf
push
push
in
sub
ret
aas
pop
jmp
insb
mov
dec
insl
dec
dec
and
fstpl
aas
cmp
int
mov
addb
insl
mov
lahf
jg
insb
mov
jg
test
dec
pop
xchg
sti
inc
stos
aas
adc
outsb
rcl
cs
out
bound
stos
lods
ss
in
test
dec
packssdw
xchg
xor
dec
adc
lret
lahf
aas
lahf
sarb
jno
addl
mov
inc
or
icebp
xor
and
test
and
test
and
sbb
sub
mov
inc
das
dec
repz
dec
xchg
fucomip
lret
mov
mov
dec
lahf
lds
jg
jp
push
mov
mov
popf
push
gs
mov
leave
mov
ucomiss
test
xorl
fcmovnb
pop
cmpl
addr16
test
jno
mov
inc
into
push
lret
gs
fs
mov
outsb
test
jge
dec
mov
int
out
xor
jnp
cli
lret
lds
lret
out
mov
sarb
test
or
or
icebp
iret
inc
int3
add
add
stc
pop
xor
xchg
mov
das
pop
das
mov
mov
and
and
pushf
in
mov
push
adc
loope
stc
shlb
pop
inc
sub
push
out
jle
add
aas
mov
ljmp
pop
or
test
daa
ja
adc
adc
cmc
cs
pop
mov
inc
sub
add
repz
add
cld
jns
out
das
dec
mov
or
push
cmp
jne
in
sbb
or
dec
inc
test
sub
rol
icebp
jp
push
shl
iret
sti
cmp
mov
mov
insl
jbe
int3
xor
pop
int
mov
and
mov
mov
xchg
in
imul
out
jmp
sbb
and
ret
adc
add
mov
jne
sub
xor
jge
popa
fbstp
sbb
sbb
sahf
iret
xorl
and
inc
jne
push
imul
lcall
jne
pop
pop
ffreep
cs
ljmp
sbb
das
xchg
test
add
mov
imul
outsl
movsl
test
jmp
xor
or
int3
mov
mov
ja
push
repnz
stos
into
push
pop
vphadduwq
jge
popa
int
inc
leave
into
stos
std
cmp
inc
xchg
fcompl
inc
inc
imul
mov
mov
inc
jg
repz
idiv
out
rcll
dec
dec
pop
scas
pop
mov
lods
int
xchg
xor
outsb
pop
mov
adc
pop
iret
int
fsubrl
pop
jg
aas
das
add
divl
pop
or
jg
lahf
pop
xchg
xor
ss
mov
insl
fbld
inc
das
push
fisubrs
shr
mov
dec
push
stos
cmp
sub
jle
lods
cmc
cld
inc
ds
repz
icebp
or
add
push
pop
std
fbstp
mov
pop
aam
sbb
ljmp
dec
dec
pop
mov
push
push
dec
or
es
out
adc
cmp
xchg
repz
pmaxub
out
fdivrs
xchg
std
dec
jae
and
iret
cmpsl
jno
push
mov
inc
dec
int
or
das
sub
jmp
idiv
shl
sub
sti
or
int3
and
xchg
cmp
mov
iret
sbb
push
add
stc
jle
mov
add
dec
sahf
scas
sbb
xorb
stos
outsb
mov
sbb
add
es
mov
cmp
out
sarl
mov
sub
mov
pop
sbb
inc
lods
xlat
leave
jb
jbe
test
es
mov
adc
push
int
xor
pop
mov
add
mov
popf
mov
sahf
push
sahf
mov
insb
fstpl
pop
in
daa
rol
dec
and
sub
in
ret
xchg
mov
sub
xor
jg
adc
test
lea
stc
pop
or
outsl
sbb
lcall
outsl
mov
out
popa
fiadds
data16
or
xor
movl
mov
mov
sub
dec
mov
pop
ja
movd
mul
cmp
sub
xor
movl
mov
outsl
stos
xchg
inc
ret
mov
cmp
jle
out
mov
inc
pushf
call
sbb
mov
cmp
push
iret
shlb
out
sets
jmp
mov
orl
dec
mov
fiadds
iret
test
addb
pop
push
xor
call
insl
mull
int3
dec
pop
imulb
or
es
fnstcw
pop
outsb
xchg
icebp
mov
sub
dec
inc
lret
arpl
notl
mov
push
jge
outsb
test
cmpsl
mov
inc
daa
mov
out
iret
out
stos
in
pop
int
xchg
fdivs
fildll
cwtl
into
or
decl
mov
sub
pop
aaa
ds
cmpsl
inc
adc
int
xchg
jp
fucom
int
jmp
and
push
cmp
sbb
fistpll
pop
hlt
movl
or
jmp
test
dec
faddp
es
rcrb
jmp
into
aas
sub
jmp
fistpl
std
mov
lods
mov
std
and
adc
movsl
mov
jp
jmp
xor
das
cs
iret
pop
xor
rcr
mov
dec
test
int
push
xchg
in
mov
cmp
into
mov
pop
stos
jle
fwait
outsl
addr16
popf
sub
jg
dec
jmp
in
inc
and
jbe
add
popa
jmp
pop
das
icebp
iret
fistpl
mov
cwtl
in
cmp
stos
out
addr16
dec
imul
jmp
dec
into
push
xlat
ds
loopne
jg
int
mov
scas
scas
mov
int
or
and
mov
xor
std
inc
inc
aam
cmp
jbe
out
jle
adc
pop
jne
xchg
cmp
outsl
lds
test
imul
xor
roll
pop
sub
fstps
stos
push
push
lea
fld
xor
cmp
mov
sub
cmpsb
xor
enter
sub
dec
sbb
lret
out
mov
lcall
test
imul
xchg
push
std
jle
outsb
mov
test
pop
cmc
sti
push
jbe
int
jg
aam
sti
daa
rdtsc
out
pop
and
out
in
mov
pop
in
mov
push
pop
inc
dec
outsl
in
test
jge
rclb
testb
mov
pop
xchg
sbb
test
lea
fistpl
int
aas
fisubrs
mov
sub
mov
out
aas
and
and
inc
or
fisttpll
cmp
or
cmp
cmp
cmp
mov
in
std
xchg
outsb
push
pop
fisttps
push
ds
negb
ss
add
mov
stc
fisttpl
pushl
das
or
fcmovnu
ret
jmp
cmp
inc
add
xchg
test
lahf
add
in
lds
lea
inc
pop
cld
aas
stc
sub
lret
inc
les
js
xor
cmp
pop
fnstsw
dec
or
cmp
jle
imul
cwtl
mov
xchg
sub
pop
fldt
int
mov
push
divl
xor
adc
xlat
outsl
test
out
dec
ds
mov
xchg
lahf
jg
sub
lahf
das
iret
jl
jmp
filds
xchg
outsb
mov
movsl
mov
mov
lds
xlat
jo
xor
mov
rcrl
lret
aaa
jg
lock
xor
sub
in
or
sbb
sub
sub
add
push
ret
mov
iret
jmp
in
sub
dec
and
mov
jmp
mov
ret
stos
fisttpll
les
mov
ljmp
or
sbb
std
aam
ret
or
mov
in
repz
or
scas
or
clc
std
add
mov
xchg
xchg
inc
or
push
adc
movaps
jle
or
and
outsb
das
in
psrlw
mov
decl
mov
mov
sub
add
sub
into
hlt
leave
test
daa
lahf
inc
ret
shrl
push
fadd
aas
fimuls
and
scas
jmp
push
jb
jg
mov
aaa
sahf
xchg
outsb
dec
iret
stos
in
mov
sub
ss
mov
ja
sub
adc
sub
pushf
pop
mov
push
mov
and
into
adc
jg
mov
outsl
or
cmpsl
jno
popf
jle
and
lahf
testb
push
iret
push
test
loopne
in
out
popf
sarl
xlat
fbld
dec
add
sbb
sbb
int
mov
or
xchg
or
mov
hlt
mov
outsb
out
mov
adc
test
rol
mov
mov
push
test
scas
or
push
pop
dec
cs
mov
mov
arpl
or
out
and
mov
aaa
xor
dec
pop
xor
mov
sub
fnstcw
sahf
iret
or
sbb
mov
or
shlb
inc
sbb
sub
dec
mov
loope
aas
in
roll
iret
mov
das
das
fisttps
fiadds
or
into
sarl
or
sub
and
fisttps
scas
sbb
fistps
push
test
jle
das
aas
inc
xchg
or
insb
sub
or
cmp
pop
or
bt
sub
mov
and
sbb
in
or
mov
pop
lret
aaa
sarl
sub
aad
dec
popl
ret
ud2
and
ss
mov
iret
and
sub
add
jmp
cmp
inc
std
sbb
imul
cmpsl
cs
in
inc
je
fistps
ds
cmpb
js
ret
sbb
push
in
sbb
arpl
cmp
in
aas
sbb
iret
fnstsw
cmp
pusha
xchg
add
cmp
sbb
dec
cmp
ds
mov
jo
inc
jle
push
inc
cmp
daa
aaa
pop
lock
add
or
fwait
in
lods
adc
ja
jg
scas
es
push
sbb
pop
aaa
mov
movsb
mov
aas
sbb
dec
into
test
cmp
mov
inc
imul
sti
xchg
lret
dec
ljmp
inc
scas
xlat
fidivrs
add
or
insl
push
pop
aas
lods
ljmp
orl
lret
xchg
and
lahf
sbb
jmp
sub
mov
jns
aas
mov
addb
dec
push
hlt
pop
sbb
adc
cs
dec
std
lods
mov
mov
imul
imul
rep
mov
aas
mov
fimuls
lret
dec
movsl
and
cmp
negl
dec
xchg
xchg
mov
lret
leave
pusha
sarb
addr16
outsl
pop
xchg
adc
mov
mov
add
mov
pushf
lea
mov
fadd
call
push
push
dec
jge
sbbl
dec
pop
push
outsb
jle
pop
pop
and
dec
test
inc
mov
mov
jge
pop
lea
test
mov
es
sbb
subl
add
push
outsl
imul
jge
cmovae
sbb
push
cmc
daa
adc
cmovp
pop
lret
adc
mov
pop
scas
cmp
pop
push
pop
or
mov
add
add
faddp
mov
mov
test
sbb
daa
rclb
jno
sub
fbstp
lds
cli
xchg
rclb
sbb
popa
or
pop
addr16
arpl
and
into
push
outsl
leave
xlat
test
std
inc
mov
inc
cmpb
push
cmp
sbb
cmp
or
pop
adc
mov
das
addr16
mov
movsl
test
cmp
sub
dec
pushf
push
jge
pop
cmp
sub
dec
incb
out
and
jp
jg
sub
pop
loop
outsl
subl
std
and
mov
stos
mov
xchg
pusha
es
mov
jmp
xchg
in
inc
inc
xchg
lods
mov
mov
aaa
push
in
icebp
lea
aas
pop
outsl
pop
lea
mov
lahf
xor
sub
pusha
pop
push
push
arpl
cmp
das
or
imul
ret
idivb
popa
aaa
bound
jmp
ud2
inc
les
mov
rcrl
xlat
out
shlb
jno
sbb
xor
or
or
mov
mov
dec
mov
push
inc
mov
aaa
int
pop
movsl
in
jno
jg
pushf
out
pop
ds
lret
shll
mov
imul
mov
inc
xchg
jb
cmpsl
pop
ss
lcall
js
and
fs
push
addr16
repz
divps
insl
add
icebp
fildll
js
ja
cmp
aas
inc
sub
or
cmpsb
outsb
pushl
testl
addr16
add
ficoms
out
aam
xchg
mov
cmc
ja
mov
xor
mov
ds
sub
jle
aas
push
sub
or
imulb
cmp
daa
aas
incl
adc
mov
cltd
xchg
out
enter
aaa
ds
outsl
xor
aas
shl
pop
cs
cmp
mov
enter
jae
adc
test
pop
das
mov
xchg
mov
cmovne
sbb
fcmovne
xchg
das
or
mov
dec
push
stos
pop
es
fildll
movsb
add
rcrl
fwait
xchg
insl
movsb
xor
outsl
xchg
mov
dec
mov
imul
loope
dec
fwait
cmp
xor
cltd
xor
mov
cwtl
inc
outsb
in
dec
stc
nopl
lahf
mov
push
or
test
out
lock
das
jae
or
mov
loopne
out
mov
test
pop
lea
cmp
movzwl
aaa
insl
pop
or
aas
iret
xlat
movntq
xchg
jg
sarb
cmpsl
jg
imul
jle
xor
cmp
addr16
jne
inc
xlat
das
fucomip
int
inc
pop
pop
movhps
lret
int
jbe
shrl
leave
cmpsl
fs
adc
mov
mov
outsl
daa
inc
dec
mov
loope
mov
or
out
insb
ss
ud0
dec
lahf
inc
aas
into
loope
mov
pop
shll
jg
dec
clc
add
pop
push
dec
xchg
push
sbb
addb
pop
icebp
dec
cs
or
mov
push
pusha
pusha
fsubr
jmp
cmp
scas
addr16
sbb
lret
sub
xor
push
enter
das
jge
pushl
rcrb
arpl
mov
cmp
aaa
iret
into
push
dec
scas
or
dec
pop
roll
ja
xchg
lret
adc
push
xchg
setb
add
dec
mov
add
stc
cmp
xchg
push
out
jp
adc
incb
cmp
jae
test
inc
lods
mov
nopl
sub
jecxz
jmp
sbb
cmc
nopl
shlb
jge
enter
jbe
pop
jg
inc
outsl
mov
sub
cmp
jg
cmp
ja
test
jge
mov
imul
or
inc
mov
jge
sbb
int
add
adc
sbb
mov
mov
icebp
ljmp
in
mov
outsl
call
or
div
fbstp
lcall
sbb
out
dec
pop
loope
add
jae
sbb
or
pop
xchg
in
es
push
or
addr16
adcl
out
fnsave
lret
mov
xchg
testl
ds
std
sub
pop
lea
testl
lods
cmp
jns
mov
mov
cs
mov
mov
std
xlat
sarb
popf
cmp
rcr
ds
sbb
pop
adc
sbb
stos
cs
dec
out
inc
inc
cmp
in
add
subl
insl
mov
scas
xchg
xchg
jg
adc
addr16
jle
stos
xchg
xchg
sbbl
mov
mov
aas
lods
pop
fsub
lods
pushf
xor
insl
imul
stc
jmp
aas
cmc
das
lret
and
je
aaa
out
and
jg
mov
cmp
sub
cmp
aas
xchg
xor
pop
xchg
stc
xchg
jmp
out
and
xor
or
insl
fisubrs
insl
ret
xor
fwait
and
outsl
test
icebp
int
cld
adc
scas
clc
pop
gs
daa
inc
das
adc
xchg
mov
xchg
neg
and
lods
mov
and
mov
test
mov
in
imul
cmp
rcrb
das
cmp
adc
aaa
clc
sti
sub
mov
ret
or
das
pusha
aas
pop
sbb
or
mov
jmp
dec
fcmovu
inc
jne
repz
jp,pn
dec
out
xchg
clc
out
popl
in
xor
lock
aam
movzwl
pop
cmpsb
mov
mov
hlt
add
xchg
in
push
int
popa
aad
adc
fldt
pop
sti
xor
xchg
xor
ja
cwtl
lods
iret
mov
xlat
push
dec
loop
pop
sbb
scas
inc
je
out
inc
dec
cmp
and
out
sub
sbb
das
mov
cltd
psubw
scas
xchg
cs
inc
je
mov
mov
inc
jns
lahf
dec
mov
dec
dec
or
das
repnz
aas
dec
stc
repz
adc
loope
enter
lret
sub
test
ja
inc
hlt
das
sub
outsb
into
fcmovnbe
pop
add
dec
or
and
lods
sub
iret
cs
push
testb
incl
std
jnp
das
mov
call
add
push
and
pop
jae
push
dec
inc
xchg
or
mov
push
adc
cmp
cmp
or
mov
push
adc
enter
sub
inc
xchg
and
mov
push
adc
inc
out
mov
cs
fsubrl
dec
inc
xchg
or
mov
dec
outsl
mov
popa
push
mov
das
or
xor
sub
lds
fldcw
pop
outsb
mov
add
js
ret
mov
int
ror
cmp
ret
inc
fwait
cltd
arpl
xchg
in
fildll
xorb
in
jo
and
dec
scas
pushl
leave
ds
cli
or
add
and
pop
nopl
fcomip
cwtl
dec
lret
sub
inc
and
ds
dec
dec
sub
ret
ds
cmp
or
sbb
iret
dec
and
mov
inc
adc
sub
jle
jbe
mov
iret
adc
jmp
mov
loop
dec
jg
daa
sahf
mov
lds
cmp
daa
out
fisubs
test
scas
or
mov
loop
scas
fucomip
or
popf
mov
lahf
add
push
cvttps2pi
pop
adc
dec
addr16
xchg
push
dec
into
sbb
lahf
mov
mov
out
dec
das
mov
clc
jge
popf
fistps
mov
outsl
dec
sub
insl
ds
scas
iret
push
add
test
lcall
std
jle
cmp
loopne
cs
pop
loopne
iret
loopne
sub
lods
dec
ljmp
movl
std
outsl
daa
es
lahf
jbe
inc
pop
out
adc
mov
add
test
fidivs
inc
aas
dec
and
addr16
iret
out
add
push
out
outsb
lahf
fiadds
outsl
insl
jge
push
adc
out
push
daa
test
scas
or
pop
sahf
adc
jle
daa
mov
mov
int
fistl
sub
outsb
jno
fcmovne
shrb
std
lahf
daa
es
pop
push
adc
mov
add
test
and
mov
inc
loope
leave
lahf
in
out
inc
cmp
popl
daa
stos
pop
jae
stc
filds
xchg
lahf
push
add
fcompl
push
sbbl
out
daa
inc
daa
xor
inc
xchg
roll
fdivrl
dec
push
hlt
out
sub
std
ds
outsl
sahf
push
out
mov
outsb
fidivrs
test
scas
cwtl
dec
inc
loope
pop
inc
push
jmp
out
adc
sub
jg
push
test
lahf
cs
push
scas
iret
push
je
add
mov
scas
outsb
add
out
push
aas
mov
xchg
sarl
pop
mov
cmp
fstps
out
scas
mov
mov
push
push
add
in
ds
cmp
jmp
outsl
shrl
aas
adc
jg
test
rorl
sub
xor
test
push
pop
mov
cs
rorl
pop
jle
xor
cmp
mov
out
cmp
cmp
xsaves
jle
mov
dec
inc
jmp
dec
sbb
inc
sub
loop
dec
mov
mov
pop
pop
jmp
pop
lahf
aas
cmp
vmptrst
popl
scas
mov
rcrl
fcoms
outsb
das
mov
outsl
cmp
out
aaa
push
outsb
and
push
cmp
sarl
sub
pop
scas
lcall
imull
mov
pop
xor
ss
lods
mov
sbb
pushf
cs
pop
iret
mov
add
test
aaa
arpl
dec
pop
mov
mov
ror
das
fbstp
pop
scas
shll
cmp
aam
lds
inc
xor
daa
scas
pop
or
mov
cmc
push
hlt
int3
xor
iret
das
add
test
xor
dec
adc
scas
lahf
lcall
adc
ds
std
fisubs
outsb
push
mov
push
lahf
iret
mov
xor
shrb
pop
xor
adc
mov
add
push
fbld
adc
int
shr
jne
dec
ficomps
pop
push
scas
lret
test
scas
iret
aas
addr16
inc
test
das
orl
lahf
add
push
fcompl
mov
dec
aam
jg
hlt
sarb
pop
jg
daa
scas
daa
mov
pop
mov
xor
lar
pop
aas
sarb
or
scas
iret
outsl
add
push
jmp
dec
push
int
sbb
sbb
daa
test
loope
aas
sub
pop
jmp
dec
mov
pop
sub
sarb
das
das
cs
push
or
jne
dec
mov
sbb
scas
mov
mov
mov
xor
test
mov
jg
scas
adc
jg
jg
iret
pop
add
push
fists
lahf
push
inc
jg
fidivrs
scas
std
mov
es
jg
aas
mov
pop
fimuls
shll
std
out
daa
fimuls
push
lahf
popf
daa
fisubrs
scas
push
test
mov
pop
stc
out
mov
jne
dec
xlat
mov
scas
xchg
shrl
fimuls
and
sub
and
and
push
daa
das
int3
adc
jg
and
scas
push
test
scas
sahf
mov
int3
fmull
mov
insb
das
and
iret
mov
add
test
and
lcall
xchg
pop
inc
push
and
stc
fisubs
jg
daa
into
daa
xchg
pop
aas
push
repz
dec
xchg
shll
into
int3
scas
daa
mov
lret
pop
and
mov
stc
jg
jg
daa
pop
daa
mov
lret
fidivs
mull
outsl
dec
mov
mov
dec
pop
mov
ds
push
ud0
addr16
inc
lret
xlat
dec
scas
mov
scas
add
outsb
rorl
cs
pop
push
rorl
mov
setns
mov
ds
insl
mov
jg
das
sbb
daa
test
scas
in
mov
scas
ds
pop
xor
es
mov
push
push
ficoms
hlt
scas
push
test
aas
pop
jle
xchg
sti
out
jle
fisubrs
sbb
xsaves
jg
mov
mov
std
cs
es
jbe
inc
xchg
jle
std
pop
daa
adc
repz
push
or
cltd
daa
iret
xlat
iret
add
pop
out
les
xchg
sbb
dec
hlt
scas
push
test
cltd
mov
jg,pn
scas
cmp
stos
rorl
lcall
xor
pop
lret
jmp
test
sarl
and
outsl
hlt
scas
push
test
loope
and
push
fiadds
daa
test
pop
outsb
rorl
pop
jle
xor
adc
pop
dec
pop
ret
pop
fldt
xchg
dec
push
adc
or
adc
dec
ret
stc
pop
jmp
pop
clc
or
mov
jle
es
mov
mov
jns
sub
fbld
mov
adc
and
xlat
dec
daa
mov
adc
mov
in
daa
pop
pusha
inc
lret
dec
outsb
adc
mov
jbe
out
add
inc
out
out
lods
lahf
cltd
es
jg
adc
adc
ds
adc
fiadds
daa
in
div
scas
fisttpl
and
xchg
out
jge
mov
das
sub
xor
scas
sub
stos
mov
mov
jmp
cs
sub
inc
inc
mov
add
inc
out
aas
sub
pop
cmp
or
daa
ds
fisubrs
pop
push
insb
pop
or
insb
pop
insb
pop
mov
subb
dec
jns
das
mov
les
lahf
idivl
cs
ds
mov
movhps
iret
lds
out
rcrl
ds
or
psubsw
std
ret
pop
daa
dec
daa
movsl
aas
dec
outsl
into
xchg
aas
cmp
incb
mov
das
ja
inc
sub
dec
and
xor
das
test
sub
lret
dec
or
iret
or
pop
cwtl
xor
pop
hlt
fistpll
or
adc
stc
ficoms
or
or
pop
iret
mov
xor
xor
dec
out
cmp
iret
push
fldcw
mov
lahf
add
mov
ds
out
adc
add
sub
cs
or
mov
xlat
outsb
pop
xor
outsb
aad
pop
fwait
incl
jne
das
insb
mov
iret
pop
mov
xor
imul
ret
imul
iret
das
cmp
sbb
or
push
sar
in
aas
loop
aas
shlb
sarl
sub
or
int3
jae
cmp
adc
stc
push
adc
or
fmulp
add
test
dec
lea
xor
testl
inc
pop
inc
mov
adc
aas
incb
aas
shr
shrb
mov
xor
or
shll
lahf
xlat
cmp
xlat
or
sahf
adc
negl
filds
xor
scas
jmp
lahf
sbb
and
add
cmp
dec
ret
push
push
and
ret
mov
outsb
push
fldl
pop
add
cs
aas
mov
xchg
cmpsl
lahf
in
sub
mov
pop
bt
fucomip
fnstsw
out
cmp
dec
test
jmp
and
xchg
or
mov
lret
mov
sahf
insb
or
xor
in
fisubrs
ljmp
das
mov
mov
aas
sub
iret
pop
mov
fdivrp
jno
out
or
dec
or
dec
mov
fimuls
add
test
fisubrs
xchg
rorl
push
pop
dec
imul
mov
insb
add
std
pop
aas
nopl
jle
iret
xor
mov
mov
inc
or
sti
loope
dec
iret
aas
ds
or
sbb
daa
push
aas
mov
cmp
dec
xor
xchg
ret
into
push
fstpl
aas
cmp
sbb
das
imul
pop
ljmp
out
add
test
out
sub
int
mov
scas
stc
loope
mov
das
pop
sti
fbstp
fistpll
push
ret
stc
push
cmpb
push
into
add
test
xchg
or
dec
pop
ret
testl
test
lds
adc
dec
pop
in
sub
mov
out
lret
scas
insb
imul
ds
cmc
xchg
repz
gs
pop
in
sub
iret
aas
fildll
ljmp
lahf
or
adc
or
outsl
aas
mov
jmp
ds
mov
jg
out
dec
dec
fidivs
pop
cmpsb
sbb
lret
loope
outsb
iret
mov
shrl
mov
arpl
std
out
xchg
or
sub
scas
ja
out
popf
mov
dec
daa
cmp
out
cltd
dec
icebp
loope
push
mov
out
xchg
ror
mov
pop
jg
fistpll
mov
popa
push
jo
xor
sub
lret
and
jmp
ja
mov
mov
mov
les
pop
cmp
aas
out
loope
out
mov
cmpsb
fisttpll
push
sub
sub
dec
ret
outsl
in
iret
pop
pop
mov
pop
lahf
insb
stc
fisttpll
iret
mov
sbb
aas
in
jae
out
cs
mov
cmp
mov
pop
pop
or
adc
cmp
sbb
mov
sub
xor
pop
sub
or
das
and
sub
mov
rol
daa
mov
and
mov
pusha
pop
inc
xchg
pop
mov
sub
sbb
icebp
mov
adc
popl
jae
outsl
pop
xor
xor
xor
sub
out
mov
mov
mov
mov
lea
fucomip
ljmp
sar
shl
mov
or
stos
or
or
push
mov
dec
pop
pop
adc
ror
mov
xchg
mov
mov
xor
sub
pop
rol
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
lea
pop
sub
pop
cmc
insb
mov
push
leave
mov
or
cltd
sub
pop
jge
aas
sub
or
push
add
pop
sbb
inc
loopne
cmp
sub
pop
test
stc
sub
or
jo
cmp
sub
or
inc
icebp
mov
or
jmp
aad
jmp
or
jecxz
jno
loope
push
sub
or
fstpl
fldt
add
fnstcw
enter
cmp
sub
sub
or
mov
sqrtps
stc
jmp
jecxz
dec
mov
mov
push
cmp
mov
push
xchg
leave
cs
mov
or
pop
jecxz
outsb
xchg
mov
ljmp
ds
dec
rcrb
ja
insb
pop
in
insb
mov
scas
dec
sub
daa
cltd
out
ljmp
pop
jle
mov
cmp
pop
or
loope
out
mov
fdiv
scas
test
aas
sub
or
addb
pop
push
add
and
testb
dec
into
xlat
stc
ret
or
mov
std
xchg
insb
adc
decb
pop
outsl
insb
pop
pop
insb
pop
dec
insb
pop
ds
insb
sub
sbb
cmp
inc
cs
pop
fisttps
imul
ficoms
into
xor
mov
mov
cmp
jb
dec
sarb
ret
fistps
xchg
sub
pop
sub
fildll
lahf
es
jg
sbb
pop
fnsave
out
dec
xor
sub
mov
xor
xchg
inc
sub
or
pop
cmp
add
cmp
fisttpll
pop
cmp
sub
sbb
fisttpll
pop
push
insb
pop
cs
pop
ds
sbb
pop
pop
xchg
ds
insl
scas
aas
fistpl
cmp
mov
jle
outsb
xor
pop
outsl
mov
dec
imul
sbb
or
mov
scas
or
xchg
mov
imul
sbb
add
sub
fisttpll
sub
jle
outsb
imul
inc
mov
pop
aas
sbb
adc
or
pop
std
cvtps2pi
or
cmp
filds
aas
ror
mov
lahf
xor
sub
pop
jg
sub
pop
sub
std
dec
aas
sub
mov
push
pop
out
xor
fimuls
into
sub
mov
mov
jle
or
pop
and
or
das
inc
repnz
dec
pop
sbb
or
adc
or
out
adc
or
mov
aaa
mov
add
ds
das
aad
les
lahf
pop
mov
stc
iret
out
popf
push
pop
cs
dec
outsl
xor
into
imul
mov
mov
dec
cmp
inc
in
pushl
mov
sbb
in
icebp
mov
fisttpl
ss
scas
ss
cmp
aaa
sub
aas
inc
pop
sub
rcll
sub
mov
cmpsb
fstl
or
loope
stos
pop
jle
or
rcrl
mov
xlat
out
ret
xlat
ffreep
xlat
iret
ret
xlat
mov
es
aas
mov
outsl
fstpl
dec
xor
or
sub
xchg
mov
out
xchg
into
fidivs
pop
enter
xor
xchg
xchg
pop
push
add
sub
int
xlat
xlat
stc
ret
xlat
jecxz
pop
mov
iret
sub
mov
iret
jmp
dec
fsts
and
pushf
imul
fstp
pop
enter
mov
sarl
cmp
aas
mov
ljmp
out
cmp
dec
xor
test
out
or
int
outsl
pop
pop
add
and
out
imulb
mov
cmp
out
mov
fdiv
jle
ret
jg
rclb
push
rclb
cmp
sub
mov
iret
cmp
mov
mov
mov
mov
mov
fisttpll
mov
in
push
mov
aas
into
cmp
outsl
stos
xor
cwtl
or
sub
sahf
fmulp
repz
jle,pt
xchg
or
cmp
pop
icebp
call
pop
lahf
adc
rcrl
adc
ret
leave
mov
sbb
decb
dec
out
ljmp
xor
xchg
push
or
adc
or
pop
or
sti
pop
push
rcr
in
das
ret
mov
mov
scas
insl
aas
jb
aas
dec
sarb
shrb
rcrb
adc
iret
test
idiv
outsl
xor
into
xlat
push
xor
cmpsb
xlat
into
xor
jle
push
cs
insb
das
lds
inc
das
xor
fbstp
pop
xlat
xor
ds
mov
out
xor
xlat
sahf
xor
addr16
and
pop
lcall
mov
loop
scas
jge
lahf
loop
mov
shrl
push
das
ret
loopne
inc
add
cmp
out
shlb
fistps
or
pop
rcll
jae
fidivs
out
sub
dec
xchg
or
loope
das
xor
aas
cmp
dec
mov
inc
pop
mov
iret
jno
xchg
xchg
or
or
inc
or
dec
sahf
insb
ds
dec
sub
xor
pop
stos
pop
gs
cmc
iret
or
cmpsb
std
add
test
jp
outsb
les
cmpsl
xchg
ss
maxps
xor
mov
mov
dec
mov
mov
sub
scas
inc
mov
xor
outsl
mov
push
adc
mov
or
outsb
fimuls
mov
insl
fistpll
fisttpll
outsl
in
sub
iret
dec
xchg
xlat
ja
or
fcomip
dec
add
mov
scas
pop
out
jns
dec
scas
lods
daa
icebp
dec
leave
outsb
ljmp
fbstp
stc
lcall
pop
mov
xchg
xor
sahf
pop
outsb
xor
mov
inc
xor
lcall
pop
dec
cmp
sbb
out
mov
mov
dec
mov
or
xchg
leave
push
mov
out
scas
xchg
leave
mov
xchg
scas
mov
outsb
scas
sub
aad
sbb
pop
sub
jmp
mov
std
mov
or
std
outsl
decb
pop
fdivrl
push
or
mov
jle
lcall
dec
pop
cs
xchg
lods
mov
mov
scas
test
pop
es
mov
scas
mov
iret
scas
loope
jbe
ljmp
jno,pn
daa
xchg
jno
incl
mov
lods
loope
cmpsl
mov
pop
pop
in
dec
insb
lods
or
mov
out
es
fwait
loope
cs
push
in
sub
iret
dec
es
and
out
mov
stos
insb
xchg
repz
repnz
cmc
fildll
mov
into
les
out
mov
cmpsb
stc
xchg
into
xchg
mov
stos
ss
fiadds
scas
adc
jbe
pop
imul
fidivrs
test
outsl
in
movaps
out
xchg
mov
jg
push
icebp
aam
outsl
cld
xlat
and
and
test
scas
or
push
inc
pop
push
fisttpll
inc
cmpsl
jae
xchg
push
out
mov
out
mov
sbb
mov
mov
mov
xor
mov
iret
xor
data16
stc
jg
lahf
aas
adc
sbb
aam
aam
ds
movsl
push
icebp
push
movsl
mov
xor
jle
dec
lds
into
fbstp
add
iret
mov
dec
hlt
pop
xchg
mov
shll
mov
dec
or
stc
popf
mov
out
inc
sub
mov
xchg
inc
sub
outsb
inc
sub
inc
leave
and
aas
lahf
jae
pop
sub
or
pop
mull
ds
or
or
push
loope
addr16
ljmp
pop
outsb
sbb
xor
imul
mov
and
fstpl
out
or
pop
das
and
pop
pop
inc
sub
not
push
push
or
popf
pop
cmpl
decl
or
or
pop
test
das
cltd
xor
into
imul
cmp
mov
bound
clc
adc
pop
mov
frstor
mov
mov
adc
dec
rcrl
stc
into
and
mov
push
sub
push
or
pop
dec
xchg
jae
fbld
data16
or
pop
lcall
xchg
ss
incl
iret
xchg
add
lret
rcrl
push
cs
arpl
mov
outsb
fs
sub
or
sub
out
test
dec
dec
out
jbe
or
fsubrs
xchg
xor
pop
xchg
pop
pop
test
jns
or
adc
mov
and
outsb
xchg
xor
inc
push
insl
pop
test
cmpxchg
mov
fbld
ljmp
loope
ja
pop
loope
dec
mov
mov
insb
xor
test
int3
mov
dec
jns
insb
or
into
mov
scas
popl
outsb
xor
fisttpl
fiadds
roll
fimuls
idivb
mov
pop
aam
cs
bound
mov
push
cmc
iret
pop
daa
out
xor
ds
je
int
das
ret
dec
lea
push
push
loope
sahf
xlat
das
out
ret
mov
iret
leave
pop
lahf
mov
mov
lahf
push
xor
and
mov
inc
mov
loope
pop
ljmp
loope
mov
lahf
cmp
imul
out
xor
pop
scas
aas
std
dec
out
xchg
sub
mov
push
sbb
scas
mov
ds
fsubrp
out
into
leave
sub
or
xchg
into
push
mov
inc
push
inc
mov
and
inc
std
pop
int
das
xor
cmp
pop
push
lahf
or
push
std
aas
test
negl
lahf
sub
mov
pinsrw
or
lds
dec
mov
mov
pop
aas
xchg
pop
pop
add
das
es
test
aas
mov
lahf
daa
sar
dec
sbb
mov
imul
and
mov
mov
scas
sbbl
insb
xor
stos
sub
mov
cs
outsb
add
scas
mov
fs
adc
dec
mov
sbb
mov
insb
shl
pop
hlt
filds
mov
les
ja
ljmp
dec
xor
dec
outsb
cmp
aas
jg
dec
push
sub
sub
icebp
jg
dec
shrl
sub
mov
aam
movsl
fstps
bound
sahf
jg
pop
jg
and
iret
jge
fimuls
pop
jg
mov
roll
jge
stc
pop
cmp
lret
lahf
xchg
imul
wbinvd
stos
sti
lahf
inc
pop
jnp
dec
ficomps
ss
out
mov
das
cmc
orl
decl
push
pop
scas
xor
mov
cmp
sub
aas
jns
stc
sub
mov
mov
sahf
mov
lret
scas
jns
jg
mov
subl
jae
decb
and
inc
mov
lret
ljmp
lahf
daa
sahf
test
adc
jns
sahf
pop
ret
ja
rcrl
push
scas
inc
sub
xchg
mov
dec
pop
adc
jnp
enter
mov
dec
cli
rolb
jne
sbb
mov
and
xor
lea
movsl
xor
fs
popf
dec
cld
lods
icebp
jbe
ds
dec
add
repnz
lds
cld
lret
pop
and
insl
lods
add
add
jb
jl
test
pop
mov
aam
mov
dec
xchg
out
in
es
jnp
add
adc
mov
dec
push
ret
xor
ja
fwait
stos
lea
dec
and
mov
rcrl
dec
cmc
gs
push
mov
lock
and
jg
cmpsl
scas
adc
jp
sub
cmp
data16
jne
mov
xchg
pop
dec
cmp
push
jl
dec
mov
add
outsb
popf
stos
mov
xchg
xor
mov
arpl
mov
jnp
xor
xor
xchg
push
mov
inc
xchg
add
imul
dec
jge
mov
pop
lcall
repnz
push
roll
sbb
dec
shrb
out
testl
stos
scas
sti
fdivr
sub
scas
into
cmp
xchg
ss
and
mov
enter
inc
dec
jmp
cmp
lret
mov
mov
adcl
dec
jbe
inc
cmp
das
daa
cmp
jecxz
or
push
sub
pop
mov
jb
cmp
or
inc
fldt
mov
adc
neg
cmp
sub
fisubs
or
dec
sahf
sub
ret
out
or
and
push
or
xchg
pop
mov
dec
divps
mov
pop
dec
mov
mov
cs
ret
iret
inc
adc
mull
pop
inc
iret
push
sub
or
push
sub
pop
stos
mov
inc
push
jmp
sub
fwait
mov
inc
sbb
jae
mov
sbb
pop
sub
or
mov
xlat
sub
pop
pop
mov
pop
pop
or
mov
push
pop
inc
mov
lahf
mov
or
daa
mov
sub
idivb
sub
pop
push
mov
scas
sar
cmp
sub
bound
jp
lcall
es
sub
cmpsl
mov
sbb
cmp
popa
jle
stos
sub
pop
cli
mov
dec
arpl
pop
sti
mov
jb
or
imulb
adc
dec
mov
stos
mov
pop
pop
inc
bound
subb
mov
push
sub
pop
push
mov
mov
out
cmp
sub
pop
dec
jp
aas
sahf
sub
or
mov
cs
popf
in
cmp
aaa
cmp
and
dec
call
and
pop
cmp
jecxz
movsl
jb
inc
push
cmp
incb
adc
cs
sub
mov
repz
pop
aaa
ds
dec
dec
jp
xchg
pop
mov
fwait
push
mov
pop
or
cmp
sub
or
inc
jb
mov
or
or
cmp
sub
xchg
repz
pop
aaa
ds
dec
pushf
jl
lcall
sub
or
movl
add
sub
sub
sbb
cmp
cmp
cmp
sub
pop
cs
mov
pop
sub
repz
mov
mov
cmp
sub
pop
es
iret
push
xchg
cs
cmp
sub
pop
cli
mov
sbb
mov
iret
sub
pop
adc
iret
push
xchg
cmp
sub
add
ljmp
sbb
repnz
ds
cmpsl
mov
add
sub
jle
cmp
push
out
ret
xchg
sub
or
lds
lret
inc
inc
xchg
or
cs
cmp
sub
sub
or
pop
inc
mov
orl
mov
faddp
mov
jno
xor
and
out
inc
cmp
pop
lcall
sbb
imul
or
xor
mov
jmp
cmp
decb
xlat
sub
enter
or
inc
ss
adc
mov
or
data16
jl
adc
mov
scas
cmp
sub
pop
push
mov
xchg
ja
cmp
add
dec
jno
sbb
fbstp
aam
dec
cmp
xor
outsb
add
rorl
jae
xchg
or
adc
mov
pop
mov
outsl
out
iret
das
dec
dec
ret
mov
loope
jne
mov
fdivr
shr
adc
xor
aam
dec
jo
lret
pop
add
int3
lds
cmp
insb
sbb
into
or
cs
dec
adc
xchg
xchg
jp
enter
pop
rcll
jb
fists
push
dec
aas
push
fnstcw
mov
pop
xlat
sbb
dec
rol
jl
sbb
mov
pop
jle
imul
in
jbe
scas
sub
ljmp
dec
cmp
xor
jns
enter
arpl
dec
mov
cmpsl
jmp
out
mov
jle
cmpsb
xor
xchg
jecxz
mov
and
push
in
push
pusha
inc
dec
jp
orb
mov
dec
or
fisubrs
dec
ds
push
pop
int
jle
movsb
dec
and
aas
pushf
push
adc
inc
mov
std
mov
dec
and
jae
arpl
gs
pop
or
test
adc
daa
iret
push
imul
sub
test
push
mov
fwait
inc
sbb
xchg
pop
xchg
fists
jmp
lret
push
adc
out
aaa
push
cwtl
or
subl
aas
pop
jo
repnz
je
xlat
dec
sti
incb
sbb
fimuls
xor
jmp
xchg
into
sbb
push
cmovg
faddl
aam
push
pop
and
sbbl
rolb
aas
mov
ljmp
lret
add
cld
je
xor
sti
in
dec
jge
addr16
sub
outsb
push
fsubrs
bound
xchg
mov
pop
xchg
mov
jne
dec
or
xor
or
mov
dec
pop
mov
int
dec
push
sbb
fcoms
jno
popf
sub
mov
lahf
mov
add
sub
xlat
out
sbb
dec
jg
lcall
out
in
mov
hlt
cmpsb
push
in
dec
repz
dec
mov
lret
mov
add
sub
sbb
push
dec
out
xor
cmp
sub
adc
dec
cli
cltd
jnp
or
mov
lock
inc
dec
pop
cmp
mov
dec
and
adc
dec
setns
hlt
stc
xor
adc
add
addr16
xor
filds
dec
mov
or
ljmp
out
dec
and
pop
dec
mov
aaa
push
pop
dec
sbb
popl
xlat
pushf
jbe
lock
cpuid
movsl
mov
adc
pop
cld
stc
pop
fwait
mov
cltd
lret
iret
or
mov
rep
pop
and
and
sbb
cwtl
fimuls
mov
jle
repnz
repz
test
xor
push
sbb
cmp
dec
adc
sub
outsl
icebp
sub
inc
dec
dec
cmpsb
fs
lds
dec
adcl
adc
add
or
ljmp
and
jne,pt
jbe
cmp
fs
outsb
add
fistl
stos
std
add
adc
pop
int
movsl
loope
cmp
dec
pop
xchg
push
pop
mov
jns
pusha
das
mov
subl
mov
or
mulps
jbe
xchg
adc
and
pop
scas
stos
fisttpll
push
xor
adc
inc
out
dec
stc
pusha
add
out
shlb
lods
imul
int3
jl
push
je
mov
sub
adc
pop
dec
imul
outsb
orb
dec
and
jno
movsl
mov
out
push
or
xchg
dec
popl
xor
sub
lahf
div
lods
lods
dec
mov
lds
loopne
mov
adc
dec
jno
sub
add
dec
lret
sarl
inc
iret
inc
push
jecxz
outsb
lods
sub
push
js
out
cmovle
xchg
push
rorb
loopne
imul
int3
div
xchg
call
pop
adc
sub
out
mov
dec
push
push
scas
xacquire
ss
and
jae
sub
mov
inc
test
inc
arpl
mov
in
and
mov
jne
test
dec
sti
scas
cwtl
das
dec
adc
add
outsl
out
push
mov
adc
mov
dec
movsl
mov
adc
dec
xchg
pop
or
mov
not
jb
lods
movsb
mov
sub
rorb
call
cmp
ja,pt
dec
mov
pop
dec
mov
enter
cli
cld
mov
outsb
jbe
dec
or
add
std
sbb
pop
mov
mov
inc
arpl
mov
dec
mov
xor
pop
inc
sbb
mov
dec
sub
out
mov
push
iret
xchg
sub
cmpsl
dec
out
jnp
int
cli
aam
pop
cltd
inc
xorl
dec
test
cmc
outsl
dec
xlat
sbb
stos
shll
dec
or
popa
xlat
inc
imul
into
jo
mov
cmp
xchg
mov
mov
dec
inc
dec
lahf
int
fdivl
aaa
dec
ds
das
sub
jmp
jnp
ss
push
sqrtps
dec
mov
pop
dec
inc
mov
adc
movsb
jmp
push
scas
sub
xor
out
sbb
dec
pop
sbb
ret
out
pop
fisttpll
xchg
mov
dec
jg
inc
push
insl
pop
shll
mov
int
pop
popa
sub
mov
lcall
dec
lcall
loope
add
dec
and
cld
arpl
pop
cli
dec
inc
push
outsl
xor
push
mov
gs
repz
xchg
dec
es
xor
pop
dec
inc
cmp
cmp
cwtl
gs
jl
nop
inc
insb
and
xor
or
sbb
dec
dec
xlat
push
lock
data16
std
lahf
mov
shll
sbb
dec
add
mov
stc
xchg
adc
mov
sub
ficoms
test
js
stos
ret
inc
dec
cmpsb
out
into
outsl
mov
dec
lea
mov
inc
sahf
ss
mov
and
dec
sbb
out
fs
in
push
mov
out
jecxz
xchg
cmp
dec
into
fmull
cmpsb
in
jne
addr16
sub
fidivrs
mov
out
dec
pop
test
dec
insl
ja
out
mov
mov
mov
push
imul
cmp
add
jl
pushf
mov
inc
roll
sbb
mov
scas
inc
int
jmp
add
lret
sahf
inc
nop
xchg
jo,pt
dec
cmp
popa
popf
xor
imul
inc
movl
xor
mov
inc
cmp
or
xchg
dec
insb
mov
ror
lret
sbb
mov
push
mov
int
and
ja
scas
jp
or
mov
daa
inc
pushf
dec
clc
mov
mov
aad
cs
aam
xchg
push
inc
mov
out
cmpsl
imul
mov
int
dec
in
pop
fdivrs
ss
dec
push
sbb
stos
push
sub
push
in
imul
pushl
and
imul
adc
cmp
shr
enter
divb
pop
mov
imul
push
sbbb
pop
dec
fwait
mov
fisttpl
add
iret
mov
lds
adc
dec
mov
rorb
ss
js
sbb
push
xor
pop
repnz
dec
dec
mov
pop
dec
adc
pop
ficoml
rcll
leave
xchg
mov
pop
sbb
adc
jb
insb
sbb
or
push
jp
daa
dec
or
mov
pop
xor
lds
mov
test
mov
lock
out
lds
ficompl
sar
ss
arpl
cmpsl
mov
cmp
cwtl
mov
and
pop
sub
cmc
push
outsl
push
scas
jnp
ficoml
rol
into
mov
out
repnz
dec
imul
cmpsb
jecxz
inc
gs
sub
xor
mov
rorl
fsubrl
sub
testb
insb
fbstp
dec
push
pop
jbe
push
incl
testb
ljmp
cld
pop
daa
sbb
nop
dec
lret
fucompp
loope
stc
pminsw
dec
fidivrs
jae
ret
mov
xor
mov
jg
pop
mov
dec
ret
add
jae
pop
pop
out
jae
movmskps
xchg
dec
cmpsl
cmp
dec
in
adc
mov
pop
xor
or
inc
inc
cmp
inc
adc
popf
dec
pop
cmp
insb
adc
sub
pop
xorl
fbstp
xchg
out
add
push
pop
clc
pop
dec
adc
push
inc
inc
xchg
cmpsl
movsl
mov
or
idivb
dec
outsb
xor
add
inc
add
or
stos
mov
pop
icebp
out
dec
cmp
test
loope
push
mov
or
call
rcll
daa
in
push
or
fistps
scas
dec
xor
cmp
pop
xor
cmpsb
push
xor
inc
mov
dec
aad
loop
pop
imul
push
mov
dec
out
fadd
xchg
test
aam
movsl
xor
push
dec
aaa
das
fsts
xchg
xor
mov
je
adc
stos
pop
mov
das
dec
mov
out
lahf
negl
cmpsb
aas
shrl
mov
sbb
dec
vandpd
lea
pop
rorl
das
dec
test
add
rcll
ljmp
aas
mov
push
into
mov
fisttps
inc
jmp
inc
push
cs
je
outsl
pop
xchg
jmp
insb
int3
adc
xchg
test
xor
icebp
push
sbb
xchg
cmp
testl
cmp
cmp
jne
test
jecxz
dec
out
mov
dec
jbe
push
mov
and
inc
push
in
dec
ljmp
dec
lahf
xchg
cmp
xchg
mov
xchg
iret
sahf
mov
jns
stos
gs
dec
xor
xchg
add
shlb
decb
and
pusha
xorb
dec
lds
pop
fistpll
aam
fwait
scas
cmp
inc
xchg
sbb
jne
xor
pop
pushf
scas
jno
mov
and
push
mov
mov
dec
rorl
outsl
pop
outsl
shr
rcr
dec
outsb
call
fildl
subb
add
insl
sub
fistps
push
sbb
aaa
popf
dec
shll
frstor
clc
mov
inc
fsubrl
xor
dec
xchg
or
call
stc
ds
int
jnp
jo
push
pop
data16
in
loop
into
xchg
cs
shrb
adc
pop
push
or
mov
xor
xor
sub
out
sbb
dec
cmp
jne
je
cmp
cmp
pop
test
dec
and
dec
and
fimull
inc
dec
xor
insb
jl
in
pop
sub
out
pop
push
sub
dec
and
xchg
or
inc
gs
dec
jno
cs
mov
addb
mov
outsb
push
push
das
pop
dec
fstl
test
dec
pop
lret
popf
lock
cmpsl
repnz
es
bound
into
xor
fldt
mov
and
repnz
dec
ja
ret
aam
mov
or
dec
jns
cmp
mov
cmp
shll
subb
xor
sub
cli
std
dec
andl
xor
imul
std
pop
mov
cmp
xchg
in
adc
jp
inc
mov
stos
xchg
lods
pop
dec
std
out
jge
jae
cli
aad
sub
out
push
test
out
jnp
mul
and
int3
pop
sub
fisttps
inc
dec
mov
or
jae
cmp
or
insl
dec
inc
jl
pop
imul
pusha
iret
into
loop
jae
dec
adc
and
das
sub
imul
mov
jae
fisttps
jno
cmp
jg
out
or
push
push
sbb
jbe
repnz
jge
inc
mov
jno
pusha
pop
dec
out
aad
adc
mov
dec
adc
sbb
inc
pop
ljmp
jp
dec
xchg
std
in
jg
jo
dec
sub
xchg
lea
dec
pop
mov
sub
in
fs
outsb
mov
dec
jns
mov
mov
dec
push
cmp
jmp
lock
scas
dec
int3
mov
push
idivb
orb
iret
mov
add
dec
leave
test
stos
jns
adc
xor
test
inc
inc
pop
lods
call
and
dec
fmul
stos
mov
xchg
jle
dec
xor
fldcw
addr16
lock
pop
stos
sub
mov
mov
or
fs
push
fists
adc
iret
push
lahf
cmp
pop
or
lds
les
clc
mov
and
lcall
inc
lods
fldlg2
mov
dec
addr16
jne
leave
or
mov
into
cmp
iret
push
mov
push
loope
dec
rolb
lods
or
xchg
pop
xor
inc
ss
sbbb
aam
shll
shll
aas
xlat
test
rcll
xor
mov
dec
jae
mov
nop
cmp
dec
fsubr
sahf
roll
js
repz
xlat
push
dec
push
jle
loopne
mov
nop
mov
cmpb
push
dec
mov
mov
jge
pushf
dec
sbb
inc
pop
dec
add
insl
pop
cwtl
ds
fwait
mov
movb
or
jb
inc
aaa
std
add
xchg
xor
sub
mov
out
stos
out
add
mov
dec
mov
fmull
test
push
pop
cmpsb
mov
fadds
enter
xchg
sti
jnp
jne
xor
in
movsb
inc
dec
fmulp
pushf
adc
xor
rcll
xor
mov
fwait
and
popa
je
adc
xor
adc
imul
scas
sub
adcl
out
dec
mulb
into
push
pop
stos
dec
jmp
cmc
add
and
dec
mov
ljmp
pop
in
pop
xchg
ret
pop
cmp
icebp
fwait
adc
cs
jae,pt
lret
jge
pop
dec
xchg
negb
es
and
cmpsl
hlt
inc
mov
gs
xchg
addr16
dec
sub
lret
dec
push
nop
mov
dec
fnstcw
dec
js
mov
dec
insb
in
cli
ror
pop
jne
pop
mov
pop
stos
stc
jmp
adc
dec
and
dec
imul
dec
pop
dec
scas
mov
andl
stos
inc
fdivs
lods
scas
or
inc
inc
xchg
mov
aas
mov
scas
mov
orb
out
cltd
mov
lahf
pop
lods
push
data16
pop
insl
out
dec
push
inc
ret
and
arpl
dec
mov
mov
jecxz
mov
stos
mov
dec
mov
rol
inc
xor
jge
int3
cmp
xchg
dec
mov
into
rclb
in
mov
icebp
inc
dec
mov
cmpsl
imul
adc
lea
pop
inc
out
or
or
dec
inc
bnd
inc
and
cmp
stos
pop
push
es
fcmovu
dec
add
loope
mov
sub
dec
outsl
adc
out
into
add
adc
sbb
or
popf
and
inc
insb
nop
jnp
pop
mov
repnz
mov
or
outsl
out
push
sub
inc
imul
cmp
repnz
mov
loop
jp
insl
repz
scas
dec
push
push
test
outsl
loop
or
daa
mov
jno
popa
sub
iret
pop
out
pop
int3
sub
pop
insb
sti
test
or
xchg
mov
pop
fcoml
repnz
dec
sub
jle
test
js
outsl
data16
out
sub
aam
add
push
sahf
xchg
test
mov
es
enter
mov
sub
xor
dec
testb
mul
cs
dec
nop
dec
sbb
int
lods
sub
lods
xorb
rcrl
aad
and
adcl
dec
cmpsl
cmc
pusha
movsb
aaa
filds
adc
mov
adc
aas
aad
xor
jg
mov
inc
and
cli
repz
aad
adc
movsl
mov
das
sahf
inc
sub
in
pop
dec
jp
and
dec
loopne
xor
pop
mov
cmp
test
mov
leave
dec
orb
sahf
sbb
mov
mov
in
sub
cmp
pop
ljmp
mov
mov
adc
mov
popa
xchg
sahf
call
dec
cmc
notl
lret
pop
mov
xor
pop
mov
cmp
sbb
addr16
daa
sub
fstpl
pop
loope
stos
fildll
jle
dec
push
fs
nop
jge
fisubrl
divl
in
cmpsl
cmp
dec
fldenv
sbb
fimuls
hlt
cmp
cmc
test
sub
mov
rorl
adc
dec
mov
insb
dec
cwtl
pop
popa
sub
data16
icebp
mov
push
ficoml
and
cmp
dec
sahf
dec
push
pop
xor
xchg
lret
adc
jle
setns
xchg
xor
dec
dec
inc
mov
xchg
into
dec
sub
jle
xchg
inc
in
jae
sub
sbb
adc
inc
jge
inc
mov
out
dec
jp
clc
mov
lods
inc
mov
fimuls
sbb
ficompl
or
popa
aad
dec
xchg
mov
jno
rcl
jg
sbb
sbb
xlat
push
push
into
ffreep
inc
icebp
inc
mov
adc
xchg
dec
insl
push
movl
dec
jo
sub
mov
das
xor
dec
imul
and
pop
addb
dec
notb
es
pop
into
popa
dec
shl
mov
and
jns,pn
sbb
cmp
sub
xor
ror
dec
inc
and
jo
cli
jp
add
add
xor
shlb
inc
push
mov
scas
std
xor
popf
jae
dec
mov
push
fistl
fidivrl
scas
adc
je
sub
aas
fmulp
dec
push
pop
inc
pusha
jecxz
mov
outsl
js
rol
jb
test
dec
jmp
sub
fbstp
jbe
cmp
jl
mov
mov
pop
dec
bnd
shrl
inc
outsb
insl
or
inc
lock
add
pop
pop
stos
mov
add
mov
sub
ljmp
stc
call
fdivl
fistpl
add
clc
dec
inc
adc
cmp
out
push
dec
pop
add
jmp
mov
jbe
outsb
mov
mov
xchg
sbb
xchg
or
cs
cmp
lret
mov
push
neg
dec
call
sub
outsl
orb
inc
dec
in
cmp
leave
fimuls
lahf
jmp
xchg
es
dec
xorl
into
pop
daa
sub
cwtl
dec
mov
pusha
negl
clc
dec
push
xorl
cld
movsl
dec
daa
xchg
inc
dec
dec
mov
or
mov
xor
fisubl
mov
mov
pop
cmp
stos
dec
mov
lcall
jne
xor
pop
test
lret
add
out
mov
bound
dec
add
movsb
enter
test
out
xor
cmp
inc
iret
mov
pop
fdivl
cmp
push
in
dec
and
push
jb
sub
inc
xchg
dec
sahf
insb
sbb
push
add
push
stos
pop
dec
pushf
mov
jp
movntps
sub
in
out
leave
daa
scas
inc
popf
sub
test
cmp
lods
or
pop
jmp
sbb
dec
shlb
shl
lahf
sbb
mov
push
es
pop
scas
xor
imul
int
jns
xchg
fists
rorb
xorl
sub
fistps
push
adc
daa
gs
ds
mov
push
lret
movsb
mov
xor
add
cmp
dec
mov
xchg
pop
enter
or
jo
aas
in
fs
out
dec
ljmp
dec
decb
or
jmp
or
xlat
fnstcw
les
outsl
xchg
push
cmpsb
mov
pop
aaa
add
enter
mov
mov
pop
fildll
cmp
popa
std
lods
lret
sbb
dec
fsubrs
repnz
fiaddl
outsb
outsl
subl
aad
stos
imul
stc
sbb
movsb
shlb
jp
js
sbb
dec
and
scas
cmp
add
pop
fldt
mov
cwtl
or
jb
pop
dec
bound
arpl
sbb
sub
cmp
sub
mov
inc
pop
sbb
and
dec
sahf
sub
inc
adc
fwait
aam
pop
xchg
jo
cmc
push
cmp
jae
aaa
add
xchg
aad
add
out
cltd
mov
mov
inc
aam
arpl
mov
pushf
gs
scas
test
lret
xchg
outsl
aas
dec
popf
lea
mov
xchg
and
addr16
push
mov
int
or
pop
pusha
cmp
orb
rorb
int
xchg
ret
idivb
loopne
ret
dec
push
out
icebp
and
js
inc
mov
movsb
into
leave
or
dec
push
enter
xor
or
dec
add
xchg
in
iret
mov
adc
push
mov
enter
push
lock
mov
sbb
das
es
or
xor
pop
xchg
jp
cmp
pop
xor
pusha
mov
push
pop
dec
incb
xchg
dec
lods
lret
dec
repnz
adc
jae
inc
nop
std
dec
xor
shl
sub
mov
and
adc
mov
fmull
mov
mov
push
jae
inc
xchg
mov
ja
mov
pop
xchg
mov
mov
dec
shlb
loopne
nop
hlt
fnstenv
cli
test
adc
pusha
fstp
jp
mov
inc
lahf
jge
and
arpl
loopne
movsb
test
in
ret
dec
call
addr16
mov
mov
push
sbb
xor
dec
inc
pop
data16
dec
mov
inc
dec
pop
fidivl
xchg
fnstcw
iret
xor
push
jmp
dec
xchg
sbb
cli
push
les
repnz
or
fsts
cmp
inc
pop
push
test
sub
outsb
mov
inc
les
dec
dec
in
in
scas
mov
stos
je
pop
lods
mov
shl
sub
jns
pusha
mov
imul
out
or
pop
testb
loopne
jecxz
gs
add
jle
xor
bound
nop
lock
mov
stos
fstpl
scas
cmp
std
push
fcoml
mov
mov
lds
push
aam
pop
ja
dec
dec
push
cli
data16
das
movsl
push
dec
dec
xchg
or
faddp
xor
js
iret
or
mov
lcall
mov
ret
pop
leave
xchg
orb
ja
sub
mov
xchg
dec
je
dec
dec
cmp
xchg
dec
pop
mov
loop
lea
add
sbb
popf
dec
imul
test
sub
inc
cwtl
cmp
lds
jecxz
insb
cs
popf
pop
les
divl
dec
movsb
xchg
pop
cwtl
xchg
imul
fwait
inc
lock
fcomi
dec
js
add
mov
jl
or
mov
mov
lahf
clc
push
pop
xchg
mov
dec
fbld
fwait
or
sahf
mov
and
inc
subl
clc
inc
cmp
cs
rorl
sub
inc
push
movsl
out
lea
jp
jo
cmc
jmp
out
jns
mov
out
dec
jb
and
push
dec
inc
aad
int3
sbb
push
dec
inc
xor
insb
cmp
lahf
mov
lret
adc
sub
lret
sbb
gs
scas
mov
popf
dec
sahf
gs
sbb
repz
in
xchg
xor
mov
dec
mov
inc
adc
imul
dec
mov
add
mov
daa
dec
lret
clc
mov
jae
in
fistpl
inc
pop
lock
repz
movsl
fsubrl
cmp
mov
mov
aaa
repz
sub
adc
dec
sarb
pop
in
add
or
testl
negl
cli
push
fwait
dec
dec
lea
paddb
icebp
mov
out
xlat
or
test
ljmp
sahf
pop
cmp
mov
outsl
cmp
dec
cwtl
fs
aas
pop
lret
scas
inc
nop
scas
inc
lret
push
into
testl
in
inc
sub
adc
out
lock
int3
pop
push
dec
push
dec
jl
mov
push
nop
mov
add
jmp
and
xor
decb
ret
flds
filds
lahf
mov
pop
rorb
fstpt
dec
mov
sbb
pop
int3
cmp
aam
dec
out
fs
dec
popa
or
jne
in
out
or
mov
mov
jno
in
xchg
pop
and
jmp
out
data16
test
cmp
aas
inc
push
push
pcmpgtd
vpmacswd
shlb
repz
dec
gs
mov
dec
sub
call
jmp
insl
bound
lret
and
mov
cmp
cmpsb
fst
or
jmp
mov
les
xchg
aam
daa
mov
inc
icebp
faddl
push
outsl
cmpsl
inc
lret
das
js
movsb
ss
push
out
xorl
fcoml
inc
lcall
inc
shlb
insb
cltd
push
cmpsb
ret
lock
push
das
fwait
dec
jmp
sub
lea
xchg
pop
dec
jmp
sub
dec
rcl
stos
cs
ljmp
or
xchg
clc
lcall
xlat
int3
stos
dec
push
pop
sahf
adc
fs
jns
iret
jp
aaa
add
inc
xor
xchg
push
subl
cmp
mov
sahf
sub
dec
and
ds
insb
outsl
int3
dec
dec
popa
mov
cs
iret
jl
adc
dec
add
xchg
mov
fisttps
nop
cltd
sub
dec
out
or
adc
mov
xor
insl
dec
xor
and
dec
add
ds
or
outsl
mov
push
repnz
jg
inc
ja
subb
dec
jno
push
mov
mov
sbb
cmp
mov
stos
xor
dec
sub
jbe
sbb
push
adc
inc
jne
jnp
jmp
loopne
dec
xchg
adcl
mov
int
rcrl
out
ljmp
cmp
aaa
pop
jl
mov
push
stos
dec
dec
jns
int
pop
dec
push
jno
xchg
push
test
add
mov
ret
rol
push
mov
push
dec
xor
push
push
sahf
jg
adc
test
adc
iret
loopne
mov
in
dec
push
mov
push
mov
add
iret
add
jp
out
mov
ljmp
sub
pmulhuw
daa
lds
push
clc
mov
outsl
push
cmp
out
outsb
cmp
dec
rcrb
xor
orl
inc
push
dec
dec
and
xor
arpl
mov
mov
daa
test
lahf
and
pop
dec
add
xor
dec
push
iret
rcrb
cwtl
jp
mov
loop
cmp
dec
mov
cmp
and
out
mov
dec
lea
ja
call
cmp
xor
mov
orl
inc
arpl
cmc
insb
xlat
adc
mov
inc
mov
jnp
lret
or
push
mov
out
push
xor
ret
outsl
and
cltd
lods
js
jp
and
xor
sbb
movsl
sahf
mov
sti
popf
or
or
insl
jp
add
xor
xchg
adc
cmpsl
xchg
jb
pop
imull
mov
adcl
fnstcw
mov
sbb
or
mov
daa
or
lea
pop
xchg
mov
mov
out
aad
aas
jns
ja
inc
adc
pop
xlat
mov
mov
icebp
adc
push
adc
not
add
xchg
leave
push
outsl
lahf
xor
fldcw
fdivrs
sub
sbb
repnz
mov
lret
imul
push
pop
xor
push
aam
sbb
pop
sbb
pop
shlb
ficompl
sub
mov
aam
in
xchg
inc
mov
mov
xor
sub
add
pop
fildll
mov
jp
ljmp
mov
cmp
lds
outsl
fwait
scas
mov
nop
push
sbb
mov
in
xor
mov
hlt
lds
test
push
sub
test
aaa
testl
push
repz
mov
lock
or
pusha
test
sti
fisttpl
push
adc
and
sub
pop
push
and
lea
cmp
cmc
xor
or
cs
in
mov
stc
fdiv
and
sub
mov
inc
or
aas
dec
int
lods
pminub
push
mov
sub
in
adc
jl
ss
clc
pop
inc
cmp
mov
mov
repz
mov
in
insl
std
call
sbb
push
inc
stos
add
jle
lods
imul
mov
in
aaa
sbb
fs
leave
bound
cmp
push
fmuls
mov
jecxz
test
das
sub
lods
cwtl
scas
mov
jno
je
adc
xor
dec
inc
and
stos
push
pop
sub
notb
mov
sbb
lea
jbe
jmp
inc
push
cmc
push
stc
shr
movb
jmp
call
or
push
lea
je
neg
sub
pusha
xor
rol
mov
clc
xchg
sub
mov
shr
shr
lea
bsf
shrd
shl
mov
cmp
pusha
test
test
or
push
lea
je
movsbl
bsr
movzbw
add
btr
bsr
lea
sub
jmp
push
xchg
ds
inc
mov
fistl
ror
adc
mov
daa
repz
cmp
mov
add
adc
dec
push
cmp
dec
mov
sbb
mov
xchg
das
jmp
aam
sbb
int
xchg
jle
imul
into
leave
jge,pt
push
aam
mov
ja
ret
aaa
in
les
adc
dec
test
push
call
jmp
int3
sub
mov
sti
aas
mov
push
test
loope
fs
cmp
jecxz
mov
lahf
pop
int3
fistpll
ja
or
inc
out
or
cmp
rorl
int
ja
sub
lret
lcall
out
loopne
mov
cmp
jo
lret
out
ljmp
xchg
imul
xchg
adc
and
es
or
dec
fld
not
mov
dec
jmp
or
add
pushf
lea
jmp
test
test
inc
mov
or
pop
ljmp
mov
fnsave
testb
iret
xor
pop
push
push
sbb
pop
inc
sbb
cmp
xchg
sti
mov
dec
mov
cs
jns
mov
xchg
xor
fistps
leave
test
sub
stos
aad
cmp
push
jb
shlb
xchg
out
mov
lret
adc
cltd
push
test
in
lea
testb
movsb
outsb
imul
mov
movsb
and
aam
mov
adc
sbb
mov
or
sub
clc
insb
jno
xor
clc
xchg
jp
adc
je
sar
repz
stc
mov
cmp
das
loopne
lods
imul
in
aam
shll
inc
and
xchg
mov
jne
push
pushf
jmp
test
bt
or
pushf
lea
jne
bt
stc
ror
mov
call
call
adc
or
cmpsb
insb
xchg
mov
arpl
dec
flds
xor
jge
cmp
sahf
jne
or
mov
mov
fnsave
adc
clc
int3
or
cmp
dec
xchg
or
daa
test
subb
filds
inc
dec
or
jle
add
test
ds
scas
in
dec
int3
add
cmpsb
pop
mov
xor
dec
cmp
cmp
jmp
repnz
call
lods
int3
jp
inc
mov
xchg
dec
addb
stos
pop
sub
push
add
roll
or
insl
dec
imul
mov
mov
or
add
pushf
xchg
jnp
pmulhuw
mov
inc
xor
fstl
jb
frstor
insl
mov
lock
ja
cmp
push
jg
push
ljmp
sub
ret
xor
mov
shr
shll
mov
mov
iret
das
ss
pop
sub
fucomi
ljmp
cmpsl
and
cli
rorb
aam
clc
inc
push
xor
sbb
sahf
and
scas
sub
add
sbb
loop
fisttpll
ret
sub
and
cmc
and
cli
outsl
pop
cmp
and
jo
test
dec
std
rcrl
scas
aaa
cwtl
jle
fdivp
mov
inc
cmp
jb
test
jge
and
in
push
shl
js
je
stc
add
clc
jmp
mov
clc
inc
mov
mov
pop
pop
mov
add
push
push
cmp
sub
pop
cld
sbb
shrl
negb
add
lcall
or
out
shrb
mov
in
inc
pop
insl
ds
xchg
cmp
jecxz
jge
dec
stc
push
aas
adc
sbb
mov
fsubp
in
lret
xchg
cmp
outsb
dec
sub
cmp
adc
mov
lcall
xlat
push
enter
std
jns
movsb
in
dec
clc
stc
inc
mov
push
xor
cs
addr16
imul
jns
and
xchg
mov
jg
mov
mov
arpl
loope
ffree
or
jmp
or
adc
rcrb
or
add
jle
incb
test
mov
inc
cmpsl
fsub
mov
jnp
aad
scas
inc
sarl
adc
lods
bound
inc
mov
and
test
jnp
and
pop
dec
mov
test
inc
mov
adcl
mov
or
in
popw
add
das
xor
adcl
mov
xor
and
and
imul
jnp
mov
pop
sub
mov
aas
mov
sbb
xchg
shlb
loope
and
cmp
out
mov
mov
pushf
mov
push
push
jp
sub
arpl
test
pop
mov
fildll
and
jne
jmp
lahf
sub
cli
inc
mov
ja
and
push
popf
jmp
mov
xchg
lds
mov
jbe
sub
aam
aas
dec
push
sub
in
sub
xchg
push
insb
jle
or
pop
in
sarb
call
add
fistps
fisttps
imul
faddp
ljmp
or
loop
imul
rcrl
mov
sub
dec
lds
pop
pop
cmp
sub
push
xchg
cmp
arpl
scas
add
aam
sbb
rorb
sbb
sar
lea
cmp
mov
jecxz
testl
outsb
pop
stos
std
pop
pop
das
mov
push
adc
lods
roll
xchg
mov
jecxz
movsb
sub
xor
xchg
xchg
jae
adc
xchg
add
xor
add
lahf
sub
clc
mov
sti
inc
mov
mov
push
aad
in
add
in
sti
ficomps
push
lods
inc
fs
jae
cmp
sarl
sub
test
insb
sbb
inc
aam
cmpsl
aam
std
add
adc
in
pop
cwtl
sub
mov
xchg
jecxz
les
fistpl
push
fldl
adc
mov
js
enter
sub
xchg
rcr
inc
inc
in
inc
jae
int
push
xchg
dec
ret
jecxz
mov
fwait
test
ret
in
or
sbb
nop
mov
les
mov
jge
icebp
pop
aad
add
jb
ljmp
jp
jnp
xchg
push
dec
out
je
inc
movsb
pop
pop
or
arpl
or
xchg
mov
lret
js
adc
addr16
lret
fistps
xchg
jnp
daa
popf
xor
mov
sbb
and
dec
xor
mov
clc
mov
loopne
test
pop
cmpsl
mov
push
push
jl
push
push
jne
movsb
jp
mov
dec
in
sub
jge
add
cmp
mov
repnz
adc
mov
pusha
divl
dec
imul
pop
dec
in
cld
inc
mov
pop
mov
shll
pop
push
xor
les
jae
push
int3
mov
fldcw
jmp
mov
cmc
loop
cs
lret
aam
mov
test
jo
mov
or
addl
enter
mov
sub
test
sbb
push
jb
cltd
insl
jo
int3
rcrb
mov
clc
jecxz
mov
sub
inc
sub
inc
ss
loopne
ss
leave
mov
and
mov
pop
ret
rcll
test
stos
out
in
cltd
gs
lahf
das
iret
int
sub
test
int
je
add
or
pop
outsl
cmp
out
sub
mov
in
stc
shrb
das
popa
xor
inc
xor
lret
aam
push
jecxz
push
aam
fstl
jl
pop
and
addr16
test
jnp
sub
negl
cmp
mov
add
divb
ret
cs
out
pop
cmpsl
xchg
mov
push
pushl
ret
lea
ja
cmp
pushf
sub
sar
add
add
shld
and
pushf
mov
stc
mov
clc
pushf
pushl
cmc
repnz
movb
pushf
lea
jne
lea
cwtl
not
push
movb
pushl
jmp
mov
mov
xor
dec
cmpsl
jge
mov
mov
addr16
arpl
or
jo
inc
dec
jns
or
sub
push
cmp
int3
pop
pusha
roll
or
call
jae
dec
arpl
mov
mov
mov
cli
inc
es
mov
xchg
pop
lcall
iret
stos
out
aad
stos
push
fs
pushf
fcomps
popa
and
jle
xlat
pop
jne
mov
mov
ja
js
mov
sub
clc
scas
xchg
in
adc
push
ret
pop
xchg
push
in
insb
mov
jmp
pop
nop
incb
mov
cmpsl
aaa
mov
add
jl
cmp
js
cs
push
insl
shll
scas
mov
cmp
pop
pop
mov
push
xor
sbb
test
pop
lods
pop
and
aaa
pusha
cwtl
pop
lds
sbb
aaa
or
push
inc
mov
sub
xchg
or
sbb
out
clc
pop
pushf
aam
sbb
jmp
pop
mov
pop
lret
jo
inc
adc
and
inc
push
add
jbe
mov
dec
cmp
add
mov
add
mov
mov
pushf
pushf
movzbw
mov
bswap
lea
call
pusha
pushf
lea
jae
push
lea
jne
jmp
xchg
loopne
inc
mov
out
sbb
stc
push
jecxz
dec
test
outsl
and
mov
shrl
aas
test
xor
xor
sti
xor
mov
push
movsb
adc
and
sub
sbb
jnp
repnz
aas
lock
cmpsb
sbbl
jge
sbb
sbb
mov
cmp
add
lock
pusha
dec
jns
cmpsb
push
clc
pop
mov
lahf
adc
fmull
inc
hlt
cmpsl
loop
std
lcall
cmc
dec
sub
decl
gs
inc
cmp
cli
aas
lds
inc
mov
jbe
push
in
inc
dec
faddl
js
fwait
mov
imul
xchg
and
sti
out
inc
or
ret
insl
out
sbb
fimull
push
stos
insb
sti
outsl
hlt
adcl
dec
or
fwait
jno
ss
cmc
adc
jp
lcall
pusha
adc
dec
stos
xchg
or
jnp
sub
jg
stos
sub
push
inc
lods
jg
loopne
mov
mov
jb
repz
out
add
or
add
gs
lods
rcr
mov
addr16
mov
popa
lea
je
pushf
pushf
adc
movb
push
pusha
lea
jmp
movl
push
movw
movb
movl
push
lea
jmp
push
pusha
jmp
add
add
push
push
pushf
lea
jne
shrd
movzbw
bsf
mov
stc
call
xchg
gs
inc
mov
xor
adc
xor
insb
dec
mov
sti
scas
jnp
aas
into
push
jb
test
push
rcr
aas
popf
cmp
xchg
mov
outsl
jno
cmovns
mov
lea
mov
lahf
mov
out
sbb
lds
movsl
jp
mov
mov
dec
jb
inc
roll
popa
test
and
jbe
inc
xchg
repnz
cld
xchg
push
sub
adc
xor
xchg
add
jmp
lea
jb
pushf
cmp
jmp
xor
stc
stc
not
cmp
push
xor
stc
sub
bt
cmp
cmp
cmp
not
pushf
pushf
lea
movzbw
cwtl
pop
movsbw
mov
movl
call
xor
mov
icebp
iret
cmc
enter
pop
dec
andl
iret
pop
or
sbb
pop
jbe
pop
lods
fstl
add
xorb
lods
sub
push
mov
scas
jg
push
cwtl
jl
or
fisubs
push
jmp
dec
dec
and
jne
mov
jecxz
loopne
adcb
mov
ja
pop
mov
popf
xor
push
mov
popa
cmp
nop
inc
aad
bts
sahf
inc
fildl
xor
scas
jne
cmpsl
mov
push
shrb
int3
sub
add
jo
fcomip
out
mov
mov
inc
mov
int3
frstor
add
mov
mov
outsb
das
test
cmp
pop
adc
mov
jae
mov
adcl
mov
pop
mov
mov
pushf
sub
cmc
pusha
xchg
hlt
dec
insl
dec
or
mov
lds
jno
inc
and
sbb
push
cmp
add
cli
bound
add
repz
mov
jno
xchg
jge
dec
scas
jecxz
fldt
fsub
inc
cmc
pop
call
ret
mov
xchg
popf
mov
pop
jmp
push
jmp
jne
mov
xor
push
jge
mov
mov
pop
jle
mov
mov
xor
add
int
jecxz
stos
pop
fmuls
pop
repz
lock
mov
pop
jo
pusha
and
mov
loop
mov
gs
xor
push
push
push
or
icebp
adc
in
ja
call
cmc
bound
mov
sbb
inc
rclb
mov
std
or
negl
adc
pop
pop
mov
push
jecxz
jnp
cmpsl
fsubrs
sbb
mov
repnz
jno
pop
enter
stos
xor
fisttpll
or
into
push
fnstsw
adc
pop
push
cwtl
test
ja
dec
outsb
shll
add
mov
mov
jo
lock
xchg
sbb
mov
jg
loopne
dec
add
pusha
pushf
push
pushf
lea
jmp
pcmpeqd
inc
mov
mov
and
pop
cmpsl
dec
xchg
inc
fsub
mov
dec
cmp
cld
clc
dec
fdivr
lds
mov
xor
inc
ja
sub
scas
outsl
push
outsb
idivl
xchg
aaa
popa
adc
fs
testb
push
mull
es
mov
jmp
aas
jg
pop
pop
mov
out
sti
jecxz
xorl
add
jl
xor
xlat
pushl
pop
mov
pushf
movsbw
lea
mov
call
add
inc
gs
bound
arpl
mov
mov
cmp
std
sbb
push
dec
lock
mov
mov
adc
addr16
xor
mov
pop
imul
pushf
adc
add
test
rcrb
push
stos
dec
mov
inc
fadd
mov
sub
addl
imul
sarb
push
insb
lds
pusha
fimull
mov
es
stos
dec
mov
lods
adc
inc
fadd
cmp
sarl
sub
jnp
cwtl
int3
call
hlt
jne
jnp
loopne
mov
fidivrs
push
xchg
mov
outsl
jmp
xchg
push
js
ret
aam
push
mov
add
imul
lds
push
jle
jns
fs
sbb
stos
lret
xchg
and
xor
push
hlt
aaa
test
imul
into
sub
push
jo
mov
jge
cmpsb
or
loope
cltd
into
mov
sbb
out
gs
and
push
loop
notl
aaa
cwtl
or
mov
shl
hlt
in
cmp
sub
push
xchg
addr16
mov
push
popf
mov
cmp
jno
out
xor
or
nop
jge
cmp
mov
flds
fsts
sbb
mov
cmp
and
dec
jmp
mov
xchg
je
in
fcmovne
test
fcmovb
inc
mov
stc
in
mov
push
cmovno
sbb
pop
pop
rorl
mov
scas
sahf
pop
movsb
rep
mov
and
add
pusha
mov
push
cli
lods
mov
test
xchg
adc
jns
sub
lahf
pop
popf
notb
xor
pop
stos
xchg
rcll
jbe
mov
jno
cmp
jp
mov
sub
cmp
sbb
stos
das
push
es
sub
pop
movl
out
stos
cmp
mov
insb
mov
dec
es
push
shrl
into
imul
mov
dec
dec
sbb
or
jg
scas
mov
out
sbb
jge
leave
aad
inc
sbb
fwait
sbb
in
mov
mov
push
lds
inc
test
jno
outsb
adc
mov
fsubrl
pop
movsb
sub
sub
jmp
xor
or
shll
push
shlb
sub
inc
rcrl
mov
inc
jl
jecxz
seto
bsf
mov
btr
pusha
add
test
pushf
shr
sbb
bt
mov
bsf
add
call
lea
call
pusha
push
jmp
movl
movb
pushf
pushf
pusha
lea
jmp
call
jmp
jb
pusha
mov
cmpb
pusha
jmp
pusha
stc
add
jmp
int3
int3
enter
dec
mov
addr16
dec
or
loopne
lcall
sbb
dec
filds
fnstsw
add
sbb
dec
gs
cltd
jg
lret
mov
jo
adc
addr16
ljmp
outsl
xchg
leave
pushf
jmp
ret
add
xlat
lock
xchg
mov
add
sahf
mov
xor
inc
cld
outsl
dec
insl
into
sbb
add
popa
pop
adc
mov
pushf
shrb
dec
or
or
mov
jnp
cmp
sub
frstor
fs
jo
cmpsb
lock
mov
pop
cmp
add
pushf
leave
call
lahf
jo
push
mov
mov
or
xchg
fimuls
pop
jbe
call
xor
or
fbstp
imul
rolb
mov
rolb
sub
in
or
cs
push
pop
jns
fs
rcll
add
pop
ds
rep
fnstsw
bound
pushf
ret
popw
clc
mov
shl
mov
test
clc
cmc
add
pushf
pushl
cmc
pusha
rol
pushf
not
mov
rol
pushf
mov
inc
stc
pushw
popfw
jmp
mov
call
pushf
cmp
jmp
pushf
pushl
lea
jne
lea
mov
pushf
mov
pushf
lea
jmp
jmp
stos
mov
leave
inc
mov
jmp
xlat
xor
mov
dec
jno
pop
call
jns
shr
lock
mov
xchg
dec
add
add
cmp
push
or
lret
pop
mov
adc
fwait
pop
adc
aad
stos
xchg
jbe
lods
cmp
data16
addr16
jl
fsubl
ss
jo
sub
adcb
jbe
push
and
dec
enter
dec
sub
inc
aas
mov
enter
mov
ljmp
aas
insl
out
inc
mov
inc
enter
aad
xor
or
pmulhw
pop
or
int
ucomiss
mov
mov
dec
scas
or
sahf
sbb
mov
in
mov
push
ja
int
into
cmp
xchg
inc
out
and
aas
sbb
push
add
pmuludq
outsl
push
scas
dec
repnz
into
cmp
pushl
pop
popa
cmp
xchg
sub
push
or
push
cmp
xchg
int3
and
adc
cmp
dec
lods
or
cmp
dec
or
jmp
dec
into
subb
out
movsb
and
jle
cmp
daa
lea
jmp
pop
adc
or
in
pushl
cltd
add
dec
add
cmpsb
lcall
lods
shll
cmpsb
hlt
mov
fcomi
decb
mov
push
scas
lret
dec
lods
jl
push
sub
inc
das
in
addr16
mov
inc
aaa
popl
mov
push
mov
dec
out
lret
or
mov
xadd
pop
xchg
inc
test
enter
hlt
daa
or
dec
lods
or
insb
paddq
sarb
push
mov
ret
adc
pop
out
dec
push
jo
push
aas
repz
mov
into
outsl
addr16
jae
mov
cmpl
insb
mov
imul
fbstp
gs
pop
andl
or
jb
rclb
jae
xlat
cmpsl
roll
gs
adc
jge
dec
ljmp
xchg
scas
inc
in
out
sub
push
test
je
arpl
je
xor
stos
xchg
xor
cmpsl
pop
sahf
dec
leave
pop
mov
jae
das
dec
inc
incl
cmp
iret
cmp
jno
mov
jp
ja
pop
lods
ret
jg
lods
es
lea
xchg
mov
dec
sahf
imul
adc
pop
pop
leave
pop
ret
jo
mov
cmp
xor
cltd
pop
ret
mul
xor
cmp
sbb
bound
pop
mov
inc
pop
dec
aas
leave
lret
ret
test
int
xchg
xlat
pushl
xchg
dec
mov
lret
testb
mov
das
add
fdiv
mov
cli
inc
aaa
leave
inc
out
jge
inc
sar
or
pop
inc
jns
mov
dec
jmp
mov
fsubrl
in
xchg
ficoml
pop
scas
int
ret
int3
or
loopne
mov
test
lcall
jmp
sub
daa
xlat
loopne
cmpsl
out
inc
cmp
out
fimuls
test
in
into
mov
call
pop
incb
hlt
mov
out
xor
in
cmpsl
daa
xchg
lret
mov
or
std
daa
cmp
mov
sti
js
sbb
jmp
mov
xrelease
shrb
gs
das
mov
fildll
inc
iret
mov
mov
lret
mov
mov
test
and
lea
inc
or
jno
add
outsl
adc
cmp
and
pushf
mov
testl
mov
lret
xchg
mov
dec
loop
mov
jns
repz
cmp
testb
mov
ja
inc
or
xchg
ja
lds
fdivs
xchg
push
aad
pop
mov
mov
int
mov
add
ficoms
pop
inc
lea
mov
inc
test
adc
pop
mov
das
lods
lock
mov
dec
pop
call
xor
or
mov
and
xlat
fnsetpm(287
jge
push
dec
xlat
shr
push
lahf
fbstp
aaa
dec
mov
and
test
mov
loopne
shrb
in
jmp
fisubl
fmuls
stos
push
ljmp
dec
dec
lds
pandn
pop
test
mov
ja
and
out
push
jo
jp
jmp
cmpl
ret
scas
outsl
gs
mov
sbb
ss
inc
fbld
addr16
xor
jg
or
icebp
xor
mov
mov
dec
mov
push
icebp
imul
lea
call
mov
or
pop
pop
stos
loopne
mov
xchg
loop
aam
sub
xchg
aaa
lret
es
jae
rolb
xor
mov
xchg
pusha
xchg
call
hlt
stos
dec
ficoms
mov
rorl
or
cmp
aam
stos
and
pop
mov
ljmp
sub
dec
scas
lds
sti
ret
jge
scas
ljmp
pop
femms
pop
out
inc
lahf
lock
mov
inc
testb
lret
leave
into
popa
aas
sub
sarb
out
mul
add
mov
out
sub
repz
jp
rol
int3
scas
into
mov
out
out
rcrb
mov
xchg
xor
imul
add
clc
daa
pop
mov
mov
int
call
sbb
testl
sar
inc
out
fistpll
mov
cmp
mov
in
sbb
ss
cmpsb
xor
fsubrs
pop
ret
das
mov
xchg
es
or
jmp
adc
xor
mov
ja
leave
stc
shll
mov
push
cs
sub
filds
imul
mov
test
movsb
pop
sub
inc
lcall
cmp
xor
fistpll
fcmovnbe
mov
fdivl
cmp
lahf
loopne
or
xlat
hlt
dec
dec
jne
fwait
push
ficompl
lret
mov
incl
sbb
scas
jg
jecxz
imul
jp
mov
adc
pop
daa
cld
mov
cmp
or
xchg
das
aaa
aas
lahf
pop
ss
pop
bound
call
je
mov
dec
mov
push
mulb
jo
into
mov
pop
aas
out
shrb
lock
nop
pop
lret
aam
add
into
dec
xor
mov
mov
mov
out
ds
pop
ljmp
lea
cmp
int
lods
in
pop
cmpb
dec
das
ss
pop
out
cmpsb
es
out
or
out
push
add
jae
mov
subl
lcall
maxps
daa
add
add
push
xchg
mov
jge
and
dec
adc
jmp
mov
rorb
gs
add
jmp
daa
imull
or
xchg
dec
push
shlb
movsl
push
dec
int
imul
and
scas
stos
dec
mov
movsl
insb
push
pop
pop
pop
dec
add
mov
jmp
cwtl
rcll
xor
dec
js
sbb
xor
cmp
popa
xor
loop
push
nop
cmp
xor
mov
dec
packssdw
pop
scas
cmp
cmc
std
xchg
es
cwtl
fiadds
push
decl
ret
xor
frstpm(287
cmp
std
cmp
mov
xor
test
call
sarb
lods
mov
mov
add
mov
ja
cmpsb
iret
jp
call
sahf
add
mov
xor
mov
push
mov
rcr
add
rcr
sub
add
add
mov
adc
mov
ret
loope
inc
fistpll
imul
mov
xlat
aad
jecxz
testl
add
mov
adc
push
inc
pop
mov
and
jno
xchg
push
roll
cmpsl
push
add
xchg
inc
push
sbb
cmp
push
mov
ss
scas
mov
scas
daa
lahf
cmp
in
ljmp
pop
xor
ud1
dec
outsl
cmc
int
mov
xor
adc
lds
xchg
ljmp
mull
btc
adcl
jns
negl
jg
mov
fldcw
out
repz
push
loop
jmp
push
pop
ja
jae
out
out
mov
stc
fadds
inc
jge
inc
test
inc
jmp
mov
stos
daa
mov
repz
pop
mov
lds
leave
mov
push
jmp
incb
sub
and
vpaddsw
mov
dec
jne
subb
or
jge
js
test
pop
sub
imul
movsl
mov
jge
int3
push
icebp
pop
push
idivb
xchg
mov
and
sub
xorl
outsl
jne
popf
popa
sbb
daa
cmp
sbb
cwtl
std
ja
pop
inc
or
inc
or
out
and
inc
sub
adc
cmp
adc
mov
test
stc
lock
std
mov
sub
mov
cmp
jbe
out
push
and
fnstcw
xchg
addr16
call
outsl
sub
lods
popa
fimull
push
adc
push
add
jmp
push
jbe
repz
cmpps
testb
mov
nop
out
shlb
pop
cmp
jg
mov
scas
aaa
sub
sub
into
loopne
adc
dec
gs
inc
ss
or
add
ret
cmp
jg
inc
je
xor
mov
cmp
push
or
pop
sub
jne
mov
xchg
inc
addb
mov
xchg
mov
adc
daa
ljmp
mov
daa
aas
mov
sub
mov
pop
aad
scas
movsl
mul
xchg
jl
mov
imul
ret
sub
nop
inc
repnz
jo
pushf
sub
arpl
xor
fisttpl
into
sub
fsubl
dec
movsb
lahf
fistps
xchg
dec
adc
and
into
sbb
in
inc
fwait
inc
int
mov
testl
dec
es
aas
cmp
jp
mov
xor
popa
pop
mov
sub
sub
add
push
add
pop
push
in
xor
pop
jecxz
cld
mov
in
sbb
testb
cmp
pop
add
dec
adc
into
loopne
dec
in
xchg
xor
scas
sub
push
test
adc
mov
fildll
ret
xchg
test
or
cmpl
scas
popa
notl
add
sbb
test
jb
xor
daa
aad
fstpl
out
shlb
fnstsw
scas
leave
ds
xor
sub
dec
leave
and
mov
enter
mov
ret
imul
and
mov
out
enter
xor
ja
pop
sbb
mov
dec
jl
lret
xchg
mov
cmp
enter
pop
xor
jns
sbb
and
fstpl
pop
dec
test
push
ljmp
pushf
inc
inc
xchg
fnstcw
cmp
mov
xchg
push
sbb
lahf
mov
insl
xchg
cmp
or
fdivrl
loop
xor
dec
jmp
push
mov
lea
ret
mov
roll
int
xchg
xor
and
dec
mov
add
push
and
icebp
mov
add
mov
inc
sarb
mov
mov
push
push
das
inc
ss
pop
inc
dec
aaa
cwtl
push
dec
test
jbe
jle
insb
push
daa
mov
adc
jns
and
xorl
dec
pusha
leave
sub
pop
lret
out
sub
pop
sbb
cmp
push
xchg
mov
cs
sbb
outsl
stos
mov
or
xor
adc
fs
dec
in
cld
inc
sub
leave
mov
ss
iret
or
nop
cmc
fpatan
cs
mov
cs
leave
incl
jns
add
xor
inc
roll
xor
mov
out
lahf
lret
imul
jg
out
pop
pop
jne
or
jg
mov
test
lds
dec
adc
sub
add
rsm
cmp
into
xor
movsb
mov
pop
lods
scas
out
iret
stc
sarl
pop
sarl
push
adc
loopne
inc
jle
jae
dec
das
data16
cmp
cmpsl
cmp
cmpsb
sub
repz
jg
xchg
jbe
cmp
imul
int
add
mov
jp
hlt
mov
xor
xchg
sarl
mov
jbe
lea
in
pop
iret
xchg
add
sti
pop
and
gs
imul
imul
pop
movsl
mov
addr16
push
sahf
arpl
out
push
dec
cmpsb
pop
je
push
sbb
dec
mov
movsl
mov
or
xchg
nop
lret
jg
lret
int3
test
jg
sub
fisubrl
imul
add
or
mov
jno
ret
pop
scas
pcmpgtb
cmp
fbld
pop
call
imul
jnp
out
pop
fwait
sarb
jae
inc
ja
les
inc
cmpsl
jno
adc
ds
out
push
arpl
adc
xchg
mov
sbb
das
or
jle
gs
in
mov
in
ret
imul
lret
out
or
sbb
rcrl
push
and
pop
xchg
jns
les
mov
scas
cs
pop
loop
imul
popf
cmp
cs
pop
xor
fidivs
lds
sbb
prefetch
ja
mov
xchg
cmp
imul
outsl
mov
and
jns
movsl
xchg
xchg
fists
mov
test
pop
daa
pop
xor
mov
fldl
jno
test
push
jle
xchg
leave
rcl
fldcw
xor
mov
cmp
imul
rcll
fwait
adc
es
cmpsl
lods
xchg
gs
fdivp
jno
scas
jl
nop
sub
sub
scas
ds
mov
jg
pop
sub
push
das
push
inc
ljmp
pop
cmc
jae
xlat
pushf
lock
aaa
imul
cs
or
lock
insl
cmp
xor
cmp
iret
jl
mov
dec
mov
je
fisttpl
dec
dec
jae
subl
lret
push
ljmp
outsl
ljmp
jle
pop
push
cld
mov
call
insl
gs
mov
sbb
fsubrl
jecxz
es
mov
or
pop
mov
in
jne
pop
fstl
or
xchg
mov
cmp
jle,pt
pop
cmpb
test
loope
or
add
ds
sbb
jg
push
pop
lret
pop
lds
imul
add
pop
lret
sub
pop
cs
flds
leave
scas
mov
xchg
sbb
popf
pop
fwait
xlat
cmove
mov
psubusb
mov
loopne
dec
insb
addr16
add
lds
and
or
and
lahf
mov
inc
mov
jno
jg
setp
pop
add
add
test
cmpsb
iret
mov
imul
hlt
test
cli
into
popa
pop
aad
das
sub
data16
adc
cmp
out
outsb
sub
mov
test
out
jg
jmp
cmp
pop
sub
or
cmpsb
push
out
sub
dec
scas
lahf
add
jge
shrl
xlat
adc
stos
and
and
std
imul
mov
into
int3
cmovne
sbb
mov
outsl
mov
mov
gs
or
imul
sbb
dec
jmp
mov
dec
adc
cmpsb
sbb
cmp
aas
movl
pop
inc
rorb
mov
imul
pop
cmp
std
and
push
aas
test
daa
sub
std
sub
pop
rorl
mov
out
sbb
test
std
ja
sub
sahf
sub
cmp
mov
inc
jmp
dec
fsub
dec
mov
dec
add
rorl
mov
test
cs
outsl
mov
push
mov
push
pop
pop
mov
dec
inc
aas
lret
dec
dec
or
nop
aas
inc
or
dec
adc
push
dec
cmp
pop
int3
or
leave
dec
push
inc
jmp
sbb
in
out
ljmp
xchg
jle
cltd
xor
cs
inc
cmp
into
xchg
adc
jmp
test
sahf
xchg
mov
push
fcmovne
shll
sbb
sub
aaa
into
ja
jg
xchg
popl
xchg
mov
mov
ljmp
sysret
daa
mov
aas
lds
or
inc
pop
mov
cmp
sub
sub
or
dec
out
fisubrs
out
pop
mov
ds
push
pop
cmp
sub
lahf
mov
cmp
das
sahf
cmp
jmp
sti
dec
cli
cli
sub
pop
daa
mov
dec
sahf
xchg
ret
loopne
cmp
xchg
shrd
das
out
dec
push
mov
lcall
push
dec
sbb
test
fwait
js
cli
inc
jmp
dec
pop
cmp
pop
mov
inc
cmp
lret
dec
push
xor
std
dec
dec
xchg
lods
xlat
cmp
and
mov
out
dec
pop
mov
add
jl
jbe
cmp
shrl
dec
mov
stc
dec
ja
seta
repnz
in
inc
inc
into
cmp
pop
and
xor
aas
xor
adc
cs
or
movl
sbb
and
out
outsl
or
xchg
int
dec
mov
loope
ss
sub
fistpll
pop
push
sbb
addr16
sbb
daa
pop
inc
cmp
sub
pop
xchg
push
scas
daa
bound
sub
scas
adc
sbb
xchg
pop
sub
mov
xor
xor
or
das
idivl
mov
pop
pop
sub
pop
aaa
mov
aas
lds
pop
mov
jle
lahf
pop
mov
or
scas
or
sub
pop
mov
mov
aas
pop
fstps
jb
xchg
push
adc
dec
fxch
das
imul
out
cmp
inc
outsb
insb
ja
scas
test
scas
push
iret
dec
inc
push
xor
aas
imull
das
std
leave
inc
or
pop
leave
or
adc
fwait
or
push
dec
out
pop
popf
mov
out
test
push
das
mov
icebp
cmp
push
xchg
insl
pushf
push
outsl
in
cmp
iret
xchg
sub
lea
pop
aas
push
mov
daa
add
xor
sub
jle
pop
lock
test
dec
outsb
lret
lea
push
dec
iret
repnz
or
aas
and
lret
aaa
lret
xor
das
pop
sub
dec
and
lret
and
rcrb
mov
or
mov
mov
lret
dec
movd
in
stc
inc
hlt
les
add
mov
js
outsb
insl
and
and
xor
std
lock
adc
rorb
je
sub
orb
xlat
dec
movsb
add
rcrb
jno
mov
jl
mov
dec
inc
jns
movsl
add
xor
outsl
mov
lret
dec
xchg
xor
push
dec
cli
lods
leave
or
arpl
icebp
inc
dec
add
incl
and
pop
repnz
mov
pop
pop
js
add
mov
lds
add
dec
push
sbb
jle
aaa
fisttpll
arpl
dec
add
fstp
in
ljmp
xchg
aad
push
dec
cmp
sub
or
bswap
cmpsl
add
loope
lods
pop
push
cmp
cmp
cwtl
dec
cmp
rorb
push
mov
mov
sbb
cmovge
dec
stos
pop
add
jg
inc
dec
iret
pop
shrl
cmp
mov
pop
dec
fwait
xchg
nop
mov
inc
and
dec
fs
enter
dec
sbb
lods
insb
outsb
scas
xor
or
sbb
test
jb
iret
add
jge
lock
aam
inc
push
js
jmp
test
xor
push
lss
mov
xchg
mov
mov
and
mov
fldenv
shll
xchg
sbb
hlt
adc
mov
dec
pop
or
mov
push
fldln2
adc
movsl
popf
int3
push
in
test
xchg
dec
mov
rolb
inc
and
add
jl
dec
add
sti
mov
or
xchg
xchg
scas
xchg
movsl
dec
rorl
cmpsl
popa
inc
dec
push
sub
aad
pop
fistpl
leave
in
into
not
or
dec
shll
into
push
mov
lahf
aas
sbb
jle
mov
dec
dec
ret
lret
inc
dec
loop
gs
repz
xor
stos
or
jb
cs
dec
fldl
inc
ror
mov
dec
or
jmp
jg
sub
popf
loopne
testl
repnz
jns
xor
lret
pop
jle
adc
cmpb
fwait
mov
dec
or
mov
test
inc
pop
es
sub
mov
mov
sub
jg
test
fs
sbb
add
pop
stc
ljmp
das
jnp
or
push
adc
outsl
jg
xchg
jne
cmp
push
xchg
out
jge
or
sbb
leave
jmp
add
sub
pop
or
inc
sbb
jl
gs
andb
leave
jp
addl
lds
inc
jg
fwait
xlat
add
xchg
cmpsl
into
dec
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
movb
lea
jmp
call
sub
and
idivl
push
bound
fisttpl
mov
adc
lods
lods
sbb
push
xchg
mov
jno
aas
loopew
jb
sub
adc
test
add
imul
outsb
aas
or
xor
outsl
push
adc
push
lret
rcrb
cmp
fidivrs
fxch
mov
aad
pop
mov
icebp
sbb
cmpl
lock
stc
call
lods
sub
jnp
fldcw
dec
clc
adc
shr
mov
cmp
das
or
aad
mov
negl
insl
dec
dec
data16
jno
clc
clc
cmp
jb
iret
sub
mov
aaa
mov
mov
mov
aas
push
or
jae
aas
cwtl
lods
sub
insb
es
icebp
setno
cmpsl
dec
cwtl
rcr
add
lods
lret
insb
stc
xchg
cwtl
cmp
mov
pop
push
mov
inc
xor
dec
negl
mov
pop
jo
xchg
rcpps
adc
or
xor
test
push
or
sbb
aam
iret
jge
mov
sub
fldenv
mov
cmp
les
jne
jg
jns
gs
sbb
sbb
iret
jne
lret
pop
cmp
jae
daa
xchg
inc
xor
adc
outsb
add
mov
jae
loopne
cmp
leave
sbb
int3
mov
xchg
aas
add
cli
ljmp
cmp
movsb
inc
mov
xchg
jo
testb
adc
xor
cmc
arpl
mov
jnp
xchg
dec
cmpsl
outsl
movsl
cmpb
popa
adc
jmp
pop
fstpt
push
loop
and
xchg
sub
out
add
imul
in
inc
test
xor
outsl
aaa
xor
xor
inc
xchg
test
xor
cwtl
les
mov
cmc
icebp
pop
repz
jp
mov
movsb
inc
mov
cli
fisubrs
fsubs
inc
mov
dec
mulb
mov
add
mov
jbe
cmpsl
adc
enter
xor
inc
adc
or
je
dec
popl
icebp
outsl
or
nop
test
cmp
push
jns
adc
sti
mov
mov
push
jo
mov
dec
adc
adc
xchg
and
xchg
aam
andb
push
stos
adc
inc
sbb
fsubrl
movsb
sbb
movsl
lods
jl
rclb
rcll
jmp
insl
repz
sub
mov
iret
mov
jmp
aad
sub
dec
clc
movsl
inc
mov
outsb
aaa
xlat
push
fisttps
out
mov
add
xchg
pop
call
xlat
jl
mov
dec
jb
inc
dec
popf
sub
mov
push
add
cwtl
mov
scas
mov
movsl
inc
mov
in
stos
pop
int3
out
mov
lgs
jno
mov
fadds
push
cmpb
inc
dec
inc
sub
ret
cli
xchg
rcr
je
mov
dec
sbb
xor
push
scas
lods
mov
lock
push
jg
or
jae
xor
jo
aad
ret
mov
sbb
mov
test
ficoms
xor
inc
mov
xchg
cmp
lret
mov
adc
mov
jp
xchg
mov
test
pop
pop
cmpsb
or
mov
fwait
mov
cmovs
xchg
adc
stos
lds
dec
cmc
sub
sahf
fcom
bound
mov
cmp
push
mov
bound
adc
les
daa
push
mov
call
sbb
add
push
fdivrs
mov
imul
bt
cmc
stc
stc
pushl
cmc
cmc
cmp
push
jmp
jp
sub
mov
adcb
inc
push
mov
enter
lahf
sbb
les
cmp
mull
and
cmp
cwtl
xchg
dec
lea
dec
cmpl
and
fimull
pop
push
out
pop
loop
and
sub
or
idivb
xchg
test
push
mov
adc
xchg
call
subb
cmc
div
scas
add
arpl
xchg
cli
int
add
xor
loope
dec
or
das
cmpsb
int3
pushf
lret
fbstp
movzwl
imul
je
jb
sub
aaa
lea
add
mov
imul
fcoms
and
scas
mov
inc
xchg
mov
repnz
daa
mov
mov
in
les
insb
cwtl
mov
adc
mov
inc
or
test
stos
xor
cmp
jmp
jl
test
leave
in
movsl
aaa
xor
inc
mov
add
push
jecxz
cld
mov
scas
mov
ret
pop
push
mov
imul
rcrl
xchg
jle
pop
xor
aam
mov
push
imul
pop
pop
in
rcrb
popf
xlat
cmpsl
or
add
xchg
addr16
shl
mov
adc
sbb
loop
icebp
sub
leave
ljmp
dec
and
mov
ds
daa
dec
shll
je
add
inc
and
xchg
add
and
pushf
mov
push
push
mov
push
pushl
ret
add
push
gs
gs
gs
push
popa
insb
jne
inc
add
dec
inc
push
dec
xor
cs
insb
add
test
sar
add
mov
stc
add
stc
movzwl
and
lea
bsr
mov
call
mov
mov
addr16
pop
sti
push
adc
pop
cmpsl
incl
fnstsw
adc
push
dec
mov
sbb
fidivs
xchg
mov
push
mov
dec
inc
mov
sbb
xor
imul
or
mov
inc
aam
in
fwait
push
inc
addr16
sbb
and
jg
pop
addr16
lds
add
push
xor
je
xor
xchg
xchg
int
mov
in
cmp
stc
push
pusha
pop
push
push
jl
ror
cmp
inc
pop
xchg
and
sti
mov
std
xchg
xchg
data16
dec
sti
push
leave
les
and
pushf
mov
pop
insb
ss
out
in
std
jge
sbb
push
clc
dec
dec
cli
and
aam
push
enter
adc
test
dec
fwait
push
mov
and
inc
ss
xchg
in
xchg
push
es
je
push
imul
in
inc
ror
mov
aam
fs
cs
cmp
adc
mov
das
cwtl
outsl
and
ss
xchg
add
xchg
aad
call
xchg
ss
jbe
dec
sbb
mov
lret
jb
aam
out
push
mov
insb
insb
sbb
cmp
addb
and
mov
mov
lea
push
lret
testl
pop
lret
inc
scas
test
shll
sub
leave
daa
sub
hlt
lds
ret
add
mov
cmpsb
mul
push
jmp
cmc
adc
xor
jle
push
or
ja
pop
shrw
push
popa
jno
into
ljmp
inc
arpl
and
adc
sbb
insl
adc
gs
lea
testl
iret
sub
inc
es
or
xor
pop
ds
xor
pop
cwtl
addr16
pop
mov
sub
loope
aaa
sub
adc
jmp
add
mov
stc
xchg
dec
pop
int3
aaa
push
loopne
es
push
cmp
adcb
js
das
outsb
sub
push
insb
dec
mov
mov
inc
aad
in
clc
mov
cwtl
push
inc
mov
mov
clc
jb
sub
pop
inc
push
aad
inc
jb
mov
lds
xchg
lahf
das
gs
mov
sub
inc
cli
mov
adc
sbb
call
das
ret
push
hlt
fdiv
rcr
stos
xor
jecxz
adc
dec
aas
es
into
add
mov
mov
pop
or
popf
mov
aad
flds
scas
out
xor
aam
xchg
mov
mov
inc
mov
frstor
sub
data16
mov
mov
xchg
and
push
shlb
jge
lahf
sub
loopne
das
sahf
inc
mov
jle
sub
mov
jp
sbb
lcall
mov
leave
add
adc
lods
add
cltd
mov
insl
mov
dec
push
xor
xchg
push
addl
insl
loopne
sbb
cs
wrmsr
or
data16
outsb
inc
xor
sub
pop
mov
push
adc
fnsave
mov
lods
inc
mov
mov
insb
dec
outsl
popf
cmp
jnp
adc
out
mov
mov
cmpsb
push
mov
les
ljmp
push
mov
jecxz
in
mov
hlt
out
or
fisttpl
dec
ds
mov
jg
lret
push
lds
fwait
lods
hlt
daa
fs
add
outsb
cmp
in
sub
pop
xchg
mov
jno
xor
call
dec
lods
inc
mov
pop
out
push
sub
or
push
loopne
adc
lret
lcall
fidivrs
jbe
pop
movsb
lock
pop
jl
aas
ss
jg
fdivl
fcmovnbe
fisubrl
sarl
xchg
xor
lret
and
test
jecxz
test
mov
adc
inc
js
lock
sahf
hlt
lock
fnstsw
mov
sbb
push
mov
test
or
sub
shlb
ja
add
clc
or
xchg
push
sarl
es
dec
sti
pop
call
inc
inc
cmpsl
scas
and
or
ja
sbb
lahf
testb
adc
out
notl
mov
pop
push
mov
mov
dec
sbb
sbb
cmc
adc
lods
inc
mov
stc
xchg
lret
dec
pusha
sbb
mov
sbb
jecxz
cmp
lods
mov
sub
push
es
pop
pop
cmp
xor
sbb
add
rorl
fwait
pop
cmpb
in
or
mov
push
daa
jb
icebp
inc
stc
or
xchg
ds
mov
daa
mov
push
mov
sbb
mov
fs
jae
rol
xchg
shl
mov
xadd
rol
inc
xadd
mov
cmp
ror
mov
pusha
xor
call
icebp
cmc
shrl
jl
sub
sbb
mov
push
dec
repnz
jecxz
pop
pop
mov
repz
sub
inc
notl
mov
fwait
scas
inc
cltd
stos
inc
ljmp
mov
push
push
rcr
dec
out
mov
pop
mull
lahf
je
mov
mov
push
add
test
movsl
addr16
push
jb
jle
or
xchg
loopne
ret
or
int
pop
imull
test
xlat
mov
sub
mov
add
lock
dec
mov
hlt
popf
mov
outsl
or
push
mov
lea
add
fnsave
or
mov
std
push
xchg
test
jecxz
adc
dec
jne
ret
xchg
jmp
or
push
into
dec
stos
pop
pop
mov
insl
ds
and
andl
pop
outsb
or
cmp
and
pop
pop
xchg
fldl
dec
inc
jl
mov
imul
cwtl
xor
cmpsl
cmp
mov
lods
cmp
mov
push
ret
add
mov
cli
mov
or
daa
mov
sbb
mov
push
sbbl
or
inc
fs
xlat
xor
stc
jne
xchg
mov
fs
dec
pop
sub
out
sbbb
fistpl
sbb
sub
shrb
jl
insl
cmpsb
imul
adc
or
outsl
add
sbb
cmp
sbb
sbbb
jl
mov
mov
inc
scas
xchg
xlat
cmc
fdivs
cmpl
js
lahf
jecxz
sub
mov
fwait
outsl
ja
or
movsb
iret
in
out
in
pusha
or
pusha
lea
jbe
pushf
pushf
lea
je
cmp
cmp
pusha
mov
lea
jne
pushf
pusha
pusha
jmp
pop
and
mov
addb
pop
adc
sbb
sbb
cli
lcall
insl
mov
xchg
repnz
cmp
loopne
shr
addb
out
ss
xor
ljmp
shrb
pushf
fst
mov
jecxz
push
inc
inc
lret
push
mov
jmp
xchg
popa
test
mov
add
and
ret
add
sbb
xor
sti
std
stos
in
outsl
and
and
jae
movsbl
rcr
clc
mov
add
shrd
btc
mov
adc
mov
test
cmc
pusha
pusha
xor
cmc
test
pushf
jmp
call
xlat
das
pop
mov
mov
rep
xor
mov
pop
cmc
jo
repnz
data16
xchg
xor
out
imul
cmpsl
addr16
adc
inc
rcr
mov
int3
lahf
push
lds
push
pop
pop
cmp
push
push
test
es
push
pop
iret
fldcw
lods
into
mov
lret
inc
repnz
insb
int
and
mov
mov
jbe
fdiv
push
das
cmp
popa
imul
imul
and
das
and
lret
dec
jle
lea
push
and
pop
jae
js
xchg
insl
push
cmc
lcall
mov
cmp
rorb
shlb
or
jae
adc
dec
xor
lea
les
adc
and
sub
jp
inc
mov
push
push
lods
aaa
dec
cmpsl
idivb
das
cs
mov
push
mov
dec
mov
or
mov
cmp
ret
mov
pop
pop
inc
mov
mov
inc
mov
and
jg
xor
dec
cmpsl
fimuls
lret
rolb
clc
pop
cwtl
xchg
fdivp
fwait
inc
xlat
shl
lahf
popl
xchg
test
ja
cli
sbb
adc
adc
inc
cmp
push
ret
in
mov
pushf
lea
jae
call
call
movups
mov
mov
pusha
cld
repz
or
stos
or
push
sub
sbb
push
mov
repnz
mov
shrb
aaa
ficomps
cli
push
cmp
mov
scas
add
sub
loope
jns
pushf
clc
out
aas
lret
enter
sarl
scas
cmp
lods
fiadds
and
sub
pop
mov
scas
fs
mov
mov
lods
loope
push
sbb
sar
mov
call
pushf
movl
call
mov
mov
scas
or
mov
mov
das
xor
movsb
mov
xor
sbb
clc
mov
lods
out
cmp
xor
push
push
orl
ds
sub
in
push
cli
ret
dec
adc
test
sahf
icebp
scas
hlt
adc
xor
dec
inc
mov
mov
cmp
cwtl
mov
ljmp
mov
js
mov
jb
xor
sub
mov
push
lahf
aas
lret
jle
leave
push
pop
daa
loopne
lret
push
push
clc
stc
lea
adc
lea
incb
mov
fisttps
ja
xchg
scas
into
inc
icebp
lret
sysenter
push
pushf
pop
fcoms
insl
mov
lock
cli
ret
das
loopne
repnz
push
and
out
pop
loopne
aad
cmp
pop
cmp
or
jl
mov
mov
fdivrs
xorb
pop
mov
leave
loopne
xchg
mov
insl
je
inc
mov
pusha
jo
jo
bound
stos
mov
inc
push
ja
es
or
push
or
cmp
jle
add
or
jns
repz
imul
xchg
xor
pop
mov
nop
adc
xchg
mov
xor
push
enter
nop
xor
add
xor
sbb
push
aas
or
push
fwait
add
mov
lds
sub
lea
jne
jle
pushf
pushf
inc
pusha
movb
pushf
inc
mov
movb
pushf
pushf
lea
jmp
push
movl
push
lea
jle
pusha
movl
movb
lea
jmp
push
push
bswap
mov
lea
push
push
mov
mov
lods
pusha
neg
push
call
pop
lret
jmp
inc
mov
test
inc
push
fwait
xchg
push
fldcw
mov
pop
jg
mov
loope
lock
mov
mov
test
sbb
dec
sbb
lock
pushf
jmp
sbb
out
call
aam
and
into
rcl
or
js
stos
adc
xchg
cmpsl
or
dec
stos
jg
test
clc
push
in
je
jo
adcl
out
jle
in
sbb
mov
mov
in
adc
fistl
loop
push
adc
mov
subl
sub
rcll
cmc
leave
and
dec
test
xor
out
push
stos
movsb
sub
icebp
jnp
das
pop
jmp
std
or
in
call
jnp
lods
jno
xor
inc
sub
inc
dec
sbb
mov
sub
lods
jmp
icebp
lock
imul
mov
mov
jnp
inc
repz
les
lea
sbb
lds
scas
push
ljmp
shl
lods
inc
mov
or
lods
out
lods
adc
sbb
and
pop
hlt
fdivl
mov
jmp
mov
cmp
jns
sbb
push
mov
aas
out
enter
push
sbb
cmpb
fmull
popf
xchg
push
push
in
iret
lret
mov
mov
mov
aas
mov
dec
lock
lods
mov
cmc
in
test
mov
or
mov
mov
std
or
push
hlt
adc
aas
sahf
lods
daa
sbbb
mov
les
inc
mov
or
adc
adc
add
cld
divb
push
lds
andl
insl
jb
mov
adc
insb
lea
sbb
out
cmc
ds
jmp
clc
xchg
insb
dec
sbb
xchg
rol
pop
push
mov
xchg
mov
dec
dec
cmp
mov
cli
mov
sub
dec
shl
dec
inc
not
call
push
mov
jmp
xchg
and
mov
mov
stc
inc
xor
adc
mov
jmp
and
call
loope
inc
mov
push
jmp
lea
out
jns
jo
je
xchg
daa
aam
fwait
inc
faddl
mov
xchg
lds
mov
call
sub
inc
cmp
imul
cmpsl
jg
out
movsl
xchg
pop
fdiv
xchg
aam
mov
mov
fwait
push
push
push
dec
ret
leave
dec
jge
and
or
add
daa
xor
or
mov
jae
push
aad
or
std
sub
lods
cmc
add
xchg
xlat
stos
cs
pop
rolb
cmp
xchg
inc
mov
pop
stos
xchg
enter
bound
scas
pusha
ja
nop
stos
cmp
xlat
mov
mov
xor
add
jle
movsl
sbb
pop
mov
cld
pop
dec
iret
pop
out
cmp
xor
mov
movsb
imul
cwtl
test
mov
aas
inc
push
data16
arpl
mov
inc
mov
xchg
lods
mov
out
mov
dec
mov
jecxz
aaa
fidivs
jbe
iret
int3
out
imulb
sbb
ja
sub
sbb
lcall
hlt
loope
push
enter
mov
push
sbb
in
jecxz
inc
mov
mov
imul
dec
sbb
aas
xchg
jmp
stc
xchg
imull
movsb
xchg
and
fwait
push
sub
pop
ret
mov
stos
jae
andl
cmc
push
aaa
aad
fdivrl
pop
mulb
pop
shll
arpl
mov
stos
jp
mov
push
sub
pop
xchg
or
dec
lea
jle
mov
jbe
dec
fildll
sbb
xchg
nop
fiaddl
xor
inc
faddl
movsl
xchg
inc
std
pop
cmp
leave
xchg
paddusb
sti
sub
xchg
lcall
out
int3
stc
pop
and
and
mov
or
rclb
mov
sbb
sbb
add
mov
into
mov
les
mov
fisubrl
call
out
sbb
jnp
int3
icebp
mov
test
popf
ret
xchg
mov
mov
cmp
pop
out
inc
pop
adc
xor
ljmp
lds
dec
mov
adc
jg
ljmp
call
insl
inc
adc
fmuls
mov
pop
daa
pop
mov
adcl
mov
stos
xchg
cmp
call
stc
jae
push
call
scas
jg
xor
mov
xchg
negb
or
xchg
jp
sbbb
push
and
cmp
dec
push
out
xor
xor
cltd
mov
inc
dec
insb
mov
mov
ljmp
pushf
push
dec
cs
sub
fsubrs
mov
jl
mov
push
into
std
data16
pop
sub
cmp
push
mov
push
inc
xchg
and
pop
xor
out
repz
jns
jno
inc
bound
push
jmp
add
out
xor
ret
xchg
inc
pop
rcrb
adc
orl
mov
dec
cli
push
ret
inc
lods
mov
ret
flds
pop
ss
sahf
jno
out
int3
mov
scas
int3
xor
fdivrs
inc
arpl
xor
call
rcl
idivl
mov
mov
test
push
lret
iret
sub
mov
cmp
fmulp
mov
test
fsts
add
mov
and
movsb
pop
mov
or
adc
xchg
jl
les
lods
leave
subl
fimull
enter
testb
fidivrs
add
and
lret
push
xor
imul
movsb
mov
sbb
dec
xor
test
mov
mov
shlb
jbe
jnp
jmp
je
int3
jp
insl
into
and
xchg
adc
pop
xchg
bsf
jnp
push
scas
es
xor
in
insb
cmpsb
jp
push
repnz
enter
pop
mov
cli
gs
int3
inc
or
notl
vmwrite
movsb
ja
pop
dec
fistpll
and
shll
sub
in
and
lods
xchg
bound
xchg
sbb
jecxz
jp
push
insb
push
or
add
add
leave
add
js
bound
mov
xchg
pop
outsl
push
imul
fnstenv
mov
sti
jne
mov
mov
les
xor
jl
sbb
xchg
adc
popf
fimull
add
inc
arpl
ret
sub
cwtl
jl
dec
nop
outsb
insl
push
cmpl
pop
sub
imul
mov
add
addr16
jg
inc
mov
pop
ljmp
test
inc
popa
ret
mov
roll
int3
cmpsl
sub
xchg
aam
ret
in
imull
in
in
adc
les
and
mov
xchg
push
addr16
mov
repz
rorb
or
addr16
cmpl
mov
scas
mov
push
pop
mov
enter
add
cmp
fmuls
mov
stc
inc
jmp
in
daa
subl
adc
cmpsb
pop
pop
ds
div
push
pop
das
lods
das
loopne
pop
xchg
xchg
mov
roll
lahf
mov
adc
jae
inc
arpl
jge
into
lea
in
and
or
in
adc
jg
inc
hlt
push
out
jg
xor
sub
sbb
push
insb
call
xor
dec
xchg
mov
rcll
arpl
cwtl
test
imul
mov
push
lea
jae
clc
bt
stc
cmp
jmp
inc
or
inc
mov
push
dec
mov
outsl
or
in
pop
mov
int
push
loopne
jmp
nop
add
mov
les
js
shrb
and
sahf
xor
andl
shrl
es
xor
add
jb
mov
aaa
in
push
in
es
inc
movsb
scas
lret
std
cmp
sbb
mov
in
mov
clc
mov
sbb
pop
aaa
fidivs
shll
test
data16
sub
std
push
mov
xchg
lds
push
adcl
mov
cmp
fimuls
lods
mov
mov
dec
jmp
push
sub
or
mov
div
dec
lods
in
and
inc
xor
and
and
test
ss
push
lods
adc
arpl
int3
cltd
cmp
insl
push
mov
xchg
and
iret
mov
pop
dec
lret
cmpsb
cmpsb
mov
aas
jp
movl
fs
call
jmp
xchg
aaa
pop
mov
mov
mov
sub
inc
sub
lahf
dec
lods
std
or
fnstsw
mov
loopne
aas
pop
int
bound
add
imul
aas
xchg
imul
xlat
mov
xchg
outsb
jae
lret
cwtl
xchg
insl
sbb
sahf
pop
aas
lds
cmp
dec
int3
mov
jmp
inc
cltd
pop
mov
fwait
jns
mov
scas
mov
xor
outsl
xchg
js
sbb
dec
push
cli
stc
mov
mov
inc
sbb
sbb
addl
jo
pop
cmp
pop
fistl
and
dec
dec
inc
lret
inc
cwtl
insl
mov
add
test
jno
push
ja
or
xchg
out
fbstp
xor
add
cmc
in
outsb
inc
scas
lret
aam
push
mov
or
sbb
bts
mov
call
cmc
jmp
pusha
jmp
pushf
lea
jne
not
sete
movsbw
mov
pushf
mov
pusha
lea
jmp
sahf
sti
sub
mov
or
loope
rorb
pop
lcall
or
jp
or
test
mov
fistpl
ljmp
and
pop
fldz
jae
mov
lock
fcoml
loope
xor
jae
out
mov
cmp
arpl
cli
xor
cmp
jnp
xchg
sbb
arpl
mov
add
sbb
sti
lods
jecxz
push
pusha
pop
addr16
xor
cmc
call
mov
mov
shll
dec
fwait
daa
pop
mov
inc
xchg
mov
ror
xchg
in
lcall
bound
mov
pusha
popf
fwait
adc
sub
mov
mov
ret
roll
sbb
pushf
cwtl
andb
std
sub
adc
mov
les
nop
mov
inc
sbb
jmp
add
sub
lea
jne
bswap
pushf
mov
pushl
lea
jmp
sub
repz
stos
movsb
rorl
pop
test
mov
jb
pop
xchg
fucomi
or
dec
pop
sub
add
scas
pop
aad
sbb
sub
std
ss
imul
cld
hlt
stos
xor
mov
arpl
xor
xchg
xor
push
nop
xchg
out
jmp
mov
imul
or
in
gs
movsl
pop
je
mov
mov
cwtl
pop
stos
out
push
stos
jnp
out
fldl
mov
dec
lret
pop
cld
sti
mov
lahf
sub
lcall
out
pop
addb
scas
sbb
mov
mov
je
push
lods
movl
out
mov
in
aam
testl
push
lret
inc
and
sbb
out
loop
push
pop
cli
jb
adc
inc
jmp
mov
sbb
aas
enter
testb
sbb
xchg
jo
call
pop
inc
jle
and
loope
push
in
xchg
xchg
enter
xchg
js
pop
mov
in
sub
xor
mov
movsl
xchg
addb
aas
shl
and
mov
cmpb
xor
lcall
dec
les
push
and
xor
in
adc
xchg
pop
inc
aad
and
cs
mov
repz
fucom
cmp
and
je
insl
cmp
mov
cmc
pop
xchg
shlb
fwait
jne
shll
mov
flds
dec
fadds
inc
mov
xchg
xorb
jbe
sbb
sahf
xor
sub
push
dec
or
xchg
icebp
ja
stc
xchg
and
daa
ret
cmp
cmp
ljmp
jmp
add
cmpsl
mov
mov
jne
shld
int3
or
mov
xchg
mov
dec
or
jp
mov
test
and
pushf
push
cmpsl
loope
or
pop
pop
sub
or
xrelease
xchg
popf
adc
jnp
call
stc
push
pop
xor
cmp
cmp
movsl
inc
stc
push
inc
cltd
jle
popf
scas
add
add
data16
mov
test
mov
aas
mov
cltd
adc
fcomp
mov
outsb
stos
leave
je
cmc
sub
jecxz
mov
adc
outsl
or
push
sbb
bound
push
sbb
mov
sbb
sbbb
sub
std
into
int
and
repz
bound
fcmovb
mov
je
xchg
je
sbbl
pusha
shll
push
jns
cld
push
lret
in
shl
js
mov
movsb
add
mov
mov
lea
jb
push
pusha
push
mov
pushl
ret
je
not
mov
cwtl
lea
jmp
sub
push
lea
jmp
mov
movb
mov
push
push
lea
jmp
dec
dec
inc
inc
push
push
xor
cs
insb
add
imul
inc
mov
stos
mov
dec
dec
mov
dec
test
ficompl
ret
sbb
pushf
lock
mov
inc
fistl
sbb
addr16
adc
cld
fs
clc
or
mov
cmpl
sub
cmpsl
mov
or
pop
stos
pushf
out
imul
mov
mov
outsl
gs
stos
adc
cmp
insl
push
rep
jmp
into
mov
test
gs
mov
push
lret
mov
call
and
lds
xor
test
pusha
mov
dec
mov
xchg
in
ss
outsl
pop
je
pop
aam
xchg
arpl
xor
xorl
mov
sbb
sahf
in
sbb
xor
sbb
ret
pop
rcr
jg
testl
jl
jp
orb
data16
xchg
outsl
lahf
xchg
xchg
loope
xchg
ror
xor
cmp
sbb
pop
in
push
mov
or
and
push
and
push
cmp
sub
jecxz
jg
mov
jnp
inc
push
and
xlat
adc
in
addb
inc
sub
fs
push
cltd
mov
sbb
mov
sarb
mov
sbb
cmp
xchg
mov
push
ds
test
bound
repnz
add
xor
xor
pop
add
bt
pushf
mov
call
insb
mov
pop
out
xor
add
ljmp
xlat
and
sahf
or
jecxz
mov
sub
pop
mov
and
and
inc
pop
leave
add
test
cmp
cmp
jnp
or
jp
fdiv
cmp
mov
notl
and
bound
out
mov
clc
adc
addr16
in
sbb
push
xchg
lret
xchg
add
xchg
xor
inc
add
inc
and
and
inc
fisttpl
mov
dec
sbb
scas
movsb
jge
mov
ljmp
popf
push
xchg
in
jnp
stc
scas
loop
fcoms
cli
jl
pop
and
pop
mov
in
js
popa
aad
shlb
jg
lods
jae
adc
mov
xchg
sbb
clc
out
and
andl
cs
shrl
and
jne
pop
push
or
add
neg
shll
cmpsb
xchg
mov
daa
sahf
or
push
ret
dec
adc
mov
stc
xor
push
mov
mov
inc
aaa
adcb
mov
pop
js
fsubl
rorb
orl
mov
arpl
or
jl
fwait
pushf
fnstsw
xor
mov
fnstcw
push
je
std
mov
xor
bswap
sub
mov
push
movl
call
lea
jb
cmc
clc
cmp
cmp
push
jmp
push
arpl
mov
or
outsl
push
mov
insb
mov
add
xor
lds
subl
xlat
mov
xorb
pop
test
hlt
dec
aad
adc
adc
js
xchg
fistps
gs
mov
ja
cmpsb
xchg
aas
inc
in
imul
dec
out
movsb
insb
push
jp
cmc
test
cli
mov
sbb
or
call
in
rorb
and
dec
sub
mov
test
jb
out
pusha
mov
or
test
jae
fists
mov
push
jecxz
aam
xchg
mov
aad
push
inc
cmp
rclb
scas
xor
test
sbb
adc
outsl
hlt
ret
test
mov
into
add
or
sbb
and
adc
lds
inc
popa
inc
leave
cmp
mov
push
cmpsl
fs
cltd
dec
xchg
push
xor
push
orl
jb
xor
xor
mov
lret
pusha
insb
pusha
jge
ret
cmpsb
gs
xor
aaa
popf
and
inc
bound
ds
cmp
push
es
cmp
or
data16
cmpsl
aam
insl
insb
jp
imul
shlb
aam
add
mov
cld
sub
push
cmp
adc
xchg
inc
and
or
add
cwtl
lea
push
pushf
pushf
movl
pushf
push
pushl
popl
movw
pushf
mov
pushl
ret
loop
in
inc
mov
repnz
pusha
aam
out
xchg
lea
dec
and
push
add
ret
adc
jmp
das
fcoms
pop
int
das
xchg
xor
jbe
cmpsl
lahf
stos
xchg
lcall
mov
pop
popf
lret
inc
mov
and
add
inc
scas
or
cmp
leave
jle
sbb
mov
xchg
popa
adcb
fistpll
lea
jne
bsf
and
shl
mov
bt
add
jmp
or
test
inc
mov
push
in
fists
xor
cmpsb
enter
cmp
fstpt
mov
andl
inc
adc
or
aam
mov
into
lret
movsb
xchg
cltd
stos
sub
aas
push
aaa
mov
fiadds
adc
imul
xchg
in
mov
inc
or
and
sbb
inc
mov
outsl
gs
adc
xor
fwait
jns
xchg
lret
cmpl
adc
inc
mov
inc
nop
or
out
or
xchg
or
sub
adc
data16
in
idivb
mov
push
ja
dec
cmp
mov
inc
inc
mov
mov
jge
xor
sub
lea
enter
or
mov
cmc
mov
ss
and
jae
inc
mov
and
or
inc
stos
mov
xor
iret
or
add
mov
xchg
lcall
fisubrs
pop
xchg
rep
mov
int
dec
daa
and
add
xchg
aad
leave
and
push
cwtl
stos
sbb
lock
inc
test
ficoml
push
mov
inc
jbe
outsl
in
daa
pop
lret
fxch
out
push
add
sub
in
fwait
sahf
add
lods
jp
stos
mov
add
jo
push
repz
pop
jo
jno
imul
xor
movl
pusha
pushf
push
pushf
movl
mov
lea
jmp
movsl
and
inc
mov
lock
add
push
mov
lcall
cli
int3
ret
clc
lods
fnstcw
mov
mov
mov
push
ficompl
dec
dec
sbb
mov
inc
cmpsb
aam
lock
or
jl
iret
mov
add
lock
jge
subl
and
in
or
sbb
int
inc
mov
xor
imul
mov
adc
ljmp
adc
in
orl
xor
adc
jae
das
xor
mov
sbbb
je
add
aaa
shl
insl
outsl
dec
xor
or
sub
cli
into
fisttpll
mov
ret
ljmp
adc
adc
out
js
inc
in
shlb
lds
inc
jnp
daa
add
sub
scas
cmp
in
jo,pt
pop
movsl
aas
mov
jmp
mov
lea
je
jmp
pop
inc
icebp
lea
dec
loopne
mov
inc
pop
cmp
in
in
xor
das
jl
in
pop
negl
dec
sbb
dec
ss
test
fisttpl
mov
lret
call
repnz
mov
cmc
ja
pop
xchg
out
adc
pop
mov
lret
cltd
push
inc
mov
outsb
xchg
mov
jle
test
jp
and
lods
and
and
sti
push
sbb
sti
jle
in
mov
popf
mov
mov
rorb
arpl
or
and
test
insb
fdivr
or
lods
ret
lods
cmc
jns
mov
mov
inc
mov
jg
mov
mov
into
ds
divb
popa
adc
enter
stos
loope
cmp
push
imul
and
and
enter
dec
jge
insb
insl
cmc
hlt
scas
jne
rorb
mov
lahf
pop
lea
xchg
fidivl
sub
movsb
dec
add
cmpsl
lahf
std
pop
jae
loope
test
fmuls
fxch
lock
mov
movsb
pop
mov
adc
insl
jne
jl
push
push
and
movsb
pop
mov
or
fiaddl
ja
fmulp
fnstcw
outsl
push
pop
adc
pop
es
mov
push
pop
hlt
xor
or
ficomps
jbe
push
out
adc
sub
fs
mov
fcmovnb
lret
cli
mov
push
mov
jp
push
mov
mov
mov
movsb
repz
sbb
pop
add
mov
mov
dec
xlat
mov
jns
in
ss
mov
nop
sbb
mov
das
inc
and
lods
jne
repz
adc
and
cmpsl
fnstcw
mov
out
arpl
mov
jne
sbb
mov
sbb
or
into
lret
ds
inc
push
pop
mov
or
push
mov
push
stos
or
call
jg
mov
xchg
inc
mov
dec
leave
aam
cwtl
xchg
mov
movsb
push
lret
imul
ja
pusha
neg
jmp
test
add
clc
movzwl
stc
mov
bt
add
clc
mov
pushf
pusha
test
bt
test
movb
movb
jmp
pop
sub
mov
mov
push
arpl
dec
add
imul
rcll
pop
sub
adc
cli
incl
mov
loopne
add
or
orl
xchg
test
ljmp
sub
outsl
fucomi
cmc
imul
mov
ficomps
int
cmp
jg
loop
testl
movsb
and
add
dec
xchg
jo
jbe
xchg
imul
xchg
scas
or
inc
sarb
mov
int3
inc
lds
lret
test
push
xchg
or
aam
or
jge
pop
out
sbb
xchg
mov
test
add
ret
add
aad
push
std
mov
test
jl
xchg
mov
scas
aad
cwtl
fidivrl
imul
nop
inc
mov
inc
fucomi
and
gs
pop
xchg
inc
test
pop
les
mov
xchg
jno
popa
lock
clc
sbb
outsl
inc
dec
jo
mov
add
js
cwtl
mov
out
jecxz
jle
push
push
dec
out
mov
rcrb
add
imul
cmp
es
stos
mov
fcmovb
gs
shll
mov
push
filds
xor
out
lcall
xchg
push
movsb
dec
ror
std
lock
push
push
cltd
imul
aaa
mov
das
push
mov
out
add
rcrb
int3
fiadds
add
das
xchg
inc
mov
sub
mov
wbinvd
daa
push
shlb
cmp
in
push
roll
mov
or
jmp
or
ljmp
cmp
std
dec
and
bound
loop
pop
enter
pusha
jp
cmp
push
subl
jns
adc
cs
outsl
jmp
inc
lret
dec
cmp
or
mov
lods
jb
out
test
divl
std
xchg
push
adc
cmp
sub
repnz
dec
lahf
movsb
xor
loope
push
iret
and
adc
call
mov
pusha
pusha
pushf
pushl
lea
call
jmp
lea
jae
pusha
pushf
mov
lea
jne
call
movl
movw
lea
jmp
adcb
inc
mov
aam
mov
pop
xor
or
mov
lea
ret
cli
repnz
push
push
lret
jp
add
int
cmp
push
cmp
movsb
loopne
sub
mov
mov
lahf
daa
inc
inc
dec
adc
loopne
arpl
dec
dec
dec
jecxz
cmp
and
call
lret
mov
mov
dec
xchg
inc
mov
clc
bound
add
push
inc
push
insb
mov
xchg
inc
adc
cwtl
rcrl
mov
or
jp
sub
xor
cwtl
sub
mov
push
data16
jecxz
and
dec
aad
jb
cmp
or
loop
or
inc
es
inc
outsl
mov
jge
loopne
das
in
mov
nop
lret
arpl
adc
add
add
std
mov
lea
je
test
cmc
jmp
lret
xchg
inc
mov
push
sarl
repz
dec
add
cmc
in
sub
in
ds
lret
sbb
fistpl
or
test
pop
shll
ror
insl
int
mov
pop
imul
jo
inc
mov
dec
xchg
mov
adc
cli
in
call
adc
sub
adc
daa
aaa
dec
add
sub
dec
inc
cmpsb
mov
jnp
or
mov
sar
fcoms
hlt
cmp
popa
push
mov
inc
mov
push
fdivl
or
mov
fmull
xchg
push
push
aad
dec
pusha
aad
push
cmpsl
dec
and
pop
xor
int
jae
iret
popa
mov
loopne
nop
inc
sub
xchg
inc
mov
cmc
inc
jns
js
mov
mov
or
fnsave
insl
add
xchg
cmp
and
out
add
mov
push
ljmp
aaa
sub
and
push
and
xchg
push
dec
mov
popf
push
mov
fbld
mov
cmp
push
sbb
cmp
ret
mov
cmpsl
push
pop
xchg
xor
mov
inc
mov
xor
jne
aaa
sbb
cmp
enter
sbb
sbb
ficomps
orl
shrb
dec
into
daa
jmp
fwait
lret
sub
fmulp
popa
outsl
fwait
sub
repnz
insl
add
ljmp
std
xor
mov
outsb
das
cmp
lret
out
xchg
lods
mov
xor
repnz
call
not
xchg
inc
mov
add
push
mov
xchg
nop
push
jb
jbe
pop
call
gs
xchg
test
sbb
les
cmp
cmp
imul
adc
jo
ret
jno
out
stc
or
and
mov
pop
cmc
mov
push
jo
fbstp
mov
mov
or
or
mov
js
cltd
out
imull
mov
popf
pop
lock
mov
jle
or
bt
add
call
mov
nop
pop
js
sub
push
inc
inc
pop
add
enter
xchg
pop
mov
enter
push
cvttps2pi
jnp
adc
fstps
xor
sub
sub
sti
movsl
sub
loop
ljmp
push
mov
ja
xchg
add
pop
jns
adc
jb
addb
push
add
imul
repz
mov
mov
mov
push
mov
pushf
movw
pushl
ret
push
rep
lea
bswap
mov
bswap
mov
push
mov
movb
lea
jmp
lea
xchg
inc
mov
or
xor
mov
xor
push
call
scas
mov
sub
mov
test
lret
fs
arpl
inc
xchg
loope
jmp
inc
mov
or
push
stc
insb
ja
loope
mov
rcrb
enter
inc
shrb
jmp
dec
movl
aam
lea
mov
cmpsb
outsl
enter
cmc
bnd
dec
dec
xchg
and
fstps
fistpl
cmpsl
cmp
sub
cld
pop
repnz
push
int3
jnp
pop
stos
mov
int
notb
push
jge
stos
and
inc
mov
test
add
pop
lods
loop
mov
lea
inc
hlt
xlat
jp
mov
orb
adc
sbb
loop
dec
sti
fsubs
mov
push
scas
jb
cmp
cmpsl
imul
cmc
push
and
push
sar
repnz
jg
sti
imul
out
xchg
cmc
std
cmp
push
das
call
jnp
fdivs
ss
fmuls
divl
xchg
inc
mov
mov
inc
stos
dec
test
sbb
or
test
or
hlt
mov
or
mov
fisubs
ds
in
sub
inc
gs
xchg
cwtl
jecxz
xchg
and
aad
jb
mov
sar
ret
adc
xchg
rolb
mov
ja
call
pop
push
and
xchg
fisubrl
lret
jmp
or
mov
test
fcoms
or
icebp
fsubrl
mov
jl
mov
xor
je
add
jbe
xor
clc
adc
mov
add
and
movsb
rorl
cmp
js
fs
xor
pop
cwtl
inc
mov
stos
aaa
jnp
aas
mov
stos
dec
adc
inc
dec
and
mov
pop
cmp
add
rorb
push
mov
and
sub
cmp
dec
hlt
jno
fsubrl
sbb
mov
mov
out
fnstsw
stos
push
and
inc
test
add
jp
add
pop
push
fwait
je
jbe
shlb
mov
cwtl
inc
mov
sti
out
mov
loopne
pushf
bound
push
xchg
lds
dec
dec
xlat
lret
push
adc
cmp
cmp
sbb
int3
xchg
shrl
notl
fisttpl
clc
sub
filds
lock
mov
test
adc
in
sub
or
inc
scas
insl
or
notl
mov
inc
inc
dec
inc
or
cmp
std
jo
in
push
mov
push
mov
pushl
ret
ljmp
stos
pop
xor
xor
inc
jne
movsl
cmp
add
mov
inc
xor
in
adc
mov
das
jmp
loopne
cmpsl
mov
lret
adc
cmp
mov
and
sub
xlat
inc
push
sub
ss
addr16
ret
dec
mov
cmpsb
and
cld
or
sub
mov
cmpsb
decb
add
movzbw
call
pushf
movl
movb
pushf
pushf
push
lea
jmp
bt
cmp
pushf
pusha
push
call
out
pop
lcall
clc
das
xchg
ss
xor
push
inc
jge
mov
repz
aad
lock
popa
sbb
aam
inc
pop
or
ret
xchg
xchg
ja
mov
xlat
ss
je
pop
sub
add
push
push
inc
popa
ds
inc
or
pop
adc
dec
scas
xchg
sar
sub
shrd
lea
mov
sub
push
cmp
mov
test
neg
add
neg
shr
bts
mov
and
pop
add
jmp
pop
movzwl
movsbw
movsbw
not
lea
pop
push
jmp
call
add
dec
outsb
je
jb
gs
gs
imul
gs
dec
hlt
rcrb
jbe
into
add
adc
loop
ds
rcrb
ret
jns
dec
dec
inc
add
outsl
xor
stc
clc
fisubrs
imul
cmp
jmp
sub
xor
or
cmc
cmp
pop
inc
orb
and
in
push
push
cmpsl
in
jmp
and
sbb
lea
jae
push
mov
fistps
push
inc
pop
or
mov
scas
test
ljmp
pop
sbb
sbb
cmp
mov
jo
stos
push
inc
cli
jo
jg
fmul
fcmovbe
mov
jbe
cltd
pop
fcomip
loop
sbbl
call
pop
or
outsl
adc
sub
xchg
ret
enter
push
sbb
mov
fadds
add
lods
mov
dec
nop
pop
add
jne
push
or
add
push
gs
sarl
or
out
jbe
ret
pushf
inc
mov
shlb
loope
inc
aam
pop
inc
cmp
and
rcr
xchg
xchg
jecxz
mov
dec
jb
pop
mov
fwait
jnp
movsb
ret
lods
and
sub
jp
loope
and
je
dec
pop
arpl
cmp
cmp
sub
or
test
leave
popa
dec
pop
mov
fstpt
int3
sub
mov
jbe
xchg
neg
xor
sub
jl
jl
in
in
les
jbe
insb
fidivrl
std
es
xor
sbb
sbb
ficoml
arpl
outsb
pushf
inc
mov
imul
mov
aam
mov
dec
dec
mov
test
lock
push
xor
mov
aaa
xchg
lret
std
cmp
out
insl
orl
pop
js
pop
fs
aas
jbe
ja
mov
jo
dec
xchg
in
jge
stos
xor
push
fmuls
mov
repz
out
inc
les
bound
les
fildl
mov
dec
dec
adc
sbb
xchg
mov
push
dec
push
lea
jne
ror
rcl
mov
cmp
cmp
pusha
call
jb
pop
popf
inc
mov
add
das
cmp
jbe
aas
pop
shrb
xor
inc
ret
push
lret
lods
mov
mov
lret
xlat
cld
push
rcrl
add
les
aam
dec
stc
scas
es
mov
add
cmpl
fwait
inc
mov
cmp
jecxz
clc
imul
push
es
cld
popf
inc
mov
sbb
xor
xchg
idivl
xchg
sbb
dec
jg
inc
fs
cmpl
and
sahf
mov
repnz
aam
or
dec
sbb
sbb
in
pop
cwtl
aad
mov
sbb
addr16
or
loopne
out
dec
movl
mov
call
das
cmp
jnp
jb
jge
test
mov
mov
call
outsb
mov
add
int3
daa
rorl
cmpsl
push
sub
xor
fs
xchg
pop
xchg
out
inc
jne
cmp
fs
call
call
loop
gs
inc
mov
loop
out
fsubrp
or
andb
gs
push
xchg
jge
test
mov
mov
mulb
jb
mov
mov
mov
dec
sti
push
and
adc
out
xchg
shr
sub
fs
mov
dec
jno
popf
imulb
stos
cmp
xor
lods
outsb
or
fmull
mov
xorps
arpl
xor
sbb
arpl
shll
das
mov
fists
mov
and
jns
sub
sub
cmp
sub
dec
mov
mov
in
add
int3
leave
and
mov
mov
mov
inc
aaa
aad
pop
jbe
lret
dec
mov
loopne
or
std
sbb
fstpt
lahf
je
dec
les
cltd
shr
xor
push
rorb
rcll
mov
in
pop
or
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
mov
sub
mov
sarb
mov
jno
inc
jae
pop
mov
or
mov
push
pop
push
test
xchg
and
pop
pop
ffree
sahf
xor
fs
adc
pushf
jle
or
call
add
cmpsl
sbb
loop
sahf
add
xchg
push
rcl
sbb
mov
xor
fisttps
lods
mov
add
into
jno
shlb
mov
in
pusha
out
push
fbstp
or
or
repz
sbb
jae
dec
data16
std
pusha
adc
mov
xchg
mov
insl
and
mov
ret
outsl
or
pop
and
add
fimuls
dec
loop
dec
sbb
xchg
inc
mov
fisubrs
sub
jge
pusha
loopne
fwait
pusha
cmp
lds
mov
inc
add
jp
jecxz
inc
adc
or
ret
cs
add
add
add
rclb
add
add
add
movsb
adc
add
and
add
push
add
add
add
adc
add
push
add
add
add
and
add
add
addb
add
loope
adc
add
add
addb
add
or
add
push
sti
adc
add
push
add
add
add
or
add
cwtl
push
add
push
add
pushw
add
add
add
add
add
add
in
lcall
popa
inc
mov
ja
imul
into
mov
dec
fildl
outsl
sub
push
jl
mov
faddl
aaa
jp
adc
and
pusha
icebp
mov
jae
mov
testb
repnz
cwtl
mov
xor
lcall
jle
adc
xor
aad
mov
bound
sbb
notl
mov
lret
aad
imul
mov
push
shlb
test
cmp
daa
pop
dec
popa
dec
in
or
mov
ficoml
push
iret
out
popa
inc
mov
sbbl
out
xchg
cmpb
push
pop
call
lret
adc
cltd
stc
push
sbb
and
test
dec
dec
dec
mov
add
dec
loop
aas
pusha
mov
xor
repnz
jmp
mov
mov
push
hlt
in
xchg
in
mov
das
cwtl
xchg
mov
sub
dec
cmp
fldt
add
sbb
push
stc
pushf
test
and
movb
stc
clc
add
pusha
push
lea
jmp
call
sahf
sti
sub
mov
push
mov
fcmovnu
or
add
cmp
sub
ljmp
cwtl
icebp
mov
test
pop
stos
mov
rcrb
xchg
sbb
mov
adc
xchg
fwait
arpl
jge
mov
fmull
dec
cmpsb
xchg
lret
stos
shrl
inc
ja
mov
add
mov
inc
js
je
jb
arpl
jae
bound
arpl
iret
mov
push
mov
gs
push
sbb
call
xlat
repz
in
jg
mov
dec
sub
sub
mov
xor
pop
sbb
or
daa
arpl
dec
adc
pushaw
mov
dec
add
xchg
pushl
push
and
es
lock
sub
mov
pop
mov
stos
cmc
dec
imul
adc
mov
push
push
dec
inc
cs
fistl
jecxz
mov
hlt
or
inc
ja
fwait
les
mov
and
lcall
aas
jne
ret
or
mov
in
jge
arpl
xchg
movsl
add
pcmpeqb
dec
mov
jmp
test
adc
in
sub
pop
adc
in
in
mov
mulb
ja
adcl
push
xor
imul
and
xchg
rol
jnp
jmp
or
popf
mov
aas
dec
dec
add
insb
scas
and
pop
ljmp
xor
bound
dec
add
mov
pop
daa
lret
sub
stos
adc
pop
cs
testb
rorl
inc
or
sbbb
inc
mov
adc
loopne
sub
movsl
dec
mov
hlt
fistpl
cmc
sub
sub
je
and
or
popf
cli
pop
pop
and
lea
mov
and
jns
or
jl
test
jecxz
xchg
fistps
pop
xchg
jle
dec
mov
addl
cmc
and
ret
and
and
jb
scas
in
cld
sti
jecxz
mov
push
pop
inc
stc
je
xor
add
jmp
sbb
and
sub
and
jmp
icebp
dec
cmc
fs
mov
adc
pop
inc
xchg
dec
and
test
pop
call
push
jg
in
hlt
iret
mov
xchg
ds
popa
adc
xor
inc
push
pop
popf
movsl
lret
jb
pop
loopne
insl
jl
push
jecxz
test
pusha
fucomip
inc
and
sbb
pop
es
mov
sbb
aad
inc
sub
sti
sbb
add
shrb
js
mov
inc
lcall
fldt
fwait
mov
sub
mov
jnp
str
test
lldt
clc
mov
jmp
testl
std
jb
mov
adc
push
cld
loope
aas
inc
mov
cmpsb
push
jmp
in
sbb
fildl
fisubrs
mov
ret
push
out
mov
ret
outsl
sub
add
dec
mov
inc
lea
inc
xor
cmpsw
inc
mov
mov
cmc
pop
int
xchg
mov
cmp
jo
icebp
aas
mov
fistpll
xorl
mov
mov
enter
sbb
mov
lds
leave
js
and
and
into
xor
sahf
add
out
insb
cmp
xor
push
cmpsl
sub
inc
lock
mov
dec
add
and
cli
mov
in
in
fmull
cs
xor
xchg
fwait
js
push
or
fisttpll
mov
inc
enter
mov
mov
icebp
notl
mov
xor
xchg
rcrl
xor
push
insl
fildl
imul
cmp
aaa
out
sarl
or
inc
inc
std
pop
aad
shl
aaa
xchg
cs
jle
jle
mull
inc
or
mov
mov
add
add
push
rclb
add
add
add
movsb
adc
add
and
add
push
add
add
add
adc
add
push
add
add
add
and
add
add
addb
add
loope
adc
add
add
addb
add
or
add
push
sti
adc
add
push
add
add
add
or
add
cwtl
push
add
push
add
pushw
add
add
add
add
add
cmp
call
sub
inc
addr16
mov
adc
add
pop
dec
xchg
sub
mov
lea
cli
notl
jp
xor
adc
xor
or
cmp
pusha
sbb
lret
mov
mov
push
sbb
xor
aam
push
add
jb
xor
lock
jecxz
jno
push
es
imul
lock
addb
sub
stc
sbb
mov
shll
cmpsl
xor
dec
cltd
jl
and
pushf
push
push
scas
push
imul
ret
addr16
lret
xchg
jo
jle
xchg
ret
or
xor
jl
mov
shl
repz
push
into
nop
shl
movsl
xchg
xchg
add
mov
movsb
aam
mov
push
jae
lock
daa
sahf
push
std
repz
pushf
call
pusha
call
movw
pushf
pushl
popl
push
push
mov
pushl
ret
add
jg
inc
mov
iret
test
mov
in
mov
mov
lds
dec
and
fidivrl
jae
add
or
shl
dec
mov
jle
outsl
test
inc
lcall
pop
je
push
sub
aas
pop
sub
call
mov
in
pop
repz
jb
sbb
or
test
les
jg
jge
push
test
mov
into
pusha
lea
jb
call
outsl
mov
lods
cmpsl
lea
in
xchg
jp
fmull
pusha
mov
add
rol
lds
and
iret
popf
xchg
sbb
sub
xchg
clc
push
data16
jmp
mov
push
aad
sbb
dec
mov
fistpl
nop
in
jae
mov
sub
enter
and
fiadds
dec
xor
mov
cld
push
or
push
xchg
or
mov
in
cmp
stos
xchg
inc
xor
mov
int
jb
inc
mov
push
imul
ja
test
stos
adc
es
int3
push
jb
pop
std
dec
dec
pop
mov
push
andl
std
out
gs
mov
lods
daa
mov
lahf
ds
jae
jmp
sub
jns
sub
loope
mov
xchg
dec
jmp
and
dec
aam
add
dec
test
cmpl
xor
scas
sbbl
pop
mov
pop
in
jp
push
xchg
cmpsl
pop
push
mov
movsl
jno
loop
jp
insb
jp
lods
jp
adc
jmp
ret
out
add
or
and
mov
mov
cmp
xlat
hlt
cmovge
mov
shufps
adc
rcll
xchg
js
push
adc
adc
xor
insl
in
fsubrl
pop
cmpsl
out
push
insl
clc
push
sub
push
push
inc
pop
xchg
or
movsl
iret
fs
sbb
outsl
test
imul
pop
push
add
in
test
cmp
icebp
testb
shlb
loopne
cmpsl
lea
xor
out
sarl
or
cmpb
dec
out
lods
lods
pop
cltd
mov
neg
rorl
jge
push
push
lods
dec
dec
out
sbb
xchg
mov
ljmp
xor
pushf
mov
pop
xchg
sub
ljmp
js
xor
mov
sahf
and
dec
jno
dec
imul
cmp
xchg
jmp
shrl
outsb
bound
pop
pop
mov
stos
xchg
imul
out
and
cmp
call
repz
psrlw
iret
cwtl
lock
orl
adc
dec
dec
mov
scas
xor
adc
push
dec
cli
jo
sbb
xchg
dec
jge
outsb
sar
fnsave
sub
std
loop
cmp
or
aas
pop
push
adc
jae
loope
xor
stos
cwtl
jo
jo
push
mov
pushf
fwait
mov
jecxz
cmp
and
ja
and
rcr
and
and
sub
neg
ror
not
add
lea
mov
adc
adc
mov
stc
cmp
repnz
pushf
call
icebp
into
call
rcrl
mov
or
cmp
sub
add
add
mov
jne
pop
mov
push
fs
add
xlat
dec
loopne
mov
fisubl
fsubrl
adc
movl
cmp
out
mov
xchg
lahf
mov
addr16
pop
out
dec
sti
sbb
cmp
icebp
cmp
aad
add
sahf
vsubps
mov
jg
rol
mov
inc
insb
inc
mov
jns
nop
add
ja
add
or
sbb
arpl
sar
or
mov
ret
xchg
in
jo
rcrl
in
mov
imul
lds
loop
data16
imul
in
fsubrl
mov
and
xchg
push
jbe
nop
xor
cmpsb
xchg
add
fidivrs
flds
js
fisttpll
andb
adc
push
outsb
mov
insl
inc
mov
sbb
faddp
out
push
stos
repz
rorl
jbe
sub
push
xlat
jl
cmc
cmpsb
inc
jo
xor
cmp
jmp
mov
imul
movsl
jns
js
push
fwait
loopne
outsl
notl
push
xchg
xchg
or
add
mov
fnstsw
cmp
fwait
imul
and
mov
sti
jno
xchg
xor
dec
or
ret
sub
lret
and
xchg
sub
fs
pushf
cld
insl
insb
mov
daa
mov
inc
xchg
ja
fcmovbe
cmp
xor
inc
addr16
shrl
or
push
les
test
stc
xchg
fdivr
outsb
inc
mov
or
push
push
add
fs
pushf
jno
mov
push
jmp
add
lods
js
out
mov
pop
push
imul
jge
out
xor
mov
xor
cmpsl
loope
jne
bswap
add
sbb
or
push
push
insl
insb
daa
xlat
jl
imul
ss
ss
sub
sbb
inc
in
jle
cmp
out
lock
dec
and
in
dec
out
cmpsl
movsl
lret
mov
jecxz
outsb
inc
mov
mov
test
fsubr
aad
pop
repz
imul
dec
or
sar
aad
or
fsubs
cmp
sbb
jecxz
jno
idivb
das
sahf
push
pop
mov
mov
inc
jb
sub
shl
mov
shrl
dec
xor
repz
orb
je
pop
mov
outsb
inc
mov
jae
xor
insl
lret
mov
lret
fcmovne
jne
ljmp
and
push
dec
fs
inc
inc
mov
mov
into
cli
sbb
invd
inc
lock
jle
lret
xchg
cmc
dec
stc
pop
cmc
daa
gs
mov
pop
imul
aam
push
in
or
jo
sub
hlt
or
pop
push
mov
sarl
test
das
shrl
jae
mov
mulb
sub
pop
adc
out
add
push
gs
jne
jb
outsb
je
imul
jns
add
mov
inc
mov
sbb
into
loope
xchg
pop
lret
mov
dec
pop
aam
pxor
lcall
mov
je
loop
lret
jecxz
jp
and
pop
jle
mov
scas
iret
pop
leave
and
add
iret
sub
and
out
mov
shl
lea
add
inc
stos
mov
add
addr16
test
ss
and
inc
test
sti
push
bound
push
xchg
or
add
adc
mov
ret
jle
lret
clc
sub
insl
pushf
xchg
jne
inc
aaa
stos
xchg
dec
fwait
aas
sarl
mov
and
sub
rcll
mov
mov
mov
add
lods
and
mov
pop
xorb
jle
aas
ja
pop
add
pop
adc
out
push
mov
mov
std
insb
pop
sub
in
shll
lods
xchg
jbe
fstps
aad
inc
adc
dec
mov
testl
jns
jo
inc
mov
pushf
lods
clc
aad
add
nop
sbb
mov
sbb
mov
fbstp
ljmp
xchg
jae
sub
pop
xor
shrl
mov
or
mov
nop
outsb
aad
push
popf
ljmp
divl
push
loop
fsubrs
jno
mov
call
and
nop
push
je
cld
push
popf
ljmp
mov
dec
and
inc
jg
cmp
lods
jmp
jmp
pop
and
mov
sub
popa
xchg
mov
and
ja
xchg
xchg
jl
jl
jg
inc
fs
sti
ljmp
repnz
xor
mov
pop
mov
loopne
data16
mov
mov
xchg
iret
dec
cmp
sbb
pop
pushf
sbb
push
cmovae
popa
mov
xchg
cmpsb
and
imul
inc
mov
jge
out
dec
es
fs
push
cmpsl
sub
jp
mov
lret
imul
ljmp
icebp
adc
lds
cmp
xor
imul
pop
cmp
in
add
inc
fidivl
dec
jl
test
mov
bt
bt
cmc
pushl
mov
pushf
shld
mov
cmp
cmp
pushf
push
push
movb
lea
jbe
cmc
rcr
shrd
mov
mov
shl
lea
test
dec
add
shld
shl
add
mov
add
sbb
adc
add
jmp
sub
mov
sbb
jecxz
add
addr16
adcb
inc
mov
bnd
es
adc
fadd
ret
nop
mov
or
rolb
movsl
xchg
or
daa
je
clc
or
push
cltd
push
daa
jecxz
int
mov
push
arpl
mov
mov
fs
lret
mov
fwait
adc
add
pop
je
inc
cmpb
loopne
jmp
test
pop
sub
xor
lcall
stos
ljmp
stos
xor
xchg
adc
add
fs
imul
add
jae
mov
shll
push
mov
add
imull
xor
push
xchg
insb
push
mov
cli
neg
shl
push
xor
and
jbe
bound
push
and
adc
bound
lods
xor
adcb
sbb
movsl
sarl
scas
xor
loopne
inc
es
cbtw
aaa
inc
cs
adc
mov
mov
imul
sbb
add
fnstcw
stc
int
adc
xor
call
push
rcr
pxor
shll
or
xlat
mov
inc
jno
pusha
call
cmc
mov
or
loopne
pop
std
sbb
jl
xchg
cwtl
mov
test
int
fucomi
mov
add
xlat
push
xchg
orl
xor
ret
aaa
cs
scas
imul
loope
adc
xor
mov
mov
inc
push
fbstp
repz
outsb
cmp
sbb
int
mov
add
ljmp
inc
mov
sbb
push
je
mov
andl
mov
imul
scas
sbb
cmp
push
xchg
inc
scas
mov
sbb
adc
xchg
cmpsb
ss
mov
pop
add
test
mov
jo
test
xor
mov
pop
and
pop
in
fimuls
scas
or
add
sti
mov
push
lea
jg
sub
xchg
push
jnp
lahf
add
addr16
mov
shrd
fstp
pop
jns
and
and
inc
outsl
outsb
fisttpll
test
imul
add
sarb
outsl
cld
imul
jae
cmpb
pop
scas
mov
or
movsb
push
test
or
and
iret
add
mov
push
loop
xchg
imul
push
dec
out
testl
fidivs
fs
repnz
icebp
dec
mov
mov
mov
movsb
inc
push
sbb
cli
sub
adc
jmp
cmp
fidivs
int
xor
fst
notl
and
push
aam
sahf
std
jg
test
sub
xor
xor
int
andb
fs
jge
jns
iret
js
test
inc
or
cmpsb
lock
push
aas
leave
push
pop
mov
adc
sbb
data16
loopne
xchg
or
adc
jmp
mov
or
mov
inc
repnz
popf
or
cmp
jmp
inc
or
mov
push
add
xchg
popa
dec
add
jmp
jbe
imulb
mov
arpl
gs
sarl
movsl
les
or
add
push
jb
xchg
xchg
jnp
imul
cmpsb
and
lahf
arpl
mov
or
mov
jbe
int
or
adc
pop
sbbl
mov
mov
jmp
scas
std
popf
daa
pushf
mov
lods
rcr
lds
scas
or
mov
push
mov
lods
or
bound
outsb
xchg
test
enter
jmp
xor
dec
push
jno
cmovbe
andl
mov
sti
adc
pop
js
push
scas
es
push
adc
call
push
insl
insb
cmp
mov
xchg
xchg
outsl
bound
xchg
ss
insl
mov
xchg
loop
inc
mov
ret
mov
lods
gs
or
mov
mov
jae
ja
mov
insb
push
mov
sub
cmp
stos
lds
ljmp
mov
mov
xor
jo
call
adc
mov
sub
inc
jb
jecxz
push
imull
inc
loope
xor
fldcw
sub
out
inc
out
sub
das
mov
and
insl
test
shrl
aad
xchg
lret
mov
repz
xor
pushf
pushf
pushl
lea
jmp
je
mov
mov
sti
cwtl
cs
daa
lock
cmp
hlt
inc
in
movsl
andl
add
clc
xchg
rorl
add
and
mov
mov
insb
daa
insl
pop
jp
cmp
add
mov
pop
xchg
fidivrs
xor
test
sub
js
jb
shrb
pusha
xor
movl
js
mov
adc
sbb
cmp
pusha
mov
pop
mov
xor
sub
sbb
add
shrb
test
pop
aam
mov
cld
mov
mov
pop
imul
ss
push
iret
stc
loopne
dec
mov
or
ds
fcomps
mov
jns
mov
fsubrs
leave
and
cmp
jns
add
sub
jne
xor
rol
add
xchg
mulb
sbb
test
fsub
cmp
test
subb
mov
cmpsb
push
jb
mov
shl
pushf
fcmove
mov
int3
loopne
dec
xchg
mov
jle
mov
decl
or
push
cmp
mov
outsb
aam
outsl
adc
repnz
in
arpl
fst
mov
fnsave
xchg
insl
add
adc
mov
pushf
es
fsubl
inc
mov
repz
mov
adc
mov
pop
jp
cmp
lods
sbbb
lea
push
scas
aas
xor
mov
ds
pop
and
dec
outsb
xor
inc
mov
xor
sbb
repz
addr16
jo
mov
mov
cmc
add
xchg
push
sbb
jns
mov
icebp
testb
and
cmp
sub
test
sub
or
std
push
daa
mov
xor
pushf
or
jno
sub
pavgw
mov
push
mov
cmp
hlt
fsubrs
daa
clc
inc
mov
jge
faddp
lahf
jbe
adc
ss
loopne
aam
xorl
dec
test
lock
js
ds
add
movsl
mov
std
jbe
int3
movsb
and
pop
mov
xlat
xchg
lahf
daa
lret
push
jp
mov
add
mov
in
xchg
jmp
aam
pop
push
fsubrl
jo
lods
jno
shrb
xchg
add
int3
and
test
jp
add
in
mov
mov
xor
fimull
push
push
sti
scas
test
shl
add
aam
inc
xor
or
push
imul
dec
imul
lcall
jb
cmp
add
fildl
out
add
sti
scas
gs
test
dec
stos
fwait
jp
mov
jns
jecxz
aam
cmc
lock
and
push
inc
or
mov
mov
cs
fidivs
xchg
dec
push
lret
shlb
stos
xchg
shl
lods
mov
cmpsl
inc
loope
cwtl
xor
xor
dec
adc
loope
or
dec
outsl
lgs
and
xchg
lods
dec
sub
cmpsb
insb
push
arpl
mov
negb
loope
cmc
out
repz
ficomps
int3
cmp
inc
mov
lods
mov
adc
cmpsl
scas
dec
cs
push
fwait
daa
mov
dec
jp
jbe
or
in
add
mov
sbb
gs
in
xlat
andl
in
aas
mov
push
negl
scas
scas
or
aaa
fucomip
pop
xor
adc
lcall
hlt
and
mov
bound
repz
rclb
cmp
cwtl
clc
push
outsb
movsl
pop
stc
mov
lds
nop
inc
xlat
jo
dec
cli
jae
bound
mov
mov
cwtl
jle
cmpsl
in
sub
rcr
inc
daa
fisttpll
jns
pop
push
mov
cmp
mul
out
in
mov
xor
dec
mov
push
movsb
mov
push
leave
aad
imul
outsl
cmp
mov
xor
arpl
inc
push
mov
mov
outsl
rcr
in
inc
mov
repnz
mov
xor
jbe
mov
and
or
cmc
sbb
loope
add
nop
ss
pop
mov
and
push
iret
subb
cmp
and
dec
dec
dec
dec
cs
insb
add
sarl
inc
mov
fnstcw
pop
cmp
mov
fbld
inc
clc
pop
mov
push
and
push
imul
adc
jnp
jle
rsqrtps
push
scas
xor
xchg
test
arpl
pop
pop
lahf
pushf
sti
add
pop
test
mov
sub
mov
add
test
mov
orl
repz
push
imul
and
int3
outsl
out
loope
adc
arpl
stos
pop
movswl
lea
in
cmpb
add
test
dec
adc
test
call
enter
daa
dec
or
out
ss
pop
jns
pop
xorb
jp
and
pop
adc
mov
ret
sbbb
bound
rcl
add
or
sbb
jge
mov
mov
jne
lahf
aas
mov
mov
negl
pop
das
xor
les
push
inc
aaa
or
test
shrb
xorl
mov
mov
test
push
sub
cmp
or
fmull
mov
or
ja
mov
sti
jl
mov
cmp
mov
add
sti
lods
dec
push
dec
mov
cwtl
xor
sbb
push
mov
into
mov
and
inc
movb
push
and
int
push
sbb
and
loop
pop
sbb
mov
mov
ret
mov
pop
inc
inc
mov
push
ret
xchg
pop
jmp
popf
xchg
jl
push
js
jge
adcl
jg
fadds
fchs
insl
jae
cmpl
cwtl
adc
cld
lcall
pop
pop
leave
fstps
xchg
xchg
mov
inc
hlt
add
cld
sub
clc
ss
xor
aas
and
xchg
xchg
lret
test
mov
mov
jp
add
jo
imul
shll
aam
sti
cmp
rcll
xchg
mov
xchg
mov
jae
push
stc
push
xor
nop
rclb
xchg
inc
addr16
shlb
cmp
cltd
aaa
lds
leave
push
dec
fstps
or
gs
test
mov
add
fcoml
add
and
out
add
jo
cld
jae
and
push
cld
ja
pushf
movsb
cwtl
lock
jg
mov
jge
es
aam
jmp
xor
faddl
push
enter
loop
xchg
and
jle
enter
sub
cmp
mov
cli
sbb
push
loop
ss
ja
lret
dec
jl
adcl
jecxz
dec
sbb
scas
dec
xchg
dec
pop
into
in
mov
xor
pop
or
jo
dec
pop
or
pop
leave
in
sbb
aaa
push
pop
sub
pop
les
mov
outsl
fistpll
mov
cmp
das
jnp
dec
sti
incb
mov
shl
outsb
push
out
nop
stos
push
mov
fs
mov
mov
xchg
mov
pop
inc
insb
stc
or
scas
mov
sti
rcll
cmp
les
sbbl
and
xor
pop
jmp
daa
in
xchg
ret
push
push
cmp
add
stc
push
pushf
cmp
pushf
jmp
inc
sarb
inc
mov
popf
adc
fwait
aaa
outsb
adc
adc
jne
ficoms
dec
mov
out
aad
mov
jle
movsl
sbb
sub
bnd
inc
in
cmpsl
mov
mov
fcomi
pop
ror
inc
push
xor
js
test
inc
jne
jb
push
jecxz
icebp
xchg
jo
adc
imul
push
jg
mov
int3
frstor
mov
cmpb
repnz
mov
jns
add
lcall
inc
mov
hlt
filds
out
dec
inc
movsb
xchg
or
sbb
push
std
adc
lcall
xlat
add
mov
leave
add
lcall
pusha
arpl
pop
imul
gs
stc
xor
push
in
loopne
jns
mov
stos
dec
xchg
adc
int3
ljmp
inc
add
rcl
sbb
sbb
xchg
push
in
movsl
xor
mov
jae
iret
loop
fs
jge
call
push
cs
inc
mov
fimuls
jle
mov
or
and
and
scas
mov
push
stos
push
scas
bound
cmp
sub
mov
ret
pushf
mov
mov
adc
pushf
stos
nop
xchg
cmp
ljmp
push
sub
pop
jmp
mov
add
cs
lret
jmp
mov
arpl
hlt
sub
ret
enter
xchg
push
shll
mov
sahf
fsubs
pop
and
inc
inc
mov
addl
jmp
xor
mov
mov
and
out
lahf
xor
jne
cmp
and
adc
shlb
lret
stc
jo
in
cmc
enter
dec
mov
rolb
push
push
js
arpl
gs
js
add
ja
inc
mov
xchg
loope
mov
mov
xchg
cmp
cmpsl
adcl
xorb
dec
adcb
mov
leave
or
ss
lret
loopne
lea
mov
push
ret
jl
mov
test
scas
je
add
mov
loopne
int3
push
cmp
loop
frstor
loope
out
cmp
sub
js
repnz
sbb
test
shll
mov
push
lea
xchg
scas
mov
test
adc
mov
pop
jnp
lods
imul
push
pop
nop
sbb
aam
daa
jg
xchg
ret
int3
mov
bound
das
lods
loopne
xor
or
in
mov
fs
je
jns
arpl
xchg
or
mov
ss
mov
mov
data16
andl
leave
push
sarb
sti
cli
dec
and
cmpsb
xchg
lea
inc
dec
into
fcmove
mov
jmp
test
mov
xchg
mov
enter
mov
push
addr16
cmp
ret
fiaddl
repnz
test
cli
adc
jg
out
rcll
popf
loop
xlat
sub
add
lds
mov
aam
nop
mov
jae
mov
and
sub
movsb
aam
jmp
inc
mov
jmp
sti
or
cwtl
fdivrs
sbb
mov
idiv
arpl
mov
mov
out
sbb
inc
faddl
pusha
jbe
mov
mov
inc
xchg
inc
stos
sub
enter
cmp
popa
loopne
mov
jnp
inc
mov
xchg
insb
dec
ljmp
inc
fsubs
fldl
inc
adc
mov
mov
out
mov
push
icebp
aaa
lret
ljmp
mov
aas
rcl
pop
setb
lret
cs
jle
xor
scas
inc
scas
jo
cli
repnz
inc
xor
mov
addr16
cmp
adc
add
jle
jne
shrl
xchg
lea
je
pusha
pushf
lea
jmp
out
leave
inc
inc
mov
cmp
rcl
in
addr16
ja
sub
popa
andl
daa
pop
rorb
adc
mov
and
sub
popf
cmp
insb
lret
in
sbb
or
loopne
mov
xchg
stos
ret
mov
mov
mov
jae
jmp
fdiv
testl
xchg
inc
aas
shrb
jbe
mov
rcrb
jle
bt
stc
xor
jmp
fwait
shr
inc
inc
mov
lods
lock
stc
xchg
lea
test
out
pop
out
push
sub
fucom
cmc
cmp
jno
mov
addr16
xchg
aad
repnz
sbb
jecxz
fdivr
xor
mov
mov
lret
lcall
ret
clc
aad
movsb
xor
dec
fdivrs
pop
xlat
mov
ja
pop
xor
std
std
sub
sub
popa
xchg
rcl
pop
lock
testl
xor
dec
mov
dec
aad
mov
cmp
xlat
mov
lods
push
loop
mov
scas
ja
subb
imul
mov
jle
jcxz
call
pop
mov
or
and
filds
dec
and
push
and
xchg
xchg
push
and
pop
mov
add
jne
jmp
adc
ss
imul
push
cmpsl
popa
fwait
push
popf
lods
jbe
shlb
cmp
fdivs
into
daa
cmp
or
addr16
shll
xchg
test
inc
jecxz
mov
mov
fninit
lret
repnz
cmpsl
addl
ss
cmp
mov
adc
test
stos
sti
cltd
jle
dec
inc
inc
mov
mov
sbb
jns
sub
adc
push
rol
les
divb
sub
and
mov
and
add
lods
es
ljmp
add
cmp
xchg
ret
xor
sub
jl
ret
jg
testl
pop
xchg
xor
pushl
lahf
lods
and
stos
outsl
movsl
sbb
lods
jl
inc
inc
mov
pop
test
jbe
lcall
outsl
cmp
jno
call
xor
es
add
int3
jmp
fwait
loope
dec
push
xor
mov
jge
jp
decb
test
scas
cmp
aam
rcll
sbb
jbe
sahf
rcrb
or
stos
aas
es
out
fdivrs
pop
dec
xchg
outsl
push
pop
idivl
repz
rcrb
mull
in
sbb
imul
nop
mov
movsl
inc
inc
mov
in
aaa
in
in
test
mov
pop
mov
add
xor
jge
repnz
adc
fisttpll
and
pop
or
popa
cmp
repnz
jge
pusha
push
stos
mov
jns
mov
dec
pop
int
shrl
pusha
insl
nop
xor
callw
mov
pop
movsb
nop
mov
xchg
mov
scas
in
in
fwait
stos
ljmp
xchg
ret
mov
cmp
sub
add
or
xchg
push
pushf
test
xor
inc
mov
mov
sbb
push
jb
and
dec
inc
mov
icebp
aas
cli
xor
push
or
addl
fsubrs
xchg
mov
pop
test
push
jb
pop
xor
xchg
lret
adc
mov
dec
pop
fwait
jne
jp
or
fisttpl
inc
push
fisubrl
jno
and
or
and
outsb
or
jo
in
les
sub
fwait
ret
cmpsb
les
fstpt
xchg
clc
imul
mov
seta
lea
push
movl
call
pusha
lea
je
call
sub
xchg
jecxz
jbe
pop
xchg
and
cmp
xchg
dec
xchg
ds
inc
mov
push
sti
stc
cmpsb
cli
fwait
mov
jno
std
fdivrl
xchg
dec
mov
mov
push
fists
pop
push
std
jecxz
and
sbb
jmp
loopne
adc
idiv
adc
int3
adc
js
les
loope
cmpsl
enter
sti
imul
pushf
jmp
inc
mov
mov
clc
in
mov
mov
sub
inc
mov
sbb
and
push
fwait
dec
stos
mov
ja
or
out
int3
lock
sub
sbb
repnz
inc
mov
push
mov
push
sar
cmp
sti
cmp
mov
out
push
mov
fwait
jno
sub
mov
call
int
push
jmp
sub
xchg
or
adc
dec
scas
or
mov
jae
lcall
dec
or
imul
lds
push
imul
ret
mov
dec
outsl
inc
fists
dec
and
pop
jge
fbld
mov
mov
sbb
inc
mov
cwtl
add
cmp
daa
xor
sbb
adc
aas
pop
or
scas
or
lea
daa
jmp
std
xchg
out
in
out
adc
fst
inc
fucomip
xlat
repz
dec
arpl
jae
pop
xor
imul
mov
insb
push
into
int3
sub
mov
pop
dec
js
pop
inc
push
daa
adc
push
push
inc
clc
dec
inc
popa
mov
inc
inc
push
in
aas
cmp
in
loopne
lahf
adc
inc
xor
fildl
pop
sub
in
int
sub
insl
daa
jmp
sub
aas
or
in
int3
and
aaa
jmp
and
pop
sbb
decl
sti
out
jecxz
dec
fcmovne
mov
dec
mov
mov
mov
jge
jnp
arpl
pop
dec
pop
dec
inc
inc
inc
inc
ds
cmp
sub
and
and
dec
sbb
or
push
add
add
cld
cli
ljmp
fcmove
enter
ret
mov
dec
movsb
mov
mov
addb
push
bound
std
pop
pop
sahf
cmpxchg
ret
dec
lcall
push
addb
mov
sub
sub
lods
inc
inc
lea
or
daa
lret
ds
outsb
and
pop
out
std
add
or
push
mov
pushf
leave
sahf
xor
aam
decb
dec
fs
jmp
cltd
sahf
push
test
iret
mov
mov
dec
jnp
and
dec
push
sub
dec
mov
shlb
dec
cmpsb
outsl
pop
mov
das
inc
and
aam
pop
scas
sbb
xchg
test
sbb
mov
fdivl
xor
cwtl
dec
xchg
sub
xchg
dec
adc
lea
dec
add
test
dec
jb
mov
cmp
adc
scas
popf
xchg
lcall
inc
adc
dec
dec
xor
scas
xor
inc
lret
mov
rclb
decb
decb
push
cltd
call
dec
movsb
fcomps
mov
add
lds
dec
arpl
negl
std
ficoms
dec
push
mov
adc
mov
jl
iret
out
test
or
mov
popa
dec
fisubs
data16
dec
mov
shll
mov
mov
stc
jecxz
cmp
je
push
incl
lahf
push
xlat
movsb
mov
int3
pop
imul
mov
pushf
mov
pop
push
es
loop
mov
mov
fnstsw
jbe
lea
dec
mov
in
fs
test
outsb
int3
repz
faddl
repnz
cmpsl
and
and
shl
dec
jnp
sbb
dec
dec
lahf
xchg
pushf
jb
mov
ret
shll
jae
or
jbe
push
mov
push
shrl
add
stos
xchg
sbb
dec
and
rol
inc
jno
add
and
mov
xor
inc
lds
mov
in
jo
xor
aaa
xchg
mov
and
arpl
aas
repz
enter
add
sahf
iret
pop
xor
jmp
stc
jo
fildll
pop
int
lods
cmpsb
pop
aaa
mov
aas
mov
das
mov
mov
in
mov
pop
adc
jb
daa
lods
iret
inc
inc
clc
out
adc
ljmp
pop
dec
das
mov
jne
out
das
std
and
inc
or
jge,pt
daa
ss
pop
xchg
mov
push
or
inc
inc
push
xor
xor
aaa
push
ret
ja
xor
cmp
ret
pushf
cmp
mov
jmp
iret
push
cwtl
out
cmp
push
mov
insl
push
int3
outsl
ja
ss
dec
insb
sub
subl
loope
or
push
jl
test
aaa
shrb
imul
cli
pop
xchg
shll
add
loope
icebp
inc
fwait
push
xlat
dec
aas
dec
fs
js
hlt
scas
mov
scas
sbb
inc
pusha
fdivl
adcb
jge
mov
mov
or
subl
xlat
inc
repz
mov
outsl
mov
andl
scas
ljmp
push
jge
mov
daa
push
pop
pop
imul
jmp
loopne
or
jne
cmpsl
dec
push
daa
mov
xor
jle
lods
js
sar
inc
pop
dec
js
dec
add
fisttpl
in
les
dec
fisubrs
pop
rcll
fiadds
aaa
leave
sub
jle
sarb
sahf
dec
push
bound
xor
into
scas
push
push
sbb
sub
xchg
sub
inc
rolb
mov
dec
and
repz
dec
mov
mov
outsb
movsb
mov
jo
frstor
xchg
insb
xchg
xchg
shlb
mov
dec
and
int
and
arpl
outsb
pop
mov
jbe
inc
xchg
repz
imull
push
push
and
xchg
outsb
in
push
lret
inc
ds
scas
fcomps
mov
daa
sbb
xor
dec
repnz
dec
divb
int
movsb
mov
mov
sbb
xchg
je
int3
das
cmp
or
adc
inc
pushf
fwait
inc
push
sbb
adc
jp
hlt
xchg
sub
jmp
mov
dec
test
rorl
xchg
xor
and
out
outsb
insb
jp
push
pop
and
mov
dec
mov
push
mov
pop
test
push
add
out
es
aaa
lahf
and
cmp
push
add
sbb
push
inc
adc
nop
adc
insb
inc
negb
orb
sub
outsb
ret
xor
pop
inc
inc
repz
int3
jno
sti
dec
into
outsb
dec
push
loop
stos
jle
mov
and
sub
adc
filds
inc
jae
into
iret
sbb
mov
lods
pop
xchg
pop
test
xor
push
push
xor
xor
dec
sar
pop
mov
push
iret
push
mov
cmpb
sbb
leave
int3
pop
jbe
outsb
or
mov
cmp
in
outsl
fildl
pop
mov
xor
jl
aaa
xchg
out
sub
inc
aas
and
bound
pop
in
adc
xor
std
mov
dec
and
jb
nop
push
dec
out
mov
dec
pop
decb
into
pop
les
xorl
sbb
bound
push
sbb
mov
js
stos
jbe
inc
sbb
out
mov
inc
adc
iret
orb
xor
outsl
outsl
push
sub
pop
sbb
pop
mov
mov
jle
mov
jp
dec
or
adc
sbb
sbb
cmc
xor
xchg
je
int3
mov
cmp
pop
push
inc
or
and
pop
scas
cmp
dec
cmp
xor
xchg
fcomip
movsl
sub
mov
cmp
push
push
mov
mov
je
out
xor
mov
out
xchg
lea
cmp
fisubs
adc
xor
das
enter
mov
mov
clc
inc
dec
inc
push
cmpsl
movsl
pop
xchg
sub
push
je
aas
stos
out
xor
testl
xchg
aaa
or
insb
mov
xchg
xor
outsb
xor
outsb
pop
push
push
das
call
cmp
mov
sbb
filds
xor
mov
jmp
fs
lods
dec
cmc
in
scas
int3
ja
inc
push
push
mov
inc
jg
mov
push
sar
xchg
imul
push
mov
inc
fstpt
lea
and
dec
inc
or
out
ss
cs
decl
bound
push
aas
pop
cmp
sub
inc
xorl
xor
dec
pop
pop
stos
iret
mov
push
cs
sub
das
jns
cmova
xchg
pop
and
roll
xor
aas
movsb
inc
test
pusha
out
fmulp
lahf
pop
pop
repz
cmpsb
inc
int
or
mov
pop
xor
pusha
cmc
inc
repz
int3
fiadds
outsb
dec
mov
xchg
push
pop
in
pop
outsb
push
cmpxchg
sub
push
dec
es
mov
mov
test
add
movzbl
es
aaa
and
aas
mov
pusha
fisttps
or
sti
inc
jbe
pop
push
mov
sub
push
testl
inc
pop
push
cmp
out
pop
rcrl
cmp
mov
inc
push
pop
cmp
notb
out
sahf
shll
mov
test
mov
jo
inc
scas
xchg
fimull
push
shrb
push
cmpsb
out
addr16
add
adc
aas
stos
fisttps
xor
pop
lret
pop
cmp
inc
ja
inc
fs
aad
cld
jle
cmp
pop
ja
das
sub
inc
add
xor
pop
inc
jecxz
lods
lret
int
in
mov
outsl
dec
dec
push
ja
mov
data16
inc
add
sub
in
test
pop
cmp
dec
into
in
inc
ds
movzbl
scas
pop
ljmp
push
loope
adc
push
int3
add
and
dec
fisubs
inc
scas
xor
stos
inc
push
push
bound
popa
enter
inc
dec
push
inc
fs
jnp
cli
mov
ds
adc
inc
pop
push
cmp
push
and
inc
sub
into
pop
xor
inc
mov
add
dec
xor
lret
jbe
xor
and
push
add
pop
mov
adc
cld
dec
push
and
push
pushl
push
pop
bound
sub
repz
outsl
scas
mov
incl
repz
dec
mov
mov
out
pop
mov
dec
nop
dec
push
mov
iret
incb
inc
popa
pop
fidivrs
iret
cmp
or
dec
loop
sahf
inc
into
into
in
push
dec
push
lods
dec
scas
inc
pop
push
das
dec
orb
mov
pop
dec
iret
adc
jmp
push
iret
pop
dec
push
ret
push
fists
mov
outsb
adc
cmp
fimull
rcr
cmpl
mov
mov
addr16
jmp
addl
push
imull
pop
dec
sbb
scas
dec
dec
cmp
mov
dec
rorl
adc
fs
cmp
cmp
push
repz
outsl
fistps
xor
stos
dec
push
into
dec
push
fwait
mov
add
mov
pop
push
insb
push
stos
pop
cmp
inc
int3
or
mov
sti
mov
mov
and
push
scas
sub
int3
and
test
inc
cmp
mov
inc
dec
push
and
iret
mov
xchg
inc
push
dec
enter
mov
push
jle
mov
push
lods
das
in
push
decl
mov
dec
inc
or
inc
inc
data16
mov
xchg
imull
outsl
cs
push
inc
fists
mov
dec
inc
dec
scas
ss
sub
leave
stos
pop
outsb
pop
ds
push
lret
pop
lock
xchg
push
push
repz
pop
out
out
addr16
pop
jmp
dec
call
lahf
push
dec
mov
mov
fistpll
or
into
stos
inc
ds
xchg
xor
ret
push
push
fisttpll
dec
fwait
adc
jg
mov
scas
xchg
out
pop
mov
push
outsl
aad
cmp
sbb
xorl
push
inc
cmp
pop
push
sub
xor
mov
dec
pop
push
push
out
movq
cmp
or
lahf
push
and
cmp
and
outsb
jae
out
outsl
mov
dec
sub
nop
xor
push
imul
stos
xor
pop
xor
push
fstps
dec
pop
push
stc
adc
dec
aad
xlat
bound
mov
rorl
into
repnz
push
das
rorl
lock
mov
mov
push
in
pop
jbe
dec
test
je
push
aaa
and
dec
jmp
pusha
lahf
jp
ljmp
or
inc
jge
mov
sub
data16
incl
pop
into
dec
mov
movsb
leave
mov
bound
pop
int3
sub
cmp
ds
and
hlt
inc
bound
inc
test
dec
push
mov
mov
inc
bound
push
dec
xor
push
pop
lahf
adc
push
dec
sub
outsb
out
sbb
stos
pusha
fildll
fstpt
movhps
cmp
dec
xchg
xor
data16
outsb
into
loop
das
dec
repz
or
push
lcall
dec
cmp
leave
cmp
lahf
push
push
jle
insb
mov
inc
mov
dec
mov
add
dec
push
orl
mov
arpl
add
dec
ds
sahf
test
add
mov
mov
jle
or
adc
dec
pop
pop
inc
dec
push
outsl
into
sub
dec
testb
inc
dec
fldt
adc
jns
test
dec
daa
dec
and
inc
push
push
mov
and
nop
dec
mov
sub
jb
push
add
je
push
cmp
adc
dec
mov
pushw
push
daa
ret
jp
and
dec
repz
sub
sub
pop
push
pushf
jb
into
mov
inc
dec
dec
pop
adcb
push
jp
scas
cmp
les
mov
jge
mov
divl
pusha
push
sarl
insb
movsb
aas
cmpsb
dec
je
adc
bound
cmp
jnp
push
outsb
or
pop
mov
iret
mov
dec
push
test
outsb
jmp
inc
fsts
xor
mov
shll
sbb
mov
aaa
adc
cld
orb
cmp
dec
sub
jo
push
into
push
mov
dec
ss
dec
and
push
mov
jle
lahf
xor
xor
xchg
jbe
jo
stc
fmull
push
push
out
dec
push
int3
shlb
xchg
push
cli
fs
in
mov
inc
outsl
jle
push
xor
cmp
push
in
nop
fimuls
cmp
dec
iret
or
into
into
hlt
outsb
imul
sbb
inc
into
cmp
decl
adc
inc
jb
and
js
bound
sbb
add
das
lods
dec
cmp
ljmp
pandn
data16
sarl
add
inc
dec
add
fildl
and
xor
jne
adc
scas
dec
push
push
sbb
out
add
cmpxchg
cmpsb
xlat
cmp
and
add
sub
xor
jne
mov
push
insb
jg
push
mov
push
dec
push
roll
jge
ljmp
roll
push
into
pusha
out
pop
jbe
pop
std
push
sub
dec
mov
aas
jg
sub
pop
out
cmp
push
dec
mov
inc
add
sub
push
adc
fnstenv
repz
daa
lcall
pop
out
lds
add
sbb
sub
repz
inc
inc
cmp
adc
dec
loop
dec
enterw
cmp
lret
in
xor
mov
das
inc
aaa
into
inc
jmp
mov
push
test
inc
aam
mov
lahf
adc
cmp
jmp
clts
cmp
aad
je
push
sarb
addb
dec
out
rorl
cmp
rolb
sbb
or
rclb
dec
dec
jmp
das
inc
aaa
into
ret
pop
push
mov
pusha
mov
orb
repz
add
cmp
pop
xor
jg
sub
out
mov
fucomip
fists
pop
adc
frstor
inc
dec
xor
xor
inc
es
jp
dec
in
ja
pop
mov
repz
arpl
pop
push
inc
push
inc
dec
out
mov
push
jbe,pn
outsb
cs
mov
dec
mov
shl
cmp
roll
mov
fidivrs
cmp
pop
sub
pop
jmp
inc
mov
sub
push
jno
mov
scas
xor
mov
mov
mov
in
inc
push
sbb
adc
dec
cmp
pop
sub
push
pop
shl
xlat
mov
pop
in
jl
mov
dec
in
add
movsb
leave
mov
pusha
repz
in
lea
inc
xchg
nop
movaps
int3
xchg
pop
push
jmp
add
pushf
movups
iret
mov
xlat
dec
cmp
add
mov
dec
inc
stos
xchg
jo
mov
pop
push
mov
pop
iret
aaa
adc
inc
rep
pop
sub
pop
shrb
shrb
cmc
sub
les
fwait
dec
xlat
sub
inc
mov
out
inc
cltd
cs
adc
int3
cmp
dec
push
push
movsb
mov
outsl
and
xchg
lods
pop
outsl
enter
arpl
jle
xor
dec
push
inc
subl
dec
inc
xchg
mov
mov
dec
xchg
call
push
sbb
iret
dec
sahf
leave
fisubrl
cmp
ret
add
xlat
mov
inc
outsb
ret
pop
lret
in
push
pop
push
inc
xlat
push
jle
sbb
sarl
lea
loope
ret
into
xor
mov
das
pop
push
outsl
fwait
pop
xor
mov
dec
inc
mov
jbe
dec
sbb
movsl
mov
addr16
mov
dec
jnp
pop
mov
or
int
mov
pop
pop
mov
xor
lea
adc
into
outsl
jl
add
pop
push
mov
pop
push
xchg
test
push
pop
outsb
jp
mov
int3
fidivrl
mov
jb
cs
insb
in
addr16
loope
fidivs
dec
ficoms
negb
pop
mov
daa
es
cmc
push
inc
mov
addr16
in
iret
push
into
jp
fldz
in
shlb
jle
lea
out
es
and
push
out
jmp
mov
push
pusha
filds
inc
pop
std
jle
and
lcall
testb
xor
leave
xlat
push
inc
dec
and
into
cmp
sahf
sbb
pop
and
fwait
inc
and
lahf
push
lahf
add
test
cs
out
arpl
repnz
mov
fisubrs
push
sub
push
and
stc
insb
mov
mov
xchg
adc
imulb
fucomi
add
cmpsb
xlat
jle
mov
and
dec
daa
dec
mov
pop
shr
mov
lahf
mov
cmpsb
cmp
sbb
jge
out
into
jae
cmc
inc
sub
int
addr16
fiaddl
ret
and
xchg
shlb
xchg
mov
insb
pushf
stos
fdivp
xchg
jecxz
xchg
aas
adc
sbb
xor
inc
scas
push
xor
push
mov
add
push
dec
add
adc
out
jmp
mov
aad
fwait
mov
xchg
jecxz
testl
fs
inc
dec
outsb
lret
outsb
andb
jecxz
cli
test
sub
das
push
sub
pop
ret
daa
xchg
in
sub
iret
push
inc
out
dec
dec
push
cmpsb
xchg
adc
out
push
mov
mov
pop
scas
or
int
lods
insl
sbb
cmpsl
insb
psrld
or
mov
jns
dec
or
add
into
or
pop
negl
inc
xchg
mov
push
mov
stos
pop
inc
cmpsl
inc
dec
in
outsl
xchg
jne
and
inc
out
xchg
popf
xor
outsl
std
fwait
sub
adc
sub
outsl
inc
popf
lea
ds
mov
add
iret
push
push
lcall
cmc
jecxz
or
sub
add
and
imul
mov
mov
js
es
aas
sub
out
sub
cld
leave
aad
xchg
pop
adc
xlat
into
mov
mov
add
jle
push
enter
pop
and
fidivrs
sub
dec
push
pop
sbb
out
and
cld
inc
rolb
ret
pshufw
fidivrs
je
out
cmp
out
push
dec
mov
or
mov
mov
add
adc
fisttpll
jb
fisubs
inc
cmp
dec
mov
aad
pop
fnstenv
mov
lahf
and
fs
test
mov
test
mov
test
jbe
mov
push
xchg
mov
cmp
inc
test
jo
cmp
cmp
mov
inc
and
push
inc
lds
inc
andb
std
mov
scas
cmp
stos
pushf
arpl
inc
jmp
rsqrtps
daa
mov
inc
pop
sbb
mov
data16
daa
push
mov
std
dec
dec
pop
sbb
inc
addr16
push
pop
je
cmp
std
pop
out
sbb
inc
lcall
jecxz
shrl
outsl
inc
popf
fildll
mov
dec
sub
adc
push
pop
into
push
inc
pop
imul
das
inc
pop
aas
dec
push
stos
inc
inc
or
mov
sbb
mov
inc
lret
into
adc
adc
jg
rorb
push
jle
pop
and
cmp
iret
pop
scas
jmp
jmp
fs
dec
mov
mov
inc
jae
inc
flds
dec
inc
mov
cld
pop
dec
sub
sub
cs
or
adc
dec
aas
cs
dec
push
add
scas
push
push
mov
sbb
inc
pop
or
dec
jmp
dec
push
inc
cmp
dec
dec
adc
shrl
sub
bswap
adc
int3
or
mov
cmp
dec
jmp
aas
xchg
dec
outsb
mov
cmp
push
sub
pop
mov
sub
sub
add
xchg
or
rol
push
ljmp
int
rol
push
sub
cmp
ds
push
sub
cmp
pop
rol
push
sub
cmp
les
sub
cmp
pop
cld
dec
sub
dec
or
into
mov
cwtl
jl
int
push
sub
cmp
sahf
rol
push
xchg
mov
push
cmp
pop
rol
stos
icebp
sub
or
aam
push
icebp
sub
or
fadd
jb
insb
push
cmp
mov
insl
push
cmp
mov
bound
dec
push
sub
cmp
mov
sub
cmp
mov
sub
cmp
mov
sub
cmp
pop
rol
push
icebp
insb
push
cmp
mov
mov
sub
cmp
mov
sub
cmp
mov
sub
rcll
aas
test
push
scas
dec
add
xchg
or
rol
push
iret
xchg
or
rol
push
insb
push
cmp
and
sub
cmp
mov
sub
cmp
pop
lds
sub
cmp
sahf
rol
vcvtpd2udqx
jo
cmpsb
scas
scas
mov
sbb
inc
int
push
pop
mov
bound
inc
adc
lret
xor
inc
popa
add
jae
ret
xchg
cmpsb
and
or
jne
pop
and
cmpsl
add
stos
sub
sbb
test
pusha
std
adc
push
or
push
shlb
lret
ret
jl
cltd
data16
lds
stos
xchg
or
rclb
xor
lret
mov
outsl
or
or
lock
aaa
ljmp
js
inc
cld
pop
sub
mov
loope
shll
sbb
cmp
dec
push
outsl
jl
out
popf
adc
aaa
sbb
les
or
or
inc
inc
inc
cmp
or
add
imul
aad
test
icebp
xor
mov
daa
and
jp
lea
add
movsl
push
jmp
ret
test
xchg
mov
add
lds
cmp
dec
and
xchg
in
fcoml
stos
lcall
dec
fdivrs
mov
xchg
push
inc
and
jg
push
cmp
mov
aam
pop
imul
mov
lret
outsl
dec
outsb
pop
call
mov
inc
inc
sbb
inc
sbb
fmuls
push
pusha
aas
shlb
aaa
mov
imul
cwtl
dec
mov
add
mov
mov
mov
outsl
mov
pop
dec
inc
mov
or
dec
xor
mov
mov
mulb
mov
adc
jns
mov
sbb
jmp
mov
rcrl
dec
daa
sub
pslld
hlt
cvtpi2ps
lcall
cmp
xor
inc
pop
fisttpl
test
dec
jns
mov
add
xor
inc
ds
loopne
mov
cmc
inc
movlps
xor
push
pop
fsub
popa
leave
inc
dec
pop
inc
andb
dec
fs
scas
xor
out
xor
inc
inc
lds
fadds
pushf
push
pusha
std
int
pop
fldcw
inc
or
pop
shrl
adc
mov
cltd
stc
xor
or
or
or
rol
pop
enter
pop
pop
mov
mov
pop
cwtl
xor
incl
pop
add
sub
xor
inc
or
jg
inc
xchg
jnp
inc
mov
das
sub
mov
and
mov
xchg
pop
push
out
pop
pop
in
popw
adc
xchg
and
xor
sbb
lret
sbb
leave
lods
cmp
inc
fbld
scas
jg
out
call
xor
arpl
xor
pop
dec
or
sarb
xor
jb
out
adc
push
xor
sub
inc
jg
ss
js
insl
mov
cli
xchg
or
les
add
lahf
inc
aas
out
sbb
aas
push
xchg
aas
fistpll
jmp
push
les
pop
jnp
test
push
cmp
xor
add
lods
outsb
dec
sbb
decb
mov
sub
lcall
daa
xlat
ljmp
scas
xchg
pop
leave
push
push
jne
cmp
call
cmp
ja
xchg
leave
repnz
ds
jg
negl
mov
outsb
xor
cmp
mov
cmp
daa
xchg
out
cmpsl
jne
mov
xor
inc
mov
mov
xchg
push
xor
fbld
fistps
mov
test
jae
gs
pop
lods
stc
pop
dec
push
jecxz
dec
dec
pop
arpl
and
jae
xor
jl,pn
test
pushl
xchg
adc
dec
pop
mov
stos
inc
lret
cmp
test
push
inc
aad
pop
adc
jp
stos
fildl
ljmp
test
sbb
cmp
roll
aas
roll
and
mov
push
imul
cmp
fidivrs
adc
dec
js
loope
aas
outsl
xor
mov
orb
xchg
dec
cmp
nop
mov
cmpsl
cmp
xor
xor
scas
test
xor
aas
sbb
sub
scas
es
repz
les
mov
sbb
or
xchg
in
fsubrp
std
xchg
jmp
jge
mov
add
ljmp
pop
xor
sbb
insb
inc
cmpsb
mov
mov
test
imul
leave
shlb
xor
scas
sbb
stc
dec
jp
sub
jl
push
jnp
mov
jbe
dec
jecxz
cmpsl
push
nopl
pop
popw
push
xor
dec
das
inc
jbe
clts
dec
mov
dec
ljmp
push
inc
add
stc
outsl
cmp
test
outsb
push
sub
gs
jle
fbstp
lods
mov
insb
imul
scas
insl
push
pop
push
dec
jb
fldl
add
test
mulb
xor
sbb
mov
sbb
cmp
dec
sub
pop
stos
pop
dec
and
cs
xor
incl
xchg
push
push
and
fisubrl
adc
testb
sahf
adc
insl
mov
sub
inc
negb
addr16
xchg
pusha
test
inc
sub
mov
sahf
mov
jle
mov
cmpsl
out
fistpll
mov
testl
inc
add
in
addr16
movaps
cmp
dec
sarl
sahf
xchg
dec
xor
mov
out
dec
orl
pop
out
cmp
ret
inc
leave
push
mov
pop
or
iret
pushaw
lcall
imul
mov
mov
cmp
gs
out
insb
adc
lahf
pop
add
incl
out
cmp
mov
pop
fidivrs
inc
mov
or
das
pop
mov
or
and
cmpsb
das
imul
std
mov
ds
lahf
pop
cmpsl
xchg
mov
cmpsl
xor
daa
daa
mov
pop
xchg
leave
cltd
pop
push
pop
xchg
mov
sub
scas
jp
xchg
and
pop
adc
stos
xchg
dec
jb
inc
jg
push
or
and
repz
add
shlb
arpl
mov
mov
mov
mov
jne
sbb
pop
shrb
lea
inc
leave
and
ret
sbb
xchg
mov
and
mov
or
lahf
pop
in
mov
ret
and
push
ds
mov
xchg
fisttps
leave
aas
mov
iret
push
faddl
mov
push
cmp
mov
xchg
mov
sbb
cs
push
xrelease
shll
loopne
jge
cmp
pop
or
xor
ret
jmp
adc
arpl
outsl
or
call
dec
adc
cmp
dec
imul
out
cmp
sbb
mov
std
popf
cmc
cmp
fdivl
pop
aas
in
push
daa
into
in
sub
and
xchg
lret
jmp
jnp
mov
dec
push
ds
inc
out
dec
cli
ljmp
and
fiadds
sub
push
out
jecxz
and
pop
lret
xor
inc
cmp
popl
dec
inc
out
arpl
out
ret
psrld
inc
test
ss
inc
dec
add
cmp
jecxz
or
int
inc
adc
mov
jecxz
sub
filds
jae
pop
test
testb
outsl
orb
pop
loop,pt
js
inc
loop
pop
daa
mov
das
cmpsl
test
gs
sarl
bts
sub
mov
inc
scas
dec
jbe
fisttps
lcall
rclb
sahf
les
push
aad
mov
fisubrs
dec
std
fisttps
dec
ss
xchg
hlt
addr16
jge,pn
testl
cmp
add
aas
sbb
out
sub
pop
pop
mov
int3
or
or
xor
mov
hlt
and
ljmp
mov
lcall
aaa
jg
aam
aaa
aas
bswap
xor
mov
test
cmp
mov
iret
fbld
jmp
dec
push
mov
gs
xchg
adc
mov
int3
aam
add
sahf
sahf
sbb
cmp
mov
movsbl
inc
jle
fs
roll
jnp
in
mov
test
packssdw
outsl
daa
rcrl
scas
dec
ja
push
mov
paddd
inc
sub
fnstsw
dec
add
outsl
mov
push
aas
pop
fildll
pop
out
mov
lret
sbb
inc
cmc
cmp
and
call
loope
mov
aaa
ret
cmp
xor
aaa
gs
cmpsl
pop
mov
mov
out
sbb
mov
lahf
ljmp
cs
or
ss
xchg
aas
pop
out
lahf
daa
add
add
addr16
inc
adc
scas
xor
and
fcoml
in
pop
inc
or
mov
xchg
outsl
adc
or
arpl
push
inc
or
and
out
int3
iret
push
aaa
and
fidivrl
das
popl
sub
das
std
inc
dec
xor
test
sub
or
test
or
setne
push
mov
cmc
scas
stos
fstpt
lret
loope
addl
add
sbb
in
leave
sbb
mov
dec
ret
in
aas
std
inc
out
jns
scas
les
frstor
and
scas
jmp
xlat
ret
cs
xchg
pop
mov
sar
xlat
rorl
mov
outsb
mov
dec
imul
out
bound
mov
out
pop
inc
push
adc
cmpsl
aaa
xchg
or
jbe
scas
cmpsb
mov
adc
lcall
ja
fistps
in
pop
ljmp
mov
roll
inc
mov
outsl
out
mov
lahf
sbb
push
cmpb
sbb
jnp
pop
int3
dec
and
cltd
mov
or
mov
fimull
lods
pushl
inc
clc
orl
repnz
mov
push
bound
das
shrl
mov
leave
addl
add
inc
stos
adc
std
lret
stos
cmpsl
mov
mov
pop
arpl
sbb
mov
pop
cmp
adc
cmpxchg8b
adc
inc
out
sti
es
and
das
xchg
mov
leave
xchg
int3
std
xchg
dec
jae
xchg
imul
lds
push
imul
and
into
jmp
cmp
fildll
aam
lahf
inc
mul
jns
ss
pop
mov
cmp
xlat
push
pushl
inc
leave
xchg
jae
cmpsl
sbb
and
mov
into
fildll
or
dec
mov
cmc
std
mov
ljmp
lahf
dec
cmp
push
cli
and
mov
xlat
inc
mov
and
test
jbe
fbld
xchg
int
fnsave
jl
inc
cmc
cmc
pop
cmove
daa
cmpsl
imulb
inc
ret
fucomi
and
outsb
pop
cmpsl
leave
or
fstps
cmp
inc
in
push
push
cs
cmp
test
cmpb
mov
push
ja
inc
jecxz
aaa
outsl
adc
gs
cmp
int
and
out
repnz
sbb
test
pushl
pop
jp
in
xchg
jmp
aad
xchg
addr16
mov
dec
scas
xchg
mov
mov
mov
repz
std
cld
stos
inc
das
mov
icebp
xchg
dec
sub
and
inc
inc
aad
jmp
cmp
test
push
ret
dec
int3
sti
adcl
mov
xor
or
add
sbb
xchg
xor
pop
lods
sbb
aad
dec
push
mov
mov
nop
push
fcomip
test
dec
mov
dec
mov
xchg
mov
fists
les
mov
daa
xor
jae
sbb
mov
inc
lods
cmpsl
call
es
sbb
cmp
inc
cld
scas
mov
int
sub
jecxz
pop
dec
mov
popf
add
mov
inc
xchg
ffree
stos
sbb
jle
sbb
inc
xchg
xchg
mov
testl
adc
push
add
aaa
push
push
mov
inc
inc
aaa
icebp
cmpsl
inc
mov
outsl
addr16
sbb
cs
xlat
cmp
mov
or
cmp
jge
sub
xchg
dec
jg
mov
bswap
and
sbb
pop
fisubrs
pop
mov
div
push
dec
pop
push
push
mov
xchg
arpl
ja
lahf
xlat
mov
das
sbb
aas
push
shrl
mov
add
mov
mov
mov
cmp
out
les
add
mull
cmc
mov
adc
mov
es
fimull
or
fwait
and
iret
sub
mov
sbbb
lahf
sub
jb
daa
into
xchg
fildl
test
jnp
repz
or
fcompl
testl
incl
pop
outsl
sub
dec
or
shufps
lahf
xchg
repnz
cmpsl
aaa
outsl
jmp
mov
or
lcall
mov
cltd
or
xor
iret
ss
popf
xor
xlat
incl
pop
cmovbe
sar
ja
xlat
cmp
ja
in
mul
mov
mov
in
ds
pushf
test
rolb
and
xlat
scas
add
iret
add
outsb
mov
fistps
mov
jg
xchg
cmp
fidivs
es
negb
pop
es
xchg
dec
pop
add
sbb
jl
sahf
insl
sbb
outsl
mov
cmpsl
and
push
aaa
cwtl
xor
into
mov
adc
inc
inc
dec
cltd
mov
dec
arpl
mov
stos
adc
in
sbb
pop
mov
xchg
test
inc
iret
pop
cmpsb
push
repz
pop
lods
and
aaa
cs
cmp
cmp
inc
sbb
push
outsl
add
aas
mov
inc
inc
pop
out
pop
imul
pop
ret
mov
pop
les
repnz
cs
mov
xchg
ss
es
sbb
mov
adc
aaa
call
adc
gs
scas
and
cmp
bound
dec
mov
sbbl
lret
out
lds
xor
sub
or
mov
sbb
pop
in
pop
mov
cli
jg
push
test
mov
sete
sub
inc
movb
fisubrl
cmpsl
dec
lods
mov
addl
mov
aaa
cmp
sub
repz
sbb
or
test
jecxz
push
cs
daa
das
ja,pn
or
lret
push
cmp
dec
out
add
mov
out
stos
dec
insl
lods
clc
mov
xor
es
daa
xor
dec
stos
and
or
sbb
sub
xor
xor
rcll
push
inc
ret
mov
cmpsl
mov
es
sbb
cmpsl
ja
out
push
daa
inc
sub
mov
or
daa
inc
jmp
fstl
jmp
push
jg
sbb
sbb
or
stos
repz
fisttps
xchg
andnps
adc
iret
stos
stos
mov
js
sbb
rdpmc
out
aad
cmp
dec
cmp
dec
cmpsl
scas
ret
out
sub
jp
inc
test
jge
scas
int
lea
and
sub
inc
mov
orl
inc
aaa
inc
mov
and
inc
scas
add
inc
leave
mov
jno
inc
mov
jno
mov
jbe
push
jae
ret
jmp
repnz
data16
jg
imul
inc
xor
mov
xchg
fxch
mov
std
cmp
or
int
shlb
cmpsl
test
cmp
cmp
jne
test
cmpsl
sarl
fs
pop
ja
stos
xor
mov
xchg
imul
scas
inc
aas
xor
ja
ja
mov
dec
cmp
stos
mov
xor
scas
sbb
stc
pop
dec
mov
jmp
lret
jmp
cmp
jecxz
mov
daa
popa
or
dec
pop
hlt
push
xor
cwtl
dec
movsb
or
cs
pop
pop
inc
fwait
hlt
jmp
mov
pushf
fidivrl
repz
push
adc
pushf
in
sbb
outsl
xchg
or
pop
jle
orps
xor
xor
ja
int3
sbbl
inc
loope
add
pop
xchg
pop
jg
bound
js
jl
fisubs
dec
xor
ds
jbe
das
dec
decl
sub
pop
adc
mov
cmp
pushl
pusha
call
pushf
lea
ja
pusha
pusha
lea
jb
test
stc
cmpb
push
pusha
pusha
movb
lea
jne
bt
btc
xor
mov
clc
jmp
lret
ss
mov
int3
inc
sub
daa
xchg
fidivl
rcll
mov
push
inc
jnp
enter
or
ljmp
jns
aad
jecxz
mov
andl
and
pusha
popf
out
or
cmpsl
cld
lds
lahf
xchg
repnz
mov
mov
and
test
out
jne
leave
out
and
push
push
adc
dec
jns
rorb
sti
push
scas
mov
js
lock
inc
mov
pop
sbb
push
dec
das
mov
add
and
hlt
add
cmp
outsb
neg
out
push
mov
xchg
push
push
cmp
mov
and
lea
loopne
stc
jg
lock
mov
mov
sub
aad
xchg
rcr
repz
aad
cmp
mov
push
mov
stc
or
sti
mov
mov
cmp
add
push
mov
das
push
scas
jnp
sub
and
sbb
in
insl
mov
test
mov
daa
pushf
lret
fimull
ds
loop
push
or
jb
mov
imul
stos
ds
stos
adc
add
fisttpl
inc
fs
pop
jo
lock
sbb
inc
jge
xchg
aaa
push
mov
inc
push
dec
incb
sbb
mov
popa
bound
cmpsl
aas
sub
movsb
sahf
aad
sbb
aam
sbb
jg
sarb
jecxz
es
jmp
xchg
clc
xor
inc
mov
cmp
add
mov
and
push
pop
into
dec
push
adc
mov
fstps
pop
and
ss
mov
test
in
js
push
adc
sbb
js
sbb
mov
or
sbb
repnz
mov
inc
mov
mull
xor
or
stos
dec
pop
jns
sub
pop
pop
sub
andb
test
pop
jbe
inc
sahf
insl
stos
cmp
inc
out
jns
dec
hlt
cmc
mov
adc
repnz
jge
ds
push
sub
and
daa
rolb
push
std
add
iret
add
push
sub
jb
inc
push
movb
mov
stc
sub
leave
mov
lret
jno
into
or
jb
cwtl
outsl
out
imul
jp
push
push
pop
cmpb
cmpsb
fidivrs
push
cmp
out
add
test
and
orl
inc
xlat
ret
push
push
pop
and
fs
fcoml
push
xchg
sub
pushf
push
ror
add
push
lcall
icebp
sub
xlat
insl
scas
mov
insl
pop
lahf
lahf
imul
nop
dec
lea
dec
sbb
enter
popf
sbb
mov
push
mov
pop
aam
mov
sbb
xchg
sub
aas
sub
inc
mov
pop
lods
icebp
sub
cmp
dec
mov
pop
add
sub
mov
xchg
jg
mov
sbb
pop
mov
jbe
test
icebp
imul
lahf
cmp
xor
out
sbb
popl
lods
popa
or
push
bound
inc
push
aam
es
adc
cmp
xchg
iret
inc
stos
and
fnstcw
dec
pop
lods
pop
jo
mov
cmp
mov
nop
in
test
xor
and
pop
add
stos
mov
outsb
aad
jge
adc
divb
sbb
adc
popf
dec
es
xchg
sbb
adc
jae
and
inc
and
pop
fdiv
xchg
xchg
push
mov
push
mov
add
leave
jmp
pop
xchg
inc
mov
xchg
scas
sarl
xor
sahf
aaa
dec
mov
popf
ljmp
ja
dec
pusha
inc
lea
call
test
sbb
jl
inc
lcall
add
shrb
aad
lcall
mov
xor
nop
jecxz
test
pop
popf
arpl
testl
in
scas
dec
insb
dec
jmp
and
inc
fnstcw
mov
frstor
gs
int
lret
out
and
xchg
jl
loopne
push
dec
shll
inc
mov
jno
mov
mov
dec
movsl
push
shll
in
or
pop
sub
pop
jle
fadds
cmp
daa
mov
and
lret
std
xor
iret
sub
enter
repz
inc
pop
testb
and
cld
jecxz
iret
sbb
mov
push
ds
decl
movsb
sub
fs
push
insl
lret
adc
lret
adc
mov
cmp
rorb
add
jge
adc
mov
jo
adc
cli
cmpsb
sub
xorl
cwtl
insl
sbb
push
sti
lds
sahf
call
loope
gs
adc
mov
loope
jae
int3
inc
loope
mov
std
jl
sahf
lods
stc
js
and
out
cmp
add
sbb
mov
out
push
xchg
pop
fs
or
mov
iret
shll
in
jae
or
jnp
pop
dec
dec
nop
xchg
or
shll
jmp
popa
cmp
mov
loopne
mov
movsb
mov
mov
or
mov
fcoml
int
test
mov
ret
cwtl
into
inc
add
mov
enter
ss
sub
arpl
addr16
fldenv
pop
add
mov
jl
dec
mov
rcr
sub
inc
daa
mov
inc
pop
sbb
nop
jle
jl
pop
mov
fldl
sahf
pushf
call
pushf
pusha
jmp
scas
fwait
mov
data16
sbb
jg
and
call
and
mov
sti
dec
adc
cltd
test
stc
adc
inc
inc
rorb
cmpsb
ss
lods
lahf
pop
mov
xchg
ss
mov
sub
pushf
xchg
xorb
cmp
mov
jmp
fidivs
add
and
dec
imul
mov
js
mov
in
inc
and
pop
adc
shlb
mov
mov
inc
imul
dec
push
inc
mov
out
leave
in
ret
add
push
ret
outsl
cmpsl
inc
out
shlb
cmpsb
imul
dec
ds
icebp
stos
jno
pusha
insl
and
ljmp
lods
and
mov
out
movsl
mov
dec
sub
movsl
shrl
aam
subb
add
or
fs
cwtl
inc
pop
mov
leave
call
jmp
mov
fnsave
lret
xorb
icebp
cmpb
loop
repnz
inc
mov
jnp
push
dec
cld
in
sbb
fdiv
pop
sarl
daa
pop
ds
xchg
out
sti
ds
ret
pop
pop
pop
fnsaves
jmp
push
addb
lret
les
xor
dec
sbb
cmp
pop
pop
jae
and
lds
push
xlat
movb
push
sbb
imul
cmp
repz
out
sub
prefetchw
ja
lcall
mov
testl
adc
mov
push
or
and
dec
hlt
pop
xchg
test
mov
out
mov
jno
cs
cwtl
push
in
in
addb
cmp
and
sub
add
std
add
sbb
lds
sahf
inc
add
cwtl
movsl
enter
fs
movsb
inc
or
xchg
dec
ret
out
mov
pcmpgtd
int
mov
and
movsb
mov
inc
pusha
pushf
pushf
push
lea
jmp
ret
mov
mov
jbe
and
mov
sub
lock
sti
mov
negb
or
lcall
gs
ret
shufps
ss
inc
movsb
jae
sub
cmpsl
and
cmpl
mov
int3
cmpsl
test
cmp
mov
xor
xchg
fwait
mov
bound
add
sbb
cmc
inc
inc
sub
out
pop
in
int3
and
jno
mov
jno
nop
test
out
xor
xchg
adc
daa
cmp
lea
out
add
popa
je
loopne
and
dec
mov
cmp
and
nop
and
jo
inc
das
inc
push
jbe
mov
ljmp
push
push
sub
dec
pusha
sbbb
sbb
mov
dec
mov
mov
fnstsw
xchg
and
mov
out
mov
mov
pusha
sub
enter
cs
lods
push
push
and
cmpsb
and
push
imul
ljmp
jno
cld
adc
add
push
and
jns
push
sarl
dec
insb
stos
inc
rorb
push
inc
add
jecxz
mov
dec
xchg
mov
mov
and
mov
and
mov
inc
int3
push
and
adc
sbb
jns
std
popl
jge
inc
xchg
fs
adc
test
out
mov
repnz
outsl
push
testb
out
adc
dec
fisubrs
cltd
mov
sub
repz
inc
and
xor
sbb
in
loope
into
lods
and
daa
insb
xchg
inc
xlat
sub
scas
out
mov
add
sbb
and
xchg
pop
mov
xor
dec
cmp
fwait
call
imul
daa
fnstsw
jno
or
repz
xchg
clc
mov
inc
and
pop
sbb
and
dec
sti
call
aad
loop
out
push
mov
repnz
leave
test
inc
test
add
cmpl
test
mov
adc
mov
stos
or
cld
xchg
or
shlb
adc
repnz
addr16
add
cmp
lahf
mov
xchg
or
loop
mov
ret
imul
cmp
pushf
push
pop
daa
mov
in
inc
or
push
push
mov
or
jle
pop
jo
dec
sbb
ljmp
sbb
or
dec
int
in
cmp
cmovge
inc
repnz
popf
rclb
sub
cmp
mov
rcll
nop
add
mov
in
inc
mov
arpl
inc
mov
hlt
or
ljmp
lock
test
xor
and
cltd
dec
mov
mov
dec
adcl
lcall
sbb
jo
test
and
stc
mov
xchg
xchg
shrl
mov
lea
xor
jg
sbb
aaa
dec
sub
lcall
out
sub
mov
fs
mov
std
fistl
lret
inc
aam
gs
jnp
mov
pusha
outsl
roll
out
lods
out
mov
adc
out
add
xor
jmp
popa
lahf
popl
inc
mov
mov
cwtl
add
cmp
cld
cwtl
dec
push
idivl
imul
lds
dec
idivl
mov
lret
dec
inc
popf
and
pop
push
xor
xchg
cmp
std
sbb
cwtl
shlb
xor
inc
and
mov
and
pop
fs
add
xor
dec
in
loop
adc
cmp
jmp
sub
cmp
push
pusha
out
aaa
or
push
enter
in
sti
into
rorb
mov
jbe
xchg
loopne
mov
xchg
dec
mov
push
in
sub
pop
xchg
cmp
sub
fistps
call
xor
mov
insl
dec
xchg
rclb
inc
pop
adc
mov
je
sub
and
in
inc
mov
sbb
jnp
jne
test
shlb
mov
test
mov
fcmovb
decl
cwtl
les
test
aas
repnz
dec
mov
shlb
or
sti
rorl
xor
push
sbb
jle
xor
sbb
mov
jg
xchg
add
and
jg
insl
push
test
sub
jno
mov
or
int
or
in
insb
inc
cli
test
xor
adc
dec
mov
and
ss
sarl
or
push
insb
dec
sub
jo
push
ja
inc
mov
out
test
mov
es
jl
cmp
loope
lock
lock
mov
mov
jne
stc
lods
fdivs
push
loope
jl
call
sub
fistpl
sbb
xchg
dec
daa
arpl
lock
mov
xor
leave
test
adc
pusha
inc
mov
adc
sub
rcr
fsubrl
stos
push
out
mov
push
movsb
pop
xor
lret
imul
daa
adc
and
mov
push
mov
pusha
pushf
lea
jmp
pushf
movl
pusha
lea
jmp
inc
dec
cmc
add
ret
mov
push
lret
push
mov
add
test
js
lahf
xchg
add
pop
aam
inc
xchg
shrb
fildll
movsl
pop
mov
insl
imul
xor
and
lret
xchg
lret
in
and
mov
sbb
lea
mov
mov
cmp
out
shl
dec
insl
adc
cmp
or
sti
loopne
mov
lret
adc
lods
xor
out
xor
mov
imul
icebp
and
xor
push
popa
test
cs
ljmp
push
mov
fstpt
mov
outsb
imul
or
insb
cmp
jnp
sti
mov
mov
mov
sahf
subb
jb
xorl
mov
adc
add
imul
sub
inc
mov
jmp
mov
addr16
jnp
cmp
stos
and
jb
or
xorl
mov
in
fsubs
incl
inc
outsb
js,pn
adc
into
mov
inc
fildl
pop
ficomps
mov
push
adc
push
xchg
hlt
pop
imul
sub
cwtl
ret
fdivs
xchg
push
push
pop
cltd
mov
sbb
mov
call
xchg
rol
inc
and
push
inc
in
bnd
and
stos
push
jns
out
xor
les
pop
imul
cmp
orl
cmpl
add
inc
gs
outsl
fs
gs
imul
add
rclb
xchg
shlb
je
adc
xor
cmc
movb
add
stc
rol
pushf
cmc
not
cmc
rol
push
call
lea
jne
shrd
mov
shl
rol
cmp
dec
sub
shld
mov
stc
stc
stc
sub
cmp
pushf
cmc
clc
pushl
popl
push
stc
cmp
push
jmp
sub
stc
test
jmp
cmp
push
pop
inc
mov
inc
loopne
fdivrl
push
pop
data16
adc
mov
pop
insb
jecxz
lret
out
popf
push
shrb
ret
shll
dec
jnp
mov
or
iret
pop
mov
adc
cmc
dec
sbb
adc
mov
out
fs
ja
loop
push
call
jo
pop
aas
ficoms
adc
sti
in
cmpsl
xchg
shll
push
mov
pop
outsl
xor
popa
leave
pop
jp
lahf
mov
xchg
inc
mov
inc
sub
cmpsl
xor
lock
ljmp
movsb
pop
mov
pop
xchg
and
push
cmp
jo
xchg
in
push
xor
adc
out
mov
loop
jmp
aam
in
jg
push
subb
add
push
test
and
dec
sub
das
movsb
dec
shl
rorl
push
dec
or
cld
out
jo
mov
sbb
aas
or
or
in
mov
ret
fisttps
sub
dec
or
fsubrl
mov
nop
mov
outsb
add
mov
test
mov
filds
xchg
jg
stc
push
mov
inc
add
outsl
push
xchg
cld
lcall
xchg
call
outsb
fmuls
inc
mov
testb
dec
repnz
jns
adc
pop
xchg
adc
sbb
sar
pop
out
mov
pop
lock
movsb
mov
push
mov
popa
cmpsl
shlb
inc
mov
mov
pushf
movsb
loopne
push
adc
imul
int3
test
fnstcw
adc
decl
and
jne
adc
xor
stc
neg
bsf
mov
bt
not
add
not
cmc
sub
mov
pushf
clc
test
call
push
push
pushf
mov
movl
call
push
cwtl
lea
push
pusha
pusha
push
movl
mov
mov
pushl
popl
movb
push
push
pushl
pushl
ret
pop
ja
or
sub
test
out
jo
cmovnp
and
sbb
lods
je
and
ja
jmp
inc
rolb
sbb
outsl
lahf
cs
and
xchg
scas
repz
and
pushf
add
movsl
jnp
cmp
dec
pop
in
sbb
fwait
or
cvttps2pi
push
or
test
sti
imul
sub
stos
or
inc
mov
mov
inc
jmp
icebp
popf
out
or
pop
in
into
mov
fwait
or
std
out
jl
mov
mov
rorb
dec
sub
daa
mov
sbb
and
sub
adc
int
jmp
xchg
ret
aaa
mov
fdivl
and
and
inc
inc
jle
pop
push
push
add
xchg
je
mov
add
jl
jl
lods
ficoms
xchg
insl
mov
xor
ret
ret
sub
and
jae
mov
aaa
push
out
bound
and
cmp
repnz
pop
addr16
and
add
sbb
inc
and
or
lret
add
or
inc
and
xchg
ljmp
add
movsl
add
inc
mov
add
xchg
sbb
in
fmuls
mov
cmp
mov
inc
mov
mov
pop
sbb
aaa
push
add
lods
popa
push
cmp
icebp
xchg
dec
or
pop
hlt
int
sbb
gs
addr16
push
mov
ret
ds
sbb
adc
mov
ucomiss
insb
adc
data16
cmpsl
jmp
push
jl
stos
or
sbb
jno
pop
movsb
add
sub
sahf
decl
mov
int
xchg
xor
inc
scas
jp
mov
jns
popf
fisubs
mov
jl
push
adcl
cmpb
mov
mov
insb
adc
or
test
fisubl
pop
mov
mov
dec
mov
out
pop
inc
outsl
jecxz
xchg
dec
fistpl
fimull
adcb
xlat
inc
pop
push
mov
mov
orl
xchg
loopne
outsb
jns
jne
jae
ret
mov
push
inc
lret
pop
jl
push
jb
bound
push
or
mov
out
pop
js
stc
mov
push
mov
cmp
pop
add
push
jo
shlb
fbstp
xchg
push
pop
loopne
adc
lret
stc
xor
mov
ror
and
fs
cmp
mov
xor
sub
mov
xor
in
mov
adc
pusha
es
fnstcw
mov
inc
mov
and
push
xchg
push
out
xchg
sub
xchg
pop
enter
jae
ljmp
fcoml
sub
in
mov
mov
jns
xor
and
jecxz
sarl
mov
stc
insl
xlat
pop
pusha
fstpl
das
sub
dec
insb
push
cmp
xor
adc
sbb
enter
sti
xor
inc
xlat
in
aam
dec
mov
jnp
xchg
sub
xchg
mov
faddl
insb
lret
xchg
push
and
jp
in
jo
hlt
push
repz
punpckhbw
cs
xor
mov
or
mov
int3
mov
lcall
lret
lcall
inc
mov
in
pop
dec
sbb
psrlw
add
cltd
lock
xor
popf
gs
addr16
push
movsb
jb
dec
into
cmpsb
jecxz
pop
jno
xor
cmp
add
adc
dec
std
jae
filds
xchg
push
mov
gs
inc
in
das
je
cmp
adc
lret
addr16
mov
push
test
neg
and
cmp
push
inc
mov
fs
and
rcll
add
iret
mov
shll
fwait
sbb
shl
bound
cwtl
imul
aas
push
mov
or
dec
xor
ljmp
outsb
xor
or
test
test
pusha
sub
bt
cmp
pushf
lea
ja
clc
pusha
bt
imul
clc
stc
clc
add
mov
pushl
pushf
movb
lea
jmp
cmc
bt
cmp
pushf
lea
jb
push
cmp
pusha
jmp
out
mov
aam
or
imul
add
mov
in
xchg
xchg
cmp
loope
jl
xchg
or
jb
push
push
inc
aaa
push
xchg
push
shlb
adc
cltd
jnp
call
test
xchg
add
cmc
push
lahf
dec
push
andb
pop
aam
in
pop
movsb
andb
cmc
icebp
cld
xor
jmp
cmpsb
dec
test
jp
fcoml
lsl
lcall
pop
ret
aam
mov
xchg
popa
add
sarl
lcall
xchg
xor
mov
imul
rol
cmovne
popf
adc
sbb
xor
addr16
test
lock
or
fbstp
dec
xchg
mov
add
push
fstpl
push
ret
shlb
aaa
inc
fists
dec
xchg
jne
pop
cmp
mov
jmp
push
jnp
or
cmc
push
xchg
push
inc
mov
punpcklwd
dec
scas
sbb
pusha
mov
or
dec
scas
out
clc
inc
pusha
call
add
subb
bound
and
cmpsl
movsb
add
adc
jnp
ficomps
adc
lea
push
dec
loope
mov
lock
insb
les
int3
imul
pop
fsts
add
int
xor
je
bound
xorb
mov
push
fcomp
lods
clc
ds
gs
xor
pop
sub
pop
mov
sub
into
inc
xor
sub
add
fistps
jbe
sahf
pusha
pushf
lea
ja
bt
imul
call
lods
iret
cli
adc
into
leave
dec
mov
push
lret
mov
std
leave
push
and
outsb
in
cmp
stos
pop
or
rcrb
adc
add
or
mov
and
imul
pop
xchg
add
mov
pop
pop
lret
ficomps
imul
mov
or
cmp
enter
mull
aad
movsb
mov
mov
xor
inc
jl
mov
jmp
xchg
ficomps
xlat
mul
lcall
sbb
test
test
lcall
movsb
aad
mov
mov
rorb
mov
cmp
bt
test
test
pusha
lea
je
push
test
test
add
pushf
stc
cmp
pushf
jmp
mov
push
adc
mov
cmp
dec
sbb
push
out
out
aad
rcll
mov
call
popf
and
xchg
mov
pop
out
jl
insb
nop
mov
subl
movsb
fbld
sub
jle
call
int3
ret
sbb
push
scas
jg
mov
outsl
pop
test
shlb
and
xor
push
ret
cmp
fs
inc
and
pop
lcall
fs
cld
and
add
enter
iret
sub
lret
sahf
pop
enter
std
clc
mov
adc
mov
gs
int3
in
repz
cld
divl
stc
or
ret
incl
shll
insl
adc
addr16
es
leave
movsb
adc
sbb
fstpt
inc
mov
jo
lock
xchg
int3
sub
shlb
scas
pushf
xor
fs
sub
xchg
xchg
mov
adc
nop
das
popf
lods
test
dec
int
lock
fmul
pop
lret
mov
into
xor
add
rorl
insb
or
dec
outsb
dec
push
sbb
push
pop
or
cmpb
lea
jmp
jae
daa
adc
and
push
pushf
xor
push
push
cmp
movsl
push
pop
pop
cld
faddl
cmc
push
loopne
push
jg
pushf
mov
shlb
ljmp
adc
call
cmc
push
je
insl
cmpsl
pop
cmp
aas
divl
das
int3
pop
in
or
xchg
js
adc
xchg
xor
sbb
test
mov
push
add
and
cli
jg
mov
movl
push
pushf
push
mov
lea
jmp
mov
push
movw
lea
jae
push
pusha
pusha
mov
lea
jmp
sub
daa
adc
and
inc
jno
push
fistl
rol
jae
loope
dec
arpl
loopne
mov
inc
add
in
sub
call
fdivp
inc
mov
nop
mov
stos
popf
ljmp
int3
pop
arpl
dec
lcall
mov
les
adc
adc
mov
aam
xlat
das
shll
mov
mov
loope
into
fs
pop
xor
cmp
push
jmp
pop
int3
adc
mov
mov
sub
mov
scas
insl
lea
ret
jl
stos
sub
leave
nopl
mov
and
sub
int3
insb
inc
in
lock
das
shrl
gs
mov
in
add
cwtl
xor
mov
je
repz
aaa
dec
cli
and
lret
fistpll
cmc
dec
mov
pop
sub
data16
cmc
repnz
add
or
test
cwtl
not
mov
add
push
jno
pop
gs
mov
mov
pop
ror
adc
mov
xchg
xor
int
fadds
lods
mov
pushf
imulb
and
jo
mov
cmpb
push
pop
pop
insb
sbb
inc
xor
adc
dec
or
fwait
xchg
cmp
dec
mov
mov
push
mov
rorl
in
jns
pusha
cltd
pop
mov
aaa
and
sbbl
stos
sbbb
xchg
sbb
mov
pop
ljmp
sub
mov
push
fstps
gs
adc
scas
sub
add
nop
push
call
jmp
pushf
movb
cmp
call
pusha
call
inc
jae
adc
pop
sbb
xchg
repnz
push
faddl
or
cltd
rclb
inc
dec
cmc
push
fs
mov
cmpsl
mov
push
jae
jl
mov
cmc
pop
rorl
sbb
lods
add
ss
jp
mov
mov
inc
or
lret
inc
enter
adc
cmp
sbb
hlt
adc
pop
repz
pop
std
icebp
rcrb
pop
adc
movsb
sbb
imul
adc
push
lcall
add
pop
xchg
movw
pushf
call
pop
cli
pop
push
inc
mov
not
mov
aam
loop
mov
int3
jns
xchg
dec
icebp
cs
mov
mov
mov
lahf
rcll
cmpsl
les
std
rcrb
js
ret
push
pop
lahf
ss
sub
scas
cwtl
and
jno
jmp
push
xchg
xchg
cwtl
cmp
pop
mov
aam
mov
insb
mov
lea
lret
cmp
movsb
jbe
stc
dec
jb
cmc
xchg
dec
cmc
fstps
lods
fstp
or
sub
insl
sahf
loop
fidivrs
fucom
xchg
pop
push
arpl
adc
sub
movsb
pop
cmp
cwtl
repnz
les
pop
fcomps
in
cmp
mov
sar
dec
pop
mov
add
sbb
jno
xchg
test
or
and
jecxz
or
sub
sbb
cmp
push
push
mov
pop
push
push
ret
pop
andb
cmp
push
sbbb
jae
js
ljmp
pop
or
pop
inc
mov
shl
lahf
adc
dec
jmp
fwait
mov
out
xchg
add
add
mov
dec
inc
sub
fwait
and
sub
shrl
xchg
ja
push
imul
jb
loope
inc
gs
daa
jl
sub
lock
adcb
cmc
mov
dec
fidivrl
adc
mov
push
xor
insb
in
mov
fcoml
divl
in
fisubs
adc
out
jb
stc
out
ret
add
je
inc
sub
jmp
mov
mov
nop
aad
mov
sbb
cmp
xor
dec
movb
lea
call
call
add
pop
inc
mov
test
test
xchg
jp
mov
sbb
mov
rorb
cmpsb
daa
jle
sub
pop
adc
aad
addr16
cmp
hlt
dec
mov
mov
jo
cs
mov
lock
cmp
rorl
das
lahf
xor
es
mov
in
shrl
push
ds
push
or
rorb
xchg
xchg
mov
lods
adc
jns
inc
stc
lea
fldl
sub
in
fadds
inc
mov
inc
popa
lds
jnp
inc
or
push
inc
iret
mov
mov
add
mov
aad
cli
jp
imul
cltd
pop
cli
mov
insl
pop
fistpl
pop
adc
add
add
scas
ds
xchg
pop
push
xchg
push
mov
mov
jle
or
fsubrl
pop
mov
int
sub
pop
aas
mov
pop
xchg
aas
jno
mov
bswap
aas
pop
pushf
nop
jp
mov
in
pop
add
and
notb
mov
mov
pop
rcrl
xchg
cwtl
add
inc
mov
mov
test
mov
test
cmp
cwtl
add
cltd
push
mov
xchg
mov
test
add
pop
cli
enter
nop
mov
sarb
out
jb
and
and
lods
fsubs
add
lods
mov
add
pop
mov
inc
adc
mov
das
ret
jnp
imul
add
add
or
or
pop
push
testl
cmp
lahf
cmp
add
cmp
adc
jl
sbb
and
sti
aam
inc
rcrb
jno
pushf
pushf
lea
je
clc
call
shlb
inc
aaa
rclb
or
js
mov
fs
jp
clc
or
icebp
stos
mov
movl
out
xor
lds
mov
daa
dec
sar
lret
iret
dec
repz
js
daa
cwtl
fldt
mov
icebp
nop
call
mov
aas
or
mov
inc
mov
out
mov
jno
mov
lret
xchg
sub
pop
sbb
rorl
stc
mov
test
stos
or
jl
add
cmp
inc
call
xchg
rorl
test
mov
xchg
mov
pop
push
outsb
inc
test
rcll
adc
jp
fidivs
lahf
pop
out
push
adc
cmpsb
pop
mov
inc
dec
inc
mov
pop
ds
push
dec
or
ror
in
inc
cmovb
ljmp
data16
push
adc
mov
sub
aam
sub
pop
icebp
dec
lahf
shrl
sbb
int
fiadds
repnz
lods
and
add
lcall
mov
pop
call
jmp
mov
adc
dec
and
dec
dec
push
pusha
pop
loopne
addr16
int3
das
cmpsl
adcb
sahf
xlat
imul
outsb
cmp
and
out
mov
lret
mov
xchg
iret
pop
neg
divl
xor
adc
xchg
cmp
ret
loope
cmpl
push
outsb
dec
stos
hlt
jmp
lods
cmp
sbb
out
pop
inc
dec
popa
mov
out
push
pop
xor
push
aaa
lds
dec
add
es
cmp
cwtl
cmc
and
inc
mov
xor
jle
xlat
add
in
imul
fs
or
add
mov
ss
sub
or
das
dec
mov
mov
test
sub
jecxz
in
call
add
fsub
sub
dec
cmp
sarl
pushw
jae
jbe
aaa
sysret
mov
jns,pt
push
or
and
push
and
ljmp
mov
imul
mov
jle
lock
jbe
add
lods
int
push
sahf
scas
jecxz
xor
adc
sub
jmp
sub
cli
and
cmp
fsubl
loop
pop
movsl
outsb
aad
cmp
sub
arpl
mov
xor
dec
cmp
mov
xchg
xchg
pop
cmp
mov
xchg
mov
stc
push
mov
xchg
fistpll
aam
adc
push
fs
pop
mov
pop
pop
mov
pushf
ficoms
jge
mov
pop
les
decb
pop
xor
cli
xchg
inc
movlps
imul
mov
je
mov
iret
sub
lock
call
cmpl
sbb
out
mov
mov
push
xchg
shlb
gs
popa
push
mov
imul
jle
sahf
cmc
cmp
mov
jp,pt
aaa
cmp
add
les
notl
ja
mov
dec
sbb
loop
setnp
lea
call
jmp
fnstsw
in
inc
mov
jecxz
mov
dec
fadds
pop
push
lock
jmp
mov
fcmovu
jae
es
xor
stc
fiaddl
pop
cmp
add
stos
les
outsb
push
imul
push
pop
pop
mov
mov
enter
xlat
push
ficoml
jno
jmp
mov
sbb
stc
test
outsl
pop
aam
mov
jmp
xor
add
mov
lods
cmp
test
bound
mov
xchg
flds
jnp
subl
add
mov
add
sub
mov
cmp
shl
incb
and
mull
mov
adc
das
mov
dec
repnz
stos
xor
mov
loop
pop
jae
adcl
les
scas
sti
sbb
mov
popa
jmp
adc
stc
pop
out
xor
xchg
mov
jbe
daa
inc
mov
arpl
sar
lret
inc
mov
rcrb
in
push
test
sub
push
mov
mov
xor
push
stc
sbb
dec
mov
call
xchg
inc
push
mov
or
xchg
aas
mov
sbb
jae
gs
in
or
add
jne
xor
mov
mov
jb
pop
aaa
leave
ret
out
dec
pop
adc
into
mov
inc
mov
pusha
adc
pop
xchg
fistpll
xor
cmp
or
and
xor
mov
mov
ficomps
mov
xchg
pop
inc
icebp
in
insb
mov
pop
cmpsb
jne
lds
adc
cmp
inc
and
pop
pop
ret
sub
or
sbb
jmp
xchg
sbb
into
xor
aam
jg
xchg
imul
push
and
or
pop
mov
adcl
out
add
xchg
xchg
xchg
or
mov
in
jnp
inc
mov
fcoms
popf
cli
adc
jmp
out
loop
or
cmp
insb
fstl
hlt
call
inc
inc
sub
mov
jbe
rolb
adc
scas
test
add
mov
stos
negb
cld
sub
sub
jmp
push
mov
lds
sub
or
movl
and
call
push
mov
pushf
pushl
lea
jmp
jmp
inc
cs
inc
mov
hlt
lret
adc
push
xchg
loopne
addr16
je
mov
xchg
xor
and
push
stos
mov
test
jns
xor
sti
mov
push
pop
scas
xchg
xchg
sahf
mov
jnp
and
pavgb
mov
xor
dec
into
lret
dec
sub
dec
push
mov
push
pop
or
cmp
push
add
adc
fwait
stos
sub
sarb
vandps
inc
mov
ret
dec
dec
pop
mov
pop
stos
mov
cmp
data16
jl
xlat
mov
push
loope
xlat
aam
leave
lea
roll
fs
jge
out
stos
inc
loop
scas
out
mov
fisubrl
mov
outsl
aas
mov
sub
dec
fcmovu
xor
inc
adc
mov
pushl
shr
add
add
je
or
fs
ja
push
lea
jb
pusha
jmp
inc
movb
inc
movb
pushl
mov
pusha
lea
jmp
orl
inc
mov
outsb
adc
fbstp
pop
or
fldt
jb
dec
and
ds
sub
call
gs
dec
ret
push
sbb
push
xchg
inc
popf
mov
inc
xchg
xlat
fidivl
loope
hlt
or
daa
sti
imul
loope
mov
mov
mov
fstpt
rorl
js
popl
test
pop
add
xlat
fisubrl
out
lcall
fstl
mov
xchg
mov
mov
bound
adc
movsb
mov
mov
ljmp
jp
mov
out
pop
scas
clc
sbb
std
addr16
cmpl
test
dec
xchg
mov
and
mov
pop
cmpsl
push
out
sbb
mov
add
inc
pop
adc
add
add
divl
bt
ror
bsr
mov
bt
sub
jmp
xor
nop
loop
mov
cmp
mov
jo
popa
push
add
xchg
mov
in
jns
ja
mov
xchg
repnz
xchg
sub
push
lahf
cmp
hlt
cmpsl
nop
dec
outsl
call
adc
mov
pop
mov
std
into
jg
in
and
and
test
xorb
mov
push
and
sbb
stos
push
test
inc
mov
mov
jecxz
into
sub
cmp
jns
dec
sub
lret
push
push
pusha
sbb
push
sub
outsl
inc
aaa
nop
les
call
gs
ret
lock
jmp
sub
pop
mov
cmc
push
jbe
lea
dec
xchg
xlat
pop
and
sahf
pop
fnstcw
call
cli
mov
sub
mov
fsub
adc
xchg
in
xchg
add
xor
dec
xchg
aas
in
fcomip
out
dec
loope
stc
dec
fisttpll
xchg
js
jmp
mov
inc
mov
test
popf
or
and
push
pop
into
ficompl
xchg
js
fnstenv
repnz
sub
mov
stos
push
gs
mov
fdivrp
in
scas
shl
faddl
fdivr
dec
lds
add
sbb
xor
pop
add
add
int3
mov
decl
cmpsb
jecxz
mov
data16
std
push
jno
push
or
aad
call
sbb
movd
sub
mov
cmpsl
inc
push
push
push
pop
mov
pop
sahf
rclb
mov
lcall
loop
inc
mov
push
jns
stos
out
bound
jg
fisubs
push
mov
pop
insb
inc
dec
sub
hlt
js
daa
movsl
orb
inc
fwait
sub
mov
int
jle
xchg
xor
and
jp
pusha
movl
mov
pushl
popl
pushf
pushl
ret
xchg
mov
in
mov
cmp
dec
std
push
cmpb
jnp
adc
mov
pushf
inc
add
popa
adcb
pop
js
arpl
mov
mov
lsl
xchg
movsl
aaa
sbb
leave
outsl
inc
rorb
adc
fwait
cmp
int3
or
push
sub
subb
iret
sbb
xchg
rcll
lods
cltd
push
fdivrl
mov
lcall
in
mov
test
loope
add
insb
popa
and
pop
fwait
addr16
inc
inc
fdivl
jp
pop
mov
aam
sub
aas
cmp
movsb
aas
jge
icebp
dec
mov
mov
xchg
mov
inc
add
add
sahf
scas
cltd
imul
out
pop
jne
movsb
xchg
scas
xchg
addr16
mov
jnp
jge
bound
not
mov
pop
push
orb
int
cmpsl
lahf
and
je
divps
sbb
jmp
mov
dec
lcall
ja
repnz
inc
mov
out
push
and
popa
ja
push
movsl
cwtl
dec
cs
js
dec
jle
push
out
jo
push
push
or
stos
add
out
dec
pop
sbb
xchg
inc
pop
jmp
fnsave
pop
cs
in
mov
rclb
stos
inc
les
faddp
sti
xchg
cmp
fadds
je
outsb
outsl
mov
out
imul
and
loope
sub
mov
pop
cld
int3
push
movw
jmp
stos
and
inc
mov
cmp
cmpsb
rol
fcmovnb
lea
sarb
mov
xchg
sbb
cmp
adc
rcll
pop
xchg
stc
popa
mov
or
pop
outsb
rcrl
fdivrl
sub
xor
adc
mov
fistpll
icebp
and
bound
std
add
mov
xorl
xchg
jmp
dec
mov
leave
mov
add
call
pop
pushf
pushf
movl
pushf
mov
push
movl
movb
movb
mov
lea
jmp
bt
cmpb
mov
jmp
and
out
mov
xchg
mov
adc
inc
mov
xor
insb
push
or
pusha
stc
push
ret
rclb
adc
xor
sub
scas
popw
lret
xchg
mov
mov
push
out
scas
iret
dec
push
xor
sub
repnz
push
sub
lret
lods
ret
and
enter
sbb
xchg
add
or
xchg
add
cmp
xchg
pop
sub
jecxz
mov
lock
pop
xlat
inc
mov
imul
xchg
daa
shlb
sub
ret
jmp
bound
xchg
push
cltd
lret
andl
es
sub
scas
mov
enter
cmpsl
stos
push
mov
push
pushf
dec
inc
lcall
mov
add
sub
repnz
push
ss
test
cmp
ss
or
mov
vpmaddwd
mov
fs
jmp
sete
stos
setl
movb
not
mov
lea
pushf
pushf
call
call
call
insb
cmp
call
mov
ret
push
hlt
jno
xor
imull
cmp
cltd
mov
aas
into
lret
popf
fwait
daa
call
xchg
in
imul
or
or
dec
jne
dec
xchg
jb
mov
popa
inc
xor
sub
push
jb
xor
jb
push
jns
push
clc
dec
sub
scas
nop
and
xchg
leave
push
sbb
inc
xchg
inc
sbb
mov
xorb
push
movl
pushf
push
lea
jmp
inc
mov
mov
fadds
jb
dec
or
or
pushw
pop
in
inc
inc
xchg
mov
into
xchg
add
push
add
lods
and
enter
jmp
decl
rcl
cli
or
mov
aam
dec
in
cmp
subb
repnz
insb
mov
push
pop
lret
or
mov
dec
add
xchg
xlat
lds
xchg
fimull
dec
jmp
push
mov
mov
mov
mov
jmp
fdivrs
jo
fcmovbe
hlt
loope
hlt
xchg
jmp
aaa
cmc
push
dec
mov
sti
imul
pop
mov
xchg
xor
inc
mov
xchg
out
push
insb
jo
push
mov
mov
bound
xchg
lahf
daa
push
fwait
jg
and
loop
cmpl
mov
mov
ret
push
cs
hlt
mov
imul
mov
pushf
or
jg
xor
out
cs
mov
cltd
sub
mov
sti
fimull
rcrb
jb
pop
aad
cld
test
xchg
jecxz
dec
hlt
call
pop
jns
rol
cmp
ficoml
xlat
push
shlb
ljmp
dec
call
sbb
cmp
jp
das
outsl
mov
movsb
dec
xchg
roll
loopne
cmc
insb
imul
ds
adc
lret
mov
aam
mov
adc
pop
xchg
sbbb
enter
or
mov
clc
mov
popf
imul
inc
fsubs
pop
add
in
mov
ljmp
cmc
add
inc
pop
mov
leave
aaa
push
ds
dec
add
add
jnp
push
pop
popf
lds
js
inc
mov
mov
lods
cltd
into
repnz
data16
popl
and
lock
sbb
push
rcrl
stos
std
xor
mov
push
mov
push
ds
jp
mov
mov
sub
dec
stos
jecxz
out
dec
add
or
adc
xor
adc
mov
add
mov
dec
std
iret
inc
sub
mov
rclb
pop
test
loop
adc
jmp
mov
shlb
sub
in
stos
inc
pop
or
mov
fidivrl
xchg
adcl
iret
bound
in
test
and
jecxz
push
into
cmp
stos
push
adc
xor
rcrb
mov
dec
int3
or
sbb
mov
lahf
push
fs
pop
add
icebp
inc
pop
addr16
mov
out
jge
mov
lock
test
iret
imul
mov
ret
je
bound
into
inc
and
xchg
nop
dec
adc
pop
xor
or
out
loop
cmpsl
xchg
jmp
mov
mov
cmove
xchg
sbb
or
and
stc
mov
mov
cmp
pop
add
xchg
push
push
dec
cmpsb
jg
pop
xor
icebp
lods
pop
in
jmp
dec
jns
sahf
push
loop
or
jmp
xchg
cmpsl
mov
notb
fidivl
push
jbe
cs
push
jnp
sahf
call
xor
or
adc
mov
loopne
mov
inc
mov
rol
pop
outsl
mov
ja
inc
inc
xorl
cwtl
xchg
pop
lods
loopne
sahf
mov
bound
cmpsb
gs
jmp
mov
jae
adc
enter
adc
nop
mov
inc
es
mov
push
jecxz
repnz
loopne
mov
adc
in
xor
xchg
ds
jno
jmp
shlb
sub
je
imul
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
shr
inc
mov
das
sahf
add
ljmp
jg
mov
sbb
aam
inc
push
cmp
cmpsb
pop
cmp
out
fld
pop
inc
xor
cmp
jns
aad
sub
add
adc
pop
loop
jmp
cs
push
lret
or
cmp
jns
arpl
xor
inc
lret
mov
mov
lcall
fisttps
add
fiadds
fsubr
and
and
xchg
or
fidivs
and
cmp
fwait
in
inc
mov
cmp
cmp
imul
pop
pop
jl
popa
mov
pop
push
stc
mov
inc
enter
mov
cmp
pop
or
push
sub
add
and
lods
push
mov
push
cmp
xchg
and
pop
ret
fcoml
mov
clc
std
pop
sub
dec
bound
lcall
out
adc
sbbl
in
mov
mov
arpl
mov
lcall
leave
cmp
out
xchg
add
mov
sbb
add
orl
shl
pusha
lods
bt
call
sub
push
out
inc
mov
inc
push
leave
or
clc
and
adc
or
clc
mov
adc
adcl
lea
mov
cmp
rolb
mov
fwait
movsl
mov
test
bound
scas
sti
sub
loopne
decb
cld
test
inc
and
lret
mov
ret
inc
push
mov
fs
loop
and
loop
test
mov
movb
jmp
loopne
stos
out
inc
mov
addr16
or
out
jo
dec
stc
add
jno
lcall
adc
fistpll
ljmp
inc
pusha
enter
std
dec
fisubrl
xchg
insb
adc
rolb
cmp
dec
enter
dec
sbb
mov
stc
rcll
not
mov
sahf
rclb
sarl
lods
repz
scas
cmpsl
push
cld
icebp
int
leave
test
cmp
push
jmp
jmp
lea
jne
pusha
pushf
mov
lea
call
pusha
pushf
pusha
movb
lea
jmp
stc
stc
call
and
inc
out
inc
mov
mov
addr16
sub
setae
scas
and
sub
adc
out
pusha
push
jg
add
repz
or
sahf
or
and
aaa
imul
xchg
movsl
cmp
pop
lds
mov
jge
push
mov
or
out
or
sahf
mov
imul
int
nop
div
inc
mov
xlat
jl
mov
jl
lcall
and
sbb
out
xchg
sahf
repnz
icebp
and
push
sub
pop
sub
jbe
lods
in
adc
xchg
iret
mov
xlat
mov
sbb
push
sbb
inc
shr
adc
std
outsl
adc
adc
in
dec
orl
adc
jns
mov
ret
push
daa
pushf
leave
int3
xchg
inc
cmpl
lods
adc
xchg
fbstp
push
mov
inc
mov
bound
outsl
push
arpl
loope
das
pop
pop
dec
jp
xor
jo
or
xor
mov
jle
into
out
movl
push
add
ss
daa
mov
test
lret
or
fsubrs
mov
mov
in
mov
sub
arpl
pop
lock
sub
mov
je
add
outsb
popf
xchg
aas
sub
fiaddl
cmp
add
repz
dec
loopne
dec
sbbl
cmp
add
movw
jmp
js
cmp
inc
mov
push
cld
mov
rcll
xorl
sahf
test
pop
shll
adc
sahf
popa
jae
mov
sarb
xchg
andl
ret
dec
lods
xchg
xor
inc
je
jae
xlat
mov
lock
das
imull
and
xchg
ror
loope
jp
xbegin
xchg
lock
mov
adc
pxor
fistpl
adc
sbbl
cld
pop
test
dec
mov
icebp
out
mov
pop
insl
stos
cwtl
outsb
jecxz
pushf
arpl
add
lea
mov
lods
hlt
xchg
adc
push
movsl
ret
dec
call
sbb
lcall
ret
jl
and
xor
sub
add
int
push
mov
ds
push
cmpsb
cmp
or
fs
mov
icebp
xchg
ja
js
pop
imul
sti
int3
jnp
cs
sub
mov
inc
dec
nop
stos
enter
jecxz,pn
mov
js
add
push
addr16
repz
jns
pop
xchg
jge
inc
and
aaa
inc
lods
add
jp
jmp
inc
and
gs
add
sub
dec
repnz
mov
jge
ja
test
xor
loop
xor
jne
jo
xor
out
adc
mov
jmp
xchg
lds
test
int
cli
cwtl
bound
mov
inc
mov
rorb
movsl
xlat
adc
and
jecxz
lret
dec
imul
aad
xchg
lods
pop
test
out
pop
mov
lahf
addr16
inc
xchg
adc
stos
inc
sar
js
fldcw
xor
icebp
cltd
adc
popa
sbb
pushf
fs
add
add
cpuid
nop
jmp
cmp
xor
inc
mov
rorl
hlt
daa
and
ficoml
cmc
movsl
pop
sahf
hlt
or
mov
dec
add
mov
lods
es
cwtl
icebp
sbb
mov
sub
loopne
adc
mov
and
lea
es
cmpsb
daa
mov
fnclex
sarb
lds
repnz
push
and
ja
mov
push
cmpsb
sti
adc
lods
lcall
mov
mov
iret
sbb
xchg
icebp
cmc
es
xchg
and
adc
inc
nop
nop
sub
xchg
imul
mov
adcb
cs
pop
test
divb
ds
mov
fcmove
jecxz
mov
cmp
aaa
icebp
add
or
push
sub
lods
add
rorl
lcall
mov
cmpl
js
addr16
cli
rclb
pop
dec
xchg
lea
je
bswap
mov
jmp
fs
cs
ljmp
mov
das
or
ss
orb
arpl
and
mov
mov
mov
sahf
sbb
aam
rcrl
sub
or
in
mov
xchg
and
push
and
shll
inc
test
add
mov
insb
pop
sar
xor
push
lds
add
add
rcrb
cmp
adc
shrb
push
push
daa
sbb
in
cmc
repnz
daa
and
inc
jns
push
or
inc
lds
fsubl
push
popa
jno
into
cmp
imul
add
pop
inc
mov
mov
arpl
cltd
inc
dec
jmp
ss
fucomi
in
xchg
mov
xchg
mov
mov
fcompl
push
in
inc
rdtsc
and
into
lcall
or
mov
xchg
jecxz
es
mov
subl
pop
addr16
inc
fidivl
mov
mov
xor
ret
imul
movsb
mov
je
iret
mov
mov
testb
xor
inc
mov
loopne
jo
push
neg
lcall
pusha
jb
sub
into
in
sbb
jp
jb
inc
scas
xchg
rcl
ljmp
in
adc
fstpt
ds
add
sub
pushf
and
outsb
arpl
cmp
push
jns
push
popf
testb
xorb
mov
xlat
int
or
leave
jnp
in
add
mov
dec
ljmp
lods
mov
sbb
mov
jns
mov
sub
sar
gs
call
jmp
mov
mov
mov
mov
mov
outsl
test
inc
inc
add
mov
add
xor
push
fists
and
pop
jno
pop
xor
mov
sbb
mul
cmpsl
les
loopne
push
iret
out
mov
mov
fcmovne
push
cmp
jp
sahf
adc
xchg
shl
cltd
push
leave
cmc
or
push
cld
cmpsl
nop
andb
ds
mov
inc
mov
or
pop
xlat
dec
lcall
roll
into
jg
jo
sbb
xchg
add
or
xchg
and
pop
mov
pop
imul
sti
hlt
hlt
mov
push
dec
inc
test
push
lods
cld
scas
add
out
jge
test
daa
mov
cli
sbb
pop
pop
aad
test
xchg
cld
xchg
xor
xor
int
ds
scas
pusha
lcall
pop
cmp
stos
arpl
jb
inc
inc
pop
les
dec
out
push
mov
rorl
sbb
xor
outsl
dec
sar
lcall
adc
andb
jecxz
cmc
scas
int
cmp
add
lahf
push
and
mov
lret
jecxz
pop
mov
jae
mov
lret
pop
mov
into
insb
fisubl
and
add
sub
push
ljmp
xor
pop
rcrl
mov
test
movsb
mov
cmp
adc
xchg
inc
sbb
arpl
inc
insb
insb
outsl
arpl
xchg
pop
out
fwait
or
icebp
rclb
sub
mov
js
dec
xchg
add
dec
mov
std
adc
or
mov
mov
push
flds
jno
stc
xor
test
pop
push
mov
fimuls
movsb
jo
insb
mov
ja
dec
dec
daa
gs
add
sbb
mov
call
popa
rcrl
jb
mov
outsb
push
aaa
sarl
or
lahf
mov
sbb
push
or
jae
movsb
cli
outsl
add
xchg
mov
inc
mov
pop
push
push
xchg
int
mov
in
lods
outsb
jae
cltd
mov
js
stos
movsb
sub
sbb
popf
lcall
insl
test
inc
ficomps
mov
or
nop
scas
adc
push
and
and
lea
ja
pushf
sub
pusha
lea
jmp
cmp
push
stc
inc
mov
ja
xchg
and
dec
dec
mov
ljmp
inc
out
daa
pop
add
es
or
adc
cmp
mov
xchg
out
shl
jae
lcall
mov
or
sbb
popa
das
div
fucom
fadds
jnp
stos
inc
ret
in
repnz
mov
push
js
or
dec
addr16
inc
pop
aaa
sub
pushf
adc
xchg
stc
inc
mov
xchg
jle
xor
jle
scas
inc
lret
or
dec
or
sti
int3
popa
and
xor
add
pop
mov
push
pop
jmp
adc
test
andb
sbb
and
or
jge
mov
add
and
jle
sahf
inc
mov
outsl
scas
adc
hlt
ss
es
scas
bsf
mov
inc
clc
mov
bt
cmpb
pusha
call
pusha
movl
call
inc
call
pushf
rep
movzbw
lea
mov
push
pushf
movb
lea
jmp
mov
bt
mov
stc
add
stc
call
movsbw
shl
movl
shrd
setg
mov
jmp
push
pusha
lea
je
push
lea
lea
je
not
movsbw
lea
movzwl
not
movzbw
lea
not
mov
call
test
pusha
movb
pushl
lea
je
xadd
shr
adc
mov
not
rcl
shr
add
and
mov
bt
pusha
push
test
push
pushf
lea
je
sub
shl
add
bts
call
call
in
lret
inc
mov
flds
cmp
xchg
stc
aaa
push
jbe
pop
push
adc
cmp
mov
lea
fdecstp
mov
fwait
and
sub
mov
add
cmp
fisttpll
adc
sub
mov
out
cmp
push
sub
cltd
jb
clc
mov
mov
rorb
xchg
mov
jp
push
push
adc
inc
out
sub
cmp
fistpll
sahf
xor
dec
or
xchg
xor
mov
sti
inc
mov
xor
lcall
lret
cmp
pop
xor
gs
movsb
popf
inc
push
inc
dec
sbb
cmp
mov
mov
mov
dec
fcoms
xor
fwait
pop
mov
sub
jne
daa
xchg
sahf
mov
outsb
pop
sti
sbb
inc
sbb
inc
roll
cltd
xchg
and
jo
push
and
xchg
add
push
cmp
push
subb
pushl
popl
pusha
movw
mov
pusha
pushl
ret
mov
mov
lea
push
dec
movsb
nop
call
sub
xchg
pop
cwtl
movsl
jae
aaa
mov
pop
pop
jo
test
enter
cmc
loop
add
pushf
leave
cld
pop
jmp
clc
inc
roll
into
sub
adc
outsb
cmc
lcall
adc
or
clc
ds
dec
mov
in
imulb
decb
push
adc
xor
out
add
movl
mov
call
add
jmp
push
add
adc
add
push
push
add
and
add
push
push
add
notl
int3
add
add
pop
push
add
add
add
add
pop
push
add
add
add
pop
push
add
add
add
pop
push
add
int
add
add
add
pop
push
add
adc
add
pop
push
add
add
add
pop
push
add
and
add
pop
push
add
cmpsl
push
add
push
add
push
add
in
add
push
add
push
add
push
and
sbb
push
add
push
add
add
add
push
add
adc
add
xor
mov
push
out
ja
stos
cmp
cmp
push
stos
pop
ret
adc
outsb
popa
cld
dec
imul
rolb
mov
add
aaa
ja
mov
xchg
mov
dec
aas
ret
insb
insl
mov
ljmp
insl
mov
call
mov
arpl
ds
pop
add
push
and
shrb
xchg
jo
or
fdivr
inc
inc
stc
inc
dec
jmp
mov
fsubrl
stos
adc
stos
lods
mulb
mov
sub
mov
loopne
neg
mov
cmp
cmp
push
lea
jb
call
cmp
mov
inc
mov
push
inc
pop
repz
int
mov
stc
sbb
shlb
inc
mov
movb
xchg
or
or
mov
pop
js
push
cmpsb
xor
mov
in
clc
rol
sbb
cmp
xchg
lds
sub
imul
jl
or
jno
xchg
aam
sbb
adcb
in
cmp
xor
cmp
nop
es
sub
scas
mov
outsb
mov
popa
sti
into
mov
repnz
xchg
daa
cld
pop
jae
out
jmp
aas
cmp
add
fiaddl
mov
mov
mov
jmp
aas
mov
cmp
jecxz
cmc
add
sar
sarb
push
subl
in
roll
add
push
mov
adcb
and
test
mov
cmpsl
lahf
sub
jecxz
inc
sbb
xchg
bound
mov
pop
lods
lock
mov
and
lret
rcrb
dec
fdivl
stc
insl
clc
fistl
cwtl
lahf
gs
std
or
std
fcoml
cwtl
lret
sti
xor
mov
mov
add
sub
dec
mov
add
cmpsl
xchg
sub
sbb
inc
mov
jb
or
and
xchg
mov
inc
pop
es
lret
sub
lret
fs
or
bound
sub
xchg
movsl
movsb
pop
push
or
jno
pop
iret
or
sbb
jp
adc
push
enter
adc
fsubl
jg
fnstsw
mov
test
fidivrl
iret
lods
sbb
jbe
mov
mov
stos
sbb
ss
std
sbb
sub
add
rolb
pop
push
sub
xchg
shl
sbb
ss
cmpsb
or
or
cmp
push
add
xor
inc
aam
cwtl
lahf
das
push
jae
jne
aas
dec
inc
mov
xor
push
cmp
pop
fstps
je
dec
cmpsl
fninit
jecxz
lock
scas
incb
xchg
pop
jl
mov
mov
push
enter
push
jecxz
pop
nop
jne
dec
and
and
or
ret
decb
jmp
xor
popf
mov
ret
push
lret
loopne
adc
jnp
push
xchg
cmp
cmp
outsb
scas
ret
orl
add
mov
inc
push
push
mov
push
push
sbb
inc
xchg
fcomi
cltd
push
loopne
xchg
jnp
ljmp
das
cmp
sar
ficoml
xor
test
test
jp
fisttpl
out
cld
les
add
jno
bt
or
jmp
pushl
call
call
shr
push
shl
mov
inc
cmp
push
jmp
or
mov
pushf
fcomp
or
fidivl
cmpl
mov
cmpsb
cs
sbb
ljmp
gs
dec
fnstcw
mov
or
mov
lcall
fs
jne
push
call
push
pusha
cmp
jmp
push
mov
lea
inc
imul
clc
mov
and
outsl
push
mov
xchg
xor
cmp
ljmp
push
and
adc
fmull
xor
aas
and
mov
cld
mov
shlb
and
in
loope
pop
imul
mov
pop
xchg
ljmp
xchg
pop
cli
cwtl
ret
or
aam
xor
mov
lea
pop
not
mov
mov
lea
js
push
lea
ja
pusha
pushf
lea
jb
pusha
pushl
pusha
clc
cmpb
pushf
pushf
jmp
movsb
cld
sub
inc
mov
fldenv
in
js
icebp
fs
dec
andl
cld
jmp
push
shlb
out
lods
mov
dec
icebp
xlat
test
roll
dec
enter
popf
mov
fs
cs
sahf
into
mov
sbb
mov
and
add
and
es
mov
fstps
iret
sub
push
or
add
jo
filds
aaa
imul
test
mov
cmp
rcrl
sbb
into
ret
inc
mov
int3
nop
jbe
xorl
mov
xor
enter
jae,pn
lgs
pop
fs
roll
add
add
pop
adc
gs
and
fisttps
push
push
fidivl
leave
ret
into
out
inc
nop
adc
sbb
addr16
jp
mov
inc
xor
sbb
mov
fwait
pushf
push
fildl
fcomps
ret
cmp
popf
hlt
inc
push
ds
pop
or
xor
push
pushf
adc
pusha
call
cmpsb
stos
add
inc
mov
adc
jno
stos
push
xor
mov
mov
and
jg
mov
scas
pop
iret
stc
daa
lods
jle
inc
test
push
pop
mov
sahf
mov
arpl
movsl
jmp
push
jl
push
rcr
xor
bound
arpl
inc
add
sbb
mov
inc
repz
jg
insl
pop
mov
fwait
lods
mov
sbb
cmp
xchg
les
sub
jbe
test
pusha
add
in
and
cmp
adc
mov
in
daa
jne
and
out
lea
je
pushf
call
stc
std
fld
inc
mov
test
cli
fistpl
test
sub
add
push
pusha
pop
jle
movsl
js
lahf
and
mov
mov
push
cmpsl
hlt
xchg
mov
inc
jl
icebp
mov
cmpsl
mov
or
push
adc
jmp
dec
pop
or
jbe
bound
loope
push
mov
mov
cmc
fisubs
push
cmpsl
out
push
sub
mov
or
dec
xor
and
pop
aam
into
push
cmp
cs
lods
or
imul
in
das
xor
mov
mov
mov
outsb
sbb
sub
les
mov
pop
out
data16
sub
sbb
fstp
mulb
add
sbb
and
loop
sbb
cwtl
jnp
movsl
sub
add
shll
xchg
enter
jmp
xor
dec
add
iret
repnz
imul
bsf
mov
das
ror
btr
aaa
sub
add
stc
and
push
aaa
bsr
and
push
mov
pushf
mov
test
cmc
bts
push
add
mov
call
add
dec
outsl
arpl
inc
jb
gs
adc
in
bnd
push
shufps
dec
call
jae
pushf
add
les
fmuls
lcall
add
into
lea
xchg
sub
jecxz
stos
add
pusha
outsb
pop
stos
ss
les
loopne
jnp
and
mov
cmpsb
push
xor
and
inc
and
sbb
jmp
outsb
xchg
dec
jle
aam
dec
sahf
scas
out
sbb
inc
or
sub
lods
inc
push
pushl
movw
jmp
lea
ja
call
dec
dec
inc
push
push
dec
xor
cs
dec
dec
add
shlb
jne
call
push
mov
aad
lea
jle
ds
xor
add
mov
divb
or
cmpsb
sbb
pop
dec
mov
aam
cmpsl
cmp
lock
test
scas
jl
aas
enter
iret
daa
sub
inc
fsubr
cmp
loope
cmpsl
mov
std
shrl
arpl
add
xchg
sub
icebp
jmp
adc
dec
lahf
clc
and
xchg
test
adc
enter
cwtl
dec
cld
daa
add
movsl
xchg
inc
mov
mov
xchg
ds
cmovne
mov
enter
mov
je
xchg
iret
cmc
mov
shrb
jne
dec
inc
fstps
sbb
xchg
lahf
inc
mov
stos
leave
sbb
inc
sti
xor
cmp
in
jle
push
int3
int3
lcall
je
shll
jne
cmpsb
aad
pop
sbb
adc
or
repz
jo
lret
mov
jecxz
int3
jo
jg
in
jne
mov
mov
test
mov
iret
repz
fistpl
clc
inc
out
fdivrl
push
jo
std
inc
std
movsb
pop
mov
call
jmp
cwtl
push
jo
inc
mov
push
mov
cmp
rorb
sbb
adc
inc
push
fwait
mov
inc
stc
mov
test
loopne
dec
test
cli
pop
sbb
lds
or
das
sub
pop
inc
mov
lds
inc
push
jbe
fimull
jnp
cwtl
and
aaa
ret
enter
in
stos
ss
jmp
xor
out
pop
jp
inc
aas
rcrb
jp
daa
cmpsl
mov
sbb
repz
pop
and
jae
out
jmp
push
dec
sbb
cmpsl
jnp
adc
inc
int
stc
cld
fimuls
repz
push
out
jnp
ret
sbb
xor
lret
test
jl
aad
jb
jns
adcb
lahf
roll
fldl
fbld
cwtl
inc
nop
mov
icebp
mov
lcall
div
sub
nop
jecxz
fsubs
popf
xor
xchg
je
pop
dec
fnsave
iret
mov
mov
and
xchg
pusha
jb
xchg
adc
or
and
notb
in
xor
push
imul
dec
loopne
mov
repz
je
inc
icebp
jmp
mov
xchg
cwtl
in
sub
mov
les
mov
mov
inc
mov
not
cmpsb
jl
ret
or
pop
ret
jb
aad
xchg
adc
movsl
js
pop
inc
scas
jbe
mov
push
into
jg
cs
leave
andb
mov
test
nop
jne
insl
dec
shl
mov
mov
in
aam
mov
jg
aas
and
or
aaa
sub
shld
push
inc
push
cmp
jg
mov
jns
fdivrl
stos
mov
andb
das
fcoms
scas
pop
pop
or
nop
mov
adc
int
mov
stos
cmp
cli
shlb
rorl
andl
adcl
jecxz
dec
cmp
or
out
and
cmc
xchg
insb
in
inc
sub
call
lahf
leave
adc
jne
sarl
mov
xor
xor
and
ret
and
sbb
jnp
dec
ljmp
test
or
lea
sub
dec
shlb
mov
outsb
imul
mov
push
ljmp
fs
lock
ret
mov
xorl
xlat
aas
or
idivb
xchg
sub
pop
fcoms
push
mov
test
andl
lret
mov
push
xchg
movsl
cmp
jmp
dec
les
repz
sti
xor
loop
cmp
cs
clc
sub
and
rcr
repz
cwtl
dec
andl
push
aad
out
test
or
lea
adc
pop
test
clc
ror
xchg
dec
sub
hlt
mov
dec
push
test
adc
inc
clc
sti
push
mov
xchg
jmp
inc
inc
in
jmp
mov
out
adc
rorb
pop
repz
dec
fldt
cmp
xchg
out
mov
fstpt
and
test
out
mov
adc
cmpsb
andl
inc
cmp
sar
data16
fwait
xor
aam
in
out
mov
xchg
xor
jp
es
xor
adc
xchg
push
and
cmpsb
mov
stc
sbb
test
jne
mov
mov
jbe
leave
or
iret
mov
sbb
sbb
cld
in
mov
nop
das
lret
inc
dec
daa
and
sub
in
mov
test
jno
xchg
mov
adc
mov
addr16
mov
sbb
xchg
adc
mov
jns
sub
popa
cmp
insb
sahf
dec
sub
mov
int3
mov
cltd
popa
mov
push
or
xlat
repnz
push
jo
jmp
sub
xchg
imul
icebp
jnp
pop
fadd
jno
mov
inc
dec
daa
frstor
lds
sbb
add
adc
in
adc
testl
pop
hlt
adc
rcrb
push
jns
sbb
sub
mov
inc
dec
mov
jno
pop
jno
outsb
and
dec
mov
insl
outsb
mov
lods
sub
scas
xchg
jae
push
mov
push
lret
cmp
int
int3
or
in
pop
add
mov
std
mov
sbb
lahf
sub
setns
mov
insb
outsb
and
cmpsb
mov
into
enter
mov
inc
es
lds
adc
dec
xor
xor
lods
insl
scas
loope
mov
jns
and
jecxz
pop
push
mov
aaa
add
mov
es
mov
jp
cmp
leave
aad
sbb
cmp
loope
xchg
adc
push
out
push
insl
bound
cmc
sbb
pop
jg
push
mov
xor
push
xchg
push
xchg
xchg
fpatan
cwtl
xor
cmp
add
add
add
jmp
jne
movsl
mov
shlb
dec
in
jmp
loop
jmp
insb
loop
sbb
outsb
add
cmp
sub
lds
mov
jle
jnp
stos
mov
shll
or
lret
add
push
adc
or
in
lcall
rolb
aaa
xchg
add
xchg
jnp,pn
mov
sub
rorb
xchg
dec
pop
mull
scas
sti
inc
and
push
xchg
dec
push
and
push
push
cmp
cltd
stc
mov
fmuls
sbb
test
mov
sbb
xor
and
or
mov
pop
ja
fldpi
addl
shll
add
mov
xchg
int3
es
inc
push
pop
jns
scas
iret
rolb
sub
mov
mov
popa
add
sub
cmp
movsl
mov
out
push
sti
aam
jne
stc
loope
add
dec
sbb
inc
not
arpl
push
mov
mov
dec
mov
mov
fisubl
movsb
test
rcll
mov
jbe
scas
sub
pop
push
xor
out
outsb
out
hlt
push
or
sub
xor
and
hlt
mov
rorb
cli
addr16
insl
add
adc
mov
cmc
je
mov
movl
nop
and
int
mov
xlat
xor
and
sbb
int
outsl
out
cmp
xor
cmc
push
gs
mov
nop
ficomps
repz
daa
loopne
push
xchg
dec
mov
push
sub
loope
sub
jnp
jb
cmp
aad
inc
push
stos
mov
mov
arpl
bound
sbb
mov
cmp
pop
mov
out
loopne
sbb
inc
ss
hlt
in
rcll
daa
stos
pop
in
sar
idivl
xchg
push
adc
dec
popa
roll
pop
add
das
mov
add
pop
das
clc
test
xchg
jg
cmpsb
stos
mov
mov
leave
xchg
inc
movsl
dec
mov
pop
ja
ja
cmp
jp
and
cmc
rorb
push
pop
std
hlt
fwait
xchg
or
jmp
push
sub
jo
lahf
stc
adc
out
add
out
dec
mov
gs
push
lret
jae
xchg
pop
stos
shlb
adc
sub
clc
std
pop
inc
jg
sti
sti
lock
cmpsl
xlat
loopne
out
xchg
mov
lcall
int
loopne
mov
inc
pop
adc
push
sub
add
out
and
imul
or
cmp
xor
rcr
int
add
add
pop
xor
push
aas
cmpsb
xchg
in
das
add
pop
mov
sahf
nop
lea
cmpb
out
mov
pop
xor
push
iret
mov
jecxz
lahf
pop
fcmovb
lds
inc
sub
sub
xor
pop
into
push
arpl
stos
outsl
mov
es
ljmp
and
adc
xchg
xchg
mov
loop
jo
add
jns
out
xor
inc
rorb
insl
pushf
scas
pop
mov
and
int
xchg
pushf
cmp
bswap
cmp
fadd
jne
loope
shll
and
sub
pop
xchg
out
mov
inc
arpl
mov
cwtl
vmovaps
and
cld
js
xor
add
nop
xchg
mov
mov
mov
ja
pop
xor
lcall
xorb
xor
lahf
iret
scas
in
addr16
push
sub
aaa
in
int3
push
shrl
out
mov
mov
sub
sbb
aad
sbb
adc
rcll
lds
aas
rep
imul
add
andl
mov
or
and
popf
int
scas
in
xchg
imul
stos
ffree
sbbb
pop
pop
mov
pushf
adc
mov
lcall
test
jo
mov
lock
jnp
mov
xor
push
repnz
sbb
sbb
dec
adc
cmp
addr16
dec
int
nop
or
aam
das
mov
and
rorb
ds
mov
inc
inc
mov
ret
orb
out
popf
fs
dec
jmp
adc
mov
fbld
imul
jmp
sub
divb
dec
pop
cmc
cmp
aas
push
out
mov
ds
add
mov
ret
into
ljmp
call
js
orl
out
fsubr
test
mov
call
mov
mov
or
pop
add
and
les
test
xchg
in
or
push
aam
mov
cmp
and
mov
cmc
inc
adc
mov
sub
mov
decb
repnz
xchg
and
inc
mov
mov
mov
jp
push
mov
adc
leave
xchg
scas
jnp
sub
ret
movsl
stos
mov
fucomi
sub
add
in
adc
je
fcompl
lret
mov
movsl
inc
or
hlt
add
pop
mov
loopne
es
sbb
mov
pop
push
xor
push
orb
jnp
repnz
cmpsl
ds
cmp
mov
push
popf
lret
or
push
xchg
add
cmp
add
sub
dec
out
cmp
sbb
stos
lods
mov
sbb
adc
and
imul
into
lret
xchg
cmp
imul
aad
pop
dec
pop
lahf
lock
adc
adc
sub
pop
imul
add
std
cmp
std
aad
int
push
inc
adc
cwtl
enter
stc
sbb
add
movsl
sbb
sbb
aam
mov
push
aad
mov
xor
adc
enter
scas
subl
sbb
push
les
iret
xor
hlt
push
mov
xor
cmpsl
mov
in
sti
scas
data16
arpl
mov
cmp
jle
loope
mov
loopne
jecxz
mov
cld
lods
dec
and
add
mov
pop
jnp
inc
push
pushw
push
cltd
dec
popf
dec
fstp
repnz
jb
lret
push
sub
and
rcrl
add
lds
adc
sbb
or
mov
and
inc
pop
ja
int3
fisttpll
inc
repnz
fiaddl
sub
xor
andl
sbb
rcr
test
jne
cmp
adc
out
lds
add
shl
mov
faddp
sahf
push
lcall
mov
mov
or
in
adc
add
xor
pop
xchg
push
rolb
dec
stos
xchg
stos
insl
es
fwait
jae
dec
int3
push
or
cmp
dec
mov
daa
pop
and
scas
fwait
cmp
cmp
aaa
sub
mov
int
sbb
dec
mov
push
rclb
pusha
cmp
pop
jnp
mov
cmp
pop
sub
repnz
cmp
das
outsl
insb
pop
shl
aaa
fs
xor
sub
repz
arpl
xor
add
daa
cmc
mov
mov
enter
jbe
sub
xchg
pop
mov
ljmp
in
jo
sub
jb
cmp
in
mov
loope
je
xor
xor
pop
push
inc
shl
xor
dec
aaa
call
mov
stos
movsl
dec
loopne
add
and
cs
cmp
mov
jp
inc
xchg
shrl
popf
jmp
push
subb
mov
sub
fbstp
inc
jl
out
mov
or
cmpsl
in
push
add
and
push
sub
dec
xchg
fs
push
or
push
jmp
adc
push
fincstp
lret
lahf
nop
mov
xchg
push
inc
pop
lcall
cmp
scas
lock
mov
in
sub
cmp
jle
mov
jno
shll
lods
inc
loopne
test
scas
imul
shlb
pop
jg
movb
push
xchg
dec
or
fmuls
arpl
in
push
icebp
les
arpl
and
into
sbb
mov
dec
push
push
push
insb
mov
add
lahf
push
lret
cld
test
or
sub
adc
enter
shrl
mov
in
push
sbb
mov
es
jp
je
fists
adc
clc
test
aad
and
lcall
out
mov
ljmp
in
add
call
cmc
xor
xchg
mov
scas
adc
sub
pop
les
dec
fwait
es
mov
add
jecxz
pop
xor
cmp
pop
add
test
dec
add
call
or
sub
xor
inc
pop
and
repnz
adc
test
push
and
jge
jnp
jle
mov
push
lods
dec
adc
cwtl
cli
popf
rolb
mov
add
popa
add
pop
scas
push
xor
rorb
and
push
lea
test
popa
inc
nop
int3
mov
or
fs
leave
jp
sub
mulb
pop
das
popf
out
adc
imull
inc
dec
jne
testb
add
mov
aaa
fsts
daa
dec
loop
inc
push
les
inc
loopne
cmc
clc
fcmovu
ds
inc
mov
sbb
mov
js
mov
jb
fsubl
or
sbb
jl
into
sbb
data16
addr16
inc
sub
fwait
push
arpl
repnz
scas
out
jne
aam
xchg
xor
and
scas
fistpll
out
pop
stos
stos
mov
ret
fwait
int
mov
movsb
aaa
adcl
xchg
clc
cwtl
fs
xchg
sbb
mov
shrb
sbb
hlt
fxch
add
icebp
sub
scas
shll
pop
adc
lahf
xchg
insb
fstl
fldenv
scas
sub
mov
xor
mov
mov
xlat
pop
loope
inc
cmp
inc
pop
push
jecxz
adc
in
jg
adc
mov
lcall
jns
fmul
cmp
xlat
cmpsb
push
lods
mov
xchg
pusha
push
sub
icebp
jp
cmpsl
and
push
sub
dec
or
pop
in
mov
lret
movsl
inc
out
rolb
xchg
mov
imul
jb
mov
mov
ret
lea
sub
jnp
jne
dec
pushf
cs
mov
scas
sub
add
sbb
das
and
xchg
jmp
mov
jge
pop
lret
pop
mov
mov
push
fisubl
fimull
mov
inc
inc
xchg
arpl
fistps
aam
xor
cli
mov
sbb
enter
mov
in
fmull
fidivrl
sub
incb
adc
movsb
stc
mov
xor
and
shrb
and
mov
ja
xlat
mov
add
cmc
pop
js
cmp
push
daa
xor
sub
pop
in
and
jecxz
mov
mov
xor
cmp
test
xorb
sub
pop
call
ds
adc
push
loope
lret
fcom
jbe
xor
dec
or
jg
mov
lahf
mov
pusha
lock
cltd
pop
pop
lock
jp
pop
mov
jo
sbbb
loopne
out
jae
sbb
pop
push
or
sub
mov
cli
and
sahf
cmp
jnp
insb
dec
inc
xchg
pushf
outsl
inc
dec
pop
out
cmpsl
xchg
sub
mov
push
ja
je
outsb
cmp
dec
imul
adc
dec
jge
mov
cmp
into
jg
or
fs
push
fnstcw
xor
inc
aas
adc
xchg
test
lods
push
jne
outsl
inc
das
cs
in
jo
rcll
in
push
jne
add
jle
insb
mov
pop
inc
pusha
out
ja
mov
dec
iret
shl
sub
rclb
lret
lret
dec
je
sub
dec
fcomps
stos
fsubrl
sbb
inc
aam
stc
fs
jno
int
jg
add
cmpsb
jp
repz
jle
fwait
gs
insl
add
dec
in
int
les
pop
sahf
mov
gs
dec
xchg
xor
cld
loope
imull
hlt
jb
cltd
mov
sahf
push
into
xchg
jae
ljmp
pop
adc
outsl
aaa
leave
sub
stc
jne
inc
inc
pop
sbb
push
jmp
faddl
int3
xchg
es
mov
pop
push
jecxz
cld
cli
fsubrl
sbb
les
jb
dec
movsb
pop
out
push
call
js
and
pushf
call
mov
das
jbe
cmc
sahf
push
lret
lahf
or
xchg
push
popw
mov
jmp
imul
or
mov
xchg
push
faddl
cmp
push
test
pop
push
mov
or
push
push
push
mov
out
push
xlat
ljmp
jno
pop
fdivs
ljmp
lds
scas
jl
and
and
add
push
pop
dec
xchg
filds
mov
and
test
or
dec
mov
mov
cld
add
push
lods
or
xor
cmp
sub
lock
adc
sub
xor
sbb
jg
dec
call
aam
mov
rolb
xchg
mov
and
movsl
add
xchg
cmp
inc
sub
push
push
xorl
jb
popf
test
movsb
cmp
sbb
in
out
sbbb
ficoms
das
dec
fstps
xor
mov
jg
imul
in
mov
xor
cmp
mov
or
sub
and
fldln2
xchg
xor
int
mov
popa
data16
sub
xor
ficoms
lret
mov
data16
jae
xor
addl
dec
mov
cmp
lds
dec
clc
fnstcw
inc
jp
fdivs
sub
xchg
frstor
repz
das
xor
push
data16
mov
or
dec
push
sbb
xchg
sbb
add
mov
lods
mov
adc
lahf
pop
add
cmp
flds
dec
in
xchg
inc
or
adc
xor
xchg
xor
mov
adc
fisttps
hlt
stc
jb
mov
xor
fadd
push
ljmp
adc
mov
loope
cmp
xor
test
out
jecxz
adc
in
or
out
scas
adc
fbstp
pop
cmp
aas
or
sbb
shrb
daa
xchg
mov
sbb
icebp
jb
fwait
bnd
jge
icebp
shrl
jb
xchg
arpl
xchg
testb
scas
test
inc
lahf
push
xlat
mov
je
out
add
in
icebp
mov
add
push
sub
adc
push
popa
test
mov
outsb
adc
mov
repz
xor
mov
out
and
ror
rorb
lret
cwtl
or
jns
mov
clc
aad
sbb
out
mov
iret
jmp
dec
xchg
xor
push
cltd
insl
jns
and
lods
dec
add
jl
xchg
es
lds
icebp
lea
dec
adc
jns
cltd
scas
cmpb
int
xchg
movsb
mov
loopne
xor
stos
inc
pop
sub
jle
repz
not
push
xor
mov
fwait
outsl
push
test
sgdtl
xchg
scas
sub
sbb
mov
xor
dec
mov
jns
stc
addl
add
aad
pop
cwtl
sahf
bound
and
aam
pop
push
pop
ret
mov
adc
push
iret
cld
in
jne
inc
cmp
sub
clc
dec
stos
mov
dec
test
imul
xchg
iret
push
mov
push
lds
jl
cmp
dec
ds
xchg
dec
mov
leave
pushf
mov
aam
jmp
push
pop
test
std
leave
pushf
gs
xchg
inc
mov
add
cmc
fsubr
data16
xchg
into
mov
mov
mov
mov
cmpsb
jg
mov
add
inc
int3
cwtl
insb
push
mov
cltd
xchg
call
ja
and
ja
sti
sub
or
jns
or
push
jp
or
lret
les
xlat
dec
into
test
pop
popf
jno
lret
mov
mov
icebp
movsl
cmpb
gs
out
add
cltd
mov
out
test
addl
mov
lahf
lods
insl
test
cmp
lea
or
lret
push
or
imul
iret
es
in
lock
js
xorl
pushf
aas
sbb
push
or
cmpsl
adc
scas
pop
push
xchg
addr16
push
in
mov
sub
and
inc
cmc
fnsave
pushf
sub
push
sbb
bound
inc
dec
sti
arpl
add
pop
iret
pop
pop
push
push
popf
inc
lret
jno
or
lcall
fdivrs
inc
sbb
mov
push
add
add
xor
jns
cmp
outsl
test
ret
xchg
test
jge
push
jl
sbb
lods
or
and
ret
and
cmp
push
repz
sbb
testl
inc
lock
notl
repz
xchg
mov
repnz
nop
in
cltd
insb
pop
sbb
ret
lods
xchg
inc
xchg
push
ret
je
inc
xchg
or
std
in
test
xor
or
adc
jmp
push
cmp
push
sub
add
int
insl
push
adc
addb
and
sahf
xor
xchg
outsb
push
lock
adc
adc
push
and
and
sub
mov
xorl
aaa
int3
and
test
pop
mov
sbb
testb
scas
orl
mov
or
stos
roll
fldt
and
mov
mov
lcall
in
cltd
clc
lahf
imul
addr16
adc
in
sub
xor
sub
sub
add
pop
enter
cli
jne
out
cs
test
and
xor
stos
nop
shrb
mov
outsb
push
mov
inc
mov
adc
out
mov
rep
inc
push
add
adc
mov
dec
call
rclb
icebp
cltd
das
inc
jg
jmp
push
mov
lret
jl
test
pop
hlt
cs
ficomps
ds
push
je
xor
clc
lea
pop
in
lods
xchg
ja
cltd
mov
incb
jns
cmp
cli
push
out
push
popa
hlt
sbb
pop
cs
fldln2
sbb
aaa
mov
sti
nop
sub
xor
sub
dec
cmpsb
shr
rolb
loop
adc
add
mov
xlat
cmp
stos
jbe
adc
je
repz
inc
mov
dec
dec
inc
xchg
cmp
sbb
adc
xchg
repz
dec
push
je
daa
aad
dec
push
mov
insb
cmc
int
ret
sub
insb
add
ljmp
into
sub
jmp
mov
jae
adc
cmp
xchg
or
xchg
jbe
cmc
out
dec
enter
push
int
mov
std
dec
lahf
pop
cmp
hlt
mov
popf
jnp
xchg
add
enter
repz
or
or
xlat
movzbw
mov
shrd
mov
not
jmp
dec
inc
sub
sbb
int
cmpxchg
std
loopne
ljmp
negl
test
add
rcrl
int3
add
mov
add
test
pushf
inc
mov
mov
dec
test
push
push
data16
loope
fmull
stos
jae
je
test
add
lahf
mov
xor
mov
mov
arpl
fildll
xchg
xchg
mov
inc
mov
loop
add
es
dec
rorl
mov
fimuls
dec
sbb
test
je
mov
int3
in
nop
lock
cwtl
sub
aaa
pop
pop
sub
sub
jg
xor
dec
jg
push
data16
in
rol
cmp
and
das
pop
mov
call
dec
push
es
cmp
clc
cmc
xchg
cmp
idivb
shll
dec
aad
insb
inc
fsub
jle
jae
sub
cs
inc
pop
or
testb
sbb
xor
fs
inc
into
inc
icebp
mov
xchg
aas
clc
movsb
in
push
cltd
fcoms
push
pop
sar
fwait
sub
jmp
cmp
shr
push
sbb
mov
xchg
scas
bound
mov
inc
or
movsl
push
push
jo
lock
and
adc
push
xchg
test
sti
je
scas
jge
and
ror
push
lcall
cli
jb
adc
or
jmp
inc
mov
dec
pop
inc
cmpsl
in
ja
out
mov
mov
popa
jp
cltd
pushf
cltd
mov
fmul
jbe
xor
lret
insb
adcb
rorb
inc
mov
outsb
xchg
cwtl
clc
in
mov
addr16
and
test
mov
jp
lock
ljmp
push
mov
and
push
mov
push
out
jno
mov
mov
and
scas
or
mov
fsubrs
fcoml
or
pop
dec
pop
stos
add
out
jo
out
gs
pop
xchg
movsbw
movl
pushf
pusha
bswap
not
lea
call
outsl
insb
gs
cs
insb
add
in
cmpsb
inc
mov
mov
pop
fwait
repz
jl
jge
leave
sarl
mov
jg
lods
xchg
dec
insl
push
mov
inc
cld
xchg
mov
push
push
insl
popa
fldcw
add
test
out
das
aam
pop
mov
mov
loopne
adc
cmp
cld
jmp
ljmp
insl
push
outsb
sbb
pop
testl
idiv
cmp
jnp
push
jnp
mov
lret
out
jbe
mov
inc
mov
pop
sbbl
aas
mov
xor
jae
pop
sbb
imul
mov
xor
imull
imul
sbb
and
clc
inc
je
in
cmp
dec
xor
sbb
stos
sbb
loop
stos
jle
mov
pop
mov
mov
shlb
mov
aam
popa
inc
dec
rcrl
mov
out
adc
outsl
adc
loope
outsb
jecxz
sti
mov
fcomip
negb
add
jg
pop
pop
pop
js
inc
mov
adc
imul
xor
andb
inc
or
or
daa
xchg
or
xor
xchg
mov
xchg
into
xchg
ljmp
addl
cwtl
test
cmpsl
and
xchg
in
push
repz
fnsave
jne
mov
cmp
mov
or
xlat
movsl
lods
push
sub
and
mov
sbb
dec
lods
in
leave
fsubr
pop
fsin
lcall
mov
sub
fdivs
dec
insl
fs
ficoml
ja
out
xor
sahf
pop
call
lcall
or
pop
cmp
mov
push
add
out
icebp
or
movsb
ds
or
sbb
pop
sub
pop
test
mov
div
cmp
ljmp
inc
aam
dec
mov
inc
jg
sbb
inc
or
ljmp
inc
lea
mov
xor
mov
aam
int
inc
in
lea
insb
sbb
cwtl
xchg
xor
nop
inc
push
xor
push
inc
lock
xor
jae
and
xlat
loop
push
mov
mov
mov
mov
inc
mov
cmp
pop
pop
int
dec
pop
adc
aaa
int
jl
addr16
dec
bound
cmc
shrb
mov
jge
push
movsb
jmp
loopne
jg
ret
sub
aas
mov
lods
fists
filds
inc
movsb
mov
hlt
daa
inc
daa
sbb
insb
xor
enter
andb
push
lcall
push
jge,pt
xchg
or
xor
aaa
jg
cld
out
sub
and
cmc
dec
lods
jg
fcmovnbe
sub
inc
add
mov
shll
das
mov
sub
pop
xchg
sbb
push
mov
ljmp
data16
add
aas
jecxz
inc
mov
and
push
leave
int
dec
test
dec
es
je
mov
jne
cmp
int3
mov
dec
jmp
mov
mov
testb
push
push
mov
xchg
xchg
xor
and
out
loope
pop
test
inc
fmul
aad
je
dec
cmpsb
hlt
jne
shll
fucomip
xchg
rorb
and
jp
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
jmp
inc
fmull
inc
mov
clc
in
or
add
loope
cmp
outsb
test
repnz
mov
add
mov
inc
mov
outsb
mov
mov
or
not
push
inc
repz
lea
add
xchg
arpl
pop
add
inc
mov
js
and
dec
cs
pop
mov
and
pop
jmp
push
sbb
fadds
faddl
push
mov
cmpsl
ret
dec
sbb
pusha
adc
lds
test
sub
xchg
mov
ss
xchg
jle
jo
push
bndstx
stos
inc
mov
push
cmpsb
stos
aaa
popf
stc
test
das
mov
mov
push
mov
pop
ds
jns
ror
ss
mov
es
push
add
cs
xchg
cwtl
jbe
call
popf
out
push
xchg
icebp
out
push
outsb
and
aam
sti
and
add
mov
xchg
xrelease
movsl
cmp
mov
push
lea
pushf
call
lods
sarl
inc
mov
pop
sub
insb
mov
rcrl
mov
jp
shlb
jmp
std
jb
mov
out
aaa
push
xor
push
ror
dec
repnz
call
fstp
push
addr16
popf
xchg
in
in
pop
mov
and
add
xchg
cltd
jns
mov
mov
sub
and
push
stos
ja
mov
push
hlt
imul
mov
cmp
jae
adc
sbb
mov
or
loopne
hlt
cmpsb
xor
in
ret
or
outsb
js
jmp
mov
mov
cwtl
aam
repnz
mov
loope
cltd
outsb
negb
cli
jne
pop
stc
movsl
mov
mov
sbb
jb
scas
push
not
push
inc
pop
inc
rcrb
fucomp
int
loope
lods
sub
test
pop
pop
test
mov
ljmp
jp
test
adc
inc
in
lds
mov
repnz
aas
mov
out
mov
push
mov
and
mov
fldt
movsl
xor
ret
cld
lods
sub
push
movl
fucompp
into
inc
decl
pop
mov
mov
pushf
movl
pushf
lea
call
pusha
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
pusha
into
lods
inc
mov
mov
lds
aam
loopne
pop
inc
fwait
jmp
imul
dec
mov
popa
nop
xchg
jge
xor
aaa
inc
cltd
fildll
addl
xchg
sub
jmp
daa
rcl
cmp
loope
movsl
hlt
int
pusha
adc
cmpb
jae
ljmp
arpl
and
jno
dec
push
loopne
cld
loopne
push
sti
and
and
lea
and
fcoml
dec
mov
out
mov
pop
adc
inc
pop
or
mov
stos
jg
ljmp
add
scas
dec
outsl
mov
arpl
adc
jg
sti
call
lea
and
jno
xchg
sub
ds
jo
cwtl
addb
cmpsl
cmp
sub
repnz
add
mov
cmp
mov
push
loop
lahf
mov
dec
mov
in
dec
xchg
dec
push
das
dec
mov
aam
ja
xchg
mov
xchg
sub
enter
call
clc
clc
bt
test
pushf
jmp
inc
push
ja
inc
mov
push
fimull
push
inc
nop
mov
not
sysexit
mov
divl
in
push
mov
ret
pop
dec
jecxz
lock
imul
push
cmp
lods
sub
xlat
into
adc
fsubp
fstpt
cwtl
jl
pop
arpl
xor
sbb
insl
call
cltd
mov
ja
push
jl
cmp
lcall
daa
cmp
dec
inc
dec
mov
nop
cwtl
icebp
push
pop
sub
sti
jne
and
or
add
sub
xor
test
test
dec
mov
pop
mov
mov
leave
xorb
mov
ffreep
push
inc
cmp
dec
inc
ljmp
fs
dec
or
jno
add
aad
lods
jb
jns
xchg
or
push
or
es
popf
sbb
mov
call
adc
imul
pop
pop
xchg
scas
jp
out
jge
xchg
add
or
xchg
push
mov
xchg
inc
jne
fldl
push
in
scas
inc
mov
das
dec
jns
les
repz
jmp
mov
xchg
cmpsl
movsb
pop
cmp
add
lods
out
dec
pop
outsl
or
mov
add
mov
stos
test
xchg
cwtl
loope
rclb
outsb
add
dec
jmp
into
cmpsb
lret
imul
scas
clc
adc
xor
cmp
jnp
outsb
je
push
inc
or
xor
add
inc
gs
outsl
arpl
add
lea
jae
bts
shld
mov
sar
pusha
mov
setle
mov
cmp
pushf
sub
push
repnz
call
call
cmc
rol
call
aam
sub
inc
mov
fldt
pmulhw
jno
add
loop
xor
repnz
decl
pop
or
or
mov
sub
lods
movsl
xlat
adc
jns
add
int
int
cmp
cli
imul
or
lahf
mov
add
cmp
jecxz
xor
push
scas
aad
push
andb
and
sub
ja
insb
mov
pop
ss
mov
and
lds
mov
mov
xchg
sti
sbb
cmp
sub
cltd
fwait
outsl
ret
outsb
jae
pop
cltd
js
mov
cmp
cmp
adc
mov
and
adc
sub
data16
cmp
dec
je
push
aad
rcr
shll
mov
jb
add
sbb
add
stc
mov
hlt
outsb
je
out
movl
mov
jmp
jmp
add
push
insb
popa
jns
outsl
jne
fs
add
inc
adc
aas
pop
imul
je
inc
xchg
pop
cli
hlt
fdivr
loop
lret
push
loop
stos
jb
xor
pop
loope
pop
add
testl
into
cld
shlb
push
lcall
test
xchg
movsb
xchg
xor
pop
push
sti
pop
stos
adc
icebp
ja
stc
cs
and
jle
pushf
pop
stc
rcll
addr16
cmovae
andb
jb
cmc
push
cmp
pusha
pushl
lea
jae
sbb
bsf
rol
mov
sub
btr
xadd
push
mov
lea
rcr
mov
clc
pusha
xor
test
test
pushf
mov
repnz
pushf
lea
jne
sar
ror
shl
bt
mov
lea
rcr
movsbl
sub
sub
movzbw
mov
stc
sub
cmc
pusha
pusha
pushl
popl
pushf
cmc
jmp
movsb
sbbl
cmpsb
jge
mov
test
movsl
cmpl
xchg
imul
push
insl
mov
pop
mov
sub
dec
pop
int3
and
sbb
hlt
scas
jmp
pop
ljmp
lahf
mov
shrl
jno
lods
cmp
and
and
lahf
cltd
adc
fstl
or
scas
out
fs
sti
adc
mov
insb
or
mov
jno
adc
cmpsl
lds
dec
push
insl
add
pmulhw
inc
and
das
cs
xor
mov
jmp
in
jo
mov
mov
jp
dec
movsb
push
incl
test
jg
mov
shl
inc
pop
mov
lea
push
sub
pop
in
dec
push
lea
mov
xchg
push
addl
mov
scas
out
adc
dec
mov
jle
pop
mov
loope
cmp
negl
push
loop
inc
loop
jle
test
inc
and
inc
inc
mov
mov
mov
jb
cltd
sub
mov
mov
jns
mov
add
mov
addr16
testb
repz
mov
in
mov
out
rcll
mov
in
dec
sbb
dec
rorl
out
mov
or
adc
arpl
dec
stos
add
mov
add
push
cmp
jno
push
and
jl
dec
xchg
adc
mov
mov
cmp
or
pop
scas
cmp
leave
imul
xlat
divl
shll
jge
into
jmp
mov
mov
insl
fldcw
ret
cmp
inc
cmp
out
dec
fnstenv
cltd
gs
push
dec
lret
and
sub
in
pusha
pop
cmp
int
in
cmp
andb
fwait
clc
ljmp
mov
enter
xchg
push
imul
mov
jnp
or
and
test
scas
stos
lock
lret
jnp
inc
mov
xlat
mov
xchg
je
sub
mov
lods
push
jb
stc
mov
jne
and
icebp
cmp
inc
xor
xchg
jmp
adc
mov
pop
xor
add
mov
xlat
xor
jmp
lahf
push
movsb
dec
mov
andl
inc
je
fwait
out
icebp
cltd
cmpsl
in
inc
test
std
jmp
cmp
lock
adc
and
loop
fwait
dec
and
orb
mov
movsbl
test
mov
cmc
shl
shr
sub
shl
xor
mov
clc
pusha
sub
cmp
lea
jns
pusha
push
pushl
popl
stc
cmp
jmp
sub
cmp
bt
movb
clc
cmp
pushf
lea
mov
mov
mov
call
not
bt
cmp
jmp
cmp
pushf
cmp
pusha
call
movl
movb
pusha
mov
lea
jmp
call
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
in
inc
mov
xor
cmc
sub
cmp
loop
push
int3
push
mov
inc
sbb
test
ja
add
and
mov
xchg
ret
imul
aas
push
xchg
aad
cmp
cmp
test
cmp
add
jne
or
ljmp
xor
pusha
mov
pop
insb
push
lds
lret
test
pusha
xor
cmpb
lret
pusha
subb
xchg
mov
pop
fsubs
xchg
incl
and
sbb
sub
xor
dec
lock
jb
clc
or
sbb
arpl
dec
and
push
jmp
rolb
cmp
xchg
push
ds
push
std
xchg
sub
xchg
xorl
ja
and
cmp
or
inc
add
jo
nop
push
sti
sbb
stc
cli
jl
and
dec
mov
gs
push
das
lods
inc
cmp
loop
decb
test
push
sbb
fs
jg
mov
mov
fistps
push
adc
sub
adc
mov
inc
fisubl
adc
jbe
mov
in
je
loop
cli
sbb
add
stc
jne
push
mov
mov
mov
aad
mov
adc
nop
adcl
xchg
int
mov
gs
and
cmpsl
push
lds
sbb
sbb
ret
icebp
add
imul
popf
fs
inc
out
rol
dec
ldmxcsr
cmpl
pop
mov
movl
aaa
pop
cmovle
negb
jg
push
out
inc
dec
in
xor
mov
xor
movsl
cmp
mov
xchg
idivl
ror
ljmp
lret
enter
daa
dec
je
mov
mov
daa
mov
jb
fcomip
push
mov
dec
cmc
das
xor
pushl
repz
push
mov
inc
xchg
mov
ret
xor
mov
push
pop
jle,pn
inc
enter
stos
aaa
or
cmpb
inc
pop
jg
jno
push
mov
xchg
in
movsb
movsl
outsb
lret
push
testb
add
jl
mov
jg
and
xor
stos
sahf
fisubrs
jle
add
xor
adc
xor
inc
scas
lods
cli
pushf
mov
mov
inc
pusha
cld
and
jp
mov
push
dec
pop
jl
add
mov
aaa
aaa
xor
scas
mov
mov
mov
mov
movsl
inc
iret
clc
les
push
inc
fwait
mov
xor
adc
cmp
jnp
inc
mov
mov
jp
lret
jl
icebp
movntq
andl
gs
mov
pop
int3
mov
fidivs
cmp
lret
sub
mov
jl
js
mov
push
pop
jle
repnz
stos
lret
scas
mov
xor
inc
cmpsb
sub
test
pop
movsb
mov
daa
dec
ds
call
ror
cmpsl
fcoml
cmp
das
sub
sub
add
add
mov
xchg
push
dec
pop
into
jmp
lcall
daa
jl
test
in
lcall
inc
push
sbb
idiv
fldenv
incb
insl
int
xor
fistps
add
inc
fwait
scas
cmp
xchg
cmp
lret
int
xorb
pop
pop
aad
out
andb
jl
sub
or
cmpsl
iret
lcall
dec
lcall
mov
add
sti
divb
dec
sbb
cmp
clc
mov
lea
popl
leave
and
enter
aaa
js
roll
sbb
aas
mov
gs
popa
jmp
fucomp
cld
adc
pop
ffree
sub
mov
or
cwtl
scas
bound
cmp
adcl
sub
popl
jl
sbb
or
pavgb
out
mov
incb
dec
jp
jbe
ret
sahf
bound
pop
dec
inc
dec
into
xchg
inc
push
pusha
insb
mov
mov
xor
ret
mov
pop
jmp
mov
in
bound
cmp
sbb
cmp
push
int
fidivrs
jle
pop
inc
jle
outsb
aas
xor
sub
xlat
inc
push
push
and
out
xchg
cmp
sub
inc
dec
dec
mov
lods
iret
cmpsb
and
adc
pop
out
call
add
fistps
mov
fisubrs
aad
testl
jl
mov
das
addr16
jae
and
nop
and
les
enter
call
xor
pop
inc
pmaxub
mov
pop
pop
out
and
push
xchg
xchg
fistps
or
orps
xor
sbb
popa
pop
insb
cmp
lret
sbb
iret
in
pushl
out
mov
stos
enter
mov
fisttps
add
ja
scas
jo
lret
femms
push
xor
scas
sbb
iret
mov
mov
into
cs
dec
xlat
outsb
jo
dec
cltd
lcall
aaa
aas
cs
paddq
das
repnz
inc
or
push
lds
inc
pxor
in
outsl
dec
lea
cmp
mov
cs
iret
sbb
jg
aas
mov
bswap
mov
pop
out
scas
aad
outsb
lea
outsl
andb
dec
lods
scas
test
sub
mov
jne
sbb
dec
or
aas
outsl
dec
mov
push
daa
scas
push
daa
out
out
add
push
std
fisubl
xchg
inc
mov
or
maskmovq
imull
mov
out
int
popf
aaa
cmpsl
es
stos
es
out
daa
ss
lcall
cld
xchg
jg
mov
std
nop
ss
das
jbe
stos
fisttpl
mov
push
aaa
stc
sahf
or
inc
incb
pop
out
loop
sarb
das
jbe
or
scas
ss
or
out
dec
scas
sub
sub
ficomps
mov
popf
ds
xor
test
addr16
mov
mov
mov
sub
daa
xchg
cmpsl
add
or
sub
lcall
jg
or
lods
pop
cmpsb
sub
cmpsl
or
dec
mov
out
dec
ja,pt
dec
push
aas
out
mov
lea
cs
mov
leave
push
jg
jg
push
cmp
jbe
push
dec
out
sub
push
das
sub
xchg
fwait
adc
jbe
xor
adc
add
mov
daa
pop
jg
xlat
mov
loope
shl
pop
les
xlat
xchg
pop
mov
jae
dec
repz
fs
test
inc
or
scas
mov
inc
mov
pop
lret
pop
and
push
mov
mov
cmp
xlat
bound
inc
pop
mov
jne
xor
xor
mov
or
inc
cmpsb
xor
fidivrs
ja
pop
addr16
xor
scas
sarl
fistps
movsl
jl
mov
jg
adc
adc
push
mov
pcmpeqd
sti
aaa
mov
cwtl
mov
dec
xorl
push
xor
scas
adc
enter
sbb
or
xor
push
sub
iret
aaa
dec
pop
rorb
mov
orl
repz
cmpsb
enter
rorb
xchg
fnstsw
cld
mov
xor
rolb
xor
cmp
aas
in
adc
shrd
stos
or
fs
dec
jb
daa
aas
pop
test
lea
imul
lret
pop
aaa
int
pop
iret
aad
ret
pop
int
sbb
cmp
mov
movsl
fisttps
dec
int
cmp
stos
cmp
push
iret
sarl
mov
xor
jl
mov
push
ds
pop
xor
push
dec
imul
shrl
call
xlat
pop
lods
scas
mov
inc
or
jg
filds
fnsave
mov
push
cmp
stos
xchg
cmp
mov
push
xor
mov
mov
das
mov
jg
pop
das
mov
int3
aad
xlat
or
test
daa
popa
ds
add
inc
out
pusha
roll
movsb
outsl
mov
aaa
leave
inc
lds
xchg
inc
push
sub
iret
repz
lret
shld
daa
inc
cmp
or
test
into
out
movdqa
test
divb
negb
outsb
leave
out
insb
inc
add
daa
movlps
iret
sti
pop
jbe
jmp
divb
pop
sub
cmp
into
lcall
incl
dec
or
jge
pop
mov
cmp
ss
ss
inc
dec
push
mov
or
outsl
loope
mov
mov
or
mov
cmpsb
lods
outsl
popf
addr16
repnz
imul
imul
mov
jg
mov
incl
mov
pop
xchg
cmpsb
xchg
xchg
lret
push
jge
call
push
sbb
mov
mov
aas
stos
jg
stos
jl
int3
cmp
sub
rcrl
pop
sbb
jp
test
jg
sub
outsl
cltd
aaa
xchg
pop
xchg
dec
push
scas
push
out
lea
fistpll
mov
dec
lods
jb
dec
cmp
out
jae
cmp
insb
lea
jg
adc
mov
and
or
cmp
pop
repz
push
adc
cmpsb
dec
js
in
pop
iret
inc
sbb
sbb
aaa
jb
scas
and
pop
inc
push
push
in
scas
sub
xlat
outsl
enter
notl
or
pop
pop
cmp
mov
inc
scas
jl
int3
cmpsl
push
loope
dec
mov
aaa
or
sbb
lods
inc
in
jl
or
pop
jo
mov
and
out
mov
lcall
mov
daa
hlt
jne
inc
adc
es
pop
jl
cld
xor
movsb
mov
cmpsl
stos
in
bound
mov
int
scas
icebp
jle
cmp
cs
cmpsl
xchg
jp
mov
pop
cs
aas
lods
scas
mov
rclb
jl
adc
data16
cmp
ss
xor
jo
and
jp
ja
lods
lods
pusha
jae
adc
push
iret
xlat
and
clc
pop
stos
mov
mov
fiaddl
jle
add
sti
push
add
dec
mov
inc
mov
in
int3
cmp
aam
daa
push
ljmp
movsl
push
mov
mov
xor
decl
xor
push
fdiv
jl
xchg
jg
jecxz
inc
aaa
jl
sub
stos
mov
es
fisttps
push
sbb
push
and
ljmp
jle
or
and
pop
xor
pcmpgtb
dec
push
loope
into
cmpsl
dec
aas
aaa
xor
stos
pop
inc
inc
xor
jns
loope
xchg
outsl
idiv
sub
or
cld
iret
divb
dec
sub
sbb
xchg
das
cmpsl
and
mov
and
jg
mov
push
int
mov
pop
push
pop
cmp
jg
pusha
sbb
or
jg
jecxz
scas
mov
inc
aas
jl
inc
jmp
xor
xor
xadd
pop
mov
enter
mov
and
jp
ja
mov
push
mov
fwait
mov
ljmp
mov
idivl
into
loop
pushf
shlb
pop
xor
sub
sub
imul
and
add
push
lods
rclb
pusha
popa
test
orb
lods
scas
mov
add
dec
lret
add
ret
dec
in
jmp
inc
sbb
sbb
adc
dec
and
fists
cmp
xor
popf
sti
enter
lds
adc
cld
mov
jmp
cmpsl
lret
sbb
lret
xchg
inc
and
push
pop
dec
out
rorl
in
dec
fbstp
jnp
pop
popa
push
mov
mov
sub
dec
push
mov
jg
add
movd
out
fcom
sub
jg
clc
nop
ret
aaa
lea
push
inc
mov
jo
scas
push
or
xor
mov
adc
cwtl
adc
cmp
ja
aas
scas
mov
out
sbb
mov
jg
popa
xor
jne
jl
lcall
das
inc
pop
add
add
pop
xchg
mov
movl
or
cmpsb
jle
jg
inc
add
popl
dec
imul
cltd
dec
andl
xor
imul
dec
sahf
xchg
sub
stc
add
adc
cmp
shrl
push
iret
icebp
dec
pop
jg
nop
inc
data16
or
jo
fwait
cwtl
shll
jle
mov
pusha
sahf
mov
mov
popa
xchg
push
cmp
adcb
adc
inc
inc
add
mov
into
scas
into
jg
or
lahf
jle
jb
mov
scas
mov
xchg
test
out
enter
pop
cmp
or
jecxz
stos
das
push
jge
imul
rcr
mov
fsubrl
and
or
sub
lcall
addr16
jae
adc
jmp
lcall
dec
add
fistps
outsb
stc
orb
popf
add
pop
mov
int
subl
repz
or
mov
add
add
jmp
dec
mov
nop
jg
inc
test
dec
push
pop
cs
adc
mov
lods
mov
out
mov
mov
mov
movsb
dec
or
subb
cmp
cmp
repz
mov
sar
cltd
daa
int
xor
jp
mov
setl
cld
jle
out
push
loop
xor
jg
mov
pop
sub
aas
ljmp
pop
jg
ret
or
dec
xchg
jg
cltd
mov
jbe
dec
or
mov
add
call
dec
loop
lcall
mov
jg
scas
or
pop
mov
adc
out
mov
test
cmpsb
adc
jo
dec
or
mov
push
mov
push
inc
hlt
cmp
mov
dec
gs
inc
mov
xchg
andl
push
into
add
shll
jl
pop
mov
pusha
lods
dec
enter
and
dec
hlt
and
enter
lods
cmp
xor
mov
push
sbb
lret
movsl
push
mov
mov
mov
fwait
xchg
sub
or
inc
negl
sub
aaa
rcll
out
ds
jg,pt
push
push
popf
mov
stc
lahf
lret
arpl
stos
mov
scas
pop
lods
lcall
dec
arpl
dec
jecxz
mov
test
sub
nop
pop
addr16
pop
lods
shrb
mov
or
adcl
jg
or
icebp
jl
stos
mov
fldcw
dec
push
into
adc
jecxz
jmp
sti
int
pusha
leave
lcall
mov
push
push
mov
and
out
dec
std
lds
jnp
pop
cwtl
ss
icebp
movntq
cmp
push
fistps
subb
cld
cld
scas
or
fstl
cmp
jle
into
test
fs
test
ficoms
inc
clc
popf
push
packuswb
ljmp
sub
int
mov
repz
mov
inc
mov
or
push
enter
mov
sub
cmp
mov
inc
mov
ror
int3
xor
iret
mov
add
xchg
sub
mov
mov
aas
pop
dec
push
enter
jg
cs
movsl
xchg
mov
dec
pop
nop
bound
cs
out
stos
scas
int3
sbb
scas
adc
and
mov
mov
mov
idiv
repz
and
imul
push
ret
ljmp
push
or
dec
pop
into
pop
fmul
out
arpl
stos
push
lcall
jl
sbb
mov
dec
sub
xor
push
les
insb
pop
int
dec
push
add
cwtl
mov
xchg
dec
dec
test
inc
out
inc
xchg
idivb
fimull
cmp
ljmp
enter
dec
xor
ret
insb
jge
jns
mov
jecxz
std
addb
cld
sub
mov
fs
movups
jp
mov
jp
dec
push
xor
in
dec
cmp
inc
dec
aaa
arpl
mov
dec
and
jp
add
cmp
pop
add
xchg
jl
test
cmp
dec
sbb
and
cmp
frstor
mov
sub
mov
shlb
out
push
mov
out
ja
rcrb
jl
dec
ljmp
movsb
fisttps
dec
xor
icebp
or
clc
scas
jp
cli
jae
cmc
repz
cmp
xchg
push
mov
and
lcall
dec
jle
mov
inc
sbb
mov
jb
and
cmp
mov
inc
sub
xor
sub
dec
les
xchg
lods
out
adc
ds
cmp
testl
fwait
pop
packssdw
xor
mov
sub
jle
cmp
fimull
xlat
xchg
dec
cmp
mov
pop
fstps
sub
add
mov
dec
push
sub
push
mov
jle
stc
movsl
add
sti
jl
pushf
mov
imul
xchg
ret
and
pop
sti
mov
aas
daa
adc
and
cmpl
jle
mov
fwait
movsb
xor
push
imul
int3
push
lods
mov
jle
or
add
add
out
mov
aaa
sahf
or
scas
fcoml
lock
lds
inc
push
xlat
push
pop
mov
jl
cmpsb
in
mov
into
push
mov
xchg
cmp
push
mov
jns
mov
inc
push
inc
dec
enter
ja,pn
fisubs
aas
sbb
data16
into
cmpsw
push
mov
inc
lods
cmp
cmp
sub
movsl
fldt
scas
and
pop
dec
imul
sub
repz
iret
cs
imul
gs
aad
mov
mov
imull
xlat
hlt
push
arpl
ret
mov
stos
nop
sub
jl
add
call
stc
ficoml
dec
in
sub
pop
inc
jl
sub
jmp
sub
jo
into
jo
loop
sub
ss
push
lods
stos
ss
data16
jl
sub
std
sarb
lods
add
jle
movsl
and
call
xor
push
cs
faddl
inc
lods
jbe
out
add
in
ficoml
je
mov
and
aam
xchg
and
add
adc
ss
cs
verw
push
inc
push
cmp
xor
data16
mov
xchg
daa
jle
loopne
dec
push
scas
cmp
jb
das
popa
fisubl
push
movsb
cs
inc
shrl
mov
incl
jmp
cli
pcmpgtb
cmp
cmp
inc
jle
push
gs
pop
insl
into
mov
inc
pop
mov
cmpb
push
add
dec
jl
lods
fistpll
sub
stos
lahf
lret
sub
add
les
test
mov
xchg
daa
mov
mov
btc
daa
sub
xchg
fwait
inc
or
cmp
push
cs
jg
jecxz
loop
inc
adc
jne
cmpsb
jg
cmp
push
loop
inc
jl
ljmp
jecxz
xchg
xor
movsl
pop
cmp
sarl
test
cmpsb
mov
scas
cmp
lods
stos
add
lret
mov
pop
adc
shlb
mov
cld
lods
and
dec
and
jle
mov
mov
and
popa
sbb
pop
addr16
cli
adc
mov
cmp
test
icebp
in
add
inc
je
shrl
jae
pop
mov
insb
xor
jl
or
and
out
lock
dec
inc
add
stos
repnz
out
jl
xchg
inc
sub
mov
popf
xor
xchg
js
inc
mov
dec
jp
sbbb
lcall
dec
ja
movaps
pop
stos
mov
aam
dec
cmpsl
js
gs
adc
notl
mov
mov
ja
fisubs
cmpsb
mov
inc
ljmp
imul
ret
in
push
adc
repnz
ds
aaa
cmp
lret
lcall
mov
lret
iret
pop
outsb
push
cmp
adc
insl
and
xor
cmp
inc
jg
loope
fisttpll
adc
adc
mov
push
aas
sbb
fildll
sbb
add
adc
dec
mov
and
int
pop
mov
mov
push
mov
push
dec
in
stc
mov
cltd
mov
call
xchg
push
pop
add
push
sbb
sub
lods
or
and
sbb
add
add
mov
jl
ds
adc
test
out
push
sub
mov
cld
sbb
pop
and
js
outsl
mov
dec
stos
insb
bound
or
rcrb
ficoml
mov
and
push
repz
cmp
loopne
jle
push
out
enter
jbe
mov
fwait
testl
pushf
in
mov
pop
and
sub
mov
shr
mov
int
int3
inc
dec
movsl
scas
in
sbb
mov
jmp
jg
xor
ret
pop
and
adc
mov
xlat
outsl
enter
xchg
and
dec
fwait
pushf
mov
les
mov
lret
mov
xchg
sub
and
shrb
scas
into
in
out
mov
lods
push
mov
dec
addb
cli
lods
pop
fmul
out
lock
in
repz
aam
xor
inc
jp
push
fiaddl
cltd
es
adc
lcall
jmp
pusha
xor
mov
mov
jl
int3
in
xchg
mov
fsub
stos
inc
add
addr16
push
les
mov
and
mov
sub
jle
add
sbb
or
push
sti
or
and
leave
lcall
or
hlt
jp
mov
push
pop
dec
icebp
jle
jo
lcall
inc
mov
and
add
xor
je
addr16
dec
aas
mov
mov
xchg
ds
lcall
dec
std
sub
outsb
xlat
pusha
add
adc
push
mov
jle
mov
xchg
das
jl
outsb
add
mov
pop
sub
ret
or
into
mov
mov
inc
dec
sarl
bsf
into
xlat
dec
mov
mov
fimull
push
std
pushf
cmp
add
faddp
shll
pusha
inc
xlat
movsb
inc
mov
mov
mov
pushf
mov
leave
cld
pop
push
jne
mov
mov
pop
dec
ljmp
dec
mov
adc
dec
mov
xor
cmpsl
cs
xchg
and
push
mov
popf
testl
enter
xchg
cmp
sbb
inc
pop
xlat
inc
mull
pop
sbb
xor
push
add
pop
iret
fiaddl
mull
inc
add
out
out
mov
movd
xor
adc
fs
cs
repz
rolb
dec
cld
out
mov
cmp
std
daa
or
int3
cmp
xor
in
or
xchg
jl
imulb
ret
fcoms
out
loopne
jle
je
rorb
xchg
lret
shlb
inc
or
jle
fists
ds
int3
movd
add
mov
dec
adc
jl
negb
sub
js
dec
out
jg
iret
std
stos
inc
in
add
pushw
cltd
cmp
or
xor
mov
add
mov
lock
ds
scas
jl
cmpb
ret
inc
pop
test
in
adc
cli
xor
mov
call
mov
icebp
cmp
pop
and
mov
push
push
jo
fs
mov
in
mov
mov
idiv
orl
jg
inc
push
ss
pop
das
cmp
lods
jecxz
outsb
inc
sahf
cltd
mov
jo
mov
dec
jl
fsubr
cmp
add
cli
inc
cmpsb
xor
popw
xchg
int3
data16
ret
jp
xchg
jb
into
movq
outsb
pusha
cmc
inc
cs
add
inc
dec
fs
filds
xor
jo
out
cmp
cmp
mov
pop
jle
sub
std
push
add
xor
add
les
repz
popf
xchg
cmpl
addr16
shr
outsl
sub
popf
sbb
dec
mov
sbb
cmp
push
cmp
loope
cmpsl
pop
xor
jmp
jp
test
pusha
scas
jp,pt
xchg
cmp
dec
scas
jle
sahf
movb
mov
rorb
xchg
addl
mov
add
call
jp
bound
cltd
int3
mov
add
mov
sbb
shl
mov
xchg
and
cmpsb
add
pop
enter
movq
pop
push
sub
cld
loope
icebp
int3
sbb
addr16
rep
loope
push
and
mov
sbb
outsb
repz
jle
call
nop
xlat
out
mov
cmp
ljmp
lcall
rcr
aaa
cltd
scas
pop
cmp
lcall
loope
cmp
xor
repz
pop
out
mov
movsl
inc
sub
aas
aaa
fidivrs
mov
pop
pop
data16
lea
les
pusha
cmpsb
outsb
lret
stos
xor
ja
pandn
jle
jne
mov
andb
ds
jo
pop
into
mov
xchg
pop
lds
cmp
jl
add
in
sub
clc
fdivl
movsl
movsl
cld
dec
jne
jl
insb
xchg
inc
addr16
adc
dec
ffree
jle
push
ja
push
bnd
cmp
dec
in
ja
push
sahf
cmp
jecxz
pop
cmc
mov
xchg
stos
xchg
mov
into
hlt
ss
cmp
fs
jg
into
cmp
pop
loope
movsl
ljmp
loope
and
stc
pop
aam
stos
xor
cmp
lods
les
cld
pop
and
xchg
jg
lods
jnp
adc
or
cmp
mov
idiv
mov
xchg
int
js
daa
lret
xchg
cs
andb
adc
jl
call
ds
jo
ss
stos
fimuls
in
mov
mov
rorl
pop
push
in
ja
cmp
cmpsb
sahf
shll
push
mov
mov
xchg
in
push
push
stos
sti
and
mov
add
cmpb
dec
shll
ret
jle
movsl
or
mov
rcrl
cmpsb
sarl
icebp
scas
sub
add
inc
inc
lcall
xchg
cmp
loope
mov
stos
dec
push
bound
mov
jbe
cmp
dec
lret
mov
pop
adc
dec
aas
stc
scas
pop
cmp
dec
pushl
inc
inc
cmp
in
into
stos
stos
or
pusha
add
pushf
and
mov
out
std
fmull
std
data16
enter
lcall
scas
mov
in
in
idivb
lret
cmp
add
cmpsl
inc
and
xchg
push
push
cs
xchg
pop
hlt
mov
mov
jp
insl
sub
pop
fwait
lea
pop
int3
nop
and
jl
pop
xor
mov
mov
add
push
hlt
cmp
xchg
ficompl
sub
dec
lods
jg
push
ss
jl
jb
lcall
add
cli
cld
jb
movsl
lret
fwait
ljmp
stos
sub
cmp
int
shrl
mov
xchg
xchg
stos
les
add
std
sub
sub
jecxz
dec
push
test
loopne
cmpsl
out
jl
dec
loop
and
xchg
es
jp
out
sub
jb
loop
mov
aas
pusha
mov
xor
hlt
inc
inc
ret
sub
or
or
out
ds
lahf
inc
jle
push
clc
mov
sarl
cs
mov
mov
xor
adc
mov
mov
test
or
fwait
cmp
fildll
jle
fsubrl
faddl
sbb
imul
les
in
mov
adc
jbe
cmc
dec
jg
inc
int3
push
pop
and
daa
sbbb
aas
add
ds
mov
ret
jp
daa
xchg
stc
sub
mov
mov
into
jg
mov
cmp
outsb
pop
adc
sub
jp
cld
notl
aas
mov
lods
test
dec
pusha
or
stc
dec
out
and
into
xchg
dec
fs
xor
mov
rorl
pop
jo
and
cmc
cmp
lock
cmp
or
into
push
sarb
cmp
xchg
xchg
lahf
xor
dec
mov
cltd
dec
ljmp
out
cmp
leave
shll
mov
dec
dec
or
fs
ret
mov
xor
and
clc
iret
ds
mov
fcomps
filds
out
addr16
add
aam
fisttpll
pop
cmp
sub
sti
pop
pop
ja
xchg
inc
jmp
dec
or
and
movl
xor
sahf
cs
mov
xor
cs
ficoml
and
ljmp
popa
jmp
pop
add
mov
scas
insl
dec
fsubrp
adc
mov
cmp
cmovge
jno
xchg
dec
mov
dec
dec
hlt
arpl
dec
xchg
gs
dec
insb
jle
lret
jb
cli
push
inc
jge
jg
enter
ja
mov
xor
mov
out
arpl
in
dec
dec
out
idiv
sbb
mov
inc
push
xchg
push
push
lret
xor
inc
sbb
sub
dec
mov
daa
insb
push
orb
jae
imul
leave
test
mov
xor
push
push
mov
mov
xchg
jo
js
sub
pop
cmpsb
jnp
dec
xor
mov
out
xchg
jg
mov
je
popa
and
or
xchg
into
adc
mov
dec
mov
mov
dec
mov
das
sub
push
mov
jmp
dec
or
xchg
jbe
mov
or
mov
mov
inc
movsl
xchg
mov
dec
inc
dec
cmp
jbe
jge
push
mov
out
dec
das
sub
or
imul
dec
xlat
mov
cld
pop
dec
adc
push
pop
sub
pop
dec
adc
add
clc
dec
jb
aad
xor
sbb
sub
jmp
dec
and
fwait
sub
cmc
sbb
or
in
push
jmp
dec
ficoms
imul
out
sbbb
jae
or
inc
cmp
mov
inc
mov
inc
out
cmpsb
enter
fimuls
lods
inc
cmp
mov
fstps
fdivrs
mov
stos
cmp
cmp
fisttpl
popa
jle
outsl
dec
dec
cmpsl
push
jl,pn
inc
xlat
das
lods
scas
xchg
inc
inc
pop
jg
dec
js
inc
push
dec
outsb
insl
pop
pop
in
adcl
or
xor
xchg
dec
dec
mov
orb
mov
jns
mov
push
sub
sbb
or
ds
inc
and
lods
inc
cmp
lret
cmpsl
xor
jp
mov
and
mov
popf
inc
bound
mov
insl
cmp
cmpsl
js
cmp
mov
movsl
in
push
iret
mov
aas
out
inc
mov
sub
in
fisubrs
sbb
retw
shlb
sub
lcall
fimuls
pop
hlt
jg
pop
movsb
rol
negb
out
fcomps
mov
stos
scas
push
inc
divb
cmp
mov
outsb
lahf
scas
pop
jl
scas
inc
mov
cmp
mov
mov
push
sub
repnz
cmp
sub
inc
adc
pushf
aaa
jl
and
push
rcll
lds
dec
inc
xor
test
ret
xchg
into
sahf
mov
xor
shrb
push
in
daa
mov
shll
sub
xor
dec
sbb
pop
dec
lods
cmp
pop
ljmp
jbe
inc
inc
cmp
cmp
insb
lret
or
pop
lahf
inc
jns
pop
push
daa
cmpsl
adc
push
cmp
fimuls
pop
in
or
dec
mov
or
dec
rcrb
pop
dec
xor
sarb
test
ret
dec
out
repz
sar
or
outsb
sbb
push
push
xor
iret
xor
inc
notl
inc
inc
das
sub
push
lahf
dec
bound
xchg
std
nop
pop
push
aas
or
jg
or
jle
daa
std
dec
lds
faddl
cmp
push
mov
out
popf
xorb
arpl
jbe
fisttpl
dec
sti
gs
mov
dec
or
popf
dec
hlt
int3
ds
insb
cli
loope
dec
or
out
mov
xor
mov
mov
dec
xchg
or
pop
in
add
add
leave
je
dec
jns
mov
jb
repz
dec
ret
mov
xor
jmp
mov
pavgb
and
jg
or
push
stos
or
sbb
es
xchg
xor
fwait
inc
neg
and
jb
pushf
das
xor
dec
xrelease
mov
or
int3
mov
into
adc
pop
xor
cmp
adc
mov
mov
pop
ja
mov
jle
ret
dec
pop
fadds
stos
arpl
fstpl
dec
mov
cwtl
adc
xchg
repnz
stos
rcrl
xor
and
pop
push
aaa
adc
sub
in
call
dec
and
ret
aad
loopne
dec
dec
push
sti
mov
popa
int3
clc
mov
out
mov
repz
cmp
fbstp
mov
mov
dec
in
and
jge
clc
dec
push
dec
stc
dec
or
call
dec
xor
rorb
cld
xchg
and
icebp
jl
push
or
cmp
inc
stos
mov
int
jmp
aaa
jle
arpl
xor
sub
cmp
sahf
adcb
loopne
fnstenv
mov
inc
xchg
cltd
and
insb
mov
enter
inc
xchg
stos
ss
push
in
pushf
sub
ljmp
pop
out
pop
cs
adc
int
out
shll
mov
mov
sbb
ja
or
lret
icebp
aas
sbb
adc
xchg
shll
jle
mov
jl
mov
mov
push
daa
lret
xor
cltd
fdivs
ja,pt
cmp
cs
cmp
out
mov
push
mov
dec
push
mov
sub
fs
roll
add
cltd
xor
push
aas
mov
jmp
mov
xchg
sbb
outsl
lds
ret
hlt
push
xor
jle
push
dec
inc
jg
out
inc
inc
imul
ss
lret
dec
dec
push
cmpsl
jl
mov
inc
jg
pop
pushf
or
in
ds
jmp
leave
xchg
push
call
roll
je
inc
adc
jmp
addr16
cmovae
fsubl
jle
lret
dec
js
pop
movsl
call
add
cli
push
jecxz
jno
pop
cli
scas
xchg
cmp
xor
add
push
sbb
xchg
xor
inc
jg
out
and
adc
sub
cmp
movsl
les
pop
push
dec
mov
loop
shrl
pop
dec
fs
pop
aaa
cmpsb
jle
jl
cmp
xchg
hlt
popl
fiadds
inc
adc
ss
cmpsb
jg
xor
in
xchg
add
ds
mov
sbb
jae
mov
fdivrs
ror
jns
les
and
mov
bound
rolb
js
cs
aas
fstpl
mov
push
dec
fildl
push
ds
das
pop
cmp
je
mov
out
jle
repz
dec
dec
out
jnp
out
dec
pop
dec
das
fwait
adc
popf
je
loop
xorl
pop
ss
mov
dec
pop
inc
in
push
or
popa
sbb
xchg
outsl
imull
cmp
mov
mov
xchg
adc
jge
lods
mov
dec
insb
test
arpl
lods
mov
fmuls
in
cmp
pop
pop
in
pop
adc
or
dec
dec
add
movsb
aaa
cli
flds
dec
lea
cmpsl
nop
imul
test
cmp
into
ja
adc
scas
sti
lahf
enter
mov
dec
push
cltd
add
int
xor
in
mov
sub
testb
repnz
pop
adc
sub
pop
shll
jle
mov
mov
and
mov
mov
sub
je
xchg
pusha
adc
mov
or
ljmp
decb
mov
jnp
mov
outsb
cmpsb
inc
xor
js
std
iret
repnz
int3
int
out
mov
jbe
lods
out
cmp
leave
dec
cmc
das
or
cs
add
dec
jo
out
rolb
pusha
movsb
xchg
cs
pcmpeqd
adc
cmp
lods
or
cmp
lcall
aas
mov
leave
cmp
jg
mov
dec
push
xor
and
dec
sub
push
das
adc
shlb
ljmp
cmp
lret
adc
jle
cli
inc
scas
stos
fisubl
sarl
inc
cmpsl
cmp
sub
and
xor
movsb
jb
adc
rorl
ss
aam
dec
scas
cmp
bound
dec
ds
dec
mov
jg
and
or
push
jbe
xchg
inc
popa
dec
jl
rcr
sti
call
pop
push
bound
repz
cmp
jle
xchg
cmp
loop
dec
into
cwtl
jae
inc
push
lret
das
mov
cmp
rclb
shrl
out
sub
mov
ret
mov
and
sub
jle
lods
out
dec
testl
pop
and
xor
in
mov
dec
dec
sub
sub
push
inc
dec
in
jns
or
data16
push
dec
mov
xchg
mov
dec
add
sahf
inc
pop
shll
das
or
push
adc
pop
inc
sahf
pop
xor
adc
out
into
push
dec
xchg
jecxz
clc
das
sub
dec
je
push
mov
sub
call
xchg
shrl
dec
out
jge
mov
insl
and
inc
mov
call
inc
fadds
mov
stc
or
inc
xchg
and
dec
adc
test
dec
mov
xchg
add
flds
cmp
xchg
dec
xor
xor
adc
dec
shr
push
xchg
mov
jmp
add
shl
dec
mov
imul
jle
or
xor
push
and
push
mov
fldl
lcall
jp
push
cmpsb
or
pop
fstpt
cmp
mov
fimull
sub
add
mov
xchg
dec
xchg
lret
jns
aad
jp
inc
dec
int3
lods
pop
jno
adc
daa
mov
fs
adc
xlat
lcall
inc
fimuls
insb
mov
cmp
iret
dec
out
adc
fists
pop
dec
mov
or
dec
and
cld
dec
mov
sarb
insb
into
cmc
add
pop
or
mov
mov
mov
dec
int3
mov
repz
add
mov
sbb
xchg
dec
jbe
es
lret
mov
dec
lods
push
inc
cmpsb
push
popa
mov
je
fcmovnb
clc
dec
daa
fs
aad
test
dec
mov
out
into
mov
jle
dec
and
cmpsl
cmp
fisttps
jae
xchg
frstpm(287
repz
dec
pusha
adcl
ret
dec
inc
sbb
mov
jo
push
jle
aad
cmovnp
pop
add
pushf
pop
call
pop
push
outsb
push
mov
out
push
icebp
dec
mov
and
outsl
add
mov
or
mov
pop
jbe
dec
fbld
jl
dec
dec
in
xor
fwait
ja
and
sbb
push
test
pop
shr
jmp
pop
mov
dec
and
popf
loope
clc
jl
sbb
mov
jno
inc
jmp
mov
test
dec
iret
ja
push
outsb
or
nop
sti
mov
inc
or
sbb
push
shll
lea
outsb
sbb
data16
inc
or
adc
adc
jae
mov
pop
pop
int
pop
sti
test
clc
pop
inc
movsb
xchg
push
add
dec
jno
scas
xchg
jg
push
push
dec
in
roll
aas
fimuls
iret
push
adc
dec
lahf
fists
sbb
dec
rcrl
std
and
int3
dec
negl
fldenv
push
cmovle
cmp
loopne
or
mov
aas
or
fldenv
pop
xchg
mov
sbb
inc
imul
enter
rorl
sub
dec
pop
inc
stc
leave
xchg
ret
int
icebp
outsl
xchg
loope
in
jl
mov
out
icebp
jo
aad
jle
pop
dec
je
ds
insb
scas
lods
and
inc
jg
or
popa
aam
and
ja
imul
aam
icebp
enter
push
and
cld
xchg
out
inc
sub
push
inc
int
ds
test
mov
jle
dec
lahf
outsl
outsb
xor
popf
mov
mov
jg
lods
jle
lret
mov
push
dec
jp
dec
or
nop
jl
rorb
lds
movsb
push
push
jge
loop
cs
xor
jl
repnz
leavew
jge
cmp
bound
repnz
lahf
inc
push
repz
inc
mov
mov
mov
pop
push
popa
dec
out
int
jle
or
and
mov
and
jg
jl
push
pop
cs
call
mov
lds
icebp
cmp
mov
leave
pop
popl
mov
scas
into
mov
add
and
dec
cmp
jg
push
orl
daa
aad
xchg
stos
fdivp
es
sbb
cmp
out
push
inc
mov
scas
cmpsb
jle
outsb
into
jl
pop
xor
xor
adc
aam
dec
xor
mov
cmp
daa
or
rclb
es
cmp
cmp
out
testb
lret
iret
cmpsl
wrmsr
inc
xchg
into
jle
pop
mov
cmp
pop
and
lods
cmpsl
out
out
mov
sbb
jl
lea
dec
mov
sbb
cmp
out
scas
xchg
inc
jmp
cmp
in
dec
rcrl
jl
stos
std
mov
dec
mov
int3
jmp
inc
outsb
mov
cmpsl
sub
rcr
xchg
push
jb
dec
out
jl
mov
dec
scas
lea
dec
scas
test
sub
nop
repz
add
jle
lcall
sub
lds
xor
mov
jb
mov
icebp
fwait
dec
sub
fisttpll
int3
sub
push
out
stc
lahf
and
jnp
decl
iret
lods
aaa
inc
fdivp
adc
ja
add
push
inc
lods
adc
aas
cmp
xorb
imul
mov
xor
jl
and
insl
add
scas
aas
mov
arpl
out
inc
in
pop
pop
dec
neg
xchg
cltd
adc
lret
mov
mov
stos
jle
mov
mov
xor
ljmp
sbb
jmp
adc
dec
dec
ret
out
dec
stc
mov
int
xlat
ror
mov
sub
sti
insl
mov
xor
repz
pop
call
xchg
dec
cmp
jge
aaa
jl
xor
pop
and
add
das
dec
pusha
mov
push
vpcomw
cs
sbb
dec
data16
inc
push
lea
out
dec
jg
jge
insl
movsl
push
call
jg
sbb
movd
jle
inc
fwait
rorl
hlt
or
cli
das
das
mov
cmp
cs
notl
pop
and
dec
pop
arpl
push
add
dec
ficoms
cmp
jg
lahf
jecxz
ljmp
lods
imull
stos
int
and
inc
movsl
jb
cmp
movsb
nop
out
dec
dec
not
mov
icebp
loope
inc
xor
add
stc
outsb
movsl
push
mov
push
pushf
and
cmp
or
jg
pusha
xor
push
or
pop
pushf
cmp
inc
aam
pusha
cs
xchg
pop
xor
ret
test
xchg
fsubp
dec
fs
inc
or
iret
adc
sub
shlb
cmp
lcallw
inc
js
jg
or
cmp
inc
xor
push
and
xor
cmp
sub
mov
sarl
pop
iret
cmp
shll
scas
pop
into
and
stos
mov
pop
dec
dec
mov
das
lock
aaa
sub
mov
mov
sbb
repz
sub
sub
cmp
dec
jge
mov
insl
rcr
xchg
icebp
xchg
icebp
ret
das
xor
jle
mov
adc
add
cmpsl
add
mov
lret
shll
and
in
aaa
xchg
mov
mov
xchg
dec
sbb
adc
and
cmp
dec
inc
sub
scas
push
mov
in
fadds
lahf
mov
xchg
push
or
les
fisttpl
and
cmp
jae
jmp
mov
mov
leave
fst
jmp
push
scas
repz
pushf
jmp
push
aam
xchg
dec
xor
test
dec
inc
addr16
shll
aas
jbe
push
shll
mov
insl
clc
dec
lds
std
jmp
mull
mov
xchg
adc
dec
dec
sbb
adc
mov
xchg
dec
insb
call
out
adc
or
xor
mov
inc
arpl
pop
and
outsl
stos
pop
jmp
mov
inc
cwtl
les
sub
ljmp
pushf
int
arpl
fiaddl
mov
sub
push
mov
shrl
xlat
aad
dec
arpl
adc
dec
add
cmpsb
dec
xchg
inc
jge
insl
aaa
es
sub
sbb
jbe
dec
stos
xchg
mov
fisttpl
push
and
xor
jnp
rcrb
rcrl
ljmp
clc
push
inc
add
mov
mov
out
dec
lds
in
je
in
popf
sti
dec
mov
and
iret
or
dec
loope
cmp
clc
dec
pop
inc
stos
xchg
ljmp
lret
xor
mov
dec
sti
lret
push
loope
dec
dec
mov
test
xor
or
and
lcall
jle
xchg
jge,pn
and
ja
sub
jno
sbb
movsb
and
rep
dec
mov
cltd
fildl
inc
aam
mov
push
cmc
pop
and
adc
cwtl
sbb
jle
out
fistps
roll
xchg
jle
adc
inc
push
enter
mov
inc
into
pop
pusha
int
insl
out
dec
push
jl
jno
scas
das
jg
dec
testl
jae
mov
pop
dec
idiv
xor
xchg
ljmp
out
sub
aaa
into
dec
and
sti
scas
es
int3
fidivrs
jbe
sub
add
shlb
loopne
testb
das
push
cmp
push
dec
xchg
mov
test
dec
add
push
jg
add
xchg
cmp
cmp
adc
dec
loopne
xor
push
jg
mov
sbb
sub
xchg
scas
xchg
popa
fildll
aad
xchg
inc
or
jb
int
jne
inc
jl
pop
cmp
pop
ss
hlt
adc
or
aaa
shll
push
add
adc
pop
jno
pushl
dec
lret
xor
loop
xchg
mov
leave
dec
aam
movsl
pop
adc
mov
push
repz
cltd
outsb
rep
mov
dec
data16
in
push
jne
fwait
movsl
mov
ja
add
lahf
sub
sub
leave
inc
cmp
mov
lret
pop
in
pushf
cmc
orl
push
xor
hlt
icebp
sbb
stos
dec
mov
arpl
add
mov
mov
cmp
add
and
push
cmp
pop
inc
outsb
cmp
testl
pop
lds
pop
fldt
enter
ret
sbb
pusha
lret
mov
dec
cmp
jae
dec
sbb
jns
or
dec
lea
shl
mov
xor
jo
jp
push
adc
imulb
icebp
pop
cld
dec
mov
outsl
jnp
add
pop
arpl
rorb
mov
sub
enter
mov
aad
pop
iret
push
insl
inc
jle
and
pop
cmp
push
pop
mov
push
std
icebp
dec
push
xor
push
stc
fisttps
sti
movsb
xor
xor
f2xm1
mov
adc
stos
ja
fistpll
jmp
icebp
sub
outsb
xchg
dec
jg
leave
mov
out
arpl
sbb
fisttpll
push
inc
add
jnp
addl
sarl
dec
pop
test
andl
mov
jbe
mov
in
lret
cmp
jmp
xlat
jne
inc
pushf
mov
sub
jg
xchg
dec
in
es
call
xchg
dec
mov
add
scas
mov
and
xor
pushf
dec
push
iret
pop
sub
ds
dec
xchg
mov
dec
dec
loop
cmpsb
je
jmp
sbb
ja
nop
lds
mov
adc
cmc
pop
lods
insb
push
scas
dec
dec
out
sub
aad
mov
lods
aas
cld
insb
es
mov
sub
add
fmuls
ret
aas
dec
out
daa
call
inc
xchg
inc
scas
loop
call
dec
ljmp
mov
xor
dec
xchg
and
mov
xor
add
test
dec
pop
out
test
rcll
dec
cmp
testb
mov
or
adc
mov
dec
push
or
out
pop
rorb
cwtl
inc
cmc
or
pop
or
mov
xchg
aad
cmp
dec
ret
fimuls
or
scas
pop
and
or
or
dec
and
push
add
sbb
mov
mov
out
jae
pop
xor
test
xchg
outsl
jge
dec
mov
sti
cs
sub
cmp
fnsave
or
das
and
dec
dec
mov
out
and
sbb
mov
cmp
out
mov
cmp
test
dec
daa
xor
cmp
inc
xor
jnp
xchg
into
jnp
add
aad
mov
sahf
outsb
stc
ret
xor
imull
nop
iret
lods
mov
dec
sahf
hlt
lret
inc
or
push
dec
lcall
ds
dec
mov
call
dec
xchg
hlt
mov
mov
shll
lods
js
lahf
mov
pop
ret
mov
mov
lret
dec
adc
mov
cmp
cmp
dec
pusha
into
sbb
inc
push
dec
xor
insb
adc
push
pop
jg
sahf
test
xor
cmp
add
movq
and
pop
mov
cmp
sub
xor
nop
clc
xlat
lcall
cmp
pop
out
xchg
daa
ja
pop
adc
mov
loope
mov
iretw
test
and
mov
dec
call
xor
test
mov
push
jnp
mov
xchg
jae
jbe
cmp
mov
lahf
add
aas
lret
and
enter
ja
dec
inc
lods
rcl
mov
int
and
inc
cmp
in
mov
push
jl
enter
sub
mov
mov
outsl
dec
mov
inc
push
push
and
xchg
and
test
jl
loope
dec
mov
dec
cmp
test
jo
push
and
mov
fwait
mov
daa
lahf
stos
imul
out
dec
jns
clc
outsb
mov
cmp
sub
pop
mov
inc
rcrb
mov
sub
push
ss
cmp
jae
sbbl
mov
lea
jecxz
adc
xor
mov
cmc
imul
loope
cmp
add
jo
sarl
pop
fldenv
dec
addr16
scas
mov
std
mov
dec
xor
cmc
test
in
mov
sbb
dec
dec
inc
push
popf
aas
push
add
dec
lods
adc
in
push
in
xchg
jmp
sub
xchg
cli
jl
and
and
movsl
mov
xor
or
adcb
gs
into
jns
loop
in
jecxz
dec
mov
add
jle
dec
pop
pop
iret
shrd
jge
push
push
loope
jecxz
pop
fiadds
pop
call
rcll
pop
mov
sbbl
xor
cmp
cs
out
jl
dec
or
mov
stc
dec
lods
push
add
es
test
cmp
inc
aam
jnp
addr16
sahf
dec
inc
jl
push
pop
mov
cmp
push
push
xlat
xor
cwtl
xchg
sti
sub
lret
pandn
cld
cmp
mov
dec
pop
stos
sub
dec
icebp
push
cmp
into
xchg
jl
xchg
fwait
dec
iret
inc
cmp
aam
mov
sar
mov
sbb
sti
pop
sbb
sub
push
dec
sahf
fistpl
dec
sarl
cmp
inc
inc
lock
cli
cmp
in
jmp
and
xchg
test
mov
sub
in
mov
mov
divb
add
push
sbb
jg
jmp
mov
fs
rol
hlt
inc
jl
je
jo
jb
sub
xlat
bound
loop
pop
repz
cmp
push
cli
in
mov
jl
iret
fnstcw
jp
push
int
add
push
push
mov
repz
mov
dec
int
inc
nop
dec
cmp
xchg
inc
int3
sbb
cmp
scas
out
push
call
ret
inc
xor
xor
dec
dec
push
pop
addr16
xor
dec
mov
mov
dec
xor
and
lea
xchg
mov
shl
dec
int
xchg
movsb
mov
sbb
into
adc
mov
aad
stos
pop
js
pop
jno
sub
iret
clc
dec
pop
mov
jecxz
jmp
fdivl
adc
lcall
dec
repz
push
inc
add
rorl
or
lret
hlt
xlat
dec
push
movsb
cmpsl
xchg
cwtl
fstp
xor
mov
adc
or
mov
cs
or
xchg
fcoms
int3
popf
data16
sub
cmp
aas
xlat
ret
dec
popa
xchg
add
movsb
cmp
dec
shrl
les
add
jo
and
cmp
dec
loop
add
xchg
dec
es
mov
cmpsb
filds
out
sub
push
insl
pop
xor
test
dec
in
loopne
sbb
jle
dec
adc
lods
xor
mov
stos
fsts
dec
push
popa
inc
dec
push
inc
cli
mov
rorb
ja
dec
xchg
psadbw
xor
lret
dec
mov
inc
push
mov
stos
stc
in
hlt
dec
jg
shlb
stos
push
loopne
add
std
push
addr16
icebp
pop
inc
negl
mov
fistpll
gs
lea
xchg
in
dec
sti
lock
xchg
popa
ret
or
mov
jle
add
pushf
mov
xchg
jae
sarb
cmp
scas
inc
pop
data16
out
nop
jg
sub
push
xchg
hlt
rorb
dec
mov
pop
testl
scas
andl
dec
push
aam
and
fistpl
hlt
dec
jnp
mov
orl
push
mov
fadds
jle
icebp
pusha
xchg
inc
dec
cmp
xor
stos
cmp
movsl
push
js
sub
mov
std
dec
lds
xor
aas
cmp
add
dec
sahf
pop
icebp
adc
sub
mov
push
dec
ficomps
adc
mov
dec
pop
xor
pop
jge
cli
dec
xchg
stos
aas
addl
and
mov
push
inc
xor
ficomps
mov
mov
jns
push
mov
sti
pop
jecxz
cmp
fiadds
dec
jb
popa
dec
add
jle
ds
mov
into
xchg
jne
insb
mov
dec
jb
adc
sub
xor
aas
sub
push
daa
mov
xchg
push
dec
arpl
sbbl
fisttpl
xorb
sbb
inc
xlat
mov
sub
sub
sti
dec
mov
cmp
cltd
mov
fs
xchg
pushf
adc
jbe
or
push
bnd
fisubl
data16
ror
push
fsts
inc
xadd
sub
insb
or
dec
dec
mov
xor
mov
dec
push
and
fmuls
ficompl
jmp
in
mov
fsubl
push
cld
mov
push
inc
sbb
lds
rcl
ds
stc
pop
and
cmpsb
mov
dec
jmp
rorb
outsb
adc
in
cwtl
int3
adc
inc
xchg
jecxz
xchg
cld
push
xor
scas
jp
leave
outsb
sub
call
sbb
or
xor
add
jp
dec
arpl
xchg
dec
sub
fildll
xchg
xchg
add
lahf
or
xchg
cmp
aas
popf
andb
decl
dec
sbb
testb
popa
hlt
inc
pop
in
cmpsb
pusha
pop
dec
push
pop
adc
fadd
jns
dec
rclb
out
scas
add
in
data16
std
jl
or
inc
pop
lcall
mov
jle
adc
fcoml
dec
sub
into
cmp
inc
pushf
arpl
cmp
and
mov
ffreep
test
push
and
cli
int3
jl
inc
fbld
lods
dec
add
dec
push
jle
loop
dec
adc
add
jae
lods
xor
das
xchg
jmp
fcoms
lret
ljmp
mov
push
imul
sbb
in
call
decl
dec
cmp
xor
test
push
mov
mov
lret
push
mov
out
mov
lods
xchg
add
hlt
outsb
ret
ret
jbe
fidivl
xchg
adc
stos
adc
pop
dec
insb
add
inc
xchg
jle
gs
in
lret
cmp
push
std
arpl
jno
dec
dec
rcrb
jl
dec
mov
xchg
rorb
in
sbb
jle
call
insb
xlat
cmp
into
jmp
cld
add
cmp
dec
cmp
sarl
fwait
les
cs
insb
movsb
loope
mov
inc
pop
push
and
add
push
inc
jl
push
cwtl
repz
stos
std
mov
inc
dec
out
jg
in
aaa
adc
and
xchg
jae
iret
in
dec
adc
dec
inc
lods
js
sar
mov
dec
dec
push
decl
sub
adc
shl
insl
clc
adc
inc
xchg
fmull
push
add
or
push
cmp
jo
repz
sbb
mov
xchg
inc
xor
inc
mov
scas
iret
fisubs
dec
mov
inc
sbb
push
nop
shl
mov
add
dec
ficoms
ss
mov
xchg
inc
dec
pop
or
dec
arpl
jg
sub
cmp
xor
scas
inc
adc
xlat
pop
inc
dec
jle
dec
dec
inc
jo
ss
lods
cmp
das
jne
cmp
ror
fiaddl
mov
mov
dec
rcl
vshufps
add
and
or
gs
les
imul
adcl
addb
loopne
or
dec
xor
pop
int
pop
cli
mov
push
mov
cs
jge
push
sahf
das
sub
pop
xor
js
pop
mov
dec
sbb
push
shrl
dec
sarb
mov
dec
cmp
xchg
clc
xor
mov
lods
fisttpll
cld
popf
dec
mov
adc
ret
mov
insl
ret
aas
xchg
dec
jle
gs
cmp
dec
and
add
cmp
push
arpl
lock
xchg
or
out
pop
sbb
xor
shl
out
dec
inc
mov
and
ljmp
dec
inc
sarl
sub
dec
pop
jg
rcr
jl
mov
dec
jmp
mov
cmp
dec
std
insb
xchg
xor
fldl
mov
xor
repz
test
cmpsb
xchg
mov
dec
mov
out
dec
popf
mov
es
mov
dec
outsl
mov
fisttpl
xor
push
mov
xchg
call
ljmp
je
adc
sbb
inc
mov
dec
int3
ljmp
dec
mov
iret
dec
nop
mov
pop
xor
in
leave
dec
jae
mov
inc
pop
test
mov
insb
popl
faddl
push
aam
inc
pop
outsb
push
loopne
and
inc
xchg
in
shll
adc
sarl
pop
ret
in
mov
jp
dec
mov
popf
icebp
sahf
repz
fucom
dec
hlt
in
push
push
jo
cmp
jle
xor
and
add
jae
dec
sub
out
inc
mov
std
mov
shr
dec
mov
dec
popf
xor
lcall
mov
mov
cs
in
mov
outsl
enter
jne
je,pn
inc
lret
imul
mov
movsb
fimull
ficomps
popa
gs
addr16
call
sbb
mov
inc
mov
lock
dec
or
xchg
decl
lret
push
dec
sbb
cmpsl
mov
fmull
and
xor
dec
or
fs
mov
or
aaa
out
cmpsb
jb
call
movsl
pusha
dec
loopne
fmulp
int3
pop
test
jg
push
sbb
in
pop
in
lods
inc
call
pop
dec
out
subl
dec
pusha
inc
dec
sub
dec
push
xchg
or
sbb
fisubrl
sub
cmovle
jmp
push
loop
lcall
cmpsb
dec
sub
pop
inc
and
fisubrs
movsl
test
mov
pop
stos
xchg
int
sti
ret
inc
cmp
faddp
shlb
and
dec
jg
shll
scas
dec
push
lcall
stc
aaa
ja
jno
in
dec
pop
imul
mov
sub
jle
pushf
dec
loopne
cltd
movsl
pusha
sbb
aad
pop
xchg
dec
pop
mov
dec
add
add
xchg
cmpsb
daa
lods
test
push
dec
addl
jecxz
xor
test
lds
cmpsl
mov
mov
in
dec
icebp
xor
xchg
repnz
test
add
dec
sbb
movsb
jne
adc
and
rcrl
push
inc
mov
jb
add
dec
aas
pushf
imul
in
daa
push
dec
xor
sub
sarl
cmp
xchg
mov
mov
insl
popa
xor
sbb
pop
dec
cwtl
fsubrl
cmpsb
jmp
je
ret
int3
or
dec
outsb
dec
sub
mov
push
dec
mov
mov
sahf
ljmp
fs
push
adc
nop
adc
mov
pop
loopne
mov
mov
inc
xchg
test
sbb
outsb
decl
push
jp
rcll
xchg
bound
stos
push
jae
push
dec
lret
adc
lods
dec
aam
sbb
or
and
popl
xchg
pop
into
stos
jl
cltd
xor
push
jmp
mov
push
sbb
fwait
and
and
negl
push
xor
add
or
stos
sub
dec
cmp
imul
pop
out
xchg
iret
cmpb
mov
sub
dec
adc
lds
jb
pop
lcall
inc
aam
pop
dec
es
jl
iret
roll
scas
mov
mov
cs
out
outsl
repnz
cmp
es
sub
push
or
sub
ss
rorb
add
push
int3
xlat
jl
jb
imul
mov
mov
and
gs
mov
hlt
bound
mov
pop
xorl
bound
popf
out
sub
lahf
and
loope
pop
leave
dec
pop
shr
pushf
push
in
cmp
movsbl
movsb
add
dec
jg
out
inc
pop
stos
cmpsl
pop
pop
lret
add
dec
dec
pusha
cmp
add
aaa
movl
aam
push
push
jg
sub
cmc
lods
addr16
mov
jne
pusha
outsb
sbb
shll
dec
fsts
xor
mov
iret
orl
enter
jl
jne
enter
lods
daa
das
popl
jl
and
faddl
mov
leave
nop
mov
daa
shl
repnz
sub
movsl
rol
lea
push
movsl
ret
push
sarb
xchg
dec
movd
call
es
push
fcomps
push
pop
aad
jb
repnz
inc
jb
and
dec
cli
dec
subl
mull
lret
add
dec
fbstp
shrb
or
sbb
pop
adc
and
cmp
adc
jl
outsb
adc
sub
loop
dec
jle
push
outsb
add
mov
dec
iret
jl
add
cmp
cs
cmp
and
mov
sbb
push
dec
sub
push
mov
negl
inc
adc
ja
scas
mov
jno
mov
dec
sbb
xchg
out
int3
data16
jo
into
repnz
xor
sbb
pop
mov
icebp
lods
xlat
movsb
pop
jecxz
test
sub
and
sbb
jl
mov
lahf
cmpsl
lds
ret
adc
insb
dec
nop
mov
mov
sbb
sbb
mov
xor
adc
xor
nop
mov
sub
sahf
rorl
jl
fs
repz
pop
popf
dec
insb
dec
test
dec
mov
imul
or
dec
ret
jl
add
dec
imul
xor
dec
std
push
orb
fincstp
fnstcw
dec
jge
insl
cmp
call
sbb
gs
adc
stos
cmp
dec
xchg
push
adc
inc
cmp
nopl
dec
mov
xchg
adc
in
movsb
add
dec
sub
in
xchg
adc
dec
bound
loopne
mov
and
sub
sub
inc
xchg
outsl
jb
neg
or
xor
leave
call
inc
test
jle
lods
lods
xor
xlat
mov
fsubs
rorb
fucomip
cltd
cmp
ss
lods
and
insb
out
iret
xor
sahf
subl
cmp
inc
dec
jg
stos
jle
sub
jl
pushf
es
sub
psubd
dec
push
mov
dec
ret
pop
fiadds
hlt
dec
leave
pop
xchg
pop
ds
cltd
mov
adc
or
dec
fdivs
push
or
iret
mov
in
test
in
loopne
shrb
push
sbb
push
cld
inc
mov
lods
nop
dec
addr16
aad
push
out
jle
testl
into
insb
pusha
mov
mov
dec
xchg
push
xor
dec
adc
enter
flds
dec
ja
iret
pop
push
xchg
jbe
inc
jmp
push
lock
mov
dec
cli
repz
dec
movsl
jl
pop
aas
ja
dec
jbe
jmp
pop
xchg
subb
dec
xchg
jecxz,pn
jl
int3
push
mov
and
dec
xor
mov
imul
dec
into
repz
inc
movsl
sub
dec
mov
jle
pop
push
scas
fistl
rorl
ret
jno
push
mov
test
gs
arpl
dec
test
fnstsw
add
dec
clc
dec
cmpsb
call
inc
in
stc
cmp
sbb
push
dec
pop
mov
cmp
dec
mov
sbb
mov
dec
push
inc
push
rcll
in
and
dec
popa
or
push
sub
dec
insl
roll
sbb
and
dec
enter
push
js
call
or
and
int3
cmp
out
dec
js
dec
sbb
mov
xchg
sbb
jmp
mov
or
pop
dec
mov
iret
add
sbb
dec
jp
pop
rcrl
push
cmp
push
shrl
cmp
fiadds
mov
cld
ljmp
or
aaa
mov
push
xchg
movsl
sub
dec
push
mov
fiaddl
cmp
dec
movsb
into
and
clc
cmp
xchg
push
lock
inc
and
and
xchg
add
scas
aas
mov
push
xor
scas
pop
aaa
adc
cltd
hlt
adc
cmp
push
push
pop
cld
jg
and
orl
bnd
cwtl
mov
xlat
push
ds
mov
xchg
movsb
cwtl
testb
mov
outsl
adc
jge
add
xor
or
xor
push
push
shlb
and
jg,pn
mov
mov
shll
jle
popa
mov
js
jmp
repnz
sahf
jb
mov
inc
std
bound
mov
into
xor
ja
sbbb
push
out
or
arpl
sti
pushf
bound
mov
jo
push
pusha
adc
cmp
cmp
sbb
dec
jle
sub
xchg
repz
ja
pop
lret
stos
sarl
push
jo
xor
mov
sub
inc
jo
sahf
dec
cwtl
lret
jbe
shlb
push
and
dec
mov
rclb
cmp
dec
pop
scas
movsl
mov
adc
sbb
dec
jle
xor
push
sbb
xchg
popa
add
push
daa
and
jl
bound
xchg
lret
add
sub
sub
push
fisubl
aaa
cmp
icebp
cmp
fsubrp
and
mov
and
dec
cmpsb
scas
jle
movsl
call
fidivrs
add
sub
jae
ja
roll
sub
ss
data16
cmp
xor
pushf
or
aas
jae
aaa
aaa
inc
xchg
daa
into
add
dec
jnp
pop
dec
adc
or
adc
enter
mov
jno
mov
dec
sarb
scas
repnz
mov
and
dec
lahf
es
jns
fadd
inc
ja
cltd
dec
enter
jp
into
inc
dec
jmp
push
inc
iret
in
xor
mov
mov
dec
inc
jp
out
xor
mov
jbe
sub
xchg
cld
rcll
xchg
ret
ficompl
jge
lahf
loope
cltd
push
add
fmul
fildll
ret
in
or
aaa
imul
pop
pop
sub
dec
notl
js
mov
shll
into
int
xor
xchg
loopne
sub
jmp
and
dec
subb
mov
daa
rol
jb
or
fs
rorb
push
adc
add
cs
sbb
jle
daa
jb
jno
cmp
adc
shrl
cmpsb
mov
fldenv
add
out
sbb
jb
or
pop
scas
pop
and
sbb
jmp
ret
ds
stos
dec
dec
adc
stc
pop
call
xor
dec
add
into
int3
pushf
scas
repz
mov
or
xor
cmp
dec
sbb
int3
faddl
test
aas
popf
push
inc
rcll
jo
lret
mov
popa
paddsw
push
arpl
cmp
aas
inc
fwait
sub
mov
rcl
mov
adc
sarl
dec
push
popf
les
outsl
xor
dec
sub
mov
addl
dec
int
mov
lods
test
mov
pop
adc
fildll
arpl
out
nop
cwtl
and
push
adc
pop
adc
dec
cmpsl
xor
mov
dec
insl
or
aas
mov
lcall
test
shlb
scas
cli
cmp
mov
fildll
out
dec
ja
add
xchg
imul
testb
bound
mov
inc
cmp
dec
and
dec
and
dec
xlat
pusha
sub
cmpsl
dec
mov
mov
adc
dec
add
adc
dec
push
imul
push
dec
xchg
add
stos
mov
test
mov
xchg
lock
ja
sti
dec
mov
mov
cmp
push
loopne
xchg
push
mov
mov
jl
mov
lea
sub
jg
xchg
and
pop
dec
fnstenv
lds
dec
jbe
repz
sbb
mov
dec
xchg
cmpsl
mov
inc
in
jle
or
aas
and
mov
orb
inc
and
incb
xor
test
enter
xchg
insl
rorb
jae
add
scas
adc
iret
pop
dec
or
sti
pop
dec
popa
rcll
js
mov
divb
icebp
cmp
jge
jno
pop
cmp
push
clc
dec
mov
jbe
or
pop
inc
fdivr
test
adc
dec
ljmp
stos
dec
cmp
imul
push
xlat
adc
stos
repz
push
mov
das
clc
add
mov
inc
cmp
mov
adc
cs
and
fadd
dec
loop
cmp
js
ja
mov
data16
sub
stos
xor
lret
xor
cmp
fnsave
out
aas
and
neg
sbb
or
mov
and
outsl
es
mov
andb
cmp
dec
cmp
fcomps
mov
xor
and
cmc
std
cli
fmuls
pop
sub
sbb
gs
in
inc
cli
add
add
and
pop
pop
xor
loop
xchg
shrb
mov
test
out
faddl
and
dec
incl
dec
das
push
bound
rcrb
test
inc
push
dec
xchg
cmp
fs
insb
sub
mov
pusha
shr
push
dec
dec
in
mov
xor
lret
pop
push
pusha
pop
idivb
subb
xor
in
leave
out
mov
out
fisubrs
popa
push
cmp
or
mov
dec
sarb
mov
test
xor
xchg
inc
dec
dec
aad
out
scas
dec
mul
lret
loope
inc
dec
mov
lcall
jle
pop
sub
gs
mov
inc
mov
dec
mov
scas
sbb
xlat
adc
push
add
lods
cld
sarl
inc
add
imull
adc
dec
mov
filds
out
fcmovb
dec
outsb
xchg
loop
arpl
jbe
dec
and
insl
dec
push
cs
xchg
push
xchg
js
dec
adc
negl
inc
popf
pop
mov
insl
xlat
dec
fsubs
in
push
outsb
scas
ret
sub
loope
mov
dec
in
xor
or
dec
mov
dec
jecxz
dec
push
sub
ret
jns
out
mov
push
mov
movsb
pop
cmp
shll
mov
inc
imul
js
push
inc
lcall
inc
push
fsubs
push
mov
dec
js
cmp
mov
in
mov
repz
add
bound
pop
push
adc
jecxz
loope
aas
icebp
cs
sub
push
adc
dec
std
fidivl
cli
sub
dec
push
lcall
pop
adc
mov
xchg
mov
rorb
enter
sbb
dec
xchg
mov
add
ror
dec
test
dec
insl
fistl
cmp
cmp
jl
xchg
inc
shlb
sub
pop
dec
fwait
mov
in
sbb
inc
lcall
and
fs
pop
lods
mov
cmpsb
dec
imul
push
jnp
cmova
sub
mov
or
xlat
jo
sbb
cmpsb
sbb
es
scas
test
or
mov
mov
sub
pop
sbb
imul
mov
add
rcrl
sub
xchg
dec
notb
xor
mov
loopne
andb
and
inc
inc
mov
aam
nop
adc
test
jae
outsl
loope
and
dec
sub
fwait
adc
push
lea
add
sub
enter
xor
orb
cmpsb
call
in
rcll
xor
addr16
in
loop
xchg
outsl
pop
mov
dec
ficompl
enter
xlat
stc
mov
fsubp
lret
jmp
inc
sahf
cwtl
push
and
inc
pop
push
add
out
cmp
jecxz
xchg
sub
ret
decl
sti
sarl
sbb
adc
sbb
data16
sub
xchg
dec
pusha
inc
cmpsb
mull
cld
inc
or
shl
je
inc
pop
lret
push
imul
and
dec
or
cmp
xor
mov
or
out
je
dec
icebp
jle
mov
dec
inc
mov
mov
and
or
stc
push
cmp
jl
and
jp
cmpl
jg
stos
or
jo
or
cmp
sub
dec
incb
stos
adc
scas
cmc
xchg
aas
push
adc
push
sub
lods
push
push
xchg
dec
into
daa
jg
imul
xor
ror
adc
movsl
jl
xchg
mov
gs
push
pop
movsl
jb
xchg
iret
insb
das
out
insb
shrb
movhps
aaa
stc
xchg
in
icebp
enter
xchg
into
cmp
cwtl
and
pusha
enter
sbb
sbb
es
aas
cmp
test
inc
inc
shlb
mov
lcall
cli
inc
mov
ljmp
dec
push
outsl
sarb
add
dec
scas
push
std
lock
dec
push
outsb
ja
stos
mov
mov
sbb
xor
call
pop
mov
ss
add
les
mov
into
fisubrs
add
imul
adc
pop
xor
insb
pop
dec
or
adc
js
rcrl
mov
xor
addr16
add
adc
push
jnp
dec
xchg
mov
pop
jg
push
xchg
aam
xor
dec
movsb
xor
push
fs
jns
fisubl
dec
add
adc
test
aam
push
or
scas
xor
mov
sub
lret
arpl
adc
mov
mov
dec
inc
and
cmp
pop
jle
iret
fs
aas
scas
cli
lcall
outsb
scas
jl
gs
out
inc
int
notl
jbe
xchg
lock
or
inc
sub
enter
cmp
sub
fwait
jns
sahf
push
fucomp
shlb
mov
ror
cmc
gs
lock
pop
sbb
rcr
dec
dec
mov
scas
je
dec
es
out
push
jne
dec
or
test
std
dec
jge
ss
adc
stc
and
outsl
movsb
fmull
add
aad
jg
inc
jns
jl
push
inc
pop
scas
adc
rcrl
aaa
shrl
jne
xorb
mov
lcall
out
loop
js
xor
test
arpl
fbstp
leave
fwait
mov
pop
outsl
loop
xlat
dec
cmpsl
inc
into
jg
in
pop
shlb
pop
out
push
cmp
push
add
xchg
lea
add
pop
sub
outsb
cmp
pop
lods
insb
cmp
dec
mov
jl
xor
adc
aaa
dec
iret
fs
adc
push
out
jne
js
dec
out
cmp
xchg
push
lret
push
add
out
mov
sub
loope
mov
mov
jbe
stos
xchg
imul
and
inc
push
push
adc
mov
mov
testl
addr16
dec
popl
jno
out
hlt
jmp
cwtl
pop
lret
mov
xlat
add
inc
jmp
iret
sub
rcrl
dec
mov
test
mov
push
jo
or
inc
js
lods
cmp
dec
dec
jp
lods
jecxz
sbb
lds
inc
repz
push
pushf
dec
dec
sbb
sahf
dec
xchg
mov
fadds
mov
mov
repz
jg
insb
std
dec
lcall
sub
scas
sub
dec
xchg
arpl
pop
or
pop
scas
cmpsl
stos
aad
dec
scas
fcompl
sub
push
roll
dec
jnp
imul
stos
dec
sti
lahf
push
imul
adc
fisttpll
jg
jb
inc
adc
outsb
roll
xchg
mov
mov
aaa
cmpl
pop
lahf
leave
pop
jg
mov
call
cmp
test
add
pop
sahf
mov
scas
out
dec
cld
repnz
filds
jnp
pop
pusha
mov
cmp
rcr
cmp
clc
rorl
adc
arpl
out
dec
mov
pop
fldcw
lret
xchg
cli
and
insb
xor
pop
arpl
jge
sarl
add
pop
mov
xchg
mov
push
dec
xor
ja
rolb
scas
aad
mov
dec
int
and
fst
jecxz
mov
std
notl
aam
cmp
into
fisubl
push
lret
add
push
cs
icebp
imul
sbb
and
cmp
pop
gs
pop
cmp
test
lret
js
jmp
dec
shlb
jecxz
orl
out
mov
mov
ret
inc
push
sti
mov
dec
sbb
insb
sub
test
lock
movsb
inc
mov
dec
iret
ja
cmpl
into
xor
fcoml
punpcklbw
mov
push
hlt
sbb
xor
mov
leave
xchg
arpl
add
jge
xchg
dec
into
lea
push
imul
mov
xor
inc
ja
and
into
les
mov
into
scas
pop
sbb
cmp
mov
mov
hlt
mov
dec
sub
sub
in
add
popf
inc
jne
insb
daa
ficoml
dec
lods
sbb
cmp
mov
xor
pop
arpl
sub
dec
mov
mov
mov
test
daa
mov
or
mov
cmp
inc
into
adcl
push
dec
dec
ds
aam
push
shr
dec
mov
pop
fwait
pop
insl
scas
stos
dec
into
push
adc
inc
push
xchg
outsl
inc
mov
mov
hlt
dec
sub
int3
push
out
pushw
dec
xchg
jns
push
mov
lds
adc
jl
push
pop
and
daa
cld
aam
out
insb
icebp
clc
fists
int3
mov
jg
dec
sbb
repz
push
scas
out
cmp
xor
sub
inc
repnz
popf
mov
cmp
push
or
adc
cmp
enter
arpl
xchg
jg
rorb
cmp
push
xor
add
popf
adc
cmc
rcl
push
into
lods
mov
jg
icebp
inc
sub
sub
jle
pop
jno
in
fcmove
push
dec
fs
mov
push
push
test
les
out
pop
pop
add
mov
scas
int3
jmp
xchg
cmpsl
mov
hlt
scas
stos
sbb
stos
push
pop
movsl
push
push
ljmp
scas
xor
jge
iret
pushf
cmp
and
jmp
sub
pop
sbbl
out
dec
mov
iret
sahf
mov
mov
jg
add
iret
jo
addr16
sub
jle
adc
orb
les
or
push
clc
jno
pop
dec
adc
mov
mov
in
add
and
mov
inc
jbe
js
xchg
scas
lods
into
inc
imul
mov
out
xchg
sub
cmp
sahf
adc
jecxz
inc
cmp
insb
mov
xchg
xor
mov
loopne
or
cmpsb
lcall
int
jle
test
add
lcall
dec
pop
daa
jle
lock
mov
in
lret
cld
and
push
xor
pop
idivl
mov
test
and
jl
mov
adc
stos
call
inc
stc
mov
hlt
ja
jno
mov
cs
imul
adc
sbb
jle
xlat
cwtl
jmp
cmp
add
adcl
scas
mov
orb
mov
into
jae
mov
push
jno
jae
xor
cs
int3
scas
add
jae
popf
loop
jae
mov
cmp
jl
or
inc
inc
pop
cli
in
pop
jg
mov
test
bound
mov
inc
adc
mov
movb
jae
testl
sbb
mov
stc
pop
out
xor
add
mov
in
xchg
jnp
dec
test
mov
ret
leave
jmp
fmull
sub
lock
jnp
xchg
inc
ljmp
stc
sbb
cmpsl
fwait
arpl
dec
dec
or
stos
mov
mov
pop
mov
pop
fdivrs
push
nop
mov
mov
or
pop
sub
ja
jb
loope
in
in
fdiv
dec
mov
xor
lods
cmp
iret
xchg
mov
lock
xlat
imul
inc
cld
sub
outsb
inc
dec
lods
fimuls
jle
pushf
out
dec
fbstp
pop
mov
stos
popa
sahf
cmpsl
decl
repnz
aaa
xor
jl
mov
pop
fs
push
sub
dec
mov
fs
sbb
dec
mov
pushf
dec
push
push
int3
mov
xchg
sahf
jl
and
lock
in
mov
jle
xlat
jae
and
dec
xchg
hlt
out
xchg
rcll
xor
data16
filds
sub
sub
adc
popa
push
inc
mov
cmp
dec
hlt
addb
inc
pusha
test
push
push
bound
loop
movsl
add
in
xlat
mov
les
cmp
aad
in
in
or
jmp
add
rol
mov
jg
lret
mov
xor
lods
ja
outsb
xsavec
mov
push
dec
rcl
push
aas
cld
shrl
cmp
cmc
out
sbb
idivb
mov
cmp
sub
ficoml
sub
push
cmc
lret
xchg
aas
xor
and
mov
jno
mov
ficompl
into
data16
push
and
fiadds
data16
mov
dec
inc
mov
data16
in
ljmp
cmpsl
stc
or
push
aas
mov
std
mov
xchg
lret
add
nop
sub
pop
xor
dec
sub
dec
jne
sub
cmp
pop
inc
jg
lret
sbb
lock
inc
bnd
mov
inc
push
scas
xlat
cmpsl
lea
sub
sub
dec
and
ss
jl
es
rorl
daa
inc
adc
push
sub
adc
push
sub
push
out
out
and
in
lea
mov
lahf
aaa
fidivrs
int
xlat
sub
xchg
dec
test
scas
jl
out
sbb
mov
insl
sub
lret
or
jne
pop
decb
sbb
cmpsl
pop
mov
push
leave
pushf
jmp
insl
clc
push
roll
loope
insl
dec
push
ret
jmp
sub
mov
arpl
dec
fstl
sbb
sarl
dec
jno
or
push
dec
cmp
sub
mov
jb
pop
push
mov
into
test
mov
jae
dec
dec
addr16
pusha
add
ret
stc
push
in
loopne
mov
pop
testl
xchg
and
or
sarb
mov
clc
notl
rcrl
fcoms
mov
xor
cmp
and
mov
jbe
pop
adc
push
in
mov
mov
movsb
cmpsl
sub
xor
pop
inc
and
fnsave
mov
aad
sti
mov
add
push
sbb
jne
mov
push
add
cli
fs
std
dec
push
in
shlb
insb
mov
sbb
loope
lahf
fs
and
cli
mov
les
mov
sbb
in
repz
testb
dec
aaa
pushf
jle
jns
in
outsb
ret
popf
cmp
outsl
test
mov
jnp
dec
lahf
inc
int3
jmp
aas
xchg
adc
sbb
cmpsb
fwait
dec
jg
lock
icebp
adcb
daa
jl
add
aad
and
fs
arpl
dec
pusha
push
cmp
les
mov
scas
sbb
sbb
or
pop
jl
mov
fwait
jo
jns
hlt
push
dec
mov
ljmp
sbb
sub
add
jge
sarb
in
sahf
xor
jbe
sub
mov
cld
and
cmp
aas
xchg
jb
add
pop
jl
lret
out
push
lret
add
aas
test
jmp
jle
cwtl
pop
mov
loope
frstpm(287
dec
bound
xchg
popa
push
dec
pop
or
dec
out
daa
pop
sub
xor
jl
sbb
shl
dec
addl
ficomps
ss
jo
sbb
inc
jg
inc
into
dec
fildll
push
push
mov
cmp
fiadds
mov
jbe
adc
daa
xor
scas
js
sahf
mov
cs
push
pop
or
mov
jae
dec
jg
xor
stos
add
aas
js
and
daa
in
sbb
fwait
mov
inc
cmp
into
in
cmp
mov
xor
pop
cli
das
mov
cld
cmp
es
arpl
movsb
add
addr16
dec
arpl
cwtl
inc
loopne
cmpl
repz
ret
dec
mov
push
cmpsl
orl
or
add
push
mov
push
push
out
mov
jle
inc
divl
movl
inc
inc
cmp
sub
cmp
enter
or
hlt
xchg
jle
jnp
jp
std
cmc
bound
or
lret
mov
add
add
push
and
xchg
pop
mov
add
dec
and
lock
lret
dec
je
rcrb
mov
xlat
dec
subl
jno
jne
pop
push
in
or
jns
xor
ds
lock
dec
and
out
lret
lock
dec
aad
push
mov
dec
sub
mov
xor
mov
cmp
shrb
fisttps
xor
in
push
lods
push
pop
dec
mov
cltd
pop
push
dec
or
sbb
adc
jns
iret
ret
push
scas
push
aad
adc
adc
icebp
inc
lods
lea
push
mov
dec
jns
mov
stc
outsl
or
dec
adc
test
out
and
ret
mov
sbb
dec
enter
aam
das
fisttpll
fdivrl
adc
push
ja
sbb
inc
inc
jp
adc
stos
mov
cmp
push
ds
fstpt
jmp
movsl
xor
adc
xor
inc
out
in
dec
mov
into
stos
push
push
cmp
iret
push
dec
sub
imul
test
dec
movsl
outsl
pop
maxps
jp
fs
ss
rcl
dec
iret
sahf
pusha
mov
push
adc
loopne
pop
dec
push
sti
inc
xchg
pop
jbe
jnp
add
sub
mov
decw
mov
push
or
xchg
sahf
pushf
sub
scas
mov
movsl
jl
rorl
push
pop
lret
and
dec
cli
inc
das
in
lahf
loop
dec
scas
inc
xor
sbb
icebp
push
fwait
lds
outsb
jle
fiadds
cmp
xchg
adc
cmp
pop
mov
fcomps
popf
stos
add
lods
nop
dec
movsl
push
stos
dec
sub
pushf
lahf
push
mov
jmp
mov
sub
mov
pusha
or
outsl
or
xor
xchg
xor
repz
sub
arpl
mov
push
outsl
jp
movl
insl
push
xor
iret
xchg
popf
shlb
daa
or
dec
push
jnp
popa
dec
jle
cltd
je
out
push
les
mov
inc
xchg
xchg
push
sub
mov
loop
adc
insb
sub
xchg
and
loop
inc
fwait
inc
and
popa
and
aad
lret
popl
jle
mov
cmp
sub
or
jl
and
cs
cli
jg
jle
std
loop
fsubs
push
xor
ffreep
xor
jg
iret
pop
mov
aam
jle,pn
jge
fwait
pusha
pop
xlat
push
lret
jl
dec
dec
sbb
iret
lods
jl
bound
sbbb
jb
ljmp
jnp
shrb
mov
inc
adc
pop
test
mov
inc
sub
leave
loop
mov
loope
test
jle
loopne
cmp
daa
cs
jg
aaa
push
jge
and
lods
fiaddl
in
or
and
ljmpw
xlat
out
mov
movsl
mov
push
cmp
movsb
xor
cmpsl
or
loop
aad
cmp
clc
iret
mov
cmp
insb
jae
cmp
setle
mov
cs
and
xor
add
cmp
fisttpl
add
or
sub
inc
sub
movsl
jle
dec
push
cmp
inc
dec
inc
aam
das
lret
inc
inc
inc
lea
out
pop
push
inc
lcall
pop
push
dec
sub
and
bound
mov
cmp
inc
push
jle
stos
test
lret
mov
imul
out
les
or
jg
and
jle
daa
enter
data16
scas
cmp
sub
dec
mov
into
mov
stc
mov
and
jecxz
push
mov
xchg
or
test
xchg
jle
sahf
in
adc
mov
test
pop
and
fdivrs
outsb
push
daa
xor
out
rcl
sub
out
pop
test
out
lahf
hlt
insl
and
cmp
lret
cmp
into
fucom
dec
dec
in
jl
sub
push
das
popf
adc
pop
jle
sti
cmp
jo
jb
jl
jae
pusha
sub
adc
mov
in
jbe
push
inc
mov
pop
xchg
movsl
jmp
sub
mull
inc
les
fimull
jge
outsb
xlat
dec
jg
dec
mov
jl
adc
pushf
into
repz
lods
sub
cmp
gs
popa
scas
lods
fwait
test
loope
add
mov
dec
das
sub
leave
stos
dec
ss
cmp
mov
sub
push
adc
mov
pop
xlat
jg
or
into
jg
das
or
out
lds
inc
enter
xchg
outsl
inc
sbbl
cmpsl
stos
pushf
daa
aam
pop
nop
adc
xor
out
xchg
pop
addl
xchg
test
lods
inc
inc
mov
pop
pop
jl
or
push
pop
ja
inc
cmp
movb
out
sub
insl
adc
xchg
or
push
cmp
xlat
mull
push
jl
xorb
mov
aam
test
sub
mov
movsl
push
mov
pushf
mov
jo
mov
int3
jb
insl
push
push
in
sbb
jae
test
out
jp
sbb
pop
jle
in
jl
xchg
sbb
test
out
lds
psrlw
cmpsl
ds
ljmp
mov
jle
outsb
mov
xor
js
inc
pop
pop
rorb
cmpsb
cmove
adc
add
dec
aas
push
xor
mov
cs
dec
lahf
test
pop
mov
push
daa
dec
add
loopne
dec
add
dec
jb
mov
dec
cmpsl
xchg
loop
mov
data16
lret
mov
jp
mov
push
cmpsl
sub
or
rorl
lahf
cli
adc
push
movsb
mov
dec
sbb
sub
push
mov
out
test
ss
testb
lock
adc
xchg
push
xchg
dec
cmp
rorl
adcl
in
jns
jl
outsl
sarb
pusha
repz
jb
and
scas
mov
or
test
out
adc
cmp
cmp
fisubrs
jnp
or
rorb
xor
mov
cli
add
iret
sub
mov
testb
rcrb
enter
push
enter
mov
jnp
add
add
loope
mov
negl
stc
inc
mov
int3
and
jg
sub
iret
xor
and
push
gs
or
pop
mov
lea
or
fistpl
inc
mov
sarl
fcmovu
cmpsl
es
frstor
push
pop
push
cld
xchg
cmpsl
outsl
mov
pop
mov
dec
dec
mov
ja
into
ficomps
dec
cld
imul
jnp
lret
push
dec
fildl
mov
dec
xchg
or
lcall
xchg
dec
aam
out
jb
dec
sbb
xchg
daa
mov
test
dec
and
push
xchg
ljmp
outsl
or
cmc
pop
insl
cmp
xchg
cld
add
test
xchg
mov
xlat
xor
inc
sub
inc
adcl
mov
push
addr16
outsb
call
test
into
mov
xor
xchg
stos
add
xor
stos
das
lea
jg
ret
push
shr
dec
xchg
gs
lcall
mov
loope
xor
dec
lret
mov
mov
sub
frstor
mov
or
loope
push
cld
fwait
xchg
dec
mov
aaa
mov
dec
pop
scas
int3
int
mov
and
jbe
gs
aas
dec
or
cmpl
inc
ja
aam
dec
iret
pop
add
push
inc
decb
xchg
dec
lahf
outsl
mov
mov
sub
xchg
rcr
jl
stos
in
fmulp
cmp
jno
ds
aaa
xchg
xorl
xlat
das
jb
and
cmp
push
mov
out
orb
add
inc
jbe
push
dec
scas
rcr
leave
xchg
jno
mov
xor
inc
jle
cltd
call
mov
mov
xchg
push
mov
imul
mov
loopne
and
sti
xchg
jne
daa
fisttps
adc
or
mov
dec
mov
mov
mov
cmp
sub
mov
sbbb
lea
sbb
cmp
mov
mov
cs
push
shl
enter
xchg
aad
ret
jae
aaa
or
cmp
cmp
or
pop
aas
adc
sub
hlt
mov
xchg
shlb
ljmp
jg
aam
add
insb
push
add
lret
das
mov
xor
jp
pop
sub
mov
inc
and
inc
xor
in
push
ficoms
jnp
inc
shrl
insb
in
les
or
push
pop
out
bound
mov
push
rolb
in
notb
insl
pop
pop
into
push
lods
ljmp
adc
jg
dec
add
sti
xchg
push
inc
nop
outsb
fs
js
call
push
jmp
sbb
inc
inc
jg
test
and
sarb
in
mov
xchg
imulb
dec
paddusb
aas
or
xlat
movsl
mov
xchg
dec
adc
cmp
insl
pop
xchg
out
pop
dec
sub
cmpsb
push
or
mov
mov
pop
movsl
xchg
jg
adc
dec
mov
cmp
push
adc
cmp
dec
mov
jl
push
xchg
aaa
mov
daa
or
mov
dec
mov
xchg
leave
rorb
add
je
mov
lods
jle
cmp
stos
fcmove
sbb
mov
jle
test
cmp
jae
imul
scas
jg
cmc
dec
jnp
inc
pop
aas
cmp
lcall
lods
jl
mov
aaa
int
es
lret
adc
cmp
mov
aaa
shrb
repnz
mov
jl
inc
inc
or
pop
decl
addl
mov
in
pushf
adc
pop
dec
mov
sbb
dec
loope
jl
adc
notl
fsubrp
in
and
test
cmp
out
ret
test
dec
dec
lret
lock
push
jae
jg
add
mov
add
jle
in
or
loop
sbb
xor
rol
add
mov
jg
fnsave
pop
push
cli
push
aad
loopne
movsl
sub
fiadds
xchg
outsl
push
inc
lret
push
fs
fadds
out
adcl
mov
xchg
lret
dec
lods
xor
mov
aam
and
aam
cmp
dec
lret
dec
cmp
lods
add
add
jl
and
mov
sub
jae
and
jle
iret
inc
fistpll
pop
shrl
dec
nop
daa
lahf
jle
mov
testl
add
adc
dec
jl
lahf
dec
jo
add
scas
fistpll
loop
lcall
ljmp
imul
inc
adc
xlat
pop
jmp
dec
fwait
sarw
push
sub
jp
dec
fs
xchg
into
dec
lret
lock
add
and
and
pop
mov
pop
lret
mov
mov
dec
jne
in
and
dec
inc
push
dec
loopne
fadds
mov
pop
dec
mov
sub
sub
and
cs
cmpsl
lock
sub
or
inc
stos
out
mov
mov
push
jns
sbb
stos
int3
jge
lcall
cmpsl
fsts
push
dec
ss
fisubl
movsl
jle
test
pushf
cmp
pop
inc
fcoml
mov
stos
push
dec
add
cli
xchg
mov
mov
adc
mov
cmp
inc
pop
xor
push
shrl
adc
fistl
dec
inc
jne
inc
cmp
call
pop
or
push
dec
movsb
adc
dec
loopne
mov
jl
mov
mov
dec
insb
pop
mov
mov
inc
sbb
sti
daa
outsl
int3
or
dec
xor
and
push
inc
fwait
ds
lcall
mov
or
adc
roll
and
xchg
pop
add
mov
cltd
sbb
adc
into
clc
or
jp
pop
aad
and
shll
pop
adc
lret
bound
add
or
jl
mov
fs
in
mov
or
add
repnz
imul
xchg
in
sarl
and
jle
jae
out
cmpb
fwait
push
test
insb
test
fsts
fbstp
decb
outsb
adc
xor
sbb
dec
nop
jg
fwait
push
cli
leave
pop
scas
xchg
cltd
mov
jl
in
scas
lret
rorb
inc
adc
mov
daa
xchg
fldcw
cmp
pop
ss
movsl
push
pop
and
lret
cs
xor
aas
or
addr16
mov
jns
dec
mov
push
push
in
fcom
push
sub
inc
and
out
mov
sub
mov
mov
mov
jmp
mov
adc
fwait
loope
lods
sub
and
xor
loopne
mov
jl
stos
jo
cmp
jge
aas
or
fisttpl
or
jecxz
xlat
push
test
mov
mov
stc
loopne
push
mov
arpl
dec
and
out
rolb
das
and
in
lahf
mov
mov
xor
setno
sahf
ds
in
push
add
jle
add
icebp
pop
dec
sub
das
and
repnz
lret
cs
inc
jo
aaa
ss
arpl
cmp
jno
stos
ror
mov
scas
movsl
test
xchg
dec
mull
rcr
pop
repz
jae
cmpsl
xor
dec
pop
xchg
or
push
sahf
push
jl
cmp
iret
aas
lret
imul
int
mov
and
or
sub
sbb
das
cmp
shrb
insb
outsl
insl
outsl
inc
shrb
das
decb
sub
ds
jne
lods
mov
sub
jbe
icebp
pop
and
dec
stos
fimuls
xchg
mov
sub
inc
xchg
mov
pop
fisubl
pop
cmp
inc
cmova
inc
ret
arpl
inc
stc
inc
push
adcb
and
xor
mov
loop
sub
les
dec
fcmove
lcall
jl
inc
paddd
dec
cli
lret
fwait
ljmp
aad
jecxz
mov
fiaddl
repnz
xchg
dec
clc
das
add
out
or
dec
test
mov
dec
sarb
xchg
dec
inc
or
mov
popf
dec
scas
dec
xor
dec
pop
lret
push
pusha
pop
popa
stos
js
or
int3
adc
mov
push
sub
aas
dec
les
cmp
mov
daa
pop
cmp
mov
dec
test
outsb
adc
je
icebp
insl
dec
clc
data16
xor
xchg
dec
ja
call
pop
dec
or
inc
idiv
popa
pop
inc
dec
jno
fs
mov
lods
dec
push
daa
and
xchg
mov
mov
lcall
movsb
dec
and
or
pop
lds
inc
aad
pop
enter
insl
mov
pop
mov
fnstcw
dec
fistpll
bound
push
dec
incb
out
lret
aaa
dec
cld
std
sahf
in
out
cmp
dec
sbb
mov
dec
popf
jp
sbb
inc
xchg
xor
jne
pusha
fucom
xchg
mov
mov
and
dec
iret
out
jbe
mov
gs
dec
mov
push
mov
jae
xchg
inc
enter
inc
cwtl
rcrl
pushf
dec
stos
popf
pushl
add
loopne
dec
adc
sub
sbb
push
je
push
fsubs
xlat
pop
jecxz
jge
loopne
pop
dec
lds
push
cmp
ret
nop
add
or
xor
scas
aam
xchg
test
inc
jl
add
inc
pop
ret
xor
imull
dec
stos
pop
icebp
test
push
xlat
pop
mov
fwait
movsl
mov
je
outsb
mov
leave
and
inc
adc
sub
outsb
sti
mov
leave
dec
hlt
fnstenv
outsb
dec
mov
xor
sarl
dec
out
jle
and
mov
dec
jae
cmpsb
xchg
testb
lock
fildl
inc
jecxz
out
jns
mov
aaa
sub
pop
arpl
sbb
xlat
mov
dec
out
pop
aaa
adc
adc
hlt
leave
dec
imul
fbstp
xchg
cs
dec
leave
and
lcall
stos
addr16
adc
dec
fnstsw
mov
sub
iret
in
xchg
mov
out
aas
ficoml
sub
and
dec
filds
inc
insb
dec
mov
dec
bound
cmp
cmpsb
cld
addl
pop
mov
lods
adc
outsb
js
popa
inc
jbe
inc
inc
pop
stc
test
shr
fnsave
fisttps
fstpt
loope
aas
jle
add
inc
or
scas
inc
sahf
jg
jecxz
jl
fs
int3
fdivrp
mov
lock
and
jns
fsubl
mov
ss
dec
lahf
stc
xor
mov
jns
sbb
sti
ja
in
inc
jg
je
add
mov
sbb
sub
mov
fwait
std
iret
je
jns
js
sahf
orb
loopne
lods
xor
inc
mov
jl
rcrb
fdivrs
and
push
push
nop
sbb
mov
jl
repz
aaa
cmp
and
aam
icebp
jbe
adc
ljmp
pop
or
push
popw
mov
xor
rcrb
repnz
hlt
and
mov
adc
mov
xchg
in
pusha
aas
xchg
iret
pusha
shl
aaa
int3
pop
jl
icebp
inc
jnp
bound
push
jb
loop
dec
inc
and
rorb
jae
scas
dec
push
mov
pop
mov
int3
inc
ret
fistps
mov
mov
push
xchg
inc
bound
xor
xor
jmp
dec
fists
jle
lods
dec
divb
pop
in
popa
and
test
jg
sub
cmp
sbb
dec
xchg
aad
mov
or
in
cltd
inc
pop
jl
js
adcb
mov
repz
fs
jle
jg
sbb
adc
shlb
fdivrl
ljmp
stc
and
repz
insl
xchg
mov
pushf
jg
inc
test
fs
outsb
push
mov
adc
cli
xchg
mov
jl
cs
mov
aaa
pusha
mov
push
and
jle
aam
and
pushf
jae
sub
xchg
je
jecxz
lock
jg
cli
mov
adc
jp
std
adc
sub
pop
es
pop
es
aaa
mov
pushf
mov
lahf
vmread
mov
cmp
fidivrs
sahf
mov
inc
in
push
seto
mov
mov
inc
push
jle
test
out
xor
sbb
push
adc
ficomps
sbb
pop
jle
cli
dec
sub
in
dec
rcrb
loope
push
pop
test
adc
daa
dec
jmp
sub
cmpsl
cli
rclb
push
popa
pop
dec
sub
mov
or
adc
mov
int
fbstp
mov
out
daa
ds
icebp
cmc
add
jns
in
pop
mov
scas
jl
fs
dec
jnp
fcmove
xchg
sbb
or
mov
dec
mov
int3
mov
inc
add
shll
pop
clc
shr
dec
mov
adc
lahf
insl
aaa
repz
jecxz
in
dec
fnsave
negb
adc
nop
xor
or
push
xlat
and
dec
dec
inc
imul
or
sti
push
btc
xor
or
lods
dec
fidivl
gs
dec
fisttps
stos
mov
push
sub
sbb
shll
aas
cwtl
insl
xchg
inc
in
cltd
mov
repnz
cmpsb
jo
push
inc
push
fimuls
mov
sbb
push
test
dec
or
stc
xor
sub
addr16
into
xor
push
cmp
dec
dec
jns
jp
mul
sbb
cmp
fstpl
dec
add
jo
fistps
dec
rorb
insl
fs
inc
and
incl
cltd
repz
xchg
inc
loope
xchg
dec
pop
cld
lods
idivl
daa
adc
data16
pop
decb
test
dec
sti
imul
decb
push
inc
pusha
cwtl
movsb
nop
dec
pop
lods
test
std
sub
and
cmp
jae
into
fdivl
dec
sbb
ror
bound
inc
into
lods
jnp
ss
jle
stos
je
or
ja
sub
xorb
dec
cmp
dec
ss
push
pop
incl
pop
shrl
sbb
adc
dec
xchg
ret
or
xlat
stos
cltd
dec
and
cli
mov
dec
push
mov
inc
sub
push
jle
inc
push
xchg
jl
sti
into
ss
in
pop
iret
jnp
jbe
dec
pop
inc
arpl
shrl
push
sbb
pop
les
adc
dec
nop
xor
cld
fisubrl
sahf
pop
adc
pop
or
xchg
imul
shrb
shll
inc
and
xor
mov
fnsave
jns
mov
jo
pop
sub
push
dec
or
or
inc
push
and
pop
cmp
mov
lret
xchg
jg
add
sub
push
adc
sti
pop
lds
daa
shr
les
fldcw
sahf
inc
sbb
loope
sub
daa
cmp
jno
mov
fstpt
lods
cmp
test
andb
sub
ljmp
lods
mov
rcrl
cmpsl
jbe
dec
dec
xor
inc
fwait
xchg
xor
bound
push
rcll
push
jge
cmp
jbe
xchg
fdivrl
dec
push
jle
mov
pop
sub
inc
jl
popa
call
ss
and
test
sti
test
cs
xor
xchg
and
mov
jo,pn
push
enter
mov
push
movsl
sub
push
push
test
rorb
iret
loop
push
mov
jle
ja
je
loop
and
mov
lock
mov
pop
adc
enter
pop
daa
cli
or
imul
aaa
or
aas
and
rorl
xor
test
pop
dec
leave
hlt
mov
hlt
jae
sub
cmp
sub
pop
or
mov
outsb
or
pop
add
cmp
cmpsl
jns
test
cmp
add
jnp
pop
dec
fwait
lods
push
mov
ljmp
fbld
mov
scas
dec
push
pop
lret
out
dec
in
cmp
sysret
sar
lcall
mov
hlt
arpl
dec
sub
push
inc
dec
and
push
leave
mov
xor
icebp
pop
push
loope
mov
dec
dec
xchg
pop
outsb
adc
or
adc
arpl
les
jno
add
loop
add
cltd
popa
xchg
sub
cmp
push
push
ja
fiadds
push
loop
nop
sub
jae
mov
inc
ss
push
add
cmp
push
es
xchg
popa
mov
sarb
popf
aaa
inc
andb
inc
addr16
adc
cltd
out
mov
je
dec
popf
out
or
stc
cmp
ret
jp
mov
add
xchg
fs
cmpsb
xorb
jl
ja
aam
lahf
hlt
cmp
scas
mov
sub
movsb
mov
loop
mov
test
jl
xlat
rcll
mov
arpl
jb
ds
stc
shrl
shlb
les
cld
fs
iret
lret
addr16
cmp
dec
mov
out
xchg
dec
or
in
out
mov
inc
dec
lods
pop
dec
sub
das
push
and
pop
shrb
leave
dec
daa
cmp
push
dec
and
shrl
jg
cmc
and
pop
cmpsl
dec
neg
sti
sub
pop
mov
jle
xor
in
movsl
addl
cwtl
and
inc
mov
jge
fistps
sbb
add
imul
popa
stos
adc
mov
daa
loop
cmc
cwtl
jmp
sub
push
loopne
js
mov
and
mov
jl
imul
and
je
push
aad
inc
sub
loop
andb
aad
mov
loop
call
push
pop
mov
inc
xor
adc
cmp
stos
insb
sbb
xchg
xchg
adc
adc
adc
sbb
jno
insb
mov
dec
push
cmp
inc
loop
xchg
out
pop
fildll
addl
or
mull
aam
stc
cmp
fidivl
sub
adc
fwait
cltd
test
stos
fcom
jmp
lret
loop
jns
shr
scas
add
scas
jbe
insl
dec
fimuls
mov
movsl
push
jge
xchg
and
fadd
xlat
orb
dec
push
sbb
add
fcomps
dec
mov
push
dec
mov
cwtl
add
insb
sbb
js
rcrb
jp
push
clc
dec
dec
daa
scas
xchg
dec
pushf
mov
dec
adc
mov
cmovle
lds
adc
cli
ds
aad
rorl
dec
or
dec
cltd
sahf
dec
xor
fbld
loop
push
addr16
sbb
sbb
sbb
mov
mov
scas
dec
adc
cmp
adc
sub
jg
xchg
mov
jmp
mov
push
cmpsl
dec
xchg
mov
jb
dec
jle
jbe
cmp
fdiv
clc
outsl
outsb
call
mov
cld
daa
les
fwait
ja
lds
dec
mov
nop
sarl
xor
sbb
jecxz
push
mov
dec
addr16
shlb
push
pop
in
cmc
hlt
inc
sbb
push
jo
pop
push
dec
inc
nop
ds
fucompp
mov
dec
jb
add
hlt
add
data16
jg
pop
mov
setno
ja
cmpsl
data16
call
add
jl
mov
sub
xchg
push
push
in
outsb
cmp
lcall
cmp
adc
loope
fimull
imul
and
clc
ljmp
cmovno
adc
test
scas
mov
les
fnstenv
mov
xor
ret
fisubrl
xor
and
sarl
inc
stos
fwait
mov
push
jae
shr
mov
das
dec
fisttps
stos
fs
dec
shrb
xchg
xchg
adc
xchg
mov
adc
jg
mov
repz
das
dec
fmul
bound
jl
cmc
enter
mov
xchg
push
cltd
fldt
inc
inc
and
enter
clc
mov
ljmp
inc
test
jo
push
cmc
jno
push
and
inc
sbb
sub
sahf
fmuls
cltd
pop
inc
lods
fisttps
xor
test
es
and
fidivrl
lcall
pop
adc
pop
into
popa
outsb
fsubrp
mov
mov
out
pop
push
sti
les
sub
mov
or
pop
cmc
sub
xchg
cs
andb
cmc
adc
add
inc
mov
fnstsw
cmp
pop
cltd
cmp
xchg
adc
scas
aaa
xchg
pop
adc
jg
and
fisubrl
lods
pop
mov
fdivs
cmp
sbb
jg
sbb
jb
mov
inc
fldcw
push
push
xchg
dec
adc
mov
cmp
inc
push
aaa
add
pop
add
rol
jmp
cmp
movsl
sub
loopne
in
ret
in
sub
push
sub
inc
arpl
sbb
sub
pop
push
dec
ror
fstpt
fsubl
cmpsb
mov
jle
incl
mov
jg
cmp
pop
iret
cmpsb
xorb
shrb
cmp
daa
pop
mov
jp
aam
stos
loopne
dec
hlt
jnp
and
pushf
movsl
repnz
push
movsl
or
inc
out
fcoms
repnz
push
jnp
or
xchg
into
outsl
dec
ficoms
fs
sub
jge
dec
hlt
lret
inc
sub
mov
inc
mov
mov
sub
inc
push
push
dec
jg
loope
pop
lods
xorb
xor
dec
sub
arpl
cmp
fildll
dec
mov
in
jle
testb
popf
cmp
pop
and
into
inc
push
jecxz
pop
jl
sub
pop
jbe
std
inc
cmp
data16
scas
sbb
cmpb
negb
in
cmpsl
pop
jnp
cs
dec
push
dec
aas
jl
iret
mov
mov
adc
mov
movsb
mov
dec
adc
xlat
or
icebp
and
pusha
iret
std
mov
int
mov
pop
lods
pop
jl
sub
and
xchg
pusha
js
icebp
imul
repnz
aas
in
dec
imul
popa
int
dec
ss
cs
pop
mov
arpl
dec
pop
or
movsl
out
jecxz
lahf
xor
jl
dec
pushf
xlat
ficomps
sub
dec
mov
inc
mov
out
sbb
inc
jl
fs
jg
dec
or
mov
ss
jae
fs
lcall
dec
cmpl
int
inc
icebp
pop
outsb
repz
add
test
out
cltd
jp
mov
dec
xchg
outsl
orb
xor
mov
repnz
lods
fnstsw
inc
sahf
orl
adc
mov
inc
stc
in
sbb
cmc
push
int3
dec
imul
or
push
popf
mov
sub
ja
fs
dec
xor
addr16
xor
mul
repz
dec
jl
pop
out
mov
inc
fcmovne
hlt
add
xor
movsl
inc
fwait
ljmp
inc
stos
xor
sbb
xchg
insl
arpl
push
fmuls
inc
sub
subb
push
push
jnp
fwait
mov
mov
leavew
dec
push
and
fstpt
pusha
dec
test
fnstcw
dec
add
xchg
call
sub
into
sbb
dec
xor
dec
xchg
adc
xor
sbb
aaa
testl
jecxz
mov
les
rcll
pushf
ret
mov
clc
push
dec
pushf
outsl
in
shrl
lods
mov
rolb
xor
leave
push
adc
or
and
sahf
popa
inc
out
inc
push
divb
jns
and
xor
mov
sub
mov
push
mov
inc
gs
jns
popl
dec
dec
jno
jecxz
int
pop
cmp
fcmovbe
push
call
jl
add
inc
xchg
mov
icebp
add
cmp
cmpb
dec
lea
lret
mov
ficomps
jae
sbb
xchg
inc
das
sbb
dec
xor
adc
push
jnp
fdivs
mov
dec
sub
inc
fsubrs
leave
cmp
lea
lahf
pop
stc
sub
dec
inc
jle
mov
inc
out
cmp
ficoml
jmp
dec
xchg
jl
add
inc
push
idivb
into
mov
cmp
dec
lahf
and
sahf
ret
cmp
mov
push
xor
int3
cs
xor
add
mov
dec
adc
xchg
sbb
fnstcw
cmp
dec
cmp
lahf
mov
xchg
imul
daa
dec
shr
cwtl
pop
pop
fnstcw
jecxz
scas
aad
push
adc
sub
fmuls
fisttps
lods
sbb
gs
notb
cmp
push
jecxz
pop
imul
stc
ror
dec
pop
test
sub
lahf
fmuls
mov
cmp
xchg
insb
int
lret
shrb
lock
adc
cmp
dec
imul
cmpsb
xor
xor
cpuid
mov
push
push
or
dec
xchg
add
mov
dec
orb
cmc
dec
mov
orl
cs
push
test
aaa
es
mov
inc
std
pcmpgtw
sub
clc
fdivrs
cmc
lret
scas
dec
mov
inc
add
sub
jne
jle
cmpb
hlt
mov
and
dec
mov
mov
and
and
xor
outsb
xchg
add
jmp
dec
push
int
dec
cmp
hlt
mov
adcb
mov
out
pop
scas
dec
sti
scas
push
mov
inc
push
jl
mov
inc
pop
out
inc
adc
pop
dec
dec
fnstenv
push
xchg
inc
aad
dec
add
addr16
and
pop
dec
aaa
xchg
add
xorl
ror
into
pop
out
xchg
or
dec
fisttps
dec
sub
mov
jbe
dec
push
sbb
push
loope
dec
pop
in
dec
fsubr
xchg
jg
das
or
movzwl
arpl
iret
or
dec
cld
mov
xor
inc
decl
mov
cmpsl
dec
aad
leave
sbb
dec
pop
cmp
fwait
push
dec
out
jnp
cmp
mov
dec
or
xor
inc
decl
mov
jmp
and
and
int3
cmp
pop
pop
sbb
aas
jns
dec
lods
rcrb
aad
dec
sub
in
in
repnz
in
mov
cmpsb
jle
dec
cmp
lret
sarb
fisttpll
les
in
dec
mov
xchg
adc
jno
dec
outsl
pusha
testl
lods
dec
xchg
jge
mov
and
das
dec
sti
shlb
add
adc
dec
pop
inc
out
adc
xchg
dec
xchg
and
add
add
dec
dec
push
popa
iret
adc
sub
enter
adc
pushf
ljmp
cmp
lock
pushf
push
cmp
jg
adc
push
js
or
mov
int3
jle
pop
add
jbe
int3
movsb
add
mov
add
inc
nop
and
inc
aam
cmp
das
push
and
mov
inc
ja
dec
ljmp
stos
xchg
dec
fcmovne
xchg
xchg
rol
popa
mov
xor
fcomps
call
adc
push
jle
cld
gs
jl
repnz
out
lds
lods
adc
dec
dec
mov
jp
jp
push
xor
es
xchg
cmp
xchg
int3
out
sub
jg
data16
and
dec
std
or
test
jne
nop
sar
mov
mov
or
mov
adc
mov
nop
pop
dec
ds
jp
shll
pop
xlat
lods
add
into
dec
sub
outsb
add
push
jbe
lcall
rcl
in
push
mov
aad
dec
repnz
fisubrs
and
xchg
jecxz
cli
sub
cld
pop
dec
mov
fsts
mov
mov
cmp
mov
dec
mov
cmpsl
dec
jo
in
cmp
mulb
dec
add
andl
add
int
and
xchg
add
repz
pushf
mov
repz
bound
mov
jmp
or
js
cltd
push
aad
mov
xor
xor
pop
mov
leave
xchg
aas
mov
jg
inc
inc
sbb
push
and
jg
aad
cmp
xchg
pop
add
inc
cmp
push
dec
daa
jo
inc
push
pop
hlt
out
mov
enter
call
adc
jg
lods
hlt
in
loop
into
xchg
jne
add
test
lods
pop
fs
inc
fimull
out
push
scas
xor
lret
jmp
xchg
cmp
fs
dec
pusha
enter
call
jp
movl
adc
inc
roll
int3
mov
int3
mov
repnz
repz
fs
pop
dec
xchg
dec
push
push
ss
sbb
jo
lret
push
iret
aas
mov
jb
lret
in
mov
mov
cli
aaa
dec
bound
add
dec
pop
adc
mov
push
ret
dec
push
and
add
shl
sahf
add
and
push
ljmp
dec
pop
call
adc
jmp
mov
out
inc
insl
jle
jo
jbe
inc
leave
push
scas
mov
push
sub
push
cltd
daa
add
pop
mov
fmuls
mov
jl
les
ficomps
fildl
mov
sbb
sbb
scas
sbb
pop
xchg
cmp
in
adc
loopne
psubq
cmpsl
and
sbb
lcall
jns
add
cmp
movsl
scas
sub
std
or
lods
jle
lea
inc
sbb
scas
lret
adc
pop
cmp
cmpsl
outsl
xchg
add
inc
push
xor
and
incb
push
inc
or
jmp
into
insb
mov
push
adc
push
mov
inc
pop
fwait
adcl
sub
push
sub
les
push
pop
sub
int3
mov
lahf
ficoms
sub
cmp
xor
mov
fstpl
cmpps
movsl
jns
pop
out
push
cmp
bound
aaa
jle
adc
scas
daa
ror
into
inc
jo
jl,pn
mov
rolb
push
iret
jge
sbb
test
xchg
add
fidivrs
mov
pop
sub
fnstcw
into
lock
fcmovne
stos
iret
aam
rorl
fiadds
ljmp
or
lcall
sub
and
sahf
mov
or
jnp
pop
xor
dec
stos
pop
mov
jne
das
xor
loopne
sbb
dec
jle
cld
pop
shlb
je
mov
imul
mov
pop
loopne
divl
dec
jle
das
inc
pop
das
dec
mov
mov
mov
mov
cmp
clc
cli
pop
aaa
lret
push
inc
add
inc
fdivrp
sub
xor
inc
insb
inc
scas
rorb
movsb
leave
jmp
sbb
pop
mov
in
cli
mov
rorb
scas
rorl
jg
out
mov
iret
icebp
pop
lods
lahf
add
iret
stos
out
add
pop
adc
testl
xchg
xor
insl
mov
sbb
jg
dec
mull
into
popf
hlt
xlat
adc
push
iret
aaa
scas
lea
xchg
sbb
push
jl
js
leave
aam
dec
ja
xor
out
roll
mov
dec
mov
dec
ds
mov
or
fisubs
dec
lret
or
ljmp
jmp
or
xor
bound
lcall
mov
push
xor
das
and
pop
jmp
cwtl
loop
pushw
fwait
ret
or
push
cmc
fiadds
xchg
sub
mov
dec
inc
in
cmp
xchg
in
out
push
mov
xchg
push
dec
les
pop
push
out
cmc
mov
icebp
xor
push
fldt
sahf
mov
pushf
js
dec
and
outsl
cli
outsl
daa
inc
pop
cmc
into
addr16
add
sbb
lret
arpl
into
xchg
imul
sbb
mov
in
mov
dec
cs
sarb
dec
in
jbe
movsl
cmpsb
fucomp
dec
arpl
dec
in
jb
jmp
push
adc
fisttpll
aad
lock
popf
mov
mov
data16
dec
scas
pusha
push
fistpl
or
out
das
popl
dec
into
dec
iret
dec
js
rorl
push
imulb
dec
pop
jl
repnz
inc
push
sahf
test
xchg
das
pop
push
outsl
adc
inc
adc
scas
xchg
das
dec
lcall
out
dec
mov
sub
inc
xlat
or
inc
sbb
clc
sbb
mov
xor
sub
dec
push
outsb
inc
sbb
lds
js
sub
xor
jb
mov
sbb
ljmp
xor
pop
frstor
xchg
dec
mov
cli
jle
pop
add
imul
pop
dec
push
fmull
cmp
pusha
dec
call
cltd
push
in
sbb
add
xor
mov
cltd
or
iret
xor
mov
jg
lea
cmp
loopne
mov
or
stc
jl
pop
push
aas
aaa
xchg
pop
cmp
lret
dec
pop
ror
lods
emms
sbb
push
cmpb
xor
dec
sbb
inc
out
aas
ficomps
outsb
dec
pop
xor
repnz
cmp
jae
cltd
sub
and
cmp
xor
inc
push
rolb
daa
add
mov
cltd
push
insb
iret
xor
arpl
xchg
sti
push
ficompl
inc
jle
cmp
rorl
aaa
out
mov
ret
dec
addb
cmp
jl
sub
mov
mov
ffreep
imul
pop
inc
icebp
add
pop
add
adc
setge
push
mov
outsl
cwtl
das
daa
jo
push
sub
jbe
dec
aas
iret
mov
fnstcw
int3
mov
push
ja,pt
mov
or
shlb
jg
dec
mov
bnd
pushf
inc
mov
int3
jmp
aam
fisttpl
mov
cwtl
dec
in
enter
cltd
test
inc
jne
xor
xor
enter
out
cltd
cmp
dec
je
sub
loope
mov
rcll
pop
les
or
cmp
lds
xlat
and
dec
add
lock
xchg
pop
lds
adc
pusha
inc
orb
les
dec
jbe
mov
lea
sti
idivl
sbb
hlt
push
inc
repnz
sti
in
out
in
dec
sbb
mov
mov
and
testl
mov
dec
cmp
mov
jp
or
int3
dec
fstpt
push
cmp
lret
das
or
in
dec
add
paddd
mov
add
inc
jns
out
gs
mov
push
cmp
pop
pop
shl
dec
mov
lods
pop
jo
xlat
leave
mov
lahf
jl
xchg
dec
adc
sbb
push
fwait
or
cmp
jge
scas
std
movsb
inc
fidivrl
pop
cli
mov
cs
push
insb
dec
mov
xlat
or
fwait
ljmp
nop
mov
mov
dec
inc
es
lcall
dec
add
fucomip
inc
sub
orb
mov
xor
daa
xchg
dec
fwait
arpl
lret
mov
xchg
fs
or
mov
dec
ret
clc
loope
push
sbb
adc
cmpsl
xor
movsl
addr16
push
lea
adc
cmp
outsb
dec
leave
inc
fistpl
sarl
add
cmpsb
jno
jg
dec
push
int
mov
addr16
mov
mov
jb
rcr
aad
dec
mov
outsb
mov
dec
popf
add
scas
xor
cmp
and
xlat
mov
hlt
inc
xor
xor
lret
cmp
jne
dec
jne
and
sub
mov
mov
insl
dec
push
jg
jge
add
jle
pop
andl
shrb
fsubrl
pop
test
andps
lea
movsb
xlat
hlt
fsts
dec
pushf
cmp
loope
adc
orl
sub
add
mov
adc
add
rolb
js
mov
dec
mov
sahf
popa
clc
sub
and
fnstenv
mov
xor
pop
pushf
mov
out
fistl
jbe
stc
nop
mov
xchg
stos
popf
dec
jae
jno
xor
inc
shlb
pop
dec
and
xchg
testb
push
dec
lock
mov
sbb
inc
mov
cmp
out
outsl
fbstp
pop
jno
pop
iret
push
fsubrl
xchg
fwait
out
and
loop
adc
hlt
inc
pusha
dec
insb
or
adc
aaa
je
ds
psubb
jno
jp
xchg
mov
add
lahf
stos
xor
inc
pushf
lret
or
subb
insb
mov
pop
xchg
imul
mov
out
mov
divl
pushf
mov
dec
xorl
dec
adc
dec
and
fwait
mov
pop
dec
arpl
add
sub
ljmp
jbe
dec
add
rcrl
outsl
test
push
sbb
push
lret
jecxz
fcomi
bndstx
sahf
mov
rorl
add
dec
mov
repz
and
fmuls
mov
xchg
in
and
inc
shlb
mov
push
push
rolb
fstps
pusha
arpl
lods
lods
push
jge
fidivs
aas
cmp
push
lock
cmp
lcall
pop
mov
lcall
mov
inc
jl,pn
mov
and
mov
sub
dec
int
hlt
dec
daa
cmp
enter
int3
pop
cmpsl
mov
int3
divl
iret
mov
movsl
into
test
dec
push
xor
into
pop
dec
inc
xchg
add
dec
push
fcomps
orl
aas
mov
int3
enterw
in
ret
inc
mov
repz
outsb
pop
out
aad
mov
rorl
mov
enter
fldl
adc
dec
cwtl
call
dec
jno
jl
clc
cli
lock
cmp
jns
jne
dec
sbb
stos
ret
push
aaa
aad
adc
sti
or
mov
mov
adc
or
aaa
gs
pop
xchg
inc
dec
inc
push
jg
imul
sbb
iret
xchg
lahf
mov
lock
adc
andb
stos
xlat
dec
bound
pop
push
dec
imul
mov
loopne
repnz
sbb
pusha
xlat
movsb
clc
inc
nop
and
imull
dec
outsl
data16
sahf
xchg
xchg
dec
or
mov
jp
mov
mov
add
dec
pop
pop
pop
push
inc
dec
pop
sahf
add
push
xchg
scas
arpl
out
sbb
xchg
cmp
mov
push
int
push
imul
add
js
test
sub
jp
inc
dec
out
xor
push
xchg
mov
xchg
push
inc
mov
pop
jbe
inc
dec
sub
repnz
xchg
cmp
dec
js
inc
imul
test
or
lea
mov
push
mov
std
add
js
icebp
pop
hlt
dec
xor
jmp
mov
jns
fwait
sbb
pop
jp
dec
xchg
popf
arpl
lea
test
dec
ficoml
sub
xlat
jl
dec
xchg
sbb
shll
dec
jmp
addr16
xor
xor
fistl
pop
dec
int3
ss
stos
mov
sub
dec
mov
jge
dec
lock
adc
clc
dec
jl
dec
jnp
or
cli
cmpsb
lds
dec
xorb
mov
add
stos
dec
scas
punpckhbw
inc
jecxz
dec
addr16
dec
test
insb
mov
push
sbb
inc
mov
dec
xchg
jecxz
mov
mov
mov
je
adc
outsl
xor
orl
push
fs
jle
clc
inc
dec
jp
pop
pop
pop
mov
out
dec
cli
stos
scas
mov
add
bswap
test
aas
push
jno
jo
pop
mov
test
fs
and
inc
xchg
arpl
dec
bound
fdivr
aas
push
orl
repz
out
sarb
cs
dec
or
out
popf
sbb
adc
mov
cmpsb
dec
jae
adc
or
xchg
cltd
add
daa
and
sub
in
dec
mov
mov
outsl
push
xor
dec
dec
push
aaa
shll
jo
dec
mov
ret
dec
push
dec
mov
mov
js
push
jle
push
repz
and
and
push
ret
dec
aad
mov
in
arpl
sahf
dec
iret
inc
sub
sbb
xor
dec
xor
mov
fwait
repz
in
adc
dec
sbb
imul
cmp
loope
rcll
add
les
pop
mov
dec
or
enter
inc
inc
and
jno
into
in
orl
push
aas
mov
out
pushf
sub
xchg
rcr
jnp
or
in
popa
insb
dec
push
push
sahf
loop
mov
movsl
loope
sbb
mov
mov
dec
std
test
mov
dec
ljmp
cli
xchg
lahf
stos
push
and
in
jo
dec
cmp
and
dec
iret
jne
cmp
sbb
ret
stc
push
js
jnp
push
lcall
imul
in
add
subl
arpl
inc
dec
dec
adc
xchg
xchg
stc
inc
inc
dec
aam
testl
mov
jbe
loop
andb
insl
xchg
dec
outsb
pushf
daa
pop
pop
sub
incb
xor
and
fsubrs
dec
movsl
shll
mov
movsb
fldenv
je
test
mov
std
cmp
dec
xchg
cld
dec
jp
pushw
add
sub
ret
idiv
lcall
xlat
mov
cmp
xchg
inc
dec
scas
adc
dec
pop
je
jne
ds
fwait
mov
jp
push
nop
dec
test
daa
mov
adc
in
xchg
mov
cld
or
dec
out
sbb
mov
scas
mov
dec
mov
and
dec
int3
push
dec
fsts
scas
daa
xor
mov
ds
push
dec
outsl
cltd
mov
cltd
inc
mov
fistps
repz
rolb
pop
xor
cmc
xor
ret
xchg
pop
and
mov
add
loope
and
or
adc
xor
dec
lahf
jb
inc
aam
dec
movsl
jmp
imul
add
adc
mov
or
or
popa
sti
mov
jle
orb
stc
and
lret
lods
xor
inc
mov
sub
xchg
adc
cmp
out
pushf
xchg
icebp
push
in
pmulhw
jg
icebp
inc
lret
hlt
jl
cmp
xchg
gs
jg
inc
mov
jl
lea
jle
pop
add
std
inc
pop
in
mov
cmp
xchg
je
adc
mov
shrl
push
mov
and
cwtl
stos
xchg
or
jnp
dec
lcall
dec
add
call
dec
adc
jno
cmp
aam
ret
jns
or
xor
iret
xor
jnp
pop
sub
fs
adc
dec
xchg
fwait
js
push
push
dec
mov
or
xor
adc
mov
cld
dec
std
shll
or
cmc
shrl
mov
cmp
imul
dec
lret
sub
dec
cmpsl
adcl
sub
pop
mov
enter
sbb
mov
inc
loop
leave
xchg
push
dec
iret
push
cmpsb
push
dec
std
sub
sbbl
dec
mov
mov
xchg
dec
jecxz
pushf
cmpsl
clc
in
popf
and
pop
mov
xor
call
or
dec
iret
cmpsl
lret
xor
dec
into
addl
add
jnp
dec
fabs
mov
shrb
clc
repnz
addr16
mov
dec
or
int
jb
sub
roll
jne
jmp
dec
xchg
sahf
inc
mov
xor
fsubrp
arpl
dec
cmp
adc
sbb
xchg
leave
mov
repnz
dec
xor
pop
mov
out
or
cmpsb
dec
enter
dec
push
ficoml
dec
data16
mov
hlt
dec
test
movsl
push
mov
push
dec
lds
iret
xchg
dec
pop
xchg
sbbl
nop
loope
mov
xor
dec
mov
icebp
pop
stos
mov
dec
inc
aad
dec
out
lock
push
add
inc
jo
stc
mov
test
inc
push
xchg
sub
xor
fldenv
sarl
out
aaa
pop
jle
test
jg
lahf
dec
jnp
jl
mov
add
in
inc
mov
jno
into
xchg
dec
pop
jg
jae
jl
dec
push
sub
ds
sbb
sub
inc
inc
jle
mov
sbb
inc
rcr
pop
pop
lret
test
sbb
stos
dec
dec
jne
sub
mov
push
arpl
fbstp
cmp
xchg
push
add
add
mov
repnz
js
xchg
sub
dec
xchg
pop
das
dec
fstpl
in
mov
adc
push
fiaddl
mov
ds
dec
out
push
dec
cmp
pusha
dec
xlat
inc
popf
or
into
aaa
mov
scas
iret
adc
test
bound
sub
adc
push
mov
adc
int
scas
fldl
xchg
test
dec
popa
dec
daa
xor
xor
pushfw
test
dec
jg
mov
lret
mov
mov
mov
stc
rol
movsb
incb
fisttpll
hlt
inc
filds
lcall
shlb
pop
push
inc
je
adc
dec
imul
lret
mov
and
into
xchg
repz
ret
dec
sub
outsl
push
and
xorl
jecxz
dec
mov
in
cld
inc
stc
inc
decl
push
sub
lds
dec
adc
scas
mov
push
cmpsb
mov
jno
push
pop
jo
orl
daa
add
outsl
sti
fisubrs
xor
fsubp
dec
repz
inc
inc
mov
into
into
mov
mov
out
addl
dec
add
sub
ret
dec
push
mov
mov
cmp
fwait
or
bound
inc
ss
cwtl
out
fs
ljmp
mov
xor
fwait
jg
or
cmp
cmpsl
lea
mov
fnstsw
imul
pop
mov
shrb
and
or
cmp
sub
lret
push
xchg
adc
cmp
loop
push
loope
adc
cmpb
mov
sbb
sbb
mov
fsubrl
ss
push
inc
add
arpl
add
cli
cmp
add
mov
mov
inc
into
das
fsubrs
add
ret
daa
inc
into
js
cmp
ljmp
xor
fildl
shl
sub
mov
loope
sub
loopne
push
dec
mov
stos
xchg
hlt
sbb
enter
mov
xor
or
dec
loop
adc
scas
dec
mov
lahf
mov
dec
loopne
movsb
cmpsb
mov
pop
ja
sbb
add
inc
pop
popa
gs
mov
filds
jns
testl
out
and
jbe
rorb
xchg
mov
popf
pop
gs
pop
mov
imul
andl
mov
dec
lcall
xchg
sub
mov
add
jno
popa
arpl
movsl
nop
cmpsb
sub
xor
addr16
decb
dec
nop
insl
icebp
enter
jne
rcrl
mov
iret
dec
adc
lea
in
mov
sti
into
add
out
dec
mov
pop
cmp
mov
inc
insl
dec
test
addr16
andb
bound
loope
inc
mov
dec
add
hlt
xlat
mov
jne
inc
and
stc
cmp
popf
insb
pop
out
xchg
dec
or
cmp
imul
sub
ds
roll
test
outsl
push
mov
xchg
clc
adc
push
xor
cs
dec
ds
out
jb
enter
mov
icebp
xor
mov
movsb
sub
dec
repz
fldcw
jb
inc
inc
cmp
mov
mull
xor
push
aaa
xor
stos
sbb
jle
dec
js
dec
push
fmulp
lods
leave
neg
and
or
lret
pop
jecxz
fcoml
mov
dec
mov
jae
inc
mov
loopne
imul
mov
sub
adc
dec
lahf
or
mov
es
or
mull
sbb
pushf
jno
mov
orl
mov
popa
inc
jae
xor
push
dec
pop
jns
js
cmp
jl
into
out
addr16
jae
mov
inc
and
arpl
repnz
dec
xchg
lods
test
inc
js
cli
sub
dec
aam
loop
xchg
dec
push
rol
cld
inc
inc
shlb
lea
pop
adc
or
inc
xor
mov
mov
ds
jne
adc
sub
jb
or
sarb
lret
sbbb
das
gs
out
xor
cmc
xchg
leave
dec
push
push
dec
or
add
fbld
xchg
sub
nop
push
add
push
aad
xchg
out
dec
insb
outsb
sahf
jg
cmc
rcll
int3
and
push
repz
cmp
in
mov
mov
cmp
movsl
test
imul
test
add
mov
adc
pop
sub
and
cmp
rcrb
mov
pusha
mov
xchg
sub
inc
fildl
push
sub
mov
pusha
lods
inc
jbe
cmp
out
lods
insl
movsb
fcmovne
inc
sub
bound
inc
cmpsl
cmp
test
sahf
outsb
or
lahf
jmp
fldl
cmpsb
mov
test
xchg
scas
into
jl
testl
loope
dec
sbb
decb
jle
mov
insl
out
out
insl
cmpsb
out
leave
lret
mov
idiv
imul
rcrb
inc
xor
loopne
andl
or
rcrl
testl
inc
and
cmp
adc
sub
jle
cmpsb
push
add
iret
mov
ds
push
adc
sub
cld
or
fs
add
push
iret
jns
mov
mov
adc
xchg
push
xlat
enter
xor
inc
mov
into
testb
adc
std
into
bound
frstor
nop
xor
repz
popa
dec
dec
sbb
jns
xor
sub
jl
lea
xor
adc
pop
inc
pop
sbb
stos
idivb
jg
push
loopne
or
hlt
xlat
lcall
movsl
cmc
cmc
lods
dec
in
push
add
mov
mov
dec
dec
pop
mov
mov
sbb
call
mov
inc
iret
movsl
stos
jo
adc
or
ror
mov
cwtl
fmull
js
addb
dec
negb
pop
pop
dec
fsub
and
out
xor
movsb
dec
gs
sarl
adc
xchg
sbb
fwait
jb
cs
adcl
xor
out
scas
je
dec
sahf
pusha
js
movsl
dec
push
arpl
fsubrs
pop
clc
inc
jb
adc
mov
dec
aad
sahf
out
scas
mov
pushf
dec
sbb
fwait
jns
incb
leave
jg
aaa
clc
into
inc
fidivrs
adc
sbbl
dec
fs
push
into
les
pop
int3
dec
sub
sub
push
arpl
or
fwait
push
dec
sub
pop
xor
scas
adc
inc
adc
roll
nop
fisttpl
jge
add
mov
adc
push
xchg
fiadds
and
mov
pop
pop
lds
jb
dec
stc
inc
push
ret
icebp
out
mov
pop
pushl
mov
lods
sub
movsl
iret
negb
mov
iret
insl
orl
rcll
lock
mov
jae
jecxz
mov
out
inc
cmp
jle
imul
dec
sbb
cli
fucomip
scas
dec
in
outsl
cmp
push
iret
fimull
sub
jle
popf
xchg
dec
adc
pushf
pop
insl
fcompl
dec
das
add
jle
je
dec
and
and
sub
js
dec
repz
or
mov
dec
hlt
stos
bound
inc
out
inc
dec
mull
dec
inc
adc
inc
xor
cmp
es
push
adc
fnstenv
mov
dec
jle
fcompl
xchg
es
adc
push
jns
dec
mov
and
lock
xor
test
enter
dec
jle
mov
lock
call
addl
sub
xchg
xchg
nop
cmp
sub
aad
rcr
inc
int
ret
fsubrl
sub
and
fxch
out
jg
in
push
outsb
out
and
fnstenv
fcompl
pop
jae
pop
cltd
dec
push
pop
aaa
vcvtdq2ps
push
lcall
in
jle
adc
nop
das
dec
stc
adc
ds
sbb
cld
je
popf
add
into
jle
imul
xchg
mov
sub
divps
in
jl
stc
pop
and
inc
jns
jae
mov
xor
or
cmpsl
dec
jg
mov
push
adc
jp
pushf
cmp
mov
subl
cmpsb
lods
dec
aad
clc
lock
jne
xchg
mulb
push
stos
inc
add
xchg
mov
scas
push
incb
cmp
dec
and
pop
mov
dec
sub
loopne
cmc
jns
lods
dec
cli
push
adc
dec
adc
rcrl
jns
dec
xor
cmpb
cld
push
xor
lea
mov
dec
jne
repz
push
push
scas
sbb
out
mov
test
mov
pop
cmpsb
cmpsl
push
outsl
loope
add
pop
mov
stos
test
inc
in
loop
test
and
inc
call
iret
jno
mov
stos
cmp
cwtl
movsl
dec
adc
divb
aad
int
mov
inc
dec
mov
sbb
cmp
sub
scas
xchg
jp
pop
push
lds
test
mov
pop
dec
and
sbb
xor
sbb
sbb
jbe
push
and
dec
sbb
inc
adc
ret
lods
jge
rcl
leave
pop
pop
negb
dec
loop
in
outsl
ljmp
or
movb
pushf
cmp
movsb
mov
in
dec
mov
enter
jmp
es
rorl
and
repz
into
dec
cmp
jg
out
popa
lret
xchg
push
int
incl
pushf
fsub
xchg
clc
dec
icebp
cmp
iret
fildl
dec
fcomp
xchg
imul
mov
dec
cmp
mov
andl
jns
add
dec
pop
jg
rorl
mov
or
push
sub
push
in
mov
and
and
loopne
dec
sbbb
jno
mov
adc
inc
and
jecxz
mov
fcmovbe
loop,pt
cmp
add
dec
push
cltd
jns
sbbl
sahf
fst
dec
ds
shlb
je
lea
and
push
xchg
and
or
fcmovbe
jne
dec
dec
or
aas
and
daa
adcb
jno
jecxz
dec
sub
stos
les
cltd
loopne
je
xor
push
aaa
test
mov
cmp
push
inc
ja
js
cmp
xchg
lea
movsl
adcb
into
lea
mov
cmp
and
push
leave
push
scas
shlb
in
dec
negb
cmp
or
ret
and
sbbb
clc
vpslld
push
cmp
and
sbb
dec
dec
xor
adc
test
popa
test
and
into
mov
jo
push
lahf
dec
bound
mov
mov
inc
addr16
enter
imul
mov
push
jmp
subb
inc
into
jl
inc
jp
or
mov
xor
dec
pop
in
stos
fs
pop
jecxz
dec
jns
mov
sbb
cmc
xor
sub
jno
es
dec
push
ja
inc
or
cmc
xor
push
outsl
adc
dec
ret
into
adc
repnz
mov
rorb
sbb
jecxz
repz
or
add
fsubrl
lea
mov
cmc
ljmp
sub
aas
bound
fwait
mov
xor
or
xlat
punpcklbw
dec
or
sbb
mov
hlt
rcll
mov
cmpl
push
xchg
jae
xor
ja
out
mov
pop
aaa
dec
shrl
int3
adc
adc
ja
xchg
dec
imul
sub
push
cltd
xchg
cs
dec
push
leave
hlt
or
push
sub
sbb
cmp
mov
js
push
and
xchg
cmp
out
mov
dec
xor
jp
mov
and
ss
lret
test
dec
push
cmp
pop
insb
hlt
sbb
dec
int3
push
in
sti
and
and
dec
push
mov
cltd
push
sub
add
jne
into
mov
stc
jmp
mov
lock
xchg
xor
arpl
xor
pushf
adc
and
data16
gs
pop
dec
lods
imul
rorb
inc
cltd
fistps
mov
fidivl
pop
dec
adcl
mov
call
push
fstl
dec
sub
pop
adc
popa
mov
arpl
fldt
cmpsb
dec
stc
mov
cmp
test
test
push
rolb
enter
inc
in
pusha
xchg
or
sub
daa
pop
cmp
mov
shrl
dec
mov
lods
dec
mov
das
jb
pop
lcall
dec
sbb
sbb
or
jl
popa
cmp
and
stos
dec
xor
adc
or
cwtl
or
sub
test
mov
mov
add
sarb
push
arpl
cmp
cmp
int3
mov
fildl
mov
jecxz
sbb
pop
shlb
cmpps
stc
jle
push
out
out
or
ror
lock
cmp
data16
sbb
cmp
data16
sub
clc
je
movl
mov
cmp
cs
push
leave
dec
dec
cltd
in
popf
or
rorl
shll
jl
pop
jp
mov
or
in
push
int
and
adcb
scas
and
pop
cmpsl
push
xor
push
xor
test
mov
testb
mov
pop
inc
into
clc
fcmovnb
xchg
inc
and
dec
int
xor
sbbl
push
cmp
push
sub
popa
jnp
xor
dec
sbb
js
inc
mov
push
jl
push
xchg
pop
dec
popf
mov
jle
dec
scas
jb
bound
and
mov
and
adc
bound
jg
inc
push
dec
loopne
mov
push
mov
dec
jp
and
fistps
shr
dec
movsb
shlb
lea
enter
outsb
out
mov
jbe
inc
outsb
xchg
dec
mov
inc
jge
mov
daa
testl
mov
adc
test
aas
xor
cmp
test
fisubl
test
or
rcl
mov
in
rclb
push
or
in
dec
xchg
sbb
jns
aad
dec
xor
or
inc
dec
inc
jle
and
jl
jno
jb
pop
mov
ja
rcrb
cmp
divb
aaa
jl
in
mov
dec
aaa
movsl
pop
mov
mov
mov
push
adc
icebp
and
sub
sbb
dec
jle
cld
loopne
int
xchg
sub
dec
jnp
inc
movsl
xchg
lods
pop
cmpsl
and
cltd
stc
sub
mov
push
ret
fs
and
ror
mov
insl
imul
aaa
xor
xchg
sbb
mov
jg
push
mov
adc
test
ja
into
add
scas
cs
jo
mov
jg
adc
lret
cmpsl
push
jg
aaa
xchg
scas
rcr
leave
lods
mov
sub
fcompl
pop
dec
sbb
adc
fcoms
adc
ret
adc
xlat
out
in
jmp
mov
js
jb
adc
sarb
es
add
jl
and
pusha
or
mov
and
popf
leave
push
out
mov
icebp
adc
int3
stos
cmpsb
scas
jns
cmpl
lcall
aaa
mov
fiaddl
not
enter
xchg
push
incb
jl
jo
imul
subl
out
in
mov
jecxz
lahf
daa
std
xor
cmp
in
gs
in
jl
fcoms
jb
into
idivl
xchg
rcr
pop
mov
xor
das
cmp
jle
out
lahf
dec
add
outsb
add
les
std
out
inc
insb
xchg
push
enter
push
pop
inc
out
mov
xchg
rorl
push
nop
sub
jp
fsubs
xor
adc
mov
cmp
lods
mov
cmp
adc
cmpsl
orl
shlb
out
pop
xchg
pop
mov
dec
mov
subb
xor
or
int
stc
test
pop
jb
pop
ret
iret
xchg
loope
cs
dec
and
scas
sbb
dec
lcall
in
xchg
dec
out
or
aam
inc
xor
lea
dec
xchg
adc
mov
mov
push
into
mov
mov
aam
incb
jns
std
dec
shr
pusha
mov
out
ret
ljmp
push
les
cwtl
mov
jge
mov
imul
adc
ret
arpl
mov
or
outsl
pop
rorl
dec
fnstenv
push
data16
dec
loopne
push
leave
cmp
dec
or
adc
adc
sub
dec
cmpsl
shll
xchg
stc
add
shl
add
rcrb
cwtl
inc
cmc
xchg
mov
mov
dec
sub
shrl
out
mov
aas
dec
cmp
ja
cmp
dec
rcrb
xchg
ret
mov
sbbb
je
jmp
cld
lahf
push
dec
or
mov
push
xchg
dec
in
loopne
nop
outsb
jae
out
ljmp
daa
dec
adc
and
push
insl
shll
dec
or
push
inc
or
push
xchg
inc
dec
cmpsb
dec
cs
sbb
imul
jnp
ljmp
into
fdivp
inc
or
lret
stos
mov
mov
in
icebp
test
xchg
sbb
cs
xor
mov
push
out
inc
mov
push
pushf
aad
jle
loop
lea
outsl
dec
ljmp
push
sbb
scas
sub
xchg
sub
inc
and
pop
push
add
hlt
es
xor
pushf
dec
mov
jle
out
dec
ljmp
pusha
inc
pop
xchg
in
aas
cmp
or
imul
sbb
std
add
and
xlat
add
cmp
mov
iret
cli
cmpsl
stc
add
addr16
mov
into
jae
or
nop
popf
shlb
cs
jp
dec
mov
pop
fldl
mov
das
adc
movsl
mov
dec
or
mov
imul
loopne
and
mov
jns
enter
mov
ljmp
in
dec
pop
adc
in
dec
pop
push
xchg
push
or
push
add
lods
and
dec
test
cmpsb
or
add
movsl
mov
repz
xor
fcoms
daa
jg
movsb
rcrl
call
inc
iret
xor
push
cmpsb
pop
inc
int3
fcmovne
cmc
adc
cmpsl
leave
movsl
add
dec
pushf
inc
mov
inc
icebp
sub
dec
add
sbb
into
dec
in
out
inc
je
mov
mov
lret
aas
cld
dec
inc
dec
jbe
xchg
fwait
xchg
stos
sbb
addb
cmp
daa
push
popf
mov
fsubr
fwait
aad
dec
sbb
int
jmp
test
bound
pop
fwait
aas
out
inc
dec
xor
xchg
mov
push
pop
test
bound
push
inc
xchg
cmp
adc
dec
and
mov
cld
inc
cmpsl
arpl
dec
xor
fldl
push
xchg
ss
cmp
mov
fdivrs
sub
mov
add
fwait
ror
cmp
xor
xor
aas
mov
mov
sbb
sti
scas
iret
adc
pop
in
xchg
jle
idivb
jg
jmpw
lods
push
leave
mov
js
jl
push
into
jne
jmp
mov
mov
xor
pop
popf
xlat
int3
std
adc
xchg
iret
ficompl
xor
in
cs
or
jnp
sub
cmp
push
sbb
xchg
movsl
dec
push
jg
roll
repnz
ret
cmpsl
js
sub
dec
and
jnp
dec
adc
xor
adc
sub
cmp
cmp
frstor
int3
add
insl
sahf
out
ret
aaa
out
push
and
outsb
xor
loop
cmp
push
sub
or
xor
iret
sub
mov
in
fadds
shr
aas
out
lods
inc
pop
fistps
imul
fs
dec
push
add
popa
ret
ss
outsb
jne
fimull
push
inc
sbb
inc
bound
in
jmp
mov
lret
lret
andb
sahf
or
adc
lret
pop
dec
aaa
mov
dec
test
inc
std
jl
faddl
int3
xor
inc
inc
pop
mov
lods
mov
popl
call
cmp
bound
dec
cmp
mov
ficompl
lahf
adc
mov
dec
jecxz
jae
shll
sub
push
inc
xor
fiaddl
pop
mov
add
pop
cmp
lods
fdivrs
push
outsl
xor
pop
fistpll
dec
jmp
and
fdivrs
push
mov
lods
cltd
push
call
jge
jbe
add
sbb
xchg
mov
imull
jl
push
mov
jae
icebp
mov
or
cmpsl
xchg
popa
cmp
cmp
rclb
and
sbb
and
cmpsl
dec
jg
pop
or
mov
mov
jle
mov
dec
or
fildl
stos
sbb
pop
aaa
pop
mov
fwait
sbb
arpl
cmc
fwait
inc
nop
or
xchg
sbb
cltd
movsl
xchg
subb
jle
loopne
push
fs
into
cli
xor
aas
jg
inc
pusha
lods
mov
xchg
lock
imul
in
mov
dec
cwtl
push
das
jg
bound
lds
sarb
fmull
adc
jp
mov
sub
loop
cmp
jle
in
xchg
dec
jae
loop
scas
out
je
cmc
xchg
dec
pop
and
dec
xor
sub
and
cmpsb
fsubs
daa
pushf
loop
cld
xor
test
mov
push
mov
stc
cmp
cmpsb
and
in
pcmpeqw
lret
sbb
cmp
jno
push
sbb
jg
cmp
nop
xchg
dec
test
out
pop
dec
xor
and
in
inc
and
xor
icebp
xchg
movsl
stos
push
pop
stc
mov
xor
adc
dec
aaa
jne
inc
imul
cmp
test
and
lret
test
pusha
imul
mov
inc
lahf
ficomps
iret
sub
bound
xor
aaa
shrl
pop
es
fidivl
test
iret
push
bound
outsl
mov
mov
mov
insl
popa
lret
lret
pusha
dec
dec
push
fwait
ljmp
dec
push
dec
mov
push
pop
dec
cmp
nop
xor
push
pop
testl
dec
bound
pop
lock
bound
aas
push
mov
add
xor
in
or
outsl
dec
mov
cmc
inc
decb
pop
scas
xor
push
out
lret
dec
scas
pushf
jge
lods
aam
mov
shll
push
inc
pop
cmove
xorb
dec
dec
push
or
in
lret
sbb
mov
pop
dec
dec
mov
aas
cwtl
movsl
sbb
pop
or
icebp
arpl
push
or
dec
mov
push
popa
xchg
dec
call
fidivrl
dec
popf
xor
cmp
inc
mov
sbb
dec
arpl
sbb
dec
xor
test
sbb
out
mov
push
das
add
and
and
cs
xchg
loope
inc
dec
movsb
std
dec
cmp
pop
mov
dec
inc
ljmp
daa
mov
add
mov
dec
mov
cltd
mov
mov
dec
movsl
mov
xor
scas
or
adc
loop
mov
inc
inc
jecxz
in
subb
fsts
sarb
movb
jmp
push
xor
call
iret
daa
push
in
std
dec
mov
jne
stc
test
mov
jg
ss
mov
das
jb
dec
inc
sub
rcrb
das
adc
cwtl
xor
das
jle
aad
pop
add
mov
repnz
das
dec
lods
aas
sub
inc
data16
jg
mov
sub
push
ret
ljmp
lea
pop
push
inc
shrb
cmc
out
xchg
loopne
mov
inc
mov
dec
ret
mov
push
int3
cmp
lahf
enter
gs
stos
popf
mov
movl
repz
nop
test
cmc
les
pop
jl
xlat
into
jle
inc
push
int
rcrl
pop
and
out
and
es
add
shl
filds
loop
dec
or
outsb
push
cmp
mov
dec
mov
adc
lret
adc
or
lret
scas
data16
ljmp
jl
push
cmp
arpl
pop
push
lods
cmc
movsl
cmpsl
lods
mov
pop
jb
subl
jo
lar
mov
push
hlt
iret
ss
sarb
mov
adc
in
sbb
dec
shlb
stos
mov
clc
rol
outsb
adc
dec
push
loop,pn
lea
push
adc
mov
cmp
lock
jo
jp
and
std
je
sub
loop
xchg
addr16
jae
cmpsb
sub
push
hlt
mov
xor
fldt
pop
dec
mov
fistps
mov
mov
cmpsl
dec
daa
fwait
push
inc
aam
js
dec
and
jb
repnz
rorb
in
fidivs
add
repz
dec
cmpsb
pusha
arpl
out
jg
dec
mov
jnp
push
test
loope
jl
xchg
mov
data16
in
lahf
sub
in
lcall
jbe
cmp
insl
jmp
jp
cld
push
sub
cmp
repnz
pop
cmp
xor
cmp
xchg
lods
cmp
push
pop
lcall
jle
mov
sbb
into
arpl
push
adcb
aam
enter
fcoms
test
adc
repnz
or
fs
iret
rcrb
cmc
dec
inc
push
or
jl
push
pop
into
leave
mov
test
rolb
cmp
movsb
cmpsl
dec
sub
fidivl
jns
sbb
jle
sbbl
pushf
in
add
dec
push
jle
frstor
jo
push
fistpll
shrl
fisubrl
lret
fidivs
ret
cmp
sti
inc
jbe
dec
pop
jl
movsb
adc
inc
pop
das
lea
int
jg
out
inc
push
push
jp
inc
int3
sbb
outsb
mov
cmpsb
cmpsl
arpl
cmp
repnz
and
mov
sub
stc
pop
inc
xchg
aaa
dec
push
pop
fistpll
pop
popl
cmp
rol
jns
jle
scas
outsl
push
pop
mov
sti
addr16
and
or
fwait
cmpsl
pop
sub
sub
pop
sub
outsb
lret
sbb
out
or
test
xchg
jb
arpl
push
out
xlat
iret
sub
dec
xor
mov
jg
cmpsb
add
cmp
lods
aas
pop
push
pop
cmc
cmpsb
push
dec
xchg
hlt
cltd
ss
mov
mov
lahf
idivl
push
dec
dec
fs
or
pop
ror
pop
mov
jle
scas
xchg
mov
mov
jbe
stos
ficoms
push
push
cli
add
aaa
xchg
lods
fwait
mov
cmc
loop
jp
sub
ljmp
out
fdivrs
lea
jnp
in
out
dec
mov
push
mulb
dec
aas
xor
cmp
ret
loop
lods
addr16
stc
jo
mov
enter
pop
add
sub
mov
jg
adcl
sahf
jl
out
dec
push
jle
mov
xor
fadd
fisubl
daa
stc
push
in
push
adc
addr16
push
dec
xor
sub
push
sbb
fcoml
sub
jle
jg
jecxz
es
sbb
cmp
sbb
popf
roll
lahf
iret
inc
mov
bound
addl
js
stos
mov
xchg
sub
xchg
lret
xchg
xchg
scas
and
pop
push
repz
mov
sbbl
sbb
lods
jmp
inc
xor
dec
cmp
dec
cmp
and
rorb
bound
xlat
or
rclb
test
dec
jae
lea
add
mov
test
pop
pop
nop
ds
out
pop
push
lret
mov
jbe
mov
aam
sub
inc
add
cs
mov
sub
cmp
fiaddl
cmp
pmaxsw
cmp
cwtl
mov
jle
icebp
aas
push
test
jb
dec
and
sub
iret
shr
cmp
push
push
call
int3
lea
popf
outsl
xor
mov
push
pushl
mov
aaa
lret
jle
call
icebp
jecxz
mov
or
icebp
cwtl
mov
aad
int3
bound
pop
jl
push
in
out
fisttps
fisubl
push
stos
das
idivl
mov
enter
ret
hlt
in
adc
cmp
push
into
das
inc
pop
dec
subb
idiv
bswap
jo
std
addr16
dec
jg
popl
pop
cs
dec
mull
shr
or
or
pop
push
jae
dec
pusha
scas
push
jle
xor
mov
xchg
push
push
adc
jg
mov
lret
pop
icebp
cmpsl
add
jmp
cmp
pop
and
pop
ja
mov
sbb
lahf
jle
fdivrl
cmpsb
out
jl
mov
jnp
mov
dec
dec
cmc
out
adc
test
fs
in
add
shll
sub
in
insl
add
inc
cwtl
lods
mov
mov
lods
adc
mov
dec
pusha
stos
xor
verw
loopne
sbb
lret
cltd
jmp
cmp
sub
int3
icebp
lcall
dec
mov
sahf
and
adc
outsl
and
xor
lods
cmpsb
push
dec
je,pn
jl
cmp
cmpsl
xchg
sti
jbe
idivb
test
mov
sub
cmp
push
jp
cmp
mov
pop
out
hlt
in
jne
jle
and
mov
je
xor
cltd
jmp
aas
notb
aaa
cmp
sbb
fsubp
or
sbb
inc
add
jl
imul
sub
fldenv
out
jo
popf
loop
enter
jae
dec
mov
test
mov
dec
xor
xchg
insl
pop
dec
outsl
xor
gs
and
in
repnz
lcall
cwtl
cmp
ss
dec
test
push
jnp
pop
dec
cmp
fsubrl
outsl
iret
mov
pop
dec
push
mov
pop
sar
fdivrl
lods
pop
jbe
bnd
dec
addr16
cmp
lods
mov
iret
dec
and
sti
mov
mov
add
xor
daa
xor
loopne
mov
mov
xchg
inc
xlat
fistpll
scas
xchg
icebp
scas
ret
daa
imulb
inc
jp
adc
cmpsb
out
dec
cli
mov
sbb
dec
dec
jecxz
lahf
inc
mov
jmp
xor
add
and
pop
push
cmp
inc
popa
out
jp
imull
xchg
sbb
cmp
fildl
out
pop
call
inc
sbb
pop
sti
inc
mov
mull
lret
jg
jle
and
mov
sahf
popl
and
pusha
std
out
cmp
cmp
mov
push
xor
jnp
bswap
stc
lret
or
div
add
test
inc
pushf
inc
jg
mov
jle
inc
gs
xchg
sub
cs
lods
fidivs
js
nop
mov
dec
mov
cmp
out
jge
cld
mov
in
push
shlb
nop
test
mov
pop
inc
lret
and
adc
jno
jmp
add
bound
or
sub
dec
shr
fs
aad
test
cmp
mov
jle
add
adc
iret
xchg
fimull
inc
in
outsb
test
aas
into
cld
sarb
sub
cltd
out
pop
jl
sub
adc
add
popa
insb
fldenv
lock
xor
dec
addr16
jl
lret
test
cmp
xor
into
mov
and
xor
push
jb
out
fimuls
pop
cmovle
scas
jecxz
adc
mov
lock
pop
xor
inc
push
ror
cli
pop
pop
into
dec
push
mov
jb
dec
cmpsl
sub
mov
dec
push
sahf
cmp
bound
mov
and
data16
add
xor
arpl
inc
mov
into
mov
call
pop
xor
inc
dec
pop
sti
jne
add
mov
iret
jb
push
dec
xchg
sub
mov
in
dec
xchg
lret
jno
dec
sbb
cmp
rorl
mov
movsl
outsb
stos
fiaddl
cmp
ret
mov
jle
fdivr
cmp
inc
mov
mov
mov
sbb
call
sub
dec
mov
or
lea
in
pop
int
je
jl
xchg
xor
xor
loop
repz
cmp
xchg
xchg
pop
jno
scas
pop
insb
dec
sub
sbb
dec
in
fdivr
lcall
xlat
adc
iret
pop
nop
pop
xor
pop
mov
mov
jmp
pop
cmpl
xchg
outsb
cltd
out
push
dec
adc
sbb
dec
fstl
add
daa
mov
dec
and
shll
imul
add
adc
jle
jge
xor
add
stos
cmp
add
jp
jp
jns
jbe
out
jb
cmp
cltd
push
add
push
push
aaa
mov
mov
add
xchg
loope
sbb
mov
push
pusha
pop
fstpt
dec
mov
lock
inc
in
cltd
mov
inc
js
push
cmp
jnp
xorb
icebp
inc
mov
cwtl
sub
add
sub
into
pushf
jg
clc
mov
cli
test
cld
mov
mov
push
fs
insb
and
ds
jle
adc
cmp
push
int3
test
std
repnz
das
sub
xchg
into
rcll
sbb
xor
adc
sti
jecxz
xor
push
push
inc
mov
icebp
mulb
xchg
decl
pusha
cmpl
icebp
repnz
fiadds
pop
dec
and
xor
cmp
mov
pushf
pop
dec
mov
xchg
dec
xchg
push
pop
adc
cmp
cmpsb
movsl
sub
jb
adc
out
cmp
pop
sub
out
clc
lods
mov
jbe
dec
lahf
xor
ds
cmc
push
iret
int3
out
pop
ja
pop
ds
xor
push
lock
bound
cmp
mov
inc
fidivl
mov
jne
dec
mov
cmp
push
pusha
pusha
ss
sub
adc
lods
xlat
mov
int3
sbb
popf
pop
mov
out
mov
sub
mov
dec
add
xchg
dec
inc
push
xchg
jmp
or
stos
xchg
push
jmp
xchg
jg
jle
push
dec
add
icebp
or
adc
mov
dec
and
prefetch
shlb
jg
sub
aad
lods
adc
jnp
add
aas
jno,pn
sahf
push
mov
or
sbb
jl
mov
sub
dec
inc
leave
stos
cmp
iret
xor
jo
fsubs
scas
sbb
jp
aam
mov
cltd
clc
push
cmpsl
dec
jae
dec
mull
cli
xchg
fimuls
call
testb
and
jbe
add
mov
mov
sar
insl
in
sbb
mov
inc
sub
lds
mov
jl
dec
mov
std
in
jbe
adc
es
or
fidivl
xchg
sbb
cli
mov
mov
mov
lcall
jl
aas
scas
dec
lea
hlt
sbb
je
lods
faddl
and
repnz
add
fimuls
or
js
xor
inc
lcall
scas
adc
fisubrl
adc
popl
cmc
xchg
xchg
pop
enter
daa
into
ror
dec
subb
dec
cli
and
add
fs
jnp
dec
mov
or
dec
or
mov
sbb
push
dec
mov
idiv
loope
insl
mov
sahf
pop
dec
mov
ss
lds
push
lret
orb
fdivp
dec
imul
pushf
scas
dec
adc
xchg
and
jns
inc
mov
mov
mov
ds
jbe
shll
push
adc
ficomps
dec
arpl
pop
int3
or
jnp
stos
mov
in
dec
fisttpll
xchg
xor
jb
movsl
xchg
mov
lcall
insl
dec
and
fiaddl
sub
cld
mov
fstpl
data16
jno
add
jo
dec
and
lahf
mov
adc
dec
das
jg
push
fdivl
push
mov
push
push
stos
inc
arpl
xlat
push
daa
xchg
mov
lock
dec
in
pop
test
rol
fistpll
cmp
sti
cmpsl
mov
outsb
addl
mov
push
adc
sarl
addr16
inc
mov
sbb
jp
inc
out
adc
fsubp
cmpsb
mov
mov
inc
pop
jle
dec
lods
sub
test
popf
cmpsl
aam
and
cld
clc
cmp
inc
bound
inc
sub
pushl
dec
sbb
imul
jmp
push
mov
sbb
and
dec
inc
lods
cmp
movsl
addr16
xchg
aaa
jnp
mov
or
stos
repnz
insb
adc
cmp
in
imull
jg
fs
mov
mov
stos
jns
mov
adc
test
aas
shlb
mov
or
sti
shrl
adcb
dec
int
mov
fbstp
stos
mov
ds
nop
int3
jl
bound
mov
inc
cmp
fwait
cmp
arpl
push
hlt
lea
and
out
popf
inc
cmpsb
adc
sbb
mov
and
add
xchg
insb
dec
mov
inc
mov
outsb
inc
push
into
pop
sbb
inc
arpl
rcrb
dec
aaa
xor
adc
dec
aam
push
jge
xorb
jle
push
js
sub
in
inc
jl
mov
dec
jb
mov
mov
cmp
adc
pop
inc
jle
or
add
out
pop
stos
outsb
adc
xor
es
mov
repnz
jbe
jecxz
xor
ljmp
ficoms
push
jl
loopne
dec
push
mov
sbb
dec
mov
cmpsl
dec
sub
cld
shrb
add
cltd
inc
push
pop
dec
xor
mov
sub
push
dec
mov
adc
jg
out
fstps
jp
aam
cltd
inc
mov
add
mov
aaa
adc
and
xor
in
adc
mov
xchg
out
sub
xchg
js
fbld
dec
mov
jge
dec
jae
xor
ja
in
out
test
int
les
dec
inc
decl
xchg
jmp
mov
or
xor
dec
repz
xchg
int
mov
cltd
lret
cmp
in
pop
iret
je
aad
mov
int3
dec
imul
xor
leave
repz
and
xchg
scas
fnstsw
mov
inc
adc
stos
sbb
testb
pop
mov
pop
clc
dec
inc
shll
stos
je
adc
sbb
push
stc
pop
dec
push
dec
and
repz
mov
jge
dec
fsubl
inc
out
sub
jnp
dec
stos
js
sub
dec
int
xor
cmpsb
lret
imull
mov
xor
xrelease
cli
into
negl
loopnew
inc
daa
int3
add
fstpt
bound
in
pusha
xchg
mov
lahf
pop
sbb
jg
xor
cltd
lods
push
adc
sahf
out
jl
fwait
outsl
inc
and
or
push
and
out
iret
sbb
pusha
cmp
xchg
int3
imulb
xor
and
add
mov
popl
push
push
inc
inc
sysexit
decl
lcall
push
inc
roll
jne
push
sbb
push
fistpl
xchg
push
add
sub
out
jp
push
adc
cmpsl
inc
cmp
push
addl
test
insl
sub
das
sbb
dec
aas
testb
xor
inc
pushf
adc
into
adc
mov
sub
pop
movl
mov
in
pop
inc
and
push
inc
pop
jle
fnstenv
push
out
push
cmc
mov
xchg
jo
popf
sbb
mov
xchg
dec
out
movsb
popa
pop
xchg
jmp
jp
pop
lahf
inc
mov
cmp
jmp
ret
jg
adc
ret
adc
dec
push
int3
lods
sub
xchg
xor
jecxz
xchg
push
imul
mov
pushf
jb
icebp
xchg
loope
jg
mov
lret
xchg
out
cmp
ljmp
int3
into
aaa
mov
jae
jb
inc
jl
movsb
mov
and
pop
lahf
sbb
in
cmp
out
jl
cmp
inc
xor
stc
inc
shll
stos
cmp
adcb
dec
fistpl
xor
and
ds
shrb
sti
negl
push
sahf
les
sub
into
jmp
push
pop
cld
out
push
nop
and
jl
jle
push
paddb
mov
mov
jle
pop
mov
lods
jb
mov
fsubrp
dec
xor
dec
mov
inc
cmp
cli
sub
test
push
in
aam
and
rolb
jl
aam
adc
imul
xor
test
cli
and
aaa
in
xlat
movsb
out
das
ret
cmp
inc
es
adc
mov
pop
out
cmp
imul
mov
inc
inc
pop
mov
adc
pop
jle
ss
jbe
jns
pushf
and
pop
mov
aam
lods
test
mov
popa
aaa
mov
lods
inc
adc
pop
ds
insb
in
leave
cmpsl
cmp
xor
dec
shlb
loopne
ja
cs
hlt
dec
xchg
push
popa
sbb
scas
cmpsl
adc
fs
cwtl
mov
ss
inc
dec
scas
jle
lcall
bswap
jns
stos
iret
js
mov
lahf
push
xchg
pop
dec
mov
into
push
push
data16
push
cltd
inc
js
xor
jle
movsl
addr16
cmp
adcl
aad
rorb
lods
push
sub
fisttpll
insb
sbb
mov
jae
lret
mov
push
dec
jl
adc
icebp
and
push
aad
in
push
add
sarb
mov
loopw
or
jae
repz
sbb
inc
das
icebp
lds
cli
out
xor
jl
daa
or
push
xor
lret
fldl2e
sub
push
sbb
pop
insl
nopl
sub
aaa
jnp
aaa
mov
pop
xor
xor
les
mov
adc
mov
mov
cltd
mov
pop
popa
lock
push
xchg
inc
xor
jle
xchg
idivb
adc
jb
movsb
scas
int3
push
push
pop
stc
push
dec
and
and
add
xchg
add
mov
mov
scas
mov
xchg
stos
jl
scas
or
fsubrl
xchg
int
outsb
outsb
jg
pcmpgtd
cmp
ss
jl
add
cmp
xor
dec
scas
lahf
mov
jg
daa
adc
sub
push
mov
xchg
push
iret
loopne,pt
ja
out
pop
lret
pop
vmovaps
push
cmc
pushl
push
dec
rorb
sub
and
in
dec
cmp
outsb
sbb
push
faddl
arpl
inc
cmpsb
cltd
test
scas
jmp
inc
inc
xchg
addr16
and
out
cmp
push
dec
es
ds
jbe
adc
mov
dec
cld
rorb
cmp
pop
outsb
mov
xor
scas
mov
iret
xor
int
inc
jnp
mov
lock
adc
or
sahf
rorl
and
pop
std
mov
outsl
inc
in
jnp
jmp
cwtl
les
call
push
test
mov
bound
loopne
mov
dec
flds
adcl
call
or
xor
and
leave
sahf
je
loope
test
sahf
mov
inc
jne
fistps
mov
dec
mov
addl
sbb
mov
pop
jge
pop
xor
popf
ucomiss
mov
pop
dec
jb
aas
cmpsl
xchg
repz
cmp
dec
dec
push
je
jns
dec
mov
inc
jbe
dec
mov
cmp
sahf
xchg
and
jg
lahf
jecxz
add
loope
push
dec
xchg
adc
push
popf
testl
dec
pop
xor
scas
dec
call
sbbl
and
pop
sub
ret
pop
test
pop
push
push
fcoms
leave
out
ret
test
out
adc
scas
cmp
add
xchg
and
push
xor
cmc
dec
push
mov
mov
pop
dec
dec
and
mov
mov
fisubrl
sarb
ss
rclb
pop
pop
lods
dec
cwtl
lret
or
mov
fwait
jns,pt
dec
jae
andl
lock
mov
pop
inc
cmp
dec
add
cmc
inc
jne
std
lods
lret
mov
adc
pushf
scas
mov
sub
jbe
dec
cltd
xlat
sti
pop
decl
inc
dec
adc
movlps
push
pop
dec
jno
mov
inc
inc
repnz
xor
adcb
dec
test
sub
adc
gs
bound
insl
mov
movsb
and
xchg
out
faddl
fstps
out
or
inc
nop
ret
loopne
test
push
cmc
jle
mov
pop
mov
dec
jae
test
jnp
test
in
out
fs
out
pop
pop
icebp
mov
push
scas
fildl
mov
testl
leave
or
bound
add
xlat
dec
fcoms
cmpsb
lret
mov
and
es
mov
sbbb
mov
add
and
mov
ljmp
dec
xor
push
std
fwait
dec
pusha
push
add
outsb
lods
adc
mov
jl
fwait
dec
repnz
ret
xchg
insl
test
pop
lea
push
jle
loopne
cmp
jns
jg
outsl
or
cs
fisttpll
mov
push
sbbb
inc
insb
cmp
jl
arpl
in
xchg
xor
js
out
imul
xor
cmp
cmp
mov
jge
pop
arpl
dec
xor
cmp
sbb
sub
mov
das
push
iret
daa
mov
loopne
jg
movsl
cwtl
test
out
jbe
jge
lret
lods
or
fimull
sub
sub
add
xor
dec
scas
in
stc
pop
dec
mov
dec
out
push
dec
test
popa
jno
cmp
sbb
mov
dec
push
xchg
scas
mov
mov
lahf
dec
jo
push
inc
rorb
loope
leave
lret
xchg
dec
jmp
lret
cltd
aad
inc
ja
outsb
inc
mov
xor
in
dec
add
repz
mov
cmpsb
fs
ds
shlb
jle
mov
cmp
popa
pop
or
daa
mov
pop
jmp
rcl
jno
into
dec
jg
push
cs
fiadds
repnz
cmp
mov
dec
gs
notb
lods
ds
jg
pop
imul
add
rcll
fidivrl
ljmp
and
dec
int3
add
frstor
out
pop
mov
xchg
sbb
dec
repz
lea
dec
sti
push
mov
add
xor
es
cmpsl
fs
repz
inc
jbe
add
dec
jns
mov
inc
jb
out
mov
dec
sub
push
push
adc
xor
cmp
dec
jecxz
mov
cs
les
sbb
dec
ret
push
daa
sub
jbe
call
dec
dec
pushf
repnz
sub
fldenv
cltd
test
dec
dec
add
in
pop
xor
outsl
jle
add
icebp
fildl
xor
cmp
push
pop
mov
in
cmp
cmp
cmp
aas
push
push
inc
jns
lahf
mov
jle
pop
cmp
lahf
lods
jg
and
idivl
repz
mov
mov
sub
mull
mov
jg
dec
jae
test
dec
add
cmp
jle
xchg
push
aaa
dec
mov
dec
push
mov
add
push
mov
add
mov
jg
or
js
inc
cmp
cmp
ja
cmp
dec
jno
inc
or
and
aad
dec
push
sbb
sub
iret
scas
dec
ljmp
dec
daa
or
lods
add
bound
cli
jae
enter
dec
pushf
mov
mov
lds
pop
xlat
push
dec
dec
sahf
push
sbb
jbe
push
jle
testb
dec
cwtl
lahf
sbb
or
jecxz
fisttpll
mov
mov
scas
push
mov
repz
into
xchg
ja
mov
pop
add
inc
dec
xor
insb
mov
fsubl
cltd
jmp
pop
cmp
mov
push
and
pop
iret
orb
dec
lock
es
test
jg
enter
ds
dec
lea
add
icebp
adc
aad
add
add
fs
cltd
lfs
daa
mov
test
imul
mov
push
rorb
push
dec
call
in
dec
jbe
pop
fdivl
rolb
pop
dec
call
addr16
out
int
fsubrs
dec
xorb
jmp
jecxz
data16
jl
inc
ret
je
dec
mov
out
inc
sbb
and
aaa
sbb
dec
insb
lock
push
and
cld
mov
dec
xchg
sbbl
ds
testb
fimuls
imull
sub
mov
insl
lahf
iret
in
add
movsb
pop
jmp
cmp
adc
repnz
jecxz
decb
fisttpl
rol
pop
pop
jbe
pop
jle
xchg
pop
int3
dec
mov
sub
aad
mov
popf
inc
jne
push
neg
sub
daa
push
adc
pop
dec
mov
jno
adc
jmp
int
nop
ja
lods
push
shrl
sbb
sti
cmp
dec
sbb
std
xchg
outsb
lret
xor
cmp
data16
mov
xchg
out
mov
mov
int3
cmp
cmp
das
mov
std
cld
inc
jns
add
fisubrl
add
bnd
leave
cmc
lret
mov
idivl
test
iret
inc
xor
out
adc
sub
push
jg
daa
vunpckhpd
loopne
out
jp
jge
outsb
es
jo
mov
sbbb
jns
gs
mov
hlt
xchg
shrb
mov
cmp
jnp
add
add
int
scas
rcll
out
dec
push
enter
pop
push
out
xor
aaa
inc
mov
lock
pop
and
mov
aas
inc
dec
int
nop
movsl
lret
cwtl
push
xchg
jge
scas
repnz
jg
out
aas
les
dec
dec
hlt
mov
xchg
insb
mov
pop
dec
jg
pop
add
jle
cmpsl
mov
orb
js
dec
stos
sub
fwait
testl
mov
jle
dec
inc
sub
jbe
dec
aaa
popf
jle
inc
fwait
dec
lock
sub
lret
incb
mov
sbb
xchg
inc
xchg
jle
cmp
fisubrl
inc
fiaddl
pop
add
jg
xchg
lods
xchg
mov
or
dec
fisubs
repz
and
scas
mov
sub
cltd
inc
loop
pop
sub
inc
movl
les
mov
mov
or
dec
pop
sbb
push
push
and
mov
shlb
mov
movsb
mov
int
lret
dec
dec
dec
jg
lods
pop
mov
xlat
leave
ljmp
mov
scas
cmc
ljmp
xchg
dec
dec
cli
decl
pop
xchg
cmc
jl
push
xor
scas
or
test
nop
mov
or
out
inc
inc
lcall
ss
daa
mov
push
adc
dec
jge
dec
cltd
pusha
ror
popf
fidivs
loope
sub
bound
fldcw
out
jae
data16
push
lahf
dec
dec
mov
mov
test
mov
rcl
sub
arpl
jmp
addr16
fisttpl
cmp
mov
xchg
lods
lret
cmp
xor
popf
jnp
dec
xor
fsubs
test
xlat
jb
inc
mov
mov
mov
cltd
dec
mov
rorb
ja
aas
push
xchg
inc
add
imul
xchg
dec
dec
lds
mov
cs
push
dec
xorb
jae
clc
outsl
add
ljmp
adcb
mov
mov
test
lods
dec
push
push
sbbb
cltd
mov
popf
jne
hlt
inc
shlb
jno
dec
mov
inc
pop
mov
add
inc
inc
jns
insb
stos
dec
sbb
mov
cli
inc
rclb
nop
sub
sub
in
insl
leave
jo
dec
cltd
jb
mov
mov
gs
stos
or
xor
lock
cli
push
dec
sub
push
repnz
popf
jp
add
imul
movsb
sub
ljmp
sub
sub
dec
es
mov
seta
push
sub
dec
aas
inc
mov
cmp
xorb
inc
mov
dec
sarb
xor
les
xor
dec
subb
jno
js
outsb
push
adc
outsl
dec
dec
icebp
pop
dec
cmp
es
test
cld
pushl
add
imul
mov
dec
and
jle
dec
aam
push
dec
dec
jmp
insb
adc
mov
hlt
xchg
xor
movsl
into
lret
sub
aam
es
mov
jmp
stos
add
dec
mov
cmp
dec
fcomp
notrack
sti
mov
mov
jle
bound
call
out
cmp
pusha
iret
cmp
es
divb
and
xchg
cmp
popa
dec
pop
lcall
lret
icebp
dec
mov
popf
mov
xchg
dec
out
push
pop
mul
inc
dec
cmp
xchg
sbb
arpl
pop
sbb
dec
dec
sub
mov
dec
out
insb
adc
xor
inc
imul
pop
or
dec
add
lret
pop
popa
xor
jae
ja
mov
testl
orb
push
or
cmp
test
cmpsb
adc
mov
adc
mov
in
inc
dec
xlat
cmp
idiv
jg
push
add
aas
lods
test
icebp
ret
gs
xchg
rol
mov
int
jg
xorl
stos
dec
jp
xor
inc
out
xor
cs
out
pop
xchg
inc
mov
fsubr
aas
pop
loope
shl
adc
out
and
dec
jl
hlt
leave
jno
xchg
xor
stos
mov
xor
je
xor
shll
daa
xor
mov
inc
push
test
push
fisubs
push
mov
add
test
dec
stos
cmpb
mov
out
xchg
adc
jle
aad
imul
fwait
stos
pop
fdivrs
jae
fisubs
fwait
xchg
pushf
jae
out
shll
xchg
pop
dec
xchg
cmp
xchg
into
push
sbb
dec
iret
cmpsl
cmp
pop
mov
rclb
cli
dec
in
test
inc
mov
mov
mov
dec
cs
jg
ficoms
mov
inc
jl
popf
into
adc
leave
or
xor
lret
lret
dec
mov
fwait
js
les
jnp
jae
lret
mov
dec
scas
shlb
xchg
dec
jge
repz
inc
dec
push
mov
mov
add
inc
xor
addr16
pop
add
imul
xor
cmp
mov
dec
in
pmuludq
outsb
dec
pop
add
out
sbb
xor
stc
lods
adc
dec
or
jb
jmp
cmpsl
xor
mov
push
imul
movsb
ret
jbe
addr16
lcall
rolb
fstpt
or
adc
xchg
ja
pop
mov
stc
mov
out
dec
imul
sahf
insl
dec
mov
andb
xor
ficomps
xchg
mov
sti
into
pushf
sbb
dec
sub
iret
and
out
inc
clc
test
pop
or
lea
dec
int
mov
push
jb
dec
jo
jno
or
hlt
es
ss
dec
cmp
and
push
sahf
inc
and
dec
test
push
mov
enter
xor
mov
repnz
out
popa
jo
jmp
out
out
cmp
lcall
or
cld
fnstsw
dec
fimuls
add
or
repz
dec
or
mov
popf
dec
mov
dec
xchg
cwtl
lea
dec
stos
mov
mov
loope
xchg
adc
mov
jnp
leave
inc
xchg
mov
aaa
icebp
cmc
pop
roll
loope
cs
inc
inc
push
in
cs
or
mov
jns
mov
sbb
pop
ja
jo
mov
dec
in
sbb
mov
mov
cmp
add
jb
jg
pop
scas
dec
jl
hlt
out
dec
popf
les
cs
jnp
inc
xor
cmp
gs
mov
leave
push
minps
jg
sub
mov
adc
movsl
icebp
mov
jle
jle
mov
inc
push
stc
or
ret
jg
push
imul
sub
xchg
xor
repnz
inc
add
in
stos
xchg
sbb
mov
push
cmp
shlb
dec
lahf
pushf
dec
aaa
lret
pop
push
dec
lahf
inc
pop
xchg
ds
jl
outsl
cwtl
adc
sub
iret
add
stos
outsb
aas
cs
call
setl
pusha
push
add
outsb
addr16
adc
scas
xor
mulb
add
scas
insl
sbb
xchg
cmpsl
rorb
leave
aas
or
fcmovne
jle
es
test
ja
je
scas
hlt
mov
or
mov
inc
jg
sub
mov
mov
mov
mov
in
add
adc
or
jne
icebp
jg
jnp
sub
ja
xor
mov
add
daa
xchg
das
dec
fistpll
int3
sbb
dec
cmp
mov
in
add
pop
sar
dec
cmp
das
shl
inc
add
inc
and
cmp
or
scas
xchg
inc
jmp
mov
lcall
sub
test
xlat
dec
icebp
and
inc
mov
xor
cmp
cmpsl
or
adc
inc
aam
push
movsb
pop
cltd
jne
xlat
cmp
les
cs
pop
xadd
jns
add
cmp
mov
les
mov
daa
icebp
cmp
std
mov
or
mov
sub
insl
lods
fstpl
dec
dec
pusha
fwait
ljmp
int
pop
leave
push
out
or
xchg
add
add
push
pushf
xchg
into
mov
ja
xor
gs
jmp
mov
inc
adc
adc
cs
mov
int3
pop
fisttps
dec
in
ss
mov
pop
xor
dec
dec
sbb
imul
cmp
dec
push
dec
cmp
fdivrl
lret
stos
sbb
dec
pop
push
jge
mov
movsl
dec
and
loopne
or
test
add
sbb
dec
adc
mov
dec
out
insb
dec
mov
jmp
in
jno
int3
dec
mov
inc
scas
jle
dec
dec
mov
ja
or
or
dec
mov
jbe
das
fldenv
fwait
dec
dec
test
arpl
outsb
xor
xchg
aad
add
jbe
mov
in
and
mov
jecxz
cli
xor
push
cmpsb
pop
sbb
pop
sub
dec
xchg
cwtl
ja
adc
add
cmp
fwait
jne
int3
pop
inc
stos
fdivrl
sarl
dec
mov
or
adc
dec
adc
and
xchg
mov
lea
dec
xchg
sahf
xor
dec
mov
test
mov
sbb
fisubrs
dec
ss
sbb
cmpsb
shl
pop
ret
dec
push
icebp
mov
adc
xor
pushl
and
fdivl
mov
inc
cmp
inc
push
cld
or
push
insb
sub
mov
xor
mov
or
fnstenv
lret
int3
dec
mov
mov
scas
sbb
iret
or
in
add
leave
mov
cmpsb
and
mov
xchg
xor
aam
dec
popa
repz
jl
mov
inc
das
outsl
pop
mov
ss
xchg
xchg
mov
pop
aam
rorb
lret
imul
sbb
push
scas
sub
mov
nop
mov
lock
iret
lret
cmc
rorb
jnp
fucomp
xchg
popa
inc
in
pop
les
dec
push
or
gs
add
fcmovnu
mov
dec
lds
fadd
fs
pop
inc
rcrb
std
or
pop
mov
lcall
and
mov
xor
add
mov
xor
scas
mov
adc
xchg
inc
push
adc
mov
les
dec
cmp
scas
push
mov
mov
std
je
inc
ret
cmp
outsl
cli
xchg
dec
negl
popa
rorb
lret
stos
mov
jbe
dec
push
sbb
imul
popf
dec
mov
xor
dec
mov
aas
sub
sti
dec
dec
icebp
fnstsw
shll
dec
or
jge
insl
jmp
adc
dec
add
mov
lret
jnp
test
xor
inc
insb
jge
xchg
dec
repnz
sbb
dec
outsl
sti
cmp
outsb
or
outsb
out
imul
js
push
ret
lock
push
jle
sbb
and
dec
jge
movsb
jp
fcmovnb
inc
xchg
add
cwtl
inc
xchg
lahf
scas
scas
sub
nop
pushf
mov
mov
cli
ret
sub
gs
dec
aam
dec
push
add
jae
fucomi
clc
mov
inc
jg
sub
in
in
pop
add
out
or
mov
daa
and
cmp
rcr
inc
or
xor
movsb
adc
mov
pusha
sarb
test
push
int
jg
stos
mov
mov
mov
xor
in
test
setge
xchg
sbb
pop
inc
pop
jae,pt
bound
in
push
dec
mov
insl
push
mov
dec
lahf
pop
imul
sub
dec
dec
arpl
imul
aad
sub
movsl
push
mov
test
cmp
addr16
xchg
xor
vmovaps
mov
pop
ds
mov
dec
jo
leave
xor
xor
cld
enter
sub
sub
test
sub
movsl
dec
cmpsl
mov
in
mov
mov
pushf
lods
addr16
imul
dec
outsb
test
arpl
lea
out
dec
nop
sbb
push
lock
inc
dec
jae
cmpsl
mov
orl
repnz
adc
jp
aad
in
jecxz
icebp
rorl
xor
cmp
mov
arpl
insb
inc
jmp
sub
or
adc
daa
test
and
jge
xor
stos
js
addr16
push
cmp
aam
and
imul
test
rcrl
jge
iret
pop
jns
xchg
xchg
push
sbb
adc
xchg
leave
rol
inc
dec
push
mov
addr16
idivl
hlt
test
mov
dec
rcrb
addr16
dec
je
fbld
inc
push
aad
dec
push
pushf
sbb
dec
das
jb
cmp
xchg
dec
loop
shlb
dec
icebp
popa
or
sbb
mov
mov
dec
sbb
scas
loop
clc
out
xchg
cmpl
mov
jmp
mov
mov
mov
idivb
and
add
icebp
mov
imul
mov
mov
xchg
mov
into
lea
cmp
fwait
vmread
popf
jg
mov
add
inc
stos
addl
mov
popa
or
xchg
flds
shll
dec
cmc
cltd
addr16
sub
inc
add
aam
pop
jecxz
sub
mov
ret
dec
lods
sub
inc
insb
rcrl
add
bound
add
enter
jnp
xchg
sub
xchg
das
and
fmull
ret
mov
sub
jl
out
ret
fwait
ljmp
dec
lea
stos
jle
sahf
xor
dec
push
loop
push
fldenv
sbb
add
mov
sbb
in
inc
push
push
imul
mov
and
mov
popf
movsb
dec
mov
int
imul
lds
push
stc
mov
sub
out
filds
xor
dec
test
push
mov
push
add
leave
outsb
cld
dec
xchg
jnp
call
dec
pusha
outsl
mov
cmpsb
and
adc
fidivrl
repz
outsb
mov
pop
insl
dec
cmp
shll
dec
lret
sub
repz
cmp
and
jbe
in
dec
fcmove
mov
pushf
adc
inc
jb
dec
out
mov
dec
sbb
cmp
cld
roll
dec
jg
xor
mov
dec
push
negl
jle
aas
pop
popa
into
aad
mov
mov
cmpsb
pop
ss
adc
shl
dec
push
push
into
and
push
jmp
mov
pop
push
dec
lock
and
mov
push
mov
xor
jg
and
adc
and
aaa
mov
and
mov
inc
jge
movsl
xor
sbb
cmp
mov
repnz
dec
jl
xlat
xchg
subb
inc
push
or
xchg
mov
dec
test
mov
inc
hlt
and
dec
fs
jmp
push
pushf
outsl
dec
scas
lahf
xlat
and
xchg
jno
dec
dec
mov
cmp
dec
add
or
push
add
mov
mov
lret
mov
dec
mov
fxtract
pop
mov
xor
into
mov
int
mov
cmp
std
dec
xchg
cmp
cmp
xchg
cmpsb
jns
push
jo
push
scas
lods
push
js
fadds
jbe
dec
les
clc
mov
dec
push
sarl
stos
add
jp
dec
mov
ljmp
and
mov
mov
js
mov
aaa
cmp
xchg
sub
ds
ror
in
dec
xchg
out
stc
and
sub
cmpsl
lea
mov
rorl
repz
dec
cli
jmp
fimuls
jl
cmpl
mov
dec
data16
or
test
out
popa
daa
push
mov
dec
sub
lret
or
adc
and
sahf
push
frndint
xlat
scas
inc
dec
push
inc
jno
lock
dec
mov
pop
xchg
mov
mov
xchg
jnp
fldt
call
pop
dec
aam
push
or
mov
and
idiv
mov
dec
pop
push
mov
or
sub
cmp
dec
ljmp
mov
xchg
popa
cs
cs
cli
mull
pop
jecxz
sarl
dec
shl
dec
fidivrs
inc
inc
mov
xchg
sbb
mov
cmp
cmc
pop
dec
adc
sbb
in
insl
mov
jmp
cmp
lret
adcb
jmp
cltd
daa
add
inc
in
sub
mov
adc
mov
cmc
jnp
xor
push
sbb
aaa
in
aad
cltd
stos
dec
out
push
dec
in
jg
adc
sub
pop
roll
mov
ror
std
dec
popa
lret
iret
cmp
movsl
into
rolb
mov
lcall
adc
mov
mov
jl,pn
xchg
sub
jle
cmp
daa
sub
jns
pusha
sub
sar
test
aaa
pop
cmp
add
push
cmp
push
cmp
push
mov
push
pusha
scas
mov
mov
into
jle
push
scas
ret
dec
cltd
dec
aaa
jle
mov
dec
imul
push
cmp
jmp
aad
mov
imul
inc
lea
out
add
dec
push
xchg
decb
push
push
pop
jbe
add
inc
jmp
iret
sti
add
insl
and
test
bnd
xchg
or
pop
jecxz
dec
xlat
cli
aam
cmp
dec
mov
xor
xor
shrd
das
ja
inc
pop
dec
and
ss
jl
lea
fwait
sub
sub
testb
shl
push
mov
fwait
iret
push
fisttpl
out
cwtl
subl
outsl
cmpb
mov
mov
mov
sub
mov
test
insl
and
dec
mov
into
insb
fisttpl
bnd
sub
add
pop
dec
mov
gs
mov
xor
sti
into
movsb
mov
in
imul
push
dec
test
dec
mov
adc
pop
push
ja
inc
push
mov
mov
inc
faddl
test
fimuls
out
mov
sbb
nop
xlat
xor
inc
jae
popa
pop
stos
mov
mov
iret
inc
daa
push
push
dec
outsl
adc
pop
inc
iret
or
cli
dec
inc
mov
rcrl
dec
mov
dec
bound
cld
mov
push
daa
dec
repz
push
jnp
jl
jo
pop
xor
mov
addb
ror
dec
fwait
in
xor
out
aas
negb
add
push
outsl
popa
aam
push
enter
mov
or
rolb
cwtl
xor
sub
add
insb
xor
in
lods
js
nop
sub
push
insb
stos
add
bound
dec
clc
pop
mov
in
inc
incl
dec
push
push
xlat
dec
mov
jp
ljmp
jle
pop
hlt
dec
loope
sub
dec
fnstcw
dec
xor
stos
sub
jecxz
pusha
call
xor
out
push
stc
mov
jb
xchg
lods
xor
frstor
mov
add
push
dec
pop
add
lcall
sub
dec
ja
adc
push
incl
dec
rorl
ss
xchg
sub
dec
push
hlt
out
in
aam
push
add
dec
and
in
ljmp
cmp
xor
jle
cmpb
jnp
lret
adc
testb
inc
cmpsb
sub
and
dec
je
dec
push
xor
xchg
fdivrp
and
and
lret
fimull
jl
sub
and
push
pop
lahf
inc
or
bound
xchg
jno
dec
icebp
push
mov
js
movsl
mov
xchg
out
push
sub
dec
je
sti
jl
insl
clc
pop
loope
cmp
in
inc
xchg
dec
mov
jnp
fcompl
pop
mov
push
pop
test
fcoml
iret
popa
and
and
sub
lret
cmp
push
iret
movsb
fbstp
cmp
imul
pusha
push
gs
xchg
sahf
add
xchg
jns
cmp
add
movsb
fimuls
mov
scas
jne
std
pop
jle
repz
dec
in
loopne
jge
xlat
scas
les
out
xchg
mov
add
dec
push
push
shl
rcrl
lods
pop
or
xor
out
pop
add
pushw
inc
xchg
pusha
pop
sbb
fsubrs
lods
pop
and
mov
loope
js
inc
fdivs
rorb
in
sub
cmp
dec
xlat
mov
xor
or
sar
or
mov
fwait
adc
inc
scas
outsl
mov
mov
add
adc
cmp
cmpsl
sbb
mov
and
add
push
repz
dec
fsubrl
scas
fiadds
and
jbe
dec
mov
jp
ret
test
xchg
ret
cmpsl
or
and
dec
ljmp
imul
les
dec
cli
sub
mov
push
lcall
and
in
or
add
insb
fimull
repz
stc
lea
insl
jbe
jmp
cltd
sub
adc
icebp
xchg
fldenv
mov
mov
data16
sub
jb
mov
fidivrl
inc
call
mov
imul
fidivrs
pop
dec
dec
jl
roll
shl
jo
iret
das
sbb
int3
enter
jle
jecxz
adc
cmp
jg
dec
add
into
cmp
test
rcrl
ret
or
or
inc
sbb
mov
mov
pop
out
dec
xor
lea
sahf
dec
psubsw
data16
xor
inc
js
pushl
aas
push
push
dec
test
push
mov
je
inc
push
dec
insl
adc
in
hlt
mov
sbb
sbb
sub
inc
int
adcl
es
push
mov
insl
fiadds
xchg
lret
or
cltd
int3
fisubs
adc
dec
popf
fwait
scas
adc
cs
fnclex
cmp
dec
jge
or
push
fdiv
iret
lret
cmp
les
sub
mov
cmp
mov
ds
sub
aaa
mov
xchg
jl
dec
jle
sti
push
bound
add
cmp
xchg
or
push
inc
cltd
es
in
jmp
or
push
fimull
je
jl
and
outsl
inc
jnp
aas
repnz
jmp
arpl
movsl
mov
mov
add
jle
and
jmp
sti
int3
adc
cmc
sbbb
les
dec
cwtl
pushf
outsl
lods
jo
fs
pop
dec
std
in
ret
ret
prefetcht2
lods
int
pop
mov
bound
dec
add
sub
jg
inc
popa
adc
in
orb
mov
icebp
inc
movsl
jle
adc
pop
aaa
gs
dec
xor
mov
into
mov
pusha
dec
pop
adc
add
dec
out
imul
hlt
insb
xor
or
and
jae
les
aam
js
and
add
sbb
outsl
mov
adc
push
iret
ret
lods
or
mov
aas
lcall
cs
ljmp
sahf
int3
mov
pop
fwait
stos
sbb
add
int
in
cmp
sub
popa
stc
ficoml
aas
or
aam
stos
push
xchg
dec
and
cmp
push
add
scas
inc
lret
inc
push
bound
imul
test
ss
sahf
add
mov
mov
xchg
jge
dec
ss
icebp
mov
shl
dec
push
xchg
jo
mov
aam
lods
lahf
xor
push
jnp
xlat
pop
add
in
leave
mov
into
cmp
subb
mov
pop
mov
xlat
xchg
lret
dec
jb
daa
insl
dec
sub
sbb
ljmp
cmp
jmp
pop
jne
xlat
push
icebp
push
imul
jl
bound
and
cmp
push
push
movaps
lret
sub
loope
adc
mov
cmp
or
jge
jecxz
push
xchg
mov
jge
inc
xlat
inc
fs
and
push
jno
pop
dec
fnstsw
das
mov
aam
push
xchg
lahf
xor
ja
xchg
cmp
cmp
fbld
shl
jg
jmp
popl
adc
adc
push
and
jle
shlb
xor
into
mov
cmp
jo
outsl
cmp
dec
std
out
mov
dec
inc
call
or
inc
int3
mov
into
pop
jae
cmpsb
aad
cmpsl
dec
iret
sub
sbb
rorb
loopne
je
pusha
fisubs
dec
movsb
cmp
into
pop
mov
push
pushf
imul
hlt
stc
fiadds
dec
ret
stos
cmp
jnp
popa
or
dec
cmp
and
push
dec
dec
outsl
dec
pop
jle
nop
and
fisttpl
hlt
xor
push
fnstcw
mov
mov
ret
mov
pop
sub
loopne
xor
ljmp
insl
in
cwtl
sub
jecxz
dec
and
push
mov
int
or
aad
pop
push
cmp
out
std
inc
dec
mov
push
or
movsb
cmp
dec
mov
scas
lahf
fimull
sbb
mov
dec
mov
add
in
pop
jae
dec
fmuls
dec
rol
add
fwait
dec
dec
jbe
ds
xorb
dec
loopne
aas
mov
divl
pop
pop
add
js
bound
cmc
jo
sbbb
movsb
xor
dec
push
jmp
mov
dec
inc
xor
repz
ret
mov
shrb
add
pop
dec
pop
pusha
mov
lret
mov
into
push
pushf
xchg
das
jg
mov
mov
jle
push
shl
xchg
mov
cmp
adc
xchg
sub
ss
fstpl
ljmp
call
cmp
push
mov
xor
hlt
in
sub
sub
cwtl
fsubrl
adc
rorb
xor
mov
xor
ret
cltd
cmp
jbe
stos
xchg
ja
dec
sub
xchg
decb
inc
xor
mov
pusha
inc
jl
shrb
movsl
mov
mov
ljmp
inc
jno
jp
xchg
sti
in
cli
mov
cmp
fwait
xchg
call
mov
fwait
jle
enter
push
fistps
daa
inc
mov
loop
mov
rcr
mov
inc
cmc
push
jl
aaa
incb
sub
loop
push
insl
xor
int3
add
outsl
add
pop
sahf
push
sub
jo
es
jl
ret
pop
ror
loop
jle
aad
mov
jo
and
sub
jp
pop
movsb
shl
fsts
int3
lahf
lds
repz
outsl
dec
cmp
add
xchg
popa
sub
and
push
jmp
dec
sti
mov
loopne
aas
xor
adc
and
push
cmp
enter
or
sbb
es
scas
dec
inc
xchg
rcll
jg
out
dec
je
sub
dec
fistpl
stos
loopne
dec
inc
shll
add
cmp
hlt
js
dec
sbb
xchg
dec
jg
mov
dec
mov
outsl
divb
loope
adc
int
xor
dec
xor
das
jl
xor
mov
arpl
pop
push
jle
dec
xchg
jno,pn
push
pop
sub
js
push
in
xlat
dec
cmpl
dec
std
test
popl
adc
dec
cmp
cmp
dec
mov
and
cwtl
sahf
test
sbb
sbb
je
stos
stc
dec
rcll
movb
sahf
std
dec
dec
dec
decb
fmull
dec
jl
ds
xchg
arpl
xlat
dec
sub
sub
adc
pusha
leave
adc
rcr
fsubrp
ficomps
frstor
out
jmp
push
test
dec
add
mov
dec
int
jbe
mov
jl
enter
roll
push
insl
mov
fdivrs
sahf
inc
shrb
clc
inc
scas
sub
repnz
fildll
cmp
pop
dec
icebp
iret
mov
loop
mov
loopne
add
insb
xchg
jns
int
shrb
imul
and
fsts
out
cmc
ljmp
xchg
mov
dec
xchg
cwtl
cltd
cmp
mov
mov
inc
stos
push
mov
lods
dec
shll
push
inc
xchg
adc
in
cs
pop
sbbl
call
out
dec
and
pushf
dec
cmpsl
rcll
cmp
fbld
cmp
sub
outsb
mov
jg
jle
fbstp
fisubl
jg
xchg
popf
push
jmp
leave
out
pop
cmp
mov
std
sub
sub
js
dec
mov
stos
inc
jmp
shr
iret
insb
sub
jae
ja
cs
pushf
aam
mov
dec
mov
pop
out
sbb
or
enter
lock
jbe
aad
ja
movsb
ffree
sub
sarb
jle
jno
dec
cmp
in
xchg
cmp
push
and
scas
add
push
imul
out
dec
test
push
imul
cmp
nop
cmp
pop
or
repnz
cld
daa
mov
pop
ja
or
dec
outsb
popf
aad
sub
cmc
lcall
push
push
sub
ja
cwtl
les
cld
cld
pushf
or
ficoms
out
mov
mov
jg
mov
test
dec
bound
sbb
inc
pop
jne
icebp
sub
inc
std
test
push
in
add
loopne
fs
enter
inc
jns
cs
movsl
pop
int3
cmp
jle
ud2
das
and
lods
dec
loopne
jno
sbb
jmp
scas
insl
jae
jb
dec
clc
xchg
pusha
rcrb
repz
rorb
xor
mulb
scas
pusha
dec
fmuls
int3
sub
xor
hlt
adc
clc
mov
xor
dec
jns
dec
dec
loopne
mov
or
arpl
dec
mov
test
std
dec
stc
mov
bound
inc
mov
xor
add
and
ret
iret
neg
cmp
pop
xor
or
stos
xchg
mov
mov
xor
lcall
scas
cld
aas
test
pop
fdiv
leave
cs
outsb
mov
iret
inc
xchg
sti
mov
orl
push
mov
icebp
mov
test
sti
repnz
push
mov
pop
dec
xchg
xchg
xor
add
dec
cmp
or
dec
mov
push
ret
mov
sub
popf
adc
cmp
add
out
mov
xor
pop
pop
psubsw
ret
dec
mull
stos
dec
push
lods
pop
inc
outsl
mov
sub
fisubrs
inc
sub
fadds
dec
dec
lret
sbb
jge
jp
xor
test
mov
pop
inc
xchg
xor
dec
imul
pop
or
jmp
add
nop
pop
std
subl
or
push
das
mov
xchg
adc
into
push
cmp
jge
sub
out
outsl
adc
enter
jb
jg,pt
cmp
aam
aaa
sbb
mov
xor
roll
inc
xor
lods
mov
or
fldt
arpl
push
xchg
dec
xchg
adc
lret
fcmovnu
inc
std
inc
push
mov
sub
fcoml
lahf
xchg
aam
js
pop
pop
repz
and
inc
in
leave
sbb
jno
mov
aas
inc
dec
cs
aam
cli
and
jp
addl
cmp
rclb
jmp
lcall
enter
and
pop
jne
daa
out
push
aam
push
lret
pusha
cmp
cmp
push
das
or
int3
sarb
out
xor
push
dec
fldenv
xchg
fldl
adc
pushf
dec
or
push
jne
rcll
dec
dec
lods
add
jb
mov
add
rcrb
push
dec
push
add
cmp
andl
test
push
inc
pop
shll
dec
pop
jns
outsl
adc
loope
push
dec
fidivs
ds
dec
out
shll
ret
pop
mov
rolb
decl
fdivr
xchg
mov
iret
jns
pop
mov
push
pop
inc
int3
decb
cmp
pop
cmp
adc
jne
lea
xchg
rcr
sub
xchg
shll
dec
repz
sbb
dec
lret
mov
adc
data16
int
or
lahf
or
sub
pop
filds
popa
dec
adc
stc
dec
mov
inc
iret
cmp
xchg
sub
jl
lods
bound
jnp
jg
pop
dec
dec
xchg
rol
xchg
xchg
push
xchg
push
loop
xlat
dec
mov
adc
dec
iret
imul
dec
push
xchg
hlt
imul
iret
mov
xor
xchg
mov
mov
dec
pusha
push
lods
fmuls
dec
sub
xchg
jge
push
jle
movsb
jl
inc
outsb
mov
cmp
bound
filds
outsb
mov
aas
push
popf
dec
push
stc
mov
dec
pop
sub
adc
hlt
mov
inc
sub
loop
aad
dec
rcr
ja
es
jp,pn
lret
idiv
fs
mov
mov
and
icebp
pusha
xor
pop
bndldx
in
leave
add
mov
in
mov
inc
es
out
cltd
lea
cmp
inc
sahf
test
ret
add
mov
jmp
inc
ret
ret
sti
mov
add
dec
test
cmp
mov
or
out
fsubs
jo
xor
int3
lds
stos
fmuls
dec
jle
mov
outsb
cmp
mov
mov
cmpsl
icebp
es
out
jl
sbb
sbb
test
jne
push
mov
cmp
xor
dec
adc
movsl
pop
mov
rclb
push
mov
jo
js
add
pop
fcoms
sti
pop
dec
sarb
add
inc
call
int
dec
and
dec
jne
cmp
std
stos
xchg
dec
scas
jle
adc
mov
icebp
lret
repz
xor
cmp
pop
dec
jg
xor
xor
test
push
sub
inc
aas
xchg
xchg
ror
or
sub
add
mov
lahf
adc
jle
push
ljmp
mov
sbb
pop
iret
inc
jl
fisttpll
stos
test
xor
or
mov
int
fldenv
scas
aas
jle
daa
adc
cltd
iret
jp
add
repz
jnp
pop
xor
movb
scas
addl
mov
dec
and
fnstsw
xchg
dec
pop
inc
mov
xlat
popa
dec
xor
mov
xor
push
cmp
dec
test
mov
sub
jbe
adc
xchg
sub
sbbb
repnz
loope
mov
in
insl
dec
dec
cmpb
xor
arpl
bound
leave
ss
int3
xor
insl
mov
aas
mov
lea
adc
fistl
jbe
aam
pop
das
insl
pusha
dec
cmp
xchg
mov
repz
sub
js
xchg
fucomip
repz
fsts
cmp
insl
push
dec
fimull
xor
addr16
pop
cmpsb
dec
mov
shrb
xor
sub
int3
mov
out
dec
aam
imul
add
xchg
inc
add
repnz
pop
dec
dec
mov
rolb
loopne
xor
pop
dec
adc
or
fldt
dec
jge
std
dec
in
fisubl
or
divl
dec
and
xor
pop
loopne
dec
mov
ficoms
imul
inc
push
jno
xor
hlt
sbb
ds
dec
js
push
mov
dec
dec
jmp
and
cmpsb
hlt
les
pop
jecxz
inc
std
sub
pop
mov
xchg
mov
aas
xlat
jl
inc
mov
out
addr16
insl
or
ljmp
fisttpl
mov
xor
fiaddl
jge
add
mov
enter
mov
cli
dec
xor
cs
pop
jecxz
into
xor
mov
pop
loop
ret
loope
test
clc
imul
sti
cwtl
cmpsb
push
das
dec
sbb
out
dec
movsb
loop
cmpsl
xchg
std
push
sub
nop
mov
sbb
mov
insl
icebp
dec
xchg
leave
sbbb
mov
into
clc
sbb
xchg
dec
mov
jge
cltd
bound
dec
lret
insl
cmp
jnp
push
shrl
adc
cmp
pop
rorb
adc
lret
lods
xchg
push
mov
mov
packuswb
and
jl
stc
push
cpuid
out
shrl
pushf
add
popf
push
dec
pop
mov
xchg
lods
mov
das
sbb
bound
out
inc
shlb
rolb
dec
stos
adc
ja
pushf
fwait
ljmp
inc
mov
cwtl
jle
inc
cs
pusha
negb
sbbb
jbe
fisubs
dec
cld
das
mov
insb
inc
punpcklwd
adc
cmp
dec
ljmp
lahf
pop
loopne
shlb
sub
xor
sub
sub
cld
dec
repz
pop
movsl
fisubs
les
insb
jle
fstpt
mov
cmp
xor
and
xor
iret
push
outsl
mov
mov
lds
xchg
add
jmp
mov
mov
icebp
adc
cmpsl
dec
push
sbbl
and
cmpsl
push
fiadds
lock
xchg
stos
mov
iret
push
lods
mov
mov
movsl
test
sub
out
shl
and
aas
cmpsb
cld
lock
mov
shlb
iret
aaa
call
daa
sarb
jno
xchg
add
and
or
jl
cmpsb
mov
stos
mov
add
jno
xchg
cmp
pop
jl
insl
push
jg
pop
pusha
sbb
sub
les
xor
cwtl
adc
test
or
in
add
dec
jl
packssdw
rclb
je
dec
jl
mov
mov
mov
test
mov
cmovg
rcr
je
mov
dec
sbb
xor
mov
popa
push
jne
push
adc
add
cmp
mov
subl
pop
nop
push
push
xor
jbe
adc
xor
jecxz
hlt
aad
mov
orb
dec
mov
sbb
xchg
dec
cwtl
or
sub
dec
or
xlat
xor
aam
js
decb
mov
dec
adc
pop
movsl
lcall
imul
push
out
or
loop
jle
push
jns
fistl
mov
cmpsb
dec
mov
mov
lds
xchg
test
push
dec
jl
hlt
in
cmp
mov
sub
adc
dec
sar
mov
mov
loop
and
scas
fldcw
add
pop
push
jb
adc
dec
repz
push
dec
jmp
nop
push
sahf
mov
ja
mov
mov
loop
dec
jecxz
and
pop
add
dec
popa
sbb
push
xchg
lock
mov
push
push
add
mov
inc
cmp
stos
pop
dec
add
iret
repz
sub
shlb
scas
cmp
repz
enter
adc
and
inc
and
sbb
test
cmp
lret
hlt
mov
enter
push
push
push
mov
dec
pop
pop
mov
push
sub
int3
jle,pn
scas
jg
icebp
mov
and
xor
sar
inc
and
push
jbe
pop
mov
xor
arpl
dec
loopne
cmp
popa
dec
push
pop
cmpsb
inc
push
ret
xor
xchg
clc
pushf
gs
adc
sti
sbb
adc
cmpsl
fiaddl
inc
pop
loop
stos
lds
pop
mov
jmp
das
xor
cmp
pop
into
pop
cs
lahf
test
clc
test
cmc
mov
or
or
jo
fs
subb
dec
mov
mov
jne
pop
in
sub
popa
popf
sub
out
test
pop
mov
mov
mov
nop
icebp
xor
add
mov
and
inc
inc
loope
mov
jb
adc
dec
jecxz
pop
ret
test
fisubs
icebp
decb
mov
and
jbe
xor
movsb
push
mov
outsb
jg
xor
mov
push
cmp
push
repz
insb
je
xlat
and
push
mov
ljmp
xor
imul
or
xchg
and
and
adc
imul
push
pop
iret
test
dec
adc
xchg
jmp
sbb
add
add
inc
fimull
mov
lock
push
iret
bts
daa
push
hlt
aad
sbbb
pop
dec
push
fdivrl
xor
add
jns
add
pop
jle
xchg
pop
pusha
lods
pop
jg
mov
in
pop
cmp
xchg
iret
aas
cs
push
mov
jle
lods
mov
pop
xchg
jo
mov
test
xor
xchg
pop
and
jnp
sarl
inc
jl
jp
dec
adc
adc
jle
int3
aas
movsl
pop
fbstp
lods
outsl
sbb
popf
mov
cmp
sti
shrb
rclb
nop
mov
loop
sbb
pop
mov
lea
sub
dec
cmc
jg
bound
cmp
ss
dec
scas
addb
dec
repz
cld
adc
xchg
sarl
dec
mov
loopne
fs
pop
out
rcll
push
xchg
push
jecxz
dec
sahf
xor
test
xor
inc
sbb
add
jae
std
pop
pop
mov
xor
iret
in
sub
or
inc
icebp
adc
rcl
sub
xchg
decl
mov
mov
dec
je
roll
loop
fldt
rorl
and
dec
jge
insl
sub
cmp
sub
dec
arpl
test
inc
dec
pop
mov
rorb
repnz
test
sbb
cmpsb
outsb
jbe
inc
xchg
dec
arpl
rorb
clc
mov
es
sbb
int
xor
cmpsb
mov
call
ss
dec
jmp
nop
inc
scas
inc
in
adc
pop
mov
mov
lods
arpl
cmp
inc
cmc
cmp
in
xor
dec
adc
call
into
lea
cwtl
stos
dec
pop
fists
sbb
pop
jp
dec
xchg
push
cltd
or
fdivrl
dec
ja
cmp
je
jmp
adc
or
dec
dec
ret
in
dec
adc
xchg
cmpsl
fadds
or
arpl
add
mov
and
dec
jle
mov
sub
clc
cli
mov
lods
inc
icebp
cs
movsl
inc
xchg
sbb
lret
add
and
movsb
xchg
jbe
push
lcall
jl
push
adc
cmpsl
divl
push
mov
fs
or
frstor
in
fmuls
adc
add
jbe
mov
pushf
mov
jge
stos
ret
lcall
enter
loope
pop
dec
jnp
outsb
rcrl
mov
cmp
xchg
dec
push
and
inc
xchg
aam
inc
scas
and
pop
outsb
sarl
push
lahf
push
fidivs
lret
fcmovnu
in
or
sbb
xchg
sbb
lea
lret
aam
sub
cltd
insl
mov
jle
mov
fimuls
shr
pusha
jmp
stc
sahf
mov
scas
into
cmp
faddl
aam
xchg
mov
add
pop
pusha
fwait
inc
and
das
bnd
xchg
jle
dec
push
xor
mov
ficompl
xchg
sbb
jle
les
fidivl
adc
push
into
add
inc
adc
sbb
cmp
jmp
cmp
pmulhw
fwait
push
sub
ret
inc
cmp
fnstcw
adc
mov
nop
sub
cld
mov
push
ds
mov
mov
jle
inc
fiaddl
pop
mov
or
jle
dec
add
and
inc
mov
dec
adc
cmp
and
stc
add
lret
jb
xor
les
lcall
jl
imul
pop
dec
jg,pn
fcompl
fnstsw
push
pusha
xchg
sub
push
in
push
pop
test
fsubs
sbb
ficoml
scas
sub
push
fdiv
sbb
imul
sbb
push
in
pop
adc
mov
adc
dec
cs
inc
xor
nop
sub
pop
mov
icebp
sbb
fisttpll
pop
or
cmp
sarl
pop
mov
lods
jp
shll
jne
mov
fadd
leave
mov
popa
arpl
xchg
jno
pop
jnp
jo
mov
loop
and
iret
mov
rcl
cmc
add
shrb
jle
cmp
and
setge
mov
sub
xchg
dec
lock
or
jl
jmp
repnz
xor
jns
in
lret
scas
jle
push
jnp
cld
in
push
dec
dec
movsb
loope
daa
or
test
sub
pop
adc
add
xchg
push
inc
lods
clc
xchg
pop
mov
outsb
dec
pop
mov
xchg
push
stos
dec
sarb
ret
dec
sub
push
mov
test
push
aas
add
dec
mov
pusha
and
outsl
sub
add
pop
cmpsb
dec
mov
xchg
ret
aam
dec
mov
mov
dec
mov
dec
adc
push
inc
leave
pop
fs
rcrb
jbe
xchg
lahf
aaa
dec
mov
fmul
ja
je
push
bound
xchg
ds
push
iret
nop
pop
lods
dec
insl
mov
mov
dec
mov
cwtl
mov
jle
cltd
mov
call
sub
and
js
cmp
mov
cmp
loopne
imul
pop
push
clc
dec
and
das
dec
and
repnz
cld
es
lret
mov
jo
pop
call
sbbb
sbb
add
add
push
dec
shll
jns
inc
dec
test
push
dec
ret
jnp
mov
in
lcall
mov
andl
repz
or
inc
push
mov
or
push
dec
fucom
jge
jmp
shlb
rcrl
xor
sti
push
pop
cs
mov
movsb
mov
out
lods
dec
adc
ret
dec
lret
pop
mov
dec
mov
cli
dec
bound
inc
mov
dec
or
add
push
jp
xchg
xchg
mov
lret
cs
dec
inc
dec
out
inc
dec
xor
dec
repz
jb
push
push
repz
iret
sub
fists
push
data16
mov
jle
sbb
in
dec
dec
xchg
imul
mov
pop
out
nop
daa
jl
xchg
movsl
cmpsl
and
repz
mov
xchg
ljmp
mov
cmpsl
stc
out
xor
cmpsb
icebp
daa
xor
xchg
fucom
inc
or
dec
cmp
or
push
dec
ja
xor
sbb
inc
dec
vmwrite
jg
and
and
mov
push
inc
pop
mov
int
and
mov
dec
jns
pop
cmp
loope
iret
and
sbb
push
pop
int
adc
daa
lret
scas
mov
jle
mov
inc
cli
mov
xor
sti
jne
xor
out
mov
xor
add
cmp
pop
fucomip
in
lahf
jg,pt
dec
dec
aam
dec
div
sub
push
pop
cs
repz
push
dec
fnop
inc
cwtl
xchg
into
xor
or
fistps
stos
fldcw
cmp
dec
mov
mov
sub
adc
dec
shrb
pop
and
adc
lock
adc
push
push
sub
ds
inc
jg
int
mov
insl
cmp
imul
icebp
jl
fimull
sub
jge
cmp
jnp
and
dec
outsl
push
mov
mov
lods
mov
jp
ret
jne
cmp
adc
cmp
dec
jmp
addr16
sbb
jb
dec
test
ret
clc
jl
mov
mov
sbb
bound
adc
dec
dec
jge
cmpsl
aaa
inc
xchg
push
and
and
movsb
sbb
mov
mov
xchg
and
dec
jl
daa
pop
dec
mov
inc
sub
or
dec
shrl
dec
jbe
and
ret
mov
mov
sbb
push
cmp
dec
or
xor
adc
sbb
fistl
fstl
and
cmp
mov
loope
sub
outsb
mov
adc
mov
dec
outsb
std
or
loop
dec
push
or
push
shr
in
mov
nop
mov
in
out
fisubrs
or
dec
in
stc
lahf
out
pushl
inc
dec
mov
sbb
add
jne
dec
cli
push
test
pushf
jle
xchg
stos
mov
push
dec
js
lods
movsl
push
cmp
sbb
inc
clc
int
mov
fisttps
imul
xchg
sub
push
hlt
pop
std
repz
in
mov
mov
js
push
sub
dec
in
das
ds
dec
movsb
dec
stc
mov
or
outsl
mov
push
inc
dec
push
inc
outsb
lods
popf
dec
out
jae
pop
sub
mov
bound
stc
cmpsl
fildl
or
push
into
mov
inc
clc
inc
cmpb
repz
mov
or
mov
iret
jmp
mov
rcll
sub
aad
test
lea
int
cmp
fidivs
sysret
lret
dec
mov
lcall
movsb
cld
fbld
fadds
xchg
mov
jne
pop
ja
dec
or
cmp
lret
fildl
jg
inc
in
mov
test
in
push
sub
push
xchg
jno
and
into
fcomi
jle
xor
mov
inc
xor
xor
cvtps2pd
push
adc
cmp
xchg
mov
and
cltd
cmp
mov
es
or
mull
arpl
pushf
push
incl
pop
push
dec
mov
mov
inc
push
ret
inc
dec
xchg
mov
in
dec
mov
cmp
bound
out
push
lahf
dec
fcmovu
jae
mov
loope
dec
push
jb
jo
test
dec
arpl
fidivl
xor
or
cmp
cwtl
rcrb
dec
ficoml
jb
loope
pop
dec
lods
popa
fimuls
push
jle
xor
icebp
movsb
repz
mov
lock
jo
into
jmp
dec
pop
mov
adc
rcrb
imul
push
add
cmp
sbb
lret
dec
xchg
fidivl
shl
xor
movnti
xlat
addr16
dec
sub
push
orl
cmp
dec
add
mov
mov
sbbb
dec
jp
jne
cmp
inc
jmp
dec
out
and
pop
jno
xlat
add
into
clc
shl
pop
fisttpl
shrb
xor
pop
dec
nop
cld
sbb
adc
les
fcmove
cltd
pop
dec
xor
call
push
es
mov
loope
xchg
jns
test
dec
roll
fnsave
xlat
push
dec
mov
test
jg
mov
push
cmc
add
xchg
xor
push
dec
bound
pop
pushf
cmpsb
je
jo
jne
int3
dec
cli
idivb
inc
sub
xor
fdivs
push
pop
dec
push
gs
add
cmp
inc
cmp
mov
push
push
dec
xor
pop
sahf
sti
pop
mov
inc
mov
scas
js
lds
clc
lcall
dec
xchg
subb
dec
test
and
dec
sub
arpl
dec
jns
jg
dec
fdivs
add
push
es
lcall
gs
mov
pop
jmp
mov
cmc
fidivs
pop
inc
lahf
pop
dec
adc
sbb
arpl
dec
jl
mov
adc
jnp
ja
mov
pop
js
cmpsl
jne
dec
fs
sub
cmc
and
dec
dec
dec
mov
outsl
test
lock
out
iret
mov
imul
loopne
mov
test
dec
jnp,pn
ja
insb
pop
iret
and
inc
sbb
xor
dec
test
add
xchg
dec
int
cmp
into
mov
sbb
dec
out
ja
mov
cli
out
test
lcall
lahf
stos
add
sbb
sub
xor
jmp
cwtl
xor
clc
jp
fisttpll
mov
ljmp
inc
pop
dec
and
cmpsb
test
dec
imul
mov
fyl2x
or
xchg
cmc
adc
push
ljmp
jg
sub
push
in
xchg
mov
flds
add
sbb
gs
dec
fwait
mov
lock
mov
xchg
loope
movsl
mov
negb
jb
push
xchg
dec
sub
cmp
inc
in
scas
cmp
in
sub
scas
inc
fimuls
enter
mov
outsb
bound
stos
mov
inc
xor
mov
cmp
dec
jns
int3
xchg
jb
out
bnd
dec
scas
cmpsb
shlb
dec
mov
icebp
push
insb
sbb
test
fnsave
gs
and
test
xchg
not
add
mov
test
sub
pop
jp
ss
mov
pop
inc
adc
jmp
stos
bound
pusha
dec
mov
aad
cld
sti
fs
jno
pop
dec
ja
inc
dec
cli
sbb
lods
test
daa
lret
xchg
sbb
cmp
pusha
ja
and
pop
mov
mov
into
pop
mov
outsl
dec
dec
or
push
mov
fildl
xor
xlat
fiaddl
jg
or
inc
adc
dec
dec
adc
inc
hlt
dec
stos
lods
repnz
dec
arpl
adc
jg
dec
push
andl
xor
and
cmp
fs
jge
sahf
ret
ljmp
insl
mov
sbb
inc
add
add
and
dec
push
into
sub
roll
out
dec
gs
inc
mov
pop
imul
adc
push
mov
mov
sub
jno
fdiv
fcmovne
mov
xchg
and
adc
aas
lahf
shlb
daa
lahf
sbb
dec
sub
imul
cltd
ss
hlt
sub
dec
or
lods
adcl
std
aad
sub
mov
dec
test
or
xor
into
loope
rorb
mov
lret
adc
add
es
fisttpll
les
dec
or
push
push
jne
dec
mov
loopne
jo
rcr
dec
sub
inc
mov
call
insl
movsb
mov
dec
inc
mov
out
cli
push
xchg
xchg
inc
test
mov
mov
sub
mov
cmpsb
into
dec
mov
pop
imul
xadd
pop
shlb
test
inc
jnp
fildll
loopne
fs
sub
dec
xor
pop
leave
daa
cwtl
call
test
je
dec
pop
fst
jl
cltd
inc
push
ds
sub
mov
int
push
scas
dec
ds
in
dec
cmp
movsb
xor
fstpt
movsb
ja
adc
push
inc
dec
cld
mov
cmp
lret
repz
push
mov
loop
int3
jl
adc
mov
pop
adc
and
sahf
add
pminub
push
pop
loopne
sbbl
sub
push
leave
xorl
jg
cmp
inc
dec
jns
pop
cmp
cmp
shll
outsb
jno
xor
mov
dec
or
fildll
ljmp
adc
push
les
into
push
push
lahf
aaa
pop
jae
icebp
icebp
mov
adc
and
inc
repz
enter
push
pop
lcall
inc
add
cmc
push
cwtl
pop
pop
adc
ss
pop
push
lret
jle
hlt
mov
in
or
clc
dec
add
bound
sbb
sbb
ret
jle
call
outsl
mov
pop
add
xorl
sub
pop
jg
lahf
out
fnstcw
sub
out
cmp
lods
cmp
xchg
pop
sub
inc
pop
scas
inc
xchg
stc
push
inc
push
mov
aaa
mov
or
mov
dec
loope
mov
mov
and
pop
enter
jle
outsb
xchg
inc
in
dec
ficomps
rcrl
push
dec
xchg
fmull
aam
lods
dec
fadds
jge
mov
inc
dec
sbb
mov
cmpsb
repz
mov
fmuls
das
outsb
adc
dec
rcrb
cmp
ss
jp
jl
push
push
xchg
dec
mov
jg
jle
cmp
push
xchg
dec
cmp
mov
jne
loopne
mov
dec
insb
pop
inc
jo
lods
cmp
jbe
push
rorb
pop
push
movsb
sub
inc
add
jge
clc
or
fldcw
jmp
mov
fidivrl
xchg
clc
pop
cmp
push
movsl
cmp
sarb
out
cmp
out
adc
jne
pop
lds
movsb
mov
pop
loope
push
jle
dec
leave
in
pop
insl
add
addr16
xor
xor
dec
dec
shrd
push
dec
dec
fs
lds
stos
and
scas
cmpl
rolb
flds
mov
mov
xor
lcall
lea
jle
popf
and
cmp
pop
xchg
push
aam
enter
scas
cmp
mov
adc
arpl
xchg
dec
jl
jns
lret
pop
mov
movb
rclb
adc
loopne
sbb
mov
xchg
imul
out
dec
nop
cwtl
adc
bound
stc
sbb
pop
sub
mov
das
dec
pop
push
inc
xchg
cmp
movsb
fs
js
sbb
dec
push
xrelease
pop
cmp
or
lock
dec
dec
aas
in
push
mulb
xchg
jb
js
jge
dec
or
sahf
data16
mov
push
cmp
ja
jbe
dec
das
call
mov
xor
cmp
in
inc
cmp
ror
or
or
data16
leave
in
loop
and
xor
jns
in
popa
push
xor
lods
mov
popf
daa
cmpb
pop
flds
dec
add
outsb
jge
dec
stc
xchg
mov
lock
mov
aas
adc
xchg
ret
inc
jle
rcr
iret
out
lods
dec
adc
add
pop
loop
cmp
in
leave
xchg
pop
pop
dec
hlt
add
inc
jp
xchg
or
hlt
iret
gs
repz
xchg
and
xchg
dec
sbb
ret
mov
push
ljmp
arpl
fwait
cmpsb
push
mov
or
jo
out
jae
or
fcoms
dec
out
ret
inc
stc
gs
adc
out
das
xor
hlt
jmp
push
or
pusha
rorl
out
or
or
in
dec
scas
pushf
mov
mov
mov
jge
hlt
adc
adc
out
cmc
jge
das
push
mov
stos
int
cmpsb
lods
outsl
cmp
or
adc
outsl
addr16
lods
xchg
pop
in
scas
aas
mov
xlat
pop
pusha
pusha
xorb
lods
out
fwait
adc
scas
xchg
arpl
and
imul
mov
test
xor
xor
push
lock
sti
adc
fldt
fimuls
loop
lcall
cmp
into
inc
dec
push
cmp
dec
mov
xchg
jg
pop
call
data16
or
or
icebp
fimuls
dec
mov
pop
roll
mull
mov
rorl
mov
movsl
pop
dec
cs
xor
test
pop
pusha
aaa
jnp
das
mov
mov
sbb
mov
adc
daa
dec
fwait
int
int3
pop
outsb
and
cmp
negl
jle
sub
aam
clc
ds
mov
jae
adc
scas
ja
sbb
xchg
stc
iret
lods
loop
jle
jg
pop
dec
xchg
je
lret
cs
stos
jle
test
mov
inc
add
push
jg
shl
adc
jae
sbb
ss
test
arpl
jle
gs
xor
mov
jae
int
out
aam
btr
jns
mov
jle
std
inc
adc
push
testl
inc
mov
or
jg
cmp
out
pushf
add
and
dec
aas
adc
aad
repz
jg
int3
aam
push
and
dec
xor
stc
cmp
repnz
cmp
pop
add
fdivs
out
and
push
repnz
lods
cmp
mov
ds
push
arpl
jl
insl
int3
jo
lea
aam
cmp
cli
adc
rolb
xchg
test
push
mov
jne
mov
fmuls
push
leave
je
inc
cmp
cwtl
mov
clc
xchg
faddl
dec
or
and
aam
and
out
push
fisubrl
dec
stos
push
jg
add
inc
dec
fisubrl
lret
outsb
out
pop
loop
orb
push
or
leave
xchg
test
fsubl
inc
aas
mov
push
aaa
pop
xchg
icebp
pop
dec
xchg
sub
into
mov
jo
pop
pop
out
mov
aas
loopne
mov
sbb
add
xchg
int3
xor
adc
nop
mov
sub
add
sti
cmpsb
in
cmpsb
std
in
xlat
xor
pusha
push
mov
daa
test
sub
jnp
lcall
cmpsl
pop
out
call
call
inc
and
ja
and
lret
sbb
jge
addr16
or
fisttpll
lods
xlat
push
std
pushl
repz
jg
jmp
stos
mov
loop
rorl
stc
roll
sbb
and
push
stos
and
sub
jl
int
call
mov
cmp
insl
call
dec
push
repz
mov
fiaddl
jg
popf
test
pop
fs
sbb
or
xchg
bound
cmc
pop
jo
xchg
mov
dec
fs
scas
shlb
dec
cmp
dec
push
or
mov
pop
and
loope
cmp
push
jno
cmp
popa
fsubrp
mov
adc
and
inc
fwait
xchg
push
mov
dec
xor
movsb
ret
das
sti
sbb
cld
and
mulb
adcb
inc
dec
es
xor
dec
or
jmp
jns
out
mov
and
imul
xor
mov
imul
lds
pop
dec
cmp
mov
mov
into
xchg
mov
xor
aam
mov
mov
dec
inc
add
push
jp
mov
push
pop
mov
xchg
dec
insb
jae
es
pop
jbe
sti
sbb
jecxz
mov
jne
push
inc
cmp
pop
outsl
das
aaa
mov
addr16
pop
mov
lret
dec
jge
xlat
or
xchg
imul
xchg
jmp
cmc
fdivl
cmp
add
out
mov
add
mov
adc
bound
add
dec
arpl
pop
call
dec
mov
add
xchg
cmp
push
mov
xor
pushf
daa
mov
push
mov
inc
inc
xchg
arpl
add
dec
or
and
fsubrp
mov
addr16
mov
dec
aaa
insl
scas
in
ljmp
adc
or
fistl
into
ret
pusha
xchg
xchg
dec
pop
dec
and
sub
push
lds
enter
mov
mov
and
dec
testb
sbb
mov
rcll
dec
adc
flds
imul
pop
dec
hlt
cmp
mov
fcmovu
outsl
ror
dec
push
mov
jmp
shrl
les
sbb
pop
popa
dec
roll
in
mov
mov
mov
mov
dec
or
ret
xchg
push
es
pusha
insb
cmc
cli
arpl
lret
sub
jp
out
push
push
test
dec
and
cwtl
dec
sbb
arpl
xchg
lret
xchg
cli
adcb
jle
mov
cmc
xor
push
les
cmpsb
dec
dec
sub
jle
jge
mov
bound
mov
dec
jbe
cmp
in
mov
mov
dec
imul
into
sbb
jg
dec
pop
cltd
push
or
pop
xchg
shll
mov
int3
jle
leave
push
dec
aad
ss
andb
dec
int
fwait
enter
xchg
sbb
mov
add
mov
jae
shrb
dec
dec
xchg
into
push
inc
jge
mov
or
dec
in
pop
stc
lcall
inc
repz
aas
jnp
mov
in
dec
adc
dec
icebp
dec
sub
xchg
mov
arpl
pop
ret
dec
xor
repnz
pop
pusha
inc
push
pop
cmp
popl
xor
nop
rorb
mov
out
mov
leave
int
cs
stc
sbb
xor
cmp
ret
popl
std
push
inc
cmp
xchg
add
shlb
xor
lret
dec
lretw
cmp
pop
inc
cmp
mov
hlt
mov
add
sub
xor
xor
out
jb
je
cmp
xchg
push
mov
and
iret
imul
mov
jns
es
push
dec
xchg
lahf
fisubrs
in
scas
mov
jle
add
cmp
jnp
adc
fistpll
and
mov
jno
pop
test
scas
ret
and
movsl
lea
bound
das
or
pop
cmpsb
popa
pop
jo
xor
iret
cmp
jle
adc
mov
int
mov
inc
pop
mov
mov
adc
cs
hlt
adc
xor
sti
or
addr16
inc
xor
out
or
xchg
repnz
lock
sbb
or
sbb
loope
mov
xor
fsubs
sub
leave
fdivrs
mov
push
fdivs
dec
nop
cmpsl
pop
into
ret
adc
sub
pusha
dec
fs
inc
mov
xor
inc
jle
addr16
bound
jo
xor
repnz
bt
fstpt
mov
mov
sub
add
mov
mov
jecxz
ja
mov
xchg
or
adc
repz
sub
jle
or
int3
sbb
lahf
into
je
mov
scas
mov
push
fimull
rcrl
jmp
dec
pusha
jge
fmul
gs
or
pop
nop
push
jle
xchg
dec
sti
scas
cmp
jg
sub
dec
cs
adc
mov
or
push
es
outsl
mov
jae
fbld
add
add
mov
mov
cld
pop
jo
call
stos
and
cmp
adc
mov
push
leave
loope
cmp
lods
fdivrl
mov
rorb
mov
es
dec
inc
xchg
sbb
xor
std
stos
jnp
les
pop
push
dec
dec
push
add
fcmovnu
lods
dec
sbb
dec
sub
mov
and
xor
push
out
lock
dec
ja
icebp
sti
or
mov
fcmove
shl
dec
popf
xchg
popf
mov
loopne
pop
stos
jne
movups
dec
mov
xlat
outsb
adc
xor
xchg
xchg
jnp
cli
scas
lret
in
scas
mov
loop
cmp
jmp
gs
cmp
insb
in
dec
pop
jle
cmp
fwait
or
stos
jle
dec
inc
sbb
pop
add
jnp
aam
sbb
push
mov
insb
pop
cmp
dec
ret
jecxz
test
pusha
lock
dec
jno
sbb
fwait
or
add
dec
inc
xor
add
int
setle
lods
dec
cmp
pop
pop
or
fisttps
add
sub
cwtl
clc
jp
pop
fidivrl
dec
jl
lret
inc
gs
jbe
xchg
xchg
xchg
shrb
mov
xor
jmp
clc
mov
xlat
push
lret
out
leave
dec
stos
cmp
ficoms
sub
lret
int3
mov
hlt
cmp
jl
test
sbb
lahf
xor
stc
roll
movsl
daa
sbb
out
adc
femms
leave
fwait
pop
scas
jne
cltd
push
pop
aad
scas
jle
xchg
scas
in
pop
or
xchg
daa
adc
mov
pop
mov
int3
cmp
xchg
mov
fisubrs
fwait
clc
iret
ret
jg
xlat
aaa
test
push
ja,pt
and
push
rorl
ds
jg
lcall
stc
mov
push
sub
push
inc
mov
jl
xor
push
push
mov
cmp
fs
cwtl
jl
outsl
pusha
mov
xor
lock
iret
cmp
add
dec
push
pop
xorb
xchg
arpl
sub
lret
sub
cmp
mov
out
inc
add
and
or
dec
sarb
mov
dec
xor
xor
jle
in
dec
add
lss
into
push
int
mov
loope
inc
push
lret
inc
push
daa
dec
insb
aaa
int
scas
pusha
enter
adc
dec
cs
jle
inc
mov
push
sbbb
out
test
shll
inc
filds
daa
aad
lret
nop
fimuls
or
mov
addr16
mov
daa
add
xor
push
mov
repnz
movsb
push
xchg
repz
mov
ds
fidivrs
and
call
decl
fwait
clc
mov
adc
hlt
push
inc
xor
cli
or
jae
rol
add
mov
or
imul
fadds
sbb
jg
testb
adc
cmp
add
stc
jl
pushf
dec
dec
push
orl
dec
xchg
es
loope
xchg
mov
jmp
test
popa
mov
jnp
dec
lret
adc
xor
inc
jno
dec
push
push
popf
push
push
testb
dec
sbb
in
clc
fcom
testl
push
xchg
mov
push
ss
mov
addb
dec
decl
adc
ret
in
dec
mov
loopne
adc
lods
and
xor
popf
xchg
mov
pop
dec
mov
adc
stc
xchg
es
out
dec
cmc
xor
pop
push
call
mov
nop
add
ror
nop
jl
xor
inc
jns
mov
dec
es
jno
pop
sbb
insb
mov
cmp
mov
arpl
sbb
sub
mov
ljmp
pusha
je
inc
mov
jle
or
xchg
jl
aaa
cmp
cmp
pushf
lds
sub
sub
data16
scas
sub
adc
fs
inc
das
cmp
mov
dec
mov
lret
cs
cmp
pop
pusha
sbb
imul
jp
daa
stc
mov
les
fistpll
adc
cmp
rcrb
and
test
dec
imul
and
push
xor
nop
xchg
jmp
js
cmp
insl
orl
adc
xchg
pop
addr16
push
pop
dec
ss
scas
sti
sbb
or
dec
sbb
xchg
jns
xchg
jmp
xor
xor
leave
mov
repz
fs
inc
add
fucomip
int
push
pop
cmpsb
cmpsl
in
pop
xor
fs
jno
mov
mov
pop
or
mov
push
sarl
xchg
shrb
scas
mov
jno
lods
pop
dec
lock
popa
pop
dec
ret
pop
xor
adc
mov
pop
xor
mov
js
jle
and
add
mov
pop
cs
xchg
sbb
sbb
cs
adc
sub
loop
cli
push
dec
push
ds
inc
roll
push
dec
lock
out
add
jae
orb
dec
scas
xchg
leave
loop
dec
mov
jge
outsb
movsl
jb
ds
cmp
ror
test
insl
inc
jbe
xor
dec
cmp
in
and
imul
ret
cli
iret
frstor
cmc
fsubs
xlat
loopne
jns
sub
lods
insb
out
pop
iret
sahf
imul
sub
pop
dec
mov
adc
jle
dec
test
push
jg
les
fisttpll
jo
cmp
ficomps
fs
fdivl
stos
and
decb
inc
shll
adc
and
add
cmp
dec
push
add
or
das
dec
adcl
or
fwait
and
adc
push
or
sbb
loopne
dec
mov
or
cmp
cltd
or
rol
dec
pop
cmp
ljmp
dec
push
jle
loope
sub
xor
out
dec
mov
cwtl
mov
pop
lret
mov
aam
mov
aaa
icebp
jge
mov
push
lcall
and
xchg
cmp
add
in
cmp
clc
cmpsl
lock
cmp
movsl
inc
cmpsb
jnp
jp
dec
mov
sbb
leave
inc
imul
mov
push
ja
aad
into
fwait
lods
mov
and
lock
into
ret
jg
sub
shrl
clc
add
lock
test
add
mov
push
popf
sub
jl
dec
test
hlt
push
fs
lret
in
xor
add
mov
rclb
in
cmp
dec
shrb
dec
pop
add
into
fmull
pop
mov
xchg
mov
adc
push
pop
insb
inc
sub
xor
sub
mov
sub
cmp
mov
ret
ja
int3
dec
jle
pop
out
add
into
outsb
inc
and
mov
mov
jecxz
jl
mov
inc
push
cmp
rclb
push
push
xor
xor
mov
mov
pop
mov
es
sarb
jo
rorb
mov
mov
leave
jb
jbe
add
psubq
fisttps
push
ret
cmp
in
iret
lret
clc
ss
push
pop
dec
lcall
push
mov
mov
push
stos
and
andb
mov
pop
push
xchg
mov
aam
mov
std
sbb
lods
clc
bound
jns
dec
mov
add
or
dec
std
decb
cmp
mov
and
sbb
repnz
outsb
data16
decl
push
or
xchg
and
sub
mov
or
mov
cmp
adc
jns
jmp
stos
dec
fxch
mov
sbbl
sub
inc
scas
sarb
into
cmpsl
dec
addr16
insl
jns
jmp
pop
mov
mov
push
cltd
sub
ret
dec
ficompl
mov
push
or
hlt
into
subb
adc
sbb
xor
dec
cmc
neg
or
mov
pop
dec
imul
adcw
enter
scas
mov
lds
sbb
xor
mov
jmp
int3
cli
dec
or
jp
ret
flds
pop
dec
leave
xor
les
dec
mov
shlb
sbb
sbb
outsb
bound
test
jg
clc
xor
push
xchg
jo
insb
sarb
aad
repz
pop
cmp
adc
mulb
push
inc
jg
pop
sbb
shl
push
loop
xor
xor
mov
leave
or
sbb
test
in
xchg
mov
dec
push
pushf
xchg
fsubrs
jo
jl
sbb
sti
daa
push
fisubs
dec
ror
push
js
sbb
xor
cmpl
jg
dec
jge
jb
rcrl
or
in
rcrl
sahf
adc
bound
cs
ljmp
inc
bound
mov
daa
jg
repz
int3
roll
dec
inc
sub
dec
js
call
es
or
cs
cmp
pop
dec
fisubl
sub
fsubs
pop
mov
mov
mov
lcall
and
push
adc
push
push
lret
sub
xorb
inc
dec
dec
loope
test
and
nop
inc
dec
inc
das
mov
pusha
mov
pop
jmp
adc
int
test
rorl
inc
push
mov
outsb
inc
dec
dec
lods
sbb
mov
dec
mov
cltd
popf
xlat
jns
and
push
sub
dec
inc
call
jecxz
dec
adc
xchg
mov
pop
adc
notl
cmp
push
lods
lods
adc
dec
and
jmp
dec
call
aas
movsl
dec
or
dec
sub
and
scas
push
xor
dec
hlt
popa
sbb
or
cmpsl
xchg
inc
insb
fildll
cmpsb
jbe
pusha
dec
bound
dec
jg
mov
xlat
addl
push
push
ret
adc
test
dec
inc
jl
mov
jle
test
dec
mov
inc
notl
cmp
das
sbb
cmp
sbb
cmpsl
xchg
sbb
push
push
dec
and
dec
dec
out
stos
mov
dec
add
sub
jmp
outsb
out
cmpsl
lods
iret
jl
mov
inc
sbb
dec
fsubs
aam
jne
or
aam
or
cmpsl
xchg
aas
fwait
movsl
pop
movsb
and
add
jl
dec
push
mov
and
dec
fisttpll
idivb
loop
clc
fbstp
and
call
lret
mov
mov
out
out
mov
adc
leavew
xlat
repz
mov
xor
dec
cmp
push
xchg
and
xchg
dec
dec
pusha
hlt
pop
sub
cld
les
pop
jmp
cli
pop
and
xlat
push
negl
xchg
or
jbe
and
ret
cmpsb
popa
add
jns
dec
sbb
mov
idivb
into
scas
mul
jg
daa
call
movsb
outsb
gs
push
xchg
xchg
scas
fstpl
fwait
loop
dec
in
jle
sub
cmp
xchg
inc
fsubrs
xor
mov
xor
cmpb
inc
mov
insl
dec
mov
pushf
pop
and
cmp
cmp
jg
push
xor
push
xor
xchg
out
sbb
loopne
push
jp
fwait
test
daa
cmpsl
xchg
push
roll
cmp
or
hlt
xchg
mov
daa
inc
test
mov
in
iret
je
cmp
jle
inc
jle
out
dec
cmp
mov
cwtl
jg
xchg
das
mov
insb
stc
hlt
dec
add
pop
xchg
adc
sbb
jle
push
into
push
jb
jl
lods
or
push
jg
adc
rcl
daa
in
dec
jle
inc
xor
icebp
jp
or
mov
inc
cmpb
pop
sub
sub
dec
cmp
sbb
jecxz
bound
iret
and
movsb
cmp
sbb
stos
or
sub
lds
mov
push
gs
push
push
in
and
lret
xchg
cwtl
lret
cmp
inc
push
push
add
pushf
pop
mov
xchg
jae
in
sarl
sbb
mov
dec
sub
movsb
aaa
in
jg
add
cs
mov
adc
pushf
dec
dec
push
loope
sbb
jb
add
test
add
inc
lods
lret
mov
mov
ds
adc
subb
mov
jge
stos
fiadds
out
xor
test
outsb
cli
dec
cmpsb
movsl
adc
inc
pop
pop
mov
outsb
add
dec
arpl
and
dec
add
sub
xor
sub
hlt
add
cmp
bound
std
pusha
inc
inc
and
cmp
cld
testl
dec
or
xchg
jno
and
out
pop
aaa
cmp
add
mov
repz
mov
push
dec
aas
jl
push
rcrl
in
fst
fdivp
inc
cmpsl
jl
lret
sarb
in
sub
shr
jg
push
lea
arpl
mov
pop
ja
lods
dec
jl
adc
sub
inc
fnstcw
clc
adc
mov
sub
mov
mov
cmp
repnz
sub
iret
rcll
pop
mov
push
rcrb
sbb
loopne
jecxz
pop
in
leave
sbb
pop
clc
xor
add
mov
popf
cld
lea
jl
dec
stos
push
xlat
lahf
cmp
mov
mov
inc
mov
out
movaps
mov
sub
sbb
test
cmp
and
mov
aad
inc
xchg
push
pop
into
test
xlat
in
dec
cmp
jle
cmpsb
push
adc
xor
cs
shll
push
popf
stc
add
dec
das
fdivl
mov
insl
add
cmp
jge
scas
cmp
xchg
cld
fwait
into
push
fistpll
out
imul
loop
leave
push
out
mov
lahf
loop
sar
jg
lfs
cmpsb
mov
mov
lea
rolb
sub
aaa
repz
test
add
jbe
aam
jg
add
xor
mov
add
dec
pop
lretw
push
mov
jb
mov
push
push
int3
and
nop
pop
sbb
cltd
pushf
lret
mov
loop
adc
adc
push
dec
notb
xchg
mov
push
pusha
push
dec
dec
jmp
dec
inc
xchg
popf
outsl
adc
dec
loopne
or
dec
inc
and
jne
orl
and
ss
dec
dec
orb
arpl
add
sub
aad
popf
hlt
fidivrl
call
sub
dec
sahf
subb
pop
lods
ret
das
push
adc
push
in
addb
push
xlat
sbb
dec
loop
jg
scas
and
pop
pop
cmp
repnz
and
pushf
movsb
inc
or
pop
xchg
addr16
dec
les
enter
add
dec
xlat
aam
lock
push
mov
xchg
xchg
mov
dec
xchg
out
cs
cmp
mov
sbb
pop
fnstcw
inc
mov
jle
mov
jg
xor
shrb
mov
int
push
mov
cmp
cmp
aad
hlt
dec
cmp
adc
xor
and
stc
jecxz
loope
lret
adc
pop
push
xchg
fisubrl
xor
iret
sahf
rolb
int3
ss
dec
jl
les
xchg
cs
out
mov
and
cmp
inc
inc
ss
dec
rorb
mov
push
stos
jne
lahf
jmp
mov
xchg
mov
lods
jg
pop
pop
cmc
leave
cs
sbb
leave
inc
and
or
addr16
cmp
mov
jle
mov
ja
daa
jl
pusha
xchg
gs
movsb
pushf
js
mov
push
orb
das
push
cmp
stos
cmp
pop
dec
adc
cmpsb
lea
jae
inc
dec
arpl
inc
xchg
aaa
or
shrl
insb
sbb
scas
sub
das
ljmp
mov
or
inc
cmp
add
std
imul
fdiv
stos
iret
lret
add
push
stos
sub
mov
mov
mov
in
cmp
xchg
pusha
test
and
push
scas
xchg
mov
orl
jge
das
cmp
mov
sbb
idivl
push
dec
loop
fmul
subl
dec
dec
out
cmpsb
js
jle
jle
sti
outsl
inc
and
aaa
sub
mov
in
pop
movsl
mov
add
sbb
inc
jg
mov
das
jp
push
inc
outsb
data16
int
cmpsb
dec
stos
cmp
mov
pop
icebp
adc
xor
cmpsb
ror
and
push
enter
adc
out
out
dec
push
push
xchg
xor
cmp
insl
in
add
jne
out
sub
fwait
push
push
rorb
addr16
bound
cwtl
fdiv
pusha
add
adc
sub
pushf
je
cmc
adc
mov
mov
jge
cs
das
jg
test
push
fwait
scas
or
movsl
into
xlat
sbb
xor
mov
dec
lcall
ljmp
add
ficoms
mov
mov
adc
pop
push
cmp
inc
iret
push
hlt
adc
dec
mov
pop
ror
and
or
xor
cmp
ret
into
cli
adc
or
dec
and
lock
outsl
add
push
dec
jae
addr16
cmp
aas
push
lock
clc
pop
xor
cmpsl
insb
or
pop
repnz
mov
cmp
gs
dec
roll
add
cli
std
sahf
lahf
jb
mov
in
and
out
pop
iret
dec
jno
inc
mov
enter
and
lahf
sub
xchg
or
stc
test
sti
push
adc
xor
cmp
fldcw
out
loop
pop
daa
fildll
scas
pop
xor
lods
xchg
leave
shl
mov
push
stos
inc
dec
or
xor
imul
pop
dec
ss
adc
cmp
xor
ds
add
dec
dec
loopne
repnz
ret
orb
adc
bswap
sbb
pop
sbb
lcall
mov
and
mov
dec
inc
stc
and
push
add
xchg
or
pop
jg
dec
push
xchg
or
sti
xor
inc
fisttpl
jno
out
dec
xchg
sahf
jnp
rorb
bound
push
jmp
add
push
sbb
mov
dec
and
in
lods
dec
xchg
and
inc
add
lods
leave
xchg
dec
call
dec
rclb
dec
mov
cwtl
pop
cmpsb
sub
into
mov
mov
fdivl
insl
stos
sbb
cmp
dec
mov
jle
cmp
xchg
addb
dec
aaa
in
test
int3
mov
jl
mov
mov
jl
popa
dec
inc
xchg
adc
lods
add
dec
and
fwait
mov
movsl
xchg
inc
cmpsl
jl
std
dec
cld
sti
ret
and
push
jl
cmpb
pushf
and
inc
xor
push
or
push
mov
ret
xor
mov
jle,pt
mov
mov
scas
call
jg
scas
xchg
je
xchg
push
add
or
test
add
lods
mov
cmpsb
lret
sub
lock
arpl
add
xor
add
aaa
test
sbb
cmp
pop
in
lods
mov
jg
cltd
aas
mov
gs
out
scas
xchg
scas
scas
enter
mov
lock
scas
jp
aaa
xchg
bound
pop
sub
mov
jo
mov
cmpb
hlt
lds
fimuls
pop
and
out
out
pop
push
movsb
adc
mov
push
inc
rorl
imul
clc
lret
dec
inc
test
test
jl
dec
adc
mov
or
loope
cmc
addr16
and
iret
inc
inc
cmp
mov
out
push
and
gs
repnz
mov
stc
sbb
dec
and
cmpl
inc
dec
jg
push
ljmp
mov
mov
xchg
mov
cmpsl
imull
sahf
in
sbb
lea
int3
mov
dec
imul
movl
scas
add
sbb
dec
rol
push
pop
add
jmp
lods
icebp
inc
mov
xchg
add
cmp
cmp
dec
mov
pop
out
ss
enter
addb
sbb
push
dec
dec
xor
push
xchg
dec
gs
fimuls
repnz
aas
mov
cli
push
jmp
mov
cmp
popa
sub
sub
in
outsl
movsb
dec
int3
sbb
inc
mov
dec
stc
dec
addr16
rcrb
dec
fisttpl
dec
adc
push
pop
xchg
lods
mov
imul
fldl
repnz
sub
xor
enter
mov
clc
pop
pop
bnd
mov
test
int
cmpsl
popa
cmc
fwait
nop
dec
jl
cld
inc
dec
pop
scas
hlt
cmpsl
movsb
dec
inc
cmp
dec
ret
jg
dec
loope
rol
idiv
sub
ror
std
cs
pushf
fadds
pop
rorl
mov
out
dec
rclb
inc
in
sub
push
inc
mov
into
and
sti
cmpsl
dec
inc
mov
stc
mov
mov
mov
push
push
and
pop
push
dec
add
aas
inc
popa
adc
xor
dec
push
add
xchg
mov
jnp
out
sti
dec
fmuls
dec
add
sub
inc
repz
inc
outsb
push
jnp
nop
dec
mov
sti
mov
or
mov
dec
in
insl
sbb
aas
rorl
xor
lods
pcmpgtd
sub
push
mov
xor
cs
cmpsb
inc
repnz
pop
xchg
mov
xor
or
jnp
add
dec
and
cld
pop
lods
dec
mov
mov
push
mov
sbb
stos
mov
mov
testl
inc
mov
fwait
rcrb
inc
imul
push
stc
into
negb
push
fimull
add
out
jge
fildl
pop
add
test
mov
push
flds
jnp
imulb
lock
aam
push
inc
jbe
pop
iret
and
xchg
xorl
mov
popf
pop
jb
mov
fstl
or
push
cmp
xor
sbb
mov
pop
lret
xor
or
gs
ffreep
jl
in
jne
jb
mov
adc
cmc
into
mov
jnp
stc
dec
les
jno
xchg
int3
sub
jns
mov
xor
sbb
mov
and
xor
xchg
xlat
fisubl
jle
pop
mov
aaa
pop
mov
jbe
rolb
mov
sub
aas
sti
aaa
mov
cmp
push
xchg
test
dec
sbb
dec
fnstcw
dec
xchg
or
int3
add
aad
cmp
push
push
cmp
cs
js
pop
repnz
fnstsw
aam
sub
fs
loop
negl
push
xchg
movaps
dec
shr
les
rorb
sahf
xchg
popa
lea
insl
sbb
and
mov
out
mov
sub
mov
ja
pop
jne
addr16
dec
cmp
jae
sub
xchg
dec
push
inc
arpl
mov
imul
pusha
xor
push
adc
dec
sahf
jg
bnd
out
dec
xor
stc
pop
arpl
jmp
xor
iret
xor
push
pop
dec
outsl
inc
ljmp
and
dec
mov
orb
cltd
or
mov
stos
add
pop
push
push
fimuls
jge
mov
or
jae
dec
mov
mov
das
sbb
adc
pop
xchg
loopne
push
jne
jae
jnp
addl
inc
gs
inc
lahf
dec
mov
jmp
jo
jg
push
into
xor
dec
mov
sub
lds
xchg
xchg
dec
and
ret
roll
out
adc
out
xchg
sahf
sbb
out
xchg
ror
imul
jnp
jmp
dec
mov
pop
xchg
sahf
loopne
dec
loop
pop
dec
mov
dec
test
insl
xchg
dec
sub
imul
pop
call
inc
scas
xor
lea
sub
dec
cmp
in
or
mov
dec
adc
mov
inc
mov
pop
jl
arpl
cltd
xchg
xchg
and
rcll
pop
jge
add
cli
sub
and
mov
loop
dec
xor
dec
mov
daa
push
rorl
loop
subb
cmp
movsl
xchg
imul
jnp
inc
jo
fiaddl
cmp
push
xchg
and
inc
test
dec
add
and
into
and
gs
ds
jle
add
push
mov
mov
lret
mov
or
xor
into
fisubs
pop
xchg
add
or
jne
shr
push
xchg
in
stc
scas
xor
dec
icebp
sub
dec
xor
rorb
jl
cmp
jns
sbb
dec
add
mov
cmpsb
mov
inc
insb
mov
loope
outsl
push
mov
sub
std
jecxz
iret
dec
mov
das
mov
jbe
dec
jg
lods
push
loopne
push
fs
jae
dec
loope
jl
jg
cmpsl
pop
popf
into
ret
lahf
pop
cmp
xor
and
in
or
push
dec
jecxz
and
push
dec
pop
loop
incl
mov
dec
dec
insl
mov
jg
lds
jo
inc
cmp
or
ljmp
cld
rolb
iret
in
dec
cmc
dec
xor
or
add
mov
mov
mov
jns
pop
scas
ds
fstpl
lods
cmp
icebp
and
push
sbb
jo
mov
add
xor
movsb
xor
testb
and
xor
lods
mov
gs
mov
dec
sub
mov
adc
lcall
mov
repz
adc
or
out
mov
cmc
adc
int3
dec
cs
jg
adc
inc
addb
or
pushf
lahf
ret
pop
in
dec
push
sbb
mov
mov
dec
outsl
dec
in
ljmp
sbb
gs
pop
ret
cmp
out
sub
rcll
push
sub
lods
dec
lock
or
arpl
dec
sbb
into
jge
loop
pop
dec
mov
ret
rcr
orl
ss
pushf
jnp
ljmp
int3
sbb
inc
mov
ljmp
mov
mov
por
dec
testl
dec
push
loopne
orl
xor
repz
xor
cld
and
xchg
rolb
dec
mov
jb
aad
adc
fldl
fbld
loope
lods
dec
mov
and
push
stc
pop
leave
xor
nop
cwtl
repnz
aaa
add
jg
sbb
mov
cmp
xchg
jg
stos
les
xchg
adc
movsl
lret
cmp
out
fwait
dec
bound
jl
stc
inc
mov
mov
sbbb
and
into
das
jle
fs
push
jp
and
fwait
repnz
jle
call
jbe
and
add
test
jg
das
mov
aam
dec
pusha
push
cmpsl
jle
add
jmp
cli
push
mov
jl
mov
addr16
dec
fstl
sbb
or
mov
inc
cmp
mov
lock
pop
fdivs
mov
mull
les
scas
test
pop
neg
mov
adc
lahf
push
add
and
out
out
push
sub
adc
out
and
jl
in
repz
fdivrs
inc
lods
es
dec
sub
int3
or
aam
xor
inc
xlat
inc
lea
jle
movsb
icebp
push
mov
das
lret
dec
xchg
adcb
sbb
gs
jecxz
negl
jnp
cmpsl
sarl
mov
cwtl
ds
test
cmc
xchg
rorl
das
outsl
gs
cmp
jb
pushf
scas
adc
mov
cli
ret
push
xchg
in
dec
jl
stc
in
movsb
dec
mov
pop
cmp
pop
scas
dec
add
sbb
jmp
or
mov
dec
mov
adc
push
jg
inc
in
outsl
dec
add
into
ss
mov
add
mov
repz
in
jge
lret
js
out
jge
xchg
mov
mov
movsl
test
int
dec
lret
stos
cmp
push
les
enter
pop
outsl
repz
and
mov
out
cwtl
test
mov
cmpsb
or
scas
fisubs
push
dec
mov
repz
mov
and
movsl
inc
aam
cmp
lock
and
mov
mov
pop
cli
dec
ss
mov
dec
les
mov
push
fwait
mov
test
mov
adc
mov
jl
scas
mov
leave
cmc
inc
xchg
mov
arpl
dec
pop
and
fdivp
dec
and
xor
jecxz
pushf
js
cmp
ret
push
test
movsb
idivl
lret
and
dec
push
mov
xchg
popa
mov
mov
dec
mov
and
pop
mov
push
pop
sets
xchg
xchg
inc
fisubrl
xchg
lret
loope
xchg
add
aam
mov
dec
cmc
push
mov
into
xchg
inc
pop
outsl
push
enter
jmp
inc
adc
add
mov
adc
inc
jmp
xchg
out
dec
push
fdivrs
jl
popf
or
das
add
imulb
and
sbb
dec
push
notb
stos
aas
imul
dec
mov
push
dec
repz
loope
call
mov
xor
dec
aam
mov
cmpsl
pop
mov
jno
sbb
push
lods
push
fwait
jno
pop
mov
das
cmp
dec
jg
fdivrl
push
mov
sti
xchg
push
arpl
jmp
cmpsl
js
jae
scas
dec
jle
iret
dec
mov
cmp
cltd
jl
mov
mov
inc
ljmp
mov
ret
sbb
das
push
call
mov
mov
popf
dec
fdivp
mov
or
ja
dec
xchg
sub
scas
jns
jecxz
imul
addr16
push
scas
notb
dec
cltd
aas
out
lds
and
jns
push
ljmp
lods
xchg
lods
dec
outsl
xor
mov
pop
add
rorl
push
bound
xchg
dec
mov
mov
out
inc
aad
rorl
fdivrl
testb
sahf
pop
inc
rclb
aad
roll
dec
adc
pop
pop
arpl
fs
push
add
into
imul
and
dec
addb
mov
mov
sub
pop
xchg
insb
xchg
dec
adc
dec
dec
add
add
adcb
lock
dec
push
add
scas
orb
pop
adc
mov
sbb
xor
dec
iret
or
sbb
dec
sbb
mov
pop
inc
lret
mov
aad
rcl
arpl
mov
fs
mov
dec
cmpps
test
dec
daa
mov
inc
aaa
popa
je
jmp
push
push
outsb
dec
cmp
cmpsb
leave
popa
popf
cmp
dec
sbb
idivb
outsb
int3
and
xor
sbb
lret
bound
dec
xchg
push
xchg
xlat
or
xor
dec
or
mov
sti
cmp
test
dec
dec
scas
sbb
jle
mov
jne
jl,pn
out
out
cltd
push
scas
aam
mov
or
ltr
mov
scas
fdivl
lods
pop
mov
int3
inc
adc
jno
fbstp
aam
mov
dec
loop
sbb
nop
mov
jne
sarl
sbb
jl
push
cmp
xor
jle
mov
jg
shr
xchg
push
imul
int
xor
mov
mov
out
neg
ret
add
mov
sarb
inc
fcompl
jg
xchg
jbe
test
sub
cli
pop
mov
lods
scas
inc
inc
push
xchg
dec
jg
mov
scas
mov
or
fcomp
cwtl
lret
pop
loop
dec
aas
mov
push
je
lods
inc
xchg
cmp
test
mov
enter
in
push
jg
ds
cmp
cltd
jno
cs
inc
ret
lods
dec
push
inc
js
push
imul
mov
add
sahf
mov
xchg
adc
iret
clc
popfw
and
jb
lret
dec
sub
aas
inc
stos
mov
mov
aad
mov
in
shll
xchg
mov
sbb
xor
dec
push
push
sub
lea
jg
or
mov
adc
mov
inc
popa
push
sbb
faddl
cmp
mov
mov
fnstsw
and
inc
cs
xor
and
popf
sub
aam
xor
lcall
cmp
pop
mov
dec
xchg
test
jle
xchg
and
pusha
mov
mov
movsb
push
mov
pop
xor
jl
jmp
cwtl
inc
jg
mov
pop
mov
clc
add
aaa
mov
and
inc
cmp
movsl
cltd
pop
jmp
ljmp
pushl
jns
js
inc
push
mov
addl
daa
aam
inc
xor
fsubp
rcrb
ljmp
les
iret
lods
aaa
inc
push
loope
in
mov
int3
icebp
push
insl
movsl
add
nop
sahf
leave
xlat
mov
jno
rcrl
mov
mov
jg
inc
xchg
pop
sti
and
xor
loop
fimuls
cmp
mov
cltd
shrl
aas
sub
dec
out
in
mov
scas
mov
cli
inc
cmp
test
push
hlt
shll
inc
fs
into
sub
or
mov
mov
push
call
adc
fistpl
out
inc
fadds
stos
jmp
or
push
sub
dec
add
call
fwait
mov
jg
ret
xor
loope
cmc
test
pop
aas
sub
rolb
lock
stos
xor
pop
xchg
out
lock
out
adc
add
sub
repnz
jne
jle
das
cmpsl
xor
ret
out
out
jl
pop
mov
dec
xlat
and
jle
fldt
fs
cmp
loopne
or
mov
jb
int
xchg
bound
fldcw
dec
aaa
mov
aas
cmp
test
inc
jnp
das
out
or
pusha
push
xor
jbe
sub
adc
outsl
xor
sub
popf
ljmp
mov
dec
in
dec
cwtl
cs
addl
push
in
fiadds
jns
jbe
xor
fwait
popa
bnd
dec
pop
rcll
xchg
ss
dec
dec
mov
fmull
ret
jecxz
sbb
in
inc
mov
test
js
enter
xlat
adc
scas
test
xor
sub
xchg
scas
scas
imul
ljmp
ficoml
mov
in
es
cmp
jne
adc
mov
stc
sti
popa
aad
xor
aaa
dec
insb
fistpl
or
dec
mov
insl
outsl
movsl
les
ret
out
pop
adc
mov
repnz
sub
mov
imul
xor
into
cmp
ds
pop
dec
pop
lcall
dec
imul
push
jmp
test
dec
cli
push
mov
mov
jnp
or
xchg
enter
pushf
jo
ja
lahf
loope
dec
mov
roll
adc
dec
or
mov
jo
mov
dec
arpl
dec
jecxz
xchg
movsl
out
push
mov
es
bound
lea
mov
pusha
movsb
setae
jecxz
dec
cmp
or
and
or
in
inc
mov
jmp
jg
jle
popl
ficoms
push
pop
mov
dec
sbb
and
out
xlat
and
add
xor
aas
dec
lahf
xlat
dec
test
movl
dec
cmp
xchg
in
sbb
clc
dec
fwait
ret
aam
pop
or
xchg
popa
mov
mov
sub
dec
cli
push
jne
mov
out
cmpl
mov
shrb
mov
push
fcoms
punpcklwd
in
lods
arpl
pop
push
daa
dec
xchg
dec
or
addr16
mov
xchg
bound
mov
outsb
or
hlt
push
mov
fstps
repnz
rclb
cli
fs
dec
push
enter
mov
inc
into
ljmp
dec
movsl
cmc
call
pop
mov
xor
mov
and
cmp
popf
and
push
push
dec
dec
cwtl
ja
out
adc
das
or
jle
jle
dec
inc
icebp
sub
inc
pop
xor
adc
cld
xchg
cmpsb
dec
adc
insb
mov
add
cmp
out
inc
stos
dec
mov
call
into
xor
jge
inc
in
dec
pop
or
pop
mov
mov
popa
aas
ds
dec
divl
xchg
ss
xchg
aaa
lahf
or
repnz
fcompl
and
pop
out
adc
mov
jne
int3
aaa
sub
idiv
into
xchg
add
xor
push
sbb
popa
lods
jl
lahf
orb
aas
mov
push
mov
add
cmp
pmulhuw
outsb
jns
in
js
cmpsl
jle
adc
jg
rolb
cmc
cmpsl
int
push
mov
ds
mov
adc
or
out
pop
enter
ret
inc
dec
mov
in
sbb
mov
push
mov
enter
cmp
push
sub
out
mov
sub
popa
dec
rclb
lret
fcomi
mov
test
dec
jle
pop
cmp
mov
cltd
pop
pop
in
std
lds
ror
add
mov
push
insl
push
adc
sub
mov
mov
sub
shrb
push
cwtl
aaa
jl
inc
dec
xlat
loope
pop
mov
orl
xchg
pop
call
pop
test
cmp
enter
jnp
nop
mov
xchg
and
and
mov
inc
dec
idivb
and
pusha
cmc
pop
push
bound
sbb
xchg
stos
add
loope
fldt
cmpsl
mov
rcrl
mov
movsl
aaa
out
jbe
push
mov
stc
test
dec
cmp
xchg
in
jle
pop
imul
cmpb
mov
out
dec
jae
pop
mov
subl
adc
mov
push
mov
pop
mov
iret
fldt
dec
in
popf
or
dec
pop
dec
les
mov
fs
into
dec
icebp
push
stos
scas
jae
inc
mov
test
popf
addr16
dec
outsb
out
or
lods
in
jnp
dec
xchg
mov
sub
addr16
dec
pop
xchg
cmp
mov
fs
or
or
push
mov
mov
gs
ret
sahf
xchg
outsl
outsb
sbb
vpmacsdql
dec
lahf
sti
aam
add
add
push
jle
roll
and
cmp
ja
inc
xchg
jg
psadbw
in
fistpll
testl
add
dec
sub
jbe
dec
or
mov
mov
enter
cmpsl
pop
dec
ds
jmp
mov
xchg
dec
lret
sbb
push
dec
dec
pop
push
jl
adc
fidivrl
dec
cmpsl
js
jp
inc
adc
je
add
shrl
dec
mov
subl
sbb
adc
inc
mov
fcomps
test
inc
mov
popf
jne
dec
outsb
xlat
out
dec
sub
jp
repnz
inc
mov
mov
out
rcrl
jbe
lcall
pop
xlat
dec
jg
mov
mov
fcmovne
jnp
xor
and
sbb
dec
out
jg
sbb
mov
sarb
sbb
enter
loopne
bound
addr16
lcall
cs
add
xchg
gs
xchg
mov
and
ret
fidivs
idiv
dec
cmp
fsubrs
cmp
insb
imulb
fiaddl
inc
adcb
jge
add
insb
push
cld
dec
stos
repnz
bound
pop
movsl
sub
jl
jbe
dec
loopne
push
mov
jo
sbb
mov
jl
fstpt
mov
add
mov
mov
xchg
mov
daa
icebp
pop
outsl
cmpsb
xor
cmc
push
test
pop
cs
fnsave
dec
gs
int3
into
cmp
pop
movsl
call
iret
jl
fstl
mov
testl
lds
mov
orl
fidivrl
fcmovnbe
mov
xchg
jl
mov
inc
out
imul
out
clc
pop
jle
mov
andl
jle
scas
minps
sub
cs
jl
in
xchg
dec
mov
jp
aam
outsb
xchg
dec
jae
ljmp
pusha
leave
dec
lahf
jo
jecxz
pop
out
in
movsl
dec
sbb
add
fistps
dec
dec
xchg
int
jl
adc
dec
mov
dec
movsl
xchg
lcall
pop
dec
orb
dec
mov
cwtl
mov
sub
jmp
in
jb
arpl
cmpsb
cmp
jae
lcall
jg
into
push
scas
roll
add
or
and
scas
cmp
mov
loopne
aam
or
or
adc
outsb
jge
cmpsl
inc
fnsave
push
jp
inc
dec
icebp
jbe
movsb
loope
fwait
movsl
dec
test
stos
pop
std
dec
mov
pushf
sbb
andb
sbb
inc
push
inc
dec
push
pop
push
pop
fistpll
and
stos
testl
adc
std
dec
test
fsubrl
dec
fstpl
loop
push
lods
dec
cld
bound
repz
fwait
push
and
adc
push
pop
jns
addl
mov
jbe
sahf
mov
js
cmpsl
mov
push
ljmp
aam
movsl
enter
inc
mov
inc
lret
lcall
push
pop
xchg
lret
mov
in
jecxz
adc
lahf
jp
gs
add
inc
mov
cmp
dec
imul
sub
roll
in
loopne
in
xor
jl
cwtl
loope
std
mov
sub
out
dec
inc
repnz
mov
mov
or
push
test
out
enter
sub
dec
sbb
jmp
repnz
fnstsw
xchg
out
dec
xchg
jae
leave
add
sub
mov
loope
out
arpl
iret
adc
loop
xor
jmp
push
hlt
push
xlat
inc
dec
xor
sub
or
pop
popa
in
mov
inc
sub
xor
lahf
mov
inc
mov
and
leave
jg
adc
popa
inc
mov
xchg
aaa
sbb
push
add
ja
fwait
or
loope
mov
movsl
dec
pop
cltd
adc
fs
jb
ja
push
jle
or
dec
push
and
leave
mov
sub
add
fiaddl
pop
add
or
dec
mov
dec
adc
popf
leave
nop
dec
mov
rcrb
aaa
mov
addr16
push
jl
lahf
sub
jle
jmp
jns
xchg
dec
jecxz
mov
dec
icebp
push
repnz
ret
inc
pop
dec
fsubl
out
mov
dec
aam
jo
cmp
and
jp
cmp
icebp
pop
ret
dec
fldl
popa
fbstp
dec
jle
dec
inc
cmp
dec
dec
mov
loop
jns
shll
dec
pushf
push
push
loope
pop
xor
dec
or
repz
push
adc
push
imul
cmc
dec
mov
mov
or
add
or
lock
lret
xor
sub
in
cmp
iret
daa
stc
or
fbstp
loop
sub
rorb
jne
inc
addr16
dec
fdivrs
mov
jmp
adc
lods
sahf
scas
fxch
mov
dec
into
mov
call
into
add
xchg
jg
cmp
inc
push
push
add
fnstcw
idivl
cli
cmpsb
xchg
mov
jns
or
aam
into
fistl
push
sbb
repz
nop
xchg
inc
pop
imul
scas
dec
sub
aas
dec
pop
sbb
stc
pop
dec
xchg
loope
int
dec
jno
adc
and
out
sbbb
dec
add
ss
data16
xchg
fisttpl
sub
cmp
iret
dec
stos
mov
mov
lret
fildll
aas
cld
int3
jg,pn
std
in
or
stc
shll
jnp
mov
inc
lock
cmp
lods
cmp
cmp
or
icebp
sar
mov
stc
mov
push
pop
cmc
dec
and
inc
imul
or
add
or
ret
xchg
mov
push
push
rol
cwtl
hlt
pop
and
dec
xchg
test
jmp
adc
add
sbb
cwtl
jl
faddp
mull
inc
cmp
jl
jnp
fs
nop
mov
movsb
dec
sbb
cltd
mov
add
dec
sub
ljmp
fwait
jl
divl
dec
ret
cli
in
push
mov
mov
sub
insl
fiaddl
ds
mov
adc
dec
mov
gs
in
pop
xor
inc
mov
inc
or
aad
shll
popa
push
mov
xor
les
pop
jbe
sub
cli
or
xchg
or
push
cmp
insl
push
adc
mov
sbb
push
inc
dec
pop
ds
test
lods
push
jge
jl
cmp
mov
fcmovnbe
test
jg
sub
jge
push
inc
fs
sar
mov
stos
cmpsb
jno
nopl
ret
add
sub
xchg
scas
je
cmp
loopne
pop
xor
lock
push
or
sbb
vcvttps2dq
adc
mov
mov
sti
lret
aad
jecxz
outsl
lahf
or
xchg
bound
xor
sub
and
out
push
mov
jp
xlat
sti
out
push
adc
cs
bndldx
clc
dec
lret
pop
or
mov
imul
shlb
jbe
dec
pop
out
add
stos
les
lods
lds
mov
pop
lock
adc
shl
lret
lcall
dec
cmp
sbb
and
jb
cmpsb
adc
imul
dec
ficoms
or
pop
inc
lret
dec
xchg
out
xlat
add
dec
dec
push
movsb
roll
cmp
push
in
cmp
cmpsb
pushl
push
out
jl
mov
ret
cld
imul
sbb
push
mov
xchg
mov
outsb
mov
mov
psrlq
jg
test
cmp
jmp
data16
ret
or
push
lods
mov
lret
dec
mov
inc
pop
rcrb
insl
cmp
cmp
and
hlt
std
cmpsl
jno
adc
sub
jg
imull
add
dec
and
xchg
in
ja
dec
stos
ds
movsl
insl
cs
adc
jne
jbe
push
cmp
insl
inc
mov
add
lahf
leave
mov
xchg
icebp
lock
add
mov
mov
test
addr16
or
and
mov
fisubrl
jne
insl
stos
dec
ret
jg
sarb
jle
xchg
mov
int
adc
push
aam
fistpl
das
push
lcall
inc
inc
cmp
inc
push
cs
push
jle
enter
push
fidivrl
lods
test
sub
inc
dec
jp
jle
xchg
jb
test
cli
push
push
in
mov
jb
dec
fs
mov
scas
cs
jbe
push
lock
popa
cmp
adc
outsb
movsl
adc
lret
mov
pusha
mov
push
iret
sbb
idiv
add
in
add
xor
lods
fidivl
pop
cmpsl
jle
sub
or
xchg
test
rol
fnsave
xchg
jns
mov
push
fwait
in
out
std
sbb
std
pop
add
addb
fs
bound
dec
mov
xchg
pop
pop
insl
inc
push
test
fidivrs
mov
mov
les
dec
or
out
sbb
jb
add
sbb
mov
shlb
loopne
or
mov
lahf
adc
and
repnz
cmp
gs
das
mov
xchg
or
push
add
cmp
imul
jl
add
dec
test
inc
dec
jae
orb
mov
jno
fwait
cs
xchg
in
into
jo
jge
fnstenv
pop
push
inc
out
push
jae
jns
fwait
xor
or
mov
mov
mov
jecxz
imul
orb
sbb
inc
cmc
sbb
repz
dec
sbb
sbb
out
hlt
shrb
inc
dec
add
jl
dec
pop
xchg
repz
dec
insb
adc
popf
inc
leave
dec
push
in
mov
aad
add
xchg
subl
or
out
fmuls
decl
cs
cmp
dec
addr16
leave
jge
data16
dec
mov
sub
mov
inc
cli
fmull
xchg
adc
fwait
and
aam
xor
sqrtps
push
dec
lahf
pop
sub
daa
jns
pop
jmp
cmc
jle
cwtl
mov
scas
fdivrl
ljmp
adc
cld
jnp
movsl
push
call
pop
add
mov
aaa
lods
sbb
dec
push
sti
mov
mov
mov
dec
pop
jnp
jge
dec
and
mov
rcrb
adc
sub
inc
popf
movq
xchg
sahf
dec
mov
pop
enter
cmpsl
dec
mov
loopne
sub
test
lret
fwait
adc
dec
mov
call
or
clc
lods
xor
stc
fidivs
mov
add
pop
out
pop
cs
and
cmp
out
out
insl
icebp
xchg
sbbl
push
mov
cwtl
jb
push
dec
add
cld
dec
ret
bound
jl
inc
pop
mov
scas
jl
mov
mov
mov
in
xchg
pop
and
jg
hlt
xor
arpl
cmp
nop
jb
out
jge
cmpsb
mov
outsl
mov
shl
cmpsb
sub
mov
add
mov
xchg
sbb
xchg
stos
jl
xchg
push
dec
dec
aas
lretw
or
adc
adc
repnz
arpl
fucom
scas
sbb
ret
stos
call
bswap
jae
xchg
dec
xlat
jg
out
lcall
pop
imulb
inc
xor
mov
ja
repz
mov
cmc
jg
rolb
fwait
jle
gs
aam
jle
pop
xchg
jno
rolb
mov
outsl
popa
sbb
daa
dec
repz
fldcw
cli
xchg
loop
sub
mov
dec
lret
inc
iret
dec
cmp
mov
push
push
add
mov
or
sub
push
into
cltd
jg
mov
das
cs
movsl
or
mov
sbb
push
jge
cmp
push
sub
das
dec
aaa
inc
pop
mov
enter
sub
imul
test
push
sarl
shll
dec
test
pop
push
stc
mov
mov
xor
leave
push
mov
sbb
imul
xchg
jl
sti
xlat
leave
imul
ss
pop
add
or
cmp
lcall
fiadds
pop
cli
mov
es
stc
clc
mov
decl
orl
jl
pop
dec
stos
xchg
cli
in
sti
rol
or
mov
xlat
sub
xor
push
sbb
outsl
jmp
and
xor
mov
inc
fisubrl
aas
lock
mov
mov
mov
dec
jb
xchg
push
jmp
inc
stos
cmp
test
testl
jb
mov
imul
aad
shll
jge
xchg
cmpsl
scas
pop
dec
cmp
lods
inc
sbb
push
cmpsl
filds
iret
xchg
ss
mov
jecxz
movsb
fwait
jne
scas
or
cwtl
inc
clc
insb
rcrb
adc
fbstp
jg,pn
mov
clc
jl
int
cmp
daa
mov
in
aas
idivl
decb
int
lret
adc
cmp
mov
jg
pop
mov
sub
cmc
xchg
push
call
sbb
cltd
insb
cmp
mov
push
sub
push
popa
jg
inc
imul
sub
loope
lea
mov
xchg
mov
inc
or
sub
dec
cmp
stos
or
aaa
rorl
adc
imul
cmp
outsb
pop
data16
stos
push
mov
aam
ja
or
sub
push
mov
out
adc
pop
mov
and
xchg
fbstp
rorb
in
int3
push
mov
fdivp
dec
cmp
dec
xchg
sbb
insl
mov
or
pushf
pusha
iret
call
fwait
imul
cli
dec
or
gs
out
fldt
jl
sbb
test
adc
sub
je
daa
call
mov
jle
adc
mov
lock
movsl
ljmp
push
add
cmc
mov
jbe
cmp
xchg
add
pop
mov
mov
mov
dec
fldt
inc
inc
mov
and
mov
loopne
cld
dec
xchg
mov
push
popf
ljmp
mov
push
adc
pop
add
sbb
mov
jle
call
int
das
adc
sub
cli
inc
cmp
adc
push
mov
jb
dec
sub
xor
fwait
sub
lods
mov
sub
cli
jo
push
fimull
lret
cmc
incb
lahf
imul
dec
dec
mov
inc
or
das
shlb
mov
sarl
sbb
mov
mov
jo
gs
imul
dec
pop
mov
dec
leave
sbb
mov
xor
xor
into
jecxz
shll
sub
dec
push
pop
dec
dec
adc
aas
add
push
dec
iret
inc
lds
mov
adc
in
jmp
sbb
mov
jecxz
jle
pop
xchg
sti
cmp
lahf
repz
fsts
roll
negb
mov
push
ds
lods
stc
xor
add
movsb
in
popf
sahf
dec
jp
xchg
incb
mov
inc
shrb
cmp
in
push
repnz
jl
jb
arpl
out
fisubrl
dec
mov
mov
pop
mov
jbe
dec
aaa
pop
mov
dec
daa
push
or
scas
dec
lock
ffree
mov
mov
mov
add
imul
mov
dec
sbb
jp
and
cli
outsb
jge
xlat
test
into
dec
xchg
and
orps
or
insb
scas
daa
mov
stos
mov
dec
int3
enter
in
adc
hlt
or
stos
in
pop
cld
fsubs
inc
xor
in
sahf
adc
loope
mov
mov
fisubl
scas
jbe
dec
aam
in
inc
xchg
call
ret
js
fdivrp
shr
sub
dec
cmp
cwtl
sbb
mov
lcall
outsb
dec
outsl
xchg
cmp
sub
mov
jo
out
insb
and
pop
xchg
mov
js
imul
cld
aaa
sbbb
decl
fstpl
rorl
mov
daa
dec
jecxz
dec
jge
xor
stos
fimull
dec
and
cmp
pop
movsl
sub
dec
and
hlt
cltd
pop
jp
movsb
je
ja
push
ss
dec
outsl
out
stos
jae
pop
es
push
repnz
push
adc
push
sbb
iret
mov
aam
in
mov
xor
and
outsl
mov
movl
ret
dec
xor
iret
push
xchg
cmpsl
cmp
or
xchg
icebp
push
mov
push
mulb
jmp
inc
dec
fs
push
out
lods
xor
pop
sahf
add
xor
andl
dec
xchg
dec
cwtl
loopne
and
iret
dec
mov
add
mov
dec
hlt
mov
test
inc
mov
dec
dec
xor
dec
xchg
dec
sbb
mov
iret
pop
test
add
outsl
loopne
div
cmp
xlat
inc
fcomps
loope
mov
add
das
mov
xor
bound
in
cmp
cvtpi2ps
cs
cmp
lds
mov
fnstcw
inc
cmp
xor
and
dec
pop
repz
stos
clc
or
inc
fwait
je
or
fimull
insb
pop
in
jp
add
or
push
mov
lret
adc
mov
fisttps
dec
or
xor
jle
mov
imul
js
mov
jl
loop
add
mov
test
clc
xchg
lcall
pop
xor
jb
dec
movsl
pusha
jg
hlt
mov
sbb
and
pop
data16
arpl
into
xor
lcall
mov
ds
insb
sti
icebp
loop
xchg
imul
cmp
push
cmp
push
sbb
popa
xchg
add
insl
cld
pop
imul
mov
lea
sbb
xor
sub
cld
xchg
jbe
jle
jo
cmp
pop
inc
neg
leave
cmp
inc
into
aam
mov
lcall
xor
sbb
scas
pop
adc
inc
pop
xchg
adc
dec
dec
mov
dec
fisubs
shrb
dec
test
adc
ret
xchg
pop
jmp
xorb
inc
into
push
aad
mov
or
push
repz
daa
mov
shl
dec
dec
mov
cmc
cmp
pop
cmp
inc
cmpsb
adc
rolb
pop
cmp
dec
add
fidivrs
cmc
stos
jo
dec
call
cs
ret
stc
aas
dec
or
sbbb
sbb
and
lods
cli
inc
sbbl
or
inc
mov
dec
pop
mov
ja
dec
lret
xchg
dec
cmp
insl
jmp
dec
ljmp
popf
cmp
dec
jo
add
and
cwtl
adc
loop
lds
sub
mov
dec
dec
jp
test
mov
cltd
push
popa
xchg
push
dec
xor
aas
push
xor
jnp
lret
or
dec
je
cld
jmp
push
xchg
dec
xor
adc
add
mov
in
inc
sub
xor
mov
sbb
dec
pop
in
sbb
push
movsl
cld
add
loope
dec
insb
test
xchg
addr16
inc
into
rorb
outsb
and
or
lea
iret
jne
clc
inc
inc
sub
arpl
icebp
hlt
mov
das
outsl
jno
mov
mov
iret
insb
repz
mov
mov
xor
mov
jbe
xor
jg
cmp
inc
iret
xor
push
and
dec
loop
lret
ret
add
ss
ljmp
pop
hlt
push
mov
cs
xor
out
pop
xchg
xchg
out
jp
ret
sub
outsb
pop
dec
mov
jl
pusha
sbb
inc
das
outsb
xchg
cmp
dec
xchg
loopne
jl
jp,pn
xchg
push
scas
pop
into
pop
aas
mulb
inc
orl
dec
aaa
repz
hlt
push
cmc
scas
push
scas
mull
mov
adc
dec
xchg
mov
inc
sbb
jge
jp
test
xchg
and
out
xor
inc
lods
lock
test
and
push
inc
jne
add
fnsave
les
scas
scas
adc
dec
and
add
xor
dec
loop
push
inc
sti
jle
dec
dec
je
or
sbb
insl
insb
sar
arpl
fs
jmp
aaa
orl
jno
and
and
sti
dec
add
lret
imul
lret
lret
jg
into
mov
out
push
dec
add
les
lretw
test
lods
or
pop
dec
cmp
adc
add
dec
adc
test
cld
dec
cltd
pop
hlt
ret
subb
dec
call
aas
loop
and
scas
fmuls
addr16
jge
jb
fxch
lret
jo
cmp
shlb
std
pop
mov
jae
arpl
out
ret
inc
dec
call
das
pushf
out
shrl
mov
cmp
mov
mov
pop
and
push
iret
add
jg
sbbb
mul
push
push
out
testl
int
push
or
lret
inc
and
jle
mov
aas
pop
sbb
imul
jl
enter
cmp
adc
push
mov
xchg
dec
xchg
xchg
xchg
notl
out
idivl
push
repz
dec
jle
push
jle
popf
dec
pop
fiadds
cli
push
xor
fildll
push
and
xchg
cmp
dec
js
mov
jnp
sub
cmp
xchg
push
add
jbe
mov
pop
mov
rorb
not
inc
jge
sarl
xchg
or
inc
jp
adc
sbb
xor
in
push
add
xchg
cmp
hlt
sbb
push
dec
repz
mov
lret
fdivl
jge
adc
aam
pop
inc
xor
pop
lods
dec
jg
lods
push
lcall
mov
pusha
mov
cmp
stc
test
hlt
xchg
xchg
cmp
js
pop
xchg
xchg
scas
fcmove
dec
stos
xor
jg
data16
mov
mov
gs
adc
ficoms
jno
jb
mov
dec
sbb
addb
inc
lods
loope
dec
mov
jl
popl
inc
or
fists
add
sbb
dec
jno
rolb
and
mov
dec
mov
rcrb
inc
dec
int
sbb
enter
loop
jle
mov
or
mov
sbbb
jp
in
cmpsl
sarb
mov
icebp
sub
adc
push
int3
jo
pop
ss
mov
or
add
inc
negl
mov
jbe
pushf
inc
js
mov
dec
pop
repz
pop
push
sub
lock
in
jle
fnstsw
ja
jge
pop
outsl
cmp
cltd
push
push
or
aas
jl
cmp
stos
scas
sbb
xor
cmp
cmpsl
xor
and
cmp
sbb
jg
mov
inc
push
cs
cmp
mov
inc
push
js
iret
repnz
mov
into
jmp
cmpsl
rolb
aas
pop
in
and
nop
shll
or
loope
iret
lahf
fidivs
mov
sahf
jle
outsl
mov
and
mov
inc
xor
push
sub
push
hlt
mov
adc
mov
cmp
lahf
dec
test
aam
out
dec
mov
mov
mov
mov
pushf
dec
sub
pop
int3
dec
lods
daa
adc
dec
add
push
mov
jge
dec
cmpsb
lods
roll
pop
int3
dec
sarb
adc
lret
in
dec
pop
mov
mov
lods
call
pop
mov
dec
mov
lcall
scas
inc
add
adc
xlat
or
or
dec
fmull
pop
jo
and
adc
inc
lea
js
dec
and
push
jo
mov
inc
dec
sub
stos
pop
adc
dec
dec
shll
enter
pop
sub
test
adc
jle
lret
cmp
loop
outsb
xchg
sbb
insb
ja
and
mov
enter
fs
cmp
lods
pop
add
fwait
pop
mov
out
outsl
ja
jl
adcb
in
xchg
iret
cmp
xor
push
insb
jmp
arpl
mov
and
mov
lds
jmp
mov
jl
jnp
shlb
sub
xlat
cmp
xchg
enter
xor
dec
jl,pt
adc
lahf
ja
ljmp
in
sbb
xchg
xchg
loop
cltd
mov
push
jl
int
pop
jbe
ret
cmpl
and
mov
push
xor
arpl
add
cmp
and
add
out
push
jo
sbb
fistpll
add
lock
das
popf
lods
push
mov
ret
aam
les
and
jo
fisubrl
aas
cs
push
mov
daa
lret
xor
add
pop
scas
daa
fistps
mov
loope
sbb
fidivrl
cli
push
repz
push
cmp
sub
iret
mul
cmpl
pop
loop
iret
inc
adc
inc
out
jno
rcrb
jnp
mov
add
cmp
dec
je
inc
dec
jle
aad
cmp
jp
fisubrs
jmp
iret
mov
xchg
sub
das
mov
xchg
mov
adc
movsb
fisubs
repnz
sarb
scas
add
lock
icebp
cmpxchg
clc
push
push
sub
cmp
xor
ds
mulb
jb
mov
arpl
push
lahf
jae
push
push
jnp
pop
int
xchg
jb
int3
dec
cs
fcmovne
imul
leave
ljmp
inc
lret
or
push
xchg
mov
xor
les
dec
out
push
and
movsb
jmp
aam
mov
cltd
cmp
pop
divb
inc
test
dec
test
js
sbb
frstor
sub
xchg
pop
lret
jle
repnz
add
mov
dec
jo
fs
mov
pop
jl
fisubrs
and
sbb
inc
js
ret
je
inc
stos
jl
cmc
mov
cmp
inc
and
sub
scas
pop
cmp
popa
push
cmovo
cmp
cltd
mov
lret
xchg
adc
test
or
dec
jns
inc
sbb
insl
pop
adc
sub
add
sahf
daa
inc
std
sbb
add
insb
push
and
cli
es
jmp
divl
adc
repz
fdivl
sbb
dec
sarb
dec
push
jg
jnp
xor
push
jle
js
lds
out
in
xchg
mov
aam
inc
or
or
push
mov
test
cmpb
sti
jle
push
jle
rcrl
push
sbb
inc
sbb
cli
pop
sbb
scas
and
jne
stos
and
add
pop
dec
dec
jmp
mov
jl
das
inc
ljmp
pop
push
xchg
jno
push
mov
imul
mov
dec
inc
push
aas
push
inc
fwait
out
sub
popf
data16
clc
cmp
scas
adc
pop
dec
imul
xchg
pop
stos
adc
lods
push
fimuls
adc
popa
cs
sub
xchg
sub
aas
mov
add
cmp
dec
aam
popa
xlat
mov
and
sub
faddp
jl
adc
dec
sub
outsl
sub
repz
outsl
inc
enter
ds
xlat
insb
dec
imul
dec
mov
xor
cmp
mov
inc
jno
add
pop
in
icebp
jl
mov
push
cmp
dec
adc
mulb
mov
xchg
adcb
out
dec
loope
inc
add
rcpps
push
iret
mov
dec
mov
das
dec
mov
mov
shrl
and
and
push
into
jp
pushf
js
test
and
dec
mov
jns
inc
dec
adc
out
lret
mov
popf
xchg
dec
mov
pop
jmp
add
sbb
addr16
cs
shl
xor
popa
or
mov
and
leave
mov
xchg
je
mov
pop
dec
stos
sbb
mov
lahf
xor
xorl
loope
dec
sub
push
pop
inc
ds
outsl
dec
jp
rcrb
dec
push
mov
mov
or
dec
bound
fs
dec
test
adc
pop
adc
xor
or
cmp
push
dec
fwait
or
dec
pop
sbb
test
push
cmp
mov
ds
jae
dec
push
jmp
cmpsl
dec
inc
xor
push
cwtl
inc
into
pop
jno
fstpl
mov
push
dec
dec
cmc
in
clc
pop
mov
testb
dec
jno
and
clc
rolb
dec
movsl
fs
insl
lret
xchg
ret
dec
xlat
pop
inc
adcb
call
jmp
mov
fcoml
in
mov
dec
insl
fcomip
or
cmp
pop
jge
mov
jg
outsb
fcmove
cltd
jge
bound
inc
ficompl
lds
jle
stc
push
gs
int
jae
xchg
mov
and
aam
cmp
fcomi
ret
shrl
dec
push
dec
lcall
sarb
xchg
or
mov
cmp
jns
repz
dec
dec
pop
je
ret
push
cmc
cmp
xchg
push
sub
mov
jmp
aas
fsubr
and
push
mov
jecxz
mov
ficoml
arpl
mov
jp
loop
mov
int
push
dec
movsb
mov
pop
aaa
fstpt
arpl
stos
jmp
mov
mov
inc
push
je
dec
jle
xchg
and
out
inc
outsb
pop
sub
lds
pusha
mov
cmpsl
aas
push
xchg
push
inc
mov
sub
iret
mov
das
sbb
xchg
sub
aas
movsl
ss
cwtl
dec
fstp
pop
scas
mov
aaa
pop
mov
or
sbb
push
and
andl
arpl
mov
mov
mov
inc
das
inc
jg
std
mov
mov
pushf
dec
lret
push
cmc
push
inc
lret
mov
inc
xchg
jle
out
pop
adc
cmp
pop
jle
add
fwait
mov
sbb
sbb
inc
mov
fidivrl
dec
inc
adc
dec
mov
xor
xor
inc
aas
movhps
mov
jno
add
cmp
daa
adc
mov
inc
jg
inc
xor
fmuls
mov
dec
out
xchg
sarb
in
pop
xor
ror
sahf
scas
pop
xchg
or
in
inc
adc
insl
mov
scas
jns
or
fisubrs
and
xchg
mov
push
mov
cmpsb
std
jbe
aad
test
push
lock
imul
pop
mov
out
xor
fbld
sahf
push
out
lret
jp
fucomi
hlt
xchg
sarl
leave
and
addr16
mov
add
sub
dec
mov
pop
cmp
mov
lods
movsb
lcall
iret
aas
dec
in
shl
subb
pusha
push
and
push
mov
push
dec
divps
xchg
cwtl
jb
fdiv
imulb
add
orl
dec
xchg
inc
stos
cmpsl
jl
sar
mov
jnp
ds
popa
pop
lret
mov
je
and
decb
call
push
sbb
out
mov
push
or
jle
mov
movb
daa
lea
add
test
jae
popa
test
and
stos
adc
and
dec
push
lods
addl
iret
xchg
sahf
sub
mov
dec
fdivrs
push
push
movsb
fimull
out
jo
add
imul
xchg
jle
add
fldt
pop
dec
jae
and
mov
popa
sbb
mov
adc
std
cmp
mov
arpl
inc
roll
dec
push
pushf
dec
sbb
adc
push
ret
test
int3
inc
push
jg
into
cmp
inc
repz
rcll
xchg
scas
int
dec
fildll
and
jo
jl
and
push
sub
mov
dec
loope
jmp
xchg
mov
rorb
int
testl
push
sub
fwait
mov
cli
ljmp
mov
pop
sbb
push
mov
cmp
pop
dec
lahf
jle
rolb
lret
pop
out
pop
push
aaa
call
mov
popf
ljmp
adc
or
mov
and
and
add
faddl
push
push
shll
stc
lods
sbb
jb
xor
dec
sub
jo
pop
pop
cmpl
imul
xor
pop
add
lret
pop
fisttpl
fxch
iret
cmp
fistpll
push
cld
pop
je
dec
out
add
les
mov
dec
stc
cmc
in
outsb
sub
aad
xlat
gs
scas
popf
pop
and
push
loopne
dec
shll
push
addr16
pop
cltd
dec
out
push
mov
push
push
in
push
insl
xchg
dec
push
adc
dec
fnstcw
rcr
lods
test
xor
sbb
cmp
mov
push
ret
dec
icebp
repnz
pop
add
xor
adc
dec
sti
loope
test
or
push
dec
in
push
sub
stos
mov
jb
dec
fidivl
icebp
adc
inc
inc
xor
std
cltd
into
stos
cmp
sub
inc
lods
mov
adc
fs
inc
jl
sbb
dec
outsb
sub
aaa
test
add
inc
dec
mov
insl
sub
repz
hlt
bound
adc
mov
adc
cmp
inc
add
sbb
pop
pop
popa
outsl
into
sbb
dec
sub
repnz
pusha
adc
or
iret
mov
adcb
mov
dec
jmp
ret
or
mov
fwait
sub
mov
lods
jp
repz
ret
sub
inc
enter
int
fists
and
scas
popf
xchg
xchg
outsb
sti
push
dec
lea
les
and
mov
fstpl
dec
cmp
outsl
pop
add
cltd
jp
jle
mov
jns
xor
dec
or
and
xchg
lret
add
dec
cwtl
dec
add
rcrl
pop
push
sub
lods
in
pop
movsb
xchg
test
dec
popf
cmp
testl
mov
push
sbb
jp
or
scas
int3
or
mov
fcoms
inc
into
inc
mov
out
dec
jae
push
es
xor
jl
test
mov
push
jge
fwait
xor
fcoml
es
cmp
pushf
lds
sbb
or
jmp
inc
cwtl
push
dec
ror
adc
inc
ret
xchg
push
arpl
fcoml
movsl
dec
cmc
cmpsb
call
dec
push
stos
pop
push
bound
sub
lahf
lea
inc
dec
rcr
jb
or
push
aam
lock
jl
lods
inc
cmpsb
pop
stos
lret
push
push
sbb
pop
aad
inc
loope
dec
xchg
movsb
leave
or
arpl
fs
xchg
aas
dec
or
pop
xor
add
jp
push
xchg
ret
jbe
dec
mov
rcr
add
sahf
mov
xchg
dec
inc
lahf
push
cltd
mov
jmp
jmp
and
out
shl
sbbl
popl
mov
js
push
cmp
jle
pop
addr16
fnstcw
ret
inc
fwait
and
dec
and
lea
leave
and
push
or
sbb
push
ds
into
pop
data16
xor
notl
push
je
push
dec
or
popa
dec
fstp
adc
call
es
cwtl
gs
aam
stos
pop
adc
mov
xchg
in
mov
mov
aad
inc
or
sbb
sbb
push
repnz
sub
xchg
cmpsl
dec
arpl
push
sarl
xchg
xchg
sbb
es
dec
les
cmc
mov
in
dec
loope
test
cwtl
out
ljmp
pusha
inc
aas
sub
mov
mov
adc
push
or
mov
je
pop
dec
mov
or
ret
out
and
adc
cmp
stos
mov
inc
dec
jno
pushf
aas
sti
cmp
insb
pop
test
into
loope
adc
sbb
pop
fisttpll
dec
into
adc
dec
jge
arpl
in
push
mov
inc
cmp
mov
dec
movsb
pop
pop
push
cmpsl
xchg
dec
sahf
xchg
cmp
mov
pop
sub
mov
cli
cmp
movlps
or
xchg
or
mov
cmc
fnstsw
push
pop
outsl
aas
sbb
mov
rolb
fists
and
xor
ret
lcall
push
dec
sbb
xchg
push
dec
and
jmp
mov
enter
xor
mov
mov
cmp
fistpl
cli
sbb
jecxz
aad
ljmp
dec
in
mov
push
jmp
push
push
dec
mov
cmp
dec
sub
cmp
ud2
repnz
jle
xor
jp
out
fwait
dec
adc
arpl
out
hlt
push
dec
popa
dec
and
mov
sti
les
mov
dec
add
pop
pusha
ja
pop
sub
mov
cltd
dec
mov
in
js
sbb
dec
pop
cwtl
sub
test
out
dec
lods
pop
push
xchg
stc
inc
or
cld
cld
xor
leave
pop
div
xor
movsl
dec
xchg
jl
repz
inc
pushf
add
ds
ljmp
sub
dec
movsl
pop
add
xchg
clc
jmp
test
fidivrl
iret
sti
sub
mov
mov
inc
push
repnz
mov
pop
pusha
dec
xor
sbb
adc
mov
mov
lds
mov
adc
insl
add
and
xor
add
add
out
inc
sub
std
or
xchg
cmp
push
scas
xchg
adc
pop
mov
stc
rorb
xchg
rolb
subb
cmp
cmp
scas
xchg
mov
into
mov
mov
xor
inc
inc
and
dec
hlt
mov
inc
sub
dec
push
loop
iret
cmpl
push
add
jle
scas
cmp
push
aas
outsl
ret
push
iret
xor
hlt
sbb
push
insl
dec
mov
rcll
mov
icebp
push
add
fs
movsl
mov
bound
ds
sbb
adc
xchg
jnp
imul
inc
je
dec
mov
adc
rclb
push
into
xor
scas
cmp
sbb
lods
jns
data16
xor
and
mov
dec
or
xor
out
dec
jmp
fisubl
scas
pshufw
aam
fs
mov
inc
jle
or
stc
pusha
dec
into
sub
pop
ret
jo
add
lea
mov
adc
mov
fisttpl
mov
cwtl
mov
incl
add
mov
cmp
cmp
mov
std
lds
inc
jg
mov
xchg
dec
fwait
cmpsb
push
pop
test
fadds
jmp
dec
cmp
ficoms
push
lds
test
pop
in
loopne
dec
dec
pop
in
mov
pop
roll
div
fldcw
fcoms
dec
mov
fisubrl
cmpsl
sub
mov
dec
daa
push
inc
sub
addb
stos
xor
into
outsl
mov
dec
add
xchg
test
dec
ja
or
lcall
dec
test
dec
es
adcl
sahf
adc
cmp
jno
scas
decb
pop
jle
and
pop
addr16
lret
aas
std
jno
add
xchg
dec
mov
xchg
movsb
dec
dec
xor
aaa
xchg
jg
cmpsl
sub
xchg
push
outsb
pop
sub
int3
add
push
dec
jae
dec
mov
pop
outsl
xor
stos
push
push
sub
movsb
push
add
mov
ja
mov
push
push
mov
pusha
jl
mov
xchg
testb
cmp
jp
jge
xchg
popf
mov
push
and
mov
mov
inc
lock
pusha
xorb
jl
pop
sti
fs
cmp
xchg
jle
adc
add
xor
xchg
and
in
sub
sbb
jge
bound
cmpb
mov
jl
sub
imul
inc
ret
cs
jg
or
cmp
fldl2e
push
outsl
and
stos
mov
dec
inc
lahf
and
dec
into
fisttpl
lret
jl
cmc
es
push
stos
lea
loopne
test
loop
dec
jl,pt
out
push
push
jp
lret
xchg
stos
out
fildll
push
insb
clc
nop
sbb
arpl
lahf
enter
mov
inc
outsb
jno
icebp
mov
pop
cltd
cmc
addr16
into
sub
fists
nop
xchg
cmp
and
movsb
ret
aaa
dec
inc
xchg
cli
mov
dec
sub
int
leave
fisubl
dec
push
cs
cld
into
mov
jl
mov
popf
jp
xlat
xor
mov
mov
inc
jg
icebp
into
sub
mov
loop
test
shlb
pushf
ljmp
jle
xchg
jl
and
daa
repnz
cmp
in
test
mov
xchg
push
or
push
sbb
sbb
add
mov
pop
adc
stos
es
gs
dec
jo
jg
push
xor
adc
incl
iret
jl
mov
push
mov
sahf
cmpsl
into
pusha
outsb
xchg
xchg
sub
lret
xchg
jle
aam
mov
dec
cmp
sti
pop
in
gs
xor
xor
xlat
lock
aaa
sub
mov
push
out
xchg
cmp
mov
insb
xor
inc
sbb
scas
dec
shrb
jg
sub
jo
cmp
roll
adc
sub
in
adc
jae
loopne
ss
adc
jae
popf
js
mov
inc
xor
and
xor
ds
push
adcb
rorl
shl
mov
mov
shr
dec
pop
push
sbb
cmp
dec
inc
je
into
mov
mov
lea
adc
xchg
dec
loop
sbb
sub
pop
jge
or
dec
xor
in
jnp
cmp
and
dec
inc
enter
mov
sarb
je
data16
mov
and
mov
inc
pop
adc
mov
pop
mov
cltd
inc
vrcpps
pop
popa
jae
mov
dec
pop
add
mov
dec
sub
pop
gs
inc
mov
fs
movsl
mov
ret
lahf
jne
insb
mov
xchg
inc
jle
xor
adc
cmp
outsl
sbb
int3
incb
jbe
repnz
test
or
mov
inc
lods
cwtl
xlat
into
xor
aaa
cmp
cld
dec
and
jno
dec
jp
into
mov
inc
ljmp
outsb
cwtl
push
push
dec
adc
cmpsl
sahf
dec
mov
fimuls
jb
mov
sbb
lcall
stc
xor
push
test
dec
out
fdivp
xchg
pop
js
shl
jne
jne
push
in
sub
xchg
cmc
imul
mov
add
jg,pn
dec
mov
mov
fwait
mov
ljmp
scas
cs
mov
inc
xor
jl
jns
aaa
fwait
sbbb
jle,pn
pop
ret
sub
fistpl
mov
push
int
shrb
push
xlat
mov
mov
ljmp
dec
xor
push
xchg
sbb
mov
rcll
jmp
mov
adc
sbb
test
das
and
fnstsw
aas
cmpsl
mov
mov
xor
les
gs
cmp
sahf
jae
sub
repz
pop
insb
and
add
cmpsl
cmp
jg
jg
mov
popf
xchg
add
push
sub
out
ficompl
loopne
cmp
mov
mov
sub
icebp
cmp
and
sub
je
hlt
jle
jno
sbb
xchg
mov
iret
or
push
stos
jo
add
addr16
fiadds
out
leave
ljmp
outsb
int3
inc
out
add
daa
sub
cmc
xchg
sbb
repnz
insl
push
dec
clc
pop
stc
int3
xchg
mov
xchg
ficomps
xchg
rolb
mov
into
dec
jg
xchg
mov
cld
loope
cmp
sbb
add
jb
jle
pop
dec
in
jecxz
insb
test
jl
sbb
fdiv
les
arpl
inc
inc
inc
test
jle
jge
in
sub
bound
mov
je
cmp
mov
ficompl
gs
es
jp
or
jg
and
sbb
test
gs
sub
xchg
xor
mov
lcall
fdivp
in
cmp
add
adc
jmp
lret
dec
sub
cmp
fnstcw
cwtl
pop
jp
inc
push
adc
fmuls
xlat
mov
testl
fwait
inc
jl
sti
bound
fs
int3
push
rcl
inc
movsb
mov
add
add
jp
xor
jle
jge
sbb
mov
jge
jnp
mov
xchg
lret
scas
ljmp
scas
int
cmp
and
and
sub
ja
mov
cmp
add
insl
into
sub
ret
xor
ret
popf
xchg
std
dec
lret
in
sub
bound
jmp
adc
xchg
xchg
lods
sarb
das
jle
pop
xchg
out
cmp
cmp
rolb
cmpsb
dec
lcall
jle
sti
sti
cmp
stc
push
or
mov
sub
and
mov
pop
les
inc
add
cmpl
cmp
add
inc
mov
and
out
fnstenv
aaa
ss
into
andl
jmp
dec
repz
xchg
lods
add
xchg
scas
lods
nop
jge
movmskps
push
xor
inc
mov
cmp
inc
aam
pop
lret
and
hlt
mov
cmc
aaa
mov
cs
jle
std
xchg
inc
sahf
and
dec
pop
ficoms
mov
cmc
jge
xchg
in
lea
aas
xchg
mov
imul
cmc
jns
xchg
inc
aas
mov
xor
int3
cmp
lock
mov
repnz
pushf
dec
add
xor
adcl
ret
in
fstpl
mov
xor
aas
addb
sub
add
dec
test
inc
dec
pushw
ljmp
dec
mov
push
mov
cmpsl
dec
enter
sarl
push
fmull
imul
mov
dec
fistpl
loope
and
lahf
dec
ret
jae
leave
mov
test
jo
xor
insl
loopne
sub
frstor
ljmp
add
add
mov
mov
sub
outsl
or
jmp
hlt
bound
test
mov
jo
imull
dec
sbb
leave
jl
xchg
clc
je
jo
popf
es
repz
ficompl
cmp
and
dec
inc
add
into
addl
stc
out
jbe
xchg
jbe
gs
dec
cmp
movsb
push
push
dec
arpl
xor
icebp
mov
mov
sub
mov
inc
xor
popa
rcrl
pop
xchg
std
cs
xchg
inc
mov
aaa
sub
pop
dec
pushf
jne
cs
lcall
xchg
xor
testb
sbb
cmp
push
aam
fbstp
call
push
pop
mov
dec
lods
cmp
mov
jmp
dec
push
jno
scas
imul
out
xorb
xchg
dec
in
scas
mov
pusha
jg
dec
rcrb
push
adc
or
mulb
add
push
sbb
cmp
outsl
and
lock
dec
int3
and
push
dec
sub
push
jecxz
dec
dec
sub
dec
mov
sub
mov
xor
dec
or
and
dec
push
test
lods
cmp
dec
dec
mov
jl
testb
fbld
leave
mov
mov
movsl
inc
pop
outsl
test
enter
dec
cmp
hlt
pushf
imul
je
jl
push
sar
jae
adc
insb
or
mov
testb
xchg
in
dec
sarl
push
dec
ds
repz
fistpll
mov
pop
pop
push
dec
jl
jae
xor
arpl
clc
dec
idivb
or
xor
fildll
mov
leave
pop
mov
jle
jl
icebp
jl
adc
xor
mov
cmp
ds
call
das
das
fwait
jno
push
push
push
jle
insl
pop
into
xchg
jg
add
dec
dec
cmp
sbb
push
xor
xchg
inc
jg
mov
repz
dec
jle
and
ds
fucomip
mov
ret
daa
jg
and
testl
mov
sub
mov
jns
js
insb
push
cmp
xor
into
imul
pop
and
push
pop
shld
lods
into
aas
jg
push
fimuls
fildll
dec
lcall
sub
lret
fdivrl
out
pusha
scas
inc
aas
shlb
xor
ds
mov
add
sbb
mov
outsb
stos
mov
jle
inc
dec
insb
movsl
jl
mov
and
aam
adc
sbbl
and
popa
mov
adc
lods
cmpsb
inc
jl
xor
inc
mov
lret
pop
loope
mov
push
int
mov
mov
testl
mov
outsl
pop
scas
mov
cs
mov
xor
sahf
shr
mov
jg
scas
icebp
pop
hlt
das
dec
aaa
daa
mov
std
add
sub
mov
sbb
sub
aas
or
dec
int
aad
sbb
outsl
ret
pop
lods
push
dec
test
push
in
enter
inc
mov
xor
lahf
xor
mov
jl
cmp
cmp
fsubp
jle
adc
sub
push
outsl
sub
pop
inc
fiaddl
jno
out
jle
das
cmp
sub
inc
cmp
add
and
sbb
rol
adcl
testl
loop
gs
inc
cli
and
out
adc
arpl
fdivr
xchg
jb
imul
mov
jmp
jo
into
push
mov
fsts
dec
test
mov
push
dec
add
jmp
and
pop
dec
jmp
lcall
push
mov
insl
sub
push
fists
sub
dec
dec
pusha
adc
xor
or
push
sbb
outsb
pushf
test
pop
mov
pop
xor
dec
jmp
lea
dec
mov
jae
sahf
mov
scas
addr16
mov
mov
push
mov
loop
and
mov
mov
adcl
aaa
mov
es
jnp
sti
push
mov
stc
test
dec
push
loop
mov
adc
test
shrb
xorb
dec
fisubrl
dec
or
cmp
cmp
add
outsb
xor
or
push
push
sarl
mov
push
adc
sbb
pop
mov
cmp
mov
push
imul
stos
inc
sub
pop
shlb
daa
or
sub
mov
sbb
insb
mov
push
pop
sarb
xlat
mov
fisubrs
dec
and
repnz
movsl
adc
leave
sbb
test
icebp
mov
cmp
push
mov
insb
rclb
ficoml
ret
pop
and
push
jl
add
push
adc
addr16
cmp
dec
fs
or
push
nop
jge
aam
jecxz
mov
test
xchg
iret
jecxz
in
test
jnp
dec
sbb
jg
in
repz
shrb
dec
out
mov
data16
pop
xlat
fs
pop
and
push
dec
jp
add
push
xchg
fmuls
loop
xor
xor
test
push
cmp
out
lods
push
cmp
mov
jg
jbe
sbb
mov
cmp
mov
int3
mov
pop
or
inc
push
pop
or
jg
pop
icebp
test
loope
jle
cmp
mov
outsb
pop
call
jmp
inc
xchg
mov
test
cmp
test
scas
cli
fmulp
or
mov
push
jge
inc
push
insl
and
jl
xor
mov
pusha
inc
cli
mov
popa
sbb
xchg
xchg
fdivrs
data16
sahf
add
out
test
cld
lret
testl
lods
cmp
test
sbb
mov
sahf
dec
push
and
dec
jecxz
mov
adc
xchg
mov
push
loope
sub
and
cmp
inc
pop
inc
jmp
dec
mov
in
cmp
jnp
imul
xor
stos
packuswb
jns
jmp
or
jle
sub
pusha
dec
xchg
ds
cmpsb
xor
cs
cmp
hlt
and
in
jp
call
idivb
sbb
mov
mov
movsl
mov
dec
fsubr
sub
mov
sub
stos
push
pop
out
jl
stos
cs
xor
iret
dec
add
pusha
jle
fsubl
dec
aaa
es
sub
mov
cmp
outsb
mov
xor
inc
out
dec
icebp
popf
ljmp
inc
cmpsb
ficoms
outsb
xor
into
dec
pop
repnz
aad
aam
push
test
cmp
or
dec
sbb
das
pop
insl
cmc
dec
aam
cwtl
fiaddl
std
jl
popa
lcall
test
adc
jle
xchg
ficomps
push
lret
imul
push
xor
fs
bswap
cmp
shl
add
lods
dec
fsubrs
fstpl
daa
orb
ret
add
or
dec
lcall
cmp
xor
into
cmp
xchg
dec
fwait
sarb
out
loop
xor
loope
add
xchg
xor
and
push
dec
arpl
aad
dec
cltd
jg
jp
dec
out
add
xchg
mov
int3
dec
cmp
push
mov
mov
lcall
dec
add
rcrl
mov
dec
push
sub
call
or
test
inc
dec
bound
ja
fsubrs
mov
enter
ret
cmp
mov
pusha
cs
mov
stc
sub
inc
or
dec
jno
cmp
add
mov
or
mov
movq
or
aam
sub
les
xchg
test
pop
addb
xor
das
xlat
sti
cmp
mov
sti
or
or
push
int
and
mov
stos
xchg
cld
adc
xchg
jb
pop
mov
andl
adc
jle
xchg
cmp
popa
test
sbb
jg
cli
sub
mov
adc
mulb
daa
fstl
leave
icebp
cmp
inc
push
repnz
jge
test
or
sub
inc
idivl
ds
or
ds
aas
jle
mov
sub
adc
ds
fidivrs
mov
idivl
lret
add
movl
mov
out
xchg
adc
das
xlat
sub
into
mov
mov
xchg
call
jge
mov
je
sbb
jg
adc
fldenv
xor
hlt
push
push
pop
dec
xchg
cmp
push
lea
jae
mov
inc
les
mov
sub
dec
cmp
fmul
insl
incb
pop
sbbb
and
dec
sub
xchg
scas
dec
push
dec
dec
lahf
arpl
dec
lods
out
or
pop
cwtl
movb
dec
insl
das
aaa
jno
fwait
imul
mov
adc
cmp
push
or
divb
enterw
insb
std
psllw
nop
inc
out
mov
jecxz
xchg
bound
lahf
push
ret
jl
adc
dec
fimull
jecxz
dec
fwait
repz
cld
cmp
dec
inc
lods
leave
jae
xor
adc
mov
aas
jbe
dec
mov
ficomps
ret
mov
addb
mov
sbb
outsl
and
mov
imul
xchg
ret
mov
cs
cmpsl
jle
icebp
fisttps
xchg
jge
lods
std
sub
jg
sub
jecxz
cmp
scas
movsl
test
in
jle
add
iret
dec
hlt
xchg
and
pop
fs
push
test
cmc
mov
sbb
aaa
jl
dec
aam
mov
lret
fwait
scas
in
loopne
aam
push
mov
push
xor
or
aam
lods
push
test
jnp
xchg
jmp
or
adc
scas
jge
adc
mov
jl
mov
fdivl
data16
dec
jnp
daa
pushf
inc
pop
dec
pop
and
in
cwtl
jle
cltd
pop
dec
stc
hlt
add
cmc
or
push
xchg
dec
xchg
lcall
imul
mov
outsb
flds
rcll
sub
mov
fwait
mov
jne
ret
push
mov
outsb
push
mov
cmp
test
add
daa
out
stc
cmp
jg
push
cmc
addr16
aaa
ja
xor
mov
or
lcall
out
mov
sti
or
cmc
push
push
sbb
adcb
push
pop
mov
cmp
cmp
pop
dec
and
in
repz
jnp
gs
fabs
sbb
stos
ret
xchg
mov
dec
jl
outsl
mov
lods
adc
vaddps
adc
inc
xor
testb
mov
iret
inc
shrb
mov
fs
push
mov
jl
and
xor
dec
pop
sahf
fistps
mov
cmp
in
lods
imul
fwait
aad
or
dec
sub
cs
repz
negb
out
aaa
aaa
sbb
xorl
arpl
mov
ds
int
dec
loope
jp
test
mull
add
xchg
mov
add
xchg
fsubs
and
lret
add
movsl
add
aaa
mov
xchg
ds
cmp
jmp
mov
add
push
pusha
dec
mov
jne
cltd
aaa
shrb
mov
cmpsl
stos
cltd
cmp
mov
jg
mov
sbb
push
push
int3
xchg
fadd
pushf
adc
sub
aaa
push
sub
sbb
sub
xchg
xor
mov
inc
jge
xchg
iret
arpl
mov
insb
mov
test
and
stc
dec
pop
jp
ds
add
jo
adc
sub
jae
into
dec
xor
mov
lret
aas
mov
popa
nop
dec
jl
hlt
inc
int3
mov
cmp
xor
test
jg
jne
mov
int
inc
mov
and
fucomp
and
xlat
sti
xchg
mov
jmp
test
in
and
in
std
xlat
dec
jne
or
mov
and
mov
jno
and
pop
dec
mov
shr
orl
dec
testb
dec
pop
push
test
dec
cmp
outsb
mov
pop
jle
cmp
push
fcmovnbe
jl
imul
popf
out
cmpsl
sbb
jl
push
sbb
syscall
aas
arpl
sub
pop
scas
sbb
dec
loope
or
or
jmp
movsl
xchg
movntq
out
outsl
aad
ror
or
mov
out
jne
sub
jecxz
xor
ret
data16
xchg
xlat
jge
insl
and
inc
gs
lods
inc
xchg
fwait
stos
mov
fidivs
sub
jns
and
stos
out
xchg
jp
lret
and
add
jl
cs
sbb
xlat
lahf
jg
leave
neg
xchg
out
mov
dec
xor
and
scas
inc
lods
ret
sbb
pop
dec
stos
jg
sti
pushf
fs
mov
xchg
mov
dec
xor
sub
mov
add
mov
push
mov
mov
add
push
cmp
js
stos
bound
xchg
mov
inc
es
hlt
aaa
sub
jae
bswap
stos
dec
cmpsl
loopne
inc
and
dec
ret
inc
jg
andl
jno
and
stos
scas
lods
push
incl
jb
pop
rclb
repz
xchg
jge
int3
sub
scas
mov
mov
js
pop
pop
mov
mov
icebp
mov
aad
stos
daa
cli
out
adc
jg
int
add
xchg
pop
jg
dec
enter
jle
mov
out
xor
mov
test
mov
std
jnp
ds
pushl
pop
rorl
cmp
addr16
add
jno
scas
xor
and
jmp
iret
xchg
mov
enter
out
jbe
std
ret
jp
add
cmpsl
ss
mov
aas
sub
inc
jo
test
dec
jle
push
les
mov
cmp
in
aaa
adc
hlt
lea
sub
cmc
inc
mov
popf
inc
daa
lods
jbe
mov
cmp
adc
ss
xchg
jl
mov
in
imul
aaa
jae
inc
jl
data16
sub
lea
dec
pop
inc
fstpl
pop
add
and
sahf
jb
dec
add
jge
outsl
mov
mov
xchg
jmp
mov
mov
inc
pop
cli
out
lret
adc
call
lds
movsb
mov
pop
or
addr16
add
rorb
ds
dec
ljmp
das
test
orl
icebp
jne
dec
push
jo
scas
aaa
inc
ja
dec
or
jle
add
sub
rcll
pop
dec
pushl
scas
mov
leave
rorl
add
cmp
sbb
stos
subl
xchg
andb
test
dec
add
cmp
pusha
scas
inc
jle
dec
xor
jns
jno
roll
add
int
pop
cmp
daa
mov
push
negl
mov
dec
aad
sbb
dec
cmc
dec
add
push
adc
and
dec
add
out
or
jl
ret
mov
aaa
mov
or
lcall
daa
xor
cmpsl
fnstcw
push
shl
in
in
andb
hlt
test
push
bound
add
xlat
pop
and
icebp
mov
out
sbb
dec
and
bts
daa
adc
pop
or
mov
xchg
lea
dec
push
sbb
es
sarl
cli
mov
mov
int3
mov
xor
xor
add
push
cs
stc
adc
mov
cmp
dec
mov
xor
fldt
pop
dec
sub
sub
popl
dec
sti
out
clc
loope
fstl
pop
jg
xchg
ret
out
cmp
dec
aam
in
dec
sbb
sub
xor
xchg
add
or
scas
push
cli
ret
dec
sahf
pop
cmpsb
mov
gs
jno
cmovle
mov
and
pop
fldcw
dec
loope
hlt
cmp
xor
fildl
mov
adc
clc
cwtl
jnp
imul
ljmp
jge
mov
push
dec
cmc
mov
xchg
fisttps
sub
loope
cmp
loopne
pop
out
dec
icebp
pop
fstpt
pop
fsubrl
js
mov
add
out
dec
xor
xchg
arpl
jg
dec
mov
sarl
subb
shrb
sub
roll
and
incl
or
and
out
arpl
adc
nop
inc
andb
mov
leave
jl
shl
fmull
push
cwtl
fistl
insl
mov
dec
in
stos
leave
xchg
ds
movl
dec
push
xchg
dec
cmp
dec
pusha
mov
push
insl
pop
xchg
clc
jbe
xchg
mov
mov
inc
daa
pop
push
mov
dec
int
fcmovnbe
sbb
xor
pop
xchg
int3
dec
push
lahf
loopne
into
lea
lock
cld
ficompl
xchg
jnp
aaa
dec
outsl
jle
push
inc
and
shrl
xchg
sub
push
outsb
xor
jns
adc
int
xchg
pushf
enter
iret
xor
stos
xchg
cmp
dec
mov
aaa
xlat
mov
push
dec
int3
ljmp
push
push
rcrb
cmp
add
mov
jl
jb
jnp
or
adc
movsl
sbb
pushf
add
xor
inc
jae
inc
andb
xchg
fcmovnb
mov
xor
adc
test
push
outsl
dec
outsb
pop
and
lcall
add
mov
fwait
mov
pop
dec
xchg
pusha
jbe
dec
pushf
jmp
addr16
jecxz
pop
pop
sub
outsl
test
push
ret
insl
cmp
mov
dec
sbb
hlt
add
sub
ret
cs
dec
into
or
xchg
sub
cmpsb
adc
xor
or
inc
dec
mov
lret
xchg
and
sbb
divl
cmovle
dec
lods
mov
sarl
inc
pop
orb
push
adc
fs
fistpll
adc
and
add
xor
rol
aaa
push
int
jmp
out
jno
call
dec
cwtl
test
leave
fcomps
adc
into
fs
addb
sbb
inc
xchg
or
pop
pop
mov
xlat
mov
pop
dec
xchg
les
or
outsl
push
sub
mov
mov
mov
pop
int
dec
test
les
leave
sub
jp
add
mov
push
dec
dec
aas
inc
int
int3
imul
xor
jbe
jp
ljmp
iret
icebp
fldl
lods
cs
dec
sbb
mov
or
ss
inc
xchg
dec
add
xor
pop
dec
aas
inc
out
daa
shl
sbb
sbb
mov
dec
push
repnz
inc
or
dec
hlt
nop
cmp
xchg
out
cmp
dec
jl
push
jnp
imul
mov
pop
data16
mov
clc
mull
mov
pop
cmp
movsl
into
xchg
mov
aam
bound
outsb
sti
out
push
repz
hlt
jl
addr16
xor
xor
mov
bound
imull
inc
jg
and
jo
lret
cmp
sbb
cmc
push
fbstp
cmp
imul
inc
mov
mov
mov
add
scas
scas
jecxz
xorb
xchg
pop
dec
or
into
jp
adc
cmc
cmp
stos
mov
or
fisubrl
jge
cltd
aaa
addr16
push
imul
aad
shll
dec
pop
lret
inc
lods
pop
jbe
mov
pop
inc
mov
xchg
dec
mov
fnsave
rcl
cmp
adc
mov
push
xor
pop
test
dec
test
stos
fidivs
xchg
cmp
push
test
inc
push
dec
fxch
je
cld
inc
jnp
dec
mov
in
dec
outsl
clc
xorb
dec
imul
ja
xchg
add
dec
jmp
stc
orl
xor
pop
push
push
dec
xchg
add
adc
jecxz
loope
xlat
cs
sbb
dec
ret
cmp
push
cmp
dec
push
popf
sbb
stc
fnstsw
negl
dec
add
faddl
int
fisttpll
xor
mov
popf
or
adc
adc
pop
popa
sub
add
sub
data16
jge
pop
ss
dec
in
sub
sub
icebp
jp
xchg
add
ljmp
xor
jb
sub
fwait
sbb
or
xor
outsb
adc
scas
mov
jp
adc
pushf
jp
test
push
xchg
aaa
push
into
pop
scas
xchg
mov
sub
pop
pop
xchg
inc
shl
jb
push
xchg
mov
test
loope
mov
cmp
dec
xchg
test
movsl
add
ja
daa
cmp
popa
lods
mov
sbb
test
rcr
insl
xchg
inc
inc
mov
fists
lea
sbb
nop
repnz
xchg
inc
neg
lods
jle
dec
repz
push
iret
jg
test
push
add
pop
mov
int
push
pop
imul
das
adc
add
ljmp
aaa
js
subb
das
jle
push
sub
jae
cmp
mov
dec
inc
cmpsb
mov
mov
cmp
mov
add
jge,pt
cmp
movsl
icebp
mov
inc
jle
outsl
inc
repnz
mov
stos
fisubrs
lret
mov
inc
sbb
in
push
inc
jno
aas
sti
cmp
xchg
sbb
call
out
sbb
dec
lods
inc
cmc
dec
popf
dec
ljmp
leave
dec
lcall
jl
pop
pop
test
stos
scas
xor
mov
ret
imul
jb
jns
fisttps
inc
fldcw
dec
sbb
xchg
mov
dec
fwait
dec
dec
or
pop
cmpb
or
lods
inc
aas
or
test
dec
sub
dec
mov
clc
dec
les
cmp
ja
dec
out
xchg
push
jg
and
jno
mov
stos
cmp
xchg
movb
sar
sbb
inc
std
jmp
mov
lods
fwait
cmp
or
hlt
shrb
arpl
das
xor
loopne
xchg
push
dec
cmp
mov
dec
arpl
mov
adc
push
xchg
lods
jb
std
jl
add
push
mov
sub
int3
ss
fisttps
testb
sub
scas
std
dec
mov
pop
out
scas
fdivr
add
mov
js
es
lcall
pop
push
leave
int3
jecxz
push
mov
sub
xchg
cwtl
jbe
dec
das
mov
pusha
inc
andl
aam
add
adc
popf
mov
push
jl
dec
gs
sahf
roll
push
cmp
cs
sub
lds
jo
xchg
rcrl
mov
fwait
bound
inc
cmp
enter
mov
pusha
lea
ret
mov
and
or
js
jg
adc
rolb
xchg
sahf
sti
into
sub
inc
mov
jl
or
pop
fcmovne
jnp
jg
dec
add
adc
iret
mov
jge
adc
movsb
cmp
leave
les
dec
cmp
and
fdivl
inc
pop
popf
out
jle
clc
aas
ror
roll
das
insl
fadds
jl
pop
xchg
icebp
pushf
inc
lods
in
fildl
ret
and
je
dec
jl
pop
dec
in
jle
gs
inc
fstpt
stos
push
lods
jbe
sbb
jle
xchg
mov
pop
cmp
hlt
lds
inc
aam
movsl
in
or
shlb
mov
push
out
shrb
jg
mov
add
pop
xchg
or
test
add
add
pop
sub
cltd
jle
outsb
dec
mov
data16
inc
stc
cmpsl
cmc
mov
sbb
mov
testl
iret
push
icebp
pop
mov
sahf
cmp
test
shr
cmp
rol
loope
int
jle
add
out
dec
aaa
cmp
pop
fidivrl
cmp
jmp
xlat
aam
insb
test
sbb
sub
cmpsl
popf
sub
pop
icebp
scas
cmc
pop
jl
jbe
aam
mov
mov
pop
dec
scas
push
push
xor
mov
inc
add
pop
addr16
jmp
das
test
inc
stc
inc
stc
jb
roll
add
xor
add
mov
lcall
test
push
rorb
leave
xchg
lds
sbb
xchg
dec
mov
lret
jbe
inc
xchg
mov
dec
adc
jp
cmp
in
scas
std
lret
mov
add
jno
push
mov
push
and
fildl
ds
xchg
loop
into
test
mov
inc
pop
mov
lea
add
adcb
insb
mov
fs
xor
iret
pop
outsl
add
mov
fcmovu
jge
dec
jne
sub
cmp
das
xchg
add
dec
jno
sbb
in
test
pop
dec
aad
mov
pop
push
mov
mov
cs
sub
inc
cmpsl
arpl
adcl
into
dec
sti
incl
adc
mov
sbbb
dec
adc
xor
or
in
loope
sbbl
adc
dec
ljmp
pusha
fdivrp
dec
sbb
out
hlt
sbb
lret
subb
sbb
dec
out
inc
xor
inc
jae
mov
dec
jne
cwtl
inc
addr16
lret
xchg
imul
jl
or
out
daa
mov
mov
inc
jg
or
sub
jp
cs
jnp
jb
jp
dec
xchg
inc
gs
or
xlat
inc
pop
push
outsb
mov
adc
dec
out
fcoml
and
cmp
mov
out
mov
data16
shrb
dec
std
cmp
fmull
sub
cwtl
push
add
mov
aad
push
dec
jbe
push
xchg
hlt
loope
sub
dec
out
pushf
test
imul
in
push
out
fdivp
rorb
push
push
jbe
sub
mov
or
lock
mov
int3
push
inc
mov
dec
adc
movsl
gs
addr16
mov
xor
xchg
lret
xor
adcb
dec
das
jl
pop
inc
jmp
sub
inc
sub
repnz
xlat
mov
jmp
xchg
int3
mov
xchg
mov
cmp
dec
add
popf
ljmp
outsb
add
les
int
lds
mov
in
dec
data16
stos
adc
repz
dec
hlt
and
cmp
scas
or
dec
jae
je
fs
pop
lods
arpl
pop
sbb
mov
inc
out
or
je
dec
iret
ja
leave
cmpsl
gs
inc
shl
inc
ficompl
lods
adc
repnz
scas
xchg
outsb
out
pop
mov
loop
inc
imul
xor
sbb
jb
sub
out
pop
pop
inc
in
shl
cs
mov
sbb
orb
adc
jmp
shrb
into
cmp
fstl
out
xchg
jns
mov
xchg
mov
push
into
mov
dec
push
cltd
stos
cmpb
inc
pop
stos
push
jp
into
jle
adc
sub
sub
xor
push
pop
aad
cmpsl
sbb
aam
into
jle
jge
loopne
pop
inc
xor
jne
cmc
in
dec
jle
mov
xor
lods
mov
pop
daa
xchg
popf
xor
hlt
mov
insb
fwait
xchg
fdivrs
mov
pushf
push
pop
pop
mov
jp
dec
in
aaa
dec
jno
lea
out
aas
cmp
dec
xchg
sahf
bound
pop
push
cmp
mov
call
dec
xchg
pop
loopne
jp
dec
or
aam
jg
movsl
push
push
adc
scas
int3
pop
or
jns
cmc
lahf
inc
jle
pop
lock
dec
shr
push
mov
sub
xchg
cmpsb
sub
movsl
js
movsb
mov
jns
mov
je
cmp
mov
sub
cmpsb
in
mov
pop
dec
xor
daa
es
mov
push
xchg
cmc
jns
fwait
jmp
bound
into
or
mov
jp
ret
dec
movsl
std
and
loop
aam
clc
into
sbb
pop
movsb
mov
fsub
dec
cmpsb
shl
ficompl
nop
xorl
dec
sub
push
and
lds
pop
rorb
mov
imul
sub
push
cmp
ret
cmp
lea
lret
in
pop
jb
dec
ljmp
ss
es
pop
cltd
cmp
stos
inc
js
lret
cld
dec
lock
jne
iret
mov
movsb
shufps
adc
sti
lret
out
xchg
out
ja
aam
add
inc
mov
fucomi
push
mov
cmp
lods
xchg
sahf
dec
and
push
fs
loop
movsb
dec
inc
xor
mov
push
lret
shll
mov
ret
cmp
lods
dec
lcall
or
bound
cmp
dec
cmp
in
mov
dec
test
xchg
fs
dec
sbb
push
gs
dec
cmpl
xchg
jae
repz
fimuls
xor
loope
sbb
or
dec
xor
shl
push
mov
inc
jmp
dec
mov
mov
lret
pop
xor
mov
dec
insb
fcoms
iret
insl
leave
dec
push
cli
and
add
sahf
flds
or
and
dec
insb
sbb
sbb
std
inc
movsb
push
mov
dec
adc
sub
dec
lret
in
icebp
push
xchg
cltd
ja
dec
ds
xchg
sbb
idivl
cmp
and
sub
and
outsl
xchg
and
mov
incb
add
jo
mov
iret
push
arpl
sti
xor
dec
lds
pusha
out
cltd
xor
xchg
ret
push
push
fcoms
outsb
in
arpl
in
repnz
mov
adc
push
or
push
sbb
mov
enter
scas
pop
jmp
inc
nop
push
adc
mov
push
pop
pextrw
mov
lahf
cmp
mov
popa
push
mov
jmp
add
xchg
xor
test
in
or
decl
imul
jmp
sub
pop
or
inc
push
jge
inc
xor
dec
jecxz
xor
cmp
fimull
aam
outsb
xor
inc
lret
dec
fsubrl
dec
lock
test
cmp
insl
dec
xchg
mov
sub
sub
dec
fisttps
pop
adc
outsb
pop
dec
or
iret
add
lret
scas
mov
inc
dec
in
imul
fs
mov
lods
gs
aam
adc
dec
std
sub
push
cmpsb
dec
leave
pop
pop
jg
sbb
mov
iret
cwtl
aaa
jle
push
or
rorb
xor
das
or
cli
pop
call
jp
into
cmpsb
rorb
fmul
jne
lea
fs
loopne
aad
sahf
xor
gs
in
inc
out
sbb
stc
cmpsb
xor
mov
shll
repz
adc
ret
iret
pop
addr16
xlat
push
dec
inc
subl
dec
or
jno
insb
pop
dec
dec
test
jbe
lahf
bound
push
aaa
iret
sub
cmp
dec
dec
xchg
inc
mov
mov
dec
shl
imul
or
lock
cmp
dec
fisttpll
shl
inc
repz
inc
inc
dec
les
mov
dec
loopne
clc
rclb
cltd
inc
pop
mov
jb
mov
adc
jle
push
leave
shlb
js
sub
sahf
pop
add
xor
sti
xor
push
mov
mov
xlat
les
cltd
push
add
das
pop
das
pop
js
test
xor
mov
outsb
sbb
xchg
sti
inc
push
iret
jne
cmp
xor
outsb
js
inc
dec
arpl
jecxz
inc
jle
jp
dec
scas
sti
adc
cmpsb
dec
test
mov
jecxz
dec
lods
jp
push
test
jo
inc
stos
jnp
repz
out
gs
imul
xchg
jbe
cmp
dec
pop
adc
dec
pop
pop
mov
fistpll
es
xor
iret
lcall
xchg
push
je
daa
scas
mov
xor
push
jmp
jmp
and
xchg
scas
lret
pop
cmp
jmp
lret
inc
pop
add
inc
sahf
inc
inc
sub
movl
ret
lret
aas
fs
lret
dec
sarl
adc
lods
mov
ljmp
lods
jp
or
js
and
mov
jle
dec
xchg
rolb
mov
rolb
popf
lret
mov
popf
pop
push
jle
cmpsl
add
lret
cmp
xchg
mov
cmp
jg
outsl
mov
push
test
jo
das
movsb
inc
ja
in
and
imul
popf
outsb
jae
jle
lcall
leave
xchg
cmp
push
push
push
mov
stc
in
std
mov
shrb
loop
rorb
cmp
cmc
movsl
scas
testl
jmp
shrl
dec
mov
dec
sub
stc
loopne
test
orl
loopne
xlat
icebp
mov
push
dec
pop
cmpsb
lds
cmp
int3
mov
mov
dec
outsb
mov
push
adcb
pop
int3
cmp
mov
je
mov
imul
scas
jle
pop
sbb
jne
daa
mov
clc
and
or
dec
jl
fbld
xor
cmp
push
iret
aas
sub
stos
push
rcll
mov
inc
fdivrp
jae
mov
cmpsl
adc
pop
xor
inc
inc
pop
dec
lcall
daa
adc
inc
push
leave
into
fcom
jmp
pop
ds
lea
fldt
add
mov
loop
dec
xchg
jne
movsbl
and
mov
dec
mov
sbb
ret
popf
dec
push
push
in
xchg
xchg
add
ror
sbb
adc
dec
or
mov
jo
dec
inc
mov
mov
and
out
pop
xchg
test
cmp
lret
aam
call
adc
mov
xchg
dec
addl
shll
dec
cmp
jle
decl
cmp
mov
in
mov
xchg
pop
xchg
sub
inc
nop
ficompl
push
sbb
push
int
push
and
sarb
dec
lahf
xchg
iret
mov
loope
mov
arpl
stc
dec
mov
ljmp
cmpsl
dec
test
pop
and
sub
mov
or
dec
dec
xchg
xchg
popa
dec
incb
test
enter
adc
into
cmp
dec
and
pop
cmp
dec
and
cmp
adc
xchg
mov
movsl
jae
push
push
popl
xor
lret
fldenv
dec
inc
xor
in
fwait
dec
mov
dec
inc
cld
enter
pop
lds
cltd
jle
dec
adc
lret
imul
rolb
or
outsl
add
adc
adc
jb
js
jg
bnd
push
addr16
test
test
jp
mov
jg
inc
out
js
out
in
pushf
inc
fs
int
cmpsb
sub
mov
inc
fdivrl
ljmp
mov
mov
lret
jle
hlt
fs
bound
sub
mov
lods
and
xchg
or
sahf
daa
inc
into
nop
pushf
dec
push
dec
movsl
adc
and
sbb
push
gs
jg
cmpsl
mov
lods
dec
xor
pop
scas
adc
dec
jle
icebp
inc
aas
xchg
sub
lds
and
mov
add
xor
jbe
adc
daa
xor
repz
iret
cmp
and
add
xor
sbb
mov
sarb
add
add
sbb
scas
cmpsl
sub
out
sbb
jp
scas
pop
cs
mov
pushf
fbstp
ret
inc
mov
call
lret
xchg
pop
cmp
into
push
aas
jno
in
jbe
xor
imul
dec
cmp
inc
insb
or
jge
xor
insb
stos
call
cmp
cmp
cltd
mov
imul
inc
pop
jl
push
push
sbb
sbb
cmp
fs
int3
lods
mov
fisubs
jo
leave
pop
ds
pusha
mov
daa
into
push
sbb
lods
dec
js
push
pushf
dec
xchg
roll
insl
cmpsb
mov
dec
mov
xchg
mov
dec
testb
int3
lods
or
mov
mov
bound
jb
dec
iret
xor
mov
or
mov
xchg
dec
lods
push
jns
fimull
and
xorl
cs
jbe
mov
pop
adc
dec
push
ret
sbb
xor
into
lock
or
ljmp
xor
dec
addr16
clc
mov
subl
jne
adc
mov
push
pop
pcmpgtw
rcll
sbb
idivl
in
xchg
inc
mov
push
xor
dec
out
jnp
xchg
push
gs
dec
out
dec
mov
sarl
mov
push
jae
dec
jecxz
mov
clc
xlat
out
adc
sarl
sub
stc
and
out
xor
jne
inc
repz
pop
dec
cltd
imul
ret
fmulp
lods
jnp
test
cmpsb
sbb
nop
rorl
inc
hlt
inc
mov
mov
xor
je
dec
add
lea
gs
test
push
sbb
mov
dec
or
mov
rclb
mov
jg
sbb
shrl
imul
std
dec
inc
push
pusha
outsb
insb
fdivrl
xchg
imul
out
outsl
es
xchg
sub
mov
xor
inc
jl
rorb
js
inc
int3
nop
dec
pop
push
dec
daa
jle
xor
scas
push
in
xor
adc
jle
xchg
xchg
or
into
sub
xor
dec
adc
dec
pop
mov
ljmp
jb
jne
dec
test
cmp
inc
sti
xchg
dec
addr16
adc
das
in
int
pop
out
add
in
sub
cmp
xor
int
mov
data16
insb
ss
out
jg
imull
inc
sub
jle,pt
sbb
sahf
into
sub
int3
add
mov
inc
dec
pop
call
das
jg
push
cmp
fstl
push
lret
jns
ss
mov
inc
xor
cmp
adc
cmpsl
mov
cltd
mov
and
add
es
scas
mov
int3
jmp
fmulp
adc
xchg
jle
mov
and
ljmp
push
out
pop
sbb
jecxz
bound
bound
jb
inc
mov
dec
jae
inc
xchg
test
fisubs
out
dec
addr16
das
rorb
dec
fcomps
fbstp
fidivl
dec
movsl
and
jbe
sub
loopne
les
stos
into
dec
test
dec
jns,pn
xchg
in
dec
inc
sbb
mov
xchg
scas
andb
or
dec
sub
jle
push
mov
orl
cli
lcall
es
push
jg
iret
cwtl
push
add
fucomip
xor
iret
mov
aad
mov
lret
mov
mov
or
leave
inc
pop
aaa
pop
add
cmp
dec
mov
filds
and
or
sub
scas
cmp
gs
ret
ficompl
sub
jle
adc
jae
test
lea
cmp
and
imul
ret
and
jl
push
popf
es
adc
mov
int
push
ds
mov
cmpsl
push
cmc
ret
xor
dec
pop
insl
sub
sub
inc
mov
dec
imul
out
jle
mov
pusha
fdivl
aaa
jle
ret
and
cmp
xor
add
movsb
mov
jecxz
dec
testl
sub
mov
call
or
imul
test
pushf
fidivrs
xchg
out
js
add
ljmp
call
ja
push
cli
cltd
adc
rolb
jne
dec
xor
cmpl
dec
xchg
mov
lahf
lods
mov
iret
mov
ret
int3
jb
repz
fwait
dec
jl
pop
mov
int3
dec
mov
dec
call
addr16
cmp
jno
aam
xor
in
out
nopl
rorl
xor
adc
jnp
lods
ret
pop
mov
jl
lea
jle
dec
sub
inc
jne
mov
pop
push
push
inc
cmp
je
push
and
xor
and
scas
dec
mov
gs
push
fsubs
xor
into
test
jnp
dec
jmp
inc
adc
dec
dec
jns
adc
jle
add
out
loopne
stc
xchg
dec
enter
cmp
dec
dec
inc
inc
adc
inc
cld
ljmp
lds
pop
outsl
in
dec
xor
mov
xor
addl
out
jae
jbe
es
test
popa
jle
fisubrl
inc
loop
shl
ret
insl
sbb
sbb
push
cli
and
je
dec
int3
fistl
fldt
jo
ficomps
pop
call
pop
les
pop
pop
xor
test
add
pop
stos
dec
movsl
hlt
scas
sbb
je
cmp
dec
movsb
sbb
mov
adcl
sbb
dec
and
rolb
dec
sbb
std
mov
adc
cmp
or
sub
call
inc
daa
test
loope
fdivrp
xchg
das
add
test
sub
jns
mov
orb
pop
cli
enter
jl
mov
xchg
add
adc
dec
hlt
xor
xor
sar
pusha
inc
in
in
push
or
or
xorb
inc
dec
int3
cmovae
shrd
sub
cs
sub
outsl
adc
je
aas
mov
push
sub
ja
mov
subl
shll
ljmp
loope
pop
mov
pusha
sbb
dec
jae
add
push
push
fcomip
decb
bound
mov
dec
cwtl
mov
mov
imul
or
push
jl
outsl
jb
cmp
jmp
jge
dec
cmp
aad
stos
cmpsb
in
mov
inc
fwait
jl
pop
jnp
cmpsl
fsubs
xchg
jecxz
xorl
das
icebp
add
iret
int
xor
movsl
dec
in
pop
jns
or
jle
xchg
xchg
pop
cmp
int
fprem
pop
fs
pop
push
cmp
pop
repnz
or
pop
add
pop
inc
jg
dec
std
push
push
sti
hlt
add
iret
inc
arpl
dec
pop
into
cmp
dec
xchg
rcrb
push
dec
stos
lods
mov
jns
movsb
pshufw
mov
dec
push
fstps
lods
xchg
xor
dec
mov
jb
fs
dec
push
sub
jnp
add
dec
mov
xor
mov
imul
arpl
in
push
inc
rorl
das
and
xchg
lret
fwait
insb
sbb
cld
les
xor
dec
jl
mov
cld
push
lds
hlt
pop
mov
inc
in
daa
shrb
lea
and
and
mov
add
and
jbe
dec
pop
push
daa
out
sbb
jp
mov
jns
jno
call
cltd
dec
lock
test
aad
add
das
nop
push
fdivrp
xchg
dec
sets
push
sarb
into
ret
dec
mov
mov
lahf
rorb
jo
dec
dec
jns
out
or
lods
xchg
lahf
mov
ficomps
addr16
dec
or
xor
dec
dec
fst
test
movb
inc
jg
outsl
jmp
lock
sub
out
mov
and
aad
int
push
push
or
in
cs
mov
dec
cltd
lds
sub
mov
mov
mov
outsb
sbb
pop
or
fmul
push
in
bound
jl
mov
test
sti
jmp
ret
push
mov
pushf
or
inc
js
jne
cmp
divb
repz
cld
cmp
push
adc
rolb
xor
push
stos
push
pop
add
fisttpl
mov
mov
loop
add
fisubrs
fimuls
or
loope
push
inc
push
inc
xor
hlt
ss
jne
sub
xor
aam
stc
ds
ficomps
clc
cld
popf
icebp
dec
xor
dec
and
ficoms
movl
testl
cmp
mov
xchg
or
into
inc
inc
inc
push
stos
shrb
and
pushf
clc
pop
sbb
xor
xchg
push
call
popf
dec
ljmp
mov
inc
es
xor
add
sub
dec
stos
mov
dec
mov
jecxz
js
add
bound
push
ret
rcr
int3
xchg
jle
push
les
ljmp
fidivs
sbb
test
iret
ret
call
int3
push
addr16
or
pop
jne
iret
lock
jmp
pop
in
dec
cmp
push
dec
and
push
mov
dec
push
push
movsb
add
scas
pop
cmpsb
nop
sbb
cmpsl
sub
push
mov
jle
dec
fimull
inc
cltd
dec
out
arpl
pusha
lods
push
mov
clc
std
sbb
adc
dec
pop
call
cmpsl
inc
jno
es
out
out
pop
xor
imul
testb
mov
test
je
cmpsl
push
and
dec
subb
jno
in
or
dec
mov
testb
mov
cmpsb
mov
aas
scas
shrb
jl
popl
or
cmp
pushf
pop
pand
mov
push
and
or
int3
dec
into
adc
inc
xchg
mov
fdivl
rep
icebp
dec
sub
scas
rcll
or
into
dec
arpl
and
lods
popa
sbb
push
dec
repz
add
dec
ret
cmp
mov
call
pop
dec
cld
cmp
and
and
into
pusha
dec
pop
in
mov
adc
repnz
fsubrs
je
lahf
push
xor
add
push
mov
xchg
and
jge
dec
int3
xor
push
pop
ret
dec
dec
pop
push
test
dec
enter
in
hlt
in
sub
std
call
mov
movsl
decb
dec
mov
cmp
int3
cmp
addr16
insl
pop
outsl
jge
movsl
mov
pop
into
jbe
dec
aaa
mov
adc
popl
ss
pop
int3
xchg
les
fwait
pop
imul
push
repz
mov
shll
push
or
in
add
cld
dec
cmp
dec
and
sub
popf
xchg
push
mov
shlb
notb
loopne
test
push
mov
jl
mov
or
sub
aas
movsl
movsb
ret
into
cmovge
scas
imul
add
sub
js
jle
out
dec
stc
inc
movsl
adc
xor
out
into
dec
testl
pop
push
jg
cli
in
shll
jne
ret
test
ret
and
dec
les
push
fs
push
mov
push
xchg
jmp
lock
xchg
sub
dec
cmpsl
push
sbb
push
add
lea
sbb
and
and
dec
mov
test
ror
imul
jne
adc
popf
push
sub
in
push
jae
push
notb
jge
cmc
in
shll
pushf
cmpsl
and
jo
jg
jbe
xchg
js
xchg
add
dec
out
jg
and
pop
jl
push
aas
pop
sti
and
shrl
jge,pn
pop
inc
mov
pop
or
or
mov
cmpl
in
ret
pop
and
jle
in
scas
stos
cmp
adc
ja
xchg
cmpsl
xchg
xlat
xchg
inc
dec
sub
xlat
pop
dec
mov
fdivrp
push
loop
cmp
dec
jb
dec
imulb
jg
frstor
aam
out
and
aam
in
jnp
jecxz
movsb
sbb
dec
cmp
into
pop
or
lcall
adc
cmp
imul
ret
ss
push
sub
pop
iret
jbe
pop
jp,pt
dec
pop
movsl
dec
cmp
push
mov
push
xchg
xor
xor
mov
pop
into
jg
bound
jle
adc
js
fdivs
mov
push
pushf
fs
ja
dec
xchg
leave
cmp
js
lahf
imul
test
cmp
pop
mov
sub
int3
subb
pop
cmpsb
lock
cmp
push
jle
xchg
pop
dec
cmp
fildll
imul
std
fistpl
jmp
leave
xor
idivl
xchg
jg
stos
dec
clc
test
sahf
cmp
int3
add
xor
bound
and
jnp
jno
mov
xor
xchg
jnp
pop
stos
cmp
cmpsb
scas
mov
inc
sub
cli
mov
movl
daa
in
fadd
stos
dec
jg
or
add
mov
fwait
int
pop
in
xorb
xchg
test
call
popf
das
xchg
mov
and
pop
or
pop
iret
xor
ficompl
mov
in
rol
push
jo
cmp
xchg
and
out
andl
pop
mov
es
sub
clc
filds
mov
mov
sub
dec
push
cmpsb
arpl
push
stos
pop
pushf
stos
fcmovnb
jbe
inc
dec
imull
aas
and
iret
jo
sub
test
lods
dec
repz
jl
mov
das
push
sub
inc
lods
dec
shl
lret
bound
mov
mov
cmp
jnp
or
pop
in
jge
dec
aas
and
lret
lret
test
testl
adc
push
out
lock
movsl
xor
into
add
xchg
fwait
push
pop
lods
icebp
movsb
or
sbb
dec
mov
test
dec
and
in
dec
ror
insb
sub
inc
inc
jp
dec
xor
cmp
aas
push
mov
cmp
pusha
jle
fcoms
mov
jo
addr16
mov
mov
sbb
mov
fs
sahf
push
adc
out
pop
les
fs
jmp
fisubs
inc
mov
flds
mov
hlt
xchg
sbb
mov
pusha
ficompl
adc
inc
cmp
mov
loop
inc
or
and
cmpsl
loopne
add
jmp
mov
xchg
and
jp
fistpl
mov
ja
sub
insb
sub
adc
jmp
cmp
fmull
push
inc
out
and
shl
cli
dec
add
sub
into
stc
sbb
dec
out
pop
mov
dec
push
fadds
cmp
push
jle
pop
cld
stc
mov
dec
fistpl
push
jecxz
add
int3
dec
adc
addr16
mov
sbb
movsl
jbe
jno
pop
mov
ljmp
fmul
mov
xchg
dec
lds
cmp
pop
or
and
jb
pop
mov
repnz
dec
push
jo
mov
iret
jne
dec
dec
cmp
fs
sub
adc
pop
scas
pop
insl
orb
mov
es
gs
xorb
sbb
sub
and
mov
dec
iret
jns
adc
mov
dec
lods
mov
sbb
xor
xlat
and
inc
xor
jle
icebp
jae
push
std
loop
jle
cli
inc
xor
mov
aam
pop
push
outsl
jmp
inc
shrb
pop
imul
in
in
scas
bound
fwait
lods
lahf
sbb
lret
popa
scas
clc
sbb
cmp
inc
mov
jae
insl
bound
jle
mov
sbb
or
dec
loop
popf
ljmp
dec
das
adc
sub
xor
mov
wbinvd
in
sub
in
shlb
test
mov
imul
push
inc
or
fucomip
dec
mov
fwait
outsb
rorl
and
scas
lret
int
dec
jns
jecxz
or
pop
add
jb
mov
mov
into
adc
push
bound
adc
sahf
or
dec
shll
daa
sbb
mov
dec
fsubs
mov
popf
int3
jmp
dec
loop
push
std
orb
daa
addl
xor
mov
mov
and
xorl
cmc
adc
dec
push
enter
dec
out
ja
xlat
and
rcr
dec
lods
mov
pop
rclb
gs
rclb
gs
cli
push
cmp
mov
jge
test
push
test
push
xchg
rcr
dec
jne
jno
jo
sahf
jbe
push
dec
stos
cli
and
sub
fmull
jecxz
mov
or
sbb
cltd
or
data16
shll
pop
pop
dec
dec
mov
add
cltd
sahf
icebp
dec
fs
test
sub
mov
sbb
mov
dec
test
mov
jle
and
mov
mov
data16
jp
enter
add
insb
adc
xor
es
mov
inc
inc
mov
sub
add
test
mov
aas
test
dec
mov
push
push
mov
push
jns
push
int3
inc
xchg
push
mov
iret
rorb
iret
hlt
pcmpgtw
lahf
jle
mov
push
into
fucomi
xchg
mov
lds
adc
cwtl
fidivs
enter
in
jne
cmp
pushf
out
mov
out
mov
sbb
rclb
mov
ja
push
sub
sbb
dec
fwait
jl
sub
out
and
je
cmp
ret
in
das
inc
insb
push
xor
std
cmp
mov
ljmp
test
add
aam
insl
jb
xchg
mov
or
je
inc
test
cmp
insb
prefetchwt1
test
cmp
int3
add
xor
repnz
ss
pop
xchg
movsl
fdivl
push
sub
push
fwait
fwait
mov
sub
pop
pop
out
ror
and
addr16
xlat
push
xor
into
mov
xchg
add
cmp
std
test
loop
insl
pop
cmp
dec
es
sbb
mov
lcall
dec
ds
push
gs
pop
dec
inc
add
mov
movsl
outsb
jl
sub
cmp
pop
xor
mov
cmp
jmp
rol
and
or
xor
add
mov
mov
stc
dec
loope
in
and
mov
aad
and
or
dec
pop
mov
dec
loope
or
out
jle
adc
jnp
dec
sbb
pop
hlt
dec
dec
scas
dec
shr
pop
inc
push
adc
push
jnp
in
push
scas
mov
adc
push
xlat
and
lods
dec
xchg
js
add
mov
mov
mov
ljmp
xchg
scas
dec
push
addl
mov
mov
movsl
lods
popf
subl
push
inc
xor
cmp
out
scas
movsb
dec
sub
data16
out
xor
fcomp
jbe
ret
xor
xchg
xor
imul
sbb
push
inc
or
stos
mov
mov
dec
in
les
lret
std
dec
into
jbe
fcmovu
sub
mov
mul
jae
add
mov
repnz
cmp
dec
aas
mov
or
cmp
aam
loopne
mov
dec
loop
bound
jl
mov
cmp
js
mov
dec
jns
dec
xchg
push
cwtl
out
push
add
inc
jne
pop
xchg
bound
int3
xor
dec
leave
cwtl
mov
fs
pop
mov
loopne
cmp
inc
dec
lds
xchg
orb
xlat
scas
mov
stos
sbb
xchg
xor
scas
adc
mov
int3
mov
lea
dec
mov
adc
mov
aad
mov
sub
mov
aaa
stc
fnstsw
inc
in
iret
dec
jnp
jb
movsl
pop
dec
jo
pop
and
repnz
int3
dec
dec
int3
jae
add
lods
mov
fwait
pop
adc
cmp
push
and
push
cmp
mov
mov
ret
push
jno
out
sbb
pop
add
cli
fildl
negb
outsb
aam
mov
jmp
mov
std
in
push
adc
xor
cmp
dec
cmpsb
imul
mov
cmc
call
daa
sub
xor
dec
dec
sti
rorl
out
dec
call
xchg
hlt
pop
test
xchg
outsb
cmp
dec
loope
pop
inc
jmp
mov
sbb
and
ret
fisttps
fstpl
pop
dec
fcoml
and
pop
in
dec
jp
dec
or
popl
mov
and
popa
dec
fldcw
je
movsb
push
out
aas
std
sub
or
rcrl
ret
jns
inc
dec
pop
inc
mov
mov
icebp
ljmp
cmp
inc
jno
sub
in
fldt
cmp
int3
mov
iret
lock
jecxz
adcb
sub
popa
mov
aaa
adc
pop
mov
xchg
mov
jo
sahf
jle
dec
pop
sbb
cmp
enter
xchg
mov
xor
dec
lea
xchg
lods
int
lock
in
outsl
sbb
cmp
jl
aas
xlat
lcall
add
cmp
sub
lret
in
imul
lea
and
insl
jae
xchg
push
and
mov
add
cs
icebp
inc
ret
scas
inc
cmpsl
adc
stos
mov
inc
inc
xlat
jl
lods
dec
mov
push
mov
inc
bound
mov
ror
cmc
xchg
sub
decl
inc
dec
inc
hlt
mov
shll
fnstcw
push
mov
in
cld
fistpl
dec
jl
insb
cmp
pop
ds
ja
add
jg
dec
mov
cmp
arpl
dec
xchg
je
cmp
xchg
jno
cmp
xor
lods
mov
push
aaa
inc
divb
inc
pmulhuw
jg
daa
jne
gs
scas
movl
in
mov
into
fwait
es
imul
in
mov
mul
enter
jg
sbb
mov
jp
dec
into
jle
mov
or
jle
cmp
mov
not
mov
inc
in
xchg
fbstp
inc
jb
pop
dec
nop
sbb
adc
aaa
dec
jmp
sub
subl
dec
xchg
movsb
jb
push
dec
in
std
dec
pop
xchg
dec
xor
and
inc
xlat
push
dec
mov
mov
scas
sahf
in
push
dec
out
add
push
pusha
xchg
xchg
add
mov
sbb
mov
cltd
jmp
out
and
inc
fistpll
les
loopne
xchg
repz
daa
outsl
mov
fwait
inc
fmuls
xor
xor
jge
stos
fcmovnb
or
xor
mov
sti
sub
or
dec
push
lds
int
cmp
jg
insl
and
sbb
aaa
cmp
in
dec
stos
xchg
call
adc
insl
pop
lcall
or
or
popa
iret
adc
fsts
adc
repnz
jl
mov
and
inc
jecxz
int3
mov
or
les
cmp
cmc
inc
sub
mov
mov
pop
push
leave
jle
fs
jns
dec
cmp
mov
mov
pop
ret
mov
push
dec
inc
push
push
dec
mov
mov
mov
sahf
lock
std
dec
mov
xchg
int3
out
dec
cmpsb
or
dec
and
lods
pop
bound
lret
repnz
int3
mov
dec
pop
or
push
shll
movsl
cmovb
xor
cmp
stos
mull
daa
push
mov
sarl
loop
imul
mov
pop
inc
bound
inc
scas
mov
xchg
pop
imul
fcmovb
mov
xchg
jle
lods
fisttpll
mov
addr16
inc
push
ret
cmc
icebp
xchg
scas
or
or
aaa
xchg
jne
sti
call
out
lret
mov
or
push
inc
jae
lods
pop
fsubrl
test
jl
or
ja
lahf
cs
insl
es
add
push
jae
es
test
push
data16
jo
cltd
xchg
jl
cltd
inc
cmp
jle
mov
push
adc
sbb
dec
movsl
jae
inc
mov
test
stos
xor
fdivrs
xorb
mov
inc
imul
adc
mov
sahf
rclb
nop
push
cli
cmpsb
mov
dec
nop
scas
jl
dec
dec
add
andl
in
hlt
stos
mov
xor
or
adc
jmp
fimull
cmpsl
xchg
pusha
mov
or
aam
lea
imul
or
jle
popf
sbb
fcoml
adc
add
int
mov
and
lds
push
pop
push
dec
jg
adc
icebp
dec
das
lcall
or
pop
fs
in
and
mov
insl
jl
pmullw
loope
lods
adc
popf
js
xchg
xor
cmpb
mov
flds
scas
into
ret
int3
add
add
fdivp
dec
lods
leave
jne
subb
cltd
lcall
or
jg
shlb
lret
inc
popa
xor
xor
fdivl
std
jg
idivb
orb
inc
xor
mov
and
jo
xlat
xor
or
aad
jno
js
jno
stc
jl
and
pop
repnz
adc
inc
or
jle
pop
push
sub
sbb
jb
rcll
xchg
push
ret
enter
push
es
cwtl
insl
cmp
mov
jae
xor
or
mov
push
call
add
loop
inc
jl
ds
hlt
sub
xor
push
xor
je
add
add
adc
add
mov
aam
lea
movsb
xor
sahf
mov
xchg
jl
jnp
mov
jns
mov
dec
xlat
inc
ds
imul
fidivrl
imul
jl
mov
dec
cmp
aas
jge
daa
mul
mov
sub
mov
shlb
push
je
mov
ljmp
xor
dec
mov
loopne
push
js
and
inc
inc
dec
inc
sub
and
cltd
test
sbb
inc
jo
inc
cmp
sub
loope
pop
cmpsb
jb
push
in
mov
xchg
lds
movsl
and
dec
out
xor
test
dec
cs
scas
lret
jle
xchg
icebp
testb
enter
mov
jl
jo
or
icebp
jle
mov
inc
je
push
cmpsl
bound
sub
ret
cmp
pop
cmc
mov
xor
fs
push
push
dec
aas
jnp
xor
mov
mov
andl
cmp
ret
lea
mov
mov
out
data16
xchg
mov
push
or
mov
cmp
pop
movsl
xchg
mov
aas
movsl
jle
dec
xchg
dec
in
negl
jo
adc
mov
jmp
ds
scas
xor
add
cmpsb
add
dec
jecxz
movsb
lret
imull
jg
xchg
hlt
push
orb
clc
inc
aad
add
out
adc
subl
pop
dec
lret
test
icebp
xchg
push
aaa
les
loopne
inc
cmp
jns
and
daa
lcall
out
shlb
enter
mov
xor
in
pop
dec
mov
inc
pop
loopne
jmp
dec
rcrl
pop
sub
mov
dec
test
cld
xchg
ret
push
mov
jp
xor
out
imul
xchg
inc
sarb
fwait
or
insl
push
adc
sahf
enter
pusha
push
sbb
pop
sub
into
lcall
fwait
out
int
mov
pop
shl
dec
push
mov
add
aas
pusha
xchg
loope
push
jns
lea
movsb
cmp
jmp
out
adc
cwtl
dec
adc
fistpl
movsb
inc
dec
xchg
ud1
xchg
popf
lcallw
push
jl
sub
int
xchg
xchg
iret
sbb
adc
sbbb
cmp
cmpsb
pop
jo
psllq
add
dec
xor
bound
je
aam
jnp
dec
test
fsubrl
loop
dec
dec
ja
jecxz
xchg
mov
outsl
mov
push
in
push
cmp
dec
cld
and
pop
mov
dec
jle
lret
jbe
andb
pop
jecxz
cmp
adc
mov
es
outsb
int3
fmul
repnz
call
push
or
pop
and
dec
add
repz
adcl
inc
mov
mov
lock
repz
das
in
mov
inc
movsb
jo
inc
rcll
push
icebp
cwtl
ljmp
add
push
mov
sbb
clc
and
aaa
js
in
pushf
orb
mov
mov
xor
dec
gs
jno
xor
rclb
and
sub
push
jle
cmp
push
test
hlt
cmp
out
push
cmp
xchg
pop
cs
add
movsb
adc
lds
dec
es
movsb
fdivrs
or
mov
mov
idivb
sub
xor
jle
add
push
fidivrl
out
mov
sahf
add
iret
loop
scas
ds
push
xchg
cmpsb
mov
xlat
cmp
cmp
sahf
pop
or
sti
popf
mov
mov
lods
fmulp
add
mov
sub
shlb
repz
pop
add
cmc
movsl
bound
fcompl
in
dec
push
repz
and
int3
mov
dec
imul
test
pop
cs
and
aaa
and
jno
sti
sbb
or
mov
lret
adc
enter
cmc
mov
xchg
test
xchg
jle
push
fs
dec
mov
sarl
cltd
sbb
mov
sub
std
sub
or
sahf
mov
int
mov
mov
mov
push
jo
gs
dec
or
jle
in
xlat
test
mov
and
mov
pushf
sbb
mov
cmpsl
bound
fsts
and
arpl
cmp
enter
scas
jo
adc
daa
scas
mov
inc
cltd
cltd
pop
iret
ds
cmp
popa
sbb
js
jle
inc
inc
mov
pop
push
dec
mov
cli
pop
mov
wbinvd
pop
dec
cmc
jg
fildll
mov
sarb
or
test
push
pop
xchg
popl
push
mov
out
inc
jecxz
add
and
addb
stos
inc
scas
inc
test
mov
jle
add
push
pop
mov
dec
add
add
lods
enter
pop
arpl
orb
jno
mov
sub
xor
mov
jo
dec
ret
in
dec
into
jmp
mov
dec
mov
pop
or
pop
dec
dec
pop
adc
sbb
jb
dec
push
mov
xor
in
scas
addl
cmp
pop
or
dec
aam
js
xchg
popf
imul
ds
sbb
and
rcrl
imul
ret
mov
bound
data16
dec
pop
xor
int3
or
outsl
dec
dec
add
or
push
test
lahf
decl
and
aaa
cmp
or
test
xlat
jno
or
je
mov
xor
mov
int
ret
testl
jns
pop
fimuls
jnp
out
dec
popa
cmp
xchg
mov
cmp
repz
push
mov
or
push
dec
fidivrs
xchg
inc
test
inc
adc
mov
std
cmp
dec
cmp
sbb
testl
rcrl
cmpsl
sub
pop
jl,pt
xor
pop
pop
test
in
cs
stos
dec
jg
out
pop
test
movb
cmpsb
loop
insb
in
rcll
jg
push
shr
js
cpuid
push
cmp
cltd
cmpsl
lcall
movsb
jle
hlt
mov
pop
aas
jl
lret
mov
jle
andl
sub
test
xchg
mov
inc
stos
cmp
push
je
sahf
or
inc
xorl
out
insl
les
jmp
cmp
xlat
cs
and
enter
imul
fidivrs
lret
clc
dec
js
mov
dec
xchg
xchg
aas
or
dec
nop
lret
and
xchg
dec
jns
int
pop
push
je
popl
imul
repz
mov
imul
js
cli
jo
xchg
jle
mov
jne
dec
cmp
insb
enter
and
fistpll
xor
ss
lea
pop
sbb
add
shr
pop
jbe
sti
mov
sub
std
push
fisubrl
loope
dec
jle
repz
cmp
dec
mov
fnstcw
adc
cmp
xor
and
aad
test
xlat
inc
fwait
mov
loopne
iret
or
jle
mov
repnz
push
cs
xlat
or
mov
dec
lock
frstor
and
iret
dec
shrb
mov
dec
inc
dec
pop
xor
stc
add
fldcw
dec
lea
and
jbe
dec
xor
sarb
insl
dec
jo
xchg
addr16
test
inc
or
out
xor
inc
dec
push
pop
dec
jo
jmp
add
xor
pop
dec
mov
mov
sbb
mov
mov
clc
xchg
pop
mov
lahf
popl
jmp
rcll
lcall
mov
dec
movlps
ds
insb
loop
cli
fwait
and
add
push
lcall
ds
mov
aad
imul
rorb
dec
fcoml
cmpsl
shrl
call
adc
dec
xor
dec
int
shll
es
xchg
lods
sbb
pop
sbb
ds
jl
cmp
test
push
jl
ss
cwtl
mov
movsl
hlt
jb
dec
sub
sti
into
popf
outsb
decl
xchg
adc
inc
cwtl
jb
push
xchg
lahf
mov
dec
push
shlb
sbb
int
fwait
sub
int3
dec
jp
jl
sbb
sub
lcallw
jns
fidivrs
outsb
ret
or
and
push
or
fstps
xchg
pop
lds
push
inc
jae
addl
add
pop
push
xchg
cli
loope
mov
scas
ficoms
xchg
lret
test
ret
sarb
cwtl
loop
add
sub
pop
ret
dec
mov
xchg
jmp
cs
movb
jbe
cmp
and
popf
ljmp
sbb
out
jecxz
fcomi
adc
leave
mov
outsl
xor
into
add
outsl
call
andb
add
mov
sbb
pop
movsl
inc
mov
sub
xchg
dec
stos
dec
and
scas
ljmp
xor
inc
lret
fbld
pop
dec
or
shlb
adc
xchg
std
push
dec
frstor
and
into
sbb
jge
dec
push
mov
pushf
jb
jnp
dec
push
call
aas
dec
pop
mov
lock
cmp
jnp
mov
dec
ret
push
loopne
jo
nop
testl
xchg
mov
leave
jno
xlat
stos
lods
dec
and
int3
jne
fldcw
or
lret
mov
dec
cld
addr16
inc
dec
daa
push
mov
dec
ss
dec
dec
jmp
lcall
sbb
stc
sbb
fistps
sub
mov
adc
xchg
sub
cmc
sub
popa
or
dec
jg
sub
shlb
xor
leave
push
inc
or
adc
dec
shl
mov
fidivl
jle
cmpsl
bound
xor
jge
pop
ja
push
out
dec
mov
lahf
lods
movsl
dec
cmp
nop
jl
mov
icebp
ret
sbb
in
or
lret
xchg
push
mov
cmp
and
mov
jmp
fsubr
fsubrl
jp
cmp
inc
jecxz
int
lahf
ljmp
out
cmp
dec
rclb
rcrl
jl
and
int
dec
xor
jg
xlat
mov
es
inc
push
iret
shlb
aas
sbb
sub
push
fcmovbe
mov
ret
jmp
push
outsb
sbb
jno
sub
or
adc
lahf
mov
xchg
roll
push
cmpsb
out
fimuls
sub
rcrb
jg
xor
sub
inc
adc
pop
cld
dec
call
mov
iret
cmp
jle
dec
pop
jno
insb
roll
pause
push
hlt
outsb
data16
movsl
dec
repnz
out
pop
les
scas
xchg
lahf
dec
lods
gs
xor
rcll
fisubrs
test
dec
decb
aas
jo
sbbb
lods
mov
inc
jbe
dec
adc
pop
scas
cwtl
ror
xchg
sub
jb
xchg
das
and
cmp
nop
and
dec
xor
fcmove
jne
aaa
aad
sbb
inc
sbb
xchg
dec
dec
push
mov
jle
xor
add
les
mov
xlat
dec
rcll
dec
mov
push
mov
orb
jnp
and
dec
mov
dec
insl
testb
jbe
dec
sbb
pop
mov
fistpll
push
sbb
add
mov
xchg
inc
mov
xor
jns
frstor
stos
enter
push
out
xchg
subl
dec
mov
mov
arpl
push
or
mov
push
fimull
adc
jecxz
and
dec
stos
mov
insb
jge
jo
dec
out
repnz
movsl
int
out
dec
xor
pop
and
jecxz
dec
ror
pusha
es
dec
mov
sbb
xchg
aas
sub
push
scas
pusha
sub
xor
jno
or
sar
jns
decb
cmp
push
sbb
push
bound
inc
hlt
fmul
cmp
popa
dec
jo
mov
dec
roll
and
jle
mov
push
adc
mov
inc
leave
xchg
add
loop
dec
dec
mov
popa
mov
dec
pop
mov
sub
inc
int
and
dec
cwtl
les
adc
into
xor
add
ljmp
dec
notb
xchg
mov
lea
cmpb
dec
cmc
pop
cs
js
push
repnz
scas
sub
push
shll
aam
dec
lret
mov
icebp
nop
dec
jg
push
mov
sub
adcl
and
mov
mov
xchg
sub
sbb
jle
sbb
arpl
int
ja
add
dec
scas
rcrb
push
and
xor
orl
divb
push
xor
dec
scas
outsb
clc
lods
lds
xor
subb
jl
js
mov
inc
or
jg
xor
xchg
jbe
xchg
aaa
je
jg
sbb
xlat
popf
xor
mov
mov
outsl
inc
fwait
mov
cmp
sbb
inc
and
int3
xchg
pop
loope
cmp
jno
mov
push
mov
cmp
add
shr
xor
insb
into
push
int3
pusha
push
adc
cmp
out
lret
jge
movsl
je
outsb
daa
push
pop
inc
inc
out
mov
int3
mov
jns
pop
push
mov
lcall
sub
push
push
cmp
hlt
cmpsl
in
xor
push
dec
adc
inc
in
shll
xor
dec
sbb
and
lahf
adc
push
cmp
sbb
xchg
daa
daa
pop
add
pop
mov
push
push
pusha
mov
rolb
repnz
push
cmp
jle
mov
das
add
mov
dec
jl
mov
in
mov
daa
popa
repnz
out
out
test
aad
jle
cli
sub
pushf
adc
mov
push
in
repz
cltd
rcrb
mov
sub
cmp
repnz
xor
loopne
pop
sbb
push
out
push
jb
jbe
jle
out
gs
push
clc
fsubs
jmp
push
push
push
jl
jno
in
fdivl
and
sahf
jle
sarb
cmpsw
pop
dec
or
dec
enter
xor
in
mov
push
mov
aad
inc
push
cltd
daa
lods
out
mov
mov
test
cmp
adc
je
rcrl
mov
out
vpmacssdqh
jp
lret
xchg
pop
sub
dec
fadd
push
outsb
testl
std
cmpsl
mov
dec
or
and
rcrl
les
shll
clc
adcb
inc
pop
xchg
mov
inc
ljmp
pop
xchg
push
dec
sub
mov
xor
jnp
pushf
cli
sbb
dec
xchg
adc
dec
sbb
xchg
out
adc
push
dec
jne
adc
dec
sbb
dec
push
stc
lret
pushl
inc
repz
dec
fisubrl
jl
push
pushf
fistl
xlat
push
in
xor
jb
xchg
mov
jo
mov
mov
or
cmp
stos
dec
psllw
dec
jg
and
cwtl
in
and
dec
out
xchg
aas
sub
int
mov
dec
cmp
mov
sub
ss
ret
mov
dec
mov
out
xchg
dec
pop
jo
jge
addl
pop
mov
inc
xchg
lret
inc
dec
dec
xor
cmp
pop
rcll
sub
dec
in
mov
push
xchg
ret
sbb
jp
adc
dec
jl
shll
dec
push
cmp
testl
inc
popf
ljmp
lods
mov
cmc
dec
sti
xchg
and
or
dec
seta
fwait
adc
inc
or
cmp
rorb
jge
inc
cmp
testl
adc
xorl
dec
push
mov
orb
push
fcmovne
pushf
dec
in
popa
push
mov
and
dec
iret
sbb
pop
in
push
jp
jbe
and
mov
and
xchg
dec
cmp
mov
insb
adc
fs
shlb
xor
cmpsl
rcr
subl
inc
shrl
stos
mov
bound
lret
and
cmpsl
jg
test
js
xchg
pop
cs
lahf
mov
sub
test
in
inc
popf
in
jnp
cmp
push
shrb
int
and
adc
sbb
bsf
push
fs
cwtl
repnz
fisubrs
push
pushf
jl
jns
and
push
jg
inc
ss
mov
cld
popf
sbb
sar
inc
sub
and
mov
push
arpl
lahf
mov
sbb
mov
adc
cmc
adc
jae
dec
push
lret
and
loope
call
jno
movsl
xchg
cmp
mov
leave
and
pop
es
shrb
inc
pop
push
in
outsl
mov
ret
cld
jae
int
and
test
push
pop
movsl
mov
push
and
jb
rorl
mov
and
sbb
std
dec
enter
cmp
mov
adc
push
push
imul
scas
mov
jle
xchg
push
dec
cmp
mov
jp
cmp
xor
mov
stos
iret
loop
adc
push
xchg
movsl
mov
cmpl
mov
popf
jo
mov
dec
adc
cmovp
hlt
xor
mov
cli
and
unpcklps
cmpsl
sbb
or
push
pop
sub
jmp
push
cld
shlb
imul
xadd
mov
fdivrs
mov
jae
std
pop
or
mov
scas
dec
push
repz
popf
mov
sbb
sub
icebp
and
and
cmp
lahf
mov
dec
inc
ja
dec
pop
orb
push
xchg
inc
dec
ds
sbb
dec
pop
mov
movsl
es
mov
push
in
dec
pusha
push
je
cs
subl
sbb
cmpsb
lcall
ss
sub
cmc
jge
in
jbe
iret
cwtl
xchg
push
pop
dec
repz
repnz
mov
in
dec
frstor
mov
bound
stos
dec
into
or
popa
dec
lahf
das
int3
pusha
in
inc
mov
dec
push
xchg
jae
push
cmpsl
mov
addb
dec
mov
push
sbb
jae
rcrl
pusha
loop
cmpsl
dec
das
cmp
gs
push
into
mov
cs
dec
dec
add
push
push
mov
mov
pop
es
pop
sahf
lret
lret
dec
in
scas
cmp
xor
sbb
cmp
mov
bound
cmpsb
repnz
or
dec
outsl
cltd
xlat
inc
push
outsb
test
aad
movsb
nop
hlt
mov
lock
ss
dec
mov
aaa
push
push
pop
loope
mov
mov
xchg
iret
adc
dec
mov
adc
dec
add
inc
pop
stc
arpl
dec
lret
adc
ret
adc
dec
icebp
popa
sbb
dec
push
push
ljmp
dec
test
cmc
push
xor
jns
mov
mov
cmpsb
cmpsl
mov
mov
lahf
and
loopne
mov
adc
nop
jecxz
inc
mov
or
fs
mov
and
sbb
leave
fildll
loope
push
dec
cwtl
push
and
mov
adc
roll
das
clc
je
dec
mov
sub
daa
fstps
pop
loop
fisubl
pop
cli
lds
sub
jg
adc
mov
fnstenv
dec
ja
inc
nop
jmp
outsl
imul
dec
outsb
les
sbb
mov
lret
sub
dec
mov
in
out
jl
dec
adc
mov
cmpsl
xchg
jle
mov
dec
std
es
ficoms
jno
test
insb
into
insb
push
arpl
leave
sbb
shlb
xchg
fs
popf
or
movsb
mov
ljmp
arpl
mov
aad
adc
jns
dec
dec
lods
push
sti
loope
jg
bound
imul
mov
aaa
popf
jecxz
sbb
cltd
nop
cmp
pop
repnz
mov
ds
dec
cmp
mov
mov
dec
cld
pop
push
cmc
fs
loopne
loop
pushf
les
mov
add
dec
popa
lret
icebp
ja
dec
sbb
mov
jle
aad
pusha
sahf
jb
into
je
cmp
jmp
into
arpl
imul
dec
sub
clc
or
mov
push
jmp
int
cmpsb
dec
insb
and
mov
out
and
pop
mov
jl
sbb
pop
inc
movsl
test
jp
push
clc
sub
clc
std
fwait
xchg
push
aam
adc
imul
maskmovq
sub
sbb
jmp
jns
ret
mov
lock
cltd
mov
xor
lahf
xor
pusha
enter
sub
xchg
dec
js
or
add
hlt
inc
gs
jg
xchg
ret
mov
insl
popa
in
xor
xlat
or
daa
cmp
imul
cmp
pop
nop
dec
ds
jno
push
js
rorl
dec
mov
sub
mov
jmp
xlat
push
mov
mov
jnp
hlt
pop
and
cmp
dec
pop
mov
cmp
cmc
sub
push
mov
addb
xor
test
add
pushf
xchg
dec
mov
push
mov
dec
addr16
ds
add
pop
dec
sbb
popf
xor
dec
out
push
bound
ds
fnstsw
cmc
xor
sti
aas
shlb
dec
dec
or
aam
jecxz
lods
lcall
popf
sub
int
mov
inc
jbe
pop
and
jne
push
sub
cmp
lds
add
cmp
out
push
xchg
and
ljmp
mov
inc
xor
push
aam
out
movsl
inc
cmp
push
and
ljmp
cmp
mov
mov
scas
dec
movq
jle
jb
test
fdivs
int
lcall
enter
adc
cmp
inc
xor
enter
cmp
push
and
pop
mov
push
lds
shlb
dec
and
mov
push
iret
pop
fwait
adcl
sahf
sbb
mov
cs
push
cmp
dec
mov
out
fbld
and
aad
add
cmpsl
dec
in
lcall
add
mov
dec
adc
das
aad
insb
xchg
dec
mov
out
push
dec
add
stos
add
into
push
out
jge
lret
xlat
or
outsl
mov
add
outsb
xchg
insl
in
cmp
dec
jg
add
in
das
popl
in
cmp
je
push
sub
cmp
call
mov
stc
popf
rcrl
sbb
int
sbb
out
sub
shrb
insl
cmp
and
addb
mov
pushf
inc
push
insl
test
in
shrl
dec
fsubp
into
out
jg
aam
gs
clc
dec
ljmp
loopne
xchg
jo
imul
pusha
mov
push
ret
push
stos
pop
mov
aaa
xchg
pop
sarl
mov
lds
push
sbb
mov
or
mov
test
jl
mov
fidivl
push
ljmp
dec
cmpsl
iret
frstor
fidivs
stc
mov
scas
bound
xchg
mov
xchg
push
mov
adc
mov
sbb
repnz
ss
scas
pop
mov
jbe
push
cmp
dec
mov
int3
pusha
int
stos
inc
frstor
cmp
jl
xchg
shrb
les
cs
stos
into
mov
leave
out
mov
dec
mov
sub
popl
imul
test
or
or
adc
dec
int3
jbe
or
repz
push
mov
xchg
and
push
aad
out
jl
into
xchg
fdivrl
adc
imul
jne
or
arpl
outsb
pop
xchg
xor
xchg
paddd
mov
inc
in
cmp
lock
inc
adc
sbb
push
dec
dec
fisttps
dec
cmp
mov
shrl
or
dec
push
mov
adc
scas
cmp
in
mov
xor
mov
cltd
dec
addr16
insl
clc
add
mov
jbe
adcl
cli
jmp
mov
xor
inc
inc
add
lods
into
inc
xor
dec
push
mov
pause
into
push
stos
dec
aad
pushf
enter
insb
dec
or
js
dec
mov
outsb
not
adc
dec
in
jb
sub
add
sub
adc
dec
rorl
call
jne
sub
movsl
cmp
dec
sbb
jmp
mov
sbb
mov
lcall
mov
adc
out
mov
pop
in
sbb
push
push
or
idivb
inc
dec
fstps
xlat
mov
loope
lahf
sub
add
xchg
in
shlb
and
and
aam
mov
lcall
scas
add
and
xchg
push
arpl
cli
jbe
adc
inc
nop
inc
and
enter
xchg
mov
dec
pusha
cmpsb
in
mov
push
pop
in
adc
add
out
dec
scas
sub
mov
cmc
cmp
mov
sbb
dec
jl
bound
cmp
push
cs
inc
xchg
mov
inc
mov
ja
sub
dec
mov
imul
mov
decb
xor
push
cmp
clc
mov
xchg
add
daa
xor
lea
dec
pushf
push
mov
stc
and
shrb
inc
movsb
aam
into
mov
mov
shr
hlt
inc
movsl
jne
iret
fisubs
repz
sarb
es
and
push
pop
mov
loopne
xchg
outsl
in
stc
shlb
outsb
cmp
dec
loope
fwait
jl
jns
sti
fwait
add
int3
jg
mov
mov
bound
and
xchg
rclb
cld
cmp
mov
es
and
insl
inc
int
add
ret
push
gs
loopne
xor
lret
inc
out
jno
dec
faddp
lret
fdivl
imul
and
nop
add
jnp
cmp
jp
dec
jg
dec
test
jns
lods
rolb
lods
lret
ljmp
ficoms
adc
push
ret
mov
pop
dec
bnd
adc
mov
pusha
dec
pushf
addr16
pop
push
inc
and
or
mov
sub
dec
out
rorl
addr16
in
sbb
push
xchg
fimull
lret
dec
lcall
add
int
popa
dec
rcrl
push
lret
and
adc
jb
cmp
test
pop
xchg
mov
push
mov
dec
mov
popf
xor
or
push
enter
jl
mov
sar
lahf
xchg
fldl
mov
pop
fdivl
cmp
pop
xchg
lods
mov
or
sarb
dec
stos
mov
cmc
mov
dec
out
fmulp
cmp
dec
les
push
mov
and
dec
and
xchg
mov
adc
sbb
hlt
mov
sbb
lds
inc
das
adc
les
dec
mov
jnp
mov
pop
mov
sbb
dec
bound
add
jge
or
addr16
sbb
scas
arpl
mov
jb
out
push
rolb
mov
push
and
mov
aaa
fwait
sahf
inc
mov
dec
push
pop
and
repnz
xchg
loope
stos
fildl
clflush
xor
lods
dec
mov
cwtl
pushf
into
inc
add
testb
push
sub
and
loope
push
adc
lcall
xor
and
cmpsl
jbe
push
mov
fldl
jno
jl
cmp
ja
and
mov
sub
sub
aaa
xor
pop
jae
stos
testl
xchg
insb
pop
dec
mov
insl
add
ja
lock
mov
aaa
dec
sbb
mov
and
dec
xor
repz
mov
and
dec
enter
jne
mov
neg
das
fldcw
jg
cmp
pop
cmp
dec
gs
lds
imul
add
cmp
inc
arpl
xlat
out
sub
xchg
loop
dec
pop
je
add
fstps
jno
pop
mov
or
fisttps
push
sub
mov
sub
mov
lea
inc
shld
xchg
cmp
int
mov
lds
dec
into
push
out
adc
pushf
and
std
xlat
mov
xchg
test
addr16
scas
cmp
dec
movsl
dec
sbb
loopne
cmp
push
in
das
jns
inc
dec
mov
adc
loop
or
mov
jbe
dec
adc
mov
dec
popf
lret
fnstsw
jae
test
lahf
dec
subl
push
fadd
scas
dec
sarb
cmp
out
lret
push
mov
inc
xchg
or
test
add
xchg
loop
sar
lret
xchg
outsl
lcall
imul
adc
mov
in
mov
push
cmpsl
xlat
mov
test
das
pusha
inc
ja
dec
and
add
aaa
lods
ja
and
pop
dec
inc
stc
mov
add
sbb
mov
mov
inc
out
stos
into
lcall
paddusb
jae
in
scas
lret
mov
xlat
or
das
flds
mov
rol
bound
mov
jge
stos
dec
jg
jg
mov
xor
pop
rorb
jecxz
movsl
dec
int
dec
out
clc
iret
pushl
sub
cltd
sub
inc
testb
dec
xchg
adc
jnp
lahf
jle
in
and
or
imul
cwtl
and
sbb
loope
lods
jl
cmp
jmp
pop
lods
sbb
lock
jg
add
inc
mull
movsl
pop
ljmp
call
push
inc
mov
arpl
jp
sub
mov
jns
fcmovnbe
sbb
add
stc
push
dec
lcall
mov
xor
std
dec
nop
jmp
aas
xchg
adc
mov
je
dec
mov
push
mov
dec
cltd
jle
push
in
mov
dec
and
je
dec
mov
jns
daa
adc
inc
dec
and
dec
mov
pop
cmpsb
push
sti
shlb
js
xor
cmc
push
popa
jbe
xchg
out
or
fwait
adc
cmpsl
cmp
jb
and
dec
addr16
lret
jg,pn
popf
adc
sti
xor
enter
push
dec
ret
in
and
decb
popf
pushf
fldcw
jp
cltd
dec
leave
add
push
add
pop
dec
jle
inc
sub
dec
cmpsl
loope
outsb
pop
adc
dec
pop
xchg
dec
js
pop
sub
cmp
scas
fnstcw
iret
inc
aad
and
ret
dec
ljmp
fmuls
xor
jmp
xchg
pop
adc
inc
mov
jbe
sbb
mov
adc
cmpsb
iret
jbe
repz
cmp
int3
subl
and
dec
outsl
sahf
ret
pop
in
pop
dec
inc
add
or
into
pop
sbb
dec
sub
int3
lods
shrb
lret
fwait
clc
cli
mov
decb
dec
les
mul
jl,pn
orl
cbtw
inc
cs
aam
dec
js
jle
jp
mov
dec
push
into
cmp
fstps
sbb
mov
cs
rorb
orl
inc
or
ret
dec
das
sub
das
gs
pop
pop
and
outsb
iret
jp
stos
push
orl
jno
popa
inc
and
rolb
push
pop
and
stos
pop
jns
pop
dec
xor
dec
shr
sub
dec
inc
aas
test
mov
loop
add
test
dec
test
xor
adc
and
dec
push
mov
pop
in
loopne
sbb
cld
mov
leave
fidivl
inc
into
xlat
and
mov
fwait
pop
pusha
jb
int
nop
xlat
dec
xor
jp
pop
mov
fnstenv
lods
lods
xchg
inc
inc
jle
push
dec
jo
pop
pop
jbe
pop
mov
lods
dec
sbb
jno
sub
loope
dec
pop
scas
xchg
cmp
adc
jp
dec
insb
cmp
cmp
or
pop
jg
dec
daa
pop
cs
lret
mov
dec
xor
sahf
aad
outsl
orl
leave
dec
and
rcrb
outsl
ds
mov
xchg
mov
jne
jo
mov
pop
data16
jns
cmpsb
push
je
inc
jae
mov
inc
in
into
loopne
std
or
ss
scas
lcall
jo
mov
push
dec
mov
sub
inc
xchg
dec
xlat
inc
xchg
in
push
pusha
outsb
fisttpll
dec
stc
addr16
rcrb
jle
movsl
in
lods
cmpsb
xchg
iret
inc
jl
inc
push
ss
dec
les
popf
ljmp
cmpsl
push
movsl
push
adc
das
pop
data16
cmp
dec
mov
outsl
roll
leave
inc
sub
lds
mov
jecxz
outsl
out
cmpsl
and
call
dec
into
data16
addr16
pusha
push
push
out
push
dec
xor
lahf
data16
or
mov
dec
rclb
ror
lcall
pop
mov
push
bound
mov
cltd
dec
je
pop
jecxz
dec
dec
mov
mov
scas
push
lods
sahf
add
outsl
out
mov
adc
in
adc
fiaddl
iret
dec
mov
dec
inc
dec
mov
aad
or
add
dec
loopne
dec
push
pushf
inc
xor
xor
adc
mov
insb
dec
ficoml
jmp
leave
cmc
lods
loop
shld
scas
in
push
pop
sub
ret
std
sbb
dec
jne
add
dec
push
mov
dec
mov
sbb
shr
dec
imul
jl
or
ss
inc
mov
ja
dec
cmpsb
xchg
leave
divl
and
loopne
lret
dec
hlt
jp
inc
mov
push
or
xchg
mov
mov
dec
or
in
and
dec
jmp
sbb
in
push
sbb
add
lcall
dec
adc
xor
je
add
mov
sbb
in
fisubs
push
dec
mov
loope
mull
and
sbb
push
out
loop
and
dec
aad
add
lods
stc
shrl
dec
add
pop
les
mov
sub
dec
push
fadd
add
or
pop
cmc
inc
jg
imul
and
adc
sub
jmp
mov
movl
into
out
fisubl
int3
jae
add
pushf
mov
or
dec
out
notb
inc
sub
dec
aam
or
or
into
hlt
mov
test
incb
dec
mov
push
mov
mov
xchg
pop
adc
push
dec
mov
sbb
out
pop
jne
idiv
xchg
dec
mov
mov
mov
jmp
push
xor
fwait
imul
in
push
lds
pop
and
jnp
push
mov
adc
fisttps
ljmp
dec
add
xor
mulb
loop
mov
jo
dec
mov
dec
ds
ss
loop
dec
call
roll
sbb
stos
jmp
repnz
inc
incb
sbb
xchg
lret
push
aam
mov
mov
push
mov
loopne
leave
popa
movsb
push
xchg
js
dec
pop
jo
pop
sti
cld
aas
push
dec
xchg
sbb
xor
mulb
adc
rolb
push
push
fnstcw
cmpsl
or
sbbb
or
adc
adc
mov
sti
inc
add
xchg
dec
mov
pop
xlat
xorl
sub
int
sti
jle
incb
xor
cmp
sbb
inc
clc
ss
dec
ljmp
pop
push
popf
test
dec
mov
dec
mov
fcomps
xchg
aas
push
ret
scas
cwtl
fisttpl
iret
xor
rcll
mov
into
push
xchg
mov
sub
dec
dec
jnp
xor
outsb
fcoms
lods
adc
inc
mov
add
xor
notl
scas
add
loopne
inc
jnp
hlt
jl
sbb
pop
lcall
dec
lcall
add
pop
or
or
push
pop
mov
jg
pop
testb
mov
nop
enter
push
cmp
movsb
cmp
add
adc
pop
aad
inc
xor
insb
xor
or
iret
push
clc
mov
dec
dec
std
mov
jl
push
xlat
movsl
and
into
jge
int3
out
mov
ljmp
fistpll
and
pop
jbe
push
mov
popa
repnz
loopne
inc
mov
es
xor
imul
inc
test
xor
and
in
sub
and
das
jle
mov
mov
add
das
jg
adc
xchg
div
stos
shll
xchg
xor
sarb
clc
data16
dec
iret
jge
sub
sub
adc
xor
roll
sub
mov
aaa
arpl
lods
sarb
lods
adc
stc
int3
xchg
mov
push
sub
mov
jns
shrb
xor
test
outsb
jbe
push
adc
out
mov
loop
sub
out
pop
jle
xor
add
sbbl
fdiv
mov
out
jl
push
ret
popl
adc
xorb
sbb
pop
inc
lret
jg
pop
jo
mov
pop
fstps
shll
mov
dec
sub
fbld
mov
push
jle,pt
repz
into
or
add
inc
add
outsl
mov
jge
mov
sub
jp
xor
cld
or
jle
jl
adc
iret
fcmovnbe
cmp
dec
jo
test
out
rolb
cld
dec
call
sub
inc
jmp
xchg
mov
adc
mov
bound
cmp
jecxz
push
dec
das
addr16
scas
loop
mov
push
add
dec
enter
rorb
je
lods
cmpsb
stos
xor
cmp
dec
pop
int3
inc
ja
popf
out
mov
fistpll
ficoms
fdivrs
xor
cmp
dec
sti
into
gs
popa
js
cli
inc
cmpsb
sahf
add
pusha
mov
add
mov
jle
jg
es
jnp
cmp
adc
jl
rorl
sub
or
pop
pop
mov
push
icebp
xor
inc
cmp
mov
ficompl
jge
pop
xchg
insl
mov
xchg
adcb
and
outsb
cmpsb
loope
pop
stos
pop
push
and
stos
aam
xor
xchg
sub
hlt
dec
jo
mov
std
sub
pop
pop
lds
roll
dec
push
jle
xor
sbb
xlat
fnstsw
push
jg
lods
fldl
dec
inc
xchg
mov
cs
and
hlt
xchg
movsb
xchg
inc
fists
fwait
mov
xor
dec
loop
mov
or
bound
fs
fisttpll
xchg
out
dec
aas
in
xchg
jns
fidivs
add
daa
stos
adc
xor
fsubr
xchg
out
incl
jne
aaa
jbe
add
add
adc
les
dec
cli
movsl
jno
mov
dec
sub
inc
xor
mov
mov
mov
cmpsl
in
rcll
xlat
mov
xchg
and
adc
dec
insl
add
dec
jmp
and
inc
sub
dec
and
jo
dec
out
add
das
test
ret
xor
iret
cs
imul
mov
mov
daa
lods
mov
push
mov
gs
dec
lahf
jmp
mov
pop
or
les
and
js
cld
and
xchg
andl
data16
mov
dec
pop
sub
in
aad
mov
cmp
ds
xor
mov
outsl
jp
sar
push
dec
inc
stos
push
mov
les
dec
sar
out
loop
addl
mov
mov
mov
test
xchg
lahf
dec
stos
enter
jmp
xor
xchg
les
or
mov
lret
dec
stc
cmp
adc
mov
outsb
dec
xchg
push
ljmp
inc
pop
into
lahf
xchg
dec
dec
jge
jbe
dec
and
aam
dec
imul
jno
cmp
sbb
movsl
push
repnz
dec
testl
decb
sub
js
pop
pop
movb
xchg
cmp
adc
sub
jle
cmp
pop
inc
xor
ss
dec
sbb
sbb
jle
mov
inc
push
ds
arpl
js
dec
jo
fcoms
loopne
idiv
ds
cs
push
in
dec
push
fcmovb
fnstcw
push
dec
mov
sub
sbb
mov
lods
xorl
cmp
mov
mov
ret
cmp
clc
pop
fcoms
dec
or
mull
mov
orl
daa
adc
dec
sbb
scas
fbld
cmp
shrl
dec
inc
insb
cmp
xor
mov
dec
mov
lods
push
imul
stos
sahf
mov
mov
mov
popf
das
xchg
dec
xorl
sub
scas
andb
je
xchg
hlt
jle
dec
movsb
jo
rcrb
mov
xor
or
inc
cmc
and
sahf
lods
fimull
mov
stos
mov
lods
je
call
and
repnz
or
mov
push
xchg
mov
scas
fwait
or
rcr
imul
testb
nop/reserved
arpl
xor
das
fcompl
cmp
dec
adc
and
push
cmp
xchg
iret
jg
in
imul
add
mov
cmp
adc
sub
shrb
ret
ficomps
pop
inc
or
adc
xchg
push
dec
jge
fmul
dec
incb
xchg
aad
out
jl
pop
push
sub
fsubrl
mov
popf
test
push
push
mov
push
or
dec
add
mov
pop
bound
xor
daa
inc
scas
dec
cmpsl
jmp
or
xor
cld
dec
aad
sbb
outsb
dec
dec
jno
pop
sbb
cmp
test
out
mov
mov
push
enter
mov
mov
int
movb
lret
mov
shll
dec
ljmp
jbe
rorb
insl
cmp
sub
dec
adc
call
cs
frstor
mov
insb
adc
cmp
jl
xchg
cmpsl
nop
div
and
ficoml
xchg
pop
pop
and
and
lds
ljmp
cmp
cmp
pop
cmp
repz
dec
mov
sub
cmp
cmp
icebp
pop
sbb
fisubl
scas
out
sub
add
mov
sarb
inc
push
shrb
scas
jg
sbb
adc
jecxz
xor
push
xchg
into
loop
push
leave
inc
mov
scas
aas
hlt
int
xchg
add
daa
cmp
and
pop
jle
mov
icebp
aas
ljmp
repz
cld
popf
add
scas
stos
inc
inc
addr16
incl
fidivrl
dec
shrb
sahf
jg
add
lds
dec
outsl
jp
xchg
lahf
mov
push
fidivs
test
ficomps
mov
rolb
ds
loop
xchg
rcr
or
fs
stc
aas
inc
mov
or
add
cmp
push
pop
stos
orb
mov
dec
inc
test
lret
das
pop
cmp
fidivrs
icebp
dec
test
cmp
cmp
and
fisubs
inc
jl
xchg
cmp
in
aaa
sbb
and
cmc
xchg
iret
sub
and
lret
int
push
lcall
pop
sub
dec
jg
pop
shl
cmp
add
aad
sub
pusha
dec
pop
rsqrtps
xlat
test
or
xchg
pop
aad
jmp
fadds
push
fadd
xor
mov
jle
jns
cmpsl
dec
iret
jg
sahf
stos
fs
lret
ljmp
and
push
mov
out
sub
das
in
hlt
jb
enter
hlt
flds
stos
aaa
or
aas
cld
loop
data16
pop
out
jp
in
jmp
jle
push
push
mov
into
jg
cmpsb
mov
lods
fcoms
push
pushl
inc
jmp
xlat
rorb
mov
jns
mov
cmpsl
int
lods
into
dec
scas
shll
shlb
mov
ret
arpl
iret
rdtsc
inc
push
pop
hlt
outsl
popa
sbb
xchg
rorl
cmp
sbb
pop
fs
push
icebp
dec
out
jl
fisubrl
sbb
scas
jg,pt
push
fsts
add
mov
fs
jo
pop
pop
or
sub
push
pusha
das
jno
lcall
xor
clc
pop
dec
jns
xchg
pop
sub
pusha
dec
fldenv
je
sarl
jo
sahf
mov
arpl
fwait
push
jae
loop
sbb
out
jbe
mov
leave
xor
xor
int
mov
mov
push
cmc
rcl
mov
sahf
mov
jnp
call
jbe
and
test
dec
xor
shlb
leave
pop
jnp
mov
testl
arpl
sbb
repnz
outsl
mov
mov
push
adc
iret
sub
dec
inc
dec
mov
fiaddl
imul
in
dec
push
loop
mov
leave
add
pop
mov
mov
into
int3
dec
pop
dec
inc
test
xor
filds
xchg
ret
in
xchg
sbb
sbb
daa
scas
addr16
xor
lret
jae
fldt
out
jbe
mov
lock
sub
leave
fisubs
add
int3
ds
xchg
mov
stc
xchg
adc
pusha
sbb
or
gs
call
pop
add
test
sub
mov
mov
into
add
jne
dec
xchg
jg
mulb
mov
push
push
and
and
mov
sbb
pushf
push
and
lea
jle
mov
inc
nop
dec
and
in
lahf
mov
inc
mov
jbe
mov
outsl
sahf
std
out
pop
dec
rcl
movsl
leave
sub
test
jp
movsb
loopne
outsb
rcll
movsb
daa
loopne
shlb
xchg
rcrl
sbb
ret
mov
ljmp
in
fdivr
fsubs
mov
cmc
orb
mov
xor
out
enter
in
mov
lret
iret
push
movsl
cmp
pop
mov
das
scas
arpl
in
adc
jl
rclb
std
cmp
push
adc
testb
fisubrs
jg
jo
lret
decl
pop
rol
cmp
cs
and
stos
js
dec
and
inc
mov
roll
push
inc
out
mov
test
hlt
add
fists
mov
adc
mov
pop
cmp
loop
dec
or
dec
lret
mov
insb
jb
or
in
lods
and
push
xchg
push
push
test
sbb
add
and
xor
cltd
jb
fmul
cmp
xchg
pop
cltd
daa
pop
cmp
push
inc
dec
push
por
pop
in
sahf
jge
jle
mov
jo
xor
inc
jl
pop
or
xor
lods
mov
sbb
stos
cs
scas
push
aaa
push
jae
pop
fidivrs
mov
xchg
fistpl
ja
jl
cmc
sbb
pusha
pop
inc
xor
jg
leave
imul
cs
or
icebp
shrl
stos
push
loopne
jl
pop
xchg
sbb
stos
into
out
cwtl
and
push
cmp
push
loope
mov
jle
or
dec
sbb
lret
xchg
insb
dec
mov
dec
inc
jl
imul
and
mov
and
pop
sti
imulb
inc
inc
mov
nop
jbe
sub
cmp
aaa
inc
xor
int
adcl
int3
sti
lods
dec
xor
pop
dec
sbb
movsl
dec
out
idivl
cwtl
jo
dec
jae
hlt
pop
loope
out
dec
add
cltd
xor
pop
jnp
out
fsubrs
mov
lea
dec
mov
sbb
lret
insb
mov
movsb
out
sbb
int
adc
pop
cs
sbb
rclb
pop
outsl
cmp
dec
xor
sbb
dec
pusha
or
add
addb
mov
add
aam
cmc
lds
dec
shrl
mov
jge
lock
pushf
cmp
add
ljmp
sbb
xchg
enter
fs
cwtl
jle
dec
inc
clc
adc
push
lea
push
cmpsb
outsl
xor
dec
test
enter
jbe
jnp
js
cmc
pop
idivb
repnz
shlb
fnstenv
push
and
pop
imul
dec
std
push
xchg
testl
popf
out
dec
pop
xor
ror
mov
xchg
in
push
fisttps
jl
cwtl
dec
xchg
xchg
cmp
cli
out
cmp
adc
adc
icebp
sub
push
push
fwait
pop
dec
idiv
bound
insb
pop
or
cmp
pop
dec
frstor
pusha
iret
push
fstl
sub
cmpsb
or
xor
icebp
dec
pop
or
and
jmp
dec
adc
movsl
iret
xchg
xchg
idivl
xchg
dec
jg
sub
loopne
nop
in
dec
mov
inc
mov
lret
movsl
ljmp
inc
dec
inc
inc
data16
push
outsl
pop
fs
inc
push
shrb
inc
push
cltd
stos
dec
push
xchg
xchg
push
and
out
cmp
xchg
dec
xor
dec
pop
xchg
test
sub
out
int3
out
inc
stc
scas
or
dec
sub
xorl
dec
rclb
dec
nop
clc
dec
adc
lahf
ret
or
or
xchg
jmp
nop
punpckldq
loopne
mov
or
sub
sub
fxch
movb
jl
cmpsl
pusha
lods
rorb
clc
lret
cmp
cmpsl
mov
bound
mov
jmp
daa
lock
push
aaa
xchg
push
movb
mov
mov
js
inc
inc
fwait
add
add
add
cwtl
cmpsb
add
nop
sbb
lret
aam
nop
inc
subb
mov
fbstp
outsl
and
ljmp
fisubrl
test
call
mov
mov
mov
cmp
push
ljmpw
aaa
jne
out
dec
jb
dec
mov
dec
in
inc
mov
jp
inc
repz
inc
fldenv
lcall
loop
pop
inc
dec
adc
notb
test
in
cwtl
negl
sub
popa
sbb
mov
mov
lret
mov
and
pop
xor
outsb
sti
fisttpll
imul
insb
data16
cld
push
into
shlb
mov
loop
mov
out
testw
mov
in
sahf
sbb
xchg
dec
cmp
roll
fsubrl
mov
push
dec
sti
out
adc
outsl
sbb
jno
cmp
jp
mov
das
test
push
mov
lock
aaa
add
pushf
repnz
cmp
les
sub
popf
push
cs
subl
push
dec
in
xchg
dec
cltd
ss
sarl
pushf
dec
xor
rclb
dec
and
push
mov
add
fimuls
scas
push
sbb
outsl
je
add
mov
dec
xchg
dec
addl
cltd
stc
push
xor
add
push
dec
jg
push
sahf
push
stc
pop
insl
adc
into
push
xchg
dec
ds
xchg
cmovnp
lds
xchg
int
sbb
mov
repz
dec
dec
xor
mov
lcall
jge
repz
dec
arpl
add
dec
push
sbb
outsb
mov
fucomip
sub
dec
jne
pop
mov
leave
push
es
shll
jne
dec
xlat
pop
outsl
stos
es
dec
mov
imul
push
insb
int
or
adc
dec
jmp
cltd
pop
sbb
mov
xchg
or
xor
repnz
dec
push
fstpl
pop
sbb
aam
fs
out
lods
les
xchg
cmpsb
int3
mov
inc
scas
dec
cmp
stos
inc
jmp
xchg
adc
sbb
loop
pop
lods
in
jne
push
popf
xchg
pop
or
or
inc
dec
fs
jb
ret
mov
imul
xchg
andl
call
push
push
lahf
jns
jnp
adc
inc
je
jnp
imul
sbb
aam
ss
push
stos
mov
arpl
dec
cmp
nop
pop
sub
daa
pop
cmp
dec
pop
loope
cmpl
sub
movsl
xchg
cmp
aaa
pop
dec
out
dec
repz
xor
sahf
dec
xchg
inc
lds
jecxz
dec
aam
cltd
jmp
bound
mov
frstor
add
dec
insb
sbb
inc
dec
out
nop
pop
push
push
shrb
dec
iret
int
mov
aaa
stos
out
or
dec
cltd
xchg
pushaw
mov
or
and
xor
xor
scas
scas
andl
stos
xlat
adc
lret
popf
icebp
push
pop
xchg
repz
mov
cs
dec
lds
xchg
cmpsl
xchg
out
shlb
push
cmp
add
adc
lret
in
xor
jecxz
into
xchg
decb
sbb
sbb
push
repnz
dec
iret
sub
and
inc
adc
outsb
sbb
dec
sub
lahf
jns
inc
jbe
cs
sarb
xor
dec
fwait
js
inc
adc
mov
lods
adc
test
cmp
add
xchg
sbbb
mov
cltd
ljmp
sub
into
inc
pop
jle
and
fdivrs
nop
mov
sahf
or
es
push
in
aam
into
cmp
arpl
repnz
add
dec
cs
sbb
dec
xchg
loope
lcall
adc
inc
push
into
mov
xchg
dec
mov
sub
dec
insb
data16
cs
dec
hlt
jne
adc
neg
jo
stos
and
and
lods
ret
dec
out
or
jne
mov
inc
sub
push
hlt
fidivs
dec
inc
out
and
loope
inc
dec
lcall
jbe
adc
ds
rclb
sbb
dec
andl
cmp
sbb
cli
orb
add
mov
dec
mov
aad
sub
push
push
dec
add
or
fstpt
adcb
and
dec
jg
jge
pop
out
repnz
sub
or
jp
mov
cmp
clc
mov
cmp
push
dec
xor
push
mov
arpl
test
idivl
dec
dec
jp
cmc
pop
sbb
cwtl
js
sub
fnsave
sub
sub
cmp
xor
das
pop
aas
sub
and
inc
mov
mov
lock
xchg
jle
mov
push
xor
mov
out
dec
and
xor
xor
pop
mov
mov
js
push
lock
lea
jg
adc
dec
imul
repz
aam
inc
jl
sbb
repnz
cmp
js
movsl
ss
leave
std
adc
add
into
out
and
cmp
sub
pop
or
stos
inc
outsl
xor
inc
dec
or
xchg
int
or
in
fsub
rcrb
leave
dec
add
sbb
mov
into
daa
shll
rorb
jno
dec
mov
lret
stos
fimuls
xor
pcmpeqw
sub
xor
cmp
xchg
xor
mov
push
push
into
xor
addl
mov
and
rorl
push
pop
adc
mov
dec
dec
push
jecxz
push
test
push
ljmp
push
outsb
add
and
cwtl
sbb
iret
sbb
cmp
ja
stc
mov
mov
dec
jge
gs
xlat
xchg
ds
fidivs
mov
cwtl
sub
pushf
scas
xor
rorb
cmpsl
or
xor
cmc
inc
pusha
inc
fmuls
leave
ret
or
shlb
mov
inc
cmpb
xchg
and
es
dec
fisttps
jmp
dec
lods
clc
inc
mov
dec
mov
sub
dec
and
sub
leave
jge
sub
repnz
and
sub
or
cmp
jle
pusha
xor
insl
jl
aam
aas
dec
inc
movsb
leave
inc
repz
pop
xchg
jne
mov
or
aam
and
cmp
int3
sbb
ficoml
jo
xchg
shlb
inc
aas
stc
dec
mov
and
jle
lret
cwtl
push
sarl
scas
jae
pop
cli
lock
mov
cmp
push
jb
into
mov
testl
push
dec
mov
and
sub
add
aam
stc
ss
or
in
out
xor
adc
mov
or
mov
jl
scas
sti
fwait
inc
push
insl
dec
cld
in
mov
lods
out
jg
int3
mov
cmpsb
iret
inc
mov
sbb
movsl
scas
es
jg
loope
push
xor
out
jl
sub
ja
xchg
xchg
mov
jl
xchg
aaa
push
sub
jb
int3
int3
xchg
pop
arpl
push
mov
jl
bound
dec
out
in
xchg
in
inc
test
pusha
rorl
dec
data16
lret
popa
daa
cmp
and
or
filds
pop
mov
push
int3
xor
clc
dec
and
test
pop
or
out
or
or
and
ret
andl
push
adc
jle
add
fsubrl
addr16
lea
fistl
shll
jg
ja
mov
scas
pop
mov
xor
cli
sahf
in
mov
jl
xor
dec
adc
mov
jg
popf
push
in
inc
jl
insb
xchg
push
pop
push
or
xor
add
sub
popa
dec
hlt
mov
sbb
popf
inc
sbb
cmp
loop
shlb
push
pop
gs
cmp
jns
pop
inc
dec
rorb
js
mov
mov
cmp
cmp
push
adc
sub
cwtl
js
clc
jecxz
mov
add
mov
sbb
pop
out
mov
jbe
push
iret
inc
fbstp
pop
push
jg
mov
rolb
jno
dec
mov
sub
pop
cmp
dec
cmpsl
scas
dec
jl
push
out
adc
roll
adc
xchg
jge
mov
sti
inc
orl
sbb
cmp
xchg
mov
push
lock
in
cmpl
ja
popa
aam
jae
ss
xchg
or
clc
inc
js
mov
cmp
test
fs
fistps
pop
aad
xchg
add
mov
popf
ljmp
lret
dec
jl
ficompl
dec
push
adc
sarl
lods
dec
or
cmpsb
ljmp
cli
sbb
lds
inc
in
cld
fstpl
arpl
sbb
ds
or
and
inc
ret
and
sbb
iret
push
sarb
cli
lret
dec
dec
mov
sbb
rcl
inc
lret
jnp
imul
push
sbbb
icebp
xor
cmpsb
adc
stos
xor
dec
jno
dec
sarb
addb
push
xchg
decl
ja
xchg
in
xlat
out
dec
sub
adc
pop
nop
dec
shl
mov
cs
inc
dec
push
add
mov
dec
pop
pushf
push
andb
dec
mov
lret
rolb
repz
add
cmp
popf
xchg
pop
cmp
jle
fwait
push
daa
pushl
cmp
jnp
ja
dec
enter
lcall
rcrb
aad
ds
adc
insb
jnp
xlat
inc
dec
daa
imul
dec
inc
inc
mov
ficoml
fisubs
add
dec
dec
rol
idiv
mov
bound
jns
inc
sbb
dec
stos
test
cmp
das
pop
cmpsb
xchg
cmc
mov
dec
pop
lock
push
fidivs
or
dec
xchg
call
push
inc
loop
outsl
dec
negl
mov
jl
outsb
mov
cltd
push
insl
mov
imul
xor
pop
arpl
nop
jb
cmp
mov
dec
jae
lods
in
dec
repz
dec
ss
outsl
jno
das
into
and
loope
mov
mov
dec
std
or
adc
mov
dec
lret
outsb
das
in
out
addl
scas
xor
icebp
clc
dec
push
mov
outsl
cmp
dec
jge
mov
popa
scas
dec
or
inc
inc
or
sub
or
dec
mov
adc
dec
mov
fucomi
sub
jmp
xlat
rorb
jp
sub
nop
push
jae
cmp
jbe
lds
pcmpeqb
dec
xor
std
sbb
ficoms
mov
pop
push
dec
xchg
out
cltd
dec
pop
cmpunordps
pusha
into
cmp
cmpsl
outsl
mov
mov
inc
add
lock
pusha
fwait
lds
or
jo
fimull
pop
shll
and
xchg
add
mov
jae
mov
dec
test
mov
or
pop
cmp
fmull
jae
xor
dec
das
jle
fucom
xchg
int
jnp
push
jbe
dec
push
lret
jg
fisubrl
call
arpl
orl
jo
push
daa
push
jmp
xor
add
outsw
ljmp
stos
inc
and
cmpsl
dec
push
cmp
mov
push
call
xor
lock
das
pop
pushf
pop
pop
jae
mov
jmp
pop
into
mov
xchg
mov
fs
shll
jmp
std
fdivp
dec
movsl
aam
mov
pop
sbb
cmp
scas
nop
mov
fimull
mov
imul
sbb
or
add
stc
inc
faddp
xor
inc
iret
mov
xor
fists
daa
jb
es
add
dec
mov
bound
sbb
and
dec
cmpsl
fwait
jb
aaa
jbe
lret
pop
xchg
iret
mov
jecxz
aad
sub
fisubrl
pushf
xchg
mov
aad
inc
cmp
add
aaa
and
scas
adc
jle
ficoml
inc
sbb
ficomps
cs
xchg
bound
imul
in
decb
mov
push
xchg
bound
pop
icebp
cmovle
test
hlt
dec
push
test
sbb
adc
das
sub
jbe
loop
or
mov
testl
es
mov
inc
push
bound
shlb
repnz
imul
in
add
inc
pop
mov
das
sub
gs
ret
jle
push
push
sub
xor
mov
imul
mov
pop
push
sti
dec
adc
jle
mov
sbb
or
adc
insb
inc
jnp
lods
push
sub
movsl
or
mov
xchg
out
leave
pop
mov
pusha
leave
sbb
sahf
push
bound
cltd
xor
je
fs
sub
push
shlb
mov
sbb
nop
dec
sbb
pop
cmp
add
and
mov
pop
cld
and
mov
adc
outsb
mov
push
jecxz
mov
or
pop
stc
push
mov
out
pop
int
mov
cmp
adcl
pop
jmp
or
addr16
dec
test
adc
mov
dec
stos
in
cmp
xchg
cmpsl
popa
xchg
dec
sub
or
and
dec
repz
push
mov
outsb
or
mov
or
sub
aam
push
andl
pop
ret
sub
mov
jge
jp
pop
or
mov
idivl
xchg
loope
rcrl
repz
clc
mov
ds
and
push
imul
or
sub
jmp
pop
ss
push
push
lcall
fsts
cli
cltd
js
outsb
dec
hlt
inc
pop
xchg
sti
dec
inc
adc
arpl
pusha
jle
aad
adc
loop
insb
pop
out
pop
dec
ret
push
mov
inc
rorb
cmp
jmp
frstor
dec
dec
mov
stos
cmp
xlat
inc
mov
dec
jecxz
popf
jae
mov
cltd
xor
jp
fs
push
mov
xor
stos
jbe
adc
insb
shlb
mov
outsl
sbb
lret
jno
fwait
imul
jecxz
mov
addr16
or
push
xor
push
in
nop
jae
mov
push
sbb
cli
ljmp
mov
and
jmp
jge
test
and
pop
jl
lahf
sbb
fcmovb
xor
das
jp
jmp
lds
rolb
pop
xor
fnsave
sbb
sub
push
xchg
sub
mov
sub
out
jo
jae
push
ret
shl
data16
arpl
mov
mov
fbstp
je
das
dec
sbb
fcomps
aas
cmp
or
inc
test
inc
sub
js
inc
testl
mov
lahf
mov
bound
cmp
ficomps
sarb
push
test
push
adc
ja
sub
clc
loope
call
mov
xchg
and
in
sub
xlat
fsubs
cmp
arpl
imull
inc
test
gs
out
rcrb
fdivs
pop
test
xor
addr16
ss
mov
push
jg
xor
push
ja
lret
sbb
sub
jle
jl
mov
push
push
xchg
sbb
negb
push
mov
add
sub
cld
cmp
cmp
mov
sub
mov
dec
insl
and
lret
shl
fdecstp
adc
int3
mov
push
xor
pop
lods
ja
imul
dec
outsb
lret
adc
and
jle
jle
mov
push
add
cmovg
lods
popf
faddl
das
push
dec
cmp
jae
out
cmpsl
push
ss
aaa
cmc
loopne
mov
test
leave
loopne
js
push
mov
outsb
pop
dec
sbb
xor
imul
mov
mov
jo
arpl
dec
int
mov
mov
shrb
pop
adc
push
pop
dec
jl
and
push
out
inc
into
jle
mov
lret
sbb
mov
add
inc
inc
clc
push
cmp
mov
loope
push
mov
sbb
fwait
shlb
cmpsl
mov
out
pop
jg
js
les
add
gs
inc
aad
jae
test
cmp
adc
mov
sub
inc
bnd
scas
test
cwtl
dec
jl
gs
add
add
pop
push
inc
aaa
cmp
mov
add
inc
jg
pop
enter
pusha
lret
mov
xor
push
iret
test
ds
dec
sbb
lahf
cs
jg
insb
push
inc
inc
out
cs
das
pop
shl
cmpsl
inc
and
loopne
cmp
push
push
jl
mov
into
cltd
adc
cmp
push
in
out
and
lock
pop
xchg
loopne,pt
xor
jge
into
ds
pop
jg
mov
es
dec
les
jg
cmp
or
dec
cmp
jl
adc
jmp
add
cmpsl
js
jle
js
and
push
aaa
pop
pop
pop
inc
les
lods
and
push
cld
int
pop
in
cli
leave
cmc
cmp
sub
imulb
cmp
sahf
jo
repnz
sub
dec
pop
in
icebp
push
cwtl
adc
jp
mov
jno
sub
jle
outsb
hlt
cmp
push
push
sub
push
mov
aaa
rolb
xchg
jge
mov
mov
inc
out
dec
adc
lea
imul
aas
adc
adc
mov
lock
cmpsb
cwtl
loop
jle
dec
cmpsl
mov
jne
jmp
dec
mov
jb
fwait
mov
mov
daa
cmp
lret
and
jmp
push
and
cmp
mov
cmp
loope
stos
xor
repz
leave
mov
jle,pn
mov
inc
imul
shll
dec
lods
stc
inc
inc
sub
dec
push
rclb
dec
aam
aad
mov
cmp
jo
sbb
jns
or
rolb
scas
stos
pop
and
mov
or
pop
clc
inc
mov
add
cmp
or
adc
cmp
stos
jg
das
popa
repz
pop
inc
out
sub
test
dec
aaa
lahf
adc
mov
or
ljmp
and
loop
fwait
push
sbb
jl
jo
inc
iret
idivl
dec
or
scas
stos
cmpsb
rorb
or
out
jecxz
and
mov
jle
repnz
adc
pop
ljmp
and
fmuls
adc
inc
popf
ljmp
push
mov
pop
mov
jno
inc
sub
iret
xor
jge
mov
jb
rdpmc
add
xchg
popl
gs
sti
movb
js
test
cmp
dec
lret
push
jl
sahf
imul
pushl
mov
pushf
testb
sbb
cs
das
dec
lret
or
jno
mov
lods
jmp
pop
out
inc
lret
jnp
xchg
push
inc
dec
bound
pop
in
lods
cmp
jl
outsl
pop
es
adc
cmove
pop
mov
and
inc
push
xor
leave
pop
fs
jp
sbb
into
test
jge
cmpsl
arpl
inc
add
dec
test
or
dec
orb
jle
xchg
in
pushf
or
dec
push
or
fisttpl
aas
adc
push
je
mov
xlat
dec
fwait
gs
jmp
and
popf
dec
subl
xor
adc
fstps
xor
iret
fsub
scas
add
xchg
sbb
add
xor
testl
stos
clc
inc
dec
xor
jnp
ja
xchg
xchg
test
and
jl
and
add
or
push
loope
add
xor
test
fnstcw
bound
pop
cwtl
aad
adc
xchg
out
jne
shlb
roll
rcl
mull
push
dec
xlat
jg
bound
out
outsb
repnz
aaa
jle
test
push
xchg
pusha
sub
das
jns
or
xchg
jo
jbe
adc
add
lods
ficompl
push
dec
inc
mov
dec
mov
cmp
cmpl
xor
cmp
fwait
dec
jo
jecxz
sub
lahf
pop
xchg
add
cmp
es
cmp
in
mov
loope
adc
jl
in
inc
les
daa
jle
stos
mov
insl
inc
cs
test
into
push
pushf
jnp
testb
loop
pop
jle
pop
xchg
ds
cmp
movsl
cli
xchg
pop
sarl
aas
and
dec
cmp
pop
lahf
ficoms
dec
dec
dec
and
aaa
popf
scas
fistpll
or
insb
shl
scas
orb
sub
and
enter
test
repnz
mov
lcall
fmul
loop
into
negl
shlb
inc
in
out
push
and
dec
xchg
aaa
add
xor
jno
or
stos
dec
stos
add
out
adc
daa
pop
and
or
into
pop
mov
jle
movsb
outsl
cmp
dec
sbb
test
pop
dec
or
cmp
add
dec
ljmp
data16
lahf
xor
jb
shrb
iret
xchg
scas
jo
mov
insl
nop
dec
shlb
ja
imul
lcall
loopne
dec
xchg
mov
xor
xor
jle
lods
popa
bound
filds
shlb
les
outsl
jno
std
dec
pop
push
movsl
pop
inc
dec
scas
mov
cmp
inc
in
jp
es
jecxz
hlt
in
ret
ret
lods
outsb
adc
dec
scas
js
addr16
out
dec
call
xor
jno
loope
sbb
dec
xchg
inc
add
das
cltd
sub
adc
gs
jo
add
lret
repnz
push
dec
paddsb
cmpsl
pop
push
call
xor
sub
sub
dec
aaa
cmpsb
push
mov
sbb
and
int3
imul
fstl
dec
stc
cmc
pop
addr16
idivl
fs
loopne
cmpsb
mov
pop
clc
in
xchg
dec
es
dec
dec
xchg
testl
dec
mov
cmpsb
adc
scas
jg
sub
jae
cmp
test
bound
cmp
sti
iret
test
fsubl
inc
dec
fs
xchg
les
inc
adc
test
pop
dec
push
jg
pop
add
mov
jp
int3
sub
je
sti
dec
jmp
and
fisubs
xlat
jb
cmp
stos
cmp
sti
dec
mov
pop
adc
mov
gs
mov
ja
cmpsl
push
les
push
or
andb
dec
outsb
mov
sub
sbb
push
jle
mov
int3
rorl
mov
int
xchg
pop
xlat
sti
jle
dec
xor
int
or
and
inc
adc
ror
jle
mov
cmpsl
test
cmp
push
cmpl
ds
and
or
mov
push
sbb
mov
xchg
das
jl
mov
add
xchg
mov
sahf
add
push
aam
shlb
xchg
dec
dec
mov
dec
jge
ljmp
push
scas
jl
shll
pusha
pop
outsl
cmp
jo
xor
andl
dec
jg
sbb
inc
xchg
ja
xor
push
pop
inc
cmpsl
jle
mov
dec
inc
xor
into
clc
fidivrs
inc
cmpsb
test
and
pop
and
mov
cmovnp
adc
in
sarl
nop
ljmp
push
dec
pop
sub
popf
add
jle
and
les
inc
std
lock
lea
cmc
dec
lahf
inc
outsb
sti
inc
jae
aas
scas
ffreep
dec
mov
pushf
cmp
and
mov
adc
mov
adc
inc
dec
jge
inc
add
inc
sub
dec
inc
ret
orl
inc
lret
in
cmpsl
xor
cmp
push
and
aaa
sub
dec
ret
add
scas
sahf
std
lds
xor
xchg
mov
jae
inc
addr16
repnz
jbe
call
adc
subb
jb
add
dec
mov
jo
pop
push
inc
add
mov
adc
inc
lret
subb
imul
jg
adc
inc
cmp
dec
mov
push
inc
xchg
or
mov
in
mov
xor
dec
dec
mov
orl
lock
fwait
push
or
xor
sbb
push
mov
push
imul
sub
push
stos
scas
je
pusha
dec
dec
insb
jb
push
add
jmp
dec
add
fistpl
mov
cmpsl
rorl
jno
mov
adc
push
dec
fldl
dec
bound
jo
jb
cld
outsb
pop
addr16
clc
add
sbb
out
pop
dec
mov
or
dec
les
cld
sbb
sahf
dec
inc
mov
ja
xlat
inc
cmp
adc
arpl
push
push
mov
sub
fstpl
and
pop
inc
rorb
movsb
leave
jnp
add
dec
xlat
gs
inc
lock
mov
mov
int
sbb
dec
clc
inc
inc
lods
rclb
outsb
fmull
shlb
mov
push
pop
in
sub
add
mov
pushf
inc
xor
bound
add
lahf
aas
push
loopne
dec
inc
sub
adc
in
lcall
or
push
jns
add
inc
mov
enter
add
mov
std
js
dec
pushf
bound
scas
jge
and
cmp
rcrb
addl
push
movsl
cs
fucom
and
movsl
pop
outsl
test
pop
cmpsl
xchg
dec
stos
arpl
jl
adc
jle
xchg
mov
movsl
loopne
sbb
stos
aam
scas
outsl
pop
ficomps
mov
in
sub
popw
and
fldcw
mov
sub
scas
sbb
outsb
dec
jl
push
inc
xchg
sbb
push
lcall
dec
loopne
insl
sub
into
out
fmuls
xor
hlt
mov
pop
inc
ds
mov
sub
inc
aas
add
push
test
movsl
test
jecxz
das
jle
mov
out
push
jl
orb
jg
sub
lahf
cmp
mov
daa
sbb
sub
leave
jl,pn
mov
syscall
leave
into
jle
ljmp
mov
push
lret
shrl
nop
pop
lock
dec
es
lahf
or
inc
pop
loope
clc
pop
dec
icebp
enter
mov
cmp
dec
xchg
shl
or
jbe
rclb
call
nop
pusha
outsl
loop
dec
mov
cmpsl
sub
xor
adc
ds
dec
les
push
movsl
dec
flds
out
jge
jae
imul
je
hlt
jno
aad
repz
arpl
cmp
push
sbb
mov
push
pop
loope
ss
popa
xchg
or
add
clc
push
pop
dec
pushf
mov
sub
cmc
ficomps
or
inc
and
adc
imul
mov
sbb
push
adc
dec
rol
imul
stos
leave
ror
mov
fisubs
xor
mov
adc
push
insb
icebp
dec
cli
mov
ds
pop
mov
test
inc
cwtl
jo
jne
std
sub
adc
rorl
xchg
dec
fwait
pushf
push
pop
sbb
pop
pop
inc
test
sub
jns
dec
mov
pop
push
out
adc
out
jae
or
je
pop
xor
es
jne
push
xor
xchg
dec
aaa
out
mov
adc
xor
dec
test
xchg
xchg
shlb
repz
test
lcall
jecxz
dec
insl
xchg
fisubrl
das
dec
out
or
cmp
xor
je
sarb
cmp
adc
dec
lret
push
sub
pop
pop
inc
fdivrs
pop
bound
dec
mov
mov
test
loop
into
lock
fcompl
outsl
mov
data16
loop
lret
fmul
gs
scas
je
cmpsl
xchg
int
xchg
in
ror
clc
aas
dec
sub
cwtl
aaa
mov
out
cmp
hlt
and
outsl
paddusb
dec
or
jo
insb
lock
push
dec
shrb
stos
adc
xor
iret
imul
mov
pushf
mov
or
mulb
dec
push
fidivl
repnz
outsl
sub
in
cmp
cmp
ja
sub
sahf
mov
push
lods
and
mov
dec
sbb
jo
in
adc
int3
jns
je
mov
jb
dec
sub
add
sbb
rorb
inc
cmp
dec
pop
mov
loop
cmp
dec
adc
and
or
jecxz
jp
dec
iret
pop
imul
push
and
xchg
xor
lds
lea
add
dec
loop
inc
xchg
xchg
mov
push
ljmp
inc
sbbl
jno
ror
push
pushf
dec
fistl
xchg
or
or
dec
rorl
cmc
mov
loop
in
call
mov
pop
dec
fildll
mov
dec
dec
rcll
mov
inc
dec
mov
and
push
push
mov
mov
dec
lds
stc
adcl
push
dec
mov
dec
lock
aad
dec
mov
sub
inc
xor
lret
add
stos
dec
iret
lahf
movsl
or
xor
dec
addr16
cmp
aad
mov
loope
ss
bound
fstpl
aad
mov
repz
cmpxchg
adc
lret
add
add
pop
fildll
pop
xlat
pop
mov
cmpb
pop
lock
outsl
pop
cmpsl
int
mov
call
xor
sub
xchg
xorb
jl
mov
ljmp
outsb
xchg
cmp
pushf
in
cmp
pop
pop
aad
mov
or
xor
xchg
and
ljmp
adc
inc
or
cmp
push
mov
jae
enter
push
mov
pop
mov
in
das
shrl
mov
and
and
dec
inc
rcrb
leave
push
jno
push
aam
sbb
jl
fcoms
and
das
sti
jle
add
dec
inc
or
aaa
inc
jbe
daa
push
mov
fiaddl
fadds
cltd
xor
gs
repz
or
sahf
rcr
orb
mov
jmp
and
jle
repnz
or
push
cmc
add
adc
mov
mov
jle
arpl
pop
loopne
rorl
inc
icebp
push
mov
lock
decl
and
cmc
pop
sub
ds
mov
xor
stc
pusha
mov
adc
pop
cld
mov
inc
movsl
push
pop
shrb
or
dec
jg
xor
adc
jmp
lods
add
out
mov
ss
dec
bndstx
stos
test
sti
fimuls
popl
xor
aad
daa
dec
icebp
insb
xrelease
dec
inc
loopne
lds
and
data16
dec
test
inc
add
push
ret
dec
shll
fildll
dec
jo
and
push
fimull
xor
mov
pop
inc
fcmovne
dec
dec
ret
dec
pop
lds
and
inc
dec
rclb
imul
inc
push
lret
adc
jg
adc
into
mov
xchg
shrl
gs
or
mov
jne
stc
bound
adc
repz
dec
mov
stos
dec
fldenv
jbe
push
sbbb
js
in
dec
jns
clc
cld
bound
dec
sti
fsts
dec
xlat
push
and
pop
fcmovu
adc
push
dec
mov
sbb
mov
int3
dec
mov
test
shrl
dec
gs
pop
je
iret
push
adc
inc
push
insb
cltd
roll
jge
xchg
cmp
sub
fidivrl
push
inc
adc
jbe
dec
cli
xor
out
mov
adc
testb
jno
dec
inc
pop
pop
dec
call
sub
cld
imul
dec
dec
add
cmp
add
lahf
dec
or
or
pop
push
dec
test
inc
sbb
pop
cs
pop
dec
arpl
jno
imul
mov
or
mov
ss
dec
ja
cmp
lcall
ds
cltd
mov
leave
loop
test
jno
dec
push
or
and
mov
int
jb
and
add
cmpsb
push
popa
dec
sbb
dec
in
inc
repnz
scas
scas
popf
dec
jbe
xor
adc
xchg
jb
aam
in
mov
nop
mov
inc
mov
and
cmp
xchg
dec
jns
loop
dec
xlat
xchg
dec
jge
imul
pop
pop
pop
into
out
into
insb
fdivrl
sbb
mov
aaa
andb
insl
pop
dec
cmp
lcall
pop
add
sbb
enter
in
fs
inc
imul
add
ss
call
dec
ret
out
fdivl
loop
imul
jbe
xor
clc
dec
push
pop
sbb
js
xor
lea
hlt
imul
sub
orb
dec
loopne
ljmp
or
bnd
iret
sub
ja
mov
fs
xchg
push
cmp
jle
push
iret
das
rcll
sub
push
pop
jg
mov
dec
out
add
and
gs
sub
jae
cmpsl
push
xchg
imul
es
xor
cmc
cmp
sbb
jle
outsl
dec
ljmp
jge
rorl
xor
sbb
imul
cmp
imul
sbb
das
test
mov
into
popa
push
movsl
cmp
popf
push
iret
push
jg
fildl
in
jle
sti
insb
cld
pushf
cmp
xor
in
adc
mov
lock
push
dec
mov
loope
les
push
sub
adc
dec
xchg
mov
mov
jnp
pop
push
cmpsl
mov
adc
and
sbb
sub
subl
jg
cs
out
lret
sub
das
jp
lahf
sbb
arpl
mov
fs
push
cmpl
jle
dec
dec
mov
dec
lods
hlt
repnz
ss
mov
pop
mov
out
cmp
pop
mov
mov
jl
loope
sti
jg
insb
out
sbb
scas
mov
mov
mov
rcrb
in
jecxz
push
int
or
mov
mov
xchg
das
dec
dec
pop
push
mov
xchg
inc
sbb
push
in
iret
fldenv
inc
mov
jl
pop
push
push
cs
mov
add
xchg
sbb
push
pop
das
mov
sbb
push
cmp
pop
lret
aaa
enter
push
sbb
popl
push
lds
ret
je,pn
cmp
sub
fcoms
in
sub
data16
pop
fwait
data16
mov
jns
cmp
xchg
loopne
clc
xchg
and
adc
hlt
stos
and
ret
pop
insb
push
nop
jns
pushf
popf
push
out
or
mov
pop
mov
or
cltd
stos
dec
movsb
movsb
cmp
sub
sub
add
add
jge
pop
mov
jne
mov
cmp
jo
sub
pop
daa
stos
inc
in
or
and
inc
test
data16
mov
shlb
cmp
fdivl
mov
mov
in
aam
popl
sbb
pop
rcrl
stos
dec
sahf
ss
inc
dec
inc
push
xchg
out
adc
pop
mov
push
fcomip
pop
lods
dec
pop
lcall
imul
outsb
popa
pop
stc
adc
push
sub
mov
stos
push
cmp
mov
xchg
aaa
and
or
aam
push
jle
mov
sub
add
adcl
aad
pop
dec
jnp
sbbb
out
xchg
xor
lret
dec
xor
icebp
scas
sar
jnp
stos
fwait
mov
jbe
mov
cmp
sbb
sbb
testl
out
es
sub
mov
cmpsb
jmp
repnz
in
mov
cs
or
iret
add
jl
and
pop
jle
or
jae
mov
dec
xor
mov
dec
hlt
mov
js
dec
out
rcrl
in
fisttpl
sbb
inc
inc
mov
call
pop
dec
sbbb
iret
decl
fnstenv
jno
stc
dec
dec
pop
aad
dec
mov
lea
mov
dec
jnp
inc
sahf
jle
pop
dec
call
icebp
mov
in
push
jg
xor
dec
adc
sbb
push
and
inc
jo
jmp
pop
push
sub
cli
xchg
clc
xchg
add
xor
jo
mov
jg
xor
popf
mov
xor
clc
mov
lea
lret
jns
pand
sub
cmp
lods
stos
jno
sub
pop
adc
inc
adc
sbb
int
jle
sub
lret
xchg
sbb
sub
dec
cld
add
fisttpl
sub
pop
add
cmp
cltd
and
pop
pushf
push
sub
pop
mov
jl
add
pop
int3
pop
cmp
lock
cmp
mov
js
xorb
mov
xor
dec
sub
jg,pn
cld
or
mov
sub
jecxz
pop
decl
add
sub
jg
loope
xor
addr16
cmp
push
jle
jle
out
cld
imul
pop
xchg
addr16
mov
stos
mov
jg
jne
xchg
pop
xor
setns
mov
loop
mov
sbb
fidivrs
sbb
push
xchg
mov
sub
jno
aas
mov
decl
dec
fwait
cmp
jg
mov
and
popf
int
sub
je
xor
sub
bound
mov
mov
int3
jmp
fdivrs
adc
cmp
xor
cmp
xor
ja
or
push
cmp
aas
inc
movsb
mov
out
stos
pop
jle
adc
jmp
or
popf
push
add
sub
lds
dec
push
xor
pop
lret
adc
dec
iret
push
outsl
xlat
add
repz
ror
jp
dec
mov
xchg
fiaddl
adc
test
cmp
mov
cmp
cmp
scas
sbb
dec
jns
enter
xchg
stos
dec
out
sbb
mov
sbb
adc
pop
das
movsb
sbb
mov
testl
mov
pop
or
dec
into
ja
loopne
das
and
sbb
test
out
cmp
mov
out
dec
dec
push
or
inc
rorb
imul
dec
sub
push
jmp
xchg
add
dec
mov
shl
fs
cmp
dec
sbb
push
push
es
and
push
mov
push
inc
stos
lock
xchg
dec
rorb
dec
mov
jae
setl
jns
out
mov
jl
daa
jne
jle
sbb
jp
xor
in
push
xor
sbb
int3
dec
les
jmp
mov
mov
outsl
jg
iret
inc
sbb
dec
ljmp
popa
dec
aaa
xlat
fnstsw
lock
cmpsb
mov
lret
mov
or
jno
adc
imul
cmp
mov
ds
push
dec
xchg
add
cmp
out
fcoms
cmp
or
lock
jp
pop
lds
scas
cld
adc
clc
cmpsl
dec
cmp
mov
les
xor
pusha
xchg
jne
jle
mov
jne
aas
nop
cmp
dec
insl
out
inc
pop
sub
jl
shlb
int
jmp
rcll
cmp
dec
ss
inc
mov
das
push
popl
shlb
and
dec
jmp
data16
mov
jo
pop
cmp
inc
mov
cmp
lcall
sarl
cmp
xor
test
cli
adc
dec
inc
out
dec
iret
pop
mov
icebp
inc
outsl
adc
in
out
movb
ret
hlt
lods
mov
push
call
rorb
pushw
mov
pop
xlat
dec
pop
lcall
out
rolb
imul
out
push
jbe
mov
dec
cmp
push
xor
inc
jbe
mov
push
decb
testb
sub
pop
xchg
dec
int
push
pushf
dec
ljmp
cs
adc
call
test
ja
push
sub
in
pop
sbb
std
mov
int
xchg
adc
pand
dec
pop
lret
mov
push
mov
lret
mov
add
mov
mov
sub
dec
popa
xchg
dec
stos
mov
adc
jp
aas
fwait
xor
push
sbb
push
jge
rorl
sbb
pop
fbld
data16
into
cld
or
mov
dec
pop
mov
sbb
xor
daa
popl
mov
mov
cs
push
and
lods
mov
xor
mov
cld
mov
cmp
mov
call
outsl
jne
dec
dec
inc
lret
jp
pusha
ret
loopne
and
xchg
dec
mov
mov
outsl
or
dec
push
pop
inc
pop
sbb
jae
int3
sarl
inc
push
inc
aam
cmp
and
das
sub
pop
push
jg
pop
sub
mov
jnp
jp
cmpsl
jg
cmp
jnp
cmp
rcll
mov
xchg
push
outsb
sbbb
push
data16
xor
inc
fldt
movsl
cmp
enter
pop
mov
sub
push
mov
int3
adc
or
jg
sub
rcll
ljmp
int
shlb
outsb
dec
dec
push
pop
stos
xchg
pop
xor
stos
aam
daa
leave
shrb
cmp
sub
iret
jge
mov
scas
jg
add
ret
jle
mov
and
sub
scas
repz
cmc
pop
out
cmc
insb
or
xchg
aam
icebp
out
test
push
call
mov
sti
mov
jg
and
push
inc
jl
or
es
cmpsb
nop
lock
xchg
rclb
inc
mov
add
js
je
sub
inc
out
shlb
add
movsl
push
jle
jns
push
popf
adc
xlat
mov
cmp
sahf
jnp
popa
push
jge
lcall
cmp
inc
jl
sub
mul
lock
jle
sbb
lret
das
shrb
adc
pop
lahf
inc
jg
cltd
sbb
popl
aaa
sbb
int
jg
outsl
mov
dec
push
push
ljmp
shr
fistpll
sub
push
fisubrs
sbb
adc
into
addr16
mov
sub
xchg
mov
nop
cmp
pusha
xchg
mov
into
cwtl
cld
out
les
mov
mov
sbb
cli
and
push
mov
jg
ja
mov
and
jg
int
pop
into
fcomip
inc
mov
jg
test
aam
shll
mov
pop
cmp
xor
iret
xor
leave
mov
fstpt
and
push
xchg
mov
add
in
jg
decl
sub
xor
dec
outsl
lock
lahf
jno
dec
inc
push
adc
mov
mov
sub
js
push
add
int3
cmc
xchg
push
mov
pop
sub
add
pop
jg
mov
std
jle
cmpsb
jo
add
sub
scas
outsb
fsts
je,pt
fnstcw
stos
rorl
push
lahf
ljmp
push
jecxz
dec
std
inc
push
pop
sahf
xor
push
fdivl
pop
movsb
iret
jo
lcall
mov
dec
or
ja
jb
loopne
sbb
sub
les
dec
or
jp
xor
xchg
add
mov
mov
xor
dec
add
not
adc
or
out
jle
imul
out
push
push
pushf
subb
lds
cmp
iret
imul
add
mov
or
dec
xor
inc
add
cli
pushf
imul
nop
dec
and
dec
push
mov
dec
mov
push
push
loopne
pop
dec
add
andl
cmp
inc
es
negl
jl
and
xchg
dec
inc
lods
inc
inc
and
dec
and
lds
push
dec
xchg
mov
test
repz
push
mov
popa
adc
xor
addr16
fnstcw
and
sub
sbb
jge
outsl
dec
fsub
mov
orl
rclb
dec
fsubrp
jecxz
push
and
cmp
das
fnstsw
inc
popf
arpl
cs
cli
imul
xchg
xchg
jl
or
cmp
ljmp
lret
in
cmpsl
fisubrs
repz
sub
push
jmp
push
jb
pushf
out
add
ds
fnstcw
and
mov
inc
aaa
jl
push
inc
cmp
adc
in
test
jle
inc
jnp
rolb
xchg
dec
fildll
bound
cmp
das
jae
jg
cmp
repnz
push
sub
xor
shlb
aam
adc
jl
in
and
mov
xchg
adc
daa
lcall
xchg
ret
xor
adc
sub
xor
add
and
out
jg
pop
push
fdivrs
pop
arpl
andl
push
rep
lahf
and
lahf
pop
and
rorl
into
sti
pop
out
mov
data16
iret
mov
cmp
outsb
inc
insb
fs
cmp
mov
mov
dec
jmp
jnp
adc
arpl
jg
in
jecxz,pn
icebp
shrb
aad
frstor
dec
dec
fldenv
jle
clc
xlat
dec
cwtl
daa
or
or
mov
test
cmp
xor
lret
mov
jmp
mov
dec
xor
int3
ljmp
push
xchg
add
xor
stos
push
add
xchg
add
sub
hlt
mov
negl
mov
dec
stos
clc
xchg
jo
in
dec
cmp
mov
sub
add
inc
push
clc
dec
sbb
popa
push
inc
mov
or
int
addr16
testb
stos
out
or
dec
add
jb
jle
push
or
in
out
mov
jg
test
jle
inc
dec
xchg
out
mull
mov
dec
fists
adc
pop
das
push
inc
notl
into
mov
shll
loope
push
ficoms
iret
aas
jle
into
cmpsl
and
addb
gs
jge
aaa
jl
sub
ja
shlb
push
cmc
add
mov
sbb
xlat
lahf
mov
lock
pop
adcb
inc
aas
sahf
xor
add
cmpsl
pop
mov
sub
imul
mov
into
stc
mov
mov
jecxz
adc
xor
idivb
push
es
repnz
mov
cs
xlat
clc
pop
cwtl
pop
mov
pop
dec
fbld
jno
pop
and
sbb
jl
lock
sub
lret
movsl
xor
pop
cmpsl
cs
push
lods
mov
xor
daa
scas
push
dec
in
mov
and
sub
repz
add
xor
pop
add
out
adc
mov
daa
sub
cmp
and
je
dec
test
push
fwait
cmp
xchg
aaa
rcll
cmp
scas
add
mov
js
mov
xchg
xor
fistps
cmp
jl
or
test
mov
and
addr16
aaa
shl
and
push
cmpsb
outsl
push
and
pop
cmp
pop
xchg
dec
into
xchg
jbe
mov
lea
test
icebp
pop
and
ljmp
movsl
loopne
pop
fwait
scas
out
das
out
xor
cli
jecxz
iret
ja
into
movsl
jl
outsl
lods
mov
pushf
sbb
fiaddl
pop
fmulp
loope
addr16
pop
ja
jo
dec
mov
cmp
dec
popf
push
pop
nop
jp
jno
lahf
and
dec
roll
sti
mov
lret
stc
jle
mov
lea
scas
pop
sbb
lods
outsl
and
out
pushl
dec
das
push
divl
fildll
or
cmpb
in
out
cltd
mov
dec
pop
out
inc
aas
and
andb
lcall
dec
sbb
pop
push
gs
xchg
add
stos
lret
arpl
dec
jne
fcoms
mov
sbb
test
pop
addr16
outsl
dec
mov
adc
xchg
lds
pop
xchg
fisubrs
inc
dec
lock
in
cs
fisubl
mov
or
xchg
ret
jbe
dec
sbb
dec
aad
repnz
dec
mov
imul
mov
cwtl
lods
lret
pop
imul
dec
shr
test
imulb
in
cmc
inc
fwait
add
loope
jmp
add
dec
scas
test
add
mov
jo
loope
cmpsb
xchg
dec
dec
mov
in
iret
jmp
mov
push
ja
mov
popf
repz
inc
jg
sbb
daa
pop
fwait
mov
sub
pushf
pusha
jge
test
mov
cmp
pop
push
js
scas
insb
ds
dec
sti
sahf
insl
inc
dec
push
int3
aam
cld
xor
adcb
dec
mov
ljmp
hlt
jno
loopne
mov
or
mov
les
mov
pop
clc
fistpl
ljmp
cmc
jle
jg
mov
pop
cmp
push
call
sub
dec
push
je
cmp
test
mov
jl
and
mov
in
mov
sbb
cmp
cmp
bound
pop
sti
mov
jg
mov
ljmp
pop
mov
icebp
loop
push
subl
mov
movsl
mov
fwait
cltd
mov
repz
movsl
or
jg
inc
jmp
jp
pop
and
sub
movsb
ret
jg
and
shr
mov
int3
jg
iret
lock
leave
dec
sarl
lea
dec
and
iret
sahf
jge
sub
or
dec
ljmp
pop
nop
dec
dec
cltd
add
pushf
or
dec
out
and
mov
aam
pop
inc
add
iret
cwtl
dec
in
push
insl
adc
jl
dec
jp,pn
je
xor
dec
cmp
cwtl
repnz
adc
test
push
shlb
mov
ljmp
sbb
jne
ja
stc
out
sub
ffree
shlb
jb
xchg
dec
out
dec
sbb
js
mov
mov
mov
jecxz
ret
pop
xor
sahf
inc
insb
pop
inc
dec
pushf
sub
mov
popa
pop
dec
movsb
ficoml
add
loop
mov
adc
dec
ljmp
lret
fldcw
pop
mov
dec
jae
add
repz
adc
dec
clc
test
mov
sub
outsb
mov
test
repz
push
push
lock
mov
test
mov
ficoms
aas
pushf
mov
cltd
adc
or
loope
adc
test
ror
ds
mov
jne
outsl
jge
mov
push
data16
sahf
xchg
and
push
cmp
cmpsl
popl
dec
and
sub
mov
add
jae
jl
ret
cltd
add
fsubrs
loop
fisubrl
faddl
sbb
enter
inc
mov
not
cmp
xchg
movsb
mov
enter
fdiv
repz
dec
shrb
ds
inc
mov
xor
push
sti
pusha
pop
jl
push
std
fwait
icebp
mov
lret
inc
xor
dec
jg
mov
or
imul
and
mov
inc
xlat
sbb
cmc
iret
mov
int3
icebp
xchg
adc
subb
mov
repz
ds
cmp
push
cmp
xor
popa
sub
sbb
push
sarb
sti
por
xchg
push
xchg
dec
mov
mov
xchg
repz
push
bound
jl
dec
lods
sti
fidivl
fdivrs
std
push
push
and
jnp
sarb
and
daa
repz
popa
mov
push
enter
dec
jecxz
hlt
loopne
movsb
ret
sub
ret
adc
push
sub
mov
mull
xchg
rolb
add
mov
jb
into
mov
push
test
sub
outsl
fldenv
dec
lock
scas
xchg
int
bound
inc
mov
inc
pop
mov
push
cmp
sub
aaa
repz
add
aas
fwait
cmp
sub
aaa
sbb
mov
pusha
ret
out
rorb
shr
sbb
pmulhuw
bound
mov
insl
push
shrb
icebp
ret
mov
xchg
push
scas
aaa
mov
mov
sbb
inc
int3
fdivrp
sub
cmpsl
aad
shlb
add
inc
jle
sar
cs
lods
dec
incb
movsb
or
pop
cmpsb
dec
aaa
mov
ljmp
sub
popa
dec
dec
add
mov
cmp
dec
xchg
push
dec
fidivl
lea
arpl
nop
cwtl
pop
dec
loop
out
adc
loope
jnp
ljmp
dec
int3
xor
or
jge
dec
dec
dec
repz
xchg
popf
xchg
aam
dec
sbb
test
cmp
xlat
aas
scas
jo
jno
roll
into
xchg
cmp
dec
mov
test
push
dec
inc
mov
jo
pop
sbb
test
dec
mov
pop
nop
mov
xchg
cmovne
fdivrs
fnsave
or
imul
dec
dec
in
xchg
push
sbb
jbe
jge
out
into
sbb
push
ljmp
fistl
gs
addr16
jne
jl
pusha
dec
mov
les
pop
mov
inc
jbe
push
mov
out
dec
dec
mov
in
aaa
adc
sbb
jp
decl
lods
mov
test
or
cmpsb
movsb
add
lods
adc
bound
arpl
lock
adc
or
mov
dec
mov
pop
and
dec
sub
pushf
xor
data16
cmp
mov
cmpl
std
push
sub
loopne
cmp
adc
mov
arpl
and
mov
dec
xor
jns
sub
dec
push
dec
mov
pop
dec
add
cmp
mov
or
jae
mov
push
dec
dec
out
test
pop
dec
dec
inc
ss
xchg
sbb
cli
mov
cmpsl
xor
jecxz
bound
cvtdq2ps
jno
aaa
popf
dec
leave
push
ds
fs
pop
add
dec
pop
mov
movsb
and
mov
dec
jecxz
lods
inc
in
not
dec
jne
pop
orl
repz
dec
clc
insb
dec
dec
mov
sbb
push
jne
cmpsb
xorl
pop
pop
dec
push
insl
dec
mov
push
xor
rolb
push
xor
jo
mov
dec
scas
pop
in
arpl
das
push
pop
xchg
ret
jle
push
xchg
push
outsb
adc
add
xchg
and
gs
push
mov
cli
cmp
dec
or
js
loop
and
dec
ja
fdivrl
push
mov
cmpsl
dec
jp
and
cmp
loopne
mov
xchg
int3
and
in
cmp
and
ds
daa
mov
mov
cmp
add
dec
shl
mov
and
lahf
add
insl
cli
test
xor
mov
mov
ret
or
add
jg
je
dec
push
add
in
mov
sub
setns
xchg
lcall
inc
cmp
fwait
dec
push
and
jle
out
lock
mov
jo
movsl
cld
pop
push
xor
mov
fs
js
xor
pushf
pop
push
and
cs
das
push
mov
xor
sub
inc
ds
push
sbb
shl
xchg
or
dec
and
lret
int
es
pop
stc
pushf
scas
scas
sti
fidivrs
adc
or
xor
sbb
dec
idivl
arpl
sahf
mov
divb
cmp
pop
jl
push
int3
mov
popa
lret
xor
push
adc
lret
movsb
pushf
inc
add
push
mov
xchg
mov
jg
fisttpll
mov
hlt
aas
add
mov
aas
lods
loop
out
jg
lcall
aas
lret
das
pop
arpl
les
fisubrl
loope
xor
mov
insb
or
pop
dec
cmp
pop
iret
jle
arpl
xchg
fmul
inc
int3
in
pop
dec
jg
je
lea
pop
int
mov
mov
dec
rcll
jmp
adc
xchg
jl
cmp
dec
and
cmp
and
arpl
add
test
cmc
or
ficompl
or
add
mov
inc
insb
xlat
aas
bsf
or
out
push
out
mov
pop
shrb
xchg
mov
adc
push
das
mov
aad
in
dec
sarl
dec
imul
das
jp
into
xchg
jo
pop
jl
dec
movsb
adc
add
jns
dec
loope
adc
mov
std
in
lock
fildll
push
sub
adc
dec
outsb
std
mov
pop
imul
lret
stc
push
cld
orb
adc
sbb
xchg
sarl
js
stos
or
cmpsb
nop
add
pop
sbb
cmpsl
lahf
dec
arpl
sti
rclb
inc
popf
push
negb
daa
mov
imul
sbbl
mov
add
push
hlt
loop
mov
roll
xlat
mov
xor
sbb
dec
and
aas
loop
dec
cld
xor
jns
dec
mov
es
orb
scas
cwtl
mov
dec
mov
adc
dec
fisubl
inc
and
lahf
mov
adc
cmc
hlt
jecxz
sbb
cmp
push
insb
pop
dec
inc
in
dec
pop
fldcw
or
mov
stos
dec
insb
dec
cmp
loopne
mov
dec
xor
out
fsubs
rcrb
dec
cmp
dec
jp
push
dec
ret
pop
sub
xor
mov
xchg
mov
leave
dec
fbld
in
or
int
xchg
pop
inc
je
pop
test
movb
adc
and
movsb
imul
pushf
mov
inc
in
fwait
dec
dec
adc
dec
add
xchg
jo
cmpsl
push
scas
cltd
stc
loope
xchg
sbb
mov
jo
jl
fdivrl
mov
inc
sbb
mov
icebp
cmpsl
xchg
xchg
sub
xor
dec
cli
jle
adc
sbb
arpl
push
jb
fbld
in
push
push
shlb
jg
xor
jnp
jge
pop
lcall
xor
xchg
inc
out
lds
xchg
mov
insl
pop
fcomip
call
jg
push
pop
pop
xchg
js
jg
roll
into
lcall
mov
ds
adc
outsb
int
xchg
subb
push
xchg
leave
jle
mov
inc
mov
sub
push
cmp
dec
sbb
je
mov
dec
fwait
pop
repz
jmp
ret
inc
out
rorb
mov
lock
inc
test
add
pop
dec
mov
stos
push
mov
jmp
jecxz
dec
pushf
xor
stos
repz
test
ja
inc
dec
pop
dec
push
int3
push
sbbl
and
lret
dec
std
and
outsb
test
xchg
inc
dec
enter
out
jb
sahf
dec
loop
dec
rcll
paddsw
dec
and
or
mov
sub
movsl
adc
out
sbb
lret
cmp
dec
cmc
jns
xor
adc
insl
ljmp
stos
cmpsl
push
jl
test
push
mov
jg
push
xchg
dec
bound
adc
jp
mov
movsl
jo
icebp
push
dec
dec
pop
jl
sbb
mov
imul
mov
cmp
mov
icebp
jle
or
ljmp
out
pop
push
shrb
dec
cwtl
push
dec
jne
dec
stos
sbb
cld
mov
aam
mov
sub
cmp
adc
xor
push
bound
mov
fs
pop
or
xor
outsl
cs
hlt
pop
push
sbb
dec
add
popf
cmp
dec
push
xchg
fldl
cmp
jae
insb
stos
movsl
inc
mov
inc
pushf
xchg
mov
mov
dec
lods
into
jle
inc
pop
push
xchg
sub
adc
jnp
scas
mov
jle
sub
cwtl
aad
lcall
and
inc
sarb
xor
jo
and
gs
out
imul
divps
test
cmp
mov
push
mov
dec
out
push
lods
push
pushf
push
pop
push
in
mov
pop
cltd
movsl
and
cmpsl
jle
mov
pop
sbbb
xor
dec
ss
adc
stos
mov
mov
push
orb
gs
test
ljmp
push
mov
iret
adc
xor
dec
xchg
hlt
ret
or
test
rcll
jnp
out
push
jl
and
mov
out
add
jp
jne
dec
push
decl
test
dec
je,pn
data16
ret
mov
dec
pop
inc
push
jl
xchg
loopne
call
mov
push
mov
dec
jmp
filds
push
push
jbe
dec
pop
add
out
dec
ficomps
inc
xor
xor
lret
cmpsl
imul
xor
fiaddl
sti
adc
pop
pop
jb
xor
xor
ret
dec
int
push
lret
jnp
dec
add
repnz
push
pusha
cs
dec
pop
inc
iret
movsb
inc
jg
out
js
ljmp
aaa
les
inc
sub
or
pop
push
or
pusha
sub
leave
std
and
movsl
dec
repnz
mov
roll
dec
push
xchg
mov
out
fmull
and
add
xchg
mov
shll
stos
into
repz
xor
psubsb
sub
and
jle
out
ret
dec
mov
pop
js
push
bound
sti
xchg
insl
add
fcoml
mov
loop
dec
es
mov
fwait
iret
pushw
adc
and
cmp
cmp
int
mov
sub
sarl
out
cmp
rcl
sbb
sbb
mov
lods
daa
pop
inc
xchg
mov
mov
or
lret
mov
jbe
sub
sbb
hlt
xor
dec
cmpsl
movsl
enter
pop
cmp
jg
or
push
mov
pop
cmc
jno
pop
inc
out
test
fs
sahf
cmpsl
nopl
xor
in
iret
xor
push
insl
das
shrb
loopne
jge
int3
push
pop
inc
push
and
cmp
xchg
xchg
and
inc
roll
jg
sub
div
pop
movsb
lret
pushf
clc
push
fstsw
jp
xchg
inc
cmp
orb
pushl
and
push
xchg
add
mov
inc
push
pop
mov
jae
sbb
jbe
push
imul
rcl
sbb
xchg
mov
pop
movsb
mov
test
out
fiaddl
mov
ficoms
adc
and
sub
int
xor
pop
pop
xchg
shlb
dec
xchg
cs
mov
movhps
jge
repz
das
pop
push
iret
jae
xlat
push
in
movsb
ja
push
mov
jle
mov
mov
cmpsl
popf
loopne
cltd
dec
les
push
rcrl
push
or
cmp
rolb
test
push
add
scas
pop
lahf
jp
lahf
push
xchg
test
pop
in
dec
es
jl
repz
ror
fidivrs
xchg
sbb
dec
movsl
and
mov
push
sub
dec
int
lock
ret
xor
mov
cs
push
fstp
add
andl
pop
push
pop
mov
inc
push
out
imul
into
incl
hlt
xchg
out
popa
out
add
loop
cltd
rolb
jle
jg
dec
or
jl
inc
xchg
insb
je
sub
sbb
add
repz
push
mov
jp
xor
test
xchg
addr16
dec
out
xor
aam
in
dec
test
or
mov
fstl
xor
pop
dec
inc
enter
mov
dec
xlat
xchg
mov
rorb
dec
paddd
push
dec
lret
insl
cmp
pop
int3
dec
js
lods
mov
pop
sbbl
dec
lods
lret
clc
je
les
mov
push
dec
cmp
push
inc
pop
mov
outsl
pop
loop
shrl
push
xchg
stos
pushf
dec
push
cmc
int
pop
dec
xlat
fstpt
mov
dec
mov
mov
out
xor
or
jb
mov
lret
xor
fcmovnbe
mov
adc
data16
hlt
cwtl
adc
dec
sub
mov
dec
in
cwtl
adc
cmp
xor
pop
pop
jp
enter
imul
into
pop
dec
out
arpl
mov
adc
xor
mov
ds
in
movl
pop
mov
aam
negl
das
shl
int3
dec
stos
outsb
cmp
xchg
dec
dec
imul
std
out
out
adc
xchg
cmp
mov
pop
dec
je
stos
jle
stos
pop
sbb
out
clc
outsl
gs
add
xchg
call
dec
shr
dec
jmp
adc
add
sbbb
pop
ret
jg
sti
stos
push
dec
xchg
nop
sub
and
cmp
js
xor
lock
icebp
dec
sbb
and
cmp
jge
jl
xchg
iret
fildll
add
push
sbb
ss
xor
stos
iret
hlt
cmpsb
sub
sbb
test
sbb
mov
adc
or
lret
mov
sbbb
int
nopl
jmp
cmc
lahf
in
pop
or
ja
mov
dec
lods
cmp
jg
jle
mov
mov
ret
dec
aaa
in
lods
or
bound
test
jle
push
push
sub
ss
stos
rclb
mov
inc
cmp
xor
in
pop
push
pop
sub
stos
xchg
mov
dec
xor
nop
dec
pop
push
lretw
es
ljmp
ret
incl
xorb
pushf
cmpb
dec
lods
and
movsb
cld
in
jb
mov
mov
outsb
jle
push
out
push
dec
xor
enter
xchg
cwtl
jle
fsubs
aas
dec
fidivl
pop
test
xchg
xor
push
mov
je
and
mov
sub
clc
mov
ljmp
out
dec
push
clc
xlat
into
push
xchg
insb
cmpsl
inc
jl
jge
push
loopne
and
rclb
je
push
mov
loopne
popf
jmp
sbb
nop
fldcw
inc
aas
jl
std
adc
ds
push
shr
sbb
in
dec
push
jle
insl
dec
mov
xor
pop
popa
loop
sbbl
add
cmp
xchg
inc
jl
sar
loope
mov
out
cmp
xor
fstl
jg
mov
add
pop
pusha
lods
mov
pop
std
lds
adc
sbb
jp
xchg
jl
out
cmp
fcoms
jmp
repnz
in
es
inc
sti
mov
popl
push
aad
and
fdivr
mov
sti
aam
xchg
or
or
sbb
hlt
jns
sub
add
pop
bound
std
mov
test
orl
sbb
cs
ret
cmpsb
int
shrl
sub
lret
fidivs
inc
notl
js
xchg
aas
mov
fisttpll
shlb
icebp
mov
cmp
fldenv
push
push
add
xor
mov
jo
aaa
ficomps
or
jno
shrb
cmp
cmp
movsb
mov
pop
pop
das
mov
dec
adc
ss
out
jge
aaa
mov
dec
icebp
fistps
sub
aam
mov
outsb
jle
cmp
xchg
ljmp
fs
inc
scas
mov
cltd
push
popf
imull
cltd
out
dec
test
jo
dec
mov
lea
inc
mov
jle
enter
sub
clc
enter
xchg
dec
sbbl
mov
xlat
inc
stos
dec
xchg
ret
pop
daa
repz
stos
bound
dec
sub
push
shrl
dec
imul
inc
stc
test
ret
sbb
icebp
test
dec
sar
mov
cmpsl
rcrl
dec
pop
std
or
mov
dec
fcmovnb
push
add
mov
loopne
mov
jmp
dec
mov
lahf
rclb
sbb
adc
notl
jg
popa
push
push
sub
nop
sti
inc
or
xor
lock
je
cmp
jl
iret
pop
bound
push
popa
dec
jl
push
xor
push
jns
push
jbe
adc
xor
in
sar
inc
cmpsb
shlb
dec
test
push
dec
cmp
movsb
add
scas
sahf
sub
rcl
push
hlt
or
shr
and
mov
pop
or
lcall
xor
dec
aam
lods
pop
jle
jle
dec
int
loope
mov
pop
insl
sbb
mov
outsb
repz
mov
jb
push
dec
dec
mov
inc
mov
xchg
mov
add
fisubrs
pushf
cmp
add
push
outsb
adc
dec
push
and
adc
pop
inc
dec
mov
lea
mov
aaa
pop
push
pop
adc
loope
fnsave
int
icebp
outsl
ret
cli
cmpsl
or
mov
xchg
and
pop
mov
dec
xor
fwait
dec
mov
add
dec
fmul
pop
bound
stos
xchg
stos
sub
jl
scas
idivb
mov
out
inc
jl
es
pop
cmp
cmp
pop
movsl
push
pop
sbb
xchg
das
fildl
inc
repz
ljmp
ds
inc
call
dec
xlat
sbb
xchg
push
or
jb
testl
outsb
imul
mov
add
sti
cld
xchg
cmp
stc
dec
jo
push
jge
jnp
and
shrl
mov
notl
iret
add
ret
clc
ss
faddp
xor
or
or
lods
or
push
outsb
inc
daa
int3
pxor
mov
push
test
add
jle
nop
mov
xlat
fs
sti
mov
pop
jg
jae
sub
push
dec
cmp
mov
mov
clc
xor
cmpsb
idiv
adc
pop
xor
inc
js
and
pushf
pusha
xchg
fbld
fstpl
lcall
movsb
mov
xchg
lahf
dec
aad
int
fs
push
mov
test
xchg
jg
push
cmp
pushf
aaa
sub
bound
scas
fcomps
imul
pop
mov
inc
inc
aaa
add
rorb
mov
inc
mov
dec
push
mov
fisttps
push
sbb
pushf
jno
imul
push
cmpsl
or
mov
sti
dec
bound
test
dec
jmp
ffree
int
push
dec
rorl
filds
lock
inc
jmp
dec
dec
sti
stos
cs
cmp
push
push
pop
adc
inc
xchg
dec
jmp
scas
sub
or
dec
push
and
repnz
movsl
mov
fnstsw
pop
sahf
mov
into
xchg
insl
pusha
imul
dec
movsl
pop
mov
dec
dec
cmp
test
dec
or
pop
push
bound
cmp
hlt
and
mov
call
sbb
dec
test
mov
add
dec
in
push
movsw
dec
lock
mov
mov
stos
ljmp
adc
stc
sub
push
mov
xor
call
or
fwait
inc
out
out
xchg
mov
push
mov
outsl
ds
push
fwait
dec
lret
dec
aaa
outsl
mov
cmp
push
pop
fnstcw
inc
dec
cmp
std
rorl
xchg
mov
in
and
push
test
inc
outsb
scas
and
mov
mov
sbb
pop
mov
outsl
idiv
scas
jge
addb
dec
js
int3
inc
lret
sti
dec
mov
pusha
imul
xor
test
push
rorl
insl
jmp
icebp
jo
pop
dec
jnp
in
push
rol
outsb
and
and
dec
loopne
aas
dec
add
xchg
dec
imul
test
pop
into
jne
js
xchg
dec
movsb
test
pop
les
repnz
add
mov
push
cmp
fs
inc
cmpsl
bound
lods
pop
cs
jg
dec
cmp
mov
dec
fs
decb
xor
inc
push
jecxz
cmp
dec
leave
test
xchg
dec
sub
inc
shll
dec
aam
std
jo
sahf
lock
insl
push
dec
loopne
sub
mov
dec
push
and
ja
movsl
out
outsl
dec
and
mov
cmp
pop
in
dec
sub
adc
or
push
aam
pop
cmp
hlt
sbb
push
sub
jp
aad
out
mov
orb
or
jbe
jle
dec
sub
lahf
mov
test
inc
and
cld
cmp
xor
das
dec
jo
outsl
stos
and
pop
movb
sub
cmp
push
or
leave
push
das
jae
xchg
sub
cmp
add
cmp
xchg
adc
cmp
fdivrs
and
aaa
mov
out
push
cs
jle
mov
insb
xchg
dec
sub
push
bound
dec
fadd
mov
sub
dec
and
shl
leave
cmpsb
push
les
jle
and
lods
fcompl
push
jb
lret
hlt
sahf
mov
dec
cmp
cmp
out
mov
and
xor
iret
adc
les
imul
jo
inc
scas
roll
dec
adc
cmp
popa
mov
mov
lret
push
je
mov
pop
scas
xchg
outsb
push
imul
cld
or
out
cmp
lret
pop
js
fistpl
cmc
icebp
je
or
dec
mov
scas
adc
insb
into
pop
lret
ret
dec
xchg
cmp
je
es
subl
rorb
inc
fstps
clc
cmp
jp
stc
arpl
mov
ds
fs
cmp
loopne
lock
cmp
fsubl
dec
fstpl
push
mov
add
stc
mov
lods
push
and
sub
or
out
arpl
lock
call
jl
sub
xor
push
mov
dec
js
ret
push
xlat
mov
lods
repnz
sahf
jle
mov
inc
mov
mov
push
lahf
xchg
jno
out
test
and
jp
jecxz
jl
push
pusha
cs
insb
xor
in
or
enter
iret
into
jl
pop
out
or
mov
push
jmp
dec
mov
into
insb
testl
and
rcll
addb
inc
mov
aam
xchg
lret
mov
fsub
sub
cmp
adc
adc
pusha
fcomi
mov
jl
and
or
ljmp
jl
outsb
push
setne
jb
inc
test
shlb
mov
pop
hlt
inc
inc
cmc
lock
jmp
sub
jp
xchg
out
cwtl
out
jl
inc
jg
xor
mov
or
das
repz
jle
in
inc
jo
jb
sub
lret
inc
clc
mov
scas
add
bound
sub
inc
push
das
repnz
xchg
jo
add
cmp
add
xor
xchg
aam
pusha
mov
ret
inc
inc
pop
movsb
xchg
or
iret
inc
and
xor
icebp
popa
push
ret
rcrb
shrb
roll
jb
into
push
mov
pop
dec
mov
and
or
shrl
out
test
pusha
and
pop
mov
push
jbe
pop
aad
dec
dec
test
sbb
ficomps
cmp
push
jle
and
mov
decb
add
es
push
jmp
push
adc
in
xchg
push
ljmp
cmpb
addr16
push
cmp
das
or
dec
pop
push
stos
out
xor
sti
scas
std
imul
cmp
add
rorl
sbb
push
dec
add
insl
fdivrl
xor
xchg
mov
insb
das
jbe
xchg
ret
les
ss
xor
and
push
dec
lea
xlat
out
sbb
movsl
jl
jb
insl
mov
dec
dec
and
sub
adc
pop
pushf
leave
int
in
out
sub
stos
nop
arpl
dec
shrb
sub
mov
into
sarl
or
enter
test
pop
dec
into
cmp
mov
dec
inc
xor
call
xor
mov
adc
fdivr
mov
outsl
or
dec
sbb
pop
xchg
cmp
fs
push
lret
loope
mov
sbb
dec
ret
mov
xchg
subl
je
movsb
and
mov
testb
pop
cld
or
inc
xor
and
push
push
clc
jns
dec
test
xchg
icebp
push
testb
or
ficompl
adc
stos
xchg
mov
dec
insl
mov
xor
in
test
sahf
movsb
mov
mov
xor
jne
loopne
int
cmp
out
xor
dec
mov
lret
sub
jle
sti
movb
lds
push
pop
cs
fnstcw
pop
lock
je
sub
dec
fnsave
mov
dec
testb
jle
jmp
sub
or
jle
adc
scas
clc
fstpt
fimuls
xor
jnp
les
mov
fnstcw
out
cmp
jl
ljmp
inc
dec
pop
mov
mov
adc
push
iret
and
mov
addb
mov
push
cmp
in
gs
cmp
mov
xchg
mov
jo
push
or
inc
sub
inc
nop
imul
cli
jmp
outsl
cltd
push
fisttps
dec
faddp
and
mov
das
insb
ja
add
rcrb
mov
mov
popa
dec
pushf
cmc
lods
jo
subb
sarl
aam
daa
dec
fnstcw
lret
xor
mov
cmpsb
into
mov
xchg
divl
mov
mov
cwtl
fistl
fmulp
adc
inc
hlt
popa
iret
sub
and
repnz
inc
les
mov
ret
mov
inc
in
jecxz
push
dec
pop
out
xor
push
ret
fisttps
cmp
and
fisubrl
leave
pop
addr16
mov
addl
cmpsl
dec
popa
adc
xchg
or
sub
dec
adc
lock
fistl
add
icebp
lods
cmp
dec
movsl
dec
in
repnz
inc
leave
jns
dec
test
cmp
mov
jbe
sub
and
pop
dec
and
adc
dec
add
mov
push
push
cmp
movb
shlb
aas
xchg
mov
add
movsl
faddl
enter
push
in
outsb
test
sbb
mov
dec
xor
inc
mov
es
pop
and
push
xchg
fldcw
cmpb
jle
fsubp
xor
sub
in
push
mov
adc
or
aaa
aam
pop
dec
mov
push
pop
add
sub
xchg
sub
xchg
add
xor
mov
stos
mov
dec
daa
stos
adc
ss
and
cwtl
lret
mov
in
xchg
mov
dec
xor
lcall
test
fsubp
adc
and
xor
and
sub
push
cmp
neg
test
cld
lea
addr16
mov
jle
adc
js
xchg
in
insl
into
push
jg
mov
out
cs
popl
push
enter
inc
dec
shrd
mov
push
jmp
aaa
or
push
jp
fists
mov
mov
add
dec
push
lret
cmpsb
rcr
jmp
xchg
sub
dec
scas
rcrb
xchg
mov
adc
dec
push
das
push
pop
sahf
and
and
sbb
fmuls
scas
add
or
in
jmp
nopl
int
dec
xor
add
cld
jo
out
xchg
lds
adc
aam
dec
aad
fisubrs
push
jl
pop
outsb
mov
cld
test
jns
dec
jno
pop
push
jl
inc
lock
xchg
dec
aaa
shlb
ds
sbb
inc
popa
mov
push
cmp
push
or
popf
dec
aas
clc
dec
xor
add
dec
insl
stos
ja
xor
cltd
cs
pusha
add
popl
lahf
and
jae
sub
and
dec
xlat
mov
fists
jo
shrl
dec
mov
dec
dec
fwait
mov
cmp
pushf
cli
std
xchg
lretw
dec
sti
or
inc
dec
gs
cmp
dec
push
stos
and
push
or
dec
and
mov
outsl
mov
popf
dec
or
xor
xchg
mov
call
shlb
sbb
das
js
cmpsl
inc
mov
jo
sbb
cmpsl
in
push
shlb
dec
jg
jne
cmp
mov
ret
ss
mov
cmpsb
lret
mov
adc
mov
into
and
repz
xchg
aad
pop
lods
sub
dec
xor
insb
or
inc
inc
aad
pop
add
push
arpl
ss
dec
popf
jp
adc
iret
jge
mov
enter
and
pop
add
adc
jns
jno
pop
dec
test
test
dec
inc
fistps
nop
dec
adc
fs
mov
xchg
into
add
dec
out
mov
xchg
adc
loopne
push
stos
inc
and
mov
ja
push
xor
dec
xor
adc
lods
add
icebp
jl
jne
hlt
dec
clc
call
out
dec
sbb
sbb
adc
fisttps
xlat
addr16
or
mov
push
ror
insb
cmpsl
dec
mov
xchg
lret
nop
dec
and
dec
mov
das
movsb
xor
gs
cmovnp
dec
ds
dec
mov
xchg
scas
or
dec
lods
sti
jmp
in
xchg
mov
jbe
dec
pop
idivb
sahf
cmc
xchg
dec
dec
mov
nop
add
push
sbb
movsb
icebp
dec
jle
push
xor
jne
fimull
addr16
pop
es
pop
xchg
sbb
and
pusha
add
dec
dec
sarl
add
inc
dec
or
mov
and
je
dec
cmpxchg
mov
pop
rorb
mov
xchg
scas
dec
xchg
iret
loopne
push
mov
push
dec
aad
dec
pusha
jp
jge
lea
pop
inc
das
lods
lock
es
sbb
lock
rolb
and
jl
cs
in
inc
jmp
test
data16
push
call
jl
mov
lret
pusha
mov
in
fwait
xor
in
or
push
lahf
jb
fcoml
and
xlat
sub
inc
lahf
loopne
mov
test
push
cmp
jge
push
push
lods
sbb
jmp
nop
mov
pop
lahf
iret
push
subl
xchg
aaa
repz
int
jnp
pop
mov
cmovns
or
add
mov
mov
mov
inc
adc
dec
or
jno
push
jne
adc
arpl
xor
xlat
dec
mov
sbb
or
push
add
bound
dec
push
push
inc
loopne
sbb
fisttpl
pop
fidivl
dec
outsl
jnp
das
inc
mov
ss
repnz
fcomi
dec
mov
mov
inc
add
or
aas
imul
test
xchg
push
dec
add
cmpb
popf
or
cmp
sub
in
iret
test
xchg
int
adc
movsl
inc
mov
or
inc
jge
pushf
push
and
cmp
push
and
int
cmp
outsb
mov
or
rorb
lcall
ds
stos
xchg
negl
mov
stc
mov
dec
dec
movb
push
imul
push
dec
nop
shl
cli
pusha
mov
movsb
inc
push
and
lcall
add
icebp
repnz
dec
fisubrl
mov
cwtl
ds
dec
push
xchg
insl
dec
negl
jbe
lahf
cmp
adc
mov
cmp
fs
push
push
stc
dec
iret
cmpsb
add
fisubrs
repz
pop
addb
in
lahf
adc
iret
jmp
pop
dec
dec
mov
ljmp
cmpsb
fs
dec
fs
adc
cmp
mov
mov
add
and
fiaddl
pop
or
test
push
and
popf
add
out
dec
test
jmp
dec
mov
cmc
xor
int3
or
out
je
cwtl
xor
call
xchg
cmp
insl
sub
pmaxsw
pop
xlat
notb
xchg
sbb
ss
movb
or
jecxz
std
hlt
sub
pop
jmp
repnz
mov
mov
clc
scas
in
dec
les
xchg
aad
inc
xor
dec
daa
gs
js
out
shrb
into
popf
enter
jg
jbe
adc
pushf
or
cmp
cltd
dec
fsubl
pop
fs
inc
icebp
lods
insb
icebp
cld
std
mov
insb
pop
aas
loop
and
fcomps
and
pusha
std
xchg
sbb
jbe
inc
loopne
lods
push
xchg
cli
sub
add
push
jae
fistl
cmp
jle
add
inc
and
ss
pmaxsw
fists
dec
inc
add
out
hlt
mov
add
imul
notl
dec
gs
xor
fiaddl
stos
jg
lea
inc
cmp
lcall
dec
jbe
xchg
xor
xor
xor
cmp
mov
add
inc
loop
insb
sbb
adcb
aam
cwtl
popa
pop
inc
push
mov
pop
xchg
jnp
test
out
mov
cmc
sub
mov
aas
shlb
iret
fsubs
jmp
inc
lahf
movsl
dec
push
lret
xor
push
jl
pop
dec
and
or
pop
jge
fisubrl
lret
aad
pop
lcall
adc
jmp
add
pop
in
std
sar
mov
adc
pushf
nop
lahf
sub
das
dec
push
in
push
in
cmp
dec
jp
fsubl
stos
adc
inc
cmp
cmpsb
dec
cmp
jle
adc
cmp
cmpb
sarb
or
sub
mov
xor
jge
push
pop
mov
xchg
sti
hlt
jmp
leave
mov
push
nop
popf
lock
mov
js
sbb
nop
xchg
and
movsl
imul
pop
mov
sti
and
lret
shlb
push
movsb
pcmpeqd
test
xchg
and
das
mov
repz
push
es
lock
mov
sub
inc
jle
adcb
ljmp
and
out
add
xchg
cs
movhps
mov
dec
and
jbe
repnz
insl
mov
xchg
inc
fs
js
imul
mov
daa
ja
pop
clc
dec
addr16
mov
pop
and
cltd
jg
xor
lock
cmp
dec
cmp
fisubs
xchg
dec
jl
jecxz
sbbb
dec
or
push
ds
std
sarl
popa
divb
dec
or
in
lret
pop
inc
dec
mov
and
sub
jae
add
fcmovnbe
addr16
mov
mov
int
test
dec
jecxz
fsts
pusha
stos
das
call
sub
xchg
mov
jbe
in
in
dec
js
and
push
nop
and
iret
inc
mov
xor
pop
icebp
into
mov
dec
adc
inc
xchg
xor
imul
jmp
sub
dec
je
xor
sbb
js
mov
push
mov
shll
mov
ss
xchg
andb
dec
insl
inc
xchg
push
sub
inc
dec
or
js
fnsave
outsb
mov
sbb
xor
cmp
jb
sub
and
mov
xchg
cmp
mov
mov
pop
dec
and
pushl
pushf
mov
lcall
call
mov
adc
inc
repz
cmp
fldenv
fcmovbe
mov
lcall
daa
xor
dec
rolb
dec
pop
ja
dec
fldenv
jl
mov
pop
inc
jecxz
dec
mov
jmp
add
pop
int3
fdivl
es
or
cmpsl
adc
dec
xchg
cmp
into
and
pop
scas
dec
pand
jmp
mov
mov
cltd
dec
std
scas
lds
pop
in
neg
and
dec
jno
decl
adc
xchg
push
dec
cmpsl
aaa
inc
pop
push
dec
mov
fs
add
jl
pushf
icebp
inc
rcll
adc
xor
mov
xor
or
xchg
mov
in
and
sbb
inc
cmpsb
fildl
xchg
xor
xchg
ss
push
mov
push
mov
xlat
and
imul
jl
arpl
pop
aam
divl
jg
stos
das
mov
sti
push
daa
in
jb
dec
jg
cmp
lds
test
push
or
mov
jo
test
push
inc
jle
sub
in
enter
jnp
and
stc
in
dec
data16
jl
sub
outsb
loopne
stos
sbb
testb
adc
fdivr
out
stos
inc
pop
mov
loope
mov
and
push
pop
call
ficompl
fidivrl
jno
adc
fisttpl
ss
icebp
movsl
data16
jge
loop
lods
sbb
push
pop
adc
stc
dec
inc
cmpsw
stos
ficoms
mov
scas
cs
rolb
js
and
decl
test
inc
jg
leave
repz
lret
fdivrp
pop
and
lds
es
mov
mov
fistl
outsl
and
push
fcmovnu
gs
sub
dec
fs
cmc
sbb
xor
dec
push
movsl
in
xchg
iret
fidivrs
sub
lods
cmp
scas
xchg
xchg
mov
fwait
mov
pop
add
sbb
push
mov
pop
aas
mov
leave
mov
jle
mov
push
mov
loop
lea
testb
pop
mov
fwait
hlt
sub
xchg
sbb
mov
pushf
loop
xor
xor
in
dec
lahf
fnstenv
out
test
in
cmp
call
add
andl
jg
mov
ss
and
jae
popa
insl
mov
or
pop
inc
add
xchg
add
or
mov
sbb
adc
xchg
and
inc
int3
lahf
ljmp
sub
push
xlat
sbb
fnstcw
push
or
mov
rorl
xor
arpl
pop
out
and
test
cmp
dec
push
xor
stos
stos
pop
cmpsl
adc
ret
push
jg
lcall
sbb
aaa
jle
sbb
dec
dec
stc
test
enter
dec
cmp
jmp
mov
test
fsubr
jae
ds
ss
test
sub
inc
js
mov
les
test
mov
ja
dec
sub
pop
sub
push
popf
inc
dec
fstpt
fldl
mov
int
bound
call
enter
or
pop
lock
mov
addr16
daa
nop
inc
lahf
cmp
clc
dec
out
sub
add
rorl
push
inc
fcomi
daa
dec
stos
stc
xchg
imul
repz
insb
dec
ret
or
orb
push
jg
insl
lret
sub
push
sahf
jbe
loopne
jl
or
ss
xor
dec
inc
cli
out
lock
xchg
jbe
and
sahf
dec
jecxz
cmp
jnp
or
clc
cmp
jge
xchg
xlat
xor
sbb
inc
movsb
jmp
pop
stos
dec
clc
call
mov
into
ret
in
gs
jle
xor
mov
ljmp
push
mov
and
sarl
mov
rcr
mov
dec
dec
mov
std
mov
xor
cmpsl
in
das
pop
loope
sub
stos
mov
pop
clc
mov
sub
sbb
cmpb
arpl
iret
push
fisubs
push
inc
dec
xchg
dec
ds
aam
sub
js
rorl
addl
dec
into
notb
push
push
mov
and
ds
cmpsb
xor
addr16
push
fisubs
jl
cmc
out
push
popf
or
mov
ja
add
pop
mov
pop
push
adc
nop
into
cmp
push
mov
mov
push
mov
bound
push
loop
xchg
ror
jg
or
push
lods
sahf
inc
xor
jb
push
movsl
cmpsl
jl
into
inc
adc
mov
mov
and
loope
dec
es
inc
and
xchg
dec
ljmp
stos
inc
negl
sbb
and
es
mov
adc
push
push
mov
mov
or
scas
cmp
mov
inc
sub
pushf
or
inc
mov
repnz
fstpt
sub
dec
mov
pop
dec
lret
adc
mov
push
pop
adc
or
jo
outsl
mov
adc
add
cmpsl
mov
inc
and
xchg
and
sub
adc
loop
shr
inc
movsl
inc
lret
push
xchg
insb
fmuls
add
mov
or
orl
jns
int3
and
outsb
sbb
add
xchg
data16
imul
mulb
fstpl
mov
dec
mov
ja
mov
dec
arpl
mov
imul
bound
xor
adc
sub
push
pop
and
gs
mov
adc
adc
orb
mov
inc
sti
xchg
dec
inc
push
loop
and
jnp
dec
pop
jp
or
loopnew
inc
inc
in
int3
adc
adc
jo
adc
call
pop
xchg
sbb
push
cli
pushf
jne
popf
dec
xchg
mov
jge
dec
mov
and
dec
das
push
push
sbb
jecxz
push
mov
popa
push
push
call
inc
lods
xchg
ja
adc
dec
xchg
jno
test
fisttpl
dec
hlt
inc
xchg
arpl
idivb
cs
add
add
sbb
stos
lret
sub
cmpsb
rclb
pusha
sub
or
inc
or
sbb
lahf
mov
dec
cwtl
rcll
in
jge
insl
sub
cs
gs
stos
xchg
sbb
jg
mov
subb
xor
dec
mov
pushf
adc
test
outsb
sbb
jno
push
jle
add
fsubrl
iret
repz
imul
jle
mov
mov
inc
rcrl
lret
push
orb
sub
pop
pop
in
pop
jb
in
jo
in
sub
push
ljmp
ds
push
test
jl
xchg
push
loopne
rcll
mov
pop
out
rolb
push
dec
fildl
insl
adc
lret
mov
adc
mov
out
fdivrl
adc
mov
imul
das
adc
sbb
loopne
push
cs
xor
fmul
jl
mov
jb
or
cltd
iret
mov
fstpl
dec
gs
jl
xchg
aas
push
mov
mov
nop
mov
lcall
cmp
pop
insb
or
fsubrs
hlt
mov
adc
mov
ret
iret
inc
xchg
scas
mov
cmp
ret
xchg
out
mov
loopne
mov
dec
cmp
cmpsl
stos
dec
scas
push
verw
out
dec
mov
xchg
stos
imull
push
and
rcl
inc
cmp
inc
es
hlt
cld
daa
inc
add
xchg
aad
jle
or
dec
xchg
xor
out
jp
cmc
and
fidivs
jle
sub
in
jbe
pop
scas
pop
jnp
sub
dec
cmc
aam
mov
aas
mov
loop
add
pop
fs
fiadds
jle
inc
movsl
cmp
in
andb
pop
mov
out
fidivrs
adc
add
stos
je
rcll
gs
xchg
adc
xor
into
inc
dec
sub
or
test
or
pop
iret
int
adc
and
sbb
jbe
mov
int
icebp
jb
fcomps
mov
flds
bound
lret
out
aas
insl
xchg
inc
pop
adc
xchg
and
sti
dec
or
or
xor
xchg
imul
packssdw
pop
jle
and
loope
jg
sbb
jmp
xchg
sub
sub
mov
jns
mov
push
pop
mov
fwait
push
rorb
dec
sti
inc
xor
or
or
jg
mov
ljmp
lods
cs
fimull
subl
and
sbb
push
mov
movsb
add
inc
cmp
mov
mov
xor
jno
std
cs
or
jbe
mov
js
push
pop
xchg
mov
mov
mov
repz
movsl
es
dec
mov
mov
outsb
fistpll
xor
cs
lahf
jl
and
fdivl
lahf
fisubs
shll
jo
cld
xchg
outsb
fldl
aam
aaa
scas
jl
xchg
inc
call
cmp
sbb
xor
push
sbb
mov
jg
loop
lea
in
adc
xchg
jle
sarb
je
mull
pop
xlat
cmp
into
xchg
jl
ljmp
pop
lds
mov
out
xchg
in
mov
xchg
jl
jns
pop
pop
jnp
sub
or
add
mov
imul
dec
inc
movsb
jnp
add
imul
sub
rcl
xchg
and
shll
cmp
enter
je
or
repz
mov
inc
movsl
or
pop
lahf
outsl
cmc
shrb
dec
or
cmp
rcrl
mov
lahf
mov
pop
inc
pop
cmpsb
dec
push
out
cwtl
fisubs
jecxz
int
bound
sbb
scas
xchg
dec
xchg
insl
jb
jge
and
inc
mov
icebp
loope
into
hlt
mov
cltd
inc
jp
inc
lods
pop
xchg
into
mov
dec
outsl
mov
add
dec
and
cmp
test
cmp
rcrl
cld
leave
adc
xchg
jbe
in
push
adc
sbb
xlat
hlt
and
jg
mov
xorb
adc
outsb
mov
imul
jp
iret
enter
lret
dec
mov
shll
dec
pop
int3
cli
mov
loopne
inc
dec
pop
and
mov
inc
jle
pusha
push
addb
mov
push
xor
and
cmp
shlb
in
adc
mov
dec
in
dec
cmp
fisttpl
aas
fs
cmpb
movsb
mov
dec
adc
incb
popf
xchg
icebp
pop
push
gs
and
fdivr
jmp
push
and
movsl
popf
stos
push
dec
and
inc
xchg
cmpsl
test
sub
movsb
add
pop
mov
push
cs
lock
inc
stos
dec
in
sub
mov
mov
test
cmp
jb
xchg
ret
pusha
jns
in
scas
cmp
insb
xlat
jl
lock
xchg
addr16
negl
push
mov
xlat
int
daa
jg
lock
xlat
jl
pop
or
adc
adc
bound
adc
mov
mov
leave
arpl
xchg
push
test
std
push
adc
inc
pcmpgtd
fiadds
xchg
arpl
sub
adc
push
stc
cmp
cmp
mov
fcompl
pop
inc
mov
dec
in
bound
clc
pop
xchg
push
repnz
xchg
test
les
jle
xchg
inc
push
mov
xor
in
aas
out
cmp
insl
sub
push
pmaddwd
sbb
cmpsl
lret
test
fidivs
jp
in
or
mull
and
aas
jmp
push
push
push
out
imul
int
xchg
jnp
shll
mov
stos
lret
dec
xchg
mov
and
fadds
or
or
daa
iret
mull
gs
mov
jg
push
pop
sti
jbe
js
int
aas
fs
and
sub
pop
xchg
enter
xchg
xchg
negl
mov
jle
mov
mov
and
cmp
xlat
fisubs
dec
clc
leave
dec
inc
sub
imul
xchg
xchg
es
dec
fisubrs
xchg
mov
dec
aas
imul
sub
sbb
icebp
xor
pop
mov
fisttpl
mov
jne
in
add
fnstenv
into
xchg
fst
testl
test
or
sub
rcrl
aaa
push
mov
adc
out
rolb
or
mov
inc
lcall
subb
daa
jae
mov
cltd
jne
adc
xlat
lds
aad
pop
int3
pop
popl
dec
sbb
jge
daa
enter
test
jne
cmp
adc
test
mov
dec
ret
stc
lahf
mov
xor
or
sti
lret
fisttps
pop
mov
or
fildll
xor
xor
inc
repnz
sahf
mov
push
test
sarl
aas
dec
sbb
outsl
sbb
cltd
sti
dec
enter
mov
sub
mov
xor
dec
aaa
or
adc
push
jne
add
repnz
mov
test
xchg
sub
std
xor
sbb
add
aam
jle
lods
xor
cmp
loope
lods
testl
dec
loop
jg
imul
andb
cmp
pop
jns
inc
cmp
jl
out
pop
dec
fistl
lods
mov
stos
xor
xchg
and
testl
pushf
lds
ret
sahf
cmp
xchg
shr
inc
mov
push
mov
sub
or
das
pop
cs
push
popf
test
mov
aam
dec
fisubl
adc
mov
sub
or
mov
in
add
dec
loopne
adc
adc
insl
push
sbb
sub
fidivrl
dec
pop
adc
imul
cmpsl
jle
icebp
cmp
enter
inc
mov
fisubrs
pop
adc
das
test
stos
lods
inc
lds
cmp
filds
push
mov
and
dec
subl
mov
pop
inc
xchg
ljmp
dec
idivb
push
mov
inc
sub
lods
inc
cmp
mov
shrb
fwait
push
inc
test
dec
adc
mov
add
dec
push
mov
es
icebp
fmuls
mov
mov
scas
dec
cmc
pop
out
icebp
xor
pop
add
inc
sub
dec
xchg
inc
mov
sub
jge
adc
bound
clc
dec
fs
and
outsl
mov
sub
addr16
jb
add
push
sub
sarl
dec
sahf
dec
mov
dec
sbb
inc
xchg
adc
fs
add
fstps
xor
fdivs
dec
js
cmp
das
mov
jge
push
loop
mov
xor
fistl
xchg
dec
aam
pop
xchg
mov
fxch
shll
pop
push
inc
push
push
inc
mov
cmp
pop
orb
and
aaa
jp
dec
icebp
jl
dec
and
inc
and
pushf
dec
cld
fidivrs
stos
jbe
dec
into
std
stos
jns
aad
jno
pop
in
dec
hlt
mov
mov
jl
and
lcall
mov
fbstp
jl
pushf
adc
sub
jg
mov
and
or
mov
pop
pushf
clc
aad
inc
cmc
lods
mov
cltd
cli
jle
or
test
cmpsb
jl
seta
mov
inc
in
aad
popf
test
sub
jl
pop
stos
cli
jae
mov
in
repnz
dec
mov
xchg
popf
inc
mov
movsl
push
shl
cmp
ficomps
ss
repnz
mov
icebp
btc
notb
sahf
ficomps
dec
pop
lods
jg
sub
subl
fucomi
imul
jle
imul
mov
jle
or
push
insb
lds
mull
add
fs
insb
push
cmp
insb
lods
push
sub
dec
movups
mov
cmp
xor
pop
mov
xchg
les
mov
sti
mov
cld
push
push
scas
test
les
dec
iret
dec
dec
mov
pop
and
xchg
mov
cld
mov
cltd
nop
xor
insl
mov
add
push
xchg
mov
int3
aad
sub
les
add
sarb
ret
dec
ds
or
into
loope
pop
push
cmpsb
pop
bound
cltd
fsubrp
mov
xor
cmp
mov
and
movb
dec
aaa
jle
repnz
push
sub
push
hlt
push
push
out
adc
sub
cld
sbb
dec
scas
movsb
or
and
bound
imul
pop
cmp
mov
pop
cltd
int3
and
cmp
lahf
rolb
and
add
mov
mov
dec
push
xor
iret
pop
arpl
cmp
shll
outsb
sub
and
in
cs
cmc
test
into
fimuls
fwait
mov
xchg
xor
or
lret
movsb
int
mov
mov
jle
pop
xchg
xlat
mov
lahf
icebp
pop
iret
icebp
je
dec
sbb
mov
fisttps
bound
cmp
xor
orb
jp
add
clc
cmp
mov
cmp
aaa
shlb
lods
adc
push
lock
leave
dec
xor
mov
movsl
repnz
mov
aas
out
cs
daa
push
xchg
xchg
lods
jge
add
dec
inc
jns
xchg
cmp
dec
xchg
cmp
sahf
dec
test
sarl
dec
rorb
data16
aaa
out
and
add
mov
mov
mov
jecxz
mov
inc
icebp
cld
push
sub
ss
outsb
test
ret
rorl
pop
xchg
dec
adc
test
push
mov
loope
add
outsl
stos
loop
iret
pop
dec
je
and
dec
jne
xchg
sbb
sar
cld
push
popa
scas
xlat
add
cwtl
jbe
es
mov
dec
sub
push
lods
test
sahf
testl
inc
js
lret
dec
ret
dec
stc
fimull
les
push
aas
inc
mov
outsl
ss
ljmp
xchg
arpl
es
sar
sub
cmpb
orl
dec
xor
ljmp
fldenv
dec
enter
mov
imul
adc
addr16
add
cmp
lcall
mov
clc
into
sub
mov
mov
xor
dec
rclb
cmp
lahf
dec
push
xor
jg
inc
daa
jle
rolb
cs
clc
cmp
sbb
jecxz
jle
adc
das
jg,pn
bound
std
fisttpll
test
push
push
inc
lret
adc
shr
sub
jne
and
jp
mov
iret
xor
and
cmpsl
stos
dec
cmp
iret
lret
jbe
movl
fistpll
idivl
lods
cmp
xor
add
lcall
mov
pop
in
sarl
and
out
inc
jl
nop
fisubs
jmp
movsl
insl
dec
and
sbb
clc
bound
mov
push
xor
cld
rcll
outsb
cmpsb
test
leave
mov
test
mov
push
dec
mov
pop
mov
inc
test
test
xor
sbb
pop
dec
fucomip
inc
out
out
and
stc
xchg
cmovb
fwait
inc
cmp
into
jne
ret
out
dec
clc
sub
hlt
sbb
imul
out
pop
rol
mov
sub
aaa
clc
dec
ljmp
divb
dec
lahf
mov
mov
pusha
gs
adc
out
mov
arpl
fcmovu
aam
test
push
cmpsl
pop
jl
push
mov
rorb
fxch
arpl
in
mov
jge
loope
dec
enter
mov
cmpsl
fimull
push
dec
push
jg
xchg
ret
push
filds
sub
ds
movsl
test
inc
and
test
dec
dec
mov
sbb
push
aad
mov
push
xchg
mov
iret
xor
fwait
test
lahf
rolb
sbb
inc
sbb
repz
push
sbb
int
popa
fadds
sbb
dec
pop
ficoml
lret
das
mov
xchg
or
and
and
inc
daa
pop
pop
sub
lds
das
cld
les
jnp
xchg
jl
xchg
loopne
mov
stc
outsl
out
int
call
out
push
sub
outsl
ret
xor
jae
shrl
xchg
aaa
aam
aad
mov
cmp
xchg
jle
ja
dec
bound
push
ss
push
dec
dec
push
xorl
xchg
push
inc
dec
pop
js
inc
and
cmp
mov
les
jp
lea
cld
jne
push
lds
jp
sarb
xchg
jp
dec
mov
mov
popa
add
and
sub
jle
pop
int
dec
dec
sbb
lock
aas
test
or
repz
mov
sbb
jno
sub
pushf
inc
enter
sbb
fisttpll
stos
cmp
dec
mov
mov
pushf
pop
cltd
dec
cmpsl
hlt
jecxz
pop
out
aam
ret
sub
lods
sub
and
std
sub
dec
xor
mov
jl
and
in
int
mov
sub
mov
inc
jg
sarb
iret
jmp
mov
lock
xchg
fistpll
sarl
fwait
xchg
testb
dec
push
cwtl
jl
push
push
inc
mov
pop
pop
adc
scas
jno
data16
lea
inc
dec
scas
push
aad
imul
mov
adc
ja
cmp
fidivrl
iret
lds
js
push
loop
or
dec
sbb
cmovl
int3
sbb
dec
shrb
rorb
outsl
mov
sti
dec
addr16
fstl
cs
mov
fwait
mov
lret
push
test
sbb
mov
add
stos
nop
xor
sub
lret
dec
pushl
repnz
and
imul
fisttps
mov
dec
mov
imul
and
or
xor
sub
das
std
cmp
dec
std
stc
aad
fmull
cli
jg
aaa
std
jle
mov
jp
lds
out
inc
cltd
lods
cmpb
jns
rcrb
sbb
test
xor
dec
lea
xchg
aam
jl
sub
xor
dec
push
imul
mov
sbb
jp
outsl
xor
out
sbb
repz
or
sub
sbb
scas
aas
push
movsl
fbld
jns
or
dec
ds
scas
insb
ljmp
fimull
pop
mov
push
fs
in
dec
insb
aas
push
jl
aaa
mov
push
and
fdivr
inc
into
sub
mov
ja
xor
fwait
dec
inc
cs
xchg
outsb
pushf
out
lcall
out
popl
and
out
lock
mov
mov
cmp
adc
clc
int
sub
lods
adc
nop
jge
mov
inc
xchg
xchg
cld
jle
lods
data16
lahf
adc
imul
mov
pop
loope
aam
sub
dec
jo
fcmovb
sarl
gs
fisttps
or
clc
push
cmp
sbb
push
fcoml
push
into
mov
lcall
insb
mov
sbb
push
jae
sbb
adc
popa
cmp
daa
xchg
sbb
lock
cltd
ds
jg
fldcw
push
adc
cltd
cmp
dec
dec
adc
popa
in
js
and
add
mov
add
xor
out
mov
mov
imul
ljmp
fwait
mov
mov
shlb
pop
or
scas
popa
cmc
fmull
and
dec
push
lret
mov
in
jmp
orl
rorb
xchg
imul
popa
rorl
inc
dec
mov
or
dec
inc
insl
mov
push
mov
cs
repnz
dec
add
in
movsb
icebp
inc
cpuid
pop
jbe
mov
fimuls
cmpsb
mov
push
mov
aas
dec
inc
insb
mov
adc
test
sub
dec
test
cmc
push
dec
icebp
cmp
mov
lods
sbb
xor
inc
in
or
mov
int3
xchg
out
xchg
or
dec
xlat
cmpsl
jno
pusha
gs
in
dec
mov
les
dec
lret
mov
dec
lds
int
loopne
cmovle
aaa
cwtl
push
dec
lret
xor
pop
dec
dec
repz
fimull
test
inc
scas
pop
xchg
mov
pop
test
sbb
fimull
inc
mov
mov
js
shll
arpl
dec
mov
pop
push
nop
cmc
dec
sti
iret
inc
loopne
and
push
clc
cmp
mov
add
mov
fidivrl
fists
loopne
xchg
bound
pop
mov
inc
sbb
cmp
jb
pushf
fidivrs
leave
jne
sub
aam
fisubrl
mov
inc
adcb
jmp
repz
js
and
mov
xchg
cs
jge
fwait
ds
sbb
sub
xchg
ret
in
mov
addr16
cmp
int3
xchg
jge
imul
sub
aas
pop
jl
imul
ret
jmp
and
and
xlat
aam
cmpsl
jg
mov
and
jge
icebp
lret
imul
jle
call
mov
out
and
mov
cmp
jne
bound
gs
jns
or
xchg
icebp
and
push
notb
sub
int3
dec
jae
imul
cltd
cmp
cmp
jo
cmp
fstp
adc
mov
stc
xor
push
in
fdivp
and
int3
dec
xlat
push
cmp
iret
xchg
pop
xchg
out
fiadds
adc
ljmp
ret
imul
test
out
xchg
lret
mov
fs
scas
in
mov
xchg
jg
popf
std
mov
xchg
adc
nop
jne
sub
jmp
test
into
adc
mov
mov
lret
adc
jg
insb
mov
dec
pusha
jl
xchg
dec
loope
test
mov
cli
lcall
out
add
insl
cmpsb
icebp
xchg
lods
jns
jge
cmp
push
mov
and
lock
push
cltd
sbb
add
bound
mov
push
js
aas
arpl
add
jl
fwait
stos
outsb
aaa
orl
ds
sub
adc
sbb
addr16
stos
or
push
xchg
inc
xchg
lods
xor
cmp
fidivrs
xchg
movl
pop
out
cmp
mov
test
mov
dec
mov
stos
jo
lret
xchg
push
fsubp
adc
jae
dec
addr16
cmpsl
pop
and
ret
pushf
les
dec
into
loopne
pop
aaa
cmp
repz
and
dec
push
lcall
push
mov
jl
repz
int
xchg
inc
cmc
daa
dec
aas
xor
les
inc
cltd
gs
test
lock
aad
stos
mov
mov
push
mov
mov
dec
jecxz
idivb
aas
daa
cmp
incb
cmpsl
stos
sbb
rcrl
fimuls
cmpsl
adc
sub
push
xchg
in
das
mov
cmp
inc
mov
fcmovnbe
and
pop
aad
pop
inc
adc
lahf
jbe
xor
aam
popa
mov
mov
pop
pop
mov
and
call
pop
jmp
pop
insb
push
test
jle
push
push
dec
push
adc
inc
mov
inc
push
dec
in
dec
push
mov
jo
mov
aaa
push
xor
pop
mov
inc
or
fbstp
xor
and
decb
cmpsl
adc
cli
mov
jge
lcall
lods
jle
addr16
jl
and
xchg
xlat
fnsave
inc
xor
dec
loop
pop
data16
sub
rorb
jge
add
mov
dec
shl
xor
jl
mov
cltd
xchg
orl
lret
dec
jecxz
ret
aad
fsubrs
mov
push
mov
rep
mov
fnstsw
mov
xchg
out
add
xchg
pushf
stc
jl
inc
dec
divl
in
inc
mov
inc
ret
adc
ja
mov
in
cmpsb
xchg
cmp
jge
into
push
out
push
andl
jge
sbb
cmp
dec
jg
push
jle
or
std
test
shrd
ds
adc
adc
test
rcrb
pop
pusha
mov
inc
pop
cmp
lcall
cmpsb
gs
or
data16
aam
fcomi
mov
jle
into
pop
cmp
inc
or
mov
xchg
adc
adc
inc
jl
jge
mov
add
pop
outsl
add
adc
xchg
sahf
or
jp
dec
repnz
ja
loope
repz
or
aaa
dec
xchg
rcl
mov
jo
dec
mov
int
sbb
xchg
icebp
into
inc
bound
xlat
mov
adc
dec
popf
sub
mov
push
popa
fimull
xor
cmp
jne
arpl
jno
inc
inc
ljmp
psrlq
cmp
or
out
mov
int
push
jge
nop
dec
inc
jbe
fs
jle
subl
fbstp
in
and
inc
lods
stos
movsb
xchg
cmp
cld
pop
mov
aas
ljmp
add
out
icebp
jl
dec
shl
inc
test
jb
xabort
sub
push
int
or
clc
inc
sub
aas
jp
es
mov
sbb
movsb
jne
pop
inc
lock
push
leave
bound
jecxz
dec
mull
and
dec
push
and
push
int
push
aad
inc
dec
jl
inc
ljmp
fwait
push
mov
add
test
js
rorl
mov
roll
imul
addr16
arpl
inc
les
dec
cli
es
mov
into
lahf
dec
mov
cmp
mov
jle
sub
xchg
test
inc
leave
dec
inc
mov
jecxz
sbb
scas
imul
mov
into
clc
jmp
adc
cmpsb
push
adc
xlat
xchg
push
dec
inc
xchg
mov
pop
jbe
imulb
enter
sbb
fmull
pop
sub
dec
loop
xchg
inc
push
dec
dec
std
bound
out
mov
jmp
int
add
dec
ja
push
or
dec
mov
jo
in
pop
rorb
inc
cmp
dec
js
cmpsb
decb
pop
and
dec
xor
jle
dec
inc
daa
mov
mov
repz
cmc
push
iret
cmp
sbb
or
cmpsb
ror
mov
xchg
setp
jg
push
inc
dec
cwtl
mov
push
out
scas
inc
add
dec
and
enter
inc
and
nop
mov
dec
out
inc
push
mov
in
loope
push
mov
dec
ftst
jo
xchg
test
imul
pop
fisttpl
and
sub
dec
lret
mov
xor
mov
scas
jl
mov
pop
mov
xor
ss
std
fiaddl
dec
sbb
sbbl
imul
xor
inc
dec
and
cltd
aaa
enter
jb
fldt
xor
jns
test
sarl
or
or
sub
xchg
dec
jle
ds
fsubrl
popa
dec
mov
xchg
mov
xor
sbb
jmp
dec
into
test
xor
js
ret
ss
popa
dec
add
orb
jb
jbe
sbbl
push
nop
test
push
out
fistpll
ljmp
iret
cmp
hlt
mov
xor
adc
inc
lret
xor
and
adc
mov
dec
mov
into
add
jnp
inc
std
loopne
adcl
or
lahf
mov
dec
cltd
out
mov
adc
insl
mov
rolb
mov
outsb
jae
pop
ds
adc
xchg
or
negb
movsb
or
add
xor
and
xor
dec
imul
das
or
ja
mov
sti
pop
sbb
dec
mov
push
mov
dec
push
xor
scas
movsl
ds
xor
je
jecxz
hlt
movsb
push
daa
jmp
int3
xchg
mov
mov
fnstcw
add
mov
dec
jno
mov
add
xchg
negl
add
xchg
or
out
adc
test
jp
dec
sub
insl
cltd
fnstcw
sti
fmulp
cmp
cmp
inc
test
xor
xchg
dec
mov
xchg
mov
mov
dec
cld
pop
cli
inc
jle
push
orl
sbb
jge
std
push
mov
gs
add
xchg
fcomps
jl
adc
into
and
adc
ret
push
jne
sbb
rcrb
add
ret
mov
mov
das
pop
jmp
cmp
mov
insl
inc
lods
inc
dec
adc
jle
mov
iret
bound
das
add
xchg
repz
adc
aas
jle
clc
mov
pushf
mov
mov
inc
xchg
pop
mov
loopne
sbb
sub
mov
and
push
ret
cmpsl
dec
jae
lret
scas
into
and
stos
add
scas
fisubrs
mov
mov
cmpsb
dec
ss
sbb
xchg
xor
fwait
mov
add
mov
ret
add
adc
dec
mov
loop
mov
push
jo
adc
fiadds
daa
lret
les
cmp
mov
inc
shlb
add
arpl
nop
dec
dec
jnp
sbb
sub
mov
mov
mov
test
pop
dec
scas
andb
sti
das
mov
into
jb
mov
mov
dec
add
adc
insl
mov
jmp
xor
pop
out
mov
and
cli
jb
out
sbb
dec
movsl
cs
push
scas
insb
stc
xchg
or
mov
lret
jne
bound
cmp
lods
dec
ja
jg
imul
dec
das
mov
xchg
dec
mov
movsl
scas
jge
dec
loop
pop
sti
sbb
dec
mov
pushf
xchg
hlt
test
pop
push
or
mulb
push
dec
inc
dec
jle
cmc
in
out
mov
pop
test
xchg
push
jo
pop
paddusb
lret
inc
xchg
popa
stos
stc
jbe
mov
pusha
push
or
sub
or
enter
sub
mov
in
jno
inc
lea
js
jmp
push
mov
xor
xchg
add
dec
jg
arpl
push
jmp
push
push
rorb
push
cmpsb
sarb
popa
loope
dec
popa
inc
lahf
ljmp
sahf
add
mov
xchg
dec
lds
or
add
rcr
pop
fs
addr16
dec
sbb
pop
inc
flds
dec
mov
push
mov
loop
push
dec
ljmp
movsl
in
imul
fwait
pop
jmp
dec
daa
adc
cmp
stos
scas
push
mov
aas
fmull
dec
jno
fistps
pusha
push
js
dec
test
jl
mov
hlt
dec
fbstp
js
aad
dec
add
pusha
movsl
sub
push
loop
gs
dec
adc
lds
mov
mov
xor
push
lock
push
dec
enter
jo
or
sbbb
inc
mov
jg
shlb
jp
sub
dec
xchg
test
aas
pop
dec
out
inc
insb
push
shr
je
sub
jb
dec
xor
pop
adc
test
es
popf
dec
call
inc
push
adc
testl
xchg
pop
push
lret
popa
js
dec
mov
cs
outsb
dec
pop
cli
bound
sub
dec
movsb
xchg
mov
lock
pop
mov
dec
push
das
repz
cwtl
ds
scas
aam
jle
fldl
add
adc
lods
popa
testb
pop
movsb
out
aad
es
inc
and
dec
ja
adc
cltd
scas
imul
jno
xor
lret
leave
daa
and
ss
adc
sbb
aaa
and
int3
mov
inc
push
xlat
mov
leave
jl
pop
inc
push
sti
cmc
and
insl
rcl
and
jne
jne
inc
add
mov
xlat
mov
sub
mov
mov
inc
adc
int
push
shlb
mov
push
mov
push
xor
push
adc
push
cs
push
in
stos
aas
popa
lcall
outsl
lods
and
and
or
xor
lcall
mov
xor
mov
mov
inc
shlb
stos
xor
ret
fcmovu
push
stos
jle
insl
in
scas
aaa
stos
add
or
sub
xor
sti
push
ror
lahf
mov
push
or
mov
lret
rclb
fs
lods
jne
pop
pop
and
and
mov
sub
cmc
and
adc
std
push
push
icebp
mov
ret
dec
or
int
xchg
xor
jb
lods
outsl
xchg
cmpsb
mov
adc
in
fwait
loope
jg
pop
push
cmp
js
inc
jecxz
jp
std
shrb
repz
xor
cwtl
dec
mov
jle
xchg
test
xor
push
push
enter
pop
inc
fildll
cltd
cmp
and
loop
dec
adc
in
pusha
ja
inc
cmp
inc
xor
sbb
cli
cmp
pop
out
inc
js
fwait
in
dec
jnp
sti
insl
loopne
inc
add
xchg
xor
dec
push
aas
daa
scas
and
and
xchg
and
jle
push
shlb
dec
stos
das
or
fs
std
fwait
lea
xchg
push
into
ret
xchg
push
jbe
sbb
aaa
cs
cmpsb
or
in
mov
sub
push
loop
and
mov
sbb
inc
scas
xor
mov
xor
jb
fwait
data16
fistps
test
xor
mov
push
xchg
jmp
cltd
fimull
push
cmpsl
jl
fwait
sbb
lahf
add
mov
add
ljmp
mov
mov
and
mov
mov
xchg
add
mov
fsubrp
test
dec
mov
dec
cmpsb
xchg
jl
sub
dec
dec
js
data16
add
mov
or
lahf
jl
fcompl
push
push
mov
pop
ret
movsb
jns
decb
cltd
mov
cmp
or
inc
pop
pop
in
mov
mov
in
jmp
jl
lods
mov
aas
jle
dec
leave
push
lea
push
and
bound
sbb
aas
add
stos
je
imul
sbb
sub
mov
lods
dec
xchg
in
dec
add
dec
pushf
and
adc
jne
inc
adc
mov
and
jecxz
mov
push
fscale
fwait
data16
ret
cmc
aad
xchg
sbb
pop
test
pop
xchg
pop
cmp
dec
mov
add
arpl
dec
fisubl
pusha
pop
jecxz
std
dec
mov
mov
dec
jae
xor
lret
shll
mov
or
dec
cs
mov
outsl
adcl
test
sub
aad
mov
push
lock
cmp
aas
test
scas
aam
dec
xchg
jl
sbb
mov
adc
daa
xchg
mov
repnz
mov
popa
jl
sub
aaa
adc
aas
push
test
mov
movsl
jl
xchg
sub
xor
cltd
scas
outsb
cwtl
subl
jmp
outsb
lahf
iret
ds
and
dec
cmp
jle
push
jno
repnz
jbe
push
scas
jecxz
inc
fnstenv
jl
in
popf
dec
xor
push
fadd
sub
adc
mov
inc
rcll
cmp
adc
movsl
movl
icebp
js
xor
dec
xor
mov
sub
dec
fbstp
add
mov
jg
or
jle
jbe
adc
ljmp
dec
push
mov
mov
das
loopne
lahf
ret
xor
in
cmpsb
addb
inc
js
fwait
sub
mov
bound
push
dec
lahf
xchg
lock
into
iret
gs
inc
fcomps
mov
jl
mov
sbb
repnz
push
sbb
out
and
mov
and
jmp
mov
cmc
mov
into
aaa
jno
adc
flds
out
jmp
je
jg
sbb
mov
xchg
push
mov
push
pop
xlat
cmp
mov
shrb
or
inc
and
jl
push
cs
negb
xchg
jle
inc
and
cs
popa
pop
fstpt
in
ss
dec
jnp
xchg
and
test
fisubrs
outsb
and
ds
lcall
cmpsl
jl
dec
inc
mov
adc
stos
jl
imul
cmpsb
stos
popa
dec
scas
push
stos
pop
sbb
xchg
sub
int3
ds
mov
push
jge
insb
add
and
jp
ret
bound
mov
out
mov
sbb
fmul
cld
int
push
jle
sbb
movsl
sub
sti
mov
loope
divl
push
enter
xor
popf
addr16
inc
jg
push
inc
add
pop
mov
adc
cmp
push
add
push
inc
scas
jl
dec
test
aad
stc
cmc
popf
xor
cmpsl
push
icebp
scas
dec
jbe
jmp
call
inc
ss
mov
dec
ds
push
xor
dec
sub
xchg
insb
jb
hlt
popl
pop
jg,pn
sub
scas
out
xchg
aam
xchg
xor
pop
mov
sub
adc
movsb
fimull
addr16
sub
jg
test
mov
adc
xchg
sbb
outsb
sub
add
inc
dec
mov
in
sbb
inc
int
pushf
cmp
sbb
sub
mov
lret
call
push
mov
inc
dec
insb
xchg
lcall
jle
test
dec
leave
push
cmp
mov
jo
cmp
push
add
push
xor
nop
dec
out
or
arpl
in
and
and
fisttpl
in
mov
add
and
mov
jl,pn
cmp
pop
dec
incl
scas
movsb
adc
and
pop
adc
jb
cmc
jecxz
jno
cmp
mov
imul
sbb
dec
pushf
cmc
stos
das
jae
lds
loop
inc
add
lods
decb
cmp
aas
mov
cmp
dec
push
stc
add
dec
xlat
stos
sahf
cmp
jle
push
pop
loop
test
addl
loope
addb
outsl
jo
dec
int3
and
pop
xchg
and
shl
movd
cmp
jl
xchg
xchg
sub
stc
adc
mov
sub
pop
nop
dec
jle
es
inc
xchg
jl
outsb
mov
jg
icebp
cmp
adc
pop
loopne
mov
sbb
adcb
jle
and
sbb
cld
or
push
add
sahf
lea
sub
mov
jno
and
xor
cltd
out
dec
aaa
jl
push
dec
fprem
jecxz
sub
cmp
ss
cmp
dec
and
xor
repz
lea
sub
dec
int3
pop
or
ljmp
jbe
jecxz
xlat
dec
mov
push
inc
pushf
dec
sbb
mov
clc
dec
dec
scas
dec
mov
dec
lahf
addr16
add
in
add
pushf
call
push
cld
leave
sub
lods
push
xor
xor
call
mov
pushf
scas
inc
push
jae
dec
xor
enter
push
scas
mov
push
pop
mov
or
xchg
in
mov
test
aad
jl
jp
adc
leave
or
mov
xchg
sahf
lods
scas
pop
pop
mov
push
and
out
cmp
jnp
jb
cmp
add
cld
sbb
testb
outsb
hlt
push
aad
push
sub
add
cmp
and
lcall
in
gs
jle
xor
in
mov
push
cs
sub
adc
es
jae
mov
mov
iret
or
jg
loop
push
addr16
sub
aam
in
jg
stos
cwtl
out
clc
into
movsl
mov
nop
cmp
xorb
jne
inc
push
pop
or
sub
inc
lods
xlat
or
xor
xchg
or
push
xchg
and
stos
xor
sub
cmp
subl
out
cs
lds
jl
xchg
mov
out
aaa
cmp
iret
add
add
lods
add
jg
ds
mov
adc
pusha
sbb
mov
inc
xlat
stc
and
jmp
jecxz
mov
cmpsl
jl
rcrl
push
jmp
mov
mov
fwait
or
mov
or
jle
and
insl
mov
and
loopne
xchg
sub
cmp
push
nop
dec
insl
icebp
sbb
iret
ja
setbe
jne
dec
adc
xchg
mov
pop
and
or
mov
repz
fimuls
cs
daa
repnz
dec
or
es
cltd
mov
mov
movsb
dec
call
and
dec
in
enter
lds
dec
sub
popf
pop
das
ds
dec
ljmp
inc
adc
mov
dec
mov
jle
mov
push
push
movsb
cmp
cwtl
fmul
es
sbb
in
scas
sub
mov
test
lcall
add
insb
mov
and
es
sti
insb
pop
repz
out
mov
xchg
clc
mov
dec
adc
add
sub
mov
sub
pop
loopne
pop
mov
inc
inc
push
dec
jg
cwtl
aas
out
imul
inc
jmp
lret
cli
testl
pop
dec
or
inc
xor
fsubp
mov
mov
imul
gs
loopne
adc
sub
add
add
inc
lds
xchg
jl
dec
out
cs
fisubrs
xchg
icebp
lret
push
jmp
pop
push
ficoms
cmpsl
data16
mov
outsb
fisubl
loop
jo
inc
stos
lret
xchg
jg
test
daa
fidivrs
push
mov
push
cmc
cmp
repnz
pop
enter
shlb
jo
cli
icebp
mov
popa
dec
jb
and
ljmp
mov
stos
xlat
mov
dec
fidivl
push
dec
jg
pop
outsb
push
rorl
push
jo
sub
nop
stc
out
das
adc
out
add
in
jmp
push
mov
push
and
dec
test
arpl
mov
push
nop
in
push
into
add
dec
bound
dec
imul
push
xor
push
jle
sub
loopne
lea
or
inc
push
cs
insb
pop
rorb
adc
lds
scas
aad
push
inc
and
mov
push
xor
sub
movsl
jnp
aas
inc
dec
push
sub
dec
and
sub
or
push
dec
in
xor
lahf
es
mov
out
insl
icebp
adc
enter
add
pop
lret
aam
cwtl
mov
add
xchg
ds
mov
addr16
scas
aas
gs
pop
mov
dec
outsb
daa
in
cltd
movsb
out
xchg
dec
imul
sub
pop
mov
adc
adc
xor
push
fistl
sbb
pop
arpl
scas
pop
sbb
sub
aaa
popa
lahf
dec
pushf
mov
mov
movsb
pop
push
cmp
adc
inc
pop
sbb
gs
mov
dec
xchg
repz
lcall
sbb
cltd
push
out
adc
inc
stos
jle
lock
in
aad
sub
dec
loopne
fmuls
cwtl
add
pusha
adc
pop
sub
push
pop
call
push
inc
mov
outsl
aaa
dec
push
out
mov
jle
xchg
into
dec
add
lret
inc
add
or
rcr
sub
dec
xor
sti
jbe
les
cmpsl
mov
sub
sbb
cmp
add
xchg
sbb
mov
fdivrl
or
xchg
adc
pusha
xor
stc
imul
int
cmp
xchg
popw
dec
popf
push
push
inc
push
aad
mov
jnp
jae
aaa
das
inc
xchg
xchg
cwtl
aas
loop
ret
or
pusha
lock
jg
add
dec
test
popa
xchg
inc
loopne
dec
cmc
pop
xor
fcomp
inc
pop
gs
lahf
ljmp
cmp
mov
sahf
in
and
dec
xchg
dec
mul
mov
imul
sarb
lods
dec
xor
test
pop
mov
in
dec
adc
dec
scas
imul
jnp
mov
and
push
cli
xlat
cmp
adc
sbb
xchg
lahf
pop
test
dec
fwait
mov
decb
xor
sahf
xchg
out
hlt
pop
sbb
aaa
pushf
incb
push
clc
push
and
push
addl
mov
and
cmc
mov
outsb
jle
dec
xchg
sti
insb
lods
adc
ja
dec
dec
jg
std
movsb
mov
inc
inc
int
test
cmpsb
xor
es
js
push
dec
das
sbb
lret
or
cld
pop
rcrl
call
xchg
lret
cmpsb
shrb
dec
popa
add
aam
mov
pop
and
or
ds
arpl
insb
jns
lea
push
jl
sbb
dec
ljmp
in
cli
dec
mov
mov
test
adc
dec
push
xchg
pop
xchg
bound
test
out
nop
test
sarb
xchg
das
sub
cmp
insl
push
jbe
push
das
inc
jl
pop
jp
test
stos
shll
cmp
inc
inc
sbb
xchg
inc
adc
mov
pop
dec
repnz
fs
inc
xchg
or
sub
mov
fs
pop
lea
cmp
inc
mov
inc
lods
and
cs
push
int3
push
xchg
push
push
inc
add
xor
xchg
call
mov
js
fdivrp
xchg
out
and
rcll
pop
std
imul
jle
mov
loopne
sbb
sbb
push
dec
mov
scas
insb
test
xor
aad
push
adc
and
mov
push
cmp
mov
ljmp
pushf
cmpsl
out
pop
mov
loope
add
pusha
int3
xchg
adc
and
add
cli
dec
sub
or
and
pop
rcrb
fnstcw
gs
dec
pushf
xchg
ja
mov
loope
shrb
pusha
push
adc
inc
or
pop
sbb
jns
xchg
jno
daa
adc
fsubs
mov
jmp
iret
sub
inc
sbb
inc
in
ret
rcrb
inc
int3
movsl
jo
sub
fsubrs
ljmp
xor
sbb
pop
push
add
pop
int
sarl
jmp
dec
sar
test
pushf
pop
dec
bound
jp
dec
add
mov
add
loop
pusha
pop
imul
xchg
sub
cmp
xor
ret
mov
scas
lahf
jmp
dec
mov
xchg
dec
pop
vprotb
outsb
int
pop
xlat
and
dec
sbb
jns
add
dec
mov
test
cmp
dec
dec
ret
jmp
push
lods
int3
fucomip
mov
faddp
sahf
fimull
stos
mov
mov
movsl
aam
jae
pop
dec
int3
pop
or
pop
mov
js
or
jno
and
negb
push
rclb
push
pop
dec
jne
mov
and
xchg
dec
shll
add
lods
lea
mov
push
cli
and
sbb
aam
mov
push
rcr
mov
shrl
bound
push
xor
dec
imul
mov
inc
adc
popa
push
mov
movsl
aad
fistpl
dec
out
daa
jl
imul
jo
dec
pop
push
clc
mov
add
mov
dec
pop
sbb
xchg
add
jl
fidivrl
xor
testl
into
dec
in
clc
jno
lods
jae
inc
orb
adc
pop
adc
adc
adc
dec
mov
pop
add
int
fmul
sub
out
jecxz
xchg
dec
daa
rol
cmp
int3
pop
jo
outsb
sbb
mov
icebp
aam
pop
in
jne
sbbb
outsl
rcll
sub
sti
mov
jb
pop
push
cmp
pop
push
mov
into
aaa
loopne
jl
add
testl
inc
stc
mulb
push
jg
cmp
addl
and
jg
aad
xor
clc
mov
lret
cmp
sub
stos
icebp
in
inc
and
sbb
mov
pop
cmp
jbe
push
jl
int
inc
add
push
add
bound
scas
push
sbb
cmpsb
adc
pop
mov
unpckhps
mov
mov
not
neg
cltd
rclb
daa
gs
dec
mov
xchg
fsubrs
cmc
iret
cmp
sub
ret
and
cmp
out
and
mov
push
pop
scas
cmp
jle
push
xchg
cwtl
dec
aaa
pop
mov
ljmp
dec
mov
adcb
lods
in
sub
ret
dec
pushf
jmpw
shll
push
push
popfw
leave
sbb
lea
cmpsl
aad
inc
inc
jl
cltd
out
dec
add
les
mov
ret
aaa
in
movsl
sub
sarl
mov
cmp
xchg
dec
push
lret
enter
dec
push
movsl
xchg
pop
mov
jmp
cmp
insl
test
push
inc
jg
xor
sbb
cmp
ret
push
push
xor
movsb
cmp
or
mov
aas
or
pop
nop
lods
mov
jle
stos
or
mov
jnp
jg
add
cli
std
sar
add
aas
or
daa
out
dec
mov
add
sbb
cmp
dec
mov
pusha
jnp
iret
test
xor
data16
data16
push
dec
arpl
stc
or
shlb
int3
cmpsl
jle
sub
mov
sub
lock
idivl
fs
xchg
rcrl
idivb
and
jle
xchg
andb
dec
sti
inc
addr16
das
jle
test
pusha
xchg
cs
xlat
insb
andb
and
cld
arpl
icebp
mov
test
pop
cmp
pop
cmp
fcmovnbe
jb
dec
add
xor
or
and
lret
sub
cmp
test
or
jmp
inc
sub
xchg
in
cs
jns
hlt
dec
mov
pusha
movsb
xchg
sub
popf
aas
popa
cmp
inc
scas
pushf
repz
sub
pop
pop
mov
dec
insl
mov
sarb
sti
into
pop
push
sti
ds
mov
cmp
fsubs
ficoml
dec
imul
jo
cmp
lcall
movsb
dec
adc
adc
fcmove
mov
push
sarl
pop
popa
dec
fdivr
aam
dec
dec
pop
mov
in
xlat
dec
sub
or
mov
push
adc
pusha
and
sub
dec
jo
sbb
call
in
pusha
mov
dec
hlt
out
rcrl
push
push
outsb
xchg
fisttps
data16
sbb
imul
rorl
aas
push
insl
ss
push
or
xor
and
mov
test
lahf
daa
hlt
into
adc
mov
cmc
lods
mov
pop
fcoml
jnp
sti
das
iret
or
out
dec
or
movsb
gs
xchg
cmc
imul
cmp
pop
jle
pop
and
lods
and
mov
lret
sti
iret
xchg
xor
jle
cwtl
testb
or
and
shll
fiaddl
lcall
dec
fistl
dec
fbstp
xor
enter
mov
add
addr16
into
fwait
pusha
cld
add
lcall
stos
das
add
enter
mov
xchg
enter
cli
ljmp
aam
or
les
dec
xor
lahf
inc
dec
jbe
pop
stc
xorb
jne
js
dec
push
scas
pop
cmpsb
xchg
adc
fwait
cmovb
call
or
loopne
dec
clc
lods
insb
outsb
mov
in
mov
decl
icebp
dec
fidivrs
cwtl
xchg
cmpsl
loop
dec
fnstcw
filds
testl
testl
mov
sahf
mov
insl
pusha
xchg
lods
out
out
arpl
jge
test
inc
dec
sti
sub
mull
arpl
rcl
pop
fnstcw
sbb
xchg
lock
xor
or
lahf
dec
xchg
xor
push
dec
in
das
dec
push
pop
lret
mov
mov
jg
xchg
xorl
push
sub
enter
xchg
cmp
and
mov
xchg
dec
sub
clc
xor
cld
out
arpl
pop
ds
lds
cs
mov
pusha
lods
xchg
pushf
out
daa
mov
out
jmp
into
repz
jl
dec
jg
ret
xor
jl
pop
xor
mov
jecxz
aam
daa
push
pop
dec
xchg
dec
in
inc
mov
lahf
dec
dec
and
push
push
pop
dec
jg
jbe
popf
push
imul
dec
push
fmuls
mov
xchg
fdivl
push
and
cmp
lcall
ja
into
daa
jg
das
dec
mulb
jl
call
jne
inc
xor
imull
mov
xlat
not
push
nop
cs
lds
or
in
xchg
daa
push
jnp
xchg
lds
cltd
sbb
xor
dec
or
jl
fistl
icebp
cltd
rorb
xor
sub
adcb
push
gs
jb
es
lds
std
rclb
push
data16
rolb
pop
jl
dec
pop
or
mov
dec
lods
rorb
repz
sbb
and
inc
movsb
inc
outsb
bound
jl
push
push
sti
fimull
aas
in
jmp
test
jle
adc
insb
daa
jg
adc
aaa
mov
mov
mov
push
mov
cmp
jl
adc
adcl
inc
fidivrs
bound
add
sub
cmp
sub
into
push
dec
test
add
outsl
mov
dec
rclb
enter
inc
movsl
adc
dec
dec
out
dec
cmp
push
jg
jmp
mov
push
cmp
out
outsl
jb
dec
aas
add
jne
mov
iret
mov
xor
clc
jge
mov
lret
addr16
scas
inc
ret
jae
int
sbbl
pop
sub
rorl
in
or
jne
int3
inc
test
sarb
cmpsb
xchg
xor
into
movsb
cltd
dec
jmp
cmc
in
out
pop
add
xchg
inc
paddb
jns
je
ret
rcrl
push
dec
push
adc
test
dec
mov
mov
push
pop
jecxz
lcall
pop
loop
lods
push
es
jle
jp
push
mov
les
dec
jl
iret
data16
cmpsb
sub
mov
int3
clc
adc
sub
fwait
or
repnz
push
cmpl
mov
decb
bound
inc
adc
popa
orl
shll
jb
and
mov
test
pop
aaa
test
add
xor
dec
nop
lcall
mov
ljmp
sub
dec
or
ret
add
lock
je
into
jmp
movsl
ja
push
shrl
mov
pminsw
in
jns
addr16
lcall
in
in
fildll
push
outsb
test
xor
inc
in
cmp
stos
inc
dec
pop
jmp
cmp
popa
ja
cwtl
jo
xor
test
pop
std
xor
dec
je
or
in
pop
out
popa
outsl
adc
or
cmpsl
aam
orb
popf
lea
in
repnz
adc
cmc
das
and
xchg
mov
adc
inc
and
add
jp
dec
pop
dec
mov
xor
jne
inc
cmp
jbe
dec
addr16
sahf
and
dec
inc
lock
xor
sarl
inc
dec
jmp
hlt
xor
lods
fldl
push
sub
cmpb
cmp
adc
jg
aas
sbb
sub
pop
jle
pop
fistpll
pop
pop
andps
sbb
sbb
sub
movsl
inc
mov
lds
fimuls
enter
add
dec
push
xchg
push
jne
lahf
xor
dec
cmpsl
inc
push
inc
std
pop
cmp
jne
cmp
mov
add
dec
mov
jle
in
dec
xchg
es
hlt
jl
pop
mov
push
clc
push
ret
into
mov
jns
lret
das
jp
dec
cmp
sarl
dec
or
inc
adc
push
cmp
mov
xchg
xor
fwait
out
mov
mov
pop
mov
aaa
dec
enter
outsl
cmpl
inc
sbb
ret
cmc
dec
adc
pusha
mov
adc
jle
inc
dec
inc
bound
adc
mov
mov
mov
sub
add
dec
add
in
mov
movsl
jbe
decl
pop
dec
or
add
test
sub
orl
mov
dec
add
fnstcw
mov
into
loope
dec
ds
jl
out
lret
jg
fisttpll
xchg
stos
cmp
dec
sbb
shlb
leave
lea
sahf
dec
mov
adc
lret
ret
es
test
xchg
dec
stc
fiaddl
xchg
sub
lock
sub
fdivrp
cmp
sub
xlat
icebp
bound
lods
push
stos
inc
test
push
clc
inc
mov
add
shrb
pop
jl
lea
je
test
outsl
movsb
xchg
or
xchg
rorl
jnp
and
inc
cmp
inc
pop
in
shrb
and
fsubrs
push
sti
jnp
call
lret
rclb
jle
clc
cwtl
loopne
int3
pop
xor
mov
int
pop
test
adc
adc
fcmovne
stos
pop
pop
repz
mov
cmp
iret
pop
jg
xchg
or
mov
mov
dec
movq
mov
pop
cmp
sub
dec
mov
or
test
into
pushf
addb
lods
add
push
jg
repnz
pop
inc
jl
xlat
dec
in
jecxz
cmpl
dec
jg
xor
push
mov
out
aas
cmp
icebp
xlat
mov
adc
xchg
jle
mov
call
jl
jne
pminub
enter
xor
ficomps
dec
fidivrl
pop
daa
pop
adc
push
and
dec
mov
jmp
jle
fdivr
dec
push
and
or
popa
add
cmp
pop
ljmp
jbe
inc
in
adc
lcall
ljmp
imul
lods
mov
adc
cmp
mov
je
cmc
add
xor
jnp
les
subl
cmp
out
pop
addr16
in
push
incl
inc
lcall
sbb
ja
dec
movsb
pusha
jbe,pt
ret
mov
xchg
iret
cmp
add
jecxz
jae
faddl
mov
dec
clc
xchg
mov
mov
or
jbe
cwtl
dec
push
cltd
lea
dec
daa
stos
or
ljmp
mov
insb
dec
adc
nop
mov
movsb
shr
lods
flds
sub
xchg
stc
mov
adc
test
aaa
dec
push
insl
in
ss
out
cmp
sahf
cwtl
pop
iret
add
jne
mov
cmp
sbb
sub
fisttpl
inc
nop
adc
scas
mov
dec
insl
adc
jne
leave
push
sti
adc
and
pop
dec
sub
cmpsb
dec
xchg
mov
rcrl
xor
fsubrl
es
mov
neg
call
sub
mov
push
iret
jge
aaa
dec
ret
lcall
sbb
flds
and
push
sahf
subb
outsb
jns
enter
xchg
scas
inc
lds
iret
movsl
clc
mov
adc
pop
in
mov
xor
into
pusha
js
cmp
pop
adc
mov
jae
dec
and
inc
outsl
cmp
insl
je
jnp
cltd
adc
dec
movsb
mov
dec
push
mov
mov
ret
mov
inc
scas
shlb
ss
push
popa
dec
insl
push
lods
fs
fdivrp
orb
pop
pusha
push
cmp
jne
std
in
or
or
stc
dec
jnp
ljmp
mov
dec
and
inc
shrl
outsl
dec
jg
xor
pop
inc
mov
scas
dec
cmp
mov
sub
jp
rclb
dec
pop
dec
pop
mov
mov
dec
jecxz
movsb
sub
scas
jne
or
xor
add
inc
dec
notl
add
aaa
mov
das
dec
push
cmp
sbb
bound
jl
test
in
cltd
aas
dec
cli
ja
add
inc
xchg
cmp
lea
lods
jmp
in
rorl
out
das
jl
std
mov
inc
mov
je
cld
fdecstp
dec
push
sbb
cmp
aam
dec
dec
jbe
jecxz
out
cmp
in
dec
in
add
pop
dec
or
in
jns
xor
dec
sub
fwait
jmp
icebp
adc
outsb
add
dec
vmovdqa
jno
inc
inc
dec
loope
push
push
push
and
dec
cmp
adc
test
lretw
dec
dec
out
jg
pop
dec
rcrb
mov
dec
xchg
lock
and
fmull
scas
fidivrl
pop
shr
sub
sub
ljmp
in
or
dec
ret
mov
inc
adc
lods
sub
js
mov
push
fimuls
inc
cmp
mov
lcall
inc
xor
push
cmc
scas
mov
insb
clc
jae
lods
sti
les
fbld
mov
int
dec
fwait
push
rclb
cltd
gs
push
mov
dec
into
sub
cs
xchg
jbe
dec
sbb
imul
cmp
and
or
sbb
add
pop
xor
sub
dec
add
and
rorb
decl
cmp
pusha
rcr
adc
test
in
in
jp
push
xchg
cmp
lret
fidivs
jbe
dec
sub
loope
shlb
pop
jb
jo
dec
pop
cmp
mov
pushf
and
stos
fimuls
inc
fnstcw
shl
mov
inc
cmp
mov
and
sbb
sub
in
inc
xchg
mov
lock
stc
ror
aas
jg
cmp
hlt
add
test
push
aas
push
nop
inc
pop
add
sbb
inc
test
jb
sarl
cs
xchg
mov
loopne
lret
jl
jecxz
out
incl
jle
stos
jge
inc
inc
pop
out
int3
jmp
scas
cmp
adc
dec
testb
dec
xor
push
adc
sarl
xor
inc
cmp
cltd
scas
outsl
dec
dec
incb
push
push
aas
stc
sub
popf
subb
or
inc
out
cmp
sbb
icebp
jne
mov
adc
dec
pop
ret
pop
jp
scas
inc
stos
into
xchg
into
jb
insb
ja
lret
jbe
mov
xor
jno
icebp
leave
dec
insb
rcrl
into
jg
xor
adc
push
pusha
pop
fisttpll
xchg
orl
mov
nop
outsl
test
sub
or
pusha
add
pop
jae
ret
inc
iret
push
dec
shll
cmc
mov
dec
pushfw
lcall
insl
mov
aaa
dec
test
mov
and
dec
sbb
lret
adc
aas
xchg
sub
gs
repz
ss
mov
jbe
inc
dec
fcmovne
clc
getsec
pop
push
dec
dec
icebp
aad
test
dec
mov
sub
inc
dec
xchg
rcrl
dec
iret
push
nopl
add
jecxz
or
push
mov
cmpsb
mov
je
test
decb
xor
imul
out
sbb
dec
push
jle
xchg
add
or
dec
and
sbb
jbe
lret
int
push
inc
xchg
sub
add
iret
mov
mov
sbb
sbb
push
dec
andb
sbb
arpl
aad
ljmp
adc
dec
dec
dec
adc
sti
shlb
outsl
dec
mov
nop
out
dec
mov
sub
imul
loopne
dec
cmp
push
pop
outsl
inc
adc
or
lret
cmp
filds
dec
pop
xchg
arpl
sbb
test
dec
scas
pushf
lret
or
jmp
jns
adc
push
push
inc
cmpsl
inc
xchg
jbe
jp
or
inc
jl
mov
jge
pop
push
mov
sub
and
mov
jmp
mov
fadds
repz
cmc
add
pop
jg
or
jns
sbb
mov
adc
xor
mov
adc
adc
aaa
xor
push
leave
pop
jle
push
mov
push
or
xor
les
stc
xchg
pushl
jl
out
mov
push
ficoms
loope
mov
jg
inc
push
out
fcomip
inc
cmpl
mov
mov
sub
sahf
dec
std
jg
fidivrl
and
sbb
adc
jo
push
repnz
add
inc
clc
aaa
fimuls
out
popa
jle
ret
mov
fdivrs
pop
xor
push
addr16
pop
mov
cmp
mov
daa
jl
outsb
loope
dec
std
sahf
jle
addr16
shl
cmp
aam
pop
cmp
push
cmp
xchg
cmp
ficoms
cmp
lds
hlt
xchg
inc
movsb
mov
xor
pop
dec
lret
or
shlb
fstps
decl
ret
div
leave
and
shrb
ficomps
inc
and
jle
inc
aam
fistl
and
and
mov
pop
cs
sbb
or
add
inc
imul
lock
pop
sbb
dec
aas
dec
xor
clc
nop
psrad
hlt
cmc
fwait
stos
je
scas
xor
pop
lahf
pop
leave
mov
mov
dec
push
pop
sbb
push
and
add
sub
cmp
mov
jno
inc
xchg
push
std
hlt
int
idiv
jns
dec
dec
aaa
push
jg
pop
test
push
pusha
addl
mov
shlb
cmpsl
outsb
in
inc
orl
shrb
xor
jnp
scas
mov
int
shrl
or
and
dec
stos
iret
dec
add
pushf
add
cmp
aas
xor
sub
bswap
repz
cli
xchg
xor
sahf
cmp
mov
outsl
push
inc
sbb
mov
cltd
cmpl
test
mov
lret
lret
xchg
cmpsl
pop
lods
out
into
mov
sbb
push
std
pop
dec
push
mov
sahf
sub
out
xlat
xchg
xor
pop
cmpsl
dec
adc
pop
dec
dec
inc
out
es
inc
pop
cmp
push
fnstenv
ret
dec
leave
sbb
pop
dec
fnstenv
les
xor
sbb
bound
mov
stos
gs
mov
mov
and
lock
dec
adc
lret
test
xchg
insl
or
ret
pop
ficoml
sbb
pop
iret
mov
rcrl
inc
and
dec
dec
xor
dec
xchg
out
pop
mov
jb
dec
add
jbe
dec
lret
imul
mov
mov
jl
jno
outsl
cs
loopne
jle
repz
mov
fisubs
add
sub
jo
xchg
xor
sub
mov
push
aaa
fdivl
mov
sbb
lock
das
in
inc
xchg
jle
cmp
fs
stos
add
mov
insl
push
mov
dec
std
mov
iret
add
iret
dec
inc
adc
mov
xchg
mov
or
aas
cmp
call
insl
cmp
out
jo
fdivrs
cli
jle
nop
push
lods
and
pop
out
shlb
clc
cmp
or
les
pop
gs
insb
cmpsb
or
xchg
push
sub
or
xchg
stos
inc
mov
dec
jae
int3
add
xlat
push
dec
popf
fldl
inc
movsb
in
push
int3
scas
add
dec
imul
inc
outsb
mov
insb
cmp
push
std
test
push
loope
mov
sbb
mov
mov
pop
inc
dec
jp
pextrw
dec
push
pop
mov
cmp
outsl
pop
dec
imul
mov
in
arpl
daa
jmp
dec
and
jns
dec
mov
dec
cmp
pop
push
addr16
dec
mov
subb
dec
jg
cmp
add
inc
dec
lret
jmp
dec
sahf
stos
dec
sti
scas
movsl
ss
dec
sbb
lock
mov
cld
arpl
pop
addr16
xor
jmp
mov
lea
xchg
cmpsb
jo
imul
add
sbb
pushf
dec
mov
out
aaa
aad
or
repnz
jbe
cltd
dec
in
rorb
test
cmc
adc
das
lahf
xchg
sbb
and
mov
dec
test
or
and
dec
testl
jbe
adc
out
lods
dec
fbstp
stc
inc
inc
rcrb
inc
push
scas
ljmp
sbb
dec
pop
xor
cmpsl
or
jmp
dec
mov
jmp
pushf
dec
push
pop
jl
push
dec
jbe
hlt
jbe
dec
fcompl
cmp
insb
pop
lods
mov
sbb
iret
or
aas
mov
xor
pop
and
or
shl
loopne
cmp
icebp
xchg
inc
xchg
movsb
int3
jl
mov
aam
incb
inc
jmp
mov
aam
add
scas
addr16
loop
dec
sub
push
imul
outsl
push
mov
es
aaa
inc
mov
pop
cmp
stos
or
inc
dec
inc
pop
mov
add
ljmp
jp
out
jl
out
loop
in
mov
add
dec
cmpl
or
pop
adc
jecxz
inc
std
mov
cmp
sbb
rorl
dec
dec
pop
and
fwait
pop
rcrl
dec
mov
add
dec
pop
ret
cmp
mov
jle
dec
xchg
outsl
loopne
cmp
dec
in
iret
test
test
decl
hlt
dec
pop
lock
adc
add
jl
shlb
mov
push
push
stos
mov
xor
push
cmp
dec
sbb
xchg
sub
push
sub
jmp
dec
inc
jp
ss
std
outsb
jne
pop
xor
mov
and
cmp
dec
iret
aas
sbb
mov
adc
sahf
bound
mov
pusha
or
loopne
or
dec
rclb
sbb
dec
xchg
ret
mov
dec
jecxz
fisttpl
je
jmp
arpl
add
mov
daa
cmc
movsl
loope
dec
xor
dec
pop
inc
stc
or
out
out
clc
fcmovne
jae
insl
jns
mov
jmp
mov
je
shrb
xor
pushf
push
inc
xor
dec
or
data16
fistpll
std
add
push
lods
lret
dec
xchg
enter
outsb
lahf
or
xor
adc
iret
cmp
pop
addr16
lahf
sub
mov
pushf
jp
dec
sbb
dec
dec
das
or
fnstenv
rcrl
daa
xchg
jns
and
push
mov
jo
xchg
setp
cmp
ja
sub
jl
pop
ret
int
sub
jbe
in
sbb
lea
or
ss
push
ds
aam
cmpsb
inc
jl
add
mov
adc
rdtsc
into
xor
cmp
xchg
mov
lock
jno
out
mov
jl
fstpt
stc
and
inc
push
cld
dec
jle
in
or
mov
call
dec
jmp
js
pop
fsts
adc
mov
push
ret
clc
dec
xlat
fcmove
pop
push
arpl
inc
xchg
xor
cs
adc
nop
jle
lods
lds
lds
into
cmpsl
mov
push
sti
mov
aam
dec
jg
jnp
mov
inc
inc
sub
lcall
lret
jg
pop
cmp
mov
sub
shrl
insl
inc
ds
sbb
in
jnp
mov
icebp
xchg
push
popa
sbb
mov
xchg
jp
ret
cs
aam
dec
out
cmp
test
sub
call
outsl
pop
popf
iret
mov
sub
mov
fxch
mov
or
sbb
dec
jne
cmp
cmp
cmp
int
pop
imul
sbb
jb
jg
aaa
mov
or
sub
sub
cmp
or
pop
out
push
and
and
mull
inc
push
jg
push
les
inc
movl
dec
jg
mov
xchg
es
movsb
ljmp
nop
ljmp
andb
cltd
rolb
in
add
shl
xchg
pop
rclb
push
out
insb
scas
ret
and
push
push
subb
imul
pop
xor
mov
dec
shll
arpl
mov
adc
fstl
xor
xor
mov
add
ljmp
dec
or
out
xchg
adc
imul
add
cmpsb
enter
sarl
and
cmp
dec
popf
or
jp
test
dec
sub
iret
test
dec
xchg
and
adc
mov
xchg
dec
iret
jge
pusha
jno
mov
sbb
push
sahf
imul
cmp
pop
xor
sbb
xor
xor
data16
fistl
xor
inc
add
mov
dec
push
loopne
rcll
test
fstpt
xchg
push
and
mov
push
mov
mov
mov
dec
out
jns
test
pop
dec
sub
jo
cmc
dec
cmp
scas
dec
fistpl
lret
outsl
dec
mov
cltd
dec
xor
dec
sub
enter
fimull
mov
rcrl
into
loopne
lods
xchg
adc
dec
cltd
imul
xor
add
sbb
xchg
fistpll
sbb
jno
jae
int
inc
jg
cwtl
or
orb
fs
mov
movsb
repnz
push
imull
mov
int3
lock
outsl
add
fwait
inc
add
scas
ficomps
mov
jmp
lock
sbb
rorl
dec
sbb
pop
dec
inc
push
mov
outsb
out
jp
ljmp
cmpsl
dec
cmp
fs
adc
push
inc
adc
ret
into
and
xor
pusha
in
sub
add
lret
push
rorb
add
mov
loopne
ficoms
cmp
lmsw
dec
xchg
adc
mov
dec
mov
daa
outsb
std
or
cmp
aad
clc
out
add
sub
adcb
mov
add
repnz
dec
je
cmp
loopne
pcmpeqd
pop
adc
jo
loopne
dec
cmp
xor
in
xor
pop
test
iret
jg
cmp
xchg
xor
out
imul
les
call
stos
pushl
cmpsl
cld
lea
push
xor
int3
or
or
dec
push
jbe
stos
movsl
lret
jbe
xor
js
clc
dec
loope
dec
iret
adc
aaa
cmp
nop
js
hlt
push
lahf
ljmp
nop
dec
subl
jle
dec
add
cmp
pop
push
xor
ss
pusha
pop
inc
sub
inc
dec
mov
outsb
out
dec
sub
pop
stos
pop
jnp
dec
inc
adc
sbb
push
pusha
dec
leave
imul
mov
mov
lret
xlat
dec
pop
dec
sub
push
in
cmpb
dec
popa
mov
rorb
mov
cmp
mov
jb
out
mov
sub
cmp
sbb
xchg
inc
arpl
fstps
faddl
shll
imul
iret
jns
addr16
mov
or
mov
out
jle
inc
or
or
inc
mov
dec
movsl
jg
lahf
inc
xchg
inc
jle
mov
sahf
les
sti
or
into
jg
sbb
cwtl
xchg
adc
xchg
jle
dec
imul
inc
into
jg
sub
push
das
dec
push
shll
push
outsl
cmp
pop
or
xor
mov
insb
daa
pop
repnz
mov
inc
in
jge
jl
repnz
dec
sub
sub
lds
popf
dec
xchg
rorl
jecxz
mov
jge
fdivrl
cltd
jbe
dec
cwtl
inc
mov
leave
dec
stc
test
test
clc
testl
fiaddl
je
ljmp
xchg
fildl
pop
dec
jo
sub
icebp
push
inc
adc
xor
insl
aas
out
arpl
jne
dec
stos
nop
outsb
call
lock
lret
xor
arpl
dec
ret
inc
test
xlat
out
sub
dec
repnz
mov
popf
pop
subb
insl
xor
lods
dec
mov
ret
popf
sbb
ss
xlat
dec
push
std
jbe
clc
mov
insb
inc
stos
arpl
or
cmpb
cs
pop
lcall
dec
xor
int3
xchg
cmpsb
sub
xor
mov
scas
pop
sahf
jp
dec
xor
mov
and
lcall
insl
add
inc
fdivrs
jnp
adc
in
hlt
push
pop
xor
ds
test
cwtl
mov
add
pop
movaps
dec
iret
xchg
out
fidivs
bound
cld
je
bts
pop
adc
pop
stos
xor
mov
dec
repnz
cmp
mov
jo
mov
inc
adc
cmc
jns
rcrb
push
jne
inc
dec
and
pop
mov
mov
sbb
sbb
push
mov
je
es
gs
inc
repnz
mov
xlat
pushf
jae
dec
imul
negl
xlat
out
mov
push
dec
jns
xor
dec
push
adc
mov
stc
and
lahf
sbb
aaa
dec
sub
push
mov
jbe
dec
xchg
pop
stos
mov
xor
pop
dec
popf
add
lcall
test
rorb
les
pop
idivl
mov
add
lock
xchg
sti
cmpsb
ficompl
ds
pop
int3
inc
cs
cltd
pop
popa
sbb
dec
jle
mov
dec
addr16
jb
cli
pusha
cmp
mov
cltd
or
stc
xor
mov
es
fucom
pop
ss
push
mov
scas
adc
enter
and
xchg
inc
clc
xor
sbb
fiadds
jle
sub
push
aaa
jp
xchg
xor
stos
mov
cmpsl
add
jns
xchg
and
es
ficoml
mov
sub
fwait
lcall
jmp
imul
fisubrl
ja
pop
fisttpll
outsl
cmc
and
jae
pop
dec
fs
loope
cmc
rcrb
add
and
insb
ficomps
cmpsl
mov
jle
stc
hlt
inc
xor
cmp
pop
add
mov
dec
mov
dec
es
jg
sub
xor
sub
mov
decl
iret
or
rcl
push
add
loope
and
sbb
loope
sub
or
add
xchg
clc
xchg
mov
loop
cmp
dec
inc
cltd
jg
dec
add
dec
mov
adcb
pop
popf
repnz
call
out
shll
and
mov
xchg
inc
test
jl
loop
push
add
dec
jge
jne
mov
in
mov
jo
push
iret
dec
insb
add
lock
movsb
pop
inc
loop
inc
adc
sbb
pop
fimuls
add
imul
frstor
xor
fiaddl
and
sub
dec
add
push
sub
repnz
mov
dec
call
xor
dec
adc
inc
add
icebp
repnz
test
mov
adc
or
in
cli
std
dec
pop
outsl
xadd
or
jmp
int
mov
xchg
repnz
sbb
std
aad
sbb
add
lret
fsubr
ss
sbb
testb
rorl
lcall
lods
aaa
adc
dec
int3
fisttps
into
dec
testl
dec
pushf
orl
dec
inc
stc
mov
popa
scas
test
rclb
add
cmp
ljmp
fs
sbb
scas
and
bswap
cwtl
cmp
dec
test
push
pop
dec
ret
add
stos
cmpsl
push
sbb
out
mov
lds
pop
or
pop
iret
sub
dec
sbb
in
pop
dec
push
jo
add
sbb
push
dec
es
jns
push
dec
pop
dec
stos
cltd
xor
dec
push
adc
cmp
repnz
push
push
push
dec
lret
insb
clc
imul
out
aaa
mov
imul
add
fisttpl
mov
inc
pop
or
dec
ss
inc
mov
sbb
or
insl
pop
mov
pop
and
fiaddl
xlat
dec
pop
jmp
adc
icebp
push
mov
dec
xor
mov
push
push
dec
loop
ss
in
out
in
jbe
and
dec
mov
xchg
and
pop
dec
pusha
add
scas
hlt
inc
xor
sarl
divl
cld
push
aad
inc
ja
sub
dec
adc
inc
shrb
dec
imul
jbe
movsb
dec
shr
xchg
rorb
add
gs
stos
aam
sub
outsl
test
addr16
inc
shlb
sub
xchg
stos
dec
jg
in
push
xchg
out
inc
idivl
cmp
icebp
jo
std
cwtl
gs
fs
or
jo
xchg
das
adc
add
popf
ds
mov
fs
jb
jp
push
mov
mov
imul
pop
jno
or
cmp
fildl
shr
mov
orb
sbb
sbb
add
cmp
jb
push
jle
jnp
je
clc
adc
aas
sahf
cmovge
mov
mov
sub
mov
sub
and
push
icebp
mov
and
loope
mov
cwtl
jae
test
out
add
push
xor
shrb
add
ds
iret
sub
or
fbld
jle
lea
mov
cmpsl
js
inc
adc
bound
adc
push
jle
int
jb
adc
sub
dec
sahf
call
cs
bound
cmp
bound
dec
aaa
cld
and
out
jbe
loopne
ret
iret
and
fadds
into
mov
mov
lahf
lods
cmp
in
inc
mov
inc
push
movsb
mov
inc
inc
jns
lret
push
mov
lret
pop
push
fs
mov
dec
and
or
push
ficoml
cmpsb
sub
add
inc
jo
ds
mov
cmp
jmp
outsb
das
test
mov
fldenv
push
sbb
pop
jne
fs
aaa
icebp
jmp
insb
mov
int
int3
mov
in
ret
sbb
cmp
out
pop
aaa
ss
dec
adc
sub
jle
scas
pop
jg
pop
xchg
fstpl
push
pop
ljmp
test
les
xchg
outsl
pop
leave
adc
test
mov
fs
jle
repz
js
jle
arpl
push
jl,pn
jno
jbe
xor
jmp
test
rorb
push
sbb
or
push
movsl
nop
mov
daa
xchg
pop
stos
test
fimull
iret
mov
dec
hlt
xlat
inc
movsb
out
push
loope
adc
dec
mov
mov
dec
popf
jnp
test
out
push
dec
in
sbb
xchg
lahf
mov
dec
lret
xchg
lock
mov
xchg
inc
sbb
testb
cwtl
and
rcl
and
faddl
mov
int3
test
mov
push
leave
stc
in
andl
push
dec
or
sub
scas
lcall
mov
pop
ds
int3
ss
dec
adc
xchg
lret
sbb
xor
xchg
xor
outsl
cmp
dec
int
mov
test
push
inc
call
repz
pop
and
cmp
out
push
mov
vsqrtpd
roll
out
pop
das
jle
sub
movsl
movsb
cs
bound
dec
aas
jg
in
mov
and
dec
sbb
xor
push
movntq
cmp
mov
inc
aam
adc
jnp
sarl
out
mov
mov
shlb
iret
cmp
sub
lea
loop
dec
pushf
sub
dec
testb
or
push
dec
cmp
stos
jl
xchg
jle
pop
dec
adc
fisubs
cmp
add
iret
mov
mov
fcoml
add
rcll
sub
bound
outsl
mov
mov
out
shl
int
xchg
outsl
repz
cmp
lahf
ja
cmp
inc
gs
pop
or
jae
cmp
dec
mov
adc
movsb
inc
and
mov
fadds
jg
or
stos
and
mov
sub
sahf
xchg
jl
push
sbb
iret
inc
or
dec
xor
inc
pop
clts
aad
leave
nop
mov
xor
rcrb
enter
jno
sbb
dec
xchg
mov
dec
insb
ja
sbb
dec
jo
rcrl
mov
fistpl
ja
ret
cwtl
dec
jle
les
testb
pop
add
in
scas
inc
push
dec
jmp
xchg
mov
roll
pop
data16
loopne
or
loop
pop
mov
dec
xchg
mov
sti
mov
push
hlt
data16
insb
and
sub
sbb
dec
shll
pop
dec
shrb
aad
xor
pop
rorl
das
es
lahf
dec
push
and
jl
ret
xor
fcompl
xchg
test
dec
dec
pop
mov
arpl
dec
repnz
lret
add
clc
ja
inc
cmpsl
jp
data16
adc
mov
dec
icebp
pop
dec
push
test
mov
xchg
xlat
das
test
ficoms
jge
cwtl
rdtsc
push
jmp
xchg
hlt
rorl
mov
test
fistl
pop
pusha
fnstenv
xchg
push
inc
cs
push
cmp
jp
push
andl
and
or
cltd
sahf
xor
std
dec
insb
stos
cld
daa
fs
cmovl
mulb
mov
fdivl
rclb
add
pop
or
loope
mov
push
movsb
cld
xchg
arpl
dec
mov
das
jmp
push
inc
mov
inc
cmp
xor
xor
loop
inc
xchg
adc
cmp
xor
dec
iret
js
enter
mov
nop
dec
pusha
rcr
inc
jp
push
dec
mov
aad
cs
push
pop
out
dec
add
sub
ljmp
test
or
cltd
addr16
test
push
dec
pushf
mov
xor
pop
dec
loop
push
pop
mov
dec
addr16
scas
dec
repz
test
mov
iret
lds
sahf
mov
dec
mov
mov
dec
push
add
add
clc
test
xchg
jb
out
out
mov
sbb
mov
cmp
adc
iret
jg
pop
cmpsl
pop
es
in
outsb
mov
es
ret
mov
outsl
movsl
cmp
dec
das
mov
adc
test
cmp
cs
shrb
jle
ror
push
stos
sbb
and
shrb
push
ffree
push
push
push
ljmp
rcrb
push
ret
sti
pop
adc
mov
push
orb
test
add
stc
xchg
cmp
xor
sbb
or
stc
out
xor
cld
sub
dec
add
dec
xor
xor
dec
dec
or
imul
sbb
leave
xor
popa
aas
lods
ljmp
in
xor
xchg
inc
outsl
jl
dec
cmp
aam
rcrl
mov
mov
inc
bound
shrl
mov
clc
adc
test
and
inc
imulb
inc
dec
fs
cmp
lahf
add
addr16
mov
adc
hlt
push
push
mov
mov
or
aas
adc
cmp
jle
xchg
fwait
dec
rolb
inc
inc
jg
jmp
mov
jl
xor
jle
pop
cwtl
cmp
rclb
cmpsb
jg
and
stc
jl
inc
inc
hlt
jle
test
mov
ret
or
push
scas
lret
outsb
cmp
adc
sbb
xchg
loop
xchg
push
xor
subb
iret
clc
mov
fidivrl
into
int
adc
inc
loopne
jmp
pop
js
pop
sbb
loopne
out
dec
fcoms
cltd
aas
into
inc
shrb
and
cmp
sbb
mov
icebp
and
sbb
cmp
xchg
movsl
mov
gs
pusha
sub
pop
ror
mov
mov
das
push
sbb
in
jns
repnz
pop
outsl
lret
adc
int
xchg
or
mov
push
idivb
leave
jl
add
sbb
mov
loopne
dec
pop
test
popf
or
roll
jg
testl
xor
packsswb
mov
and
dec
push
jecxz
mov
jne
mov
mov
cld
xlat
mov
adc
mul
xor
adc
push
addr16
xchg
pop
add
mov
shll
stos
repz
xchg
dec
sbb
inc
lcall
jge
dec
popa
or
mov
mov
adcl
xchg
ret
dec
xor
inc
nop
cmp
std
mov
or
test
mov
add
and
mov
xchg
xor
add
icebp
and
ss
pop
aam
inc
pop
pop
cli
movsb
xchg
fwait
adc
aaa
ljmp
loopne
aad
loop
jl
xchg
add
stos
jo
sahf
mov
mov
mov
or
cmp
mov
addb
out
bound
mov
adc
dec
insb
pop
push
cmp
adc
imul
test
dec
push
jno
cli
in
or
mov
in
pop
push
pop
inc
mull
loopne
out
ja
sbb
inc
negb
dec
dec
loope
out
adc
push
into
xchg
jno
sub
pop
xor
xchg
lock
repnz
roll
jne
mov
pop
out
jmp
dec
std
loope
test
dec
cwtl
jno
stc
or
or
dec
aad
arpl
scas
and
pop
addr16
jno
das
decb
fistps
rorb
fs
fimull
inc
mov
out
inc
int
dec
insb
sbb
imul
movsl
jg
cs
and
outsl
push
mov
mov
xor
inc
dec
dec
jg
xchg
stos
outsl
je
jne
pop
dec
add
mov
cmp
dec
into
xlat
aad
subb
ljmp
les
hlt
dec
repnz
xor
out
mov
adc
mov
lret
push
pop
shlb
mov
aaa
push
sbb
icebp
inc
scas
mov
push
mov
push
cmpsl
fbld
dec
dec
movsl
jge
cmpsb
test
scas
dec
jbe
lret
mov
les
push
jne
pop
mov
pop
cs
lods
inc
arpl
push
into
aaa
mov
dec
mov
and
jge
add
mov
rclb
pop
imul
test
and
dec
and
cmp
jne
add
loop
in
mov
sarl
test
scas
addr16
insl
and
cmpb
fcmovb
xor
push
add
and
ror
or
mov
push
cmp
and
mov
mov
div
ljmp
popa
std
xchg
push
repz
and
sbb
int3
js
movsl
jmp
dec
jg
fdivrl
ds
jg
jle
cli
push
add
cltd
data16
dec
jbe
jge
jg
cmp
sbb
mov
cmp
mov
jp
ja
out
fiadds
xchg
adc
xchg
cwtl
cltd
sub
rorl
jns
in
and
clc
int
ss
xor
lret
lods
dec
arpl
loop
pop
push
push
aas
push
xchg
push
sub
sarb
fwait
lea
nop
adc
jno
cmovbe
data16
mov
jle
mov
mov
and
movsl
mov
dec
out
jle
sbb
orl
pop
adc
fsubs
jmp
xchg
mov
xchg
mov
jle
sbbb
fmuls
and
and
sub
mov
pop
movsl
xchg
inc
jae
cmp
repz
sub
dec
fdivr
add
iret
xchg
jg
xchg
clc
into
cmpl
loop
jl
xor
mov
xor
rorl
shlb
jl
fucomi
shll
dec
inc
cmpsl
jl
sbb
cmp
and
jle
dec
dec
pusha
mov
xchg
sbb
cmp
fstps
mov
fs
fdivl
jg
std
mulb
mov
pop
ds
push
in
fnsave
jle
cltd
stc
or
push
js
daa
jle
or
cs
xchg
dec
and
js
sahf
scas
cmpsl
sbb
xchg
pop
in
aaa
ud0
push
in
mov
push
xchg
enter
sub
scas
int3
jl
cltd
sub
push
mov
rolb
lock
sbb
jle
sahf
or
stc
xor
xor
clc
stos
pop
lock
das
in
in
cs
aam
xchg
cs
icebp
pop
std
sub
jl,pt
call
xchg
jle
sbb
and
xor
neg
jge
faddl
shll
scas
test
jecxz
ljmp
mov
dec
sub
iret
push
cmp
mov
int
sbb
lods
dec
out
mov
dec
add
shll
js
dec
sub
cld
aam
dec
push
int3
out
jmp
gs
jle
dec
sbb
or
out
data16
xlat
push
dec
mov
push
pop
dec
sti
bound
enter
pop
dec
cmp
fucom
std
jle
dec
push
shrl
cli
push
mov
and
add
dec
inc
loopne
inc
mov
addr16
dec
movsl
push
lods
mov
xchg
pop
lds
mov
repz
je
ljmp
lods
dec
stc
mov
repnz
dec
icebp
ds
js
inc
xchg
push
fimull
dec
sbb
dec
jo
pop
sbb
add
dec
ds
cld
out
popl
fwait
pop
popf
jg
xlat
xor
dec
outsb
in
add
dec
xor
sub
xor
outsb
mov
add
jbe
cmovle
cmc
ss
dec
jne
mov
or
movsb
out
mov
into
repz
pop
lds
push
dec
addr16
sbb
xor
repnz
mov
addps
xchg
xchg
in
loop
fmuls
sub
xor
ljmp
jo
outsb
push
dec
repnz
test
mov
dec
push
loop
jp
push
push
sahf
aaa
or
int3
cmp
dec
inc
mov
out
sub
and
pusha
lods
fisttps
xor
out
push
push
mov
mov
adc
inc
pop
lds
mov
mov
ficompl
mov
inc
inc
and
out
int3
xor
mov
add
subl
das
daa
adc
imul
push
lods
std
mov
dec
decb
adc
outsl
cli
dec
mov
aad
jecxz
jl
aas
push
push
inc
cmp
in
jo
pop
es
leave
fwait
xor
lds
push
mov
fsubs
pop
push
mov
imul
dec
fisubrl
xchg
xchg
mov
sub
mov
mov
add
dec
pushf
data16
repnz
movl
pop
into
push
repz
jecxz
into
jnp
xchg
pop
dec
push
mov
adc
test
stc
xor
or
push
sbbl
adc
jecxz
sub
sub
dec
mul
mulb
inc
xchg
jp
dec
scas
jmp
sbb
dec
loop
mov
cmp
cmpsb
int3
repz
pop
push
aas
fldenv
mov
add
dec
push
xor
shll
mov
addr16
mov
inc
imul
rcll
imul
push
mov
stos
mov
mov
dec
fidivl
addr16
imul
sbb
cmpb
inc
stos
fmul
repnz
insl
sbb
pop
mov
sahf
shl
fnstsw
mov
dec
idivb
mov
xchg
xlat
sbb
sub
aam
sub
sub
dec
fiaddl
clc
loop
mov
lock
jbe
mov
xchg
movsb
jl
test
out
inc
cmpl
stc
sub
xlat
pop
dec
adc
add
dec
dec
jmp
mov
ret
out
dec
inc
cmp
pop
outsb
cmp
sub
jl
fs
jo
add
lcall
adc
dec
jl
aam
dec
add
das
je
or
or
push
outsb
dec
xor
dec
adc
in
div
adc
jecxz
nop
subb
adc
and
sbb
dec
insb
push
icebp
cmp
dec
push
or
rclb
pop
lret
iret
xchg
lahf
dec
dec
adc
xor
push
packssdw
shrb
mov
mov
mov
mov
in
shlb
jae
and
dec
push
push
rclb
dec
popl
les
jns
shll
test
push
mov
ljmp
mov
iret
add
cmp
dec
inc
cmp
out
fistps
dec
jnp
pop
test
dec
into
pop
lret
stc
mov
cmp
ficoms
xchg
mov
inc
stc
push
jg
lods
add
adc
daa
jecxz
dec
ds
loopne
cmpsl
lahf
aas
adc
mov
fidivrs
xchg
sub
jl
jb
add
dec
dec
pushw
and
and
mov
xchg
adc
push
aad
dec
iret
mov
in
and
aad
sahf
or
insb
xchg
xchg
push
mov
ja
out
inc
mov
das
mov
icebp
xchg
mov
rcrb
rolb
rorb
mov
insl
push
mov
movsb
cld
dec
into
aaa
jle
fs
push
push
fists
push
adc
cmpsl
jo
sbb
push
jae
nop
inc
punpckldq
mov
lcall
jg
jle
fwait
dec
into
cltd
int3
mov
sar
add
mov
add
jle
xor
inc
testb
adcl
cs
jg
popa
jmp
jbe
dec
mov
clc
sti
push
popa
push
mov
rorl
mov
mov
pop
adc
mov
and
cmp
jg
scas
xchg
aas
jle
je
leave
cmp
push
aaa
jno
xchg
inc
idivl
out
rorl
pop
inc
pop
xchg
pop
int
cmpsb
mov
add
cld
in
sti
ret
xor
push
adc
adc
loope,pn
iret
js
pop
sub
dec
cmpsl
sub
jb
lahf
jmp
mov
add
mov
notl
inc
cmp
test
mov
cmp
adc
xchg
sub
mov
repz
dec
in
test
push
dec
fcoml
in
jb
imul
dec
aam
aaa
mov
into
dec
or
push
mov
jecxz
out
xorl
dec
sub
scas
inc
dec
cwtl
nop
mov
out
dec
dec
mov
je
inc
dec
pop
mov
or
sbb
mov
fcos
push
aam
push
std
and
sarb
ja
and
pop
lds
ud1
jg
push
add
es
icebp
lds
stc
cmp
sbb
push
adc
inc
jl
lcall
aam
scas
push
fwait
mov
and
push
ljmp
cmp
pop
es
sub
loope
bound
hlt
arpl
mov
imul
fmuls
stos
pop
fnstenv
dec
dec
cmp
iret
aas
inc
xor
add
cltd
dec
aad
hlt
mov
push
outsl
add
lcall
in
mov
dec
mov
jnp
notb
cld
aam
xor
in
jo
mov
dec
fldcw
mov
lea
dec
mov
bnd
mov
test
mov
stos
nop
dec
inc
cs
jne
fnstsw
dec
test
cmp
add
push
xor
adcb
scas
sub
pusha
push
pusha
xchg
fmul
aaa
mov
dec
sbb
cmp
popa
je
pop
mov
xor
fmul
ret
cmp
dec
sub
loopne
mov
insb
std
lcall
push
cmp
jecxz
jbe
xor
jmp
test
add
ja
mov
jge
loopne
lea
dec
dec
or
mov
mov
cltd
dec
call
mov
jnp
imul
jo
adc
dec
mov
dec
sahf
mov
insl
out
stc
mov
iret
std
fisttpl
mov
inc
jecxz
cld
cmpsb
xor
outsb
and
mov
pushf
stc
dec
mov
adc
or
xor
cmp
lret
dec
add
mov
push
dec
in
jno
loope
push
jle
cmp
mov
inc
scas
dec
andb
xchg
addr16
inc
dec
dec
pop
xor
or
cwtl
lds
xchg
or
dec
mov
in
push
and
dec
dec
pusha
push
ret
push
dec
mov
in
stc
adc
adc
sbb
and
mov
or
inc
je
outsl
pop
dec
sbbl
pop
xchg
inc
testb
mov
int3
mov
pop
sub
movsb
inc
pop
jne
in
jns
ret
imul
fcompl
dec
push
push
outsb
push
dec
std
into
jg
addb
mov
aas
repnz
icebp
addr16
or
mov
jle
pop
scas
lods
inc
jg
inc
enter
and
cmp
jno
xor
jle
loopne
cmp
dec
loopne
add
xchg
mov
and
push
shlb
and
push
dec
out
xor
push
into
test
push
add
mov
pop
add
add
pop
or
dec
sahf
inc
iret
inc
mov
imul
dec
ret
xlat
add
adc
fidivrs
inc
add
scas
mov
dec
mov
xchg
sarb
mov
dec
addr16
loopne
jmp
pop
fisttps
or
or
dec
sbb
mov
adc
je
scas
fnstenv
sti
push
lock
lret
pop
jnp
xor
dec
push
shll
sbb
adc
push
sub
lcall
push
sbb
inc
stc
sub
out
lret
xchg
dec
rolb
pop
xchg
aad
outsb
loopne
sbbl
sbb
fadd
push
test
sbb
hlt
mov
adc
mov
cmpb
lret
dec
out
dec
loope
out
mov
and
lds
mov
stc
push
lea
dec
cmp
jne
dec
insb
enter
adc
and
jnp
leave
inc
aaa
or
mov
das
inc
dec
or
scas
lcall
icebp
scas
fwait
adc
pop
iret
mov
xchg
dec
dec
rol
jmp
dec
jle
fsubrs
add
push
ret
rolb
sub
popa
lahf
fildl
jge
mov
lods
dec
cmp
jo
push
xor
int
fbld
and
test
sub
adc
sti
pop
hlt
dec
xor
pop
fadd
mov
add
push
test
mov
clc
jmp
into
xchg
loopne
loop
xchg
aaa
imul
loop
push
mov
pushl
mov
inc
mov
xor
dec
jmp
inc
xchg
mov
inc
pop
movsb
into
dec
ds
push
loopne
fsubrl
cmp
mov
mov
int
paddusw
mov
inc
or
mov
test
cmpsl
jl
out
lret
test
jle
mov
push
or
dec
pop
in
mov
jge
and
lock
push
adc
dec
jle
fmul
fs
and
mov
adc
pop
cwtl
hlt
outsb
and
into
andb
dec
inc
loopne
inc
iret
inc
mov
inc
adc
push
cmp
stc
rdtsc
bound
dec
aaa
xchg
pop
pop
xor
ljmp
mov
lret
pop
push
mov
add
aam
adc
pop
shrl
sub
jecxz
stos
cmp
popf
inc
fdivs
add
faddl
fcmove
rclb
pop
or
pop
pop
dec
fwait
sbb
ja
mov
xor
fildll
orl
cmpsl
repz
sub
fwait
std
fimull
outsl
jle
sub
dec
movsl
pop
sbb
movb
daa
pop
movsb
loope
dec
jo
jecxz
and
lods
dec
sbb
jb
xor
or
cmpsl
jns
fprem
and
sbb
dec
repz
jne
in
rolb
mov
fstpt
sub
incl
mov
ret
test
lock
cmp
popa
jle
bts
jmp
sub
call
dec
scas
fs
lods
mov
cli
rclb
cmp
dec
jp
sarb
outsl
pop
mov
lods
add
aas
jg
rclb
mov
push
add
dec
test
or
pushf
notl
cmpsl
loope
jo
pop
aam
add
call
or
mov
inc
movzwl
cs
add
add
jmp
or
mov
mov
enter
out
aaa
push
nop
mov
movsl
sbbl
dec
jle
scas
mov
sarb
dec
adc
dec
inc
sti
faddl
sbb
aaa
cmp
je
xor
or
sub
inc
sub
dec
jg
jp
pop
jl
cmovo
or
jne
pop
push
push
fnstcw
mov
bound
iret
jns
jg
lds
jp
jmp
repz
lahf
addr16
cmp
int3
xchg
pop
dec
jb
shrl
inc
mov
shrb
xor
test
inc
testl
adc
aam
sbb
pusha
dec
pop
or
lock
pop
mov
mov
sub
push
insb
dec
in
xchg
sti
out
fisttps
mov
fimull
sub
jbe
mov
mov
repz
stos
fistl
aad
int3
cmp
push
out
sbbl
cld
dec
push
jl
sahf
ds
pop
mov
in
mov
orb
sub
push
dec
ret
jl
popf
add
dec
mov
adc
jge
inc
mov
xchg
in
adc
scas
outsb
repnz
out
cmpsb
jg
pop
sub
dec
in
dec
add
xor
repnz
or
push
adc
adc
push
jle
roll
push
push
adc
pop
sub
iret
lods
loope
faddl
cmp
pusha
loopne
push
dec
xor
xor
fs
pop
dec
fwait
inc
xchg
mov
fldl
mov
aaa
mov
cld
pop
push
pusha
or
mov
mov
lret
push
jnp
xor
in
xor
cmp
inc
roll
rol
movsl
mov
mov
sbb
sub
push
adc
push
out
gs
dec
pop
ret
and
fs
and
dec
push
das
mov
fdivrl
ds
jo
dec
pop
mov
push
mov
push
sub
jo
push
addr16
adc
pop
fldcw
and
shlb
hlt
std
dec
int
adc
adc
mov
jmp
in
mov
movsl
fwait
test
add
out
aam
lahf
push
pop
pop
dec
jnp
fwait
xchg
pushf
in
mov
adc
aas
dec
dec
adc
mov
out
js
fmull
stos
movsb
je
imul
dec
adc
jnp
xor
sub
aad
mov
int3
sbb
inc
icebp
cld
cmp
push
mov
add
repz
sbb
aam
push
iret
sbb
sub
imul
addr16
aas
scas
push
sbb
adc
ud2
jl
cld
dec
xchg
add
aad
dec
movsl
outsb
loopne
jg
pop
mov
clc
xchg
push
dec
fs
pop
mov
lods
mov
repnz
mov
mov
daa
in
lahf
mov
xchg
sti
int3
sbb
push
lret
test
cli
bound
xchg
mov
addr16
jns
cmp
dec
jmp
in
dec
or
mov
stc
inc
mov
pop
jp
fildl
pop
pusha
pushf
incl
mov
das
pop
adc
sti
lret
imul
das
jl
fsubrs
and
neg
mov
pop
mov
xchg
adc
icebp
sbb
les
das
stos
mov
scas
xchg
xlat
xlat
jg
pop
mov
jl
jecxz
push
adc
xchg
inc
add
aaa
dec
aam
mov
fsubrl
cli
add
dec
pop
test
inc
mov
cmp
push
inc
popf
out
mov
ret
dec
jno
mov
js
loopne
dec
add
cmp
xlat
decl
xor
imul
ja
sahf
lods
fcomps
add
push
add
into
movups
jecxz
rclb
leave
cli
dec
inc
repnz
lods
or
shl
rolb
sub
xchg
push
xlat
adc
xor
dec
push
std
jge
in
and
js
dec
rcr
call
mov
cmp
sub
adc
xchg
push
dec
sub
dec
jmp
sahf
mov
nop
adc
mov
dec
data16
es
dec
sub
jns
pop
xlat
jb
xlat
pop
movsb
xchg
aaa
dec
addb
mov
nop
iret
mov
loope
mov
dec
push
lahf
ljmp
je
adc
xor
stos
test
fs
ds
add
pushf
int
mov
es
loopne
dec
sbb
pop
dec
into
jecxz
aam
xchg
bound
jg
cmp
aaa
pop
and
push
decb
not
filds
xor
dec
mov
xor
push
xlat
outsb
sub
inc
sub
push
dec
sbb
xchg
fdivrl
dec
push
rcll
orb
adc
cmp
rclb
lret
in
aas
jle
test
or
orb
jmp
jmp
pop
enter
stos
dec
in
sub
scas
pop
and
dec
or
cmpsb
aad
call
sub
mov
out
and
xor
jno
xor
or
call
cli
dec
jae
jp
add
sahf
clc
loope
adc
and
mov
pop
adc
sbb
mov
ljmp
inc
scas
mov
cmc
add
shlb
out
setl
dec
pop
mov
adc
dec
shr
je
dec
hlt
xor
pushf
and
fimuls
mov
push
repz
xchg
push
and
stc
out
icebp
loope
loop,pn
stos
sbb
pop
add
dec
jg
sar
sarb
sub
lcall
mull
xchg
sbb
or
movsl
mov
into
rcll
ror
loop
icebp
jle
sahf
repnz
dec
je
mov
mov
fldcw
inc
cwtl
dec
add
in
cld
or
out
cli
inc
in
enter
mov
sub
adc
test
xchg
dec
mov
or
dec
lret
jbe
add
pop
iret
imul
dec
or
mov
inc
push
dec
lea
testl
sbb
cld
dec
adc
xchg
xor
subb
dec
addr16
dec
adc
inc
mov
jnp
sar
lods
jp
dec
push
and
lahf
and
jg
lea
mov
sub
mov
fistpll
xchg
jl,pn
mov
aam
inc
jle
testl
sahf
cltd
cmp
inc
jg
das
ja
mov
repz
cmpb
xchg
scas
jl
scas
xor
fists
leave
inc
imul
xchg
inc
xchg
leave
or
mull
sub
mov
push
fiadds
rcr
mov
dec
mov
outsl
xchg
icebp
test
cli
cmpsb
sbb
mov
xor
mov
fdivr
rcrl
mov
rol
dec
jl
mov
sub
cmp
or
mov
mov
fimuls
lods
push
and
ror
jle
xor
rolb
inc
stc
and
adc
aas
cltd
push
int
aaa
jl
leave
jp
insl
push
test
lods
jno
inc
mov
cltd
test
aas
jl
cmpsl
ja
inc
mov
out
cli
movsl
mov
fnsave
mov
loopne
xchg
push
dec
lahf
ds
mov
sub
xor
mov
aaa
dec
inc
cltd
arpl
mov
aam
mov
push
mov
and
dec
pop
jg
jbe
jmp
lcall
rorl
lret
mov
jnp
lock
sbb
sti
iret
inc
xchg
test
cli
ljmp
dec
xchg
test
mov
cmp
and
fmull
jae
mov
ficoml
mov
lahf
cmp
dec
scas
scas
inc
xchg
arpl
mov
fstl
jno
lahf
jns
pop
cmp
jle
push
out
lods
add
addr16
dec
dec
and
adc
fildl
or
dec
jb
sbb
pusha
fcmovnb
mov
into
nop
orl
cltd
in
insb
push
in
or
negl
pop
dec
fs
or
lret
mov
pop
jle
aas
fistl
dec
dec
mov
sub
xchg
inc
testl
push
push
add
xor
sub
lea
sub
in
fistps
sub
decl
jg
adc
fidivrl
out
xor
pop
stos
notb
sbb
adc
lret
xchg
xor
in
pop
or
inc
daa
jae
inc
dec
sahf
sub
inc
scas
dec
push
mov
dec
adc
arpl
pop
xorl
xchg
xchg
inc
mov
mov
dec
mov
xor
pop
push
mov
test
mov
js
or
out
dec
fstpl
imul
mov
xrelease
push
iret
divl
xchg
mov
jbe
loopne
pop
imul
arpl
test
cs
fwait
adc
scas
popa
inc
push
or
cmp
dec
mov
in
pop
cmp
dec
mov
cld
inc
lcall
jno
test
sbb
dec
data16
xor
nop
push
je
xor
dec
sbb
popa
aam
int3
pop
dec
sub
pop
addb
and
icebp
dec
test
test
loope
push
daa
sub
fistl
cmpsb
mov
dec
lahf
push
testb
aas
ss
dec
jbe
sub
pop
rolb
ret
dec
pop
data16
loopne
cmpb
cmpsb
fimuls
fistpll
mov
adc
mov
or
mov
mov
push
or
dec
sub
shrl
icebp
mov
sbb
mov
pusha
adc
mov
xor
dec
jb
ja
xchg
movb
xchg
pop
int
xor
jmp
mov
jne
fs
xorl
or
mov
scas
shlb
dec
mov
add
dec
mov
mov
int
pop
les
push
mulb
xchg
jp
loopne
pop
inc
icebp
pop
dec
ret
pop
dec
jno
add
xor
sub
pop
shlb
dec
lcall
stos
leave
or
mov
pop
cli
or
fwait
and
loop
nop
jne
dec
dec
cmpsl
jbe
pusha
fisubrs
dec
pop
jno
jecxz
mov
and
xor
imul
mov
shlb
mov
jl
rorl
leave
addr16
repnz
mov
dec
iretw
dec
or
and
mov
lea
pushf
popa
jl
and
jae
inc
test
sarl
sub
xor
repz
jp
xor
jns
sbb
mov
mov
jbe
movsbl
sub
into
es
dec
decb
cmc
lret
sub
dec
add
or
fnstcw
int3
andb
push
push
mov
dec
sti
rorb
filds
test
inc
add
and
outsb
inc
cmpsl
push
dec
pop
ss
jmp
xor
xchg
loopne
into
pop
arpl
pop
xchg
dec
sbb
not
dec
xorb
cmp
outsb
in
dec
clc
push
sub
inc
scas
xchg
xor
out
and
xor
and
outsl
bound
dec
test
rcl
push
pushf
mov
cmpsb
stos
ja
ficomps
cltd
xchg
mov
jle
push
jp
xchg
mov
shr
dec
clc
push
xchg
popf
jmp
cmc
xchg
adc
into
jne
mov
dec
inc
and
ret
dec
jp
hlt
pop
inc
xchg
adc
stos
jns
xchg
dec
xlat
inc
int3
sbb
leave
cwtl
mov
dec
jb
mov
mov
adc
sub
dec
jle
inc
mov
mov
notb
xor
in
pop
mov
std
xlat
inc
aaa
push
pop
xor
or
pop
sbb
xor
inc
jno
notl
arpl
lret
cmpsl
in
push
dec
andl
cmp
fisubrs
inc
imull
popf
dec
aad
shlb
xchg
add
ret
cmp
dec
sbb
ret
dec
int3
dec
in
dec
mov
cld
push
mov
dec
in
jg
data16
pusha
dec
in
test
popa
scas
sbb
xor
push
jecxz
jg
or
push
cmp
jle
push
or
mov
aas
gs
shr
cmpsb
xlat
fdivrs
cmpl
enter
into
lods
push
rcr
shrb
add
lahf
xchg
sbb
sub
cltd
sub
shlb
push
aaa
push
push
mov
out
insb
icebp
lock
push
pop
push
adc
xchg
mov
dec
push
jl
hlt
gs
dec
rorb
mov
mov
push
pop
and
stos
push
sbb
cmp
pop
fists
jl
sbb
pop
ja
push
cmpsl
aaa
in
mov
cmpsb
mov
rdtsc
push
into
xchg
and
es
dec
bound
test
jae
and
jle
mov
adc
adc
mov
out
cmpsl
es
and
jbe
dec
enter
push
out
data16
sub
push
pop
lods
add
pop
sub
nop
ja
fs
jnp
sarl
div
fistps
mov
mov
mov
dec
dec
push
add
fsubr
pop
pop
jl
adc
add
pusha
push
add
mulb
nop
aas
xor
movsb
xorl
inc
push
dec
push
jg
fucomi
cmp
shl
imul
sub
cwtl
add
xor
add
push
mov
stos
loopne
jno
or
cmp
dec
xchg
repnz
dec
ljmp
mov
dec
add
push
pop
add
sub
dec
pop
jg
adc
out
lods
dec
sbb
movsl
mov
lock
loope
mov
scas
dec
push
test
stos
dec
mov
shrl
add
inc
xchg
jg
jns
add
cli
sbb
lcall
lods
xchg
dec
icebp
dec
or
stc
cmc
pcmpgtw
out
adc
add
xchg
dec
aam
pop
mov
pop
out
pusha
leave
pop
push
sub
je
aaa
cmp
dec
icebp
xor
ds
sub
iret
scas
inc
stos
int3
dec
mov
out
rorl
outsb
out
adc
in
inc
leave
rorb
icebp
aad
divl
sub
call
dec
xlat
adc
roll
dec
and
xchg
es
ds
addb
xchg
push
gs
clc
xchg
aas
popa
mov
cmp
loope
inc
cmc
dec
dec
mov
sbbl
xlat
cmp
jo
dec
mov
adc
adc
cmp
loop
hlt
inc
popf
popa
push
leave
sbb
or
jns
mov
adc
cwtl
xchg
push
pop
dec
movsb
scas
or
jo
orb
dec
pop
jno
clc
dec
lret
icebp
pop
sbb
stc
or
test
aam
pop
xlat
cmp
out
test
push
fcompl
int
push
adc
jle
xor
jp
inc
icebp
fcoml
dec
out
scas
inc
stos
adc
jns
in
sub
mov
xor
pop
dec
push
fnstenv
adc
cs
mov
enterw
test
mov
imul
sbb
xchg
mov
pop
sub
imul
jle
addb
stos
fs
xchg
pop
in
pop
jge
add
jl
jnp
sahf
stos
in
mov
clc
lds
daa
in
xor
jle
adc
dec
jecxz
xchg
mov
setno
and
test
xchg
in
jecxz
mov
jle
jge
lahf
mov
dec
das
imul
pop
std
dec
aaa
push
shll
cmpsb
mov
pop
outsb
pop
outsb
sub
mov
xor
jo
dec
push
lods
in
aaa
jns
push
ds
xchg
insl
fimull
lock
insb
xor
scas
mov
stos
sub
test
adc
mov
mov
sti
test
mov
push
cmp
jno
dec
mov
into
adc
push
pop
ret
stc
ds
shlb
and
mov
xor
testl
sub
or
aas
scas
data16
xor
pop
dec
inc
lcall
and
xor
loope
mov
rorl
mov
scas
pop
inc
out
and
dec
test
inc
sub
orb
mov
ror
ja
or
mov
push
mov
cmpsl
mov
or
xchg
outsl
xchg
ss
or
scas
push
addr16
psrld
out
ret
and
or
loopne
in
pop
push
icebp
jae
xchg
xor
shll
push
add
sub
dec
jb
push
cmp
cmpsl
mov
lret
inc
and
add
push
jne
push
out
dec
lds
dec
cmp
sub
loop
mov
jno
dec
insl
jne
and
cmp
lret
fistl
mov
mov
bound
sbb
dec
xor
jo
mov
ds
pop
xchg
fdiv
outsb
adc
add
nop
jne
mov
shll
pop
enter
cld
inc
fistps
ljmp
cwtl
dec
or
push
push
cmpsb
jmp
dec
mov
pop
test
push
jge
nop
dec
hlt
jl
inc
sub
or
xchg
push
shr
mov
push
dec
aaa
je
inc
sub
mov
jle
repz
pushf
negb
shlb
pop
sub
les
popl
mov
mov
cld
ss
shl
mov
push
aad
sub
scas
and
inc
xchg
sub
das
fildll
pop
dec
push
push
xor
lahf
fisubl
pop
cld
lods
lret
jge
sbb
push
lea
mov
and
push
mov
repnz
ret
insl
mov
sbb
lret
xchg
ret
jno
std
ds
je
dec
cmp
mov
add
inc
lods
jmp
cmpsl
lods
cmp
pushf
dec
mov
call
push
mov
enter
aam
dec
push
popa
lcall
mov
jno
jne
arpl
mov
sahf
pop
jmp
pop
dec
or
fisubrl
and
test
dec
sbb
jg
xchg
rcr
scas
out
push
xlat
jae
dec
inc
lret
cmpb
add
cltd
fisttps
cmp
jle
sti
pop
arpl
mov
stos
and
cmc
pop
dec
cmp
inc
mov
adc
cwtl
in
fs
dec
mov
add
testl
add
aad
stos
out
xor
dec
cwtl
push
ret
icebp
aas
int
dec
mov
fldenv
dec
pop
pop
jl
mov
or
sbb
cmp
shlb
mov
jl
scas
les
lret
xchg
cmp
decl
adc
pop
cmp
scas
call
stos
lods
xorl
push
push
cs
xchg
cltd
incb
into
divl
cmp
addr16
mov
ss
mov
int3
mov
test
leave
das
lods
ja
cmp
pop
cltd
pop
dec
sbb
sbb
inc
in
stc
or
jl
mov
add
cmp
enter
cmp
aaa
faddp
sbb
dec
movsl
sub
mov
aas
inc
in
shll
dec
jge
js
inc
dec
out
cltd
cmp
push
ss
jg
ficomps
mov
pop
popl
cmpsl
scas
sub
pushf
sbb
fmull
dec
xor
shrb
scas
xor
lea
scas
fs
pop
cmp
into
pop
or
mov
and
mov
aad
sbb
test
repnz
fisttps
jl
stc
cld
push
or
cld
mov
pop
add
push
inc
lahf
inc
xor
cwtl
and
iret
shl
fistpl
in
ud0
pop
inc
outsl
dec
insb
fdivrl
shll
add
add
out
jb
mov
movsl
jge
pop
f2xm1
test
pop
push
lret
imul
pop
sbb
clc
sbb
not
adc
xchg
push
pop
dec
in
outsl
movsb
sbb
inc
cld
mov
es
mov
out
xor
cmp
pop
mov
shlb
sbbb
pop
hlt
xor
insl
out
scas
xchg
lods
outsl
adc
jbe
pop
jle
and
push
mov
lods
mov
iret
push
nop
mov
adc
pop
cs
insb
add
outsl
and
inc
dec
cmp
je
cmc
pusha
in
dec
clc
in
pop
sub
mov
popa
inc
mov
mov
dec
fwait
cmp
fcmovb
xor
xlat
repz
in
scas
add
imul
popa
dec
bsf
ja
push
lods
dec
push
je
aas
dec
sbb
sub
in
dec
cwtl
movsb
adc
dec
aam
sub
insl
js
test
nop
xor
cmp
lcall
dec
xchg
rorb
fmuls
dec
and
and
and
fimull
repz
sbb
rorl
jnp
fs
in
ds
and
and
nop
add
jecxz
xchg
dec
jno
jb
push
add
pop
iret
xchg
push
sahf
data16
dec
mov
push
push
inc
fisttpl
dec
sbb
out
dec
jo
mov
adc
testl
pop
lret
das
ss
push
dec
or
jb
int3
negb
cvtdq2ps
outsb
icebp
fimull
or
xor
or
dec
mov
jnp
xchg
jge
or
xor
dec
xor
sbb
xchg
dec
jp
mov
pop
pop
jo
mov
xorl
test
out
das
sub
clc
je
dec
mov
cmp
jmp
dec
xor
addr16
rcrb
fisubl
mov
inc
dec
iret
mov
mov
sub
xor
fmuls
inc
add
js
gs
cli
mov
inc
or
mov
mov
mov
cmp
and
add
mov
sti
movsb
add
add
fisttpl
clc
mov
int3
fstpt
out
push
fimuls
sbbb
xchg
xchg
sbb
loopne
shlb
stos
int
neg
stc
or
or
outsb
cmp
dec
dec
cmp
sub
dec
push
call
rorb
xchg
pop
mov
dec
add
jno
dec
mov
push
ret
or
xchg
push
loopne
push
dec
stc
outsb
dec
dec
xchg
push
ja
fisubs
cmc
ds
dec
or
mov
dec
sub
fs
cmp
mov
std
mov
filds
xchg
in
mov
mov
out
mov
jg
test
mov
xor
lds
repz
jbe
or
lahf
or
aaa
cltd
out
roll
ret
mov
and
ret
mov
mov
call
iret
mov
or
push
mov
adc
inc
in
test
jnp
dec
aas
cmpsb
gs
jl
inc
hlt
popf
ret
xor
sbb
and
pop
test
cwtl
mov
loope
sub
mov
xchg
push
dec
and
cmp
fistpll
dec
outsl
sahf
pop
shrb
pop
cmpsb
fidivl
cmp
jp
dec
mov
dec
inc
div
and
cmovnp
imul
push
adc
add
imulb
lret
dec
jb
leave
jg
dec
test
xchg
xor
or
add
mov
xor
cmovns
ja
into
aam
dec
jmp
mov
stc
xchg
dec
sub
dec
test
cmp
jg
scas
dec
push
fldl
notb
scas
fs
push
cmpsb
jl,pn
push
mov
pop
out
lods
shll
out
sbb
jl
fcmovbe
fwait
inc
lock
inc
out
js
or
lahf
das
jl
push
fsts
inc
inc
push
test
push
jbe
test
inc
aaa
aam
rol
jl
cmc
push
insb
pop
icebp
scas
dec
add
sarl
imul
xor
push
jle
push
imul
clc
cmc
xor
push
mov
loopne
sbb
xor
inc
enter
inc
push
int
jle,pn
and
inc
sar
dec
and
cmpsl
jmp
lods
cmp
push
hlt
xor
adc
pop
stos
inc
inc
xchg
mov
cs
xor
push
call
out
fdivrl
or
push
lret
pushf
dec
xchg
push
jl
test
mov
lods
inc
sub
cmp
mov
rcll
xchg
es
pop
mov
lea
jl
lcall
scas
push
movsl
sub
flds
sub
add
mov
ds
mov
in
xchg
faddl
std
lret
ss
xor
in
cmp
loope
pop
ds
push
mov
sti
ret
push
movl
ret
lret
insw
imul
inc
ds
and
mov
cmp
inc
dec
cmpsb
and
jl
jp
cmpsl
inc
hlt
or
push
cmp
iret
arpl
xchg
insl
mov
or
fdiv
rol
pop
flds
sub
cs
xor
fucomip
imul
popf
dec
scas
movsl
mov
adc
cmp
dec
xor
mov
cmp
aas
push
cmp
inc
stos
xchg
mov
sbb
sbb
hlt
sbb
int3
mov
xchg
dec
xchg
icebp
or
arpl
xor
or
in
sbb
lret
adc
fs
dec
mov
cmpb
leave
pop
nopl
ficomps
xchg
sbb
pop
push
out
movsl
cmp
sbb
test
das
mov
add
out
pop
xchg
lock
and
daa
test
sahf
push
loopne
xor
xlat
lock
jae
jle
div
jl
ficoms
pop
outsl
jl
test
movnti
add
sti
jle
mov
and
adc
mov
jl
and
dec
in
ss
je
in
adcl
aas
adc
jle
cltd
imul
les
jle
xchg
xchg
jp
pop
test
and
repnz
or
pushf
or
push
sbb
dec
mov
sbb
jnp
test
jns
mov
xchg
mov
out
dec
lods
cmp
mov
xor
in
hlt
mov
mov
dec
push
int3
pop
testl
inc
dec
ja
jbe
jl
cs
dec
push
mov
insb
sahf
push
pop
dec
add
popa
cmpsb
in
adc
dec
aad
adcb
clc
sahf
dec
fisttpll
rclb
pop
ret
dec
je
fcoml
cmp
frstor
mov
pop
jp
in
pop
test
dec
insl
xor
push
loopne
fisttpl
stos
fildll
andb
push
jg
ds
mov
dec
dec
dec
and
lods
rsqrtps
dec
inc
subl
inc
fdivrs
enter
push
dec
adc
jb
pop
lods
and
xor
pop
cmp
xchg
mov
hlt
mov
ds
ja
sub
push
push
fidivrs
jg
mov
inc
jg,pn
xor
push
mov
or
out
and
pop
xchg
imul
scas
jle
cmp
mov
dec
jae
jg
test
jecxz
dec
ret
sub
lock
xchg
imul
sbb
les
int3
aad
push
test
pop
adc
lea
in
add
into
pop
push
or
add
jno
adc
add
inc
mov
dec
lret
push
or
mov
dec
push
dec
pop
insb
mov
stos
cmpb
and
fwait
push
dec
jo
sub
pop
pop
sti
dec
cld
into
mov
mov
pushf
add
jp
fidivs
and
test
ret
push
pop
and
bound
filds
xchg
jo
sbb
sbb
inc
aad
cmp
mov
aaa
dec
mov
loopne
mov
dec
sub
push
adc
push
cmp
into
or
ljmp
dec
in
adc
lods
sbb
mov
mov
or
hlt
mov
cli
sbb
iret
dec
gs
imul
inc
sbb
outsb
pop
jg
imul
iret
insl
inc
sbb
popa
dec
pushf
ret
insb
pusha
mov
or
pop
sub
cs
jp
dec
push
insl
adc
inc
dec
rolb
pop
ror
dec
mov
addr16
into
das
mov
mov
dec
pop
and
dec
jno
mov
test
dec
xor
sub
sbb
dec
outsb
je
dec
iret
mov
ljmp
dec
xor
lds
push
sti
and
push
jge
sbb
nop
imul
push
bound
das
div
cmp
popa
push
repz
arpl
lret
xor
rolw
mov
call
rorl
sarl
dec
bound
test
mov
sahf
pcmpeqd
cmp
mov
jge
pusha
jo
cmc
push
sbb
dec
xlat
sbb
into
aaa
push
jnp
rorl
push
pop
xchg
and
out
std
inc
loop
dec
pop
adc
adc
fcoml
ja
aaa
cltd
and
inc
mov
in
cmp
sarl
pop
inc
dec
rolb
cmp
dec
movsb
adc
mov
sbb
inc
aaa
jecxz
mov
ja
aad
jb
add
sbb
inc
cmp
sub
in
cmp
xchg
stc
imul
push
dec
inc
fistpl
cmpsb
gs
dec
sub
stos
lcall
adc
inc
jne
or
rorl
mov
jo
xor
orps
inc
add
sti
test
pop
mov
cmp
mov
jle
in
lods
rcr
add
mov
mov
fimuls
sub
adc
pop
cmpsb
and
cmp
adc
sub
cmp
bound
cmp
jl
jno
pop
sbb
and
xlat
fildll
jl
mov
outsl
push
aam
scas
cmpsl
mov
and
ja
xlat
flds
lods
mov
jle
lods
and
cld
ror
fiadds
lcall
and
addr16
mov
push
ret
xchg
les
iret
testb
push
push
or
jmp
mov
or
stc
or
cmp
push
sub
dec
popf
jl
sbb
add
out
fbld
jns
adcb
dec
inc
icebp
cmp
inc
movsb
pop
mov
mov
aaa
outsb
dec
lock
mov
xchg
in
cld
add
or
or
xor
xor
out
minps
cmpsl
mov
mov
mov
xor
jle
idiv
sub
push
arpl
dec
jb
mov
push
in
adc
lret
xor
xor
xor
je
incl
rcl
bnd
dec
cwtl
sar
mov
fisttpl
sbb
dec
mov
adc
mov
inc
dec
jo
fadds
xor
sub
enter
ss
pop
dec
xchg
pop
jo
mul
jl
dec
jbe
mov
xor
mov
mov
or
and
mov
movsl
mov
rcll
cmc
xor
sub
xor
idivb
sbb
dec
lcall
dec
popf
or
xchg
dec
pop
jns
dec
xchg
xor
sub
lds
pop
pop
cmp
xchg
shrl
dec
insb
aam
ja
mov
imul
push
dec
jg
aaa
in
push
sti
mov
fs
mov
fimuls
mov
cmp
jl
fsts
icebp
mov
mov
jl
xchg
push
jp,pt
stos
adc
adc
shrb
jbe
push
out
mov
jle
fwait
dec
xor
xlat
jbe
inc
jl
xchg
inc
jmp
bound
movsl
pop
lcall
jae
xchg
adc
cld
test
ret
mov
daa
inc
aas
push
and
jbe
dec
jle
push
push
aad
push
pop
daa
and
into
icebp
lods
cmp
add
in
jmp
push
notl
scas
outsb
mov
fnsave
insl
xor
mov
mov
iret
adc
pop
stc
cmp
cs
xlat
jg
dec
inc
mov
jbe
lret
pop
outsl
idivl
sbb
aas
fs
andb
cmc
inc
movsl
repnz
jg
loopne
and
aad
leave
mov
dec
xchg
out
movsl
adc
cmp
testl
mov
mov
cmpsb
pusha
sbb
mov
pusha
movsb
pop
mov
pop
add
dec
cmp
jle
jns
mov
iret
enter
mov
out
insb
inc
jae
and
call
xor
aas
rcrl
outsl
jecxz
aaa
mov
imul
adc
sbb
push
out
mov
jl
mov
test
cld
sbb
push
push
pop
rcrb
inc
jl
mov
inc
aaa
call
push
push
jl
jge
repnz
xchg
ret
mov
cmp
xor
push
jmp
pusha
jg
xor
dec
cmp
or
and
cmc
scas
pop
sbb
cmp
xchg
cmp
dec
mov
and
push
rcll
and
insl
inc
xchg
dec
popa
pushf
test
xor
cmpsb
pop
popf
movsb
add
xchg
pop
jge
mov
pop
mov
lock
inc
fsubl
jns
insb
lcall
push
mov
or
add
push
fimuls
scas
mov
iret
ficompl
outsl
pop
and
fcompl
xchg
aas
lods
jle
loop
xlat
push
xor
xor
iret
and
xor
aaa
or
adc
sub
xchg
imul
push
sub
lods
add
inc
ret
lods
inc
xchg
inc
xchg
jae
aad
pop
adc
scas
jl
je
fidivs
xchg
out
adc
jle
sub
adc
je
stos
lods
in
ss
inc
fmuls
inc
mov
mov
pop
mov
movsb
lret
push
inc
into
loopne
fisubl
fsubl
pop
pop
loope
mov
jl
test
push
mov
lret
sbb
add
jbe
dec
repnz
pop
dec
adcl
push
rcll
add
pop
push
push
sbb
sti
test
push
popf
jns
add
iret
add
add
rcrl
xor
push
mov
movsl
stos
dec
mov
xchg
arpl
dec
loop
icebp
loope
movsb
fstpt
daa
lret
and
sub
mov
xor
leave
inc
fbld
cmp
fcomps
dec
mov
adc
into
cmp
in
sub
outsl
lock
inc
dec
aas
cmp
push
aaa
mov
cmp
cmp
sbb
adc
aaa
fsts
dec
xchg
nop
mov
or
pop
int3
lret
sbb
addl
xlat
xor
adc
pop
lahf
sbb
lahf
js
inc
insl
mov
aaa
dec
leave
and
lret
jmp
testl
fs
lods
out
sub
jo
imul
out
jl
jge
fs
cmp
xchg
call
xchg
push
aaa
sbb
fdivp
sub
add
push
cmp
repz
sub
stos
push
shrl
cld
repz
and
inc
aam
push
jp
adc
ss
inc
dec
dec
pusha
fisttpll
xor
xchg
push
xlat
arpl
mov
inc
inc
mov
data16
stos
ds
push
add
je
sub
mov
shrb
inc
cmp
sub
cmp
xlat
sbb
mov
loopne
xor
cmp
lds
scas
xor
sub
xor
aaa
mov
jbe
pop
mov
pushf
sbb
jl
inc
std
cld
inc
nop
outsb
or
mov
in
mov
inc
repz
cmp
cmpsl
cmc
int
dec
cmp
fsubr
mov
xlat
adc
xchg
mov
dec
mov
outsl
movsl
pop
leave
push
xor
or
jb
cmc
pop
icebp
push
rcrl
outsl
push
mov
mov
idivb
test
sti
mov
imul
arpl
imul
sub
xchg
sbb
iret
icebp
and
dec
loopne
adc
xor
mov
mov
add
aam
dec
lds
cli
loopne
sub
dec
mov
je
mov
cmp
dec
fimuls
lcall
push
out
ret
popa
pop
dec
add
jae
xor
out
mov
dec
mov
pop
cmp
dec
pop
fists
adc
in
xchg
mov
in
dec
imul
push
adc
sbb
push
mov
inc
or
repz
cmp
jmp
mov
and
push
sahf
addr16
jns
imul
dec
mov
fimuls
int
test
sub
xchg
rorb
push
insb
fwait
pop
ret
jle
je
sbb
fs
in
adc
inc
dec
pop
ljmp
sub
rolb
adc
pop
pop
inc
shll
loop
adc
inc
and
pop
dec
xlat
pop
js
aad
in
mov
stos
mov
push
repz
lock
inc
xor
rolb
push
cmpsb
in
mov
dec
fistpl
mov
in
fxch
xchg
popf
cld
dec
xchg
cltd
mov
mov
ret
sbb
mov
lods
sbb
jns
aad
outsl
leave
cmp
and
fimuls
fs
or
out
into
mov
pop
pop
mov
dec
shlb
or
movsl
fstl
cmpsl
scas
je
cmp
sbb
inc
pusha
dec
imul
pop
mov
and
xor
dec
mov
bound
add
sub
lock
push
test
inc
or
in
out
add
add
outsl
movsb
dec
mov
push
add
iret
inc
aad
das
or
xor
xchg
sbb
cmc
xor
scas
cmp
loop
iret
cld
cmp
add
and
clc
scas
fwait
imul
mov
out
bound
mov
mov
inc
mov
mov
call
fsubl
xchg
inc
pop
leave
mov
or
add
xchg
daa
dec
aam
sub
lret
dec
fwait
mov
pop
mov
jno
cli
iret
repnz
inc
push
orl
insl
rcll
pop
andb
dec
cmp
dec
shll
ret
sub
dec
pop
das
and
dec
xor
out
mov
jmp
and
xchg
aad
jae
dec
add
rolb
fimuls
fildl
mov
mov
cmp
mov
and
and
inc
cmp
and
lret
andl
out
sub
test
push
cmp
fwait
sbbb
cmc
adc
loope
push
or
jnp
xor
enter
int
movsl
sarl
stos
dec
xor
xchg
outsl
repz
push
cli
xchg
sub
inc
xor
stc
xlat
xor
sub
into
stos
pop
jmp
mov
xor
aas
mov
hlt
scas
pop
fmul
xor
orb
cltd
mov
dec
or
lock
sbb
je
dec
nop
mov
dec
sahf
sub
dec
add
stc
push
push
lods
jbe
dec
scas
jg
mov
mov
xor
jns
cwtl
dec
int3
rorl
or
test
les
gs
ljmp
mov
mov
lods
sbb
stc
dec
pop
xchg
push
mov
add
or
js
fs
jle
shlb
adc
stos
inc
pop
dec
inc
cmc
mov
popa
cmp
jle
negl
daa
xor
jp
lahf
aad
in
mov
hlt
rorb
mov
rcll
cs
repnz
jae
dec
nop
push
fistpl
divl
sbb
dec
mov
pop
dec
orb
mov
insb
pop
testl
sub
xlat
dec
jl
sub
mov
push
push
sahf
add
xor
mov
les
cmpsb
push
and
pop
jbe
and
lods
push
daa
aas
cmc
jl
mov
popa
or
dec
jg
fmull
jle
adc
pop
cmp
test
pop
lret
sbb
mov
stos
jbe
ret
js
sbb
outsl
lcall
dec
fisubl
leave
jns
sub
js
or
push
cltd
shl
mov
push
lahf
push
jns
xchg
push
in
out
or
and
loop
mov
test
mov
loop
dec
repz
pop
mov
bound
leave
sub
xchg
dec
push
testl
movsb
and
dec
por
lret
loop
jge
mov
and
cli
clc
les
repz
cmp
cmp
xchg
jae
xchg
mov
dec
imul
adc
xchg
mov
in
xchg
adc
cmpsb
add
insb
popf
jnp
jne
mov
sbb
push
dec
jmp
mov
icebp
mov
mov
xor
pop
pop
dec
imul
cmp
pop
addr16
mov
mov
rorb
push
cltd
or
test
or
aad
sub
xor
mov
jle
outsb
repnz
divl
arpl
movsl
addb
cmp
inc
lods
or
sub
rcl
ret
pop
add
aaa
dec
mov
and
xor
pushf
jne
dec
icebp
ficompl
shrl
inc
mov
dec
jl
into
adc
repz
jo
push
mov
lcall
int
mov
cmpsl
enter
icebp
xor
xchg
xlat
add
add
sub
xchg
pop
nop
xchg
xlat
aam
int3
jl
inc
jae
xchg
iret
mov
subb
inc
xor
add
pusha
sbb
out
fimull
pop
pop
in
movsl
jmp
mov
sub
pop
movsb
icebp
cmp
mov
sbb
pop
dec
or
adc
add
sarl
dec
xchg
rorl
dec
xlat
inc
mov
mov
and
out
aas
cwtl
xor
dec
mov
in
dec
jg
shl
sar
daa
push
cld
lahf
sbb
scas
mov
fs
mov
aad
mov
repnz
lods
jns
es
jo
cmp
mov
add
mov
cmp
jnp
cmovno
pop
scas
lods
inc
icebp
lcall
into
adc
push
dec
in
orl
dec
mov
addl
loopne
mov
push
xchg
ficoml
ret
rolb
scas
js
sub
not
notb
jle
mov
push
xchg
push
test
lret
inc
dec
cli
pavgw
movsb
fdiv
popf
and
mov
nop
das
adc
movsb
push
ss
dec
push
inc
aad
scas
and
and
sbb
lods
cmp
dec
cmp
push
cs
ds
jle
mov
movsb
push
mov
lds
lret
imul
mov
iret
cmp
adc
mov
mov
popa
sub
push
daa
dec
jecxz
xor
mov
div
sbb
mov
iret
punpcklqdq
fildll
addr16
das
outsl
add
pop
dec
daa
lods
out
jbe
movsb
adc
cltd
fadds
and
inc
sbb
inc
inc
mov
cmpl
sub
daa
fcomi
in
lret
mov
mov
outsl
xchg
adc
jbe
jle
in
aam
adc
addr16
sbb
jo
out
mov
popa
mov
adc
add
js
in
adc
sbb
icebp
mov
adc
push
or
je
cmp
daa
pop
push
ficoms
xchg
pop
or
xor
xlat
dec
adc
sub
pop
mov
cmp
push
lock
mov
int
dec
out
mov
int3
enter
push
int
xchg
jmp
sub
cmp
das
dec
cmpsl
cmp
mov
jne
push
jp
idiv
psubsw
adc
mov
stos
test
push
lods
xchg
sbb
mov
dec
and
sub
add
rcrl
ds
jl
push
pop
data16
mov
int
mov
ret
cmp
xchg
pop
cmp
mov
dec
shrb
pop
out
out
dec
bound
aas
stos
push
subl
outsb
and
out
xorb
aaa
sub
dec
outsl
sbb
nop
mov
test
lods
jle
aas
add
jge
or
dec
mov
jle,pt
xchg
fldt
xor
data16
jmp
dec
std
xchg
daa
jp
or
out
lods
cli
stc
rorl
incb
je
mov
pop
adc
xchg
dec
pop
mov
add
mov
jmp
push
popf
sahf
mov
jle
xor
mov
jo
inc
or
inc
jp
and
nop
mov
aas
dec
outsb
cmp
dec
bound
fs
pop
cmpsb
or
lcall
xor
shr
cmovle
or
cmpsb
dec
pop
mov
imul
or
and
push
das
fstps
or
orb
out
cs
sbb
pop
shll
dec
stos
mov
pop
cmpsb
push
es
pop
lods
cmp
add
jns
orl
push
cmc
movsb
les
imul
nop
and
ds
call
push
cmc
popf
test
push
sub
dec
cmpsl
dec
push
je
dec
push
in
mov
cli
dec
rorb
mov
mov
imul
add
daa
insb
mov
jle
fsubl
inc
pop
and
cmp
enter
jle
add
shrb
sarw
inc
inc
bound
movsb
aam
fldt
pushf
cmp
mov
sub
sub
in
cmp
nop
scas
sar
push
pop
add
sti
jmp
push
mov
into
mov
ficoml
mov
cld
pop
arpl
aam
cmp
shl
sbb
negl
pusha
inc
fnsave
movl
mov
inc
andl
ret
sti
mov
shrl
iret
leave
xchg
lea
movsl
dec
stc
pop
outsb
inc
dec
cmpsl
jg
jg
cmp
and
lret
pop
cs
push
cmp
pushl
pop
lret
xchg
ja
mov
into
add
mov
or
iret
jnp
xor
lods
jecxz
dec
xchg
mov
outsl
adc
into
sub
xor
les
mov
loop
addr16
mov
jo
lcall
fwait
in
pop
mov
into
add
xchg
pop
dec
and
mov
imul
fimull
arpl
push
xchg
shll
lds
ds
dec
frstor
xchg
negl
dec
jle
cmp
dec
sbb
push
jmp
test
mov
dec
push
or
cmpsb
jle
pop
push
add
je
lock
insb
xchg
xor
insl
out
sbb
mov
cmp
adc
dec
and
or
adc
dec
push
stos
sbb
jle
dec
sbb
mov
nop
inc
xor
or
mov
lock
push
mov
fsubrp
lret
push
adc
ret
outsb
cmp
mov
inc
mov
push
dec
das
in
aaa
jbe
aam
cmpl
dec
lret
sbb
and
cmpsl
sbb
push
rorl
bound
dec
ret
add
icebp
mov
jp
dec
fdivrl
out
ja
push
adc
js
out
mov
inc
lahf
dec
fcmovu
jl
pop
jmp
fcmovne
cmc
dec
push
std
sar
push
pusha
test
mov
xchg
ja
mov
inc
aam
jmp
jae
aad
pop
mov
dec
jnp
sbb
fmuls
int3
cmpsb
adc
cltd
push
insl
add
lcall
xchg
aas
or
pop
in
xor
dec
out
or
aam
scas
test
inc
movsb
mov
mov
add
or
fs
hlt
inc
and
mov
loope
sarb
inc
pop
movb
and
dec
fprem
xchg
cmp
mov
in
adc
xchg
fidivl
fisttps
jns
bound
push
aaa
push
add
lea
xchg
jbe
sub
mov
mov
inc
nop/reserved
sbb
lahf
jl
xor
iret
sub
notl
in
stc
lock
inc
push
sub
cmp
jl
xor
inc
fdivs
ror
adc
pop
jns
or
jle
pushf
fldt
or
fistl
lret
pusha
push
push
mov
pop
add
xor
mov
fadds
inc
aaa
mov
movhps
or
movsl
nop
je
or
sahf
aad
jg
mov
push
inc
xor
pop
fs
push
scas
lock
not
and
daa
xchg
dec
loope
lret
or
test
xchg
ljmp
push
push
std
mov
inc
inc
add
jne
sub
js
pop
adc
mov
pop
cmc
xchg
stc
cmp
ret
stos
pop
outsl
mov
inc
mov
inc
push
aas
daa
rclb
sub
sbb
test
dec
cmp
mov
mov
xlat
jns
stos
xchg
cmpb
push
mov
push
lods
mov
inc
test
add
jmp
xor
mov
or
lds
leave
out
fstpt
sub
mov
sbb
push
add
xchg
sub
loope
push
xchg
cmp
jl
data16
clc
mov
add
pop
dec
out
je
nop
pop
pop
mov
jno
aas
packssdw
push
popf
sbb
dec
faddl
or
std
add
cli
mov
pop
into
push
jle
add
lods
or
xchg
out
xor
leave
addr16
dec
arpl
lea
xlat
inc
or
insb
push
push
loopne
cltd
inc
fucom
jle
jecxz
dec
xor
jo
mov
cmp
shll
pusha
adc
iret
lds
icebp
lcall
div
dec
daa
ficomps
and
repnz
out
sahf
fwait
jno
test
pop
lcall
adc
aam
cmp
sbb
and
cli
dec
jg
pop
push
sarb
icebp
jecxz
xchg
adc
cmp
and
pop
fcmovne
mov
xor
xchg
sbb
mov
enter
dec
cmp
jge
or
xchg
push
scas
insb
mov
orl
dec
stos
push
inc
push
cmp
pushf
stc
rcr
xor
xlat
dec
inc
dec
sti
xor
ss
ret
andl
lods
shrl
mov
dec
xchg
sbb
pushf
stos
and
dec
cmp
push
sbb
and
jne
sarb
dec
xchg
cwtl
fnsave
add
sahf
aam
xlat
mov
aas
adc
pop
sub
xor
xor
mov
dec
mov
rcr
dec
xchg
les
subl
call
cmpsb
mov
sti
in
std
icebp
stos
dec
pop
mov
xor
fisubl
push
cmp
dec
mov
sbbb
lods
xor
push
sti
dec
xor
pop
sub
inc
rcrb
and
sahf
stos
xor
and
sbb
hlt
jle
and
out
dec
xor
repz
test
mov
jg
insl
dec
adc
pop
xchg
cltd
test
sarb
and
mov
push
adc
call
push
cld
addr16
mov
test
push
push
xor
stos
ja
cmp
inc
sub
and
dec
lret
sub
dec
xor
in
adc
push
fldt
leave
sbb
dec
out
xor
es
xor
xchg
sub
mov
sbb
cmp
iret
push
mov
fstpt
insl
dec
push
xchg
mov
out
inc
pop
adc
xchg
xchg
in
inc
in
addr16
cmp
dec
cltd
mov
popa
mov
jp
adc
xorl
push
dec
lret
mov
fimuls
xor
stos
add
jns
ja
in
jo
in
or
jb
dec
cmp
dec
xchg
mov
add
pusha
dec
jno
in
or
into
jg
leave
ds
hlt
jle
pop
dec
cs
mov
pop
xor
xchg
xchg
and
jge
xchg
movsb
lcall
imul
sbb
inc
cmpsb
lret
dec
leave
cltd
xchg
jecxz
test
dec
fimuls
ss
scas
cmp
inc
xchg
and
cmp
jge
into
addl
das
jne
inc
jb
shlb
dec
dec
mov
cmp
negl
loope
inc
out
push
sub
movsb
mov
cmpsb
ss
dec
dec
cmp
sbb
inc
xchg
popf
ds
push
mov
mov
adc
cs
add
cmp
adc
jo
aaa
jg
dec
xchg
mov
jnp
ret
call
lea
mov
and
mov
loope
xchg
pop
jl
dec
test
ret
xchg
fmull
adc
stc
rclb
pop
cmp
xchg
imul
push
movsl
xchg
shr
sub
adc
je
mov
cmp
mov
jle
icebp
insb
rorb
pop
rclb
xchg
stos
jbe,pn
icebp
adc
cmp
pop
dec
add
add
lret
pusha
sbb
cs
jge
out
dec
mov
int3
mov
and
mov
scas
out
mov
iret
xor
pushf
sub
jl
cld
iret
sbb
bound
scas
int
repz
add
sub
rolb
lret
outsl
das
push
aad
movsl
dec
repnz
sbb
fistpl
xor
and
xor
mov
push
or
jno
dec
je
mov
cmp
xor
loope
shlb
daa
xchg
data16
xchg
jne
sbb
inc
xor
testb
sub
dec
dec
outsl
in
out
loop
stos
pop
outsb
push
dec
dec
sbb
pop
jecxz
sti
dec
stc
enter
shrl
mov
and
mov
movq
inc
xor
cltd
xor
mov
in
sbb
lret
jecxz
sarl
xor
xor
inc
push
repz
or
jae
lret
xchg
dec
add
fisubl
lahf
push
dec
out
cmp
stos
leavew
push
xor
inc
adc
inc
test
lods
push
sti
outsb
dec
adc
sub
insl
dec
aam
mov
sbb
lods
pop
ds
inc
inc
jge
pushf
sbb
pop
or
dec
or
jo
dec
mov
mov
jecxz
ljmp
mov
add
loop
jnp
out
pop
mov
lods
and
outsb
mov
imul
stc
mov
loopne
push
outsb
push
xlat
imulb
push
rcr
test
xlat
cltd
hlt
mov
sbb
jo
out
pop
xchg
stc
dec
mov
mov
push
xchg
enter
jmp
dec
adc
loopne
shll
jo
sbb
xchg
inc
stos
imul
outsb
inc
adcl
jb
cmp
mov
mov
pop
testb
xchg
fnstenv
std
push
div
dec
inc
test
adc
dec
orb
or
mov
ljmp
loope
pop
repz
mov
loop
and
adc
hlt
roll
dec
int
jbe
adc
push
dec
jmp
sub
jno
pop
jl
loop
testb
xlat
nop
into
stc
jae
pop
insb
jo
dec
orb
jmp
dec
inc
xor
jle
sbbl
dec
push
test
xor
sub
js
icebp
mov
sahf
jns
mov
mov
rorl
push
add
push
fisubrs
jp,pn
out
and
jle
adc
and
mov
or
fsubs
sbb
int
cmpsb
cmp
cmp
mov
xchg
xor
roll
aas
mov
fbld
adc
dec
test
or
mov
dec
aas
jmp
loop
sbb
dec
sbb
add
stos
lods
sbb
add
out
mov
xor
leave
mov
fadds
in
and
outsb
aam
mov
je
lret
test
mov
adc
das
cli
dec
and
lcall
mov
shll
fwait
aas
dec
test
arpl
pop
sub
lods
or
mov
lea
mov
push
mov
inc
in
rclb
nop
mov
into
lcall
aas
lahf
rolb
aad
cmpsl
cmp
pop
xor
cld
lcall
lds
push
sti
cmpl
and
cmp
push
dec
sbbb
arpl
sub
sbb
and
inc
test
cltd
testl
cmp
dec
inc
sbb
xchg
int3
adc
pop
test
pusha
or
dec
in
dec
push
or
jmp
dec
lods
jg
mov
dec
das
pop
dec
pop
push
adc
pop
inc
and
clc
push
dec
add
cwtl
cmp
fimuls
iret
mov
packsswb
dec
fadd
out
ror
fiaddl
dec
pop
mov
daa
loopne
sbb
adc
pop
insb
test
cmpsb
adc
dec
fidivrs
lcall
dec
movd
pusha
pop
enter
fists
jl
inc
or
in
test
jg
jecxz
ss
imul
and
mov
lahf
inc
outsl
icebp
aam
lret
pop
pop
mov
scas
jno
adc
xchg
pop
push
cld
cmp
lcall
es
repnz
les
out
add
push
or
jle
add
cli
pop
loopne
sub
icebp
inc
aas
push
xlat
loop
ror
mov
insl
xchg
mov
lods
sub
movd
in
xor
icebp
sub
add
enter
scas
ss
sti
imul
mov
xchg
aas
or
hlt
jle
stc
or
bound
negb
mov
push
mov
or
pop
notb
hlt
decl
pop
outsb
sbb
ficompl
mov
decb
inc
out
inc
push
or
mov
idivb
test
cmp
cld
inc
or
xchg
popf
imul
in
pusha
cmovle
cmpsl
push
lea
sahf
loopne
push
push
sbb
insl
jl
mov
cmpsl
orb
xor
sub
dec
out
jg
xchg
mov
pop
popa
push
jle
push
jmp
call
popa
in
insb
ljmp
mov
dec
mov
popf
sbb
daa
ja
stos
pop
cmpsb
fprem
add
iret
mov
sahf
int3
sub
jae
stos
pop
shlb
jnp
mov
xchg
scas
xor
stos
mov
aad
mov
mov
mov
repnz
dec
pop
mov
push
cs
inc
dec
mov
scas
dec
andl
inc
mov
jle
adc
movl
or
rcll
imul
dec
xor
sub
les
imul
mov
and
dec
out
sbb
in
outsl
xor
add
in
jle,pt
dec
push
es
clc
inc
mov
in
push
dec
fisubs
out
subb
push
lcall
mov
pop
idivb
call
mov
fisubrs
and
mov
rolb
shlb
adc
insb
jp
daa
jl
loope
inc
aad
dec
das
scas
hlt
mull
sub
mov
push
pop
dec
mov
fs
sbb
loopne
mov
jns
dec
scas
int3
leave
sbb
inc
call
mov
inc
mov
pop
lret
shrb
mov
jmp
sbb
aas
cmp
adc
pop
dec
dec
and
jbe
sahf
dec
mov
aaa
inc
mov
mov
stos
mov
adc
fldenv
or
scas
rcll
cmp
ds
je
sbb
adc
or
or
call
push
mov
mov
cmp
ja
mov
xchg
xor
cli
jno
fpatan
xor
xor
dec
dec
or
aam
push
into
sbb
dec
loope
scas
scas
andb
dec
movsb
cmp
mov
outsl
push
dec
nop
in
inc
call
sub
out
and
add
dec
out
push
cmpsb
jne
shl
dec
in
push
ss
cwtl
cmp
pop
fsubl
aas
sbb
mov
xlat
mov
and
pop
mov
idiv
add
icebp
push
pop
or
aas
div
insl
les
jl
lret
xchg
mov
jg
pop
adc
stc
syscall
ljmp
lea
fsubp
inc
out
es
mov
cmp
dec
arpl
sbb
lret
pop
inc
lret
cmc
xchg
enter
inc
outsb
jl
add
shl
cmc
xchg
or
fildll
pop
adc
movsl
mov
xchg
push
mov
rcrb
xchg
out
decl
movsl
mov
scas
aam
xor
push
nop
mov
sub
data16
mov
sub
aaa
sbb
xor
popf
jnp
je
cmpsl
icebp
stos
dec
aam
pop
push
inc
and
repz
cmp
and
jb
js
add
inc
out
inc
das
jl
xor
test
mov
clc
jle
xchg
mov
inc
ret
pop
mov
pop
jg
add
xlat
xchg
mov
jg
lods
jb
or
test
jp
jmp
or
cs
insl
add
push
dec
aam
inc
lock
mov
and
mov
dec
push
push
mov
cmp
mov
fstl
ds
fcoml
and
mov
mov
inc
and
gs
or
lds
out
outsl
xchg
dec
in
popa
pusha
jns
cwtl
sub
xchg
dec
testl
jmp
adc
rol
movsb
in
nop
push
outsb
fwait
out
popl
cld
adc
xorl
fsts
je
xchg
push
mov
outsl
les
dec
scas
jae
and
push
stc
pop
xchg
lds
imul
dec
lea
push
stc
dec
shll
xchg
cmp
fcomps
pop
push
ret
dec
mov
imul
pop
lods
pop
aaa
dec
add
xchg
fsts
cli
push
sub
cmp
mov
fcmovu
cwtl
xchg
mov
orl
push
jmp
std
cld
mov
jne
pop
pop
ljmp
cmpsb
outsb
mov
icebp
and
xchg
dec
push
mov
rcrb
ret
or
cmp
movsl
dec
lea
jnp
mov
fxch
push
dec
ss
pushf
sbb
repnz
in
les
sub
pop
dec
fmull
mov
gs
rorl
mov
pop
nop
or
jge
inc
aad
xchg
dec
movsl
pcmpgtb
popa
xor
iret
pop
lods
pop
das
and
jle
fnstenv
dec
dec
pop
enter
lods
ja
in
dec
aaa
das
jle
mov
dec
dec
jg
int3
lods
fcmovu
push
push
jle
xchg
jno
cmpsl
add
fcoml
cwtl
and
cmp
je
inc
int
and
loop
dec
jge
lods
push
jle
movsb
mov
outsb
stos
icebp
mov
adc
test
dec
mov
jge
fnsave
cmc
filds
cmp
in
lods
jnp
ds
mov
addr16
push
sarb
sbb
orb
dec
movsl
mov
mov
sahf
mov
imul
xchg
and
insb
inc
xor
enter
int3
gs
pop
jns
in
pop
dec
xchg
lock
lea
push
jno
repnz
and
scas
push
aaa
pop
int
pop
mov
in
jl
mov
pop
shl
push
lret
das
lds
jae
xor
sub
push
sub
into
cmp
call
pop
jns
daa
popl
jle
scas
push
sahf
add
aas
xor
mov
rcr
frstor
inc
ss
roll
add
xor
sarb
push
xorb
or
fnstenv
mov
inc
fwait
xchg
dec
cmp
shlb
xchg
and
fmul
jbe
or
out
xchg
mulb
lahf
inc
ljmp
xchg
jb
dec
cmc
jmp
mov
sub
inc
mov
and
pop
sub
push
rorl
pop
xchg
xor
int3
inc
xchg
scas
lock
test
sub
lds
pop
xchg
pop
push
pop
mov
jl
jmp
mov
scas
ficomps
mov
in
jne
push
jae
mov
adc
out
push
mov
mov
xchg
xlat
adc
outsl
xor
sahf
repz
je
cs
sbb
leave
jp
mov
adc
or
sub
sub
aas
aad
cmp
sahf
bound
test
jp
pop
cltd
mov
repz
dec
mov
cmp
xor
mov
add
xor
bound
sub
sbb
fsubrs
stos
dec
pusha
adc
rcl
icebp
cmp
dec
out
jmp
lcall
xchg
cmpsb
or
cmc
push
cmp
inc
push
outsl
out
sbb
lods
test
dec
xor
notb
ljmp
mov
cld
and
dec
std
xchg
bound
or
movsl
rorb
xchg
enter
jle
sahf
sbb
sub
movsb
or
pop
cmp
cmc
pop
xchg
sbb
xchg
imulb
jl
movsb
adc
xlat
push
cmp
pop
jg
cmp
clc
sub
mov
inc
pop
div
out
jl
fwait
cwtl
mov
mov
cmp
into
insl
jl
sbb
adc
cs
lock
sub
and
mov
int3
push
push
lea
jnp
sub
lahf
push
divb
cli
or
sub
push
dec
jnp
mov
fildll
sbb
xor
lods
cmp
sbb
in
jns
loope
mov
roll
or
dec
pop
lea
movsl
das
inc
packsswb
into
lret
inc
das
sbb
mov
rcrl
ja
xchg
ljmp
dec
sub
mov
mov
lock
decb
fiaddl
shl
hlt
inc
dec
or
push
pop
imul
pop
xchg
mov
das
or
xor
out
ret
dec
lock
jne
aad
sub
cwtl
dec
lahf
in
mov
mov
mov
enter
push
out
dec
arpl
inc
sbb
dec
pop
inc
mov
into
aad
mov
imul
mov
add
dec
ja
lahf
mov
es
mov
lock
aaa
ds
cwtl
inc
jnp
mov
lds
hlt
adc
push
je
outsl
stos
arpl
xchg
mov
test
sbb
in
dec
lock
cmp
dec
mov
push
cmc
imul
dec
xor
dec
bswap
sub
std
mov
push
shrl
push
jl
pop
lahf
sbb
cmpsb
cs
cs
popf
adc
repnz
repz
lds
xchg
cmc
adc
aam
rol
ss
jle
sub
rcll
and
add
or
cmp
or
enter
fstpl
popf
stos
cmp
sbb
popa
jmp
dec
xchg
int3
sub
push
pop
arpl
dec
dec
mov
inc
into
test
aam
or
stos
shlb
dec
push
in
cwtl
mov
jl
mov
shr
add
pop
out
lock
loop
fiaddl
popa
imul
sub
dec
pop
mov
insl
sbb
mov
xor
icebp
add
dec
dec
and
xorb
adc
mov
ret
fidivrs
rorl
ret
sub
fwait
negb
dec
add
fidivs
jo
lret
cmp
dec
dec
mov
outsb
data16
pop
je
sub
les
mov
dec
cmp
jl
test
pop
pop
neg
jbe
dec
inc
lods
lcall
outsl
dec
xchg
cmpsl
pop
or
es
movsb
dec
mov
ficomps
pusha
jno
push
inc
or
gs
xchg
ficompl
outsb
ds
ljmp
repnz
cld
or
inc
mov
dec
leave
cmp
cmp
mov
rol
jg
xabort
mov
push
lods
iret
loop
dec
inc
lods
push
loopne
jo
mov
arpl
adc
int3
insb
mov
fisubl
lahf
scas
lods
les
aaa
push
adc
dec
inc
push
adc
xor
outsl
pop
fisttps
inc
inc
add
jmp
and
pop
lcall
in
xor
test
inc
insl
insb
imul
adc
adc
pop
not
int3
mov
push
std
out
pop
fs
and
xchg
dec
mov
jecxz
lds
push
push
sar
jle
and
iret
inc
fidivrs
inc
mov
mov
mov
pop
bound
jmp
and
mov
cmp
dec
test
jnp
sub
inc
loope
xchg
aad
mov
jp
jne
or
dec
mov
jle
jp
xchg
sub
das
movsl
push
test
jle
test
cmp
inc
mov
and
jecxz
or
inc
cmp
andb
ret
pop
xchg
cmp
add
push
lret
push
daa
dec
fistpl
dec
xchg
add
jp
mov
mov
mov
into
sbb
dec
cmp
ss
dec
or
repnz
push
cmp
cli
rorl
dec
pxor
dec
jecxz
insb
mov
mov
and
jl
sbb
mov
shlb
mov
and
dec
test
mov
ret
or
lods
xchg
push
sbb
rorl
dec
int3
loopne
mov
js
lods
lock
test
push
pop
in
rcll
dec
push
adc
stos
insb
pop
bound
push
loope
add
mov
call
add
adc
test
xor
lcall
scas
stos
orl
mov
cmp
mov
stc
push
leave
dec
aam
jl
sbb
push
sub
adc
arpl
cltd
int
into
dec
adc
cwtl
enter
dec
xchg
lods
shrb
stc
mov
sub
push
cmpsl
dec
scas
dec
out
pop
mov
sub
dec
ja
fnstenv
in
or
sub
repz
jg
lret
mov
dec
mov
pop
cmp
dec
lahf
in
dec
out
icebp
jae
into
in
jnp
jmp
outsl
lcall
fstpt
test
es
push
mov
push
pop
iret
xor
insb
jle
mov
xor
cmp
and
mov
lret
jmp
and
outsl
and
mov
dec
ret
jae
lods
dec
fadd
mov
enter
pop
fbld
sarl
jae
cmovns
ret
pop
xor
mov
outsl
push
out
std
inc
cli
and
push
dec
stos
jmp
jge
dec
lock
mov
add
out
out
imul
pop
mov
xor
lahf
push
and
push
inc
sub
sbb
sbb
jnp
cmp
inc
aam
popf
jbe
repz
mov
cmp
lahf
mov
jle
in
mov
movsb
stos
mov
icebp
test
rcrb
addr16
outsb
push
push
mov
xchg
dec
in
out
ret
inc
push
repz
push
fcomps
in
cltd
pop
in
orl
inc
inc
jo
mov
dec
andb
out
repz
dec
dec
cmc
mov
test
dec
in
jns
pusha
jnp
femms
outsb
jae
dec
xchg
mov
or
lock
fldl
dec
shlb
jp
iret
incl
xor
add
and
lcall
into
std
test
lds
sbb
add
repz
loop
cmp
aam
lock
negb
mov
lahf
mov
into
in
shlb
add
out
push
mov
add
mov
scas
leave
inc
mov
mov
orl
pop
cld
repnz
pop
ja
adc
push
ss
pop
mov
dec
dec
mov
pop
inc
mov
fcomi
cwtl
dec
and
in
xchg
add
cs
inc
decl
or
xchg
jle
dec
adc
fimull
sti
inc
inc
adc
lods
add
mov
pop
call
dec
xor
test
dec
stos
inc
sbb
test
fsubs
lret
cmc
pop
dec
push
sub
sub
xchg
push
dec
shl
dec
inc
in
dec
mov
clc
decw
lahf
add
xchg
dec
mov
mov
movsb
dec
ror
cmp
lret
jae
mov
dec
shrb
int
dec
out
repnz
or
test
push
divb
ret
sbb
jle
mov
dec
ds
lret
cmp
dec
push
xchg
xchg
xchg
dec
repz
mov
inc
lods
cmp
lahf
xor
dec
xchg
sarb
mov
dec
jbe
addb
imulb
hlt
nop
jb
fidivrl
test
sahf
add
repz
out
scas
add
sub
lret
dec
sub
popaw
cmc
or
aad
fs
xor
cmp
xchg
adc
inc
jl
mov
cmp
dec
pusha
push
shrl
fmulp
adc
outsl
outsb
int3
insb
enter
cmpsl
mov
dec
int
lock
mov
xchg
inc
mov
xchg
lods
lret
andb
lds
pop
push
popf
mov
jae
lods
sub
stos
push
das
mov
pop
xor
jge
inc
gs
push
ror
fisubs
push
xchg
cmc
push
cs
pop
sub
test
cmp
mov
push
xchg
out
aaa
and
adc
dec
data16
in
jmp
dec
mov
xchg
addr16
leave
scas
ds
jle
dec
push
scas
mov
loop
or
out
fs
decb
jle
cmc
rclb
dec
aas
jg
and
mov
jge
push
push
dec
sbb
ja
mov
push
mov
lret
imull
inc
dec
shlb
imul
xchg
xor
and
pop
scas
fbstp
jle
dec
push
mov
decl
vmread
push
and
xor
repz
push
imul
pop
jmp
push
cmp
imul
xchg
jne
stos
sub
mov
leave
xchg
push
xlat
cmc
sub
dec
out
adc
aam
dec
imul
push
push
inc
adc
leave
data16
fldcw
dec
jno
or
subb
xchg
addr16
dec
mov
loopne
sahf
dec
add
test
xchg
rorl
sbb
or
mov
cmc
xchg
jno
adc
pop
aas
jmp
divps
int3
lret
push
jno
mov
inc
add
pushf
push
and
outsb
or
dec
cmpsb
filds
imul
loop
inc
push
dec
jmp
adcb
xchg
pop
ret
das
sbb
push
clc
fs
aad
mov
loopne
pop
mov
jno
out
dec
cmovno
push
imul
sub
leave
xor
ss
add
dec
sbb
sbb
mov
add
insl
sbb
cmp
mov
rorb
jno
sahf
outsl
or
sub
data16
loopne
movsb
call
cli
aas
cmp
lret
fs
je
xor
in
adc
jle
add
add
out
jp
jns
cmp
add
cmp
dec
test
daa
popa
fisttpl
and
sbb
iret
jg
pop
enter
jle
cwtl
sbb
mov
cli
fs
push
jg
sub
pop
stos
mov
ds
insl
test
fdivrl
in
mov
mov
loopne
cld
ds
cmp
icebp
addb
sbb
fnstcw
mov
jae
jge
sub
and
and
mov
adc
stc
je
pusha
pop
mov
and
fnstsw
sbb
sub
push
xchg
add
push
dec
iret
sarl
mov
mov
xor
pop
mov
add
fwait
in
mov
lahf
sti
ss
cmpsl
inc
shlb
mov
hlt
dec
mov
cmp
xor
jns
fstpl
dec
xor
cmpsb
or
xchg
lret
dec
and
in
loop
mov
mov
inc
push
xchg
icebp
xchg
pop
push
xchg
and
mov
les
inc
xor
test
dec
loop
xlat
or
and
sti
nop
xchg
dec
repz
or
pop
mov
sub
in
icebp
and
out
movsb
test
jno
imul
sbb
enter
dec
jb
mov
cmp
leave
fildll
lcall
daa
mov
stc
je
iret
fimull
imul
xchg
mov
dec
jbe
shrl
out
sub
stos
pop
sarb
das
aas
dec
cli
fldl
popf
test
stos
inc
idiv
push
xlat
fists
out
jl
sahf
iret
mov
inc
ljmp
pop
gs
clc
test
cmp
lods
mov
mov
aam
push
inc
jg
jno
lock
inc
jle
xor
ss
lret
and
ja
fwait
shlb
aam
mov
or
lock
fwait
dec
sub
mov
cmpsb
or
loope
int3
inc
popa
je
pop
push
es
jp
test
fidivl
dec
dec
cmp
loopne
ret
in
popf
int3
jbe
push
shlb
repz
insl
jge
mov
sbb
jp
das
fs
jg
add
xchg
mov
inc
and
lret
popf
cmpsb
scas
je
xchg
jle
inc
data16
jno
jp
lret
xchg
arpl
inc
jnp
and
xchg
bound
cmp
lds
jge
push
xchg
xchg
and
int
sbb
cmc
loope
pop
mov
lods
push
add
dec
xchg
push
jno
sub
push
push
xchg
cmpsb
fcmovne
or
fs
mov
push
adcl
sub
sub
or
arpl
and
es
jp
pop
push
cmpsb
ret
pmuludq
pop
add
data16
fiaddl
push
add
jg
mov
hlt
scas
or
popf
cs
mov
mov
mov
push
cmp
mov
jp
outsl
cld
sbb
loope
ja
push
dec
push
sub
cmp
pop
into
notb
mov
nop
call
jp
clc
test
movsl
pop
out
in
xchg
lret
push
sub
ret
out
push
stos
push
andb
xchg
inc
jg
cmpsb
sub
push
sbb
jg
mov
pop
iret
setle
jmp
cmp
push
xchg
sbbl
jb
movsl
jl
push
sbb
cmc
aam
dec
out
orl
xchg
pop
ret
adc
loope
fidivs
nop
cmpsb
sbb
rorb
cmp
out
lods
mov
mov
or
xchg
pop
fistpl
adc
sub
movsb
aam
loop
cwtl
test
je
sub
mov
push
mov
out
repnz
sub
xchg
daa
jle
mov
dec
inc
fs
inc
lret
push
xor
xchg
push
cmp
sbb
movsb
divb
xchg
loopne
insl
push
dec
cmp
fsubrl
cmp
mov
stc
pop
pop
sub
jp
inc
cltd
fdivrl
in
cmp
jle
sub
or
movsl
loopne
dec
push
jl
push
mov
cltd
jge
mov
mov
push
pop
sub
push
push
xor
jle
testb
mov
aaa
int3
fcmovnu
ljmp
stos
or
into
iret
fldt
jno
popa
or
sarb
dec
or
jl
add
ja
out
daa
nop
mov
inc
jo
and
xchg
jnp
fisttps
aam
add
out
mov
cs
aam
cld
jg
and
in
dec
data16
pop
and
cmp
pop
mov
lods
cmp
unpcklps
ljmp
stc
dec
mov
inc
cmp
dec
push
pop
push
sbb
incb
inc
dec
mov
mov
arpl
int
push
dec
push
sbb
inc
jo
pop
cs
mov
inc
sti
adc
dec
xchg
and
lods
push
cltd
and
dec
mov
bound
insb
dec
aas
movsl
cmp
dec
in
test
mov
out
adc
cmp
aas
icebp
in
ficomps
repnz
insl
dec
jge
fsubrs
dec
ret
push
cmpl
adc
out
shrl
dec
es
and
rol
jo
jle
loope
test
dec
dec
xor
movsb
inc
popa
call
in
out
mov
jmp
xor
fldl
ss
ret
jbe
jae
xor
inc
adc
test
mov
push
dec
aaa
je
cmp
shll
dec
loope
adc
xchg
xor
movsb
fmul
daa
sarl
xchg
iret
cmpl
mov
int
lret
dec
or
arpl
sarl
mov
lds
cs
shrl
jl,pt
xchg
add
call
mov
enter
push
lret
jge
bound
std
add
stos
inc
dec
repz
push
push
push
int
dec
push
rorb
test
xor
and
xlat
scas
dec
xor
lods
jle
xchg
push
fwait
inc
cmc
out
dec
and
jmp
pop
and
rorl
mov
fiadds
dec
sarb
and
mov
idivb
in
lret
push
test
sbb
stc
push
lahf
cmp
jnp
nop
js
xor
sub
and
loop
xchg
lret
add
std
xor
mov
shrl
cmp
dec
mov
push
lcall
sub
cli
jns
pop
mov
mov
cmp
push
mov
inc
pop
mov
push
ret
sbb
pushf
nop
mov
xchg
imul
lcall
incb
add
cmpsb
xchg
mov
xchg
outsl
cs
adc
pop
jg
add
inc
mov
arpl
shll
decl
xchg
test
xchg
cmp
add
dec
movsl
lahf
mov
adc
dec
and
jge
je
cmpsb
cmpsl
xchg
lds
lcall
jmp
call
das
pop
dec
mov
jg
sbb
push
inc
sbb
jmp
lret
mov
pop
imul
cmp
jne
xchg
pop
or
mov
jle
pop
xor
js
dec
stos
mov
push
dec
lahf
ret
jb
dec
jne
arpl
sub
gs
imul
int3
bound
mov
pop
dec
sahf
xchg
dec
ror
xlat
lret
cs
push
dec
jae
pop
cli
fcmovb
gs
subl
adc
sbb
xorl
lret
push
mov
outsb
sbb
std
imul
push
pop
rorl
jmp
sub
fwait
sbb
jae
insb
js
mov
push
std
cmc
mov
inc
sub
ret
dec
dec
je
paddusb
cmp
popa
jns
loopne
aaa
ds
lret
mov
xchg
mov
scas
aam
and
push
mov
or
shr
adc
mov
and
ds
ljmp
adcb
mov
mov
add
inc
dec
outsb
js
mov
rcrb
ja
shl
dec
add
inc
lea
push
push
dec
push
cmpsb
test
das
fdivrs
call
mov
out
subb
daa
mov
mov
mov
jbe
inc
ficoms
push
dec
iret
cltd
or
dec
orw
test
sub
sub
sarl
pop
icebp
js
xor
loope
inc
lahf
mov
loopne
mov
dec
test
lret
jecxz
push
mov
mov
xlat
xor
dec
outsb
dec
lcall
dec
mov
ffree
cmp
mov
dec
fidivl
test
jecxz
pop
lods
xchg
ds
subl
xor
dec
std
push
sub
scas
jne
adc
lret
dec
xchg
adc
xchg
inc
pop
fmull
dec
or
xor
pusha
lret
add
pop
push
and
sbb
dec
imul
jecxz
ret
lahf
insl
push
cmp
push
mov
dec
xchg
xchg
dec
imul
rolb
mov
xchg
or
sbb
mov
add
sub
cmp
dec
in
xchg
movsl
adc
dec
into
pushf
jmp
pop
push
outsb
dec
and
in
ror
je
and
out
nop
adc
jg
and
fidivl
sbb
adc
jno,pn
ds
mov
jle
out
daa
jg
pop
push
roll
dec
jecxz
jp
or
cmp
bound
push
les
inc
inc
nop
mov
cmp
dec
add
dec
scas
shlb
and
mov
mov
cmp
iret
mov
in
frstor
shlb
inc
std
push
xchg
in
sub
jb
xchg
fmuls
incl
incl
dec
push
push
addb
nop/reserved
stos
mov
dec
cmp
cmpsb
cli
jae
mov
sub
xchg
mov
push
cmpsl
xor
push
andps
std
into
outsl
fdivl
loopne
jb
mov
cmp
fs
mov
shlb
sbb
iret
fwait
jle
push
xchg
push
push
ds
add
test
popa
ret
add
subl
lea
push
insb
sub
dec
jg
fldl
test
divl
jns
and
push
or
sarb
push
aam
xlat
jmp
movsl
pop
js
xlat
ficomps
inc
fs
es
movsb
mov
inc
push
or
popa
scas
and
int3
sbb
je
jb
insb
mov
push
dec
cmpsl
lods
cmp
mov
lret
or
lcall
bound
les
xor
lret
lahf
aas
nop
stc
dec
sti
aad
rclb
testl
cmp
test
inc
add
jns
push
sbb
jns
add
mov
pop
mov
inc
insl
pop
lret
rolb
cmp
jg
movsb
es
daa
sahf
loop
stos
push
pop
icebp
loop
cmp
iret
pop
loopne
mov
jne
push
iret
lret
adc
inc
fidivrs
push
in
xor
fldenv
cmp
fwait
cld
xchg
cs
mov
mov
dec
aas
jg
and
js
inc
daa
jle
iret
dec
xor
pushl
mov
mov
je
dec
dec
js
xor
and
lods
les
mov
dec
lods
jno
xchg
push
arpl
inc
sbb
into
jne
and
ja
xor
mov
js
fdivrl
sub
jecxz
jmp
xchg
xchg
jbe
fsts
loope
cmp
dec
and
enter
dec
jbe
stos
scas
shl
pop
repz
push
dec
push
sti
or
xor
mov
scas
jmp
mov
add
push
jg
dec
jmp
or
pop
pop
repz
imul
fsts
mov
ja
into
jp
dec
mov
add
push
or
dec
xlat
jmp
pop
mov
pusha
dec
out
outsb
pop
imul
pop
xchg
dec
mov
or
daa
dec
mov
push
inc
sub
xchg
movsb
mov
adc
mov
jmp
sub
push
jne
adc
roll
jmp
aas
loop
cmp
into
pop
xor
cmp
popa
pop
imul
fsts
lahf
cltd
lahf
aam
cmpsb
cmc
dec
push
lret
mov
xchg
addr16
push
add
dec
nop
out
lret
lahf
psubsw
jb
dec
ja
scas
fwait
out
or
jge
inc
fidivs
lds
adc
xlat
mov
xchg
dec
mov
dec
nop
adcl
jo
int3
movsl
add
and
mov
pusha
xor
addl
sub
mov
dec
inc
rcr
stc
fmull
dec
test
ljmp
arpl
push
mov
loopne
dec
cmp
jnp
je
sti
rorl
outsl
and
aam
sbb
push
dec
inc
jno
jg
in
in
pop
dec
out
mov
roll
dec
mov
inc
pop
ficompl
push
dec
iret
mov
loope
dec
das
cs
cmc
sbb
scas
or
outsl
jne
decb
hlt
inc
push
inc
dec
sbb
mov
push
and
pop
pop
xchg
shl
adc
movsb
icebp
sub
daa
adc
jp
xchg
pop
rcl
inc
fmuls
iret
cli
mov
inc
movsb
lods
inc
fsub
add
and
jo
movsb
aaa
enter
jl
arpl
sbbl
stc
xchg
sub
mov
inc
cmp
call
mov
sbb
dec
ret
movsl
sbb
dec
xor
lds
mov
push
xor
rcrl
sarb
or
pop
fs
lods
dec
jg
pop
cmp
repz
pop
sbb
adc
popa
clc
push
test
ds
das
addb
out
into
jg
fisttps
leave
dec
sbb
cmp
repnz
dec
dec
aas
xchg
pop
xor
push
mov
cmp
push
push
mov
pop
and
jg
fnstcw
pop
jl
int
push
bound
into
inc
and
movsl
lods
pop
sahf
in
push
dec
call
lret
adc
fucomi
pop
pop
cmpsl
sub
sub
mov
mov
lahf
out
rcrb
pushf
pop
dec
scas
pop
icebp
scas
mov
dec
cli
pop
xchg
lcall
push
adc
jbe
dec
dec
push
cmc
xlat
xchg
lcall
push
dec
js
ljmp
pop
or
dec
mov
cltd
ss
sti
fstl
push
imul
arpl
pop
mov
xchg
mov
gs
dec
cltd
and
jle
mov
pop
and
jp
movsb
dec
ret
mov
cmovnp
cli
jne
lds
fists
xor
loop
adc
cmc
dec
pop
push
fadd
and
ljmp
dec
shr
scas
xchg
mov
xchg
ret
dec
fldenv
int
pusha
addl
sbb
stos
inc
fs
ret
sbb
jg
clc
dec
aaa
stos
mov
mov
dec
jb
pop
ret
xlat
lods
imul
xchg
xor
inc
lds
inc
push
jne
dec
outsb
js
cmp
dec
aaa
es
jge
sbb
roll
ljmp
jl
imul
sub
andb
movsl
jno
dec
mov
fs
mov
pop
mov
fmuls
lcall
dec
mov
fucomi
mov
lea
push
lahf
jle
lret
stos
mov
mov
out
dec
or
or
xor
hlt
xchg
gs
into
xchg
div
adc
iret
xchg
jl
mov
push
dec
lahf
ja,pt
ret
loop
imul
jl
icebp
jp
loopne
fadds
stc
cld
pop
add
xor
dec
cmpsb
lods
lret
je
push
xor
dec
sub
fistpll
pop
mov
inc
hlt
in
jg
lahf
gs
jle
mov
mov
adc
pusha
scas
cmp
test
inc
xchg
jg
dec
cmp
lock
pusha
pop
and
les
sub
cmp
mov
dec
cmp
dec
xchg
lret
mov
lea
mov
jns,pt
call
icebp
icebp
cmpsl
movsl
fnsave
loop
loopne
daa
data16
int
data16
sbb
mov
push
scas
cmpsl
jp
pusha
pop
call
mov
cmpsb
xchg
fimull
lods
jg
cmp
adc
mov
pop
or
jle
jl
and
or
fnstsw
stos
out
stc
jbe
inc
jg
push
mov
cmp
je
push
sub
dec
push
cli
inc
xchg
xlat
mov
jp
inc
jl
lcall
sbb
stos
push
and
iret
cld
mov
jnp
xor
dec
dec
movsb
aam
xchg
lret
test
dec
das
and
add
data16
adc
insb
shll
fwait
gs
mov
jbe
ret
xchg
mov
imul
jl
dec
test
sbb
in
imul
or
out
dec
jbe
inc
xchg
or
in
cmp
sub
faddp
loope
fisttpl
mov
imul
mov
and
push
add
mov
xchg
xor
imul
lods
test
rorb
stc
mov
add
imull
out
leave
fisttps
cmp
imul
dec
sub
add
arpl
and
smsw
bound
fldcw
push
jae
and
repz
sahf
out
pusha
dec
repnz
mov
aad
mov
sti
aaa
ficoml
fs
push
into
cmp
push
aaa
mov
pop
pop
sbb
push
mov
mov
push
dec
dec
xchg
xchg
push
mov
add
daa
stos
movsl
aaa
push
nop
iret
dec
dec
popa
dec
and
or
out
xlat
in
cld
imul
and
stos
fisttps
and
ds
jno
out
int3
imul
dec
jge
or
test
std
sub
xor
dec
mov
test
dec
mov
xchg
mov
jne
fwait
decl
out
dec
push
push
loope
dec
mov
or
jbe
mov
icebp
push
pop
in
dec
inc
add
jecxz
aaa
fnstsw
dec
mov
xor
cwtl
loopne
sti
jmp
mov
dec
mov
pop
xchg
add
pop
inc
xchg
mov
rcrb
lds
dec
mov
paddq
arpl
jns
mov
mov
push
xchg
cmc
clc
inc
xchg
out
js
jae
hlt
fidivrl
inc
in
mov
mov
mov
arpl
loope
sbb
cmpsl
pop
add
lcall
shl
stos
das
jnp
xchg
int3
popa
dec
shll
jp
dec
clc
test
push
dec
jns
pop
or
adc
dec
jnp
frstor
dec
pop
jmp
nop
xchg
orb
fdiv
dec
fildl
jg
sub
imul
add
jns
dec
test
pop
ja
cmpb
sbb
inc
and
dec
cmp
movsl
jecxz
out
pushf
dec
idivb
bndstx
dec
shlb
xchg
cli
and
mov
pop
stos
popl
popf
adc
cltd
iret
or
in
mov
jbe
cmp
mov
add
xor
mov
aaa
inc
cmovbe
mov
xor
into
xorl
mov
dec
dec
push
sbb
jmp
cs
dec
pop
inc
addr16
out
dec
daa
dec
inc
jbe
pop
push
mov
insl
dec
nop
or
sbb
add
outsl
out
dec
jae
push
rolb
push
dec
fs
enter
dec
sub
repz
aad
jne
dec
mov
jns
fldt
sahf
repz
pop
stos
ret
push
in
dec
cmp
mov
jg
jge
mov
call
jb
sbb
rol
loop
push
shll
adc
jns
adc
push
sub
dec
mov
pop
push
outsl
in
dec
leave
mov
rcll
ficoms
iret
ljmp
fidivl
fwait
dec
mov
mov
test
enter
bound
adc
fwait
dec
dec
ljmp
dec
out
es
jmp
pop
or
loopne
dec
mov
mov
test
lret
or
dec
sbb
fisubl
dec
dec
pushf
stos
ja
cmovl
mov
mov
and
shll
adc
lods
xchg
in
xor
dec
daa
lret
pop
fwait
mov
and
mov
dec
or
lahf
mov
dec
test
rcrl
adc
fs
xor
inc
lcall
ss
gs
xchg
push
pop
scas
in
scas
mov
sub
dec
clc
outsb
mov
push
push
add
xchg
subl
mov
dec
sub
sar
jmp
aam
fdivr
push
pushf
mov
push
dec
fs
inc
fisubrl
fimuls
mov
or
test
pop
mov
clc
insb
or
sbb
mov
fsub
in
xor
nop
dec
jge
cmp
mov
mov
into
push
cmpl
in
push
jl
push
dec
or
ret
jp
dec
pop
imul
jbe
push
or
mov
es
and
rsqrtps
pop
mov
inc
outsl
cld
les
sbb
repz
sbb
dec
push
push
pop
loope
test
mov
mov
bound
dec
vpcmpgtd
test
adc
mov
add
jb
jo
lret
insb
dec
pop
pushf
cltd
imul
inc
add
mov
dec
and
imul
or
pop
pop
mov
jmp
je
dec
rclb
xor
nop
aam
mov
movzwl
notl
outsl
in
dec
sti
lock
or
dec
sarl
lcall
out
pop
jmp
test
lahf
leave
scas
jb
push
js
xchg
sarl
test
xchg
sbb
xchg
xor
lret
mov
mov
pusha
inc
bound
push
movsb
add
xchg
cmpsl
mov
popl
mov
aam
fldenv
mov
js
dec
fidivrs
cltd
inc
ret
shrb
dec
push
repnz
inc
mov
leave
icebp
push
out
es
jl
divb
cmp
ja
repz
ret
sti
movsl
rclb
dec
jo
mov
out
mov
mov
in
mov
aaa
inc
dec
jl
fstpl
aaa
adc
pop
ljmp
inc
rcrl
cli
sahf
mov
and
lods
inc
aas
inc
mov
mov
add
mov
mov
bound
add
cmpl
push
scas
test
mov
jg
mov
cltd
sub
cmpsl
nop
and
xchg
ljmp
pop
rorb
stos
cmp
scas
cmp
mov
lock
fwait
movl
push
neg
jbe
dec
jecxz
lds
xor
dec
or
xor
into
xor
dec
xchg
fwait
dec
xor
adc
fidivrs
xor
ljmp
jnp
pushf
and
enter
sahf
loop
dec
bound
and
std
incb
push
test
call
push
xchg
sbb
sub
in
rcrl
in
cmp
mov
movsl
sub
lea
sub
loop
dec
insb
imul
and
dec
jg
xchg
add
mov
stos
mov
push
call
dec
mov
ja
fldcw
popf
adc
mov
dec
mov
into
dec
mov
lret
cs
xor
pop
xchg
jo
dec
jmp
clc
test
dec
and
inc
push
enter
dec
aaa
mov
or
dec
xchg
in
jecxz
jo
mov
dec
subb
loop
adc
inc
popf
jl
setg
in
cld
iret
inc
push
and
fwait
xor
fs
xchg
dec
inc
sbb
sub
rorl
dec
daa
dec
movsb
push
insb
push
dec
cmpsb
inc
mov
xchg
cmp
xchg
imul
dec
js
push
fs
aaa
inc
dec
cwtl
sbbl
jno
sub
ja
xchg
adc
adc
rclb
mov
dec
xchg
adc
mov
stc
es
mov
pop
dec
stos
push
mov
jle
mov
xchg
cltd
fidivrs
inc
xor
mov
mov
fisttpl
adc
push
inc
je
into
xchg
daa
call
ficomps
iret
test
aad
icebp
dec
out
mov
pusha
xor
cmp
lcall
sbb
sbb
xchg
mov
push
outsl
cltd
push
rorl
orb
ds
or
push
jbe
xor
inc
inc
ljmp
mov
dec
dec
shlb
mov
repz
add
popf
iret
orb
cmp
mov
jbe
or
dec
pusha
loope
xlat
mull
in
scas
or
insl
loop
and
dec
into
adc
loopne
pop
cwtl
in
mov
sbb
data16
inc
ds
out
stos
adc
cmp
outsb
out
orl
xchg
adc
mov
push
aad
cmp
jbe
movsl
addb
or
xchg
repnz
dec
pop
pop
addr16
jbe
cmp
add
leave
xchg
xor
inc
loopne
rcr
hlt
inc
ljmp
add
push
xchg
fisttpll
in
mov
inc
adc
imul
dec
shl
stos
fcmove
inc
sbb
inc
insb
into
aaa
and
orl
scas
sub
dec
push
shlb
bound
push
iret
leave
lods
sbb
scas
jmp
dec
sbb
outsl
xor
mov
int3
mov
mov
dec
xor
jl
cltd
push
rolb
hlt
and
aaa
pop
shll
stos
xlat
icebp
fldl
icebp
lock
jmp
mov
add
out
mov
jae
nop
mov
dec
mov
xor
mov
out
out
jle
inc
fdivp
cmc
icebp
adc
sti
jl
into
adc
shrb
test
cmpsb
fs
mov
rep
pusha
lret
mov
sub
out
dec
xchg
in
add
jl
cs
pop
jle
pop
mov
sti
ds
les
leave
mov
mov
lds
or
mov
mov
sbbl
inc
jl
ficomps
cmp
jmp
push
call
xor
aaa
fs
push
lret
xor
xor
jae
mov
das
sub
aaa
in
lcall
and
ds
mov
negl
and
aam
aaa
call
xorps
push
xchg
add
lahf
iret
shlb
leave
loop
adc
frstor
stos
inc
cs
loopne
inc
or
in
sarb
call
dec
ret
hlt
pop
inc
sbb
dec
stos
int3
inc
int3
push
dec
outsl
mov
lds
adc
pop
push
subl
addr16
subb
fbstp
popa
lds
push
imul
xchg
fidivrl
inc
mov
ret
pop
lods
scas
xchg
fwait
test
bound
loope
sti
loop
stos
xor
enter
cs
and
shll
push
xchg
mov
jle
gs
movsl
mov
push
push
les
adc
jnp
js
adc
fs
add
xor
xchg
jne
fsub
inc
push
and
xchg
mov
push
btc
pop
mov
dec
dec
lds
mov
lret
adc
sub
dec
lods
jge
jnp
inc
out
cmp
sarb
subb
dec
adc
out
push
adc
pop
inc
pop
pop
ffreep
test
jae
dec
std
pop
pusha
popa
dec
sub
cmp
xchg
mov
fidivrl
jnp
popa
pop
dec
cli
add
pmaxub
xchg
mov
sbb
pop
out
mov
xor
and
je
push
sub
lcall
sub
sub
xor
dec
inc
addr16
outsb
mov
dec
push
fnsave
pop
in
scas
mov
iret
std
stos
cltd
out
aad
jo
addb
dec
inc
inc
aam
dec
mov
stos
lds
mov
dec
jg
or
dec
xchg
mov
mov
add
inc
jl
mov
enter
lcall
dec
pop
push
fcomi
lret
push
xor
out
test
and
inc
mov
call
loope
adc
xor
sub
inc
add
cmc
movsl
sbb
jmp
or
jge
mov
dec
sub
xor
inc
mov
into
fidivrs
mov
rcll
incb
fldl
dec
fcmovnb
sti
pop
cmp
add
adc
dec
mov
sbb
adc
lcall
mov
out
cltd
sahf
imul
std
scas
inc
sti
xor
sub
divl
mov
cld
pop
xchg
dec
jno
sbb
enter
jbe
nop
cmp
scas
xlat
xor
fstl
repnz
jne
dec
mov
add
dec
pop
fwait
rcr
out
psubq
dec
shlb
adc
gs
adc
inc
and
and
mov
mov
mov
jns
sbb
jle
inc
mov
sbb
cld
xchg
push
dec
loope
and
and
popa
mov
dec
jecxz
in
fs
mov
mov
cmp
dec
sbb
pop
adc
enter
and
add
inc
pop
in
mov
add
sub
cmp
mov
fdivrs
pop
xchg
fwait
enter
jmp
out
or
push
inc
and
popa
movsb
push
packssdw
cmc
iret
dec
xchg
jle
mov
push
repz
mov
sub
xor
jae
inc
cmpps
rcr
dec
sub
mov
inc
sbb
push
es
popl
shl
sub
ret
idivb
out
lock
test
faddl
lods
dec
jmp
shl
imul
ja
in
pop
cmpsb
repz
fimuls
push
lods
mov
adc
call
in
dec
imul
jle
fildl
dec
push
and
or
jno
sub
pushf
cmpsl
dec
lret
jne
jmp
sbb
jnp
sbb
or
jo
mov
loope
mov
std
dec
and
hlt
lea
mov
jb
mov
sarb
pop
repnz
jbe
cmp
inc
cmp
inc
pushf
loopne
mov
dec
cmp
test
lahf
or
jmp
or
dec
ss
xor
in
ficoml
adc
sub
jnp
cmc
js
out
mov
dec
xchg
icebp
jne
out
dec
stos
pop
cmp
mov
pop
enter
pop
sbb
inc
ss
adc
dec
mov
mov
sub
jmp
add
adc
arpl
adc
nop
and
mov
cmpsb
pop
and
sub
mov
cs
lahf
inc
dec
dec
mov
lods
push
outsl
insl
mov
loop
pop
iret
push
xor
enter
and
iret
jmp
cmp
jnp
std
out
pop
fmulp
pop
dec
xchg
es
pop
dec
add
in
scas
push
leave
dec
xchg
ja
mov
inc
dec
ljmp
ss
fwait
xor
std
dec
andb
dec
push
add
inc
ficoml
jne
sbb
stc
outsl
scas
and
cli
dec
das
fisubl
sub
fisttpl
or
dec
push
into
xor
testb
cs
mov
imul
cmp
jecxz
or
pop
sahf
dec
pushf
int3
push
orl
adc
negl
ret
xchg
in
adc
sub
dec
lds
jp
lret
push
out
dec
aas
jo
in
outsl
xchg
sti
push
je
dec
inc
nop
mov
mov
and
dec
jle
fisttps
sbb
mov
xor
mov
jg
add
daa
push
test
add
cmp
aam
es
mov
mov
movsb
add
aas
xor
ss
push
lods
movb
dec
rorb
movsb
leave
das
inc
lret
cs
int3
push
aas
inc
inc
or
inc
pop
in
xor
and
pop
das
push
in
lea
clc
fwait
jae
sbb
cli
popf
sbb
mov
jmp
lods
repz
icebp
and
sub
out
and
add
cmp
out
int
push
pusha
scas
aas
mov
add
mov
or
or
ds
test
pop
dec
arpl
fwait
push
push
sbbb
mov
and
loopne
fwait
sub
inc
cmp
push
ja
aaa
cmp
sub
jbe
rcll
stos
mov
xchg
xchg
jl
mov
popf
shl
imul
loope
out
jg
jne
fwait
push
out
das
jmp
rcll
add
out
dec
rcrb
sub
dec
or
je
faddp
into
iret
in
mov
int
dec
fs
xorb
test
enter
xchg
sub
add
dec
fld
jl
stos
and
xor
dec
push
orl
pop
sbb
das
fs
jle
mov
xchg
les
popf
push
sub
jo
sub
and
and
lods
mov
jl
nop
push
lods
and
cmovle
xor
or
push
jne
jle
fwait
push
push
mov
mov
fisubl
insl
dec
jb
adc
push
pop
jle
mov
push
push
xchg
daa
aam
into
aas
fnclex
inc
fbld
mov
stos
inc
or
pop
xchg
sub
mov
rcl
rcll
push
mov
mov
pop
jl
jnp
pop
aas
in
outsl
mov
hlt
test
inc
outsb
mov
jl
iret
dec
ja
adc
jb
dec
testb
mov
fsubs
cmp
movsb
mov
out
push
inc
enter
es
mov
xor
hlt
xchg
dec
out
jl
push
add
movsl
add
push
mov
repnz
and
xchg
fidivrs
ret
cmp
jae
gs
cmp
add
mov
push
test
daa
dec
cltd
fadds
mov
mov
jle
jmp
dec
mov
jno
mov
lods
sahf
push
rcll
mov
outsb
add
xchg
bnd
js
inc
mov
add
jne
clc
adc
shl
sbb
jl
mov
jg
jl
test
daa
pop
adc
aas
mov
sbb
push
rorb
mov
mov
jg
add
mov
cs
dec
jle
or
faddl
and
pushf
adc
mov
pop
int3
or
dec
rcrb
dec
xor
test
mov
nop
aad
loop
xlat
xchg
inc
push
fdivs
shrb
xchg
adc
daa
das
fxch
or
jmp
fwait
inc
mov
sub
sbb
inc
jmp
inc
sbb
movsb
mov
cltd
fidivrl
xor
lea
xchg
scas
adcb
cmp
out
inc
cmp
popa
outsb
inc
push
jbe
pop
ds
iret
dec
xor
push
jnp
pop
xchg
std
push
xchg
xchg
adc
iret
sti
mov
lods
je
xor
daa
adc
lock
sub
cld
pop
sub
hlt
movsl
jnp
notl
unpcklps
aaa
adc
jp
and
cltd
or
jno
out
pop
cmp
sub
push
and
in
movsl
or
jnp
sbb
js
stc
xor
push
xor
std
jl
popa
dec
ds
aam
dec
fs
xchg
mov
iret
cs
jl
push
push
in
dec
and
repnz
divl
mov
ds
adc
mov
std
pop
add
mov
out
mov
ljmp
lods
push
out
movsb
jnp
dec
adc
js
test
mov
xchg
push
or
mov
push
mov
mov
outsb
ret
push
adc
lock
pop
jno
mov
mov
inc
ljmp
fistpl
popf
push
insb
adc
loop
mov
xor
out
fstpt
gs
mov
leave
dec
fcmovu
mov
or
cltd
xchg
repnz
dec
jnp
and
mov
mov
ss
scas
leave
ljmp
mov
inc
pop
lret
dec
das
xchg
push
mov
jnp
xchg
dec
inc
test
add
mov
in
fcomps
push
into
pop
loopne
adc
clc
pop
dec
sbb
cmpl
jnp
sub
aaa
in
inc
pushl
dec
adc
jle
dec
es
add
sub
dec
and
repnz
bound
dec
pop
jp
pop
rorl
mov
push
sarl
xchg
dec
pop
popa
mov
dec
xor
mov
xchg
dec
lds
icebp
arpl
sahf
push
cmp
adc
cmp
test
lcall
inc
addr16
mov
es
imul
sub
dec
daa
sub
jae
dec
inc
cmp
ljmp
and
dec
or
cmpb
out
fcomp
jp
or
fbld
fnsave
dec
nop
dec
cltd
push
dec
into
sbb
ljmp
dec
xchg
mov
enter
scas
mov
imul
les
cmp
shrl
cwtl
cmp
out
hlt
pop
xchg
cld
notb
dec
inc
mov
pop
mov
push
dec
imul
addr16
popa
or
jbe
fnstsw
inc
dec
mov
dec
sub
xchg
jnp
or
xor
lea
in
or
mov
jbe
cli
push
stos
aad
mov
pop
and
adc
pop
pusha
clc
push
adc
sub
jl
dec
mov
or
jbe
and
jae
mov
cmovle
imul
stc
test
add
and
dec
jne
roll
xor
add
jg
mov
mov
mov
dec
dec
pop
mov
xor
rcl
jne
sahf
push
dec
or
xor
lds
mov
dec
iret
orb
or
stc
push
and
dec
mov
mov
jns
divb
mov
loope
lret
fdivs
outsb
in
xchg
mov
ds
lret
scas
jns
hlt
mov
daa
inc
mov
push
adcb
inc
jl
popf
jo
mov
js
insb
into
testb
stos
scas
int3
fstp
gs
dec
mov
mov
dec
sub
dec
push
in
inc
mov
jle
sub
pop
xor
icebp
sbb
xchg
rcrl
mov
lahf
mov
xor
outsb
subl
mov
inc
jae
dec
out
fisttpll
insl
push
mov
pop
xor
pop
stc
cmp
shr
in
sbb
mov
push
inc
outsb
adc
fstl
cmpsb
into
pop
jb
rdpmc
pop
iret
xor
inc
inc
icebp
mov
ror
xchg
pop
jecxz
sbb
paddsb
leave
dec
dec
cmp
std
mov
xlat
xchg
sbb
jo
lods
ret
sub
xor
push
outsb
lods
cmp
fmuls
ror
in
inc
sbb
xchg
mov
dec
sub
pop
ret
aaa
fwait
lahf
js
xor
xchg
orl
jne
orl
aad
das
dec
cmp
orb
enter
push
nop
mov
and
js
xchg
dec
clc
test
jmp
test
mov
in
out
xorb
jmp
xor
jbe
pop
dec
aad
dec
shll
sbb
push
out
repz
sub
cmc
inc
mov
sub
aaa
mov
push
dec
push
xchg
cld
add
inc
lds
sti
dec
mov
into
push
data16
pop
dec
out
adc
xor
aam
mov
daa
movsb
xchg
dec
mov
subl
mov
adc
daa
iret
ss
jmp
sbb
push
dec
mov
movsl
cs
ror
int3
push
daa
sub
pusha
repnz
int
cs
ja
inc
or
xor
dec
inc
cmpsb
xor
ficoms
xor
lods
clc
in
wrmsr
mov
push
xor
push
pop
xor
dec
int3
bound
cmpsl
inc
pop
jecxz
jnp
mov
dec
aaa
add
sub
repz
inc
data16
pop
cmp
sbb
out
jl
mov
fsts
dec
mov
adc
dec
pop
shlb
cld
cmpsl
mov
inc
dec
call
lds
and
push
mov
push
mov
dec
sub
and
in
inc
mov
and
dec
movsl
rorb
out
mov
orl
adc
add
rcrl
push
push
popf
dec
sub
mov
pusha
mov
int3
sub
pop
push
rcl
in
push
adc
pop
stos
adc
outsb
cld
cli
dec
dec
mov
icebp
inc
lret
dec
push
ljmp
add
xchg
lods
dec
in
loope,pn
xor
inc
dec
pusha
mov
jns
xor
sbb
jae
je
xor
mov
ret
add
jp
dec
movsl
hlt
out
mov
dec
fcomps
or
push
xlat
dec
lcall
and
pop
mov
mov
dec
sub
dec
inc
repz
mov
repnz
std
xchg
int
into
add
sti
or
add
jmp
lea
dec
xchg
sarb
test
icebp
rsm
test
ljmp
jle
mov
cmp
push
ds
pop
lock
dec
xor
divl
cli
jle
jb
std
add
test
push
dec
cmp
xchg
cmp
cltd
mov
jl
cltd
sbb
sbbb
in
dec
lahf
xor
out
daa
cmp
into
loop
ds
popa
jg
call
push
outsl
jmp
aas
fs
aad
push
and
pop
lods
mov
adc
enter
dec
fdivrs
pop
adc
lea
sbb
jb
aaa
jae
rcll
out
shlb
into
aam
das
lret
into
mov
push
jb
cmp
push
jle
daa
xor
into
and
cmp
aaa
cmp
pop
add
call
pusha
jge
add
ret
fnstenv
ficomps
mov
in
imul
insb
xchg
xor
hlt
mov
mov
rep
or
mov
ds
jecxz
mov
dec
pop
es
test
les
in
jmp
xchg
xor
movsl
push
into
cmp
ja
scas
dec
fisubl
repnz
fnstenv
je
add
sub
jb
nop
xor
jp
sub
dec
push
aaa
lcall
or
pop
and
push
js
aas
data16
les
bound
dec
mov
add
sub
iret
hlt
shrl
out
pop
xor
aas
lods
fisttpl
movsb
mov
movsl
aam
iret
rcpps
lret
jl
popl
mov
outsb
jl
clc
mov
sub
mov
call
push
inc
lock
fildl
adcb
inc
iret
jg
popa
sbb
dec
cmp
inc
or
push
popa
inc
jbe
pusha
sub
and
adc
mov
cwtl
mov
mov
pminub
hlt
pop
pop
jne
scas
jecxz
cltd
push
dec
push
push
pop
inc
icebp
mov
xchg
pop
clc
in
jle
sti
dec
inc
push
dec
call
xor
jbe
pop
cwtl
lret
aad
xor
es
xchg
inc
int3
add
dec
stos
rcrb
mov
push
lods
dec
xor
pushf
enter
push
out
dec
fisttps
cmp
dec
cmp
fsubs
dec
orl
jge
pop
sbb
dec
dec
dec
jne
notb
int
fdivrs
adc
push
xchg
dec
push
jno
out
or
dec
push
mov
jl
into
lock
fimuls
adc
ret
jg
jbe
cmp
movsb
fucomp
dec
xchg
pop
mov
or
mov
xchg
arpl
pop
lcall
sbb
or
cmc
dec
xchg
mov
or
out
sbb
mov
add
dec
xor
cmp
es
lcall
std
jbe
cmpsl
into
push
lret
jg
push
or
stos
ds
xor
cmp
imul
js
fcmovnu
push
xor
inc
and
lock
pop
jg
or
push
mov
out
out
and
mov
dec
mov
add
pxor
enter
mov
popf
cmpsb
push
mov
daa
push
xchg
rolb
jns
fs
ds
sahf
aam
add
popf
outsb
cmpsb
jg
loop
add
idiv
out
and
pop
mov
rcrb
push
jl
jg
dec
stos
or
bound
push
jnp
adc
cmp
shrl
out
ds
or
into
jg
xchg
pusha
rolb
push
inc
int3
fdivp
push
push
adc
add
xchg
cltd
cs
insb
dec
jle
adc
adc
ret
cmp
xchg
ljmp
xchg
cs
cmp
mov
xor
loop
mov
push
aas
pop
jle
lods
test
mov
adc
push
mov
data16
sub
jle
stos
shlb
stc
mov
mov
dec
sti
call
push
ja
in
push
mov
adc
xlat
out
popf
fimull
dec
xor
fldz
adc
adc
jg
and
jge
mov
fmul
daa
mov
mov
notb
outsb
and
fiadds
cmp
popf
add
mov
mov
out
orl
lds
pop
cmpsl
ret
sub
fsubr
rorl
cld
cmc
sub
sbb
cld
jbe
push
and
scas
cmp
dec
aas
push
add
enter
fldcw
lods
movsb
mov
mov
out
sahf
xor
push
out
sub
push
repnz
jnp
lods
in
lods
repz
jl
dec
orl
adcl
inc
fimuls
arpl
das
std
mov
movsb
sbb
adc
add
int
lods
icebp
and
jle
lds
in
aaa
cld
xor
and
inc
jl
lahf
adc
mov
dec
push
jg
mov
mov
jne
movsl
jle
dec
insb
mov
lea
insb
lods
jp
or
stos
fimull
or
pop
cltd
jmp
jo
rolb
inc
jl
lcall
mov
jp
cmp
sub
scas
pop
mov
sub
cmp
sbb
leavew
mov
sbb
xchg
and
push
push
cli
lods
jg
shll
xchg
jg
fnstsw
pop
jl
xchg
stos
xor
adc
sub
inc
hlt
and
sub
pop
jl
lcall
nop
push
inc
ucomiss
fldl
mov
dec
pusha
jl
mov
push
xchg
test
sti
cld
sub
sub
mov
mov
jle
mov
or
cmp
pop
or
sti
cld
bound
ja
dec
dec
lfs
lret
cld
dec
mov
jnp
xchg
jg
push
loop
xlat
fisubl
dec
mov
mov
cmp
cs
or
outsb
sahf
loop
sbb
mov
mov
mov
dec
addr16
xlat
xor
xor
adc
push
lret
sub
cmpsb
repz
lods
mov
aas
fldenv
ror
push
dec
repz
mov
add
out
push
dec
mov
xor
push
inc
jae
dec
outsl
popf
mov
nop
into
push
imul
out
mov
jbe
lea
dec
mov
xor
sahf
jmp
mov
or
fldt
ja
mov
sbb
jne
outsl
adc
pop
es
dec
xor
fs
repnz
inc
pusha
inc
adc
and
enter
int
push
rolb
pop
lret
jns
dec
push
fs
fidivrl
ret
dec
jmp
push
mov
in
xlat
les
pop
mov
or
or
pop
lock
dec
add
orb
cmpsl
cmp
test
js
mov
icebp
dec
imull
andb
clc
and
jb
std
and
pop
cld
pop
hlt
jno
leave
dec
xor
xchg
pusha
out
cmp
cmpsb
es
lahf
pop
push
aaa
and
int
outsb
iret
xchg
dec
inc
lahf
push
fidivrs
mov
xchg
cli
adc
push
mov
sqrtps
shlb
cld
mov
or
fxch
mov
xchg
fwait
das
or
stos
mov
pop
fs
add
inc
cmpb
cs
or
rcl
push
pop
dec
stos
loope
inc
dec
hlt
inc
dec
cld
cli
jle
ljmp
aam
mov
sub
loop
cmpsl
push
mov
enter
mov
jl
in
xchg
aaa
jle
xchg
bound
int
jae
xor
cmp
pop
sub
nop
ret
fildll
xchg
hlt
xor
jl
cmp
out
int3
mov
cmovle
ljmp
rolb
mov
jno
add
sub
pop
cmpsl
in
dec
push
inc
xchg
add
dec
ljmp
add
insb
daa
and
mov
xor
into
mov
test
sbbb
lods
sub
in
adc
cwtl
adc
pusha
pop
cltd
pop
inc
lret
lods
out
pop
and
cmp
dec
cmp
dec
stc
lcall
ds
sahf
dec
movsl
shrb
cmp
std
sbb
xchg
cmp
dec
out
adc
mov
clc
scas
dec
mov
cmp
dec
call
popf
nop
das
dec
aaa
xchg
ss
xor
or
stc
or
adc
jmp
dec
inc
test
sbb
jnp
aad
add
sub
jp
dec
mov
sbb
push
lea
push
jo
dec
dec
mov
adc
rcrl
call
dec
jl
add
fisubs
rolb
hlt
push
cmp
cli
mov
fbld
mov
pop
sbb
adcb
arpl
inc
sti
mov
cmp
fistps
mov
push
dec
stos
mov
into
dec
pop
jle
push
xor
iret
shlb
xchg
sbb
sub
push
add
lret
mov
sbb
add
les
ljmp
dec
daa
repz
or
mov
jns
fsubrs
out
jmp
ss
sahf
push
mov
dec
int
mov
aam
lahf
add
mov
sub
arpl
push
pop
imul
mov
push
pop
into
inc
pop
pop
inc
out
mov
leave
inc
inc
repnz
dec
scas
pop
cmp
shrb
ds
pop
xor
xor
and
outsb
test
clc
mov
arpl
dec
pop
notb
xor
xorl
movsb
sbb
cmpl
dec
or
call
in
nop
cld
daa
notl
fldt
fbld
fnstcw
sbb
test
dec
dec
xchg
xchg
in
cmp
mov
inc
dec
stc
leave
mov
hlt
pop
pop
cmp
mov
inc
lret
jnp
dec
js
cld
hlt
xlat
mov
and
mov
mov
add
dec
fstl
rcll
push
adc
arpl
rorb
aam
mov
mov
or
outsl
mov
cwtl
dec
fs
fsubs
and
out
or
or
lret
mov
vcomiss
push
fimull
ret
jno
or
iret
lahf
inc
enter
test
jle
jmp
jmp
fsubl
scas
cs
lods
sti
jl
fiadds
and
testb
and
sti
clc
jo
adc
je
adc
sbb
sahf
repnz
jns
jge
pop
pushf
cmp
xchg
and
mov
jno
dec
popa
jle
stos
js
mov
mov
test
lock
pop
jg
inc
or
loop
push
fisttps
push
inc
jmp
in
addb
and
bound
xor
pop
and
enter
push
sub
cmp
mov
sub
pop
lcall
in
out
xor
push
jge
jmp
bound
repz
xchg
pop
xchg
fcomps
dec
inc
bound
lret
jb
xchg
sub
jo
data16
lock
call
cmp
fisubrs
movsl
cwtl
leave
jp
inc
inc
call
inc
cmp
sarl
push
inc
push
ss
pop
dec
dec
mov
rclb
mov
fs
inc
push
and
out
xor
sbb
movl
mov
xchg
dec
and
jo
sarb
add
sub
insl
dec
clc
rolb
xor
dec
push
test
mov
cmp
lds
test
into
jl
xchg
repz
hlt
dec
jne
je
jg
stos
add
cmp
cltd
dec
shlb
mov
in
sbb
test
jle
scas
mov
loopne
adc
in
imul
pop
fildl
fwait
add
addr16
leave
xchg
insl
xor
dec
icebp
dec
rolb
sbb
in
in
pop
pop
jecxz
jne
lret
dec
push
fsubrl
popa
dec
sub
push
mov
jo
mov
clc
adc
cmp
dec
fstps
das
scas
mov
pop
aaa
lods
xor
mov
sub
js
dec
pop
cmpsl
cmp
xor
lock
inc
mov
cmp
dec
or
out
test
loop
xchg
dec
ja
push
daa
mov
jne
iret
inc
add
cltd
mov
data16
sbb
dec
inc
xor
or
push
je
xchg
aaa
leave
or
in
sub
push
inc
stos
out
ret
xor
xor
lods
sub
xchg
rcll
mov
pop
or
dec
lock
cmpl
addr16
dec
lds
inc
out
out
xchg
lock
mov
and
int
hlt
xchg
lods
fimuls
xor
push
dec
aas
fs
mov
cs
sahf
pop
mov
ljmp
adc
addr16
xchg
fistpll
mov
jno
push
or
ja
mov
pushf
inc
jge
dec
mov
dec
sub
clc
dec
xor
addl
dec
stos
jmp
mov
rclb
into
aam
push
jle
cs
push
imulb
icebp
movsl
sub
mov
xchg
shlb
out
add
pop
and
dec
mov
xlat
xchg
test
cmc
nop
stc
adc
out
fadd
repnz
push
fisubs
clc
scas
scas
dec
fistpl
sti
mov
rol
xor
jg
js
lret
dec
mov
gs
jle
std
clc
push
ja
int
maxps
add
sub
cmp
mov
xor
jecxz
clc
mov
rclb
fdivrs
mov
mov
or
jbe
cmp
lods
xor
out
xor
jo
cmpsb
jb
adc
nop
add
in
lods
movsl
aaa
outsl
jno
es
lds
jne
pop
inc
stos
mov
mov
stos
sbb
lods
dec
or
adc
jne
imul
mov
cs
cmpsb
xor
int
arpl
jbe
dec
popf
aas
leave
nop
dec
sbb
arpl
jg
daa
and
dec
arpl
insb
mov
dec
cmp
imul
cld
add
mov
inc
in
sub
lds
xchg
dec
xchg
lahf
cmp
add
fs
xchg
insb
dec
mov
das
test
pop
loopne
test
sub
dec
mov
mov
iret
adcb
loop
dec
add
pop
rclb
push
in
insb
xchg
cltd
dec
jne
sub
lods
test
movsbl
lea
sbb
or
sbb
jo
enter
pop
ret
dec
dec
fisubrs
or
into
adc
aam
jge
stc
jmp
mov
add
add
mov
xlat
aam
lds
push
dec
inc
and
pushf
leave
imul
inc
lea
adcl
sti
push
pop
adc
xor
notl
lret
inc
inc
out
mov
subl
lcall
imul
cwtl
daa
repz
aas
sti
loop
movsb
pushw
aam
inc
mov
fs
pusha
xor
movb
fisttpl
mov
inc
xor
sub
dec
sbb
cmp
insl
mov
mov
sub
lods
mov
mov
out
pop
lret
lret
inc
jle
nop
imulb
sub
pushf
inc
fnstsw
mov
pop
adc
jl
xor
dec
jnp
push
add
sub
out
daa
push
jl
rcrl
mov
adc
mov
pop
mov
jg
push
add
sti
hlt
add
filds
inc
cmp
clc
cmp
xchg
mov
aaa
jle
mov
cmc
aas
dec
cmp
lods
mov
lods
push
sub
loopne
mov
jns
int
jbe
mov
iret
outsb
jg
sub
test
cmp
out
inc
cltd
addr16
orl
filds
push
das
jb
into
mov
mov
in
mul
pop
lods
inc
int
xchg
cmp
cs
xchg
fistpl
xchg
lcall
xor
dec
lret
rorb
mov
xor
cmp
inc
in
dec
cwtl
int
fisubl
das
ja
dec
inc
fdivr
dec
hlt
cmp
cs
dec
and
lods
mov
xchg
add
sub
sbb
lret
jle
faddl
adc
stc
push
stos
dec
mov
lods
pop
adc
repz
int
call
add
push
add
or
fdivrs
jle
or
or
pop
or
into
adc
push
dec
imul
imul
mov
lods
fcmovne
mov
mov
sub
inc
or
pop
push
in
mov
pusha
rcrb
fs
addr16
ljmp
cmpsb
inc
jl
cwtl
dec
push
xchg
dec
dec
lahf
fwait
jle
into
dec
inc
mov
lock
clc
into
push
add
and
or
add
ljmp
insb
xchg
decb
cmp
rcll
pop
cmc
scas
cmp
mov
in
sbb
int
dec
jp
addr16
dec
daa
frstor
lock
inc
lcall
xchg
cmp
xor
sub
ret
push
cmpsb
dec
pop
cmp
rcrb
icebp
sahf
outsb
dec
jbe
mov
dec
add
dec
sbb
je,pn
cld
push
push
xchg
jae
dec
in
dec
in
fdivl
pop
push
mov
xchg
pop
lahf
dec
push
adc
dec
data16
and
inc
jmp
sqrtps
dec
xchg
pushf
sarl
cmp
dec
push
jg
cwtl
mov
sbb
loop
sbb
xchg
jl
aas
pop
push
imul
incl
jmp
xchg
movsl
js
add
xchg
mov
leave
ds
daa
push
scas
decl
push
cmovle
enter
add
mov
cmp
pop
aaa
cmp
fcoml
adc
cmc
test
add
xchg
jg
add
dec
idiv
xchg
adc
stos
or
jl
sub
mov
add
sti
dec
bound
push
popf
cmp
cmovbe
or
rorb
inc
scas
and
add
push
jle
dec
sub
xlat
sarb
jl,pn
or
cmp
mov
cmpsb
xlat
jl
cmpsl
orb
ss
jle
jl
dec
jmp
push
xchg
lahf
icebp
jle
lahf
adc
push
cmp
jle
mov
sbb
jl
push
xchg
pop
cs
sti
lods
dec
repnz
push
xchg
sbb
jno
xchg
and
push
jns
cmp
push
push
xchg
inc
jp
cs
dec
add
shlb
xor
pop
push
sbb
out
xor
and
push
dec
inc
scas
push
arpl
js
push
in
jle
add
dec
repnz
and
rorb
push
cli
rorl
dec
adc
mov
dec
mov
fbld
add
sbb
jae
int3
cld
and
pop
imul
jg
dec
jb
mov
xor
xlat
inc
movsb
ficoms
xchg
dec
out
int
jno
movsl
sbbl
dec
inc
addr16
or
loopne
test
dec
ja
movsl
mov
sbb
scas
pop
jp
lods
sbb
cmc
in
fisubrl
pop
xchg
dec
ror
stos
cmp
call
dec
fs
push
inc
mov
jg
push
add
pop
and
jl
fildl
pop
inc
dec
cmp
inc
sbb
mov
or
jg
jae
jns
adc
pop
add
add
xchg
jg
ficomps
inc
cld
and
cmpsl
xchg
xchg
xor
scas
jl
arpl
shll
dec
adc
popa
imul
negb
mov
pop
movsb
xchg
es
cmp
pop
mov
cmp
adc
lea
cs
mov
out
jmp
bound
cmp
fildll
pop
add
in
xlat
xor
dec
call
outsb
mov
aam
loop
insb
and
rcrb
mov
dec
pusha
dec
sbb
pop
jns
pop
dec
sbbl
icebp
xchg
mov
dec
jg
rcrb
mov
lea
in
dec
hlt
inc
mov
xchg
lcall
out
dec
scas
xchg
sbb
cmp
dec
jne
xchg
dec
fdivs
dec
cld
ret
in
inc
xlat
and
xchg
lret
loopne
cli
in
popf
mov
sub
lea
cwtl
cmp
pop
test
dec
rorl
pop
into
insb
sub
aad
das
and
shrl
dec
and
orl
les
pop
adc
sub
push
dec
adc
dec
dec
adc
rorb
pop
shll
js
jle
xchg
dec
or
lret
pop
cmovge
stos
push
add
adc
push
push
inc
pop
outsl
cmp
test
dec
jns
sub
xor
mov
fcomp
jno
mov
in
fnstsw
xor
rol
aaa
dec
out
mov
mov
jg
cli
add
popa
mov
data16
or
xchg
sbb
inc
mov
dec
jle
sbb
inc
lods
dec
out
ja
hlt
imul
lock
xchg
lods
daa
add
xchg
xor
pop
addr16
cmpsb
push
sbb
negl
sbb
sub
into
push
dec
jle
sub
dec
cmpsl
pop
mov
add
in
mov
jno
xchg
xor
leave
mov
testl
xor
popa
scas
call
jg
cmp
ds
and
movsb
cmpsl
pop
inc
pop
jle
cwtl
pop
cld
dec
cmp
push
insl
lock
test
xchg
mov
push
mov
fistps
dec
in
push
sub
cmp
mov
imul
lea
sti
inc
fistpl
xchg
leave
jno
cmpsb
add
or
jne
sub
mov
in
inc
mov
mov
or
test
xlat
in
sbb
movsb
push
std
addr16
repz
mov
mov
dec
xchg
pop
sbb
outsl
test
and
pop
jl
loop
jg
mov
inc
xchg
in
lret
repnz
pop
xor
das
dec
xor
inc
cli
cltd
sbb
into
pushf
rcpps
into
jbe
pusha
lea
jge
hlt
pop
adc
adc
imul
outsb
sbb
dec
xchg
mov
jp
pop
gs
cmp
jns
pop
repnz
mov
in
sbb
lret
and
inc
cmp
cmp
stos
lcall
or
in
dec
shlb
cmp
lds
imul
loopne
sbbb
shlb
addr16
pop
lock
jp
jg
and
cmp
sbb
push
add
out
mov
mov
push
xchg
inc
loopne
mov
nop
sahf
in
pop
xor
aam
and
jnp
and
mov
int
icebp
in
dec
shl
pop
iret
jmp
mov
jbe
lret
popa
add
stos
aas
sbb
dec
push
mov
aaa
movsl
or
out
dec
lea
mov
pusha
cmp
and
add
pop
inc
ss
sarb
xor
xor
mov
xchg
shrl
sub
push
shll
jnp
and
sub
add
stos
jns
jecxz
add
push
or
andb
pop
clc
mov
loope
mov
loop
ficoml
jl
cmc
aas
sbb
lret
and
pop
jno
enter
pop
xor
jg
inc
mov
lock
sbb
movsl
xchg
out
dec
mov
fcmovnu
les
pop
push
push
mov
sahf
scas
sub
lds
cmp
mul
add
imulb
call
push
xchg
ljmp
sub
js
xor
inc
xchg
pop
shrl
adc
jns
dec
or
push
jle
cmp
push
adc
xchg
xchg
ss
xchg
add
cmp
jl
aas
test
fs
dec
jle
xchg
dec
dec
cs
test
out
jle
lds
lret
inc
push
in
jae
push
cmp
dec
fistpll
jb
dec
ret
cmpsb
lock
std
xor
arpl
ds
insl
fnstcw
insb
cltd
js
pop
mov
pop
inc
sub
fcos
pop
test
fwait
jb
cmp
and
dec
jle
inc
xchg
test
xchg
sub
dec
dec
and
dec
enter
stc
rcrl
rorb
dec
and
arpl
hlt
cwtl
nop
dec
das
mov
outsl
adc
dec
xchg
mov
in
dec
pop
or
movsb
xor
fdivl
jle
fwait
push
into
inc
repz
ds
loop
int3
pop
inc
cltd
into
aam
out
sub
or
inc
insb
jl
cli
sub
je
in
adc
mov
push
dec
out
mov
jb
jle
pop
sub
jle
cltd
xor
aam
mov
jb
dec
jle
mov
sbb
int
fbld
fdivp
xor
inc
orl
scas
out
into
movsb
dec
fmul
jecxz
in
iret
xor
jne
adc
mov
xchg
outsl
jmp
dec
mov
fcomi
push
jg
adc
inc
ds
lock
inc
fstps
push
pop
xchg
adc
jl
dec
dec
adc
aam
loopne
push
mov
hlt
cmp
sub
pop
xor
fwait
in
ljmp
test
cmp
cld
push
push
std
jmp
fisubrl
movsl
cmp
sub
pop
mov
inc
inc
mov
fsubs
fidivrs
mov
add
jp
notl
test
loop
sub
xchg
ljmp
addr16
adc
lahf
dec
sbbb
mov
sbb
cmpsb
das
mov
inc
add
stc
push
mov
jno
enter
jnp
dec
inc
xchg
sbb
xor
jbe
dec
jns
call
and
nop
andb
lcall
dec
test
xchg
dec
cmp
pushf
ljmp
cmp
movsl
aaa
dec
cmpsl
cmp
shll
test
js
push
add
cmp
lahf
repz
aas
fiaddl
or
push
dec
mov
push
pusha
dec
inc
jp
frstor
dec
jg
add
push
outsl
inc
shlb
dec
jg
and
push
mov
cmpsb
fbld
jle
mov
dec
out
in
into
dec
sarb
pop
lods
dec
push
aad
stc
out
movsb
test
cmp
outsl
lahf
push
bnd
test
mov
shlb
adc
sbb
into
in
jb
mov
test
filds
shlb
inc
push
pop
cmc
testb
jo
cld
dec
push
mov
test
cmpsl
out
dec
out
add
cmpps
sahf
or
jl
jae
push
loop
push
idivb
cmc
sub
inc
jg
sbb
mov
sub
jns
inc
mov
stc
lds
icebp
por
ret
cmc
add
mov
ret
and
inc
xlat
pop
ss
push
jb
enter
out
and
pop
xor
les
aas
xchg
mov
push
xor
into
adc
ds
sub
mov
xchg
mov
sub
aas
mov
leave
sbbl
movsb
in
cmp
lods
push
into
shrl
cmp
inc
mov
add
lods
sarl
inc
cmp
cmpsl
pushf
mov
xor
push
out
push
inc
jmp
sub
cmp
ret
in
xchg
mov
mov
jb
jnp
mov
mov
int
in
mov
movsb
adc
repnz
add
mov
mov
idiv
test
mov
or
lods
xchg
decl
or
daa
mov
push
scas
mov
jo
xor
and
std
pop
and
adcl
adc
jecxz
fstps
mov
imull
inc
sbb
inc
ret
jnp
ficomps
dec
inc
jle
dec
movsb
lcall
ss
jle
adc
out
jmp
gs
dec
pop
loopne
lret
dec
repz
push
xor
fldenv
aam
sbb
push
js
shrl
aaa
dec
jbe
cwtl
jp
cmp
push
out
cmp
fwait
iret
loop
xlat
xchg
lods
stos
in
iret
lret
out
idivl
out
shll
fwait
and
cmp
test
cmp
out
push
sahf
aas
stos
sub
pop
icebp
xchg
mov
jp
dec
mov
xchg
push
ret
dec
pop
adc
add
mov
mov
push
or
enter
jle
lods
popa
fwait
aam
scas
pop
aaa
xlat
dec
popf
xor
adc
cmc
pop
pop
xor
pop
push
push
push
pop
in
mov
aam
or
or
das
sub
lahf
int3
aas
or
lret
cmp
mov
aam
adc
xchg
test
je
cld
mov
add
sub
out
rorb
xor
jle
jp
dec
mov
mov
mov
fsubrs
jbe
add
ss
pop
jle
stos
xchg
mov
push
mov
popa
lock
or
mov
popf
sub
and
scas
pop
jo
adc
inc
mov
into
mov
xor
jle
andl
les
roll
jl
and
xchg
scas
out
push
in
xchg
stc
ds
dec
push
pop
mov
cs
xlat
shrl
leave
dec
das
add
or
mov
dec
xor
popa
fidivrs
mov
mov
in
fst
push
dec
mov
mov
cwtl
mov
lds
dec
push
sbb
mov
xchg
mov
aam
dec
jle
push
adc
pop
pop
daa
or
xor
pop
sarb
or
and
call
inc
jb
cmp
xlat
sub
aad
pop
dec
roll
push
jns
movl
into
cld
mov
in
jb
push
add
push
testb
xor
mov
and
jns
mov
subb
imul
bound
pop
xchg
rclb
test
sbb
loopne
dec
sbb
mov
and
repnz
cmp
rcrb
movsl
inc
test
loopne
dec
int
bound
sarb
dec
jge
pop
add
mov
outsb
jnp
and
mov
mov
mov
mov
cld
or
inc
int3
jnp
cmp
jb
int
sahf
dec
loopne
jg
popa
sub
sbb
or
gs
adc
jle
xchg
fisubrl
inc
out
push
lods
mov
int3
xor
cmpsl
mov
add
mov
cld
aad
pop
adc
in
aam
dec
pop
inc
hlt
std
pop
push
arpl
int
jbe
xchg
mov
and
fs
push
push
lahf
out
out
mov
or
ss
movsl
mov
jl
shll
sub
es
jo
movsl
xchg
dec
ret
out
add
pushl
sbb
lock
dec
xchg
inc
lods
pop
dec
test
mov
jbe
mov
dec
roll
jl
mov
iret
mov
inc
dec
jo
dec
je
loope
js
pop
xor
cmp
aaa
push
popa
inc
jge
mov
dec
repz
push
lret
stc
mov
jle
pushf
mov
push
nop
sbb
cmpsl
jg
imul
push
cmp
add
mov
je
dec
push
pop
sub
ja
or
add
imul
test
sub
rorl
jo
test
hlt
push
aad
xchg
pop
sub
inc
xchg
ret
sbb
test
andb
test
dec
and
fsub
push
jg
add
shl
pop
nop
push
data16
mov
inc
mov
sub
es
movsb
mov
cmp
insl
xor
or
pop
mov
ret
fists
xor
ss
mul
cmp
hlt
push
and
dec
sar
sbb
dec
sub
es
iret
ds
jae
jg
loope
int3
xchg
jl
xchg
jns
cwtl
dec
into
cmpsb
cmpsl
fwait
pop
outsl
jl
arpl
jg
icebp
lcall
inc
lds
jns
add
xor
cs
adc
sbbl
sub
sti
or
push
dec
mov
push
inc
pop
into
add
adc
pushf
sub
movsb
stos
mov
pop
dec
pop
ja
dec
or
push
cmp
stos
sarb
jmp
ffree
dec
jg
out
fcom
adc
scas
inc
push
adcl
ja
dec
hlt
mov
jo
dec
out
xchg
or
dec
jmp
pop
popf
movsl
adc
cmp
push
shlb
addr16
hlt
imul
add
dec
out
sub
inc
dec
push
lret
xchg
sub
nop
xor
aam
stos
mov
adc
cmp
inc
and
sub
leave
push
pop
dec
dec
rcrb
push
and
ss
adc
orl
movsb
rcrb
add
ja
xor
aas
dec
sub
jl
jns
nop
or
in
sahf
fwait
add
jl
stc
fs
subl
jp
pop
lods
shrb
sbb
out
or
aaa
xor
out
pushf
daa
jg
cld
add
shrb
pop
inc
das
lahf
insb
mov
xchg
dec
adc
jo
sti
mov
and
or
aaa
aas
add
sub
and
aad
xor
lock
adc
aam
repz
dec
cli
sbb
fiadds
cmc
sbb
pop
inc
fisubs
mov
fldenv
jl
out
pop
fmulp
mov
sub
leave
bound
add
addr16
cmc
pop
jne
mov
xchg
push
cmp
pop
jae
sbb
jae
repnz
sti
clc
xchg
mov
ds
or
cmp
push
sahf
lods
adc
lret
lds
add
pminsw
jle
add
mov
fidivl
dec
addl
cmpsl
cmp
jae
filds
inc
inc
fucom
fidivrs
jl
pop
loopne
inc
push
nop
mov
push
jl
out
shl
jnp
mov
cld
push
into
aaa
and
fyl2x
sbb
fdivrl
mov
mov
xor
mov
cmp
cmp
jl
pushf
cmp
decl
cmc
jne
scas
aas
cltd
xchg
push
xlat
decb
div
out
xor
fs
lods
mov
sbb
xlat
in
daa
or
mov
xchg
hlt
jl
enter
mov
inc
xor
mov
mov
pop
mov
or
and
rolb
mov
or
or
dec
test
jl
out
mov
xorb
mov
dec
mov
dec
add
and
dec
xor
or
scas
jl
adc
sub
ljmp
test
test
out
pop
cmpsb
out
jl
popa
movb
sub
ficompl
pop
jle
sbb
lock
pop
out
mov
rorl
cltd
or
and
out
xchg
call
push
loop
cmc
dec
push
sarl
pop
inc
jg
jbe
enter
mov
dec
dec
insb
inc
test
pop
mov
imul
sub
xor
adc
push
subb
movsl
sahf
outsl
cli
xchg
xchg
and
daa
sub
xor
clc
ljmp
pop
lret
xchg
mov
cmp
dec
loope
sub
sub
push
loope
jge
adc
orb
sub
xorl
into
mov
dec
sub
lret
xor
or
push
in
xor
not
pop
xchg
in
xchg
arpl
aas
enter
stos
mov
dec
rcll
inc
push
cld
test
fstpl
dec
sub
mov
mov
dec
xchg
push
add
es
rorb
sbb
cld
cmp
push
dec
pop
push
xchg
out
imul
or
cmp
mov
mov
adc
iret
pushw
adc
add
pop
jmp
dec
or
mov
dec
cld
jl
push
push
test
mov
lods
js
mov
popf
push
jbe
dec
fwait
inc
mov
mov
es
mov
cmp
mov
adcb
jp
les
dec
ss
cmpsb
imul
inc
pop
cmp
xchg
popa
jae
sub
fcompl
push
std
out
out
adcb
dec
aas
lods
mov
or
nop
clc
xor
movsb
les
push
cltd
lods
cmp
dec
xchg
sub
hlt
dec
xlat
ljmp
dec
pop
mov
adc
mov
dec
movsb
jge
cs
mov
mov
lea
dec
sub
mov
sub
jbe
mov
fiaddl
dec
ficoms
mov
cmpsb
repz
xor
mov
jne
dec
adc
mov
push
lea
js
shl
or
aaa
dec
cmp
xchg
mov
or
jb
dec
push
dec
push
add
inc
mov
adc
das
outsb
repnz
leave
lcall
dec
movsl
nop
movsb
fs
dec
rorb
push
push
lock
adc
pop
lret
mov
jno
sub
iret
fcoms
test
dec
ljmp
cmp
popa
sbb
dec
mov
or
lcall
ror
popf
int
in
pusha
mov
enter
in
shrb
dec
dec
stos
test
lret
xchg
add
dec
lret
sbb
fs
jle
sbb
push
rcrl
or
inc
adc
dec
in
cmp
gs
cli
cmp
xor
pop
xchg
dec
test
push
inc
lds
xor
in
xor
mov
inc
cmp
dec
hlt
mov
cmpsl
push
test
mov
je
mov
or
xchg
lahf
inc
xchg
mov
inc
dec
stc
mov
sbb
mov
loop
sub
lret
mov
cmc
add
pop
das
xor
push
dec
jg
xchg
sbbl
popf
shll
adc
fcmovnu
cmp
sub
fwait
inc
ds
rcrb
dec
fldcw
call
push
cmpsb
inc
out
cmp
jb
mov
mov
jo
dec
out
inc
jb
cmp
inc
sub
dec
push
lret
movsb
iret
out
fmul
mov
cmp
xchg
and
add
scas
and
jnp
lret
jg
int3
aad
loope
xchg
push
cmp
rol
daa
ds
movsb
in
outsb
mov
mov
xchg
sub
jb
loope
add
lret
js
int3
mov
xor
inc
pop
icebp
in
out
inc
and
data16
push
jle
dec
dec
and
sub
sub
xchg
fsubrs
xchg
and
pop
rcll
pop
inc
das
push
jge
cmp
sbb
in
dec
fcomps
int3
mov
dec
dec
cmp
inc
inc
lret
push
fists
xchg
push
mov
push
shrb
mov
test
out
dec
aaa
mov
int3
arpl
jle
shlb
cmp
rol
aas
cmp
aaa
inc
inc
ljmp
xlat
adc
mov
push
fs
cld
dec
push
adc
pop
addr16
clc
cmp
inc
add
aam
sub
mov
push
push
iret
dec
sbb
inc
cli
test
push
dec
lahf
xor
mov
popa
les
jne
push
xor
or
jge
jg
insl
test
stos
dec
dec
pop
add
jbe
fcompl
mov
adc
ja
cltd
imul
test
cmpsl
fwait
pop
pop
inc
mov
cwtl
xor
les
cmp
dec
jg
ss
imul
jl
mov
dec
sbb
stos
mov
pop
xor
jle
push
pop
add
inc
push
sbb
ds
fsubrl
cmove
movsl
dec
push
clc
mov
lret
xor
dec
add
outsb
push
int3
shrl
jle
sub
pop
aad
fsubr
iret
inc
insb
mov
dec
aaa
jl
pop
sub
dec
push
xorl
xor
hlt
dec
inc
ljmp
dec
mov
in
mov
je
nop
mov
mov
int3
xor
divl
push
cmp
pop
dec
push
inc
sub
sub
mov
mov
adc
in
push
ret
repz
subb
sub
dec
shrl
fimuls
fcmovne
xchg
dec
jge
in
mov
inc
pop
in
mov
jmp
sbb
out
sbb
aam
mov
test
xchg
xchg
jno
cli
dec
movsl
cmc
aam
xor
sub
jle
in
es
cmpsb
sar
and
imul
les
inc
lahf
fcmovnu
stos
jne
inc
xchg
fdivr
dec
or
mov
mov
in
push
mov
dec
adc
mov
cmp
cmp
aam
xlat
mov
push
addr16
cltd
and
pop
mov
call
xchg
push
jno
sti
mov
pop
mov
xchg
fldt
dec
dec
inc
lahf
inc
mov
inc
or
xchg
sbb
and
jecxz
push
xchg
lret
sub
in
sbb
bound
inc
mov
dec
or
mov
push
lods
xor
out
pop
adc
and
cmc
push
pushf
insb
hlt
pop
jg
adc
mov
xlat
inc
pop
in
pop
sub
in
das
xchg
xchg
xchg
pop
push
mov
movsb
cmpsl
setbe
jl
xor
cmc
jno
lods
daa
and
mov
imul
and
dec
adc
sarl
mov
pop
lcall
inc
adc
xchg
mov
cmpsl
mov
repnz
cmc
xorb
jl
cmpsl
mull
xchg
pop
inc
dec
or
bound
mulb
mov
push
out
pusha
jle
adc
xlat
rolb
xchg
sbb
out
or
dec
mov
in
outsb
or
popf
cwtl
sub
scas
xlat
mov
call
sub
int3
jl
jbe
add
xchg
dec
rolb
iret
test
or
aaa
mov
or
test
fxam
iret
mov
dec
das
add
out
icebp
cltd
xlat
add
dec
mov
adc
arpl
mov
inc
mov
push
pop
popf
lahf
out
dec
mov
mov
outsb
mov
lock
adc
rcl
mulb
push
pop
test
lcall
loopne
mov
pop
loope
mov
lcall
xor
test
mov
inc
sahf
jbe
call
push
iret
je
inc
bound
popf
dec
add
push
dec
mov
and
mov
sbb
mov
outsl
flds
or
sarl
xor
enter
xor
hlt
outsl
sub
inc
cltd
fsubs
iret
movsb
xchg
or
cmpsb
or
cmp
mov
loop
gs
adc
xor
adc
mov
push
dec
jl
adc
dec
scas
xor
into
adc
xor
xchg
bswap
jle
and
repz
xor
xor
sub
adc
loopne
sbb
sub
outsl
jg
out
sti
xor
xchg
pop
push
add
lea
fldenv
lahf
pop
xchg
jg
jo
scas
pop
movsl
xchg
mov
shl
call
or
repnz
pop
push
lds
sub
jp
xor
hlt
xchg
cmp
sbb
rorl
cmp
or
jns
mov
cmp
lcall
push
popa
jmp
in
mov
push
push
cltd
sbb
mov
into
sbbl
fwait
movsl
movsb
cmpsb
dec
iret
js
xchg
pushf
lds
jb
movzbl
aam
push
xchg
dec
xor
shlb
jp
sahf
je
fbld
xor
inc
jb
arpl
sub
jl
dec
inc
cmpl
in
lea
rorb
mov
xchg
and
stos
dec
xchg
aad
js
dec
iret
xchg
and
xchg
cmpl
mov
mov
mov
lea
sbb
jl
and
dec
call
jnp
dec
imul
fisttpll
dec
rorl
sub
push
push
or
cmc
into
pop
ret
fmuls
into
mov
lret
inc
xchg
fwait
cli
adc
idivl
jecxz
xchg
dec
cmp
dec
inc
mov
sub
pop
mov
insb
lock
cmp
mov
dec
arpl
push
dec
cltd
mov
dec
inc
dec
je
jge
imul
mov
in
ja
cs
dec
leave
xchg
popa
fucomip
mov
dec
imul
mov
dec
and
cmp
cltd
inc
cmc
or
popf
js
mov
dec
mov
pslld
std
mov
jg
inc
out
pusha
jo
das
push
xchg
xchg
loop
insl
lods
sbb
imul
sub
in
mov
dec
or
adc
add
dec
dec
insb
test
jno
andb
dec
cmp
xor
loope
sbb
ss
and
xor
scas
in
sbb
mov
dec
pop
sub
push
push
jb
pop
call
es
mov
fnstenv
sub
scas
xor
adc
cmp
xor
sub
mov
cmp
iret
dec
cmp
out
mov
push
inc
arpl
push
ljmp
cmc
repnz
stos
incl
xchg
push
jl
inc
aas
nop
push
aas
inc
jge
pusha
lds
je
inc
scas
sahf
jle
mov
and
push
jg
inc
icebp
int3
repnz
pop
add
dec
push
loope
mov
popa
js
inc
mov
mov
loop
out
fsubrp
lcall
repz
or
sub
adc
mov
add
repnz
adc
mov
aaa
ja
daa
movsl
dec
mov
aas
sub
mov
popa
iret
mov
dec
inc
cmpsb
mov
jae
push
dec
sub
mov
inc
dec
dec
daa
inc
and
sahf
xor
in
push
pop
lahf
int3
repz
inc
addl
jne
popa
fwait
dec
iret
or
out
jle
xchg
ds
inc
inc
or
pop
dec
je
dec
iret
adc
cmp
ljmp
bound
inc
mov
out
arpl
jecxz
xchg
outsl
shrl
xchg
cmp
inc
les
dec
int
jae
lea
mov
pop
jns
pop
scas
push
mov
jmp
ljmp
push
divb
and
and
xor
cld
aad
addr16
popl
popl
orl
sbb
outsl
adc
sbb
mov
or
xchg
pop
push
push
bound
push
jns
outsl
imull
lea
jnp
outsl
js
into
cli
pop
mov
push
pop
nop
repz
dec
mov
addr16
pop
adc
push
xchg
dec
popa
or
nop
pop
clc
push
mov
dec
int
pop
add
out
and
jle
sbb
adc
push
fstl
mov
sahf
jb
dec
int3
push
mov
and
mov
cwtl
movsl
dec
test
adc
pop
aaa
imul
lret
sbb
push
xchg
clc
dec
bnd
ror
push
cltd
dec
daa
pop
push
cmp
jbe
dec
ja
lahf
sbb
hlt
pop
mov
in
jo
add
ret
xchg
clc
jnp
pop
int
das
mov
mov
lahf
repz
mov
mov
in
mov
dec
mov
inc
xor
dec
out
add
enter
pop
outsl
cmp
dec
dec
test
mov
dec
mov
test
orl
outsl
sub
adc
ret
ljmp
dec
in
sbb
dec
mov
jb
sbb
stos
push
dec
pushf
push
loope
cld
fimuls
inc
jns
mov
push
in
dec
subl
inc
dec
mov
add
insb
cwtl
dec
xor
dec
or
adc
adc
xor
inc
add
scas
jp
push
adc
cmp
popf
in
dec
ljmp
clc
xlat
jp
cli
dec
loope
adc
jne
cwtl
or
pop
loop
fcoms
jb
out
enter
inc
test
or
or
loop
shll
mov
into
out
imul
sarb
fbstp
dec
sahf
lds
pop
dec
ds
or
in
or
pop
dec
adc
add
lds
dec
cmp
cmpsb
mov
fstpt
sub
push
test
iret
cwtl
xor
jl
test
int3
aaa
jmp
dec
dec
push
inc
pushf
pop
dec
bound
dec
push
mov
fiaddl
dec
inc
dec
push
jg
es
mov
sub
xor
jl
hlt
out
das
or
mov
cli
dec
pop
cmpb
movl
cmp
xchg
outsb
sbb
rclb
fidivs
int
inc
cwtl
ljmp
dec
mov
or
lds
ja
mov
ds
data16
xor
orl
dec
xor
mov
push
push
push
and
sbb
adc
cwtl
leave
cmp
je
dec
fistpll
cs
inc
or
loopne
push
cmp
dec
pop
push
rorl
in
cmpb
sub
daa
xchg
jne
jp
add
rorl
and
pop
inc
scas
jg
xor
jp
ret
add
rcll
fucompp
xlat
daa
adc
js
outsl
es
dec
sbb
outsb
lcall
add
cmpsl
xor
insb
mov
test
je
ljmp
pop
lods
mov
or
push
sub
and
into
pusha
imul
jl
mov
cmc
mov
sbb
jbe
fidivrl
inc
mov
mov
shll
sub
dec
jg
je
jle
cli
mov
movsl
xchg
pusha
out
push
mov
sbb
dec
arpl
xor
and
adc
lahf
sahf
and
stos
movntps
loop
in
das
and
cmp
xchg
lods
and
push
dec
testl
pop
sbb
push
test
pop
mov
sub
xlat
jmp
cmp
rclb
loope
repz
xor
stc
lock
push
outsl
fstpl
sbb
mov
cmp
xchg
mov
xor
add
mov
push
jle
jno
mov
insb
in
jl
xor
mov
scas
iret
dec
ds
dec
rcrb
push
ss
lods
dec
into
jl
daa
ret
adc
sbb
lea
iret
pushf
push
loope
cmpsw
rcr
scas
sahf
dec
call
adc
mov
xlat
mov
repz
adc
dec
aad
popa
mov
mov
addl
aas
dec
es
ljmp
mov
sti
gs
jae
outsb
sbb
dec
inc
adc
loope
mov
inc
inc
sub
in
lea
and
mov
pop
addb
dec
cmp
xorb
inc
dec
sub
cmc
mov
sti
shlb
or
cmp
out
mov
cmp
mov
mov
mov
mov
out
es
mov
jo
inc
add
push
and
fs
sub
pushl
in
into
pop
xlat
pushf
jle
shll
dec
aaa
in
scas
gs
pop
cmpsb
aaa
imul
dec
mov
jmp
psubq
xchg
sub
mov
or
dec
push
sub
xchg
push
push
sbb
mov
das
jg
out
das
pop
jle
outsb
cmp
cmp
cli
lods
ret
push
jns
sbb
enter
cltd
push
or
push
mov
dec
xor
push
aam
xchg
xchg
sub
inc
cmpsl
out
fmull
icebp
lret
ret
jg
fidivl
cld
xchg
mov
gs
out
movsb
das
inc
outsb
out
fistpll
adcl
insb
adc
sub
jmp
aas
leave
js
jg
push
jno
dec
orb
rorl
push
dec
push
repnz
call
cmp
sub
xchg
sub
and
out
sahf
pushf
mov
inc
ja
scas
jle
inc
cmp
xchg
aaa
cmc
cld
mov
mov
jae
outsb
sbb
cmp
ss
inc
dec
scas
repz
add
mov
sahf
mov
shlb
dec
push
inc
mov
daa
mov
adc
push
inc
jle
mov
mov
shlb
fnsave
shl
dec
enter
xchg
cmp
addb
xor
test
mov
push
cli
pop
dec
cld
or
mov
sarb
or
pop
fwait
pop
iret
pop
mov
mov
dec
mov
jg
cs
jno
testl
lret
pusha
cmp
cs
scas
pop
or
cmp
dec
mov
add
icebp
ret
jb
push
out
mov
add
dec
jae
arpl
inc
mov
bnd
add
jp
xchg
cmpsb
cmp
enter
jg
xor
xor
jbe
push
gs
xchg
push
aaa
cmp
fsubrl
mov
sahf
out
jg
cmp
sub
mov
jge
inc
mov
mov
mov
adc
inc
add
push
test
mov
je
jmp
sbb
repnz
stc
mov
movsl
jb
ja
jg
xor
decl
mov
sub
xchg
inc
scas
and
push
sbb
js
jmp
sub
scas
adc
jl
testl
repnz
mov
insl
jns
fstpl
into
dec
ljmp
icebp
in
dec
and
stos
mov
out
das
push
ljmp
pop
mov
std
into
add
sbb
dec
pop
ljmp
lahf
or
inc
rcrb
xor
or
mov
inc
scas
xchg
jae
out
lret
fwait
xchg
cmp
xchg
add
push
fnstcw
xlat
dec
mov
imul
dec
xor
icebp
ds
jns
or
xor
xor
gs
dec
or
push
lds
xor
pop
out
cli
mov
idivl
jle
mov
fidivs
mov
lret
call
cmp
push
xlat
jne
mov
mov
daa
jp
fmuls
mov
insb
popl
jne
in
or
sbb
inc
test
xchg
movsl
xchg
into
loop
dec
jnp
rol
add
pop
inc
dec
or
pop
mov
dec
ljmp
lock
in
pushf
mov
push
add
stc
dec
out
inc
lea
push
mov
dec
pop
fdivs
mov
jle
data16
pop
add
push
and
into
out
pushf
lret
sub
jae
cmp
scas
lret
aad
inc
adc
sbb
dec
or
xchg
jnp
inc
dec
jg
outsl
scas
mov
mov
jp
loope
push
cmpl
data16
cmp
cmp
dec
fs
inc
in
les
sarb
inc
mov
js
jge
lret
push
ret
gs
inc
mov
jg
sub
xor
popa
xchg
sub
jge
mov
rclb
aam
out
xchg
sub
lds
adc
nop
mov
repz
andl
jl
es
inc
xor
mov
iret
ret
pop
fildll
in
repnz
out
jge
aam
shrl
fldl
xchg
pop
push
pop
dec
jbe
or
sub
popf
jmp
dec
mov
iret
pop
jns
les
push
cmp
jmp
stos
mov
pop
mov
sti
aad
pop
jle
mov
xor
pop
outsb
xchg
movzbl
leave
mov
inc
sti
ljmp
mov
mov
loop
cmpsb
out
fwait
pop
xchg
inc
sub
xor
sbb
or
xchg
adc
mov
dec
int3
pop
inc
xor
sbb
dec
js
cmc
inc
in
jle
dec
sub
pushf
shrl
shll
imul
dec
cmpsl
in
loop
dec
rcr
jp
insb
test
jbe
push
cld
fmuls
outsl
xchg
cmc
icebp
aas
scas
popa
or
push
push
mov
into
out
xchg
icebp
jp
sub
inc
jle
dec
cmc
jg
pop
outsl
inc
movsb
fwait
out
xchg
adc
jl
inc
pop
add
sub
or
ds
pop
cmp
xchg
ret
inc
into
or
fmull
test
mov
jae
pop
add
adc
adc
jle
and
nop
sbb
mov
dec
stc
sub
jecxz
jle
mov
fcomp
ror
and
outsl
cs
jle
inc
push
out
xchg
xlat
adc
add
fwait
and
add
movsb
dec
push
in
les
cmp
loop
pop
je
popl
dec
xor
push
sub
out
lock
jl
lock
aaa
fdivrs
cs
daa
into
sbb
outsl
shll
pop
stc
sub
pop
mov
lods
call
jle
jl
adc
cltd
add
fs
leave
or
int
jne
andl
xlat
iretw
cltd
inc
je
inc
sbb
lahf
sbb
inc
cmp
ret
in
inc
insl
out
push
lods
mov
aaa
stc
bound
dec
out
or
rorb
push
sahf
ljmp
jns
xchg
add
stos
call
into
test
lea
push
push
nop
shl
push
jb
dec
mov
fldcw
adc
bound
mov
inc
fimull
mov
outsb
inc
mov
stos
pusha
into
shrb
fisttpll
rep
popf
testb
shll
xor
sub
push
mov
sti
pop
and
dec
xor
xchg
push
dec
mov
cwtl
leave
jb
dec
and
jne
mov
ret
adc
mov
mov
dec
in
das
out
pop
push
gs
fiadds
dec
movsl
icebp
scas
clc
sub
or
std
scas
lods
dec
dec
cltd
pop
jne
stos
cli
jmp
clc
pop
mov
push
mov
xchg
cmc
push
mov
inc
stos
mov
sahf
sub
dec
adc
out
xor
jmp
add
mov
movsl
leave
fcomps
dec
inc
lret
adc
push
dec
bound
mov
and
aad
xchg
sub
sub
dec
or
mov
inc
dec
sub
dec
xchg
adc
xor
pop
or
scas
dec
packssdw
adc
ret
mov
mov
add
xchg
dec
dec
cwtl
out
ret
pop
or
mov
scas
ja
scas
cli
adc
pop
cmp
xchg
mov
mov
jle
popa
lods
mov
and
jmp
stos
sub
addr16
mov
into
aad
std
dec
sbb
in
test
cmp
stc
xchg
jno
fbld
mov
iret
rcll
xchg
push
push
xchg
fisubrs
fdivrl
das
stos
xor
dec
jle
popf
push
stos
jns
lds
mov
inc
int
xor
pop
jl
dec
je
push
aam
or
rorl
gs
cmp
mov
jle
mov
cmpsb
cli
mov
cmp
nop
xchg
insl
ds
ret
pop
xchg
jo
xor
dec
pop
push
jle
decb
test
out
rolb
imulb
xchg
pop
and
pusha
shrd
adc
mov
inc
sub
mov
push
and
jg
mov
xor
sbb
ret
mov
sub
push
int
fwait
call
push
loopne
fldt
lret
or
and
inc
lahf
jno
mov
mov
cmp
pop
call
mov
call
fs
sub
add
subb
data16
bound
jl
daa
dec
add
fnsave
sbb
into
cmp
pop
ja
rorb
stos
daa
add
and
int
fs
jo
push
pop
cmc
fsubrs
popf
roll
in
ljmp
shrb
dec
cmc
fcoml
mov
jle
or
add
cmpsl
ret
adc
addb
cli
pop
and
iret
mov
inc
fsubrp
dec
repnz
jle
fiadds
fwait
iret
into
ds
xor
and
dec
mov
jle
push
mov
pop
adc
xor
ss
or
mov
mov
mov
addr16
mov
jns
mov
dec
movsb
lcall
jbe
scas
addr16
call
xchg
cld
dec
daa
mov
dec
in
fsts
pop
cmpsb
rorb
sub
push
dec
jnp
psrlq
mov
jg
adc
xchg
xchg
pop
dec
in
fcomp
cmp
inc
fsub
jge
sub
xchg
mov
pop
popf
fwait
dec
or
pop
mov
shlb
loop
dec
mov
xchg
pop
lods
pop
dec
out
popa
jno
test
cld
arpl
dec
adc
dec
ds
sbb
inc
dec
xchg
inc
out
pushf
mov
imul
or
add
xchg
out
xor
shlb
lods
ret
lds
leave
repnz
adc
cmpsl
inc
aaa
sub
aad
add
sahf
iret
subb
sub
jl
pop
repz
mov
jbe
mov
pop
cmpsl
fimuls
imul
inc
iret
in
jecxz
or
loopne
and
pop
or
inc
dec
xor
mov
repz
sub
iret
xchg
fwait
jns
lds
and
pop
xchg
fstl
imul
mov
or
ljmp
call
pushf
inc
fadds
les
cmp
pop
call
insb
adc
aam
cmp
xchg
sbb
jl
lods
fisubrl
cmp
icebp
int
mov
adc
mov
jg
or
inc
add
pushf
fimuls
in
push
sub
cmp
push
bound
cmp
negb
scas
mov
fsubs
movsl
inc
stos
jp
repnz
add
out
lods
or
xor
mov
push
mov
ljmp
test
aaa
rcr
ss
jle
fwait
jae
xor
aam
inc
mov
push
stc
and
sbb
pusha
loopne
cmc
fisttpll
loopne
in
repnz
xchg
xor
ljmp
int3
scas
jnp
ret
adc
jecxz
inc
test
pop
push
add
imul
adc
sahf
xlat
lds
push
push
jle
cmp
xor
jno
jne
pop
adc
icebp
imul
push
push
addb
and
mov
fstpt
jl
mov
inc
xor
add
aam
and
and
jg
popa
lahf
push
ljmp
or
dec
inc
xchg
mov
xchg
outsb
in
decb
mov
enter
cmp
shrl
jg
and
sub
pop
add
inc
sub
sahf
push
and
test
inc
mov
sub
mov
test
and
and
xor
dec
inc
mov
fisubrl
in
mov
jp
imul
dec
or
cmp
jle
xchg
pop
ljmp
sbb
push
push
lret
mov
dec
lret
xor
inc
jmp
iret
faddl
aaa
in
and
jl
sub
push
ret
pop
stos
outsl
inc
inc
cli
popf
in
mov
data16
mov
fmul
les
lock
bound
stos
std
pop
lcall
sbb
imulb
push
popf
cmp
push
push
js
push
mov
iret
mov
or
xor
push
and
push
lret
pop
in
in
adc
aas
sub
add
ffreep
sti
jnp
leave
adc
or
ret
xchg
fistpl
cmc
and
push
inc
idivb
add
out
or
xchg
xlat
dec
loopne
mov
hlt
stos
popa
in
push
dec
adc
popa
or
es
push
sub
inc
outsb
fimull
mov
cli
aas
pop
nop
mov
int
stc
xchg
outsl
addr16
xchg
inc
adc
je
mov
cmp
inc
dec
or
lods
in
mov
fcoml
xchg
xor
or
stos
push
inc
pop
enter
adc
dec
rclb
arpl
mov
push
dec
xor
mov
test
xor
fcomps
cltd
dec
and
imul
or
xchg
mov
mov
xor
push
nop
sub
cs
aas
sub
xchg
jb
and
ds
inc
fnsave
jg
inc
test
and
fbld
loope
sbb
push
cmp
fisttpl
movsl
cmp
xor
lods
jle
pop
and
ficoml
inc
inc
or
aaa
and
sbb
cli
xchg
sub
sub
pusha
movsb
test
and
mov
mov
mov
mov
out
loop
stos
adc
or
and
aas
fistpll
stos
test
jle
dec
std
jg
cmp
sub
jmp
jle
fimull
cmpsl
jl
or
push
jg
jle
scas
inc
or
mov
mov
int3
push
orl
mov
lahf
rep
cmp
xchg
es
jecxz
stos
push
pop
sub
movsb
cmp
imulb
jb
push
lock
jg
repnz
xchg
movsb
lret
and
sti
mov
inc
and
inc
and
jp
and
mov
mov
mov
sub
push
addb
lods
rep
fnstenv
xchg
ja
cmp
and
leave
std
pop
cmp
mov
push
ljmp
fbstp
sub
ret
sub
out
sarw
cmp
xchg
sub
out
mov
rorb
or
or
test
adc
loop
pop
mov
fildll
add
mov
idivl
jbe
movsl
in
cmc
test
pushf
aam
xor
fcoml
cmp
es
into
in
jg
sub
int3
and
ja
mov
sbb
call
out
xchg
mov
and
cmp
adc
cs
cmp
aam
xchg
and
test
ds
insl
sbb
adc
mov
loopne
cltd
fs
jge
dec
aam
dec
fsubs
insb
test
dec
lock
mov
cmpsl
xor
stos
pop
mov
popl
cs
jl
mov
and
lahf
dec
cmp
cmp
jne
shl
inc
push
mov
mov
loope
mov
sub
rorb
pop
pop
pop
jle
push
adc
hlt
mov
jne
dec
shll
aaa
add
add
sub
loope
sub
inc
sti
jl
mov
mov
dec
mov
push
dec
jle
xchg
adc
sub
iret
cmp
rcrl
add
jle
in
push
dec
xor
sbb
arpl
ret
sub
test
xor
jl
lret
cli
rdtsc
out
jle
aad
push
mov
lods
sub
and
jb
lock
popf
std
mov
inc
cmp
mov
xchg
push
xor
lahf
mov
idivb
add
nopl
and
push
cmp
jl
mov
mov
cmp
dec
icebp
pop
arpl
mov
aaa
into
lds
pop
jo
out
sbb
dec
scas
shlb
divb
push
fnstenv
add
jl
imul
add
bound
mov
adc
and
push
movsl
jl
lret
fsubl
cmp
ljmp
sub
dec
push
jle,pn
movl
push
repz
ret
jb
ret
adc
aam
rcrb
iret
pop
ljmp
std
lds
mov
inc
and
les
xchg
divb
pop
adc
movsb
into
mov
pusha
lcall
ljmp
push
dec
mov
mov
sub
adc
jmp
dec
fildl
push
add
in
sub
pop
xor
inc
dec
arpl
ljmp
mov
rcrb
lds
andb
bound
mov
ds
jmp
adc
xor
pop
mov
pop
jno
adc
dec
fmull
cli
fsubs
cld
mov
dec
sbb
dec
dec
add
jl
test
pushf
rclb
inc
in
sub
incb
out
dec
xor
and
insb
shrb
clc
fisttps
stos
fs
fcomp
ret
repz
jmp
outsb
pop
sub
scas
xchg
mov
cmpsb
and
les
xchg
je
adc
imul
ret
jne
push
test
adc
mov
ljmp
jbe
xor
xchg
push
adc
xlat
jl
and
sarb
test
inc
mov
scas
int
mov
pop
fisttpl
jle
pop
mov
mov
pop
mov
fst
sub
pop
push
nop
sub
or
dec
movsb
push
mov
mov
dec
cmp
out
jge
dec
jle
movsb
cmp
scas
cmc
inc
addb
jb
bsf
negb
clc
ud1
mov
repz
les
in
xor
dec
jnp
ret
push
pop
ficomps
xor
insl
dec
add
mov
sbb
push
outsb
ss
icebp
push
sbb
loope
inc
jne
cs
mov
mov
rorl
je
add
xor
cmp
aad
sub
inc
sar
pop
test
iret
mov
sub
pop
cmp
ret
adc
orl
or
xchg
fs
and
push
fmul
dec
dec
jg
jb
ret
fisttpll
sub
mov
adc
mov
dec
mov
ret
out
jne
pop
jmp
lret
jnp
pop
add
imul
cwtl
inc
dec
and
lock
mov
jae
mov
icebp
push
inc
outsl
mov
pop
pop
mov
scas
int3
push
adc
xchg
cmpb
loopne
jo
mov
lahf
mov
push
pop
imul
lret
into
lret
and
dec
add
leave
dec
mov
and
dec
jecxz
dec
pusha
jge
mov
int3
faddl
xchg
cli
dec
mov
push
xor
out
mov
out
xchg
dec
ljmp
xlat
outsl
xor
loope
dec
jecxz
rcrb
stc
into
inc
push
dec
aas
cmc
jmp
cmp
into
mov
aaa
xlat
cs
repz
inc
int3
xor
dec
popf
pop
cmovle
mov
lds
jg
adc
dec
adcb
cmpsb
mov
dec
fcompl
leave
jl
aam
pusha
push
dec
mov
mov
dec
push
push
aaa
inc
cwtl
or
xor
icebp
incb
test
xchg
iret
inc
out
pop
in
rcll
pop
inc
jae
lods
sub
pop
xlat
jl
ss
lret
mov
jae
adc
push
mov
xchg
mov
in
pop
sub
add
test
jnp
add
jl
xor
stos
lea
dec
jg
jle
in
jl
jnp
pop
and
enter
mov
insl
pop
jmp
cmp
xor
jl
mov
and
lea
push
adc
movsb
pop
shrb
pushf
fisttpll
add
adc
jge
push
test
add
push
push
sub
popa
pop
pop
xor
bound
xchg
movsb
push
stc
adc
xor
cmp
mov
add
das
push
cld
xor
mov
jle
in
in
xor
xchg
dec
jbe
cltd
int3
mov
fldenv
jp
push
dec
es
movsl
xchg
add
popf
lods
repz
dec
mov
rcr
inc
xor
hlt
mov
or
dec
xor
loop
dec
mov
dec
xor
das
xchg
push
xchg
or
movlhps
in
dec
add
pop
ljmp
popf
sbb
or
dec
iret
aam
jb
mov
dec
in
jle
arpl
cmp
dec
lea
jge
sbb
js
inc
mov
or
and
mov
movsb
sub
ficoml
xor
sbb
jne
loopw
cmp
dec
sub
inc
test
xlat
dec
aam
in
bound
jecxz
movsb
xor
push
notl
pop
inc
pop
xchg
adc
push
lcall
test
dec
pop
xchg
or
dec
dec
mov
leave
out
imul
push
and
inc
xor
inc
push
jno
out
dec
or
test
dec
mov
aad
cmp
std
test
aaa
movsb
inc
mov
mov
adc
dec
sbb
addr16
sbb
push
lahf
mov
inc
test
int3
clc
mov
pop
dec
rorb
imul
add
addl
mov
and
testl
hlt
dec
das
mov
popa
push
call
mov
imul
dec
jnp
xor
repnz
psubsw
pop
stc
push
jecxz,pn
xchg
adc
push
mov
jne
sub
mov
das
scas
and
dec
sub
mov
or
or
and
stos
dec
sbb
in
popf
sub
pusha
or
jecxz
insb
mov
testb
dec
mov
loop
lcall
push
int3
jae
cmovle
movsl
arpl
sub
push
imul
ljmp
xchg
mov
push
iret
lods
inc
mov
sti
xchg
pop
xor
lods
pmuludq
lret
pushf
in
fildl
fmuls
ss
pop
xchg
testl
int
mov
fsubl
dec
insb
sbb
jbe
adc
jecxz
loopne
xlat
sahf
les
sub
inc
outsb
ja,pt
add
lret
dec
push
sub
repnz
addr16
or
push
xor
xor
popa
dec
or
inc
or
cmp
inc
addr16
rcrb
and
mov
dec
mov
invlpg
sbb
pop
pop
push
sar
xchg
sbb
xchg
aaa
gs
inc
test
mov
lods
shlb
inc
inc
jle
sbb
out
div
push
stos
test
add
push
pop
push
inc
and
or
cmp
mov
mov
jl
pop
dec
mov
add
dec
cmpb
inc
cli
mov
insb
push
jl
arpl
xchg
xor
sbb
cli
cmp
rcrl
stc
cmpb
cs
mov
pinsrw
and
hlt
adc
pop
mov
jge
pop
dec
pop
scas
or
jno
fistpll
add
push
add
stc
sarb
lahf
sbb
mov
pop
jb
dec
loop
and
jle
lods
popf
fistl
mov
mov
dec
das
out
adc
sub
popa
das
inc
inc
dec
in
jg
insl
and
cmc
cs
adc
clc
sub
dec
xor
push
mov
repz
stos
and
ds
mov
mov
gs
push
int3
jl
inc
inc
cli
scas
inc
or
push
jns
sbb
cmpsl
incb
jle
pop
mov
sub
mov
mov
adc
mov
push
and
notl
ss
add
inc
les
test
and
js
fcomip
data16
cld
xchg
outsb
fldcw
sarb
fcoml
push
test
cmc
lods
test
ljmp
cli
push
shr
cmp
jne
sub
sub
outsb
in
jg
adc
pop
mov
pushf
mov
in
arpl
cmp
les
cld
add
outsb
inc
outsb
and
pushf
lds
push
inc
xchg
js
sbb
push
fstpt
mov
cmp
stos
insl
or
push
mov
aas
sub
adc
inc
jecxz
fcompp
dec
mov
dec
jg
sub
cmc
dec
hlt
sub
mov
lock
lods
ret
lods
pushf
or
daa
pop
mov
test
fdivrs
mov
movsl
mov
stos
jl
pop
in
push
mov
nop
mov
dec
rcrb
cmc
xorl
stc
or
negl
test
cmp
xchg
pushf
push
xlat
mov
fisttpl
jl
loop
inc
inc
mov
or
les
ljmp
dec
test
sub
sub
mov
leave
xor
movsl
pop
and
inc
out
and
lret
or
mov
mov
dec
dec
cmpl
xchg
sbbb
inc
and
dec
fmuls
test
call
push
pop
jae
ljmp
sub
jp
lahf
mov
xchg
dec
mov
das
stc
test
loopne
dec
rep
cmp
dec
dec
scas
mov
movsb
xor
mov
dec
fisubrl
movups
bound
mov
and
loopne
push
dec
jmp
pop
out
jbe
adc
jle
xchg
add
test
push
pop
popa
lret
outsb
jmp
inc
dec
daa
out
jo
adcl
dec
pushf
jae
xor
pop
pop
dec
dec
mov
sub
inc
int
inc
andl
push
aaa
mov
cmp
in
lods
mov
icebp
aam
jns
adc
add
pop
push
mov
mov
sub
outsb
enter
fisttps
ret
xor
push
std
fnstenv
fnsave
pop
mov
dec
dec
mov
jo,pn
cmp
sbb
fsubp
or
aad
imul
xchg
cltd
and
fdiv
xchg
iret
icebp
mov
jle
mov
push
pext
adc
push
cmc
sbb
mov
dec
cli
add
mov
sbb
mov
ficompl
cmpsl
push
inc
and
dec
in
scas
jge
out
rol
clc
pop
call
pop
leave
and
jmp
popf
mov
inc
out
xor
mov
test
fimuls
mov
adc
mov
cmpsb
dec
inc
and
in
sbb
sbb
shll
dec
aas
data16
cld
push
jg
addr16
jmp
dec
mov
addl
or
pop
adc
aad
shlb
das
dec
or
adc
dec
jbe
mov
xchg
xchg
cs
jae
dec
mov
ljmp
dec
xchg
pop
mov
cli
sbb
sbb
bound
mov
imul
mov
cs
push
xor
insb
dec
ja
andl
dec
out
and
out
add
inc
shrl
insl
push
xchg
test
or
mov
aad
xchg
dec
lahf
and
ret
dec
orl
aaa
pop
into
xchg
mov
hlt
int3
sub
sbb
fisttps
cmp
mov
cltd
iret
xchg
daa
xchg
pop
dec
es
pop
xchg
icebp
xor
hlt
dec
fcomp
sub
mov
adc
fidivs
sbb
dec
pop
sbb
fs
shll
outsb
add
mov
out
adc
xor
ret
sti
mov
push
arpl
fistpll
mov
dec
xor
jo
aas
push
mov
je
xor
dec
dec
imull
fmul
fisttps
mov
dec
mov
mov
loope
in
mov
aaa
es
dec
push
sbb
add
jge
dec
clc
and
cld
inc
mov
xchg
arpl
insl
fisubrl
mov
outsl
jbe
dec
jmp
in
mov
test
mov
sti
mov
and
mov
and
xor
out
enter
ds
xchg
mov
leave
xchg
push
jge
frstor
lret
mov
stos
ja
jg
cmp
push
out
inc
jl
lahf
das
rolb
jle
test
xor
les
jbe
std
fwait
inc
mov
cmp
mov
pop
pop
push
into
out
pop
adc
jbe
aam
jmp
insl
sub
scas
out
imul
pop
stos
sub
cs
mov
push
fimull
inc
add
and
sub
add
out
xor
jge
pop
fimull
lea
jg
push
mov
int
aam
cmpsb
inc
add
add
ljmp
or
dec
insl
inc
cmp
jmp
cld
pop
jne
mov
mov
push
pop
jmp
sub
fcoml
xlat
ds
lock
dec
inc
dec
pop
in
sub
jb
xchg
movsb
cmp
test
dec
test
and
pop
jle
push
loopne
cmp
mov
lods
xchg
dec
adc
int3
pusha
mov
dec
enter
add
ficoml
mov
roll
je
inc
push
cmpsb
dec
es
jl
enter
adcb
dec
sbb
data16
lea
ss
sub
inc
adc
test
movsl
push
dec
or
adc
gs
mov
rorb
mov
int
cmp
sbb
mov
fucom
lret
sahf
xlat
les
mov
jl
mov
lock
les
int3
nop
sbb
sub
and
xchg
add
push
mov
pop
cli
clc
dec
incb
cli
gs
dec
les
loop
or
pushf
cmp
adc
sbb
mov
cmp
dec
or
fld
cli
dec
lcall
lds
cmp
cs
mov
mov
pop
jecxz
mov
dec
lcall
mov
negl
sub
inc
aaa
dec
outsl
inc
mov
loop
movsb
clc
inc
fidivrl
pop
or
dec
sub
inc
sub
sbb
mov
int3
cmp
mov
pop
dec
xor
mov
ss
clc
test
fcompl
dec
fisubrs
pop
or
inc
add
fucomi
inc
push
jp
rol
fs
popa
sbb
shlb
nop
stc
imull
mov
inc
dec
sbb
adc
push
into
ret
mov
xchg
pop
sti
ss
pop
rclb
sub
pop
xor
ret
loopne
mov
shlb
test
sub
mov
jl
std
adc
xlat
push
les
sarl
in
mov
dec
jbe
icebp
xor
mov
cmp
repnz
add
adc
dec
outsl
pop
fsubl
push
adc
sti
dec
inc
push
sbb
sbb
scas
test
into
jo
mov
ds
jb
push
dec
shll
cmp
xor
aam
or
das
popa
push
pusha
cmp
cld
fs
sysret
push
xchg
adc
dec
xor
push
jle
imul
sub
xchg
inc
aam
xor
cmp
push
jb
and
bound
scas
fiaddl
cmp
fdivl
pushf
ret
out
ljmp
dec
xchg
push
in
ret
movsb
int3
pop
sub
jmp
fs
mov
mov
cmp
inc
jg
stos
mov
lahf
shlb
int3
pop
mov
aaa
add
pop
mov
test
dec
dec
cs
push
pop
xor
xchg
addr16
and
pop
mov
sub
cltd
out
mov
mov
cmp
cld
es
das
xchg
inc
mov
and
add
inc
jo
into
mov
sarl
aas
dec
lds
dec
sub
dec
or
dec
ljmp
jb
ss
outsl
xchg
iret
call
dec
dec
inc
cltd
rcrb
mulb
repnz
push
ret
mov
mov
in
jmp
dec
jb
mov
je
jecxz
cld
ja
adc
dec
push
mov
and
lods
scas
inc
aad
dec
adc
movsb
mov
xchg
jmp
iret
dec
hlt
lcall
jge
xor
frstor
xor
dec
mov
aad
aas
insl
sbb
pop
and
dec
stos
mov
lods
hlt
cmpsl
enter
jb
inc
jp,pt
sub
dec
jmp
jne
push
repz
popw
iret
mov
adc
inc
fmuls
mov
rdpmc
scas
mov
into
mov
ss
adc
adc
rcl
add
mov
xor
out
or
in
pop
scas
lock
mov
addr16
popa
mov
push
jle
and
insl
nop
fidivrs
jmp
mov
movsb
jae
aaa
cmp
lods
out
icebp
cmp
dec
cmp
jmp
inc
jp
pop
cs
arpl
cltd
jle
aad
push
add
sbb
adc
dec
aas
mov
fists
dec
pop
mov
xchg
xchg
inc
add
jl
mov
arpl
jg,pn
in
or
mov
mov
pop
dec
lock
xchg
ds
aaa
cmp
push
mov
shrl
aad
cmpsb
jl
outsl
sti
mov
or
inc
inc
inc
cmp
clc
ljmp
das
dec
cli
ja
add
outsb
pop
push
dec
fs
xor
cmp
mov
or
cmp
loope
outsl
cmp
cmp
jle
shrb
mov
fsubrs
sub
cmp
test
out
cld
adc
xchg
enter
or
bound
jae
and
jmp
push
fwait
push
lock
shr
or
mov
and
shr
pop
jle
fwait
push
imulb
clc
or
lahf
xor
jle
cs
push
xor
push
sysenter
out
adc
push
push
pop
mov
jnp
inc
push
mov
sub
mov
ljmp
bound
daa
dec
jno
pop
xor
testb
dec
pop
cmp
and
dec
sbb
popf
call
sahf
mov
inc
iret
mov
lods
dec
adc
xchg
out
rcrl
jmp
enter
dec
sub
pop
jnp
lret
cld
decb
outsb
jno
cmpsb
sbb
outsl
dec
xchg
mov
std
popf
aam
mov
push
ss
stos
add
sub
inc
scas
jbe
cld
adc
cmpsl
jb
add
jmp
gs
xchg
and
jbe
jge
outsb
mov
repz
adc
in
add
scas
cmp
pop
add
insb
inc
aas
xor
out
test
loop
daa
bound
dec
mov
xchg
adcl
orb
daa
or
dec
aad
arpl
jmp
pusha
dec
mov
aaa
adc
xchg
dec
mov
insl
dec
dec
sahf
or
jno,pt
mov
dec
or
or
jnp
mov
shl
dec
push
loope
inc
xchg
inc
test
xchg
push
mov
es
jno
pop
cmp
jle
and
jns
mov
add
and
ds
shlb
adc
jne
sub
cwtl
into
inc
lcall
push
cwtl
xorl
mov
push
jae
or
sbb
ljmp
jmp
aam
add
jae
ja
jnp
or
outsl
dec
leave
xor
popa
mov
shll
push
cli
fwait
daa
out
out
and
dec
mov
pop
xor
mov
push
incb
or
and
jne
xlat
jbe
mov
lea
das
dec
sbb
mov
xchg
notb
daa
pop
dec
or
pushf
icebp
inc
jp
dec
mov
movsb
scas
fmull
mov
sbb
add
push
addb
popa
aas
pop
shlb
xor
mov
jno
js
add
lock
outsb
sahf
dec
mov
int3
arpl
js
mov
jle
sbb
inc
mov
dec
sub
xchg
fs
clc
lock
cmc
mov
xchg
insl
pop
test
mov
mov
push
cmc
jne
push
dec
xor
sti
ss
es
mov
movsb
push
inc
or
aad
iret
sub
dec
push
pop
aaa
in
jnp
mov
pop
and
mov
or
inc
pop
mov
lahf
scas
mov
icebp
push
sub
add
sub
cmc
ror
loop
inc
jl
fs
fidivl
adc
jo
cmpsl
cli
mov
mov
fmuls
mov
icebp
lods
lcall
sub
cmc
ficoml
dec
out
das
jnp
scas
and
jle
outsl
test
fsubrp
pop
negb
lods
jmp
push
call
fistpll
pop
mov
fldenv
and
cmp
leave
icebp
negb
lds
test
fwait
mov
pop
dec
icebp
mov
ss
stos
jp
loopne
push
mov
xchg
stos
mov
jmp
inc
sbb
push
call
arpl
jo
xor
push
cs
loopne
pushf
scas
xor
or
cmp
aam
ret
pushl
test
lods
negb
stos
stos
push
cmp
dec
push
mov
fisubrl
imul
dec
dec
jae
jl
xchg
push
ljmp
pop
gs
or
jp
mov
dec
xchg
in
aam
sub
dec
dec
xlat
cmc
aas
or
imul
dec
mov
inc
repnz
sarb
pop
push
push
clc
addb
ffreep
inc
in
dec
xchg
aas
xor
dec
data16
cmpsl
imul
dec
stc
dec
add
adc
dec
cmp
movsl
jmp
repnz
dec
cmp
fisttps
jbe
jg
stc
or
mov
inc
mov
dec
testb
pop
cwtl
pop
outsb
out
add
xor
into
xlat
ljmp
sub
dec
gs
stc
lea
adc
dec
insl
int3
add
loopne
arpl
dec
rcrb
mov
mov
into
mov
fst
jne
or
lds
fistpll
test
pop
xor
jecxz
fisttpl
xor
or
lret
inc
xchg
sbb
pop
outsl
sub
dec
pop
test
movsl
ffree
or
dec
adc
popa
pushf
adc
scas
das
scas
xchg
mov
dec
test
into
stos
dec
mov
adc
and
cwtl
out
out
cmp
and
sbb
sarb
inc
dec
push
dec
fisttps
push
mov
pop
int
jne
pushf
dec
push
icebp
out
je
jno
add
in
fcomip
dec
sbbb
xor
push
paddw
xor
into
cmp
mov
adc
dec
insl
leave
es
sbb
jg
cmpb
sub
inc
cs
jmp
daa
cmc
xor
xchg
mov
or
test
scas
subb
outsb
lcall
dec
cmp
pop
cmp
cmp
or
sub
push
outsl
sub
in
dec
sti
add
pop
cmp
push
sub
xor
mov
jle
dec
imul
mov
sub
jnp
mov
adc
pop
in
dec
fs
fisttpll
push
lcall
xchg
mov
hlt
or
dec
inc
adc
mov
sbb
test
and
or
inc
mov
outsb
jno
dec
mov
popl
sbb
outsb
cmp
xchg
xor
in
xchg
push
xor
test
push
scas
mov
addr16
ja
push
sbb
jb
mov
xchg
and
popf
mov
xchg
sbb
or
dec
jle
mov
jnp
mov
xchg
xor
mov
inc
dec
mov
dec
sub
nop
mov
adc
mov
push
xor
mov
popf
sub
out
xorl
push
bound
cltd
dec
sbb
jne
or
scas
in
mov
mov
mov
or
fsubrl
push
repnz
mov
push
je
sbb
outsb
stos
xor
sti
push
test
pop
inc
scas
jl
sbb
dec
fsub
sahf
jle
mov
jg
in
outsb
dec
cmp
add
dec
movsl
testl
aam
mov
xchg
test
jbe
jae
xor
mov
fldcw
push
hlt
gs
test
repz
outsw
add
dec
xor
fidivs
pop
into
pusha
cmp
adc
loope
lahf
movsl
dec
dec
pusha
jns
xor
pushf
jge
enter
icebp
rorb
push
xchg
cmp
jns
test
cwtl
cmpsl
jle
xchg
lahf
jle
mov
push
ret
mov
cmpsw
inc
add
fisubrs
repnz
mov
sbb
fldenv
dec
icebp
sbb
pop
ljmp
test
lahf
fidivrl
or
push
cmpsb
or
loope
xchg
ja
mov
xor
dec
jle
cmp
shll
fmuls
push
out
mov
push
in
inc
sbb
jl
pop
shlb
int
cmp
aas
fdivrs
or
xchg
iret
aad
xchg
add
int3
call
das
imul
dec
lahf
xchg
pop
jl
arpl
mov
aam
ror
add
mov
adc
hlt
dec
movsl
jg
mov
roll
cmp
lret
xlat
jp
inc
dec
shll
sub
mov
arpl
dec
mov
into
pop
cmp
mov
cmp
lods
repz
cmp
pop
pop
cmp
sub
mov
jbe
sbb
popf
jnp
mov
mov
stc
mov
push
jle
adc
inc
lods
adc
imul
dec
fistps
dec
adc
mov
jecxz
add
sub
cmp
pop
push
rol
fsubrp
mov
dec
push
adc
out
fisttpll
xor
iret
xchg
jle
test
outsl
rcrb
xor
mov
cld
repz
xor
lcall
add
pop
push
gs
jle
stos
cmp
pusha
andl
jg
adc
add
jnp
pop
sti
xchg
jbe
sbb
xchg
icebp
ljmp
cld
mov
ljmp
rcl
dec
mov
jecxz
out
add
jae
out
xchg
cmp
test
in
outsl
aad
rclb
int3
loopne
push
leave
decl
xchg
sub
mov
inc
dec
mov
mov
dec
jp
test
sbb
add
dec
adc
mov
cmpsl
dec
jg
rcrl
daa
std
icebp
je
stos
cmovle
outsl
dec
and
xor
xchg
mov
mov
jg
sub
dec
and
pop
dec
push
mov
jnp
in
decb
add
pop
into
dec
shlb
xchg
call
push
bound
sti
out
iret
lret
push
popa
jmp
cwtl
lahf
push
orb
fimuls
test
dec
mov
and
addr16
jmp
and
jl
jecxz
or
dec
sub
addr16
sub
push
ds
push
mov
jbe
adc
and
pop
cmc
and
xor
movsl
int3
scas
pop
xchg
fiadds
gs
cli
inc
orb
pop
or
mov
dec
adc
inc
sahf
jo
rolb
mov
insb
ljmp
mov
bound
cmp
test
lods
jo
add
sub
pop
ja
int
add
movb
insl
xchg
jl
notl
push
fidivrs
dec
imul
mov
dec
pop
mull
jne
mov
pop
inc
cmp
xchg
jmp
cmp
gs
pop
xor
adc
jae
xor
test
in
fidivrs
nop
lea
in
dec
mov
pop
fs
imul
cmp
sbb
pop
scas
pop
mov
cli
inc
arpl
jno
sub
clc
cmc
cmpsl
pop
decb
je
nop
cmp
bound
pop
inc
dec
pop
sub
xchg
dec
std
js
notl
or
mov
jp
pusha
lret
pop
jns
cmp
push
pop
xchg
and
testb
and
xchg
mov
pop
xor
inc
jle
cmp
lea
jg
dec
scas
out
gs
push
and
mov
outsl
mov
mov
out
arpl
pop
in
xchg
imul
jo
in
cmp
aas
in
inc
stc
je
sbb
lcall
in
in
mov
pop
ja
cmp
scas
push
out
cmp
das
jl
pop
insb
push
ja
pop
adc
daa
jl
stc
das
push
mov
sbb
inc
cmpsb
pusha
fcoml
movsl
xchg
add
out
rolb
cmp
ljmp
iret
frstor
out
dec
add
xor
mov
pop
loopne
xchg
or
fsts
ss
es
mov
ljmp
cmp
adc
push
nop
fisubrs
in
cmp
sarb
int3
out
aam
in
leave
xor
bound
jg
dec
aam
sub
add
lret
repz
or
dec
or
mov
cmpl
jb
rcll
push
divb
mov
jb
cmp
inc
daa
cmc
cmp
push
int
test
jl
xor
mov
jo
lahf
add
mov
lret
push
add
and
fldcw
mov
cltd
and
dec
push
lret
push
jb
sub
popa
lds
fildl
push
leave
dec
mov
adc
mov
jecxz
ds
testl
cltd
dec
jno
fs
jmp
sbb
inc
test
and
movsl
inc
pop
dec
imul
daa
jnp
pop
int3
xchg
dec
int
out
adc
dec
dec
and
arpl
mov
xchg
add
cld
pusha
les
or
cltd
add
test
das
jl
xorb
cmpsl
mov
dec
imul
orb
xor
xchg
ret
out
dec
stos
push
vpaddw
dec
sbb
cmpsl
push
jbe
jb
mov
inc
or
lods
loope
push
and
pop
and
decb
jp
test
outsl
loop
push
sub
je
push
pop
mov
pop
dec
out
xor
fldenv
decb
dec
popf
add
jp
mov
mov
fdivrs
sub
xchg
mov
push
repz
movsb
fdivl
pop
js
bound
fwait
xor
mov
push
dec
push
cmpsl
mov
pusha
lcall
daa
add
jge
cltd
dec
xor
pushf
dec
dec
popa
les
int3
dec
mov
mov
clc
inc
xor
outsl
push
dec
in
aad
jmp
dec
jp
jge
sub
jbe
mov
pop
hlt
dec
jnp
insb
push
addl
gs
data16
jb
inc
xchg
out
push
xor
in
ljmp
dec
aaa
adc
add
popf
data16
xlat
out
jns
imull
ficoml
jg
or
aas
stos
sbb
dec
test
cmp
jbe
xor
dec
push
std
ljmp
jl
cld
fwait
lret
xchg
add
and
fisubrl
add
jle
mov
into
jo
push
sbb
lahf
xlat
inc
test
and
xorl
repz
es
jo
in
sbb
mov
loop
dec
push
cmp
inc
in
add
sbb
and
xlat
xor
dec
ja
aad
jmp
jnp
dec
cs
xchg
mov
loope
dec
pop
shrl
dec
cmp
pop
lods
sbb
testl
int
dec
pop
sub
pop
jmp
fdivp
xor
mov
hlt
mov
add
ret
sbb
gs
ret
mov
movsl
push
std
lods
pusha
cmp
jo,pn
lahf
and
gs
xchg
hlt
lds
dec
addr16
xchg
pop
sbb
push
cmp
xchg
pop
push
lret
pop
in
mov
pop
adc
call
ljmp
mov
lods
insl
fcompp
imulb
popf
scas
xor
cltd
ret
mov
mov
sbb
scas
and
sub
aaa
xchg
push
mov
xchg
dec
scas
jl
add
cmp
mov
inc
fiadds
or
div
push
fwait
dec
mov
xor
adc
sub
dec
xorb
into
jle
aad
xchg
movsb
dec
leave
cmc
loopne
mov
push
mov
sbb
rcrl
stos
ss
out
lahf
dec
dec
mull
xor
add
fisubrs
and
adc
pusha
adc
aam
lods
mov
and
pop
xor
popf
dec
lretw
dec
mov
jle
cmpsl
mov
pop
dec
int3
mov
inc
jnp
or
sub
add
or
xrstor
mov
sub
push
mov
mov
pop
adc
clc
jl
movsl
cwtl
mov
imul
into
dec
faddl
std
out
pop
test
add
int
dec
packuswb
jbe
or
popa
dec
shr
stc
fs
out
dec
mov
mov
out
adc
adc
lret
hlt
iret
mov
iret
dec
mov
or
cs
inc
dec
pop
roll
mov
mov
cmpsl
add
push
dec
adc
jle
sbb
repnz
sbb
dec
stos
pop
not
xor
outsl
inc
or
dec
inc
pop
push
pop
xchg
xchg
push
mov
mov
dec
fwait
lret
adc
adc
pop
or
test
inc
dec
pop
cmp
or
mov
xor
lea
sub
dec
or
in
adcl
ret
dec
lret
or
insb
dec
repz
mov
pop
rorl
cwtl
xchg
outsl
and
sub
sarb
ss
pop
add
gs
lea
xor
movsb
jbe
push
cmp
or
jle
daa
cld
movsb
pop
jl
or
dec
cmpsl
popa
mov
dec
or
hlt
add
xor
pop
test
lods
xchg
out
testb
push
sbbl
dec
and
stc
pop
cmc
mov
mov
mov
mov
enter
push
pop
test
mov
inc
out
xor
add
dec
cmp
popf
loope
clc
dec
in
scas
jl
add
fucomp
gs
xor
outsl
xchg
dec
lea
sahf
mov
dec
and
cwtl
mov
mov
popa
mov
loopne
dec
test
subb
fwait
push
cld
inc
mov
pop
cli
icebp
xor
cmc
jbe
scas
cld
addr16
mov
repnz
or
in
push
in
xchg
std
loopne
test
or
fidivs
sarl
add
inc
adc
out
add
cmp
jb
decb
sub
andb
mov
push
jbe
jnp
out
add
cld
push
cmc
xchg
dec
sbb
dec
push
mov
dec
mov
push
dec
cmpsb
mov
ss
dec
scas
test
adcl
push
lds
jle
clc
jns
mov
adc
push
lahf
xchg
adc
push
ret
dec
jecxz
lahf
xor
clc
cld
mov
sub
cmpl
xor
into
adc
rorl
push
jl,pn
mulb
cmpsl
jo
int3
or
xor
stc
movsl
ror
fbstp
push
jp
mov
jle
scas
lret
inc
outsl
mov
mov
cmp
jp
popa
xchg
pop
push
add
jp
popf
jns
lods
sub
cmpsb
test
push
inc
movsb
and
push
mov
and
inc
sarb
mov
mov
jge
jns
pusha
xor
arpl
push
mov
cmp
cld
and
lods
jae
push
cmp
adcb
xor
pop
jno
cli
cmp
scas
out
jb
repz
sti
jg
out
adc
fwait
test
mov
push
lods
mov
dec
cmpsl
xor
mov
push
cmp
sbb
mov
hlt
dec
mov
xchg
dec
pushf
mov
arpl
xorb
leave
dec
pushf
inc
lcall
or
jnp
mov
imul
inc
push
in
std
mov
jl
cmp
sub
movsb
sbbl
sti
stos
addr16
fmull
jmp
jl
sbb
dec
mov
and
fwait
adc
dec
add
rclb
out
data16
rcrl
dec
cli
xchg
aad
daa
adc
lock
scas
jge
pop
subb
lea
mov
iret
or
lahf
imul
xchg
push
push
cwtl
scas
outsb
push
cs
pop
mov
or
jns
sbbb
add
sub
stc
jp
jp
pop
mov
push
fwait
pop
inc
out
iret
out
mov
xchg
sbb
mov
pop
xor
mov
sbb
idiv
or
ljmp
nop
xor
cs
add
and
jl
test
xor
nop
jmp
sbb
or
imul
or
dec
pop
int3
mov
jle
int
ret
sbb
int3
xchg
dec
jmp
cmp
cmp
xchg
jne
jl
ds
stos
test
pushf
mov
xor
das
inc
daa
ficoml
xchg
leave
les
mov
push
sti
push
push
test
dec
xor
adc
mov
jmp
lcall
mov
incl
imul
inc
xlat
jbe
mov
insb
adc
dec
adc
mov
jne
jmp
dec
xchg
mov
std
rorl
push
bound
adc
orl
imul
or
loop
inc
sbb
icebp
inc
stc
sub
xchg
inc
cmpsb
mov
int3
or
testl
inc
popa
icebp
test
adc
rcrl
lods
call
fucom
cmc
repz
outsb
fmuls
pop
nop
mov
add
pop
and
push
dec
pop
dec
cmp
push
gs
dec
scas
nop
xor
and
mov
outsb
mov
cmp
psadbw
push
add
std
dec
inc
lods
xchg
icebp
jno
stos
in
ds
lods
inc
andb
rclb
pop
addr16
jmp
ja
pop
inc
xchg
xchg
mov
add
jp
xor
fcmove
stos
into
jne
aad
jg
xlat
adc
dec
sbbb
lock
inc
adc
lret
xchg
inc
repnz
add
lahf
and
dec
pushf
or
leave
test
jmp
fldt
push
jne
cmp
mov
sbb
rorl
xor
xchg
popa
outsl
cmp
aad
or
enter
dec
movsl
fstps
fisttps
hlt
insb
jnp
stos
iret
push
mov
pop
ja
inc
fisttpll
pushf
adc
ret
int3
mov
adc
addb
lcall
loopne
lret
mov
dec
mov
mov
je
push
mov
sbb
sarl
adc
push
jb
vmread
fnsave
push
test
xchg
arpl
push
dec
jbe
rcrb
popa
push
test
sub
sbb
and
mov
dec
lret
adc
repnz
bound
test
scas
add
ret
and
dec
pushf
push
and
ljmp
movsb
jl
gs
mov
cmpsb
ret
inc
dec
adc
xchg
mov
sbb
leave
inc
test
fcomi
loope
mov
movsb
adc
pushf
mov
data16
add
dec
fsubrs
outsl
mov
insl
jmp
dec
cld
dec
rcrl
adc
cmpsb
jbe
andl
add
aam
jb
insb
into
or
jg
popa
mov
movsl
push
sahf
add
xchg
dec
sbb
data16
pushf
push
inc
aam
fists
fwait
jle
add
lcall
stc
out
xor
jle
mov
mov
push
lock
pusha
movsb
dec
icebp
aam
out
stos
add
jno
mov
out
popl
jg
arpl
das
adc
faddl
pop
iret
test
inc
iret
xor
mov
adc
movl
inc
repz
je
sub
les
mov
push
out
iret
jle
cmpsl
push
into
pop
jle
adc
sahf
push
push
xor
stos
fidivrl
insb
xchg
repz
xchg
push
dec
xlat
mov
lret
and
int
repz
xchg
push
dec
xchg
xor
stos
cltd
cmc
cwtl
pop
xor
adc
imul
fcoml
mov
aaa
mov
mov
xchg
lea
mov
stos
fadds
js
loopne
jp
leave
mov
pop
jle
inc
call
or
popf
xchg
cs
cmp
adc
push
cmpb
dec
inc
dec
fs
dec
or
icebp
roll
dec
ja
sbb
jo
and
sub
loope
add
dec
shlb
push
mov
insl
jbe
in
and
cmp
add
inc
je
fisubrs
dec
push
add
and
insl
mov
jl
dec
aas
jno
inc
mov
jbe
and
push
int3
jl
fucomi
shl
cld
aas
loop
int
xchg
enterw
rcrb
test
out
jg
int
mov
cmp
sahf
pop
add
clc
add
mov
inc
add
sarl
into
lret
mov
loopne
inc
fdivrl
mov
dec
cltd
jle
fiaddl
addps
jns
aaa
cmp
mov
dec
mov
pop
mov
in
adc
js
pop
leave
jl
cmp
aad
test
pop
fwait
xor
xchg
rclb
repz
sub
aaa
jns
ja
xor
test
dec
add
push
subb
inc
cmp
xchg
xchg
pop
into
mov
push
jae
fmul
pop
int3
fdivs
sbb
icebp
inc
sti
mov
jl
lock
mov
scas
outsb
adc
dec
and
jnp
out
lret
cs
shrl
xchg
adc
dec
push
rolb
sub
ds
in
mov
jo
aad
push
push
cld
test
lds
pop
inc
cmpsb
cmpsl
mov
mov
lret
mov
fimuls
dec
ror
ret
arpl
dec
inc
push
inc
movsl
sub
xor
testl
mov
sub
lds
lahf
sub
adc
and
out
jl
xchg
aam
mov
inc
dec
jb
or
xor
dec
push
test
push
jle
pop
xor
jecxz
xchg
or
movl
xor
mov
movsl
push
push
aaa
lods
jp
pop
bound
jl
frstor
mov
mov
push
cmp
mov
sub
roll
inc
mov
loopne
jmp
or
xor
and
dec
sub
pop
stc
cmp
data16
cmpl
or
lds
repz
arpl
jecxz
dec
dec
enter
enter
jl
sbb
dec
iret
ja
jg
mov
fwait
subl
mov
cmp
in
stos
fnstcw
add
cmpsl
pop
inc
adc
shr
add
outsl
inc
std
mov
cs
nop
lods
fisubl
and
adcb
lret
in
and
shl
push
or
out
fdivrl
stos
and
mov
fiaddl
shlb
or
stos
out
push
lahf
push
cmp
and
es
jg
cmp
scas
dec
pusha
adc
inc
push
outsb
sbb
push
xor
xchg
mov
aas
mov
push
into
sti
je
loopne
push
fs
lods
addr16
daa
adc
cld
int3
jle
push
addr16
or
cmp
shlb
adc
cmp
sub
inc
jle
mov
les
pop
rolb
imull
fbld
into
into
jl
adc
push
es
fcompl
mov
mov
and
inc
leave
cwtl
jl
sti
cmpb
data16
cmp
mov
mov
xchg
sub
fistpl
jb
cmp
mov
inc
out
dec
adc
dec
scas
outsb
xchg
pop
test
outsl
mov
in
sub
iret
or
dec
cvtps2pi
cmp
jae
push
or
xchg
dec
mov
sbb
call
fisttpl
out
ss
jle
mov
stos
sbb
xlat
pop
push
mov
push
int
pop
dec
ljmp
mov
stos
fdivrl
sbb
les
popa
dec
loop
cmp
cmp
dec
jnp
mov
xor
cmp
arpl
es
ret
xor
in
repnz
imul
mov
lret
ret
dec
fildl
jae
xchg
into
jp
dec
dec
xor
incl
and
dec
arpl
ror
push
mov
movsl
lds
arpl
jle
shrl
xor
aas
jne
adc
imul
rcl
mov
inc
adc
bnd
leave
loope
out
fisttps
jno
lret
sbb
shlb
or
sub
jb
dec
cmpsl
dec
nop
mov
pop
notl
dec
outsb
sbb
xor
dec
scas
das
dec
sbb
sub
inc
inc
or
adc
or
inc
dec
jge
mov
into
xor
sub
mov
pop
pushf
sbb
push
cmp
dec
dec
inc
xchg
std
or
dec
push
mov
push
pop
dec
rol
icebp
loopne
xchg
leave
cmp
mov
xchg
into
lock
dec
dec
xchg
bound
pop
sti
rcll
pop
and
push
push
fimuls
outsl
loope
lgs
fdivl
dec
or
sbb
or
dec
lret
add
iret
push
mov
sub
hlt
in
dec
and
loopne
or
dec
nop
mov
cmpsl
inc
xor
dec
std
popa
rcrb
inc
clc
mov
jle
mov
mov
lret
test
pop
pop
out
scas
repz
mov
sahf
mov
aas
xor
xor
es
jmp
scas
lods
sbb
mov
push
mov
mov
pop
dec
adc
jno
cmp
push
mov
xor
dec
push
mov
lea
cwtl
shlb
iret
pop
in
sub
dec
mov
push
dec
test
aad
jno
push
insl
fimull
ja
push
and
sbbb
aaa
adc
dec
sbb
push
bound
or
ret
scas
fiaddl
xchg
testb
mov
call
iret
repz
out
adc
add
cmp
dec
add
and
popa
pop
sarl
mov
push
fstpt
cmpsb
pushf
fnstsw
mov
scas
pop
cltd
out
inc
or
test
dec
add
mov
sbb
test
outsl
dec
or
cmp
pop
in
xchg
dec
test
add
push
jg
inc
jle
xor
jb
into
loope,pn
icebp
pop
sbb
ja
jmp
scas
pushf
cmp
dec
fwait
push
outsb
jb
sbb
lahf
dec
sbb
mov
push
mov
cmc
sub
xor
mov
les
dec
jbe
mov
push
dec
jo
bound
sub
sbb
dec
or
fidivrs
mov
scas
loope
dec
sbb
mov
mov
jl
sub
cmpl
test
stos
push
xchg
in
pop
daa
dec
and
stc
insl
mov
sbb
loopne
xor
dec
inc
loope
sub
repz
pop
xchg
xchg
push
out
or
outsl
dec
mov
mov
xor
cmp
dec
mov
jle
xchg
xchg
scas
in
aam
dec
dec
lds
jmp
iret
or
aaa
xchg
jbe
in
dec
or
repz
sbb
mov
cmpl
repz
mov
mov
gs
sub
cmp
mov
pop
xor
leave
mov
pop
scas
and
dec
xchg
inc
adc
push
insb
sub
lock
mov
insb
mov
pop
pop
ds
loop
pop
mov
push
mov
inc
hlt
shlb
push
es
mov
rorb
fmuls
jg
lahf
lods
outsb
nop
out
mov
add
sbb
sub
xchg
xchg
add
cmp
int3
mov
aad
fs
push
jge
in
je
cmp
jae
jns
inc
lret
outsb
jge
dec
push
fistpll
inc
popa
pop
shrl
fimull
sub
xlat
test
pop
rolb
xor
push
ret
gs
and
dec
enter
rcll
aaa
add
mov
inc
fmull
in
ret
sub
xor
cmp
jl
mov
insl
xchg
dec
aas
jg
mov
ficoml
xorl
scas
loopne
xchg
aas
int
xor
fistpll
insl
sbb
push
sti
push
mov
and
xchg
rcrb
lret
xchg
or
jecxz
insb
fdivl
jl
and
cwtl
aad
out
jle
pop
cmp
dec
xor
push
stc
jo
dec
push
iret
insb
out
outsl
dec
sbb
das
pop
popf
xchg
or
mov
jmp
cld
out
mov
jnp
movsl
dec
xor
jb
jmp
cmp
inc
inc
loopne
cmp
mov
stc
sti
cmc
orl
mov
adc
push
mov
lcall
xchg
jg,pn
or
out
bound
aaa
ljmp
adc
sub
mov
ds
mov
adc
mov
inc
xchg
cmp
push
int
lods
push
rorl
or
iret
adc
aaa
cli
sub
jp
mov
add
inc
xor
jg
inc
in
mov
push
mov
dec
push
mov
cmp
inc
mov
or
addr16
add
rcl
xchg
outsl
push
jecxz
dec
mov
ds
xchg
xchg
jns
dec
sarl
adcl
or
lea
dec
mov
lock
fcmove
imul
dec
mov
and
ss
inc
push
xchg
je
push
pusha
xchg
dec
dec
add
dec
outsb
inc
and
daa
pop
dec
push
cmc
dec
jmp
fmull
xor
imul
test
xlat
icebp
or
lret
mov
in
cs
es
mov
decb
push
adc
jmp
mull
repz
jo
int
mov
sub
jmp
lea
dec
cmp
lret
lahf
add
data16
mov
notl
stc
sbb
addb
mov
dec
xchg
test
and
sub
lods
adc
pop
psadbw
shlb
inc
sbb
shlb
fimull
dec
sub
lcall
stos
and
dec
daa
dec
fnstsw
das
pop
adc
push
enter
or
sbb
xor
test
xor
fdivs
lret
cmpsl
loop
pop
clc
pop
or
aad
shll
jge
popa
scas
arpl
divb
inc
jle
jo
mov
test
sahf
xor
fucomp
pop
fnsave
mov
cltd
adc
addr16
dec
adc
xchg
or
hlt
in
out
dec
rcrl
mov
sbb
and
dec
mov
mov
dec
clc
bound
mov
sti
sub
aaa
fldenv
dec
inc
jmp
push
popf
dec
movsl
mov
rorb
adc
mov
mov
mov
xchg
mov
xor
mov
jbe
test
jb
and
iret
cmpsl
xchg
iret
mov
cli
dec
cmp
inc
lods
ljmp
movsb
shll
inc
mov
ret
sub
adc
push
fwait
push
push
xor
inc
out
xchg
mov
or
js
inc
mov
add
adc
jmp
pusha
stc
hlt
leave
ds
inc
cmpsb
sub
inc
and
cmp
fidivrs
rcrb
out
movb
pmulhw
add
sub
rcr
add
push
mov
add
aad
push
nop
sub
lods
clc
xchg
arpl
test
push
lcall
dec
pop
push
sbb
add
dec
cmp
dec
iret
push
mov
xor
stc
subb
dec
out
jl
add
jecxz
sub
fmuls
mov
in
add
fbstp
xchg
fsts
jg
inc
ret
iret
sub
lret
inc
push
jg
fcompl
sbbl
push
test
scas
jg
dec
xor
lret
jl,pn
dec
repz
push
adc
insb
or
enter
push
xchg
or
mov
dec
fstpt
xchg
divl
adc
add
mov
orb
add
or
jp
cmp
cmpsb
and
mov
jg
push
cmpsl
add
push
and
mov
add
dec
mov
hlt
cmc
mov
push
push
pop
inc
cmpl
mov
lods
lock
je
add
loope
daa
dec
pushw
inc
int3
sub
fxch
inc
adc
movsl
push
int3
in
pop
adc
popf
cmp
jl
mov
push
pop
cmp
push
mov
push
or
lock
lahf
mov
jae
dec
sub
mov
cmp
and
and
dec
xor
stc
inc
xchg
push
adc
dec
fdivrl
bound
inc
xchg
sarb
out
jp
test
pushf
jno
push
mov
dec
ret
mov
icebp
shrb
ja
jb
mov
fxch
cmp
sbbb
add
sahf
ret
shll
mov
popa
jge
test
lcall
mov
sbb
inc
dec
mov
bound
gs
dec
dec
mov
mulb
add
sub
imul
sbb
sub
dec
bound
out
mov
sbb
cmp
adc
and
cmc
fwait
icebp
call
in
dec
mov
lea
add
sub
dec
jecxz
push
ret
outsb
add
xor
pop
pop
insl
enter
mov
iret
jl
test
imul
sub
or
and
push
insl
jp
mov
pusha
pop
inc
ror
movsb
mov
mov
addr16
sub
and
cltd
popl
scas
mov
dec
jbe
loop
jecxz
rorb
cld
icebp
mov
push
fmuls
je
pop
push
pop
mov
inc
cmpl
mov
xchg
fsub
dec
loope
insb
push
mov
addr16
sub
xchg
xlat
add
push
cmc
dec
aaa
lods
adc
mov
sub
mov
jl
daa
push
jge
sbb
add
cmp
out
js
and
jp
cld
fnstcw
mov
dec
cmp
xlat
loope
sub
xchg
mov
mov
insl
jns
mov
pop
stos
dec
fildl
dec
mov
pop
ret
in
sbb
and
lret
jbe
xchg
popa
aaa
cld
dec
scas
fldt
xchg
out
sbb
inc
pop
adc
or
jae
jns
add
and
sbb
push
jbe
je
and
mov
and
fisubs
xor
mulb
xchg
adc
repnz
cld
test
xlat
test
into
dec
add
inc
into
sbb
xor
dec
daa
sub
mov
test
cmp
js
dec
sub
aam
jmp
int3
and
outsl
mov
jp
dec
mov
xchg
movsl
in
and
lret
adc
addr16
mov
pop
or
pop
lret
cmp
iret
test
pusha
mov
adc
xor
add
dec
pop
jp
inc
stos
fs
stos
or
mov
sbb
push
lahf
dec
popf
or
cs
dec
jbe
in
dec
sub
js
push
mov
or
divl
xchg
aam
cs
shl
dec
jg
mov
jp
fwait
iret
dec
inc
adc
lret
pop
test
add
sbb
stos
mov
dec
loop
pop
and
pop
jbe
dec
repz
imul
popf
xorl
dec
or
stos
movsb
mov
xchg
mov
dec
inc
aam
pop
mov
adc
dec
cmpsl
dec
adc
outsl
gs
cmp
dec
and
mov
and
mov
jle
arpl
dec
or
fnstsw
dec
nop
cmc
jno
ffreep
iret
enter
repnz
pop
jne
xor
aaa
cwtl
sub
adc
mov
clc
xor
in
push
shll
fsubr
scas
add
aam
gs
add
mov
mov
cmp
push
ret
fcmovnbe
and
xor
inc
cmp
sar
or
xchg
dec
dec
sub
jle
jno
test
rcrb
scas
dec
add
fcompp
test
mov
push
shr
pop
inc
push
jl
pop
loopne
sbb
xchg
aam
iret
mov
jmp
aaa
fwait
cmp
in
dec
mov
cmp
dec
push
sub
sub
icebp
into
test
in
sub
xor
sub
xchg
jbe
sub
sbb
sbb
lret
sbbb
sub
mov
mov
enter
inc
mov
imul
addr16
dec
sahf
arpl
inc
push
lods
adc
dec
outsb
adc
test
xor
pushw
mov
sbb
pop
in
stc
xchg
mov
or
xor
das
mov
push
mull
dec
stos
add
cltd
cmp
xor
std
pop
sub
xor
dec
fisubrl
xor
shll
xor
aaa
out
xchg
adc
dec
add
cmp
loope
push
jnp
cwtl
and
mov
loope
adc
lea
repz
sbb
jnp
cs
jl
notl
push
outsl
cmp
and
cmc
movsb
sub
mov
sbb
jg
sahf
mov
jle
outsl
xor
scas
testl
or
sub
mov
jne
sub
popa
dec
stc
fucomi
xlat
sbb
dec
les
xchg
xchg
mov
cmp
dec
mov
jmp
imul
mov
es
dec
daa
test
inc
shl
or
pop
dec
ret
dec
mov
loop
pop
dec
add
pop
testb
pop
es
inc
or
mov
or
inc
dec
and
in
sbbb
les
subb
jae
fisttpll
xchg
out
cmp
dec
xor
sub
mov
ret
dec
int
into
repz
fimull
push
loope
adc
push
jno
lds
fcmovne
arpl
aam
dec
xlat
xchg
mov
dec
cmp
jae
das
xor
jl
insb
mov
cwtl
adc
lret
mov
je
dec
out
testb
jno
shl
loopne
lahf
lret
in
dec
sbb
mov
dec
push
xchg
enter
ds
dec
push
clc
push
in
mov
or
into
jae
out
jle
dec
pushf
data16
repz
ljmp
push
enter
cltd
fildl
inc
out
std
or
pop
mov
aad
pop
dec
cmp
in
add
mov
jle
or
inc
xor
jb
test
jg
out
in
xor
out
mov
push
fistps
sub
movsl
push
jecxz
mov
jg
icebp
js
mov
jmp
bound
lahf
mov
add
push
add
sbb
push
jl
cli
dec
pop
mov
mov
jg
pop
push
lret
mov
pushl
dec
pop
repnz
and
into
iret
jg
jp
mov
cmpl
lcall
push
addr16
rorb
pop
loopw
jl
xchg
inc
and
push
add
icebp
cmpsl
cmc
pop
fistl
dec
jl
xor
inc
add
mov
pop
inc
cmp
pop
xchg
fbld
dec
js
jmp
fs
fs
push
cmp
jmp
aaa
mov
jne
popf
aam
insl
inc
jg
inc
sbb
add
and
insl
not
cmp
aad
inc
mov
xor
sub
jecxz
js
mov
dec
jl
xchg
das
outsl
emms
icebp
cs
subb
mov
js
pop
psubd
fistpl
clc
push
fwait
std
fistps
and
adc
jb
sbb
or
rolb
pusha
jle
add
inc
xchg
ret
cwtl
dec
call
mov
in
adc
xor
xor
pop
pop
sub
xchg
pop
in
rolb
xchg
ret
icebp
sbb
pop
xor
push
mov
xor
js
loopne
imul
or
pushf
inc
and
lock
sub
adc
push
inc
fs
mov
dec
pop
xor
jg
pop
push
fcmovb
cli
xchg
mov
out
arpl
jl
cltd
stos
ja
push
xlat
dec
bound
xsaves
inc
loope
movsl
je
jae
outsb
add
outsb
jno
jno
inc
mov
int
mov
push
ss
mov
inc
aas
in
xchg
cmp
fisttpl
out
sub
lods
cs
out
out
cli
sub
push
dec
stos
lods
mov
enter
pop
repz
leave
test
hlt
cmp
push
bound
mov
stos
jg
and
mov
shrl
loop
xchg
xchg
xchg
add
xor
call
sub
out
dec
push
movsb
mov
xchg
in
cli
sub
popf
mov
icebp
push
in
loop
daa
insl
jl
mov
cli
adc
mov
xchg
sub
mov
sub
dec
mov
inc
dec
rorb
loop
jmp
dec
mov
push
and
pop
jne
dec
mov
inc
imul
cli
and
cld
mov
dec
in
sbb
jnp
imul
inc
or
insb
cmp
lret
dec
xor
cltd
xor
pop
and
and
dec
cmpl
xor
sbb
pop
dec
shrb
ret
pop
push
lret
and
lock
pop
dec
popa
out
push
push
inc
xor
xchg
jne
dec
or
bound
cld
ret
mov
dec
and
pop
xchg
cmpsl
fwait
push
idiv
sub
dec
out
pop
stc
sub
pop
adc
stos
mov
sub
ficoml
jmp
adc
add
pop
add
inc
cmove
sbb
fwait
int3
add
dec
mov
mov
xor
dec
mov
sbb
cmpl
imul
mov
add
fisttps
mov
test
dec
lods
xor
or
loopne
mov
gs
data16
pusha
push
cmp
setl
or
das
mov
cs
adc
dec
out
fstl
push
dec
leave
lcall
movb
inc
dec
add
xchg
sbb
dec
pop
mov
icebp
xor
dec
inc
adc
loope
inc
setge
pop
iret
cmc
daa
pop
push
inc
dec
mov
sbbb
fmuls
mov
dec
filds
mov
add
outsb
inc
fcompl
lret
mov
cmp
int
adc
mov
inc
mov
mov
fsubp
shr
sub
nop
lahf
pop
xor
add
fcmovne
dec
sub
sbb
int3
pop
cmpsb
sbb
or
loope
dec
inc
data16
incl
xor
push
add
xchg
push
movsb
dec
out
jbe
mov
mov
jp
inc
jb
fwait
mov
fisubrs
adc
mov
stos
iret
fcomps
dec
enter
lret
or
dec
xor
movsb
xchg
adc
loopne
imul
jo
cmp
rorb
adc
scas
subb
dec
aad
mov
dec
test
addl
stos
scas
xor
jbe
adc
push
inc
push
dec
fs
dec
out
fsts
mov
jns
jae
insl
add
fdiv
dec
aaa
xchg
fstps
rcl
mov
test
and
rcrb
sub
cmp
and
mov
cmpsl
outsb
mov
xor
jl
mov
xor
xor
mul
sub
faddp
push
adc
add
or
pop
mov
bound
jmp
and
pusha
dec
out
lds
xchg
pop
cs
cld
or
or
sbb
mov
adcl
jl
insl
out
mov
xchg
jb
dec
xchg
pop
jbe
test
cs
xor
sbb
dec
leave
test
jmp
sub
mov
ss
lcall
insb
dec
out
add
dec
movsl
mov
ja
mov
jo
xchg
push
inc
sarb
das
sub
pop
cld
mov
enter
cmp
fsts
lock
mov
push
rcr
inc
dec
cmp
mov
xor
mov
stos
int
arpl
outsb
into
jge
loopne
add
and
dec
pop
les
inc
dec
mov
rorl
dec
in
loop
jp
or
cld
jmp
push
dec
mov
dec
cs
and
notl
aam
fisttpl
popf
push
cmp
jmp
push
out
dec
mov
lock
mov
jns
fdivs
fimull
jl
in
xchg
inc
adc
fistpl
outsl
stos
dec
xor
iret
push
test
into
fsubs
aad
sbb
dec
jge
xchg
dec
jp
std
adc
dec
outsb
clc
leave
adc
add
js
pop
mov
and
scas
push
adc
icebp
and
jg
lds
pop
mov
das
imul
les
lods
jno
aaa
cs
mov
push
jle
jbe
pop
rcll
and
dec
pop
mov
dec
xchg
ja
xchg
pop
in
pusha
inc
and
cmpsb
cmpsl
adc
imul
add
lcall
icebp
dec
xchg
leave
rolb
stos
xor
mov
dec
inc
pop
addr16
dec
mov
outsl
dec
or
cmpsl
jle
imul
lcall
dec
test
and
aaa
cmp
bswap
pop
xchg
xor
adc
popa
add
xlat
into
cwtl
add
mov
mov
mov
data16
sub
idiv
sbb
dec
test
test
xchg
pusha
mov
jb
inc
dec
mov
and
clc
pop
pop
and
stos
mov
mov
xor
dec
rcrl
and
mov
pusha
xchg
enter
loopne
in
adc
iret
bound
push
ret
mov
dec
mov
fisubrl
jbe
repz
inc
dec
pushf
loopne
pop
cmp
dec
fisubrs
adc
jne
xlat
out
stos
pusha
push
cs
test
fwait
test
dec
push
loop
and
lret
jb
xor
enter
bound
dec
into
push
insb
cwtl
dec
mov
jmp
sbb
and
push
out
mov
mov
push
into
jg
pop
dec
pop
push
dec
loope
addr16
add
sahf
adc
dec
mov
int3
repz
test
es
addb
jno
jnp
xchg
into
push
pop
insb
dec
cmp
mov
jl
jbe
lahf
sbb
mov
xor
lahf
cs
push
add
dec
mov
cmp
push
and
lods
jge
xor
sti
sub
mov
mov
adcl
jle
push
adc
cld
mov
lcall
jl
out
jle
push
dec
ret
inc
daa
and
jnp
js
and
cltd
inc
sub
pop
andb
jl
or
and
pop
push
stos
push
push
addl
push
sbb
fwait
dec
jo
cmp
loope
xor
cmpsb
pop
aad
lahf
std
and
mov
push
call
push
xchg
out
loop
cs
outsl
xor
cmpsl
and
sahf
pop
scas
mov
mov
xchg
jg
daa
std
cmp
push
pop
and
shll
pop
movsl
or
arpl
cld
fnstcw
inc
in
out
and
fisubs
int3
mov
adc
sbb
jp
pop
mov
inc
icebp
and
mov
fdivp
ret
daa
jl
out
dec
hlt
lret
jle
fwait
int
sahf
loop
jae,pn
mov
pop
shr
pushf
outsl
out
mov
jl
repz
push
scas
incl
xchg
and
pop
inc
sub
jnp
add
cmpsb
cmpsb
iret
popf
adc
iretw
fnstsw
loop
aad
aaa
in
shll
and
pop
jl
leave
out
bound
pop
mov
xchg
iret
cmpsb
jg
cltd
aaa
adc
daa
cmp
push
adc
fs
pop
mov
mov
scas
cmp
sbb
mov
inc
sahf
dec
pushf
jecxz
cmpsl
mov
mov
inc
in
inc
sub
mov
jl
lahf
mov
mov
into
mov
in
jge
xchg
loope
shll
cwtl
adc
fidivl
pop
rorb
jmp
test
outsl
mov
inc
push
pop
xchg
adc
cmovns
mov
xor
jecxz
and
in
fcmovnb
shr
dec
or
mov
aad
jns
fs
dec
cmp
in
mov
dec
push
xchg
mov
scas
pop
dec
daa
or
repnz
rcrb
fisttpl
push
xor
lea
ljmp
inc
dec
lock
pop
imul
dec
subl
sbb
les
adc
out
dec
jge
popf
icebp
fdivs
pop
dec
imul
mov
dec
lahf
jnp
clc
nop
pop
mov
sbb
fcomip
inc
mov
pusha
scas
sub
std
into
cwtl
sub
lea
dec
popl
pop
test
lods
adc
out
jmp
inc
lret
imull
dec
inc
leave
in
mov
inc
sub
inc
repz
scas
mov
mov
addr16
rcrl
push
dec
push
adc
stos
js
inc
and
cltd
dec
or
lea
inc
sub
adc
pop
into
iret
cmp
mov
adc
aad
enter
cmc
dec
pop
clc
mov
ja
out
xchg
xchg
jecxz
mov
aad
in
xor
cmp
push
fsubp
dec
sbb
test
xor
ret
inc
push
dec
pop
mov
push
adc
addr16
xchg
xchg
push
push
pop
or
int
sti
pop
aaa
or
sub
jo
call
test
out
cmp
pop
je
mov
into
mov
shlb
mov
mov
testb
and
push
and
jl
pop
mov
jp
xor
ss
fistpl
push
xchg
addl
mov
jl
jge
call
fbstp
add
sbb
cli
pop
inc
mov
jl
js
addb
sbb
jns
in
jmp
inc
cmc
popa
cld
stc
mov
pop
popa
pusha
ja
xlat
xchg
jmp
fs
sbb
sbb
dec
mov
cmp
inc
lret
pop
jle
xchg
mov
mov
mov
xchg
ret
rol
lods
xor
sub
cmc
cmp
adc
mov
sub
fcompl
cld
mov
dec
js
xorl
or
stc
pop
pop
sahf
dec
mov
and
pop
dec
mov
cmc
push
jns
in
es
lods
xchg
cmp
je
dec
pop
dec
add
sbb
pop
xor
aas
imul
and
fmuls
lods
inc
adc
dec
mov
in
push
and
mov
inc
jb
push
jecxz
or
jg
mov
insl
dec
jmp
jmp
or
or
arpl
sub
lret
outsl
pop
cmp
xlat
xor
mov
dec
pop
fsts
lods
mov
push
loope
lahf
dec
inc
hlt
negl
insl
push
sbb
mov
sbb
dec
decl
in
mov
repnz
mov
pop
xor
fnstenv
es
push
inc
mov
enter
gs
or
into
or
pop
stc
daa
repz
cli
dec
pop
pop
mov
mov
push
mov
mov
cmpsl
lret
orl
xorl
inc
mov
sub
cmpsb
decb
jns
xor
inc
repz
xchg
in
add
outsl
add
mov
out
push
dec
fistpl
fwait
jle
cli
inc
dec
cltd
in
xchg
sbb
inc
dec
daa
bound
inc
icebp
cli
inc
cwtl
dec
fsubl
movsl
aam
cltd
dec
testb
sbb
into
testl
push
in
arpl
pusha
lcall
mov
jnp
sbb
shll
jle
mov
or
sbb
mov
push
xorb
sub
inc
lods
adc
xor
sbbb
dec
mov
popa
add
rorb
dec
inc
sub
scas
rolb
jnp
andl
dec
pop
jae
out
pop
pop
mov
arpl
in
xchg
nop
std
lods
xor
repz
sbb
dec
movsl
inc
cwtl
adc
inc
jp
stc
pop
jne
outsb
jbe
jae
mov
cmp
jnp
sbbl
push
push
xchg
and
dec
fadds
sbb
ret
or
mov
repz
xchg
jp
out
jecxz
dec
pusha
cmp
decl
fs
lret
sub
pop
iret
fisttps
popa
outsl
pop
xchg
mov
sbb
insb
add
dec
ret
enter
cmpsb
stos
int3
xor
imul
push
hlt
jns
sbb
insl
aas
sub
das
mov
daa
jl
xlat
and
imul
inc
fcompl
rcrb
push
xchg
xor
ja
xor
aaa
dec
xchg
cmp
movsb
pop
hlt
dec
jbe
hlt
inc
jg
repz
repz
mov
loopne
jge
inc
cmpsb
orb
fs
jno
jp
clc
mov
push
sub
scas
fldt
repz
psubw
cltd
aas
in
fldl
in
add
jae
mov
lods
xor
int
fwait
mov
adc
shlb
mov
dec
aad
jb
iret
cmpsb
pop
pop
dec
outsb
je
pop
data16
inc
xchg
jl
insl
xchg
adc
icebp
fildll
cmp
xor
data16
pop
shl
fldenv
dec
mov
mov
stc
mov
sub
call
out
jp
xchg
out
fnstcw
insl
dec
imul
adc
cmp
bound
mov
pop
adc
daa
push
rcll
mov
cmp
fwait
scas
cmp
test
or
shll
push
pop
add
jl
push
repnz
testl
hlt
cmpl
add
daa
sbb
loopne
scas
xor
je
inc
mov
lock
fadd
into
clc
inc
jmp
jne
and
cmpsb
in
loop
add
inc
pop
cmc
notl
mov
cmc
dec
xlat
in
or
jns
addr16
jmp
imul
mov
ja
dec
insb
mov
jns
pop
and
pushf
rorl
and
adc
dec
andl
inc
dec
pop
pop
cld
sub
ja
lret
int3
dec
mov
icebp
sbb
jmp
dec
enter
adc
in
dec
xlat
push
into
jmp
insl
dec
adc
mov
lret
bswap
ss
xchg
dec
pop
mov
pop
iret
ja,pt
mov
aas
fldenv
cmpsl
pop
outsl
cltd
push
push
icebp
jg
xchg
hlt
xor
jl
push
test
lods
out
outsb
std
adc
sbb
jmp
mov
mov
push
ja
xchg
xchg
popa
out
pop
or
mov
mov
mov
outsb
in
jne
nop
and
mov
push
inc
push
push
push
add
jl,pn
js
popl
jle
icebp
outsl
add
add
xor
fildll
jle
hlt
pushf
lret
sub
fisubrl
cltd
dec
inc
mov
cli
call
adc
mov
and
add
ficoms
stos
jo
mov
ret
aad
outsl
mov
out
xchg
jp
sub
addr16
dec
xor
push
lock
nop
adc
and
shlb
nop
out
movsl
mov
dec
push
rorb
jecxz
stos
lcall
divl
test
inc
jg
add
pop
repnz
add
shl
jge
pop
push
aaa
loopne
xor
rol
fdivrl
and
lcall
lea
dec
dec
add
xor
mov
icebp
sahf
pop
jl
pop
pushf
mov
mov
arpl
jg
nop
aaa
cmp
jl
adcb
into
scas
and
mov
inc
icebp
int3
fimull
daa
inc
cs
mov
inc
lret
loope
fsubp
ret
add
stos
inc
adc
inc
call
jge
or
dec
jp
nop
sbb
popa
pushf
jnp
and
adc
mov
sbb
cmpsb
adc
dec
icebp
pop
xorl
scas
sti
push
dec
jl
test
daa
nop
sbb
sub
mov
stos
fidivs
push
cmp
sub
inc
jl
data16
dec
stos
fwait
scas
fiaddl
mov
in
aas
inc
cltd
jg
out
idivb
sub
add
stc
push
popa
mov
mov
xchg
imul
cli
pop
jnp
mov
in
mov
enter
and
mov
mov
imul
adc
loope
mov
addr16
mov
xchg
sbb
xchg
xor
cmp
dec
xor
sub
stos
arpl
pop
xlat
iret
into
pop
sbb
dec
jbe
cmpsb
xchg
xor
or
xor
or
dec
sbb
or
push
jbe
add
cli
rcrb
add
mov
cmp
je
dec
push
adcl
lahf
loope
in
pop
fdivp
in
aad
dec
jbe
mov
cmp
xchg
jle
dec
mov
ds
into
dec
pop
fisttpl
pop
sbb
pop
loop
sub
dec
mull
out
sbb
jecxz
dec
xchg
jle
arpl
xchg
loopne
dec
idiv
xor
cwtl
fsubs
inc
add
fisubrl
iret
xlat
and
and
into
inc
nop
dec
jns
add
data16
dec
pushl
cmp
jg
leave
out
jnp
daa
shlb
mov
test
sbb
fisttpl
xor
sub
inc
push
in
dec
mov
dec
aad
pushf
sbbb
dec
sub
cmp
outsl
pop
mov
fistpl
dec
insl
pop
pop
loopne
mov
repz
jmp
in
mov
dec
pop
sub
dec
cmp
mov
mov
sbb
add
mov
adc
bound
std
mov
push
mov
push
mov
ljmp
stc
aam
mov
or
xchg
arpl
pusha
fnstsw
push
sbb
rcll
inc
mov
scas
jmp
loop
mov
jl
dec
mov
pop
inc
sbb
mov
inc
test
lock
xchg
xor
jmp
mov
inc
shl
jb
out
std
je
jnp
ss
mov
addr16
or
iret
dec
fwait
inc
mov
or
and
push
in
dec
jne
inc
sarl
sti
mov
mov
add
or
subl
mov
dec
fsubs
ret
mov
dec
push
mov
out
pop
mov
xchg
dec
addr16
xchg
ss
dec
out
mov
xor
add
dec
aaa
nop
pop
addr16
add
mov
bound
or
outsb
mov
dec
mov
fs
aas
iret
or
das
adc
pop
dec
cld
xchg
pop
mov
scas
sti
stos
dec
in
pop
iret
mov
or
insl
pusha
xor
fwait
das
jb
je
bound
int
add
dec
addb
stos
jnp
push
into
outsl
xchg
inc
mov
loope
pop
add
ljmp
push
mov
dec
xor
jbe
dec
test
xor
pop
jl
mov
push
pop
mov
mov
adc
fxch
lods
iret
imulb
dec
pop
mov
movl
popf
xchg
out
mov
add
mov
rcll
sub
xor
cmpb
push
int
popa
fmuls
scas
bound
jle
je
fists
push
push
and
cmp
iret
cmpb
int3
cmpsb
loopne
sbb
mov
fsubs
mov
or
and
test
fmuls
insl
ljmp
in
test
stc
ds
cmp
xchg
sbb
dec
jle
call
lock
pop
dec
mov
jle
sbb
cs
test
lahf
pop
aas
jo
aad
dec
ljmp
iret
cs
mov
jp
sahf
mov
mov
xor
mov
into
xchg
loop
mov
inc
sbb
cmp
iret
jge
and
dec
jno
mov
lods
dec
cmp
xchg
pop
hlt
jns
xor
les
inc
int
pop
int3
dec
xor
adc
in
sarl
adc
popa
in
push
xchg
scas
mov
dec
push
andb
sub
test
outsw
out
jecxz
arpl
popa
ss
js
sarl
clc
cmp
shr
hlt
ror
mov
add
insl
lods
sbb
adc
jmp
pop
in
or
inc
js
cltd
push
xor
les
adc
in
dec
and
daa
jmp
push
mov
inc
into
fst
popa
loopne
sub
jmp
mov
pop
jo
subb
dec
cmpsl
int
mov
mov
in
dec
stc
inc
outsb
lahf
lret
dec
cwtl
mov
push
lea
dec
xchg
ret
xchg
in
sub
flds
fcomp
cmp
sub
dec
jp
pop
outsl
or
lds
roll
mov
mov
dec
pop
push
add
dec
pop
and
bound
outsl
das
sbb
sub
stc
lds
mov
jle
jae,pn
or
dec
shrb
scas
and
aam
test
dec
dec
cli
or
adc
dec
fmuls
cmp
jl
cld
jle
xor
mov
jl
cmp
jbe
xor
scas
mov
jo
xchg
jle
mov
mov
icebp
dec
jne
gs
dec
iret
andb
jl
dec
outsl
inc
and
dec
lcall
inc
cmp
dec
shl
decb
ds
dec
sarb
sub
jle
inc
dec
in
ss
in
jne
jnp
int3
call
data16
sub
and
pop
psubw
jl
cli
lds
repz
fs
mov
dec
dec
fsubp
jg
movsl
jae
mov
dec
cmp
push
stos
movsb
dec
repnz
add
stos
push
dec
movsb
inc
ljmp
in
lods
pop
inc
and
pop
nop
pop
lods
out
sbb
daa
xor
xor
xchg
sbb
or
push
mov
jl
leave
pop
maxps
jle
xchg
or
scas
sbbb
inc
and
cwtl
mov
jnp
fwait
mov
xchg
sbb
or
test
les
sbb
inc
xor
push
dec
in
mov
mov
fadds
sbb
push
push
jl
lods
das
inc
outsb
aaa
in
or
mov
mov
iret
sub
jg
jae
add
sahf
cmp
fildll
dec
mov
adc
mov
or
scas
cltd
cld
dec
push
rcl
and
fists
test
scas
xor
cmp
mov
sub
inc
imul
mov
mov
mov
dec
out
jl
sbb
jne
add
mov
dec
lahf
cvtpi2ps
inc
pusha
xchg
ret
jbe
insb
xor
xchg
mov
and
fwait
scas
xor
dec
sub
shl
jnp
out
das
pop
jle
ret
mov
jp
and
stc
insl
mov
aas
mov
jno
mov
adc
ljmp
pop
popf
dec
push
inc
idivb
lock
xlat
test
mov
fnop
mov
daa
dec
dec
aad
jg
xor
adc
push
jbe
lds
push
fistps
xchg
ret
dec
lahf
popa
lcall
je
pop
sti
in
cmc
mov
or
fadd
mov
inc
inc
inc
lods
pop
add
inc
mov
orl
jle
and
dec
adc
push
icebp
popw
xor
mov
aaa
add
call
in
dec
cs
cmp
sub
test
aad
xlat
roll
out
push
pop
jno
cmpsb
dec
xor
lcall
inc
jb
das
test
push
and
dec
stos
inc
add
fbstp
dec
add
pop
sub
dec
push
jecxz
push
gs
rorb
stos
mov
xchg
rorb
dec
ljmp
popa
dec
pushf
and
jne
xor
push
popf
call
dec
or
push
adc
dec
push
dec
stos
inc
cmc
dec
sahf
push
jbe
imul
or
add
scas
mov
or
mul
daa
mov
ja
fisubrs
dec
dec
sbb
scas
sub
dec
std
andb
mov
sbb
dec
in
out
stos
mov
inc
add
into
sbbb
mov
int
mov
push
ds
ss
pop
pop
cmp
push
andl
push
repnz
sbb
inc
adcb
pcmpgtw
adc
rol
jmp
fists
xchg
pop
cmpsb
dec
call
mov
sar
push
dec
jmp
push
and
dec
adc
jns
movsl
pop
icebp
dec
inc
inc
and
iret
or
imul
adc
std
es
dec
sar
push
repnz
pop
int
aas
mov
sub
add
mov
lea
xor
cmp
pop
pusha
sbb
dec
jno
cmpsb
sub
dec
inc
lcall
orl
dec
sub
cmp
dec
ja
pop
lret
jno
xor
mov
scas
push
addb
add
fs
push
push
dec
mov
add
imul
scas
mov
xor
or
push
jo
inc
or
adc
hlt
pop
mov
mov
in
mov
mov
dec
cmpsl
repz
ja
insl
cmp
fistpl
imul
push
sahf
orps
dec
jbe
xchg
notb
cli
insb
lds
mov
pop
imul
add
stc
stos
pop
dec
push
mov
dec
insl
cli
cmp
aas
cs
out
pop
lret
aam
dec
mov
inc
adcb
adc
out
cmp
mov
lods
outsb
aas
adc
mov
dec
xchg
fmull
adc
imul
xor
jl
call
icebp
cmp
roll
dec
mov
fbld
mov
jp
icebp
jle
add
cwtl
dec
push
jg
cmp
mov
dec
push
mov
push
scas
lods
xchg
dec
shrb
or
dec
pop
jle
inc
loopne
pop
jae
ret
int3
push
and
add
in
ds
and
outsb
icebp
cmpsl
jg
xor
adcb
xchg
push
jo
repz
inc
iret
scas
cmp
pop
es
mov
addr16
rolb
sbb
sub
inc
xor
hlt
fs
jbe
sbb
arpl
lods
pop
and
inc
push
nop
lret
insl
cmpb
stc
push
iret
xor
mov
fs
or
insb
xlat
sub
mov
or
or
fistl
mov
ss
adc
push
lds
ds
hlt
out
sahf
fistpll
dec
jns
lahf
xor
and
pop
stos
push
xor
dec
nop
push
sbb
sbb
ss
jno
cmp
inc
pop
out
jg
push
xor
dec
call
pushf
fisttpll
mov
jg
push
mov
sarb
sbb
stc
orb
in
sarl
cmc
rcl
push
dec
cmp
jg
adc
mov
pop
fmull
outsb
lahf
cmp
xchg
pop
shrb
fimull
adc
adc
mov
jo
inc
jle
sbb
dec
mov
enter
inc
testl
or
imull
ret
xchg
mov
dec
mov
sub
les
movsb
dec
mov
pushf
add
mov
xor
sahf
loop
dec
cmp
lret
stos
cmc
pop
sub
pop
pop
dec
iret
pop
insl
sbb
jae
addb
lret
push
clc
jg
or
hlt
add
lcall
mov
lock
dec
in
shrb
sub
je
sub
push
dec
int
jmp
jno
push
xor
xor
rcl
adc
andl
adc
dec
fidivs
xor
nop
insl
cmp
jns
mov
and
loopne
mov
mov
mov
inc
mov
push
js
xchg
test
and
mov
andb
pop
adc
cmp
jg
incl
bound
dec
fmul
jle
lahf
pop
xchg
out
jge
test
out
into
mov
jmp
push
iret
leave
fwait
mov
mov
pop
outsl
dec
repz
and
icebp
cmc
push
repz
cmp
enter
jnp
test
push
dec
dec
ror
ficomps
pop
push
dec
jecxz
sub
add
dec
push
outsl
sbbl
or
mov
jle
dec
sbbb
fmull
sbb
add
or
mov
cltd
out
out
inc
jp
dec
mov
and
hlt
dec
push
insb
addr16
push
aad
ret
int3
jg
ss
sbb
das
adc
test
pop
dec
adc
jmp
cmc
lock
dec
cld
mov
icebp
push
jno
insb
dec
ret
stos
leave
ficompl
dec
or
movsl
aas
inc
xor
in
inc
iret
pop
mov
fisubrs
jp
and
add
push
push
dec
mov
lcall
push
dec
sub
dec
jnp
xor
incb
out
dec
shlb
and
jne
shll
xchg
aas
xor
jp
gs
inc
std
int
pop
mov
dec
dec
sub
lock
mov
jp
jb
pop
ffreep
sub
fldenv
dec
cld
pop
aad
mov
xor
jl
mov
sti
xor
pop
dec
jmp
in
sbb
sub
call
mov
mov
adc
xor
repnz
xorb
stc
daa
loop
rcrl
mov
loope
popf
jg
dec
popa
cli
mov
mov
jle
dec
movsl
and
js
pop
xchg
dec
sbb
fsts
cltd
push
cmp
fldl
lret
sbb
rcll
testl
fisttpl
aad
jle
pushf
adc
or
mov
mov
fprem
in
xchg
pop
dec
pshufw
enter
aad
dec
jg
aas
icebp
lcall
push
xor
insb
sub
out
and
dec
jno
scas
mov
xor
and
jecxz
fisubl
clc
iret
cmpsl
mov
mov
fucomi
out
push
xor
bound
pushf
cmp
or
inc
aas
jle
mov
test
aam
nop
xchg
or
bound
xchg
jle
je
mov
jle
push
jle
jl
xchg
idivb
popa
xchg
push
enter
inc
jle
inc
push
popf
pop
fisubs
std
insl
push
mov
dec
inc
jl
inc
inc
cmp
sub
mov
inc
imul
fsubs
pop
push
jge
sub
repz
inc
pop
pop
aam
mov
or
jl
pop
inc
xchg
scas
lret
dec
inc
xchg
js
cmp
fmuls
mov
mov
lret
cmpsl
gs
xchg
xchg
repnz
ror
jmp
iret
xor
nop
or
push
push
jp
push
sahf
or
stc
fwait
pop
sarb
into
pusha
ds
pop
dec
push
push
dec
fsin
iret
push
mov
mov
stos
out
sub
add
xor
aam
and
and
cmp
adc
and
outsl
mov
inc
sti
cmp
aam
int
cmpsl
add
mov
test
outsl
lds
lock
test
pop
lahf
jb
stos
sbb
and
lret
lods
jle
rorb
sarl
aad
rolb
inc
fldl
jnp
addr16
lret
lds
jle
mov
cmpsb
fwait
push
data16
xchg
adc
cmp
das
rolb
in
sbb
insb
sti
imul
jle
ja
sbb
incl
xorl
dec
aaa
hlt
pop
mov
rcll
arpl
sbb
repnz
icebp
fstpt
mov
fisttpll
push
sub
sub
cld
xchg
jg
dec
adc
lcall
leave
loopne
cmpsb
fmuls
jnp
cli
inc
cmp
imul
popa
adc
mov
push
lods
out
sti
mov
pop
add
ror
pop
dec
cmp
mov
out
fwait
dec
fcoml
aad
sahf
enter
fmuls
dec
mov
lea
lret
dec
inc
sbb
push
mov
fstpt
mov
lods
sbb
mov
xchg
jno
mov
loope
or
add
and
das
mov
js
inc
mov
dec
clc
sbb
out
adc
dec
jg
sub
ret
dec
ret
sub
inc
pop
daa
call
mov
pop
addr16
pop
cld
mov
fisttpll
add
ja
pop
insl
xchg
arpl
sahf
pop
dec
xor
ljmp
mov
popa
lods
arpl
adc
stos
inc
mov
dec
jle
in
push
in
add
cmp
xchg
loop
outsb
dec
into
daa
jnp
nop
jae
lret
push
jno
mov
and
popa
ret
push
add
sbb
lods
fsubs
mov
mov
das
mov
sub
mov
in
jo
inc
lock
push
inc
inc
rcl
dec
in
mov
sub
push
insb
sbb
xchg
sub
xchg
rorl
ficompl
shrl
push
int
push
push
cmp
xchg
fdivrs
xor
push
and
fildl
xlat
shl
out
cmp
aaa
push
sahf
hlt
jae
pusha
dec
ss
cmp
fstpt
push
ljmp
stc
lret
sbb
movsb
pop
push
mov
repnz
push
push
fsubs
enter
jp
dec
stos
xlat
fprem1
les
shrb
jge
pxor
pop
fcmove
mov
mov
verw
cmp
push
lret
cmpb
dec
or
xchg
xor
int
outsb
mov
inc
movsb
xor
int3
mov
pusha
xchg
scas
adc
xor
pop
and
dec
push
xchg
cmc
xor
dec
jne
pop
xlat
cld
lcall
adc
loopne
sub
pop
and
fs
dec
iret
pxor
dec
xchg
add
jle
ljmp
push
inc
sbb
cmp
dec
pushf
pusha
xchg
shlb
fidivrl
adc
push
add
pop
shrl
and
jg
sub
xor
or
sub
jo
in
getsec
dec
shrb
std
jmp
sub
xor
inc
xchg
mov
ljmp
ret
sub
in
pop
mov
stc
sbb
mov
push
fnstsw
sub
js
bswap
jmp
xchg
insb
iret
xchg
dec
loopne
or
cmpb
lahf
and
mov
sub
pusha
xor
mov
adc
scas
dec
fidivrs
leave
lcall
or
or
xchg
cwtl
lcall
fdivp
pop
xor
dec
test
cmc
fsubr
sub
pushl
mov
jb
mull
jo
js
push
inc
jg
loopne
mov
ret
das
mov
mov
pop
xor
bound
fisubrs
sub
das
js
mov
ret
lret
inc
js
xchg
hlt
test
jle
xchg
cmpsl
or
cs
cmpsl
mov
out
leave
or
aad
push
out
xor
inc
jne
mov
xchg
outsb
mov
jge
shlb
push
pop
dec
jge
inc
fisttps
cmp
xchg
out
sbb
inc
mov
ds
lds
stc
dec
mulb
andb
sbb
pop
mov
aad
mov
cmp
mov
test
iret
sub
inc
dec
adc
cmpsb
add
cli
push
and
dec
mov
out
pop
dec
mov
xor
divl
push
push
mov
scas
enter
mov
dec
xor
outsl
in
xchg
adc
mov
mov
stos
mov
dec
dec
cltd
in
or
loop
jecxz
jbe
and
and
popf
or
lods
lcall
outsl
cmpsl
sub
or
add
in
dec
lcall
add
pop
dec
pop
xor
ljmp
xchg
jnp
mov
out
lret
dec
jg
lock
test
adc
dec
test
outsb
or
aaa
pop
lds
in
sahf
cmc
jle
addr16
mov
roll
mov
int
fcmovnu
mov
dec
cmp
dec
adc
or
xor
push
cmp
dec
fimull
mov
dec
mov
int3
add
or
jb
sub
iret
jp
xchg
xchg
sahf
inc
icebp
mov
adc
js
aam
or
fldl
int
gs
xlat
sahf
mov
sti
rol
pop
and
sbb
xor
inc
push
push
jg
fcmovnb
dec
jne
int
sbbb
sub
dec
mov
mov
roll
ret
das
pop
call
stc
enter
dec
adc
push
push
xor
shll
dec
add
add
jns
cwtl
inc
dec
sub
ret
outsb
aam
cltd
pop
cld
stos
hlt
pop
xchg
dec
daa
lea
sbb
cmp
sbb
sub
xchg
cs
pop
bound
cmp
mov
addr16
add
add
cmp
pop
add
dec
rorb
movsl
push
in
loopne
outsl
aas
sbb
rclb
pop
or
not
sub
xchg
js
fisttpl
test
sbbb
and
jl
scas
xchg
cmp
jge
add
ss
xchg
ret
lret
and
pop
cli
jb
fwait
jne
mov
daa
rclb
push
jb
adc
or
xchg
cmpsl
jg
sbb
out
jbe
out
mov
inc
aad
pushf
push
cmp
jle
into
push
ret
sbb
ret
daa
in
mov
xchg
fnstenv
sub
push
sbb
cmp
push
mov
mov
jg
fldl
sarl
popa
test
repz
jle
outsb
mov
je
dec
xor
int3
bound
push
sub
and
out
aas
pop
cmpsb
xor
mov
repz
out
filds
shrl
stos
pop
cmp
jl
mov
push
and
cmp
popf
lahf
testl
xor
insb
imul
stc
cmp
dec
and
ss
mov
bound
push
cli
mov
icebp
pop
mov
push
daa
lods
jge
sbb
test
mov
jl
xchg
mov
test
mov
pusha
insb
push
add
iret
jl
jns
fmull
cmp
mov
cmpsl
mov
push
in
cmp
icebp
pop
pop
aaa
and
inc
xlat
jmp
iret
js
pop
add
fnstsw
shr
add
jno
movl
cli
punpckhwd
gs
or
ss
loopne
inc
or
stos
lret
in
dec
jg
popf
sbb
add
ds
mov
adc
jbe
inc
adc
mov
pop
inc
mov
dec
out
jle
add
ljmp
pop
popa
rcr
jle
push
cli
cli
cmp
inc
int3
shrb
fwait
out
fnstcw
iret
push
xchg
cmp
out
push
shrb
loop
dec
xchg
xor
dec
jle
pop
dec
jg
inc
lret
and
add
xor
sub
xor
or
aas
lret
std
popa
movsl
xorb
mov
popa
jmp
cmpsl
jns
inc
or
adc
jne
sbb
roll
clc
push
in
mov
movsl
test
insb
out
mov
incl
std
dec
fidivrl
ret
mov
je
push
cltd
dec
cmpsb
daa
pop
mov
scas
jl
cltd
dec
nop
xor
dec
jnp
lods
sbb
jo
mov
dec
lahf
mov
jno
dec
inc
insb
jmp
ljmp
dec
add
and
xor
loop
das
push
and
cmp
flds
loop
arpl
inc
daa
push
sbb
push
in
cmp
xchg
sbb
dec
jmp
into
mov
dec
push
mov
adc
dec
sbb
adc
adc
sub
mov
fimuls
mov
adc
cld
imul
hlt
loop
adc
mov
pop
insl
dec
and
jecxz
addr16
xchg
ret
mov
dec
and
data16
cmpsb
inc
sub
dec
fiaddl
pop
in
outsl
dec
xchg
push
int3
mov
insb
add
dec
test
mov
xchg
add
ss
mov
daa
cs
add
mov
mov
cmp
jp
fidivl
jl
mov
insl
subb
jb
jl
xor
mov
dec
shrd
les
into
repnz
rclb
cmp
xor
pop
lea
pop
cmp
or
insl
add
ja
add
mov
inc
pop
in
cmp
xor
shll
pop
imul
aas
push
sub
cld
and
add
into
in
jl
pushw
fcomps
jge
cli
inc
in
sar
into
arpl
shlb
rorl
test
repz
rcr
dec
or
iret
fs
lods
into
repz
inc
ss
lods
add
dec
test
xchg
xchg
ljmp
dec
push
nop
loope
or
shrb
rdmsr
add
rcl
or
xor
in
scas
jbe
pop
mov
outsl
jp
pusha
inc
add
cmpsl
insb
dec
orb
cltd
mov
rcll
mov
stos
dec
in
jp
lods
scas
sub
addr16
dec
in
mov
push
xor
std
dec
xchg
push
jge
add
xor
cmc
and
ljmp
sbb
dec
pushf
loopne
inc
ret
testb
sbb
insb
aam
cmp
ss
xchg
mov
jg
jbe
dec
jns
pushf
lock
stc
imul
add
jl
into
dec
fs
push
jg
and
outsl
fcom
pop
mov
dec
cmp
jle
lahf
mov
xchg
mov
inc
cmp
cwtl
xlat
lret
xor
lret
jecxz
mov
xchg
repz
mul
fwait
lea
outsb
data16
mov
sbb
test
pop
xorb
or
xchg
sbb
jmp
sub
subl
xor
pusha
bound
dec
aam
popa
cmp
mov
sbb
xchg
inc
push
ss
adc
stos
mov
stos
inc
mov
dec
jbe
cmp
gs
push
iret
ss
sbb
cs
cmp
enter
jnp
fcmovnb
pop
mov
cltd
int
xor
inc
inc
xor
lods
scas
es
out
cmp
push
sbb
les
andb
lods
pop
jg
cmp
sub
dec
ret
xchg
inc
ret
outsl
stos
jb
aaa
into
jle
negb
ret
insl
adcb
into
enter
push
das
icebp
les
dec
gs
int3
mov
dec
xchg
sbb
sbb
add
gs
mov
aad
jmp
inc
dec
dec
xchg
xchg
or
loopne
pop
bound
cld
mov
adc
sub
jle
pop
out
mov
addr16
lds
jp
mov
int3
out
lea
or
stos
cmp
shlb
int3
jg
aas
push
dec
add
push
mov
cs
dec
fs
sbb
inc
ja
repnz
or
aas
das
sbb
pusha
push
jae
mov
movl
sbb
sbb
loope
push
push
fdivl
adc
popa
test
das
sub
fs
stos
fldenv
cmc
ret
adc
mov
inc
and
jmp
mov
jbe
and
loopne
pop
dec
jg
xor
ss
into
in
pop
mov
test
and
sahf
jns
pushf
fmulp
pop
pop
jl
adc
dec
cmp
in
jmp
xchg
xchg
in
jmp
inc
outsl
cmovp
push
cmp
dec
sbb
test
les
aam
push
xor
mov
aas
insb
stos
int3
dec
inc
les
ds
shlb
xchg
add
gs
mov
pop
mov
sbb
cmp
mov
inc
test
add
inc
daa
mov
in
cmp
rorl
xor
aam
cmp
mov
mov
mov
add
out
push
jmp
int
mov
mov
sub
inc
xchg
adc
fiaddl
cs
ret
inc
cmpsb
jl
mov
jle
mov
cmp
add
fs
sub
mov
lods
fldenv
fcompl
loope
mov
in
inc
sbb
adc
neg
int3
inc
dec
xor
loope
dec
fdivrs
mov
aam
dec
imul
push
dec
jno
nop
popa
cmc
pop
jmp
xor
stc
sbb
gs
popf
insb
dec
fstps
add
mov
cld
loopne
dec
jl
cmp
sub
mov
lret
movsb
fadd
push
dec
fs
lods
jmp
push
fwait
inc
xchg
push
insl
pop
test
add
lahf
and
ja
test
jae
mov
cwtl
pop
jl
adc
lcall
and
inc
jl
daa
jp
mov
clc
xchg
or
cmp
inc
cmp
rcrl
and
dec
sti
jle
mov
adc
das
outsl
call
aaa
dec
pop
jb
ficoml
sub
test
cmpsb
nop
add
stos
out
repnz
dec
fdivrp
pop
cmp
pop
insb
mov
xchg
lock
jp
in
shr
jo
in
inc
inc
test
xor
mov
cmpsl
pushf
dec
mov
jmp
sub
sbb
scas
mov
jo
fld1
loopne
mov
insb
out
xor
inc
arpl
out
mov
dec
jo
jle
into
decl
dec
int
cmp
xchg
aad
inc
sahf
fmuls
in
pop
mov
push
mov
jl
dec
lods
inc
aad
mov
dec
push
mov
jbe
dec
dec
stc
data16
dec
push
mov
sub
mov
xbegin
jge
enter
mov
out
push
xor
pop
fmull
pop
stos
fcmovu
icebp
pusha
cmpsb
cwtl
cmpsb
inc
outsl
jb
ss
dec
pop
xor
sub
cmp
dec
scas
and
in
arpl
icebp
dec
push
jnp
push
test
add
push
fisttps
xchg
dec
daa
mov
test
adc
dec
sub
add
lods
dec
mov
cwtl
jl
xchg
fisttps
fisttpl
out
dec
cld
push
mull
lahf
jmp
cmp
sahf
jle
insl
scas
div
pop
fnstenv
and
or
sbb
stc
aad
dec
in
lahf
and
adc
and
int
aaa
insb
xchg
sub
push
leave
aas
xchg
mov
mov
lahf
addb
ljmp
inc
add
call
adc
cmpsl
lock
dec
das
shlb
jl
fwait
stos
je
adc
mov
push
xlat
push
dec
inc
aad
jmp
lret
ljmp
inc
pop
cs
stos
inc
inc
cmp
rcl
out
out
gs
call
loop
imulb
add
pop
or
cmp
sbb
rcll
jns
stos
push
sub
pop
sbb
lret
push
lods
cmp
sbb
clc
jmp
mov
test
jmp
jl
mov
cmpsb
mov
inc
out
ds
push
aaa
mov
fisubl
mov
or
scas
int
shlb
xor
xchg
sub
rclb
xchg
pushf
insl
inc
pushf
jl
out
add
cmp
mov
int
test
lock
add
decl
push
and
dec
push
cmp
or
fmul
rcrl
push
cmc
es
xchg
out
aad
scas
and
mov
jno
xlat
fstpt
push
repz
fidivrl
jno
es
out
addr16
xor
inc
sub
adc
inc
jle
xchg
sub
das
addb
cmp
jmp
ret
xor
inc
adc
idiv
ret
jb
enter
add
jb
cmp
push
iret
add
daa
dec
jle
ljmp
sub
inc
lret
pop
inc
pop
sbb
ficoms
int
lret
cmp
iret
sub
inc
pushf
jle
mov
xchg
cmp
jns
mov
mov
inc
dec
adc
fcmovb
dec
bnd
jne
rcrl
cli
dec
mov
jno
or
push
pop
loopne
sub
or
into
adc
daa
mov
jns
movsb
jmp
mov
xchg
scas
repz
mov
cmp
mov
xchg
fldz
mov
mov
outsb
imul
nop
dec
rorb
out
jae
mov
shrb
in
cmp
mov
cmpsl
cmpsl
sbb
fistps
pop
es
add
inc
lods
and
call
inc
dec
arpl
divl
dec
into
fldcw
loope
popa
jnp
ja
dec
leave
pop
xchg
xor
pop
xchg
imul
push
jmp
dec
push
inc
mov
mov
mov
lds
xor
cmp
std
sarb
stc
test
ljmp
dec
in
lret
movsl
jmp
test
sbb
xchg
shll
push
loopne
push
cmc
ficomps
xor
icebp
fdivs
pop
mov
or
xorl
adc
insb
sbb
aaa
testl
sbb
out
arpl
push
push
dec
in
inc
cmp
mov
scas
fs
sarl
imul
insb
ljmp
dec
push
cli
dec
jmp
movsb
iret
cmpsb
push
push
add
pop
cld
mov
dec
cmp
in
dec
orb
jns
ret
bound
cmp
inc
ds
cmp
test
jp
iret
imul
cmpsl
mov
sub
inc
jb
jb
loopne
xchg
jmp
loop
lahf
in
stc
mov
push
xor
jg
jne
ljmp
push
lret
out
repz
and
dec
push
fidivrl
icebp
push
and
movsl
ljmp
fidivs
popf
sub
orl
imul
imul
dec
addr16
into
mov
dec
cmpsb
mov
out
sahf
or
adc
dec
pop
in
hlt
add
inc
arpl
push
push
cld
dec
add
shlb
fwait
dec
mov
shll
cltd
testb
arpl
xchg
xchg
js
ss
and
lods
gs
dec
dec
sub
fldcw
loopne
fmuls
lods
xchg
imul
shrl
fwait
int
mov
dec
sub
dec
out
sub
out
adc
lea
enter
dec
popa
cs
rorl
adc
push
imul
pop
jl
cld
test
lret
add
lret
push
cmc
xor
mov
inc
jne
inc
cmp
xchg
dec
adc
pop
out
scas
sbb
cmpl
jl
scas
imul
add
inc
inc
les
aas
in
fistpl
xchg
lods
in
mov
mov
jnp
repnz
dec
fwait
pop
sahf
adc
cmp
pop
fisubrs
stos
insb
inc
stos
jle
sub
jae
sti
inc
daa
iret
xchg
ljmp
je
dec
xor
mov
test
out
push
ja
stos
add
lods
xchg
iret
xchg
mov
dec
pop
push
sbb
sbbb
sbb
push
jns
pop
push
dec
outsb
sub
fisttps
mov
scas
adc
jg
insl
popf
dec
inc
sbb
lcall
mov
addr16
push
into
and
mov
jecxz
xor
inc
popa
enter
mov
lods
test
pop
test
aad
adc
push
in
cmp
dec
or
idivl
dec
sahf
adc
sub
sbb
test
pusha
add
inc
dec
int3
sbb
jne
inc
fs
push
sub
jne
outsl
and
pop
fstl
xchg
push
je
push
push
mov
and
movsb
into
cmp
push
fcoms
in
cmc
push
out
aaa
push
insb
outsl
sub
es
lret
mov
ret
pusha
insl
in
and
fsubrs
call
cmp
test
add
out
sbb
outsl
or
test
inc
jl
call
sub
sub
sbbl
dec
jg
mov
popf
push
jns
mov
fs
xor
jl
popa
mov
std
add
mov
pop
popa
lret
pop
rcr
bound
xchg
daa
lret
je
pop
dec
stos
jnp
jmp
push
mov
rcrb
mov
aaa
ds
xor
add
jns
adc
aas
aaa
lods
hlt
add
rcll
inc
add
adc
test
dec
out
jg
sbb
rol
cmp
pushf
push
sbb
pop
rcpps
fcompl
push
dec
dec
jle
xchg
lret
fs
out
mov
or
inc
in
dec
dec
sarl
out
xor
pop
fistps
iret
mov
nop
dec
mov
mov
mov
cld
adcl
mov
rolb
clc
loop
sub
loopne
outsb
movsb
faddl
out
mov
xor
mov
addr16
bound
arpl
push
push
sbb
rcl
nop
dec
pop
fadd
pushf
mov
mov
push
cld
icebp
das
icebp
loopne
mov
ret
aam
lods
inc
notl
pop
rcrl
or
cmp
iret
rolb
pop
mov
xchg
adc
jae
jmp
pop
stc
dec
lods
push
jg
lods
cli
lret
jp
xchg
push
jl
lahf
pop
adc
popl
mov
jg
mov
mov
scas
sbb
and
dec
push
jmp
fwait
and
or
pop
sub
mov
fistpll
sub
hlt
jg
add
repz
mov
dec
shlb
push
xor
sub
xor
arpl
lods
push
cs
xor
push
mov
jnp
and
jge
jo
jo
daa
xchg
movsl
push
dec
add
adc
sub
inc
dec
sarl
hlt
mov
push
leave
mov
inc
push
or
aad
test
mov
es
push
sub
push
push
sub
fnstsw
mov
dec
add
loop
dec
scas
or
cmovle
test
inc
dec
sti
andb
xchg
or
xorb
fldlg2
enter
xchg
jmp
leave
ds
dec
mov
push
add
mov
pop
hlt
pop
pop
sbbl
in
aad
dec
clc
inc
imul
jns
adc
test
cmp
or
mov
es
iret
jo
repnz
mov
mov
mov
sbb
dec
mov
mov
sar
lret
sbb
xor
push
sbb
lods
jg
mov
mov
inc
lret
inc
in
pop
incl
loopne
xchg
js
dec
lahf
jns
dec
pop
push
ss
rcl
ljmp
enter
daa
rcr
jg
xor
dec
and
cltd
add
dec
xor
fiadds
jb
mov
int3
fsubl
jne
ret
mov
jge
inc
cwtl
sti
cs
pop
inc
rcl
pushf
cmp
jle
dec
mov
shr
pushf
mov
ds
jg
icebp
iret
xor
sbb
or
xchg
xchg
aaa
cs
fwait
outsl
mov
mov
sbb
inc
icebp
jge
lods
fisubl
and
sub
pop
mov
mov
sub
xchg
cmp
sub
imul
inc
cld
mov
sbb
bound
dec
ljmp
add
pop
imull
repz
push
data16
mov
repnz
inc
mov
sub
ficompl
aam
and
fbld
outsl
jo
or
or
call
out
jmp
push
repz
ds
adc
fwait
scas
in
jnp
jo
std
xchg
sub
iret
xor
xchg
fisttps
movsl
mov
mov
shll
lds
repz
ljmp
rcll
lds
sub
jle
pusha
outsl
push
pop
dec
lret
push
ret
xchg
ljmp
mov
ficoml
lds
xor
mov
out
sar
and
pushf
add
xlat
add
insb
mov
testl
dec
outsl
ds
jns
stos
add
xchg
inc
imul
int
pop
adc
ja
cmc
fistpll
dec
nop
test
movsl
jl
pop
push
dec
mov
push
aad
adc
stc
dec
xor
mov
adc
dec
mull
jbe
leave
cli
pop
mov
ss
add
xchg
pop
xchg
mov
mov
push
ret
fdivr
pop
mov
jle
test
xchg
in
jmp
dec
sbb
sbb
mov
mov
aad
push
imul
sbb
or
push
pop
push
dec
je
mov
push
out
in
jb
dec
orb
dec
sub
fmuls
aad
xchg
xchg
loop
dec
je
pop
pop
aaa
dec
pop
dec
nop
fwait
push
scas
int3
mov
mov
mov
packssdw
insb
pop
test
cmc
mov
test
outsl
dec
dec
gs
pop
scas
pop
or
pop
je
xchg
cmpsl
pop
dec
jle
adc
mov
add
rorb
scas
mov
sbb
fwait
pusha
shrb
jno
aas
test
and
adc
xchg
imul
jp
push
bound
push
or
orb
inc
icebp
cltd
movsl
mov
mov
sub
rorl
pop
and
cmp
add
cmp
daa
and
std
into
inc
xchg
dec
xchg
xchg
lock
cwtl
stc
inc
pop
lock
iret
cmpsl
loopne
adc
push
es
js
lea
mov
sbb
dec
jl
mov
mov
xor
ret
sub
dec
jb
sub
sti
and
mov
mov
mov
test
pop
and
aas
aas
imul
cmc
add
sbb
sbb
mov
pop
stos
call
mull
sub
jle
sbbb
movsl
or
lods
scas
push
pcmpeqw
push
bound
mov
sub
shl
sub
xor
pop
incb
lahf
fidivrl
ljmp
add
fwait
mov
insb
lahf
cmp
push
cmp
in
jl
movsl
cs
test
nop
xor
jo
clc
push
xlat
iret
adc
cltd
lret
dec
pop
je
push
out
mov
inc
dec
xchg
jae
pop
cmc
or
test
jp
pop
mov
and
jle
jg
dec
mov
push
cmp
call
dec
popa
lods
add
lods
in
sbb
mov
lahf
dec
fldl
inc
sub
xor
sub
es
mov
xor
dec
out
movsb
sub
xlat
sti
cmp
lcall
jnp
jmp
and
cmp
dec
jp
ja
lahf
iret
in
iret
xchg
dec
push
inc
and
push
insl
daa
testl
jg
dec
cmp
lahf
lds
std
sub
shl
addb
adc
mov
mov
inc
xchg
lea
dec
jb
outsl
pop
dec
fsubs
dec
arpl
addl
push
xor
mov
sub
lds
sub
stos
sub
or
mov
jg
and
jle
shrb
push
push
cs
sbb
adc
and
bnd
mov
bound
pop
repnz
cmc
clc
mov
dec
push
sbb
ljmp
jl,pt
jno
mov
jg
xlat
xchg
pop
inc
push
push
clc
cmp
jl
pop
jg
in
pop
push
sbb
adc
faddl
mov
out
lea
mov
lret
repnz
push
xor
dec
jge
and
sbb
sub
loope
push
sub
pop
pop
sbb
arpl
inc
push
and
push
daa
inc
lret
cmp
ss
sub
sti
cs
adc
dec
xor
fstps
pushf
inc
cmpsl
xor
push
adc
daa
mov
or
shlb
pop
sarb
sbb
dec
test
aaa
jg
cmp
fmuls
fwait
and
jg
fsubl
add
push
sub
in
shl
sarb
cmpsb
jl
xchg
aad
orl
sbb
int
xchg
fdecstp
addr16
pop
push
test
push
por
adc
aad
pextrw
andl
dec
pop
mov
imul
sbb
jne
je
loop
fwait
adcb
adc
arpl
fwait
xchg
ret
sub
dec
bnd
dec
jle
sub
pop
pop
sub
pusha
movsb
stos
jg
cmp
out
dec
cmp
xor
jbe,pt
stos
mov
push
je
movsl
jle
outsl
leave
or
jae
insl
lea
cld
mov
stos
aas
stos
sbb
cmpsb
fs
data16
test
mov
xchg
pop
add
js
mov
add
aaa
mov
hlt
jns
cmp
fwait
dec
ja
add
sub
out
dec
cmp
popa
or
xor
dec
mov
call
outsb
sbb
adc
pop
dec
fdivrl
stc
dec
push
or
lret
outsb
iret
or
fsubp
es
cltd
sahf
dec
stos
mov
lret
mov
inc
pop
xor
pop
xchg
aam
adc
inc
inc
cld
or
mov
pop
and
sti
add
rorl
sbb
lcall
test
aad
in
dec
negl
mov
or
into
test
inc
aaa
dec
jp
mov
js
dec
xchg
outsl
xchg
push
jbe
rcll
data16
int3
orb
inc
scas
mov
push
ja
sbb
movsb
gs
jmp
xor
sub
mov
js
push
mov
adc
xor
iret
scas
adc
je
cmp
dec
cmp
fs
in
dec
pop
jecxz
xor
fisubl
jl
push
cld
insl
push
filds
cmp
fstps
xchg
addl
adc
mov
rcrl
test
pop
sub
test
out
ljmp
cmp
xchg
add
cs
movsb
push
scas
cmpsb
jle
mul
das
xlat
inc
xor
xchg
xor
jbe
in
aas
jle
push
xchg
pop
mov
cmp
pop
sub
and
inc
or
jl
cs
mov
aad
cmp
fs
shll
sti
notb
insb
shr
dec
sub
xchg
mov
in
pop
adc
dec
pop
sub
fidivrl
cmpsl
push
mov
dec
popa
das
cli
fidivrl
int
fs
loope
imul
inc
ljmp
jg
lret
inc
and
leave
or
aaa
pop
fcomi
test
jle
nop
repnz
inc
jg
dec
sbb
addr16
outsb
jle
cmc
push
stc
add
push
inc
pop
jg
pusha
adc
mov
inc
movsb
cli
outsl
push
dec
mov
sti
lret
sbb
je
pop
sahf
out
out
inc
cmp
push
xor
and
int
or
pop
push
fnstenv
in
xor
jae
push
mov
insb
pusha
cmp
int3
int
repz
mov
push
lods
iret
das
add
mov
outsb
inc
aas
lahf
adc
out
jl
sbb
les
popf
aam
mov
mov
or
or
add
loop,pt
inc
jle
cmp
lock
rcrb
jo
cmp
fcmove
negl
js
test
loopne
rcr
or
cmp
push
push
add
std
int
inc
int
fidivrs
in
enter
dec
sub
repnz
out
push
push
cmp
scas
jle
xchg
mov
mov
jbe
out
int
sarb
pop
inc
jle
mov
test
fdivs
clc
lret
push
push
cmp
hlt
jno
xor
xchg
and
or
sub
nop
cmpsb
mov
xor
insl
jbe
jl
dec
cmp
fs
mov
lods
stos
and
ret
cmp
not
jl
stc
add
inc
dec
jo
mov
mov
stc
jb
ret
or
fsubrl
ficomps
xlat
inc
sub
inc
pusha
mov
xor
or
push
sub
mov
xor
jb
mov
hlt
mov
cmp
add
cmpsl
dec
and
lret
and
jo
js
mov
lahf
incb
pop
lret
and
push
mov
lods
inc
mov
jb
and
cmp
flds
jns
lock
and
mov
push
lcall
inc
pop
sub
into
pop
call
arpl
or
push
mov
rcrl
xchg
push
jo
xchg
aam
stos
test
sub
cs
out
es
and
int
in
or
and
mov
ficomps
dec
scas
stc
outsb
pop
pop
cmp
dec
push
mov
int3
cmp
dec
lea
mov
scas
cmp
sub
and
bound
dec
adc
mov
adc
mov
jo
daa
pop
xor
icebp
adc
test
ljmp
jmpw
in
mov
out
dec
scas
mov
pop
mov
dec
jnp
cmp
pop
pop
mov
jecxz,pt
test
cmp
push
sbb
push
sbb
cmp
out
dec
cli
adc
mov
mov
ficomps
shlb
sahf
add
negl
ds
rclb
push
lret
loop
inc
outsb
cld
dec
es
repz
mov
in
cmp
dec
test
xor
adc
dec
js
or
sub
pop
clc
dec
jb
jno
aam
sub
mov
sbb
test
and
dec
mov
fmul
mov
xchg
fucom
adc
scas
cli
adc
fcmovu
dec
mov
adc
push
xor
bswap
dec
mov
loope
stos
mov
jecxz
add
xorl
fistpl
mov
dec
movsl
or
jge
inc
mov
jbe
xor
inc
mov
dec
lcall
pop
outsl
sub
push
call
rorl
pop
cmp
pop
inc
jo
jle
arpl
cwtl
frstor
daa
notl
pop
xchg
movb
into
add
mov
outsl
fistpl
mov
mov
pop
bswap
stc
adc
test
jle
mov
jecxz
inc
mov
dec
movsb
sub
aaa
jb
mov
lret
bnd
fistps
pop
enter
jle,pn
lods
push
adc
test
sbb
outsb
fcmovb
mov
aaa
cli
or
cmp
jo
out
ret
shl
inc
jle
mov
sub
dec
sub
xorb
data16
push
insb
insl
dec
ss
add
sub
bswap
sub
dec
adc
jle
fimull
ja
stos
bound
inc
ffreep
daa
dec
jl
fcom
movsb
add
pop
xchg
fwait
cltd
inc
fmull
xlat
dec
sub
iret
pop
inc
pop
cmp
daa
movd
jno
out
popf
ljmp
cwtl
sbb
mov
add
mov
ss
fwait
inc
or
pop
rorb
sbb
add
dec
jo
mov
and
jo
pop
mov
push
test
ja
mov
dec
mov
dec
jbe
aam
mov
pop
dec
inc
adc
and
cli
cmp
add
dec
lods
sub
aaa
lret
push
mov
aam
mov
and
loope
lock
push
scas
add
cmp
mov
mov
rorl
out
add
xor
popa
cmpsb
push
adc
jmp
add
and
xor
dec
add
iret
iret
jle
lds
and
gs
out
dec
inc
jb
movsb
rsqrtps
popa
xchg
lea
aaa
int
and
pushw
cmpsl
mov
mov
out
andl
daa
pop
in
pusha
jbe
inc
xchg
in
stc
mov
insl
jbe
mov
test
stos
push
gs
mov
lret
cli
pop
mov
ficoms
fistpll
mov
jle
out
fisttpl
and
shlb
inc
push
or
jg
push
sarb
dec
lahf
mov
pusha
cmp
das
dec
or
jp
push
inc
inc
push
and
nop
mov
cltd
call
cmp
fdivr
cmc
sub
lods
xchg
lock
push
add
adc
popf
sti
fs
sub
push
or
cmp
mov
mov
mov
adc
mov
push
insl
cmp
xchg
sub
fwait
stos
jle
fbld
movsb
sahf
inc
dec
repz
stc
cmp
movsb
xchg
push
jle
add
les
aaa
mov
insb
fwait
pop
hlt
imul
mov
xor
sti
fsubrs
movsb
jl
enter
out
push
imul
xor
and
popf
test
jmp
ds
pop
dec
shlb
faddp
cmp
xor
cli
dec
sti
jno
mov
push
dec
pop
xor
ret
xchg
sub
push
push
push
fmuls
mov
mov
dec
pop
mov
xchg
jbe
jl
push
push
icebp
imul
lret
test
das
movsl
test
mov
cli
xchg
xchg
sub
orb
pushf
and
dec
sahf
sbb
mov
pop
sar
js
enter
lret
jmp
repz
pop
cmp
rcl
dec
push
insb
rcr
mov
cmpsb
dec
test
jbe
fadd
cmp
add
adc
sub
pop
mov
fbstp
sarb
dec
mov
add
jae
mov
addr16
sarb
inc
les
fldenv
dec
adc
call
push
enter
lahf
cltd
mov
dec
movl
dec
jge
mov
push
jmp
inc
lcall
xlat
sub
push
and
cmpsb
dec
nop
in
jmp
dec
xor
jp
push
cltd
lock
out
enter
out
xchg
ja
adc
stc
dec
addr16
insl
ret
jbe
cmp
dec
imul
cmpsb
sarb
dec
add
sahf
mov
jae,pt
push
mov
inc
das
inc
sbb
bound
pop
push
stos
fcomps
dec
xchg
mov
inc
dec
adc
add
aam
es
and
xor
inc
dec
or
push
ds
cmc
add
push
mov
fnsave
dec
mov
sub
cli
push
into
xor
xchg
dec
ljmp
dec
cmp
mov
xor
xchg
orl
cmp
stos
packuswb
popf
in
mov
cmc
pop
or
push
pop
fsubp
fldenv
mov
movsl
and
js
into
fcmove
push
aam
and
add
jne
loopne
sub
xchg
xor
lahf
jnp
xchg
cmp
test
cld
dec
jl
pusha
inc
lret
aas
ret
cmp
sub
scas
int3
inc
jg
sti
pushf
int
dec
lea
loope
sbb
inc
mov
and
push
dec
or
xor
sti
or
ss
fwait
xor
mov
repz
fstpt
int3
xor
mov
inc
jp,pt
push
fsub
rol
mov
mov
in
jp
dec
jge
daa
mull
cwtl
lcall
pop
and
movsl
push
cwtl
out
loop
dec
rclb
or
out
jle
mov
das
icebp
dec
push
sub
cmp
fimull
dec
jg
or
movsl
or
iret
sarl
mov
ret
iret
jg
aam
cwtl
arpl
loopne
push
xlat
cs
ficompl
and
adc
fwait
push
cmp
pop
cmp
aad
push
outsl
push
test
mov
add
and
mov
jae
push
stc
xchg
inc
jno
push
iret
ljmp
and
cmp
add
into
dec
push
mov
push
sbb
addl
imul
pop
jge
mov
lea
dec
add
hlt
xchg
pop
adc
mov
or
daa
xchg
push
cmp
dec
int3
mov
pop
inc
adc
loope
outsb
push
jno
clc
dec
xchg
jnp
lahf
mov
mov
iret
sbb
pop
out
jl
mov
mov
push
fdivl
daa
jmp
mov
data16
mov
xor
add
std
push
inc
lock
jns
add
and
xchg
xor
xchg
push
imul
and
jne
mov
and
or
sahf
aam
lahf
out
mov
inc
adc
push
xchg
mov
test
mov
popf
gs
xor
mov
push
dec
bound
adc
xchg
inc
ljmp
fwait
rcr
movsl
dec
enter
cmp
dec
insb
jg
jbe
pop
sub
ja
insl
aaa
xor
cmp
je
or
push
pop
pop
add
mov
jle
cmp
movsl
ret
int3
test
pop
push
cmp
push
dec
mov
stc
or
sub
stc
shr
lcall
push
jo
pmullw
pop
inc
insb
sub
inc
cmc
rolb
mov
xrstor
pop
pop
jle
mov
clc
mov
test
sbb
push
mov
cmp
jns
mov
jmp
push
nop
std
push
lcall
xchg
lcall
divb
cmp
out
push
insb
rorl
imul
cmc
jl
outsl
test
add
fimull
dec
jnp
and
mov
adc
ds
push
inc
jle
test
scas
pop
insb
jl
je
ja
in
sub
pop
sbb
insl
mov
movsb
movsb
mov
push
pushf
pop
test
pop
inc
mov
xchg
mov
fisubl
ret
cli
sarl
mov
dec
jg
lea
dec
out
or
jno
jnp
add
decb
sti
es
or
dec
mov
dec
in
xlat
dec
pop
pop
adc
out
dec
xor
sbb
cmc
dec
and
or
mov
bound
cld
push
dec
lods
fsubrp
popa
dec
sbb
dec
push
fcomp
inc
cmpsl
loop
xchg
xor
pop
jle
sbb
outsb
sbb
or
mov
dec
cmpsb
mov
cs
cmp
aam
dec
mov
outsb
in
mov
push
xlat
and
inc
iret
adc
lea
dec
in
mov
popa
push
jmp
mov
dec
xchg
jne
mov
cmc
pop
ss
scas
mov
push
insb
dec
push
out
repz
lock
dec
pop
sahf
mov
in
ds
out
inc
xchg
testb
jbe
pushf
aad
cmp
shl
daa
ret
or
jg
jno
std
popa
push
dec
sti
insb
popf
dec
inc
jle
dec
pusha
stos
adc
inc
imul
inc
or
and
std
xchg
push
sub
sub
adc
mov
stos
imull
arpl
aas
sub
aad
fmull
out
mov
dec
sbb
inc
test
aad
rorl
sub
or
sti
mov
pop
or
fwait
dec
inc
jne
mov
dec
push
or
sbb
pop
push
mov
xor
and
sub
and
inc
mov
sub
push
adc
mull
inc
push
fisttpll
pop
addr16
test
rclb
pop
add
dec
dec
inc
push
inc
les
pop
xchg
loopne
clc
mov
dec
popf
cli
sahf
push
test
sbb
sar
jmp
scas
pop
repnz
adc
fwait
loopne
push
ljmp
lahf
into
xor
and
addr16
mov
iret
rolb
sub
cmpsb
xchg
dec
sti
adc
and
dec
add
sbb
ljmp
fldl
mov
cmp
pop
mov
aaa
ljmp
xor
pusha
push
fidivs
mov
dec
inc
adc
into
fcompl
lret
das
dec
mov
add
pop
and
cmp
dec
cmp
inc
jo
dec
ds
mov
dec
mov
pop
popa
dec
ficoml
xor
out
pop
mov
mov
inc
jbe
dec
push
addr16
pusha
aad
or
fildl
inc
pop
jb
add
xchg
jne
dec
fdivrs
jno
dec
inc
mov
sbb
cwtl
dec
rcrl
and
and
mov
loope
xlat
movsl
jae
dec
iret
cmp
mov
out
mov
xchg
jns
jb
in
cltd
das
pop
and
bound
xchg
ja
loopne
notl
mov
lcall
ret
lods
dec
das
sti
call
lahf
imul
or
test
std
fs
cmp
push
push
lret
ljmp
jb
xchg
mov
sbb
pop
jg
adcb
pushf
dec
sub
int
ret
pop
jle
bswap
mov
pop
jo
stc
loop
lahf
pop
jge
js
mov
and
inc
leave
fdivs
insb
cs
push
mov
jmp
pop
inc
inc
dec
mov
insb
xchg
cs
push
dec
push
in
push
into
in
int3
dec
cmpsb
push
adc
pop
xchg
lret
inc
dec
cli
imul
dec
jae
xchg
orl
cmp
push
push
dec
dec
add
xchg
mov
psadbw
lcall
dec
out
hlt
and
or
pop
mov
xor
pop
fs
xchg
dec
cmp
jbe
and
mov
psllw
dec
sub
loope
dec
int
pop
fnstcw
xchg
mov
and
xor
mov
mov
dec
fisubrl
sbb
dec
jecxz
cmpsb
leave
mov
xor
test
dec
pop
or
dec
loopne
hlt
jl
sti
mov
jb
out
in
dec
lea
test
adc
and
pop
or
xor
inc
dec
das
fdivrs
daa
sti
ret
push
mov
cmp
adc
cwtl
inc
lcall
and
shlb
dec
fdivrp
out
xchg
inc
into
mov
ds
test
dec
or
dec
push
lret
movsl
sub
jno
mov
mov
int
pop
or
pop
mov
ret
pushf
push
adc
dec
inc
mov
cmp
dec
xor
xor
fwait
nop
dec
and
test
jo
fildll
test
pop
popa
sub
mov
dec
or
mov
jecxz
icebp
jbe
inc
jl
and
sub
or
int3
dec
mov
pusha
les
ret
subl
in
call
push
mov
fwait
stos
pop
add
stc
not
sub
lret
lods
jl
movsl
iret
outsb
sbb
test
into
js
mov
cmp
jge
add
scas
add
fbld
out
mov
pusha
subb
jecxz
mov
mov
dec
pop
xor
pop
xchg
mov
in
pop
dec
xchg
test
push
mov
mov
jl
dec
mov
add
daa
test
pop
and
jo
ds
inc
cmpsl
sub
push
cli
pop
mov
mov
jo
dec
mov
xor
adc
repnz
dec
cmpsl
mov
sbb
inc
repz
jecxz
sbb
dec
xchg
xchg
loop
fmull
fisttpll
xor
push
xor
insl
mov
add
dec
cmc
push
add
adc
cwtl
fsubrl
repz
pop
int
rcl
out
pop
cmp
pop
cmp
dec
mov
adc
dec
add
mov
inc
dec
fdivrs
jle
sbb
sub
cmp
gs
sahf
mov
js
lret
test
sub
lret
jmp
ds
xchg
add
inc
cmc
cmpsb
subl
xlat
sti
dec
iret
daa
mov
xor
loope
xchg
into
ret
bound
scas
push
dec
in
add
insl
aam
rcr
test
int3
xor
out
sbb
hlt
xor
push
adc
mov
inc
pop
arpl
out
adc
jo
dec
sub
jo
movsl
arpl
fsub
dec
mov
push
lahf
pop
in
sbb
jo
dec
push
xchg
leave
sbb
rcrb
test
adc
adc
sbb
xchg
add
push
push
xchg
imul
mov
cmpsb
push
rorb
lcall
ss
lea
pop
inc
add
test
lahf
dec
aad
pop
gs
adc
cmpl
add
pcmpeqw
in
add
pop
sub
out
cmp
or
dec
loop
cmp
loopne
js
dec
lock
pop
push
pop
pop
mov
repnz
jp
fsubp
push
stc
shll
jo
add
lock
fstpl
cmp
dec
repz
mov
push
out
or
dec
adc
inc
sbb
adc
movsl
dec
lock
insb
pushf
dec
mov
icebp
fisubrs
xor
ljmp
ljmp
cmp
xchg
mov
popf
xchg
dec
sbbl
mov
inc
pop
sub
popf
scas
and
inc
fsubrs
dec
data16
lret
repnz
hlt
jmp
adc
or
lcall
dec
sbb
cmp
inc
xchg
repnz
push
adc
mov
jmp
jbe
cmp
add
stos
sub
sub
repz
cwtl
mov
xchg
xor
xor
jl
push
and
inc
or
xchg
testl
cmpsl
cmp
loop
inc
dec
xor
outsl
xchg
sbb
gs
mov
jle
movsl
sbb
xlat
jl,pn
sub
pusha
aaa
aam
push
fcoms
mov
and
lds
dec
insb
push
mov
das
push
jae
xchg
jb
fsubl
iret
xchg
lahf
push
fisubs
jl
mov
cmp
je
dec
or
dec
mov
cwtl
cltd
fildl
nop
lret
dec
test
pop
movsb
jg
push
xor
pop
dec
mov
rcll
and
dec
mov
insl
cwtl
gs
mov
int3
inc
stc
popf
lock
imul
dec
mov
rcr
sub
and
push
mov
iret
cmp
and
movsl
cs
and
das
dec
repz
test
push
cmp
dec
mov
orb
xor
fwait
add
sub
push
and
into
sbb
lods
pop
nop
cmp
dec
std
dec
xchg
pop
lock
pop
cmp
sub
jl
jle
push
dec
scas
int3
mov
dec
data16
fsubrp
pop
adc
and
dec
mov
fcoms
xchg
repnz
fildll
dec
out
mov
pop
pop
loopne
dec
into
lods
filds
aad
dec
dec
xlat
int
arpl
add
clc
dec
xor
lods
gs
or
jbe
push
push
xor
lea
pop
movsl
add
push
cmp
dec
mov
push
das
xor
ds
jnp
inc
cmp
rcll
mov
dec
add
mov
arpl
aad
add
mov
mov
jge
icebp
das
dec
ffreep
aas
into
sbb
xor
or
or
mov
sbb
fmuls
ret
shl
aad
stos
cmp
mov
sbb
dec
mov
scas
pop
inc
dec
outsl
jns
adc
push
enter
outsb
or
cwtl
icebp
leave
mov
xchg
js
jg
insl
xor
repz
psubb
pop
int
inc
sbb
cmp
cmpsl
clc
or
sahf
and
cli
stos
testl
icebp
iret
adc
mov
mov
aaa
adc
les
jle,pt
sub
std
add
stos
pusha
cmc
xor
push
cmp
mov
out
out
imul
xchg
push
test
cmc
lcall
dec
insl
mov
xchg
or
mov
jle
xlat
inc
sar
lds
push
aas
int3
cmpl
mov
cmp
add
push
mov
mov
add
out
push
arpl
ljmp
test
sbb
mov
dec
jle
pop
xchg
push
add
dec
jg
inc
rcrl
gs
loop
add
add
dec
movq
ljmp
lock
out
ja
movsb
pop
xchg
xchg
pop
add
jge
aaa
fists
jg
xchg
push
in
shlb
jg
int
cmpsb
fcoml
psrlq
add
push
sub
adc
push
xchg
daa
ljmp
dec
fldenv
into
insb
or
in
stos
icebp
mov
aam
cmp
mov
xor
xchg
adc
cmp
or
and
xchg
mov
test
cmp
and
imulb
xchg
out
dec
jae
into
sbb
mov
push
dec
cmp
das
stos
mov
lahf
inc
sbb
rcrb
xchg
aaa
in
dec
shr
mov
out
in
sbb
out
xchg
cs
mov
mov
add
dec
push
sbb
into
aaa
mov
fucom
pop
push
xlat
xchg
shrb
push
xchg
push
and
jg
stos
jle
sub
cmp
mov
ss
xor
lods
call
movsl
loopne
adc
xchg
out
cltd
lods
pop
inc
repz
loopne
cmp
xchg
js
jb,pt
dec
stos
cs
add
jno
and
pop
mov
mov
int
jb
in
xor
push
iret
dec
icebp
lds
pop
loop
dec
mov
add
imull
in
jp
push
inc
xchg
sub
sbb
jno
lea
jl
call
push
mov
sahf
push
sarl
scas
and
xor
nop
fsts
dec
in
xor
insb
mov
lds
addl
dec
push
subb
push
pop
clc
sti
adc
jge
sbb
mov
dec
add
sbb
in
dec
and
sahf
cmp
push
mov
mov
pop
jae
mov
iret
mov
fcmovnb
jle
es
loope
cmp
push
cmpsl
pop
jle
out
mov
cmp
shld
sub
nop
das
shl
cmp
fnstcw
jbe
mov
sub
fs
fs
dec
inc
popf
dec
adc
fimuls
xchg
jmp
movsb
lock
pusha
cmpsl
adc
mov
mov
leave
nop
mov
test
jb
in
testb
or
sub
mov
dec
pusha
out
pop
lea
enter
inc
mov
test
std
jg
lret
or
inc
xor
lock
push
in
mov
aam
mov
jo
pop
jb
lods
or
xor
and
and
call
inc
hlt
dec
xchg
ljmp
inc
ret
aam
dec
fisttps
xor
filds
sub
push
test
loope
dec
mov
sub
dec
dec
inc
cs
add
xor
xchg
sbb
mov
fistpll
jbe
loope
jl
push
mov
mov
in
repz
pop
mov
pop
mov
cmp
dec
filds
pusha
in
inc
fsub
iret
outsl
xchg
or
movsb
xchg
dec
sbb
and
into
mov
pusha
cmp
inc
lds
divl
sub
xchg
dec
ss
cmpsl
or
mov
mov
push
push
add
cli
sbb
push
add
jmp
xchg
xchg
ret
stc
rorb
or
jp
xor
cltd
cmpsb
dec
movups
mov
mov
lcall
dec
aad
pushf
mov
fistps
pop
xchg
outsl
pop
mov
lahf
adc
adc
mov
loope
fdivr
inc
jb
addl
in
dec
ljmp
inc
inc
popf
mov
cmp
es
mov
cmp
push
xchg
dec
xchg
cwtl
mov
adc
mov
lods
lea
addr16
imul
dec
jo
pushf
negl
repz
push
mov
inc
pop
lcall
dec
loopne
pop
xchg
in
inc
sbb
jecxz
fldenv
addr16
or
shlb
add
lock
call
out
dec
xchg
sub
out
xor
popa
test
aam
subl
push
nop
sub
test
clc
dec
fldenv
test
xlat
adc
dec
lea
pop
mov
inc
xor
hlt
fwait
pusha
iret
mov
jns
mov
xchg
or
pushf
outsb
loopne
repnz
mov
push
pop
adc
push
adc
cs
adc
mov
cwtl
pop
lahf
in
into
mov
shl
mov
cmp
orb
adc
cs
fwait
xor
movsb
sti
mov
jle
ss
negb
jg
xchg
fimull
mov
mov
add
sub
cmp
sub
leave
out
or
cmc
into
repz
call
add
fistpll
jmp
pop
arpl
mov
insl
push
and
pmuludq
fdivl
xor
jae
call
mov
cmp
in
into
dec
lahf
sbb
sub
pop
xchg
loopne
into
idivl
rcrl
add
cmp
daa
loopne
rclb
ret
out
pop
inc
adc
arpl
mov
xor
arpl
adc
sub
fisttpl
repnz
adc
xorb
lcall
out
push
and
adc
xchg
movsl
outsl
sub
out
pop
cmp
dec
pop
lods
cmp
mov
xor
lods
cs
dec
xor
dec
dec
push
mov
fildll
sbb
xchg
outsb
scas
inc
or
cmp
andl
cld
scas
aas
mov
and
push
push
sub
sbb
inc
gs
xor
je
int3
stos
pop
inc
iret
fisubs
imul
pop
pop
jmp
add
cwtl
add
cmp
dec
mov
ficompl
mov
cmp
jmp
jecxz
cmp
aaa
add
dec
add
mov
sub
sub
pop
into
jp
xchg
les
dec
das
cmp
pushf
inc
and
jnp
add
repz
ja
dec
adc
pop
inc
dec
dec
lcall
jle
pushl
xor
push
iret
fucomp
into
negb
dec
dec
out
stos
mov
clc
dec
push
sbb
push
mov
fwait
sahf
mov
gs
bndldx
sbb
pushf
cs
jno
mov
aas
clc
dec
xchg
test
fsubs
orb
xchg
inc
push
cmp
je
sbb
dec
xor
cmc
inc
out
leave
clc
fdivl
test
and
popf
iret
repz
inc
jp
dec
xlat
inc
int3
outsl
lret
in
dec
insb
popf
sub
jl
loope
xlat
fdivr
dec
xchg
lcall
push
xchg
xlat
adc
sbb
dec
pop
filds
push
inc
inc
and
out
jmp
mov
inc
xor
sahf
enter
cmpsb
jle
jl
fcmovbe
aad
stc
dec
add
mov
mov
push
or
fnsave
adc
into
dec
stos
sub
cmpsl
sbb
sarb
ds
mov
rorb
decl
shl
or
aas
cmp
jle
lock
pop
sub
imul
daa
lds
dec
jle
faddp
dec
cltd
mov
sbb
push
dec
shrb
ret
adc
mov
sbb
jl
fisubrs
in
dec
pop
rorl
loop
and
shl
sbb
and
mov
cmp
push
jge
push
ret
jns
jecxz
xchg
or
hlt
push
sub
jmp
fcomip
and
insl
or
cmp
and
testb
sub
cmp
neg
mov
test
jmp
ficompl
dec
arpl
jle
cmpsl
dec
popa
mov
and
pop
movsl
fimull
cli
cmp
sub
jbe
mov
dec
scas
sbb
cmovno
push
daa
les
and
pop
dec
jmp
mov
in
dec
cmpsl
mov
cmc
out
ud1
push
popf
call
gs
dec
xorb
cmpsl
sub
lret
dec
aaa
clc
cmp
lock
dec
fdivrs
pop
lret
adc
push
jnp
ds
out
fdivs
sbb
mov
dec
adc
lds
xchg
dec
cmp
and
sbb
minps
xor
dec
xlat
daa
cltd
push
lcall
imul
fildll
pop
sub
stos
cltd
daa
adc
dec
ret
jle
mov
mov
push
aaa
mov
cmc
jno
arpl
adc
mov
adc
sti
data16
push
dec
xchg
aad
inc
adc
xor
roll
imul
into
pop
aaa
jecxz
outsb
cmp
mov
mov
rorb
mov
xchg
mov
push
lahf
dec
in
fwait
xor
add
push
mov
loop
jbe
xor
push
mov
ds
loopne
lods
arpl
dec
into
fcoml
adc
xchg
push
jbe
sub
movsb
xchg
inc
dec
sbb
adc
std
jle
fstl
pushf
arpl
nop
and
adc
das
adc
fs
stc
or
mov
mov
in
cmp
mov
xchg
fmull
push
test
das
shl
adc
iret
cmc
dec
ret
lods
mov
arpl
jle
adcl
test
shrb
mov
pop
and
sub
xchg
jno
ja
mov
adc
adc
add
loop
xor
mov
inc
dec
lock
fs
dec
outsb
mov
pop
mov
push
sahf
aad
push
and
testb
and
popf
and
add
push
sarb
adc
call
sub
jl
rcr
add
shr
popf
out
movsl
push
lcall
push
int
xor
int
jg
sub
add
dec
into
icebp
mov
pop
in
sub
js
push
jge
mov
inc
adc
dec
push
push
jo
add
and
fs
insb
xchg
pop
sbb
inc
insl
rclb
aaa
test
push
mov
adc
mov
test
push
jg
xlat
xchg
xor
xor
fwait
iret
push
pop
pop
xlat
es
inc
fmull
dec
push
sahf
and
dec
push
lea
xor
pop
cs
pop
jl
movsb
out
addr16
fnstenv
or
sar
in
out
sti
xor
movsb
cmp
mov
mov
pop
jg
cmp
lds
mov
loopne
sahf
or
cltd
negl
call
push
sub
bound
ds
lds
mov
jg
mov
fnstsw
movsb
lret
or
aas
pop
lahf
cmp
je
outsb
cmp
in
lret
pop
cmp
rcrl
pusha
lods
popf
xchg
cwtl
ret
out
repz
aad
mov
sbb
sbb
fsubrs
xchg
xchg
negl
outsb
cmp
xor
icebp
pop
fildl
xor
in
dec
dec
sbb
fistps
or
push
mov
lcall
xor
and
cs
jle
out
dec
out
cmp
sbb
and
lods
fildl
cs
and
subl
adc
lods
and
sub
pop
jo
call
insl
adc
sarl
dec
outsb
adc
les
xchg
dec
dec
mov
push
loopne
dec
fadds
out
jp
dec
setnp
adc
jns
dec
adc
rclb
cwtl
adc
xor
adc
and
das
lds
sub
pop
cmp
xor
push
dec
jecxz
jae
cmp
dec
dec
rcrl
repz
add
and
pop
jge
pop
mov
xlat
subb
push
iret
dec
mov
cmpsl
dec
inc
mov
jmp
xchg
insl
movsl
mov
lock
adc
xchg
dec
push
dec
insl
or
lods
arpl
dec
mov
cwtl
movsl
stos
inc
shl
imul
shrb
jnp
dec
cmp
push
clc
mov
fmuls
push
loop
rcrb
dec
and
je
outsl
ljmp
repnz
dec
mov
fidivrl
dec
rcr
scas
mov
outsb
sub
push
test
mov
sbbb
push
jl
xchg
sbb
rcl
sbb
gs
dec
xor
test
cltd
in
add
inc
and
push
xlat
fsubrl
dec
cli
inc
dec
fimull
pop
cwtl
jmp
dec
or
jbe
xchg
cltd
push
add
dec
outsl
jae
imul
and
sbb
jmp
dec
lock
sahf
pop
adc
dec
push
scas
shlb
test
into
sbb
xlat
es
std
inc
push
stos
xchg
loopne
into
pop
or
aaa
cmpsl
pushf
sbb
dec
sub
hlt
jno
pop
sti
rorb
dec
dec
pusha
icebp
lcall
pop
sub
stos
sbb
xchg
adc
pop
adc
xor
inc
sub
repz
iret
dec
pushf
mov
cmc
inc
dec
or
mov
js
lret
imul
fisttpll
adc
inc
pop
scas
daa
aas
dec
aaa
lcall
mull
mov
dec
mov
push
in
pop
roll
and
test
cmp
addb
cmp
sbb
cmp
pop
hlt
test
sahf
loop
or
sub
pop
sub
pop
outsb
fdivrs
gs
sbb
and
pop
fnstcw
sahf
clc
decb
rorl
test
hlt
jnp
sbb
inc
mov
and
inc
mov
dec
pop
imul
loope
jecxz
sbb
adc
jns
adc
fildll
imul
stos
dec
sub
cmc
dec
pop
xchg
jns
js
pusha
in
xor
and
andl
out
push
iret
xchg
sbb
push
mov
xchg
inc
nop
jb
imul
imul
push
dec
je
cli
pusha
test
dec
test
int3
mov
inc
xchg
in
insl
int
dec
jecxz
repnz
pop
movsb
jbe
js
push
jge
cmpsl
fdivrl
and
lds
mov
pop
ljmp
push
fdivrp
pop
ja
iret
xchg
shlb
stos
jbe
dec
lcall
jnp
stos
and
mov
hlt
push
ret
popf
pop
lods
and
nop
jnp
and
or
dec
pop
pushf
enter
xor
jg
insb
test
dec
or
jo
xchg
mov
mov
push
insl
fldl
fdecstp
mov
dec
jbe
repz
xor
movsb
dec
mov
cmp
int
loop
jl
mov
add
mov
xchg
bound
dec
js
pop
imull
test
leave
insb
clc
adcb
xchg
stc
cwtl
pop
hlt
jge
jmp
test
fcos
sti
push
rcrl
data16
dec
scas
sbb
push
mov
pop
dec
xor
jnp
mov
pop
and
mov
jmp
pop
mov
jns
ljmp
cmp
pop
dec
movlps
andl
mov
inc
dec
adc
int3
xlat
mov
dec
clc
mov
shlb
add
dec
lock
add
push
xor
pop
or
mov
push
xor
out
sub
cmp
sbb
mov
pop
ret
jo
fwait
dec
push
jl
cltd
mov
fidivs
andl
jb
dec
pop
cmc
sar
add
rcrl
daa
sub
jecxz
push
fldt
hlt
ret
nop
outsl
jg
mov
dec
push
xchg
notl
fsubrs
mov
mul
xchg
orl
mov
movsl
iret
popf
arpl
add
in
mov
outsl
xchg
pop
lock
push
sub
dec
push
lret
scas
xor
mov
add
ljmp
fimull
dec
mov
jle
fs
dec
sub
loop
cmc
push
arpl
xor
jg
lea
adcl
iret
leave
adc
and
inc
inc
jle
push
lock
dec
dec
fsubs
gs
or
pusha
add
testb
cmp
dec
xorl
xchg
shlb
scas
jl
xchg
stc
pop
mov
cmp
fs
sti
jb
shrl
xchg
repnz
jnp
ss
jae
sub
stos
clc
repnz
cmpsl
test
nopl
jle
lret
dec
pop
xor
adc
lea
jnp
movsl
jle
mov
jmp
or
daa
jl
or
xchg
je
enter
sbb
jg
dec
or
das
pop
mov
mov
mov
xchg
adc
daa
xchg
cs
push
iret
rcr
addr16
fwait
dec
out
push
fidivrs
int3
mov
xchg
mov
xor
icebp
sahf
pop
out
xor
pop
lock
and
jae
clc
loope
mov
sub
mov
push
insl
mov
stos
push
push
cmc
fwait
inc
jle
pusha
push
jl
pop
sbb
test
js
daa
and
int3
aad
ljmp
jne
inc
movsb
cmp
dec
fwait
mov
lods
mov
rclb
out
push
and
mov
dec
ret
lods
push
nop
in
push
cmpsb
cmp
dec
inc
mov
dec
adc
ds
jmp
mov
push
mul
cmp
inc
xchg
shll
fdivrs
xchg
cmc
pop
dec
mov
mov
dec
inc
pop
mov
fidivl
fisttpl
nop
sub
pandn
into
and
dec
shll
push
jle
or
sbb
xchg
iret
mov
inc
mov
ja
clc
xor
js
jecxz
dec
leave
or
cmp
flds
or
inc
mov
cld
xchg
dec
inc
ljmp
lret
dec
push
imul
adc
jle
dec
or
pop
insl
out
fs
dec
inc
cmpsb
xchg
int
fdivrs
mov
sbb
xor
sbb
out
out
pop
inc
or
insl
or
test
ljmp
dec
lret
daa
sahf
popl
xchg
mov
aad
inc
sub
jnp
int
xchg
jl
pop
push
cld
mov
jg
sub
mov
mov
in
fisubrl
popa
dec
cmp
addr16
mov
mov
aam
in
pushf
jno
pusha
mov
inc
pop
jle
pop
or
add
imul
cmp
cmp
bound
mov
into
scas
cmp
scas
ljmp
insl
inc
sub
fsub
aaa
xchg
xlat
jle
aam
xchg
hlt
cmpsl
cs
mov
rorl
pop
mov
adc
pmaxub
das
pop
mov
add
out
fistl
cmp
jl
in
fmuls
stos
int3
jae
dec
ja
push
test
add
mov
dec
mov
dec
sbb
lock
adc
imul
mov
in
insb
rcl
pop
xchg
inc
mov
and
lahf
out
insl
mov
aad
and
push
sbb
and
movsb
aas
cmovbe
or
int
cwtl
lret
data16
aaa
aaa
call
mov
cwtl
push
adc
cmp
or
push
mov
in
push
inc
jmp
std
lods
push
ljmp
cmp
jle
sub
mov
and
fisubrs
add
enter
or
idivl
sarb
int
inc
mov
ja
sti
mov
nop
aas
cmp
shlb
sub
jle
mov
pop
imul
inc
sub
push
mov
add
inc
aas
leave
enter
pusha
jbe
push
cmp
add
xchg
ss
adc
dec
cwtl
pop
xor
out
mov
sub
and
pop
dec
mov
cmp
push
movsl
jno
icebp
iret
jl
mov
lock
stc
sub
inc
mov
fsubrs
sbb
fmuls
or
jno
push
push
insb
cli
dec
xor
and
push
dec
hlt
call
int
test
cmp
inc
jge
pop
adc
cmp
mov
call
push
cmp
lods
dec
pop
dec
out
cli
or
pop
cmp
push
in
fisttps
jle
jp
xchg
daa
adc
pop
pushf
pop
pop
xchg
xchg
cmp
cli
subl
rol
jb
inc
push
stos
loope
daa
inc
sub
arpl
push
out
mov
push
jl
cmc
iret
xchg
jg
fiaddl
xchg
xchg
testl
dec
hlt
dec
hlt
dec
mov
sub
push
bound
jecxz
bound
push
in
filds
xchg
dec
xchg
fldl
dec
cwtl
mov
xchg
jae
iret
aad
popa
dec
push
int
in
or
das
lahf
mov
nop
pop
mov
sub
adc
dec
or
iret
add
aam
into
mov
nop
mov
pop
bound
dec
or
mov
incl
jnp
mov
adc
push
adc
mov
pop
iret
xlat
rcrl
dec
xchg
mov
or
bound
cmp
jnp
dec
popa
xlat
sbb
pop
dec
mov
xor
dec
jle
jge
inc
scas
mov
jae
push
pop
pop
outsl
dec
daa
mov
pop
dec
loopne
into
sbb
mov
pop
mov
dec
pushf
int3
xor
test
jae
xchg
dec
inc
pop
and
lods
sbb
int3
outsb
jae
roll
dec
cltd
push
add
xchg
testb
gs
pop
xor
xor
stos
les
imul
dec
jmp
cwtl
test
pop
imull
fiadds
stos
out
and
fwait
push
push
mov
pop
rorl
dec
adc
or
xchg
dec
pop
mov
or
enter
and
rclb
push
dec
dec
fstpt
dec
insb
or
nop
cmc
add
xor
movsl
out
ss
dec
int
test
xchg
xlat
jg
mov
aaa
dec
call
repnz
outsb
popf
mov
dec
dec
aam
in
mov
sbb
scas
andl
fwait
hlt
icebp
out
or
sbb
aad
sbb
add
and
push
call
dec
sbb
rclb
add
cmp
jmp
dec
xchg
adcl
dec
push
xor
repz
cmp
or
jns
into
imul
jl
icebp
inc
fmuls
sub
inc
jge
rclb
mov
mov
mov
sub
inc
mov
jbe
cmp
mov
push
movsl
pop
popa
icebp
mov
push
mov
pushf
cmpsl
int3
push
idiv
jnp
inc
imul
xor
jo
ljmp
fwait
outsb
add
add
pop
pop
dec
insb
ss
pop
and
icebp
ficoms
lds
fs
sub
nop
push
pop
xchg
stos
cmp
push
fdivl
ror
mov
mov
push
and
addl
and
cltd
dec
push
repz
cmp
lock
dec
out
bound
lahf
mov
cmp
flds
orb
lret
fs
sbb
aaa
mov
fwait
adc
push
inc
pushf
push
hlt
push
aas
and
jecxz
jl
cmp
test
sbb
pop
in
call
inc
and
inc
jle
in
pop
out
outsl
adc
dec
sub
xor
mov
lods
dec
iret
movsl
iret
mov
adc
cmpsb
lock
xchg
popa
push
es
lods
rcrb
inc
pop
cmp
and
push
dec
add
lock
fisubs
clc
push
sbb
adc
aaa
icebp
jns
pop
xor
addr16
inc
dec
scas
mov
hlt
mov
jb
xor
ja
jle
stos
outsl
or
push
inc
inc
jg
call
pop
and
xor
jae
repnz
jo
cmp
ds
test
repnz
jns
in
pop
icebp
pop
cmc
cltd
sub
loop
push
jmp
das
sbb
das
out
in
dec
in
mov
push
adcl
xchg
push
in
jns
xchg
pop
mov
mov
xchg
fbld
and
sbb
jl
lods
mov
jg
out
add
stos
lahf
pop
ds
fucomip
lods
or
adc
outsb
lcall
inc
cvtdq2ps
dec
fbstp
insb
in
inc
cld
push
lods
mov
or
sbbb
mov
pusha
dec
clc
shr
js
fwait
call
popf
mov
jne
mov
lds
push
add
dec
imul
pop
in
pop
or
int3
xchg
das
pop
and
inc
testl
sahf
loop
stos
stc
lcall
out
ljmp
dec
loopne
dec
aam
jb
bound
dec
paddsb
xor
cwtl
mulb
loopne
mov
jecxz
mov
fists
push
pop
repz
ret
jle
sbb
jl
mov
push
outsb
cmp
je
dec
cmpsl
adc
dec
or
mov
xchg
dec
hlt
mov
aam
mov
cld
not
mov
dec
fcmove
push
lods
les
xchg
adc
add
das
push
and
cld
loope
sahf
jmp
xorb
roll
into
pop
scas
outsl
xchg
sub
push
push
dec
cmp
adc
xchg
mov
aad
movsb
dec
cmpsl
fdivrs
push
xchg
dec
sub
dec
rorl
imul
inc
int
insl
pop
xchg
dec
mov
sub
pop
mov
insb
xchg
inc
cli
dec
add
js
dec
or
mov
sbb
push
dec
cwtl
pop
fwait
push
xor
xchg
dec
sbb
jp
push
jbe
outsb
cmp
xor
and
dec
movsbl
cmpsl
add
dec
das
add
pop
mov
jl
xlat
subb
mov
dec
roll
xchg
test
dec
popa
fcom
mov
dec
ljmp
pop
dec
sbb
sub
gs
lea
rorb
rcrl
out
cmc
xchg
inc
mov
inc
inc
xlat
cld
or
rorb
mov
mov
fimuls
mov
cmpsb
ds
lcall
dec
sbb
test
xchg
pop
stos
dec
xchg
sahf
adc
xlat
mov
inc
addl
pop
pop
pop
pop
or
les
loope
mov
scas
les
aad
dec
data16
je
adc
mov
push
inc
inc
cltd
jge
cwtl
ljmp
push
sarl
cmp
aad
sarl
fsts
mov
jns
xchg
pop
pop
dec
jl
aam
movsl
sub
push
fdivrl
leave
fbld
testl
std
pop
jle
fcomps
xor
addr16
lds
push
adc
jge
push
rcrb
gs
add
jae
in
xlat
dec
mov
sahf
dec
xor
iret
inc
shll
cmpsl
lahf
mov
scas
jl
sub
jle
nop
lds
jecxz
in
ficomps
mov
push
adc
outsl
mov
lds
subl
mov
and
inc
shrl
mov
push
loopne
mov
jl
cmp
jmp
pop
fstpt
jecxz
scas
jmp
inc
jno
add
dec
jl
dec
push
mov
jle
in
xchg
lds
push
mov
mov
scas
iret
add
dec
movsb
movsl
test
jl
scas
sbb
inc
lods
pushf
sbb
xor
sti
pop
xchg
sbb
les
fisttpl
out
sbb
sub
inc
cs
xor
test
repz
cwtl
or
mov
lods
vmwrite
loope
clc
sub
lods
push
dec
push
ds
xchg
lret
pushf
jnp
xchg
and
mov
and
or
arpl
loop
and
dec
out
mov
sbb
mov
mov
push
repz
xchg
fdivl
fmull
mov
loope
mov
subl
xor
and
gs
sti
insl
sbb
pop
sub
mov
mov
aas
imul
outsl
push
int3
fidivs
fcmovu
cmp
pop
push
fdivs
pop
add
pop
dec
sub
jle
inc
enter
cmp
jnp
insl
xor
push
push
xchg
pop
jle
test
rorb
push
adc
cli
xchg
scas
rclb
push
das
add
pop
xchg
leave
mulb
jg
and
and
lret
sbb
cs
mov
mov
int
out
repnz
cmp
cs
add
pusha
pop
push
lods
cmc
pop
sub
mov
loopne
out
add
pop
mov
stc
lret
lea
sub
inc
aaa
push
pusha
fists
jno
jp
scas
push
xchg
pop
or
xor
sub
cmp
movsl
into
push
jl
cmp
mov
leave
lcall
mov
pusha
fdivp
lret
cmpl
in
inc
call
jl
or
mov
ret
rcr
js
inc
adc
rcrb
adc
loopne
int3
xor
lret
pop
fs
cs
jle
js
sarl
and
je
int
jns
clc
push
out
lret
or
pcmpgtd
jl
sbb
fisubrs
inc
inc
and
mov
xchg
or
call
inc
into
sbb
adcl
dec
test
jmp
jb
dec
std
dec
mov
xor
stos
popf
dec
fdivr
adc
mov
inc
jl
js
sbb
inc
or
out
mov
daa
out
or
mov
imul
jle
jge
lret
dec
movsb
lcall
inc
jp
int
xor
lcall
jge
add
fildl
stos
xchg
ja
push
lcall
cmp
jns
vcvttsd2usi
loope
pop
js
aad
or
scas
imulb
pop
xor
add
ljmp
into
cmc
sub
mov
daa
push
movsl
pop
cld
adc
and
aas
iret
add
add
mov
jle
lret
dec
nop
sbb
mov
jle
xchg
popf
or
scas
xor
enter
rorb
sub
loope
stos
inc
inc
sbb
rorb
add
pushl
dec
mov
mov
dec
sub
lcall
pop
ffree
adc
cmpl
andb
or
test
mov
dec
aam
add
mov
sub
mov
inc
cmp
jge
cs
test
dec
enter
test
sbb
adc
pop
imul
sysexit
xor
pop
test
orb
into
xor
leave
sub
jbe
out
dec
out
and
adc
inc
jmp
pop
lods
rcll
mov
iret
repz
fidivrs
cmpsb
loop
mov
shl
push
aaa
dec
pop
mov
lea
inc
dec
stos
inc
mov
cmovle
xor
dec
nop
sahf
jmp
inc
dec
cltd
fnsave
cmpsb
sti
orb
and
sbb
fimull
repnz
dec
test
inc
sub
and
lods
xor
mov
pushf
xchg
cmpsl
xor
fistpll
dec
hlt
and
dec
xor
inc
outsl
dec
and
xor
jne
pop
leave
repz
das
arpl
popf
mov
push
dec
cmp
dec
xchg
rorl
test
mov
sub
xchg
ss
lea
lret
sbb
xchg
stc
mov
or
dec
lods
ret
jle
pop
sbb
push
xchg
sub
fsub
xor
insl
jge
out
or
push
loop
pop
xchg
push
and
dec
sub
inc
mov
sub
imul
seta
dec
lds
dec
adc
pop
dec
dec
sub
pop
sub
dec
inc
inc
jle
cltd
rorl
int3
stc
adc
enter
fsubs
ror
fcoml
pop
pop
into
mov
lahf
inc
repz
jne
xor
js
pop
int3
dec
sub
scas
xlat
xchg
xor
sbb
cmpsb
setnp
mov
lock
loopne
sub
in
ret
cmpsl
dec
repnz
dec
mov
orl
ret
xchg
mov
lcall
inc
scas
dec
pop
and
dec
jae
hlt
mov
jge
nop
dec
loope
pop
lods
and
jae
and
cltd
push
ss
mov
push
or
and
adc
xor
cmp
dec
aaa
xor
push
mov
push
ljmp
push
xchg
cmp
loopne
fucom
dec
cmc
popf
sub
dec
orb
pop
dec
add
loopne
dec
mov
sar
dec
and
inc
or
sub
pop
push
jg
xchg
sbb
sbb
outsl
repz
push
sub
adc
cmp
cs
jae
push
mov
pop
jbe
cmp
dec
fisubrs
je
sbb
push
jmp
pop
xchg
shlb
inc
fs
jbe
mov
outsl
mov
aam
loope
pusha
nop
or
xor
in
ss
orb
dec
scas
repz
std
sti
pop
sub
dec
mov
mov
pop
jno
out
pop
jb
sub
cs
in
dec
dec
adc
mov
dec
ret
or
insl
jp
inc
mov
in
mov
mov
jae
ds
ja
das
cli
add
dec
mov
push
fwait
xchg
repnz
dec
mov
xchg
push
xor
je
xlat
mov
filds
shll
daa
adc
xor
or
jnp
fs
sub
push
inc
cmp
xor
sub
imul
mov
and
and
inc
clc
xchg
pop
cmp
in
jbe
pushf
test
out
testb
arpl
lret
jg,pn
dec
in
jnp
imul
or
mov
pop
jae
jbe
inc
and
mov
push
lret
xor
pop
loopne
jo
sub
mov
inc
cmp
mov
jl
push
add
xchg
pop
test
iret
cli
rcrl
je
and
or
cld
push
daa
jl
sbb
in
push
pop
push
test
enter
fmull
xor
add
incl
leave
mov
jle
push
sub
pushf
and
jp
lcall
mov
pop
bound
mov
xchg
and
mov
jno
add
push
push
mov
int3
repz
fdivrl
jb
out
xor
mov
stos
dec
imul
and
fbstp
xorl
or
ljmp
lahf
push
push
mov
sub
xorl
outsb
sahf
decb
aaa
jno
jg
out
xchg
movsb
test
jge
repnz
mov
dec
dec
jg
jmp
lahf
sarb
imul
test
cmpsl
sub
lahf
inc
leave
icebp
sub
push
fdivr
and
cmp
hlt
mov
mov
js
sbb
or
pop
and
xlat
add
inc
jl
mov
stc
aam
lods
and
xchg
out
cmp
adc
xchg
sub
js
fidivrs
fbld
ds
sub
xchg
leave
cmp
xor
pop
aam
push
dec
addr16
inc
aas
sbb
mov
ds
out
pushf
mov
lock
sub
es
pop
jle
mov
das
add
inc
outsb
bound
pop
ds
jmp
cmc
mov
outsb
mov
iret
outsb
mul
aas
push
push
inc
mull
dec
mov
das
jnp
cmp
sub
stos
inc
iret
into
out
pop
jl
sub
cmpsl
push
and
aas
pop
and
shr
jl
cmp
xor
imul
fidivrl
call
xchg
mov
stos
aas
fsubl
jb
bound
hlt
movsb
mov
je
sub
cli
or
jnp
ds
aad
dec
mov
scas
adc
push
in
pop
add
mov
fists
dec
push
mov
sbb
jle
ficompl
mov
push
in
into
push
pop
inc
adc
js
loope
iret
dec
arpl
popf
jg
inc
cmp
negl
imul
pop
dec
fwait
addr16
mov
adc
sub
push
dec
outsl
mov
adc
ljmp
ss
xor
adc
cmpb
xor
add
sub
xor
add
mov
cmpsl
nop
add
add
mov
divl
leave
dec
xchg
mov
int
pushf
dec
rolb
push
scas
sbb
outsl
lcall
in
xchg
inc
insl
and
mov
pop
pusha
fidivrl
int3
dec
jae
or
sub
dec
hlt
sbb
mov
movsb
xor
mov
and
enter
dec
cmp
bound
and
mov
fstp
push
repnz
pop
jmp
add
pop
loopne
fnstenv
push
sub
call
popl
dec
mov
xor
sahf
dec
data16
xchg
cmp
mov
inc
jb
pop
cmpsl
clc
cli
inc
ret
add
lock
jp
test
xor
dec
pop
mov
icebp
sbb
in
dec
adc
and
jg
dec
scas
flds
dec
stos
scas
pop
or
pusha
sbb
dec
xchg
in
popa
ficoms
xor
pop
stos
jmp
lea
cmp
sub
aaa
fadd
mov
xchg
cmp
js
iret
aas
out
xor
aad
dec
int
pop
lods
repnz
inc
adc
movsb
push
stos
mov
pop
cmp
push
movsb
mov
lock
mov
out
mov
jl
dec
scas
test
movsl
int
ret
cltd
dec
cli
jl
pop
xchg
adc
pop
jl
icebp
mov
pop
pop
and
push
dec
jle
imul
scas
shlb
mul
lret
jle
stos
inc
daa
jnp
adcl
rcl
int3
cmp
jl
bound
and
std
cmpsl
les
pop
mov
push
js
mov
add
jle
daa
xchg
cwtl
cmp
and
enter
jb
ret
das
shll
adc
into
movsb
pop
lea
icebp
mov
stos
mov
and
sub
jae
inc
aad
cmp
shlb
push
outsl
mov
xor
or
pusha
push
ljmp
outsb
idivl
adc
out
aam
lods
mov
adc
loopne
fldt
imul
das
inc
mov
adc
jae
sarl
dec
iret
jg
inc
cmp
cli
and
cltd
mov
imul
xchg
mov
js
notl
cltd
xchg
mov
jb
das
hlt
inc
dec
bound
out
push
pop
and
xor
dec
mov
les
inc
mov
outsb
enter
xchg
mov
ret
pop
imul
fs
pop
repz
xchg
aas
adc
dec
xchg
push
ficompl
xchg
ljmp
mov
fisttps
jle
int
sti
sub
fstpl
jno
dec
xlat
cmp
addr16
push
jnp
ficomps
jbe
dec
mov
inc
pop
pushf
aad
enter
dec
cmp
lea
outsl
and
mov
outsb
sub
dec
aaa
mov
or
dec
loopne
adc
pcmpeqd
pop
xor
xchg
dec
bound
mov
fisttpll
or
insl
aas
inc
cld
dec
in
les
testb
stos
mov
loope
mov
jp
jle
movsb
fsubs
fwait
push
jecxz
les
mov
lods
movsb
dec
xchg
pop
and
dec
movb
xor
dec
adcl
out
and
add
in
push
sbb
jmp
adcb
inc
jge
test
int
and
inc
scas
fnstcw
aaa
jmp
cmp
dec
and
adc
jp
stos
mov
adc
in
push
data16
mov
dec
int3
push
mov
outsl
int
call
adc
mov
mov
test
les
inc
in
dec
jle
pop
scas
inc
add
dec
pop
mov
xchg
dec
cmp
mov
lods
insl
or
pop
jp
ja
xlat
int3
cmc
fstl
xlat
jbe
mov
dec
sub
movsl
hlt
and
test
stc
cmp
sub
loop
push
sbb
inc
dec
ss
push
sub
insl
xlat
das
add
scas
jecxz
push
ror
ja
or
in
lahf
push
push
dec
push
ret
es
ds
fimull
mov
loopne
dec
sub
mov
jne
rorl
cltd
enter
dec
cld
popa
dec
mov
adc
scas
dec
mov
and
psubb
popa
dec
subb
adc
push
outsb
loopne
out
addl
loop
ret
dec
inc
repnz
ljmp
bound
ljmp
dec
cltd
adc
insl
pop
dec
jb
or
js
hlt
mov
dec
roll
lret
inc
xlat
push
dec
xchg
insb
cmpsl
pop
add
cmp
int3
xchg
or
fxch
sub
aad
mov
and
mov
fisubrs
push
outsl
xchg
push
test
inc
dec
push
imul
notb
push
pop
dec
adc
out
sub
sub
lods
es
and
inc
xor
mov
sub
jbe
inc
dec
and
clc
push
pop
out
pop
gs
adc
mov
sub
push
dec
pusha
ret
and
or
pop
mov
mov
mulw
jae
fs
fdivrp
mov
push
test
sub
mov
inc
ret
popf
nop
mov
or
adc
dec
inc
daa
aad
sahf
jmp
clc
dec
xor
sub
lea
dec
pop
test
insb
sub
dec
out
ja
jae
xchg
dec
mov
pop
push
fbstp
es
push
cli
insb
dec
aas
into
push
xlat
sbb
mov
dec
xchg
js
and
fimull
loop
mov
dec
mov
pop
inc
push
in
mov
std
push
outsl
sahf
push
shr
mov
sti
into
fstps
sbb
imul
inc
inc
sub
jp
mov
jmp
pop
add
enter
cs
mov
xor
dec
sub
fstps
mov
jnp
fwait
mov
push
and
xchg
jle
in
dec
jne
enter
icebp
je
and
and
pop
test
iret
and
mov
or
and
sbb
insl
shll
dec
xor
mov
add
popa
outsl
cwtl
jl
imul
fimull
xchg
lds
inc
subl
xrelease
inc
sub
loope
in
push
add
inc
pushf
loopne
mov
sub
push
pop
push
cld
arpl
bound
test
inc
push
mov
mov
clc
iret
or
adc
mov
in
inc
cwtl
lock
push
pop
add
fistpl
addr16
dec
mov
dec
inc
das
cmp
pop
dec
and
int3
jle,pn
mov
imul
xchg
loope
push
cmp
outsb
sub
and
and
mov
mov
mov
fldt
ja
fmulp
jl
pop
jmpw
aas
fldcw
pop
testb
mov
xchg
jle
jo
dec
es
xor
cmp
pop
push
pushf
inc
stc
mov
shlb
hlt
and
xor
out
inc
into
addr16
sbbb
lods
pop
dec
mov
push
cs
shlb
outsl
and
decl
jmp
mov
pop
pop
xorl
xor
loopne
cmp
xor
xchg
imul
dec
insb
mov
adc
add
push
test
pusha
packssdw
dec
movsb
xchg
pop
adc
mov
rcrl
fimuls
aam
sbb
mov
idivl
out
dec
dec
sub
mov
sbb
ret
cmpsl
jo
mov
adc
repnz
xchg
lret
outsb
dec
test
lcall
dec
inc
imul
or
das
jmp
mov
xchg
cwtl
es
outsl
aas
icebp
dec
sub
push
sub
lahf
and
sti
and
or
cmp
lret
iret
xor
decl
inc
xchg
fimuls
jle
cmp
inc
xor
movb
into
icebp
cld
fnstcw
lods
dec
mov
inc
adc
call
or
lds
and
jns
adc
nop
enter
adc
lahf
pop
pusha
mov
mov
mov
nop
or
push
pusha
fbld
jg
dec
dec
jl
rclb
cmp
and
adc
aam
scas
fs
stc
sahf
push
fstl
popf
cmp
pop
sub
push
or
std
iret
push
jg
cmc
dec
movl
adc
aam
sbb
divl
mov
sbb
sub
ss
add
push
mov
jg
pop
inc
pop
test
enter
int3
xchg
cs
cld
xchg
inc
push
jl
in
mov
adc
mov
jp
and
xor
inc
push
in
jns
lods
jle
xchg
dec
ss
mov
pop
cs
dec
sub
push
xor
lret
inc
push
mov
iret
adc
lods
xchg
popl
jmp
test
xor
adc
hlt
xchg
sub
repz
cmp
push
lods
icebp
push
mov
fidivl
std
dec
jg
mov
hlt
gs
in
xor
aam
call
test
jmp
stos
xchg
push
sub
inc
aam
push
frstor
xlat
cmp
ds
xchg
fidivl
xchg
andb
add
mov
outsb
mull
mov
jle
and
push
jmp
pop
aaa
mov
popa
ror
mov
jl
mov
in
nop
or
lea
xor
aas
jl
or
lds
or
dec
jnp
fiaddl
jle
push
out
cmp
lods
sub
out
mov
push
push
adc
and
cmpsl
insb
jmp
lcall
inc
jl
dec
pop
dec
andl
sub
sbb
adc
sub
andl
xor
cltd
inc
jb
inc
aaa
stmxcsr
mov
or
dec
dec
stc
jg
jno
jne
pusha
js
fldt
pop
push
xor
push
pop
lea
xchg
stos
pop
cmp
test
jb
cltd
ret
mov
mov
test
adc
dec
aas
push
inc
mov
cmpsb
icebp
mov
je
mov
sarb
dec
adc
out
inc
std
adc
dec
rorl
lds
pop
jb
dec
pusha
pop
dec
pop
loopne
mov
adc
andl
inc
dec
push
mov
cs
xchg
sbb
testl
xchg
icebp
mov
mulb
dec
fadds
dec
cs
dec
push
adc
lret
bound
lcall
dec
xchg
mov
cltd
inc
dec
scas
jb
adc
pop
imul
and
lret
mov
xor
mov
adc
mov
insl
out
xorl
sbb
test
dec
fisubs
rolb
mov
lods
push
pop
sbb
dec
gs
mov
jnp
xor
push
jg
dec
sbb
dec
sbb
xchg
push
mov
cmp
jns
insl
add
scas
or
mov
inc
out
and
outsb
lock
dec
mov
icebp
int3
repnz
dec
iret
mov
pusha
jnp
and
mov
dec
hlt
pop
xchg
mov
push
daa
mov
push
hlt
fsts
cmp
xor
mov
mov
dec
jle
negl
faddl
ror
xchg
sub
mov
mov
scas
mov
dec
mov
hlt
push
cmp
stc
ss
xor
push
in
xor
or
sub
xchg
dec
push
cli
pop
pop
mov
cs
je
xchg
in
and
iret
and
mov
dec
rolb
push
mov
adc
scas
aaa
dec
repz
insb
test
mov
cld
dec
xchg
dec
lcall
pop
sbb
jno
adc
mov
rcl
cwtl
add
adc
or
orb
mov
fiadds
outsb
setbe
adc
add
cmpsb
xchg
lahf
cltd
dec
pop
fistpl
cmp
dec
stos
test
ss
js
mov
jmp
jp
roll
adc
notb
test
ficompl
cmp
sub
jg
sbb
dec
mov
in
jno
outsl
test
push
imul
cmp
icebp
xchg
xor
inc
adc
jle
push
push
push
mov
sub
xchg
and
inc
mov
mov
aaa
jl
add
xor
cmpsb
div
and
mov
dec
or
out
jle
pop
xchg
or
mov
dec
xchg
xor
push
push
mov
imul
push
dec
test
ret
inc
leave
scas
pop
add
testb
repz
adc
jle
inc
jmp
push
pushf
insl
in
mov
mov
outsb
cmp
cli
push
cmc
push
mov
ret
pop
aaa
dec
pop
sbb
mov
imul
aad
dec
cltd
inc
adc
fisubl
mov
dec
and
fwait
jle
dec
mull
stos
dec
jb
xchg
hlt
filds
lods
pop
scas
pop
and
cmp
and
xlat
stc
xchg
in
xor
call
dec
or
and
divl
dec
xor
mov
xchg
sub
enter
sub
jo
test
fisttps
dec
aad
daa
or
jo
fs
mov
cmp
in
scas
pop
imul
jno
outsl
outsb
dec
push
inc
aas
mov
ror
popf
adc
sarb
mov
movsb
call
dec
aas
stos
mov
jb
out
rcll
mov
xor
fdivrl
dec
jb
jno
in
lea
andb
sahf
fld
inc
jb
sub
cwtl
dec
mov
dec
mov
int
sub
loope
inc
mov
push
pop
ss
daa
push
push
cmp
dec
push
lds
cltd
cld
mov
pop
dec
les
stos
lea
scas
push
data16
or
dec
xchg
fucomip
mov
enter
lahf
out
cld
jno
or
jecxz
dec
pop
mov
and
mov
push
or
mov
popa
in
fadds
loope
xchg
push
shl
int3
dec
jge
dec
aad
sbb
sub
mov
call
push
das
js
xchg
outsb
push
adc
dec
cmp
fdiv
outsl
mov
fisubrs
hlt
call
push
adc
and
xor
vmovntdq
pop
daa
xor
es
cmp
cs
popf
fadds
mov
bound
into
push
scas
incl
push
outsl
hlt
std
in
dec
mov
ss
dec
call
sahf
rcrl
movsl
nop
cmp
dec
xchg
sub
lahf
out
int
scas
aad
imul
jmp
adc
leave
and
movsb
scas
push
arpl
repz
sub
xchg
jle
fimull
dec
xlat
add
imul
mov
dec
jmp
iret
mov
in
iret
and
and
lahf
inc
movl
imul
out
dec
sahf
jge
std
adc
push
add
mov
and
pop
sub
or
lret
mov
idivb
jb
mov
jle
mov
mov
mov
into
call
adc
das
xchg
dec
aaa
xor
mov
ja
xor
test
nop
fnsave
push
sub
xchg
jp
lods
mov
mov
or
dec
mov
decb
punpcklwd
jg
loope
cmp
xchg
in
cs
jl
cltd
xor
test
xorl
pusha
sub
ret
mov
xor
outsl
mov
punpcklwd
cltd
push
mov
mov
dec
int3
dec
test
and
lret
xor
cmpsl
popw
adc
dec
xchg
popa
iret
adc
dec
hlt
add
aam
imul
sti
loop
int
std
dec
ja
dec
sahf
pop
and
pop
or
dec
lcall
cmp
call
jp
sbb
inc
jne
in
rcr
lock
aas
pop
dec
imul
or
ja
insl
jo
cmp
dec
adc
push
loop
out
mov
inc
dec
adc
inc
pop
shl
sub
dec
adc
lea
dec
lahf
jo
lcall
mov
or
dec
test
loopne
cmp
sub
andl
insl
push
xchg
add
dec
fimuls
int
and
stos
movl
or
cmp
fdivrs
jg
in
movsl
xchg
mov
stos
xchg
adc
mov
aam
insl
outsl
xchg
and
push
xchg
xchg
scas
fsubrl
pop
dec
cmp
jl
and
mov
sub
adc
dec
xchg
cmp
in
loope
int3
test
insl
sub
pop
jg
push
scas
shlb
int3
dec
inc
push
rcl
sub
mov
push
subb
xchg
push
int
pop
cmp
sbb
jb
jnp
push
push
cmpsl
test
mov
cmp
pop
pop
jb
stos
outsl
insb
jle
cmpsl
push
dec
dec
push
mov
imul
test
aas
fcmove
sub
dec
pushf
xor
insl
inc
sbb
les
shrb
movsl
dec
lock
mov
jecxz
sbb
dec
fimuls
mull
cs
xchg
adc
adc
fsubs
push
mov
aad
cmp
vmovntps
clc
xchg
mov
inc
fbstp
das
pop
dec
in
ret
jbe
lcall
daa
jo
dec
insl
fwait
enter
add
dec
cmp
movsb
jg
scas
fisttpl
sub
or
stos
sbb
cmp
scas
xor
push
lret
inc
ficoml
incl
stc
loop
mov
push
xchg
adc
sub
push
jns
push
lea
scas
mov
mov
ficoml
push
dec
fsubr
xor
push
and
cs
jg
outsb
add
sub
and
movsb
fdivs
dec
xor
dec
inc
aaa
sub
xchg
fdiv
scas
inc
pop
jp
jnp
jge
je
mov
int3
clc
xlat
pop
push
jl
imul
js
push
dec
addr16
movb
dec
push
dec
ljmp
les
adc
lods
insl
mov
andb
dec
test
divps
jno
jns
std
leave
push
loopne
pop
inc
rorb
sub
pop
add
mov
cwtl
out
push
int3
dec
das
call
dec
imul
js
mov
outsl
dec
dec
mov
jne
dec
and
dec
cvtps2pd
mov
dec
call
or
aam
inc
mov
scas
fmuls
adc
push
dec
dec
fwait
cmp
cmc
arpl
pop
xor
pop
dec
pop
inc
jb
scas
dec
jl
pop
jnp
sub
dec
xchg
insl
pushf
daa
mov
loopne
push
and
scas
pop
lcall
into
cmp
xchg
sbb
dec
push
add
dec
sub
inc
int
ss
adc
pop
mov
aam
xchg
or
inc
add
sub
pop
dec
hlt
dec
scas
shl
rcrl
xchg
cs
test
ja
addr16
jp
adc
pop
xor
sbb
dec
std
imul
jae
dec
or
movsl
dec
add
jle
inc
mov
lea
add
js
pop
dec
imul
mov
cmc
sbb
inc
movsb
xor
sub
push
ret
pop
orl
js
push
int3
pop
lcall
fldt
sbb
jmp
or
dec
adc
scas
popf
sub
test
in
dec
sub
cmp
xor
jmp
or
dec
fsubrl
pusha
sub
aas
popf
jp
cs
adc
push
repz
int3
dec
sbb
add
cmp
pusha
dec
dec
in
sarb
dec
sub
popl
dec
cltd
iret
aad
int3
and
jp
test
pop
notb
shlb
jb
sbb
daa
cmpsb
sub
mov
subl
dec
loope
stc
or
push
push
notl
jb
or
fs
sub
icebp
xchg
bound
adc
stos
je
ret
lret
stos
push
push
dec
pop
rcrl
cli
jl
aam
inc
dec
addr16
and
pop
dec
cld
call
pop
jb
dec
das
std
ja
dec
cmp
dec
outsb
xchg
and
xorl
lods
movsb
into
aaa
test
loopne
mov
insl
std
dec
sub
cmp
pop
mov
dec
cmp
les
mov
bound
or
repnz
jle
inc
xlat
aad
mov
fs
dec
mov
leave
js
lret
orb
sbb
int
ret
xchg
jbe
dec
decl
inc
and
jg
inc
and
pop
out
jb
inc
jbe
insb
fcmovne
scas
test
imul
cmp
aad
dec
dec
out
mov
inc
popf
jl
push
mov
shlb
mov
mov
xor
data16
insb
rorb
or
js
stc
sahf
dec
inc
int
pop
xchg
or
dec
int3
mov
or
ljmp
cmp
add
xchg
dec
nop
mov
or
and
mov
scas
jl
inc
dec
sbb
ret
sub
dec
dec
lods
daa
sub
sarl
cmp
ss
jne
sahf
mov
inc
in
sbb
fmul
pushf
arpl
jns
popa
jb
dec
xchg
fyl2xp1
out
lcall
dec
pop
ss
pop
imul
xlat
frstor
outsb
fdivs
or
dec
mov
jp
push
dec
mov
cmpsb
gs
cwtl
dec
sub
xchg
loop
dec
in
xor
dec
or
sub
xor
push
inc
into
jbe
loope
iret
inc
sar
cmp
lock
jmp
and
out
push
push
loopne
xor
leave
add
ljmp
mov
inc
cs
dec
lds
xchg
psrld
fists
mov
imul
xchg
dec
shlb
ljmp
into
aam
les
dec
jae
and
pop
out
pop
inc
movl
add
adc
das
inc
mov
xor
ljmp
cli
inc
jg
xor
lock
inc
mov
lcall
dec
jb
ljmp
movsl
daa
xor
sbb
dec
enter
add
jno
fisttpl
subb
pop
test
and
gs
dec
xchg
mov
fwait
dec
imul
js
cmp
inc
dec
xor
adc
push
cltd
xor
cld
and
pop
mov
mov
loopne
xor
adc
dec
roll
aad
fs
iret
divl
fmull
loope
inc
xor
dec
add
push
pop
mov
loopne
ljmp
orl
cltd
push
mov
daa
cs
xlat
inc
or
adc
shll
cs
in
fldenv
mov
sub
insb
xchg
add
ret
inc
pusha
mov
cmp
nop
iret
cmp
push
push
in
mov
dec
repz
inc
push
iret
scas
dec
push
or
pop
orb
jle
dec
push
push
stos
xchg
inc
shlb
iret
clc
mov
jns
sub
pop
jle
xor
sbb
cs
int3
roll
pop
call
test
dec
pop
cmp
adc
ret
mov
mov
les
mov
stos
in
push
movsb
aaa
pop
push
andl
xchg
cs
loope
and
out
test
cmp
imul
mov
xchg
sub
rcrb
test
dec
test
fs
out
clc
rolb
cmp
xchg
xchg
xchg
jno
fisubrs
gs
and
jmp
and
dec
hlt
dec
xlat
fldcw
sbb
pusha
das
jl
xor
jo
or
jp
mov
movsl
fldt
test
cwtl
xchg
xor
jg
xchg
add
dec
into
mov
mov
dec
pop
repz
sbb
in
enter
adcb
xor
push
lahf
xor
inc
out
aas
les
xchg
lock
rcr
test
or
or
mov
into
push
stos
mov
sub
cwtl
jne
shll
dec
aam
divb
dec
jo
adc
cltd
dec
out
sarb
sbb
ds
jae
movsb
in
xlat
enter
dec
mov
das
ja
dec
mov
xor
push
mov
cs
mov
jp
adc
and
orl
stc
inc
push
jg
mov
jl
dec
lods
xchg
pop
fistpll
adcl
add
dec
jmp
cmc
mov
loope
aad
int
cwtl
es
push
sbb
or
rcrb
mov
inc
outsl
jl
and
xchg
and
orps
mov
cmc
frstor
push
pop
or
dec
mov
dec
lahf
fisubs
adc
das
aam
lret
sub
add
xlat
push
cmp
pop
jl
mov
mov
pop
sub
stos
into
test
fwait
cmp
xor
jle
mov
aad
jmp
shll
dec
mov
ret
data16
mov
scas
cs
dec
scas
mov
jle
scas
sahf
add
sub
outsl
insb
dec
cmpsl
mov
cs
out
pop
into
dec
mov
dec
iret
call
mov
mov
sbb
xchg
incb
repnz
daa
loop
xchg
cmpsb
add
xchg
lret
sete
sbb
sub
cmpsl
pop
mov
loopne
imul
pop
std
imul
push
sub
mov
inc
lock
shrl
jo
jp
jno
arpl
ret
int3
test
or
jb
cmpsl
jmp
in
inc
loop
sub
fdivrl
dec
mov
push
dec
ss
xchg
mov
mov
jb
imul
shrb
lock
push
push
xchg
and
dec
mov
and
out
lret
cmpsb
mov
loop
dec
dec
jnp
cwtl
push
dec
gs
nop
jns
adc
arpl
pushf
in
or
pop
dec
and
xor
dec
ret
mov
and
add
mov
in
movsl
ret
push
mov
dec
jb
repnz
xchg
bound
jns
clc
leave
cmp
push
push
dec
jno
adc
pop
dec
roll
jae
arpl
inc
xchg
mov
fistps
or
adc
iret
dec
push
adc
dec
insl
push
mov
in
pop
lods
mov
fcomip
in
sbb
inc
add
lret
push
sub
push
fildl
inc
int3
xor
shrb
cmp
in
push
pop
ret
jbe
dec
mov
shr
pop
jle
fcompl
mov
aad
test
shl
outsl
js
inc
rclb
das
stos
lcall
jl
in
dec
pop
sbb
push
xchg
rorb
jecxz
insb
add
in
outsl
daa
fwait
mov
shlb
xor
mov
sbb
cmp
cltd
test
fdivl
aad
jmp
pop
mov
ja
jp
cmp
xchg
dec
jl
add
mov
jl
fs
push
into
cs
js
jmp
test
lahf
movsl
xchg
jp
jl
jmp
add
add
xchg
out
dec
shrb
fisttps
or
push
test
add
in
jp
cmp
inc
sub
dec
iret
pop
jp
mov
pop
jle
mov
loopne
cwtl
xchg
xchg
fdivs
jle
xorl
jo
aas
maskmovq
testl
jl
sbbb
scas
jo
inc
popf
adc
loopne
stos
cs
popa
pop
fisttpl
inc
dec
fs
and
inc
stos
dec
popa
out
push
ret
dec
cltd
scas
insb
jno
dec
or
pop
in
fs
sbb
sbb
out
inc
icebp
fucomi
fs
push
dec
inc
lds
lods
es
je
adc
inc
cmpsl
ret
cmp
or
add
out
lock
inc
xchg
jle
mov
fcmovu
mov
test
mov
aad
push
mov
fwait
stos
dec
test
push
push
and
mov
fucomi
mov
dec
and
aaa
jge
out
push
stos
push
stos
notl
lahf
lret
sub
push
add
pop
sahf
arpl
sti
or
inc
cmp
push
in
iret
addr16
inc
in
shll
sahf
jp
mov
add
push
lahf
sub
pop
lock
jle
jno
pop
xor
stos
dec
mov
fwait
imul
fdivp
xor
inc
aam
add
clc
ficoml
inc
jle
mov
add
es
cli
push
decb
movsb
pop
pop
jg
inc
cmp
lock
adc
mov
loopne
mov
cmp
adcl
mov
push
insb
int3
inc
mov
add
dec
out
jne
mull
or
ljmp
mov
test
aam
lret
in
rcrl
sahf
push
xor
imul
in
mov
jle
push
jo
push
int3
adc
mov
test
and
pop
adc
shlb
sub
shrb
pop
and
shlb
adc
dec
mov
popa
dec
push
movsl
call
dec
sbb
cli
test
dec
in
push
fisttpll
push
popa
insl
cwtl
dec
imul
and
dec
sbb
add
dec
je
icebp
jg
pop
sub
adc
and
stos
dec
fisubl
ds
pop
ret
sbb
xor
dec
mov
fldcw
mov
cmpsb
pop
pop
sub
mov
inc
sahf
xor
addr16
clc
lret
icebp
push
adc
cmpsb
mov
test
loop
enter
and
orps
lea
movsl
int
mov
lcall
dec
clc
movsb
add
mov
xchg
sub
jns
xor
test
popf
mov
cltd
js
add
add
and
adc
dec
insb
outsl
dec
sub
adc
add
arpl
out
subl
mov
mov
dec
stos
es
cld
pop
push
pop
into
sti
inc
inc
nop
test
fisttpl
sbb
jb
push
cmp
mov
aad
decl
push
cmpsb
mov
cltd
and
shll
dec
sub
mov
add
dec
adc
out
and
jmp
push
inc
adc
lret
in
jae
pop
divb
ds
mov
dec
xchg
add
pop
jp
rcr
sbb
jg
clc
sub
jle
jmp
sub
jge
into
mov
aam
in
sub
out
idivl
dec
dec
stc
mov
idivl
int
inc
cli
jns
fadds
and
cs
lods
jle
cmovl
jg
jne
and
mov
inc
into
pop
ret
adc
inc
xchg
jle
jl
popf
pusha
cmp
adc
movsl
pop
lcall
cmc
test
pop
sarl
lea
mov
xchg
mov
pop
and
daa
test
jp
xchg
iret
cmp
jmp
dec
sub
cmp
mov
leave
rorl
mull
cmp
rcr
push
out
or
add
cmp
mov
pusha
xorb
scas
mov
jecxz
and
pop
xchg
imul
inc
insl
jmp
add
sub
cs
jle
and
mov
mov
aaa
mov
xchg
jns
xchg
cmp
xchg
fsubrs
out
mov
scas
xchg
push
xchg
sub
xchg
fcoms
repnz
cmp
test
shlb
mov
mov
pusha
sbb
popa
xchg
xor
shrl
push
out
jl
dec
jmp
fnstsw
dec
jo
pop
push
je
pop
jl
dec
and
xchg
mov
dec
sbb
icebp
popl
adc
push
and
cmp
xchg
js
and
das
rcll
pusha
je
lret
xchg
pop
xchg
repz
ss
adc
inc
inc
mov
test
jb
inc
push
push
or
dec
inc
stos
adc
sbbl
jge
dec
fs
adc
sub
add
sti
cmpsb
dec
mov
pusha
ja
mov
mov
lret
fistps
shlb
cmp
jno
sbb
xor
jmpw
xor
enter
sbb
pop
xchg
mov
das
dec
jp
fldenv
fisubl
imul
int
lret
aaa
dec
pusha
in
popf
out
repnz
lcall
push
dec
mov
fsubl
fistl
ds
and
xchg
lahf
lret
dec
ret
outsl
fwait
push
jb
mov
add
xchg
cmp
cmp
mov
dec
stc
inc
push
jno
inc
inc
out
mulb
xchg
daa
xor
mov
dec
mov
add
cmpsb
mov
cld
int
dec
add
pop
xorl
mov
rorb
xor
dec
mov
fisubrs
stc
push
mov
dec
sbb
and
dec
adcl
mov
shlb
adc
repnz
lahf
iret
dec
adc
dec
push
push
into
push
dec
sbb
inc
and
fwait
scas
dec
push
in
lods
mov
inc
jmp
popa
hlt
cmc
pop
xchg
into
xor
scas
rep
bound
or
mov
decb
sub
cld
push
and
xchg
or
outsl
das
jb
adc
stos
loop
repnz
test
fwait
sarb
dec
outsb
mov
je
pop
pop
pop
mov
pop
mov
insb
in
fldl
dec
mov
dec
xchg
in
loopne
sbb
das
faddl
pop
int3
adc
dec
imulb
inc
bound
mov
out
ret
in
mov
dec
lret
and
cmc
sbb
sub
mov
fbstp
in
orl
push
and
add
jo
and
int3
dec
sbb
dec
push
shrl
inc
mov
push
xchg
sahf
addr16
jbe
dec
xchg
sbb
dec
cld
fidivrl
mov
adc
dec
sub
jl
xchg
dec
loope
lods
sti
fstpt
ficoml
ret
sar
adc
data16
fildll
fsts
bound
ret
adc
dec
rclb
jecxz
dec
rolb
push
mov
in
dec
std
pop
dec
hlt
cmp
cmp
xor
lea
negb
scas
fcoml
shll
sbb
aaa
jl
loope
bound
dec
jo
push
dec
xchg
ljmp
roll
fimull
mov
scas
dec
fisttpll
and
incl
popa
cmc
dec
in
xlat
xchg
sbb
sub
mov
mov
and
fwait
dec
in
cwtl
push
add
add
in
rclb
mov
and
dec
inc
jnp
sti
sub
call
push
imul
orb
clc
addr16
ja
inc
cli
mov
add
aad
dec
das
adc
sub
scas
iret
dec
je
mov
push
mov
push
jl
dec
and
in
inc
arpl
dec
cli
out
pushf
leave
inc
inc
mov
sbb
dec
in
aaa
orl
lcall
adc
mov
push
mov
sub
cld
cmpsl
imul
pop
fcomp
xor
inc
and
sti
int3
sbb
out
dec
jbe
shrb
pop
movsb
cmp
movsl
push
sbb
pop
jns
jle
lret
out
aas
mov
and
sbb
mov
mov
jp
hlt
xchg
dec
sub
iret
and
adc
cmp
fcomps
push
jb
nop
cs
cmp
cmpsb
pop
push
cs
nop
and
xor
pop
leave
cmp
dec
jb
cmp
jl
xor
into
xor
mov
jg
mov
inc
sub
fsubl
cltd
mov
ficoms
xchg
jae
cmp
mov
jg
sub
sub
adc
adc
xor
pop
xor
in
sbbl
dec
jg
shrb
mov
xchg
jbe
inc
pop
stos
or
dec
dec
fdivrs
or
adc
and
mov
xchg
xchg
mov
inc
push
bound
cs
and
sbb
ds
sahf
xor
xor
daa
pusha
or
mov
sahf
mov
pop
jbe
dec
into
fisubl
fcoml
xchg
or
mov
jo
push
filds
add
inc
imul
push
scas
das
adc
scas
into
pop
dec
shr
int
dec
push
je
jle
subb
jmp
adc
dec
dec
fistps
aas
sbb
adc
imul
or
enter
fs
into
jb
add
pop
inc
addb
xor
dec
mov
addr16
push
and
jne
mov
sti
adc
dec
jns
inc
in
push
dec
push
cmp
and
sahf
test
adc
pop
scas
cmp
push
rorl
sbb
adcb
inc
in
jmp
daa
in
icebp
test
jl
jl
outsl
xchg
add
jmp
push
jnp
inc
rolb
sarb
bound
dec
inc
out
dec
pop
jg
int3
enter
fwait
psadbw
in
fildll
iret
and
cltd
and
jle
fimull
mov
cli
dec
xor
nop
add
stos
mov
les
cmp
cmc
idivb
mov
mov
int
mov
das
loop
lret
addr16
cmp
call
fs
cmp
stos
into
dec
cmp
xchg
test
push
sub
int3
js
je
fildll
xor
inc
lcall
in
call
push
dec
lea
mov
mov
sub
xchg
outsb
loop
lds
cmpsl
adc
in
adc
ja
push
inc
xchg
xor
or
xchg
rclb
push
outsb
pop
ret
xlat
add
loop
out
sbb
mov
pop
rolb
xlat
mov
xchg
testb
mov
mov
jnp
ljmp
jl
sbb
push
sub
inc
add
imul
mov
push
jne
clc
add
xor
ret
inc
pop
xchg
xor
lcall
sub
cmp
adcb
xor
faddl
test
test
adc
or
xor
jle
mov
add
dec
sbb
cmp
out
or
dec
push
pop
idivl
roll
out
decb
mov
mov
movsb
mov
orl
loopne
sbb
insl
int
shlb
fmuls
imul
cs
daa
add
stos
in
adc
sti
das
add
fwait
or
aad
lahf
xor
les
icebp
jb
rcrb
sub
or
std
out
xchg
cmp
cmp
negl
dec
jne
xchg
shlb
push
mov
adc
sub
scas
or
push
jmp
xor
lods
dec
test
inc
cmc
and
adc
lret
pop
pushf
push
xchg
xchg
dec
push
jns
push
dec
sbb
xchg
fdivr
or
mov
cld
pop
sbb
rcll
loop
mov
popa
xor
stos
test
addr16
hlt
xchg
and
push
push
fistpll
ss
nop
sbb
iret
aam
add
sub
mov
and
ss
mov
dec
outsb
and
rorb
jo
jnp
dec
mov
call
or
sbbb
xlat
dec
push
jbe
jge
aad
or
hlt
iret
cmpsl
inc
cmp
add
adc
les
arpl
sub
xchg
repz
not
mov
out
inc
jns
test
push
jmp
dec
or
and
push
xchg
pop
mov
lret
xchg
loope
mov
rcr
dec
lcall
pop
jne
mov
add
jnp
ret
enter
cmp
fisubs
sub
iret
out
jg
xor
rol
xor
daa
sahf
sbb
ja
dec
jne
jl
sub
bound
push
or
fwait
scas
out
out
test
clc
pshufw
xchg
adc
xor
push
fnstcw
out
add
rolb
out
sbbb
cmp
push
lahf
jmp
bound
jl
mov
shld
dec
int
and
fisttpll
popa
dec
sub
add
cmp
xchg
data16
dec
add
fs
in
or
dec
xchg
out
shrl
jne
in
ja
dec
add
dec
loopne
fcomps
rolb
dec
hlt
popf
or
dec
lcall
pop
dec
imul
pop
dec
jns
mov
xchg
pop
fsubrl
fildll
xchg
or
push
dec
sbb
mov
cmp
push
dec
ret
jbe
mov
dec
inc
adc
or
bound
lret
neg
loopne
sbb
push
test
and
or
pop
jns
sbb
sub
dec
or
aam
call
dec
lods
jb
out
adc
rorb
pusha
jno
mov
adc
add
aaa
xchg
inc
mov
dec
loopne
and
dec
mov
nop
cmp
orl
in
popf
dec
popa
mov
imul
push
mov
xor
test
dec
mov
dec
xchg
mov
add
cmpsb
inc
xchg
xor
daa
sub
mov
js
mov
test
xor
dec
mov
and
mov
movsb
ljmp
mov
andb
shlb
dec
push
adc
mov
dec
arpl
inc
jmp
dec
mov
xor
inc
outsl
test
dec
xor
stos
push
and
ret
inc
mov
into
ja
sarl
mov
inc
xchg
push
out
test
lcall
dec
cwtl
jmp
inc
mov
sarb
int3
into
enter
dec
push
or
stos
aaa
dec
ret
fs
ljmp
dec
fisttpl
cwtl
scas
push
jge
out
movsl
fisttps
js
mov
mov
enter
cmp
dec
pop
mov
push
mov
leave
mov
insb
fisttpl
dec
lods
out
loope
in
cld
fwait
jp
dec
mov
add
cli
push
sbb
imul
cwtl
jo
insb
outsl
sbbb
dec
adc
in
sbb
addl
mov
pop
std
cltd
dec
rolb
mov
dec
mov
add
mov
xor
dec
or
jge
sbb
test
dec
xchg
dec
mov
xor
inc
rolb
fxch
iret
mov
loope
pop
xor
stc
sub
jle
ja,pn
fldt
les
push
dec
pop
jg
xchg
sub
adc
and
test
pop
lret
adc
roll
push
pop
and
inc
jb
mov
add
jg
mov
movsb
fincstp
jl
xor
cmc
push
popl
dec
sbb
in
int
pop
dec
scas
mov
jb
inc
test
pop
or
sahf
inc
mov
rcrb
into
xchg
fstpl
in
or
xchg
adc
stos
dec
inc
mov
sub
push
sub
les
inc
imul
fwait
dec
mov
mov
insl
dec
cld
pop
xchg
mov
scas
lods
adc
mov
add
dec
fists
insb
fcoms
mov
mov
cmpsl
orl
shr
sub
ljmp
xor
xchg
pushf
mov
movsb
adc
icebp
popf
mov
pop
jne
jmp
ja
push
xchg
jno
rorb
outsl
inc
dec
pop
push
loopne
mov
jbe
dec
xchg
insl
fcoml
clc
loopne
sub
dec
push
cmpsb
inc
out
lea
sub
iret
jg
xchg
dec
insl
jle
jmp
out
pop
push
aad
mov
push
mov
imul
daa
jnp
fst
pop
mov
stc
mov
dec
adc
js
pop
sbb
mov
dec
into
outsl
fwait
ret
and
cmp
xchg
dec
in
push
inc
inc
dec
dec
adc
iret
pcmpgtw
out
sbb
jae
hlt
jecxz
jp
push
ret
ss
push
ja
dec
loopne
push
mov
inc
cmova
test
lods
cmp
fwait
dec
mov
adc
or
out
mov
xor
push
and
ret
insb
dec
std
orl
mov
in
dec
aad
jp
das
adc
roll
pop
mov
mov
sbb
jl
push
fmul
sbb
ret
bound
dec
add
add
dec
adc
outsb
mov
dec
and
sti
jmp
dec
es
and
xlat
dec
sub
jne
adcb
dec
ds
pushf
cli
stos
es
ljmp
cwtl
and
dec
lahf
mov
inc
mov
dec
inc
shrl
loope
mov
ret
adc
pop
cmpsl
sbb
add
dec
sbb
jl
sbb
out
divb
out
push
popf
dec
cmp
stos
mov
push
push
add
push
mov
movsl
ds
out
mov
cmp
xor
dec
test
adc
push
xchg
clc
fcmovbe
jl
shl
out
fcmovbe
mov
arpl
sub
popa
pop
icebp
shrb
int3
call
int3
test
pop
mov
fidivs
pop
jecxz
icebp
push
inc
call
out
add
popa
jbe
cmp
into
and
xchg
mov
mov
jp
push
dec
daa
xlat
mov
add
push
dec
popa
out
scas
xchg
mov
mov
stos
gs
fs
aaa
ljmp
negl
aam
fisubrl
push
repnz
pop
cmp
dec
jb
mov
push
hlt
lock
push
aas
add
cmp
js
dec
in
xor
add
or
aam
mov
jmp
adc
mov
jl
gs
out
outsl
push
xchg
pop
and
lods
or
jae
pop
into
jmp
filds
repz
nop
sbb
add
andl
push
ret
and
dec
push
cwtl
mov
jg
dec
mov
jb
or
scas
lods
or
outsl
jl
mov
jns
sub
mov
sub
enter
mov
dec
push
inc
out
mov
push
enter
and
pop
leave
aaa
sahf
sub
mov
mov
pop
int
mov
inc
cmpsb
enter
into
pop
push
xchg
fnsave
jo
add
push
orl
orb
push
negl
lahf
push
clc
dec
popf
shrl
sarb
sub
or
out
lea
js
mov
inc
leave
pop
inc
hlt
lds
nop
push
data16
sbb
mov
popa
jnp
iret
movsl
clc
xchg
cmp
push
xor
call
dec
mov
pop
bound
xchg
or
sbb
dec
mov
sti
aam
test
sub
xlat
jb
dec
fisubl
pop
jle
jno
rcl
dec
mov
test
out
dec
sub
push
cmp
adc
inc
inc
sub
test
fisttpl
pop
add
xlat
mov
push
dec
or
outsl
fisttpll
pop
inc
adc
lock
insl
dec
jp
out
std
adc
xchg
jge
iret
mov
mov
cmp
int
lock
sbb
mov
lret
mov
into
jb
or
sub
btc
stos
xchg
inc
test
jge
push
jmp
add
xor
xlat
ja
mov
dec
ret
stos
mov
cmp
sub
push
clc
inc
xor
or
test
in
lock
dec
lods
or
add
jbe
dec
pop
outsb
dec
xorl
pop
inc
shll
add
scas
xor
aas
ss
mov
movsb
addr16
dec
pop
lods
mov
fidivs
push
adc
mov
mov
add
test
sbb
test
cmpsb
lods
xchg
shlb
pop
jb
dec
push
sbb
and
clc
movsl
pusha
ret
iret
xchg
int
sbb
mov
minps
push
push
jb
sbb
dec
cli
xor
cmp
dec
psrld
test
testb
popf
in
and
ja
lods
out
xor
lock
nop
sbb
mov
int3
gs
scas
fimuls
push
mov
inc
ljmp
call
mov
mov
orb
cltd
cmp
lcall
mov
inc
adc
shlb
fs
inc
pop
dec
insb
cli
stos
inc
jb
mov
cmc
outsb
jge
aas
ficompl
inc
mov
dec
inc
cmp
mov
fs
mov
pop
xor
fnstsw
add
pop
mov
jo
pop
cwtl
out
inc
inc
icebp
das
pop
mov
mov
jmp
mov
dec
test
dec
xlat
pop
xchg
std
mov
fstp
dec
sub
add
xor
dec
pop
xchg
cmp
fisttps
add
rcl
and
or
push
out
fstps
dec
shr
cli
sub
jo
gs
scas
push
inc
mov
or
fidivs
stos
stc
cmpsl
mov
lea
mov
sbb
sub
imul
xlat
inc
and
pop
jae
push
movsb
out
push
dec
fistpll
aaa
inc
and
push
mov
dec
sub
xchg
cld
adc
jecxz
pop
stos
add
rcrb
pop
mov
daa
push
cmp
cltd
dec
sub
and
and
in
push
mov
push
push
test
fnstcw
xor
mov
mov
lcall
cld
cmp
inc
mov
cld
jl
push
call
nop
int
xchg
jae
sub
dec
or
inc
cmpsb
push
dec
fcmovnb
test
aas
dec
jmp
jg
jb
xchg
sub
and
imul
call
and
dec
adc
inc
int
in
pop
sub
insl
mov
scas
into
push
roll
push
dec
inc
lret
movsl
das
hlt
mov
ds
loop
clc
nopl
pusha
mov
jle
inc
sub
push
mov
stos
or
out
out
iret
imul
dec
int3
xor
hlt
int
movsl
jmp
cmp
and
ja
xor
dec
push
insb
pop
nop
xor
xor
js
data16
arpl
xor
mov
sub
test
dec
and
inc
fimuls
mov
test
in
adc
fs
ret
mov
dec
out
dec
mov
xor
xchg
jp
dec
or
mov
gs
fwait
inc
mov
dec
enter
dec
mov
adc
sbb
mov
std
mov
repz
add
or
cmp
iret
mov
inc
push
dec
fmuls
mov
aad
aas
xchg
test
sar
mov
inc
pop
xor
dec
pop
mov
jae
push
insl
das
fnstcw
rcl
pop
imul
in
nop
lahf
leave
inc
fimuls
into
adc
je
dec
jg
mov
xor
sub
ss
mov
push
xchg
push
jmp
sbb
pop
mov
mov
into
or
xchg
jl
xchg
mov
dec
mov
ljmp
and
mov
std
pusha
out
sub
pop
add
xchg
mov
outsb
sub
shl
mov
dec
mov
roll
push
lcall
rcr
xlat
jg
lea
jae
push
cmc
sub
insl
pop
xchg
daa
into
mov
add
push
add
dec
jo
cmp
dec
fs
mov
push
dec
sbb
jmp
test
jecxz
lret
jle
dec
dec
and
sub
adc
std
mov
lock
dec
mov
fs
mov
or
ja
dec
mov
adc
pop
and
mov
addb
sahf
bound
mov
xor
mov
mov
dec
hlt
or
arpl
lock
ret
cwtl
test
cmp
mov
in
xchg
imul
mov
pop
sbb
pop
lcall
popf
in
divl
stc
push
inc
bound
jecxz
xor
dec
mov
push
xor
jp
dec
sub
adc
rcr
push
scas
data16
iret
js
add
adc
cmp
ret
out
mov
dec
scas
test
dec
xchg
dec
lcall
mov
insb
mov
cs
mov
add
xor
adc
bnd
mov
hlt
dec
inc
pop
push
mov
shlb
scas
xor
iret
xchg
and
push
dec
dec
ret
push
or
pop
dec
cmp
inc
add
into
mul
aam
and
insb
inc
pop
das
rcr
shll
cld
or
jnp
clc
add
pop
test
cmc
out
dec
sbb
adc
adc
daa
call
flds
loope
sarl
inc
ret
sbb
icebp
mov
aam
push
adc
dec
into
sub
aam
or
fs
nop
cmp
lret
stos
repnz
xor
dec
xchg
mov
or
add
dec
imul
cmc
mov
pop
adc
lods
dec
pop
and
jnp
les
dec
test
or
cmpsl
cld
jbe
ss
push
push
pop
loopne
insb
outsb
push
adc
sti
popa
ljmp
push
and
je
mov
testb
movsb
out
jg
inc
in
dec
and
push
xchg
mov
repz
mov
clc
push
push
or
dec
sub
fsubl
call
sarl
jne
dec
sbb
mov
scas
ficoml
inc
mov
mov
sub
dec
fwait
loop
mov
xchg
cmp
dec
pop
and
repnz
fsubs
sub
aad
fmull
and
and
jo
push
call
pop
adc
sbbb
dec
pushf
in
pop
cmp
inc
jo
xor
add
aad
jmp
mov
call
subb
fimull
dec
in
adc
cld
or
fs
outsb
stos
mov
inc
sbb
lahf
test
inc
add
and
stc
ljmp
add
push
loopne
push
dec
mov
sub
dec
fsubr
ret
jbe
cmp
cmp
lret
or
xor
les
dec
pop
cwtl
fdiv
dec
arpl
test
js
cmp
add
mov
push
dec
lock
pop
addr16
dec
scas
lret
mov
cmp
stos
ljmp
pop
pop
push
fidivs
data16
lea
and
fists
dec
bnd
jo
rcll
int
std
scas
insl
or
mov
hlt
cmpsl
icebp
lea
dec
movsl
adcb
cld
mov
sbb
mov
mov
dec
rcr
xchg
mov
ljmp
aam
xor
je
dec
mov
les
dec
pop
into
sub
dec
cltd
nop
jl
movsb
shll
jp
dec
or
push
repnz
dec
push
lods
xlat
ja
jl
leave
out
stos
pop
cmp
xchg
cmp
ja
xchg
mul
xor
cld
dec
fmuls
inc
leave
dec
sbb
stos
outsb
sbb
mov
sub
jl
arpl
arpl
dec
shl
sbb
xchg
lret
push
inc
sbb
into
add
repnz
pop
jmp
cmp
mov
xchg
lcall
xchg
shrb
jbe
mov
jl
imulb
les
dec
aam
addr16
mov
clc
pop
or
out
jl
dec
icebp
or
mov
xchg
adc
adc
and
dec
xchg
jnp
dec
mulb
test
movsl
ljmp
sub
sbb
sub
in
jmp
add
push
orb
hlt
lods
jp
ret
xchg
in
sbbl
adc
js
dec
fiaddl
push
mov
mov
fiadds
push
sub
frstor
mov
cs
dec
jo
sub
fucomip
into
xchg
adc
pop
and
push
cmpsl
frstor
dec
mov
loopne
lret
sbb
xlat
dec
jecxz
fmul
sbb
loope
inc
mov
iret
xchg
test
dec
pusha
add
arpl
fs
stos
dec
add
mov
aam
cmp
fcmovnb
cmpsl
scas
cmp
sbb
sti
hlt
adc
push
enter
dec
inc
mov
add
inc
xlat
mov
add
and
lret
pop
out
outsb
stos
icebp
notb
sub
and
xchg
sbb
push
int
pop
and
mov
rorl
jg
fcmovb
dec
xchg
jns
add
dec
cmp
shlb
lods
fisubs
fiadds
movsl
testl
cmp
push
jmp
loop
out
cmc
dec
dec
cwtl
insb
push
mov
mov
push
es
or
adc
pop
bound
mov
cltd
push
xor
jge
int3
xchg
or
jle
ret
mov
rcrl
xlat
daa
shrl
pop
mov
or
dec
aaa
lcall
in
cmc
cmp
fwait
dec
mov
push
test
movsb
sub
fidivrl
pop
dec
adc
arpl
stos
adc
addr16
pop
push
xor
xacquire
mov
iret
int3
push
hlt
cmp
dec
testl
sarb
fstpl
shll
xchg
dec
dec
mov
cmc
pop
clc
pop
imul
data16
fst
ds
cmp
out
andl
push
lods
or
mov
aad
push
adc
jecxz
adc
dec
sub
add
and
les
repnz
adc
sub
sti
in
jp
mov
xor
add
push
lods
inc
lret
and
dec
mov
add
cmpsl
xlat
inc
push
dec
push
pop
je
je
pusha
mov
shll
mov
jne
mov
mov
out
stos
cld
xor
aam
sbb
fs
in
cmpsb
xor
adc
leave
mov
jl
addl
sub
movl
pop
mov
gs
gs
lods
stos
sti
fdivrl
cmp
pop
outsb
pop
dec
clc
jle
in
xchg
jns
push
xchg
cs
pop
pop
push
scas
jg
dec
or
jle
jmp
mov
adc
es
pop
jl
add
rolb
or
aas
insb
aas
cmp
xchg
lret
addr16
mov
cmp
mov
jae
out
or
pop
repnz
aaa
in
inc
add
jl
or
fstl
and
out
mov
icebp
add
push
repz
in
cmp
push
stos
push
push
mov
sbb
jl
mov
loop
adc
sub
jecxz
sti
cmpsb
xchg
sbb
inc
dec
push
xchg
mov
inc
rorb
dec
stos
xchg
jecxz
cli
sbb
dec
mov
insb
rcrl
adc
inc
cmpsl
inc
mov
into
push
cmc
inc
sub
add
in
testl
push
push
push
mov
ret
jmp
rcrb
dec
or
out
inc
mov
cld
dec
xor
adc
test
cmpsl
aam
in
into
dec
jae
inc
sub
mov
fdivr
mov
subl
mov
xor
ja
fistpll
dec
dec
fwait
or
dec
out
xor
add
loopne
into
jg
dec
out
fcoml
push
in
loope
clc
push
mov
loopne
dec
aaa
stos
or
mov
jo
dec
mov
shrl
in
dec
or
stc
dec
dec
cmp
jge
pop
dec
push
xor
outsl
xchg
dec
imul
into
xor
sub
jnp
push
bound
mov
dec
or
stc
dec
or
push
jl
cmp
dec
add
in
arpl
orl
xchg
push
gs
hlt
inc
and
addr16
iret
ljmp
pop
dec
xor
xchg
imul
jae,pt
cmpsb
dec
xchg
inc
cmp
sub
lcall
mov
pop
pop
lret
mov
rcr
inc
xor
jecxz
dec
inc
adc
flds
stc
jne
insl
jns
imul
jp
cmp
ljmp
push
fsubl
loopne
rcrb
stos
dec
cli
orb
out
lahf
add
decb
mov
pmaxub
and
xor
fcos
xchg
mov
nop
iret
lock
cmp
mov
lcall
dec
jnp
adc
push
mov
jo
out
dec
or
fildl
add
stc
test
dec
lcall
stos
test
and
or
nop
cmc
out
movsb
inc
lock
mov
dec
xor
sub
mov
jle
outsb
dec
sarb
sbb
ljmp
mov
les
dec
xchg
add
dec
js
cmpsl
push
and
push
jno
loope
pushw
cmp
les
or
cwtl
inc
jle
sahf
dec
cmp
and
dec
and
sub
aam
stos
aam
adc
daa
mov
adc
sbb
hlt
sbb
dec
add
mov
iret
mov
xorb
push
mov
xor
sbb
je
xor
ljmp
imul
test
loopne
push
fcompl
lret
sahf
loope
clc
imul
cmpsl
daa
dec
sub
and
push
fsts
mov
xchg
jle
js
movb
in
dec
jge
sub
and
dec
dec
incb
dec
push
fld
xchg
xor
xchg
push
dec
pop
sahf
sbb
xchg
mov
xor
jle
out
test
fs
mov
fstl
insb
pushf
fnstsw
cmp
gs
cmpsl
add
mov
sarb
mov
adc
mov
rcrb
cmpsb
xchg
dec
loop
popa
mov
jmp
daa
sub
jmp
cmp
jno
mov
jbe
dec
mov
inc
sub
xchg
pop
sti
cmp
add
popf
enter
roll
dec
inc
pop
lods
outsl
xchg
or
dec
dec
xor
js
fldt
jp
mov
push
outsl
lahf
pop
dec
addr16
subl
imul
pushf
fisttpl
inc
out
jl
push
test
pop
mov
daa
icebp
push
cltd
xchg
adc
inc
inc
in
pop
push
dec
xchg
je
insb
dec
filds
jmp
cwtl
xchg
mov
jb
insb
push
stc
pop
fwait
cmp
jp
clc
outsb
iret
cmp
mov
sub
das
aad
jbe
mov
fisubs
out
cmp
jo
push
jne
push
rcrb
push
and
cmpsl
rorl
jb
test
dec
ret
mov
jns
lea
das
jl
imul
stc
pop
pop
push
iret
pushf
inc
daa
fnstsw
bound
sbb
out
jecxz
jnp
pop
sub
test
leave
fiaddl
por
movsl
jle
jg
iret
lods
dec
rcll
xor
pop
vunpcklps
sub
or
mov
jbe
jmp
aaa
inc
push
dec
sub
loope
add
ljmp
shlb
xorl
imul
enter
lea
test
jmp
std
fisttpl
ljmp
mov
sub
xchg
pop
divb
and
cltd
je
aaa
xor
out
dec
xchg
enter
iret
jmp
add
out
jbe
pop
dec
pop
es
mov
jecxz
push
xchg
pop
xor
dec
lret
lods
sbb
inc
xor
cmp
push
xchg
arpl
jle
rcrb
sahf
xor
iret
jnp
dec
push
adc
fisubs
mov
lock
mov
mov
cmp
add
cmp
dec
add
push
and
js
test
bound
dec
fdivr
sub
loope
add
dec
cli
mov
mov
dec
pushf
xor
mov
lret
addr16
sbb
xor
pop
testb
in
inc
pop
lahf
mov
icebp
dec
sub
push
xor
dec
sbb
aam
or
out
dec
pop
lods
mov
dec
xlat
push
cwtl
adc
mov
inc
or
xchg
dec
mov
sbb
fisttpll
pop
mov
call
sbb
push
adc
insl
pop
or
mov
dec
lods
or
sti
or
mov
enter
pop
fistpll
push
repnz
inc
data16
int3
sbb
pusha
stos
dec
mov
adc
add
icebp
sub
cmpsl
inc
dec
hlt
inc
cmp
mov
popa
push
mov
dec
or
out
jbe
jecxz
fcomip
mov
pop
adc
pop
scas
shll
mov
pop
scas
push
xchg
jg
jmp
adc
nop
mov
mov
mov
mov
mov
dec
xchg
xor
loop
fsts
cmp
ljmp
sub
sbb
popl
fists
bound
iret
adc
jo
cs
daa
cmp
cmc
push
xchg
mov
push
dec
fmulp
jns
sub
sub
inc
mov
dec
fs
addb
sub
sbb
mov
xor
xchg
aas
inc
jnp
xor
xchg
subl
fsubs
and
fimull
inc
jmp
cmp
push
out
roll
stos
shrb
push
inc
or
push
aaa
push
mov
out
stos
lahf
imul
leave
ss
int
inc
mov
xor
inc
into
in
pushf
jp
shl
mov
int
mov
jecxz
and
sarb
outsl
dec
loop
arpl
pop
out
mov
test
sub
leave
stos
fs
cs
sbb
cmp
inc
jg
pop
jle
aaa
mov
mov
pop
mov
sub
jle
ret
xchg
sbb
pop
jmp
pop
fs
mov
jnp
xchg
sbb
push
int
jl
stc
rorb
inc
or
in
subl
gs
dec
add
mov
popf
xchg
outsl
inc
jle
in
mov
jb
iret
shlb
test
mov
cmp
dec
sahf
push
aaa
mov
adc
inc
lods
bound
jp
test
or
jmp
sbb
adcl
cmc
scas
out
mov
push
mov
mov
sbb
inc
xor
out
repz
dec
stc
cs
mov
jg
sti
jmp
imul
inc
jg
jge
aas
ds
or
pop
adc
stos
jo
xchg
mov
cmpsb
movsb
repz
lods
pusha
add
or
pop
lahf
les
test
fstl
jg
fdiv
add
fimuls
sub
into
nop
outsb
cmp
adc
mov
xor
aam
dec
cmp
cli
mov
push
pop
xor
mov
cmp
jle
fxch
and
jp
aam
dec
fidivrl
add
movsl
scas
ss
jl
add
pop
inc
pop
dec
cmpsl
incb
out
and
and
rcll
scas
sub
dec
popf
sbb
cmc
hlt
xor
daa
lahf
into
sub
aaa
lret
cwtl
push
mov
mov
iret
call
push
fucomip
xlat
subb
lret
ss
xor
jg
dec
cmp
jbe
loop
out
lcall
mov
mov
dec
popa
cwtl
test
ret
adc
jge
xchg
outsb
loopne
dec
dec
scas
push
xor
dec
subb
or
dec
fldenv
mov
nop
ds
out
inc
aad
xchg
cmp
dec
jnp
lcall
inc
dec
ret
jb
or
cmpsl
adc
mov
cmpsb
fmuls
rcll
jne
push
xor
bound
dec
ja
or
bswap
js
dec
repnz
add
xor
fs
inc
xchg
icebp
rol
dec
jle
dec
notl
mov
add
sub
inc
xor
dec
lcall
js
aaa
cli
icebp
or
pop
xor
push
add
lcall
xor
xchg
mov
iret
mov
adc
and
or
nop
fwait
xchg
stos
outsl
dec
addb
imul
lret
test
fs
mov
popf
int3
aaa
movsl
cs
addl
adc
andb
mov
lcall
inc
xchg
lahf
sti
scas
movsb
add
lock
loopne
jmp
jle
dec
nop
or
jl
fsubrs
cmpsb
enter
push
rorl
add
repnz
sub
out
ss
lock
push
pop
dec
mov
insl
pop
lods
dec
jb
pop
cmpl
int
sahf
fstp
scas
mov
cmp
dec
cltd
sbb
ja
iret
or
imul
arpl
xor
adc
pop
dec
ret
outsb
sbb
cmp
ds
dec
jg
cmp
daa
xor
lret
ss
mov
mov
jle
cli
cs
loop
aad
mov
push
lock
leave
cmpsb
pop
lret
xchg
dec
pop
hlt
data16
and
movsb
fmul
in
test
nop
mov
jp
rcrb
lahf
sbb
jle
mov
dec
dec
bound
shll
cmp
cmp
int3
pop
cmp
sti
xchg
hlt
testl
test
jp
sbb
rcr
mov
lret
outsl
xchg
mov
fdivrs
cmpsl
inc
push
js
inc
dec
je
push
dec
notb
push
nop
mov
sbb
dec
pop
jns
in
sbb
insb
dec
cmc
les
insl
dec
out
adc
hlt
dec
cmp
dec
mov
add
insb
xor
and
adc
movl
pop
mov
ds
dec
loope
inc
imul
mov
cmp
sar
incl
dec
lcall
mov
repz
push
int3
incl
cwtl
dec
cmpsb
push
les
sbb
fstpt
movsl
cld
repnz
pop
ds
dec
not
rcll
xor
sub
outsl
lods
dec
test
in
sub
lods
mov
addr16
loopne
push
push
mov
and
jbe
dec
adc
subb
scas
mov
jge
icebp
jb
fldenv
in
cmp
aas
dec
mov
xor
call
push
sub
stos
ja
call
insb
pop
rcrb
in
dec
dec
and
and
shl
push
sbb
add
push
dec
add
mov
mov
in
ret
add
mov
jl
push
shl
lods
and
andb
lea
adc
and
and
inc
loopne
pop
js
pop
cwtl
mov
pop
lods
fsts
rclb
ud0
push
int
cltd
push
bound
fsts
add
sub
iret
fs
test
inc
ja
lds
mov
push
repnz
mov
fmulp
pop
and
je
pop
pop
ret
dec
aam
mov
rcll
arpl
inc
xchg
mov
mov
cmp
pop
aam
test
dec
jno
jmp
adc
sbb
out
pop
cltd
mov
pop
les
mov
add
xor
cmpb
mov
xorl
mov
dec
in
push
vmread
jb
mov
dec
das
inc
cmc
arpl
divl
xchg
ret
push
adc
xlat
xchg
addr16
inc
adc
inc
test
dec
sub
mov
loop
popf
ss
mov
pop
push
popa
and
mov
dec
popa
outsb
and
imul
pushf
cmp
dec
fmuls
loope
push
pop
push
rolb
jnp
out
cmc
test
xchg
loope
cmp
push
sbb
mov
mov
inc
ret
sub
sbb
popf
call
and
cmp
or
pop
movsb
xchg
sub
push
adc
je
add
into
jmp
dec
sbb
sahf
ficoml
dec
sbb
icebp
ja
popf
inc
jg
pop
mov
cli
sarb
push
cmpsb
add
sti
lea
dec
jle
mov
sahf
scas
mov
in
lret
dec
fwait
les
ret
cld
das
cmp
push
orb
dec
std
or
les
inc
out
sub
cmp
clc
and
xor
movb
gs
ja
adc
cld
insl
outsl
fwait
lods
push
mov
mov
sub
pop
adc
sahf
shll
xchg
dec
xchg
pushf
mov
inc
adc
stos
adc
ljmp
jns
and
dec
lock
daa
cmpsb
jge
mov
arpl
insb
add
gs
pop
inc
sbb
fiadds
adc
sub
cltd
jbe
cwtl
dec
mov
dec
jl
aaa
mov
dec
add
les
push
and
fsubs
loope
mov
add
pop
jge
dec
cmc
pop
dec
mov
cmp
popa
xchg
scas
enter
push
in
jg
xchg
fwait
sarl
int
fmull
jmp
xchg
insl
mov
stc
cmpsb
push
inc
enter
cmp
dec
sub
cmp
call
bound
pop
mov
pop
push
in
dec
rorb
jp
lock
add
pop
inc
hlt
lods
push
push
push
cmp
mov
inc
sbb
cmove
xchg
dec
cmp
and
int3
divps
sub
pop
dec
mov
shlb
or
jl
into
dec
jo
stos
or
mov
and
inc
sub
jmp
or
cmp
mov
inc
mov
push
adcl
inc
mov
std
jno
dec
mull
adc
repz
loop
add
xchg
xchg
rorb
scas
mov
out
sub
nop
push
xchg
sbb
pop
push
ror
xchg
pop
xchg
in
fisubrs
insl
dec
pop
mov
out
testl
mov
nop
das
repz
jge
daa
mov
xchg
mov
out
int3
sbbb
sub
xor
push
xchg
sbb
mov
dec
pop
nop
mov
push
es
xor
dec
sti
cmp
fisttpll
rcll
mov
testl
outsl
pop
add
adc
insb
in
dec
outsb
ds
rcl
ljmp
inc
adc
xor
push
outsl
fsubrs
push
dec
mov
dec
mov
mov
push
repnz
jne
mov
inc
lret
sbb
cmpsb
fwait
movb
dec
xor
xor
popf
insb
testl
cwtl
pop
adc
inc
lahf
pop
fisubrl
lcall
and
sbb
cmc
ja
outsb
lock
movsl
dec
pop
scas
fcoms
dec
mov
in
jl
push
mov
test
pop
mov
orb
dec
sti
sbb
mov
and
rorb
clc
dec
mov
or
inc
imul
iret
xor
jg
nop
dec
dec
fsubrs
lahf
push
fwait
mov
dec
pop
not
scas
mov
mov
aam
dec
push
fisubrs
push
icebp
jo
out
aas
dec
pop
cmp
cmp
pop
mov
adc
movq
js
jp
icebp
pop
movsl
jge
mov
add
mov
dec
add
cmc
jl
inc
dec
loop
or
adc
mov
jl
shll
mov
iret
hlt
jl
lea
push
push
mov
insb
daa
jl
push
movsl
dec
idivb
aam
mov
adc
push
fidivrs
mov
cmp
jle
hlt
fmull
insb
dec
pop
es
fwait
cmp
xchg
pop
and
jp,pn
push
cmp
lret
cmp
add
xchg
lret
mov
or
push
pushl
cltd
fwait
inc
mov
sbb
mov
cmpsb
dec
inc
cmp
push
clc
pop
inc
cmpsl
das
imul
sub
push
push
dec
daa
xor
mov
add
es
stos
icebp
xor
and
int
aas
fisubl
in
push
pop
lret
adc
insl
push
and
jns
cs
imul
sarb
cmp
in
cmpsl
dec
cs
das
push
imul
aaa
xor
cmp
call
xor
cmc
scas
dec
push
mov
or
clc
into
ljmp
emms
mov
xor
push
into
dec
adc
enter
xor
out
sub
out
sub
mov
dec
add
adc
fidivl
subb
sarb
pop
fwait
dec
movsb
shrl
fiaddl
aaa
and
inc
addb
out
sahf
cmp
push
dec
insb
pop
cmp
pop
test
mov
out
or
leave
lea
dec
add
and
mov
lret
add
xchg
cmp
lods
repz
jae
adc
fs
xchg
mov
pop
stc
outsl
push
dec
add
or
shll
mov
pushl
outsl
icebp
xchg
pop
xlat
cmpsb
dec
fcoms
test
fmull
pop
xchg
push
addb
leave
ljmp
lret
pop
sbb
ret
add
sbb
addr16
inc
pusha
dec
shlb
pop
mov
sub
dec
jno
je
clc
aaa
lcall
sub
jb
dec
fistpll
into
dec
adc
gs
ss
mov
dec
aaa
mov
inc
sbb
iret
bound
cld
in
les
lock
push
outsb
flds
dec
push
sub
xor
loopne
pop
adc
mov
dec
sbb
std
fmull
xlat
jle
lret
or
into
aaa
rorb
adc
je
leave
xchg
xlat
dec
frstor
outsb
dec
or
sub
sahf
mov
sub
testl
arpl
dec
xchg
jbe
nop
xchg
pop
jl
fsub
xchg
add
add
xchg
cli
dec
cs
pop
cld
arpl
xchg
dec
and
sbb
cmp
jl
incb
movb
and
rolb
fisubrl
add
test
jle
lahf
jb
ja
ds
movsb
daa
mov
data16
mov
in
xchg
cmp
in
xor
sub
adc
jg
ret
jle
dec
xchg
nop
icebp
pop
inc
imul
xchg
dec
dec
pusha
adc
aam
mov
jmp
subb
pop
xchg
shl
fnstsw
fcoml
dec
mov
dec
jae
cmc
sub
sbbb
fisubrs
jbe
xrelease
outsb
orb
mov
mov
cmp
shrb
xor
subl
mov
fstpl
aam
cmp
xchg
and
jl
icebp
jo
movd
cltd
inc
in
add
mov
in
push
pushf
mov
and
jmp
jg
mov
cmp
stc
dec
fldl
ficoms
mov
dec
mov
sarl
aaa
inc
mov
dec
and
adc
pop
in
je
dec
xlat
push
jnp
jle
push
lret
inc
add
inc
rorl
imul
popa
aas
dec
cli
lcall
enter
cmp
mov
insb
adc
in
in
xchg
push
and
mov
jp
mov
pop
pop
or
aas
pop
movsb
jp
pop
push
dec
sti
lds
mov
pusha
pop
dec
gs
cmpsl
jg
cmp
dec
push
add
dec
sub
shl
push
jno
push
cmp
xchg
nop
dec
xlat
xchg
jmp
test
loopne
add
xor
mov
dec
loope
jne
xor
add
mov
push
and
xchg
ficoms
lods
inc
cmp
loop
out
jno
push
scas
outsb
inc
jmp
or
dec
jle
dec
aad
inc
outsl
jae
hlt
cmpsl
mov
in
xor
or
dec
add
arpl
push
dec
jae
add
repz
pop
mov
push
or
pop
mov
inc
dec
icebp
ljmp
sarl
cwtl
sahf
aaa
outsl
dec
fstpt
xchg
es
cmp
pop
les
sub
into
cli
repz
lea
jp
push
pop
adc
popa
mov
xchg
push
push
and
mov
ss
loop
dec
dec
aaa
adc
push
sub
add
mov
fwait
lret
add
flds
xchg
xor
dec
xchg
xchg
and
notb
add
mov
mov
insl
jg
xor
test
sti
or
mov
pop
iret
cmp
out
ret
cmp
inc
xchg
pop
mov
jp
sti
lahf
lea
pusha
adc
popa
jle
jae
mov
xchg
scas
push
xchg
into
ficoms
or
hlt
mov
cli
mov
push
dec
pusha
mov
dec
pop
es
pop
sub
add
outsl
pop
dec
push
cmp
scas
and
pop
cmp
xlat
lahf
loopne
pop
les
fisttpll
dec
cmc
inc
lods
pop
sub
fxch
dec
lret
andb
sub
jle
ret
dec
push
sahf
mov
or
test
xchg
mov
or
inc
push
cmp
adc
ja
push
nop
fisttps
add
pusha
dec
pushf
lret
insl
push
dec
hlt
cmpsb
mov
dec
cltd
pop
push
je
dec
cmp
push
xchg
inc
dec
cmp
mov
inc
or
call
push
outsl
popa
push
lods
adc
dec
mov
arpl
js
dec
pusha
movsb
jle
lods
pushf
fs
outsb
pop
lods
mov
mov
nop
dec
inc
jbe
dec
and
jl
dec
movsb
mov
pop
in
or
push
jg
jg
fwait
aam
sarl
repnz
inc
push
lea
stos
mov
inc
mov
imul
bound
jo
lea
fistl
push
inc
dec
mov
pop
inc
scas
dec
lcall
xor
and
push
xor
jmp
dec
fwait
subl
dec
loopne
mov
cmp
iret
ljmp
test
dec
iret
jge
sub
mov
xor
mov
cmpsb
xchg
cmp
movsl
sbb
jle
push
cmp
xchg
add
repz
sub
mov
out
cmp
stos
jecxz
push
ret
sub
push
inc
mov
push
stos
dec
jg
clc
jnp,pn
invd
out
pop
loopne
adc
push
call
loope
cs
scas
into
pop
out
inc
dec
lcall
lahf
push
pop
stos
mov
scas
stos
push
int3
shr
add
jns
fdivrs
push
sti
clc
lar
xor
cltd
orl
aas
push
shr
lods
leave
cmovo
mov
lret
sub
sbb
mov
adc
inc
jbe
bound
pop
lret
dec
test
mov
xchg
push
mov
std
pop
cs
xor
imulb
mov
jae
lret
xchg
int
inc
xchg
sub
sbb
cs
enter
cmp
push
leave
rolb
inc
jno
daa
cmp
cmp
xorb
mov
jg
out
aas
mov
movsb
cld
mov
add
lret
or
cs
cmp
fs
and
pusha
out
out
jg
cmpsb
movsb
pop
add
fldcw
or
adc
scas
dec
orl
ljmp
popa
mov
add
dec
daa
jmp
pop
inc
xor
movsb
cmp
lcall
mov
in
mov
adc
xchg
dec
mov
xor
dec
pop
mov
mov
push
push
scas
pop
popa
jmp
je
and
and
mov
nop
xor
sti
mov
push
xchg
lea
movsb
insb
lcall
mov
mov
out
in
xlat
ret
jns
pop
es
mov
notb
fst
fistl
dec
orl
cmp
mov
xor
inc
dec
dec
loop
jbe
inc
dec
call
cmc
in
inc
movsb
cmp
outsl
jo
lret
mov
mov
sbb
push
stc
dec
push
loope
insl
dec
inc
dec
mov
add
js
dec
or
loope
jnp
dec
jbe
ljmp
lret
mov
dec
lahf
jne
mov
inc
lret
call
sub
sbb
and
arpl
aad
cmpl
scas
jns
dec
shl
mov
adc
loop
push
xchg
ss
cli
dec
ds
les
dec
sahf
xor
iret
dec
cmp
push
clc
imul
push
or
pop
cmpsb
mov
fdivs
test
push
add
or
jecxz
scas
insl
inc
and
jne
out
clc
inc
movsl
add
mov
inc
aam
xchg
lret
das
or
push
mov
aas
fs
ficompl
popa
or
jo
js
mov
sub
cmp
jl
cli
icebp
adc
xchg
ret
inc
pushl
dec
fsubrs
xor
pop
loopne
stos
test
jl
ds
adc
std
loopne
mov
dec
push
rorl
jne
adc
andl
xchg
out
aaa
xor
push
inc
mov
sub
dec
mov
pop
dec
enter
dec
push
push
mov
xchg
js
int3
loopne
testb
or
xorb
mov
int3
pop
xor
cmpsb
inc
testl
mov
adc
mov
fisubrs
push
dec
sbb
test
imul
ds
add
movsl
cmp
fistpll
jl
push
xchg
negl
cmp
inc
jl
in
pop
push
pop
add
mov
cmpb
fdiv
cmp
cmp
insb
xor
mov
cmpsb
sbbl
and
aaa
mov
mov
cwtl
icebp
popf
push
movsl
push
sbbb
mov
cld
push
sub
pop
inc
pop
popf
das
lods
inc
jl
mov
inc
repnz
pushf
das
cmp
sub
movsl
hlt
stos
ja
loop
dec
xchg
push
subb
sbb
push
jge
in
xchg
dec
or
aas
mov
dec
push
ja
mov
fucomp
sub
adc
lcall
shll
dec
loopne
lock
pop
cwtl
cmpsl
dec
and
fisttpll
pushf
ljmp
js
lods
dec
or
xor
inc
mov
mov
dec
sbb
add
adc
xchg
dec
pop
inc
jge
shlb
dec
push
mov
icebp
dec
movsb
das
jb
addr16
pop
call
jp
and
outsl
push
or
pop
push
mov
and
iret
adc
mov
pop
dec
xchg
loopne
std
pop
das
push
movsl
dec
ret
fucomp
pop
out
and
or
xor
dec
in
push
xchg
mov
fisttpll
rolb
lret
dec
test
sbb
int
jp
dec
lea
scas
mov
and
fldz
jae
adc
add
loope
aaa
dec
cmp
sub
dec
out
mov
mov
in
shrl
into
adc
es
sub
push
mul
xchg
pop
dec
gs
lahf
add
cs
jb
fst
int
mov
aad
cld
mov
adc
dec
jns
lcall
sbbl
inc
inc
add
stc
xlat
cs
negl
dec
fcmovbe
fwait
outsl
mov
add
or
dec
rcrl
in
and
cmpsl
and
mov
fimuls
test
adcb
mov
push
mov
add
cmc
mov
sbb
dec
vpackssdw
rorb
cs
dec
xchg
cmp
pop
jl
push
sti
jle
jno
push
stos
rcl
sub
outsl
inc
aaa
js
jo
adc
dec
xor
idivl
push
cmp
dec
sar
mov
lcall
loope
outsb
out
out
les
adc
mov
dec
mov
mov
cwtl
mov
cmp
xchg
lcall
cmp
cld
inc
pop
aaa
push
xchg
rorl
dec
adc
out
sbb
mov
fcoml
clc
pop
out
ds
icebp
cmpsl
adc
gs
inc
adc
inc
jle
mov
sarb
and
inc
dec
mov
or
fwait
jmp
dec
jle
repz
icebp
into
bound
lcall
dec
iret
pop
addr16
mov
sbb
mov
or
fisubrl
xchg
fwait
decl
adc
and
lds
fisubrs
sbb
add
xor
sub
adc
fmull
icebp
shll
adc
mov
dec
pop
insl
sbb
pusha
pop
fs
je
fimuls
xchg
push
jecxz
dec
data16
push
stos
call
xchg
mov
das
pusha
sti
push
aad
pop
mulb
repnz
cmc
adc
and
cmp
fwait
aaa
iret
xchg
xor
inc
rcrb
xchg
and
dec
in
jg
cmp
push
outsb
aad
sbb
cs
cmpsl
adcb
pop
fwait
mov
popf
fucomp
lods
push
mov
sahf
mov
dec
fcoms
inc
in
fimuls
mov
jl
xor
movswl
gs
movsl
push
aam
and
dec
int
into
xor
adc
xchg
iret
push
les
nop
cs
dec
mov
sbb
inc
push
dec
and
js
rclb
out
fisttpl
mov
jbe
adc
lock
pop
or
dec
rorl
push
not
ret
xor
rcr
scas
push
pop
xchg
dec
mov
cld
testb
dec
mov
js
mov
add
add
jne
xchg
mov
les
hlt
pop
movsl
fdivrp
mov
bound
push
ret
dec
jno
xor
mov
xchg
jg
ljmp
xchg
mov
xor
call
or
insb
icebp
sub
cmp
mov
inc
sub
fisubs
adc
ret
cli
iret
loopne
pop
pop
ret
adc
adc
call
dec
mov
sarb
scas
jecxz
movsl
push
cs
push
fildll
sub
test
sub
mov
addr16
out
lods
in
xor
into
jle
enter
scas
jl
iret
xchg
xchg
jle
out
jle
sub
push
dec
pop
or
sbb
ja
fucomi
dec
push
dec
stc
inc
mov
cwtl
cmpsb
lret
sub
mov
or
ljmp
push
shrl
jg
test
sarl
mov
loope
sbb
mov
sub
pop
jnp
hlt
arpl
lods
pusha
fmull
pop
dec
jg
aam
push
sbb
xor
inc
aaa
jle
xchg
mov
cmp
dec
push
orl
out
jnp
sub
in
jl
mov
xlat
inc
ret
push
mov
shlb
and
iret
sbb
push
push
push
cmp
pop
xor
scas
mov
sbb
aas
adc
das
and
jl
or
dec
xchg
cmp
dec
and
xchg
ljmp
dec
aad
mov
test
aaa
sahf
dec
mov
cmp
jle
fisttpl
test
inc
push
add
dec
jns
pop
out
sbb
pusha
scas
dec
daa
push
mov
imul
mov
stos
fiaddl
lea
lock
das
mov
inc
add
dec
sub
jne
inc
mov
mov
ss
sbbl
fcmovne
adc
fisttpl
dec
xchg
pop
push
test
imul
pop
loop
xchg
in
dec
cmp
xor
clc
jne
shrl
cmpsb
sarl
push
fwait
outsb
jle
xchg
push
jmp
into
xchg
mov
inc
jle
icebp
inc
mov
xor
fbstp
rcrl
loop
fcoml
adc
mov
mov
lahf
and
push
out
cmpsl
and
mov
push
lret
jae
bound
jl
das
lock
mov
cmp
shlb
add
jecxz
push
inc
jl
mov
int3
sarl
sbb
lea
lret
mov
cmp
das
insb
pop
adc
sub
push
push
add
and
push
lods
aas
add
cmp
gs
scas
aam
mov
adc
lfs
jae
mov
xor
inc
jb
and
jl
test
mov
cmc
popf
int
jmp
arpl
add
loope
sahf
cmp
je
icebp
xor
cmpsl
jo
pop
inc
jle
incl
mov
inc
cmpsb
fidivrl
sub
movsl
out
pop
or
add
or
xchg
stc
mov
int3
pop
in
aad
mov
pushf
daa
fstpl
mov
push
andb
lock
test
mov
dec
jg
jmp
cmp
mov
fimull
jmp
lds
xor
xor
aad
js
dec
cwtl
cltd
fsubr
iret
dec
mov
inc
adcb
lret
xor
bound
sbb
inc
loop
push
add
fs
sti
das
jmp
pop
xchg
aaa
mov
mov
shlb
arpl
stos
jb
in
sahf
out
jg
out
pop
pop
out
cmpsb
fidivrs
bound
sti
sub
mov
mov
cmp
mov
daa
push
popa
adc
push
sbb
adc
xchg
clc
sar
mov
xchg
xor
adc
inc
mov
iret
push
mov
mov
repnz
int3
rorb
mov
xor
test
mov
mov
je
inc
jle
jge
jg
out
mov
mov
hlt
lret
cmc
outsl
sarl
xchg
bound
movsb
dec
sbb
jge
test
xchg
aas
adc
sub
inc
dec
popl
cmp
jge
out
insb
pop
adc
sub
fsubl
aaa
push
lods
mov
cltd
add
pop
mov
mov
dec
in
sahf
push
inc
mov
jg
pop
pop
or
and
push
jle
add
xchg
push
xchg
mov
cmpsb
ljmp
xchg
push
lea
lock
jnp
adc
sub
mov
sbb
xor
outsl
aam
xchg
iret
lds
es
fs
dec
push
sub
subl
push
fadds
pop
adcb
dec
mov
mov
dec
popf
mov
sub
xor
inc
movsb
inc
cmp
test
xchg
sub
in
jns
stos
xchg
div
mov
je
stos
ret
xchg
cltd
adc
lahf
dec
ljmp
sbb
out
sbb
push
jo
or
or
mov
add
cmpl
mov
inc
movups
mov
es
sub
clc
and
lods
lock
dec
fs
and
mov
insb
dec
jnp
out
aaa
fimull
add
andl
jb
jae
push
mov
ret
mov
mov
cmp
aad
out
push
sub
and
ds
mov
dec
fstps
push
andb
int
mov
push
add
movsl
test
sbb
dec
and
test
mov
daa
dec
add
cmpsl
loop
inc
push
sub
lret
or
fbld
sti
push
ss
mov
mov
dec
repnz
popf
mov
lds
add
push
cli
scas
mov
repnz
sti
jp
pop
push
push
inc
sub
popf
add
mov
dec
or
sti
xchg
pop
jmp
dec
xchg
mov
mov
dec
sti
inc
in
fldenv
cli
xor
dec
mov
pop
push
or
mov
mov
dec
adc
mov
fcomi
hlt
push
dec
aam
ds
pop
fcoms
jp
inc
gs
ss
fnstcw
pusha
dec
dec
ret
cmp
into
int
cmc
dec
in
push
dec
cmp
jo
lds
adc
or
jae
sti
dec
lods
imul
mov
jbe
mulb
shl
sub
dec
dec
push
xchg
adc
insl
dec
sub
sarb
dec
rorl
daa
lods
mov
lahf
xchg
int3
pusha
leave
or
pop
xchg
bound
pop
cltd
sbb
lahf
dec
push
or
in
imul
pusha
jg
cmp
xor
and
inc
and
dec
pop
ds
lcall
pop
iret
jnp
icebp
jno
fnstsw
cmp
leave
fst
xchg
dec
pop
sti
dec
push
ss
ffreep
add
inc
adc
sbb
push
cltd
mov
sub
pop
lea
testb
fistpll
mov
gs
int3
vhaddps
data16
repnz
adc
add
or
inc
pop
mov
jno
mov
cmp
cwtl
inc
ret
jg
adc
lods
push
bound
or
adc
jle
pop
mov
add
add
div
jb
out
cmp
dec
mov
dec
add
cmp
push
mov
pop
andb
shll
adc
xchg
popa
push
cmp
mov
inc
xchg
decb
scas
dec
jle
jmp
push
stos
inc
adc
xlat
pop
popf
pop
test
push
and
aas
jl
fdivr
ljmp
sbb
and
push
movsb
cmp
hlt
xor
das
and
cmpsb
adc
dec
aad
hlt
pop
inc
leave
nop
jle
inc
pop
enter
push
cmp
dec
jb
inc
aas
inc
and
xor
push
jo
out
jge
push
out
in
leave
daa
shl
dec
adc
jl,pn
and
inc
cmpsl
jle
sbb
insb
iret
mov
iret
pop
jbe
dec
pop
cmc
add
jle
insb
pop
mov
sub
out
xchg
fwait
sub
jg
push
or
icebp
mov
stos
js
mov
mov
inc
sub
xlat
mov
mov
mov
mov
leave
dec
mov
adc
int
pop
imul
mov
xor
sub
icebp
and
mov
cmp
cs
ror
mov
fstl
shll
inc
test
pop
insb
push
orl
in
mov
pop
out
inc
mov
mov
imulb
push
in
xchg
out
data16
dec
dec
mov
jns
xor
bound
les
ja
push
dec
mov
mov
dec
xchg
inc
sti
insb
or
sub
lcall
pop
push
push
jbe
xchg
xor
insb
mov
mov
dec
sub
xchg
in
pop
inc
dec
mov
mov
dec
xor
mov
dec
das
sub
sarl
or
dec
sbb
push
cld
adc
pop
mov
bound
imul
loope
cs
adc
pop
or
lcall
push
fstpl
push
adc
adc
mov
imul
xchg
mov
push
sbb
mov
push
sub
push
mov
pop
out
outsb
leave
sbb
popa
nop
rolb
push
mov
lea
inc
pop
hlt
lods
sahf
add
inc
xor
mov
fists
mov
push
mov
cs
jl
mov
popa
inc
add
pushf
inc
jp
jnp
push
adc
pusha
cltd
imul
pop
sahf
out
cmp
inc
inc
into
jl
dec
pop
cmp
js
aam
lea
arpl
pop
adcb
xor
push
loopne
sbb
fdivrl
mov
pop
fisubs
and
pop
jbe
ss
das
into
sub
pop
inc
pop
dec
jno
jno
dec
fldl
mov
dec
ds
pop
aam
push
inc
jg
cmp
hlt
pop
lret
dec
pop
jmp
test
adcl
cmc
sbb
dec
bound
xchg
jp
popa
dec
dec
mov
loop
cmp
jle
push
xor
xor
test
hlt
and
daa
jl
inc
push
mov
sub
fdivrl
push
das
les
jmp
add
in
pusha
mov
stos
or
cwtl
add
jno
jl
push
and
ret
out
cmp
jo
fimull
mov
in
divl
lahf
mov
fdiv
mov
fcomps
in
mov
push
int
push
lods
dec
add
cli
cmp
filds
in
js
ja,pt
subb
les
push
or
loopne
mov
rcrb
imul
in
inc
ds
or
mov
inc
fcmovbe
add
outsb
fdivl
cmp
test
cmp
mov
daa
mov
xor
imul
dec
es
mov
loop
push
mov
pop
xchg
rcrb
sbb
out
gs
ss
outsb
jbe
in
hlt
jl
mov
push
leave
rcrl
inc
cmpsb
fcom
or
jmp
dec
inc
pop
lahf
push
xor
hlt
in
clc
jge
adc
sar
jns
xchg
xchg
jmp
movsb
in
outsl
push
cmpsb
fdivrl
mov
jg
imul
iret
and
push
insl
dec
push
sbb
jle,pn
mov
xchg
fistps
cmp
jl
cld
dec
idivl
lea
push
inc
cmp
adc
mov
aaa
sub
cmp
jle
dec
mov
mov
dec
add
movsb
inc
mov
mov
ret
mov
lods
push
adc
aad
sub
in
xchg
out
cli
icebp
mov
rorb
adc
jbe
dec
or
bound
xor
sbb
pusha
dec
fimull
push
lds
sub
xor
insb
or
dec
mov
push
adcb
insl
xchg
out
ds
pop
xlat
test
mov
vpcmpgtd
pop
xchg
mov
dec
push
adc
dec
dec
call
dec
cmc
sbb
sahf
jae
sub
inc
xchg
dec
std
jge
add
mov
mov
stc
hlt
xor
or
test
pushf
mov
bound
pop
fnsave
dec
dec
xchg
movb
dec
test
mov
arpl
inc
outsb
dec
pop
push
add
mov
test
xchg
or
inc
pop
dec
insl
jle
dec
add
dec
lret
fmull
shlb
sbb
inc
inc
push
add
scas
clc
push
push
popa
and
call
or
fimuls
mov
dec
xchg
stos
gs
test
mov
sub
popf
push
cmp
das
fdivrl
jnp
and
lret
add
mov
and
lods
inc
iret
jl
xchg
dec
adc
in
lods
jne
cwtl
inc
ret
movsb
clc
cli
push
mov
pop
jl
jbe
xchg
and
pop
push
shll
sub
lods
gs
push
test
push
push
add
jle
fiadds
pop
dec
bound
imul
test
xchg
cmp
das
or
daa
fisttps
jle
lea
into
pop
jl
add
popa
sub
mov
lods
mov
push
dec
pop
inc
pop
shlb
or
jle
xor
addr16
add
fmul
test
sarl
sub
inc
cli
loop
and
je
pop
jo
sub
aam
push
dec
xor
xchg
bound
adc
jns
arpl
pop
dec
lcallw
pop
pusha
lret
mov
jg
dec
cmp
outsl
xchg
pop
xor
xlat
shlw
mov
or
daa
lds
cs
jg
add
push
neg
push
adc
jmp
xor
xor
out
or
jbe
fdivrl
negb
add
stos
jg
fcoml
mov
arpl
jb
cs
fbstp
sub
jle
inc
xchg
sub
mov
xchg
scas
push
scas
mov
add
imul
xbegin
outsl
dec
sti
cmpsb
jb
stos
mov
push
adc
mov
fcmovne
xlat
dec
stc
fcomps
and
push
or
outsl
adc
sub
fisttpl
inc
test
push
stc
or
xor
push
add
xchg
push
loopne
stos
and
test
cmpsl
vprotw
dec
inc
je
jle
das
mov
dec
test
sub
stos
imul
daa
sub
adc
dec
cmpsb
out
xor
dec
addb
lea
fadds
push
xor
push
pusha
dec
pop
mov
das
sbb
outsb
pop
jp
dec
je
insb
fldt
sub
sub
dec
adc
ljmp
dec
inc
jnp
mov
sub
push
adc
ficomps
dec
decb
dec
fbstp
sbb
lahf
pop
adc
push
push
xchg
sub
sti
push
dec
xor
or
sbb
cmpsl
push
int
lds
iret
out
pop
adc
loope
sarb
iret
mov
outsb
cbtw
mov
into
add
inc
inc
fwait
jae
jge
fistpll
and
mov
mov
cld
cld
dec
adc
test
xchg
mov
mov
mov
pushl
adc
dec
movups
cmp
mov
out
pop
fst
jp
dec
sbb
enter
sahf
dec
clc
stc
dec
popa
mov
imul
sar
dec
gs
dec
cmp
push
lods
or
mov
push
je
sbb
movb
dec
xor
pop
sub
sbb
fldenv
int3
dec
xor
dec
shl
stos
shll
fs
les
cmp
lds
fmull
mov
arpl
mov
dec
imul
adc
inc
xchg
fisttps
adc
loop
pop
insl
mov
aaa
iret
jae
push
addr16
dec
sub
mov
add
adcl
loopne
cs
dec
sub
insb
push
fsubrl
dec
insl
sarb
lods
sarl
dec
clc
or
int3
fistps
dec
rcrl
aaa
adc
xor
pop
dec
insb
pop
mov
xor
dec
ss
mov
aaa
inc
mov
ds
jl
int3
jle
pop
jo
jg
adc
lods
push
sub
sub
es
movsb
in
aam
imul
lret
stos
stos
mov
push
push
cltd
push
inc
mov
cwtl
pop
mov
hlt
or
ret
bound
or
pop
cmp
dec
cltd
loop
lock
xor
adc
movl
adc
xchg
addb
sbb
dec
sbb
ds
mov
mov
repz
mov
jle
fcomps
push
lret
mov
cmp
and
cmpsl
dec
sub
out
xchg
xor
into
sub
aaa
into
sub
in
sub
jmp
subb
test
movsl
outsl
rcll
xor
fisttpll
and
jl
and
xor
bswap
sbb
stc
cmpsl
cld
dec
fnstcw
fsub
add
out
movsb
stos
or
daa
cmp
mov
repnz
xor
push
inc
ljmp
jle
sub
iret
jl,pt
enter
gs
out
mov
in
cmc
dec
arpl
or
adc
daa
inc
mov
and
jge,pn
mov
mov
cwtl
fiaddl
dec
ja
jg
mov
add
pop
or
add
fs
imull
leave
daa
pop
dec
cmp
inc
sti
dec
insb
push
mov
mov
je
aaa
inc
ret
fmull
dec
push
dec
sarl
lock
sbb
test
cmp
cmpsl
xlat
cmc
psubd
xor
movsb
push
push
into
ljmp
jl
inc
lods
stos
dec
mov
adc
scas
stos
dec
movsl
pop
pop
cmp
iret
xchg
mov
aaa
push
mov
xor
or
test
push
dec
cmp
test
clc
dec
es
daa
mov
in
pop
imull
sub
or
mov
jg
xchg
test
mov
aam
hlt
xchg
cmc
sub
outsl
inc
mov
xlat
and
jl
je
ljmp
inc
into
fidivrs
inc
dec
sahf
mov
enter
xor
femms
les
das
adcl
mov
dec
push
xor
inc
inc
shrb
pop
add
dec
and
sub
jge
adc
mov
dec
jg
in
inc
test
jle
jle
mov
dec
lods
sub
sti
fcomip
fstps
nop
out
out
push
pop
loope
jecxz
sub
inc
dec
mov
fwait
mov
push
fistl
ss
pop
pop
push
dec
and
dec
jnp
insb
repz
enter
addr16
bound
pop
loope
mov
popa
in
orl
mov
dec
scas
sub
testb
nop
cwtl
xor
pop
adc
rorb
jbe
or
inc
inc
and
jp
pop
out
nop
xchg
ja
popa
adc
xlat
arpl
pop
xchg
mov
pop
jb
les
clc
mov
ljmp
mov
in
sub
lock
inc
int3
rclb
jae
mov
in
dec
repnz
dec
fmull
cmc
xchg
jno
pop
les
fldl
jle
jecxz
fimuls
add
decb
pushf
jmp
out
or
sbb
cwtl
repnz
dec
cmp
js
pop
lret
into
testl
sbbl
sbb
fwait
sar
cmp
sbb
sbb
pop
int3
or
enter
inc
test
cwtl
in
mov
lods
lcall
dec
mov
pop
dec
xchg
push
jb
dec
loope
dec
mov
rcrb
and
jbe
inc
jns
jg,pt
fldl
into
test
test
pop
xor
pop
jne
sub
out
push
mov
mov
movsl
sub
loop
push
jle
sbb
fstps
adc
jp
fmuls
cwtl
outsl
lret
push
sub
mov
inc
dec
xor
in
sti
aam
out
call
mov
fmull
stos
mov
pop
dec
xchg
inc
cmp
fs
pushf
insb
rcll
cmp
out
xchg
fistl
sub
les
popa
clc
call
xor
xchg
scas
or
stos
movsl
ret
xchg
sti
dec
lret
cmp
popf
pop
inc
adc
lret
out
add
in
xchg
mov
mov
mov
or
mov
inc
leave
adc
lret
repz
pop
sub
pusha
mov
adc
adc
sub
mov
pop
add
shrl
sbb
jge
mov
test
jp
cmp
xchg
pop
lea
jns
mov
jl
sti
out
xor
dec
out
xchg
pop
cmp
popa
popf
ret
es
sub
xchg
or
jno
mov
jmp
pop
outsb
int3
pop
popf
jle
jbe
sahf
mov
push
mov
fsubrl
repnz
pop
outsb
ljmp
dec
rcrl
and
mov
dec
pushf
aas
lret
sub
jns
das
dec
loop
pusha
movsb
jbe,pn
xchg
in
mov
mov
lock
jecxz
daa
aam
cmp
mov
and
pop
inc
pop
mov
dec
lds
dec
inc
or
push
and
push
pop
pop
dec
push
mov
inc
into
mov
and
mov
sub
xor
cmp
pop
cmp
movsl
xor
iret
or
cmp
out
int
jl
stc
inc
mov
mov
xor
xchg
adc
cs
and
add
cli
or
dec
jb
fcomps
out
sub
dec
fiaddl
repz
dec
shlb
push
adc
sub
sbb
scas
jg
daa
outsb
add
inc
lea
iret
jns
hlt
mov
lret
popf
mov
aas
pushf
decb
fists
xchg
cmc
inc
stos
push
in
push
xchg
ds
and
ds
add
cmpsl
mov
ds
jbe
fidivl
jb,pn
arpl
cmpsl
iret
lcall
insl
dec
cmp
add
mov
pop
fcomps
and
cmp
dec
or
mov
jae
jl
ret
mov
jp
push
aaa
fs
mov
push
cmp
mov
push
jp
scas
lods
aam
loopne
pop
dec
xor
jne
jmp
into
adc
aaa
nop
mov
add
jg
out
sti
pop
xor
idivb
ds
push
xor
mov
mov
mov
dec
xlat
cmp
adc
xchg
sbb
mov
push
xor
sti
rcll
fwait
xlat
subl
in
pop
lea
xchg
xor
aam
dec
mov
test
push
jno
movsl
into
aas
jl,pn
mov
out
daa
jle
loopne
gs
dec
inc
and
mov
ret
mov
ss
out
mov
lret
ds
iret
jge
push
mov
addb
sub
or
into
push
cs
jg
mov
push
mov
aas
sub
cmp
mov
pop
jmp
mov
ficompl
inc
push
push
and
aad
xchg
sahf
lret
roll
cmp
pop
pushf
cmp
push
xchg
inc
mov
cmpsl
add
cs
aam
jle
das
dec
mov
cmpsl
out
jle
int3
idiv
cmp
imul
add
or
jmp
movsl
jae
lods
ret
add
dec
dec
js
ds
jecxz
xchg
fnstsw
pushf
sahf
jnp
xlat
jp
fiaddl
xor
dec
stos
cld
ret
mov
or
jle
insl
mov
loope
sbb
pop
mov
not
push
mov
fdiv
cmpsb
psubusb
adc
dec
push
sub
xor
jae
mov
jle
add
cmp
xor
push
push
outsl
dec
insl
mov
inc
dec
rcrl
xchg
and
js
lock
mov
dec
into
mov
mov
sbb
push
sahf
hlt
and
mov
push
int3
orb
or
dec
cmp
sarl
subb
int
xor
shr
dec
push
cmpsb
mov
dec
cld
dec
out
inc
adc
xchg
les
add
jmp
xchg
dec
scas
fiaddl
bound
or
cmc
dec
xchg
pop
add
xor
js
dec
pop
les
mov
movsl
xor
scas
cmp
cmc
insl
add
xor
and
pop
in
jl
imul
lds
iret
loopne
sub
sbb
jmp
push
mov
mov
cmp
lock
inc
or
jae
xchg
mov
and
sbb
xor
push
sbbl
jg
enter
scas
xchg
pop
add
mov
mov
dec
dec
andb
mov
call
aam
dec
int3
pop
inc
mov
push
pop
pop
call
dec
dec
dec
stc
jne
scas
roll
dec
mov
xchg
movsl
mov
pop
adc
sbbb
ds
mov
xchg
gs
mov
lret
cmp
dec
fisttpl
movsb
pop
cld
cmpsb
sub
cmc
ror
push
cmp
xchg
cmp
mulb
push
dec
mov
popf
daa
inc
in
imul
xor
ljmp
push
mov
iret
and
test
sbb
jg
mov
xor
test
and
call
lret
es
inc
xchg
lds
fsubrs
mov
dec
inc
xchg
mov
xchg
dec
fs
fldcw
sbb
cli
sbb
push
dec
cld
or
fimuls
jge
jmp
cmp
leave
add
mov
cmpsb
jo
call
cmc
inc
cmp
movsb
xor
std
aad
xchg
jne
jbe
dec
test
mov
pop
dec
dec
mov
aaa
inc
in
dec
js
push
loope
cli
jl
repz
cwtl
dec
add
mov
and
movsl
push
add
push
mov
fs
sub
jno
sbb
enter
pop
mov
lcall
pop
jmp
xchg
sbb
es
mov
cli
cwtl
dec
popf
cmp
dec
clc
sub
cmc
mov
data16
fimuls
setnp
cmp
mov
daa
jno
add
in
shl
pop
dec
cmp
outsl
scas
dec
mov
jl
and
dec
push
dec
icebp
in
repnz
push
jle
fwait
dec
push
negl
repnz
jl
add
cld
cmp
jle
ja
mov
mov
into
cmc
or
xchg
jle
stc
movsl
scas
outsb
jne
adc
cs
mov
lock
push
in
or
test
mov
lea
add
aam
dec
js
cltd
popf
hlt
lahf
dec
xor
test
inc
or
cmp
fcompl
fnsetpm(287
jl
test
cli
call
stos
dec
cmpsb
mov
hlt
ja
mov
xchg
xor
cmc
inc
xor
in
mov
insl
dec
mov
rolb
jno
dec
test
cli
dec
rclb
sub
in
inc
jle
adc
xor
fnstcw
dec
scas
mov
rorl
xchg
or
xor
ret
aad
movsl
iret
push
enter
sub
dec
sbb
xchg
push
test
dec
mov
stos
pop
pop
cmp
nop
mov
adc
jns
adc
jnp
add
ljmp
jle
inc
arpl
loope
xor
lods
push
inc
jo
mov
mov
jp
dec
push
dec
arpl
mov
and
sub
cmpl
add
inc
push
sahf
push
jg
jo
push
add
xchg
push
neg
loopne
pusha
sub
in
dec
inc
mov
jg
dec
mov
cli
adc
jle
xor
mov
mov
gs
out
je
imulb
dec
cmp
roll
sub
pop
mov
pusha
int
adc
mov
jno
mov
shl
and
sbb
push
cmp
lods
xchg
cmp
pop
movsl
or
xchg
addr16
sub
push
jl
pop
data16
mov
jbe
sub
jns
cltd
xchg
inc
rolb
repz
push
adc
into
out
jl
mov
inc
xchg
fisubrl
mov
xchg
cmp
push
lods
lods
into
enter
es
mov
shlb
cmc
mov
mov
mov
jl
add
xor
xor
add
pusha
inc
sub
pop
and
test
dec
dec
ficompl
jmp
mov
or
mov
mov
xchg
cli
fwait
lods
daa
icebp
inc
fcmovnb
mov
sub
and
add
or
aam
adc
lcall
inc
dec
movsl
sub
jg
xchg
mov
push
dec
xlat
lods
stos
jg
jl
mov
mov
add
sub
out
lea
out
dec
call
dec
iret
cmp
aas
or
mov
push
aad
scas
and
test
inc
push
fisttpll
imul
stc
sub
pop
push
pushf
ss
leave
bound
pop
mov
push
jg
pop
push
mov
movsl
sarl
adc
std
dec
xor
mov
add
ss
or
mov
dec
ja
jecxz
mov
fidivrs
mov
mov
out
leave
movsb
pop
dec
pusha
pop
lods
cmp
rol
sbb
mov
js
lret
dec
fistpll
out
repnz
add
icebp
pop
pusha
mov
dec
mov
ds
dec
xor
cltd
scas
mov
out
inc
inc
xchg
frstor
pop
inc
popa
jno
in
lds
int3
aaa
dec
inc
mov
add
sahf
add
dec
int
jae
mov
and
lahf
mov
sub
pop
inc
dec
andl
dec
in
xchg
inc
cmp
cmpsw
imul
jge
jle
pop
dec
cmp
adc
adc
jl
xchg
inc
lods
out
xchg
mov
xor
and
inc
sub
pop
loopne
les
sbb
mov
stos
scas
lret
out
and
inc
and
pusha
dec
and
out
sub
fstpt
push
dec
bound
inc
sbb
ret
cmp
xchg
and
test
jle
je
dec
push
shll
mov
dec
out
cmpsb
xlat
adc
lcall
mov
push
ds
pusha
fs
pop
sbb
jp
shr
loope
pop
dec
pop
jns
jb
or
cmp
push
les
dec
ja
in
cmp
and
cmpsb
or
sbb
xchg
into
out
adc
mov
or
out
or
inc
jle
adc
push
sahf
pop
sub
adc
inc
cld
out
lret
add
outsb
jl
daa
call
lcall
rorb
sbb
int
jl
inc
popf
shl
xor
data16
xor
daa
pop
and
das
aaa
das
jle
sbb
jl
roll
out
xor
cmp
xor
stc
push
adc
inc
jg
or
in
pop
mov
pop
cmc
mov
xchg
push
dec
adc
adc
inc
xchg
fimull
sub
jl
pop
aaa
push
jle
sarb
ret
int3
das
mov
mov
ljmp
dec
jmp
jl
mov
inc
js
cmp
popf
mov
in
das
cld
push
mov
or
in
push
xchg
dec
jg
dec
cld
imul
adc
sub
arpl
jmp
hlt
jle
push
jle
jge
adc
and
dec
mov
jg
or
not
and
push
cmp
dec
sbb
xlat
dec
int
outsb
cs
ds
fwait
mov
cmpsb
adc
and
jb
dec
and
jge
push
cmpb
sub
dec
mov
mov
jmp
pushl
xor
sbb
xchg
fnstcw
mov
push
popa
rcrb
sti
or
dec
jg
fiaddl
jo
bnd
xchg
lret
mov
test
iret
dec
sub
sub
inc
fmul
adc
inc
icebp
bnd
mov
and
rolb
inc
test
call
out
cmpl
bound
dec
bound
push
cmp
iret
inc
in
and
movsl
jmp
and
in
call
mov
scas
dec
xchg
xor
and
or
jl
out
jecxz
lock
pop
jnp
xor
stos
lods
cmp
dec
mov
repz
data16
xor
jle
pop
adc
cmpsw
and
xchg
addr16
xlat
xor
mov
insb
mov
or
cmp
cli
lret
xor
fsubrl
push
sbb
pop
pushf
mov
mov
hlt
aam
add
jmp
iret
jl
jns
dec
movsb
sbb
and
into
jp
jmp
pop
cmp
cwtl
jle
mov
mov
in
add
jo
dec
or
xchg
ljmp
mov
cmc
loop
imul
outsl
mov
jbe
in
xor
sbb
nop
dec
pop
dec
pop
std
mov
scas
outsl
std
or
stos
fidivs
and
cmp
mov
pop
push
jae
fnstsw
stc
in
pop
shll
outsl
sbb
mov
dec
out
xchg
fistpll
jp
lods
push
and
icebp
add
iret
fwait
lods
cmc
inc
jp
dec
iret
cmp
and
dec
mov
sarb
sbb
sub
jo
xchg
dec
pop
cli
jmp
sbb
clc
mov
cmpsb
out
sbb
rclb
into
nop
push
bound
add
pop
add
cli
fs
pop
mov
and
cmp
dec
fwait
cmp
inc
push
cwtl
dec
jle
push
adc
dec
jb
and
fwait
or
ja
cmp
jmp
xchg
in
dec
mov
fcoml
push
rol
ljmp
mov
xchg
push
sbb
jle
cmp
scas
cmp
in
ljmp
and
add
xor
push
jge
jle
mov
dec
decb
xchg
mov
mov
pushf
enter
jle
gs
jno
fbstp
dec
inc
je
in
xor
xchg
or
lret
dec
inc
shr
and
mov
push
inc
mulb
sub
mov
xor
sub
cmpsl
lods
sbb
add
cmp
cmp
out
daa
stc
and
or
xor
push
cmc
iret
scas
into
push
pusha
sub
pop
cmp
dec
scas
insb
das
xlat
shr
dec
dec
push
xchg
in
push
out
neg
roll
mov
xchg
je
add
mov
repz
push
xor
movsb
dec
and
daa
dec
out
sub
dec
dec
push
add
adc
jno
dec
or
ret
ja
insl
dec
mov
sub
xchg
xor
mov
in
or
jle
mov
cs
xchg
push
adc
aam
dec
cmp
dec
pop
cmpsl
push
mov
adc
in
and
nop
pop
mov
pop
jnp
imul
mov
adc
pop
setp
jbe
adc
ljmp
pop
pop
jno
iret
dec
push
daa
shr
dec
push
imull
cmovge
jbe
dec
xor
sti
cli
icebp
dec
movsl
aas
xor
leave
dec
adc
inc
adc
scas
aad
xor
adc
dec
imul
psubd
jno
out
sub
insb
xor
or
dec
stos
in
pop
fcoms
dec
dec
cmp
jae
inc
xchg
dec
adc
into
in
ljmp
fwait
push
jg
shrb
mov
dec
fldl
adc
es
jp
ja
xchg
or
push
or
pop
push
iret
jmp
outsb
call
mov
pmaxub
xor
js
and
into
popf
pop
roll
das
xor
cs
inc
enter
mov
jbe
xchg
xor
inc
out
inc
imul
dec
xchg
sub
inc
cmpsl
pop
sbb
dec
mov
fwait
xchg
add
movsl
clc
mov
arpl
dec
or
inc
nop
dec
lahf
jge
add
sbb
lock
adc
cmp
loop
xchg
add
dec
cmp
xor
test
dec
jno
out
shlb
pop
mov
dec
push
je
loop
std
lret
xor
and
mov
lret
cmpsl
mov
dec
rclb
pusha
incb
js
dec
jle
jo
add
push
dec
xor
mov
mov
cmp
iret
cmp
dec
xchg
sub
stos
and
test
movsl
jp
inc
dec
rcrl
hlt
xchg
lds
jne
pop
xchg
lea
fadd
ret
cwtl
sub
or
lods
outsl
stc
xlat
and
push
pop
ret
xlat
aaa
pop
jp
dec
mov
nop
jb
adc
hlt
dec
into
in
scas
cwtl
movsb
cs
or
iret
jbe
stos
cs
cmp
adc
imul
xor
movsb
leave
fisttps
adc
xchg
or
int3
add
out
mov
push
jbe
and
push
jb
dec
dec
rcl
aad
daa
jg
mov
xchg
sbb
xor
mov
and
std
jno
inc
adc
mov
add
mov
cmp
daa
cmpsl
jbe
push
cmpl
dec
sub
ret
add
add
add
sbb
inc
lds
test
push
dec
push
subb
popa
outsb
or
cs
inc
lret
fsubl
ficoml
mov
cmp
cmpl
mov
or
ljmp
fists
int3
mov
sub
loop
movsl
pop
pop
mov
add
push
jg
adcl
sub
cwtl
mov
mov
je
das
rorb
xchg
cmp
jbe
aad
push
xchg
rol
insl
dec
push
shll
cmp
push
mov
dec
push
bound
out
cld
repz
cltd
sub
loopne
mov
cmp
cmp
jg
xchg
scas
and
xor
xchg
mov
mov
push
outsl
or
insl
rorl
cld
mov
loope
jle
push
fwait
push
cmp
xor
dec
stos
and
and
leave
pop
aas
jg
mov
cmpsb
mov
push
sub
cmc
lret
xchg
outsl
int
jg
adc
jl
pop
in
jae
push
scas
fstl
repz
xor
xchg
lods
jl
jno
or
out
pop
shll
pop
mov
aad
dec
pop
add
mov
aaa
clc
xchg
rcll
call
fwait
xchg
dec
xchg
aas
jle
int3
fcmovnu
hlt
pop
insb
xchg
mov
pop
cmp
popf
adc
mov
fmull
shr
add
sbb
adc
movsl
pop
pop
movsl
jle
movsl
lds
mov
xor
aas
dec
mov
or
stos
jbe
sti
dec
inc
lock
outsb
xchg
movsl
out
or
call
jnp
cs
xor
inc
test
sub
sub
leave
push
pop
xchg
xchg
mov
jp
insl
jl
std
mov
insb
lods
mov
sub
push
sti
jnp
xor
or
sub
and
and
stos
popf
and
cmpsb
adc
adc
sbb
push
mov
adc
or
jle
xchg
pushf
loop
aaa
xchg
jle
pop
push
cmp
jg
ficoml
popl
xchg
or
iret
mov
lahf
inc
std
xchg
je
mov
jns
repz
sub
add
inc
cld
jo
pop
sbb
push
inc
scas
and
jns
dec
ret
push
rol
push
mov
xor
add
jo
mov
mov
mov
aas
dec
imul
test
dec
jecxz,pt
and
sub
lock
testb
iret
mov
jecxz
xor
jns
out
inc
ret
stos
push
shlb
push
and
cmp
pop
dec
cmc
and
loopne
add
imul
int
dec
rcll
ss
sub
dec
js
sub
imul
add
xchg
cmp
mov
mov
inc
rcr
add
dec
repnz
adc
dec
popa
mov
xor
push
fstl
shr
stos
xor
aaa
loop
add
je
push
add
pop
xor
push
ljmp
dec
cmp
jmp
mov
dec
dec
push
sub
iret
loopne
mov
cmc
jb
inc
aad
fdivl
movsl
inc
adc
xlat
sbb
dec
mov
mov
push
push
sbb
bound
dec
loop
movsb
adc
hlt
bound
cli
cmp
icebp
mov
movsl
push
in
popf
jle
mov
int3
lea
addr16
shll
add
dec
aam
iret
lret
push
pop
push
inc
mov
out
insl
jle
jae
pop
pop
notl
mov
cli
jp
fs
or
fnop
out
sbb
jle
push
in
inc
icebp
pushf
and
cmp
mov
jmp
dec
and
out
cmp
inc
out
push
mov
sub
das
mov
inc
jle
jo
jp
mov
dec
mov
in
sub
inc
js
fcomp
jl
xchg
mov
insb
das
iret
in
jl
push
sbb
pop
pop
je
iret
xor
fcomps
push
iret
and
es
mov
out
cmpsl
dec
or
orb
push
jg
push
iret
mov
iret
fwait
test
cmpsb
testl
xchg
mov
push
pop
outsb
sti
adc
cmp
push
sub
clc
pop
inc
test
push
mov
movq
lock
out
mov
inc
or
mov
mov
jns
das
dec
and
jecxz
lret
into
pop
sti
dec
repz
push
and
mov
and
mov
std
out
jno
mov
test
push
rclb
xor
fwait
into
std
loop
popf
inc
rorl
or
ss
xchg
dec
jmp
or
arpl
shl
push
adc
fimuls
filds
into
fwait
add
fcmovne
push
ds
dec
data16
jo
jb
inc
call
pop
pop
in
push
mov
jne
and
push
mov
std
mov
scas
addl
sbb
xchg
dec
pop
mov
add
lret
dec
repnz
bound
adc
sbb
iret
insb
ss
ret
aas
into
insl
adc
sub
shrb
jecxz
sub
out
mov
inc
push
out
cli
pop
mov
sub
xor
out
pop
pcmpeqd
pop
js
dec
pop
mov
and
loop
add
push
add
push
rcll
je
jae
inc
adc
and
mov
inc
jbe
sub
inc
sbb
mov
mov
clc
outsl
insb
mov
andb
xlat
and
xor
xchg
ja
js
xchg
cmp
fidivs
fwait
rorb
test
cs
jl
in
jg
mov
sbb
pop
inc
cmp
push
dec
shlb
test
xor
stos
mov
insl
sub
push
lcall
rorb
in
test
daa
aam
or
jb
into
cltd
inc
in
pusha
fmuls
sarb
inc
lret
add
aaa
cmp
outsl
dec
in
mov
and
and
jle
jae
jle
fistl
dec
xor
movsb
insl
or
inc
add
cmc
mov
out
dec
lods
jl
jmp
pop
jle
cmp
xchg
fimuls
mull
test
enter
in
repnz
sub
adc
push
sbb
add
pop
outsb
lock
jbe,pn
insb
loope
dec
lcall
sub
sbb
and
ds
mov
fimull
jmp
icebp
hlt
jp
sub
lods
movsl
int3
cltd
lret
rol
jnp
inc
out
adc
dec
push
repnz
das
pop
cmpsb
xor
stos
xlat
orb
mov
js
mov
dec
movsb
adc
movsl
inc
pop
in
dec
fsubrl
jle
jne
mov
mov
xor
mov
rolb
dec
jge
incb
cmp
inc
jno
xchg
inc
data16
adc
mov
dec
push
and
mov
mov
sub
inc
fwait
shll
movsb
add
sub
repz
iret
sbb
mov
mov
xchg
stc
adc
dec
mov
adc
bound
icebp
aas
std
mov
arpl
dec
fmuls
mov
mov
xchg
pop
sub
or
dec
sub
sub
dec
adc
ljmp
adc
movsl
push
push
outsl
dec
nop
into
cmp
rorl
aad
mov
push
dec
push
inc
mov
int
popf
dec
in
jle
mov
push
adc
dec
stos
mov
push
xorl
and
sbb
ret
and
lods
jo
rcl
cld
dec
or
test
cmp
cltd
xchg
daa
jo
push
lret
dec
repz
lock
icebp
dec
dec
adc
pop
mov
orb
push
or
ret
stos
ror
mov
add
cs
push
test
out
adc
and
fdivrl
std
or
xor
cmp
fdivrs
test
mov
aam
mov
lock
xchg
into
pop
dec
bound
pusha
movb
pop
divl
pop
sbb
inc
mov
inc
add
and
jg
inc
fiadds
popa
or
jb
popf
mov
push
jge
push
stos
and
sub
jmp
mov
adc
gs
cmp
inc
jl,pn
outsb
dec
rolb
test
sbb
xor
cs
lahf
out
sub
scas
adc
out
shll
or
cmc
insl
ja
ret
out
mov
js
aaa
jg
out
gs
lret
mov
push
sti
cmpsl
xor
pusha
sub
jbe
sahf
jb
add
aad
inc
and
dec
iret
inc
hlt
pop
mov
enter
jecxz
mov
xor
idivl
pop
push
loopne
xchg
push
add
sub
or
sbb
add
or
xor
dec
nop
cmp
cmp
push
das
out
mov
pop
inc
hlt
dec
inc
xchg
js
mov
jl
xlat
add
pushf
push
nop
loopne
pop
loop
dec
jmp
cmpsl
or
rcr
mov
das
fimull
into
aad
or
dec
mov
xchg
add
stc
and
mov
push
enter
mov
and
cmc
orb
cli
fucom
jp
cmp
inc
mov
add
es
pop
xor
imull
push
lret
popa
scas
in
adc
bound
xchg
jb
fiaddl
sbb
lcall
movhlps
push
int
or
and
cmp
cmp
sub
mov
mov
jl
mov
iret
push
in
lods
mov
push
push
push
cmp
cmc
imul
lods
aas
jl
push
out
fwait
test
mov
fstl
std
dec
fmul
and
inc
xor
sbb
xchg
mov
jae
je
out
rolb
iret
fimull
test
dec
mov
jl
mov
jo
xchg
sahf
push
sub
pusha
xchg
inc
dec
cmpsl
jl
lahf
shlb
adc
sbb
jno
cwtl
push
arpl
push
add
mov
ja
push
lea
push
jle
mov
mov
cli
fs
and
pop
dec
add
popf
dec
adc
mov
lcall
inc
pop
mov
jb
das
cmpsb
adc
fsubrp
outsl
adcb
insb
dec
lea
adc
pop
jle
mov
outsb
jge
mov
loopne
jp
sub
in
out
push
rcll
xchg
ret
int
sub
cmp
mov
push
xor
pop
into
loopne
inc
sbb
or
or
mov
stos
dec
sbb
dec
divb
rcr
xor
jg
and
sbb
out
dec
mov
xor
ja
mov
push
call
mov
jle
dec
popa
fstps
cmovle
xor
push
xor
fdivs
cmp
sahf
cwtl
push
sbb
mov
push
xorl
push
cmpsb
pop
rolb
imul
mov
push
psubq
aaa
sub
dec
mov
mov
repz
and
push
ljmp
dec
jp
out
pop
jl
mov
enter
push
adc
adc
cmp
pop
inc
inc
mov
sub
pop
dec
iret
mov
mov
jecxz
adc
xlat
dec
or
mov
mov
out
xchg
inc
and
dec
cmpsb
sti
fstps
xchg
xorl
mov
iret
push
xor
dec
dec
sahf
out
mov
dec
pop
cltd
dec
push
cld
ss
xchg
cwtl
mov
ja
adcb
aas
sarl
push
mov
dec
xchg
iret
fcomp
push
fnstsw
xor
add
repz
ret
mov
or
aam
mov
mov
pop
or
out
adc
pop
cmp
fsubl
aaa
add
iret
jnp
mov
adc
xchg
inc
cmp
jg
sti
aas
sub
daa
enter
xchg
push
or
xor
outsb
xchg
mov
out
aaa
jno
dec
daa
mov
inc
int3
stc
and
mov
dec
clc
movsb
push
sub
mov
std
insb
lock
pop
dec
mov
js
es
dec
outsl
popa
xchg
stos
fidivrs
cs
push
sarb
icebp
sbb
ja
leave
sbbl
testb
ret
jo
dec
fisubs
xchg
jle
add
dec
incb
or
dec
dec
loop
sti
sbb
pop
fimuls
pusha
lock
adc
mov
and
xor
fcoms
adc
lcall
fs
cwtl
sub
mov
xor
inc
data16
mov
iret
inc
push
repz
leave
xchg
pop
movsb
dec
hlt
push
int3
cmc
pop
mov
into
cmp
test
mov
pop
adc
lcall
adc
jg
pop
fs
fsubrp
test
adc
cmpsl
dec
test
inc
repnz
dec
xorb
jne
out
out
dec
dec
inc
insb
stos
pop
mov
sub
adc
imul
jecxz
pop
inc
xchg
test
out
out
insl
push
lahf
dec
js
xchg
call
pusha
and
inc
xorl
enter
pop
mov
loope
and
cltd
xor
or
mov
sub
jb
ja
pop
int
mov
lret
into
push
cmc
js
inc
aas
dec
add
inc
pop
sbb
dec
ret
out
rcrl
fnstenv
dec
movsb
lahf
xor
imul
test
sub
cmp
mov
jl
cli
inc
mov
dec
daa
pop
or
cwtl
push
lods
mov
andl
ficomps
pusha
cmp
aas
inc
pop
dec
xor
mov
test
stos
dec
jmp
push
pusha
inc
jbe
imul
rclb
push
add
cmc
cmp
out
pop
adc
and
and
dec
jle
pop
inc
mov
js
rorl
cmp
dec
int
fistl
jle
ror
adc
insb
dec
push
mov
testb
and
adc
outsb
int
ret
mov
pop
imul
and
test
mov
lcall
jnp
sbb
inc
jecxz
out
movsl
mov
cmc
push
mov
insl
sti
jno
in
jmp
push
dec
imul
stos
dec
inc
jmp
lods
adc
std
repz
sub
mov
and
inc
xlat
inc
mov
loope
dec
jle
jp
inc
fs
out
push
pop
dec
insb
pop
mov
xchg
ss
out
xchg
adc
pop
adc
movl
test
das
dec
ficoms
sub
out
test
aaa
pop
pop
call
mov
dec
push
adc
cmp
mov
xor
dec
mov
pop
dec
xor
dec
cmpb
movsb
dec
lret
or
jb
or
nop
adc
dec
shlb
xchg
xor
dec
divl
js
dec
adc
push
pop
xchg
dec
dec
repz
fimuls
dec
rclb
aam
icebp
cwtl
push
inc
jmp
mov
mov
inc
xchg
inc
sub
or
in
dec
jns
fsts
sub
adc
and
dec
adc
jnp
mov
dec
jmp
dec
shrb
fistps
cld
and
loop
stc
cmp
daa
andl
inc
test
jae
mov
into
pop
je
mov
xor
aam
aad
sbb
dec
dec
xchg
mov
orb
hlt
push
jl
push
icebp
add
adc
or
lret
ficomps
je
xchg
pop
jl
test
lahf
mov
add
sbb
xor
std
push
inc
negb
pusha
imul
push
into
or
sbb
add
jl
frstor
out
fistpl
mov
dec
or
pop
ja
dec
sub
pop
mov
orl
ret
into
pop
push
push
inc
jne
sbb
scas
add
xchg
loope
or
scas
mov
cmpl
rorl
mov
push
mov
popa
push
xor
shll
pop
call
or
and
inc
push
movsb
in
sub
ret
dec
and
xorb
mov
push
aad
in
les
mov
push
jae
into
fsubrl
out
std
ljmp
lods
fidivrl
mov
pop
stc
dec
xor
mov
push
mov
pop
dec
imul
sahf
int
inc
or
push
das
out
loop
dec
and
cs
xchg
inc
inc
mov
mov
stos
dec
or
or
jno
adc
dec
xchg
int3
and
push
arpl
test
mov
or
dec
sub
subb
pop
pop
xlat
sub
cmpsb
push
arpl
dec
mov
and
dec
dec
sbb
jbe
xchg
mov
sub
movsl
xchg
and
rorb
jp
arpl
cmp
dec
adc
adc
addb
jp
xor
jg
movsb
add
fidivrs
dec
movb
cmp
repnz
repnz
xor
cmovns
mov
mov
in
and
cmpsl
jle
dec
cmpsl
addb
push
pop
jle
add
xor
cmp
dec
sub
mov
jmp
jle
jne
xchg
jmp
out
repnz
or
lret
push
push
lods
ret
sbb
xor
scas
push
jb
jl
add
ret
das
jecxz
inc
aaa
aas
hlt
inc
xchg
push
dec
lret
out
jl
mov
dec
stos
ja
jbe
ret
mov
dec
xchg
mov
fadds
cmp
fsubrs
jae
iret
int3
fdivrl
cmp
jl
mov
dec
stos
pop
adc
dec
jmp
inc
outsb
lcall
jecxz
lahf
mov
movsl
adc
ror
cltd
adc
ds
bound
scas
add
popa
js
cmp
hlt
lahf
sbb
dec
outsl
dec
pushf
int3
adc
dec
add
cmp
xor
mov
mov
sub
xchg
push
cwtl
dec
or
pcmpeqd
icebp
xor
xchg
inc
mov
andb
lcall
mov
cli
into
dec
cmp
mov
lds
outsb
mov
add
sub
pop
push
xor
fsts
test
xchg
dec
mov
xchg
iret
dec
xor
adc
xor
mov
cmp
jl
mov
mov
xchg
push
dec
pop
fiadds
iret
das
rorb
push
icebp
adc
outsb
and
jns
pop
and
rdpmc
fs
mov
cli
arpl
mov
ja
inc
dec
pop
mov
mov
fs
push
movsl
jl
add
push
xchg
xchg
enter
mov
pop
fisttpll
inc
sub
sbb
lods
pop
push
dec
jg
jge
or
or
jecxz
mov
movsl
sub
movsl
lret
jle
push
mov
sbb
add
push
cmp
push
push
mov
xchg
fwait
mov
fld1
movsl
adc
jno
sarb
out
into
popf
mov
outsl
leave
adc
lahf
add
stos
dec
mov
je
cmpsb
scas
test
popf
test
xchg
sub
int3
mov
in
mov
dec
xchg
jle
push
cmp
inc
adcl
cs
in
roll
sub
xchg
cmpl
push
sub
daa
jle
hlt
shr
xor
adc
movsb
lea
sub
add
sub
pop
ss
jl
les
enter
and
call
int
decb
and
xor
lret
adc
xchg
mov
cwtl
dec
adc
push
adc
mov
cld
dec
add
xor
jl
add
inc
lods
and
inc
xor
jl
popa
or
push
movsl
jle
jecxz
inc
cmpsl
xchg
aam
dec
mov
in
clc
sbb
les
inc
pop
mov
dec
cmp
dec
mov
inc
nop
dec
shlb
push
dec
xchg
inc
add
mov
in
cmp
int
cltd
or
or
cmp
push
fidivl
insl
aam
and
xor
fidivrl
shlb
cmp
ret
ret
aaa
dec
cltd
push
pop
cmpsl
sub
pop
sub
push
outsl
mov
out
or
aas
es
xchg
insb
or
add
aas
cmp
cs
mov
jp
adc
push
ficompl
scas
push
out
pop
xor
js
sub
cmp
and
test
aaa
jo
stc
sub
repz
and
adc
cmp
fimull
insl
cmp
jl
push
inc
inc
lcall
addr16
ljmp
push
xchg
insl
xor
jge
pop
sub
lock
outsb
stos
mov
incl
mov
sub
dec
jmp
test
dec
mov
adc
dec
mov
daa
xchg
add
cmp
pop
adc
adc
lcall
push
mov
cmc
dec
in
enter
xor
gs
cmpsl
adc
aad
mov
xlat
dec
jnp
js
push
fldl
repz
dec
jle
shrl
dec
mov
stc
mov
cmpsb
loope
xchg
cmp
mov
xchg
fisttps
push
aad
xor
stos
sbb
jb
xchg
mov
dec
daa
add
insb
pop
stc
fimuls
sbb
mov
mov
stos
inc
dec
jle
or
jl
add
mov
jge
push
into
or
sub
aas
dec
cmc
or
dec
jb
jne
js
dec
xor
je
add
pop
adc
pop
cmc
xlat
mov
mov
dec
push
or
push
add
or
ffreep
pop
mov
and
xchg
inc
or
push
jmp
ja
shrl
sbb
shlb
and
cmpsl
dec
mov
repz
out
pusha
pop
inc
outsl
mov
lock
and
xor
repnz
xchg
stos
fwait
and
or
int
and
and
repnz
push
dec
jne
dec
mov
dec
out
or
in
dec
cwtl
xor
jle
sbb
popl
and
test
push
lds
xchg
sub
mov
dec
mov
add
cltd
sbb
ret
pop
pop
mov
dec
push
rcrl
add
jne
ds
jge
dec
push
xor
pop
or
and
push
fmuls
pop
jmp
mov
xor
cmp
xchg
xor
push
repz
addl
dec
test
repz
incb
jmp
lods
push
xchg
roll
dec
inc
cwtl
aas
lea
pop
es
dec
sbb
in
or
dec
pushf
mov
and
jnp
dec
cmp
sub
mov
jle
adc
xor
in
loopne
pandn
or
lahf
mov
mov
aam
outsb
jb
push
cmp
cli
pop
into
push
lret
push
mov
loop
int
cmp
clc
es
and
fisubrl
dec
add
and
sub
daa
pslld
push
cmp
push
jne
adc
inc
sub
dec
clc
or
jl
dec
loop
fcoms
jns
pop
xchg
scas
sub
jb
ja
jg
add
or
in
jb
cmp
xchg
push
fldcw
xchg
push
or
mov
std
mov
daa
inc
push
pop
decl
gs
push
xorl
inc
int
in
xorb
and
inc
insl
popf
out
lods
in
dec
jbe
lahf
sbb
and
dec
popf
out
aas
enter
dec
shlb
mov
sbb
into
aam
mov
sub
mov
add
into
jno
outsb
cmp
dec
int
mull
mov
dec
fstpt
cmp
cld
js
push
mov
enter
jne
psrlq
cmp
sub
xchg
outsl
pop
test
and
dec
mov
push
bound
xor
pop
cmpsl
leave
dec
cmp
mov
push
jg
hlt
fs
inc
scas
fbstp
icebp
pop
aad
jb
insl
fsubs
cmp
mov
mov
pop
mov
out
dec
or
rcll
sahf
dec
lods
jl
fsubs
and
stos
or
into
mov
jo
dec
push
call
jns
xlat
fldcw
dec
adc
cld
jle
pop
adc
out
push
addl
lods
mov
xor
pop
mov
cmp
lcall
jbe
mov
dec
lcall
push
push
cmp
add
pop
aam
test
or
jg
cwtl
shrb
arpl
and
pop
adc
jae
xlat
neg
sub
scas
out
jg
mov
push
adc
lahf
mov
fwait
popl
add
mov
and
or
std
xor
push
add
mov
jmp
or
mov
dec
stc
ficomps
push
push
dec
sbb
les
fmuls
sub
jnp
lret
inc
ficoml
mov
xor
pop
jae
fs
pusha
cmovle
in
jmp
dec
mov
push
jle
push
gs
fld
push
cli
es
adc
inc
orb
cmp
xor
xor
xlat
add
dec
fs
push
sub
ret
das
xor
push
mov
cmc
xor
fsub
mov
mov
pop
mov
inc
inc
xchg
cli
push
daa
rcrb
scas
jmp
xor
push
es
nop
jle
push
mov
aad
jns
daa
cmpsb
in
or
inc
cmp
into
jae
into
lock
mov
in
dec
in
outsl
mov
loope
dec
imul
jns
mov
xchg
out
dec
mov
xor
movsl
adc
dec
aam
and
and
mov
xor
xor
adc
dec
mov
sbb
xor
pop
popf
mov
dec
cwtl
icebp
push
sahf
mov
cltd
pop
fsubp
xchg
popf
cmp
incl
fdivp
out
aad
dec
and
push
push
jg
jle
pop
xchg
jb
push
call
testl
sub
mov
repnz
dec
mov
jbe
outsl
loopne
enter
or
dec
outsb
roll
xchg
or
or
xchg
sub
addps
outsb
or
dec
mov
mov
lret
adc
sbb
aam
in
dec
gs
js
in
ljmp
repz
lods
fwait
cld
test
mov
mov
repnz
outsl
or
dec
stc
mov
data16
test
push
cmp
push
jl
mov
dec
imul
cmp
xchg
push
dec
pop
pusha
cli
in
fnstenv
popa
stos
outsb
push
jmp
xor
dec
xchg
fcomi
xor
dec
or
gs
sub
cmpsl
sub
scas
jle
xor
mov
pop
inc
pop
adc
cmp
mov
mul
add
push
jmp
jl
outsl
out
adc
cwtl
and
xor
fadds
xchg
es
cmp
aam
cmp
sbb
addr16
mov
mov
push
insl
ret
mov
pop
sbb
pop
lea
cmpsb
jle
sahf
mov
enter
into
adc
xchg
jp
cltd
bound
push
dec
cmp
push
push
add
lahf
lret
cmpsl
out
pop
xlat
dec
fcoml
int
clc
dec
adc
cmp
jbe
mov
cmpsl
xor
add
dec
xchg
push
out
jge
push
fsubrs
or
add
mov
sbb
xchg
cmp
jno
lods
and
xor
insb
mov
in
and
sbb
xchg
mov
mov
dec
add
inc
sarb
push
aaa
cmp
movsb
fwait
scas
pop
jg
mov
inc
cmp
or
dec
push
sarb
xchg
int3
cmp
outsl
adc
stos
cmp
aas
nop
fcoml
hlt
sbb
lds
mov
fisubrl
xchg
jecxz
ljmp
aas
push
aam
ret
stos
lret
pop
cmpsl
adc
cmpsb
pop
mov
mov
cmp
push
xchg
mull
scas
js
xor
sbb
jle
pushf
fimuls
dec
jecxz
ja
xor
push
jg
filds
pop
xlat
or
ss
cvtpi2ps
xchg
stos
loopne
hlt
and
icebp
push
int
aaa
imulb
rolb
push
jbe
lods
js
hlt
dec
push
enter
pop
outsl
dec
cmovne
xchg
cld
inc
scas
lock
loop
clc
dec
sbb
or
xchg
xor
or
xlat
pop
sbb
or
xchg
stos
fisubrl
xchg
and
lock
jle
rolb
pop
std
sbb
add
push
in
iret
mov
xor
push
scas
push
mov
sub
jmp
sub
jle
std
pop
xchg
xchg
add
inc
daa
jle
lea
ljmp
push
jg
mov
arpl
stc
out
stos
sbb
inc
lods
lahf
cmp
cmp
push
orb
imul
inc
xor
pop
fidivs
dec
mov
sarl
test
pop
xor
sar
out
xchg
sarb
imul
cmp
inc
jmp
dec
mov
inc
push
jl
mov
cmp
lret
lcall
insb
lods
test
mov
sub
cld
inc
pop
aaa
inc
hlt
cmp
mov
int
fs
fiadds
jnp
loop
mov
imul
add
add
bound
lods
ss
inc
sub
mov
out
ficomps
pop
pop
dec
call
in
pop
repz
mov
jl
cmpsb
fists
ljmp
iret
jbe
repz
sub
cs
adc
outsb
stc
dec
lcall
scas
inc
pop
sub
inc
push
push
dec
jmp
dec
jbe
roll
push
inc
scas
mov
and
xchg
xchg
mov
bound
lret
pop
movsl
push
mov
out
and
out
sti
aaa
int3
gs
dec
mov
sbb
dec
push
dec
push
inc
sub
jle
push
inc
pop
jbe
sbb
xor
sbb
dec
dec
ljmp
dec
pop
push
repz
lea
adc
dec
cmp
pop
dec
dec
mov
rorb
pop
ds
icebp
cli
jo
dec
movsl
add
dec
push
jle
dec
push
adc
xchg
aas
mov
les
sbb
sbbb
out
dec
cmp
jp
adc
movsb
cli
pop
dec
push
loope
sbbl
cmp
adc
je
push
and
dec
mov
mov
cmp
icebp
mov
add
repz
cmp
pop
aaa
dec
push
stc
arpl
sahf
mov
adc
dec
mov
insl
testb
mov
mov
iret
movsb
sbb
dec
filds
pop
dec
inc
ja
test
int3
into
push
adc
insl
inc
nop
fdivr
gs
jl
std
xchg
mov
ds
lock
sti
popf
sbb
decb
mov
sub
out
rorb
pop
mov
in
es
mov
sahf
daa
pop
repnz
and
mov
or
shll
dec
nop
cmpsl
pop
ret
sub
test
inc
scas
jbe
cltd
int3
dec
push
cmp
aas
shll
les
jns
add
decb
pop
inc
xor
sahf
arpl
and
ss
cs
fnstcw
outsb
pop
das
add
int
nop
dec
mov
ret
cmp
adc
pop
lret
into
sahf
ficomps
outsl
in
jo
test
mov
cld
test
push
ja
loopne
lcall
fstpl
dec
sub
outsb
lahf
xchg
jb
imul
insl
inc
dec
adc
test
fmuls
xor
xchg
movsb
xor
imul
and
dec
sub
push
pushf
adc
cmpsb
dec
ret
mov
jo
mov
icebp
sahf
jmp
das
filds
popf
dec
fisttps
iret
inc
iret
adc
add
mov
or
pop
inc
dec
imul
lret
dec
push
jo
mov
out
jg
dec
sahf
in
insb
rorl
scas
arpl
cmc
out
fiadds
lcall
inc
dec
mov
or
out
jb
notl
push
incb
aam
mov
lret
pusha
jle
insl
inc
ljmp
sub
dec
cmp
xchg
cmpsl
aas
inc
dec
xor
and
push
and
pusha
xchg
sub
push
dec
jg
inc
push
lret
stos
and
xchg
jle
repz
por
movb
and
cwtl
xchg
lret
mov
insw
pop
mov
pop
lret
dec
pop
stos
add
mov
fs
stc
imull
loopne
sbb
fwait
mov
lods
popa
outsl
clc
pop
add
dec
inc
mov
data16
inc
sub
mov
push
in
test
in
jl
lods
or
in
fbld
dec
dec
jg
out
sub
mov
dec
sbb
pop
fisubl
xor
imul
daa
cmpsl
cmp
fbstp
mov
aaa
inc
into
or
out
xor
fstl
addr16
mulb
jle
ficoml
imulb
inc
mov
fistps
inc
ss
jge
jl
xlat
fs
xchg
pushl
insb
mov
fs
mov
inc
jno
fld
pop
push
mov
push
aam
jmp
hlt
push
dec
rol
mov
sarl
mov
inc
int
dec
cmpl
xor
clc
pop
inc
mov
out
in
ficomps
inc
cmp
pop
insb
aas
jo
aam
xchg
xchg
xchg
mov
pop
data16
inc
pop
push
cmp
add
or
aas
jmp
and
adc
push
cwtl
xlat
adc
mov
cmp
add
and
dec
repz
inc
pop
dec
out
mov
jo
mov
aas
cmp
fdivrs
ret
stos
jl
ror
jle
rcrl
enter
inc
shrl
daa
sub
sub
cmc
sub
clc
or
pop
iret
loop
lods
cmp
add
pop
push
dec
imul
pop
push
incl
push
daa
out
mov
cmp
clc
cmp
inc
rol
dec
xor
sub
add
dec
hlt
cmpl
mov
hlt
fstpl
jle
pop
jmp
pop
xchg
je
sti
shl
pop
jb
std
cltd
popa
fmuls
pop
lret
mov
dec
sbb
xchg
and
jo
test
mov
popa
outsl
fists
dec
push
pushf
xchg
sar
sahf
call
xchg
push
mov
mov
mov
fs
in
cltd
ror
push
sub
rorb
mov
adc
daa
fisttps
jae
arpl
push
inc
and
sbb
gs
mov
mov
mov
lret
jle
dec
mov
jnp
jns
fmull
dec
jae
mov
sti
pop
loope
out
iret
nop
mov
test
es
pop
pushf
test
jl
aad
out
cmp
and
mov
lods
xor
lea
clc
jmp
pop
leave
ss
dec
inc
dec
mov
sub
jb
movsl
das
sbb
cmp
cmp
pushf
andl
push
cmp
test
mov
xchg
rorb
xor
sub
inc
xor
rorb
bound
push
dec
sub
mov
iret
xor
pop
adc
inc
and
dec
scas
or
xor
mov
into
cmp
std
pop
inc
fisubrl
and
cmp
and
mov
lock
sarl
pop
or
insb
scas
jg
sub
mov
inc
pop
jg
rorb
lods
into
inc
jl
rcl
mov
inc
jbe
mov
out
daa
out
adc
loop
sbb
int3
das
aam
in
sub
jb
js
lods
jp
fidivl
pop
sbb
ret
pop
mov
test
cmp
or
push
sub
aaa
mov
ret
das
les
mov
loop
aam
lcall
lock
mov
push
mov
add
mov
xchg
add
jl
cmpsl
ja
shll
mov
inc
icebp
mov
test
cmc
jne
cmpsb
fmull
aam
out
dec
cmp
mov
unpckhps
mov
stos
jae
dec
outsb
inc
cmp
mul
inc
sbb
pop
aad
cltd
dec
stos
dec
ror
outsl
mov
cmp
stc
in
sub
jle
shlb
mov
icebp
or
xchg
fwait
mov
inc
repnz
mov
dec
js
push
iret
and
mov
cmc
cmp
mov
lods
sub
les
push
push
xor
inc
jg
loope
repnz
or
sub
jb
stos
pop
out
aas
iret
inc
jg
add
fdivrs
and
pop
push
out
xor
adcb
sub
push
mov
movsl
xor
loop
cmpsl
push
add
mov
push
rcrb
sub
loopne
fidivrl
fldl
jg
sarb
mov
roll
mov
and
push
add
dec
inc
aaa
cmp
inc
jl,pn
outsl
cmc
cmpsl
mov
mov
dec
out
es
fcomps
adc
popa
in
ror
sub
jbe
js
cmp
push
gs
jmp
mov
push
pop
pop
jp
dec
inc
aam
inc
mov
sub
shr
das
push
xchg
out
lods
jge
inc
or
xchg
andl
sti
jg
jbe
ret
jp
jae
pop
ljmp
mov
dec
repnz
sub
xchg
inc
fimull
bound
mov
mov
mov
hlt
sbb
cmp
out
sub
and
add
sbb
rcr
push
inc
cld
insb
sbb
push
push
in
cmp
aaa
les
subb
es
dec
dec
shlb
mov
dec
jl
in
inc
pop
cmp
jecxz
movsb
mov
or
lods
fwait
icebp
sbb
sbb
es
mov
rorl
cmp
or
sub
push
scas
add
dec
cmpsb
jmp
mov
inc
call
nop
lret
icebp
xor
push
stos
addl
jbe
dec
cmp
inc
mov
push
sahf
inc
or
pop
mov
pushf
ret
fidivrs
add
push
add
inc
mov
cmc
dec
xchg
pop
sub
pop
decl
fdivrl
dec
pop
mov
gs
mov
mov
add
and
nop
lock
dec
mov
adc
sbb
ret
ja
pop
rclb
scas
push
in
shrb
jmp
add
scas
popf
dec
dec
mov
jo
xchg
lahf
push
dec
imul
sbb
stos
fwait
jne
jbe
dec
addl
mov
jb
cwtl
pop
popa
gs
xor
div
mov
inc
sbb
rolb
incb
xchg
push
int3
dec
dec
sub
add
aaa
adc
dec
inc
push
pop
negl
jl
dec
mov
xchg
sti
pop
dec
push
mov
dec
xor
mov
into
cmp
cmp
dec
icebp
inc
cmpsl
jb
lock
stos
aam
ret
inc
arpl
repz
dec
push
cmp
lcall
cmp
out
in
add
push
fimuls
cmp
sarl
lsl
mov
xchg
clc
sub
jb
and
inc
push
mov
dec
mov
jg
jno
mov
cmp
xchg
scas
mov
enter
fildl
push
pop
sbb
popf
add
int
push
add
sahf
add
popl
into
jle,pn
scas
jbe
sub
cmp
mov
jmp
inc
jg
inc
negl
cmp
mov
in
movsb
or
ds
sub
xchg
or
aaa
xsha256
cmpsb
xchg
push
cmp
push
push
daa
pop
out
xor
dec
dec
inc
jg
in
jecxz
mov
mov
cwtl
xchg
pop
sti
or
pop
and
lock
and
clc
mov
fisttpl
icebp
cmp
ds
out
or
dec
inc
hlt
cld
push
fprem
xor
out
fldlg2
cmp
jl
popf
jp
and
pop
push
add
adc
enter
enter
cs
cmp
icebp
fwait
repnz
lods
sti
and
fmuls
jle
mov
lcall
hlt
loop
mov
cmpsl
add
out
fcoms
mov
fstpt
and
dec
or
sub
jmp
rorl
stos
jg
pop
icebp
inc
movsb
jecxz
adc
fnstenv
jl
pop
pop
movsl
xchg
sarb
pop
das
cltd
sbb
in
pop
lock
in
je
and
ds
sub
lret
dec
fucompp
cltd
inc
fwait
jp
insb
push
imul
xchg
jmp
popl
fimull
cmp
jnp
dec
daa
stos
clc
pop
test
pushf
or
mov
insb
push
leave
idivl
jp
or
jl
inc
dec
cmp
pop
mov
and
out
adc
inc
shr
jl
arpl
ja
jmp
and
pop
dec
dec
pusha
pop
pop
mov
fs
bound
pop
inc
and
xor
adc
mov
pushf
daa
into
push
test
fwait
stc
mov
pop
mov
xchg
outsl
jecxz
stos
cmc
sbb
outsb
pop
adc
jl
fildl
adc
xchg
cmp
notb
popa
cwtl
and
cmpsl
lds
xchg
dec
lods
icebp
and
pop
dec
or
les
js
out
arpl
jge
xlat
dec
fdivr
mov
clc
inc
outsl
dec
mov
pop
jl
pusha
aaa
lods
and
xchg
in
and
mov
test
mov
test
dec
cmp
loopw
loop
fwait
or
push
dec
add
dec
adc
cmc
or
adc
mov
cmp
mov
mov
js
movsl
aam
fstps
movsb
jg
dec
inc
test
fwait
push
outsb
int
dec
out
loop
push
movb
mov
fldenv
cmovl
mov
nop
xchg
aaa
sub
xor
mov
dec
fsubr
rcrb
jg
xor
sahf
call
dec
stc
nop
or
inc
insb
dec
in
mov
push
in
cld
dec
fcompl
inc
xchg
pusha
lret
add
push
gs
jle
sub
les
or
fisubrl
mov
rolb
fldcw
cltd
and
jo
in
fwait
divb
out
jno
lret
add
fs
mov
daa
cmp
dec
sbb
iret
test
test
add
mov
adc
sub
stos
lahf
je
cltd
dec
rorb
mul
ja
insb
icebp
jo
sbb
dec
fnstenv
sbb
imul
dec
mov
leave
jmp
cmp
roll
and
into
fcomp
in
push
ficoml
stos
movsb
pop
mov
and
mov
das
daa
inc
stos
jg
ljmp
mov
or
out
lret
mov
pusha
es
pushf
push
jle
push
push
andl
inc
xor
imul
sbb
bound
ja
imul
and
aaa
mov
scas
push
mov
push
cmp
lea
jg
or
xchg
push
js
mov
and
jnp
xor
repz
mov
mov
add
aas
into
push
decl
mov
cmp
icebp
cmpsl
xchg
testl
pusha
daa
test
add
add
mov
imull
pop
aaa
push
pop
mull
jge
loop
cmp
fisttpll
mov
push
and
xchg
and
shl
out
jp
xlat
es
mov
push
jnp
cmp
xchg
insl
sub
test
or
mov
clc
dec
movsl
or
aas
mov
dec
push
lea
mov
jmp
shr
loope
push
mov
cmc
pop
inc
iret
aas
fs
in
xchg
push
out
sbb
add
lret
andb
test
out
lret
cmp
iret
popf
test
inc
cmp
pusha
xchg
and
jp
push
int
push
pop
imul
push
in
fiadds
mov
loope
push
xor
hlt
insb
mov
jp
sahf
icebp
sub
push
push
inc
cmp
add
pop
enter
dec
jmp
mov
icebp
scas
mov
cmpsl
mov
mov
shrb
jl
mov
add
mov
int3
mov
hlt
push
test
sti
xchg
mov
sarb
out
iret
popa
les
stos
xchg
xchg
ljmp
pop
push
pop
fidivrl
xchg
fs
call
lret
mov
mov
jmp
sub
outsl
push
data16
cmpb
xor
fstps
mov
dec
push
stos
fisubrs
rcll
fwait
sbbl
xchg
xlat
dec
ret
sbb
or
inc
mov
and
sub
sbb
out
push
xchg
jg
dec
jl
sub
scas
rolb
dec
imul
mov
fcoms
loope
xor
xchg
test
int3
dec
push
or
mov
dec
adc
cmp
ljmp
add
xchg
sbb
push
lods
dec
adc
mov
jg
jns
daa
xor
pop
nop
mov
rcl
pop
dec
mov
filds
sbb
sbb
bound
mov
or
mov
rcrl
dec
sahf
adc
es
pop
insl
icebp
in
jae
fisttpll
lods
xor
xor
jg
movsl
out
jl
mov
lret
inc
xchg
xchg
fsubrl
xchg
and
xor
scas
mov
dec
lds
jle
cmc
mov
dec
xlat
out
mov
xchg
and
dec
cmpsb
adc
jno
insl
imul
dec
jle
push
insb
jmp
adc
dec
pop
movsl
lcall
jle
arpl
dec
add
std
xchg
mov
repnz
adc
nopl
jae
dec
or
sbb
push
in
add
cmp
scas
packsswb
mov
push
adc
mov
xchg
dec
loopne
xchg
adc
es
mov
test
imul
push
adc
jnp
out
mov
jle
sti
dec
or
mov
jnp
scas
sub
lret
jl
imul
adc
push
fs
icebp
dec
mov
xlat
jne
fimuls
pop
out
pop
imul
dec
sbb
cmp
test
cmp
in
or
add
lcall
sbb
inc
aaa
loopne
sub
shll
add
dec
pop
or
add
inc
inc
jbe
das
lahf
call
es
mov
fld
adc
jp
call
dec
cmp
in
repnz
scas
mov
pop
dec
mov
mov
cld
mov
dec
ret
jno
mov
dec
inc
mov
lcall
call
jl
mov
xor
shrb
icebp
fbld
inc
jle
mov
cmp
inc
cmp
push
dec
jg
dec
fwait
outsb
sbb
movsl
es
xor
adc
test
popf
push
or
dec
mov
sbbb
repz
outsb
lret
dec
out
sub
cmc
into
xor
add
mov
pop
pop
daa
xor
push
dec
std
int
jae
and
dec
adc
sub
call
test
sbb
dec
ljmp
jecxz
addr16
rorb
dec
cmpsl
mov
xor
dec
push
shll
add
daa
insl
outsl
mov
ss
fdivrs
sbb
dec
cmp
sub
dec
push
or
adc
adc
jecxz
enter
ja
addr16
push
dec
pop
mov
insb
testb
adc
xchg
les
push
cmp
jmp
sub
mov
aaa
mov
scas
leave
xlat
stos
xchg
rcl
fdivrl
dec
dec
int
test
jl
dec
je
or
inc
jno
outsb
dec
adc
es
pop
sub
int3
dec
inc
leave
rorl
jns
les
lods
pop
ss
jno
imul
dec
sbb
push
test
mov
das
and
add
xor
push
data16
dec
enter
das
pop
cmp
fnstenv
xchg
adc
lea
push
xor
or
jnp
outsl
mov
dec
jne
loope
scas
dec
test
inc
xor
je
add
lods
pop
xchg
sbbl
mov
scas
jmp
and
dec
xor
cli
cmp
loop
fucomp
fwait
add
sub
sub
dec
xchg
leave
loop
ja
subl
xor
xlat
lahf
push
sub
or
packuswb
mov
out
cmpb
jge
sub
xchg
orl
cmp
add
daa
dec
add
fnstcw
aad
lahf
ret
fists
jno
fisttpl
mov
mov
xlat
inc
insl
pop
push
lea
dec
out
jge
inc
jno
lret
lret
daa
adc
repnz
int
decb
lds
dec
test
lret
add
add
movsl
lret
pop
adc
inc
xor
sub
movsl
test
mov
int3
dec
cmp
dec
or
sub
sub
pop
adc
push
xchg
aaa
das
xchg
pop
mov
inc
dec
mov
cmp
lcall
das
stos
in
fistpl
xchg
mov
push
pusha
mov
loop
sbb
cmp
dec
insl
inc
lock
ja
pushl
jmp
jmp
jmp
repz
js
pop
test
adc
mov
jge
idivl
dec
popl
test
sub
xlat
xor
loop
adc
gs
adc
sbb
lods
dec
icebp
and
dec
popa
lcall
jmp
ds
xchg
dec
scas
xor
inc
cmp
insl
xor
fnsave
mov
push
sub
pop
out
test
cwtl
cmp
and
inc
xchg
jp
add
push
push
ja
icebp
addb
xor
mov
imul
jg
and
add
fldl
jns
dec
call
cmp
int
daa
psubusb
mov
xor
inc
inc
lock
arpl
jns
adc
inc
pusha
pop
mov
into
in
xchg
sbb
fistps
cmp
push
mov
inc
lods
ds
cli
jmp
xor
aaa
movsl
mov
insb
sub
aam
push
mov
dec
into
xchg
mov
insl
fs
stos
frstor
and
or
mov
cmpsb
hlt
into
jle,pn
scas
cs
inc
jg
lcall
mov
adc
cmp
mov
lds
rcrb
push
adc
insb
out
adcb
test
inc
xor
rolb
jo
dec
sub
jl
fsubrs
test
cmp
in
pop
mov
jl
jno
jb
out
or
jb
test
push
mov
cmp
adc
repz
out
push
xor
mov
enter
int3
cmpsl
xor
mov
lea
jnp
inc
dec
adc
push
decb
mov
out
dec
or
or
dec
fs
pop
jbe
iret
mul
pop
insl
sub
dec
aas
lcall
dec
add
fnstenv
loop
test
das
lock
mov
sbb
xlat
xchg
and
fmull
push
scas
add
ror
dec
xchg
mov
mov
repz
sub
mov
jns
sbb
les
mov
psrld
xchg
pop
push
xor
adc
push
cmp
arpl
mov
mov
dec
xlat
jle
sub
push
cmp
movsl
std
sub
mov
fcmovbe
out
in
jl
fwait
add
mov
cmp
push
sub
add
xchg
push
jle
sub
ja
adc
mov
sar
icebp
das
movsl
push
lret
shlb
jl
pop
push
cs
push
rcl
jmp
mov
loop
sub
xchg
add
notb
inc
imul
clc
ss
jle
dec
mov
loope
push
sbbl
cmp
cmpsb
fcomps
sub
pop
inc
dec
lret
push
adc
pop
inc
xchg
fsts
add
pop
mov
jae
push
jb
aam
mov
ret
jge
jl
arpl
movsl
cmpl
dec
adc
icebp
sbb
ret
mov
mov
mov
inc
cmc
fsubrl
push
orl
pop
gs
cli
dec
sub
ret
dec
jbe
stos
popf
out
testl
mov
in
push
out
xchg
jle
test
jno
mov
lret
cmp
mov
cmp
ds
jg
popf
push
scas
in
mov
cmp
push
mov
inc
dec
xor
aas
negb
mov
dec
dec
push
jle
stc
mov
iret
fisubs
xchg
mov
das
lock
mov
gs
test
cli
add
pop
pop
and
insb
stc
xchg
das
subl
sub
idivl
pop
and
out
push
inc
jae
sub
scas
pop
fists
push
dec
sub
jg
fsubrl
int
adc
insl
into
shll
dec
scas
movsb
fimull
jnp
sbb
iret
adc
cmp
jmp
lea
xchg
dec
add
lds
mov
imul
fisubs
inc
or
out
loop
pop
dec
fldt
in
call
scas
iret
xor
xchg
and
cmp
inc
jg
add
pop
adc
scas
push
fstpt
pop
dec
out
hlt
std
xchg
ljmp
loope
leave
mov
insl
sarb
sbb
mov
mov
lock
mov
add
add
add
xor
mov
sub
outsb
sbb
xlat
cmpsl
and
adc
mov
test
int3
jnp
pop
lret
ret
pop
dec
hlt
jle
insl
stos
clc
test
dec
out
inc
cmp
pushf
dec
and
sub
mov
enter
adc
sub
adc
adc
jle
shlb
jp
dec
inc
cmpsb
movsl
add
jb
push
push
out
add
push
cmpl
into
fs
not
rorb
or
cmp
mov
xchg
adc
ret
dec
out
cmp
dec
pop
dec
insl
ljmp
cmp
cmp
dec
mov
dec
aas
repnz
adc
inc
dec
mov
lret
stos
cmc
loopne
out
pop
xor
das
mov
cli
inc
aam
push
dec
scas
jl
adc
cwtl
inc
aaa
jle
lahf
push
sbb
or
push
loopne
push
fwait
push
imul
inc
xchg
xchg
sbb
addl
xor
ror
andb
daa
cmp
and
call
fwait
ret
nop
mov
mov
ficompl
imul
insb
cld
cli
rorl
or
xchg
xor
xchg
jge
xchg
decl
jno
aaa
jb
scas
jmp
sbb
bound
dec
push
popa
mov
movsb
aam
lahf
adc
lock
adc
xchg
loop
dec
mov
jno
out
daa
es
inc
mov
inc
push
loope
mov
jne
cmc
and
int3
cmpsb
adc
jns
jne
lods
repnz
rolb
push
and
add
lret
imul
rol
repnz
int
ljmp
out
jmp
push
into
arpl
mov
cmpsl
test
push
inc
into
outsb
je
sbb
out
leave
mov
shrb
mov
mov
pop
lahf
cmp
pushf
jle
mov
pushf
pop
mov
imul
mov
mov
daa
iret
and
sbb
out
ret
dec
mov
xchg
ljmp
xlat
test
sbb
mov
cmc
cmpxchg
icebp
dec
cmp
xor
mov
and
add
loope
dec
mov
dec
mov
pop
mov
imul
roll
pop
mov
xchg
les
mov
xchg
xor
mov
inc
push
mov
out
push
jb
test
pushf
jle
dec
mov
sub
das
insb
dec
fldenv
xor
rorl
add
dec
inc
clc
mov
movsb
ret
dec
fiadds
jle
cmc
adc
xchg
dec
shll
decl
and
dec
mov
mov
dec
jb
xor
popa
scas
inc
xchg
clc
ljmp
dec
and
sbb
or
movsl
jo
sti
dec
popf
jg
mov
in
out
xchg
sub
scas
xlat
cmp
inc
dec
js
or
adc
insl
inc
xchg
shlb
decl
dec
and
stc
jl
xor
and
mov
dec
add
inc
lret
sti
decb
sub
es
add
xchg
sub
and
into
pop
dec
dec
std
add
xlat
pop
mov
ss
test
sbb
iret
push
lods
shll
mov
dec
fisubs
sub
dec
das
or
aas
pusha
popf
insb
jnp
xor
jp
push
scas
dec
dec
xchg
lret
lock
mov
or
fmuls
pop
dec
sbb
inc
test
loope
ja
fisttps
sbb
pop
int
stos
adc
pop
xor
cld
adc
fisubs
je
dec
das
pop
dec
sarb
or
push
pop
dec
sarl
jbe
and
call
dec
shlb
xor
xor
mov
lahf
or
dec
xchg
loop
dec
add
and
notb
inc
dec
iret
outsb
or
push
jnp
jmp
dec
popa
sbb
hlt
mov
in
arpl
add
scas
mov
sub
pushw
dec
cmp
add
int3
inc
jne
lret
pop
test
rclb
sbb
lret
mov
sarl
lods
aam
mov
add
pop
jbe
or
std
loope
xlat
xor
and
gs
out
jl
inc
inc
in
xchg
int3
mov
mov
pushf
dec
lea
addb
andl
icebp
fidivs
push
shlb
xor
push
lret
repnz
mov
int3
clc
cld
mov
les
sbb
jbe
icebp
cmp
inc
int3
jl
js
cmp
inc
push
jle
push
inc
fidivl
shll
mov
add
sbb
xor
cmp
sbb
dec
xchg
fadd
rorl
repz
pop
push
mov
dec
pop
dec
fs
add
fwait
dec
push
cmp
jmp
adc
or
mov
addr16
push
sbb
add
dec
cmp
mov
dec
jmp
jge
push
dec
mov
xchg
xchg
jo
xchg
fistps
xor
inc
dec
sbb
scas
jne
inc
scas
jno
dec
fwait
stos
sbbl
dec
sbb
sub
push
pop
sub
dec
lea
xchg
rorb
xor
sub
dec
orb
push
je
icebp
decl
mov
cmp
dec
cmpb
daa
or
xchg
repnz
xor
aaa
push
jle
dec
push
nop
lock
xchg
dec
test
or
dec
jmp
dec
lods
daa
adc
movsl
push
sahf
call
or
sti
pop
dec
insb
scas
cs
aas
mov
pop
mov
push
mov
mov
repz
xchg
pop
imul
xor
xchg
and
xor
fidivrs
dec
lahf
stc
stc
add
sub
jle
lret
movsl
into
add
sahf
bound
scas
cmp
sub
sbb
ret
sub
mov
daa
iret
inc
out
xor
cmpsl
mov
adcl
adc
xchg
aam
push
xlat
dec
xor
lahf
testb
pop
int3
dec
inc
dec
pop
ret
cmpsl
data16
stos
xor
inc
das
cli
dec
push
pop
ljmp
pushf
push
out
mov
iret
inc
andl
out
mov
int3
jns
mov
movsl
pop
jle
xlat
dec
mov
push
mov
test
imul
inc
and
dec
cmpsb
lock
mov
mov
dec
pop
cld
scas
push
xor
or
in
lret
mov
xchg
mov
inc
add
pop
lock
push
lahf
pop
bnd
dec
and
cmpsb
dec
and
das
sub
shll
inc
sbb
mov
or
sti
rcl
test
dec
fs
or
dec
orb
int3
insb
pop
in
jb
fiaddl
xchg
pop
dec
scas
dec
jns
and
pop
pusha
in
dec
push
fdivrp
imul
pop
dec
test
or
repz
push
and
sub
cmp
dec
shrl
or
xchg
adc
jnp
mov
pop
popa
jecxz
sti
js
and
mov
push
pop
cmpsb
stos
mov
adc
sub
pushf
enter
dec
cltd
xchg
and
sar
mov
mov
pop
dec
dec
sahf
or
orl
dec
xor
rcl
lcall
sub
ds
adc
dec
mov
dec
incl
outsb
dec
mov
clc
out
aad
cmp
xchg
dec
cmp
mov
je
xor
sbb
dec
ror
adc
dec
lods
fmull
in
add
dec
scas
test
pop
ja
inc
int
xor
mov
and
cmp
dec
jns
adc
pop
mov
dec
add
add
sub
mov
push
cmpsb
push
dec
xor
push
sbb
xor
cmpsl
shl
xor
ss
popf
dec
movsl
insb
dec
ret
push
or
sub
dec
pop
xchg
mov
mov
cld
adc
cmc
dec
and
mov
dec
xchg
sar
repz
pop
leave
mov
aaa
shll
in
cltd
dec
mov
outsb
xchg
ret
fdivl
jl
add
push
into
mov
test
push
pop
lods
sub
dec
in
out
xchg
push
clc
inc
ds
test
dec
push
shlb
mov
lods
mov
add
cmpsl
in
push
cltd
jle
addr16
dec
mov
fucomp
stc
sub
sbb
dec
mov
cli
hlt
mov
mov
dec
add
loopne
sbb
mov
testl
pop
push
add
aaa
and
sub
sti
dec
cmpsb
cmp
mov
gs
push
jp
xchg
mov
int
outsb
mov
jae
jl
hlt
sti
push
fisttps
pop
add
inc
lea
dec
pop
xor
sub
mov
inc
test
push
jmp
into
xor
jle
cmp
sahf
jge
xor
call
pop
dec
dec
adc
scas
cmp
sbb
push
arpl
sub
mov
xchg
and
push
movsb
scas
or
daa
xorl
int3
stc
pop
mov
outsb
pop
ret
dec
dec
ljmp
dec
int
into
mov
push
and
dec
xor
dec
in
adc
loopne
fs
ljmp
xor
dec
fucomp
or
sub
cwtl
dec
mov
push
inc
mov
xchg
dec
xor
cmp
out
xor
iret
jecxz
sahf
or
xor
ja
xchg
pop
test
add
dec
mov
lock
je
mov
sub
lods
rcll
inc
movsb
dec
push
mov
hlt
inc
dec
mov
stos
mov
xor
pop
push
mov
sub
mov
dec
jne
jmp
push
js
dec
sahf
mov
push
xchg
push
popa
outsb
cmpsb
insb
cs
dec
pop
dec
push
mov
and
sbb
adc
daa
dec
push
ror
push
push
xor
sarl
dec
and
cmp
xor
jl
std
out
inc
dec
dec
push
push
add
dec
aam
cmpsb
pop
jmp
sarb
inc
push
jl
lcall
out
fildll
lods
cwtl
stc
pop
scas
add
adc
sbb
sbb
xor
lock
dec
jae
nop
push
mov
test
adc
mov
stc
or
aas
jl,pn
xor
xchg
out
dec
loopne
clc
jle
test
rcrl
lret
push
dec
sub
mov
adc
dec
fdivs
push
dec
subb
sbbb
ds
pop
push
dec
pop
mov
iret
adc
add
aam
mov
lea
dec
pop
dec
bound
inc
jae
jle
icebp
or
in
or
mov
sub
mov
insb
shlb
and
inc
mov
std
jl
shlb
xchg
mov
loopne
inc
sbb
bnd
arpl
cmp
push
fwait
xchg
xor
xchg
fisttps
shll
ljmp
fidivl
pop
dec
and
cmpsl
cwtl
popa
test
fwait
xchg
push
xor
outsb
mov
inc
dec
loop
mov
cmp
test
or
push
pushf
xor
dec
xlat
lret
mov
stos
ljmp
arpl
and
insb
dec
xor
inc
mov
xor
and
aaa
dec
popf
xchg
pusha
insb
imul
dec
jns
rcl
in
xchg
dec
or
pop
inc
mov
hlt
test
and
es
dec
adc
sbb
movsb
adc
mov
cwtl
imul
sub
push
mov
sub
or
bound
repz
sbb
scas
out
int
ss
push
pop
pop
icebp
ds
xor
dec
sbb
js
fwait
mov
nop
mov
adc
stc
arpl
lock
jle
cmpsl
in
fistps
fisubs
xor
into
or
add
mov
mov
cmp
xor
push
pop
loop
mov
dec
aas
out
mov
int
cmpsb
push
pop
dec
in
add
stos
cmp
out
or
inc
jbe
xchg
and
pushf
or
in
jl
jne
or
dec
test
mov
mov
push
inc
lds
xor
adc
dec
mov
into
mov
mov
je
or
imul
cmp
mov
in
push
cmp
testl
daa
xchg
orl
or
jmp
insl
cmp
jbe
or
dec
scas
std
lcall
and
repnz
cmp
mov
mov
jg
dec
inc
xchg
lret
cmpsl
mov
scas
xor
add
icebp
aaa
cmp
adc
mov
push
clc
sub
dec
xor
les
mov
sbb
xchg
jp
and
js
pop
incb
insb
inc
dec
cmp
jl
cmc
loopne
mov
faddl
and
movsl
je
sub
mov
lea
sbb
push
test
lods
jg
les
adc
stos
inc
xor
stos
aaa
mov
cmpsb
inc
xchg
into
das
jle
mov
pusha
lret
push
pop
jge
mov
addr16
or
into
test
dec
jle
push
outsb
inc
loopne
mov
xchg
jle
mov
aaa
frstor
sub
xchg
jnp
das
sub
cmpps
sub
mov
xorb
or
scas
xor
pop
sbb
xchg
and
cwtl
std
mov
mov
add
jnp,pn
shll
fistl
push
sub
into
mov
or
cmp
xor
lret
idivb
subl
xchg
sti
dec
scas
repnz
ret
xchg
dec
fwait
divl
fsubr
inc
xchg
arpl
mov
mov
data16
dec
mov
clc
sbb
cmp
negl
lret
and
cmp
dec
dec
cmp
in
into
nop
loop
dec
sahf
xor
xchg
dec
push
jnp
dec
inc
movsl
or
pop
mov
xor
dec
dec
cltd
mov
or
loopne
dec
jno
sub
leave
xchg
repz
js
mov
sbb
add
dec
in
xchg
jnp
jbe
fistps
dec
mov
inc
inc
xor
rdtsc
mov
mov
jg
sub
adc
jecxz
push
dec
rolb
loop
cld
adc
xor
imul
jp
std
mov
int
xchg
xchg
into
shll
xchg
test
adc
add
or
decl
fistpl
dec
dec
lods
repnz
cmpsl
mov
dec
or
mov
dec
les
fmuls
mov
cmp
js
mov
pop
sub
jbe
cs
cltd
js
dec
lahf
bound
stos
dec
aad
icebp
adc
aam
dec
sti
dec
lret
inc
and
int3
fs
push
lea
dec
xor
pop
out
fisttps
fnstcw
add
das
xor
stc
cmp
mov
jl
roll
fwait
test
push
push
call
adc
jg
mov
movsl
cmp
inc
into
jno
jl
and
je
inc
or
cli
add
stos
out
jg
out
jg
sub
movsl
lock
test
jl
jae
es
test
jle
mov
inc
pop
pop
data16
cmpsl
subb
dec
push
test
hlt
nop
sbb
das
mov
ljmp
rorb
pop
dec
mov
xor
std
bswap
pushf
lods
bound
insl
icebp
lea
xlat
sbb
dec
aam
clc
js
subb
orb
fwait
or
lret
cmp
cmp
push
pop
divb
popa
aas
inc
dec
mov
mov
mov
add
jl
xchg
xchg
inc
aam
add
push
sub
or
sub
arpl
lds
and
push
shrl
dec
gs
dec
mov
bound
dec
push
dec
cmp
push
inc
test
adc
mov
dec
xchg
dec
jp
sub
lock
sbb
fimull
aaa
dec
out
dec
pusha
test
ret
pop
aam
pop
ljmp
leave
lea
dec
jg
xor
inc
call
mov
cli
or
rorl
mov
mov
aaa
adc
outsb
scas
push
inc
movsb
clc
pop
fidivrs
sub
xchg
loope
dec
mov
xchg
std
sub
xchg
mov
dec
dec
xchg
aad
mov
lds
cmp
cmp
ret
into
sub
dec
fisttpll
movsl
pop
jle
andl
ljmp
dec
jno
jl
je
push
dec
jg
xor
cmp
adc
pop
loopne
in
mov
icebp
xchg
cmp
pop
push
lret
std
shrl
mov
adcl
lret
and
push
sbb
addr16
mov
out
mov
fists
sub
pop
mov
push
out
sarl
sbb
aad
xchg
lahf
xlat
mov
repnz
shr
dec
dec
xchg
clc
das
movsb
or
fcmovnu
and
mov
sti
inc
imul
xor
mov
cmpsl
pop
xlat
mov
cld
cmp
ds
ss
stc
dec
jl
jo
fimuls
pop
push
xchg
clc
leave
fisttps
ret
icebp
xor
push
inc
stos
mov
out
dec
xchg
cmpsl
cmc
xorb
sbb
daa
dec
sarl
les
push
out
add
xchg
fldl
shl
shrb
jnp
aad
int3
jle
inc
mov
in
idiv
scas
pop
enter
xor
jmp
lods
mov
xchg
dec
pop
stos
mov
pop
in
les
stc
scas
mov
jmp
mov
xor
adc
pandn
jg
movsb
pop
push
mov
add
inc
popf
adc
pop
lea
dec
lret
addr16
mov
dec
mov
test
or
jbe
fmulp
mov
push
imul
push
jge
push
pop
mov
outsb
imul
dec
lods
xchg
es
pinsrw
cmp
daa
mov
sub
cld
jb
jnp
mov
xchg
mov
and
sub
dec
sbbl
shll
pop
rolb
insb
mov
xor
jge
clc
jo
dec
add
sub
xchg
icebp
ds
jno
dec
fbstp
mov
shr
dec
add
in
dec
mov
fnsave
punpcklwd
add
jns
inc
aaa
dec
sbb
xchg
cmp
add
dec
jge
push
popf
pop
mov
enter
ret
in
dec
and
lret
dec
push
scas
pushf
jo
aad
mov
adc
fildl
xchg
pop
loope
repnz
jmp
mov
stos
inc
sub
enter
cli
pop
fcmovne
jle
bound
or
xor
jg
jb
lahf
sbb
xor
sub
out
pop
or
xchg
dec
in
and
test
dec
xor
aam
js
adc
test
push
cmc
popa
clc
enter
mov
cmp
movsb
adc
or
xchg
repnz
dec
and
std
dec
mov
add
dec
lahf
sbb
insl
push
jmp
subb
adc
jmp
jae
mov
fstpt
rolb
sahf
addr16
ret
cs
sub
and
push
xchg
inc
mov
sub
lods
xor
add
mov
fwait
data16
repnz
popf
and
dec
fadd
cmpsb
iret
sub
fwait
lock
mov
in
daa
arpl
sti
les
dec
stos
rclb
shr
shll
mov
ret
call
push
or
adc
xor
jo
adc
mov
leave
fistps
fs
popf
jle
movsl
push
or
sahf
pop
jl
outsl
dec
lods
or
das
es
scas
mov
call
lcall
pop
jg
dec
je
int3
sub
pop
or
jns
das
jo
jns
fdivs
push
mov
pop
in
dec
jno
inc
cld
test
push
dec
xor
sahf
dec
sbbl
orb
mov
pop
push
pop
dec
push
lock
adc
dec
movsb
cmp
xor
into
xchg
shll
xlat
dec
iret
aad
push
cmp
adc
push
add
icebp
mov
aam
fwait
jge
mov
xor
aad
lods
mov
push
fstpt
jle
and
notb
inc
pop
repz
clc
dec
movsl
fdivrs
test
mov
lods
ja
out
testb
test
or
lcall
xor
adc
mov
xchg
mov
dec
jb
adc
xor
xor
ror
scas
push
loope
push
jb
fwait
ret
add
xchg
test
rclb
cmp
aam
aas
push
leave
jbe
mov
outsb
xlat
fistl
sub
jb
sbb
ror
mov
mov
mov
sbb
mov
push
stos
loop
mov
icebp
leave
popa
jle
movlps
insb
or
adc
xor
and
sub
push
jbe
mov
jno
and
cli
popa
jmp
pusha
xchg
pop
in
bound
xchg
dec
mov
rcrl
mov
test
cltd
ds
popl
cmp
inc
aam
jns
cmp
icebp
mov
in
add
mov
mov
adc
popa
pop
ss
jg
faddp
jmp
in
jno
les
xor
xchg
jo
mov
in
daa
jl
lahf
adc
pop
sarl
cli
xor
or
arpl
outsb
ffree
pop
bound
jns
fnstsw
add
inc
pop
outsb
inc
adc
dec
sub
aas
cli
ds
jge
sbb
lods
push
mov
adc
jl
adc
mov
loop
add
addr16
jno
in
sti
push
inc
jg
jbe
cmc
push
ss
jne
lods
and
adc
lea
pop
add
aad
mov
es
cmc
push
pop
and
jle
jle
fsubrl
jge
cmp
inc
aam
out
cli
or
pmuludq
cltd
pushf
push
out
inc
out
pop
cmp
ret
aad
cld
push
fwait
jb
pop
pusha
cld
add
fwait
pop
dec
xchg
cld
xlat
jmp
lcallw
xor
aam
int3
xor
lods
jl
loope
call
jg
sub
add
aam
dec
das
cmp
fbld
in
insl
lret
sub
rorb
into
or
lret
inc
and
jbe
add
cli
sub
lock
cmp
push
xor
dec
push
pop
movsl
dec
pop
pop
hlt
lcall
add
mov
push
cmp
adc
pop
cmp
fbstp
cwtl
or
push
out
js
jns
sbbb
aas
dec
jle
aam
pop
jg
insl
fstl
mov
sbb
out
bound
jne
cmp
add
les
mov
jl
lock
es
dec
dec
xor
xchg
dec
ror
xor
mov
push
int3
aad
lds
in
stos
rorl
incb
mov
gs
cld
jno
popl
dec
xchg
mov
pop
sti
lret
adc
outsl
dec
dec
insl
pop
add
push
dec
jae
rcrl
or
push
iret
xchg
sub
push
scas
lods
test
dec
cld
xor
push
dec
sbb
xchg
pop
add
lahf
adc
dec
pop
mov
pop
add
stc
stos
inc
mov
cmpsl
imul
loop
popa
xor
cmp
and
xchg
inc
daa
orl
out
mov
mov
and
xchg
mov
dec
das
sub
int3
inc
adc
push
dec
scas
or
push
fs
mov
lock
pop
addl
dec
push
cmpsl
dec
outsl
and
fildl
xchg
dec
add
aaa
lahf
inc
cli
loopne
push
sub
aad
pop
pop
xor
adc
call
push
lcall
inc
sahf
xor
or
aaa
cli
push
repnz
pop
pop
aad
sahf
movsl
jns
inc
out
dec
les
shl
push
push
scas
mov
arpl
jnp
imul
subl
in
repnz
pop
gs
ret
out
dec
or
rcl
mov
lods
mov
js
jp
mov
inc
cs
xlat
mov
sbb
and
add
pop
in
pop
fcompl
es
mov
xchg
cmp
or
cmpsb
jb
push
adc
xor
jne
movsl
dec
push
das
xchg
mov
xchg
outsl
add
xor
pop
or
add
scas
nop
jne
adc
fistpll
outsl
dec
push
mov
lret
cmc
xchg
dec
insb
mov
xor
mov
dec
dec
sub
nop
lcall
outsl
fimull
dec
mov
mov
decb
mov
push
and
lret
sti
xor
inc
mov
jb
jb
pop
jno
add
sbb
pop
adc
fisttps
shrb
dec
pop
fwait
inc
dec
fdiv
push
and
repnz
xor
lods
mov
mov
shrb
subb
pop
lods
cmpsb
jbe
xor
or
dec
mov
mov
cld
iret
stos
rcr
push
mov
mov
cs
pop
stos
enter
rorl
dec
jge
inc
push
or
pop
push
mov
xlat
dec
dec
dec
mov
loop
jne
sub
lret
and
mov
stos
fisubl
decl
lret
push
sbb
fs
sub
int
xor
lods
mov
mov
and
dec
icebp
adc
addb
sbb
xchg
pushl
mov
test
inc
pop
dec
mov
inc
or
pop
dec
dec
push
mov
mov
inc
aas
pop
and
dec
bound
aam
test
push
in
mov
cmc
ficomps
jle
outsb
jge
out
jecxz
push
test
adc
sub
fs
fcmovu
fs
fdivrs
cs
mov
push
sub
jnp
push
ljmp
ss
fstpl
inc
pop
insb
das
in
hlt
xor
mov
sub
iret
add
push
enter
jl
clc
xchg
in
hlt
inc
and
rorb
daa
sti
dec
cmp
sub
fidivs
cmp
fsubrl
lods
hlt
in
jmp
cmpb
mov
sub
and
popf
cmp
mov
fidivs
dec
inc
outsl
movsb
jo
shlb
inc
sbb
sbb
fcmovnu
mov
in
aam
cld
lods
jmp
mov
and
dec
pop
push
insb
dec
xchg
and
lock
fisttpl
add
xchg
outsl
call
jb
pop
add
cmp
es
outsl
int3
rclb
mov
adc
mov
cmpsb
jecxz
idivl
cs
stos
dec
rcr
jno
adc
aam
iret
hlt
xchg
dec
and
mov
add
cmpsl
test
mov
cli
xor
dec
jg
in
fcomps
lods
fbstp
ficomps
fs
into
mov
cmp
cltd
int
or
xor
cmp
cmp
fildll
inc
add
scas
mov
inc
adc
jb
fidivs
fwait
jl
ja
inc
fwait
sub
cmpsl
xchg
pop
mov
das
fmuls
mov
imul
iret
push
inc
js
xchg
into
dec
push
and
pop
popa
xor
fadds
pop
xor
shl
int
mov
lods
sarl
xchg
xchg
mov
out
repnz
lahf
fidivs
loopne
int
ret
pop
outsb
lds
popf
fldt
add
bound
push
adc
jle
xchg
rolb
sarl
jno
sub
fmul
push
ljmp
xchg
push
sarb
mov
mov
cmp
cmp
mov
sbb
bound
lods
jge
fistps
add
pop
sbb
mov
jb
stc
andl
cmp
int
sbb
call
aad
mov
xor
rclb
in
cmp
jle
movb
popf
cmp
dec
mov
insb
jnp
push
int
xor
xchg
cltd
dec
xorb
push
popa
push
mov
mov
int
mov
push
arpl
lcall
mov
dec
mov
jbe
xor
jp
push
dec
les
dec
mov
push
add
loopne
mov
mov
jo
dec
mov
cmp
xor
sti
pop
dec
daa
fs
xchg
cmp
jno
mov
dec
mov
push
sub
mov
inc
loope
dec
cmp
dec
xlat
pop
jle
jge
xorl
subl
in
mov
dec
adc
push
push
das
mov
jecxz
outsl
adc
cmp
inc
dec
cmp
add
inc
inc
scas
jle
aaa
in
cmpsb
outsb
cs
nop
addr16
cld
fcoms
jne
or
mov
movsb
adc
das
push
out
mov
orb
mov
mov
adc
xchg
xor
out
lret
outsb
fdivl
sbb
testl
push
cmc
add
imul
add
push
cs
sti
add
xlat
cmp
push
xor
jo
and
mov
insb
stos
cld
pop
push
push
xchg
gs
jl
int3
adc
mov
das
rorb
dec
into
push
mov
xchg
aam
clc
push
rcr
mov
ss
push
movsl
imul
jle
fsts
fcmovnbe
shlb
add
lret
mov
inc
push
dec
test
add
test
xchg
or
es
pop
aaa
xor
fnstsw
sbb
mov
jmp
dec
push
add
fimull
out
jle
mov
adc
xchg
inc
lock
add
fstpl
dec
incl
push
dec
das
adc
insl
arpl
cmp
dec
mov
jnp
icebp
or
ja
test
inc
adc
mov
cmpsl
pusha
icebp
mov
pop
push
jmp
in
add
cli
jmp
jp
xor
sbb
xchg
sti
fsubrp
jnp
dec
mov
xlat
add
cmp
pop
repnz
arpl
push
ror
xchg
cwtl
les
mov
dec
jns
jp
dec
imul
repnz
icebp
sub
int
adc
dec
jmp
sbb
out
lcall
xor
les
in
pop
daa
mov
adc
inc
popa
pop
fistps
push
das
aam
mov
shrb
mov
clc
outsb
iret
jl
mov
xchg
or
inc
in
mov
jle
mov
cmp
mov
jg
push
mov
movb
and
cltd
add
fmuls
xor
adc
cmp
aas
popf
cs
daa
sub
ds
mov
scas
lods
out
dec
adc
adc
popf
aam
mov
xor
idivl
sub
xchg
push
out
inc
xchg
xor
push
loop
jle
add
cmp
out
shld
or
orb
push
adc
push
sub
ret
or
jle
mov
inc
das
test
xchg
scas
rorb
push
mov
jl
mov
cmp
mov
rorb
lock
addb
movsl
daa
inc
xchg
pop
mov
test
stc
cld
lahf
int
dec
jl
ja
fbld
dec
push
jg
shlb
ljmp
loopne
mov
adc
std
dec
cmp
inc
push
add
xchg
push
jb
mov
mov
sbb
adc
icebp
lret
dec
jg
sub
or
and
jl
add
sub
inc
das
clc
or
aam
inc
jae
push
pop
push
int
cmp
mov
ds
stc
cmp
mov
sub
jl
mov
push
stc
pop
inc
jecxz
test
push
add
xchg
and
xlat
mov
adc
mov
cs
addr16
mov
or
ds
outsb
dec
adc
push
mov
jle
dec
ljmp
xor
sub
mov
xchg
push
fbld
xchg
fisubl
cmp
xchg
fcompp
dec
inc
sbb
cs
sbb
inc
test
stos
xchg
dec
xchg
push
sbb
in
dec
lds
mov
xor
adc
inc
insb
mov
iret
and
xchg
adc
add
dec
pusha
outsb
std
sub
adc
pop
imul
repz
mov
inc
jle
daa
dec
push
lods
jg
pop
pop
inc
fstpl
pop
popa
jbe
scas
ret
sub
push
sbb
dec
jb
and
in
dec
jp
sbb
sti
mov
cmp
sub
sbb
test
daa
dec
jle
mov
dec
dec
lahf
int
out
push
lea
add
je
mov
push
fcmovnu
pop
fcmove
push
dec
xor
stc
mov
stos
gs
lahf
inc
movsb
popa
out
dec
and
xor
mov
mov
pop
cmc
into
xor
repz
mov
aam
in
push
adc
dec
aaa
aam
daa
push
dec
repz
out
pop
aaa
movsb
dec
dec
or
js
dec
mov
dec
add
adc
in
shl
mov
xor
dec
pop
xor
dec
or
aaa
cmpsl
dec
cmc
std
or
dec
or
orl
cmp
lods
dec
pop
push
hlt
jnp
sub
xchg
dec
sub
mov
dec
xor
xchg
and
jns
jg
inc
pushf
aam
dec
jg
scas
jl
pop
jl
push
in
cmp
dec
lds
pushf
cmc
fbstp
dec
hlt
mov
clc
push
lods
lods
adc
cmpsl
dec
aam
mov
fwait
scas
dec
mov
jbe
jmp
sub
jg,pn
mov
jne
xlat
mov
pop
cli
add
or
cmp
inc
dec
faddp
jb
dec
dec
push
and
sbb
add
ret
clc
dec
test
xchg
insb
jl
mov
shl
mov
mov
fists
dec
out
aam
stc
pop
jno
sub
pop
into
rcll
pop
inc
add
xchg
lds
outsl
cmp
dec
dec
jp
rol
dec
push
fwait
inc
pop
xor
dec
lahf
sub
jne
cmpb
pop
jmp
dec
xchg
ljmp
lock
rcl
pusha
push
addl
insb
sbb
sbb
cwtl
dec
xchg
nop
sub
test
and
test
pop
test
call
adc
imul
dec
idivl
das
sti
push
out
inc
dec
push
nop
jmp
out
xchg
les
dec
fists
and
pop
and
push
or
out
xchg
enter
aam
push
arpl
mov
jbe
push
mov
std
sahf
or
xchg
push
insb
push
mov
dec
inc
mov
and
aad
cs
push
pop
dec
shll
pop
xchg
jmp
jb
pop
pop
notl
pop
mov
je
daa
pop
dec
adc
jne
movsl
jns
mov
push
in
pextrw
pop
dec
adc
pop
add
rorl
lock
dec
mov
add
lret
pop
subb
mov
push
and
int
mov
popf
mov
xchg
and
add
mov
inc
gs
arpl
test
fcompl
in
jecxz
jl
imul
add
cmpsb
and
insl
push
jo
jb
mov
sbb
and
sub
les
aad
xchg
movsl
aam
pop
cmp
sahf
scas
test
lahf
scas
pop
dec
scas
xor
shll
and
pop
dec
jbe
fwait
add
fstps
pop
xor
leave
int3
les
inc
rcll
out
dec
in
enter
xor
mov
mov
push
sub
pop
pushf
mov
stos
scas
dec
dec
js
loope
cmp
mov
add
notl
das
repnz
xchg
jl
mov
jne
sahf
cmp
inc
jno
loopne
adc
pop
sbb
mov
add
sbbl
out
add
ds
adc
add
fisubl
icebp
sbb
in
cwtl
dec
mov
mov
xor
negl
into
nopl
sub
inc
movsb
xor
orb
out
gs
jmp
dec
rorl
push
outsl
stc
out
mov
test
cmp
aas
movsb
cmp
xorl
fs
or
sbb
pop
and
data16
cmp
nop
cmc
and
iret
jg
mov
mov
push
imul
jl
lret
int
mov
test
push
scas
fs
adc
pusha
mov
sub
out
jg
gs
pop
aam
or
call
cmp
outsl
cli
xor
scas
cmp
hlt
inc
mov
lods
jl
adc
jge
outsl
mov
aaa
pop
int
cmc
mov
mov
aad
aas
and
jo
test
rorb
cmp
push
lds
push
xor
cmpsb
xchg
jae
add
addr16
add
test
dec
sbb
aad
dec
and
mov
push
das
dec
push
sbb
pop
cld
dec
lret
inc
and
sbb
bound
pop
imul
outsb
jp
dec
repz
mov
lds
enter
rorl
aas
les
cmp
iret
xor
test
lahf
mov
fisttpl
push
dec
add
imul
stos
jl
cmp
push
rolb
inc
push
push
in
jmp
cmp
xor
sahf
leave
sbb
movsl
xor
jg
testb
pop
rorl
push
ljmp
push
dec
mov
xchg
fldt
inc
push
cmp
mov
pop
push
sub
cmp
stc
rcll
test
pusha
dec
mov
fadds
add
cmp
sub
push
mov
hlt
cmp
and
jb
cmp
fimuls
mov
add
pop
mov
xor
dec
and
pop
ret
xlat
loope
fcomp
mov
int3
shrb
movsl
jp
pushf
lahf
dec
dec
xor
pop
pop
into
pop
xlat
adc
mov
sbb
inc
sub
jle
push
lock
mov
fwait
push
inc
fisubrl
jns
cmp
les
cmp
ja
or
push
pop
push
cmp
push
push
stc
and
iret
add
xchg
ljmp
rcll
mov
sub
sti
and
sbb
push
jle
incl
jmp
jbe
cmp
lahf
cltd
dec
stc
xor
mov
add
scas
cmpsb
jp
or
out
dec
jb
rorl
push
pop
dec
or
pop
mov
push
js
mov
outsb
push
cwtl
xchg
ds
cs
decl
or
pop
jne
mov
xor
mov
or
dec
xchg
sahf
mov
dec
ljmp
mov
cs
lret
pop
mov
outsl
jno
shlb
jno
or
jg
rorb
daa
fiaddl
xor
xor
scas
xor
mov
scas
jle
dec
fs
xchg
aaa
inc
and
test
xchg
into
mov
adc
cmp
dec
lods
stos
lcall
inc
dec
pop
rcrb
push
jbe
dec
xchg
gs
mov
sub
ret
dec
xor
idiv
or
push
dec
sbb
stos
and
dec
rolb
inc
ljmp
dec
ds
push
out
fbstp
ret
jg
fdivl
jb
adc
jge
add
adc
mov
dec
adc
cmp
and
jp
add
es
imul
leave
mov
or
out
mov
popa
cmp
xor
pop
out
loopne
xchg
adc
fwait
dec
pop
mov
popf
dec
jecxz
xchg
xlat
pop
push
dec
popa
in
icebp
add
cs
mov
dec
xchg
dec
push
lcall
mov
sarb
lods
aas
dec
out
popa
push
sbb
add
lret
adc
dec
xchg
xor
sbb
mov
pop
mov
or
dec
sub
mov
pushf
in
fmuls
rcrl
mov
pop
and
addb
mov
mov
outsb
inc
sbb
xor
pop
lret
cli
mov
mov
aam
loope
mov
xchg
hlt
and
lahf
add
inc
jbe
sub
mov
mov
sbb
dec
cmc
fidivl
clc
dec
idiv
ret
jo
jmp
jno
or
dec
imul
stos
pop
into
xor
shll
dec
adc
daa
jmp
pop
dec
or
pop
enter
dec
xor
into
add
fcoms
data16
jo
dec
dec
mov
xchg
pop
dec
pop
cld
dec
sub
adc
dec
mov
cli
dec
clc
call
jl
dec
fisubrs
cmpsb
ret
dec
mov
fldcw
repnz
pop
daa
pop
hlt
iret
js
cmp
mov
cmp
test
xor
dec
out
fld
test
jae
inc
dec
mov
ffreep
push
push
roll
test
test
negl
dec
sbbl
sbb
pop
pop
xor
js
jae
dec
adc
add
fmull
xchg
dec
mov
std
xchg
xchg
pop
or
sub
fwait
mov
aas
inc
mov
test
inc
fnsave
icebp
push
cmp
inc
push
cmp
jae
into
xor
lahf
xor
push
iret
dec
jg
mov
pop
inc
call
adc
add
lret
dec
jle
push
push
push
xchg
subl
leave
jo
xor
and
into
in
loop
filds
sbb
js
sbb
stos
cld
sarl
into
mov
fbld
mov
fwait
add
cltd
cmpb
es
inc
dec
dec
adc
xchg
xchg
push
out
jle
rclb
xor
xchg
or
mov
sti
in
ja
iret
cmc
dec
cmpsb
in
loop
jg
shrb
pop
out
jne
gs
shl
and
stos
inc
ds
ret
jno
dec
or
inc
mov
add
dec
inc
push
push
pop
xor
enter
xchg
cmpl
and
jae
and
loope
mov
mov
fidivrl
xchg
scas
pop
lret
es
sahf
push
insl
fwait
inc
shrb
xor
into
and
mov
add
insb
push
sub
jl
out
mov
jg
lret
sbb
imul
adc
lcall
jle
and
ja,pt
add
jle
outsb
or
stos
push
pop
inc
mov
pop
cmp
sbb
and
xchg
lea
and
dec
adc
pop
dec
inc
mov
and
inc
cmp
es
cli
dec
imul
mov
aas
fldenv
lods
fnstenv
fstpl
jg
pop
push
int3
idivb
rcrb
into
cmpsl
pop
or
sub
cld
gs
test
xor
adc
js
inc
jl
sub
xchg
adc
xor
add
into
aam
lds
js
cmp
gs
std
pop
push
pop
incl
xchg
inc
jl
jg
bound
xor
shrl
inc
int3
std
lea
gs
pop
xchg
addr16
sbb
xchg
jle
filds
loop
jbe
dec
scas
pop
push
pop
inc
mov
xor
cs
jle
or
jl
or
inc
cmp
pop
rorl
out
mov
clc
ds
inc
mov
int
bound
inc
arpl
mov
lahf
clc
sti
test
jle
jl
flds
cld
loope
fnstcw
mov
adc
mov
mov
dec
popf
mov
aam
sbb
pop
popa
xchg
pusha
push
rcll
pop
fdivrs
fistpll
cmpsl
mov
push
ljmp
mov
xchg
repz
fisubs
mov
dec
sub
in
negl
sbb
ret
loopne
scas
hlt
jle
fcom
repnz
cmpsl
inc
jg
mov
jge
je
dec
and
sbb
dec
xchg
and
push
push
mov
mov
sub
dec
inc
outsb
mov
cmp
adc
mov
inc
lret
js
movsb
mov
xor
sub
pop
test
je
push
and
mov
fmuls
outsl
add
daa
inc
jbe
movsb
repz
mov
scas
xor
gs
stos
sub
dec
out
aam
xor
fmull
mov
xor
jecxz
dec
inc
jno
aas
sbb
pop
repnz
dec
std
or
add
mov
adc
jmp
push
cmp
dec
push
ret
std
sub
dec
pop
add
call
mov
les
push
cmpsb
xchg
testl
mov
test
fistps
dec
inc
or
sub
xchg
notb
fsubrs
sub
or
aas
daa
fiaddl
pop
popl
jno
fwait
sti
push
decl
test
jnp
cmp
rorl
leave
lods
in
mov
outsb
pop
dec
gs
out
fisttpll
push
clc
les
lahf
mov
ljmp
pushf
je
mov
test
dec
xchg
mov
test
xor
lock
sub
or
jns
mov
outsb
inc
cmpsl
lock
and
dec
and
insl
rcrl
in
jl
dec
pop
aas
or
dec
in
sarl
jne
mov
dec
xchg
cs
add
push
stc
mov
jnp
jle
jmp
shlb
push
xor
or
das
dec
xchg
mov
dec
mov
xchg
call
jbe
dec
ds
xchg
bound
addr16
dec
xchg
sbb
cld
push
repnz
imul
cmp
inc
mov
pop
xor
jne
push
orb
push
xor
out
push
cpuid
adc
push
cs
pop
adc
cmp
sub
mov
hlt
dec
inc
negb
clc
in
insb
pop
sahf
mov
dec
ja
adc
arpl
sub
add
dec
insb
push
xchg
stc
daa
aad
fs
ret
and
push
insb
in
enter
lods
dec
or
dec
sub
mov
adc
push
je
dec
jge
les
mov
dec
in
inc
dec
mov
lds
dec
pop
pop
cli
mov
pop
ja
insl
fdivs
inc
cltd
pop
push
fs
push
jp
cmpsb
mov
cmpsl
jle
rcl
mov
addr16
dec
push
sub
push
mulb
leave
in
rcrl
pop
inc
dec
and
mov
test
insl
pop
push
addr16
dec
hlt
inc
icebp
ds
sub
fs
cld
pop
jo
loop
xchg
dec
and
sahf
dec
push
pop
ficomps
jl
pop
repnz
sbb
cmp
cwtl
cmpsb
shr
js
icebp
sub
xchg
fbld
jne
and
pop
mov
nopl
cmpsl
inc
imul
scas
fimuls
aaa
cwtl
icebp
rorl
fcom
dec
mov
dec
iret
fstpt
in
xorl
adc
inc
nop
int3
rcrb
inc
movsb
add
andb
cmp
sub
push
shlb
mov
ss
cmpsb
mov
imul
lahf
xchg
inc
push
aaa
les
out
cli
push
shlb
or
popa
psraw
xchg
push
les
dec
push
stc
push
mov
jg
insl
sbb
sbb
arpl
and
add
aam
enter
and
cmp
lock
jb
ds
push
ret
adc
int3
fdivp
leave
dec
loopne
enter
or
lods
or
cmp
push
jno
dec
dec
insb
popa
dec
incb
daa
jo
in
mov
add
add
sarb
das
scas
ret
xor
aas
data16
sub
test
xchg
shrb
pop
mull
std
outsb
inc
cltd
or
add
es
sub
repnz
jl
lret
sub
xchg
loop
mov
outsl
arpl
mov
jno
jbe
nop
sbb
mov
dec
paddq
and
mov
inc
ja
xchg
rorb
adc
pop
pop
pop
xor
nop
test
dec
push
outsb
mov
into
jl
mov
inc
adc
pop
jecxz
jmp
jle
ficompl
add
lret
jo
ret
xchg
sahf
and
insl
dec
sbb
addb
dec
clc
cwtl
sub
jne
leave
daa
dec
mov
push
add
xor
push
mov
fwait
outsl
dec
and
scas
out
adc
das
cli
insl
test
push
or
movsb
sub
sarb
jecxz
addr16
stos
into
push
or
scas
inc
dec
mov
filds
out
cmp
clc
imulb
dec
and
ss
add
fucomi
push
cmp
cmpsl
imul
xchg
mov
fs
outsl
mov
mov
shl
dec
mov
inc
ficoml
stos
pop
jne
into
fsts
add
sbb
nop
scas
push
pop
lret
adc
push
xchg
rorb
scas
stos
xor
jae
jecxz
inc
xchg
xchg
cmpsb
cmc
sub
sahf
in
cmp
adc
mov
lret
icebp
arpl
ja
pop
dec
inc
pusha
jbe
cmp
sbb
dec
xchg
aam
inc
int3
push
andl
fidivrs
and
in
insl
sti
cmpb
outsl
aaa
cmp
insl
scas
cmc
add
jo
in
adc
call
dec
pusha
in
mov
aad
popa
int3
stc
les
xor
dec
mov
sub
cmpsl
js
cltd
mov
out
add
je
dec
mov
adc
out
or
cmp
pop
dec
bound
xchg
aas
push
stos
dec
popf
pop
nop
stos
ja
dec
cmc
mov
push
ljmp
outsb
dec
adc
dec
aam
and
addr16
pop
lahf
ljmp
dec
adc
roll
dec
fisubl
fwait
out
xor
dec
fdivs
inc
inc
dec
jo
dec
push
test
dec
das
dec
sbb
sbb
aaa
sti
dec
sbb
jbe
dec
addr16
or
dec
sbb
shl
sarl
loop
dec
mov
fistpll
shl
pop
or
mov
add
mov
into
lret
gs
popa
mov
mov
dec
mov
adc
xlat
mov
xchg
mov
cmp
aam
pusha
nop
jns
push
dec
pop
loop
add
outsl
add
mov
mov
mov
repnz
dec
outsb
pushf
dec
mov
lds
sbb
stos
shll
xchg
cmpsb
xchg
or
iret
jo
jge
mov
lret
shll
push
sti
inc
jge
cld
mov
mov
mov
cmp
pop
mov
negl
dec
dec
pusha
cmp
mov
bound
repnz
cmp
add
movsl
fwait
xchg
repnz
adc
jg
cmpb
mov
call
xor
mov
orl
bswap
jne
mov
aaa
jle
push
scas
fimull
sub
clc
aas
cmp
cmc
test
mov
jno
cmp
xor
repz
fimull
cmc
addr16
call
cltd
ja
mov
push
or
lods
fdivrs
xchg
cmp
jne
hlt
push
lock
call
stos
and
addr16
enter
sbb
pop
xor
inc
stos
lahf
jle
sbb
stos
insl
clc
cmpsb
push
add
adc
subl
clc
sub
out
pop
addr16
loop
dec
fcmove
sub
xchg
lcall
gs
ss
fsubrs
test
loope
cmp
rcrl
enter
stos
pop
paddb
stos
or
fdivr
mov
or
movsb
xchg
sbb
icebp
rep
xorb
add
jl
std
inc
cmc
jb
daa
test
shll
out
jl
fbld
fdivl
xlat
jo
loopne
rclb
adc
rorb
shrl
scas
dec
and
and
addl
out
add
jno
pusha
dec
in
dec
inc
mov
pop
popa
sub
mov
test
test
stos
dec
out
cmp
mov
cmpl
iret
sub
cmp
clc
pop
std
imul
dec
dec
add
sub
shl
shrl
sti
mov
xchg
jmp
xlat
adc
pop
jne
dec
shlb
clc
daa
push
dec
movb
rorl
sub
mov
cs
lods
cmp
push
push
xchg
jl
jg
dec
ljmp
shlb
add
mov
out
push
mov
les
push
decb
dec
cmp
mov
jnp
cmp
mov
push
mov
mov
inc
rorb
jl
jns
mov
dec
cmc
jo
cmpb
aam
imul
cmpsl
repz
mov
adc
push
adc
in
sub
jg
xchg
mov
jbe
lcall
adc
pushf
xor
cmp
and
test
fucomi
loope
mov
aam
mov
enter
cld
cmp
xor
mov
jns
dec
adc
outsb
push
jnp
rcl
loope
negb
dec
mov
and
fmull
pop
push
in
jecxz
add
aam
push
push
mov
pop
dec
adc
pop
dec
loopne
inc
pushf
add
push
dec
xor
insb
js
movl
inc
enter
or
mov
in
jno
ret
iret
push
out
mov
mov
cltd
int3
hlt
lock
and
sub
xchg
dec
repz
pop
nop
loop
lods
cmp
dec
sub
repnz
neg
lcall
fisttpll
add
inc
jl
pop
and
push
dec
out
push
cmpsl
push
in
dec
pushf
add
cmp
jns
lahf
in
cld
lds
jl
inc
jae
inc
add
sub
das
fisubrl
stc
dec
jl
in
cmpsb
or
lods
adc
fildll
fildll
int
test
pop
dec
push
mov
mov
mov
cmpsb
dec
inc
nop
in
sub
aad
shlb
sti
ret
iret
movsb
aas
mov
jp
loopne
lods
xchg
fistl
pop
jl
mov
js
mov
dec
push
pop
and
cmp
in
lret
sub
xchg
je
inc
dec
or
ljmp
pop
pop
inc
push
leave
daa
and
arpl
adc
dec
add
mov
rclb
push
in
sti
ds
jle
or
adc
cmp
cmp
dec
xchg
shr
push
xchg
mov
inc
rcrl
clc
add
adc
dec
cmp
dec
rdpmc
jg
xchg
addl
dec
rol
mov
sub
sahf
cs
pop
push
in
adc
push
sub
mov
loop
jae
mov
out
sti
pop
dec
pusha
ret
adc
inc
scas
fimull
cmpsb
cmpsl
iret
mov
repz
jp
add
and
mov
lea
jp
sub
inc
dec
adc
xorb
and
add
shrl
push
and
dec
aaa
out
jecxz
xor
cs
in
inc
repz
sub
mov
notb
jle
xchg
mov
mov
out
movsl
or
mov
loop
jg
jne
dec
add
movsb
push
mov
cmpsb
push
clc
dec
icebp
adc
xchg
movntq
out
pop
das
insb
out
push
and
rorb
bswap
lea
cmp
lretw
jge
jo
mov
pop
mov
dec
ret
pushf
pop
mov
and
mov
outsb
loopne
das
bound
dec
mov
sbb
dec
dec
lds
dec
sbb
sbb
outsl
adc
pop
aas
lea
lods
out
dec
pushf
dec
out
movsb
jnp
or
jl
dec
adcl
push
jecxz
out
ja
sbb
dec
mov
aaa
or
xor
in
pop
add
roll
hlt
int
movsl
xor
jecxz,pn
dec
xchg
rorb
inc
inc
shlb
repz
mov
push
inc
icebp
sbb
int3
mov
dec
xchg
pop
sbb
adc
inc
dec
loope
dec
cmpsb
out
iret
xchg
pop
popf
cmpsb
bound
enter
pushf
cs
dec
mov
arpl
sbb
xlat
out
dec
repnz
mov
dec
dec
dec
fcmovne
xchg
in
mov
pop
lret
add
rorb
bound
ja
iret
dec
mov
ret
dec
arpl
in
sahf
dec
dec
or
xchg
imul
dec
fbstp
push
movsb
fsts
xor
add
dec
int
clc
jb
hlt
aaa
dec
xor
cltd
push
or
add
js
push
dec
fadds
mov
iret
cmp
xlat
dec
fmulp
adc
nop
imul
dec
dec
cmp
mov
mov
adc
jb
pop
aam
inc
pop
fs
adc
jl
jne
jl
test
xor
bound
test
les
mov
cs
inc
inc
cvttps2pi
loope
adc
insb
add
out
jo
dec
pop
loop
in
fcompl
cltd
push
cld
inc
dec
jl
lret
adc
repz
push
add
push
inc
jns
cmp
pusha
mov
dec
xchg
repz
das
imul
fcomip
pop
dec
lds
adc
mov
inc
or
dec
pop
insb
rclb
arpl
or
dec
adc
scas
mov
sub
cmpsb
mov
or
mov
orl
daa
gs
int
clc
fnsave
fadds
mov
lret
pop
loope
mov
outsl
sub
push
dec
pop
jns
add
out
sub
jmp
popa
or
add
sub
mov
dec
mov
ret
loope
lahf
lcall
rorb
out
sub
stc
adc
stos
cmp
and
fwait
dec
adcl
cmpsl
dec
lea
mov
add
pusha
sub
mov
sub
testb
enter
out
cmpsl
es
in
push
sub
or
int3
das
es
mov
stc
iret
in
leave
orb
push
xchg
repz
mov
cld
mov
rcrb
aaa
fdiv
xor
iret
hlt
add
push
out
test
jp
mov
xchg
push
in
dec
ljmp
ds
inc
or
dec
icebp
pop
mov
dec
push
dec
psllq
lods
push
xchg
dec
sub
int3
js
dec
xor
dec
adc
and
cmp
popl
dec
pop
jno
push
push
test
dec
pop
add
cwtl
sarl
cmp
ljmp
add
dec
dec
mov
push
or
les
sahf
mov
shlb
imul
mov
mov
xchg
cmpsl
mov
jmp
adc
jbe
xor
fdivs
popf
ljmp
ret
cs
test
dec
outsl
or
jg
gs
dec
xor
shll
je
test
pop
mov
mov
dec
mov
cmp
mov
andb
push
push
adc
leave
sahf
xchg
bound
rorb
sub
fcmovnu
mov
jle
scas
or
leave
popf
pop
inc
nop
inc
das
jb
push
lret
insl
adc
push
loopne
insb
dec
mov
cmp
in
dec
mov
sti
mov
sbb
jnp
outsb
mov
scas
and
into
jge
cmpl
mov
cli
shr
fwait
mov
scas
dec
sbb
jle
test
xchg
lea
push
mov
mov
dec
repz
jae
and
adc
dec
je
push
mov
aad
dec
fsubrl
fildl
mov
sub
addr16
cld
test
pop
cld
aaa
shrb
loop
mov
mov
cmpsb
inc
fistpll
jbe
mov
jb
fisttps
dec
rol
cpuid
rolb
mov
sbb
mov
sub
les
aas
xchg
dec
js
lods
mov
dec
jnp
xor
pop
out
and
ljmp
test
sub
jnp
mov
out
sarb
rcll
jl
aam
lods
dec
shlb
data16
lds
mov
mov
dec
pop
inc
dec
and
fstps
dec
testb
cld
movsl
dec
push
mov
xchg
fsubp
jne
push
test
dec
pop
enter
iret
dec
mov
add
add
xchg
pop
xor
add
mov
add
iret
dec
fcomp
dec
dec
loope
adc
pushf
lods
mov
sarb
cld
mov
cmpsl
imul
and
xchg
and
mov
decb
sub
cmpsl
inc
inc
xorb
xchg
jbe
push
sub
mov
dec
test
neg
xor
inc
movsb
orl
and
decb
pop
mov
ss
adc
push
push
outsl
cmc
dec
push
jae
push
mov
push
mov
sub
stos
pop
mov
out
jecxz
mov
cmp
dec
xchg
fdivp
mov
mov
pop
dec
push
ret
push
push
je
jecxz
dec
mov
int
scas
cmp
out
and
clc
pop
das
int3
dec
cmp
dec
xchg
repz
fistl
inc
inc
mov
icebp
lods
mov
jmp
xchg
xchg
bound
scas
jle
icebp
inc
push
arpl
lea
lret
je
aas
and
jmp
js
test
ds
clc
or
lcall
jno
fistps
xchg
outsl
dec
aam
cwtl
iret
stc
mov
enter
jae
fs
jge
fildll
and
jg
dec
iret
xchg
jl
arpl
inc
jo
ds
adc
repnz
ret
sbb
dec
das
jle
or
pop
and
push
xchg
loop
push
clc
mov
jg
inc
cmpxchg
fwait
add
jg
add
out
push
and
add
mov
jge
and
stos
icebp
mov
jb
dec
push
jl
pop
stos
out
js
into
stc
ret
cmpsb
cwtl
es
push
mov
lahf
das
pop
jl
fbstp
ficoms
lret
push
sbb
sbb
jg
imul
inc
lcall
nop
stos
mov
xor
movsl
adc
push
jg
movsb
fwait
cwtl
das
push
xchg
enter
push
pop
cmp
mov
xor
or
ss
dec
cwtl
inc
js
outsb
xchg
adc
push
fcmove
in
and
jns
cmp
cmpsl
adc
push
jp
adcl
cmpsb
dec
lods
dec
aaa
or
dec
test
mov
mov
roll
clc
xchg
sbb
push
dec
sbb
mov
mov
cld
xor
pop
lcall
into
adc
jne
mov
dec
pop
stc
repz
cmp
add
pop
inc
aas
icebp
in
dec
pop
stos
add
stc
inc
mov
call
enter
test
stc
fdiv
add
repz
dec
adc
push
dec
xor
jbe
mov
daa
xchg
fldenv
lds
mov
dec
xchg
lret
jmp
inc
mov
dec
xchg
ljmp
dec
test
inc
fs
dec
or
aaa
mov
ret
in
fists
jbe
sbb
into
shll
bound
dec
fsts
mov
add
mov
enter
dec
inc
xor
sbb
adc
and
lds
je
out
xchg
xor
out
add
movsl
add
ja
daa
ret
call
dec
lret
adc
jbe
scas
dec
mov
mov
cmp
jo
cmp
sub
test
sub
sub
sbb
leave
dec
mov
xor
sub
sub
add
dec
mov
iret
push
jae
arpl
dec
jne
sbb
pushf
adc
aaa
stos
movsb
fcomps
icebp
mov
cs
mov
adc
repz
out
push
pop
mov
add
addr16
push
mov
sti
push
shlb
je
inc
pusha
insb
pop
xchg
sbb
push
fsts
push
sti
jle
sbb
test
js
sbb
mov
int3
test
pop
add
dec
testl
notl
jg
mov
mov
lods
lcall
mov
jg
std
cld
mov
lret
shll
dec
xchg
or
sub
fisubrl
leave
xor
fcoml
jl
jns
xor
xor
popa
pop
and
pop
test
sub
xchg
jmp
enter
jl
cmc
inc
ja
cs
ds
add
push
sti
rol
sti
aaa
push
cwtl
out
mov
scas
cmp
test
icebp
gs
xchg
lret
cmp
outsb
xchg
cmp
setne
imul
lods
je
adc
inc
add
mov
jle
jle
dec
cmp
and
idivl
out
sarb
xchg
cmp
and
cmp
xchg
cltd
ds
mov
fisubs
fnstcw
xchg
ret
xchg
sub
push
out
int
int
stc
lds
xor
std
or
popa
lret
jle
inc
mov
dec
sbb
cmc
popa
dec
int
fs
call
cmp
pop
jae
or
mov
lret
sbbl
out
xchg
dec
test
mov
dec
inc
adc
mov
adc
std
out
into
dec
mov
dec
out
fs
cmp
or
in
push
mov
sbb
dec
aaa
xchg
negl
xchg
or
mov
xor
sbb
sub
lea
fildl
into
dec
add
pop
mov
xchg
movsb
shl
push
mov
xchg
sbb
push
mov
or
dec
lea
outsl
stos
cli
push
pop
jl
jb
dec
mov
loop
lds
ljmp
jl
mov
cmpsl
fwait
add
sbb
pop
pop
jecxz
fstps
jp
testl
call
push
ss
or
dec
bound
sbb
dec
xor
dec
lret
mov
pusha
test
inc
xor
cmp
bound
dec
sbb
jecxz
fisubl
dec
loop
fwait
mov
test
push
sbb
test
jbe
dec
mov
mov
xor
push
sub
jb
popa
jbe
cld
dec
xchg
sub
mov
xchg
roll
cmp
sbb
mov
in
dec
jnp
jbe
repnz
das
pop
dec
aas
test
inc
andl
into
sbb
in
lret
daa
or
push
xchg
mov
mov
pop
cmp
fists
and
pop
jle
pusha
out
rcr
inc
cmp
lods
push
add
jg
sbb
push
sbb
dec
pusha
daa
jl
mulb
inc
xlat
call
aad
add
pop
push
pop
mov
neg
cmp
jmp
stos
or
jle
aam
mov
adc
sarb
fiadds
dec
dec
jp
inc
lea
cmp
icebp
jle
lahf
out
pop
bound
add
sub
ljmp
rorb
xor
aas
inc
inc
in
mov
lahf
pop
push
call
pop
dec
loop
xchg
cld
or
sti
leave
into
and
out
cmp
xor
cwtl
jl
push
dec
out
pusha
jno
imul
jae
mov
jl
mov
mov
aas
loopne
push
jge
fwait
lods
jmp
mov
add
mov
lods
leave
cmpsl
aaa
cmp
mov
dec
in
outsb
adc
dec
cmp
sub
out
lret
pop
lret
fwait
mov
std
jno
push
rolb
sub
and
jecxz
mov
dec
lock
push
push
pop
test
pop
cmpsb
movsl
dec
xchg
mov
fdivrl
and
rolb
hlt
dec
sbb
mov
ja
jbe
into
and
inc
movsb
dec
outsl
xor
mov
gs
js
and
mov
jle
cs
push
ret
mov
test
and
scas
pop
repz
mov
push
mov
pushf
cmp
add
push
sub
push
ss
jg
lret
jns
and
lret
mov
jno
dec
ja
xchg
outsb
sarb
insl
dec
xchg
adc
dec
xlat
stos
push
xchg
mov
inc
xchg
jle
jle
inc
xor
xchg
inc
mov
cs
mov
clc
jo
xor
sub
fnstsw
pushf
repnz
js
fists
fdivrp
xchg
cs
jle
sub
pop
xchg
rcrb
xchg
ljmp
inc
xchg
das
and
outsl
scas
out
ret
pop
push
in
xchg
js
jge
or
jecxz
imul
adc
xchg
dec
popf
cltd
out
inc
sbbl
je
dec
repnz
sti
xor
and
cs
jmp
ret
mov
dec
add
loope
fidivrl
xor
js
inc
and
cmpsb
test
dec
pop
imul
sti
fistl
je
inc
lahf
mov
fimuls
mov
adcb
incb
movsl
pop
push
movsb
lret
push
mov
fisttpll
sub
dec
ljmp
and
mov
enter
inc
cli
es
arpl
mov
jno
dec
or
xchg
insb
dec
mov
stos
inc
fmull
push
sti
jle
cltd
dec
cmpsl
mov
aas
and
addps
inc
sbb
and
das
lea
lock
imul
daa
into
div
mov
sbb
xchg
dec
call
dec
insb
inc
scas
inc
xchg
in
jb
dec
notb
inc
pop
push
or
sub
dec
into
and
in
and
inc
dec
ljmp
cmp
adc
dec
mov
lret
roll
ret
js
cltd
fistpl
inc
stos
faddl
adc
outsl
and
mov
adc
dec
fldcw
or
imull
popf
jmp
jbe
dec
add
scas
add
dec
xor
or
mov
and
xchg
dec
aad
out
xchg
lret
lahf
lea
imul
dec
sub
sub
xor
push
pop
ja
xor
popa
dec
insb
out
inc
push
jl
orb
imul
mov
xlat
xchg
in
dec
clc
push
xor
jbe
push
popf
dec
ss
jno
ficomps
adc
and
outsb
pop
nop
insl
adc
dec
popa
cli
aaa
fstl
scas
and
and
push
jg
dec
stos
mov
popa
jl
sub
pop
push
stos
mov
jmp
iret
sub
imul
dec
inc
daa
and
repz
dec
popl
dec
inc
sub
lahf
jge
loope
rorl
mov
sbb
mov
bswap
dec
adc
incl
dec
das
jg
call
dec
movsl
dec
shlb
xor
push
fimull
clc
scas
mov
int
inc
dec
push
iret
ret
jnp
mov
pop
pushf
into
push
stos
jle
imul
loope
dec
in
dec
dec
hlt
xor
leave
cltd
lcall
mov
adc
inc
push
loopne
cmc
fmuls
xor
jl
popf
mov
xor
nop
jl
movsb
xor
les
or
and
jbe
jne
mov
pop
out
adc
mov
dec
mov
lods
cmp
loop
out
fisubrs
cmp
jle
shrb
mov
mov
cmpsb
push
push
cmp
mov
xor
repnz
mov
inc
fsubs
int3
push
sbb
pop
int3
jbe
and
xor
fldt
iret
xorl
sub
pop
inc
cmp
fs
aas
jmp
adc
mov
in
out
leave
ret
xchg
dec
push
and
fisttps
pop
loop
xor
sbb
insl
cmpsb
or
jl
outsb
mov
dec
mov
and
dec
orb
jb
stos
push
dec
xor
bswap
mov
cltd
andb
cmpsb
ficoml
cmp
lcall
add
pusha
and
and
mov
sahf
cmp
loop
call
test
sbb
xor
movb
xor
mov
sbb
mov
into
int
dec
shll
cmovg
mov
xchg
movsl
ja
adc
leave
push
addr16
das
push
xor
in
ret
jb
sbb
sub
sahf
iret
fmuls
lock
dec
xchg
addl
popa
add
movsb
rorb
bound
fsubl
jmp
dec
stc
std
dec
test
cld
pop
dec
jne
jecxz
rcr
pop
sub
xor
insb
dec
dec
xor
inc
mov
fwait
gs
xchg
mov
aas
dec
jg
sub
in
add
xchg
sti
pop
dec
movsb
shr
pop
sub
insl
dec
insl
sbb
jae
cmpsb
dec
push
xchg
out
mov
dec
push
pop
in
fisttps
mov
rorl
jle
xchg
lahf
test
dec
ficoms
push
leave
cwtl
dec
fmull
pop
mov
xchg
jle
adc
sti
gs
fildll
dec
cmp
push
scas
movsl
cld
mov
hlt
and
test
lods
cmp
aad
sahf
mov
add
mov
xor
lods
push
dec
into
movsl
cmc
mov
push
inc
int3
jle
subl
mov
cmp
xchg
pop
xchg
push
dec
in
inc
push
sub
daa
js
xchg
pop
jl
cltd
xor
pop
sub
jg
popl
and
mov
pushf
inc
repnz
mov
cmp
cmpsb
push
adc
mov
lahf
cld
fwait
mov
fcmovnu
and
dec
into
clc
popa
fucomip
les
loopne
mov
shl
aaa
jg
cmp
dec
push
test
lahf
inc
push
lcall
lret
mov
dec
jnp
dec
gs
or
lods
cltd
dec
inc
xor
loopne
jp
dec
mov
aam
jmp
fnstcw
cmp
dec
pop
pextrw
mov
push
inc
in
adc
cmp
cmc
dec
pop
add
and
dec
sub
movsl
mov
in
pop
add
iret
inc
push
sbb
push
bound
ja
aam
or
xor
dec
rcrl
popa
dec
fcompl
sbb
movsl
mov
mov
push
mov
lock
sbb
aam
and
scas
ss
idivb
sub
dec
frstor
push
pop
mov
cmp
lock
mov
dec
or
lea
mov
jne
jmp
cmpsl
bound
fstpl
pushf
xor
or
out
xor
add
rcr
dec
sbb
vpsrad
test
or
rcll
mov
outsb
adc
pause
xchg
dec
fwait
dec
sbb
push
inc
dec
or
dec
repnz
daa
xchg
dec
cli
xchg
lret
sbb
dec
xchg
jmp
sbb
push
mov
dec
mov
xchg
pusha
out
cltd
adc
xchg
in
add
rcll
fsubs
sub
scas
dec
mov
pop
inc
stos
int3
jns
xchg
xor
mov
in
jns
jecxz
mov
iret
jl
test
sub
or
inc
pushl
dec
mov
fdivs
adc
ljmp
scas
out
lds
push
add
pusha
sbb
scas
iret
into
mov
fmul
arpl
pop
out
xchg
orl
add
dec
jl
fstpt
push
std
cmp
pusha
test
jg
cmp
xchg
cmp
mov
insl
inc
sahf
pop
pop
lods
jp
testl
add
outsl
das
adc
jle
push
dec
sub
sub
push
mov
repnz
inc
in
cli
or
into
popa
enter
rcl
inc
stos
cmp
mov
sub
enter
mov
out
lea
xchg
jno
mov
daa
pushf
nop
push
outsl
aad
xlat
rcr
dec
xchg
mov
cmpl
mov
rcll
mov
dec
rorb
jmp
ret
dec
xor
in
dec
loop
xor
mov
fidivrs
mov
jo
test
pushf
ret
or
cmp
into
mov
out
dec
fcmovnb
icebp
decl
cltd
mov
lahf
fdivl
push
xor
popa
jg
movsb
cmc
pop
into
mov
inc
jne
mull
jp
iret
mov
mov
sbb
data16
dec
dec
cmp
out
xchg
inc
inc
dec
inc
xor
and
stc
dec
mov
sbb
inc
mov
into
jbe
lcall
xchg
gs
inc
sbb
adc
sti
lret
je
popa
dec
insb
scas
shrl
pop
dec
into
cltd
loop
dec
cld
cmc
or
nop
out
mov
jge
scas
rolb
dec
ret
lcall
test
sub
nop
stc
jp
icebp
mov
cmp
movsl
movb
test
push
cs
clc
inc
and
mov
adc
dec
inc
pop
cltd
std
jl
push
dec
jae
pop
shrb
aad
pop
or
inc
pop
ljmp
xor
fwait
pusha
cld
das
xor
mov
scas
shll
lock
jp
jl
pop
mov
rorb
cmpsb
fildll
fwait
lret
ss
inc
cmp
mov
aaa
out
dec
adc
sbb
iret
popf
pop
lahf
dec
jl
add
adc
mov
daa
cmc
adc
xchg
insl
jns
out
ror
dec
push
jg
and
fisubrs
es
dec
scas
popa
in
inc
sub
push
lock
ds
dec
cwtl
std
mov
mov
dec
decb
ljmp
jb
fbstp
adc
icebp
push
into
push
jo
pushf
mov
xchg
lods
xchg
push
cltd
inc
mov
icebp
cld
pop
into
dec
xor
add
dec
mov
cli
popf
push
dec
push
pop
cmp
push
adc
sub
adc
cltd
rclb
mov
fdivr
adc
pop
sub
icebp
je
push
dec
mov
and
fsubl
adc
lock
mov
addl
dec
in
pop
pusha
scas
fisubrl
daa
or
xor
jmp
scas
pushf
cmpb
sub
test
dec
pop
inc
arpl
mov
rcrl
cmpsb
insb
push
adc
dec
sub
push
lea
xchg
jle
pop
popa
jbe
into
cs
ds
mov
imul
xor
xchg
push
leave
adc
dec
incl
jg
sub
jnp
push
jl
mov
push
inc
inc
jbe
sub
cs
adc
dec
loope
cmp
dec
jmp
and
dec
arpl
dec
add
cmpsl
push
mov
faddl
push
inc
adc
shll
sbb
int3
fmul
das
sbb
jns
jp
popf
mov
dec
jo
pop
pop
test
idivl
fnsave
or
jp
mov
pop
push
adcl
mov
rclb
aam
mov
and
movsb
jp
loopne
jnp
je
mov
push
cmp
xor
pop
adc
jle
dec
fs
or
dec
enter
scas
scas
push
cmp
dec
out
in
hlt
sub
mov
sbb
pop
and
mov
lock
int3
lods
jl
push
scas
loop
pop
das
pop
push
add
cmpsl
aaa
or
lcall
shrl
lcall
or
lret
out
dec
jle
jns
arpl
inc
dec
push
fs
out
dec
xchg
add
mov
dec
xor
shrl
ret
dec
pushf
fisttps
cmpsl
sub
ucomiss
sarl
dec
cwtl
lahf
inc
cmp
inc
push
and
dec
add
push
or
inc
or
xchg
pop
ss
add
mov
sbb
pushf
enter
cmc
xor
pop
xchg
cmp
mov
inc
leave
sbb
mov
in
cmp
inc
ja
xchg
aas
adc
sbb
icebp
add
pop
std
cmp
inc
jl
pushf
dec
loope
fcoms
push
adc
push
jle
jl
pop
lcall
dec
pop
push
aas
dec
xchg
push
and
adc
popa
shll
je
rcll
mov
and
pop
sub
add
movd
ret
xor
popl
fisubrl
clc
mov
sbb
adc
sub
mov
inc
pop
sub
mov
push
inc
jl
sbbl
push
jne
mov
dec
add
xchg
je
xchg
cs
xor
mov
push
repz
mov
cmp
in
fidivl
push
xor
into
ficoms
icebp
dec
jbe
adc
push
dec
push
lahf
mov
out
pushf
xor
stc
mov
mov
cmpsb
add
iret
sub
movsb
inc
jg
lahf
push
and
lods
bound
xor
or
xchg
push
add
out
mov
dec
xchg
lret
jl
mov
pop
add
fiaddl
jbe
mov
mov
test
inc
add
int3
sub
popf
adc
lds
jg
inc
inc
enter
out
lea
push
dec
pop
leave
mov
insb
clc
scas
stos
loopne
dec
cmpsl
mov
rclb
pop
aam
ljmp
in
cmp
mov
inc
leave
fwait
scas
xlat
ret
jl
dec
jns
xor
inc
xor
cmp
out
cld
ret
cmp
into
or
fldenv
adcb
aas
jl
jbe
sub
sub
dec
clc
xor
lret
cmp
xchg
fsts
sbb
mov
mov
dec
les
mov
or
pop
xchg
icebp
neg
in
pusha
dec
imul
cmpsl
sub
aaa
dec
subb
int
add
fidivrs
adc
in
push
pop
dec
leave
push
adc
add
dec
int
dec
hlt
mov
xchg
dec
popf
push
mov
mov
xlat
lea
jo
fwait
enter
push
mov
lods
insl
dec
outsl
push
aam
jmp
dec
lock
out
pop
push
mov
les
inc
cmpsl
movsl
sahf
cli
into
pcmpeqd
dec
push
sbb
scas
or
les
inc
adc
loope
insb
arpl
xchg
push
rol
xchg
testb
jb
mov
mov
adc
repz
adc
je
into
mov
push
mov
shrl
xchg
xor
fisubrl
mov
in
push
dec
fisttpll
adc
cmp
popa
push
mov
cs
push
jle
stos
cmp
and
pop
stos
jmp
push
sti
ljmp
push
int
jmp
mov
shll
pop
push
lret
into
fdivrp
xor
xchg
cld
pop
dec
xchg
filds
out
cltd
out
sub
ficomps
sbb
fs
andb
outsl
lahf
mov
mov
xor
inc
xor
lods
dec
pop
cmp
ss
rcl
jg
add
sub
xor
jnp
fidivrl
iret
mov
lcall
mov
es
js,pn
add
mov
inc
cld
mov
jecxz
mov
aaa
jle
aaa
stos
inc
xchg
into
mov
mov
jl
xor
cmpsl
push
lcall
in
lret
mov
fcoml
dec
aaa
jae
call
jle
shrl
loopne
faddp
mov
add
xchg
rol
jge
clc
fs
jp
dec
mov
int
in
movsb
lods
add
pop
and
or
cmp
sub
push
jle
clc
outsb
das
jl
xchg
ja
test
mov
jmp
adc
xor
outsb
xor
rclb
jbe
rcrl
mov
out
test
pop
test
mov
fs
sub
ret
cmpsl
pop
xor
rcl
sbb
repnz
fisubrs
cmp
mov
testl
jge
leave
incb
jp
jbe
sub
sbb
into
and
inc
leave
movsl
jl
outsl
inc
out
in
push
mov
sub
xor
add
dec
cltd
outsb
int3
jmp
inc
data16
xor
push
mov
mov
jae
or
repz
dec
push
dec
bound
cmp
push
push
sub
mov
clc
inc
adc
push
xor
adc
in
nop
popa
cmc
jns
pop
scas
fists
bound
mov
ljmp
jmp
mov
call
out
pop
or
lods
pop
dec
in
xor
aam
stos
dec
ja
scas
outsl
lahf
jecxz
roll
dec
imul
add
and
mov
dec
dec
pop
jmp
outsb
xor
int
mov
or
mov
test
arpl
outsb
fidivrl
mov
add
jo
inc
jnp
jb
gs
adc
popf
bound
aam
mov
mov
fcmovne
xor
inc
mov
xor
lcall
fsubrs
cmc
jo
and
pop
inc
sub
arpl
pop
les
int
lods
in
dec
jge
dec
aas
pop
stos
mov
jle
xor
jp
in
arpl
inc
into
testb
and
xchg
push
and
dec
scas
lret
jmp
dec
and
dec
ja
bound
outsb
fisttpl
push
or
dec
mov
test
or
cmp
fiaddl
out
dec
cmp
std
push
pushf
inc
outsb
dec
adc
and
fs
fistpll
push
push
push
dec
loope
ja
jo
adc
dec
test
fs
gs
fadds
dec
add
mov
push
scas
adc
mov
push
jmp
out
dec
jecxz
jle
mov
pop
out
or
fadds
push
loope
mov
shrb
pushf
lret
xchg
add
push
mov
clc
push
jl
popa
xchg
into
sarl
out
lret
aaa
loope
pop
pushf
cmp
xor
imul
jg
scas
call
psubusw
test
xor
or
movsb
jno
xor
jnp
outsl
mov
jl
mov
lret
jg
sub
sahf
mov
adc
das
lret
insb
leave
dec
push
pop
mov
into
cld
push
dec
idiv
push
inc
dec
cmpsl
hlt
mov
pop
cmp
fwait
nop
mov
pop
add
mov
cmp
inc
xchg
pop
repnz
mov
nop
push
xor
aaa
jl
adc
mov
loopne
lds
subl
cmp
lahf
adc
cmp
mov
out
cmp
xchg
stc
push
xchg
sbb
cmc
mov
mov
icebp
jmp
ljmp
pop
push
xchg
aaa
mov
imul
outsl
sbb
dec
lahf
or
sbb
push
clc
dec
push
sub
adc
cld
insl
xchg
jp
dec
mov
sbb
xchg
xor
cmp
pop
inc
cmp
dec
mov
xor
mov
adc
xor
sub
dec
mov
cs
xchg
push
mov
fsubs
icebp
push
add
pop
jl
jno
pop
xor
dec
clc
rcll
mov
cld
lods
dec
or
scas
dec
push
jns
push
lea
mov
jmp
sti
cwtl
pop
repnz
orb
sbb
and
and
push
aad
push
out
mov
push
dec
or
ds
or
add
adc
jecxz
mov
lods
addr16
xchg
mulb
imul
sbb
adc
lods
xor
rcll
nop
pop
inc
dec
scas
mov
std
cmp
hlt
inc
adcb
cmp
push
dec
pop
sub
dec
shlb
mov
dec
mov
stos
iret
cmp
adc
mov
cmovne
pop
sbb
icebp
mov
sbb
jmp
add
out
popa
gs
mov
push
flds
dec
pusha
jl
mov
push
mov
es
jp
fildll
mov
mov
pop
and
cmc
cmp
or
sub
mov
stc
movsl
lea
adc
mov
imul
je
jge
or
aaa
data16
aas
fisttpll
cwtl
sbb
int
mov
dec
lret
inc
ja
mov
ljmp
es
dec
sbb
jecxz
repz
jnp
dec
les
arpl
dec
stc
aad
pop
mov
enter
fucomp
dec
pushf
dec
pop
outsb
inc
and
mov
mov
dec
xor
ss
add
insb
xor
xlat
and
into
clc
pop
jae
leave
repz
and
mov
cmpsb
xchg
shll
dec
fsubrl
lds
loopne
push
or
mov
adc
mov
stos
orb
mov
push
add
push
out
leave
inc
dec
mov
inc
fcomps
jp
neg
orb
or
lea
dec
push
or
cmp
xchg
out
add
inc
lret
fdivp
and
inc
xor
int
xchg
jmp
add
shlb
loopne
fs
dec
int3
jle
xchg
mov
push
jnp
icebp
test
into
mov
inc
nop
lds
jmp
scas
addr16
push
std
jp
imul
popf
fimull
mov
fadds
imul
cmp
jnp
cmp
add
mov
mov
icebp
ficoml
push
and
iret
fsubrp
dec
daa
xor
lret
je
out
sbb
es
lret
movsb
jne
jae
jno
imul
pop
inc
mov
pusha
dec
sub
cmp
mov
loopne
divb
lods
clc
inc
push
dec
dec
les
xlat
test
add
es
mov
out
xlat
xchg
imul
ljmp
jl
or
and
ret
inc
add
xchg
mov
add
cmp
aam
in
sbb
stc
push
pop
loopne
dec
mov
push
add
jle
mov
scas
dec
mov
arpl
dec
pop
dec
adc
mov
push
fmuls
ljmp
dec
and
test
sbb
into
push
xor
dec
decb
pop
mov
out
dec
mov
lods
nop
inc
gs
aad
insl
dec
scas
imul
dec
or
cmpsb
sub
dec
js
fucomi
popf
pusha
or
inc
cmp
mov
mov
popf
sub
pop
test
adc
push
mov
dec
jl
mov
and
dec
xor
mov
pop
dec
push
cmpsl
push
fstpl
and
mov
jle
in
dec
out
mov
jp
call
dec
or
in
push
jmp
sbb
aam
sub
movsb
dec
and
dec
push
cmovle
xor
xlat
dec
loopne
jg
es
out
jp
jnp
test
out
dec
sbb
popf
push
or
dec
mov
adcl
inc
fiadds
mov
mov
xchg
dec
mov
js
cli
dec
or
push
fisubs
dec
int
mov
insl
or
mov
jno
ficomps
pop
enter
fwait
mov
dec
or
and
rorb
repnz
ficoms
aad
adc
fisttpl
js
repz
and
mov
and
xor
iret
xchg
inc
xchg
dec
stos
cltd
ljmp
cmp
dec
xlat
ss
dec
loope
or
aad
dec
repnz
std
jg
fstpt
mov
lods
jl
inc
adc
add
dec
inc
mov
data16
xor
mov
xchg
push
orb
dec
and
adc
fdivp
sbb
scas
mov
into
movsw
mov
cltd
cmp
push
add
fistl
inc
mov
in
mov
and
aam
dec
xchg
mov
out
dec
int
addr16
jns
rcrl
iret
xor
lret
add
inc
sub
adc
mov
fwait
mov
pushf
leave
add
mov
lcall
push
mov
pop
dec
or
adc
inc
mov
out
jecxz
sub
rolb
sti
jl
push
jp
push
fistpll
and
mov
jle
into
mov
movl
add
push
inc
cmp
mov
xor
dec
shll
xor
pop
loop
add
push
cli
mov
clc
int
sbb
push
push
or
sub
pop
lea
lea
inc
stc
arpl
jmp
push
or
dec
dec
mov
adc
pop
push
adc
mov
and
aam
xor
imul
test
jnp
sbb
outsb
pop
cmpsb
icebp
jmp
dec
inc
sbb
mov
movb
lret
adc
mov
imull
lds
aam
sbb
into
and
jo
into
cmovae
cmp
into
dec
push
adc
roll
ss
xchg
adc
and
out
frstor
add
xor
mov
adc
cmpsb
inc
mov
or
or
lods
dec
imul
mov
aam
pop
rorl
xchg
jl
inc
data16
dec
scas
aaa
mov
push
mov
mov
inc
aad
fs
cmc
xchg
dec
rclb
jle
mov
cmpsb
dec
push
pop
loopne
shl
dec
mov
jle
adc
into
imul
cltd
mov
mov
dec
push
in
dec
fucom
ljmp
in
mov
dec
jecxz
ja
pop
mov
dec
mov
les
inc
pop
daa
dec
cmp
lret
mov
or
aad
dec
sbb
scas
jge
sbb
mov
es
lods
dec
and
sub
push
dec
sti
icebp
rcrb
imul
ss
pushf
rcrb
dec
mov
push
sub
cmp
psllq
movsb
mov
ss
or
jne
insl
imul
or
fldl
outsb
dec
daa
or
cld
lods
dec
movb
dec
dec
sub
sub
dec
icebp
add
inc
lods
imulb
mov
inc
dec
adc
mov
int3
ds
dec
mov
cmp
xor
xchg
insb
inc
or
and
pusha
mov
jbe
mov
push
lds
aad
dec
aaa
stos
cmc
ljmp
insb
push
jle
adc
call
cld
dec
insl
int
mov
popa
mov
lret
cmp
mov
dec
es
mov
push
orb
fs
mov
dec
lock
dec
sub
cmp
inc
hlt
push
mov
and
mov
xchg
dec
jns
movsl
addr16
out
nop
dec
test
in
dec
push
jbe
cmp
popa
imul
sbb
mov
hlt
and
add
dec
je
mov
outsl
in
fcoml
and
movsl
scas
add
sub
adc
fldl2e
mov
jg
push
and
push
sbb
sub
das
fists
and
jnp
arpl
inc
mov
xchg
and
or
inc
mov
les
xor
xor
xlat
push
fidivs
pop
subb
roll
dec
mov
mov
mov
push
jge
xchg
push
or
scas
mov
mov
sub
ss
cltd
sarb
cmp
mov
adc
std
fisttps
push
and
outsb
cmp
mov
repnz
out
out
sbb
andb
fisttps
lods
inc
imul
or
cmp
push
bound
out
xlat
test
addr16
fsubr
rorl
pushf
add
pop
inc
and
in
daa
push
dec
inc
jnp
pop
push
cmc
add
fnsave
inc
sbb
je
sbb
fisubrs
pop
dec
into
cmpsb
outsb
fimull
jae
ss
mov
mov
adc
adc
add
dec
shrb
sub
outsb
pop
mov
and
mov
add
aam
sbb
pusha
push
lods
into
iret
movsb
cmp
and
test
dec
mulb
xor
sub
dec
andb
xchg
push
push
insl
push
xchg
cmc
dec
aad
add
cld
mov
js
xor
adc
into
ret
pop
jge
jbe
into
jae
ds
dec
mov
int3
fstpl
jg
xor
push
mov
adc
and
dec
repz
out
adc
pop
inc
jbe
daa
into
jge
and
dec
sub
cmpsl
mov
or
dec
mov
adc
jmp
dec
scas
lret
xlat
sarl
add
into
or
and
or
js
jecxz
arpl
adc
enter
hlt
cmp
pushf
fs
xor
gs
inc
nop
mov
push
dec
out
adc
fsubrs
lds
push
jb
mov
rorb
test
xchg
and
repz
lret
inc
icebp
mov
xchg
mov
je
inc
sub
pop
push
lods
cmp
sub
dec
cmp
pop
and
testl
and
dec
cmp
sti
cwtl
dec
sbb
mov
jmp
mov
sbb
loopne
or
dec
notl
jno
imul
sbb
je
sub
pop
and
shrl
test
jns
mov
imul
adc
adc
xchg
xchg
std
adc
fimuls
test
xchg
fs
scas
cmp
in
sub
jl
out
dec
sub
fisubrl
icebp
mov
pushf
mov
popf
xchg
mov
adc
out
jp
fs
xchg
mov
mov
push
xchg
out
sub
jo
mov
mov
sbb
sti
cmp
jb
sar
jmp
push
push
lock
inc
in
loop
xor
rorb
dec
js
push
dec
sub
mov
dec
in
ret
cmp
add
sbb
je
mov
bound
push
lods
orl
sub
dec
cmp
dec
lahf
adc
daa
fiaddl
shl
mov
cmpsl
pop
fbld
out
mov
mov
and
jg
rorb
mov
sbb
pop
dec
adc
in
and
push
pushf
pusha
sub
aas
dec
fbstp
ja
cmp
pushl
mov
cmp
mov
adc
iret
pop
in
jbe
cmpps
push
pop
cmp
and
into
pop
pop
push
scas
scas
test
test
incl
in
aam
fnstcw
lea
out
outsb
push
xor
movl
mov
cmc
stc
iret
lahf
sbb
adc
mov
mov
rclb
xor
jl
mov
bound
cs
fcmove
outsl
jl
dec
pop
cmc
jle
xor
adc
dec
adc
mov
mov
sub
incb
dec
loop
add
mov
notl
sub
sbb
adc
inc
add
movsl
sahf
aaa
jno
xor
and
inc
das
xor
aaa
push
cmpsl
or
sub
jmp
mov
pop
cmovge
js
xchg
and
jb
fcomi
lods
push
int
dec
jle
xchg
pop
jp
lods
sub
xchg
arpl
adc
ret
data16
inc
cwtl
xchg
adc
scas
int3
dec
mulb
mov
int3
clc
and
lret
je
or
and
cmp
jg
filds
mov
mov
fsubs
iret
test
dec
icebp
pop
sbb
fmull
push
scas
xor
mov
sub
dec
adc
mov
lods
lret
in
xor
sbb
mov
rorl
jae
int3
add
fisttpll
out
push
adc
add
dec
loop
push
test
pop
into
add
and
adc
push
dec
test
xchg
inc
xor
cmp
mov
xor
inc
jno
test
inc
mov
enter
mov
push
inc
or
cwtl
fwait
push
dec
push
stos
ja
jb
push
pop
mul
mov
in
adc
dec
xor
mov
fistl
sub
cmpsb
dec
test
sbb
or
cwtl
lds
out
push
popa
xlat
dec
pslld
pop
dec
jg
repz
xor
fsubrs
adcb
sarl
dec
cmp
call
iret
lods
and
jno
adc
mov
xor
sbb
and
xchg
or
push
jns
fimull
sbb
scas
fmuls
insl
loope
jle
dec
jns
dec
and
dec
scas
push
notb
in
mov
pop
hlt
out
mov
add
xchg
outsb
dec
or
add
test
out
iret
enter
sysexit
bound
and
dec
mov
dec
mov
push
dec
cmc
sub
pop
mov
std
and
pop
cld
ret
arpl
pop
iret
mov
aas
adc
mov
iret
cs
es
pop
add
mov
rol
into
jg
jmp
loope
lret
call
dec
data16
mov
dec
ja
int3
and
outsl
std
dec
sub
scas
dec
mov
in
sbb
sbb
orb
xchg
adc
test
test
in
push
into
xor
push
mov
add
mov
inc
jle
lods
bound
stos
push
mov
leave
andb
mov
stc
push
add
mov
popa
mov
aas
jl
aaa
test
sahf
dec
ficoms
test
pop
xor
popa
nop
sbb
xchg
testl
popa
and
test
pushf
mulb
shlb
rclb
push
mov
cmp
mov
fs
xchg
loopne
xor
xlat
or
rolb
push
sub
stos
es
pop
repnz
or
lods
test
mov
das
stos
mov
repz
sbb
mov
mov
jecxz
push
cs
jle
xchg
into
or
lret
mov
jnp
pop
pop
and
clc
imul
orl
mov
inc
sub
pop
mov
jl
cli
mov
cmp
shll
loope
mov
mov
pop
cmp
fildll
dec
mov
dec
or
jl
sub
jg
xor
mov
add
sbb
fldcw
lret
push
pop
dec
mov
pop
jne
dec
jl
lea
sbb
dec
cmp
mov
jo
stc
pop
dec
mov
or
out
add
mov
scas
cmova
inc
subl
push
insl
imul
push
daa
jbe
dec
cmc
clc
push
pop
mov
gs
lahf
xchg
pop
rclb
lods
pop
dec
or
mov
dec
bnd
xchg
fcmovu
out
lret
dec
or
adc
sub
add
and
sub
dec
iret
out
je
sbb
cmp
dec
shlb
adc
jae
cmpsl
mov
into
adc
xchg
sub
dec
stos
jg
lret
mov
lods
jo
jae
orb
hlt
int
rcrb
dec
push
adc
and
in
or
xchg
dec
int
jbe
iret
mov
insb
inc
adc
jo
sbb
dec
sti
cmp
jg
stos
inc
jnp
js
aad
ja
lea
push
or
bound
cmp
shr
jmp
pop
cmpsb
ss
test
sbb
cmp
aad
fsubs
loop
popa
dec
adc
stos
stc
or
xor
xchg
std
dec
ja
xchg
jne
sub
and
mov
jo
xchg
mov
out
mov
add
aaa
push
mov
aas
add
sbb
out
push
mov
cmpsl
gs
xor
push
ss
jb
aaa
stos
cs
cmp
adc
fwait
jl
or
mov
or
dec
jl
mov
pop
lods
cmp
pop
push
jecxz
sub
push
xchg
dec
cmp
cli
cmp
mov
push
lds
cmp
pop
pop
adc
scas
push
fisubs
and
hlt
inc
icebp
mov
loop
xchg
inc
cmp
cs
sbb
xor
cld
push
fs
push
ret
hlt
stos
out
sub
push
pop
stos
push
push
xchg
lret
stos
pop
mov
stos
mov
pop
fistpll
dec
mov
int
mov
int3
jmp
dec
nop
fcompl
push
arpl
inc
xchg
dec
and
cmpsl
sbb
shll
cli
push
pop
mov
jb
pop
sahf
mov
push
dec
jg
dec
pop
dec
or
int
cmpsb
rcl
mov
sub
jle
and
dec
cmpsb
ret
movsb
hlt
inc
cmp
sub
jp
int3
ja
lret
adc
ja
pop
sbb
push
xchg
sti
pop
and
jo
xlat
pop
push
mov
jle
mov
lods
inc
mov
push
aas
jmp
in
pop
jns
ljmp
arpl
cmp
into
mov
stos
test
push
movlps
xor
push
inc
sub
dec
rolb
dec
dec
inc
sub
sbb
aad
dec
cmpsb
fwait
cli
sub
jmp
adcl
les
pop
dec
testb
movsl
mov
xor
imul
adc
fwait
pop
iret
add
dec
jl
lgs
xor
mov
dec
push
test
jl
enter
mov
or
inc
ret
rcll
cmc
imull
sbb
popf
cmp
jecxz
fwait
dec
jns
cli
mov
lea
ljmp
sub
adc
or
xlat
push
sub
push
subl
dec
push
push
adc
mov
mov
jp
cmp
sbbl
add
outsb
sbb
sahf
or
aas
adc
shrb
movsb
ret
sub
lcall
jg
mov
out
aad
in
pop
inc
jle
pop
jecxz
xchg
push
pop
adc
push
dec
sub
lret
mov
pop
mov
lods
icebp
lods
add
cmpsl
sbb
and
sarb
cmp
out
xchg
stc
fsubrl
rol
sub
pop
add
add
xchg
popa
dec
push
and
mov
loop
jnp
aaa
clc
test
sti
add
pop
mov
jbe
xchg
leave
mov
adc
xor
flds
add
pop
mov
and
pop
jmp
jmp
andb
dec
popf
mov
mov
into
add
jo
movsl
subb
mov
mov
jle
mov
and
push
xchg
ljmp
dec
sub
cmp
imul
dec
inc
adc
dec
mov
cs
cwtl
dec
ret
int
outsl
or
dec
daa
stos
mov
adc
cmpsl
adc
hlt
popf
jl
dec
aas
call
xchg
sub
xchg
sbb
or
push
mov
jb
outsb
mov
sbb
sub
ljmp
fimuls
arpl
daa
mov
mov
xor
int3
pop
push
testl
xor
lea
dec
mov
or
pop
mov
sbb
mov
pop
mov
scas
loop
stc
inc
dec
push
fbstp
and
mov
movsb
or
and
stos
in
int3
xchg
sub
bound
jne
rclb
mov
add
cmc
fwait
dec
stos
outsb
std
xor
adc
dec
jge
leave
mov
sub
scas
ror
cs
adc
or
xor
daa
jae
shll
add
jle
mov
and
out
sub
lahf
fmul
mov
inc
add
int3
mov
fstpl
out
push
lock
jg
in
xor
jle
nop
add
sub
push
jmp
jl
cmp
pmaxsw
icebp
sbb
test
cmc
bound
adc
sbb
mov
lock
icebp
add
mov
sub
sarl
sahf
inc
lea
ja
adc
jmp
sbb
inc
sub
jmp
cmpb
xchg
daa
ss
repnz
mov
call
shl
lock
mov
sub
inc
into
jl
pop
outsb
or
xchg
mov
add
sub
mov
pushf
push
add
push
xchg
lahf
mov
lret
int3
aas
les
sbb
int3
xchg
bound
jl
out
pop
mov
and
aas
mov
mov
xchg
pusha
loopne
cmp
dec
popf
push
icebp
scas
test
insb
fwait
inc
dec
bnd
repz
icebp
lds
cmp
inc
mov
stc
pop
dec
in
xchg
fisttpll
pop
adc
pushf
or
jecxz
js
push
jns
mov
mov
enter
sbb
xor
push
add
mov
pusha
hlt
mov
test
pop
pop
dec
and
sub
cwtl
ret
mov
mov
push
add
ja
int
and
jnp
loopne
out
jno
mov
pushf
sub
dec
add
and
jns
adc
dec
pop
test
dec
ds
cmp
push
dec
popa
cmc
pop
dec
push
lahf
das
ja
inc
inc
or
iret
daa
pop
and
test
lds
dec
cmp
sbb
cmp
dec
ss
adc
dec
loop
push
inc
pop
cmpsb
les
data16
push
into
insb
lahf
daa
mov
negb
sti
or
xor
in
xor
pop
andl
inc
push
xor
dec
pop
cmp
insl
cmp
xchg
les
mov
dec
push
loope
jns
in
push
add
je
orl
pop
mov
fisttpll
daa
push
fucomip
jns
jbe
rep
inc
dec
mov
cmp
fwait
movsb
pushf
adc
fiadds
arpl
scas
out
clc
xor
jo
push
lcall
jg
jnp
cmp
jp
dec
xchg
push
lods
sub
push
push
dec
adc
ret
into
mov
mov
pop
call
push
pop
bound
and
mov
fimull
inc
lea
sti
hlt
jns
inc
popa
cli
ss
dec
xor
aam
in
dec
and
mov
mov
je
jle
setns
ss
mov
fnstenv
pop
mov
addr16
rcrl
lods
or
adc
mov
stos
xor
dec
pop
xchg
jmp
push
arpl
rolb
insb
lods
push
cltd
out
fisubrs
out
or
push
add
mov
inc
iret
daa
jl
icebp
push
gs
pop
decb
xchg
sub
popa
push
dec
faddl
test
cmp
rcl
mov
aaa
lret
int3
jns
dec
nop
lret
lret
addr16
aam
loopne
filds
inc
mov
or
cli
adc
std
into
inc
testl
and
jle
mov
add
out
add
cmp
in
popf
push
in
pop
jbe
aas
xor
mov
repnz
jae
leave
in
mov
or
xor
mov
fistl
jbe
xor
call
mov
jmp
pop
mov
ficoms
iret
testb
cli
jg
dec
mov
xor
inc
xchg
push
xor
adc
sbb
jecxz
adc
mov
adcl
jne
or
call
add
push
inc
aad
aam
sbb
dec
mov
push
cmp
jecxz
inc
lret
mov
adc
dec
jp
or
push
mov
xchg
dec
movsb
fadds
mov
test
dec
mov
call
dec
add
movsl
sbb
fcoms
pop
jno
mov
jb
dec
ret
mov
adc
aam
inc
jb
add
mov
sahf
xchg
ret
dec
and
sbb
dec
pop
out
sbb
mov
mov
pop
out
dec
jbe
dec
mov
out
push
lods
stos
pop
mov
popf
or
push
inc
lret
dec
subb
cli
or
ss
adcb
ja
lock
cwtl
leave
dec
jp
push
into
xchg
jnp
xor
cwtl
stc
jge
dec
and
or
xor
imul
call
mov
jne
sbb
dec
or
clc
pop
or
in
push
enter
mov
fmuls
fbstp
dec
mov
shll
jmp
scas
sarl
dec
insb
pushf
sbbb
pop
pop
adcb
jg
dec
and
mov
jp
in
mov
pop
cmp
fiadds
dec
jmp
cmp
inc
scas
sbb
stc
out
dec
sbb
adc
daa
xor
shlb
lahf
inc
add
pop
sbb
cmpb
jae
cmc
insl
scas
dec
push
idivb
mov
shrb
sbb
dec
xorb
mov
mov
push
iret
and
int3
mov
scas
xchg
add
jo
ljmp
das
cltd
cmpsl
xchg
arpl
lods
inc
xor
push
add
iret
dec
push
jge
js
or
dec
outsl
outsb
jp
popf
int
addr16
cmp
lods
mov
dec
xor
cmc
and
test
rcrl
loopne
ret
sbb
nop
xchg
lcall
mov
dec
inc
jnp
dec
push
in
outsl
ljmp
push
movsl
into
ljmp
mov
push
or
pop
cmp
stos
cs
out
scas
dec
fyl2x
jge
mov
cs
and
lea
inc
in
dec
jo
rdpmc
pusha
jnp
adc
repnz
mov
in
pop
mov
xor
scas
sub
push
push
ret
add
dec
aam
ficomps
ja
add
pop
dec
in
std
jnp
mov
rorb
sbb
inc
lahf
or
test
imul
add
jbe
xchg
cld
scas
xor
jle
inc
or
dec
mov
data16
push
sbb
negl
icebp
add
mov
aam
inc
jle
js
mov
mov
pop
lods
jae
nop
xchg
or
cltd
or
lods
xchg
adc
stc
xchg
add
in
scas
inc
sub
nop
ss
dec
stos
das
shlb
hlt
inc
fnstcw
dec
stc
mov
jmp
lret
into
pusha
mov
push
cs
sbb
add
inc
enter
jo
jo
dec
dec
aaa
xor
nop
lret
sub
cmp
jg
mov
ret
imull
aaa
ljmp
push
pop
xor
pop
push
push
rcrb
movsl
jo
cmp
scas
movsl
cmp
ja
sbb
lock
add
dec
inc
mov
jg
sti
mov
mov
mov
leave
push
inc
dec
sbb
adc
mov
mov
icebp
ficoms
or
repz
pushf
dec
dec
pushf
push
push
stos
cmp
dec
aas
dec
sub
daa
push
pop
ror
cmp
xchg
pop
jge
clc
adc
pop
cltd
inc
loopne
jae
lahf
mov
add
dec
in
and
popa
lret
flds
stc
aaa
dec
mov
or
adc
mov
stos
cmp
rdtsc
inc
adc
ss
shl
dec
hlt
cmpsb
or
jge
aad
xchg
repz
pop
mov
pop
mov
fmul
push
shrb
into
cs
int3
dec
mov
jmp
aam
inc
lcall
dec
test
sub
icebp
mov
push
dec
fnsave
xchg
cmp
cmp
insb
pop
lods
test
clc
dec
inc
sbb
pop
std
stos
dec
aad
mov
dec
adc
stos
pop
dec
dec
aad
mov
lods
mov
shlb
rorb
mov
xchg
rcll
jmp
fs
jg
and
xchg
adc
mov
insb
in
fistpl
int3
jl
adc
fidivrs
rcrb
inc
or
dec
clc
mov
jg
add
sub
ss
mov
nop
pop
push
lds
jnp
gs
sbb
cwtl
inc
mov
cmp
mov
mov
jne
nop
fimull
scas
sub
in
mov
shll
dec
or
mov
stos
les
push
pop
mov
lods
in
jno
cli
cmp
insl
movsb
dec
icebp
lahf
push
psrld
movsl
loop
aam
sbb
xchg
pop
cs
mov
dec
pop
or
fucomp
sbb
dec
push
addr16
stos
faddl
out
and
lds
pop
scas
add
xlat
fstpt
mov
pusha
dec
mov
daa
jno
fsubl
mov
mov
xor
lock
lret
and
das
sbb
mov
popa
inc
dec
stos
ret
movsl
mov
sbbb
pop
mov
jle
test
add
stc
sub
dec
cmp
in
pop
dec
inc
push
jl
adc
xor
cltd
dec
mov
push
sbb
fnstenv
dec
out
fildll
sub
dec
sub
jmp
fildl
mov
iret
cmp
gs
adc
push
jle
ret
psubusb
or
add
mov
mov
dec
sarl
sub
test
mov
push
shll
in
cmp
push
dec
and
lock
push
sub
dec
and
mov
dec
stos
pop
mov
mov
inc
or
ljmp
das
mov
pusha
fisttpll
mov
mov
xlat
clc
call
outsl
ret
xor
dec
xchg
popf
lea
in
cmp
pop
jbe
mov
sub
dec
cmp
test
inc
sbb
cmp
jecxz
push
xor
and
int
fiadds
xor
adc
scas
or
xor
jle
pusha
inc
mov
sbb
cmovo
fiaddl
test
cs
jl
je
adc
and
inc
aam
clc
roll
pop
xchg
ret
jmp
inc
ja
xor
jg
sub
mov
add
inc
lret
xlat
shl
jg
inc
icebp
sbb
jl
mov
ss
adc
repz
aam
movsl
iret
dec
sarl
hlt
or
mov
lahf
dec
push
divb
ret
repz
insl
les
iret
das
inc
push
inc
sub
fsubs
pop
jp
xchg
fimull
xor
inc
jg
xlat
out
out
repz
js
mov
jl
push
and
daa
adc
push
mov
mov
in
pmovmskb
mov
fcmovnu
fs
mov
cmp
push
sub
dec
cmp
mov
mov
pop
or
inc
scas
xchg
ret
push
sbb
vsubsd
cmovge
sub
sbb
dec
push
cmp
mov
aam
adc
add
xor
arpl
movsbl
push
pop
dec
test
jecxz
das
pop
lahf
dec
ja
sbb
jne
mov
test
lods
js
add
dec
es
sub
aaa
or
adc
in
cltd
fs
and
dec
movsl
push
xchg
cmp
fimull
xchg
fisubrs
pop
dec
or
jmp
int3
dec
mov
es
popa
xor
pop
shrb
into
sarb
stos
loop
fldt
lea
test
sub
pop
inc
mov
mov
sbb
push
mov
dec
outsl
clc
aad
sbb
or
into
js
mov
xchg
rorl
pop
arpl
scas
dec
jbe
dec
insb
test
jle
cld
xor
push
push
mov
pop
gs
lahf
lcall
pop
popa
adc
mov
bound
mov
inc
xchg
insl
outsl
dec
fisubl
ljmp
mov
xor
mov
mov
dec
cld
cmp
mov
in
sbb
or
push
mov
rolb
mov
mov
test
xor
ljmp
jnp
pop
push
sbb
call
xor
cvtps2pd
jge
repnz
sub
cld
addr16
xchg
inc
xchg
and
pusha
cs
dec
xlat
xor
cmp
adc
dec
pushf
xchg
jnp
inc
adc
iret
or
mov
fldt
xchg
stos
or
xlat
cwtl
push
dec
sahf
inc
mov
inc
gs
lret
faddl
ss
jns
push
imul
out
jecxz
cmp
jae
sbb
dec
pop
shrl
loope
int3
xchg
dec
sbb
sarb
jae
je
out
ficoms
dec
ret
nop
leave
xor
dec
jmp
mov
dec
enter
fadd
add
mov
push
fsubrp
xchg
icebp
les
hlt
jg
fisttpll
add
data16
dec
aas
stos
mov
repnz
pusha
push
mov
mov
lret
mull
std
dec
jl
stc
shl
sbb
jmp
dec
add
mov
dec
fs
pop
xor
lods
dec
push
repz
sub
dec
xchg
sub
in
aas
mov
jb
dec
ret
push
out
shlb
and
xchg
jecxz
neg
xchg
dec
pop
fs
repz
pop
inc
sbb
xchg
or
or
jnp
scas
int
inc
dec
adc
subps
jne
inc
outsb
jecxz
adc
aaa
enter
push
sub
test
mov
mov
dec
push
lahf
or
dec
pop
inc
cmp
insb
cmp
push
std
xlat
push
xchg
int
pop
or
pop
xchg
dec
popa
push
mov
rcll
rorb
sub
and
int
push
add
fists
test
outsb
int
pop
andb
faddl
jle
mov
mov
dec
in
sub
push
out
ret
ret
pop
int
and
daa
inc
movsl
push
dec
dec
mov
iret
dec
xchg
sbb
in
push
or
loope
mov
mov
add
mov
das
mov
ds
mov
clc
xor
aaa
daa
out
mov
int
mov
push
repz
bound
jbe
pop
fmuls
fiadds
sub
cmp
mov
push
int3
mul
mov
jl,pn
sub
subl
mov
xor
ljmp
aaa
nop
jl
pop
jmp
cmp
fsts
cs
dec
cltd
rcr
mov
movsb
div
add
xor
lods
jl
mov
gs
xchg
cmpsl
cmc
int3
jl
pop
jg
dec
nop
push
adc
cmp
cmp
dec
dec
pop
xchg
jo
nop
lcall
data16
jl
dec
push
add
test
out
pop
aam
xor
dec
popa
lahf
and
imul
mov
jle
or
ficoml
aad
pop
lea
xor
push
inc
imul
movsl
push
nop
xchg
and
mov
mov
jns
call
or
jl
xor
loopne
jle
incb
pop
andl
xor
movsl
inc
push
mov
lock
dec
fcomps
xor
ret
test
sub
ret
mov
fcoms
jg
mov
cmove
outsb
aaa
subb
loope
adc
or
sbb
clc
or
inc
popa
pop
hlt
sti
and
pop
xor
push
test
cmpsb
mov
and
cmp
call
outsb
lock
arpl
test
lods
out
sub
movsb
lahf
xchg
and
repnz
sub
mov
adc
cmp
cs
ds
das
adc
aaa
fcoml
push
and
xor
mov
cmp
jle
insl
in
clc
mov
push
sbb
stos
fs
cmp
add
aas
pusha
and
daa
jl
daa
fs
ss
popa
cmp
dec
bound
xor
int3
mulb
test
sbb
push
mov
outsl
pushf
loop
mov
jecxz
dec
mov
or
sti
mov
dec
mov
jg
dec
addb
in
outsl
loopne
aas
outsb
mov
xchg
and
jl
dec
cmp
xor
das
dec
xchg
out
leave
xchg
mov
inc
xchg
mov
loopne
insl
mov
test
orl
out
outsb
outsl
adc
sub
stc
inc
dec
xor
xchg
subl
inc
rclb
fidivrl
dec
pushl
dec
pslld
dec
jge
jp
into
cmpsb
mov
lods
outsb
data16
mov
outsb
dec
xchg
xor
fnstenv
mov
daa
inc
dec
inc
imul
push
pop
mov
pop
mov
lret
mov
out
xchg
mov
aam
aad
mov
jae
into
lock
jo
int3
rorl
leave
cmpsb
ds
mov
adc
pop
sub
fwait
or
add
dec
mov
es
arpl
fisubrs
dec
jne
xchg
sub
and
sbb
jns
sub
sub
lods
data16
in
shl
cmp
inc
dec
iret
jl
mov
or
dec
fsubrl
stos
and
iret
jp
xor
in
nop
insb
fnstsw
shll
repnz
test
stos
ss
xor
in
cmpsl
ljmp
dec
jb
test
lods
dec
add
jg
insb
add
cmp
stos
xor
add
dec
or
push
out
dec
fsubl
dec
mov
jg
clc
xchg
pmaxub
dec
jnp
rcr
or
aad
aaa
dec
sbb
jae
in
jecxz
pushf
mov
out
xor
adc
movsl
loop
ret
addl
out
inc
gs
pop
repnz
out
call
cmp
movsb
xchg
fildll
ds
mov
in
xchg
xor
dec
pop
lret
or
outsb
jg
test
ljmp
outsl
adc
outsl
adc
ds
jle
insb
repz
mov
shlb
mov
sbb
test
xor
dec
sbb
mov
pop
mov
adc
clc
add
pusha
add
push
mov
sbb
stos
out
cmp
push
lret
lea
pop
ds
stos
xchg
push
and
pop
pop
test
inc
pop
stos
in
js
adc
lret
lret
in
sub
mov
cmp
int3
sahf
push
adc
fsubrl
lods
inc
push
push
mov
movsb
test
dec
dec
bound
push
pop
xor
out
xor
sarb
inc
jg
or
repz
test
lret
xor
xchg
aam
xchg
fisubl
lret
mov
push
mov
sbb
pop
cmpsl
rcll
add
pop
in
push
or
mov
orb
mov
push
inc
dec
fs
mov
mov
xchg
inc
jg
push
mov
lods
out
mov
sbb
push
aad
jle
jl
jns
iret
push
mov
out
xor
nop
scas
fstl
xchg
scas
pop
pop
jl
cltd
ljmp
stos
push
in
lret
mov
mov
pop
push
shrb
es
in
jle
call
inc
imul
sbb
sbb
scas
ficomps
dec
into
adc
ret
mov
data16
add
cmp
pop
in
cmpsb
xchg
mov
pop
xlat
cmp
sub
cmp
lds
lret
lahf
mov
pop
mov
xor
data16
ljmp
ret
enter
jl
cmp
xor
mov
sti
inc
test
lds
fisubrs
mov
mov
shl
sub
js
jmp
xchg
lcall
adc
sbb
add
mov
fstl
cmp
in
insb
sub
gs
stos
adc
arpl
xchg
ljmp
pop
shl
xchg
addr16
cmp
inc
sar
pop
fisttpl
or
aas
push
popf
adc
repz
cmp
sub
sub
mov
pop
test
sbb
sbbl
inc
popf
inc
dec
xchg
mov
mov
dec
sbb
push
pop
dec
or
push
jmp
sub
pop
xor
inc
mov
ret
in
xlat
jecxz
dec
and
lods
push
mov
shll
cld
scas
mov
jno
jp
dec
shl
xor
mov
fimull
cmp
scas
repz
mov
outsb
jns
sub
jo
mov
pop
xor
rol
and
jge
popf
jg
mov
andb
jmp
roll
stc
outsb
and
pop
cmp
jmp
dec
mov
jl
xchg
mov
mov
xor
test
push
lret
inc
cmp
out
clc
jge
jle
cmc
cmp
pop
sti
sub
scas
adc
les
xor
ds
xchg
sub
dec
lahf
push
sbb
dec
add
xor
data16
xlat
cmp
stos
ffreep
adc
test
sarb
cmp
imul
and
mov
das
mov
mov
dec
fwait
xchg
pop
lret
dec
fidivs
and
dec
scas
and
cmp
movsl
jmp
xchg
or
call
cmp
rcrl
lods
inc
jecxz
dec
lds
cmpsb
push
dec
lret
loopne
in
ss
push
xchg
decl
mov
mov
sbb
xchg
loop
sarb
cmpsl
into
add
push
mov
dec
adc
sub
scas
dec
adc
mov
mov
cmp
mov
cmp
ss
mov
mov
push
pop
hlt
dec
push
cmp
mov
dec
and
sbb
nop
dec
pushf
test
ds
sbb
inc
sub
out
jne
mov
mov
xchg
mov
inc
adc
out
sbb
fcompl
dec
testl
jbe
ret
scas
push
pop
jp
rcll
jg
into
push
popf
jl
cmp
and
inc
lock
jmp
sub
sahf
mov
pop
jae
jecxz
adc
mov
fcmove
add
xor
lret
inc
push
inc
clc
test
jg
dec
or
sahf
inc
dec
js
mov
aaa
outsb
inc
jg
xlat
sub
in
dec
cltd
shlb
sub
lcall
dec
daa
lock
mov
scas
dec
fisubrs
out
dec
sahf
mov
pop
cmovge
inc
mov
sub
dec
adc
lahf
loope
jbe
pop
xor
dec
push
jae
add
inc
fdivrl
push
nop
dec
dec
pusha
jb
cld
adc
cs
mov
shrb
cwtl
pop
sahf
dec
ret
jp
gs
dec
add
or
js
rcrl
int3
cmp
mull
jl
xor
cs
jle
cmp
xor
push
jg
push
fistpl
test
xor
stos
pop
jle
loopne
push
mov
xchg
enter
cmp
insl
and
push
mov
in
pop
es
push
insb
push
pushf
and
push
jg
pop
push
adc
inc
and
imull
add
jb
pop
mov
sbb
ja
fidivrl
inc
das
jle
xchg
mov
inc
push
daa
xchg
outsb
stos
jmp
pop
add
push
and
inc
xchg
daa
pop
ljmp
xchg
pop
jg
mov
jge
adc
mov
jmp
cmp
cltd
outsb
jo
or
xchg
and
outsb
mov
adc
jmp
fs
xchg
dec
push
dec
stc
cmp
pop
mov
in
sbb
les
loopne
ficoms
sub
imul
push
add
icebp
arpl
add
add
dec
dec
pop
repnz
push
sub
loopne
cld
test
dec
ss
arpl
or
jecxz
lods
xlat
in
js
jbe
test
xor
cwtl
jo
dec
mov
js
repz
push
dec
mov
scas
cmp
and
shrl
into
adc
pop
sti
pushf
incl
push
dec
jnp
inc
pop
std
push
sub
mov
in
rol
dec
stos
dec
or
adc
dec
pop
push
mov
dec
lods
jnp
add
enter
mov
mov
dec
shll
aam
dec
or
mov
dec
test
xor
push
dec
pop
or
push
push
cmp
dec
mov
repz
dec
sub
inc
jle
xor
or
lcall
inc
push
pop
lds
jmp
dec
gs
pop
out
or
jb
cs
leave
sub
ds
mov
add
pop
in
jne
cmpsl
and
dec
sahf
das
jg
push
cmc
push
int3
arpl
nop
aad
mov
cmp
inc
mov
jle
shll
js
mov
dec
inc
mov
addr16
dec
sub
out
mov
mov
shll
cmpsl
dec
inc
pop
fucomi
xchg
ja
orl
sti
or
stos
xlat
and
pop
lods
outsb
bound
fwait
out
add
pop
stos
dec
cmp
nop
lahf
mov
arpl
jmp
insl
aas
dec
pop
js
dec
pop
cmpsb
push
mov
inc
xchg
test
out
jae
sbb
imul
je
pusha
dec
nop
insb
push
lea
dec
or
push
punpckhdq
jno
cmp
scas
insb
lods
dec
cli
dec
sarl
xor
cmp
xor
loop
pop
repnz
shlb
das
and
push
daa
dec
push
shl
sub
negl
jmp
sub
inc
enter
scas
hlt
test
jo
and
int
mov
jne
or
aad
jae
clc
dec
add
jno
fninit
cmpsl
mov
popf
daa
xlat
dec
shrl
lret
shr
xor
xchg
jb
push
cli
sub
pop
out
mov
xchg
lods
stc
cmpsb
dec
push
cltd
or
je
jo
dec
xor
rorb
dec
cmp
sbb
out
lea
ljmp
loop
sbb
jo
fidivrs
inc
into
dec
mov
xchg
daa
int
cmp
dec
rcr
jne
cmp
cmp
fs
push
mov
scas
inc
jb
push
movsb
xchg
dec
loope
add
inc
sbb
ja
xlat
pop
insb
push
dec
adc
pop
jg
aas
mov
and
cmp
insl
movsl
adc
clc
push
pop
lods
sub
sub
push
mov
lahf
xchg
int3
inc
sbb
clc
into
push
aas
mov
xor
loope
mov
jo
fstpt
icebp
or
popa
jmp
push
pop
enter
cmpsl
mov
mov
and
adc
es
sbb
test
jp
sub
push
jb
dec
sub
inc
xchg
ljmp
sarl
add
insb
dec
mov
jne
std
daa
dec
fwait
jo
call
mov
dec
int
sti
mov
inc
dec
mov
mov
cmp
bound
dec
mov
shll
dec
cmp
iret
mov
cltd
fs
inc
shlb
outsl
lods
mov
mov
mov
sbb
xchg
mov
add
mov
in
aam
popa
dec
call
push
fldenv
aaa
pop
mov
dec
mov
push
jne
cld
pop
pmuludq
xor
inc
xchg
sub
xchg
popa
orb
pop
or
fwait
out
add
pushf
pop
fsub
xchg
push
jp
fs
adc
cmp
cmpsb
jmp
push
mov
push
sbb
xor
push
pop
sbb
gs
mov
add
dec
jle
or
loope
xchg
dec
test
mov
mov
fdivrp
imul
pop
mov
pop
into
dec
lock
cmp
xchg
push
add
and
scas
negb
push
dec
ja
mov
lcall
sub
push
or
enter
aam
pop
decl
push
test
mov
push
adc
pusha
rorl
mov
call
dec
lret
push
sarl
push
test
jl
push
xchg
and
jnp
pop
dec
jbe
mov
mov
xchg
cmpl
dec
pop
dec
xchg
push
lea
dec
or
jl
in
repnz
push
mov
cli
xchg
mov
jl
jge
mov
jg
arpl
cwtl
inc
movsb
mov
pop
push
inc
jg
jle
fwait
scas
add
ret
and
xchg
cmp
add
mov
lods
fsubl
sbb
movsb
imul
pop
mov
cmp
push
cmpsl
push
dec
dec
pusha
dec
xor
frstor
dec
lods
xchg
fs
push
jno
push
in
lret
clc
pop
sub
push
ja
push
fstpt
fisubrl
push
pop
dec
fsubs
rolb
xor
mov
pop
nop
bound
decb
inc
xchg
jle
jb
ret
testb
es
mov
adc
sbbl
mov
push
out
lahf
mov
fbld
push
add
cmp
mov
out
lods
inc
ficompl
mov
mov
cmp
xchg
jp
adc
fs
dec
dec
scas
or
rolb
pushf
xchg
xchg
mov
pop
fidivrl
int
stos
sti
out
sbb
outsl
scas
cmp
inc
into
testb
mov
and
in
xor
ss
fists
inc
add
sarl
adc
mov
rorb
icebp
xchg
lock
push
cmp
sub
hlt
scas
mov
leave
arpl
insl
dec
xor
iret
jno
pop
xor
jle
aam
push
push
jno
inc
mov
mov
sub
lods
adc
cmp
sub
cmp
jle
jl
in
icebp
inc
add
or
push
lcall
arpl
scas
push
or
sub
pop
mov
pop
pop
ljmp
imul
imul
scas
mov
int3
pop
mov
jnp
loop
dec
xchg
pusha
or
dec
les
out
dec
pop
jl
sbb
scas
jmp
enter
in
int3
cmp
mov
shl
fs
movsb
sub
cli
push
or
dec
push
cwtl
repz
dec
fsubrl
lret
fidivrl
xchg
ret
dec
addw
dec
in
icebp
into
push
xchg
fcoms
enter
popa
jg
dec
cltd
loop
xor
xchg
sbbb
add
push
decl
ds
and
xchg
or
out
cld
push
testl
mov
or
push
xchg
sub
adcb
sbb
jmp
inc
jbe
xor
push
jg
les
outsb
xchg
add
jl
inc
mov
dec
push
pop
icebp
dec
pop
adc
lret
les
xor
push
xchg
add
stos
jmp
jle
xor
shlb
dec
mov
sub
pop
andb
jl
mov
nop
xor
or
test
fmuls
inc
cs
jle
pop
fwait
call
jmp
sbb
mov
push
aas
mov
push
xor
adc
xor
icebp
pop
lret
popa
pop
xor
in
rcl
jae
mov
dec
and
cmp
or
dec
mov
or
xor
and
dec
hlt
add
xchg
dec
push
lds
test
pop
outsl
nop
jp
hlt
cmp
jl
fdiv
ret
pop
in
inc
or
leave
and
pop
enter
out
sar
pushf
cmpsb
jg
jmp
mov
and
out
dec
pop
sahf
push
sahf
test
dec
stc
inc
in
cli
lock
out
or
push
sahf
subb
xchg
jmp
hlt
call
jp
dec
add
cmp
dec
cmc
mov
cwtl
xlat
sub
sub
hlt
lret
and
push
sub
dec
adc
in
ljmp
cmp
sbb
dec
jns
outsl
lds
jle
cltd
dec
fistl
insl
test
dec
sbb
inc
xchg
sbb
dec
cld
out
shll
data16
pushf
icebp
xchg
jmp
dec
loope
shll
je
dec
into
mov
mov
xor
arpl
cmpsb
iret
ret
insl
mov
test
jne
mov
xchg
lret
repz
push
mov
es
mov
mov
inc
sbb
fstps
cmp
mov
or
dec
jne
jmp
and
xor
dec
sbb
xchg
pop
stos
imul
gs
call
jl
inc
lock
adc
movsl
stos
jbe
adc
cli
fcompl
cs
pop
lahf
mov
jle
and
add
out
dec
sub
sub
jbe
pop
xor
aas
dec
idivb
add
sar
cmpsl
push
and
push
cmp
dec
mov
fdivr
dec
ljmp
test
jp
cmp
push
dec
leave
add
pop
pop
fldcw
pop
inc
orb
jle
mov
fists
adc
sti
or
mov
adc
and
dec
imul
cmpsl
rclb
pop
mov
das
pop
rorl
dec
dec
int3
and
subb
sbb
mov
adc
jle
loop
push
les
ss
jne
or
not
jecxz
cmp
out
xchg
adc
nop
mov
repz
fucomip
arpl
gs
imul
faddp
int3
add
xor
pop
sub
dec
push
dec
xchg
mov
and
cmp
popa
cmpsb
movsb
popf
mov
pop
adc
icebp
andl
inc
xchg
jl
clc
dec
xorb
rorb
mov
aaa
cmp
call
xor
dec
andl
lods
mov
dec
stc
test
xor
dec
inc
xchg
jb
mov
pop
cmpl
ds
popf
lea
sbb
rclb
rcr
rorb
bound
jl
les
outsb
int3
lahf
int
ret
push
incb
jo
stc
pop
mov
push
cli
test
cmp
ret
dec
ja
lcallw
sub
aas
insb
inc
test
xchg
jnp
loopne
stos
dec
push
mov
mov
daa
ficoms
rolb
dec
or
cli
pop
movsl
stc
jmp
lods
in
cld
cmp
imul
mov
cmp
dec
hlt
sahf
fmul
push
jae
xor
mov
xchg
inc
xor
dec
rorl
jl
or
xchg
xchg
pushf
stc
fwait
loope
cmp
mov
fwait
icebp
dec
cmp
popa
lods
lret
mov
mov
shlb
gs
and
lea
and
repnz
cli
inc
lret
inc
mov
test
sub
push
imul
movsb
adc
ja
push
jle
mov
and
xchg
and
mov
pop
sub
cmc
cmp
outsb
cli
shr
inc
icebp
jno
jnp
xlat
xor
mov
sub
mov
xor
push
sub
dec
mov
add
sub
pop
jb
outsl
out
je
aad
mov
iret
scas
rorb
inc
roll
test
xor
xchg
outsl
cmc
push
inc
and
aas
fsubrl
jle
clc
into
pop
ror
outsl
adc
jmp
jnp
jl
fdivl
push
stos
mov
add
mov
ret
sahf
rorb
movsb
or
icebp
aad
dec
inc
inc
cmpsl
mov
and
or
and
imul
pop
dec
dec
cld
je
shrl
sbb
sub
imul
fs
aam
jle
loope
adc
pop
in
pop
pop
mov
sub
lods
jmp
xchg
mov
jg
pop
adc
jl
sbb
sbb
dec
adc
jg
xchg
sbb
jnp
notb
cmp
mov
jmp
pop
and
add
test
call
nop
cmc
sahf
ror
in
push
mov
out
pop
dec
dec
push
jbe
subl
jns
outsb
pop
orb
negl
mov
and
push
jne
mov
xor
and
and
mov
dec
mov
aaa
cli
dec
scas
pop
xchg
aas
int
leave
mov
out
mov
jmp
aaa
dec
sbb
cmp
ret
iret
insb
xor
shl
dec
mov
push
cmpsl
jl
pop
sarl
ret
mov
std
ret
sub
cmp
cmp
mov
stos
sub
cmc
dec
pop
jg
xor
aas
sti
xchg
and
xchg
cmpsl
pop
xchg
adc
fmuls
sbb
fs
clc
shl
scas
repnz
fldt
pusha
mov
test
ret
cmp
xchg
push
dec
jp
xchg
aas
dec
push
xlat
bound
ljmp
and
xchg
sub
fisttpll
or
loope
xor
orl
lock
test
or
pop
xchg
push
xchg
mov
adc
mov
adc
int
enter
cmc
mov
or
sbb
inc
push
and
sub
ror
xchg
xchg
lock
pushf
xchg
dec
sub
in
leave
cmp
jbe
xor
push
cmovae
arpl
lods
mov
addl
or
jb
mov
sub
jmp
push
mov
add
outsb
dec
xchg
lret
pextrw
dec
xchg
xchg
adc
orb
push
aaa
adc
in
jle
dec
push
add
dec
fucom
iret
pop
aad
push
data16
dec
dec
cmc
mov
mov
aaa
dec
into
cltd
test
pop
dec
add
addr16
cmpl
into
loopne
adc
dec
fs
pop
jl
jnp
dec
dec
lea
ja
mov
mov
xchg
fisttpll
pop
inc
cmp
jne
lods
jns
xor
nop
push
into
pop
xchg
inc
data16
cmc
das
imul
mov
jge
scas
xchg
hlt
push
loopne
out
inc
jo
sbb
mov
jl,pn
dec
pop
and
xchg
jg
dec
repz
add
pusha
adc
or
fs
add
push
or
loopne
es
dec
or
mov
pop
sbb
dec
push
rcr
out
push
daa
arpl
shlb
shrb
aas
inc
ds
push
testl
ljmp
pop
dec
push
jg
xchg
mov
scas
cmp
pop
or
cli
rcl
push
mov
mov
lods
sub
add
xchg
dec
icebp
push
or
loop
adc
inc
jg
and
pop
xlat
ficomps
aas
dec
xor
adc
fcomps
cltd
testb
xchg
pop
mov
adcb
or
test
jle
pop
aam
ds
cmp
fcomip
ret
rcrb
aam
out
xchg
push
and
xchg
out
xor
push
xor
in
and
enter
gs
clc
loope
sub
data16
adc
fsubrl
and
cmpsb
stos
test
mov
sub
sub
je
andl
xlat
into
and
dec
clc
cs
inc
sub
ret
and
test
or
std
xor
shlb
fadds
ds
sbb
push
dec
lahf
jle
mov
mov
iret
xor
xor
mov
dec
out
push
cmp
xchg
shlb
dec
add
mov
adc
out
inc
dec
xlat
fisubl
sahf
ljmp
in
adc
outsl
cmp
sti
push
cli
out
xor
sbb
jae
dec
xor
out
js
dec
inc
pop
mov
cld
and
dec
cmp
inc
or
aad
or
dec
scas
int
mov
mov
inc
xor
cmp
das
mov
aaa
shll
dec
in
clc
inc
imul
or
dec
mov
xor
dec
xchg
fsubrs
mov
sub
in
mov
in
jnp
xchg
add
orl
cmpsl
test
cmp
mov
call
aam
push
inc
and
sub
inc
daa
pop
outsl
testl
enter
mov
xchg
jae
lods
xor
fs
lods
mov
jge
inc
pop
xor
vmptrst
aam
xlat
out
pop
shlb
dec
bound
sub
push
adc
icebp
stos
push
or
rcrb
repz
mov
sub
in
sub
mov
cmp
cmpsb
pop
sahf
and
test
loopne
push
pop
sub
mov
pusha
pop
outsl
and
in
inc
cmp
or
lods
inc
cli
push
sbb
adc
cltd
sarl
es
scas
sbb
adc
adc
jl,pt
add
cmp
push
pop
inc
scas
movsb
add
pop
aam
xchg
sub
test
sub
jle
cmpsl
inc
fisubs
es
rorb
jl
std
jns
or
mov
fmuls
addr16
pusha
cltd
rcr
pop
push
popf
mov
and
add
inc
fbld
adc
scas
jo
scas
jnp
xchg
xor
into
or
data16
int3
mov
xor
push
fbstp
in
dec
cmp
dec
ret
cmp
sub
lock
lea
push
dec
mov
push
or
mov
ds
mov
adc
aaa
jle
xchg
dec
enter
pop
pop
cmp
xor
jp
cs
inc
rcl
jmp
pop
mov
cld
inc
pop
push
fimull
mov
nop
stos
jle
xlat
and
cwtl
mov
fstps
adc
mov
sbb
jo
fdivr
or
jb
shrl
idivb
or
mov
test
adc
mov
mov
sub
hlt
in
mov
imul
loop
divl
cmp
icebp
jecxz
into
sub
mov
add
xchg
les
jl
imul
mov
pop
push
into
inc
lods
stos
xchg
mov
call
add
add
enter
jg
mov
mov
xor
sub
mov
push
xchg
int3
cmp
inc
rep
xor
data16
cmp
lret
lret
fidivl
pop
out
cmpsb
bound
in
adcb
push
mov
test
sub
push
pop
push
add
cmpsl
cli
cmc
push
inc
jns
bound
sub
out
insl
lds
jno
lahf
dec
shrb
aaa
cmp
cmp
andl
dec
shrl
push
les
scas
mov
mov
push
adc
lea
mov
hlt
push
daa
jno
adc
xchg
adc
xchg
pop
lea
or
das
pop
lods
pop
jno
xor
insb
jnp
inc
mov
or
sub
gs
and
incl
xchg
vpcomd
inc
xor
pop
loopne
adc
jge
jl
sbb
bound
cwtl
jl
lock
dec
call
sarb
int
dec
in
jge
jne
lret
fmuls
stc
and
fcompl
outsb
je
dec
test
or
xchg
mov
dec
mov
mov
sarl
dec
je,pt
aas
cmpsl
add
cltd
mov
lods
adc
sbb
inc
mov
dec
fnsave
aad
and
xor
sub
arpl
mov
enter
clc
push
jno
push
scas
popf
lods
xchg
mov
dec
mov
cltd
fidivs
xor
cmp
loope
out
or
fistpl
test
and
dec
push
mov
repnz
xchg
dec
lcall
out
aaa
mov
sahf
dec
and
pop
push
cmp
lahf
sub
loop
dec
roll
shll
stc
adcl
or
dec
fdivs
data16
cs
jecxz
movsb
xor
into
dec
rcl
roll
adc
inc
lret
in
test
pop
ds
hlt
dec
movsb
or
mov
lock
dec
cmp
cmc
fnstsw
mov
xchg
sub
mov
mov
das
cmp
cwtl
in
adc
repz
sarw
xor
mov
inc
bound
ret
add
push
leave
in
shr
dec
jl,pn
xsaves
or
mov
sarb
push
clc
out
mov
lock
out
jg
dec
lds
rol
rcrl
push
lock
push
stos
pop
xchg
mov
cmp
mov
mov
jb
push
out
add
cmpl
sbb
mov
dec
dec
cmpsl
cli
ja
add
fcomps
ss
sub
iret
test
mov
loope
sbb
out
cltd
dec
adcl
cmpsl
xlat
adcb
xor
mov
iret
aam
stos
dec
mov
pop
inc
push
stos
cmp
mov
ud1
and
testl
dec
jle
movsl
aaa
mov
enter
mov
scas
popa
xchg
dec
and
insl
out
push
dec
cmp
add
cwtl
mov
mov
dec
pushl
sahf
sub
shrb
mov
js
add
pop
mov
dec
imul
xchg
popf
icebp
or
loope
out
orl
ljmp
nop
pushf
cmp
dec
loop
mov
outsl
sbb
test
cs
pop
mov
lahf
imul
push
fistl
int
lods
jbe
pop
daa
dec
jne
mov
pop
dec
dec
push
stc
dec
jbe
or
shlb
dec
mov
les
dec
popf
jp
dec
pop
and
xor
movsb
dec
push
mov
xor
dec
pushf
mov
pop
mov
add
mov
pop
in
pop
cmpsb
push
mov
cmp
cwtl
cli
arpl
shll
fadds
nop
mov
rorb
inc
pop
mov
dec
mov
jge
sbb
int
dec
scas
jns
into
mov
iret
push
shll
dec
jp
jl
stos
scas
fildl
sub
fs
mov
aas
sub
lret
popa
addr16
add
sub
test
mov
xchg
imul
clc
lods
negl
inc
add
xchg
int3
push
cmp
aas
push
out
dec
xor
sbb
cld
roll
add
es
add
push
repz
popf
mov
imul
inc
cmp
repnz
xchg
push
jecxz,pt
inc
dec
loop
pop
imul
xor
adc
cltd
jecxz
dec
lcall
test
pop
inc
bound
dec
adc
mov
out
fildll
mov
mov
and
sbb
xor
push
fmull
cld
push
dec
lcall
mov
dec
add
lret
mov
pop
lods
cmp
add
and
push
push
xchg
add
dec
mov
fs
jno
bnd
xor
jb
or
test
jns
add
push
imul
ret
dec
mov
hlt
test
dec
lahf
outsb
jp
fwait
or
mov
xor
xlat
dec
pop
roll
in
fldcw
push
sbb
inc
fwait
jmp
mov
dec
push
arpl
fdivrl
dec
dec
xlat
icebp
xor
dec
out
iret
jg
or
jnp
js
push
leave
adc
repnz
push
mov
push
in
dec
ljmp
mov
dec
sti
sub
mov
push
dec
mov
mov
lcall
dec
add
xchg
iret
aam
loopne
sub
push
xchg
mov
lret
xchg
clc
or
add
fcmovnb
repnz
fnstcw
fists
mov
loop
test
test
daa
jmp
add
or
mov
orl
pop
cmp
dec
sub
push
jbe
adc
cs
enter
inc
sbb
jae
fcmovne
mov
pop
popf
sarl
aad
add
aam
mov
and
dec
cld
ss
fs
cmp
push
lcall
jg
fidivrl
jl
xor
push
bound
jae
dec
dec
loopne,pt
adc
dec
sub
pop
mov
mov
cmp
inc
and
cmpsl
movsb
pop
sbb
in
insb
cmp
mov
jnp
aas
pop
pop
jg
clc
dec
pop
jle
je
jle
xor
xchg
adc
xchg
xor
jecxz
mov
popa
sub
mov
sbb
cmc
aas
mov
xchg
bound
fcompl
gs
add
jg
aam
hlt
stc
call
and
jle
lahf
hlt
fistps
rcl
xchg
add
push
das
ljmp
popa
adc
pop
pop
rclb
jecxz
inc
adc
ljmp
sub
adc
stc
outsl
cmp
inc
inc
dec
cltd
ja
xchg
into
test
xor
push
jne
jmp
push
jge
in
dec
xor
or
popa
test
fists
dec
gs
das
push
imul
pusha
dec
ja
sbb
cli
push
dec
push
sbb
adc
add
rorl
xor
iret
bound
dec
push
jecxz
xchg
xorl
mov
jp
push
and
pop
xor
jb
push
popa
adc
aaa
cmp
test
pushf
and
and
and
aam
mov
lods
xchg
xchg
cld
pop
dec
cmp
dec
ja
add
add
pop
dec
add
xchg
push
out
fiaddl
aaa
cmpsl
and
stc
push
pop
or
shl
add
mov
xchg
hlt
arpl
clc
adc
sub
insl
fnsave
dec
les
push
push
jne
loopne
dec
and
inc
pusha
test
clc
lahf
ficoms
add
into
pop
push
ret
and
stos
adc
or
fs
data16
pop
xchg
je
mov
mov
dec
lcall
fildl
sub
std
adc
shrb
mov
add
adc
add
out
pop
fldt
dec
xor
testl
push
mov
sbb
inc
insb
pop
sub
pop
xchg
movsb
pop
xchg
sub
movsl
faddp
mov
scas
loop
jle
mov
cmp
lahf
aas
popw
mov
pop
out
xor
mov
fwait
cmp
fwait
jmp
jp
add
je
add
mov
icebp
and
mov
cmpl
push
push
mov
mov
ss
cmp
cmc
in
push
shl
xlat
sub
jb
repnz
inc
jle,pn
sub
cld
js
or
test
ficompl
push
adc
jo
iret
cmpsl
xor
stos
and
inc
cmp
popf
mov
jmp
jl
inc
scas
xor
or
dec
push
sarb
cmp
push
add
jle
cmc
mov
loop
sub
scas
cmpsl
mov
jp
push
cvtpi2ps
sbb
push
pop
cmp
mov
sarb
call
mov
inc
sub
out
mov
inc
aaa
pop
push
sbb
mov
ficomps
nop
lret
repnz
lods
pop
inc
jle
repz
adc
sbb
jge
mov
int3
lea
sti
push
xchg
and
fimuls
lea
mov
fidivrl
and
cmpsl
addr16
fld
inc
es
push
push
lret
jp
fs
loop
and
jl
inc
jbe
dec
fucomip
mov
dec
icebp
je
mov
sub
xor
push
cmp
stos
fisubs
insb
dec
xchg
add
inc
dec
hlt
sub
test
cmpsl
mov
pop
mov
dec
dec
and
pushf
cmp
dec
out
fcoms
fiaddl
dec
scas
mov
test
dec
sbb
jmp
fimuls
dec
jg
loopne
xchg
dec
fs
gs
js
fisttpl
mov
enter
and
xchg
add
movsb
dec
outsb
jo
dec
mov
hlt
inc
xor
testb
add
fstpt
push
cld
dec
pop
jo
lss
dec
xor
mov
test
dec
mull
sbb
fistps
xor
loope
repnz
sbb
movsb
shr
dec
in
jae
mov
loope
push
lret
xor
aas
cld
enter
jo
mov
std
sbb
jmp
bound
sti
inc
adc
xchg
aaa
fcoml
xor
and
stc
pop
loop
ss
sub
lods
aaa
dec
cmpsb
or
fsubs
xor
adc
ja
dec
lahf
je
leave
adc
scas
pusha
fisttpl
test
shll
and
lcall
inc
movsb
sub
adc
out
dec
sarl
aad
add
push
dec
movsl
fcoml
das
dec
andb
xchg
push
add
xor
mov
sbb
outsl
loopne
dec
loop
mov
repnz
jp
xchg
iret
xor
or
out
pop
repz
pop
inc
mov
xlat
sub
stc
das
into
cld
dec
sub
mov
jge
mov
into
mov
mov
push
jae
bound
into
inc
push
add
jo
mov
setbe
mov
dec
sti
out
jns
sbb
pop
test
mov
mov
movsl
dec
pop
sbb
iret
rorl
adc
adc
les
xor
jmp
ficoml
mov
cltd
cmpsb
sahf
hlt
xchg
adc
jno
dec
ret
in
inc
push
dec
cmpsl
xor
dec
cwtl
xchg
and
int
push
dec
mov
icebp
dec
out
aas
jecxz
sbb
cmc
xor
std
lods
or
jbe
jmp
test
ret
inc
cmpsl
imul
decl
push
xor
lret
sti
mov
mov
pop
dec
xchg
in
das
clc
mov
dec
lods
adc
fwait
outsb
sahf
mov
movsb
xchg
xchg
loop
or
ja
frstor
pop
fildl
repnz
sub
dec
add
dec
mov
sbb
fucom
dec
in
xchg
filds
inc
movsb
bound
mov
jl
dec
in
mov
mov
outsb
mov
int
shrl
dec
test
xchg
loope
pop
movsl
scas
dec
mov
sub
dec
mov
inc
nop
sub
push
cs
fs
add
iret
ja
enter
das
out
sarb
mov
xor
push
xchg
sbb
xchg
jle
inc
test
add
call
mov
mov
cmovg
cmp
imul
sbb
mov
dec
add
adc
cwtl
pop
jmp
sub
and
add
lds
dec
roll
push
decb
ret
xchg
loop
fisttpl
mov
sbb
adc
mov
icebp
outsb
dec
pop
dec
xchg
roll
dec
xor
scas
cmc
aaa
into
fs
imul
dec
dec
cmp
xchg
cld
dec
sbb
mov
outsb
sbb
imul
jp
and
shrb
push
jmp
addr16
pushf
test
in
mov
lods
mov
pop
clc
dec
sbb
adc
dec
pushf
add
jecxz
ja
adc
push
dec
es
cs
cmp
js
jne
push
pop
mov
test
jns
cmpsl
adc
icebp
pushf
jmp
nop
scas
ret
shrl
add
dec
pop
rolb
testl
sahf
jmp
push
adc
sub
lea
mov
cmc
and
cmpsb
fs
scas
outsl
pop
fisttps
pusha
js
mov
movsl
xorl
dec
dec
adc
js
scas
shlb
in
popf
shll
dec
into
fbstp
test
dec
sub
dec
push
add
adc
shrl
lret
push
aaa
and
mov
dec
adc
fcomps
sub
push
fistl
inc
ds
mov
pop
inc
shlb
cmp
and
dec
repnz
xorl
mov
ss
push
cmp
jmp
out
push
jae
shl
test
mov
daa
inc
xchg
dec
add
lods
pop
xchg
jmp
adc
push
dec
xchg
addr16
add
cmp
xor
fnstcw
push
dec
fildl
dec
fcoms
sub
sbb
test
test
in
xorb
dec
pop
jg
lds
dec
jle
push
xor
aam
xchg
or
jge
jne
and
dec
push
mov
in
pop
stos
adc
fmuls
push
imul
jne
jg
jmp
jle
push
dec
stos
mov
lock
pop
fmull
xchg
icebp
dec
sub
sbb
pop
xchg
sbb
pusha
push
jb
icebp
xchg
cmp
dec
dec
jbe
push
pop
push
mov
cmp
test
xor
out
sub
ljmp
in
pop
stos
lods
stc
bnd
mov
test
repnz
hlt
fsubs
out
mov
cld
jl
add
mov
cmp
dec
xchg
adc
xor
pop
popf
pushf
movsb
enter
test
ljmp
inc
xor
fistpl
jl
into
lret
dec
loope
clc
scas
shrl
out
leave
dec
fmull
ret
jg
leave
push
popl
movsl
sbb
dec
xor
jg
pop
and
outsb
mov
stc
xor
in
popf
popf
mov
sub
das
mov
lret
mov
mul
dec
dec
push
addb
mov
dec
out
call
frstor
int
add
cli
sub
cld
mov
or
push
popf
les
inc
int
jnp
lods
cmpsl
jl
rcl
mov
ja
xchg
adc
movsl
xor
das
jle
insb
sarb
xchg
fbstp
popl
lea
push
mov
pusha
pop
add
dec
mov
jecxz
push
inc
in
clc
sub
inc
mov
mov
mov
daa
stos
jp
push
pop
sub
cmp
push
insb
jb
addr16
js
mov
rorl
shl
sub
mov
inc
inc
popl
push
mov
dec
fsubl
cmp
outsb
rol
dec
test
mov
imul
or
lods
jecxz
iret
out
mov
dec
mov
push
pushf
sbb
inc
lods
push
xchg
in
ret
enter
pop
jns
dec
or
push
jmp
outsl
je
jle
dec
dec
daa
stos
cmpsl
inc
and
jle
fists
into
fisttpl
jl
xchg
push
lods
jle
pop
lcall
shrl
decb
dec
cmpsl
xor
cmpsb
mov
jle
dec
mov
jmp
mov
int3
out
mov
mov
pop
sahf
test
dec
jno
insl
xchg
push
sbb
es
push
jbe
jmp
pop
incb
mov
dec
fcoms
mov
aad
call
mov
iret
lea
dec
in
jmp
dec
push
xchg
pop
test
mov
cwtd
shll
decl
mov
dec
xor
cwtl
sub
jg
inc
xchg
mov
pop
pop
mov
fldenv
add
inc
in
pop
adc
imul
dec
aam
sbb
sub
dec
jns
inc
dec
cltd
dec
add
dec
inc
int
cli
adc
scas
cmpsb
mov
dec
aad
out
cmc
mov
iret
dec
je
jle
pop
aas
or
enter
add
sbb
fs
jl
sub
adc
in
repz
fnstenv
dec
mov
testl
std
dec
leave
pop
pop
dec
jbe
mov
mov
pusha
fistpl
sahf
or
push
dec
in
mov
mov
out
jge
decl
dec
int3
shlb
dec
sbb
or
xchg
outsb
inc
adc
aaa
rcrb
bound
fildll
int3
mov
push
add
xor
sbb
bnd
outsb
jnp
in
wbinvd
adc
movsb
fstpt
jl
adc
cmovs
adc
inc
cmp
push
add
fcmovbe
inc
xchg
jge
call
repnz
aaa
cmp
mov
cmc
sbb
dec
stos
add
dec
add
mov
dec
divb
sbb
mov
and
rcrb
call
lret
jg,pn
das
mov
add
aas
jle
mov
pop
jae
dec
mov
filds
std
pop
cmp
cmpsl
movsl
adc
mov
lods
cs
gs
jecxz
dec
mov
in
sbb
sbb
push
sti
dec
aad
hlt
mov
xor
int3
scas
dec
jmp
xlat
pop
ss
orl
sti
inc
xchg
lea
jno
mov
pop
jge
mov
push
outsl
mull
fisubrs
dec
or
movl
repnz
or
push
rolb
add
inc
add
push
cmp
decl
ljmp
mov
xor
dec
dec
cltd
mov
inc
mull
loopne
dec
daa
test
and
sub
pusha
dec
mov
aas
cmpsb
xor
std
jg
and
dec
test
jo
ret
add
xchg
jge
mov
inc
dec
jmp
sub
dec
add
dec
ret
cmp
xchg
aad
out
mov
fdivrl
test
loopne
add
sbb
xor
outsb
das
lock
enter
loop
and
add
xor
xchg
lods
pop
rolb
dec
and
xor
orb
mov
aas
adc
push
push
mov
xor
lret
xlat
and
rorl
icebp
and
or
shll
sub
adc
xor
fdiv
dec
add
lock
xchg
sbb
out
fcompl
iret
call
daa
loope
xor
cmp
outsb
push
dec
sti
jne
xlat
movsb
mov
mov
dec
inc
out
jnp
popf
fidivl
push
inc
repnz
dec
enter
xor
jbe
test
dec
icebp
pop
cmp
push
adc
insb
dec
mull
or
dec
call
loopne
adc
js
shll
imul
nop
sbb
dec
loopne
dec
mov
imul
mov
jae
dec
pushf
mov
fisttpll
cld
pop
dec
divb
dec
xor
loopne
iret
sub
sub
out
push
mov
add
and
pop
dec
or
pusha
mov
push
jmp
pop
xchg
out
dec
stc
cltd
imul
int3
inc
xor
mov
dec
jnp
xchg
shl
jl
dec
aaa
jns
xchg
xchg
mov
pushf
and
arpl
adc
adc
fnstsw
shlb
xchg
dec
lods
sti
xchg
pop
jg
jl
push
jbe
push
ret
xor
add
gs
enter
jns
loop
test
dec
call
mov
mov
movsl
sub
ja
scas
xor
notl
cmp
inc
inc
bnd
push
popf
std
adc
subl
lock
cmp
push
jbe
cmp
dec
mov
stos
insb
xchg
mov
mov
and
dec
daa
das
adc
scas
loope
je
inc
jmp
fcmovnb
cli
dec
testl
xchg
rorl
or
das
fimuls
les
call
call
or
dec
inc
cmp
fwait
jge
inc
pop
pusha
jbe
push
xchg
jmp
movsl
dec
adc
repz
imul
ret
out
cs
idiv
dec
or
mov
icebp
sarb
mov
push
pushf
and
xor
xchg
ds
dec
sub
adc
lods
dec
push
std
mov
mov
adc
inc
add
into
lods
fisttpll
add
jbe
fimuls
icebp
add
jp
dec
add
stos
sbb
pop
push
dec
push
jno
sarb
enter
push
inc
mov
and
sarb
out
sbb
mov
xchg
dec
fiadds
sub
jns
ss
movsl
inc
gs
and
aad
aaa
xor
outsb
andl
mov
add
jmp
jl
js
pop
xchg
xlat
push
cmc
insl
dec
js
sub
and
sarl
inc
mov
leave
mov
cld
dec
rcrl
pop
adc
outsl
popa
pop
cs
sbb
aas
mov
cmp
test
rolb
shrb
sub
mov
xor
cmp
push
xchg
test
push
nop
pop
dec
push
mov
movsl
dec
mov
pop
jl
arpl
xor
loopne
je
xchg
push
jl
dec
xor
mov
movsl
int
mov
cmp
xor
xor
or
stos
mov
add
outsb
pop
jnp
imul
dec
cmpsl
iret
mov
in
nop
std
leave
dec
adc
push
popa
dec
dec
xchg
dec
les
xor
xlat
add
pop
loop
fldt
inc
into
cli
jg
out
xchg
mov
pop
inc
xchg
test
xor
adc
stc
cmpsb
push
loop
sahf
lods
dec
fimull
or
aam
ja
cmpsl
xchg
test
push
inc
xor
addl
xchg
cli
jmp
outsl
lods
pop
cmp
imul
xchg
mov
dec
movsl
dec
mov
inc
cmp
lahf
add
sub
adc
dec
data16
lcall
fldt
dec
movb
cli
lahf
ficomps
cmpsl
or
add
jno
xchg
and
imul
sub
mov
adc
clc
iret
je
add
inc
push
jnp
icebp
sbb
push
mov
into
inc
xchg
sti
cmc
push
dec
mov
aam
ret
mov
repnz
ds
rorl
add
mov
or
adc
aad
fadds
sub
rorb
dec
add
scas
add
mov
das
ficoml
aaa
add
mov
mov
into
xor
std
xchg
inc
sti
push
scas
push
int
test
or
adcl
test
movsb
enter
ss
cmp
loope
adc
xchg
jle
mov
das
sub
out
dec
push
enter
js
fbstp
dec
es
sub
adc
dec
cmp
mov
dec
loop
pop
cmp
xor
adcl
add
cmp
fcomps
insl
aas
sahf
mov
dec
sub
mov
jne
flds
add
cmp
daa
stos
dec
xchg
lock
rclb
mov
lods
ret
repnz
jl
dec
mov
add
inc
dec
rcrb
rcrl
fstpt
pop
ja
add
leave
jge
jmp
adc
dec
xchg
mov
cmp
mov
stos
push
or
xchg
jl
lret
cmp
dec
fstpl
clc
dec
mov
xlat
xor
test
fmull
ds
das
xor
cmc
sahf
pop
int3
pop
jb
dec
or
push
cmp
push
mov
dec
mov
das
jl
cmp
cmc
bound
pop
add
cmp
les
jle
mov
addr16
push
adc
cmpsl
mov
sbb
or
jl
icebp
fstpt
sahf
pop
inc
xor
out
pop
sub
jo
pusha
pop
test
xchg
out
mov
dec
push
cmp
stc
or
inc
mov
fsubl
sar
aam
idiv
sbb
lods
les
jp
jle
loop
jns
push
sbb
into
sbb
mov
add
cmp
mov
push
sub
das
loop
inc
test
xor
add
or
mov
pop
sub
pop
fwait
inc
mov
push
adc
adc
lcall
xlat
xchg
xchg
dec
pop
movsl
mov
data16
dec
stc
rdtsc
dec
mov
iret
cli
jg
cld
lea
cmp
repnz
sub
into
orb
mov
inc
cs
popa
inc
cli
jge
ret
add
fadds
mov
xlat
movsl
pop
int3
mov
paddw
mov
call
add
test
xor
and
xchg
jb
lahf
mov
dec
pop
fnstenv
mov
or
adc
dec
dec
jg
mov
adc
mov
imul
sahf
and
dec
loop
ljmp
inc
pushf
fcomp
notb
pop
dec
and
cmp
rorl
push
mov
push
inc
mov
inc
dec
mov
je
jle
in
push
dec
mov
incl
fisttpl
addb
fisttpll
mov
and
pop
sbb
mov
insb
dec
mov
movsb
repz
cmp
jl
test
ficoms
sti
cmp
dec
push
imul
push
sbb
ret
xor
bound
outsl
data16
in
leave
sub
call
xor
or
xchg
cmp
mov
push
in
stos
inc
jmp
add
cli
dec
cli
cmp
pop
push
icebp
pusha
shll
imul
mov
jp
pop
ljmp
cmpsl
bound
int
cs
lahf
imul
pop
data16
aaa
outsb
jne
lahf
cmc
inc
add
fimull
shlb
jl
mov
mov
adc
push
xor
movsb
mov
sbb
xor
push
sti
adc
dec
sub
jl
fidivrl
and
dec
ljmp
or
movsl
cmp
jae
insl
in
cmp
in
ret
addr16
aam
mov
int3
push
mov
jae
push
sub
add
inc
mov
lahf
or
dec
mov
or
stos
adc
out
dec
mov
bound
mov
les
push
sub
insl
inc
rorb
push
jne
scas
fimuls
adc
xor
insb
in
push
jmp
scas
push
fs
out
xor
inc
or
iret
int3
push
lahf
outsb
xchg
xchg
fdivs
dec
or
jmp
cmovle
movsl
or
mov
out
dec
sub
cmc
push
lock
hlt
testb
cld
ret
dec
adc
sub
push
insb
xor
push
jl
mov
dec
mov
jecxz
cmp
test
adc
out
dec
rcll
pop
xchg
mov
cmp
and
xor
mov
hlt
mov
ja
test
loope
dec
mov
sti
push
pushf
xor
rorl
lds
jp
inc
jle
sbb
or
push
or
and
mov
dec
out
cmp
pop
dec
int3
aaa
jbe
mov
dec
dec
xchg
sahf
jmp
dec
mov
cmp
fwait
pushl
fmulp
dec
and
repz
dec
mov
adc
cmp
outsl
mov
fisttpll
and
outsb
xor
dec
outsl
dec
stc
lcall
dec
test
sub
pop
sub
dec
fsubrs
sub
add
push
xor
push
pop
ljmp
push
jne
ret
mov
push
insl
testl
shll
std
test
testb
sbb
push
sbb
jne
add
popf
mov
dec
push
lock
or
out
dec
pushf
xor
xor
add
arpl
inc
scas
insl
dec
or
test
cmpsl
adc
inc
arpl
jne
pop
lods
out
mov
repz
out
jl
mov
xchg
dec
xchg
stos
arpl
dec
adc
sarl
push
mov
test
xchg
push
jecxz
dec
cltd
out
push
adc
and
xor
inc
lret
mov
xchg
mov
nop
dec
dec
lds
les
iret
xlat
in
repz
in
sbb
dec
mov
cld
mov
mov
test
dec
outsl
sti
xchg
mov
mov
iret
dec
loope
jmp
outsl
push
and
jl
inc
je
xchg
mov
decl
popa
add
dec
shl
imul
cmovge
pushf
sub
shlb
mov
lret
jmp
das
mov
and
cmp
sub
inc
mov
pop
sbb
rorb
dec
stc
sahf
lds
pop
and
mov
pop
inc
dec
cmp
sahf
jbe
dec
js
std
sub
dec
pusha
stos
jne
fdivrs
lea
mov
test
fwait
in
adc
mov
inc
mov
jne
inc
ss
insb
jle
dec
pop
imul
dec
loopne
ja
es
popa
mov
jle
lods
pop
and
ja
mov
mov
xchg
inc
mov
dec
popa
pop
adc
mov
adc
scas
and
test
scas
push
out
ror
jmp
sarl
outsl
subb
ret
dec
xchg
inc
cmp
pop
xchg
dec
lock
dec
lret
dec
or
inc
jl
mov
hlt
das
jle
jp
pop
pushw
add
jl
aas
push
repz
lods
pop
dec
movsb
lcall
test
inc
int3
rorb
adc
jle
orb
jl
jb
and
mov
xor
push
lahf
xor
mov
popl
cmp
pop
aad
rcll
xchg
pop
xor
mov
insb
iret
dec
test
xor
or
cmp
data16
and
ds
xchg
in
shll
or
fs
pop
mov
inc
inc
pop
movsl
dec
jl
jo
inc
es
gs
fisubl
push
push
scas
mov
arpl
out
mov
jns
dec
mov
lret
and
xchg
lcall
xorl
inc
pop
aas
dec
mov
dec
repz
clc
sti
pop
dec
pop
bound
fnstcw
jg
sub
in
dec
jg
es
inc
repnz
ljmp
mov
into
adc
lea
repz
je
repz
push
dec
iret
subb
sub
subb
repz
mov
push
mov
xchg
dec
test
lret
dec
roll
push
out
aas
dec
outsb
mov
mov
fisubrs
sbb
push
adcb
sbb
add
xchg
mov
and
cli
dec
pop
or
pop
mov
sahf
dec
cmp
jp
xchg
out
sub
add
inc
std
mov
insb
sti
das
mov
push
data16
push
movsb
enter
xchg
test
outsl
mov
dec
scas
push
aam
lods
sbb
inc
push
xor
jge
add
icebp
iret
sub
out
jl
dec
fnstsw
sarb
sqrtps
and
and
adc
sbb
push
js
add
cmp
push
insl
fadds
cmp
mov
jle,pn
dec
inc
and
mov
adc
add
cld
repnz
out
mov
sub
insl
adc
cmp
lcall
xor
sub
mov
rolb
or
pop
decb
mov
movsl
pop
fists
scas
int3
sub
dec
jg
ljmp
push
push
jno
or
pop
sti
push
lcall
mov
movsb
sub
aaa
rcll
or
push
pop
push
dec
scas
shrb
push
mov
and
jae
mov
xchg
sbbb
pop
ljmp
stos
cmp
jg
fdivrl
jnp
cmc
shr
js
push
cld
leave
xor
int3
dec
push
lea
decb
pop
mov
insb
and
popa
popa
dec
js
add
mov
jge
sub
lock
repnz
mov
jnp
mov
fmul
jno
pop
xchg
dec
mov
scas
lret
aaa
cmp
sbb
loope
xchg
mov
inc
push
aaa
dec
scas
fdivrl
push
mov
adc
xor
mov
popa
cmp
cmc
stos
daa
pop
mov
rorl
cmp
adc
cmpsb
in
inc
repz
lods
pop
cmp
cmp
dec
andl
scas
dec
std
jmp
jbe
pop
test
cmp
and
sub
add
push
push
es
inc
add
faddl
les
jl
push
dec
push
loope
and
inc
fmuls
push
cli
pop
pop
ljmp
and
dec
jle
mov
add
push
push
ret
loopne
loop
ljmp
sbb
sarb
mov
inc
fisttps
in
cmp
pushf
pop
cmp
iret
push
scas
pop
add
or
jns
fdiv
fisubl
outsb
int3
lea
jns
arpl
xchg
stos
les
rorl
cmp
dec
cs
jmp
xorb
add
in
mov
mov
dec
cmp
stc
and
mov
sub
xor
dec
and
fwait
decb
dec
cmp
dec
movsl
sub
jns
fs
iret
dec
jo
setge
jmp
xchg
dec
sbb
or
outsl
sub
ficomps
packsswb
sti
shll
stc
aaa
xor
jecxz
push
pop
fimull
es
sbb
icebp
jnp
sub
push
pusha
stc
mov
add
and
sbb
adc
push
pop
add
xchg
mov
test
js
mov
hlt
into
movsb
xor
jecxz
and
loope
xchg
sub
dec
mov
push
and
adc
fwait
and
dec
in
cmp
sti
push
add
cmpsb
inc
idivl
out
dec
out
push
sub
jl
or
fidivrl
dec
sbb
iret
mov
icebp
add
xor
dec
push
inc
out
movsb
lahf
test
push
rcrb
cmpl
inc
pop
pop
push
push
and
or
mov
dec
jo
adcl
and
pop
addl
fnsave
rcr
and
ds
ficoms
xchg
clc
iret
push
xor
out
test
subl
les
pop
sub
dec
pop
mov
push
mov
push
enter
cmp
ficoml
inc
adc
sahf
fimull
mov
or
lahf
iret
or
lcall
sbb
dec
dec
loop
cli
or
out
mov
pop
dec
stos
mov
int3
fwait
ljmp
fidivrs
adc
and
push
or
repz
sbb
pop
mov
pop
jae
out
inc
js
jmp
mov
pushf
popa
inc
inc
inc
sbb
aam
popf
pop
inc
sub
popa
pop
scas
in
aas
pushf
push
sbb
test
sti
mov
xchg
sub
int3
dec
insb
xchg
repnz
and
mov
arpl
lods
in
cmp
and
cmp
xchg
fwait
scas
cld
jmp
stos
pop
fs
testl
mov
push
inc
jne
imulb
pop
xchg
jg
dec
enter
add
inc
cld
inc
jl
ja
dec
inc
add
and
je
mov
mov
jo
les
ds
out
ffree
iret
mov
mov
and
cmp
pop
mov
sub
rcr
test
pop
xor
not
fsub
jg
xor
lret
xchg
cmp
addr16
jle
ret
dec
push
leave
shrb
mov
jle
pusha
mov
mov
rcrb
outsl
add
xchg
icebp
scas
clc
push
data16
call
pop
push
or
outsb
jl
out
cs
pushf
fcmovnbe
sbb
cmp
inc
cld
mov
mov
push
xchg
cmp
dec
lods
dec
ljmp
cltd
gs
sub
sarb
scas
adc
ficoms
inc
les
cmpsb
dec
jne
push
imul
or
or
dec
shl
adc
add
mov
stos
xor
cmp
push
jp
cmc
mov
cs
mov
xchg
outsb
xchg
mov
imul
sub
add
dec
push
dec
cmp
in
xor
loope
lds
jp
pop
std
cmpsb
add
add
jae
mov
xchg
cmp
les
movsl
dec
adc
ret
xor
xchg
mov
pop
lret
dec
test
mov
enter
cld
sub
push
and
lea
imul
pop
cmp
adc
fadds
dec
fldenv
sub
ss
pop
dec
sbb
loop
shlb
out
lods
pop
adc
mov
sbb
in
testb
adc
out
push
jo
fiadds
xor
push
jle
cwtl
dec
in
rcl
adc
cmc
adc
inc
mov
idivl
into
pop
jae
fsubr
jg
jge
aaa
fldenv
loope
into
mov
inc
lods
dec
jno
cmp
pop
dec
pop
dec
pop
repnz
sub
scas
int3
cmp
fidivl
nop
test
xlat
xchg
repz
mov
xor
or
dec
pop
out
sub
mov
fdivrl
xchg
pop
pop
stos
addl
dec
mov
add
fs
dec
cmpsl
pop
push
out
clc
fisttpl
inc
mov
push
xlat
add
dec
inc
push
ds
xlat
adcb
rcrl
pop
leave
or
cltd
jbe
test
dec
push
mov
mov
mov
cmp
gs
les
or
out
adc
inc
xchg
fsubrl
arpl
pop
dec
pop
dec
call
cmp
sbb
int
inc
or
and
sub
mov
mov
push
add
mov
mov
jl
cli
out
sahf
nop
rep
fcmovu
push
mov
push
dec
jl
mov
add
das
inc
incl
adc
push
xchg
sub
ret
int
mov
jb
push
in
sub
iret
jg
jbe
xor
mov
aaa
in
sahf
dec
cmc
push
notb
push
sub
inc
fsubrl
jle
push
pop
sub
mov
jl
jp
fadds
pop
testl
mov
lods
mov
xor
or
or
cli
pop
int3
cmp
mov
and
lds
or
cmp
add
pop
std
push
fisubs
xchg
cmp
push
in
sbb
lcall
inc
xor
cwtl
popa
cs
jg
or
out
add
xor
inc
into
jmp
and
pop
fdivs
xor
dec
cltd
xchg
mov
pushl
mov
lods
or
xor
xchg
mov
cmp
aam
pop
enter
pop
and
and
into
jnp
push
cmp
loop
adc
dec
iret
arpl
repnz
dec
sub
daa
ds
test
mov
mull
dec
dec
lods
push
sbb
ja
dec
jno
notl
mov
cmp
lods
or
dec
loope
lret
daa
cmp
out
cmpsb
jp
int
leave
in
mov
cmp
lods
jle
mov
addl
js
outsb
jnp
mov
icebp
in
xchg
pop
push
andb
xchg
push
les
mov
xor
dec
sbb
mov
test
adc
cmp
xchg
mov
nop
sahf
fisttps
push
ficoms
ds
push
shr
adc
cwtl
adc
pop
jp
outsl
stc
clc
pop
movsb
cmp
scas
dec
outsl
mov
cmp
xor
lcall
push
sti
sub
cli
cmpsb
jg
test
and
cmpsl
cli
sbb
push
adc
sub
mov
add
push
or
fcmovu
aad
clc
add
int
ds
cmp
xor
sbb
arpl
cmp
mov
shll
les
push
lret
or
sbb
xchg
pop
jbe
mov
inc
xor
movsl
dec
dec
push
dec
and
out
subl
test
pusha
or
shl
fmuls
mov
scas
cmp
aaa
loopne
fbld
push
sbb
outsb
aad
xchg
pop
or
in
jp
stos
ljmp
push
fs
std
dec
dec
std
pop
push
sbb
popa
sarb
adc
pop
call
movsl
push
fs
fcmove
cmp
imul
shlb
dec
jns
iret
stos
aam
and
jle
fistps
push
test
mov
xchg
or
sahf
adc
ljmp
inc
mov
jne
jl
pop
out
fnstenv
cltd
ljmp
xor
cmp
dec
ja
fsubs
dec
xor
mov
mov
adc
push
fimull
fiadds
mov
fs
xor
roll
shlb
adc
adc
filds
jecxz
fldl
push
push
std
sti
dec
xor
sub
jne
push
in
jp
test
inc
in
mov
dec
inc
and
xchg
frstpm(287
outsb
adc
adc
mov
subl
inc
jb
cmp
mov
push
insl
clc
test
ss
ret
roll
outsl
mov
or
call
clc
test
inc
ret
pop
or
dec
xor
outsb
data16
dec
cwtl
pop
sbb
push
test
xchg
mov
dec
fwait
enter
pop
ret
testb
and
or
mov
pop
lret
ret
dec
xchg
imul
out
mov
outsb
add
mov
xor
mov
sub
dec
sbb
in
icebp
sbb
dec
ret
cmp
gs
ljmp
movb
mov
loop
pop
sub
lahf
jl
add
adc
dec
dec
push
jns
mov
sub
dec
lods
mov
pusha
xchg
scas
mov
push
xchg
dec
cltd
sti
jo
cmp
jno
inc
cmp
hlt
pop
fwait
mov
lock
out
jg
dec
xchg
mov
inc
cmp
xor
lret
adcl
inc
inc
dec
push
adc
in
sbb
push
adc
xchg
jmp
je
sub
or
cmp
fiaddl
or
xchg
lret
sbb
shlb
cmp
ss
push
fwait
lahf
push
sub
inc
negl
js
sti
int3
dec
xor
inc
add
add
mov
scas
nop
bound
mov
sub
jle
leave
mov
mov
cld
lahf
cs
stos
mov
rol
ds
dec
loopne
sub
test
sbb
out
adc
in
stos
cmp
xor
dec
arpl
lcall
dec
sbb
push
mov
jle
xor
gs
adc
sti
insl
jmp
pop
leave
lods
jbe
movsl
das
lea
mov
push
cmp
leave
icebp
xor
fisttpll
popf
into
or
ljmp
arpl
sbb
mov
mov
push
mov
imul
aas
clc
sbb
loope
repz
rcrb
mov
inc
dec
push
adc
adc
jns
sbb
mov
dec
mov
push
push
inc
pop
lret
iret
rcl
stc
xchg
cmp
sbb
inc
or
in
jl
dec
sub
jne
insl
ds
xchg
dec
xor
dec
dec
clc
mov
das
push
and
cmp
mov
xchg
xchg
sahf
and
dec
and
ret
pop
jb
jg
adc
dec
xchg
das
dec
ja
mov
push
dec
sub
mov
addr16
repz
mov
int
mov
sbb
mov
outsl
xor
movsb
out
and
mov
add
jno
mov
add
and
shr
adc
dec
incl
rcr
cmc
insb
mov
inc
sbb
incb
ret
dec
pop
movsl
icebp
sub
inc
dec
xchg
dec
js
cmc
mov
xchg
shlb
lds
cs
lods
pop
cmc
js
lret
adc
fcomps
mov
dec
call
pop
loop
dec
scas
xchg
sub
cmp
imul
or
add
outsw
call
stos
mul
push
cmp
dec
out
adc
lock
mov
mov
test
dec
mov
dec
cmpsb
loopne
xchg
jle
rorb
jno
in
pop
pop
icebp
mov
mov
nop
xchg
sub
cld
ds
jle
dec
cmp
leave
insl
cmp
sti
xchg
movsl
lods
in
in
pusha
inc
cmpsl
pusha
mov
pop
movaps
cs
push
mov
and
enter
add
mov
iret
fcoml
or
cmp
ss
shr
sbb
jae
neg
mov
repz
rcr
cltd
faddl
mov
inc
lea
cmpsl
sub
push
pop
out
out
pop
cmp
aam
sub
xchg
mov
outsb
xchg
cmovne
je
cmp
xchg
outsl
mov
inc
push
cwtl
adc
jnp
mov
jno
sub
lods
out
in
pop
hlt
ja
xor
inc
pop
xchg
sub
mov
push
fwait
inc
loope
popf
stos
sbb
loopne
rcr
xchg
lret
mov
das
sub
adc
hlt
inc
ss
fwait
add
xor
add
push
inc
das
lds
fs
scas
pop
xor
mov
push
inc
mov
out
mov
pop
cld
aaa
mov
lock
dec
fnstcw
cmpsb
cmp
xchg
push
cmp
mov
insb
enter
push
mov
out
mov
and
shrb
cmp
inc
dec
adc
add
xchg
cmpsl
inc
dec
cltd
icebp
jle
mov
pop
sarl
jl
mov
adc
dec
inc
gs
xchg
into
add
pop
bound
dec
dec
add
sbb
lea
mov
outsl
cli
mov
mov
adc
mov
pop
dec
push
popa
or
pop
in
hlt
or
dec
xlat
mov
sbbl
inc
dec
scas
sbb
popf
dec
daa
jno
sbb
jg
pop
int3
dec
jns
cld
ja
rcrl
cmc
jecxz
jg
sub
xor
dec
xchg
mov
push
adc
leave
push
jno
jno
dec
push
inc
and
int3
fldt
jle
scas
fs
mov
ljmp
dec
icebp
xlat
lods
jg
popf
inc
jns
mov
in
hlt
add
popa
xor
dec
push
dec
xchg
nop
dec
ret
inc
xor
daa
or
leave
dec
inc
gs
shrd
adc
mov
fsubs
mov
in
popf
xchg
sub
fsts
pop
and
jb
push
scas
mov
stc
push
ljmp
mov
aaa
test
dec
negl
xchg
xor
in
clc
inc
aam
pop
shll
jo
push
cmpsl
add
inc
call
pop
push
mov
into
cmp
sub
sub
data16
aad
inc
adcl
add
negb
imul
insl
int
jecxz
popa
inc
pop
scas
dec
jl
mov
pop
jmp
movb
push
lcall
mov
mov
mov
mov
lret
adc
lcall
mov
jl
sahf
mov
btc
nop
shlb
sahf
push
adc
orb
cmp
mov
jle
mov
xor
shrb
pop
aas
push
pop
pop
push
dec
rcll
adc
jb
cmpl
in
daa
cltd
mov
sub
jl
imul
loopne
dec
icebp
popa
sbb
popf
push
and
out
jno
out
add
call
scas
sbb
dec
fsubrs
es
dec
pop
and
mov
push
scas
add
mov
mov
icebp
clc
out
mov
loop
dec
stos
push
pop
imul
add
orl
das
pop
shll
loope
aaa
xor
dec
shll
ja
inc
and
jle
insl
dec
std
push
movsl
add
pusha
xchg
dec
jmp
sub
jp
and
jle
fwait
push
dec
fwait
xlat
inc
and
adc
testb
mov
popa
xor
push
aam
inc
jns
hlt
jo
sahf
daa
out
out
jb
aas
dec
rorl
xor
lahf
inc
popa
filds
in
jae
psubb
inc
inc
dec
movsb
xor
icebp
je
add
lcall
test
adc
loopne
fadds
addr16
mov
mov
jbe
lock
popa
pop
iret
mov
and
dec
push
lcall
dec
add
lds
scas
in
lods
dec
cltd
inc
xchg
arpl
cld
dec
jmp
cwtl
ja
jb
scas
dec
sbb
sub
lods
stos
popa
sti
add
dec
nop
movsb
xchg
loope
dec
shl
in
lret
out
push
out
dec
daa
repnz
push
mov
add
out
xchg
out
aaa
fsub
dec
lahf
cltd
dec
jmp
test
pusha
dec
clc
popf
ss
repnz
inc
lret
dec
mov
xor
lds
pop
dec
inc
rcll
cmp
jbe
inc
sbb
repnz
das
add
inc
sti
lahf
enter
insl
xchg
hlt
dec
sub
push
aas
mov
inc
dec
mov
and
cs
dec
rclb
mov
out
mov
ss
loop
mov
and
scas
fmul
dec
push
cli
mov
outsb
pop
rorb
mov
or
inc
call
sbb
jle
jns
mov
das
dec
testl
dec
mov
mov
xor
and
cmp
push
xlat
fsubrp
adc
int
out
outsl
scas
cmpsb
lret
dec
cmp
xchg
dec
cld
insl
leave
hlt
loopne
jle
dec
adc
add
inc
mov
add
mov
and
repz
imul
stos
pop
hlt
ds
inc
ret
add
and
aaa
test
push
fcmovnb
and
dec
inc
dec
out
xchg
mov
dec
lods
cltd
inc
aam
dec
dec
mov
test
dec
adc
cmpsb
dec
or
mov
mov
repz
cmp
dec
pop
cmp
jecxz
jo
sbb
pop
mov
or
pop
pop
lods
jae
mov
cld
movsl
test
idivl
push
dec
push
pop
addl
adc
pop
mov
adc
dec
jbe
pop
clc
mov
ret
sbb
dec
mov
jp
bound
fcompl
pop
iret
fucomp
stc
push
xor
mov
cmp
pop
mov
adc
into
add
pop
mov
sub
sti
fnstsw
pop
mov
add
dec
in
idivb
scas
mov
push
xchg
dec
jne
mov
rep
mov
dec
mov
mov
xchg
jmp
out
rorb
and
xor
mov
push
test
sub
cmp
movsl
lea
xchg
jle
daa
fwait
pop
push
sbb
mov
dec
dec
sbb
aaa
test
mov
rcr
pop
cli
pop
je
or
mov
dec
lret
dec
pop
inc
dec
push
sti
pop
xor
cs
cmp
sub
dec
push
jl
repz
repnz
or
sub
ss
sub
push
xor
jle
jle
dec
shrl
out
mov
es
mov
cmp
sub
outsb
xchg
or
mov
movsb
ss
add
push
int3
lds
pop
adc
dec
nop
andb
fsubrp
js
mov
mov
mov
lds
inc
test
enter
inc
dec
dec
mov
jb
sub
push
mov
mov
cli
imul
fisttpll
nop
pop
cmp
jbe
ret
inc
bnd
rcr
testl
or
imul
jns
nop
dec
dec
jp
xor
or
loop
subb
jmp
imul
pop
sbb
dec
cmp
movsl
roll
lcall
and
dec
sbb
sbb
outsb
inc
in
xchg
cmp
call
lret
popa
sub
push
hlt
adc
push
fisttps
or
adc
js
jl
adc
popf
imul
mov
lods
js
lods
ficomps
loope
inc
push
cmp
push
clc
gs
in
or
dec
cmc
fs
mov
inc
dec
add
shll
dec
hlt
and
js
aad
add
mov
dec
es
mov
jecxz
mov
dec
add
ss
mov
into
cli
es
mov
push
stos
jno
mov
in
jo
dec
nop
and
inc
push
xlat
jne
dec
sbb
mov
jb
out
pusha
mov
inc
repz
dec
lock
lcall
pop
idivl
or
enter
xchg
iret
cmp
dec
mov
adc
pop
mov
push
data16
jns
scas
dec
sarl
inc
push
dec
repnz
xchg
mov
int3
jno
aaa
push
pop
cmp
dec
dec
xchg
cmpsb
popf
push
pop
int3
shlb
loop
pop
sbb
mov
fildll
scas
mov
mov
xor
sti
adc
rclb
hlt
jns
dec
arpl
sub
sub
mov
dec
out
add
jmp
scas
aam
adc
repnz
lret
or
adc
sbb
dec
xchg
dec
stc
inc
or
dec
dec
xor
shll
jbe
cmp
les
pop
push
xor
push
rdmsr
mov
or
mov
or
dec
fiaddl
shlb
cmc
outsl
dec
loop
mov
dec
cmp
scas
scas
push
jle
add
push
xchg
dec
mov
dec
cmp
pop
int3
jb
xlat
jecxz
clc
push
sub
and
sti
or
and
movsl
jb
adc
jmp
arpl
mov
mov
push
loope
cmpl
adc
popa
push
mov
fwait
fwait
aam
call
or
movl
scas
out
jg
inc
pop
lods
and
cmpsl
rorb
push
cmp
out
sbb
imul
pop
cld
das
jg
aas
lret
jns
scas
mov
test
insl
inc
iret
mov
cld
out
sar
jl
lods
fdivs
jp
int
inc
inc
mov
cmp
mov
pop
jo
jg
or
je
inc
mov
mov
fiaddl
jle
in
xchg
cmpsl
lret
flds
jle
out
iret
mov
xor
add
inc
xchg
aam
jmp
cmpsl
fldl
xchg
push
inc
out
cmpsl
iret
aad
ficompl
loop
and
dec
bound
or
add
xor
xchg
das
sub
xor
inc
aad
bound
neg
inc
dec
jg
and
dec
jl
push
into
xchg
in
dec
xlat
add
jle
sbb
add
sahf
fwait
jb
mov
cmpsl
lcall
mov
pop
dec
jl
push
pop
mov
ljmp
addr16
out
imul
shl
les
fmulp
jg
sbb
aad
aaa
cmc
jo
repnz
jl
mov
inc
icebp
lcall
les
ret
mov
add
sub
mov
sbb
push
adc
mov
dec
imul
divl
xor
jmp
out
popf
outsw
ds
mov
int3
data16
mov
jno
add
xorl
mov
inc
pop
dec
sub
subb
inc
les
aam
fmul
in
jns
outsl
pop
lods
and
mov
insb
dec
mov
pop
xchg
clc
dec
popa
inc
inc
outsb
cmp
or
push
lret
dec
sti
pop
into
xchg
mov
mov
pop
cltd
jp
inc
xchg
pop
dec
or
cmp
jns
dec
sub
sbb
stc
pop
cmc
mov
xchg
lea
repz
pop
addr16
mov
mov
mov
cmp
dec
xor
dec
mov
mov
gs
mov
aaa
inc
repz
unpcklps
scas
dec
rorb
in
inc
xchg
adc
inc
push
mov
and
out
xchg
shrb
in
inc
pop
dec
std
popa
pop
imul
data16
out
fs
add
aas
xor
push
jmp
lods
gs
ds
xlat
mov
xchg
lods
jle
lods
sahf
pop
push
les
lds
xbegin
cmp
sbb
stos
and
push
push
mov
jl
les
mov
sub
push
mov
inc
adc
test
dec
bound
jle
and
popa
jg
das
stos
adc
roll
cld
jmp
jl
cmp
lods
jo
ljmp
mov
ror
stos
inc
push
int
sub
lret
fimull
dec
popf
jp
jmp
fprem
out
scas
jl
mov
imul
stos
dec
jae
xchg
pop
cs
or
lock
cli
dec
xlat
cwtl
inc
xor
inc
mov
stos
xorb
mov
sbb
push
mov
and
jne
mov
mov
mov
hlt
rclb
xor
sti
sub
sub
lods
jns
dec
mov
jle
mov
dec
push
mov
insb
adc
loop
mov
and
dec
xor
mov
cmp
inc
push
or
cmpsb
gs
cld
add
sbb
dec
adc
decb
pop
mov
and
mov
loope
gs
movsb
push
repnz
out
inc
scas
dec
pop
cltd
dec
hlt
sahf
in
cmp
popa
dec
mov
lea
imul
inc
lahf
fmulp
or
cs
push
adc
push
fidivs
dec
and
add
xor
jl
mov
adc
sbb
and
inc
ss
loope,pt
ret
scas
push
in
inc
xchg
testb
sub
inc
into
jg
sub
jno
or
mov
inc
xlat
out
popf
fdivl
xor
stos
call
inc
add
or
fisubl
icebp
sbb
pop
and
sbb
mov
imul
xchg
mov
cmp
fwait
xchg
insb
pop
cmp
pushf
lret
xchg
in
fimull
pop
sub
sbb
stc
push
mov
adc
popa
test
mov
add
cmp
dec
pop
stos
ljmp
cld
jg
stos
orl
scas
sub
and
xchg
in
enter
enter
adc
clc
sub
push
mov
fsubr
rorb
out
sub
adc
and
outsb
jo
xor
cmp
popa
push
xchg
jle
pop
and
cs
mov
xor
pop
test
dec
jg
daa
mov
enter
push
jl
imul
cmpsb
dec
dec
pop
call
jg
shlb
insb
sahf
dec
popf
xchg
ljmp
stc
bound
push
inc
add
dec
or
aas
jmp
mov
xchg
lods
out
stos
mov
adc
dec
jae
xor
pop
and
xchg
push
loopne
xor
stc
push
push
dec
inc
cwtl
mov
jne
fdiv
dec
adc
ljmp
pop
stos
dec
loopne
cmp
pop
add
or
pusha
mov
scas
test
jns
xchg
lahf
jle
adc
outsb
out
mov
and
push
outsb
jno
cmc
jmp
scas
inc
pop
lods
pushf
jg
notl
add
out
inc
xchg
xor
into
or
movsb
dec
sbb
ror
dec
roll
mov
sub
mov
sbb
dec
lahf
out
cmp
rorl
push
andb
jle
fs
adc
clc
fidivs
gs
xor
or
adc
sub
and
into
sub
pop
ljmp
dec
push
sarl
push
aaa
aaa
add
pop
xchg
sti
pop
in
mov
bound
sub
dec
jle
enter
jl
jno
jg
sub
outsb
adc
adc
jnp
mov
popa
fsubl
xor
inc
aam
insb
and
mov
adc
daa
mov
sbb
push
dec
sbb
repz
daa
pop
mov
jl
sub
push
lock
dec
and
inc
cmp
mov
inc
jl
arpl
je
sub
pop
xchg
and
dec
adc
fs
jp
pushf
sub
add
stos
scas
push
jmp
fwait
push
movsl
sbbl
mov
xchg
jl
push
fs
leave
mov
jl
or
ja
push
mov
stos
push
mov
rcrb
lret
xchg
cmpsb
in
mov
mov
popf
fnstenv
jmp
xor
pushf
dec
stc
adc
mov
mov
popa
inc
sahf
movsb
scas
xchg
xchg
push
push
xor
dec
in
mov
sub
jp
dec
mov
dec
mov
inc
push
fisubrl
push
dec
dec
lock
pop
lods
dec
rcr
xor
in
adc
xchg
sub
pop
dec
fwait
dec
mov
imul
push
xchg
aas
mov
inc
out
fnstenv
sub
xchg
popf
cmp
xchg
lds
xchg
jecxz
cld
and
dec
insl
inc
mov
push
mov
xchg
dec
gs
push
and
sub
mov
icebp
or
aad
cmpsl
adc
push
xchg
sbb
jne
subb
testb
mov
xor
loopne
insl
int
pusha
push
cmp
jecxz
xor
arpl
add
cmp
enter
dec
cmpsl
push
ss
data16
inc
jno
sbb
dec
mov
mov
and
cmp
ret
mov
add
insl
adc
out
out
cmpl
mov
xor
push
popa
dec
into
lahf
jmp
out
dec
aas
leave
push
sti
test
dec
xchg
pop
div
in
mov
sarl
jbe
or
out
enter
das
scas
ljmp
leave
arpl
sti
insl
cld
pop
jno
inc
movsl
or
into
dec
pushf
and
xchg
and
inc
or
sbb
dec
sbb
mov
mov
xor
sahf
dec
test
xor
adc
lcall
iret
adc
stos
out
lea
xchg
jb
movsb
ja
jns
push
push
xlat
and
dec
xchg
cmc
aas
dec
and
test
insb
dec
add
cmp
dec
cwtl
push
jnp
into
or
dec
sub
push
fbstp
dec
xchg
es
pop
xorl
dec
dec
aad
insb
lahf
loope
cmpsl
sub
clc
lea
sarl
loopne
or
xor
into
popf
pop
dec
popa
scas
outsb
sub
adc
test
out
cli
int
jmp
enter
mov
mov
adc
jnp
ret
popa
jmp
inc
add
ds
dec
les
cmpsl
lret
movsl
dec
xchg
shll
dec
push
fcmovnu
sub
fwait
dec
test
or
into
sbb
dec
stc
aas
adc
lret
mov
dec
and
dec
dec
lea
sub
ficoml
testb
stc
icebp
into
hlt
ss
xchg
push
adc
xchg
dec
loopne
loope
dec
mov
inc
int3
dec
mov
adc
sbb
adc
lahf
dec
incb
xchg
ds
sti
dec
jnp
sub
out
scas
add
dec
push
test
xchg
inc
dec
dec
jae
incl
mov
mov
push
push
inc
lahf
cmpsl
xchg
into
mov
mov
mov
test
sbb
push
in
insl
xor
addl
or
idivl
mov
and
xchg
loop
into
xor
sbb
and
pusha
sub
dec
fdivl
in
lret
scas
lahf
mov
adc
out
dec
dec
xlat
inc
sub
jge
iret
pop
push
mov
in
dec
scas
inc
imul
out
cmp
into
adc
xor
pop
mov
in
movsl
test
adc
nop
out
cld
dec
or
arpl
sub
adc
xlat
cmp
sbb
or
xor
jmp
mov
or
and
pusha
in
push
push
dec
cmp
and
dec
int
mov
xlat
insb
push
shlb
pop
xor
push
lret
push
mov
pop
mov
dec
cmp
and
xor
out
add
popa
or
mul
fdivl
adc
mov
cmp
dec
cmpsb
sbb
repz
pop
ljmp
xchg
cwtl
ss
sub
fwait
jg
mov
dec
addr16
pop
je
dec
push
test
sti
in
out
inc
push
test
fs
subb
in
inc
jl
mov
xchg
adc
ljmp
dec
bound
jmp
push
xor
dec
leave
scas
add
cmp
jae
dec
outsb
jns
xchg
loopne
mov
pop
mov
adc
push
adc
add
jmp
cmp
lock
ret
leave
inc
inc
repnz
mov
cmc
call
and
sbb
icebp
cmp
cmp
or
jl
aaa
cmc
cmpsb
test
push
pop
sub
push
dec
test
xor
in
push
sub
jle
inc
dec
adc
jle
test
mov
push
ret
inc
xchg
or
out
mov
cmp
jp
leave
inc
add
cld
out
jge
es
cmpsl
cmc
xor
inc
sbb
cmpl
std
mov
push
rcll
pop
icebp
xchg
lret
fisubrl
adc
add
call
dec
xchg
jg
or
js
fisubrs
or
mov
les
or
cmp
jle
imul
jl
push
push
bound
imul
lods
aad
dec
das
mov
xlat
inc
xchg
inc
push
jg
pop
out
fnstsw
pop
jle
jl
mov
rcr
cmpsl
pop
fwait
in
test
ret
hlt
fs
push
movsl
pop
dec
inc
aas
ror
int3
jmp
or
subl
aam
dec
int3
mov
xor
orl
out
push
jb
adc
xor
dec
mov
pop
sub
jmp
inc
push
dec
or
nop
icebp
movsb
cmp
mov
adc
push
adc
cs
cmp
jl
lods
mov
jnp
xor
dec
sar
push
push
jns
iret
fs
push
jae
pusha
dec
sub
dec
cld
jnp
lock
add
stc
leave
mov
pop
xchg
adcb
insl
cmp
or
test
mov
subl
sbb
popf
xchg
add
mov
sub
inc
clc
mov
loope
mov
popa
push
fcmove
mov
icebp
cmpsb
aam
into
setl
cltd
rcrb
and
push
add
push
mov
mov
inc
mov
je
scas
iret
in
mov
push
jae
ficoml
jle
fs
stc
add
xor
jle
mov
push
fstpt
fidivrs
and
mov
lret
lret
iret
cmp
outsl
shl
lock
cmp
sub
jle
lock
pop
aam
push
leave
sbb
call
das
push
icebp
out
sti
lret
sbbb
daa
or
loop
js
push
dec
imul
clc
or
imul
cmovbe
into
xor
or
dec
xchg
mov
xor
or
or
imull
jbe
sub
cltd
stos
and
inc
lcall
and
add
adc
sub
cld
cmpsb
out
sub
sbb
jmp
int
inc
mov
das
lods
xchg
dec
jg
sub
dec
mov
nop
jmp
insl
pop
das
loope
xor
orl
rorb
aaa
bound
dec
imul
push
or
xlat
mov
and
dec
sub
sbb
cmpsl
push
clc
out
rorl
mov
mov
xchg
dec
leave
sahf
push
jecxz
xor
or
and
and
ljmp
mov
ret
cmp
pop
mov
add
test
add
lods
jp
lahf
stos
mov
xchg
and
mov
lahf
push
xor
inc
int3
and
adc
notl
sub
out
into
les
sub
xchg
orb
out
jg
mov
cmp
je
mov
push
loopne
dec
dec
inc
jns
std
mov
icebp
inc
scas
aam
jno
into
push
add
dec
or
ja
sub
repnz
pop
out
adc
hlt
push
dec
test
or
fstl
dec
lret
and
in
dec
inc
sbb
mov
fists
jl
sbb
test
adc
dec
fimull
inc
push
pop
mov
cli
cld
and
inc
sahf
fisubrl
jge
mov
insl
and
out
aad
cmp
pop
push
aam
xchg
jg
and
push
stc
sti
dec
fsubrl
cmp
inc
jl
dec
dec
xchg
stos
push
add
jmp
mov
nop
add
jl
mov
push
inc
cmp
es
inc
dec
inc
and
sbbb
scas
inc
pop
dec
mov
in
mov
or
cld
sbbl
jno
in
je
pop
cmp
cmp
cmp
cmp
adc
push
pop
loop
rcl
push
mov
inc
push
cmp
sbb
lock
int
cmp
loop
add
mov
pop
movb
jle
jne
push
sub
call
add
cltd
fimuls
hlt
pop
cmp
popf
pop
inc
out
push
pop
daa
jle
popf
stos
pusha
iret
jmp
push
es
ret
pop
jbe
ret
out
cld
inc
inc
clc
into
mov
in
jns
inc
mov
decb
ss
aad
adc
push
into
xor
lock
das
jge
dec
pop
lods
jl
cmp
jne
iret
jbe
out
xchg
add
adc
sub
daa
movzbl
sbb
pusha
and
cs
push
sub
dec
push
scas
fwait
insl
xchg
fwait
cmpsb
test
in
gs
lock
and
aas
imul
test
repnz
icebp
push
outsl
jge
dec
fsubr
sub
inc
out
rol
cmp
es
aam
cld
aaa
mov
mov
jg
leave
std
fwait
jecxz
loopnew
push
jg
xchg
icebp
mov
push
or
push
jl
sub
sbb
xchg
xlat
mov
imul
lds
mov
dec
mov
cld
mov
push
movsb
pop
dec
enter
fadd
lock
mov
pop
xchg
pop
test
sbb
xor
wbinvd
fdivs
fistpll
ss
xchg
and
xor
je
dec
inc
arpl
cmpsb
dec
cmc
dec
mov
dec
pop
idivb
pop
or
cmp
in
fidivs
xor
mov
cmpsl
push
pop
or
les
inc
iret
sbb
sbb
add
push
call
ja
ss
mov
jle
rcll
mov
xchg
dec
xchg
xor
dec
sbb
push
scas
jle
mov
fwait
icebp
push
stc
jle
outsl
aaa
and
clc
ss
jge
and
dec
jg
jns
sbb
call
fadd
pop
and
add
shlb
out
aas
popf
mov
sub
pop
cwtl
icebp
add
mov
fildll
fidivrl
out
punpckhdq
orb
pop
cs
mov
xchg
ljmp
sbb
dec
inc
mov
push
jo
dec
dec
movsb
and
out
ret
pop
dec
repz
cmp
xor
rorb
cli
ret
mov
mov
xchg
xlat
mov
hlt
dec
add
dec
and
mov
notl
lods
sbb
add
cs
or
xchg
ficoms
xchg
or
fisttpl
and
popf
ja
xlat
sbb
lahf
and
pop
scas
or
jle
dec
es
movsb
sti
mov
inc
jg
push
jns
cs
pop
orb
xchg
pop
mov
pop
test
leave
ret
adc
or
iret
mov
in
dec
xor
or
jo
repnz
lcall
cmp
pop
cmp
das
mov
or
xchg
mov
add
cmp
rcr
dec
fidivl
iret
sub
xor
int3
loope
cmp
cmpsl
pop
dec
jg
arpl
push
dec
inc
jle
imull
fnstenv
daa
xchg
lahf
jp
ljmp
mulb
movsb
iret
adc
xor
pop
xor
ds
sarb
sar
repz
in
in
andl
cs
dec
jns
dec
pop
mov
jmp
inc
call
adc
xor
jmp
xlat
jbe
mov
jp
jle
cmp
repz
inc
cmovg
das
js
test
cmp
jle
into
std
or
sub
mov
sbb
outsl
out
push
test
xlat
das
sbb
push
mov
cmp
mov
js
and
cmp
inc
sti
les
loope
xchg
sub
push
das
subps
and
dec
push
stc
xchg
aaa
lcall
adc
test
lods
call
enter
fidivrs
sub
bnd
or
adc
xchg
or
jl
or
add
ficompl
les
sub
pop
mov
mov
das
sbb
adc
mov
repnz
mov
cmp
add
pop
xor
or
sti
fptan
testl
fimull
inc
dec
cwtl
xchg
cmp
dec
adc
sbb
jae
push
xchg
mov
pop
xchg
dec
into
jg
repz
mov
cmp
xchg
and
push
mov
mov
scas
push
mov
callw
dec
mov
in
in
sbb
or
dec
les
and
sbb
add
fcoms
dec
sbb
mov
dec
ret
mov
fsub
rcpps
dec
pusha
dec
stos
adc
dec
cli
dec
fldl2t
sbb
jp
dec
lods
xchg
mov
xor
adc
and
cmp
mov
mov
rorb
dec
lods
out
push
mov
fsubs
push
and
cmp
inc
jle
cli
dec
push
in
cmp
dec
arpl
or
out
stos
scas
gs
add
dec
add
adc
dec
xor
dec
mov
subb
repnz
out
mov
mov
ret
lds
cwtl
out
in
outsb
into
dec
jne
cmp
mov
mov
cmp
dec
adc
sub
sub
pop
outsb
repnz
mov
andb
dec
push
mov
mov
dec
lret
popf
dec
stos
shl
dec
inc
dec
push
aaa
pop
stos
jl,pt
jo
fstl
out
mov
dec
sub
and
dec
das
cmpsl
dec
pop
jne
mov
dec
fimuls
imul
cmp
jae
pop
mov
call
xor
sbb
std
jo
sbb
dec
pop
xor
sbb
in
push
into
pop
or
subb
dec
push
cmc
xlat
daa
sahf
push
inc
dec
push
ja
adcb
mov
adc
insl
aad
sti
mov
xor
sbb
bswap
push
lret
mov
dec
add
iret
pop
sbb
adc
sarl
gs
mov
dec
andl
in
dec
lods
push
in
insl
adcb
inc
mov
into
and
or
sti
dec
insb
push
sbb
out
aad
xchg
push
cwtl
xchg
jmp
xchg
arpl
insb
xchg
xchg
mov
push
sbb
cmp
mov
dec
inc
bound
test
xlat
dec
dec
jo
push
xor
dec
xchg
dec
sub
cmp
mov
subl
dec
pop
and
dec
call
dec
in
dec
mov
sar
fmuls
dec
sub
pop
cmpsl
push
fs
push
lret
ja
dec
sbb
adc
in
inc
sub
dec
dec
lret
mov
add
inc
shrl
add
adcb
gs
dec
into
ret
cmc
and
fisubl
sub
clc
jb
sbb
idivb
push
inc
xchg
cmp
mov
xor
pusha
jecxz
dec
mov
mov
sub
sbb
xchg
mov
cwtl
dec
push
not
jne
jge
dec
aas
subl
bound
nop
aam
imul
dec
cmp
repnz
scas
dec
mov
nop
fwait
aad
and
dec
cltd
enter
mov
and
push
test
inc
xchg
out
xor
xor
bound
lahf
movaps
adc
sbb
loopne
test
dec
sahf
dec
cli
sbb
xor
xor
jae
dec
icebp
add
adc
hlt
stc
dec
push
mov
xchg
or
fstpl
mov
dec
in
insb
mov
dec
out
add
inc
dec
in
gs
test
mov
mov
scas
lods
cmp
dec
pop
jb
rcrb
adc
fidivl
jne
leave
jecxz
in
add
cli
xor
rorl
inc
rcr
mov
jnp
test
cmp
dec
into
push
mov
in
mov
scas
out
mov
bound
push
fmull
xorb
sub
adc
shll
mov
inc
outsb
pop
jecxz
popa
mov
sub
mov
adc
sub
shrb
aas
fnstcw
inc
inc
daa
mov
dec
cs
jg
dec
fwait
mov
mov
dec
clc
rcrb
jecxz
jle
xorl
cmc
mov
test
mov
inc
mov
popa
jle
imul
fcoml
cltd
adc
loop
adc
mov
push
adc
pop
jg
fdivrp
out
lds
aaa
cmpsl
push
dec
push
scas
jmp
jbe
rorl
fs
mov
jge
xor
jle
bound
add
xchg
dec
out
andb
xchg
shl
std
in
inc
jl
fidivs
inc
rorb
movsb
jb
mov
pushf
xor
out
xchg
or
scas
mov
push
push
push
push
or
push
out
fidivs
jle
push
pop
jnp
mov
mov
cld
pop
push
movb
xchg
cwtl
fadd
lret
repz
sahf
dec
xor
xlat
and
cmp
mov
and
cld
test
and
push
xchg
xor
sub
repnz
into
xor
scas
push
push
outsl
pop
mov
push
push
add
xlat
dec
cmp
addl
and
dec
loopne
push
jns
push
adc
shll
sysret
pushf
add
inc
sbb
push
mov
adc
shr
sub
push
movsb
jmp
push
jns
test
das
pop
or
adc
es
rcrl
xor
xchg
push
dec
es
jle
fcmove
outsb
jge
outsl
adc
sub
dec
dec
cld
sub
or
orl
int
popl
pop
cltd
xchg
push
mov
imul
add
ds
aad
orb
jnp
int3
push
push
inc
dec
mov
or
pop
xchg
pop
mov
adc
xor
sub
aad
dec
and
cmc
aas
insb
ficompl
lock
inc
sub
add
jbe
cmp
out
add
hlt
lea
aad
adc
mov
dec
dec
mov
sub
arpl
cmp
scas
sahf
mov
sahf
sar
dec
lea
dec
fnstenv
jae
sbb
mov
dec
ja
in
sub
and
xchg
sub
loope
fdivrs
pop
sub
fs
test
push
xchg
add
mov
lods
ljmp
nop
dec
bound
dec
push
cmp
ret
fiadds
jo
xchg
out
push
dec
mov
xlat
cs
mov
add
inc
outsb
aam
adc
mov
push
pop
dec
dec
js
mov
hlt
orb
sbb
or
std
dec
pop
or
sarb
jne
cmc
pop
mov
or
data16
lock
dec
orl
push
mov
xor
fstpt
dec
scas
ds
xor
pop
pop
lcall
jmp
inc
push
fwait
daa
add
movsl
hlt
leave
in
cmp
ds
cmp
sub
repnz
mov
cs
sub
jle
lods
jle
clc
mov
pop
adc
cmc
inc
push
add
lret
mov
pusha
mov
push
ljmp
adc
lods
jl
mov
push
pop
scas
pushf
cmpsb
popa
enter
add
dec
and
cmp
xchg
ljmp
test
cmp
enter
popa
scas
add
dec
movsl
push
insl
fldl
outsb
dec
je
stos
xchg
lods
mov
push
dec
mov
jae
mov
xchg
nop
mov
jle
cmp
cmpsb
jmp
call
dec
sub
mov
mov
jo
into
lock
clc
mov
cwtl
mov
into
add
fimuls
sub
add
repz
sub
adc
or
mov
fcmovnb
pop
lahf
andl
jnp
mov
mov
push
test
js
inc
xorb
out
clc
mov
cltd
mov
iret
cmpsw
test
nop
push
test
pop
or
dec
cmp
and
inc
scas
mov
dec
cmpsb
dec
and
mov
shld
into
stos
dec
push
cmp
inc
into
cmpsl
mov
jbe
lods
fbstp
xor
push
fstl
inc
or
in
jl
sub
jno
bound
out
mov
aaa
mov
and
adc
test
and
lds
leave
xchg
inc
hlt
cmp
in
cmpsl
cmp
sbb
int
fisttpl
cmp
mov
add
jl
mov
mov
jg
sub
fisttpll
inc
adc
in
lea
test
hlt
xor
in
dec
hlt
imul
fisttpl
push
xor
cmp
xchg
scas
jg,pt
add
mov
adc
insb
jl
jp
lret
lods
ja,pn
mov
int
mov
dec
testl
scas
adc
jle
daa
outsb
mov
stos
scas
cmpsb
mov
js
or
cmp
jg
and
and
or
ffreep
cwtl
cmpsb
inc
out
cs
jle
push
cmp
dec
rol
xchg
sbb
jmp
add
lahf
pop
int3
out
je
push
rcrl
jns
xchg
sub
fwait
ds
xchg
pop
mov
pop
les
mov
ds
aas
dec
cld
shll
mov
orl
jl
icebp
fwait
xor
cmpsl
inc
jl
jge
outsb
dec
sahf
add
push
jle,pn
sti
mov
es
outsb
or
adc
inc
mov
inc
mov
dec
test
push
inc
movsb
jns
xchg
in
xor
mov
adc
mov
dec
adc
sub
push
dec
pop
cmp
mov
dec
ljmp
ss
xchg
push
jle
rcr
adc
cmp
cmp
test
jle
cmp
shrb
int
xor
xchg
daa
xor
cld
mov
xor
gs
dec
ss
in
subl
mov
insb
dec
xchg
cmpsl
jne
cmpb
mov
bound
aaa
mov
jnp
fnsave
aad
jle
shll
lods
or
pop
mov
je
fildll
scas
xchg
mov
nop
jb
xchg
scas
ds
fildll
inc
stos
pop
or
insb
sar
test
repz
xchg
jno
pop
add
fimull
aaa
xchg
xor
pop
mov
int
lret
dec
push
push
jecxz
and
add
inc
and
mov
mov
cmc
cs
outsl
insb
dec
xchg
js
aad
push
sub
aam
cld
cmp
and
mov
sbb
mov
mov
push
add
sbb
pop
inc
mov
rolb
movsb
cmp
cmp
cmp
loop
pop
or
xor
cmp
xchg
and
jae
lahf
fnstenv
jb
in
mov
inc
fists
sub
push
in
dec
sub
sub
jb
lea
out
jl
add
cmc
xchg
and
outsb
outsl
cmp
sbb
lahf
addr16
xlat
adc
dec
adc
add
cli
mov
push
gs
scas
add
xorl
dec
mov
mov
outsb
outsb
mov
pop
pop
ror
loopne
gs
gs
ds
dec
aam
xchg
and
dec
mov
push
sub
push
scas
scas
mov
rcrb
sub
into
testb
or
fists
mov
sbb
and
fidivrs
push
leave
fimuls
ret
add
dec
sahf
xor
pop
jno
xlat
imul
push
ret
lods
ficomps
movsbl
ds
stos
aad
nop
add
frstor
lahf
in
mov
ret
push
lock
add
inc
aas
lahf
jmp
xor
les
movsb
pop
leave
adc
aaa
push
dec
stos
inc
adc
rorb
jns
testl
push
mov
es
sub
and
jle
adc
and
test
xor
stos
push
pop
out
roll
lds
pop
das
in
mov
push
jb
sub
testb
push
shll
mov
cs
scas
lock
imul
dec
mov
data16
mov
insb
adc
adc
in
stc
mov
pop
dec
dec
mov
js
imul
fstpt
and
call
adc
xchg
cmp
into
aad
mov
or
jo
cmp
mov
dec
aas
out
inc
xchg
ss
xchg
insb
fs
jbe
dec
push
and
xlat
xchg
and
int3
dec
or
and
cmp
inc
movsb
and
scas
loopne
add
mov
in
push
pop
cmp
stc
mov
movsb
pop
scas
dec
popf
hlt
int3
inc
lret
testl
frstor
es
mov
fcmovne
inc
sub
ret
dec
sub
out
or
mov
sahf
cli
mov
and
movsb
scas
int3
cmovp
sti
imul
lret
dec
cmp
push
cmp
xchg
cmp
dec
xchg
loope
js
aaa
xchg
imul
xor
enter
jecxz
mov
mov
push
mov
pusha
sub
fcomi
adcb
push
iret
aad
push
mov
xchg
mov
movsl
scas
adc
sub
xlat
dec
setnp
and
pusha
mov
cli
ljmp
mov
dec
push
add
imul
in
add
jns
filds
dec
iret
dec
pop
sub
ds
test
cmc
xor
repz
lea
mov
daa
lock
xchg
xor
xchg
mov
dec
xchg
test
int3
and
push
dec
pop
or
test
dec
mov
stos
sub
shll
mov
fucompp
bnd
adc
pop
pop
cmc
push
ja
dec
mov
sub
cmpl
or
repz
lea
inc
lea
dec
jg
gs
insb
add
sub
push
jl
imul
and
ljmp
ftst
or
das
sub
lock
inc
testb
fisttpl
xor
andb
scas
ja
dec
mov
or
leave
sbb
sub
mov
xlat
lret
pop
cld
dec
inc
mov
jae
xchg
testl
jp
mov
push
dec
inc
mov
or
stos
mov
popf
aaa
aad
popf
mov
jle
push
mov
jl
aas
jle
aam
cli
movsb
sbb
and
dec
sbb
and
pop
movsl
icebp
and
jp
mov
cs
push
lock
pusha
test
inc
jle
adc
in
shr
pusha
scas
cmpsb
add
fsts
stos
or
jge
es
sub
inc
add
nop
dec
mov
stc
fisttpll
rorb
in
jl
inc
flds
fcmovnu
sbb
jle
mov
cmpl
mov
jp
sub
bound
aaa
pop
mov
push
js
cmp
xlat
dec
sbb
jge
xor
mov
dec
push
fisubrl
dec
xor
shrl
sbb
lret
dec
cmpsl
sub
test
je
push
or
jl
mov
shrb
stos
into
add
dec
push
dec
insl
loope
filds
and
dec
push
cli
adc
dec
pop
xchg
repnz
dec
ja
and
fnstsw
rorl
pop
je
outsl
dec
and
push
das
fisttpl
push
jb
sbb
shr
test
push
dec
subl
or
pop
pop
cmc
xchg
jmp
or
test
int
gs
pop
inc
xor
mov
push
pop
lods
ret
arpl
aad
int3
outsl
inc
mov
cltd
xor
in
xchg
dec
rclb
push
imul
cli
ds
cmp
divb
fldenv
sbb
cmp
sbb
addr16
cmp
push
adc
xchg
pop
or
orb
bound
dec
jp
sub
pop
lret
push
xor
pop
popf
pmullw
xor
push
cmp
mov
aaa
in
mov
dec
loopne
pop
les
aad
adc
sbb
xor
inc
mov
stos
push
xor
add
dec
flds
icebp
shlb
adc
mov
movsb
loopne
mov
outsl
xor
dec
sbb
jae
fs
cmc
roll
mov
cltd
dec
dec
xchg
xor
fstpt
dec
stc
or
insb
jns
adc
or
cmp
dec
push
inc
enter
add
loopne
or
rolb
gs
cmp
std
xor
jbe
sbb
dec
ds
vmovups
sbb
cli
push
loope
mov
mov
lcall
mov
inc
repz
popf
jmp
mov
movsl
arpl
and
ljmp
daa
jg
pop
dec
sub
cmp
sub
repnz
jle
mov
pop
into
sbb
notb
dec
fidivrl
scas
push
lds
mov
adc
lret
movsl
ret
push
lahf
negl
dec
scas
push
cmpsl
ret
cmp
lret
daa
iret
cmp
mov
push
sbb
ljmp
jecxz
jl
outsb
xor
cmp
test
and
dec
cwtl
mov
inc
jle
lret
pop
jl
cmc
lahf
cmp
add
pop
mov
sbb
loopne
mov
fsubr
mov
scas
jle
dec
jg
sarb
cmp
jle
adc
dec
mov
les
dec
out
cs
mov
mov
xchg
pop
dec
mov
and
aas
fcoml
loop
cmpsl
push
and
pop
xchg
incb
xor
stc
subl
jb,pn
scas
adc
mov
jle
xchg
test
sbb
mov
add
out
xorb
test
mov
movlps
ljmp
bound
pop
pushf
pusha
ret
adc
test
fisubl
push
ss
lds
mov
push
sbb
sub
adc
int3
jbe
shll
out
inc
dec
and
and
js
mov
jbe
out
push
stos
lret
mov
cs
lods
xchg
lcall
scas
inc
push
adc
push
jg
cmp
sti
inc
nop
jg
rcrb
mov
sbb
cmpsb
stos
xchg
push
lret
pusha
mov
test
jne
scas
mov
mov
adc
sbb
mov
and
dec
int
cwtl
pusha
push
aam
adc
xor
cld
mov
or
fxsave
cmc
dec
test
mov
fstp
pushf
add
insl
cwtl
jl
adc
mov
mov
test
push
in
xor
jo
dec
lahf
fmull
lock
mov
inc
in
call
out
push
enter
push
jp,pt
lods
dec
ret
cwtl
ret
dec
add
sub
dec
outsb
rcr
jnp
pop
popa
sahf
inc
sub
dec
mov
or
xchg
add
pop
and
gs
imul
orb
loope
in
rolb
das
xchg
xlat
sub
sub
aad
icebp
lock
push
adc
fidivrs
push
movsl
dec
test
and
mov
nop
lods
xchg
dec
fidivrl
mov
pop
cltd
mov
out
adc
xchg
ds
movsl
mov
cmp
cmc
jne
insl
lds
aam
or
adc
jle
out
push
lods
cmpl
lds
push
pop
inc
xor
movsb
dec
and
pop
dec
push
aam
in
iret
add
loop
mov
aaa
jl
adc
and
test
cs
xchg
mov
push
push
outsl
mov
xchg
dec
mov
aas
jl
lcall
xchg
jno
out
add
xchg
jg
jbe
inc
push
or
scas
daa
push
les
sub
push
inc
shlb
sarl
pop
cld
jp
sub
pop
jmp
mov
sub
mov
das
or
inc
pusha
mov
js
fiadds
jle
test
inc
inc
pop
mov
dec
fisubrs
dec
xor
test
and
dec
jne
scas
and
addr16
xorb
mov
jnp
dec
pop
add
sahf
dec
ret
hlt
fdiv
roll
dec
jnp
and
inc
popa
pop
add
dec
or
dec
mov
int
cmpsb
jns
dec
lea
inc
sbb
pop
mov
lods
adc
sarl
xchg
addr16
aaa
dec
cwtd
scas
push
out
scas
sbb
dec
inc
sub
shll
ror
adc
inc
jp
shll
mov
rcr
pusha
inc
pushf
and
mov
outsb
ds
adc
out
into
pop
fwait
movsl
dec
jmp
or
test
fmuls
lcall
dec
jp
dec
and
aam
and
out
loope
pop
adc
dec
mov
sub
pop
xlat
push
ret
dec
push
scas
std
add
rclb
ljmp
sbb
ficomps
push
rorb
bound
cmpb
les
sub
sti
ja
mov
bound
jbe
aam
adc
scas
sbb
into
dec
xor
mov
shl
je
dec
cli
mov
dec
lods
or
stos
dec
mov
dec
dec
jge
add
jmp
out
es
xor
in
cmp
in
jp
dec
xchg
push
rorl
dec
jne
inc
imul
push
icebp
xlat
sub
aad
mov
outsb
es
push
dec
out
mov
dec
xchg
inc
or
mov
inc
sbb
clc
shrb
test
mov
ljmp
and
stos
or
mov
and
xchg
cld
or
or
lcall
fyl2xp1
inc
xchg
std
pop
dec
shlb
adc
aaa
addr16
pop
xchg
and
sahf
ror
dec
into
cmpb
insb
lock
arpl
push
dec
mov
cmp
xor
sub
adcb
out
dec
sbb
shlb
cmp
sti
dec
jp
jo
es
add
fcomip
imul
cmp
mov
movsl
pop
gs
xor
jecxz
add
sbb
inc
fs
insl
dec
ja
or
les
xchg
mov
xor
ret
into
xor
ds
push
dec
add
rolb
xchg
jmp
enter
dec
jns
push
jle
push
iret
pop
xchg
fwait
xor
push
jae
mov
sub
out
pushf
dec
ja
popa
mov
dec
or
int3
mov
loope
nop
add
dec
dec
sbb
aad
lcall
mov
dec
xor
psrlq
in
jg
cld
jnp
and
mov
cmpb
pop
jbe
xchg
and
and
or
or
sub
mov
out
xor
push
out
xchg
cmp
xor
stos
pop
pop
dec
fisttps
push
out
jp
callw
xor
fwait
imul
sbb
fdivrs
mov
cmp
dec
into
push
popf
mov
out
mov
push
inc
add
test
sub
dec
mov
cmp
xor
lret
dec
stc
cmp
cld
dec
or
lock
mov
shrb
push
push
repnz
sub
js
jno
pop
mov
and
sub
sti
cmpsb
xchg
cld
push
jne
rcrl
dec
xchg
jecxz
jnp
call
fisubs
cs
sub
test
sbb
jecxz
fmulp
pop
dec
mov
repz
outsb
sbbb
sbb
or
mov
in
dec
lods
sub
push
shrl
mov
fstpt
jl
dec
inc
xchg
mov
dec
cmp
rcrl
jae
fisttps
hlt
xchg
rolb
dec
loop
xchg
and
loopne
sbb
pop
pop
sti
and
pop
jae
dec
pop
cmp
pop
mov
pop
sbb
or
and
dec
push
fwait
add
leave
inc
xlat
out
fistps
dec
stos
cs
add
js
mov
loopne
pop
pop
sub
jg
inc
cmp
scas
inc
mov
loope
adc
sub
push
dec
stos
jp
pop
pop
fisttps
push
lea
dec
fcoml
test
hlt
scas
mov
andb
and
jle
outsb
xchg
hlt
mov
inc
enter
xchg
pop
sbb
inc
jnp
lret
aad
fcomps
lcall
dec
mov
xchg
mov
stos
and
int
mov
dec
dec
out
add
mov
pop
push
jnp
adc
ret
dec
lock
das
xchg
and
cwtl
shr
sub
sub
jmp
ret
arpl
dec
cmc
xor
vpsllw
pop
movl
into
jb
das
cmp
stos
or
mov
ljmp
cmp
lret
xchg
stos
and
fmuls
inc
jbe
inc
jo
pushf
xor
push
adc
aad
dec
aad
movsb
jl
inc
push
inc
push
xchg
push
cmp
push
in
mov
jbe
dec
dec
addr16
pop
add
cwtl
frstor
dec
into
cmp
sbb
mov
out
fcoml
xchg
orl
cmc
xorb
movb
mov
fildll
inc
dec
fs
xchg
pop
fdivrp
dec
jl
push
add
mov
repz
pop
adc
jbe
sub
cmp
and
clc
fbld
push
dec
aaa
push
or
inc
mov
and
mov
jl
lea
sbb
lock
dec
bound
inc
lds
inc
inc
mov
pusha
mov
dec
and
jl
outsb
jmp
sub
push
div
dec
out
jmp
arpl
dec
sbb
sahf
fmull
pop
fimull
ret
jp
add
stos
in
add
inc
adc
cmp
adc
nop
push
cmc
dec
sub
xchg
mov
inc
pop
rclb
movsb
jb
xchg
out
mov
lcall
in
pushf
cmpsb
and
inc
mov
ss
dec
push
and
xchg
pop
stos
sbb
fimuls
dec
jbe
pop
imul
jno
inc
enter
int
cltd
xor
rorl
inc
das
imul
ffree
out
ds
clc
xor
sti
jbe
insb
icebp
rorb
fcomps
aas
rorl
lahf
or
dec
scas
outsl
pop
adc
adc
gs
inc
mov
fs
dec
push
add
out
out
inc
xor
pop
pop
inc
mov
dec
pop
cmpsl
push
or
loop
xor
pushf
adc
pop
mov
sub
setno
mov
sbb
loope
dec
inc
mov
int3
and
xchg
out
dec
movsl
sbb
mov
fstl
or
pop
enter
push
mov
int
mov
push
xchg
dec
sub
or
pop
repnz
dec
xor
rolb
data16
movsl
daa
or
dec
out
lea
jbe
enter
dec
outsb
mov
ss
movsl
inc
test
dec
jge
je
jae
add
arpl
shrb
xchg
pop
daa
sub
test
out
add
sub
call
push
xchg
inc
jge
fwait
mov
outsl
enter
shll
cmp
dec
sbb
pop
dec
cmc
dec
rorl
pusha
dec
sub
jle
or
loopne
dec
pop
xchg
or
dec
arpl
jp
dec
pop
sbb
xchg
cmpsl
xchg
mov
out
adc
dec
aaa
outsb
in
pop
sbb
inc
fisubs
jnp
jmp
notl
push
mov
repnz
mov
dec
or
ss
movsb
jo
icebp
xchg
xchg
xchg
dec
lcall
push
jp
shll
dec
mov
test
dec
add
loopne
xlat
mov
dec
inc
cmp
rcll
xchg
iret
cmpsw
xchg
push
jle
mov
jmp
aad
fneni(8087
lcall
xchg
push
sahf
test
iret
pushf
inc
jg
mov
jl
addr16
push
jbe
jle
mov
inc
or
outsb
inc
mov
xchg
cs
xor
or
rorb
cmc
dec
mov
sub
mov
mov
or
adc
orl
fwait
sbbl
mov
cmp
and
andl
stos
mov
dec
in
int3
jae
jmp
jle
mov
shl
inc
pop
aam
xor
dec
sub
sub
push
insb
adc
repnz
xlat
je
mov
sub
ss
jnp
push
inc
cltd
addr16
into
jg
add
cmp
jle
or
push
dec
lods
ret
outsb
mov
imul
sbb
dec
jae
into
pusha
mov
jmp
dec
cmp
or
pushf
fs
jno
int
in
or
jg
aaa
test
push
repz
dec
jmp
dec
movsl
pop
mov
das
sti
dec
sbb
into
dec
mov
xchg
inc
xor
sti
dec
test
pop
mov
xor
je
xchg
bound
sahf
sub
push
stos
jle
dec
inc
popa
xchg
jecxz
and
dec
add
xor
dec
stc
or
sub
cmpb
push
add
jno
dec
fldl
adc
fsubs
adc
test
outsb
push
addr16
and
inc
or
rcll
lock
dec
jb
scas
fcoms
out
jge
xchg
sbb
in
sbb
imull
outsl
ja
cmp
adc
pop
mov
adc
mov
lret
dec
adc
adc
test
dec
push
dec
push
and
movsl
add
in
dec
cwtl
test
mov
xchg
xchg
rol
jge
sub
iret
and
or
mov
js
pusha
scas
inc
dec
hlt
add
jb
shlb
cld
stos
sub
scas
fimuls
or
adc
and
mov
nop
lcall
push
fs
mov
mov
int3
and
xor
jl
int
out
cmp
stos
les
jle
sub
cmp
dec
movsl
test
mov
dec
mov
in
int3
add
mov
inc
orb
xchg
push
and
les
pop
push
dec
mov
int3
sub
xchg
dec
xlat
jnp
xor
inc
push
dec
gs
ds
adc
adc
mov
in
pop
shrl
mov
test
cmp
xor
loopne
inc
mov
pop
ret
and
jle
add
ss
dec
or
mov
jecxz
mov
dec
shl
push
jbe
xchg
inc
in
inc
xor
bound
call
dec
lock
push
push
test
xor
stos
mov
or
xlat
nop
mov
jo
push
sub
loop
fmulp
sbb
dec
test
add
pop
sbb
cmp
aas
cmp
lahf
mov
add
rcll
and
jl
adc
int
js
and
out
aad
jb
add
scas
rclb
inc
ret
dec
jnp
jl
jp
mov
pushf
xor
xchg
mov
dec
aas
cltd
xor
stos
mov
imul
jp
xor
sub
scas
push
xchg
leave
popl
bound
mov
inc
jl
pop
adcl
inc
cli
and
or
stos
iret
mov
mov
or
daa
pop
int
movsl
sar
pop
imull
jle
outsl
dec
lret
xor
jmp
adc
dec
jae
inc
dec
mov
push
cld
sbb
in
outsb
pop
and
mov
mov
popf
inc
movsb
test
add
das
loop
cmp
in
aam
cmp
xor
add
lahf
ljmp
push
xchg
shl
mov
inc
cmp
mov
rclb
cmp
or
outsb
cmp
mov
dec
aam
cli
in
mov
xchg
push
add
mov
pop
jo
cmp
xchg
ljmp
movl
mov
ja
in
test
add
out
sub
inc
mov
inc
mov
dec
push
subl
mov
shll
dec
xchg
lds
aad
jne
sub
sbb
jmp
punpcklbw
popf
fiadds
pop
cwtl
cmp
dec
jmp
mov
dec
movsl
shll
xor
dec
push
mov
lret
insb
xor
dec
inc
jl
mov
or
inc
loop
pop
shrb
xor
xor
outsb
push
or
iret
sbb
lret
push
xchg
fisubs
shl
sti
dec
xor
arpl
push
fwait
dec
push
xor
imul
std
out
cwtl
add
inc
dec
push
lahf
test
sbb
je
add
dec
out
xlat
push
xor
xchg
dec
xor
lods
pop
jle
test
and
test
aam
in
lods
js
adc
pop
jle
xor
sahf
andb
jmp
jb
pop
test
push
xchg
adc
lcall
arpl
dec
jno
shll
mov
orl
fwait
sub
aaa
fdivrs
xor
push
ds
push
movsb
cmp
shll
lea
addr16
or
push
sbbb
xor
cmp
nopl
out
rol
ds
test
xor
xchg
mov
inc
es
lret
push
pop
xchg
xchg
push
or
ret
mov
push
mov
adc
and
push
xchg
rcrl
test
and
jle
mov
lahf
sub
adc
lock
fnstsw
mov
cli
adc
push
popf
rcrl
sub
pusha
mov
jg
leave
jmp
iret
es
lahf
inc
lret
mov
jl
mov
sbb
xchg
dec
cmp
loopne
mov
sub
nop
aam
aad
mov
jle
push
hlt
outsb
dec
cmpsl
sbb
scas
add
into
jl
pop
outsl
scas
inc
sarl
dec
cmpsl
xor
add
jle
mov
push
pop
push
jmp
mov
push
mov
mov
stos
cltd
loopne
jp
cwtl
fsubrs
inc
dec
test
scas
mov
cmp
pop
int3
push
fdivrl
jnp
out
imul
aaa
outsl
add
push
repz
fs
dec
add
cmp
mov
icebp
pop
mov
mov
ror
mov
in
push
imul
lret
xchg
push
xor
push
dec
mov
rcrb
pusha
inc
out
adc
cmpsl
test
push
lods
add
cmp
cs
jno
dec
push
loop
out
ficoms
cltd
ret
push
and
rolb
popa
mov
pop
outsb
xchg
cld
xor
dec
sbb
orl
loop
jb
adc
push
dec
stos
mov
fmull
fldl
sbb
mov
add
insb
sub
inc
lret
mov
and
jne
pop
push
sbb
fildll
pop
out
fisubrl
iret
lret
sub
dec
and
jle
mov
dec
dec
js
lods
jmp
add
push
cmp
dec
adc
adcb
aas
sbb
outsb
sbb
dec
mov
repnz
dec
push
and
mov
push
fstp
dec
dec
mov
std
jne
les
or
dec
push
imul
sub
mov
pushf
je
fadd
ds
fdivl
mov
les
xchg
mov
rcr
into
push
dec
and
jl
push
push
pop
or
push
shrb
cmp
mov
test
jbe
add
xchg
loop
adc
decl
leave
jne
nop
pop
mov
aaa
dec
into
lret
mov
push
fcomps
mov
xchg
jb
aam
jl
cmc
iret
or
xchg
test
xor
xor
js
push
cmp
loop
mov
cmp
cmp
sbb
push
mov
pop
lock
inc
xor
test
xor
lret
adc
scas
push
int3
adc
adc
or
cmp
sarb
dec
xchg
jge
enter
mov
sub
mov
jno
test
mov
enter
cli
jl
cmpb
mov
aad
pop
xchg
ljmp
aaa
sub
or
mov
cmpsl
scas
dec
in
mov
leave
nop
add
add
dec
xor
inc
push
inc
cmp
pop
push
insb
test
push
cld
rep
push
inc
xor
movsl
xor
xor
mov
dec
push
jno
pop
insl
shlb
outsl
cmpsb
aam
hlt
test
xchg
xor
mov
ss
insl
faddl
in
dec
dec
mov
pop
mov
insb
scas
dec
fistps
sub
dec
leave
push
rorl
cmp
push
pushf
xchg
dec
push
mov
jl
dec
dec
insl
rcrb
push
test
imul
adc
jnp
ss
into
popf
dec
dec
pop
inc
xchg
mov
push
xchg
dec
cmp
cmpsl
jae
fimull
divb
jbe
inc
daa
or
sub
push
mov
loope
bound
inc
lods
fcompl
xor
jno
push
push
xchg
cs
inc
jae
and
inc
lods
dec
jns
cltd
pop
or
pop
mov
rcrb
or
ss
mov
insl
jg
jno
add
cltd
ljmp
xchg
pop
mov
fstpl
rorb
xchg
ds
mov
andl
push
pop
jmpw
jg
dec
stc
inc
pop
jno
cwtl
dec
sbb
jecxz
lds
cmp
jle
adc
sti
sarl
jge
dec
int
aaa
xor
scas
push
iret
sub
sbb
mov
lods
mov
rclb
push
mov
mov
sub
std
lds
loopne
call
fisubrs
add
aaa
cmp
dec
mov
aad
shrl
lds
sub
or
dec
inc
cmovae
jns
and
mov
push
jp
mov
scas
xor
fildl
sbb
andl
mov
decl
ss
xchg
subb
aam
or
xchg
pop
or
ret
leave
popa
sti
push
xor
stos
daa
fadds
into
mov
stos
in
cld
xchg
dec
xchg
push
lret
jl
cld
or
fs
or
xor
mov
xor
sbb
add
loope
clc
scas
mov
dec
insb
lret
inc
call
aam
inc
and
mov
fisubs
push
mov
aas
decb
in
adc
dec
lds
sub
popa
jmp
pop
les
and
mov
inc
repz
insb
and
int
icebp
lea
dec
jbe
fcomps
test
push
ret
and
jmp
mov
inc
cltd
adc
mov
adc
push
xchg
mov
add
fwait
mov
pop
sbb
dec
mov
mov
jb
ljmp
jp
adc
inc
add
scas
mov
outsb
pusha
dec
jle
inc
mov
pop
dec
lcall
adc
xor
jae
sahf
imul
jecxz
es
es
lahf
pop
aam
clc
popa
cmovle
out
or
fisubrs
notb
dec
jmp
popf
repnz
dec
add
int3
fisubl
scas
pop
fsubs
add
pop
inc
pop
mov
dec
shlb
dec
ss
sub
xchg
aad
inc
cmpsl
dec
xchg
cld
xlat
out
addr16
fisttpll
lret
push
sahf
in
mov
fimull
sub
call
xchg
mov
push
pusha
inc
jecxz
xor
push
popf
jmp
pop
jl
jmp
push
clc
stos
addr16
xchg
punpcklwd
sub
repnz
cmpsl
scas
ret
fisubrl
shll
pop
pop
cli
sub
and
js
out
cmp
push
cs
scas
clc
data16
bound
pop
rolb
ret
dec
in
mov
jle
push
hlt
lods
mov
sarl
xor
or
adc
rolb
xchg
xchg
fsubrs
stos
outsb
syscall
mov
inc
push
not
dec
aas
fisttps
stos
cmc
repnz
jbe
movsl
mov
stos
lock
js
cmp
dec
inc
push
xchg
xor
sbb
std
xchg
add
cmp
hlt
push
sbb
adc
lods
cmp
sbb
lods
aaa
xchg
loop
cmp
mov
fcompl
dec
es
hlt
lea
mov
in
cltd
scas
mov
jle
fcmovnu
bound
jl
ljmp
sahf
lret
out
ret
setp
cmp
lsl
xor
push
ss
mov
mov
mov
pop
dec
test
push
cltd
jle
dec
dec
dec
insb
pop
orl
pop
jb
xlat
popf
aam
pop
das
xchg
lods
dec
test
mov
jge
fsubrp
popf
mov
dec
lcall
movsb
dec
icebp
std
jmp
test
fisttpll
mov
mov
or
popf
jbe
sbb
and
or
gs
scas
cld
dec
sub
dec
outsl
mov
mov
push
dec
pushf
shrb
aam
sub
outsb
cld
lock
add
or
xchg
jge
daa
mov
dec
and
cmp
dec
add
jns
ja
sbb
xor
mov
test
pop
jge
in
hlt
sub
adc
daa
jg
sub
mov
adc
ror
sbb
push
and
arpl
xor
dec
ja
loop
xchg
dec
sbbl
hlt
movsl
add
dec
xor
fistpl
xchg
rorl
xor
popa
adc
cmp
lea
outsl
subb
sub
ret
mov
mov
popa
cmp
cmpsb
addr16
push
sbb
cld
adc
push
pusha
mov
push
dec
push
lods
lret
sbb
loope
pop
push
pop
leave
inc
inc
ja
cmp
fnsave
sbb
xor
daa
cmp
dec
adc
sar
mov
mov
aaa
pslld
aas
dec
mov
fbld
push
dec
lret
sub
jle
dec
sahf
mov
mov
dec
jmp
jge
je
xor
les
jl
repnz
mov
mov
xor
inc
bound
mov
mov
dec
jecxz
faddl
jg
xchg
mov
movsl
fs
iret
or
aas
cmc
cmp
cmp
xchg
mov
aam
fwait
push
insl
lods
orl
cs
std
dec
dec
jg
call
mov
push
push
jg
jle
xchg
orb
mov
out
xor
test
out
mov
fiadds
stc
aaa
out
ss
adc
xor
popa
jl
add
dec
cs
mov
nop
out
scas
daa
xor
mov
push
adc
jl
mov
cs
and
fisubrl
adc
jmp
jl
dec
jbe
pop
dec
xchg
arpl
mov
jmp
push
lock
test
sub
and
cmp
fs
dec
movsl
jle
mov
inc
imul
add
and
dec
mov
fsubrs
subl
outsb
dec
inc
inc
in
std
pop
add
mov
inc
adc
leave
test
mov
fidivs
cmpsl
push
pop
cmpsb
iret
pop
rorb
orl
jbe
dec
mov
cmp
add
jo
insb
mov
mov
stos
inc
les
pop
xchg
push
mov
pop
mov
xor
into
lods
dec
outsl
pop
sub
dec
mov
mov
ds
stc
jmp
xchg
jnp
pop
and
push
lret
test
lahf
mov
mov
jmp
mov
dec
pop
inc
xchg
aas
and
testl
add
cmp
dec
inc
fisttps
cmpsl
dec
mov
dec
pop
mov
jecxz
jg
idivb
xchg
or
jbe
dec
add
jae
jno
xor
repz
pop
test
iret
dec
sbb
mov
shll
adc
dec
mov
pop
mov
adcl
mov
lret
adc
xchg
pop
les
push
cmpsl
sub
mov
test
and
adc
popf
repnz
or
stc
testb
jg
xor
mov
inc
mov
stos
or
sub
outsb
cmc
push
stos
mov
cmp
movsl
sbb
dec
mov
jge
jmp
cmp
cmp
cmp
add
enter
sub
jno
scas
add
lret
int3
dec
nop
cmovg
ret
cmpsl
popa
xor
jg
insb
daa
jle
insl
add
xchg
ds
out
pop
ret
inc
sbb
insb
and
or
cmp
js
mov
out
repnz
inc
mov
inc
xchg
pop
dec
pop
mov
into
sub
scas
test
xlat
push
mov
out
xchg
cmp
xchg
sub
pop
mov
out
orb
cmp
dec
mov
imul
dec
shrl
pop
aas
pop
lods
inc
shlb
insb
pushf
push
fidivs
mov
cld
jnp
iret
iret
movsb
lock
pop
adc
dec
mov
stos
loopne
in
pop
mov
dec
sbb
sti
sarb
test
jnp,pn
push
lods
xchg
adc
outsl
loopne
enter
and
pushf
dec
sbb
in
inc
dec
xor
jne
rclb
dec
pop
pushf
sub
mov
push
dec
jp
cld
jne
iret
jp
adc
inc
lret
fsubs
and
jbe
mov
dec
addl
adc
pop
mulb
jle
push
xchg
cmp
mov
pop
jg
push
sahf
adc
insl
pop
cmp
push
adc
jne
iret
rcll
or
and
jl
or
or
push
fs
stos
and
aam
sub
popw
daa
adc
fbstp
addr16
scas
test
mov
and
sbb
int3
dec
adc
lahf
jle
inc
mov
test
data16
test
inc
mov
sbb
dec
movsl
cmp
fcoms
in
pushf
mov
sti
cmp
arpl
add
fmuls
lds
loop
mov
pop
mov
mov
jne
mov
push
push
in
add
loop
ficoml
aam
xor
jns
adc
repz
jl
daa
mov
dec
dec
scas
jns,pn
push
push
sub
jae
adc
push
pusha
xor
and
into
sbbl
arpl
mov
and
loopne
repnz
aas
gs
pop
fcmovnbe
mov
mov
pop
cmp
dec
jg
int
and
mov
cs
push
or
jbe
mov
push
leave
jle
negb
pusha
out
dec
imul
fwait
out
mov
or
push
cli
dec
repz
xchg
int3
out
scas
enter
mov
mov
outsb
pushf
cmp
test
mov
cmpsl
inc
rorl
das
add
popf
dec
in
insb
outsb
jb
movsb
mov
orl
icebp
xor
xchg
sbb
cmc
in
gs
mov
xchg
jae
mov
mov
push
ja
mov
call
pop
out
jbe
dec
pop
dec
sub
add
xor
stos
xor
je
ss
rcll
lods
xor
push
outsl
sub
js
inc
sahf
dec
xlat
sbb
sub
ret
pop
dec
mov
dec
fscale
dec
dec
push
mov
pop
adc
js
pop
xchg
dec
mov
es
jnp
or
mov
aad
shll
fcomi
popa
lods
inc
adc
lds
shrb
es
mov
pop
fwait
and
dec
dec
hlt
jg
mov
bswap
je
sarb
inc
dec
stc
leave
out
loope
mov
dec
daa
mov
sbb
adc
add
or
out
jbe
add
sub
push
lock
das
sahf
and
dec
xchg
lahf
dec
push
inc
in
mov
or
jmp
mov
divb
pusha
mov
mov
jl
or
inc
mov
jno
mov
mov
push
into
lods
sub
or
ljmp
cmp
sub
dec
push
sbb
xor
movsb
dec
pusha
outsb
insl
dec
adc
xor
pop
cmp
dec
sti
or
sub
movsl
lahf
cmp
pop
mov
mov
int3
int
fcomps
sub
outsb
xor
repz
jo
sub
push
pop
mov
std
cltd
sub
fstpt
dec
jl
aaa
inc
pop
cmp
psadbw
inc
jle
dec
pop
js
pop
loop
jo
sbb
dec
sahf
test
jl
mov
add
jnp
leave
xchg
dec
cmpsl
jg
jno
and
rcrb
inc
insl
add
mov
pop
ret
inc
imul
loopne
insb
push
filds
fcmovnb
jmp
mov
push
sbb
pop
mov
and
mov
adc
cld
jg
or
add
jmp
xor
imul
pop
jg
dec
jmp
call
jecxz
dec
imul
scas
popf
xlat
fdiv
pop
sbbb
repnz
das
mov
xor
cmpsb
jno
xchg
mov
xor
add
sub
xchg
sahf
pop
clc
dec
cmp
and
cwtl
dec
stos
dec
ds
insb
nop
lahf
int
adc
xor
sub
je
cld
inc
adc
sti
xor
mov
add
dec
movsl
sub
cmp
adc
dec
gs
dec
adc
jle
jge
dec
or
or
sbb
and
mov
clc
mov
push
cwtl
mov
push
testl
pushf
inc
scas
jl
js
jo
subb
inc
mov
jae
fsubp
and
push
cmp
int
stos
outsb
pop
int
nop
mov
sub
outsb
das
lods
iret
in
jne
push
in
push
mov
add
dec
mov
aaa
fsts
push
or
hlt
mov
icebp
ds
or
mov
sbb
cmpsb
xor
fists
fimuls
int3
pusha
popl
inc
pop
lret
cmp
in
jl
or
sub
jae
enter
pop
in
dec
inc
mov
pop
rolb
add
and
push
idivl
lret
stos
iret
or
mov
stos
data16
jle,pt
cltd
jo
rorl
pop
movsl
or
jl
mov
and
in
dec
fstl
pop
inc
enter
icebp
sbbb
ds
sbb
xorl
repnz
jle
jb
mov
cmc
inc
ret
mov
das
fisttpll
fsts
pop
test
testl
lods
push
sarl
dec
adc
lods
lret
fs
cmpsb
es
in
aad
jne
aaa
inc
into
jle
jno
push
sbb
movsb
gs
aas
push
mov
pop
scas
pop
dec
add
lds
sub
dec
inc
dec
jo
jmp
arpl
fs
mulb
jle
test
xchg
cmp
ss
lods
inc
jg
imul
int
les
xchg
sbb
pop
xor
out
clc
cmp
aam
icebp
and
hlt
decl
out
cmp
mov
jle
or
jl
fsts
dec
aas
mov
inc
push
aas
xor
sub
int3
ret
mov
adc
cs
mov
shlb
jns
jae
lahf
xor
adc
fiadds
push
and
ret
pop
mov
addl
or
jle
aam
mov
xchg
dec
loopne
jnp
sbb
repnz
dec
imul
outsl
pop
inc
add
adc
pop
dec
xchg
mov
inc
cli
dec
push
sub
movsl
dec
std
jnp
jbe
cmp
mov
mov
dec
and
add
test
pop
jmp
inc
xchg
pop
jb
cmp
shl
arpl
lcall
dec
cmp
dec
jg
jne
lret
test
mov
psllq
das
cmc
jp
adc
pop
into
test
dec
pop
loop
inc
xor
jmp
mov
mov
lret
dec
cwtl
jns
clc
test
jg
dec
push
pop
outsb
aad
daa
jge
dec
andl
pop
dec
ss
insl
jp
test
dec
in
pop
xchg
dec
ljmp
int
cwtl
dec
out
sub
adc
jno
movsl
xor
dec
inc
nop
fisttps
mov
dec
xor
adc
shll
sarl
cld
pop
push
mov
ret
or
xor
dec
cmp
lret
stc
cmp
add
lret
pusha
movsb
and
pop
dec
aam
push
fsubrl
xor
add
xor
in
add
inc
push
xchg
jbe
xor
jl
jg
sbb
into
jg
test
adc
jle
xchg
cmp
xor
shlb
ds
pop
sub
scas
jle
out
stos
in
jb
jns
loopne
das
sub
fcomps
dec
pop
rorb
inc
mov
add
mov
loopne
inc
ret
in
les
add
ja
xor
punpcklbw
leave
inc
les
jle
dec
pop
xchg
inc
cmp
mov
loop
pop
ds
sub
fistpll
dec
push
jl
frstor
xchg
cmc
out
data16
popa
jge
jb
push
std
mov
cmpb
mulb
inc
pop
inc
and
test
mov
dec
xor
loopew
dec
jne
pop
lods
cmp
mov
dec
das
xor
fadds
sub
adc
dec
int
pop
mov
jl
adc
movsl
add
idivl
scas
mov
int
insl
int
sarl
mov
mov
mov
mov
aam
jb
push
or
iret
push
hlt
loope
daa
xorb
popf
push
insb
xor
shr
adc
adc
insb
mov
cld
sub
jp
jbe
aas
sti
fadds
push
iret
int3
int3
xor
sbb
fstpl
bound
pushf
mov
ret
int3
jne
or
pop
xchg
cltd
int3
push
cmp
push
pop
add
pusha
cmc
sub
dec
hlt
push
jle
insb
cmpb
sarb
xchg
out
pop
push
or
mov
jmp
iret
adcb
cmp
xor
dec
adc
into
xor
inc
jne
or
scas
xchg
mov
inc
fs
rolb
in
dec
cmp
arpl
mov
cmp
or
jmp
sbb
mov
cmp
int3
filds
insb
stos
sub
in
xchg
jl
jge
dec
mov
out
xchg
add
inc
loopne
es
fistl
stos
pop
push
pusha
mov
jb
fdiv
in
test
mov
xor
xor
sub
mov
jmp
outsl
xor
sbb
mov
insb
scas
or
and
mov
aad
aaa
rcll
push
pop
ret
mov
push
sbb
jl
cmpsb
lock
jl
or
jl
popf
out
loop
mov
jg
inc
stos
sbb
imul
sub
sbb
scas
je
cltd
jbe
push
sub
sub
push
cmpsl
jle
mov
push
xchg
or
inc
insb
jl
jbe
ret
jne
movsb
mov
dec
push
lcall
sub
mov
adcb
nopl
cmc
aas
divb
mov
stos
cmp
xor
popa
xor
or
lods
push
into
iret
cmp
movswl
xor
push
gs
hlt
mov
mov
sub
loope
pop
fiadds
sbb
outsb
mov
lahf
scas
daa
push
cwtl
out
sbb
fcompl
adc
inc
and
xor
gs
cmp
das
pop
add
xor
inc
shlb
push
mov
mov
xchg
mov
lods
xchg
leave
add
ret
scas
push
jmp
out
mov
cli
mov
push
rcr
xchg
scas
jo
mov
mov
pop
xchg
jb
pop
rorl
mov
xchg
mov
call
orl
xchg
or
dec
and
icebp
jg
and
xor
fwait
cmpsb
xchg
into
lret
sbb
push
mov
dec
or
jle
je
pop
mov
sbb
adc
or
push
xor
pushf
rorb
mov
bound
mov
sub
cmp
aaa
adc
dec
fwait
clc
and
dec
mov
and
lret
jae
mov
mov
addr16
dec
add
push
or
dec
mov
mov
loopne
sahf
imul
cmp
clc
aam
dec
cs
test
xchg
pop
push
dec
sub
pop
mov
push
out
bound
mov
mov
pop
sbb
int
in
push
jle
lahf
sahf
insb
lret
push
shll
push
dec
insb
lock
sti
jne
lret
jl,pt
cwtl
mov
cmp
jns
in
mov
cmp
dec
cmp
jl
mov
repnz
lods
jns
test
stc
and
dec
sub
xor
mov
jle
sub
aad
mov
test
push
in
cltd
addr16
cltd
sub
sbb
pusha
into
inc
sub
cwtl
aas
inc
les
jl
xor
movsl
xorb
sub
das
popl
lahf
mov
arpl
or
jge
dec
push
enter
add
out
dec
dec
push
ljmp
xchg
add
dec
arpl
pop
out
nop
outsl
dec
aas
pop
int
cs
mov
pop
adc
pop
xor
cmp
outsl
pop
outsb
dec
mov
hlt
mov
jns
jl
jo
mov
sub
fldl
fldt
popa
rorl
dec
adc
pop
push
dec
addr16
lods
xchg
ret
orb
outsl
cmp
adc
adc
mov
rolb
cmp
add
mov
outsl
xor
dec
dec
mov
jle
les
fisttpll
addr16
sbbl
fwait
ljmp
inc
inc
into
adcb
push
sarb
pop
pushf
dec
loope
int3
mov
and
push
sbb
mov
fldenv
push
cmp
mov
jecxz
test
pop
jmp
push
shrl
inc
aad
ja
ss
repnz
inc
mov
sbb
push
xor
or
xor
jecxz
test
dec
inc
jns
push
das
pop
stos
leave
dec
jp
cld
inc
dec
pop
push
push
dec
pusha
ljmp
dec
fcompp
je
out
mov
dec
std
jno
xchg
loope
lods
push
shlb
push
mov
jle
cmp
push
push
xchg
pop
gs
jo
and
divps
add
lahf
pop
dec
jl
aaa
iret
cmpsb
and
xor
popf
call
xor
sarl
out
dec
lods
ret
xor
pop
mov
mov
mov
push
test
mov
and
addr16
or
cltd
mov
jo
dec
test
xlat
dec
dec
jno
sub
dec
xor
or
inc
test
mov
add
mov
add
xchg
xchg
or
inc
dec
pop
and
out
xchg
inc
movsl
xor
or
pop
dec
in
mov
cli
mov
insl
not
sub
data16
testl
bound
loop
test
loopne
jo
xchg
adc
xorl
mov
rcrb
sub
pop
outsb
jno
fisubrs
jle
adc
xchg
fs
mov
into
sbb
out
push
sbb
repnz
mov
data16
jl
dec
imul
push
cmp
jg
out
and
mov
inc
push
push
shl
push
mov
js
scas
leave
lret
lret
into
or
jl
cwtl
dec
xor
mov
push
mov
jl
xor
popf
fs
out
incb
dec
int3
fidivrs
sbb
into
stos
jl
ss
in
xchg
mov
inc
or
and
repz
inc
push
or
cmp
xor
sti
add
jbe
fdivp
jmp
cli
aad
xchg
test
dec
cwtl
addl
scas
pop
shlb
in
adc
stos
push
scas
or
push
test
loope
movsl
jl
das
mov
arpl
stos
shlb
outsb
cmp
fbld
pop
fcoml
mov
mov
lahf
lret
fs
cmp
jmp
inc
scas
in
and
pop
idivb
std
mov
flds
push
dec
pop
bound
inc
mov
xor
call
adc
jbe
into
in
movsl
mov
lcall
push
jo
mov
pop
sub
push
imul
scas
mov
or
jle
ss
and
mov
js
xchg
cwtl
mov
inc
sbb
add
jg
mov
mov
or
sub
std
jb
jl
sub
popf
mov
push
int
sbb
pop
movsb
xchg
inc
insb
push
fcmove
and
outsl
es
bound
pop
addb
pop
popf
fs
xor
cmpsl
aas
fidivrl
mov
mov
inc
lcall
jo
dec
and
sbb
sbb
dec
ss
mov
pop
mov
filds
add
push
pop
dec
mov
xabort
insb
in
sub
aaa
or
fs
aam
inc
aas
adc
xchg
out
cmp
add
and
or
dec
jle
sbb
xlat
dec
out
or
jnp
and
or
mov
cmc
mov
jo
push
push
hlt
mov
stos
int3
dec
xchg
mov
stos
bound
addb
mov
lock
dec
inc
add
testb
movl
mov
jl
xor
fiadds
ja
and
push
adc
pop
push
scas
mov
mov
lahf
sub
fmuls
cmp
cmp
lret
fldcw
popa
icebp
pop
lods
cmc
adc
fisubrl
xchg
mov
mov
jmp
sbb
mov
rsm
loop
scas
mov
jl
mov
sub
cs
sbb
vpcmpeqb
mov
xchg
inc
fdivl
movsb
lret
sub
sub
dec
mov
mov
int
pop
mov
inc
insb
sbb
nop
jge
xor
sub
mov
out
xor
dec
mov
adc
push
xchg
xor
mov
push
jp
ds
dec
sbbl
out
dec
arpl
xchg
movsl
fcmovbe
dec
and
add
mov
xor
mov
incl
addb
mov
subl
arpl
dec
lock
ljmp
and
sahf
iret
into
mov
and
inc
shlb
cmp
ja
mov
loope
out
jle
dec
pop
xchg
movsl
add
lods
push
dec
rclb
negb
jbe
dec
into
mov
fs
insl
lahf
mov
or
xchg
dec
sti
push
sub
dec
and
popf
call
xor
mov
xchg
pop
sub
sbb
inc
sahf
popa
or
sbb
cmp
das
dec
clc
mov
lret
push
cltd
lods
dec
test
pop
and
dec
jo
lret
test
xchg
dec
or
xor
stos
je
dec
add
cmpsl
cld
fwait
dec
stos
mov
xor
mov
imul
pop
aam
inc
lds
rorl
data16
into
jbe
dec
and
ljmp
mov
fldl
jb
into
leave
jl
jge
xor
shrb
out
sbb
or
push
in
fcoms
dec
dec
pop
jne
push
xchg
push
stos
cltd
jge
aam
mov
test
sub
xor
aaa
jl
push
pop
repz
movsb
sub
sub
or
xadd
fdivrp
xor
fisubl
or
ja
outsl
jbe
rorl
cwtl
mov
push
or
orl
movsl
pop
xchg
lock
dec
sub
sbb
pusha
dec
jns
shlb
das
inc
insl
mov
dec
jne
gs
inc
and
arpl
aad
icebp
dec
mov
lea
pop
dec
push
xor
fwait
push
mov
mov
rorb
xchg
dec
mov
adc
daa
call
repz
dec
adc
aaa
adc
mov
loope
test
fscale
data16
sbb
imul
lock
dec
mov
cmpsl
pop
rolb
outsb
cs
lods
stos
gs
or
fdivs
jbe
dec
mov
pusha
lods
mull
loop
mov
ljmp
xchg
mov
jecxz
cmp
dec
mov
je
adc
outsl
dec
pause
es
fsubp
mov
xchg
pusha
mov
xchg
dec
xor
dec
add
mov
icebp
dec
inc
cmp
jmp
inc
dec
pop
dec
sub
dec
mov
inc
or
dec
lret
sub
cmp
dec
movl
cmp
mov
int
sbb
movswl
dec
push
lcall
dec
mov
cli
test
dec
sub
enter
mov
jnp
dec
fucomi
add
ss
aam
cli
sbb
adc
push
fbld
call
add
in
and
movsb
aaa
sarb
push
mov
pop
jmp
jle
aas
fisubrl
ljmp
add
sbb
add
rorb
dec
jmp
pop
jbe
dec
xchg
sub
data16
push
rorl
aas
push
cwtl
xor
ja
push
scas
add
or
mov
dec
ljmp
call
movsb
fldcw
or
stos
xchg
pop
iret
adc
test
pop
ds
push
dec
pop
mov
mov
mov
dec
jecxz
xchg
bound
sub
xor
sub
es
dec
fdivr
or
scas
push
lret
mov
push
mov
fisubrs
rcll
dec
mov
cmpsb
inc
hlt
fs
xlat
orl
iret
subb
shll
leave
lock
pop
cld
cli
fucomp
pop
pop
aaa
popa
sub
and
or
dec
test
sbb
push
sbb
out
lcall
pop
in
jl
pop
inc
xchg
insl
push
mov
sub
adc
and
push
sub
jg
inc
mov
inc
sahf
push
or
sub
lcall
mov
sub
jl
int3
xchg
sub
arpl
push
iret
lret
cs
mov
cmpsl
adc
sub
dec
xor
in
fstl
and
dec
pop
pushf
push
mov
dec
aas
mov
loop
mov
inc
outsl
dec
scas
push
testb
pop
data16
dec
test
xlat
cmp
jbe
cmp
dec
jb
cli
testl
and
dec
leave
jns
arpl
adcl
or
test
lods
jge
cwtl
inc
dec
add
xor
enter
in
dec
xchg
pop
in
aad
cmp
dec
push
repz
fdivl
inc
mov
push
dec
ror
cmp
xchg
cmp
mov
sti
mov
movsb
ja
adc
mov
xchg
add
sbb
cmp
pop
jle
pop
mov
inc
jnp
xchg
pop
xchg
es
and
je
dec
jle
icebp
dec
jg
pop
adc
sub
xchg
push
xchg
scas
fildl
mov
mov
xor
cmp
xlat
mov
mull
and
mov
popa
insl
shr
test
js
and
mov
fidivs
fsubrl
xlat
jl
cmc
pop
cmpl
outsb
rorb
movsb
out
xor
mov
pop
daa
jmp
add
test
aad
mov
sti
sti
rcrl
push
shrb
xchg
jle
icebp
dec
dec
mov
cld
xchg
xchg
dec
and
icebp
cmp
xchg
or
cmpsl
push
fmull
xchg
mov
pop
pop
rorl
orb
jecxz
ficomps
out
inc
lret
mov
jmp
inc
pop
mov
push
xchg
pop
imul
mov
mov
pop
mov
mov
cmpsb
jne
lds
dec
xor
mov
sahf
adc
cs
js
push
sbb
rorb
pushf
dec
stos
clc
push
adc
push
xchg
cmp
inc
mov
rclb
xchg
ljmp
adc
jle
and
cmpsl
ror
push
loope
xor
mov
dec
dec
mov
dec
or
shlb
cltd
dec
out
fptan
lods
sbb
sub
pop
scas
iret
pop
xor
cmp
sbb
cs
push
into
dec
xchg
cmpb
push
push
pop
shrb
les
xlat
xchg
dec
jmp
cmp
dec
mov
sbb
lea
pop
sbb
and
add
mov
jae
je
subb
mov
xor
sbb
xchg
test
imul
in
inc
jnp
mov
repz
xor
and
push
mov
fmull
dec
and
push
or
pop
cmp
inc
mov
jne
mov
dec
stc
leave
xchg
aad
sar
xor
rcl
mov
enter
xor
sub
xchg
push
pop
mov
mov
or
dec
cmc
gs
mov
pop
mov
jle
jno
loopne
inc
dec
inc
xor
ljmp
iret
pop
sbb
or
mov
je
inc
dec
loop
data16
or
into
mov
roll
mov
lret
repnz
lcall
push
outsb
dec
ret
shr
add
or
cltd
jge
adc
shrb
lahf
dec
shll
or
js
mov
pop
mov
push
inc
call
aam
fmuls
loop
addr16
int3
sub
adc
xor
dec
cmp
aam
sarl
pop
dec
ficompl
jle
cmpsl
lock
pop
aaa
cmpsb
dec
test
push
push
aam
adc
push
xchg
jo
mov
pop
lods
pop
xor
and
sbb
push
lods
pop
flds
repnz
cwtl
pop
mov
iret
jle
or
out
adc
adc
pop
mov
xchg
push
cmp
xchg
andl
nop
popf
dec
dec
rorb
jmp
mov
das
dec
cmp
xchg
rcl
dec
mov
repnz
ret
jl
lds
adc
xor
hlt
mov
push
push
pop
out
shll
fimuls
or
xor
jne
and
or
add
rcrb
faddl
mov
sub
fldcw
adc
and
outsb
and
icebp
jno
cmp
pop
shr
fstl
aad
lods
jo
ret
arpl
mov
fbstp
les
out
icebp
roll
jns
aaa
outsb
loop
mov
jae
lret
mov
leave
mov
mulb
mov
inc
imul
push
dec
sti
cmpsb
jae
stos
testb
jp
or
xor
adc
pop
adc
stos
or
dec
add
fwait
arpl
sbb
mov
push
xchg
inc
sub
leave
int
in
pop
jmp
adc
or
xor
inc
pop
dec
int3
aad
mov
add
mov
dec
and
test
dec
out
or
lds
push
jnp
dec
or
clc
pop
rorl
movsb
cmpb
dec
stos
dec
mov
xorb
dec
mov
cwtl
mov
aam
addr16
pop
addl
dec
les
dec
leave
nop
mov
in
pop
sbb
cmp
notb
add
push
shl
cmp
or
jo
fcoml
clc
mov
iret
dec
rcll
fwait
or
pop
add
push
sahf
sub
mov
and
cld
mov
inc
mov
and
test
lahf
dec
ljmp
sbb
dec
inc
xchg
sbb
daa
test
out
xor
into
mov
dec
cmp
xor
inc
jg
jbe
shlb
pop
repz
mov
arpl
dec
adc
push
jp
or
jb
inc
cmp
jnp
pop
inc
in
pushf
inc
adc
mov
dec
gs
fisttpll
jg
cmp
mov
pop
xorl
push
xchg
push
insb
popf
pop
mov
jge
dec
hlt
and
ds
xchg
out
jg
aam
inc
fisubs
mov
jnp
inc
out
xchg
cmp
sub
dec
and
test
mov
clc
jae
ljmp
ftst
test
and
daa
inc
cmp
jl
test
bound
outsb
dec
hlt
dec
cld
cmp
jmp
jb
das
imull
push
xchg
pop
or
pop
cmpsl
xchg
sbb
pop
in
shll
dec
repz
xor
sti
int3
lea
cmp
insl
fcmovu
dec
dec
pop
push
scas
dec
mov
ficomps
sbb
dec
lcall
fisubs
fs
dec
test
pop
fisubl
stc
iret
ja
mov
jne
out
enter
js
hlt
dec
sub
add
dec
nop
mov
push
mov
movsb
dec
push
cmp
pop
cld
add
mov
dec
imul
decl
adc
iret
stc
cltd
inc
in
and
sbb
shrl
insl
aam
cmp
out
dec
incb
jmp
pop
mov
dec
or
shrb
dec
imul
and
mov
iret
std
in
mov
pop
dec
jns
cmpsb
and
sub
cli
fisubs
out
push
das
lahf
sub
lock
out
jle
jb
shrl
mov
and
add
fisubs
inc
cld
imul
lret
inc
push
and
scas
jl
mov
adc
clc
push
gs
jle
aam
jnp
sub
insl
into
add
dec
jl
movsb
xchg
notl
xor
jg,pn
add
dec
pop
cltd
mov
cmp
es
jle
pop
xlat
outsb
repnz
jnp
add
ds
jg
or
je
ss
rcrl
inc
add
pop
cmpsl
xor
fistpll
scas
adc
pop
dec
iret
mov
and
mov
cld
add
mov
dec
scas
sub
fnstsw
add
mull
inc
dec
pop
mov
push
sahf
fists
pop
js
fisubl
fwait
dec
mov
andl
fs
pop
out
out
ficoml
mov
movsb
inc
mov
jb
push
mov
out
sub
xchg
imulb
gs
cmp
cltd
idivb
stos
int3
leave
in
jo
mov
loope
sbb
sbb
dec
jnp,pn
stos
pushf
insl
jns
dec
clc
inc
in
nop
test
cmp
inc
pop
sti
jle
sbb
dec
push
test
gs
pop
sub
or
mov
iret
insb
xchg
stos
cltd
dec
rorl
in
jne
dec
jo
out
in
pop
out
dec
sahf
mov
aaa
push
lods
inc
push
stos
cltd
int
fwait
insl
shll
inc
stc
js
inc
push
repz
xor
sub
sub
sahf
mov
push
sbbb
out
inc
fwait
dec
jne
jbe
xchg
and
mov
xor
dec
cld
push
sti
pop
cmp
mov
mov
ds
and
xchg
dec
sbb
push
cmp
dec
sbb
cmpsb
js
xchg
push
and
pop
decl
dec
repz
ret
lods
push
inc
cs
dec
fstpl
sub
repnz
adc
in
pop
into
insl
push
popa
mov
insb
outsl
out
pop
pop
ror
inc
dec
xorb
mov
call
push
dec
pop
stos
hlt
dec
bsf
in
mov
daa
outsl
push
add
mov
les
mov
sti
pop
pop
dec
jl
repnz
fildl
ljmp
fsubs
cli
or
nop
pop
sub
lahf
outsl
push
mov
out
jle
xchg
push
add
xchg
test
out
out
outsl
pop
inc
jbe
fmuls
pop
mov
xor
jnp
xchg
movsl
loopne
dec
pop
xor
not
stos
pop
icebp
movsl
push
fnstsw
loope
aam
and
cltd
loop
pop
incl
xchg
dec
inc
jp
mov
xor
mov
mov
dec
mov
add
cmp
or
xor
test
mov
lods
cmp
negl
mov
mul
dec
daa
test
stos
sub
pop
cmpsb
into
push
pop
cmp
mov
ret
jns
push
sub
psrlw
fimuls
outsl
iret
mov
mov
aas
les
xchg
leave
sub
jae
pop
dec
mov
mov
push
cs
push
jge
nop
sbb
pop
mov
mov
cmp
into
arpl
cmp
fidivrs
sub
push
xchg
stos
jp
mov
dec
ja
xchg
push
mov
push
test
pop
out
sub
push
mov
lret
fs
imul
jno
lea
pop
out
push
dec
imul
jbe
cmp
popa
orl
dec
pop
jle
sbb
out
adc
sub
data16
shlb
mov
dec
addr16
or
xchg
cs
pop
mov
scas
pop
into
mov
out
cmp
fiadds
mov
sbb
bswap
inc
fimuls
xor
pop
mov
mov
jo
add
mov
scas
and
pop
fcmovnb
pop
inc
por
sbb
push
xchg
outsb
ror
jo
sarb
js
icebp
out
shlb
lock
inc
push
out
and
das
shrb
repz
mov
mov
stos
ja
movsl
les
in
jbe
imul
std
inc
xchg
ret
push
dec
es
xor
cs
mov
sub
pop
insl
fldcw
lods
inc
dec
lea
cmovle
or
daa
sub
fwait
shr
addl
inc
sub
pop
dec
stos
sbb
jge
cmp
xor
cs
iret
inc
push
mov
in
lods
push
lret
sti
sbb
scas
rcrb
sbb
jns
lds
mov
dec
loope
test
lret
lock
mov
xor
jo
movb
js
inc
scas
testb
add
push
inc
adc
mov
sti
loop
mov
int
push
dec
adc
pop
add
daa
jg
ret
int
clc
inc
shrl
ljmp
es
push
fdiv
dec
pop
push
pop
outsl
sbb
call
cs
ja
and
loope
je
ds
xlat
sti
jge
popa
adc
fisttpll
imul
jle
adc
dec
int3
rcrl
aas
xor
push
jmp
sti
jl
sub
rcrl
test
push
xchg
adc
out
sub
popf
movsl
enter
lret
dec
fcompl
in
iret
or
pop
inc
push
pop
popa
inc
dec
insb
cmp
mov
and
call
lods
xor
inc
jbe
fimuls
xchg
mov
adc
mov
inc
jle
loopne
and
js
imul
cmp
stos
movsl
cmpsb
and
jg
bnd
sti
into
pop
jle
repnz
mov
mov
test
idiv
inc
inc
lock
sub
mov
dec
into
jns
data16
xor
int
cmp
dec
mov
movb
push
cmp
jge
cmpsl
aas
hlt
icebp
repnz
out
cmc
nop
jp
iret
test
ja
fisttpl
fistps
xlat
ret
out
pop
mov
jbe
dec
loope
shrb
aad
movsl
cmp
ljmp
mov
mov
ja
adc
push
xchg
or
js
push
jns
and
scas
push
dec
push
adc
fisttpl
xchg
lock
sub
hlt
adc
cmp
stos
in
nop
ds
mov
xor
sbb
jno
mov
xchg
mov
dec
pop
test
jnp
sbb
lret
adc
or
xchg
leave
jno
aam
outsl
mov
cmp
push
adc
sbb
leave
lods
mov
dec
push
pop
pop
jmp
scas
dec
dec
cmp
inc
xor
and
dec
aad
mov
adc
sbb
xchg
rolb
and
sti
inc
pop
sarl
mov
lret
mull
out
pop
or
dec
dec
add
into
cld
or
xor
mov
ret
outsb
sti
cmp
loope
daa
out
mov
xor
mov
push
jge
loopne
out
jg
adc
addr16
in
pop
notl
xchg
cmp
ljmp
clc
leave
or
test
repz
enter
push
loope
dec
mov
or
fisttpll
jbe
mov
dec
push
lods
cld
daa
cmp
sub
call
cmp
pop
jns
dec
subb
lret
inc
dec
sbb
sbb
out
cwtl
xchg
repz
add
enter
ds
nop
sub
mov
in
pop
adc
push
xchg
pop
pop
push
sahf
lahf
inc
add
mov
fisubl
jp
fisttpll
mov
decb
stos
xor
testb
xor
or
ds
gs
push
movswl
adc
push
rcrb
imul
stos
orl
int3
shlb
jae
cmp
dec
stos
mov
add
pop
dec
add
and
jb
aam
xchg
dec
mov
idiv
cmc
or
outsb
mov
popf
push
dec
fimuls
jo
enter
xchg
push
pop
mov
arpl
adc
push
in
dec
mov
jle
outsl
xor
int3
xor
aam
sbb
dec
or
adc
icebp
fnsave
dec
jo
push
dec
rolb
xchg
fs
and
into
sbb
cmpsl
dec
adc
push
pop
inc
jbe
jle
mov
push
pop
lahf
mov
int
inc
cli
cmp
xor
jecxz
pop
stos
lods
pop
jle
lea
cmp
or
lds
dec
lods
mov
cli
aad
rcrb
dec
rcl
ds
mov
rorl
xor
push
in
rcll
mov
or
iret
xchg
cwtl
mov
xchg
push
dec
sub
inc
inc
repnz
arpl
mov
push
inc
and
sub
push
adc
jnp
stc
sub
dec
push
xor
jo
arpl
or
icebp
data16
dec
dec
mov
scas
cmp
int
aam
add
adc
dec
xchg
jle
or
push
leave
pop
cmp
inc
xchg
inc
dec
push
fmul
jmp
adc
mov
into
cmpsl
jle
jnp
into
pop
dec
lods
filds
xchg
jl
adcl
sub
movsb
iret
add
shl
loope
inc
mov
aas
jg
scas
iret
pop
cmpsb
loop
dec
sub
push
or
movl
or
push
jge
push
pop
pop
pop
test
sahf
mov
out
dec
ds
aas
xor
xchg
xchg
pop
mov
test
std
repnz
roll
dec
ret
pop
addr16
xor
inc
or
push
mov
les
xor
pushf
pop
adc
out
fscale
xchg
dec
ja
jb
cmp
test
sbb
call
and
xchg
mov
inc
cwtl
and
jg
fmuls
stc
xchg
dec
imul
sbb
data16
xchg
das
call
fwait
xor
adc
push
dec
jmp
fmulp
test
and
xor
sbb
pop
dec
mov
cmpsl
cld
sarl
enter
sub
lods
movsb
jb
jle
jge
adc
fcos
dec
add
daa
dec
lret
push
mov
movsl
push
sub
ja
add
dec
cmp
and
fisttps
std
pushf
inc
xlat
inc
inc
clc
dec
in
fstpl
testb
inc
dec
add
cltd
xor
popf
movsb
mov
mov
dec
add
enter
inc
dec
lret
clc
cmp
aam
xchg
dec
mov
mov
test
sub
mov
cmp
sub
outsb
shll
jbe,pn
shlb
push
inc
mov
aas
and
cmpl
add
sahf
pop
or
xor
jle
mov
mov
lahf
push
pop
xor
nop
cmpsl
push
pop
inc
push
negl
add
xor
dec
or
push
push
inc
mov
shrd
sub
jae
rcrb
enter
mov
or
adc
pop
xor
and
into
cmpl
out
pop
push
adc
xchg
cmp
add
mov
addr16
fldl
cmp
iret
jg
or
xor
ss
in
push
ret
sub
add
imul
out
iret
das
adc
xor
loopne
lods
stc
out
pop
loope
daa
out
arpl
aas
adc
in
cltd
jle
fists
loop
adc
mov
aad
dec
pop
stos
outsl
sub
cmpsl
xchg
lods
xor
cmpl
in
or
outsl
push
mov
loope
or
sbb
dec
aad
add
ret
mov
and
mov
in
in
data16
dec
daa
adc
enter
dec
loop
mov
push
or
pop
jnp
in
scas
mov
out
adc
call
adc
lock
and
and
add
dec
data16
jp
inc
fists
mov
push
dec
sbb
pop
in
movsl
push
in
dec
sbb
add
dec
push
dec
pop
nop
pop
stc
inc
dec
loopne
imul
pop
out
cwtl
mov
xchg
sbb
lcall
leave
xchg
jmp
cmp
fstps
popa
mov
xor
push
out
sbb
push
pop
xchg
fisttpll
fldenv
out
test
sti
jb
mov
mov
jecxz
cli
enter
pop
xor
sbb
into
lret
jle
dec
fmull
and
aam
jmp
sti
pop
shr
add
pop
ret
mov
xor
push
pop
push
data16
xlat
cwtl
mov
shlb
push
clc
rep
xchg
xor
shr
mov
dec
xchg
pop
in
and
dec
push
pushl
addr16
mov
sub
xchg
adc
add
mov
mov
jns
mov
cmp
or
cmp
pop
sahf
dec
popa
jl
hlt
repz
std
scas
sti
sbb
push
and
popa
and
cmp
mov
jle
cmovs
pop
push
outsb
jmp
out
inc
xchg
test
add
imul
or
jge
cmp
les
inc
cli
pop
test
add
adc
out
stos
test
push
orb
pop
mov
outsb
fs
jmp
je
idivb
cs
dec
stos
movsb
xchg
icebp
movsb
pop
pop
test
adcl
fisttpll
insb
dec
inc
out
mov
jl
mov
jecxz
and
xchg
dec
rcr
push
mov
xor
int3
pop
adc
outsl
lea
add
and
mov
push
icebp
pop
push
les
add
out
mov
sbb
pusha
sbb
aas
lock
mov
jl
pop
int3
push
jecxz
sbb
xchg
imul
dec
mov
mov
mov
in
dec
sbb
mov
movsb
cmp
mov
xchg
mov
inc
scas
adc
mov
mov
es
add
stos
fcompl
jp
dec
nop
ss
add
xlat
pop
dec
xchg
mov
jle
dec
mov
xlat
or
push
lock
dec
push
ret
mov
xchg
popa
and
ret
dec
mov
into
pop
jno
xor
adc
add
je
cmp
int
repnz
bound
outsl
dec
and
push
push
xchg
test
push
dec
insl
jp
fbld
shl
out
add
push
movsl
movsb
lods
adc
aam
xor
xchg
sub
dec
pusha
xor
pushf
roll
filds
pop
pop
cwtl
pop
cmpsb
cmp
scas
daa
out
lret
fwait
std
jo
fst
jb
adc
mov
push
nop
into
jp
dec
scas
outsb
icebp
outsl
jne
jnp
int3
popa
and
pop
imul
std
nop
sarb
loopne
stos
imul
fistps
xor
cltd
das
ss
test
sbb
push
inc
xchg
xor
sub
cmpsb
stos
jmp
mov
mov
push
loop
ljmp
lahf
pop
subb
adc
iret
mov
js
cmp
popa
sbb
sub
push
add
push
ljmp
daa
push
shll
push
sbb
iret
pop
pop
pmulhw
repz
stc
push
xor
loop
iret
push
divb
popa
xchg
push
dec
test
xchg
mov
fwait
cmp
sub
clc
in
sub
jo
shll
rcrl
out
push
add
lahf
fisubs
pop
add
mov
sbb
das
mov
xchg
out
fiaddl
and
jmp
or
iret
jg
lahf
shrl
or
push
cmp
das
adc
cmpsb
rolb
mov
das
inc
cmp
ljmp
daa
jg
sbb
jge
scas
gs
jecxz
pop
xchg
jo
out
mov
mov
push
je
xlat
xor
imul
mov
jg
loop
sbb
inc
es
fimull
adc
jl
rol
jg
rorb
xor
rcrb
loop
xchg
shr
lret
cmove
lea
jae
aas
dec
call
out
arpl
mov
mov
repnz
sbb
in
dec
sbb
clc
aas
lods
dec
mov
xor
and
pop
cwtl
push
adc
inc
ror
fisubrl
and
jle
mov
shrl
imul
repnz
js
sub
outsb
sti
sbb
cmp
outsl
adc
and
mov
sbb
jo
test
add
push
pop
insl
je
mov
push
inc
les
into
pop
aad
inc
xchg
xor
pop
sahf
das
repz
cmc
pop
push
movsl
sbb
into
or
and
mull
add
test
xor
insb
jp
cmpsl
out
cmpsl
mov
lea
femms
and
stos
dec
popf
fdivrl
int
test
dec
cmpsb
pop
test
jnp
aaa
add
adc
lret
xchg
push
fldt
dec
fs
cwtl
or
xor
leave
jne
dec
insb
sbb
pop
mov
sub
cs
dec
rclb
push
jns
sbbl
into
add
loop
dec
shrl
idivb
shlb
dec
mov
les
pop
hlt
dec
loope
cmp
mov
mov
and
push
jle
inc
pop
dec
or
sbb
mov
pusha
mov
in
jge
out
dec
mov
cmc
out
cmp
sbb
inc
inc
nop
pop
sub
dec
xor
jge
stc
cmpsl
push
mov
insl
pop
sub
jmp
stos
xchg
dec
fs
mov
clc
sub
cmp
jae
dec
pop
testb
jmp
scas
icebp
mov
test
push
xchg
pop
outsl
dec
aas
jle
pop
push
dec
pop
cmp
push
lret
pusha
lods
dec
xor
pop
ds
rcrl
sub
lret
push
xchg
cld
aas
pop
push
shrb
inc
jg
mov
xor
or
and
fisttpl
call
and
lea
pop
jbe
aam
push
inc
sub
jo
inc
mov
mov
cltd
cli
loope
js
in
push
iret
shld
ret
inc
jbe
shl
cmpsb
dec
xchg
mov
and
std
pop
outsb
xlat
js
dec
xchg
fmulp
adc
jb
jb
xor
mov
dec
jmp
and
xor
lods
mov
dec
dec
outsl
repnz
cmp
ret
into
or
out
jb
shrl
and
into
in
pop
aad
mov
sbb
push
popf
pop
into
int3
push
inc
insb
pop
scas
daa
lret
stos
dec
iret
inc
mov
sarl
push
and
mov
dec
inc
pop
aam
in
in
cmc
dec
push
add
lret
rclb
das
sub
sahf
cbtw
outsb
std
mov
push
das
int3
jl
or
jg
fs
jns
and
stos
shrb
mov
sub
sarl
sbb
add
shrb
rolb
int
adc
add
in
aas
xchg
aaa
not
dec
inc
jle
xchg
jle
dec
scas
mov
inc
adc
sbb
lret
repz
test
pop
sub
pop
cmp
adc
xor
mov
jbe
push
cmp
pop
push
jo
xchg
push
mov
aaa
cmp
mov
leave
inc
jl
dec
cltd
rcrl
sub
ds
pop
mov
cmpsb
inc
pusha
push
jl
jle
push
and
insl
mov
int
aaa
cs
push
repz
jbe
subb
popf
sub
sbb
mov
mov
rorb
xchg
inc
in
mov
sub
inc
roll
loope
lcall
cld
adc
sbb
dec
jecxz
xchg
out
xor
cwtl
push
into
xor
pop
jno
add
inc
fldln2
dec
icebp
add
test
push
dec
xor
aas
mov
clc
inc
test
jmp
sub
in
jecxz
cld
jb
dec
sub
xor
adc
out
mul
imul
roll
dec
aam
cltd
addr16
mov
cmp
dec
or
push
ret
gs
xor
leave
inc
push
mov
mov
dec
xchg
mov
lock
out
jp
dec
jnp
push
inc
xor
fmull
fisubrl
jle
pop
lods
cmp
push
xchg
jge
mov
push
cltd
jo
and
mov
adc
out
cmp
movsl
enter
jl
push
pop
push
cmpsb
scas
sub
out
inc
pop
dec
inc
inc
adc
add
es
jns
xor
push
js
hlt
rolb
mov
sub
inc
ds
push
dec
cmp
inc
dec
mov
xchg
xchg
bound
adc
push
movsl
shlb
popa
xlat
mov
cmpsl
mov
ret
sub
cmp
jo
fidivrl
mov
mov
sub
push
add
sbb
rcl
rcrb
mov
pop
xor
scas
dec
out
fildll
clc
pushf
in
pop
mov
sub
adc
dec
lret
and
lock
mov
lahf
in
loop
ret
pop
xor
push
or
adc
fisubrl
je
jmp
fistpl
inc
sarb
xchg
loope
nop
adc
xor
lahf
and
loopne
outsl
mul
cmp
push
sahf
rorb
pop
lock
xchg
dec
pop
fwait
xor
call
push
jp
pushf
adc
xchg
fisubrs
in
icebp
pop
cmovle
std
out
cmp
fldl
sub
sub
out
cmpsb
push
add
dec
fldenv
cmp
jae
mov
dec
mov
dec
dec
cltd
inc
adc
push
lea
adc
outsb
repz
ret
inc
or
and
sbb
push
mov
cmp
fadds
adc
mov
pop
mov
ljmp
fwait
in
xor
dec
mov
ret
mov
dec
mov
int3
pop
aas
dec
test
mov
pop
cmp
add
adc
fmul
aaa
dec
cmpsb
adc
pushf
lahf
pop
fisttps
xchg
pusha
add
pop
frstor
inc
xor
cmp
dec
mov
xchg
maxps
mov
lds
jle
addr16
jle
cmp
add
js
rcl
mov
xchg
jns
jne
rorb
insb
xlat
dec
sbb
cmp
inc
xchg
xlat
adc
pop
sub
pop
js
inc
xchg
add
jle
mov
stos
daa
add
ds
pop
lods
add
sbb
pop
adc
daa
inc
inc
insb
push
pop
push
clc
sahf
pop
scas
xor
dec
and
shlb
dec
xchg
arpl
popf
mov
in
shrb
movsl
lcall
mov
lahf
xor
push
xor
jp
jb
mov
sbb
das
fnstcw
xchg
jg
adc
sbb
push
imul
je
jle
mov
xchg
cld
repnz
daa
jl
push
xlat
jns
bound
push
jnp
test
xlat
enterw
fwait
ror
sbb
inc
jb
push
push
into
push
and
adc
pop
outsb
stc
mov
adc
jg
out
pop
mov
sahf
jb
sti
int3
cli
cmp
inc
sub
pop
cs
mov
jmp
scas
je
insl
inc
dec
mov
nop
jns
scas
sub
mov
lods
or
popf
mov
or
xor
sahf
dec
pop
mov
dec
adc
stos
cmpsb
int
xchg
sti
data16
lret
sbb
adc
pop
push
out
or
mov
xchg
jne
cmp
dec
insb
lahf
sbb
jg
adc
pop
out
push
jns
push
scas
cmc
jle
jbe
popa
das
dec
test
out
div
jl
mov
fld
sar
add
sub
fisttps
imul
adcl
test
sub
sti
into
repz
test
adc
cmp
push
loope
bound
popf
dec
push
xor
out
jecxz
int3
lods
dec
in
push
add
adc
inc
aam
sub
push
dec
pusha
add
dec
pop
sub
faddl
cmp
dec
cmp
js
movsb
scas
inc
jbe
insl
dec
push
jl
loopne
add
xor
test
in
xchg
cmp
push
ds
push
enter
jge
icebp
sbb
loop
xchg
lock
daa
push
scas
cmc
outsl
add
test
mov
push
pushf
enter
adc
sbb
ljmp
and
cmpb
dec
cmp
cmpsl
pusha
mov
xchg
ss
sarb
mov
cli
scas
rol
dec
into
pop
test
repz
ficompl
mov
lds
sub
rcrl
add
cwtl
mov
sbb
dec
addb
xor
dec
inc
or
adc
push
inc
push
int
xchg
xchg
jge
inc
dec
adc
mov
sbb
inc
push
mov
or
dec
je
sahf
enter
mov
orb
push
jge
mov
cwtl
mov
xchg
adc
adc
mov
push
psubd
dec
xchg
mov
pop
inc
pop
sbb
dec
jbe
loope
push
mov
or
inc
mov
dec
push
cltd
pop
cld
mov
ss
pop
arpl
lahf
into
pop
mov
dec
inc
sbb
pusha
lret
xor
pop
shll
inc
mov
dec
mov
fistpl
ret
add
mov
mov
cs
das
xor
push
rclb
pop
inc
dec
fnstsw
jb
lock
jecxz
fcmovb
adc
push
xor
cli
addr16
in
lods
out
lret
mov
jecxz
xchg
fs
sbb
ljmp
push
xlat
mov
dec
scas
dec
cs
jne
mov
push
das
shlb
mov
xchg
lret
dec
pushf
scas
out
push
lds
push
push
int
sbb
jns
mov
int3
xor
jbe
dec
out
ss
movsl
dec
push
sahf
sub
std
dec
jp
push
inc
adcl
int3
xchg
cmp
sbb
xchg
mov
lods
popf
enter
xchg
loop
dec
push
pop
addr16
lock
decb
pop
mov
lret
push
mov
adc
inc
mov
xchg
dec
bound
pop
push
dec
in
ja
jg
and
fwait
jbe
sub
xchg
cmp
or
push
stos
incl
mov
inc
arpl
mov
inc
ljmp
xor
add
cltd
xor
ret
jb
and
and
lods
jbe
das
aam
inc
sbb
fucompp
xchg
mov
cmp
jl
add
add
pop
in
in
push
pusha
nop
dec
dec
insb
lock
xorl
sti
rcrb
out
iret
add
or
adc
push
jge
jnp
imul
push
popf
cmp
jle
aad
aaa
cmp
cld
aaa
jae
cmp
jmp
dec
push
xchg
aam
cmp
pop
into
jg
push
dec
xor
cmpsl
icebp
jle
icebp
stos
addr16
xchg
dec
mov
pop
jmp
gs
repz
push
hlt
mov
and
insl
jle
xchg
ss
mov
cmp
mov
dec
pop
in
xchg
xor
dec
add
pop
jle
dec
dec
and
and
cmp
jl
mov
dec
xchg
dec
xor
xor
adc
xchg
subl
shll
into
lahf
cmp
push
cs
xchg
fsubrl
fimuls
arpl
in
lods
ds
mov
lea
punpckldq
add
js
repz
aaa
pushf
out
jg
dec
pop
add
adc
ja
sub
outsl
dec
mov
mov
mov
int
cmp
in
sahf
dec
pop
idivl
xchg
lret
inc
repnz
push
ds
jmp
popa
push
dec
arpl
jl
cmp
aam
inc
je
mov
mov
cmpsb
rclb
mov
testb
jns
lcall
daa
fs
cmp
xchg
and
and
std
fwait
xchg
lea
inc
das
movlhps
sti
mov
iret
outsb
xor
lret
test
jecxz
fwait
clc
int3
sub
shrb
dec
or
dec
in
jb
fidivrl
hlt
cmp
dec
add
mov
mov
cltd
jns
jle
leave
loopne
adcb
cli
jmp
and
cltd
out
stos
jl
or
jb
mov
add
ret
mov
dec
sub
lcall
lret
cs
stc
popa
xchg
clc
cmpsb
jnp
mov
idivl
push
lahf
fwait
scas
and
add
cmp
iret
cwtl
scas
xor
dec
es
dec
mov
jl
pop
jns
push
in
loope
mov
std
xchg
rorb
xor
and
sub
add
movsl
lods
dec
add
stc
scas
pusha
or
pop
push
movl
scas
fisttps
clc
sahf
jo
movsl
fs
insb
js
mov
adc
mov
cmp
pop
inc
mov
jge
jmp
or
out
mov
rolb
jg
lock
mov
sub
pop
lret
and
cmp
add
ret
sub
ficompl
inc
sbb
sarl
and
aas
nop
cmp
popa
cltd
mov
sub
jbe
and
negl
test
push
adc
je
cmpl
sub
sub
pop
out
fs
pop
mov
sub
jno
mov
lahf
sbb
test
in
lcall
adc
xor
push
scas
inc
mov
es
rolb
ds
add
cmp
neg
js
stos
addl
into
pop
mov
das
jmp
daa
jb
out
leave
fildll
cli
push
pop
test
fidivl
push
sahf
jae
push
xor
scas
add
xchg
push
add
or
pop
cltd
push
aas
aam
push
les
js
icebp
imul
xlat
sarb
pop
pop
jae
out
xlat
jl
adc
add
gs
gs
mov
aad
cmp
int
rcrb
mov
mov
push
jle
lret
jmp
pusha
sub
sub
mov
cli
push
test
adc
cmp
sarl
rcl
cld
mov
mov
adc
stos
idiv
mov
sbb
scas
int3
sbb
push
cmp
pop
sbb
jge
sbb
test
jg
mov
cmp
jne
or
aas
mov
fcompl
push
inc
mov
icebp
iret
xor
xchg
dec
push
jae
lods
push
push
xchg
xchg
clc
add
sahf
jb
stos
stos
sub
push
fistps
dec
inc
test
and
test
ljmp
clc
outsb
xor
arpl
add
jp
xchg
mov
mov
inc
mov
movsb
push
dec
pushf
jnp
jl
mov
push
push
xchg
inc
into
jb
xchg
cmc
mov
ret
or
pop
push
cmp
and
jg
mov
outsb
pop
push
dec
inc
aad
pop
out
in
cmp
dec
cmp
or
fs
xchg
mov
rcr
mov
and
test
dec
lahf
push
mov
dec
xor
push
ds
nop
and
or
mov
mov
push
out
dec
pop
leave
push
out
mov
rorl
push
cmp
mov
nop
aas
fnstenv
jle
enter
call
jg
xchg
fnstsw
mov
dec
inc
mov
insl
outsb
jno
mov
dec
out
bound
sbb
dec
arpl
adc
aam
mov
adc
ja
jbe
adc
cmp
sti
dec
mov
mov
push
inc
jbe
pop
xlat
cmpsb
mov
fisttpl
dec
inc
and
jg
cmpsl
adc
inc
int
lock
mov
mov
scas
push
outsb
push
dec
push
cmpl
dec
xor
ret
cwtl
inc
out
dec
pop
subl
push
int
inc
les
dec
push
fimuls
sub
inc
inc
jo
lcall
cld
jmp
dec
insl
pop
lret
sub
cmp
dec
or
xchg
lods
and
sub
inc
js
icebp
cmp
sbb
push
punpckldq
aad
fldcw
inc
sub
cltd
push
dec
push
dec
fcmovnu
dec
daa
pop
es
xor
jbe
pop
mov
push
pop
adc
inc
pusha
or
inc
jl
sti
or
movsb
icebp
sti
lret
fs
stc
shlb
pop
sbb
pushf
popf
and
fiadds
inc
ljmp
or
call
xchg
and
test
xor
dec
enter
lods
hlt
cmp
jmp
ds
pop
xchg
orl
leave
aam
rorb
mov
add
in
dec
xchg
fsubl
mov
mov
push
inc
test
pop
xor
xor
in
je
setl
dec
sbb
cwtl
fdivl
jg
lds
outsl
jno
sub
int3
dec
xor
lods
in
dec
test
lcall
scas
pop
cmp
adc
dec
push
shr
jle
popf
outsl
fsubs
out
ljmp
inc
icebp
jmp
pop
ret
jge
add
fisttps
add
push
fstpt
dec
cmpsl
movsl
mov
jmp
dec
lods
imul
dec
sti
aaa
scas
insl
mov
mov
pop
push
test
dec
hlt
cmpsl
scas
ds
fldenv
dec
lcall
cld
xor
cltd
les
in
ljmp
mov
dec
mov
ja
cmpsb
lods
insb
dec
sub
test
imul
mov
daa
dec
mov
xor
mov
sbb
testb
insl
stc
xchg
lods
xchg
mov
jns
test
lock
xchg
subb
mov
inc
pop
jl
test
xchg
push
in
mov
inc
clc
pop
add
aas
fbstp
data16
iret
paddw
scas
dec
jl
je
pop
inc
add
dec
sti
inc
adc
pop
dec
repnz
and
push
xchg
pop
into
mov
add
pop
cli
addb
mov
hlt
iret
xchg
dec
ja
and
inc
ficompl
push
jp
sub
stos
loop
idivb
dec
mov
xlat
sbb
dec
xor
es
addr16
daa
mov
std
or
in
or
lahf
lods
dec
movsb
dec
xchg
icebp
add
subb
push
dec
jmp
ret
dec
loopne
cli
test
scas
negb
add
pop
stc
lahf
punpcklbw
pop
into
dec
sub
dec
mov
inc
adc
or
jl
insl
outsb
movsl
dec
xlat
out
stc
inc
aad
out
enter
xchg
lds
movsb
lret
bound
into
cmp
dec
test
xchg
or
sbb
dec
push
addr16
xchg
outsl
or
outsb
cltd
lahf
int
jecxz
mov
mov
and
and
dec
jl
ds
add
dec
jecxz
lahf
xor
sbb
pop
fdivs
stos
pop
jmp
rolb
outsb
mov
testl
outsl
int3
dec
sahf
in
ss
mov
sbb
xor
xchg
add
add
adcl
shr
cmp
pusha
adcl
imul
adc
lea
ljmp
mov
mov
stc
xchg
and
cmp
out
jg
sub
cld
ds
mov
mov
scas
incb
push
inc
cmc
shlb
fs
cmp
scas
jl
fcoms
insl
mov
xchg
jbe
push
movsl
hlt
xchg
jge
int
sub
outsl
pop
in
mov
mov
in
jg
dec
cmp
or
mov
sub
xlat
cmp
dec
jl
add
mov
enter
outsb
ds
nop
fdivp
push
iret
sub
push
xlat
adc
xchg
or
sbb
mov
push
xchg
clc
dec
xchg
adc
negb
mov
push
jb
stos
xlat
sub
pop
cmpsl
dec
aas
stos
xor
dec
repnz
ss
daa
pop
in
jge
loop
adc
stos
dec
push
ret
push
sbbl
sbb
cmp
es
sbb
jne
mov
les
iret
dec
loope
sub
adc
pop
pop
in
aam
lcall
add
cmp
loop
dec
sahf
dec
scas
adc
xor
mov
dec
xor
sub
cltd
cs
dec
jg
push
pusha
push
sti
mov
xchg
jle
mov
sub
out
imul
ret
in
adc
sbb
jge
jg
pop
adc
add
shrb
jb
nop
jmp
lret
iret
out
andb
jmp
test
xchg
popf
sub
inc
mov
movsb
enter
sub
jl
inc
insb
sbb
push
mov
icebp
inc
gs
or
jl
or
inc
getsec
and
lods
dec
jne
sti
ja
pop
add
nop
rorb
inc
pusha
jl
pushf
push
add
and
fidivrl
jle
xchg
push
lret
push
mov
xlat
jbe
push
jle
lods
mov
movsb
bound
sub
fadds
movsb
daa
sub
lahf
xchg
das
cld
dec
idiv
out
jg
xchg
push
pop
mov
inc
and
mov
scas
cwtl
dec
push
dec
jo
popa
push
adc
mov
xor
pushf
mov
sahf
aad
scas
aaa
aad
add
sbb
ret
loop
sbb
adc
cs
jg
push
xchg
test
jae
sub
cmc
shrb
dec
sbb
mov
mov
fisttpll
shrl
push
dec
xchg
push
xchg
dec
lret
movsb
adc
out
jbe,pn
fisttps
jae
imul
and
test
and
dec
cmpsb
cmp
fimuls
and
dec
andb
dec
in
pop
cmpsl
enter
into
push
orb
xchg
aaa
dec
fistpll
push
iret
cmp
pop
jbe
mov
int3
dec
out
xchg
or
cli
dec
cmpsl
sarl
jns
mov
lahf
rclb
mov
sbbl
xor
movsb
dec
shlb
aas
pop
inc
adc
ss
stc
outsb
adc
pop
repnz
pop
pop
bound
cwtl
in
mov
pop
sub
into
pop
add
jnp
and
daa
aaa
jb
pushf
cltd
test
mov
hlt
mov
fcoms
lods
leave
addl
outsl
les
dec
fs
pop
cmp
out
push
jnp
cmc
add
sub
mov
add
sbb
pop
sbb
cmc
js
cmpl
jle
stos
inc
outsb
and
mov
pop
fisubrl
jge
inc
xchg
sbb
arpl
in
inc
xchg
gs
sbb
lock
lret
iret
mov
hlt
xchg
ljmp
xor
cs
inc
nop
rcl
aas
xor
push
and
pop
mov
repz
mov
insl
fcom
pop
xchg
mov
subb
mov
mov
gs
cmp
fistps
out
enter
das
add
aad
test
dec
adc
test
fstpl
dec
stc
pop
mov
jp
xchg
loop
test
leave
sub
jns
xor
daa
gs
dec
sbb
push
mov
xchg
outsl
jl
mov
stos
scas
sbbl
add
cmp
and
sub
push
mov
fistpl
test
loop
inc
sysenter
test
xchg
int
fcompl
pop
jle
scas
scas
xchg
lods
add
addr16
mov
add
hlt
loop
mov
int
mov
lds
or
cmp
out
and
lcall
xor
dec
adc
mov
test
cltd
adc
fstps
xlat
jle
or
push
mov
insb
xchg
lahf
fnstsw
jb
stos
dec
jg
adc
mov
xchg
sub
xchg
mov
aaa
les
and
jp
mov
push
dec
push
lea
jmp
js
lahf
ds
and
fmul
inc
add
sub
push
xchg
xor
add
out
rcr
cmp
int
outsb
mov
cmp
shrb
adc
pop
fildl
aam
pop
dec
xlat
jne
in
jns
js
ds
movsl
and
pop
pop
scas
mov
sbb
ds
repnz
adc
ror
jae,pn
sbb
roll
fidivl
movsl
lahf
xchg
decl
push
out
xchg
shrb
pushf
ss
ret
inc
jge
push
into
aas
sub
dec
inc
sub
mov
dec
pop
cmp
pop
adc
cmp
lahf
dec
mov
movsb
movsl
jle
js
mov
push
das
lds
add
cmp
loope
push
into
or
dec
mov
xorb
jb
lods
dec
movb
aas
nop
mov
pop
cli
in
xor
cmp
pop
mov
mov
int3
fldcw
add
jno
mov
popf
push
shr
insb
dec
cltd
ret
mov
dec
xlat
sti
sarb
sbb
mov
lret
cmp
pusha
xor
cmc
dec
mov
lea
in
aaa
test
loope
push
pop
cmp
sub
cs
push
dec
add
mov
inc
fisubs
in
test
std
call
mull
pop
dec
out
xor
cmp
lock
pop
lods
insb
mov
pop
stos
pop
cmp
in
add
pop
xchg
pop
pop
mov
aam
ret
imul
rolb
or
lret
repnz
std
jae
inc
shl
int
pusha
push
mov
fbld
sub
mov
adc
cmp
add
das
stos
pop
jp
int3
ds
stc
incl
jl
in
cmp
fs
mov
inc
mov
hlt
pop
lret
mov
xchg
cmp
out
cmpsb
lea
add
pop
inc
enter
aam
or
push
inc
xor
cmp
push
xor
movsl
xlat
jnp
inc
mov
lds
sbb
aad
iret
shrl
aaa
jl
push
mov
sub
in
dec
cmp
jmp
insl
push
sub
outsl
adc
rolb
dec
out
adc
pop
mov
xor
dec
mov
mov
dec
inc
mov
dec
xchg
cltd
jle
add
jns
mov
sbb
sbb
mov
pop
lods
dec
xchg
jne
sbb
dec
es
mov
pop
xor
dec
std
popf
hlt
cmp
shrl
jle
orb
push
mov
dec
test
icebp
pop
lcall
dec
sbb
cmc
mov
int
add
lods
inc
inc
fdivs
dec
push
out
nop
adc
jb
test
jno
add
testb
in
mov
add
aaa
mov
pop
sub
insl
subb
mov
mov
sarl
scas
and
mov
in
push
pusha
dec
sbb
add
mov
hlt
jae
mov
mov
add
mov
faddp
pop
push
pop
xchg
dec
pusha
fidivs
dec
mov
gs
dec
dec
insb
sub
in
pop
jb
lea
dec
out
inc
push
push
cmp
cmp
push
xor
icebp
shl
mov
fisubrl
mov
mov
inc
dec
bound
clc
andb
mov
xchg
xchg
mov
js
pop
fdivrl
dec
jno
mov
scas
xor
ja
xor
add
dec
repz
mov
pusha
lret
out
adc
dec
leave
pop
cmp
dec
push
mov
mov
dec
lcall
push
xor
jmp
push
lock
dec
mov
enter
scas
bound
dec
xchg
push
push
push
mov
dec
inc
push
enter
call
out
mov
add
mov
jo
outsl
cmc
mov
out
mov
clc
dec
and
inc
sbb
sarb
jl
loop
dec
cli
xchg
mov
jg
xor
jb
dec
int
pop
mov
addr16
ret
stos
or
add
xchg
dec
divb
dec
mov
fstpl
cmp
fbld
sub
mov
and
stos
or
dec
cmp
mov
pop
mov
jl
dec
xor
in
loop
clc
fisttpl
inc
dec
imul
cmp
js
lahf
dec
dec
xor
insb
mov
mov
add
dec
or
jp
push
shrl
pop
lods
in
dec
inc
rolb
aam
daa
fnstenv
push
dec
mov
and
dec
add
daa
inc
mov
mov
dec
mov
dec
mov
mov
outsb
stc
inc
push
sbb
mov
jp
xchg
dec
pop
dec
or
push
xchg
mov
mov
pop
mov
xlat
and
and
xor
inc
and
dec
in
in
dec
mov
push
adc
rclb
xor
dec
sub
inc
inc
das
stc
pushf
dec
push
in
dec
arpl
daa
out
xor
int
int3
ror
jo
cmp
add
es
and
dec
sbb
ret
outsl
cmp
dec
mov
data16
dec
adc
xchg
adc
jl
or
js
mov
push
jae
lea
mov
fcomip
in
aas
sbb
adc
test
dec
pushf
out
arpl
mov
cwtl
jl
pop
pop
pop
dec
mov
mov
dec
jnp
insb
push
dec
push
sbb
stos
test
loop
outsb
stos
mov
push
cmpsl
mov
out
mov
and
push
scas
fcom
inc
jl
iret
xor
jle
cmpsb
push
test
leave
outsb
cmp
shl
xchg
jle
outsb
jo,pn
mov
or
sub
outsl
lret
aas
iret
cmp
sbb
mov
mov
dec
inc
jb
loop
or
fmul
pushf
lahf
decb
lahf
pop
sti
inc
idivl
movsl
daa
sbb
adc
xchg
ja
loop
inc
jle
pop
push
add
mov
leave
add
dec
dec
or
lahf
repz
sub
cmp
inc
mov
adc
sub
adc
loopne
dec
add
dec
adc
sbb
mov
sub
lock
jns
sqrtps
inc
mov
mov
pop
aaa
cmp
sub
dec
jb
mov
dec
scas
es
insl
das
xor
mov
dec
sub
cmp
and
in
stc
push
lds
rolb
add
into
test
mov
xchg
jp
jg
dec
es
arpl
inc
xchg
dec
inc
cmp
outsb
push
shll
scas
bound
out
dec
mov
in
cmp
repnz
enter
sbb
xor
push
sarl
shll
in
adc
frstor
xor
cmp
ret
dec
loopne
jbe
ja
mov
cld
dec
loop
das
cmpsl
repnz
adc
dec
push
popa
cmp
gs
mov
mov
mov
imul
or
pop
shr
stos
pop
inc
loope
es
rorb
subb
cld
pop
iret
push
dec
mov
push
mov
push
pop
dec
mov
addr16
daa
scas
dec
xor
ja
adc
dec
or
cmpsb
cmp
lods
add
gs
xor
fstl
dec
es
and
mov
push
pop
push
aad
fs
loop
arpl
cmp
out
push
xchg
cmc
stos
dec
add
sbb
dec
mov
aaa
push
mov
dec
push
mov
popa
dec
push
pushl
inc
xchg
xchg
mov
data16
mov
or
loope
push
push
add
repnz
fnsave
mov
dec
or
add
cmp
dec
out
rorl
dec
dec
push
outsl
sub
xchg
leave
cmc
fisttpl
cli
and
shll
dec
stos
dec
push
pusha
das
xor
inc
adc
mov
push
pop
lahf
mov
dec
mov
dec
xchg
dec
lret
mov
cmp
dec
cli
dec
in
pusha
sbb
int
xor
addb
out
push
jmp
push
sti
dec
xor
lret
xchg
popf
sbb
adc
fs
pop
cmp
sub
jae
xchg
je
sub
and
nop
sub
repnz
dec
inc
inc
jmp
xchg
jle
and
sub
push
pop
int3
daa
movsl
adc
sub
nop
inc
sub
das
push
mov
dec
mov
icebp
nop
repz
in
sub
mov
sar
mov
push
jb
les
lods
in
xchg
sar
lret
fldl
jle
cwtl
shlb
popl
dec
bound
shrl
lahf
fisubrl
ss
mov
mov
insb
roll
cwtl
loope
fildll
pusha
mov
jno
cmp
xor
sub
es
sub
rorl
out
fbld
xor
pop
pop
adc
ret
sub
repz
outsb
dec
cmp
mov
ret
xor
pop
mov
std
test
and
cmpb
fcoms
pusha
xorb
jle
std
or
jl
test
push
xchg
and
or
inc
stos
mov
or
pop
bound
gs
adc
out
test
xlat
dec
push
jbe
stos
cs
loopne
rorb
clc
repz
xchg
jg
mov
gs
leave
int
lcall
lahf
push
inc
jg
iret
add
pusha
push
cmp
orl
push
ss
sub
xor
dec
mov
and
or
fucomi
pop
mov
jge
iret
mov
scas
push
adc
mov
jle
lahf
push
lock
loopne
xchg
or
gs
xchg
push
js
mov
push
cmp
add
scas
jnp
dec
dec
pop
out
aas
or
add
mov
insb
hlt
dec
mov
filds
fnstenv
push
mov
aam
fwait
or
rolb
sbb
nop
dec
jno
filds
and
in
push
sub
inc
mov
xor
pop
inc
hlt
sbb
dec
mov
pop
pop
mov
adc
add
inc
jne
adc
mov
icebp
ficomps
dec
je
jecxz
cli
in
mov
jns
in
aad
faddl
mov
dec
push
dec
dec
push
out
or
lcall
fwait
mov
inc
test
xchg
add
pop
dec
jg
lods
cmp
dec
xchg
rorb
neg
shufps
lods
sbb
xor
movb
dec
push
pop
testb
or
xor
xchg
sahf
cld
xor
xlat
loop
xchg
scas
dec
add
es
aaa
inc
sub
mov
or
movsl
push
mov
movb
adc
pop
test
mov
leave
mov
inc
fs
xor
pusha
icebp
jp
adc
iret
js
mov
cmp
dec
push
mov
dec
cs
mov
sub
xor
into
ja
cs
addr16
ljmp
xor
xchg
lea
inc
and
jns
leave
dec
mov
adc
inc
xchg
addr16
fimull
jecxz
adc
cltd
and
aad
dec
sahf
dec
clc
lods
adc
pop
push
dec
cmp
sbb
icebp
add
orl
sarb
dec
pop
fs
shlb
gs
pop
add
mov
cwtl
cmp
test
mov
dec
fcompl
insb
dec
fxch
fimull
loope
or
aaa
inc
push
insl
dec
dec
movsl
adc
sub
xchg
repz
dec
ret
lea
andb
dec
inc
out
stc
xchg
fisttpl
mov
pop
xchg
push
sub
mov
push
pushf
std
jge
and
dec
outsb
jo
mov
add
pop
dec
push
jb
xchg
test
call
test
dec
pop
loope
inc
push
or
gs
dec
and
loop
dec
out
adc
lret
test
sarl
add
mov
dec
xchg
lahf
pop
sbb
dec
jno
inc
les
pop
call
stos
adc
fimuls
mov
xor
dec
divl
pop
and
fs
test
jl
aad
in
aaa
cmc
push
jl
mov
jb
or
cmp
daa
sbb
pushf
xchg
subl
sarb
repz
jno
xchg
pushf
dec
or
inc
adc
or
dec
out
jl
push
mov
push
rclb
dec
popf
pop
fs
inc
scas
mov
adc
push
ss
loopne
cmp
sub
fildl
dec
cld
ffree
inc
mulb
adc
ljmp
jbe
call
xor
or
arpl
push
notl
sub
mov
push
sahf
dec
pop
ljmp
and
mov
dec
push
lods
dec
dec
ss
mov
into
cltd
out
dec
cmp
cmpsb
jmp
cmpsb
test
stos
push
dec
mov
sbb
mov
inc
jge
push
outsl
loope
ja
in
jb
in
fstl
pop
arpl
pop
daa
inc
stos
pop
cmp
xchg
jae
add
mov
dec
and
pushf
nop
jle
scas
cwtl
inc
and
add
push
pop
imul
sbb
mov
push
lret
and
dec
cmp
mov
pop
inc
sbb
cltd
inc
into
sar
inc
xchg
mov
mov
xor
sti
pop
sub
daa
in
inc
and
mov
setno
aas
and
test
jl
mov
pand
cmp
add
mov
insb
cld
fildl
mov
cld
incl
sbb
xchg
xchg
jl
sti
mov
lock
dec
pusha
mov
mov
mov
xor
fidivrl
and
or
fnstenv
cmp
jnp
mov
cmp
das
or
test
and
inc
cmp
adc
push
pop
rclb
add
stos
aaa
dec
jg
xchg
in
rclb
into
inc
mov
pop
loopne
mov
insb
fdecstp
add
ds
mov
add
xchg
scas
lret
inc
pop
stos
loopne
out
cmpsl
stos
xor
inc
cwtl
es
sti
mov
adc
sbb
outsl
dec
cmp
test
cmp
and
aaa
sub
inc
iret
es
push
dec
in
xor
adc
andb
pushf
xchg
dec
bound
xchg
sub
sti
pop
stos
mov
stos
out
mov
fisubs
shrl
dec
repnz
jnp
add
adc
add
push
push
repz
mov
movswl
icebp
push
inc
push
dec
or
pusha
imul
mov
add
lock
les
mov
bound
ficomps
inc
push
out
adc
jl
push
add
lock
int
mov
sub
in
push
addr16
insb
popf
cmc
cmp
xchg
aaa
pusha
mov
fmull
jne
or
mov
inc
movsl
out
xchg
aaa
cmp
iretw
sub
pop
mov
jo
leave
adc
xchg
insb
jb
dec
cmp
lcall
dec
out
aam
imul
inc
dec
jns
cmp
dec
xchg
add
dec
push
push
std
lret
arpl
dec
lods
nop
and
sub
or
popf
pop
pop
fsubrs
dec
sbb
ljmp
call
inc
xor
test
sub
mov
or
mull
mov
dec
lret
aas
xor
dec
inc
or
into
loope
jo
imul
fildll
inc
mov
dec
or
inc
push
outsl
xor
lahf
lret
mov
lret
mov
xchg
das
cmovle
sub
mov
mov
jge
xchg
inc
sbb
dec
clc
mov
mov
dec
lcall
fldt
mov
mov
adc
inc
jns
pop
les
lea
lret
fidivrl
jnp
xchg
dec
aaa
test
mov
or
add
mov
add
pop
inc
adc
mov
sub
dec
push
out
cmc
mov
mov
or
mov
iret
fbld
fidivs
dec
jo
xchg
dec
ret
dec
mov
enter
in
dec
jl
push
inc
xchg
sbb
sub
insl
mov
lahf
mov
test
pop
xchg
les
sarl
jle
stos
rorb
mov
push
push
push
pop
and
cmp
aaa
inc
iret
xor
sub
ds
xchg
sbb
jl
rcl
dec
test
lock
mov
and
mov
scas
jle
xor
jb
dec
jg
fwait
std
sub
in
loopne
push
test
fimull
loope
stc
inc
inc
nop
mov
ja
pop
negb
inc
inc
cli
dec
pusha
jle
aas
loope
xor
aam
psadbw
js
cmp
scas
stos
xlat
lds
mov
pop
pop
cs
pop
cli
dec
test
inc
xlat
aas
dec
mov
pop
test
pushf
add
outsb
add
dec
xchg
outsb
mov
sub
xchg
mov
imull
xor
cs
les
inc
es
and
cmp
mov
and
arpl
repnz
mov
mov
mov
aaa
jo
cld
std
shlb
sub
jl
push
dec
stos
jg
notl
lods
fcoms
dec
push
jns
xor
mov
add
adc
mov
lret
sub
testl
xor
pop
mov
dec
lods
fadd
xchg
pop
sub
subl
dec
and
push
test
stos
jne
add
fwait
lods
out
xor
or
ss
les
mov
dec
stos
sahf
jecxz
lds
push
lock
jns
dec
adc
add
fwait
pop
in
adc
pop
mov
lds
daa
dec
sbb
and
dec
or
add
jl
push
xchg
mov
xlat
push
out
outsb
inc
dec
hlt
pop
ret
fs
push
adc
cmp
and
push
dec
lret
into
scas
lcall
andl
mov
popa
inc
push
js
sahf
fsubs
fildll
frstor
pop
dec
dec
call
xor
fimuls
out
leave
iret
push
shlb
scas
xchg
popa
cli
leave
int3
js
fsub
or
or
aad
cltd
push
and
scas
xor
jae
rcrb
dec
int3
push
mov
lods
movsl
lock
subb
fisttpl
shr
push
repnz
stos
xor
jo
mov
dec
xchg
add
pop
bnd
mov
dec
or
repz
xchg
mov
adc
bnd
xor
inc
add
dec
call
mov
in
into
sbb
sub
cmp
dec
and
jle
cltd
repz
iret
lods
out
jp
and
jno
sti
je
jae
mov
jecxz
leave
movsl
sub
arpl
lds
scas
jmp
js
xchg
das
pusha
sub
out
fcompl
test
xchg
lcall
sbb
in
cs
sbb
pop
jae
cmp
mov
je
pop
notl
and
push
push
icebp
jle
dec
xor
insb
dec
pusha
sbb
xchg
in
rcrb
pop
push
jle
mov
mov
ss
cmc
mov
daa
test
nop
xlat
mov
adc
cmp
push
sub
lahf
lods
sti
sbb
or
push
pop
cltd
inc
dec
xchg
ljmp
dec
fmull
mov
and
xchg
addr16
decl
into
mov
out
fs
xchg
out
jb
pop
fwait
inc
inc
sbb
and
pop
or
orb
jns
rorl
out
xchg
mov
or
ja
int3
notb
fs
or
ds
inc
in
cmc
pop
faddl
out
cmpsl
imul
adc
xor
rol
cmp
into
ret
rorl
push
movl
jp
push
push
mov
cmp
iret
leave
push
dec
lods
mov
push
mov
lcall
ds
push
outsb
stos
inc
xchg
out
mov
cmp
lret
pop
jae
add
dec
test
pushf
gs
test
push
and
xchg
sub
inc
push
sub
inc
outsb
in
testl
stos
or
popf
or
fdivs
xchg
inc
add
push
push
mov
stc
push
inc
fs
out
sub
dec
push
aaa
add
cld
aas
inc
jmp
xchg
cmc
mov
pop
lahf
outsl
in
cmpsb
dec
sbb
push
mov
xchg
sub
mov
and
inc
and
xchg
dec
outsl
addb
dec
adc
inc
sbb
inc
sub
cwtl
adc
pop
xchg
sbb
sub
ficoms
pusha
out
sub
cs
push
dec
lret
cld
adc
pop
dec
cwtl
push
mov
loope
dec
test
lock
cltd
inc
sub
jge
fiaddl
push
xchg
ficoms
icebp
lea
dec
cmpsb
movsl
add
and
inc
dec
stc
pop
imul
xor
fcompl
sti
xor
sbb
loopne
dec
clc
inc
lock
ljmp
dec
mov
push
cwtl
inc
mov
push
sbb
out
fisubl
jle
dec
movsl
mov
ret
ja
dec
outsb
mov
ficoml
xchg
xor
dec
cmp
or
shll
dec
mov
mov
xor
xlat
cmp
divl
pop
outsb
push
sub
aaa
mov
mov
adc
jb
cmp
addl
popa
in
loopw
xchg
jnp
es
add
sub
adc
loope
cmp
xchg
dec
xor
pop
cltd
loop
pop
jl
mov
inc
mov
shlb
push
jo
or
out
xlat
cmpl
xor
out
int
push
jg
mov
and
outsl
push
pxor
rorl
and
aaa
fidivl
pop
or
mov
or
outsb
cmp
dec
out
cmp
ja
dec
xor
fldt
mov
js
xor
xchg
fidivrs
mov
out
fwait
test
arpl
xchg
jg
into
push
jl
or
ret
sbb
push
and
aam
mov
jecxz
adc
lods
and
jne
ds
rclb
dec
sub
sub
or
xor
fwait
push
or
movb
inc
adc
lea
call
sar
int3
sahf
xor
cmpsl
mov
mov
cli
mov
fisttps
aas
loop
jp
dec
iret
push
nop
xor
test
push
push
add
dec
xchg
cli
fs
pop
inc
dec
aam
ss
orb
sbb
dec
out
mov
jmp
mov
dec
xor
push
aam
lret
pop
lds
mov
andl
inc
xor
dec
fisubrl
jecxz
dec
out
sub
out
push
jl
arpl
and
dec
dec
insb
pop
jp
scas
mov
adc
stos
pop
xor
loope
sbb
pop
xchg
fisttpll
dec
bound
icebp
adc
push
pop
mov
jle
xor
jmp
aam
dec
xor
orl
shlb
scas
shl
adc
mov
insb
test
inc
push
xchg
pop
jb
in
in
mov
idivl
mov
or
es
jle
adcb
testb
inc
aam
push
das
bound
inc
aaa
jl
mov
jle
and
adc
mov
fcmovu
mov
adc
loope
gs
adc
dec
icebp
pop
mov
and
sbb
scas
loope
lahf
pop
pop
cmp
faddp
addr16
xchg
shll
mov
inc
movsb
jge
nop
cmp
and
lret
dec
inc
mov
push
fwait
dec
jne
fxch
loop
inc
repnz
dec
jge
or
sbb
inc
leave
daa
cmp
dec
aad
in
and
out
ret
sti
lock
xlat
xchg
cmp
mov
out
dec
test
inc
xor
pusha
adc
iret
addr16
push
out
dec
xor
jo
and
scas
dec
out
push
lods
and
dec
shll
iret
test
or
movsb
bswap
sti
dec
loop
or
dec
mov
mov
dec
clc
lret
jp
push
inc
int
dec
rcrb
cli
repz
pop
push
dec
out
leave
insl
xlat
rcll
sub
gs
das
inc
push
cmp
xchg
or
dec
test
test
call
loopne
int3
xorl
popf
push
ss
add
repz
fcom
pop
dec
pushf
pop
push
mov
sub
xor
cmp
push
insb
ss
bound
out
pop
flds
pop
inc
adc
fmull
cld
jbe
into
hlt
sbb
sub
fmul
cmp
popa
test
xchg
inc
lods
or
cmc
in
iret
dec
int3
jo
imul
daa
mov
dec
xor
adc
and
nop
inc
jle
or
nop
addb
sub
sbb
les
lahf
insl
cmp
mov
mov
aas
sbb
dec
pushf
les
push
dec
push
and
jne
subb
pop
rorb
jae
fs
xlat
xor
pop
lret
jns
dec
dec
out
jnp
rcrl
dec
xor
or
adc
push
jl
cmp
lahf
mov
pop
mov
shlb
xchg
in
sbb
sub
jge
out
inc
sahf
sub
fwait
mov
dec
dec
mov
add
dec
dec
scas
lock
into
cmp
in
pop
inc
xchg
fisubs
inc
dec
mov
mov
adc
push
inc
pop
enter
lret
pop
dec
repz
jo
mov
in
adc
fnstenv
or
dec
arpl
imul
dec
in
rcrb
cmp
push
sub
dec
cmpsb
lods
pop
rclb
adc
fwait
iret
call
add
push
push
cs
inc
cmp
das
xor
push
cmc
sbb
out
jns
xor
scas
sub
dec
and
outsl
test
outsb
jle
add
cmp
xor
sub
dec
out
sbb
orb
test
or
xlat
fiaddl
xchg
lods
inc
cli
ret
xchg
dec
pop
into
xchg
in
add
lret
mov
adc
jg
stc
push
mov
dec
pop
scas
adc
dec
dec
ret
shlb
lcall
mov
jle
clc
push
dec
js
dec
xor
outsl
jl
dec
call
cmp
es
out
ja
inc
into
outsl
inc
pop
adc
mov
dec
jge
inc
jg
negb
inc
dec
cmp
data16
mov
sahf
mov
dec
enter
inc
add
fimull
xor
negl
sub
sub
sbb
mov
gs
pop
dec
leave
je
imul
enter
mov
xor
mov
or
cmp
xor
add
push
sub
test
xchg
jp
inc
adcl
mov
push
and
dec
xchg
ljmp
test
push
adc
outsb
sub
aaa
lea
jns
pop
scas
cmp
add
dec
into
inc
push
pop
dec
jge
test
and
scas
cmpsl
xor
outsb
sbb
dec
repz
test
push
nop
pop
cmp
outsl
mov
or
js
test
mov
flds
hlt
inc
cs
stos
sbb
xor
dec
xchg
add
addr16
jle
dec
xchg
out
loopne
mov
pusha
mov
jmp
dec
lea
mov
cmp
ficomps
popa
jp
cmp
bound
dec
cmp
add
ja
call
dec
xor
xor
pushf
mov
adc
fnsetpm(287
or
int
xchg
mov
in
push
dec
faddl
lret
jnp
pushf
out
dec
orl
xor
jle
dec
lds
or
cltd
js
enter
emms
dec
aam
outsb
out
pop
dec
aad
mov
in
dec
test
xor
push
dec
mov
dec
dec
push
sbb
fcmovnbe
scas
dec
pop
andl
dec
push
insb
adc
faddl
bound
jmp
or
fisttps
pop
into
js
mov
in
cmp
adc
sbb
and
ror
jg
xor
mov
out
mov
popf
jl
cli
shrl
test
add
fs
js
out
push
pop
or
stos
dec
rcrb
in
dec
jg
lahf
in
test
insb
shlb
push
xchg
pop
adc
pop
xor
cmp
leave
repz
loopne
sub
push
scas
push
ss
stos
adc
add
bound
rolb
das
ljmp
add
bound
fsts
jmp
lahf
mov
adc
jmp
dec
xchg
testl
mov
xchg
mov
xchg
sbb
adc
stc
vhaddps
scas
into
loope
les
jmp
jp
iret
icebp
or
mov
fsubp
ss
push
cmpsb
dec
jg
push
inc
scas
xor
fsubrs
jg
pop
mov
adc
scas
cmp
add
mov
cmc
ja
lods
or
and
fimuls
mov
mov
loop
lcall
int
dec
inc
ljmp
in
in
pop
movsw
jg
xor
nop
jl
rclb
cmp
stos
jo
xor
lock
xchg
lock
insb
arpl
imull
test
lods
data16
cli
xchg
fsub
jb
xchg
or
adc
movsb
into
clc
data16
pop
push
pop
out
lahf
roll
in
adc
fdivl
push
inc
cmp
pop
push
popf
mov
cld
xor
pusha
mov
subl
and
shll
mov
pcmpgtb
sbb
mov
jle
push
aam
add
push
fisttpl
xor
xor
loope
insb
pop
sbbb
in
loopne
fsubrs
adcl
cmp
mov
inc
fmul
xchg
inc
inc
jg
fidivrl
das
xlat
dec
xchg
push
sahf
and
xlat
dec
fs
cmp
out
mov
cmp
push
or
jnp
mov
fidivs
jmp
ds
inc
clc
outsl
sahf
hlt
dec
and
jo
jle
pop
mov
jl
shll
scas
repnz
aas
pusha
fcmovne
bound
push
pop
cmp
adc
popa
pop
jl,pn
test
inc
mov
les
fidivrl
add
xor
mov
outsb
add
aaa
fmul
inc
or
mov
aad
adcl
xlat
pop
dec
push
mov
shlb
test
jo
pop
lods
dec
bound
aaa
xor
cmc
add
sub
xor
xor
hlt
sub
push
in
xor
enter
adc
mov
std
push
lcall
adc
inc
adc
mov
dec
ja
sti
lret
push
and
insb
fsub
xor
insl
and
jg
clc
lahf
into
sub
inc
and
dec
xchg
mov
xchg
or
pop
dec
add
cmp
push
jle
and
lock
outsl
xchg
push
dec
jecxz
cmp
dec
cmpsl
loope
popf
call
sbb
incb
popa
loope
std
push
adc
or
sub
or
mov
fwait
stos
add
js
xchg
shrl
dec
sbb
dec
and
push
fcomps
add
jmp
or
int3
mov
mov
rol
mov
push
push
dec
cmp
or
or
movb
xchg
pop
stc
rorb
dec
dec
pop
scas
jp
scas
lahf
inc
js
mov
mov
fildl
dec
or
sti
inc
popf
sbb
pop
sub
repz
and
dec
or
imul
dec
jbe
dec
xor
mov
dec
sarl
daa
lds
ds
xor
xor
mov
test
orl
ret
push
pop
or
call
fisttpll
dec
movsb
stos
cmp
dec
lea
pop
scas
add
sub
test
sub
cltd
dec
mov
fcoms
dec
repz
pop
ss
dec
fistpl
jne
sub
xor
data16
jbe
scas
adc
cmp
xor
sarb
and
mov
sub
jbe
adc
jge
mov
add
push
iret
lock
repnz
and
mov
lcall
stc
movsl
out
dec
jbe
out
xchg
call
imul
pop
dec
enter
and
lds
mov
dec
cmp
pop
cmpsb
pop
in
jns
iret
bound
adc
fldl
out
mov
daa
dec
out
or
fmuls
xorb
bound
dec
fldt
arpl
rolb
loopne
test
or
add
sbbb
push
arpl
jge
mov
and
stos
mov
or
jnp
sahf
add
ret
jg
cmp
dec
pushf
adc
sbb
stos
dec
mov
adc
dec
andl
jnp
cwtl
jge
dec
xchg
mov
add
dec
adc
in
mull
dec
mov
dec
loope
dec
mov
ficoms
aaa
rcll
mov
jmp
stos
or
jno
cltd
dec
scas
lcall
cs
dec
es
inc
pop
dec
mov
ljmp
dec
jg
inc
int
push
and
mov
sub
jne
dec
jg
fnstenv
js
out
dec
fimuls
cs
inc
sbb
rcrb
setg
mov
sub
rcll
sbb
daa
dec
fimull
adc
nop
out
dec
test
sarl
xchg
loopne
dec
mov
int3
movsl
jge
xchg
in
pop
jnp
xchg
ret
dec
sub
mov
or
in
dec
add
xor
dec
sub
stos
cmpsb
xchg
into
or
push
and
in
xchg
push
lods
and
fs
scas
mov
jl
cmp
sub
jbe
pushf
shrb
es
mov
pop
daa
mov
rorl
test
mov
adc
cmp
xchg
das
inc
cmpsl
fidivs
xor
and
adc
stos
mov
fwait
xchg
fmuls
cmp
adc
xor
ljmp
lock
mov
das
adc
xchg
xchg
xor
movsl
push
jbe
movsb
xlat
sub
inc
add
push
test
jle
adc
xor
clc
cmovns
ret
or
cs
sub
andl
push
xor
fisubs
or
and
and
notb
lock
pop
jle
jns
mov
adc
fdivrs
push
jle
jg
dec
mov
enter
push
pop
repz
dec
fistpll
aaa
mov
pop
and
mov
add
test
daa
dec
shrb
int
movsl
jl
jae
imull
inc
sbbb
lret
pop
rorb
lcall
mov
inc
xor
enter
xchg
movsl
lods
mov
jl
loope
cmp
stos
jecxz
cld
cs
add
fcomps
push
push
mov
out
xor
jl
dec
pop
xlat
fcmove
mov
pusha
jg
lods
pop
pop
ret
fadds
shrl
lret
jl
das
pop
add
xchg
sub
lret
pop
and
mov
cmp
dec
outsl
sub
and
adc
jo
addr16
test
fidivs
cmpsb
das
cltd
popf
mov
and
inc
out
xchg
dec
xchg
push
mov
push
cltd
dec
ret
and
test
es
dec
lock
add
dec
dec
les
jmp
outsl
mov
dec
mov
mov
dec
jl
sbb
ds
push
jae
and
popa
les
jl
push
jg
sub
out
and
pop
out
cmpsb
xchg
adc
adc
daa
in
lods
mov
pop
aas
xor
jle
nopl
sub
sbb
inc
adc
push
dec
js
sbb
stos
push
pop
sub
add
test
insb
scas
idivl
mov
ljmp
sbb
pusha
leave
ficomps
push
ds
push
test
xchg
dec
jge
push
in
cmp
pop
lea
pop
int
xchg
outsl
sti
mov
push
iret
xchg
jl
insb
orps
pusha
add
xchg
ljmp
in
rol
dec
push
sub
xchg
push
mov
sub
dec
nop
mov
test
sbb
cld
pop
fisttpl
xchg
mov
sbb
fucomp
fcomip
mov
roll
lods
adc
add
ret
add
mov
sub
xchg
out
cli
fstl
mov
xor
in
icebp
sbb
bound
and
xor
in
dec
xchg
adc
dec
add
sub
dec
adc
gs
dec
sub
pop
insb
cmp
push
shrb
dec
xor
cld
sub
orl
mov
outsb
rcrb
push
lods
fisubl
sub
adc
lock
xchg
xchg
insl
sbb
cli
leave
jo
dec
mov
call
das
jb
dec
sbb
mov
mov
in
jg
aad
or
pop
sub
dec
lea
dec
dec
insl
pushf
cld
stos
xor
test
dec
pop
add
lret
sub
adc
sbb
fs
and
imul
dec
jb
inc
rcll
lods
or
mov
sub
dec
je
in
pop
xor
fwait
aam
iret
repz
out
dec
stos
testb
dec
cmp
push
mov
push
inc
add
dec
out
dec
dec
fcoml
icebp
dec
mov
aaa
pop
and
fsubrl
inc
jg
pop
inc
jp
jl
mov
psadbw
xor
dec
sti
sbb
or
push
xor
mov
ja
pusha
sub
xor
ret
outsb
inc
jle
push
and
jl
push
inc
loop
hlt
movsb
mov
ja
adc
pusha
fs
hlt
xchg
mov
lods
in
bound
inc
rorb
popf
leave
loop
jl
loopne
jle
xchg
fidivrl
in
pusha
dec
sbb
aad
sahf
shrb
cmc
scas
mov
jg
mull
xchg
scas
or
movsb
mov
sahf
test
and
cmp
pop
xchg
icebp
aas
add
and
loop
sub
fildl
push
cs
fsubr
cmp
sbb
rorb
scas
xor
test
pusha
and
jae
dec
inc
adc
push
repz
and
jo
sbb
or
mov
scas
js
or
push
shlb
jle
hlt
sbb
inc
xchg
lea
das
rolb
pop
lret
gs
dec
subb
into
mov
sbb
pop
in
sub
negb
pop
adc
cmp
fmuls
shr
faddl
scas
cmp
out
push
push
or
add
ret
or
iret
push
mov
into
xchg
cld
add
jg
rcrb
sarl
faddl
inc
imul
pop
jg
data16
addl
rolb
jo
fldl
jo
inc
cmp
gs
xor
mov
xor
movsl
cmp
shll
sbb
popf
inc
sub
stos
push
jp,pt
fisttpll
imul
inc
mov
xchg
aas
sub
sbb
stos
loope
fisubl
lret
push
push
dec
or
sub
push
pop
jne
cmp
push
int3
inc
jg
sahf
or
and
sub
out
subb
in
mov
xor
pop
jg
call
lea
fneni(8087
jle
fld
xor
sub
sbb
dec
pushf
or
xlat
dec
sar
dec
cmp
push
dec
mov
pop
or
pmulhw
xor
add
dec
adc
push
jge
sti
jle
cmp
dec
or
movsb
mov
xor
or
fdivs
data16
orl
mov
mov
add
lahf
pusha
lret
loop
dec
sahf
mov
subl
dec
xor
out
cmp
sub
push
into
negb
pushf
fidivl
mov
les
xor
jo
dec
in
sbb
pop
outsl
pusha
dec
sub
pop
push
xchg
jb
in
add
mov
scas
push
dec
sbb
jge
dec
xor
xchg
dec
mov
sub
xchg
adc
rclb
and
int3
movsbl
jmp
fidivl
ret
or
lods
aad
and
mov
push
pop
js
dec
ja
sbb
sbb
int
iret
mov
pop
dec
jo
or
es
cli
inc
inc
xchg
xor
jno
ret
cmp
sbb
inc
fcmovnbe
cld
lcall
test
js
nop
and
adc
dec
sub
je
loop
sub
mov
fdivp
int3
mov
test
mov
jle
mov
mov
mov
push
and
jge
pop
jle
repnz
mov
fidivrs
repnz
or
ret
sarb
adc
imul
dec
jo
sbb
push
aas
mov
add
jle
test
xchg
scas
add
adc
xchg
out
dec
add
iret
inc
or
lcall
sub
pop
jg
flds
inc
in
lods
outsl
aaa
fwait
test
das
sbb
inc
jle
imul
ds
adc
enter
repz
arpl
pop
mull
jle
mov
je
pop
stc
pop
repnz
clc
mov
xchg
out
scas
and
lods
add
scas
cmp
test
fsubs
jl
jno
and
push
cmp
test
decl
add
inc
and
pop
mov
das
jg
jmp
jle
mov
adc
fisttpl
scas
movsl
jl
hlt
shrb
jle
xchg
stc
sbb
sub
lds
js
xchg
add
lret
imul
call
or
gs
mov
jns
cwtl
mov
cs
cmp
xchg
mov
inc
adc
inc
outsb
fsubl
das
fnstcw
es
mov
pop
push
sub
push
mov
mov
outsl
push
xorb
cmp
push
inc
cmp
js
iret
test
jle
ret
xor
enter
or
push
out
inc
xor
sbb
repnz
inc
jle
repnz
push
bnd
cmpsb
xchg
lahf
pop
pop
rcl
aas
pop
pop
push
xchg
mov
sub
dec
sarb
mov
xchg
stos
dec
stos
fisttpl
pop
jno
or
add
jp
bound
push
aas
popl
mov
cmc
push
cmp
pushf
inc
ret
daa
jo
sti
mov
sahf
mov
mov
push
jo
xchg
pop
fiaddl
fcomps
dec
int3
aad
xchg
push
outsb
cmp
mov
testl
mov
sbb
push
push
pop
inc
mov
jl
adc
xchg
sub
dec
scas
jnp
es
stos
aad
add
notb
je
leave
sbb
aaa
out
std
into
and
mov
dec
or
jecxz
cli
inc
xor
lret
push
loope
xchg
mov
imul
and
jne
sbb
pop
daa
xor
mov
ficomps
jecxz
jb
push
cmp
fs
mov
and
lcall
pop
jmp
jne
dec
int
call
das
dec
push
xchg
jnp
push
sbb
mov
or
dec
cmp
scas
es
pop
push
dec
mov
pop
jmp
out
push
mov
push
insb
ficompl
push
pop
lcall
mov
outsb
jle
jge
in
sbb
lret
es
fmull
imul
enter
insb
push
rol
inc
jl
jne
out
mov
mull
std
push
sbb
mov
lahf
pop
iret
rolb
lock
dec
sbb
cmp
sub
jg
dec
testl
dec
sbb
and
sub
addr16
int
xor
cmp
imul
test
cmp
repz
mov
leave
ljmp
inc
ja
adc
sbb
xchg
jno
pop
dec
fs
dec
add
je
add
add
mov
or
ja
fwait
jnp
and
fsubl
push
in
cltd
pop
inc
adc
call
out
inc
dec
insl
add
insb
je
mov
ja
sub
mov
mov
shll
cmpsb
jg
dec
loopne
lock
jp
xchg
cwtl
loop
dec
dec
ret
out
aad
mov
iret
inc
pop
dec
jbe
popa
jns
push
pop
int
into
aaa
into
mov
popf
dec
adc
inc
fs
pop
jb
push
mov
into
mov
fsin
out
dec
sub
and
or
dec
inc
cld
mov
push
sub
lock
mov
mov
popa
cmp
mov
dec
ja
fcompl
dec
mov
dec
outsl
nop
dec
xlat
cmp
inc
popa
sub
adc
jle
cmp
outsl
dec
jb
out
popf
imul
cmpxchg
and
andl
lods
ljmp
dec
or
push
fwait
lret
cmp
jle
or
not
sbb
sub
sbb
mov
mov
or
jbe
in
pushf
sub
fstps
mov
push
xchg
and
dec
mov
dec
and
adc
dec
jge
gs
jo
push
fisttps
cmp
repnz
ret
sti
out
adc
xor
jo
inc
ja
fs
cs
xor
xlat
dec
and
pop
es
mov
aaa
popf
jmp
pop
xchg
dec
jle
cld
mov
dec
jne
sbb
and
dec
mov
cli
or
jle
sbb
adc
fs
pop
xchg
jecxz
sbb
pop
test
out
pusha
or
push
xchg
pop
mov
stos
pop
push
movsb
insl
adc
cmp
test
mov
loope
sahf
dec
stc
and
shl
xchg
ljmp
nop
mov
add
insb
adc
jecxz
xor
xchg
xchg
jg
pop
rcrl
add
and
push
repnz
push
lret
sarb
push
popl
pop
inc
pop
xchg
fcoml
nop
call
fbld
lods
into
aaa
dec
adc
dec
xor
clc
loop
jle
movsb
dec
lret
negb
stos
dec
cmp
jbe
jl
pop
xchg
sub
push
adc
mov
gs
aad
sub
sbb
dec
cmp
dec
add
popf
enter
gs
scas
xor
sbb
rorb
cltd
push
adc
add
mov
cmp
and
push
cltd
fisubs
pop
cmp
cmp
idiv
fildll
jle
ss
cmp
push
xor
sahf
movsb
cwtl
fdivrl
pop
fnstcw
call
mov
adc
out
ljmp
pop
inc
movsl
fs
in
es
lcall
mov
add
in
hlt
out
cmp
jmp
stos
fs
jg
les
jge
sarb
adc
push
sbb
stos
hlt
cli
jmp
test
adc
rolb
cmp
clc
push
mov
stos
out
pop
xchg
movsb
dec
jl
mov
mov
cmp
data16
ficompl
jle
lahf
movb
cwtl
xor
pop
push
push
arpl
cmp
jle
sub
sbb
push
retw
icebp
or
outsb
dec
dec
xchg
popa
lret
jg
inc
mov
push
or
cwtl
stos
pop
push
mov
xchg
adc
imulb
inc
jl
mov
fwait
pop
pop
lret
sbb
mov
clc
mov
dec
loope
ret
cli
and
fcmove
scas
cmp
jg
scas
scas
xchg
or
loope
sti
jl
mov
add
aaa
pop
lretw
mov
mov
and
jo
dec
adc
jp
or
dec
inc
stc
loopne
mov
cltd
sub
daa
mov
test
loop
pop
jnp
and
xchg
dec
les
aas
cmpsb
mov
in
jp
dec
hlt
or
ja
inc
loopne
pop
out
cmp
mov
ljmp
sbb
enter
jo
jb
fsts
cmpb
orb
test
jl
dec
aad
cli
dec
push
icebp
int
jg
mov
jae
in
enter
pop
jge
mov
arpl
push
das
lods
mov
dec
stc
aam
pop
sub
pop
jmp
rcll
mov
mov
add
inc
insl
lock
push
out
rcl
dec
subl
xchg
insl
xchg
fldenv
mov
or
cld
push
pop
mov
mov
push
xor
sub
dec
mov
in
out
mov
and
mov
push
inc
dec
push
out
data16
dec
and
sbb
and
push
jne
push
xchg
xor
dec
test
aaa
cmpsb
pop
mov
add
dec
or
jl
addb
loope
scas
out
dec
xor
mov
int
andb
shr
in
dec
gs
cltd
jns
incb
cmpb
cmp
inc
jecxz
push
shlb
mov
outsb
inc
cmp
dec
inc
mov
leave
iret
cmp
test
push
orl
fdivl
dec
mov
mov
pop
ret
dec
int3
subl
dec
imul
ljmp
mov
out
jp
pop
sbb
adc
mov
shrl
pop
ja
cmp
sti
add
popa
test
adc
stos
divb
dec
lret
outsb
int
jle
movb
ljmp
fs
movsl
add
xor
jns
ret
icebp
movaps
fnstcw
cmp
fstpt
lods
pusha
das
mov
inc
cmc
dec
nop
clc
clc
mov
dec
sub
and
scas
and
jl
mov
sub
xor
ss
inc
pop
cmp
js
fdivl
test
je
adc
push
decl
add
fnstenv
iret
and
popf
jle
pop
dec
add
test
sbb
xchg
mov
mov
cld
push
shrb
callw
adcb
jge
ss
dec
rcrl
push
or
loopne
dec
loop
jle
int
cwtl
pop
dec
xchg
pop
dec
dec
xchg
aas
sub
mov
push
adc
adc
aas
sbb
cmpsb
xchg
push
js
mov
dec
mov
pop
lods
adc
pop
das
jmp
dec
out
jo
insb
sbb
pop
in
in
repz
dec
repnz
mov
rolb
rcl
mov
sbb
mov
scas
stc
lock
test
arpl
out
dec
pop
or
pop
enter
iret
mov
call
sbb
stos
adc
cmpsb
jecxz
imul
mov
dec
or
in
stc
into
dec
test
outsl
inc
in
data16
sahf
dec
mov
std
push
push
dec
pop
sub
bound
xor
js
or
outsl
xor
sub
xlat
and
sub
ds
pop
dec
icebp
push
dec
in
pusha
mov
fst
insb
pop
mov
stos
jle
xchg
push
rorb
jge
cmpb
cmc
js
nop
sbb
cs
cmp
dec
out
ja
dec
inc
cmpsl
sbb
rolb
outsb
dec
xor
leave
xor
dec
dec
sub
adc
push
vpsllq
in
movb
rclb
dec
xchg
jne
jge
pop
lea
ret
push
mov
insl
xchg
cmpsl
mov
push
xor
leave
cmp
lds
pop
jb
sarl
dec
sbb
xchg
push
mov
jmp
mov
nop
xor
adc
iret
or
sub
rcl
adcl
int3
aaa
and
add
into
sub
test
dec
fdivs
iret
mov
imul
mov
add
dec
pusha
mov
call
pop
push
dec
inc
test
sub
mov
dec
push
repz
inc
push
mov
xlat
add
pop
pop
mov
dec
test
addr16
movl
lods
mov
fwait
dec
enter
mov
push
jbe
mov
jnp
lret
mov
jae
mov
rorl
movsl
outsb
psubq
jmp
and
stos
js
scas
dec
test
nop
mov
xchg
mov
xlat
sarl
inc
out
gs
xchg
lret
jnp
sbb
popf
es
pop
xor
cltd
loop
push
test
std
mov
mov
jmp
sub
das
std
and
addb
sub
mov
jg
jo
or
xchg
xchg
pop
pop
add
aad
xor
ret
dec
mov
dec
mov
push
dec
sbb
mov
pop
pop
or
xchg
hlt
pop
sbb
movsl
dec
mov
xchg
mov
cmp
dec
jge
pop
movsb
bound
dec
arpl
out
pop
mov
repz
or
test
mov
enter
decl
cld
shll
sub
dec
rclb
mov
mov
add
pop
mov
lahf
sbb
dec
imul
dec
mov
je
mov
adc
imul
dec
push
push
stos
shlb
mov
push
and
dec
sbb
add
xor
shll
cmc
or
xor
pop
shr
fs
or
mov
arpl
dec
daa
lds
rorb
xor
nop
xor
dec
and
outsl
jg
outsb
inc
pop
es
sub
insl
loope
inc
scas
sahf
cmp
lcall
mov
sti
mov
fnstcw
sbb
or
dec
subl
push
jne
dec
daa
push
jnp
sub
dec
mov
decl
popa
cli
push
mov
popf
mov
jle
xlat
dec
loope
in
xchg
xor
mov
xor
clc
bound
or
cmp
dec
fucomip
cmp
loope
clc
xchg
cld
add
enter
loop
mov
add
rorl
fcmovne
in
fsubrl
push
dec
push
pop
out
repz
aad
jbe
dec
xchg
push
insl
dec
dec
push
dec
aam
dec
pop
arpl
fs
addr16
dec
int
imul
dec
pop
pop
jne
adc
cs
xchg
cmp
cs
andl
inc
es
push
jmp
scas
add
int
sub
call
sbb
dec
sbb
jg
loop
sub
mov
jne
aaa
mov
push
lods
cmp
into
aad
mov
push
push
std
xorl
jbe
push
dec
arpl
jb
rclb
sub
dec
jl
or
arpl
mov
add
iret
dec
xchg
lea
int
adc
dec
test
in
inc
xor
cmp
jg
out
dec
mov
push
push
addr16
dec
ds
subl
jnp
pop
fdivrs
into
ja
and
dec
inc
lea
das
sarl
jnp
mov
mov
setns
mov
xor
cmp
addr16
jnp
inc
dec
shll
add
inc
sbb
dec
push
lret
dec
aam
mov
rcrb
push
push
jecxz
pop
adc
insl
push
xor
inc
mov
arpl
rorl
std
jbe
rcr
sub
dec
cmpsl
adc
push
pop
mov
mov
mov
dec
aas
cmpl
test
fiadds
sub
push
mov
jmp
cli
popf
repz
inc
ds
jns
out
push
dec
ficoml
dec
pop
push
test
xor
lds
pop
xchg
stc
mov
andb
dec
lcall
ret
and
orb
add
xchg
jmp
cmp
inc
pusha
es
in
aaa
sbb
fsin
lahf
sti
xchg
push
aam
xchg
sbb
sub
sub
push
jns
sub
fstps
jg
fdivrl
movsl
dec
pop
outsb
enter
je
inc
filds
addr16
dec
push
adc
imul
sub
mov
xor
mov
dec
lods
gs
enter
cmpsl
dec
push
adcb
dec
int3
inc
pop
aaa
adc
int
dec
push
test
mov
dec
sti
fsubl
rcrb
cld
pop
and
push
adc
dec
aaa
mov
and
inc
xor
stos
jecxz
push
int
push
repnz
mov
pop
cmp
cmp
dec
pop
lds
dec
int3
mov
xchg
xchg
xor
dec
divb
sub
mov
es
rclb
std
dec
mov
xor
lret
cmp
mov
mov
adc
mov
add
imul
movsb
mov
jmp
iret
orl
lock
mov
push
jg
adc
mov
pop
sbb
flds
in
mov
mov
dec
mov
inc
xor
mov
pop
les
add
adc
sahf
pop
or
dec
mov
mov
jmp
outsl
lods
mov
push
inc
daa
sbb
dec
inc
mov
push
mov
xchg
cld
dec
add
xchg
out
sbb
pushf
inc
pusha
mov
aam
rclb
pop
jge
das
xchg
aam
icebp
das
jb
lods
andl
push
and
xlat
test
bnd
mov
or
push
lods
push
and
pop
adc
add
movsb
xchg
sub
and
dec
mov
outsl
mov
mov
mov
xchg
testb
lret
aaa
je
das
dec
inc
push
in
xor
xor
push
jb
dec
jg
jns
xchg
adc
inc
sarl
mov
add
rclb
lods
or
scas
icebp
jp
mov
inc
in
loopne
movaps
hlt
and
mov
dec
mov
xor
push
xchg
cltd
push
insb
pop
fs
mov
rcrb
icebp
stos
ret
mov
push
jl
jbe
push
jo
aaa
jae
push
xor
in
nop
cmp
hlt
stos
into
add
std
push
and
test
addb
aaa
fmuls
cmp
in
addr16
pusha
sub
lret
dec
das
out
jle
int
dec
repz
jl
adc
mov
mov
out
mov
xchg
in
sbb
push
aaa
and
sti
pop
xchg
repz
cld
lock
pop
jmp
sub
movsl
mov
xorb
inc
repnz
xchg
ds
shl
in
into
subl
je
add
decl
fsubs
in
jecxz
rolb
fwait
jbe,pn
pop
in
inc
nop
push
mov
outsl
imul
xchg
fwait
and
mov
bswap
xor
enter
xchg
push
lods
ret
aas
in
mov
adc
popa
arpl
push
lret
stos
mov
push
cli
jg
ficompl
cmpsl
icebp
or
and
mov
mov
mov
in
aas
mov
outsl
cmp
in
mov
dec
lds
cltd
xlat
xchg
cmp
shlb
mov
xor
arpl
dec
rcrb
rolb
adc
pop
lahf
pop
or
enter
mov
adc
js
jle
jns
xchg
cmc
xchg
dec
and
scas
jnp
insl
cltd
test
adc
rorl
cmp
clc
out
jne
mov
and
add
es
int3
mov
add
fisubl
dec
dec
out
popa
xchg
stos
inc
push
dec
pushl
test
xor
flds
push
jo
mov
mov
jbe
dec
sbb
jle
in
inc
mov
xor
imul
mov
xchg
adc
jge
dec
stc
sub
xchg
leave
pusha
int
aad
enter
mov
dec
rorl
cmp
test
sbb
xor
cli
xlat
ljmp
lret
mov
dec
lock
push
sbb
call
dec
pop
and
addb
push
jg
dec
insl
jl
loop
fisubrs
and
roll
xor
dec
pop
mov
dec
and
pop
pop
jp
fmuls
mov
gs
xor
fs
push
dec
cmp
xor
push
dec
xor
sahf
sbb
mov
jg
mov
jae
pop
clc
cmp
dec
push
into
push
std
lea
pop
lds
into
dec
aaa
jae
adc
mov
dec
mov
jno
mov
and
mov
dec
fsubrs
and
pop
mov
jo
jnp
scas
dec
dec
add
aam
ljmp
orb
dec
out
pop
repnz
ret
cltd
inc
push
stos
mov
dec
cld
xchg
mov
frstpm(287
lea
repnz
dec
cmp
mov
rorb
and
into
xor
imul
mov
daa
cld
sbb
in
mov
out
outsl
pop
mov
subl
mov
arpl
sahf
gs
dec
mov
dec
pushf
filds
pop
movsl
xchg
pusha
dec
adcb
pop
orl
pop
xor
dec
mov
insl
jno
inc
jmp
jecxz
pop
test
mov
xor
ret
in
dec
jecxz
adc
cmp
pop
xor
lock
inc
sbb
movswl
ret
hlt
dec
push
outsb
aas
insb
adc
push
xchg
dec
or
int
and
sti
addr16
adc
push
scas
xchg
out
dec
cs
dec
mov
cli
or
or
fs
xor
mov
rcrl
sbb
mov
ficoms
loop
xor
fmuls
nop
je
enter
cmc
sub
aaa
xlat
inc
xlat
jl
add
push
xchg
adc
push
insb
std
iret
push
pop
ljmp
xor
lods
cltd
jae
test
clc
out
or
xchg
frstor
pop
les
mov
pop
sahf
in
pop
iret
push
jg
or
mov
dec
push
je
pop
jle
in
orl
push
out
das
adc
imul
pop
pop
cmp
pop
popa
cmp
xchg
mov
stos
or
in
ljmp
aam
add
and
inc
jl
sbb
and
cmp
sbb
rorb
scas
rcr
mov
pop
or
fs
in
enter
jns
push
push
dec
mov
jo
fisttpll
inc
push
dec
jl
sub
cltd
sarl
push
lock
sbb
mov
shlb
outsb
aaa
pop
jl
movsl
jnp
out
es
mov
cmp
and
jg
lret
inc
mov
xor
cmp
fistps
pop
xchg
cmp
das
xchg
sub
push
lods
cwtl
imull
adcb
jge
movsb
jb
ds
dec
cmp
movsl
fistps
rep
xchg
mov
std
dec
lods
jl
mov
jle
mov
adc
jg
cmp
jo
push
cs
mov
rolb
xchg
mov
hlt
pop
dec
leave
jg
insb
pop
ds
mov
jl
mov
cld
sbb
or
dec
push
jle
jae
scas
dec
std
mov
leave
ljmp
sbb
pop
add
dec
cmp
dec
or
inc
fisttpl
push
mov
arpl
mov
iret
fimuls
xor
mov
xchg
stc
pop
sbb
xor
fldt
jecxz
out
cmp
inc
or
mulb
dec
mov
jecxz
mov
mov
outsl
movsb
pop
into
dec
mov
or
xchg
dec
ret
movsl
pop
ljmp
mov
mov
ss
pop
test
inc
dec
adc
data16
inc
pop
dec
push
mov
addr16
scas
or
fs
shlb
jl
pop
dec
mov
pop
xchg
aas
mov
fwait
insb
mov
sbb
int3
jle
arpl
mov
cmp
dec
nop
push
rcl
rcl
cmp
cli
mov
inc
mov
xchg
jle
lods
pop
xchg
into
cli
rcrl
or
jle
mov
mov
jl
in
in
ret
sbb
in
sbb
rcl
mov
out
jg
cmp
int
sbb
hlt
push
in
shrb
pop
push
jg
sub
or
cld
pop
dec
xchg
cmpb
xchg
sub
leave
inc
jo
insb
jl
pop
lret
and
idivl
ja
push
daa
test
dec
shll
fiadds
enter
mov
into
inc
mov
jne
jbe
out
mov
iret
inc
lfs
mov
dec
jg
dec
jl
test
ds
lahf
cltd
adc
das
jle
daa
inc
stos
push
lods
fisubs
in
cmp
push
mov
inc
sbb
test
and
xchg
ja
xchg
ficompl
push
xor
add
stos
pop
pop
aaa
je
sbb
jecxz
scas
add
out
lods
pop
xlat
push
mov
insb
jle
negb
inc
jae
xchg
fisubrs
je
lret
dec
mov
jl
xchg
test
dec
xchg
loopne
or
sti
add
add
cmpsb
popf
mov
lcall
mov
movsl
push
push
movl
lret
mov
sub
mov
inc
iret
shlb
icebp
les
test
xchg
add
push
loop,pn
pop
adc
movsl
add
pop
add
maskmovq
testl
ret
mov
push
fs
repz
mov
fidivrs
jbe
into
pop
in
push
jmp
sahf
es
addr16
push
lahf
sub
xchg
jle
rorb
or
dec
dec
mov
lret
leave
popf
pop
inc
shrb
outsl
xchg
adc
jp
mov
xchg
cld
jo
or
cs
sbb
mov
mov
inc
arpl
enter
mov
push
test
push
adc
jg
dec
push
ja
fimuls
xor
cmp
push
cmp
loop
sbb
pop
icebp
cmp
mov
bound
sub
cmp
stos
push
inc
jg
jmp
test
add
mov
push
adc
paddusw
sbb
pop
and
or
and
dec
mov
lods
xor
jl
or
jmp
lret
or
inc
cld
test
push
insb
cmp
push
mov
lock
ret
and
dec
xchg
mov
jb
cmp
xchg
adc
jle
icebp
push
mov
push
adc
push
xor
ss
sbb
dec
divl
cmp
or
mov
sub
int
xchg
cmpsl
mov
aad
fmuls
xchg
fidivrl
aad
ret
and
ljmp
dec
dec
pop
cmp
xchg
cs
cmp
dec
add
ficomps
inc
jae
push
push
stos
in
imul
jmp
popa
das
outsl
cs
jecxz
dec
insb
dec
or
cmp
stc
dec
ret
addr16
fists
jb
arpl
js
cs
mov
add
test
xchg
jae
sub
ds
ja
in
jle
movsb
dec
aas
aaa
or
insb
daa
pop
or
pop
mov
and
insb
mov
cmpsl
push
push
sub
gs
mov
icebp
ds
dec
test
pop
jl
sub
sub
ds
mov
mov
out
test
cmp
or
xlat
mov
pusha
xor
sti
mov
lea
xchg
jne
jle
out
mov
or
jl
sub
inc
jb
and
bound
mov
sub
movsl
xchg
jo
push
add
lret
sbb
addr16
pop
pusha
les
sbb
add
jne
jno
in
jl
insl
inc
jbe
add
push
inc
inc
pop
sarb
pop
scas
jmp
push
cmp
out
es
and
in
sub
lcall
xor
and
push
sub
rcrl
mov
or
decl
fistl
inc
fidivl
add
stos
sub
or
scas
mov
add
insl
mov
jl
xor
mov
mov
sub
cmp
pop
push
mov
into
int3
jg
out
mov
xchg
xchg
sub
js
in
adc
icebp
xchg
das
inc
shrb
xchg
jg
aaa
jl
lods
fisubs
jle,pn
add
fwait
shl
jge
pop
out
mov
jle
pop
in
dec
ss
mov
push
lods
adc
add
add
jl
push
inc
in
daa
adc
mov
out
dec
ss
out
dec
mov
xorb
int3
cmp
shrl
xor
pop
je
fs
pop
sub
jg
inc
ret
cmp
xor
jp
lock
jb
daa
test
ljmp
push
aas
jae
test
fwait
jl
mov
adc
push
mov
mov
imul
int
cmp
addr16
movsb
sarb
stc
loop
xor
xchg
daa
push
pop
cmc
sub
iret
movsb
sub
lcall
xchg
mov
std
orb
fistl
push
mov
jl
jnp
mov
clc
push
ds
mov
lods
cmovg
jno
push
leave
ljmp
jmp
cmp
in
cltd
inc
and
xor
inc
sarl
es
adc
pop
xchg
iret
add
dec
mov
cmp
xchg
lea
clc
dec
jg
jb
dec
pop
cltd
lock
cmpsb
fdivrs
mov
push
jns
add
mov
pop
mov
pop
iret
ds
fimull
jne
lret
enter
scas
insl
lcall
loopne
jle
cmp
shlb
sbb
mov
nop
rolb
mov
pushf
jle
push
scas
add
sub
xchg
int
push
jmp
mov
inc
arpl
loope
mov
push
dec
dec
orb
shrl
adc
jmp
and
pop
inc
sti
xor
sub
hlt
dec
cmc
cld
dec
lret
ja
cmp
dec
cmp
jo,pn
mov
mov
pop
inc
push
pop
xor
add
jle
rorl
mov
jnp
movsl
add
cmp
repz
cltd
adc
sbb
mov
xor
jg
sti
es
out
ret
xor
mov
adc
pop
fadds
mov
cwtl
and
mov
xchg
stos
dec
aaa
repnz
jle
jae
or
hlt
jne
fildl
xchg
adc
cmp
and
push
cld
mov
add
jb
in
dec
sbb
mov
mov
push
jno
inc
and
dec
cmp
mov
xchg
jle
mov
pop
cmpsb
add
leave
shl
inc
cmpsl
dec
dec
fisubs
test
jo
and
outsb
scas
outsl
push
aad
jns
mov
mov
dec
lock
cmpl
outsl
stos
insl
xchg
into
les
test
dec
lods
push
loopne
lea
mov
inc
cmp
adc
sbb
outsl
ds
xchg
iret
mov
jp
data16
push
xchg
lds
inc
cs
sti
inc
je
pop
cli
and
repnz
int3
mov
and
iret
frstor
lock
rorl
add
stos
jns
mov
pop
mov
dec
sub
mov
jge
fldenv
push
or
dec
add
dec
cmp
mov
dec
add
lods
dec
imul
mov
xlat
call
xor
xchg
movsl
mov
sbb
push
and
and
popa
mov
dec
lods
dec
sbb
cmp
cmp
sbb
xchg
inc
imull
add
xor
mov
testb
dec
mov
shll
jge
icebp
icebp
stos
adc
lret
and
into
daa
fwait
mov
cltd
mov
adc
mov
and
jle
push
rcr
mov
push
sbb
sarl
into
mov
sti
and
mov
xchg
mov
int3
push
cmpxchg
hlt
xor
in
fs
pop
test
pusha
and
xchg
jg
into
push
adc
cs
pusha
push
dec
int
dec
mov
sarb
jmp
sbb
push
inc
xlat
js
inc
mov
out
adc
fs
je
inc
dec
scas
dec
sub
sbb
loopne
push
dec
sbb
shrl
dec
push
sub
popa
or
dec
sbb
jmp
enter
jno
adc
mov
adc
lret
cltd
shrl
pop
dec
mov
mov
adc
jl
ljmp
int3
dec
outsb
aad
das
dec
rcl
aas
icebp
mov
in
in
dec
cmp
movsb
rcr
pop
cli
iret
pop
daa
jl
sbb
es
sbb
or
push
mov
adc
roll
addb
xor
aaa
push
push
and
jmp
iret
fistps
out
pop
xchg
dec
dec
pop
push
fwait
pop
mov
xchg
or
jl
adc
push
xor
sbb
fcomip
mov
dec
sub
repnz
mov
lock
ds
sub
cmp
push
add
jl
sahf
push
cld
push
call
mov
and
stos
mov
jno
fwait
push
pop
mov
inc
lahf
movsl
xor
mov
mov
nop
leave
mov
xchg
test
mov
orb
adc
das
jb
sti
sbb
push
rep
jge,pt
xlat
fcoms
xchg
call
mov
mov
jo
xchg
andl
repz
sbb
insl
mov
add
sub
sbb
pop
iret
aaa
jl
sub
arpl
pop
fisubrl
test
mov
out
stos
in
lods
xchg
inc
dec
mov
mov
and
mov
rolb
dec
fistpll
test
adc
popa
scas
dec
in
cmpsl
sbb
dec
sarb
sbb
push
test
insl
idivb
xchg
jecxz
or
mov
xor
mov
pop
aaa
scas
dec
push
icebp
imul
movsb
sub
xor
jne
int3
into
xorl
stc
mov
jl
mov
jp
dec
xchg
in
pop
dec
pop
imulb
jo
cmc
imul
mov
into
dec
jg
push
test
dec
int3
andl
push
xchg
std
xchg
mov
dec
mov
fs
stos
aam
cmc
dec
push
jge
cltd
mov
jg
fstpl
adc
jmp
xlat
out
or
push
lahf
jno
dec
test
inc
insb
rdpmc
pop
dec
push
jg
sbb
pop
movsl
xchg
add
mov
out
cmp
shll
les
cmp
outsb
xor
les
mov
sahf
cmp
push
inc
mov
into
rcrb
sarl
lcall
dec
jbe
mov
jg
inc
or
cs
add
lcall
cmp
lock
adc
add
push
inc
inc
mov
jl
jbe
add
int3
nop
mov
push
xchg
mov
dec
adc
sbb
xor
es
jg
cmp
ret
adc
scas
out
leave
rcll
adc
sbb
bound
xchg
iret
movsl
loopne
scas
cmp
jns
dec
mov
pop
imul
adc
rorb
andb
mov
pop
xchg
aad
mov
add
xchg
adc
mov
es
jae
pushf
mov
ficomps
jp
icebp
push
ljmp
mov
xchg
xlat
cmp
mov
int3
jmp
in
flds
test
add
insl
adcl
add
out
pop
mov
inc
dec
sbb
push
jne
dec
fldenv
loop
popa
mov
ret
push
lret
push
leave
dec
insl
jae
pop
out
outsl
inc
test
out
in
or
dec
push
xlat
dec
dec
fcoml
push
rorl
mov
fadd
dec
setle
out
aam
fwait
mov
mov
dec
adc
sbb
or
test
inc
dec
dec
jb
push
dec
xchg
iret
fidivrl
jle
jo
dec
das
jno
or
daa
or
xor
sbb
push
loope
jp
idivl
push
push
lcall
mov
dec
dec
pop
sahf
ucomiss
adc
inc
addr16
mov
lods
dec
dec
std
jle
dec
xor
mov
arpl
dec
add
xchg
sbb
aam
push
test
ja
mov
out
sar
xchg
xor
xchg
mov
dec
push
mov
and
cmp
ror
mov
pop
sbbl
mov
insl
push
dec
push
je
aad
adc
xchg
adc
aam
arpl
dec
jnp
loop
jae
dec
popf
dec
dec
xchg
in
data16
lea
jnp
inc
xor
dec
ja
aad
fst
roll
push
sbb
push
leave
test
pop
jle
and
dec
fbld
movsw
imulb
dec
adc
sub
push
dec
ljmp
jae
mov
xchg
dec
dec
jg
cmc
cwtl
out
fidivs
mov
in
sbb
jl
inc
fists
and
inc
daa
movsb
sub
add
mov
popa
popf
push
and
pop
cmpsb
mov
std
ss
jg
js
call
mov
pop
dec
xchg
pusha
scas
outsl
mov
xor
lahf
push
popa
pop
xchg
adc
arpl
aaa
sarb
mov
arpl
adc
sub
cmpsl
push
mov
cmp
rorb
in
lcall
dec
sub
mov
dec
xchg
jnp
push
dec
cmp
nop
out
movsl
stos
je
xor
inc
cs
add
in
xchg
popa
pop
inc
clc
jp
imul
int3
cmovle
pop
insb
sbb
jg
scas
dec
push
rorb
aas
test
sub
push
je
stos
xor
adc
pop
testl
ret
clc
pop
inc
fldl
add
iret
jl
pop
imul
mov
mov
or
into
fistl
pop
inc
push
pop
das
mov
mov
mov
leave
dec
popf
add
hlt
mov
dec
xorb
cmp
cld
pusha
and
dec
add
arpl
xor
imulb
popl
es
xor
sbb
call
jl
jb
fmul
jg
in
je
xor
pop
pop
xchg
add
jmp
lahf
sub
out
mov
enter
xchg
jnp
fs
fs
repz
cwtl
std
pop
rclb
xor
dec
insl
mov
xchg
fwait
dec
out
cld
fstps
out
mov
jg
adc
mov
sahf
mov
inc
sub
imul
mov
pop
movsl
and
dec
xor
jns
fnstcw
ss
cmp
cwtl
inc
sub
out
aas
fcomi
mov
add
or
push
push
jmp
jns
fisubrs
loop
cmp
add
jmp
mov
int
jl
fsincos
data16
lcall
popf
stos
cmp
jle
cltd
icebp
lret
nop
or
mov
stc
xor
mov
in
xchg
lea
jae
decb
adc
xchg
fs
stos
push
push
mov
or
xchg
jl
mov
xor
mov
jo
sub
jmp
push
data16
dec
loop
lock
adc
sbb
mov
or
nop
ret
xchg
movlps
sub
jnp
dec
jg
xchg
inc
testl
jle
sub
arpl
dec
out
sbb
dec
js
push
cmp
in
popa
inc
push
or
inc
xchg
cmpsl
jl
dec
adc
and
cs
outsb
lahf
out
cmp
add
fwait
mov
js
dec
and
pop
cmp
lret
dec
insb
dec
jo
and
fs
out
push
dec
out
scas
test
push
fwait
add
push
loope
pop
pop
pop
jle
out
jl
fwait
test
das
pop
push
mov
sbb
jg
mull
cmp
push
pop
fstl
ljmp
mov
or
pusha
fs
adc
ds
inc
jge
jno
clc
stos
insl
scas
aaa
sahf
sub
pop
xchg
dec
cmc
clc
popf
iret
jl
mov
icebp
and
jle
mov
cmpsb
test
outsb
xor
cmc
sbb
arpl
dec
sbb
stos
xor
dec
jae
sub
and
loope
bound
cmp
divl
xor
sub
jecxz
ficoml
mov
scas
int
cltd
cmp
cmp
pop
fisubrl
jle
dec
add
out
jb
cmpsl
or
int3
shll
jbe
add
sub
mov
xlat
xor
fstpl
mov
cmp
mov
jl
xor
dec
jns
or
adc
push
mov
and
gs
sahf
cwtl
add
cmc
fistps
and
jbe
insl
pop
jecxz
jmp
stos
ror
mov
mov
mov
push
fld1
xorb
or
or
xchg
outsb
lock
xchg
in
fs
pop
sub
push
mov
jge
pop
into
jo
mov
movsl
stc
and
repnz
push
in
mov
sti
out
into
inc
push
outsl
xor
pop
dec
inc
xor
rorb
scas
jno
mov
je
xor
inc
dec
and
dec
inc
cmpsb
in
enter
mov
fmull
push
pop
cld
and
subl
adc
aad
and
fwait
pop
idivb
adc
cmp
xlat
xchg
cmp
jbe
sub
cmp
in
push
sub
out
adc
insb
cmc
jno
xchg
inc
inc
inc
test
push
mov
push
aas
xchg
jl
cmp
test
ficomps
xchg
jle
sbb
sbb
inc
push
push
jg
or
cmpsl
dec
fisubrl
mov
xor
enter
dec
inc
and
inc
pop
pop
lds
dec
sbb
nop
pop
aam
rorl
call
cmovle
mov
dec
or
enter
in
loop
dec
mov
push
mov
dec
int3
mov
inc
das
dec
cld
lret
sbb
mov
sbb
push
dec
inc
cmp
sub
cmp
add
cmp
ret
pop
mov
fs
dec
xchg
ljmp
sbb
sahf
sbb
mov
dec
clc
and
pop
hlt
push
mov
dec
in
cmpl
inc
dec
adc
pop
mov
mov
dec
imul
pop
sti
adc
fldl
movsl
dec
jae
into
cmp
cltd
es
add
das
aad
js
xor
jg
mov
jae
sahf
iret
jle
and
inc
jl
inc
dec
xchg
xor
mov
mov
xor
xchg
xchg
test
pushl
ds
cmp
inc
dec
mov
scas
push
push
jl
ja
scas
sub
loop
leave
jle
push
gs
divl
addr16
nopl
cmpsl
lea
scas
push
out
fucom
dec
fs
int
sub
or
inc
cmovbe
sbb
dec
lahf
cmc
mov
ljmp
js
lret
inc
sbb
cmp
out
in
fsubs
hlt
jle
les
and
cltd
push
inc
mov
adc
cs
into
or
jb
dec
aaa
outsl
bound
xchg
jo
mov
inc
pop
jnp
pop
movsb
sub
inc
mov
mov
lods
lea
sbb
mov
add
pop
popa
mov
lcall
fidivl
test
xor
mov
int3
cld
add
insb
pop
pop
or
aas
fxch
inc
push
mov
xchg
popa
mov
pusha
sarl
pushf
sahf
les
add
or
push
fldcw
push
inc
pop
or
and
sub
in
push
je
cmp
xor
pop
into
xchg
jl
cltd
xorb
lods
and
dec
mov
xchg
add
push
or
add
mov
mov
or
jmp
fisubl
pop
and
jae
outsl
mov
mov
mov
bound
sbb
popa
test
inc
inc
pop
xor
jp
add
dec
decl
jae
dec
xorb
or
dec
xor
and
jl
aaa
cmpl
out
popf
fdivs
shll
pop
addr16
mov
pop
xor
inc
or
in
outsl
jbe
inc
dec
push
pop
movsb
roll
repz
jl
mov
stos
add
outsl
and
mov
ja,pt
add
dec
gs
dec
and
je
inc
ljmp
adc
jbe
add
dec
fimull
and
imul
mov
loope
in
mov
into
mov
fisttps
and
jecxz
xchg
jg
dec
dec
nop
idivb
inc
rcrb
insl
lods
ret
in
xor
cwtl
lods
pop
inc
ficomps
pop
add
ror
adc
movsb
pop
xchg
push
fwait
and
pushf
sub
push
pop
inc
push
mov
das
and
pop
inc
cmp
dec
mov
pop
shlb
pop
aam
cmp
inc
shll
fistpll
dec
push
xor
pusha
add
dec
pcmpgtb
mov
ljmp
adc
shl
or
dec
or
sbb
mov
sub
cmp
ret
mov
inc
dec
mov
sub
pop
dec
sub
dec
lods
pop
repz
pop
mov
push
pop
in
mulb
dec
negl
sbb
mov
cmpsb
dec
add
inc
jle
mov
in
ficomps
cmp
cmp
mov
fildl
mov
test
inc
loopne
or
add
sbb
sarb
pop
xlat
xor
aas
adc
dec
ja
sub
jns
pop
into
cmc
cltd
pop
add
pop
dec
out
mov
jle
adcb
les
and
dec
shll
cwtl
adc
aad
cmp
pop
or
mov
dec
into
ja
cld
sbb
dec
push
pushl
in
xlat
fldt
fs
dec
jge
sahf
sbb
push
push
jl
bnd
xchg
into
push
ja
icebp
mov
addr16
dec
or
in
pop
push
movsb
add
gs
pop
jb
ret
mov
adc
dec
pusha
adc
adc
fiadds
leave
mov
cmp
and
hlt
xchg
dec
xor
dec
negb
push
mov
cmp
or
inc
xchg
jle
out
push
xchg
mov
sub
scas
lock
inc
push
jnp
or
push
dec
stos
lahf
jle
test
or
incb
inc
mov
xchg
lret
not
jae
imul
dec
push
jmp
and
add
dec
popa
data16
test
mov
and
arpl
fstl
push
inc
jb
dec
mov
dec
gs
mov
loopne
mov
and
jne
ds
xchg
cmp
out
inc
mul
sub
dec
into
in
pusha
out
dec
cmp
pop
jnp
fnstsw
add
sub
pop
je
jl
xchg
or
imul
lret
inc
push
push
or
sub
jno
xor
xchg
xchg
inc
jg
xlat
xchg
repnz
xor
inc
xchg
xor
notb
lds
in
js
les
adc
jge
sbb
clc
xchg
mov
jle
or
mov
inc
cs
jb
pmaddwd
add
aam
cmp
repnz
and
aaa
test
int
xor
loop
scas
mov
aaa
jl
sub
pop
push
push
pushf
sub
inc
mov
jl
jp
insb
aam
adcl
ds
fsubl
leave
adcl
jle
cmp
and
sbb
aam
call
das
scas
in
inc
add
dec
pop
push
xchg
mov
inc
out
mov
incb
cmp
jb
fsubrs
movsl
out
in
lods
cmp
mov
das
mov
fsubr
push
cmp
push
sbb
ja
and
cmpsb
mov
nop
or
adc
lahf
int
stos
jle
pusha
dec
push
fisubl
iret
jg
cmp
mov
inc
les
jl
orb
das
cmpb
adc
adc
pop
cmpsl
ret
jl
jecxz
push
cli
mov
dec
pusha
mov
mov
xor
sahf
jno
clc
xchg
cmovg
or
in
pop
cmp
jl
popf
inc
shlb
mov
sub
cli
mov
es
mov
mov
mov
aam
or
dec
enter
movsl
fwait
movsl
lods
or
jle
xor
out
stos
addl
or
mov
mov
dec
dec
mov
inc
mov
stos
push
dec
jecxz
pop
loope
cmp
rorl
and
inc
pop
sbb
dec
inc
pop
fmull
inc
int
test
mulb
dec
adc
data16
mov
cmp
pop
je
or
jno
xor
shlb
xlat
enter
inc
shrl
sbb
xor
dec
cmp
pop
mov
or
aaa
adc
jae
mov
scas
scas
xor
mov
addr16
aaa
leave
add
and
inc
push
out
sbb
pop
dec
dec
inc
cwtl
sub
mov
xchg
jnp
jmp
and
test
dec
sub
adc
ljmp
jns
and
adc
push
repz
pop
xchg
jecxz
rcrl
dec
fiadds
mov
lods
nop
stc
sub
daa
rorl
xlat
cmpsl
dec
xchg
shl
fisttps
xchg
sbb
in
jbe
icebp
mov
dec
cs
test
lcall
dec
jge
or
mov
mov
test
mov
pushf
dec
sbb
xchg
mov
dec
adc
aas
sub
inc
mov
dec
pop
xchg
add
sub
das
push
sbbl
repz
fsubrs
imul
sbb
nop
mov
test
nop
rclb
pop
das
fistps
iret
mov
jle
or
mov
das
xchg
jb
mov
iret
jl
and
rorw
jmp
dec
sub
cltd
jmp
xor
stos
dec
jnp
push
and
jg
fdivs
ljmp
mov
dec
mov
test
and
inc
mov
lock
dec
adc
repz
ja
sub
test
cmp
lock
adc
dec
and
stos
push
sub
fcomip
dec
inc
lret
pop
add
into
cmpsb
adc
gs
pop
ret
add
sbb
fsubr
dec
jae
pop
je
adc
mov
pushf
jb
mov
pop
sbb
jae
into
mov
lods
inc
int
push
js
or
mov
xchg
outsb
xchg
fstps
push
push
jne
popf
data16
dec
repnz
das
mov
sbb
add
inc
mov
inc
mov
xchg
xor
sub
mov
pushf
mov
arpl
out
stc
jb
cmp
dec
xlat
in
and
mov
iret
iret
mov
dec
adc
add
imul
lret
push
sbb
mov
daa
mov
jb
mov
addr16
pop
mov
dec
sbb
loopne
push
es
push
pusha
neg
or
repnz
cmc
push
movsb
lret
pop
adc
or
out
jnp
push
sub
aaa
or
adc
cmpsb
cmp
dec
and
mov
mov
shlb
xor
loope
add
stos
sub
add
lret
or
pusha
jmp
push
dec
out
mov
pop
popa
sub
add
cs
and
and
jl
out
dec
mov
push
adc
repnz
adc
mov
and
dec
rcrb
mov
loop
js
adc
xor
pop
sub
jge
sbb
jae
xchg
ficompl
sub
into
orl
shrb
sbb
jge
cmp
shrl
testb
xchg
test
xchg
inc
jg
add
clc
cmpsb
inc
jb
shlb
sbb
in
add
mov
cmp
pusha
jle
xor
shlb
lahf
mov
aaa
les
lret
into
lds
dec
add
jnp
xchg
mov
jle
mov
xor
out
movsl
dec
or
push
push
sub
xchg
aad
pop
jno
dec
loopne
inc
call
cmp
mov
cmp
enter
sub
insb
xchg
cmpb
cmp
gs
call
mov
or
jo
movsl
cs
inc
shl
jle
fmuls
jg
jecxz
mov
mov
inc
xchg
jbe
and
movsl
insb
popa
mov
call
jb
push
sahf
jnp
jle
stc
into
pop
cmp
push
lods
inc
nop
pop
test
and
lock
jecxz
cmp
sub
into
dec
cs
cltd
rolb
hlt
push
xor
add
add
scas
jnp
and
xchg
inc
or
lahf
addr16
addr16
stos
repz
dec
das
insb
cmp
adc
dec
popa
jns
jae
rcrl
bound
shlb
dec
inc
out
mov
orl
or
insl
mov
fdivrl
jnp
xor
xchg
and
addr16
lret
bound
sbb
shlb
dec
inc
add
scas
dec
stc
cmpsl
inc
sub
xchg
xchg
jge
pop
push
push
andb
cmpl
mov
adc
mov
cli
dec
xchg
adcl
push
and
loopne
add
dec
sarl
xor
outsb
xor
sub
jne
cmp
xchg
fmul
clc
fisttpll
gs
jl
fstpt
push
outsl
mov
outsl
orl
add
bound
jbe
dec
popf
lea
cmpsb
mov
rcr
dec
out
pop
adc
leave
aad
xchg
ja
dec
pop
xchg
or
psubd
push
dec
incb
repz
clc
jle
or
das
mov
push
jmp
pop
xchg
pop
xor
mov
into
jb
or
testb
mov
push
mov
cmp
js
push
cmp
cli
xor
add
dec
movsb
pushf
psrlw
xor
cli
into
mov
enter
es
cmp
inc
hlt
pop
jo
sbb
and
fsubl
dec
dec
pop
clc
push
or
out
dec
jg
shll
mov
jae
arpl
sti
adc
add
test
mov
or
movnti
push
cs
loope
outsl
mov
jbe
ret
and
fcoml
movsb
push
and
pop
inc
mov
mov
add
add
outsb
pop
dec
push
andl
imul
mov
sub
mov
push
lahf
push
test
arpl
lret
dec
or
ret
ret
jle
inc
aaa
pop
jp
pop
sbb
dec
lods
cmp
loope
test
sbb
jle
lds
popa
dec
sub
leave
ljmp
cltd
pop
inc
je
add
dec
adc
scas
dec
and
adc
out
jmp
push
int
es
aaa
out
pop
dec
cmpsb
pop
scas
pop
lcall
push
in
sub
or
js
lcall
aad
fucomip
sar
pop
add
dec
mov
sub
sbb
rolb
in
cs
mov
mov
xchg
dec
js
xchg
shl
inc
sbb
subb
clc
mov
cmp
cwtl
mov
pop
imul
inc
out
bound
mov
mov
inc
dec
imul
adc
lahf
pop
push
pop
dec
imul
mov
push
add
pop
jl
std
hlt
mov
jae
mov
adc
mov
fistpll
inc
movsl
or
mov
movsb
lods
aas
clc
int
jg
mov
add
rorb
test
xlat
mov
push
xor
adc
add
push
cmp
push
mov
mov
movsb
pop
push
add
adc
cmc
mov
iret
jg
test
inc
pop
mov
insb
inc
fistpll
mov
test
jo
pop
shrb
test
push
mov
push
shlb
jg
dec
cmc
sbb
pop
mov
dec
sub
roll
jg
add
push
in
into
add
xor
dec
adc
or
mov
jl
sti
mov
cmp
cmova
push
scas
inc
cmp
add
sub
data16
push
xor
mov
ud2
xchg
push
cli
enter
lret
lods
adc
and
cmp
xlat
dec
xor
movsb
cld
fsubs
repnz
xchg
cmp
stos
data16
sahf
int3
arpl
ljmp
repnz
daa
push
mov
add
add
lret
lock
fsin
fwait
int3
jle
or
leave
mov
into
test
sbb
xchg
or
xor
and
mov
ficoms
pop
pop
jle
pop
mov
ja
in
mov
movsb
and
xchg
or
sub
mov
gs
add
in
pusha
xchg
into
aas
jg
adc
add
dec
dec
cmpsl
jl
add
jp
ds
stos
add
mov
lret
and
into
sub
int3
mov
jl
push
lret
xor
and
mov
cmp
mov
cmp
mov
sub
out
xor
jno
out
and
repz
xchg
movsb
cmp
mov
fsubl
call
clc
push
or
dec
lahf
fidivrs
pop
popf
xchg
or
dec
imul
cmc
xor
inc
add
push
in
sahf
sbb
push
dec
dec
jle
sbb
mov
push
and
dec
sti
es
leave
in
cmp
push
cmp
xor
push
fadds
pop
test
aad
ret
xchg
das
test
xchg
add
decl
dec
fs
mov
xchg
dec
adc
or
fucom
fwait
xor
inc
and
xor
or
and
add
dec
in
xor
subb
dec
pusha
xchg
mov
cmp
dec
test
decb
nop
push
data16
loope
sti
pop
mov
scas
dec
sbb
repz
sub
icebp
rolb
pop
idivl
jge
sahf
fstpl
insl
sub
ret
lods
pop
aam
adc
sub
dec
loope
sbb
int
mov
mov
pop
xchg
ljmp
add
test
mov
orl
pop
dec
mov
cmp
sbbl
out
xor
dec
mov
pusha
pop
xchg
pop
jnp
dec
pushf
sub
push
enter
dec
cmp
mov
dec
imul
pop
inc
jmp
movsb
rcll
lea
fimuls
pop
dec
mov
add
out
sahf
stos
testb
je
xorb
dec
pop
dec
dec
xor
mov
push
iret
dec
cmp
and
cmpsb
push
sti
xchg
fidivrs
aas
mov
out
aad
pop
mov
in
xor
loope
sub
dec
stos
ja
adc
hlt
dec
xchg
mov
mov
push
mov
mov
data16
sbb
out
push
pop
pop
scas
jne
ja
inc
inc
pop
jp
sbb
stc
arpl
or
or
mov
scas
dec
mov
add
es
jns
idivl
lods
mov
or
dec
leave
dec
add
insl
lock
push
mov
dec
cmc
add
sbb
mov
dec
aam
and
ds
mov
pop
push
or
mov
js
jp
mov
push
dec
stc
sub
stos
xor
sub
dec
add
jo
cmp
movsl
ffree
or
pop
xor
out
sbb
dec
pushl
testb
mov
enter
cmp
add
push
sub
das
mov
gs
inc
roll
dec
cmp
sub
sahf
mov
loopne
pop
and
jecxz
into
pop
mov
rorb
pusha
fidivl
dec
orl
mov
dec
imul
cmp
pusha
or
and
add
pop
orb
xor
mov
dec
pop
int
in
fcmovnbe
js
dec
cwtl
cmp
mov
push
hlt
xor
pop
dec
pop
cmp
sub
xlat
push
adc
dec
jmp
mov
xchg
imul
bound
mov
in
scas
push
cmp
add
cmp
xchg
mov
or
dec
daa
xor
dec
sbb
mov
movsb
mov
cmp
and
in
lcall
cli
cmp
and
jae
jle
mov
scas
jbe
out
test
or
xchg
inc
sbb
repz
xchg
mov
mull
dec
out
lods
jg,pn
in
pop
xchg
stos
addr16
jmp
and
cmp
icebp
popf
mov
loope
pop
mov
cmp
cmpsl
jl
lea
fisubl
mov
cmc
mov
pop
pop
dec
jle
lret
cli
fs
mov
sbb
or
out
dec
in
in
divb
mov
dec
push
xchg
inc
or
clc
sbb
stos
std
jbe
fcoms
sub
out
cmp
dec
cmp
dec
pop
cmpsl
inc
das
out
mov
in
push
mov
xchg
push
jns
jbe
inc
adc
pop
ljmp
lcall
dec
fstpt
adc
cwtl
iret
int3
aad
jmp
dec
mov
shl
xlat
int
push
dec
cs
test
dec
mov
push
and
dec
mov
dec
testb
sti
pop
shrl
addb
cmp
addr16
es
and
or
mov
or
jae
sbb
js
pop
mov
jns
add
mov
xor
test
dec
scas
push
jb
mov
pop
dec
mov
mov
ret
lods
cmpsl
aaa
lret
xor
cmp
and
gs
dec
adc
sub
dec
sub
sbb
lcall
push
or
dec
push
and
push
inc
mov
outsl
hlt
add
dec
sbb
insl
jle
jne
dec
xchg
std
inc
test
int3
dec
mov
sub
and
pop
mulb
dec
fmull
xor
outsb
mov
je
jecxz
jl
cltd
movsl
insb
outsb
aas
push
xor
jno
dec
inc
stc
xor
test
push
lods
popa
mov
ret
pop
es
dec
testb
sbb
popf
or
mov
loopne
mov
aaa
mov
pop
xor
mov
call
clts
int
adc
popf
out
sar
dec
xchg
sub
dec
fsubl
xlat
ds
inc
mov
add
es
aad
sarl
jo
xchg
stos
jecxz
xchg
pusha
out
in
pop
push
fsubs
lods
test
dec
outsb
push
fidivrs
dec
push
cwtl
xchg
push
shll
inc
cmp
jmp
push
aad
xchg
push
dec
lret
push
mov
outsl
cmp
pop
and
dec
popa
add
xchg
push
inc
in
dec
mov
mov
inc
mov
sub
into
jo
jb
dec
lea
mov
lods
push
dec
cmp
sub
and
add
int3
dec
repz
pop
dec
mov
or
inc
idivb
int
lcall
xchg
sub
dec
mov
dec
dec
mov
xor
or
clc
rcr
mov
jno
ret
sub
loop
sub
sahf
andb
insb
mov
mov
ret
fiadds
lock
mov
dec
cmp
stc
in
dec
xchg
pop
out
mul
outsl
jns
push
scas
fistl
xlat
nop
lret
jo
xor
jecxz
dec
adc
jne
push
jg
add
stos
jno
sbb
sbb
rorl
cmp
ret
outsb
dec
pop
mov
lcall
sbb
mov
shll
lret
push
dec
or
rorb
jbe
push
in
aaa
push
mov
sarl
shlb
dec
out
data16
add
mov
clc
and
mov
dec
aam
xchg
pop
cld
mov
adc
cli
stos
or
stos
pop
dec
repz
shrl
mov
dec
je
push
pop
dec
adc
repnz
bound
outsb
mov
mov
movsb
fadds
adc
lock
mov
cmp
push
sbb
gs
xor
dec
aaa
icebp
dec
mov
dec
pop
or
dec
mull
fiaddl
inc
adc
sbb
or
mov
ficoms
lret
fs
cld
cmp
andl
push
or
ret
mov
mov
dec
sbb
xchg
sbb
push
loope
pop
pop
inc
dec
test
insb
pop
cmp
into
incl
outsb
push
movsl
jne
dec
sub
imul
dec
add
lods
fistpl
sbb
mov
aas
repz
rorb
divl
adc
iret
add
jmp
sbb
in
dec
sar
add
and
adc
sub
pop
sarl
push
into
out
cmpsl
idivl
add
or
sub
int
inc
ja
iret
popl
mov
inc
out
dec
cld
leave
inc
fldt
and
divb
jns
or
dec
sbb
sub
ljmp
bound
mov
and
ja
or
and
mov
push
or
lret
mov
fstpl
xchg
test
push
int
rcll
and
arpl
adc
jbe
cmp
add
pop
inc
popf
dec
sti
pop
pop
xchg
testb
xchg
push
jg
out
out
clc
xchg
es
mov
adc
sti
insl
jle
dec
call
mov
aad
scas
loopne
cmpsb
les
add
lcall
into
std
stc
xchg
xlat
or
dec
mov
xchg
sbb
mov
call
fisttpl
cmc
sbb
xchg
lret
outsl
dec
or
sahf
xchg
dec
inc
dec
pusha
pop
mov
adc
leave
jns
push
jge
sub
dec
add
lea
adc
lahf
mov
cli
sahf
stos
aaa
and
jp
pop
addr16
adc
int3
std
fisttpl
and
out
sub
dec
sbb
xor
sbb
push
divl
jns
fildll
scas
mov
dec
adc
cmc
enter
jne,pn
push
fs
cmp
mov
fcmovne
out
jbe
repz
decl
mov
pop
mov
sub
xor
mov
adc
xor
sahf
jecxz
push
insl
mov
lds
and
jge
xchg
inc
ljmp
xchg
adc
dec
dec
mov
scas
xor
inc
icebp
dec
mov
sarb
fs
jecxz
xchg
push
daa
call
adc
popf
icebp
iret
xchg
es
pop
jb
push
cmpsb
dec
je
or
outsb
scas
cld
or
mov
repnz
push
adc
or
xchg
jecxz
mov
shll
sbb
sub
dec
aas
push
cmpsl
pop
loope
pop
int
sarl
push
cmp
dec
push
xor
iret
testb
lahf
inc
dec
shll
sbb
dec
dec
cwtl
outsl
scas
sbb
xchg
dec
not
enter
push
inc
push
jmp
jmp
mov
adc
inc
mov
pop
in
pop
cli
insb
dec
cmp
push
ret
scas
pslld
mov
add
xor
push
in
cli
dec
mov
fdivr
dec
dec
stos
insl
aaa
jmp
mov
pop
inc
jl
mov
hlt
dec
subb
mov
push
insl
or
sub
out
ds
xchg
xchg
pop
push
hlt
and
dec
dec
scas
movsb
sub
int3
xchg
adc
jb
push
mov
ja
dec
inc
lds
cmp
fucom
ds
les
or
xor
rcll
jb
dec
jmp
adc
mov
notl
dec
into
push
inc
push
sbb
cmp
ljmp
fiadds
int3
fisttpll
jnp
mov
testl
jns
pop
dec
jle
repnz
push
add
sbb
dec
sahf
jp
ja
xchg
cmp
push
outsb
inc
out
mov
xor
mov
mov
aad
dec
inc
out
pop
sub
imul
adc
dec
das
shl
test
inc
mov
es
iret
mov
rorb
dec
dec
or
sbb
or
aas
push
in
dec
aam
mov
imull
add
sbb
cs
cs
and
mov
mov
aad
or
jle
aaa
shlb
andb
add
xchg
dec
inc
sbb
unpcklps
pop
outsl
mov
popa
mov
xchg
fwait
jg
leave
stos
pop
sbb
and
movsb
rcll
dec
push
sbb
adcb
sahf
js
sub
dec
sbb
lret
insl
rorb
pop
out
daa
add
add
and
push
dec
fisttpl
jp
inc
gs
mov
outsb
mov
rcrb
loopne,pt
xlat
inc
nop
dec
jl
pop
cmpsl
inc
iret
mov
cltd
int
rorl
pushf
xor
add
mov
dec
in
dec
pop
test
ja
jne
mov
stos
sub
jns
mov
lret
dec
pop
xchg
test
leave
sub
push
repz
dec
or
jmp
daa
xlat
mov
dec
cwtl
inc
aam
fwait
sub
fcoml
stos
dec
andl
andb
inc
rolb
sbb
xor
dec
adc
hlt
xor
loop
je
or
mov
dec
add
fsubl
dec
jle
cltd
dec
lret
and
sbb
mov
dec
rolb
daa
cmp
xor
and
jb
mov
mov
jle
in
dec
aam
mov
pop
shlb
xchg
push
dec
jg
pusha
jmp
cltd
jbe
test
xchg
push
push
lods
jle
sub
out
push
mov
arpl
ljmp
in
inc
repz
pop
cmpsl
jns
xor
movsl
movsb
inc
enter
cmpsb
jb
push
out
mov
jle
gs
jl
jl
lcall
sub
push
cmp
push
pop
lods
jle
dec
push
cmp
std
mov
and
fwait
add
and
jp
mov
jno
cli
out
mov
add
testb
mov
jae
pop
cmp
pop
mov
inc
jg
stos
mov
cmp
mov
sub
mov
iret
in
in
lea
xlat
xor
dec
adc
je
decb
cltd
inc
push
fisttpll
adc
faddl
push
inc
scas
lret
jp
or
ds
in
lret
xchg
movsb
clc
push
and
cmp
outsb
in
fninit
xor
fsubrl
loop
jl
rep
lods
es
aaa
std
je
push
mov
ss
cmpl
xor
call
out
pop
sbb
cli
lahf
dec
addr16
xor
mov
dec
cld
enter
pop
xlat
pop
inc
in
movsw
fwait
dec
or
popf
inc
inc
fstpl
sub
sub
rcrb
ret
leave
mov
aaa
lcall
loope
std
push
jae
iret
mov
cmpsb
dec
out
and
xchg
dec
enter
cmpsl
cltd
in
push
inc
imulb
sub
dec
fidivrl
mov
aad
mov
fldt
xor
add
dec
lds
mov
cli
stos
xlat
dec
mov
inc
push
bound
mov
sub
dec
lret
xchg
add
clc
jge
mov
cmpsl
aad
scas
nop
lods
sub
xor
xchg
popa
sbb
bound
add
gs
jo
cs
lds
fcoms
repz
aad
adc
adc
repnz
rclb
inc
mov
incl
cmp
xchg
js
popf
dec
xchg
dec
shrl
push
scas
jb
sbb
ljmp
lret
push
test
repnz
outsl
dec
dec
mov
bound
movsb
das
xor
fwait
mov
push
pusha
inc
lock
ljmp
sarb
movsb
sbbl
add
jne
mov
mov
add
movsl
push
pop
mov
sbb
dec
xor
mov
push
dec
cmovp
cltd
ds
sub
inc
mov
push
cmp
push
pop
sub
iret
xchg
mov
or
cmp
cmp
and
xchg
cmp
xchg
stos
data16
sbb
mov
push
into
mov
dec
dec
aas
jle
leave
pop
idivb
pop
movl
mov
sub
cmp
mov
cmp
insl
js
out
loope
scas
movsb
push
leave
push
jbe
mov
fs
rcrb
bound
cmp
xor
push
and
jl
test
arpl
and
mov
fs
loop
and
ljmp
xor
sub
lret
or
mov
mov
ljmp
shl
sub
xchg
push
jp
pop
test
sub
mov
adc
aam
xor
inc
jg
xchg
jne
push
insl
pop
popa
jl
pop
outsb
jno
sub
aaa
push
sub
cmp
jle
les
xchg
jl
out
jno
imul
xlat
js
xchg
ficoms
push
dec
sbb
fs
scas
dec
dec
dec
pop
or
mov
cmp
jle
inc
or
cmp
mov
mov
jl
mov
daa
jg
decl
mov
bound
ljmp
das
pop
jl
in
into
cltd
sub
and
adc
xchg
nop
mov
stos
dec
sahf
cmp
inc
scas
dec
fsubs
insb
mov
cmp
gs
iret
add
aaa
dec
adc
jns
lods
mov
cmp
inc
cmp
ret
ficoml
popa
mov
mov
stc
and
rcrl
dec
popf
xchg
aad
add
hlt
pop
dec
movsl
stos
add
pop
incb
push
ljmp
jb
inc
dec
or
jns
xchg
add
hlt
aaa
and
lea
and
cs
dec
inc
shrb
out
push
push
jns
ss
sub
push
andps
adc
push
lea
xchg
cs
int3
popa
ljmp
cmp
shll
and
and
dec
fmul
jne
daa
inc
adc
int
das
pop
inc
pop
fs
stc
cli
pop
jl
sbb
mov
pop
jle
dec
xor
in
cmpsb
and
mov
fisttpl
jne
mov
les
lahf
sahf
push
sub
and
mov
and
mov
or
scas
les
sub
adc
sbb
vcmpngtpd
inc
xor
rol
push
adcl
into
push
out
dec
je
and
xchg
add
test
cld
and
mov
adc
out
hlt
add
xor
pop
pushl
add
dec
pop
fbld
dec
stc
in
mov
je
mov
hlt
sub
fs
xchg
jmp
loopne
insb
push
dec
lahf
lea
xchg
jle
roll
jnp
inc
mov
inc
adc
pop
inc
dec
movsb
subl
push
je
adc
or
inc
mov
xchg
lods
push
dec
cmp
retw
dec
push
push
cmp
incl
sbbb
dec
add
nop
and
adc
xchg
and
inc
cltd
or
or
lcall
xor
and
jb
mov
dec
dec
pushf
jnp
xchg
movsl
mov
dec
push
cmc
or
push
lcall
jne
popl
insb
je
jle
or
xor
dec
into
push
xchg
mov
sarb
dec
mov
mov
or
lret
and
jb
xlat
in
jmp
pop
imul
xchg
lock
lea
push
mov
js
sarb
movsb
scas
daa
fwait
mov
dec
inc
out
ljmp
xchg
je
pop
test
jg
inc
hlt
test
popf
loope
adc
insb
call
and
add
xchg
add
sti
fsubrs
andl
lds
out
dec
mov
dec
xorb
fists
and
loop
jae
stos
bound
mov
xchg
shll
jle
mov
xchg
cli
jmp
out
pop
push
mov
jns
xchg
iret
inc
js
iret
int
in
rcll
cmp
orb
nopl
inc
movsl
lret
lds
jl
xchg
sbb
mov
es
mov
or
div
mov
or
mov
adc
je
pop
pusha
lock
jl
lahf
push
outsl
pop
aam
xchg
loopne
fisubl
popa
cmp
lcall
pop
sti
scas
cli
xlat
bound
iret
sub
scas
jo
test
punpckldq
mov
jb
sub
pop
inc
pop
dec
inc
push
dec
jns
cmc
out
andl
cmp
movsb
jbe
fs
pop
negb
and
bound
xlat
test
mov
pop
sub
fistps
push
popf
jp
ljmp
cmp
mov
jle
mov
mov
lds
call
inc
pushf
sub
rolb
dec
in
scas
pop
shr
jne
jl
popl
xor
dec
sbb
xchg
push
pop
inc
inc
ljmp
fisubrs
mov
push
cmp
sbb
xor
mov
in
xor
push
aam
cmc
cmpsl
xchg
mov
jl
cmp
mov
ljmp
mov
test
and
xor
lret
mov
add
loopne
out
cmp
jle
pusha
lret
cmp
pop
xor
rclb
leave
jp
in
push
mov
dec
rcrl
outsl
sub
flds
cmp
out
clc
mov
fisttpl
imul
gs
fsub
or
push
addr16
in
mov
sub
xor
fadds
push
pop
sarl
pop
xor
out
sub
push
dec
mov
cmp
push
test
pop
aad
pop
lods
jb
adc
dec
sub
sbb
sahf
inc
mov
jl
in
xchg
mov
dec
xchg
dec
fcoml
jbe
dec
xor
lods
mov
cmp
dec
ret
mov
sbb
out
dec
fdiv
jle
mov
cmp
cs
loop
fimuls
push
and
sbb
mov
dec
jbe
adc
lahf
sub
xlat
lods
dec
dec
mov
adc
mov
mov
mov
cltd
test
sbb
dec
clc
or
add
xchg
testb
push
and
icebp
lret
dec
mov
mov
dec
xor
imul
xor
jbe
pop
aas
jmp
fwait
jle
aad
xor
stos
dec
add
sbb
cmp
adc
add
xor
das
sub
loop
add
lcall
dec
push
cmc
add
push
or
sub
push
shrb
dec
inc
movsl
ret
inc
mov
cmp
iret
test
jl
xlat
jle,pn
inc
addr16
popa
or
pop
dec
jmp
adc
dec
les
fwait
xchg
jge
xor
ds
jns
js
cmpsb
sarl
inc
mov
mov
pop
dec
push
icebp
push
dec
pop
jp
dec
xor
sbb
cmp
ret
cmp
repnz
dec
rcll
int
loop
dec
pop
add
mov
fwait
shr
scas
ret
pushf
dec
cmp
add
mov
mov
dec
stos
cmc
ret
cmp
jbe
out
push
rorb
jecxz
mov
jns
push
dec
orl
mov
dec
lods
push
push
jae
pop
sahf
and
iret
scas
fstl
jl
sub
cmpsl
cmp
dec
daa
pop
out
add
xor
jge
xchg
nop
dec
pop
or
pop
outsl
xchg
test
rcl
inc
in
mov
push
dec
cmp
xchg
ljmp
dec
cmp
mov
decb
add
cld
pop
cs
dec
lret
movsb
jp
inc
fnstsw
push
dec
out
out
and
das
loope
push
add
jns
insl
mov
iret
xchg
pop
rorb
dec
rorl
dec
inc
movsb
push
cli
dec
aaa
ret
push
cs
shll
sahf
inc
divl
cwtl
mov
fbstp
loope
mov
inc
xor
dec
and
js
outsl
dec
xor
bnd
dec
jg
jmp
cmpsl
jle
dec
push
call
inc
mov
jnp
mov
das
rorb
push
fidivrl
dec
pusha
scas
xchg
rclb
ficompl
lods
outsl
loope
sub
nop
ret
mov
and
les
aaa
xor
sbb
ficoml
jle
xchg
and
out
and
pop
into
int
out
in
fistpll
fwait
sbb
out
data16
xchg
adc
inc
scas
mov
jl
ficomps
ret
inc
imul
aam
mov
aaa
cmp
cli
cmp
repnz
pushf
fildll
movsl
rolb
fwait
rcll
inc
lret
std
xchg
cwtl
push
sbb
jno
jnp
inc
xchg
cmp
stc
xor
add
adc
aad
in
ss
lds
js
sub
cmp
repz
lcall
sub
add
pop
dec
loop
xlat
pop
cmpsb
dec
lds
rorb
xor
xchg
add
inc
dec
and
fdivs
push
dec
outsb
repz
or
xor
dec
cltd
cmpsb
mov
iret
shll
push
fnstsw
adc
push
sahf
sbb
dec
dec
push
not
outsl
mov
ss
mov
xor
jae
andb
dec
ret
iret
jp
jbe
mov
repnz
lock
aas
dec
std
shl
add
stos
jle
pop
dec
daa
jnp
into
adc
sub
in
mov
insb
dec
adc
daa
cs
push
dec
pop
adc
mov
mov
add
test
xor
lock
adc
aas
fisttps
push
push
add
xchg
push
lods
cmp
dec
popa
das
fsts
cmpsl
dec
cltd
arpl
popa
inc
fisubrl
and
adc
dec
cld
xor
and
add
enter
inc
in
fnstenv
adc
int
daa
rorl
and
neg
cmc
xchg
dec
dec
mov
xor
rorb
cli
inc
xor
lea
push
into
sbb
daa
adc
sbb
jle
dec
mov
push
pop
mov
mov
jle
jge
ja
imul
shrb
sbb
push
movsl
jg
js
cwtl
aas
test
xor
xchg
call
data16
outsb
xchg
out
sub
jp
fdivp
in
das
inc
dec
add
cmp
dec
test
lds
cs
dec
es
lods
dec
rcrl
dec
or
loopne
and
push
cmpsb
dec
xchg
bound
mov
pop
or
cmp
lea
xor
out
dec
jge
and
or
mov
scas
inc
daa
dec
sbb
ja
cmp
dec
sbb
sahf
jns
lock
dec
orb
fcmovnbe
ror
dec
or
cli
mov
jle
dec
sub
push
add
mov
add
sahf
dec
addr16
in
out
adc
icebp
xchg
dec
xchg
andb
dec
loop
out
aaa
or
dec
fisttps
jne
ficoms
ficompl
scas
mov
inc
das
adc
fimull
out
cmp
rcl
pop
cmpsb
xchg
jp
fmuls
jle
call
dec
rcr
and
inc
xchg
shrl
aad
xchg
xor
push
add
mov
cmp
gs
dec
repz
movsl
lods
pop
add
sti
ss
adc
xchg
cwtl
rorb
inc
mov
mov
call
test
lahf
pop
dec
xchg
ja
dec
arpl
bound
sub
cmp
xchg
push
cmp
insb
mov
mov
adc
inc
nop
push
je
pop
inc
sahf
ds
out
xor
int
out
or
jle
lret
and
add
jge
dec
xchg
ja
in
push
pop
jae
addb
sarl
bound
cmp
imul
xchg
inc
imul
ja
mov
out
test
stos
mov
xchg
add
mov
xor
inc
mov
lods
sbb
arpl
std
in
lret
iret
loopne
loope
push
jb
dec
mov
int3
mov
dec
push
cmp
mov
xchg
mov
dec
mov
ljmp
ljmp
roll
pop
jnp
test
lret
add
in
dec
cld
jge
jbe
movsl
mov
out
xchg
dec
insl
mov
fmull
rcrb
hlt
in
xor
push
or
insb
inc
bound
int
popa
dec
dec
mov
fdivl
sbb
inc
dec
jne
in
xor
mov
into
add
mov
xchg
or
imul
lcall
or
xchg
pop
dec
dec
mov
xchg
aad
jae
pop
xor
or
pop
fs
cs
test
dec
sbb
dec
sar
mov
xchg
adc
ss
fldcw
xchg
dec
xchg
shlb
push
fwait
dec
pop
sti
xor
lcall
sbb
mov
inc
fcompl
push
cmp
fildll
fiaddl
dec
push
mov
mov
mov
rcl
push
mov
adc
add
pusha
add
cltd
iret
imul
outsb
scas
push
adc
mov
xchg
push
mov
enter
lods
cltd
movsl
mov
dec
jg
inc
popf
inc
pop
add
dec
mov
notl
sbb
sarb
lods
icebp
popa
add
rcrl
outsb
mov
dec
test
sub
mov
cmp
sub
inc
mov
push
jmp
out
lret
enter
jnp
addr16
or
add
pop
dec
cwtl
dec
or
dec
push
clc
aam
inc
sbb
repnz
lret
sti
dec
fisttpl
xor
xor
popf
mov
lea
inc
into
es
movsl
mov
xchg
int
adc
push
cltd
sahf
pop
nop
mov
cs
jno
sahf
pop
mov
pop
adc
stos
lock
push
movsl
stos
mov
xchg
jecxz
cmp
scas
adc
dec
jg
out
inc
adc
jl
and
jne
stos
push
test
add
out
sbb
push
out
mov
add
push
inc
test
loope
mov
daa
enter
sub
push
mov
stc
fnstcw
mov
mov
cli
xchg
fists
pop
dec
pop
aam
cmp
xor
xlat
popf
sysenter
aaa
aam
enter
ds
int3
test
dec
les
push
jl
xchg
cmp
in
add
repz
or
bound
mov
or
cmp
les
movsl
imul
scas
fcomps
xchg
mov
insl
jl
fwait
popf
jbe
std
push
mov
cmp
mov
xchg
aas
dec
xor
push
cmp
movsl
ret
xlat
adc
dec
cmp
mov
leave
fidivrs
xchg
sarl
fstl
mov
ja
push
outsl
data16
pxor
loope
xorl
or
icebp
mov
jo
js
cmp
xchg
pop
and
dec
sbb
xchg
adc
out
ret
push
mov
movsb
mov
mov
mov
mov
cmp
pmaxub
movsb
rorl
lock
out
pop
pop
imull
js
data16
mov
dec
aas
jbe
jg
dec
cmp
add
and
inc
sub
loop,pt
cmp
inc
and
imul
enter
xor
es
jmp
lock
aaa
xchg
dec
inc
inc
loope
xlat
mov
push
sub
cmp
mov
incl
mov
aas
ds
pop
sbb
jle
lock
ret
fidivrl
mov
ss
into
fwait
push
aam
cmp
dec
sti
and
mov
ds
in
dec
cmpsl
and
dec
mov
aaa
addl
cmp
push
ret
mov
dec
push
lcall
dec
jnp
jne
push
sbb
or
mov
bound
dec
pop
lods
fwait
and
cmp
dec
inc
push
pop
repnz
or
pop
js
sar
inc
cltd
sub
lds
mov
and
shrl
dec
and
or
je
or
adc
pop
orl
sti
icebp
insl
add
jae
out
dec
jp
jmp
dec
sbb
jns
dec
sbb
jge
xor
sti
dec
jmp
dec
int3
hlt
dec
pop
dec
or
dec
cs
pop
push
into
cld
dec
cmpb
test
cwtl
fildll
daa
jns
outsl
mulb
call
je
pushf
addb
mov
into
sbb
dec
and
fldl
pop
mov
mov
aas
mov
mov
aad
outsb
popf
add
in
dec
lods
loope
cmp
ss
cltd
cmp
dec
movsl
fs
jne
dec
fsubl
rcll
jmp
stos
out
mov
aas
dec
outsb
jae
sbb
xchg
jg
iret
cmp
insl
sbb
fwait
push
jae
or
push
test
and
and
testb
xchg
adc
aas
ljmp
sbb
loope
nop
xor
cmpsb
xor
mov
iret
arpl
jle
lods
jns
jmp
mov
inc
mov
dec
and
xchg
jle
enter
mulb
add
dec
mov
stos
lret
testl
mov
hlt
testl
jl
cmpb
xchg
jmp
fwait
pop
lret
repz
xchg
cld
adc
cmc
sub
cld
test
bound
inc
test
addl
xlat
daa
jno
dec
outsl
repnz
iret
lods
and
pushf
mov
ljmp
sbb
dec
dec
sti
push
in
repnz
lret
mov
dec
jo
clc
jo
dec
pusha
popf
iret
pop
test
in
sti
fucomp
inc
andb
insl
inc
push
test
pop
sub
imul
lods
sahf
aad
cli
push
adc
subl
adc
pop
stos
inc
pop
add
sbb
sbb
mov
lock
cld
pushf
adc
inc
add
mov
mull
mov
jl
xchg
and
test
cmpsl
pop
std
fistps
push
out
push
add
dec
je
hlt
cmp
leave
ljmp
imul
lret
dec
shlb
push
stc
and
dec
rclb
in
jae
xchg
cmp
dec
inc
subb
xchg
arpl
add
mov
fwait
outsb
and
dec
lea
aas
shll
sbb
aaa
dec
fidivl
mov
imulb
dec
or
push
dec
cli
repz
xor
clc
cmp
pop
add
ficompl
dec
mov
mov
adc
cmp
dec
or
cmpsl
pop
pop
sub
jl
repz
xor
push
repz
ja
ret
push
jp
adc
sbb
pushl
cmc
dec
inc
cs
fisttps
push
sbb
xor
iret
sub
dec
mov
and
xchg
mov
imul
and
cmpsl
xor
add
or
dec
sahf
ret
push
cmc
dec
out
jge
loopne
jle
popf
dec
mov
pusha
sub
push
std
or
leave
push
repz
cmpsl
xor
push
dec
orl
xor
hlt
inc
data16
frstor
add
sti
ds
iret
fs
jg
cmpsl
sub
outsb
mov
xor
outsb
mov
xor
and
pop
mov
jb
dec
pusha
add
fwait
std
outsb
xor
dec
test
inc
cmp
sbb
in
pop
outsl
lahf
cmpl
lods
addb
inc
inc
dec
inc
leave
cmpsb
pop
rcrl
xchg
fnstsw
into
fisttpl
imul
mov
sbb
push
push
mov
aad
xchg
dec
hlt
adc
push
sbb
xor
push
jge
dec
stos
adc
nop
pop
insl
out
call
push
mov
adc
nop
arpl
adc
mov
jle
inc
push
sahf
daa
shll
push
and
pop
jle
cmp
jmp
dec
jae
faddl
push
mov
jle
outsb
xchg
subl
push
mov
mov
sub
cwtl
test
jge
je
dec
dec
sub
mov
dec
mov
push
add
pop
jmp
aam
jb
stos
out
adc
push
push
fidivs
pop
mov
cli
xchg
outsb
push
subl
lods
js
aas
push
fiaddl
pop
sub
inc
adc
out
std
dec
pop
movsb
jmp
fisttpll
mov
iret
fcoml
mov
mov
sub
cmp
movsb
push
xor
jg
fst
cli
orb
mov
lahf
scas
imul
pop
pop
fstl
cmpsl
gs
dec
out
jmp
std
pop
out
jge
push
jle
jp
add
jns
and
cld
add
lods
pop
negl
sub
jg
aas
jb
addr16
icebp
insl
sbb
out
adc
cltd
inc
arpl
dec
aaa
sahf
pop
pop
fbld
push
jns
mov
and
nop
sbb
mov
push
pop
push
mov
add
mov
dec
into
or
jg
add
push
cmp
loopne
mov
or
jl
sbb
adc
in
sbb
xor
xor
mov
pop
inc
cld
push
dec
cmc
push
fidivrs
mov
push
jecxz
xorb
sub
ret
cmp
test
scas
jg
xchg
push
frstor
and
and
push
loop
dec
filds
movsl
rorl
pop
je
inc
mov
mov
dec
push
push
sub
adc
insb
jg
aaa
loopne
push
sbb
xor
and
mov
in
add
xchg
dec
out
das
jl
jle
scas
data16
addb
mov
dec
or
dec
aad
and
mov
dec
mov
mov
adc
cmpsl
aam
cmp
mov
aaa
mov
outsb
push
jmp
scas
xlat
jg
incl
outsl
jle
es
adc
mov
sub
dec
mov
xchg
rclb
mov
mov
mov
int
jg
sub
scas
pop
sbb
xlat
sbb
outsb
scas
fsubrs
dec
fistps
sahf
inc
xchg
test
inc
into
repnz
sbb
pusha
dec
shlb
dec
xor
mov
mov
lcall
dec
lods
mov
rcr
jmp
insb
sahf
aaa
mov
jne
dec
in
add
in
rolb
pop
fimuls
int3
cmp
mov
cmp
or
lahf
sti
inc
dec
ret
int
push
fmull
jle
fwait
dec
mov
lods
cmp
dec
xchg
xor
xor
xchg
and
pop
call
mov
dec
aam
scas
out
jae
test
daa
lods
adc
dec
add
imul
mov
mov
js
adc
sbb
in
xchg
lock
fwait
or
call
pop
enter
dec
cld
jno
rolb
repnz
dec
mov
in
xor
push
ret
inc
fisubrs
jb
pop
sub
sub
pop
cmpsb
xchg
sub
inc
test
push
fsubrs
pop
rcrb
add
jnp
icebp
lret
dec
xchg
jp
fisubl
mov
fs
pop
test
inc
sti
ds
sub
test
mov
iret
push
fdivl
out
lcall
adc
cmc
dec
insb
xchg
adc
jae
add
enter
ljmp
test
xlat
cmpsb
dec
pushf
cmp
mov
xchg
mov
sbb
jbe
into
jg
push
sbb
mov
int
inc
sub
aam
subb
inc
jle
inc
pop
mov
xchg
movsl
and
push
or
icebp
leave
inc
push
add
mov
jb
loop
and
inc
fidivl
and
pop
lods
popa
fsubrl
lahf
ret
iret
js
arpl
dec
mov
dec
jg
enter
push
inc
cmp
inc
dec
add
icebp
push
lods
sub
sbb
jnp
mov
pop
jl
clc
scas
jg
dec
gs
test
rcr
mov
in
stos
dec
fisttpl
lret
jg
or
inc
nopl
xor
scas
popf
ds
mov
sarb
repz
mov
das
jmp
jno
xor
cmpsl
and
cmpsb
sbb
jle
jo
mov
inc
jp
jp
adc
icebp
push
and
lcall
jle
pop
or
jno
dec
or
mov
ret
out
rcl
dec
xlat
loop
sbb
lahf
cmp
movsl
mov
psubw
cmp
xor
in
adc
out
insl
push
stos
dec
and
sub
dec
aam
fdivs
out
testl
rcll
hlt
ret
dec
call
es
sbb
jbe
dec
mov
dec
inc
and
xchg
mov
mov
out
fimull
sub
inc
bound
push
dec
daa
aad
pop
push
mov
cmp
add
cwtl
icebp
leave
adc
jl
push
addb
pop
pop
stos
and
out
and
pop
testl
dec
cs
dec
cmp
cmp
xor
arpl
jge
push
mov
stos
movsl
xor
add
xchg
push
mov
fistpll
jno
dec
cmp
push
xor
repz
mov
mov
sbb
xchg
inc
mov
imul
dec
bound
push
sub
aaa
testb
pushf
dec
mov
scas
ds
sub
adc
ret
in
adc
xor
dec
sub
into
movsl
iret
xchg
in
mov
loop
jmp
pop
dec
hlt
xchg
lock
jle
pop
into
lcall
pop
sti
xchg
xor
arpl
call
orb
pop
mov
inc
inc
add
push
test
mov
lea
imul
and
mov
cmp
add
dec
push
std
int
in
xchg
out
ljmp
mov
inc
cmc
daa
push
xlat
test
rcrb
inc
jg
pand
dec
test
mul
push
dec
push
mov
movntps
fildl
and
sub
and
shr
imul
les
dec
js
cwtl
lds
jge
mov
or
inc
dec
rcr
dec
xor
aad
in
adc
xor
neg
push
into
loop
add
inc
mov
in
repz
enter
f2xm1
push
arpl
out
test
fists
dec
in
inc
rorl
movsl
add
jnp
pop
xchg
sub
movsb
mov
xor
lret
xorb
jge
jns
jp
push
sti
repnz
inc
insl
cmp
pop
mov
push
dec
pop
imul
xor
sub
clc
dec
roll
xlat
sahf
adc
cmp
decl
xlat
sub
repz
jp
dec
sbb
lret
out
pop
and
xor
out
out
unpcklps
push
in
and
jl
loope
jo
aam
fimull
push
ret
mov
ficomps
insb
lea
adc
inc
and
pop
cli
loop
push
adc
in
imul
mov
jle
inc
fsubr
adc
sbb
dec
mov
mov
adcb
aas
shrl
and
sbb
sub
fsubs
out
test
das
dec
and
lahf
test
std
xor
dec
xchg
fcoms
fdivl
jp,pt
push
es
into
push
or
dec
lods
imul
pop
addb
aam
insl
inc
jl
js
fcompl
ds
add
sub
dec
xlat
cld
cmpl
filds
cmp
in
cmpsb
push
cmp
scas
sbb
imulb
ficoml
js
sub
outsb
add
idivl
add
mov
sahf
or
mov
cs
out
push
mov
int3
dec
pop
in
aam
into
jle
dec
push
adc
cmp
dec
out
rorl
mov
dec
fwait
adc
and
pop
addr16
inc
dec
mov
mov
cmc
push
dec
cltd
dec
mov
inc
adc
into
pop
add
dec
adc
std
test
push
mov
fadd
dec
testl
ljmp
lahf
std
dec
orb
xlat
iret
subb
inc
punpcklbw
outsb
cmp
and
popa
lahf
mov
pop
mov
into
jb
mov
into
sub
icebp
shlb
popa
inc
xchg
push
or
pusha
rolb
ja
dec
cltd
jbe
xchg
lock
popa
inc
mov
push
bound
pop
push
push
stos
adc
fldenv
lock
and
sub
push
xchg
inc
mov
shl
jle
ror
inc
fwait
cmp
insl
fwait
inc
aas
jg
and
push
out
xchg
lahf
std
inc
cmp
int
pop
mov
aaa
movsl
stc
pmulhuw
dec
xlat
xor
lds
adc
jle
out
cmp
sub
pop
xchg
movb
fsubrl
pushf
aaa
xor
int3
xchg
xor
pop
fs
push
xor
push
inc
imul
ret
push
dec
xchg
mov
mov
inc
sub
rcl
ret
sbb
mov
and
dec
enter
mov
cmc
dec
movsl
clc
leave
inc
mov
stos
mov
pop
mov
cmp
dec
lahf
mov
pop
sahf
icebp
dec
sub
and
cld
dec
cmp
jg
cmpb
insl
fldenv
je
jge
jbe
mov
cld
sbb
sub
jnp
push
lret
clc
in
mov
mov
sub
decb
das
dec
lea
xchg
movlps
pop
sub
cs
or
fsubrl
movsw
add
dec
leave
dec
adc
xchg
ljmp
shlb
das
dec
jne
into
sbb
pop
cmpsb
dec
jb
lock
add
lahf
dec
int3
or
js
shlb
inc
stos
aaa
mov
sbb
loop
and
mov
ret
dec
cmc
mov
jbe
dec
iret
or
out
adc
mov
aam
in
scas
inc
mov
adcl
iret
dec
es
jecxz
lret
sub
cmpsb
stos
dec
in
outsb
push
pushf
fiaddl
ret
out
mov
pusha
into
mov
fstpl
or
out
hlt
fsts
dec
xchg
add
pop
xor
dec
fisttpl
xor
call
dec
enter
adc
or
dec
aam
mov
cmp
leave
adc
and
pop
xchg
cmp
lods
mov
push
inc
xor
dec
push
or
cmc
fs
dec
gs
rorl
push
jle
xchg
stc
dec
bound
mov
iret
and
dec
jae
push
jecxz
mov
xchg
dec
ds
and
sbb
dec
adc
loop
sub
lods
dec
mov
mov
rorb
mov
clc
adc
adc
and
dec
pop
sub
push
inc
jns
mov
fbstp
xchg
jb
iret
mov
sbb
jg
jbe
daa
adc
outsl
iret
insl
sar
stos
inc
mov
and
and
loope
outsl
inc
fsubp
xor
repz
not
in
lock
inc
jno,pn
cmpsb
ficompl
dec
flds
xor
gs
mov
pop
test
int3
dec
in
rorb
dec
sub
dec
mov
in
loopne
dec
lods
sbb
mov
fwait
scas
inc
sbb
nop
dec
lret
mov
dec
iret
mov
sub
cmp
lahf
loopne
filds
into
and
add
or
pop
std
push
xor
adc
xlat
out
fbld
loopne
gs
mov
mov
pop
dec
loope
sti
icebp
mov
or
jbe
xor
sarb
push
adc
addr16
dec
ja
sub
outsb
mov
out
std
or
mov
push
loop
xchg
into
movsb
dec
sbb
xchg
or
inc
repnz
or
mov
mov
nop
mov
adc
push
shrl
xchg
sub
mov
pop
inc
test
mov
sbb
lcall
rcrl
fidivs
fisubs
mov
sub
inc
mov
jle
popf
push
lds
dec
inc
or
and
dec
adc
mov
dec
sbb
jo
jmp
fsub
jno
mov
mov
mov
pop
orl
ret
add
or
lods
jns
push
xchg
jmp
add
dec
add
jp
or
push
xor
jns
push
mov
adc
mov
and
aas
jae
dec
adc
jb
into
jnp
sbbb
xchg
sub
or
aaa
int3
push
in
jg
pop
fiadds
sub
loopne
fwait
dec
dec
add
arpl
push
push
sbb
mov
xlat
daa
out
mov
add
push
mov
xchg
and
dec
push
add
dec
mov
lock
repz
sub
jl
jno
imul
mov
stc
cld
pop
push
mov
xor
sub
ljmp
cmp
jo
loopne
mov
and
and
mov
ficoms
add
aaa
mov
or
dec
inc
sub
fwait
adc
cmc
stos
out
aaa
dec
bound
dec
add
dec
push
stos
jle
pop
and
daa
dec
pop
cmpsl
pop
data16
dec
add
cmp
das
mov
push
pop
cmp
mov
mov
dec
lds
lret
push
pushl
sub
jl
rcr
jmp
cmc
stos
scas
popa
cld
mov
std
hlt
nop
ret
ficompl
in
xor
pop
fidivrs
sub
mov
ficomps
adc
jl
popf
xchg
push
int3
jmp
xchg
pop
shrb
insb
mov
lcall
icebp
iret
pop
das
push
jg
daa
cltd
divl
xor
sbb
dec
aas
cmpsl
or
mov
decb
jmp
sbb
cmp
int3
pop
mov
cmp
aaa
jle
mov
and
pusha
dec
jo
sub
add
and
sarb
scas
outsb
loop
push
sub
pop
insl
jns
push
cli
mov
rorl
add
inc
sbb
shrb
push
sub
in
mov
inc
lret
fwait
cmc
dec
mov
sbb
push
sub
fbstp
dec
sbb
lret
jo
dec
cmpsb
or
pusha
sarl
dec
adc
cli
mov
mov
pop
test
shr
repnz
dec
stos
movsl
shrb
push
inc
cmpsb
inc
ljmp
daa
dec
orl
push
sti
and
push
sbb
inc
add
push
mov
rcll
dec
dec
mov
shll
xchg
dec
jo
sbb
testl
sbb
addr16
test
push
adc
dec
pop
adc
adc
mov
mov
lods
inc
dec
xchg
rorb
lret
stos
dec
loope
rcrb
dec
repz
test
das
pop
cmp
mov
loopne
sahf
cwtl
call
js
xor
dec
jp
addr16
and
sub
mov
fdivrs
outsl
lods
outsb
cmp
dec
cmc
adc
dec
popa
mov
and
arpl
or
dec
cmp
into
sbb
push
inc
xor
enter
daa
mov
cld
dec
cmp
adcl
inc
or
pop
dec
out
xchg
sbbb
cmpsl
in
sub
inc
hlt
out
cmp
cwtl
cld
push
dec
aaa
jbe
pop
repnz
sbb
mov
inc
into
cs
dec
popf
call
dec
sbb
mov
pop
cwtl
and
push
dec
jp
das
or
xchg
cli
sub
dec
cs
lock
test
dec
aaa
popa
dec
mov
dec
lahf
or
push
push
jns
fldcw
dec
pusha
lret
adc
xchg
adc
adc
dec
test
push
mov
cmpsl
clc
or
inc
dec
jg
xlat
stos
mov
movsb
in
outsb
xchg
push
clc
dec
fs
loop
push
mov
test
fmul
sbb
adc
xchg
ret
xor
jge
rcrb
jg
jmp
dec
loop
mov
jmp
dec
sbb
inc
dec
std
mov
bound
stos
dec
into
xchg
mov
dec
or
in
std
dec
sbb
lret
das
rcr
inc
and
pop
dec
dec
dec
xchg
xor
mov
cwtl
decl
lds
push
dec
andl
dec
sub
lock
lea
pop
je
inc
adc
popa
bound
mov
outsb
add
fimull
ss
dec
dec
pusha
aad
sti
cld
movsb
leave
adc
mov
cmpsb
js
orb
sbb
clc
rolb
shlb
mov
int3
clc
xchg
dec
aaa
adc
sahf
jo
shll
into
jne
sbb
dec
rorl
fsubp
sub
adc
sub
push
dec
cmpsl
add
and
and
dec
scas
aam
in
dec
cmp
add
pusha
push
xchg
inc
es
adc
mov
arpl
dec
aas
in
fisttpl
inc
repnz
dec
insl
lds
inc
xchg
cmc
inc
hlt
push
dec
ljmp
xlat
and
out
mov
fwait
push
outsl
mov
push
inc
jecxz,pt
dec
cmovp
cmpsb
jno
mov
fstpt
sbbb
pop
jo
dec
inc
jae
mov
jmp
icebp
fnstsw
push
lcall
mov
rcll
dec
lret
lcall
dec
stos
ja
jmp
scas
push
or
xchg
rorl
iret
gs
outsl
data16
xchg
inc
sti
aaa
sbb
dec
cmc
les
shll
mov
sbb
push
shlb
aas
pop
inc
test
out
and
cmp
insb
push
xchg
xchg
pushf
sbb
into
pop
adc
dec
push
cmp
ret
push
xchg
and
push
cwtl
aam
fmull
push
cmp
pop
dec
lods
or
pop
shr
hlt
mov
dec
in
das
scas
stc
adc
dec
adcb
stos
into
dec
int
push
mov
jb
mov
stc
mov
das
inc
add
icebp
aam
mov
nop
inc
mov
cmpxchg
scas
adc
cwtl
jle
add
xchg
ljmp
push
imul
sub
out
iret
mov
gs
add
pop
test
mov
dec
or
mov
hlt
mov
hlt
xchg
jb
mov
xor
xchg
dec
jno
push
xchg
aam
jl
xor
xchg
pop
les
mov
into
je
or
dec
in
inc
add
cs
or
jle
pop
xchg
pop
pushf
push
lods
fwait
scas
out
jo
fwait
sbb
das
dec
jg
dec
ljmp
xchg
movl
test
sti
and
xchg
lods
pop
jl
insl
lock
jle
mov
lock
dec
adc
leave
mov
sub
jns
nop
cmp
xor
xchg
dec
into
shl
idivl
push
shll
push
test
daa
out
xor
and
cmp
dec
sarb
scas
mov
xchg
xchg
cli
lret
lahf
out
mov
cmp
dec
js
and
in
xchg
sti
dec
add
xor
loopne
dec
loop
mov
mov
mov
stc
nop
aas
cmp
adc
dec
pusha
cli
add
sbb
dec
mov
or
cmpsl
push
mul
inc
shrl
sub
dec
fnsave
insb
sub
or
xchg
sub
aaa
fdivrl
and
dec
xor
insb
mov
shlb
pop
pop
dec
cld
mov
xor
mov
dec
adc
orb
jnp
cmp
sbb
shrb
dec
pop
adc
fs
mov
fimull
out
dec
data16
fnsave
or
lahf
popl
out
inc
stc
lret
pop
inc
leave
into
cli
adc
insl
dec
out
and
shlb
dec
lcall
pop
dec
xor
cmp
jnp
xchg
inc
dec
xor
iret
jae
adc
dec
xchg
jno
jmp
pop
xor
imul
out
cwtl
fisttpll
ja
fs
jle
notl
jp
and
adc
push
cld
inc
cmp
imul
and
rol
into
sbb
enter
test
adc
cs
cs
scas
and
iret
jl
mov
shlb
xchg
inc
or
pop
mov
pop
repnz
inc
dec
ss
popa
repnz
loope
outsb
sub
push
adc
mov
aaa
addr16
push
outsl
mov
cmc
xor
lock
mov
dec
sbb
xor
xor
or
test
push
push
adc
adc
std
das
fisubl
mov
and
mov
rolb
xchg
int3
jmp
repz
push
fdivp
ljmp
push
inc
push
xchg
hlt
adc
movsb
ficoms
test
int
ja
xor
dec
xchg
push
sbb
dec
mov
mov
repnz
js
inc
and
xchg
cmp
mov
div
sub
mov
sbb
shrb
fbld
push
push
fdivs
aaa
aam
in
int
xchg
mov
lock
aaa
pop
jno
mov
fs
pop
ds
cli
lods
pop
mov
adc
ljmp
push
dec
xor
fld
dec
or
add
dec
repnz
int
lods
jl
dec
cmp
or
push
dec
add
jnp
aam
pushf
adc
inc
xor
rcrl
out
stc
cs
out
inc
mov
mov
sbb
mov
mov
pop
xor
int
add
adc
call
adc
nop
jg
pop
pop
mov
sti
dec
mov
push
cmp
dec
std
in
ds
fstpt
cmpsl
lcall
test
pop
pop
dec
daa
stos
insb
inc
or
dec
aaa
jl
dec
fcmovnb
daa
hlt
sbb
call
jp
cmpsb
rorl
pop
mov
fldt
test
inc
jl
lahf
out
int
add
fcmovne
dec
nop
sbb
cmp
inc
pop
pop
dec
pop
push
xor
jae
out
outsb
repz
mov
dec
add
jmp
lahf
ret
dec
dec
repz
mov
sub
xor
mov
iret
or
xchg
dec
test
outsl
fwait
xchg
popf
out
rorl
add
jae
xor
pop
mov
lods
fisttpl
adc
cmp
dec
sbb
fimuls
lods
cmpsb
loopnew
jae
dec
pop
pop
fcomip
sahf
xchg
push
and
sbb
mov
int3
inc
xchg
dec
adc
push
stos
dec
scas
mov
into
movsb
dec
or
pop
ret
insl
mov
add
iret
mov
or
pop
and
add
jne
pop
cmp
insb
dec
roll
sbb
lret
cli
dec
mov
lds
in
adc
dec
enter
and
inc
push
pop
and
fnstsw
dec
lods
pop
bound
les
cmp
add
iret
xor
std
mov
cwtl
adc
outsb
lock
dec
lcall
pop
inc
add
xchg
iret
push
int3
mov
mov
adc
fiadds
sbb
and
sahf
xor
test
dec
mov
dec
loopne
cmc
xor
mov
fisubl
pop
push
sub
es
mov
movl
test
inc
data16
mov
subb
popf
in
test
stos
outsb
adc
jb
repnz
jae
into
cmp
ds
push
cmp
sub
push
fistpll
jg
arpl
and
and
cmp
xor
lea
jnp
pop
push
jnp
sbb
fimull
aaa
leave
iret
or
add
jnp
addr16
push
lret
sbbl
shrb
cs
xor
fs
adc
mov
mov
das
xor
outsb
mov
outsl
ja
call
cs
lds
mull
imul
neg
and
fnstsw
pushf
push
sub
scas
jnp
jo
dec
imul
pop
xchg
dec
in
loope
push
cwtl
inc
and
pop
dec
or
sti
xchg
outsl
scas
sbb
les
cmp
scas
mov
out
mov
add
dec
xor
dec
jne
jg
leave
dec
hlt
pop
out
mov
dec
dec
xchg
inc
inc
jae
xchg
idivl
add
push
dec
xchg
addr16
and
dec
mov
mov
fxtract
jbe
sbb
push
dec
xor
jmp
inc
mov
xor
div
jl
mov
and
jp
aas
jg
loop
lret
adc
dec
popa
push
xlat
inc
push
jle
js
test
gs
pop
jl
ds
dec
jg
and
fldl
shlb
rolb
loope
insb
rclb
out
mov
nop
sub
push
dec
into
and
cmp
les
xlat
lcall
rorb
mov
les
adc
add
pop
push
ret
jg
xor
imull
pop
pop
push
add
cli
je
pop
std
dec
mov
fwait
jl
or
popf
dec
incb
and
stos
jns
cmp
test
cmc
add
xchg
xchg
mov
stc
push
mov
test
in
ficomps
cmpsb
and
fsubl
filds
or
loop
es
and
jae
mov
dec
aam
lcall
arpl
pop
and
xor
dec
in
loopne
adc
inc
jo
ss
int
xor
mov
sti
mov
mov
nop
or
out
stos
dec
daa
adc
mov
dec
insb
push
movsb
jl
xor
jo
in
xchg
cli
dec
gs
ja
push
push
inc
pop
jle
das
clc
data16
xor
lods
dec
lcall
mov
add
push
mov
imul
sub
jge
das
gs
gs
mov
lds
xchg
bound
pop
sub
rol
jl
mov
scas
add
addl
movsb
icebp
mov
add
jmp
mov
movsb
mov
jg
pop
enter
sub
cmpsb
sbb
scas
js
out
icebp
jo
cmpl
ficoms
dec
xor
jg,pn
and
xchg
pop
data16
cmp
add
jge
pushl
xchg
xor
jl
data16
mov
mov
cmp
mov
mov
lods
and
cmp
mov
movsb
sub
insb
or
clc
mov
and
sub
rcll
arpl
adc
push
pop
push
and
mov
das
gs
jl
cltd
es
daa
mov
cli
popa
xchg
inc
xor
outsb
inc
mov
movsl
or
xchg
aaa
inc
jb
add
out
pop
mov
add
das
add
cmpsl
sub
cmp
sub
out
and
push
fistpl
aaa
pop
adc
dec
adc
movsb
dec
push
inc
push
jmp
decl
mov
movsl
sbb
mov
mov
xor
inc
cli
mov
lods
dec
pusha
jl
sub
pop
sub
adc
and
and
lods
test
notl
ret
mov
stos
cmovb
mov
aaa
call
push
xlat
int3
outsb
ret
outsb
jmp
cmc
sbb
fistpll
add
repnz
cmp
cltd
test
mov
dec
mov
xor
adc
enter
leave
mov
fsubrl
movsl
lods
add
inc
jnp
adc
inc
scas
sub
insl
frndint
pusha
daa
and
mov
lock
lock
pop
add
push
cmpsl
arpl
movb
mov
jno
dec
cmp
inc
stos
lea
cli
das
imul
dec
mov
mov
inc
dec
jmp
pop
fsubr
cmp
xor
push
pop
jne
push
je
clc
cld
sub
pop
repz
mov
blcfill
push
dec
pop
es
cmp
inc
les
inc
inc
fidivrs
push
mov
div
movsl
clc
pop
sbb
jl
jne
jno
mov
sahf
dec
popf
inc
pop
add
dec
cmc
dec
cmp
hlt
dec
jae
sub
mov
aaa
dec
and
outsl
orl
subl
xlat
or
outsl
cmp
mov
push
cs
rcrl
pop
popf
and
xchg
hlt
push
and
mov
in
mov
cmp
mulb
ret
out
jno
add
add
push
xlat
inc
inc
jnp
ja
sbbl
mov
test
push
repz
mov
jle
cmp
out
cmpsl
bound
mov
jle
or
shll
aad
pop
icebp
adc
outsb
lock
xchg
sbb
push
das
and
popa
in
cs
jle
fidivs
fsubl
lds
fwait
push
sub
cmp
lock
jb
cmpsl
fstpt
adc
xchg
cs
inc
icebp
pop
dec
bnd
cld
test
pop
call
es
push
mov
add
daa
fimull
test
loop
sub
mov
xor
in
clc
stc
mov
sti
mov
mov
outsl
and
and
adc
imul
insl
out
aas
mull
popa
cld
ja
dec
push
pop
icebp
jge
popf
addl
push
cmp
push
test
out
dec
cmp
pop
jbe
clc
push
pop
sub
in
lods
or
inc
mov
cmp
leave
arpl
testb
loope
popa
bswap
jg
mov
inc
fnsave
lock
adc
fucomp
loop
lret
pop
idivl
fsubrs
rcl
stos
adc
jnp
sbb
xlat
push
and
loopne
testl
lock
xor
push
adc
inc
adcl
rcr
sub
fbld
je
dec
js
ljmp
xor
push
add
cld
mov
daa
aaa
and
push
and
mov
rolb
push
fbld
lock
cmpl
pop
fnstenv
shl
iret
cmpl
pop
hlt
adc
add
test
or
mov
test
jb
dec
leave
ljmp
dec
shll
std
addr16
ja
lods
jno
dec
test
sub
cmp
or
push
xor
cld
ret
sbb
pop
mov
bound
xor
dec
scas
aad
sub
dec
sti
mov
fs
dec
das
or
push
fnstcw
outsb
imul
lahf
lods
and
loopne
mov
int3
dec
leave
mov
add
pop
sub
sti
shlb
stos
pop
mov
bswap
rorb
rcll
mov
pusha
jo
mov
mov
lock
fstpt
int
andl
xor
add
cmp
adcl
xchg
shlb
and
xor
cwtl
mov
movsb
icebp
add
in
pop
or
dec
jg
xor
sbb
iret
dec
bound
inc
or
stos
test
pushf
nop
sub
out
mov
mov
jmp
rcrb
or
out
cmc
push
push
fiaddl
jae
xor
add
cmp
cmp
stos
lret
push
psrlq
fdivrp
cltd
push
imul
out
out
push
jle
jle
and
jecxz
dec
mov
dec
dec
jo
or
xor
jnp
cmp
push
lea
jge
pop
inc
clc
cmp
fnsave
ss
aam
jle
shlb
pop
mov
mov
ja
inc
lar
mov
push
jns
push
sub
aaa
stos
adc
dec
push
adc
movsl
dec
fisttpll
jp
mov
adc
outsl
pop
cmpsl
add
mov
incb
stc
dec
sub
push
aaa
or
lock
leave
mov
jle
lea
loop
neg
mov
in
lods
xchg
push
xchg
and
dec
cwtl
mov
mov
sub
inc
lcall
fwait
pop
in
inc
arpl
lahf
inc
scas
psubq
add
repz
adc
cli
pop
mov
cmp
jmp
dec
inc
repz
shrb
dec
dec
dec
xor
das
adc
push
add
loop
jne
dec
data16
jmp
sub
movb
fs
aaa
mov
sub
xchg
pop
sbb
and
xor
inc
nop
addb
in
push
xchg
sbb
inc
ja
std
fcoms
popf
fstpt
sahf
mov
dec
sub
loope
les
je
dec
xchg
insl
scas
nop
adcb
scas
dec
shr
xchg
js
in
dec
iret
fisttpll
rorl
movsb
sub
icebp
and
es
sbb
out
adc
aas
popa
sbb
sarb
imul
ret
fdivrl
or
ds
jbe
dec
mov
lea
dec
into
cmp
adc
push
stos
das
mov
inc
and
ja
cmp
and
aas
xor
pop
inc
jge
xchg
xlat
lcall
fldenv
out
dec
clc
push
lret
mov
pop
jg
btc
jmp
adc
sub
iret
out
insl
test
mov
dec
mov
std
dec
mov
sbb
xor
or
dec
jo
push
jbe
dec
data16
mov
icebp
dec
lret
imul
popa
addr16
scas
mov
sbb
dec
mov
movsb
imul
jne
xchg
outsb
mov
jb
imul
add
dec
fisubs
shl
jbe
dec
sahf
les
lret
and
pop
xor
adc
xor
dec
in
mov
mov
jae
hlt
dec
cs
and
adc
lret
and
out
mov
xor
mov
call
insl
das
dec
out
scas
dec
addr16
fimull
fldenv
int3
push
inc
cli
adc
pop
iret
popf
hlt
jnp
aaa
fisubl
and
adc
aaa
cmc
jl
mov
jg
inc
or
roll
xor
fst
dec
mov
cmp
pop
fimuls
jg
shrb
cmp
pop
cmp
push
fists
sarl
shl
inc
int
cmp
test
sub
mov
push
jmp
jl
test
cmpsb
inc
rcl
and
pop
xchg
inc
and
adc
or
xor
in
jle
or
lea
js
sub
dec
lret
lds
xor
adc
sbb
cmp
jg
mov
stos
or
inc
dec
lcall
repnz
push
fisttpll
es
lret
or
pusha
push
xchg
cmpsl
enter
bound
inc
cmpsb
dec
push
gs
xor
in
daa
and
fs
and
arpl
pop
push
js
cmp
sahf
mov
aas
jl
je
pop
cli
mov
add
hlt
push
cmpsb
sbb
xchg
dec
pushf
jle
pop
push
icebp
xor
mov
dec
scas
pusha
mov
scas
jnp
jne
inc
adc
hlt
and
sbb
dec
mov
and
xchg
cmp
inc
imul
or
stos
mov
test
clc
pop
fbstp
jecxz
and
dec
jns
negl
cmp
adc
rcl
xor
or
inc
shrb
lds
aaa
test
inc
add
mov
pushf
mov
repnz
hlt
in
scas
stc
xchg
push
push
aaa
dec
jge
ja
mov
add
mov
cmpsb
add
insb
pusha
dec
mov
int
xor
adc
fisttpll
and
push
lods
fmuls
test
xchg
mov
xchg
mov
add
and
pushf
lods
dec
es
jnp
dec
andb
add
mov
je
pop
mov
iret
ljmp
ds
xorl
insb
sahf
push
dec
in
out
adc
adc
iret
and
add
ficoml
lock
int
dec
xor
dec
stos
xchg
in
les
push
roll
push
push
lods
adc
xchg
aam
push
dec
push
sti
pop
in
leave
insb
ss
iret
push
mov
mov
mov
movsb
shld
es
into
int3
jge
xchg
cmp
aaa
xchg
or
rorb
dec
fs
mov
mov
icebp
xor
aaa
and
outsb
fimull
adc
iret
sti
push
pop
addr16
fnstenv
dec
push
iret
loop
in
aam
mov
nop
ret
xchg
inc
xor
add
add
xchg
cli
add
add
dec
push
outsb
push
push
aad
jge
xor
cs
mov
mov
stc
bswap
xor
movb
dec
popa
xor
mov
enter
nop
fcomip
fs
inc
cmp
sub
push
stc
cltd
push
jl
mov
pop
lret
xchg
dec
push
je
mov
out
sbb
mov
xor
in
pop
pop
jg
sbb
scas
inc
testl
lods
in
push
icebp
iret
xor
scas
sahf
jle
jns
jp
inc
pop
js
xchg
sahf
add
push
xchg
mov
dec
and
and
pop
cmp
jg
mov
xchg
jno
pop
movsb
push
js
leave
xchg
cmp
in
cmp
push
in
push
push
movsb
cmp
ret
int
mov
mov
dec
sub
sub
xor
inc
test
fidivrs
mov
sub
jl
scas
mov
icebp
ds
sub
push
jl
sbb
pop
jl
sub
fisubrl
xlat
out
test
mov
int3
out
add
push
jle
es
in
int3
sbb
idivb
xchg
xchg
out
test
pop
and
jmp
push
or
fsubrl
sub
xchg
lea
mov
cmp
jl
por
add
dec
pop
cs
inc
pop
jle
stos
mov
pop
pop
xchg
sarl
mov
adc
in
jl
pushf
and
in
mov
test
test
cmp
pop
loopne
notl
dec
lret
adc
stos
jb
mov
dec
xlat
loop
ljmp
adc
sti
mov
and
jge
or
out
cmc
pop
fisubl
jle
rol
daa
push
int3
jmp
movsb
mov
xchg
cmc
push
mov
cmp
cmp
dec
in
push
cmp
ret
pop
out
shlb
pushf
fsubs
jno
into
adc
push
or
pop
jg
imul
jae
lahf
cmc
xchg
add
aas
sti
or
sub
jmp
xor
daa
repz
dec
les
add
bound
inc
and
or
or
out
stos
fisubs
dec
icebp
cmp
pushf
movsb
xchg
loopne
jbe
test
stos
push
mov
mov
pop
jmp
inc
lock
pop
sbb
loopne
sub
xor
dec
pusha
rcl
mull
xor
out
mov
and
dec
sbb
fs
ljmp
mov
icebp
ret
mov
je
fsubrp
dec
mov
sub
dec
es
adc
addr16
outsl
mov
loope
inc
bound
sbb
mov
mov
movsl
lahf
scas
pop
dec
jnp
call
out
add
fidivs
btr
fdivp
xchg
imul
add
dec
mov
mov
xor
jae
xchg
sub
sub
push
dec
test
fdivl
xchg
dec
mov
pushf
int3
dec
ret
push
sub
int
adc
aam
aad
dec
xor
popf
iret
stc
push
dec
push
mov
movsb
jg
cmp
rcrl
mov
xor
mov
je
mov
cmp
lea
mov
repz
xchg
outsl
repnz
xorl
outsb
jae
mov
shl
sub
mov
jl
outsb
adc
dec
sub
jg
jb
imul
add
out
push
mov
push
fcoml
into
in
data16
and
push
out
repnz
jge
jns
mov
lea
rcl
sbb
mov
aaa
add
mov
dec
stos
mov
pushf
sbb
sub
notl
push
inc
das
test
push
xchg
orl
mov
loopne
test
add
dec
test
pop
out
les
daa
lds
dec
iret
mov
jge
int3
pop
mov
xor
imul
xlat
shll
insb
inc
xchg
and
inc
mov
movsl
inc
or
outsb
clc
pop
xchg
add
icebp
cmp
mov
ret
pushf
test
sbb
sub
jg
mov
mov
add
stc
ljmp
or
aaa
xchg
inc
lret
sub
pop
shrb
pop
push
mov
ds
jecxz
adc
sahf
ret
in
ret
repnz
mov
subl
lea
lcall
xor
out
enter
into
clc
movsl
ja
jl
add
add
sub
xor
scas
dec
shrl
xchg
subl
mov
push
addr16
in
inc
xchg
adc
out
or
pop
dec
stos
and
mov
ja
popa
inc
pushf
loope
gs
loopne
pop
adc
mov
jo
pop
dec
shll
xor
sub
aad
std
pop
add
xor
mov
dec
je
int3
cld
loopne
jmp
into
fnsetpm(287
push
and
xor
fildll
sbb
push
jp,pn
aaa
into
jg
push
dec
and
jnp
xchg
sahf
outsl
pop
sbb
dec
add
mov
dec
dec
xchg
push
pop
pop
dec
xor
dec
rcrb
cmp
dec
sub
subb
pusha
int3
iret
in
rcrb
dec
jne
and
jnp
aad
dec
dec
fistl
pop
sub
das
dec
mov
decb
xchg
inc
xor
outsb
mov
das
jmp
fists
cs
cmpsb
jle
out
mov
inc
lods
lods
int
cmp
insl
mov
push
push
fwait
xlat
xor
pushf
pop
dec
mov
hlt
xor
jg
dec
jp
leave
ret
cli
adc
shll
jmp
or
sub
push
adc
outsb
push
aam
andl
loop
lods
js
dec
inc
leave
and
or
sahf
test
imul
cmp
push
cs
das
mov
sbb
mov
repnz
aam
lret
clc
ss
sbb
into
mov
test
fs
cwtl
push
and
pop
xchg
lcall
cmc
out
lods
mov
cmp
ret
xchg
ja
cmp
popa
adc
sbb
jl
xorb
xor
or
sub
sbb
jl
dec
idiv
out
xchg
cwtl
pop
and
xor
movsl
xor
idivl
cmp
add
xor
movsl
aad
push
fwait
outsb
daa
aas
jae
dec
xchg
pop
jmp
mov
arpl
jno
ret
sbb
aaa
xchg
sub
fistpll
push
inc
add
ds
popf
dec
mov
mov
dec
or
jecxz
ljmp
dec
xlat
jg
xor
cmp
or
out
lock
pop
xchg
jge
scas
mov
mov
sbb
inc
aam
shr
jg
sub
data16
xchg
adc
inc
rcrb
pop
adc
mov
iret
loope
clc
dec
pop
xchg
sbb
das
jl
lods
inc
ret
mov
jle
xchg
out
push
dec
ret
outsl
fwait
xchg
jmp
adc
mov
jae
add
xchg
and
inc
mov
cs
fidivl
out
jl
into
xlat
xor
mov
cli
outsb
sbb
xor
mov
and
dec
or
stos
mov
inc
cwtl
jle
dec
popa
pop
jecxz
subl
xor
rorb
shlb
test
pop
call
les
mov
sbb
inc
pop
lret
or
push
xor
and
loop
fs
inc
jne
pop
mov
shlb
test
dec
jle
mov
jo
mov
cmc
jle
arpl
loop
fldcw
stos
and
lock
scas
std
or
adc
pop
shll
or
adc
add
fildll
shrb
jbe
fmul
pop
clc
add
dec
lods
loope
xor
lret
dec
lahf
or
inc
dec
cmpsl
cwtl
movsl
ret
jno
add
jmp
je
aad
sbb
dec
icebp
dec
mov
out
push
jmp
mov
mov
push
dec
mov
jo
dec
dec
rorb
sub
xor
push
and
push
adc
xchg
dec
fsubrl
inc
xor
dec
or
cltd
pop
dec
push
rcll
mov
iret
adc
and
sti
addr16
jl
xchg
push
pop
pop
fdivp
pop
push
mov
fbld
cmp
pusha
fcomp
out
repz
lret
push
pop
mov
popf
cmp
cmp
lcall
and
mov
std
adc
fdiv
cld
adc
or
and
adc
push
inc
dec
and
mov
test
xor
ret
fs
push
stos
jno
mov
inc
pop
jae
sub
jg
pop
mov
dec
fbstp
xor
fmull
mov
lcall
dec
gs
push
jmp
cmp
mov
push
cmp
mov
adc
stos
andb
icebp
inc
movsl
mov
mov
sbb
add
int
pop
rcrb
cwtl
jle
inc
int3
stos
scas
loope
mov
arpl
xchg
orb
lock
dec
adc
icebp
and
or
inc
jp
adc
or
jge
push
cmp
stos
fsub
dec
test
jne
sahf
sub
jb
insb
inc
mov
mov
cmp
ja
into
push
ret
dec
aad
mov
das
adc
pop
outsb
clc
fwait
dec
mov
ss
into
dec
pop
pop
xchg
sub
ficompl
adc
adc
jge
decb
ret
cld
data16
mov
mov
jb
or
lea
fst
dec
mov
pop
out
jge
filds
dec
stc
mov
ds
roll
xor
xchg
dec
shr
ret
cmp
lods
std
sbb
cld
dec
push
frstor
scas
les
mov
test
dec
imul
or
dec
sarl
js
call
sbb
dec
jp
cmp
std
aaa
inc
inc
pop
jae
jo
push
or
inc
lock
mov
inc
dec
sbb
mov
dec
add
call
dec
out
mov
bound
mov
dec
scas
outsb
nop
sbbb
cmp
in
jg
fsts
jle
je
jge
cld
lods
lret
push
rcrb
push
adc
add
and
dec
jbe
push
jecxz
jp
out
ret
jmp
sub
movl
dec
adc
into
in
jae
popa
shll
rorb
hlt
mov
aas
or
dec
fs
dec
push
jmp
xchg
test
cmp
adc
dec
lret
mov
cmp
lock
ffree
fbstp
stc
xchg
mov
shll
mov
xchg
cmp
pmullw
xor
mov
xor
add
or
and
xor
sub
mov
aaa
dec
imul
push
pop
cmp
fwait
sub
mov
and
ljmp
push
push
or
les
adc
jl
xor
or
inc
cmp
jp
inc
arpl
push
sbb
dec
popf
outsb
pop
nop
pop
dec
cmp
xchg
push
decl
addl
sahf
fmuls
aaa
data16
mov
sub
aad
lods
div
xchg
fwait
rorb
fimuls
scas
int
outsb
cmp
dec
inc
mov
popf
cmc
sub
add
out
cmp
out
pop
sbb
push
in
pop
dec
push
iret
push
lea
xchg
sbb
pop
shlb
into
nop
loope
nop
xor
mov
outsb
daa
xor
sahf
xchg
rorl
popf
xlat
jle
insb
dec
mov
dec
sbb
sub
loopne
dec
jne
lds
push
dec
push
scas
dec
adc
repz
movsb
dec
dec
mov
dec
adc
push
jbe
jmp
push
mov
xchg
push
dec
sub
lahf
jl
push
adc
loopne
push
out
adc
mov
dec
or
data16
or
sbb
xor
mov
cmc
jae
ss
sahf
iret
insl
sub
dec
out
repz
mov
decb
dec
adc
or
insl
sbb
roll
cmp
std
leave
inc
test
or
ljmp
dec
nop
push
outsl
jbe
aam
and
jns
fs
push
gs
pop
and
mov
xchg
popl
scas
dec
mov
repz
mov
lret
rolb
mov
fldl
and
pop
ljmp
xor
into
insb
sarb
xor
bt
loopne
sbb
xor
jmp
ret
mov
push
xlat
pop
or
and
mov
pop
xchg
dec
add
stos
dec
adc
adc
clc
adc
xor
mov
test
jge
add
repz
leave
xor
inc
insl
xchg
ss
sub
fnstcw
inc
imul
xor
dec
int3
leave
ljmp
outsl
xlat
rolb
leave
xchg
jno
insb
rcrl
out
pop
sar
mov
jne
xchg
fimull
shll
aas
push
lock
mov
jnp
inc
xchg
fmuls
xor
cmp
ret
xor
test
sub
lods
jb
dec
cmp
loope
dec
push
cmpsb
insb
hlt
pop
in
aaa
jg
faddl
pop
dec
push
les
gs
dec
test
mull
jge
test
bound
dec
negb
inc
xchg
jle
outsl
sub
and
and
into
repnz
stc
data16
xor
shll
and
fstpt
push
inc
dec
cmp
enter
xor
fcomps
outsl
test
inc
testb
ret
dec
ficomps
and
mov
and
mov
mov
fstpt
mov
xchg
add
jecxz
lahf
sub
test
popf
lcall
inc
jmp
dec
fwait
clc
mulb
adc
dec
cmc
and
mov
dec
movsb
xchg
mov
jmp
sbb
inc
sub
pusha
jle
call
adc
std
sub
cmp
fs
push
inc
loopne
bnd
xchg
dec
mov
add
mov
dec
into
xor
lods
out
shlb
cmp
mov
add
cmp
sub
fildl
push
pusha
inc
add
lock
jg
adc
loopne
adc
insl
push
inc
lahf
ja,pt
je
dec
push
add
mov
push
arpl
jne
jle
rcrl
outsl
divl
mov
iret
into
jnp
rcrb
outsl
leave
push
loope
adc
and
cmp
mov
mov
aam
aas
jl
mov
fldt
fnstsw
setae
inc
fimuls
lret
dec
jecxz
mov
cmpsb
dec
repz
adc
mov
sbb
pop
push
pop
fisttpll
mov
add
sub
sbb
shrb
in
xor
mov
cmp
sub
cwtl
xchg
mov
dec
mov
xchg
jns
lds
jb
add
adc
nop
add
lods
aas
mov
popa
mov
cwtl
lret
add
inc
xchg
pop
dec
repz
sbb
xchg
mov
push
in
jb
dec
movsl
popa
aam
push
mov
jbe
cmp
xchg
dec
jg
in
test
jle
ror
or
bound
mov
out
inc
in
add
push
filds
int
inc
push
push
clc
or
xchg
xchg
jne
push
sbb
mov
mov
xlat
mov
dec
dec
jg
inc
ds
loope
jle
outsl
mov
mov
imulb
mov
sub
jg
jb
inc
shlb
shl
push
jns
push
and
jle
rorb
lcall
cmp
jle
inc
repz
dec
push
mov
jp
or
loop
sbb
sbb
mov
movb
push
xchg
in
push
arpl
push
adc
cmp
dec
mov
sar
lret
sub
sub
and
adc
iret
scas
popa
mov
add
and
imul
std
adc
repnz
shlb
jecxz
mulb
lock
jp
mov
dec
sbb
lcall
cmp
cmp
cwtl
std
fwait
cld
jecxz
clc
xor
cmp
dec
jno
dec
inc
es
sbb
lds
rclb
cmp
ljmp
je
push
adc
pop
xor
hlt
sbb
lcall
les
pop
sub
mov
dec
dec
mov
pushf
push
xor
cwtl
dec
data16
inc
nop
inc
sahf
subl
rcll
inc
jb
outsb
scas
or
jnp
dec
cmp
mov
mov
repnz
cwtl
enter
rcll
shll
das
test
mov
rorl
mov
in
adc
insl
dec
lahf
gs
mov
pop
loopne
dec
adc
iret
lock
mov
arpl
hlt
outsl
add
pop
cmp
add
dec
push
das
pop
push
rolb
imul
dec
xchg
orb
lahf
sub
sub
push
adc
dec
xchg
or
xchg
add
dec
in
ret
jo
pop
inc
cmc
xor
push
sub
dec
shlb
loopne
aas
shrb
div
aaa
subb
mov
mov
or
in
sub
jno
stos
add
xchg
cmp
or
jle
aad
fs
fldl2e
xchg
cmp
adc
enter
cmpsb
dec
mov
adc
ret
inc
xchg
jl
xor
xor
mov
xchg
stos
scas
xchg
out
inc
jp
cmpsl
test
lahf
pop
gs
mov
pop
das
add
dec
aaa
jle
cli
mov
cs
ljmp
inc
adc
movl
psrad
daa
ffree
cs
mov
adc
pusha
lods
repnz
sbb
arpl
aaa
jbe
xor
shrb
rol
inc
cwtl
jg
inc
popa
mov
sarb
sbb
sbb
lcall
add
jmp
mov
sub
pop
push
cli
xor
dec
ficomps
rcrb
dec
aas
cmc
xlat
push
jno
dec
aam
jg
sti
fbstp
xlat
pop
inc
push
dec
pop
mov
dec
mov
push
sub
rcl
mov
dec
pop
or
pop
and
xchg
daa
inc
sub
test
jae
xchg
aas
aad
adc
mov
jle
pop
dec
je
mov
dec
xor
rorb
dec
jp
jg
lcall
enter
sub
dec
and
or
xchg
jle
xchg
and
lret
sub
dec
xlat
pushw
in
jb
nop
scas
out
adc
int
ljmp
iret
ds
xchg
xchg
sbb
dec
add
inc
fidivs
das
cmp
mov
add
mov
imul
push
and
adc
hlt
fwait
rcrw
pop
sub
cltd
pop
and
gs
jns
mov
int
test
loop
add
jl
mov
adc
sbb
push
shld
stos
sub
push
loopne
inc
xchg
push
addr16
out
sarb
push
add
outsb
pop
xchg
xchg
ljmp
in
das
stos
cmp
cmp
fs
mov
or
sbb
xor
and
ret
xchg
pop
add
lea
scas
inc
out
xor
cwtl
sub
and
sarl
shlb
push
mov
mov
lods
jp
push
or
add
es
xor
dec
stos
insb
hlt
jl,pn
gs
mov
add
jg
jecxz
lcall
jle
mov
mov
jmp
lods
cmp
repz
aad
pop
pop
cs
pushf
js
xchg
jle
jbe
ret
js
pusha
icebp
inc
push
cs
fstl
dec
popf
xor
pop
fildll
jp
and
cmp
lcall
cmp
cmp
scas
scas
jne
mov
dec
inc
aam
jl
movsb
or
xrelease
aaa
lock
sbb
jo
pushf
inc
ds
push
push
fimull
cmc
cltd
xor
lds
dec
mov
adc
pop
push
xchg
mov
xor
or
roll
into
jl
push
outsb
mov
aaa
xor
loopne
pop
inc
in
push
fdivl
jae
lcall
inc
jne
loopne
les
std
jnp
aas
jle
pop
subb
jmp
xchg
data16
repnz
jle
loopne
dec
dec
sbb
mov
adc
incb
add
aam
jnp
in
test
outsl
sbb
les
inc
or
inc
dec
lret
jne
ret
int3
sbb
jle
ja
pop
adc
jge
adc
fsub
lahf
mov
and
pop
mov
inc
adc
dec
in
scas
ds
gs
pop
scas
dec
out
enter
repnz
dec
mov
or
rorb
insl
jp
sbb
dec
cld
xor
adcl
stos
hlt
iret
shlb
adc
addps
xor
mov
dec
pusha
fistpll
cmp
add
and
dec
dec
je
lret
dec
scas
outsb
cs
rolb
or
dec
iret
lea
jae
push
rorl
rcl
std
mov
fidivrs
and
pusha
push
inc
es
jne
cmpsl
sbb
rcr
aad
or
cmp
test
push
aam
dec
call
jbe
xor
jb
fldl
imul
pop
pop
ficompl
dec
es
jle
pop
insb
lods
dec
or
icebp
xor
inc
sub
adc
adc
push
leave
dec
repnz
xchg
lahf
clc
or
push
int
sub
dec
add
stos
jns
lods
push
popa
repnz
faddp
push
jle
and
cmpsb
or
aas
out
jmp
pop
dec
hlt
pop
test
iret
add
int
out
pop
adc
cmp
negl
add
jle
add
inc
jl
imul
xchg
insb
xlat
dec
inc
jle
jne
movsb
jp
dec
mov
pop
xchg
loope
cltd
pop
mov
and
add
xchg
jle
mov
and
or
xchg
mov
mov
cmpsl
jg
mov
daa
mov
sub
push
adc
mov
das
add
std
xor
inc
mov
mov
mov
cwtl
push
mov
sbb
ds
push
lcall
sar
jl
ljmp
dec
pushf
movb
cmp
mov
mov
sbb
test
mov
jp
dec
stc
mov
dec
cwtl
push
outsl
xchg
inc
stos
or
sub
push
mov
xchg
add
dec
mov
outsb
imul
push
cld
cwtl
mov
or
aam
or
cmc
rcl
sub
sub
xor
lods
bound
push
pop
imul
jbe
enter
ret
sbb
addl
jb
std
inc
dec
push
scas
dec
daa
loope
nop
mov
pushf
adc
mov
jp
dec
add
icebp
mov
outsb
dec
sub
and
dec
dec
or
out
adc
incb
add
xchg
orl
pop
pop
imul
lds
int3
dec
mov
shll
cmc
push
push
out
mov
dec
pop
subb
sbb
dec
into
aam
daa
sbb
mov
inc
push
dec
mov
loop
dec
jbe
adc
das
sub
jne
loope
mov
dec
cmpsl
sbb
orb
cmpxchg
add
and
add
addl
outsb
fiadds
daa
out
jbe
or
dec
js
mov
push
xor
inc
mov
mov
into
xchg
filds
out
pushf
add
fstpl
mov
shrb
mov
inc
jle
rcrb
fnstenv
mov
vaddsubps
mov
aaa
pop
ljmp
popl
popf
dec
idivl
jl
and
xchg
outsl
ljmp
data16
cmp
mov
fidivrs
fwait
adc
mov
cs
push
mov
sub
in
je
or
sbb
rorl
mov
dec
ss
dec
push
push
mov
aam
lods
jg
adc
mull
lret
dec
int
and
jge
iret
mov
in
iret
cmp
das
xchg
jbe
xchg
test
minps
stos
bound
int3
xchg
pushf
ds
pop
andl
data16
cmc
add
cmp
xchg
and
push
dec
shl
sbb
pop
out
notl
les
push
ss
mov
fwait
std
mov
sahf
out
int3
and
fistpll
and
adc
sbb
and
and
adc
and
popa
cmpsb
shrb
lock
jl
pushf
pop
ja
shlb
inc
xor
mov
rcl
jge
xchg
or
outsb
mov
mulb
dec
icebp
jo
jns
sti
outsl
lds
lea
daa
adc
cmc
outsl
add
add
inc
cld
dec
pop
cs
jecxz
test
decb
jle
orl
lods
pop
add
pop
outsb
push
dec
and
rol
xor
or
orl
outsl
or
dec
jnp
lret
bound
fmuls
dec
pop
divb
xor
decl
push
push
dec
not
mov
aaa
out
adc
rorl
push
orl
push
das
dec
dec
decl
test
rorb
inc
or
cmp
ret
push
cmp
and
fldenv
mov
out
xchg
rcll
dec
jmp
sub
js
cmp
repz
dec
fisttpl
insl
sbb
sub
dec
mov
adc
dec
add
pop
jmp
cli
push
mov
arpl
mov
notb
dec
imul
cltd
loopne
mov
js
loope
jns
in
sbb
lret
ret
cmp
xor
jnp
mov
dec
adc
dec
fisttps
and
test
dec
das
enter
xchg
add
dec
sbb
dec
pushf
mov
and
lds
sbb
pop
cmpsb
push
sbb
sub
fcomip
dec
fadds
dec
stos
xchg
cmp
dec
and
lds
cmp
shlb
pop
inc
jecxz
fmull
cmp
lret
mov
icebp
outsb
in
sbb
lahf
out
sti
sub
xlat
mov
adc
or
sbb
fimull
mov
inc
lret
mov
or
mov
add
dec
leave
push
cli
ret
cvtdq2ps
les
mov
int3
cmp
or
jle
stos
flds
aad
js
xchg
sarl
scas
fcomip
in
and
int3
dec
dec
out
and
fidivrs
nop
pop
push
dec
and
pop
xchg
test
push
dec
add
sbb
or
and
into
stos
push
dec
jne
sub
or
cltd
test
pushf
and
dec
xor
push
xor
sub
xlat
testl
mov
dec
cmp
lret
sub
and
fisttpl
cmpsl
cs
or
dec
shll
ret
fmuls
mov
cltd
xchg
ret
dec
sbb
loopne
shlb
enter
pusha
dec
outsl
adc
mov
sub
dec
iret
adc
int3
idiv
dec
xchg
mov
scas
aaa
lret
dec
jl
rcrl
hlt
ljmp
addr16
in
cli
leave
aaa
inc
dec
jb
mov
fnstcw
cmp
cmpsl
mov
mov
add
mov
jp
stc
stos
pusha
mov
mov
xchg
and
enter
scas
sbb
push
or
push
mov
mov
dec
test
cs
daa
loop
jae
dec
push
mov
dec
fnsave
les
loope
dec
push
repz
insl
pop
shll
pop
in
into
imul
cli
jg
mov
dec
call
pop
addb
into
das
filds
xlat
mov
pusha
dec
add
fsubrp
mov
into
and
dec
fildll
sub
scas
mov
or
cmp
xchg
xor
jb
dec
xchg
dec
icebp
pop
jmp
dec
or
xor
jl
dec
jg
andb
insb
inc
adc
loopne
iret
loope
jecxz
pop
dec
dec
mov
cli
int
mov
stos
dec
in
aam
xchg
inc
inc
cmp
nop
pop
inc
cmp
push
mov
dec
push
dec
push
inc
adc
orl
test
sub
dec
daa
jmp
cmp
je
mov
rorl
push
dec
cmp
gs
mov
mov
dec
push
loope
cmp
pop
dec
fs
add
inc
pusha
jle
sbb
movsb
mov
sahf
scas
sub
xchg
add
sbb
xchg
push
and
les
pushf
mov
pushf
aas
cmpsb
lret
fnstenv
fidivl
repz
push
sub
adc
fcmovnb
cmp
push
ljmp
fcomip
xchg
mov
or
and
mov
cwtl
dec
dec
xchg
jle
push
andl
mov
push
repz
les
or
dec
push
testb
push
ret
pop
cltd
dec
ficomps
mov
dec
cmp
test
lahf
into
insl
sub
pop
and
add
cmc
push
xchg
in
push
add
sub
push
jp
jae
xor
fimull
es
cmpsl
adc
cmp
fnsetpm(287
mov
data16
fwait
lahf
rorl
hlt
fildll
mov
rorb
sbb
sub
and
mov
sbb
cmp
xor
inc
inc
das
fwait
es
xchg
push
stc
insb
dec
adc
fs
pop
add
dec
push
cmpsb
out
outsb
dec
mov
dec
pusha
push
stos
mov
cmp
adc
xchg
dec
cs
push
lret
add
push
pop
mov
frstor
dec
lret
iret
mov
testl
cmp
dec
push
jnp
mov
dec
out
dec
imul
dec
add
inc
fldenv
pop
dec
and
into
arpl
dec
mull
or
dec
loop
add
adc
mov
test
dec
jmp
fwait
inc
call
cmp
dec
inc
adc
ljmp
jb
movl
aad
sbb
jmp
fiaddl
cltd
push
out
mov
shlb
scas
mov
jl
mov
dec
or
mov
lahf
xor
sbb
dec
jae
dec
add
lret
adc
dec
cmp
loop
das
dec
int
int3
pusha
xlat
data16
cs
pop
sarl
dec
int3
sbb
dec
movsl
adc
jl
into
jns
dec
dec
xlat
pusha
pop
outsb
mov
mov
cmp
dec
ret
xchg
insb
cmc
adc
bound
dec
jbe
sahf
dec
pop
dec
dec
sub
push
mov
xor
xchg
sbb
bound
test
rcll
ljmp
inc
out
xchg
sbb
in
pop
xor
inc
outsl
sbb
xor
mov
push
push
gs
pop
cmp
dec
push
out
dec
xor
mov
jns
adc
lret
mov
icebp
mov
adc
push
and
jo
xchg
adc
leave
adc
mov
hlt
inc
adc
jge
push
jbe
dec
xchg
jg
pop
adc
int
frstor
decb
mov
mov
dec
jnp
dec
xor
dec
xchg
pop
arpl
inc
lahf
aad
cmp
mov
mov
xlat
pop
inc
push
jne
shll
dec
ficoms
xchg
and
jo
fsubl
adc
cmp
fisubrs
mov
pop
dec
xor
push
adcb
and
test
shll
cmpsb
push
inc
dec
lock
sbb
loop
dec
jno
add
push
xchg
dec
pop
inc
inc
mov
dec
adc
frstor
gs
mov
mov
std
lds
or
subb
pop
pop
gs
insl
dec
faddl
jg
dec
jnp
lds
mov
movsb
ret
mov
pop
pop
add
mov
or
mov
insl
std
cmp
dec
sbb
fs
mov
iret
and
mov
xchg
jb
pop
pop
loopne
mov
jl
int3
orb
movb
push
into
inc
jle
or
aas
inc
push
fidivs
push
iret
jo
mov
aaa
iret
inc
adc
gs
sub
gs
aad
jecxz
pushf
lret
add
nop
inc
mov
repnz
jle
mov
jl
jge
rcrl
fwait
ja
loopne
push
mov
arpl
adc
das
mov
jl
adc
push
daa
xor
pop
xor
jno
cmpsb
fldl
jmp
ljmp
out
lret
mov
or
dec
add
fwait
sbb
or
dec
sbb
or
mov
imul
push
movsb
cmp
xor
fld
jg
pop
out
shrb
test
mov
mov
mov
outsb
cmp
andl
clc
cmp
icebp
adc
test
popl
xor
push
into
mov
sbb
rcll
jge
push
jbe
inc
mov
inc
jle
add
mov
fidivl
pop
mov
jle
inc
inc
cmpsb
jl
mov
jne
mov
test
dec
xor
mov
add
aad
xchg
insl
mov
in
rclb
dec
or
xor
xchg
push
fadds
inc
shl
or
cs
icebp
mov
aaa
mov
mov
jl
jg
gs
and
aam
lds
lahf
movsl
mov
movsb
mov
scas
hlt
js
clc
scas
and
pop
sub
idivl
iret
push
inc
mov
shll
rcl
jns
mov
lods
jl
adc
test
into
fcomps
popa
fldt
push
rorb
aam
mov
push
push
rorl
mov
mov
dec
cwtl
addr16
dec
test
xor
outsl
push
pop
in
pushf
cmp
dec
add
lcall
rorb
cltd
xor
jl
bound
jg
dec
pop
pusha
pop
add
xchg
pop
nop
pop
cmc
inc
jle
or
jl
cltd
xchg
sub
scas
jno
mov
dec
inc
and
adc
add
adc
rorl
jnp
mov
push
inc
imul
or
rorl
push
roll
push
adc
inc
stc
cltd
aaa
or
repz
imul
pop
in
std
dec
or
ror
in
fisttpll
imul
dec
sub
out
fucomi
cmp
cli
imul
lahf
daa
in
xchg
iret
jmp
mov
push
ret
mov
fildl
mov
fisubrl
dec
adc
movsl
push
stc
ljmp
sub
outsb
mov
daa
in
jns
das
mov
in
rcrl
cmpsb
es
xor
cs
dec
cmp
mov
imul
adc
gs
out
arpl
dec
push
aam
pslld
jne
xor
insb
ss
mov
lods
pop
or
dec
mov
mov
fwait
adc
push
imul
cs
dec
leave
and
xchg
ret
and
testl
clc
push
push
decl
and
rcll
jb
hlt
dec
nop
mov
or
and
inc
xor
mov
dec
lock
pop
mov
out
jmp
ret
fdivs
mov
adc
pushf
int3
sub
rol
sbb
shl
jg
xor
inc
xor
add
nop
shrl
mov
pop
xor
scas
mov
and
into
jno
inc
cltd
dec
adc
dec
insl
sar
mov
je
xor
xor
inc
sub
not
push
mov
pop
push
adc
notl
cwtl
iret
mov
xor
aam
sub
jbe
sbb
bound
dec
mov
sarl
sub
jmp
or
leave
fucomi
add
movsl
pop
inc
pop
dec
adc
xchg
fwait
dec
mov
loope
push
les
dec
pop
sub
aaa
lret
jge
loopne
clc
pop
sti
shrb
sbb
xchg
dec
xchg
into
dec
loop
inc
xor
dec
scas
jge
mov
imul
sbb
jecxz
nop
cmovle
sub
xchg
fst
scas
jle
cs
dec
imul
sahf
repnz
dec
add
push
lods
js
dec
cmp
clc
lret
int
aad
dec
rcll
or
mov
dec
jl
xor
fmull
cmp
dec
insb
mov
adc
dec
xchg
loopne,pn
jmp
add
or
out
aaa
bound
popa
dec
nop
push
xchg
outsb
int3
mov
mov
int
ror
mov
test
xor
lcall
jno
push
inc
cmp
push
lods
je
dec
ljmp
push
ja
dec
lahf
pop
loope
mov
mov
fcoml
cmpl
pop
xor
pop
dec
lods
or
addr16
xor
inc
xchg
ret
clc
or
jnp
inc
mov
sub
stos
mov
or
aaa
jle
lods
ja
pop
xor
xor
cmp
rclb
pop
iret
add
popa
les
pop
push
outsl
inc
add
movsbl
cs
movsl
sub
repnz
mov
cmp
aam
fs
mov
xchg
icebp
and
xchg
cmp
jl
iret
iret
cmp
push
popf
mov
sbbb
jmp
mov
insb
rclb
lahf
jle
pop
iret
sub
repnz
inc
jp
xor
push
sub
or
and
ss
mov
bound
rorl
jb
push
add
mov
sbbl
pop
push
xor
jae
sbbb
dec
insb
fsubrs
fs
xor
inc
xchg
jae
into
xchg
cmp
dec
call
repnz
das
push
push
in
lahf
aaa
test
inc
pop
sub
movsl
es
push
dec
stos
sahf
stc
dec
jbe
push
dec
xchg
fisubs
or
dec
test
push
pop
xor
push
xor
mov
adc
into
aam
and
adc
pusha
stos
xor
cld
inc
das
push
fisttps
and
notl
inc
pop
mov
mulb
dec
add
mov
dec
xor
jae
aas
int3
xchg
jno
sbb
jns
mov
or
mov
ffreep
xor
jae
out
mov
push
sbb
mov
imul
test
popa
aad
jmp
inc
les
sub
std
adc
aaa
adc
dec
lea
push
push
dec
dec
iret
jo
das
mov
lcall
push
sub
int3
clc
ss
lods
adc
fmulp
out
icebp
lret
cs
mov
popf
std
gs
mov
xor
jae
movq
testl
movsl
pop
jno
outsl
lods
jo
xlat
add
pop
inc
aas
cli
imul
insb
jbe
es
dec
xlat
out
dec
fiaddl
push
imul
outsl
mov
xchg
jle
push
subl
loop
inc
in
aaa
and
ljmp
or
cs
popa
lea
xor
loop
mov
shlb
adc
jne
xchg
pusha
or
push
dec
cli
or
lahf
pop
test
dec
xchg
mov
xor
dec
orl
push
popa
dec
jmp
roll
loope
dec
mov
pop
jo
pop
or
sub
mov
sbb
push
add
sti
mov
xchg
sbb
inc
mov
dec
divb
lock
dec
lds
jp
cmp
push
dec
clc
test
add
out
icebp
test
aas
ret
in
adc
push
add
sub
sbb
jns
lcall
add
in
push
pop
jbe
int
pop
mov
adc
aas
dec
pushf
fstpl
push
dec
icebp
std
sbb
dec
xchg
pop
jne
xor
xchg
mov
mov
dec
push
pop
das
stos
jmp
dec
in
loopne
cmp
cmpsl
pop
dec
push
cmp
arpl
outsb
cmp
dec
push
xor
xor
pop
stos
cmovnp
sti
pop
sub
mov
mov
dec
shrb
jne
sbb
hlt
sub
outsb
mov
inc
mov
idivb
hlt
fsubrl
rorl
shrl
sub
sub
and
fisubrl
ret
sbb
mov
or
dec
sbb
fucomi
push
das
mov
stos
jmp
cmpw
xor
add
cli
loope
sti
inc
dec
aad
je
mov
push
mov
cmp
and
mov
icebp
xor
imul
in
dec
rorl
lods
push
lret
daa
mov
inc
adc
cmp
iret
pop
scas
stos
js
popl
push
scas
insl
popa
xor
pusha
mov
cld
or
mov
repnz
jbe
and
push
mov
mov
loope
xchg
xchg
es
mov
pop
mov
aaa
aas
mov
movsb
stc
sub
sub
dec
sub
fisttps
or
push
icebp
sub
xchg
mov
loopne
dec
and
dec
mov
push
jecxz
cmp
xor
push
js
repz
push
cmpsl
imul
mov
pop
xchg
test
jb
dec
ja
cmp
sbb
sarl
mov
pushf
dec
jl
pop
pop
jecxz
lods
cs
inc
fsubrl
mov
push
out
mov
push
dec
icebp
je
dec
orl
xor
and
sahf
mov
dec
or
cmpsl
testl
rcrb
sub
xor
jb
jp
leave
xchg
jno
movsl
iret
xchg
in
stos
and
int3
jle
rcr
out
push
shrl
repnz
mov
and
loop
add
pop
clc
fwait
xlat
in
xchg
fdivr
out
push
leave
fnstsw
mov
push
push
sub
rorb
pop
iret
mov
cmp
dec
mov
into
dec
addr16
mov
aam
arpl
mov
dec
flds
loop
mov
out
cld
dec
test
out
sub
or
mov
mov
jle
stc
dec
xlat
cmp
or
sub
or
mov
push
adc
xor
cmpl
and
lds
lahf
inc
cld
dec
lcall
adc
inc
dec
bound
jno
xor
mov
or
aad
std
sbb
mov
jle
stos
dec
xchg
add
pop
xchg
aaa
dec
dec
inc
cmp
xor
imul
adc
ret
scas
dec
cmp
adc
push
repz
xor
orl
and
inc
dec
aaa
scas
ficoms
dec
int
shl
data16
popa
dec
and
xchg
ds
mov
stos
test
jbe
stc
xchg
push
sahf
jae
mov
or
shl
repz
dec
xchg
push
mov
jmp
scas
lea
std
push
push
out
out
dec
nop
hlt
mov
and
std
xchg
movl
jae
cltd
cmc
ljmp
jle
mov
jg
or
es
ljmp
add
mov
sub
test
jl
inc
dec
dec
dec
popf
adc
daa
push
jg
xchg
add
inc
lahf
mov
ja
lods
xchg
pop
enter
push
and
iret
sub
daa
adc
fbstp
in
mov
outsl
test
inc
nop
sbb
inc
cmp
mov
mov
mov
cmpsl
lds
bound
xor
inc
cs
or
rolb
imul
jl
cmp
gs
int3
jnp
lea
inc
adc
aad
cwtl
mov
rcll
jp
shr
mov
jl
std
dec
lret
cmpsb
gs
or
aam
mov
mov
iret
std
rolb
add
dec
into
imul
inc
inc
jg
fwait
movsl
push
call
xchg
push
sub
cmpsl
cmpsl
cmp
dec
lret
ret
xchg
adc
jle
and
mov
mov
jmp
jecxz
outsb
jb
push
mov
dec
filds
rorb
aaa
push
add
cmp
push
daa
std
cmp
sti
dec
xchg
daa
call
stos
in
fs
adc
cmpb
xor
jecxz
loop
xor
out
sub
pop
pop
mov
ljmp
push
mov
aas
dec
and
mov
xchg
cmp
fucomip
icebp
pop
cmp
repz
dec
aaa
mov
int
int3
lock
iret
xchg
int
out
popa
jb
pusha
aam
dec
jnp
fs
sarb
data16
push
bound
mov
push
cmp
mov
fs
ja
test
dec
and
lret
icebp
cli
pop
adc
sub
and
rorb
movsb
jl
in
push
jp
mov
dec
push
mov
lret
loop
dec
xor
cli
cmp
mov
sub
pop
dec
je
inc
push
pop
dec
rcrl
les
sub
dec
out
xchg
inc
call
js
test
enter
dec
sub
pop
pushf
dec
mov
push
inc
cld
iret
and
popa
xor
xor
or
aam
iret
dec
dec
mov
sbb
aad
cmc
jns
mov
mov
dec
dec
into
mov
cmp
daa
orb
xchg
cli
outsl
xor
fisttpl
adc
mov
push
mov
es
push
mov
cmp
stc
mov
mov
addb
aam
mov
mov
dec
xchg
adc
dec
and
popa
fwait
jmp
testl
adc
insl
lfs
dec
sub
jo
test
jecxz
stos
and
pop
jl
sub
push
and
mov
dec
cmpsb
or
popf
loope
cwtl
dec
inc
push
cmp
cmc
pusha
xlat
mov
dec
xor
int
in
sahf
and
dec
andb
shl
clc
sub
sbb
xchg
ficomps
jbe
cmp
nop
pop
sbb
adc
es
dec
and
fcoms
and
and
sbb
adc
and
mov
dec
data16
fs
push
push
outsb
dec
mov
add
push
xor
sbb
insb
lock
mov
xchg
repnz
clc
sarl
dec
jmp
out
push
clc
in
xchg
stc
pop
mov
jl
adc
adc
jg
inc
divb
test
inc
mov
pop
stos
div
idivb
xor
mov
ret
mov
jmp
pushf
das
out
sub
pop
mov
jno
outsb
dec
loope
test
aad
inc
and
adc
arpl
dec
jne
scas
dec
mov
sub
dec
orb
inc
push
sub
dec
mov
inc
mov
dec
xor
movsl
pop
mov
xor
dec
int
leave
fs
lods
mov
iret
or
dec
sahf
ud1
xchg
mov
add
mov
push
into
sbb
fimuls
pushf
lock
stos
aad
insb
mov
jecxz
dec
insl
or
mov
dec
sti
or
testl
mov
movsl
bnd
adc
jno
jo
push
daa
xor
pop
popf
and
dec
jns
shll
dec
cmp
push
dec
inc
dec
jle
inc
sbb
bound
cld
rcrl
pop
jnp
mov
cmp
or
pop
cmp
aad
mov
imul
hlt
sbb
loopne
dec
sbbl
cmp
pop
sbb
dec
push
mov
sbb
or
mov
dec
mov
popl
pop
dec
ss
ljmp
jp
dec
aad
mov
xorb
and
mov
gs
iret
test
sub
das
xchg
cld
leave
ljmp
cmp
inc
or
and
lds
and
out
dec
daa
repnz
nop
inc
mov
mov
or
das
adc
mov
dec
rorb
bound
dec
xchg
loope
into
insl
mov
mov
and
data16
jp
fs
in
xor
mov
adc
cltd
into
xchg
inc
rorl
icebp
xor
pushf
xchg
mov
xchg
dec
push
mov
mov
inc
inc
sbb
xchg
cmp
mov
call
stos
dec
pop
fldcw
dec
mov
out
dec
int3
leave
dec
push
je
cmp
pop
jno
pop
ret
ja
adc
jg
push
adc
cmp
xchg
dec
xor
addr16
sub
jl
sbb
or
inc
dec
data16
add
cmp
jns
xchg
jbe
inc
cli
test
sub
mov
jge
into
jmp
xchg
sub
cmp
fmuls
test
mov
jle
jb
stos
adc
sti
bound
jecxz
outsb
call
into
cmp
cltd
mov
and
ret
test
add
pop
mov
jne
iret
fcoml
dec
mov
subl
test
loop
out
mov
stos
push
mov
xorb
fcoml
and
push
fcomps
xor
add
sbb
iret
in
dec
mov
mov
mov
rolb
adc
cmc
cmp
sub
adc
iret
pop
xchg
jae
adc
leave
bound
inc
sahf
lods
icebp
jo
rcrl
mov
jmp
adc
inc
pop
jg
loope
ud1
pop
cli
cmp
out
dec
jne
lods
sahf
push
std
clc
iret
cmpsb
daa
cmpl
push
insl
fisttpl
xor
cmp
xor
stos
push
cli
mov
pop
jb
lea
jle
or
lods
out
notl
xor
dec
lret
pop
mov
mov
cli
cmp
rcll
fistpl
arpl
lea
vpcmpeqd
in
shlb
test
pushf
push
pop
fs
test
cmp
pop
or
inc
mov
sub
das
imul
push
arpl
or
leave
add
dec
ret
pop
xor
test
clc
movsl
xlat
fldz
test
sbb
enter
outsb
cmpsb
dec
sbb
rclb
loopne
iret
mov
cltd
push
pop
mov
mov
fnstenv
xor
pop
je
push
fwait
scas
pop
xchg
pop
in
mov
sahf
mov
and
rcll
push
xchg
test
xlat
enter
push
in
out
repz
in
add
mov
ja
fwait
or
stos
sbb
jge
in
lods
adc
push
mov
dec
add
repz
dec
push
enter
cmp
andl
data16
lods
add
mov
jnp
xchg
pop
push
aaa
ret
fs
mov
jle
cwtl
dec
sub
fidivs
sarb
int
shl
cmpsb
xor
incl
sub
push
fwait
loopne
stos
pushf
xor
jp
cmp
in
cmp
ljmp
inc
aad
es
mov
mov
pushf
aam
inc
and
pop
bound
push
lods
pop
adcb
sub
xchg
clc
in
imull
add
pop
mov
into
lahf
in
data16
mov
add
xlat
mov
hlt
sub
inc
fs
pop
sbb
mov
push
ja
movq
adc
jb
into
push
sysenter
inc
inc
test
sti
and
iret
push
xor
scas
dec
and
mov
sbb
mov
dec
aad
imull
adc
dec
dec
cmpsb
add
pop
and
fdivrl
xor
push
gs
mov
xchg
mov
mov
int3
jg
or
sbb
ss
outsl
mov
mov
and
in
xchg
jno
mov
pushf
in
shll
test
sub
xchg
adc
call
inc
out
mov
dec
mov
pop
fs
cld
and
sti
push
pcmpgtd
cs
lods
jnp
dec
push
xchg
jg
jbe
out
inc
dec
mov
push
outsl
stc
adc
sti
ret
dec
sbb
push
lds
dec
les
push
dec
div
pop
movsl
int3
jns
xor
outsb
cs
fimuls
dec
jne
shr
push
leave
xchg
ret
dec
out
gs
pop
sti
dec
push
icebp
fstps
andb
cmp
lods
adc
dec
cwtl
mov
inc
testb
xor
subb
mov
dec
adc
movsb
and
push
jmp
add
pushf
cld
dec
rcl
in
dec
rcll
sbb
out
scas
dec
popa
adc
js
xchg
inc
dec
mov
jp
ret
sahf
xor
push
enter
push
dec
je
nop
mov
rclw
sub
and
iret
ljmp
jle
push
pop
push
mov
and
sub
sub
pop
int
sarb
stos
xchg
xchg
iret
inc
push
ds
sub
mov
and
sbb
aas
xchg
pop
lock
or
sub
outsb
aam
aas
sbb
xor
fidivrl
cmc
add
cmp
push
xlat
loopne
cmp
xor
loope
int3
jl
ss
fwait
adc
sbb
icebp
stc
pop
in
add
cwtl
aas
fstl
jg
leave
scas
mov
test
inc
mov
adc
cmpl
xchg
faddl
mov
xchg
mov
insb
dec
adc
sbb
fwait
pushf
push
pop
int3
mov
test
cmp
push
jge
fs
cmp
push
pop
iret
jmp
mov
jl
bound
jle
mov
xor
lcall
sub
orb
cmp
outsl
add
and
push
mov
xor
test
jge
xor
test
dec
test
das
mov
dec
jne
xor
mov
sub
test
jo
rorb
xor
fs
dec
in
out
cmp
dec
lret
lods
cmpl
fwait
rcrl
pop
into
push
xchg
cmp
dec
push
les
leave
jmp
sub
dec
jp
out
cwtl
lock
sbb
inc
inc
xchg
lea
push
enter
pop
dec
jg
jns
sbb
jmp
pop
mov
lods
out
cld
dec
dec
inc
jno
or
hlt
dec
add
std
lock
sbb
cli
daa
stos
dec
push
mov
and
and
mov
sub
loop
dec
js
test
nop
mov
test
loope
jl
js
jle
xlat
dec
sub
and
fisttpl
mov
rcl
xor
stc
cs
in
ds
jle
add
dec
icebp
or
push
repz
leave
iret
jg
adc
push
mov
and
das
mov
push
cmc
dec
push
mov
jl
push
or
dec
lods
ds
and
lahf
pop
xchg
dec
adc
add
out
stos
bound
les
int3
and
dec
pop
cs
xor
adc
popa
jg
aam
scas
mov
clc
out
sbb
xchg
test
bound
or
ljmp
xlat
repz
enter
and
push
push
aaa
cmp
iret
insb
dec
mov
adc
inc
inc
xchg
outsb
int
repz
pop
in
adc
jg
sub
mov
xchg
push
push
adc
cmpsb
adc
cs
mov
dec
fmull
sarb
adc
lea
popa
js
and
sub
cltd
adc
add
dec
jno
adc
mov
repz
mov
adc
out
jb
out
test
xor
gs
addr16
add
jns
movsb
push
js
mov
inc
pop
dec
mov
dec
cmp
xchg
xor
fsubrp
jmp
cld
jnp
push
sbb
dec
insl
adc
leave
lds
sub
push
add
dec
addr16
dec
insb
mov
adc
js
dec
out
push
sbb
repz
rorb
cmp
aas
dec
xchg
cs
mov
jb
imul
xor
movsl
sbb
test
adc
rorb
bound
dec
sbbl
imul
clts
mov
subl
push
adc
outsb
cwtl
cli
jne
rorl
adc
test
dec
dec
xor
mov
xlat
loope
pop
inc
out
xlat
dec
repnz
outsl
jno
lods
dec
test
xchg
jg
or
cmp
lcall
scas
push
std
jge
pop
jp
mov
int
and
insl
aam
and
mov
add
pop
mov
lds
pop
mov
fsubrl
or
mov
adc
pusha
sub
and
stos
pop
mov
mov
mov
xor
repnz
icebp
fcompl
es
sub
hlt
push
push
xor
hlt
mov
cmpsl
aam
and
imul
imul
push
add
mov
mov
test
iret
xchg
xchg
mov
mov
and
adc
jno
jl
ljmp
arpl
pxor
mov
icebp
xchg
adc
sahf
jp
orb
jl
popf
dec
or
add
add
push
push
out
sti
jns
add
push
arpl
pop
iret
mov
enter
push
pop
mov
jmp
cld
adc
pop
jle
mov
add
stc
push
mov
aam
fdivrp
ds
and
aam
mov
xor
loop
iret
xchg
addr16
loop
push
lcall
inc
shlb
das
and
cmp
xlat
lods
dec
pop
adc
movsl
mov
xor
fs
sub
in
push
cmp
int
dec
jg
jnp
rolb
bound
jae
pop
inc
mov
addr16
in
int
cmp
lods
xchg
inc
stos
jnp
outsb
sbb
jle
ds
sbb
jb
cmc
inc
mov
outsl
pop
and
jl
or
dec
jecxz
andl
dec
mov
or
insl
jle
dec
lcall
cmpsb
bound
cltd
jae
fcoms
xlat
dec
inc
out
sahf
jecxz
sub
push
fnsave
and
dec
stc
xor
in
push
jnp
out
push
ret
clc
orb
lods
mov
inc
shrb
mov
pusha
test
dec
and
push
mov
dec
dec
pop
or
dec
adc
movsl
mov
mov
push
cmp
and
push
dec
or
fstl
push
xor
jl
rclb
in
stos
and
mov
out
mov
pop
xor
loop
pusha
lret
mov
dec
inc
xor
xchg
jae
iret
ja
add
out
mov
sub
out
aas
pop
add
cltd
cvttps2pi
mov
dec
daa
pop
in
jae
mull
fidivl
xchg
pop
jl
xchg
xchg
icebp
xchg
mov
hlt
add
in
scas
dec
cmp
jp
das
pmulhw
loop
and
xchg
dec
dec
popf
pop
add
daa
dec
fisubrs
inc
subw
push
jmp
int3
inc
nop
out
rcrl
stos
iret
shlb
mov
pop
sub
pop
push
aas
mov
in
fldt
mov
mov
inc
movlps
push
add
lods
cmp
repz
xor
jg
inc
cmp
clc
iret
mov
out
shrb
popa
cmc
push
pop
gs
outsl
incb
dec
scas
enter
mov
clc
scas
jmp
dec
jl
add
dec
cmp
rorl
pop
xlat
cmp
xor
ljmp
push
jp
mov
mov
fldcw
cmp
add
aas
imul
loopne
inc
mov
sti
cmp
scas
add
mov
jge
xchg
sub
ficoml
jae
or
cmc
dec
dec
push
inc
push
sbb
pushf
scas
dec
sub
xor
les
in
pop
push
shlb
inc
pop
mov
sbb
cmp
jp
xor
not
xor
and
in
rorb
adc
aas
sub
gs
or
xchg
xlat
int3
pop
and
pop
jmp
mov
cli
or
mov
xchg
mov
jno
adc
sbb
pop
inc
dec
loope
cld
test
mov
enter
and
cwtl
ja
testb
push
shll
xor
hlt
addl
cmp
and
sbb
pop
xchg
jmp
jo
cmpsl
imul
pop
xchg
orb
mov
ds
pop
push
sub
ljmp
add
stos
dec
cs
stos
jae
pushf
adc
into
clc
decl
xchg
into
mov
out
sub
lods
pop
dec
out
popf
fstl
or
imul
in
sbb
popa
add
in
scas
test
mov
push
out
mov
in
shll
lea
aad
jb
cmp
dec
cli
mov
aam
repnz
cmp
int3
dec
mov
xchg
jbe
outsb
dec
mov
rcl
inc
sarb
dec
dec
mov
fdivrl
sahf
dec
ds
inc
je
dec
fbstp
dec
int3
cld
pop
sbb
dec
aas
dec
enter
jle
incb
adc
clc
and
or
lret
outsb
or
fisubrs
and
and
pop
push
aas
sbb
outsb
ret
dec
adc
test
pop
std
jmp
pop
insl
lret
jl
movsb
pop
aad
loope
or
stos
jb
adc
sub
scas
fisttpll
jns
aad
movsl
sahf
add
mov
push
xlat
repz
lret
xor
mov
jl
mov
sub
xchg
iret
xor
fldenv
push
push
inc
sarl
jge
in
in
jb
xor
daa
bound
lds
stos
insb
mov
sbb
mov
dec
jle
mov
mov
adc
mov
push
mov
into
sub
dec
mov
sbb
push
sarl
out
aam
and
sub
fdivrs
inc
dec
cmpsb
push
adc
in
mov
mov
cmovle
subl
dec
jae
stos
sub
dec
gs
aad
imul
jno
mov
aaa
push
mov
or
sub
fadds
xor
xor
push
repnz
xor
fstps
outsb
aaa
arpl
cvtpi2ps
movsl
cmp
mov
pop
push
dec
aad
dec
inc
dec
loopne
inc
dec
jno
test
xchg
and
js
lret
arpl
push
and
iret
cmc
out
jle
sbb
sbb
dec
aad
aam
sub
mov
insl
jbe
orl
adc
or
dec
or
aad
adc
ljmp
subl
dec
xor
rorb
jle
nop
dec
cmp
std
ds
ror
scas
pop
lahf
fists
lods
mov
push
in
dec
aas
sbb
mov
dec
mov
push
dec
pushf
bound
int3
jl
xchg
pop
jns
dec
outsl
sub
in
mov
ret
pushf
pusha
jb
pop
fistpll
and
test
in
ret
adc
mov
xlat
dec
cmp
inc
lret
and
inc
popf
test
sub
mov
lods
sahf
sbb
jg
shlb
and
in
scas
jl
into
adc
cmp
dec
mov
mov
aaa
daa
inc
pusha
dec
jb
pop
and
pop
xor
or
jl
lds
ficompl
sbb
xor
arpl
aam
in
jle
test
sub
inc
add
cs
or
xchg
push
cltd
pop
jle
mov
ret
cmp
fwait
std
add
rclb
sub
lahf
jae
or
sti
dec
inc
mov
stos
addb
hlt
ss
iret
int
sub
jbe
iret
mov
xor
pop
sub
mov
incl
xor
dec
mov
or
fimull
mov
pop
scas
sub
cld
fistps
dec
es
jbe
add
dec
loope
jmp
pop
push
repz
in
lret
xor
dec
push
jg
into
fidivl
inc
push
lock
sarl
push
cmp
mov
push
das
insb
ret
mov
ja
xor
clc
push
loopne
and
mov
cld
mov
mov
or
mov
mov
fwait
xor
hlt
xchg
mov
jle
mov
out
jmp
inc
jg
push
movsb
push
scas
mov
add
and
sbb
andb
push
dec
xchg
das
sarb
dec
xchg
gs
std
dec
cmpsb
addr16
ljmp
mov
cmp
scas
xchg
popf
push
gs
jbe
test
mov
decl
adc
aas
adcl
cli
rcrl
pop
int3
adcl
test
push
shll
dec
inc
push
scas
adc
les
mov
arpl
sub
sbb
xchg
xchg
jp
pop
xor
fwait
in
mov
movsl
lock
pop
fs
int3
movsb
outsl
dec
push
stc
fisttpll
pop
mov
xchg
in
and
dec
test
cmp
push
xor
push
repnz
rcll
dec
sub
negl
rol
gs
jo
inc
adcb
in
pop
cwtl
mov
mov
scas
pop
out
andl
call
xor
push
push
cltd
out
cld
cmc
inc
stos
and
cmp
dec
rorb
mov
mov
dec
add
mov
sahf
std
loopne
mov
lea
pushf
aam
cli
push
jecxz
insl
fildll
dec
cld
call
dec
inc
nop
adc
call
xor
mov
ja
dec
lahf
sub
into
dec
enter
mov
popf
push
cli
xchg
scas
jne
cmc
dec
sbb
test
imul
adc
insl
jmp
into
pop
into
lahf
dec
addr16
cmpsb
jne
je
jp
mov
icebp
inc
jp
ja
push
sti
loop
jp
in
mov
jb
sub
jo
mov
enter
dec
shl
dec
push
iret
push
std
in
xchg
sub
outsl
cltd
ds
outsb
mov
dec
das
lods
jnp
mov
mov
test
cld
or
dec
dec
cmp
test
cmpsl
push
das
dec
icebp
push
push
test
lcall
jmp
sbb
cmp
cwtl
xchg
inc
ja
dec
lret
jnp
out
sbb
test
repz
cmp
adc
mov
pop
subb
insb
dec
adc
stos
lds
popa
dec
push
aam
mov
mov
repz
arpl
xor
mov
inc
dec
cmpsb
jnp
in
mov
dec
shl
inc
out
push
sbb
dec
aam
popa
in
adcb
pusha
or
dec
call
test
imul
add
mov
scas
testb
xlat
orl
pop
cwtl
dec
jmp
sub
lcall
or
cld
mov
pop
push
mov
lea
pop
scas
es
lock
xchg
dec
pop
out
sub
inc
and
cmp
push
fmull
mov
repz
mov
cmp
cmc
mov
lds
cmp
movsl
cs
mov
dec
aad
loop
sbb
test
xor
and
push
dec
and
mov
mov
push
ret
ja
les
adc
jmp
fwait
or
aad
lock
int
int3
pusha
pop
pushf
jb
xchg
dec
das
mov
nop
cmp
inc
sub
cli
add
xor
outsb
xor
push
pop
add
scas
sub
fisttpl
ja
das
repnz
dec
std
outsl
add
xor
fnstcw
test
cmp
and
icebp
fdiv
xor
sar
jp
xor
ss
fiadds
sbb
aas
and
and
and
mov
dec
push
inc
mov
inc
int3
cmp
cmp
bound
jl
and
stos
repz
jmp
scas
push
jl
roll
jle
in
jl
notb
sbb
dec
mov
pop
cmp
rclb
lods
gs
jmp
loope
inc
jle
lcall
sub
dec
shlb
dec
fldenv
leave
xchg
and
cmp
and
inc
outsl
cli
and
sti
sbb
movsl
gs
test
mov
lea
in
enter
mov
dec
inc
dec
popa
mov
dec
pop
insl
sti
test
lock
dec
adc
ss
dec
imul
imull
xchg
mov
and
repz
and
jp
inc
fbld
aam
inc
mov
clc
sub
ret
dec
inc
xchg
ljmp
jp
xor
dec
or
in
sbb
sahf
cs
push
xchg
dec
jnp
fcoml
mov
cld
adc
or
jl
and
popf
aas
jge
xor
clc
inc
jno
mov
add
mov
movsl
jecxz
pop
out
mov
aad
orl
xchg
jae
inc
xchg
jge
lds
mov
dec
jnp
dec
hlt
add
or
dec
mov
cmpsl
push
setns
mov
inc
hlt
add
lds
dec
pop
in
cli
lea
dec
dec
mov
push
inc
mov
xchg
scas
pop
or
int3
dec
movl
dec
sti
je
jle
or
or
pop
inc
push
pop
pushf
adc
push
iret
out
push
mov
gs
test
xchg
icebp
xor
push
push
adc
fisttps
push
or
repz
mov
pop
pushf
mov
dec
out
fucomp
xchg
or
scas
addr16
aaa
jg
movb
dec
hlt
leave
xor
jl
shll
xchg
inc
fcmovu
test
ljmp
lock
fistl
nop
dec
hlt
loop
adc
ljmp
add
mov
lds
cs
pop
push
test
ds
sub
mov
js
inc
push
and
dec
inc
scas
push
cltd
in
push
cmc
rcrb
or
aaa
jl
mov
and
enter
popf
insl
pop
adc
imul
insb
jo
sahf
ljmp
xorb
stos
jle
in
imul
in
jle
bound
xor
pop
out
pusha
hlt
mov
pop
xor
cmp
push
push
shl
xchg
mov
loopne
mov
iret
ljmp
mov
adc
or
into
sbb
mul
imul
xchg
pop
sub
pop
or
sbb
pop
jp
mov
int3
xor
dec
mov
lea
into
movsb
dec
mov
sub
rcrb
mov
rol
xchg
cs
and
fcmovbe
inc
sbb
mov
jo
ds
dec
jl
cmc
cs
dec
test
invd
jle
lahf
jns
gs
push
inc
xchg
lret
xchg
gs
pop
push
mov
shl
notb
call
push
repnz
fimuls
out
cmp
arpl
xchg
pop
mov
imulb
or
dec
sbb
jle
xchg
dec
fcompl
sbb
cmpb
ret
icebp
pusha
lods
inc
sub
aam
and
sub
jns
enter
sub
mov
iret
sbb
lods
mov
cld
inc
pop
mov
rorl
mov
sbb
xchg
fwait
daa
addb
xlat
cvtpi2ps
stc
in
mov
jg
daa
xchg
add
jmp
or
mov
dec
cld
cmp
cmp
test
fstpt
sbb
or
dec
inc
adc
push
test
inc
jl
orb
push
jg
fstpt
pop
popa
adc
pushf
iret
cld
mov
inc
jne
dec
push
ss
xor
in
add
andb
fstpl
hlt
lods
insb
into
adc
push
mov
mov
dec
jne
nop
jle
addl
setno
xchg
aam
jg
icebp
inc
into
jnp
fnstcw
mov
mov
push
jp
ret
and
outsb
push
arpl
popf
mov
inc
iret
jl
es
adc
leave
ret
sub
dec
xchg
shrb
fwait
ret
add
mov
aaa
js
sub
pop
adc
ljmp
adc
es
sub
xchg
ja
push
xor
leave
ljmp
das
data16
or
mov
dec
inc
pop
push
shl
daa
call
int
fmull
add
iret
push
adc
xchg
add
into
jmp
mov
cmc
addr16
outsb
mov
xchg
xor
xor
dec
mov
lods
mov
data16
aam
movsb
scas
iret
rorb
dec
xor
mov
call
int3
gs
xchg
mov
mov
mov
rorl
jmp
pop
outsb
movsb
ja
push
ljmp
xchg
dec
inc
stos
int
jecxz
push
loop
mov
pop
cld
fadds
mov
add
jmp
stc
lea
fidivrs
mov
mov
sub
movsb
push
mov
jl
outsb
es
inc
adc
jl
nop
mov
shll
fisubs
mov
cwtl
daa
lret
pop
dec
xchg
into
test
rcrl
inc
jp
mov
cmp
dec
jno
sub
cmp
pop
cmpsb
dec
mov
movzwl
lods
mov
testb
pop
bound
imul
sub
fimull
push
lea
sbb
cmp
js
es
ss
ficoml
mov
push
in
popa
cld
aad
cmpsl
dec
mov
jae
dec
je
hlt
adc
xlat
or
pop
cmpsb
dec
jo
pushf
shlb
cmp
addr16
dec
inc
cmp
movsb
rcll
dec
sub
fs
or
dec
ds
test
jecxz
xchg
pop
ret
imul
xorl
in
insl
negb
push
dec
cld
lock
push
pop
movsb
rorb
push
ljmp
jl
in
int
mov
pop
dec
xchg
movsb
pop
sub
dec
psllq
sub
outsb
pop
test
enter
repnz
js
push
fldl
push
pop
rcrl
mov
dec
movsl
pushf
xchg
xlat
imul
aas
stos
mov
pop
mov
cmp
mov
dec
or
mov
dec
incl
mov
arpl
fistpl
ret
cmpsb
lcall
xor
inc
out
popl
addr16
dec
shrb
fnstenv
adc
lods
fwait
mov
dec
cli
test
jo
pop
iret
inc
mov
mov
shl
jge
fnstenv
xchg
xor
xchg
rorb
inc
xor
push
idivb
imul
add
out
mov
xor
mov
mov
mov
dec
js
aas
out
shll
in
mov
jb
inc
mov
adc
dec
lahf
ss
and
dec
loop
xor
and
jmp
or
push
dec
lods
repz
test
adc
dec
mov
rorl
and
dec
adcb
fwait
or
mov
push
aaa
lock
loope
incb
or
es
dec
push
mov
add
inc
and
pushl
cmp
int
daa
xor
das
fucomi
mov
pop
inc
inc
mov
mov
shlb
jne
cmc
pop
fsubl
dec
xor
ds
fnsave
push
adc
aad
dec
daa
xor
imul
shll
dec
add
rorb
in
cld
and
mov
pop
aam
mov
push
mov
xchg
xor
lods
xor
popf
dec
sub
and
mov
push
test
cmpsl
cmp
add
out
mov
jb
cmp
mov
dec
ret
inc
scas
ljmp
enter
std
aam
inc
mov
push
ljmp
shlb
or
popa
push
adc
fwait
mov
mov
jae
daa
dec
jle
sbb
xlat
jl
sub
pop
xchg
pop
clc
xor
shl
jmp
into
adc
xchg
push
ret
clc
in
movsb
xor
xchg
sub
pop
jmp
inc
xor
imul
sub
ficompl
cmp
out
xor
or
xlat
jp
cmp
mov
push
adc
out
mov
repz
adc
pop
outsb
or
inc
es
cmp
sbb
mov
lcall
cmc
mov
es
mov
ss
inc
mov
shll
mov
mov
dec
mov
ljmp
pop
jb
je
push
inc
and
sub
mov
inc
adc
fildll
sbb
add
out
lods
gs
jae
fldcw
add
jg
add
or
mov
push
dec
push
jg
fnstsw
jle
lods
hlt
ret
jl
adc
inc
xchg
cmc
pusha
lods
mov
outsb
mov
movsb
push
or
cmp
ss
test
dec
test
and
mov
aam
dec
and
mov
xchg
dec
jno
imul
dec
push
jnp
cmc
in
xchg
into
mov
xlat
das
push
dec
jb
arpl
daa
xor
sub
sahf
mov
sahf
mov
ret
dec
cmp
mov
mov
dec
pop
jns
push
xor
jno
cmp
lret
stc
rcrl
lds
iret
lock
aad
sbb
enter
mov
push
test
adc
fucomip
mov
ja
push
xor
inc
aam
push
cmp
sub
jo
das
push
daa
mov
test
inc
and
sub
cs
mov
dec
pop
jg
inc
jmp
cmp
cmove
or
dec
xlat
popa
stc
lods
pop
fisttps
jno
mov
fiadds
in
notl
xchg
dec
std
out
mov
add
aad
mov
ja
dec
ret
jbe
repnz
fld
pusha
pop
dec
sbb
or
out
dec
mov
js
imul
xor
dec
movq
or
fs
pop
mov
addr16
adc
mov
jnp
dec
pop
cmp
stos
notb
inc
mov
push
jecxz
movsl
pop
jge
cmpsb
sub
outsb
aad
ret
dec
sbb
fisttps
out
sub
sbb
mov
icebp
imull
ja
loope
mov
dec
push
mov
movsb
adc
lret
out
in
insl
xchg
cmp
cmc
cmp
add
sbb
jle
add
daa
lods
rorl
push
jl
test
int3
iret
mov
adc
mov
dec
cmp
mov
jno
push
shrb
testl
push
adc
fimull
push
sub
cli
stos
into
mov
sbb
je
out
out
js
cmp
adc
adc
fs
shlb
or
dec
sbb
dec
subb
adc
xchg
adc
dec
push
inc
mov
and
push
sbb
mov
inc
inc
mov
cmpsb
repnz
int3
sub
aaa
test
lcall
mov
aam
es
and
inc
pop
push
ja
test
jo
dec
lret
lods
dec
lds
mov
ficompl
and
xchg
dec
movsb
enter
sbb
dec
or
and
pop
dec
dec
cmpsl
sub
bound
or
movsb
aam
xchg
outsb
dec
loopne
das
pop
outsl
push
mov
dec
arpl
ret
lcall
scas
mov
rorl
pop
lret
dec
adc
inc
je
cmpl
dec
mov
pop
cmpsb
mov
jbe
dec
cli
pop
jnp
pop
or
jns
repz
xchg
cmpsb
mov
mov
std
mov
shlb
lea
sbb
iret
dec
jmp
stc
or
dec
add
inc
mov
jp
dec
cmp
mov
add
jae
movsb
adc
push
arpl
xchg
mov
mov
je
xlat
fs
sub
cli
out
sahf
mov
mov
mov
loopne
nop
push
add
add
ja
dec
xlat
push
adc
add
mov
push
mov
mov
pop
nop
cmc
push
dec
fwait
sub
cmp
pop
mov
mov
mov
fs
fadd
cltd
inc
out
adc
ds
in
add
mov
jp
pop
pop
ss
inc
negl
mov
cmp
inc
jl
add
data16
adc
sbb
dec
cmp
es
ficoms
rclb
xchg
inc
lds
cmp
fisubl
cmp
mov
mov
iret
jg
mov
icebp
adc
mov
adc
cmpsb
jge
xchg
pop
cmp
lods
or
dec
stos
xor
dec
jle
shrl
mov
sub
mov
aam
jbe
ds
addr16
fbstp
out
jns
daa
sub
push
xor
sti
mul
repz
mov
sub
pusha
adc
jle
jp
push
shll
push
jbe
or
icebp
pop
jl
inc
ds
les
sub
jne
ja
dec
ret
jle
push
aaa
imul
aaa
inc
jb
mov
lock
bound
jmp
sahf
in
xor
ret
addb
push
push
inc
fistps
mov
into
in
fildll
iret
cld
lret
hlt
icebp
xlat
je
sbb
push
fstl
pop
inc
cld
push
subl
gs
or
into
push
jmp
lods
jnp
movsb
push
lods
jg
fcom
imul
ja
dec
dec
loope
mov
sub
cmc
dec
and
outsb
enter
mov
xchg
mov
clc
push
jl
rorb
cwtl
dec
faddl
out
push
xor
push
push
sub
and
and
fildl
mov
mov
mov
sbb
adc
negl
inc
add
popa
xchg
leave
ficomps
nop
sbb
leave
out
push
cmp
mov
fistpll
jle
jp
fs
xor
movsb
mov
mov
lea
stc
in
idivb
into
outsb
push
push
jmp
add
repz
jo
jg
lods
jae
mov
inc
mov
outsl
pop
fsubl
shlb
push
inc
pusha
ret
push
jmp
dec
inc
aaa
mov
push
cmp
push
mov
sbb
dec
cmp
in
faddl
jl
sti
shll
xor
jg
mov
in
mov
hlt
icebp
cwtl
jmp
cmp
dec
sbb
jle
int
push
add
push
jle
insb
pop
fdivp
out
mov
xchg
or
dec
lock
int
gs
fsubl
enter
mov
sti
aaa
cmp
pop
xchg
xchg
dec
dec
leave
push
mov
cmp
jae
dec
cltd
add
inc
into
mov
adc
adc
dec
mov
aad
xor
das
fcoml
inc
xchg
in
lahf
adc
imull
and
pop
mov
inc
test
push
aam
push
ss
inc
sub
insl
mov
sbb
pop
pop
dec
cmp
push
fstpl
adc
jp
rolb
dec
dec
fwait
jne
ss
sbb
adc
clc
pushf
inc
inc
test
jle
add
sbb
scas
out
xchg
orb
xchg
inc
int3
dec
pop
push
aaa
mov
test
jb
dec
mov
and
dec
xor
add
fmull
es
xor
or
int3
jl
shrb
test
xchg
xor
decl
mov
xchg
ljmp
scas
jl
mov
roll
mov
je
stos
pop
iret
and
xor
mov
inc
ret
push
push
sub
nop
xchg
push
lret
xchg
movsl
mov
sarb
cmp
ret
and
lahf
pop
mov
rclb
daa
cmp
pop
add
insb
lds
cs
cwtd
les
repz
dec
aad
mov
jns
inc
fists
lgs
sbb
mov
push
jl
adcl
insl
xchg
dec
lods
xor
xchg
cmc
add
dec
mov
xchg
out
inc
aaa
jle
mov
pusha
sub
subb
in
std
int
jle
xor
dec
dec
stc
pop
test
inc
out
mov
flds
jae
aaa
add
rcrl
adc
out
add
jg
daa
lahf
push
and
leave
jmp
pusha
mov
scas
inc
cmp
mov
es
push
insl
fistpll
icebp
leave
jae
mov
dec
dec
scas
xor
jnp
cmc
jl
add
insb
sti
mov
icebp
pop
nop
es
and
bound
test
aam
dec
cmp
add
adc
mov
sub
std
push
xor
mov
aas
out
dec
clc
or
int3
stc
or
xchg
dec
cmp
stos
lods
inc
movsl
test
and
mov
stos
dec
pop
out
sahf
cld
inc
mov
xchg
adc
orl
push
imul
and
fimull
xor
dec
popf
out
push
and
mov
jmp
stc
lcall
dec
fwait
cmpsl
mov
loopne
mov
dec
cmp
cmc
imul
dec
jb
cltd
sbb
into
bound
push
dec
lods
mov
out
push
ret
dec
push
es
cmp
jo
sahf
lcall
dec
jle
xchg
dec
push
rcrl
ss
mov
pop
dec
dec
test
les
or
pop
jno
iret
pop
imul
ss
aas
mov
and
int
out
mov
stc
rcrb
push
xor
inc
adc
jae
fwait
pop
push
inc
dec
add
dec
cs
std
iret
xor
cwtl
and
mov
mov
lods
dec
sbb
inc
shr
test
and
out
mov
ficomps
sub
movsl
xchg
dec
negb
fistl
in
mov
shrl
scas
xchg
mov
das
sub
push
bound
outsb
sub
sub
pushf
cs
in
out
dec
shr
jle
cmp
pop
pusha
sti
scas
pop
push
fmuls
pop
int
xor
xor
scas
pop
push
enter
notl
fldt
cmpsl
movsb
cmp
insb
out
decl
sbb
jmp
jg
iret
les
cmpsl
jae
dec
mov
das
push
adc
stos
jle
jmp
in
out
scas
xchg
jg
outsl
and
stos
bound
int3
lea
fwait
dec
cld
lret
bnd
and
jl
jge
loop
adc
xor
lea
cmp
push
fimull
add
mov
jl
jge
ret
xchg
jle
jns
push
cld
mov
outsb
sarb
pop
cmp
bound
cmp
cmp
mov
jl
pop
add
xlat
and
mov
inc
rolb
int
popa
jg
inc
pop
lret
cs
xchg
xorb
sbb
inc
push
or
into
loop
rcll
in
pop
cli
inc
mov
leave
push
add
cmp
rcll
xchg
sub
jl
push
int
in
push
inc
testl
lods
or
inc
cmp
xor
fidivl
shlb
mov
ljmp
addr16
ds
xchg
xor
jb
push
push
aas
add
lods
shl
push
das
jg
jo
inc
es
mov
in
mov
inc
cmp
imul
or
fcomp
inc
fidivrl
mov
movsl
push
cwtl
mov
jl
lcall
sarb
cmp
movd
xchg
int
lea
lods
xchg
ljmp
sub
movsl
outsl
cli
rolb
dec
test
sbb
adc
sub
hlt
mov
pop
out
add
aam
mov
push
add
ds
das
or
jnp
aad
jg
mov
xchg
mov
mov
pop
scas
shrb
dec
leave
mov
add
rcrb
stc
pop
xchg
fistpll
aas
roll
mov
shl
mov
mov
dec
xchg
std
dec
icebp
push
fs
or
fcoms
insl
dec
jne
out
adc
testb
insb
dec
sarb
fbld
cmpb
mov
dec
xor
adc
or
movsb
sbb
jo
ficoms
sub
inc
adc
stc
and
aam
xchg
frstor
sbb
fbstp
cmovle
or
dec
daa
xlat
pop
in
xor
dec
inc
xchg
push
xor
mov
cmp
lock
dec
adc
lahf
cltd
mov
inc
lods
add
and
jecxz
rorb
js
hlt
fwait
scas
pop
mov
jmp
jp
xchg
push
repnz
dec
xor
adc
in
cmp
push
push
inc
dec
mov
xchg
je
jns
xchg
js
fists
add
insl
push
aam
mov
cmpsb
cmp
adc
mov
jecxz
fwait
cmp
dec
xchg
pop
stos
mov
jge
mov
pop
jbe
sbbl
add
cld
xchg
mov
imul
aam
xor
jbe
pop
stos
inc
shrb
cwtl
out
xchg
mov
data16
dec
daa
les
dec
xchg
jecxz
cmp
or
enter
sbb
xchg
movb
add
shr
fs
jg
dec
push
sub
jle
aam
push
lods
cmpl
imul
and
movsb
jle
insl
pop
dec
movsb
fcoms
adc
xchg
mov
pop
and
dec
dec
adc
cbtw
movsl
inc
xchg
shrb
imul
push
push
out
test
sti
fs
cmp
stc
out
add
sarb
fistps
iret
adc
int
mov
mov
inc
jae
ss
push
scas
sbb
jne
xor
popa
jae
negb
adc
inc
ret
or
jge
dec
nop
mov
scas
pop
and
sub
and
dec
out
dec
lcall
outsl
sub
out
pop
mov
xchg
push
int
fistpll
dec
xor
incl
mov
scas
clc
sub
push
inc
ljmp
inc
or
pop
pop
loop
mov
push
bound
stos
fwait
push
cmp
dec
mov
hlt
gs
cwtl
inc
sarl
test
pop
fiaddl
js
stos
push
mov
lahf
stos
scas
dec
jl
lods
pusha
cwtl
out
lahf
mov
mov
cmp
push
aaa
mov
dec
mov
adc
sub
divb
adc
pop
dec
icebp
mov
sub
inc
inc
test
sarl
arpl
dec
and
nop
les
sahf
or
inc
jmp
bound
adc
dec
je
repz
mov
ret
pop
gs
sti
dec
lods
pop
mov
mov
lcall
jle
ret
lcall
scas
cmpsl
push
loopne
jne
or
mov
xchg
mov
mov
scas
or
jg
dec
clc
inc
cmp
inc
test
pinsrw
stos
das
adc
and
add
fs
stc
push
das
xor
aaa
neg
and
fisubrs
es
adc
dec
movq
and
xor
fimuls
sub
cmp
add
jl
or
pop
or
fisubrs
iret
test
mov
inc
jl
icebp
clc
rclb
xor
adc
or
mov
cmpsl
pushf
inc
mov
outsl
mov
mov
adc
push
jecxz
mov
idivb
add
leave
and
adc
in
cmovne
cli
lret
dec
mov
jle
loope
leave
rolb
xlat
mov
loopne
sub
pop
dec
out
jl
clc
xor
addb
icebp
ds
push
loopne
mov
and
inc
dec
call
jl
fwait
and
sub
lods
jle
imul
lock
pop
xchg
js
add
fs
mov
ss
add
adc
into
push
nop
push
inc
cmp
jns
js
pop
pop
sub
mov
insb
sbb
mov
stos
stc
shrl
in
cltd
mov
cmp
daa
testb
xor
stos
inc
jle
mov
inc
cmp
in
inc
cmpsl
lret
push
sub
or
vmwrite
sahf
mov
js
and
mov
outsl
mov
das
jg
incl
pop
in
lahf
push
pop
repz
pop
das
subb
cmpsb
xchg
mov
int3
aad
stos
mov
shrb
pop
push
push
sub
or
mov
mov
aaa
pop
jg
mov
jp
mov
dec
hlt
sbb
loopne
test
push
andb
dec
mov
pop
fwait
pop
clc
dec
pop
fmuls
cltd
test
leave
xor
adcl
push
enter
mov
push
cwtl
dec
mov
lahf
repz
out
adc
push
jb
fdivrs
das
pop
rcrl
sbb
jns
xlat
out
dec
mov
decb
dec
cmp
mov
iret
int
xchg
rol
mov
outsl
test
jo
xchg
enter
cwtl
pop
cmp
mov
add
dec
jbe
adc
int
inc
add
dec
lods
jge
scas
popf
es
not
xor
out
pop
in
pop
or
imul
test
int
nop
call
cwtl
inc
scas
push
enter
roll
dec
or
and
dec
jge
rorb
sbb
push
inc
and
dec
stc
nop
call
test
inc
dec
into
arpl
push
fimuls
jnp
fsubl
adc
dec
xor
push
jo
les
cmp
out
pushf
xor
dec
ret
shrb
mov
call
jns
or
and
push
xchg
dec
push
imul
insl
jns
jle
add
fucomip
loop
mov
dec
jae
adc
dec
add
pop
mov
repnz
cmpsb
or
inc
pop
lock
jbe
push
sub
xor
movsl
iret
mov
dec
xchg
mov
mov
data16
out
sbb
insb
sysexit
dec
jae
movsbl
ret
and
hlt
add
cmp
sahf
mov
push
loop
scas
decl
mov
cltd
jmp
mov
inc
jo
or
xor
and
add
xor
or
ss
dec
mov
lcall
lret
cwtl
cmpb
popa
iret
xchg
mov
data16
push
cmp
adc
push
ds
outsb
jecxz
jmp
fwait
pop
mov
pop
dec
jp
jg
inc
stos
aaa
jbe
dec
in
pushf
sub
pusha
xchg
stos
outsl
or
dec
jg
outsl
loop
and
dec
jbe
sub
sub
push
lds
mov
lea
adc
pop
sti
test
jnp
or
movsl
sahf
dec
insl
xchg
fsubrl
enter
dec
out
pop
mov
adc
mov
into
dec
xchg
xor
stos
add
push
js
dec
inc
lods
cwtl
xor
xchg
testb
fcoms
sub
dec
out
inc
push
pop
stos
or
bswap
ret
or
roll
sbb
adc
in
cmp
add
es
mov
push
and
test
xor
cmp
push
push
mov
or
aas
pop
data16
xlat
lahf
lcall
mov
dec
jl
aam
mov
mov
dec
rol
out
lcall
mov
jb
lret
ss
pop
stos
movsb
jne
dec
fwait
mov
or
inc
lret
sbb
push
test
hlt
cltd
in
test
dec
fdivrl
jno
insl
dec
fisubs
dec
inc
je
daa
jp
or
jbe
fucomip
jne
xchg
sub
or
dec
mov
movsl
repz
mov
aam
fidivrs
jne
wrmsr
ss
push
add
pop
fmull
loope
xchg
mov
dec
dec
fs
add
cmpsb
pop
rcrb
and
lcall
add
add
mov
movsl
cmp
out
mov
scas
xor
jle
in
add
and
sbb
cmp
ljmp
xor
mov
adc
jl
and
in
lods
push
pusha
cltd
pop
jl
add
out
popf
cmp
and
repz
lods
addr16
lret
movsb
gs
test
arpl
stos
subl
inc
sbb
push
jle
loope
aas
scas
xor
and
cs
call
jo
adc
and
pop
mov
divb
ret
out
mov
dec
insb
adc
outsb
pop
pop
jo
lods
mov
sahf
mov
das
pop
cs
jns
inc
movsb
dec
mov
fdivl
dec
adc
popa
repz
rorb
fiadds
sbb
sub
test
dec
pop
lret
in
push
cld
inc
dec
notl
sub
xchg
rep
dec
je
out
jle
loopne
cltd
dec
cmp
pop
add
mov
inc
inc
dec
mov
push
imul
and
mov
pop
cmp
jae
sbb
xchg
jne
stc
lods
xor
aad
xlat
or
fimull
sbb
cmp
xchg
test
scas
dec
sub
mov
ficoms
shll
cmp
lds
xchg
fildll
and
dec
dec
cmp
cmp
test
pop
and
inc
jmp
push
push
cltd
out
lods
inc
push
insb
aam
adc
loop
xchg
and
jo
xor
sbb
jle
sbb
je
push
adc
sbb
fisttps
inc
mov
pusha
push
jb
inc
inc
jl
jbe
xchg
push
int
icebp
sbb
fs
inc
idivb
pop
nop
adc
jmp
in
mov
xchg
stos
inc
add
jae
cmp
iret
arpl
push
dec
loop
pop
addr16
lret
ret
dec
das
xchg
mov
jle
jmp
cltd
add
xlat
ret
push
dec
enter
mov
mov
sbb
outsl
jnp
insl
je
dec
or
scas
mov
mov
mov
push
out
mov
aad
fistpl
cld
lods
or
ss
jno
push
xchg
test
orl
nop
push
scas
dec
aaa
imul
fiadds
cld
insl
pop
into
push
cmp
sub
inc
mov
sub
mov
insl
pop
movsb
iret
mov
jae
dec
sub
test
rclb
movswl
mov
sbb
fmull
cmp
shrl
arpl
pusha
cmpsb
rcl
lock
test
jno
xchg
push
mov
in
popf
ljmp
mov
pop
push
dec
add
sbb
les
xchg
sub
jno
pop
insl
jnp
dec
mov
add
ror
cmp
iret
insl
cwtl
rorl
or
mov
jecxz
or
std
jae
push
outsb
fmul
xchg
lret
dec
or
lock
xchg
pusha
xlat
inc
loopne
sti
movsb
or
xor
dec
mov
call
jge
mov
stos
inc
fcoms
int
int3
fbstp
cli
adc
fimuls
jg
sub
push
js
pop
jmp
es
aas
scas
push
or
mov
les
nop
push
add
dec
adc
inc
aam
push
fcmove
dec
sarl
shrb
xchg
jp
pop
dec
jnp
scas
push
dec
test
push
pop
aas
jmp
push
dec
mov
mov
xor
lods
loope
out
aas
dec
push
dec
push
movsl
andb
int3
dec
dec
loopne
stos
ret
pop
bound
pop
jae
dec
inc
loope
xchg
je
jle
jp
test
cmpsl
fimuls
rolb
mov
inc
mov
xor
cmp
adc
out
test
fwait
mov
insb
outsl
adc
push
ss
fcomp
xchg
inc
xchg
mov
scas
dec
outsb
popf
inc
add
push
ror
cli
rcll
scas
les
dec
lock
sub
inc
and
xchg
inc
hlt
test
mov
dec
popf
jle
movsl
ret
adc
int3
sbb
ds
mov
outsb
jecxz
add
scas
dec
cld
lea
hlt
lahf
das
hlt
dec
cmp
neg
jp
inc
inc
and
call
jl
mov
bound
notl
subl
testb
les
xchg
xlat
jae
xor
pop
test
xchg
clc
or
mov
ficoms
or
and
daa
pusha
jne
pop
aas
cld
dec
add
enter
mov
filds
mov
mov
les
in
inc
stos
and
jle
js
lret
cmp
cld
in
cmc
loop
pop
cmp
mull
outsb
roll
pop
xchg
aam
jle
lods
xor
pop
pushf
in
outsb
sbb
out
lea
cmp
out
inc
into
jne
lea
filds
shl
jge
decb
and
jbe
push
xchg
js
loope
xchg
add
mov
push
add
xchg
cmp
scas
lahf
sahf
xchg
jle
bound
sub
jl
push
mov
daa
mov
inc
dec
das
push
fdivrs
mov
movsb
mov
add
cmp
pop
sbb
popa
in
inc
nop
iret
push
ds
jg
pop
dec
xor
jl,pn
push
ljmp
jmp
popl
push
orl
dec
inc
xor
arpl
divl
inc
adc
jne
mov
inc
lock
imul
loope
xor
jae
dec
sbb
aaa
testl
in
lods
fstpl
jle
int3
sbb
je
push
inc
dec
daa
mov
mov
mov
mov
jbe
data16
call
ret
dec
pop
inc
mov
add
inc
rcll
sub
and
pop
into
aad
notl
jge
insb
adc
shrb
or
jle
jae
cmp
dec
mov
fdivr
out
rcll
addr16
inc
dec
push
add
iret
pop
mov
jo
push
inc
stos
aaa
dec
aam
movsl
or
inc
and
cmpsl
and
dec
pop
xorl
inc
shl
fstpl
scas
mov
xchg
cmp
jmp
adc
dec
pop
push
fstpt
mov
mov
je
push
or
fisttps
arpl
inc
push
stos
std
imul
inc
mov
loopne
jbe
mov
dec
loop
mov
sub
lahf
sub
and
popa
scas
or
sar
xchg
sbb
sbb
inc
sbb
push
xchg
mov
loope
mov
in
lret
adc
dec
or
aaa
test
out
sub
xor
lods
mov
pop
add
add
sub
out
out
jbe
pop
mov
xchg
clc
in
push
mov
sub
jp
jmp
fwait
push
aam
add
lods
lahf
add
mov
lock
cmpsl
dec
aam
cmp
inc
call
jp
inc
lret
fsts
jl
arpl
loope
push
iret
hlt
ss
jne
sub
sub
or
js
mov
daa
pop
into
loope
xlat
and
pop
sbb
in
jne
mov
dec
iret
das
movsb
push
jae
xchg
cs
cmpsl
les
sahf
dec
adc
ret
xor
dec
cs
out
std
icebp
les
mov
xor
sub
mov
mov
jnp
ljmp
cmp
mov
mov
push
scas
cmp
scas
enter
push
adc
and
sahf
xchg
push
lock
lods
lods
jno
mov
fisubrl
repz
lea
mov
push
jge
in
adc
repz
cld
stos
cwtl
adc
xlat
data16
pop
add
scas
ja
pop
dec
subl
xlat
pop
dec
mov
xor
shrd
pop
dec
push
arpl
mov
repnz
mov
cmp
cmp
dec
fsub
push
pop
ss
or
sbb
xchg
jo
mov
mov
scas
out
lcall
dec
pop
popa
inc
js
mov
movsl
ret
dec
leave
mov
mov
dec
out
inc
xchg
add
pop
xor
mov
out
cmp
xchg
jmp
inc
aam
ret
movsl
hlt
add
inc
add
push
lret
dec
push
jno
adc
dec
rcrl
sbb
fadd
push
jp
loop
pop
sbb
and
cmp
lahf
outsb
sbb
lods
dec
ret
mov
fwait
clc
inc
inc
dec
iret
les
mov
inc
enter
cmp
cmpsl
jno
in
and
cs
pcmpgtw
push
xchg
rorb
lea
push
orl
fxch
jecxz
bound
cmp
scas
cs
iret
push
push
jg
sub
rcll
stos
outsb
mov
xchg
sbb
jle
aaa
push
jnp
push
push
or
shrb
ljmp
or
test
dec
adc
or
lods
adc
dec
insb
mov
loope
and
mov
xor
xchg
addr16
dec
fimuls
icebp
add
sbb
add
cmpb
mov
fdivl
das
push
sbb
xor
sub
test
orl
dec
xlat
jge
ss
inc
pop
in
fsubrs
inc
and
mov
push
mov
cs
les
dec
sub
add
lret
je
pusha
push
cmpsl
and
mov
aas
mov
lods
add
push
aaa
roll
std
hlt
push
or
inc
mov
inc
xor
jo
dec
jno
cs
das
flds
dec
dec
inc
imul
outsb
lods
testl
push
or
clc
mov
mov
dec
int
mov
push
dec
adc
mov
jle
in
xlat
inc
xchg
jnp
popa
and
dec
nop
aad
popf
out
dec
sub
adc
stos
mov
loopne
sbb
in
xchg
test
shr
pop
mov
add
mov
adc
push
iret
fldl
divb
gs
jae
insb
divb
push
sub
lcall
daa
imul
incb
xchg
push
xchg
into
das
dec
cltd
loop
adc
jnp
dec
inc
add
cmc
pop
dec
jg
pop
sbb
ret
mov
into
daa
sarb
dec
aad
stos
adc
pop
cmp
inc
push
or
pop
out
mov
and
dec
sub
cli
mov
cs
xchg
in
sub
mov
lret
ret
sarl
lret
jle
scas
aam
rcrb
push
dec
adc
cmpsb
dec
jg
daa
sbb
imul
aas
jp
mov
jmp
sbb
adc
jl
jne
adc
cmpsb
and
and
xchg
ljmp
adc
xchg
xor
adcl
fwait
hlt
int3
push
loope
xor
jl
loope
push
add
icebp
test
jl
mov
mull
fs
ds
movsl
and
sub
rorb
dec
push
push
xchg
cmp
mov
inc
mov
call
push
jl,pn
jno
or
dec
aam
xchg
iret
lods
dec
jnp
clc
movsb
xor
leave
inc
dec
ss
dec
lcall
jle
hlt
cwtl
add
xor
shl
xor
dec
repz
push
scas
cmp
ljmp
mov
ja
sbb
rorl
dec
or
or
inc
int
iret
push
mov
add
inc
iret
sbb
sbb
test
inc
cmp
cmp
jae
hlt
xor
sbb
dec
sti
jp
mov
jmp
test
jle
jle
negl
dec
jg
pop
mov
mov
or
sub
xchg
jbe
cltd
rorb
call
inc
lret
jg
push
lret
mov
mov
add
and
lea
hlt
push
mov
xchg
sbb
jmp
push
in
mov
iret
scas
jne
dec
enter
xor
fiaddl
cmc
mov
add
inc
xor
inc
scas
push
lahf
rol
fidivrs
dec
sub
inc
jno
clc
int3
movsb
fldt
stc
testb
into
nop
cmp
push
dec
jno
sbb
xor
stos
dec
clc
xchg
dec
jb
je
inc
sahf
test
xor
pushf
js
ret
mov
repnz
xchg
dec
incb
icebp
sahf
dec
lock
loopne
adc
pop
cwtl
daa
sub
scas
test
rcr
xchg
testl
dec
out
add
inc
jp
movsl
sub
scas
lea
clc
dec
stc
sbb
insl
xchg
in
dec
das
int
mov
push
dec
enter
inc
popl
xlat
js
xchg
sbb
mov
mov
arpl
jl
dec
and
out
int
xchg
sahf
or
jl
xor
mov
outsb
sbb
and
fisubrl
sti
pop
dec
imul
test
fistpll
dec
inc
mov
or
jns
cmp
in
push
movl
ret
mov
aaa
dec
pop
pop
int
dec
hlt
cmc
sbbb
or
mov
cmc
inc
cwtl
dec
pop
lret
int
cmpsl
inc
inc
pop
test
lods
imul
jo
mov
dec
shrl
fildl
dec
add
aad
adc
ficompl
popf
iret
outsl
or
repnz
and
stos
stc
cli
dec
int
add
nop
sbb
dec
mov
imul
clc
dec
lea
jle
jns
les
imul
cwtl
mov
xor
dec
and
int
std
cltd
or
adc
icebp
xchg
pop
fwait
xchg
fldt
or
push
lret
or
insb
lret
addb
cs
sbb
dec
sti
iret
jb
fwait
ljmp
add
test
aaa
cmpl
xchg
scas
cmp
push
cmp
push
shlb
outsb
les
adc
push
mov
shrl
ss
adc
dec
out
repz
push
dec
rcll
cmp
testb
ja
push
pop
xchg
dec
xlat
test
div
shl
aaa
and
sbb
data16
cmp
mov
movsl
jle
jg
adc
mov
mov
push
decb
inc
inc
icebp
mov
loope
mov
mov
int3
ret
lahf
mov
pop
negb
and
dec
mov
pop
adc
data16
mov
mov
dec
pop
clc
mov
jg
dec
cld
test
outsl
insb
dec
push
cli
dec
sbb
push
push
lods
in
gs
dec
movsb
call
push
sti
dec
outsb
cmpsl
or
out
jne
dec
cmc
fistpl
mov
dec
jg
add
ljmp
test
out
jns
cmp
lods
add
inc
or
xchg
pop
dec
sub
mov
and
mov
ret
xchg
cltd
dec
aaa
push
ss
leave
cli
push
popf
jmp
stc
dec
das
sub
bnd
and
lods
xchg
lds
sub
sbb
in
xor
xchg
insb
jns
mov
xchg
movb
add
fwait
or
sub
push
fdivs
pop
dec
sti
lods
fs
cmc
adc
fnstenv
dec
movsl
mov
test
inc
xchg
repnz
lds
stc
dec
xchg
add
dec
mov
mov
adcb
xchg
pmaxsw
mov
push
les
int
cmpsb
jecxz
testl
dec
mov
dec
aad
mov
test
dec
sbb
test
mov
hlt
rcrl
push
sbb
dec
test
nop
add
mov
xor
out
insb
loopne
dec
dec
fidivs
mov
cmp
fs
in
clc
pop
loop
movsl
iret
push
inc
mov
cltd
repnz
out
je
dec
xlat
jge
into
inc
imul
add
cli
mov
mov
adc
inc
dec
cs
insl
add
inc
xor
cli
inc
jo
xchg
imul
or
mov
jg
inc
dec
pop
mov
pop
dec
inc
add
cmp
jns
xor
cmp
mov
jl
dec
test
rclb
jnp
sub
fdivrl
dec
or
cmpsb
add
aam
sahf
inc
sbb
dec
inc
fistps
sahf
stos
bswap
push
jne
fcomps
je
adcl
imul
lds
mov
add
inc
sbb
sbb
inc
scas
adc
iret
xor
jo
out
scas
ss
dec
pop
sti
dec
daa
mov
push
jl
into
or
dec
mov
sar
jmp
sbb
mov
jle
sti
sub
lcall
add
stos
xchg
fwait
test
xchg
mov
cmc
add
aam
push
outsb
adc
xor
mov
mov
subb
mov
jne,pn
cmp
xor
test
xchg
mov
in
jno
jns
stc
add
mov
lea
add
jae
pusha
push
push
or
pop
fmull
mov
int
inc
dec
xor
jg
mov
mov
test
xor
test
stos
mov
add
cwtl
sarb
mov
fsubl
lahf
fs
data16
sub
mov
push
push
add
lret
aaa
andl
test
mov
dec
ret
movl
insl
or
int
repnz
lcall
pop
out
orb
adcl
out
inc
sub
in
mov
fldz
loope
xor
jle
xchg
pop
dec
in
push
push
pop
icebp
mov
stos
mov
add
mov
mov
out
push
insb
cmp
or
dec
movsl
push
loopne
pusha
sbb
push
loop
sub
and
in
jl
dec
lea
push
jl
lcall
cld
lds
sarb
jnp
cmp
mov
rorl
adc
out
cmp
inc
mov
dec
xor
rorb
dec
jl
pop
push
push
cs
aas
addr16
fidivrl
insb
fprem1
adcl
push
add
test
sbb
pop
jg
mov
fisttpll
mov
mov
hlt
push
fwait
lret
xchg
out
jle
or
inc
jl
out
jl
mov
leave
xor
pusha
push
lret
mov
daa
test
add
xor
bound
inc
fs
call
js
xchg
test
sbb
roll
or
lret
notl
sub
sub
lods
mov
ja
pop
inc
sub
mov
int
dec
push
aam
ss
clc
add
fwait
inc
pop
jl
jge
daa
movb
pusha
arpl
shrb
nop
mov
test
loope
sub
movsl
jno
stos
sti
fs
pop
mov
sbb
inc
popa
in
mov
xchg
dec
push
pop
push
mov
lahf
add
mov
ds
fisubl
adc
jg
fstpl
jae
dec
das
or
push
xor
inc
sub
pop
and
mov
jg
xor
out
cmp
and
repz
dec
jae
ljmp
pushf
add
dec
jns
lods
imul
bound
xor
inc
add
jle
push
cmp
clc
push
test
adc
jmp
cmp
into
sbb
movhps
into
cld
inc
mov
sahf
movsl
out
xchg
scas
jl
iret
mov
xor
inc
stc
or
dec
push
int
lret
cli
cmp
sub
and
iret
enter
mov
lahf
loop
and
pop
add
sbb
popf
jbe
pusha
xor
inc
stos
xlat
dec
fwait
inc
inc
inc
mov
pop
xchg
dec
das
aaa
insl
arpl
pop
mov
dec
sub
sub
mov
jne
mov
adc
sbb
out
xor
ja
mov
mov
bound
push
cld
cmp
add
in
cmp
std
and
mov
and
in
into
dec
movsb
ljmp
lods
adc
dec
cld
and
pop
mov
xchg
add
push
in
hlt
cld
dec
xchg
sti
push
pop
aam
fmuls
mov
pop
subb
call
out
loop
pop
xor
add
lret
pop
rorb
adc
dec
add
inc
gs
xor
scas
outsl
dec
icebp
mov
jns
dec
js
mov
jge
test
mov
cmp
scas
push
mov
sub
dec
xor
int
ja
outsl
dec
scas
add
jae
cmc
xor
test
dec
cmp
outsb
sbb
dec
faddp
push
adc
xchg
push
dec
sub
or
rorl
jp
data16
je
mov
cmp
in
push
mov
cwtl
dec
mov
shrl
sbb
movsl
cli
jmp
pop
pop
cmpsb
pop
add
mov
sbb
lds
add
inc
pop
xor
pusha
scas
cmp
ljmp
add
rorb
scas
cltd
pop
out
pop
outsb
sub
arpl
adc
ljmp
loop
sbb
ret
cmp
xor
call
push
sub
scas
xor
shrb
mov
add
jp
adc
pop
mov
cmpsb
js
pop
lcall
adc
out
into
push
xor
push
sbb
aaa
jnp
pusha
lock
movsb
fistl
pusha
ss
or
call
sub
sub
cmc
and
sti
in
sub
das
add
sbb
mov
dec
dec
mov
or
popf
push
pop
repnz
pop
popa
icebp
adc
mov
xor
fdivp
add
lcall
scas
cmp
iret
pop
pop
imul
cli
imul
and
gs
xchg
pop
pushf
dec
xchg
iret
sti
daa
adc
pop
dec
dec
mov
jo
fmull
aam
loop
mov
dec
gs
repnz
inc
jecxz
and
or
xor
jb
pop
dec
add
jl
jns
mov
sahf
cmp
cmpsl
mov
xor
fsubl
and
rcrb
dec
out
mov
sub
add
aas
jo
lret
dec
mov
lret
jle
out
loope
cmove
dec
sbb
mov
mov
and
ss
mov
ret
dec
daa
cltd
cld
fistl
inc
mov
sahf
fistps
addb
pop
xor
jnp
mov
push
push
xlat
cmc
das
test
and
mov
sbb
sub
dec
out
aaa
and
test
mov
mov
jp
dec
imul
sub
mov
cmc
decb
out
fwait
dec
clc
push
repnz
cmpsb
test
xor
rep
inc
mov
sbb
push
jp
imul
fmul
shrl
dec
xchg
pushf
xchg
cmp
lret
xor
dec
in
or
dec
jns
adc
cmpsl
icebp
sbb
loop
inc
out
mov
cmp
jo
xchg
cmp
mov
and
imul
mov
pop
pusha
dec
xor
push
test
push
scas
mov
dec
pop
incl
jo
adc
call
push
orl
iret
fisttps
cmp
or
and
add
stos
dec
mov
cmp
jae
push
xchg
inc
cmp
mov
sub
or
pop
sub
scas
dec
out
jg
dec
rcr
gs
filds
adc
or
mov
dec
dec
jbe
pop
jo
add
and
ljmp
jno
cmp
cltd
sbb
mov
xor
dec
pop
cwtl
or
lods
repz
outsl
add
dec
js
xchg
dec
inc
adc
jbe
dec
sbb
mov
push
dec
lret
inc
push
dec
cmp
movsl
inc
js
clc
les
loope
dec
push
fldenv
cmp
mov
inc
pop
int3
dec
mov
inc
dec
fs
ds
sbb
gs
notb
dec
sbb
in
out
out
fldt
or
dec
andb
ror
aam
dec
fdivrp
dec
in
adc
pop
lock
push
arpl
push
jne
cmc
mov
adc
sti
shll
add
adc
mov
hlt
xchg
nop
mov
push
icebp
dec
incb
dec
jge
jbe
out
mov
or
mov
fidivs
push
bound
dec
lea
aas
jo
add
xchg
inc
dec
mov
xchg
iret
insl
ret
in
xor
hlt
or
adc
jg
or
scas
adc
adcl
cld
ds
icebp
lods
pop
addr16
mov
ret
push
jl
fbld
loopne
rcr
push
inc
adc
std
push
repnz
or
jne
pop
inc
and
icebp
xchg
mov
stos
lahf
fs
stc
jl
sahf
ret
mov
push
dec
jg
cmp
mov
mov
sahf
jns
les
and
and
sbb
jb
jle
jp
mov
fisubs
popa
sub
adc
push
ss
movsb
dec
outsb
repz
cmp
xor
inc
jbe
xor
jle
in
clc
inc
aam
mov
xchg
push
lret
ljmp
mov
stos
mov
addr16
cmp
mov
cwtl
pushf
cmp
jle
stc
mov
ret
jae
push
add
push
cmp
icebp
dec
cmc
pop
mov
shll
dec
pop
push
stos
add
mov
rolb
popf
hlt
mov
imul
sbbl
mov
sbbb
xlat
push
adc
mov
in
push
jge
aam
jmp
enter
mov
shr
xor
xor
sub
lcall
dec
or
mov
sbbb
je
loopne
imull
lods
push
push
mov
dec
lods
sbb
cmp
mov
movb
mov
pop
dec
mov
addr16
push
pop
cmp
mov
gs
mov
hlt
sahf
dec
rorl
inc
pop
inc
sub
out
in
dec
push
or
loop
imul
dec
push
lock
andl
dec
or
pop
and
jns
loopne
bound
mov
pop
or
dec
sbb
cmpsb
int3
push
push
adc
cmp
sahf
dec
daa
scas
jp
lea
cwtl
inc
cmp
dec
dec
fdivs
jns
mov
xchg
rcll
adc
inc
adc
lock
mov
mov
pop
lar
mov
test
inc
jp
or
loop
es
outsb
mov
xor
or
xchg
stos
add
jb
push
xor
sti
mov
dec
push
stos
lods
stos
arpl
mov
sub
mov
pushf
pop
inc
cmp
cmc
inc
cmp
push
fsubl
lret
xor
xchg
mov
pusha
jae
sub
mov
cli
add
or
iret
jle
pop
push
fidivrl
dec
cs
mov
xor
push
scas
sbb
fistpll
dec
bound
pusha
test
jg
jb
inc
outsb
fs
inc
push
out
pop
rclb
sub
adc
mov
inc
push
push
pop
pop
xor
ja
dec
xor
in
imul
jl
or
rclb
stos
xchg
xchg
and
sbb
mov
add
mov
mov
xor
mov
add
outsl
push
daa
scas
or
mov
jl
jp
mov
inc
or
dec
jg
shrb
arpl
and
mov
and
xor
popl
mov
and
inc
ficompl
jnp
into
shlb
dec
lods
and
ffree
jp,pn
dec
divb
test
push
dec
into
mov
mov
or
bound
sbb
lret
cmp
dec
fsubr
xchg
gs
push
ja
jne
mov
dec
mov
adc
outsb
fstpl
dec
dec
or
fimuls
cmp
clc
into
xchg
mov
dec
dec
jmp
mov
push
push
mov
push
push
fiadds
sub
sub
adcb
jno
pop
mov
mov
dec
stos
fs
sarb
dec
adc
insl
sbb
mov
inc
testl
std
lret
fsubr
outsb
sahf
mov
mov
dec
mov
cwtl
popf
outsb
xor
or
push
dec
dec
stc
mov
icebp
cltd
in
rorl
sahf
out
adc
out
or
push
dec
mov
ret
stos
xchg
dec
ss
mov
jecxz
orl
and
jnp
fs
mov
inc
mov
pop
push
dec
cmp
push
xchg
out
pop
dec
cmpsb
adc
cld
xchg
out
popa
mov
mov
cmp
lcall
int3
mov
shlb
rorl
mov
xor
or
cmpsl
mov
testl
dec
sub
aad
mov
jge
daa
test
fxam
pop
out
mov
dec
pop
add
sbb
mov
dec
sti
push
sub
test
xchg
dec
rcrl
jo
in
cmp
add
jp
add
pop
cmpsb
mov
cmc
repz
jmp
fcompl
inc
push
xchg
repz
cmc
or
inc
adc
fstps
fcmovne
dec
jmp
xor
sub
out
outsl
inc
push
sbb
adc
daa
fmul
pop
jecxz
lahf
xchg
imul
inc
push
dec
lods
sub
mov
dec
out
imul
addr16
jl
stos
loope
xchg
aad
test
sub
repz
dec
lea
push
fmull
insb
inc
out
mov
add
sarl
cmp
roll
sbb
cmovle
out
mov
jnp
dec
mov
pop
addr16
lret
push
bound
incb
in
ja
cmp
fisubrs
dec
dec
and
rorl
mov
cmpsb
jnp
jo
sbb
ret
popa
clc
test
push
dec
je
xor
icebp
pop
dec
roll
dec
or
outsl
push
sbb
aam
and
mov
out
mov
sub
fs
scas
cmp
sbb
dec
or
clc
adc
outsl
jp
popa
add
lret
ljmp
sbb
cmc
pushf
xchg
mov
and
cmp
dec
bound
mov
xchg
push
ret
xchg
jo
dec
jns
jb
sub
mull
sti
adc
fisubrl
xchg
ja
jg
push
and
jp
in
mov
rorb
xlat
add
mov
ret
mov
loope
push
dec
pop
mov
adc
push
cltd
add
jns
xor
xor
xchg
push
adc
adc
dec
in
jmp
mov
push
enter
outsb
sbb
dec
dec
movsl
push
xorb
xor
fs
push
inc
sub
insl
and
cwtl
dec
cmp
popa
add
jg
iret
adc
repz
fwait
inc
lahf
pop
loope
lcall
dec
pop
cwtl
or
pop
aam
and
hlt
fimuls
adc
scas
std
dec
cs
jge
call
add
jle
xor
jbe
and
pop
push
cltd
aam
je
fwait
js
fstps
fisubrl
stos
xorb
fsubl
iret
adc
push
or
scas
mov
out
pop
mov
mov
cs
js
xor
pop
fistpll
repz
icebp
mov
cmp
xchg
push
xor
dec
out
jle
xchg
push
inc
imul
outsl
sbb
rorb
sbb
fstpt
js
push
xor
push
sub
out
or
cmp
pop
sbb
cmc
jle
add
into
hlt
fimull
scas
push
scas
mov
xchg
jmp
dec
add
repz
cwtl
lods
fimull
cmp
cmp
sub
sub
pop
xor
jnp
cmpsb
ja
push
inc
or
push
dec
add
repz
push
call
xchg
fwait
push
jle
ljmp
jo
mov
pop
pop
cmp
shlb
cmp
lods
dec
ret
jmp
mov
je
jns
cmpsl
push
cmc
or
add
fstl
leave
push
push
sub
ret
jb
jle
jae
xchg
lods
iret
inc
jg
lea
loopne
stos
pop
sti
sahf
mov
cmc
outsb
jle
cltd
in
int3
cmp
insl
rorl
insb
mov
mull
push
dec
lret
out
mov
dec
push
pop
adc
inc
dec
lahf
jecxz
sub
jle
clc
adc
xlat
xchg
shlb
and
test
mov
push
iret
jno
mov
jbe
jo
int3
pop
daa
pop
into
pop
xchg
xchg
out
jl
fisttpl
jbe
popa
xchg
lds
dec
call
ds
fwait
repz
iret
sahf
shlb
das
jo
loop
add
in
mov
xchg
fadds
and
rcrb
cli
push
lea
arpl
and
jbe
xor
push
mov
ljmp
xchg
aam
lcall
fldl
pop
pop
and
pop
daa
int3
push
addr16
push
dec
out
xchg
imul
xlat
mov
cmp
add
dec
stos
in
xchg
dec
imul
mov
fmuls
sub
scas
pop
cmp
dec
jo
push
add
or
lea
cmp
mov
imul
sub
dec
clc
inc
fwait
adc
sub
or
je
cs
jle
and
dec
testl
xor
daa
pop
rolb
dec
inc
pop
mov
and
add
fisttps
adc
pop
in
pushl
dec
stos
cmc
cld
sbb
mov
jbe
sbb
iret
or
push
out
pop
inc
dec
das
cmp
lods
cmp
pop
adc
xchg
dec
cmp
push
jbe
adc
sbbb
dec
jg
sbb
mov
cmp
pusha
sub
mov
sbb
enter
push
push
insl
lea
adc
dec
rorl
jle
adc
add
testl
sbb
xchg
stos
stc
into
fiadds
xchg
mov
imul
cmp
dec
add
xchg
mov
jbe
testb
push
dec
test
dec
inc
pop
cmp
add
scas
lret
push
cmc
fisttpl
pop
dec
ss
and
push
cli
sbb
into
pop
rcll
enter
add
int3
sbb
push
fimuls
mov
out
fmuls
and
dec
push
dec
fstpl
xchg
ret
xor
cs
lahf
std
mov
pop
jecxz
dec
mov
xchg
sbb
jns
loopne
aaa
in
mov
jle
dec
mov
std
jmp
sbb
sbb
sub
push
lods
inc
mov
xor
mov
jbe
and
jno
dec
in
imul
sahf
mov
sbb
adc
or
dec
dec
push
inc
sahf
inc
leave
loopne
popa
dec
fidivrs
into
pusha
shld
inc
dec
jge
insl
cmp
out
dec
and
enter
dec
mov
push
mov
xchg
pop
xchg
push
cmc
dec
pop
js
and
scas
lret
mov
dec
lods
std
xor
cmp
cmp
pop
scas
jle
nop
dec
mov
je
add
fwait
push
imul
into
mov
xchg
test
mov
loopne
aam
aaa
icebp
fisubl
cwtl
inc
dec
das
mov
arpl
inc
fs
ljmp
lret
dec
mov
and
popa
mov
lret
mov
insl
mov
fnsave
popa
cmc
insb
sbb
icebp
jecxz
addr16
mov
stos
imul
ret
or
pop
dec
nop
rcrb
jo
and
int3
dec
jb
mov
dec
repnz
js
pop
jne
pop
or
int
les
xor
sti
mov
mov
out
push
popf
jl
addr16
shl
adc
push
sub
cmp
push
pop
fcoms
lcall
nop
xor
int3
shrb
or
into
or
leave
mov
lea
push
lahf
dec
aad
inc
jp
push
push
xchg
dec
sti
cmp
push
dec
xchg
xor
stos
loope
push
dec
add
mov
js
mov
fildl
dec
push
dec
pop
stc
aaa
sub
pop
or
xchg
jbe
daa
xchg
push
dec
cmc
jg
mov
orb
add
dec
or
sub
sub
in
ljmp
pop
dec
decb
sbb
jb
jno
cmp
lea
mov
das
into
push
dec
pop
dec
xor
in
sbb
xor
aam
repnz
push
dec
add
pop
mov
xchg
orb
mov
dec
jnp
cld
push
mov
dec
gs
sub
inc
out
lods
sbb
dec
ss
pop
addr16
and
add
and
jl
bound
testl
in
in
fstpl
dec
add
inc
rorl
dec
mov
mov
pop
cmp
xorl
shll
or
add
mov
pop
push
popa
incl
fadd
and
orl
nop
pop
xchg
shll
fildll
outsb
sub
pop
dec
add
ljmp
cmpsl
dec
pop
clc
mov
mov
mov
lret
dec
jae
jecxz
mov
pop
das
dec
lcall
out
mov
fld
nop
bound
xor
jecxz
push
orl
roll
push
cmc
dec
jg
inc
dec
popf
nop
test
jno
dec
cmp
adc
mov
pushf
xchg
dec
mov
popa
pop
xchg
dec
stos
scas
pop
adc
cmp
out
mov
mov
sub
xchg
dec
or
dec
loop
lcall
inc
and
loopne
mov
adc
mov
cmp
mov
push
or
lahf
adc
fnstcw
sbb
dec
test
aaa
in
insb
adc
dec
fbstp
push
jl
inc
repnz
jp
push
popf
repz
daa
cs
mull
ja
dec
mov
xchg
dec
sub
repz
das
iret
mov
inc
adc
dec
push
sub
in
inc
adc
dec
enter
sti
repnz
xchg
dec
dec
push
push
adc
add
fcoml
xchg
bound
dec
jmp
and
cmp
push
mov
aad
out
imul
push
xor
orl
push
and
movsb
jbe
mov
pushf
add
rcrl
dec
test
cmc
pop
xor
aad
ljmp
xor
andl
mov
inc
cmpsl
std
cmp
in
dec
dec
mov
cmp
shl
jmp
push
test
ds
push
cmp
arpl
add
or
dec
movsb
popf
jo
pop
dec
shl
adc
push
mov
sbb
mov
xor
mov
cltd
xlat
inc
cmpsb
ss
hlt
add
mov
mov
sub
sbb
jecxz
or
dec
jae
xchg
mov
pop
dec
rorl
cmp
xchg
cmp
movsb
inc
push
pop
inc
sub
dec
jo
dec
pop
mov
dec
push
fsts
xchg
das
push
pop
dec
adc
icebp
mov
mov
push
add
dec
xchg
cmpl
push
pop
jg
xchg
dec
cmpb
es
test
je
lret
inc
dec
negl
stos
mov
and
xor
pop
push
test
rorb
repnz
dec
sub
rorb
add
or
fldpi
aas
dec
arpl
mov
in
jb
pop
dec
dec
iret
jle
or
xchg
jmp
dec
scas
test
dec
mov
js
dec
outsb
lods
pop
orl
sar
aam
out
lods
sub
xlat
pop
dec
lods
jecxz
and
or
in
call
add
das
adc
dec
fucom
xchg
fldl
jg
dec
bound
xchg
dec
pusha
mov
adc
sti
jp
dec
pop
mov
inc
addl
xor
aaa
dec
fmulp
bound
jo
shll
fidivrl
test
fimuls
xchg
jno
adc
or
mov
into
jp
jl
icebp
push
dec
xchg
fmull
inc
fidivs
pushf
cmp
sbbl
mov
add
push
hlt
out
jl
das
and
cmp
mov
cmpsb
daa
xchg
adc
xchg
sbb
mov
jecxz
clc
dec
in
dec
fnstenv
aam
or
cmp
insb
push
lods
cmp
sub
out
popf
mov
enter
mov
loope
sarb
enter
and
adc
test
movsl
shll
sbb
pusha
cs
dec
inc
popf
sub
repnz
lods
jl
mov
push
inc
xor
jno
aam
xchg
jp
fisttps
mov
iret
cmp
xor
and
add
push
adc
pop
ja
aaa
insl
jle
mov
into
bound
iret
lfs
sahf
jecxz
rsqrtps
dec
imul
jge
add
push
push
sbb
enter
sub
and
mov
pop
ss
xor
jmp
cmpb
arpl
pop
clc
ss
cmp
jo
mov
inc
fucomi
je
pop
loop
add
int3
std
push
xor
sbb
outsl
sub
push
pop
push
iret
jbe
mov
aas
cwtd
icebp
cmpb
ljmp
nop
in
cmpsb
hlt
fisubs
pop
inc
and
mov
test
jle
ret
stc
cmpsb
clc
ror
fsubrp
push
leave
loopne
mov
repnz
fwait
into
sti
mov
add
mov
in
gs
shlb
or
xchg
adc
ljmp
shlb
dec
push
add
and
into
mov
jg
xor
or
push
adc
adc
xor
xchg
iret
xchg
dec
gs
mov
jle
mov
dec
push
add
dec
adc
adc
mov
cmpsb
fs
push
jns
mov
call
loopne
or
lods
pop
lret
push
mov
mov
jae
mov
mov
push
nop
movsl
je
push
lods
adc
incb
cs
inc
fcomi
out
cmp
cmp
xlat
cmp
mov
shll
or
movsl
mov
sub
pop
fmuls
lahf
xor
pop
dec
ljmp
nop
adc
push
mov
push
mov
pop
xchg
jp
dec
dec
sub
mov
sbb
and
mov
lea
sahf
mov
popa
push
int3
hlt
in
into
stos
lods
inc
leave
and
dec
push
pop
je
inc
jbe
xor
iret
in
ret
sbb
cs
fistl
dec
mov
cmp
inc
inc
push
in
xchg
inc
mov
or
ja
aaa
xchg
rclb
cmp
jns
out
xchg
cmpl
bound
movsb
dec
int3
fnstsw
enter
lret
dec
push
push
or
cmp
xchg
mov
lods
roll
jae
pop
xchg
jnp
and
dec
pop
test
insl
or
lods
imul
outsb
arpl
cltd
dec
mov
dec
lods
sub
sahf
out
dec
jle
inc
mov
lds
dec
fbstp
sbb
sub
jge
add
and
sub
xchg
decb
cwtl
push
push
jecxz
adc
rcr
call
add
outsl
stos
out
shr
dec
push
or
mov
add
fisubl
push
dec
sbb
mov
iret
out
push
jle
cmc
in
pop
pop
push
mov
jl
sbb
push
inc
cmpsl
stos
lock
dec
pop
push
jp
mov
cmp
cmp
dec
sbb
xor
movsb
sti
cmp
enter
push
aam
cltd
ret
jle
push
lock
dec
std
or
or
push
jg
mul
fs
mov
push
cmp
cmc
loop
in
rcl
xor
lcall
and
jecxz
scas
mov
rolb
sub
dec
movsl
mov
jle
inc
inc
push
negl
push
stc
adc
sbb
dec
add
cmp
jbe
sbb
jg
dec
inc
bnd
mov
ret
in
dec
jecxz
pop
data16
xchg
dec
push
sub
xor
clc
movsb
dec
pop
and
cmpsb
out
mov
pop
dec
mov
inc
dec
bnd
mov
test
pop
jle
arpl
enter
mov
and
adcl
inc
push
fs
ss
jnp
or
inc
loop
push
cmp
and
iret
sub
add
mov
fwait
lret
mov
or
test
fcoms
mov
or
add
mov
test
dec
movsl
push
rcr
or
xchg
xchg
dec
repz
pop
dec
cmpsl
or
mov
xor
dec
mov
dec
nop
push
imul
pop
dec
into
xor
sub
ret
xor
jmp
sbb
cwtl
or
leave
cmp
xchg
xor
jl
mov
in
imul
xor
pop
dec
aad
push
pop
fs
mulb
inc
icebp
call
push
push
js
mov
fisttpl
mov
jle,pt
mov
into
and
outsl
cmp
mov
imul
sarb
lds
sbb
pop
js
sahf
test
add
fwait
mov
or
mov
in
divb
jnp
xchg
lahf
lcall
xchg
lock
xlat
or
lret
ljmp
pop
test
repz
dec
dec
inc
dec
cld
int
je
mov
adc
lret
icebp
sub
dec
repz
idivb
pop
dec
fsubs
dec
sub
xchg
push
dec
and
mov
mov
cmp
lea
dec
adc
mov
dec
sub
inc
das
xor
mov
fimuls
push
sbb
dec
leave
dec
lahf
adc
ja
jnp
pop
or
in
je
jo
push
out
into
xchg
mov
dec
mov
loopne
xor
pop
jge
adc
bound
rcr
decl
sub
xchg
mov
push
xchg
cmp
in
xor
and
mov
dec
push
push
cli
dec
dec
cmp
fdivl
cs
rcll
push
mov
or
push
dec
mov
dec
or
mov
jge
pop
xchg
fcompl
dec
sbb
fstps
cmpb
in
cwtl
sbb
dec
aad
mov
sahf
loope
dec
imul
jge
mov
dec
pop
add
mov
ljmp
xor
cmpsl
setb
jb
dec
out
loop
std
fistps
dec
sbb
sahf
divb
orl
pop
cmpsl
push
fimuls
mulb
and
das
cld
dec
inc
pop
setg
xchg
icebp
pop
add
dec
in
pop
out
cmp
insb
inc
xchg
mov
push
fnsave
rorb
clc
movsl
into
cmp
leave
dec
adcb
jbe
daa
dec
add
test
mov
stos
test
mov
leave
cmp
mov
sti
outsl
lea
test
loope
lahf
jo
fnstenv
fwait
jle
fildll
jne
push
or
imul
sbb
cltd
cld
inc
fisttps
adcb
dec
xor
fisubrs
mov
mov
dec
popf
out
sti
fadds
dec
iret
pop
cli
and
loope
push
dec
pop
sub
cmpsl
jle
and
mov
sub
xchg
popa
jbe
out
sti
cwtl
orl
adc
pop
negb
rolb
in
push
cmp
data16
xchg
add
cs
xor
imul
inc
jmp
jp
out
dec
scas
aas
xchg
add
sahf
dec
dec
cmp
shlb
pop
cmp
lret
cmpsb
adc
int3
fsubrl
cmp
faddp
daa
adc
fistpll
in
push
lock
cs
mov
jl
jg
dec
out
dec
mov
dec
and
cmpsb
fimull
push
mov
sub
jno
dec
jg
cmp
xor
lret
jge
dec
dec
sbb
or
adc
inc
aam
xlat
movsb
mov
push
js
xchg
mov
cmp
pop
and
outsb
ja
inc
mov
stos
hlt
roll
fdivrs
cs
adc
ret
lret
lret
push
aas
mov
push
insb
dec
cmp
or
cmp
or
mov
dec
add
sti
xor
push
dec
sahf
fidivl
xchg
push
jno
dec
push
and
jp
addr16
into
mov
cmp
lods
nop
cmp
cltd
dec
out
mov
sbb
negl
out
loop
mov
pop
icebp
dec
aaa
inc
es
pop
imul
inc
mov
int
sbb
fsubrl
dec
mov
ror
push
push
inc
sub
gs
inc
pop
xor
pop
mov
sbb
push
mov
adc
push
dec
bnd
inc
out
mov
cmp
xchg
add
mov
mov
sub
mov
popf
push
out
andb
mov
jnp
insl
movsb
dec
insl
xor
dec
sar
mov
adc
pop
jne
adc
pop
cmp
popa
dec
xor
fsubr
xchg
fsubrp
jp
aaa
dec
test
out
cmp
insl
push
aad
mov
pop
out
cwtl
xchg
aam
inc
push
xor
jb
push
subb
adc
iret
test
jo
loope
cmpsl
sarl
mov
sub
or
add
cmc
mov
mov
aas
test
cmp
jnp
dec
movsb
ljmp
test
ds
aaa
bound
fldenv
cmp
inc
cmc
adc
pop
dec
sub
xchg
and
int3
repz
repz
inc
stos
cltd
xchg
pop
add
dec
je,pt
pop
in
sbb
pop
xchg
xor
add
orl
dec
jecxz
dec
shl
mov
and
test
dec
xchg
xor
lcall
sbb
inc
ljmp
dec
fistps
out
int
push
dec
mov
ret
jge
jns
rcll
dec
pop
mov
in
loopne
push
jb
xchg
lods
add
lret
xchg
lcall
lods
scas
mov
stos
leave
adcb
pusha
lods
bound
mov
lods
and
pop
testl
xor
pop
push
dec
mov
mov
test
and
ljmp
sarb
cmp
pushf
fwait
xor
and
lds
pop
pushf
push
mov
stos
add
pop
pop
pop
dec
push
cs
cmp
xor
adc
outsb
outsb
pop
push
dec
stos
push
add
jle
push
adc
dec
jmp
adcb
jb
test
add
lcall
cli
push
xchg
dec
movsb
sub
jecxz
es
sbbb
fsubrp
and
adc
lahf
aaa
iret
push
bound
xchg
pop
loope
add
xchg
popa
mov
or
fistps
outsb
and
push
addr16
sbbb
and
fisubrs
insb
mov
idivb
mov
cmc
out
out
dec
mov
dec
push
dec
push
cwtl
ljmp
and
and
xor
outsb
inc
jb
enter
mov
add
dec
ret
and
lret
sbb
xchg
mov
sahf
mov
adc
jle
pop
dec
aaa
jno
ficoms
sti
xchg
pop
jl
sbb
cs
les
dec
cmp
hlt
ret
orl
das
mov
jl
xchg
pop
pop
adc
mov
cmp
xchg
insb
fildl
jl
mov
lret
pop
xchg
pop
out
inc
jle
pop
adc
cld
ss
addl
xor
dec
add
stc
xchg
xor
dec
lods
les
and
pop
cmc
iret
cs
mov
xchg
push
and
lock
xchg
fistl
loop
dec
xlat
push
flds
cmp
xchg
mov
dec
jbe
push
xchg
jl
lretw
sahf
in
pop
leave
cmc
cmpsl
adc
cmp
hlt
xor
and
decl
call
int
pop
sub
mov
pop
jp
push
cmc
pop
insb
push
adc
pusha
rclb
out
adc
dec
inc
jl
lahf
movsl
cmpsl
sbb
inc
sbb
push
test
into
mov
nop
iret
shll
push
push
dec
mov
add
inc
test
hlt
mov
xchg
sbb
out
pop
xchg
clc
out
sbbb
pop
shlb
add
jge
cs
dec
push
inc
mov
insl
or
or
das
out
xchg
testl
xchg
pop
int3
pop
add
shrl
push
jmp
inc
fsubl
out
div
std
xlat
jo
mov
sub
shl
jae
cs
jmp
inc
jecxz
fwait
addr16
xor
fcmovnbe
in
dec
sub
adc
cld
pop
dec
stos
mov
adc
popl
add
fsubrl
cltd
inc
das
pop
rclb
mov
nop
push
jl
push
dec
bound
or
aaa
inc
ret
xchg
out
and
cmp
xor
sahf
into
dec
cltd
mov
movsb
inc
adc
mov
jp
jno
aas
sub
push
out
dec
push
loopne
sub
sbb
sub
dec
out
jmp
daa
addl
lds
mov
mov
mov
mov
aad
push
pushf
xor
pop
mov
pop
in
fisubrs
jbe
dec
add
test
adc
lock
pop
jb
daa
into
in
xchg
xchg
inc
mov
dec
pop
repz
cmpsb
or
fldcw
push
dec
fdiv
mov
jb
add
sub
mov
js
sub
push
cmp
pop
mov
dec
je
rcrb
int3
scas
adc
adc
lahf
lea
ds
push
sub
repnz
mov
pop
lcall
repz
outsl
shlb
lahf
int
inc
mov
push
testl
adc
jle
mov
xchg
sub
data16
cmp
push
test
push
mov
mov
jmp
mov
idivb
mov
aaa
push
dec
leave
cmc
mov
sti
inc
mov
in
add
cli
aas
arpl
inc
jg
cs
cmp
addr16
xlat
in
xor
mov
fidivs
cmp
jle,pn
lahf
pop
stos
mov
add
jmp
cmpsb
cmc
push
das
nop
aas
scas
in
in
push
adc
shl
and
and
jbe
push
mov
sub
pop
sub
fidivs
xchg
dec
dec
or
cwtl
lds
xchg
das
js
sbb
pop
and
mov
call
inc
inc
sahf
es
adc
ret
sub
dec
in
or
rorl
cmc
repz
push
xor
loopne
idivb
sbb
inc
jns
in
or
push
mov
pusha
mov
inc
scas
push
fisubs
inc
es
cmp
jns
push
pop
aad
mov
mov
je
push
enter
pop
in
out
pop
dec
xor
dec
jg
cmc
in
data16
ficoml
pop
sarb
xchg
mov
enter
add
int
jg
jp
mov
jb
fbstp
rcl
aam
mov
hlt
ja
and
and
cmp
andl
imul
sub
mov
adc
fsts
dec
pop
xchg
test
data16
dec
mov
in
ljmp
pop
sub
lret
inc
int
mov
add
and
inc
xchg
ljmp
adc
shrb
add
add
in
sub
cli
mov
jae
repnz
and
mov
loopne
push
dec
and
xor
dec
add
cmp
xor
hlt
insl
or
pop
push
dec
jbe
insb
sbb
xor
mov
aaa
xor
cmp
xchg
pop
mov
repz
pop
imul
scas
xchg
sub
jns
sti
dec
pop
add
hlt
adc
fnstsw
cs
inc
jbe
rdmsr
cmp
cmc
stos
and
shrl
mov
ds
jne
push
shlb
inc
fstpl
sub
out
push
in
rorb
push
fbstp
jns
in
fstpt
repnz
outsb
sbb
icebp
adc
into
cmpsb
sbb
addr16
jbe
pop
pop
add
mov
sarl
and
pop
cmpsl
xor
sub
mov
pop
lods
dec
dec
or
dec
out
scas
imul
inc
dec
adc
xor
sub
sar
dec
pusha
and
mov
iret
lret
adc
mov
fimuls
mov
fiaddl
dec
pushf
jmp
push
mov
mulb
and
mov
mov
aad
data16
test
mov
sti
push
mov
and
xor
aaa
out
outsl
aad
rolb
clc
fsubl
jne
int3
dec
sub
xlat
xor
sub
jmp
fstpt
jnp
mov
mov
stos
mov
pop
mov
inc
xor
ljmp
and
dec
fwait
dec
das
cli
fnstcw
inc
and
dec
lret
fisubrl
dec
pop
outsl
push
pop
pushf
pop
xchg
inc
mov
outsb
xor
dec
rorb
fstpl
call
dec
mov
or
outsl
adc
sbb
hlt
mov
xor
pop
mov
jmp
insb
das
ds
jnp
inc
mov
mov
outsl
adc
addr16
push
fimuls
lcall
and
dec
jae
iret
ret
dec
mov
cwtl
movsb
jne
out
popa
iret
dec
leave
ja
orb
test
or
inc
hlt
and
loope
and
pop
stos
pop
fmull
orl
push
aad
and
or
or
mov
lahf
xchg
mov
insb
cld
xchg
jg
popa
lret
std
bound
dec
pop
lret
fst
outsb
in
fisubl
sbb
dec
inc
aas
out
inc
push
push
cwtl
cmp
mov
lods
lds
jg
adc
inc
jl
popf
xor
cmp
dec
mov
add
jge
xchg
pop
jg
jle
xchg
fstps
stos
int3
sbb
cs
fidivrl
imul
jle
pop
iret
ja
push
push
in
xor
add
imul
fiadds
jl
lahf
movups
and
lret
ljmp
cmp
mov
sbb
cmc
sub
int3
mov
adc
xchg
jb
add
out
sbbl
dec
push
movsl
rclb
push
fwait
iret
and
inc
inc
ror
cmp
cs
push
aaa
dec
dec
pop
add
les
pop
mov
dec
arpl
pop
cmp
cmp
pop
dec
outsb
mov
pop
stos
test
lahf
loopne
popa
stos
clc
pop
imul
pop
xor
mov
push
and
in
dec
psubusb
mov
ds
dec
cmc
popf
inc
pushf
mov
outsl
int3
dec
dec
push
sahf
js
sbb
xchg
stc
lods
jno
std
dec
mov
jp
mov
adc
aaa
jns
pop
in
mov
push
fwait
ljmp
movsb
dec
neg
subl
inc
fnsave
push
pop
sahf
cmpsl
psubusw
jecxz
dec
sub
mov
jge
xchg
pop
jns
push
or
and
fadds
pop
mov
mov
pop
fstpt
dec
mull
jl
dec
add
rcrl
mov
inc
dec
jae
mov
xor
cmp
mov
scas
cmp
dec
imul
xor
pop
fildll
and
push
movsl
hlt
andl
cs
jl
mov
dec
xor
cs
int3
pop
rcrb
notb
push
iret
mov
sbb
xor
int3
sti
jp
push
push
stc
repnz
iret
rorb
jl
pop
seta
flds
mov
adc
rcl
sbb
jl
gs
pushf
fxch
xor
das
ss
xchg
fstpt
push
sub
dec
outsb
in
push
inc
xchg
inc
jecxz
dec
lods
test
push
sub
adc
adc
adcb
jmp
jle
stc
outsb
shrl
ret
mov
scas
dec
jbe
jge
in
xor
pop
shl
mov
ret
mov
imul
decl
mov
sbb
jno
int
mov
idivb
dec
leave
xor
insl
dec
adc
jbe
mov
dec
and
xchg
clc
pop
in
dec
jle
lahf
cmp
xchg
and
insb
into
lcall
iret
adc
inc
mov
in
add
cmp
xlat
shrl
scas
and
dec
fcmovu
mov
dec
aam
mov
jo
icebp
jb
mov
mov
and
bound
cmp
pop
cmp
or
jae
xchg
frstor
cli
out
sbb
movsl
cmp
insb
mov
dec
das
hlt
add
je
adc
into
lahf
out
mov
pop
sbb
inc
pop
cli
dec
das
lods
imul
dec
inc
mov
sub
add
andl
push
pushf
sub
out
push
xor
das
mov
or
scas
sub
mov
cltd
jnp
push
cmc
and
fs
pop
pushl
adc
bound
jo
sub
in
movsl
inc
xchg
jle
pshufw
rorb
and
add
dec
adc
xchg
and
testl
sub
std
rcrb
inc
out
repz
jl,pn
jnp
orb
mov
inc
aas
fimull
dec
shrb
adc
scas
aad
or
push
inc
cwtl
pop
in
jmp
add
adc
pop
push
dec
sbb
mov
mov
mov
into
lcall
or
loope
xor
mov
pop
jge
mov
stos
jp
rcl
cmc
dec
pop
shrb
insl
inc
int
hlt
adcl
pop
adc
call
add
add
xchg
mov
dec
push
jne
or
les
repnz
inc
jl
sub
out
inc
scas
adc
or
mov
push
rorl
sti
jnp
lds
cmp
das
imul
xor
rcrl
out
mov
jle
dec
dec
jbe
in
xor
roll
and
dec
test
decl
xlat
xchg
mov
sub
mov
push
jl
gs
call
or
xor
imul
jbe
sbb
cmpsb
fs
jae,pt
mov
adc
pushw
push
movsl
iret
inc
popf
cmpsl
dec
xlat
les
xchg
push
aaa
popa
dec
xor
out
jbe
dec
xchg
inc
jl
dec
test
pop
jmp
into
testl
inc
out
dec
test
movsb
jge
cmp
sahf
lcall
mov
call
push
loope
sbb
push
pop
sub
ret
inc
cmp
or
in
xorb
sub
daa
jne
es
dec
add
jle
fadd
pop
dec
dec
shll
xor
clc
mov
int3
xchg
cs
xor
roll
push
iret
clc
repz
xchg
mov
rorl
sbb
pushf
inc
inc
test
repnz
jno
int
adc
negl
dec
inc
jp
mov
jnp
and
in
mov
sub
bound
dec
add
lcall
rcl
dec
pop
xor
jbe
mov
movsb
dec
pop
pop
and
imul
sub
pop
cmp
sub
rorl
pop
or
in
lods
idivb
push
mov
fsubl
jle
mov
lods
xlat
movsb
scas
pop
popf
test
sub
stos
xchg
push
cmp
push
fmulp
jl
mov
push
mov
cmp
or
imul
fisubrs
sub
sub
cvtdq2ps
and
mov
push
into
inc
push
xor
lock
out
mov
xchg
cmp
or
mov
xchg
add
pop
push
jae
adc
xor
ljmp
out
and
jae
insl
idiv
into
and
mov
sub
inc
jg
inc
sub
sbb
out
imul
mov
cld
inc
stc
jmp
inc
hlt
xlat
mov
dec
nop
mov
or
insb
lock
mov
sub
imul
jo
lret
inc
ffreep
lret
sub
ret
jnp
je
pop
mov
mov
cmp
movsl
insl
mov
add
inc
lds
xorb
sbb
push
rorb
adc
lcall
pop
push
add
jle
mov
jle
mov
inc
stc
dec
test
inc
lret
mov
adc
pop
ss
push
cmc
js
lcall
mov
orl
lcall
stc
std
push
add
mov
movsl
jne
or
adc
dec
push
fisttps
mov
mov
add
push
xor
movsl
xchg
inc
iret
outsl
cwtl
dec
dec
into
shlb
rolb
xchg
shll
into
pop
xor
dec
jb
push
ds
sahf
movsl
or
dec
lds
jns
aad
mov
sbb
popa
dec
or
jge
lahf
dec
sub
lret
hlt
push
shrb
rdpmc
adc
mov
lret
dec
and
mov
dec
add
xor
jmp
es
popa
ja
pop
add
pop
and
pop
pop
push
mov
sub
js
loopne
movups
ds
add
pop
dec
cmp
push
dec
mov
jns
clc
adc
rcrb
jno
cld
dec
iret
fnstcw
dec
xlat
movb
aaa
daa
pop
push
push
xor
pop
lret
pop
dec
and
pusha
inc
pop
cmpsb
lret
stc
dec
pop
push
or
aam
sub
mov
test
dec
add
inc
imul
pop
lock
push
rcr
ret
dec
outsl
xor
cmpsl
outsb
mov
or
pop
hlt
sub
shl
dec
sub
sbb
cmp
mov
jae
ljmp
pop
rorl
xchg
bound
inc
and
dec
int3
fnstcw
push
jl
ja
jns
inc
leave
clc
lret
into
fmulp
push
xor
inc
movsl
popf
call
pop
pop
rorb
cmp
lods
xchg
xchg
pop
push
lea
xchg
lods
push
jp
xlat
inc
jne
aas
cmp
pop
repz
mov
add
fwait
xchg
adc
jbe
xlat
jl
ror
punpcklbw
cli
test
and
or
xor
push
dec
and
lods
roll
sbb
add
push
or
inc
cmc
xchg
icebp
push
imul
dec
push
jo
cmp
out
in
daa
adc
das
stos
pop
pushf
sub
dec
pushl
popa
mov
cmp
insl
imul
fldt
inc
mov
shlb
inc
out
jmp
mov
push
out
loopne
xchg
es
add
mov
pop
insb
push
mov
xor
lds
and
rorl
sbb
call
and
jae
test
and
sub
and
jo
out
rcrb
arpl
daa
jbe
icebp
lea
mov
xchg
jnp
pop
dec
pop
inc
adc
cmpl
adc
push
out
cmp
lahf
aaa
pop
in
sub
xor
mov
ss
add
push
jg
adc
ds
aam
mov
stos
pop
mov
in
orb
jbe
pop
xchg
jns
xchg
mov
xor
ljmp
gs
aaa
cmp
cmc
shll
xor
cltd
test
xor
inc
jg
sbb
pop
clc
mov
into
jg
jo
ljmp
jmp
or
dec
xchg
inc
clc
out
enter
push
dec
rorb
lret
inc
cmpb
sbb
fs
in
mov
jl
cmpsl
dec
or
mov
push
sub
cmp
bound
ret
cs
jg
test
scas
cmp
stc
mov
add
testb
sub
xor
push
lods
jl
scas
sahf
test
push
adc
mov
addb
and
mov
xchg
mov
xor
rorb
jns
pop
in
mov
fldl
mov
dec
out
sbb
scas
push
mov
jge
in
xchg
or
stc
jg
mov
divl
or
loop
push
sbbb
mov
and
mov
nop
adc
push
adc
pop
xlat
jno
or
xchg
int
push
frstor
ret
outsb
movsb
and
pop
aad
pop
add
das
cmpsl
loopne,pt
dec
mov
stos
aaa
push
sti
scas
sub
movsl
pusha
test
bound
xor
sarb
testl
sub
aaa
jae
mov
jnp
jp
mov
int3
dec
cmc
gs
dec
es
stos
add
dec
popf
out
mov
outsl
insb
and
ret
lods
aas
dec
mov
push
popa
insl
cld
dec
add
jl
gs
dec
mov
mov
dec
xchg
into
je
sub
test
push
popf
sub
dec
call
cmp
dec
xchg
or
addr16
aam
ss
add
rorb
lds
jnp
lret
jecxz
jp
adc
jmp
roll
dec
inc
dec
sub
movsl
repz
dec
and
cmp
mov
es
testl
sub
mov
sahf
and
mov
lea
pop
test
sbb
insb
xchg
cmp
das
cltd
push
out
ds
pop
adc
subb
add
xchg
push
rorb
adc
pop
or
loope
sub
cmpl
scas
adc
dec
hlt
adc
pop
dec
int3
insb
imul
dec
test
orl
push
test
lea
adc
dec
xchg
cmpsb
testl
jge
add
adc
inc
mull
push
out
dec
cmpb
aad
dec
out
in
inc
fiaddl
inc
xor
jl
inc
xchg
std
adc
inc
fidivrs
outsb
cmp
dec
jmp
push
loop
dec
xor
mov
jmp
dec
lret
xor
imul
nop
sbb
pop
pop
pusha
mov
int3
jnp
pop
mov
jl
fwait
jno
inc
dec
insl
jmp
gs
mov
stos
or
aad
xor
dec
mov
out
dec
les
icebp
add
mov
ret
iret
inc
ljmp
xor
mov
xor
aaa
dec
clc
push
sti
or
and
jbe
xchg
dec
jp
scas
sahf
popa
jo
adc
sarb
mov
rcrb
jmp
sub
xor
dec
mov
mov
cld
dec
xor
sub
decb
mov
xor
iret
pop
and
in
inc
mov
xchg
les
inc
cmc
movzwl
sub
ds
and
pop
lcall
mov
dec
in
add
jmp
roll
iret
adc
mov
dec
in
ds
loop
out
mov
dec
rcl
fisubl
dec
rcll
cld
mov
mov
movb
add
mov
addl
jg
push
es
outsb
mov
in
pop
cltd
push
mov
jg
pop
pop
xor
fwait
arpl
int3
les
cmp
cmpl
inc
jo
adc
jne
jg
ret
aaa
cmovno
cmpsb
loope
mov
mov
arpl
push
and
getsec
icebp
jg
sub
dec
add
pop
mov
pop
mov
lret
iret
inc
rcrb
jmp
jns
xchg
adc
jl
cmp
sub
rorb
fisubrs
jo
pop
xchg
xchg
xchg
cmpsl
popl
sub
imul
mov
dec
inc
jg
or
dec
add
xor
pop
xor
mov
cmovno
stos
jp
scas
mov
adc
imul
xor
enter
leave
sbb
push
dec
roll
in
push
insl
aad
cmp
or
jae
gs
push
jmp
and
sbb
js
mov
into
sub
dec
sub
mov
pop
fcoms
repz
sti
test
mov
dec
lahf
dec
dec
repnz
mov
dec
add
stos
mov
adc
in
dec
cmc
xchg
imul
hlt
aaa
aas
iret
lods
mov
dec
repz
mov
jle
rorb
jmp
cmc
push
jae
in
inc
jnp
stos
pushf
daa
push
mov
dec
adc
jb
aam
pop
and
enter
dec
stc
bound
adc
mov
decb
out
xor
mov
xor
ljmpw
loopne
sar
sub
mov
clc
pop
push
shll
sub
xor
add
jp
mov
dec
sbb
adc
dec
push
fcomps
daa
bound
dec
into
arpl
scas
pop
cmp
fadds
sbb
add
leavew
roll
lds
xchg
or
pop
dec
add
hlt
loopne
es
rorb
imul
xchg
mov
dec
sbb
or
fsubrl
or
xor
mov
sbb
filds
out
add
mov
outsb
pop
sbb
xchg
ret
dec
or
aas
pop
loopne
ss
dec
or
push
in
ja
out
dec
shll
add
fwait
adc
aam
jp
xchg
inc
xchg
pop
jbe
out
imul
jmp
dec
adc
roll
test
inc
xor
dec
fistl
inc
enter
mov
mov
jle
stc
adc
adc
xchg
pusha
dec
cld
add
xchg
pop
repnz
fs
jmp
pop
dec
pop
repz
adc
int3
push
sbb
adc
addr16
ds
test
jge
cmc
lds
mov
xchg
and
pop
xchg
int3
mov
mov
data16
or
popa
inc
dec
std
repnz
jl
xor
loop
push
mov
sarl
dec
mov
inc
ss
in
daa
jmp
loopne
dec
into
stos
out
inc
lret
fcmovnbe
testl
and
jecxz
inc
xor
sub
xor
and
xchg
test
mov
dec
mov
push
sbb
xor
or
arpl
adc
push
dec
orb
fadds
mov
push
outsb
cli
and
and
imul
fwait
movsl
jae
dec
scas
cld
dec
sbb
sahf
add
cmp
lds
dec
cmp
shr
jb
inc
nop
adc
in
repz
dec
mov
iret
ja
inc
cs
adc
lret
sub
push
dec
into
sub
xor
out
push
adc
or
inc
cmpl
sbb
inc
arpl
xchg
jae
test
shr
dec
scas
dec
sbb
aaa
pop
adc
out
fbstp
ljmp
pop
aas
xchg
and
sbb
sar
dec
je
mov
adc
cmpsl
pop
adc
xor
out
sub
xor
cs
mov
xor
adc
jle
dec
leave
lods
ret
mov
outsl
stos
dec
inc
repz
sbb
into
adc
mov
cmpsl
fsub
pop
aas
pop
cmc
dec
mov
int3
mov
xor
lcall
jae
push
push
aas
xor
inc
add
dec
test
lret
mov
jns
sub
rcrb
pusha
inc
push
cmc
jno
mov
popf
mov
iret
push
or
xor
cmp
cwtl
das
inc
xchg
jmp
sub
adc
pop
push
cltd
push
cmp
push
dec
into
jno
mov
mov
ret
shl
loope
fidivs
out
int
mov
add
mov
daa
popa
das
pop
xor
lcall
push
jns
dec
mov
sbb
add
xchg
dec
enter
dec
mov
dec
scas
add
mov
into
xchg
jb
fadd
orl
clc
pop
ffree
cmp
aam
adc
and
pop
xchg
aas
daa
inc
icebp
jle
xor
mov
outsb
jo
data16
fcomip
int
call
xchg
inc
les
mov
daa
loopne
aas
inc
jg
jecxz
shrl
inc
fstps
jbe
jnp
bound
mov
mov
or
dec
in
dec
sbb
popl
dec
push
outsb
shrl
jle
push
fimull
test
fbstp
push
pop
out
sub
fwait
dec
aam
mov
add
push
aad
pop
les
jge
mov
loop
addr16
repnz
mov
xchg
and
iret
rolb
loopne
out
push
jl
call
add
and
and
push
jmp
cmpsb
xchg
jecxz
mov
add
testl
pop
imul
sub
je
sbb
add
inc
fwait
jge
cli
inc
fsubl
dec
adc
inc
repz
dec
cwtl
and
bswap
out
xchg
stc
dec
or
mov
jno
cltd
inc
dec
sbb
popa
jne
stos
and
popa
sub
decl
xchg
data16
popa
fcoms
sub
scas
xchg
and
dec
jl
dec
insb
sbb
mov
out
adc
dec
aad
dec
daa
lods
fwait
call
add
dec
xlat
xor
mov
sbb
out
adc
ljmp
jae
and
jle
ja
shr
dec
cmp
jnp
xchg
jg
aas
push
push
das
js
and
xchg
lret
mov
or
int
cmp
lods
jno
push
out
jp
cmp
test
daa
xor
cmpsl
push
rorl
lods
cmp
mov
mov
mov
sbb
bound
lcall
push
movsl
outsl
and
out
lret
jg
sub
aaa
sbb
icebp
inc
pop
test
decl
stos
and
test
pop
test
add
test
cmp
aas
fimull
sub
test
push
lods
dec
sbb
push
add
inc
jge
jmp
testl
sbb
into
das
pop
inc
aaa
dec
pop
inc
repnz
ss
add
dec
mov
out
mov
into
dec
insb
pushf
mov
filds
dec
dec
pop
fdivp
enter
push
dec
or
mov
popa
dec
push
mov
adc
and
sub
dec
lret
mov
es
jle
les
pop
pop
dec
rcl
inc
mov
mov
out
jae
prefetch
test
mov
lods
outsl
outsb
push
sbb
push
cmpl
xor
sbb
dec
dec
loopne
mov
jns
mov
hlt
mov
cld
lcall
xor
and
dec
out
push
fisubs
jge
pop
cld
xchg
dec
test
sti
adc
iret
icebp
jns
testl
subl
adc
jecxz
dec
andb
lret
pop
in
out
mov
pop
ja
mov
test
add
and
dec
mov
es
adc
cmp
add
out
xorl
cmp
and
push
and
jp
pushf
inc
cmp
xor
sub
ds
jne
mov
dec
rcl
ljmp
mov
in
jl
aas
sub
xchg
mov
jle
seto
fisubs
mov
xor
cs
shlb
in
dec
mov
jl
aam
push
dec
xor
out
rolb
mov
push
mov
gs
or
cmp
stos
pusha
mov
mov
sysexit
lea
fstpt
lea
test
cmp
mov
and
dec
jb
xlat
mov
fmull
mov
pusha
lea
dec
je
popf
enter
mov
cmp
into
cmp
fisubrs
dec
ja
sbb
leave
add
mov
xchg
dec
mov
xor
xor
pop
btc
aas
iret
orl
in
loope
out
addr16
cmpsb
shlb
mov
pop
testl
add
adc
iret
and
out
loope
dec
pushl
lcall
call
iret
std
inc
lret
inc
cmpsl
dec
mov
jl
xchg
icebp
int3
inc
sub
sahf
sbb
jg
inc
pop
push
outsb
popa
add
sarb
xor
neg
repz
gs
jle
adc
mov
lds
cmpsl
xor
lods
icebp
inc
stos
pop
stos
dec
cli
in
xchg
int3
pop
sub
mov
int
popa
xchg
and
push
testl
adc
lds
mov
lea
mov
fimuls
mov
jmp
adc
aas
jno
jecxz
out
cmp
scas
dec
dec
into
cs
cmp
inc
data16
inc
sarb
push
inc
pop
cs
mov
push
ret
aas
push
cs
into
icebp
push
inc
inc
aaa
mov
jl
xchg
mov
fs
inc
push
cs
test
push
data16
fidivl
out
jne
ja
rorb
movsl
test
in
or
into
sahf
jle
xchg
pop
dec
and
loop
das
inc
cltd
mov
loop
iret
inc
jle
mov
lahf
and
and
push
jp
out
xor
stos
push
add
movsb
cmp
mov
out
push
out
imulb
aaa
mov
push
ret
sbb
mov
push
sub
rolb
sub
mov
mov
dec
lahf
setge
xchg
cmp
ret
dec
cwtl
add
add
mov
shl
mov
push
or
mov
mov
mov
repnz
push
in
das
xchg
mov
scas
inc
inc
repz
push
dec
adc
mov
cs
fisubs
jno
and
insb
mov
dec
xor
push
imul
cld
jns
mov
dec
push
fs
add
pop
xchg
dec
jns
jne
leave
pop
scas
sub
ds
inc
xchg
dec
fstps
lods
xchg
cmp
or
icebp
mov
cmp
jl
clc
fidivrl
dec
ret
lds
sti
mov
mov
les
mov
jns
jp
aam
inc
icebp
push
hlt
jb
orb
add
dec
aam
add
xchg
dec
sbb
jne
adc
xchg
sub
adc
sbb
fcoms
dec
movsl
jge
dec
scas
cmp
inc
mov
push
cwtl
mov
popa
adc
test
into
cld
jmp
mov
sbb
test
cli
dec
dec
ljmp
mov
and
fwait
mov
lcall
pop
pushf
fistpl
ret
clc
cmp
push
cmp
pop
outsl
sub
mov
sahf
iret
int
stc
arpl
lods
pop
add
dec
mov
mov
test
xchg
sti
in
pop
sbb
shr
jge
dec
aaa
mov
sub
dec
enter
int3
cmp
jp
jo
pop
cmp
add
dec
pop
lea
insl
mov
mov
dec
jbe
jecxz
fs
dec
jno
add
xchg
sub
mov
pop
dec
mov
stos
push
dec
cmp
cmpsl
repz
push
sub
mov
push
adc
mov
xchg
cli
imul
and
jo
xchg
idivl
mov
mov
movsb
pop
es
mov
aad
push
lret
xor
dec
adc
xchg
push
movsl
les
and
int3
push
lock
scas
ljmp
das
cmp
mov
addr16
divb
int
jmp
push
xchg
lret
jg
into
sub
ds
das
inc
fdiv
pop
dec
pop
inc
push
lret
gs
inc
pop
xchg
popa
mov
cmp
add
scas
pop
or
xor
dec
repz
ja
inc
cmp
cmp
xchg
sub
xor
fs
jecxz
pop
push
jecxz
push
dec
add
dec
push
jge
lcall
jle
hlt
js
stos
testl
dec
addr16
andb
jle
inc
pop
adc
icebp
and
clc
iret
fwait
or
xlat
idivl
mov
loopne
rcll
xor
cmp
nop
clc
sbb
in
xor
xchg
mov
fs
xchg
mov
sbb
push
ljmp
push
ret
xchg
fwait
in
inc
xor
scas
cmc
push
add
cmpsb
add
sub
xor
loopne
daa
xchg
inc
idivl
lock
daa
fwait
push
out
divps
inc
jae
jo
into
xor
sub
sub
hlt
xor
push
stc
pop
sti
mov
outsl
out
lret
jl
subl
xor
cmp
push
sub
insb
lds
pop
lcall
je
push
int3
cmc
fsts
xor
cmp
rolb
mov
inc
xor
jnp
add
push
or
cmpl
mov
push
sti
inc
pop
cmp
test
shl
dec
rolb
lret
mov
push
popa
pop
and
mov
push
mov
jg
dec
addr16
dec
ds
lea
mov
out
mov
mov
insl
sub
ljmp
rcl
call
mov
cmp
mov
aas
xor
in
cmc
dec
arpl
or
xchg
dec
into
movsl
mov
mov
into
mov
dec
in
xchg
test
xor
push
rcr
addr16
dec
adc
and
push
fimuls
loop
in
inc
dec
popf
dec
cmp
xor
sbb
dec
sub
test
ret
dec
lds
pop
sbb
gs
sub
push
jle
fneni(8087
dec
mov
sahf
sub
dec
mov
rclb
sbb
mov
int3
xchg
pop
inc
push
xor
push
jg
scas
cmpsb
pop
cli
pop
dec
sbb
pop
inc
bound
in
scas
test
jp
or
jne
stc
dec
popa
cmp
inc
xor
enter
xchg
rcll
dec
mov
imul
cld
dec
mov
cmc
xchg
js
aas
cmpsl
sub
roll
dec
mov
ljmp
mov
fnsave
mov
add
les
mov
pop
push
outsb
orl
lds
push
lods
push
add
popa
jno
gs
and
aam
dec
jnp
mov
int
adc
dec
icebp
and
and
popa
dec
ffreep
jecxz
shl
in
dec
jbe
or
cmp
push
in
inc
in
mov
cs
jp,pn
jle
mov
push
cmpsl
and
or
or
push
or
pushf
inc
jae
pop
and
push
into
imul
dec
adc
sub
pop
xor
nop
push
dec
jae
sbb
imul
mov
mov
push
xor
dec
stc
dec
xchg
inc
les
movsb
dec
out
push
xor
inc
iret
inc
andb
inc
mov
push
popf
aas
fstl
dec
jmp
or
inc
add
or
sbb
inc
dec
mov
mov
dec
sub
mov
movsb
adc
arpl
dec
arpl
into
push
xor
in
xlat
clc
sub
decb
repnz
decl
test
mov
inc
cmpsb
jb
andl
fsubp
cmc
xor
ds
je
xchg
movsl
pop
sbb
or
lods
outsl
mov
xchg
add
scas
lret
mov
add
stc
pushf
xchg
pushf
daa
mov
xchg
movzbl
push
scas
lahf
adc
fidivs
out
pop
cmp
add
cmp
xor
mov
pop
sub
ret
adc
cmc
mov
into
je
data16
das
fdivrs
jle
xchg
sub
bound
mov
mov
loop
dec
not
stos
stos
or
in
rcl
idivl
or
aam
jnp
shrd
in
xchg
das
mov
jge
push
push
fsubr
jo
mov
sarl
sub
scas
pushf
sub
mov
je
pop
push
push
mov
inc
push
adc
es
daa
mov
addr16
add
mov
or
cmp
dec
and
in
loopne
in
xchg
cwtl
xchg
pop
test
cmp
fsubl
mov
xor
lds
scas
cmc
fwait
xchg
pop
iret
cmp
cli
pop
bound
xchg
jle
lcall
int3
and
xor
loopne
lods
xor
mov
inc
mov
ja
mov
fs
mov
pop
fbstp
dec
jp
ffree
push
lock
out
xchg
jns
jo
negl
mov
fcoms
cltd
nop
mov
imul
idivb
pop
sub
cmp
inc
mov
addl
mov
push
ja
dec
aas
jle
fdivr
scas
andl
into
and
xchg
mov
mov
xchg
loopne
in
add
scas
inc
mov
filds
ss
xchg
push
inc
and
popl
jle
mov
mov
cltd
or
mov
mov
rorb
jg
adc
push
lock
mov
outsl
sub
popf
adc
jl
or
das
jg
push
dec
mov
rorb
iret
adc
jb
jle
xchg
int
sub
fists
push
sub
sti
pop
hlt
loope
xlat
xor
mov
cmp
push
xor
mov
ficompl
repz
pop
test
mov
xchg
mov
das
sub
mov
mov
cltd
test
scas
repz
adc
xchg
dec
cltd
jl
jp
ret
imul
call
cli
inc
mov
cmp
xchg
das
adc
or
lret
addr16
fsubs
cli
insl
sub
jp
faddl
loop
mov
inc
cmpsl
mov
shrl
xor
out
cld
pop
dec
mov
pushf
inc
and
mov
jp
and
loope
jg
loop
sahf
mov
icebp
and
pop
arpl
icebp
hlt
imul
aaa
fisubs
and
or
ficoml
push
jb
dec
sbb
lret
ljmp
dec
mov
lret
sub
dec
fmuls
cld
addr16
icebp
shrl
jg
dec
lea
cmpsb
dec
push
repz
dec
mov
das
pop
outsb
inc
dec
sahf
cmp
dec
jb
xor
dec
es
in
rcll
dec
adc
xchg
mov
adc
pusha
into
sub
sub
mov
sti
cmp
and
repz
scas
sahf
jb
jmp
xor
mov
cwtl
mov
dec
adc
dec
out
push
fidivrl
sbb
ss
dec
mov
fcmovnb
mov
or
dec
or
inc
fwait
jae
sbb
jbe
cld
pop
test
rorb
sub
pop
mov
mov
popf
add
pop
in
mov
jnp
pop
std
pop
test
sub
pushf
gs
push
sahf
dec
add
shll
pop
mov
dec
cmp
mov
push
cs
pop
jl
test
dec
orl
in
add
sub
es
pop
sbb
push
cmpl
mov
sub
dec
ss
test
xchg
add
mov
in
fsubrs
pminub
xor
xchg
sbb
or
rorb
sahf
and
aas
xor
pop
adc
enter
addl
fcomp
das
push
dec
mov
incb
cmpsb
xchg
dec
mov
lret
add
inc
push
cmp
or
mov
jmp
xor
push
icebp
push
imul
and
test
movsl
mov
stos
leave
cmc
adc
mov
fisubrl
adc
stos
xchg
pop
cli
cmpsl
out
popf
and
sub
mov
mov
xchg
jbe
aaa
jl
addr16
xlat
mov
sub
dec
mov
fisubrl
cltd
push
inc
pop
and
lcall
inc
fmuls
mov
jne
icebp
aaa
mov
jle
mov
cld
in
cmp
fwait
mov
jl
mov
je
mov
data16
pushf
pop
sub
cs
nop
jl
mov
into
mov
push
scas
mov
les
hlt
das
iret
xor
movsb
sysret
aaa
mov
mov
fisubrl
popf
movsl
inc
jle
call
in
push
bndldx
jmp
idivb
aad
lret
xchg
fnstenv
jl
pushf
cmp
push
mov
inc
jg
add
xor
lret
out
pusha
lahf
cmpsb
sub
add
jne
into
jg
and
adc
popa
pop
dec
into
loop
mov
je
adc
or
push
inc
xor
mov
jmp
push
and
pop
mov
cmpsl
jmp
lods
popa
ret
xor
pop
adc
loope
paddb
add
pop
cmp
adc
xor
sub
sbb
and
jns,pt
fwait
adc
scas
cli
daa
test
bound
push
jbe
in
outsl
lcall
idivl
lock
bswap
fimuls
std
dec
jge
outsb
pushf
xorb
pop
inc
and
pop
stos
iret
xor
and
sbb
fiaddl
or
jbe
jo
call
cmp
xchg
cmpsb
clc
and
mov
shrb
lcall
iret
pusha
mov
data16
xor
negl
jnp
inc
fimull
inc
dec
out
mov
add
sbb
push
cmp
mov
mov
or
pop
loopne
js
iret
dec
dec
xchg
dec
movsb
repz
push
inc
dec
clc
inc
loopne
in
dec
push
rorb
sub
fcompl
cmpsb
call
mov
dec
push
std
cmp
testl
jbe
jne
adc
enter
lahf
dec
data16
aad
jp
scas
xchg
jmp
dec
and
in
out
dec
dec
outsb
cmp
or
test
addr16
sahf
mov
cmp
out
push
jne
inc
or
outsb
cltd
movsb
rcll
dec
or
in
lds
cmpsb
loop
out
dec
sahf
push
push
push
aas
push
out
dec
fwait
inc
imul
dec
and
push
mov
test
push
xchg
notb
arpl
dec
mov
xor
dec
jno
dec
xor
aam
outsl
cmpsb
pop
dec
jecxz
mov
cmp
subb
repnz
xor
rorb
sub
enter
dec
dec
jb
test
fs
sub
dec
je
int
sbb
call
cmpsl
inc
push
dec
inc
js
mov
fwait
idivb
dec
stos
imul
scas
decb
dec
sbb
pop
jp
dec
popa
mov
dec
jne
mov
dec
aad
cli
xor
fs
add
add
gs
lahf
test
push
dec
outsb
xor
shll
add
mov
into
xchg
pop
jecxz
push
dec
inc
jge
mov
push
mov
outsb
xchg
dec
add
icebp
into
sbb
ja
mov
popa
push
dec
les
fnstcw
jl
mov
xchg
dec
faddl
ja
adc
lods
jl
iret
pop
mov
mov
jp
jge
jl
addr16
dec
test
ss
mov
pop
aas
dec
adc
mov
popf
dec
inc
adc
sub
dec
sarl
dec
mov
imul
sub
mov
and
inc
aam
dec
jl
jbe
outsl
mov
inc
dec
xchg
in
push
andb
mov
dec
out
xor
cmpsb
pop
mov
cmc
sub
popa
add
pop
mov
mov
out
mov
lret
mov
sub
xchg
jne
dec
in
movsl
arpl
fnstenv
iret
mov
cmp
gs
dec
mov
push
xchg
adc
xor
adc
stos
repnz
stc
cli
iret
out
cmpsl
jg
and
imul
not
sahf
ret
sbb
xchg
fsubrl
fwait
mov
jo
je
scas
in
lret
xchg
cltd
and
pusha
and
inc
pop
push
loop
push
push
dec
cmp
jg
and
jo
ficoms
add
iret
scas
movsb
incl
jmp
pop
pop
jbe
cmp
sub
mov
ja
inc
xlat
mov
xor
sub
sub
clc
mov
mov
sub
xor
pop
ds
mov
jbe
mov
hlt
push
and
cmp
push
jae
push
dec
mov
jbe
pop
je
and
rcrb
lret
hlt
inc
sbb
mov
push
js
dec
xchg
mov
je
sub
dec
mov
xor
cmp
xchg
icebp
or
ds
fildll
shrl
dec
orl
xor
divl
outsl
jo
dec
lahf
addr16
cld
cmp
mov
sub
popa
call
rorb
pop
cwtl
mov
mov
push
sub
mov
daa
mov
jle
ret
clc
mov
xor
push
adc
lea
push
add
pop
imul
loopne
icebp
cmp
add
add
test
dec
push
and
in
fwait
int3
sbb
sbb
or
into
ret
add
dec
inc
aam
loope
in
das
in
adc
xor
or
mov
adc
inc
jo
jb
add
or
dec
lods
sub
or
adc
in
jnp
movsl
test
ja
shll
xor
push
pop
int3
popa
xchg
stos
xor
rorb
pop
jmp
dec
aad
arpl
jo
lods
je
xor
xchg
mov
dec
jb
mov
and
sbb
shlb
inc
pop
lcall
mov
jl
cmpsl
push
mov
inc
cmp
call
push
or
jg
xlat
xor
shl
fisttpl
sub
mov
push
push
repnz
in
and
dec
mov
push
loope
mov
addr16
lcall
xchg
test
and
icebp
dec
enter
lock
outsl
divb
dec
jge
mov
mov
mov
adc
movl
lods
sbb
jno
mov
pop
iret
in
sub
and
lret
dec
sahf
aad
in
int
jmp
dec
int3
js
push
addl
out
add
xor
and
dec
clc
fldt
scas
dec
js
mov
jge
push
cmpsb
mov
dec
loop
ds
sbb
xor
in
dec
push
ljmp
sahf
add
cmp
out
loope
dec
ljmp
xchg
arpl
lock
mov
hlt
dec
into
stc
fs
inc
cld
ljmp
insl
jnp
popf
es
push
sbb
dec
jle
aad
ret
daa
jo
push
std
ss
cmp
stc
push
test
cmp
sub
xchg
fldenv
fwait
mov
xchg
or
jg
mov
mov
fwait
mov
xlat
faddl
ficomps
pusha
mov
jecxz
out
fcmove
int
inc
jne
loope
cmpsb
fisttps
pop
dec
add
and
cmpsb
push
dec
and
lahf
xor
mov
xor
dec
mov
lods
and
movsl
jge
add
leave
inc
inc
xor
jle
mov
xlat
push
add
andb
movsl
daa
cmpsl
mov
fstpt
adc
or
pop
jl
mov
enter
sbb
ret
negb
pop
dec
lret
jae
cmp
ret
and
lds
stos
adc
int
leave
xchg
dec
cli
jg
sub
pop
ss
inc
push
jl
inc
jo
rol
and
shrb
add
push
adc
sub
aam
cli
and
std
shrb
icebp
xchg
cmp
pop
ror
fildll
pop
pop
scas
xor
cmp
xchg
mov
push
or
mov
push
ds
jle
push
sbbl
faddl
dec
and
stos
xor
jle
mov
cmp
aas
pop
sub
and
lea
and
cltd
and
cmp
xchg
cmp
cmpsl
cmp
mov
mov
popf
nop
push
fmull
adc
lret
mov
fs
fcmovb
fldcw
inc
das
sbb
inc
xorb
addb
clc
inc
cmc
jns
mov
or
les
scas
mov
punpckhwd
nop
mov
pop
arpl
jg
dec
adc
scas
xchg
mov
push
push
xor
data16
xchg
cmp
dec
pushf
adc
push
sti
lret
push
repnz
or
enter
mov
add
inc
stc
sub
pop
daa
dec
mov
rorb
loop
dec
js
mov
imul
jl
decl
fimuls
mov
jo
xchg
and
push
dec
das
sbb
xchg
fidivrl
xor
shll
xor
pop
and
fimuls
in
mov
ljmp
and
fs
dec
iret
push
pop
inc
ljmp
aad
cmp
push
xchg
out
cmp
inc
adc
movsl
enter
mov
ss
mov
jbe
dec
jb
inc
enter
incb
and
jp
dec
aas
jns
sub
loope
xor
mov
sbb
dec
adcl
cmp
shl
jo
pop
pop
pop
jbe
mov
push
lods
and
xor
js
rorl
sub
mov
adc
jb
sub
bound
dec
mov
add
lret
mov
adc
sbb
inc
das
in
imul
in
scas
inc
aaa
push
push
mov
xor
nop
dec
jmp
popa
cmp
in
dec
inc
push
int3
mov
aam
jne
xchg
rolb
dec
in
cwtl
push
sbb
dec
dec
push
sub
lahf
mov
std
inc
scas
fsubrl
cmp
outsb
cltd
add
jg
mov
je
pop
stos
dec
dec
jl
push
adc
fs
addr16
mov
add
shrl
icebp
pop
scas
mov
sub
adc
cld
int
jne
pop
xor
aas
jl
sti
cmp
imul
xor
sub
jge
into
mov
mov
cmp
push
test
cmp
cmp
iret
fmuls
or
enter
mov
xor
mov
enter
dec
xchg
jg
sub
mov
in
mov
decl
jle
add
mov
push
aas
mov
imul
cmp
jle
loop
mov
jo
or
lahf
subb
cmp
scas
pop
mov
jo
mov
push
rolb
fstps
mov
push
neg
call
xchg
leave
adc
mov
dec
xchg
into
cmp
and
dec
xchg
mov
jb
mov
push
shl
jmp
inc
add
push
fbld
pop
lahf
dec
repz
mov
aaa
inc
push
pop
lods
and
lea
sarl
push
cmp
and
repnz
nop
das
xchg
adc
int3
mov
push
cmc
dec
das
test
mov
lret
sub
pop
dec
mov
ret
add
jns
enter
scas
rcr
sbb
mov
cmp
test
inc
jle
lods
lods
sbb
shl
testl
jl
call
xor
cmp
xchg
add
je
lahf
push
test
pusha
outsb
out
cmp
pop
xor
shrb
cmp
xor
jae
inc
in
mov
rclb
in
and
pop
movsl
jmp
lods
inc
outsb
mov
mov
jbe
inc
fdivrp
movsl
sbb
das
lds
push
outsb
lea
jnp
inc
jmp
in
rorb
fs
ds
mov
les
repnz
aaa
iret
lcall
nop
push
aam
jle
cmp
xchg
sarb
dec
mov
outsb
mov
mov
jle
add
pusha
movsl
sbb
jg,pn
mov
imul
inc
xchg
xchg
xor
movsl
shlb
adc
xchg
push
dec
jb
out
xchg
bound
lods
sub
mov
movsb
push
jmp
arpl
mov
cs
dec
jg
push
xlat
mov
cmp
xchg
aas
sub
pop
sub
aam
or
mov
xorb
jl
rclb
or
cmpsl
fcompl
cs
xor
push
xor
pop
or
or
divl
rol
lods
test
imul
scas
adc
jg
pop
inc
pusha
add
sub
mov
orl
addl
cmp
push
push
pop
pop
and
ffreep
sti
pop
jmp
push
fisttpl
cmc
or
js
mov
xchg
or
dec
mov
and
in
adc
or
call
mov
in
jnp
mov
jmp
xchg
fidivs
call
mov
mov
cmp
mov
fstpt
xchg
dec
push
das
jg
imul
clc
push
xor
ret
pop
shl
clc
dec
mov
dec
jnp
jp
jecxz
push
dec
pushf
xor
roll
popl
adc
dec
or
push
mov
xor
out
testl
into
loopne
add
push
fst
das
mov
pop
add
fisttpll
rolb
inc
popa
inc
inc
cs
in
inc
dec
lcall
cmp
bswap
pusha
mov
dec
lret
in
cli
test
push
mov
jae
or
lock
cmp
sub
fsubs
cmp
addl
std
test
iret
test
fldenv
jl
push
mov
add
inc
pop
mov
dec
pop
cmp
or
mov
scas
imul
dec
lret
ljmp
stos
aad
adc
xchg
push
in
push
sub
push
dec
lea
outsl
cmp
mov
cwtl
jns
or
fwait
pop
inc
and
aaa
dec
rclb
jb
insl
addl
push
outsl
pop
bound
jbe
test
dec
mov
sbb
clc
je
arpl
or
push
jge
loop
insl
pop
dec
xlat
sahf
xchg
mov
add
dec
add
sub
fistpl
imul
dec
fisubrl
je
push
xor
xor
pushf
loop
bswap
out
add
cmp
fstl
mov
mull
xchg
sbb
cmpsl
add
xchg
dec
jne
jnp
sti
rep
cmc
inc
aam
push
or
pop
cmp
jg
and
mov
sub
icebp
cmp
negb
rcll
cmp
dec
adc
jl
push
je
jnp
pop
pop
adc
adc
cld
fs
dec
dec
or
mov
out
add
aas
dec
jge
mov
push
jne
mov
and
into
lods
mov
imul
cmp
dec
cmp
jg
mov
stc
pop
arpl
xor
dec
inc
pop
divb
dec
dec
mov
pop
ds
mov
shl
dec
sub
mov
dec
sub
push
jno
fsincos
dec
cmp
jns
rcl
arpl
dec
out
adc
cwtl
mov
call
xor
lahf
scas
inc
aad
inc
fnstsw
bnd
dec
popf
xor
cli
ja
mov
push
dec
lcall
adcb
xchg
mov
ljmp
jbe
dec
scas
in
addb
mov
xor
xchg
adc
fwait
or
dec
mov
insl
add
adc
notb
ret
xor
fidivrl
out
dec
jb
stos
hlt
jecxz
cwtl
lods
cli
mov
lods
mov
pushf
xchg
ror
pop
dec
mov
movsl
inc
fisubrs
mov
fdivs
cmp
cmp
mov
aam
in
inc
icebp
je
xlat
aaa
sub
int3
out
inc
rolb
scas
cmp
sbb
nop
cs
outsb
pop
dec
dec
mov
cmp
dec
xchg
jle
sbb
sar
lret
inc
push
xor
stos
fidivl
nop
jl
mov
mov
cld
xorb
push
inc
and
push
xor
pop
pushf
into
aas
ret
dec
cmp
pusha
xor
push
dec
fs
and
je
test
jns
movsl
or
inc
test
loop
lcall
dec
jl
clc
cmpsb
mov
sahf
add
scas
mov
iret
iretw
dec
test
mov
mov
in
dec
cltd
not
push
cmp
push
jb
fnstenv
mov
jmp
dec
add
xchg
adc
imul
jmp
xchg
inc
stos
icebp
mov
jae
fbld
push
shrb
push
sbb
movsl
les
loop
pusha
test
add
cmc
fisttps
jbe
imul
inc
sbb
out
xchg
or
insl
dec
dec
pop
or
cld
daa
pushf
mov
bswap
dec
mov
add
xchg
dec
dec
jl
dec
std
push
xchg
int3
fcomip
fsubs
sbb
sub
dec
inc
jl
mov
cli
or
dec
mov
sub
movsl
ficomps
dec
mov
das
pushf
jne
adc
dec
pop
mov
cmpsb
mov
mov
out
in
adc
lods
xchg
enter
insb
push
pop
js
add
in
into
test
jl
xorb
dec
dec
jb
mov
fildl
or
xchg
imul
cld
aam
bound
notb
push
inc
adc
fldcw
xor
les
dec
loopne
jecxz
mov
mov
cld
push
xchg
adc
loope
mov
dec
add
jmp
inc
mov
das
pop
in
std
in
cwtl
imul
les
mov
add
push
cmp
push
nop
fwait
inc
and
jl
cmp
stos
repnz
sbb
cmp
dec
in
fs
fnstenv
idiv
popa
inc
pop
test
jbe
lea
push
mov
ficoml
pusha
sbbb
and
xchg
mov
rclb
outsb
mov
mov
dec
push
cmp
lods
cmpsl
xor
jl
and
add
scas
push
xchg
popf
sarl
pop
and
inc
inc
rol
mov
xor
arpl
rcl
xchg
nop
lea
or
lret
inc
mov
les
jmp
orl
xor
xchg
xchg
shll
sbb
into
push
out
sbb
nop
rorb
mov
shll
cmp
cld
fs
or
xor
jg
pop
addr16
lret
pop
jl
orb
ja
pushf
push
rolb
jecxz
inc
icebp
or
icebp
aas
sbb
jmp
sub
add
xchg
jae
sub
cmpsb
lods
lret
mov
sub
mov
pop
ret
jp
fwait
xchg
fistl
jg
sub
testb
shll
data16
mov
dec
inc
hlt
xchg
rorb
jle,pt
push
lahf
stos
cmc
pop
cmp
ret
dec
jle
jo
int3
cmpsl
jl
push
jo
mov
ficoml
jle
mov
mov
in
xchg
addr16
push
leave
adc
jmp
xchg
sub
and
lret
push
sub
add
xor
pop
hlt
imul
jg
loope
cmp
jl
add
mov
aam
das
add
rol
sbb
push
scas
adc
outsb
movsl
shlb
fstps
mov
dec
test
jle
das
and
sub
xchg
dec
lret
mov
cmp
pcmpgtw
dec
and
pop
jmp
adc
mov
sub
sub
add
add
mov
nop
outsb
mov
js
lods
adc
scas
cs
mov
pop
sub
dec
jo
mov
pop
mov
xchg
lret
and
or
pop
jg
sti
loopne
mov
fiaddl
jnp
addr16
sbb
xchg
pop
test
ss
outsb
ds
push
or
stc
ds
xchg
pop
test
pop
xchg
pop
push
dec
push
cmpsl
shll
dec
andl
fstl
pushf
scas
mov
cmp
lahf
fidivl
dec
pop
jg
xchg
insb
cs
xchg
xorl
mov
inc
in
rclb
inc
loop
mov
popf
in
dec
rcl
lods
push
jns
js
dec
insb
rcll
repz
push
push
dec
int
cmp
fmull
shlb
jmp
int
pop
and
and
xor
xchg
cmp
xorl
inc
inc
jecxz
pop
int
cld
popf
cmp
out
adc
jnp
sub
sbb
push
dec
cwtl
mov
mov
aaa
mov
pop
outsl
cmp
daa
jb
stos
ss
iret
test
adc
test
mov
movsb
hlt
iret
arpl
fucomip
pop
adc
jbe
iret
and
xorl
fimuls
idivl
loopne
push
push
cmp
dec
enter
cmp
cmpsb
jo
mov
or
mov
dec
xchg
pop
pop
mov
dec
lahf
xor
inc
mov
aaa
daa
bswap
mov
pop
fs
dec
fsubl
addl
iret
mov
in
jp
mov
dec
fisubrs
jle
dec
push
out
cmp
mov
add
xchg
sbb
push
in
jl
mov
addr16
push
fmuls
loopne
add
inc
mov
iret
add
mov
dec
dec
pop
dec
stos
ret
testl
lods
push
scas
cs
fidivs
mov
dec
or
inc
or
mov
ljmp
dec
and
xor
mov
pop
dec
std
or
into
dec
fstl
dec
nop
mov
and
ljmp
lock
testb
ljmp
dec
movsb
lea
adc
mov
arpl
rcll
stos
pop
dec
in
mov
jb
adcb
popf
mov
xor
fwait
pop
pop
sahf
inc
adc
jle
pushf
push
sbb
inc
cmp
push
or
jge,pt
dec
pop
inc
mov
lods
jl
mov
xchg
jl
push
add
mov
sub
fwait
or
pop
mov
sub
jl
add
jle
inc
testb
mov
pop
movsb
jns
int3
decl
stos
jmp
je
shlb
out
mov
ror
dec
jns
int3
mov
sbb
sub
adc
sub
cmp
imul
aam
iret
cmpsl
and
mov
cmp
jg
dec
xchg
xchg
pop
dec
mov
and
fsubrp
idivl
xlat
mov
ds
cli
mov
and
adc
cltd
lods
hlt
or
cmp
loop
xor
adc
insb
mov
or
sbb
inc
mov
popa
dec
xchg
xchg
jmp
dec
cmp
jl
xchg
sbb
scas
shrb
adc
shrb
or
cltd
int3
fs
mov
aam
cmp
sahf
sub
xchg
inc
xor
jle
aaa
push
ss
mov
jbe
data16
push
or
mov
pop
xor
jp
mov
push
movsb
sarb
or
es
mov
enter
popf
or
test
dec
sub
jo
sbb
bound
dec
mov
pop
subb
fmuls
add
add
adcl
fiaddl
jno
fwait
int
cmp
cmp
and
je
popf
mov
fcom
inc
ds
sub
mov
mov
es
dec
xor
and
stos
outsl
inc
andb
and
aaa
jle
pop
mov
int
lcall
shrl
and
into
push
mov
lahf
faddl
xor
out
dec
xchg
ds
pop
jle
pop
dec
gs
call
jecxz
cmp
jne
dec
xchg
dec
scas
mov
push
cmp
cmp
roll
fs
jecxz
adc
cmp
daa
push
and
dec
faddp
push
or
mov
inc
outsb
dec
std
jae
sbb
aad
mov
inc
add
std
mov
xchg
pop
mov
pop
xor
daa
repnz
sahf
jno
scas
out
outsb
sbb
mov
fimull
outsb
imul
sarb
icebp
aas
repz
mov
xchg
mov
and
cmp
push
sbb
lret
jb
sub
adc
aam
mov
pop
dec
xor
test
orl
inc
xor
dec
add
lock
enter
mov
int
cmc
add
insb
dec
test
into
sahf
push
rcrl
cmp
mov
jb
addr16
pop
dec
dec
scas
inc
push
mov
mov
xchg
dec
insb
inc
sbb
stos
arpl
dec
loopne
jbe
xchg
xchg
dec
mov
cmp
add
and
xor
xor
cwtl
inc
lahf
int3
ja
jbe
dec
sbb
inc
shll
push
out
pop
dec
ret
sub
push
xchg
dec
sbb
dec
push
dec
push
lret
inc
adc
es
ljmp
popa
dec
cmp
testl
dec
cwtl
ja
ljmp
movsb
lock
outsl
cmp
push
adc
int3
sbb
dec
mov
and
insb
jbe
xor
inc
pop
cltd
icebp
mov
xor
push
scas
fwait
js
dec
in
sub
add
sbb
push
insl
dec
mov
flds
add
mov
jle
dec
adc
fmul
loopne
jmp
sbb
mov
lods
mov
xor
dec
jge
adc
jp
lret
aam
pushl
repz
arpl
xor
adc
inc
mov
mov
aam
popa
dec
hlt
int3
shl
xchg
in
dec
sub
cli
cmc
xchg
pop
jp
inc
mov
inc
mov
dec
mov
dec
and
jle
in
dec
jmp
push
mov
das
and
inc
les
sbb
jp
insb
lock
dec
aaa
push
arpl
dec
es
rcrb
or
dec
cmp
push
fyl2xp1
push
dec
les
shrb
jg
xchg
scas
dec
mov
data16
andb
gs
dec
xchg
sub
dec
sbb
movsb
jno
outsb
pop
dec
cltd
ss
inc
std
dec
testb
sub
mov
xor
cmc
gs
lea
fwait
test
dec
mov
and
adc
jl
dec
dec
or
push
outsb
fdivs
cmp
sub
outsl
cmc
int
sbb
ret
jne
fcoms
sbb
jecxz
je
dec
or
dec
mov
icebp
fnstsw
adc
dec
loope
lret
pop
push
dec
dec
jmp
add
enter
mull
ret
dec
pushf
mov
pandn
mov
aaa
xchg
data16
loopne
lcall
xchg
iret
xlat
scas
xor
aam
arpl
hlt
fnstsw
out
lret
jle
mov
pusha
call
jne
sub
add
lds
adc
jnp
mov
insb
mov
lret
dec
adc
loop
or
fidivl
add
inc
js
testl
dec
pop
jg
pop
xchg
and
mov
ret
sbb
add
and
xor
inc
jg
mov
mov
mov
imul
push
push
aaa
push
js
movsl
cwtl
fcomi
cmpsl
dec
adc
inc
jle
mov
notl
xchg
push
jecxz
push
inc
dec
mov
inc
dec
xor
jle
out
leave
jl
sub
or
add
jbe
ljmp
stc
shlb
jle
xlat
dec
and
insl
push
pop
das
dec
mov
in
sbb
xchg
stos
jae
adc
dec
push
push
stc
or
xchg
jmp
mov
dec
jbe
sbb
mov
fistpl
sub
mov
test
mov
inc
lcall
mov
adc
xor
repz
push
incb
push
xchg
in
les
dec
lods
mov
cmp
add
inc
addl
dec
stos
jne
sarb
xor
in
into
arpl
cmp
mov
push
pop
aam
xlat
push
aas
dec
or
or
aaa
int3
jg
mov
adc
dec
xchg
cld
fisubl
pop
testl
ss
call
dec
xchg
dec
mov
scas
dec
xchg
outsb
test
scas
dec
fisubrl
cmpsl
add
addr16
test
js
adc
fsts
mov
pushf
sbb
mov
scas
cli
mov
dec
inc
test
xchg
mov
pop
jne
dec
sub
mov
pop
or
aas
cli
mov
mov
popa
shrb
xchg
adc
fistpl
dec
repnz
dec
xor
pop
lahf
dec
jo
and
xchg
outsb
cs
mov
loope
cmp
push
aam
cmp
int
xor
cmp
jge
inc
jg
adc
rorl
xchg
repz
inc
xchg
orl
add
mov
xchg
push
push
lret
xchg
jg
outsb
mov
movsl
mov
sub
mov
rclb
insl
aad
dec
ja
lds
dec
loope
lods
jl
imul
inc
sahf
dec
pop
pop
inc
push
or
cmp
frstor
mov
leave
gs
test
dec
cmp
out
sahf
cmp
fadds
inc
push
lods
ret
test
sub
mov
loopne
ret
jle
cwtl
push
outsl
adc
and
fistl
fisubrl
pop
lahf
push
divb
mov
cs
loope
or
sbb
fcoms
aas
rolb
jp
rorb
xor
dec
mov
push
ficomps
imul
sbb
add
lret
mov
push
inc
adc
insl
ror
mov
mov
je
cmpsb
xchg
imul
jae
dec
pop
call
jbe
stc
add
pop
clc
lea
cmp
push
mov
push
fcmovnbe
ljmp
sbb
sub
adc
dec
fisubrl
cmp
scas
add
jle
int
lcall
xor
pop
xor
push
sbb
pop
divb
mov
stos
adc
pop
mov
inc
mov
pop
pop
jg
push
or
jl
inc
rcrb
push
cmp
xor
shr
cs
push
add
je
jnp
aaa
xor
int
repz
fistps
fistpll
mov
sarb
movsl
push
out
add
push
outsl
aaa
frstor
pop
mov
lock
push
out
or
mov
lcall
dec
in
mov
xchg
aas
mov
mov
popf
cld
mov
adc
fimuls
dec
push
cwtl
xor
sarb
clc
mov
add
popa
adcb
jb
and
cs
mov
dec
cmc
push
popa
cli
aam
mov
xchg
cmpl
mov
adc
rcl
out
addr16
add
xor
dec
mov
or
stc
and
xchg
mov
mov
or
add
stc
xchg
dec
shl
in
mov
inc
out
pop
adc
dec
dec
sub
add
dec
mov
cmpsb
jmp
jl
sbb
mov
mov
pop
sub
pop
adc
dec
int
mov
fildl
jae
dec
stos
dec
jno
out
ss
dec
sub
imul
fs
loope
sub
mov
add
and
lock
jnp
xor
ljmp
sahf
int
dec
mov
gs
dec
push
cmp
mov
das
sub
pop
cmpsb
enter
and
fldcw
lret
add
mov
ja
push
push
pop
fs
in
loop
pop
push
jbe
and
lock
lea
adc
mov
mov
and
mov
and
imul
sahf
hlt
dec
inc
into
scas
jl
push
push
push
iret
lods
jg
cltd
rolb
push
mov
lahf
xchg
inc
bound
dec
sahf
push
inc
cmp
and
adc
jae
dec
pop
sub
test
jmp
push
jl
das
inc
xchg
jb
jge
lcall
ljmp
lea
stos
sti
and
dec
hlt
js
pushl
push
dec
mov
leave
into
fdivs
jge
add
cmpsb
inc
fistps
das
negl
sahf
and
cmp
jle
ljmp
add
lds
dec
popa
and
jge
dec
out
pop
push
fsubrs
dec
mov
iret
dec
subl
jb
dec
mov
das
pop
inc
in
inc
xor
xor
jmp
orl
cld
xor
fstl
xor
cmc
out
js
sbb
std
dec
adc
pushf
movsl
int3
lret
popf
push
addr16
dec
ret
jo
out
arpl
inc
and
dec
sub
jmp
xor
pop
push
rorl
pop
dec
popa
jmp
les
mov
repnz
in
pop
push
inc
inc
push
imull
lcall
jmp
xor
push
in
mov
cmp
dec
pop
mov
inc
ret
and
mov
jle
aas
sub
sub
sub
dec
stos
push
sarl
inc
call
idivb
popf
adc
jae
shlb
int
mov
icebp
push
xor
icebp
imul
dec
xchg
jg
lret
mov
int3
cmpsl
cmp
ret
jg
pop
pop
mov
stos
pop
or
cmp
shl
int
leave
or
adc
cmpsl
fnstenv
push
dec
sbb
imul
push
lea
loop
push
nop
iret
in
clc
and
mov
mov
mov
shll
mov
scas
jecxz
mov
jp
pop
mov
arpl
sbbb
dec
sub
icebp
jo
or
pop
sarl
cmp
sbb
scas
roll
aaa
data16
into
dec
pop
rol
cmc
stos
inc
xchg
dec
shl
in
lods
add
ret
inc
movsb
fiadds
xor
repnz
mov
mov
gs
mov
and
jo
sub
fmull
fmul
ret
xlat
aaa
out
ljmp
jb
fimull
or
dec
xor
xchg
das
arpl
cmc
addr16
mov
mov
fcmovu
inc
loope
loop
addr16
push
outsl
pop
xchg
mov
dec
adc
jnp
hlt
jp
dec
les
add
dec
xchg
cmp
dec
jb
xchg
gs
iret
jno
sub
cmpsb
fsubs
lret
add
ret
fidivrs
cmc
call
icebp
cmp
pop
pusha
xor
mov
jo
ja
aad
ds
xorb
jg
cmpsb
mov
pop
mov
iret
cmpsb
xchg
daa
ljmp
pop
inc
cmp
pop
dec
mov
enter
sbb
call
rcrb
xor
and
push
repz
jns
and
push
xchg
xor
sahf
xchg
sub
sub
mov
test
loop
cmp
sbb
dec
adc
out
mov
dec
int
shlb
nop
add
cmpsb
daa
or
stos
dec
ja
insb
je
push
fdivrs
dec
or
popa
movsl
sub
fiaddl
cmp
sbb
ss
call
pop
mov
enter
mov
push
jnp
popf
dec
and
and
fidivrs
addb
insl
xchg
xor
add
push
je
jns
lds
ret
insb
cs
outsl
mov
mov
lret
call
and
lock
jge
push
pop
dec
mov
dec
out
neg
mov
in
add
and
sub
aaa
cmp
cmpsl
dec
mov
into
loope
in
jb
dec
fnsave
sbb
outsl
mov
dec
mov
dec
insl
xor
push
mov
mov
iret
int
jle
xchg
pop
mov
pop
fdivs
sti
inc
and
sub
dec
lods
push
test
mov
test
cli
loop
fldt
and
jle
dec
arpl
mov
sahf
daa
fisubrs
ds
repnz
xchg
mov
mov
dec
sub
push
add
test
dec
in
faddl
dec
mull
xchg
in
mov
or
adc
scas
mov
push
dec
mov
add
decb
pop
xlat
cmp
iret
rorl
sub
push
pop
sub
jge
rcrl
fsubl
jle
adc
dec
add
cld
inc
pop
xchg
jbe
roll
inc
jl
imul
dec
jo
lods
fwait
jmp
scas
sahf
cmp
lret
shll
dec
in
sarb
lahf
inc
adc
inc
popf
jnp
loopne
jns
movsl
sarl
leave
mov
mov
push
lock
lea
add
popf
sub
push
mov
mov
or
repz
scas
xor
mov
push
rcll
ficomps
mov
cmp
lret
adc
sub
lahf
dec
jmp
mov
fmulp
adc
dec
sbb
pusha
and
mov
movsl
dec
jmp
lret
dec
rolb
sbb
out
fnsave
in
inc
jp
dec
in
and
in
sub
dec
xor
and
xchg
dec
mov
sbb
dec
mov
mov
mov
sbb
test
jge
xchg
sti
stc
or
jbe
dec
loope
pushf
or
iret
push
mov
out
je
dec
xchg
scas
mov
scas
pop
cmpsb
mov
leave
mov
mov
cmp
jnp
dec
in
sub
scas
sbb
imul
iret
mov
mov
inc
rclb
push
cs
mov
xchg
std
dec
push
repnz
hlt
outsb
dec
scas
mov
pop
rolb
or
dec
out
cltd
sbb
push
inc
fwait
inc
push
xchg
rcrb
cmp
pop
inc
dec
xchg
sub
enter
dec
sti
adc
xchg
rol
dec
add
notb
xlat
outsb
out
dec
and
adc
andb
and
stc
push
jmp
into
or
push
dec
fwait
daa
inc
mov
mov
or
dec
into
das
rclb
or
dec
sbb
mov
fwait
jae
jne
cld
inc
imul
dec
mov
mov
mov
sub
iret
or
jno
push
adc
fisttpll
out
dec
dec
push
int
mov
subb
pusha
add
dec
add
or
mov
jbe
dec
cltd
xor
in
and
push
inc
fistpll
call
fsub
nop
js
cs
push
jnp
aaa
inc
push
add
xor
insl
cs
adc
cmp
push
pop
shll
jl
xchg
add
aaa
fistpl
popf
loope
add
cmp
stos
icebp
aad
outsl
xor
jl
stos
push
pop
repz
sub
adc
faddl
dec
rorl
call
xor
dec
jb
jae
and
dec
xchg
dec
addr16
xchg
sbb
loop
lret
dec
jmp
mov
arpl
enter
out
add
aam
scas
daa
push
dec
ret
mov
fadd
jle
mov
and
or
push
enter
fcomps
cmp
call
test
pop
mov
pushf
sub
xor
call
mov
fptan
mov
movsb
data16
push
xchg
xlat
dec
les
dec
cmp
mov
into
jmp
cmp
lods
mov
ret
jle
in
add
jnp
jl
cmp
push
mov
inc
push
xor
dec
scas
das
push
mov
dec
jae
in
sub
or
xlat
mov
les
dec
repz
mov
jge
call
jge
pop
dec
and
outsb
push
jg
jae
rclb
loopne
dec
mov
xchg
testb
xchg
xchg
sub
xor
lcall
out
pop
dec
sbb
icebp
sbb
inc
jl,pn
int3
adc
or
fstpt
mov
xchg
push
and
and
xchg
and
decl
movsb
sub
dec
cmc
jle
sbb
mov
jl
mov
pop
dec
xor
imul
lret
xchg
mov
loopne
or
mov
jecxz
mov
xchg
nop
dec
dec
pop
xor
pop
iret
aam
aas
dec
sub
mov
pushf
jmp
subb
jge
mov
or
jno
jns
push
xchg
push
or
out
xchg
xchg
pop
sub
dec
mov
ja
mov
push
mov
lea
test
fistps
js
stc
adc
jno
sbb
jmp
push
jle
fdivrl
add
dec
xchg
xchg
adc
jb
aaa
leave
dec
pop
xchg
mov
inc
dec
int
pop
cmp
je
test
fwait
dec
mov
mov
push
lods
xor
call
adc
pop
cmc
adc
fistpll
xlat
in
dec
or
fnstsw
mov
inc
add
mov
inc
mov
mov
mov
pop
test
xchg
dec
dec
sub
mov
imul
cltd
inc
inc
push
nop
jle
cmp
fdivrl
in
out
out
icebp
test
adc
dec
out
dec
je
lret
dec
jnp
in
inc
xor
data16
jmp
dec
xchg
inc
add
dec
pop
sbb
or
jae
inc
test
imul
rorl
mov
daa
cmp
dec
jb
pop
xor
mov
push
mov
push
int
mov
into
cmc
adc
xchg
mov
hlt
mov
aaa
outsb
scas
push
icebp
dec
xor
outsb
ret
pop
rorl
scas
in
and
aas
mov
hlt
mov
stc
test
cmp
lods
mov
pop
dec
and
push
mov
fisttps
lret
aaa
js
daa
sarl
sub
adc
dec
arpl
xchg
not
sbb
cmp
sahf
mov
in
inc
in
pop
dec
lcall
sub
addr16
sbb
push
pop
hlt
fwait
xchg
mov
xchg
pop
nop
and
cmp
add
dec
cmp
add
jg
push
push
loopne
push
xchg
push
imul
aad
je
pop
iret
push
mov
insl
push
mov
sbb
dec
pop
out
gs
cmp
sbbl
xchg
iret
push
xchg
xor
push
test
dec
mov
ljmp
add
xor
dec
lods
xor
pop
cmp
int3
rclb
xor
cli
sti
push
decb
stc
cli
insl
mov
mov
dec
icebp
jl
lods
jnp
repnz
scas
sti
addr16
out
dec
push
dec
dec
adc
jns
jmp
fwait
cmpsl
inc
hlt
xor
call
add
mov
out
dec
cmp
movsb
sub
les
test
dec
cmp
sbbb
mov
shl
xchg
dec
mov
push
push
push
mov
jnp
pusha
jns
dec
inc
sub
or
jno
fldz
and
iret
mov
sbb
sbb
jb
jmp
inc
inc
movsl
jo
fsubrs
fwait
pop
mov
loopne
cmp
add
outsb
dec
data16
inc
dec
push
jbe
lods
push
lods
icebp
popa
std
dec
jne
jno
insl
lcall
dec
loope
outsb
jl
mov
fwait
dec
lea
jl
push
mov
or
jge
mov
dec
mov
icebp
or
xchg
mov
out
leave
and
sub
test
into
mov
pushf
push
out
cmp
dec
add
push
pop
sub
mov
adc
pushf
dec
enter
js
icebp
popf
dec
mov
xor
dec
dec
dec
pop
cmp
dec
cmpsl
sbb
neg
lods
pop
dec
je
aam
pop
or
ret
jp
xlat
jno
sbb
push
dec
shll
and
cs
adc
ret
dec
jmp
dec
inc
in
popf
mov
xor
and
rcrl
xchg
mov
dec
mov
fstps
xchg
and
notl
or
or
inc
xchg
jle
rol
das
leave
cli
loopne
jmp
ret
repnz
bswap
orl
cmp
scas
sbb
in
dec
out
dec
push
dec
ds
cwtl
addr16
movsl
orb
out
xor
ljmp
mov
or
decl
mov
addl
popa
lret
and
pop
xchg
stos
sbb
inc
fiaddl
pop
push
out
or
mov
test
cli
dec
rcrl
mov
jmp
nop
test
out
arpl
shl
inc
jbe
or
nop
xchg
repz
jmp
dec
icebp
sar
push
mov
int
jl
or
pop
add
inc
pushf
mov
ret
int
dec
aad
sub
pop
fldl
mov
sub
or
pop
dec
push
ja
dec
inc
mov
xor
xor
inc
adc
cld
into
hlt
cmc
mov
aad
jl
pop
int3
add
lods
andb
movdqa
add
dec
fs
in
xchg
jg
dec
pop
and
das
fs
es
cmc
dec
push
jg
sahf
jb
sbb
mov
push
dec
push
ror
insb
jl
adc
inc
push
les
xorb
mov
jb
mov
mov
and
sbb
cmp
push
sbb
inc
jbe
test
inc
xchg
mov
gs
fidivl
jne
fstpt
jnp
push
mov
cmp
iret
cmp
adc
xchg
xchg
jl
stos
rcl
dec
cmp
pop
aad
jg
stos
ret
dec
sbb
movsl
push
js
das
ds
jg
ret
push
jle
out
cld
xchg
sub
in
or
gs
jne
push
inc
scas
cli
addr16
lcall
das
inc
mov
push
dec
mov
leave
push
sarl
rorl
push
dec
into
lcall
cmp
jp
and
out
push
mov
pop
xor
xor
and
dec
lcall
mov
dec
push
sub
jge
xor
pop
int
test
inc
mov
scas
pop
dec
dec
js
jmp
cmp
push
add
pop
xor
push
mov
nop
test
jle
cmp
push
or
into
cmp
inc
jnp
pop
lock
mov
roll
imul
pop
popa
outsl
inc
inc
jg
inc
and
ficoml
cmp
mov
push
sbb
daa
push
push
dec
xchg
ds
cmp
shr
ja
xchg
js
add
adc
data16
sub
popf
enter
or
insl
dec
les
lods
pop
inc
idiv
inc
into
sub
pop
mov
dec
xchg
push
ret
push
adc
dec
pop
dec
and
add
push
dec
jo
imul
dec
pusha
pop
xchg
inc
popa
orl
or
mov
adc
cwtl
mul
ss
movsb
xchg
dec
mov
orl
out
sahf
dec
inc
cmp
shrb
dec
fcmove
test
cli
or
mov
dec
popf
addr16
xor
adc
xchg
aad
xchg
dec
bnd
rolb
dec
insl
jl
je
or
rorb
ja
mov
and
shrb
aam
add
or
sahf
inc
inc
out
dec
cmp
mov
inc
insb
cmp
outsb
sub
mov
dec
fucomp
inc
cmpb
mov
out
es
icebp
or
sub
jnp
or
sbb
dec
mov
mov
stos
dec
cmp
add
pop
mov
mov
mov
into
xor
dec
roll
lock
mov
out
pop
iret
ljmp
aam
or
pop
in
lret
leave
movsb
dec
in
loope
cmp
xchg
xchg
pop
push
mov
das
cmp
mov
sub
sarb
push
inc
inc
jl
ficomps
movsb
dec
cmp
dec
fdivs
dec
jge
mov
mov
dec
divb
lock
jbe
mov
lret
push
dec
and
mov
pop
sub
dec
pop
xchg
mov
sti
sbb
dec
popa
js
jp
cld
dec
clc
push
dec
loopne
addr16
sub
repnz
xchg
lret
mov
aam
xor
pop
cmp
mov
in
dec
dec
stos
out
bound
in
jge
ds
fiadds
cmp
pusha
cmp
mov
movsl
roll
shr
xor
daa
mov
dec
push
jns
jb
in
mov
in
xchg
add
pop
cmp
into
jle
stos
cltd
cmp
push
dec
jl
push
pop
cmp
aas
mov
nop
ret
jl
pop
repnz
fadds
iret
and
dec
insb
mov
in
mov
mov
mov
push
stc
jbe
pop
inc
sti
pop
pop
bound
repnz
sbb
push
das
ja
push
dec
adc
xchg
and
and
dec
subl
add
xor
add
pop
aad
jb
xor
rorb
jbe
push
mov
imul
fimuls
pop
stos
pushf
push
xor
mov
dec
jle
mov
movsb
dec
and
dec
mov
and
jmp
ja
iret
lock
xor
xchg
popa
arpl
jmp
mov
lods
dec
pop
into
sub
add
sahf
fldt
pop
or
dec
push
rclb
test
repz
pop
fimull
inc
push
jmp
push
cmovb
xor
pop
in
push
xor
ljmp
xchg
enter
and
dec
lods
push
inc
dec
lock
mov
loop
lret
pop
dec
mov
push
or
xor
ja
mov
adc
cwtl
sbb
push
inc
in
iret
mov
or
fldcw
repnz
in
adc
dec
mov
push
cwtl
sti
fnsave
mov
std
lods
xchg
dec
and
mov
dec
push
cmp
dec
rorl
mov
in
les
gs
lock
jg
lea
ror
aam
nop
gs
clc
arpl
movsl
sub
inc
push
push
fwait
movsb
clc
cs
mov
xor
fsubrl
xor
dec
imul
out
dec
leave
testb
sub
mov
push
or
loop
add
sahf
repnz
cmp
jg
movb
pop
push
and
mov
repnz
dec
out
cld
dec
cmp
pop
fidivrl
xor
cs
dec
dec
adc
and
out
mov
adc
addl
mov
adc
inc
jle
push
pop
movsb
repnz
xchg
dec
es
lds
or
and
ficomps
test
sbbl
mov
push
mov
ja
mov
add
rcr
cltd
jg
cmp
inc
movsl
sub
cmp
daa
xchg
es
cmp
and
pusha
rorl
mov
push
sbb
pop
jecxz
cmp
idiv
dec
mov
fisubs
dec
mov
aad
adc
adc
inc
mov
jo
lret
ljmp
fs
scas
jle
push
int3
shrl
adc
xchg
and
add
leave
orl
loopne
pop
xchg
cltd
dec
dec
hlt
jmp
jge
mov
dec
cmp
add
jb
mov
idivb
repnz
jbe
ljmp
dec
sbb
pop
aaa
fisubrl
sbb
sub
jns
cmp
dec
sbb
ds
adc
gs
cmp
push
daa
inc
sub
jb
movsl
call
cmp
pop
dec
jle
push
bound
inc
test
sbb
dec
or
ret
outsb
fsubrl
xor
inc
aas
cmovge
mov
adc
jle
adc
dec
mov
imul
fs
outsb
adc
loopne
jl
imul
xor
test
push
mov
xchg
dec
pop
mov
xor
sub
ror
jo
cmpsb
inc
fldcw
out
addr16
cli
or
mov
loope
mov
add
and
cmpsl
inc
mov
push
inc
push
push
xor
dec
fstl
rolb
and
jmp
jle
dec
pop
fistpll
loopne
enter
mov
nop
push
jg
adc
fnstcw
dec
adc
xor
cmp
jnp
movsb
push
xor
pop
pop
lret
cltd
neg
idivl
jl
jmp
push
sub
xchg
pop
dec
ret
sbb
mov
push
inc
xor
icebp
cs
xchg
mov
inc
testl
popa
pusha
cltd
cmpsl
sar
jo
and
mov
subb
fucom
bnd
jecxz
pop
jle
and
mov
daa
xlat
jle
rorl
dec
push
jo
outsb
sub
add
cld
mov
xor
add
les
xorb
jg
iret
fdiv
sub
pop
push
imul
repnz
dec
jp
dec
rcll
ss
pushf
add
jb
add
insl
cmovle
adc
xlat
sub
cmp
pop
fisttps
sbb
pop
shr
fisubrs
cmp
fsubr
enter
or
or
mov
xor
and
shll
lds
stos
mov
dec
pop
mov
test
dec
push
out
or
test
lret
push
fsubrs
sub
lahf
push
push
mov
cmp
mov
mov
addr16
dec
arpl
hlt
push
sub
dec
movsl
jp
add
pop
loopne
dec
repz
dec
mov
lods
push
test
mov
xor
mov
adc
fbstp
or
xor
cs
adc
mov
cmpsb
and
dec
pop
es
pop
jb
clc
adc
aaa
or
call
lahf
cmp
addr16
dec
sarl
dec
adc
lods
xor
out
jne
add
and
sti
cwtl
fadds
dec
xchg
lock
push
dec
add
dec
das
inc
or
mov
jo
or
cmc
sub
in
mov
adc
push
adc
and
xchg
stos
xor
and
int
push
popa
pop
stc
dec
push
push
xchg
das
adc
repnz
xor
fwait
mov
dec
inc
addr16
adc
mov
xchg
mov
sbb
xchg
jl
outsb
outsb
pop
mov
cmp
lcall
jno
clc
test
xor
mov
cmpsb
jg
out
jae
ficomps
inc
cmc
dec
bound
out
fsts
push
pusha
xchg
and
jns
rcll
into
das
or
stos
outsl
dec
mov
cmp
add
sar
sbb
xchg
pushl
jl
jle
fwait
ljmp
push
adc
mov
jo
push
xor
xlat
test
add
sarl
xor
fbstp
mov
cmp
cmp
lds
jo
lcall
pop
xchg
push
ret
cmp
push
rcrl
mov
dec
orb
ljmp
popa
dec
jmp
adc
sub
sbb
rorl
push
insb
inc
mov
mov
ja
push
lods
gs
adcl
dec
push
jmp
push
lret
inc
pop
xchg
imull
into
jb
call
mov
sub
and
cs
hlt
pop
dec
loop
lret
fisttpl
jns
dec
cmp
xor
push
loope
mov
or
push
dec
and
push
dec
stos
mov
push
in
rorl
add
mov
testl
sub
sub
data16
gs
or
les
sti
pop
push
and
dec
or
cmp
dec
mov
movsl
cld
js
xor
or
cmp
outsl
add
jb
pop
pop
dec
fwait
xor
mov
jecxz
xor
pop
orb
lret
pop
rorb
push
fadd
add
sbb
dec
mov
push
jns
orb
dec
jl
or
cmp
insl
scas
aaa
dec
les
sbb
out
mov
dec
lcall
stos
arpl
pusha
adc
inc
and
in
cmp
push
xlat
sub
ja
inc
jp
mov
iret
into
dec
outsl
push
int3
test
stos
js
dec
sbb
adc
xchg
push
adc
cwtl
add
and
inc
jb
pop
shl
repnz
stos
add
dec
ljmp
mov
and
add
test
and
jp
dec
jge
mov
sbb
dec
imul
sbb
xor
mov
mov
movb
push
ja
mov
shll
dec
xchg
call
jne
pop
inc
xchg
pop
inc
dec
stc
iret
pop
lcall
jp
mov
js
sub
int
or
sub
outsl
adc
and
lahf
jge
dec
push
pusha
push
aaa
js
pop
int
jmp
mov
inc
arpl
in
lds
iret
xor
cld
dec
jbe
insb
mov
scas
pop
rorl
outsl
cmc
inc
lret
or
dec
jmp
xor
rcrb
and
cmp
mov
pop
and
push
push
mov
out
xchg
repnz
jge
xor
call
adc
jg
dec
push
pushf
cmp
test
mov
iret
or
shlb
mov
xchg
dec
fs
lea
lret
pop
mov
outsb
dec
in
rol
sti
aam
out
iret
shrl
inc
push
repnz
lcall
xchg
pop
dec
sub
and
jle
fucom
sub
stc
in
jno
es
shll
mov
stos
flds
sub
movsl
insl
pusha
scas
pop
mov
fisttps
in
push
daa
inc
pop
pop
int3
add
in
mov
lahf
xchg
adc
ficomps
cmc
push
movsb
ret
jo
cltd
mov
jg
nop
xchg
ljmp
cmc
ror
out
fadds
push
dec
dec
subb
mov
pop
xchg
pushl
inc
test
cwtl
jl
fisubs
lahf
nop
pop
or
sbb
mov
push
lahf
cmp
cmpsl
pop
data16
mov
gs
sub
rcrl
cmp
push
xchg
enter
in
test
and
sti
and
into
mov
push
cld
push
sub
pop
dec
jmp
in
gs
or
push
out
push
jp
imul
lcall
cmp
out
cmpl
wrmsr
cmp
call
addl
fbstp
add
push
sub
sub
or
subl
pop
push
out
insb
sbb
pop
rorb
outsl
into
sub
loop
cmpsl
aam
dec
shrb
inc
or
dec
pop
jge
cld
stos
fmulp
mov
mov
pusha
push
jg
adc
mov
stc
shrl
mov
sbb
jne
jle
xchg
nop
mov
popa
ret
add
aaa
daa
jl
outsl
push
mov
jo
pop
xor
pop
and
dec
enter
aad
jbe
pushf
imul
push
pop
jg
adc
xorb
scas
shll
xor
xchg
adc
pop
cmp
jl
mov
dec
mov
pop
out
repz
push
inc
push
testl
jo
sarb
jge
fwait
push
mov
cmp
loop
jno
orl
lret
ja
das
fcmovb
xchg
sahf
dec
dec
push
mov
popa
fstl
xor
insl
fmuls
dec
lahf
out
sbb
sbb
push
js
adc
mov
lret
jmp
add
dec
mov
mov
and
dec
push
inc
std
or
mov
dec
pop
xor
mov
repnz
xchg
inc
sbb
out
jl
aas
jle
sbb
iret
or
aaa
pop
xor
dec
out
shr
inc
lods
fnstcw
xor
dec
out
dec
pusha
mov
dec
jmp
sbb
add
push
mov
fwait
testl
cltd
dec
mov
dec
out
clc
xlat
lock
dec
mov
push
adc
test
loopne
cs
jmp
clc
rcl
andl
mov
mov
push
ret
mov
data16
mov
inc
pop
sbb
icebp
sbb
repz
inc
dec
movsb
ret
lods
mov
addr16
push
jle
pushf
and
pop
iret
sub
dec
leave
xchg
jo
stos
cmpl
int
jp
dec
sbbb
inc
in
mov
ss
inc
mov
sbb
arpl
jecxz
mov
mov
lds
dec
inc
aas
out
stc
adc
mov
std
daa
dec
inc
xor
jae
je
mov
and
stc
xor
push
adc
in
js
xchg
daa
dec
or
addb
jnp
sbb
into
dec
les
pop
lea
jns
lds
push
lahf
push
adc
call
das
out
lret
pop
xchg
pop
dec
pop
sbb
sbb
iret
xor
not
loope
insl
or
xchg
imul
dec
fsincos
ret
mov
jecxz
pushf
arpl
inc
dec
fmulp
mov
fisubrl
pop
sbbl
sbbb
pushf
mov
fwait
push
pop
jae
push
insl
dec
out
mov
jb
test
fldenv
dec
adcb
mov
cmp
dec
mov
pop
shll
dec
ljmp
add
dec
movsl
mov
aad
xchg
lcall
adc
cltd
pop
mov
andb
lods
cmc
dec
dec
push
mov
cmovle
loop
push
mov
or
test
adc
jbe
sub
mov
or
dec
jle
inc
scas
inc
test
add
add
cmp
sbb
repnz
ja
dec
mov
ds
mov
add
in
decb
arpl
sbbb
fimull
push
mov
rolb
dec
pop
ret
test
cmpsl
testb
fcompl
mov
pop
sbb
test
stos
int
ret
dec
subl
loope
push
std
stc
sub
dec
or
cmp
xor
cs
pop
fimull
push
mov
inc
jne
pop
fbstp
mov
xlat
mov
push
mov
test
xorl
push
leave
xchg
aas
jp
add
sub
xchg
mov
or
jb
lcall
popa
push
dec
fs
sub
xor
cs
and
pop
testl
pop
push
fidivl
sbbl
or
jmp
rcrl
jo
neg
mov
add
xchg
fldcw
add
sti
xchg
loopne
xor
imul
sbb
jge
add
jbe
inc
pop
xchg
sbb
aas
dec
je
push
lods
push
xchg
mov
push
push
or
push
inc
loope
fisttpl
pop
jnp
mov
jo
push
jne
scas
pop
inc
test
xchg
mov
sub
repnz
jns
dec
xchg
outsl
dec
fistl
pop
dec
loop
cmp
divl
lcall
push
ljmp
add
out
xlat
adc
add
dec
xchg
mov
and
cmp
dec
orb
filds
xchg
hlt
test
xchg
dec
mov
add
lahf
dec
mov
lcall
dec
jb
ret
jge
add
shrb
dec
pusha
push
insb
push
lods
cmp
push
pop
push
push
ja
in
xchg
test
pop
mov
pusha
sarl
cmp
sarl
dec
cltd
mov
fs
xchg
cmp
and
jne
aas
jp
jo
das
sbb
mov
xor
push
or
ds
inc
jo
test
cmp
xchg
dec
outsl
out
fs
dec
pop
push
xor
dec
in
sub
dec
jge
push
call
fistl
inc
dec
pop
sbb
mov
aad
daa
dec
add
mov
out
test
dec
nop
push
lock
hlt
xor
gs
repz
pusha
pop
xchg
lahf
mov
dec
les
imul
call
or
sbb
movsb
dec
mov
cmp
pop
iret
push
data16
mov
adc
or
jne
test
mov
push
jl
mov
push
test
jns
add
rcll
jnp
js
outsb
std
cmp
cmpsl
inc
rcrl
lods
dec
shll
sbb
xor
mov
push
xor
lcall
sub
push
sub
sahf
lock
or
das
test
mov
or
jp
scas
or
in
push
loopne
push
inc
xor
fsts
int
lahf
mov
dec
daa
xchg
jo
mov
into
inc
xchg
inc
xchg
shrb
push
cli
gs
jg
outsl
rclb
jl
or
push
into
xlat
stc
into
aam
repz
pusha
aas
inc
push
out
xor
mov
leave
jge
sub
jmp
inc
inc
cmp
fstpt
hlt
mov
ret
test
rcll
les
jmp
scas
adc
inc
dec
mov
loopne
jae
dec
push
mov
cmp
aad
or
pop
or
mov
xchg
add
test
popl
bts
mov
es
pop
ss
push
cs
or
dec
mov
rcl
outsb
sbb
outsl
ja
ret
sub
push
push
xor
sub
rorl
mov
dec
sti
movb
push
dec
fwait
add
fdiv
sub
dec
push
cwtl
mov
jns,pn
pop
lock
rcrl
mov
fs
in
push
push
pop
dec
nop
sbb
aaa
dec
sub
fdivrs
push
aas
dec
pop
je
adc
mov
outsl
xchg
shl
push
sub
jecxz
inc
in
test
aad
popf
add
les
dec
cwtl
insl
add
shll
fucomp
hlt
push
adc
cmp
je
xor
sahf
fisubs
inc
dec
jecxz
movsb
xor
cmp
push
xchg
fs
aam
outsb
mov
outsl
dec
aaa
movsl
jle
or
push
adc
iret
dec
mov
mull
push
fnstsw
sarl
pop
stos
xchg
cmc
shrd
pop
push
jl
ss
and
push
mov
cli
inc
pop
data16
xchg
in
pop
mov
int3
jmp
dec
stos
cltd
ljmp
push
popf
push
mov
fs
ss
stos
xor
ret
push
cmp
push
test
ret
sub
and
sbb
cmp
mov
add
pop
dec
daa
adc
or
cmp
add
and
popa
int
jne
or
testl
push
pusha
aaa
cmp
cmp
xchg
outsl
cmp
adc
std
jg
inc
lahf
and
dec
mov
into
jl
adc
jnp
arpl
js
mov
dec
int3
jg
in
gs
mov
das
mov
loop
pushf
sub
mov
mull
dec
and
ret
sbb
popa
stos
in
insl
cmp
dec
cmp
out
lret
call
jne
or
pop
imul
gs
and
mov
ja
aam
lret
ss
push
stos
mov
cli
lock
hlt
jg
sbb
je
cmp
ljmp
cmpsb
fcmovne
addr16
int3
push
idivb
out
push
push
cmp
or
cmp
jle
pop
push
imul
jmp
popf
mov
out
shrl
adc
jle
fdivr
pop
sbb
mov
stc
lcall
push
bnd
pushf
push
dec
pop
stc
rcll
cmp
lods
adc
mov
jmp
sbb
fisttps
dec
data16
jno
dec
imul
cltd
dec
addr16
js
lea
dec
cmp
cmp
push
jecxz
cmp
mov
loopne,pt
xor
cmp
stc
sti
adc
dec
cmp
xor
cmp
loope
fisubs
int
jg
loopne
inc
out
repz
insl
push
push
mov
shlb
js
inc
into
jmp
xchg
pusha
pop
dec
cmp
and
fidivrs
loopne
push
dec
repnz
lock
inc
int3
or
pop
add
cld
xchg
cmp
cmp
dec
mov
pop
loope
call
adc
cmpsb
mov
pop
push
adc
leave
push
sbb
push
call
dec
cld
cmp
stc
jmp
xor
and
repz
sub
dec
jo
sbb
data16
dec
or
insl
adc
jle
dec
cmp
stos
mov
outsl
push
xor
adc
cmpsl
push
cwtl
out
outsb
leave
dec
insl
add
int3
movb
push
pushl
rclb
xchg
xchg
iret
stos
sub
mov
xor
or
or
ret
inc
sub
xor
adc
pop
push
inc
and
pop
push
inc
into
into
pop
push
mov
insl
das
cmc
push
sub
fisubrs
movsb
dec
push
lcall
jns
dec
and
add
jg
mov
cli
fnstcw
lret
inc
pusha
adc
mov
jle
cmp
mov
dec
scas
incb
dec
int
dec
pop
jecxz
add
dec
jae
lahf
push
lret
pop
mov
and
dec
mov
inc
push
inc
lahf
repz
sub
dec
inc
rcr
ficomps
sub
out
in
cmp
shrl
mov
out
push
inc
outsb
imul
xor
mov
sbb
mov
mov
inc
mov
outsl
jl
push
mov
add
ret
pushf
mov
mov
or
pop
dec
sub
push
dec
push
into
or
mov
cld
xor
add
dec
stos
adc
fstpl
mov
movzbl
repz
push
adc
xchg
pop
test
mov
mov
data16
ret
js
push
xchg
dec
inc
dec
sbb
aad
push
mov
cmp
push
add
mov
fimull
or
fcomps
cltd
insl
lock
lods
iret
pop
cmc
dec
lds
or
dec
mov
pop
or
rcll
cmp
dec
bnd
cmp
in
out
pop
cli
dec
cmp
or
push
arpl
dec
cs
aaa
dec
shlb
je
inc
aad
sbb
dec
mov
adc
in
sbb
fs
dec
out
mov
pop
adc
sarb
cmpsl
jg
push
jnp
scas
popa
std
cmc
inc
daa
dec
lock
and
push
les
pop
cld
dec
imul
int
push
fisubl
xchg
insl
das
sarl
jecxz
push
and
xchg
aas
clc
push
cltd
fiadds
lahf
clc
xor
das
sub
pop
jg
loop
lods
cmp
mov
insb
mov
adc
outsl
xor
ret
arpl
cmc
test
bound
in
mov
std
fs
les
in
mov
int3
cmp
pop
or
popa
mov
test
mov
and
stc
xlat
cmpsb
xchg
adc
leave
mov
sbb
or
fs
pop
pop
jle
repz
pop
dec
inc
in
adc
xlat
leave
lahf
repz
dec
sbb
lcall
fcomip
jmp
sub
mov
add
adc
es
mov
dec
mov
xor
dec
stos
sub
cmp
cmc
stos
ja
dec
push
repz
aaa
jns
scas
mov
or
xlat
rcll
adc
dec
cmpsb
fcoms
jno
loope
addb
xor
dec
shrb
cwtl
jle
hlt
or
dec
icebp
push
fucom
mov
pop
and
sahf
dec
fwait
js
push
cs
data16
dec
mov
insb
inc
rorb
in
push
pop
xchg
fidivrl
push
call
sbb
fcoms
outsl
add
mov
sub
enter
add
jno
testb
or
jb
push
or
arpl
xor
inc
loopne
repnz
mov
inc
xchg
pop
mov
scas
in
adc
pop
lret
inc
inc
jecxz
push
cmp
scas
push
or
call
inc
sbb
loope
inc
mov
adc
push
jns
dec
out
lock
xor
jne
xor
xor
outsl
sub
fildl
movsl
dec
mov
mov
jecxz
andl
dec
lods
jnp
sbb
jb
or
and
idivl
mov
leave
daa
repnz
xchg
cmpsb
xor
lds
into
lret
xchg
ret
scas
fisttpl
adc
mov
fnsave
repnz
pop
xchg
inc
cli
sbb
xlat
fistpl
dec
cmp
jae
xor
push
and
mov
jnp
push
push
orb
cld
dec
or
mov
xlat
mov
dec
lcall
into
into
das
aas
fidivrs
js
fs
data16
mov
pop
mov
add
popf
in
ds
and
dec
cld
and
testb
pop
sbb
xchg
fisttpl
scas
mov
imul
cmc
in
push
dec
mov
dec
jo
test
dec
add
mov
dec
push
cmc
sub
pushf
mov
dec
test
fs
adc
lcall
cmpsb
dec
or
enter
inc
loop
inc
test
icebp
cmp
add
sbbl
adc
ret
mov
daa
xchg
sbb
dec
and
mov
out
mov
rorb
dec
into
mov
pop
xchg
out
cmp
aam
adc
cli
mov
pop
imul
or
aas
jp
sub
out
data16
pop
clc
mov
bound
xor
dec
cmc
xor
jno
pop
gs
inc
or
fisttpl
inc
stos
jle
in
mov
fs
int
into
sbb
inc
js
imul
cmc
xchg
test
xchg
movsl
mov
pop
movsb
stos
enter
fs
adc
sbb
movsl
jp
fwait
stos
adc
pop
pop
leave
shrl
push
push
push
add
iret
mov
dec
insb
nop
adc
jle
sbb
adc
daa
xor
icebp
out
das
ss
adc
mov
into
test
adc
mov
sbb
enter
das
fwait
mov
push
sbb
mov
dec
dec
xchg
push
out
dec
dec
sub
adc
lcall
dec
push
dec
jle
add
push
pusha
jo
jecxz
mov
cld
mov
mov
sahf
int
pop
cmp
sbb
sub
bound
jl
push
cmp
push
cli
int
xor
lret
and
hlt
xchg
adc
cmp
xor
xlat
sti
daa
mov
xor
out
es
in
mov
mov
dec
mov
jl
fsubs
mov
out
test
pop
stc
lahf
push
push
lock
inc
add
xchg
sbb
loop
mov
or
pop
sub
ficoms
fnstcw
cltd
dec
inc
pop
dec
shrb
sub
pusha
test
mov
xchg
mov
xor
loopne
or
cs
xchg
mov
dec
out
arpl
inc
xchg
movsl
ret
cmp
cmp
mov
xchg
lods
jne
dec
mov
fdivl
push
lret
add
movl
or
lret
popf
add
mov
imul
mov
push
out
ds
sbb
popl
jl
push
ficoml
jg
in
outsb
or
jno
mov
sub
repnz
mov
cli
push
dec
inc
inc
and
jl
mov
cmpsl
sub
dec
mov
dec
stos
or
in
add
mov
or
jle
dec
mov
mov
lret
dec
xchg
repz
dec
lods
pop
inc
adc
add
in
add
popf
ret
loope
into
jno
xor
rclb
jecxz
hlt
iret
mov
sub
jp
jo
repz
outsb
sbb
roll
int3
push
dec
adc
xchg
jp
dec
imul
dec
les
mov
jb
cmp
fwait
test
loopne
pushf
dec
add
mov
inc
in
jmp
bound
adc
dec
or
ljmp
fidivrs
push
mov
sbb
dec
mov
push
and
xchg
mov
in
aas
dec
cld
mull
movsl
or
fucomi
dec
cmpsl
hlt
mov
lds
fscale
pop
mov
dec
dec
dec
add
xchg
sub
pop
dec
lret
mov
dec
sbb
mov
sub
mov
dec
out
in
dec
rolb
xchg
es
cli
mov
ds
leave
rorl
or
jg
sub
inc
subb
sbb
dec
xor
push
jbe
add
movsl
xchg
lods
enter
das
mov
add
jle
bound
add
into
jg
jmp
fnstcw
mov
push
or
aad
jno
dec
mov
mov
icebp
dec
adc
addl
add
outsb
cmp
aaa
fbld
xor
js
inc
sub
insb
sahf
push
dec
clc
xlat
mov
into
mov
inc
sub
xor
imul
out
shrl
xchg
in
and
adc
dec
cli
mov
push
mov
and
sbb
lods
ret
xor
shrl
je
mov
push
ljmp
dec
addl
shlb
adc
mov
xor
shl
popa
xor
push
xchg
adc
stc
mov
dec
fadd
test
dec
in
add
dec
xorl
movsl
dec
pusha
sub
sub
add
dec
dec
es
mov
rorl
sbb
pusha
xchg
stc
out
fisttpll
repz
jle
dec
sub
jge
fildll
mov
mov
jno
xchg
andb
shrl
push
mov
xchg
roll
decl
dec
and
rorb
push
outsb
mov
pop
imul
out
imul
pop
mov
mov
cmp
rol
sti
ljmp
subb
jnp
sub
lods
cli
scas
push
cmp
pop
sub
jl
adc
mov
pop
pop
lahf
cwtl
pop
dec
push
mov
xchg
rclb
dec
aas
mov
dec
pop
xchg
mov
xchg
jl
xor
insb
jmp
mov
dec
jb
inc
sbb
es
test
inc
sbb
dec
inc
aas
into
mov
sahf
or
ds
out
das
cmp
dec
adc
std
mull
fisttps
mov
dec
shr
int3
arpl
cwtl
into
push
cld
daa
push
cmp
addr16
out
test
ret
dec
lret
mov
dec
clts
sbb
or
adc
xchg
mov
mov
mov
nop
mov
fsts
jle
mov
dec
lret
mov
in
and
push
or
and
test
cmp
idiv
add
pop
cmp
iret
adc
dec
jmp
shr
inc
dec
inc
or
lret
jnp
enter
mul
lcall
push
jb
push
mov
inc
mov
or
gs
jnp
in
inc
adc
sub
loope
push
dec
sbb
add
push
dec
jns
das
ljmp
es
sub
enter
js
imul
or
lret
outsl
je
jo
gs
mov
or
aam
ffree
dec
mov
xchg
in
dec
and
leave
mov
xchg
pop
xchg
pop
or
dec
outsl
rcrb
dec
mov
jb
push
imul
or
sub
test
sub
aad
jge
loopne
inc
out
lock
dec
xchg
into
xor
in
jns
int3
imul
fwait
adc
dec
dec
push
lret
mov
mov
and
mov
xor
mov
mov
andl
inc
arpl
and
xor
pop
loopne
mov
scas
scas
popf
cmp
dec
push
or
add
jg
repz
mov
fimull
pusha
sub
stos
test
stc
in
dec
in
inc
jg
sub
jl
xchg
adc
add
dec
jbe
pop
jg
xchg
add
testb
fiaddl
dec
dec
sbb
bound
out
psadbw
add
aad
daa
data16
aaa
xchg
pop
in
ja
add
stos
fs
aas
mov
push
mov
rolb
cs
dec
sub
aaa
push
pop
out
cmp
out
xlat
subb
loop
dec
mov
iret
push
int3
inc
fcoms
dec
jo
out
push
fldt
dec
rcl
maxps
mov
dec
nop
pop
ret
sbbl
sub
xchg
stc
aaa
out
dec
mov
inc
cmp
dec
std
sahf
mov
inc
dec
jecxz
incb
sbb
das
xor
push
pop
mov
xor
pop
call
sub
adc
icebp
xlat
mov
test
nop
addr16
ds
pop
dec
xchg
push
adc
or
pop
dec
mov
mov
and
icebp
xchg
pop
adc
dec
testl
out
dec
mov
mov
mov
dec
leave
bound
stos
cmpsl
dec
pop
sbb
insb
vmread
arpl
push
fdivrl
lds
stos
mov
fcmovnb
aam
fldl
xor
push
dec
jle
ljmp
mov
and
or
loopne
and
cmp
dec
pop
out
stos
and
dec
dec
or
jl
or
jg
mov
xor
dec
mov
jge
movsbl
cmp
jg
lods
dec
ljmp
lea
push
pop
into
adc
daa
sbb
imul
lret
push
jmp
mov
and
jl
xor
jge
ror
adc
in
cltd
dec
or
mov
int
push
fstpt
dec
sbb
rorl
dec
pop
aas
cwtl
das
xor
xor
and
cli
cmpsb
loope
dec
mov
inc
mov
dec
xchg
pop
test
dec
popf
cmp
adc
pushf
dec
lcall
dec
call
mov
dec
jg
jmp
fsubrs
cmp
movsl
xlat
out
and
mov
sbb
sbb
lock
stos
sbb
inc
sub
cld
and
leave
lods
stos
into
cmp
pop
pop
xor
mov
icebp
orl
jl
mov
dec
enter
adc
push
push
dec
test
dec
sbb
aam
add
cli
xchg
cmp
dec
mov
mov
add
aam
in
jmp
pop
mov
xor
inc
into
adc
call
sub
pop
push
ficoms
loope
orb
and
gs
mov
lret
inc
dec
pop
pop
call
sub
pop
into
push
cmp
es
nop
popa
sbb
fidivs
jbe
fsubrs
push
mov
push
or
xchg
or
jle
lcall
and
gs
adc
xor
adc
data16
push
mov
or
test
int
mov
push
mov
movl
jne
aam
jmp
mov
cmpsb
push
xchg
scas
pushf
pusha
cmp
sti
xor
gs
mov
das
cs
ljmp
and
in
add
nop
and
mov
rolb
stc
dec
outsl
lcall
adc
loope
adc
dec
cmp
sbb
xor
pop
jl
ss
cmpsl
jb
mov
pcmpeqd
sti
movsl
out
js
mov
int
add
aad
idivb
repz
and
clc
popl
out
push
les
xor
sub
jmp
xchg
push
xor
push
out
addr16
xchg
xor
in
sti
push
and
in
hlt
lret
add
xchg
std
fidivrl
mov
clc
enter
mov
rcll
or
dec
sub
gs
pop
mov
mov
das
outsb
outsb
cmp
pusha
aaa
mov
dec
ret
lcall
xor
push
inc
mov
adc
dec
jecxz
pop
sbb
pop
fwait
cmp
pop
mov
jp
push
shrb
push
push
fisttpl
ss
imulb
inc
jmp
lods
cwtl
adc
lock
fsubrl
popa
fimuls
cs
ret
mov
loope
leave
popa
rcr
xor
iret
aam
sbb
aad
dec
jo
xchg
out
inc
scas
push
fidivs
iret
fmuls
xor
int
push
test
fldl
dec
ds
and
orl
add
xor
cmc
add
arpl
dec
pusha
xchg
sub
sbb
gs
push
loope
and
dec
mov
call
xchg
fdivl
jnp
dec
mov
adc
mov
sbb
cmpsb
std
pop
pop
out
push
dec
push
in
lret
rolb
cmp
lock
dec
decb
dec
movsl
shr
xor
andb
pavgb
stc
dec
enter
lods
push
add
dec
xchg
mov
aas
dec
mov
jnp
pop
fists
pop
push
and
ljmp
dec
je
iret
push
loopne
add
bound
out
add
sub
dec
push
pop
mov
cmp
out
inc
push
repz
jbe
mov
pop
pop
or
cmp
sarb
pop
test
mov
mov
adc
sbbb
pop
les
or
roll
jl
data16
gs
fnsave
in
scas
sbb
iret
xchg
dec
pusha
adc
dec
cmp
fsubs
xchg
std
into
dec
repz
cmp
pusha
push
out
lds
aam
fstps
push
incb
adc
sbb
das
daa
sub
or
jp
or
dec
in
jle
stos
jb
inc
popa
into
lods
dec
lret
icebp
and
enter
aam
dec
add
mov
scas
adc
int3
stos
fwait
sbb
jb
xor
ljmp
dec
lods
cmp
adc
dec
stos
fisttpll
int3
and
js
stos
lcall
stc
adc
iret
popf
mov
fcmovbe
dec
mov
stos
stc
cmp
andb
insl
js
into
dec
outsb
fbstp
movsb
dec
popa
or
cmp
pop
push
mov
dec
in
dec
rcrb
pop
mov
out
fs
dec
xor
sti
xchg
test
stc
dec
cmp
xchg
ret
pushf
imul
mov
xchg
imulb
ja
lret
jmp
dec
mov
inc
aas
imul
or
jmp
cmpsl
pop
outsb
dec
cli
add
shll
cld
sti
dec
xchg
sbb
or
xchg
mov
test
xchg
outsb
dec
stc
addr16
mov
call
dec
cmpsb
arpl
in
push
add
fsin
dec
add
or
stos
or
cltd
mov
push
rorl
inc
pop
adc
sub
mov
inc
insl
mov
push
xor
imul
jae
das
iret
lret
ja
mov
cmp
xchg
mov
or
xchg
scas
mov
jl
shlb
sub
aaa
mov
sbb
iret
push
fisttpl
jle
pusha
mov
lahf
stos
out
ret
dec
sbb
rcrl
testl
dec
adc
subl
push
sbb
add
xchg
pop
stos
dec
ret
push
lods
cld
xchg
sbb
test
cmp
std
adc
adc
ret
cmp
inc
mov
inc
movsl
into
rcrl
arpl
jo
dec
push
jno
sbb
or
pop
xorb
ret
mulb
mov
imul
dec
jbe
xchg
out
pop
jo
jmp
clc
in
popf
dec
aad
sub
insl
sbb
sub
test
xor
std
mov
jp
aaa
gs
mov
stc
movsb
ljmp
scas
frndint
into
push
push
aas
dec
sub
xchg
test
jno
loopne
ror
push
pop
iret
dec
sub
lock
sbb
jo
cmp
orl
push
mov
sbb
js
lea
jp
dec
dec
xchg
hlt
adc
out
insl
xchg
dec
mov
push
aam
nop
mov
ss
mov
aad
cmp
sarb
cmp
out
adc
xchg
adc
scas
sbb
lcall
jp
out
xor
and
cmp
push
filds
dec
add
in
dec
xchg
sub
mov
pop
pop
cmp
dec
and
bound
fstpl
jge
je
icebp
sbb
movsl
xor
inc
popf
stos
mov
mov
dec
jg
ret
mov
das
inc
lahf
scas
sub
ja
aad
fdivrl
cld
dec
sub
outsl
mov
lea
push
xchg
push
push
roll
push
pusha
xchg
cmpsl
dec
adc
xor
cmp
mov
repnz
jne
mov
sbb
mov
sar
test
cs
fsts
dec
test
xchg
or
dec
push
notb
dec
inc
push
cmp
mov
xor
test
je
fcomps
push
dec
fs
aad
mov
fimull
stos
push
adc
nop
mov
pop
and
sbb
xchg
cli
iret
fistl
xchg
add
lods
out
xorl
stos
dec
mov
mov
sub
fldcw
add
sbb
into
pop
insl
dec
cmp
outsb
pop
fwait
push
xlat
mov
dec
fidivrl
cmpsl
dec
rcll
dec
andb
inc
dec
imul
scas
dec
pop
enter
jbe
sub
mov
imul
push
mov
aam
scas
mov
cmp
js
bound
dec
dec
int
fs
or
ret
popf
inc
dec
pop
mov
jmp
or
jl
xor
xchg
xor
and
lods
mov
inc
aam
cmp
test
xor
xchg
out
sahf
xchg
xchg
pop
adcb
daa
mov
data16
sarb
cmp
addr16
mov
pop
cmpsl
loopne
push
mov
ds
push
nop
stos
jb
pop
mov
and
push
clc
mov
jmp
inc
mov
ds
fdivl
jle
out
cltd
aam
loopne
lret
and
fs
inc
jo
cwtl
stos
pop
in
pop
push
mull
or
jle
inc
pop
or
push
mov
lahf
dec
and
adc
mov
jno
jl
jne
in
pop
test
dec
bound
loop
xchg
nop
dec
jecxz
and
xor
mov
sub
jp
dec
mov
repnz
xor
clc
or
mov
inc
mov
and
push
push
test
mov
cmp
int
xchg
xor
jns
sbb
test
push
mov
leave
std
inc
jmp
mov
xchg
mov
adc
inc
jmp
and
dec
push
jno
cmc
dec
mov
ja
out
pop
push
xchg
sbb
dec
push
adc
and
inc
inc
dec
push
stc
inc
dec
cld
int3
dec
xlat
in
call
dec
or
sti
pop
push
and
xchg
inc
mov
fucom
xorb
es
iret
inc
and
jecxz
xchg
adc
xchg
leave
or
xacquire
icebp
les
pop
or
add
leave
insl
sbb
aam
mov
out
clc
mov
rorb
aad
test
rorl
mov
add
fisubrl
inc
dec
addr16
jl
xchg
dec
int
fwait
cltd
call
xchg
sbb
out
inc
push
jmp
and
push
cli
cs
scas
daa
dec
aas
ljmp
jbe
shrl
mov
rolb
mov
xchg
in
mov
scas
into
lock
add
push
inc
dec
enter
test
insb
jle
fimull
scas
fwait
push
cld
shl
add
or
dec
loope
sub
sub
aaa
mov
mov
xchg
mov
push
imul
xor
dec
das
xchg
xchg
jmp
aam
add
pop
std
shll
push
aam
mov
lret
mov
pop
jno
jl
xor
pop
leave
push
cmpsl
mov
out
cld
push
xchg
ret
cmp
dec
push
adc
add
dec
fsubr
mov
lea
rorl
xor
dec
and
ljmp
lret
scas
and
mov
fdivs
ret
pop
rcr
adc
or
pop
dec
sbb
and
je
or
pop
test
mov
xor
add
dec
xchg
and
add
lret
xlat
lcall
movsl
dec
arpl
pop
adc
xchg
outsb
into
mov
inc
out
fildl
dec
lret
mov
lcall
push
dec
js
or
sti
push
pop
jmp
pop
cmp
rorl
pop
add
mov
ret
or
dec
stc
inc
mov
add
lea
jmp
xchg
dec
loope
int3
sbb
leave
mov
dec
pop
and
orb
out
dec
pop
adc
fldenv
dec
aad
ficoms
push
repnz
push
in
je
scas
mov
dec
into
lret
iret
mov
test
jg
xor
cmp
pushf
xchg
jns
xchg
adc
push
repnz
sbb
dec
jns
sub
pop
or
mov
loopne
enter
adc
nop
into
dec
sahf
xor
imul
clc
repz
dec
repnz
jl
lahf
jmp
dec
mov
stc
cwtl
sub
cmc
lcall
pop
out
dec
sbb
xor
dec
out
sbbb
gs
enter
in
rolb
dec
int3
and
test
dec
sbb
mov
push
arpl
pop
test
into
add
shrl
inc
xchg
xchg
sbb
int3
and
sar
inc
rorl
add
xor
insl
dec
jl
and
dec
dec
inc
sbb
sub
or
in
iret
lahf
outsl
add
xlat
sub
inc
cwtl
xor
pop
or
mov
sbb
dec
jnp
stc
jne
xor
fmul
enter
sbb
mov
sub
dec
aam
arpl
out
push
cld
push
mov
dec
je
sub
xchg
dec
sbbb
rorl
in
pop
ret
jne
dec
jns
xor
shlb
sbb
mov
or
inc
xchg
jl
cs
in
jle
xor
xor
dec
jno
jmp
sahf
and
aaa
movsb
in
inc
adc
sbb
sbb
scas
cmp
dec
xchg
lahf
mov
pusha
cmpb
ljmp
push
out
xor
push
dec
gs
movsl
jne
sbb
mov
outsb
jb
mov
add
cmp
push
test
scas
dec
dec
mov
push
sahf
or
test
loope
mov
aam
fsubs
add
pop
shl
mov
jecxz
ljmp
dec
imul
cmp
mov
jp
rcrl
aas
mov
mov
popa
pop
and
xrelease
and
aas
out
pop
jbe
pop
dec
add
pushf
sti
ds
push
or
inc
scas
jbe
xchg
xchg
sub
inc
xor
jge
and
push
push
adc
scas
aas
dec
mov
iret
icebp
xor
call
and
push
push
dec
inc
jp
xchg
out
dec
cmp
mov
jo
data16
mov
adc
xor
add
sbb
dec
aaa
sub
addr16
push
inc
clc
sub
test
xor
push
lock
iret
dec
jg
stos
pop
xchg
adc
jne
jmp
add
rcl
mov
rorl
or
adc
ds
mov
xchg
fmull
push
jle
push
and
repz
mov
in
mov
mov
fisttps
jno
mov
mov
and
out
sbb
dec
mov
add
sbb
push
insb
fimuls
dec
adc
push
add
stc
aaa
out
mov
or
mov
loopne
int3
negb
xchg
jne
popa
sbb
aad
in
jo
inc
mov
or
inc
into
gs
in
and
xchg
mov
and
xlat
mov
push
call
jl
push
out
pop
lret
mov
pushf
cmpsb
in
jp
adc
fidivrl
push
cld
jo
xchg
pop
or
sub
fnstsw
into
test
xor
jg
shlb
pop
mov
sub
mov
fcompl
ds
aas
iret
jns
adc
and
add
stos
jl
push
cmp
add
out
inc
dec
push
push
dec
adc
in
sbb
rcl
iret
add
jle
test
push
adc
inc
jg
ja
ds
aam
mov
inc
jle
cmpsl
jbe
enter
sbb
xlat
icebp
mov
push
nop
scas
pop
pop
cmp
pusha
lds
or
dec
jp
mov
repz
jno
and
sbb
scas
dec
xor
ja
xlat
and
mov
test
scas
mov
out
jb
out
push
jmp
add
dec
fidivrs
mov
and
iret
ror
bound
xchg
lcall
xchg
jae
jno
dec
pop
outsl
mov
movsl
prefetchwt1
mov
iret
jle
les
shl
push
sbb
mov
push
iret
xchg
jne
add
movsb
jle
mov
inc
pop
cmpsl
jle
fmul
or
icebp
stos
icebp
jl
xchg
popa
dec
push
aam
outsl
rolb
inc
cmp
pop
cs
xchg
lret
sub
cmp
scas
push
xor
pusha
sbb
xlat
mov
xor
push
push
cld
popa
and
push
cmp
cmp
out
pusha
into
loope
jg
adc
mov
add
fsubs
inc
rcrb
std
in
stos
jnp
fs
popf
ds
adc
inc
jl
inc
push
iret
std
cmp
or
pop
pop
lods
popa
rcrb
cmpsb
lret
push
bound
push
fbld
pop
cmp
inc
inc
or
or
divl
outsb
or
dec
cmp
cmp
fists
xor
adc
dec
adc
fldcw
jnp
dec
mov
test
cltd
dec
popa
cld
iret
xchg
dec
sbbl
xchg
jnp
scas
dec
push
fidivrs
xchg
mov
push
testl
outsb
mov
fdivr
mov
adc
test
popf
dec
outsb
popa
lea
in
lahf
jl
loop
dec
jnp
daa
lock
cmpsb
mov
cmp
and
bound
push
lahf
inc
xor
mov
jns
rorl
dec
sub
insl
push
cmp
addr16
fwait
movb
sbb
pop
or
push
inc
push
mov
xchg
mov
das
pusha
nop
scas
scas
mov
inc
mov
popa
or
cltd
inc
out
pop
dec
fs
flds
dec
iret
pop
cmpsb
mov
dec
mov
popl
dec
push
lods
insl
mov
cmp
cmp
mov
mov
fneni(8087
or
testb
cltd
cmp
rorb
or
cmp
call
into
xor
decb
adc
cs
repz
es
pop
lds
adc
push
mov
dec
dec
jbe
loop
cli
aam
dec
imul
daa
xchg
jae
out
out
jnp
jno
dec
leave
mov
dec
push
sbb
lods
dec
xlat
es
shl
orl
inc
stc
xchg
dec
pop
cmpb
fmull
dec
test
mov
and
and
enter
in
xlat
ss
add
inc
mov
les
jle
cmp
outsb
movsl
mov
jmp
dec
ljmp
inc
lods
push
mov
or
aam
push
rolb
ljmp
sbbb
mov
mov
stos
sbb
daa
push
out
pop
xor
jl
movsb
clc
cvtdq2ps
mov
push
xchg
cmp
pop
testl
aas
adc
addb
rcl
lret
shrl
hlt
stos
sub
pop
mov
movsb
cmp
pusha
iret
jno
xor
shl
push
sahf
addr16
jae
xlat
add
out
pop
dec
dec
xchg
xor
leave
mov
lahf
mov
cld
mov
bnd
mov
pop
cmp
cmp
add
das
loope
cmp
in
mov
ror
pop
jle
mov
cmp
rcrl
hlt
jo
and
out
cltd
jl
cltd
dec
movsl
push
sbb
jle
pop
decb
pop
rcr
sbb
pop
iret
leave
imul
push
cmp
mov
jb
sub
jb
clc
or
lds
jo
stos
enter
iret
adc
xor
stos
out
mov
iret
in
jge
pop
dec
fs
iret
popa
jb
fsubrl
loope
lods
inc
mov
inc
clc
push
add
cmp
mov
push
das
mov
jo
mov
mov
lock
inc
sub
inc
adc
pop
cmp
pop
dec
xchg
mov
aaa
add
or
push
nop
insl
dec
mov
lret
ret
pop
rcrb
jae
sbb
push
mov
sub
sub
jecxz
sbbb
das
xor
cmp
jo
enter
lods
roll
push
jbe
push
push
dec
jno
ja
jns,pn
sub
lret
adc
leave
jne
sub
mov
push
outsl
jg
cmp
adc
cli
stos
outsl
add
xor
dec
clc
pop
pop
into
dec
xor
xchg
outsb
xchg
dec
mov
inc
push
push
jne
dec
xchg
in
push
jbe
and
iret
cld
imul
mov
lock
push
lods
lcall
cltd
sub
jle
mov
int
iret
xchg
xchg
insb
clc
repz
xor
movsl
int3
push
or
sbb
lods
sbb
fsubs
mov
leave
jg
sub
dec
and
cli
rcrl
jle
add
jno
call
pop
pop
xchg
outsb
mov
repnz
out
and
lret
stos
dec
add
cmp
lea
inc
call
arpl
fincstp
orb
int
divb
pop
mov
cmp
add
dec
jg
or
xchg
insl
add
lcall
cmp
jg
aad
adc
lock
stc
pop
sub
insl
pop
ds
out
cmp
jecxz
adc
mov
cs
stos
cli
xorb
lahf
aad
dec
dec
jns
jg,pn
cmp
pop
movl
sub
data16
cmc
pusha
out
sub
xchg
and
gs
inc
jmp
jnp
mov
dec
cs
dec
mov
xchg
jle
data16
mov
inc
inc
out
push
inc
mov
lcall
mov
mov
inc
cmpsb
sbb
js
mov
mov
lahf
stos
leave
cmp
mov
jnp
iret
or
mov
push
cmpsb
sarl
in
sbb
into
dec
cmp
xor
mov
dec
and
scas
push
jg
ja
shrl
dec
xchg
lahf
jmp
and
mov
mov
mov
stc
imul
out
mov
jns
stos
idiv
mov
hlt
arpl
dec
out
lahf
pop
xor
mov
cld
pushf
xorl
and
dec
test
cmp
sbb
dec
adc
push
sub
shrl
paddd
lods
cmp
xchg
in
mov
cmp
outsl
out
adc
imul
js
push
dec
arpl
int3
xchg
xlat
dec
call
add
dec
cld
sub
or
dec
nop
xor
jg
scas
dec
jb
xor
or
out
inc
dec
icebp
inc
ss
popa
cmpsb
dec
nop
push
add
lods
mov
cmp
bound
sbb
or
mov
push
cmpsb
mov
mov
jbe
inc
dec
push
jecxz
pop
jl
adcl
add
dec
sbb
mov
popa
and
aad
push
push
xor
arpl
jp
fstl
jnp
cmpsb
decb
je
and
test
pop
dec
jo
imul
outsb
dec
dec
loope
rcrb
push
mov
pop
inc
out
test
into
out
sbb
adc
test
js
mov
cmp
push
mov
dec
push
fwait
xchg
lcall
lret
fimull
roll
loopne
mov
cltd
rorl
pop
in
inc
push
ret
loop
into
sbb
sar
dec
cs
jmp
mov
pop
scas
imul
loopne
dec
pushf
fsubl
or
push
test
xor
sbb
hlt
imul
xor
mov
inc
push
or
dec
testb
lock
jg
push
dec
mov
adc
mov
iret
inc
or
and
xchg
pusha
mov
dec
subl
lahf
inc
jmp
push
sbb
adc
and
cmp
rcrb
bound
shl
pop
popf
lock
or
pop
pop
movsb
dec
mov
inc
push
pop
mov
xor
psrlw
fwait
add
aas
push
cli
gs
js
dec
jle
in
inc
imul
sar
jns
fstps
sbb
pop
mov
jl
or
sub
xchg
sti
pop
ljmp
push
imul
test
aas
jle
movsl
mov
adc
mov
push
inc
push
outsb
sub
add
or
mov
shr
std
xchg
push
test
push
mov
dec
in
pop
in
int3
outsb
bnd
push
loop
xchg
lea
clc
sarl
je
imul
cmp
xchg
addr16
inc
in
jle
and
or
jl
fsts
xlat
pop
jg
cmp
push
mov
jg
scas
insl
in
inc
push
scas
jmp
and
stos
and
cmp
aam
and
push
int3
inc
enter
push
ja
xor
dec
in
out
dec
insb
cmp
in
xchg
das
cmp
in
scas
roll
mov
rorl
int
lret
ljmp
push
sbb
lea
popf
fistpll
imul
push
pop
dec
pop
jne
push
jle
in
dec
push
pusha
cmp
rolb
out
dec
and
rcrl
outsb
inc
jno
test
pop
jnp
lods
pushf
cmpsl
cmp
or
adc
das
inc
jne
adc
xchg
push
movsl
mov
cld
pop
loop
dec
dec
mov
mov
mov
das
add
add
pop
aam
dec
mov
xchg
and
sub
lods
add
jg
lcall
adc
and
mov
pop
pop
out
mov
sbb
mov
dec
lock
daa
xor
enter
xchg
fisttps
mov
mov
dec
xchg
mov
and
dec
or
adc
add
shrl
ljmp
or
mov
loope
mov
sub
dec
lcall
int3
dec
lret
sub
cmp
cmp
pushf
je
out
lret
pop
push
cmp
xchg
fistl
push
inc
or
xor
inc
pop
xchg
push
mov
lcall
mov
loop
dec
pop
inc
fcmovb
cmp
aas
sarb
dec
shlb
pop
mov
jl
lock
jbe
test
jo
das
pop
cmp
sub
repnz
and
aad
sub
les
adc
into
int
cmp
cmp
jl
cld
sub
sahf
xchg
insb
mov
and
data16
fdiv
fimull
dec
mov
loop
xchg
pop
fists
lahf
inc
into
fisubrs
test
sti
test
xchg
pop
cmp
or
mov
scas
xor
and
mov
mov
dec
pop
add
fwait
add
jg
popf
mov
dec
xor
and
and
loopne
add
or
mov
adc
jb
sbb
cmp
push
arpl
jns
xor
lret
dec
mov
mov
xlat
pop
and
in
or
mov
jne
pop
push
sbb
mov
je
daa
out
orb
pop
sbb
and
mov
xchg
in
out
outsb
or
lock
add
push
jecxz
lods
or
mov
jl
rorb
je
mov
sub
pusha
test
inc
mov
ds
out
imul
pop
cli
inc
into
scas
enter
ror
out
jle
in
mov
pop
pop
mov
movsb
xchg
dec
and
and
fdecstp
adc
and
movsl
lds
dec
std
stos
cmp
lret
dec
aaa
and
clc
gs
fldenv
sbb
add
aam
or
movsl
jle
add
movsb
dec
cmp
lods
mov
add
mov
ds
jmp
lods
jb
push
iret
dec
pusha
xchg
sbb
sarb
aas
fdivrl
push
xor
ljmp
jmp
into
add
push
push
dec
jg
roll
mov
pop
sub
out
mov
jmp
cmpsb
or
jg
dec
xor
push
in
scas
or
mov
push
jns
mov
dec
xchg
jp
lcall
push
cmp
lods
inc
vmread
hlt
push
clc
out
xchg
cmpsb
loope
mov
cmpsb
xchg
outsb
movsl
test
stc
movsl
jbe
xchg
ljmp
mov
mov
pop
push
jnp
int3
imul
xor
dec
aaa
out
and
ds
test
cmp
jb
adc
and
pop
add
xor
daa
jo
dec
les
dec
arpl
fisttpll
push
sub
xchg
neg
or
inc
aas
int3
push
sub
jbe
mov
xor
mov
imul
ljmp
outsl
popa
cltd
or
and
fucomip
jge
shrb
or
cli
test
sub
les
dec
add
sbbl
dec
icebp
jp
lahf
cmp
dec
sbb
hlt
sti
sahf
data16
mov
cmp
scas
push
mov
imul
aam
jns
xor
jne
push
xchg
imul
lret
push
jbe
dec
mov
xchg
lods
pop
fwait
loopne
rolb
enter
xor
mov
hlt
mov
jbe
test
push
pushf
mov
lahf
cmp
fcom
addr16
pusha
mov
fisubrs
dec
pop
into
hlt
jno
pand
in
dec
dec
jg
insl
adc
fimull
jbe
cmp
push
dec
aaa
fists
addb
xchg
dec
popf
int3
repz
mov
sub
and
lods
aam
repz
mov
and
lods
out
leave
dec
addl
daa
psubusb
dec
push
xchg
inc
or
cmp
dec
das
jge
jnp
repz
mov
dec
out
mov
or
mov
xor
into
into
jecxz
loop
push
dec
push
mov
push
std
inc
xchg
inc
xchg
scas
pop
mov
jg
cltd
inc
mov
xor
fmul
and
pop
icebp
dec
push
push
mov
adc
sarb
cltd
mov
mov
popf
mov
sarl
sub
stc
sub
dec
jmp
xchg
cli
inc
addr16
push
nop
int3
pop
out
adc
pop
shlb
mov
jns
pop
xor
mov
dec
mov
push
sbb
lods
sbb
lds
pop
dec
xor
dec
or
andb
xor
jno
in
cmp
jle
dec
jmp
fnsave
jmp
out
mov
iret
repz
adc
add
cmpsl
add
addb
bound
enter
mov
push
int3
dec
add
push
mov
lods
outsb
in
fisubs
pop
cmp
dec
and
mov
jbe
xlat
mov
dec
sub
dec
add
cmpsb
or
xchg
stc
xor
inc
jl
dec
nop
ret
out
cmp
imul
mov
dec
adc
add
rorl
dec
mov
dec
sahf
or
adc
in
mov
sbb
xor
dec
cld
fisttpll
adc
sarl
fimuls
push
js
or
cmpsl
add
dec
adc
cld
push
pop
fcoms
aad
and
ljmp
arpl
adc
mov
add
dec
addr16
mov
pop
or
mov
dec
enter
inc
cmp
test
addr16
mov
roll
fldenv
dec
mov
int
xor
mov
test
jno
sbb
aam
fwait
pop
pop
sub
mov
cmpsl
test
sti
sbb
clc
dec
inc
jnp
push
and
mov
cmp
jb
int
jo
add
decb
cs
movsl
pushf
mov
pop
or
xchg
daa
les
xor
xchg
pop
jle
add
lret
mov
dec
lods
mov
push
inc
dec
arpl
cwtl
and
ret
sub
sbb
dec
push
add
dec
fstpl
fs
sub
xor
call
gs
fnsave
scas
into
pushf
dec
mov
mov
inc
push
cltd
inc
cld
mov
xor
pop
jle
xor
jb
fs
loope
shl
adc
cld
push
cmp
jp
add
xchg
dec
enter
push
arpl
sarb
sbb
mov
cwtl
out
cld
mov
lea
adc
cwtl
fcom
insb
popf
sub
inc
hlt
out
mov
and
xchg
and
cltd
adc
jb
pop
jnp
cmpsb
add
aas
je
lret
sbb
call
ds
cltd
lret
mov
cs
int
sar
jle
mov
and
jl
or
mov
adc
mov
aam
lcall
cmp
push
fcompl
xchg
fisubrl
and
imul
bswap
cmp
adc
stos
pop
movsb
cmp
jg
outsb
dec
bound
pop
xchg
sub
lods
jno
pop
push
out
leavew
pop
aad
dec
push
call
mov
and
xchg
mov
pop
cmp
dec
mov
inc
xchg
jb
rolb
mov
mov
xchg
xchg
jl
popf
pusha
push
cmp
inc
jae
seta
je
jmp
cmp
cmp
push
inc
mov
xor
mov
or
fidivrl
cli
dec
jae
outsl
repnz
dec
dec
inc
iret
jg,pt
lret
or
pop
pop
movsl
inc
test
push
xchg
popf
jge
add
add
shlb
cwtl
inc
adc
js
mov
dec
mov
lret
out
rorl
cwtl
cmpl
cwtl
dec
aad
mov
stos
rcr
cltd
popl
jmp
jo,pn
loope
jg
and
test
inc
xor
sub
inc
cs
xor
ss
jle
mov
pop
aam
mov
nopl
cmp
sarl
push
or
dec
loop
fsubrl
fnstsw
cmp
jmp
repnz
rcl
icebp
pushf
daa
mov
out
roll
cmp
xchg
dec
sbb
fdivl
dec
scas
xchg
xor
xchg
cmc
cmp
xlat
jmp
xchg
pop
stc
mov
sub
aaa
cmp
xlat
jl
xchg
or
push
in
or
roll
nop
pop
jns
xchg
ror
pop
xor
xchg
cmp
push
mov
loop
shlb
sbb
jp
dec
mov
push
jg
add
cmp
inc
mov
or
mov
into
fdiv
sbb
push
inc
outsl
enter
cs
shl
push
jecxz
sub
les
scas
call
xchg
mov
outsl
mov
ja
dec
lret
fisttps
outsl
sub
mov
pop
dec
popa
xchg
cmc
push
rcll
push
mov
fists
sbb
xchg
out
dec
adc
scas
dec
fcompl
pop
lret
fbld
shll
mov
push
into
and
push
dec
mulb
xchg
shrb
adc
or
into
cmp
cs
add
stos
stc
inc
aam
dec
push
mov
imul
cmpsl
push
mov
out
pop
cli
cmp
xlat
fwait
pop
mov
adc
adc
or
and
in
dec
pusha
and
in
adc
mov
clc
lods
mov
mov
lods
or
je
and
mov
dec
xlat
sahf
dec
fwait
dec
push
xor
jbe
push
loopne
mov
sbb
dec
fbld
dec
out
jne
adc
or
mov
fs
xchg
call
scas
lret
jmp
xlat
out
xchg
in
daa
dec
pusha
or
sarb
jne
pop
lahf
mov
lock
fprem1
and
aam
xchg
gs
mov
cmp
out
sub
dec
sarb
lea
clc
test
mov
adc
dec
bound
or
inc
cmp
je
outsl
and
xor
dec
and
shl
cli
dec
and
jecxz
dec
fimull
sbb
push
sbb
imul
pop
xor
out
mov
in
mov
fildl
dec
sbb
js
dec
cmp
mov
dec
jo
repz
loopne
lock
pop
test
add
or
out
mov
and
rolb
sti
pushf
movsl
cmp
loop
and
sub
cmovno
pop
sub
jp
fisubrs
or
cltd
cmp
iret
push
loope
mov
neg
repz
fdivrl
cmpsl
inc
mov
xchg
or
sbb
lahf
jl
gs
xchg
cmc
das
cmp
iret
mov
and
xchg
int3
mov
fistps
cmpsb
jl
add
mov
and
push
sbb
cmpsb
mov
dec
out
stos
jle
fs
sqrtps
aam
mov
push
adc
cmp
mov
ss
fistpl
mov
mov
push
movsl
pushf
sbb
movsb
cmp
ja
daa
in
cmp
xor
das
mov
mov
mov
cmp
pop
jo
inc
sub
cmc
aaa
mov
adc
pop
mov
sub
dec
mov
sbb
adcb
dec
jmp
in
dec
ret
xchg
push
jp
inc
or
mov
lret
jl
lret
scas
decl
jge
arpl
adc
out
dec
push
xlat
push
xchg
pusha
enter
movsl
dec
cmpb
and
push
lods
cmc
daa
out
push
jle
rcrb
push
and
and
sub
sub
iret
xchg
scas
jg
outsl
popf
imul
sbb
mov
jge
xor
aaa
xchg
es
mov
cli
aam
stos
sahf
mov
into
dec
fsub
imul
jle
dec
je
add
add
push
and
push
sbb
pop
stc
out
mov
add
cmp
popa
stos
pop
inc
push
cli
mov
and
adc
xchg
mov
mov
sub
jo
outsb
jmp
mov
lahf
inc
js
mov
add
and
mov
inc
out
int3
mov
mov
push
inc
jl
mov
jg
loope
lret
into
add
push
jg,pn
push
cmp
inc
add
mov
xor
inc
mov
push
pop
out
daa
mov
sub
icebp
inc
jmp
cmp
scas
inc
outsb
iret
jecxz
and
pop
xor
mov
ja
je
aas
jg
mov
mov
or
retw
push
push
push
iret
jg
mov
add
testl
fsubl
shl
xor
shl
addr16
mov
dec
sub
iret
insb
inc
xchg
jl
push
lock
pop
nop
scas
sub
mov
std
shrb
in
testb
xor
adc
notb
pop
pop
and
je
cmp
aas
xchg
jns
pushf
jle
jl
stc
jle
inc
addr16
mov
sbb
and
xchg
mov
imul
pop
mov
cmpsl
add
hlt
inc
push
cmp
pop
or
fs
lret
jo
test
enter
sbb
mov
out
jl
lea
aam
cld
xor
inc
pop
fimull
mov
clc
cmp
sub
jo
fwait
or
push
push
cs
cmp
dec
aam
es
add
push
idivl
shrb
lea
push
jl
sub
test
inc
pushf
imul
jle
lods
cs
mov
icebp
cmpsb
jle
cld
shll
inc
lock
shld
dec
aad
shr
in
les
pop
addl
cld
in
fdiv
scas
pop
mul
stc
int3
ret
jo
mov
push
pop
scas
or
gs
cmpsb
dec
or
rorl
jp
test
xlat
mov
pop
push
mov
jl
lods
sub
xchg
mov
inc
mov
pop
rcrb
leave
dec
adc
fs
pop
mov
dec
push
arpl
xchg
cmp
sbb
cs
rorb
roll
and
pusha
mov
fidivrl
push
adc
pushf
dec
fwait
scas
cs
dec
test
lods
call
in
nop
fstps
dec
and
pusha
lods
faddl
addr16
xchg
pop
imul
int
ljmp
xchg
fiaddl
dec
jmp
mov
rorl
loope
repnz
clc
hlt
aaa
push
pop
inc
push
and
fisubrl
add
out
test
fcomi
jno
dec
ret
fcomi
or
xlat
fimuls
lcall
pop
iret
in
jne
pushf
iret
pusha
rolb
cmc
rorl
ja
outsl
add
cmp
nop
leave
out
stc
fdivl
push
jnp
mov
test
cmpsl
mov
dec
or
mov
cmpb
fidivl
dec
bound
jne
arpl
ds
jg
sti
repnz
clc
and
cmp
fisttpll
xor
into
add
and
lock
sbb
movsb
out
jae
nop
shlb
dec
lds
mov
mov
push
stc
mov
repz
cmc
sub
sahf
leave
outsl
push
pop
aam
jnp
mov
scas
inc
pop
xor
dec
test
xsha1
cmpsb
dec
ljmp
add
pop
add
inc
int
pop
or
inc
xchg
repnz
int3
adc
roll
and
movaps
leave
std
push
imul
or
ds
mov
dec
cld
mov
decl
jg
mov
sbb
dec
dec
mov
jne
filds
bound
add
xor
dec
push
inc
pushf
je
add
jle
fnstsw
adc
fs
add
xor
iret
or
ret
dec
mov
xor
dec
inc
pop
pop
pop
push
pop
inc
dec
hlt
sahf
dec
mov
sub
data16
mov
dec
stc
xor
mov
dec
push
push
jge
es
imul
imul
and
int3
test
dec
push
cli
dec
popa
in
xchg
pushf
mov
enter
bound
imul
jne
pop
dec
dec
mov
stos
dec
ja
sub
xor
jmp
bound
mov
in
popf
push
pop
inc
lock
xchg
jg
xchg
push
mov
sub
xchg
jae
adc
jo
xor
dec
inc
sbb
sub
dec
adc
mov
push
sbb
jne
jl
mov
mov
in
inc
xchg
call
jnp
sub
dec
push
arpl
adc
push
ffree
int3
dec
or
sbb
sub
mov
fdivs
dec
sbb
fildl
sbb
cld
cmovle
push
push
mov
aaa
pop
insb
jns
xchg
add
dec
or
or
push
pop
xorl
dec
mull
mov
cmp
jl
inc
mov
jge
dec
psrad
fcmovbe
dec
imull
ljmp
sub
sti
dec
xor
fdivs
dec
mov
jp
imul
and
jmp
push
xor
notrack
dec
inc
mov
or
mov
fcmovb
push
sahf
push
sub
push
mov
lds
adc
popa
dec
inc
mov
addr16
jle
dec
fmul
jb
mov
dec
sub
push
mov
xor
push
sarl
mov
imul
pop
xchg
fsubp
and
xor
loop
cld
aad
daa
push
test
xlat
inc
adc
pop
aaa
xor
shl
pop
in
dec
repz
push
xor
dec
bound
dec
jns
mov
mov
pop
xor
mov
ret
jp
sub
stc
dec
xchg
data16
mov
xor
popf
mov
xchg
jbe
inc
cmp
and
shrb
fmuls
and
inc
jg
xchg
repnz
and
pop
insl
xor
dec
das
push
or
and
cmpl
push
inc
jg
gs
cli
or
push
int
js
bound
cmp
xchg
cltd
jle
dec
push
mov
xor
ljmp
xor
add
dec
xor
jg
sub
sub
mov
loop
inc
jle
mov
test
cld
xchg
cmc
sti
push
xchg
push
mov
jl
andl
xor
sbb
xor
cmpsl
sub
cmp
ret
push
and
lea
fidivrl
sar
xchg
es
jl
or
cmp
inc
shr
xor
dec
into
push
or
push
push
cmp
push
pushf
mov
push
dec
into
outsb
jg
cmp
push
insb
push
sbb
xlat
mov
movsb
cs
aam
repnz
popf
push
repz
fdivrl
cmpsb
xor
mov
shll
inc
jp
cmpsb
push
xchg
mov
test
add
mov
mov
stos
xchg
jb
mov
xor
xchg
es
fidivrl
xchg
xlat
loopne
dec
lods
outsl
daa
mov
cwtl
fildl
mov
xlat
daa
mov
cmp
pop
pushf
adc
pop
sub
dec
or
pusha
dec
jg
or
fistpll
aas
push
mov
movsl
iret
add
jl
filds
xor
dec
mov
in
sbb
pop
dec
fs
stc
and
clc
pusha
xchg
enter
add
in
xlat
rclb
out
pop
scas
pushf
sub
test
cmpsl
jbe
mov
cld
ret
xor
cmp
rorb
push
adc
inc
mov
mov
mov
or
arpl
push
dec
cmp
fidivrl
dec
jp
mov
sub
mov
imul
outsl
rcrb
cmc
sbb
inc
sub
dec
aam
mov
mov
mov
and
mov
push
sub
movsl
xor
inc
fxtract
pop
adc
dec
into
mov
ljmp
xchg
loop
dec
jp
call
sbb
stc
outsl
adc
imul
sti
push
fadds
xchg
movsl
into
cmp
rorb
sub
xlat
dec
test
icebp
loope
dec
pop
es
cltd
imul
daa
dec
cli
mov
roll
or
dec
ds
mov
je
dec
outsl
aam
repz
pop
movsl
xlat
or
dec
jbe
and
cmp
jle
mov
dec
gs
mov
in
scas
dec
dec
std
mov
hlt
fimull
call
inc
xchg
push
cmp
movsb
pop
fs
orl
push
mov
stos
inc
nop
jg
dec
push
icebp
jle
lahf
and
xor
xchg
jmp
imul
das
sti
xchg
dec
pop
aaa
and
out
or
xchg
jnp
mov
dec
cmp
adc
cmc
add
aaa
shrl
icebp
mov
ja
dec
dec
push
mov
shrl
dec
test
add
adc
cmp
mov
addr16
pop
dec
mov
add
rclb
out
xor
outsb
dec
int3
adc
dec
movsl
push
fiaddl
in
pop
enter
lretw
mov
inc
sub
insl
jl
pop
clts
push
inc
into
push
cmpsb
in
pusha
dec
in
xor
mov
mov
sbb
and
ljmp
rcrb
dec
imul
adc
das
jne
jl
sarb
mov
imul
popf
dec
cld
add
negb
dec
push
jp
xchg
xor
dec
dec
in
cmp
xor
jg
pop
dec
icebp
mov
outsb
push
aas
or
arpl
jnp
adc
pop
inc
jo
pop
dec
fists
cmc
push
mov
cmpsl
inc
pop
add
pop
or
iret
bound
pop
dec
cmp
push
inc
mov
push
pop
in
ljmp
and
xlat
shll
dec
into
cmpsb
pop
lods
ja
pop
dec
fistpll
bound
add
and
subl
dec
cltd
sbb
push
pop
mov
inc
popf
cmp
pusha
dec
imul
add
push
pop
xchg
leave
and
outsb
dec
cltd
mov
addr16
inc
iret
xchg
jo
iret
jp
mov
test
popa
inc
adc
xor
or
and
xchg
dec
push
in
cld
je
fisubrl
pop
lret
aad
dec
mov
in
lcall
pop
jecxz
cmp
push
xor
pushf
and
mov
mov
imul
sub
or
ljmp
mulb
es
nop
push
cmc
cmp
jo
mov
fcoml
loopne
mov
jle
lods
clc
pop
jnp
lock
adc
in
lret
popa
mov
iret
pop
push
adc
stos
cmp
aad
sarl
add
pop
dec
lret
aaa
xchg
xchg
bound
lea
mov
push
rcll
mov
pop
xor
outsl
dec
popa
xor
sbb
mov
jmp
shrl
mov
inc
jae
xor
add
and
cmpsl
pop
out
mov
or
aad
inc
dec
jge
mov
adc
xchg
dec
xlat
jle
mov
movsl
dec
lock
lods
adc
icebp
adc
lea
insl
mov
fs
sub
dec
push
mov
in
out
xlat
mov
icebp
fadd
dec
xchg
cmp
jle
shl
adc
loop
movb
cltd
and
ds
fisubrl
dec
movsl
rolb
cs
call
push
aam
mov
xor
mov
push
lret
jb
dec
dec
mov
outsb
stc
filds
cmp
and
insb
xor
sub
fsubrl
and
repnz
cmp
cs
jge
mov
jbe
sub
push
push
or
flds
int3
out
push
lods
stos
xchg
xchg
js
das
iret
mov
int
mov
in
rorb
xor
mov
adc
dec
mov
mov
dec
add
push
jbe
insb
js
sub
dec
push
movsb
jl
movsl
dec
sbb
xor
gs
int3
in
xchg
insb
pop
pop
add
stos
fwait
shr
inc
dec
jg
inc
stos
add
mov
xchg
jnp
mov
fisubs
xor
clc
bound
cmp
dec
push
test
sub
cmp
popf
jle
test
fildll
rcrb
pop
jle
cli
add
mov
sub
jp
pop
dec
jo
cmp
ret
dec
mov
mov
pusha
mov
repnz
xchg
mul
jle,pn
jg
lods
ds
sub
mov
fildl
orb
sub
inc
pop
push
int3
shl
lods
fists
enter
cmp
push
push
outsb
xchg
adc
sub
popa
dec
imul
inc
sub
iret
in
nopl
pop
into
jecxz
scas
pop
sub
in
adc
sub
insb
scas
jns
or
mov
cvtps2pd
repnz
fistpll
iret
mov
cmp
push
sbb
jb
lret
das
dec
mov
loop
lret
negl
in
dec
aas
xor
out
dec
mov
shlb
leave
inc
pop
dec
cmp
imul
addb
xchg
pusha
lods
fsubs
daa
inc
sub
inc
push
and
pop
and
pop
test
cmp
mov
popa
hlt
add
les
sbb
std
pop
test
dec
fwait
jle
fisttps
mov
fmull
pop
jle
es
xchg
call
sbb
lds
ror
daa
stos
hlt
lock
pushf
dec
mov
sbb
test
pop
jnp
movsl
int
lock
adc
push
test
imul
shr
out
dec
fs
loopne
mov
push
test
pop
jmp
ja
or
mov
into
jno
int3
inc
push
mov
mov
cld
jl
aam
loop
out
mov
push
hlt
cmp
adcl
dec
mov
adc
rorl
daa
dec
addr16
mov
dec
loope
js
xchg
dec
or
rcrl
addr16
test
jnp
repnz
xor
pushf
mov
jmp
adc
orl
sbb
mov
dec
movsl
icebp
sbb
jmp
js
push
xchg
out
sbb
sbb
pop
xchg
xor
test
dec
imul
fisttpll
mov
xlat
cmp
dec
mov
fimull
scas
gs
pushf
push
pop
pop
fwait
lahf
adc
push
mov
aas
cs
inc
pop
dec
push
pushf
dec
adc
call
das
xchg
mov
dec
pop
loopne
out
push
inc
xchg
std
mov
jne
sahf
dec
dec
jns
leave
push
mov
and
mov
dec
ss
inc
out
mov
sub
in
xchg
dec
add
jno
shlb
ljmp
dec
push
and
rcl
cmc
dec
mov
hlt
ret
dec
test
js
fnstsw
dec
adc
mov
sbb
aad
inc
aaa
test
addr16
dec
imul
jae
mov
pop
dec
shrb
push
dec
dec
cmc
push
hlt
leave
xchg
mov
dec
push
push
pop
cmpsb
xor
je
mov
dec
inc
dec
jecxz,pt
test
inc
andl
and
adc
pop
enter
pop
imul
dec
int3
pop
mov
scas
sbb
dec
push
out
mov
outsl
dec
fs
or
repnz
pusha
or
dec
pop
and
mov
call
jmp
adc
cs
aam
adc
push
dec
ror
out
mov
stc
dec
aam
dec
jp
pop
lds
add
dec
enter
pop
add
dec
lahf
dec
push
xchg
gs
decl
cmp
outsb
and
cmp
inc
sub
out
jl
cld
push
sti
mov
div
sti
rorl
cli
push
aaa
aam
sbb
jbe
inc
hlt
int3
lods
sub
jle
add
rorb
adc
dec
fnstcw
lret
movsb
mov
adc
loope
fxch
fnstsw
xor
inc
out
cmp
loop
mov
lahf
cmc
ja
push
arpl
add
repz
push
cmp
ret
dec
loopne
in
mov
ds
fstpl
rcll
mov
je
into
jmp
adc
mov
jg
sbb
das
xor
mov
sbb
data16
stc
repnz
jbe
dec
mov
lods
cmp
jmp
sbb
jle
mov
mov
xchg
mov
sbb
bound
testb
mov
push
cmp
test
inc
inc
cmc
add
pop
jb
jle
pusha
scas
add
sub
aam
arpl
ss
mov
and
jne
aam
ds
in
sahf
adc
cs
pop
scas
inc
lods
fimuls
leave
jle
jl
rcrl
je
repnz
pop
mul
mov
mov
ljmp
notl
mov
sub
cmpsb
mov
dec
cli
inc
xor
jnp
add
nop
jae
js
je
push
js
adc
aaa
xor
jle
mov
mov
mov
xchg
into
sbb
daa
les
dec
call
lret
cld
dec
popf
pop
rorl
lret
in
fnstcw
dec
and
mov
jl
cmc
imul
mov
pop
dec
data16
iret
sbb
dec
dec
inc
jg
cmp
stos
shll
xchg
jo
jmp
jge
inc
inc
shlb
mov
dec
jge
mov
out
mov
sub
jl
mov
sub
lods
push
cmp
outsb
xchg
in
jmp
cmc
imul
cli
test
cmp
jp
das
das
jl
lea
add
jg
ljmp
leave
jb
add
jge
enter
dec
jb
jle
dec
mov
push
push
add
cli
dec
ljmp
movb
sub
clc
out
xor
jnp
dec
pop
inc
cmpsl
jo
sub
addr16
dec
sbb
outsb
fnstcw
xchg
mov
scas
stos
into
pop
or
pop
dec
push
mull
aad
loope
insb
add
sub
addr16
add
or
test
cmp
cmp
adc
cmpsl
jae
sarb
xchg
pop
lret
dec
and
in
jmp
pop
adc
popa
dec
push
add
cmpsl
xchg
push
or
pop
mov
sbb
dec
mov
fcomps
mov
dec
scas
mov
sub
mov
fs
sub
or
pop
dec
add
xor
and
in
cmp
test
dec
lods
es
cmp
sahf
add
dec
xchg
xor
cmpsb
int3
lret
je
sbb
xchg
dec
push
fcompl
jno
adcb
mov
loopne
test
dec
aas
repnz
jle
cmpb
jl
jns
jl
iret
bound
mov
lret
stos
cmp
push
dec
push
sbb
xchg
je
jg
loope
pop
fistps
xlat
rcll
cmp
jge
and
dec
insb
aam
call
mov
xor
mov
fxch
nop
xchg
push
jl
test
xlat
inc
inc
add
add
xor
iret
jg
mov
xchg
sbb
cmc
insb
cmp
dec
in
mov
idivl
sub
xlat
cmp
jne
xchg
dec
sarl
pop
fstps
adc
push
jbe
pop
push
inc
add
not
sub
lea
jl
sahf
xchg
jp
ds
add
dec
and
push
fimuls
or
sub
push
nop
rcl
xchg
and
cs
cmp
fidivrl
dec
jge
stos
jnp
adc
push
add
leave
cmp
dec
sbb
outsb
dec
fidivrs
sub
int
push
arpl
sbb
ja
and
mov
rcll
xor
dec
or
cmp
xchg
out
mov
push
pop
xor
dec
call
pop
dec
imul
mov
mov
sub
out
jb
dec
icebp
jne
or
pop
dec
cs
fldt
inc
inc
push
repnz
fxch
or
dec
xchg
popf
xor
sub
cvtpi2ps
cmpsb
or
sarb
mov
jbe
cmp
cli
push
dec
fstpt
and
push
jg
pop
or
scas
enter
inc
ret
aad
mov
js
pop
dec
ss
addr16
dec
dec
xchg
rclb
mov
stos
bswap
cltd
inc
dec
mov
mov
mov
fwait
xor
adc
dec
popa
cmp
cmc
jbe
dec
jge
aaa
inc
adc
pop
insl
adc
jns
adc
into
ret
loope
mov
cwtl
pop
aam
arpl
adc
or
daa
jae
sub
cmp
sbb
test
stos
jp
cmp
subps
xor
push
psadbw
jle
pop
gs
daa
inc
mov
lret
sti
insb
jge
dec
dec
in
jno
adc
mov
add
mov
pushf
jbe
iret
xor
loopne
fimull
dec
cmp
test
push
sub
out
lret
push
push
or
pop
sti
pop
and
cmp
dec
sub
or
nop
lahf
lods
dec
jmp
add
sti
push
push
loope
pushl
dec
push
int3
jae
xor
cs
inc
push
out
dec
out
stc
loopne
in
loop
adc
and
sysexit
notb
movsl
mov
stos
push
dec
lea
sub
aas
ud1
sbb
dec
repnz
cmp
pop
jne
inc
cmpsb
adc
fs
into
or
sub
add
push
xchg
xor
push
sbb
push
arpl
clc
pop
shlb
test
jno
jp
jg
sbb
nop
jp
hlt
dec
xchg
sbb
pop
mov
sub
push
mov
inc
mov
lcall
das
sar
dec
fsubs
sahf
inc
xor
fcmovne
int3
jl
dec
dec
movsl
shlb
jge
push
dec
leave
sbb
or
mov
rolb
insl
cmp
mov
add
dec
sbb
lods
scas
aaa
lret
enterw
dec
cmp
inc
call
lea
jno
arpl
lods
in
shl
out
sub
mov
jg
mov
dec
inc
jle
insb
mov
bound
mov
push
inc
pushf
pop
add
jo
scas
nop
push
fmull
cmp
aas
inc
add
mov
xor
shll
cld
pop
pop
sbb
push
hlt
mov
rcrl
cmp
out
into
mov
inc
dec
inc
push
xchg
dec
jo
push
test
dec
loope
jecxz
scas
fmul
add
pop
xor
iret
jno
cmp
dec
push
movsb
cltd
test
add
outsb
pop
mov
push
push
dec
mov
cmpsl
test
xlat
mov
fimull
ds
pushf
jl
adc
dec
cmp
lret
fisttpl
dec
mov
lahf
data16
or
or
xor
in
out
push
repz
xor
mov
mov
mov
ja
lods
push
sub
insl
mov
xchg
test
rcll
outsb
add
and
test
dec
jno
cld
mov
lds
repz
sbb
and
cltd
scas
fldenv
cmc
mov
inc
sub
fs
fildl
sub
dec
push
ret
and
icebp
mov
mov
aas
in
add
sub
xchg
test
or
sbb
ss
sbb
xor
inc
cmpsb
stos
dec
incl
jle
int
push
dec
xchg
add
dec
mov
or
push
xchg
adc
mov
mov
jmp
dec
pusha
cmp
aaa
mov
orb
dec
jecxz
in
aas
mov
xchg
arpl
mov
mov
xchg
jae
mov
dec
sbb
test
inc
push
and
pop
into
sarb
loopne
dec
cmp
cld
push
jge
iretw
dec
fldenv
sti
dec
jo
jecxz
sbb
sahf
jg
and
dec
jno
cmc
mov
mov
cmp
iret
push
xchg
pop
fdivl
mov
lds
fldl
xor
pop
sbb
sub
cmpsl
leave
add
sbb
cs
mov
xor
out
add
dec
mov
sbb
repz
xchg
push
call
mov
adc
sub
adc
imul
mov
dec
mov
mov
mov
out
pop
cltd
inc
pop
push
mov
dec
push
cli
inc
stos
cmp
dec
mov
lret
jp
pop
push
je
lods
movsb
or
lret
sbb
in
dec
cmpsb
rorl
iret
aam
and
enter
cmp
cli
jno
test
andb
loopne
fstpl
sub
cmc
sbb
push
int3
movsl
cwtl
mov
aad
push
inc
sbb
cmp
fcompl
repz
xor
or
inc
shl
cs
lcall
lods
mov
sub
mov
sbb
pop
dec
int3
mov
popa
mov
pop
repz
xor
mov
xchg
sbb
roll
xchg
dec
and
sub
inc
test
dec
pusha
or
cmpsl
pop
imul
dec
xor
push
fsubrp
and
sub
pushf
mov
hlt
dec
sbb
pop
or
cmc
sbb
clc
arpl
je
mov
push
cmp
mov
dec
test
and
sub
push
xchg
and
out
xchg
mov
inc
dec
jl
das
popa
hlt
push
int3
inc
lcall
stc
mov
xchg
lock
sbb
es
jbe
xchg
leave
adc
jb
dec
into
push
and
outsl
mov
dec
ror
std
cmp
xor
dec
sahf
pcmpeqw
cwtl
mov
inc
nop
pop
add
cli
jp
dec
or
sub
lahf
lret
pop
fimull
mov
bound
gs
sarl
cmp
push
into
dec
loope
int
adc
adc
sbb
adc
std
inc
cmp
into
cmpsl
ljmp
jmp
stos
inc
pop
aaa
mov
pop
dec
push
pop
or
sbb
mov
iret
fbstp
hlt
pop
and
inc
pop
in
jmp
mov
mov
sub
int
cmp
mov
xchg
js
das
push
jl
and
cs
jl
xor
repnz
test
fs
in
mov
jns
lret
xor
aaa
xor
divl
movsl
stos
jmp
adc
jg
fsubp
fwait
je
dec
xor
cmp
rcrb
dec
sahf
jns
outsb
mov
push
pop
xchg
aad
mov
data16
jnp
or
push
push
sahf
call
repz
adc
mov
mov
sbb
lods
push
add
dec
dec
jns
jl
push
or
movlhps
dec
fs
or
dec
jle
add
shll
in
and
and
shlb
adc
and
dec
jb
pop
int3
sbb
lds
inc
cld
push
adc
aam
xchg
cwtl
imul
mov
out
shll
mov
dec
jg
pop
xor
or
or
mov
aaa
cli
push
jae
dec
imul
rorb
mov
mov
add
cmp
sub
push
xor
inc
mov
xchg
dec
jne
jl
dec
push
mov
sub
mov
mov
mov
sbb
jl
clc
push
lret
inc
dec
test
pushf
sbb
dec
rolb
mov
mov
mov
repnz
nop
inc
inc
lret
or
add
cmp
and
into
mov
loopne
xor
mov
pop
test
dec
int3
push
mov
das
dec
jae
push
inc
movsl
xchg
test
and
xor
push
or
lods
imul
and
inc
push
mov
dec
ret
scas
and
xor
dec
fs
push
sbb
daa
or
jecxz
lahf
sahf
add
inc
xor
dec
movsb
int
adc
jae
rorb
stc
sub
test
dec
mov
jo
fyl2xp1
xor
loope
inc
std
mov
in
add
sbb
dec
daa
mov
imul
insb
mov
mov
dec
adc
pop
aad
adc
mov
xor
iret
mov
mov
decl
sbb
arpl
repnz
adc
mov
xchg
xchg
pushf
daa
adc
dec
and
sahf
jo
scas
jmp
ds
scas
push
cltd
hlt
mov
dec
pop
lods
xchg
mov
dec
push
sarb
popa
cmc
dec
ficomps
xor
movsb
or
dec
inc
fucomp
xor
into
or
sbb
xor
sub
ja
xor
out
aaa
nopl
xchg
sbb
mov
xor
xlat
out
pop
dec
mov
push
jg
inc
out
dec
outsb
clc
test
das
dec
or
mov
daa
dec
mov
stos
imul
push
fwait
paddusw
or
dec
lea
mov
push
add
roll
or
movsb
mov
sahf
fimuls
dec
cmpsl
scas
sub
push
dec
cmpsb
xchg
mov
fdivl
sbbl
mov
aad
push
imul
sub
mov
mov
sarl
dec
add
das
pop
sbb
addl
movl
test
mov
int
xchg
xor
sub
in
xchg
bound
fldl
dec
repnz
mov
pushf
stos
sub
or
out
enter
sub
pop
inc
pushf
into
vdivps
ss
adc
aas
fwait
cmp
jb
dec
jg
js
scas
jl
and
mov
and
cwtl
sbb
daa
pop
icebp
imul
lods
or
gs
dec
inc
repnz
jmp
mov
dec
movsl
jge
aas
pop
fists
dec
mov
jg
scas
mov
adc
orl
test
mov
inc
mov
jo
dec
or
call
adc
ja
lds
and
pop
out
dec
jg
add
inc
xchg
push
jmp
dec
icebp
push
leave
or
fmulp
dec
push
stc
cmc
add
add
inc
cmp
mov
idivl
jo
imul
mov
das
mov
pop
dec
shl
loop
movsl
xchg
inc
lea
or
mov
or
inc
repz
mov
push
loop
call
jo
inc
xchg
or
dec
mov
sbb
mov
sahf
dec
jmp
cmpsb
cld
dec
ljmp
pop
xchg
fwait
mov
pop
in
pop
mov
push
loop
lcall
clc
push
dec
hlt
js
pushf
call
xchg
popl
push
adc
popa
push
loopne
idivb
lcall
add
nop
dec
fidivrs
addl
xchg
and
mov
push
inc
adc
sub
jne
fs
pop
dec
leave
outsl
push
jbe
xor
lcall
or
cmp
mov
xchg
dec
jecxz
imul
add
pop
push
mov
aas
sti
into
mov
into
movsb
xchg
scas
inc
and
lods
pop
adc
jae
inc
pop
imul
test
cltd
push
test
cmp
mov
pusha
dec
out
pusha
aad
jmp
pop
out
and
push
or
add
mov
and
shlb
inc
push
jae
ss
pop
cs
jle
filds
fs
pusha
xor
outsb
cmp
jl
xchg
push
sub
or
sbb
fwait
adc
adc
or
lret
xchg
subl
iret
xor
dec
mov
jle
inc
add
adc
ljmp
lds
fs
jl
dec
icebp
loope
cmc
stc
sbb
fstpl
and
clc
cld
dec
xchg
xlat
push
xchg
adc
addl
jp
or
dec
jno
int
movsb
mov
outsb
dec
sbb
jns
aam
mov
dec
xor
add
push
mov
hlt
pop
inc
test
mov
push
cmpsb
dec
jge
shrb
pushf
mov
mov
scas
jne
pusha
sarl
sbb
mov
sahf
pop
jmp
clc
in
mov
and
dec
test
mov
testb
xor
mov
sbb
jl
mov
mov
adc
dec
out
mov
xor
sub
repz
dec
adc
xorl
fbstp
fsub
sub
jae
out
jb
nop
dec
or
jl
add
push
ret
dec
ret
stos
fidivl
mov
dec
add
pop
movsl
sbb
aad
ja
fdivs
xchg
popa
sub
xchg
icebp
pop
lcall
push
dec
fwait
cmp
sbb
out
sub
push
pop
lret
jo
dec
dec
pop
dec
xchg
movsb
xchg
add
dec
nop
xor
and
jae
rorb
scas
jle
stos
outsl
repz
jb
cmp
mov
add
dec
in
push
loopne
ss
and
leave
jbe
out
fisttps
mull
mov
pushf
dec
sbb
mov
push
movsb
aad
ud1
enter
xor
jecxz
jg
mov
push
mov
jb
xchg
loop
inc
dec
push
inc
insb
pop
imull
xlat
push
dec
xchg
cld
sub
sbb
orb
ljmp
sbb
dec
dec
jnp
cmp
push
mov
inc
or
hlt
orl
sub
adc
dec
les
xchg
push
sbb
in
aaa
dec
rclb
cmpsb
imul
cmp
cmpb
mov
jns
shll
int
sbb
lock
lods
sbb
lret
out
dec
pop
shrb
scas
sar
dec
testl
or
cs
das
xor
repz
add
iret
data16
pop
cmpsl
neg
add
dec
push
push
mov
cwtl
data16
mov
push
mov
or
andl
adc
imul
pop
cmp
mov
add
push
cmp
and
dec
ljmp
scas
xlat
add
pop
cmp
dec
outsl
inc
js
jb
popf
loop
dec
fs
dec
jp
cmc
aas
dec
repz
or
jae
inc
dec
stos
jecxz
push
fwait
in
loopne
dec
inc
movsb
into
pop
xor
cli
adc
xchg
pushf
dec
mov
data16
xchg
into
sub
int3
dec
int
jecxz
cmp
test
dec
inc
shl
sub
iret
fnsave
xor
repnz
sbb
movsb
xchg
push
cmp
jo
inc
hlt
xchg
arpl
int
ret
aad
dec
sub
sbbb
scas
pushf
push
fxch
leave
cmp
push
popl
idivl
dec
outsl
jle
cmp
lret
push
sbb
mov
gs
lcall
mov
mov
adcb
in
adc
in
pushf
sahf
dec
dec
fildll
add
cmp
mov
cmp
dec
mov
fistps
mov
data16
xor
xor
adc
fmul
xchg
dec
ficomps
adc
mov
les
xchg
fldenv
jl
or
xchg
cwtl
jnp
jmp
inc
jle
and
into
lods
test
mov
sbb
xchg
sub
pop
xor
std
in
push
jl
dec
pop
int
jns
mov
dec
es
sbb
adc
mov
lret
inc
inc
fimull
add
or
mov
imul
mov
mov
fdivr
jg
sbb
xchg
adc
xor
jbe
ror
xchg
sub
daa
iret
bound
dec
mov
lret
gs
adc
ret
xchg
add
mov
insl
mov
les
daa
shrl
lea
add
xor
inc
roll
pop
fdiv
nop
inc
inc
dec
xor
xchg
icebp
cmpl
imul
push
and
xchg
mov
xchg
mov
jb
cmc
or
dec
rorb
sbb
in
jmp
or
inc
loop
fiaddl
add
adc
or
sub
pop
cmp
lods
lds
dec
call
aad
sbb
lret
movsl
enter
jmp
dec
jae
nop
jp
popf
cmp
and
mul
dec
fnstsw
jns
mov
pushf
leavew
and
outsb
out
into
dec
mov
mov
scas
out
daa
lods
xchg
jno
push
test
call
enter
push
sbb
int
loopne
das
ret
sub
push
sahf
sbb
pop
adc
insl
adc
hlt
dec
push
dec
fstl
adc
push
jb
mov
cmp
dec
cli
and
mov
xchg
xor
rcr
push
into
or
xlat
jp
dec
mov
and
xor
sbbl
jo
cmp
dec
xlat
sub
jecxz
cmp
hlt
sbb
mov
dec
jno
push
mov
inc
icebp
mov
mov
rcrl
scas
dec
std
fs
scas
inc
jecxz
cmc
dec
lods
add
out
in
imull
adc
scas
movsl
mov
jg
pop
std
dec
cmp
mov
cwtl
lcall
dec
cmc
adc
or
xchg
ret
dec
call
push
pop
fldt
and
push
or
inc
add
inc
cmp
dec
sub
loopne
rorl
mov
jbe
mov
dec
cwtl
xor
dec
fldt
mov
xor
inc
scas
dec
and
or
mov
pop
cmpsl
jb
mov
stos
ret
mov
sbb
pminub
push
andl
push
mov
sarb
pop
and
push
cmc
sahf
dec
adc
outsb
dec
ret
mov
dec
fwait
push
add
dec
sub
mov
dec
cmpsl
sub
and
inc
sbb
fisubrl
and
mov
repnz
nop
pop
roll
dec
mull
cltd
lds
inc
and
cmp
jl
add
jge
addb
idivl
sub
enter
popa
push
das
pop
push
dec
repnz
mov
hlt
in
jnp
jne
stos
xorb
mov
mov
jmp
xor
das
jae
dec
push
and
adc
pop
sbb
push
stc
dec
jne
daa
mov
test
out
and
dec
mov
push
out
int
lahf
jno
sub
push
push
jp
insb
cs
jle
cmpsb
pop
and
add
test
push
push
lss
inc
in
mov
outsb
and
inc
aad
sbbl
or
inc
nop
xchg
dec
mov
adc
jno
or
stc
mov
sub
jle
mov
out
push
xor
adcl
arpl
add
clc
push
mov
mov
and
scas
inc
adc
push
push
dec
stos
jnp
rorb
xor
sub
insl
stc
les
iret
adc
adc
adc
jge
jne
jbe
aaa
fcmovbe
mov
imul
add
in
sbb
adc
push
xchg
mov
push
filds
dec
pop
push
or
and
leave
or
cs
lret
cld
xchg
dec
jle
and
in
int
add
popa
jge
pop
or
mov
xlat
push
dec
sti
neg
jl
adc
adc
stos
push
sub
addr16
mov
dec
jns
data16
cmp
push
lret
xor
dec
xor
push
jle
lcall
nop
into
dec
daa
fildl
in
mov
sbb
and
insb
mov
adc
imul
loop
dec
xchg
adc
aam
in
lahf
push
jne
pop
jl
dec
and
push
jecxz
data16
fstps
push
dec
shlb
inc
sbb
ss
outsl
cmp
add
push
in
scas
es
rorb
push
cmpsb
xchg
in
push
add
leave
mov
mov
xor
or
cs
ror
push
dec
cli
mov
cmp
xchg
mov
mov
dec
jge
sbb
hlt
add
jge
or
dec
mov
dec
xor
or
xor
aaa
sub
dec
fnsave
push
stc
leave
cltd
jo
sbb
push
mov
jno
leave
adc
dec
sub
xor
dec
mov
nop
push
lret
ret
iret
push
dec
push
dec
cmc
movsl
sub
sti
xlat
dec
adc
fildll
xchg
push
jbe
dec
loopne
jns
sub
mov
into
out
mov
xchg
test
out
jl
dec
mov
inc
mov
add
and
xchg
dec
add
cmp
pop
arpl
push
pop
inc
xchg
mov
mov
sub
mov
lret
cwtl
into
dec
cmp
dec
popa
test
xor
dec
push
fcmovnb
pushf
dec
mov
lcall
popa
mov
xor
adc
test
push
mov
testb
pushf
and
sub
loopne
xchg
scas
lds
mov
xlat
dec
mov
jmp
jne
push
insl
aas
dec
lock
mov
or
inc
out
pop
ljmp
jp
movb
mov
sub
mov
push
imul
cmpsb
data16
pop
int3
jno
icebp
inc
movsl
inc
jae
mov
pop
out
mov
inc
scas
dec
out
or
in
fistpll
mov
gs
out
cltd
test
cmp
sbb
push
add
pop
pop
stos
dec
and
xchg
or
pop
sub
and
and
sti
andb
push
iret
data16
jo
insl
dec
sbb
mov
xor
xor
ficoml
xor
stos
jno
dec
and
fs
jmp
pop
daa
icebp
dec
aas
mov
cmp
dec
xor
inc
mov
sub
fs
and
lahf
xor
rep
cmp
dec
push
xchg
arpl
xlat
fwait
push
fcmovu
mov
or
inc
cmp
mov
push
std
les
pushf
lods
jo
scas
dec
ret
cmp
dec
or
fwait
mov
ret
bound
test
js
rcll
gs
into
hlt
or
lret
sahf
dec
mov
mov
lret
aas
dec
xor
dec
in
inc
pop
popf
iret
bound
jg
lcall
dec
xor
orb
imul
dec
aam
xchg
push
bound
jnp
cmp
scas
mov
dec
and
push
aad
mov
push
out
dec
repz
outsb
push
lds
ljmp
push
mov
rcrb
fbld
mov
pop
add
rorb
sbb
cmc
and
insl
dec
sbb
les
xor
xchg
fdivrs
xchg
sti
cs
mov
xor
and
rclb
add
jbe
dec
add
add
bound
push
cs
shr
pushf
mov
cmp
aas
std
enter
add
rcll
xor
outsb
subl
adc
movsb
cli
mov
push
and
dec
mov
pop
push
aad
mov
add
xchg
push
mov
and
xchg
sbb
movsb
scas
xchg
ret
fdivs
jl
gs
lea
scas
push
cmpsl
outsl
es
dec
cwtl
rcrb
pusha
push
rcrl
push
adcb
add
dec
outsl
sub
test
imul
cmp
pushf
xchg
adc
jnp
mov
dec
xlat
ja
dec
pop
sub
inc
mov
lods
loopne
xchg
out
stc
dec
dec
add
add
mov
dec
mov
sarb
scas
fmull
mov
push
sahf
int
outsl
aam
add
sar
lahf
or
adc
int
add
dec
xchg
pop
or
pop
fidivrl
push
fstpl
mov
fistpll
dec
push
hlt
pop
push
mov
jle
adc
mov
push
test
add
jl
jg
arpl
fisubrs
jns
sub
sub
daa
dec
sub
pop
jg
push
je
pop
vmread
scas
push
pop
xsha256
cmpsb
adc
dec
jb
ret
push
xchg
cmc
outsl
xchg
dec
outsl
or
mov
dec
stos
xchg
lret
popa
hlt
jle
aas
xor
xor
lds
shrl
adc
mov
cltd
xor
rcrb
int3
in
xchg
popf
adc
les
jo
outsb
in
jp
outsb
mov
xor
mov
test
lds
push
dec
out
inc
data16
scas
fwait
int
or
lret
jle
stos
int3
loop
mov
push
pop
hlt
test
pop
push
xor
inc
push
rorl
insb
cmpsl
inc
out
jo
ret
test
loopne
daa
cltd
in
jle
cmp
pop
rorl
jl
gs
mov
dec
mov
lods
fs
push
inc
xlat
and
jae
mov
loop
sub
or
aam
ror
xchg
xchg
sbb
jg
bound
push
pop
fsubs
shll
cmp
cs
fbld
fnstcw
or
scas
repz
jnp
int3
stos
adc
incl
js
cs
cmc
inc
les
aaa
pop
clc
add
add
cmc
leave
xor
push
pop
push
add
pop
adc
sub
fdivp
inc
movsl
mov
dec
stos
in
mov
cmp
les
mov
inc
push
xchg
daa
roll
ja
pop
rolb
push
out
aaa
sub
jl
dec
cmp
mov
fsubs
outsb
mov
nop
mov
xchg
lock
xor
ret
xchg
push
outsb
inc
add
push
and
fistpll
pinsrw
stos
outsb
loop
dec
aas
add
rorb
mov
and
inc
nop
out
inc
lahf
dec
dec
in
cmc
dec
subb
xor
and
pusha
xchg
sbb
leave
daa
iret
xor
xor
jo
cld
sti
pop
and
movsl
xchg
inc
cs
ud1
mov
sub
mulb
loopne
cmp
add
push
adcl
aaa
pop
gs
cltd
dec
xchg
lahf
arpl
add
mov
xor
aas
into
dec
fadd
repnz
sbb
xor
push
cmp
jnp
push
scas
dec
or
mov
mov
sub
test
dec
mov
adc
sbb
push
cmpsb
nop
and
mov
dec
xchg
lret
push
je
dec
sbbl
lds
inc
pop
mov
dec
dec
stmxcsr
cmp
mov
in
jae
jl
push
push
and
jne
gs
inc
or
out
xor
cltd
enter
std
mov
xor
xchg
into
fadds
jne
mov
es
outsb
decl
sbb
dec
xor
fstpl
xor
cmp
xlat
push
out
inc
mov
xchg
iret
xchg
lret
xchg
out
icebp
ljmp
dec
mov
xchg
bound
pop
test
das
cmp
push
and
enter
push
fisubrs
push
loope
pop
xor
mov
mov
lcall
cmp
mov
pusha
push
fsub
rorl
scas
ja
das
mov
sbb
lret
push
xchg
not
outsl
inc
jl
add
test
add
add
jge
scas
lods
xchg
xchg
dec
jle
bound
jmp
into
mov
movsb
ret
psraw
jnp
aaa
hlt
dec
jne
fildll
and
pusha
lods
or
fdivrs
sbb
pop
or
pushf
mov
push
ret
mov
jbe
in
aas
jl
pop
aad
inc
pop
add
cld
lret
mov
cld
popa
xchg
mov
jecxz
pop
jns
sarb
jl
mov
and
cmp
ret
cmp
popf
pusha
push
mov
mov
and
bound
jl
movd
fs
cmp
cltd
push
aaa
xchg
mov
sub
jp
dec
jbe
js
xchg
sbb
push
mov
and
aad
xchg
jo
push
movsl
fistps
orl
shll
adc
mov
vpsubd
jb
sbb
leave
add
mov
dec
mov
aam
mov
stos
inc
std
popf
jo
dec
pop
jne
dec
loop
cmp
xlat
rorb
ret
adc
jmp
inc
jle
subl
jmp
dec
movsb
ret
fstpt
xor
jg
jmp
aaa
mov
jle
pop
push
push
out
push
inc
pop
push
cmp
push
ds
or
pop
dec
cli
jg
add
xchg
push
xchg
inc
loope
aaa
xor
mov
dec
leave
xorb
sahf
nop
lods
mov
je
mov
in
pop
push
scas
inc
cs
xor
into
stc
push
inc
pop
push
adc
pop
mov
pop
xchg
adc
mov
ret
jle
lock
ss
insl
and
add
in
repz
dec
lcall
sub
dec
xor
dec
mov
pushf
je
mov
sbb
inc
mov
pop
mov
mov
add
and
and
jl
dec
push
cmp
inc
mov
pop
xor
inc
xchg
pop
fldl
pop
scas
pop
rcrb
out
into
add
push
dec
dec
jbe
cmp
fildll
push
xchg
aad
pop
dec
xor
subl
and
insb
dec
dec
popf
mov
int3
cld
or
out
mov
dec
xor
fstl
pop
and
iret
mov
icebp
dec
nop
mov
push
aaa
xchg
aam
inc
cmp
and
add
mov
lods
inc
inc
dec
lock
pop
dec
cmp
mov
cmpsb
and
dec
pop
arpl
mov
out
push
aas
dec
or
and
xorb
dec
cmc
jl
jmp
test
aaa
dec
add
pushf
dec
inc
xor
cmp
adc
or
out
int
adc
inc
mov
dec
pop
icebp
iret
sti
fisttps
hlt
dec
adc
dec
adc
je
mov
addps
mov
fisttps
dec
leave
fdivl
dec
xor
imul
cmpsl
mov
pop
pop
ror
das
insl
xchg
aad
dec
and
fwait
push
popa
inc
jae
dec
movsb
fnsave
popa
push
push
dec
adc
loope
int3
sbb
dec
insb
popf
nop
cmp
dec
push
ret
push
lock
add
dec
leave
aam
in
shrb
and
dec
or
pop
and
sub
and
lock
add
rol
aam
mov
pop
xor
dec
mov
inc
lcall
push
lock
mov
sbb
and
push
mov
pop
sti
jp
loop
or
outsb
push
mov
stos
cvtps2pi
xor
repz
into
pushl
push
into
sub
sub
xchg
out
call
add
jle
movsb
jmp
leave
push
xchg
inc
mov
into
cltd
test
lcall
jbe
mov
lret
popf
aad
scas
and
push
dec
lret
dec
mov
mov
cmc
shrb
mov
dec
dec
add
cmp
xor
mov
jle
lea
push
inc
and
arpl
fsqrt
or
std
in
or
jg
fbstp
xchg
dec
push
mov
inc
in
mov
ret
out
mov
jp
adc
arpl
mov
iret
cmpsl
aaa
jl
push
subl
das
sub
in
hlt
xchg
popa
cmp
insb
or
das
mov
or
mov
cmp
imul
loopne
pop
jmp
mov
imulb
cwtl
push
inc
inc
jbe
mov
out
jo
fwait
dec
sarl
jmp
imul
popa
jno
in
in
xchg
es
mov
dec
in
pop
imul
aaa
testb
push
adc
xor
mov
adc
inc
arpl
xchg
dec
shrl
dec
rclb
dec
or
lret
xchg
lods
xchg
cmp
cmp
mov
inc
add
sbb
mov
pop
cwtl
andl
ljmp
jl
test
aam
dec
jg
rorl
cmp
dec
nop
sub
lea
add
cmc
dec
sbb
aad
mov
mov
add
mov
pop
jmp
adc
sbb
or
gs
dec
js
in
xlat
adc
pop
dec
mov
pop
icebp
dec
jl
fadd
hlt
xchg
fistpll
push
and
call
je
jge
scas
xchg
inc
sub
dec
pop
ja
xchg
fstpl
in
xchg
mov
xor
jne
scas
jae
dec
mov
mov
cltd
adc
dec
inc
les
and
mov
jo
fwait
mov
dec
ss
mov
dec
dec
int
xor
dec
ja
mov
and
cli
jle
stc
inc
ds
dec
clc
push
adc
mov
test
dec
push
push
pop
lret
pop
mov
mov
jbe
aad
mov
cltd
push
and
add
mov
test
cmpsb
inc
pusha
jl
or
mov
data16
and
sub
fidivrl
mov
jl
inc
shrl
adc
mov
repz
iret
bound
mov
aas
aaa
mov
mov
jbe
jle
fsubs
in
push
inc
xor
cld
adc
sub
clc
mov
inc
jge
cmc
jb
sbb
cltd
pop
or
add
fidivl
mov
jle
mov
dec
pop
imul
lcall
dec
test
fcomp
push
adc
xor
xchg
data16
pop
pop
bound
std
push
ja
daa
sahf
sbb
dec
dec
repnz
xchg
xchg
dec
push
test
popf
jo
mov
fbstp
or
xchg
subl
out
dec
adc
fs
dec
in
sbb
icebp
filds
and
ds
stos
mov
xchg
push
cmpsl
mov
inc
jl
sub
iret
adc
stos
fs
sub
xor
cld
xlat
dec
jns
fstpl
sti
dec
dec
push
lock
adcl
pop
aas
call
mov
dec
xor
cli
pusha
std
cmp
iret
int3
xchg
mov
test
pop
xchg
fisttps
add
cltd
stos
shlb
pop
dec
mov
dec
cmp
jl
sbb
out
gs
jl
sub
dec
and
mov
push
stos
or
scas
push
lds
sub
dec
les
inc
xor
es
fs
cmp
adc
cmp
xchg
dec
pop
ds
pop
repz
or
out
lahf
xor
cmp
je
mov
insb
jle
rep
pop
cmp
push
movsl
testl
es
xchg
fimull
adc
lcall
daa
dec
dec
or
pop
push
mov
jne
or
push
addr16
add
js
dec
jmp
iret
cwtl
jg
mov
xchg
faddp
sub
daa
sti
loop
push
cmp
sarl
jnp
and
fs
scas
sub
and
mov
fidivl
mov
les
aaa
adc
sbb
and
dec
test
push
inc
pop
iret
sbb
inc
aad
rclb
adc
inc
mov
test
or
out
pop
pop
push
sar
cltd
jbe
cltd
xchg
adc
and
xor
cmpl
mov
mov
aaa
js
xlat
mov
je
mov
mov
pop
jecxz
iret
enter
dec
inc
movsl
push
lret
sub
push
in
add
test
mov
dec
jl
jbe
pusha
fstpt
xchg
mov
scas
inc
push
sahf
ljmp
sbb
adc
dec
mov
ret
add
mov
dec
daa
push
aas
stos
push
and
rorb
sub
mov
inc
dec
add
mov
je
inc
sub
sbb
imul
sub
ficomps
inc
sbb
mov
mov
dec
dec
add
pop
xchg
dec
mov
lcall
mov
jmp
mov
dec
lahf
out
dec
cmp
pop
mov
ss
dec
setb
in
jg
int3
cmp
icebp
dec
pop
ret
push
ljmp
inc
and
scas
adc
ficomps
add
pop
cmpb
dec
outsl
fwait
mov
inc
push
or
push
fcmovne
scas
adc
mov
inc
xchg
out
xchg
pop
jmp
xor
out
mov
gs
jle
dec
push
add
loopne
hlt
filds
dec
fidivrl
xchg
sahf
int3
cmp
decb
int3
test
xor
in
push
and
imulb
sbb
ljmp
push
jno
aaa
dec
out
popl
rcrl
cmpsl
jl
lahf
jne
stos
movb
xor
ds
pusha
inc
xor
mov
push
sub
push
mov
push
dec
dec
push
lret
jno
sub
orl
pop
jg
aad
outsl
das
into
icebp
jg
xchg
scas
aaa
js
cmp
in
repnz
in
sarb
mov
pop
js
andb
bound
stos
outsl
xlat
xchg
cs
lock
xlat
hlt
mov
test
or
mov
xor
lods
mov
iret
jne
mov
mov
xor
or
int3
addl
mov
push
cmp
js
mov
test
fimull
xchg
cmp
jmp
dec
out
dec
pop
fsubs
inc
pusha
xchg
pop
ror
outsl
add
loopne
and
sub
adc
xor
mov
popa
cmp
push
sbb
mov
sbb
and
mov
cmp
daa
add
dec
pop
lods
adc
dec
dec
mov
inc
rcrl
push
dec
cmp
and
inc
jo
pop
scas
adc
test
outsl
jmp
pop
lock
dec
jp
and
xor
in
push
ret
dec
inc
cmp
sub
dec
js
xlat
mov
pop
out
sub
into
sub
xor
lret
sub
xor
test
mov
ja
xchg
inc
bound
aaa
xor
shlb
mov
mov
xchg
inc
xlat
dec
add
aas
gs
jle
fsubl
dec
loop
cmp
and
push
dec
ss
lahf
stc
sbb
adc
movsb
int3
mov
popa
mov
push
enter
pop
nop
pop
push
mov
arpl
dec
test
repz
or
xor
addb
lret
mov
xor
or
orl
aam
xlat
icebp
xchg
pop
fists
mov
scas
out
add
movsb
mov
adc
add
stc
hlt
aad
mov
stc
jg
and
int3
imul
sarb
sarb
jle
mov
mov
test
push
push
fmul
repz
push
adc
mov
shr
rclb
or
xchg
pop
jb
mov
xor
dec
int3
outsb
cli
sbb
lahf
push
inc
idivl
pop
dec
dec
mov
stos
adc
and
fildl
sarl
xlat
testl
rorb
std
mov
outsl
and
mov
or
fimull
insl
cs
lds
inc
jle
dec
cmp
cmp
mov
mov
mov
mov
jge
dec
inc
rcl
call
adc
cld
daa
iret
mov
sbb
lahf
out
cmp
dec
add
jns
scas
je
dec
lds
sahf
cmc
pop
cld
inc
dec
add
faddp
xchg
outsl
mov
je
into
mov
daa
outsb
fsubrl
inc
outsl
stc
jno
lahf
rorb
addr16
ljmp
mov
nop
dec
pop
xchg
jne
stos
inc
stc
dec
aas
orl
es
jae
fcoml
lods
dec
xor
enter
dec
inc
rcrl
push
dec
into
xchg
out
hlt
test
das
sti
cmc
dec
mov
iret
cli
in
adc
add
orb
int
mov
and
jp
mov
lods
repz
jbe
push
sbb
pop
sub
jne
inc
push
inc
into
fimull
int3
ja
inc
adc
test
fisubs
mov
jno
frstor
fs
push
aaa
push
mov
ficoml
or
lcall
mov
cmpsb
lahf
jb
bound
inc
dec
nop
or
cltd
push
mov
mov
imul
orl
stc
mov
bound
pop
add
push
mov
jle
xchg
icebp
ror
dec
jl
adc
loop
cmp
in
stc
shrl
cmp
ret
maxps
and
add
addl
adc
and
jo
inc
jg
and
dec
xor
dec
es
and
sarb
sub
jg
test
add
mov
pop
lds
sti
adc
sarl
sbb
imul
bound
das
cmp
sub
dec
cwtl
lret
xchg
xchg
cmp
in
addr16
rorl
xchg
dec
bound
push
add
fistpl
and
push
lock
push
jnp
shll
or
jmp
jg
ret
mov
sub
clc
push
sub
fadd
pop
dec
adc
mov
mov
jp
sahf
movb
cmp
pop
xor
sti
pusha
mov
call
xchg
and
adc
int3
mov
mov
ljmp
lods
push
lds
data16
pop
cmpsl
jle
jo
dec
aad
ds
scas
and
adc
ficoms
out
movsl
jg
sub
imul
mov
or
cs
clc
jle
xchg
popl
add
push
mov
pusha
inc
dec
outsb
mov
inc
test
push
adc
mov
pop
dec
lcall
gs
mov
notb
in
and
test
and
xor
decb
and
jns
daa
mov
dec
add
xchg
jle
dec
mov
imul
sub
mov
scas
sti
mov
arpl
mov
nop
inc
jp
int
adc
rolb
adcl
xor
stc
cwtl
jns
mov
pop
jno
add
push
fstl
push
roll
out
adc
push
mov
hlt
iret
pop
sub
lods
dec
loopne
in
push
out
shlb
pop
pmulhw
repnz
cmp
loopne
lcall
ficoml
mov
sbb
movsl
repnz
outsb
gs
push
rorl
pop
sbb
enter
mov
je
dec
fists
pop
dec
movsb
pop
enter
mov
outsb
subl
inc
aas
pop
jge
mov
push
gs
jnp
aaa
lret
cwtl
xchg
mov
movsl
xchg
add
sub
mov
aas
xchg
repz
jbe
repz
scas
movsl
dec
cmp
popa
pop
sbb
jb
pushf
lcall
cmp
jno
push
sbb
jne
ret
cmp
dec
and
mul
shlb
pop
jbe
out
pop
dec
popf
jnp
fistl
imul
sbb
mov
xlat
inc
inc
push
inc
dec
in
jns
jne
inc
jle
sub
jecxz
mov
cmp
iret
scas
jmp
xor
mov
dec
cwtl
int3
rorb
jnp
xchg
cmp
pushf
insl
jo
jmp
sbb
jae
nop
mov
fxch
push
xor
das
xchg
ficoml
stc
dec
mov
scas
push
jbe
sub
into
adc
dec
fs
shlb
fwait
push
sahf
lods
pop
imul
outsl
cld
lahf
mov
aad
lcall
lods
div
int
inc
fdivrp
dec
bound
jnp
sbb
add
aam
and
xchg
sub
ds
sahf
arpl
xor
lds
fiaddl
aaa
pop
push
mov
pop
dec
and
sub
cmc
js
xchg
mov
fdivrs
mov
cmc
mov
in
cmp
outsl
dec
ja
inc
leave
dec
fsubrs
inc
testl
dec
mov
fcomi
xor
cld
es
call
adc
xlat
cmc
and
loope
aam
in
cltd
jle
sbb
jmp
dec
inc
mov
dec
mov
into
dec
repz
dec
out
push
outsb
adc
lods
dec
movb
fnsave
dec
popf
pop
cs
sahf
mov
dec
push
lcall
dec
jecxz
mov
mov
lds
dec
outsl
xor
iret
sbb
out
or
push
mov
adc
scas
jnp
pop
popf
lret
inc
dec
scas
adc
data16
int3
cmp
out
dec
rcr
lea
add
test
mov
sub
decl
js
aad
ret
mov
test
or
mov
inc
add
dec
out
jnp
push
bound
xchg
fsubr
cmc
cwtl
and
sarb
and
xor
pop
add
mov
xor
and
mov
sub
fisttpll
pop
jae
pushf
or
dec
jns
leave
xchg
sub
les
cs
fsubl
xor
lahf
push
mov
decl
pop
push
movsl
mov
clc
outsl
mov
push
inc
js
jae
mov
sti
pop
xor
sbb
push
mov
dec
scas
rcl
xor
pop
jnp
mov
push
orb
ljmp
pop
sub
fs
add
pop
into
xchg
inc
mov
lock
cltd
mov
lcallw
lea
and
scas
rcr
lahf
dec
pop
and
xchg
inc
lret
mov
das
rcll
sahf
ss
dec
cli
xchg
sub
mov
out
jge
scas
mov
mov
mov
cs
bnd
ja
pop
dec
into
pop
sbb
popl
cmc
ja
sub
out
fidivl
pop
adc
aaa
and
out
cmp
popa
pushl
cmp
and
pusha
xchg
orl
fmull
adc
dec
out
pop
repz
inc
ret
dec
fildl
jbe
inc
lret
test
bsr
xor
scas
xchg
shlb
fldt
push
pop
jp
imul
popf
sti
push
adc
sahf
pop
dec
dec
pop
dec
das
dec
jp
or
mov
mov
scas
adc
mov
pop
out
pop
enter
jl
xchg
inc
adc
in
inc
mov
adc
mov
adc
sbb
pop
xchg
sar
outsl
dec
hlt
sub
enter
dec
pop
movsb
push
fdivl
lock
dec
sbb
cmpsb
adc
dec
cmp
push
repnz
xchg
inc
adc
nop
test
pop
dec
dec
cmpsb
xchg
into
fldt
rcr
jo
push
incb
jle
mov
cmp
sbb
or
iret
out
cmpsl
lret
mov
mov
je
cmp
repz
xchg
pop
dec
sbb
stos
jbe
cmpsb
dec
aas
cmp
dec
fwait
inc
and
cmp
and
into
out
mov
icebp
dec
push
or
pop
je
add
jo
cwtl
ret
outsb
dec
xchg
fistpl
inc
dec
or
cmpsl
jl
lcall
mov
sbb
loopne
sub
sbb
xor
aam
outsl
subb
dec
jl
sub
mov
fmulp
push
outsb
jne
mov
into
cmc
rdtsc
ss
cmp
jl
sub
push
adc
jl
mov
std
add
xor
dec
fwait
mov
mov
push
pushl
movq
in
or
int
lods
inc
pop
gs
dec
lock
lret
popf
movsl
inc
mov
out
cmp
sbb
push
rcrb
cltd
mov
cmp
adc
iret
aam
aas
stos
fistl
insb
inc
push
pop
mov
nop
lea
leave
or
dec
pop
mov
lcall
cmp
dec
bound
xor
mov
lahf
mov
into
inc
jmp
xor
out
mov
dec
fsubrl
and
pop
or
xchg
push
dec
pop
sbb
jmp
sub
orl
dec
popf
int
xchg
jge
inc
sahf
push
push
in
cltd
dec
add
inc
iret
arpl
mov
mov
daa
inc
pop
dec
jmp
jns
fidivrl
dec
dec
scas
dec
sbb
xor
les
and
sub
mov
lahf
fdivl
dec
jp
xchg
push
and
cmp
stos
adc
sti
mov
push
mov
imul
xor
dec
xchg
loop
inc
popf
or
mov
cwtl
pop
add
and
dec
hlt
sbb
fdivrp
in
push
mov
mov
nop
dec
jbe
dec
xor
and
into
cmp
les
dec
xlat
or
xor
loop
jl
loopne
xchg
jmp
fs
jae
gs
adc
cmp
mov
iret
cld
insb
xchg
les
into
js
inc
pop
dec
mov
shlb
cmp
dec
pop
cwtl
add
jecxz
fimull
push
xor
call
cs
cmp
xchg
shll
cmp
cs
adc
arpl
fwait
mov
sub
rorb
xorl
fiaddl
stos
adc
xor
call
lds
and
jae
mov
jle
imul
insl
fldenv
sub
jl
es
sub
das
inc
in
xchg
inc
arpl
ja
ljmp
mov
sub
imul
adc
mov
iret
xlat
arpl
push
dec
jge
mulb
inc
faddp
xchg
lds
out
xor
jo
fisubl
lcall
inc
jae
mov
ja
push
add
dec
cmp
or
scas
dec
pop
lret
icebp
insb
pop
and
testl
mov
ljmp
ljmp
push
add
jle
notl
xor
loopne
dec
inc
cmp
add
cmp
mov
insl
aas
adc
and
iret
inc
push
out
jb
sbb
jae
cltd
mov
push
enter
ljmp
pop
shrb
lcall
adc
loop
iret
ss
mov
pop
fs
pop
fdivrs
and
ds
sbb
adc
rorl
enter
mov
daa
sub
fisttpl
push
loope
dec
jns
mov
mov
dec
sbb
jb
out
or
icebp
inc
mov
dec
push
mov
sub
mov
aam
sti
roll
cmp
loope
out
cmpsl
fimull
jp
or
jne
dec
mov
add
push
push
addl
xor
mov
dec
jmp
mov
fnsetpm(287
fisttpll
cmp
dec
mov
push
jge
inc
push
mov
push
dec
rol
out
mov
mov
sti
into
xchg
pop
inc
inc
adc
cwtl
jo
sub
aad
cs
dec
mov
dec
push
insb
jmp
and
loop
adc
into
enter
dec
cmp
jae
arpl
fwait
std
pop
stos
enter
cli
jge
mov
fisttps
xchg
add
cmp
lds
jmp
fsts
inc
sub
jbe
stos
dec
sbb
add
dec
jl
mov
sbb
dec
aam
aas
jge
loop
mov
lods
out
jno
and
inc
cs
dec
mov
pop
lret
sbb
xor
leave
cmp
cmpsl
nop
dec
jle
adc
push
pop
shlb
push
aaa
inc
rorb
movsb
clc
imul
sub
rol
in
sub
cwtl
cld
push
ljmp
imul
xchg
outsl
lods
inc
bound
dec
es
pop
rcll
dec
inc
jle
cwtl
pop
and
fwait
dec
xor
ret
inc
shlb
popa
sub
cmpsl
jnp
lods
xor
jle
loope
stc
or
scas
cli
mov
push
cmp
cs
jl
dec
xlat
in
xchg
jmp
aam
xchg
mov
add
xchg
push
scas
cmpsl
adc
lock
sysenter
sub
stos
repnz
outsl
std
adc
icebp
icebp
cmp
and
int
js
cmpsl
add
jmp
fidivrs
pusha
lds
adc
outsb
into
mov
pop
subb
shrl
cmp
push
out
rorl
out
push
dec
and
dec
dec
jl
mov
cmp
push
sub
sub
sbb
cwtl
jle
pop
push
and
rorb
je
xchg
jecxz
jmp
scas
push
push
sub
add
jecxz
cltd
add
pop
push
jno
jle
inc
cmpsb
inc
inc
fwait
pop
mov
mov
out
sbb
cmc
into
pop
cli
cs
lret
pop
popf
daa
push
fidivrs
add
add
jmp
inc
push
jne
and
dec
out
lock
push
cli
push
call
addr16
out
out
add
ljmp
scas
dec
into
mov
cmp
push
push
dec
cmp
xlat
sbb
data16
adc
sbb
dec
cmp
stos
insl
mov
and
adc
sbb
test
dec
jg
mov
mov
sti
stos
adc
or
fldt
into
push
lds
movsl
iret
jp
fwait
dec
in
mov
mov
pop
sbb
jmp
inc
mov
inc
negl
cmp
dec
inc
inc
lcall
or
stos
stos
cs
jecxz
jnp
xchg
mov
lret
mov
ja
dec
add
jle
out
xchg
pop
mov
into
out
fbld
sub
push
cmc
daa
mov
and
orl
push
pop
scas
inc
dec
mov
mov
pop
dec
test
adc
inc
aad
cwtl
jno
in
xor
mov
call
dec
enter
aaa
pop
adc
test
and
xor
mov
fmulp
aam
pop
or
jle
roll
adc
xor
jb
dec
in
sub
int
xchg
mov
add
sub
cmp
mov
adc
xchg
lds
pop
pop
inc
popf
call
xchg
stos
mov
sbb
icebp
dec
dec
cmpsl
loope
sahf
nop
lcall
lahf
test
or
cmpsb
cmp
mov
pop
pop
dec
or
es
dec
subl
sub
inc
je
rcrl
outsb
clc
dec
test
xor
in
dec
int3
movsl
mov
das
lock
jle
and
stc
pop
mov
dec
into
test
adc
pop
mov
jbe
dec
sub
fidivrl
xor
cmpsl
jg
dec
and
mov
dec
fs
jl
pop
jp
dec
dec
cmpsl
jle
cltd
ss
adc
divb
pushf
inc
dec
enter
xchg
jge
and
pop
sub
xchg
test
dec
jb
push
mov
mov
pop
dec
dec
and
mov
repnz
dec
sub
pop
js
jnp
add
inc
jb
dec
shll
inc
jle
xchg
dec
cmp
je
cs
push
stos
xchg
push
sub
fadds
pop
add
data16
xchg
push
dec
dec
inc
repz
add
ds
sarl
mov
dec
mov
push
fwait
push
add
out
sbb
fwait
cmp
movsl
dec
dec
enter
push
dec
inc
mov
mov
ljmp
add
lcall
adc
sbb
mov
in
aam
jl
or
push
cmpsl
add
xor
mov
call
inc
in
shll
addr16
cmp
dec
jg
test
or
lock
dec
in
or
pop
stos
jnp
test
jl
hlt
loope
cmp
xor
push
or
pop
cwtl
dec
sbb
push
iret
sarl
stc
dec
std
push
outsb
out
les
dec
push
mov
push
scas
dec
fdivr
dec
mov
arpl
push
shlb
xchg
movsl
into
ret
xor
pop
out
inc
dec
fadd
mov
or
inc
inc
jns
pushf
inc
or
dec
pop
push
sub
dec
mov
rcrl
xor
mov
fdiv
fisttpll
cmp
outsl
cltd
inc
xor
scas
scas
inc
insb
adc
cwtl
in
movlps
jnp
xor
mov
scas
aad
jl
dec
push
fwait
pop
push
into
mov
dec
pop
movsb
outsl
or
insl
orl
ret
pop
dec
add
dec
jnp
jae
js
sbb
push
sub
mov
das
out
cmc
mov
cs
xor
dec
mov
arpl
dec
imul
xchg
jecxz
push
mov
mov
inc
jg
xlat
push
pop
std
or
mov
lahf
push
xor
push
mov
out
mov
push
dec
out
dec
mov
rolb
push
orb
movsb
mov
lret
jl
fimull
lods
or
pop
call
inc
fistpl
loop
dec
mov
aad
or
pop
mov
in
dec
add
ja,pn
fcmovne
push
subl
adc
inc
xchg
and
lods
sbb
outsb
inc
daa
dec
sti
sahf
into
inc
xchg
pop
or
test
dec
out
sub
daa
xlat
lcall
jne
lods
cmpsb
sbb
dec
and
movsl
lcall
pop
cmp
xchg
add
add
lahf
test
cs
push
mov
pop
js
negb
pop
sub
mov
push
ljmp
jb
dec
hlt
push
jg
xchg
jge
das
dec
xchg
push
out
mov
pop
decb
sahf
xor
mov
jmp
lods
adc
into
and
sbb
mov
sbb
loopne
iret
leave
mov
or
aaa
jne
xor
mov
inc
push
xchg
into
adc
iret
lds
sbb
sub
dec
jecxz
clc
addr16
shll
testl
imul
lcall
mov
sbb
xor
pop
sbb
fildl
push
inc
and
dec
mov
out
shll
mov
lahf
mov
mov
sbb
insl
or
out
inc
xor
or
rorb
mov
ret
outsb
xchg
dec
and
testb
sqrtps
cmp
lods
movsb
nop
out
pop
dec
adc
lret
gs
add
daa
imul
dec
mov
xchg
out
aam
mov
mov
jae
iret
or
popf
dec
int3
shlb
sbb
loop
sub
mov
dec
xchg
sub
jbe
inc
push
dec
iret
mov
push
imul
push
in
iret
in
mov
push
test
and
test
popa
inc
mov
sahf
add
jne
and
mov
dec
sub
insb
inc
add
xor
dec
jge
inc
push
push
test
cmc
pop
shlb
xchg
repz
out
pop
and
test
xor
repnz
add
cld
call
in
icebp
mov
in
xor
dec
and
and
xor
ret
cbtw
je
dec
sbb
sub
mov
lret
outsb
mov
stc
xchg
outsb
xchg
rep
dec
and
mov
shl
loope
xor
cmpsl
clc
cmpsb
dec
inc
sub
dec
test
imul
jl
sbb
ret
dec
leave
pop
dec
and
push
adc
imul
push
add
orl
xchg
inc
repz
xchg
sti
cmp
aaa
xor
aas
int3
adc
ljmp
aam
mov
mov
cmp
xlat
orl
cmpsl
cmp
stc
test
shll
cltd
xchg
dec
sbb
push
xor
jg
movsl
fwait
push
mov
aas
xchg
push
mov
dec
js
or
stos
pop
mov
es
js
push
cmp
and
jmp
mul
fsts
lret
adc
xchg
xor
enter
ficoml
test
mov
popf
sbb
fdivrs
rorb
add
add
stos
addr16
test
jle
loope
pop
dec
loopne
jns
fnstcw
pop
movsl
repz
jp
xor
sub
iret
jle
idivl
inc
fs
xchg
lcall
stc
or
push
cmp
xor
or
jle
fisttpl
enter
or
inc
dec
adc
ret
inc
cmp
xchg
or
mov
and
das
mov
dec
mov
cmpsl
shlb
push
adc
cmc
iret
clc
cmp
enter
cmp
mov
xor
sbb
std
aad
bound
fimull
inc
rcrl
dec
in
xchg
pop
hlt
pop
fiaddl
incl
xor
mov
push
xchg
dec
mov
scas
pop
or
inc
push
test
cld
push
ret
and
mov
addr16
mov
int3
hlt
pop
and
cltd
mov
das
lods
icebp
dec
jb
int
stc
xchg
mov
enter
daa
xchg
cmpsb
and
enter
test
dec
inc
dec
cmp
int3
xchg
pop
hlt
dec
xor
mov
movsb
adc
dec
jge
sbb
popa
bound
or
cli
pushf
dec
cmp
xchg
dec
adc
repnz
jo
cmc
insl
xchg
scas
lahf
data16
enter
and
lock
push
adc
sub
fisttpl
outsl
out
ja
inc
je
pop
cmpsb
mov
push
aad
cmp
inc
dec
or
into
sub
xor
sbb
leave
lret
loope
bound
sahf
fwait
xchg
fsubl
scas
aad
add
imul
add
mov
mov
dec
outsb
ds
xchg
jle
inc
addb
jno
pusha
aam
mov
in
outsl
fndisi(8087
jle
cs
dec
push
xchg
xor
dec
xor
dec
jecxz
cmp
cmpsb
sti
mov
iret
mov
mov
pop
and
ds
cmp
inc
jg
dec
and
and
push
scas
fistpll
fidivl
jne
xchg
mov
mov
cmp
fcomi
jle
dec
pop
push
dec
cmp
shl
cld
xchg
cmp
xor
rcrl
or
mov
cli
adc
dec
stos
jle
sbb
rcl
and
pop
je
adc
xchg
jmp
jl
aam
push
out
dec
xor
sti
fimuls
fldenv
dec
daa
push
test
imul
xor
repz
push
dec
sbb
iret
imul
dec
inc
xchg
ss
mov
sarl
je
jge
mov
pop
dec
and
test
iret
sti
mov
movsb
outsb
jae
dec
gs
sarl
mov
and
xchg
sahf
adc
dec
adc
fs
lods
mov
sub
out
and
lahf
int
or
pop
xor
jle
mov
or
aaa
iret
and
bound
movsb
cmp
mov
mov
sub
pop
push
jle
mov
clc
dec
sbb
cmp
rclb
aas
fldt
loopne
xchg
xor
movsl
lcall
dec
push
enter
int
mov
out
cmpsl
mov
xchg
jb
sub
movsl
adc
stc
dec
in
inc
inc
pop
pop
xor
outsb
mov
sbb
mov
es
mov
jmp
jl
or
or
std
mov
iret
fs
or
dec
iret
pop
pop
jb
into
icebp
ljmp
push
sbb
nop
stc
xor
lods
add
cmpsb
mov
push
mov
fucom
push
subb
push
stos
out
mov
push
lock
inc
cltd
inc
xchg
sub
xchg
aad
mov
cmpsb
or
jl
outsb
pop
mov
cli
rorl
lret
imul
push
into
jo
and
stos
adc
dec
divl
shrb
pusha
push
outsl
inc
pop
jmp
into
dec
inc
jmp
fxam
push
fmull
mov
push
inc
out
lret
ljmp
lret
mov
push
dec
fisttpll
cld
popf
dec
adc
mov
mov
inc
jne
and
dec
iret
sub
ret
negl
mov
andl
rorl
dec
inc
push
pop
jmp
dec
fisubs
hlt
adcl
xor
lock
pop
dec
xor
lcall
repnz
pop
push
test
xor
int
fs
daa
mov
xchg
aaa
sbb
popf
iret
xchg
mov
je
leave
xor
insl
rorl
arpl
jecxz
pop
out
dec
inc
call
jno
jb
dec
inc
push
pushf
cs
or
mov
outsl
adc
mov
data16
pop
push
dec
mov
in
iret
cmp
sbb
ja
dec
inc
or
mov
jno
mov
or
sub
sub
pop
adc
jns
sbb
pop
dec
dec
adc
popf
or
loope
push
mov
imul
pop
ret
loopne
stos
cmc
cmp
shlb
adc
je
imul
popf
sub
mov
pop
push
jne
sub
std
aaa
xchg
lahf
scas
negl
cli
cltd
test
je
lcall
and
in
shll
dec
aam
loop
pop
ja
outsl
inc
add
inc
mov
sub
lock
jnp
adc
pop
in
and
je
or
cmp
icebp
loope
mov
jecxz
lea
dec
aaa
mov
cmc
outsb
mov
leave
add
mov
xor
and
sbb
outsb
cmp
inc
out
jle
push
mov
dec
clc
addr16
sarl
aas
outsl
int
int3
mov
loop
xor
loope
jp
mov
inc
dec
test
lods
jns
movsb
nop
cld
addr16
or
dec
cs
cmp
xchg
jnp
dec
or
adc
imul
cmp
mov
add
mov
rol
adc
lret
jne
leave
and
cmp
dec
mov
jp
mov
jb
adc
adc
pop
scas
dec
data16
mov
addr16
inc
push
mov
dec
dec
xor
into
in
jne
mov
daa
dec
pop
sti
adc
mov
sahf
mov
jo
ljmp
cmpsb
push
stos
push
or
mov
xor
movsb
or
xchg
dec
add
aaa
cmp
mov
shrl
lret
xchg
sub
sub
dec
ret
jb
fmuls
les
pop
push
test
imul
rolb
push
mov
imul
mov
jb
mov
test
cmpsl
fwait
pop
pop
dec
mov
add
test
nopl
ror
mov
inc
push
jb
decl
push
lds
and
push
fnsave
fwait
dec
cmp
jecxz
jae
dec
adc
xchg
fwait
mov
scas
push
and
xchg
scas
jp
xchg
movsl
popf
add
hlt
inc
lret
pop
mov
jne
push
dec
jnp
repz
sub
test
es
xchg
push
dec
mov
fstpl
dec
push
xchg
dec
repz
xlat
mov
dec
xchg
imul
inc
jb
adc
cmp
into
pop
push
in
xchg
and
or
repnz
jge
adc
sub
outsb
sbb
xchg
imul
sub
decb
inc
mov
or
pop
cli
ljmp
leave
or
scas
mov
icebp
sbb
ret
lock
ror
mov
inc
push
xchg
and
outsl
xchg
add
dec
mov
add
inc
xor
outsl
mov
xchg
jg
xor
mov
sub
jl
xor
lods
sub
js
or
lea
pop
rolb
movsl
sti
and
ror
cmp
adc
pushf
jle
icebp
jmp
out
jg
das
mov
mov
int
aam
xor
into
stos
jl
adc
pop
jp
mov
adc
jbe
dec
xor
in
pop
repz
pop
sbb
addl
jns
fidivrl
pop
lahf
in
mov
fwait
mov
push
or
arpl
arpl
lret
jle
ljmp
ret
lret
jp
cmp
xor
fld
and
mov
pushf
mov
sbbl
push
in
fcoms
ret
stc
jmp
jb
cmpsl
ss
hlt
rcrb
into
jl
jle
aas
add
daa
vphaddudq
dec
push
jg
mov
cmpsl
push
inc
cmp
sub
inc
nop
sub
mov
rol
mov
mov
dec
xchg
sbb
push
adc
jle
push
clc
inc
inc
loope
mov
lret
jle
sub
in
or
loope
ljmp
jno
jne
test
dec
out
ret
sub
inc
test
test
ds
mov
xor
pop
inc
movsl
mov
enter
jbe
aad
dec
dec
or
cmp
dec
dec
mov
jns
or
push
ror
sbb
xor
out
js
xchg
lea
dec
sbb
mov
inc
xor
sti
mov
and
dec
ljmp
lret
sub
pop
dec
add
call
dec
inc
in
jnp
mov
mov
mov
dec
push
fsubl
dec
lahf
into
pop
mov
insl
pusha
mov
mov
mov
scas
cwtl
dec
cmp
inc
test
in
xchg
push
dec
adc
popf
pop
imul
rclb
inc
jp
or
psubq
dec
push
jle
arpl
push
adc
sahf
jecxz
sub
out
sub
out
pop
inc
dec
dec
add
cmc
faddp
mov
xor
xchg
dec
or
xlat
dec
lahf
and
cld
gs
ja
test
aad
cmp
xor
push
mov
lret
lcall
repz
pop
in
dec
xor
icebp
lds
outsb
in
adc
js
sti
subb
add
inc
cmp
inc
xor
test
dec
sbb
pop
les
popf
cmp
xchg
pop
mov
test
pop
dec
testl
sbb
sub
inc
adc
rorb
jle
adc
aad
aas
fstps
jno
test
add
push
sub
in
notb
push
jp
push
sub
cmpsb
jbe
aaa
notl
out
add
dec
stc
pop
xchg
jbe
pop
ljmp
data16
xchg
push
and
pop
stos
icebp
push
lahf
mov
cmpsb
cli
iret
es
add
or
cmc
lods
movsl
jae
and
inc
int3
adc
jle
inc
inc
jg
push
inc
push
filds
xchg
sub
push
push
or
rclb
das
inc
bound
lahf
sub
jl
inc
hlt
mov
pop
pop
sub
push
pusha
inc
cmp
mov
int3
sarl
sub
push
dec
push
dec
cmc
or
aad
mov
lock
cmp
sub
mov
cli
pop
aam
sub
mov
push
pop
dec
inc
sub
popf
mov
mov
cmp
idivl
mov
insl
test
call
shlb
fists
dec
int3
adcb
dec
jno
mov
push
cltd
test
mov
test
adc
out
ret
loopne
mov
cmc
ljmp
inc
pop
dec
push
adc
enter
push
inc
fstpt
js
dec
push
test
xor
sahf
bound
ficompl
sbb
notb
adc
add
rorb
push
add
mov
or
js
fwait
jecxz
dec
je
shll
test
and
jle
add
pop
push
jne
loop
rcll
push
arpl
push
sbb
mov
jo
notl
push
aad
pop
jb
mov
dec
test
jg
cld
and
dec
inc
or
sbb
es
dec
push
loop
jbe
insb
das
shlb
xor
movsl
into
inc
dec
dec
sbb
dec
fcoms
lcall
inc
es
orb
add
das
inc
jl
xchg
dec
fldt
add
dec
cltd
dec
xchg
pop
jmp
mov
pop
mov
shrl
jl
pop
dec
loopne
out
xchg
int
ficoml
int3
lods
jge
sub
clc
stos
pop
sbb
push
rorl
inc
inc
jo
pop
and
lods
mov
lret
jg
loopne
push
clc
stos
sub
push
scas
jb
or
cmp
mov
jl
fwait
and
inc
inc
inc
pop
mov
sub
push
push
push
aaa
jle
mov
cmp
pop
push
cmpsb
dec
jl
xchg
repz
sub
fsub
sti
scas
scas
push
dec
mov
push
xor
mov
icebp
out
movsl
cs
push
inc
and
pusha
mov
sub
jo
scas
mov
mov
xchg
out
push
mov
mov
iret
movsl
cmpsl
add
scas
jg
and
pop
out
cs
inc
ja
cmp
loop
cwtl
bound
xchg
imul
mov
mov
fisttps
ret
inc
xchg
jg
xchg
dec
das
dec
pop
sti
jbe
dec
insb
lock
arpl
imul
jecxz
les
sub
data16
nop
dec
dec
out
clc
jb
outsb
push
push
pop
inc
mov
xor
bound
cmpsb
hlt
jl
pop
inc
jle
je
mov
sbb
or
stos
in
inc
add
movsl
dec
adc
loopne
sahf
dec
push
lcall
dec
push
out
push
xor
iret
jmp
imul
pop
cmpsb
aam
dec
out
xor
push
sbb
das
pop
stos
int3
jbe
stc
sub
popa
dec
sub
cmp
ret
jns
push
mov
xchg
movsb
push
popa
outsl
dec
fdivr
inc
imul
hlt
add
and
fadds
pop
lret
scas
jl
jae
pop
xor
push
cwtl
pop
je
dec
cmp
and
iret
mov
repnz
les
push
jbe
dec
daa
push
mov
jle
xchg
iret
sub
sbb
dec
fwait
cmp
dec
stos
push
cmp
dec
test
jle
sub
add
mov
add
xlat
mov
insb
lds
ficompl
adc
idivl
fildl
cmp
aas
push
popa
daa
sbb
aaa
cmp
sbb
mov
insl
cmpsl
add
lahf
icebp
pop
and
inc
popa
insb
inc
rorb
imul
or
jo
and
cmc
mov
imul
dec
push
fsubrp
or
mov
cmp
pop
aad
jg
nop
mov
fwait
sub
sub
add
adc
mov
popf
xchg
fs
out
cs
xor
xorb
arpl
xor
enter
lahf
push
push
lock
inc
in
pop
jns,pt
sbb
xor
pop
out
clc
cmp
lods
das
cmp
jno
dec
jle
sub
mov
lea
std
inc
es
dec
pop
or
sti
dec
ljmp
lcall
jg
mov
inc
sub
sub
dec
mov
inc
lcall
sub
andb
push
dec
stos
inc
or
xorb
out
aas
dec
ret
mov
dec
xor
outsl
pushf
sub
mov
subl
filds
inc
dec
sbb
push
leave
aad
rorl
dec
fisttpll
ret
dec
scas
mov
sbb
outsb
xor
repnz
pop
mov
pop
or
loop
fldt
mov
testl
popf
test
pop
mov
adc
nop
jl
sbb
dec
sub
pop
stos
dec
js
push
shll
add
lods
dec
and
add
pop
movsl
push
jge
scas
and
popf
hlt
xor
mov
inc
xchg
xor
ds
push
cltd
lea
cmpb
outsl
pop
addr16
inc
cltd
xchg
mov
cmp
dec
jo
scas
dec
movsb
cbtw
or
dec
add
lock
mov
push
je
setns
jbe
dec
cmp
in
inc
cmp
mov
mov
fucomp
testb
xor
js
dec
loopne
mov
inc
stos
aaa
dec
pop
out
ds
xchg
xor
xor
mov
or
daa
xlat
dec
sbbb
dec
pusha
shlb
add
dec
add
addr16
xor
mov
lret
inc
mov
add
dec
inc
lods
leave
mov
inc
adc
popf
test
mov
arpl
xchg
out
cmp
dec
cmp
sub
xor
int
pop
inc
outsb
dec
jg
adc
cmp
sahf
mov
jb
mov
rorl
jne
imul
mov
jbe
inc
sub
sub
inc
mov
adc
add
and
sub
mov
pop
jl
sub
fmulp
dec
bound
push
std
out
mov
movsl
dec
cmp
ficoms
inc
shll
dec
addr16
iret
pop
in
add
movsl
imul
jg
jns
lahf
cltd
xchg
dec
iret
jne
fldenv
int3
pop
clc
push
rcr
sbb
mov
pop
loop
adc
aaa
cmp
mov
cmp
int
mov
out
cmc
mov
push
fucomi
flds
dec
insb
mull
cmp
iret
fstpt
and
hlt
pop
xor
aad
es
das
xorl
fidivs
fists
push
add
test
inc
fwait
cld
mov
into
lret
jle
enter
and
sbb
ljmp
dec
cmp
mov
jo
mov
test
adc
mov
inc
dec
xchg
inc
stos
inc
mov
int
sub
bound
adc
scas
mov
lret
xchg
add
pop
add
mov
xchg
dec
daa
add
rcrl
pop
fsubr
and
int3
iret
std
movsl
mov
inc
mov
adc
ficoms
dec
mov
or
test
test
mov
dec
pusha
enter
inc
add
jb
xor
mov
mov
dec
sti
dec
xchg
bound
out
aad
or
jmp
rcll
cmp
push
les
jae
or
aaa
mov
lea
mov
jg
dec
jns
js
push
pop
sbb
je
pushf
fidivrl
lods
sti
testl
xchg
repnz
or
mov
clc
out
mov
mov
pushw
inc
or
sub
in
or
dec
push
scas
xor
and
or
push
cmpsl
cmp
dec
icebp
shll
sub
dec
push
pop
sbb
in
stos
fidivrs
call
inc
into
repnz
stc
dec
cmp
test
mov
out
xor
jb
pushf
and
pop
xor
jo
and
cmp
test
push
mov
lret
imul
or
fwait
call
popa
dec
int
ljmp
xor
mov
fsubl
pop
or
sti
xchg
mov
scas
pop
jae
add
dec
and
std
stos
fs
lea
dec
or
mov
into
and
pop
lahf
pushf
adc
test
mov
pop
dec
push
inc
sarl
xchg
cmp
inc
mov
mov
in
mov
push
shl
or
mov
fsubrl
les
into
and
cmpsl
fmull
sbb
xchg
call
dec
xor
adc
int3
and
addr16
sub
scas
stos
insb
xorb
lret
dec
add
cmpsb
pop
lcall
inc
mov
test
sub
ret
xchg
imul
mov
inc
or
ja
rcll
dec
dec
loope
test
or
aad
cmp
push
pusha
push
adc
sub
adc
std
dec
fsubl
mov
dec
jecxz
xor
pop
jmp
dec
out
rcll
mov
inc
pandn
adc
jb
dec
cmp
bound
cmpsb
outsl
and
cwtl
dec
es
aas
push
xor
dec
imul
sbb
sbb
fdivr
push
lahf
cmp
xor
js
cmp
fsts
sub
mov
cmc
pusha
sub
aas
cmp
mov
push
mov
mov
jle
xchg
pop
clc
mov
mov
pop
gs
cmp
movsl
fwait
dec
push
jle
sbb
iret
add
ds
fldcw
add
add
in
mov
jg
mov
in
out
inc
ret
in
push
push
test
stos
push
repz
loop
mov
js
jle
add
push
cmc
push
xor
xchg
jle
cltd
adc
pop
push
dec
pop
test
add
xlat
jle
xor
pop
mov
mov
jecxz
mov
lahf
loope
loop
in
add
push
inc
mov
lock
push
inc
jb
cmp
jae
mov
jle
xchg
cmp
cmp
mov
shrb
aas
xorb
test
stc
clc
mov
add
sarb
jl
movsbl
xor
cs
inc
cmp
cmp
cmpsl
js
xchg
cmp
clc
jge
mov
adc
test
iret
mov
inc
cmp
enter
inc
or
das
adc
cmp
jb
and
pop
shrb
test
xchg
jle
push
sbb
pop
push
sub
ds
mov
bound
lret
incl
cltd
std
dec
inc
mov
ljmp
movsb
mov
or
sub
cli
push
adc
inc
test
mov
pop
lods
orl
inc
jl
inc
lock
add
cmp
stc
insb
mov
cmc
iret
pop
das
out
push
mov
outsb
fists
sbb
pop
das
data16
ds
sub
loope
nop
andb
add
xor
cmp
inc
cmp
adc
cli
mov
dec
aaa
jl
jne
lret
mov
cmpsb
test
ret
sbb
pusha
lock
int
fcomps
scas
jo
nop
or
xor
mov
jg
clc
xchg
ret
push
and
stos
nop
cmp
repz
out
fs
xchg
dec
idivl
inc
dec
mov
jg
or
fs
mov
xchg
ds
outsb
mov
rcl
cmpl
inc
mov
inc
sbb
sti
jp
sbb
inc
or
or
lret
mov
push
sub
addr16
bound
mov
push
js
ljmp
scas
ds
icebp
push
call
ror
push
cmp
pop
push
movsl
ret
incl
mov
and
sahf
mov
cmc
enter
jg
and
cmc
xchg
adc
xchg
notl
xor
inc
test
adc
mov
pop
ret
fwait
pop
mov
das
add
test
sub
adc
mov
push
jle
loop
xor
sbb
lahf
inc
das
in
jl
mov
imul
jle
pop
cmp
xchg
sbb
int
shrb
dec
dec
pop
ret
or
lds
test
dec
push
scas
sbb
or
and
scas
int
sub
dec
test
orb
adc
loope
in
pop
xor
aaa
add
mov
dec
fisubrs
xlat
mov
dec
push
inc
xor
psubsb
fimull
dec
lods
rorb
xor
into
dec
xor
pushf
sub
decl
xor
es
fisubs
dec
lret
rorb
or
jns
aas
out
cmpsl
insb
cltd
dec
ret
inc
addb
xor
dec
scas
mov
lods
dec
and
call
sahf
or
push
cmp
cmp
add
jbe
add
jae,pn
pop
mov
sbb
adcl
lods
jle
cmc
imull
dec
lret
pop
pop
std
icebp
arpl
lea
jmp
fbstp
sbb
mov
mov
dec
sbb
inc
sbb
out
fucomi
mov
nop
inc
jp
pop
xchg
dec
push
adc
repz
jae
lock
or
gs
jmp
or
pop
sub
inc
pop
adc
dec
sub
or
sbb
xor
mov
imul
pop
dec
dec
inc
leave
sbb
dec
xchg
or
stos
jl
mov
mov
dec
pop
xor
sahf
add
push
popf
in
mov
dec
lcall
mov
pop
stos
jbe
mov
or
cmp
insl
pop
jp
push
aas
inc
rorb
jg
jns
mov
xchg
mov
push
pop
cmpsl
mov
lods
jae
mov
lret
addr16
movsl
xchg
xchg
dec
loop
xorl
push
dec
xor
scas
sbb
push
push
call
jl
sub
pop
idivb
test
add
cmp
inc
dec
mov
in
cmp
mov
adc
or
dec
int3
push
xchg
cli
fisubs
call
fnstsw
and
and
mov
scas
outsb
loope
jb
iret
cmc
cmp
shl
dec
shlb
jmp
dec
movsl
mov
inc
daa
dec
jbe
inc
les
dec
ret
pop
arpl
lret
sub
add
inc
pop
dec
in
dec
add
push
dec
inc
and
lahf
sbb
xchg
icebp
mov
inc
fmull
repz
jle
adc
xchg
gs
adc
mov
aad
mov
push
push
in
pop
sbb
fldl
dec
addr16
cmpsb
or
xor
imul
loop
nop
pop
pop
fst
into
enter
sbb
inc
imul
dec
mov
add
mov
dec
sub
ret
add
pop
cmp
mov
adc
stos
arpl
test
cmp
fisubrs
add
movsb
movl
stos
inc
in
xchg
push
jns
dec
or
shll
push
adc
dec
into
xchg
loopne
mov
jb
xor
sbb
sub
sub
cmp
mov
xor
adc
jbe
push
ficoml
arpl
adc
iret
jp
jae
and
out
dec
dec
xchg
int
repz
in
outsl
aaa
dec
jmp
jo
in
jmp
pop
sub
fisubrs
xor
jl
xchg
loope
mov
into
ja
push
add
or
daa
dec
mov
mov
repz
ret
sub
xchg
pop
into
test
das
cld
mov
out
cmp
mov
sarb
add
and
jle
pushf
js
popf
add
cmp
mov
push
xchg
xchg
jge
repz
jle
ljmp
repz
mov
jbe
das
push
mov
outsl
test
outsb
dec
scas
xor
pop
inc
pop
add
push
pop
sbb
test
mov
dec
xor
cmpsb
mov
dec
pop
pop
mov
mov
dec
stos
mov
dec
repz
jno
pop
add
test
into
int
leave
repz
sub
xchg
push
cmp
mov
cld
dec
xchg
jno
dec
ss
into
fs
jnp
dec
jp
bound
xchg
ret
into
fisttpll
jle
mov
movl
push
cmp
sar
lock
cmpsl
mov
adc
xor
jmp
push
add
adc
das
out
push
xor
inc
popf
call
dec
fcomps
dec
mov
mov
jne
and
mov
dec
cmp
cmp
adcb
adc
inc
sti
mov
pop
pop
dec
lock
add
sub
jmp
test
jns
inc
scas
pop
lods
or
dec
mov
or
dec
inc
cmp
mov
dec
adc
fisubl
push
fists
and
jmp
in
push
xchg
div
jle
dec
xchg
and
addr16
sahf
repz
lret
mov
aaa
into
pop
loope
sbb
cmp
into
repz
insb
mov
mov
pop
repnz
fistps
fs
jecxz
fwait
mov
push
jge
hlt
push
dec
xchg
test
push
fisttps
pop
sub
lods
dec
push
mov
ljmp
dec
test
dec
adc
dec
and
cwtl
ret
jecxz
inc
mov
dec
push
cli
pop
dec
sahf
jbe
icebp
in
sbb
sbb
dec
adc
xchg
dec
add
in
andl
dec
int3
ficoms
mov
notl
ror
lea
jo
loopne
scas
jle,pn
fbld
adc
pop
dec
jbe
icebp
std
fxch
push
dec
int
movsb
sar
call
aam
stc
out
push
sbb
js
xor
push
jge
pop
xor
int3
imul
mov
imul
ss
dec
pop
es
pusha
aam
rdtsc
cmpsb
out
mov
popf
movsl
pop
or
push
sbb
loopne
int3
cmpsl
adc
mov
sbb
lret
fisubs
bound
std
jbe
xchg
loop
jmp
sbb
pop
push
mov
xor
dec
and
xchg
mul
ret
fdivl
xor
push
mov
inc
add
add
dec
mov
sub
dec
lret
cmp
out
cli
inc
mov
fisubrs
loop
adc
in
hlt
ljmp
test
subl
pop
scas
rolb
pop
out
pop
imul
dec
fistl
scas
xchg
mov
cmp
sbb
rol
push
in
sub
in
jge
lret
jbe
in
sub
mov
xchg
jnp
roll
dec
xor
and
leave
ljmp
pop
push
inc
mov
outsb
test
insl
movsb
dec
jne
and
dec
int3
cltd
dec
pop
addr16
rcrb
bound
lahf
in
xor
xchg
mov
fwait
mov
mov
bound
cmp
jecxz
iret
aam
ja
int
jg
pop
cmovl
xor
push
mov
into
aas
hlt
inc
pop
outsl
inc
and
dec
lods
xor
mov
inc
jg
and
or
add
jae
jb
mov
sub
mov
fnstenv
pop
and
mov
gs
jns
jle
lock
push
fs
popa
cmp
jns
dec
fcoml
jbe
xchg
idiv
cmp
imulb
pop
jmp
insl
and
repz
adc
push
or
inc
add
jns
pop
cmp
popl
outsb
dec
jns
fstpt
xchg
gs
notl
lahf
mov
movsl
mov
stc
aaa
mov
jecxz
cmp
xchg
in
popl
jl
mov
daa
cmp
jno
push
dec
aas
fs
cmpl
sub
ret
mov
push
inc
movb
mov
cmp
xor
ficomps
dec
lret
push
jg
mov
inc
shll
into
ffreep
lahf
faddl
dec
ss
insb
push
divb
xchg
dec
xchg
xchg
aad
rcll
mov
orl
imul
xchg
cmp
cmc
loop
aam
dec
dec
mov
or
in
push
ret
push
outsl
sti
add
int3
pop
lea
adc
test
dec
dec
cmc
lret
inc
in
imul
adc
dec
movl
mov
adc
push
testb
cmp
dec
out
mov
or
arpl
push
jb
mov
out
cltd
xor
fcmovnb
in
dec
dec
pusha
fdivrs
lret
pop
sub
das
stos
jno
clc
out
icebp
test
cwtl
lock
cli
and
insb
pop
iret
jle
jns
sub
fstl
je
repnz
shlb
jg
jle
icebp
idivb
insb
xchg
adc
das
pop
mov
jbe
stos
mov
push
bnd
dec
out
sarl
dec
and
jno
les
inc
rcr
dec
pushf
fcmovbe
and
lret
dec
cmp
shll
scas
loopne
sub
mov
mov
ret
pop
xor
xchg
inc
stos
scas
mov
enter
and
int3
cs
jo
inc
jle
dec
mov
sbb
aam
cmp
lret
aaa
sub
jl
jno
mov
stc
gs
xor
fdivl
dec
outsb
pusha
movsb
cmp
test
dec
stos
inc
insl
cs
mov
lea
mov
test
fwait
jp
add
lahf
pop
mov
sub
jb
cwtl
sarb
mov
aaa
ja
aas
jle
and
aaa
sti
mov
adc
aas
dec
xlat
jl
clc
pop
push
ds
aaa
dec
inc
xor
scas
and
aam
bound
push
dec
sbbl
lock
inc
loop
test
scas
cld
gs
in
and
pop
pop
cmpsl
jl
leave
fnstcw
fcompl
faddp
call
out
nop
cmp
test
adc
in
outsb
outsl
sub
insb
ret
call
pop
push
or
fidivrs
adc
out
insb
push
and
out
add
scas
jle
push
pop
cmp
push
out
dec
in
mov
inc
insb
fimuls
imul
in
aas
in
xchg
push
adc
dec
adc
test
cli
inc
push
mov
pusha
popf
inc
dec
out
jle
inc
test
mov
fistpl
mov
mov
mov
pop
loop
into
pop
je
mov
sbb
xor
test
dec
xchg
cmpb
and
pop
cmpsb
inc
daa
push
fadds
repnz
aaa
shll
into
xor
xchg
pop
xchg
cmpsb
mov
out
out
test
cmp
cmp
xchg
sub
xchg
das
repz
stos
adc
adc
mov
jnp
insb
dec
sbb
cld
imul
and
mov
dec
dec
push
insl
sub
cmc
out
dec
gs
scas
jl
idivl
dec
lock
mov
dec
sbb
jmp
and
pause
sbb
mov
scas
xchg
cli
rcr
dec
add
mov
data16
fisttpll
dec
jg
jl
mov
dec
and
mov
adc
or
jp
pop
pop
dec
mov
repz
adc
dec
xor
inc
and
sbb
ret
add
dec
sub
mov
lahf
dec
test
xor
hlt
mov
dec
mov
popa
cmpsl
mov
psubd
data16
cmp
test
dec
push
sbb
sbb
pop
test
pop
cmp
pop
push
ret
adc
in
xor
decl
sub
dec
jo
inc
mov
aaa
aam
dec
ss
into
and
dec
setae
sahf
rolb
pop
xor
mov
dec
adc
mov
into
mov
add
dec
fdivrl
pop
orb
dec
out
ds
add
dec
dec
lds
imulb
mov
sbb
dec
push
movsl
hlt
mov
add
repz
add
xor
leave
dec
jge
mov
ljmp
das
ss
outsl
dec
int3
fidivs
push
adc
sub
adc
pop
jl
pop
pop
mov
cmp
cs
fstpt
mov
cmpsl
sub
add
push
push
icebp
jnp
gs
fincstp
inc
mov
mov
and
fcmovnbe
cmpsl
mov
add
mov
add
movsl
push
dec
idiv
je
pop
push
pop
in
cmp
dec
stos
mov
call
shrb
sbb
dec
adc
cmp
cmp
push
inc
int3
jle
push
movb
dec
fists
cmp
adc
popa
sub
lret
rorl
dec
mov
lea
sahf
inc
sbb
sub
and
jecxz
mov
enter
push
pop
dec
faddl
dec
mov
stos
xchg
sarl
and
mov
es
int
repz
dec
fwait
mov
cmp
jbe
adc
daa
and
aad
enter
xor
mov
cmp
mov
cmp
and
movl
cmp
clc
mov
and
pop
test
mov
fistl
movhps
cmp
out
dec
hlt
xchg
movhps
inc
mov
xchg
xor
stos
fistps
mov
sub
fmul
xor
mov
rcll
lahf
xchg
das
ds
fidivrs
iret
push
dec
sub
iret
shll
jl
sub
shll
cmp
cmp
fistps
test
inc
and
cmpsb
jo
inc
pop
pop
jle
add
cld
cmc
dec
lahf
loop
fwait
out
inc
jge
insb
pop
add
mov
mov
shlb
push
bound
dec
sahf
mov
and
cmp
push
dec
decb
cmc
adc
aam
dec
pop
dec
jp
xchg
movsl
cld
dec
push
imul
xor
shl
inc
or
popf
test
jo
out
dec
push
pop
and
or
les
scas
shrb
push
dec
mov
leave
inc
sbb
adc
popa
jp
fchs
xchg
dec
mov
jge
imul
jl
dec
faddp
out
xchg
std
out
dec
push
inc
popf
pop
xor
outsb
aas
dec
fidivrs
fcoms
hlt
sub
roll
aam
enter
shrl
jg
adc
push
mov
ja
jo
or
xchg
xor
xor
decl
insl
cmp
dec
xchg
mov
enter
repnz
xor
stc
push
mov
cmp
scas
sarb
mov
repnz
adc
jl
gs
pop
loopne
mov
ret
dec
jle
ret
pop
add
dec
mov
push
nop
repnz
lcall
pop
dec
int3
fcomi
out
mov
pop
loop
mov
aad
lahf
arpl
into
into
loope
fnstcw
stc
dec
sub
in
push
movsb
dec
dec
push
mulb
mov
js
outsb
repnz
or
jge
push
mov
into
pusha
test
dec
into
mov
pop
addb
push
fidivrs
mov
rclb
and
mov
rol
push
xchg
lods
push
add
push
sbb
mov
sbb
out
xchg
dec
pop
dec
stos
lods
repz
xor
add
xchg
cmp
dec
out
fnsave
jne
inc
ficoml
jbe
les
dec
scas
mov
clc
rclb
fs
sub
into
dec
pop
arpl
mov
sbb
adc
mov
adc
mov
aaa
cmc
movsb
ss
ja
dec
pop
adc
push
in
jno
jb
jbe
dec
adc
popa
pop
dec
mov
loopne
cmp
xchg
fs
push
scas
xchg
jle
dec
inc
das
mov
sahf
jp
rcr
bound
iret
es
fisttps
push
mov
jecxz
push
add
dec
inc
push
cmp
jl
fimull
cli
pusha
subb
push
lret
inc
addl
dec
jg
add
push
pop
aaa
jbe
adc
lea
popa
orb
mov
xlat
cltd
pusha
pop
sbb
cmp
dec
add
fdivrp
sbb
ljmp
stos
jl
add
push
ss
cmp
push
jl
adc
xor
into
jno
dec
xor
cmp
and
sub
cmp
sub
dec
mov
jecxz
pop
pop
mov
inc
addr16
xchg
adc
into
jl
mov
data16
lret
mov
sub
cmp
mov
pop
xor
jae
push
cmp
clc
add
test
fwait
bound
idivl
mov
inc
push
mov
lcall
stos
fdivrl
popa
ret
xchg
icebp
jl
xchg
mov
pushf
dec
mov
imul
lret
add
test
aam
adc
dec
xor
repz
sbb
fs
mov
push
push
int
popf
fdivs
pop
int
jae
cmp
aaa
lock
test
outsb
daa
xchg
push
pusha
dec
out
adc
rcll
scas
sbb
ja
int
dec
push
test
add
insb
pop
jbe
in
in
mul
arpl
lcall
fiadds
dec
jl
mov
fisubl
lcall
and
loope
push
mov
mov
dec
mov
sbb
lods
pop
maskmovq
testl
and
ror
dec
sbb
inc
or
add
out
pop
pop
dec
idivb
mov
jno
mov
push
sub
mov
js
in
inc
push
cmp
cmp
xchg
test
popa
xchg
shrb
adc
cmpsb
push
out
cmpsb
xor
add
lahf
xchg
fmulp
ja
flds
adcb
aas
out
cmp
pop
pop
add
sub
adc
repnz
push
test
sub
ja
leave
pop
sub
ljmp
mov
mov
insb
dec
push
mov
nop
jle
ficompl
xor
aad
movq
rolb
pop
jle
cs
inc
mov
sub
dec
incl
test
js
push
jmp
or
lods
mov
or
dec
pop
pusha
ret
insl
inc
into
fs
mov
dec
repz
sub
call
inc
jnp
push
pop
inc
outsl
pop
push
add
outsl
inc
dec
pop
xor
cmp
into
scas
out
daa
pop
hlt
int
dec
and
mov
popa
idivb
dec
fwait
jmp
dec
inc
dec
imul
dec
xor
sbb
dec
pop
or
in
push
or
enter
das
cmp
aaa
or
xor
test
ja
and
and
jge
dec
ds
push
out
testl
es
pop
jae
enter
fs
and
push
xchg
sub
ja
and
mov
aas
dec
pop
add
orb
pusha
cwtl
test
scas
cmp
insb
into
cld
sub
push
mov
jno
lock
dec
adc
popl
xchg
pop
movsl
jecxz
aas
and
or
aam
pop
xchg
mov
pop
inc
fisubrl
ret
jecxz
jl
jo
outsl
aad
fdivrp
lock
dec
mov
xchg
cmp
dec
mov
dec
pop
gs
pusha
or
das
ja
cmp
jl
add
dec
inc
xchg
xor
pop
cmpl
negb
push
xchg
dec
aaa
shlb
mov
dec
cld
cmp
jo
add
sbb
insl
sbb
mov
push
aaa
mov
push
out
mov
stos
jle
cmp
js
xchg
pop
cmpsb
dec
loop
mov
mov
mov
pop
scas
sbb
dec
mov
dec
ret
sub
jge
add
ret
movsl
ret
stc
mov
or
mov
dec
shrb
dec
out
enter
pop
jnp
nop
add
jo
test
xor
push
xor
or
je
add
mov
cmp
mov
popf
cmp
sub
out
sbb
aas
jecxz
mov
fsubl
dec
fstpt
pop
pop
mov
outsb
lods
js
imul
iret
sahf
dec
xor
pushf
pop
mov
inc
dec
adc
stos
aam
scas
inc
dec
pop
btr
jl
fimuls
dec
jne
in
pop
fbstp
into
jmp
popa
imul
mov
pop
sahf
sbb
inc
xchg
xor
call
sub
adc
cmp
fwait
dec
call
es
mov
add
int
out
inc
rcr
popf
fadds
adcl
pop
and
xor
pusha
mov
arpl
pop
insl
ljmp
add
aad
jbe
fs
mov
dec
stc
mov
nop
inc
es
neg
mov
dec
or
call
add
pop
shrl
jno
lret
aaa
test
mov
push
pop
adc
sbb
pushf
daa
outsb
or
cs
fsubrs
test
xchg
lods
into
jg
adc
ret
dec
cmp
inc
sti
mov
data16
out
cmp
sbb
ds
inc
mov
dec
dec
fisubs
mov
testb
fildll
pop
jg
mov
sub
loop
mov
pop
aad
test
dec
xchg
cmpsb
in
loop
popa
and
mov
mov
add
jnp
or
es
aaa
jl
ja
rcrl
pop
repnz
lea
lods
dec
xlat
push
dec
xchg
cld
out
fs
mov
pop
pop
cmp
loope
cmp
test
and
jb
call
push
in
adc
mov
cmp
xor
adc
adc
jnp
pop
inc
cmp
lahf
insl
adc
and
fildl
dec
into
gs
lret
cld
push
dec
sarb
aas
jbe
cmp
xchg
xor
jge
popf
fmulp
in
js
pop
dec
loop
sub
aam
out
or
and
movl
dec
es
das
cwtl
sub
pop
jl
fs
fwait
in
cmpsl
ds
mov
rclb
xlat
fwait
push
push
hlt
dec
inc
cltd
push
lods
bound
cmp
daa
cmpsl
movsl
cmp
or
outsb
push
out
rclb
lahf
addr16
out
push
dec
pop
popf
sub
and
jb
pop
mov
xchg
clc
xlat
int3
test
mov
xor
call
dec
imul
insl
jo
shll
dec
dec
lcall
dec
sbb
add
adc
push
push
pusha
andb
xchg
mov
test
xchg
and
add
notl
sub
fidivl
and
sub
sub
dec
mov
inc
into
enter
inc
leave
xor
mov
shl
dec
outsl
sbb
sbb
dec
test
push
fidivrs
mov
gs
dec
mov
ljmp
rorb
popf
pop
mov
sub
pusha
lods
xchg
jp
popa
push
and
and
sub
aad
adc
mov
inc
push
mov
stos
fwait
je
stos
lret
jg
xchg
loope
or
mov
lods
jle
mov
lret
fbstp
adc
cs
fidivs
adcb
dec
repz
mov
xchg
sbb
loop
mov
add
xchg
enter
jg
test
test
inc
leave
and
cmpsb
fidivrl
add
sub
inc
cmp
idivb
roll
loop
jmp
dec
push
push
pop
pushf
imul
and
pop
cltd
xor
inc
xchg
mov
push
cltd
ljmp
dec
inc
faddp
dec
lret
inc
jl
iret
push
insl
mov
jp
gs
movsb
pop
iret
add
sbb
fdivr
dec
sbb
push
push
decl
mov
insl
adcb
cmp
jle
int
sub
pop
lock
je
sub
pop
cltd
lcall
scas
pop
repz
jnp
test
aaa
jns
adc
push
out
lcall
add
cmp
inc
dec
inc
mov
mov
scas
jg
insb
lret
repz
add
mov
bound
daa
fisubl
int
nop
jl
push
jae
cmp
lret
xor
xor
push
jns
lods
xchg
into
lods
xlat
cmp
cpuid
lock
ret
insl
movsl
pushf
aam
dec
jg
mov
data16
sub
in
and
imul
in
adc
int3
inc
inc
mov
lea
insl
sti
outsb
mov
dec
lds
nop
dec
pop
enter
jo
dec
rcll
cmc
mov
out
dec
pop
lret
or
pcmpeqd
jecxz
cmp
je
xchg
jne
pop
popa
dec
fs
popf
cmp
push
movsl
dec
in
sbb
adc
sti
dec
lret
fwait
and
jle
push
inc
rolb
xor
lods
testl
dec
adc
mov
xor
dec
shll
mov
cmp
std
lds
inc
push
fmull
popf
es
jmp
dec
mov
daa
into
xor
loopne
or
pop
dec
repz
jle
adc
pop
scas
scas
jbe
lret
dec
mov
dec
xchg
mov
mov
pop
cmp
popa
dec
xor
push
pop
xchg
movb
mov
lea
mov
cmp
dec
adc
ret
push
xor
dec
loop
fldl
sbb
std
mov
test
dec
fisubs
icebp
sbb
mov
add
dec
add
scas
dec
sub
dec
iret
xchg
jecxz
mov
pop
inc
aad
sub
mov
dec
je
xchg
outsb
jo
dec
inc
test
mov
dec
ficoms
fcmove
mov
popf
fcoml
dec
lret
and
jmp
int
loope
mov
jg
jns
in
sti
mov
mov
sarl
dec
call
int3
ds
lds
sar
ss
divl
cmp
mov
mov
mov
pop
in
fcmovnb
dec
lods
sub
int
outsl
push
lahf
xchg
fdivl
scas
mov
sar
cmpsl
dec
sar
lret
dec
loop
fadd
aas
mov
dec
imul
loopne
jle
dec
xchg
mov
insl
and
sbb
dec
and
dec
dec
mov
cltd
aad
inc
jl
dec
push
pop
fdivrp
imul
xchg
cmp
dec
nop
divl
adc
sub
jnp
dec
cmp
mov
ja
cs
cwtl
adcb
jl
add
adc
jne
aaa
lods
add
push
das
cmp
add
pop
xchg
or
mov
xor
lret
jmp
popf
xchg
outsb
hlt
outsb
dec
push
clc
dec
je
iret
push
stos
insb
push
dec
jg
lret
mov
inc
xchg
out
pop
test
push
xlat
imul
pop
out
call
cmp
lods
pop
vmwrite
sub
scas
imul
mov
test
nop
push
and
mov
sbb
jg
test
imul
sbb
lods
or
repz
arpl
pop
iret
sbb
dec
adc
fs
ljmp
push
push
out
aad
out
jle
in
jg
cmp
enter
dec
cli
test
movsb
pop
mov
and
addl
cld
pop
xchg
xchg
dec
rcr
and
mov
adc
shlb
jbe
push
adc
lahf
inc
jle
loope
xchg
jl
adc
lret
fcoms
xchg
mov
pop
xchg
cs
stos
int3
ja
mov
repnz
xchg
sub
scas
sub
stc
inc
inc
cli
pop
add
sbb
movl
xchg
sahf
cmp
repz
pop
lret
iret
mov
test
jle
jnp
pop
push
ljmp
add
dec
mov
hlt
ljmp
cwtl
inc
inc
in
add
mov
and
dec
inc
insl
ret
cmp
cmp
icebp
out
inc
in
dec
push
xchg
fwait
outsb
xor
pop
or
fidivs
adc
popf
test
xchg
push
mov
js
mov
out
push
shll
lret
test
adc
cmpsl
mov
mov
dec
or
lods
inc
dec
xor
xor
scas
ficoms
leave
xchg
cmpsl
test
xor
iret
xor
cmp
shrb
call
js
stc
inc
xchg
push
pop
repz
in
lock
repz
je
scas
mov
jle
dec
and
cmp
mov
jo
jmp
int
pop
cli
and
inc
push
jle
mov
mov
mov
dec
add
mov
sbb
sub
xchg
ficoml
loop
clc
ror
pop
pusha
insb
popa
add
dec
jg
and
cmp
daa
add
jle
scas
cmp
shrb
jp
popa
pop
mov
xor
cs
pop
inc
sub
cmpsb
push
sbb
outsb
lahf
jns
les
xor
loopne
dec
xor
into
mov
adc
mov
cmp
mov
add
das
sarl
js
push
mov
push
xor
out
dec
sub
popa
dec
push
mov
cmp
adc
dec
or
inc
cmc
dec
mov
xchg
dec
mov
loopne
dec
pop
inc
add
mov
rcrl
xchg
je
push
lock
pop
jle
ljmp
dec
jg
pop
jno
out
mov
push
mov
repnz
scas
pop
mov
mov
cmc
ss
in
cld
xchg
cmpsl
out
mov
stos
xor
subl
mov
rolb
dec
and
ja
dec
dec
arpl
pop
call
iret
andl
sub
mov
imull
push
scas
dec
mov
pusha
ljmp
xor
sti
xor
add
sbb
and
sub
xor
sub
xchg
or
dec
flds
rcll
jnp
and
push
dec
test
pop
dec
lods
jecxz
test
add
mov
mov
xlat
sbb
adc
dec
roll
aas
mov
xor
mov
dec
cmp
xor
push
inc
mov
fimuls
js
push
test
jnp
adc
mov
scas
cltd
jecxz
dec
add
cmp
dec
or
frstpm(287
mov
inc
int3
data16
push
sub
movsl
xchg
imul
jmp
pop
push
push
out
and
fidivrs
pop
or
pop
mov
mov
pop
jecxz
int
push
out
mov
fstl
push
fs
mov
or
shl
lock
out
out
push
mov
jl
add
pop
lar
xor
pop
loope
push
pop
add
in
addb
add
jg
sub
dec
repnz
cwtl
push
add
cmpsl
lcall
movhps
cmp
push
pop
sti
cmc
mov
sub
icebp
aas
pop
out
in
pop
jbe
aas
aam
adc
jecxz
sar
dec
push
ret
scas
cmp
loope
clc
out
inc
pop
mov
mov
jmp
mov
dec
fnsave
adc
in
int3
dec
jbe
test
pop
cld
in
insb
es
movsb
in
test
pop
or
mov
xor
sub
dec
imul
and
cli
ror
pushf
jae,pt
mov
test
mov
dec
mov
dec
aam
sub
mov
jecxz
dec
dec
mov
mov
stos
out
mov
leave
sbb
adc
push
jge
xor
mov
mov
cmp
xchg
and
dec
or
jecxz
imul
das
jae
dec
shr
add
scas
xor
loope
dec
mov
lret
jle
mov
dec
inc
into
test
dec
push
addb
mov
sub
dec
add
and
data16
imul
jbe
mov
dec
xor
in
dec
add
xchg
adc
inc
dec
jg
cmp
mov
std
cmpsl
xor
dec
xchg
jne
inc
dec
bound
jo
sub
dec
rcll
xchg
ds
and
sbb
dec
rolb
push
cld
pop
incb
inc
pop
jl
das
into
out
lods
adc
ja
mov
pop
in
cmp
nop
adc
das
les
inc
pop
int
adc
push
push
or
xchg
imull
xchg
or
cmc
stc
push
mov
mov
mov
aaa
jl
les
xchg
sub
fdivs
inc
and
sbb
scas
dec
les
push
sbb
ret
pcmpgtd
xlat
arpl
arpl
xor
out
jp
add
inc
adc
arpl
mov
pop
sti
pop
shll
repz
imul
rcrl
sarb
add
lea
aad
push
and
out
sarb
sbb
dec
mov
pop
jg
push
mov
fs
mov
mov
push
cmp
aam
cwtl
jg
sub
push
push
adc
dec
mov
ljmp
leave
pop
xchg
dec
push
aam
arpl
std
add
aas
lret
dec
les
cltd
fidivrs
push
stos
hlt
into
lahf
pop
cmpsl
pop
popf
sub
outsb
dec
out
std
mov
das
lea
pop
add
dec
xor
sbb
dec
push
std
xor
mov
iret
add
loop
setle
aas
push
lds
sub
stc
xor
dec
popf
divl
rorb
xchg
nop
lahf
mov
inc
adc
push
push
xor
scas
push
jo
mov
xchg
pop
dec
call
sti
dec
fstps
sub
xchg
dec
jle
mov
bound
push
cmp
dec
pop
repnz
std
xchg
aas
fs
into
lcall
data16
inc
cmp
fmuls
outsb
add
orb
mov
int
out
cwtl
je
shll
dec
ja
inc
cmpsb
mov
roll
dec
maxps
insb
adc
dec
stos
loopne
and
test
xor
pop
std
jle
jbe
cli
cmp
mov
lods
cmp
int
push
movsb
pop
cmpsl
and
sub
xlat
lods
pop
dec
sub
loopne
mov
pop
mov
repz
fists
inc
loope
cs
out
sub
add
jle
xlat
dec
sub
add
js
cmp
adc
iret
lret
cmpsb
movl
faddl
pop
jne
or
add
mov
fmuls
lahf
lds
jbe
push
imul
or
dec
inc
lds
xor
in
mov
adc
pop
mov
xchg
adc
test
das
dec
cwtl
ret
push
fstpt
adc
xor
mov
int
push
dec
in
xor
test
pop
and
outsb
and
adc
ja
adc
dec
outsl
movsb
inc
insb
push
jg
cmp
inc
dec
sub
fildll
adc
or
imul
test
jge
dec
and
xorl
aaa
push
das
jno
aas
fsubrs
adc
sbb
out
sbb
pop
jne
imul
push
mov
nop
dec
inc
jo
or
out
loope
dec
shll
xchg
pusha
cmp
dec
fisubs
scas
ja
mov
adc
sub
push
sub
je
es
aam
and
dec
fcoms
loopne
leave
dec
adc
repnz
cmp
pop
xchg
aaa
dec
or
fmul
jbe
ret
int3
mov
adc
cld
lds
mov
jl
sbb
xchg
dec
or
pushf
fcompl
cmp
sub
dec
push
lret
and
jl
je
dec
movsl
movsl
push
cmp
dec
lahf
enter
xchg
lahf
pop
lret
lds
jb
inc
popa
adc
lods
out
stos
push
jno
jl
xor
cmpsl
cmp
xor
es
and
dec
cld
jle
jecxz
testb
clc
lret
sub
xchg
cmpsb
rorb
mov
mov
loope
pop
inc
test
lock
in
pop
pop
pop
xor
xor
loope
cs
hlt
push
dec
mov
push
addb
jns
dec
xchg
add
mov
insl
fildl
stc
inc
loopne
fs
jne
clc
movsb
push
cmp
bound
mov
sbb
sub
cmp
mov
mov
jmp
out
out
stc
dec
test
dec
xchg
test
lret
xchg
outsl
mov
pop
and
lcall
jo
jg
xlat
mov
test
fisttpl
jge
mov
sub
dec
jnp
sub
icebp
mov
arpl
or
cli
pushf
out
test
dec
push
mov
pusha
dec
dec
stos
mov
dec
call
push
xlat
aad
mov
dec
pop
xor
inc
mov
fisttpl
mov
je
adc
mov
and
or
cmp
mov
push
movsb
adc
inc
push
into
ds
dec
sbb
in
dec
pop
sub
cmp
lret
inc
mov
frstor
dec
arpl
mov
loopne
pop
in
push
repz
jmp
pop
jmp
jne
shll
dec
cli
pop
shrl
jnp
xchg
sub
mov
push
pop
dec
pusha
les
stos
sub
dec
pop
sbb
aam
mov
xchg
outsb
imul
cltd
loop
push
and
mov
js
imul
inc
mov
jecxz
push
inc
jl
out
xor
mov
cmc
lahf
jle
xor
outsl
es
fadd
aam
outsb
xchg
aas
adc
push
in
mov
sbb
sbb
ss
jle
sbb
inc
in
xchg
jge
mov
lahf
notl
fstps
loop
es
jl
dec
scas
jl
adc
xchg
adc
mov
dec
jp
sub
cmp
inc
out
inc
xchg
decb
in
dec
das
mov
xor
das
adc
push
or
inc
movsl
xchg
in
incl
js
out
adc
xor
mov
mov
mov
sbb
jl
sub
shlb
adc
cltd
pop
mov
sub
mov
test
clc
jbe
xor
fwait
pop
jbe
nop
call
jmp
sbb
lcall
mov
push
add
cs
mov
cmp
push
mov
mov
dec
push
push
loopne
push
and
into
dec
iret
negb
and
in
iret
out
dec
sti
inc
rcrb
fcomps
js
push
bound
mov
jbe
daa
jecxz
xchg
iret
jb
lahf
mov
mov
ret
repz
arpl
pop
inc
fimull
mov
in
out
xor
push
loopne
xor
stos
pop
add
push
jge
add
mov
sub
ljmp
shll
inc
pusha
dec
pop
push
pop
lahf
rclb
dec
mov
divl
pop
inc
dec
xchg
pop
cs
and
lahf
inc
inc
dec
btr
test
jne
in
sbb
mov
mov
stos
or
fnstcw
push
cmp
dec
xor
lods
or
ds
mov
jmp
outsl
sarb
sbbb
dec
push
or
cmc
lahf
mov
sbbl
jnp
nop
jno
arpl
mov
fnsave
hlt
jecxz
mov
dec
repnz
subl
fcoml
mov
xor
pop
test
inc
mov
mov
push
aad
es
aas
or
fsubrs
push
sar
scas
cmp
push
push
testb
das
out
rcrb
fwait
into
cmp
sub
cmpsl
in
out
gs
mov
pop
mov
outsl
vpblendmq
push
or
dec
insb
lret
cmp
loope
divps
dec
jns
sub
cmpsb
movsl
sub
in
and
cmp
dec
jl
mov
aas
pop
jns
adc
cmp
push
arpl
sub
mov
icebp
mov
inc
test
insb
imul
in
inc
idivb
loop
fwait
pop
push
pop
sub
jne
push
shlb
jns
mov
sub
xor
clc
adc
stos
movsl
aas
xchg
out
sti
loop
in
dec
push
repnz
push
leave
arpl
add
into
dec
iret
and
cmpsl
xchg
add
aaa
add
out
mov
cld
mov
cmp
cwtl
push
das
inc
out
mov
sub
jl
scas
xchg
arpl
mov
sub
push
rorl
fidivrs
mul
xor
sub
shrb
les
aam
dec
mov
pop
push
leave
push
or
or
jp
mov
mov
out
sub
fidivs
or
sbb
into
popf
fsubrl
mov
xchg
jl
js
inc
in
mov
cmpsb
mov
push
pop
push
rorl
rclb
arpl
dec
mov
movsl
aam
push
inc
testl
inc
rorb
cmc
cmp
imul
or
sub
ds
subl
outsb
dec
add
and
mov
rcll
dec
push
adc
movsb
pop
stos
dec
popf
aad
adc
ja
sbb
adc
mov
movsb
cmp
mov
pop
into
jae
sahf
test
mov
xchg
repz
icebp
in
mov
push
jg
sub
int
jle
iret
sarl
sub
into
shl
mov
pop
subl
xchg
incl
add
pop
movsl
fs
ss
scas
dec
mov
repnz
push
cltd
push
dec
in
jns
lret
jle
mov
xor
sbb
arpl
dec
xchg
add
push
adc
dec
pusha
movsb
jae
pop
xor
cmp
loop
inc
jae
push
int3
inc
aaa
push
mov
jae
mov
jg
icebp
nop
jecxz
push
rclb
lods
pushf
js
cmc
xor
js
pushf
or
repz
fwait
cmpsl
clc
pop
stos
jg
das
push
jg
lret
dec
xchg
add
mov
jne,pt
pop
jle
adc
jns
into
mov
dec
mov
dec
cmovge
popf
dec
adc
and
sbb
mov
aad
push
adc
call
inc
mov
push
lds
cmpsb
add
push
adc
mov
test
lret
pushf
cltd
dec
push
test
int3
dec
inc
push
in
mov
sub
insb
pop
and
dec
cmpsl
xlat
mov
hlt
adc
xchg
aas
lret
mov
or
xor
add
dec
jns
adc
push
cmp
inc
mov
adc
sub
lock
dec
je
pushf
std
lods
jno
dec
mov
sub
dec
ret
adc
cmp
dec
mov
xchg
frstor
lret
das
xlat
mov
dec
jo
fwait
pop
mov
dec
mov
add
dec
aam
lods
jae
daa
push
jl
jnp
and
je
cmp
fists
mov
mov
fisubrs
lret
scas
sti
dec
jae
rcrb
out
dec
xor
aam
pop
jle
dec
pop
outsl
stc
cmp
insb
out
dec
mov
pop
out
or
hlt
push
data16
fmuls
loopne
pop
mov
jb
enter
or
dec
test
cmpl
and
scas
cmpsb
mov
sbb
xlat
jne
lock
dec
movd
mov
push
cmp
repz
ret
sbb
or
clc
and
std
dec
es
jle
movsl
push
mov
cmp
pusha
jg
rcll
jbe
inc
mov
jne
stos
xchg
sub
das
cmp
dec
enter
pop
mov
mov
mov
stos
aad
dec
fsubl
sub
inc
push
cmp
adc
dec
xchg
inc
jae
jns
mov
mov
add
mov
jmp
movsl
subb
mov
ret
subl
inc
nop
pushf
mov
dec
push
out
and
daa
jno
inc
mov
adc
xchg
xchg
and
outsl
sbb
push
aad
scas
push
push
imul
xchg
mov
in
addb
mov
stos
dec
sbb
add
lcall
dec
push
mov
loopne
les
add
pop
push
inc
movsl
push
pop
xorl
add
xor
jnp
sbb
push
cmp
pop
fs
js
xchg
jle
sub
mov
pop
push
mov
bound
mov
lret
movsl
into
jge
loop
pop
int
cwtl
ja
sahf
dec
rep
mov
push
push
mov
inc
dec
xor
mov
dec
enter
inc
jne
push
addr16
fisubl
cmp
outsb
cmp
pop
outsl
fimuls
cmp
dec
fucomi
jne
adc
jecxz
fsubrl
lahf
cmpb
iret
inc
out
shrl
dec
jecxz
test
pop
pop
cmovle
sub
adc
int
mov
sub
and
loope
dec
ss
jns
mov
mov
dec
cmpsl
pop
loopne
sbb
orl
shrl
inc
scas
sbb
icebp
fcomps
rorb
clc
negb
and
iret
push
adc
mov
scas
sub
dec
add
xor
stos
test
xor
add
xchg
arpl
dec
mov
inc
es
fucomi
add
cwtl
cmp
jmp
out
lock
scas
imul
fildl
and
dec
dec
inc
pop
jb
out
jne
dec
fs
sub
jo
mov
shlb
imul
jmp
int
pop
dec
mov
mov
rol
cmc
mov
bound
scas
mov
loop
fstl
dec
xor
dec
subb
or
mov
add
cltd
pop
dec
mov
jg
lcall
push
push
lahf
int
stc
jbe
adc
xchg
mov
xchg
or
repnz
jg
add
movd
dec
fidivs
adc
and
fwait
jnp
mov
dec
out
pop
in
sub
repz
dec
xchg
rol
dec
int
sub
dec
sub
lcall
mov
rcll
in
cmp
xchg
fdivr
lods
mov
adc
cs
out
push
mov
pop
xchg
repz
sub
icebp
add
cmpsl
ret
dec
pop
pop
in
sbbb
shll
aad
push
lea
notl
outsl
add
xor
push
shlb
jg,pn
sub
sub
icebp
sti
mov
jp
sub
dec
push
cwtl
jmp
dec
shrl
loop
or
push
fwait
cmp
iret
and
test
jl
cmp
ficoml
xchg
jl
fwait
push
int3
js
or
rcll
popa
jae
adc
sub
push
add
addr16
adc
pop
lret
push
stos
cli
mov
outsb
push
xor
inc
ror
cmp
iret
dec
aas
leave
aaa
cmpsb
add
or
aas
dec
cmp
test
jl
daa
rorb
push
fidivrl
dec
or
jle
mov
scas
pop
fcoms
mov
mov
addr16
mov
mov
sub
pusha
pop
dec
cmc
adc
dec
xchg
loope
mov
dec
cmp
push
sub
xor
inc
push
insb
repnz
jg
fstl
mov
subl
jmp
bound
xor
dec
in
mov
jcxz
xor
mov
ljmp
push
mov
adc
loope
adc
je
cmp
jmp
jno
jno
xor
setae
daa
cltd
dec
fwait
xchg
cmpsb
nop
stos
nop
das
bound
lock
mov
mov
push
pop
outsl
lret
dec
cmpsl
cmp
iret
sbb
xor
imul
push
lods
add
inc
pop
mov
jl
and
ja
dec
data16
jnp
xor
daa
xchg
or
inc
test
xchg
mov
jle
fidivs
dec
jnp
popf
lods
stos
decb
jbe
outsl
fisubl
lahf
outsb
aaa
out
orl
gs
sti
imul
cltd
adc
paddw
jne
sahf
scas
inc
es
dec
icebp
xor
mov
dec
lods
mov
xchg
adc
incb
jle
loop,pt
ss
js
xor
sbb
movsb
fisttpll
and
icebp
daa
mov
dec
jg
fcmovnu
mov
test
inc
or
cmc
jge
push
lods
xchg
xchg
iret
sbb
adc
xchg
dec
movsb
mov
dec
aas
das
jb
mov
data16
enter
test
xchg
lcall
mov
int
xchg
pop
jg
pop
popf
out
cmpsl
xor
dec
push
push
xorl
pop
dec
add
and
dec
sbb
imul
and
ss
sti
inc
push
dec
fistpll
add
ror
fs
cltd
testb
out
ror
mov
and
or
or
enter
lock
aas
test
mov
cmp
clc
iret
mov
and
into
mull
enter
cs
movsb
rcrl
and
lods
push
and
push
jb
icebp
pop
xor
xchg
adc
and
cmp
ficompl
dec
lods
rcl
add
cmp
push
fidivs
xlat
push
rcrb
dec
insb
jo
and
or
loop
jp
jb
sub
scas
pusha
test
xor
dec
sbb
mov
lds
and
je,pt
lods
out
mov
ds
jmp
dec
insb
jae
xchg
das
test
sbb
shlb
mov
dec
lret
test
push
xchg
jmp
dec
ret
iret
dec
stc
arpl
mov
into
inc
mov
cmc
mov
dec
add
adc
mov
fwait
dec
dec
ss
fidivl
sbb
xchg
dec
not
rcll
sbb
jg
dec
jge
int
aad
mov
roll
mov
imulb
jle
pop
push
lock
sbb
sub
dec
pop
insl
jg
xchg
sbb
test
and
pop
gs
aam
xchg
jg
das
adc
sbb
dec
dec
loope
mov
inc
dec
xor
push
repz
mov
mov
jle
xchg
jbe
jo
stos
cwtl
dec
cmpsl
mov
pop
js
add
add
jnp
repnz
add
pop
pop
jmp
push
mov
mov
dec
push
cs
cmc
outsl
iret
push
mov
nop
cli
out
xchg
push
test
sbb
adc
inc
call
fdivl
sbb
leave
xchg
adc
dec
jge
add
mov
iret
jle
daa
dec
imul
push
les
xchg
dec
dec
mov
pminub
popf
out
cs
aad
xchg
or
dec
jnp
sub
movsl
dec
adc
dec
sub
sub
loopne
cmp
mov
cmp
dec
dec
xor
adc
jbe
xor
push
inc
push
sub
xor
dec
lods
addb
ficompl
inc
mov
test
sbb
mov
pop
stc
dec
ret
or
inc
testl
jno
dec
or
adc
pop
data16
dec
inc
in
test
scas
mov
xor
sub
mov
loopne
jae
das
fnstcw
ror
and
adc
lahf
fisttpl
shlb
fidivrs
ret
jg
cmp
pop
lret
xlat
adc
dec
cmp
inc
cld
cs
add
push
adc
inc
push
faddl
jmp
xchg
or
pop
sbb
inc
fadds
jl
push
and
adc
rorb
shrb
push
dec
test
push
push
adc
jg
ds
cmp
or
cmp
in
jp
fxch
lods
fisubl
dec
dec
cmp
pop
or
rorb
jl
test
inc
outsb
or
sub
sub
scas
mov
fisttpl
adc
inc
inc
or
das
push
js
dec
xchg
push
cmp
movsl
inc
dec
xchg
jg
in
fldt
and
mov
mov
inc
inc
dec
xor
aaa
mov
add
in
pop
test
jb
ds
bound
sub
and
jg
in
xchg
xchg
jp
outsb
inc
mov
ret
jmp
xchg
dec
mov
movb
scas
sub
inc
out
jae
sbb
dec
aaa
mov
pop
fs
inc
xchg
jbe
lret
jb
je
div
push
mov
scas
pop
and
fdiv
sub
sbb
mov
inc
ljmp
fisttpl
movsl
lock
pop
insb
fistpll
cmc
mov
aam
cmpb
stos
lret
ja
pushf
xor
pop
inc
mov
cmp
dec
scas
jmp
cmpsl
and
paddq
sbb
out
dec
cmp
adc
jl
stos
cmpsb
testb
jbe
les
ljmp
dec
imul
dec
mov
mov
mov
inc
push
push
lods
inc
js
sbb
add
loope
negl
push
cmp
std
sbb
push
jp
inc
sahf
jmp
test
lret
pusha
movsb
jge
jnp
loop
adc
cs
dec
dec
jo
outsb
in
xchg
lods
pop
call
inc
jbe
cli
imul
jle
aaa
rcll
ss
insl
inc
mov
inc
mov
push
dec
loop
jle
mov
jo
shl
xchg
in
mov
data16
dec
jp
test
int3
or
fs
inc
xchg
mov
xor
mov
dec
pop
and
ljmp
lcall
jnp
add
fimuls
jg
in
ljmp
dec
rclb
mulb
arpl
xchg
insl
ss
jmp
pop
fnsave
mov
sbb
fstps
cmp
ja
fmul
cltd
mov
dec
add
push
inc
scas
push
loopne
push
add
sahf
adc
mov
push
addr16
cltd
sub
xchg
pop
inc
pop
orl
adc
sbb
add
fldenv
sub
add
cs
inc
sub
daa
inc
mov
pop
lock
jl
clc
inc
std
sarb
mov
push
test
push
dec
push
push
and
fists
xlat
orb
les
ror
jmp
sahf
xchg
test
sub
sbb
pop
fwait
out
mov
ds
loope
in
push
xchg
mov
jg
mov
add
sub
and
cli
dec
adc
pushf
push
jmp
notb
sbb
aam
mov
jle
sub
out
aas
iret
jg
xor
mov
std
in
clc
cwtl
push
dec
mov
fcomip
div
cmp
sub
into
mov
pop
dec
push
sar
jmp
inc
outsl
jle
mov
mov
stos
lods
cmp
mov
or
dec
std
dec
xchg
or
adc
mov
jnp
decl
or
pusha
enter
and
ret
inc
dec
adc
xchg
xor
mov
dec
scas
fcompl
pusha
sub
ret
outsb
mov
xchg
cwtl
push
jns
sbb
insb
jo
xor
mov
movsb
jmp
or
mov
mov
cmp
jg
lock
sbb
lahf
push
outsb
lret
sub
sbb
xor
dec
jne
xor
fldt
loopne
andl
and
jle
jle
push
mov
dec
pushf
lret
sub
dec
test
negl
cltd
movq
leave
and
test
sbbb
sub
pop
jg
jae
lret
stos
imul
sub
je
inc
lahf
xor
into
rclb
cvttps2pi
dec
inc
dec
mov
jp
xor
aad
mov
cltd
outsl
add
dec
xchg
jle
cmp
sbb
scas
cmp
jge
jecxz
dec
call
mov
push
outsb
stos
fdivl
mov
lret
fmuls
push
enter
fildll
in
cmc
iret
mov
lods
push
adc
jne
dec
xor
dec
jle
out
mov
popa
outsl
out
cmpsl
xor
mov
ds
pop
jg
push
jae
cmp
xor
xchg
add
dec
mov
and
mov
jb
std
and
sbb
insb
jns
mov
cwtl
je
std
xchg
mov
inc
in
dec
xchg
gs
dec
dec
adc
data16
dec
cmc
xor
filds
push
and
ret
in
les
mov
jle
data16
mov
int3
jmp
push
pop
xor
inc
cmp
add
add
sbbl
pop
stos
sbb
or
fdivp
fmuls
jg
sahf
cmp
jno
jmp
inc
inc
aas
mov
stos
pop
out
mov
dec
sub
push
and
sti
and
sarb
fidivrl
push
cli
cld
jae
fdivp
loope
jl
pop
push
clc
out
aas
jns
insb
push
das
xor
out
iret
xor
mov
or
sbb
push
push
mov
stos
divb
dec
aaa
jp
sti
mov
icebp
aaa
daa
cmp
int
xchg
pop
sub
jmp
pushf
jne
fsubs
dec
ljmp
pop
mov
xor
cmpsb
test
repz
lahf
dec
or
push
xchg
inc
mov
adc
out
jle
addb
xchg
pop
mov
lods
pusha
dec
js
push
add
roll
fwait
push
xchg
mov
inc
ja
insl
pusha
lods
stc
inc
into
ret
mov
add
mov
dec
icebp
push
mov
cmp
nop
pushf
jo
lahf
and
dec
sub
dec
rorb
or
adc
lock
cmp
xchg
aaa
sub
pmaddwd
adcb
stc
pop
bound
mov
xchg
push
push
xor
pop
pop
jle
ja
mov
pop
into
test
inc
mov
cmp
leave
and
cmp
xchg
sub
push
add
sub
xor
xor
ja
xor
pop
sub
cmc
shl
pop
out
mov
mov
dec
inc
fneni(8087
gs
fbstp
cmp
fwait
push
xchg
pop
jl
mov
sbb
mov
jb
pushf
aas
pushf
xor
loopne
cmc
cmp
add
dec
and
xor
jl
inc
dec
into
pop
arpl
xchg
arpl
sub
aad
lods
sbb
mov
loope
sbb
data16
dec
or
jg
jecxz
inc
adc
dec
fs
test
cmp
jp
ja
dec
pop
jecxz
loopne
pop
sbbb
jns
daa
imul
das
jnp
xor
dec
insl
out
xchg
and
sub
aad
mov
mov
fcomps
xor
push
pop
pop
into
jnp
or
adc
mov
dec
sbb
out
cli
inc
stos
into
out
pop
into
push
inc
mov
jb
push
add
adc
cli
mov
jp
scas
ja
adc
mov
shrl
lret
xor
movsl
push
in
jge
cmp
xchg
mov
negl
xor
xchg
pop
rcrb
hlt
mov
sub
aaa
push
adc
push
and
xchg
jp
and
fstpl
rcr
xchg
lock
movsl
orl
mov
mov
push
addl
ljmp
xlat
cs
and
call
jle
shr
pop
jne
sub
mov
outsb
scas
jle
dec
inc
or
fistps
pop
push
or
dec
jg
cli
push
lea
cmp
test
iret
sti
jle
mov
and
mov
dec
dec
aaa
jg
pushl
sbb
cmp
push
cmp
xchg
pop
inc
jp
fwait
inc
inc
test
shrl
mov
rorl
push
jl
leave
repz
xchg
sub
dec
stc
sbb
cmp
dec
fnstenv
mov
cmp
sbb
popf
xchg
aad
sbb
lahf
adc
rcl
test
fsubs
js
dec
aaa
and
inc
jbe,pn
shlb
push
cmpsl
aaa
jl
push
fimull
int
and
add
js
sub
add
dec
fstl
insl
icebp
mov
mov
mov
inc
gs
aaa
add
push
lea
into
dec
xchg
add
cmpsb
daa
push
jg
jmp
jb
call
pop
data16
stos
xchg
aad
popa
mov
mov
daa
inc
pop
lahf
push
repnz
fnsave
loopne
cmpsb
aas
fmuls
testl
add
or
test
addr16
arpl
in
scas
jle
repnz
mov
pop
or
mov
or
dec
fcomip
cld
mov
dec
mov
out
dec
mov
sub
dec
mov
lret
sbb
add
cmpsb
dec
adc
pop
rorb
xchg
fwait
jbe
cld
mov
or
rcrl
dec
or
mov
dec
shl
in
lds
dec
imul
cld
dec
inc
and
es
inc
dec
imul
dec
outsl
and
dec
fldt
roll
movsl
in
xchg
pop
loope
add
xor
iret
lods
or
sbb
pop
xor
inc
xchg
ljmp
test
int
cwtl
int3
test
cli
adc
dec
cs
das
mov
in
pop
dec
int
ficomps
xor
lsl
cmp
inc
mov
js
pusha
mov
pop
jae
pop
aam
push
push
gs
stos
inc
ljmp
and
pop
mov
pop
cmp
cmp
jns
daa
outsl
add
pop
std
out
dec
stos
sbb
outsb
jae
xor
ret
pushf
push
lret
lret
inc
add
adc
dec
scas
test
jno
jbe
ret
dec
gs
repnz
mov
dec
jle
cmp
je
xadd
cli
neg
mov
mov
fistps
orb
jae
sub
jecxz
into
out
sbb
dec
push
ljmp
out
pop
jno
sub
icebp
dec
std
lahf
jb
push
push
lret
jns
dec
cmp
std
jmp
cmpsl
jnp
movsl
dec
sub
cs
dec
sub
rol
cmp
nop
sti
repnz
and
dec
std
cmpsl
xor
cmp
xchg
movsl
xor
push
and
roll
mov
xor
jmp
in
dec
jge
push
pop
mov
jg
ljmp
xor
push
push
jb
mov
orb
bound
push
shrl
lahf
jecxz
cs
mov
and
sahf
adc
xor
out
dec
mov
mov
lods
pop
pop
ds
aas
pop
sbb
int3
out
dec
push
mov
pop
xor
in
sarl
dec
fisubl
mov
jecxz
xchg
rorb
repnz
and
iret
lods
xor
jbe
dec
jne
xchg
cmp
xchg
xchg
push
ficomps
push
dec
ret
rorl
mov
dec
and
lock
sub
and
adc
enter
cli
dec
xchg
mov
int
cltd
xor
dec
in
test
dec
lret
in
aam
cs
stc
lret
mov
test
pop
adc
add
dec
mov
je
stos
fwait
add
in
fiadds
inc
scas
push
cld
jmp
imul
pushf
mov
sti
jmp
push
mov
jecxz
jb
dec
jns
jne
scas
cmp
test
aad
fistpll
or
movsl
ss
mov
into
mov
in
xchg
outsb
out
or
sub
push
push
pop
and
out
inc
es
in
pusha
imul
push
jp
pop
das
mov
sar
jnp
stos
pop
and
imul
out
hlt
bound
mov
std
into
fdivrp
push
lods
dec
sub
jmp
aam
ja
out
adcl
test
cmpsl
fisttps
pop
add
sub
jecxz
and
scas
jg
gs
mov
mov
inc
lret
test
push
pop
xchg
jne
insl
rolb
in
dec
sbbb
cmp
test
xor
fwait
and
push
in
inc
cmc
jge
adc
pop
mov
fidivs
add
mov
insb
outsb
jns
lods
and
pop
push
dec
jg
out
pop
push
sahf
outsl
pushf
add
cld
lcall
or
ljmp
cmp
cmp
inc
xor
lods
xchg
shrb
sbb
call
pop
sti
xor
and
dec
dec
dec
mov
mov
lcall
sub
scas
dec
popa
jno
ja
mov
in
sbb
mov
fsubrs
dec
cmp
mov
dec
inc
sti
adc
cmp
adc
fs
or
nopl
dec
xchg
test
pop
mov
mov
xor
sub
mov
mov
movsb
inc
add
mov
jmp
je
pop
jno
aad
dec
lods
push
xor
pop
ljmp
xchg
lock
jnp
add
dec
pop
inc
push
cmpsb
cmp
cwtl
dec
int
mov
dec
pop
sbb
lret
mov
adc
mov
rol
repnz
or
cwtl
push
cmpsl
icebp
adc
xor
sub
dec
out
xchg
cld
in
ss
add
aam
xchg
or
sbb
mov
ds
push
pop
dec
inc
test
sbb
mov
xchg
fldenv
inc
mov
dec
out
repz
mov
add
nop
shlb
movsb
xor
adc
push
lret
mov
push
fmull
inc
arpl
add
outsb
aad
cli
ja
lret
jne
dec
call
mov
xor
adc
jp
or
dec
xor
test
xchg
out
push
lret
add
in
lahf
dec
mov
jmp
rclb
out
ficoms
dec
inc
cltd
ret
popa
out
iret
outsl
jmp
daa
adc
mov
push
gs
dec
cld
mov
add
into
aaa
xor
test
shl
xchg
pop
mov
leave
and
jb
dec
loopne
adc
movsl
sub
inc
aam
pop
cmp
ds
scas
cmpsl
cmp
dec
sub
sti
or
mov
jbe
mov
pop
imul
add
movsl
fnstsw
sbb
xor
aad
jg
shlb
pop
jl
outsb
jbe
fdivs
pop
mov
test
jmp
cmpsb
popf
dec
fmuls
and
add
push
fimuls
cmpsb
pop
push
adc
and
dec
pop
andl
dec
mov
pop
loop
xchg
pusha
pop
mov
mov
dec
push
push
xchg
lods
int3
add
idiv
jbe
xor
call
dec
cmpsl
aam
cmp
dec
addr16
mov
jo
add
mov
mov
sbbb
js
xchg
sbb
shll
mov
mov
popa
cmpsl
xor
mov
rorb
xchg
fistpll
dec
ds
lds
sub
or
dec
test
arpl
dec
pushf
jg
cs
mov
jge
sbb
sbb
dec
lock
cmpsb
pushf
jp
push
outsb
mov
insb
jle
cmp
notb
pop
sbb
push
fs
clc
cwtl
bnd
pop
dec
inc
dec
lahf
jp
outsl
and
pop
mov
out
leave
movsb
dec
mulb
dec
pop
loope
adc
dec
out
not
and
xor
lret
mov
lds
out
ds
adc
sbb
mov
outsb
push
adc
fs
jg
mov
xchg
push
and
jg
lods
in
xchg
test
and
outsb
dec
push
push
pusha
mov
loop
jnp
lahf
xchg
lret
cmc
test
cld
aaa
inc
jl
loope
outsb
dec
mov
lods
addr16
out
and
dec
stos
jnp
or
xchg
or
inc
out
pop
dec
and
xor
dec
or
mov
cmp
je
outsb
jbe
popa
ljmp
inc
addr16
mov
rorl
mov
inc
mov
or
adc
dec
call
adc
mov
push
insb
or
push
push
xor
mov
cltd
jmp
push
xor
lret
movsl
push
fisttps
push
dec
mov
ss
xchg
out
lods
or
inc
mov
dec
in
xor
out
xor
dec
cmp
cld
pop
cwtl
dec
dec
pop
mov
and
mov
lcall
dec
push
movsb
adc
dec
pop
push
dec
rorl
mov
dec
jle
push
movsl
arpl
sub
mov
jge
pop
jg
insl
cmc
mov
shr
pop
mov
mov
dec
pop
lods
mov
adc
das
jb
mov
sub
sbb
pop
dec
mov
mov
pop
mov
sub
jb
out
scas
sub
orb
sarb
cmc
inc
repz
repz
mov
push
popf
cmp
jne
mov
jmp
mov
daa
jne
jle
shrl
mov
sbb
mov
and
es
sahf
dec
sub
jecxz
cli
out
push
jmp
sub
loopne
shlb
dec
cmpsb
fbld
inc
push
clc
aaa
xor
pop
mov
jmp
test
inc
repz
popf
lahf
push
rclb
inc
mov
jmp
push
dec
inc
mov
lods
dec
stos
xor
jp
mov
bound
dec
inc
out
dec
adc
dec
lods
lret
popa
adc
dec
dec
xchg
imul
inc
test
adc
lahf
dec
stos
insb
cs
pushf
daa
dec
jbe
sbb
cmc
lahf
push
clc
cmpb
jne
fwait
pop
in
xor
inc
or
rorl
incb
mov
dec
ss
dec
and
shlb
loop
xchg
repz
out
iret
call
pop
dec
fisttpll
push
pop
mov
in
dec
aam
lahf
add
mov
scas
sub
jb
iret
fsts
orl
adc
xor
mov
fisttpll
das
adc
dec
pop
mov
add
divb
sub
aad
jbe
xchg
js
ret
int
adcl
test
mov
inc
mov
sub
popl
mov
push
sbb
jg
xchg
mov
inc
ss
hlt
daa
inc
loop
popf
sbb
cmpsb
adc
xor
xchg
stc
mov
xor
dec
in
pop
sbb
sbb
jl
sahf
ja
mov
sub
gs
cwtl
cmp
lcall
sub
outsb
aaa
cmp
xchg
inc
push
fnsave
icebp
lock
push
call
push
push
unpcklps
fiaddl
lcall
inc
lods
adc
repnz
mov
jg
std
sub
fwait
jl
adc
into
push
movsl
ret
inc
jbe
mov
mov
arpl
adc
mov
inc
jl
ret
mov
fucomip
and
lods
xchg
fstpt
pusha
cmpsl
out
sub
mov
aas
jl
inc
sbb
jmp
push
ljmp
bound
dec
jg
cld
and
mov
xor
push
push
adc
pop
dec
sbb
mull
sbb
xor
pushf
dec
pop
dec
scas
dec
lahf
xchg
lcall
and
rorb
test
mov
stos
sbb
mov
int3
inc
jp
push
lret
mov
daa
jecxz
pop
dec
inc
jne
jp
stos
dec
pop
xchg
xor
je
enter
pop
mov
mov
fisubs
sbbb
lahf
dec
imul
fimull
popa
out
out
sbb
inc
push
ret
dec
adc
in
dec
ds
lods
sbb
cmp
dec
mov
mov
dec
and
cmp
outsb
seta
push
jecxz
push
mov
dec
jae
push
loop
into
dec
pop
les
js
mov
push
arpl
outsb
or
aas
and
sbb
clc
add
sbb
lahf
ret
and
scas
mov
cmp
dec
daa
shlb
cmpsl
or
dec
mov
inc
imul
outsb
push
inc
jo
scas
jle
sub
dec
test
xor
in
nop
jmp
mov
xchg
sbb
dec
sbb
push
sub
inc
push
dec
mov
ja
in
pop
jb
mov
int3
pop
out
dec
iret
js
cmp
push
decl
cmp
sub
testl
pop
adc
xchg
sub
jp
ljmp
add
in
repnz
pop
add
sub
stos
jns
cwtl
imul
mov
jp
cmc
test
pop
adc
xor
enter
push
sub
sbb
loop
mov
add
divb
test
in
mov
mov
dec
rcrb
xchg
mov
xor
scas
test
dec
repnz
dec
dec
jns
in
sub
and
daa
add
inc
mov
mov
imul
dec
pop
ljmp
shrb
outsb
jbe
mov
insb
clc
inc
gs
sub
xor
dec
pop
mov
and
out
jmp
jb
mov
cmp
dec
sbb
or
cmp
mov
xchg
xor
xchg
jns
mov
adc
or
dec
cmp
lcall
rclb
dec
xchg
jge
and
pop
in
dec
repnz
pop
inc
jp
push
and
adc
mov
dec
mov
cmp
dec
sub
mov
imul
inc
sbb
mov
or
das
push
or
cmpsl
jl
arpl
insl
mov
dec
aas
mov
xchg
push
mov
sbb
inc
xor
pop
dec
mov
add
mov
in
xchg
and
mov
dec
mov
mov
add
inc
pop
dec
push
mov
hlt
and
loope
or
add
push
in
mov
push
sbb
in
into
xor
inc
push
pop
cmp
dec
push
in
push
bound
gs
lahf
and
xchg
decb
into
inc
xor
pop
data16
and
mov
cltd
dec
sub
sub
dec
aam
clc
mov
outsl
fdivrs
pop
dec
jb
ret
ficompl
inc
add
shll
inc
push
dec
xor
je
ficoms
repz
add
pusha
or
shlb
cmp
push
add
shlb
mov
int3
jle
jne
pop
xchg
inc
test
incb
adc
xor
dec
fs
shlb
stos
loopne
scas
stc
jg
xchg
cmp
jns
dec
xchg
mov
sbb
hlt
xor
adc
xchg
inc
into
lea
int3
push
sbb
in
cs
push
sub
or
insl
fwait
adc
pop
and
pusha
mov
aaa
dec
call
xor
stos
popa
stos
push
add
inc
adc
aam
loop
fisubrl
cmp
int
mov
adc
push
inc
mov
lds
push
dec
add
lret
ret
jnp
cmp
cmp
dec
mov
ljmp
push
sbb
mov
push
xchg
imul
xor
pusha
push
jae
pop
inc
mov
sub
hlt
mov
pop
jns
outsb
and
dec
xor
mov
movb
add
outsb
push
subl
sbb
sbbl
pop
pop
push
mulb
iret
movsl
add
test
xchg
inc
int3
addr16
out
adc
dec
fistps
dec
cmpb
icebp
push
sarb
jle
and
jbe
into
out
outsb
daa
dec
add
je
xchg
out
rorl
cmp
fisubrl
scas
dec
in
flds
mov
adc
inc
adc
dec
mov
shr
add
not
xor
dec
mov
je
and
xor
lret
decb
loope
nop
add
sub
imul
mov
dec
mov
test
or
or
push
out
arpl
dec
icebp
fidivs
add
sahf
jmp
int
jbe
cmc
push
dec
dec
lods
jb
je
mov
add
mov
ret
icebp
mov
rcrb
aam
imul
scas
sbb
adc
jge
lret
pop
addr16
sahf
icebp
pop
add
dec
into
mov
dec
mov
inc
jne
push
dec
pop
sub
call
dec
stos
lods
sub
pop
mov
cmp
xor
sbb
lods
add
sub
inc
out
jae
fnstenv
imul
jo
mov
mov
clc
xlat
pop
pop
mov
fidivs
pop
and
int
inc
dec
jl
aam
in
test
push
push
push
rorb
pop
sub
jge
jecxz
lods
inc
fwait
addr16
dec
stos
push
jge
fdivrl
and
aaa
push
xor
or
add
push
popa
in
leave
out
sbb
xchg
gs
test
add
dec
and
outsl
pop
xor
pop
jl
sub
fidivl
clc
jge,pt
scas
aas
cmp
jl
dec
cmpsb
ss
ds
test
pop
dec
push
pop
sub
stc
dec
xor
mov
dec
outsl
jg
pop
shlb
inc
sahf
jne
jp
js
es
mov
push
in
les
jae
mov
push
inc
add
sbb
dec
xchg
jne
cmc
inc
pop
sets
cmp
mov
mov
mov
lods
das
cmp
pop
ljmp
inc
fildll
repz
or
mov
inc
mov
push
fwait
add
nop
lods
pop
push
cltd
fdivrs
jbe
aas
aad
xor
xchg
popf
inc
cltd
cli
out
jg
inc
jecxz
or
dec
sub
jl
mov
and
icebp
lods
cmp
jle
jg
inc
pop
movsb
jle
ret
and
mov
mov
jg
jl
rorl
push
add
ret
lea
in
xchg
xchg
jb
in
xlat
or
gs
jns
movsb
stos
mov
sub
sti
stos
insb
jecxz
andl
add
in
sbb
xchg
addr16
add
pop
outsb
sbb
stc
cmp
mov
pop
cltd
data16
cmpsl
add
adc
std
jge
adc
cmp
dec
shlb
out
sbb
scas
jg
mov
dec
sbb
jns
lock
aas
push
jle
dec
push
fiadds
cld
xchg
iret
repnz
cmp
dec
out
xor
push
mov
adc
jp
sub
icebp
jl
mov
and
cs
fnsave
xchg
mov
aam
popf
fldenv
lret
cmp
xor
fwait
xchg
jnp
inc
dec
jbe
daa
xor
insb
xor
push
iret
jmp
in
mov
rorb
dec
imul
jle
push
mov
pop
rcl
jp
mov
inc
mov
push
flds
jns
call
xor
rorl
mov
push
jle
subb
adc
int
pushf
mov
jge
dec
out
ret
xchg
mov
cmp
notb
repnz
sub
in
jp
add
xchg
cmpsl
add
dec
in
inc
pop
imul
test
sub
cltd
dec
test
xchg
sub
jecxz
dec
jg
popf
icebp
fcompl
movb
inc
mov
mov
dec
push
rcll
dec
pop
cmp
imul
xchg
pop
jae
insl
sarl
test
scas
les
inc
in
rorl
dec
dec
out
cwtl
and
inc
mov
mov
pop
insb
mov
dec
scas
xor
fiaddl
rorl
mov
roll
jg
pop
dec
xlat
jno
add
out
call
adc
pop
pusha
push
fwait
jno
dec
push
lret
inc
jmp
roll
sub
in
mov
inc
mov
add
jp
push
dec
aaa
jo
int
lds
negl
dec
and
and
cld
adc
mov
sub
test
shld
call
sahf
xchg
aad
pop
dec
jl
push
les
loope
and
ret
fcmovnu
stos
lahf
dec
or
pop
dec
out
pop
inc
data16
cmp
dec
xchg
jo
dec
shr
add
mov
or
jb
je
in
or
mov
pop
push
cmpsl
sub
dec
dec
js
xchg
bound
inc
lea
rcll
push
testb
sarl
push
gs
inc
ljmp
inc
das
fbld
or
mov
std
push
inc
rcrb
jmp
fwait
repnz
mov
scas
cmp
scas
mov
test
stc
fnsave
lock
ss
mov
hlt
lret
int
out
xchg
dec
mov
fidivs
daa
in
fisttpll
jb
call
push
ret
jp
inc
xchg
dec
and
push
out
mov
fimull
mov
push
ror
cmp
daa
and
sub
in
fmuls
lahf
pop
or
sub
andl
arpl
sub
mov
xchg
mov
push
xchg
cmc
aaa
iret
sbbb
jnp
dec
push
mov
and
sub
lds
add
not
and
dec
cltd
cmc
mov
dec
sub
popf
insb
cmp
adc
inc
pop
mov
push
outsl
lock
sahf
sub
inc
scas
repnz
push
and
jg
dec
int
aaa
in
repz
dec
mov
xor
push
push
ljmp
dec
test
mov
dec
xchg
int3
pop
es
pop
and
ss
xor
push
stos
not
push
adc
pop
inc
pop
in
or
xchg
sub
or
int3
xchg
cld
dec
aaa
fstps
dec
push
sub
shl
and
fsubl
fdivr
add
aam
dec
pop
nop
insl
and
shr
mov
jl
arpl
cmp
inc
mov
in
add
movhps
dec
fs
sti
test
les
sub
es
int3
jg
xchg
jbe
nop
cmp
stos
jno
aad
jo
jecxz
stc
add
lret
das
jle
scas
fisubl
mov
push
into
push
xor
gs
mov
xor
cs
or
sub
dec
iret
repnz
stos
sub
jle
sbb
dec
stos
inc
adc
jno
int3
stos
adc
xor
sar
pop
lret
lret
pusha
inc
xlat
xor
add
jb
loop
cld
aas
mov
fs
subb
sahf
cmc
xchg
pop
nop
lock
and
xchg
jecxz
mov
rcrb
pop
sub
sarb
out
push
jno
xchg
cmpb
fs
push
jmp
add
enter
into
sub
dec
bound
aas
xchg
fmuls
add
pop
or
data16
aas
xchg
sub
testl
hlt
outsl
fsubrs
sti
fldl
xor
mov
frstor
sbb
pop
mov
jg
test
fidivrl
or
sub
mov
dec
shlb
scas
fcoms
test
mov
cmp
jl
lea
sbb
lods
adc
jp
sub
in
cmp
and
xlat
mov
or
xchg
insb
into
movsb
lds
lret
jl
rclb
mov
or
aas
sbb
and
adc
dec
xchg
popa
iret
cmp
push
dec
bound
dec
dec
jl
andb
cmp
push
mov
xor
push
addr16
dec
sarb
iret
xor
ja
mov
and
das
fdivl
mov
jle
sbb
push
dec
xchg
mov
fldenv
pusha
push
dec
testl
out
dec
push
dec
push
jnp
mov
mov
mov
dec
shlb
pop
inc
jo
push
mov
cmc
xor
bound
out
dec
and
lock
data16
sub
jge
fistps
cmp
pop
jae
xchg
js
push
mov
filds
pusha
add
dec
and
mov
push
ffreep
and
dec
dec
aaa
xchg
xor
mov
in
cmp
enter
mov
lea
jl
sbb
stos
push
sub
mov
xorl
dec
jp
fldenv
xchg
xlat
push
add
jb
dec
mov
lock
xor
mov
in
sbb
push
test
dec
out
int
js
adc
icebp
push
dec
scas
inc
pop
cmp
or
out
add
dec
movsl
subb
mov
xor
add
push
and
dec
cmpsb
les
out
cwtl
add
push
ja
pop
int
stos
sti
out
sbb
dec
stc
sub
cmp
mov
dec
hlt
lds
sbb
pop
sahf
xorb
sbb
rcrl
dec
cmp
ret
aaa
dec
xor
xor
xchg
dec
mov
and
dec
dec
mov
sahf
sub
orb
dec
movsb
adc
mov
gs
sbb
or
push
add
outsl
mov
out
sbb
push
jb
divl
xor
fisttps
orl
jl
in
dec
cmp
cmp
mov
cmp
dec
jmp
in
pusha
clc
cmpb
std
sub
fwait
xchg
or
dec
aas
call
jmp
testb
test
cmp
fisubrs
iret
adc
inc
cmp
push
push
in
jns
rcl
push
mov
dec
idivl
dec
insl
mov
call
push
fwait
push
daa
cmp
out
pshufw
cmp
ja
mov
cmp
dec
enter
aaa
mov
into
es
aas
fwait
dec
ja
fiadds
adc
and
cld
xor
bound
sub
pop
dec
sbb
leave
or
inc
lahf
outsb
test
xchg
dec
das
mov
call
fistps
out
dec
andb
lcall
sub
bound
imul
push
mov
pop
data16
mov
loop
scas
xchg
in
sbb
dec
rcrl
ret
jne
cmp
fsts
test
adc
push
cmp
push
mov
adc
mov
sahf
mov
arpl
enter
jmp
fs
das
dec
inc
movsb
int
arpl
sub
gs
nop
dec
repnz
loop
add
inc
addl
add
repnz
dec
jb
pop
mov
mov
dec
rclb
mov
dec
jmp
push
sar
scas
das
dec
or
mov
test
nop
xchg
jo
out
dec
pop
dec
pop
popf
hlt
mov
dec
mov
fdivs
mov
loop
sub
xchg
aam
push
push
fistl
adc
sbb
ds
dec
xchg
adc
scas
cmp
dec
subl
loop
sub
xchg
scas
aam
mov
adc
or
mov
mov
stc
fcomp
xchg
push
loopne
lret
das
mov
push
xor
aam
iret
add
dec
jg
mulb
dec
sub
jno
dec
lods
neg
xor
xor
dec
mov
arpl
xchg
xor
dec
shl
out
insl
cs
outsl
pop
pop
dec
call
xchg
das
scas
movsl
stos
xor
or
or
rorb
repz
dec
test
std
test
dec
inc
mov
push
mov
mov
xchg
dec
or
scas
pop
ds
jno
mov
in
dec
les
iret
or
xchg
clc
xchg
into
fimuls
jmp
dec
adc
lea
xchg
imul
fstl
les
andl
pop
repz
shll
stos
jb
mov
ja
or
ljmp
leave
or
dec
and
aad
std
loop
jmp
dec
cmpsb
fadds
or
push
aaa
std
dec
cmp
xlat
dec
pop
repz
push
iret
and
add
dec
cmp
repz
into
xchg
fs
in
pandn
int3
jmp
push
imul
mov
mov
dec
jne
mov
push
lods
js
sub
daa
mov
pop
pop
jae
test
dec
dec
dec
pusha
pop
adc
jbe
adc
ss
int3
mov
jle
lea
push
cmpsb
bound
ret
movl
lods
iret
add
dec
push
stos
jnp
std
test
xorl
and
call
xchg
push
ja
test
addr16
mov
pusha
nop
xor
idivl
out
jp
mov
adc
and
inc
testl
pop
pop
std
push
in
dec
andb
outsb
dec
sub
dec
jnp
push
in
jae
cmc
dec
push
mov
mov
sub
xchg
push
lret
cmp
sahf
shll
cmp
push
popa
add
or
push
aaa
dec
cmp
add
add
loop
pop
gs
sbb
dec
xchg
pusha
or
test
jbe
lret
pop
or
xlat
lahf
jle
mov
shrb
mov
dec
out
jno
and
out
push
mov
call
inc
add
loop
sub
iret
mov
and
dec
sbb
ret
lods
jl
jg
xor
aas
lcall
das
dec
or
test
adc
mov
dec
cmp
push
out
dec
xor
in
jecxz
das
dec
fisttps
cmpsb
jae
rcrb
fs
adc
scas
jns
outsb
fwait
sub
push
cwtl
cmp
adc
ss
and
cmp
imul
sub
adc
push
cmp
mov
stc
call
aaa
cmp
add
sbb
sub
jle
xchg
cmp
int3
mov
push
xchg
pop
scas
cmp
shll
fcomip
inc
fistpll
mov
das
add
xchg
mov
std
adc
stos
pusha
jne
xor
negl
stos
mov
lds
jns
out
push
cmp
jge
loopne
pop
shlb
mov
lods
jns
sub
aas
ja
sub
jecxz
dec
adc
jns
jge
mov
bound
sub
adc
sbb
xchg
dec
fildl
mov
pusha
or
jbe
ljmp
fdivl
mov
dec
mov
aaa
rol
inc
adc
test
outsb
inc
mov
aas
sbb
dec
mov
repnz
adc
jg
iret
cli
mov
inc
rcrl
push
rorb
outsl
cmc
popf
rcrl
dec
in
repnz
xchg
jl
jae
and
or
xor
enter
fildll
xchg
mov
popa
and
adc
jg
push
jp
mov
adc
adc
push
dec
jae
insl
sub
jmp
test
std
inc
pop
xchg
push
dec
int3
mov
inc
psrad
fisubrl
jge
dec
mov
scas
inc
mov
inc
push
jbe
dec
sub
inc
insb
in
mov
aam
dec
shlb
push
inc
push
cld
jb
imul
add
cmp
push
mov
mov
iret
pop
xchg
out
lods
mov
mov
aaa
and
mov
pop
imul
xor
add
das
iret
sbb
cmc
orb
ja
movsb
cmp
mov
xchg
and
stc
aaa
jle
loopne
jp
xchg
cs
andb
outsl
jle
jmp
test
dec
push
cmp
outsb
sub
mov
sub
sbb
mov
sbb
icebp
pop
jbe
xchg
lock
popa
lret
test
aam
insb
int3
pusha
stos
and
xchg
pop
mov
mov
mulb
inc
mov
lret
add
rcl
das
xchg
xchg
xor
sub
neg
cmp
mov
pop
or
jle
push
fwait
xchg
outsb
mov
xor
int3
xchg
jl
mov
sub
mov
dec
das
mov
push
dec
sub
or
add
ljmp
js
mov
fwait
push
stos
insl
dec
dec
dec
aad
movsl
data16
das
in
ss
sti
fwait
dec
xchg
push
mov
add
aaa
xlat
xchg
aam
dec
cmp
push
outsl
int
imul
cmpsl
pop
adc
idivl
push
pushf
push
test
dec
mov
cld
mov
dec
mov
mov
rorb
cmpsl
cwtl
mov
syscall
lea
popa
inc
dec
js
mov
jno
addr16
pushf
je
mov
int
enter
test
lods
pushf
icebp
mov
shrl
aad
daa
cmp
inc
cmp
mov
iret
xorl
sbb
ljmp
dec
push
sub
movsl
fstl
inc
test
addb
jecxz
dec
clc
adc
add
lock
jmp
js
lret
push
mov
fisttpl
xchg
jmp
pop
mov
dec
adc
out
mov
push
ret
dec
movsb
inc
js
aas
push
mov
xchg
and
fmuls
adc
sub
fldt
dec
xor
add
popf
mov
dec
ret
shl
aam
imul
add
push
notb
cmp
sbb
push
adc
loopne
test
imul
idivl
aas
aaa
adc
jg
and
mov
jp
mov
pop
cmp
add
out
icebp
sub
insb
pushf
aam
mov
mov
push
mov
jno
push
fstpl
outsb
push
cli
jbe
sub
adc
push
and
popf
inc
mov
daa
xchg
test
leave
loop
into
jmp
les
pop
push
xchg
cltd
pop
push
dec
jl
push
mov
sbb
dec
or
sbb
push
lahf
xor
add
cmp
dec
fdivrl
out
adc
mov
dec
inc
decl
mov
mov
cmp
int3
test
movsl
sub
dec
out
pop
lret
btc
into
mov
shl
testl
add
hlt
push
popa
sbb
or
push
pop
shll
jb
dec
std
and
inc
fistpll
out
xchg
sub
xchg
cmpsl
push
arpl
ficomps
movsl
jno
dec
jecxz
xor
scas
mov
pushf
ret
jg
or
loop
xchg
cmp
add
cmp
xchg
lods
rcll
cs
shlb
fdiv
and
ret
fildl
hlt
loopne
mov
loopne
mov
xor
int
sti
dec
mov
popf
adc
mov
shll
sbb
and
mov
sub
addl
out
xor
mov
lock
icebp
cmp
mov
or
push
pop
movsl
xor
or
push
push
sbbl
and
xor
add
repz
aas
mov
out
dec
inc
test
pop
loope
mov
or
lahf
into
cld
outsl
aas
sbb
andb
dec
xchg
js
dec
btr
adc
ret
inc
in
mov
mov
add
scas
and
and
cs
fstpl
je
leave
or
mov
inc
imul
aas
and
pop
gs
and
push
fwait
dec
jb
push
mov
add
popa
push
xchg
xor
mov
call
cs
cmp
andl
push
and
cmc
inc
out
lods
cmp
xchg
sbb
cmp
jns
mov
shlb
int
int3
xlat
fxch
pusha
addr16
flds
mov
rcrl
jns
ror
jmp
bound
mov
cs
xor
inc
movsl
clc
cli
cmp
push
mov
add
push
enter
add
jle
jmp
lret
xchg
call
je
jle
mov
inc
scas
fnsave
dec
in
repnz
ljmp
xchg
pop
lret
jae
lahf
mov
add
inc
hlt
testb
loopne
pop
frstor
rcr
iret
vreduceps
pushf
lahf
loop
dec
mov
in
mov
dec
add
test
xchg
popa
fwait
pop
add
out
cli
pop
jp
dec
scas
and
mov
movsb
push
and
shlb
dec
or
push
xchg
sbb
pop
dec
mov
in
sub
mov
sub
dec
sahf
dec
leave
shrl
insb
jle
xchg
and
cs
cltd
dec
and
mov
cmp
test
inc
jmp
xchg
outsb
mov
cmc
fnstsw
dec
icebp
rorl
push
lds
xor
ret
pop
insl
fbstp
lcall
pop
and
pop
cld
pop
dec
dec
dec
push
cmp
pop
popa
cmpsl
dec
out
mov
jnp
xor
push
dec
sbb
scas
test
dec
adc
dec
inc
movsl
xchg
xor
dec
test
in
mov
sub
stos
push
sub
shll
leave
mov
dec
or
dec
adc
test
add
xchg
mov
popa
adc
add
out
mov
iret
ret
jl
scas
stos
mov
mov
aaa
adc
lret
mov
mov
add
in
aad
inc
dec
pop
dec
sbb
movsl
das
and
inc
dec
jle
inc
roll
pop
pop
test
mov
dec
andl
fnstcw
xchg
pop
imul
push
mov
out
lods
lea
cmc
fwait
addr16
pop
or
inc
mov
mov
dec
outsb
and
lcall
std
pop
les
fidivl
dec
popl
push
jns
pop
movsb
test
inc
bound
sbb
inc
scas
outsb
xchg
imul
mov
shl
push
daa
nop
dec
insb
and
jecxz
xor
inc
dec
fsub
mov
out
mov
pop
xlat
in
lds
ljmp
iret
dec
adc
mov
sahf
xchg
dec
xor
mov
jns
jl
js
pop
test
int
loop
inc
dec
inc
in
jno
outsb
xchg
mov
into
lea
ljmp
in
or
scas
mov
sbb
mov
mov
dec
adc
testb
jge
shll
ja
push
push
jns
inc
mov
pop
movsl
sbb
outsb
enter
loope
pop
dec
xchg
aas
and
fst
cli
adc
hlt
pusha
push
rorl
sub
xor
inc
xor
lcall
stos
in
push
jmp
outsb
adc
mov
sbb
out
add
loope
xor
push
outsl
insb
orl
push
stc
test
jb
inc
je
mov
icebp
into
jno
mov
scas
cwtl
fbld
aam
xor
push
cmp
and
dec
add
jge
jg
repz
mov
inc
adc
add
in
adc
movsl
dec
inc
jne
pop
mov
hlt
push
or
into
push
es
aad
je
sbb
xor
std
dec
data16
mov
xor
xor
push
jns
mov
aaa
clc
scas
pop
add
inc
dec
iret
xchg
mov
je
sub
in
sbb
or
mov
dec
sub
fimuls
in
or
adc
fcmovne
mov
lds
inc
sub
insl
mov
mov
mov
out
daa
dec
in
jno
stc
insl
idivb
ds
fdivrs
lret
lret
mov
mov
fisttpl
xchg
sarl
or
ja
cmp
pop
stc
adc
jmp
out
iret
inc
clc
lods
outsl
shrb
loope
ret
stos
xor
inc
cmp
data16
aad
mov
outsl
mov
push
jo
push
sub
data16
mov
sahf
add
jo
xor
sahf
cmp
shlb
fwait
pop
or
pop
hlt
push
sub
cmp
xor
fiaddl
scas
xlat
xchg
jp
push
in
cli
mov
sti
jb
ret
cmp
pop
lea
and
repz
xchg
pop
xor
cmpb
clc
push
push
pushf
jo
mov
push
clc
lahf
das
js
jle
sub
rol
or
fdiv
inc
pop
mov
roll
ret
outsl
lods
xchg
iret
or
sub
and
and
mov
xor
xchg
leave
mov
mov
inc
sbb
xchg
xchg
dec
jno
mov
cmp
jno
dec
mov
fstpl
push
push
jne
imul
dec
xor
or
cmp
mov
xor
adc
push
inc
aaa
stos
mov
outsb
cmp
lahf
lret
into
inc
mov
fs
adc
jo
xchg
fmuls
push
dec
jmp
jb
dec
inc
stos
or
pop
ret
cs
scas
push
mov
xorb
sti
dec
fsub
xchg
loopne
mov
and
loop
or
clc
mov
js
pop
mov
add
add
dec
xor
dec
jg
inc
out
or
gs
adc
insl
out
lea
xchg
loope
ds
mov
inc
jle
clc
inc
sub
mov
iret
jge
insb
adcb
push
js
xor
dec
popf
lret
fsubrs
xor
and
mov
or
jle
bound
mov
jbe
xchg
pop
xchg
cld
les
fwait
pop
xchg
jne
inc
jbe
dec
mov
pop
pop
pop
dec
mov
bnd
sub
mov
dec
arpl
stc
sbb
jbe
or
mov
jne
mov
call
int3
xchg
loop
repz
rclb
adc
jmp
xchg
dec
sub
cmp
mov
mov
xchg
dec
lea
ja
movsb
dec
sbb
mov
out
push
adc
inc
push
leave
push
mov
sub
dec
jmp
add
push
dec
xor
pop
adc
cmc
push
sub
mov
push
adc
test
fists
roll
rorl
mov
rolb
loopne
cmp
lret
or
xor
js
push
shrl
dec
and
pushf
into
into
mov
dec
sub
imul
jae
es
mov
sub
cmp
push
je
xchg
mov
imull
ret
add
or
stos
clc
cli
popa
dec
add
repnz
call
pop
cs
enter
cmp
dec
cltd
frstor
aam
mov
pop
and
xor
add
fisttpl
dec
movb
xorl
pop
negl
xor
test
adcl
push
dec
loopne
push
mov
dec
mov
jno
lock
dec
sub
stos
fidivrs
dec
mov
iretw
outsl
mov
sub
mov
fisubl
inc
dec
dec
rclb
iret
fidivrs
mov
orl
jns
sub
dec
push
xchg
and
mov
nop
push
jg
jp
xchg
pop
not
dec
sbbl
and
xor
jp
pop
xchg
dec
imul
xchg
dec
dec
dec
add
add
mov
dec
or
adc
push
mov
inc
ljmp
stc
jo
sub
int
pop
push
mov
loope
dec
lret
loop
aad
and
inc
jle
out
scas
mov
iret
ret
jbe
dec
mov
call
test
jnp,pn
fimuls
enter
test
pop
jbe
sbb
rcrb
mov
jl
sbb
outsb
sbb
add
sub
outsb
into
jp
lea
cmp
xlat
dec
xor
fdecstp
xchg
push
mov
push
rol
sub
es
push
cmp
hlt
or
iret
mov
aaa
push
sub
dec
fnstsw
xchg
cmpsl
push
or
call
ficompl
inc
dec
cmovns
push
lret
sub
jl
stos
push
dec
dec
pop
adc
xchg
inc
dec
arpl
jmp
test
insb
sub
pop
dec
mov
les
dec
xchg
aam
in
test
dec
stc
stos
xchg
mov
clc
xor
cmp
xor
testb
sahf
mov
bound
dec
rep
rcrb
jg
sub
add
andb
xor
cmpsl
cwtl
movsl
lock
jl
popf
loope
dec
xor
pusha
shll
ds
or
repz
dec
xorps
push
sub
addl
out
repnz
mov
gs
outsb
pushf
dec
loop
dec
cmp
lret
push
pop
pop
mov
aaa
std
test
lods
dec
xchg
sbb
test
jae
add
dec
lods
xor
dec
pop
sub
dec
cmp
insb
test
mov
dec
rorl
sub
push
cmp
stos
jbe
pushf
xchg
std
push
dec
sub
mov
loop
fs
jmp
mov
dec
push
pop
mov
push
cmp
add
bound
mov
sbb
jae
je
jo
shll
xor
fstpl
fwait
movswl
imul
xor
xor
mov
test
mov
call
leave
lretw
ss
cmp
mov
shlb
insl
xor
lea
jb
icebp
popf
add
fwait
sahf
cmp
das
jmp
cmp
movsl
xchg
jne
push
xchg
pop
cs
rcrb
cmpsl
jl
ds
dec
test
fldcw
cld
cmp
mov
xlat
push
mov
cmp
mov
xor
mov
cltd
jge
notl
xor
fs
sub
stos
sub
adc
gs
sub
cmpsl
cmp
inc
mov
sarb
pop
scas
push
dec
add
enter
scas
sub
scas
stc
and
aad
int3
cwtl
add
dec
lock
and
movsl
gs
xchg
dec
adc
lods
push
dec
mov
or
mov
push
add
push
dec
movsl
out
xor
inc
push
mov
lahf
cmp
push
fsubl
add
mov
out
in
fldt
leave
dec
cmpsb
aas
scas
dec
prefetch
sbb
pop
cmc
mov
sbb
stos
sbb
pop
es
push
cmp
push
and
or
jl
mov
push
call
push
adc
inc
jg
movsb
push
mov
in
rcrb
mov
jge
pop
sub
ret
add
pop
mov
fistpl
sub
cmpsb
ror
xor
je
pop
std
sub
sbb
popa
in
push
dec
xor
movb
jns
pop
lods
jmp
iret
mov
xor
ds
fdivrs
jne
fisubs
jl
imul
aaa
inc
inc
inc
sbb
cltd
jg
lcall
and
movsb
lahf
jno
iret
push
mov
ja
jl
push
icebp
and
daa
add
clc
test
and
inc
ret
xchg
ds
add
out
pop
in
add
idivb
stos
fsubr
jmp
mov
xchg
xchg
and
sarb
push
dec
sub
fstl
out
fbld
cmp
lcall
shl
fnstcw
xor
aas
pushf
adc
dec
cmp
dec
in
or
cmp
inc
negb
adc
mov
pop
adc
pusha
movsb
aam
lret
mov
out
sahf
sub
dec
das
repnz
lock
ret
popf
pusha
xlat
aaa
jns
pop
dec
int3
jge
pop
in
cmp
xchg
add
iret
inc
jnp
push
loopne
xchg
jge
ja
and
cmpsb
xor
clts
ffreep
cmp
pop
push
daa
into
ja
and
sbb
pop
pop
dec
data16
gs
andb
shlb
and
add
fwait
or
pop
mov
push
ds
dec
sbb
push
sbb
mov
pop
out
mov
test
mov
adc
mov
or
in
dec
dec
sbbb
dec
lods
shr
and
cmpsb
pop
mov
cs
and
test
cmpsb
call
leave
mov
ljmp
sbb
cmpsl
ret
test
fwait
movsb
insl
jg
mov
dec
mov
mov
mov
xorl
popa
out
jle
cs
scas
push
inc
stc
push
ret
inc
xorb
inc
hlt
dec
sbb
push
and
std
aad
dec
in
mov
fsubs
aam
dec
jne
out
cltd
mov
jge
insb
xlat
subb
mov
test
pusha
mov
jle
or
les
int3
add
jl
push
mov
dec
pop
lods
imul
mov
add
dec
aad
cwtl
popl
and
cmpsl
jbe
dec
fs
jne
lods
in
inc
daa
ljmp
bndstx
dec
dec
clc
push
ficomps
cmp
test
add
lcall
xchg
sub
rcrb
inc
xor
ficomps
and
cli
int3
jle
mov
pop
scas
fisubrl
adc
addr16
and
adc
and
push
rcll
ffree
and
dec
and
negb
pop
lods
insb
jp
inc
sbb
jbe
cmp
mov
lahf
and
shrb
paddb
xchg
aas
pop
jo
dec
xor
cmpsl
scas
dec
adc
add
es
dec
sbb
arpl
sub
mov
xchg
xor
out
or
cmp
and
imul
lea
pop
sub
cs
adc
scas
and
es
sbb
pop
pop
mov
ljmp
cmp
mov
add
lret
insl
iret
popa
insb
mov
or
stc
jbe
cmp
dec
xor
hlt
or
pop
loop
mov
mov
cs
xchg
scas
or
and
pop
adc
xchg
mov
jmp
rorb
mov
sahf
cmp
pop
test
mov
mov
push
pusha
fld1
rcll
mov
mov
lcall
lds
cld
adc
jno
stos
test
fdivs
mov
aam
std
or
xchg
mov
inc
sahf
dec
adc
jbe
mov
push
mov
daa
lret
movsl
push
lods
call
mov
pop
mov
lahf
mov
aaa
sub
rcrl
cs
enter
iret
cwtl
shll
js
and
dec
ljmp
mov
push
sub
jge
in
fwait
xchg
ljmp
jmp
daa
xor
out
push
cmp
sub
in
aad
jl
adc
sub
mov
repnz
paddq
dec
add
xor
pop
jp
dec
or
ljmp
inc
loopne
pop
lods
dec
mov
sub
cmp
clc
push
mov
iret
pop
mov
pop
loop
adc
lret
fs
adc
leave
push
fnsetpm(287
iret
call
jle
scas
divl
jg
dec
loop
gs
pop
inc
cmp
sub
int
sub
lock
fistl
adc
jb
xchg
or
push
pop
fistl
dec
std
lock
sub
clc
addr16
dec
addr16
sbb
mov
and
inc
lcall
sbb
outsb
inc
dec
jne
inc
loopne
adc
mov
pop
cmpb
inc
mov
shll
movsl
jp
imul
xor
fs
inc
rol
jle
dec
and
or
mov
ficomps
dec
dec
into
and
insl
cmp
dec
int3
insb
inc
in
ja
push
fisttpll
push
fcomp
cmc
jae
pop
popf
push
fisubl
ret
cmpsb
pop
push
add
out
push
push
push
push
rcrb
pop
jne
cmp
ja
dec
push
mov
mov
sarl
hlt
mov
test
fnstcw
add
cli
xlat
dec
adc
xchg
movhps
test
xchg
data16
push
inc
das
in
jl
pop
xor
movsb
cwtl
mov
test
xor
into
pop
dec
xor
pop
adc
dec
loop
sbb
xor
fwait
add
push
dec
push
mov
push
decl
xchg
add
mov
push
dec
orl
leave
fisttps
or
dec
cs
cmpsl
loopne
jle
mov
mov
sbb
pusha
fs
nop
cmp
outsb
xor
xchg
jle
cmp
push
adc
lret
dec
sub
stos
cmp
cwtl
dec
sbb
xor
xor
out
je
int
adc
int3
mov
sbb
pop
idivb
xorl
icebp
notl
imul
arpl
pop
dec
dec
sub
filds
mov
dec
mov
sub
cmp
jg
jns
dec
xchg
xor
dec
pop
mov
xchg
out
aas
sbb
scas
mov
sbb
pusha
incl
hlt
mov
xor
mov
inc
dec
pushw
divb
popa
push
xor
adc
dec
scas
inc
mov
xchg
lods
dec
mov
mov
hlt
out
dec
movsl
push
push
cmp
popf
outsb
dec
push
inc
dec
aad
sbb
das
mov
sub
sbb
dec
lods
imul
rcrl
dec
xchg
sti
idiv
lahf
inc
mov
xchg
cmpsb
shlb
xchg
imul
les
xchg
fmull
cli
inc
xchg
push
mov
dec
cmp
mov
xchg
push
adc
es
outsb
je
cmp
sahf
jge
das
mov
adc
sub
and
sub
xor
push
cmp
ret
xchg
es
dec
sbb
mov
jg
xor
hlt
imul
out
leave
inc
and
inc
adc
fbstp
cltd
lahf
sbb
pop
xor
test
in
movsl
pop
or
and
inc
hlt
xchg
pop
or
xor
add
xchg
mov
mov
xor
mov
fildl
push
clc
ljmp
pusha
inc
xchg
jl
cwtl
insb
mov
jle
fwait
js
testb
inc
shr
and
mov
loope
insl
dec
gs
push
jl
cmc
out
call
adc
mov
ret
mov
shll
in
inc
mov
xchg
fcmovb
push
pop
xlat
into
test
movsb
cmp
dec
pop
in
daa
mov
lods
hlt
pop
popf
add
aaa
mov
iret
enter
pop
mov
xchg
jbe
dec
test
xchg
dec
or
mov
sbb
dec
pushf
mov
dec
lods
out
pop
outsb
fcompl
xor
ds
aad
push
sub
mov
pop
sbb
mov
xchg
jecxz
sub
jne
inc
ja
sbb
repnz
divl
xlat
repnz
mov
gs
cmp
hlt
daa
push
mov
cs
push
cmc
add
aaa
into
cmp
cwtl
cmp
ja
cmpsl
jl
mov
and
int3
pop
ds
insb
and
push
jle
daa
mov
into
nop
fcmove
xchg
cmp
sbb
mov
sub
dec
arpl
lahf
iret
push
mov
add
sub
pop
mov
pop
push
jmp
loopne
ja
or
dec
cmpsb
fsubl
dec
mov
and
leave
sbb
mov
rorl
dec
lret
cmp
aam
aas
cmpb
jbe
fisubrs
imul
xor
cmp
mov
fstps
mov
cmp
cmp
dec
jae
xchg
leave
outsl
scas
aaa
add
jne
into
pop
push
loope
cmp
mov
scas
mov
or
test
aad
dec
arpl
and
jo
xor
cltd
xchg
jmp
loope
push
fnstsw
outsb
dec
push
test
call
dec
lods
mov
stos
cmpl
add
sbb
outsb
roll
pop
or
insb
jmp
outsb
push
adc
add
in
xchg
insb
xor
fcom
or
rolb
ss
jns
adc
ret
inc
mov
outsb
lret
mov
cmp
cmc
aad
jo
scas
xor
add
test
lds
cltd
lock
add
mov
xor
js
and
pop
lock
mov
inc
inc
pop
add
negl
aaa
dec
dec
pop
hlt
lret
xchg
cmp
in
imul
push
fs
dec
imul
dec
sub
inc
lcall
out
mov
pop
orl
sub
das
inc
add
scas
cmovle
aad
xchg
mov
nop
fildll
dec
fs
imul
sub
sbb
daa
repnz
and
iret
sti
xor
movsl
mov
fimuls
inc
jne
shrl
lcall
aaa
jmp
add
adc
and
in
cmp
push
sbb
inc
adc
sub
dec
int3
jno
sbb
fs
xchg
and
ret
inc
push
arpl
dec
lods
xlat
adc
in
addl
dec
mov
repnz
adc
pop
cmp
and
jae
sbb
push
dec
insl
jno
insb
mov
pop
inc
push
pop
vmread
into
call
mov
ret
adc
test
jp
lahf
and
jp
jno
mulb
cmpsl
dec
xchg
shl
fstpt
push
dec
jle
add
inc
cmpl
xlat
push
inc
roll
cltd
scas
or
pop
xchg
insb
dec
js
mov
les
jbe
add
and
add
and
dec
dec
jge,pt
daa
pop
and
mov
and
ljmp
popa
push
or
mov
jle
add
dec
add
pusha
jl
mov
out
int3
xor
xor
push
dec
sbb
lahf
sub
and
lds
test
test
mov
out
sub
inc
loopne
ret
dec
dec
test
jl
push
js
push
sbb
popa
repz
pop
cmpsl
dec
adcl
mov
mov
inc
adc
out
enter
xchg
out
aas
dec
stos
insl
push
cli
or
mov
int3
movsl
and
imul
out
rcll
stos
popl
dec
pop
and
lods
inc
push
xchg
sub
ja
test
repz
add
push
mov
cmp
hlt
leave
iret
and
dec
inc
repz
xchg
dec
push
mov
out
cmpsb
loopne
dec
stos
xor
xchg
es
rorl
xchg
loop
out
and
adc
dec
jns
adc
ret
rcll
nop
test
sbb
pop
adc
dec
js
rorl
cmc
xor
loop
xchg
sar
iret
jmp
mov
push
pop
jnp
arpl
mov
mov
adc
push
bound
dec
xor
xlat
fdivl
pop
mov
pushf
adc
push
mov
stos
inc
and
mov
push
mov
in
dec
in
fmuls
cs
movsb
in
add
lds
fwait
push
adc
add
jge
scas
sti
fcmove
iret
out
sbb
ljmp
shl
pop
out
incl
jl
mov
sub
add
popa
scas
jns
fs
dec
push
push
adc
sahf
jle
inc
andb
and
loopne
popf
lret
jmp
dec
mov
inc
jle
loope
mov
outsb
repnz
into
pop
jle
dec
fidivs
aad
jp
dec
adc
iret
jg
add
add
jg
mov
iret
les
mov
xchg
cmpsb
icebp
mov
sbb
je
outsb
mov
iret
icebp
ret
or
push
shl
fwait
lret
fisttpl
mov
jle
sti
dec
into
bound
insb
aas
dec
sbb
not
jl
mov
push
inc
adc
cmpsl
or
test
aam
and
lds
popf
sub
pushf
inc
shlw
imul
in
cld
test
aam
outsb
push
dec
lret
dec
ror
je
jbe
inc
mov
clc
sbb
sub
sbb
dec
mov
in
nop
adcl
insl
aad
and
add
sub
cmp
outsb
ss
sbb
dec
mov
and
pusha
cmpsw
xchg
dec
add
into
outsl
sbb
mov
dec
push
cmp
push
push
fcom
negl
inc
int
setb
cmpsl
repnz
out
xchg
xlat
in
scas
fisttpll
pop
cld
mov
sarl
mov
lret
int
push
cmp
mov
mov
inc
into
push
lcall
lods
clc
mov
or
aaa
mov
lea
pop
sbb
ror
cmpsl
dec
jg
adc
jg
inc
inc
movsb
adc
call
xchg
insb
mov
dec
pop
adc
cmpl
add
inc
dec
movsl
jne
fnstcw
fs
sub
sahf
mov
mov
repz
stos
mov
lock
xor
or
push
sahf
sub
cli
out
sub
mov
sub
out
add
nop
sub
fmull
mov
fsts
dec
jnp
pop
sub
push
cmp
ror
inc
popf
jne
jp
cmp
sysexit
pushf
mov
pop
lcall
dec
push
inc
call
ss
ret
imulb
dec
loope
imul
les
stos
movsb
mov
hlt
inc
inc
dec
daa
or
paddw
fildll
adc
loopne
adc
aaa
lahf
cwtl
cmp
dec
js
mov
dec
out
inc
jb
daa
jge
test
dec
cltd
cmp
negl
leave
pop
roll
add
push
mov
inc
and
xchg
inc
dec
xchg
and
lcall
or
insl
into
push
xlat
adc
pop
ja
pusha
fnsave
jns
cmp
dec
movsb
push
pop
sti
add
ds
xor
leave
shl
dec
int3
cwtl
and
push
dec
scas
dec
mov
ja
add
dec
outsl
int
push
mov
xor
pop
jmp
inc
fldt
dec
pop
mulb
or
inc
in
ja
cmpsl
loope
out
subl
pop
dec
mov
cmpsb
insb
into
gs
pushf
pop
pop
lds
int
lret
add
dec
nop
daa
imul
jecxz
add
mov
psubb
inc
xor
lret
jle
xchg
gs
lock
scas
xor
movsl
ret
mov
mov
out
test
sti
stos
add
mov
filds
movsl
into
pop
jl
sub
mov
xchg
sub
jg
and
cmp
inc
adc
call
inc
push
fdivp
dec
mov
sub
pusha
sub
jge
jae
and
cmp
adc
dec
stos
xor
test
mov
jle
xor
test
mov
idivb
mov
push
xor
push
cmp
lods
jo
fisubrl
scas
dec
push
pusha
sub
dec
das
adc
xchg
mov
sti
pop
int3
push
fld
stc
jbe
pop
aaa
addr16
andl
ja
js
mov
in
movsl
fmuls
aad
hlt
ficompl
fnstenv
test
out
bound
pushf
sub
in
mov
and
ds
out
stos
popa
cwtl
jo
sbb
xchg
pop
jae
lret
inc
mov
push
iret
pop
in
mov
mov
mov
pushf
push
push
aad
push
das
shrb
dec
int3
ret
daa
sbb
in
xor
cmp
rorl
loop
xlat
sub
stos
jp
stos
test
dec
mov
xor
inc
jl
ret
xlat
push
dec
push
iret
iret
iret
or
push
jle
inc
lahf
jle
mov
mov
cld
mov
inc
aam
xchg
fbld
inc
scas
push
out
int
add
xor
inc
xchg
mov
push
into
and
outsl
popa
dec
mov
rolb
dec
mov
repnz
mov
adc
fisttpl
and
add
mov
imul
test
loope
mov
dec
pop
push
imul
xchg
lcall
cld
inc
dec
in
cwtl
and
pusha
dec
lods
mov
sub
xor
jns
mov
ljmp
outsb
jmp
mov
mov
xor
testb
lahf
vpmacssdqh
xorl
or
mov
jae
dec
adc
aaa
inc
mov
xlat
add
dec
rorb
adc
orb
dec
jl
pusha
jns
dec
mov
dec
pop
xor
psubsw
outsl
out
dec
mov
in
cmp
dec
andl
mov
mov
pop
inc
pop
sub
jno
repnz
jl
shr
mov
bound
jb
nop
jae
mov
pop
fs
dec
jo
push
test
jp
aad
lret
fstl
rclb
loopne
dec
je
test
or
mov
enter
sub
push
lods
iret
mov
mov
or
push
push
and
cmpsb
jno
dec
lret
dec
mov
sbb
dec
adc
pushf
movsb
pop
xchg
dec
out
adc
sub
test
stos
sbb
imul
mov
fmuls
adcb
std
negb
mov
add
mov
jg
xchg
jle
cmp
xor
jbe
push
into
movsl
inc
int
cltd
push
imulb
push
pop
cmp
call
mov
cltd
cmp
mov
clc
ss
test
mov
shrb
sbbl
and
cmpsb
fnsave
lret
push
movsl
inc
sub
pushf
cltd
ret
inc
inc
cmp
jmp
add
insl
dec
icebp
mov
cmc
bound
dec
mov
dec
scas
jl
xor
mov
pop
es
stos
fabs
pmaxub
test
add
cli
and
fs
popa
xchg
push
jnp
mov
jb
lret
into
pop
push
and
jg
add
ljmp
sub
flds
cmp
sub
das
jae
and
outsb
sar
jge
inc
dec
pop
xchg
rclw
lods
and
gs
ds
adc
sub
loopne
ljmp
pop
scas
outsl
push
js
mov
push
sbb
fisttpll
lcall
jle
fcompl
lods
es
and
lret
stos
fmull
mov
adc
es
out
subb
mov
jns
inc
or
or
mov
dec
sbb
lods
mov
or
popf
dec
insb
push
mov
dec
mov
fwait
test
add
xchg
pop
mov
or
dec
lods
sub
fnstsw
jle
repz
lds
sti
in
aad
and
dec
aam
mov
clc
dec
addl
popa
xlat
int3
ss
jae
out
popf
or
xchg
inc
in
pushf
mov
loope
out
ret
lock
in
mov
fistps
adc
mov
adc
cmp
push
fildl
daa
ljmp
add
mov
jne
int
xchg
shlb
call
mov
mov
addr16
mov
adc
lahf
mov
push
push
mov
outsb
sub
sarl
or
lcall
inc
pop
dec
cld
sarb
stc
int3
adc
pop
dec
mov
std
gs
mov
dec
jl
adc
out
outsb
sbb
cmp
aaa
in
mov
das
push
gs
jb
out
add
lea
fildl
pop
insb
jle
and
and
int3
jl
cld
pop
decb
mov
jle
fs
push
jb
xchg
enter
cltd
pusha
inc
adc
dec
sub
idivb
mov
aam
jae
push
daa
js
inc
dec
adc
fsub
sbb
loope
adc
or
jae
dec
cmp
push
mov
leave
sqrtps
les
mov
or
mov
xor
scas
mov
xchg
in
push
sbb
xor
sets
mov
dec
dec
add
sbb
inc
pop
and
fwait
out
cli
mov
cld
into
ljmp
popf
dec
js
xor
gs
mov
xchg
mov
dec
xor
popa
xchg
jne
dec
les
fisubrs
inc
dec
pop
ss
sbb
ljmp
xchg
xor
dec
sub
mov
ss
fimull
jb
push
ret
pop
or
sbb
or
fs
dec
sub
aas
push
or
cmp
sub
xchg
shrl
lahf
std
out
sub
jg
pop
push
sub
sub
lods
sbb
add
dec
cld
cmp
lods
jl
shlb
xlat
test
imul
ret
add
push
inc
ljmp
mov
push
mov
mov
fs
or
xor
pop
jne
mov
pop
jb
vsqrtsd
test
lock
mov
push
aas
mov
or
nop
mov
into
xchg
lahf
and
inc
jmp
pusha
push
scas
cmp
cmp
push
xor
xor
lretw
or
xchg
shrb
xor
mov
fdivl
movsb
pusha
push
or
pop
and
mov
bound
sbb
jl
pushf
dec
push
ja
pusha
cmc
sub
sub
and
popf
test
jg
xchg
xor
push
outsb
mov
repz
add
dec
mov
ror
stc
repz
mov
das
dec
out
into
jle
xor
sbb
jne
and
stos
scas
dec
int
and
jl
cmc
dec
repz
bound
mov
adc
pop
or
cld
into
sbb
dec
insl
dec
lods
pop
mov
xchg
mov
dec
fwait
out
pusha
shrb
mov
cmp
dec
cli
and
jmp
and
scas
mov
and
gs
leave
xchg
mov
imul
daa
dec
popf
dec
mov
dec
pop
xor
cmp
cmp
dec
push
cld
sarl
inc
nop
push
dec
push
pop
mov
mov
jge
xor
jo
icebp
jp
dec
call
push
mov
dec
cmpb
xchg
imul
jne
outsb
repnz
sub
in
sub
cmp
repz
lahf
dec
cmp
dec
pop
jecxz
xor
popf
lods
xchg
outsl
hlt
dec
mov
imul
insl
fldenv
scas
xchg
dec
xor
js,pn
adc
jnp
loope
xchg
cmc
shrb
cmp
add
aam
mov
cmp
int3
leave
andb
iret
cmp
jbe
lret
add
cmpsb
pop
nop
push
rorl
sub
push
dec
bound
clc
mov
std
inc
sarl
enter
aam
fwait
jne
add
dec
or
mov
testl
dec
pop
push
pop
out
mov
out
shrb
int
mov
sbb
test
push
cld
dec
push
mov
cmp
mov
dec
cmp
lret
cld
loope
pop
sbb
jg
jg
bound
cmp
dec
sbb
jg
inc
jl
or
rorl
sbb
xlat
and
xchg
jbe
sub
jecxz
sub
lcall
stos
add
popl
add
fs
fmul
dec
lahf
xor
fsts
add
mov
mov
push
out
xchg
pop
std
add
test
mov
test
dec
pushf
mov
lret
lods
stos
fwait
jmp
and
clc
adc
sarb
iret
xchg
add
cmp
fildl
jle
adc
lods
nop
movsb
push
inc
aaa
cmpsl
cmp
out
mov
jns,pn
inc
jmp
insb
clc
addr16
call
add
adc
mov
into
and
sbb
sub
nop
inc
jne
dec
fwait
xchg
fwait
sahf
lods
cmp
dec
jl
sub
dec
sub
xchg
jo
int
cs
cmpsb
and
sub
add
jb
fldt
das
stos
testb
popf
repnz
sahf
mov
mov
shr
mov
inc
pop
sub
push
jg
or
pop
loopne
out
test
fistpl
nop
mov
into
mov
mov
das
cwtl
and
lret
imul
jb
push
int
jbe
adcl
push
mov
popa
jle
movsl
xlat
cmp
lds
jl
mov
scas
inc
and
dec
mov
out
jge,pn
pushf
loope
mov
insl
movsl
mull
jae
dec
fmull
cmp
out
dec
bound
stos
or
cmc
sahf
orb
lods
mov
in
shll
aas
addr16
sar
adc
fidivrl
jmp
push
out
push
push
imul
iret
cmp
dec
movb
pop
iret
pop
and
imul
jle
testb
dec
pop
inc
push
mov
dec
or
xor
dec
movsl
test
sahf
call
icebp
add
test
adc
fdivrs
js
or
insb
sahf
iret
jp
pop
sub
roll
dec
xor
jg
dec
cmpsl
xor
lret
dec
add
loop
push
popf
or
xor
or
decb
aad
dec
rcll
cs
dec
stos
into
pop
sbb
dec
sbb
lds
sahf
xor
push
dec
fdivr
imul
js
into
fwait
pop
jo
or
and
dec
popf
xchg
jp
std
mov
push
std
pop
push
leave
dec
pop
mov
jbe
or
xlat
dec
cmc
lcall
dec
or
jecxz
cmp
repnz
xchg
testb
or
stos
push
rclb
xchg
decb
mov
inc
jb
mov
addr16
jo
pop
rorl
loope
mov
adc
sub
out
mov
and
enter
movsl
repz
dec
in
jnp
lods
mov
jecxz
sub
xchg
push
pop
and
imul
insb
mov
or
push
xor
mov
jle
insl
pop
mov
mov
sti
jle
gs
push
pushf
inc
out
daa
pop
clc
sahf
in
adc
mov
push
sub
push
not
add
add
out
lea
jl
pop
shlb
lahf
push
ficomps
dec
pop
dec
jns
sbb
out
push
test
dec
aaa
jno
push
push
repz
mov
cltd
pusha
mov
add
stc
pop
mov
and
pusha
push
mov
inc
fs
cmp
pushf
cmc
mulps
adc
xchg
xchg
push
in
mul
dec
aas
cmp
cmp
lret
out
out
dec
sub
push
jl
add
xchg
xor
pop
cltd
fnstcw
aam
dec
iret
xor
insl
pop
xchg
scas
pop
jg
and
test
loopne
lods
jnp,pt
loopew
aam
sbb
push
outsl
test
cmp
loopne
jg
pop
adc
jnp
sti
dec
mov
lock
adc
jg
cmp
inc
push
js
mov
pop
mov
mov
inc
mov
mov
lret
enter
fidivs
scas
and
xchg
aas
dec
cmp
lret
fs
jmp
cld
imul
fs
push
cli
cmp
xchg
ficoml
out
ljmp
fdivrp
dec
jno
jb
out
lods
add
js
in
cmpsl
stos
pop
scas
inc
push
ficoml
push
pushf
mov
inc
mov
test
dec
loope
cltd
int
js
cltd
dec
out
bound
icebp
gs
xchg
mov
add
dec
cmp
shrl
dec
rcrb
js
int
pop
stos
mov
icebp
inc
xor
sub
dec
aas
ret
jle
xor
dec
xchg
mov
jg
push
inc
shlb
lods
jns
pop
jle
xchg
add
movsb
cwtl
std
or
stos
outsl
movsl
push
or
jo
imul
xchg
push
shrb
out
int
add
dec
cmc
or
inc
jg
inc
and
push
mov
dec
std
cmp
pop
or
lret
dec
jmp
sub
js
lock
sub
shrb
scas
mov
lcall
lea
or
fbld
push
pusha
pop
in
mov
inc
mov
roll
test
or
dec
jne
enter
push
cmpsb
cmpsl
loop
ss
jg
outsl
xchg
lcall
push
push
xchg
fcmovb
jo
icebp
dec
mov
and
addr16
jbe
dec
iret
ljmp
dec
dec
push
movsb
dec
xchg
dec
fisttpl
xchg
add
popf
cmp
dec
lret
gs
call
push
nop
imul
and
inc
dec
fnsave
mov
dec
ds
fsubl
cmpsl
pop
imul
xchg
inc
dec
repz
xor
or
mov
pop
adc
clc
push
mov
dec
into
jne
test
adc
sub
or
sbb
dec
ljmp
mov
ja
shll
out
dec
push
add
lcall
dec
adc
cmp
dec
rcl
inc
repz
jecxz
mov
icebp
adc
pop
xor
addr16
mov
dec
adc
je
dec
dec
mov
int
in
sub
repnz
filds
dec
les
push
imul
icebp
popa
orb
pop
jns
add
pop
out
push
je
adc
xchg
dec
hlt
rcr
jnp
out
fimull
repz
fildl
out
cmp
into
dec
movsb
movsb
iret
adc
dec
gs
ja
loopne
dec
push
popf
mov
dec
fbld
cs
dec
jmp
xchg
mov
jno
jo
rolb
xor
dec
cmp
shll
sbb
adc
out
pop
rorl
insb
xor
jle
dec
mov
pop
and
jns
pop
push
dec
adc
xorl
or
int3
rcl
mov
xor
push
inc
push
aam
push
push
jge
inc
dec
dec
pop
inc
mov
je
push
mov
push
push
xor
arpl
dec
test
or
xchg
dec
xchg
jg
lods
gs
outsb
inc
loop
cmpsl
and
push
into
sub
ss
sub
stc
add
fs
hlt
outsl
decl
dec
xchg
fadds
xchg
mov
sbb
push
popa
stos
mov
add
or
or
inc
mov
popf
bound
and
repz
dec
push
xchg
and
jo
mov
inc
outsb
push
sti
sbb
hlt
mov
cmp
movsb
into
into
addr16
add
dec
fdiv
push
adc
ret
dec
insl
mov
inc
jle
dec
dec
xchg
or
mov
shll
jnp
dec
cmp
and
scas
std
sbb
fadds
dec
cmp
jns
adc
jb
fnsave
xlat
mov
mov
cmp
inc
xor
popf
imul
push
mov
lret
push
or
xchg
nop
jns
lcall
nop
adc
push
push
testl
and
and
int
aas
cmp
enter
mov
repnz
data16
cmp
test
pusha
icebp
rorb
mov
cwtl
jle
iret
xor
sub
and
and
lds
shll
sbb
or
ss
aam
shrl
lods
repnz
rorl
dec
add
pop
mov
dec
aad
pop
push
xchg
scas
in
inc
adc
xchg
bound
sbb
ljmp
add
mov
dec
xchg
aad
fst
add
jns
add
adc
push
in
insl
ja
mov
ss
push
cld
leave
dec
sub
mov
jo
xchg
daa
ljmp
xchg
pop
ss
pop
dec
loop
add
or
stos
pop
inc
js
filds
and
dec
mov
sahf
daa
adc
adc
leave
mov
xor
mov
dec
sbb
mov
sti
xlat
mov
dec
sub
mov
inc
pop
xor
aad
data16
pushf
stos
imul
out
ficomps
adc
mov
cs
jbe
dec
mov
dec
repnz
xchg
sub
aad
sete
aam
cmc
mov
mov
loope
outsl
cs
inc
dec
ljmp
cmc
and
gs
rcll
dec
pusha
shlb
insl
and
dec
arpl
sbb
xchg
ret
jne
dec
sti
imul
repz
xor
push
aam
cmp
xchg
les
and
lds
pop
dec
in
adc
or
fwait
icebp
dec
push
or
cmc
cltd
cli
cmpsw
insb
pop
out
pop
popf
dec
call
adc
clc
pop
push
mov
outsl
sbb
icebp
dec
pop
cmpsb
mov
xor
insb
arpl
jle
mov
pop
rcrl
cmp
jmp
popa
pop
arpl
mov
push
dec
inc
mov
iret
adc
bound
jl
dec
jle
push
lock
lcall
jl
mulb
test
pushf
int3
fidivrl
sbb
jg
cmc
imul
add
scas
jle
mov
push
inc
aas
mov
aas
test
pop
movsb
jg
mov
sub
mov
xchg
lods
aas
push
adc
xchg
mov
roll
mov
xor
jb
insb
das
jl
xchg
bound
and
mov
dec
adc
rdtsc
es
add
pop
testb
jl
sbb
scas
cld
stos
push
pop
mov
arpl
mov
push
movq
and
lds
lcall
lock
cmp
dec
add
dec
ss
sub
pop
incl
std
add
push
addr16
call
cli
lods
xor
add
js
jb
dec
inc
in
dec
pusha
sbb
jecxz
cmpsb
pop
scas
xchg
fstl
push
push
outsl
sub
scas
sbb
sahf
jp
pop
in
mov
and
jne
and
or
loope
outsl
add
adc
sub
int3
and
sbb
std
dec
jge
cmp
call
test
add
adc
xlat
loop
dec
and
in
lock
xchg
dec
add
mov
dec
dec
imul
ljmp
mov
pop
cld
lahf
shll
imul
clc
adc
push
push
xchg
scas
sbb
push
add
inc
sbb
cmpsl
cmp
mov
shll
add
mov
loop
hlt
push
sbb
add
sub
dec
cmpsl
lods
xor
dec
xchg
mov
dec
das
daa
push
test
dec
idivb
push
int
mov
sar
or
fcomps
xlat
mov
pusha
xchg
inc
lahf
pop
dec
push
push
dec
pushf
dec
cmpsb
adc
sub
mov
pop
sbb
int3
movsb
out
fadd
mov
scas
add
jno
mov
xchg
aad
or
adc
lcall
test
mov
push
les
and
lods
ds
cli
inc
pop
int
js
dec
negl
mov
or
ret
fwait
dec
dec
sbb
sub
fcomip
add
test
dec
push
and
cld
gs
lcall
dec
movsb
sub
lods
pop
push
inc
or
inc
inc
cld
and
jmp
mov
cmc
sub
out
filds
popf
inc
icebp
fisttpl
pop
or
mov
push
sub
pusha
ds
es
cwtl
push
arpl
xlat
sbb
stos
dec
ret
rcll
mov
and
out
push
dec
pusha
insb
jbe
push
shrb
push
xchg
andb
in
popa
jbe
xor
mov
jmp
rorl
pop
add
js
inc
adc
xchg
inc
sub
dec
add
and
jg
cli
mov
sub
cmc
rcll
repnz
rclb
pop
dec
jns
push
pop
in
clc
dec
cmp
and
inc
dec
or
jns
pop
mov
inc
sub
dec
xorb
jne
shlb
push
mov
mov
incb
pop
adc
or
sub
pop
pop
xchg
add
mov
cmp
jle
dec
lahf
fisttpl
dec
rcll
imul
pop
iret
dec
sub
mov
je
scas
cmp
js
inc
shl
xchg
pop
sub
inc
inc
in
ljmp
add
dec
pop
jmp
cmp
dec
popa
insl
xor
or
mov
fimuls
sahf
std
out
or
and
dec
out
mov
push
jl
jb
std
adc
lahf
dec
fdivrs
aam
adc
xor
lret
bound
dec
xorb
fsubp
into
pop
test
inc
in
dec
das
sub
call
adc
mov
xchg
mov
movntq
sub
push
lds
shrl
dec
sbb
int3
adc
outsl
inc
pop
dec
aaa
and
jle
ret
insb
cli
repz
aas
daa
inc
push
loope
pop
nop
pushf
lret
loop
cmp
andl
inc
jno
imul
dec
add
xchg
sub
mov
or
jp
dec
push
mov
pop
mov
or
ss
mov
dec
mov
sub
xchg
mov
and
cmpsb
sub
sbb
jle
test
popa
out
inc
fwait
mov
test
push
pushf
sub
jne
lahf
dec
push
sub
les
lds
cmp
into
adc
repnz
loopne
mov
xchg
push
pop
push
imul
mov
mov
in
pop
jnp
orb
push
outsl
pop
sbb
cmp
dec
add
push
dec
leave
pop
sahf
inc
push
mov
xchg
or
inc
lea
popf
cs
cli
sbb
push
add
cld
xchg
dec
mov
dec
jmp
inc
add
dec
or
xchg
das
cmp
cld
orl
mov
stos
xlat
xor
test
pop
stc
setp
ret
cmpl
sahf
jbe
cs
and
sub
icebp
rorb
sbb
outsb
addb
xchg
into
in
inc
xor
movsl
aam
dec
in
aad
mov
pslld
daa
xchg
push
and
and
dec
repz
in
push
rcll
xor
movsb
jl
mov
dec
dec
xchg
push
bound
sub
push
shlb
js
pop
movsb
dec
xor
shl
out
sbb
out
jns
fcoms
mov
add
inc
cs
jg
shlb
push
adc
cmp
mov
or
insb
test
or
outsl
insb
push
cltd
dec
jle
xor
add
movsb
test
xchg
adcb
dec
jmp
fldenv
mov
pop
push
shlb
lea
fstpt
int3
cmp
or
sahf
jecxz
shll
jmp
int3
push
in
in
hlt
mov
fs
add
sub
or
cmc
out
mov
sub
jmp
xor
cmpsl
daa
lods
dec
push
jb
pusha
push
jle
ret
pop
aaa
out
inc
dec
test
adc
roll
sbb
adc
adc
dec
insb
ljmp
pop
lret
mov
daa
cmp
mov
hlt
stos
cmp
loop
jle
pop
repz
push
fdivr
ror
inc
movsl
pop
mov
test
jae
sarl
jge
jmp
out
jl
cmp
lock
cmpsl
insl
iret
ljmp
xor
mov
movsb
ret
enter
mov
xor
pop
lcall
jne
sub
cld
mov
cli
jle
ja
fidivrs
inc
push
sub
dec
inc
xlat
mov
mov
dec
or
shl
push
dec
jns
xchg
push
cld
andb
movsl
js
dec
add
adc
nop
jns
dec
add
jno
dec
mov
and
adc
mov
mov
sub
xchg
imul
pop
out
xor
clc
xchg
xor
sbb
cmc
add
and
dec
mov
das
jle
mov
xor
adc
pop
inc
sbb
xchg
cmpsb
or
fnstsw
scas
sbb
mov
dec
inc
jmp
in
inc
dec
push
dec
movsl
icebp
jae
addr16
std
dec
notb
inc
cmp
ret
imul
dec
mov
jl
jno
and
sbb
loope
dec
mov
sbbl
and
fistpl
fimull
adcl
sub
dec
fwait
pop
fstps
mov
cmpsb
fmuls
push
push
inc
push
xor
sub
sbb
add
shrb
pusha
pop
dec
out
jns
mov
dec
dec
stos
mov
cmp
cmp
dec
pop
out
lock
ljmp
scas
cmp
mov
idivl
jle
xchg
bound
out
mov
inc
jo
nop
jbe
fldcw
fwait
into
js
fimull
jae
mov
mov
mov
fldenv
push
add
je
bound
cmpsb
jle
test
push
push
lret
jbe
and
into
cmp
mov
xor
add
in
sbb
and
repz
data16
rorb
es
in
lds
dec
lods
stos
jge
ljmp
jmp
xchg
push
push
xor
into
jae
cltd
push
scas
or
inc
sbb
or
dec
cmpsl
dec
testb
mov
daa
mov
jg
fnstsw
push
mov
mov
inc
mov
fstl
mov
mov
sti
dec
lcall
cmp
stos
rorb
and
outsb
xchg
mov
dec
cmpsb
in
cmp
add
pop
rcrb
dec
pop
cmpsl
inc
cs
dec
loopne
insb
push
mov
dec
pop
jne
mov
lret
out
dec
mov
adcb
cmp
pushf
jns
or
and
mov
adc
inc
data16
and
add
sbb
adc
dec
nop
int3
jp
cld
mov
adc
dec
fsubrl
adc
insb
sub
neg
rorl
mov
cmp
mov
dec
lods
dec
je
lock
movsl
dec
pop
dec
xchg
test
rol
in
cld
and
sbb
lret
push
ds
sti
or
fwait
test
xchg
push
xchg
dec
sub
mov
dec
or
gs
mov
stc
push
xor
jl
notl
aad
mov
adc
stos
bound
out
je
inc
into
jg
dec
js
std
jle
mov
sbb
sbb
imul
addr16
jns
fiadds
test
je
jb
fdiv
scas
imul
ret
jle
das
in
pop
arpl
test
adc
xchg
mov
xchg
add
pop
sbb
and
fldenv
dec
insb
imul
inc
scas
into
lds
push
js
mov
aas
inc
mov
mov
aaa
dec
pop
push
cli
sub
cmp
ficomps
mov
jle,pn
mov
gs
mov
les
lea
xchg
ret
dec
loopne
jle
inc
pop
sahf
in
in
adc
jg
call
and
ds
cld
mov
or
test
jnp
add
add
jns
adc
stos
sahf
js
xor
xor
repz
repnz
cmpsl
mov
dec
pop
fwait
cld
jnp
pop
sbb
nop
dec
mov
or
neg
popf
xchg
out
adc
xor
clc
cmpsl
stos
mov
cs
adc
and
jmp
push
mov
arpl
xorb
or
rorb
aaa
cli
in
lret
cs
push
sbb
gs
xor
push
or
mov
dec
mov
sbb
fsub
xor
mov
dec
mov
in
repz
dec
inc
lods
jnp
cmp
mov
iret
in
je
jge
lret
and
pop
push
das
movsb
cmp
enter
out
xor
and
pop
in
shrb
cmc
mov
outsl
dec
sub
lock
and
cli
pop
ja
outsb
shr
add
ds
mov
cli
jb
cmpsb
jae
mov
dec
dec
pushw
cmc
and
dec
sub
imul
ror
fsubrs
jns
inc
mov
into
push
dec
and
dec
int
jmp
mov
adc
xchg
mov
mov
or
fisubrl
rcrb
cmpsl
imul
xor
inc
dec
mov
cltd
sbb
inc
aaa
inc
in
mov
mov
ret
scas
mov
dec
mov
push
pop
sub
popa
mov
or
add
jo
mov
dec
jle
dec
jge
xor
sub
test
mov
cmp
push
sbb
and
mov
dec
sub
roll
idiv
jge
xchg
leave
rorl
mov
addr16
dec
dec
inc
xlat
mov
pop
dec
ret
pop
adc
dec
xor
cmp
jmp
and
filds
push
cwtl
in
mov
mov
loopne
lahf
and
fmuls
mov
dec
lcall
cmc
push
mov
add
ljmp
mov
and
mov
dec
xchg
cmp
pop
dec
mov
xor
lret
dec
pop
aaa
test
mull
dec
mov
jge
loopw
rorl
call
add
movsl
mov
outsb
dec
dec
je
adc
into
lea
out
ret
mov
add
test
jle
dec
and
cli
sahf
xchg
mov
xor
pop
cmp
pop
cmpsb
rorb
stos
test
lahf
insb
pushf
data16
test
je
call
inc
add
out
sub
dec
and
pop
out
enter
jmp
push
dec
mov
test
jle
imul
subb
cmp
push
push
xor
addl
fldpi
jle
mov
test
and
lret
xor
fs
dec
sbb
cli
outsl
pop
nop
push
sbbb
jl
orl
int3
scas
dec
and
inc
ret
repz
stos
jb
fpatan
cmpsb
mov
push
orl
and
adc
push
nop
push
cwtl
sub
das
mov
fdivr
lea
mov
jg
orl
mov
mov
call
lock
movsb
cs
jmp
jmp
mov
jbe
and
insb
push
xor
xchg
lcall
cld
cwtl
push
clc
lret
cmp
call
inc
push
scas
test
and
das
cwtl
iret
xor
mov
pop
push
fcomps
ja
sti
fwait
cmp
sbb
ds
stos
jmp
dec
jno
mov
dec
sub
lcall
aas
xchg
iret
jnp
sbb
cmp
sub
andps
aaa
in
aam
mov
jle
inc
pop
jle
cmpsl
jb
iret
loopne
leave
jmp
out
shlb
insb
dec
mov
arpl
and
fldcw
mov
inc
sbb
rclb
mov
stos
push
or
fsubs
movsb
cmp
inc
cmp
jl
movsl
icebp
mov
jl
xchg
mov
inc
movsb
aaa
imul
mov
xchg
outsb
mov
xchg
dec
pop
setge
shlb
push
lcall
push
test
iret
fsubr
pop
jl
mov
aad
aaa
in
dec
mov
stos
dec
notb
icebp
jns
mov
inc
and
push
icebp
add
add
sbb
mov
orb
push
fimuls
loop
outsb
mov
sub
lahf
fnstcw
mov
mov
inc
dec
out
test
adc
cmp
rorl
inc
adc
jp
mov
fs
add
xor
iret
stc
fucomp
mov
push
inc
shlb
arpl
push
dec
test
aad
dec
push
sahf
lock
outsb
xor
xor
xchg
fbld
int3
mov
lret
mov
shll
aad
xchg
jns
ljmp
mov
xchg
cmp
adc
cmp
into
sub
mov
push
mov
dec
xorl
dec
pop
xor
and
xchg
subb
push
lahf
dec
test
pop
pop
leave
dec
pop
cli
jmp
repnz
mov
sbb
shlb
sbb
adc
cmpsl
push
into
inc
cwtl
sub
mov
dec
xchg
andb
ljmp
adcl
dec
inc
aaa
pusha
cltd
pop
xchg
dec
push
jg
sub
jo
jge
jmp
arpl
mov
or
xchg
jne
clc
mov
inc
dec
movsb
or
popw
xlat
loopne
pop
add
cwtl
dec
push
jecxz
mov
lcall
popa
in
repnz
dec
frstor
ss
or
testl
mov
mov
add
cltd
sahf
rep
ret
dec
fildll
popf
test
aaa
jmp
addl
in
jno
cmp
pop
jp
pop
in
dec
or
jp
jecxz
xchg
inc
ret
dec
cmp
jg
imul
pop
out
in
jg
dec
mov
aaa
lahf
es
enter
dec
inc
jg
cwtl
cmc
into
inc
addr16
xlat
adc
dec
sarl
pop
push
scas
repz
mov
push
icebp
test
pop
jno
out
test
popf
mov
cld
add
sub
mov
sub
mov
das
jl
inc
fs
mov
mov
xor
mov
add
bound
loop
adc
dec
sti
xlat
mov
fdivr
push
fisubl
mov
jl
pop
aam
lret
pop
cmp
mov
and
or
xor
inc
les
and
test
scas
dec
aas
mov
dec
push
jl
add
sbb
pushf
mov
jmp
sub
mov
push
lret
jle
jp
and
mov
mov
pop
data16
int3
push
movsl
inc
or
in
cmp
inc
cmp
call
or
fdivs
sahf
jns
popf
movsb
ss
bound
add
sub
imul
roll
bound
imul
jmp
jo
int
mov
jbe
pop
int3
test
insb
fmulp
scas
mov
shrb
sbb
notw
out
and
push
cmp
rorb
mov
jns
pushf
push
mov
gs
pop
xchg
outsb
popa
rclb
push
or
mov
xor
dec
cmp
and
sub
mov
sarl
popf
sub
pop
sti
jle
stos
js
movsl
fldenv
enter
cmp
stc
mov
pop
mov
icebp
sub
repz
dec
rol
sti
sbb
das
stc
jle
xchg
inc
rclb
movsl
ja
addr16
mov
jne
cwtl
sbb
xchg
lods
dec
out
pop
dec
pop
fldcw
inc
rcll
adc
inc
push
jg
jmp
test
fs
div
push
rclb
push
insb
scas
ret
int3
scas
inc
mov
int
repnz
adc
fucom
dec
and
dec
jg
enter
scas
out
shll
pop
ljmp
xor
cmp
imul
pop
insl
popa
jp
dec
dec
jge
jae
xchg
pop
mov
xchg
xor
lds
ret
es
xor
sti
lea
add
mov
push
dec
xchg
dec
fidivl
insb
adc
sub
aaa
pop
jae
sahf
dec
iret
pop
je
pop
and
out
lcall
fwait
test
sub
insb
cld
mov
dec
popf
cmp
out
stos
les
fwait
inc
push
xlat
sbbl
cmpsb
fs
ja
stos
rorl
add
and
iretw
xor
hlt
test
outsl
cs
pop
mov
cld
xchg
xchg
or
daa
jl
mov
les
outsb
lcall
lods
mov
add
push
and
sbb
xchg
inc
in
test
jp
pop
test
adc
lods
pop
scas
push
mov
ret
adc
jl
outsb
push
in
shl
push
mov
jg
jnp
ret
jle
dec
pop
scas
test
cltd
fisubrs
pop
das
mov
adc
cmp
xchg
or
ss
mov
mov
dec
loop
ret
cs
push
dec
inc
jg
ja
ret
repnz
ds
cmp
or
idivb
inc
ss
cmpsl
and
notb
inc
stos
fldl
outsl
dec
je
add
dec
mov
add
fsubl
out
sarl
mov
js
aaa
dec
and
sbb
repz
xor
jl
int
add
fmull
xor
notb
sub
dec
xchg
jo
or
repz
or
dec
dec
minps
pop
fcmove
imul
adc
add
dec
jno
or
jb
adc
jle
xchg
cli
lea
shl
clc
dec
mov
fs
scas
dec
or
arpl
dec
add
dec
aad
lock
mov
int3
inc
dec
sti
stos
ret
jle
adc
push
fdivrs
fisttps
daa
push
dec
arpl
aad
sub
movsb
pop
dec
jp
jecxz
mov
orl
test
xlat
cld
orb
fisttps
lea
mov
mov
inc
pop
fnstsw
mov
dec
frstor
mov
outsb
popf
dec
pop
iret
sub
jo
adc
cmp
leave
add
aad
imul
dec
test
andl
call
js
xchg
pop
aas
mov
outsb
push
scas
test
pop
or
mov
rorb
xchg
aam
fcomps
mov
xor
adc
pop
cmc
fdivrs
cmp
movsb
shll
cs
sub
jle
nop
cld
xchg
jle
fsubl
mov
dec
lahf
fisubs
mov
repz
push
mov
subb
fcomps
dec
dec
or
adc
dec
bound
rcrb
jg
rcl
orl
dec
inc
bound
test
je
clc
rorb
sub
mov
inc
cmp
fisubrl
jb
xor
cmp
lea
repz
sarl
mov
dec
pusha
dec
daa
add
aaa
mov
xchg
dec
mov
popa
inc
mov
fisubrl
push
mov
xor
cmpl
jmp
inc
dec
cmp
int3
inc
sub
dec
repnz
js
enter
das
fwait
dec
lcall
dec
cwtl
out
fs
stos
aad
adc
push
fisubrs
les
and
xchg
mov
mov
pusha
mov
movsb
js
pusha
ret
jg
aaa
aaa
loopne
cmp
notl
arpl
jg
sub
popa
pop
pop
and
push
inc
js
pop
ret
pop
xchg
int3
cmc
dec
sar
mov
lcall
stc
dec
adc
or
dec
adc
jno
inc
dec
test
jmp
mov
int3
xchg
bound
dec
jp
std
data16
cmp
rolb
mov
mov
jg
in
flds
fisttps
lds
out
mov
dec
sub
stos
stos
xor
adc
push
add
and
arpl
scas
dec
dec
mov
adc
xchg
cltd
pop
dec
push
sbb
clc
je
jbe
sub
dec
sub
fisubrl
dec
andb
dec
scas
xor
jmp
dec
aad
add
cltd
mov
inc
xchg
pop
jbe
jle
movsb
mov
enter
jl
mov
xor
scas
clc
movsl
dec
cs
xor
xchg
mov
stc
push
pop
xchg
repz
addb
push
and
sub
mov
mov
add
and
push
xsha256
cmpsb
adc
mov
add
cmp
mov
enter
insb
outsl
test
ror
mov
into
fisubrs
sbb
inc
movsb
ljmp
inc
imul
jl
aam
jle
rcl
jle
push
aad
addr16
lahf
scas
jg
dec
pop
scas
jl,pn
das
shrb
div
addb
jg
sub
leave
arpl
lret
dec
mov
dec
add
xor
push
jne
inc
cld
pop
sbb
cld
xlat
in
push
in
inc
mov
subb
mov
jg
mov
pop
in
xchg
inc
mov
test
jmp
dec
pop
lds
fdivrs
sti
loopne
sbb
or
xchg
cmp
and
in
clc
dec
lret
int3
mov
out
sbb
les
repz
cmp
shr
jo
adc
adc
mov
out
jge
outsb
testl
int
or
pusha
jmp
inc
pcmpeqd
frstor
or
pop
rcrl
call
dec
je
in
dec
inc
fidivrl
fbstp
jo
push
cmp
dec
and
xor
int
decl
dec
pusha
cmp
repnz
mov
xor
fbstp
sbb
lods
mov
xor
inc
or
movsl
jge
int
jbe
jg
mov
adc
popa
add
dec
loope
call
shll
cwtl
adc
inc
xchg
lret
scas
into
and
inc
jb
dec
mov
enter
push
mov
inc
and
rorb
negb
sub
adc
and
pop
sbb
xchg
lcall
mov
data16
dec
xor
and
sub
test
adcb
mov
jns
daa
cli
int
mov
imul
xchg
mov
in
mov
push
adc
outsb
mov
clc
add
jmp
lret
lcall
mov
notb
movsb
mov
cwtl
cli
push
mov
push
js
xor
pop
and
pusha
dec
lret
test
jg
mov
mov
jecxz
repz
cld
adc
pop
dec
mov
das
push
mov
int3
fwait
fs
sub
dec
push
or
xchg
mov
and
in
jl
add
jo
outsl
ss
rolb
dec
xchg
in
pusha
pop
iret
inc
fadds
mov
scas
push
mov
jnp
push
inc
fwait
cmpsb
dec
repz
imul
pop
xchg
pop
or
shll
mov
mov
leave
adc
fsubrp
dec
stos
xor
mov
dec
push
mov
leave
cwtl
cmp
dec
mov
dec
sbb
add
ret
out
das
xor
mov
cmp
cwtl
xchg
jl
cmpsl
scas
mov
andb
mov
mov
or
ss
dec
adc
xchg
push
nop
aad
dec
dec
mov
inc
mov
mov
fimuls
lret
push
negl
jmp
cmp
popf
stc
dec
test
xor
xchg
aaa
idivb
mov
lahf
or
outsb
repnz
dec
mov
shrb
mov
cmpsl
jp
or
test
loope
out
dec
scas
fisubl
mov
ret
mov
and
inc
test
pop
dec
sbb
push
sahf
mov
jno
mov
or
test
imul
rorb
pusha
dec
xor
mov
pop
outsb
in
dec
sbb
jo
inc
outsb
cltd
gs
cmc
das
dec
sub
inc
mov
addr16
aad
sub
rorb
inc
fs
sarl
addb
imul
scas
iret
fwait
in
push
dec
pop
nop
dec
clc
imul
dec
mov
mov
sub
movsl
fldcw
inc
push
popa
dec
dec
inc
sub
mov
fsubrs
add
xchg
dec
int
sarl
iret
dec
cmc
adc
dec
inc
stos
pop
inc
pop
add
das
aad
mov
sub
pop
shl
pop
dec
mov
outsl
leave
dec
testl
mov
dec
jge
int3
jbe
sub
gs
dec
sbb
ret
jae
pop
mov
sub
outsb
jb
sub
dec
push
insb
addb
cmp
pop
jae
dec
push
push
lea
shr
push
push
mov
dec
cld
insl
jo
push
dec
jmp
fmul
aaa
arpl
ret
dec
xor
add
pop
dec
scas
lret
mov
cs
cmp
cld
jge
imul
jmp
mov
mov
aad
cli
rep
dec
dec
add
repz
xor
int
cli
ds
dec
dec
sbb
add
adc
fwait
rcll
dec
jns
sub
xor
pop
jne
psubusb
hlt
adc
dec
jns
in
adc
xor
dec
fisttpll
outsb
inc
bound
fmull
stos
xchg
orb
push
sbb
jno
pop
dec
mov
and
icebp
mov
cmp
jnp
dec
cmp
xchg
aam
adc
dec
addb
xor
imul
jecxz
iret
jne
hlt
pop
xchg
sub
clc
add
scas
shll
xchg
cmpsb
adc
dec
in
sbb
out
repz
repnz
xlat
push
cmp
jp
leave
mov
jge
imul
dec
fs
int3
jo
sahf
into
cmp
jp
scas
mov
dec
jmp
dec
test
es
popa
scas
dec
int
mov
inc
pop
jo
dec
loope
jmp
aas
xor
xor
or
inc
repz
addr16
dec
into
insl
pop
mov
pop
arpl
pop
stos
push
pop
mov
xchg
sahf
dec
sub
imul
dec
jl
cltd
cmp
fiaddl
or
leave
sbb
cwtl
push
adc
icebp
mov
roll
cmp
cmp
or
dec
icebp
xchg
movsb
out
and
jnp
add
data16
xor
fs
dec
inc
jb
sbb
aad
mov
xchg
test
lcall
aad
cltd
movsb
fisubrs
lods
js
xchg
gs
in
popa
mov
adc
sub
imul
scas
or
mov
fldcw
dec
sbb
repz
into
sub
int
push
inc
xchg
pop
in
out
scas
inc
movsl
movsb
jne
fildll
dec
xorl
cmp
push
insb
dec
cmpsl
jle
data16
ror
pop
dec
cmp
out
mov
fsts
shrl
movsl
loop
aas
jmp
dec
xchg
hlt
mov
mov
clc
jle
fsubs
pop
fisttpll
mov
xor
cltd
rorl
adc
push
jle
repz
bound
inc
adc
stos
sbbb
int
xchg
stc
cld
subl
rorb
or
mov
jl
xor
das
mov
jae
cli
push
icebp
or
jns
sub
jecxz
adc
jae
insl
pop
pop
inc
test
xchg
test
xor
call
out
xor
cmp
and
out
jle
movb
mov
orl
pushf
xor
push
fs
jl
das
mov
fwait
xchg
and
pop
sti
push
cmp
sub
push
es
jbe
push
cltd
dec
ficomps
cmpsl
push
inc
loopne
dec
sbb
bound
jne
pop
das
sti
cli
inc
ljmp
dec
push
push
jle
xor
movsl
insl
mov
fwait
in
adc
js
nop
mov
adc
inc
or
repz
inc
lods
jl
sahf
xlat
or
loopne
dec
in
mov
daa
inc
mov
gs
mov
mov
and
cmpsl
scas
clc
mov
mov
sub
jnp
cmpsb
sub
pop
mov
adc
nop
xchg
lahf
cmpsb
push
jl
mov
rol
test
nop
int3
in
xchg
cmp
mov
adc
and
jns
xchg
in
dec
pop
xadd
das
sub
fisubrl
jle
mov
jno
add
icebp
jae
add
scas
push
pusha
adc
sub
fbld
movsb
pop
fdivrl
rcl
push
jmp
stos
aas
icebp
fldt
pop
adc
aaa
stc
out
sub
push
pop
add
jo
lods
out
inc
bound
clc
js
ljmp
fs
loopne
jns
pop
hlt
cmp
sti
mov
jp
push
dec
ljmp
cmp
dec
pop
lret
mov
scas
outsb
rcll
mov
pop
xchg
and
mov
mov
scas
adc
inc
sub
and
inc
movsl
mov
jg
gs
dec
fsubrp
scas
add
cmp
cwtl
dec
pop
push
shll
rol
out
fldl
sub
mov
inc
or
adc
jo
cmp
scas
dec
ss
je
shrb
clc
int3
jno
mov
dec
and
push
ja
mov
das
mov
mov
dec
add
inc
stc
addb
sub
dec
and
stc
xlat
dec
cmp
xchg
mov
mov
outsl
js
xor
xor
cmp
and
xchg
push
fistpl
popa
inc
xorb
push
scas
ret
xlat
aad
mov
sti
jb
pop
ss
and
cmp
scas
cld
lock
fdivrl
jmp
or
fwait
cmp
jno
mov
orl
sbb
fldt
mov
inc
sub
add
into
adc
lds
bound
adc
dec
out
xchg
jg
cmp
mov
adc
dec
stos
cmp
inc
ficoms
repz
xchg
inc
aaa
lcall
das
xchg
movl
sub
mov
cli
lods
rcrl
push
add
pusha
mov
and
add
adc
mov
xchg
test
jl
jg
jno
mov
inc
push
lret
adc
fwait
push
xorl
cmp
iret
jle
jo
cmp
cli
sub
popa
jmp
bound
scas
push
int3
xor
sbb
adc
aad
inc
das
dec
mov
dec
fimuls
stos
stc
push
dec
xlat
scas
mov
in
iret
jl
ss
loope
scas
dec
sbb
dec
push
jle
xor
xchg
sbb
xor
ljmp
jg
mov
adcb
leave
mov
testb
jg
sub
out
sub
out
outsb
rep
jp
shll
jle
pop
ds
add
pop
divl
das
mov
repnz
xchg
pop
add
subps
and
lods
cs
xor
sbb
mov
insb
xchg
movsb
push
int
aaa
adc
mov
sbb
dec
mov
inc
push
popf
arpl
cltd
jge
in
aaa
test
dec
ds
pop
arpl
mov
dec
ficompl
pop
and
inc
clc
lods
xor
push
pop
icebp
incl
inc
dec
aas
push
or
and
mov
rcl
cmp
xor
add
push
pop
and
insb
dec
popl
xchg
vmread
jge
jl
loopne
dec
insb
aas
jae
adc
je
add
cmp
jb
in
mov
cmp
xchg
lcall
push
jl
or
or
or
sbb
inc
ret
sub
mov
scas
mov
dec
xor
mov
in
nop
jbe
push
ljmp
xor
xbegin
scas
aam
fdivs
aas
xchg
icebp
repz
dec
jg
mov
sbb
scas
push
inc
push
fs
scas
and
push
outsl
add
cmp
js
call
dec
es
xor
inc
pop
insb
aaa
sub
cmp
xor
and
int
pop
jmp
scas
testl
sbb
lea
or
dec
sbb
xrelease
in
adc
jne
dec
insb
jns
nop
mov
mov
sahf
mov
mov
dec
jmp
cmp
cmp
push
push
push
repnz
les
into
xor
adc
das
add
dec
lods
lock
jle
xlat
mov
inc
jb
sub
ja
adc
and
jge
mov
and
stos
inc
or
mov
cmp
add
mov
out
cli
push
xor
push
cmpsl
fildll
dec
enter
aas
add
icebp
bound
in
mov
dec
inc
test
aad
dec
ret
inc
loopne
lahf
jb
dec
add
out
int
jbe
add
dec
addr16
xchg
loop
sbb
cmp
adc
sub
mov
pop
roll
pop
mov
popa
sbb
mov
mov
push
lock
bound
lret
in
dec
ss
sbb
push
adc
adc
bound
cmc
popa
mov
out
in
pop
mov
or
test
jecxz
mov
outsl
lds
or
push
mov
dec
in
test
lret
and
loopne
mov
push
and
dec
pop
dec
mov
ds
lods
dec
mov
addr16
jle
xchg
xor
shll
out
mov
sahf
dec
aam
cmp
pop
mov
xchg
dec
xchg
mov
dec
aas
pop
dec
pushf
outsb
adc
or
cmpsb
dec
sub
and
mov
popw
dec
popa
dec
and
adcl
movsb
shlb
jl
iret
sub
ficompl
orl
lret
fdecstp
das
inc
nop
jle
andl
mov
cmp
push
push
inc
jle
repz
popl
aad
pop
ds
aad
fs
xchg
pushf
test
out
mov
pop
aam
inc
xchg
mov
lock
movsl
std
fistps
and
shrb
dec
adcb
imul
mov
pop
jmp
xlat
stos
addr16
aaa
in
mov
arpl
lret
das
lods
loope
mov
iret
in
cmc
inc
and
mov
adc
outsb
jl
cli
repz
imull
xchg
lcall
movsl
push
icebp
sub
divl
scas
sbb
fnstsw
dec
ficomps
xchg
jg
dec
xor
xor
sbb
xor
fst
cmp
insl
push
insl
xor
lock
pop
sub
cmc
scas
mov
out
ja
jle
mov
push
lret
and
mov
out
inc
jl
in
gs
adc
mov
xchg
int3
lods
ds
fildl
insb
out
lahf
push
mov
lea
addr16
pop
jl
pop
mov
movsl
aam
xlat
pop
mov
inc
bound
dec
fiaddl
add
xchg
sub
xor
enter
mov
dec
sahf
rol
lea
cs
cld
jecxz
xor
rorb
in
mov
test
xor
xor
mov
mov
faddp
add
andb
fsubrl
shrb
sub
fdiv
fwait
int
pop
in
pop
xchg
xor
xchg
push
mov
xor
mov
add
mov
jb
dec
negb
jg
into
pmaxub
or
sbb
jns
or
jb
outsb
inc
xor
xlat
add
and
inc
in
cmpl
add
push
and
xor
cmp
nop
lods
mov
jl
bound
sbb
or
mov
jle
decl
xor
ss
jne
lock
cs
cmp
or
adc
cld
mov
sbbb
xchg
clc
cmpsl
int
das
push
sahf
xchg
mov
out
ja
aaa
inc
js
adc
add
dec
mov
mov
mov
cmp
gs
neg
std
xchg
sarl
loop
cmp
cmp
mov
lcall
movsb
lret
adc
ret
int
push
mov
xchg
mov
jg
out
test
vunpcklps
pop
sub
jle
xlat
test
and
data16
and
and
call
or
popa
dec
popf
leave
lahf
shll
adc
imul
pop
loope
loop
stos
fildll
cmc
add
dec
and
and
adc
or
jne
push
cs
daa
scas
adc
data16
mov
add
pusha
pop
and
mov
iret
cs
dec
jg
leave
dec
push
push
mov
inc
cmp
outsl
into
stos
les
mov
arpl
pop
leave
fcmovbe
jl
pop
dec
aam
dec
cltd
mov
jge
clc
ds
dec
out
and
and
adcl
and
jae
loopne
jp
cmp
lock
xor
push
cmc
sahf
mov
imul
lock
popf
insl
into
dec
sbb
test
das
xor
pop
ret
xor
iret
xor
mov
scas
pop
shl
pop
dec
cwtl
cmp
mov
or
adc
dec
ljmp
fs
test
push
push
subl
stos
mov
xor
pop
sub
js
cmpsl
dec
ret
dec
loope
xchg
sbb
nop
jnp
into
in
dec
clc
stos
cli
mov
cld
es
sub
nop
pop
outsb
stc
inc
xchg
enter
bound
mov
push
fldcw
inc
repz
imul
lods
and
les
dec
and
or
mov
push
aas
jbe
dec
dec
xor
sbb
dec
mov
mov
add
or
adc
mov
inc
outsb
dec
aas
leave
push
push
lds
and
mov
iret
flds
outsl
rcr
dec
or
jecxz
out
pop
cmp
mov
dec
jl
adc
and
jbe
or
repz
jl
das
pop
push
insl
ds
repnz
pusha
or
loope
dec
or
sahf
sti
or
jl
outsl
sbb
dec
fcomps
fwait
iret
ljmp
nop
out
mov
push
dec
lods
subb
icebp
push
xchg
loop
adcl
rorb
outsl
xchg
jns
mull
mov
mov
sbb
dec
iret
imul
aaa
out
push
dec
js
and
sub
sbb
dec
xchg
cmp
mov
js
repz
imul
clc
hlt
inc
or
xchg
xchg
mov
xor
filds
into
popa
mov
insb
mov
push
out
xchg
test
or
and
mov
fidivrs
xor
int3
dec
adc
mov
stos
jge
inc
hlt
or
pusha
jl
xor
mov
ret
fistpl
cltd
scas
inc
dec
test
sbb
fisttpll
xor
push
inc
sub
or
out
push
iret
adc
cli
push
lahf
cmp
aas
add
dec
jo
es
push
loopne
xor
push
sarl
imul
cmp
je
inc
xor
ds
mov
mov
pop
dec
dec
or
and
cmpsb
loop
add
jle
sub
add
aaa
je
xor
into
lds
mov
mov
sbb
lods
cwtl
push
dec
mov
notb
and
dec
lods
jo
sub
push
xchg
jb
dec
mov
xor
jecxz
sub
out
es
aad
and
scas
jl
xchg
mov
dec
and
outsb
icebp
rcr
push
dec
movsl
test
push
push
popf
adc
mov
das
cmp
fwait
mov
jle
out
ret
lods
aaa
out
mov
jl
cltd
mov
push
sub
jne
dec
aaa
jg
adc
mov
addr16
mov
mov
mov
add
xorb
test
in
out
dec
out
xchg
dec
ljmp
imull
add
dec
and
jo
ja
out
dec
mov
add
cs
mov
out
mov
dec
jmp
data16
pop
test
dec
adc
repnz
dec
les
mov
cltd
jl
das
mov
nop
roll
pushf
inc
push
mov
push
or
jl
cld
iret
sbb
dec
cltd
xchg
sbb
cs
dec
repz
fmull
dec
mov
and
dec
inc
push
jmp
lahf
dec
out
xchg
lds
xchg
inc
dec
jl
ret
dec
rcrb
and
dec
dec
cmc
scas
sahf
push
xchg
dec
bound
xchg
rcrb
dec
pop
insb
sbb
popa
dec
mov
out
or
inc
dec
fistps
sub
mull
fxch
xchg
test
addr16
insb
jo
ss
scas
jae
dec
inc
push
pop
inc
adc
xlat
inc
pop
out
dec
mov
aas
jo
out
fdivl
xchg
sbb
lea
test
jmp
push
cmpsl
mov
xchg
jb
and
push
shlb
jns
mov
adc
loop
and
lcall
push
movsl
pop
jo
inc
xchg
int3
xlat
pop
icebp
in
fstpl
aas
jecxz
pop
shrl
adc
dec
imul
cmc
sti
sub
decb
daa
jb
enter
inc
and
jge
jbe
dec
mov
mov
dec
mov
in
outsl
sbb
fists
cmpsl
jae
leave
dec
xchg
test
mov
adc
push
loop
ds
dec
cmc
mov
jno
out
ljmp
dec
mov
flds
enter
arpl
out
fiadds
adc
sub
ds
addr16
fisttpll
xor
ss
mov
adc
out
inc
fs
dec
xchg
cmp
sbb
mov
ret
rorl
addr16
inc
inc
push
and
mov
sbb
lea
xor
mov
push
pusha
scas
bound
cmp
adc
or
rorl
mov
loop
stc
xor
cmc
adc
and
arpl
dec
xchg
aad
push
js
mov
dec
in
push
sbb
sbb
dec
cmp
cmp
or
xchg
rcr
cwtl
mov
push
dec
data16
stos
lcall
cmovg
dec
out
xchg
add
rcll
xlat
push
popa
dec
push
arpl
mov
mov
popa
cmc
xchg
lea
inc
dec
movsl
jo
dec
aas
sbb
mov
sub
je
push
dec
daa
bound
mov
xor
add
jp
jno
dec
scas
arpl
and
pop
xchg
int3
mov
iret
arpl
pop
movsl
dec
outsb
mov
notb
mov
in
inc
xor
inc
push
outsl
xor
inc
xchg
mov
fldt
fbld
pop
insb
xlat
jns
shll
push
inc
es
out
or
pop
jge
jns
aaa
push
xor
xchg
pop
sbb
sarl
inc
ljmp
mov
xchg
or
imul
pop
mov
loopne
insb
sbb
inc
mov
fimull
dec
add
jg
xchg
add
dec
pusha
inc
push
push
stos
push
cmpsb
dec
xor
xchg
testl
lods
adc
adc
mov
les
fs
lret
adc
add
push
dec
fdivl
fs
mov
push
jmp
xchg
loope
popa
jle
movl
out
cmp
dec
mov
rcrl
dec
xchg
out
push
dec
imul
popf
inc
stc
sbb
dec
pop
xor
clc
or
test
hlt
and
aas
pushf
dec
aaa
dec
lret
in
scas
fstl
notl
dec
test
loope
ljmp
cmc
add
aad
push
jnp
xchg
xlat
mov
inc
xchg
les
jno
je
push
sub
call
adc
repz
data16
jb
test
outsb
jmp
movsl
pop
add
xchg
inc
sub
add
jmp
jp
dec
ja
insl
xor
push
nop
mov
into
dec
sbb
lret
adc
xor
aam
rorl
cwtl
leave
xor
dec
or
pop
into
push
mov
push
jmp
sahf
add
add
repnz
push
jle
mov
repnz
loopne
adc
cmp
add
imul
and
xor
sahf
pop
cmp
mov
add
dec
sub
shlb
xchg
fwait
aam
sub
mov
ja
mov
test
jmp
push
add
loope
test
das
sbb
cmp
rorb
or
js
pop
cmp
cwtl
loope
in
ss
pop
inc
xlat
outsl
lret
jb
add
xor
push
push
into
mov
aam
jmp
ds
jmp
ret
dec
mov
cmp
adc
andb
xchg
and
dec
cmpsl
lret
push
rorl
push
dec
sahf
dec
mov
movsl
xchg
fs
leave
lock
dec
jbe
add
xor
lds
es
outsl
cwtl
add
dec
cltd
and
popf
push
mov
inc
out
dec
arpl
xchg
mov
cli
mov
in
mov
cld
arpl
xchg
dec
adc
mov
mov
loop
daa
roll
dec
pop
cmp
dec
mov
ss
xor
add
jg
pop
hlt
cmp
andl
les
aad
push
sub
arpl
scas
mov
mov
xor
or
xchg
insb
pop
inc
sub
push
push
push
dec
xchg
shll
dec
xchg
mov
dec
jno
nop
cmp
mov
decl
mov
test
mov
dec
stos
fstpt
stc
addr16
enter
shrl
sub
dec
sub
clc
repz
adc
inc
lahf
test
dec
sahf
pop
push
jns
aaa
push
and
iret
inc
in
dec
into
cmp
int3
xchg
shlb
adc
divl
dec
sbb
add
dec
mov
add
dec
mov
jo
les
push
mov
aad
mov
cmp
pop
stos
and
lods
int
outsb
insb
jbe
and
js
mov
mov
jecxz
jmp
adc
idivl
cwtl
push
gs
add
ds
xchg
adc
pop
dec
dec
stos
xor
cltd
insb
push
push
lock
shll
sbb
push
dec
cmp
push
ret
hlt
insb
jl
jmp
sub
aas
dec
sub
loope
inc
inc
mov
sub
fs
outsl
mov
iret
and
ret
xorl
das
dec
jg
sbb
movsl
mov
cmc
aaa
jl
inc
mov
in
jmp
or
jg
and
pusha
lret
pop
fidivrs
lods
daa
adc
sbb
repnz
std
insb
mov
jns
ret
mov
cmp
into
jl
adc
mov
xchg
fs
add
pop
fnsave
pcmpgtd
inc
pop
jl
ss
jecxz
mov
pushf
dec
loopne
cmp
jp
push
repz
ret
dec
testl
add
dec
ret
es
mov
dec
cmp
dec
push
shrl
fisubs
and
arpl
or
pop
and
aad
nop
fsubp
inc
loop
fsubrl
jb
sbb
fildll
ret
jnp
test
fdivs
or
cmp
sarb
push
sbb
xor
adc
cmp
lea
jp
insb
pop
cmp
push
icebp
dec
into
iret
ljmp
cmc
sti
cmp
pusha
out
fwait
xor
dec
sub
mov
lcall
pop
jb
loop
insb
adc
or
cmc
sbb
dec
and
aam
dec
mov
pop
movsl
mov
push
pop
push
icebp
fnsave
nop
dec
stos
lock
movsl
scas
mov
adc
mov
fs
xor
cltd
pop
adc
testb
inc
or
dec
and
popa
int
movsl
rcrl
fldl
dec
scas
out
dec
jae
loop
add
add
inc
lds
adc
pusha
dec
xchg
cld
inc
lods
ds
jbe
pop
cs
dec
into
lods
jnp
jp
and
push
mov
out
repz
nop
inc
inc
ror
jmp
push
push
push
rcr
jno
inc
mov
jle
sbb
dec
sub
jmp
xor
lret
ficoml
push
mov
inc
ljmp
jg
ss
add
mov
movsb
push
orl
jl
fwait
add
pop
adc
subl
rorb
mov
mov
outsb
dec
adc
inc
inc
sbb
xchg
cld
hlt
pmaxub
loop
fwait
into
fiadds
mov
push
cmp
int
xchg
mov
bound
std
cwtl
bound
aaa
dec
cmp
mov
aam
lods
jo
and
jle
mov
sbb
sbb
mov
pushf
fdiv
fs
and
cmc
out
lret
mov
mov
lods
mov
mov
mov
and
xchg
pop
push
mov
gs
jl
cmpsl
or
iret
xor
inc
jl
or
mov
inc
into
jle
xchg
es
jp
adc
loope
add
pop
movl
add
bound
add
fistpl
push
fidivs
popl
xlat
add
test
ret
sbb
das
pop
and
and
pusha
cmpsl
jp
or
testb
dec
pop
test
sbb
dec
loope
mov
dec
aas
jecxz
sbb
add
adc
and
mov
dec
dec
add
ret
dec
popf
sbb
dec
lds
push
dec
jns
inc
ss
mov
lret
mov
mov
loop
pop
ss
mov
or
out
and
inc
mul
sbb
mov
mul
pop
mov
jg
into
cmp
insb
fcmovnbe
test
cmp
dec
push
incb
jae
sarl
pop
clc
pcmpeqd
mov
fcoms
mov
pop
ss
and
dec
mov
mov
aaa
mov
mov
js
mov
push
cmp
into
push
les
shlb
xor
xchg
mov
stos
lahf
sahf
and
cmp
xchg
iretw
cs
inc
mov
pop
jmp
std
aam
ja
mov
jle
in
pop
push
ret
sti
inc
orb
lcall
dec
imul
xchg
mov
push
sarl
ficoml
mov
or
aad
mov
dec
mov
jno
dec
inc
xchg
sub
cmp
inc
push
popa
mov
lret
movl
cmpsb
stos
jno
jmp
jl
js
cmp
mov
in
xor
mov
and
std
dec
sbb
in
loop
push
cmp
mov
les
cld
pop
inc
fsub
es
push
xchg
push
xor
enter
cmp
dec
cmp
xchg
rorl
clc
cmp
dec
sti
inc
into
jg
dec
imul
popa
outsb
cmp
xchg
dec
lea
sbb
sbb
adc
fdivrp
negl
push
sub
in
jne
jg
mov
sbb
popf
inc
sarb
jp
lret
repnz
shlb
sahf
int
jnp
lods
int
into
insb
cwtl
mov
jl
mov
cmpsl
or
into
sbbb
sbb
mov
sub
shlb
aam
mov
fnstcw
or
pusha
pop
push
dec
sahf
bound
push
daa
add
inc
aam
in
pop
inc
mov
leave
mov
dec
cmp
jg
das
sub
hlt
jns
mov
not
push
cwtl
inc
push
push
aas
aaa
mov
in
jmp
fwait
mov
jg
popf
mov
mov
out
xchg
ret
cmp
scas
pushl
jno
and
repnz
cltd
pop
and
sub
out
leave
int3
and
pop
pop
jle
inc
iret
mov
lds
shrb
inc
int3
jecxz
pop
push
sub
jmp
sub
cmpl
xorl
jno
gs
mov
in
sub
pop
popa
dec
inc
mov
aam
repnz
fisttpll
xchg
xor
mov
add
xlat
lret
jecxz
arpl
mov
lods
loopne
pop
loop
imul
or
aas
xchg
jno
pop
dec
stc
inc
sbb
pop
in
dec
lcall
push
into
sbb
xchg
and
push
rcrl
test
addb
mov
dec
xchg
cmp
cmc
cs
in
lret
pop
sbb
dec
test
push
sub
sbb
popa
loope
outsl
add
lret
adc
scas
dec
push
adc
push
dec
jecxz
aas
jle
xor
or
mov
imul
xor
or
add
daa
inc
ljmp
das
jmp
dec
sbb
xchg
dec
dec
sub
xor
addr16
decl
cmpsl
dec
xorl
icebp
sbb
scas
mov
dec
pop
lcall
out
imul
insb
sub
aam
push
xchg
rol
cwtl
jne
or
jmp
out
call
adc
cld
mov
aas
mov
inc
and
cmp
in
jne
adc
loop
jl
add
mov
sbb
push
push
pop
lods
lret
sahf
filds
jmp
xor
xor
cmp
sbbl
jns
outsb
push
push
dec
out
pop
add
in
mov
adc
push
insb
xchg
ljmp
aam
sub
dec
cmp
xchg
int3
scas
push
sub
push
mov
outsl
jg
in
addr16
and
fdivl
fcoms
sti
outsb
jl
mov
dec
ljmp
dec
popf
dec
xchg
loope
cltd
inc
rorb
test
mov
inc
das
add
mov
stc
and
roll
stos
ds
dec
push
add
inc
sbb
sub
xchg
dec
mov
shll
sbb
inc
out
push
mov
dec
or
mov
test
xchg
inc
ss
shr
adc
test
mov
dec
and
cmp
mov
mov
xchg
dec
inc
sbb
mov
push
xchg
cmp
mov
filds
mov
xchg
aam
or
movlps
or
lock
adc
pop
mov
xor
decl
fisubl
dec
push
pusha
mov
inc
shll
xor
mov
ja
sbb
fimuls
jb
add
cmc
adc
fisubrl
divl
pushf
insb
in
mov
int3
dec
jnp
enter
push
dec
mov
test
iret
pusha
sub
rorw
into
xchg
dec
stos
and
push
adc
mov
or
jb
imul
ret
sbb
xlat
xchg
fmul
push
xor
stos
and
shl
cs
xor
mov
subb
ror
out
cmp
outsb
dec
icebp
push
cmc
xor
inc
adc
repnz
mov
dec
and
xchg
hlt
iret
in
call
jle
push
pop
fisttpll
movntps
scas
mov
not
push
mov
jae
push
repnz
shrl
add
mov
or
pop
xchg
insl
add
sub
jle
xchg
sub
jl
mov
sahf
data16
ret
in
stos
mov
jl
pop
jb
aaa
rorl
sbb
scas
adc
pop
or
xchg
mov
mov
jbe
push
and
sub
mov
repz
pusha
or
hlt
jg
fistpll
data16
push
mov
xor
xchg
mov
stos
add
ljmp
mov
sub
and
cmp
dec
mov
xor
mov
dec
inc
popa
stos
ret
jns
sub
in
mov
pop
push
xchg
dec
jo
dec
mov
pop
adc
jp
dec
and
stc
into
outsl
jge
dec
jns
cmp
repz
scas
dec
pop
adc
mov
in
push
jmp
sub
dec
fdivrl
pop
sti
cmp
mov
pop
ror
mov
punpcklwd
adc
jbe
xchg
loopne
js
mov
sti
mov
rolb
movsl
lcall
les
pop
pop
dec
inc
xchg
sbb
inc
push
rorl
fdivr
bound
xor
jg
sbb
inc
or
lea
pop
fmull
std
inc
cmp
cld
jns
dec
jge
mov
into
daa
inc
mov
dec
cmp
sub
xor
fmull
xor
dec
mov
lds
dec
hlt
rolb
push
dec
mov
xorb
cli
movsl
mov
jg
lea
out
dec
inc
out
cwtl
lret
clc
and
mov
push
inc
shlb
mov
mov
and
dec
inc
fldcw
dec
sbb
cli
into
aaa
das
cwtl
dec
ds
xor
push
sub
dec
std
jb
inc
testl
jb
xor
call
push
mov
popa
icebp
pop
and
imul
mov
and
repz
xchg
mov
sarl
shlb
lea
push
pop
jle
add
dec
call
or
cmc
push
push
push
cmp
in
xor
fsubs
cmp
jle
cmp
jp
mov
cmpsl
aaa
cmp
mov
mov
arpl
dec
xor
jle
bound
dec
fidivrs
addr16
adc
cmp
mov
insl
stc
test
pop
jmp
xor
movsl
jbe
jl
adc
lret
fcmove
mov
test
sahf
add
mov
sahf
dec
jbe
std
fwait
dec
cmp
sbb
xchg
test
iret
in
rorb
aad
insb
cmpsb
xchg
sti
dec
lea
or
es
xor
int
sub
mov
dec
out
jg
pop
mov
stos
imul
in
xchg
cmp
cmpsl
arpl
mov
imul
xchg
mov
xchg
stos
xor
pop
cmp
add
movsl
and
lea
call
test
push
jl
cmp
jle
cmp
push
xor
aad
mov
insb
fucomi
fnstcw
sti
int
loopne,pn
pop
pop
mov
imul
or
pop
cmpsb
lret
mov
lret
push
es
dec
fistpl
mov
inc
mov
stc
in
pop
aas
js
cmp
dec
inc
mov
sub
jbe
jmp
jg
xchg
mov
enter
add
push
jne
mov
mov
pop
testb
pop
andl
movsl
xchg
lds
out
mov
and
mov
lret
popf
mov
jg
sbb
pop
repz
sarb
fimull
inc
sbb
lea
pushf
fistps
push
in
dec
stc
pop
jl
sbb
mov
jb
int
daa
jl
jne
cmpsl
jb
adc
xlat
xchg
icebp
repz
lds
fmuls
xchg
push
inc
lret
or
xlat
outsb
cmp
mov
shrb
jae
push
add
data16
inc
ret
imul
mov
and
scas
orb
fisttpll
inc
adc
aaa
adc
fpatan
inc
call
fmuls
xchg
sbb
loope
xor
test
pop
stc
cmp
sub
sub
xchg
push
lds
mov
inc
mov
ficomps
mov
pusha
icebp
xor
stc
add
xor
dec
pushl
or
lods
mov
aas
into
mov
xlat
inc
fisttpll
cmp
rcll
out
cmp
iret
ljmp
lods
mov
pop
mov
arpl
dec
add
out
in
mov
or
fwait
nop
push
sbb
roll
imul
push
jns
dec
pop
cmpsb
aaa
and
dec
aas
dec
xchg
out
test
sbb
lahf
dec
inc
fprem
andl
mov
aaa
and
or
push
jb
push
adc
imul
sbb
dec
mov
test
dec
add
mov
outsl
xchg
data16
dec
mov
push
dec
xchg
sbb
sub
ret
fadds
into
mov
cld
push
data16
jne
rcr
daa
das
test
fdivrs
roll
lea
lock
pop
fcomps
in
lea
push
dec
xor
inc
sub
cmp
sub
jg
dec
test
fnstenv
jno
out
sub
mov
mov
sub
sahf
xchg
loop
int3
jle
sub
jae
out
movsbl
mov
pop
xchg
dec
adc
xlat
daa
outsl
push
orps
jnp
sub
inc
pop
add
inc
fwait
lahf
lods
ret
dec
aam
xlat
push
in
push
cwtl
fildl
dec
in
out
push
scas
sahf
mov
scas
fiadds
mov
jg
movsl
add
in
pop
inc
xor
dec
aas
push
mov
cmp
in
mov
cmp
dec
ret
data16
jle
loope
movsb
cmp
pusha
push
xorl
or
popa
jbe
bound
cmp
push
das
cmpb
sti
push
fs
push
cmp
repnz
icebp
inc
push
cs
pop
mov
mov
push
ret
aaa
jle
imulb
push
into
inc
lret
testl
sbb
in
dec
add
add
sti
dec
jno
add
sub
cli
sub
repz
mov
ja
inc
dec
ficomps
mov
fs
jmp
xchg
xor
cmp
mov
lock
into
orb
dec
out
arpl
out
test
jbe
dec
pop
and
fcmovb
xor
adc
aaa
adc
gs
push
fdivrl
dec
add
mov
les
mov
imul
or
jbe
jno
dec
sbb
fcom
fsubrp
arpl
dec
inc
jge
cmc
xchg
dec
dec
dec
cli
mov
dec
repnz
js
cwtl
cmp
dec
cmpsb
insb
dec
pop
mov
and
outsb
andl
loope
or
mov
lods
mov
testb
fwait
dec
ss
sti
lock
dec
pop
push
pop
mov
sahf
xor
mov
dec
add
xor
dec
push
into
sbb
dec
push
das
jp
sub
int3
dec
stc
shrl
sub
xchg
in
rcrb
mov
orl
repz
loop
out
dec
or
test
fsts
push
and
movsl
xor
in
cmp
and
das
inc
cmc
add
stos
pop
adc
jge
lock
repnz
inc
lods
jp
dec
xchg
loopne
pusha
dec
mov
fstpt
dec
ja
dec
out
dec
pop
or
mov
xor
pop
push
and
cmp
adc
add
cmp
jp
dec
mov
clc
out
dec
jge
pop
gs
lahf
ljmp
call
adcl
cli
dec
and
rorl
inc
jp
fists
mov
dec
sub
and
leave
cmp
lea
enter
mov
test
adc
or
xor
dec
dec
nop
xchg
rcrl
inc
jecxz
in
jo
add
mov
mov
int
inc
stos
pop
xchg
pop
dec
mov
negw
repz
bound
ret
jle
xchg
outsb
dec
aam
push
int
fdivr
xchg
sub
in
and
jle
xchg
pusha
lods
arpl
pop
andps
dec
or
jle
and
stos
adc
into
pop
pop
ret
sti
in
mov
arpl
fiadds
pop
adc
scas
fnstsw
dec
outsl
cli
jle
cmpsb
mov
xor
dec
aas
pop
and
mov
cmp
out
cmp
pop
arpl
xlat
jns
addr16
and
lea
into
mov
test
jnp
mov
xchg
dec
and
clc
jl
dec
bound
sub
cld
add
jp
xlat
sbbl
pop
js
imul
in
incb
lret
and
hlt
into
je
dec
mov
mov
xchg
dec
lahf
subl
pop
jg
cmp
lods
scas
rorb
lret
or
mov
push
dec
mov
fisttps
and
sahf
mov
mov
fs
mov
cs
dec
xchg
icebp
inc
fwait
cld
dec
push
jbe
loope
push
sub
pushf
xorb
data16
mov
pop
jle
mov
and
sbb
mov
mov
or
push
xlat
popf
jge
jno
jle
dec
cli
cmpsb
nop
pop
jl
addr16
in
push
test
out
mov
iret
cmp
dec
inc
ficompl
pop
push
xchg
inc
aad
inc
push
xchg
int
xchg
incl
je
or
jne
add
jmp
cld
cmp
push
lcall
cmpsl
xor
cld
decb
cmp
or
push
lahf
sbb
mov
andl
fucomi
push
push
sub
lcall
mov
lahf
fnsave
int
jns
xor
movl
or
sbb
cmp
push
xchg
mov
pop
adc
enter
arpl
sub
dec
imul
and
movsb
dec
mov
jp
mov
mov
fldpi
cs
jo
data16
dec
into
push
aam
shll
sub
movsl
xor
popf
push
js
push
sbb
xor
aam
mov
insl
testb
xchg
lret
stc
in
scas
adc
adc
xchg
outsb
loop
fisttpl
pop
push
notl
dec
or
xor
mov
pop
test
in
je
fidivrs
inc
or
adc
dec
mov
push
fsubs
jge
add
mov
andw
icebp
push
push
jl
push
sub
xchg
ret
fs
jl
and
daa
inc
jg
test
cmp
fwait
jbe
and
pop
pop
sti
mov
push
das
insb
ja
or
or
testb
add
fists
dec
mov
sbb
in
pop
xorl
in
pushw
dec
aad
inc
mul
push
pop
push
fcomip
and
xchg
fidivrs
imul
mov
insb
pop
xchg
dec
mov
cmp
stos
arpl
xor
xchg
jmp
pop
or
pop
dec
call
scas
repz
xor
or
xchg
push
rorl
xorb
push
mov
into
flds
sbb
jne
mov
jno
dec
fst
cwtl
and
adcl
mov
xchg
loop
dec
nop
add
adc
xor
mov
push
roll
inc
pop
test
lret
out
push
bound
push
dec
sbb
lcall
sbbl
dec
cmp
int
and
sub
imul
cmc
jg
inc
dec
std
bswap
cmp
ja
repnz
push
xor
rolb
dec
in
mov
nop
fcoms
lahf
pop
pop
ljmp
in
add
das
push
jle
out
sti
sbb
jmp
dec
sbb
loop
xchg
xchg
and
es
dec
aaa
daa
dec
adc
jle
or
jg
xchg
xchg
or
aam
dec
out
xor
lea
mov
pusha
jae
fwait
or
dec
pop
ljmp
dec
jo
fidivrs
inc
dec
xchg
pop
outsl
daa
or
jnp
das
cmpsl
scas
mulb
mov
jg
xor
fucom
test
leave
mov
jl
pop
xchg
mov
sbb
imul
sub
add
sub
inc
popf
fisttpl
aas
loop
dec
cmp
aam
pop
dec
mov
push
cltd
or
andl
and
mov
push
xlat
inc
out
cmpl
stos
mov
adc
nop
in
dec
and
aaa
lods
outsb
imul
out
jge
dec
js
lret
call
out
or
jg
pop
inc
stos
fwait
fs
push
lds
push
push
scas
fidivrl
fisttpl
js
inc
cmp
into
cmp
ds
frstor
mov
cmp
dec
xchg
xchg
dec
jbe
repnz
or
insl
xchg
dec
lcall
push
xor
mov
jmp
jle
sbb
std
cmp
push
cmpsb
xor
out
mov
lods
int
aas
dec
out
sub
dec
sti
jle
sbb
dec
test
inc
xor
inc
data16
and
insb
pop
iret
dec
fstpl
mov
cmc
in
dec
insl
jns
daa
jae
dec
jo
outsl
sbbl
dec
out
inc
ret
es
dec
add
cld
ror
cli
int
mov
cmp
cltd
mov
xchg
xor
mov
dec
adc
push
push
sbbb
dec
loop
mov
iret
xlat
arpl
mov
cs
xor
fcomps
adc
dec
fwait
mov
or
pop
pop
out
ljmp
push
mov
shll
mov
cmp
out
rorl
sbbb
xor
xchg
pop
push
into
in
inc
leave
shrl
incl
xchg
pop
jp
jmp
dec
imul
ja
lret
add
movsl
pop
inc
into
out
push
adc
or
jmp
sti
jb
paddsw
pusha
int
enter
jmp
in
pop
out
out
pop
push
aam
dec
bound
out
into
mov
imul
inc
dec
cltd
pop
les
push
sub
jae
xor
push
push
sahf
imul
mov
ds
cmp
pop
cmp
arpl
push
pop
fstps
in
mov
ret
rorl
rcl
sbb
dec
inc
jp
imul
stc
or
iret
dec
test
pusha
lahf
lock
nop
inc
sbb
push
jnp
adc
subl
ret
adc
xchg
and
add
ja
ret
test
xor
xchg
pop
add
push
dec
xor
imul
mov
inc
pop
loop
pop
ss
movsl
lahf
push
roll
inc
sahf
mov
dec
push
push
ret
xchg
xor
dec
xor
icebp
jno
movsb
adc
pop
lret
iret
scas
push
inc
pop
aas
dec
or
shll
or
dec
add
jb
orl
push
out
and
cmpsb
xchg
dec
sub
jmp
rcr
lahf
dec
aad
loope
into
xor
pcmpgtw
aam
inc
mov
mov
add
inc
fdivrs
dec
push
mov
cmp
dec
mov
insb
dec
dec
sub
ret
dec
outsb
sti
cmpsl
mov
in
xchg
decl
in
dec
iret
push
adc
mov
mov
loopne
cmp
stos
fs
dec
mov
inc
xor
push
mov
dec
cmpsb
push
movsb
push
dec
inc
sbb
test
cmp
jb
outsb
dec
inc
fsub
dec
sti
mov
cmp
mov
and
push
fsubs
sbb
jne
dec
sub
mov
and
jb
xchg
outsb
clc
fbld
rorb
adc
xchg
icebp
int
fwait
and
mov
fs
xlat
or
mov
rep
sahf
add
mov
inc
dec
pusha
xor
jbe
lock
dec
pop
movsl
adc
outsw
sub
ljmp
dec
enter
fbstp
mov
pushl
popa
aas
mov
shl
arpl
mov
inc
push
dec
adc
xor
xchg
dec
jb
mov
sbb
fwait
adc
and
pcmpeqd
cmc
iret
stc
and
rcr
dec
into
push
ret
xchg
bnd
test
adcb
popf
xor
mov
loope
add
jo
lahf
or
pop
dec
divb
daa
cmp
test
ucomiss
mov
enter
push
orl
stos
repz
mov
pop
and
sbb
xor
inc
jno
mov
lahf
push
dec
inc
loope
cmp
add
dec
es
insl
mov
and
push
fucomip
fildll
lcall
inc
lods
pushw
dec
aad
aaa
dec
in
in
mov
jl
push
cld
and
xchg
ret
push
sub
insb
xchg
int
aad
mov
lret
rcrl
mov
jle
add
mov
xchg
cmp
or
push
xchg
lret
bound
dec
pop
xor
lret
daa
iret
mov
cmpsl
push
negl
cs
or
lcall
push
sub
mov
fisubrl
leave
inc
shll
mov
stc
imull
pop
pop
ss
dec
adc
adcl
push
addr16
sub
xlat
sbb
mov
inc
xor
es
sbb
cmp
aas
jle
add
lret
cli
movsl
push
push
mov
mov
dec
out
bound
dec
daa
xor
inc
and
cmpsl
cmp
mov
jle
push
je
icebp
arpl
stos
inc
jg
jne
xchg
aam
aad
inc
mov
mov
pop
scas
add
adc
into
in
fsubl
push
dec
jnp
jb
inc
int
add
inc
push
push
cmp
out
fs
sarl
stos
cmc
enter
xor
dec
add
pop
stos
repz
cltd
rolb
arpl
jl
push
push
out
mov
cmp
mov
shl
mov
shlb
das
into
jp
faddp
movsb
loopne
test
repz
mov
popa
xchg
out
cmpsb
mov
xor
movsl
pop
xchg
or
test
add
mov
mov
outsl
adc
call
stos
jg
fmull
sbb
mov
jo
push
push
add
cmp
jbe
leave
push
and
out
mov
xchg
aam
hlt
mov
mov
je
inc
sbb
cs
and
repz
push
or
add
sarl
xchg
jg
idiv
and
sub
gs
fstps
mov
add
adc
and
outsb
arpl
and
clc
xchg
rorb
xor
daa
insb
stc
push
and
inc
mov
push
fimull
dec
iret
ljmp
rcr
je
mov
int3
push
in
movsb
dec
inc
popf
in
or
jae
mov
movsl
idivl
test
lcall
iret
inc
mov
jns
or
mov
push
fcmovu
xchg
mov
push
push
sarl
fucomp
jno
lods
dec
push
icebp
loopne
je
pop
repz
sbb
sbb
push
xchg
and
dec
fstps
stos
sub
or
dec
xchg
and
lods
xchg
es
dec
jle
cs
out
lahf
dec
jmp
inc
out
cmp
push
outsl
mov
dec
xor
dec
xchg
mov
inc
pop
dec
mov
mov
loope
push
inc
repz
aaa
imul
idiv
clc
lock
xchg
push
dec
hlt
adc
mov
mov
sahf
idiv
dec
and
inc
icebp
mov
cltd
dec
jmp
dec
mov
ret
daa
inc
dec
dec
inc
imul
xor
lea
push
int3
mov
dec
or
add
test
dec
xor
fwait
pop
sub
inc
into
cmp
add
popf
cmp
cmpxchg
dec
js
adc
shr
into
pop
xor
pop
imul
dec
mov
or
or
imul
inc
stc
into
adc
sub
divl
dec
inc
ss
push
dec
imul
pop
dec
test
clc
inc
mov
add
xchg
into
pop
dec
imul
mov
add
ret
inc
inc
mov
outsb
filds
xor
lret
adc
lahf
sub
scas
mov
rorb
pop
insb
mov
push
dec
icebp
test
sub
insl
or
loopne
cli
ds
cmc
dec
ret
mov
cmp
sub
inc
daa
pop
insb
mov
fs
add
mov
jo
xchg
push
test
jle
inc
sub
pop
xor
fchs
jg
add
cmp
cmpsb
pop
inc
fmull
pop
adc
push
enter
fmull
sub
xchg
aas
inc
jg
and
xchg
lahf
loopne
pop
out
flds
lahf
jl
sbb
cs
pop
xchg
jo
mov
jmp
loope
int
xor
push
out
pop
sbb
addr16
pop
lods
into
adc
imul
cmpsl
jg
xchg
xor
out
scas
pop
pop
in
dec
sti
or
adc
xchg
rorl
pop
call
data16
loopne
xchg
cmp
push
sub
jle
loope
iret
pop
lods
pop
pop
pusha
mov
mov
pop
jp
jl
cmp
adc
pop
mov
mov
ffreep
xor
lds
test
xor
repnz
add
popa
mov
movsb
cmp
mov
int3
sbb
mov
out
test
adc
mov
or
je
pop
dec
push
push
dec
push
push
add
mov
jb
arpl
sub
gs
cmp
mov
adc
sub
add
repnz
data16
arpl
xchg
or
jg
ss
icebp
sub
jbe
ljmp
fdivl
into
fdiv
loope
sbb
out
mov
sbbb
mov
aas
sahf
loop
mov
movsb
popa
push
mov
iret
hlt
and
pop
jl
rcl
data16
and
xlat
iret
fidivs
or
cmp
stc
dec
movsl
mov
in
inc
sub
push
outsl
inc
sub
pop
addl
jb
jb
inc
sub
sub
inc
bound
dec
scas
pusha
stos
fiaddl
leave
cmp
call
and
fdivs
scas
xor
shlb
jle
imul
or
adc
jbe
sub
mov
push
mov
add
mov
in
push
jnp
inc
mov
sarb
push
orb
add
pop
enter
inc
jl
call
sarb
jg
sub
aas
movsl
notb
popf
mov
aad
lret
ja
xor
xor
movsw
daa
push
cld
test
clc
into
or
stos
push
shlb
and
lahf
jle
xchg
push
mov
stos
adc
lods
idivl
cwtl
jp
push
rolb
jmp
push
xor
xchg
call
bound
aaa
inc
seta
dec
add
pop
jno
xchg
jg
add
in
jl
adc
ljmp
aas
pop
cmpsb
xchg
adc
andb
ljmp
xlat
sub
aas
iret
sbb
inc
push
jge
push
int3
dec
sbb
sbb
in
ss
loope
daa
mov
jae
arpl
fisttpll
hlt
add
add
inc
fstpt
sbb
js
pop
test
loop
and
lahf
dec
jp
in
mov
addr16
inc
push
push
or
scas
dec
aam
fdiv
xchg
mov
cmp
rcr
hlt
inc
pop
sbb
cmp
je
xor
sbb
inc
pop
jno
orb
mov
jae
imul
ss
dec
and
adc
pop
mov
jns
into
gs
dec
mov
movsb
in
mov
or
pop
cli
clc
dec
sbb
popa
inc
jg
jno
stc
push
jecxz
adcl
dec
lret
sbb
jnp
shll
push
mov
sub
rol
or
ret
xlat
dec
cmp
adc
ss
xor
mov
dec
sub
mov
stos
xchg
test
sub
push
sub
mov
out
fld
adc
mov
cmp
mov
jle
lret
mov
lods
inc
jb
pop
stos
xlat
jl
outsl
cmpsl
stos
js
add
ljmp
cmpsl
push
fisubrs
in
orl
bound
lock
add
xchg
inc
mov
pop
mov
out
inc
pop
in
into
outsb
jg
xchg
mov
lods
jns
inc
sub
and
aam
iret
popf
jg
and
lret
lea
aam
nop
pop
test
jl
pop
jnp
insb
mov
xor
jae
inc
out
xorl
cmpsb
in
dec
mov
mov
fstpl
das
cmp
xchg
icebp
imul
mov
sub
mov
jle
repnz
popf
jl
mov
sti
lret
lods
push
jbe
sub
xor
pop
divb
sub
sahf
or
mov
mov
scas
cmp
dec
pusha
push
shrl
add
fs
add
mov
pop
lock
jecxz
cmp
cs
inc
mov
mov
inc
pop
dec
repz
lcall
das
sub
scas
push
adc
jl
popl
int3
int3
clc
jle
add
aaa
push
adc
pop
ret
lret
xchg
inc
inc
xorl
dec
jp
mov
cli
mov
add
mov
int3
scas
adc
shrb
cmp
fs
sub
loop
cmp
xchg
xor
scas
cmpsl
out
sub
rcrb
outsb
shlb
ret
xor
xchg
popf
push
pop
xchg
sarb
xchg
cs
mov
loopne
mov
in
cmp
or
sbb
insb
rcl
pusha
xor
push
push
or
pop
out
rol
sbb
sbb
mov
clc
mov
add
adc
sarl
lods
daa
cmp
mov
lret
push
dec
pop
cmp
sub
orl
adc
sub
repz
in
cmpsl
dec
lock
fstps
dec
jl
sbb
mov
imul
stos
leave
sub
jae
adc
clc
lea
push
je
sub
push
fs
jl
in
data16
push
dec
jge
lret
sbb
insb
jne
xchg
xor
sub
sub
jae
mov
out
jg
adc
fisttps
scas
sbb
je
push
sub
add
mov
cmc
hlt
scas
jg
dec
mov
cmp
mov
inc
jl
add
fiadds
xor
fildll
mov
cwtl
aas
clc
outsl
or
ss
iret
jl
scas
dec
sbb
push
mov
enter
dec
in
add
hlt
dec
adc
mov
aaa
jp
dec
cmp
mov
dec
jns
cmp
cmp
outsb
dec
mov
push
scas
les
test
pop
dec
out
std
mov
pop
into
dec
xlat
pushf
inc
xchg
scas
inc
rorb
xchg
aas
push
push
cmp
xchg
mov
call
xchg
jnp
add
imul
xor
fidivrs
jl
jnp
dec
call
outsb
dec
adc
cmp
mov
jnp
mov
sbb
mov
jle
orl
sbb
rcr
or
dec
pushf
movl
fidivs
sbb
add
xchg
add
lods
fildl
cmp
adc
test
insb
xchg
cltd
jp
mov
mov
and
lret
mull
stc
pop
nop
sti
dec
imul
mov
xchg
dec
test
mov
pop
cmpb
ror
inc
jne
push
push
sub
dec
cwtl
push
xchg
mov
scas
or
dec
cmp
push
dec
cmp
sahf
in
pop
sub
dec
inc
xchg
add
mov
daa
cmp
cmp
jl
fsubr
repnz
push
dec
push
add
xor
cmp
cltd
pop
xchg
jmp
aam
ror
stc
call
xchg
jge
movsl
pop
sti
stos
or
repz
rcr
fwait
mov
cltd
test
out
jl
inc
mov
push
packssdw
dec
mov
movsl
cmp
hlt
mov
jo
pop
out
push
adc
shrb
sub
lea
or
fs
or
adc
out
shrb
lock
in
or
push
sub
xor
lcall
out
and
shlb
rcll
jl
xchg
and
shlb
pop
test
in
popa
addr16
or
pop
dec
addl
push
int3
mov
dec
mov
sub
lret
fnstsw
orl
ss
clc
pushf
dec
pop
fstps
mov
in
idivl
xor
and
xor
icebp
in
add
pop
and
jle
jb
loope
and
out
push
cmp
and
int
jbe
jecxz
and
std
outsb
inc
and
dec
xchg
jle
stos
dec
xor
mov
fdivrl
jp
popf
icebp
idivb
inc
lock
xor
cmp
xor
bound
jg
outsl
add
mov
mov
je
mov
adc
adc
xor
ljmp
mov
dec
push
sub
insb
dec
push
iret
ja
orl
call
cmp
inc
out
idivl
or
dec
dec
inc
and
daa
cmp
push
imul
sub
mov
pusha
dec
fbld
adc
ror
push
inc
cmp
dec
xor
xchg
mov
add
out
dec
jl
mov
mov
xchg
sbb
out
loopne
xor
shlb
xchg
inc
push
pusha
dec
test
push
es
sub
je
mov
popf
dec
cwtl
dec
push
mov
mov
mov
lret
sahf
lods
xchg
dec
xchg
mov
sbb
sti
aad
adcb
andb
les
dec
sub
xchg
fists
cmpsl
leave
adc
dec
insb
jo
pushf
mov
pop
xchg
dec
movsl
jecxz
and
into
cmp
mov
sub
outsb
mov
and
xchg
pop
out
mov
sahf
xchg
inc
xor
fwait
add
or
xor
push
mov
pushf
fisubrl
cmp
dec
jl
sub
loope
flds
cltd
sbb
inc
mov
into
adc
xor
inc
fcmovne
in
outsl
push
lret
add
ljmp
fstpl
xchg
mov
repz
dec
jl
inc
in
add
inc
repz
imul
mov
es
sub
in
push
leave
mov
mov
pop
aam
fistps
jge
int3
cmp
cmp
xchg
jno
fs
mov
out
mov
dec
insb
imul
dec
jb
dec
sar
lret
xchg
iret
dec
sub
in
gs
fs
cmp
nop
mov
call
shrb
mov
mov
jnp
daa
jle
pop
jbe
xchg
pop
xchg
dec
jg
fiadds
movsl
lods
std
shrl
push
jo
xor
movsb
clc
fdiv
sbb
lea
adc
mov
fsubl
fcos
push
add
js
inc
mov
push
jg
sarb
cmpsl
jg
add
cmc
jmp
ljmp
mov
sbb
xchg
xchg
mov
dec
inc
jo
xlat
mov
sahf
dec
adc
daa
jle
imulb
pusha
icebp
mov
lret
lock
ret
add
push
mov
es
scas
clc
aas
aam
fwait
sbb
xchg
inc
rol
mov
aaa
loopne
pop
bound
lahf
aad
fcmovb
push
in
and
jl
addr16
cs
add
adc
mov
rclb
sti
inc
repz
aas
dec
mov
outsl
jo
dec
stc
xor
dec
and
out
hlt
test
xor
add
cmp
pusha
inc
push
lret
scas
add
sub
lea
jle
ljmp
addr16
call
xchg
mov
jle
mov
jl
or
test
sub
es
push
xor
repz
std
inc
fs
push
les
sbbl
cli
dec
movl
cmpsl
or
pop
in
mov
loop
add
jbe
pop
mov
adc
pop
cmpsl
les
in
stos
add
inc
or
push
mov
mov
sub
mov
pop
sub
mov
jg
sbb
stos
jbe
leave
out
subl
sub
das
andb
les
add
bound
adc
dec
inc
xor
lds
mov
test
orl
jbe
lcall
jae
sbb
inc
cmp
mov
ret
sbbl
lds
mov
xchg
aaa
xchg
cmpsl
jge
lods
adc
mov
nop
pop
lret
adc
fadd
add
enter
dec
xor
xor
pop
pushf
bound
cmp
test
jnp
adc
push
jg
mov
xchg
test
orl
ds
dec
lahf
mov
js
int3
adc
lock
outsl
inc
lock
ds
fdivrl
adc
pusha
dec
fsubl
lds
int
icebp
test
sub
orl
add
jnp
add
jne
push
dec
mov
icebp
dec
jb
xor
clc
test
int3
dec
mov
sbb
cltd
push
cmp
jbe
pusha
les
xchg
fucomi
mov
lcall
mov
add
and
outsb
cli
dec
test
loopne
mov
ret
dec
mov
mov
jae
push
inc
cmp
adc
pop
sub
jle
fnstcw
dec
loop
add
or
insb
jbe
xchg
adc
dec
jg
adc
cltd
push
ja
mov
inc
mov
fdivr
sub
sbb
jmp
icebp
cmp
sarl
push
xor
stc
adc
jb
dec
add
xchg
sbb
in
inc
push
pop
ds
in
push
dec
mov
cmp
mov
xchg
inc
aaa
fsts
shrb
adc
orl
test
dec
and
xchg
mov
aad
mov
in
pop
dec
sub
in
je
jecxz
rorb
pop
out
filds
loop
adc
dec
mov
dec
ret
iret
stc
sub
shlb
adc
fmulp
push
sbb
push
sbbb
dec
negl
stos
orb
sbb
ds
dec
inc
ss
icebp
mov
scas
jge
inc
outsb
pop
cmpb
fimull
xchg
adc
inc
add
inc
test
fidivrs
nop
xor
mov
orl
xor
mov
cmpsl
push
loope
lret
cmp
adc
aaa
dec
negl
xorl
adc
jle
aas
jno
lahf
popf
add
lcall
push
in
push
in
jge
xchg
cmpsb
jle
mov
out
pop
aad
pop
dec
push
inc
sub
dec
pop
mov
ljmp
adc
dec
sub
in
mov
cmp
xchg
lcall
mov
jecxz
dec
cmp
adc
enter
ret
xor
out
dec
pop
loopne
fwait
xchg
loop
popf
jp
gs
stc
or
push
dec
and
aas
pop
mov
mov
in
xlat
sub
into
cmp
movsb
mov
pop
pop
and
orl
popa
ffree
push
dec
inc
mov
inc
push
call
fwait
scas
syscall
mov
dec
sub
cmp
fisubs
lods
iret
dec
fisttps
and
adc
shlb
and
js
xchg
repz
bound
cmp
nop
or
add
mov
fstl
repz
fstps
stos
insl
mull
sahf
ja
insb
pop
sub
cmp
jg
xchg
je
jl
ret
sarb
lea
ss
je
int
and
into
repnz
pop
inc
push
clc
push
js
add
out
inc
fldl
mov
int3
dec
movsb
mov
in
stos
cmp
push
inc
aam
fistpll
mov
xchg
mov
jge
pop
outsl
mov
jge
out
mov
aaa
sub
dec
outsl
pop
mov
mov
into
push
dec
xor
sarb
sbb
sub
and
scas
dec
or
xchg
push
imul
inc
cmpsb
das
xchg
xchg
mov
and
roll
push
sbb
cmp
enter
dec
movsb
pop
negl
sahf
mov
xchg
pop
cmpsb
adc
mov
xor
fmuls
aaa
stos
decb
popa
das
jbe
dec
mov
pop
dec
lret
ljmp
dec
adc
mov
mov
scas
inc
push
iret
ja
dec
dec
rorb
add
rcr
or
aaa
dec
ds
in
imul
mov
dec
cmpsl
fcmovne
cmp
mov
dec
addr16
adcl
cs
fisubrs
inc
mov
add
loopne,pt
jb
pusha
dec
and
sbb
iret
repnz
inc
mov
sub
lret
inc
mov
ror
scas
cs
faddp
dec
aaa
loope
dec
jnp
cli
cmp
fs
jb
fs
inc
out
sahf
push
shrl
inc
mov
mov
jns
int
cmp
nop
pop
jg
cmc
je
cmp
pushf
jo
loope
mov
inc
cmp
add
pop
push
xor
pop
enter
bound
or
sbb
xlat
outsl
push
dec
adcb
pop
repz
mov
pop
xchg
jp
dec
or
xorb
dec
fbstp
mov
fdiv
pop
dec
push
jne
stos
scas
lahf
aad
dec
push
xchg
fmull
mov
fnclex
push
cmp
sbb
ljmp
dec
ror
mov
loop
fcomps
pop
xor
cmc
std
fildl
dec
addb
mov
js
pop
out
pop
stc
adc
pop
add
outsl
test
pop
xor
mov
ds
inc
dec
cmp
shlb
aad
mov
pop
xor
into
test
dec
jmp
add
pop
or
xchg
xchg
pop
push
sbb
pop
dec
mov
lret
lock
dec
sub
xlat
pop
sub
jmp
outsl
push
sbb
cld
push
dec
xchg
mov
roll
mov
mov
adc
scas
outsl
adc
or
mov
iret
dec
cmc
xor
cld
out
adc
pop
cmp
pushf
ja
adc
xor
cli
pop
and
pop
lds
sar
gs
ss
stos
imul
or
movsb
mov
icebp
es
xchg
dec
adc
stc
lods
ja
sbb
in
sub
cmp
add
xchg
inc
jae
inc
clc
es
fmuls
mov
cmp
cli
testb
and
push
or
dec
test
fldl
dec
fildll
push
adc
push
or
in
cmp
mov
inc
ss
lea
jbe
sbb
test
clc
lods
push
les
dec
jnp
loope
cmp
adc
adc
mov
rorb
subb
inc
mov
daa
dec
sub
cli
sbb
mov
jl
bound
push
stc
and
push
cmp
mov
and
inc
ficoms
dec
xchg
setbe
dec
fisttps
pop
mov
pusha
fsubrs
mov
imul
insl
mov
dec
dec
ljmp
test
loope
adc
jge
int
stos
pop
imul
scas
dec
xchg
fsubs
jecxz
xchg
inc
dec
dec
je
lea
mov
out
sbb
push
pop
pop
dec
mov
imul
inc
and
cmp
jmp
inc
add
test
out
lock
jp
add
in
xchg
sub
imul
fldl
inc
xchg
xor
imul
mov
rorl
inc
icebp
iret
lods
inc
sbb
ror
mov
ljmp
jmp
mov
sub
adc
jae
pop
call
and
mov
lahf
std
jns
fdivs
cs
dec
xor
enter
push
sbb
insb
mov
inc
les
adc
mov
xchg
jl
dec
out
mov
sahf
adc
insb
out
loope
push
testb
sar
add
and
movsb
pop
arpl
aaa
jo
cld
cmpsb
and
sbb
xor
adc
or
outsl
cmpsb
dec
pop
in
or
inc
mov
pop
cmp
jmp
insb
lock
faddl
lock
add
mov
lods
mov
mov
adc
aas
inc
push
pushf
lods
das
pop
hlt
cmp
push
xchg
popa
dec
jg
dec
sub
dec
or
and
mov
jle
mov
daa
push
inc
push
pop
sub
lahf
and
sub
int
lock
in
sahf
add
ret
push
lcall
pop
fistps
xchg
sub
xchg
jle
xlat
xchg
loop
dec
xor
lds
out
cmp
mov
fistps
fwait
pop
xor
pop
adc
cmpb
in
mov
xchg
dec
and
jle
sub
es
fnsave
mov
cmp
jnp
sbb
pushl
fwait
negb
jl
roll
bound
ds
cs
outsb
and
popf
adc
pop
inc
push
lcall
nop
cmp
out
pop
insb
test
ficompl
mov
jge
into
dec
adc
sub
push
inc
ret
pop
mov
xchg
inc
outsb
mov
push
dec
lahf
imul
fwait
enter
in
decl
insl
pop
xor
xchg
mov
dec
xchg
adc
in
push
fsub
and
scas
into
int3
fidivrs
dec
adc
sbbl
scas
aaa
pop
inc
dec
repnz
ret
jg
dec
mov
divb
nop
xor
btc
aas
and
loop
imul
nop
mov
cmp
dec
aam
and
clc
js
dec
cld
insb
mov
pop
xor
mov
push
inc
push
icebp
mov
cmp
push
testl
mov
jl
arpl
js
ja
fmulp
cmc
mov
adc
aam
negb
pop
mov
sub
dec
add
adc
pop
pop
ret
jae
dec
or
imul
pop
xchg
add
dec
nop
pushf
int3
test
xchg
sahf
xor
inc
xchg
orb
inc
in
or
xchg
add
leave
dec
adc
jno
cwtl
sahf
push
inc
enter
lods
fmull
xlat
xchg
sti
jge
mov
pop
push
push
jbe
dec
hlt
and
mov
mov
or
outsb
xor
rcrb
out
lea
and
mov
mov
aas
lds
pop
lea
dec
dec
jge
lret
arpl
cmp
cmp
imul
adc
mov
cmp
and
dec
dec
lcall
sti
sub
scas
fsubs
sbb
pop
int
shrd
push
xlat
jno
jmp
mov
lock
clc
mov
aaa
cmpsb
inc
cmp
wrmsr
out
emms
arpl
loop
cmp
jl
cmp
and
dec
jg
lods
sub
into
mov
dec
add
in
jl
and
cs
adc
fisttpll
mov
inc
add
xchg
mov
and
dec
push
popa
and
pop
and
call
dec
inc
cmc
jmp
sub
mov
icebp
push
enter
push
cmp
jmp
mov
sub
aas
shl
popa
pop
cmp
lahf
and
mulb
jbe
jle
ljmp
jge
push
jo
mul
bound
iret
push
sub
nop
mov
mov
jle
or
aad
aaa
hlt
cmove
mov
jg
xlat
insb
into
inc
jg
insl
dec
lret
sbb
dec
jge
and
loope
addr16
into
jl
lds
inc
dec
xor
sub
push
or
lods
add
dec
sbb
rclb
xchg
and
lea
sub
fimull
jg
roll
int
mov
fistpl
dec
jp
push
mov
movsb
jbe
add
mov
dec
jne
pusha
scas
jl
push
stc
cld
pushf
cmp
jns
mov
cltd
push
sahf
cmp
imul
pop
dec
inc
ss
lock
fsts
add
or
jl
ds
jl
pop
loope
or
push
andl
pop
push
xchg
jle
and
sub
and
shlb
stos
or
jg
ret
arpl
sbb
jns
cld
xorb
out
arpl
scas
aad
jg
inc
stos
imul
test
mov
pop
sti
loopne
inc
push
pop
xor
cmc
dec
adc
sbb
in
or
and
adc
jg
inc
xchg
inc
jne
sub
adc
gs
dec
roll
fidivrs
mov
mov
cs
pusha
clc
inc
test
and
data16
sub
push
push
in
add
mov
and
push
cs
scas
andl
sub
loopne
cli
inc
sub
loope
or
aam
cwtl
lahf
cltd
mov
popf
push
cs
lds
stos
mov
jmp
push
jns
ss
shrb
sbb
mov
and
mov
js
push
xlat
dec
push
jle
jbe
push
or
pop
adc
mov
test
ficoms
adc
int
pop
test
mov
ljmp
xchg
adc
ror
cmp
cmp
sbb
in
nop
decl
vmovaps
jle
insb
mov
cmp
rorb
popf
pusha
stc
pop
pop
inc
and
inc
gs
xchg
push
fldcw
jnp
popa
test
mov
roll
push
fisubs
jb
movsb
adcb
dec
mov
test
xor
cmpsb
mov
icebp
clc
mov
cmpsb
mov
or
mov
sub
out
jnp
scas
cmp
subb
sarb
inc
lahf
jecxz
pop
fldl
scas
lret
adc
xor
mov
imul
pop
adc
jns
loop
pop
dec
cli
mov
push
pop
push
stos
ds
stos
ljmp
mov
mov
or
cmpl
xchg
inc
cmpsl
rolb
jmp
cmp
pop
add
dec
jo
cmc
and
arpl
shr
jo
push
mov
dec
push
clc
test
xor
pop
cmpsl
dec
cmpsb
pop
ss
leave
fcoms
jecxz
fwait
xchg
stos
out
cmp
in
or
cmp
dec
or
je
dec
jnp
hlt
int
dec
xor
outsb
pop
jo
mov
push
push
push
push
cmp
sub
iret
ret
insb
std
inc
xchg
int
mov
lods
sbb
out
loop
icebp
dec
push
add
pop
dec
or
arpl
ja
xor
cmp
mov
inc
push
int3
fadd
push
and
into
mov
dec
mov
rorl
xchg
mov
adc
addr16
pop
fdiv
jb
xor
add
sar
js
dec
mov
cmp
rolb
mov
push
and
test
nop
sbb
lods
pop
repnz
add
and
cmp
arpl
dec
cwtl
ror
in
dec
mov
into
add
dec
pop
mov
insb
cwtl
xor
cs
adc
dec
adc
push
pushf
repz
mov
dec
mov
adc
mov
jns
je
dec
rcrb
loopne
adc
dec
out
or
or
iret
and
inc
xor
inc
mov
add
xlat
sbbb
outsb
sbbl
vdivpd
es
mov
pop
cltd
jb
xor
xchg
mov
dec
lahf
push
stos
push
pop
inc
out
mov
stos
mov
mov
inc
aas
or
xchg
arpl
faddp
jmp
cmp
push
mov
pusha
dec
das
add
jl
out
jle
out
push
shrl
jle
jbe
in
mov
repz
pop
insb
or
cmpb
testl
test
jl
ror
imul
cmpsl
fimuls
adc
into
add
mov
inc
js
jecxz
sbb
iret
aas
pop
das
jl
jb
inc
xchg
push
orb
mov
dec
mov
adc
call
stos
mov
and
jp
mov
int3
push
rorb
add
movsl
adc
sub
or
aaa
into
ja
push
push
mov
repz
push
push
xor
xor
mov
inc
or
into
iret
loope
daa
dec
inc
mov
push
sbb
mov
dec
and
xchg
and
sub
jle
lcall
jmp
sub
arpl
push
mov
jge
jle
push
lea
xchg
lods
jne
insb
sub
jp
cmp
gs
add
adc
and
rorb
cmp
jle
fisttpl
push
mov
mov
mov
jg
push
mov
cmp
cmpsb
dec
jbe
movsb
test
mov
stc
push
mov
aaa
bound
in
xor
push
mov
pop
fdivr
mov
test
adc
cmp
loop
stos
cmp
add
lods
ret
or
add
xchg
add
lahf
jl
in
add
pop
pusha
dec
mov
mov
push
int
push
aaa
fstl
pushl
cmp
mov
pop
stos
mov
aas
movsl
cs
fsubrs
es
lret
movsl
jge
cmpsl
or
movsl
push
adc
pop
cmp
inc
mov
std
mov
lods
jg
mov
jl
mov
dec
adc
add
xlat
mov
out
stc
rorl
push
cltd
mov
adc
cld
lcall
bnd
or
inc
pop
imul
mov
push
adc
push
pusha
inc
mov
and
lods
jecxz
jg
mov
push
jl
addr16
add
mov
inc
call
add
inc
test
sub
inc
movsl
mov
xor
jae
sahf
out
lods
mov
mov
lea
fstps
or
es
xorl
mov
in
xchg
shrl
fsubl
cld
pushf
stos
fwait
out
movsl
push
and
fsubrp
push
pop
sub
sti
stos
mov
cs
mov
cmp
test
jo
mov
or
jle
rorb
movsl
mov
inc
ds
scas
xchg
add
dec
dec
orl
mov
imul
icebp
xor
jbe
iret
push
adc
rcll
adc
xchg
popa
adc
gs
inc
lods
loopne
inc
and
push
sub
mov
sub
dec
aam
stc
test
push
cltd
mov
out
loopne
imul
pop
push
dec
cmc
add
mov
inc
push
mov
daa
push
cmp
out
cltd
pusha
arpl
mov
add
cmp
fiaddl
aas
int3
stc
pop
bswap
adc
lahf
popf
dec
stos
cltd
adc
mov
cmpps
mov
outsl
leave
xchg
lods
xchg
out
cmp
dec
ret
daa
int3
cmpsl
jb
outsl
pop
add
mov
cmp
mov
mov
sbb
mov
pop
jecxz
shlb
into
mov
jge
inc
iret
cmpl
xor
mov
fdivs
sub
movsl
add
mov
nop
mov
out
push
lods
xchg
inc
popa
jae
push
ret
add
sbb
sub
fs
and
roll
cmpsl
adc
sbb
jns
and
lahf
mov
jnp
ret
fsub
and
cli
sahf
pop
cltd
pop
sub
adc
es
cmp
add
pop
loop
inc
push
sbb
fiadds
insl
int
sub
xor
clc
enter
sbbb
jmp
jl
scas
cmpsl
ljmp
movsb
insb
fwait
mov
int3
and
pop
jbe
sbb
or
mov
sbb
cmp
pop
data16
xchg
or
in
lods
sbbb
popa
xchg
sub
iret
inc
lret
div
mov
mov
xor
fcmove
xlat
rolb
sahf
cmp
sub
dec
xor
cmp
inc
shrb
mov
iret
lret
hlt
xchg
addr16
push
cmp
pop
dec
xchg
cmp
xchg
or
inc
fsub
scas
xchg
aas
jp
cmp
cli
daa
ljmp
bound
sub
xchg
jp
icebp
dec
dec
and
jle
leave
push
jg
pop
std
cmpsl
push
mov
push
dec
inc
sbb
ss
pop
rol
mov
jge,pn
fnsave
cmp
xchg
jns
jbe
xor
imul
lahf
andl
mov
shl
sub
pusha
jl
fimuls
sub
in
rclb
adc
out
rcrl
sbb
add
aad
loop
ljmp
mov
dec
fdivs
mov
fistpll
fwait
pop
daa
jno
mov
iret
fs
mov
andl
sub
sub
xor
shr
leave
jl
dec
leave
dec
push
pop
mov
cmp
push
out
cmp
xor
jge
sub
mov
jmp
push
stos
sub
jle
mov
inc
test
mov
inc
mov
fsubrs
aam
mov
adc
sbb
sahf
mov
movsl
jp
movb
jl
ja
cmp
cmp
shll
cmpsl
fildl
fwait
cli
add
fxch
cmp
aam
inc
sub
xchg
shll
jbe
movsb
xchg
cs
popf
pop
pop
push
lret
mov
add
roll
insb
ja
jb
mov
shrl
push
xchg
popf
mov
daa
shrl
gs
rclb
jp
cmp
fmul
pop
or
rcrb
stc
orl
mov
into
mov
sub
pushf
or
hlt
add
inc
ljmp
push
enter
ss
dec
popa
pop
outsb
pushw
orl
cli
pop
mov
imul
mov
ds
lcall
out
push
into
dec
jne
repnz
xor
out
xor
adc
adc
das
fmul
lods
in
cmp
mov
dec
pop
mov
pop
popf
dec
stos
decl
mov
dec
adc
sub
dec
fnstenv
sbb
outsl
aas
push
lea
xchg
dec
push
xchg
pop
adc
xor
or
clc
popf
jo
jbe
dec
push
mov
xorl
dec
push
iret
aaa
mov
mov
call
mov
aam
int
cld
dec
mov
push
iret
ljmp
add
dec
idivl
add
adc
hlt
pusha
in
mov
dec
or
adc
popf
rcl
push
dec
cmc
or
ret
mov
outsl
or
lock
lret
push
mov
adc
inc
aam
dec
sbb
mov
inc
pop
fwait
les
and
scas
jp
hlt
and
mov
adc
fldcw
adc
in
movsl
cmp
leave
sub
scas
mov
dec
lahf
sbb
fs
sub
mov
std
sti
add
out
inc
xor
test
push
popa
cmp
push
dec
loope
inc
stos
dec
idiv
orl
shrl
dec
dec
cmp
and
inc
pop
lahf
push
js
sub
bound
xchg
and
xlat
pop
and
clc
cld
dec
lock
dec
imul
add
arpl
sbb
sbb
dec
jg
dec
dec
je
or
ficoms
lea
repnz
lahf
int
mov
subl
jle
jnp
scas
dec
jg
pop
xchg
outsl
data16
sbb
push
scas
shr
push
mov
xchg
leave
mov
jb
rcr
and
mov
mov
test
push
je
inc
mov
lock
test
shrl
sarb
xor
into
or
movsl
int3
aaa
dec
push
mov
ja
jecxz
adc
push
inc
jl
xlat
pop
repnz
xchg
ret
and
or
push
lahf
add
add
pop
aas
dec
jl
mov
sub
mov
lods
xor
ds
xor
dec
pop
sub
push
dec
bound
pop
cmp
push
out
mov
pop
mov
inc
inc
xor
pop
stos
les
adc
dec
sbb
inc
xchg
aam
sub
jle
push
mov
daa
and
int
push
jecxz
popf
push
push
aam
add
sarb
pop
push
mov
ret
and
rorb
stos
aas
cmp
jle
aaa
pop
ja
add
sbb
dec
jg
arpl
lcall
xchg
sbb
inc
jo
pop
clc
cmp
xchg
dec
cmp
dec
add
fisttpl
add
mov
shll
fiadds
nop
dec
lea
mov
aaa
adc
cs
test
scas
inc
sub
jl
sar
ret
inc
popa
xor
sti
in
in
std
dec
test
cmpsb
loop
dec
jp
sub
dec
pop
faddl
das
fs
int3
clc
dec
add
sub
mov
das
cltd
scas
aam
hlt
add
rorb
mov
cmp
jle
outsl
and
sbb
jl
and
push
xchg
aas
adc
iret
test
shr
int
cmp
scas
cs
popa
sbb
mov
pop
sub
cmp
clc
push
push
and
fisubrl
dec
mov
cs
mov
lret
pusha
sbb
xchg
push
aam
lahf
jno
outsb
fs
imul
mov
fistpll
sbb
mov
cmp
sahf
cs
cmc
lock
mov
dec
push
int3
jne
into
enter
pop
and
xchg
xchg
dec
pop
mov
out
xchg
mov
mov
out
dec
push
js
test
add
pushf
cmpb
ret
xor
pop
mull
mov
loope
jbe
dec
loopne
mov
push
inc
imul
dec
xor
test
fadd
xchg
insb
xor
add
pop
dec
ficoms
and
test
sti
stc
fwait
pop
aaa
enter
mov
lea
jae
cmc
stos
sbb
mov
xor
jb
push
xchg
in
fsts
imul
dec
cmpsl
or
mov
out
sbb
sbb
lods
sbb
dec
xor
inc
mov
orb
inc
mov
arpl
pop
push
cmpsb
in
fildll
out
inc
and
push
pop
mov
jnp
pop
cmpsl
movsb
and
fwait
pop
cli
ds
fbstp
aaa
sub
push
push
add
dec
jg
jle
jl
cltd
jb
aam
push
gs
repnz
push
push
addr16
in
ficoml
hlt
cmp
ret
cmp
out
jl
shlb
and
cmc
cwtl
and
mov
idivb
xchg
movsb
add
divl
xor
mov
jl
dec
dec
ljmp
mov
mov
xor
stos
bound
jns
cmp
ficompl
push
pop
and
addb
xor
mov
inc
xchg
push
pop
jmp
idivl
jae
lahf
adc
in
mov
inc
movsl
jl
scas
cmp
inc
ss
cld
cmpsb
aas
and
mov
push
xchg
and
decl
jo
pop
jle
rorb
push
dec
mov
jnp
dec
jg
xchg
jecxz
dec
sbb
adc
loop
dec
mov
pop
lea
fwait
cltd
into
clc
xor
dec
cwtl
aaa
jecxz
xchg
popf
add
xor
dec
and
cmpsl
mov
push
mov
dec
mov
repz
ljmp
out
into
out
adc
push
test
fs
pop
jno
inc
xchg
ret
dec
mov
fdiv
mov
ret
std
push
dec
push
imul
sbb
jb
sahf
mov
aad
mov
ss
out
sub
lods
cli
push
mul
mov
inc
add
jae
cmp
xor
cmp
repz
xor
mov
das
cmp
bound
adc
adc
out
or
scas
mov
lock
sub
pop
in
stos
dec
and
sbb
aas
ret
clc
iret
adc
andl
out
mov
jl
adc
jg
loope
pop
insl
push
loopne
mov
jbe
cmp
pop
ret
mov
inc
mov
cmp
fisubrl
dec
cmp
inc
jle
pop
ror
lret
pop
dec
cli
push
adc
inc
push
mov
cmp
dec
cld
mov
jl
jnp
cmovs
and
cmp
push
add
jle
jecxz
jl
push
pop
and
add
xlat
add
in
xchg
push
mov
dec
dec
pop
dec
or
dec
in
mov
and
hlt
dec
std
sub
push
add
mov
pop
das
icebp
lock
cltd
xchg
push
dec
shrb
mov
fmuls
ss
cmp
push
push
in
jno
adc
pop
dec
mov
inc
mov
fdivrl
mov
mov
jae
aam
mov
adc
xor
test
jg
dec
fisubrl
mov
dec
inc
lods
or
orl
in
xchg
mov
xchg
xchg
xor
and
cmp
push
dec
sbb
adc
sbb
popf
sub
movsl
and
cmp
mov
adc
daa
scas
add
dec
push
cltd
rcrb
inc
fnstsw
pusha
dec
into
lods
movsl
pop
in
rorb
and
mov
sub
pusha
sub
aas
lahf
xchg
dec
inc
push
add
add
jg
fisttpl
stc
mov
xor
pop
push
push
fs
aas
int3
sub
adc
xor
jl
mov
xor
testl
xchg
or
ljmp
jp
mov
into
xor
movsl
add
inc
aaa
jle
scas
lods
sarl
lds
jbe
in
test
xor
enter
mov
repz
ljmp
and
sbb
rcll
adc
inc
sub
dec
hlt
shlb
lcall
mov
push
insl
nop
or
dec
es
adc
dec
les
cltd
dec
cmc
out
fstps
or
xor
mov
mov
dec
in
dec
enter
dec
and
xchg
dec
sahf
adcb
add
lahf
jp
inc
mov
dec
jge
imul
mov
mov
test
dec
jb
lret
ret
or
inc
lret
xchg
dec
dec
cltd
leave
push
pop
xor
lret
inc
fwait
das
test
fdivr
sbb
jl
and
add
je
arpl
fnsave
sub
mov
mov
mov
inc
cmpsb
out
dec
fwait
stos
in
xorl
scas
dec
shlb
mov
sub
xchg
mov
pop
jle
mov
ds
sbb
test
lcall
movsl
mov
hlt
cmp
jge
fidivrl
mov
or
xchg
inc
mov
jne
test
add
loop,pn
lock
leave
adc
fs
dec
cmp
mov
lea
dec
xchg
inc
repz
push
cltd
adc
ja
dec
or
adc
and
mov
xor
stos
add
imull
sub
cmp
mov
adc
stos
dec
adc
push
dec
lods
dec
mov
push
gs
adc
loopne
rcrb
iret
jg
scas
aad
ljmp
xchg
sbb
ss
pushf
or
jmp
xor
popl
xchg
fstpt
dec
sub
lods
add
imul
loopne
loope
popf
sub
adc
adc
push
pushf
or
sbb
ret
test
mov
test
xor
push
pop
push
dec
and
pop
mov
adc
push
cli
lcall
dec
idivb
sahf
pop
dec
aam
out
add
mov
sbb
das
cmp
je
test
dec
xchg
inc
mov
pushf
inc
push
mov
push
aas
js
imul
and
and
sti
enter
inc
xlat
mov
mov
jne
push
push
subl
cmp
xchg
add
jb
imul
mov
jae
fmuls
mov
js
push
xlat
mov
insb
imull
dec
iret
jo
mov
dec
sahf
adc
jge
jbe
call
pop
scas
dec
int3
in
add
mov
sbb
xor
dec
cmp
mov
mov
jne
addb
and
insl
pop
dec
inc
test
iret
in
icebp
add
dec
pop
loop
imul
jne
pop
xchg
les
xchg
cli
pusha
hlt
mov
dec
notl
rcl
mov
popf
repz
cmpsl
or
add
mov
add
das
dec
jp
inc
jmp
jns
push
fistl
pop
cmp
nop
fiadds
pop
xor
test
xchg
rolb
push
gs
xchg
fwait
mov
mov
int3
leave
jecxz
dec
test
sbb
movsl
arpl
test
jmp
ja
hlt
push
dec
out
mov
test
add
add
xlat
pop
push
add
cmp
cmpsb
jg
adc
mov
aas
xchg
inc
fiadds
xchg
jp
adc
cmp
sub
xor
lret
lea
push
xor
jecxz
or
jb
hlt
jg
cmp
arpl
mov
imul
mov
aaa
outsl
std
lea
rol
dec
std
or
leave
mov
cmp
in
dec
in
out
dec
orl
xor
sbb
inc
push
cwtl
inc
pop
jns
pop
dec
mov
mov
stc
dec
xchg
frstor
es
call
mov
inc
movsb
or
jne
xchg
adc
pop
push
pop
mov
dec
fmull
loop
lock
imul
add
ds
and
loopne
inc
pslld
and
aas
in
mov
lret
fidivrl
sahf
mov
dec
mov
pop
dec
adc
test
ljmp
mov
sub
xchg
dec
add
iret
cli
dec
fwait
into
sbb
popf
sub
popa
leave
xor
ret
je
ja
adc
lret
sub
xor
sbb
dec
dec
adc
in
add
cmp
jno
and
mov
add
cld
push
insl
cltd
outsl
mov
test
pop
addb
out
movsb
inc
popa
loop
cmpsl
pop
dec
push
sbb
mov
dec
testl
clc
jnp
ja
adc
cmpsb
dec
push
fwait
xchg
dec
inc
mov
xor
dec
das
sbb
aad
pop
inc
dec
fmuls
mov
dec
aas
movsl
and
xor
shll
jne
push
loop
inc
cwtl
inc
pop
inc
dec
dec
cmp
pop
adcb
dec
mov
jle
aaa
dec
xor
daa
es
cmp
push
or
fdivrs
test
inc
in
xchg
imul
mov
loope
push
leave
in
fimull
adc
sti
mov
stc
jbe
adc
and
scas
cmp
std
or
adc
out
bound
rcrb
inc
push
nop
mov
dec
mov
dec
lcall
push
dec
imul
aas
scas
or
outsb
sub
dec
jnp
push
jmp
nop
cmp
xchg
fidivl
repz
xchg
in
mov
pop
dec
push
loope
xchg
xchg
lock
cmp
xor
cmc
decl
imul
lcall
and
sub
dec
aam
mov
int
test
adc
imul
xchg
sbb
pop
xchg
and
das
push
dec
push
cmp
gs
cwtl
dec
loopne
out
inc
imul
bound
sbb
dec
sub
leave
dec
xchg
jbe
dec
aam
mov
imul
push
in
mov
inc
outsb
pusha
fs
imul
jo
lahf
ret
arpl
in
imull
dec
xor
aam
dec
les
enter
cmp
dec
in
leave
roll
sub
nop
pop
dec
sar
loope
stc
dec
add
jne
call
out
sub
ret
xchg
fisttpll
ds
out
inc
dec
push
mov
jbe
jb
fwait
dec
mov
add
dec
jmp
or
je
popf
test
adc
xchg
inc
fchs
lock
add
bound
or
sbb
and
dec
outsl
adc
push
lahf
sbb
dec
fstl
or
dec
sti
jle
xchg
push
insb
sbb
sbb
cmp
cmp
lds
imul
push
jp
jbe
dec
cmc
and
sub
dec
sarl
sti
mov
jle
mov
test
test
mov
aaa
out
sub
xchg
push
rcr
xor
fimuls
dec
cmp
ljmp
je
and
adc
clc
mov
out
lahf
lds
add
xchg
jne
sub
and
sbb
mov
dec
pop
ret
dec
push
shr
ret
mov
xor
add
or
xchg
adc
in
sbb
scas
pop
loope
dec
popa
and
jne
pop
sbb
sub
dec
adc
fistl
insb
push
aaa
fsubrl
outsb
cmpsl
movsl
into
push
mov
lahf
add
jo
cmp
mov
aas
adc
test
and
xor
dec
pusha
rcll
mov
ljmp
aas
into
pop
or
dec
pop
jo
lock
pop
xchg
jg
je
shl
arpl
inc
dec
repnz
cmpsb
dec
out
pop
pop
cmp
icebp
push
fwait
mov
in
jo
jmp
xor
pop
cmp
outsb
add
aad
aaa
mov
xor
scas
adc
movsb
xor
shlb
mov
dec
pop
xchg
test
pusha
in
mov
cltd
aam
bound
mov
into
jg
or
shlb
mov
movl
das
xchg
movsb
add
dec
ja
xorl
popf
xchg
and
in
dec
sbb
sbb
nop
imul
pop
inc
mov
fcmove
pusha
daa
mov
lret
les
fdivr
xchg
fcomip
imul
jbe
in
jmp
in
icebp
clc
fwait
lahf
fimuls
push
aaa
inc
pop
xor
out
adc
into
or
inc
cmp
mov
xor
dec
cmpb
add
dec
inc
adc
add
insl
jg
es
clc
inc
inc
push
adcl
push
jnp
cmpsb
ret
dec
loopnew
xchg
push
bound
rorl
lea
or
das
cmc
pop
xchg
pop
aas
aam
push
icebp
dec
lret
mov
xor
xchg
sbb
cmp
jns
lret
movsb
cld
in
push
cs
cmp
fnstenv
out
call
mov
sub
lret
ss
push
int3
cmpb
lret
sub
xchg
daa
mov
pop
lcall
test
push
dec
and
sub
mov
daa
adc
pop
mov
xor
or
mov
stos
bound
push
pop
push
sbb
mov
out
inc
push
outsl
push
mov
decl
mov
pop
daa
mov
cli
sbb
mov
jno
xchg
loop
add
sbb
dec
ret
push
fsubrs
cmpsl
xor
mov
ss
enter
leave
dec
mov
cmc
rcll
rorl
xor
push
mov
dec
das
mov
xor
mov
ret
add
dec
inc
jmp
rclb
insl
sub
pop
dec
ljmp
into
stc
pop
xchg
and
push
in
iret
insb
push
dec
das
xor
hlt
scas
or
cmpl
fildl
mov
sub
sahf
and
cld
dec
cli
cmp
push
ds
add
pushl
pop
ffreep
cmp
or
pop
cwtl
add
addr16
xchg
mov
push
dec
xor
add
cmp
adc
pop
add
inc
mov
dec
sbb
ret
dec
push
xchg
mov
dec
sub
repz
dec
sbb
mov
and
jno
xchg
or
dec
push
fldcw
loope
jle
lods
fisubrl
jg
dec
in
jo
dec
cmp
pop
sbb
mov
iret
out
xor
inc
jge
mov
mov
mov
add
adc
jno
lret
xlat
adc
aam
sub
std
push
mov
aam
aas
test
push
add
stc
lods
mov
push
divb
sti
cwtl
movd
rol
orl
push
pusha
dec
dec
fadds
pop
inc
dec
push
mov
cld
pop
and
dec
or
cmpsl
dec
rcrl
push
out
popf
dec
lahf
inc
lret
inc
call
adc
and
out
dec
in
lret
jne
jns
dec
ss
xor
sbb
pop
xlat
dec
jecxz
add
lcall
dec
or
xchg
in
dec
jmp
or
scas
push
dec
jno
mov
mov
add
jmp
inc
push
inc
mov
dec
dec
fidivrl
test
in
dec
push
lahf
repz
adcb
push
or
jle
mov
cs
daa
push
dec
dec
loopne
inc
clc
dec
mov
inc
add
pop
int
jl
sub
out
lock
ss
iret
mov
std
xchg
pop
dec
sub
ds
cmp
mov
push
mov
fbld
xorb
fisubrs
and
jmp
jle
das
pop
scas
cmp
dec
inc
aam
and
inc
mov
js
iret
sbb
fisubl
xchg
mov
mov
ds
pop
jne
sub
mov
sub
lret
lds
scas
mov
lcall
pcmpgtb
xor
jnp
mov
fwait
dec
jg
fbld
in
xor
mov
and
pusha
push
mov
mov
mov
scas
mov
ror
ss
lret
dec
and
dec
xchg
pop
jge
scas
cltd
repz
cmp
dec
insl
rclb
xchg
jo
bndldx
or
shrl
stos
cmp
dec
dec
roll
es
mov
sub
das
mov
int3
inc
xchg
idiv
mov
add
dec
push
adc
inc
sub
xlat
dec
jbe
out
outsl
lds
sbb
aad
inc
and
mov
imul
popl
dec
ret
xchg
add
outsl
xor
or
dec
mov
sbb
data16
int
call
add
jmp
dec
mov
sub
inc
inc
iret
pop
mov
push
bound
sub
sub
jle
loopne
mov
iret
mov
orb
aas
sub
lahf
inc
repnz
mov
cwtl
nop
adc
add
gs
ljmp
mov
sub
dec
and
je
out
jl
xor
dec
fwait
test
mov
int
loopne
inc
and
outsb
jecxz
dec
fnsave
adcl
jae
inc
mov
repnz
cmpsb
loopne
cmp
fucomi
in
jb
dec
lcall
xchg
dec
test
mov
fisttpl
mov
or
lret
cmp
pop
pop
inc
inc
aam
add
mov
dec
rolb
ljmp
dec
adc
aaa
sub
call
data16
pop
dec
push
sahf
push
cltd
dec
aaa
push
xor
rorb
or
rcll
pop
dec
sahf
lret
lock
xor
bound
loop
dec
push
mov
outsb
cld
xorb
sub
stos
dec
inc
lods
ror
mov
nop
or
add
mov
cmpl
xchg
dec
add
sbb
inc
fnstsw
xchg
ja
jnp
sahf
add
aaa
and
add
insl
xchg
imul
dec
cld
lods
bound
aaa
pop
ret
or
xlat
lahf
dec
sub
pop
arpl
popf
gs
sbb
push
cmp
xor
ljmp
imul
and
sbb
into
inc
je
xchg
dec
int
or
dec
out
or
dec
out
sarl
xor
test
and
cmpsl
dec
insb
pop
pop
pop
leave
loopne
xchg
dec
subb
into
dec
ror
push
jle
ret
xchg
mov
mov
cs
nop
adc
inc
into
out
pusha
jae
arpl
loop
test
inc
test
add
fstps
insl
xchg
shll
js
dec
jg
adc
xchg
mov
fwait
dec
dec
sarl
mov
mov
loopne
je
or
adc
sbb
dec
jb
das
andb
cmp
cmpsl
dec
dec
int3
shlb
ror
dec
sub
in
add
aam
cwtl
and
push
stc
cltd
lcall
cli
or
xor
dec
cmpsl
data16
cld
push
push
dec
dec
outsb
xchg
mov
dec
sbb
lods
xchg
adc
stos
mov
das
push
mov
xchg
cmp
push
push
push
push
in
pop
inc
movsb
sbb
xlat
push
mov
pop
leave
fbld
mov
dec
mov
and
dec
addl
xor
mov
cmp
xor
sarl
or
outsl
mov
dec
pop
into
xchg
xchg
outsb
sub
dec
dec
xchg
repz
mov
cli
inc
ljmp
aad
into
fadd
push
pop
dec
mov
inc
push
sbb
sbb
jle
mov
fnstcw
inc
lret
pop
arpl
loope
push
xor
mov
and
inc
into
pusha
dec
xchg
xor
shlb
mov
dec
lret
aam
adc
dec
test
xchg
lcall
pusha
fwait
stos
incl
dec
add
dec
loopne
iret
das
cli
pop
out
aas
and
stos
paddb
jbe
dec
es
mov
fisttpll
in
loop
jae
sbb
push
push
dec
jbe
mov
enter
add
mov
loopne
lcall
sbb
push
jnp
dec
xchg
outsl
rorb
imul
mov
cli
sub
stos
adc
les
sub
das
dec
gs
out
mov
aas
fsubl
jl
fcoml
push
fldenv
xchg
addr16
pop
imul
mov
dec
jbe
cs
sub
cmp
pop
push
dec
loope
pop
add
or
sbb
mov
test
loop
ds
xchg
dec
mov
mov
dec
je
pop
mov
nop
ret
dec
pop
push
pop
cmpsb
aaa
push
jns
dec
xor
mov
cli
pusha
stos
dec
sbb
and
mov
sar
sti
xchg
fadd
xor
enter
mov
ja
or
xlat
dec
xchg
dec
adc
cmpsl
mov
mov
je
arpl
xor
mov
adc
in
sub
xchg
jg
jge
ss
dec
test
aas
mov
mov
outsl
pop
movl
dec
mov
aas
fiadds
jns
clc
pop
add
imul
mov
jg
dec
dec
loop
dec
push
xchg
adc
sbb
adc
add
dec
ss
xchg
inc
cli
arpl
dec
imulb
mov
out
or
xchg
mov
push
stos
pop
mov
pop
pop
rcll
add
dec
xor
sbb
xor
or
jae
ds
lahf
push
icebp
jb
jnp
popa
ljmp
jb
dec
iret
or
cmc
jmp
pop
ret
pop
sbb
scas
dec
ds
clc
out
fs
mov
cmp
xor
adc
dec
dec
fiadds
cmpsb
push
adc
pop
fimull
jae
cltd
cmp
dec
jl
push
cmp
push
fnstenv
mov
jp
mov
push
dec
mov
outsl
mov
adc
add
std
insb
dec
sub
adc
jbe
sbb
add
loope
aaa
inc
jmp
dec
inc
jle
lea
add
xchg
pusha
sub
push
aaa
dec
popf
xor
clc
leave
dec
icebp
jno
jg
or
das
dec
push
inc
add
sahf
arpl
mov
lods
jo
jae
dec
pop
and
jmp
add
dec
pop
add
mov
inc
decb
sub
and
dec
jb
iret
inc
adc
dec
out
cmp
sbbb
clc
dec
dec
inc
and
jecxz
fs
pushf
dec
xchg
mov
in
jns
jne
dec
cmp
mov
dec
fld1
xchg
sub
stc
fldcw
out
loop
sbb
outsb
dec
xor
xchg
jg
dec
nop
fsubrp
and
add
cmpsl
jns
fbld
dec
insb
mov
dec
pop
inc
inc
mov
dec
int
mov
dec
adc
dec
and
lret
push
dec
into
fucomi
addr16
lcall
push
sbb
dec
dec
xchg
sbb
inc
fs
dec
popa
popl
pop
icebp
lods
jecxz
std
popa
fs
or
fstl
insb
loopne
insl
jle
mov
inc
stos
add
mov
jl
pop
jp
cmp
hlt
dec
addr16
rorb
test
es
sarb
cs
cwtl
and
jg
sub
cmp
jle
dec
std
push
cltd
xchg
push
and
jp
fstl
mov
mov
push
xchg
aaa
rol
add
rol
pop
pop
ss
scas
insl
xchg
push
push
lock
sub
adc
sub
iret
les
inc
bound
add
mov
aas
adc
mov
mov
mov
insl
add
pop
inc
mov
loopne
and
adc
mov
lahf
push
pop
outsl
jbe
clc
cmc
icebp
pop
push
pusha
mov
iret
dec
xorb
stos
xor
arpl
fisubl
sahf
add
js
push
clc
sahf
jmp
mov
cmpsl
push
stos
les
cwtl
es
xor
les
jo
jle
stos
outsb
push
fsubl
push
and
and
jg
adc
setl
pop
push
dec
mov
pusha
icebp
pop
pop
mov
in
xchg
out
lods
jle
mov
jb
daa
xor
push
mov
pushf
sub
dec
xchg
xor
dec
jg
test
aad
mov
inc
mov
add
push
out
pop
nop
aas
dec
xor
add
jl
sub
cmpsl
sub
cmpsb
out
into
insb
jbe
repz
aam
cmp
ret
pop
dec
dec
insb
orl
mov
movsb
pop
in
inc
jmp
repnz
mov
cmp
dec
les
sarb
push
cmp
dec
jp
in
sub
fadds
lods
push
mov
cmc
jecxz
cs
fwait
push
out
cmp
push
mov
xlat
mov
sbb
cmp
les
dec
xor
jb
jle
dec
cmp
push
lock
pop
movsl
test
icebp
popa
sub
xchg
inc
subb
addr16
xchg
jg
pop
test
inc
into
mov
mov
xchg
push
dec
xor
push
dec
loopne
sbb
and
jo
cmp
das
adc
pushf
push
adcl
enter
das
dec
fistpll
xchg
push
loopne
lcall
jns
xorb
cli
cmpsb
mov
or
stos
rol
jmp
movsb
jle
cltd
xor
sbb
stos
and
mov
fadds
push
dec
stos
sbb
in
or
loope
shl
stos
mov
lea
add
mov
dec
push
gs
jne
push
push
jp
adc
cmc
pop
les
or
mov
dec
dec
lds
popa
int
addr16
fs
lret
dec
mov
call
pusha
dec
in
jnp
mov
sub
clc
add
dec
push
in
xor
or
lods
fwait
enter
push
dec
into
pop
push
sub
dec
and
mov
cmpsb
mov
insb
test
es
rclb
mov
jbe
scas
int3
testb
andl
test
popf
pop
inc
fcmovnu
orb
pop
cwtl
mov
inc
jp
pop
jl
jp
sub
lea
xchg
xchg
lret
mov
or
pop
in
and
push
iret
mov
vprotb
hlt
call
int3
push
add
dec
stc
orb
vpsubb
lret
push
inc
dec
cmpsl
js
inc
ljmp
mov
lods
les
pminsw
pop
lods
fimuls
lods
mov
jmp
iret
lret
repnz
jmp
xorl
aas
mov
in
mov
int3
adc
mov
outsl
ja
sahf
daa
dec
jno
push
std
aas
in
shll
arpl
mov
call
out
dec
ds
or
and
cmp
pop
lret
hlt
lds
push
sbb
and
xchg
adc
sbb
std
stos
dec
mov
pop
mov
mov
mov
shll
dec
cmpsl
and
dec
fsubl
or
iret
mov
add
rorl
adc
inc
xchg
sbb
out
popf
stos
dec
push
xchg
mov
pop
jmp
pop
aaa
inc
add
dec
cld
sbb
xchg
sub
adc
lock
adcb
jnp
in
nop
gs
sbb
push
xchg
dec
jmp
mov
mov
or
int3
dec
jno
je
popf
pop
sbb
out
add
outsl
push
adc
sbb
idivl
jl
mov
and
pop
mov
enter
adc
inc
mov
lods
fldenv
lret
rorl
es
dec
sub
push
add
push
orl
xor
int3
dec
pop
leave
xchg
inc
es
sub
iret
or
cmpl
jg
xchg
cmp
fdivl
xchg
je
scas
push
mov
jbe
mov
sub
mov
jle
iret
fiadds
pop
mov
pop
xchg
ds
xlat
push
xchg
mov
push
pop
mov
loopne
out
dec
into
pop
cmpsl
and
shl
dec
dec
sti
mov
rorl
lea
jp
push
xor
push
or
sbb
dec
cmp
adc
insl
sbb
xchg
mov
adc
jae
pop
mov
cmc
mov
pop
out
mov
sub
dec
dec
fdivl
dec
inc
xor
pop
mov
push
adc
push
sbb
push
pop
je
nop
dec
xor
jne
into
dec
shl
mov
xor
mov
jg
adc
jb
ret
dec
lret
mov
pop
cmpsl
dec
bound
fidivrl
mov
jmp
lret
mov
push
mulb
mov
mov
pusha
or
mov
sub
dec
xor
jecxz
mov
scas
fcomp
test
into
xchg
mov
dec
adc
and
gs
mov
sarb
cmp
dec
or
sub
int3
stos
nop
dec
xor
sbb
fcmovne
das
xchg
dec
mov
cmp
xor
adc
ss
xor
shlb
dec
and
mov
dec
arpl
scas
mov
pop
cld
xchg
fs
jle
jmp
std
psllq
pop
mov
cs
adc
psadbw
sub
dec
mov
mov
stos
mov
xlat
xor
pop
jmp
or
repz
and
rorb
jle
mov
test
mov
sbb
jl
xchg
out
push
in
mov
inc
dec
flds
pop
push
xor
loop
popf
pop
push
or
pop
or
das
stc
push
cmp
mov
xchg
mov
xchg
sbb
pop
dec
pop
sub
mov
in
lds
mov
xor
xchg
inc
pop
rolb
mov
push
shl
xchg
imul
pop
int
pushf
pusha
mov
aad
mov
dec
lcall
loop
bound
fidivs
xor
lock
mov
adc
mov
lahf
mov
add
cmp
jl
cmp
inc
lret
in
mov
lods
dec
inc
imul
jb
inc
ss
dec
bswap
xor
scas
xorl
ljmp
dec
imul
and
mov
cmpsb
insl
dec
call
loopne
jp
dec
shll
icebp
ds
jle
ficoms
and
or
mov
gs
mov
scas
push
out
mov
imul
scas
adc
ret
sub
notl
xchg
jno
enter
fnsave
mov
inc
call
iret
cmpsb
fisubs
or
cltd
xchg
and
add
imul
fsts
lahf
das
xor
jl
dec
xchg
or
iret
js
mov
rcrl
or
add
fadds
in
dec
xchg
outsb
insb
popf
dec
mov
aaa
hlt
movsl
xor
mov
lgs
xchg
mov
xchg
pop
mov
outsb
push
mov
movsb
outsl
jns
and
jge
call
xor
mov
hlt
dec
outsb
mov
sbb
repz
aad
fstpl
dec
in
add
test
pop
xor
xlat
cmpsl
mov
fsubp
stos
into
and
lea
or
aas
int3
jle
lds
pop
arpl
cli
cmp
int3
cmc
lods
test
jg
sub
stc
iret
lret
outsl
cmp
sub
sub
cli
lods
add
fwait
jnp
jg
add
icebp
and
pop
test
mov
mov
sbb
mov
jb
push
mov
aad
mov
add
insb
imul
dec
loope
lods
sti
repz
ljmp
imul
fisttps
sbb
cli
mov
lret
cmp
lahf
das
mov
lds
faddl
pop
or
inc
jle
mov
out
les
pop
or
cmc
das
xchg
aad
or
lret
addr16
mov
test
xor
pop
leave
pop
dec
add
call
in
aaa
or
fs
push
sub
mov
dec
cmpsl
xchg
jg
jbe
cmovle
jb
lret
dec
es
push
push
out
loope
dec
mov
xor
fmull
and
inc
fsubrs
add
mov
xor
icebp
mov
stc
dec
ds
jle
push
fmull
jmp
aam
dec
sbb
popf
or
dec
push
shl
fadd
pop
ja
dec
sbb
adc
xchg
or
pushf
scas
fimuls
inc
pop
jb
daa
mov
xor
lret
mov
add
cltd
sub
pushf
pop
dec
bound
movsb
jp
jg
xchg
cli
pop
mov
and
hlt
cmp
dec
sbb
in
adc
out
xchg
loop
dec
mov
adc
dec
mov
arpl
inc
rcll
pop
xchg
sbb
ss
adc
inc
mov
enter
xor
adc
dec
inc
lahf
jl
clc
and
mov
mov
xchg
jb
leave
jl
lahf
fstpl
movaps
sbb
ljmp
out
inc
dec
sub
xor
and
ss
cs
mov
pop
ret
sub
pop
scas
pop
test
je
imul
ja
pop
pop
faddl
push
aaa
add
cmp
ret
jle
mov
mov
mov
enter
add
mov
xor
cmove
lret
mov
mov
pop
push
adc
cld
and
in
and
cltd
sbb
sbb
mov
jmp
ds
addr16
shlb
or
into
jg
cli
cwtl
fwait
cs
outsb
dec
mov
mov
and
push
lret
jl
mov
jo
pop
mov
rorl
or
out
sub
mov
pushf
ret
pop
mov
push
add
jle
repnz
ret
pop
dec
or
push
inc
jle
ret
pop
cmpl
inc
aaa
nop
out
aas
out
sub
sub
mov
frstor
dec
mov
push
loop
sub
jnp
dec
dec
xchg
sahf
xor
dec
leave
scas
push
mov
popa
pop
mov
sub
fldcw
lods
orb
or
loope
lods
adc
mov
lahf
test
ja,pn
inc
mov
and
jle
dec
pop
mov
pop
inc
dec
aas
lds
loop
imul
outsb
jp
mov
xchg
aad
gs
dec
mov
and
repz
dec
jge
cmpsb
and
pop
adc
fmull
aam
mov
lods
cs
shll
jge
dec
and
push
in
imul
andl
pop
mov
jp
mov
or
and
inc
sub
push
pop
aam
mov
add
movsl
and
cmp
scas
mov
xchg
popa
and
xor
sub
test
dec
push
icebp
std
add
popa
cmpl
iret
je
cmpps
out
ds
sti
xchg
push
push
pop
dec
scas
mov
lods
xor
scas
xchg
mov
cmp
repnz
ds
sub
mov
fiadds
dec
fnsave
add
pop
dec
or
pop
leave
mov
pop
pop
jmp
sub
hlt
dec
push
dec
mov
clc
mov
push
pop
inc
addr16
dec
xor
dec
dec
xchg
stos
imul
lock
dec
cmp
stos
mov
pop
scas
ljmp
pop
dec
inc
scas
pop
mov
dec
xchg
inc
push
jmp
adc
fcomps
adc
test
adc
push
xlat
fdivl
out
imul
mov
dec
xor
adc
shrl
push
mov
or
inc
dec
add
int3
cld
inc
fbstp
dec
jo
nop
popf
loopne
push
dec
das
mov
movsl
or
lahf
iret
cmp
out
cmp
mov
lcall
mov
jle
mov
sub
mov
cs
enter
cmp
jl
jb
das
dec
jecxz
xchg
cmp
in
lcall
push
cs
popa
cmc
test
popl
daa
popf
push
lock
cmp
das
jbe
fists
mov
outsb
mov
dec
fdiv
cmc
or
into
dec
jg,pn
imull
and
jg
pop
shrb
aas
bsf
sbb
mov
sbb
lret
push
add
jno
pop
cli
ds
inc
mov
mov
xlat
and
clc
mov
adc
pop
mov
adc
and
lret
dec
push
jne
testb
pop
into
inc
add
dec
pop
and
dec
mov
das
clc
jne
cmp
fldt
lret
push
je
jnp
loop
and
sub
icebp
fsubl
cmp
pop
push
stos
dec
fadds
mov
sbb
or
dec
mov
lods
fsubr
cltd
push
test
negl
cmp
cltd
aam
shr
mull
mov
inc
xor
push
add
enter
lods
adc
sbb
push
js
cli
shl
repnz
and
mov
repz
cld
in
or
jmp
cmp
int
pop
jmp
int3
hlt
lahf
in
cs
fldlg2
inc
mov
jne
shlb
sub
das
adc
or
mov
test
or
icebp
xchg
push
xor
mov
pop
dec
mov
xchg
xor
iret
xor
sbb
aad
daa
aaa
popa
fistpl
test
cltd
cmp
pop
pop
add
jmp
pusha
dec
adc
les
sti
pop
cmpb
std
std
pop
scas
xor
push
test
cmp
test
jl
pop
xchg
js
fxtract
jns
xchg
lcall
mov
xchg
inc
mov
mov
and
push
repnz
mov
dec
xor
gs
mov
xchg
les
sub
xor
stc
push
jle
xchg
loopne
ds
lcall
ret
cmp
and
cwtl
xor
dec
repz
lret
cltd
pop
lods
aad
mov
mov
loopne
cmp
les
mov
out
push
jle
and
int3
fwait
data16
aad
shll
push
mov
jns
les
jno
iret
jo
ja
inc
aas
xor
adc
adc
jl
cli
jnp
fsincos
cli
dec
pop
cmpsl
inc
push
lods
jnp
fs
gs
xchg
lock
out
out
push
gs
xchg
in
lret
cmp
xchg
lods
fwait
push
xchg
inc
aam
pop
scas
div
aaa
sbb
mov
adc
pop
cmp
sbb
cmp
mov
js
inc
mov
fimull
xor
pushf
sahf
xchg
add
jmp
mov
inc
mov
cs
push
bound
loopne
push
stos
das
rep
xchg
int
xor
into
fimuls
dec
aas
mov
icebp
sbb
je
nop
cmpsb
mov
sbb
cmp
cmp
insb
dec
push
xchg
sbb
popa
cmp
js
xor
es
rcl
adc
test
or
iret
dec
and
dec
fldcw
mov
sbbb
std
mov
pop
mov
outsb
jg
adc
inc
and
mov
dec
dec
das
xchg
push
out
sahf
out
mov
adc
dec
std
lret
sbb
jmp
inc
addl
idivl
cmc
mov
dec
push
fwait
nop
test
lret
test
push
inc
lahf
mov
repz
mov
dec
ljmp
or
int3
sub
jecxz
andb
orb
adc
lods
outsb
mov
imul
jle
lcall
test
add
imul
xchg
sahf
je
int3
dec
enter
or
inc
iret
dec
insl
test
sbb
outsb
sahf
inc
aam
push
push
mov
dec
jae
push
bound
pop
push
sub
cmp
ss
sub
jne
dec
cmc
pop
xor
add
add
aas
rcll
dec
sbb
ret
sub
inc
dec
in
idiv
mov
push
pop
dec
shl
cmp
fldenv
dec
lods
cmpb
mov
mov
dec
call
in
cmp
inc
xchg
orl
cmp
mull
lods
pop
adc
hlt
mov
ljmp
xor
xchg
push
jbe
fwait
push
sub
xchg
hlt
pop
test
jmp
mov
outsb
call
imul
push
mov
xorl
add
inc
scas
dec
stc
leave
adc
cmc
xchg
push
pop
scas
mov
into
stos
mov
es
push
jb
insb
xlat
popl
js
dec
inc
out
mov
fwait
inc
lock
mov
rcrb
fsubrs
xor
and
sbb
cmp
xor
jl
dec
inc
jge
push
or
test
mov
pop
stos
paddsb
cmp
pop
cltd
push
adc
repnz
sbb
out
xor
pop
and
shr
push
lock
fldt
xor
popf
jg
icebp
lcall
xchg
ret
imul
adc
popf
dec
daa
push
inc
dec
xor
jg
in
fbstp
and
add
fs
add
push
cmp
sub
push
sub
in
pop
nop
mov
add
add
daa
fs
lahf
cmp
aad
aad
add
out
out
sahf
or
jecxz
test
pushf
dec
xor
push
dec
push
sti
adc
rcr
adc
jne
dec
clc
and
adc
fmuls
incl
xchg
into
insb
cmp
outsb
sub
or
pop
bound
cmpsb
lock
outsl
fidivrs
es
test
sarb
mov
push
test
inc
mov
or
test
sbb
into
cmp
add
ret
test
mov
pop
fists
movb
inc
cmc
ljmp
push
stos
popa
add
adc
xchg
pop
xor
iret
ljmp
jmp
sahf
or
pop
jl
fnstenv
imul
test
enter
push
mov
andl
or
mov
cltd
inc
into
mov
pop
mov
sar
and
jge
dec
dec
inc
sub
push
cmpsl
dec
leave
cmp
je
sub
mov
cmpsl
push
mov
jb
clc
cmpsb
xchg
roll
roll
wbinvd
adc
dec
add
cwtl
icebp
mov
repz
mov
test
cmc
mov
mov
push
dec
mov
inc
and
push
arpl
adc
mov
dec
add
adc
cmpsb
xlat
sbb
add
mov
jb
stc
push
sub
insl
imul
mov
push
mov
adc
pop
lods
int3
stos
xchg
mov
scas
adc
and
in
xchg
cmp
negl
aam
mov
leave
rcrb
dec
aaa
and
pop
jp
xor
dec
inc
mov
cmc
cmp
jae
dec
mov
mov
sahf
jae
push
mov
out
mov
jge
loope
sub
xor
addr16
cltd
mov
jg
sub
push
enter
xchg
add
xor
lahf
scas
pop
ljmp
stos
jns
mov
inc
sub
sbb
jne
mov
or
push
lock
jg
inc
iret
sbb
sub
arpl
movsl
ret
dec
dec
lods
std
movsb
sbb
push
call
dec
push
jo
push
adc
sub
mov
test
lock
inc
outsl
or
or
in
mov
dec
add
imul
inc
dec
sub
mov
dec
pop
push
shlb
cmp
fsub
in
sbb
cmpsl
jle
push
dec
cmpsb
cmp
and
pop
pop
push
dec
lahf
xchg
inc
or
push
mov
arpl
inc
mov
jo
jle
mov
ret
inc
int
dec
dec
dec
out
cmp
mov
cmp
pop
or
out
add
rolb
dec
scas
out
sub
je
scas
dec
pushf
inc
mov
jecxz
cmpsb
jp,pt
dec
mov
push
fbld
and
incb
outsl
sti
dec
daa
repnz
shr
lret
dec
pop
jbe
loop
aaa
push
loope
push
dec
or
inc
orb
mov
dec
fcmovb
ds
dec
xor
mov
dec
icebp
sub
enter
jecxz
outsb
mov
dec
add
push
jbe
cmp
fsubrl
mov
dec
inc
test
xlat
arpl
dec
test
jl
jmp
push
ljmp
dec
dec
pop
xchg
mov
sbb
adc
add
dec
sbb
imul
push
mov
dec
mov
xchg
mov
orl
int3
leave
aam
dec
fildll
sbb
dec
push
in
mov
and
shlb
fnstenv
and
xor
dec
outsl
in
pop
je
add
xchg
or
incl
test
ja
mov
dec
mov
stc
lcall
arpl
rorb
mov
jno
xor
lods
push
out
sahf
int3
sub
push
cli
ljmp
loopne
nop
adc
loope
xor
test
push
das
fbld
aaa
iret
mov
push
mull
popa
jns
jle
jae
xchg
hlt
sub
xchg
xor
out
xchg
stos
dec
in
outsl
jo
lods
jl
shr
jg
push
test
xchg
rclb
imul
or
dec
mov
xchg
pop
push
dec
inc
cmpsb
jae
cmpsb
jae
shl
add
insb
daa
in
cmp
xchg
push
lahf
out
hlt
repz
inc
and
push
dec
nop
loope
enter
jmp
jno
loopne
xor
int
or
adc
je
lock
push
dec
out
jl
push
loopne
ja
xor
in
lock
jle
push
fistps
dec
inc
and
fwait
int3
jl
push
iret
push
xor
scas
add
in
push
xor
repnz
jo
hlt
pop
jle
sahf
lret
in
cmp
shll
dec
out
int
jle
ja
stos
mov
shlb
dec
xor
sbbl
sahf
jl
pusha
sub
push
fmuls
mov
mov
lods
lret
push
sti
jb
mov
pop
test
js
xor
fs
out
sbb
out
pop
dec
jns
aas
loop
dec
xor
pop
rorl
xchg
dec
subb
std
dec
dec
xchg
shr
pop
clc
or
test
hlt
aas
push
cmp
subl
in
add
dec
fimuls
cmpsl
mov
pusha
movsl
dec
and
test
test
sbb
xor
sbb
mov
rorl
out
xor
mov
push
mov
out
cmpsl
dec
sti
nop
rcrb
into
sahf
inc
mov
daa
dec
adc
lock
pop
arpl
dec
sub
jbe
fidivs
icebp
mov
aaa
movsb
xor
fs
and
stos
dec
jae
rcr
adc
or
dec
add
stc
aad
xor
ret
out
test
into
sub
dec
add
mov
test
hlt
push
popa
sbb
mov
ret
xchg
mov
inc
xlat
adc
imul
daa
dec
add
xor
mov
fstpt
mov
fists
mov
lods
dec
enter
aad
push
pop
je
dec
clc
jo
rorl
dec
push
cmpsb
data16
xor
inc
fiadds
dec
dec
sub
xchg
rorb
decl
fsubs
jno
out
mov
popf
es
push
pop
and
into
dec
dec
clc
jecxz
rorb
shr
adc
das
push
inc
sub
jecxz
jp
jl
pop
sub
push
cmp
pop
cmp
rcl
mov
or
mov
xor
cmpsl
jg
adcl
jle
cmp
clc
lods
cs
inc
push
dec
xchg
iret
dec
ljmp
int
add
push
lods
rorb
inc
aam
dec
bswap
mov
dec
sub
xchg
test
mov
stos
loopne
into
ss
dec
jne
cmp
dec
sti
div
stc
inc
mov
dec
lret
cltd
out
aad
jnp
dec
adc
clc
sub
mov
out
icebp
or
xor
mov
push
and
dec
cltd
mov
outsb
imul
popf
mov
dec
xchg
sbb
nop
movsb
dec
insl
cmp
stos
jb
dec
sti
jb
sbb
jg
add
or
jne
test
es
inc
jg
cvttps2pi
outsb
stos
jl
inc
mov
dec
notl
mov
dec
cmp
cmpsb
ljmp
repz
sahf
fs
adc
inc
fs
insb
dec
int
stos
into
mull
mov
loop
push
add
pop
sbb
lret
js
mov
jbe
pusha
dec
inc
fdivrp
stos
push
lahf
jp
dec
test
lea
jl
xchg
dec
add
ret
push
push
or
or
inc
cmp
and
hlt
dec
rcrl
push
inc
pop
jge
frstor
int3
mov
and
pusha
hlt
jmp
fdivl
ret
dec
and
push
push
pop
pop
pop
imul
in
jmp
insl
addr16
mov
adc
lret
pusha
aad
sub
pop
jl
lock
jge
aam
adc
dec
ret
mov
mov
jle
pop
das
lds
cmp
cmpsl
xchg
ret
xor
cmp
inc
int3
test
lahf
cld
lds
daa
sub
arpl
dec
pusha
mov
ficoms
xlat
shlb
inc
iret
fxch
jle
arpl
aam
jl
push
sub
inc
lahf
aaa
movsl
push
mov
jne
cmpsl
fildl
pop
push
das
sub
pop
fwait
dec
jle
xchg
add
lret
lods
into
iret
and
mov
xlat
pop
fidivl
pusha
add
mov
jmp
hlt
stc
int
call
pop
pop
adc
jge
cmp
mov
out
call
test
push
cmp
sti
mov
outsl
xor
cmp
test
mov
outsl
sbb
aaa
inc
mov
pop
mov
movsl
cmp
dec
push
shll
int
dec
mov
inc
test
sub
stos
jmp
mov
or
mov
mov
adc
push
mov
divb
outsb
scas
push
in
ds
stos
dec
push
push
dec
jns
push
xchg
imul
add
dec
outsb
jbe
jp,pn
dec
inc
idiv
inc
sbb
jp
dec
out
adcb
dec
sar
mov
pop
js
cltd
cmp
frstor
cmp
or
shl
dec
mov
dec
inc
test
iret
xor
sbb
sub
dec
repz
loop
test
adcl
hlt
mov
push
lods
sahf
inc
adc
int
dec
mov
rcrl
dec
test
outsl
pop
inc
xor
ss
out
jno
push
ds
xor
inc
add
dec
ja
adc
cmp
mov
dec
inc
nop
xchg
and
dec
adc
sub
sub
push
lret
fstpl
dec
mov
lahf
fnstenv
call
cmpsb
jo
inc
daa
rcr
xor
dec
andl
dec
call
jp
mov
inc
inc
stc
pop
dec
push
mov
push
add
into
mov
test
int
or
adc
daa
iret
popl
jge
pop
inc
or
xchg
sahf
xor
cld
shr
int3
cmc
inc
sbb
add
cmp
rorl
adc
lahf
jl
dec
push
push
push
lods
inc
mov
or
jle
jno
push
call
test
or
fidivrs
push
push
mov
adc
pop
inc
mov
jle
sahf
lret
dec
stos
loop
xor
mov
sub
sbbl
test
mov
iret
cmpsl
mov
scas
dec
mov
scas
jmp
testb
movsb
sub
aas
lock
sarl
mov
mov
dec
shlb
scas
pop
out
gs
rcll
inc
hlt
adc
or
rcrb
movsb
dec
ljmp
cmp
imul
clc
mov
dec
cmpsb
mov
mov
jle
divb
mov
fwait
sbb
in
or
lds
fnstenv
dec
pop
out
scas
insb
dec
jns
sub
ret
test
sbb
and
xor
shlb
fmull
dec
insb
cmp
cmpsb
in
js
mov
pop
sub
setge
dec
jg
out
dec
mov
dec
iret
xchg
test
xchg
in
mov
push
pop
scas
jle
outsl
enter
int3
inc
xchg
jmp
sub
test
mov
push
flds
pusha
subl
sub
xchg
and
jnp
out
repnz
stos
dec
push
and
fwait
pop
repz
fmuls
rorl
leave
mov
dec
mov
in
jmp
push
push
sub
xor
add
xor
ffreep
aaa
inc
dec
fldenv
adc
jae
pop
pop
jmp
pushf
cmpsb
dec
enter
repz
sub
mov
imul
adc
add
out
cmc
mull
aas
xchg
mov
test
repnz
add
pop
dec
mov
cmp
into
adc
jno
jbe
rcl
out
hlt
push
cli
xchg
fisubs
dec
push
ss
into
gs
dec
sub
into
insl
cld
push
dec
popf
mov
es
insb
icebp
testl
adc
pop
xor
imul
inc
xlat
and
andl
repnz
mov
movsb
or
sub
mov
cmp
dec
cmp
cld
fs
mov
and
shrb
xchg
adc
test
push
pop
mov
cmp
dec
mov
test
cli
cmp
dec
pushf
add
jmp
daa
and
rcll
adc
jbe
dec
pushf
sti
xor
dec
pop
jne
into
cmp
test
rcrw
dec
inc
cmp
add
stos
out
lds
cmp
mov
jne
pop
cmp
xchg
clc
in
xor
and
mov
sti
fldenv
dec
rcll
fcomp
dec
mov
pop
je
dec
mov
lock
push
dec
adc
bound
push
adc
cli
dec
idivl
add
inc
in
sub
into
dec
adc
pop
mov
xor
lcall
sub
loop
lods
inc
lahf
into
push
dec
xor
sbb
dec
loop
xor
mov
out
bound
stc
mov
xor
and
dec
jns
lock
xlat
xchg
adc
dec
enter
imul
das
push
inc
push
test
jo
mov
xchg
dec
lret
cmp
or
or
insl
or
lods
xor
jge
xchg
dec
movsb
in
mov
pop
dec
pop
xor
inc
loopne
aaa
mov
pmulhuw
outsb
test
jo
iret
xchg
in
into
add
clc
jge
sub
aad
sbb
int
mov
incl
add
stos
push
xor
dec
xor
cltd
data16
dec
fcmovbe
lds
push
xchg
push
cmp
dec
cwtl
lds
mov
dec
outsb
popa
or
sbb
pop
scas
dec
inc
lret
mov
cmpsb
mov
mov
negb
bound
sahf
jle
jne
and
xor
popf
adc
pop
cmp
xchg
mov
lods
mov
push
pushf
push
mov
add
and
mov
pop
test
mov
stc
pop
pusha
dec
orb
jg
js
mov
out
sub
mov
dec
pop
pushf
sbb
pop
ds
xor
push
jle
dec
div
or
jmp
test
dec
stos
and
mov
fimull
sbb
xor
popf
cmp
pop
fs
push
fucomip
and
jle
and
popa
dec
xchg
jl
and
dec
test
xchg
repnz
je
adc
scas
call
aad
jle
sbb
fldt
xor
into
addr16
icebp
xchg
jbe
jbe
jle
or
iret
rol
lahf
jle
shlb
scas
popa
cmp
dec
mov
movsl
add
or
jle
push
pop
ud0
inc
inc
jg
mov
inc
inc
xchg
sbb
fcmove
imul
push
insb
and
fbstp
into
sub
imul
add
cmp
fsub
sub
cmp
stc
jle
add
inc
dec
jge
stos
lea
outsb
inc
pop
inc
xchg
jl
cwtl
mov
dec
jmp
mov
movsb
xor
mov
pandn
repnz
adc
mov
add
mov
test
pushf
or
fs
dec
call
jno
mov
data16
add
std
sbbb
xchg
mov
jbe
push
push
push
movb
cmpsb
fidivl
mov
test
outsb
sbb
and
push
and
scas
outsb
cmp
pop
lea
das
jbe
and
mov
add
mov
int
xor
outsb
xlat
lahf
dec
push
mov
inc
and
divl
sub
subl
ja
and
and
push
xor
push
in
movsb
xchg
jb
aas
xor
dec
mov
cwtl
jnp
jp
cmp
iret
testb
cmp
repnz
dec
adc
pop
and
pop
sub
cmp
repz
mov
jnp
inc
jo
mov
shrb
scas
pop
fiaddl
xchg
outsb
jp
cli
scas
addr16
xor
cmp
icebp
pop
add
int
neg
call
push
jge
sbb
cmpsl
stos
and
push
dec
push
jno
aam
test
dec
sub
data16
sub
dec
push
sbb
dec
sbb
xadd
pop
ljmp
movswl
add
dec
or
mov
xor
daa
jns
arpl
loopne
pop
jl
decb
aaa
rorb
push
cmp
dec
jg
xor
jnp
lods
ret
adc
or
inc
mov
inc
dec
int
and
push
mov
pop
mov
dec
hlt
in
in
out
inc
jne
mov
jnp
leave
out
xor
xchg
mov
cmpsl
dec
imul
lahf
pusha
jle
fs
sub
xchg
sub
xchg
adc
jg
mov
jl
mov
repnz
jp
add
cmp
sub
lea
sti
inc
loop
out
shlb
ja
jle
outsl
dec
insb
push
sub
shl
cmpsl
mov
inc
in
push
mov
mov
fiaddl
jl
push
mov
push
cmpsb
xchg
or
addr16
mov
iret
sbb
adc
jl
arpl
dec
scas
stc
popf
jge
xchg
flds
lods
ja
sub
aaa
push
dec
je
mov
add
fstpl
jle
in
dec
fisttps
cld
movsl
adc
imul
dec
popa
sbbl
cmp
dec
mov
aad
cmp
mov
dec
out
insl
scas
cmp
jnp
sub
dec
fmul
pop
int3
in
lret
mov
adc
mov
mov
nop
jmp
adc
inc
mov
pop
ds
out
mov
cltd
sar
pop
int3
jmp
out
hlt
xchg
lds
push
mov
sub
arpl
icebp
lea
pop
inc
shr
xlat
xchg
imul
cmp
mov
sub
cmp
pop
rolb
leave
lock
and
sub
sahf
mov
xor
xor
inc
jle
sub
xchg
movsb
inc
sbb
jg
pop
add
sub
push
xchg
jae
ss
pop
jl
jne
inc
loopne
push
js
pop
or
inc
ficomps
mov
loope
dec
insl
xor
cmp
add
lret
jp
int3
cmpb
jae
fwait
cmp
xchg
mov
dec
dec
lods
mov
insb
pusha
int3
cmp
js
stc
outsl
jle
dec
scas
pushf
fisubrl
push
inc
test
adc
mov
xor
popa
fnstcw
int
nop
mov
lods
adc
repz
adc
sub
mov
in
dec
aas
jno
dec
les
scas
jle
mov
push
ds
and
std
ret
je
and
shrl
aad
inc
mov
scas
imull
imul
cmpsl
push
sti
out
xchg
mov
pop
scas
cmp
fwait
ret
xor
inc
arpl
sub
int3
dec
jg
pop
and
and
cmp
pop
pop
cmp
int
stos
cmp
lods
ds
insb
sub
xchg
test
inc
pop
ljmp
std
neg
adc
dec
push
test
ficoms
sbb
cld
add
test
fidivrl
sub
add
dec
incl
js
inc
dec
je
jo
jb
repz
adc
lcall
and
push
sbb
les
sbb
lods
into
jmp
push
sbb
jle
mov
push
xor
cmpsl
outsb
and
push
mov
jge
icebp
inc
dec
mov
ret
notl
inc
push
mov
mov
pminsw
sarl
repz
cmp
mov
mov
lock
push
fs
dec
pusha
icebp
out
sbb
loop
loopne
fildl
adcl
scas
cltd
loope
inc
fdivl
mov
pop
in
inc
cld
sahf
mov
add
add
mov
cmp
insb
mov
mov
and
js
adc
arpl
aas
jg
push
loop
push
es
cmp
nop
pop
jne
stc
push
add
dec
dec
push
jns
fnstsw
hlt
scas
jp
rcl
test
ja
push
inc
scas
addr16
insb
inc
mov
push
das
push
addb
pop
imul
push
push
jb
xchg
mov
inc
or
cmpsl
cmp
mov
pop
popa
cltd
rorb
sub
cmpsb
jnp
in
orb
pop
dec
mov
xor
dec
pop
cmp
mov
mov
fisubl
adc
pushf
lods
in
fistpll
bound
loope
xchg
std
sub
dec
sub
cmp
rorl
adc
mov
iret
sbb
dec
xor
lods
ss
aas
sbb
testb
dec
insl
pop
pop
fwait
mov
xchg
xor
jnp
xor
sti
sub
cmp
xchg
iret
fmull
lret
jnp
iret
add
out
mov
cmpsb
dec
or
mov
sbb
inc
movsb
dec
pop
jmp
cld
out
repz
lret
jg
mov
sub
lret
scas
outsl
cmp
aad
cmpsb
push
cmp
pop
xchg
sbb
xchg
mov
js
mov
stos
dec
dec
jb
enter
jge
xchg
fs
cmc
lea
shll
dec
movsb
mov
pop
ds
push
cmc
jno
cmc
jnp
stos
jge
mov
int3
jg
jne
add
sbb
xor
fsubrl
sbb
sub
mov
shlb
push
fwait
xor
cmpsl
lods
jo
test
repz
mov
dec
ret
in
outsl
inc
mov
ret
out
data16
jns
mov
inc
mov
lock
sahf
mov
frstor
ficoml
loop
shrb
insb
cwtl
pop
out
sub
add
ja
ja
call
push
daa
fimuls
pop
dec
jle
negl
pop
pop
decb
loopne
lock
pop
adc
insb
mov
mov
ror
pop
jl
icebp
push
outsb
jbe
lods
dec
xchg
jle
aaa
es
add
shlb
xor
add
adc
jno
scas
fwait
mov
push
movsl
lahf
pop
xchg
out
jp
and
pop
ss
pop
cs
push
fstpl
push
bound
mov
pop
sub
cwtl
dec
movsb
in
adc
lret
pop
dec
dec
mov
mov
and
pop
pushf
fwait
adc
mov
push
mov
cld
ficomps
cmp
jp
outsb
push
push
movsl
and
push
int
divb
push
fs
movsl
cmpsb
ds
aas
dec
mov
inc
and
test
push
roll
ja
inc
outsl
mov
or
xor
jp
push
lods
push
gs
mov
sbb
jmp
nop
xchg
les
pop
jne
mov
outsb
sbb
dec
sub
mov
aaa
and
xor
leave
decb
dec
lods
jle
mov
dec
test
aaa
dec
pop
sarl
lods
push
dec
stos
jb
outsl
mov
fstpt
pushf
add
cmp
sub
decb
sbb
arpl
bound
dec
cmpsl
sub
mov
dec
outsl
and
shr
shll
sub
bound
enter
mov
mov
dec
or
cltd
idivb
flds
cmp
sub
dec
mov
sahf
insl
cmp
sub
fldpi
xor
ror
movsl
jmp
dec
xchg
std
sub
cmp
xor
add
dec
popf
adc
dec
out
jne
xchg
pop
dec
cli
jmp
popf
dec
adc
xchg
dec
pushf
into
aas
add
push
dec
setp
or
or
sub
negb
mov
dec
push
ljmp
dec
xchg
lahf
ret
cltd
outsb
lret
pop
out
add
leave
je
inc
repz
mov
pushl
out
and
push
lret
out
std
aas
test
mov
push
out
mov
dec
or
nop
or
icebp
ds
out
and
outsl
sbb
scas
nopl
scas
jle
fwait
outsb
scas
insb
jl
aaa
push
adc
inc
into
flds
rcll
push
mov
xor
daa
or
pop
iret
pop
dec
xchg
add
dec
sbb
push
inc
adc
dec
imul
push
or
jbe
dec
sbb
jmp
movsl
dec
cmp
andb
inc
insl
sbb
in
dec
dec
sub
inc
icebp
dec
fistl
jnp
mov
and
or
mov
dec
pop
insb
sub
and
cmp
dec
mov
mov
jecxz
pop
cmp
imul
sahf
inc
bndldx
lret
stc
out
ret
xchg
inc
pop
lock
mov
jmp
xor
dec
pusha
lods
pop
add
aad
fldcw
arpl
dec
data16
out
fwait
jno
stos
dec
dec
mov
jge
insb
dec
lret
out
inc
je
adc
cmp
push
adc
dec
jne
xchg
pop
scas
xchg
outsb
jge
lea
xor
push
dec
mov
mov
daa
adc
imul
pop
or
dec
xchg
sub
xor
and
iret
pop
cmp
rolb
shll
jo
ret
cs
mulb
sbbl
dec
ljmp
cmpb
dec
jns
pop
xchg
sbb
sub
addr16
xor
popa
mov
lea
sub
in
out
ds
or
das
sbb
jae
xor
add
mov
jno
sbb
add
into
rolb
out
sub
jo
js
cli
outsb
repnz
dec
jl
adc
dec
out
push
std
in
stos
sbb
aad
adc
mov
dec
dec
das
sub
pop
shrd
cmp
xchg
xlat
mov
mov
dec
dec
cli
gs
bound
and
xor
lock
sbb
and
outsb
cltd
cltd
rolb
cmp
push
mov
sub
into
rorb
shrl
test
pop
or
sub
jp
cli
out
aas
loopne
cmp
push
inc
inc
pusha
into
daa
jg
stos
dec
ror
ljmp
int3
dec
test
push
pop
stc
xor
adc
fcoml
fcomp
int3
outsb
sub
mov
fldl
dec
loopne
shlb
out
dec
pop
movsb
mov
push
jns
dec
cmp
sti
adc
clc
push
cmp
adc
jle
hlt
pop
pop
fidivrl
dec
or
idivb
xchg
rorb
sub
xor
sbb
nop
pop
xchg
add
das
inc
mov
dec
push
mov
push
mov
pop
or
aad
dec
ficoml
es
inc
movsl
jecxz
adc
lods
lahf
aas
icebp
outsb
xchg
fisttps
mov
cwtl
out
pop
dec
push
rclb
rcrl
popf
aad
pop
dec
roll
rcl
ret
mov
insl
cmpl
or
daa
rorl
fisttpl
jle
jo
in
ficoml
in
jecxz
dec
add
hlt
test
ret
lds
jecxz
enter
xor
push
out
aaa
out
repnz
insb
sub
dec
shl
cmc
sub
add
pop
test
sub
into
xchg
cs
and
lods
mov
add
fstpt
idivl
clc
pop
push
dec
idivl
push
xchg
mov
xchg
lcall
cmp
out
dec
pop
jl
cwtl
xlat
mov
insb
and
sub
je
out
aas
fdiv
sbbl
sbb
or
gs
xchg
xchg
sbb
cli
jmp
popa
pop
jle
in
inc
jl
mov
and
es
lahf
and
push
out
cmp
adc
mov
repnz
cmp
pop
dec
mov
mull
stos
and
outsb
pop
daa
mov
cli
mov
adc
push
fcmove
dec
jg
add
cld
adc
jge
dec
cmp
adc
enter
jl
mov
mov
cmpsl
xchg
aad
push
inc
aam
daa
lret
inc
imul
loopne
in
addr16
mov
ret
push
cmc
mov
cmpsl
push
shr
pop
and
sub
mulb
jae
sarl
shll
dec
dec
dec
xchg
sbb
mov
addr16
cmp
xchg
cltd
aad
loop
aaa
cmpsl
sub
loopne
into
jge
testb
dec
cli
dec
in
cmc
in
jne
dec
push
xor
int
sub
fisttpl
and
in
ret
pop
add
or
and
xor
dec
dec
mov
cmc
mov
icebp
fnstenv
pop
clc
das
arpl
xor
jb
inc
push
in
or
jl
dec
xor
aaa
mov
add
lcall
call
lods
into
lret
sbb
sahf
ljmp
sub
xchg
dec
inc
sub
add
push
outsb
outsl
shlb
leave
lahf
dec
movsb
mov
in
push
add
jg
sbb
inc
adc
cmp
xlat
in
mov
fmuls
leave
repnz
lcall
out
daa
sub
sarl
je
fists
dec
pop
cmpsb
xchg
testl
dec
inc
dec
cmp
dec
std
shll
xchg
addr16
push
fisttps
out
sahf
shrb
scas
maskmovq
testl
jle
popf
test
xchg
cs
rolb
daa
fsts
jle
xchg
sti
dec
pop
xlat
les
fidivrl
mov
shr
sub
lods
fidivs
mov
and
push
dec
pop
sub
mov
sbb
pop
xchg
scas
mov
pop
push
sbbb
cli
imul
xchg
cmp
pop
outsl
lcall
jle
xor
pop
xchg
movsl
jno
cs
jle
test
jg,pt
add
out
sbbb
shrb
daa
adc
mov
push
dec
jp
into
xchg
test
jl
jmp
repnz
jmp
sbb
popa
movl
clc
rcrb
aas
fdivs
add
in
iret
cmp
into
sahf
sub
stos
xchg
inc
cmp
sti
rcrl
aaa
xor
lods
fmuls
xchg
jns
pop
pop
dec
fwait
mov
js
imul
pop
and
mov
lahf
stos
sub
xor
inc
cmp
mov
int3
sbb
mov
movsl
and
iret
jle
test
mov
in
cmp
xchg
iret
cmp
fldcw
mov
dec
push
dec
punpcklbw
or
ret
cmp
cmpsl
popf
lret
pop
cmc
movsb
ljmp
pop
jbe
push
into
jmp
setge
xchg
jl
dec
int3
push
jg
push
jl
pop
or
inc
inc
mov
fcompl
push
stos
xlat
lahf
xlat
xchg
mov
enter
cs
vpmacssdqh
cmp
cmp
jle
movsl
inc
and
push
pop
pop
pop
mov
cmp
jle
popf
pushf
push
mov
mov
or
mov
jp
mov
jbe
nop
jne
jmp
lahf
mov
cltd
fcoms
mov
cmpsb
jae
pop
jle
fcompl
pop
loope
dec
mov
stos
or
cmpsb
jnp
inc
mov
leave
inc
xor
dec
fsub
inc
popf
dec
mov
ret
xlat
adc
loope
dec
mov
dec
dec
or
add
dec
or
adc
mov
jl
inc
push
out
lcall
inc
icebp
adc
push
lock
test
mov
pusha
mov
dec
mov
inc
cmp
dec
dec
jne
xor
stc
int3
adc
jno
mov
roll
dec
add
push
stos
sub
jle
pop
test
lods
push
mov
cmc
dec
and
ljmp
je
loope
repnz
sub
push
clc
out
pop
adc
scas
outsb
jmp
xchg
mov
pop
dec
dec
adc
adc
int
into
and
out
mov
push
scas
rorb
or
xor
dec
mov
aas
pushl
sub
les
dec
cmpsl
sub
cwtl
push
cmc
dec
mov
xor
sub
inc
pop
xlat
jno
imul
push
xor
clc
dec
stos
xchg
hlt
dec
mov
and
cmpl
jge
jmp
and
gs
and
sbb
add
in
push
lahf
adc
ja
orb
lods
int3
inc
jo
sub
in
cmp
xor
rol
js
or
loop
add
hlt
xor
in
dec
xchg
flds
jle
les
push
or
fldenv
icebp
push
sarb
xchg
lret
nop
push
outsb
aas
stc
jle
divl
pusha
imul
jg
idiv
mov
pop
xchg
sub
xchg
daa
pop
movsb
popf
mov
fldt
lahf
lea
add
jp
mov
mov
mov
and
cmp
push
popf
cmpsb
jbe
fwait
imulb
into
dec
sbb
test
ss
xor
icebp
mov
cmp
inc
nop
repz
icebp
cmc
out
stc
out
xor
mov
push
mov
xchg
popf
mov
int3
add
sbb
or
sbb
dec
cs
addl
xchg
mov
test
jle
push
dec
sbb
add
test
xchg
push
in
lea
push
into
lahf
push
imul
push
imul
je
ds
xchg
jle
xlat
pop
mov
cmp
xor
dec
jne
adc
mov
movsl
addr16
push
dec
mov
mov
fs
insb
nop
outsb
jp
mov
aas
push
sbbb
inc
or
scas
inc
ds
dec
ljmp
add
stos
out
pop
ret
push
cltd
dec
cmpsl
sub
je
pushf
sbb
pop
mov
js
dec
jae
ja
in
aas
dec
add
adc
mov
adc
lods
sbb
jns
jp
int3
dec
jle
lods
outsb
imul
rorb
mov
mov
or
mov
lds
mov
dec
outsb
cmp
dec
repz
cs
into
jnp
add
ret
inc
add
lds
stos
add
int3
dec
pushf
sub
lahf
pusha
loop
push
dec
pop
jecxz
lcall
adc
out
xor
xor
dec
dec
mov
add
mov
sbb
repz
mov
cmp
xor
jecxz
sub
fisttps
adc
xor
lcall
dec
outsb
cltd
dec
imul
mov
push
xchg
movsb
mov
dec
icebp
push
jo
jle
dec
mov
ja
mov
sahf
mov
mov
and
notb
and
jno
inc
push
in
shrl
dec
jg
daa
repnz
lret
jmp
jnp
inc
adc
lret
scas
cmp
add
add
mov
adc
fimull
cs
js
mov
dec
inc
lds
push
imul
into
aad
jg
jmp
dec
sbb
test
dec
dec
fnsave
jo
sub
es
xchg
dec
xchg
adc
divb
ror
mov
ficoms
dec
outsb
negb
pop
cs
fstps
in
dec
icebp
lds
jge
stos
imul
xchg
dec
push
nop
ret
xchg
mov
mov
popa
mov
sbb
shrb
xchg
mov
fstpl
popa
cmp
insb
repnz
fmull
sub
fldl
dec
push
rorl
and
stc
dec
jl
dec
push
pand
je
inc
dec
push
hlt
jle
dec
jp
fcomps
cmp
loop
and
lods
sub
jle
cld
dec
cmp
sub
mov
cs
dec
adc
mov
lcall
or
test
dec
enter
jb
cmpsb
sub
cmpsl
add
rcll
lock
mov
mov
insb
xor
push
leave
pop
adc
fstp
clc
fisttpl
inc
sub
roll
dec
xchg
mov
jae
jbe
cwtl
sub
push
fimull
outsl
inc
cmp
dec
div
mov
out
or
adc
into
popa
mov
jl
xchg
mov
insl
xor
or
int3
les
xchg
call
cmp
leave
push
sbb
mov
dec
js
lods
stc
add
mov
or
cmp
or
lret
mov
ljmp
cmp
sbb
cmp
jge
pop
cs
or
lret
gs
xchg
push
xchg
decl
fnstenv
movsl
dec
aam
mov
fisubs
xor
inc
mov
aas
dec
ja
pop
jecxz
dec
pushf
outsb
insl
dec
mov
inc
pop
adc
fcomi
pop
into
sub
and
push
dec
mov
add
clc
cli
rorl
sahf
dec
es
movsb
mov
dec
rorb
cmpsl
das
inc
mov
test
xchg
dec
orl
incb
mov
xor
nop
mov
dec
adc
jle
or
out
sahf
jno
push
popa
xor
push
stc
jne
dec
testl
mov
dec
xor
neg
or
push
aad
or
out
add
mov
sti
jns
aaa
cmp
adc
bound
cmc
mov
test
xchg
leave
pop
cmpsl
and
and
ret
ja
push
jno
mov
xchg
inc
cmpsb
dec
push
aad
sbb
insb
and
cmp
sub
fisubrl
dec
cmp
sbb
mov
movsl
int3
das
out
outsl
imul
jnp
iret
adc
decb
xor
sbb
sub
roll
cwtl
pushf
sahf
and
xor
push
and
push
rorl
pop
xor
xor
or
xchg
loope
dec
cmp
in
addr16
cmp
mov
inc
dec
add
sub
std
mov
js
inc
push
incl
stc
pop
dec
xchg
lcall
push
mov
into
mov
stos
mov
add
fldl2t
dec
cmp
in
jecxz
mov
mov
scas
jno
sub
push
sub
mov
repnz
mov
mov
inc
dec
pop
dec
dec
and
cs
stos
pushf
xor
xor
xchg
ror
xor
jo
aaa
dec
das
push
cmp
insb
mov
jns
leave
addr16
shrb
xchg
dec
popa
add
push
and
dec
push
in
cld
aam
dec
push
xor
inc
dec
mov
jg
and
aam
adc
add
mov
pushf
stc
inc
pop
fildll
sbb
push
push
fisttpl
ds
mov
inc
jns
lods
lret
nop
outsl
xchg
xchg
dec
fst
add
aad
ja
add
dec
cli
mov
and
fisubs
push
arpl
pop
pop
dec
push
sub
fs
sahf
adc
dec
out
pop
arpl
adc
pop
dec
stc
cmc
cmp
add
dec
jae
cmpsl
add
cmp
dec
fldcw
or
adc
repnz
sbb
or
mov
add
or
mov
adc
cs
dec
and
push
jle
pop
inc
fstps
push
mull
xchg
dec
mov
ds
inc
cmp
jp
inc
cmp
outsl
jnp
rorl
mov
test
aaa
lds
mov
jle
xchg
scas
sub
push
mov
das
jle
lcall
push
cs
jp
popa
dec
aad
add
repz
push
push
das
push
notl
jle
stc
push
ret
dec
ds
and
jo
out
test
dec
cmp
jle
repnz
shrb
outsl
aas
and
dec
mov
push
add
jmp
lds
push
mov
mov
cltd
xchg
cmpsb
ret
jle
test
sbb
insl
nop
mov
push
adc
dec
ja
cmp
fistps
sub
loop
xor
mov
dec
aam
into
inc
shll
push
lods
loop
mov
arpl
lahf
jl
jge
add
outsb
adc
push
out
mov
jle
pushf
push
gs
inc
loopne
mov
xchg
jge
jle
roll
mov
nop
dec
inc
bound
xchg
mov
sahf
leave
adc
call
jnp
ljmp
js
cmpsb
dec
test
lahf
add
clc
fs
adc
xlat
dec
rorl
pusha
lea
mov
hlt
push
sub
insl
sub
adc
ljmp
ds
pushf
xchg
rcpps
mov
int3
mov
dec
testl
pusha
rol
lret
ds
mov
add
dec
daa
rolb
dec
lcall
mov
xor
fdivp
dec
jb
daa
mov
mov
ja
ss
rcrb
scas
ror
dec
push
cmp
mov
popa
cs
inc
dec
jno
insl
sbb
popa
nop
dec
dec
xchg
jg
cmp
push
xchg
jle
fwait
outsb
adcl
rorl
push
and
fnstsw
in
icebp
push
jbe
enter
xor
fbstp
repz
add
pop
cwtl
dec
jle
jp
push
das
xchg
xor
xor
out
jl
cmp
mov
into
mov
jle
andb
xchg
push
adc
repz
adc
xor
jae
cld
leave
add
icebp
dec
jo
push
xchg
aam
sub
pop
lock
data16
or
fidivrl
jl
cmp
out
ds
aam
or
push
and
aaa
outsb
mov
xchg
dec
lock
mov
loopne
inc
xor
push
jmp
dec
repz
ljmp
enter
or
arpl
outsl
mov
loope
inc
mov
aad
fwait
aas
and
xchg
adc
mov
mov
aad
lcall
lods
adc
add
pushf
clc
xchg
jmp
dec
or
and
and
ret
inc
cs
fistpll
dec
sub
adc
add
dec
inc
inc
out
push
bnd
mul
loope
dec
bound
pop
adc
jecxz
jl
and
xchg
clc
pop
std
pop
dec
in
mov
dec
hlt
out
jae
daa
push
lea
addr16
rcll
dec
mov
fdivr
dec
mov
divl
cmp
imul
xchg
lret
xchg
in
pop
or
insl
je
pushl
dec
add
aas
push
into
xchg
repnz
dec
les
push
pop
xchg
dec
stos
emms
sub
adc
pop
dec
pusha
mov
adcb
xor
mov
mov
xor
test
sub
ret
xor
push
xchg
cmp
jl
sub
pop
dec
rorb
negl
out
pop
or
test
sub
dec
adcl
add
and
loop
jle
jnp
test
dec
dec
xchg
xchg
cwtl
inc
jo
xor
dec
sbb
shlb
in
dec
xchg
mov
dec
or
cltd
mov
inc
inc
pop
sarb
xchg
cmp
cmpl
je
testl
out
mov
add
pop
inc
inc
sub
mov
pop
dec
nopl
xor
inc
aas
pop
xchg
fadd
adc
or
dec
into
push
pop
xor
dec
dec
push
inc
popa
in
fstp
pop
inc
das
adc
stc
filds
dec
mov
out
lahf
jb
mov
xchg
mov
adc
xchg
cmp
call
adc
loopne
lods
mov
imul
stos
std
daa
sub
dec
test
push
test
inc
sbb
adc
mov
push
dec
stos
fs
xor
xlat
icebp
xor
shl
in
lods
stc
xchg
add
cltd
adcl
xor
outsb
mov
inc
iret
dec
stos
jg
or
push
hlt
xor
out
or
pop
or
inc
test
push
dec
inc
or
data16
ret
shll
mov
mov
dec
ljmp
les
adc
pop
push
push
or
leave
lods
in
push
out
pop
jbe
push
dec
dec
jp
jl
add
pop
push
dec
dec
cltd
xchg
fs
and
xorb
jge
mov
jp
fcmovu
xor
cmp
pop
cli
outsl
dec
fiaddl
sbb
addb
dec
test
das
push
jbe
add
mov
fisttpll
or
mov
lret
in
jb
mov
dec
push
inc
sub
add
lret
pop
inc
das
and
push
mov
mov
xchg
push
mov
outsl
xchg
frndint
fimuls
xchg
sbb
shrl
loop
jl
arpl
sbbb
sarb
mov
ret
lahf
and
lret
cltd
jnp
xchg
jo
xor
xchg
cmpsb
dec
cmpsl
xor
pop
and
xor
ljmp
push
push
mov
leave
jl
inc
cmp
lds
mov
mov
divb
lcall
hlt
inc
jle
jae
mov
fdivrl
int3
xor
push
mov
xor
inc
mov
in
jo
popf
not
mov
push
fidivrs
mov
inc
push
xchg
fs
cmp
push
jle
or
inc
movsl
js
xchg
bndstx
out
or
dec
stos
jb
push
lock
fildl
push
sbb
sub
inc
jg
in
sahf
movsl
sbb
inc
mov
dec
or
cmc
pop
or
jle
pop
in
sbb
cmp
xor
insl
fs
jmp
pushf
stos
jb
or
xor
xchg
pop
xchg
int3
jp
xlat
inc
jbe
flds
or
mov
es
xchg
lret
cs
jl
mov
sbb
cmp
adc
cli
ja
inc
dec
jle
stos
insb
sbb
jle
inc
jl
pushf
dec
lcall
in
addps
outsl
lret
push
sub
cmpsb
and
int
jle
or
add
insl
push
or
dec
cmpsb
mov
jl
jb
xchg
popa
mov
in
arpl
add
mov
jbe
adc
pop
sub
and
dec
rcr
dec
push
insb
push
es
scas
cmp
mov
dec
fmull
call
sahf
dec
mov
jno,pt
xchg
inc
xchg
cmovno
fadds
push
pop
dec
xchg
jle
movsb
arpl
sub
jb
jnp
cmp
loope
mov
mov
jl
test
enter
sub
pop
inc
mov
xor
gs
icebp
addl
out
out
es
lea
mov
mov
sbb
and
mov
movsl
xor
jge
fisubrl
cmp
xchg
ficoms
nopl
or
push
mov
adc
aaa
rclb
das
stos
cmpsl
xor
cmp
add
jbe
pop
arpl
into
repz
cld
xor
out
sub
jle
in
mov
movsl
mov
jl
rclb
add
xchg
dec
andl
and
jb
push
mov
or
jl
jno
push
test
adc
xor
loop
pop
popf
repz
and
mov
add
xor
lahf
xchg
sbb
dec
stos
pushf
xchg
jle
xor
xor
aad
adc
int
lods
mov
fwait
shlb
test
insb
cmp
cli
inc
jl
mov
gs
mov
add
mov
fidivl
test
mov
sub
and
dec
mov
inc
and
cmp
pop
andl
les
pop
fisttps
ret
and
dec
insb
sub
dec
loopne
pop
mov
jp
dec
jne
sub
imul
dec
icebp
clc
push
dec
iret
cmp
push
pop
scas
cmpsb
add
into
inc
loopne
andb
add
mov
mov
scas
dec
mov
and
jnp
cmp
mov
sbb
call
dec
scas
add
inc
adc
fcom
dec
daa
adc
dec
ja
lock
mov
inc
insb
add
notl
inc
mov
subb
cmovg
xchg
std
xlat
mov
dec
or
gs
fbld
dec
mov
mov
mov
cs
pop
lcall
mov
sbb
movl
xchg
or
jno
add
jle
inc
insl
mov
add
enter
insb
push
jle
push
movsl
je,pn
push
cmc
cmp
pop
mov
pushf
sub
xchg
push
in
cmp
xor
push
mov
jae
mov
inc
lcall
stos
rcl
sbb
pop
addr16
inc
cmpsb
out
sbb
test
mov
and
sbb
cs
cmpsb
enter
sahf
test
cmp
fwait
decl
xchg
pusha
jae
pop
mov
cs
pop
mov
dec
movsl
xchg
les
clc
or
xor
ljmp
and
out
pop
inc
pop
jl
push
in
or
leave
fstpl
push
hlt
shl
jnp
imul
das
mov
xor
push
dec
mov
ret
pop
mov
pop
das
cmp
add
fwait
mov
dec
cli
pop
sar
into
push
loop
dec
scas
js
inc
insl
jg
cs
rol
popfw
arpl
sahf
dec
cmpsb
inc
xchg
inc
sub
movsl
and
mov
clc
adc
cld
mov
mov
push
cltd
daa
mov
add
add
sub
cmp
dec
push
vpavgb
mov
xor
pop
dec
pop
out
arpl
jle
stos
test
rcl
adc
outsb
jmp
incl
or
mov
cmpsb
jp
testl
stos
cmp
lock
adcl
and
inc
loopne
addl
jo
inc
out
shrl
test
test
push
cmp
aaa
or
cmp
xlat
daa
add
sub
sbbb
jnp
and
shl
cmp
iret
fimuls
arpl
xor
mov
adc
cmp
scas
jl
sahf
data16
mov
jg
inc
cwtl
sbb
mov
cmc
fwait
cmp
jmp
fidivs
dec
cs
jge
cmpsl
aaa
int3
mov
loope
movd
xchg
mov
js
jbe
sahf
or
rorb
add
cmp
pop
mov
pop
fs
dec
xchg
cmpb
jno
add
or
arpl
push
pop
sub
cmp
loop
lds
fildl
dec
jl
aas
in
test
inc
rclb
add
xchg
sbb
and
dec
or
xrelease
popf
inc
sbb
cmp
dec
fbld
outsl
in
xchg
notl
cmp
dec
lock
push
dec
pop
aam
jle
fisubl
or
inc
jnp
or
add
dec
out
or
call
dec
add
popa
mov
dec
xor
push
mov
sbb
cmpsl
xor
scas
addr16
add
sbb
xor
sarl
add
dec
cmc
pop
mov
stos
aaa
push
rorb
arpl
xchg
dec
dec
int
fsubl
sbb
dec
loope
pop
mov
inc
xchg
inc
pop
push
fildll
cltd
jmp
addb
add
inc
adc
xchg
and
add
js
push
inc
adc
sarl
inc
xor
push
sub
bound
aas
jns
std
sti
fwait
sub
inc
pusha
aam
push
popa
mov
das
jns
xchg
pop
in
pop
cmp
out
testl
aam
movsl
adc
pop
lock
xchg
cmp
add
or
int
movsb
add
mov
xchg
inc
iret
and
cs
sarb
aas
cmp
sub
jns
shrb
sahf
std
jl
mov
aam
shlb
hlt
orl
push
mov
pop
fs
jno
dec
dec
insb
sbb
mov
cmp
sahf
push
popa
dec
jmp
out
ss
sbb
push
fnsave
xor
adc
pusha
sub
fs
mov
iret
adc
cmp
cmp
push
sub
push
sub
inc
xor
inc
daa
sbb
sub
sub
in
es
dec
mov
fcmovnb
fnop
vmread
arpl
mov
jle
in
mov
xchg
imul
cli
sub
imul
stos
cmp
xchg
test
push
and
jl,pn
push
iret
ds
jno
movsb
inc
xchg
popa
bound
sbb
sbb
out
js
add
mov
inc
xor
pop
shrb
iret
push
adc
insl
lods
xchg
xlat
pop
pop
lea
movsb
orl
pop
dec
inc
push
lods
inc
stos
mull
xchg
mov
jg
xor
pushf
pop
das
pusha
or
fs
pop
jle
jb
mov
pushf
mov
jl
std
not
add
rcll
outsb
cmc
push
inc
inc
aad
sub
jmp
jl
pop
fmuls
mov
mov
fiaddl
sub
cli
stos
jmp
xlat
adc
inc
sarb
iret
leave
mov
inc
xchg
mov
dec
jle
movsb
mov
or
dec
jl
lods
and
or
dec
fsts
cmp
dec
pop
push
mov
and
stc
lret
lret
pop
jle
mov
ljmp
push
stc
pop
nop
rorl
jle
sti
jae
aam
scas
cmp
xchg
lret
jnp
fs
jge
pop
mov
sub
addps
decl
mov
push
addr16
xor
sbb
mov
icebp
jbe
inc
ficoms
clc
pushf
pop
std
cld
out
lahf
mov
lods
and
sub
push
jo
cmp
test
cmp
pop
pop
add
cmpsl
cmp
shll
inc
cmp
stos
add
cwtl
pop
das
dec
xor
sub
dec
xor
aad
mov
push
sub
add
gs
daa
es
in
add
dec
push
icebp
jmp
cmp
sub
cmp
inc
loope
adc
in
test
inc
das
cs
and
icebp
outsb
fisttpll
jbe
push
sub
data16
mov
mov
mov
push
cmp
pushf
jbe
das
cmp
ja,pt
dec
xlat
dec
movsl
dec
fcomps
enter
pusha
sub
fs
enter
std
popf
mov
and
aad
dec
adc
cwtl
xchg
inc
sub
out
fwait
jbe
dec
add
shrl
and
dec
xchg
xor
mov
inc
sahf
rol
dec
adc
add
push
push
mov
adc
pop
pop
push
clc
mov
movsl
into
lret
movsb
cmp
dec
sub
in
add
faddl
aam
movsb
sbb
insl
cwtl
dec
loop
gs
arpl
out
mov
mov
fildll
dec
sahf
jmp
xorb
fimuls
test
dec
out
shll
sti
shll
ja
and
xchg
divb
or
pop
scas
loop
rcrl
test
mov
sub
or
mov
mov
aaa
push
sbb
out
pop
sub
or
mov
ret
pop
cmp
fs
mov
xchg
das
mov
out
push
mov
into
cltd
push
out
stos
pop
cmp
and
movsb
popf
icebp
int
pop
leave
add
lret
test
mov
adcl
pop
adc
dec
mov
mov
dec
pop
in
add
cmp
push
add
int3
mov
jl
and
inc
inc
mov
jne
fbld
addr16
xor
jg
out
add
dec
sahf
push
xchg
pop
cmp
data16
and
dec
jg
mov
es
shlb
test
mov
jne
cmp
cmpsb
shll
inc
js
in
popf
leave
pop
das
stos
dec
pop
mov
xor
pop
xor
insb
jecxz
dec
dec
mov
aaa
jg
jb
jmp
bswap
pop
inc
pop
pop
push
xlat
iret
jg
adc
mov
mov
jl
add
pop
sub
in
outsl
sbb
sbb
inc
add
fs
add
movsb
jl
aad
lds
push
neg
push
add
or
push
fcomps
jo
jecxz
dec
and
fdivs
add
sub
iret
js
sahf
inc
lret
sub
lods
test
les
mov
jle
out
rcr
enter
inc
inc
jle
insb
test
sub
cld
xor
hlt
lcall
aaa
inc
lret
and
push
das
aaa
jl
lahf
mov
jp
inc
dec
push
mov
jmp
mov
gs
add
dec
in
nop
or
pop
repnz
fmul
std
lret
outsl
push
loope
or
mov
std
loop
lret
gs
cmp
pop
divl
mov
cmc
ja
sub
pop
jl
dec
cmp
xchg
and
inc
sbb
xchg
pop
scas
ss
das
lcall
or
ret
add
adc
ficompl
orl
fimuls
push
lahf
xchg
dec
pop
jg
jae
sub
popa
outsl
dec
call
mov
cmp
sbb
lods
jb
cmp
movsl
rcpps
test
stos
pop
jb
in
fmuls
dec
mov
lret
sub
mov
inc
and
scas
outsb
add
decb
scas
jae
lahf
shll
inc
dec
hlt
inc
pop
xchg
nop
enter
inc
je
lahf
sub
ffreep
push
inc
fistpll
out
mov
dec
mov
movsl
push
dec
and
xchg
or
push
dec
xor
mov
dec
call
mov
xor
jbe
jl
adc
sub
popa
mov
dec
mov
pop
dec
inc
sbb
repz
stos
test
scas
out
dec
xor
xchg
jnp
push
loop
dec
xlat
jne
sahf
add
dec
cmp
push
ficomps
test
pop
sub
cmp
push
dec
xor
popf
sbbb
shrl
les
dec
dec
es
fmull
inc
ja
adc
jae
idivl
or
icebp
jl
cmp
out
add
in
popf
incl
int3
les
ljmp
push
mov
aam
fnstcw
sbb
icebp
mov
pop
mov
fbstp
out
insb
mov
faddp
stos
adc
repnz
sub
xchg
jo
lahf
aaa
dec
push
dec
iret
sub
pop
jp
addr16
addr16
sub
jle
sub
and
jmp
lret
test
dec
jle
out
fs
lret
mov
jae
pop
jl
idivb
test
or
sbb
insb
fldenv
dec
or
add
cmp
jmp
cmpsl
jo
dec
loopne
xorb
js
pop
dec
jecxz
adc
sbb
or
dec
jnp
or
cmp
xchg
lret
cld
stos
push
nop
and
cmc
dec
adc
push
or
fimull
cmp
xchg
ss
dec
stos
ja
imul
mov
pop
cli
xor
outsl
cld
subb
xchg
dec
push
nop
pop
sub
dec
mov
jbe
fimuls
pop
xchg
pop
imul
fcomps
cmp
inc
sub
mov
sbbl
sub
pop
popf
scas
mov
cltd
push
fwait
xchg
and
lret
xchg
sahf
test
shlb
or
sbb
lods
stos
pop
iret
stos
stos
lcall
jbe
mov
popa
mov
pop
dec
mov
cmp
cmp
pop
jl
loope
jmp
dec
sbb
iret
arpl
loopne
sahf
iret
jg
xchg
jae
dec
dec
inc
das
mov
adc
inc
add
scas
insb
mov
xor
ss
xor
inc
outsl
cmp
loop
xchg
ds
sub
push
js
xchg
shr
and
push
push
adc
cs
push
or
pushf
inc
jg
int3
mov
data16
lret
sbb
mov
jle
roll
xor
pop
aad
push
inc
sahf
dec
sahf
mov
in
ja
mov
daa
repnz
pop
cmc
pop
sbb
xor
fnstcw
scas
mov
cmp
and
loopne
inc
sub
das
shlb
jle,pn
push
popl
jne
dec
jmp
sub
loopne
enter
mov
mov
dec
inc
popf
jle
dec
jnp
cmovne
push
xchg
push
dec
push
test
xor
gs
sub
int3
xchg
cltd
mov
loopne
mov
cmp
gs
notb
push
call
cmpsb
adc
sub
enter
xor
lcall
aaa
movsl
lcall
push
pushf
scas
jbe
je
push
mov
or
lret
push
and
push
cmp
pusha
and
dec
test
jle
arpl
cmp
pushf
mov
stos
push
clc
mov
aaa
sub
sub
je
fld
imul
mov
mov
scas
sbb
cmc
sub
scas
jge
shr
test
inc
mov
mov
lods
pop
movsl
jne
jae
and
lea
dec
je
or
dec
imul
cmpsl
adc
out
dec
fimuls
ja
mov
shl
repz
cmc
stos
orl
pop
xchg
loopne
test
ret
push
jne
rorl
lcall
std
dec
loop
sub
popa
lahf
and
dec
sub
cwtl
andb
pop
dec
cmpsl
rorl
aad
mov
js
int
jge
inc
icebp
and
scas
and
add
test
aad
movsb
iret
push
addl
xlat
dec
lcall
adc
push
outsl
adc
in
fbld
jp
pop
xor
stos
aaa
add
add
hlt
xchg
sub
cli
push
mov
mov
cs
add
dec
ja
fistpl
jl
dec
mov
mov
pop
clc
push
mov
xchg
mov
sub
hlt
movsb
xlat
movsb
jecxz
mov
sbb
xor
jl
repnz
stos
xor
mov
sbb
cltd
push
pop
xchg
mov
into
js
inc
mov
add
mov
jmp
popf
jnp
inc
negl
cmp
ds
pop
cs
cmp
imul
jo
pop
incl
pusha
test
iret
xor
mov
subl
test
push
mov
jns
lods
lahf
out
sahf
jg
push
out
aas
enter
or
push
mov
fmull
inc
adc
mov
sbb
jl
push
into
cli
lds
or
dec
adc
dec
pop
enter
pop
jo
cli
jg
dec
iret
sbb
pop
mov
cmpsl
scas
dec
sbb
adc
repnz
ljmp
mov
and
sbb
arpl
dec
mov
pop
ret
fiaddl
mov
add
imul
jnp
xor
xchg
sub
jne
add
or
dec
add
xor
rclb
push
cmpsb
dec
and
fs
add
mov
test
outsb
dec
nop
test
and
mov
push
mov
or
dec
or
fs
je
dec
test
imul
fs
sbbl
dec
hlt
pop
dec
cmpl
dec
fs
lds
scas
inc
stos
pushf
repz
dec
out
xor
mov
aad
cmpsl
stos
sahf
and
push
xor
push
enter
fstpl
scas
cmp
pushf
pop
jle
aad
adc
dec
push
les
popaw
pop
dec
sub
in
dec
fcoml
sub
outsl
xchg
mov
push
cld
adc
cmp
mov
dec
popa
cli
cmp
adc
dec
mov
loope
dec
or
jl
push
cli
dec
cld
loopne
sub
daa
push
dec
shll
shlb
out
mov
xor
jnp
sbb
cmpsb
push
movlps
mov
addr16
stos
ja
ret
xchg
lcall
dec
or
daa
movsb
fisttpll
stos
xlat
adc
orb
sbb
dec
loop
push
adc
aad
frstor
push
rorl
add
insl
cld
testb
dec
rcr
lods
xor
dec
jb
fcoml
fists
or
mov
scas
lahf
or
sub
mov
and
je
divb
std
pop
xchg
das
xor
mov
fwait
inc
cmc
inc
outsb
icebp
ss
sbb
sub
pop
dec
dec
push
mov
pop
dec
out
dec
outsl
cmp
jne
mov
int
sub
pusha
dec
sub
sbb
sti
dec
pop
sub
cltd
sbb
repz
xor
fcmovbe
arpl
pop
and
adc
sbb
scas
pop
dec
call
cmp
mov
push
push
movsl
mov
fiaddl
es
dec
mov
testl
mov
add
aaa
int
fidivrs
cmpsb
sub
dec
push
in
mov
mov
lret
xor
dec
mov
pop
hlt
jp
ja
rcrl
popl
mov
add
repnz
dec
adc
xor
mov
mov
orb
dec
stc
mov
inc
dec
das
push
test
fdivrs
out
or
bnd
and
jle
fimuls
jle
adc
adc
xchg
and
pop
mov
dec
stos
enter
ds
arpl
jb
sub
dec
mov
nop
mov
dec
sbb
and
dec
xor
mov
imul
es
cwtl
dec
xchg
dec
imul
movsl
dec
arpl
out
shrl
ret
lret
das
cmp
pushf
into
shll
dec
or
andb
fdivr
mov
sub
jp
dec
pusha
imul
stos
jecxz
mov
xlat
int3
inc
dec
aas
in
in
cltd
mov
mov
stos
dec
jbe
gs
xor
lret
ljmp
jl
push
dec
lea
out
fidivrs
mov
lcall
bound
mov
xchg
rolb
aad
loop
push
movsb
add
nop
outsl
inc
pop
iret
dec
in
ljmp
andb
jbe
dec
loopne
jg
xor
mov
outsl
dec
cmp
bound
lock
gs
dec
push
pop
sbb
inc
xchg
jge
mov
adc
push
inc
fwait
aas
sbb
mov
push
inc
mov
pop
notb
xor
xor
pop
mov
xor
aas
jecxz
mov
adc
push
pop
cli
fldt
pusha
out
movsl
xchg
add
ret
mov
daa
push
xorl
dec
jnp
dec
pop
gs
out
cmpsl
pop
dec
adc
mov
dec
ljmp
lods
dec
ret
addr16
push
mov
add
adc
aas
xchg
mov
and
pop
cwtl
and
dec
rcrl
and
andb
mov
xor
ljmp
dec
cmpl
and
jnp
jo
sbbb
cld
dec
lret
xor
daa
xor
xor
pop
js
into
retw
std
out
inc
jb
clc
mov
jle
push
cltd
dec
icebp
adc
addb
push
jns
rorl
lock
outsl
aam
xor
dec
imul
mov
cmpsb
leave
mov
dec
sti
xchg
cmpxchg
pop
cs
xchg
add
iret
fs
orl
pop
inc
outsb
cmpsb
dec
xchg
inc
mov
incl
or
push
dec
push
jp
clc
pop
test
sbb
and
nop
ss
andb
dec
mov
int3
cwtl
lret
dec
jp
jbe
pop
dec
pop
mov
sbb
mov
and
mov
pop
repz
out
jge
push
fimuls
jne
push
movsl
gs
inc
shrl
jecxz
xchg
mov
fists
dec
dec
movsb
push
sbbl
sub
hlt
outsl
bound
mov
dec
cmp
out
xchg
subl
jp
dec
cmpsl
mov
jbe
inc
pop
hlt
fs
jns
mov
out
mov
insl
dec
fisubrl
dec
sub
fistpll
roll
aaa
mov
cmpl
push
pop
xor
xchg
and
mov
iret
lret
aam
in
and
xchg
pop
mov
xlat
dec
sbb
pop
fidivl
mov
ja
pop
mov
xor
mov
loop
sub
push
icebp
jle
xor
inc
rolb
int
cmc
or
into
jge
in
mov
jo
mov
mov
psrlw
cmp
push
add
gs
mov
dec
dec
jle
pop
cmpb
mov
or
pop
push
into
add
cs
fsubp
subb
cld
out
or
jg
cmp
movsl
jg
fwait
cmp
push
mov
jge
aaa
cmp
ja
repz
in
xchg
mov
shr
cli
mov
adc
jge
dec
arpl
dec
inc
dec
sbb
hlt
jmp
sub
sti
fs
cli
sub
mov
dec
adc
sarb
dec
daa
jb
mov
inc
xchg
add
xlat
mov
in
mov
stos
mov
dec
sbb
pop
pop
aad
mov
leave
dec
sub
cli
inc
mov
jle
mov
scas
lcall
sbb
push
jg
dec
push
repnz
cld
ret
pop
inc
dec
stos
adc
lods
mov
rorb
mull
daa
dec
fiadds
outsb
insb
imul
out
mov
es
mov
js
mov
inc
xchg
jnp
mov
mov
mov
lret
jl
sub
mov
insb
dec
cmpsb
inc
mov
mov
inc
icebp
dec
inc
dec
pop
push
xchg
push
mov
mov
sbb
dec
daa
rorb
inc
xor
dec
out
jmp
je
adc
cmp
and
fldcw
cmpl
push
jno
stc
xor
xor
cltd
adc
in
popf
cmp
sahf
push
dec
xor
lea
loop
dec
mov
or
test
sti
dec
out
or
frstor
dec
jp
sbb
outsb
call
repnz
mov
ljmp
pop
add
and
rcll
cmp
aad
in
xor
adc
sbb
inc
dec
or
inc
adc
ror
movsb
repz
dec
popfw
out
idivb
xlat
mov
inc
jl
cmp
mov
data16
int3
push
add
aas
mov
xchg
push
sbb
lret
into
xchg
mov
or
ja
sub
aas
stc
jl
int
dec
jecxz
test
sub
leave
out
out
pop
xlat
pop
mov
push
lds
shr
dec
stos
gs
add
dec
mov
dec
push
cmp
dec
lret
movsl
imulb
popf
dec
dec
repnz
mov
inc
out
sub
xchg
mov
dec
sub
push
mov
and
xchg
adc
bound
ljmp
jo
lods
insb
dec
dec
out
xchg
pusha
into
or
test
addb
pop
xchg
icebp
gs
jbe
je
mov
adc
fmull
loop
and
add
jns
sub
mov
mov
adc
cli
mov
cltd
lahf
add
and
mov
movb
das
sub
jne
jg
or
mov
push
dec
add
lods
xor
sub
and
repz
xor
inc
push
insb
and
dec
dec
rorb
jle
pop
and
jge
push
dec
adc
push
aaa
sub
sub
inc
cmp
dec
jle
cmp
das
enter
sub
xchg
jo
js
sub
and
dec
int
out
cmpsb
in
adc
sub
mov
sti
push
shrb
pop
or
or
stos
xor
lock
bound
push
fdivp
cmc
int3
xor
out
xor
rcr
mov
incb
mov
push
cmp
xchg
pushf
pop
dec
mov
popf
movsb
mov
cs
xchg
cmpsb
jp
xlat
jg
push
dec
loop
lret
add
cmp
out
sbb
cmp
lahf
loopne
push
add
mov
jbe
hlt
push
mov
imul
subl
nop
fs
loop
cli
xor
push
mov
lock
fdivl
mov
xor
mov
xchg
scas
jle
icebp
push
pop
sbb
mov
xor
adc
test
es
insl
lock
pusha
dec
in
cwtl
fs
jle
xchg
and
popf
ja
fcomps
dec
fcmovbe
push
xchg
dec
ds
add
fbstp
dec
test
xor
subl
mov
or
push
loop
lahf
lods
sbb
dec
xorb
jmp
in
int
mov
mov
xchg
outsl
loop
cli
pop
outsl
test
fnstenv
cmpsb
sub
scas
jb
inc
pop
pushf
sub
shrl
push
push
stos
fidivrl
dec
loope
fadds
xor
push
std
mov
outsb
sub
test
pop
jo
nop
jg
and
add
pop
cmpsl
lds
and
mov
xor
stc
imul
sbbl
int3
loop
les
pop
cltd
dec
dec
mov
mov
decl
shlb
xchg
dec
negl
dec
mov
jae
add
outsb
test
and
fadds
add
repz
popa
stos
mov
call
inc
xchg
xchg
jbe
gs
push
mov
repz
jmp
jecxz
test
mov
dec
adc
repz
dec
icebp
pop
jle
mov
mov
xor
pop
dec
sbb
loop
repz
sub
sahf
jge
jno
push
dec
sub
arpl
add
adc
mov
xchg
xor
mov
xchg
mov
sub
mov
shrl
lret
or
pop
push
fisubrl
and
scas
outsl
pop
xor
cmp
dec
xchg
scas
dec
inc
insl
imulb
fldenv
inc
mov
jl
mov
jb
cmp
xor
and
inc
push
movsb
jg
ljmp
loop
jae
fwait
inc
sub
adc
in
arpl
inc
mov
pop
sti
dec
dec
jg
pop
sub
jle
loope
mov
push
jle
mov
jl
pop
pop
sarl
sarl
jg
dec
rcll
test
scas
not
out
inc
jle
jmp
fiadds
xchg
jnp
adc
popl
lret
ret
cmp
push
mov
shll
jl
test
cmp
xlat
xchg
lods
arpl
aam
pop
negb
fnstsw
test
outsl
pop
lcall
les
mov
cmp
dec
cmpsl
or
out
xchg
mov
in
cmp
mov
dec
pop
test
inc
movsl
lea
int3
mov
dec
or
jb
mov
cli
data16
mov
dec
lds
push
loope
dec
xchg
lea
andb
sub
shrb
fistpl
dec
xchg
popf
and
xchg
add
dec
cmp
scas
fwait
dec
pop
jo
cmp
mov
dec
outsb
enter
lds
or
or
aaa
jp
dec
push
add
call
mov
dec
stc
sub
cli
dec
cs
push
fisttps
xor
sbb
hlt
jno
push
mov
cs
adc
mov
dec
aas
fldcw
pushf
lret
jo
cmc
push
xchg
ss
mov
add
repnz
ds
mov
jg
loope
inc
pop
add
jo
mov
push
dec
jne
pushf
push
sbbb
data16
xor
dec
adc
aaa
inc
pop
scas
mov
outsl
adc
inc
pop
test
insl
dec
push
movb
lahf
sbb
dec
shr
arpl
sub
sbb
mov
or
call
pop
cmp
addr16
jno
mov
sbb
dec
mov
into
lcall
fisttps
js
jl
push
aaa
dec
pop
roll
dec
scas
mov
fidivrs
pop
and
xor
pop
iret
mov
add
fsubr
jmp
dec
scas
pop
jle
or
les
test
push
xchg
dec
leave
and
mov
sub
mov
and
sub
mov
dec
neg
gs
adcb
and
sbb
adc
push
jp
imul
push
jo
xchg
or
jg
pop
mov
jl
movsl
xchg
dec
and
inc
jg
je
mov
push
mov
bound
jl
push
push
out
add
inc
jle
xor
jp
jns
sbb
push
and
inc
out
lods
adc
paddq
sbb
cmp
cmp
add
push
fadds
push
std
pushf
daa
mov
pop
aaa
xor
mov
jle
or
xchg
mov
das
out
xor
inc
mov
insl
aaa
decb
xlat
iret
leave
pusha
lcall
jns
repnz
shrl
sub
adc
leave
mov
xor
xchg
and
mov
jg
loope
bnd
mov
pop
jo
pop
jl
pop
push
leave
jecxz
mov
jle
test
xchg
push
jge
ret
in
push
xchg
jecxz
mov
jo
inc
pop
cmp
push
in
xor
push
mov
jo
shll
mov
loop
dec
cld
push
and
mov
or
and
icebp
movsb
pop
adc
int3
lahf
adc
iret
fidivs
jg
or
out
inc
mov
repnz
pushw
jnp
jle
addr16
mul
jno
dec
mov
cmpsb
and
push
add
adc
mov
loope
jle
adc
dec
dec
xchg
fcmovnbe
jmp
cs
jg
int
lret
flds
push
sti
aas
pusha
testl
shll
xchg
stos
bound
mov
pshufw
dec
push
adc
fdivs
jno
xchg
rclb
into
sub
jbe,pt
adc
jle
xchg
dec
pusha
push
iret
push
mov
inc
xor
mov
scas
xor
cmp
push
xor
fildll
in
fsts
push
and
push
mov
sub
ja
dec
dec
xchg
mov
int
or
insb
push
mov
pop
mov
xor
call
fildl
es
in
pop
ja
enter
mov
adc
cld
jnp
add
push
dec
dec
jae
lods
test
sub
xchg
xor
out
jo
mov
jns
mov
dec
fadd
adc
mov
test
sub
xor
addr16
sub
mov
pop
inc
imul
dec
shlb
xchg
dec
jb
fst
popf
addr16
dec
dec
adc
and
into
push
sti
dec
cmp
xor
jne
jae
cli
push
jnp
xchg
jle
arpl
dec
cltd
pop
cmpsl
sub
es
pop
repnz
add
jecxz
xor
mov
cs
xor
in
fadd
mov
pushl
sarl
mov
add
dec
push
xor
outsb
xor
sub
popa
fdivrs
jl
sahf
dec
mov
in
and
add
push
cmp
pop
into
and
imul
dec
and
mov
subb
mov
shrb
inc
xor
or
scas
push
cmp
and
jle
test
iret
jno
hlt
lods
call
mov
in
lcall
mov
xchg
pop
xchg
mov
pop
jb
pop
inc
dec
clc
daa
cmp
jg
and
repz
cmp
cmp
divb
and
xchg
repz
idivb
adc
mov
push
lock
push
into
jne
sbb
fstps
jle
xchg
sahf
dec
sub
out
fwait
cwtl
adc
jge
pushf
sub
or
push
sti
fdivs
mov
inc
jle
and
jl
mov
mov
je
ret
fs
pusha
adcl
enter
jmp
sub
jge
sbbb
pop
or
cmc
jg
lahf
fs
add
and
dec
aam
stos
add
jl
pop
lret
add
adc
cmp
xor
ret
mov
push
in
das
mov
lcall
jl
aad
and
xor
push
cmp
and
cld
out
cs
jl
gs
int
int3
push
stc
mov
lds
movsl
lea
stos
icebp
in
inc
pop
push
inc
dec
int
lods
pop
or
inc
mov
sub
bound
jg
jnp
pushf
inc
mov
pop
cmp
data16
iret
bnd
and
les
mov
rcrb
pop
test
push
pop
jg
inc
push
xor
mov
jno
xor
jnp
stos
push
inc
inc
jbe
jb
inc
lret
loope
sar
and
inc
add
lcall
stos
mov
pop
mov
mov
fld
fidivs
mov
mov
mov
rcl
cmp
push
inc
lock
fsubrl
frstor
std
mov
lret
xchg
pop
std
cltd
fldt
aas
jg
das
nop
pop
pop
rcrl
imul
jle
adc
push
mov
das
mov
mov
dec
call
pusha
xchg
roll
inc
jl
inc
lods
inc
and
daa
pop
jnp
push
cwtl
adc
push
mov
cmp
jp
push
data16
pusha
mov
xchg
xchg
sub
sub
aaa
pop
xchg
stos
mov
cld
ljmp
loop
pop
mov
rep
push
pop
xchg
cmpl
lret
nop
dec
xor
inc
push
sub
sub
es
rorb
aaa
scas
scas
out
sarl
lret
xchg
cmp
push
pop
lods
jae
jne
jle
cmc
push
sbb
mov
aaa
jl
xlat
ds
test
cmp
loopne
scas
xorps
and
push
scas
lock
lods
rcrl
arpl
out
sub
sub
loopne
out
pop
pop
lea
ss
aam
add
cld
lods
fs
mov
int
mov
lret
or
push
mov
jno
jns
jbe
daa
loope
jmp
add
lcall
lret
push
negl
sbb
test
icebp
mov
mov
push
dec
cmp
int3
aas
lret
push
pop
arpl
bound
push
cmp
cmpsb
pop
jnp
cmc
arpl
pop
loop
cmp
jne
mov
xor
pop
loop
add
inc
jl
in
out
jg
xor
jl
bound
scas
enter
push
add
push
das
inc
repz
push
into
sub
fwait
imul
inc
cmp
add
pxor
dec
bound
xor
xchg
cmp
nop
rcll
cwtl
push
adcl
aam
adc
inc
dec
or
and
xor
cmc
pop
jl
dec
fs
dec
das
dec
out
mov
pop
ret
fstpl
ds
push
pop
mov
lahf
bound
lcall
mov
and
inc
mov
scas
mov
fimull
add
daa
inc
xchg
js
repnz
xchg
outsb
xlat
movsl
leave
and
jo
push
inc
jl
jge
sub
faddl
in
push
test
fidivrl
into
mov
push
mov
daa
fbld
iret
jl
jns
dec
add
mov
fsub
and
data16
push
push
xchg
jecxz
inc
rcll
iret
ljmp
mov
or
adc
lret
and
lods
xor
and
repnz
jp
jg
stos
testl
mov
mov
dec
lods
mov
out
jl
and
stc
xlat
dec
jnp
push
inc
gs
dec
pop
sub
call
push
or
enter
je
add
aad
sub
fucomp
jp
add
pop
dec
dec
imul
mov
add
std
dec
xor
movsl
out
xor
int
dec
in
loop
mov
arpl
inc
cmp
sbb
xor
scas
fisubs
pop
lret
mulb
repnz
pop
or
and
mov
loop
dec
aad
dec
xor
pop
adc
pop
mov
pop
cmc
int
dec
jne
jae
aas
scas
shrl
cltd
fyl2x
jge
stc
push
jns
ja
movsb
lret
aaa
xchg
sub
call
fldenv
lods
mov
mov
pop
push
jp
lahf
popa
push
imul
mull
sahf
pop
jne
out
sub
stos
test
dec
xchg
je
jb
mov
mov
pop
in
mov
or
dec
fs
xchg
mov
xchg
mov
nop
push
addr16
sarl
adcb
in
fcoml
mov
cmp
or
ret
pop
add
in
dec
test
add
push
sbb
notl
out
aaa
xchg
or
sahf
add
mov
mov
inc
fs
aas
inc
loop
dec
hlt
movsl
fstpt
cmp
and
pop
movsb
in
add
fstpt
jl
bound
mov
rcrl
or
mov
mov
lods
jge
test
outsb
out
insb
push
xlat
push
arpl
cmc
scas
xchg
inc
cmc
dec
dec
stos
jo
lods
lods
dec
adc
jp
sahf
hlt
inc
loop
or
mov
insl
mov
adc
loopne
movsl
int3
mov
push
fistpl
lods
push
shrb
add
mov
xchg
or
xor
cmc
out
cmp
jle
pushf
mov
jg
inc
outsb
add
xor
dec
adc
push
push
xchg
push
mov
jge
push
imul
jg
inc
cmp
dec
fstps
movsb
cs
jle
movd
mov
fsub
mov
in
sub
or
leave
int3
stos
iret
pop
jg
mov
stos
push
inc
and
add
and
jl
pop
dec
cltd
jg
mov
clc
jp
cmp
cwtl
sahf
cmp
adc
aad
xor
and
xchg
dec
jg
nopl
jle
fwait
jo
cmp
mov
aaa
movsb
leave
sbb
xor
cs
and
movsb
cmc
or
into
gs
outsb
xor
mov
dec
mov
out
sub
sub
out
test
pop
or
ljmp
outsb
repnz
xchg
jle
mov
cltd
ret
and
or
insl
jecxz
les
push
xor
scas
sahf
inc
jle
iret
outsb
jnp
xor
or
mov
jecxz
das
add
xor
test
add
mov
mov
jb
push
lods
jg
sbb
imul
pop
imul
in
and
cmp
add
in
cmp
jle
clc
dec
arpl
cmpsb
jnp
jno
sub
dec
add
cwtl
jo
decb
adc
cld
fwait
xchg
dec
inc
mov
jl
movsb
adc
xchg
dec
cmpsw
push
jae
push
xorl
pop
out
xchg
dec
fs
loope
cmp
push
loop
mov
inc
js
jb
movsb
sbb
cmp
pusha
adc
or
cltd
cmp
dec
popa
movsb
push
insl
or
sbb
imul
fs
aad
xor
sub
rol
lret
scas
addr16
inc
in
aad
fisubrs
adc
test
cmp
dec
rclb
push
lea
fsts
ficoms
mov
jl
cmc
and
inc
xor
jmp
aas
test
cs
dec
shl
iret
mov
dec
and
jne
test
aaa
add
xchg
dec
int
sbb
sbb
mov
shr
fdivs
cmp
ljmp
iret
sub
add
in
cld
add
xlat
dec
pop
dec
xchg
xor
daa
sbb
jbe
pop
pop
nop
mov
cld
pop
imul
aad
addl
sbb
inc
je
pop
mov
addr16
dec
jns
cmp
es
mov
dec
call
je
cltd
inc
pop
inc
adcb
dec
xor
cmp
ffreep
iret
out
dec
pop
push
pop
dec
add
pushf
xchg
stc
ret
jb
mov
call
in
dec
xchg
fs
out
cwtl
sub
sarb
xchg
push
mov
xchg
jg
mov
push
dec
inc
xchg
ret
bound
out
addr16
add
in
fsts
das
stos
or
sub
pop
loop
sub
or
outsl
sub
es
inc
lock
stos
mov
sub
mov
and
lea
jmp
cmp
sub
cmp
fistps
leave
adc
inc
push
xchg
in
scas
dec
inc
mov
or
cwtl
cld
loopne
sti
aam
mov
inc
push
mov
pop
cmp
int3
gs
sbb
jae
xchg
pop
fstpl
mov
jb
js
sbb
test
bound
scas
and
pusha
pop
inc
out
jo
rcrl
xchg
imul
mov
mov
xor
xchg
roll
jl
add
jge
inc
cli
cmp
pop
or
push
sub
mov
mov
fs
sub
pushf
push
imul
bnd
mov
jl
xchg
ror
cmp
imul
jp
push
scas
cmc
sub
mov
out
sbb
fldcw
and
fs
in
xchg
enter
cmp
cmp
sub
mov
repz
fildl
cli
in
push
push
scas
push
jno
xchg
and
into
loopne
sbb
hlt
add
cltd
xor
sahf
push
cli
dec
add
mov
in
adc
jns
xchg
fsubs
xchg
dec
adcb
fidivl
cmp
std
dec
mov
pop
add
inc
dec
fnstcw
mov
mov
stc
inc
les
jb
pop
sbb
rcll
int
neg
adc
dec
cwtl
movsl
jnp
pop
jle
hlt
sub
xchg
push
mov
lods
xchg
add
mov
xchg
cmp
loopne
mull
es
lock
js
in
fstpt
bsf
mov
dec
add
lods
js
in
inc
leave
jp
mov
xor
cmp
dec
fcomp
ret
lock
xchg
mov
dec
mov
xlat
mov
mov
add
dec
lds
je
pop
dec
repz
das
dec
inc
leave
sub
add
dec
clc
push
int
ljmp
out
pop
scas
repnz
enter
out
scas
dec
add
sub
jmp
adc
xchg
and
dec
sbb
xor
dec
add
ret
pop
cld
mov
inc
dec
movsb
addr16
inc
sub
dec
aaa
ret
dec
cmp
mov
inc
movsb
push
cmpsb
aaa
call
in
lret
imul
and
out
mov
inc
mov
dec
dec
into
incb
mov
jnp
jb
dec
test
sahf
repnz
jo
sbb
in
je
push
or
jg
mov
mov
jl
dec
cmp
dec
dec
push
xlat
jp
add
int
xor
push
mov
sti
and
aas
push
out
dec
cmp
data16
loopne
dec
dec
and
dec
xchg
xorl
fcmovbe
stos
cmp
or
sti
inc
xorb
std
cs
jle
and
sub
out
pop
pop
movsb
adc
aaa
xor
lods
inc
rcl
outsb
cmp
pop
jbe
jl
pop
sub
inc
jp
cs
test
into
cwtl
fsts
mov
les
in
pop
jmp
and
int3
pop
pop
shlb
add
xlat
fdivrp
cmp
xchg
and
jp
push
cmp
pop
dec
sub
daa
add
clc
fistpl
sbb
or
mov
dec
sbb
push
ficompl
xor
cmp
lods
ds
int3
dec
sub
xchg
xchg
out
mov
xchg
iret
mov
jb
jnp
jo
lods
pop
adc
pop
or
rorl
rcrl
jg
jp
or
push
mov
push
jne
rcll
add
mov
jo
jl,pn
mov
iret
jecxz
adc
push
push
xor
xchg
bnd
mov
rcrb
loopne
sarl
popf
cmp
add
in
neg
lds
cmp
sub
jle
add
jg
out
repz
xchg
push
aaa
mov
xor
repnz
cmpsl
push
pop
fcmove
xchg
cmp
hlt
adc
and
and
orl
sbb
in
add
cmp
xchg
repz
and
xchg
movsl
cmp
adc
rolb
dec
fisttpl
push
orb
push
dec
ret
cmc
jmp
test
push
sbb
pop
pop
shll
and
mov
scas
adc
push
gs
cmp
scas
loopne
mov
push
fmull
jmp
inc
movsl
push
sbb
push
dec
dec
pop
ret
mov
or
jnp
popf
dec
sub
sbb
dec
dec
shll
sub
mov
aas
inc
fbld
insb
sub
mov
iret
scas
lods
add
ror
adc
test
and
dec
repz
sti
xchg
dec
lahf
add
and
inc
imul
pop
loope
das
nop
call
xchg
xchg
add
or
add
pop
mov
repnz
insb
dec
int3
loope
pop
inc
sub
cmp
cmp
dec
ja
test
cwtl
dec
mov
pop
mov
cmp
jl
aaa
cltd
push
dec
mov
mov
push
sti
fmuls
xchg
cli
dec
jecxz
adc
dec
pop
xor
sub
jne
mov
sub
jle
dec
pop
scas
insl
std
jbe
jo
dec
je
xchg
test
repnz
pusha
dec
arpl
cvtpi2ps
cld
pop
outsb
or
dec
cs
pop
inc
mov
dec
cmp
addr16
push
fmul
dec
or
jbe
shll
sti
rclb
dec
lds
xchg
adc
daa
jl
movsl
mov
push
xor
cwtl
sbb
out
enter
shll
cmp
push
add
xor
lods
mov
dec
xor
lock
jmp
outsb
pop
imul
and
out
pusha
dec
roll
out
gs
dec
lock
or
int
push
mov
jno
cli
in
push
inc
sbb
sarb
jl
mov
cs
call
adc
rclb
icebp
call
inc
xchg
pop
add
shl
data16
imul
clc
dec
mov
sti
inc
repz
outsb
cmp
ds
dec
dec
out
mulb
pop
ds
movsl
ret
sbb
fisttpll
loopne
push
ds
xor
xor
in
sub
fistpll
sbb
xchg
outsl
jp
int3
inc
dec
cs
gs
stc
dec
mov
shl
test
fcmovnu
call
cmp
cmc
and
dec
nop
pop
mov
pop
lret
dec
loopne
jbe
xor
out
pop
sub
data16
dec
fisubs
call
dec
xorb
fld
jg
dec
lds
jl
jbe
jns
rorb
cmp
jmp
xor
cmc
cmp
lock
mov
dec
sarb
pop
loopne
fstpl
dec
lock
dec
imul
push
ret
sahf
push
push
mov
scas
add
mov
push
cmp
push
enter
leave
xchg
or
aam
icebp
test
mov
push
adc
ds
mov
jge
outsb
popl
lcall
or
pop
scas
and
pop
repz
call
popf
frstor
popa
xorb
scas
cmp
xchg
data16
dec
push
push
rcl
mov
cs
fldt
push
mov
dec
into
mov
jmp
rcll
pusha
xor
insl
hlt
add
sbb
imul
mov
sbb
or
addr16
push
sti
xor
aad
adc
imul
pop
or
addr16
into
mov
jg
mov
in
dec
xchg
stos
xchg
and
xchg
and
inc
sbb
xchg
int
hlt
fisubl
jecxz
push
mov
push
push
xchg
jb
movsb
xor
cmp
mov
add
ret
push
mov
jp
sbb
icebp
loope
sbb
leave
dec
aad
lods
sbb
mov
mov
loopne
int3
cmp
mov
xchg
dec
lods
sbb
shrb
adc
sbb
movsl
lcall
icebp
mov
inc
out
xlat
and
stos
dec
cmp
jae
dec
sbb
mov
rcrl
dec
mov
jbe
dec
pop
mov
fdiv
push
adc
imul
incl
jno
inc
jecxz
dec
les
test
dec
sub
subb
div
outsb
mov
lret
sub
into
fidivrs
xor
pop
add
insb
and
stos
inc
inc
dec
int
cmc
add
mov
icebp
sub
sahf
jge
dec
popa
sti
je
fiaddl
outsw
fcomi
sbb
aas
pop
mov
pop
jns
testb
push
in
das
dec
mov
scas
jmp
subb
pop
outsb
add
cltd
inc
nop
cwtl
mov
data16
fldt
dec
ja
mov
xchg
icebp
aas
mov
fdivr
dec
out
xchg
jle
mov
adc
dec
into
and
xor
push
adc
xchg
int3
adc
sbb
or
fs
lds
xchg
push
shrb
les
push
mov
xchg
inc
dec
int3
jl
icebp
inc
pusha
mov
loopne
jg
mov
ja
mov
lret
cmp
addr16
cltd
inc
fildl
sbb
rorb
push
out
adc
lcall
cmpl
lock
mov
pop
jae
push
sti
orl
into
fnstenv
sub
bound
jle
ficomps
mov
addr16
add
mov
jbe
cmp
xor
mov
jl
divl
in
cmp
repz
hlt
fidivrl
and
lods
mov
mov
scas
jle
xchg
rcrb
mov
sti
inc
and
push
dec
lods
jg
out
push
mov
add
push
leave
inc
jo
jo
aaa
in
sbb
mov
inc
push
sub
dec
cmp
mov
into
cltd
jmp
add
test
push
adc
mov
imul
xchg
inc
dec
out
cs
cmp
xchg
adc
sbb
dec
iret
jg
stos
fsts
lcall
pop
rcrb
push
clc
sbb
mov
jo
xchg
ret
shll
in
cmpsl
xor
dec
bound
sub
jge
push
cmovne
sub
cs
push
int3
cmc
mov
pop
leave
mov
out
jp
and
sub
cmp
sub
or
int3
cmp
push
lcall
testb
jg
jl
ljmp
or
mov
cmovns
xchg
ret
popf
faddl
xchg
imul
mov
repz
int
mov
fcompl
ds
adc
out
xchg
je
push
aas
dec
scas
aam
jge
push
fdivrs
lfs
lds
xchg
dec
jne
jmp
pop
xor
aad
add
scas
pop
insb
fyl2xp1
jecxz
jno
ljmp
push
adc
pop
aas
rorl
mov
push
dec
pop
xorb
imul
inc
xchg
es
jmp
push
and
mov
cmp
push
push
test
jle
cmpsl
mov
icebp
mov
jb
out
pop
cmpsl
and
cmc
ret
pop
inc
pusha
scas
fmulp
aad
jle
sbb
stos
cs
pop
inc
dec
idivl
mov
sbb
lahf
sarb
dec
stos
mov
aas
aaa
xchg
cs
sbb
fidivrl
push
sub
lock
jno
adc
rol
mov
hlt
dec
xor
out
mov
inc
sub
and
xor
pop
sub
sbb
jecxz
dec
dec
jp
jmp
shr
cmp
mov
ror
pop
loop
stc
loope
inc
fdivl
add
push
rcll
xor
cmp
out
add
dec
mov
testl
repz
enter
mov
repnz
jmp
sbb
push
leave
dec
in
mov
push
fsts
rorb
cmp
test
push
cmp
adc
or
xlat
fildll
insb
shrb
cmpsl
push
dec
mov
inc
dec
push
push
jmp
xorb
inc
ss
pop
push
or
in
ret
adc
fs
stos
jne
cwtl
mov
lods
inc
dec
das
sarl
dec
xor
fcmovnb
adc
push
xchg
xor
push
adc
xchg
mov
mov
dec
inc
aaa
and
or
out
jecxz
loop
sbb
push
dec
cmp
test
dec
ja
js
daa
adc
jp
add
push
repnz
jae
adc
or
jl
inc
in
dec
js
mov
sbb
fsts
dec
dec
divl
pusha
or
mov
dec
into
sub
mov
loope
out
or
dec
outsl
mov
cmp
jne
xchg
xchg
mov
scas
mov
daa
mov
mov
cltd
leave
dec
orl
hlt
fisttpll
iret
subb
sub
pop
add
push
jg
xlat
arpl
dec
lcall
dec
xor
xchg
mov
adc
cmp
iret
adc
frstor
pop
cmp
dec
fiadds
lods
mov
xlat
inc
popa
fists
gs
icebp
adc
fcompl
xor
sahf
test
sahf
dec
sti
and
mov
pop
xchg
cs
xchg
cmc
pop
mov
xchg
and
cmp
mov
dec
cli
dec
lea
cld
out
inc
clc
testb
scas
sub
dec
sub
jb
jnp
add
dec
push
cmp
dec
or
jmp
sub
out
inc
leave
test
test
lea
dec
cmp
push
push
mov
sbb
dec
mov
movsl
inc
xchg
bound
cmp
mov
scas
sahf
push
jecxz
and
insl
ds
xlat
out
dec
ret
adc
or
jne
xor
leave
or
test
mov
adc
aaa
dec
dec
loop
maxps
cli
outsb
dec
dec
or
lret
add
inc
pop
aam
js
pop
fldt
jo
mov
icebp
sub
shrb
shlb
out
popa
xchg
xor
jle,pn
push
or
inc
sbb
dec
popa
mov
cmp
sti
sahf
cmpsl
aam
dec
xor
adc
les
fcomps
jns
shlb
dec
jbe
js
pop
addr16
int3
pop
mov
fidivrl
rolb
dec
push
and
xchg
xor
push
loope
pop
mov
or
js
pop
xlat
fists
aas
aaa
jl
jbe
xchg
or
jle
repz
pop
cmp
lods
pop
push
mov
pop
aam
lret
lods
stos
int
shlb
push
jb
fwait
aas
stos
push
xor
pop
shrl
jle
adc
sub
pop
dec
icebp
push
sub
add
xchg
and
push
ds
jl
add
inc
and
mov
push
addr16
fptan
jl
fisubrl
inc
aas
movb
sbb
outsb
testl
or
push
mov
shlb
pop
dec
pop
or
clc
pop
add
js
mov
in
xor
out
push
xor
out
mov
lock
or
leave
jle
mov
push
lcall
inc
lret
and
sub
shll
js
std
jo
and
or
xchg
ficompl
data16
cltd
mov
bound
faddl
inc
mov
mov
dec
or
int
ret
daa
sub
insl
outsb
dec
sub
movsl
das
mov
les
sub
mov
iret
scas
aam
pop
fldenv
imul
mov
test
mov
push
sbb
in
cmp
cld
jb
fst
dec
out
sub
call
dec
cmp
dec
pop
rcll
mov
adc
sub
into
mov
dec
or
lcall
in
sub
fcompl
rorb
lret
pop
and
frstor
sbb
ja
jl
inc
lods
sbb
xchg
or
inc
sahf
push
out
adc
shlb
sub
mov
popa
stos
mov
sti
outsl
sub
scas
sbb
addr16
inc
insb
adc
loopne
push
mov
xchg
dec
cmp
xor
mov
adc
push
scas
imul
daa
dec
jbe
lods
dec
dec
fistl
imul
add
lods
shrb
add
pop
jno
shrb
push
inc
clc
jl
stc
out
push
movsb
ret
lahf
add
jg
adc
enter
scas
insb
cltd
out
xor
int3
fidivrs
movsl
lret
xor
mov
std
cmp
fcmovne
test
int
pop
jmp
cmp
sbb
lret
or
jne
imul
testl
pushf
adc
sub
xor
dec
xor
jno
mov
mov
adc
xchg
and
jl
mov
outsb
jle
fildll
js
dec
and
push
dec
dec
add
inc
in
ds
les
jmp
fistl
dec
in
push
push
movsb
test
dec
mov
sub
jno
fnsave
movsl
add
hlt
mov
sarb
add
mov
fucom
cmp
test
into
sbb
and
lea
jno
stos
mov
or
pop
cltd
lods
lock
jmp
cltd
xor
enter
cld
int
in
dec
mov
mov
cmpsb
jnp
jecxz
cmp
dec
xchg
jbe
add
sub
cmpsb
ret
das
jp
jae
dec
dec
loop
insb
hlt
and
pop
xchg
pop
gs
dec
lods
arpl
std
sbb
and
push
icebp
iret
pop
lods
dec
lahf
cwtl
test
jne
or
mov
aam
dec
jecxz
adc
dec
sub
push
mov
mov
pop
cltd
jns
adc
repz
inc
dec
dec
scas
hlt
popf
jne
adc
cs
clc
push
std
dec
shrl
dec
adc
fldenv
mov
dec
out
loopne
jecxz
xlat
inc
dec
adc
and
outsb
dec
push
lret
mov
icebp
orl
fisubrs
and
mov
cmc
or
jge
dec
test
xchg
subl
dec
xchg
dec
sarb
push
xchg
loopne
xor
rorb
pop
setnp
ret
cs
sub
into
cmp
clc
dec
cmc
ret
lods
lcall
lahf
jecxz
cmp
pop
scas
cmpsb
pop
fs
cmp
ds
iret
push
aam
in
push
jle
adc
pop
dec
jmp
das
xchg
lods
push
cmp
push
bound
outsb
push
sbb
push
fld
das
jae
cmpsl
scas
in
jl
int
mov
mov
fimull
nop
mov
mov
cs
cmp
or
in
xor
push
dec
mov
int
in
lock
jo
mov
bound
or
leave
mov
insb
lret
mov
and
mov
sbb
xor
dec
dec
dec
jge
mov
std
jbe
xchg
xchg
fnstenv
push
dec
test
subl
xchg
pop
js
inc
mov
and
fs
mov
dec
mov
cld
out
fistpll
xor
sti
sbb
pop
outsb
dec
pop
aas
inc
movsb
mov
stc
adc
push
mov
push
dec
ds
bound
xor
mov
stos
push
dec
scas
sub
movsb
scas
std
sub
dec
pop
aam
xor
mov
lret
sbb
insl
push
jp,pn
dec
jmp
adc
shlb
xchg
mov
sbb
stos
daa
aam
dec
xor
jmp
add
push
insl
sub
decb
jb
jmp
inc
jg
xchg
iret
xor
sarl
inc
cmp
sub
lret
faddp
xor
add
cs
ret
push
jg
mov
mov
mov
lds
fdivrl
pop
jl
sub
daa
dec
mov
rorl
mov
mov
popf
repnz
push
insb
xchg
cs
pushf
dec
adc
inc
test
xchg
or
ficomps
inc
dec
adc
xor
into
mov
sub
push
mov
mov
dec
icebp
loopne
mov
cltd
sbb
and
xchg
mov
ljmp
pop
rolb
shl
leave
pop
lret
lea
push
movsl
jnp
mov
test
outsb
xchg
jnp
xchg
pop
dec
ss
jle
mov
sti
je
add
pop
int3
flds
lods
cs
mov
dec
rol
ds
mov
push
dec
jle
scas
insl
cmp
jg
cmp
push
insb
push
or
adc
or
loopne
sub
sahf
xor
inc
cltd
sub
mov
cmp
pop
push
dec
xor
adc
cmc
inc
jle
cltd
dec
lods
xor
or
and
dec
mov
jg
js
jne
outsb
mov
sub
cmpb
dec
jbe
mov
push
aas
dec
mov
pop
adc
and
add
dec
xor
popa
loopne,pt
push
mov
jecxz
sub
inc
fucomip
in
jo
dec
jge
jmp
mov
pop
divb
stc
ret
and
sbb
dec
xchg
jne
push
jbe
mulb
jl
mov
push
aaa
loope
shr
cs
lea
iret
cmp
sahf
dec
xor
fdivs
inc
repz
inc
into
lret
insl
sub
dec
and
mov
dec
cmp
add
dec
inc
mov
leave
xor
xchg
loope
test
sahf
pop
lahf
mov
insb
sub
sahf
adc
movb
dec
sbb
add
adc
mov
jae
push
and
decb
dec
adc
jmp
sub
notl
rorl
jbe
addb
mov
jae
cwtl
leave
out
in
test
outsb
cmp
dec
lock
xor
xchg
fwait
sbb
orl
mov
imul
add
sub
mov
bound
dec
push
push
and
fiaddl
mov
push
ret
aam
inc
out
jmp
pop
bound
jle
push
adc
mov
xor
pop
stos
cmpsb
enter
jno
jg
push
dec
dec
dec
hlt
dec
or
shlb
cld
mov
push
sar
xorb
scas
adc
cs
outsb
sub
add
pop
and
faddl
mov
xor
dec
sub
stos
or
fidivrs
into
sub
push
stos
mov
aam
pop
adc
movsb
inc
hlt
or
inc
jl
jbe
inc
ja
loope
into
fisttpll
fimull
cli
adc
dec
jne
pop
mov
ret
sub
cltd
dec
test
mov
test
cmc
inc
in
pop
add
jp
sbb
popf
mov
cmp
scas
outsb
pop
dec
cmpsl
xchg
orps
dec
fidivs
inc
fistl
enter
sub
pop
mov
dec
addps
add
and
hlt
stos
pop
jb
fs
push
jecxz
dec
test
or
aad
jle
mov
adc
lds
lret
push
inc
push
imul
incl
xorb
mov
pusha
insb
pop
rorl
and
push
addr16
sti
rcr
xchg
jae
clc
jne
xor
loop
sub
xor
mov
pop
into
xchg
pop
dec
mov
dec
add
mov
into
inc
push
nop
add
push
jns
aam
arpl
dec
dec
sbb
rorb
inc
pop
scas
mov
add
sub
int
jb
push
iret
outsl
sbb
push
jnp
adc
sub
xor
iret
lret
inc
mov
xor
sarl
sbb
add
out
adcl
arpl
add
jecxz
cmp
pop
adc
inc
push
mov
sti
sti
xchg
insl
jecxz
aas
or
cmp
mov
jle
stc
gs
add
ss
inc
adc
jmp
and
movsb
dec
pop
and
inc
mov
sub
push
movsb
dec
mov
clc
add
lods
push
aaa
mov
cmp
fsubrp
dec
cmc
popf
sub
sub
sti
daa
test
das
mov
dec
testl
push
mov
roll
test
mov
mov
ret
adc
into
push
out
jne
inc
dec
pop
int
cwtl
inc
fisubs
insl
in
xlat
out
dec
ss
cmp
dec
jecxz
test
dec
xor
mov
fbld
xchg
ret
and
dec
xchg
ss
dec
cmova
outsb
push
jle
and
add
scas
movsl
ljmp
jg
data16
mov
cmpsl
repnz
insl
adc
iret
cmp
int3
cmc
test
xor
fiaddl
in
shrb
idiv
inc
and
lock
inc
fimull
jb
pop
push
dec
notl
jle
adc
sarl
cmp
out
adc
pop
popl
pop
adc
mov
gs
into
mov
mov
xchg
add
dec
mov
jp
fadds
dec
mov
adcl
aad
popf
push
jle
orb
sub
xor
mov
outsb
pop
stos
movsb
dec
popf
inc
call
addr16
je
int3
push
pop
cld
ss
lcall
jnp
push
add
push
pop
rcrl
movsl
dec
dec
push
xorb
dec
std
data16
dec
push
js
rcrl
dec
xor
mov
push
pop
adc
inc
xchg
jmp
push
xchg
jbe
fnstenv
cli
mov
loopne
jbe
pop
dec
lods
inc
xor
jo
repz
jnp
sbb
nop
clc
xchg
mov
dec
mov
cmpsl
jns
push
jmp
pop
mov
test
aad
jae
mov
jge
jb
imul
xchg
sub
out
test
dec
cmp
ret
sub
push
push
jl
iret
repz
std
cmp
insl
movb
insl
lds
dec
sahf
jle
mov
insb
jbe
enter
les
inc
sub
push
push
mov
arpl
movsb
cli
mov
dec
loop
icebp
pop
out
jle
cli
pop
or
cs
lret
cltd
pop
push
dec
xchg
out
xorl
adc
mov
xorb
int
pop
and
fwait
mov
dec
mov
xchg
xor
sti
iret
inc
ret
mov
mov
sarb
dec
adc
jp
add
dec
imul
nop
or
pop
cmp
dec
rcll
mov
ljmp
dec
inc
shr
lret
sbb
inc
jbe
pop
xor
pop
jle
dec
in
scas
cltd
sub
or
push
sti
pop
gs
pop
cmp
repz
fildll
add
rcrb
ret
stos
xchg
mov
push
dec
pop
out
insb
std
dec
and
xlat
jecxz
leave
dec
shll
arpl
dec
fcmovnu
mov
add
xchg
pop
rorl
xor
dec
pop
add
or
dec
push
and
lds
inc
test
notl
loop
jp
ss
add
or
dec
push
push
add
dec
pushf
push
jge
xor
gs
pusha
add
mov
push
jnp
dec
mov
mov
imul
aaa
jle
jl
mov
aad
adc
and
std
imul
lcall
xchg
pop
dec
dec
in
cltd
inc
aaa
jp
dec
cmp
push
lret
mov
sti
loope
lea
dec
loopne
js
cli
nop/reserved
jecxz
fwait
and
cmp
dec
jle
cmp
jo
mov
in
test
push
and
cli
mov
pop
lods
adc
xor
imul
in
lock
bound
xlat
dec
cltd
or
jns
aaa
adc
xchg
adc
push
xor
sub
sub
cmpsb
ja
dec
lea
mov
fsubs
leave
orb
inc
adc
std
popl
mov
stos
dec
mov
jbe
mov
mov
lcall
hlt
mov
pop
clc
dec
fs
dec
lods
xor
jge
or
dec
mov
test
flds
movsl
cmp
das
aas
cmp
push
test
sub
mov
jo
pop
rcrl
pop
daa
and
cmc
dec
dec
mov
sub
dec
stc
cmpsl
movsl
jne
test
mov
and
fsubl
dec
out
loop
pop
pop
call
cltd
std
enter
rorb
mov
jg
adc
sub
mov
arpl
jl
out
jb
ret
mov
inc
aaa
shrl
popa
mov
dec
add
and
rcll
lahf
mov
pop
mov
add
jl
jecxz
jle
push
test
sahf
mov
dec
ljmp
lcall
imul
cmpsb
jno
jbe
xor
add
mov
mov
xchg
js
pop
mov
pop
mov
xchg
inc
push
bound
sarl
mov
dec
dec
in
mov
push
int
imul
dec
gs
xor
inc
clc
jo
add
push
dec
bound
icebp
fsubl
push
cmp
dec
lret
loop
out
mov
outsb
js
addl
mov
mov
mov
aam
mov
cmp
jg
jae
push
cmp
jbe
outsl
xchg
mov
popa
into
mov
fimull
sti
jl
xor
scas
imul
les
in
dec
mov
push
mov
add
daa
fcomp
sub
lret
dec
dec
mov
test
dec
xchg
push
sbbl
jmp
pop
mov
pop
fisttpll
push
adc
cmp
dec
cmp
xor
ljmp
mov
and
dec
fcmovnb
nop
sub
mov
pop
fsubrl
sub
dec
pop
xchg
jno
and
add
gs
mov
jbe
js
or
dec
jmp
mov
dec
xchg
fadds
rcl
mov
xor
lret
daa
dec
adc
inc
fnstcw
add
iret
push
es
mov
ficoml
mov
mov
movsb
cmpsb
mov
pop
adc
aas
mov
sbb
fmull
and
dec
fildll
cmovg
inc
enter
bound
cld
mov
or
pusha
mov
test
cmp
mov
inc
or
or
or
aaa
jle
dec
sub
pop
test
xor
xor
sub
inc
mov
pop
in
sbb
mov
dec
dec
jg
and
push
fwait
pop
mov
push
mov
fs
lea
nop
out
push
into
sahf
gs
dec
xor
dec
scas
retw
dec
and
mov
pop
mov
inc
clc
xor
adc
mov
daa
jb
jmp
pop
mov
sbb
cwtl
call
dec
xor
adc
add
dec
adc
mov
dec
jbe
dec
xor
mov
jmp
inc
sub
push
movsb
mov
notl
ja
dec
mov
push
lods
out
js
push
dec
lea
stos
mov
out
push
mov
and
mov
into
inc
jne
test
add
int3
add
mov
jle
sub
mov
sbb
xor
dec
or
xchg
and
hlt
jae
sub
inc
pop
pop
loopne
adc
popf
ljmp
push
fs
movb
push
pop
not
iret
mov
xor
inc
fwait
outsb
pop
jbe
sbb
fsubrs
xchg
dec
jge
stos
dec
imul
or
test
pop
sbb
pop
cld
pop
rorb
jno
inc
dec
insb
mov
dec
push
test
dec
ficoml
cmp
sub
dec
mov
mov
icebp
dec
dec
in
and
imul
xchg
jle
mov
out
jg
fcmovne
mov
dec
in
ljmp
rcll
cmp
mov
xlat
test
insb
rorb
arpl
xor
inc
jp
or
stos
dec
xor
pusha
add
inc
add
lcall
xchg
cmp
adc
add
lret
push
lret
ret
cmp
ss
push
xchg
icebp
pusha
call
scas
movsb
dec
add
xor
sahf
and
fs
test
adc
outsb
mov
movsb
dec
jnp
scas
pop
cmpsl
xchg
dec
aas
or
and
pop
mov
xchg
int
ja
insb
iret
xchg
rep
dec
dec
lock
pop
cmpsb
repnz
inc
stos
mov
into
cmp
dec
fimuls
data16
jmp
dec
adc
jge
pop
cltd
imul
jae
or
xchg
iret
in
dec
ficoms
shlb
push
out
adc
and
lret
jnp
gs
sub
push
dec
lcall
jo
call
loop
fcomi
bndstx
aam
mov
jns
repz
daa
iret
outsl
imul
push
cmp
mov
jle
aad
inc
xchg
cmpsb
jb
mov
lock
cmc
in
aas
dec
js
push
dec
mov
or
dec
xor
ja
jne
push
sub
cld
sub
insb
test
pop
jle
dec
cmp
into
lret
stos
dec
cli
xor
push
dec
lret
pop
and
decl
mov
inc
aad
insb
sbb
ds
popf
mov
dec
aaa
or
xor
dec
or
aam
fsubrs
es
dec
jns
icebp
ja
mov
shr
movsb
les
scas
jmp
cmpsb
xchg
push
dec
out
pop
sbb
pushf
dec
dec
adc
lea
dec
popa
iret
jl
sub
pop
enter
stc
mov
xchg
dec
clc
or
cltd
movsb
push
dec
sbb
jne
pusha
test
imul
mov
dec
push
mov
dec
xor
dec
xchg
xlat
push
xor
cmp
ret
fadds
cmc
repnz
jo
jl
xchg
sbb
fmull
hlt
dec
xor
add
std
dec
imul
into
dec
jmp
lret
pop
jecxz
pusha
dec
mov
in
pop
dec
mov
ds
pop
test
mov
fisttpll
jns
push
jo
imul
mov
add
pop
inc
cwtl
or
mov
push
mov
sub
push
xor
je
add
push
inc
andb
icebp
or
add
and
pop
int
iret
insb
repnz
inc
aaa
lcall
and
sub
loop
xor
in
xchg
mov
dec
test
rcll
push
push
cmp
sub
cmp
dec
mov
lods
xchg
dec
or
hlt
xchg
das
dec
clc
sub
xchg
jg
into
sarl
rcr
out
jecxz
cmpsl
dec
fmuls
jb
test
pcmpgtw
push
xchg
add
cmp
mov
dec
adc
loope
xor
or
filds
or
inc
dec
jecxz
pop
jb
pop
imul
jle
inc
call
divb
push
loop
loopne
jo
ret
mov
inc
dec
cmp
nop
test
sub
jg
pop
dec
ret
jae
test
lret
adc
es
xor
scas
add
dec
xchg
mov
out
hlt
jle
jle
xlat
push
test
test
aas
leave
inc
mov
lods
xchg
pop
divl
push
sbb
jmp
dec
cmp
outsb
xchg
lahf
enter
dec
pop
xchg
data16
or
dec
dec
mov
jle
cmp
inc
push
outsl
call
mov
lret
adc
fldl
into
outsb
aas
enter
cmp
lods
dec
cli
sbbb
push
sub
pop
dec
jbe
jl
iret
cmp
nop
add
sub
addl
mov
bnd
lods
sbb
sub
pop
enter
out
cli
sbb
outsb
test
pop
adcb
add
cmpsl
add
bound
mov
ffreep
in
mov
fbld
cmpsl
jno
mov
fsubrl
mov
inc
add
dec
add
sbb
shr
repnz
jno
pop
add
inc
in
mov
outsb
inc
sbb
pop
mov
cmp
dec
pushf
sbb
sub
lret
lods
and
pop
xor
negl
stc
rol
dec
iret
nop
mov
dec
cmp
mov
sti
scas
sbb
cmp
push
dec
cli
aas
sbb
inc
cmpsl
sbb
incb
dec
cltd
lea
les
inc
aam
jl
pop
sbb
aas
jg
icebp
xchg
lret
sub
pushf
in
mov
cs
popa
loope
out
jle
jnp
mov
pop
mov
mov
dec
aas
xor
lret
jp
scas
cmpsl
dec
and
jo
mov
jno
or
stc
lahf
mov
mov
pop
mov
mov
aam
mov
adc
mov
sahf
mov
and
push
mov
into
and
stos
push
jl
cmc
and
push
ficoml
in
pop
fildll
fcmovnbe
cs
xor
jae
sbb
mov
lock
shl
push
mov
cmp
push
push
adc
cld
jg
mov
fwait
xor
addr16
mov
push
push
inc
mov
inc
icebp
stos
fcomi
in
push
or
cs
outsl
sbb
push
stos
fwait
jl
cmp
xchg
cmp
in
jno
pop
mov
mov
adc
xchg
xor
test
mov
dec
push
ljmp
and
sub
adcl
lahf
out
sbb
movsb
sub
fcmovb
mov
mov
sub
cld
xchg
ret
shr
jg
es
mov
scas
shrb
cmp
je
cltd
ret
push
lods
mov
jo
pop
cmp
mov
out
in
dec
jmp
lcall
fists
or
xor
movl
dec
sbb
rorl
in
int3
lret
aaa
js
mov
pop
cli
addr16
mulb
jo
cmp
jge
insl
sub
xchg
iret
lcall
ss
push
outsl
adc
hlt
into
jl
gs
and
ret
call
dec
and
jg
and
push
xchg
das
ss
jg
mov
adc
cmpsb
xchg
mov
jg
lahf
in
lds
in
xor
pushf
dec
pop
mov
adc
int3
enter
inc
data16
mov
jno
lcall
ss
inc
bound
push
dec
aad
pushf
aam
aas
les
add
push
jle
loope
jnp
mov
cmp
sahf
push
and
mov
rorl
dec
jne
adc
add
iret
je
aad
and
in
into
sahf
mov
dec
shr
add
ret
test
xchg
cld
dec
movsb
xchg
int3
mov
test
bnd
iret
imul
cld
or
or
psraw
sahf
dec
je
inc
aad
js
lea
cs
xchg
shlb
xor
pop
xchg
dec
cmpl
lods
aad
enter
and
adc
insb
dec
cmpb
jl
xor
loopne
push
mov
scas
pushw
stos
and
cmp
adc
fcmovnb
push
call
int
mov
into
xor
lahf
stc
inc
movsl
jle
in
add
sub
fs
shrb
cmp
cli
xchg
push
mov
push
jle
push
shrb
jg
inc
add
adc
push
lea
fwait
scas
fisubrl
pop
clc
int3
add
mov
jg
outsl
cmp
popa
lods
sbb
enter
rol
mov
add
cmp
adc
movsb
mull
jl
dec
and
mov
push
sub
xlat
sub
btc
xor
sub
mov
or
xchg
js
inc
rol
fdivrs
lcall
rorb
je
fcomi
and
pop
iret
out
stos
jg
insl
push
jmp
pop
sbb
ja
mov
jl
or
fs
dec
mov
in
outsl
scas
add
jg
cs
subb
mov
sub
rolb
pop
inc
sarb
imul
mov
dec
inc
xor
jmp
sub
movsb
stos
sub
dec
jo
lret
ret
inc
pop
xor
mov
dec
rorb
stos
mov
data16
aaa
aam
dec
bound
jle
mov
and
and
in
enter
and
icebp
addr16
pop
or
pushf
sub
and
loope
iret
dec
jg
pop
fiaddl
hlt
cmpsl
movsl
sub
les
movswl
hlt
inc
call
jb
ftst
stos
jbe
sub
imul
sbb
out
push
repnz
int
dec
xor
xlat
lea
sub
lahf
cs
test
dec
clc
movsl
adc
jmp
stc
xorb
cltd
mov
stos
rorb
and
xlat
sbb
dec
sbb
rorb
xchg
cwtl
stos
jp
sbb
mov
je
outsb
lods
jb
pop
cli
dec
pop
push
sbb
ret
dec
test
mov
fisttpll
dec
in
mov
xor
sarl
movsl
je
repz
in
aaa
fdivrs
dec
jb
movsb
push
inc
lock
lahf
xchg
sbb
insl
cmp
xlat
and
in
rcrl
adc
pop
jae
sub
sub
stos
xor
cmp
lods
sub
push
scas
popf
jl
cltd
push
into
sarb
lret
push
mov
and
add
inc
cs
data16
iret
and
ja
movsl
pop
test
or
sbb
out
cmp
jns
pop
push
cmp
pop
xor
les
dec
notb
pop
int
aaa
jle
bnd
mov
push
mov
pop
push
lcall
sub
mov
test
mov
lahf
xor
in
in
jge
leave
outsl
add
sbb
pop
ficomps
mov
outsb
bound
das
pop
inc
push
xor
stos
push
cmpsw
pop
cmpsl
adc
xchg
cwtl
das
fldt
cmp
bound
or
mov
xchg
imul
aam
jle
adc
dec
aam
mov
mov
fadd
jno
push
test
mov
addl
mov
pop
mov
dec
mov
iret
sti
sub
cmp
fnsave
fldl
dec
icebp
into
push
jecxz
xor
dec
push
mov
push
negb
insb
dec
jl
pop
sahf
call
aas
dec
fldl
xchg
leave
insl
fildll
mov
or
inc
pop
mov
xchg
iret
pop
dec
subl
inc
jg
sub
pushf
lcall
lahf
dec
inc
or
dec
push
es
ds
jb
jnp
fst
cmp
mov
sti
mov
adc
inc
push
insl
ds
inc
adc
pop
dec
test
data16
add
pop
icebp
dec
test
push
mov
push
cmpsl
xchg
fisttpl
xor
divb
dec
and
adc
inc
mov
pop
movsb
push
mov
lahf
stc
lret
insb
adc
ds
iret
loop
inc
add
xchg
out
into
bnd
xchg
cmp
dec
cmpb
cs
in
push
les
and
loope
out
inc
dec
cmp
sbb
xchg
cmp
xchg
pusha
das
ret
push
aaa
cs
out
jno
dec
in
push
dec
ret
adc
xlat
dec
add
mov
iret
dec
xchg
ret
jb
dec
lods
dec
dec
sbb
negl
inc
mov
mov
hlt
xor
xchg
dec
sbb
arpl
and
in
dec
bound
pop
mov
add
dec
cmp
dec
sbb
or
iret
cwtl
test
ret
imul
xorb
mov
lock
hlt
popf
sub
sahf
loop
pop
in
imul
lcall
out
addr16
push
lods
popf
dec
and
jne
test
xor
sbb
jecxz
pop
dec
cmpsb
adc
outsb
push
mov
pop
mov
lods
frstor
mov
mov
rorl
push
dec
lret
imul
sbb
js
outsb
fistpll
dec
or
es
jle
iret
sbb
xor
loopne
jmp
dec
pop
mov
cmp
popa
mov
dec
sti
or
je
or
cmp
xabort
pop
xchg
icebp
mov
mov
iret
hlt
pop
pop
or
arpl
int
dec
pop
pushf
dec
xor
xchg
sub
testb
into
mov
cmp
dec
dec
lock
mov
je
jmp
movsl
subl
and
push
pop
fdiv
loop
or
sbb
fsubp
sub
dec
adc
sub
cmp
sbb
out
mov
jl
pop
pusha
rcrb
ffreep
es
lea
fists
and
inc
or
js
iret
mov
sub
fsubl
fisttpl
sub
mulb
int3
inc
dec
scas
jecxz
cmp
or
push
dec
pushf
push
push
bound
xchg
insl
adc
lods
cmp
and
sub
lock
sbb
sub
jno
sahf
lcall
stos
pop
jbe
dec
sahf
sbb
mov
arpl
into
sbb
lret
shlb
sahf
ret
ss
dec
xchg
test
cmpsb
inc
mov
sbb
js
jmp
mov
jle
sti
dec
test
xchg
cvtdq2ps
jmp
out
shll
sub
push
and
shr
aas
cmpsb
js
dec
cmp
or
inc
arpl
mov
mov
ficoms
adc
outsl
mov
jbe
outsb
dec
cs
lock
pop
pop
dec
test
add
add
xchg
cmp
dec
ret
cli
fisubs
sub
out
daa
mov
loope
dec
idivl
dec
inc
jl
adc
sbb
xchg
pop
adc
ret
pop
dec
jae
lds
dec
faddp
dec
lea
or
xchg
rep
inc
mov
jb
jl
js
sub
stos
cmpsl
shrb
in
xchg
stos
sbb
push
aam
int
in
jb
jp
jle
lods
cmp
xchg
inc
std
xchg
in
addr16
inc
aam
out
and
pop
loop
jbe
mov
cmp
std
scas
sub
fwait
and
daa
pop
pop
test
mov
jno
pushf
jbe
or
and
pop
xchg
rolb
push
test
xchg
rolb
test
pop
dec
clc
push
mov
push
mov
bound
negb
mov
pushf
xor
es
ds
iret
out
cmpsl
fsubrs
mov
push
lods
adc
int3
mov
mov
xlat
dec
sub
fcompl
repnz
or
setp
inc
jg
cltd
sub
jnp
pop
loopne
cmp
divl
push
cmp
xchg
adc
cmc
lahf
fidivrs
fisttps
sahf
jns
fidivrs
repz
dec
stos
xor
test
gs
xor
iret
into
cwtl
out
stos
xor
cmp
fiaddl
mov
out
sub
addl
jnp
xor
inc
inc
stos
sub
xchg
dec
fmull
jmp
mov
inc
xchg
fwait
dec
or
xor
imull
mov
sbb
enter
clts
dec
rorl
outsl
in
push
into
cmp
imul
testb
iret
cmp
cmp
pop
fmull
frstor
push
mov
outsb
fcomi
xor
mov
xor
sub
je
push
cmp
push
mov
mov
jle
dec
mov
cmp
pmullw
aad
xchg
push
push
xchg
out
jl
in
fstpt
sarb
outsb
dec
adc
add
xchg
in
jns
pop
mov
xchg
mov
jns
sarl
cs
clc
fstpl
addr16
jecxz
shlb
je
cmp
push
jecxz
jle
mov
lcall
movsl
subb
repnz
mov
imull
inc
pop
dec
jg
rcrb
adc
inc
rorb
pop
jg
cmpsb
add
mov
mov
jle
add
ficoms
mov
movaps
test
mov
cmp
into
inc
jg
cmp
stos
in
inc
mov
pop
ss
or
pop
fildll
int
icebp
je
nop
push
mov
shlb
pop
add
push
xchg
and
mov
mov
stc
xor
xchg
dec
cmp
fsubl
xchg
ffree
and
sbb
clc
mov
scas
sub
jg
inc
jmp
sbb
inc
cmpsb
sub
xor
add
dec
push
hlt
xchg
and
iret
fdivl
jle
outsl
leave
or
dec
mov
pop
jae
rclb
icebp
mov
shl
xor
mov
mov
and
and
div
std
mov
shlb
cmpsl
popf
lods
sub
xchg
dec
outsl
aad
cmpb
sti
push
gs
fwait
push
or
lods
push
push
outsl
inc
jle
fs
popa
cmp
test
jg
inc
lret
jle
in
mov
sbb
mov
jmp
mov
sti
adc
lods
and
lock
xor
stc
cmp
cmpsl
inc
jl
push
push
incb
pop
jl
out
adc
mov
adc
jge
hlt
mov
sub
test
or
inc
jl
aas
je
inc
dec
cmpsl
scas
dec
ljmp
dec
daa
enter
arpl
xchg
add
jmp
insb
pop
jl
inc
or
dec
sbb
dec
xlat
or
cmp
adc
cmp
inc
push
xlat
and
rcrb
pop
fistpl
repnz
pusha
dec
js
test
lret
outsl
mov
fs
mov
cmp
in
cmpb
or
and
pop
int3
jl
mov
test
mov
clc
mov
add
aad
cmovg
in
mov
leave
jge
scas
jns
mov
aam
cmp
outsl
push
repnz
push
pushf
or
mov
dec
jno
icebp
test
fsubrl
test
add
jl
test
stos
xchg
cmp
inc
in
jl
or
jbe
or
dec
repnz
add
sahf
hlt
dec
jl
test
sub
lods
push
pop
push
xor
aaa
insl
sub
fsubr
pop
xlat
bound
movsb
lea
cmp
mov
mov
adc
dec
sub
adc
sub
cli
lds
daa
jle
cmp
inc
mov
push
inc
into
dec
mov
pop
jle
sub
stc
fstl
lret
adcb
dec
aad
call
mov
xchg
testb
out
sti
rorl
test
jns
jnp
dec
lahf
cltd
jecxz
fbld
decl
lods
icebp
and
xchg
popa
dec
xchg
in
mov
adc
xchg
cmp
inc
push
fwait
add
pop
repz
cs
or
std
fnstcw
cmp
popa
jl
insl
testl
xchg
adc
sbb
dec
push
xchg
fisubrl
xor
pop
cmp
cmpsl
or
or
push
jae
dec
jmp
inc
mov
mov
dec
dec
lret
test
scas
mov
mov
mov
dec
add
fistpl
cmp
fisubs
push
mov
dec
and
sti
jge
repnz
stos
xor
fistps
rclb
pushw
dec
shll
pusha
enter
or
mov
aas
mov
xchg
sub
dec
test
jae
push
imul
and
cmp
sub
xlat
hlt
dec
ja
mov
dec
mov
adc
outsb
mov
mov
or
jle
xor
aad
xchg
dec
je
mov
push
mov
sub
jns
pushf
dec
mov
outsb
scas
mov
xor
adc
dec
sahf
aaa
iret
xchg
inc
mov
inc
dec
ret
inc
push
push
dec
inc
test
xor
dec
outsb
xor
lea
mov
and
sub
xor
push
inc
ret
fs
sub
push
mov
jno
icebp
sbb
in
mov
arpl
pop
or
mov
lret
fwait
sbb
and
jne
dec
stos
std
outsl
xchg
sub
adc
into
sub
rcr
test
icebp
mov
dec
add
xor
movsl
stos
jbe
mov
lods
cmp
les
aad
mov
jl
movsb
dec
mov
ss
into
into
cltd
test
and
jbe
mov
and
inc
iret
and
inc
popa
or
dec
scas
lret
sub
inc
add
mov
jmp
inc
pop
dec
add
push
cmpsb
dec
in
ror
nop
mov
and
mov
sub
dec
ds
rorl
adc
dec
ljmp
scas
dec
xchg
push
divl
pop
inc
dec
fcmovbe
inc
push
lea
add
cmp
rolb
mov
dec
nop
movsl
pop
push
filds
daa
and
push
repz
pusha
ret
in
inc
or
ficoml
mov
fmul
inc
in
inc
cmp
popa
das
jb
jle
aas
xor
pop
sub
mov
fistps
add
or
jl
push
push
push
ret
aam
adc
mov
push
and
pusha
adcb
pop
out
cmpl
push
jl
mov
adc
pop
jl
and
xor
jmp
addb
js
dec
cmc
iret
sbb
dec
inc
jge
mov
fisubs
dec
mov
outsl
hlt
push
dec
and
sarl
std
push
push
out
insb
scas
jle
sbb
dec
pushf
lahf
test
jbe
push
pop
pop
sbb
dec
insl
mov
dec
pushl
sarl
mov
je
or
es
outsl
dec
xchg
dec
sahf
cld
movsb
std
add
jns
cmc
sbb
roll
adc
and
and
pusha
notb
push
ja
jmp
mov
mov
leave
push
jp
call
xchg
movsb
popa
dec
jmp
xor
fisttps
push
gs
push
and
dec
shll
scas
lock
ja
subl
ss
dec
mov
fcomps
pop
adc
scas
mov
pop
push
data16
add
add
push
in
add
cltd
dec
push
or
inc
outsb
roll
sbb
scas
aam
dec
call
mov
sub
test
sahf
inc
cli
dec
push
cmpsl
xchg
test
dec
xchg
hlt
imul
stc
and
mov
mov
mov
gs
out
int3
movsl
out
repz
dec
cmp
lahf
jae
outsl
inc
jmp
cmpl
mov
lods
mov
xchg
dec
inc
pop
cmpsb
hlt
push
dec
inc
pop
jnp
jp
negb
test
rcr
mov
sub
xor
sti
sub
rorb
cmp
stos
icebp
inc
sbb
jl
adc
hlt
cmp
or
nop
lock
testl
cmpsb
pop
repnz
cmp
and
jg
push
dec
push
jbe
jp
lock
shlb
xchg
mov
pop
dec
xor
push
mov
mov
pop
mov
addl
jmp
inc
dec
or
pop
mov
xchg
cmovle
xchg
mov
adc
pop
fmuls
push
inc
in
fstpl
cmp
hlt
xchg
test
dec
dec
cmp
test
ffree
mov
mov
test
iret
mov
pop
arpl
dec
lds
and
jbe
xchg
int3
jo
add
test
mov
jg
and
sbb
ljmp
lods
dec
rorb
insb
std
xor
cmp
stos
inc
mov
dec
xchg
push
or
dec
jge
sbb
and
and
jnp
inc
imul
das
jmp
sahf
out
mov
dec
dec
adc
adc
pop
add
xchg
daa
adc
push
sti
sub
inc
imul
jns
push
sub
pop
cmp
into
call
enter
aad
cs
xor
sub
xor
dec
mov
out
imul
inc
xchg
arpl
sarl
pop
xlat
dec
leave
adc
xchg
mov
xchg
dec
cmc
inc
push
bound
lahf
jae
cmp
or
movsl
pop
add
bound
xor
adc
mov
xchg
mov
pop
xor
mov
mov
sub
add
inc
repnz
add
pop
pop
pop
cltd
je
jno
ret
out
in
lret
sbb
cmpsl
lcall
lret
dec
jle
popa
into
imul
out
cmp
mov
scas
pop
sti
fdivs
jl
cmp
lcall
inc
pop
jno
stc
ficomps
sub
enter
in
lret
mov
cmp
arpl
sti
adc
xor
cmp
jns
int
mov
lret
sbb
leave
xchg
sbbb
and
mov
fsts
iret
jmp
cmp
push
mov
pop
jle
in
jg
arpl
adc
xor
jl
mov
push
outsl
push
fs
push
pop
shll
mov
dec
fucomi
faddl
data16
push
and
cmp
inc
adc
jno
ret
and
psubw
jle
sbb
scas
fsubl
adc
adc
pop
sub
dec
mov
bound
aas
icebp
push
mov
push
or
mov
pop
imul
icebp
cmp
fwait
dec
sbb
jmp
cmp
fs
popf
sahf
into
inc
mov
nop
fwait
aaa
mov
dec
clc
sub
fsubr
int
xchg
adcl
mov
out
cmp
cmpsl
out
outsb
pop
jge
pop
cmp
mov
or
add
cmp
pusha
lds
popf
fcoml
mov
xor
sub
call
repz
hlt
mov
imul
popf
bound
and
or
inc
mov
ljmp
cmp
push
mov
cmpsl
dec
and
jle
loope
or
lock
pop
cmp
add
dec
jmp
test
repnz
fists
sbb
fwait
movlps
mulps
jg
into
or
movsb
dec
loopne
repnz
jns
jnp
fs
cmp
push
pop
mov
lret
or
dec
aas
xchg
push
xlat
mov
shlb
jecxz
push
dec
cwtl
int3
enter
int
dec
cmpsb
imul
movsb
jg
fsubrs
iret
and
jmp
add
cmp
mov
mov
mov
cwtl
jle
arpl
xchg
xor
xor
iret
pop
aam
push
adc
data16
insb
lods
mov
mov
dec
sbb
jns
in
fcmovu
lcall
sub
xchg
mov
stc
mov
jae
lods
sub
push
cmpsl
int
xor
les
push
scas
lea
std
jmp
add
mov
sub
jge
xchg
cld
mov
dec
adc
ret
out
mov
or
fiaddl
ja
sbb
add
jmp
sub
dec
or
xchg
jle
mov
rcll
call
mov
cmc
push
mov
pop
sbb
sahf
cld
into
leave
xchg
es
mov
mov
das
push
pop
mov
adc
pop
add
in
jne
leave
fcomps
leave
inc
inc
cmp
mov
sti
popf
push
mov
sub
push
cmp
test
jbe
or
int
inc
jno
dec
call
add
dec
ljmp
jne
dec
nop
das
inc
cmp
lea
dec
sub
xor
decl
xchg
scas
out
inc
mov
adc
mov
pop
xlat
iret
add
addb
repz
bound
idiv
cmc
dec
mov
out
adc
repz
fbld
jbe
int
cmp
add
dec
daa
mov
jne
inc
push
xchg
mov
mov
leave
push
pusha
fldcw
cmp
push
cli
out
inc
and
adc
dec
adcl
mov
sub
adc
iret
cld
dec
insl
push
and
cmpsb
cmp
xchg
push
stc
loop
cmp
mov
and
ljmp
scas
push
push
fldenv
or
shr
enter
mov
xor
inc
inc
movsl
xor
data16
cs
cli
paddd
mov
dec
fwait
xor
cs
mov
pop
movq
mov
cld
xchg
cmpsl
idivb
inc
mov
add
mov
dec
mov
test
jg
cmp
jl
xor
adcb
lds
jl
pop
stos
sbb
mov
lock
push
mov
cld
or
dec
adc
push
cmp
jl
je
pusha
nop
jo
imul
pop
scas
adc
not
mov
iret
movsl
push
insb
xor
jl
js
inc
push
mov
scas
cmp
ret
sub
dec
aad
pop
sarb
dec
fisubs
pop
daa
mov
jecxz
clc
dec
fucomi
iret
mov
pop
jmp
test
hlt
or
add
inc
fsubr
xor
popa
lahf
std
and
inc
pop
rorl
shlb
adc
inc
rol
dec
lods
fldl
and
push
dec
les
hlt
bound
sub
inc
cmp
in
cmp
js
dec
lahf
sbbb
fcompl
sub
mov
lods
lahf
ret
ljmp
gs
adc
dec
add
rclb
ljmp
xchg
das
mov
fsubrl
mov
jno
jl
nop
mov
cwtl
fwait
add
dec
inc
jl
jns
cs
push
jg
out
jne
jl
dec
sub
outsb
inc
out
bound
xlat
jle
ljmp
push
loope
dec
push
mov
inc
into
mov
inc
and
mov
test
lods
adc
sbb
dec
or
jp
repnz
aam
loop
sbb
cmp
int3
add
mov
mov
fiadds
rclb
stos
fcmovnbe
cltd
dec
jl
imul
popa
and
inc
out
lock
es
push
or
and
or
dec
jae
adc
inc
sub
insb
arpl
add
das
sbb
lret
dec
cltd
cmpsb
adc
push
aad
jle
mov
cmp
jl
cmp
sub
out
jecxz
xor
shlb
sub
popa
pop
rcrl
pop
sbb
adc
scas
pop
cmp
sub
push
push
jo
xor
jb
sub
lds
faddl
into
and
jbe
in
pop
les
dec
adc
push
mov
jmp
add
pop
xlat
mov
dec
adc
ret
adc
and
out
dec
pop
scas
shrb
or
into
int3
fs
pop
and
shlb
dec
jno
mov
push
pop
push
sub
adc
add
movsl
dec
xchg
sub
je
scas
hlt
xchg
push
jl
lret
test
add
inc
js
sub
int
stc
fists
jnp
stos
enter
lcall
mov
sub
push
sub
cmpsl
dec
test
sbb
push
pop
xchg
xchg
outsb
push
xor
jl
inc
push
repnz
fcomps
rep
out
enter
add
add
out
sbb
gs
addr16
mov
jge
dec
mov
and
add
into
adc
push
dec
lock
push
xchg
push
fstl
hlt
dec
or
imul
adcl
add
and
dec
aad
cld
test
movsl
push
shll
jnp
mul
sbb
outsb
mov
enter
lret
or
dec
xor
add
inc
fwait
dec
int3
fisttpll
mov
fstl
inc
adc
cs
push
pop
insb
xlat
in
dec
lahf
mov
dec
jo
mov
mov
xor
push
push
out
dec
mov
es
cmp
inc
in
inc
lods
lods
mov
scas
popl
notl
das
pop
push
ret
aas
fimull
mov
dec
or
xor
jnp
jmp
int
inc
out
stc
or
pop
mov
dec
mov
orl
or
adc
ljmp
cli
clc
lods
cmpsl
mov
and
xchg
cmpsb
sarl
aam
xchg
rorl
je
dec
mulb
or
dec
push
outsl
push
sub
push
dec
push
rcll
mov
daa
push
call
out
sbb
jae
ficompl
rcl
inc
ror
sti
xlat
or
xor
fldcw
mov
mov
inc
sbb
xchg
mov
and
ror
dec
xchg
ljmp
jg
cmovle
and
xor
out
add
cld
jp
out
imul
jno
inc
int3
cmp
hlt
dec
dec
daa
adc
imull
xchg
ficoms
nop
or
dec
inc
adc
sti
jbe
and
shll
out
push
imul
push
adc
movsb
das
into
gs
roll
mov
mov
mov
nop
jnp
out
aas
push
cmpsl
dec
jg
pop
das
inc
les
xchg
dec
sarb
jno
cltd
test
stc
add
mov
dec
movsb
mov
cmp
pop
test
fwait
dec
outsb
mov
scas
movsb
add
notl
mov
aaa
popa
mov
lods
adc
int
insl
cmpsl
jmp
sbb
mov
jb
dec
add
imul
data16
jge
popa
movaps
mov
mov
dec
pop
std
movsb
jg
adc
xor
mov
adc
ret
dec
adc
jmp
adc
mov
cmp
ret
lret
sti
push
imul
pop
xchg
jne
xor
dec
aam
inc
imul
aaa
dec
cmp
fucomp
dec
lea
test
es
jp
mov
dec
mov
sbb
dec
or
fildl
push
mov
mov
ss
mov
repz
xchg
aas
ljmp
in
idivl
shlb
sbb
xchg
ret
push
es
in
outsl
dec
sub
cmp
lods
sbbb
movb
dec
push
sbb
or
test
test
mov
jge
dec
cmp
call
dec
pop
leave
data16
jl
xor
popf
inc
xchg
int
cmpsb
sub
out
sahf
pop
dec
out
repz
fistpl
dec
mov
mov
mov
jne
arpl
movsb
jmp
push
push
sarl
dec
xor
inc
andnps
cmp
adc
jbe
sbb
dec
push
and
cmpsb
in
inc
loop
add
push
jo
dec
cmp
sub
loopne
dec
pop
test
popa
pop
and
mov
jge
push
mov
in
ficoms
test
push
mov
test
subb
jno
fidivrs
cmp
jb
dec
dec
mov
loopne
flds
leave
push
dec
and
and
jmp
dec
gs
aam
push
mov
dec
xor
scas
jae
sub
sub
fnsave
cltd
inc
push
aad
jns
adc
icebp
adcb
daa
dec
ret
sti
rclb
test
xchg
push
mov
or
out
xchg
test
shrb
and
push
popa
push
sbb
je
cmpsb
stos
movsl
push
into
ja
pop
dec
pop
push
out
inc
adcl
test
dec
les
push
orl
pop
std
or
mov
aaa
je
les
out
sbb
lods
jl
lds
push
mov
dec
sbb
dec
fisttps
jae
dec
mov
xchg
sbb
mov
jo
pop
pop
in
mov
shrl
inc
sbb
cwtl
cld
mov
jae
mov
stos
or
jbe
push
dec
dec
fdivrl
ret
xor
int3
iret
daa
mov
out
sarl
xchg
clc
fwait
pop
dec
fwait
repz
scas
lods
xor
outsl
jb
ret
cld
inc
xchg
int3
sbb
inc
dec
pop
mov
cltd
pop
out
dec
xor
imul
test
ds
xlat
insl
lds
mov
divb
outsb
cmp
sub
inc
pop
js
cmp
jo
mov
bound
sbb
cmpsw
cld
jmp
rcl
cmp
pop
sbb
mov
mov
fs
add
push
mov
cmpsl
mov
jmp
jp
pop
pop
dec
test
push
dec
dec
sub
jg
cli
ja
jle
inc
aad
outsb
pop
das
push
xchg
outsb
inc
scas
push
jl
xchg
sub
xor
ja
inc
inc
jo
jb
add
inc
add
loope
xor
fs
push
jge
lcall
iret
loope,pt
and
add
sbb
jl
mov
xor
movsl
mov
jge
jle
ficoml
and
imull
mov
out
xor
jb
cmpsb
aad
pop
mov
pop
dec
or
sti
xor
adc
jge
iret
inc
push
xor
pop
jno
xor
stos
jle
fcoml
jnp
xchg
add
in
push
hlt
lds
sub
out
sub
stos
test
cmp
test
xor
aaa
cld
adc
fsubrl
cld
dec
jg
xchg
jmp
icebp
in
mov
pop
sahf
cmpsl
aas
jge
pop
mov
jbe
in
cmp
ja
push
push
mov
xor
jp
add
cmp
push
stos
data16
adc
cmc
add
dec
pusha
mov
cmp
movsb
lcall
xlat
ret
fs
lods
jp
minps
dec
cmp
gs
sahf
gs
pop
fs
mov
arpl
outsl
xor
pop
jl
push
cmp
push
mov
jb
or
into
xor
fiadds
loope
cltd
cs
pop
loop
mov
fisubl
jl
ret
stos
jne,pn
adc
ss
lods
mov
dec
pop
and
notb
insb
ss
lods
int3
cmpb
inc
push
add
rclb
std
out
adc
cmp
mov
divb
cmpsb
enter
inc
push
xor
push
cmp
jmp
push
int3
mov
jl
sbb
lods
xchg
cltd
cld
jnp
cmp
ljmp
dec
push
jle
fidivrs
in
cmp
imul
aaa
and
test
jg
aad
mov
dec
mov
adc
push
loopne
inc
cmpsl
jl
jbe
movsb
push
je
cmp
xchg
jge
loope
push
push
cmp
push
xchg
ret
imul
jbe
and
sub
lea
dec
out
jg
insl
cmp
sub
mov
push
shrb
inc
pop
iret
xor
xor
jl
xorb
stos
fnstcw
push
xchg
push
out
inc
cmp
cltd
lods
call
pop
cwtl
inc
fs
mov
cmp
xchg
dec
pusha
mov
jb
inc
mov
int
insb
pop
jge
mov
sbb
sti
cld
aas
int
jnp
lret
inc
xchg
sbb
leave
insb
cmp
sub
push
sbb
fisttps
sbb
push
dec
aas
popa
jl
ret
pop
xchg
push
lds
xor
mov
popf
adc
dec
or
lods
push
sub
test
jmp
dec
sub
ds
fiaddl
add
dec
inc
das
int3
jmp
dec
aam
sub
test
push
or
sbb
in
scas
fsubl
cmp
xchg
fisubrs
xlat
add
or
xor
mov
dec
cmp
jmp
dec
xor
into
dec
in
xchg
arpl
mov
sub
dec
das
js
pop
adc
push
fisttpll
push
inc
jae
pop
subl
clc
pop
or
or
jo
adc
inc
push
mov
dec
test
inc
adc
lds
pop
mov
leave
rolb
mov
rolb
outsb
xchg
inc
jns
dec
les
mov
adc
mov
add
jns
sub
pop
loopne
lods
sub
in
dec
mov
gs
pop
jg
test
mov
popf
push
lock
add
fidivrl
pop
subb
mov
fs
cmp
xor
inc
and
int3
mov
mov
cwtl
ljmp
dec
stos
push
sub
xor
or
pop
lahf
mov
sar
mov
xor
cmp
dec
xor
shr
push
push
inc
jle
sub
test
hlt
gs
rorb
add
adc
push
mov
js
mov
call
pop
outsl
push
sbb
shrb
fdivl
jp
jg
jmp
jp
rol
scas
and
out
cmpsl
aas
add
cmp
rdpmc
daa
xor
test
inc
inc
xchg
sub
mov
and
push
add
jb
inc
lods
lcall
mov
adc
fdivrs
cli
in
rcrb
sti
aam
into
mov
jl
in
fsubs
cmp
les
cwtl
mov
ret
imull
xchg
cs
cmp
popa
mov
lods
inc
sarl
jo
jg
out
out
addb
outsb
scas
xchg
repz
and
call
clc
xchg
push
push
push
incl
imul
fstpt
stos
pop
test
ret
sub
add
andb
add
push
cs
mov
adc
ret
mov
fidivs
ljmp
jle
bound
push
test
adc
icebp
dec
mov
xor
sarb
push
jl
mov
mov
scas
aaa
inc
popa
icebp
stos
je
sub
adc
mov
and
aaa
and
jp
fistps
dec
mov
jmp
jle
jp
add
iret
hlt
cmp
out
dec
and
sub
mov
and
ljmp
xor
mov
jp
xor
mov
rorb
mov
cmc
push
xor
mov
test
test
arpl
dec
jle
fwait
mov
cmc
jl
outsl
cmp
pop
ja
sahf
push
jge
lds
loopne
sub
dec
sub
push
mov
cmp
sub
xchg
xchg
lahf
les
rcrb
inc
adc
push
iret
in
mov
sahf
xchg
cmp
add
adc
and
adc
in
pop
lcall
mov
pop
jecxz
dec
ficompl
cli
pop
sub
pop
outsb
pop
dec
in
roll
dec
outsl
jns
rclb
dec
push
jo
jmp
dec
call
pop
sbb
dec
and
mov
dec
mov
push
addb
jmp
adc
dec
push
movsl
push
lods
aad
fimuls
pop
movsb
or
inc
dec
mov
ja
sub
dec
lret
cmp
jns
push
pop
rcll
adc
dec
je
cmp
mov
dec
leave
xchg
out
sbb
jae
pop
iret
frstor
add
mov
mov
repnz
mov
sbb
jb
fbstp
ja
inc
jbe
mov
or
jg
scas
cmpsb
xor
jae
fisttpl
adc
dec
rol
loop
mov
add
mov
push
jbe
fs
sbb
dec
inc
pusha
cld
imul
cmp
mov
mov
cmpsl
dec
lods
and
jbe
dec
in
cs
lahf
test
js
cmp
cmp
sbb
test
ds
pop
or
out
out
mov
jecxz
inc
dec
or
and
lock
sbb
das
mov
loopne
mov
aam
daa
ljmp
cmpsl
adc
jmp
arpl
bound
out
or
outsb
push
push
cmpsb
sbb
push
jecxz
scas
in
hlt
sahf
lahf
xchg
inc
xor
or
and
push
mov
mov
outsl
push
sub
leave
mov
push
inc
dec
cmp
sbb
cmp
mov
mov
cmpb
data16
aam
sub
add
add
dec
test
or
cmpsb
dec
push
xchg
jne
jg
arpl
xor
dec
inc
sub
mov
daa
push
dec
and
insb
xchg
mov
xorl
dec
xor
pushf
mov
push
xor
imul
sti
or
mov
mov
adc
sub
xchg
enter
js
cmc
test
das
scas
stos
repz
test
subl
jbe
and
out
cmp
sti
mov
mov
idiv
adc
test
out
jle
mov
out
popa
push
add
das
dec
int
mov
jle
shr
jp
ja
ds
cmp
pop
in
push
jmp
scas
jle
jg
and
daa
xlat
movsl
lods
enter
dec
mov
daa
stos
inc
jb
imul
test
cmp
add
iret
xor
cmp
and
setno
add
push
cmp
jl
sti
outsb
sbb
xor
test
movsl
mov
mov
mov
jp
fcoml
std
mov
mov
push
push
fists
ss
hlt
out
popa
mov
dec
dec
pusha
cli
sub
dec
mov
sbb
lods
sub
test
inc
das
xchg
out
xor
jge
mov
out
outsl
dec
push
add
popf
pop
in
and
add
mov
mov
insl
push
dec
jg
ret
and
jno
sarl
pop
decl
mov
mov
adc
arpl
xchg
mov
inc
ret
bound
cld
cs
fwait
lock
and
cltd
jg
xor
push
xchg
mov
test
jg
mul
dec
pushf
cmp
lods
pop
sub
pop
lods
sbb
insl
xchg
xor
sbbb
dec
xor
push
inc
aaa
pop
fcoml
popa
xchg
fidivrl
add
loopne
movsl
dec
mov
sbb
or
mov
lock
ret
and
mov
jp
pop
xor
mov
movd
iret
push
arpl
dec
test
lock
add
loope
ja
mov
xor
dec
and
and
xchg
mov
sub
icebp
loope
sbb
jge
shlb
bound
cs
movsb
shll
pop
das
push
jle
push
adc
enter
cmp
iret
int
nop
aam
pop
lret
daa
dec
outsb
dec
ffreep
sbb
lahf
adc
add
movsb
pop
inc
push
loopne
jnp
scas
adc
ja
orb
out
sahf
jmp
push
sub
insl
push
addr16
mov
dec
fsts
inc
sub
mov
mov
mov
pop
add
std
cwtl
popf
das
dec
gs
iret
jg
xor
or
add
mov
cs
xchg
push
lds
insb
repz
xchg
dec
js
aad
lret
cmp
stos
mov
push
adc
lock
jl
dec
xchg
gs
inc
dec
dec
jmp
es
rorb
xchg
mov
xchg
adc
cs
xchg
pushf
pop
or
cmp
outsl
cmp
dec
lret
into
jp
mov
dec
sub
bound
inc
rcr
dec
lock
jne
loopne
cld
fwait
dec
stos
test
jmp
adc
aam
sbb
lock
mov
sub
and
loopne
lea
sbb
rcrl
push
sub
pop
mov
and
inc
iret
fstp
scas
mov
daa
sbb
hlt
dec
xchg
adc
add
inc
loop
dec
ret
iret
push
test
pop
mov
pusha
xor
lock
mov
lcall
xor
push
aas
mov
inc
cwtl
pop
fdiv
leave
cmp
stos
or
xor
xor
orl
imul
test
iret
scas
fst
movsl
repz
fldt
dec
out
imul
dec
push
rcl
jmp
addr16
jns
sbb
lea
xchg
dec
and
push
pop
xchg
jb
pop
cmp
sbb
add
pop
cwtl
test
std
mov
dec
xor
and
jge
fs
cmp
inc
into
scas
xchg
jmp
pop
mov
insl
push
xchg
mov
dec
sub
push
pop
sub
je
mov
dec
aad
ret
jae
shlb
into
dec
dec
pop
orl
or
push
div
inc
lds
or
push
mov
mov
mov
js
fldl
xchg
fcmovnu
mov
btr
or
or
pop
gs
gs
mov
dec
sub
push
shr
jecxz
in
hlt
jle
push
fcoms
cmp
ds
bound
and
lret
repnz
push
cmc
sahf
xchg
shl
cltd
sub
shll
push
cmp
push
cmpsb
xchg
in
fidivrl
unpcklps
xchg
jle
adcl
mov
cmp
inc
jmp
dec
cli
ljmp
or
xchg
cltd
cwtl
add
push
jl
adc
cmp
aas
adcl
push
or
nop
xor
inc
dec
pushf
cmp
sbbl
out
cmpb
cwtl
std
fisttps
jmp
in
and
into
adc
into
test
jp
or
xor
sub
dec
jno
pop
scas
pop
jns
inc
stos
pop
add
iret
inc
push
sub
xor
test
or
push
mov
jle
cmp
and
jl
jns
sarl
xchg
test
pusha
dec
dec
cmp
add
pushf
mov
dec
mov
pop
jp
jmp
inc
inc
jnp
push
lret
fsubs
sub
inc
push
dec
add
cmp
dec
and
push
jo
imul
xchg
ror
push
and
push
popa
sub
push
mov
adc
movsl
xor
or
push
into
stos
pop
mov
mov
dec
cmpsl
inc
mov
xlat
sub
jne
rcrb
repnz
dec
adc
pop
cmp
xor
imul
add
xor
in
es
push
inc
mov
pusha
out
sub
pop
sbb
cmpsb
das
push
rorb
into
clc
mov
xor
scas
xlat
loope
dec
js
mov
repz
leave
aas
lret
mov
dec
popa
adc
dec
cmp
mov
dec
push
lret
cmp
sarl
dec
adcl
push
dec
fnsave
cmp
les
in
jmp
mov
xor
pop
icebp
add
test
jp
pop
push
xchg
jbe
fisttpll
cmp
xchg
fildl
or
sbb
out
mov
fs
outsb
arpl
int3
shlb
mov
dec
aad
data16
into
and
push
jb
jno
jmp
dec
mov
or
add
dec
in
cltd
repnz
cmc
dec
ja
cmp
dec
add
leave
pop
dec
das
in
movsl
hlt
mov
add
cs
lahf
mov
mov
dec
test
sahf
adc
shl
pop
clc
sub
dec
xchg
loop
je
aaa
mov
or
pushw
into
jo
lds
shrb
pusha
ds
loop
xlat
jg
cmp
jge
cwtl
out
inc
adc
mov
jo
jae
fcmovnbe
cli
aas
dec
push
jecxz
movsb
xchg
rorb
cwtl
jl
pop
inc
or
push
dec
dec
pop
test
jge
outsl
outsl
sbb
cmpsl
add
mov
or
ja
mov
cmpsb
sbb
inc
loop
lret
pushf
xchg
outsb
pop
dec
adcl
addr16
add
mov
iret
inc
push
fisubrs
cmpsb
mov
mov
into
test
xchg
sub
sbb
popa
pusha
dec
jno
addr16
pop
repz
inc
push
les
pop
in
shl
stc
iret
and
call
jle
mov
xsave
add
mov
pop
push
imul
push
les
fs
daa
inc
jo
scas
dec
and
xor
shl
push
push
push
sub
pop
mov
inc
xor
dec
adc
mov
push
cmp
pop
int
mov
xor
insl
pusha
dec
jae
pop
mov
pop
sahf
inc
aaa
inc
dec
out
jbe
push
inc
inc
cmpb
sbb
sbb
addr16
in
rcr
sub
xor
dec
ljmp
sbb
aam
mov
dec
adc
out
push
xor
movsl
and
int
lret
jecxz
push
inc
jo
jl
and
mov
cli
xchg
das
ficomps
push
sahf
cmc
push
outsl
xor
mov
jg
jae
iret
xor
mov
fwait
cmp
nop
pop
pop
add
jns
loopne
imul
movsb
jl
daa
fimull
sti
jle
inc
lods
clc
in
jns
test
jl
mov
sub
pop
loop
pop
out
jg
int3
cmc
lods
sub
pop
shll
xchg
lret
xchg
dec
out
sahf
mov
daa
jae
sarb
aaa
mov
or
fcmovne
push
arpl
call
imul
and
mov
jno
iret
iret
add
dec
xchg
sbb
add
test
ja
into
add
pop
adc
adc
pop
pushf
dec
dec
fisttps
ficomps
int
jp
mov
cltd
push
sub
cld
xchg
leave
arpl
sbbb
inc
pop
dec
imul
outsb
fcmovnu
lret
std
dec
and
mov
sbb
mov
adcb
sarb
push
es
mov
sbb
mov
cmp
dec
xchg
fwait
jno
sti
ds
inc
push
testl
adc
add
xor
in
pop
push
sub
arpl
inc
aaa
pop
cli
lods
push
dec
pop
mov
ja
pminsw
cmp
inc
push
xorb
outsl
mov
dec
jns
sbb
push
xchg
cs
dec
ljmp
hlt
adc
repz
fistl
pop
insb
inc
adc
dec
scas
aaa
hlt
and
pop
dec
sbb
dec
lret
pop
sub
inc
xchg
lods
lock
sti
xor
ret
xlat
cs
add
pop
adc
int
shlb
scas
mov
or
or
dec
pop
add
cli
sbb
jle
rorl
fisubrl
lds
mov
push
xor
ds
dec
or
dec
cmp
and
jb
mov
add
mov
lahf
arpl
push
jmp
out
mov
dec
je
cmp
dec
jp
test
aad
cld
out
popa
loop
and
inc
push
dec
mov
jmp
dec
arpl
gs
inc
mov
cmp
outsb
gs
orl
lcall
iret
out
jl
cmp
inc
cmpl
sub
inc
jno
in
push
loope
gs
lea
adc
leave
lock
imul
test
dec
cmp
add
movsl
dec
sbb
sub
shl
inc
and
dec
sbb
andb
adc
loop
jle
and
cmp
test
and
subl
jle
in
bound
mov
jl
push
icebp
pop
add
jmp
sub
pop
pusha
add
push
sub
ljmp
data16
lret
dec
cmp
xor
dec
ss
adc
in
test
add
popf
clc
repz
jle
sbb
inc
jmp
fwait
aam
movsl
popf
out
out
push
loope
mov
cwtl
hlt
out
mov
mov
adc
dec
jg
testl
daa
std
insb
push
decb
push
adc
lea
mov
int3
push
jmp
cmpsb
sub
jl
pop
mov
test
add
mov
test
inc
in
fmul
popa
push
leave
mov
aad
outsl
add
push
cmpsb
dec
cwtl
lahf
imul
and
dec
lds
push
and
ja
imul
mov
out
in
dec
das
jmp
or
xor
push
mov
mov
cli
cmp
cmpsl
xchg
dec
scas
add
push
aas
mov
push
fildl
mov
out
sbb
mov
fildll
adc
sub
push
push
enter
fldenv
mov
lods
outsb
or
mov
fcmovnb
outsl
int
dec
jae
ffreep
push
in
jecxz
sahf
fsubr
pop
popf
dec
call
or
xor
test
pop
mov
xchg
das
in
dec
bound
jno
dec
jns
int
cmp
jg
dec
fsubl
xorl
dec
and
addr16
add
push
outsl
aas
sub
and
scas
xchg
xor
fildll
xor
mov
out
out
dec
dec
sbb
cltd
pop
and
push
mov
mov
dec
pop
add
test
pop
inc
and
ret
mov
xchg
mov
or
cmp
cmp
nop
pop
dec
jb
pop
mov
add
ficoml
push
inc
jno
popf
adc
dec
push
xchg
je
push
lahf
lods
sti
dec
dec
ljmp
insl
lahf
xlat
cmp
stc
mov
mov
lret
loop
outsb
fwait
out
scas
xor
das
jbe
dec
aam
aaa
xchg
xlat
push
shrb
inc
outsl
les
jmp
lods
out
inc
sarl
shl
adc
cwtl
fcoms
outsb
jg
xchg
rcr
sti
sub
push
aam
jns
fwait
dec
xchg
fisubrs
mov
dec
mov
and
mov
xor
lea
movb
outsl
xchg
mov
dec
mov
mov
cld
dec
fwait
test
dec
push
add
test
cwtd
sub
lds
push
ret
sub
fisubrs
movsl
push
mov
dec
rorl
clc
dec
popa
dec
mov
sarb
outsl
dec
dec
and
imul
mov
shlb
jno
sbb
dec
adc
stos
imull
push
or
cmp
mov
dec
shrb
adc
cli
sbb
push
sbb
jns
aam
mov
outsb
dec
sub
dec
fcmovne
clc
insb
inc
jbe
dec
loope
adc
mov
cmp
adc
shlb
dec
xchg
dec
mov
aad
xchg
fwait
mov
out
inc
lahf
inc
in
jg
out
dec
jp
jle
daa
or
insb
push
mov
dec
out
lcall
rol
xchg
inc
into
js
pop
adc
int3
and
push
pop
mov
sub
fimull
dec
arpl
mov
leave
in
pop
vsubsd
fadds
mov
test
push
cmp
mov
outsl
loop
dec
mov
sub
jb
sarb
rorl
movsb
fildll
fwait
lods
fistpl
pop
and
shlb
subl
jge
adc
sbb
mov
mov
fsub
lcall
sbb
out
mov
pop
inc
xchg
shlb
out
int
scas
and
inc
add
cmpsl
inc
rorb
xorb
add
xor
in
int3
outsl
pop
or
mov
je
xor
lock
sub
je,pt
fwait
stos
push
mov
aad
scas
aam
xchg
es
sbbb
xor
aas
jecxz
shr
sub
repnz
lods
or
mov
cwtl
in
mov
push
dec
int
icebp
movsl
imul
dec
imul
mov
movl
fldt
push
xchg
mov
insl
add
cltd
xchg
aad
sub
mov
mov
mov
loop
push
inc
fwait
insl
push
mov
int
movsb
adc
outsb
push
xchg
mov
rcrb
das
mov
rcrl
icebp
push
pop
lds
dec
addr16
adc
cmp
push
xor
pop
pushf
dec
mull
icebp
cld
dec
pop
add
stos
dec
inc
xchg
in
jmp
in
push
mov
cld
adc
push
stos
pop
sbbb
mov
xlat
sub
data16
xor
insb
loope
dec
cmp
dec
sahf
add
dec
ret
push
inc
das
sbb
cmc
testb
inc
sti
rcll
dec
lahf
lock
repnz
dec
pop
push
jns
leave
sub
imul
cmp
imul
xor
sub
lods
and
je
cli
push
fists
and
int3
mov
das
subb
cmc
sub
sub
dec
aam
clc
inc
jecxz
inc
push
call
dec
call
in
inc
inc
cmp
insb
popf
push
jne
test
jecxz
xor
bound
iret
sub
lea
xor
insl
dec
fsubrl
insb
dec
lds
dec
int
jecxz
push
outsb
sub
mov
imul
dec
bound
int
imul
in
dec
or
lret
pusha
pop
test
lds
dec
in
sub
push
dec
nop
and
cs
rorl
mov
mov
dec
lods
inc
ret
cmp
mov
add
sub
push
fimull
sub
xor
xchg
dec
imul
push
divl
movsb
pusha
insl
cli
ds
add
jmp
add
cld
cmp
mov
iret
es
adcb
jae
pusha
dec
jecxz
xlat
cld
xor
loopne
repz
jae
clc
sarl
insl
jmp
outsl
loop
dec
fwait
shrl
dec
xor
hlt
fsubr
cmpb
rorl
sti
or
sbb
sarl
rorl
scas
pop
fcompl
cltd
dec
fidivl
cmp
inc
loopne
push
pop
or
pop
insl
dec
test
mov
push
mov
rolb
outsl
enter
cld
jae
xchg
dec
jb
inc
add
cmp
jge
aam
out
push
add
scas
setle
cli
je
lods
adc
add
push
mov
add
adc
in
pop
aaa
testb
and
addr16
push
dec
or
sbb
push
dec
loop
in
pop
outsl
dec
test
pop
es
jle
sarl
popa
dec
push
in
cmp
xchg
imulb
mov
lahf
inc
mov
cmc
and
xchg
mov
jle
int3
movsl
push
dec
add
leave
dec
cmp
xchg
jns
ja
xor
cmp
arpl
and
cli
mov
adc
bound
sub
lcall
push
fwait
cmpsb
add
rol
out
sti
sbb
jl,pt
dec
and
in
xchg
pop
dec
mov
icebp
jle
inc
cmp
iret
dec
jnp
mov
in
inc
cmp
insb
pop
lds
xor
dec
adc
popl
cmpsl
dec
sbb
dec
mov
rorb
cwtl
or
test
into
hlt
shll
mov
pop
iret
jecxz
mov
add
nop
dec
xchg
leave
es
test
sbb
lahf
mov
decl
pop
xor
imul
fwait
inc
dec
test
sbb
cmpsb
repz
and
or
les
pop
rdrand
inc
les
arpl
iret
imul
jl
outsl
cli
cmp
out
xchg
dec
lahf
mov
loopne
int3
mov
inc
mov
dec
inc
mov
clc
ss
dec
popf
mov
in
fsub
xor
fwait
cmp
dec
jge
inc
add
imul
jo
cmp
mov
scas
pop
mov
dec
mov
xchg
dec
into
aas
dec
aam
mov
int
cmp
les
push
or
inc
push
aaa
shlb
lock
mov
jmp
sub
repnz
or
dec
pop
adc
jbe
rolb
pop
dec
cmp
fbld
dec
jb
xchg
push
stos
aas
shlb
cmp
popf
scas
aaa
jno
mov
and
mov
xchg
inc
lcall
call
pop
dec
add
jno
add
ss
fstpt
pop
mov
sbb
cmp
jle
pop
scas
mov
mov
out
lea
jg
addr16
jae
inc
rol
pop
cltd
xchg
fisttpll
adc
sbb
dec
sub
xor
cmp
clc
stc
push
fcomip
jl
push
dec
lret
xor
add
push
cmp
or
pop
jl
movsl
dec
push
fcmovu
xchg
xchg
push
inc
ljmp
pop
mov
and
jo
test
jle
in
dec
js
fstpl
cld
mov
nop
shl
loope
test
adc
das
cmpsl
xor
pop
push
jl
inc
xchg
pop
pop
mov
inc
xor
sahf
adc
loop
loope
xor
push
cmp
pusha
sarb
add
rorb
cmpsb
fistpll
ret
scas
push
icebp
xchg
cli
jg
inc
dec
mov
jle
ficoms
sbb
stos
adc
jmp
push
push
movsl
in
xchg
mov
add
push
push
dec
cld
test
loope
ret
aas
mov
mov
dec
lret
or
xor
cmpb
or
jmp
push
xchg
ret
shrb
jo
mov
xor
sarb
pop
mov
sbb
loope
insb
insl
inc
jo
mov
ja
add
jg
inc
jg
fdivs
sbb
aaa
sbb
pop
pop
scas
push
jl
add
ds
mov
cmp
sqrtps
xchg
nop
repnz
lret
cmp
dec
pusha
push
sub
fsubl
lods
dec
lret
and
test
subl
dec
repz
xchg
mov
xlat
pop
nop
dec
insb
mov
xor
mov
fnstcw
fs
jle
lds
lret
aad
xchg
jge
xchg
xchg
aaa
out
xor
icebp
xor
outsl
jg
jb
cmpsb
jae
lock
scas
repnz
int3
ss
clc
fwait
jbe
xlat
cs
jmp
in
push
insb
test
insb
mov
sti
fwait
cmp
jbe
mov
xor
cmpsb
and
cwtl
cmc
sub
fisubrs
ficomps
and
mov
cmp
mov
pop
loopne
xchg
xchg
scas
push
iret
pop
jg
jb
aam
mov
idivl
push
insb
jle
and
sbb
adc
icebp
sub
mov
jle
mov
jg
out
stos
mov
fdivs
sbb
mov
add
aas
mov
xchg
and
pop
adc
pop
iret
scas
into
cltd
xor
push
in
iret
xor
dec
push
adc
and
push
stos
xchg
or
jbe
jl
xor
pop
jns
cmp
test
jo
andl
sbb
scas
lea
or
stos
cld
add
orb
push
lcall
imul
cmp
adc
mov
cmp
lcall
repnz
in
push
daa
popf
or
fcoms
outsb
jae
jle
push
int
push
mov
ret
xor
mov
lahf
cmpsl
jle
cltd
xchg
sub
adc
scas
int3
inc
xchg
xor
inc
dec
outsl
mov
and
fidivrs
outsl
leave
and
cmpsl
cmp
lahf
inc
push
mov
fnstsw
xor
icebp
dec
movsl
cmp
push
mov
sub
sbb
jp
imul
test
lds
dec
aam
fwait
sub
leave
fucomi
hlt
loopne
cli
push
inc
jg
cmc
stc
mov
movsb
test
mov
sub
sbbb
negl
fs
in
mov
dec
xchg
jl
push
push
dec
loope
aam
pop
cld
xchg
pusha
sub
dec
pop
jg
push
mov
ret
push
pushl
outsb
cmp
or
fisubrl
not
pop
je
xchg
adc
xchg
int3
fimull
dec
idivl
mov
shlb
js
jnp
out
sub
cmp
push
or
aaa
cmc
mov
jle
fcmovne
out
pop
mov
sub
mov
dec
add
iret
mov
jle
cmp
fildl
push
jb
jns
fisubrs
xchg
mov
jge
xor
inc
cmp
sub
out
cmp
pop
sti
and
jo
or
jle
xchg
pop
fstpt
pop
loopne
xchg
dec
add
outsb
fwait
ljmp
loope
int3
stos
scas
cmp
push
repz
cmp
cmc
inc
aas
jle
stos
or
aas
mov
or
dec
ss
add
sub
dec
sub
fidivs
ret
dec
inc
add
cld
add
jo
sub
dec
fwait
jle
lock
or
cs
push
lock
testb
pop
mov
jl
xchg
sub
call
mov
scas
rorl
jnp
sti
push
jle
aas
cmp
ss
xchg
dec
out
icebp
stos
jae
or
sbb
sbb
dec
loop
fxtract
movsl
add
popa
sub
add
mov
mov
mov
add
dec
sbb
mov
insl
add
loopne
dec
pop
cli
dec
ja
lea
dec
je
decb
add
push
xchg
dec
lahf
or
sub
loop
popa
dec
mov
cli
dec
bound
jo
jns
mov
sub
inc
icebp
sbb
jnp
cmpsb
adc
add
lods
mov
repnz
mov
push
sti
aad
clc
jl
dec
enter
dec
and
dec
loopne
or
xor
pop
dec
add
lret
inc
into
add
mov
sbb
inc
insl
dec
xor
xchg
and
dec
dec
and
movd
cmpsb
jo
out
pop
mov
iret
in
pop
dec
adc
adc
mov
inc
dec
mov
push
popf
out
jns
push
jecxz
sahf
push
out
dec
aam
inc
popa
mov
dec
fwait
js
in
jle
adc
icebp
push
cmpsb
in
dec
repz
out
lock
shlb
fcomip
aaa
dec
nop
pop
fldt
loope
mov
and
push
xchg
cmc
pop
mov
xlat
out
fisubrs
mov
inc
lahf
lods
aaa
dec
fdivrs
pop
inc
pusha
or
iret
or
inc
xchg
jl
insl
dec
movsb
out
sbbb
cmp
jle
cmp
xchg
cmp
mov
bound
cmpsl
dec
push
and
popa
pop
jb
cmp
dec
insb
mov
jg
inc
test
cwtl
cmp
cmp
adc
mov
in
xor
sbb
pop
lret
add
xchg
dec
and
pop
xchg
xchg
loop
inc
outsl
jg
sbb
mov
jp
pop
dec
cmc
mov
jnp
fisttpll
jl
inc
in
rcr
inc
jle
push
js
fbstp
pushf
mov
lahf
mov
lcall
lret
inc
push
ret
inc
fs
cmp
mov
push
add
ret
enter
cmp
push
lods
shr
jbe
popa
mov
fwait
in
pusha
bound
loopne
idivb
xchg
and
push
mov
push
push
pop
in
js
lock
fsts
int3
adc
jle
int
adc
testl
rorb
fildl
mov
cmp
xlat
movsl
fimull
jle
push
inc
pop
in
aaa
jg
adc
out
loop
ja
aaa
xor
xchg
bound
dec
xor
inc
adc
mov
mov
out
fdiv
jae
fiaddl
mov
scas
imul
mov
lret
jbe
shl
jbe
add
xor
mov
or
aas
jecxz
dec
jnp
inc
lods
std
dec
mov
lahf
pop
or
pusha
jmp
in
mov
and
xchg
outsl
sbb
leave
movsb
iret
outsb
mov
inc
lret
xor
and
add
dec
lret
stos
sub
mov
xchg
mov
leave
psraw
xchg
inc
sub
cmp
hlt
shr
adc
data16
add
loope
mov
cli
in
mov
dec
jg
daa
cmp
jb
out
movb
pop
mov
sub
clc
gs
and
sbb
adc
mov
adc
fwait
inc
adc
std
and
inc
mov
arpl
das
out
push
ficoms
lret
and
dec
clc
test
int3
lods
jne
mov
fsubl
push
leave
pushf
jl
and
or
inc
stos
dec
repnz
adc
push
mov
loope
jl
mov
jne
xchg
das
lahf
xchg
shrl
bound
jl
sbb
sbb
fistps
loopne
cmp
mov
mov
loopne
in
adc
das
repnz
ja
mov
or
mov
aad
das
jo
dec
mulb
push
outsl
mov
sbb
cmpsl
dec
shlb
popf
mov
dec
mov
jl
cmovp
mov
add
ds
jbe
outsl
dec
es
mov
xchg
lds
dec
shrl
stos
or
dec
mov
popa
in
mov
rcrl
stc
vsubsd
inc
dec
adc
mov
mov
dec
loopne
out
mov
mov
sbb
sbbl
std
dec
into
jb
lock
xor
fimuls
or
shlb
adc
mov
cmp
hlt
push
in
dec
dec
bound
xor
popf
insb
cmp
push
popa
push
mov
and
jle
outsb
cmp
sub
sbb
outsb
push
mov
jle
push
push
lahf
lods
cld
inc
cmpsl
pop
mov
and
and
in
jl
orb
adc
or
pop
out
scas
lahf
dec
jg
sbb
mov
orb
gs
sbb
shlb
hlt
das
aad
mov
rcl
fildll
xchg
sub
lahf
stc
dec
in
jecxz
cld
push
xor
iret
push
mov
jne
out
int3
ljmp
sbb
inc
mov
pushf
dec
test
mov
dec
jg
xor
or
adc
ret
cs
dec
aam
test
and
subl
movsl
pop
ljmp
fstl
jle
in
mov
dec
inc
and
cmp
jne
mov
xor
clc
push
dec
adc
loopne
xor
data16
ret
dec
fdivp
jg
xor
stos
fisubrs
jb
fmull
or
push
dec
in
or
aad
xor
cmpsl
mov
repnz
xor
mov
cmpsl
shrl
push
sub
or
movsb
dec
arpl
dec
xlat
adc
movsb
lahf
pop
sbb
out
enter
push
into
loop
lea
inc
jl
or
pop
stc
mov
lahf
rclb
scas
pusha
cs
sti
push
out
jne
sub
xchg
js
lds
outsb
adc
inc
out
mov
stos
inc
mov
hlt
fidivl
xor
mov
mov
into
mov
andb
outsb
cmp
inc
dec
iret
in
xor
out
mov
sarb
xlat
mov
dec
inc
pusha
sub
sbb
dec
push
dec
push
pop
aad
imul
dec
cmp
fadd
call
dec
out
sub
inc
dec
js
into
dec
cmp
xor
jp
enter
ja
andb
or
stos
jo
xor
mov
in
into
push
sahf
inc
jp
dec
ror
outsb
lret
aaa
push
fcoms
sub
sti
pop
dec
and
dec
mov
xor
dec
sub
pop
leave
mov
mov
or
fisttpll
push
dec
push
and
inc
dec
mov
hlt
mov
loop
dec
dec
mov
dec
add
jge
arpl
add
dec
and
push
mov
fistps
push
cmpsl
dec
push
out
cmp
dec
xchg
jecxz
push
lds
lahf
add
lahf
sti
dec
fst
fwait
stos
dec
loop
dec
mov
push
int
push
xor
dec
aam
mov
lock
scas
inc
push
xor
stos
data16
adc
xorb
dec
cltd
mov
xchg
pop
lds
arpl
jno
pop
jl
jne
subl
xor
int
dec
in
mov
dec
and
cmp
mov
dec
dec
sbb
or
call
enter
movsb
push
xchg
dec
inc
or
dec
loope
icebp
dec
mov
stos
pop
data16
xor
jb
frstor
push
push
test
push
xchg
rcll
stos
jp
xchg
sbb
into
push
imul
pop
call
mov
pop
push
dec
cli
in
mov
int
mov
dec
xor
aas
lock
out
jge
pop
hlt
dec
in
insb
xor
xor
xchg
jmp
ja
jl
rorl
cmp
add
cmp
jno
adc
add
dec
xchg
insb
push
aad
add
xchg
and
xlat
sbb
sub
das
mov
dec
movsb
std
lcall
inc
jg
add
fwait
push
push
inc
stos
rcrb
and
dec
movntps
fstpl
mov
std
repnz
xchg
in
loope
test
add
add
mov
shr
inc
cmp
xchg
adc
dec
xor
mov
xchg
or
mov
jge
sbb
push
add
fcoml
jne
mov
aam
xlat
xor
dec
int
inc
mov
push
xor
std
dec
sbb
push
fwait
dec
xchg
mov
sbb
dec
js
push
pop
ror
rolb
in
mov
gs
or
into
insl
stc
loope
sbb
repz
push
test
adc
je
jmp
mov
mov
bsf
or
mov
pop
scas
movsl
addr16
dec
movl
sbb
shll
outsl
movsl
lahf
shl
int
inc
jne
inc
adc
scas
ss
nop
dec
cmp
scas
dec
loopne
add
or
cld
dec
dec
addl
and
xor
xchg
mov
jl,pn
repz
bound
into
sti
lods
dec
repnz
mov
sbb
push
cmc
out
aad
fists
inc
je
fs
imul
pop
mov
pop
xchg
mov
out
mov
in
insl
mov
jae
adc
and
adc
leave
dec
loop
shlb
faddl
sti
cmp
dec
xor
dec
ror
dec
fucomip
inc
or
testl
mov
jle
and
push
fcomps
and
dec
mov
dec
pop
sti
cmp
xchg
dec
and
inc
push
or
pusha
cmp
cmp
push
mov
test
adc
inc
sbb
movsl
cmpsb
xchg
into
adcb
imul
xchg
addr16
imul
inc
test
dec
jbe
les
mov
push
and
lds
cmp
jo
jmp
daa
pop
push
dec
ds
fisubs
add
jnp
outsl
adc
sbb
loop
xchg
insl
out
lahf
and
loopne
xorb
stos
in
dec
sbb
add
add
pop
int3
incb
adc
mov
out
dec
pop
loopne
jl
jge
fwait
mov
adc
inc
ffreep
popa
repnz
icebp
xlat
pop
xorb
pusha
in
stos
js
dec
dec
pop
mov
repnz
into
push
arpl
fnstsw
scas
rdtsc
sub
mul
jg
jge
xor
mov
mov
fsubl
dec
int
jbe
fdivs
pop
lock
fcom
pop
mov
movd
xor
inc
enter
fwait
and
mov
push
xchg
adc
jo
scas
lcall
sbb
inc
pop
jno
fsub
iret
mov
cmpsb
sbb
and
lea
pop
adc
xchg
push
cltd
dec
or
rorl
sub
test
mov
push
sub
leave
loop
lret
insl
dec
cs
fadds
outsb
inc
dec
mov
sub
popf
jb
and
fstl
insb
rcrl
sub
imul
clc
testl
icebp
fs
sahf
xor
xor
xchg
addr16
test
cli
out
or
into
sbb
ud0
les
cmp
dec
sbb
mov
enter
or
sub
das
sbb
adcl
and
dec
mov
enter
sbb
jae
inc
mov
imul
xor
sub
repz
bound
dec
xor
iret
rorb
sub
and
pop
outsl
imul
mov
mov
daa
pop
inc
iret
mov
scas
mov
cmp
ret
scas
xchg
andl
inc
dec
test
sub
mov
dec
testb
xchg
adc
xlat
dec
inc
pusha
rcl
xchg
incb
stos
sub
ja
or
shll
pop
fstpl
dec
sarb
repz
rorb
pop
add
outsl
stc
dec
sub
ljmp
lock
fucomp
mov
mov
add
and
pusha
adcb
dec
repz
dec
sbbb
xorl
sbb
add
cld
dec
and
mov
les
arpl
gs
mov
add
dec
adc
hlt
xlat
out
xchg
push
or
push
mov
in
bound
shll
push
flds
test
shll
mov
cmp
movsl
xchg
gs
aas
and
pop
inc
fistps
fxch
jg
dec
test
cmp
ret
and
fdivrs
cltd
fnsave
icebp
int3
fnsave
sahf
cmp
sahf
or
sbb
ret
bound
push
ficoml
imul
scas
push
aad
xor
iret
fistpll
inc
add
sbb
dec
and
cli
jae
rcl
stos
inc
out
sbb
stos
push
loopne
pop
and
idivl
pop
bound
js
mov
shll
xchg
fsubs
cmp
fs
push
out
sub
add
jg
sbb
jle
jns
outsl
push
bound
dec
int3
or
pop
jae
shlb
daa
or
outsl
cli
sub
pusha
sub
xchg
mov
sahf
sub
fs
and
ret
fidivrs
std
js
std
data16
and
cs
xchg
outsb
daa
mov
stos
pop
mov
out
daa
jg
cmp
dec
xor
int
jnp
movzwl
push
rcl
insb
jnp
cmp
jl
mov
cmp
dec
mov
mov
in
dec
xlat
mov
movsl
cmpsb
not
mov
dec
sbb
xchg
sarl
into
xchg
jg
adc
inc
test
popf
js
jle
xor
and
int3
and
cwtl
mov
cmp
jl
ds
adc
inc
sarb
fisubrl
mov
push
rorb
dec
add
dec
shlb
dec
cmp
dec
leave
hlt
dec
and
mov
fsubrl
dec
out
push
cmpl
mov
cs
dec
dec
jbe
jno
lods
push
mov
cmp
lcall
aam
xchg
dec
js
int3
orb
dec
in
addb
pop
push
arpl
in
mov
sub
outsl
cs
or
cwtl
jmp
les
xchg
popl
jle
dec
shll
int
jl
pop
jmp
inc
aas
xchg
inc
mov
or
fstpt
jmp
inc
je
shlb
push
mov
bswap
aas
add
scas
pop
js
adc
imul
in
and
les
add
fdivp
xchg
aas
ss
or
cmp
mov
imul
js
inc
sub
mov
inc
jne
test
leave
ret
scas
cmp
mov
stc
into
aaa
jg
scas
pmaddwd
xchg
cs
jle
insl
adc
ljmp
dec
mov
or
out
roll
insb
add
loope
dec
das
mov
scas
inc
cli
lea
sub
dec
aaa
lret
adc
sbb
mov
filds
push
std
fldcw
dec
jmp
outsb
jle
mov
adc
mov
and
dec
or
dec
inc
mov
iret
sbb
cmp
loope
shrb
scas
idivb
mov
xchg
cmpsl
dec
leave
or
stos
out
push
mov
dec
xor
into
test
loopne
push
push
cmp
int
push
sub
inc
sub
pop
sbb
dec
pushf
jno
jl
call
dec
xor
psrad
cmpsl
xchg
jmp
movsb
sbb
lret
mov
push
sbb
add
inc
mov
into
mov
add
dec
clc
cld
fcmovu
pop
dec
iret
insb
dec
in
lcall
dec
pop
or
add
xchg
addr16
les
cli
mov
dec
push
push
sbb
scas
dec
and
sub
jle
dec
in
xchg
pop
mov
mov
rcrl
leave
cmp
out
or
or
mov
mov
adc
inc
incb
cmp
rol
int
add
jge
jle
gs
iret
xchg
mov
mov
lahf
hlt
adc
sbb
xchg
arpl
cmc
stos
out
pop
out
aam
out
pusha
lahf
loopne
stos
cwtl
and
das
sub
mov
pop
mov
xor
test
dec
inc
jg
cwtl
rcll
int3
and
adcl
cmc
mov
mov
ja
fs
imul
hlt
jl
mov
jnp
sbb
mov
sarl
jae
cmp
mov
dec
jl
or
fldl
test
xchg
aam
daa
mov
mov
lods
ret
inc
std
mov
insb
fwait
repz
and
std
inc
dec
fnstsw
xor
aad
mov
cs
push
jle
push
xchg
test
in
cmp
pushl
pop
sbb
or
jo
pop
mov
and
mov
inc
mov
sarb
lods
fisubl
jg
pusha
adc
ds
mov
inc
insl
jle
popa
lock
mov
repnz
inc
fadds
push
and
testl
jo
ljmp
fdivrp
and
xor
xor
daa
stc
cs
cs
inc
jl
pop
sahf
in
jle
outsl
or
insb
loope
ficompl
xor
fimuls
shrb
shll
loope
lock
jns
pop
pop
dec
repz
notl
movsb
cmp
mov
int
pop
test
lret
ss
cmp
push
sbb
inc
add
scas
and
jae
jl
std
pop
add
adc
cli
jle,pn
push
sbb
mov
stos
jle
shll
sub
orl
shl
pop
rep
cmp
inc
in
stos
jbe
pop
rcl
mov
ds
mov
int3
jl
cmp
enter
scas
pop
ja
mov
pop
and
xchg
push
or
pop
mov
iret
cmp
mov
insb
jle
mov
scas
mov
jge,pt
int3
or
stos
js
divb
or
cmpsl
in
sub
sbbb
jl
aam
idivb
mov
shll
xchg
add
dec
xchg
xor
aaa
imul
cmp
dec
ss
pop
repz
mov
sub
mov
cld
pop
xor
insl
into
pop
lcall
stos
test
lods
stc
xor
mov
mov
std
repz
dec
add
popa
dec
in
les
dec
mov
mov
sbb
mov
fdivrs
cli
inc
sarl
dec
into
xchg
movsl
out
inc
ret
dec
xchg
sub
sbb
insl
xor
xor
mov
shl
sbbb
sbb
pop
xor
ret
shll
mov
fxch
jb
in
pop
gs
sub
cs
lahf
and
inc
xchg
and
jle
out
push
mov
mov
mov
and
add
shlb
rcrl
mov
call
mov
xor
push
fdivrs
data16
dec
xchg
fwait
cmp
dec
jmp
mov
dec
jg
adc
sub
push
cmp
pop
les
pop
dec
mov
add
mov
aaa
sub
outsb
js
out
test
pop
enter
xchg
popf
nop
dec
pop
shlb
aad
dec
cmp
lahf
pop
popa
cmpsl
inc
cs
notrack
into
push
mov
mov
dec
adc
add
mov
lret
push
add
out
stos
out
and
sub
sbb
xchg
sbb
fwait
pop
test
jp
cmp
lret
dec
movsl
push
mov
stos
add
push
xor
icebp
fwait
push
jp
nop
dec
loop
out
add
adc
loop
clc
test
dec
into
arpl
adc
sub
inc
test
sbb
jo
leave
dec
mov
aam
and
movsl
mov
jmp
rclb
iret
fwait
call
xchg
dec
sbb
inc
adc
dec
push
popa
mov
dec
push
jg
mov
ficoms
dec
ljmp
jb
and
mov
insb
fldl
xor
test
insl
lret
outsb
lods
outsb
pop
pop
int
insl
push
mov
xchg
xor
and
outsb
inc
pop
into
xor
in
xchg
xor
ficoms
aaa
in
insb
cmp
mov
ret
scas
adc
or
pop
mov
fstl
fstps
xlat
mov
decl
inc
sahf
out
je
loope
mov
fcmovnb
dec
add
aad
mov
enter
xor
out
fcompl
mov
push
xlat
ljmp
push
cmpsl
std
jmp
aad
ss
fildl
dec
inc
out
inc
pop
mov
or
fninit
and
loope
fnstenv
xlat
sbb
cli
xchg
cmp
into
aas
pop
dec
jbe
dec
in
mov
scas
or
pop
cmp
rolb
aad
add
ret
pop
stos
scas
dec
and
mov
jb
aaa
jmp
fucomp
cwtl
dec
stos
loope
fistpll
enter
fnstenv
xlat
jb
xchg
mov
and
imul
dec
in
fldenv
fst
mov
mov
in
sbb
ret
mov
xor
mov
or
jne
frstor
aad
mov
cmp
mov
inc
jmp
jmp
loope
fistpll
pusha
fnstcw
aad
dec
das
pop
mov
mov
out
dec
cltd
in
jecxz
fisttps
cwtl
scas
dec
fisttpll
and
popf
xlat
jne
popa
inc
dec
aad
add
rcr
mov
insb
or
ror
es
jg
in
and
jmp
inc
es
loope
iret
mov
rcr
cmp
xlat
add
call
push
sub
inc
out
aas
pop
adc
jmp
add
rol
mov
xor
iret
dec
aaa
add
daa
mov
inc
adc
pushf
or
jb
dec
rorl
scas
push
out
cmpsl
out
imul
xor
mov
rolb
fcmovnb
fldcw
jl
mov
push
jo
icebp
dec
xlat
movsb
aad
roll
roll
jl
outsl
sub
pushl
popa
out
mov
cs
call
push
in
fists
mov
push
xor
ret
int
dec
mov
push
xor
jmp
mov
and
fucomip
xor
xlat
repnz
xor
xor
lods
popf
leave
cs
jbe
fucomp
pop
dec
dec
jmp
jmp
ret
fcomps
fcomi
flds
xchg
xchg
push
mov
dec
in
and
loope
cs
pop
push
dec
aad
shll
pushf
sub
es
jmp
xchg
fucom
test
ss
and
mov
xlat
cmpsl
daa
into
cmovg
fwait
in
adc
inc
jmp
inc
jmp
int
sub
rcrl
or
scas
or
out
gs
pop
cmp
xor
xchg
xlat
jecxz
xchg
jle
dec
loope
fbld
fincstp
push
cmp
imul
adc
out
stc
mov
out
in
adc
adc
addr16
xchg
dec
or
cmp
sti
test
mov
outsb
push
into
dec
out
stos
in
imul
sub
or
cmpsl
fstl
fidivrl
idivl
pop
neg
hlt
out
imul
mov
add
inc
in
repz
add
ffreep
fstpt
fwait
mov
das
imul
adc
js
mov
sbb
ja
arpl
call
xchg
pusha
cmp
fistl
daa
mov
sahf
ljmp
cmp
notl
inc
out
lea
pushf
nop
mov
addl
mov
or
xor
subl
jmp
out
in
iret
popf
fldt
fsts
mov
xlat
ja
cmp
mulb
out
inc
fucomip
jne
jle
leave
shlb
jecxz
mov
shl
or
sub
out
dec
aas
jmp
js
xchg
in
shlb
outsl
paddb
lret
fldl
pop
sub
outsl
sub
cld
jae
jmp
jmp
jl
in
fnstenv
mov
mov
mov
xchg
loope
xchg
fbld
xor
jnp
sub
jmp
add
xor
out
stos
dec
out
fstps
xlat
imul
dec
add
dec
jmp
mov
es
jmp
pop
mov
cs
pop
leave
xlat
fs
mov
pop
ds
push
push
mov
out
pop
cmp
lds
push
inc
lahf
in
add
int
jecxz
iret
mov
fst
scas
lret
dec
pop
and
shr
adc
lret
jecxz
cmp
jbe
push
inc
into
movq
lock
fucom
pop
add
push
dec
fbld
mov
out
shll
or
cmp
jno
jecxz
aaa
cmp
cmp
mov
mov
mov
pop
out
adc
dec
js
sar
fwait
scas
rsqrtps
vpackssdw
addr16
loope
inc
leave
cpuid
fldcw
dec
movsb
pop
stc
outsb
es
mov
jmp
in
jl
push
daa
cmp
into
or
loope
fs
xor
jge
add
scas
dec
jecxz
jbe,pn
and
xlat
pop
shll
lcall
xor
adc
xchg
in
js
or
out
in
mov
psubusb
repz
xchg
sti
aad
mov
incl
in
lods
icebp
popa
inc
xor
ret
rorb
mov
xchg
mov
out
push
push
dec
out
dec
maskmovq
mov
in
aas
add
jb
xlat
inc
call
daa
or
out
popf
pop
jmp
mov
fistpl
fldt
lods
imul
scas
or
mov
xor
clc
iret
lods
jecxz
loope
es
nop
es
inc
xlat
xor
push
mov
out
sbb
add
iret
adc
loop
mov
mov
out
imull
xor
sub
cmp
in
fistl
adc
jns
mov
aad
ja
pushl
out
imul
mov
mov
pop
popa
fildll
xlat
leave
aad
js
cs
pop
repz
xor
ljmp
add
loope
xchg
jecxz
filds
xor
fs
into
xlat
test
dec
mov
test
mov
jmpw
stos
in
cltd
fwait
xchg
sahf
jbe
push
cmpsb
cmp
das
xlat
add
aad
sar
fcmovbe
mov
in
mov
pop
or
and
jle
pop
dec
xchg
jmp
jmp
jecxz
xlat
fnsave
sub
mov
scas
cmp
inc
sub
cmp
xchg
setl
inc
fldcw
pop
push
xlat
adc
insb
and
pop
out
cs
popf
mov
lods
xchg
jnp
push
inc
mov
dec
or
filds
cmp
out
jae
push
pop
jmp
out
or
cli
loope
pop
pop
fnsave
ss
inc
add
imul
dec
aaa
int
lret
out
das
jmp
repnz
and
xor
cmp
push
fisttpll
imul
xchg
sub
in
pop
aaa
popf
cmovg
xor
sbb
mov
decb
pop
ja
adc
cmc
fldlg2
mov
pop
mov
sub
leave
imul
jb
adc
imul
inc
cmovno
add
rorl
pop
inc
mov
or
sbb
in
xor
ss
loope
movsl
sub
in
hlt
xchg
jmp
jbe
fstps
mull
ja
pop
in
popl
out
outsb
push
arpl
fst
push
cmp
notb
das
std
fistps
repz
enter
loopne
push
jmp
ret
in
fsubl
push
jnp
adc
lahf
fstpl
pusha
xlat
out
rcll
sbb
xchg
xchg
jp
jmp
dec
cltd
jecxz
loope
jbe
fstl
xlat
fst
sub
pusha
xchg
mov
jmp
in
jecxz
loope
sub
lcall
fst
pop
add
dec
lret
mov
idivb
mov
add
or
dec
in
xchg
xor
out
loope
adc
dec
fistpl
xlat
mov
push
sub
mov
repz
pop
pop
decb
imul
pushf
sarl
scas
out
scas
out
inc
fucomp
jmp
pop
ror
sub
insb
mov
dec
push
cmp
or
out
pop
fisttpll
fstp
dec
jno
xchg
inc
and
ljmp
inc
je
std
jecxz
sarb
fstpt
aad
adc
shrl
ret
adc
sub
ja
mov
inc
fnsetpm(287
add
xchg
das
xlat
movsl
in
mov
mov
jmp
sub
mov
cmp
adc
mov
jmp
or
mov
sbb
mov
pop
fstpl
push
sub
mov
in
aam
movsl
jmp
sarl
fldl
push
scas
pop
fldt
pop
mov
adc
mov
and
pop
fucomp
adc
xor
es
int
jecxz
xchg
fcmovne
cs
in
mov
sahf
sarb
jmp
sub
in
inc
sub
repz
int
cs
fsts
xchg
fst
cmpsb
dec
mov
pop
cmpsb
std
out
xor
orl
mov
stos
jecxz
into
dec
push
loope
lret
add
cs
dec
es
jecxz
fisttps
adc
gs
std
scas
push
in
dec
int
jmp
pop
mov
and
push
dec
or
dec
xlat
cld
mov
das
cs
xchg
or
cmpb
fstps
xlat
test
xor
jne
pop
sub
sub
xchg
loope
xlat
addb
dec
into
jmp
ljmp
frstor
mov
pop
add
mov
cmovnp
in
ret
out
pop
xchg
or
mov
pop
and
sub
sub
push
jo,pn
dec
leave
xor
cmc
sub
jg
inc
xlat
sub
add
pop
iret
push
out
in
xchg
xor
rcr
mov
cmp
call
lds
jle
xor
and
rclb
popl
fnstcw
xchg
pop
and
out
jns
loop
inc
and
leave
fstp
fsubrs
fldcw
mov
roll
mov
xor
in
out
iret
jno
movsl
out
cmp
int3
jecxz
pop
add
and
rclb
inc
inc
xlat
mov
and
cmpl
sbb
fucomi
cmp
mov
addr16
or
jb
int
test
xor
xchg
sbb
addr16
fildl
sbb
sbb
mov
das
xor
cmpsb
ljmp
out
ret
jecxz
dec
fistpl
shl
rdpmc
in
out
imul
int3
pop
jb
bound
fstp
fcmovnu
dec
fld
cmp
mov
xchg
stos
outsl
cmp
out
xor
data16
mov
shrl
inc
pop
and
fisubrs
cmc
dec
mov
mov
push
pop
xlat
mov
aad
or
iret
sub
into
js
jbe
xchg
fisttpll
fldcw
sbb
cmp
push
out
xor
out
mov
sub
loope
outsl
mov
lcall
sub
popa
xorl
jge
movb
out
frstpm(287
ljmp
add
fnstenv
pop
dec
push
cmpsl
mov
xor
jmp
pop
in
push
jecxz
mov
pushf
mov
dec
sti
mulb
fnstsw
or
or
imul
pop
jbe
stos
dec
aas
rdpmc
andl
mov
addr16
in
cmp
out
lahf
push
xor
jecxz
dec
jae
hlt
fildl
sahf
std
into
addr16
push
out
inc
in
bnd
fisubrs
or
add
jne
xor
jecxz
out
push
data16
dec
push
fstpt
out
jne
xchg
scas
mov
pop
and
in
js
push
aam
loope
fistpl
mov
rorl
pop
sub
jmp
add
jg
cs
loope
sarb
jbe
sbb
bndldx
pop
jmp
inc
cmp
cmpsb
inc
fldenv
and
and
fidivrs
lret
das
xor
jb
inc
dec
jmp
jmp
fstps
imul
aas
xchg
daa
rdtsc
mov
cmp
add
cli
dec
inc
dec
and
add
or
idiv
xor
mov
xor
sub
dec
inc
mov
scas
cs
cmp
inc
aaa
js
in
mov
loope
loopne
rcll
ljmp
sub
dec
sub
addr16
cltd
lea
xor
xor
mov
incb
int3
imul
lcall
cmpsl
sub
adc
jg
outsl
cs
addr16
scas
sub
icebp
jmp
xchg
fucom
imul
jle
std
pop
aam
push
sbb
pop
das
ss
fucomp
mov
in
fisttps
hlt
push
and
xchg
fstp
out
fstpt
out
es
xlat
out
mov
in
fwait
jle
jnp
in
fcomip
fstp
imul
cmc
xlat
shll
dec
or
das
mov
out
cltd
out
cmp
push
imul
testb
cmp
lret
roll
sub
mov
in
popl
pop
dec
jmp
jmp
inc
in
jmp
mov
stos
into
movl
inc
outsl
into
cs
jecxz
push
fstl
fnstcw
cs
rcr
mov
notb
iret
xchg
bound
fisttps
fldl
cmp
rcl
lods
pop
or
call
jecxz
mov
fildll
or
outsb
adc
inc
sahf
jecxz
loope
fiadds
xlat
dec
sarl
das
xchg
lock
fwait
dec
jle
and
push
add
mov
jne
push
jmp
sub
push
mov
aad
cmp
das
shr
dec
insb
push
fidivs
xchg
mov
add
in
fbstp
daa
popw
rclb
scas
sahf
jmp
stos
jl
mov
sub
imulb
dec
hlt
xlat
or
sub
sbb
mov
xor
pop
scas
and
jmp
jmp
dec
scas
jecxz
loope
sub
push
fucomp
xchg
cs
popl
iret
inc
in
lret
xchg
out
cmp
dec
test
in
insl
in
cs
repz
xlat
dec
or
lsl
jmp
add
dec
sub
or
gs
push
jge,pn
mov
lret
adc
mov
mov
mov
pop
mov
dec
cs
fs
std
inc
cmp
sub
ret
sbb
fndisi(8087
dec
or
subb
frstor
fisttpl
jbe
xlat
mov
sub
cltd
iret
jno
addr16
xchg
loopne
add
lahf
es
notb
mov
test
mov
jmp
jo
mov
arpl
dec
rdtsc
in
mov
es
in
loope
cmp
inc
pop
in
add
jmp
sarl
xlat
push
push
cmp
rcl
cmp
add
sub
pop
loope
cmp
cltd
dec
aad
push
js
fwait
jg
das
sub
in
int3
out
stos
mov
data16
roll
mov
push
pop
in
jecxz
scas
inc
aas
mov
rorl
fiadds
mov
loope
dec
cmp
jae
fisubrs
test
sbb
test
jecxz
fdiv
mov
xor
xor
daa
scas
dec
scas
jmp
iret
mov
fisttpl
push
push
ret
aad
sarl
mov
test
jmp
dec
out
jecxz
jle
fnsave
sub
dec
xor
mov
filds
fstl
in
stc
dec
sub
in
add
jmp
jnp
int3
or
mov
addr16
fistps
xlat
adc
sarl
cs
daa
movups
imul
adc
xor
jo
mov
xor
jecxz
cs
out
pop
es
pop
cmp
mov
dec
push
xlat
sub
cmpsb
fbstp
fwait
cmp
dec
mov
xchg
add
sub
scas
addr16
sub
addr16
push
jmp
jecxz
sub
mov
dec
push
repz
sarl
adc
sub
movsl
sahf
das
and
in
lcall
out
push
repnz
xchg
mov
xchg
add
adc
dec
jmp
int3
outsb
sarb
ds
sub
dec
popa
jmp
jecxz
shll
sub
iret
lea
pop
or
out
outsl
cmp
out
sub
jl
pop
sarl
mov
sub
pop
mov
dec
push
incb
pop
cmpsb
scas
push
mov
push
in
std
push
and
fcomp
sub
es
inc
xchg
mov
dec
and
outsl
out
int
in
sub
add
pop
aaa
fldcw
dec
sub
mov
jb
out
add
call
push
loope
inc
cmp
add
in
mov
lret
pop
cs
dec
out
out
fisubrl
and
xchg
adc
pop
push
fbld
mov
xchg
icebp
sbb
adc
arpl
push
outsl
dec
jmp
add
and
fnsave
ljmp
pop
cmpsb
fwait
push
into
dec
jecxz
fstl
aad
sub
mov
pop
out
pop
pop
in
movsb
dec
mov
jecxz
loope
mov
fucomi
cmp
in
cmpsl
fbstp
dec
lods
jmp
fs
ljmp
out
mov
jmp
aas
mov
push
add
fists
fsts
out
fildl
mov
pop
jmp
lret
out
out
addr16
inc
cmpsl
orb
into
sub
pop
mov
mov
add
pop
jmp
inc
add
inc
out
mov
mov
repz
mov
out
rorl
mov
aad
fwait
mov
and
xor
into
popa
loop
aam
aad
rol
mov
or
lret
mov
out
pop
iret
sbb
push
jmp
dec
or
int3
xlat
test
ds
pop
int
in
lock
push
pop
fucom
stos
mov
stos
daa
iret
sub
outsl
cmp
push
xchg
sar
dec
lcall
dec
jg
mov
pop
ds
pop
pushf
dec
in
movsl
jmp
jmp
daa
jecxz
xchg
mov
das
int
out
ss
icebp
testl
jecxz
loope
cs
fildl
xor
psrlq
iret
popf
iret
or
ljmp
in
mov
ds
or
or
xchg
jmp
pavgw
pushf
add
push
not
ret
or
or
dec
in
mov
loope,pn
mov
fcmovu
jo
mov
cmp
in
mov
jns
imul
dec
das
seta
in
xor
out
fsubrs
pushf
inc
adc
pop
push
push
arpl
and
xchg
xor
add
xchg
or
inc
shr
jmp
xchg
pop
fucomip
das
lahf
lahf
mov
out
jecxz
sbb
fwait
pop
fucomi
fldenv
mov
shlb
pop
ja
lods
in
push
push
lahf
out
sbb
fucomip
das
imul
mov
mov
cltd
cmp
jno
cmp
dec
pop
fnstcw
rcl
and
xor
test
cmovp
push
jge
imul
out
inc
jecxz,pn
outsb
pop
movsb
sbb
test
in
push
mov
xchg
xor
push
fbstp
flds
mov
daa
pop
daa
pop
mov
rolb
jmp
inc
xchg
mov
jecxz
sbb
pop
dec
inc
pusha
xlat
lahf
cmpsb
aas
movzwl
in
push
lret
in
mov
push
mov
push
sub
scas
jle
or
iret
dec
das
movq
stos
jmp
add
cmp
push
movsl
xor
dec
in
xchg
xlat
mov
daa
jmp
stos
lods
mov
addr16
dec
ret
xor
ficoms
and
scas
rclb
daa
push
jp
pop
jo
fsubr
push
ret
mov
mov
push
xchg
repz
pop
and
out
cmpsl
gs
and
in
int3
in
mov
cs
mov
cmp
and
or
sti
shll
cmp
cs
jmp
movsl
xlat
dec
es
pop
imul
out
fwait
dec
cli
je
dec
shl
push
jmp
mov
and
inc
sbb
inc
xchg
ds
dec
fildll
add
lock
test
and
xchg
mov
push
sbb
insb
dec
inc
mov
cwtl
popf
and
cli
jb
add
inc
fbld
push
inc
mov
and
sub
inc
mov
inc
mov
cmp
or
dec
fistps
mov
jnp
aaa
xchg
out
cmpxchg
inc
push
xchg
gs
shlb
dec
test
sub
fucom
mov
cmp
pop
incb
jne
inc
ss
test
test
and
mov
out
inc
sarl
add
and
cltd
enter
sbb
pushf
out
cmpsb
imul
fmul
jp
mov
mov
adc
jmp
int
and
or
xchg
jae
subb
sub
shll
mov
movsl
data16
xor
xor
into
fsubrs
pusha
repnz
lods
sub
rcll
ja
stc
xchg
sbb
jns
movl
and
call
push
call
mov
and
shlb
jno
rclb
pop
mov
dec
pop
push
out
das
inc
jl
bound
mov
mov
pop
fldl
mov
mov
jp
xchg
pop
sbb
jecxz
sar
mov
rcrl
or
inc
pop
or
dec
cli
es
decb
mov
xor
add
fwait
lahf
rorl
stc
loopne
shrl
jbe
xor
enter
std
dec
imul
cmp
stos
dec
jmp
rcr
jle
sahf
mov
push
dec
and
movsb
push
inc
fwait
inc
lods
xchg
loope
sbb
jo
aam
adc
sbb
int3
add
out
ds
popf
xor
cmp
pop
test
enter
mov
lahf
lahf
inc
jmp
pop
test
shlb
xor
scas
inc
pop
jae
popf
scas
popf
pop
fisttpl
cmp
mov
mov
push
add
in
mov
jle
ja
adc
push
shl
dec
jno
add
out
jl
ret
ffree
dec
and
sub
es
es
mov
jne
mov
xchg
sbb
test
iret
and
cli
mov
enter
push
orl
push
or
or
out
pop
push
int
add
add
mov
sbb
mov
xchg
xchg
mov
mov
add
dec
cmp
cmp
arpl
pop
out
in
mov
jno
out
aaa
jne
dec
jmp
mov
push
andl
mov
pushf
lea
je
jmp
call
insl
mov
or
je
sbb
stc
in
sub
loop
or
adcb
push
cmp
daa
mov
pop
adc
sbb
pop
pop
sub
sub
pop
enter
inc
and
sub
lock
mov
mov
gs
pushf
bound
test
xchg
or
enter
fcoms
ds
enter
pop
insl
xor
mov
or
lods
lea
je
cmp
cmp
jmp
cltd
mulb
daa
jno
sbb
cmpsb
xchg
lret
das
sub
cmp
dec
dec
xor
jp
pop
cwtl
xchg
sbb
xchg
dec
sbb
jae
rcr
push
sahf
sbbl
push
pop
push
jmp
fisubl
add
sub
mov
scas
out
pop
lcall
shrl
leave
mov
xchg
aaa
js
rdtsc
nop
pusha
push
movw
pushl
movl
pusha
push
push
movl
pushf
pushl
mov
movb
lea
jmp
sub
jmp
cmpsl
in
popa
and
adc
and
ss
call
daa
jnp
jnp
dec
pop
sub
repz
and
loop
lods
ret
dec
imulb
popa
dec
pop
sbb
xchg
mov
popa
ljmp
paddw
xchg
ja
test
leave
inc
bound
mov
hlt
jno
mov
pop
pop
cs
inc
and
call
dec
loope
cmp
sub
arpl
aaa
sub
push
shll
inc
xor
icebp
out
push
pusha
pop
push
das
loope
cmp
push
mov
fucom
mov
sbb
imulb
mov
jno
mov
aam
mov
push
pop
jp
divb
xchg
xor
pop
jnp
cltd
aad
inc
lcall
mov
jg
cmpsb
nop
sub
mov
ret
add
lahf
out
dec
insb
xor
jle
and
add
mov
int
adc
sbb
xchg
cwtl
add
push
jg
adc
rclb
enter
inc
pop
jbe
divl
sub
inc
push
jae
push
push
lcall
out
sub
movsb
aaa
jg
jecxz
xor
movsl
ret
dec
or
adc
ficompl
xor
rorl
nop
cli
mov
cli
dec
ret
imul
pop
and
repnz
inc
pop
inc
adc
jp
mov
sub
je
push
fildll
repz
addr16
sti
push
xor
sbb
sbb
loope
push
sub
dec
shll
mov
and
push
ffreep
jns
test
aam
fcoms
and
fstp
add
addr16
xchg
aas
mov
scas
pushl
call
mov
mov
lods
shrl
fiaddl
jp
out
pop
repnz
sub
dec
loopne
dec
insl
lret
inc
sbb
loopne
mov
repnz
inc
movsb
pop
sbb
pop
in
loope
insb
icebp
imul
pop
dec
int3
and
inc
rcr
adc
test
fucomip
shlb
fbld
das
in
bound
test
movsl
movsb
pop
or
loope
xchg
push
add
daa
movsb
mov
pop
lds
dec
ljmp
sub
mov
xor
stc
lods
pop
dec
insb
push
popf
dec
add
mulb
or
in
repnz
jg
mov
cmp
incb
ss
jp
imul
mov
pushf
aaa
scas
and
test
addr16
bnd
loopne
jmp
sub
cmp
adcb
das
mov
mov
mov
xor
movsb
outsb
out
addr16
sbb
adc
lcall
aad
stos
jg
pop
lock
js
pop
lds
or
xor
adc
add
inc
repz
xlat
adc
ds
lahf
sahf
imul
mov
or
xchg
std
push
mov
mov
mov
test
clc
adcl
cmp
adc
and
mov
jb
repz
stos
mov
add
insl
dec
adcb
xor
mov
jmp
pop
pop
shl
pop
xor
push
insl
pop
mov
jbe
inc
arpl
js
test
leave
add
mov
mov
cmc
cli
icebp
aaa
sbb
xchg
es
cltd
jb
cli
test
add
adc
mov
enter
stos
push
pusha
fcoml
adc
lds
sbb
pop
subb
sbbl
or
inc
test
cmpsb
cmp
jb
sbb
je
sub
out
outsl
cmp
adc
sub
mov
adc
add
dec
in
push
scas
adc
add
imul
dec
dec
sbbb
loope
loope
xor
aad
ficompl
lds
mov
sub
push
ja
std
pushf
call
or
cmp
cltd
push
push
movsb
outsb
jge
push
sti
scas
mov
add
cmp
lret
xchg
stc
lret
addb
push
pop
jle
xorb
shlb
pop
hlt
mov
cmp
hlt
mov
lods
cmp
xchg
testb
or
and
push
fbstp
mov
xchg
movsl
cwtl
adc
movsl
inc
pushf
lahf
je
test
bound
imul
sub
push
fimuls
mov
dec
mov
out
das
adc
sbb
mov
shrb
mov
lock
mov
lahf
add
enter
jno
dec
sub
adc
add
cwtl
xor
repnz
pusha
and
jns
incb
mov
jbe
imul
and
fucomi
sbb
fdivs
cltd
mov
fs
rorb
test
push
call
dec
fbstp
pushf
adc
ljmp
add
sub
sahf
sub
xchg
out
test
dec
dec
popf
into
and
out
adc
push
sbb
js
adc
mov
into
fildl
mov
aad
pop
ljmp
adc
inc
fdivs
lods
jg
mov
ja
popf
mov
cmp
pop
xchg
push
popf
outsb
mov
pop
shrb
in
xorb
and
adc
dec
loopne
inc
sarl
ds
daa
xchg
cs
dec
int3
insl
lock
push
push
push
cltd
xchg
bsr
lahf
xor
cld
cmpsl
fwait
lret
andl
lea
or
push
ljmp
pop
jns
add
lods
fcoml
and
mov
pop
repz
inc
xchg
test
adc
xor
mov
pop
imul
adc
dec
iret
inc
or
popa
dec
mov
jns
or
outsb
gs
mov
cltd
dec
mov
sub
pop
sub
insl
and
mov
push
jl
or
push
jl
or
add
enter
daa
insl
jne
imul
ss
out
stc
ljmp
cmc
lds
pusha
sub
add
daa
add
cmp
xorb
sbb
mov
sbb
jge
inc
ljmp
lds
xchg
mov
lret
xchg
lret
sbb
mov
shl
in
dec
repz
lock
xchg
and
push
mov
std
fcmovu
jae
mov
xchg
inc
out
data16
cltd
xchg
push
hlt
push
jne
mov
pop
mov
mov
rcll
or
mov
sbb
inc
cld
pusha
call
pop
lea
das
jno
popf
xlat
push
add
jae
loop
xchg
repnz
adc
mov
ss
jecxz
in
jae
nop
add
out
in
inc
sbb
pop
lods
dec
cli
imul
lock
je
mov
mov
aam
into
inc
mov
stc
add
test
xor
mov
lock
xchg
es
fsub
xlat
mov
enter
or
xchg
out
inc
sub
add
inc
pusha
call
cmp
pushf
cmp
pushf
lea
jae
test
cmc
stc
pusha
add
pusha
jmp
aaa
pop
inc
das
jno
add
lds
sbbl
icebp
sbb
jae
lock
ss
lcall
ja
push
out
dec
sahf
das
mov
push
ficoms
pop
fisubrs
dec
divb
or
cmp
jns
cld
push
xor
xchg
inc
ficomps
out
jns
sbb
xlat
testl
fisubrs
or
inc
dec
adc
aam
cld
push
and
mov
fmulp
mov
inc
movsb
test
cwtl
pop
mov
pusha
pop
sbb
popa
cmpsb
inc
popa
xor
gs
lret
sub
fisttpll
jecxz
jg
notl
push
xchg
outsl
fwait
imul
hlt
popa
cmp
or
data16
test
sbb
shl
xor
mov
lea
cwtl
mov
xchg
into
nop
data16
pop
daa
nop
lea
push
mov
cli
or
fcompl
push
xor
xchg
shlb
in
sbb
xor
add
cs
test
pusha
call
push
pusha
pushf
lea
jae
bt
clc
cmp
pusha
pushf
lea
jae
stc
cmp
push
lea
ja
dec
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
mov
mov
dec
sbb
cmp
in
jbe
pop
out
imul
pop
nop
push
leave
cmp
add
dec
ds
call
ja
icebp
call
inc
cltd
repnz
mov
test
cmc
pop
xchg
test
outsb
sti
or
daa
add
pop
in
sbb
cld
andl
inc
inc
and
pop
idivb
add
cmp
add
xchg
jp
xor
lahf
xor
adc
cmc
sbb
dec
and
mov
imul
xchg
lds
pop
inc
dec
xchg
insb
into
ret
cmp
lahf
ja
fisttpl
cmpsb
pop
xor
fucom
shll
sub
sub
pop
lods
push
test
lock
movsl
mov
push
orb
pop
or
xchg
cmp
sub
lds
and
addb
pop
fld
aaa
enter
mov
mov
popf
rorb
pop
xor
dec
pop
in
inc
jecxz
out
add
repz
and
sbb
clc
push
ftst
loop
jnp
xchg
cmpsb
cmp
cmc
ret
nop
mov
iret
mov
dec
fxch
inc
adc
add
jns
out
jle
or
repz
outsb
xlat
mov
loop
adc
push
mov
xchg
push
cmp
test
aaa
dec
push
loop
test
mov
into
or
sbb
inc
mov
aaa
shl
imul
lret
movsb
out
cmpsl
hlt
iret
imul
xlat
ja
test
sbb
xor
push
arpl
dec
addr16
imul
xorl
jle
sub
fisubrl
pop
pop
inc
rcrl
es
jbe
popf
das
cmovle
pop
adc
rorl
add
insl
xor
icebp
adc
mov
sbb
mov
xchg
or
pop
adc
jmp
xlat
ja
lods
fnsave
pop
mov
dec
ljmp
jno
scas
cmp
xchg
paddsw
pop
sbb
mov
icebp
aas
imul
test
sbb
or
xor
test
js
and
mov
push
aam
lcall
inc
adc
sbb
xor
fstp
cli
ds
adc
lret
enter
lcall
sti
out
cmpsb
jne
out
xchg
mov
inc
cmpl
xchg
sbb
filds
pop
inc
dec
sbb
cmp
xchg
rcrb
jns
or
dec
movl
test
ds
inc
jmp
cmovae
dec
das
rorb
dec
cmp
sbb
aas
sahf
flds
mov
inc
outsl
push
pop
inc
fcoml
dec
cmp
dec
lret
out
add
adcb
test
sahf
mov
stos
xlat
scas
jle
popa
cmp
cltd
dec
aas
mov
cmp
insb
jle
jg
addr16
outsl
dec
into
mov
lret
inc
lods
or
mov
ss
mov
jle
push
outsl
sub
cmpsl
or
inc
aas
popl
inc
into
and
push
jnp
scas
push
mov
cmp
dec
ret
outsb
gs
int3
sbb
shlb
daa
lods
cmp
cs
mov
aas
scas
xor
or
pop
inc
js
adc
out
rcll
bound
push
out
lret
int
aaa
movsl
repz
jmp
inc
jno
xchg
or
pop
iret
xor
mov
pop
js
jo
das
lret
movsl
int3
ret
jle
in
dec
sbb
aas
rdtsc
mov
dec
mov
sarb
xor
xor
jae
subl
les
cmp
cmp
pop
fdivr
inc
inc
mov
scas
iret
add
dec
aas
addr16
and
lods
inc
sub
ss
movsl
and
mov
int3
das
movsl
mov
ljmp
xor
lods
stos
mov
cmp
aas
adc
lds
push
ss
outsl
push
inc
es
mov
jae
or
lret
das
fnstenv
ret
bswap
lret
aam
rolb
es
dec
add
mov
add
dec
inc
lret
lahf
popa
je
in
cs
lock
cmpsl
insl
add
enter
scas
and
xchg
lret
inc
arpl
test
aas
ja
mov
or
loopne
negl
add
adc
inc
add
mov
pop
dec
flds
gs
dec
rcrb
pop
aaa
scas
pop
jge
push
insl
icebp
dec
jmp
test
inc
push
ljmp
mov
inc
fld
gs
ss
lods
aaa
xchg
pop
popl
test
mov
fists
inc
movsl
mov
inc
jle
lret
pop
shrl
sbb
aas
sete
or
dec
test
lret
aaa
outsl
mov
add
test
addr16
pop
enter
add
sbb
mov
daa
cmpsl
xchg
add
call
pop
or
mov
pop
std
add
or
std
or
inc
sub
lods
stos
cmp
mov
sub
inc
xor
int3
mov
or
adc
mov
ljmp
cs
adc
imul
cmp
inc
ss
sub
mov
push
xadd
push
xchg
xchg
and
push
push
dec
leave
sbb
stc
fists
dec
sub
mov
jns
ficoms
or
testl
cli
xor
out
and
das
cmp
cmp
cld
popa
inc
xor
inc
jnp
jg
mov
pop
jle
and
and
xor
pop
adc
push
dec
mov
scas
fwait
jg
or
or
inc
mov
fwait
dec
push
pusha
lods
lods
jle
daa
push
mov
das
xor
shrl
push
and
jnp
sahf
jg
or
mov
lcall
stos
cmp
mov
sbb
cmp
dec
xchg
stc
pop
fidivrs
iret
jl
jo
mov
fcmove
adc
xor
movl
add
insb
add
insl
pusha
xlat
jb
ret
xchg
cmp
popa
jmp
inc
jmp
cmpsl
mov
pusha
daa
jl
lods
std
fstpt
inc
jmp
inc
mov
dec
je
iret
adc
dec
adc
mov
mov
dec
inc
imul
lds
pop
sbb
jle
aaa
add
adc
fs
dec
test
mov
adc
movsl
sub
das
sub
xor
leave
loop
xor
lds
cmp
movl
jg
inc
push
movsb
adc
pop
add
mov
or
stos
push
cmp
cli
cmp
aaa
sbb
sub
ret
stc
push
cmp
imul
cmp
push
mov
cmp
aad
shrl
in
stc
mov
ds
aas
fldcw
aam
int
inc
xchg
test
std
xchg
add
or
js
lods
dec
int3
add
pusha
mov
xchg
add
sbb
int
dec
jp
in
or
xor
or
cmp
xor
pop
mov
pop
outsb
das
dec
movsl
adc
lock
repz
and
and
mov
dec
sub
fists
cmpl
stos
push
pinsrw
add
arpl
push
xor
inc
add
add
mov
pop
lea
std
xor
pushf
add
and
or
add
pop
ds
lds
shl
dec
sub
sub
sub
mov
and
leave
scas
inc
out
adc
jmp
lea
imulb
arpl
mov
cmpb
adc
cmp
sbb
insl
repz
mov
cmpsl
pop
mov
outsl
test
jmp
notl
or
aaa
pop
xor
scas
lahf
mov
jle
out
mov
test
sub
mov
jmp
inc
xchg
mov
jl
mov
stos
sub
aas
jmp
sub
jmp
popa
jle
xchg
cmc
lret
fisubrl
sub
cli
jle
sub
in
xor
lret
lcall
out
dec
movsl
ds
pop
inc
lret
jmp
and
sub
lret
mov
mov
xor
out
js
rclb
dec
xor
subl
mov
rcrl
cmp
daa
xor
sbbb
daa
jle
ret
pop
add
mov
fs
xchg
inc
inc
dec
jle
mov
cmp
push
rorb
ds
notb
mov
push
das
inc
leave
out
dec
xor
mov
into
sahf
das
jle
mov
insb
inc
testl
sbb
mov
ret
pusha
xor
cmp
ds
sub
scas
push
cmp
data16
inc
mov
jbe
lods
inc
push
pop
movsb
pop
dec
aas
cmp
shrl
lods
stos
xor
out
cmc
mov
mov
lods
xchg
inc
das
xor
jmp
sub
inc
mov
jl
and
dec
das
inc
inc
stos
scas
aaa
and
dec
cmp
or
lret
das
fldenv
lret
daa
rorb
daa
lret
pop
rclb
push
cmp
out
adc
inc
scas
sbb
movsl
push
mov
negb
mov
enter
jg
cmp
enter
lods
jl
add
enter
cmp
sub
jle
repz
push
cmc
outsl
lret
out
or
adc
aas
divl
xor
mov
insb
push
rcrb
je
mov
fxch
imul
arpl
xchg
scas
jle
mov
mov
cmp
mov
outsb
push
xor
data16
lock
push
daa
cmp
sti
dec
lahf
pushf
shrb
out
das
shl
pop
xchg
cs
inc
and
pushf
repz
insb
push
repz
ljmp
lret
jae
push
xchg
cs
push
and
mov
jbe
inc
sub
aam
icebp
jle
dec
cmc
sub
lahf
sbb
cmp
or
int
inc
stc
or
dec
xchg
stc
sub
and
and
inc
cmp
dec
pushf
push
cmp
mov
or
dec
xchg
test
xchg
into
int
mov
cmp
jg
jle
add
dec
stc
xchg
inc
mov
add
pop
js
je
mov
into
test
scas
lods
cmpl
pop
jecxz
out
arpl
jg
adc
cmp
mov
and
sarl
and
lcall
cmp
dec
das
sbb
cmp
sbb
adc
pop
mov
movsl
lds
mov
mov
in
iret
push
dec
bound
lods
scas
add
stos
js
pushl
mov
add
aas
and
sub
xor
mov
sub
cmp
stc
inc
insl
dec
fsincos
std
sar
and
mov
les
pushf
xlat
sub
out
sub
push
leave
aaa
fldcw
lds
pop
or
movsl
ret
int
xchg
add
int
jmp
mov
sbb
pop
push
lret
xchg
lret
xlat
mov
xlat
dec
pop
mov
addr16
pop
sbb
in
xchg
mov
xor
out
dec
inc
mov
sti
xor
stos
roll
ds
pushf
sub
mov
pop
cs
jb
das
xchg
jg
or
cmp
jg
repz
xchg
daa
xchg
mov
xor
push
xchg
dec
xlat
lcall
rolb
adc
rorb
iret
jge
dec
cmp
aaa
jbe
or
mov
dec
in
inc
sub
inc
stos
mov
xchg
out
cltd
jle
mov
xchg
aad
sarl
and
or
repnz
cmp
xor
mov
cmp
dec
stos
daa
aaa
mov
leave
mov
or
aaa
rolb
out
jle
add
and
mov
or
mov
mov
xchg
adc
dec
xchg
cmpsb
mov
lea
adc
aas
adc
lcall
leave
or
divb
in
jle
inc
lret
cmpxchg
cmp
jp
mov
jle
aaa
scas
xor
mov
das
inc
jle
mov
pusha
mov
cmpsl
aas
inc
jle
xchg
outsl
inc
jle
inc
repnz
jg
das
push
pop
dec
or
xchg
les
outsb
push
into
incb
aaa
jle
andl
cmp
mov
vmovapd
jg
test
jg
xor
roll
jmp
xor
jg
stos
sub
and
sbb
sbb
sbb
cmpsl
dec
das
daa
mov
sub
leave
mov
and
repz
adc
loope
add
lret
mov
or
cmpsb
push
sbb
fisubrs
sahf
ja
inc
jb
mov
mov
mov
mov
pop
sahf
mov
test
leave
jle
in
xchg
xchg
test
call
or
shlb
lock
fsubs
inc
adc
popf
addb
mov
pusha
scas
adc
lea
jg
mov
push
lahf
test
iret
push
jnp
mov
cmp
sbb
lds
xchg
ds
mov
pop
sti
and
std
sbb
cmp
and
or
jns
loopne
pop
lods
push
and
jle
fsts
or
in
dec
insb
cmpsb
xor
jae
add
pop
xor
in
daa
mov
and
pop
mov
stc
mov
mov
in
jmp
mov
jns
aad
adc
mov
in
or
xlat
ss
push
test
pop
sbb
xor
sub
call
movsl
daa
pop
adc
stos
frstor
ds
std
mov
xor
stc
ss
xchg
std
pop
jge
cmc
ds
out
in
scas
sub
test
or
cmp
insb
aas
dec
sub
lret
bound
aad
ret
mov
push
sub
lods
adc
mov
dec
xchg
mov
cmp
lods
sub
add
mov
loope
sbb
outsl
cmp
mov
sub
cmp
mov
std
or
push
stos
and
add
lret
std
sub
cmpsb
dec
lds
scas
mov
mov
mov
hlt
insb
js
das
test
dec
jmp
and
jg
add
xor
fisttpll
jmp
dec
push
arpl
sbb
sbb
push
stc
sbb
pop
adc
xor
lahf
imul
add
cmp
lret
dec
mov
inc
mov
scas
inc
hlt
jns
sti
sti
das
das
aas
cld
jbe
out
xor
in
mov
jmp
xor
outsl
cmp
mov
aam
aas
aaa
xchg
cmp
jle
mov
pop
std
hlt
adc
add
sub
andl
push
rol
mov
into
fcoml
and
cs
stos
adc
jg
dec
cmp
jno
dec
mov
mov
xchg
dec
shrl
cmpsl
cmp
testb
and
or
bound
xor
aas
scas
iret
ds
stos
call
iret
fiadds
inc
xor
jp
dec
mov
mov
xchg
aad
pop
inc
push
jecxz
pop
cmp
mov
mov
dec
pushf
push
xor
jg
or
in
sub
mov
mov
scas
or
and
jg
and
leave
adc
dec
dec
add
and
jmp
arpl
aas
aas
inc
aas
cmp
inc
xchg
loopne
cmp
es
dec
ret
lods
jmp
jnp
mov
mov
or
data16
jno
and
ss
fmul
jns
dec
lahf
mov
jl
xchg
lds
mov
push
and
movsb
inc
inc
push
mov
mov
lret
sub
dec
adc
sbb
stos
in
or
adc
out
movsb
ret
adc
and
cli
leave
sbb
test
push
and
lods
jle
push
mov
stos
and
push
in
mov
imul
stos
cli
sbb
ja
mov
add
dec
and
mov
stos
das
cmp
jbe
lea
or
sarl
xor
or
es
out
dec
lds
dec
cs
fisttpll
xchg
sti
cmpl
and
fsubl
and
shlb
in
mov
outsb
sbbl
pop
cltd
sub
jb
jg
mov
xchg
das
dec
mov
sub
push
mov
std
lea
inc
das
rorl
insl
push
xchg
lahf
jle
add
jnp
inc
mov
lahf
bound
xor
lea
dec
enter
jg
clc
daa
fwait
mov
push
jmp
jg
push
xlat
push
adc
xor
shrl
and
push
mov
pop
imul
sbb
sbb
and
pop
pop
cmp
ret
out
addr16
sub
xor
cmpsb
lahf
ds
dec
and
lods
add
push
adc
test
ficomps
sbb
das
mov
cmpsb
cmp
jle
inc
add
neg
ds
and
jl
jle
push
dec
jge
and
lret
inc
leave
hlt
pop
sub
sbb
test
jno
sbb
cli
cmpb
pop
insb
mov
cmp
lahf
lret
sar
fildl
loopne
sbb
pop
iret
sbb
ficoml
cmpsl
add
push
or
add
gs
aas
inc
sahf
dec
cmp
dec
in
fbld
dec
xchg
scas
call
cmpsl
scas
cli
jbe
cmp
jle
sbb
dec
jle
daa
das
pop
sti
mov
adc
mov
shl
and
dec
sub
mov
mov
daa
mov
jle
cs
bt
inc
or
movsl
mov
pop
mov
lret
nop
jmp
sub
and
mov
sub
jae
filds
cmpsb
mov
and
xor
je
mov
jbe
fldenv
out
pop
dec
loopne
adc
loop
xor
sub
pop
inc
bound
fldenv
daa
add
cmp
cmp
inc
inc
sub
mov
or
sti
xchg
inc
inc
mov
inc
ret
aaa
push
ss
push
in
std
rdpmc
rorl
cmp
stos
scas
add
fldcw
sub
inc
bound
sti
jg
adc
dec
inc
push
jmp
add
das
push
xor
es
and
call
pop
dec
dec
jbe
inc
fisttps
sbb
shrl
pop
lahf
cmp
out
sahf
add
mov
pop
pop
clc
or
cmpsl
dec
cmp
mov
ds
cmp
dec
push
sub
es
pusha
adc
mov
jg
or
repnz
out
pop
scas
jnp
dec
jo
cmp
lea
xchg
lahf
jne
cmp
iret
inc
mov
mul
jmp
xchg
cmpsl
sub
push
xchg
shrb
jl
jle
mov
outsb
xchg
sbb
jle
mov
cld
rorb
mov
lods
jg
inc
lds
cmp
aas
lods
inc
fildll
aaa
add
mov
xchg
stos
test
cmpsb
sbb
outsl
xorl
jle
loope
pop
cmp
nop
or
push
inc
push
cmp
ljmp
mov
xchg
aas
xchg
sub
fbstp
lea
push
jle
lds
xchg
sbb
pop
or
cmp
add
push
xchg
sub
fcomi
xor
mov
or
icebp
mov
int3
ss
cmp
sti
pop
sahf
fcoms
lret
adc
mov
push
jl
bound
rorb
mov
insb
mov
pop
dec
mov
iret
imul
in
bndstx
daa
cmp
lock
rclb
pop
mov
or
fistpl
bound
push
sbb
dec
xchg
sti
push
dec
daa
aas
ljmp
rolb
jg
repnz
add
mov
insb
pop
aaa
aaa
xor
jg
jmp
into
jmp
idivl
sbb
insl
popf
stos
addr16
pop
jg
push
add
adc
xchg
out
imulb
enter
stos
xor
sbb
scas
xchg
ret
loop
dec
sbb
je
pop
adc
je
lods
pop
or
das
cmpsl
aas
lods
cmp
pop
ret
mov
pop
stc
mov
xor
insl
scas
mov
sahf
or
or
pop
sub
cmc
pop
xchg
mov
shrb
mov
cmc
mov
or
and
outsl
mov
mov
sbb
adc
adc
or
xchg
pop
test
inc
ret
gs
mov
inc
mov
jl
sub
pop
add
andl
sysret
pop
jmp
push
insb
adc
cs
idivb
and
mov
scas
fidivs
jecxz
push
xlat
lods
or
mov
sbb
cmp
ljmp
cmp
arpl
inc
iret
or
sbb
jg
addr16
fstl
mov
out
test
daa
rolb
mov
das
sbb
or
mov
cmovnp
out
lret
divl
and
cmp
mov
jle
sub
bound
cs
outsl
pushf
aad
pop
movsb
jno
mov
outsb
or
testb
sbb
or
or
cmp
dec
jg
fnstsw
ds
xor
aam
scas
iret
pop
out
pusha
pop
sub
andl
and
loope
insl
aas
or
xchg
ja
daa
sub
vdivsd
ss
pop
ds
enter
mov
mov
jo
shl
mov
ret
jge
xchg
mov
outsb
ret
lret
or
pop
lret
sahf
mov
xor
mov
jne
cmpsl
and
inc
push
leave
xor
cmp
out
or
xor
outsb
pushf
aaa
jnp
daa
outsb
shrb
es
mov
pop
mov
je
addr16
js
sbb
sbb
gs
pop
xor
icebp
mov
out
ror
lret
out
in
cmp
andl
mov
scas
shl
movsb
enter
pop
iret
xor
mov
cmpb
cwtl
mov
push
add
movsl
push
sub
jbe
fisubl
push
dec
int
in
mov
adc
and
fld
lds
push
add
aam
fdivs
push
in
loopne
fistpll
mov
xchg
cltd
and
xchg
jns
xchg
xor
js
pop
insb
push
testl
movl
sbb
sub
lea
aaa
shrb
xlat
clc
or
jmp
xor
scas
push
iret
insl
pop
out
sti
or
repz
inc
mov
enter
inc
inc
dec
icebp
adc
iret
sbb
insb
cmp
adc
inc
push
mov
cmp
sbb
ret
hlt
xchg
aas
mov
das
xchg
enter
adc
ja
sub
es
and
inc
mov
cmp
sub
jl
lods
cmp
idivb
inc
pushf
adc
and
mov
movsl
adc
dec
jl
inc
jle
add
mov
daa
fnstcw
push
inc
lods
loop
sbb
or
inc
aaa
cmp
inc
pop
push
roll
mov
inc
jg
dec
daa
jno
lds
dec
pop
adc
imul
insb
push
mov
inc
aad
push
inc
lods
mov
cmc
in
sarb
cmp
aas
xchg
ret
inc
test
push
and
dec
test
ss
push
pushf
jbe
adc
jmp
jbe
mov
xor
ret
dec
mov
or
clc
testl
in
imul
push
mov
into
dec
in
adc
int
jnp
ss
push
dec
ljmp
ret
adc
mov
xchg
and
mov
xor
cmpsl
dec
aam
neg
dec
std
sub
pop
aas
jae
std
adcl
je
iret
fsts
jg
ret
imul
push
aaa
xchg
daa
aas
scas
xchg
push
in
sub
dec
push
ficompl
push
repz
adc
cmp
out
jno
xchg
sub
cs
data16
dec
lret
jecxz
cvtps2pi
adc
xchg
mov
test
and
sbbb
sbb
jno
cli
cmp
out
outsl
mov
test
xor
sahf
fnstcw
int
pushf
jle
gs
test
sub
addl
out
ret
sub
enter
outsb
inc
adc
out
pusha
ss
or
lcall
lods
pop
mov
aaa
out
xchg
sbb
xchg
sbb
aas
mov
xor
rcrb
daa
push
xchg
fs
cmp
sahf
gs
and
rclb
fisubs
iret
sbb
pop
push
push
imul
sbb
mov
scas
mov
mov
mov
cmp
xchg
inc
arpl
arpl
cmp
cld
dec
cmp
cmp
es
cli
or
inc
rol
push
sarl
mov
aaa
cmp
mov
je
enter
jns
push
push
outsl
das
dec
pop
push
push
out
mov
jmp
sti
or
mov
adc
xor
cmp
xchg
add
xchg
cli
mov
shlb
ds
cmp
dec
in
mov
mul
test
mov
and
jmp
inc
lods
sbb
dec
inc
les
hlt
mov
or
xchg
leave
mov
iret
adc
repnz
fs
push
das
pusha
jnp
sbb
mov
inc
fstl
inc
mov
and
fs
cld
add
xor
mov
and
loop
das
lds
inc
dec
and
xchg
jb
cltd
add
add
push
arpl
xor
and
jmp
sbb
and
scas
pop
je
pop
dec
mov
xor
xchg
add
int3
ret
pop
sti
cmp
rcrl
cmp
gs
mov
inc
out
daa
cmp
sub
sub
push
xchg
lret
cmp
jno
dec
lret
das
sahf
imulb
jbe
xor
sub
je
jb
les
ret
pop
ret
in
ss
add
aaa
es
cmpsl
lret
mov
pushf
das
daa
jmp
dec
and
add
sbb
aad
andb
or
shlb
xchg
test
das
lcall
shlb
inc
pop
das
jle
icebp
jbe
mov
add
cs
adc
je
mov
pusha
imul
or
outsb
outsl
cmp
or
test
inc
mov
aas
jle
mov
jl
xchg
or
adc
mov
or
jl
rep
movsl
jle
xchg
in
pop
jo
stos
pop
sub
adcl
scas
xor
pop
xor
jp
jle
dec
push
bound
jo
leave
cs
arpl
pop
aas
mov
movsl
jne
sub
inc
stos
push
add
xchg
sub
mov
decl
aas
pop
lds
idivl
dec
cmp
xor
inc
cmp
xchg
pop
das
xor
ds
outsb
pop
subl
aas
das
mov
dec
sbb
out
cmp
cmc
das
adc
aaa
test
add
xor
xor
test
jle
mov
shll
mov
mov
push
clc
push
mov
int3
sub
repnz
mov
insb
xchg
or
xor
jmp
xor
inc
hlt
icebp
xchg
jne
mov
mov
cmp
frstor
sub
mov
or
out
xlat
add
shll
add
xor
sti
lods
push
aas
cmp
mov
fwait
int
fcomps
mov
std
notl
icebp
sub
scas
mov
cmpsl
jle
fmuls
or
lods
sbb
jg
mov
pop
das
sub
xor
mov
cli
pop
cmp
ret
xor
jecxz
into
dec
dec
pop
push
jle
jb
int3
ja
mov
mov
jl
bt
icebp
jne
test
ss
sub
cmp
pop
push
dec
cmp
into
js
dec
movsb
in
cmp
push
out
inc
stos
rclb
je
mov
xor
outsb
test
pop
cmp
gs
and
push
and
ret
scas
push
add
cmp
xchg
mov
cmp
outsl
fwait
sahf
or
inc
test
addb
dec
int
aas
out
cmp
cltd
ds
lahf
jp
dec
lret
test
pop
mov
and
mov
paddb
test
sub
inc
sub
scas
jle
inc
mov
cmp
movsl
sbb
pop
mov
dec
xchg
mov
outsw
pop
dec
or
mov
dec
mov
iret
fistl
xchg
arpl
jmp
ret
out
das
es
mov
subl
add
into
xchg
xlat
dec
imul
lock
pop
jecxz
sbb
add
mov
dec
shrl
xchg
xlat
jmp
dec
push
inc
es
xor
xchg
movsl
iret
into
xchg
aas
pop
mov
adc
mov
inc
mov
xchg
jg
cmp
jbe
dec
mov
adc
comiss
cmp
fstpt
mov
ret
pusha
sahf
sbb
iret
enter
mov
stc
mov
call
add
inc
push
jmp
das
sub
pop
add
out
and
into
mov
mov
addr16
push
scas
int
xor
data16
push
inc
clc
inc
dec
fcmovnu
fwait
add
mov
stc
faddp
in
loope
ret
push
fcmovb
mov
aaa
into
inc
addr16
and
dec
das
sub
xchg
sbb
out
in
ds
out
dec
inc
stos
push
sbb
pop
jp
xchg
icebp
fldln2
inc
addr16
iret
dec
int3
out
mov
push
repz
lods
iret
mov
and
lods
and
aas
fldpi
aad
lret
jg
add
xchg
xor
push
mov
pop
push
emms
mov
sarl
in
in
xlat
pop
leave
pop
insb
mov
mov
mov
xchg
pop
mov
jns
jg
or
test
jnp
fxch
lret
test
loopne
sub
imull
inc
mov
xchg
sub
pushf
addr16
mov
mov
mov
pop
jle
out
jno
das
rorb
adc
aaa
dec
pop
in
inc
cwtl
addr16
sbb
mov
add
int3
pop
ret
cmp
pop
push
mov
jecxz
aas
jle
adc
cmpsl
out
sbb
mov
shrb
rol
mov
cmpsl
adc
push
out
pop
addr16
jp
call
push
leave
popa
int
push
mov
lret
push
add
dec
gs
sbb
push
or
sub
or
xlat
mov
or
jle
xor
pop
pop
inc
stos
xchg
xor
mov
jle
dec
in
jae
xor
and
dec
icebp
daa
jb
add
or
int
dec
lods
lods
daa
cmpsb
fsubrs
mov
or
jbe
mov
inc
popf
jle
push
out
push
inc
jnp
and
sub
test
das
cmpsb
ja
mov
sub
inc
decb
sub
daa
shr
cmp
inc
push
jge
repz
fnsave
js
fs
sub
pop
in
cmp
int
ds
sysexit
or
cmp
sarb
dec
mov
push
stc
mov
pop
dec
int3
add
sub
lcall
stos
inc
mov
add
inc
in
int3
fnstsw
sub
sub
loope
and
movsb
leave
outsl
subl
sbb
test
ret
jmp
addr16
cmp
pop
and
daa
or
ja
jnp
imul
repnz
pop
cs
xor
arpl
mov
out
and
fsubp
lcall
push
cld
test
ja
mov
add
sub
xor
inc
pop
movsb
and
std
mov
xchg
mov
mov
sbb
push
jmp
jno
pop
inc
cli
jecxz
or
sub
outsl
pop
jg
push
pop
mov
jmp
push
push
pop
mov
xchg
sub
aaa
and
lods
add
divb
sub
push
jno
rcll
call
scas
aad
cmp
dec
outsl
repz
dec
cli
add
das
cmpsb
cmp
add
add
pop
pop
cmpsl
xor
sti
pusha
dec
lea
icebp
xor
lret
lds
xchg
pop
rorl
popf
cmp
jmp
sub
pop
xor
bound
adc
inc
inc
out
sub
inc
in
mov
stos
lcall
daa
jge
cmp
outsl
sbb
xor
int3
mov
iret
cld
lods
movsl
jle
syscall
cmp
repz
sbb
pop
js
lret
dec
xor
cmpsl
push
lea
cmp
std
xor
testb
add
ss
mov
mov
add
iret
rorb
sbb
lret
jne
lods
pop
xor
jle
or
pop
gs
cmpb
sbb
aam
movsl
out
dec
mov
orb
xadd
sub
daa
sub
or
dec
and
cli
data16
sub
xor
cmp
or
fwait
sub
adcl
jg
lret
mov
mov
xchg
mov
fcomip
dec
mov
cli
dec
sub
scas
adc
sub
jns
push
movzbl
insl
jp
lds
jmp
pop
mov
lods
sub
dec
loope
int3
dec
mov
and
adc
icebp
and
aad
cld
xor
pop
lods
loopne,pt
sbb
or
xchg
iret
inc
repz
cltd
cmc
bswap
mov
dec
xchg
push
jbe
out
orb
add
push
ljmp
aas
out
and
sbb
sbb
mov
pop
inc
adc
ret
cmpsl
dec
lret
inc
cmpsl
imul
or
stc
fnstcw
lahf
pop
fisubrl
jmp
mov
pop
outsl
and
jg
sarb
out
stos
sub
cmp
cmpsl
xor
cmpsl
xchg
in
push
inc
je
aam
xor
jmp
xor
pop
test
or
lcall
lods
push
into
jae
inc
dec
dec
lret
sbb
cmp
shl
mov
push
int
xor
jmp
imul
xor
jle
lahf
daa
cmp
mov
das
add
gs
les
into
sbb
fcomps
xor
das
out
out
cmp
mov
add
icebp
lret
lahf
loope
aaa
dec
loopne
pop
aas
and
fcoml
xchg
jp
mov
fsubr
dec
adcl
push
pop
sub
pop
or
push
jl
cmp
pop
call
inc
xchg
fs
jg
mov
sarl
sub
push
jb
push
jle
inc
cmp
dec
xor
int3
sub
fistps
mov
mov
les
mov
ret
hlt
stc
test
mov
cmp
adc
bound
adcb
pop
test
xchg
cmp
aas
jle
sbb
mov
xlat
rorl
mov
adc
xchg
dec
jle
movsl
sub
test
jle
or
cmp
fstpl
sahf
jle
sub
cmp
or
ror
lret
movsb
and
lcall
mov
fsin
sbb
sub
push
cmpsl
out
sub
jno
xchg
sub
movsb
push
mov
xchg
mov
sub
fdivrl
outsb
subb
xlat
push
rolb
idivl
cli
cmpsb
daa
push
mov
xchg
aad
daa
jle,pt
fisubs
cld
dec
or
call
lea
inc
and
dec
adc
cmp
pop
fstpl
sub
jg
in
pushl
sub
mov
mov
inc
add
in
cmp
sti
push
rol
test
jle
outsb
filds
pop
testl
xor
push
pop
fimull
xor
dec
mov
lsl
dec
jg
cmp
mov
aas
cmp
insb
test
imul
frstor
mov
fidivrs
jae,pt
and
enter
mov
xor
out
inc
push
pop
pop
repnz
cmp
ffreep
sub
mov
mov
xchg
dec
iret
das
dec
gs
stos
pushf
jle
mov
lds
xor
xchg
xor
add
and
nop
data16
jl
push
push
popl
divb
stos
mov
push
jae
cmp
sbbb
lretw
ror
leave
rclb
out
sbb
out
mov
jae
lods
popa
movsl
and
cmpb
call
mov
sarl
sbb
pop
xor
sub
outsb
addr16
movb
test
add
and
push
filds
test
dec
data16
stc
mov
xchg
dec
cmp
and
mov
cwtl
mov
cmpsl
mov
outsl
push
push
cmp
dec
shr
rolb
pop
das
negl
mov
dec
and
xor
pushl
jle
mov
xchg
push
and
aas
fwait
add
mov
push
jg
xchg
push
aas
xchg
adc
outsb
dec
inc
nop
mov
int
mov
imul
daa
dec
outsl
daa
or
mov
das
jmp
mov
jp
test
mov
sub
push
mov
push
stc
ja
sub
daa
cwtl
inc
cmp
stos
add
add
mov
cwtl
stc
sbb
pop
repz
dec
jb
or
sahf
stc
mov
int3
mov
jmp
leave
add
cmp
leave
inc
in
pushf
sbb
jno
outsl
dec
cmp
sub
into
js
out
roll
pop
mov
jno
xor
lret
mov
pop
push
push
scas
mov
mov
dec
sahf
sbb
fsubr
rcl
out
push
or
mov
fimull
push
and
inc
gs
ror
movb
and
or
popf
mov
xchg
lahf
popf
xchg
sub
iret
xchg
jle
sub
adc
xor
ss
mov
ds
xor
imul
mov
cld
mov
cmp
pop
sub
push
sbb
int
dec
ret
mov
mov
dec
lret
xor
shrb
inc
adc
jnp
push
mov
or
rcr
popf
sub
leave
mov
dec
addr16
pop
daa
xor
das
pop
mov
ud2
or
xchg
loope
pop
jecxz
stos
mov
inc
rolb
mov
in
cmp
pop
loopne
and
pop
mov
aad
es
xchg
cli
out
ret
out
addr16
mov
lds
cmp
enter
mov
mov
mov
aas
stc
lods
bound
mov
cltd
dec
scas
movsl
xor
das
scas
xchg
push
std
pusha
ss
out
movb
inc
push
sub
fsubl
pop
mov
jnp
hlt
mov
sti
mov
cmc
dec
jmp
push
mov
dec
ljmp
out
jg
adc
outsl
mov
or
or
xor
movsl
iret
mov
add
sti
es
pop
push
sub
test
and
push
addb
dec
decl
mov
sub
cltd
lret
sbb
xor
pop
pop
push
xchg
cmp
pop
lahf
xchg
and
sahf
or
fisttps
adc
cmp
cld
out
pop
in
in
add
shll
cmpsl
mov
sti
lret
movsl
out
scas
sub
stc
add
sub
cmp
or
lods
dec
mov
andl
lahf
add
pop
lds
lcall
lock
rcl
imul
cmpb
cmp
mov
xor
fcoml
cmp
xor
out
or
jle
lahf
jbe
mov
mov
mov
stos
hlt
fildl
adc
mov
mov
mov
sub
jmp
cmp
es
fisubs
mov
loopne
cmp
ficompl
pop
mov
dec
add
xlat
movsl
jle
aas
daa
mov
sub
cmp
pushf
fidivs
lods
jg
std
or
leave
ljmp
and
cmpsb
rolb
fsubr
mov
aam
imul
fcompl
mov
xchg
xchg
mov
adc
dec
lods
mov
sub
mov
jge
cltd
inc
sbb
std
pop
icebp
sub
outsl
push
cmp
adc
lds
test
dec
hlt
lahf
jl
cmc
imul
push
ljmp
jle
cmc
iret
aaa
stos
and
push
cmp
add
inc
push
test
cwtl
sti
push
mov
pop
sti
jns
loope
dec
mov
repz
out
ret
inc
jle
fstpt
lea
xor
dec
in
dec
mov
push
js
repz
aas
movsl
gs
repz
inc
das
divl
lret
cmp
fisttps
xchg
push
add
adc
xor
mov
int3
fistpll
xorb
and
or
popf
repz
es
jo
xchg
sbb
cmp
mov
pop
jo
inc
fcmovnb
divb
mov
jl
jno
jae
mov
mov
pushf
dec
jnp
imul
sahf
cmp
adc
inc
sub
lret
mov
outsl
push
clc
das
xchg
call
add
test
int
mov
xchg
out
test
aad
and
mov
cwtl
jno
inc
imul
sti
movsb
jae
aas
stos
scas
push
mov
jle
push
or
out
stc
aad
stos
repz
push
cmpsb
sub
or
outsl
inc
adc
mov
mov
inc
and
ss
pop
sbb
xchg
orl
xchg
mov
dec
cmpsl
xor
sub
mov
ds
mov
into
aam
mov
sbb
imul
add
mov
mov
ss
daa
jl
add
xor
lds
mov
subb
dec
loop
push
jb
dec
rolb
sub
or
cltd
sub
lods
xlat
out
packuswb
or
ds
lahf
or
adc
push
cmp
sti
mov
xor
mov
test
pop
daa
mov
dec
stos
mov
cmpsb
leave
es
inc
mov
xchg
es
and
pop
pushf
into
sub
pop
test
or
cmp
lahf
dec
pop
ret
hlt
mov
iret
sbb
aaa
sbb
add
dec
pop
aad
lcall
icebp
dec
adcl
mov
jle
xchg
pushf
sbb
adc
mov
mov
inc
cmp
jmp
xchg
xchg
inc
mov
and
mov
cmpsl
daa
xchg
push
ficoms
dec
cmpb
shlb
jmp
mov
xchg
mov
push
clc
cli
int3
adcl
repz
lahf
or
lahf
into
or
imul
cmc
inc
movsl
jle
and
mov
gs
inc
pop
fs
fildll
sahf
sarl
shrl
sbb
add
out
mov
test
mov
mov
and
xchg
sub
jbe
mov
sub
es
cmc
jle
scas
sub
or
daa
or
mov
xchg
mov
shrl
jmp
insb
add
and
aaa
ljmp
test
mov
mov
fstpl
mov
dec
inc
sub
stos
inc
xor
xor
mov
stos
sub
push
mov
mul
mov
dec
orb
sub
int
pop
out
mov
inc
sub
jmp
adc
es
jl
push
scas
js
or
das
rdpmc
mov
leave
movl
daa
sub
pop
xor
pop
pop
popf
jbe
mov
fstp
mov
js
jl
das
mov
shr
shrl
mov
push
andb
sub
pop
sub
jo
xor
cmpsl
lods
mov
push
scas
sti
xor
daa
and
das
mov
inc
cmc
push
popa
sahf
and
or
outsb
or
jl
adc
stos
mov
jne
sub
in
stos
cs
xchg
mov
xlat
cmp
xchg
loop
fadds
imul
cmp
cmp
cmp
dec
test
sbb
xor
lret
repz
xchg
add
inc
mov
mull
and
jecxz
xchg
loop
pop
sbb
xor
nop
pop
mov
test
pop
xlat
icebp
fsub
sub
push
test
xchg
sub
ret
icebp
mull
cmp
jbe
loop,pn
jl
stos
mov
movsb
sbbb
or
dec
sub
lds
or
movsb
mov
js
es
shlb
ret
in
insl
in
cmpsb
xlat
dec
and
insb
sahf
jge
xchg
sarb
jecxz
lods
adc
movsl
xchg
mov
movsb
sbb
mov
movl
sub
xchg
cmpsl
mov
cmp
jg
mov
aaa
mov
mov
outsb
out
insl
cltd
js
je
fiaddl
push
mov
sub
jae
addr16
sbb
add
stos
stos
jmp
rolb
in
xchg
xor
loop
sub
loope
int3
cmp
das
push
lods
pop
pop
xchg
adc
mov
out
repz
bswap
sub
jno
loope
adc
int3
sub
sub
and
push
adc
xor
les
sub
fsubrl
call
sub
adc
inc
mov
daa
jle
dec
sbb
cmpsl
and
aas
pop
lock
sarb
jg
mov
push
daa
fiadds
outsb
std
lcall
jno
inc
dec
jbe
int
out
scas
push
mov
imul
testl
sub
scas
jl
mov
sbb
pop
xchg
cmpsb
mov
out
ror
jnp
rcrb
pop
jbe
lds
out
or
leave
fcmovne
repz
sub
inc
or
mov
cmp
jmp
pop
hlt
das
cltd
mov
aaa
dec
jnp
ret
dec
jle
mov
shll
push
scas
mov
cmpsb
pop
cmp
inc
mov
dec
scas
and
pusha
pushf
ds
mov
cmp
lods
out
into
fs
cmpl
ds
cld
out
test
lret
add
pop
testl
fs
dec
jle
pop
lds
or
repz
pop
lret
xchg
jle
xchg
dec
mov
and
iret
movsl
das
and
in
lock
imul
adc
inc
adc
pusha
jmp
mov
std
or
movsl
jle
mov
out
out
int
adc
lods
pop
iret
pop
fnstcw
sbb
push
out
filds
mov
xlat
test
xchg
add
fisubl
incl
sub
ds
mov
test
jle
mov
dec
push
je
ret
out
addr16
mov
jl
shll
popf
daa
leave
shl
scas
in
add
shrl
add
mov
xor
std
mov
adc
pushf
adcl
cmp
or
xchg
mov
repz
adc
push
ja
lea
xchg
cmp
add
mov
pop
adc
js
add
idivl
mov
stos
mov
fistpll
test
mov
fadd
and
stc
mov
jmp
clc
test
inc
shr
jge
pusha
bound
aas
shll
mov
sbb
out
jle
xchg
mov
jne
iret
hlt
and
fcompl
int
neg
popa
les
std
loop
and
mov
das
dec
mov
sub
movsl
pop
sub
stos
int
sarl
popa
mov
aam
push
mov
cmp
icebp
mov
jg
cmp
push
push
xchg
mov
int
mov
dec
shll
xchg
das
sub
dec
cmp
enter
mov
gs
cmp
filds
dec
mov
push
sbb
adc
xor
cmp
shlb
movsl
cmp
addr16
lret
movsl
scas
xchg
push
lret
dec
inc
mov
lock
pop
enter
jnp
cmp
lret
fld
leave
mov
shlb
dec
pop
push
out
adc
aaa
ss
das
inc
inc
dec
aas
or
mov
mov
data16
jns
xchg
cwtl
push
loope
xchg
stos
out
cld
pushf
roll
ss
lods
pop
daa
add
out
out
xchg
lods
cld
mov
add
mov
cltd
push
mov
jne
mov
stos
test
jg
sbb
cmp
rol
insl
aam
adc
mov
stos
mov
stos
in
inc
ja
js
xor
add
dec
testl
cmp
std
lock
push
cmpsb
sub
add
movswl
icebp
rcrl
outsl
sbb
mov
popa
jecxz
add
cs
pushf
jmp
mov
cmpsb
xchg
xchg
stos
mov
int
or
inc
bound
pop
bswap
pop
daa
dec
pop
inc
aaa
xchg
aas
dec
aaa
pop
xchg
dec
in
or
addb
mov
bound
loop
in
sub
mov
outsl
add
add
mov
int3
xchg
mov
adc
and
mov
mov
and
inc
xor
lods
dec
imul
sub
call
rcl
and
stos
sarl
cmp
shll
loopne
pop
fldenv
mov
icebp
mov
stos
jg
movl
std
orb
add
ret
lret
lret
sarl
xchg
sub
dec
in
jmp
sbb
or
stos
jne
dec
lods
or
lds
sub
push
cmp
cmp
shlb
push
cmpsb
jo
or
lock
test
push
and
fstpt
mov
insl
mov
push
and
adc
push
aad
enter
sti
sbb
cmpl
movsl
test
xor
gs
js
add
mov
sbb
push
jmp
adc
rcll
ret
stos
mov
fwait
push
xor
sti
lds
jge
jb
rcll
sarb
add
and
out
and
outsl
jg
out
neg
cmp
fmuls
mov
dec
push
sbb
int
push
mov
cwtl
out
aaa
xor
xchg
mov
ljmp
jb
xchg
mov
nop
icebp
xorb
scas
dec
aaa
jle
jecxz
dec
iret
outsb
and
or
ja
aaa
xor
cmpl
dec
cmp
dec
inc
imul
ret
cmp
cli
pushf
aaa
pop
mov
xchg
cmp
or
out
push
je
or
scas
xchg
xchg
shr
bt
xchg
push
js
xchg
jnp
es
pop
jle
adc
das
push
andl
jmp
dec
mov
shll
inc
bound
sti
in
lret
loopne
lret
cli
mov
dec
add
cmp
stc
xor
dec
aad
pop
pop
inc
popf
xchg
aaa
addl
xchg
push
sbb
sti
jmp
das
xchg
fwait
mov
jmp
push
dec
or
int3
pop
lods
mov
lret
sub
dec
stos
pop
inc
inc
and
scas
and
and
mov
inc
pop
cmpxchg
dec
mov
push
sub
adc
mov
mov
sub
int
cmp
push
jle
mov
and
add
jmp
mov
and
js
pop
rolb
lock
jl
arpl
xchg
inc
ljmp
mov
in
mov
pusha
aas
dec
inc
dec
jmp
jle
iret
sbb
ljmp
inc
fs
mov
stc
inc
mov
outsl
adc
mov
addr16
imul
aaa
push
bsr
add
mov
and
pop
int
jl
sub
inc
daa
aam
cmp
jecxz
iret
repz
lods
call
adc
xor
mov
jle
stos
add
mov
xchg
or
mov
xor
daa
lret
inc
ret
fs
lds
inc
adc
movsl
scas
jg
sbb
xchg
mov
sub
or
jne
lret
ret
pop
neg
add
jmp
inc
push
ret
outsb
and
sub
adc
push
xor
iret
jae
lahf
dec
cmp
cmp
nop
sbb
imull
mov
xchg
iret
cmc
out
or
popa
les
fdivr
scas
mov
mov
mov
ret
imul
sub
push
xchg
stc
test
test
enter
mov
ja
jmp
daa
cmp
dec
cwtl
sti
lods
xor
dec
js
loope
psrlw
pop
jle
sbb
into
or
xchg
sbb
std
dec
jle
inc
push
push
and
out
inc
lret
repnz
lcall
cmp
ret
sub
inc
stc
mov
pop
adc
popa
movsl
xchg
iret
inc
call
jmp
inc
and
pop
pop
or
inc
mov
dec
dec
fcmovu
lea
scas
jno
or
dec
lret
insl
mov
jmp
nop
es
mov
pop
xchg
rcr
push
shl
js
test
cwtl
fistpl
jle
or
addr16
push
cltd
cltd
sub
push
xchg
pop
cmp
incl
add
lahf
out
and
aaa
rclb
mov
fisttps
sti
rorb
outsl
rol
xor
es
cmp
lret
push
das
leave
hlt
mov
push
mov
adc
add
les
cltd
xor
push
test
push
mov
cld
jle
leave
lock
push
test
aas
push
dec
rol
rclb
popa
or
adc
aaa
add
daa
and
std
sub
out
cmp
adc
xor
push
xor
roll
lds
outsb
aas
cmp
cltd
fcompl
mov
mov
pop
fs
enter
stc
inc
dec
jbe
dec
jl
sub
les
arpl
jmp
jbe
pushf
out
sub
xlat
lret
cmpsl
xchg
ss
inc
cmp
test
inc
cmp
out
inc
cmpsl
push
lods
jle
fildll
dec
mov
insl
int
xchg
mov
pushl
add
sub
push
xchg
push
shrl
jl
aaa
pop
xor
jecxz
fdivl
out
cli
lds
mov
or
cmp
test
inc
pushf
push
cmp
and
inc
push
call
jns
nop
add
lret
sub
and
arpl
les
xchg
jle
mov
stos
rcrb
iret
stos
pushf
into
push
aas
aad
pop
cmp
out
pop
fisttps
sub
inc
push
dec
mov
sub
pop
popf
loope
jle
mov
stos
xchg
xchg
or
repz
fs
out
sbb
shlb
lret
jl
sbb
dec
dec
mov
icebp
inc
adc
xchg
sub
int3
xlat
or
dec
sahf
pop
add
dec
data16
test
out
jecxz
cmp
push
add
std
ret
lret
jl
inc
cmp
pop
lret
cld
mov
les
jle
mov
insb
cs
addr16
lods
cmp
mov
mov
ds
mov
loope
out
pop
inc
sub
mov
mov
or
mov
pop
push
jmp
ret
jle
aaa
arpl
sub
push
mov
mov
mov
jle
mov
xlat
cmp
out
insb
das
fucomp
add
daa
mov
jmp
inc
cmp
idivb
cli
sbb
lea
into
push
idivl
pushl
cmp
popf
push
dec
jle
fldt
dec
adc
out
jmp
xchg
rorl
aas
repnz
or
jbe
pavgw
dec
mov
mov
dec
mov
cmp
inc
int3
sarb
mul
daa
inc
add
popf
mov
clc
mov
xor
insl
mov
or
sar
addr16
mov
lds
daa
mov
dec
and
fstl
flds
jno
sbb
sahf
mov
pop
jg
pop
mov
mov
les
push
out
cli
lds
xchg
cmp
mov
jae
mov
fnstcw
push
or
mov
insl
inc
mov
push
and
jle
inc
out
mov
fxch
and
inc
mov
or
icebp
repz
push
jno
fnstsw
lar
mov
lahf
jno
push
inc
xchg
das
push
pop
sub
xlat
sub
lret
ja
ret
lods
or
imul
scas
and
mov
divb
cmpsl
shll
testl
add
xor
mov
mov
scas
repz
pop
jle
cmp
inc
mov
jg
pop
and
decb
scas
or
or
test
jecxz
mov
cmp
dec
sub
sub
cld
xchg
fidivrs
mov
sub
enter
xlat
cmp
xor
dec
pop
or
pop
test
mov
call
jl
dec
pusha
movsl
add
pop
pushf
jp
xor
or
icebp
xchg
mov
inc
pop
mov
lods
daa
jbe
daa
sti
inc
or
dec
std
inc
push
mov
mov
or
inc
cld
jmp
sbb
xor
lods
or
inc
xchg
enter
inc
mov
cmp
jp
mov
sbb
pop
cmp
fbstp
dec
ljmp
fucomi
movsl
sti
cs
ds
mov
fcmovnu
lahf
push
movsl
fmul
fdivl
pop
and
push
adc
jge
aaa
xchg
cmp
fs
push
fwait
pop
gs
pop
dec
pop
pop
inc
addr16
fld
cmc
push
js
mov
cmp
test
lret
pop
dec
mov
or
dec
push
in
scas
lret
pop
sbb
mov
aaa
iret
jbe,pn
inc
push
cmp
pop
and
mov
inc
pop
je
ret
jnp
push
push
push
enter
decb
je
addr16
mov
push
mov
mov
xchg
lret
clc
mov
add
outsb
clc
or
arpl
fstps
mov
enter
jmp
push
aas
fisubrl
mov
loop
mov
ja
mov
push
push
mov
dec
test
cmp
scas
xlat
push
fbld
dec
xor
dec
insb
jge
pop
cwtl
mov
into
fidivrl
cltd
sahf
movsb
cltd
call
xchg
and
scas
or
sahf
mov
test
ret
xchg
jne
mov
cmpsl
xor
push
in
jno
mov
into
imul
cmp
adc
subb
jbe
mov
icebp
mov
add
mov
dec
cmovl
mov
test
xchg
mov
sbb
sub
pop
mov
xlat
jl
xchg
sbb
fisttps
mov
add
imul
mov
out
dec
pusha
dec
mov
movsl
push
popf
jne
rolb
icebp
mov
cmp
mov
mov
sahf
pop
xor
xchg
mov
push
sti
addr16
push
es
fisttpll
lret
mov
add
iret
cmovge
lods
pop
push
in
jle
push
lods
lret
js
repz
push
aas
data16
push
lds
mov
xor
divl
mov
cmc
cltd
loope
add
fisubs
test
icebp
dec
pop
add
inc
cmpl
jb
scas
in
idivb
pop
and
int
mov
outsb
sbbl
cmp
mov
out
out
add
enter
outsb
insl
pop
mov
addr16
and
mov
dec
ljmp
popa
push
pop
xor
inc
jne
inc
outsb
mov
popa
aad
mov
sub
int3
mov
adc
sub
add
das
fsts
xor
push
jecxz
xchg
inc
mov
cmp
sub
cmc
sbb
pop
mov
aaa
jecxz
xchg
fisttps
mov
inc
xchg
pop
std
jp
push
jno
mov
or
cli
jmp
adc
fst
add
lret
clc
or
mov
addr16
mov
stos
rcll
das
adcl
lret
push
sbb
or
dec
push
stos
jle
or
mov
aad
stc
mov
inc
jle
jo
div
push
push
mov
xchg
std
pop
das
dec
out
test
mov
ja
dec
add
fsubs
add
pop
or
pop
and
out
stc
iret
push
inc
lret
mov
or
push
lcall
jb
sub
cmp
and
js
jg
daa
jge
or
rorb
jne
jae
jno
dec
jle
stc
mov
in
dec
pop
imulb
icebp
adc
or
fwait
mov
pop
daa
sub
xor
rdpmc
mov
test
js
xlat
lahf
test
aaa
or
pop
dec
enter
mov
mov
push
lods
jle
or
sahf
pop
popf
scas
sbb
lret
adc
dec
leave
jnp
nop
sub
mov
in
out
xor
addl
inc
fidivs
and
cmp
arpl
test
imul
inc
pusha
cmpsl
mov
cmp
pop
sbb
divb
cld
aas
out
scas
aad
cmp
fldl2e
leave
jg
out
jle
cld
xor
mov
push
inc
cmp
sub
cs
and
std
test
lea
or
imul
xchg
push
test
outsb
push
hlt
pop
and
dec
pop
lods
cmp
xchg
cs
je
inc
aas
popa
xchg
pushl
ds
test
in
and
push
sub
cld
lcall
out
dec
push
fadds
and
xchg
add
jbe
mov
sub
pop
test
popf
int
jle
daa
pop
xchg
push
outsl
lds
aas
cmp
int3
adc
sub
push
sub
test
std
xchg
std
push
mov
ret
in
xlat
ret
repz
hlt
lret
ds
in
pop
and
and
lea
jnp
shlb
mov
out
in
jge
test
icebp
sub
pop
cmp
aas
xor
div
iret
push
arpl
pandn
lahf
adc
xor
dec
cmc
lret
xchg
xchg
mov
add
mov
push
addr16
lods
pop
in
imul
add
cmpsb
psrad
mov
out
mov
pop
pop
popf
div
das
popf
pop
js
sub
test
pop
cwtl
jo
inc
inc
jle
in
mov
daa
mov
inc
aas
jle
out
dec
out
push
mov
rclb
dec
cmp
lods
inc
jg
inc
cmc
jne
mov
inc
repnz
arpl
outsb
cwtl
jnp
xor
shrl
outsb
or
xchg
dec
and
xchg
nop
xor
xor
fs
shlb
mov
xchg
sbb
sub
arpl
imull
push
in
push
xor
jmp
mov
jne
movsl
rolb
xor
insl
insb
xor
insb
cmpsb
push
test
lea
out
outsl
cmpl
jns
ja
mov
jmp
cmp
lret
lea
push
or
add
cmpl
mov
pop
push
cmp
scas
xor
pushf
nop
cmp
mov
iret
icebp
sti
test
popl
decl
movsb
arpl
sbb
adc
ljmp
std
or
add
iret
cmp
mov
repz
sub
mov
pop
rorl
ss
fiadds
test
and
repz
xchg
cmpsl
cld
incb
stc
lods
xchg
out
iret
push
sub
inc
cmp
mov
pushf
mov
and
adc
jp
sti
int3
cmc
inc
cld
sbb
jo
cmp
sub
xlat
mov
daa
dec
ds
or
rep
sarl
lahf
and
push
out
add
daa
inc
jle
pop
pop
add
mov
or
mov
std
aas
sbb
test
sub
fdivl
cmp
xchg
hlt
sbb
repz
bnd
or
dec
fistpll
adc
jecxz
sarl
cmp
cmp
neg
push
or
shll
fs
cmpsl
out
adc
jb
push
js
or
out
repnz
fwait
pop
cmp
lods
mov
jle
jl
das
inc
mov
rorb
cs
int3
xor
mov
or
rcr
sbb
cltd
insl
jmp
and
stc
out
push
mov
xlat
sub
xor
cld
mov
stos
ds
adc
or
mov
roll
out
sti
negb
xor
or
gs
mov
cwtl
cmp
dec
cmp
std
iret
fs
sub
jmp
lahf
jp
mov
mov
mov
lcall
sub
adc
jae
cwtl
pop
sub
mov
lcall
mov
push
add
out
add
inc
stc
fbstp
imul
xchg
shl
jno
rorb
enter
ja
decl
lret
rcl
outsb
xor
inc
cwtl
ja
sub
xchg
iret
pop
mov
cwtl
jne
pop
mov
les
jl
outsl
aas
aam
in
mov
add
aas
cmc
cvttps2pi
aaa
push
int3
mov
stc
mov
nop
shlb
dec
sub
jecxz
sub
pop
dec
ss
ret
jge
movsb
mov
push
mov
sti
push
adc
sahf
sbb
adc
mov
mov
pop
jnp
test
mov
ret
push
and
adc
les
inc
cmp
sbb
push
inc
and
dec
jle
sbb
in
inc
inc
xchg
js
pop
in
fs
push
jecxz
lcall
ljmp
jb
xchg
stos
push
pop
xchg
scas
int3
imul
scas
lods
mov
imul
sub
push
and
cmp
rolb
pop
call
sahf
sarb
xor
cmpb
xor
aas
lret
fmull
sarl
mov
lods
sar
jnp
stos
addr16
out
out
sbb
pusha
push
add
es
imull
pop
mov
fld
shll
sbb
das
shufps
daa
mov
dec
mov
xor
dec
jnp
adc
push
or
rclb
jl
inc
repnz
cmovnp
mov
xlat
mov
dec
out
inc
sub
jo
jnp
pop
test
inc
or
stos
dec
add
das
jg
fwait
mov
stos
dec
jae
idivl
pop
ss
xchg
jbe
notl
negl
std
jne
mov
sub
sbb
das
ss
lock
pop
jbe
mov
lahf
es
push
sub
push
and
dec
cmc
cmp
jns
mov
and
movsl
cmp
pushl
xchg
jb
shrl
cltd
ffree
mov
xor
dec
cmp
es
push
sub
pop
xor
into
loope
sbb
sub
fstpl
and
mov
xchg
add
cmc
pop
lea
and
stc
scas
imul
mov
jmp
dec
sbb
out
adc
pop
testb
mov
dec
or
cmp
ret
movsb
or
cmp
pop
jg
test
jmp
int
cmpsl
dec
in
imul
sub
popf
fildl
outsl
js
inc
and
ss
mov
ffree
in
aaa
ds
inc
mov
push
test
inc
xchg
inc
mov
filds
adc
sbb
mov
sahf
loope
xor
sti
cmp
lret
add
add
add
mov
mov
scas
inc
jle
add
addr16
inc
or
and
cltd
xor
inc
scas
inc
jle
or
push
das
in
sbb
mov
int
hlt
add
andl
mov
jle
push
cmpl
dec
jl
inc
loop
push
mov
dec
adc
and
add
cwtl
fucom
inc
and
cltd
jnp
dec
mov
xchg
or
jmp
inc
ds
dec
cmc
frstor
inc
sub
mov
push
and
push
aaa
inc
aad
addr16
inc
ss
push
add
cld
push
ljmp
or
mov
push
xchg
out
jle
adc
xlat
mov
into
cmpsl
adc
addb
aaa
add
mov
mov
out
or
lret
pop
gs
cmp
xor
lret
pop
adcl
lea
cmc
cmp
mov
cwtl
xor
scas
int3
push
add
pop
inc
mov
cmp
out
xchg
mov
movsb
je
dec
add
scas
add
mov
push
mov
testl
mov
scas
lods
push
je,pn
xor
lret
pusha
dec
je
jbe
pop
push
insb
lret
loop
rolb
stc
jo
xchg
jle
lods
test
add
idivb
stos
repz
frstor
shrl
lods
cmp
and
jnp
pop
pop
mov
xchg
jg
or
gs
sar
and
xor
mov
imull
orl
aad
mov
xchg
ljmp
or
or
mov
out
or
sbb
das
aas
cmp
notl
and
ds
and
push
scas
xchg
fbld
dec
std
jmp
stos
inc
push
adc
sbb
dec
aaa
fst
addr16
mov
and
xor
or
cmp
lods
xor
dec
adc
mov
or
pop
dec
jb
je
out
dec
mov
js
in
fstps
fsubr
xlat
add
imul
imul
addb
in
cmc
xchg
jno
sbb
xchg
in
jo
arpl
jmp
dec
inc
data16
xlat
jnp
pushf
pop
rolb
jb
pop
xor
xchg
dec
jbe
int3
pop
jle
mov
mov
jl
ret
add
stos
stc
jle
and
jl
mov
dec
cmp
ljmp
lods
xor
lcall
lock
addb
fsubp
push
add
xlat
sub
xor
lods
ret
pop
dec
adc
in
das
scas
adc
or
lret
jo
testb
push
repnz
push
pop
pop
sub
push
cmc
jnp
lahf
sub
je
xor
xchg
mov
mov
and
push
jb
jns
subb
mov
jb
sahf
fisubl
clc
sbb
push
lret
push
sbb
cwtl
mov
mov
into
mov
sub
add
dec
pushf
stos
cmp
sub
in
sahf
adc
divb
xchg
mov
dec
cmp
pushf
mov
sub
mov
and
addr16
repnz
imulb
lret
mov
out
ljmp
sbb
shr
movsb
sti
mov
rcrb
fwait
inc
xor
shl
push
scas
add
mov
xchg
jle
lahf
icebp
adc
cltd
test
push
cmpsl
xchg
fdivrs
ss
sub
jl
or
inc
jle
push
dec
fldenv
das
xor
mov
or
cmp
ss
xor
out
inc
ret
cltd
push
mov
jecxz
sbb
outsb
inc
aas
pop
xor
cmp
mov
outsl
inc
cwtl
mov
in
mov
sub
sub
or
iret
dec
in
add
xor
stos
jne
aaa
cmc
pop
cmp
jae
and
pop
out
push
jbe
adc
rolb
cmp
adc
jb
or
mov
aaa
insl
sbb
shl
and
shrb
sahf
xor
rorl
imul
inc
bound
lahf
push
lahf
mov
dec
cmp
xchg
das
aas
aaa
and
frstor
ss
imul
inc
push
push
fwait
sub
in
add
popf
pop
add
insb
movsb
xor
ret
dec
mov
dec
jo
aas
movsl
or
dec
or
adc
mov
idivb
dec
fnstenv
adc
pop
dec
std
lret
add
dec
aas
jl
jmp
out
test
daa
xor
hlt
cld
sub
data16
fisubrl
popa
pop
sub
jmp
clc
bound
lock
cmp
imul
fldcw
mov
push
cmp
stc
mov
and
leave
das
gs
dec
leave
sbb
mov
lret
pop
pop
addb
mov
aaa
aad
sub
inc
dec
jge
sub
mov
mov
in
xchg
jle
mov
dec
adc
mov
sub
push
sbb
pop
pop
jmp
mov
mov
pushl
sbb
pop
pop
int
flds
push
shl
insl
mov
daa
sub
int3
shrl
sbb
mov
mov
mov
aas
mov
dec
scas
imul
mov
pop
dec
out
aas
cli
adc
mov
jl
scas
call
subl
dec
pmaxub
rcll
movsb
push
cmpsl
insb
in
push
outsb
dec
addr16
cmp
cmpsb
add
daa
out
pop
gs
mov
imul
mov
lds
push
test
jns
cld
mov
in
jmp
pop
and
xchg
or
cwtl
ret
pop
xchg
or
inc
or
das
push
or
xsavec
mov
fmuls
sbb
dec
fldcw
xor
rol
or
sub
cmp
das
add
add
mov
loopne
out
cmp
add
sub
shll
fildl
pop
jp
les
sub
es
jg
cmc
stos
or
or
lret
jle
ret
or
and
divb
imul
cmp
lods
scas
pop
movsl
rorl
imul
dec
sbb
je
les
adc
addr16
aad
mov
cmp
mov
call
mov
fldenv
jae
push
jnp
mov
lods
das
aam
fimull
pop
xchg
inc
into
negl
lret
xchg
js
and
adc
inc
cmp
ret
scas
dec
add
sub
clc
xchg
pop
pop
aas
dec
jle
and
repnz
jmp
cmp
movsl
rcrb
lods
mov
hlt
push
popa
cmp
sub
aad
xor
int
dec
jle
cli
sub
push
jno
lock
sahf
shrl
and
xor
fldcw
cmp
jg
lock
push
std
outsl
sahf
xchg
push
xor
jl
enter
aaa
fimuls
dec
enter
cmpsl
dec
test
push
or
cmp
js
decl
mov
outsb
icebp
fwait
addr16
aad
shlb
pushw
mov
stos
jg
push
movsl
aas
mov
lds
int
push
ret
lret
adc
out
mov
or
xchg
insb
and
outsl
push
stos
scas
mov
movsl
inc
testb
les
sbb
aaa
mov
das
inc
js
xor
jg
inc
jbe,pn
mov
iret
dec
test
dec
addr16
lods
push
fisubrl
mov
dec
loopne
jbe
inc
dec
jmp
xchg
leave
pop
jle
or
rcl
push
xchg
sub
iret
xchg
add
jl
push
cmp
rol
inc
jns
xor
cmc
aaa
pop
inc
adc
iret
idivb
xchg
xchg
inc
popl
inc
cmpsl
jle
and
xor
shrb
enter
xchg
mov
ret
xlat
scas
sbbl
adc
sub
js
or
addr16
jle
sbb
in
scas
push
inc
xchg
xchg
jns
sbb
fimuls
dec
adc
dec
sbb
in
mov
xlat
pop
arpl
rcll
inc
dec
xor
cmpsb
inc
add
aas
aaa
in
ds
adc
push
insb
adc
inc
sahf
addr16
bound
xorl
pop
inc
sub
xchg
aaa
dec
sysret
ja
icebp
and
aas
mov
add
jp
addr16
pushf
cltd
sti
pop
mov
add
push
sub
out
in
stos
jnp
sub
inc
jle
sub
xor
pushf
or
das
cmpsb
mov
ss
jmp
mov
je
out
int3
clc
cmp
and
fidivrs
xchg
and
dec
jle
pop
xor
xchg
inc
lock
out
inc
fisubrl
push
loop
sbb
out
add
daa
xor
faddl
mov
rorb
ljmp
lcall
mov
adc
fs
mov
into
cmp
jmp
jno
dec
mov
jge
xor
dec
dec
dec
jnp
sub
or
mov
sbb
cli
dec
push
icebp
xchg
enter
scas
loopne
mov
xchg
xor
int3
sbb
movsl
push
out
pop
mov
inc
inc
xchg
adc
jg
inc
pop
mov
dec
push
les
fsubl
rol
dec
andb
pop
into
push
iret
enter
sub
test
or
inc
xor
jae
and
add
cmc
mov
cmpsl
lahf
cmp
jg
xchg
pop
push
dec
sub
dec
add
dec
mov
mov
mov
sarl
xchg
add
jno
aaa
arpl
push
dec
add
jle
int
ret
pop
rcrl
out
jle
clc
or
fwait
xchg
sub
daa
addr16
add
jbe
lret
sahf
shlb
mov
lcall
xchg
inc
lahf
pop
icebp
mov
mov
ror
shr
lret
mov
je
aas
cmc
add
xchg
mov
mov
or
sub
shll
pop
pop
stos
mov
sub
into
imul
gs
cmpsl
stc
jmp
aad
movl
jbe
ds
outsl
jnp
bound
sbb
xchg
outsb
lcall
stos
lret
repz
mov
icebp
fwait
or
adc
sub
sub
aam
push
jb
mov
lods
popf
sub
fisttps
cmpsl
out
int
pop
repnz
add
dec
xchg
out
xor
scas
movsl
cmp
cmp
fs
lock
dec
outsl
cmp
subl
leave
nop
aam
mov
lods
push
inc
and
add
mov
jnp
push
or
insb
add
stos
inc
loopne
das
cmp
jbe
inc
jle
aam
sub
mov
add
jge
inc
mov
inc
adc
mov
or
out
xor
imul
mov
test
sbbl
mov
popa
push
add
loopne
orl
mov
xor
fsts
mov
sbbl
mov
out
scas
lds
mov
mov
das
inc
mov
jp
pop
jle
stos
insb
lret
das
mov
mov
mov
stos
inc
inc
xor
xor
stos
inc
add
mov
popa
std
mov
jg
mov
in
xor
mov
xchg
jp
jmp
mov
add
inc
mov
pop
xor
adc
inc
pushf
inc
push
jp
ret
icebp
and
popa
mov
sbb
scas
iret
and
stos
mov
sarl
fidivrs
pop
push
int3
repz
inc
xchg
iret
ljmp
and
jg
jne
push
inc
inc
xor
and
cltd
or
mov
scas
push
hlt
mov
mov
adc
scas
sub
mov
cmpsb
or
dec
cmpsl
pusha
sub
fistpll
pusha
ret
sub
outsb
les
push
jne
mov
insb
loopne
dec
xchg
lea
leave
das
push
sub
pop
inc
and
and
inc
cmp
cmp
fimull
lret
mov
gs
push
popa
jge
mov
arpl
dec
xchg
jle
xchg
cmp
imul
sub
xchg
mov
xchg
movsl
jg
in
dec
nop
pusha
sbb
popa
cmp
dec
sbb
js
and
in
scas
or
sti
in
xor
or
add
mov
push
xchg
das
inc
mov
xor
scas
pushf
in
sub
xchg
xchg
scas
jmp
pop
or
dec
and
int3
lods
cld
lahf
aas
inc
stos
push
jmp
out
and
ja
arpl
mov
out
out
insl
inc
out
push
inc
jmp
scas
jae
add
pop
inc
push
cs
adc
out
and
test
mov
pop
iret
lds
loope
mov
pop
jmp
jge,pn
push
xor
adc
out
repz
out
and
cmp
add
mov
repz
test
and
xlat
and
jle
aam
stos
lcall
mov
out
movsb
fstpt
jl
adc
daa
inc
arpl
imulb
stos
jb
cli
inc
lret
sub
aas
xchg
lods
stos
xor
mov
test
cmpsb
inc
cmpl
dec
aaa
or
xchg
clc
loopne
jmp
repnz
jg
jb
jns
adc
mov
das
xchg
dec
push
out
stc
or
lcall
dec
push
push
daa
sub
sbb
jns
mov
mov
ja
sbb
aaa
stc
mov
adc
mov
mov
bound
sub
inc
lret
pushl
aaa
inc
stos
js
and
out
cmp
mov
sub
sbb
out
and
inc
dec
push
addr16
sbbb
mov
ds
pop
int
jle
inc
cmp
out
cmp
outsl
dec
shlb
or
imul
mov
mov
sub
cmp
sub
shlb
push
ss
lods
xlat
pop
dec
inc
cmp
jl
pushf
add
das
mov
iret
into
cmpsl
lahf
aas
dec
mov
stc
lcall
icebp
cmpsl
orl
js
fcmovnb
lret
xchg
addr16
mov
mov
and
inc
dec
scas
sbb
jmp
pop
adc
js
test
jmp
xchg
cmpb
jno
mov
mov
or
inc
fstpt
mov
pop
ja
loopne
add
push
xchg
cld
push
mov
push
inc
mov
cmp
xchg
daa
and
jge
inc
adc
jns
mov
jo
ds
mov
push
rolb
cli
test
popa
clc
test
iret
xchg
inc
mov
push
or
mov
sti
push
imul
sub
daa
xlat
inc
cmc
jb
testl
mov
lret
mov
xchg
pusha
cwtl
sbb
mov
fildl
mull
adc
aad
out
in
or
pop
push
iret
inc
mov
lea
inc
sub
loope
sub
aaa
mov
iret
mov
pop
xchg
cmp
mov
out
cmp
xor
lds
push
mov
test
repz
lds
int
mov
je
add
xchg
jb
mov
int3
fildl
push
cltd
cmp
mov
mov
lret
xor
test
adc
es
mov
movntps
xchg
sub
idivb
adc
jo
ljmp
cmp
inc
sahf
call
mov
push
and
add
cmp
sub
pop
jb
mov
and
xlat
inc
cmc
mov
sahf
mov
iret
int
mov
in
arpl
add
lock
and
xor
into
loope
jno
jg
dec
ds
jnp
ret
icebp
mov
xchg
fwait
iret
xor
and
lock
sbb
lods
cmp
push
movb
push
shll
mov
cmpsb
loop
mov
test
mull
inc
mov
test
xchg
test
xor
xor
xchg
and
add
cltd
decl
mov
cli
push
cmpsb
fisttps
jmp
mov
test
inc
lods
gs
push
adc
fildll
cwtl
push
cmp
cmpb
xor
popa
ljmp
mov
insb
movsb
shlb
pop
push
jle
xchg
jmp
leave
xchg
xchg
mov
pop
xchg
adc
ret
cmp
push
cs
mov
and
imul
pusha
rolb
sub
inc
mov
xchg
stos
test
orb
adc
adc
mov
daa
inc
sbb
mov
loopne
mov
leave
xchg
popf
loopne
js
or
nop
scas
fsubrs
and
gs
ds
jg
das
inc
inc
push
lock
cmp
pop
inc
sub
iret
cmpsl
movsl
xlat
subb
in
push
ss
dec
cltd
cs
or
ss
std
das
adc
lret
inc
movaps
dec
faddl
cli
cmp
leave
scas
jge
adc
ljmp
jl
pop
add
add
cmp
dec
lahf
cmp
aas
xchg
push
pop
xor
sub
inc
pop
fisttpll
stc
outsb
mov
arpl
sub
mov
push
mov
jle
cmpsl
ret
outsl
cli
outsb
loop
inc
jge
repz
test
cmp
mov
out
stos
push
enter
cmp
sbb
cltd
mov
test
ja
mov
movl
mov
xchg
lods
sub
insb
push
jbe
loopne
mov
add
daa
jmp
popf
inc
adc
bound
or
pop
mov
iret
mov
out
stos
scas
cmp
movsb
subl
xor
xchg
cmp
sub
popa
lea
and
mov
int3
das
jmp
outsl
pop
jle
sti
push
dec
push
ficoms
lcall
aas
cmp
inc
mov
or
and
mov
arpl
dec
xor
push
lods
movsb
and
cld
in
out
lods
sbb
mov
pop
and
sets
dec
xor
xor
dec
jg
dec
daa
or
push
call
shll
cmp
cwtl
shlb
and
fistps
push
cmpsb
cmp
dec
sub
add
add
jg
push
out
cmpsl
add
mov
xchg
sbb
aas
cmp
jle
loope
aaa
push
lea
or
push
inc
ret
mov
notl
sahf
filds
loopne
add
or
inc
jecxz
or
leave
out
mov
daa
sub
fidivrs
mov
loopne
jmp
mov
pop
lret
insb
mov
fldl
pop
lods
test
push
out
lahf
jae
bound
repnz
inc
cmp
and
pop
movsb
xchg
lret
sub
fnstcw
push
ja
mov
xchg
test
fiadds
aaa
xor
aaa
pop
invd
arpl
in
out
test
iret
mov
inc
or
mov
sub
adc
dec
scas
imul
xchg
rorl
mov
inc
das
lahf
pusha
mov
sub
mov
and
lret
daa
mov
fs
cmp
ss
mov
es
add
xchg
pushf
mov
mov
push
inc
stos
aas
inc
aaa
pushf
into
xchg
cs
sahf
jl
jns
fs
xchg
mov
jmp
ja
pop
and
and
sti
aaa
inc
cmp
pop
lret
cwtl
pop
mov
enter
jge
imul
outsl
in
pop
lods
aaa
icebp
add
cltd
mov
push
std
mov
cmc
pop
adc
or
push
addr16
cmp
stos
jne
push
mov
cs
daa
lods
stos
add
cmp
add
lds
shlb
rolb
sti
sbb
pop
mov
inc
and
or
out
pusha
mov
add
ror
daa
test
pop
dec
test
jp
adc
xor
jl
test
sbb
js
addr16
test
inc
push
movsb
std
pop
cmpsb
mov
std
or
mov
pop
into
hlt
inc
ljmp
push
pop
and
insb
scas
xor
loop
push
mov
out
jne
roll
jmp
test
daa
js
cmp
sahf
pop
daa
jmp
or
cmp
test
aam
push
push
cltd
and
subl
push
pushf
mov
sbb
mov
push
movsl
xlat
dec
popa
adc
ds
mov
sub
add
jmp
sub
and
dec
mov
sbb
std
fiadds
xor
int
sub
int3
push
lods
mov
or
cmp
stc
add
aaa
rorb
aam
cmp
sbb
cmp
adc
fildll
pop
scas
sub
ret
push
xor
cmp
sub
std
ds
cs
dec
lret
jae
aaa
sub
push
aam
mov
add
pop
pop
push
lds
xchg
dec
inc
pop
outsb
out
fs
dec
jno
xor
ljmp
inc
inc
lahf
cltd
daa
mov
xor
into
les
push
xor
mov
ds
roll
cmp
stos
cmc
setno
and
or
cmc
adcw
dec
test
adc
daa
push
aas
dec
push
cmp
push
cmp
insb
and
scas
xor
cmp
xor
or
xor
cmp
mov
mov
sbb
int3
test
je
inc
sub
xchg
pop
ret
fwait
pop
aaa
pop
inc
cld
insb
std
pusha
xchg
jae
pop
aas
mov
lcall
into
cmp
pusha
sahf
mov
push
cmp
or
bswap
cmp
cmpsb
pop
xor
pop
sub
punpckhbw
mov
mov
push
pop
or
xor
sub
cmc
mov
sub
cwtl
cmpl
jmp
mov
rcrb
push
fwait
or
lds
xor
inc
cltd
ja
mov
push
int
jmp
jmp
pop
push
cs
lret
aad
inc
adcl
pop
mov
mov
cmpsb
add
adc
scas
shrb
sahf
jle
imul
mov
jle
dec
scas
stos
mov
sbb
leave
add
cmp
push
jmp
jl
jg
cmp
out
das
cmp
sub
cs
int
pop
inc
inc
pop
push
loopne
insl
xchg
mov
add
sub
xlat
cmc
cmp
mov
stc
mov
inc
lret
mov
mov
mov
mov
repnz
cmp
fwait
cmpsb
js
adc
out
divps
xor
push
movsb
add
push
clc
cmp
cli
int
mov
pop
sbbl
push
fstpt
dec
mov
loope
or
dec
and
cmp
scas
sub
mov
push
lret
ljmp
aas
mov
orb
inc
cmp
and
cs
or
gs
adc
es
jno
das
jmp
mull
pop
jnp
inc
icebp
das
mov
jge
sbb
pusha
push
loope
inc
iret
mov
add
neg
xchg
xor
pop
push
sbb
scas
push
xor
jne
adc
xchg
and
jne
aas
push
loop
jo
cmp
lret
inc
xchg
outsb
out
push
andl
addr16
xor
mov
ret
pop
push
push
aas
icebp
cltd
mov
fs
sbb
ljmp
mov
or
xchg
or
rcll
dec
repz
scas
sub
iret
dec
movsl
adc
pop
in
rol
sarl
or
les
push
dec
jge
dec
loopne
out
int3
lahf
xchg
sub
mov
mov
aaa
jnp
xor
mov
aam
and
aas
cli
sahf
test
out
lahf
sbb
aam
xchg
in
pop
iret
lret
aas
out
jl
sbb
aad
cmp
movsl
xor
and
scas
sbb
idivl
data16
and
lret
scas
or
pop
jle
cmp
mov
iret
rolb
cld
xor
push
scas
push
sbbb
sti
loope
and
dec
ret
jbe
sar
les
lods
insb
mull
mov
pop
mov
mov
sbb
jb
out
test
pushf
dec
pop
pop
aas
mov
insl
adc
jbe
cld
cmp
push
and
jbe
pop
adc
xor
flds
in
aas
mov
or
inc
iret
int
lods
cli
popf
lret
in
pop
jle
pop
call
cs
hlt
cmp
inc
int3
pushl
mov
and
mov
mov
pshufw
dec
std
jle
sbb
xlat
les
orb
test
lock
stc
movsl
jmp
sub
cltd
pop
push
ja
inc
inc
jle
push
iret
inc
inc
jle
push
jg
daa
inc
jle
sub
sub
aas
sbb
push
mov
sbb
push
sti
outsb
cmp
dec
insl
push
repz
sub
sub
mov
mov
jle
xor
add
test
cmp
or
and
inc
push
or
cmpsb
cmp
xchg
or
mov
inc
outsb
faddp
mov
sub
lock
adc
aaa
mov
lods
jge
addr16
xchg
cmp
push
rorb
xor
add
out
paddusb
cmpsb
sub
jp
fs
scas
ret
jle
or
xchg
push
das
mov
sub
mov
push
cli
mov
add
test
fisttps
icebp
pop
dec
dec
into
call
and
or
decl
cmp
sub
in
fidivrs
pop
add
fmul
pop
out
arpl
aaa
jo
dec
mov
xlat
and
hlt
inc
int
xor
roll
jo
jae
ss
jle
rorb
shlb
iret
or
sti
stos
inc
js
jb
inc
popf
pop
dec
sbb
fwait
and
outsb
inc
jle
fstl
or
adc
mov
out
aad
outsb
push
mov
jg
jbe
cmpsb
imul
popf
lahf
das
mov
dec
into
test
daa
scas
fimull
je
cltd
mov
and
lea
fimull
push
jl
cmp
push
pushf
add
xorb
outsl
add
out
ret
adc
inc
mov
xor
xorb
and
dec
add
imulb
imul
pop
scas
iret
pop
pop
addr16
jo
or
cmp
mov
shrb
push
push
shl
inc
dec
movq
push
or
cmc
in
xchg
cmp
xor
cmp
test
addr16
in
sub
inc
mov
notb
add
lds
insl
cwtl
popa
jne
cmp
xchg
inc
or
jbe
cmpsb
in
popa
mov
mov
add
and
and
push
pushf
mov
cmp
lock
cmp
into
and
lahf
inc
lahf
dec
sub
lock
sub
popa
outsl
and
outsb
xchg
or
pop
fbld
push
push
or
scas
stos
adc
scas
loop
lds
jns,pn
fidivs
lea
jg
jnp
enter
in
inc
mov
mov
pushf
lret
and
mov
rolb
sub
leave
lea
cmpsb
sbb
test
sarb
testl
lea
les
mov
cmp
mov
into
xchg
sarb
lret
cmp
xchg
movsl
jl
daa
lods
ror
inc
push
xchg
dec
cli
mov
mov
lds
sbb
bswap
and
out
aaa
or
pop
jbe
sti
mov
fisubrl
push
gs
out
inc
jge
les
cmp
xchg
push
jb
adc
fildl
sbb
addr16
push
push
pop
rcll
inc
enter
lock
jle
cmp
ret
into
sub
mov
sub
xorw
popf
sbb
jo
inc
dec
dec
mov
xor
sbb
test
fwait
xchg
loopne
cmpsl
and
js,pn
and
lea
jmp
cmpsb
cmp
into
fucom
push
addr16
lret
fucomi
mov
xchg
xchg
stos
push
inc
cmp
fstpt
bound
ja
out
jg
push
or
repnz
test
mov
aad
daa
rol
push
and
out
inc
gs
lods
cmp
test
dec
outsb
mov
mov
jle
cmc
or
sti
pop
shrb
daa
stc
hlt
mov
dec
lock
ret
lods
push
mov
aas
and
leave
and
das
leave
scas
aas
lods
jle
cmpsl
jecxz
dec
dec
inc
mov
and
mov
test
or
pusha
mov
cmp
dec
cmp
sub
jmp
mov
adc
xor
mov
add
insb
stos
test
jg
lcall
lods
sub
adc
ds
sbb
lret
test
lret
jae
xor
lret
jge
in
mov
ja
xchg
xor
out
scas
stos
lods
push
aas
iret
jg
mov
pop
das
or
cmp
aas
sbb
mov
xor
int
cmp
movsb
inc
pop
sub
push
arpl
and
icebp
stc
lret
lock
jbe
lret
leave
rcr
test
inc
leave
out
add
in
cmp
cmp
nop
inc
adc
mov
stc
and
or
mov
adc
xlat
leave
inc
inc
push
mov
ror
in
ffree
pop
push
ss
lods
pop
dec
out
jle
arpl
sub
add
mov
cltd
rcrb
xchg
test
rcl
int
ds
clc
xor
sub
lods
arpl
mov
stos
addr16
pop
lds
sub
cmp
sbb
out
mov
pop
xchg
ffree
or
mov
dec
dec
int3
testb
jg
cld
fstl
aaa
stos
or
adc
idivl
decb
inc
lock
movl
sbb
rorb
mov
stc
mov
fisubrs
xchg
mov
inc
and
in
sub
addl
and
cmp
jg
push
sbb
push
xchg
and
push
insb
icebp
add
mov
pop
mov
jnp
leave
int
imul
enter
cld
pop
xor
sub
lock
shl
lds
xor
rcll
sub
xchg
pop
iret
hlt
daa
add
scas
push
fwait
inc
add
scas
inc
insb
jg
mov
xchg
sahf
pop
out
mov
dec
cmc
outsb
lods
loopne
dec
sub
in
iret
add
out
jne
and
mov
mov
stos
add
popa
popf
push
test
ret
dec
and
movsl
jmp
pushf
call
lahf
cmp
aaa
pop
inc
mov
adc
jp
adc
jp
lods
scas
jge
sbb
test
repnz
leave
faddl
xchg
insl
sub
les
jnp
push
cmp
cmp
scas
lret
push
stos
mov
mov
mov
or
dec
push
pop
pop
xor
cmp
mov
loopne
xchg
in
dec
pop
dec
cmp
xor
sub
or
cmp
cmp
sahf
test
cmp
das
sbb
inc
or
and
adc
jns
ucomiss
call
ds
aaa
mov
outsl
cmp
xor
or
inc
aaa
arpl
lds
fstpt
nop
in
add
aas
jo
cmpsl
add
mov
cmp
cmp
sub
jle
repnz
sub
pop
push
cmp
sbb
cmp
xor
jle
repz
mov
sbb
pop
xor
lret
movsl
pop
das
aas
outsl
dec
jle
lret
cmc
mov
cmc
dec
scas
xor
inc
pop
xor
or
cmp
add
jg
push
sub
ja
sub
cmp
mov
xor
cs
add
sub
js
aas
or
jne
mov
bound
fs
in
repz
sub
lcall
push
dec
int
cmp
jmp
xor
pop
or
dec
cltd
inc
sbb
push
or
je
aam
jge
mov
lds
push
sub
andnps
fcmovnbe
or
inc
mov
scas
dec
push
iret
jle
jne
jmp
ret
stos
int
mov
pop
cmp
dec
and
dec
sbb
cmc
mov
popa
es
add
sub
dec
out
roll
fmul
fbstp
ret
aam
cmc
dec
ret
out
mov
icebp
pop
cmp
test
stc
wrmsr
add
pop
loop
cs
test
pop
dec
movsl
popf
mov
push
pop
pop
int3
stc
inc
push
fstps
jg
jmp
gs
sysret
pop
jg
and
pop
ds
lods
scas
dec
das
in
cmp
fistpll
sub
jne
or
das
lods
xchg
pop
cli
push
and
xorl
sub
dec
add
comiss
or
xchg
push
pop
xor
lods
mov
leave
push
scas
jle
or
mov
cmp
mov
dec
sub
aas
cmp
lret
dec
or
pop
lds
clc
js
test
cs
mov
inc
cmp
dec
push
inc
cmp
push
xor
sahf
add
stos
test
popf
stc
mov
pushf
outsb
sub
stc
pop
rcrb
stc
adc
pop
push
cmpsl
gs
mov
pop
fnsave
xchg
mov
fnstenv
stc
inc
pop
dec
sbb
lods
or
ficompl
jg
insl
ds
jmp
pushl
fstpl
and
sbb
aas
jb
ljmp
jmp
lahf
movsl
push
outsb
mov
out
and
cvtpi2ps
scas
push
xchg
lods
in
mov
xchg
loop
es
cmpsl
or
cmp
repnz
popl
dec
dec
int3
das
and
mov
cmp
icebp
xchg
mov
mov
outsl
jno
pop
cmp
cmp
movsl
ss
push
sahf
cmpsl
push
sahf
inc
adc
mov
push
mov
in
add
lahf
mov
das
out
gs
cmp
sub
into
cmp
xlat
cmp
xor
into
test
or
nop
dec
jmp
test
pop
xchg
or
gs
pop
pop
jb
cmpsl
jns
movsb
dec
push
jle
bswap
lret
dec
cs
xor
xlat
movd
xor
mov
xchg
stos
cltd
jno
lods
test
mov
xor
lahf
in
ret
in
xchg
sarb
clc
and
sbb
out
fcomp
sarl
jb
push
mov
sahf
ljmp
xlat
lods
leave
sbbb
in
xchg
es
cmc
scas
lods
leave
add
and
or
stos
leave
aaa
inc
pop
stos
add
out
popl
or
je
pop
mov
add
xchg
push
pushf
adc
xor
or
and
sub
jbe
xlat
outsl
dec
or
cmp
scas
shlb
jl
push
add
mov
lret
add
fadd
sub
enter
leave
push
ds
das
iret
ds
xchg
or
pop
push
aas
sysenter
mov
aaa
scas
inc
or
or
add
fbld
movsl
out
inc
out
add
inc
jg
test
lock
cmpsl
out
pop
lods
inc
cmp
jl
clc
mov
ljmp
leave
xchg
sbb
jl
test
ds
adc
incl
adc
nop
lret
mov
pop
lret
into
xchg
das
jl
pop
lret
prefetchw
push
jno
sub
push
mov
into
lret
adc
jno
cmp
xor
pop
sbb
cmp
mov
lret
xchg
or
jns
dec
addb
dec
jg
mov
xchg
lods
xchg
es
fiadds
inc
sub
or
popf
out
rorl
aaa
xor
das
inc
sub
dec
subb
lods
or
add
jle
stos
dec
jecxz
rolb
outsb
les
stc
add
jle
push
pop
push
pusha
mov
cld
sub
cmp
stos
cmp
xchg
in
sbb
aad
mov
sub
or
mov
dec
adc
adc
sub
das
in
add
add
fisttpll
xchg
aam
stc
std
stc
cwtl
sub
addr16
mov
loopne
pop
addr16
js
mov
cmp
daa
push
ds
and
mov
sub
cmpsl
cmp
push
lcall
pop
popf
pop
xor
loope
dec
inc
push
testb
mov
fsubrl
or
ror
imul
stc
mov
das
mov
jle
cmp
flds
push
shlb
xor
xor
pop
cmp
andl
cmpsl
sub
inc
jle
loop
ss
outsb
loop
or
adc
loopne
aaa
inc
ret
pushl
cmp
scas
xchg
or
cmp
repnz
std
ljmp
lret
dec
dec
mov
mov
sbb
arpl
aaa
and
je
mov
push
pop
ret
mov
mov
aas
and
cmpsl
sti
into
sub
std
ds
or
or
int3
sub
rorb
jmp
inc
icebp
cmp
aas
data16
ds
out
and
ret
fucom
and
das
rorl
or
sub
sbb
xlat
mov
sbb
rolb
out
stos
inc
sbb
loope
mov
das
ds
xchg
int3
adc
add
or
adc
inc
add
aam
cmp
inc
xor
cmp
mov
sbb
xchg
cmpsb
add
sahf
mov
in
psubq
and
dec
dec
scas
jle
or
mov
xchg
jbe
cmc
fistl
and
cmp
mov
test
jmp
xchg
dec
cmp
cmp
mov
pushf
in
mov
inc
mov
sub
fld
addr16
add
or
push
stc
push
adc
stos
jmp
aas
xor
cltd
aaa
xor
lret
lods
mull
mov
ret
xor
stos
or
and
lret
aaa
pop
dec
into
ds
gs
rcr
xor
daa
mov
inc
test
inc
mov
test
out
in
out
mov
sub
out
sbb
or
pushf
adc
sysret
xchg
or
inc
sub
sti
fwait
sbb
std
cmpsl
cmp
mov
jle
mov
sub
xchg
dec
addr16
ds
dec
pop
jo
inc
lret
sub
dec
mov
cs
adc
fmul
sub
iret
fisttpl
xlat
fisttpl
mov
mov
das
out
dec
lcall
adc
adc
inc
js
pop
cwtl
rcll
mov
jnp
mov
mov
out
mov
fstpt
ret
dec
lret
dec
jecxz
fnstcw
or
lret
adc
push
push
sti
scas
lock
inc
or
mov
mov
sbb
rcll
in
inc
test
scas
cmc
xor
pop
adc
or
jmp
jge
sub
sbb
mov
and
fcom
mov
fdivrl
cmovne
repz
dec
imul
nopl
dec
cmp
ljmp
dec
pop
fdivr
mov
fsubrs
jbe
iret
setge
das
ds
mov
lods
inc
insl
mov
or
mov
sub
push
cwtl
cmovne
jle
pop
dec
xchg
orb
jle
lret
cltd
or
mov
das
roll
scas
inc
aaa
jle
iret
pop
or
cwtl
orl
xchg
repz
xchg
sub
sub
cmp
cmc
notb
andl
mov
ljmp
scas
xor
or
prefetch
cmp
ret
lea
jg
ret
ss
dec
cmc
jle
add
inc
out
das
idivl
inc
mov
stc
or
cmp
aaa
pop
xor
std
jle
mov
mov
dec
dec
xor
add
xchg
mov
jle
jmp
filds
loop
dec
jle
sbb
ljmp
loop
mov
loop
or
pop
out
jle
das
ror
jmp
outsl
jmp
inc
inc
rorl
jle
pop
jg
out
das
jle
pop
iret
cmp
negb
and
push
repz
lret
pop
and
scas
pop
and
mov
outsl
xchg
jl
sub
sub
jle
or
dec
sarl
lahf
sub
jle
sub
lret
scas
sbb
ja
fnstcw
and
fldt
fnstsw
ret
and
int3
and
inc
loope
in
and
das
jle
and
mov
leave
dec
cmpsl
pop
scas
ja
or
repnz
push
or
or
sbb
pop
in
js
fs
and
scas
movsb
das
mov
xchg
inc
and
orl
cltd
lcall
inc
leave
adc
cld
pushf
lcall
outsl
jg
sub
aas
and
mov
or
mov
leave
adc
mov
sub
dec
mov
aaa
sub
sahf
gs
leave
jmp
mov
mov
ja
aaa
filds
inc
or
psubq
dec
test
fisttps
inc
leave
cmp
pop
out
cmp
rcrb
das
xor
rol
sbb
sbb
cmpsl
leave
inc
or
mov
out
cmp
popa
jecxz
xlat
mov
push
and
jecxz
out
stos
ds
mov
inc
push
fwait
int
dec
ret
mov
xlat
fdivp
pop
call
jbe
dec
movsl
test
cmp
jg
mov
fcomip
xor
ds
sbbl
jle
inc
xor
adc
iret
xor
jle
jl
inc
push
adc
dec
orl
stos
cwtl
pop
pop
dec
or
pop
iret
lret
pop
js
repnz
jl
mov
cmpsl
dec
iret
inc
pop
adc
add
add
mov
addl
in
data16
arpl
dec
test
push
neg
mov
das
mov
into
je
negl
adc
jae
fnsave
rcrb
stos
dec
push
push
cmp
cmp
andb
jmp
push
int
push
jle
jmp
out
sub
add
test
out
lret
fdivrs
jl
or
lret
mov
pop
lock
mov
jl
ja
out
daa
cli
out
pop
out
push
mov
pop
ret
push
pop
movsl
mov
mov
in
mov
ljmp
xchg
xchg
mov
or
fadd
pop
fldcw
shlb
mov
inc
int3
pusha
adc
orb
push
shrb
push
cs
inc
ja
js
push
sub
subb
jl
arpl
clc
ret
jbe
mov
jle
in
iret
push
mov
pop
jb
xchg
jg
inc
push
rorl
pop
cmpsb
ss
sti
jl
add
ljmp
das
decb
jle
inc
push
aaa
ret
mov
arpl
loope
dec
inc
bswap
cmp
out
sahf
pop
adc
dec
dec
mov
jp
lds
stc
dec
ds
std
lea
mov
fmull
dec
inc
xchg
jl
lods
mov
aam
lret
fwait
xchg
cld
push
pusha
fdivrs
add
inc
mov
rcl
mov
aaa
xchg
sub
ds
int3
mov
pop
rolb
jl
fsubrl
push
push
sbb
jle
adc
cmc
push
fidivrl
sti
call
fldcw
lods
xor
mov
daa
ret
pop
mov
xor
jle
test
movsl
xor
sbb
inc
inc
cmovbe
xchg
sbb
ja
imul
insb
push
imull
out
mov
repz
adc
mov
mov
and
lods
push
out
inc
test
adc
jecxz
sti
add
sbb
sarb
cltd
out
or
rclb
push
and
arpl
lret
mov
mov
and
xchg
mov
into
aad
sahf
mov
fs
enter
and
xchg
shrl
mov
push
push
mov
dec
test
mov
dec
fists
dec
mov
arpl
adc
mov
xlat
push
or
cmpsl
cmpsb
add
icebp
out
mov
loopne
not
inc
test
outsl
cld
jecxz
xor
jle
pop
fidivl
lods
push
movsb
decl
push
sbb
xchg
xchg
lds
mov
dec
jns
jl
push
mov
sbb
sbb
mov
jle
mov
mov
xor
je
and
jecxz
je
xchg
xchg
xchg
sub
gs
sub
dec
xchg
movsl
dec
ret
push
inc
mov
mov
jmp
push
iret
das
jl
add
push
jle
pop
dec
push
out
lea
dec
jb
outsl
rcll
pop
aam
inc
into
mov
int3
jp
mov
jl
or
ds
add
pop
inc
sbb
sbb
mov
inc
cwtl
sub
aas
in
or
incb
jecxz
fsubl
pop
cmp
xor
lock
xchg
push
mov
xchg
mov
mov
pop
inc
in
xchg
adc
push
or
das
mov
sub
shll
sub
scas
stos
les
inc
fs
xchg
fcoms
imul
jl
scas
cmp
lret
rolb
dec
inc
mov
jl
repz
cmpsb
lods
pop
mov
aam
mov
cmpsb
loopne
push
fs
ds
pop
pop
jg
and
inc
jb
lods
mov
push
cld
add
cld
out
xchg
in
jns
push
cmpb
in
inc
in
cs
and
sbb
add
jg
dec
jbe
or
iret
add
cmp
repz
xor
out
out
mov
dec
dec
jb
jl
scas
addr16
hlt
mov
sbb
jle
arpl
add
cmp
push
hlt
int3
outsb
xor
ret
scas
jg
inc
negb
add
jle
push
dec
dec
mov
divb
das
imul
and
push
jle
nop
outsl
sub
scas
sahf
out
shll
mov
push
in
push
sbb
in
push
mov
push
repnz
std
test
mov
pop
push
adc
push
cmp
and
bnd
inc
or
repnz
sarl
pop
mov
or
pop
out
int3
jle
js
mov
xlat
inc
rcrl
push
xor
mov
sbbl
jle
scas
cld
pop
xchg
pop
pop
sar
or
es
cltd
pop
cmp
cwtl
jnp
lret
adc
add
fcoms
push
inc
or
adc
mov
movsl
repnz
cmp
lods
loop
test
and
test
xor
mov
jecxz
push
xor
popa
insl
jns
xor
stos
jle
div
cltd
in
fildll
int3
xchg
dec
jle
mov
mov
ds
ds
mov
mov
or
mov
sbb
in
sbb
cld
cltd
cli
jecxz
cmp
mov
std
js
das
xchg
ret
cli
push
insl
mov
pop
sub
inc
movsb
lahf
jmp
lods
loope
fwait
lret
ss
std
mov
lock
xchg
cmp
push
mov
ds
rorl
pop
out
and
sub
push
clc
xor
dec
sub
xchg
das
mov
aas
fistpl
xor
pop
ret
aas
aaa
out
ds
mov
enter
sub
pop
push
push
das
sub
mov
fwait
xor
xchg
jbe
xor
fistpl
add
or
iret
pop
sbb
mov
jg
add
cmp
and
cmp
pop
cmc
pop
mov
push
das
insl
lahf
mov
data16
repz
sti
sub
dec
add
loop
lea
adc
imul
push
loope
sbb
xchg
or
mov
mov
adc
mov
inc
fstpt
ret
inc
enter
sub
lds
mov
cli
inc
int
push
add
sbb
mov
cmp
daa
xchg
repnz
pop
pop
adc
and
inc
xchg
add
pusha
lret
cmp
jns
mov
sahf
aas
push
jo
mov
jbe
iret
loope
jg
dec
cmpsb
scas
jl
pusha
or
and
adc
leave
push
scas
xchg
lret
shl
pop
daa
pop
outsl
add
das
mov
cmpsb
decb
gs
int3
das
inc
les
mov
push
in
mov
sub
repnz
stc
dec
cmp
jnp
or
sub
lret
inc
sbb
jbe
stc
cs
les
imull
addl
je
jmp
pand
cli
lret
inc
comiss
mov
lds
fnstenv
pop
mov
loop
mov
jne
jle
sbb
sahf
insl
mov
mov
int
int3
cmp
xor
push
jg
lret
gs
push
loop
fwait
outsb
mov
mov
pop
ja
out
cmp
lret
cmp
pop
call
inc
mov
mov
sub
sbb
cmp
jmp
cs
int
sbbl
mov
enter
cmp
loop
cmp
testl
loop
lahf
sbb
inc
cmp
filds
shr
jb
ljmp
mov
lds
inc
dec
jle
ret
and
cmp
cmp
push
jle
or
test
mov
or
test
lds
mov
sti
sbb
jecxz
jecxz
and
mov
aam
pop
out
movsl
lds
into
jl
or
sbb
call
es
and
lret
dec
pop
push
mov
mov
das
sbb
xor
jle
cmpsl
sbb
mov
mov
out
xchg
out
add
gs
pop
ja
cmc
jmp
cmp
iret
or
inc
pop
gs
daa
aaa
inc
fsubrl
and
cmp
mov
nop
sbb
ret
mov
xchg
xor
dec
inc
and
clc
xor
lahf
sbb
sub
sarb
dec
mov
mov
cmp
filds
xor
add
xor
mov
pop
scas
aas
scas
mov
mov
add
scas
test
scas
testb
sub
aas
lret
ss
stos
loopne
lahf
mov
add
jne
sbb
or
movsb
inc
add
push
cmc
movsl
loop
mov
movsb
int
outsl
cmpb
mov
sahf
adc
test
fidivl
lret
xchg
call
xchg
lds
or
jg
das
es
pop
ja
xor
cltd
dec
cld
mov
imul
es
mov
jg
mov
nop
jne
jl
daa
xchg
xchg
push
mov
clc
add
mov
test
mov
into
inc
xchg
xchg
mov
enter
xchg
mov
mov
in
pop
pop
loopne
mov
sbb
and
xor
in
add
cltd
lret
pop
add
shlb
dec
lret
cmp
rclb
dec
movsl
adc
lds
adc
xlat
xchg
jmp
ror
mov
inc
mov
mov
lahf
insl
jae
sub
dec
ret
fdivrl
inc
mov
add
cld
push
adc
ret
loope
or
inc
cwtl
test
mov
dec
out
pushf
mov
fisttpl
fwait
popa
or
dec
add
jecxz
mov
push
shll
in
xchg
xlat
mov
push
das
adc
movb
scas
mov
leave
fincstp
or
inc
das
out
insb
jg
add
push
in
xchg
out
inc
je
lds
scas
cmp
ja
pop
inc
movsl
jle
imul
and
sbb
jg
out
mull
cmp
push
out
sub
add
sbb
cwtl
pop
adc
jmp
pop
sti
es
cmpsl
push
ss
xor
mov
jp
and
dec
adc
shll
inc
and
mov
gs
add
lret
mov
scas
add
jecxz
mov
jl
clc
aaa
push
mov
push
in
xchg
mov
cmp
cmp
push
or
adc
sub
rclb
stos
scas
fwait
jg
mov
cmp
jbe
scas
dec
lods
jmp
mov
ljmp
pop
push
lret
cs
dec
add
aad
and
int3
ds
or
mov
and
pop
mov
or
pop
idivb
sub
xor
stc
mov
outsl
mov
or
lock
ds
or
imul
rcl
dec
sub
enter
in
inc
cmpl
test
loope
mov
dec
mov
shl
iret
daa
scas
xchg
test
adc
xlat
mov
xor
mov
fxch
xor
scas
out
sub
add
jl
data16
shufps
dec
call
in
hlt
fucomip
ds
std
xchg
sbb
leave
mov
ds
mov
sbb
imul
sbb
xchg
scas
jae
and
imul
adc
jg
mov
sub
int
scas
flds
push
js
lds
push
fdivl
inc
aam
jbe
or
idivl
sahf
push
js
hlt
enter
cwtl
leave
test
push
add
add
out
xchg
and
les
movsb
jb
and
bswap
sti
or
movups
repz
dec
rcll
out
js
lea
aaa
pushl
filds
dec
ret
stos
dec
and
cmp
ret
add
xchg
fdivrp
std
enter
inc
imul
cmpsl
ds
xor
pop
ds
cmp
test
mov
lcall
jle
mov
out
cmc
es
nop
push
add
popa
cltd
lods
jp
sarl
iret
xchg
jle
add
aaa
push
iret
movsb
xor
mov
test
es
sbb
jnp
sbb
idiv
mov
inc
pop
inc
jo
out
lret
cmp
test
mov
pop
loope
xor
jg
sbb
mov
jmp
dec
xor
pop
inc
enter
push
adc
ds
bound
inc
cmp
test
sbb
pop
adc
inc
dec
push
and
js
dec
scas
push
mov
mov
inc
out
popl
inc
rclb
push
test
fsubl
test
mov
bt
and
cmp
jno
push
cmp
outsl
xchg
xlat
mov
sbb
fucomip
push
insb
cmp
jmp
cmpsl
out
jmp
ds
je
fstp
push
repnz
mov
and
adc
xor
ret
je
aas
xchg
xchg
lret
sahf
ljmp
sub
xor
dec
shll
inc
test
sti
scas
hlt
add
sti
dec
fdivp
inc
lahf
pop
outsb
mov
lret
dec
mov
lock
jmp
cmpsl
mov
dec
sub
cmp
daa
test
aas
pop
inc
test
cmpl
mov
xor
fld
and
inc
dec
addr16
insb
xlat
stos
sub
out
fimuls
inc
sbb
push
mov
data16
sahf
adc
out
inc
inc
ret
scas
das
popl
xchg
aad
ja
call
sbb
pop
push
mov
ss
jbe
outsb
sub
popa
mov
loopne
in
xchg
es
mov
out
push
lret
or
xchg
insb
mov
repz
leave
outsb
xlat
sub
cmpsl
in
jecxz
leave
pop
dec
out
inc
aam
jo
js
mov
jle
cmp
pop
inc
int3
or
adc
std
jmp
mov
dec
dec
int3
or
push
mov
mov
jnp
mov
mov
ja
or
mov
js
scas
insl
ret
pop
movsl
out
jle
movb
pop
and
sbb
scas
pop
xchg
mov
pushl
sub
or
lret
inc
inc
test
cli
adc
adc
je
les
push
and
jle
cmp
add
test
fucomip
aas
sub
xchg
sub
fcomip
inc
out
cmp
mov
aas
xchg
lods
stc
sbb
pop
mov
adc
xchg
inc
leave
pop
or
daa
sbb
psubq
nop
jae
push
out
sub
pop
in
mov
push
int
jle
cs
ret
in
and
push
cmp
inc
push
cmp
dec
dec
fisubrs
sub
pop
pop
pop
mov
test
jl
rcl
mov
xchg
pop
add
insl
sub
or
add
or
pop
test
xchg
aam
nop
xchg
inc
jae
pop
push
and
movsl
xor
setle
movb
and
push
mov
pxor
or
mov
scas
in
inc
scas
popf
sti
and
push
jle
ds
cmp
cmp
add
loop
clc
in
mov
or
push
xor
mov
cmp
das
add
dec
into
clc
repnz
push
push
or
pop
adc
int
inc
mov
mov
testb
mov
push
add
mov
pushf
das
int
lock
add
bound
add
inc
int
inc
and
leave
pop
dec
imul
mov
lods
das
lock
cmp
cmp
push
aas
jp
insb
notl
pop
out
add
ja
dec
fidivl
xchg
mov
or
xlat
or
daa
xor
inc
fnstcw
sub
lods
mov
mov
aaa
js
stc
lods
or
jp
daa
ds
testl
ss
adc
lahf
rolb
test
push
cmc
sub
dec
fisubl
scas
aas
orl
jbe
std
cs
lea
push
testl
sbb
jecxz
sub
aam
push
adc
adc
sub
sarl
pop
or
lret
sbb
sub
add
mov
aad
cmc
mov
jnp
adc
mov
fldcw
push
notb
mov
push
movsl
std
mov
add
cmp
cld
mov
rolb
jp
repnz
idivb
push
sahf
inc
jle
and
jmp
inc
sub
mov
push
sub
pusha
sbb
inc
or
push
add
in
push
mov
xor
es
cmp
sub
dec
mov
arpl
mov
sbb
sahf
fwait
sti
cwtl
push
lret
mov
call
inc
cmc
cs
dec
jg
lods
movsl
inc
dec
xor
int
or
mov
movsb
dec
out
mov
ds
stos
nop
pop
xor
in
not
push
fdivrl
cltd
lea
dec
pop
loopne
loopne
xor
cmp
scas
jge
das
leave
dec
mov
xchg
pop
or
jmp
sarb
decb
das
aaa
lods
or
cmp
mov
push
pop
std
dec
adc
dec
shl
pop
pop
lret
aas
aaa
nop
jl
cmp
cs
jl
scas
push
push
aad
out
lea
and
jmp
lret
cmp
or
sbb
cmc
stc
or
xchg
repnz
lcall
mov
call
shr
imul
jg
shlb
xchg
int3
xlat
and
and
or
mov
int
or
jns
mov
repnz
cs
jne
sub
js
mov
jle
ret
mov
insb
adc
jle
and
movsb
in
lret
ret
pop
mov
jle
movups
cmp
stos
shrb
and
push
addl
pop
mov
inc
cmpsl
or
push
inc
dec
jge
xor
sbb
lcall
xor
add
cmp
dec
mov
loop
mov
stc
pop
jae
es
sbb
pop
xor
pushf
inc
dec
mov
inc
fbstp
sub
xor
pop
jmp
cmp
scas
rcll
lds
fcmovnu
mov
push
sti
jb
push
xor
pop
inc
sub
aam
fdivrp
out
std
rolb
fmull
ss
lahf
jg
pop
or
or
and
popa
lea
movsl
xor
jnp
ss
sbb
xor
push
lods
sub
int3
fstpt
stc
mov
cmp
xchg
inc
dec
mov
xor
iret
sub
fistpll
jo
iret
cmc
cmp
sub
pop
aam
ljmp
sub
or
lock
test
outsb
testl
pop
cmp
addl
das
cmp
sub
cmp
dec
ja
ror
imul
ffree
mov
js
dec
das
mov
cmp
mov
sbb
test
roll
into
push
imul
dec
in
cltd
add
cli
inc
mov
rorb
xor
notl
and
aas
daa
inc
popf
push
cmp
add
iret
sub
sub
cmp
mov
cltd
inc
pop
or
and
cli
jle
fcomip
xor
mov
jns
jbe
testl
movsl
filds
and
inc
addb
roll
sub
movsl
int
pop
push
sub
sbb
outsb
xor
lods
pop
cmp
mov
sub
and
mov
dec
lret
xor
dec
orb
pop
js
sbb
or
daa
add
insb
jle
mov
dec
mov
cmp
inc
xchg
scas
mov
inc
mov
cmp
dec
and
sbb
pop
call
push
into
aas
or
dec
daa
mov
jbe
sbb
pop
jns
aaa
mov
aad
jnp
inc
loope
xor
aad
push
ret
or
inc
xchg
adc
in
sub
jle
insl
outsb
push
push
mov
xchg
stos
xor
inc
sub
call
sbb
sub
in
mov
pop
sub
or
pop
mov
pop
xchg
pop
fwait
sub
pop
int
jle
push
cmp
lock
or
xorl
add
sub
imul
inc
rol
stc
jbe
subl
pop
xchg
cmp
movsl
sahf
cs
xchg
outsl
or
rclb
push
inc
das
or
daa
shl
fidivrs
lods
push
data16
aam
inc
lret
inc
ss
push
jle
add
icebp
xlat
ds
mov
ret
sarl
xchg
aam
leave
das
or
push
add
out
xchg
dec
test
out
cmp
fisubs
test
out
cmp
cmova
fcom
xor
push
fistps
xchg
outsl
fdivrs
pop
gs
cs
int
or
dec
stos
jge
fwait
int
and
sbb
stos
mov
fwait
adc
push
popa
cwtl
add
mov
and
or
xlat
jge
jb
bound
add
or
inc
pop
int3
leave
add
inc
les
inc
pop
sti
mov
xor
lds
cmp
aaa
scas
sbb
cmp
jns
clc
mov
mov
addr16
push
pop
fcom
push
nop
dec
movsl
adc
daa
add
mov
mov
jbe
ja
jne
push
fwait
mov
das
dec
inc
cmp
mov
sti
or
pop
lods
out
lods
lock
inc
or
jmp
divb
mull
stos
loope
xor
dec
pop
adc
pop
cmp
pop
repz
sub
xchg
sarl
aaa
xor
jmp
hlt
int
fcmovne
stos
not
das
jge
inc
sub
lret
das
inc
jno
mov
pop
das
fnstcw
nop
and
fisttps
inc
fldcw
aad
es
in
stos
idivb
jg
cmpsb
out
cmp
cmp
movl
std
fdivr
or
inc
xchg
cld
jo
pusha
fcmovnb
add
fsubl
push
mov
das
jg
cld
dec
outsb
inc
dec
mov
cmp
pop
in
shrb
clc
add
push
in
mov
add
xor
fiadds
subl
or
pop
sbb
fstl
in
lret
addr16
insb
in
add
and
shlb
and
rol
and
mov
mov
sbb
hlt
push
mov
xchg
pop
aas
sub
push
repnz
dec
jl
inc
mov
testl
sub
xchg
fwait
dec
out
call
lret
inc
in
inc
push
out
jle
inc
xchg
imul
bound
xor
lods
fbld
cmp
sbb
fldenv
push
daa
cli
push
lahf
xor
ss
jl
push
divb
aas
testl
or
inc
cld
jg
pop
and
int
inc
loope
fiadds
daa
imul
cmc
int3
sub
push
in
xor
push
not
sbb
mov
dec
addl
repz
sub
add
icebp
fnstsw
push
lret
and
stos
in
or
das
dec
ret
add
rclb
ffreep
sub
sarl
cmpsl
and
mov
notl
push
jl
sub
iret
add
mov
and
test
imul
ret
aas
jl
ss
sahf
dec
arpl
push
jg
pop
rcl
icebp
std
fistpll
dec
stos
cwtl
into
xchg
int3
cmpsb
jle
das
pusha
stos
pop
cmp
scas
movsl
xchg
or
jle
add
inc
fidivrs
mov
fst
daa
rolb
cmp
shll
push
lods
stc
out
jl
xorl
push
lea
and
pop
push
gs
xor
dec
jg
icebp
inc
adc
inc
mov
scas
pop
inc
push
das
daa
xchg
lea
inc
idivl
pop
rorb
int3
repz
fwait
mov
mov
inc
dec
sub
jne
subl
xchg
inc
pop
jle
adc
inc
fs
scas
sbb
enter
dec
lds
cmp
mov
dec
jle
mov
push
pop
out
adc
fs
inc
bound
cmp
dec
pusha
int3
popa
sub
insb
pop
jg
push
movsb
jecxz
fwait
or
lea
cs
dec
mov
or
clc
in
loope
pop
into
mov
dec
cmp
dec
fstpl
ret
insb
ljmp
sub
addr16
jl
adc
mov
dec
dec
outsl
lods
sub
lret
hlt
jp
psraw
xor
stos
xchg
test
push
inc
dec
pushf
cmp
int3
dec
and
dec
mov
roll
mov
aaa
aas
push
cmpsl
dec
adc
into
jo
leave
pop
cmp
sub
in
inc
jae
and
dec
imul
jle
cmpsl
fmuls
jae
nop
sti
jae
fidivl
add
addr16
pop
ds
scas
jl
push
dec
jle
lea
int3
in
xor
mov
insl
paddsw
fadd
leave
mov
imul
aam
enter
xchg
add
pop
cmpsl
pop
pop
xor
jl
loopne
mov
sub
shll
aad
jmp
mov
pop
repz
pop
stos
and
push
mov
or
mov
inc
xor
js
mov
cmp
dec
dec
fld
popa
das
fdivrl
add
adc
data16
aaa
add
inc
pusha
push
mov
in
xor
testb
inc
movsb
cld
insb
sbbb
dec
inc
push
loope
lahf
inc
aas
xchg
es
popf
sbb
ss
push
inc
es
nop
sbb
lret
pop
mov
ds
xchg
cmpb
pop
test
movsl
dec
shlb
stos
loopne
mov
inc
adc
or
cli
ds
aaa
adc
scas
lods
inc
inc
jg
cltd
dec
pushf
sar
cmp
add
add
incb
loop
push
shlb
mov
fists
add
inc
pop
jg
mov
aam
or
push
sub
mov
or
jp
ds
pop
or
or
lret
ds
sti
sub
push
stc
shlb
mov
sub
cmp
stos
add
mov
pushf
mov
movl
add
sub
mov
fiadds
scas
daa
push
into
lahf
int
dec
movsb
pop
pop
jbe
cmp
pushf
outsl
jmp
repnz
cmc
fsubl
aam
dec
cmp
outsl
aas
cmp
mov
inc
dec
aas
mov
sbbb
pop
fsts
push
lret
mov
cld
pop
mov
aaa
xchg
jo
sub
jbe
mov
call
stos
bound
mov
add
cs
xor
mov
fmull
es
mov
out
sti
mov
scas
and
dec
cmp
vmovq
scas
imul
lods
jnp
inc
push
shll
or
cmpsl
inc
mov
arpl
pop
cmp
cmp
lds
and
inc
pop
sub
and
mov
mov
or
je
test
cmp
inc
js
sub
out
pop
aam
ja
and
xchg
xlat
fadd
push
ffreep
inc
jle
xchg
call
idivl
popf
mov
lds
sbb
repnz
cwtl
sahf
mov
add
lret
aad
inc
pop
sub
add
lahf
adc
popa
push
xlat
cld
sub
fistpll
rorb
sub
insb
jl
adc
test
sub
inc
mov
jmp
sbb
or
mov
sbb
loop
lods
cld
aaa
mov
sub
dec
fisttpl
push
mov
mov
insb
sub
xor
sub
jg
jmp
xchg
add
pushw
pop
leave
fwait
cmpsb
or
and
imul
jo
xchg
or
push
stos
push
sub
mov
test
or
frstor
ffree
fmull
sub
idivb
cmp
mov
inc
aas
sbb
pop
sbb
decl
and
cmp
jl
test
xchg
sahf
inc
js
push
ds
sahf
iret
dec
jnp
iret
sarb
push
mov
sbb
xchg
push
sub
stos
jg
jle
scas
jp
fstl
insb
sahf
incl
adc
cmp
fucomi
inc
jl
sub
ds
nop
push
inc
sub
lcall
jl
inc
imul
dec
dec
push
inc
cmp
xor
xor
inc
and
push
lret
inc
outsl
daa
dec
ja
cmp
lods
dec
movl
loop
dec
outsl
ds
and
iret
aam
out
mov
stos
dec
ss
addr16
in
mov
adc
cmp
scas
sti
cmp
sbb
int
in
cmp
dec
cmc
loop
xor
sub
fisttps
and
jge
mov
inc
daa
sbb
ds
js
dec
mov
fidivrs
flds
pop
sbb
fdivp
push
push
jg
mov
psubw
rcl
add
ret
popa
jp
and
mov
xchg
and
scas
lods
lret
cli
and
jmp
lahf
push
adc
ret
leave
cwtl
insl
sbb
lock
adc
xor
dec
and
xor
aas
mov
ficomps
mov
sahf
pop
dec
sbb
out
bound
mov
popa
sti
lahf
push
xlat
mov
pop
dec
pop
jnp
lods
jae
psubsw
jl
pop
cmc
jno
and
pop
or
cwtl
aas
inc
inc
std
jg
jp
jle
xor
cmp
aam
popf
pop
cmpsb
mov
mov
and
cmp
dec
test
sub
add
aas
cmp
aad
daa
test
or
xor
filds
lds
dec
int
movsl
sub
sub
repz
jp
ret
cs
lret
daa
cmp
addl
divl
fwait
mov
and
mov
xchg
dec
daa
icebp
arpl
xor
ss
nop
dec
js
rorb
or
rolb
xor
xchg
add
sub
cld
inc
mov
xchg
aam
pop
cmp
mov
push
or
add
iret
ljmp
add
inc
add
cltd
mov
lods
stos
or
leave
pushl
or
test
lods
push
inc
sti
cmp
mov
xchg
pushf
cmpsl
inc
outsl
sbb
loop
mov
dec
mov
stos
shlb
mov
mov
in
mov
cs
lea
xlat
mov
fidivl
pop
dec
add
insl
and
lahf
pop
fstps
mov
out
rolb
push
xor
push
stc
add
lcall
cs
into
jge
cltd
inc
hlt
scas
push
sarl
jl
dec
sarb
jne
xor
xor
imul
mov
sub
fiadds
xchg
mov
movsl
cli
jge
sub
jle
mov
xor
test
shrl
fidivl
fisubrl
inc
mov
insl
test
jle
mov
jle
cmpsl
push
sub
aad
call
jg
imul
dec
lock
jne
and
scas
mov
and
mov
jbe
dec
sbb
js
popa
insl
dec
jmp
jp
adc
jb
fwait
cmp
mov
jns
mull
mov
arpl
stc
int
add
int3
xchg
das
sbb
and
fwait
testl
jle
das
sub
out
lock
fcompl
lret
fisttpl
movsl
xor
push
lahf
lock
aas
adc
pop
xchg
call
jbe
stos
ss
call
pop
cmp
aas
daa
xorl
pop
insl
imul
outsl
inc
or
fnstenv
xchg
or
das
dec
out
sub
and
add
js
and
filds
cld
xchg
cmpsl
loope
leave
cmp
jle
scas
or
sub
inc
jmp
in
lahf
or
scas
sarb
xor
xchg
sbb
add
fcoml
popf
and
xor
dec
fildll
movsb
sub
inc
mov
xor
cmp
fucomi
push
xor
bound
mov
es
test
mov
test
cmp
rol
jl
movsl
xor
enter
andb
jp
cmpsl
xchg
mov
xor
xor
xchg
hlt
cltd
cmp
fwait
cmp
and
movsl
jle
xchg
fs
add
lret
push
das
pop
ds
daa
mov
inc
rorb
pop
scas
fdivrl
jle
xchg
pop
int3
leave
xor
sbb
ds
pop
test
ret
mov
pop
stc
aas
in
dec
jg
add
pusha
outsl
lods
mov
or
dec
jle
xchg
push
adcb
pop
xchg
test
cmp
push
pop
push
inc
xor
addr16
cmp
inc
cs
or
inc
inc
dec
jle
sbb
dec
sbb
cs
rclb
vrsqrtps
xchg
sbb
sub
pop
int
or
sub
incb
fadds
jp
mov
cmp
cli
out
jmp
bound
icebp
mov
addr16
or
mov
sbb
sbb
das
js
add
fistl
adc
cmc
jae
cmp
shrl
xor
inc
notb
pop
mov
push
jp
jo
divl
pop
cmp
shrl
daa
rorb
add
and
aad
daa
loopne
cmp
sub
decl
jg
cld
and
icebp
test
stos
dec
stos
inc
pop
and
test
mov
mov
xlat
xor
lcall
dec
lds
cmp
mov
mov
inc
xchg
jl
leave
scas
out
xchg
inc
sub
ds
aaa
add
mov
fstps
fstl
ljmp
jb
out
xor
mov
jecxz
xor
stos
rclb
lcall
into
sbb
jnp
jl
mov
imull
sub
and
loop
imul
cmp
stc
popa
mov
test
cltd
jo
push
mov
aaa
push
test
cld
or
inc
jbe
dec
inc
jle
mov
dec
and
scas
stos
adc
pop
nop
out
jecxz
cmp
out
xor
lods
jmp
cmp
ss
fmulp
outsl
fs
test
mov
or
mov
add
mov
xchg
aaa
aaa
out
sub
jl
jae
cld
sbb
inc
fldcw
les
sahf
cmp
jg,pt
pop
jg
inc
outsl
stos
and
xor
inc
addb
cmp
xchg
sub
aas
add
popf
lock
sbb
in
aas
xchg
mov
sbb
xchg
mov
cmp
add
cltd
mov
inc
adc
pop
jmp
popf
leave
or
jl
lret
xor
pop
jl
divl
loop
jno
in
or
fsqrt
mov
mov
in
dec
inc
sbb
inc
lods
jp
imull
jb
test
inc
mov
adc
ret
sbb
or
jno
jmp
stos
inc
das
ljmp
xchg
outsl
fdiv
lods
ltr
mov
mov
mov
mov
inc
mov
or
push
sbb
lea
pop
mov
cli
out
inc
iret
push
fiaddl
pusha
lods
scas
test
jnp
testb
or
mov
jbe
and
aad
xchg
jbe
sub
pop
inc
mov
mov
pop
dec
cmp
out
neg
pop
sub
push
or
aad
rcl
inc
lret
int
jg
fwait
mov
insl
loope
ret
lods
lods
push
lret
sub
incl
imul
dec
into
into
mov
out
jl
mov
inc
and
jp
xor
lret
inc
fidivrl
mov
mov
movsl
cmp
jl
jp
xchg
sub
pop
jecxz
les
scas
pop
jmp
mov
sub
lods
aas
in
jg
das
sub
sbb
xchg
das
mov
xchg
lods
je
nop
mov
daa
xchg
and
pop
or
cmp
sti
pop
push
or
aas
iret
daa
push
out
gs
dec
outsl
sub
cmp
jge
inc
add
das
lock
pop
in
or
jg
xchg
pop
imul
das
mov
mov
push
aam
fsubrp
stos
fistps
add
mov
sbb
ja
sub
in
sub
xlat
nop
cmpsl
xor
stos
pop
cmp
inc
or
pusha
add
int3
cmc
jl
popa
xor
xor
mov
pop
push
push
out
adc
pop
inc
ds
cmp
jl
mov
ret
pusha
out
push
mov
mov
nop
movsl
mov
scas
loopne
mov
iret
or
icebp
sarb
inc
push
icebp
outsb
or
inc
out
mov
movsl
xchg
xchg
das
dec
stc
push
mov
lock
dec
pop
fbld
inc
into
cmpsb
dec
pop
jecxz
adc
fldenv
mov
fs
orb
icebp
outsb
and
xchg
lret
outsl
mov
iret
ss
mov
imul
dec
pop
gs
and
xchg
jmp
dec
dec
pop
in
cmpsl
sahf
pop
ret
xor
dec
movsl
dec
jg
jbe
out
jae
jp
jmp
inc
test
inc
int3
xchg
scas
loop
lods
sbb
mov
mov
jle
ljmp
aaa
xchg
shll
mov
adcl
lods
jnp
aas
add
neg
stos
imul
mov
je
mov
mov
repz
test
aas
js
jae
dec
fwait
jmp
aad
pop
roll
sbb
daa
addl
or
popa
fmull
push
fidivrs
sbb
pop
push
mov
sbb
jae
clc
and
clc
and
xchg
in
jle
xchg
push
rorl
das
jecxz
sub
push
fwait
hlt
pop
mov
xor
jb
icebp
lret
pop
arpl
xor
dec
sbb
out
sub
cmp
decb
test
add
cmc
or
jg
cltd
cli
loop
mov
or
cmp
adc
jle
fwait
aas
or
and
lods
xor
add
push
imul
dec
int3
std
cmp
cmp
pop
daa
jl
sbb
sub
pop
xchg
cmp
xchg
aas
daa
rolb
add
sub
cmp
xlat
jnp
ficoml
aas
repz
jne
inc
lods
mull
inc
das
inc
mov
shr
ja
jbe
xchg
inc
dec
sbb
leave
sub
divb
andl
out
jmp
mov
daa
lret
mov
stos
dec
movsl
jle
iret
xor
lods
fimull
lcall
mov
lods
or
mov
aas
ss
shlb
inc
cmp
sub
push
xor
mov
cmovns
cltd
mov
clc
lret
popa
icebp
jecxz
out
and
or
int3
lods
das
jle
dec
jmp
insb
testb
pcmpgtb
inc
jg
cmp
inc
and
mov
stos
jle
add
and
js
movsl
jp
movsb
sub
ljmp
out
int
xchg
cmpb
jno
pushf
dec
cmp
cmp
dec
xchg
rorb
push
shrb
int3
lret
decl
outsb
sbb
sub
arpl
inc
mov
or
mov
mov
inc
push
xorl
xor
addr16
sub
inc
or
cmp
add
mov
mov
add
sub
daa
fisttpl
fdivrp
lret
and
testb
jge
outsl
scas
nop
push
or
fimull
leave
aas
das
outsl
and
cs
sbb
or
lret
adc
inc
dec
pop
addr16
inc
daa
leave
add
dec
mov
cmp
lahf
mov
mov
sub
aas
cltd
testb
inc
ja
mulps
das
test
inc
paddsw
sub
lret
add
pop
incl
dec
push
xchg
insl
aaa
or
mov
pop
xor
or
daa
ljmp
mov
daa
clc
outsl
lds
xor
jl
fs
sarb
jnp
mov
sbb
push
bound
int3
add
push
jl
icebp
mov
fdivr
jg
xor
fistpll
dec
sub
inc
nop
mov
cmp
xchg
enter
aaa
and
xor
mov
ret
push
sub
jbe
xchg
mov
out
lods
stos
pop
add
inc
xlat
fimull
mov
push
xlat
in
adc
stos
je
push
push
mov
aaa
mov
dec
jge
mov
sub
mov
dec
test
push
mov
cmpsl
pop
jl
pop
xlat
in
into
jb
scas
pop
jae
pop
lret
pop
fists
insb
cmpsl
inc
push
int3
dec
adc
bound
addb
jle
xorl
mov
cmp
out
push
enter
xor
cmpsl
ficoml
sbb
push
stc
mov
out
push
inc
and
or
or
daa
sub
filds
pop
cli
pop
xlat
inc
mov
iret
sar
jno
cmp
cs
call
cmc
xchg
and
push
lret
pop
ja
bswap
dec
mov
mov
ret
popa
lret
inc
fbld
xchg
xchg
cmp
pop
jg
push
bound
and
push
xlat
gs
mov
xorb
inc
push
cmp
push
push
repz
xchg
inc
shrd
fscale
mov
fisttpl
cmp
lahf
and
xor
jl
sub
push
mov
test
fimull
sbb
adc
jle
adc
add
movsl
jecxz
jg
stc
insl
push
fs
mov
div
mov
mov
popf
push
jns
dec
inc
mov
sub
jl
xchg
dec
lahf
jo
pop
pop
sub
and
mov
scas
out
adc
imul
or
pop
pop
adc
pop
int3
jp
xor
dec
nop
cmp
or
iret
inc
stos
xor
addr16
aas
icebp
sub
andl
dec
cmp
daa
fs
not
jle
jg
or
out
dec
cmp
inc
push
ret
push
adc
incl
xor
sbb
lds
pop
stos
sub
out
dec
mov
rcll
incl
inc
adc
adc
ljmp
xchg
adc
sub
jmp
repz
push
inc
mov
dec
sbb
idiv
jg
test
movsl
xchg
fs
jl
mov
cmp
and
inc
repnz
mov
inc
pop
pop
pop
and
ja
xor
mov
xor
lret
mov
fxch
pop
push
lret
ss
cmpsl
test
out
xor
or
sbb
lret
pop
fdivp
or
sub
mov
cmp
sahf
push
dec
jg
mov
lods
in
add
xchg
sub
lret
les
and
or
jecxz
pop
mov
sub
dec
mov
dec
pop
pop
scas
outsb
popl
rorl
xor
push
int3
imul
das
inc
dec
inc
sbb
jl
pop
mov
cmp
sub
inc
cmc
ds
or
dec
cltd
movd
cmp
sub
cmp
stos
mov
jl
mov
push
test
sub
outsl
sbb
idivl
mov
adc
sahf
fs
jbe
ret
mov
imul
sbb
push
bound
fdivp
stos
dec
xor
jl
outsl
inc
daa
stos
mov
mov
jl
pop
sbb
push
push
pop
adcb
cmp
mov
dec
inc
fs
dec
das
and
stc
jle
into
fsts
popf
lcall
pushf
dec
push
stos
daa
lods
out
pop
push
mov
xchg
mov
push
sbb
daa
mov
jg
push
daa
add
iret
mov
loop
jl
or
imul
sub
xchg
shl
lret
push
mov
and
iret
pushf
incl
pop
gs
mov
in
mov
mov
inc
lahf
rcll
sub
popa
test
leave
mov
pop
lock
es
push
dec
inc
pop
inc
ror
pusha
lret
pop
nop
push
push
jl
gs
xor
test
gs
lea
pop
test
pop
push
rclb
xor
jmp
xor
xchg
push
cmc
scas
push
pop
sbb
sub
sbbb
ficomps
das
mov
out
decl
pop
xchg
shrl
dec
sarl
cmc
ss
pop
mov
loope
xchg
pop
inc
dec
mov
pop
lret
mov
daa
and
mov
into
pop
dec
dec
mov
imul
mov
dec
pushf
push
dec
cmp
inc
push
mov
inc
pop
push
int3
stos
mov
pusha
sub
mov
insb
add
int3
xor
xor
fisttpll
dec
mov
imul
mov
popf
cmp
cmp
mov
pushf
cmp
xor
adc
inc
inc
jo
push
xchg
movntps
dec
jle
pop
jne
jg
testb
or
xchg
adc
push
jg
push
lock
add
mov
push
or
pop
or
or
mov
mov
punpckldq
stos
push
scas
sbb
scas
pop
push
fwait
aaa
fs
push
or
cmp
sbb
outsl
cmp
jns
fsts
iret
pop
scas
jle
xchg
sub
or
lret
sbb
aaa
jbe
and
dec
push
out
mov
sub
in
xchg
inc
movsb
or
jo
dec
fld
nop
outsl
xchg
jg
dec
adc
xchg
orl
add
and
in
insb
pop
mov
in
aas
adc
inc
add
es
mov
dec
mov
fcom
jae
loop
lret
dec
sub
fiadds
mov
sub
sub
mov
mov
jle
js
mov
dec
or
les
popl
pop
inc
fs
mov
cmp
fildll
and
cli
sbb
adcl
fimull
pushf
and
fwait
stos
sbb
push
xchg
lret
dec
sub
stos
jb
sub
daa
aas
inc
test
testl
subb
ret
sub
sti
lods
loop
xor
shrb
mov
mov
fldcw
and
mov
xor
ja
push
cmp
mov
xchg
fcoml
mov
and
sub
push
dec
xchg
jno
inc
add
movsl
jp
jle
cmp
shl
icebp
mov
mov
xor
jb
andl
dec
push
push
mov
mov
clc
sbb
mov
enter
mov
aas
and
aaa
adc
lret
or
push
lea
cli
hlt
xchg
stc
lahf
into
sahf
dec
dec
hlt
jg
das
sub
ds
push
sub
lret
sbb
fistpl
inc
arpl
cltd
lods
sub
call
or
int
xlat
inc
or
iret
stc
stc
shlb
int
jle
rclb
in
mov
aaa
ds
mov
add
jg
add
shll
insl
mov
fcompl
fucomi
stc
pop
cmp
ss
add
inc
cmp
jbe
xchg
ret
cmp
mov
xchg
loope
ret
xchg
mov
jle
mov
cmpsb
pop
nop
push
fs
fcmovnu
push
jge
scas
adc
jne
xor
cld
dec
push
shll
mov
xchg
mov
adc
outsb
or
push
js
imul
mov
ss
pop
imul
ficoms
mov
inc
and
cli
test
sbbl
int
daa
test
or
aam
sbb
mov
adc
orl
adc
ljmp
mov
icebp
int
decb
push
imul
imul
push
mov
mov
mov
decl
mov
pop
inc
or
push
inc
ret
jmp
nop
fs
scas
and
or
out
inc
push
sbb
ret
sti
aas
lods
or
enter
sub
clc
jle
ret
xor
pushl
sub
mov
dec
xor
pop
xor
fcoms
insb
pop
push
jb
and
sbb
inc
leave
outsb
inc
jp
data16
xlat
pop
dec
or
adc
mov
stc
xchg
scas
fiaddl
and
mov
iret
ret
jmp
cmp
dec
lret
push
pop
ss
popa
vpxor
jo
divb
pushl
xchg
inc
or
sahf
mov
add
pop
hlt
int
adc
imul
jbe
aas
and
xchg
dec
sbb
xchg
fists
xchg
pusha
add
aaa
enter
leave
inc
mov
loop
and
sbb
fiaddl
cmovs
or
enter
pop
push
mov
pop
cmp
mov
mov
cli
cmpsb
dec
subl
cmp
push
mov
sub
push
pop
bnd
cmp
and
jge
or
loop
out
xchg
ficompl
lret
sub
mov
clc
into
add
inc
adc
mov
outsb
cmp
xor
out
mov
ds
xchg
mov
pop
negl
nop
dec
repz
js
dec
loope
pusha
test
cmp
jg
popf
cmp
ror
push
es
sti
inc
in
or
pop
xchg
daa
dec
mov
scas
subl
dec
cmp
inc
jnp
or
outsl
daa
sub
xchg
fists
inc
clc
div
cmp
hlt
data16
sahf
xchg
lret
lds
sbb
or
inc
ljmp
dec
mov
cmpl
mov
shrl
cmp
and
ficoms
in
push
aam
and
outsb
int
push
push
inc
and
cmp
cmp
pop
scas
ret
orl
lock
mov
pop
mov
xchg
adc
fistpl
imul
add
lods
xor
jle
movsb
inc
xchg
lret
inc
cmp
add
push
mov
pushf
push
sub
fyl2x
jo
mov
das
aam
cld
mov
xor
xor
lret
into
shlb
imull
push
fimull
inc
das
cmp
mov
cmpsl
sub
pop
or
call
dec
jle
xchg
sub
repnz
scas
sbb
loopne
and
clc
cmp
inc
pop
dec
lods
jle
cmp
lret
scas
add
addl
cmpsl
or
ljmp
cmp
fwait
in
nop
jg
or
inc
sub
dec
inc
or
jecxz
dec
and
negl
mov
into
ss
or
dec
ret
sub
mov
mov
aas
mov
out
lods
add
xchg
sub
adc
dec
adc
inc
push
movb
sub
cmpsl
or
in
xlat
loope
repz
sarl
xor
inc
scas
jle
popf
xor
inc
push
push
push
insl
xor
fstpt
sub
fs
sub
and
jno
cmp
out
data16
cltd
addr16
inc
in
call
inc
ljmp
dec
mov
mov
insl
mov
dec
pop
and
aas
inc
mov
push
cli
das
shlb
mov
lock
push
pop
or
scas
ds
mov
outsb
lds
inc
pop
jb
das
jno
loopne
jmp
and
mov
ret
leave
fcmovnu
test
sub
jl
mov
or
aam
pop
mov
xor
jmp
cld
push
mov
add
mov
pop
fcoml
xchg
dec
xchg
dec
jle
ss
sub
clc
out
in
jb
outsl
rcr
mul
xchg
or
fcompl
jp
call
cmp
daa
cmp
aaa
mov
das
cmp
xlat
stos
pusha
lods
cli
cmp
mov
or
dec
jg
nop/reserved
mov
cmp
addr16
repnz
mov
paddq
push
mov
pushf
fdivr
mov
shl
or
add
stc
mov
mov
adcl
cld
push
aas
or
ss
mov
add
xchg
and
or
stc
mov
lret
testb
and
mov
xorb
sbb
jo
and
inc
cmc
adc
mov
mov
ja
xor
xchg
add
pop
fxam
std
cli
adc
pop
inc
jle
add
push
in
test
dec
xchg
das
jle
into
and
test
dec
mov
xor
dec
call
movsb
adc
adc
and
xor
rcl
mov
rol
cmp
lods
mov
mov
sbb
xlat
ret
push
adc
mov
jo
xchg
mov
or
in
sub
call
js
mov
in
inc
sarb
rcll
mov
push
xor
sbb
iret
lret
mov
out
fisttps
pop
lock
fildll
dec
sbb
fadd
xchg
pop
out
ds
jle
test
or
push
mov
cmpsb
or
pop
cmc
int3
data16
push
sub
out
or
xchg
ret
rolb
pop
loopne
push
insb
pop
inc
xor
dec
jbe
push
dec
sub
ss
iret
fdivrl
xchg
cmp
push
pop
pop
sub
jmp
cli
mov
jg
movb
lret
cmpsl
xor
pop
xchg
cltd
pop
xor
das
jl
add
sub
sub
sbb
into
adc
cmp
jle
inc
mov
cltd
aas
mov
stos
inc
iret
xchg
js
and
jb
mov
cmp
sbb
push
push
icebp
outsb
mov
mov
push
mov
dec
dec
mov
out
lret
loop
aas
mov
jl
xor
push
fstpl
aam
std
gs
stos
imul
jl
mov
cltd
scas
into
subps
xchg
jg
movsl
hlt
dec
mov
cmp
movsl
mov
push
stos
and
mov
popf
mov
inc
cmpsb
push
repnz
xchg
push
iret
inc
bound
fisttpl
into
xchg
adc
xor
sarb
sbb
push
sub
xchg
lcall
fs
cmpsl
dec
pop
pop
and
cmp
xor
int
cmp
aam
out
scas
orl
cld
ss
movsl
imul
dec
mov
and
inc
lret
lds
and
sti
aas
cmpsb
adc
xor
orb
cli
push
aam
inc
aaa
rcll
loope
ja
int3
stc
mov
test
into
mov
xor
push
aaa
fstl
sbb
bswap
bound
frstor
ds
lods
and
or
ret
mov
cmc
ds
jl
stc
xchg
xchg
cmp
sbb
shl
sar
push
push
inc
iret
mov
out
test
lret
push
gs
aam
push
or
popf
mov
adcl
fs
in
sub
clc
mov
sbb
cmp
dec
mov
cmp
or
fs
jecxz
sbb
in
sahf
popa
inc
les
or
cmp
mov
out
mov
movsl
sbb
add
mov
lock
dec
cmpsb
outsl
cmp
inc
push
lods
jb
mov
and
pop
add
xor
arpl
mov
movsl
jnp
vdivps
ret
test
fildl
mov
jg
enter
std
adc
add
push
adc
cld
mov
idivb
and
fsubrl
mov
out
jecxz
jmp
xlat
adc
mov
lret
cmp
push
cwtl
inc
ljmp
outsb
cmp
sti
dec
pusha
adc
cmp
movsl
pushf
push
adc
sub
jbe
in
das
inc
dec
jg
sub
ret
inc
jne
cmp
sub
into
mov
pop
or
orb
push
push
dec
ficoml
jl
mov
push
lretw
popf
add
jo
icebp
and
dec
pop
jl
cmpsl
add
cltd
daa
lret
gs
rdpmc
arpl
div
push
add
dec
pop
pop
and
inc
stos
stc
lret
daa
fbstp
jp
lahf
add
push
dec
xor
fimull
jp
aam
movzwl
iret
and
out
ret
push
jl
xchg
xchg
mov
pop
pusha
gs
scas
xor
lret
mov
xor
xor
sarl
fwait
lret
xor
les
dec
or
dec
push
xchg
imulb
cmpsl
out
dec
aaa
inc
adc
ret
nop
inc
fwait
cmp
out
lahf
or
pop
sub
icebp
mov
orb
sbb
inc
aaa
add
clc
inc
ss
jl
sarl
xchg
jle
iret
cmp
xchg
jb
xchg
jle
sub
fs
into
lods
jg
ret
int
movsb
iret
andb
lock
aas
bound
dec
fdivrs
stc
mov
lods
inc
aam
mov
shll
dec
cmp
sahf
out
lcall
call
dec
enter
pusha
cmpsb
jno
sub
adc
ret
sub
adc
or
cmp
imul
pop
mov
push
stos
lds
push
add
push
lret
hlt
repz
dec
fldcw
bound
inc
lods
push
adc
scas
and
int3
pop
add
push
lods
sbb
sub
clc
fs
ds
cmpsb
jl
popf
cltd
xchg
call
inc
test
mov
cmpsl
lahf
sbb
inc
aaa
lods
iret
pop
andb
pop
fistps
repz
mov
mov
insb
incl
push
mov
lret
add
outsl
icebp
add
sub
inc
xorl
pop
testb
jl
fsubrs
mull
add
mov
pop
push
into
mov
sahf
cmp
fidivrl
jg,pn
jns
psrlq
mov
adc
test
int3
cmp
stos
mov
cmp
sub
and
sub
inc
scas
jle
inc
mov
idivl
xor
sub
mov
pop
jl
mov
push
mov
pop
pop
pop
and
push
pop
add
xchg
xchg
aam
or
xor
out
test
dec
fimull
jno
mov
xchg
pop
cmpxchg
lods
pop
xor
fcmovnu
mov
outsb
xchg
faddp
mov
shr
out
ret
dec
jg
out
push
lds
fidivl
and
xchg
insb
imul
mov
insb
pusha
mov
jl
std
lret
hlt
scas
dec
pop
dec
push
xorl
sbb
iret
rcr
cmp
dec
sbb
sbbb
cmp
into
mov
xor
mov
int3
push
addr16
xlat
mov
pushf
aaa
push
cmp
imul
push
pop
mov
push
mov
gs
ud2
test
and
dec
enter
out
cmpl
pop
jg
push
sarl
push
inc
fists
and
cs
inc
aam
cmp
sub
add
dec
jg
jle
mov
dec
filds
sbb
pop
out
adc
test
fidivrl
mov
mov
fcomip
addr16
push
stos
mov
xchg
mov
and
jge
stc
cmp
dec
jo
push
ds
movsb
cmp
pop
scas
aas
pminsw
nop
dec
add
les
outsl
pop
mov
jle
pop
push
push
out
adc
xchg
xor
ljmp
cmpsb
push
icebp
push
les
add
pop
test
add
int
iret
mov
jo
dec
cmp
lods
mov
movsb
dec
in
jo
cvtpi2ps
addr16
pop
test
out
sub
rcrb
dec
inc
cmp
jg
leave
or
pop
mov
and
sbb
lret
pop
fnstsw
mov
dec
cmc
adc
add
nop
push
jg
pop
cmp
lretw
inc
mov
fnstenv
and
imul
push
icebp
inc
mov
loop
xchg
mov
mov
sbb
jmp
push
scas
dec
lahf
int
clc
lods
adc
mov
cs
adc
push
adc
push
dec
sub
ret
lahf
jmp
das
in
xchg
inc
insb
xchg
jle
cs
cmpsl
jl
jno
aaa
loope
and
insb
test
mov
push
and
insl
mov
cltd
dec
pop
sahf
repz
dec
dec
lods
lcall
mul
xor
dec
les
cmp
pop
stos
out
cmp
lret
into
xlat
push
mov
cmpsb
fildll
mov
out
mov
cmc
mov
add
lahf
jp
jg
arpl
add
or
mov
lods
inc
outsl
mov
dec
push
push
mov
popf
cmp
push
fs
loop
jns
mov
mov
mov
pop
sub
inc
pop
into
cmp
sahf
dec
sub
cmpsb
inc
aad
dec
or
test
mov
scas
cmp
push
or
mov
gs
cmp
insl
adc
cmp
js
ficomps
cmp
push
adc
stos
jg
pop
mov
or
or
xor
jecxz
int
enter
xor
pop
sbb
fistps
fbstp
fwait
mov
jmp
jbe
js
sub
mov
mov
dec
xor
rdtsc
cmp
xlat
adc
icebp
adc
adc
aaa
daa
ds
mov
pop
pop
jle
lcall
ss
aaa
decb
xchg
dec
fwait
jle
lock
inc
fiaddl
stos
push
or
push
push
jb
fcmovb
sti
js
jmp
sub
lock
adc
jns
inc
xchg
outsb
ljmp
or
inc
roll
insl
mov
addl
cmp
mov
sub
pop
mov
rolb
incb
inc
test
cld
sti
pop
or
pop
sbb
pop
icebp
stos
xchg
inc
in
lds
mov
js
pop
push
das
sub
daa
mov
aad
xchg
add
or
add
jle
repz
test
cmpsl
and
mov
outsb
mov
push
and
rclb
xchg
movsb
dec
ds
rcr
setle
inc
cmp
test
pop
inc
bound
dec
xor
xor
inc
push
cmpb
cld
lds
ss
inc
test
inc
aas
cmp
jb
enter
jle
gs
cmp
dec
mov
dec
push
mov
pop
sub
xor
hlt
scas
hlt
pop
push
jns
add
ret
into
dec
xlat
dec
jle
pusha
mov
cmp
stc
push
filds
stos
int
in
cmpsb
jl
jp
adc
cmp
sbb
lds
idivl
cmp
cmpsl
add
imul
push
inc
xor
rcl
out
mov
jae
jno
js
cmc
rcr
xor
loope
lods
jb
popf
mov
add
sub
push
cmp
adc
cmpsl
xor
dec
and
js
mov
sbb
adc
aad
js
xor
int3
les
testb
cli
xor
fimull
dec
jp
xchg
outsb
sahf
and
lret
sbb
mov
adc
enter
loope
aam
push
xor
sub
rcrb
xor
stos
aas
inc
jg
popa
mov
cmp
sahf
and
or
add
rcr
or
dec
mov
jmp
cmp
pop
push
jge
mov
insl
aaa
dec
loop
fs
dec
cmpsl
fildll
shlb
push
pop
stos
push
mov
orb
xor
mov
pop
jne
test
ss
xchg
loop
xor
test
push
sub
test
ficoms
lods
repz
loop
ljmp
dec
mov
jle
mov
xor
and
ds
cltd
add
std
xchg
movsb
push
shl
pop
sub
mov
pop
lods
pop
repz
or
inc
pusha
mov
jle
xchg
mov
inc
xlat
je
ret
mov
or
and
dec
mov
dec
push
xor
jg
jl
adc
sar
and
jle
add
dec
mov
hlt
mov
into
lcall
lret
inc
inc
into
sbb
xor
xchg
xor
mov
lret
inc
push
jl
mov
fisubrl
je
cmpsl
idivb
mov
frstor
repnz
add
outsb
add
aas
fsts
add
mov
repz
lods
jmp
nop
decl
rclb
inc
mov
scas
ljmp
jle
aad
icebp
xchg
aam
inc
mov
cwtl
mov
std
mov
clc
dec
movsb
out
lods
aas
fdivrs
into
mov
or
shll
div
jle
cmp
push
cli
inc
aam
sub
rcl
lods
xchg
dec
inc
int3
sarb
sti
je
cmp
or
je
pop
scas
mov
iretw
xor
sub
icebp
outsb
inc
jg
pop
aas
mov
jl
push
jle
inc
pop
push
push
test
idivl
jle
loope
sbb
pcmpgtb
cmp
test
mov
jno
jo
cmc
outsb
jl
shr
push
fstpt
mov
inc
pop
loop
push
into
out
daa
pop
ds
movsb
inc
cmpsb
mov
movsb
jbe
test
fcoml
mov
mov
lods
test
xor
sbb
icebp
or
or
cmp
xchg
push
lods
add
sbb
call
sahf
jl
push
lods
addr16
pop
sub
push
adc
mov
mov
adc
std
mov
subl
xchg
ds
cwtl
sahf
pop
adc
xchg
jmp
inc
jb
sub
add
int
mov
mov
mov
pusha
mov
cltd
dec
and
fiaddl
or
xchg
lds
or
ret
inc
inc
push
sarl
dec
add
mov
inc
sbb
mov
ljmp
adc
outsb
scas
xchg
add
xchg
bnd
fs
test
pop
aas
adcb
loope
add
cmpsb
test
inc
dec
int3
jmp
pop
adcl
cmp
add
insl
dec
jg
jo
mov
adc
add
add
push
mov
pop
mov
leave
and
into
orb
pop
lods
mov
xor
jecxz
test
mov
cmp
es
je
imul
jle
dec
cmp
fxch
movsl
std
jecxz
mov
aaa
mov
and
adc
rcll
or
scas
pusha
xchg
jg
into
scas
push
psrlw
inc
cmc
xor
push
sahf
fimull
inc
pop
and
pop
cmpsl
pop
mov
ds
je
mov
cmc
cmc
mov
lods
ror
jle
cmp
shld
push
mov
aas
and
std
dec
mov
pop
cmp
mov
popa
mov
scas
mov
sahf
push
lahf
ret
xor
xchg
add
loop
cmp
gs
pop
mov
jno
sub
data16
jl
int
mov
jmp
cmp
popf
mov
xchg
cmpsl
mov
addr16
sbb
and
out
xlat
jle
jmp
cmp
mov
mov
stos
xor
jle
shll
testl
cmp
push
fs
fimull
sbb
cmpsl
sub
leave
xor
mov
movsl
decb
adc
push
or
mov
es
push
daa
mov
imul
push
mov
mov
push
pop
cmpsb
xor
cmpsl
jl
loop,pt
mov
int
add
inc
jmp
mov
add
sar
mov
dec
insl
jmp
movsl
outsb
jge
dec
xchg
xor
imul
mov
add
mov
push
xchg
push
pop
jle
xchg
mull
insl
and
dec
cmc
out
sbb
pushf
mov
fs
pop
clc
ljmp
jle
inc
mov
imul
sub
push
pop
or
mov
dec
fs
jl
stc
mov
adcb
adc
push
pop
into
popl
cmp
bound
pop
fs
lret
or
mov
pmulhw
out
sbb
stos
scas
mov
pop
jns
hlt
in
sbb
mov
int3
inc
xchg
in
rcll
call
dec
mov
jle
stos
adc
js
dec
and
arpl
inc
push
xor
mov
dec
icebp
mov
sarl
mov
pop
fwait
in
arpl
orl
testl
ds
dec
cmp
mov
sub
lahf
xor
outsb
stos
fsubrs
jle
mov
fstps
sbb
fbstp
pop
jle
ds
push
fsubrl
mov
sbb
daa
mov
icebp
cmp
hlt
xor
dec
loopne
out
into
push
push
inc
iret
mov
scas
jg
ljmp
mov
aas
cmp
fwait
xchg
xchg
xchg
and
fcoms
mov
push
sub
dec
rclb
add
ja
filds
push
sub
push
xor
push
popa
jg
xchg
push
xchg
test
ret
cmpsb
popf
lds
mov
xor
xlat
movsb
stos
int3
push
test
and
adc
pop
jecxz
mov
cmp
sub
mov
inc
dec
clc
push
outsl
or
lods
jl
and
xor
sub
mov
ret
jb
sub
leave
or
push
fwait
cs
jl
jmp
fs
push
filds
mov
pop
mov
or
or
inc
sub
mov
mov
inc
stos
mov
inc
pop
push
fdivl
lods
sarl
aas
mov
dec
xchg
mov
pop
dec
loope
cmp
pop
stos
scas
loopne
xchg
inc
mov
lahf
mov
enter
jnp
inc
in
xchg
pop
mov
jl
ljmp
arpl
xchg
fimuls
jne
xchg
jl
cld
mov
cmp
mov
aaa
pop
and
pop
insb
jnp
sub
andb
fidivrs
cwtl
and
jne
mov
daa
xor
data16
into
mov
les
jl
pop
jg
cmpsl
dec
mov
in
jo
or
mov
pop
fidivrs
push
ret
mov
lret
xlat
lea
jne
enter
iret
shl
test
jmp
jo
jle
aad
fnstcw
or
dec
mov
push
xchg
cltd
dec
jno
sbb
sti
imul
adcb
dec
adc
ljmp
jns
test
and
out
enter
adc
nop
add
cmc
jl
daa
js
inc
cmpsb
iret
or
dec
test
add
js
pop
aas
jle
roll
pop
xor
outsl
std
or
je
outsl
mov
sub
jl
dec
fstp
mov
push
movsb
cmpsl
iret
pop
aas
jg
xor
sbb
dec
test
int
add
std
pop
in
add
push
lea
mov
inc
adc
cmp
rorb
cmp
test
jg
gs
out
jle
adc
xchg
xchg
shll
push
adc
ja
fimuls
test
inc
outsl
hlt
scas
inc
lea
cmp
outsb
push
jbe
add
mov
xlat
test
aas
push
hlt
or
sub
test
ret
into
leave
inc
cmp
mov
out
inc
push
adc
subb
pop
popl
dec
ljmp
movsl
sbb
int3
add
mov
nop
daa
aad
dec
jg
sti
mov
das
ja
inc
push
in
ljmp
dec
out
jl
adc
mov
repz
mov
inc
sarl
or
adc
lods
adc
xor
ret
mov
aam
lock
inc
add
add
std
lods
jae
adc
dec
pop
cmp
add
mov
getsec
dec
and
jo
pop
daa
jge
sbb
push
out
stos
aas
and
jl
jle
or
data16
xor
daa
mov
das
sbb
das
scas
xchg
inc
mov
jg
ljmp
cmp
ljmp
lahf
mov
aad
mov
sbb
das
sub
or
idivl
ret
jb
mov
push
das
fistpll
testb
or
sub
cmp
in
add
aas
and
insl
mov
int
push
notl
je
or
mov
repz
cmp
mov
jl
lods
imul
mov
data16
repnz
mov
stc
sub
mov
daa
aaa
das
and
sbb
jle
daa
das
sahf
mov
mov
xchg
xor
pop
mov
stc
mov
jo
jmp
jp
dec
lea
aad
push
dec
jns
sarb
jg
call
adc
hlt
pop
xchg
arpl
addr16
fsts
in
ja
shl
push
fisubrl
or
xchg
cmpb
scas
lock
mov
or
mov
das
cltd
jno
insl
xchg
cmp
outsl
jle
adc
jge
mov
fnstcw
inc
xchg
leave
scas
cmp
dec
dec
loop
fsubp
pop
ljmp
cld
xor
cltd
inc
fnstenv
xchg
aas
mov
adc
popf
dec
stc
lods
pusha
jp
cltd
add
addb
dec
sub
pop
push
sahf
jg
outsl
or
mov
stos
inc
xor
cmpsl
lret
je
lods
cltd
sub
fsub
xchg
jle
aas
add
jae
xor
cmc
sub
clc
call
divl
lods
cmpsb
mov
sub
cmpsb
ret
mov
sub
cmpsb
scas
loope
inc
and
adc
cs
inc
mov
inc
gs
aam
loopne
xchg
loop
daa
jle
sub
divl
hlt
fistl
shr
xchg
mov
fstpl
push
testl
sub
js
mov
lret
in
dec
movsb
ret
push
loope
or
sub
and
mov
pop
call
cwtl
and
das
adc
push
pop
pop
js
out
pusha
cmc
adc
gs
cld
and
mov
out
pop
loope
xchg
rorw
mov
sbb
pop
in
add
inc
bts
xchg
add
mov
ret
push
cmc
out
mov
repz
push
mov
inc
adcl
hlt
in
dec
push
insb
mull
cmp
adc
push
or
inc
sub
jo
js
popa
and
icebp
and
mov
pop
lods
fbld
xor
lcall
movsb
outsl
cmpsl
mov
out
jp
and
scas
jp
mov
add
inc
lods
into
pop
inc
fmuls
mov
jg
cmc
das
pop
dec
jl
pop
sbb
sti
icebp
icebp
xchg
jg
bnd
shr
dec
popa
add
jmp
lods
roll
push
pop
and
sar
stos
lods
xlat
xchg
xchg
cmp
aas
sbb
addb
cmp
fiadds
shrb
pusha
dec
lods
fiaddl
sbb
pop
adc
popa
jae
push
mov
lods
cmc
dec
mov
cmp
into
lahf
mov
push
mov
test
sbb
add
push
loope
fdivs
fsubrs
mulb
dec
pop
pop
push
jl
dec
xor
push
inc
lcall
mov
cmc
jle
dec
cld
inc
stc
fs
xor
enter
sbb
sarb
inc
outsl
pop
cmp
out
dec
cmp
xchg
in
mov
ss
adc
cmp
xlat
pop
pop
mov
dec
jg
pop
std
mov
xor
inc
mov
out
sahf
je
fwait
push
xor
inc
jle
in
xchg
call
xchg
jl
cld
jbe
dec
pop
ljmp
xor
inc
sbb
push
mov
cli
idivb
sarl
aas
adc
inc
js
addl
movsl
push
ds
pop
inc
inc
xorb
ds
clc
inc
pop
xchg
xor
in
out
mov
test
push
pop
mov
xlat
hlt
push
lret
pop
ja,pn
jl
addr16
das
push
mov
movsb
aaa
mov
jg
int
data16
sti
addr16
jl
lahf
or
sahf
icebp
add
xor
push
mov
je
mov
enter
and
mov
sub
mov
inc
out
aam
lret
lds
cmp
fwait
lret
or
std
cwtl
scas
dec
or
aaa
mov
xchg
fs
mov
rcrb
insl
rorl
pop
leave
mov
mov
jmp
adc
jg
into
js
mov
out
ret
aaa
push
mov
mov
test
inc
aad
stos
mov
jl
lock
pushf
mov
push
add
cmp
push
loop
and
push
outsl
pop
and
fsubrs
dec
jg
add
js
push
ds
dec
dec
jb
pop
jle
sahf
cmp
test
inc
mulb
add
add
rcrl
pusha
jb
rcrl
sub
ds
ficompl
sub
ds
daa
cmp
ficompl
unpckhps
push
repz
cmp
xchg
mov
scas
cs
in
mov
addb
pop
clc
inc
dec
fwait
xlat
mov
stc
inc
fistpll
dec
aas
inc
les
ds
jl
inc
ljmp
jl
mov
das
seta
and
jp
gs
rorb
dec
and
jle
jg
mov
mov
loop
dec
inc
push
xor
xchg
loop
out
ds
inc
pop
adc
mov
pop
adc
into
add
iret
jl
hlt
fdivrs
js
dec
call
xchg
cmpsl
sahf
cmovg
fmull
jb
cmpsl
jge
sbb
call
test
jbe
fs
lods
mov
js
int3
shlb
push
aaa
sbb
mov
adc
pop
daa
sbbl
bound
mov
xchg
mov
push
jge
sbb
lea
xchg
or
inc
enter
pop
xor
test
aas
push
dec
cmpsl
adc
subb
xchg
xchg
or
imul
jl
cmp
push
fwait
lret
ds
cmp
movb
cmp
inc
inc
aas
inc
js
add
test
mov
add
sub
adc
sbb
bound
lea
xchg
out
add
or
mov
mov
nop
idivb
and
hlt
cmp
add
mov
xor
roll
xchg
aas
les
pop
dec
shlb
push
int3
inc
scas
cmp
mov
sub
mov
mov
ficompl
cmp
dec
ret
enter
aas
stc
lret
scas
jne
rorl
sbb
dec
push
nop
dec
mov
xchg
jmp
cmp
iret
lahf
mov
push
es
xchg
addr16
sub
jle
pop
lock
scas
movl
mov
jmp
ljmp
xchg
inc
stc
decl
xchg
xchg
fs
bound
xor
cmp
push
xorl
loop
pop
add
scas
test
or
enter
push
scas
xor
push
push
mov
xchg
inc
mov
out
stos
cs
frstor
imul
shll
stc
xchg
gs
jo
inc
in
pop
cmp
dec
ja
jmp
enter
dec
pushf
cmpsb
lock
xchg
stos
into
mov
mov
rcll
dec
mov
stos
lods
jle
sub
sbb
gs
dec
repnz
sub
add
pusha
inc
xlat
inc
test
inc
mov
fld
cs
inc
cmpsb
or
push
lods
jmp
pop
jp
cmp
repnz
out
mov
lcall
or
cltd
in
push
pop
addr16
clc
stc
pop
add
fidivs
jmp
mov
js
adc
aaa
xchg
inc
push
xor
cmp
popf
inc
mov
sub
aad
add
popf
test
in
pop
inc
cli
rcll
mov
outsb
xchg
lods
sub
lods
mov
ljmp
jbe
lret
add
push
push
mov
ljmp
sbb
xor
sbb
fidivs
adc
in
jmp
testb
sbb
sub
outsb
or
cmp
dec
int3
jo
push
lds
pop
mov
xchg
sahf
ret
arpl
nop
jge
icebp
mov
test
int3
xchg
mov
jne
jmp
jnp
pop
and
and
psubq
xchg
enter
push
xor
sub
popa
mov
sbb
cmp
fwait
popa
cmpsb
mov
xchg
insl
fcmove
pop
mov
aas
js
clc
push
popf
test
repz
inc
sti
adc
pop
push
cli
lret
push
mov
adc
push
jo
mov
fptan
pop
ficoml
les
shlw
cli
enter
push
inc
lret
daa
out
dec
lods
cmpsl
add
popa
pop
popl
xor
add
mov
popa
jle
xor
sbb
mov
mov
mov
shl
cmp
in
loopne
xchg
and
mov
mov
das
push
insb
std
cmp
mov
out
dec
jo
xchg
das
mov
es
sub
aaa
jb
scas
mov
daa
dec
xor
pop
mov
sub
pushf
xchg
pop
jnp
into
inc
jae
repnz
insl
mov
pushl
mov
ss
clc
push
cmpsb
dec
iret
fidivrs
ret
sub
dec
pop
rorl
push
xchg
js
stos
inc
and
inc
out
daa
inc
xor
jnp
pop
push
inc
push
fisttpll
mov
adc
mov
imul
mov
scas
popaw
into
push
jl
cld
sub
bnd
add
xor
adc
dec
mov
push
cmp
xorl
cli
xchg
cli
xor
ds
mov
and
imul
add
mov
in
xor
cmp
clc
jnp
das
dec
fiadds
xor
cmc
mov
mov
test
mov
cmpsb
xor
xchg
das
mov
push
add
inc
cli
xorb
sub
mov
subb
cmpsb
shr
aaa
sub
jp
xor
or
repnz
xor
push
out
fbld
mov
push
mov
in
mov
inc
shr
int3
aas
dec
cmp
aam
sarb
aam
mov
mov
je
sbb
cmp
cmp
fwait
addr16
js
leave
jae
push
adc
sbb
out
sub
int3
add
daa
jl
dec
jecxz
nop
jecxz
cld
std
mov
sbbl
lock
imul
pop
and
enter
out
mov
aaa
popf
xchg
out
mov
test
mov
cmp
stos
push
in
movsb
test
dec
int
jg
dec
sub
mov
pusha
sub
arpl
pop
pop
dec
inc
sahf
in
into
lods
movsl
jg
sbb
or
jle
sbb
mul
jle
str
shrl
daa
mov
sub
fistpll
fiaddl
out
sbb
jp
lea
data16
bound
pop
jle
cmp
add
mov
cmp
jl
and
fldenv
bound
daa
mov
jo
and
pop
push
mov
or
push
sbb
inc
fdivr
sub
and
mov
mov
mull
sbb
push
jno
sbb
sub
lds
push
lahf
mov
lcall
idivl
push
and
inc
mov
test
push
xchg
je
push
stos
in
aaa
aaa
jl
inc
lret
movsb
mov
xor
stos
mov
outsb
jge
add
xchg
add
inc
mov
push
test
pop
pop
js
and
lret
movsb
insb
decb
sub
push
push
test
pop
jle
cltd
mov
lret
xchg
xor
dec
adc
jle
repz
sub
dec
adc
iret
xor
inc
adc
outsl
insb
pop
inc
aas
add
insl
sbb
push
xor
dec
or
cltd
push
xchg
mov
bound
dec
movsl
daa
stos
jle
ret
inc
lret
or
sub
dec
adc
std
clc
sbb
push
cmc
cmp
dec
sub
inc
fimull
das
into
dec
pop
into
je
inc
into
dec
sarl
mov
or
jecxz
mov
sarl
xchg
xchg
inc
out
fmul
fdivrp
dec
and
pop
cmp
push
push
inc
adc
add
xchg
dec
scas
mov
inc
mov
mov
enter
lahf
mov
pop
lahf
icebp
add
xchg
xlat
mov
sub
sbb
mov
pop
inc
stc
inc
das
aaa
gs
fistpll
inc
or
lret
sub
outsl
std
cmp
into
jecxz
push
sub
daa
jo
xchg
mov
add
mov
cmp
popf
adc
push
out
jle
cltd
cmp
pop
iret
jnp
out
or
cmp
inc
cmpsb
xchg
sbbl
repnz
xor
mov
lret
dec
or
test
dec
pop
jle
add
sbb
ss
xchg
filds
jle
xchg
daa
ljmp
sarb
mov
dec
dec
pop
xor
mov
outsb
add
hlt
lds
mov
js
fwait
mov
imul
inc
add
push
fs
mov
jl
dec
inc
xor
out
in
lret
dec
mov
in
sbb
aas
push
jb
in
cmpsl
xchg
fistpll
in
scas
scas
mov
mov
stc
scas
das
xchg
lods
stos
cmp
push
aas
lods
xchg
add
jge
xchg
movsl
js
out
inc
repnz
mov
or
lgdtl
sar
out
in
jo
fbstp
mov
test
pop
push
stos
dec
push
sbb
dec
dec
gs
dec
iret
fxch
push
fs
jg
jbe
jg
dec
jmp
hlt
xchg
out
stos
cmpsb
or
movsl
mov
repz
addb
or
sub
inc
ljmp
scas
pop
dec
jle
jb
fnstsw
xchg
ret
loopne
mov
clc
loope
daa
fwait
lods
lods
push
cmp
sbb
into
jnp
inc
jnp
jb
mov
cmp
cmp
cmc
lahf
xchg
adc
mov
insb
outsb
shrb
btr
cli
out
adc
pop
or
rcrl
jb
notl
out
inc
loop
pop
call
loop
leave
and
push
fcoml
rcl
inc
leave
cmpb
fwait
test
outsl
adc
or
dec
mov
repnz
xlat
fbld
iret
pop
inc
cli
add
outsl
mulb
fwait
mov
dec
aas
movsl
add
mov
mov
or
das
or
mov
inc
cmp
rolb
ss
cld
inc
cmpsl
aaa
lahf
inc
leave
xchg
cmc
push
loopne
icebp
out
mov
mulb
dec
xor
push
mov
add
mov
sbb
popf
or
pop
addb
jmp
das
push
sub
and
sub
lret
or
pop
xchg
jmp
sbb
dec
inc
add
or
sti
ja
sub
sbb
and
test
mov
iret
jecxz
pop
mov
or
mov
jnp
push
test
dec
rorb
mov
xchg
jle
addr16
push
mov
dec
ficoml
dec
arpl
push
ss
in
das
mov
scas
xchg
stos
inc
or
aaa
dec
dec
movl
xor
loop
mov
dec
adc
movl
adc
fstps
fildll
jle
lock
push
sub
xlat
jle
sbb
daa
es
xlat
or
mov
enter
fwait
push
rcr
add
andb
leave
dec
nop
fnsave
adc
ss
pop
hlt
mov
jns
sub
roll
mov
fadds
mov
mov
cmp
ds
adc
test
mov
cmp
jmp
adc
sub
iret
push
iret
mov
scas
iret
cmp
aam
lea
lret
fldcw
cmp
std
andl
imul
test
and
mov
dec
lret
sbbl
scas
ja
cmpsl
xor
push
rol
in
xchg
inc
cmp
sti
xlat
in
out
xchg
stc
repz
or
ret
loopne
out
stos
shr
lret
mov
icebp
or
mov
pop
cmp
outsl
out
mov
shlb
aaa
cmp
outsl
jg
sub
ret
lds
mov
xchg
std
cmp
xchg
ror
sbb
dec
loop
sub
jmp
fwait
jbe
test
push
int
mov
mov
cltd
lods
enter
fldcw
inc
jnp
jg
or
dec
inc
cmp
xor
fistpll
fdivrl
iret
mov
out
adc
push
loopne
or
jg
int3
xchg
jl
ss
ret
mov
jl
and
sub
push
mov
mov
setge
xor
inc
xchg
and
pop
adc
adc
out
mov
xchg
js
and
xchg
stos
inc
push
cmp
out
shlb
int3
int
lret
cli
cmp
pop
mov
push
cmp
rorb
lahf
mov
inc
xchg
jae
ffreep
testb
xor
jmp
enter
dec
mov
jno
aas
mov
fstl
push
sbb
iret
or
outsb
in
shr
jl
fnstcw
mov
mov
dec
pop
fstps
arpl
jg
dec
and
fxch
in
or
or
sub
jg
ljmp
mov
push
cmp
imull
xor
jnp
lahf
cmpsl
sbb
js
cmp
ret
xorl
jbe,pn
outsb
jg
cmp
inc
testl
cmp
or
popa
inc
cmp
cld
gs
es
insb
ret
aas
push
sbb
cmp
mov
cmp
cmp
inc
push
mov
fmulp
dec
out
xchg
or
les
pop
dec
mov
fwait
xor
aas
out
xchg
mov
dec
cmp
cmc
fs
in
jle
mov
leave
sahf
arpl
scas
or
sub
outsb
out
mov
das
mov
shll
ljmp
mov
push
jb
jge
mov
xchg
push
ret
xor
ljmp
and
mov
jle
nop
int
lods
cmp
leave
mov
aas
mov
lods
testb
jb
fstpl
xor
outsb
add
sbb
add
xchg
out
sti
das
mov
xchg
imul
enter
mov
cltd
push
lods
lret
sub
cmp
fists
add
dec
in
or
in
push
in
sub
fistl
and
fiadds
lahf
pop
mov
outsb
mov
test
push
jbe
ljmp
pop
pop
repnz
adc
aaa
mov
dec
lods
sbb
jno
sbb
aaa
add
mov
ret
pop
iret
fldcw
sub
push
movsb
ds
stc
sub
inc
or
or
sarb
cmp
dec
and
test
lret
decl
mov
inc
sbb
mov
xor
dec
fldcw
xchg
mov
push
lahf
mov
add
shl
pop
push
icebp
dec
cmp
xor
push
and
mov
dec
add
mov
inc
cmp
or
or
es
cs
mov
or
daa
push
mov
push
pop
mov
rol
arpl
movsl
xchg
pop
aad
cmp
pop
ret
fildll
setge
jbe
movsl
enterw
mov
daa
add
scas
push
das
sahf
jge
shlb
pop
xchg
inc
sub
addr16
in
add
jnp
xor
test
out
cmp
dec
insb
popa
lret
and
cmp
ja
sub
pop
pop
inc
xchg
clc
loopne
mov
aaa
into
push
mulb
add
or
fists
scas
dec
pop
shl
sub
cmp
out
mov
iret
cltd
ljmp
inc
push
pusha
jbe
lahf
fcomps
xchg
pop
gs
pop
arpl
cmp
dec
int
stc
aam
icebp
dec
gs
jo
xor
stos
pop
icebp
iret
addr16
mov
xchg
and
imul
dec
js
fimuls
mov
movsb
inc
stos
dec
in
or
cmpsb
mov
push
in
stos
mov
int3
jnp
cmp
cmp
fidivrs
jmp
xor
jbe
aas
sbbl
jle
sbb
inc
rol
mov
xor
aaa
fcomi
cmc
mov
xchg
inc
out
lret
pop
scas
adc
cmp
xchg
mov
sub
jnp
cmp
lcall
jo
mov
pop
jle
jae
cmpsl
xor
ds
jno
xor
shll
push
mov
and
incb
addl
outsb
xlat
jg
clc
mov
sti
cmp
inc
mov
movsl
hlt
and
sub
dec
cmp
mov
testb
cmp
mov
jge
test
in
pop
enter
aaa
inc
cmpsb
mov
in
inc
pop
xlat
cmove
mov
jno
testb
or
xor
xor
addr16
pop
mov
jns
ja
jbe
cmp
cmp
das
ja
jle
adc
in
inc
into
adc
adc
sbb
xchg
nop
insb
and
inc
lret
jo
imul
push
sbb
sub
jecxz
aaa
cmp
jo
sub
pushf
add
fidivrs
imull
mov
push
dec
insl
sub
jg
subl
cmp
pushf
cld
pop
pop
mov
outsl
fnstenv
out
lret
sub
inc
lcall
pop
js
fidivrs
inc
or
mov
insb
outsb
jge
rorb
dec
push
mov
dec
xchg
das
orl
fld
push
inc
cmp
gs
jmp
pop
aas
or
mov
jp
jmp
fst
es
ret
inc
sahf
sub
xor
aad
psllq
jl
cmpl
dec
push
dec
sub
mov
jle
inc
dec
sarb
sti
xchg
dec
jnp
cmp
scas
push
mov
jb
sub
xlat
inc
filds
pop
iret
je
jecxz
cmp
push
leave
push
mov
push
push
jp
inc
cmp
mov
iret
cmp
outsl
xchg
fstl
gs
mov
aaa
out
aam
xor
scas
int
iret
mov
push
nop
fwait
mov
fwait
pop
cs
test
aad
cmpsb
dec
mov
adc
lods
dec
lret
cwtl
in
iret
mov
lret
imulb
sub
push
loope
lds
fisttpll
sub
add
jecxz
mov
out
pushl
jg
outsl
insb
xchg
mov
hlt
mov
xchg
xchg
xor
add
push
mov
sub
jmp
idivl
incl
inc
movups
push
fildl
daa
out
jl
aaa
fnstsw
sbb
mov
data16
das
xchg
inc
inc
push
test
addr16
adcb
mov
sbb
inc
enter
lahf
pop
dec
push
jle
loop
pop
xor
add
jbe
or
and
cmpsb
shrb
jl
idivb
fsubl
pop
inc
lret
dec
outsl
inc
data16
sti
es
idiv
lret
js
add
outsl
adc
movl
push
adc
cmp
or
aad
and
inc
pop
cmp
mov
add
ficoms
sbb
add
movsl
xor
divl
sub
mov
xor
pop
xor
cmp
xor
dec
pop
push
inc
leave
mov
cmpsb
dec
mov
pop
jle
rcll
pop
iret
cmp
pop
dec
push
cmp
inc
pusha
pop
dec
ret
xchg
js
inc
dec
jle
sub
jg
pusha
jg
push
outsl
xor
dec
cmp
sub
movd
sbb
insl
dec
and
dec
mov
cli
dec
bound
mov
mov
es
mov
jmp
int
pop
or
das
push
ljmp
imull
into
pop
xor
cmc
mov
addr16
pop
sbb
dec
enter
cltd
mov
scas
xor
stc
add
jae
fnstcw
inc
or
mov
das
add
mov
cmc
mov
sahf
or
and
insb
cli
jb
and
lea
mov
cli
dec
xor
jns
stc
lea
xor
push
and
and
int3
int3
movsl
mov
mov
ret
js
mov
mov
xor
aas
stos
in
in
pop
xor
fcoms
sub
jp
sbb
pop
nop
dec
dec
mov
mov
scas
sub
fisubs
das
cmp
fiadds
cmc
fsubs
push
lods
jg
aas
test
push
mov
icebp
dec
cmovg
js
xor
pop
movl
mov
popa
sti
aad
nop
test
mov
mov
jmp
je
bound
cmc
in
test
adc
xchg
dec
cmp
int
dec
sub
cmp
std
lahf
xor
addr16
aad
push
xor
jl
lods
and
aaa
movsl
jbe
ljmp
jle
ffreep
ret
adc
incl
push
jecxz
incl
jae
mov
xchg
xchg
nop
shll
inc
jnp
xor
out
dec
rclb
cmp
mov
out
jg
cmp
dec
mov
jno
fisubs
sub
lods
add
shrl
mov
add
fstl
jg
cwtl
pop
pop
adc
jnp
lods
mov
mov
gs
stos
fs
inc
add
jns
and
test
shlb
xor
mov
loopne
mov
dec
sub
push
add
sub
inc
outsl
cmpsb
enter
lds
inc
vmptrld
scas
xor
mov
adc
outsl
lds
stos
jp
sbb
push
mov
cmpsl
push
add
pop
mov
or
mov
aas
xchg
mov
inc
lahf
out
mov
das
inc
sahf
ljmp
push
cmc
test
mov
outsl
rclb
sbb
adc
dec
loope
out
rorl
mov
ljmp
test
inc
sbb
dec
mov
jle
or
fwait
decl
mov
ds
lahf
pop
icebp
jmp
inc
testl
jle
xor
dec
xor
or
cmpsb
iret
add
bound
inc
add
xor
dec
std
mov
mov
stc
cmpsb
movsb
jmp
dec
xchg
pop
jp
xchg
mov
jbe
aas
lahf
pushf
mov
into
or
mov
xor
dec
inc
dec
cmp
push
pop
push
xchg
popf
fcomps
xchg
xchg
sbb
xor
sbb
scas
addr16
mov
xchg
add
iret
mov
sbb
sbb
cwtl
fmull
xchg
js
jnp
ret
mov
push
movsl
mov
fldcw
push
cmp
xlat
push
jbe
pop
inc
pop
jle
sub
lahf
jge
adc
sub
xor
out
test
mov
daa
call
cmp
rcl
ret
dec
pop
hlt
mov
in
int
mov
sub
xor
xlat
fildl
mov
push
dec
stos
jle
cs
popa
movb
in
push
insl
scas
inc
fisubrl
push
cmp
xchg
jl
repz
gs
jle
insl
ror
cmp
fdivp
lds
add
dec
ret
sub
mov
dec
dec
repnz
andb
cmc
cmp
or
enter
jmp
dec
pop
dec
and
es
int
popf
psubsw
pop
sbb
cmp
orl
jnp
mov
pop
xlat
xchg
out
mov
out
sbb
dec
ret
jns
shl
std
data16
das
inc
lcall
enter
daa
pusha
lcall
xor
scas
sbb
push
push
aam
push
test
cwtl
pop
jecxz
pop
jb
inc
popa
inc
fwait
gs
jg
ds
pop
xor
dec
inc
pop
jge
dec
stos
inc
gs
or
mov
adc
idiv
scas
jle
outsl
cltd
faddl
cmp
lds
lods
jnp
cmpsl
add
mov
sbb
add
push
adc
in
pop
cmp
push
loope
xor
xchg
std
out
mov
fcmovne
jl
inc
aas
insb
test
pushf
inc
into
push
xchg
das
jmp
dec
cmp
xor
sub
xor
scas
sub
sbbl
inc
clc
sub
stos
pop
or
mov
lock
pop
sbb
dec
lods
jmp
cmp
leave
inc
jns
sub
sbb
daa
jmp
push
mov
ret
dec
dec
cmc
outsb
stc
xchg
jmp
and
inc
mov
xor
push
xor
pusha
data16
jl
lods
push
mov
xchg
lea
dec
pusha
scas
popf
xor
add
pop
es
dec
pop
js
dec
xor
mov
mov
mov
mov
dec
ljmp
daa
jecxz
cli
leave
inc
mov
xchg
repnz
in
push
add
dec
push
mov
bndldx
inc
ja
jge
fiadds
stc
xchg
push
inc
jecxz
fwait
daa
data16
cmp
iret
filds
lds
jmp
std
stc
push
jle
fsubrl
push
loope
xlat
aaa
inc
pop
sti
dec
sahf
xchg
gs
mov
cmpsb
ds
sub
add
or
repnz
lock
addr16
jle
jns
in
outsl
mov
out
pop
mov
cmp
cmp
jmp
aas
push
pop
arpl
negl
jbe
cmp
mov
pop
fsubrl
sbb
cmp
pop
dec
les
and
jns
rorl
in
pop
js
push
adc
fisttpl
mov
fistl
out
aaa
inc
jp
cmp
mov
or
icebp
das
ss
sub
adc
mov
lcall
dec
shr
pop
aad
dec
ja
adcl
and
popa
dec
das
dec
pop
inc
cmp
pop
and
test
repnz
and
cmpsl
xchg
aad
pop
es
push
rolb
ja
mov
cmp
js
mov
mov
clc
cmp
add
jle
lds
sub
loope
icebp
push
inc
add
adc
push
mov
sub
inc
cwtl
cmp
cmp
jmp
jle
lret
pop
mov
mov
dec
push
outsb
lahf
adc
es
mov
sub
addr16
fstps
mov
or
jbe
std
cmp
jmp
insl
lods
and
jnp
sarl
icebp
iret
and
nop
sub
dec
xchg
jg
and
sub
push
mov
lods
leave
mov
mov
mov
jecxz
stos
js
sbb
xchg
jecxz
push
mov
out
in
adc
xor
xor
dec
add
loope
mov
pop
outsl
std
push
cs
add
scas
daa
lods
dec
stc
push
and
loopne,pt
or
dec
push
stos
sub
addr16
add
mov
push
lds
aaa
dec
lods
xchg
sbb
add
adc
and
test
mov
and
into
idivb
sarl
mov
sbb
aaa
push
pop
aam
xlat
das
movl
and
shll
jle
add
inc
adc
xor
push
scas
push
xor
mov
xor
dec
stos
lret
xor
fbstp
and
dec
mov
out
jecxz
xchg
lret
mov
int
cmova
and
or
pop
lahf
dec
cs
arpl
pop
decl
dec
xchg
add
cmp
in
rcrb
push
inc
xchg
dec
dec
xchg
addr16
inc
daa
pop
stos
into
push
sub
scas
cmpsb
xor
mov
pop
xor
dec
and
xchg
rol
jne
aad
ret
rcrl
cmp
out
icebp
das
inc
and
xchg
cmp
jmp
mov
jnp
jns
mov
mov
pop
sahf
js
pop
jnp
jle
push
xlat
sub
lds
das
xchg
test
inc
cmp
pop
add
pop
push
pop
aaa
popa
inc
sub
cmovl
add
in
ret
jle
and
lods
scas
out
outsb
int
cltd
mov
sbb
fdivrl
test
dec
pop
out
lds
jecxz
add
pop
pushl
and
lea
adc
sbb
or
ss
mov
jle
repnz
add
daa
scas
inc
push
and
mov
dec
out
out
pop
push
iret
sub
shrl
sub
aas
out
push
loope
or
iret
fidivrl
jbe
ret
mov
outsl
mov
mov
or
daa
arpl
outsl
pop
jle
sbb
sub
jbe
cltd
pop
or
out
decl
adc
mov
jl
iret
mov
imull
mov
es
das
xchg
or
sub
xchg
pop
lahf
sub
sub
les
dec
ljmp
cmp
sbb
sub
std
mov
cmp
mov
xchg
loop
lods
lret
xlat
popa
and
outsl
shl
lcall
xor
jno
ja
dec
add
daa
mov
scas
inc
lret
in
xchg
push
pop
xchg
scas
mov
das
jl
pop
iret
hlt
mov
sub
and
es
aaa
jle
dec
loopne
popf
cmp
sbb
enter
xor
pusha
in
jo
dec
pop
dec
iret
pop
movsl
pop
sub
inc
mov
push
mov
lea
cmpsl
mov
int3
jecxz
pusha
cwtl
leave
cmp
pop
mov
lahf
repz
aas
stc
pushf
outsl
jnp
lret
add
inc
outsl
inc
mov
scas
pop
jae
aas
arpl
addr16
jg
pop
xorb
jg
scas
pop
subl
jb
loop
push
ficompl
push
mov
fdivrs
cs
sub
mov
mov
or
pop
xor
imul
push
pop
out
adc
jo
jle
cmp
sbb
mov
shll
sti
test
xchg
in
adc
dec
inc
pop
or
movsl
add
jle
inc
int3
call
add
aaa
push
pop
mov
out
int3
pop
or
xor
icebp
lods
jmp
mov
aam
arpl
mov
notl
test
mov
push
lahf
aas
sub
sub
test
mov
gs
push
mov
cmp
sarl
gs
cld
test
lock
dec
outsb
push
xor
shl
stc
inc
mov
jae
jecxz
adc
lahf
dec
mov
enter
or
cmp
pop
aaa
clc
fcoml
sbb
inc
push
nop
xor
cmp
push
add
rorb
cltd
xchg
xchg
rorl
pop
insl
pop
aas
stc
xchg
insl
push
cmc
inc
mov
pop
push
mov
push
aaa
push
pop
outsl
aad
add
loopne
divb
iret
lahf
and
inc
outsl
lock
inc
pop
cs
mov
scas
cmp
dec
push
pop
outsl
jecxz
inc
add
leave
ds
xchg
test
sub
push
sub
popl
aaa
into
data16
cmpsb
inc
mov
push
inc
scas
ds
jnp
das
pop
cmpsb
mov
sahf
sub
pop
test
jp
mov
fsincos
call
das
adc
fstpl
sub
or
test
cwtl
fstps
xchg
dec
addr16
jno
jle
adc
pop
sub
inc
outsl
divl
sub
xlat
sbb
sub
sbb
xor
pop
cld
insb
lret
xor
aad
add
bound
scas
movsl
jl
aas
addr16
test
call
xchg
das
ret
leave
cmp
mov
adc
in
aam
subl
in
xor
inc
pop
push
lret
and
test
and
fstl
stos
es
pop
push
inc
sub
jmp
sub
mov
into
mov
orb
add
mov
cmp
add
sub
push
movsl
mov
jae
lahf
pop
sub
icebp
xchg
or
icebp
out
inc
fnstenv
sahf
insb
cmp
jp
jmp
scas
scas
add
loopne
jle
adc
mov
mov
and
adc
pop
or
cmp
adc
fucomip
into
sahf
fldenv
adc
mov
aam
jmp
or
ds
xchg
test
dec
sub
cmp
pand
add
jp
lahf
fistpll
xchg
shlb
fucomp
daa
mov
int
pop
cmp
fiadds
adc
mov
push
shrb
or
sbb
ss
sbb
ucomiss
push
aaa
pop
jmp
cltd
mov
ds
mov
cs
fcoms
andl
lds
xchg
lret
lcall
xchg
mov
jge
ret
js
jecxz
das
out
inc
insl
shl
scas
std
int
jle
cmp
sub
pop
bound
cmpb
dec
out
test
mov
dec
jmp
test
jo
sarl
lds
dec
mov
push
iret
loopne
adc
xor
cmpl
inc
ljmp
jge
aam
jecxz
xchg
lcall
mov
inc
data16
sbb
roll
lret
pusha
das
pop
scas
daa
mov
les
dec
and
shlb
cmp
cmp
jnp
pop
mov
scas
cmpsl
icebp
js
lret
push
lret
and
scas
push
negl
mov
or
shrl
or
outsl
push
mov
pushl
aas
push
xchg
sub
shll
xchg
gs
push
js
pop
imul
addr16
cmpl
dec
lcall
and
cmp
call
mov
cmp
stos
inc
das
mov
sub
ja
pop
mov
push
repz
dec
cwtl
xor
add
fwait
dec
lea
cmp
mov
pop
push
mov
je
xorb
and
push
inc
dec
dec
int3
adc
bound
add
lret
jecxz
cmpsb
hlt
stos
arpl
add
lock
iretw
push
pop
fistps
mov
outsb
scas
das
cmp
iret
pusha
mov
jle
jmp
fldenv
popf
cli
fwait
jecxz
movsl
push
insb
aas
movsb
out
loope
ret
fldt
push
mov
aas
pop
and
jle
or
push
aas
daa
stos
mov
push
push
mov
cs
pop
pop
fisubs
addr16
outsl
aam
jmp
out
into
mov
aam
sbb
jbe
inc
jg
aas
ss
dec
add
dec
mov
incl
sbb
rolb
inc
iret
out
fidivrs
daa
mov
out
push
pop
xor
jl
test
sub
push
cs
xchg
cs
cmp
inc
mov
cmp
cmp
aas
dec
pop
out
loop
imul
push
xchg
mov
push
cmp
push
fstpt
push
or
lret
xor
sbb
idivb
roll
sbb
movsl
push
cmp
aas
sub
mov
stos
aas
inc
or
pop
sbbl
push
sti
jbe
mov
scas
mov
in
jns
js
sub
stos
lret
xor
fucomip
push
and
jbe
or
sub
movsl
lods
cmpsl
add
cwtl
in
in
add
or
jnp
test
loopne
clc
aam
inc
je
cmpsb
lods
or
movsl
mov
not
sub
dec
std
mov
sub
and
or
dec
lahf
imul
decl
mov
test
gs
push
inc
xor
insb
push
loopne
ret
rcrl
push
mov
sub
push
fsts
in
aas
das
mov
test
pop
jmp
imulb
daa
rcrb
mov
inc
jl
dec
push
daa
gs
movd
mov
xor
lea
gs
test
enter
das
jle
jl
sbb
cmpsb
cld
pop
push
push
jne
push
add
push
les
imul
stc
jo
mov
iret
insb
rcrl
aaa
and
xchg
jmp
imul
das
inc
push
adc
lea
aaa
jle
and
fcompl
dec
push
fsubrl
adc
jg
jno
lcall
fs
inc
xor
cmp
cwtl
sbb
fisttps
or
xchg
pop
pushf
and
cmp
out
movsl
jle
fdivrs
cmp
and
inc
out
shll
push
sbb
notl
cmp
adc
es
loop
shl
jle
mov
jl
insb
shll
dec
repnz
ret
jge
cmp
sbb
imul
int
loope
sub
mov
push
mov
dec
cs
adc
push
rorb
test
and
mov
sarl
daa
sbb
andb
jae
push
arpl
pop
rcll
jecxz
inc
adc
idiv
outsl
and
insl
pop
shrl
push
mov
add
pop
dec
adc
mov
sub
lods
ds
sub
pop
inc
scas
dec
mov
shlb
cld
mov
inc
push
sub
or
jge
and
imul
int3
mov
mov
dec
sbb
aas
pop
pop
sub
ds
pop
xchg
sarl
das
fcomp
sbb
add
lds
cmp
insl
lods
add
stc
cmp
jne
mov
jge
and
xchg
adc
push
das
btr
pop
mov
jmp
mov
test
cmp
cmpb
jg
jns
and
das
scas
adc
jg
sahf
loope
jbe
cmc
jmp
lea
cltd
cmp
push
xor
shrb
lea
cltd
out
sbb
ss
sub
and
jmp
push
int
dec
lahf
pop
xchg
stos
mov
xchg
sub
xlat
dec
addr16
dec
ret
xor
iret
out
fnstenv
and
jmp
mov
add
clc
and
cld
int
sub
inc
pop
jmp
inc
add
pop
cli
xor
cmpsb
stc
mov
add
and
and
cmp
inc
jle
cld
sbb
push
imul
xchg
mov
stos
aad
cmp
mov
push
mov
cmp
inc
das
push
mov
sub
fsubr
or
add
adc
push
mov
dec
iret
fstl
dec
jmp
dec
lods
mov
das
jecxz
popf
pop
mov
pop
jb
add
outsl
in
push
loopne
rcrb
dec
gs
imul
inc
test
das
or
std
adc
mov
lods
cmp
mov
push
cld
call
aaa
dec
int3
inc
fnsave
push
idivl
and
int
cmp
popf
xchg
bound
insb
jle
dec
int
push
cmc
cs
mov
fiaddl
xchg
sbb
cs
mov
jp
and
or
xchg
stc
int
icebp
popf
dec
ja
pop
ret
scas
sub
adcl
cmp
dec
jo
pop
cmp
das
mov
jmp
mov
movq
test
dec
subl
inc
pop
pop
xor
loop
out
lods
push
xor
jle
push
inc
stc
fnstcw
daa
dec
ror
cmpl
loop
aas
or
xchg
mov
dec
fbld
xchg
mov
and
sub
jnp
lcall
lahf
mov
push
cmp
ret
pop
sbb
call
mov
std
xchg
mov
xor
cld
gs
gs
sub
lret
cmpsb
cmp
pusha
fdivrl
push
jle
pop
out
sbb
jne
add
pop
xlat
jg
sbb
scas
ljmp
add
sub
aas
fwait
jle
xor
push
inc
js
jle
sub
cmp
mov
cmp
mov
inc
lds
xor
fnsave
jp
aaa
mov
fdivrl
ret
adc
xlat
aaa
std
stos
dec
sub
xchg
xchg
enter
pop
mov
jmp
xor
push
cmp
mov
jl
or
enter
repz
ljmp
daa
cmc
mov
stos
xchg
xchg
shlb
mov
jge
stc
dec
sub
fdivrs
das
dec
loope
cmp
push
inc
test
orl
adc
jnp
jo
mov
lds
jo
push
xchg
xchg
jbe
inc
dec
cmpb
das
cmp
push
icebp
xor
cld
mov
mov
ljmp
shl
xlat
inc
pop
dec
mov
fisubrl
adc
mov
sub
or
test
aam
int
cmp
lods
int3
mov
cs
xchg
inc
dec
mov
jb
jg
push
or
loop
lods
xchg
das
cmc
jb
dec
shlb
cmp
int3
in
fidivrs
mov
inc
dec
jg
out
add
or
dec
xor
decl
and
cltd
loopne,pn
sti
mov
daa
pusha
scas
or
ja
mov
cmp
mov
inc
sahf
sub
pop
cmp
dec
mov
stos
sub
and
mov
pop
shlb
add
push
loope
in
lret
or
icebp
inc
push
sub
add
and
jle
in
rcrb
push
mov
sbb
fs
sbb
cmp
adc
scas
mov
in
inc
pop
lret
cmpsl
pop
fldt
pop
leave
pop
sub
dec
insl
inc
add
dec
or
jne
sbb
xchg
lods
or
test
ret
jl
fmull
and
jae
inc
dec
sbb
mov
add
sub
xorb
mov
jno
xchg
lock
inc
mov
sbb
ds
movsb
inc
dec
inc
lods
jle
subl
gs
cs
cltd
shll
in
lods
pop
ret
outsl
and
and
push
rorl
xchg
imull
popf
mov
sbb
sbb
dec
xor
aas
out
dec
xchg
jle
insl
cmp
dec
rcl
mov
lods
mov
shll
xchg
je
fscale
pop
leave
fnsave
stc
incb
push
push
or
int
sar
push
js
xor
dec
outsb
pop
pop
in
shrb
iret
xchg
out
bound
mov
xchg
dec
mov
pop
cmpsl
mov
ss
divl
aaa
aam
pushl
cmp
or
pop
adc
add
loopne
fbstp
push
ljmp
out
mov
mov
dec
orb
cwtl
cmp
inc
lret
sub
cmpsb
shrl
jl
jmp
pushf
inc
xchg
das
jle
dec
dec
mov
dec
mov
xchg
test
push
aad
xor
mov
xor
fisubrl
sub
daa
dec
stos
dec
ss
cmp
push
and
inc
push
sub
mov
push
lahf
rorl
inc
stos
cmpsl
test
cmp
sbb
add
js
xorl
test
jge
popa
loop
movl
in
not
repz
in
or
rol
mov
xchg
mov
inc
mov
and
jg
orl
jbe
es
subl
ficoms
jge
cmp
addr16
data16
and
push
sub
push
push
xchg
adc
test
sub
scas
sbb
or
sbb
xchg
popf
xchg
stos
mov
mov
cmp
arpl
jle
mov
adc
adc
popa
jmp
inc
repz
shl
je
add
sub
jae,pn
xor
in
gs
or
lea
dec
add
sub
dec
sbb
inc
pop
shll
add
mov
xchg
das
mov
shr
out
loopne
or
push
daa
lret
incl
add
test
cltd
mov
mov
or
sub
fimuls
mov
ja
dec
aaa
jmp
mov
sub
inc
and
aaa
fnstcw
aam
imul
clc
cmc
inc
mov
ljmp
push
sub
cwtl
lret
sti
mov
ret
aaa
add
inc
inc
js
cwtl
pop
mov
outsl
loopne
popf
es
sahf
loopne
sbb
cli
inc
ffree
mov
push
sbb
mov
push
mov
dec
adc
lahf
pop
enter
add
sarl
aas
dec
jnp
mov
outsb
jle
fnstsw
out
jg
inc
jb
pop
gs
repz
in
xchg
inc
mov
jecxz
jle
loopne
rclb
out
ds
outsl
dec
adc
xlat
or
jg
aas
aas
inc
dec
cmp
dec
iret
jle
inc
sbb
ffreep
int3
mov
or
jae
and
jae
or
sbb
sbb
hlt
add
dec
pop
add
cltd
mov
icebp
dec
push
sbb
fists
mov
mov
jno
or
inc
ljmp
imulb
and
ljmp
xor
jg
pop
mov
iret
push
inc
ficoms
inc
js
outsb
faddp
xchg
mov
hlt
pusha
mov
and
pop
inc
mov
add
cld
nop
lods
mov
push
iret
das
outsl
cltd
aas
mov
pop
xchg
aaa
and
popl
aas
sbb
sub
mov
xchg
push
jg
stos
cmpsl
jae
and
mov
sahf
rorl
clc
mov
iret
mov
test
xchg
xchg
cltd
es
movsl
mov
icebp
add
dec
inc
cs
jle
shlb
ffreep
es
inc
movsl
test
sbb
orl
scas
sub
mov
daa
dec
es
out
or
mov
sahf
mov
inc
lods
popl
cmp
dec
clc
popa
orb
cmp
enter
outsb
cmpsl
lods
bound
mov
inc
jbe
fdivrs
adc
pushf
dec
fidivrl
mov
mov
loope
jmp
mov
aaa
sub
jne
aaa
ret
sahf
pushf
pop
xchg
das
stos
js
push
cmpl
movsb
lahf
jne
into
sti
aas
stos
cmp
pop
inc
jle
mov
inc
arpl
fcompl
jg
and
sbb
rol
lret
mov
lods
xchg
pop
aaa
into
jbe
lods
aas
jns
scas
mov
inc
and
mov
push
mov
or
aaa
and
pop
pop
das
add
flds
pop
inc
inc
mov
inc
data16
mov
lds
lds
mov
es
pusha
enter
std
inc
push
dec
inc
dec
cmp
pop
jmp
jg
int3
bts
add
pop
adc
test
int
dec
cmp
dec
adc
mov
ljmp
fildll
mov
fucom
xchg
xor
inc
je
pop
lds
or
lds
mov
inc
test
inc
iret
cmpsb
sahf
dec
mov
inc
jle
lds
push
sbb
aas
adc
xor
rclb
mov
xchg
adc
mov
icebp
cmp
test
btrl
test
sbb
and
je
add
mov
jbe
lock
mov
dec
sub
adc
popa
loope
push
pop
jecxz
add
sahf
cmp
mov
aaa
and
rcrb
pop
cmc
mov
ljmp
mov
outsl
sahf
int
fildll
or
scas
inc
xchg
lret
dec
int
jnp
call
inc
dec
pop
cmp
fldt
scas
mov
imul
push
outsb
jle
mov
fsubrl
jmp
mov
xor
in
xchg
jmp
scas
inc
pop
dec
cmc
xchg
stos
xor
sbb
in
and
mov
pop
and
and
or
pop
getsec
jle
pushl
out
xchg
aas
xchg
lcall
fmull
lret
pop
setno
in
adc
inc
mov
mov
insb
ljmp
mov
aas
inc
aaa
dec
das
dec
daa
lret
mov
filds
aas
iret
das
movl
inc
test
out
mov
sbb
fildll
pop
mov
xchg
lahf
sub
stos
movsl
sbb
mov
jle
mov
dec
mov
mov
mov
push
mov
pop
je
stos
push
sub
xchg
or
xor
lea
xor
mov
cmp
fwait
js
push
xchg
rclb
xchg
iret
inc
push
jle
popa
dec
fists
cmp
dec
ret
pop
jae
in
mov
js
divb
sub
pushf
das
iret
mov
rcrb
ret
imul
cmp
or
push
mov
popf
fistpll
xor
clc
cmp
sbb
cmp
mov
jle
push
arpl
aaa
fnstcw
and
es
testb
das
push
loopne
pop
mov
cmp
pop
inc
add
xchg
push
out
jle
lret
call
dec
sub
repnz
or
cmp
enter
pop
ret
mov
xchg
mov
arpl
jmp
adc
mov
lahf
mov
arpl
insb
push
pusha
cmp
fwait
mov
loopne
cmpsb
ds
inc
cli
jb
mov
pop
jno
mov
pop
and
adc
mov
shrl
sbb
cmp
jle
cmp
jno
popf
jns
xchg
and
aam
in
subl
shl
xchg
repz
mov
inc
dec
cmp
cltd
ljmp
loop
lcall
aaa
flds
cmp
mov
inc
xor
sub
cmp
into
out
fst
and
out
mov
rcll
and
add
mov
lret
daa
xchg
add
mov
popf
gs
xchg
push
push
mov
sub
into
pop
lods
adc
mov
gs
adc
cs
add
es
xor
adc
mov
imul
out
cmp
mov
subl
sahf
mov
shrl
mov
ljmp
mov
cmp
ret
cmc
ja
sub
out
xchg
and
jns
mov
and
xchg
mov
mov
repz
mov
fnstsw
imul
xchg
xor
jno
sub
and
mull
mov
xchg
and
loop
or
ror
and
pop
or
push
jl
add
and
addr16
ss
and
or
xchg
imul
in
nop
orl
mov
notb
pop
subb
pop
adc
xor
fmulp
jae
push
cmp
clc
mov
outsb
hlt
xchg
or
ds
or
push
in
ja
fidivrl
bound
and
cld
jge
and
cmp
pop
adc
lret
and
pop
sbb
and
in
mov
hlt
push
lret
andl
jbe
mov
sub
mov
mov
xor
or
xchg
filds
jg
and
scas
ret
rcr
mov
and
test
cmovb
lahf
idivl
enter
sahf
push
push
outsl
xor
pop
xchg
inc
cwtl
push
push
addr16
push
mov
mov
addr16
cmp
cltd
cmp
lahf
adc
jnp
ja
ucomiss
ja
insl
jg
xor
cmp
ret
pop
inc
inc
iret
aas
aaa
dec
das
dec
daa
xor
test
in
sbb
lods
lea
jp
cmp
xor
pusha
xor
cwtl
pop
int3
mov
dec
xchg
xlat
sar
outsl
sub
dec
mov
jbe
jmp
stc
dec
xchg
cmp
cmp
jl
daa
add
ret
xor
push
xchg
sti
lret
lds
test
xlat
aaa
jmp
inc
xchg
or
imull
push
inc
xor
mov
mov
pop
and
cmp
or
aaa
pop
push
inc
add
or
push
inc
sbb
ds
inc
xor
es
push
mov
and
mov
cmp
push
pop
add
and
out
ficoms
insl
popf
cmp
insl
jb
sahf
fsts
jecxz
enter
mov
push
aaa
lcall
into
dec
test
mov
jne
add
jp
rorl
mov
les
leave
xchg
out
push
cmc
mov
jmp
lahf
mov
push
jbe
shr
cwtl
or
stos
ret
lods
insb
inc
pushf
mov
xchg
cmp
sbb
mov
sub
cmp
xchg
fnstsw
jns
iret
enter
addr16
cmpsb
arpl
dec
int3
adc
cmpsl
jl
jg
dec
cmp
add
dec
add
aas
addr16
push
push
daa
jp
push
out
inc
fcompl
sub
ud0
mov
gs
rclb
int3
sbb
adc
stos
mov
lret
pop
cmp
push
inc
push
fwait
les
xor
sub
or
cmovno
lret
push
ja
out
pop
in
imul
push
dec
cmc
add
xchg
push
push
dec
sti
test
jge
xor
rorb
pop
cmp
loopne
cs
push
inc
inc
dec
mov
push
xor
and
mov
xor
add
sbb
sub
cmpsb
cmc
cmp
xchg
movsb
add
cmp
sbb
fwait
aas
xlat
xor
fstps
mov
and
inc
mov
add
push
faddl
push
insl
aaa
filds
cmp
pushf
xor
dec
push
mov
lds
xor
dec
fnstsw
push
push
pushf
sub
test
sahf
mov
sub
dec
lds
mov
das
mov
add
imull
mov
xor
sbb
sahf
outsl
xor
pop
mov
jg
outsb
mov
xchg
or
push
sbb
popf
es
cmp
mov
nop
inc
xchg
daa
stos
aas
dec
aam
mov
push
inc
sahf
xchg
inc
fisttps
aaa
out
js
cmp
leave
pop
dec
scas
add
or
mov
fdivrs
fdivp
icebp
pop
jnp
cmp
leave
gs
sub
es
jl
cltd
mov
inc
mov
pop
aaa
xor
sub
leave
dec
cmpsl
out
int3
addb
ret
inc
push
int
popa
cmp
xchg
addr16
sarb
scas
cmpsb
shl
mov
jle
inc
dec
cmp
out
test
stos
leave
movsb
pop
push
and
inc
shrb
int
add
dec
cmp
ljmp
shrl
mov
stos
aaa
addb
rorb
das
in
jecxz
shll
clc
inc
mov
shrb
mov
xchg
pop
inc
mov
add
mov
and
stos
or
jae
daa
add
aad
out
xchg
add
add
in
mov
out
cli
inc
or
cmp
dec
fnstcw
pop
add
dec
jecxz
repz
js
cmp
iret
inc
mov
push
inc
sbb
popf
ds
jmp
fwait
ret
pop
iret
jmp
fcmovne
inc
mov
fisubs
mov
adcb
divl
add
xor
je
lock
push
fistps
and
out
add
cmpsb
in
mov
icebp
xchg
push
push
out
insb
cld
pop
out
mov
mov
jmp
inc
xchg
fistl
adc
pop
iret
add
push
xchg
inc
and
xchg
xchg
mov
sti
pop
jnp
and
daa
outsl
dec
dec
mov
iret
mov
stos
das
fidivrs
inc
sahf
push
sub
jecxz
sub
sub
mov
test
imul
mov
movswl
vmread
mov
xorl
and
adc
sbb
pop
cmpl
push
inc
das
daa
aaa
int
mov
outsl
pop
xchg
fldcw
aas
aaa
das
das
out
pop
push
cmp
iret
add
or
idivl
mov
aaa
xchg
lods
add
add
cmp
packuswb
mov
sbb
cmp
pop
lock
mov
jmp
lcall
pop
paddusw
mov
lret
lea
lret
int3
addb
xor
ljmp
mov
xor
sti
mov
and
xchg
mov
scas
test
fldl
js
adc
cmp
xor
fwait
mov
fldcw
mov
fwait
movsl
jle
shrl
mov
dec
xor
aas
jnp
push
dec
popa
push
jle
mov
dec
lds
stos
pusha
pushf
dec
jns
fildl
pop
popf
pusha
cwtl
mov
mov
lds
jle
test
inc
pop
gs
fsts
push
sbb
cmc
dec
push
xchg
fwait
jl
ds
push
add
dec
stos
jne
gs
xor
mov
lods
jle
mov
sti
mov
cmp
mov
cmp
inc
xor
dec
pop
int3
pop
jle
js
fsubl
inc
ret
das
lret
mov
into
adc
push
aad
arpl
cwtl
add
sub
fwait
inc
dec
inc
adc
xor
gs
jle
aaa
push
pop
lcall
push
ret
mov
pop
pop
push
push
cmp
cmp
lea
pop
xchg
outsl
mov
cmp
dec
test
imul
xor
cmp
inc
sbb
sub
jle,pn
xor
xchg
sub
mov
lret
out
dec
mov
xchg
inc
addr16
out
cld
lret
jg
mov
mov
jle
stos
mov
ljmp
mov
test
nop
cmp
das
insl
mov
inc
jle
dec
jp
loop
jl
sahf
sbb
addr16
fistpll
jecxz
ret
mov
repz
cmc
outsl
mov
stos
sub
filds
mov
dec
mov
and
negl
aaa
dec
mov
inc
jecxz
push
xchg
sub
bound
filds
or
das
imul
mov
les
aaa
xchg
dec
inc
lahf
push
cmc
dec
insl
xor
push
int3
pop
adcb
push
hlt
loopne
add
push
movups
outsb
mov
add
mov
xor
in
dec
inc
outsb
dec
xchg
pop
enter
inc
push
push
or
movaps
and
dec
mov
popa
jns
inc
stos
out
xchg
push
gs
inc
and
xchg
call
aas
dec
or
ret
mov
or
sti
das
xor
mov
cli
sahf
xchg
cld
mov
sbb
or
das
mov
stc
jnp
aad
xor
xchg
ds
cli
dec
pop
jmp
push
pop
dec
mov
hlt
rcrl
aaa
imul
call
pop
fcomip
gs
cld
lds
aad
in
sub
jnp
inc
outsb
lahf
add
push
pop
sbb
push
pop
fsubp
sub
jg
repnz
mov
fisubs
sbb
js
mov
dec
test
mov
gs
lcall
repnz
cmp
incb
inc
mov
jl
outsl
inc
idivb
xchg
repz
pop
mov
xor
mov
push
mov
in
and
cmp
or
pop
or
into
mov
sahf
and
add
aas
sbb
loop
fstpl
outsb
mov
mov
lahf
xor
fisttps
mov
mov
pop
push
inc
jmp
push
xchg
mov
or
aas
mov
arpl
addr16
shrb
push
sbb
js
sbb
lret
rcll
fcoml
xorl
mov
pop
inc
shl
shll
pop
pushf
sub
dec
mov
mov
lcall
addr16
jmp
xor
xchg
and
jl
jg
in
ficomps
ds
stos
sbb
pop
loopew
outsl
cmp
mov
ja
xchg
xchg
rcrl
xor
push
jg
mov
cmp
sahf
jl
sub
sub
inc
and
dec
aas
cmp
test
das
sub
sub
cmp
loopne,pn
xchg
inc
mov
jnp
xor
mov
sub
scas
inc
lds
or
cmp
inc
adc
loopne
push
ror
out
inc
loop
push
dec
jle
sbb
sbb
ja
call
push
pop
cmp
mov
sub
jno
mov
fmul
sbb
dec
rorl
les
call
cmp
dec
clc
andl
std
aaa
sub
pop
add
adc
scas
xor
inc
push
mov
hlt
mov
jle
popf
ror
aas
sub
stc
push
and
test
lret
and
jl
lds
dec
mov
aaa
loop,pt
sub
adc
inc
xor
adc
sahf
ds
dec
and
mov
and
dec
lds
aas
movsl
mov
gs
shlb
mov
dec
testb
xor
inc
cmp
leave
out
inc
dec
sub
vcvtsd2si
jl
or
or
pusha
lahf
push
xchg
leave
dec
cmp
stc
pushf
jb
inc
xchg
xchg
mov
or
push
mov
dec
adc
cs
jg
test
out
jle
mov
adc
or
das
jle
and
jl
lods
cmp
xchg
fnsave
mov
negb
lds
and
or
inc
shlb
daa
cmp
dec
push
jmp
adc
ss
sbb
pop
xor
shll
jl
ja
test
fbld
cmp
dec
jp
nop
jne
cmp
imul
mov
xchg
int
jbe
push
mov
pop
cwtl
mov
pop
jle
dec
and
push
adc
jle
and
inc
jne
push
mov
das
jle
loopne
into
inc
jle
daa
inc
hlt
data16
and
ja
leave
stos
push
jnp
shll
test
test
aas
subb
mov
fs
cmc
and
or
xor
mov
dec
mov
stc
push
lcall
add
jmp
xchg
hlt
and
loopne
cmp
or
sbb
or
sub
ja
pop
dec
jmp
rol
mov
inc
jle
xor
or
inc
mov
dec
lret
int3
fwait
out
repz
ret
mov
jbe
add
mov
fldcw
mov
sbb
cmp
push
sub
outsb
insb
aam
lds
outsb
js
cmp
rorl
aaa
iret
scas
out
dec
xchg
mov
mov
fadd
daa
jnp
sbb
rorb
ror
push
insl
pop
sub
sbb
into
inc
jle
push
adc
xlat
adc
fcmove
arpl
ret
and
push
add
ds
aam
xor
inc
icebp
push
loop
fsubs
xchg
stos
mov
mov
pop
add
lods
ja
cs
je
or
xchg
int
push
xchg
testb
mov
ljmp
and
out
fadds
int
inc
mov
or
xor
les
jecxz
dec
jbe
scas
mov
pop
mov
sub
jbe
sub
push
ret
xchg
rcll
and
cmpsb
adc
mov
scas
inc
xchg
call
jno
test
push
xchg
xchg
mov
loope
aas
fstp
push
les
fildll
xor
movsl
fcmovnu
xor
gs
mov
xor
decb
or
push
scas
pop
gs
js
add
loopne
jl
andb
xchg
mov
or
mov
ja
dec
or
das
push
dec
sbb
es
push
jno
les
loope
sub
scas
es
and
mov
mov
xor
iret
add
jbe
shl
scas
xor
mov
inc
mov
das
lods
cmp
lock
jle
fsubl
out
std
jle
xchg
push
mov
and
fnstenv
mov
popf
pop
loopw
mov
dec
inc
sarl
or
shrb
inc
jmp
das
addr16
daa
inc
hlt
mov
mov
jle
sub
insb
ret
cmp
mov
rcll
xchg
stos
sahf
popa
xlat
or
jl
stos
lds
test
pop
bound
xchg
jl
adc
aas
loopne
mov
xlat
xchg
jl
data16
or
and
mov
mov
lods
ds
leave
sub
cld
xor
mov
jle
inc
nop
cmp
outsl
xchg
inc
mov
dec
aas
sub
inc
lea
lds
jnp
jp
lea
lret
lds
sub
xchg
lds
dec
xchg
jns
xorl
xor
sub
jo
lret
jge
xchg
cmp
xchg
fldl
cmp
stos
mov
or
mov
lret
xor
jb
or
fists
imul
mov
mov
or
in
jl
mov
test
lahf
xchg
jb
lds
cltd
mov
jne
das
test
fcoml
jg
insl
mov
in
mov
dec
adc
lret
dec
ja
add
and
cmp
mov
push
mov
inc
mov
lods
xor
pop
pop
and
enter
sbbl
fmul
lret
xor
cmp
stos
sbb
sub
sbb
repnz
push
out
cmp
sub
pop
push
mov
popf
movsl
add
push
or
mov
push
push
mov
addl
adcb
mov
push
cmp
ja
mov
push
js
add
das
shll
shll
and
iret
cmp
mov
add
inc
xor
call
mov
lret
loope
xchg
sbb
scas
aas
shrb
ss
aam
push
and
jl
lret
lahf
out
int3
aas
mov
ret
fincstp
mov
xor
stc
inc
fstl
push
dec
mov
cmp
jle
fstpl
jns
mov
sub
mov
rclb
push
push
mov
fisttps
or
pop
aad
movsl
dec
into
xor
stos
int3
mov
aaa
mov
dec
int3
push
push
rcr
jno
sub
cmp
gs
mov
movsl
sti
ss
pop
mov
push
cmp
inc
lds
pop
arpl
icebp
test
sbb
xchg
dec
sub
and
pop
pop
inc
xor
decb
popf
pop
fimuls
pop
lods
rcpps
das
aas
addr16
fstpt
xor
js
mov
mov
jno
mov
fdivs
cmp
dec
pop
jle
mov
and
xlat
outsl
mov
dec
int3
pushf
mov
inc
dec
icebp
out
xor
cs
sarl
call
sub
xchg
cmp
mov
movsb
pop
push
int
scas
pop
dec
lret
xor
fs
mov
gs
stos
leave
jbe
sub
pop
leave
sbb
scas
sahf
je
add
das
inc
test
repz
in
movsb
dec
push
jge
mov
aas
in
mov
push
int
mov
push
or
and
lods
xchg
mov
dec
in
int
bound
aaa
and
fwait
stc
lea
pop
sbb
xor
lret
sbb
das
xchg
ret
lods
adc
ds
mov
sub
leave
fsts
lret
addr16
add
hlt
dec
addb
fcmovnbe
insl
lock
out
pop
add
ja
inc
arpl
jle
in
ret
xlat
or
mov
dec
xchg
sbb
aaa
cli
push
push
cmp
outsl
cmp
lds
sub
cld
icebp
pop
mov
push
aad
dec
jg
gs
out
jns
iret
out
daa
out
mov
mov
sahf
sub
lret
jns
imul
out
jmp
cmp
cwtl
lret
sub
mov
mov
daa
lods
loope
das
pop
rolb
stos
dec
jns
ljmp
sub
rol
idivl
test
ficomps
mov
vdivps
cli
test
mov
add
jg
daa
rolb
gs
jb
cmpsl
das
jne
iret
daa
push
adc
sub
aam
enter
pop
pop
in
mov
pop
mov
cmp
sub
sbb
out
daa
aam
outsb
and
and
lods
aad
aas
xchg
and
pop
loopne
dec
daa
jno
mov
add
pop
test
roll
dec
test
dec
aaa
addr16
cmp
push
pop
incl
inc
dec
push
aas
shrb
outsl
inc
js
jnp
mov
mov
xor
xchg
test
stos
or
addb
aas
mov
scas
pop
mov
lds
fisttps
mov
inc
jnp
fwait
dec
fdiv
add
cmp
adc
mov
mov
aam
fistl
into
push
hlt
popf
xchg
mov
lds
xlat
subl
lods
lods
mov
les
add
f2xm1
jl
cmp
mov
adc
bound
cmp
lret
ds
sbb
mov
dec
cmp
fldcw
inc
cmpsl
repz
inc
aas
aad
gs
lea
inc
out
inc
out
mov
mov
repnz
push
add
adc
cmp
std
dec
dec
mov
xchg
mov
cmp
mov
daa
leave
cmp
out
sub
cmp
xchg
fistpl
icebp
add
out
inc
jle
push
lahf
lcall
ds
add
leave
jnp
bound
dec
and
ja
jnp
inc
popf
mov
adc
jnp
jbe
or
pop
scas
arpl
in
push
push
pop
adc
sub
dec
mov
and
shll
daa
sbb
ret
int3
idivl
xchg
in
clc
movsb
call
push
add
and
outsl
xchg
es
std
jle
addl
or
sahf
daa
mov
sbb
adc
jmp
push
pop
aas
roll
xor
je
and
int
movsl
aaa
arpl
dec
mov
xor
dec
lcall
lret
clc
sub
aas
pop
xor
lea
iret
js
leave
insb
or
cmp
cmp
lret
sar
cmp
mov
push
sub
jle
int3
mov
in
mov
push
inc
push
jle
les
pop
stc
dec
inc
mov
cmp
lcall
mov
pop
dec
inc
cltd
dec
dec
loopne
aas
andb
inc
inc
scas
dec
inc
and
lods
scas
dec
stc
xor
lahf
or
stc
xor
daa
push
cmpl
addr16
mov
inc
daa
sub
int
jnp
jae
push
xor
mulb
inc
int
mov
jp
mov
test
jne
jmp
loope
sbb
or
xchg
pop
lret
or
or
sub
decl
sub
shufps
dec
addr16
fwait
incl
lidtl
adc
adc
or
loope
adc
out
xchg
popf
and
jmp
movsl
repz
pop
dec
popf
inc
pop
stc
xor
popf
addr16
int3
sub
xor
pushf
js
or
cltd
or
cld
loop
jbe
pushf
sbb
fnstsw
cli
sub
jge
cli
mov
stos
push
das
int3
mov
mov
test
jge
cmpsb
icebp
sub
das
das
test
inc
mov
and
orb
insb
add
xor
sahf
jle
fidivl
jb
movsb
mov
and
sbb
sub
jne
and
aaa
cmp
insb
mov
outsl
out
add
lea
mov
cmp
pop
daa
out
mov
xchg
daa
jp
insl
fisttpll
out
inc
dec
cmp
aam
jp
fisubrl
int3
decb
test
jl
arpl
aaa
loop
dec
lock
mov
sbb
add
lock
and
and
jbe
enter
into
pop
adc
sub
pushf
adc
or
sub
test
dec
lods
insb
fcomi
xchg
ror
mov
inc
ljmp
add
or
or
ds
jp
dec
mov
out
cmp
fimuls
stc
insb
pusha
cmp
push
push
push
cmp
add
arpl
ss
std
sub
cli
adcl
daa
mov
jae
scas
addr16
mov
js
repnz
sbb
cmpsl
push
push
mov
int
repnz
test
and
mov
gs
lret
dec
inc
xor
xchg
xchg
cltd
popa
jge
cmpsl
mov
cmp
sbb
cmp
sbb
cmpsb
lret
lock
push
or
jg
mov
ljmp
cmpl
inc
in
dec
and
add
xchg
sub
fwait
cld
dec
cmp
stos
adc
xor
cmpsb
sbb
cmpl
fs
dec
icebp
cmp
in
add
enter
dec
push
cwtl
pop
jmp
push
repz
fistpll
lea
or
and
mov
aas
xor
and
stos
inc
or
push
into
push
xor
dec
das
dec
push
aaa
or
inc
fidivl
gs
jno
fmulp
jnp
xchg
pusha
pop
mov
xor
fdivrl
fldcw
sahf
cmp
adc
dec
insb
cmp
sahf
add
ror
aaa
inc
mov
cmp
xor
lds
out
and
mov
mov
fnstenv
scas
xor
sbb
arpl
cs
pop
bound
push
jae
daa
fsubs
pop
aas
cmp
dec
int3
jl
dec
mov
jne
dec
cmp
adc
stc
aad
mov
mov
jns
dec
popa
inc
aaa
dec
inc
addr16
mov
jo
jns
xlat
dec
lret
jl
mov
loope
xchg
fildl
mov
int
push
dec
pushf
mov
adc
push
add
int3
xchg
pop
lahf
mov
js
mov
mov
test
movb
out
iret
inc
cmc
pop
mov
jge
cmpsl
icebp
insl
and
mov
mov
dec
shrb
dec
jmp
mov
push
dec
lret
cmp
test
mov
mov
push
cmp
popf
int
mov
les
jp
mov
mov
xor
sbb
lods
jmp
push
pop
loope
movsl
fninit
push
in
movsl
stc
pushf
sarl
sbb
mov
add
push
popa
addps
add
hlt
popf
icebp
aas
dec
mov
inc
cmp
mov
xchg
daa
lods
mov
vhaddpd
mov
ret
jmp
scas
adc
lock
xor
and
mov
push
das
adcl
cmp
xchg
mov
pop
or
and
push
inc
sahf
iret
fwait
jl
mov
and
int3
cmp
mov
and
in
xlat
jl
adc
cs
scas
out
aaa
lea
aas
and
cltd
and
shll
add
outsl
xor
jo
add
int
dec
pop
daa
sub
dec
lock
in
aaa
ljmp
lds
mov
xlat
mov
icebp
stos
pop
insb
leave
and
das
bts
clc
mov
adc
and
pop
jnp
dec
cmp
das
xchg
pop
sub
adc
mov
push
test
xlat
mov
and
cmc
sub
int
addr16
xchg
dec
pop
lret
inc
dec
pop
pop
es
rcrl
fstl
add
mov
xor
xadd
addr16
icebp
pop
inc
rcr
lahf
repz
adc
pushf
arpl
fldenv
cmp
xchg
loop
call
sarl
fimull
and
das
jnp
adc
xchg
cmp
imul
mov
xor
jnp
jle
pop
es
sub
jg
add
test
xchg
mov
scas
imul
bound
js
inc
mov
outsb
std
mov
aad
cmp
gs
fnstcw
cmp
lret
leave
and
cld
scas
pop
and
cmp
lret
or
sarl
push
loopne
mov
xorb
adc
push
outsb
int
int
cmp
ret
push
out
mov
inc
xor
out
outsb
pop
addr16
lds
fiaddl
addr16
jmp
mov
test
xchg
filds
das
test
mov
xor
ret
mov
and
push
daa
sub
daa
or
movsl
js
inc
mov
hlt
adc
inc
movsl
test
les
test
cs
push
mov
jae
in
pop
add
jle
fdivr
mov
cld
fdivrs
cmc
jp
xor
fwait
repnz
push
repnz
dec
fisubrs
mov
xor
adc
jl
ja
addr16
fwait
dec
adc
jge
das
sub
push
mov
test
rcrb
popa
pushf
adc
mov
rorb
and
xchg
ljmp
xchg
sub
js
mov
lods
jp
ljmp
je
out
fbstp
cmp
add
lds
mov
mov
inc
xchg
push
sbb
dec
ss
out
cmp
cmp
jnp
lret
push
aam
loopne
sarl
pop
or
mov
mov
sti
lds
rolb
iret
mov
cli
es
mov
fs
mov
cmc
js
loopne
out
aad
sbb
outsl
fbstp
xor
test
add
or
iret
stos
jle
sahf
das
xchg
lds
loopne
scas
lret
dec
loopne
cwtl
xchg
ljmp
xor
mov
aas
scas
push
popf
sbb
in
mov
imul
jle
inc
mov
paddb
jbe
mov
inc
push
insl
push
out
xorl
cmp
jp
inc
xchg
jle
repnz
rolb
or
fstps
shrl
aam
jmp
sti
jno
xchg
test
push
and
xlat
sahf
es
aaa
fldenv
sub
js
pop
ret
sub
mov
or
aas
aaa
jle
out
xchg
ds
pop
pop
mov
pusha
pushf
sbb
inc
int3
fnsave
fst
push
movsb
xor
data16
and
dec
sbb
inc
inc
jl
sbb
ja
adc
dec
mov
lds
xor
push
jmp
and
mov
movsl
js
push
pop
push
xor
daa
fs
cwtl
push
cmp
or
cmp
lds
push
pop
imul
sti
xchg
mov
jo
mov
inc
cmp
inc
fidivrs
loopne
mov
insl
sub
mov
pop
rol
xchg
lret
iret
lcall
push
int3
fidivrs
add
sub
dec
sbb
loopne
inc
jnp
in
daa
dec
push
and
sub
mov
xchg
hlt
mov
jns
cld
fucomip
push
mov
mov
mov
das
push
fs
std
jmp
sbb
mov
cmp
inc
mov
add
add
or
scas
xlat
or
sub
push
jmp
mov
cmp
sbb
in
cmp
fisubs
ds
pop
mov
jo
push
pop
mov
aad
out
or
or
cmpsb
in
mov
loopne
jns
pop
pop
xchg
mov
xchg
pusha
cmp
lock
dec
sbb
aas
and
ret
arpl
add
dec
xor
cmp
push
iret
adc
scas
lahf
aad
sub
addr16
xchg
mov
jp
sub
mov
xchg
adc
xor
or
xor
or
add
ss
stos
inc
dec
or
repz
jmp
testl
aas
inc
aad
out
cmc
cmp
dec
and
adc
sbb
ss
dec
addr16
mov
mov
sub
cmc
mov
gs
cltd
mov
dec
jle
inc
je
frstor
add
mov
jae
adc
notb
xchg
sysenter
repnz
inc
js
ljmp
push
pop
push
lea
inc
lods
pop
lret
sbb
rclb
ror
jmp
and
outsl
lcall
pop
cmp
fcmove
sub
and
dec
loope
jle
mov
imul
aas
push
sbb
inc
jge
bound
int
cld
cmp
or
push
mov
mov
xchg
outsb
push
add
das
lret
es
xor
aaa
loopne
jmp
fistps
std
and
mov
int
push
lds
mov
xlat
jbe
add
add
rcll
jle
lret
and
cmp
decb
lods
jge
xchg
out
jmp
scas
int3
and
jl
ret
adc
inc
jle
sbb
add
add
nop
aas
popa
pusha
fldcw
jl
je
add
hlt
sub
xchg
adc
sub
sub
stc
mov
mov
subl
fwait
pushf
push
jecxz
and
std
js
hlt
sbb
jmp
mov
jle
addr16
shlb
movsl
aad
or
repnz
inc
cmp
xor
sub
mov
push
jg
mov
jle
insl
xchg
xchg
int
mov
jl
push
fidivrs
cli
outsl
repz
sti
loop
add
pusha
sbb
dec
decb
add
xchg
push
sub
incl
mov
and
add
std
dec
scas
pop
push
adc
in
out
xchg
or
rorb
popa
xchg
cmc
pop
adc
dec
sahf
rolb
sbb
lods
adc
stos
mov
adc
insl
and
cmp
push
bnd
sbb
adc
pop
inc
sub
xlat
clc
test
notl
mov
sbb
incl
sbb
das
js
inc
mov
fs
in
add
lods
pop
sub
out
and
int
jle
imul
mov
daa
inc
ret
xlat
add
daa
jg
jo
sub
cmc
lret
cli
or
jge
into
outsb
gs
gs
mov
adc
jnp
sbb
scas
test
dec
dec
fcmove
lods
and
push
fnstenv
adc
jne
inc
stc
ds
mov
gs
mov
xor
xor
xchg
scas
cmp
ja
jp
sbb
cmp
test
daa
push
mov
and
mov
movsl
aad
and
dec
cs
in
inc
adc
lret
in
jle
jo
jae
ja
pop
push
into
subl
bound
das
jp
lret
scas
shrb
mov
xor
bound
cmp
mov
pop
inc
adc
enter
sub
push
mov
loope
jge
icebp
das
test
inc
jp
fimull
pop
fwait
push
pop
pusha
int
mov
lea
fildl
sbb
imulb
dec
fimuls
into
enter
pop
out
jg
mov
xchg
int3
in
and
lcall
outsl
aaa
xchg
mov
inc
nop
adc
cmp
call
mov
push
test
jg
mov
xchg
jmp
push
cmpsl
sub
xchg
xchg
aad
scas
push
xchg
pop
inc
cmp
xor
fldl
lret
cmp
push
xor
jns
xchg
ds
jp
cmp
rolb
lea
popf
jno
jge
outsb
mov
jl
push
ss
push
pop
mov
cmpsl
pusha
iret
out
popa
pop
das
mov
mov
jecxz
sub
imul
lea
arpl
xor
inc
lds
push
cmpsl
sbb
cmp
psubsw
pop
xlat
mov
jle
in
cs
pop
sti
xchg
xor
cmp
xor
out
inc
push
push
add
adc
js
jp
inc
fcoms
loope
test
dec
adc
and
movsl
fs
xchg
pop
std
mov
pop
cmp
add
movnti
dec
cmp
stc
mov
sub
mov
fstps
into
xorl
jmp
push
or
pop
add
subl
stos
pop
jns
orb
mov
push
out
lret
sbb
and
test
lods
adc
and
or
lea
sub
lods
mov
pop
arpl
adc
mov
and
pop
mov
sbb
sahf
stos
lahf
xor
pop
xor
mov
ds
mov
outsl
lret
mov
das
cmp
adc
dec
out
cmp
repz
pop
nop
cmpsb
cmpsb
adc
es
sti
or
xor
inc
mov
icebp
jg
xchg
stos
movsl
fs
cmpl
xor
icebp
pop
outsb
cmp
jl
push
in
das
outsb
dec
out
ror
mov
or
jbe
inc
mov
shr
mov
or
lods
loopne
xor
fistpl
int3
xor
jge
xchg
data16
outsl
xchg
pop
cmpsb
aas
lods
sbb
xor
push
enter
cltd
in
jmp
pop
mov
or
mov
pop
cmp
ds
outsb
cmc
sbb
sbb
pop
mov
cmp
inc
mov
cmpsb
inc
sbb
int3
test
jg
stos
filds
and
shl
lahf
out
popf
add
sarb
std
mov
sub
sub
addl
pop
jno
stos
es
jg
or
cld
inc
das
xor
inc
movsl
cmpsl
jne
sahf
pop
pop
push
pop
lds
pop
stos
jae
insb
mov
adc
pop
icebp
pop
popf
ret
sub
xchg
sarb
xchg
sbb
hlt
lret
xchg
push
push
fnstsw
cmpsb
cmp
mov
mov
inc
adc
fnsave
inc
cmp
mov
adc
mov
add
jns
cmpb
sbb
cmp
aaa
inc
addr16
rolb
sbb
outsb
arpl
cmpsb
cltd
cmp
outsb
inc
outsb
add
aas
xchg
add
addr16
mov
xchg
xor
insb
stc
push
ret
cmp
stos
xor
adc
cmc
fsts
lods
cmp
imul
sar
pop
daa
or
int3
pop
dec
dec
pop
ds
mov
dec
scas
inc
aaa
inc
pop
outsb
loopne
or
loopne
jge
hlt
push
popf
cmp
loope
fstpl
or
mov
pop
jle
add
dec
movswl
adc
leave
and
lock
xor
push
loope
adc
and
xor
pop
shll
enter
repz
xchg
dec
mov
push
jns
inc
ficoml
sbb
mov
ficoml
fstpt
shll
test
pop
test
scas
in
mov
xchg
pop
movnti
shrb
mov
jno
xor
or
inc
out
in
ret
sub
push
cmp
mov
popa
test
in
outsl
cmc
inc
xchg
jmp
mov
sbb
and
lahf
test
daa
dec
aad
je
dec
dec
push
xor
adc
or
push
push
ss
add
pushf
sub
sbb
mul
lcall
push
jl
cs
test
mov
mov
outsl
dec
push
mov
fnstsw
ret
scas
in
dec
js
dec
push
cmp
cmp
in
mov
test
and
push
mov
push
mov
insl
dec
das
aaa
mov
cmp
cs
jns
ds
jo
inc
imul
sub
xor
pop
inc
adc
out
push
mov
mov
int3
shrl
addr16
and
inc
inc
xchg
into
dec
addl
stos
shll
scas
mov
dec
enter
sub
repz
xor
adc
icebp
pushf
subl
ficompl
xor
mov
fincstp
popf
rol
cmp
lcall
mov
dec
fsubs
out
sbb
adc
into
lods
dec
ret
arpl
xor
dec
pop
test
sarb
daa
loopne
jecxz
rcr
inc
pop
aas
imul
sub
and
jle
dec
or
fimull
dec
jl
imul
push
sbb
divl
xor
pop
cs
cmp
or
ret
dec
clc
rcll
jne
lock
out
sti
rclb
std
mull
add
popf
aam
add
add
lds
iret
sbb
cmp
out
cmp
sub
std
dec
js
xchg
xor
sub
sub
outsb
jl
data16
pop
jl
push
std
inc
aas
inc
std
mov
pop
sub
mov
insb
push
sbb
paddw
rcll
adc
aaa
ret
pop
leave
sub
push
cltd
xor
in
addr16
scas
push
inc
xor
insb
dec
lret
fildll
pusha
pushf
mov
out
outsb
cmpsb
or
aas
ds
loope
dec
fucomip
push
sbb
mov
mov
or
btr
jmp
inc
jo
push
stos
ss
mov
mov
daa
jo
sub
ret
fwait
call
xor
cmp
cmpsl
mov
popa
cld
jg
and
mov
cmp
mov
cmp
mov
test
push
cmp
ss
fsubp
test
inc
cs
test
jmp
inc
das
clc
mov
inc
imul
jl
aaa
cmc
inc
cmp
cmp
jbe
inc
cmp
sbb
loope
scas
enter
sub
sbbl
outsl
arpl
cmp
int
mov
mov
sahf
or
js
jo
cmp
aaa
scas
int
dec
sbb
shll
int3
lods
inc
pop
mov
arpl
fbld
and
fdivrp
sub
xchg
sub
inc
addr16
xor
or
sub
pop
or
daa
push
mov
dec
mov
repz
data16
xchg
mov
pop
test
jne
nop
push
andl
add
pop
or
xor
loop
inc
gs
dec
mov
jge
jns
xor
les
aad
cmp
mov
inc
sbb
lret
je
mov
mov
sbb
pop
dec
cwtl
daa
js
add
das
xchg
test
hlt
inc
dec
adcl
les
lret
inc
mov
lret
mull
hlt
sub
aas
inc
push
cs
xchg
mov
xor
push
ret
lock
mov
inc
pop
cmp
cli
in
pusha
push
lcall
and
orl
fs
stos
aas
in
dec
xchg
ljmp
nop
stc
inc
dec
or
xchg
sbbb
mov
jg
mov
mov
dec
fisttps
fwait
sub
mov
mov
aam
pop
inc
lahf
adc
insl
dec
jb
jo
jbe
in
pop
inc
adc
fildll
cmp
jge
das
cmp
push
xor
push
outsb
xor
push
push
iret
lea
xchg
ljmp
fists
mov
mov
dec
test
jb
sbb
int3
or
jns
lret
test
push
push
sbb
jge
xor
push
mov
lret
out
push
mov
cs
jle
pop
push
sub
jne
cmp
dec
pop
pop
mov
jle
pusha
ret
idiv
lret
inc
mov
or
mov
std
push
cmovs
iret
xchg
adc
addr16
mov
dec
cltd
popl
enter
sub
xor
lret
lds
fnstenv
jmp
mov
xchg
cmp
imul
mov
push
cmp
inc
dec
scas
xchg
outsb
xor
lret
lea
dec
addr16
cltd
inc
adc
cmp
aas
sub
les
pop
repnz
or
cmpsl
or
loope
cmp
les
gs
xchg
in
cmpsl
inc
push
push
fidivl
cmp
mov
inc
xchg
jle
js
adc
mov
sub
lret
pop
mov
mov
popf
leave
in
xchg
hlt
mov
add
xor
inc
pop
and
sbb
mov
dec
push
ret
pop
xchg
mov
into
pusha
dec
popf
test
sbb
cmp
in
loopne
mov
inc
stos
cmp
insl
cmp
ss
aas
jmp
mov
in
or
imul
pop
sub
outsb
xchg
pop
pop
enter
int
mov
sub
sub
ja
mov
and
or
adc
inc
add
cmp
fs
in
jg
push
mov
pushf
gs
pop
push
scas
or
js
gs
jns
icebp
mov
scas
shrb
test
push
add
out
cmp
add
stos
xchg
mov
sbb
push
cmpsb
adc
imul
inc
mov
sub
mov
scas
not
movsb
sbb
fcoml
cmp
cltd
or
adc
and
add
and
add
or
enter
sub
add
ja
and
pushf
add
mov
cltd
das
roll
pop
add
sbb
inc
imul
pushf
jl
outsl
sbb
mov
mov
das
mov
loop
insb
push
mov
xor
out
out
push
lock
mov
aaa
sahf
ret
iret
call
pop
sub
mov
mov
iret
stos
sbb
idivb
es
push
adc
sub
jbe
fwait
int
mov
cmp
das
ret
int
je
pop
jmp
push
cmp
lret
lret
adc
mov
xchg
cmp
out
xlat
mov
xchg
clc
nopl
pop
sub
or
adc
cmp
xor
xchg
neg
mov
adc
sub
add
loope
and
lea
adc
repz
fnsave
js
pop
enter
daa
pop
ret
ja
cmp
add
xor
push
fs
sub
icebp
mov
dec
stc
int3
fs
push
ret
push
mov
fildll
dec
loopne
loop
scas
loop
cmp
incb
loope
dec
xor
and
insb
shrb
inc
mov
ja
jnp
jbe
cmp
ja
dec
push
cmpsb
repz
xor
das
xlat
enter
cmp
imul
add
mov
and
call
fwait
or
and
push
fdivrl
mov
cld
clc
out
cmp
xor
dec
xor
ret
sarl
and
lods
xchg
lds
mov
xor
insb
mov
fnstcw
jns
mov
mov
add
add
mov
xchg
mov
fs
dec
popa
repz
adc
jns
popa
dec
sahf
push
pushf
jnp
fucomi
add
aaa
fistpll
jb
jb
lret
dec
mov
jbe
or
fnstenv
mov
rolb
repnz
inc
jle
jb
pop
cltd
jbe
mov
stos
lcall
in
adc
fists
enter
mov
ret
stc
mov
xor
adc
scas
dec
pop
cmc
stos
jne
les
inc
pop
stc
jne
in
add
mov
cmp
jl
decb
cmp
add
xchg
popf
dec
xchg
out
addr16
push
xchg
jmp
adc
pop
xchg
xor
aas
sub
fisubrs
fldl
and
test
inc
or
jae
xchg
into
jns
stos
pusha
cs
out
dec
cld
push
ffree
aam
add
pop
sbb
sub
mov
mov
cmp
cmpl
lahf
or
mov
mov
jns
or
jl
fxch
xor
jecxz
gs
cld
jb
push
lret
or
inc
push
mov
inc
js
xor
mov
pop
popa
testb
xchg
xor
clc
mov
jns
aas
shrl
push
ds
js
mov
push
sbb
jle
and
rorb
dec
push
out
xor
popa
jmp
push
inc
arpl
jle
inc
pop
leave
mov
dec
rorb
loope
xchg
dec
sub
inc
in
pop
dec
bound
or
inc
xchg
push
aas
mov
pop
jmp
add
orl
cmp
and
mov
inc
or
cmp
adc
inc
iret
inc
mov
pop
add
imul
rorw
xchg
pushw
push
and
cmp
adc
fstps
pusha
popa
icebp
das
std
dec
xchg
adc
stc
scas
cmp
fistpl
lahf
dec
adc
aaa
jo
pop
adc
push
and
outsb
js
mov
adc
xchg
lret
arpl
fnstcw
repnz
stos
sbb
sbb
lret
bound
es
adc
lods
dec
int
rolb
mov
scas
pop
xor
insl
mov
inc
bound
dec
loope
insb
lds
xor
lock
sub
das
push
gs
xchg
mov
test
lret
out
jle
scas
inc
outsl
es
lahf
shlb
loope
xchg
ja
inc
icebp
pusha
int3
das
fisubl
cmp
in
push
iret
or
or
or
pushf
adc
cmp
push
and
cld
pop
adc
xor
outsb
out
cmp
stc
jmp
enter
lret
push
mov
xchg
jp
cmp
movsb
mov
and
jb
push
jge
cmpb
cmpsb
pop
jge
sarb
mov
gs
inc
pop
cmp
daa
push
pop
cmp
insb
jo
inc
cmc
arpl
mov
insb
or
je
arpl
ret
pop
repz
lods
sbb
or
jmp
and
cmpsb
jmp
nop
es
dec
pop
or
arpl
mov
push
clc
cmp
ds
cmp
jle
jmp
xchg
and
call
outsb
xchg
cmp
jge
dec
jle
xor
pop
jae
mov
sbb
mov
pop
add
lods
jle
roll
imul
icebp
out
jp
cmp
or
hlt
ret
cmp
aas
jns
adc
popf
mov
aaa
cmp
dec
xchg
mov
mov
push
pop
ret
adc
sbb
adc
xor
push
xlat
test
push
jmp
xchg
aad
adc
sbbb
mov
mov
mov
fnsave
push
addr16
pop
js
stos
and
rcr
jns
stc
push
pop
fnstsw
and
inc
mov
and
mov
imul
sarl
xchg
lods
sbb
iret
test
add
dec
and
adc
fidivs
add
imul
pop
es
adc
out
clc
repz
push
daa
out
aam
lahf
mov
std
ret
cmc
int
xchg
ret
push
pop
or
lods
add
xor
cmp
dec
enter
cmp
ds
lcall
and
fsubrl
fstps
test
lcall
sbb
ficoms
pop
icebp
lahf
scas
or
dec
popf
xchg
aad
cmp
sbbl
fnsave
out
movsl
adc
cwtl
sbb
xchg
or
enter
sbb
leave
pop
sub
hlt
or
stc
inc
aad
stc
push
adc
mov
jbe
push
testl
xchg
bound
shlb
mov
adc
int3
sti
xchg
fst
ds
xchg
subl
test
xchg
ret
mov
aaa
daa
cmp
inc
sarl
adc
mov
sarb
inc
mov
jb
neg
sub
jb
pop
in
or
xchg
jg
scas
sbb
mov
mov
cmpsl
ds
inc
cwtl
cltd
addr16
inc
rorb
fwait
xchg
enter
mov
dec
pop
pusha
push
xor
add
repz
mov
or
add
cmpsl
fnstcw
ret
mov
xor
stos
inc
in
cmpsb
scas
fimuls
test
mov
dec
into
pop
ret
mov
mov
fistpl
pop
popa
adc
add
mov
pop
lods
cmp
aaa
fs
test
lahf
enter
jmp
and
fs
cmc
aas
jmp
lret
xor
cmpsb
mov
test
xor
or
rclb
rcl
mov
in
gs
nop
sub
shlb
addr16
dec
jae
loop
or
jle
scas
insl
xor
xor
dec
arpl
cmp
sub
mov
xor
shlb
mov
frstor
dec
inc
loop
mov
sbb
inc
int
js
jl
jae
stc
cmp
mov
stos
jl
mov
sbb
inc
les
dec
push
inc
mov
push
add
pop
sub
or
roll
jl
push
out
pop
rorl
push
or
xor
aaa
adc
fsin
cs
dec
adc
imul
dec
and
je
dec
ret
cmp
movsb
dec
enter
js
xchg
mov
bound
xor
cltd
push
mov
xor
pop
int3
mov
inc
xor
inc
sbb
mov
into
mov
orb
out
mov
mov
mov
inc
nop
adc
sub
fnstsw
inc
jnp
data16
cmp
cmp
lods
jle
addb
inc
cmp
out
dec
sti
cltd
js
push
mov
cmp
outsl
psrad
cmovg
sub
ret
lds
sub
fimuls
adc
loop
mov
testb
pop
pop
sbb
add
decl
call
push
inc
adc
fstps
mov
adc
mov
es
pop
dec
jmp
cmovs
dec
cwtl
jp
idivb
fwait
add
adc
push
sbb
jmp
outsb
pop
aas
jns
mov
or
daa
jmp
xchg
add
cmp
xlat
mov
loop
sub
adc
jbe
xchg
push
movsl
sub
sub
inc
mov
pushf
xchg
mov
mov
pop
movsl
cmc
imul
xor
push
mov
aas
ljmp
mov
int
jle
arpl
inc
jl
test
out
idiv
pop
inc
iret
xlat
into
int3
subb
mov
insb
in
cmp
mov
sub
lea
das
cmp
inc
fistps
and
sub
incb
cmp
mov
mov
sti
enter
xor
cli
adc
jmp
data16
out
cltd
inc
push
cs
fidivrl
adc
clc
loopne
in
xlat
fldt
cmp
popa
push
fisubs
mov
dec
add
sbb
mov
or
cmp
ja
cmp
outsb
sbb
stos
dec
sub
xchg
pop
push
mov
xchg
cmp
inc
pop
dec
mov
push
dec
lods
add
xor
xorl
into
xchg
fcompl
push
decb
pushf
iret
inc
cli
pop
push
shlb
scas
stos
push
inc
xlat
popf
xchg
repnz
cmc
das
xchg
scas
mov
hlt
imul
test
xchg
mov
test
and
pusha
ljmp
xchg
push
mov
adcl
xchg
mov
sbb
loopne
cltd
lds
add
outsl
inc
jge
loope
cli
arpl
inc
out
lock
dec
mov
mov
add
clc
cmpsb
cmp
cld
aas
in
ja
pusha
rcr
dec
insb
fs
push
mov
gs
sub
dec
leave
scas
pop
cmc
sti
push
pop
lea
fnstcw
dec
cld
cmp
jbe
js
insl
std
push
aas
mov
daa
rcrl
lahf
out
dec
nop
stos
push
js
inc
fnstenv
test
or
cmc
out
and
stc
inc
sbb
imul
cmpsl
pop
pop
icebp
std
lahf
pop
daa
sahf
js
mov
xor
cmpsl
dec
inc
leave
fs
sub
xor
cmp
xchg
adc
aaa
mov
inc
xor
fdivrp
push
shlb
test
or
mov
fnstenv
cli
pop
xchg
das
stos
nop
jmp
mov
sub
nop
insb
pop
dec
mov
sub
addr16
add
cmp
and
jle
jp
add
xor
nop
data16
fsts
add
jp
stos
dec
lods
and
pop
wbinvd
addr16
pop
stc
pop
js
je
lods
std
pop
xchg
dec
stc
inc
sahf
fld
imul
xchg
out
pop
lret
jl
mov
ret
out
rep
lds
mov
push
fcoms
cwtl
int
scas
adc
shlb
xchg
sbb
xor
movsl
push
add
dec
or
mov
xchg
ss
test
in
sarl
or
adc
inc
push
jp
xchg
nop
jns
cmpsb
push
and
cltd
push
dec
scas
xchg
pop
fwait
push
sub
mov
jns
and
mov
cmp
movsl
cmp
inc
inc
cmp
aaa
cmpsl
jecxz
mov
fwait
dec
xlat
cmp
or
mov
lahf
push
jmp
mov
enter
int
mov
cltd
mov
rcll
mov
inc
popa
das
fstl
js
repnz
dec
mov
out
jle
jnp
adc
inc
push
push
xchg
cmp
inc
mov
mov
roll
aam
addb
lcall
mov
mov
pop
dec
adc
mov
inc
dec
mov
imul
mov
int
insb
jg
jbe
jle
bound
or
ficoms
jl
aas
and
mov
lcall
lcall
mov
sub
dec
int3
or
fwait
fs
pop
push
xor
dec
sub
inc
fistpll
adc
push
data16
sbb
cmp
rorl
dec
int3
imul
push
or
out
icebp
push
inc
jmp
mov
cltd
inc
sub
es
adc
xor
push
les
cmpsb
shrl
adc
sub
xchg
add
fidivs
loopne
add
pop
mov
cld
mov
stos
mov
lock
jno
mov
xchg
sbbl
ja
pop
jo
sbb
and
xchg
lea
cmp
push
aaa
rcrl
and
sarb
push
adc
js
push
cld
repnz
xchg
pop
mov
jmp
das
sub
jmp
cmp
jle
repz
xchg
xchg
xor
add
mov
mov
and
jecxz
lods
lahf
or
sahf
cmp
xor
ds
sahf
les
sbb
mov
test
dec
hlt
movsb
fwait
push
decl
mov
loope
cld
push
mov
in
add
sar
lock
in
push
add
popl
fidivrs
jb
stos
push
test
inc
or
in
cmp
aam
clc
and
fcoml
mov
or
mov
popf
fucom
psubq
push
addr16
mov
inc
xchg
iret
pop
je
popf
scas
add
loope
mov
out
int3
jmp
dec
aad
sbb
push
dec
ret
adc
pop
or
sub
dec
ret
ss
dec
shll
cmp
mov
inc
mov
inc
cmp
fwait
inc
gs
adc
divb
loop
das
aas
outsb
push
incl
adc
fsts
sbb
cmp
push
mov
insl
cmpsb
lret
sub
sub
pop
or
xchg
pop
lds
jg
or
mov
or
out
mov
popa
mov
in
dec
mov
and
imul
xchg
js
mov
push
dec
scas
mov
and
mov
push
in
or
xchg
add
dec
cmp
leave
pop
frstor
add
add
in
mov
xor
or
mov
stos
mov
cmp
push
scas
daa
fiadds
sahf
or
fcmove
mov
inc
inc
aam
cmp
fst
repz
jns
jecxz
sbb
mov
sete
jl
dec
neg
cmpsb
mov
hlt
lea
rol
in
mov
sub
ret
cmp
daa
popf
ret
push
cs
add
popf
sbb
ss
xchg
scas
push
mov
out
fsubrl
xchg
dec
insl
inc
or
cmpsb
repz
mov
mov
mov
cmpsb
hlt
mov
pop
add
cmc
sti
jb
call
mov
or
or
sub
and
mov
test
add
inc
xchg
or
es
ljmp
ss
mov
aas
cld
dec
sub
test
lea
mov
cmp
mov
js
scas
mov
lahf
sbb
mov
ljmp
or
cmp
gs
insl
push
fwait
jge
bndstx
pop
and
lds
adc
mov
push
cmc
cwtl
aaa
popf
jno
cmp
arpl
dec
jb
cmp
and
ret
imul
adc
jle
das
sub
sub
std
nop
jg
jle
fwait
sbb
mov
int3
orb
js
stos
xchg
push
mov
push
decl
pop
das
pop
inc
adc
jb
filds
or
dec
push
inc
insl
xchg
cmp
mov
inc
inc
xchg
cmp
lods
add
sub
loopne
jl
mov
dec
cmp
addr16
sub
loop
test
mov
adc
sbb
adc
stc
jp
call
inc
lock
or
cmp
pop
adc
movsl
in
loope
dec
popa
sbb
jb
mov
and
pop
std
das
cmp
ds
push
cltd
mov
push
shl
sarb
sbb
jne
cmc
arpl
lret
jb
cmc
ficompl
je
pop
test
jno
jne
lock
sahf
popf
fnstenv
fstps
outsl
fwait
cmc
inc
add
stos
add
cs
dec
fstpl
insl
addr16
dec
into
out
lret
aad
mov
int3
lods
test
lods
lcall
popf
out
iret
dec
add
pop
and
in
push
fisttpl
sub
clc
cli
cmp
cmp
inc
js
dec
repz
jb
add
push
xor
adc
sub
push
mov
aas
jl
lret
es
ds
iret
js
jb
sbb
out
scas
xor
int
pop
arpl
push
cmpsl
push
and
scas
mov
push
popa
jae,pn
dec
pop
inc
pop
popa
dec
daa
cmp
loope
aas
cs
fs
int
dec
fstpl
enter
inc
imul
jl
inc
jns
aaa
rolb
or
sbb
mov
pop
shrb
popf
or
dec
pop
mov
add
ret
aas
iret
aad
decb
and
add
sub
out
cmp
xchg
ds
push
clc
dec
js
aaa
dec
aad
xchg
add
xor
sub
jl
data16
sbb
les
std
repz
dec
push
gs
sar
sub
jle
leave
mov
add
sti
push
push
dec
dec
or
movsl
push
xor
mov
mov
je
or
movsb
and
cmp
dec
rcr
fxch
ljmp
sub
imul
fwait
test
cmpb
pop
fdivp
xchg
sub
xchg
sub
and
es
cmp
ds
ds
inc
jbe
jl
ljmp
inc
data16
push
inc
cmp
dec
loope
mov
fdivrl
hlt
inc
addr16
dec
popa
adc
or
int
dec
cmp
lret
cmp
sbb
jnp
scas
xchg
cltd
jnp
jle
pop
and
fisubrs
lods
bound
pop
cs
cs
mov
cmp
mov
xchg
fistpll
dec
popf
push
inc
mov
xchg
jno
mov
andl
dec
and
cmp
lods
inc
test
js,pt
lret
addr16
in
dec
fdivrl
dec
push
cmp
cmp
inc
sarb
adc
leave
add
push
call
mov
sqrtps
mov
imul
cmp
xor
stc
js
mov
and
xchg
jno
inc
ja
addr16
sub
in
pop
xchg
dec
sub
stos
or
sbb
inc
mov
js
adc
insl
shrl
imul
gs
xchg
xor
lods
jl
jns
addl
ret
jmp
jnp
lea
std
arpl
sub
jle
popf
mov
data16
lods
push
lahf
xchg
push
cmp
dec
push
lods
stc
inc
pop
push
lcall
pop
cmpsb
jns
sub
pop
mov
out
nop
lds
repz
mov
std
sbb
stos
enter
daa
ret
pminsw
mov
das
insb
cltd
fisttps
sbb
dec
loope
jne
or
dec
mov
push
and
into
scas
and
mov
mov
sbb
push
ret
inc
pushf
leave
sub
push
cmp
sub
xor
sbb
inc
xor
or
mov
add
jnp
lret
cmp
ret
mov
dec
ret
aaa
stos
inc
pop
pop
mov
push
pop
or
mov
arpl
mov
mov
pop
ror
pop
movsl
ja
sub
das
sub
and
pop
push
add
daa
dec
pop
lds
ss
rcr
cmc
xor
xchg
scas
ljmp
cmp
jecxz
outsb
jnp
repz
adcb
les
das
aas
inc
xorb
inc
adc
pop
jge
scas
fdivs
sub
sub
fimuls
iret
iret
xor
push
jge
mov
dec
dec
lret
or
mov
mov
pop
out
aas
push
xor
or
fnstenv
ds
andl
mov
jmp
push
jmp
xchg
xor
add
pop
pop
scas
aas
imul
into
mov
loope
ret
inc
cmp
mov
sub
xchg
sti
shlb
inc
inc
mov
ss
es
outsb
jg
js
inc
loop
xchg
cli
cmovns
jle
mov
adc
pop
rorl
push
mov
cmovg
stc
insb
jle
lea
in
cmp
js
xchg
pop
sub
hlt
jb
push
add
add
mov
test
cwtl
jle
add
lods
bound
jns
add
outsl
leave
inc
jnp
jle
adc
cmp
mov
fdivr
lcall
adc
adc
sbb
dec
mov
dec
push
mov
ret
shrl
dec
jmp
push
sbb
xchg
xor
aaa
fsubrp
mov
bound
pop
cltd
int3
push
cmp
daa
sbb
inc
pop
mov
inc
add
dec
dec
cmp
pop
jge
dec
xchg
bnd
dec
outsb
rolb
inc
sarb
pop
lahf
lahf
xor
dec
inc
push
inc
iret
dec
enter
bound
mov
cmp
daa
inc
rcr
movsb
leave
push
push
xchg
fistps
cmp
das
xor
vphsubwd
mov
cltd
adc
add
dec
lea
ret
in
cmp
cld
repz
aas
cmp
or
mov
add
std
xor
loop
cltd
push
test
jle
mov
filds
mov
into
sub
xor
sbb
xor
iret
sbb
cmc
fdivp
dec
mov
repnz
jg
jb
sti
scas
sarb
stos
dec
jle
adc
inc
sbb
xchg
dec
pop
in
dec
gs
inc
imul
jl
sbb
inc
inc
cmpsb
je
add
scas
sahf
ss
aaa
jle
mov
sbb
xor
leave
out
xor
or
addr16
mov
push
inc
testl
fistps
jnp
or
and
mov
sbb
js
pop
das
xchg
inc
dec
ds
in
push
sub
aaa
xor
leave
mov
mov
or
jnp
mov
xchg
sbb
out
pop
sub
dec
gs
ds
jnp
cmp
cli
mov
out
dec
addr16
dec
dec
mov
push
mov
push
in
pop
push
mov
dec
xlat
pop
lods
pop
imul
sti
fadds
fcomi
jo
jle
xlat
xor
inc
or
jne
test
push
push
sbb
jg
add
pop
mov
enter
xchg
cmp
stc
xor
mov
movsb
sub
mov
je
dec
fwait
or
fcomip
gs
mov
dec
add
lret
out
orl
and
rolb
xor
or
lahf
dec
xlat
dec
sti
fistpll
mov
lret
gs
stc
scas
mov
daa
mov
daa
js
jb
bound
lock
dec
ret
pop
mov
jo
push
mov
push
cmova
xor
dec
pop
mov
xor
push
insl
pop
mulss
in
xor
pop
fsubrp
pop
jmpw
aaa
pop
push
sub
pop
cmc
popl
pop
inc
mov
enter
cmp
out
gs
punpckhwd
cltd
fmul
into
cmp
mov
inc
pusha
mov
and
pop
cs
xor
mov
sbb
faddp
or
popf
inc
stos
push
cmpsb
sub
in
adc
xchg
ret
data16
repz
stos
fmulp
mov
xchg
jnp
sub
pop
jbe
stc
gs
add
jecxz
add
xchg
fsts
cs
lods
cmp
fstp
mov
lcall
pop
rorb
rclb
leave
rorb
test
pusha
mov
mov
daa
inc
add
dec
in
js
xor
movsl
mov
sub
int
or
and
xlat
mov
adc
gs
stos
out
xor
cmpsb
ja
xchg
lods
inc
aas
aam
sbb
outsl
push
adc
gs
cmp
mov
push
int3
repnz
aad
dec
xor
mov
shll
repnz
popa
pop
cmpsl
std
add
add
mov
jp
inc
jmp
cmp
inc
xchg
arpl
lret
push
aas
int
pusha
sub
push
subl
cmp
xor
xchg
into
add
mov
xor
aaa
add
repz
sbb
push
mov
xchg
lea
add
dec
push
lods
lcall
leave
cmp
dec
pop
pop
or
cmp
clc
sub
jge
outsl
jg
loop
ljmp
insb
inc
inc
shll
test
cmpsl
inc
enter
loop
dec
mov
jbe
hlt
repnz
push
xchg
int
flds
or
mov
icebp
test
test
add
jge
lods
adc
daa
cmc
xchg
in
adc
mov
aas
out
shlb
dec
mov
pop
inc
mov
xor
cmp
in
shll
jbe
sub
scas
fsubs
jle
adc
or
outsl
stos
and
mov
adc
cmp
enter
push
jmp
gs
cmp
and
js
out
popf
mov
arpl
js
fisttps
pop
out
or
xor
pop
push
inc
fsts
addr16
test
adc
das
mov
fists
mov
xor
cmp
adc
repz
int
movsl
push
rclb
out
push
gs
cmp
pop
mov
movsl
setb
pushf
call
mov
pop
push
add
leave
popf
lods
flds
into
push
into
fnstsw
mov
sbb
jmp
mov
gs
xchg
jg
dec
inc
lods
mov
js
cmp
leave
cmpsl
pop
idivl
stc
adc
insb
xchg
ret
mov
jle
popf
push
xorb
xor
or
cmp
dec
mov
xor
test
adc
cmp
fildll
xchg
mov
or
and
sub
in
sub
jnp
jno
or
ljmp
daa
push
pop
pop
jbe
sbb
test
inc
stc
inc
fisubrl
and
scas
into
add
pop
stos
ljmp
adc
push
das
cmp
out
lret
jo
xchg
add
mov
jo
mov
pop
push
int
js
mov
mov
popf
or
daa
xor
repnz
negl
or
cmp
and
dec
push
stos
out
mov
outsb
jb
mov
jmp
repz
arpl
enter
psrlq
sbb
adc
aam
sahf
or
dec
add
inc
mov
pop
stos
push
dec
mov
out
xchg
and
stos
outsl
push
mov
cmp
scas
xchg
negb
arpl
cmp
lods
mov
sub
int
mov
mov
sub
mov
jle
dec
cmp
dec
inc
addr16
jnp
inc
mov
shrd
mov
xor
js
pop
fcoms
jns
outsl
xor
push
mov
or
ret
nop
inc
popf
mov
lock
xchg
test
sub
mov
stos
push
sub
inc
fistpll
sub
fwait
outsl
pop
out
sbb
mulb
iret
aas
inc
leave
push
into
ljmp
int3
subb
fbstp
jg
das
das
dec
mov
add
sub
loopne
jnp
pop
add
shll
outsl
aaa
xor
pop
popa
xlat
mov
outsb
mov
add
shlb
push
xor
iret
ljmp
mov
out
jle
cmp
aad
mov
inc
inc
aaa
inc
pop
fs
lods
xchg
hlt
mov
sti
xor
aaa
fsubrs
int
xchg
mov
ljmp
mov
into
pop
xor
mov
gs
cmp
sbb
stos
xchg
or
in
aaa
movsl
push
pop
mov
mov
outsb
mov
stc
lods
mov
int3
jp
inc
inc
mov
mov
notl
fcmovne
jmp
fldenv
loop
mov
dec
pushf
fldcw
xor
jl
sbb
sub
aaa
mov
sub
imul
cmp
dec
mov
cs
pop
rorl
add
xlat
arpl
jmp
push
movb
dec
add
add
xor
xchg
xchg
sti
aaa
aaa
int3
push
inc
mov
in
xchg
out
add
pop
pop
pop
inc
cmp
aaa
mov
pop
aaa
cmp
cmp
gs
inc
ss
aas
push
sub
and
inc
sub
stos
das
sbb
cmpl
js
or
xchg
mov
repz
mov
ds
popf
jmp
mov
testl
subb
or
pop
jl
flds
inc
addr16
leave
xor
mov
xor
push
mov
and
lret
stos
jl
or
sahf
mov
cmp
mov
cmp
rep
lret
ja
mov
addr16
cmp
xor
ja
mov
inc
adc
pop
popa
inc
insl
loope
xlat
int3
dec
xor
subb
mulps
mov
pop
out
les
repnz
or
pop
inc
iret
fnsave
mov
cmc
orb
lds
xchg
cmp
movzwl
mov
fs
mov
mov
mov
jg
ret
jns
mov
test
aaa
int
push
mov
shrb
iret
inc
sti
movsb
jp
and
ljmp
xor
jae
lock
xchg
push
inc
fldcw
adc
lods
or
cs
mov
pop
cmpsb
aas
dec
js
cmp
or
cmp
lret
cmp
inc
sarl
pop
loopne
daa
push
mov
pushf
mov
aam
push
fimuls
je
mov
push
into
xor
mov
in
or
push
mov
scas
cmp
daa
mov
jbe
enter
imul
int3
arpl
cmovl
shr
outsb
sbb
in
xchg
icebp
dec
mov
adc
insl
lods
jle
mov
xor
outsb
pop
xchg
adc
cmp
cmp
add
in
xchg
jno
push
fucom
in
jp
inc
pusha
mov
or
or
and
inc
cmpsb
add
cli
adc
sub
addr16
adc
and
inc
mov
mov
mov
in
shlb
push
inc
jg
shl
cmpb
fwait
or
jns
jns
xor
inc
addr16
adc
pop
cmp
adcb
cmovnp
xlat
test
dec
scas
js
dec
pop
jo
outsb
cmp
xchg
inc
arpl
mul
pop
jo
dec
add
pop
int
fwait
aad
sub
lret
or
aas
or
lods
ficompl
mov
xor
fisubl
ret
aaa
int
arpl
daa
scas
imul
pop
loopew
js
xor
lea
dec
adcb
cmp
mov
xor
orl
stc
int3
adc
xchg
pushf
pop
shll
mov
pop
nop
idiv
mov
repz
xor
sub
or
sub
iret
inc
mov
and
inc
pop
mov
rol
jo
push
jl
mov
add
pusha
andl
mov
jnp
pop
movaps
stc
adc
dec
jle
bound
mov
scas
lret
pop
dec
outsb
imul
push
sub
cmp
test
and
sbb
cmp
lret
add
in
or
imul
mov
aaa
push
pop
add
inc
ror
cmp
bound
push
mov
test
jle
mov
add
cld
pop
push
out
add
push
pop
std
imul
dec
addr16
cmp
xor
fdivrl
cmpl
push
and
mov
sbb
popa
int3
mov
push
jl
lret
mov
cmpb
mov
dec
pop
cmpb
js
add
test
mov
fdivrl
pop
outsl
fwait
and
push
cld
fimuls
scas
in
mov
fcompl
idivl
out
adc
data16
test
scas
sbb
cmpsb
fidivrl
out
sub
clc
adc
int3
cmpsb
iret
inc
mov
mov
stos
loope
or
dec
or
in
pop
inc
fnstcw
inc
pop
sbb
or
inc
shll
xchg
jbe
imul
adc
pop
add
mov
jle
pop
push
andl
in
ds
jmp
sbb
lcall
inc
or
lods
dec
out
cmpb
insb
sub
data16
xor
sub
cs
lahf
dec
or
mov
pop
dec
sub
fisttpl
outsb
out
and
push
stos
aad
data16
dec
ror
xor
das
imul
gs
out
xlat
fstpl
sahf
inc
leave
ret
in
js
push
imul
loopne
add
movsl
in
dec
sbb
xor
enter
and
gs
enter
pusha
imul
inc
arpl
ds
lahf
leave
add
pop
lahf
outsb
ljmp
cli
sbb
mov
in
ds
mov
lret
sub
lds
imul
outsb
js
xor
into
dec
outsb
jbe
outsl
and
lret
lods
cmp
mov
xor
outsb
xchg
cmp
push
or
inc
cmp
fwait
or
mov
cmp
dec
xor
rcrb
sub
mov
mov
xor
rcrl
js
out
test
xor
cmpsl
outsb
popa
scas
movsl
lods
sub
cmp
daa
dec
enter
imul
cmp
scas
popa
stc
and
inc
imul
filds
inc
iret
dec
xlat
jge
xchg
inc
ror
clc
mov
out
sbb
jbe
stos
adcb
scas
jle
loop
or
out
pop
sbb
das
push
pop
es
add
dec
mov
ljmp
shll
mov
mov
cmpsl
cmp
sub
repz
rcrb
mov
cmp
js
or
ljmp
xchg
repz
inc
test
cmp
lea
lahf
jle
std
divb
sti
mulb
scas
dec
xchg
das
decb
sub
inc
iret
dec
mov
sub
pop
sub
das
out
xchg
mov
push
mov
sbb
pop
jo
dec
jno
jbe
cmc
gs
or
je
inc
aas
or
mov
cmp
sbb
dec
push
xchg
dec
aas
dec
mov
adc
mov
pop
mov
push
das
mov
movsl
call
cmp
addr16
data16
mov
addr16
in
arpl
ja
cmp
leave
mov
insl
icebp
daa
lods
je
xchg
mov
fstl
xchg
gs
dec
arpl
pop
daa
add
popw
mov
mov
dec
es
dec
test
mov
cld
mov
jmp
decl
sub
sub
inc
test
sbb
and
int3
xor
stc
rorl
push
lea
cmp
xor
adc
push
cmpsb
mov
lar
push
adc
mov
sarb
dec
pop
inc
imul
push
xchg
cld
sbb
inc
xchg
fs
push
cmpsb
jl
les
fnstenv
adc
xor
mov
inc
faddl
sarl
adc
cmp
dec
test
sub
push
cmpsl
dec
sub
dec
lcall
pop
sti
or
inc
sub
inc
jecxz
xchg
daa
xor
shll
mov
cmp
sarb
int
js
jl
cmp
lret
dec
ds
das
adc
fstps
in
sarl
fistpll
or
aad
ja
sub
iret
inc
cmp
insb
test
sub
je
jecxz
daa
jp
pop
xor
jg
pop
push
sub
jl
or
test
xchg
call
pop
mov
bound
fsubrl
mov
xchg
push
in
lods
sub
mov
ret
jne
sbb
jl
cmp
lahf
pop
xorl
test
and
icebp
negl
inc
jo
pop
jle
push
decl
imul
adc
xchg
scas
or
xchg
aas
ret
cmp
outsl
mov
sub
cmp
aas
push
mov
sbb
inc
aas
cmp
add
cmpsb
sbb
and
pop
pop
outsb
adc
push
adc
movsb
cmp
cmp
out
push
scas
cmp
push
jl
in
in
pop
inc
sub
loop
inc
pop
inc
ds
jle
cmp
dec
insl
out
das
fmul
call
cmc
jmp
push
mov
inc
movsb
fwait
addr16
cmp
push
dec
xlat
fdivl
sub
fnstcw
mov
out
sbb
in
jp
inc
pop
out
add
push
mov
stc
decl
and
jle
jg
orb
jne
aad
jbe
pop
or
cmp
stc
or
and
push
int3
js
frstor
xchg
cmp
jo
nop
or
pop
ret
popf
inc
xchg
ffree
jle
cld
jbe
push
arpl
hlt
data16
loop
add
jge
gs
dec
aas
cmp
cmp
mov
pushf
iret
xchg
ljmp
je
xlat
repz
daa
dec
orb
xor
or
push
cmp
outsb
inc
cmp
addr16
sarl
sbb
inc
dec
roll
jle
ret
shlb
xor
sub
adc
mov
stc
lods
sub
mov
movsl
out
pop
out
mov
lret
mov
or
xchg
jle
jl
mov
sbb
out
jmp
sub
ljmp
loope
pop
aas
sti
rol
inc
sti
cmp
das
leave
addr16
cmp
inc
inc
jp
inc
lods
pop
or
js
rorl
aas
inc
fstpt
ljmp
dec
das
cmp
push
divb
xor
mov
andl
pop
cmp
aaa
mov
js
inc
shll
xor
aaa
jle
pop
test
js
mov
loopne
jnp
or
aas
js
mov
stos
sbb
adc
push
lahf
xchg
repz
cmp
mov
lcall
inc
jg
sub
push
arpl
or
add
add
push
or
lds
mov
bound
sbb
adc
testl
into
push
stos
aas
pop
pop
shrl
outsb
sbb
pop
push
cmpsb
mov
xor
xor
out
inc
sub
jg
es
fstl
ljmp
xor
ds
js
lock
lcall
cwtl
or
dec
jmp
fucomp
gs
ss
ret
iret
loope
mov
push
inc
cmp
je
cld
shlb
push
inc
cmc
js
cmovbe
pop
stc
iret
cmp
psllw
out
stos
inc
and
outsb
lock
cmc
neg
mov
sti
or
das
sub
jp
xorb
fwait
push
lea
cmp
out
out
jle
mov
addr16
aaa
outsb
aas
lret
mov
sbbl
pop
dec
leave
fldt
arpl
jle
rcr
mov
cli
sbb
pop
or
jle
sarl
shlb
add
data16
add
jg
inc
mulb
scas
xor
and
jp
or
jne
int
rcrb
ljmp
lret
mov
xchg
jmp
sarb
sub
mov
iret
mov
inc
rcrl
and
mov
mov
inc
jle
pusha
push
lret
sbb
jae
jecxz
adc
cwtl
or
push
lret
xchg
inc
cmp
pop
lret
sbb
pop
inc
lods
or
rcl
aaa
pusha
ja
imul
das
fsubrp
sbb
ret
jne
dec
das
gs
sarl
nop
fmull
enter
scas
xchg
int
xor
sbbl
mov
sub
jle
jns
in
aas
outsb
test
and
push
jae
and
and
mov
popf
pop
dec
or
jbe
scas
push
sbb
bound
dec
lret
add
aas
pusha
mov
pop
stos
jae
inc
cmp
mov
vmread
mov
pop
and
pop
jle
cld
jns
inc
sbb
pop
add
dec
mov
call
mov
sbb
inc
insb
leave
cli
int3
xchg
or
popa
stos
fmuls
enter
sub
adcl
fcomp
daa
out
and
inc
cmc
pop
ja
mov
rclb
outsl
push
cmp
aas
adc
gs
ret
pop
jbe
jle
aad
push
gs
xchg
dec
stos
pop
lret
or
sbb
xlat
int
cwtl
pushf
daa
lods
and
adc
jp
cmp
push
or
xchg
sub
and
and
fbstp
pop
or
lods
push
push
pop
inc
jp
aam
add
subb
lahf
mov
pop
testb
out
stos
fwait
adc
pop
add
mov
aad
das
or
jp
xchg
lret
out
insl
push
mov
je
and
fs
pop
idivb
clc
in
adc
lret
sti
testl
jl
movsb
sub
jl
in
inc
cltd
inc
enter
xor
jae,pt
scas
cmp
stos
fsubrp
js
add
fs
and
fcomps
jg
or
jle
sub
and
dec
jo
in
call
cld
outsb
lea
mov
rcll
leave
push
cmp
rolb
ret
repnz
test
inc
dec
jp
xor
into
outsb
jns
int
scas
xchg
jno
cmp
jl
ret
cld
pusha
mov
ja
mov
inc
mov
xor
pop
mov
cmp
push
xor
int3
imul
out
stos
jle
call
bound
loopne
hlt
push
mov
push
cmp
dec
xor
cmp
cltd
xchg
sbb
fcoms
push
loopne
add
in
mov
push
adcb
nop
daa
movsl
pop
int3
jge
inc
jl
jmp
xlat
xorb
outsb
mov
dec
ret
jne
jl
push
push
js
sub
fs
and
jns
push
dec
loope
outsb
adc
ret
pop
fisttps
mov
mov
jbe
or
ss
dec
mov
testl
stos
shrb
cmp
add
or
xchg
mov
rcrl
mov
ret
inc
xchg
and
gs
cmp
xchg
imul
mov
add
inc
jb
dec
dec
cli
adc
stos
sbb
or
loopne
cmpsb
test
sti
pop
pop
outsb
add
or
ja
and
adc
xchg
addb
aad
jbe
mov
lret
mov
testl
mov
or
sub
mov
cmp
mov
add
aas
les
subb
fsub
mov
adc
jle
pop
int
dec
inc
jg
mov
cmp
sahf
outsl
out
in
or
fcoml
add
cmc
popf
test
xor
stos
or
data16
popa
push
out
js
iret
and
sbb
out
cmp
movl
sub
add
das
into
and
mov
mov
xbegin
mov
jbe
sub
inc
add
fwait
incl
bound
adc
mov
daa
jnp
lahf
cmp
int3
ja
jl
sbb
nop
sub
xor
stos
cmp
push
addl
daa
in
mov
sbb
push
sarb
ljmp
out
in
aas
mov
pop
mulb
mov
lahf
stos
fbld
scas
cld
out
push
pop
mov
lods
js
jl
lahf
jmp
std
mov
sbb
mov
and
aas
shr
shll
jno
es
adc
or
lret
sahf
cli
adc
pop
fwait
xchg
sub
imul
movsb
add
sbb
stos
inc
stc
mov
outsl
jp
in
cmp
lds
xchg
lret
testb
lret
mov
notl
outsb
or
dec
ret
xchg
xor
or
aaa
xor
mov
cmpsl
dec
js
add
push
test
es
lds
mov
mov
sbb
out
std
xchg
js
pop
in
push
inc
gs
faddl
out
xchg
popf
jae
ljmp
aad
sub
iret
into
shll
jnp
iret
push
jle
mov
xchg
aad
in
pop
jle
sub
and
sbbl
and
mov
inc
addr16
mov
push
int3
mov
lahf
xchg
jns
xchg
shrb
scas
jns
xor
push
xor
dec
xor
roll
sarb
in
cmp
shll
lret
fdivrs
outsl
inc
frstor
push
inc
cltd
js
inc
mov
jne
movsb
fdivrl
sub
bound
ret
mov
push
repz
jle
mov
mov
fnsave
jg
inc
jl
in
cmp
pop
push
loope
dec
and
call
mov
mov
push
push
je
xor
xor
cmpsb
or
insl
jnp
mov
in
fnstcw
mov
cmp
pop
xor
pop
pop
ljmp
cmp
test
aaa
out
sbb
xchg
xchg
std
and
mov
jb
pop
fadds
addr16
jg
sbb
sub
out
bound
add
mov
sub
out
shrb
mov
push
cmp
or
aas
push
xor
sub
mov
dec
jbe
scas
cmp
add
mov
add
push
cmp
sbb
insb
lcall
mov
subl
push
lods
mov
nop
es
dec
std
popa
dec
jle
lret
sbb
mov
dec
sbb
sub
jg
stos
cmp
aas
mov
cli
fwait
ss
mov
popa
aaa
push
int
stos
pop
mov
sub
repnz
adc
lods
push
dec
dec
mov
outsb
xchg
test
mov
lds
cmp
push
and
xor
lret
and
sti
sub
lea
lds
or
sub
pop
outsb
xchg
cs
das
cmp
pop
or
testb
test
adc
cmp
dec
cmp
mov
cltd
cltd
jecxz
xchg
add
daa
xor
lret
jl
push
dec
dec
or
xchg
sarl
and
fucomi
lea
and
mov
out
dec
jle
cltd
xor
stos
or
pop
xchg
mov
inc
inc
test
hlt
sbb
cli
gs
test
xchg
sbb
outsb
pop
lds
mov
inc
jne
push
jle
adc
adc
mov
adc
push
sub
mov
jg
mov
mov
adc
aas
and
and
outsl
andb
cmp
das
jge
or
enter
das
xor
out
insb
jbe
iret
mov
neg
loop
jmp
inc
jecxz
nop
xchg
js
jnp
pushf
adc
aad
cmpsb
sbb
add
ret
pusha
mov
push
je
aaa
xchg
repz
adc
aas
pop
addr16
fcmovnu
mov
iret
mov
popw
shlb
cli
sti
sbb
test
sub
lds
xlat
je
push
pop
mov
pop
xor
gs
mov
or
and
lret
js
in
imul
mov
and
sbb
in
dec
mov
orb
push
xchg
add
push
cmp
push
add
pop
ret
jecxz
mov
sub
iret
pop
pop
jle
fistps
xchg
mov
mov
cmc
in
sbb
mov
int3
ljmp
mov
mov
mov
sti
xchg
dec
sti
out
xchg
lea
sahf
and
fists
inc
push
and
lods
scas
shrl
arpl
jge
or
fld
inc
ss
dec
mov
adc
cmp
pop
cmp
jge
mov
push
cmp
jg
cmc
scas
arpl
xor
mov
cmp
mov
xchg
das
mov
ret
pop
xor
nop
xchg
inc
mov
cwtl
push
iret
in
pop
xchg
je
test
ret
xchg
daa
insb
shlb
ljmp
inc
xor
cltd
shlb
or
mov
outsb
add
shrl
jecxz
sbb
mov
frstor
lret
ret
inc
lret
push
fld
shll
and
mov
out
dec
xor
pop
sbb
mov
pop
push
push
sarl
inc
icebp
out
orl
lret
pop
add
push
ds
popf
adc
nop
sub
ror
push
stc
cmpsl
test
jb
js
mov
push
dec
cmp
inc
pop
mov
in
jnp
mov
lock
addb
cli
cmp
mov
test
xor
push
hlt
pop
cmp
pop
sti
pop
test
or
outsb
xor
dec
push
pop
push
push
add
push
mov
sub
cmp
insb
gs
psubsb
xchg
aam
stos
pop
roll
and
and
loopne
and
daa
push
lahf
das
in
out
xor
xor
daa
push
lods
mov
lret
xchg
jle
push
stos
pop
and
out
daa
js
sub
add
push
pop
or
dec
cmpsl
fildll
iret
inc
call
adc
pop
add
xor
rcll
mov
repz
adc
cmp
xchg
stos
cmpsl
xchg
lahf
jnp
mov
lret
fbld
cmpsl
lods
jp
and
je
sahf
dec
mov
mov
sarb
mov
pop
dec
insb
push
jge
mov
ret
sub
jbe
pop
add
adc
ljmp
xor
cltd
iret
pusha
cmp
push
fistps
pop
jo
xchg
inc
add
jmp
and
inc
cmpsb
js
xchg
ss
push
das
push
and
mov
test
jo
lods
mov
mov
mov
jbe
mov
jne
cmp
fld1
scas
ds
int
pop
push
ret
into
lods
mov
cli
cmp
add
inc
enter
ret
xor
lahf
and
test
into
sub
roll
aas
cs
sub
insb
mov
aaa
outsl
pop
loopne
in
retw
orl
cmp
xchg
je
inc
sub
mov
fldl2e
je
mov
mov
jle
ds
shlb
js
dec
dec
mov
shll
mov
xor
mov
cmp
in
dec
cmp
mov
jecxz
divl
dec
out
ret
jl
or
push
scas
jo
jge
inc
aaa
outsb
js
ret
push
or
fwait
jg
and
cmp
pop
popa
iret
aas
insb
jecxz
xor
push
mov
mov
xor
das
push
les
mov
test
pop
movsl
cmp
xor
lds
xchg
add
xor
leave
icebp
sbb
je
cmp
loop
dec
mov
pxor
dec
pushl
mulb
cmp
xor
test
mov
sbb
adc
adc
arpl
test
jbe
scas
xor
outsb
pushf
xchg
int
adc
dec
je
sub
sub
push
aas
xchg
inc
in
xor
xor
jge
sbb
daa
stos
testb
xor
cmp
xchg
cmp
dec
es
cmc
or
push
dec
jl
xchg
sub
xor
lahf
xlat
xor
jecxz
xor
ds
mov
out
add
and
movsl
adc
and
idiv
aas
mov
es
cli
mov
test
flds
rcll
test
dec
test
mov
lahf
cmp
and
xchg
adc
mov
fistpll
subl
lock
or
sti
ret
adc
mov
pop
jp
insb
xor
push
call
jo
sbb
ret
mov
mov
inc
inc
mov
divl
cmpsl
xor
adc
lods
movsl
add
or
sub
mov
xor
or
addl
mov
jecxz
and
add
out
xor
push
mov
mov
pop
xor
std
sub
in
das
jbe
sub
jp
rcrb
sbb
mov
ss
fimuls
mov
xchg
sub
enter
sub
xor
pop
shll
lret
out
cmp
inc
test
sub
rcll
addr16
leave
pushf
push
dec
rcll
cmp
gs
or
cmp
sbb
xchg
loop
insb
dec
js
mov
pop
jg
jecxz
pop
out
mov
sbb
sub
cmp
das
lahf
add
push
fisttps
jno
jl
sbb
cmp
fisttps
inc
dec
jnp
cltd
jl
dec
xchg
lds
inc
jnp
js
mov
push
std
dec
les
jnp
out
or
loopne
push
pop
mov
rcll
mov
mov
cmp
xlat
xor
shl
jecxz
adc
pop
xor
into
pavgw
fldt
js
lret
dec
scas
popa
or
inc
outsb
stc
push
cmp
mov
dec
int3
iret
mov
dec
inc
push
aas
pop
lret
mov
fs
js
into
mov
lock
sbb
lds
inc
sti
in
inc
fildl
sbb
icebp
cmp
aaa
test
mov
push
xor
or
sbb
pop
pop
fcoml
mov
fwait
dec
notl
pop
int3
pop
dec
dec
and
inc
lods
pop
addr16
mov
gs
jmp
jp
int
sub
ds
mov
cmp
clc
repz
sbb
outsl
outsl
mov
icebp
repz
mov
daa
dec
dec
mov
pop
mov
daa
xchg
aas
add
dec
sub
add
imul
lds
sub
push
cmpsb
mov
lods
sub
sub
dec
arpl
ret
adc
jo
and
fiaddl
jl
mov
mov
mov
loope
dec
push
push
xor
mov
sahf
andb
decb
mov
mov
dec
divl
loopne
adc
gs
and
test
pop
out
frstor
pop
cmp
mov
pusha
pop
add
leave
scas
jmp
dec
sbb
xchg
outsb
movsl
pop
xchg
stc
mov
fisttpll
je
jl
inc
xchg
fdivs
or
sbb
xor
sarl
outsl
movsl
push
outsb
or
cmp
ja
int3
orb
xor
rcrb
jo
lds
add
sahf
loope
mov
dec
mov
lcall
mov
mov
dec
pusha
nop
ss
cld
lods
mov
lea
xchg
inc
fists
add
ss
shrl
mov
push
mov
bnd
push
lahf
aaa
aam
ss
jmp
popa
in
dec
bsf
jge
pop
mov
push
sahf
daa
pop
inc
outsl
loopne
jmp
xor
fwait
adc
sti
rcll
stc
dec
inc
pusha
jae
outsb
js
outsb
jge
mov
shrb
stos
inc
cmpb
ret
xor
adc
push
call
mov
and
cmp
inc
fdivrl
add
das
pushf
daa
add
cmp
jo
cltd
test
push
jge
push
dec
pushf
or
jb
aam
jno
jg,pn
mov
mov
dec
enter
xchg
push
icebp
mov
xor
jp
mov
jle
popa
jnp
popa
mov
andl
cmp
dec
push
test
adc
dec
or
pop
sbbb
jnp
pop
mov
stc
ds
aaa
inc
fld
push
mov
or
pop
pop
cmp
data16
or
cmp
add
sbb
sbb
decb
cmp
popa
int3
cmp
fstpt
in
push
jp
aas
insb
xchg
mov
mov
out
aam
xchg
inc
push
std
bound
dec
ja
rorl
bswap
dec
pop
das
jb
jne
incb
xchg
in
fisttpll
mov
jl
idiv
loop
fdivrl
fxch
imul
aaa
int3
popa
jmp
stc
repnz
inc
into
cli
inc
lock
and
loopne
dec
mov
push
cmp
or
cmp
fadds
jecxz
push
stos
or
inc
int3
adc
cmp
cmpsb
add
in
jnp
fbstp
loopne
or
addr16
ja
dec
aaa
jmp
push
xchg
jae
pop
adc
or
xchg
call
repz
clc
out
xchg
dec
and
sahf
fdivl
icebp
jbe
sbb
enter
shr
pop
lahf
dec
icebp
and
enter
jle
shlb
mov
sbb
pop
cmpsl
push
test
sbb
mov
addr16
adc
sahf
scas
test
adc
push
push
pushf
adc
dec
push
fnstenv
pop
fistl
push
arpl
and
subl
aaa
pusha
pop
lahf
cmp
inc
jnp
mov
jmp
mov
add
xor
xchg
fidivrs
xchg
or
dec
pop
inc
lea
pop
inc
push
mov
push
lods
mov
push
mov
sub
inc
repnz
addr16
int
and
pop
push
into
xor
lods
call
aam
stos
int3
mov
push
scas
in
dec
cmp
xchg
outsb
test
dec
lret
dec
nop
fldcw
rolb
lret
dec
scas
mov
pop
ret
xchg
aad
imulb
lret
dec
aas
mov
sub
inc
aas
rorl
psllq
xor
das
dec
dec
adc
xor
lret
inc
aas
xor
sub
inc
mov
shr
xchg
xor
lods
adc
lods
int3
ret
cmpsl
or
inc
das
xchg
cmpsl
sub
xor
xlat
enter
push
xlat
test
scas
xchg
imul
push
cmp
or
jle
adc
adc
pop
xchg
adc
aaa
or
xchg
cmc
sbb
sti
or
mov
push
jnp
add
dec
adc
xor
shll
jb
popa
pop
add
in
push
and
mov
xchg
leave
lahf
loop
xchg
dec
leave
mov
addr16
aad
dec
sarl
jp
add
jo
pop
pop
stos
inc
and
icebp
inc
fldcw
sbb
test
push
and
fists
frstor
dec
adc
cmp
lds
adc
or
fnstenv
mov
int3
xchg
jecxz
cli
jl
pusha
xor
dec
push
outsl
adc
xchg
cld
inc
inc
jle
inc
icebp
cmp
aaa
jbe
cs
sub
inc
jg
mov
cltd
mov
cmove
cmc
ror
lret
xlat
xchg
xchg
mov
test
inc
sub
sti
adc
push
mov
pop
mov
mov
adc
in
pushf
ds
lret
dec
cmp
mov
loopne
pop
out
mov
adc
push
jecxz
push
pop
mov
adc
or
sbb
and
daa
inc
add
pop
aas
mov
dec
cld
jmp
test
mov
jge
fisttps
push
adc
iret
es
dec
sar
xchg
sub
bound
aaa
push
dec
inc
push
insl
cmp
sarl
and
iret
aaa
leave
movsb
and
inc
xor
es
fstpt
add
inc
popf
adc
iret
adc
lcall
sbb
cmp
gs
or
mov
adcl
in
sbb
lahf
mov
imull
loopne
pop
mov
movsl
daa
pop
dec
repz
cmpsb
inc
pop
xchg
gs
iret
aam
nop
das
sub
bound
insb
outsl
lret
jae
outsl
cmp
or
stos
xlat
cmp
int3
mov
dec
aaa
jmp
pop
xor
lret
lods
js
cmp
xor
cmp
ret
ret
inc
jbe
dec
sbb
cmp
cmp
repz
fldt
test
add
mov
pop
dec
loopne
inc
cmpsl
jl
insb
add
jp
xor
mov
test
es
mov
jnp
out
inc
imul
mov
sub
push
xor
aaa
or
ss
js
jle
jl
dec
pop
mov
add
jl
cmp
insl
jnp
dec
sub
sub
lret
fstl
aas
addr16
iret
outsl
sub
gs
push
inc
and
ret
pcmpeqd
dec
lods
pop
out
xor
stos
inc
sbb
cmp
dec
jecxz
js
jmp
jmp
sti
das
pop
or
mov
pop
and
clc
ds
dec
in
lcall
cmp
adc
outsb
sbb
push
lods
mov
repz
xchg
xor
lea
rcr
iret
jo
out
adc
shlb
mov
cmp
cmp
and
ds
aaa
out
cmp
ljmp
mov
push
into
cmp
aad
xchg
ja
mov
xor
in
pop
rclb
jb
push
or
adc
frstor
mov
ret
cmp
xchg
dec
jge
xchg
sub
jecxz
cmc
xchg
mov
jp
pop
lods
sbb
or
lahf
inc
adc
fsqrt
xor
aaa
aas
add
popf
push
test
fst
jg
push
mov
es
mov
dec
ljmp
dec
sub
imul
ds
int3
add
inc
lret
mov
push
loopne
sub
psubsw
mov
mov
pop
dec
imul
dec
pop
decb
fistl
cmp
inc
sbb
fs
sbb
mov
aas
cmp
testl
out
daa
cmp
xlat
dec
push
push
dec
cmp
mov
jb
xor
bound
mov
push
fs
jo
mov
sti
test
and
js
data16
lds
repnz
test
inc
dec
mov
push
aaa
push
and
cmp
jo
xor
pop
dec
push
and
fdivrl
jle
fcomip
sbb
xchg
pop
add
adc
int
sti
push
outsl
sub
jg
stos
adc
cmc
or
out
popf
in
adc
movsb
add
movsb
jno
fisubrs
es
push
or
insb
mov
imul
dec
adc
orb
or
lea
or
mov
mov
arpl
insb
ds
mov
js
ja
les
in
sub
pop
dec
fs
dec
jle
xchg
mov
push
aam
aas
jle
mov
cmp
popf
cmp
mov
cmp
dec
dec
mov
jg
mov
xor
push
or
cld
mov
sub
xor
pop
mov
lret
and
das
cmovge
xchg
lods
and
push
movsl
mull
xchg
js
into
imul
jecxz
push
sbb
out
xlat
push
pop
popw
call
mov
cltd
test
insb
jp
scas
inc
mov
dec
jl
cltd
jbe
add
inc
lret
xor
inc
pop
js
and
or
dec
imul
xchg
jb
and
mov
int3
xor
mov
mov
iret
std
cltd
test
sarb
divb
dec
jae
aas
cmp
jmp
push
cmc
fisttps
mov
ss
popf
inc
mov
xchg
jl
cmp
mov
push
sbb
xor
cli
or
pop
xor
adc
int3
test
or
btsl
adc
icebp
lret
sbbl
iret
lret
push
pop
out
add
scas
xchg
mov
xor
sti
pop
inc
mov
cmpsl
sahf
add
nop
cmp
adc
add
mov
sub
imul
insl
lret
mov
lahf
jle
sbb
push
lret
add
push
gs
cmp
mov
enter
iret
jmp
pop
push
add
adc
fistps
pop
and
push
cmp
test
jb
and
lret
in
out
cmpsb
xchg
mov
sub
push
nop
addr16
mov
pop
imul
addr16
cs
out
jns
aas
aas
adc
stos
jg
inc
pop
ljmp
mov
mov
xor
xchg
mov
mov
push
sub
xor
cmp
leave
inc
ds
sub
ret
push
js
icebp
cmp
mov
jg
in
add
pop
lea
pop
push
cmpsl
xchg
cmp
data16
inc
shrb
jecxz
or
sbb
mov
xchg
lods
cmp
xor
dec
sub
pop
mov
jge
adc
adc
mov
flds
dec
movsl
fsubrl
adc
and
mov
rcll
lds
add
lock
sbbl
jl
adc
sub
out
dec
inc
rclb
popa
adc
xchg
jns
and
pop
mov
mov
cmp
stos
sub
mov
sbb
mov
fsubl
lods
xchg
and
add
cld
jg
gs
cmpsb
sbb
push
in
ja
and
std
jo
scas
jnp
cmp
int
movsb
inc
aaa
imul
cmp
xchg
push
mov
pusha
pushf
mov
lds
push
int3
daa
rcr
shll
lret
mov
lock
dec
loop
add
sbb
push
inc
mov
into
outsl
jmp
jmp
cmp
lods
lock
lods
ficomps
ds
mov
stos
adc
stc
xchg
xchg
mov
jle
xor
inc
inc
adc
mov
mov
adc
cltd
or
and
scas
gs
fidivl
int
and
mov
mov
jle
xchg
dec
movsb
jl
imul
and
xor
cmc
inc
xchg
ja
iret
repnz
and
mov
jecxz
sub
movsl
cmp
daa
adc
and
or
jmp
fwait
aaa
or
mov
mov
daa
scas
in
outsb
es
add
testl
sbb
cmp
xor
cld
mov
inc
insb
fmuls
cmp
xor
mov
dec
dec
daa
lods
jl
cwtl
or
sahf
cmp
dec
lds
adc
push
into
orb
xor
enter
sbb
mov
mov
xor
stc
sbb
lods
jno
pop
call
js
jno
das
aaa
aas
xor
sbb
mov
aaa
cmp
xchg
adc
stc
jmp
sub
sub
push
cmp
stos
sub
popf
sarb
roll
adc
or
notl
lret
cmp
pop
addr16
sub
loopne
dec
js
cmp
in
cmpsb
jnp
fcomip
cmp
jle
fisubs
jmp
mov
mov
frstor
add
imull
sub
int3
push
mov
enter
inc
iret
aaa
aas
push
mov
decl
aaa
xchg
iret
imul
rclb
rolb
outsb
jle
or
jl
adc
imul
jnp
push
inc
scas
cmp
jle
rol
hlt
mov
test
pop
mov
mov
dec
xchg
into
insb
mov
cltd
mov
xchg
int3
hlt
xchg
mov
xlat
aam
adc
xor
xchg
rolb
mov
xchg
dec
mov
pop
xlat
mov
mov
pop
and
pop
int3
inc
dec
dec
in
rcr
les
and
das
sbb
xor
notl
push
sti
add
adc
lods
iret
sbb
add
pop
push
sbb
daa
lret
and
inc
add
mov
push
and
dec
shrb
cmp
out
movsl
xlat
inc
jae
xchg
cmp
mov
imul
cltd
sub
lcall
and
clc
and
fmuls
inc
xor
dec
jno
jae
xor
out
inc
cmp
inc
es
stos
repz
addl
adc
fidivrs
pop
xlat
adc
cmp
cld
popf
jae
and
push
dec
mov
jne
sub
mov
pop
iret
les
ss
movsl
pop
data16
mov
ret
dec
movsb
insl
push
sub
fnstenv
cmp
aaa
mov
ds
jae
push
icebp
pop
lret
mov
xor
idivb
cmp
sbb
repnz
leave
mov
jl
daa
adc
pop
add
or
js
ret
jno
cmp
imul
aas
scas
push
inc
pop
ret
daa
jbe
enter
and
int
movsl
bound
xchg
adc
leave
ds
in
inc
js
js
mov
cmp
push
push
mov
pop
stos
push
push
lods
and
bound
inc
or
into
sub
dec
mov
xchg
addr16
inc
in
outsb
sub
stc
push
xor
arpl
mov
rorl
push
pop
cwtl
es
adc
inc
and
lcall
inc
outsb
push
sub
fwait
jle
sbbb
test
mov
xor
or
or
cltd
out
ljmp
push
test
xor
inc
jp
jbe
dec
pop
sahf
imul
sbb
and
mov
mov
outsb
ret
iret
ds
aas
outsb
mov
add
mov
push
mov
lods
sub
inc
xor
movsb
xchg
inc
jle
jae
inc
sub
leave
subb
push
jecxz
cmp
mov
imul
lcall
pop
fcmovne
mov
pop
loop
mov
enter
adc
xor
int
aas
inc
ds
rolb
mov
out
fwait
inc
pushf
xor
cmc
stos
int
add
pop
inc
mov
or
push
or
dec
sub
adc
negl
push
or
push
cmpsl
fistps
push
mov
push
jno
or
stos
add
sub
mov
pop
inc
sub
in
lock
movsl
ja
mov
and
jb
pop
fidivl
loopne
mov
lahf
das
push
mov
fcoms
and
xchg
jle
jno
or
ret
daa
and
push
ds
test
push
xor
shl
xchg
daa
push
mov
shrl
push
orl
dec
sub
xor
fcomi
adc
mov
pusha
inc
ret
xor
push
push
mov
cwtl
jle
repz
das
pop
cmc
add
jb
mov
in
outsl
and
inc
fsubl
out
sub
in
lds
pop
gs
xor
js
or
mov
mov
sub
and
sub
cmp
jmp
mov
jle
and
das
lock
mov
dec
push
je
repnz
adc
imul
cmpb
stos
dec
jno
notb
pop
popf
push
das
iret
std
sbb
cmp
jle
fnstcw
mov
rclb
fs
sub
bound
adc
outsl
fmul
aam
mov
jae
add
xor
std
sbb
xchg
aad
fwait
scas
mov
jle
mov
adc
stos
mov
pop
xor
rorl
cmp
xchg
jle
dec
out
punpckhbw
mov
xor
dec
cmp
dec
jg
rolb
fsubp
or
pop
push
sub
or
jle
mov
fnstcw
mov
shll
outsb
or
daa
cmp
dec
xor
and
push
mov
mov
xlat
das
or
mov
sbb
out
mov
dec
lret
sub
int3
mov
jle
iret
iret
or
xor
out
and
push
out
ficompl
dec
inc
scas
test
or
in
clc
call
fsubs
push
mov
das
fstl
iret
adc
sarl
comiss
roll
mov
and
jo
daa
sub
int
jl
adc
iret
out
or
out
cmc
sub
stc
pop
repnz
inc
jle
jno
loopne
lea
out
shll
xchg
scas
push
cmc
dec
cli
jl
js
in
jge
xor
jnp
fs
pop
aaa
cli
dec
jmp
arpl
js
xchg
decb
cmp
sub
xor
iret
sahf
aas
fcmovne
push
inc
outsb
fldl
dec
ret
js
jnp
xchg
mov
mov
ds
or
imul
mov
mov
or
or
sbb
lret
add
shlb
ds
test
pop
js
int
scas
inc
js
jns
jmp
mov
pop
cltd
aaa
fimuls
jo
and
sarl
popa
lret
mov
fwait
das
pop
movsb
jl
loopne
inc
jmp
sbb
and
fwait
sub
loopne
repz
jnp
addl
sub
gs
or
add
or
js
daa
daa
mov
roll
xor
popl
cwtl
adc
sbb
mov
and
aas
shll
and
sub
jno
or
icebp
icebp
rcrb
adc
mov
rcll
js
out
in
mov
push
inc
iret
xchg
jle
scas
xchg
sub
ds
lea
xor
xchg
cmp
mov
fldcw
sub
ss
mov
mov
aas
mov
push
sbb
push
movb
push
push
aas
aas
sti
and
cmp
sti
icebp
jo
inc
inc
adc
adcb
fbld
jmp
pop
cmp
push
xor
sbb
mov
dec
cmc
das
mov
popa
daa
rcrb
test
dec
inc
mov
insl
inc
xlat
xchg
test
stos
push
mov
inc
int3
pop
and
pop
cli
adc
fildl
out
lds
inc
fldenv
cmp
xor
inc
pop
js
xchg
inc
push
jp
pop
inc
fistpll
scas
iret
lea
das
addr16
fnstenv
push
inc
cmpsl
sbb
cmc
enter
std
aaa
inc
dec
sbb
dec
push
dec
mov
iret
push
push
pop
sbb
scas
insl
and
cmp
adcl
or
movsl
stc
fmul
scas
inc
fwait
lock
push
or
xchg
add
cli
xor
xor
xor
int
sub
ret
or
jl
out
icebp
popf
mov
mov
push
out
leave
aas
es
sub
repz
ret
enter
scas
push
int
xlat
sbb
mov
int3
inc
pushf
inc
mov
stos
inc
into
pop
push
inc
adc
inc
fld
mov
outsl
daa
push
inc
jnp
jmp
pushl
cs
shr
in
jle
ss
add
adc
or
inc
pushw
loop
mov
filds
outsb
movsb
sahf
or
lahf
mov
cmpsb
and
lret
xchg
xchg
mov
lods
adc
roll
mov
into
arpl
dec
addr16
lods
andb
inc
xor
mov
adc
sub
cmp
cmp
jo
cs
pusha
lds
dec
movsb
sbb
sub
jo
rolb
arpl
push
loopne
insb
dec
add
push
adc
roll
cmc
hlt
sti
cltd
es
sub
ja
bound
and
adc
dec
out
popa
fstpl
ds
lahf
cmp
shrl
andl
je
out
or
jb
fildll
addr16
push
gs
xor
cmp
mov
mov
xor
push
call
cmp
ds
pop
pop
stos
jle
or
xor
pop
cmp
negl
inc
jle
add
and
mov
push
xlat
dec
sbb
setnp
mov
loopne
nop
call
sbb
aas
mov
iret
pop
in
jb
pushf
jne
movsl
mov
out
add
cli
jnp
sarb
cmp
movsl
push
inc
push
mov
lahf
in
inc
push
sbb
das
addb
dec
icebp
outsb
fsubs
or
push
fnstcw
shlb
pop
movsl
or
adc
popf
jmp
sub
mov
inc
ljmp
dec
xor
mov
addr16
mov
fdivl
int3
js
mov
dec
xchg
xchg
shrb
hlt
fwait
pop
cmp
jmp
and
xor
pop
sub
inc
dec
rorl
jp
mov
fidivl
icebp
adc
sub
shl
cmp
aaa
js
aas
cmp
xor
fwait
jnp
out
jecxz
aaa
mov
and
cmp
scas
aas
dec
cmp
mov
lret
int
fwait
ret
into
dec
addr16
xor
in
movsl
data16
out
sub
fwait
mov
xor
cli
mov
into
sub
mov
flds
xchg
push
add
xchg
cmp
jle
mov
or
ret
jo
adc
dec
or
lds
in
pop
sub
mov
jb
mov
or
fld
jnp
jl
fcompl
xchg
push
push
mov
outsb
sub
and
mov
test
dec
stos
inc
daa
out
gs
ret
pop
push
and
sub
fists
xor
into
testb
lods
push
pop
mov
or
push
dec
mov
mov
aaa
xor
call
movsl
push
test
mov
cmp
add
pop
pop
fisttpll
and
xchg
xor
sub
cmp
sar
pop
cmp
xchg
xor
fidivl
sub
out
xchg
dec
mov
xchg
sbb
out
mov
xchg
stos
cmp
mov
cmp
cmp
adc
fxtract
das
cmp
insl
ljmp
mov
xor
test
faddl
scas
or
iret
fxch
xchg
pop
push
push
scas
mov
mov
stc
mov
out
out
cmp
mov
gs
fadds
jnp
cmp
add
add
and
repnz
ljmp
outsb
ja
push
mov
sbb
cmp
aaa
cmpsl
sahf
shlb
mov
dec
repz
insb
mov
or
jno
sarl
repnz
les
jb
xchg
sub
xor
cltd
mov
push
aas
popf
mov
jge
movsl
xor
push
pushf
stc
ret
das
adc
push
js
orl
mov
nop
sbb
into
pop
mov
jnp
dec
fdivl
dec
dec
push
out
inc
dec
push
das
dec
mov
arpl
arpl
rcll
pop
push
aad
pop
pop
dec
into
push
or
gs
incl
jmp
fidivrl
std
pop
les
cmpsl
inc
dec
lahf
jl
jecxz
aas
xchg
loopne
cmp
or
adc
stos
dec
dec
leave
repnz
and
stc
mov
inc
pushf
lret
push
pop
adc
xlat
fstps
cmpsl
mov
arpl
sub
mov
repnz
inc
std
aaa
iret
pop
and
push
in
jl
rcr
pushf
ljmp
aaa
dec
mov
subb
daa
out
dec
mov
stos
cli
adc
push
dec
or
jle
mov
mov
push
mov
mov
sbb
insb
mov
iret
je,pn
repz
push
imul
cmp
ud2
gs
push
in
sub
cmp
lret
dec
test
adc
test
add
xchg
icebp
int3
and
inc
mov
clc
pop
cs
aaa
jp
flds
mov
pop
and
mov
rclb
pop
dec
cmpsl
push
dec
ret
out
je
pop
shlb
jno
shll
cmc
rclb
out
fwait
ds
iret
out
mov
in
jl
mov
pusha
adc
mov
dec
out
js
push
sti
aaa
repz
pop
push
ror
inc
dec
sub
push
bnd
sarl
cwtl
fs
adcl
sbbl
pop
scas
lahf
sub
and
mov
pop
cmp
pcmpgtw
adc
add
lds
cmpsl
sbb
sub
enter
push
lock
adc
sub
scas
roll
mov
mov
int3
jl
or
out
int3
mov
dec
inc
movsl
fcmovb
lock
adc
sub
paddusb
sarb
fimull
lds
pop
cmp
mov
xchg
mov
inc
cmp
fistpll
loopne
leave
jge
mov
imul
mov
inc
arpl
dec
mov
adc
pushf
xor
aaa
sub
sbb
or
out
cmp
xorl
inc
push
or
jecxz
pop
and
pop
inc
sub
movsl
repnz
lock
nop
adc
in
jg
sub
mov
mov
jbe
loopne
cwtl
and
mov
push
mov
pop
push
out
ljmp
addr16
gs
out
js
popf
dec
mov
or
aam
push
pop
aaa
sti
fnsave
jnp
add
int3
lods
jbe
inc
jnp
fsubl
cmc
pop
gs
imul
xchg
dec
dec
sub
push
lods
inc
les
or
fmuls
scas
lods
xchg
iret
push
mov
mov
jnp
push
lahf
and
jo
mov
xor
dec
outsb
dec
pop
sbb
cpuid
lret
add
jmp
push
xchg
aad
adc
stos
adc
pop
cmpb
push
dec
or
add
xchg
xor
rep
mov
add
mov
xor
cmp
daa
iret
sub
push
xor
out
lahf
xor
xor
mov
sub
mov
and
jo
call
enter
mov
xor
pop
adc
dec
xchg
fst
fs
push
pusha
sti
xchg
add
das
movsb
cmp
mov
dec
leave
rolb
daa
test
jle
outsb
lods
jle
or
cmp
out
nop
xor
mov
pop
push
into
rcr
xchg
push
add
xchg
cmp
outsl
and
push
adc
gs
mov
sarb
cli
or
je
pop
lahf
xor
cmp
cmpsl
or
push
jno
addb
xchg
mov
lret
js
aam
and
push
adc
pop
jg
bound
mov
push
sti
scas
std
jg
sub
jecxz
mov
sbb
mov
push
and
lock
xor
or
sub
add
or
lret
js
scas
pop
leave
add
lods
loop
mov
in
inc
push
outsl
sbb
arpl
insl
stc
es
adc
jecxz
xchg
lcall
sub
das
pop
es
test
adc
aaa
arpl
or
xlat
xor
cmp
jb
fisubs
fisttps
ljmp
pop
gs
pop
push
adcl
push
xlat
or
sti
dec
inc
pop
pop
fwait
repz
ret
dec
dec
cmp
inc
inc
js
sbb
gs
iret
in
inc
js
ljmp
jle
aam
and
mov
adc
adc
inc
cs
cli
mov
and
dec
js
cli
stc
xchg
mov
pushf
cmp
fldl
test
cli
sbb
push
fwait
pop
push
cmpsb
mov
popa
jp
pop
cmp
inc
inc
inc
dec
ret
cmp
dec
mov
mov
mov
add
cmp
pop
in
jbe
add
push
cmp
icebp
dec
pushf
pushl
mov
mov
mov
test
xchg
push
aad
dec
int
pop
fnstenv
cmp
xor
leave
dec
push
pop
xchg
cmp
pop
dec
loopne
hlt
jo
adc
cmp
push
lret
pop
or
mov
inc
ds
fdivrl
cmpsl
dec
push
icebp
dec
sub
push
dec
or
int
inc
push
inc
push
sub
pop
inc
sbb
push
mov
pop
xor
pop
scas
mov
rcr
in
pop
lret
push
mov
jno
pop
stos
push
inc
int
jle
adc
xor
and
mov
out
jle
daa
mov
sub
fisubs
mov
insb
or
xchg
sbb
out
adc
dec
bound
int3
jl
adc
insb
es
add
lods
mov
mov
mov
jecxz
rcll
out
fstpt
cmpl
cwtl
mov
pop
es
aaa
lcall
mov
inc
cmp
or
arpl
push
mov
cli
in
xchg
mov
movsb
dec
cld
das
fwait
daa
es
js
mov
lret
xlat
or
pop
mov
gs
mov
fisubrl
or
cmp
scas
push
bound
pop
mov
stos
mov
push
sbb
push
dec
mov
inc
jmp
xchg
aad
or
pop
mov
mov
mov
clc
add
test
into
fwait
jno
cmpsb
jle
popf
cmp
outsb
js
es
inc
scas
dec
xchg
inc
jbe
xchg
pop
lods
mov
sub
cmp
push
inc
dec
xor
xchg
adcb
lret
mov
popa
scas
sysret
inc
loope
pushf
lret
xor
pop
in
push
aaa
cmp
notl
xor
jl
in
fcmovnbe
or
adc
call
stc
addr16
xchg
int
icebp
outsb
jl
mov
adcb
jnp
jecxz
sahf
mov
lahf
js
push
icebp
jecxz
sub
adc
icebp
cmpsl
adc
add
repnz
ja
cmp
mov
cmc
notl
out
cs
dec
leave
xor
cmp
dec
pop
lds
dec
mov
mov
imul
mov
jb
jmp
into
pop
std
add
sbb
adc
sbb
ror
xor
frstor
xchg
enter
fsubs
push
dec
test
idivl
dec
mov
sbb
sarb
dec
js
out
aaa
xchg
add
sti
push
mov
cmpsb
push
sub
fsubr
cltd
ja
inc
xchg
in
xor
stc
push
loope
pop
mov
jle
sub
scas
or
sub
jl
or
xchg
out
mov
or
in
cmp
sub
lret
or
movl
xor
pop
js
es
bound
jge
cmp
sub
cmp
push
xor
or
lahf
mov
ficoms
dec
gs
js
gs
in
push
loopne
cwtl
andb
mov
out
dec
sarb
inc
lahf
out
cmp
mov
mov
rorb
sub
add
rcl
ja
add
pop
in
fdivl
pop
pop
mov
dec
dec
push
scas
daa
mov
shlb
lods
sbb
mov
fildll
pop
xchg
aas
negb
adcb
dec
arpl
inc
push
dec
push
shrb
mov
add
das
jnp
add
outsb
aaa
mov
push
sub
push
ljmp
outsb
jnp
or
push
sub
sub
test
das
iret
pop
xchg
dec
stc
mov
aad
lret
out
xchg
inc
js
jnp
mov
out
inc
test
shlb
pop
imul
sarb
push
or
push
jle
bound
movsl
mov
iret
lret
mov
imul
loope
and
cmpl
lret
inc
icebp
and
and
out
inc
mov
cmp
mov
xchg
cmp
inc
jns
fs
pushf
int
repz
and
aaa
fnstenv
sub
pop
sahf
or
or
xlat
mov
mov
mov
popf
jnp
fimuls
inc
mov
mov
aas
test
addb
jp
js
jbe
je
jb
cmc
jo
cmpsl
js
scas
pop
dec
loop
dec
cmc
js
stos
xor
push
stos
adc
fwait
mov
lret
aas
dec
iret
dec
inc
sbb
adc
mov
pop
pop
dec
jns
repz
pop
rcrl
pusha
mov
jg
stos
int
ret
scas
and
dec
loop
add
dec
or
repz
andl
or
jg
or
out
mov
and
lods
mov
ds
mov
jg
in
adc
dec
sub
or
jge
das
mov
xchg
push
add
xor
mov
xchg
movsl
pop
jns
mov
mov
dec
test
inc
sub
push
loop
push
rol
lret
fwait
inc
add
push
in
orl
push
shrl
or
mov
dec
jbe
dec
cs
daa
and
jp
ss
aas
jl
repz
and
xchg
inc
inc
gs
dec
jb
mov
pop
mov
lods
ret
and
pop
popf
gs
jbe
dec
and
dec
add
sti
push
xor
mov
dec
cmpsl
lcall
scas
pop
add
cli
fisubs
sbb
sub
lret
sbb
pop
adc
cmp
cmp
mov
push
dec
ds
gs
push
cmp
repz
dec
pop
in
mov
ficoms
xor
insb
aam
mov
sbbl
enter
and
xchg
inc
repnz
bound
lea
cmc
out
push
xchg
pushf
cwtl
inc
imul
jge
test
or
mov
out
cld
popf
pushf
xor
or
add
jae
fwait
inc
test
push
push
fwait
bound
cmp
lret
insb
jae
popa
inc
jp
rorb
mov
jb
push
push
add
dec
jnp
ss
dec
test
iret
pop
jo
iret
shl
mov
ss
shll
jecxz
std
inc
mov
or
call
aad
cmc
fisubrs
pop
add
lahf
cmp
stos
and
fmuls
loopne
call
lcall
inc
addr16
ret
rcr
imul
popa
dec
mov
sahf
adc
sub
xor
adc
sub
sbb
fcoml
lcall
xchg
jp
xchg
mov
rcrl
into
xchg
adc
scas
and
mov
xor
adc
jno
fnstcw
outsb
cmpsb
icebp
jle
pop
and
and
gs
sub
arpl
imul
xchg
lods
xor
add
lods
cld
jno
sub
add
roll
pop
test
jbe
das
xchg
add
cld
cmp
jmp
cmp
adc
pop
xor
push
into
mov
xor
fiadds
outsb
mov
lea
shlb
or
sarw
out
push
jp
sub
add
mov
fstl
push
xchg
cmp
inc
xor
ud1
mov
test
fldt
pop
mov
sahf
inc
jl
sahf
arpl
fnstsw
and
mov
inc
mov
sub
push
mov
aas
adc
sarb
add
jle
sbb
flds
pop
lock
pop
push
dec
js
iret
iret
push
in
and
data16
pop
inc
icebp
push
stos
jle
mov
mov
sbb
push
sub
popf
push
push
dec
dec
sub
lcall
cmp
fstpt
lcall
std
push
mov
frstor
lods
xor
stc
shlb
jae
cmp
in
push
xchg
xchg
adc
jno
mov
jbe
iret
jns
mov
fists
popa
xor
shll
ja
sbb
gs
divl
cltd
cmpsb
cli
pop
xchg
jns
lahf
xor
push
out
fdivl
xor
mov
mov
sbb
imul
cmp
xor
fnstenv
in
adc
pushf
js
pusha
addr16
mov
mov
dec
mov
aas
cmp
dec
add
push
aas
fs
test
sti
adc
js
push
mov
fsubrs
mov
fwait
jl
pop
cld
and
insl
test
or
int
mov
mulb
dec
and
add
jge
xlat
pop
lret
xchg
cmpsl
lahf
nop
pcmpgtd
out
xchg
mov
sub
add
or
jae
enter
xchg
add
xchg
gs
mov
inc
repz
leave
test
call
aad
vmread
mov
sub
lcall
shrb
inc
daa
fldcw
das
xchg
sub
jle
dec
add
jns
fs
fstl
movsl
mov
clc
and
sub
push
pop
std
sbb
sub
jle
cmp
add
cmp
jae
cmpsb
jge
xor
add
out
jle
lcall
in
push
stos
inc
cmp
pusha
push
cmp
xor
addr16
jle
daa
push
mov
lock
cmp
pop
dec
imul
mov
sbb
fldt
add
mov
hlt
iret
fwait
ret
jnp
js
or
in
lock
insl
mov
pop
jae
sub
inc
test
das
in
jl
cmpsb
and
cmp
aam
iret
dec
mov
roll
loop
arpl
in
cmp
jae
jnp
and
cwtl
mov
sub
cmpsl
push
push
inc
pop
pop
jbe
and
aam
xchg
in
mov
repz
mov
sub
loopne
pushf
xchg
daa
add
mov
lcall
jg
addr16
sbb
mov
add
xlat
xor
mov
repz
sub
subl
addr16
dec
insb
mov
sbb
shrl
mov
test
push
addr16
jnp
cltd
icebp
add
adc
and
cmc
jae
shrb
or
aad
cld
pop
loopne
xor
enter
adc
jmp
decl
pop
cs
cmpsl
ds
aad
pop
int
jle
rcl
outsl
pop
mov
call
nop
inc
jecxz
lea
inc
jle
rorl
nop
cmp
out
gs
shrl
jecxz
push
cmp
mov
jnp
cmpsb
dec
sarl
jmp
out
loopne
xlat
mov
lcall
iret
ret
popa
fwait
mov
pop
mov
jl
fcompp
lret
in
stos
xor
aaa
jmp
gs
push
lea
or
mov
jle
jmp
imul
xchg
or
addr16
cmp
push
xor
test
incl
cs
or
push
stc
xchg
mov
stc
xor
pusha
cwtl
sbb
dec
ja
jle
mov
aas
imulb
pop
popf
cltd
pop
sub
cmp
adc
jae
scas
xchg
add
xchg
scas
dec
inc
cmp
movsl
iret
aam
inc
mov
mov
mov
xlat
int3
mov
lock
cmp
and
enter
pop
dec
cmp
das
push
cmp
dec
punpckldq
adc
xor
jb
or
jne
sub
aas
jno
dec
cmp
cmp
cmp
js
lret
jns
shr
out
mov
pop
inc
stos
fmul
repnz
lods
aaa
xor
popa
inc
add
fldcw
insl
das
enter
outsl
movsb
add
xor
or
pop
mov
iret
cmp
sbb
xchg
adcb
cmp
push
sbbb
inc
popf
pop
push
push
rcrb
push
xlat
dec
jmp
xor
je
lock
sub
jle
cltd
and
fcompl
adc
data16
adc
sahf
or
cmp
lock
mov
adc
aad
jge
inc
aaa
jle
lahf
push
push
push
mov
add
or
data16
ss
lods
movb
les
mov
ds
xchg
outsl
lea
ja
push
sbbb
pop
fidivs
xor
push
lahf
jle
pop
lahf
cmp
aaa
or
loop
pop
add
sub
push
jbe
lret
bound
scas
testl
stos
cmp
or
or
rcl
cmp
mov
dec
or
mov
mov
shl
xchg
lods
inc
inc
jg
or
js
dec
daa
fdivrs
in
jg
dec
jle
mov
inc
mov
getsec
repz
push
dec
or
dec
aas
cmp
aad
js
add
dec
incb
and
int
and
out
into
test
push
add
enter
xchg
repz
gs
push
jle
inc
mov
pop
enter
and
mov
std
mov
or
xlat
and
and
into
mov
lret
push
das
push
push
fninit
cmc
mov
mov
lret
imul
sbb
add
push
sub
repnz
xchg
mov
pop
cmp
or
loopne
pop
mov
add
jns
cmp
cs
dec
js
adc
imul
jg
push
lret
int3
adc
out
pop
rorl
and
mov
pusha
xchg
mov
fsub
pushf
std
lret
aas
daa
xor
ljmp
xor
out
xchg
cmpsl
outsl
das
or
and
mov
dec
aad
ljmp
pop
dec
clc
repnz
mov
popf
xor
and
mov
dec
sahf
jg
pop
and
xchg
and
lds
mul
cmp
adc
jmp
shrb
repnz
inc
push
insl
icebp
daa
mov
lea
pop
cltd
jp
pushl
dec
out
popa
or
sbb
inc
imul
into
in
dec
jle
jnp
aam
outsb
idivl
push
js
into
rorb
mov
or
dec
daa
or
cmp
dec
push
leave
mov
imul
pop
test
or
sub
cld
inc
adc
add
jg
xor
cmpsl
daa
lret
push
mov
pop
stos
adc
movsb
ljmp
xor
xchg
scas
cmpsl
jo
cli
mov
daa
test
sub
test
push
mov
xlat
jl
out
pop
sbb
dec
mov
xchg
pop
pop
sahf
fisubl
sub
mov
ljmp
jmp
sbb
sub
pop
xchg
push
and
es
add
inc
daa
jle
pop
sbb
jg
pop
outsb
aad
outsl
add
das
les
cmp
sub
add
imul
lea
add
add
movsl
push
inc
pop
in
and
filds
lods
mov
pop
mov
js
pushl
mov
jns
and
aam
aaa
xchg
lods
push
add
pop
pop
out
int
sub
iret
lods
pusha
les
jb
sub
addr16
ror
jnp
dec
adc
jns
inc
adc
cmp
jecxz
xchg
lret
das
or
jle
iret
js
mov
out
neg
cmp
cs
loopne
xor
dec
sbb
imul
sub
leave
das
mov
ret
aad
jmp
clc
pop
in
jp
daa
jbe
iret
pop
stos
dec
fisttpl
fildl
inc
das
cli
in
loope
test
mov
stos
iret
xor
sub
shrb
scas
pop
and
fs
enter
mov
das
sarb
addr16
ffree
dec
sub
cmp
call
clc
int
inc
inc
xchg
cmp
fwait
inc
pop
dec
repnz
push
fs
iret
scas
mov
mov
popf
imul
jne
nop
jle
test
neg
repnz
aas
dec
lahf
jbe
and
icebp
fucomip
and
stos
mov
insb
mov
icebp
gs
or
cmc
js
pushf
adc
or
xor
xor
mov
add
adc
cmp
lods
xor
inc
imul
sbb
sbb
push
mov
in
fdivrl
pop
or
adc
int3
jno
ret
es
decl
in
sub
mov
cmp
mov
push
mov
sub
stos
jle
or
sbb
push
inc
push
xor
xor
dec
aad
aaa
dec
cmp
xchg
xchg
loopne
sbb
int3
pop
add
dec
cmp
daa
das
js
pop
pop
mov
fisubl
ret
and
jo
jnp
sbb
sub
jmp
icebp
sub
sahf
cld
addl
push
xor
hlt
popa
rclb
dec
and
push
out
test
and
jmp
sbb
aas
iret
scas
movsl
jle
sub
inc
push
xor
mov
rorb
sahf
shll
fdivrl
push
inc
push
jl
cmp
xor
ds
jl
loop
push
or
mov
movsb
pop
mov
scas
mov
int
arpl
cmp
sub
xchg
lret
cmp
leave
or
notl
loope
dec
jns
dec
ljmp
shrl
dec
or
ss
xor
xor
dec
xor
inc
pop
sub
push
adc
outsb
lret
dec
int3
mov
scas
sbb
or
mov
dec
dec
out
sub
add
xor
movl
ss
aaa
push
or
sbb
mov
or
cmpsl
or
mov
push
dec
lds
daa
pop
outsl
sub
dec
mov
aad
inc
pop
pop
sbb
sub
leave
scas
int
jle
inc
sub
or
cs
mov
dec
jle
mov
sub
incb
stc
ficomps
fcmovb
fucompp
out
push
in
je
mov
jl
fsts
outsb
sti
or
je
iret
dec
jle
cwtl
int
dec
loope
scas
push
adc
sbb
mov
or
jge
out
jle
sub
aaa
add
adc
push
jle
fcmovnu
das
sbb
jns
dec
add
sub
add
lahf
js
jg
push
pop
xchg
sub
xchg
andl
out
push
add
jns
cld
pop
into
in
or
add
cmp
mov
xor
mov
mov
add
bound
and
jecxz
pop
fsubl
dec
int
pop
inc
push
mov
push
lret
sub
wbinvd
lahf
outsl
js
lret
mov
jg
bound
scas
cwtl
mov
addr16
mov
jbe
inc
sub
sub
mov
ljmp
addr16
jb
or
aas
sub
hlt
xchg
das
popa
cltd
aas
clc
xchg
iret
ja
notl
mov
ret
andl
outsb
pop
push
hlt
sbb
adc
ficomps
rcrb
jno
push
xchg
outsl
cld
imul
daa
ficoml
push
cmp
mov
inc
sub
push
mov
mov
sub
mov
aas
addr16
jnp
roll
das
int3
inc
enter
cs
and
xor
stos
rcl
stos
adcl
aad
sbb
test
or
dec
push
sub
or
leave
adc
add
pop
and
ss
pop
pop
iret
lods
scas
dec
divb
scas
add
add
imul
dec
cmpsl
mov
inc
sti
fidivs
lret
subl
inc
cmpsl
jle
and
cmp
mov
and
mov
dec
fmulp
gs
aam
aad
mov
xor
push
or
outsl
inc
push
dec
cmp
adc
cwtl
negl
adc
movsl
sahf
std
add
out
movlps
jg
lock
push
push
or
mov
fs
lods
flds
lods
xor
pop
sbb
flds
push
inc
mov
cld
in
and
into
rcr
pop
dec
imul
gs
push
fcmovnbe
sahf
push
adc
or
out
mov
or
mov
fistps
add
outsl
push
test
mov
aad
sahf
and
mov
pop
xor
int
xlat
pop
pop
pop
scas
in
jge
mov
pop
js
inc
mov
inc
ret
repnz
cli
lret
je
dec
repnz
addr16
mov
cmc
lahf
daa
in
add
pop
push
xchg
in
lahf
scas
mov
ud2
push
repnz
cmp
loope
aad
ret
fwait
and
lret
jle
les
mov
cli
pop
jecxz
sub
js
sbb
ja
lret
jo
inc
mov
inc
loopne
mov
cli
stos
mov
push
outsl
mov
das
lcall
xor
cmpsb
mov
push
add
iret
jg
sbb
outsb
push
insb
nop
outsb
iret
stc
sahf
cs
mov
mov
pop
push
rolb
xor
das
sbb
in
addl
cld
sub
lret
incl
rcrb
je
ljmp
jle
inc
sbb
lret
hlt
arpl
cmpsl
int
ss
or
imul
out
and
cmpsb
sahf
or
iret
lret
scas
inc
jne
lcall
insb
pop
outsl
stos
inc
sub
lahf
mov
call
popa
out
loope
and
adc
adc
cwtl
in
std
cmp
or
imull
sbb
lods
add
mov
iret
jle
ja
cmp
ret
or
movsl
jge
int3
testl
lret
cmp
jge
cmp
or
gs
imul
clc
push
cmp
sub
push
push
test
jnp
clc
shrd
pop
jmp
addr16
or
push
sbb
dec
sets
push
inc
div
cmpb
test
xor
cs
in
cmp
dec
mov
pop
mov
stc
or
cwtl
out
jbe
and
inc
scas
mov
xor
cli
mov
push
ret
cmp
aaa
cmp
repz
adc
cmp
out
daa
xlat
in
movl
pop
pop
push
or
into
cs
mov
pop
xchg
xchg
inc
out
sbbl
aaa
test
xchg
or
xor
xor
insb
imul
int3
jle
push
adc
sub
mov
aad
xchg
ffree
and
dec
lret
cmp
inc
ret
dec
pop
scas
insl
not
das
in
jne
or
clc
adc
cmpsb
sub
or
repnz
movsb
cli
std
or
pop
stos
and
mov
lcall
test
repnz
addr16
test
pop
addr16
xor
sti
cli
std
push
sbb
jo
sahf
jg
mov
ljmp
out
mov
xor
movsl
xchg
sti
or
or
xchg
xor
leave
xor
mov
dec
pmulhw
fadds
dec
lds
jl
dec
inc
mov
lods
out
loope
adc
ret
cmc
mov
notl
mov
cmp
in
inc
lods
dec
clc
push
repz
mov
jl
lods
or
jp
sub
pop
mov
mov
xchg
outsl
cmp
fisubrs
fisubrs
push
mov
shlb
outsl
iret
imul
jnp
out
incb
sub
xor
lods
mov
popa
fistps
xchg
bnd
imul
lret
test
xlat
lret
test
xlat
ret
dec
ljmp
outsl
cmc
out
pop
sub
cmp
enter
jle
push
inc
inc
or
ret
add
enter
imul
mov
sub
imul
or
mov
out
cmp
arpl
dec
or
aad
add
fs
aam
out
xor
pop
fmull
push
add
mov
fildll
insb
mov
scas
sbb
xlat
inc
or
popa
cmp
pop
jg
adc
fldt
lock
mov
int
cmp
inc
pop
xchg
xor
mov
fsubrs
dec
push
daa
das
imul
scas
fnsave
test
dec
inc
shlb
js
jle
shll
outsb
lods
and
out
xchg
addr16
cmp
adc
fwait
mov
fwait
jp
cld
fsubl
push
repnz
inc
mov
adc
iret
cs
mov
cmp
iret
push
imul
lahf
std
lret
sub
pop
sarb
dec
push
dec
xlat
adc
mov
inc
repnz
leave
cmpsl
add
daa
es
pop
fadd
sub
pushf
cmc
neg
pop
cmp
jl
inc
xlat
gs
movsl
jne
insb
aam
jp
cmp
iret
test
popa
in
inc
or
mov
aaa
lods
xchg
fldl
mov
dec
fcmovne
xchg
xchg
aad
fisttps
and
xor
xor
imul
imul
xor
out
js
js
cmp
in
ljmp
test
inc
orb
pusha
inc
orl
test
pop
inc
pop
movsb
cmpsl
jl
mov
fwait
and
add
dec
sub
push
mov
ljmp
and
inc
incl
dec
int
and
and
push
fcoml
and
cmp
xor
pop
cs
or
cmp
sbb
cld
fstl
sarb
push
xor
push
inc
lods
jg
cld
push
push
push
jge
cmp
inc
shlb
sub
scas
ret
das
imul
cmp
cltd
lods
add
pop
jl
cmp
sbb
das
gs
jl
sbb
aad
sub
fldt
inc
popa
icebp
fildl
rcrl
mov
mov
js
sbb
aad
roll
inc
inc
mov
jle
inc
lock
aas
mov
out
or
pop
push
fidivs
adc
je
xchg
ret
les
add
add
popf
lret
int
cmpsl
pop
movb
adc
cmp
inc
leave
pop
add
mov
sub
fucom
xchg
inc
cmp
lea
add
std
fisubrs
add
pop
sbb
and
aaa
icebp
loope
jnp
or
roll
push
jecxz
mov
sub
dec
repz
rcrl
xchg
aad
aam
enter
incl
mov
xchg
lret
stc
dec
push
lcall
inc
test
mov
mov
xchg
daa
jle
sub
sbb
rcll
adcl
lock
sub
sub
adcb
jp
movsl
or
mov
js
adc
dec
popf
bound
das
repnz
addr16
out
rcrl
cmp
add
xchg
add
notw
test
cmp
sbb
sub
dec
and
adc
subb
je
inc
sarb
arpl
adc
stc
shlb
cmc
cmpsl
outsb
mov
add
ret
enter
into
daa
jbe
jmp
and
movsl
add
cmp
out
mov
cmp
dec
xor
pop
popa
mov
gs
pop
sbb
sbb
cld
cs
jecxz
mov
dec
rorl
push
sub
dec
dec
mov
inc
sub
inc
sbb
cmp
rcrb
iret
jl
arpl
and
lret
pop
mov
push
pop
mov
pop
repnz
cmp
lods
aam
mov
mov
mov
inc
mov
sti
int
xlat
sub
test
or
jbe
lret
scas
jne
out
cmp
and
jp,pn
int
add
mov
xlat
push
cli
pop
leave
pop
dec
push
jno
cmp
adc
adc
sbb
cmp
lds
nopl
cmp
sub
fdivr
out
xchg
das
pop
inc
adc
inc
jo
jmp
sub
fs
xchg
into
jns
jle
mov
fsubs
or
scas
jg
inc
inc
fldenv
adc
scas
idiv
outsl
mov
cmovne
dec
enter
dec
pop
out
shrb
xchg
mov
push
out
cmpsl
cvttps2pi
sub
lds
lods
enter
pop
lret
mov
mov
mov
loope
pop
das
outsb
jmp
xchg
in
lahf
test
iret
mov
and
icebp
mov
repnz
and
inc
cmp
mov
scas
xchg
mov
das
cmp
rclb
cmp
inc
lds
cmp
int
dec
sbb
sar
xor
daa
stc
mov
aaa
jg
push
iret
les
int3
rcll
or
ja
jno
fdivs
sub
jecxz
mov
cltd
jle
aas
mov
sbb
pop
test
xor
jp
push
or
mov
inc
lret
mov
int3
sarl
mov
add
push
imul
xchg
stos
cld
fbld
scas
fs
xchg
imul
out
outsl
popf
pop
lds
rcl
mov
aas
mov
jp
mov
or
cmp
mov
popf
fadd
mov
xchg
movsb
mov
push
setge
in
fisubrl
or
cltd
out
cmp
sub
cltd
or
jl
mov
inc
lret
inc
fcmovnb
cmc
xchg
nop
jns
scas
pushf
adc
roll
xchg
stos
icebp
mov
andl
mov
shll
add
loop
mov
std
sbb
mov
sarl
jns
jno
push
pop
and
add
push
lcall
cmp
or
out
js
inc
mov
mov
cmc
xchg
cmp
add
leave
xchg
xchg
icebp
jns
sarb
test
cmp
in
testl
test
scas
gs
scas
int
cmp
and
scas
mov
add
js
xor
cwtl
push
xchg
adc
dec
add
sbb
inc
jg
cmp
inc
nop
adc
cmpsb
cli
adcl
jle
adc
push
fnstenv
ret
mov
dec
cmp
fsts
push
jmp
sub
and
add
mov
cmp
fildll
lahf
ljmp
or
fisttpll
push
adc
jmp
cwtl
pop
xchg
push
test
sub
out
cmp
pop
lret
pop
dec
addr16
shrl
jge
sub
call
dec
int3
sbb
int3
push
dec
push
hlt
iret
push
ja
pop
cmc
pop
cmp
sbb
daa
fldl
jbe
sub
push
inc
mov
mov
mov
pop
lret
cmp
es
addr16
sub
aad
bnd
stos
jecxz
rclb
ds
call
adc
cmp
div
loope
push
or
jmp
mov
jnp
mov
int3
mov
movsb
and
mov
and
out
les
dec
int
jbe
mov
lcall
arpl
int3
jae
xchg
imul
cmc
or
or
arpl
scas
ja
dec
mov
dec
pop
xor
push
nop
add
sub
lahf
lret
lds
push
push
lods
cmp
inc
js
and
or
jge
sbb
inc
rorl
mov
jb
das
jae,pt
xor
sub
and
lods
sub
roll
negb
jg
popa
test
bndstx
cwtl
xor
push
xlat
jge
push
iret
scas
xchg
cmp
xchg
cmp
sub
sbb
mov
outsl
jno
pusha
les
aaa
addr16
dec
pop
gs
lods
std
or
sub
dec
add
ljmp
cmp
sub
mov
pop
inc
pop
pop
push
dec
cmp
lahf
and
mov
xchg
cmpsl
out
cmp
andb
dec
push
movl
outsb
enter
addr16
mov
sahf
push
xchg
data16
lds
or
mov
cltd
xchg
add
xchg
iret
pop
xor
pop
outsl
out
xor
aad
fwait
enter
leave
push
mov
add
sub
mov
cli
inc
jl
mov
sti
les
dec
sub
sbb
or
pop
add
dec
jnp
inc
int
jae
and
call
cmovs
adc
testl
ret
sub
stc
jae
aad
cmp
xor
mov
sbb
inc
out
dec
gs
or
pop
jl
in
rorb
inc
sbb
xchg
es
enter
add
mov
gs
sbb
cmpsl
dec
jecxz
cs
lds
inc
jecxz
out
in
out
test
dec
lock
cli
ret
sbb
rcl
lahf
add
cmpsb
int
push
xlat
loope
out
icebp
cmp
xchg
stos
mov
dec
pop
cltd
cmpsl
inc
add
lret
sbb
mov
xchg
mov
out
xchg
pop
scas
enter
xor
sub
mov
xchg
sti
scas
aaa
lahf
cmpsl
dec
lahf
cs
out
mov
test
push
in
cmp
and
mov
add
scas
lods
push
mov
imull
inc
pop
xchg
hlt
daa
sbb
mov
add
test
cmp
or
out
add
mov
pop
repz
and
iret
or
sub
and
sbb
adc
cmpsl
test
xor
sub
push
or
inc
push
cld
shll
xor
movsb
xchg
xor
mov
sub
or
lret
cmpsl
mov
or
cmp
sub
and
jecxz
or
iret
push
outsb
iret
or
mov
inc
js
inc
xor
dec
push
stc
pushf
aaa
rcl
sar
scas
and
pop
sbb
adc
pop
sub
gs
loop
or
xor
test
pop
test
fmuls
add
cmp
jo
cmpb
aaa
pop
lds
daa
push
out
lret
pushf
bnd
add
xchg
or
mov
dec
jae
outsb
aaa
jne
sti
xlat
cmpsb
gs
jne
dec
cmc
xor
loopne
dec
mov
add
shlb
imul
cltd
pop
pop
cmp
push
cmp
dec
aam
mov
dec
cmp
in
aam
roll
push
sbb
adc
and
jl
cmp
pop
popw
pop
in
pop
xor
xlat
cmp
push
sub
aam
out
or
push
pop
das
mov
leave
mov
push
gs
les
xchg
leave
lds
cmp
je
jg
pop
jle
mov
sub
cmp
jb
mov
scas
dec
sub
mov
push
add
std
pop
cmp
outsb
movsb
jl
in
mov
adc
shrb
jae
cmp
push
lret
movsb
cs
inc
ljmp
imul
ljmp
popf
mov
mov
adc
cmp
dec
jecxz
cs
inc
les
repz
stc
jl
sahf
shrb
pop
gs
fldcw
dec
mov
arpl
mov
imul
add
mov
inc
addr16
aas
mov
scas
std
stos
das
stos
out
inc
pop
aaa
lret
shlb
or
rdpmc
loopne
shrb
fdivp
scas
in
rclb
inc
pop
fnstsw
aas
sarl
xor
mov
or
scas
aas
xchg
sarl
fstl
mov
push
or
dec
inc
push
movsb
add
push
cmc
mov
add
mov
out
movsl
push
std
or
testl
cmp
rcrb
push
inc
test
xchg
push
dec
orl
jnp
data16
out
cmp
stc
mov
mov
ds
dec
push
sbb
pop
mov
lea
inc
sub
and
sbb
push
sarb
imul
fcomi
lahf
ds
mov
and
jp
pop
int3
imul
jmp
adc
mov
aam
sbb
mov
xchg
subb
cmp
mov
inc
cmpsb
lcall
pop
movd
mov
fldcw
bound
jo
pusha
and
ljmp
xchg
mov
xor
imul
mov
sbb
decl
cmpsl
mov
jle
push
stos
cmp
inc
test
fists
sti
xchg
cltd
push
jmp
sarb
push
mov
loopne
sbb
or
lret
or
pop
cltd
movsl
cmp
ljmp
rcll
subl
add
cmp
scas
stos
xor
stc
push
testb
hlt
int
cwtl
das
jno
mov
lret
insb
cmp
or
and
aaa
es
or
cltd
xor
in
fbstp
cmp
mov
shlb
sub
aas
insb
xchg
mov
mov
cmc
lahf
jmp
ljmp
in
mov
jne
in
xchg
jnp
scas
arpl
repz
cmp
jge
scas
repz
sub
or
pop
jno
stos
jnp
push
pushf
cmp
in
syscall
shll
xor
test
lock
mov
inc
enter
pop
es
sbb
outsl
sarb
movsl
cmp
divl
movq
jl
ss
inc
out
mov
inc
lret
sbb
repz
xor
mov
or
and
pop
fildll
das
xor
jae
aaa
into
mov
popa
fwait
sub
shl
or
pop
inc
or
lods
fsubrl
js
or
xor
pop
mov
into
fistps
js
aam
cmpsl
and
ss
es
ds
jo
js
ficoms
imul
mov
jp
and
inc
fisubs
mov
mov
stc
xchg
mov
stos
adc
and
test
test
out
mov
adc
or
push
scas
xlat
cmpsb
mov
aaa
mov
out
add
dec
xor
mov
ret
and
lods
and
mov
addr16
fisubrs
daa
test
lret
adc
lods
dec
popa
xor
fnstenv
pop
js
mov
fsubrs
js,pt
sbb
iret
mov
mov
fwait
push
cmpb
fstpt
fstps
ret
jne
xor
push
iret
loope
push
jg
and
cmp
leave
xor
mov
dec
xlat
cmc
cmp
std
xor
dec
sbb
xor
pop
js
lea
push
lods
scas
test
call
in
xchg
lods
mov
or
pushl
repz
cmp
test
push
into
int
ss
fnstsw
pop
loope
aad
test
int
shrl
pop
mov
inc
pushf
stos
stos
addr16
test
cld
inc
jg
mov
pushf
divl
lahf
in
inc
jbe
aas
pop
dec
pop
or
sub
cld
dec
pushf
cmpsl
sub
les
iret
das
adc
stos
mov
lea
icebp
loope
fdivrl
das
movsl
into
enter
sub
aas
ljmp
and
xor
pop
add
or
xor
lret
sahf
xor
int3
pop
into
push
dec
mov
adc
iret
arpl
pop
test
aaa
inc
push
scas
ret
fsubrs
jl
rolb
xlat
aaa
js
lds
iret
mov
scas
sub
rcrb
dec
and
jno
lcall
lods
sbb
pop
ljmp
loopne
pop
mov
push
sarl
push
scas
insb
ljmp
pop
scas
push
push
pushf
and
jecxz
mov
scas
iret
and
jge
pop
shrb
mov
sub
adc
cmpsl
and
xor
sub
cmp
ds
pop
leave
das
aas
xor
sbb
inc
xor
add
mov
mov
adc
cmp
js
das
pop
xchg
in
or
xor
jns
arpl
jge
or
movsl
outsl
push
das
sbb
imul
lods
jmp
jae
ss
hlt
aas
out
adc
xor
rolb
repz
lret
loop,pn
xor
mov
lods
imul
adc
push
fistpl
push
inc
pop
lcall
sub
inc
inc
or
iret
pop
inc
pusha
mov
mov
inc
sbb
cmp
mov
sub
dec
dec
dec
adc
aad
iret
aas
dec
add
iret
xchg
mov
dec
inc
xchg
jnp
mov
lahf
aas
add
shlb
mov
push
pop
lret
lods
add
and
jecxz,pt
dec
shll
pop
scas
inc
stc
roll
andl
cmp
aad
daa
cltd
xchg
sub
pop
lods
xlat
mov
xchg
pop
outsl
inc
inc
add
mov
iret
xor
pop
mov
scas
out
repnz
out
jbe
add
jle
fildl
pop
pop
jno
pop
jecxz
leave
lcall
mov
mov
xchg
ljmp
lahf
mov
jbe
iret
sbbl
fistpll
out
xchg
cmp
es
and
sub
fs
and
pop
adc
aaa
xchg
cmp
fildl
push
xchg
ds
bound
push
jno
je
adc
aas
sub
mov
cmp
stos
cmp
push
push
cltd
inc
mov
icebp
int
cmp
and
inc
cli
add
ljmp
or
call
push
xchg
xchg
adc
insb
push
inc
sbb
add
cmpsl
icebp
jge
push
nop
adc
adc
dec
cli
dec
stc
jns
pop
out
or
mov
cmc
mov
iret
cmp
push
push
int3
xchg
imul
pop
dec
test
aad
hlt
pushf
mov
sbb
push
pop
mov
test
fs
push
cmp
pop
mov
dec
cmpb
es
jmp
cmp
mov
cmpsl
mov
in
cmp
mov
jecxz
stos
lods
jns
int
add
jo
xchg
mov
repz
movsl
lahf
ds
or
xchg
lret
mov
aad
stos
and
inc
out
cmpsl
inc
add
or
loop
out
sarl
sub
inc
pop
xor
movsl
xor
jg
inc
push
arpl
sub
jns
cmpb
xor
cmp
xor
mov
mov
jns
xchg
cmp
xchg
outsb
or
push
xlat
push
fwait
decl
mov
lea
popf
jb
sbbl
xor
cmpsb
lds
sarb
into
fiadds
fdiv
xchg
push
loopne
pop
xor
sub
xchg
fs
dec
test
movsb
lret
dec
xchg
adc
jmp
mov
repz
mov
dec
pop
int3
mov
dec
nop
lret
inc
das
dec
js
xchg
roll
cmp
repz
enter
cmp
jmp
and
mov
add
mov
cmp
js
sbb
and
adc
mov
inc
inc
push
jmp
incb
movsl
mov
dec
push
mov
inc
stc
adc
pushl
mov
pop
push
insb
je
adc
push
ret
sub
jp
cld
and
inc
push
sbb
fidivs
sub
xor
cmpsl
movsl
aaa
mov
pop
push
dec
mov
push
cmc
mov
test
xchg
in
mov
arpl
mov
lret
mov
mov
stos
ds
and
or
jl
mov
and
xchg
outsb
sbb
pop
push
jle
std
nop
scas
mov
push
test
dec
stos
sub
pop
imul
or
xor
pushf
inc
test
aas
and
lret
push
pop
sub
sub
lret
pop
push
xor
or
and
movsl
mov
ds
outsl
push
sbb
xchg
shl
fnsave
cmp
mov
das
add
ret
push
in
push
inc
sti
cld
in
sub
inc
repnz
push
notb
fwait
iret
dec
inc
fnstcw
sbb
int3
imul
jns
pusha
lds
sub
or
mov
aas
clc
xchg
dec
adc
add
mov
fwait
pop
cmp
add
ds
stos
addr16
xlat
or
cs
pop
data16
cs
ret
inc
add
clc
faddl
das
xlat
cmc
les
out
push
mov
xor
push
push
loope
fisttpll
std
incl
fwait
sub
pop
dec
pop
rcr
scas
ljmp
cmp
cltd
lds
cmp
sub
repz
ja
mov
inc
scas
mov
stos
in
sti
mov
addr16
mov
idiv
scas
faddl
and
rorb
outsl
jecxz
add
js
jmp
das
lret
cmc
sahf
push
addr16
xchg
or
imul
inc
fldenv
ret
sbb
ljmp
rolb
sbb
cld
cmp
jecxz
jge
xor
fmull
sub
pop
or
adc
pop
xchg
iret
jnp
popf
stc
int3
adc
ss
aas
and
and
cmc
scas
scas
push
icebp
dec
add
cmp
or
jge
sub
dec
xor
scas
xor
push
movsl
bound
sub
loopne
ret
daa
cs
ds
jl
pop
cmc
imul
jb
stos
mov
stos
iret
inc
pop
ds
sub
mov
cltd
daa
mov
jnp
pop
xchg
test
ret
jnp
add
mov
pop
into
add
inc
bound
cwtl
lea
push
adc
iret
loopne
mov
sub
imul
les
inc
dec
push
js
call
jge
inc
mov
mov
out
and
xchg
pop
imul
push
jg
std
les
aaa
enter
lret
js
inc
repz
jae
jmp
and
inc
sahf
push
pop
inc
sbbl
js
mov
xchg
mov
push
lret
lea
bound
inc
orb
mov
int
cmp
in
cmp
push
sarb
xchg
xor
push
jb
int3
lcall
testl
jnp
rol
jmp
ja
test
inc
jmp
inc
enter
mov
rolb
loop
xor
cmp
adc
and
sbb
mov
xchg
stos
cltd
adc
add
mov
daa
cmpsl
out
adc
jae
mov
dec
xchg
push
dec
shl
in
inc
movsl
xor
fsubrp
repnz
dec
xor
dec
ss
dec
lahf
ds
lods
sub
mov
iret
mov
and
test
adc
pop
mov
mov
xchg
out
std
inc
test
xchg
jnp
test
rolb
or
adc
inc
outsb
mov
out
and
cmp
adc
movsl
xchg
aaa
out
dec
negl
iret
cmp
dec
dec
shlb
mov
pop
push
pop
daa
push
inc
dec
xor
roll
inc
pop
ret
iret
cmp
fwait
call
pavgw
push
add
daa
xor
std
das
pop
rcll
sub
mov
xor
inc
add
push
icebp
add
leave
lret
pushl
jg
and
pop
or
adc
add
push
adc
push
lcall
xor
dec
jnp
xchg
sub
roll
xlat
cmpsb
jge,pt
punpcklwd
jno
inc
add
nop
pop
aaa
pop
out
mov
push
lret
push
shrb
aas
stos
int
movsl
fcmovnbe
or
pop
mov
mov
stc
mov
adc
mov
pop
mov
xchg
lret
jb
clc
xchg
xchg
dec
push
xor
inc
jnp
lret
hlt
push
das
mov
adc
and
out
cmp
xchg
dec
popl
movsb
idivb
mov
cmp
int3
mov
add
js
xor
dec
sar
sub
jle
jg
js
jb
lret
mov
cmpsb
in
roll
lods
push
mov
jle
es
cli
ret
enter
outsl
mov
inc
and
jmp
divl
hlt
xchg
push
pop
fadds
dec
lahf
jmp
fisubrs
cmp
xchg
test
push
mov
jb
lret
int
pop
outsb
adc
mov
mov
jmp
fisubl
mov
jecxz
sti
sahf
jle
push
sub
xchg
out
imul
add
nop
ss
cmp
jle
lcall
aaa
lret
and
inc
sahf
in
sub
adc
outsl
pop
lods
punpckhbw
jge
int
jnp
mov
test
jecxz
sub
push
sbb
shrl
insl
pop
sub
xchg
push
cmp
lods
pop
test
scas
add
fistl
or
or
pusha
sub
idivl
enter
clc
cld
jg
xchg
push
push
mov
std
xchg
das
js
and
aaa
stc
in
shld
mov
pop
push
outsl
sarl
aad
lret
sbb
gs
or
lret
inc
or
fldenv
incb
inc
pop
pop
add
sti
push
add
and
add
inc
pop
js
sti
js
rclb
or
xchg
lods
daa
xor
das
xor
scas
rorl
mov
aam
mov
push
xor
pop
movsb
sub
pop
jle
inc
pop
test
das
cmp
rol
or
sub
jle
shl
pop
test
or
mov
repz
sbb
sti
repz
lret
or
push
int3
dec
sbb
aad
stos
pop
pop
jge
sbb
xchg
lea
pop
mov
and
dec
fstps
mov
sub
inc
lds
xor
or
push
pushf
les
xchg
sbb
mov
ret
scas
and
cmp
pop
aas
ja
and
aad
or
xchg
and
cli
add
loopne
inc
into
fisttpll
dec
ds
fcmovnu
fisttps
jg
scas
inc
sbb
repz
cmp
test
mov
andb
jmp
pop
repz
das
add
outsl
mov
inc
sub
movsl
decl
das
mov
inc
adc
ss
bound
aam
lds
mov
inc
adcl
js
cmpsb
incb
push
mov
insb
sbb
jle
mov
out
loope
xchg
enter
xor
cmp
shlb
fucomp
pop
rcl
and
push
push
sbb
inc
leave
das
sbb
mov
cmp
inc
es
xchg
add
outsb
push
data16
push
adc
mov
inc
fcompl
xorl
mov
addl
inc
imul
push
mov
pushf
stos
sub
sub
dec
nop
jmp
mov
fnsave
sbb
loop
sbbb
and
scas
mov
adc
xor
call
dec
cmp
mov
test
loop
in
test
inc
fsubrp
mov
add
jg
jle
in
sub
aaa
mov
jle
popf
rcll
scas
shlb
popf
cmpsb
popf
pand
sarl
inc
xor
xchg
daa
xchg
or
cmp
inc
aaa
jle
pop
shrl
and
xor
mov
das
xchg
or
lret
daa
add
mov
fadds
push
mov
leave
pop
in
xor
outsl
pop
inc
sahf
pop
ret
stc
inc
mov
out
loop
ret
mov
popa
sub
xchg
psllw
loopne
hlt
test
call
gs
jmp
cmpsl
cmpb
int
sub
cltd
fildl
aas
bound
ljmp
pshufw
jp
call
das
xor
sub
gs
dec
test
iret
das
pandn
pop
jns
jbe
push
in
jecxz
sbb
pop
aaa
repnz
stos
mov
insb
or
xor
outsb
pop
jl
inc
shll
cmp
out
xor
stc
addr16
mov
das
or
testl
jmp
mov
aad
mov
dec
sbb
dec
int
das
jnp
pop
jg
ljmp
jle
aam
bound
shl
lret
cmp
xor
in
imul
cs
dec
loop
sbbl
cmp
ror
fists
cmpsl
in
fistpll
pop
inc
dec
mov
cmp
pop
stos
sti
xchg
and
mov
xor
faddl
aas
xchg
ret
xor
inc
jg
mov
fildll
mov
push
inc
test
jle
cltd
jae
cwtl
pop
pop
xchg
mull
clc
cld
lods
cmp
int3
dec
enter
mov
outsl
and
scas
sbb
mov
aas
ds
les
out
rcr
aad
push
cmp
mov
sub
mov
dec
inc
xor
adcb
cld
push
addl
mov
out
sub
cmp
in
mov
pop
jbe
add
or
jns
push
dec
cmp
cmp
aaa
sarl
mov
shrb
jnp
neg
pop
bound
mov
cmc
rcll
cmp
pop
inc
pop
adc
cmpsl
mov
mov
adc
lret
out
lahf
xchg
in
xchg
mov
sub
dec
xor
inc
in
xchg
out
test
push
into
test
cmpsl
int
cmpsl
and
jge
or
and
pushf
addl
pop
cmp
mov
repnz
mov
dec
sahf
dec
cmp
int
dec
cli
mov
fld
mov
outsl
cmp
shld
jg
fidivs
cmp
dec
es
cmpsb
mov
adc
fbstp
fbstp
out
push
lret
lahf
clc
cmp
test
mull
xor
sarb
popf
xor
push
cmpsb
push
gs
dec
xchg
push
cld
icebp
pop
mov
imul
jp
aaa
lods
mov
adc
sbb
and
dec
int3
cmp
mov
jb
lock
mov
dec
inc
adc
or
std
and
xor
pop
aas
mov
xchg
aas
shlb
sub
push
sahf
loop
cmp
mov
ss
das
jle
xchg
in
pushf
lock
jnp
inc
cli
sbb
xor
shlb
out
fcmovbe
or
xor
inc
xor
lahf
add
popf
pop
mov
cmpsb
in
incl
sub
pusha
scas
xchg
fldt
adc
cmp
loope
push
imul
cmpsb
inc
dec
jb
ljmp
inc
adc
scas
loope
aaa
rcrl
repz
into
push
ljmp
pop
mov
mov
cmp
sub
jl
enter
adc
dec
dec
daa
push
aaa
js
dec
pushf
sub
xchg
dec
negl
pop
sarb
pop
scas
mov
xchg
gs
mov
addr16
out
lods
scas
das
pop
mov
pop
cmp
das
cmp
cmpsb
data16
int
xchg
pop
es
xchg
pop
push
xchg
cmpsb
add
pushl
mov
sahf
dec
add
fstpl
pusha
test
loop
sbb
cmp
inc
dec
test
jle
pop
lret
out
dec
aaa
jecxz
cmpb
stos
xchg
insl
add
imul
adc
inc
test
xchg
outsb
in
outsb
fcmovbe
sub
push
fmuls
dec
mov
push
outsl
mov
sbb
mov
or
cmp
test
out
arpl
pop
dec
mov
divl
loopne
in
sarb
jle
lahf
ljmp
and
in
xor
subb
addr16
xor
imul
popa
mov
push
sbb
adc
pop
daa
aas
inc
aaa
aas
aas
inc
xor
pop
jle
cmpsb
fists
outsb
mov
cmc
push
add
or
inc
xchg
xchg
pushf
jmp
dec
daa
andl
lret
push
mov
mov
push
loope
out
mov
aaa
sub
add
and
or
std
cmpsl
andl
loop
jb
sbb
add
dec
dec
addr16
jle
fstps
push
push
xchg
xor
xor
sub
out
mov
lahf
jle
sub
repz
xlat
scas
popf
addl
and
cmp
sti
push
stos
jecxz
insl
sbb
add
ret
xor
in
mov
enter
and
imul
inc
insl
inc
mov
mov
push
das
aas
mov
mov
test
cmc
sbb
mov
add
sub
jle
adc
push
jno
dec
or
pushf
cmp
fisttpll
mov
jg
cmpsb
mov
push
iret
loopne
push
sub
push
inc
or
inc
ss
stos
in
ss
mov
inc
addr16
lcall
loop
imul
sub
xor
jl
jns
or
icebp
jbe
push
test
arpl
and
out
mov
dec
cmp
shrl
cmp
sub
and
inc
pop
dec
int3
inc
aaa
pextrw
and
mov
lds
mov
jno
shlb
xchg
inc
pop
clc
cmp
jmp
sub
mov
stos
push
cs
cmp
cmpsl
or
dec
pushl
inc
imul
mov
inc
scas
jmp
icebp
cmp
inc
push
push
nop
push
popf
daa
push
xchg
push
jle
fimull
popf
jl
mov
sbb
inc
and
aas
cmp
add
sub
or
sti
inc
popf
pop
xor
pop
add
and
xlat
imul
imul
xor
sub
iret
dec
xchg
or
dec
inc
aas
iret
scas
imul
pxor
cmp
dec
or
pop
dec
add
add
or
aaa
mov
jne
aad
mov
inc
rorb
pushf
xlat
mov
push
jecxz
mov
or
daa
out
jle
xchg
mov
fisubs
lods
mov
dec
inc
jp
jo
mov
jl
imul
daa
inc
push
dec
inc
in
sub
aaa
jbe
out
xchg
sti
fisubs
stc
fxch
inc
mov
jb
and
das
fisttps
lahf
or
mov
mov
cmp
lds
into
lret
out
mov
ss
mov
add
movsb
mov
pop
aaa
lahf
xor
insl
psubusw
or
dec
aas
fucomip
push
stos
cwtl
cmpsb
mov
aad
push
inc
aam
fisubrl
std
mov
dec
mov
mov
mov
rcr
daa
movsl
scas
fprem
cmc
or
aas
aas
xor
ljmp
lods
jge
pop
aaa
aas
jae
or
sub
gs
daa
dec
aad
insl
ret
idiv
jle
add
cmpsl
in
pop
pusha
xchg
ljmp
jae
shrb
pop
cmp
in
xor
arpl
aas
jl
jns
sahf
int3
mov
mov
dec
cld
loope
leave
jns
lcall
adc
push
pop
push
call
push
lahf
push
ret
jb
rcll
dec
scas
xor
dec
jge
imul
lret
out
es
adc
out
out
cmp
sbb
fstpl
iret
sub
push
sub
or
adc
add
lahf
sbb
push
into
sub
push
adc
insl
out
pop
scas
dec
jle
cmp
scas
ficompl
xlat
inc
mov
mov
mov
dec
fisttpl
rorl
cltd
pop
lret
js
incl
and
icebp
aas
mov
xchg
faddl
push
sbb
insb
push
leave
shrb
movaps
mov
xchg
sti
leave
mov
pop
add
cmp
adc
mov
and
enter
out
push
cmp
ret
dec
arpl
sti
cmp
fstpl
das
xchg
pop
and
xchg
xchg
pop
lds
ja
jns
xchg
orl
cmp
sbb
mov
aaa
xor
fidivrs
inc
xor
pop
cmp
lods
jle
sub
push
test
out
mov
pop
and
jmp
out
fnsave
sub
call
inc
inc
mov
or
mov
bound
lret
sub
scas
jb
xchg
mov
push
outsb
cmp
cmp
ret
or
sbb
inc
cmp
iret
lods
sub
add
dec
aas
adcb
call
mov
and
loope
jg
cmp
dec
in
inc
cmp
aam
sbb
mov
in
dec
inc
out
aam
mov
mov
shll
pop
mov
div
std
inc
in
rclb
stc
jmp
out
jg
and
xor
and
jns
xchg
popa
inc
sbb
lock
cmp
or
mov
pop
adc
mov
inc
jae
lret
pop
add
rorl
inc
mov
fmull
mov
daa
inc
cli
test
arpl
scas
dec
mov
pop
icebp
jne
push
mov
imul
iret
push
sbb
cmp
jbe
rorl
stc
mov
aam
mov
scas
or
lds
lds
cmpl
sbb
sub
mov
out
inc
mov
sarl
out
or
inc
rorl
lret
loopne
popa
push
pop
mov
stc
inc
cli
orl
lea
push
es
mov
repz
inc
xchg
pop
dec
mov
icebp
jnp
mov
je
int
dec
loopne
out
std
stc
movsb
xor
jmp
loope
cs
xor
jecxz
mov
push
mov
pusha
xlat
jle
scas
cmp
lret
sarb
ds
jg
ret
push
cmpsb
mov
jle
loop
jmp
jb
cmp
or
movsl
jle
sar
sub
mov
adc
ret
js
ficoml
and
int
adc
outsl
and
stos
pop
adcl
fsubrp
dec
dec
xlat
ret
ret
stos
pop
adc
dec
jmp
jmp
add
gs
ljmp
fs
lds
push
imul
stos
push
pop
ljmp
outsb
cmovb
mov
fisubrs
xor
push
cmp
and
xchg
dec
xlat
inc
adc
lret
xor
mov
inc
mov
test
arpl
inc
repnz
lcall
xchg
mov
xor
adc
add
mov
push
cmp
lcall
fldl
lret
push
notl
scas
inc
das
es
and
das
ja
sbb
add
fs
rcll
loope
sti
addr16
das
fdivp
adc
pop
add
stos
shr
or
pusha
pop
jp
jp
lret
jle
pusha
insl
hlt
lods
sub
das
pop
mov
sub
cltd
fs
inc
push
in
fidivl
jbe
int3
xlat
bound
les
rcrb
daa
and
push
fstpl
push
jge
fwait
bound
jg
popf
and
arpl
ss
and
mov
lahf
mov
cmp
lahf
sbb
stc
mov
jns
test
test
mov
pop
jb
ret
pop
mov
jb
aaa
sub
push
cmp
shrb
gs
nop
pop
and
jmp
mov
dec
daa
sbb
pop
movsb
cmp
out
cmpsb
xor
ja
lret
out
lock
aas
push
nop
cmp
add
ljmp
pop
imul
jbe
ljmp
push
out
mov
into
push
imul
call
lret
cmc
push
jns
clc
mov
test
fwait
jge
inc
push
xchg
daa
and
jbe
mov
xchg
mov
dec
mull
fnsave
je
add
mov
arpl
adc
fsts
roll
dec
push
adc
dec
sarl
leave
xchg
mov
cmp
jg
nop
mov
pop
cmp
icebp
mov
mov
inc
ds
call
insl
mov
jnp
lret
add
jbe
fcmovne
mov
jne
sub
inc
mov
rcrl
adcl
mov
pushaw
cmp
and
adc
or
lret
dec
ret
js
jb
mov
int
cmp
jl
sarl
mov
in
rorl
cmp
jecxz
mov
pop
sbb
or
mov
push
mov
pop
jne
mov
nop
mov
mov
or
into
aas
mov
popa
aas
sub
aam
lds
adc
mov
scas
sub
and
ds
push
cmp
bound
movsl
lock
jle
xchg
hlt
jg
xor
daa
sub
in
inc
inc
sub
sbbb
mov
mov
or
dec
pop
fs
mov
mov
jp
or
dec
dec
pop
data16
push
xor
scas
inc
pusha
sub
pop
xor
jne
inc
push
in
mov
sub
xor
jnp
imul
dec
rcll
cmp
inc
sbb
jg
mov
jp
and
aas
icebp
sub
jg
xor
lahf
int
scas
dec
cmp
lahf
inc
or
out
or
sbb
jl
out
das
lock
aas
ja
or
aas
sub
ja
pushf
sub
js
jg
push
xchg
xchg
int3
xor
sub
jbe
in
inc
add
pop
js
shlb
dec
das
mov
dec
xchg
or
lret
clc
push
mov
push
dec
mov
in
dec
xchg
aaa
ret
push
in
mov
int
dec
mov
jae
sub
fdivrp
lret
jge
pop
cmp
push
add
in
ret
inc
xor
data16
xor
push
int3
xor
xor
jp
int
push
aaa
mov
andl
dec
out
jb
mov
cmp
addb
dec
pop
mov
and
imul
incb
and
xor
inc
mov
mov
jle
pushf
xchg
sub
mov
add
mov
data16
push
adcb
out
adc
push
inc
arpl
sbb
sub
jl
lods
mov
jg
adc
cltd
loop
cmc
daa
mov
cmp
sub
pushf
inc
in
adc
push
gs
sub
lahf
mov
das
pop
mov
xchg
xchg
movsl
sub
pop
pop
sub
jcxz
enter
adcl
lock
push
mov
or
in
imul
in
int3
push
inc
inc
test
and
lods
sarl
jne
call
std
mov
lret
push
add
std
jb
enter
inc
xchg
shr
push
stc
jb
mov
cmp
aam
xor
push
and
inc
lea
and
das
dec
push
pushf
neg
jg
mov
xor
mov
loop,pn
push
cmp
int3
mov
rorb
xchg
sub
inc
or
pop
js
stos
inc
enter
push
inc
cmp
pop
mov
xchg
pop
dec
jle
pop
pusha
fs
fcomp
mov
jbe
cmp
out
test
cmp
dec
je
inc
xor
adc
and
xor
imulb
lock
push
test
sbb
adc
sub
shll
dec
mov
xor
pop
insb
push
inc
sbb
jbe
fcomps
add
idivl
cmp
sub
or
cli
xchg
xchg
cli
rcl
fcompl
inc
jns
pop
pop
leave
push
push
push
pop
mov
lret
subl
cmc
jp
push
stos
sarb
in
das
fdivr
ja
sbb
leave
and
cmp
adc
xor
aaa
add
or
add
sub
fildl
cld
mov
cmp
xor
xor
jbe
daa
xor
fldcw
ja
and
inc
dec
cmp
outsl
jmp
and
daa
mov
sti
or
sub
test
xor
jnp
arpl
jns
pop
test
xchg
mov
cltd
pop
push
leave
repnz
xchg
mov
and
mov
dec
rol
lods
aam
sub
adc
leave
testb
outsb
imul
mov
fsts
inc
jle
pop
jbe
and
sbb
mov
xor
xchg
cmpb
testl
test
cmc
dec
int3
lods
roll
mov
dec
cmp
sub
lods
dec
packssdw
mov
cmpsl
outsl
cmp
and
ds
es
cmp
lret
adc
pop
or
xor
clc
inc
rcrl
dec
fxch
push
inc
cmp
push
sub
addr16
dec
sbb
sub
test
jmp
adc
iret
jecxz
ds
iret
shld
jle
dec
xor
mov
gs
inc
and
aaa
enter
sub
daa
inc
gs
stc
outsb
cmp
push
adc
pop
jl
lcall
pop
loope
sbb
out
shlb
ds
inc
jle
push
outsl
jmp
cmp
cmp
push
mov
idivl
mov
pop
fsubrp
mov
popa
push
cmp
xor
mov
cmp
pop
jp
dec
divl
out
test
pop
cmp
loop
fidivl
aaa
stos
lahf
std
out
push
xchg
lahf
sub
xchg
pop
cmpsb
aad
imul
daa
xchg
mov
pop
call
adc
lds
mov
pop
or
outsl
loopne
mov
icebp
sub
sti
pop
dec
pop
stc
cs
cmp
adc
lods
xchg
xchg
cmp
fldcw
scas
andb
pop
popl
rclb
sbb
add
push
cmp
fnsave
dec
mov
hlt
cmp
fmuls
xchg
repz
into
mov
movsl
mov
xor
pushw
xor
ficompl
lock
cs
outsl
icebp
jg
and
jle
sbb
or
test
movsb
pop
or
jae
pop
xor
cltd
pop
repnz
cmpsl
aas
jle
add
lods
xchg
in
mov
cmc
jne
sti
cmp
mov
roll
scas
inc
sub
push
inc
add
cmp
lea
lods
xor
fistl
mov
xor
xchg
lock
outsb
push
fs
jae
xchg
fwait
mov
xor
xchg
cltd
push
movsb
fcomip
daa
bnd
cmp
push
inc
outsb
inc
sbb
inc
rcrl
inc
into
jl
leave
inc
fld
imul
inc
jle
adc
dec
gs
jecxz
mov
mov
out
dec
adc
fdiv
in
sub
push
js
xchg
daa
sbb
aas
out
dec
add
mov
pusha
dec
mov
add
sbb
sbb
icebp
lock
fcmovu
lock
mov
and
adc
sbb
add
and
mov
cmp
sub
and
daa
xor
sbbb
imul
dec
jg
xchg
mov
sbb
aaa
gs
push
sbb
and
push
sub
popa
pop
arpl
dec
arpl
js
or
jo
push
lds
aaa
xchg
add
jle
fisttpl
or
push
int3
imul
inc
cmp
push
addl
lahf
js
sti
lods
push
pop
and
or
icebp
mov
mov
pcmpgtw
adc
dec
push
inc
decl
lds
stc
enter
outsb
call
mov
movsb
stc
enter
sub
xchg
xchg
and
and
or
scas
mov
mov
popf
pop
into
ret
in
in
test
std
aas
xor
ret
pop
xlat
out
rcr
and
leave
jle
fwait
cmp
aad
or
jmp
adc
mov
mov
mov
fildl
sti
dec
js
fstl
adc
dec
lahf
packuswb
jecxz
inc
xor
pusha
xchg
mov
jb
adc
mov
leave
dec
jnp
xor
mov
mov
lods
and
movd
test
cltd
inc
mov
lods
or
cmpsl
cmp
cltd
lret
clts
lea
push
add
pop
push
je
cmc
inc
dec
xor
dec
ja
push
out
stos
cmpsl
cli
inc
or
add
out
nop
fwait
mov
in
mov
ss
orl
hlt
fildl
int
mov
and
das
out
aas
xor
cld
mov
imul
int
or
daa
push
sub
inc
js
adc
aad
jmp
mov
insl
dec
mov
sub
gs
lods
pop
add
scas
mov
push
sbb
cmp
fbstp
cmc
mov
jp
lock
enter
cmpsl
jno
in
repz
rcll
test
cmp
cmp
inc
mov
das
cmp
and
cli
or
sarl
and
sub
jno
add
mov
sub
xchg
sti
lcall
jg
mov
mov
xchg
lahf
shll
rorb
dec
pop
lret
imul
std
lret
xor
movsl
dec
daa
ror
shll
pop
test
and
rclb
mov
adc
jae
ss
outsb
push
lret
xor
ret
adc
mov
xor
jae
packuswb
cmp
sub
cltd
mov
or
pop
add
cmp
not
cmp
xlat
stc
cmp
out
push
sahf
mov
ds
or
push
sub
dec
rcrb
add
sub
icebp
xchg
cwtl
mov
xor
pop
fsubs
daa
jo
push
push
sbb
loopne
cmp
dec
add
xchg
mov
or
stc
fsubrs
xchg
xchg
stos
cwtl
das
jns
mov
push
mov
add
out
into
mov
pop
incl
fcomip
out
cmp
push
or
cs
jle
push
and
in
aam
sbb
add
pusha
mov
aas
jns,pn
lods
cmp
or
aam
push
cli
pop
inc
sahf
scas
ss
xchg
sbb
add
cwtl
adc
cltd
push
adc
ljmp
add
xor
int3
imul
sbb
jnp
movsl
lret
mov
mov
movl
cwtl
loop
cmp
jg
sub
jg
sub
xchg
les
dec
jmp
and
jle
stos
push
or
ds
dec
out
movsl
adc
and
jbe
adc
scas
adc
push
adc
sub
pop
or
mov
push
aas
jae
or
cmp
inc
cli
js
inc
iret
into
sbb
cmc
mov
dec
inc
jle
add
inc
adc
add
jg
push
mov
cmpsb
pop
mov
push
fstl
fisubs
fwait
and
das
sub
mov
daa
dec
add
movb
xchg
repz
ret
mov
push
dec
or
or
gs
sub
loop
mov
and
mov
inc
cmp
mov
clc
lea
arpl
push
shlb
mov
lahf
mov
inc
lahf
ret
jnp
xchg
rcrl
push
js
sti
cmp
scas
xchg
and
sub
insl
iret
cmp
cltd
jbe
imul
jne
inc
addr16
sub
or
lret
cmpsl
outsb
lea
fldt
mov
nop
shl
out
lods
pop
xor
cmp
xor
test
sbb
push
adc
dec
fcmovb
nop
dec
sbbl
or
and
mov
xchg
inc
mov
push
mov
push
xchg
cltd
ret
push
mov
fsubp
and
mov
aaa
adc
sbb
daa
mov
repz
inc
cmp
pop
rcrl
pop
mov
cmp
scas
pusha
pushl
inc
and
nop
leave
scas
das
or
dec
les
lock
subl
in
sub
mov
mov
mov
insb
ljmp
sbb
xchg
push
and
lahf
stos
or
arpl
cltd
lret
mov
dec
mov
dec
rcll
test
jp
inc
dec
addr16
jg
xchg
insb
sbb
mov
inc
js
dec
mov
lods
pop
shl
mov
jge
nop
jno
outsb
jg
sub
das
hlt
addr16
stos
and
xor
pop
ret
pop
gs
cmp
and
ss
pushf
stc
sub
pop
pop
mov
push
stc
subb
pop
mov
pop
cmp
aaa
add
inc
xchg
ficomps
shlb
sub
cmp
push
ljmp
jnp
jmp
imul
out
jmp
push
mov
or
xchg
fnstsw
mov
sub
push
frstor
xor
je
sbbl
inc
adc
add
aam
mov
push
insb
mov
xchg
sbb
decl
and
loopne
cltd
rclb
pop
inc
mov
push
pop
xor
fs
lret
popa
sti
sahf
jne
in
mov
jle
stos
out
fwait
adc
xchg
repz
test
jno
inc
lods
fiaddl
int
inc
int
lret
mov
cmp
sub
xorb
jmp
sub
mov
jge
popa
insb
out
testl
jecxz
xor
dec
mov
dec
pushf
ja
roll
pop
fadds
movsl
sub
das
inc
dec
push
sbb
popa
push
sub
sub
inc
mov
or
adc
sub
pop
jb
insl
jg
aad
cltd
lds
outsb
shlb
icebp
fsubrs
push
bound
dec
push
stos
jecxz
xor
aaa
bound
sub
aaa
arpl
js
and
pusha
int3
dec
pop
gs
cltd
fimuls
pop
mov
sbbl
push
or
sbb
pusha
cltd
mov
and
cmp
or
lods
repz
or
aas
std
in
inc
inc
out
mov
and
cmp
mov
into
sbb
push
loop
or
lret
cmovge
fwait
cmp
xchg
inc
push
in
scas
dec
cmp
xor
enter
shrl
pop
jle
or
jg
ror
aaa
mov
add
rcll
fmull
das
push
mov
pop
lret
inc
adc
and
push
push
fmull
or
aas
test
fidivrl
pushf
addr16
jle
negl
sysenter
test
into
pop
rolb
sbb
cld
dec
and
xchg
push
pop
inc
and
cmp
mov
daa
repnz
or
pop
dec
push
ret
hlt
popf
repz
movl
dec
pusha
lods
or
xor
sar
stos
lods
adc
pop
mov
aaa
and
dec
pushf
xchg
cmp
int
and
jnp
mov
push
lret
das
jbe
dec
mov
jbe
mov
push
cmc
adc
nop
cmovbe
xchg
cmp
adc
rorb
gs
sbbl
scas
xchg
adc
pop
jb
cmp
lock
adc
adc
inc
cmp
addr16
cmp
sbb
sbb
std
dec
std
mov
or
pop
cmp
ljmp
int
adc
inc
fistps
sbb
lret
lock
lahf
mov
or
push
shll
sub
dec
adc
and
aas
and
push
mov
xchg
fcmovnb
sub
lret
inc
or
mov
and
add
je
leave
movsl
scas
fbld
aas
pop
into
icebp
aaa
jo,pt
dec
fldcw
sbb
push
out
xor
scas
das
and
xchg
sub
sub
notl
lods
popl
add
jg
sahf
jnp
inc
push
lret
into
or
out
out
mov
fists
mov
lahf
sarl
imul
pusha
push
dec
outsb
leave
cltd
xlat
pushw
imul
mov
xchg
sahf
outsl
stos
dec
push
rcrb
xor
mov
jo
inc
jmp
cmp
xchg
cs
leave
add
es
add
mov
cmp
jmp
bound
mov
int3
icebp
out
sub
sbb
ja
xchg
js
mov
aaa
es
test
inc
adc
pop
out
into
gs
or
gs
sub
nop
pop
cmc
enter
pop
push
ret
sub
lods
push
add
xor
mov
into
cmp
mov
lahf
out
scas
loope
loopne
cmp
iret
cmp
faddl
mov
fisubrs
xor
in
and
mov
gs
fcomps
in
lods
mov
mov
pop
sub
ret
enter
cltd
call
jnp
cmp
add
insb
and
cmc
in
sbb
add
stc
iret
adc
nop
aam
xlat
pop
sarl
ret
pop
bound
xchg
pop
xor
stos
movsb
cmp
push
pop
std
pop
repz
mov
out
sbbl
mov
adc
xorl
fcomp
sub
dec
inc
mov
xchg
jp
aas
sbb
cmp
fnsave
cwtl
js
movsb
lds
pop
mov
movsl
push
lock
sub
mov
fistl
fs
test
pop
pop
jno,pt
jge
outsb
popa
ljmp
sbb
in
sbb
pushl
pop
push
insl
ret
mov
inc
cltd
xor
and
rcll
sbb
cmp
cmc
xor
add
push
scas
xchg
scas
movsb
mov
inc
push
test
or
stos
mov
mov
add
sub
cmp
cltd
sub
mov
sub
xor
mov
js
mov
daa
push
sub
mov
dec
es
push
jle
sarl
outsl
sarb
xchg
rorl
addr16
or
mov
repz
cmp
outsb
and
jae
dec
adc
fisubs
scas
pop
push
daa
dec
into
int
jl
flds
ss
mov
arpl
jne
xchg
pop
inc
fidivs
or
pop
lods
dec
in
jg
idivl
outsl
aas
movsl
in
cltd
lahf
jp
outsb
mov
rorl
push
sub
enter
inc
fistpll
jno
loope
xchg
adc
or
mov
fs
dec
jle
sbb
ja
js
xor
mov
stos
stc
push
cmp
mov
xlat
addr16
cltd
xchg
ljmp
stc
push
test
das
jnp
stos
adc
and
int3
hlt
outsl
daa
dec
fnstsw
iret
mov
push
cmpsl
xchg
pop
pop
adc
pop
sub
mov
jns
dec
lea
fwait
dec
addr16
subb
mov
repnz
mov
call
and
lgs
fcoml
icebp
xchg
in
or
fistps
inc
int
inc
aaa
and
add
or
ds
test
dec
and
push
imul
es
lods
daa
dec
push
wrmsr
cmc
mov
dec
cmp
mov
lret
addr16
fdivrs
int
test
stc
cmp
cmp
add
dec
aam
xchg
sbb
ret
adc
jmp
jge
in
outsl
js
jle
push
dec
push
xor
sub
cmp
push
jl
dec
shrl
repz
sbb
lods
jle
mov
test
push
xchg
dec
stos
or
mov
jg
and
mov
fnstenv
adc
dec
cmc
mov
jmp
daa
shlb
fdivs
mov
push
dec
push
aas
fidivrs
inc
mov
cmp
mov
stos
mov
push
lods
lcall
push
daa
addr16
dec
mov
jle
mov
pushf
popf
cmpl
test
aad
fcmovb
negl
adc
pop
push
lahf
jg
popf
inc
xor
pop
stos
sub
xchg
push
test
aas
aas
sub
cmc
clc
aam
insb
popf
out
pop
inc
rcl
cmpl
jae
lds
icebp
jo
aad
mov
or
sahf
ret
in
js
cmp
inc
jnp
pop
andl
aaa
lods
aam
dec
xor
and
outsb
js
mov
or
xchg
fwait
xor
mov
jle
jbe
out
mov
cmpsl
adc
cli
insb
push
repz
push
es
lret
add
iret
xchg
call
inc
repz
rclb
out
xchg
add
mov
mov
js
xor
mov
sub
push
lret
decl
stos
xchg
inc
iret
mov
pop
cmpsb
and
out
cmp
ret
outsl
mov
push
test
mov
and
aas
mov
or
icebp
out
jae
sub
xor
dec
vpcomub
or
ror
pop
mov
scas
loopne
xchg
addr16
frstor
add
aam
jp
lahf
daa
jno
mov
and
cmp
push
aam
jne
fistl
ss
pop
mov
adc
mov
mov
js
jecxz
cltd
cmpsl
pop
test
xchg
pop
dec
movsl
jle
lret
jmp
jge
aad
ds
inc
push
stos
lods
push
push
cmp
xchg
sahf
insl
and
lret
push
sub
movsb
enter
aas
das
jge
out
imul
ljmp
vmwrite
cmp
pminsw
lahf
cmpsb
push
and
loopne
mov
pushf
cmc
mov
mov
mov
mov
jle
or
dec
ss
or
nop
inc
sub
loopne,pt
stos
mov
sti
clc
or
mov
leave
data16
jbe
xchg
or
test
test
mov
repnz
mov
dec
xor
lcall
stc
in
jb
inc
sub
inc
mov
ret
inc
mov
mov
mov
mov
cmp
mov
mov
cmp
dec
out
loope
loopne,pn
push
imul
lcall
cmpsb
nop
test
and
imul
mov
xchg
fisttpl
cmpsl
xor
into
mov
jmp
sar
cmp
dec
lods
mov
dec
cmp
pop
push
push
sbb
sbb
push
aaa
inc
inc
into
movl
dec
mov
dec
daa
cltd
js
jmp
fisttps
repz
xchg
pop
dec
adc
sbb
insb
aaa
scas
inc
mov
xchg
xor
int3
adc
lcall
inc
mov
ljmp
gs
and
loopne
jbe
cmp
andb
pop
popa
lret
xor
shrb
adc
and
cmp
shrl
or
xor
mov
xchg
in
jne
mov
jle
cmpl
fisttps
aaa
ljmp
lcall
subl
mov
cmpsl
lret
lods
sub
repnz
add
jle
mov
ljmp
cmpsl
icebp
mov
cmpsl
jmp
out
out
or
inc
mov
das
mov
jmp
sub
stos
sar
pop
mov
and
mov
mov
das
pop
inc
lods
jle
push
aas
js
lahf
inc
xor
rclb
fnstsw
add
js
out
mov
test
fdivp
cmp
dec
adc
xchg
lret
inc
insl
push
insl
adc
push
aad
adc
pop
cmc
and
cmp
fwait
push
mov
lahf
pop
push
or
mov
mov
inc
pop
push
out
outsl
incl
xchg
fbstp
inc
xor
or
sarb
xchg
inc
pop
and
sub
test
push
jecxz
cmc
popa
loopne
push
pushf
into
gs
out
push
sbb
cmp
inc
or
push
pop
push
sbb
xor
stos
out
inc
std
jle
mov
cmp
enter
ficoml
sarl
data16
mov
fbld
aam
mov
std
out
scas
fisubs
das
mov
subb
mov
movsb
dec
dec
dec
call
sub
outsb
das
lock
sub
lret
rclb
jbe
and
xchg
sbb
lods
sti
add
sub
cmp
aas
xlat
test
add
dec
pop
push
enter
sbb
dec
sub
xor
dec
mov
push
pop
dec
aaa
test
lods
xchg
pop
mov
xchg
idiv
fistps
outsl
adc
pop
shlb
loope
in
clc
adc
sahf
das
ret
daa
dec
arpl
push
mov
push
dec
outsb
enter
insb
xor
mov
icebp
aaa
popa
leave
aam
js
jmp
xchg
cltd
xchg
out
xor
xchg
ljmp
mov
adc
push
sbb
jp
inc
and
cmp
jle
or
sbb
movsb
rol
lock
dec
pop
jp
lret
mov
inc
aad
pop
out
movsl
jl,pt
adc
mov
mov
pushl
das
push
lcall
cmp
lods
aad
mov
fcompl
or
pushf
cmp
inc
xchg
insb
pop
aaa
pop
inc
rcrl
jb
mov
shufps
ret
scas
xor
jo
or
orb
dec
stos
jns
sti
pop
stos
dec
aas
stos
jne
sahf
fiadds
mov
sub
cmpsb
shr
fwait
inc
cltd
jg
fimuls
jl
movsl
inc
outsb
inc
gs
fxch
aas
lock
cltd
inc
cmpsl
or
das
lea
lock
dec
dec
push
mov
hlt
xor
cmp
addr16
js
pushf
pop
add
iret
or
and
lret
push
ret
das
gs
int
cmp
sbb
and
addr16
jle
sbb
add
cld
stc
dec
je
ss
sub
or
aaa
cld
inc
xor
sub
inc
lret
fists
jge
decb
in
fldenv
aam
lahf
sub
sbb
out
sub
mov
dec
xlat
inc
sbb
pop
outsb
mov
shr
xor
adc
or
gs
leave
add
pop
xchg
xor
push
jl
enter
sbb
push
jae
pavgb
push
jl
mov
cld
ss
inc
xor
dec
cmp
aad
ret
jo
xchg
mov
dec
jle
js
mov
mov
adc
shl
push
out
enter
mov
addb
push
mov
sbb
test
mov
stc
dec
test
push
shlb
repz
fsts
xchg
scas
add
ret
iret
lcall
sub
or
push
iret
jb
test
loopne
jl
mov
data16
or
mov
or
xor
cmp
cmp
std
idivl
lcall
push
out
scas
pushf
mov
pop
outsb
sub
popa
pop
xor
jl
outsb
push
adc
aam
and
in
adc
or
xchg
jp
mov
mov
aam
cmp
jb
dec
mov
mov
or
cld
xor
in
ss
je
js
flds
test
imull
stos
add
cmp
and
pop
iret
les
mov
mov
cmove
js
and
and
insl
add
and
push
add
movsb
push
call
xchg
add
cmp
lret
cmp
test
mov
lret
xor
int
dec
add
ljmp
xchg
int3
mov
addr16
mov
sub
das
test
sbb
cli
das
sub
xchg
arpl
mov
das
dec
sub
adc
cmc
loope
cmp
sub
sub
or
sub
daa
and
sbb
mov
popa
hlt
inc
cmovbe
test
add
cmp
xsavec
stos
aas
cwtl
and
rolb
cld
sub
push
dec
pop
xor
sar
lret
adc
notl
subl
fcompl
ret
frstor
clc
lcall
out
cmp
pop
sbb
test
hlt
push
and
pop
lea
mov
addr16
jecxz
out
sbb
mov
jle
push
fidivs
cmp
mov
adc
xchg
sbb
mov
repz
pop
xchg
into
cmp
inc
mov
cmp
aas
insl
js
inc
xor
mov
xor
mov
inc
aas
ret
jb
jmp
cmp
mov
aad
mov
stos
pop
repnz
pop
aaa
aad
popf
insl
add
sbb
xor
mov
push
arpl
js
or
xchg
jp
mov
xlat
xchg
cmp
fists
and
int3
xchg
js
jae
xor
sub
mov
and
cmpsl
psubsb
sub
cmp
sti
pop
xchg
pop
dec
fdivrs
ljmp
inc
pop
imull
adc
jno
scas
popf
test
mov
jle
sti
sub
ljmp
addr16
xchg
popa
jecxz
dec
ret
jle
vandnps
mov
in
sub
mov
pop
adc
inc
loopne
dec
inc
lahf
jge
rcrb
das
out
push
jl
lret
xchg
dec
test
mov
into
pop
inc
addr16
jl
jmp
xor
aam
out
cli
enter
aas
sub
fimull
ja
inc
repnz
mov
jnp
pushf
cmp
push
push
jnp
mov
jne
popf
jge
inc
push
mov
lods
data16
push
adc
sub
dec
mov
dec
mov
jmp
repnz
icebp
das
xchg
in
push
scas
pop
jae
shll
inc
jle
add
repnz
les
frstor
jmp
adc
xor
imul
pushf
adc
inc
pop
jbe
push
xchg
xchg
imulb
adc
icebp
ljmp
fwait
adcb
jg
cmp
test
lock
push
xor
sti
dec
sarl
inc
push
pop
push
cli
sub
pop
jge
stos
push
sub
jp
dec
roll
adc
das
pop
ret
jg
xchg
insl
in
mov
lds
pusha
popf
push
iret
inc
adc
lcall
lcall
sub
sbb
aas
pushf
lods
pushf
scas
lea
in
adc
cs
inc
js
sbb
dec
mov
mov
inc
rcr
imul
push
scas
pop
or
or
xchg
pop
in
movsb
sub
fadds
mov
subb
xor
das
repz
cs
dec
sub
inc
lret
int
js
pop
cmp
jns
pop
or
insl
pop
or
iret
add
add
fidivrs
or
int3
sub
jns
cmp
ja
lods
cmp
push
jae
shlb
xchg
pop
mov
pop
ret
sarl
jge
mov
ret
in
adc
mov
push
int
cmpsl
stos
mov
push
adc
dec
xchg
mov
cmpsb
adc
loop
ficomps
sbbl
cmp
adc
mov
pop
fistps
push
sbb
and
enter
imul
imul
das
fbld
popa
notb
gs
pop
adc
rcrb
push
inc
decb
dec
fxch
mov
dec
cmp
xor
test
insl
cmp
cs
push
lcall
scas
aas
jmp
cmp
loopne
cli
cmp
int3
jbe
push
mov
aaa
xlat
lcall
aam
or
scas
cmp
outsl
daa
dec
xor
mov
stos
jg
push
js
aad
sub
pop
xchg
and
mov
or
dec
rclb
mov
mov
add
and
push
and
push
aad
mov
insl
cmp
movsl
adc
in
fucom
xchg
xchg
movsb
jg
fadds
hlt
or
addr16
cmp
dec
gs
in
sarl
jns
mov
xchg
jle
lock
bound
fsin
mov
push
xchg
sbb
and
clc
in
or
stc
xchg
xchg
xor
or
cmp
fistpll
cld
or
in
mov
movsb
scas
sbb
adc
fwait
mov
inc
lcall
clc
negl
pushl
leave
pop
dec
sti
push
scas
dec
add
sub
add
jne
pop
mov
rolb
stc
mov
add
sarl
sub
pop
dec
cmp
test
add
xor
pop
sbb
mov
stos
out
ljmp
in
inc
sub
sbb
sbb
test
fcmove
loopne
pop
cmpsl
mov
cli
std
stos
pop
pop
sub
icebp
ret
outsb
xchg
icebp
in
negl
repz
cmpsl
sub
test
ss
fsubs
adc
insb
inc
inc
cmp
je
push
inc
hlt
fld
sub
lret
jb
push
add
inc
aas
adc
mov
and
pop
loopne
scas
xor
popf
das
lods
repz
cmp
pop
and
or
sbb
jle
out
addb
push
xchg
ja
mov
mov
lret
mov
xchg
pop
scas
gs
xchg
add
mov
mov
div
lock
mov
es
std
cmpsl
mov
add
and
mov
inc
add
cmp
imul
mov
or
and
xor
cmp
test
popf
jmp
imul
push
sub
jnp
lea
add
ss
ljmp
add
loopne
or
imul
mov
rcll
jnp
mov
jno
xor
mov
lock
inc
xchg
ret
xor
pop
icebp
and
cmpsb
bound
fwait
clc
es
clc
and
lahf
adc
mov
inc
roll
jle
xorl
ds
mov
cmp
mov
insb
pop
cld
out
lcall
sub
scas
sub
lods
inc
mov
cmp
stos
loope
sbb
fidivrs
push
mov
lock
loopne
add
sub
xor
pop
aas
sbb
xor
bound
iret
bound
adc
sbb
mov
mov
dec
xchg
loopne
dec
lock
add
inc
jo
andl
test
cmp
inc
cmp
and
imul
push
out
ja
ja
push
fs
ds
jle
mov
push
xchg
lods
hlt
cli
sbb
cmc
add
aaa
gs
xchg
sbb
out
jmp
mov
jle
js
leave
sub
pop
mov
inc
in
lods
add
les
cmc
cmc
mov
mov
sahf
adc
int
inc
dec
test
xchg
test
xchg
push
dec
int3
stc
xchg
sahf
cmp
aad
xchg
imul
movsl
cmpsb
lods
pop
mov
fists
lds
outsb
jl
xor
lods
push
stc
je
jle
add
rcrl
mov
aas
stc
popa
sub
ja
loope
js
das
push
xchg
aaa
xchg
push
cmp
jp
je
jnp
loopne
cmp
mov
ret
adc
xchg
mul
jge
cli
add
pop
pushf
addr16
mov
popf
and
add
iret
fisubrl
mov
mov
jne
rorl
mov
push
or
adc
adc
cmpb
jnp
sub
ja
xchg
data16
push
sub
jno
add
inc
lods
add
dec
ret
mov
pop
inc
cmp
inc
aam
aad
sub
out
adc
rorb
inc
fimuls
gs
inc
jp
lcall
dec
sbb
xchg
push
rorl
sub
jne
pop
xchg
jg
inc
aaa
cmp
gs
xchg
push
mov
xor
aas
movsb
or
rcl
sub
xchg
std
sub
pop
add
push
add
cmp
sahf
push
testb
fdivrp
xor
dec
pop
jg
xchg
bswap
mov
cmp
movsb
icebp
pushf
or
cmpsb
adcb
mov
jo
fs
cli
sbb
aas
cmpsl
js
or
outsl
inc
and
adc
add
bound
and
mov
aam
sub
inc
subb
xchg
and
js
jmp
jnp
daa
mov
xor
cmp
pop
jcxz
jne
cmpsb
mov
lret
adc
cmp
jns
cld
dec
mov
out
pop
addr16
inc
cmp
inc
aam
add
lahf
movsb
xor
lock
cwtl
loop
push
fisttpll
inc
lahf
into
cmc
cltd
sbb
xchg
cmp
push
mov
sbb
xor
mov
xor
aas
stos
jle
cmp
in
mov
test
scas
push
incl
fcmovb
loopne
in
push
xchg
mov
das
jle
stos
sbb
out
enter
cmc
in
rorl
addl
xor
jbe
cwtl
mov
out
sbb
xor
dec
jno
decb
xor
sti
cmp
repnz
outsb
aaa
mov
ljmp
inc
sbb
ficoml
xor
dec
fisttpll
fistpl
sbb
cmp
jnp
rclb
cmp
pop
js
jle
sub
mov
mov
or
or
or
fs
push
and
ds
mov
jge
jle
rolb
lds
fimuls
mov
cmp
inc
arpl
jl
sub
lds
inc
cmp
pop
adcb
mov
pop
inc
jp
pop
cld
adc
notl
mov
pop
sbb
hlt
cmp
mov
sub
dec
shlb
int
movb
das
dec
mov
dec
or
jg
push
push
push
in
sbb
sbb
pop
lret
std
shrb
mov
cmp
sahf
imul
xor
inc
cmp
jg
fistl
jle
nop
cld
aam
xor
or
add
sahf
les
adc
out
or
movsl
jecxz
add
std
les
orl
add
idivl
jle
in
push
ret
iret
pop
sub
or
dec
sub
jbe
adc
mov
in
push
or
sub
jle
insl
jnp
xchg
sbb
jnp
xchg
fwait
pop
aaa
repz
sub
mov
inc
in
and
outsb
out
and
mov
dec
mov
xchg
sub
mov
cmp
aas
pop
dec
or
or
sub
jns
xchg
mov
lahf
add
inc
test
outsl
push
pop
dec
pop
popf
andl
jle
ds
lea
inc
inc
jae
mov
add
xchg
inc
or
cs
dec
cmp
add
pop
adc
lea
enter
jle
leave
cmp
ret
aaa
test
ror
ror
addr16
popa
jnp
comiss
dec
and
jg
out
pop
pop
dec
or
pop
aaa
fsubrp
lcall
or
add
dec
mov
dec
ss
sub
push
aas
fmuls
sub
scas
test
mov
ret
push
or
divb
das
xor
inc
cmp
adc
inc
shrl
cli
xchg
popf
sbb
std
iret
sbb
or
adc
pop
inc
in
test
fidivrl
cmp
dec
inc
pop
or
es
dec
aaa
das
or
or
int
stc
add
movsb
jp
pop
sbb
dec
mov
lahf
and
aad
mov
pop
cmp
xor
xchg
and
adc
xchg
lret
xor
icebp
push
add
ret
fstp
xlat
mov
stos
inc
dec
ror
xchg
dec
cmp
out
cmp
insb
push
add
cs
mov
dec
add
jp
mov
mov
ficomps
pop
mov
pop
int3
dec
popf
jmp
sbb
dec
das
nopl
cmp
jg
or
and
xchg
sub
push
dec
cmp
fldt
or
xor
addr16
je
imul
mov
std
pop
dec
pop
dec
jmp
addr16
mov
jle
mov
push
and
mov
jge
pop
les
out
data16
xor
sub
and
cmp
cmp
das
adc
push
xor
cmovns
cmpl
mov
inc
sub
flds
stos
leave
cmp
jns
add
mov
cltd
xchg
lret
push
or
js
es
pop
xor
shl
sahf
pusha
clc
imul
push
sbb
jle
or
ljmp
mov
cmp
inc
sbb
pop
pop
jae
popf
lock
xor
ja
and
mov
cltd
testl
adc
sahf
add
insl
mov
pop
lods
mulb
and
fnstsw
addb
sub
js
lock
adc
call
out
jo
jge
jle
iret
and
nop
out
mov
add
push
add
and
mov
iret
sahf
mov
fs
jno
dec
inc
fsubrs
icebp
add
sbb
sub
mov
cmpb
shrl
inc
je
sbb
mov
pusha
pop
dec
adc
jle
mov
jo
lea
push
and
test
das
pushf
shrb
enter
mov
mov
mov
jmp
sub
mov
in
or
scas
setno
fnstsw
jmp
bound
sub
icebp
sbb
out
cmp
lods
cmp
push
add
mov
adc
pop
ficoms
mov
xchg
mov
push
push
xchg
mov
add
mov
dec
dec
mov
lods
outsl
dec
add
movsl
and
iret
cmp
jle
fisttps
popf
dec
push
push
popa
push
daa
lahf
add
adc
inc
dec
imul
jle
sahf
inc
int3
shrb
fbstp
inc
mov
pop
popa
sbb
pop
xor
or
push
ss
repnz
daa
mov
push
loop
outsl
loop
jne
mov
jne
in
sahf
cmc
insb
negb
and
insb
cmp
loopne
fstl
fwait
inc
fsubs
pop
ret
nop
nop
push
ss
das
aad
out
and
ds
cmpsl
pusha
jnp
imul
xor
ds
sbb
jg
pop
jmp
dec
stos
pop
push
int3
xchg
xchg
ficomps
loopne
inc
lods
leave
xchg
maskmovq
or
call
arpl
sbb
dec
addl
jge
scas
xchg
ret
mov
xchg
js
lods
push
psrad
in
add
mov
and
into
movsl
adc
mov
add
push
add
or
stos
aaa
data16
adc
aam
fs
lods
jecxz
test
xchg
js
cwtl
and
and
std
outsb
push
daa
jecxz
out
out
inc
dec
inc
jmp
cmpsl
pusha
or
int
mov
inc
dec
lods
jle
adc
dec
int
xor
int3
dec
and
lods
outsl
or
sti
xlat
push
fbstp
add
lret
cmp
fisubrl
ja
lcall
ja
jb
mov
cli
icebp
das
pop
stos
and
arpl
jle
pop
dec
dec
pop
js
out
mov
rcrb
sbb
test
push
js
sub
sub
loopne
jbe
sbb
repz
lock
add
xchg
xor
adc
cmp
aaa
jnp
xchg
inc
xchg
mov
jbe
cmp
lret
xor
addr16
mov
je
push
sti
pop
rolb
xor
sub
js
cmc
dec
xor
jb
jle
jo
mov
icebp
cmp
add
cmp
or
and
or
cmp
scas
je
pop
mov
ficoml
ljmp
movsl
jle
fs
xchg
sbb
adc
sub
or
std
daa
int
add
lahf
jae
mov
cmp
mov
js
sbb
push
cld
mov
or
add
pop
ds
stos
out
stos
xchg
cmp
fisubrs
lret
mov
mov
out
das
adcb
sbb
mov
mov
pop
mov
rcrl
xor
movswl
inc
aas
xchg
enter
mov
mov
daa
lods
xchg
loopne
outsl
jle
sbb
mov
idiv
ljmp
inc
pop
fwait
repnz
sub
in
aam
ss
xchg
sbb
popf
xchg
imul
daa
adc
outsb
inc
dec
int3
std
jle
mov
lods
call
ficoms
in
lea
ret
sbbb
iret
mov
stos
sub
push
dec
arpl
pop
sti
arpl
in
xlat
insl
lret
jg
scas
push
ret
sub
jae
pop
sbb
mov
dec
js
sub
in
inc
lock
loope
imul
shl
mov
enter
jns
mov
jp
dec
pop
xor
ret
rorl
fsubrp
cmp
mov
mov
pop
jle
lahf
mov
lock
and
cs
pop
mov
mov
lods
loopne
pop
mov
stos
cmp
push
stos
bound
in
fs
xchg
adc
inc
test
mov
fiadds
mov
inc
cld
push
inc
jnp
or
loopne
adc
pop
pop
mov
and
hlt
adc
push
mov
jl
stos
ds
dec
test
xor
sub
add
in
shl
jle
insb
mov
cmpsb
mov
rorb
arpl
pop
daa
push
or
call
mov
iret
fildll
dec
repnz
mov
loope
loop
int
inc
dec
rcrl
push
push
xchg
cmp
pop
push
loop
fstpl
mov
inc
mov
cmp
mov
dec
push
inc
aam
sti
inc
dec
cmovae
imul
mov
push
aaa
xchg
lret
push
sbb
cmpb
jo
push
loopne
das
lret
pusha
and
xchg
ror
cmp
inc
fnstenv
sub
aas
ja
inc
xchg
sbb
cmpsl
icebp
ret
sub
inc
ja
mov
pop
jb
cmpsl
mov
aad
sub
gs
xor
jnp
cltd
mov
lcall
lea
adc
adc
rcrb
cmp
mov
das
sbb
js
stos
add
sahf
push
movsl
push
int
jle
mov
mov
add
test
fwait
popa
push
idivl
and
dec
cmp
ds
das
push
inc
mov
xor
xchg
sub
loopne
or
out
adc
test
or
cli
enter
sub
cli
and
mov
cltd
mov
mov
push
outsl
jb
jle
adc
pop
es
adc
pushf
pop
loope
push
mov
cmp
loop
adc
movsl
cmp
jns
scas
or
cmp
lea
testl
push
repnz
mov
mov
iret
mov
xchg
mov
mov
sbb
ds
in
inc
and
shll
adc
gs
call
gs
sbb
mov
movsl
outsb
pop
ja
lret
stos
push
mov
addr16
jecxz
out
icebp
mov
cmpsb
int
iret
add
push
sub
lcall
lcall
cmp
push
fimull
push
jo
ret
shlb
push
sub
gs
adc
push
mov
scas
push
sbb
inc
bound
shl
test
ljmp
stc
inc
hlt
and
fwait
xchg
repnz
es
push
adc
scas
push
jecxz
or
sti
test
push
mov
pop
clc
mov
popf
adc
push
lds
mov
push
fadds
push
sbbb
lret
pushl
sub
aas
cmp
out
inc
pop
fs
sti
bound
push
jg
test
sbb
cmc
mov
cmc
inc
int3
xor
sub
test
es
sbb
stos
xor
out
fdivrl
adc
inc
or
rcl
fnstcw
loop
push
dec
cmpsl
lock
out
or
pop
mov
addr16
sub
xlat
imul
inc
sub
js
sarl
pop
ret
iret
or
or
les
xor
dec
into
xorl
or
out
daa
lahf
js
fstpt
pop
into
out
jns
ret
addr16
nop
xor
fcoms
call
out
pop
in
inc
xchg
inc
xchg
test
jnp
movsb
dec
enter
sbb
lret
inc
outsb
aas
sub
add
sahf
inc
js
pop
fdivr
cmp
popa
lods
addr16
adc
iret
xchg
arpl
adc
mov
js
lods
xor
pop
out
jno
xchg
jg
inc
lea
psllq
or
loop
fwait
inc
fbld
cmc
sub
jb
mov
std
inc
dec
icebp
mov
pushf
gs
jl
mov
aaa
xchg
sub
sub
loopne
cmp
clc
incl
dec
ds
pop
cld
xor
push
jo
add
lret
mov
sti
in
cmp
inc
pop
add
jl
cmp
add
int
mov
sub
sub
std
call
jp
pop
mov
inc
aas
mov
ja
addb
jl
xlat
push
out
rol
lea
mov
pusha
jge
ror
cwtl
aam
adc
cld
push
mov
jecxz,pn
push
sbb
inc
roll
rcr
not
cwtl
push
mov
cmp
inc
inc
jle
dec
rclb
clc
pop
sti
jae
lods
test
out
push
les
push
shl
push
in
aaa
xchg
cs
mov
pop
imul
xchg
inc
out
inc
xor
repz
xchg
add
xor
cmp
mov
mov
dec
cs
mov
cmp
sbb
pop
or
push
movsb
aaa
mov
dec
andl
rolb
xchg
call
inc
jge
jle
cli
or
add
add
ret
fistpll
shr
mov
addr16
push
mov
adc
sub
int
js
leave
inc
iret
fiaddl
dec
push
mov
cltd
addr16
in
mov
out
lea
iret
xor
cmpsl
sahf
and
enter
aam
xchg
mov
jp
or
push
data16
xchg
mov
jb
jle
ljmp
movsl
js
lods
dec
rol
inc
fstp
xchg
outsb
mov
mov
dec
pandn
push
les
sub
adc
mul
lahf
add
movsl
pop
test
mov
insb
int
cmc
push
cmc
js
add
xchg
push
enter
fistps
pop
cmpsl
mov
int3
out
xor
rcr
cltd
jmp
mov
pop
pop
pop
mov
aaa
push
mov
fwait
or
fcos
pop
sub
pop
testb
push
push
push
mov
test
popa
fcompl
std
dec
xchg
mov
hlt
and
call
push
inc
cmp
sub
ret
xchg
fcomps
xchg
dec
pop
stos
clc
ds
and
pop
dec
stc
hlt
jmp
mov
mov
movsb
sub
add
pop
and
adc
xor
jp
or
mov
mov
push
add
cli
adc
shrl
mov
inc
hlt
sub
std
addr16
sub
sarl
and
xchg
xor
dec
stos
jle
neg
notrack
fldl
sbb
or
xor
movsl
hlt
std
inc
ret
sbb
pop
std
mov
fidivl
mov
cs
jle
in
cmp
scas
xchg
inc
enter
mov
inc
pushf
insb
cmc
fwait
out
lahf
scas
loop
mov
sahf
and
test
mov
das
jl
sbb
jmp
outsl
insb
scas
push
ljmp
mov
sub
mov
mov
push
loopne
stos
pushf
xchg
xlat
lret
icebp
mov
icebp
jle
data16
xor
lret
lea
dec
gs
out
mov
jecxz
daa
or
push
inc
lahf
mull
pop
push
in
cmpsb
sbb
lret
mov
xchg
mov
jmp
push
fbld
iret
or
inc
add
sahf
add
data16
xor
xor
idivl
test
int
pop
jp
dec
xchg
push
sbb
daa
repz
sub
cmp
xor
fstpt
pop
xchg
popf
inc
cmp
shrd
mov
movsl
mov
dec
dec
rcrl
lcall
daa
cs
sub
xor
mov
js
roll
sbb
xchg
stos
jl
loope
ds
dec
stos
push
daa
outsb
pop
add
cli
mov
mov
cwtl
icebp
mov
dec
cmp
mov
insl
sub
jmp
icebp
xor
clc
arpl
das
cli
or
stos
lahf
aaa
jle
iret
add
pop
add
lods
out
xchg
js
rolb
jmp
iret
cmpsb
xor
imul
inc
xchg
nop
sub
jl
push
ret
xchg
or
in
or
ret
pop
pop
jae
jle
das
aas
int3
dec
mov
pop
mov
cli
jmp
push
outsb
push
adc
shlb
repz
int
stos
pop
fsin
dec
cmp
lret
shrb
imul
mov
add
fwait
lea
lcall
sbb
dec
faddl
in
test
inc
aad
mov
mov
lods
imul
es
pop
inc
addr16
dec
xchg
mov
cli
stc
mov
ja
cltd
inc
sahf
stos
clc
or
xor
fadd
stc
jle
stos
inc
cmp
or
add
std
stos
iret
test
loop
add
movb
mov
fwait
mov
and
punpckhbw
jle
xchg
and
les
inc
sbb
pop
push
sahf
mov
xchg
mov
ret
lret
sbb
psadbw
ljmp
call
inc
mov
loopne
lret
addr16
cmp
sub
push
push
mov
adc
fistpll
addr16
mov
in
xor
cmp
lods
xchg
and
aaa
cs
clc
imul
push
mov
shl
pushf
cmpsl
sbb
push
add
popl
test
xchg
jg
sub
add
xor
fsub
pop
ljmp
addr16
es
adc
out
push
cmp
xchg
inc
fisubl
jg
das
inc
and
inc
and
mov
ljmp
sub
pop
dec
cmp
inc
pop
addb
inc
cmpl
cmp
sub
and
cmp
cltd
xchg
fstl
jle
lock
mov
cltd
cmp
shufps
js
stos
iret
inc
jle
or
cmpsb
mov
xchg
add
inc
push
mov
mov
jns
mov
das
cmp
es
test
mov
xchg
mov
test
jmp
jecxz
daa
cs
cmp
stos
adc
sti
mov
pop
sbb
dec
and
inc
pop
add
adc
lret
mov
movsl
sub
cmp
mov
sbb
pop
sti
sub
cmp
jecxz
inc
ror
xor
lea
xchg
fldcw
pop
sub
sti
int3
aas
mov
pop
sub
inc
sbb
shll
xorb
lea
jmp
xchg
dec
rclb
cmp
sub
movnti
lds
cmpsl
cmp
lods
insl
xor
je
mov
sub
insb
sub
ss
add
nop
cmp
dec
sbb
sub
cmp
cmp
pop
add
mov
les
cmpsl
sahf
inc
fcompl
push
clc
mov
push
inc
test
cld
mov
sub
cs
mov
mov
iret
aaa
iret
das
pop
ret
cmp
mov
or
test
push
or
sbb
or
mov
pop
pop
movsl
push
xor
iret
cmp
dec
pop
dec
mov
shlb
lret
ja
push
dec
add
jg
xor
push
pop
add
sub
push
cmp
arpl
push
mov
adc
dec
enter
mov
jle
push
sbb
out
push
adc
shl
push
pop
add
and
ss
adc
or
sahf
in
lret
fldenv
das
pop
and
dec
testl
xchg
outsb
outsl
stos
push
aad
stc
in
movl
aad
ss
xor
scas
jl
ret
ljmp
xor
or
iret
sub
cmp
dec
out
xchg
jle
dec
cwtl
scas
mov
sbb
daa
das
pop
test
mov
scas
cmp
dec
aas
aas
inc
sub
movb
sbbb
int
das
sbb
or
sbb
pop
xchg
mov
fidivl
adc
mov
jno
das
push
out
fdivs
dec
sub
ljmp
pop
sub
cmp
addb
dec
cmp
xchg
mov
cmpsb
ja
and
repnz
jmp
dec
into
iret
scas
jnp
dec
ret
push
mov
adc
xchg
add
push
jp
movsb
cmp
mov
dec
pop
push
dec
push
inc
inc
cmp
loopne
adc
inc
test
pusha
js
pop
inc
dec
mov
mov
inc
fdivs
fisttpll
iret
mov
lcall
clc
jle
sbb
pop
xor
dec
cmp
lds
aas
jnp
sti
lahf
sub
fwait
xchg
inc
lods
xor
dec
pop
lret
sub
cmc
stos
data16
or
xor
jb
push
xorl
push
pop
inc
fcmovnb
push
fidivrl
aas
sub
aas
cmp
int3
iret
sbb
mov
int
xlat
scas
mov
popf
data16
push
rcrl
mov
push
aas
fsubl
and
mov
sub
loopne
bnd
xchg
cmc
or
repnz
dec
mov
ret
xor
mov
cmp
stc
enter
adc
movsl
imulb
dec
push
fistpll
pop
icebp
push
test
pop
jp
cmp
jmp
push
inc
rolb
mov
jg
lahf
mov
and
stos
lods
mov
frstor
xor
lods
fdivrl
adcl
repz
sub
in
fldcw
fists
cs
mov
xor
adc
int
and
push
push
or
jb
iret
cmp
jno
xchg
dec
and
lods
push
fstl
loopne
jb
xchg
iret
sub
out
cmp
mov
xor
mov
xor
inc
ret
mov
stos
bnd
into
pusha
inc
out
int3
mov
xor
shrb
cmp
fisubl
and
cmp
idiv
cs
ja
mov
arpl
aam
stc
sahf
dec
popf
inc
test
inc
push
add
mov
mov
inc
stc
ret
imull
pop
popa
jg
shl
in
xchg
push
pushw
mov
jnp
sub
push
or
xchg
push
les
push
sarl
jle
in
cmp
cltd
rcrb
lds
mov
decb
aas
rclb
push
lods
mov
out
mov
sub
outsb
xor
xchg
push
and
daa
icebp
imul
add
mov
mov
push
xor
icebp
jo
sub
int
arpl
addb
add
daa
cmpsl
cmc
fimuls
dec
hlt
mov
pop
jo
psllw
pop
xchg
dec
ljmp
pop
xchg
shll
mov
adc
jb
mov
push
or
popf
push
sbb
fsubs
xchg
out
or
dec
icebp
or
pop
and
add
mov
fnsave
aas
in
addr16
xchg
lds
mov
scas
add
adc
jl
icebp
adc
xchg
push
adc
jno
jns
dec
arpl
xor
pcmpeqd
mov
popa
xchg
neg
adc
rorl
lds
dec
inc
jle
mov
rolb
jbe
push
sbb
cmp
idiv
cltd
btc
push
push
xor
sub
shl
push
xor
rcll
inc
add
inc
addr16
ret
das
out
xchg
test
inc
pop
ficoms
ljmp
sub
mov
sub
pop
or
cmp
fidivrs
fwait
or
jle
int
cmc
test
sub
int
pop
inc
jle
push
and
xchg
inc
dec
clc
jecxz
add
mov
lahf
movsb
int
sub
lahf
and
js
or
xchg
insb
sar
pop
imulb
add
rol
or
inc
das
sbb
xor
int3
cmp
adcb
ror
or
es
dec
lret
and
dec
repz
aam
xor
dec
mov
cwtl
and
es
jae
xor
shll
scas
xchg
or
xchg
fs
fwait
xchg
pop
ja
sub
dec
mov
int3
cmp
mov
and
aam
insl
ds
sarb
jle
es
adc
and
pushf
inc
and
jp
frstor
pop
and
js
popf
arpl
jge
jmp
ret
in
xor
cmp
fsts
cltd
cmp
or
dec
pop
add
in
inc
mov
jle
push
dec
outsl
or
f2xm1
push
lahf
inc
testb
dec
bound
xchg
andl
pop
mov
xor
cmp
rolb
inc
xor
mov
into
adc
movsb
test
lock
sbb
cmpsl
mov
repz
out
cmp
fwait
jle
stc
scas
fldcw
xor
xchg
lods
and
das
mov
add
lret
lret
cmp
inc
mov
stos
push
jmp
mov
inc
xor
repz
stos
cmp
inc
xchg
pop
jb
cs
inc
repz
xor
cmpsl
and
repnz
jmp
data16
data16
mov
inc
fidivrl
lret
mov
jmp
cli
data16
mov
stos
mov
mov
pop
xor
pop
cmp
lods
adc
xchg
sbb
lahf
mov
ret
aas
xlat
fiaddl
push
lret
and
stos
dec
cmpsb
and
mov
mov
sbb
pop
jle
fistps
push
fwait
mov
sub
test
inc
pop
iret
gs
mov
pop
mov
test
inc
inc
test
push
adc
mov
fwait
cmp
jl
aas
jo
inc
push
in
mov
and
xor
sub
jge
test
add
xor
xchg
out
stos
nop
mov
xor
in
pop
cmp
sahf
mov
outsl
dec
jg
shrb
scas
adc
fprem1
xchg
outsb
cmpsl
mov
scas
push
dec
into
cmp
dec
push
mov
lods
jle
lock
push
add
xchg
xchg
xor
pop
scas
xchg
jmp
outsb
sbb
mov
adc
sub
sub
leave
cltd
mov
push
cmp
fnstcw
movsl
xchg
push
rcr
test
add
mov
movsb
xor
sti
aas
test
cltd
pop
in
cld
xchg
dec
mov
outsl
jb
cmp
lock
imul
insb
fwait
xlat
adc
mov
scas
mov
jp
pop
adc
adc
cmpsb
pop
mov
mov
jge
and
or
jns
mov
xchg
hlt
inc
inc
jle
jmp
cmp
pusha
inc
or
fistpll
xor
ficoms
xor
xor
rcrb
xor
pop
cmp
xor
mov
scas
sbb
add
ficoms
mov
pusha
pop
ficomps
rolb
or
or
xchg
dec
push
das
jle
mov
mov
shll
dec
sbb
dec
mov
jb
jmp
push
xor
leave
cmp
das
sub
jle
hlt
cmp
scas
cmp
inc
shlb
in
inc
xor
lods
dec
cmp
jno
out
jbe
mov
add
aas
lods
dec
cmp
cmp
lcall
imul
sbb
cmp
sbb
sub
imull
fs
ja
daa
call
sbb
in
inc
cmp
lret
mov
fbstp
cmp
iret
inc
clc
dec
xlat
xchg
into
mov
mov
aas
xor
faddl
mov
icebp
imul
pop
sarl
mov
sahf
sub
add
movd
cmp
mov
fnstenv
aas
mov
xor
fistpl
ret
inc
test
rcrb
das
sahf
add
jg
pop
outsl
dec
fstps
sub
sub
inc
jle
sub
imul
mov
fistl
scas
psubq
aas
sub
out
popf
lret
add
xchg
fiadds
cs
mov
lds
and
mov
rcll
mov
xchg
imul
pmullw
frstor
jg
sub
xlat
mov
pop
fidivs
pop
fldcw
aas
cmp
out
push
sbb
push
int
push
and
or
add
pop
cmpsl
jmp
or
add
push
mov
cmp
lret
xor
jae
dec
cmp
jb
mov
jns
mov
push
aaa
imul
jecxz
push
dec
lods
das
orl
push
push
test
adc
sub
push
xchg
in
loopne
std
dec
icebp
adc
aas
jle
push
mov
adc
ret
sub
or
lock
pop
in
andb
mov
into
mov
or
or
jns
adc
mov
cmp
je
mov
lret
mov
pop
dec
mov
xor
xor
data16
push
imul
and
std
inc
faddp
sub
jo
daa
jp
add
movsb
sub
aam
lods
insb
stc
push
ret
pop
inc
rorl
sbb
mul
xor
inc
lret
adc
cmovs
add
adc
push
sub
iret
dec
jge
cmp
sbb
fimuls
shr
iret
fld
pop
push
aas
inc
scas
fistpll
das
push
xor
lret
mov
xchg
jl
add
fs
das
mov
sarb
jle
and
idivb
mov
push
das
int
jle
ficoms
push
mov
inc
pop
ret
ja
fisubrs
enter
fimull
dec
cmp
pop
dec
hlt
mov
sub
sbb
adc
ljmp
dec
push
xor
lock
stos
inc
sub
cmp
mov
fnstenv
cs
test
cltd
hlt
shll
add
rolb
outsl
pop
mov
cmp
mov
stc
dec
jl
imul
js
leave
dec
imul
pop
insb
cmp
enter
pop
in
mov
or
xchg
aaa
dec
addl
std
mov
sub
btc
stc
adc
xor
fsubr
das
lds
dec
xchg
push
fstps
jp
dec
std
pop
shll
xchg
add
imul
aaa
fildll
pop
loope
sbb
cmp
xchg
int
stos
sbb
inc
lds
mov
jbe
and
cli
mov
aaa
rcrl
stos
ret
test
lcall
cmp
loop
xor
lods
lock
dec
ljmp
jle
mov
hlt
dec
xchg
xchg
clc
mov
stos
mov
push
movsb
pushl
lahf
pop
pop
dec
sbb
stc
lret
fstl
std
mov
dec
js
cli
and
xchg
aas
les
sub
lret
or
scas
stos
ficomps
js
add
pushl
js
mov
mov
es
xor
xchg
mov
cltd
add
sbb
mov
lret
cmp
cs
mov
or
gs
test
push
into
dec
push
and
outsl
dec
lds
lret
cmp
mov
sub
sbb
mov
sahf
mov
addr16
pop
lret
xor
jo
imul
cli
sbb
es
jecxz
int
scas
mov
fdivr
inc
jecxz
cli
dec
xor
xor
out
ss
imul
push
aad
mov
push
imul
ss
and
sub
sti
lds
dec
mov
ror
addr16
js
popa
xchg
cmp
stc
stos
sbb
pop
xchg
icebp
inc
das
xchg
add
xchg
sbb
inc
lds
sub
jle
int
or
cwtl
stos
cmp
insl
addr16
sbb
cmp
lods
movsb
inc
les
sbb
dec
jae
lret
mov
fwait
ret
pop
popf
addr16
fcompp
les
dec
add
test
sar
fisubrl
lret
arpl
add
pushf
mov
mov
jle
push
inc
clc
and
cmp
or
ja
loope
and
mov
fisttps
cmp
in
jbe
out
stos
pop
cmc
stos
sub
cwtl
sbb
add
xor
lcall
aas
enter
cmp
inc
push
and
or
xor
adc
jp
gs
scas
fists
leave
jno
cmpsl
sub
stos
xorl
pushf
sub
push
mov
iret
add
js
loopne
ret
in
mov
bound
std
scas
add
jo
das
sti
mov
sbb
dec
pop
jae
movsl
sub
sahf
mov
lret
mov
sbb
add
pop
or
mov
xchg
mov
lret
pop
inc
add
pop
dec
pop
jle
jbe
stos
mov
bound
sbb
stc
xchg
jne
test
adcl
pavgw
adc
popf
xchg
sub
popa
hlt
jne
xchg
sub
jl
sahf
popf
and
int3
push
and
lods
adc
fistpl
jle
clc
push
out
mov
in
ds
xchg
leave
aaa
sub
lret
mov
sahf
sti
xor
je
add
cmp
stc
dec
pop
push
adc
xchg
or
arpl
sub
mov
std
cmp
aaa
adc
lret
mov
push
clc
in
cs
pop
sbb
jns
push
cmpl
lret
aaa
dec
push
les
mov
mov
inc
bound
fwait
xchg
movsl
push
imul
dec
fildl
mov
loope
outsl
jp
jg
in
aam
inc
sbb
inc
jle
fs
loopne
inc
aaa
test
push
int3
fdivs
sub
imul
iret
mov
mov
inc
int
inc
js
fists
xchg
sbb
popa
mov
shr
js
pop
cmc
in
das
pop
sub
xchg
push
loopne
mov
out
cli
add
les
cmp
and
mov
xchg
xchg
orl
xor
popf
nop
les
fcomps
jp
stc
jbe
inc
and
sbb
clts
adc
xchg
mov
or
out
sbb
xchg
or
fwait
sahf
gs
add
aaa
mov
aas
cmc
stos
jb
mulb
push
inc
shll
cs
in
jg
sbb
jp
rorb
add
movsb
aas
push
cmc
pop
sti
mov
jg
std
icebp
push
das
sarl
subb
xchg
pop
es
mov
mov
pop
bound
sub
sbb
incl
out
out
pusha
pop
pop
out
rolb
adc
shlb
and
push
test
cmp
lret
repz
aas
dec
sub
xor
dec
push
lret
cmp
mov
stc
or
mov
pop
mov
je
and
icebp
mov
aam
repnz
and
adc
pop
fldenv
movsl
pop
cld
jmp
outsb
jmp
cmc
jmp
call
sub
addb
leave
xchg
mov
pop
mov
xchg
push
add
dec
or
mov
inc
sbb
stos
push
addr16
mov
ds
imul
add
cs
cmp
lock
addr16
pop
mov
cltd
xlat
cmpsb
and
or
out
insb
ds
dec
mov
jecxz
daa
push
cld
je
sub
mov
test
push
outsb
testl
js
icebp
sarl
mov
mov
mov
idivb
testl
xor
fs
imul
dec
xchg
xchg
clc
cmc
mov
push
sbbl
insl
cmp
sbb
fdiv
fiadds
add
push
out
imul
or
xor
cmp
popf
jp
pushf
adc
lret
iret
lea
js
mov
les
dec
inc
mov
imul
sub
dec
shll
cmc
das
stos
int3
sarl
xor
xor
int
pop
ss
imul
js
push
sub
jbe
rcl
cmp
inc
js
test
lds
xor
fwait
inc
jp
addr16
decl
cmp
and
pop
imul
push
out
scas
inc
and
xorb
into
lds
test
aaa
gs
ficomps
imul
aaa
stos
jle
push
test
aam
ljmp
sub
mov
and
push
rorb
cmp
sub
cmp
test
mov
push
add
jnp
outsb
lods
test
data16
add
sub
mov
ljmp
or
imul
aaa
hlt
notb
mov
popf
fiaddl
mov
sahf
push
shlb
std
mov
aas
push
push
popa
sbb
xchg
shrl
inc
std
add
dec
test
lea
xchg
cwtl
popa
jae
sbbl
sub
jp
xor
addb
jge
adc
or
jge
add
das
and
inc
cmp
jmp
mov
mov
cltd
jmp
test
inc
mov
repz
mov
or
lret
xor
lret
xchg
std
xor
xchg
test
cmp
jbe
cmp
push
addb
in
mov
sbb
adc
push
lret
mov
cwtl
xor
dec
rolb
in
mov
lret
push
aam
push
insb
mov
cmp
push
pop
iret
inc
aaa
add
xchg
rcl
pop
lret
push
rcrb
lret
dec
out
outsl
mov
inc
cli
cmp
es
sub
xor
pop
js
push
jge
lahf
lea
cli
scas
cmp
js
mov
std
outsl
std
mov
mov
xchg
imul
ret
bound
dec
mov
fs
fisubs
adc
inc
out
adc
into
cltd
lret
lea
inc
inc
shrb
cmc
and
pop
mov
cwtl
aam
push
cltd
jle
inc
outsb
and
imul
inc
das
repnz
scas
xor
and
popf
pop
cmp
and
lret
aas
sbb
sahf
fidivl
call
push
or
jnp
ds
popf
sbb
pusha
pop
mov
aas
clc
mov
adc
add
push
mov
jne
cs
addl
js
stos
test
lret
or
dec
xor
out
lcall
aaa
cmp
xchg
mov
into
ror
add
shl
arpl
lret
and
sub
leave
or
test
dec
test
lods
adc
daa
or
aas
lcall
into
xchg
and
add
push
pop
out
sbb
push
add
or
loop
cli
or
inc
mov
mov
lretw
pop
bound
cmp
jno
and
xor
sbb
and
push
addr16
xchg
cmp
pop
gs
pop
iret
dec
scas
cmp
pop
dec
adc
iret
or
daa
inc
stos
push
mov
xorl
shl
cmpsw
cmp
aas
cmp
repz
lds
sbb
fnstcw
dec
js
cmp
adc
sub
outsb
or
dec
mov
sub
mov
das
repz
mov
ss
xchg
cltd
iret
or
push
sahf
xchg
xchg
daa
add
dec
inc
sti
js
scas
and
test
sarb
in
sbb
inc
sub
xchg
jnp
mov
sbb
movsb
das
aas
lods
push
test
pop
xsha1
cmpsb
push
stc
daa
js
inc
cltd
xchg
mov
test
mov
stos
mov
aaa
add
cmp
outsb
sub
shrl
push
negl
pop
cmp
push
pushf
or
jg
push
inc
add
in
cmp
jle
out
lret
or
pop
shrl
xor
push
jb
ds
lods
pop
mov
mov
ret
subl
hlt
push
push
adc
scas
cmp
insb
mov
das
lods
jp
pop
xor
out
push
roll
push
orb
push
imul
cmp
sub
scas
inc
cmpsb
test
call
adc
inc
jne
fs
and
xor
imul
leave
xchg
lcall
sarl
mov
dec
pop
daa
inc
rcr
push
jbe
pushf
pop
lret
stos
das
cmp
xchg
cs
aas
mov
cmp
or
sub
mov
mov
adc
cmp
shlb
stos
jle
std
aaa
inc
dec
mov
inc
jle
and
xlat
cmc
sbb
xchg
outsl
add
mov
stos
fbld
negl
decb
mov
push
test
bound
add
sub
roll
push
adc
test
mov
dec
sub
add
dec
bound
dec
and
or
int
fildl
jecxz
xchg
arpl
jbe
or
adc
aaa
gs
push
mov
push
aas
dec
cmp
imul
inc
das
pop
test
data16
push
mov
sbb
pop
idivb
dec
xor
pop
imul
dec
stos
push
sbb
mov
inc
xchg
xchg
gs
push
fbld
mov
sub
out
mov
ds
clc
sub
add
cmp
xchg
loopne
lds
dec
scas
push
adc
into
in
fcoms
lods
aad
add
add
int
push
push
ret
fs
xor
pop
push
arpl
out
jle
pop
arpl
pop
addr16
stos
shlb
jo
sahf
imull
iret
and
lods
pop
sbb
sbb
add
insl
pop
add
rol
jle
xchg
sti
adc
inc
jnp
insb
jg
sub
dec
ret
and
lods
in
pop
imul
lret
insl
cmp
inc
push
call
dec
mov
aas
add
mov
sarb
cmp
adc
sbb
cmpsb
call
sub
mov
sbb
push
dec
scas
cmp
xchg
test
stos
scas
stos
lahf
pusha
adc
fidivrl
lcall
lcall
mov
fimull
add
std
arpl
lock
out
mov
add
xor
jbe
scas
aas
bound
out
test
push
addr16
push
stos
push
or
xchg
xchg
aam
add
ret
lds
addl
and
lock
loope
and
mov
sub
aas
les
inc
mov
and
push
add
lahf
inc
sub
xchg
jg
mov
push
shr
rcll
mov
fsubr
call
mov
cmp
jmp
sub
mov
lds
cmpb
pop
js
mov
dec
fcos
imul
dec
dec
xor
mov
push
add
dec
cmp
mov
push
mov
add
fdivrp
mov
loopne
fisubl
std
inc
pushf
jecxz
nop
mov
xor
add
xchg
push
mov
xchg
jle
mov
and
fsubrp
lahf
push
cld
sub
push
popf
xchg
jecxz
inc
leave
iret
push
aaa
adc
inc
pop
sbb
pop
int3
aas
aaa
les
pop
rcrb
sub
push
lea
adc
fildl
das
arpl
push
dec
push
leave
fsubrs
jo
jmp
inc
rcrl
jo
xor
dec
adc
mov
pop
cmp
xor
cs
movsl
sbb
dec
ss
xchg
nop
ds
mov
push
xor
rcll
xchg
lcall
pop
ror
test
sub
daa
or
ljmp
stos
cmp
test
arpl
stos
movsl
jge
fcmovnbe
lret
xchg
xor
xchg
xchg
jp
fistps
push
cmp
cmovnp
mov
xchg
cmp
add
xchg
cmp
push
daa
xlat
in
jmp
bound
add
clc
jmp
push
fidivs
mov
jle
mov
roll
or
jb
dec
and
xor
or
xchg
sbb
sub
fildl
mov
xlat
push
push
jle
and
cwtl
scas
repz
cmpsb
scas
in
mull
cmp
loop
push
mov
xchg
std
mov
mov
push
pcmpgtb
fstpt
mov
add
cmpsl
or
jnp
test
or
mov
jb
test
jmp
mov
in
fxch
imul
jmp
aam
out
push
or
or
inc
lods
add
inc
mov
repnz
push
rorl
outsl
adc
repnz
pop
adc
xchg
add
add
or
jns
fstl
stos
nop
cmp
rorl
jns
ja
inc
pushl
mov
and
cmpsb
or
xlat
int3
addr16
add
cmp
fnstsw
std
cmp
cmp
inc
add
xchg
mov
push
fidivl
mov
mov
lea
xchg
and
cmp
jnp
cld
xor
jge
push
or
sti
add
mov
jle
std
shlb
jp
test
mov
or
cmp
pusha
scas
cmp
add
add
pop
das
cmp
mov
adc
push
cmpl
pop
mov
ret
mov
inc
or
inc
xchg
fidivrl
daa
dec
cs
rolb
ret
cmp
inc
push
dec
lds
mov
pop
jo
jb
mov
xchg
enter
icebp
iret
cmp
push
stc
push
fwait
sbb
mov
add
sub
xchg
outsl
inc
mov
mulb
sahf
mov
fnstenv
mov
sti
mov
or
mov
xchg
mov
stc
ds
fsubrl
daa
mov
ljmp
pop
imul
aas
and
iret
fstl
xor
pop
lret
push
into
insb
jle
cmpsb
popf
push
pop
popa
icebp
sub
inc
lods
pop
mov
fbstp
sbb
bnd
gs
jo
std
stos
dec
dec
pusha
js
or
xor
in
aaa
fstpl
out
mov
pop
lods
jg
imul
outsl
mov
add
push
jnp
cmpsb
out
add
lods
repz
scas
pop
pop
cltd
xor
pushf
dec
leave
push
inc
test
xchg
and
fmuls
stos
pushf
jp
inc
aaa
dec
push
pusha
ljmp
or
or
cmp
xchg
inc
xor
mov
inc
fildl
mov
cmp
xchg
test
inc
push
arpl
sub
negl
in
inc
cmc
adc
pop
jmp
dec
int
shl
pushl
fbstp
inc
push
xchg
imul
push
sbb
mov
dec
dec
and
dec
mov
push
xchg
jns
dec
mov
hlt
es
xor
xor
mov
push
push
sub
in
push
repnz
mov
nop
mov
inc
js
ds
gs
push
dec
mov
stos
push
sbb
and
movsl
xor
xor
aas
loopne
cmc
jnp,pn
cmp
dec
arpl
adc
dec
mov
or
mov
mov
inc
int
or
jns
adcb
ja
les
lods
neg
push
push
bound
cmp
add
push
insl
stc
cmp
movsl
ficoms
stc
push
pushf
hlt
icebp
idiv
and
out
arpl
cmp
addr16
pop
lret
dec
in
loope
popa
mov
push
movsb
insb
fdivrs
hlt
jno
clc
lret
xor
addb
push
decl
push
std
dec
add
fcoms
pop
out
fstps
addr16
mov
sbb
pop
push
aad
xlat
shll
fstl
xchg
cltd
aaa
js
in
sbb
out
loopne
jmp
inc
inc
orl
and
cltd
jnp
fimuls
test
in
mov
lock
cwtl
leave
add
adc
and
xor
mov
pop
adc
into
cmc
pop
mov
cmp
mov
inc
out
lret
or
lods
das
test
lock
cmp
push
mov
or
mov
inc
cmpsb
cmp
js
sarl
sub
test
das
jbe
push
cmpsb
and
fnstenv
repz
test
insl
scas
cmp
xlat
lods
jnp
jae
cs
xorl
movsb
popa
pop
jle
jbe
add
std
cmc
dec
add
mov
mov
inc
fmuls
into
adc
dec
mov
out
out
repz
adc
jmp
xchg
gs
push
inc
dec
mov
lahf
mov
cmp
xchg
push
or
dec
mov
insl
lahf
lods
mov
jge
repz
cmp
and
mov
mov
movsl
push
mov
pop
je
popf
jg
cmp
jmp
lahf
mov
xchg
pop
jle
add
cmp
inc
cmc
repz
test
pop
in
jbe
mov
stos
lahf
hlt
add
int
mov
test
scas
mov
cmc
cltd
dec
inc
xchg
cmpsl
xchg
dec
add
push
fbstp
push
sub
mov
push
lods
lret
sub
popf
aad
hlt
cmp
out
dec
stos
cwtl
fwait
sub
add
jle
mov
cmpsb
cmc
aas
adc
sbb
out
jnp
stos
sbb
out
aas
mov
add
cli
xchg
shlb
pushf
scas
jne
mov
mov
jo
cmp
adc
dec
int
mov
call
dec
fwait
xor
mov
push
stos
push
idiv
push
stos
inc
mov
add
aam
out
mov
add
je
adc
ljmp
in
movsb
int
adc
xchg
mov
inc
jle
push
mov
mov
or
adc
mov
outsl
mov
out
jp
sbb
xor
pop
pushf
pop
mov
xchg
pop
jge
addr16
decl
jo
mov
push
lods
leave
adc
ret
jne
insl
jns
aas
stos
jmp
jne
sub
mov
jle
mov
shl
and
shr
or
sub
fiaddl
cmovnp
into
pcmpgtw
iret
fwait
adc
push
xor
cmp
or
les
stos
test
repnz
jg
dec
and
rcll
fnstcw
inc
das
mov
loope
mov
mov
fstps
mov
aad
cmp
xor
pop
outsl
out
into
cmp
cmp
jnp
mov
add
sbb
lds
pop
cmp
decb
addr16
cld
aam
push
std
jp
aam
inc
and
or
popf
icebp
jle
aad
cwtl
dec
sbb
or
push
and
push
lods
stos
dec
cmpsl
popf
cmp
jae
dec
movsl
jle
jae
mov
push
in
out
cmp
jns
fildll
in
stos
pusha
popf
cld
popa
and
mov
cld
sub
lcall
outsb
and
inc
mov
and
sbb
loop
xchg
stc
out
inc
test
addl
and
xchg
and
adc
jmp
inc
leave
inc
outsb
sbb
pushl
jnp
cmp
imul
loop
mov
push
xor
inc
add
int
push
aaa
pusha
sar
add
mov
pop
xor
lods
push
dec
xchg
jmp
cmovae
lcall
lea
cmp
ret
or
dec
jle
loope
stc
scas
icebp
imul
mov
or
scas
jl
xorb
pop
imul
jbe
stc
lods
std
mov
xor
dec
mov
jne,pn
dec
rcll
inc
outsb
sub
pop
clc
push
cmp
sbb
xlat
cmp
push
movsl
ret
ss
std
loope
gs
lea
outsb
jle
movsl
sub
push
fidivrl
xlat
mov
loopnew
xor
out
xor
adc
jl
mov
test
in
sub
inc
xor
or
sub
mull
jp
add
movsb
fwait
cmp
sub
pushf
and
xor
mov
pop
sbb
inc
das
xchg
xor
or
or
lahf
or
outsl
in
push
inc
aaa
dec
test
mov
inc
push
push
lea
test
mov
dec
dec
pop
lds
pop
inc
sarl
aas
xor
imul
dec
mov
stc
scas
lods
or
adc
push
mov
push
jnp
pop
sbb
sub
imul
lea
rcl
sub
jle
leave
xlat
adc
enter
int3
mov
or
daa
sub
out
daa
sahf
and
add
movd
andl
xor
aaa
stc
and
cmpsl
push
mov
push
add
data16
push
lret
mov
jle
pop
fdivl
jns
mov
in
ret
xchg
sbb
mov
pop
xor
std
xchg
push
mov
add
outsl
xchg
fldt
dec
repnz
mov
sbb
mov
pop
sub
fisubs
pop
jle
inc
stc
cmp
sub
push
aaa
das
jg
stc
push
xchg
dec
push
add
mov
mov
dec
out
incl
adc
shll
pop
jle
cltd
add
xchg
in
out
pop
movsl
dec
repnz
outsl
add
loopne
sbb
std
sbb
pop
sbb
cmp
aaa
in
jl
inc
xor
dec
das
xchg
out
mov
inc
aaa
cwtl
out
and
daa
dec
mov
dec
dec
inc
js
or
or
mov
dec
into
inc
mov
sub
inc
insb
dec
inc
xchg
out
cmp
mov
mov
mov
dec
lods
inc
std
xchg
stos
mov
adc
and
pop
xor
aaa
xchg
push
add
xchg
dec
shl
sub
icebp
push
or
jle
mov
fwait
cmp
dec
cmpsl
bswap
sbb
loop
negb
cmp
xchg
add
fistps
jle
cmc
daa
cli
mov
cmp
add
pop
xor
movaps
or
sub
inc
je
std
pop
das
cmc
scas
pop
lods
add
mov
jnp
cmp
das
js
test
fists
out
js
push
xchg
adc
mov
adc
iret
shrd
scas
shrb
lods
mov
inc
jle
enter
aas
adc
lods
mov
mov
mov
add
cs
and
daa
add
fcomps
in
fcoml
dec
pop
add
jl
inc
in
sbb
out
notb
jg
mov
jle
test
xchg
add
into
and
mov
xor
enter
mov
mov
loop
mov
push
inc
and
outsb
xlat
and
popf
jmp
xor
aas
cmp
cmp
out
fcmove
fnstsw
push
pop
js
pop
xor
jbe
mov
xor
pop
xorb
test
stos
aad
xor
xor
cmp
jge
loop
jle
jnp
dec
push
or
adc
mov
dec
data16
push
lea
lret
pop
add
and
daa
push
ds
fwait
mov
pop
cs
fisubs
fs
adc
ja
and
pop
cli
cmp
sub
aas
lock
adc
xor
lods
push
ret
cmp
cmove
test
dec
push
ja
shrl
test
jle
fnstcw
dec
cli
int3
push
stos
cmpsl
mov
push
cmpsb
addr16
mov
pusha
mov
incb
pop
jnp
cmp
lahf
in
mov
push
roll
aaa
cmp
icebp
rcr
push
push
stc
int
mov
js
outsl
xchg
pop
mov
inc
mov
inc
bswap
adc
repnz
sub
pop
jae
jle
sarl
repz
mov
or
cmc
cmpsb
lock
cmpsb
push
inc
andl
sub
mov
adc
rolb
js
lret
pop
mov
lds
sub
mov
xchg
jbe
lret
stc
mov
pop
mov
adc
into
dec
xchg
jae
adc
pop
inc
pop
inc
mov
loopne
mov
insb
nop
subl
mov
lock
int3
jns
popa
and
fisubrl
sub
int
enter
nop
outsl
jb
nop
arpl
and
dec
jecxz
int
imul
pop
sub
push
ja
rolb
and
and
jb
in
cmp
pop
xchg
xchg
adc
arpl
jno
lea
daa
imul
shrd
aas
addr16
ljmp
arpl
pop
vmread
stc
scas
les
stc
int3
out
add
lods
mov
das
xchg
jge
inc
popa
sbb
push
daa
dec
rcr
lret
jne
jl
xchg
or
mov
mov
mov
fstpl
cmpsl
clc
testb
aaa
leave
mov
mov
sub
fsubrs
ret
dec
mov
cmp
ret
inc
cmp
adc
and
add
inc
xor
cmp
mov
scas
addb
lahf
sub
mov
seta
mov
in
add
out
outsb
add
dec
in
dec
sub
mov
cmp
add
scas
dec
and
ret
fidivrs
nopl
gs
sub
aas
cld
xor
xchg
aaa
cmp
cmp
dec
pop
das
pop
xor
mov
int3
in
in
xor
in
decl
gs
pop
fs
sub
ljmp
fwait
add
jb
mov
cs
mov
jle
add
outsl
stos
daa
sbb
fisubl
add
adc
xor
add
dec
xlat
out
push
addr16
add
pop
mov
outsb
fwait
push
repz
fwait
jle
fistpll
aas
pop
in
ror
lds
push
pop
fldcw
sbb
or
sahf
mov
xor
int3
bound
xor
dec
leave
imul
test
sub
pop
dec
jle
cmp
xor
mov
ret
or
icebp
outsb
faddp
mov
push
jle
inc
shll
lret
mov
mov
pop
or
lock
addl
js
stc
fldenv
test
movmskps
cwtd
jns
jae
and
adc
jns
in
into
cmp
int3
mov
je
movsl
sarl
lret
mov
and
icebp
push
bound
jmp
cmp
enter
xchg
iret
int
jg
sub
mov
cmp
invd
scas
jle
mov
test
pop
rclb
ficomps
call
les
cmp
mov
xor
mov
jg
xchg
int3
inc
xor
inc
add
or
dec
and
cmp
nop
sub
xchg
pop
dec
rorb
movsl
jle
shlb
fstpt
das
setle
fmull
popf
inc
dec
scas
adc
push
into
and
jne
and
into
cwtl
xor
xchg
incl
or
sub
data16
mov
fistpl
aaa
dec
scas
or
push
loopne
mov
xchg
or
jecxz
mov
cmp
cmpsb
mov
insb
fstpt
inc
mov
icebp
fcmovne
hlt
aaa
inc
rcrl
pop
jmp
test
call
inc
scas
lcall
sbb
inc
cld
jbe
shlb
dec
xor
jp
scas
movsl
push
push
js
or
jle
mov
aas
xchg
jbe
aaa
xor
mov
cmp
shlb
js
mov
mov
sub
vcvtsd2si
mov
test
fildl
pop
sub
sti
imul
push
and
clc
mov
inc
ficoms
dec
mov
lret
es
pop
stos
lret
popa
push
es
mov
mov
mov
daa
rcrb
call
sbb
push
sbb
sbb
aaa
mov
jecxz
mov
ret
mov
pop
roll
imul
mov
fildll
sarb
xor
shl
negl
into
mov
push
pop
shlb
xor
das
cwtl
pop
leave
and
add
cmpsb
pop
cmpsb
or
sbb
sbb
and
fbstp
ss
mov
pop
cmp
adc
jmp
sub
add
aam
int
lods
js
sub
lahf
das
dec
jge
jl
inc
mov
stc
sahf
movsl
push
jbe
add
pop
daa
mov
lahf
add
sub
loope
test
negb
js
pusha
out
incl
cmp
push
push
sub
fstpt
aas
push
jle
inc
lcall
cmp
das
xor
adc
add
push
xor
and
xchg
sub
push
nop
mov
sub
push
int
scas
stos
mov
leave
gs
sub
add
jns
lods
dec
test
mov
into
imul
or
fnstcw
jmp
inc
adc
pop
movsb
fidivrs
mov
int3
lahf
int
mov
dec
imul
cltd
xchg
je
sahf
jl
pop
jne
mov
inc
pop
incb
shl
inc
mov
push
jbe
mov
jmp
outsl
inc
lahf
xchg
int
cmp
decb
mov
scas
lods
sbb
lahf
pushw
and
idivb
add
mov
cvtps2pi
and
int
fisubl
rorb
cmp
mov
aas
dec
xchg
sub
and
dec
dec
push
cmp
inc
aaa
ljmp
inc
rolb
dec
test
and
std
dec
lea
mov
push
out
repnz
lds
mov
jmpw
jle
lds
ds
inc
mov
or
scas
scas
xlat
sbb
and
mov
lret
insl
cmp
push
sbb
fadds
mov
pop
mov
xchg
dec
jo
test
cmc
pop
mov
inc
mov
inc
inc
and
mov
sub
jo
out
inc
cmpsl
mov
add
xchg
xor
and
cmp
inc
stos
jl
cmp
cs
mov
dec
insb
mov
aaa
sbb
into
mov
dec
dec
pop
cmp
cmp
jnp
aaa
gs
icebp
dec
mov
out
ret
jae
pop
and
out
stc
ret
push
out
dec
push
adc
jge
lahf
arpl
add
mov
imul
xor
sahf
stos
fisttps
into
sti
idivl
or
cmp
addr16
das
int3
pop
cmp
aaa
popf
cmpsl
es
dec
lahf
dec
lds
adc
inc
push
cmp
jns
mov
daa
and
or
imul
cmp
call
add
pop
mov
data16
cmpsl
in
js
repz
stc
call
icebp
cmp
or
loop
iret
out
cmpsl
adc
aas
adc
iret
stc
fists
lea
xlat
movd
mov
xlat
jnp
jmp
mov
mov
add
test
scas
scas
sub
sarl
cmp
jnp
pop
lret
and
lds
ja
bound
xorl
mov
mov
sbb
mov
jle
fldenv
dec
mov
sarb
mov
bound
call
lcall
dec
and
int3
and
les
addr16
cmc
xor
pop
cs
mov
arpl
and
sub
push
push
inc
inc
mov
andb
push
cmp
clc
or
jle
sbb
icebp
pop
mov
jl
jae
notb
call
xchg
and
fdivs
insb
movsl
adc
inc
out
aaa
jle
repnz
sub
xchg
adc
push
push
and
sbb
daa
out
lds
pop
lods
jle
mov
sarb
adc
xor
test
mov
pushf
cmp
iret
xchg
cmc
pop
pop
xor
icebp
repnz
inc
pop
dec
push
insb
adc
ret
shrb
andl
jo
jg
pop
sub
dec
jnp
test
dec
cmp
scas
inc
loop
pop
inc
inc
or
icebp
psubb
rcll
sti
add
add
mov
adc
xchg
repz
in
dec
ret
les
jne
lock
cmp
adc
mov
and
fmull
mov
sub
aaa
push
mov
iret
into
cmp
jle
xor
imul
pop
pop
rclb
sub
aaa
mov
xchg
sub
sub
aad
je
pushl
ss
jnp
mov
or
andl
cmp
lret
mov
lahf
sub
sub
cmp
nop
add
jns
push
jge
daa
notl
mov
xchg
hlt
cmp
and
jne
xlat
add
and
and
mov
mov
and
cmp
and
jno
sub
mov
rcr
in
jecxz
xchg
inc
into
xchg
sbb
mov
fldl2e
sti
stos
push
push
dec
fisttpll
sarl
es
push
lea
neg
lret
push
mov
add
jno
das
inc
cmp
pop
lods
in
icebp
jne
cmc
shrb
mov
or
leave
adc
outsb
bound
sahf
xor
mov
cs
pop
outsl
inc
mov
or
int
les
sbb
sub
sub
test
pop
sti
jle
ljmp
out
mov
add
xor
jmp
in
add
add
push
les
xchg
jbe
stc
xchg
inc
dec
cmpsl
imul
or
jns
jg
imul
sbb
fldenv
loopne
pusha
jnp
sub
inc
dec
xchg
stos
pop
lods
insl
pusha
mov
or
sub
cmp
rcrl
mov
std
rolb
dec
push
jns
insb
mov
mov
divl
je
dec
push
inc
push
dec
xchg
fildll
das
pop
mov
cli
fisubs
and
xchg
lcall
or
mov
xchg
mov
add
xchg
pop
pop
loope
ret
in
lock
mov
dec
push
fstl
ds
cli
push
repnz
aad
cmp
and
fdiv
mov
inc
jle
bound
sbb
pop
addr16
jbe
pop
inc
pop
sbb
and
xchg
dec
push
outsb
sbb
addr16
inc
lahf
jb
and
push
call
cmc
test
sub
add
outsl
fwait
aas
inc
jb
cmp
or
mov
jle
xchg
pop
mov
dec
jmp
insl
or
and
outsl
psrlw
xchg
pop
outsl
push
pop
jp
aad
enter
aaa
sub
mov
jl
arpl
scas
cmp
les
pop
cmpsl
xchg
mov
movsl
jge
lahf
jmp
pop
dec
mov
dec
mov
repz
neg
xchg
les
repz
xor
es
jle
mov
cmc
pop
icebp
hlt
sbb
push
cmp
icebp
lds
sti
rcrl
outsb
aam
cmp
imul
xchg
cmp
inc
inc
or
leave
nop
xchg
stc
insb
and
lods
cltd
sbb
outsl
rclb
arpl
add
fwait
aam
int3
test
gs
sahf
cmc
xchg
or
cwtl
pop
repz
cs
inc
cltd
inc
dec
leave
rcr
inc
and
jp
repz
es
mov
filds
cmp
outsl
or
xchg
push
lret
cmc
pushf
add
dec
jne
int
cmp
nop
out
pop
pop
addr16
cmp
and
mov
mov
jle
adc
push
and
inc
cmp
dec
mov
jb
adc
add
es
sub
mov
imul
cmp
int3
mov
mov
dec
popf
inc
aaa
dec
daa
mov
jnp
out
stc
and
dec
jl
add
loop
push
cs
adc
jns
jo
in
mov
jbe
lret
addr16
sbb
push
icebp
js
xchg
inc
pop
xchg
sti
sbb
loop
lcall
inc
mov
data16
pop
dec
lods
mov
mov
mov
sti
jg
mov
sbb
inc
stc
jg
stos
xchg
push
js
xor
mov
cmpsb
fs
xor
pop
mov
and
push
out
adc
mov
jg
and
flds
mov
lock
int
jns
sbbl
leave
inc
rcrl
fwait
mov
rcr
add
out
gs
out
add
sbb
jae
pop
call
push
cmp
pop
pop
sub
aam
jp
add
in
fidivl
cltd
fiaddl
push
dec
mov
mov
and
cld
and
and
stc
leave
pop
mov
inc
dec
clc
cmp
and
adc
daa
xchg
mov
aas
or
adc
dec
or
inc
mov
or
add
fcmovnb
fwait
or
lret
out
jnp
rorl
js
cmpsl
lods
mov
pop
jb
or
cmpsb
dec
xchg
cmp
out
ljmp
jle
cmpsb
xchg
xor
ror
push
push
fucom
or
imul
jge
mov
adc
or
sbbl
insl
sbb
in
pop
sbb
insb
imul
sbb
pop
or
outsb
bound
mov
stos
sub
ljmp
xchg
or
leave
js,pn
mov
aaa
and
mov
mov
ret
mov
xor
push
in
xchg
icebp
stos
adc
sub
mov
ficomps
jecxz
cld
gs
and
xor
cmp
movsl
stos
fisubrs
in
dec
jnp
xor
pop
jmp
push
das
dec
cmp
add
inc
xchg
dec
movsl
aas
inc
popa
lret
jo
xchg
sub
push
jle
insb
je
jnp
pop
push
pushl
ds
mov
gs
mov
js
xchg
repz
inc
adc
mov
xchg
mov
or
mov
mov
cmp
dec
push
out
pop
sub
pop
add
cltd
push
lock
lahf
pop
cmp
das
lcall
inc
mov
jne
sbb
mov
adc
mov
and
cmp
out
cwtl
rclb
push
orb
push
lret
cmp
mov
gs
lret
icebp
popa
jmp
insb
nop
jge
data16
pop
aaa
and
mov
mov
insb
mov
push
rcr
out
mov
push
repnz
lock
push
sbb
dec
fsts
rorl
out
aam
outsl
aam
xchg
adc
fsubl
jmp
lret
xchg
int3
aaa
xor
subl
xchg
and
rcrl
sbbl
scas
and
mov
mov
and
mov
cltd
dec
shlb
fsts
pop
sbb
loopne
inc
and
enter
push
fs
inc
and
ret
scas
xor
adc
testl
push
mov
sbb
pop
inc
pop
mov
push
dec
ja
xlat
iret
lods
xchg
mov
jle
lods
aad
jne
or
js
mov
mov
out
or
mov
mov
cmpsl
scas
xchg
xor
inc
jo
mov
and
and
repz
outsb
sbbl
or
cltd
inc
mov
mov
mov
sti
mov
js
cmp
pop
into
and
add
cld
pop
xor
push
rorb
jg
dec
pop
sbb
xlat
inc
mov
fsubrs
sbb
mov
push
jg
lahf
ret
aaa
outsb
fcoms
enter
push
sti
imul
sbb
enter
sub
lret
mov
push
addl
dec
dec
inc
push
or
mov
jbe
call
lock
out
mov
sti
xor
lret
mov
cmp
or
xchg
cmp
mov
test
mov
add
test
xchg
pop
dec
repz
dec
clc
inc
data16
xor
xor
aas
xchg
test
pop
mov
or
mov
inc
jle
enter
cs
mov
cmp
sub
inc
mov
outsb
fstpt
into
cmpsb
shr
stos
leave
stos
mov
dec
mov
or
cmp
insl
iret
bound
aas
push
jl
scas
repz
pop
push
into
inc
lods
jle
sbb
mov
cmc
sub
xor
or
cs
push
aaa
mov
cmp
in
pop
scas
out
ljmp
in
sbb
xchg
push
nop
cmpsb
cs
scas
imul
cmc
jbe
stos
pop
pop
jmp
daa
xchg
push
jle
cwtl
stc
setb
adc
lds
call
xor
and
scas
mov
cmc
sbb
pop
lcall
and
enter
lds
in
dec
lret
sbb
aaa
inc
pop
push
jg
push
cmp
loop
and
jbe
xchg
pusha
dec
and
add
in
add
scas
push
or
push
jl
scas
mov
cmpsl
jp
mov
xchg
bnd
jge
adc
pop
test
ss
daa
jle
insl
out
jmp
mov
out
fs
xchg
xor
or
daa
adc
xchg
push
adcb
scas
cmp
nop
push
push
adc
movb
add
lahf
aas
loope
add
mov
sahf
repz
jmp
jmp
mov
aas
dec
outsb
jle
and
or
pop
cltd
cmp
and
les
lock
sbbl
push
sub
xchg
fisttpll
scas
ljmp
dec
test
mov
lods
jbe
jle
test
inc
add
nop
cld
push
enter
pop
jle
add
mov
in
imul
stc
jecxz
mov
fwait
inc
scas
lods
fcoml
in
int
fsubrl
mov
lea
dec
add
add
mov
cmp
jbe
push
aas
or
add
out
fwait
lret
push
into
xchg
mov
dec
inc
jle
lret
lret
inc
jp
xor
jbe
es
lret
sbb
xor
cmpsl
lahf
xor
xchg
lcall
push
syscall
lds
loopne
adc
aad
push
push
aaa
dec
addr16
lret
add
lcall
shrb
scas
es
into
pop
lods
jnp
scas
sub
das
mov
add
jns
push
pop
es
inc
sti
test
stos
pop
mov
cwtl
adc
cmpsl
ffreep
gs
data16
push
xor
mov
inc
testl
push
daa
arpl
mov
jmp
pop
mov
das
pop
mov
add
stc
lret
mov
add
std
add
pusha
cmp
aad
jmp
push
mov
or
or
ficoms
sub
out
and
out
cmp
fwait
into
aas
mov
mov
rolb
add
loop
pop
or
xlat
inc
sub
mov
sbb
or
push
pop
icebp
lods
add
xchg
push
xor
ja
mov
xor
out
jo
cmp
mov
outsl
xchg
lcall
pop
cmpsb
pop
or
push
cmp
jg
mov
dec
mov
sarb
mov
and
in
dec
icebp
ja
mov
in
js
ret
pop
cmp
sbb
xchg
pop
insl
mov
scas
sbb
pop
outsb
cmp
fldenv
in
adc
or
or
ficomps
das
or
xor
fcmovnu
std
push
fwait
inc
xor
lods
jnp
jle
shl
xor
dec
stos
fistpl
mov
jg
pop
inc
xor
push
icebp
or
inc
jmp
xor
ss
or
and
outsb
cmp
xlat
inc
scas
push
sub
testl
lods
jns,pn
sar
inc
sar
sti
cmp
ret
jle
jae
pop
sbb
scas
adc
xsavec
jns
xor
movsl
sbb
sub
push
pop
push
xchg
imul
and
stos
jle
xchg
dec
rcr
or
insl
addr16
push
inc
xchg
jbe,pt
iret
decb
xor
inc
mov
push
mov
lock
inc
data16
out
pop
inc
in
pop
stos
psubd
pop
cs
mov
pop
stc
adcl
push
cmp
hlt
mov
or
arpl
push
sub
cltd
jge
or
xchg
push
xchg
addr16
fistpll
call
pusha
push
mov
push
jmp
sbb
or
js
adc
stos
pushf
cmp
inc
aas
inc
clc
in
pop
xchg
lods
mov
pop
and
sub
std
mov
xchg
loopne
inc
imul
insb
jle
dec
in
adc
dec
xchg
dec
scas
pushf
and
data16
shr
mov
xor
jbe
or
push
in
adc
xchg
fisubrs
test
xchg
aas
ret
aad
dec
add
push
out
fs
xchg
jae
sub
push
fstpl
xlat
jb
jle
in
inc
int
dec
adc
sub
in
lahf
push
inc
add
in
jle
pop
fwait
cmp
xchg
pop
add
ss
push
pop
out
and
jmp
sub
add
cmp
jmp
ret
push
stos
jbe
xor
add
sub
jle
jo
push
stos
gs
jo
cmpsb
xchg
mov
xchg
in
ja
sbb
call
shrl
mov
and
enter
mov
addr16
mov
inc
mov
jnp
test
loop
push
adc
push
sarl
or
jl
cmp
cmp
inc
das
daa
jge
push
and
xchg
sub
icebp
sub
pop
std
lret
cltd
push
and
aas
stos
push
movups
adc
inc
jg
jle
add
push
cmp
jp
hlt
ja
xchg
shrl
hlt
repnz
and
jnp
mov
dec
fimull
stc
or
xchg
int3
dec
test
iret
outsb
stc
mov
jae
cwtl
mov
dec
fldcw
pop
outsl
pop
push
push
ficomps
shll
mov
pop
mov
sbb
ss
pop
inc
mov
inc
ror
cwtl
les
outsb
xor
inc
cmp
pop
push
insb
icebp
out
adc
add
inc
jle
xor
rcll
ss
dec
dec
cmp
sub
lret
mov
pop
test
add
pop
movsb
mov
int
add
xorb
add
dec
pop
daa
jns
cmp
push
out
pop
pop
cli
mov
mov
xchg
pop
lcall
dec
popf
cmp
xchg
jo
std
lods
testl
adc
ss
xchg
adc
cmc
cmp
jnp
sarl
pushf
outsl
inc
adc
scas
sbb
inc
stos
fists
pop
rclb
lret
lret
inc
movsb
pop
mov
mov
inc
fistpll
sti
das
pop
shll
mov
dec
and
and
das
sti
mov
dec
inc
mov
cmp
xchg
js
in
cli
stos
lods
test
shl
das
test
dec
jno
jnp
push
inc
mov
xor
aam
pushf
add
lea
rolb
push
sahf
sub
cmp
dec
fsubl
sti
sub
inc
jg
rorb
ret
pop
cmp
xchg
push
stc
xchg
sub
loope
pop
inc
dec
cmp
subl
out
popf
ret
and
mov
loopne
mov
mov
lea
cmp
outsl
mov
and
inc
sbb
xor
mov
and
xor
fidivrs
or
jl
xchg
mov
or
nop
pop
popf
in
jb
pop
inc
jle
shlb
mov
push
outsl
fidivs
and
cmp
mov
lret
xchg
scas
jno
jbe
mov
xchg
or
in
pop
and
iret
das
sti
pop
xchg
test
jnp
xor
aas
loopne
jge
dec
xchg
jae
cmp
repz
push
adc
aaa
jbe
xchg
popa
repnz
out
lock
int
jno
nop
sub
xchg
insb
and
push
je
mov
mov
ret
sub
jo
movsb
mov
js
inc
pop
xchg
xchg
fildll
or
test
mov
lret
cld
pop
out
jnp
mov
adc
in
fldenv
and
or
outsl
stos
push
cltd
mov
xchg
aaa
jo
cmpsl
push
add
nop
sub
mov
pop
xchg
lods
fcmovnbe
lcall
push
cmp
iret
mov
jle
out
push
jo
sub
ffree
push
das
dec
in
sbb
cmp
das
cltd
test
and
cltd
sbb
pop
mov
jae
stos
sub
ffreep
and
mov
pop
out
pop
xchg
test
mov
pop
xchg
pop
in
orb
cmp
jns
fs
outsl
mov
nop
push
push
imul
pop
add
add
hlt
mov
xchg
dec
sbb
push
push
mov
mov
aad
aas
and
icebp
cmc
daa
dec
push
sub
jmp
inc
out
inc
out
fildll
decl
divl
loop
mov
fwait
push
dec
xchg
test
cmp
push
or
mov
js
in
lret
xchg
inc
stc
xlat
enter
xchg
or
mov
stos
add
xor
stc
cltd
dec
jb
fistpll
mov
pop
add
std
inc
or
arpl
and
mov
fisubs
iret
or
shl
adc
and
mov
jne
mov
out
loopne
cltd
fdivrl
fadds
add
cmp
and
xchg
icebp
mov
jnp
aas
sbb
dec
xchg
ljmp
cmp
sub
cmp
cmp
cmp
jg
andl
mov
out
fists
mov
jle
jmp
xlat
movsl
xorb
out
xchg
out
mov
sub
out
push
pop
add
cmc
test
sub
jns
adc
pop
mov
je,pt
xchg
negl
inc
pop
pop
stc
or
mulb
clc
in
pop
in
je
aam
jns
mov
int3
lds
and
cmpsb
fmuls
sub
xchg
shll
std
xchg
mov
leave
or
xor
inc
mov
mov
mov
scas
ficomps
dec
inc
jle
and
pop
outsl
out
mov
aad
sahf
sub
mov
jbe
lds
pushl
xchg
pop
jo
jno
mov
add
inc
testb
jbe
mov
push
fstps
adc
vstmxcsr
mov
lea
or
add
push
mov
sarb
enter
dec
es
xchg
cmp
lds
outsl
movsl
push
fstpt
push
xor
sbb
pop
je
push
mov
in
jo
test
xlat
lret
lcall
std
inc
mov
mov
pop
cmc
jle
lahf
dec
movsl
push
push
jne
ljmp
cltd
dec
movaps
mov
mov
lret
shll
cmp
pop
mov
dec
stos
pushl
scas
and
and
pushf
pop
mov
jne
and
push
lods
fs
in
xor
js
in
negl
movsl
outsb
pop
daa
dec
pop
fldenv
and
clc
mov
dec
inc
fsts
test
js
imulb
dec
scas
adc
xor
push
ljmp
push
test
scas
ret
mov
nop
mov
xchg
fsqrt
or
xchg
push
aam
dec
cld
addr16
repz
xchg
mov
inc
sbb
cld
imul
addr16
sub
iret
imul
rcl
jmp
sarb
fcom
push
fxch
hlt
push
cmp
sbb
mov
das
xor
iret
adc
cmp
cmp
adc
stc
mov
xor
mov
and
jg
icebp
pop
lds
es
mov
mov
aam
shll
popa
aaa
mov
jecxz
xchg
mov
push
mov
pop
pop
and
or
cltd
pop
nop
mov
popa
enter
inc
lods
cs
ret
pop
dec
gs
in
or
cld
lret
das
cmp
aad
xor
xor
cmp
bound
mov
lea
lock
jge
aas
jb
mov
mov
sub
push
mov
and
in
jle
flds
inc
mov
cmp
pop
jle
inc
in
shrl
jb
push
enter
xchg
inc
out
adc
and
inc
mov
popa
jp
fs
cmc
pusha
test
pusha
dec
xor
nop
aaa
adc
stos
into
jo
inc
cmp
cmc
push
and
insl
sbb
imul
push
sbb
mov
cmp
mov
and
lret
int3
cmc
xor
jmp
dec
adc
out
inc
andl
pop
or
fdivrs
adc
imul
add
push
mov
jo
je
mov
notb
mov
xchg
arpl
mov
cmc
and
xlat
insb
mov
fwait
xor
int
lock
mov
js
daa
aaa
ja
test
into
bound
call
fiadds
sub
mov
and
mov
insb
sub
xchg
add
push
pop
fsubs
sbb
stc
mov
mov
jnp
mov
rcrl
daa
add
lea
in
int3
xchg
cmp
pop
xlat
add
sub
addb
dec
cs
xchg
fstpt
mov
mov
pop
sub
or
or
sub
sbb
push
outsl
daa
sbb
add
in
loop
fwait
push
cwtl
es
loopne
push
and
pop
push
decb
mov
add
fimuls
aas
mov
xor
sub
mov
insb
mov
pop
mov
add
push
sbb
xchg
jg
lods
aam
pop
or
or
rclb
ret
dec
push
call
dec
ret
outsb
mov
cmp
icebp
xor
les
fists
mov
jo
xchg
cwtl
or
mov
loopne
sub
push
cmpsl
push
movsl
xchg
and
test
mov
xchg
push
ds
insb
adc
pop
sub
lds
push
dec
bound
cld
pusha
mov
outsl
or
aas
jnp
hlt
and
loopne
add
sub
fiadds
daa
clc
xchg
mov
and
movb
mov
mov
or
jle
xchg
sbb
add
xchg
and
jg
fwait
rol
loop
xor
jp
inc
inc
mov
daa
sbb
mov
xor
mov
push
aaa
xchg
jae
stos
fistl
mov
dec
inc
xchg
push
xor
rorb
cli
or
lods
sub
push
mov
add
mov
leave
push
adc
mov
pusha
cmp
sub
ficomps
cli
mov
mov
iret
inc
jnp
jle
xchg
incl
pop
mov
xor
js
sbb
addr16
mov
jbe
call
inc
jp
ja
ljmp
imul
iret
xchg
cmpxchg
xorl
jnp
dec
pop
and
mov
sub
cmp
in
cmp
sbb
adc
xor
loop
mov
or
cmp
rolb
add
aas
lcall
ss
jns
and
inc
int
jnp
bound
out
cmp
cs
mov
mov
dec
xchg
sbb
fdivrp
jo
xchg
jns
les
das
dec
lock
jle
inc
inc
push
push
enter
decl
mov
cmp
dec
fistps
sbb
adc
mul
rep
lds
adc
test
dec
lcall
adc
or
lock
outsl
rcl
or
mov
rorb
or
iret
xchg
bt
mov
shrb
or
icebp
in
test
aaa
int3
mov
jns
adc
jae
and
push
test
cmp
pop
daa
lods
scas
sbb
or
adcl
fwait
cs
stos
xchg
faddl
xor
mov
ror
push
rolb
cli
and
push
xchg
cmp
xchg
adc
das
sub
or
cmpsb
aas
aas
bound
inc
dec
xlat
shlb
jl
pop
xlat
iret
aas
divb
stos
iret
loope
sti
es
cs
add
add
jl
mov
adc
aam
lret
or
fs
or
lret
or
sarl
inc
inc
xchg
fs
pop
pushf
push
paddd
sub
jo
xchg
jb
sub
ret
pop
dec
pushf
int
js
int3
incl
rcrb
aad
inc
or
cld
sub
lret
in
ficomps
out
das
jnp
outsb
mov
inc
outsb
jnp
fimuls
lcall
stos
shll
xor
mov
sbb
sub
psrlw
scas
movb
leave
dec
das
aam
and
std
pop
jl
inc
cli
outsl
out
add
stos
fistpll
sub
stos
push
xchg
xor
outsb
cmp
lock
pop
mov
pop
imul
adc
sarl
out
rcrb
xlat
mov
inc
lods
ds
shl
sub
cmp
cmp
sarl
insb
or
in
jne
adc
and
lods
jle
fildll
cmp
jl,pn
dec
out
packsswb
dec
jnp
cltd
xor
aam
pop
xchg
mov
inc
cmp
loop
push
test
pop
dec
push
xchg
leave
sbb
pop
mov
push
mov
jle
sub
or
pop
inc
sub
dec
or
dec
bound
cmp
les
mov
fbstp
loop
test
out
and
mov
mov
lret
dec
push
cmp
inc
push
mov
mov
mov
xchg
test
or
or
repz
dec
das
jg
push
mov
rorb
and
sub
inc
mov
int3
push
popf
jle
mov
outsb
jp
push
mov
insb
loopne
cmp
ucomiss
adc
dec
out
xor
lods
sarb
imull
push
add
mov
cmp
dec
dec
or
xchg
mov
stc
or
add
lret
and
or
repz
jle
lahf
push
outsb
mov
aam
cltd
sbb
cmovnp
cmp
lods
inc
dec
jl
das
not
mov
inc
pop
dec
pop
je
pop
mov
jmp
pop
xor
daa
call
mov
dec
xchg
shlb
mov
test
pop
loope
mov
or
ja
adc
sbb
and
stc
aad
das
in
xor
jle
movsl
adc
pop
jl
adc
lds
aaa
ljmp
cmpsl
pop
decl
or
or
clc
loope
inc
mov
mov
xor
cmp
or
aaa
cs
push
adc
pop
mov
pop
adc
daa
sub
call
cmp
js
pushf
nop
hlt
xchg
sbb
jo
out
xor
pop
jecxz
dec
mov
out
or
dec
pop
push
mov
cmp
xor
loope
cmp
arpl
xor
jg
idiv
xor
cmp
and
movsb
mov
repz
adc
ret
into
mov
notl
ljmp
mov
mov
jne
dec
xor
addr16
jns
movsb
in
fsubrs
fucomi
or
jae
scas
mov
inc
and
cmp
mov
sbb
test
and
push
mov
jg
fisttps
mov
cltd
sbb
xchg
je
sub
in
in
addr16
fildl
push
jg
push
std
add
outsb
in
add
cmp
mov
and
leave
scas
mov
in
daa
fmul
stos
or
push
lahf
daa
lods
inc
jle
xor
in
fiadds
aaa
xlat
or
std
out
scas
mov
sbb
mov
pop
filds
or
daa
fdivrp
push
mov
or
cmpsb
out
sub
mov
les
jbe
and
xor
rorb
cmpsb
add
dec
mov
push
cmp
shl
rolb
scas
and
ljmp
aas
lds
int3
subb
sub
inc
enter
jg
push
ret
icebp
cmpb
xor
inc
imul
jnp
cmp
ds
icebp
push
scas
push
flds
movsb
cmp
mov
dec
divl
mov
arpl
movsb
es
jg
sbb
inc
das
adc
dec
push
push
pop
mov
cmp
aam
inc
das
scas
inc
scas
xor
dec
sarb
push
push
adc
shrb
push
test
das
jmp
pop
xor
cs
and
es
push
in
add
mov
outsl
data16
cmp
test
xchg
adcb
sub
xchg
rolb
ror
add
jb
add
bnd
movsl
repz
stos
cwtl
push
pop
adc
xchg
lcall
mov
jle
or
ficompl
scas
jle
mov
pop
pop
mov
pop
add
mov
gs
out
aas
xor
cmpsl
sbb
push
inc
inc
inc
call
jl
dec
filds
gs
cmp
xchg
inc
dec
mov
scas
mov
inc
inc
jle
in
or
arpl
iret
sub
mov
leave
or
fistpll
cltd
lock
dec
xchg
lret
pop
jle
repz
and
and
xchg
or
xchg
daa
jg
jnp
insl
and
cmp
inc
fwait
pop
add
push
mov
aas
mov
cli
mov
sti
repnz
cvtps2pi
mov
aas
cli
push
adc
negb
adc
jge
lret
daa
sbb
mov
push
das
inc
ds
inc
ss
push
mov
mov
int
sarb
xchg
out
dec
cmpsl
movsl
jle
or
inc
inc
addr16
test
leave
aaa
xor
lock
fisubrs
push
cs
inc
push
cmpsb
in
cmpl
inc
pop
mov
sub
das
dec
leave
cmp
dec
das
mov
inc
jl
out
push
cmp
loopnew
mov
jb
aam
hlt
add
jecxz
inc
rorl
sbb
lods
rcr
aam
dec
stos
jle
push
insl
lds
clc
mov
clc
pavgb
xchg
cltd
mov
dec
std
jle
mov
into
gs
xchg
or
repz
and
and
pushf
subl
sub
rolb
cmp
dec
adcl
adc
bound
pop
lock
jae
dec
xorl
xor
inc
loopne
cmp
cmp
rorb
scas
sbb
rorb
lahf
icebp
xor
xchg
inc
add
stc
jbe
cltd
sub
add
outsb
xchg
imul
js
pop
out
inc
icebp
inc
xor
xchg
dec
sub
in
repnz
data16
inc
mul
es
cmc
pop
fstps
push
fnstenv
pop
imul
jge
js
pop
and
mov
xchg
jmp
mov
cmp
or
es
fimuls
xchg
push
aam
pop
fstps
ljmp
sahf
aas
inc
push
push
add
popa
mov
enter
fwait
je
sbb
xor
insb
dec
jle
cltd
popa
sbb
cmp
push
js
fs
loop
pop
mov
push
inc
ds
xchg
insb
jb
inc
fadds
cmpl
cwtl
insl
cmc
cltd
imul
sub
test
sbb
lahf
jl
lahf
nop
xor
ds
jmp
cs
test
and
push
sub
fimuls
pop
stos
inc
stc
add
jnp
pushl
cld
call
iret
sbb
in
out
inc
emms
iret
outsl
addr16
xchg
rclb
pushf
or
sbb
mov
jnp
adc
rdtsc
aas
mov
das
xor
cmc
add
push
dec
xchg
dec
mov
inc
stc
cli
lea
cmp
fdivrp
dec
fs
mov
test
sbb
add
int
and
dec
cmp
mov
mov
inc
cmp
lret
push
lcall
rolb
inc
and
xor
xlat
push
inc
xlat
xor
xor
stc
and
clc
fstp
mov
dec
scas
pushf
mov
cmc
out
cmc
pop
xor
fdivp
sub
lret
jle
jmp
int
push
jo
jmp
pop
ffree
fsts
xor
xchg
pop
inc
pop
js
xchg
js
mov
dec
cmc
sahf
sub
jmp
cmp
pop
std
xchg
fidivrl
iret
ficoml
mov
notl
addl
cmp
aaa
adc
aaa
incb
dec
cmpl
or
idivb
inc
xchg
jmp
sbb
rolb
mov
xchg
jmp
lahf
insl
and
and
inc
stos
pop
dec
fmull
in
xor
push
inc
gs
cmp
dec
add
popf
cmp
aaa
lcall
mov
push
inc
fmulp
sub
cmp
dec
rorb
out
ret
cwtl
fnstcw
popf
xor
sub
cmp
xor
fistps
pop
gs
adc
or
addr16
jb
xchg
mov
out
and
xor
jmp
or
pop
mov
or
and
cmc
xor
testb
jle
adc
pop
gs
jo
inc
fldl
adc
dec
pop
js
outsl
imul
mov
loop
enter
cmp
inc
leave
mov
cs
lock
or
in
adc
add
or
out
xchg
sub
jg
xchg
iret
push
ja
push
jle
fld
nop
out
adc
push
or
das
inc
mov
jle
push
mov
inc
stos
or
dec
lock
mov
ja
cmpsl
movsb
sahf
xchg
aad
jno
lret
push
or
stos
das
lahf
ffree
mov
sbb
push
push
aam
or
outsl
fdivp
addr16
fbstp
mov
das
mov
daa
push
lret
jo
pop
int
into
fs
pop
push
lret
pop
sar
cmpsl
pop
testl
jns
xchg
xchg
xorl
xor
sti
jo
fnstcw
daa
or
cmp
clc
jmp
push
push
cmc
scas
lcall
popf
mov
or
data16
pop
jl
push
and
ljmp
aaa
push
inc
ret
mov
rep
sub
cwtl
cmp
push
or
xchg
das
fists
cld
inc
mov
jle
into
je
jae
cmp
mov
jle
add
mov
and
inc
cmp
cmp
dec
cmc
lds
xor
cmp
push
mov
mov
cmp
and
cmp
sub
js
inc
sub
fstpl
adc
cmp
out
lret
js
mov
pop
mov
fsts
cmp
xchg
xchg
sub
push
pop
outsl
sub
imul
inc
je
push
dec
ret
jb
cmp
and
aam
sahf
sub
pop
fld
mov
mov
aas
dec
sbb
jle
inc
lret
sub
ljmp
xor
fstl
mov
push
pop
shrb
testb
add
xor
or
pop
inc
jnp
mov
adc
je
paddsw
scas
movsl
es
or
das
xchg
lds
fwait
pop
dec
test
jb
cmpsb
jne
push
ret
ja
or
xlat
cmp
sub
push
push
xor
pop
dec
xor
push
push
mov
sbb
std
sahf
push
outsl
loopne
in
sub
xor
and
lds
xor
xlat
cltd
pop
rcll
dec
out
inc
lock
outsb
sti
js
fisubrs
and
aas
out
sahf
push
outsl
cmp
adc
call
or
xor
sub
dec
and
lret
les
ret
xchg
pop
jp
adc
sbb
stc
push
lods
mov
cmovns
push
mov
mov
mov
lahf
fldcw
shrl
or
iret
jno
and
adc
out
lock
sub
fisubl
daa
movsl
pop
vcmpsd
xchg
out
inc
or
xchg
mov
push
and
push
adc
test
push
sub
xchg
mov
push
or
sbb
lret
add
mov
or
add
sub
cmp
ljmp
js
lret
dec
xlat
xor
cmp
pop
push
int
jnp
repnz
mov
shlb
jne
fcoms
jle
mov
cmp
inc
mov
mov
repz
add
stos
jle
mov
add
repz
jbe
xorl
cmpsl
pop
ds
xchg
and
adc
cwtl
mov
pop
lcall
jb
xchg
sti
dec
ret
cmc
adc
mov
inc
cmpb
fsubs
aam
out
test
mov
inc
lock
cmpsl
lret
jp
popa
xor
mov
pop
inc
scas
xor
adc
addr16
adc
movsl
pop
bound
fnsave
xchg
iret
push
mov
mov
jns
andb
pop
jl
xor
cmpsb
lahf
push
mov
das
outsl
fidivl
jmp
lret
loopne
jmp
pop
jg
rcr
mov
lock
sbb
test
pop
mov
movsb
xchg
push
idivl
dec
enter
cmc
das
inc
push
sbb
pop
js
push
clc
push
adcb
push
pop
mov
data16
push
les
loope
pop
sub
dec
xchg
cmp
pop
mov
test
aam
inc
or
adc
loope
out
cmp
mov
push
iret
into
iret
push
inc
out
mov
daa
push
xchg
mov
sub
jne
push
push
insl
mov
addr16
jno
mulb
inc
sbb
int
mov
negl
push
pop
push
push
ret
shr
or
jle
outsb
fst
gs
arpl
rorl
xchg
adc
mull
cmp
xchg
inc
popf
dec
mov
cld
or
lcall
mov
fidivrs
mov
push
pop
push
push
ror
dec
aad
loop
xchg
sti
scas
xor
stc
inc
aaa
jle
pop
mov
jnp
das
lret
cmp
int
in
repz
clc
inc
dec
push
scas
and
sub
inc
cmp
push
ja
cmpsl
or
sbb
fildl
or
xchg
iret
jg
cmp
adc
jo
inc
insl
fisubs
add
movl
or
pop
out
inc
or
xor
insb
int
lcall
inc
andb
mov
sub
arpl
ss
push
sub
or
sub
inc
jle
add
lods
add
cmpsb
sarl
or
lea
xor
add
dec
push
sbb
mov
xor
scas
inc
scas
int3
mov
inc
dec
mov
cs
xlat
inc
into
daa
lahf
sbb
popf
iret
cmp
cmpsb
pop
sbb
jg
jg
sub
jl
scas
pop
into
movsb
mov
and
mov
fisubrl
addb
pop
xchg
xor
push
adc
lods
aas
and
add
fstl
inc
xchg
xor
mov
cmpsb
loop
jle
fidivl
loopne
and
filds
sahf
jmp
in
dec
jle
xchg
cmpsl
push
mov
cs
xchg
mov
inc
xor
cmp
daa
xor
aaa
imul
mov
cmpsb
mov
add
lret
sar
into
mov
or
out
xchg
lahf
lds
imul
in
xchg
ljmp
out
sar
xor
aas
cltd
mov
rcll
xor
addps
cmp
add
enter
and
ljmp
or
pop
aam
add
test
push
std
insb
rorl
xchg
sub
test
and
leave
pop
cs
dec
sbb
inc
movsl
into
jge
cmp
xchg
mov
aad
lock
iret
ljmp
aad
and
and
mov
mov
pop
in
incb
movsl
jns
mov
xor
cmc
pop
dec
pushf
adc
aas
movsl
test
mov
xchg
testb
fdivp
lret
sbb
ret
jle
cmp
ss
inc
shl
inc
cmp
pop
jb
scas
bswap
inc
jg
pop
mov
jnp
push
pop
sub
fdivrp
xor
push
aam
inc
push
mov
lahf
jg
inc
xchg
scas
mov
outsl
aad
int
dec
cmp
jbe
hlt
data16
mov
cltd
fucomi
popa
fistpl
mov
imul
sub
sub
sbb
push
or
out
xchg
pop
rcr
es
or
icebp
jmp
divps
cmp
xchg
adc
fnstcw
cltd
push
addl
add
or
mov
jbe
inc
dec
adcl
xor
add
or
and
or
xchg
les
inc
xorl
jle
sbbb
cmp
mov
xor
iret
sarb
jns
add
mov
ja
and
daa
xor
mov
push
xorb
xchg
inc
sbb
adc
ds
dec
add
lahf
and
fsubs
cmp
sarl
aaa
and
xor
inc
xchg
jo
imul
sub
ret
inc
sub
adc
xchg
popf
hlt
lret
mov
pop
push
add
mov
and
mov
adc
add
shl
dec
push
jl
pop
outsl
hlt
pop
cltd
jmp
jmp
push
push
jb
loopne
xor
inc
mov
or
js
inc
sahf
fstp
fcmovnb
pop
or
aaa
das
out
ss
icebp
add
xchg
push
jg
inc
insb
icebp
test
push
inc
cmpl
mov
cmpsl
add
cltd
iret
mov
es
popf
add
ja
mov
push
push
jle
or
adc
xchg
push
mov
icebp
inc
outsb
movsl
pop
lret
imull
sub
pop
sub
mov
sub
pop
jle
mov
cmc
icebp
dec
lods
add
aaa
mov
lahf
fdivr
xchg
pushf
decl
int
insb
jg
jl
shll
pop
push
xor
mov
inc
or
or
sub
or
out
pop
or
inc
inc
movl
incl
jae
sbb
popf
push
dec
jle
push
push
mov
xchg
lcall
ljmp
lock
ljmp
push
cmp
jl
je
mov
in
inc
inc
mov
fnstcw
in
fbstp
dec
and
scas
xchg
test
jle
inc
push
ljmp
mul
mov
pop
jge
inc
mov
lcall
mov
repnz
popa
ja
mov
lahf
pusha
xor
jle
mov
test
out
inc
sub
dec
jb
mov
popf
mov
fdiv
xchg
ljmp
jae
mov
aad
popf
out
shll
add
inc
jnp
adc
mov
jle
popf
lds
stc
scas
aas
aad
jp
arpl
cmp
lock
jge
push
xlat
addr16
lahf
or
lds
jns
push
rclb
sbb
rcrl
lret
add
adc
out
div
inc
pop
mov
or
pop
push
push
xor
dec
lret
xchg
inc
cmc
sub
lret
jp
movsb
mov
jo
lret
xchg
pop
gs
push
mov
pop
outsb
mov
mov
leave
xchg
mov
movsl
in
xchg
lret
fs
sahf
aas
mov
enter
outsl
mov
pop
adc
clc
mov
and
test
push
ss
das
and
mov
lock
and
push
in
scas
mov
mov
rcll
cmp
or
inc
push
pusha
mov
iret
sbb
fnstenv
cmp
inc
aas
aas
push
sti
aas
aaa
das
push
xor
ja
push
stos
xor
mov
dec
enter
gs
jb
rcr
pop
loopne
inc
xlat
js
lea
cmp
push
cmc
add
test
mov
es
sarl
sub
aaa
imul
and
lret
sub
and
xchg
cmpsb
imul
popf
loopne
xchg
into
lahf
bound
sub
sarl
popf
idivl
jbe
sbb
mov
add
stc
lds
into
ret
jmp
sub
or
pop
lods
dec
sub
lock
mov
pop
sti
sbb
mov
imul
lret
mov
jg
mov
insb
lods
jmp
js
xchg
sbbl
mov
dec
jb
mov
pusha
push
stc
fidivs
adc
sub
push
int
sti
cmpsb
mov
addb
sti
sub
xchg
jo
sub
das
jge
notl
pop
sbb
mov
mov
mov
jle
int
xlat
cmp
in
xor
scas
jg
mov
adc
cmp
adc
and
push
ds
mov
icebp
push
imul
push
mov
icebp
ficomps
sbb
xchg
cmp
inc
ljmp
adc
mov
and
shl
lret
jl
pop
aas
out
ret
jle
cmp
and
and
mov
xchg
dec
js
pop
fisttpl
cmp
out
add
and
mov
je
inc
lds
jmp
dec
rolb
mov
xchg
sub
xor
aam
mov
sti
inc
inc
jb
fwait
ljmp
push
cld
dec
cltd
jl
cli
mov
imulb
sub
clc
mov
sarb
int
out
gs
xchg
pop
stos
sub
or
and
icebp
dec
lahf
push
popa
idivl
or
imul
mov
pop
or
test
dec
das
xor
and
in
fcomi
fcmovnbe
sbb
cmpsb
aaa
fwait
sbbb
xor
sbb
mul
aaa
xor
std
cmp
or
sahf
xchg
fs
cmp
xor
jbe
pop
les
fnsave
cmp
and
ds
out
call
shll
decl
xlat
and
mov
fstps
imul
push
adc
inc
scas
xor
int3
dec
and
push
ds
push
add
pushl
mov
negl
adc
add
iret
das
jns
popf
int3
inc
lea
sbb
js
jnp
inc
cmp
push
jb
clc
xor
out
arpl
js
dec
pop
and
pop
out
call
repnz
hlt
xor
mov
fisubrl
sbb
mov
pop
push
and
push
cmp
lods
es
je
and
xor
mov
jp
mov
shl
xchg
jae
in
jbe
test
inc
fadds
rolb
dec
popa
inc
mov
lret
addr16
add
ret
cmp
jecxz
mov
mov
movsb
sub
das
jnp
lcallw
push
sbb
xchg
ds
jno
outsl
cli
cmp
xor
adc
cmpsl
hlt
sub
outsl
jp
stc
aas
out
inc
lcall
mov
test
fs
nop
xlat
pop
lahf
in
outsl
inc
stos
jp
rcr
or
mov
or
pop
pop
mov
popa
rcl
cmp
mov
das
dec
push
inc
jnp
fstl
shl
inc
mov
fldenv
or
lds
in
movsl
cmp
test
inc
bt
icebp
and
jno
ds
fmul
ret
sbb
or
pop
jne
and
jns
cmp
std
push
mov
in
out
fmull
jl
inc
mov
dec
mov
pop
dec
rcrl
jge
int
xchg
addr16
rolb
cmp
pop
fldenv
jno
rolb
cwtl
sbb
inc
popa
xchg
adc
ror
rolb
adc
sti
mov
inc
pop
mov
je
repz
aas
add
sub
dec
push
xchg
mov
sub
gs
cmp
and
shrb
sub
imul
aam
repnz
fimuls
nop
test
ret
out
pop
jmp
jl
ret
adc
adc
add
cmp
sub
xlat
add
inc
mov
cmp
scas
scas
out
stos
repnz
mov
jbe
mov
or
mov
aas
jp
xchg
dec
sbb
push
leave
pop
sbb
pop
jae
sbb
test
int3
aam
mov
in
mov
pop
repz
hlt
fs
xchg
int3
lods
pop
xchg
jae
les
inc
add
sar
out
mov
fwait
dec
out
cmpsb
and
add
repz
ret
in
xor
cmp
fnstsw
addr16
fnstenv
xchg
fcoms
std
inc
jge
dec
std
addr16
adc
ret
out
arpl
dec
push
push
fimuls
ljmp
fisttpl
js
push
enter
stos
or
jns
dec
dec
rcr
inc
cmp
inc
frstor
loopne
adc
xchg
xchg
shr
insl
out
cld
ja
lret
into
fsubs
push
cmp
ret
cmp
rol
mov
ret
xor
and
inc
or
outsl
jns
push
lcall
int
stc
incb
fadds
xor
test
mov
cmpsb
dec
cwtl
pop
aas
in
mov
dec
stos
jle
or
ljmp
in
cmpsb
sub
sti
cmc
movsl
jmp
stos
inc
lds
popf
hlt
add
cmp
xor
mov
sub
mov
test
mov
mov
inc
sahf
xor
cmpsl
adc
bound
out
jno
lret
push
pop
push
lcall
int
add
pop
aaa
jae
add
add
movsl
xor
or
xchg
fiadds
testb
roll
ds
or
inc
lea
cli
mov
sarb
out
pop
lahf
jecxz
out
mov
stc
dec
rorl
push
jbe
addr16
movsb
divl
mov
ja
pop
jnp
or
repz
push
pop
pop
pop
jle
xchg
in
movsl
sub
rclb
xchg
icebp
int3
add
int
xor
push
fdivl
mov
pusha
aas
sbb
sub
push
cmc
inc
popf
movsl
das
leave
cmpsb
xchg
or
scas
push
pop
cmp
ds
jl
pop
lret
cmpl
das
ds
jmp
dec
scas
xor
xchg
inc
pushf
adc
sub
cmpsl
jecxz
sub
fiaddl
jae
add
loop
in
loopne
xchg
jle
push
push
xor
iret
out
mov
mov
jle
pop
data16
jl
out
loop
incb
push
or
mov
mov
stos
pop
mov
jecxz
sti
inc
dec
lds
push
hlt
aas
lods
mov
pop
jecxz
std
cmc
jle
push
shlb
jns
sub
or
shrb
int3
clc
js
popf
jg
popf
add
test
inc
cmp
push
outsb
or
jne,pn
xchg
js
inc
push
rolb
pop
xor
cs
daa
xchg
movl
lds
clc
mov
xchg
outsb
das
or
push
lret
adc
hlt
or
dec
fbld
jle
lods
cld
in
cmp
mov
lods
into
push
rolb
dec
xor
aaa
ret
maskmovq
mull
sbb
cmp
push
movsl
and
push
jmp
cmp
mov
and
inc
mov
lods
pop
push
and
stos
std
stc
lea
jl
jecxz
lahf
jl
aas
outsb
addr16
mov
dec
xchg
xor
fstpt
outsl
dec
dec
js
ret
xchg
pop
xor
jne
pop
iret
xor
cwtl
popf
dec
fstl
push
sub
movb
dec
push
and
mov
jle
cli
dec
jae
mulb
adc
pop
movsl
push
add
test
push
adc
and
cmp
mov
je
sbb
push
data16
scas
adc
pop
sarb
push
jo
push
push
and
and
lds
mov
and
push
jg
test
and
mov
pop
inc
and
in
dec
cmp
sub
pop
adc
mov
sub
int
mov
xor
pushf
mov
ljmp
popa
xorl
ds
sbb
and
and
daa
cmp
lods
fldt
pusha
adc
ret
cmp
and
cmp
dec
xchg
mov
cmpsl
jmp
push
es
shrl
lret
inc
data16
loop,pt
mov
fwait
push
pop
cld
sub
sub
aas
test
mov
jb
in
call
pop
scas
inc
pop
sub
aaa
es
jnp
cmp
inc
xchg
inc
add
sub
std
divb
es
inc
ljmp
cmp
test
pop
scas
xorl
cmp
dec
cwtl
pop
mov
out
stos
sahf
jbe
ljmp
ljmp
sub
push
cmpsl
mov
sarb
mov
sub
cmp
add
dec
sbbl
int3
iret
shlb
rclb
loope
arpl
dec
mov
dec
dec
inc
xor
mov
gs
inc
mov
or
sbb
pop
lea
or
aaa
repz
sti
xchg
movsl
pop
in
fisubrs
dec
fsubl
lret
aas
popf
shlb
aaa
push
cld
imul
das
adc
mov
mov
aas
fisubrs
cmp
mov
sub
sahf
pop
std
dec
mov
div
sbb
push
dec
fisubs
xor
ret
lds
mov
xchg
add
outsb
pop
jmp
aaa
sti
dec
dec
adc
and
lret
mov
xadd
sahf
aas
add
xor
data16
movsl
rcrb
addr16
cmp
lock
mov
pusha
ds
fisttps
dec
and
and
fnsave
mov
xchg
dec
das
sarb
in
add
dec
xor
push
xor
inc
test
enter
xor
add
pop
cmpl
pop
push
add
lea
outsb
nop
push
inc
sub
daa
mov
mov
gs
jno
arpl
push
repz
mov
mov
shrb
inc
mov
xchg
cmp
lods
jne
cmp
cli
lahf
cmc
sbb
add
sahf
adc
push
pop
mov
push
lods
mov
das
popa
xor
mov
or
sub
inc
jl
push
lods
aad
into
push
xor
fidivs
enter
roll
sub
xor
sub
lret
mov
rcll
jbe
and
cli
add
stos
mov
fisubl
daa
out
inc
sbbb
fiadds
into
xadd
test
andl
sti
mov
gs
outsl
inc
jo
sub
pop
notl
das
sti
xchg
das
jle
outsb
xor
dec
and
bound
out
loopne
or
gs
xchg
push
into
push
dec
jnp
lahf
dec
push
loope
push
ret
ds
rclb
xchg
add
shll
xchg
jp
xchg
push
mov
or
ret
or
mov
cmp
inc
test
sub
gs
test
add
sub
das
imul
inc
dec
jl
adc
lock
mov
and
jle
cltd
mov
repnz
ds
dec
or
inc
mov
cs
je
mov
test
inc
js
icebp
lea
mov
mov
or
push
sub
push
xor
repnz
cltd
xchg
jle
sbb
fcmovnu
sub
arpl
cld
inc
pushf
pop
das
stc
scas
inc
imul
xor
and
mov
cmp
dec
cmc
int3
js
das
dec
add
xor
mov
lahf
cltd
aas
jp
push
xchg
sahf
adc
daa
dec
enter
outsb
pusha
or
jmp
cmp
js
mov
xchg
ds
xchg
add
inc
aad
pusha
cwtl
sbb
xor
dec
dec
pop
lods
pop
sub
add
add
inc
js
es
ds
mov
insb
cli
sbb
dec
push
sbb
cmp
cs
jge
cmp
sub
push
or
test
inc
xchg
mov
ja
mov
cmp
cs
les
pop
or
jle
push
inc
push
mov
fwait
sbb
mov
hlt
xor
dec
mov
jnp
ljmp
movb
je
inc
add
icebp
jg
push
mov
es
push
not
sub
ret
sub
sarb
test
scas
push
and
cmpsb
aas
ret
push
imull
mov
fbld
out
cmp
insl
pop
dec
jmp
iret
stc
lods
push
mov
adc
lcall
dec
out
mov
or
xor
lods
aaa
jnp
xor
pop
lock
daa
fld
stos
ds
insb
popf
cmp
aaa
pop
jle
xchg
int3
cmp
shrl
js
push
lods
jle
push
pop
adc
jbe
inc
addr16
dec
cmp
mov
in
fisttps
addb
cmc
inc
adc
gs
pop
scas
lock
lods
stos
popf
aaa
aaa
inc
out
shrd
std
mov
lods
inc
cmp
mov
mov
dec
stos
jno
cwtl
loope
cmp
scas
sbb
das
addr16
xchg
jae
dec
pop
in
ds
addr16
stos
lock
push
shll
mov
mov
mov
in
flds
les
xchg
fimuls
mov
lret
xor
cli
lods
sti
xor
pop
add
sub
xchg
scas
jno
jb
and
stos
jnp
int3
dec
or
sub
push
push
mov
sbb
pusha
nop
push
mov
mov
push
mov
cmpsb
xchg
jo
pop
push
xor
mov
in
shrb
push
push
aam
ret
or
outsl
cmp
fstps
pop
stc
cmp
mov
cmp
cs
mov
and
cmp
ret
jnp
jle
mov
push
sub
add
sub
hlt
add
xchg
xor
mov
jle
mov
inc
je
icebp
inc
pushf
mulb
cmpsb
movsl
xor
data16
int3
sbb
ja
push
sub
cld
cmp
jp
mov
lret
ret
les
or
fdivr
repnz
pusha
cmp
dec
push
xchg
jmp
pop
adc
outsl
push
xlat
cld
neg
dec
dec
or
hlt
mov
and
arpl
outsb
pop
aaa
cmp
bound
js
cmp
jmp
pop
sbb
or
repz
cmp
das
dec
out
pop
call
or
or
aad
adc
pop
mov
outsl
push
and
inc
xor
dec
js
ja
ds
loopne
stos
xchg
rolb
pop
and
inc
test
xor
jbe
and
test
pop
rdpmc
in
adc
lods
mov
sub
adc
out
lock
cmp
sbb
add
xchg
xor
fcomps
mov
call
pop
xchg
jb
pop
test
adc
cmp
ret
syscall
mov
insb
je
mov
xchg
daa
cmc
movsb
pop
cmp
xchg
dec
fsubs
adc
mov
pop
dec
test
das
cmpsl
cmp
xor
or
jnp
cmpsb
aas
xchg
inc
das
sahf
ds
or
fdivrp
das
pminub
scas
jbe
leave
inc
pop
inc
or
std
cwtl
and
mov
or
cs
mov
test
xchg
jmp
and
xor
into
ficoms
divb
inc
into
mov
shll
leave
pop
call
fsubrl
roll
jbe
inc
insl
xor
fs
mov
mov
ds
popf
jmp
sub
stos
leave
and
cs
jmp
addr16
jg
pop
mov
cmpsl
sub
and
or
ss
cmp
popf
daa
mov
or
mov
insl
or
or
lock
fscale
push
out
lds
cmp
xor
ficomps
mov
mov
mov
scas
or
inc
pop
push
jne
cs
jle
mov
inc
jbe
inc
lret
jle
xchg
mov
jecxz
cmp
or
jg
pop
out
scas
jmp
pushf
in
sahf
inc
or
sub
mov
gs
and
subb
ss
enter
or
inc
sahf
jmp
mov
out
pop
or
bswap
fidivrs
jne
cmp
ret
mov
mov
andl
in
addl
inc
into
mov
out
inc
lds
xchg
cmpsl
jg
aas
inc
xchg
push
adc
xor
ja
sub
lods
pop
idivb
or
and
and
mov
sti
fidivrl
lret
mov
add
cmp
inc
and
adc
ds
lret
fmul
test
ds
push
cmp
push
sbb
jno
cmp
mov
xor
repz
stos
lret
imull
cmp
das
mov
inc
lea
in
rcl
es
pop
daa
test
push
std
sub
cmp
stos
jae
cmp
in
push
daa
ljmp
das
scas
cwtl
or
push
aas
les
lret
fiaddl
das
lock
pop
daa
fnsetpm(287
xor
icebp
lret
and
mov
sbb
cmp
or
and
sub
sub
xchg
lret
ss
ss
mov
movl
lds
or
es
or
dec
jbe
mov
sub
dec
int
lcall
les
push
scas
scas
or
add
pop
and
cvtpi2ps
pusha
jle
rcll
mov
push
fwait
or
mov
leave
push
sti
pop
aas
dec
push
imul
filds
sub
fistl
mov
mov
push
inc
push
push
or
push
lods
icebp
or
cmp
sbb
mov
out
out
mov
cmp
pushf
or
aas
mov
lret
jne
sbb
punpckhwd
cmp
and
data16
xchg
dec
bound
pushf
cmp
lret
and
outsb
lahf
push
xor
jle
out
xor
xor
push
mov
lret
lahf
or
and
mov
mov
push
and
dec
nopl
xchg
or
or
and
dec
or
cmp
or
test
gs
in
sub
aaa
das
prefetch
negb
int
sub
lret
aas
push
out
mov
outsb
mov
pop
aas
dec
ljmp
inc
iret
ja
xor
pop
or
out
jle
mov
push
aad
mov
das
dec
cmp
in
in
scas
outsl
movsl
das
cmp
jg
test
jmp
push
dec
mov
cmc
mov
mov
das
mov
lods
outsl
jmp
test
popf
comiss
mov
mov
cmp
iret
scas
lret
cmp
inc
outsb
or
fbld
dec
leave
aas
push
popf
in
fistpll
aas
aas
loopne
cmp
sahf
mov
testl
in
sahf
mov
stc
sub
maxps
bound
lods
dec
push
xlat
add
mov
jmp
cmp
add
pop
xchg
push
fsubs
mov
lcall
imull
jne
xor
sub
les
xor
rclb
mov
popf
rcr
xchg
cs
mov
inc
or
fcomi
and
push
pop
scas
mov
inc
xlat
push
addr16
xor
das
daa
fsubr
mov
int
data16
add
outsb
aas
xsha256
cmpsb
xchg
push
out
pop
lock
cmc
idivb
pop
pop
repnz
ds
aas
inc
mov
pop
aas
mov
mov
fbstp
lahf
cmpsl
fucompp
das
or
mov
cmpsl
push
aas
push
cmpsb
ss
scas
xor
sahf
fsubrp
mov
push
xor
out
add
push
por
sbb
std
jl
cmp
pop
push
sub
sbb
out
test
das
lahf
ds
fwait
lahf
rol
adc
popa
cmp
das
dec
out
scas
daa
ss
ss
lods
out
inc
ret
popf
iret
data16
jge
iret
hlt
xor
es
or
inc
sahf
jp
aas
aaa
outsb
mov
lods
daa
fdivrl
lret
mov
or
mov
adc
sub
loopne
or
dec
sub
das
xor
pop
das
mov
ret
push
or
inc
cmp
pop
inc
das
aas
ds
sub
sub
nop
or
xchg
or
je
aas
repnz
lods
push
pop
out
sub
inc
adc
psrad
test
cmp
imul
fisubs
sti
mov
or
fwait
int
lahf
out
sub
stc
sub
aas
pop
addr16
jne
aas
loope
es
prefetch
jmp
les
mov
das
in
or
aaa
dec
aas
les
in
lods
xchg
mov
ret
push
sub
addr16
ss
notb
sub
decl
or
mov
loop
ss
xor
out
mov
scas
or
add
cmc
repz
mov
fnstsw
iret
xor
cs
icebp
mov
cmp
cmp
lret
shl
scas
or
leave
sub
insl
mov
xlat
lea
stos
lret
test
lds
daa
inc
or
std
into
lahf
pop
xchg
sbb
lret
test
out
mov
rcr
lods
cmc
pop
out
adc
sub
mov
mov
or
sub
das
loop
sub
jmp
fcompl
addr16
out
in
out
roll
lods
sbb
out
pop
out
mov
dec
xor
sarl
mov
aas
pop
mov
imul
jmp
das
xchg
adc
out
scas
or
outsb
movsb
and
jle
mov
jle
stc
insl
sbb
ret
outsb
std
adc
mov
sbb
ret
outsb
std
insb
movsl
xor
lret
cmp
lods
push
out
outsb
mov
mov
jmp
in
xor
cmpsl
mov
out
outsb
or
cmp
sub
ljmp
mov
mov
xor
outsb
stc
xor
pop
outsb
test
xor
outsb
insl
divb
sub
and
xor
jmp
movsl
clc
xor
xor
lods
lcall
dec
sub
lcall
mov
push
xor
xchg
adc
add
pop
out
lret
xor
out
roll
out
add
push
pushf
xor
mov
xor
pushf
out
pop
sahf
xor
mov
lods
repnz
out
jno
xchg
lods
lea
test
xchg
xor
stos
ljmp
adc
mulb
cmp
cwtl
xor
mov
rcl
lods
in
pop
pop
mov
scas
or
insb
shll
ljmp
pop
xchg
inc
int
rep
jecxz
inc
inc
aaa
fisubrs
in
lret
and
push
scas
ds
lahf
aas
addr16
jns
push
or
or
stos
mov
inc
dec
pusha
adc
mov
mov
jge
cmovbe
scas
or
mov
mov
daa
and
pop
std
das
xor
sti
pop
fs
cmp
es
outsb
call
push
fsubrp
jmp
jne
sti
out
scas
addr16
les
inc
cmp
push
jb
jg
or
xor
sahf
cmp
es
or
jnp
xchg
adc
or
daa
sub
ret
push
push
mov
cmp
mov
sbb
push
and
xchg
or
mov
inc
lret
mov
dec
mov
pop
xor
repz
lret
cmp
shrb
push
dec
imul
xlat
aas
sti
jnp
pop
inc
leave
mov
mov
stos
aas
popl
or
lret
dec
add
das
inc
jmp
cmp
sti
fwait
das
ds
xchg
repnz
xchg
jecxz
rorl
mov
lret
aas
mov
mov
mov
ss
stos
ss
mov
ss
fiaddl
pop
cmpsl
ljmp
pop
leave
or
sbb
push
fildll
sub
sub
jnp
mov
fwait
sbb
stos
xchg
cs
fldt
mov
sbb
sahf
sub
dec
lret
push
or
or
mov
ds
mov
mov
dec
fiaddl
fidivrs
sub
jbe
dec
outsl
cmp
iret
fisttpl
iret
daa
dec
mov
add
mov
cmp
lret
std
aas
pop
fistpll
cmc
xchg
adc
into
adc
jbe
popf
cmp
mov
push
and
add
xchg
or
sub
adc
mov
mov
lret
dec
pop
aas
into
inc
dec
cmp
push
ljmp
xlat
or
test
jmp
cmp
dec
mov
pop
xor
imul
out
mov
es
iret
mov
mov
jmp
aas
sti
xor
or
sbb
mov
pop
les
push
sarl
sub
mov
mov
sub
icebp
iret
sbb
mov
sbb
xlat
pop
ret
cs
or
imulb
out
ds
ja
sub
xlat
or
dec
stos
les
scas
and
out
or
lods
dec
out
or
aad
mov
jecxz
dec
mov
pop
jmp
dec
push
scas
dec
std
daa
cli
addr16
addr16
add
imul
jg
or
addr16
leave
and
scas
dec
jmp
sub
leave
jnp
xchg
xchg
mov
mov
sub
jmp
inc
das
sub
dec
das
push
enter
aad
cwtl
cmp
or
scas
cmp
ds
sub
xor
das
lret
ljmp
pop
or
adc
add
shrb
in
fistpll
mov
xlat
pop
ret
xlat
imul
scas
mov
fwait
mov
stos
xor
mov
mov
or
sbb
dec
lods
rorl
mov
orb
jmp
pusha
lret
jle
jbe
int
shrl
out
stos
cltd
lret
sti
sarb
fisttps
cltd
sub
lahf
dec
pop
xor
push
imul
xchg
stc
das
stos
sub
lret
sub
sub
outsb
xor
scas
mov
add
cmp
push
pusha
int3
inc
adc
orl
pop
add
cmp
cli
mov
les
cmpsb
mov
lret
push
or
out
cs
pusha
xchg
push
lret
pushl
and
pop
cmc
inc
lret
pop
or
and
sub
dec
xchg
cs
shlb
push
inc
adc
scas
xchg
or
lcall
cmp
aam
pop
inc
dec
mov
lcall
lret
push
cmp
xor
int
enter
adc
xchg
leave
popf
ds
leave
xor
or
and
int
roll
mov
sub
rcrb
out
jl
pop
mov
mov
pop
inc
shll
rolb
lret
lds
scas
or
push
dec
or
push
sbb
rol
inc
xchg
sar
sub
data16
divb
lret
mov
lret
sub
xchg
mov
daa
cmp
sub
jg
lret
cmpsb
mov
inc
sahf
pop
push
xor
js
rcll
scas
shlb
dec
or
addr16
sbbl
lahf
xor
scas
or
std
push
or
mov
xchg
dec
scas
aas
outsb
xlat
or
lcall
out
push
aas
mov
adc
sbb
lcall
jecxz
notl
adc
pop
or
filds
jo
out
daa
pop
daa
or
push
das
push
or
ds
inc
jo
cmpsb
inc
adc
lds
iret
sub
scas
leave
jg
lds
dec
lcall
xor
cs
inc
xlat
xchg
insl
inc
lret
outsl
mov
xchg
and
mulb
or
ret
leave
mov
aam
push
pop
jbe
inc
or
shl
or
add
xchg
insb
or
or
push
inc
ret
les
cmp
dec
fisubrs
dec
daa
insb
push
sub
push
xor
fucomp
insl
push
movswl
inc
sub
add
cmp
sub
sub
das
sbb
loop
mov
adc
nop
fucomip
mov
ror
lahf
inc
daa
pop
imul
inc
lret
dec
or
das
push
push
cld
mov
or
inc
daa
fsubr
mov
cmpsl
iret
cmp
lret
push
iret
daa
add
dec
aaa
out
xor
iret
or
mov
xchg
jle
pop
out
rcrb
or
or
jo
sbb
daa
xchg
out
cmp
lahf
jae
pop
mov
push
sub
int
xchg
pop
sub
inc
and
mov
and
fdiv
ja
cs
sub
mov
pop
jg
std
data16
fisubrl
mov
adc
mov
js
sub
mov
outsl
das
vmovsd
or
cmp
insl
out
lcall
jmp
inc
rcr
fldt
fidivrl
out
stc
das
popf
lods
iret
or
jnp
lret
jg
sbb
push
dec
sub
out
lret
sub
fcoml
lret
daa
lahf
sub
cmpb
fsub
inc
sbb
sub
jmp
push
xchg
lret
ds
out
or
jmp
cmpsb
loop
lret
mov
sub
aas
mov
ds
sahf
or
out
aas
addr16
dec
push
inc
aaa
jg
push
cmp
jbe
ds
aas
inc
xlat
lcall
cs
mov
aas
and
pop
aas
test
outsl
aas
jg
lds
insl
push
pushf
mov
or
in
daa
inc
stc
stos
outsb
mov
ds
sbb
scas
sbb
ds
popf
xlat
cmc
sbbb
add
ss
lret
cltd
or
mov
lods
sbb
pop
or
pop
scas
jg
ja
dec
hlt
out
sub
in
shrl
or
iret
repnz
loopne
aaa
xor
cmp
mov
jle
cmpsb
or
das
ja
push
aaa
and
cld
das
xchg
daa
das
jbe
das
pop
push
sub
push
aaa
or
out
decl
rolb
fistps
test
sti
jle
daa
lret
out
or
shlb
mov
mov
js
ljmp
out
xchg
pushf
cmp
mov
lahf
sub
mov
push
decl
lret
iret
mov
negl
cs
scas
inc
pop
push
mov
lret
pop
and
imul
or
shld
jo
std
dec
sahf
pop
fildll
mov
sub
mov
dec
test
xchg
mov
jbe
pop
lahf
mov
sbb
and
stos
aas
movl
mov
scas
jmp
test
lret
outsb
stc
scas
out
icebp
insb
mov
mov
ret
or
mov
jp
sub
push
cmp
lret
aas
mov
pop
or
sbb
or
mov
lret
iret
sahf
sub
aas
and
xor
and
inc
xor
ds
cmp
and
stc
xorb
es
inc
enter
mov
stos
outsl
inc
mov
pushl
mov
lods
outsl
gs
scas
sub
jmp
lahf
sbb
aas
adc
jle
push
mov
inc
or
inc
pop
loopne
out
rcll
sbb
jg
es
and
xor
dec
out
mov
sbb
adc
or
inc
fwait
inc
rcrl
hlt
gs
sub
sbb
push
dec
daa
pop
sub
xor
das
push
ds
inc
aas
push
cmp
incb
in
idiv
mov
fisttpl
or
cs
cltd
aaa
add
das
out
cld
sub
push
out
mov
sub
sahf
and
inc
xchg
into
inc
dec
test
daa
das
imul
repnz
ss
cld
scas
or
inc
xor
pop
lret
pop
ja
sub
inc
mov
push
inc
mov
gs
ljmp
push
inc
movsb
insl
popa
ss
decl
aas
aas
repnz
lret
lahf
or
daa
enter
lods
xchg
mov
daa
lds
js
push
and
mov
movsb
push
dec
cmc
call
dec
or
decl
notb
mov
ds
push
sub
jle
std
mov
out
ds
cs
nop
fldcw
mov
iret
aas
fisttps
lods
jb
cmc
dec
daa
lret
movsbl
sbb
aaa
jg
data16
mov
dec
and
xchg
inc
pushl
jle
cmpl
idivb
das
mov
lahf
and
in
jns
stos
sahf
filds
push
in
push
push
std
test
mov
sahf
jl
jle
push
repnz
adc
mov
or
lea
lret
aaa
or
subb
dec
mov
jo
sub
pop
ljmp
pop
fistl
dec
or
imulb
fsts
pop
jbe
sub
lret
das
aas
pushf
adc
cmp
jb
push
fildl
push
mov
cmpsl
hlt
rcl
outsb
jne
out
push
scas
mov
sbb
idiv
xor
lret
xchg
or
push
add
insl
mov
into
cmp
xlat
lret
or
or
test
dec
pop
push
aas
xlat
xor
cmpsl
repz
inc
std
push
popa
add
sbb
pop
and
sbbl
aas
sbb
leave
rclb
leave
ds
icebp
sbb
aaa
jle
or
push
or
lock
dec
ss
orl
das
xor
cmp
popf
inc
jmp
xchg
ss
add
add
push
scas
sahf
lods
shrb
mov
and
cmp
lahf
push
lret
pop
mov
outsl
dec
aaa
iret
xchg
fisttps
inc
or
jge
stc
mov
decl
aaa
leave
daa
lret
sub
fdivp
or
stc
cmp
and
ss
jnp
aam
mov
adc
adc
scas
lahf
and
leave
aas
decl
lret
sub
pop
frstor
cmpsl
call
and
scas
or
cmpsl
sub
jns
ss
lahf
je
sub
inc
and
pop
push
ja
xlat
or
mov
sub
add
ja
daa
ja
lods
jp
mov
mov
dec
cwtl
data16
in
sub
mov
aas
je
insb
sbb
mov
mov
mov
xchg
lds
jl
test
xor
mov
insb
sbb
fidivs
ljmp
cmp
jg
adc
push
ret
pop
rclb
xlat
in
insb
or
dec
cmc
scas
and
mov
pushl
outsb
daa
pop
mov
mov
mov
mov
shll
inc
sbb
loope
lret
cmp
imul
mov
and
shl
jmp
mov
jmp
das
in
cwtl
ja
jbe
pop
imul
es
sub
xchg
jmp
test
xlat
hlt
movswl
cwtl
aas
stos
mov
es
sbb
test
sub
insb
xor
enter
sahf
negl
push
jecxz
std
mov
into
aad
xchg
insl
fiadds
into
and
popa
cmp
fnstcw
ficomps
es
cltd
ja
scas
aas
or
push
sbb
mov
dec
pop
aam
adc
call
sub
loop
and
inc
das
and
sbb
jno
xlat
xchg
sub
inc
mov
fiaddl
fsubrs
test
test
lods
mov
sub
or
jae
es
sti
mov
cs
adcb
aas
movl
mov
push
mov
in
xchg
dec
jp
push
pusha
movl
jmp
call
jmp
gs
ja
imul
inc
or
sub
bound
inc
push
sbb
pop
scas
rcr
mov
mov
jecxz
xchg
mov
xchg
jg
cmp
add
push
rcll
mov
push
ds
movsl
mov
cmpsb
xchg
pop
dec
xor
mov
lds
repz
mov
orl
ja,pn
add
sbbl
xchg
iret
mov
popl
jle
cwtl
outsl
in
jns
lcall
or
mov
push
repnz
out
imul
push
into
imul
stc
push
jo
cmp
gs
cs
sbb
jecxz
push
fsubrl
pop
lea
mov
popf
xor
popl
popa
int
xchg
dec
mov
mov
jne
pop
mov
fwait
outsb
cmc
repz
sub
cmp
das
mov
sbb
fnstenv
daa
js
cltd
dec
xlat
add
jo
jmp
mov
xor
or
insb
jns
add
sub
xor
mov
jp
js
fs
sbbb
repnz
out
xchg
aam
mov
sar
mov
adc
test
jbe
rorl
aaa
sbb
mov
insl
pusha
dec
dec
xor
jmp
sbb
sub
outsb
mov
pop
aas
fwait
ja
or
cmp
dec
and
into
jnp
cmp
addl
fists
jp
xchg
out
push
lret
and
test
mov
mov
js
fidivs
sub
xchg
pop
lcall
mov
fbstp
in
xchg
jmp
pop
jl
loope
out
test
sahf
filds
repnz
sub
rcrl
mov
scas
sub
pop
fbstp
icebp
push
mov
loop
sub
sbb
adc
push
lea
sti
mov
sub
sarl
into
xchg
into
ret
fwait
mov
icebp
inc
inc
and
sbb
push
clc
push
lea
jmp
and
pushf
ja
xchg
loopne
xchg
movsl
cmp
mov
pusha
stos
insl
call
out
dec
xchg
inc
mov
push
xor
pop
dec
lea
cs
nop
out
cs
test
jns
sbb
test
ret
push
sbb
jo
lret
pop
ja
sahf
fwait
sbb
cmpsl
jbe
mov
mov
cmpb
sub
movaps
mov
outsb
add
icebp
dec
xchg
aaa
divl
cltd
in
ret
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
fwait
cld
pushf
ja
inc
fwait
cmp
shrb
js
outsl
jge
shr
jb
mov
xor
xor
test
sbb
into
cmp
push
lods
data16
xor
push
shlb
pop
leave
lret
pop
cmp
sbb
outsl
lods
aas
inc
cltd
jg
test
and
dec
or
int
jle
push
pop
mov
outsb
mov
lock
xchg
xlat
mov
arpl
push
fistl
out
sahf
pop
add
arpl
bound
jns
sbb
ja
scas
inc
xor
sub
jp
aas
loop
push
jmp
nop
ja
rclb
sbb
add
or
inc
pop
test
fiaddl
aam
jne
or
aad
sbb
inc
mov
adc
sub
mov
add
cmp
insl
pop
movsb
pop
imul
sbbl
adc
jl
ds
int3
push
scas
mov
cmp
adc
adc
inc
jae
adc
pop
movl
pushf
call
inc
pusha
inc
bt
sub
test
sbb
xchg
bts
mov
sub
pushl
mov
clc
pushf
test
mov
test
btc
shld
shld
mov
bt
pushl
sub
mov
movb
pushf
rep
movsbw
mov
push
pushf
pushl
lea
jmp
xlat
cld
sub
dec
push
divl
or
nop
insl
pop
jbe
cmpb
out
cli
cli
mov
enter
mov
shll
jl
sbb
xor
dec
test
adc
lahf
shlb
dec
or
xor
lds
out
mov
aas
cwtl
add
test
xchg
shlb
pushf
ret
cmp
inc
sbb
aam
mov
mov
shl
call
pushl
cmc
cmp
add
pushf
call
cmp
pop
sbb
jo
std
dec
mov
js
inc
dec
lahf
adc
cmp
mov
mov
cltd
pusha
adc
test
pop
iret
xor
mov
out
push
leave
add
mov
arpl
in
cwtl
scas
mov
out
pop
xlat
mov
loop
dec
sahf
testb
jae
push
shl
sbb
outsb
mov
mov
int3
arpl
mov
mov
fdivl
push
push
push
ljmp
in
mov
ja
lea
lea
add
dec
test
jno
rolb
pop
add
popa
rolb
jmp
bound
xchg
inc
das
xor
popf
pushf
inc
jge
and
or
out
pushf
stc
ficompl
mov
inc
andb
popf
fcmove
shrl
lcall
icebp
jae
adc
or
xor
add
or
push
pop
movsl
jne
xchg
add
pop
cmp
cmpsb
gs
sub
inc
test
sbb
mov
sarb
test
add
popa
addr16
imul
popa
je
add
sahf
cmp
mov
push
pop
xchg
shr
mov
xlat
popa
daa
mov
and
xchg
pop
mov
shll
addr16
mov
das
or
or
pop
jnp
xchg
mov
xor
jle
shll
movsl
pusha
lock
lret
sbb
fnstcw
adc
inc
ja
sar
movsb
and
stos
add
aas
enter
jnp
jbe
mov
scas
call
cmp
cwtl
jmp
call
insb
xchg
mov
pop
cs
fwait
push
dec
cmpsl
lock
jno
lods
and
jge
sbb
sub
add
jb
in
gs
pop
and
sub
xchg
dec
data16
leave
sub
or
sbb
shlb
sbb
pop
sub
add
sbb
popa
mov
in
cs
add
pop
mov
jns
cwtl
xor
dec
xchg
xlat
lods
inc
mov
mov
cltd
inc
int3
insb
test
adc
loop
jmp
sbb
push
jne
push
lcall
mov
mov
push
sar
mov
add
inc
bswap
sub
push
test
call
in
fwait
mov
mov
jp
and
fldt
sbb
shrb
adc
cmpsl
sub
push
mov
add
mov
mov
mov
push
insl
pushl
jb
pop
adc
push
mov
or
ret
xchg
push
call
andnps
cmc
push
and
mov
or
in
and
push
call
xor
flds
and
mov
inc
adc
cmp
mov
enter
in
dec
cmp
dec
xor
insl
bswap
out
sub
mov
xlat
xor
in
xchg
sbb
or
inc
or
cmp
mov
adc
inc
es
aam
mov
pushf
lahf
ret
xor
call
pop
sahf
les
cmpsl
call
fs
sbb
cs
mov
dec
out
jmp
imul
dec
outsb
aas
adc
je
inc
sbb
imul
lods
call
stc
call
xchg
cwtl
xchg
mov
shlb
or
xor
sahf
add
rep
enter
pop
or
lods
and
cmp
test
xor
cmpsb
insb
push
pop
scas
adc
testb
adc
aas
push
daa
pop
sbb
fptan
pop
int
das
or
sbb
test
cwtl
test
xchg
pop
dec
int
sti
and
sub
pop
xchg
cmp
or
cld
jmp
mov
es
ss
mov
arpl
sub
jp
mov
jmp
mov
pop
outsl
insb
xor
cs
insb
add
dec
arpl
cmpl
pop
jne
fdivp
pop
xchg
addr16
and
stos
sbb
mov
dec
and
jge
icebp
lcall
adc
cmp
movb
call
mov
pushf
movl
pushf
movw
lea
jmp
add
push
mov
neg
enter
xchg
lcall
stos
jecxz
xchg
mov
test
push
sbb
in
inc
pop
in
scas
mov
xor
stos
mov
sbbl
pop
push
cmc
and
stos
mov
movsb
outsl
cld
jns
dec
sbb
pop
seta
int
xchg
pop
je
xor
jns
cwtl
hlt
xor
jns
push
fmuls
dec
stos
push
push
xchg
xor
pop
xchg
push
xchg
into
int3
pop
sbb
and
cmp
push
pop
pop
movsl
faddl
push
mov
mov
mov
dec
cmp
clc
push
shl
setl
lods
bt
add
pushl
bt
pushf
rol
call
lea
ret
mov
movl
pusha
movl
push
pushf
lea
jmp
clc
rcr
mov
cmp
push
pushf
and
stc
jmp
loopne
gs
adcb
or
in
pop
pop
in
adc
cmp
push
icebp
aaa
or
fstl
sarl
and
stos
imul
or
out
rcl
push
pop
ss
in
add
movsl
outsb
out
or
inc
jle
jmp
arpl
fs
xor
cs
insb
add
leave
xchg
icebp
lcall
cmpl
decl
lcall
push
lea
jns
inc
jmp
xlat
or
gs
into
pusha
or
clc
pop
ret
mov
mov
xchg
scas
lds
dec
in
cmp
lods
test
fs
push
int3
mov
sbb
adcl
loopne
hlt
cmp
mov
ret
popa
testl
xlat
xchg
adc
and
fcmovb
cmpsl
dec
int
mov
enter
inc
lods
in
subb
je
inc
cmp
and
push
shll
rcl
or
jb
and
ret
cs
inc
stos
je
sub
ljmp
and
sbb
push
pop
mov
push
cltd
sahf
xchg
fstpt
movsl
xor
mov
jl
jns
jmp
add
mov
stos
test
fwait
xchg
mov
push
jmp
or
mov
js
repz
pushf
rclb
cld
mov
leave
gs
xchg
rcl
call
xor
in
add
lahf
mov
roll
dec
mov
daa
jge
xor
cwtl
xor
js
sub
mov
mov
xor
push
cmpsb
fs
and
fld
pop
daa
inc
add
shrb
inc
mov
jne
add
orl
mov
mov
xchg
fldenv
mov
fs
lea
je
clc
cmp
push
cmp
cmp
lea
pushf
mov
jmp
push
push
inc
push
xor
cs
insb
add
mov
cmpb
xchg
inc
test
aas
lock
push
orb
mov
movsb
pop
xchg
or
fs
out
iret
jl
ret
loop
pop
cld
test
sbbl
mov
inc
cmp
mov
xchg
ljmp
rolb
xor
inc
pop
movsl
int3
insl
scas
xor
cli
jo
es
popf
push
testb
adc
inc
and
mov
dec
and
push
lea
jmp
or
mov
mov
and
dec
sti
mov
lret
sbb
in
orl
pop
xor
or
pop
bnd
fsubl
xchg
and
rcll
dec
push
pop
aam
xchg
jp
pushf
mov
sub
xor
int3
and
leave
mov
and
mov
jl
push
xchg
testb
int
pop
fwait
jge
add
fmull
inc
loopne
mov
jnp
mov
pop
xchg
pop
xchg
adc
mov
push
out
neg
decb
outsl
dec
push
mov
dec
xor
add
stc
ljmp
imul
andb
mov
lcall
sub
xchg
sbb
and
cmp
sub
mov
add
fcompl
inc
inc
or
jae
jmp
jge
and
jo
dec
in
sub
shll
pop
loop
xchg
dec
cmp
adc
dec
jle
and
loopne
xor
imul
jb
mov
jbe
aas
clc
fdivrs
popf
sbb
insl
mov
mov
shrl
dec
ficoml
mov
je
lods
sub
popf
dec
pop
imul
adc
cmc
push
outsb
adc
lret
pop
pushf
mov
push
xor
or
pusha
aam
imul
xlat
push
sti
push
mov
pushw
push
or
je
cmpsb
orb
mov
and
dec
push
adc
cmp
fisttpll
sub
mov
out
adc
sub
push
jae
lock
outsl
mov
mov
jecxz
movsl
mov
stos
imul
cmp
inc
ficoml
dec
inc
mov
mov
jno
addr16
jecxz
pushf
stc
mov
lret
imul
mov
mov
repnz
mov
sub
sbbl
pop
out
outsb
js
aaa
xor
sub
pop
insb
aas
mov
stos
jbe
in
pop
jmp
push
clc
call
xor
push
mov
fistpl
push
push
push
cmc
sub
jne
sbb
or
inc
lahf
not
mov
mov
cmp
adc
std
clc
xor
pop
fdivr
out
repnz
mov
hlt
inc
je
mov
stos
call
dec
xchg
in
in
cli
or
das
adc
cld
cmp
and
xchg
mov
dec
and
arpl
scas
jle
push
xchg
into
dec
test
mulb
push
pusha
push
mov
jmp
popf
mov
push
mov
cli
notb
sub
es
test
pop
fisubl
pop
int3
mov
mov
aaa
adc
mov
xorb
cmp
in
stc
pop
push
repz
pop
add
xchg
out
and
xchg
sbb
cli
inc
jnp
rorl
or
sbb
sarb
push
mov
fidivrl
pusha
mov
sahf
xor
sahf
cltd
divb
mov
and
aaa
xor
xor
and
and
dec
jo
cmp
test
sarl
mov
jb
movsl
inc
outsb
xor
mov
add
mov
into
pop
add
in
push
popf
fst
test
xchg
in
sahf
mov
jae
add
ret
shl
ds
mov
add
insl
icebp
and
icebp
daa
cltd
adc
shlb
in
pop
dec
arpl
insl
add
rolb
xchg
cmp
cmpb
ljmp
inc
push
or
pop
jecxz
clc
outsl
call
jmp
shlb
cld
sub
repz
adc
out
cmp
and
cld
cmp
push
pusha
add
int
xchg
lods
data16
in
fldcw
loopne
pushf
mov
jmp
in
push
jmp
call
mov
or
sub
daa
xor
popa
sahf
pop
push
nop
sarl
adc
dec
adc
es
ljmp
cmp
mov
cwtl
fcoms
in
pop
cwtl
cld
mov
mov
idivb
adc
sarl
add
and
scas
sbb
mov
test
mov
adc
lahf
xchg
das
ljmp
pop
dec
ret
or
sti
cld
pusha
aaa
pop
decl
add
repnz
in
xchg
xlat
adc
and
xchg
hlt
insb
jbe
fcoms
out
lahf
xor
sub
inc
inc
inc
mov
jl
or
mov
repz
mov
push
mov
lcall
push
andl
add
xor
dec
push
lods
jl
jbe
dec
out
ljmp
into
cmp
xchg
dec
xchg
inc
aad
lret
cmp
xchg
imul
rcrb
mov
mov
idivl
and
shld
inc
lods
int3
jge
jge
xlat
xchg
shrl
fst
call
adc
jmp
jmp
cmp
pop
insl
jbe
xor
fisubrs
push
sub
push
adc
mov
dec
sti
adc
add
mov
xchg
cmp
int3
jne
mov
shrb
push
xchg
push
push
test
sub
mov
js
in
and
dec
or
pushf
ret
nop
outsb
out
adcl
mov
movl
call
push
shrb
mov
jle
mov
jmp
repz
ret
mov
pusha
subl
cmpsb
mov
in
or
ja
cli
test
out
orb
xor
sbb
inc
add
push
dec
inc
or
into
jbe
hlt
aas
and
add
cli
mov
data16
sub
mov
mov
imul
jbe
repnz
test
cltd
out
xor
dec
push
sub
std
add
fstps
xchg
test
or
mov
test
pop
mov
test
or
xor
and
cmp
jmp
int
outsb
jg
sub
xchg
dec
fcoml
jmp
add
jmp
fldenv
scas
dec
aas
loopne
jg
inc
sahf
dec
and
enter
inc
fwait
je
adc
xchg
out
es
movsb
push
shrb
jnp
shll
inc
jb
sub
mov
call
pinsrw
lds
lods
iret
cmc
push
in
imul
pusha
and
or
or
sbb
mov
push
stc
xor
push
xchg
inc
lahf
lods
stos
fs
es
fidivs
es
outsl
dec
repnz
aaa
inc
xchg
jnp
rcrl
cmp
add
mov
fs
jge
ja
jmp
jmp
lea
jne
inc
rol
rcl
seto
mov
sbb
call
pushf
call
pushf
pushf
pusha
lea
ja
pusha
lea
jmp
mov
mov
sbb
lahf
jne
inc
mov
or
dec
mov
cmp
fmuls
enter
bound
jnp
es
or
push
mov
adc
lea
subl
jmp
cld
rcr
push
pusha
ljmp
push
push
push
jecxz
jne
je
and
cs
mov
cmpsb
lret
fwait
je
movsb
mov
mov
xchg
sti
sbb
cmp
lods
or
pop
pop
xor
andb
sub
out
in
sbb
fidivrl
push
add
call
pop
stc
shl
pop
jo
mov
ljmp
dec
insl
xchg
out
jne
gs
xchg
adc
sti
xor
fiadds
push
shl
mov
dec
cmp
ljmp
cwtl
sub
mov
mov
xchg
and
dec
in
or
cmpsb
pop
popf
jnp
in
sbb
jns
lea
jmp
imul
jb
mov
xorb
outsl
push
arpl
or
push
rorl
aad
dec
mov
xchg
adcl
sbb
pop
stc
add
pushf
lea
jne
not
call
add
pushl
pusha
movl
lea
jmp
push
pop
lret
mov
js
ror
test
rorl
push
pop
icebp
mov
mov
fistpl
xlat
das
cmpsb
mov
das
dec
popf
mov
int3
mov
aad
push
jbe
not
arpl
sub
sub
sub
rol
fisubl
movsl
ret
xor
sbb
cmpsb
inc
loop
sbb
or
mov
xchg
push
jae
ficoms
arpl
pop
inc
hlt
fs
mov
pusha
sub
jno
mov
loope
mov
cmp
aas
mov
mov
movsb
sub
lcall
or
push
test
mov
jno
mov
scas
jg
push
cmpsb
rclb
jb
int3
add
out
xlat
add
push
leave
ljmp
loopne
test
movsl
cmp
loope
lcall
jae
in
fists
filds
sbb
icebp
pop
inc
mov
xor
dec
pop
push
in
jg
aaa
into
and
xor
out
arpl
in
stc
roll
int
addr16
add
push
lods
lret
int
sbb
sub
gs
mov
mov
and
mov
mov
into
sti
repz
icebp
or
lahf
mov
addr16
hlt
cmp
jb
mov
sub
mov
or
insb
mov
rorb
cmp
cmovp
pop
movsb
lods
jp
mov
pop
jmp
idivl
hlt
mov
mov
mov
push
inc
call
ja
dec
or
cmp
mov
call
stos
inc
arpl
ds
outsl
sub
sub
push
lea
ja
test
add
stc
shl
setnp
mov
stc
cmp
pushf
mov
pushf
pusha
lea
jb
jp
cmp
cmp
pushf
mov
movb
pusha
lea
ja
call
mov
lea
je
pusha
lea
pushl
pushl
jmp
mov
add
rcr
and
clc
add
bt
cmc
mov
cmp
jmp
jnp
push
jae
mov
mov
or
fld
push
icebp
jp
push
mov
loop
cmp
scas
xchg
cmpsl
push
push
aaa
test
xchg
jnp
mov
push
pusha
pop
das
xchg
rcll
fcmovnu
test
fistpll
and
imul
jbe
jnp
mov
iret
jne
sub
shlb
push
jg
popa
or
insl
xorb
xor
add
xchg
cmp
imul
inc
scas
imul
pop
inc
inc
sbb
mov
insl
jle
add
pop
sub
int3
imul
push
sbb
gs
cld
add
cmp
movsb
scas
mov
pop
arpl
rorl
or
jnp
imul
gs
mov
hlt
arpl
jb
dec
mov
loope
mov
xor
mov
movsb
std
repz
cwtl
jne
loop
addb
inc
sub
mov
rcrb
inc
loope
stos
push
mov
shll
loope
daa
dec
pop
aad
ljmp
aas
jmp
call
bt
cmp
and
stc
push
bt
add
add
bt
test
push
call
xchg
push
xor
jbe
psraw
sti
daa
push
dec
pop
in
scas
in
lcall
popa
pop
lahf
imul
xchg
inc
unpcklps
or
fcomip
mov
jb
sbb
lahf
imulb
xor
sub
popf
scas
ret
daa
sub
test
movsb
and
mov
test
cmpsb
popf
aad
sub
push
cmp
xlat
xlat
pop
sti
pop
xor
clc
std
jns
dec
movsl
push
in
jne
mov
mov
mov
xchg
fildll
push
lods
aam
jb
inc
push
sbb
jl
xchg
daa
mov
std
mov
mov
jb
pop
xor
rcr
lret
fcoms
out
add
xor
add
cli
je
jae
xor
jmp
cld
shlb
or
pop
cmp
sar
jbe
les
and
mov
pushl
lea
jmp
or
mov
inc
xchg
notl
inc
push
pushf
lret
inc
push
rolb
sahf
test
lahf
inc
popf
inc
jge
add
cltd
mov
mov
mov
sbb
mov
repz
scas
sbb
inc
add
or
shlb
and
aam
mov
inc
int3
mov
mov
imul
cs
pop
int
pop
sti
jns
inc
add
cmp
js
adc
and
mov
dec
divb
mov
and
ja
adc
mov
mov
test
or
mov
pop
hlt
dec
aaa
mov
in
jmp
daa
in
into
xor
daa
aam
sbb
cmpb
dec
cwtl
jns
and
lahf
shll
mov
sarb
mov
into
loop
movsb
xchg
adc
and
xchg
fimull
arpl
je
jae
ret
push
dec
je
and
pop
loop
rcrl
sub
repnz
mov
lock
pop
inc
lahf
jp
dec
fmull
add
cmp
xchg
mov
mov
lods
lret
pop
xor
and
push
pop
leave
ja
mov
inc
sbb
stc
push
es
popf
push
mov
jp,pt
and
and
subl
arpl
inc
xchg
pop
fwait
test
lea
fwait
loop
das
ja
mov
in
sub
pop
xchg
mov
pushl
not
bswap
pushf
lea
jne
push
setle
movsbw
call
pushf
stos
pushf
lea
jmp
xchg
push
jb
jbe
int
insb
stos
xchg
arpl
hlt
xchg
ljmp
popl
call
fiaddl
dec
lods
add
jne
outsb
xchg
lret
and
fsts
lcall
adc
outsl
mov
hlt
xchg
push
icebp
push
push
jmp
lcall
cli
sbb
test
push
into
or
pop
dec
lock
jge
mov
rclb
push
shl
sub
adc
push
out
cld
mov
mov
or
xchg
js
mov
mov
sahf
ds
fidivrs
inc
adc
xchg
popa
push
sub
xor
sbb
sbb
outsl
stc
mov
xlat
xchg
push
aam
fidivrs
int3
fcoml
adc
enter
xchg
cmp
mov
push
fs
out
inc
xchg
jg
aas
andb
mov
std
scas
test
jp
push
push
mov
sub
xchg
xor
cmpsl
sub
sub
mov
jg
jg
sub
xor
mov
and
lret
pop
repnz
leave
out
dec
mov
jo
pop
scas
xor
add
cltd
in
or
shl
imul
pushf
sub
aam
lea
cs
fidivrs
jnp
cmp
and
ror
jge
cmp
test
call
sbb
jmp
jbe
fistps
cmp
dec
in
sub
test
ret
mov
jne
mov
or
add
lea
leave
sti
inc
xchg
in
es
les
push
add
or
pop
jbe
pushf
inc
add
mov
movsl
out
stc
fidivs
pop
jp
cld
mov
sub
mov
and
aam
stos
jmp
xchg
inc
cmpl
test
jns
mov
mov
cld
js
xor
lods
pusha
dec
push
cmp
setae
or
xchg
cld
leave
and
lods
cmc
inc
xchg
outsl
mov
jge
xchg
sar
divb
aas
mov
shl
pop
mov
loopne
mov
cmp
push
mov
mov
push
out
sti
popa
mov
lea
dec
cld
iret
test
test
sti
inc
lock
mov
scas
push
mov
nop
inc
popa
ss
ja
mov
inc
and
into
leave
add
cmpsb
ja
stos
lret
xchg
out
fs
push
mov
add
in
xchg
jmp
ret
imul
mov
add
add
subl
ljmp
fdivrl
xor
pusha
lea
jae
pushf
cmp
call
mov
push
pusha
pushf
pushl
ret
pushf
movb
lea
jae
jmp
sbb
jne
jbe
shlb
and
inc
mov
xor
aas
and
rorl
xor
jmp
sbb
jnp
sbb
adc
cltd
cwtl
pop
ret
sti
cmp
add
cmp
xor
cltd
jnp
add
bound
in
shlb
mov
inc
adc
mov
xor
xor
push
decl
adc
inc
mov
cmc
ret
fwait
dec
dec
xchg
andl
pcmpgtw
test
xor
mov
push
movsb
mov
nop
mov
sub
cltd
adc
jmp
shl
cmp
or
rcr
xor
call
pusha
bt
mov
jmp
push
adc
cmc
xadd
lea
push
setno
cmc
push
bt
neg
stc
shld
mov
cmp
adc
mov
sar
ror
add
mov
adc
shl
shl
xor
pushf
lods
rol
or
shl
shl
add
mov
push
rol
pushf
cmc
clc
not
movb
push
rol
setno
pusha
jmp
pushf
push
lea
ja
setns
pusha
inc
inc
pusha
sets
mov
inc
rol
xchg
aad
btr
sar
mov
stc
test
stc
seta
mov
cmp
xchg
bsr
dec
mov
push
sub
movb
jmp
loop
in
jbe
pop
jae
cld
cltd
insl
mov
repnz
shl
sub
xchg
jne
rcll
push
pop
mov
cmpsb
das
les
fstps
mov
scas
ljmp
lret
sub
adc
fadds
add
call
stos
inc
cld
pop
or
xchg
iret
aaa
subl
dec
rcll
jo
test
xchg
inc
subb
sahf
mov
xor
mov
test
dec
fwait
pushf
test
in
stos
push
leave
pop
pop
test
imul
inc
xchg
xor
cmp
push
add
xchg
jbe
pand
jl
mov
xor
add
add
jl
pushf
inc
cmp
push
loop
ja
push
into
cmc
call
jmp
xchg
out
xchg
push
test
add
mov
dec
xor
cmp
mov
ljmp
push
or
jle
leave
cmc
scas
and
add
cs
mov
jg
and
inc
pop
jbe
ja
fcoms
les
cwtl
cs
mov
jmp
push
xor
mov
adc
sub
cmc
pop
rorb
xchg
xchg
shld
push
movsbw
or
mov
or
mov
not
mov
cmc
or
pusha
lea
je
call
lea
ja
push
sub
pushf
lea
jmp
inc
lcall
pop
mov
mov
adc
sub
sbb
enter
addr16
mov
add
or
fwait
or
jne
mov
cmp
ss
xchg
movsb
dec
dec
iret
std
mov
jno
jg
or
pushl
or
jo
fisttpl
push
aas
xchg
dec
es
jb
pop
xchg
xlat
sbb
inc
ret
lods
dec
and
jle
pop
cld
sti
inc
mov
push
cld
jle
mov
sbb
xchg
xchg
imull
sbb
jecxz
cs
lea
lret
lock
pop
cmc
notb
adc
movb
sub
mov
imul
push
push
dec
adc
xor
fs
loop
repz
cli
push
call
pop
ja
pop
sbb
aaa
sub
mov
xor
addr16
jb
mov
sub
out
daa
sbb
push
xchg
in
in
mov
adc
jp
cmp
add
clc
pushf
mov
cmc
test
pusha
jmp
mov
call
pop
jle
mov
stos
xor
cmp
ds
in
ja
insb
call
bound
xchg
rorl
arpl
into
sbb
fistl
inc
pusha
iret
fisubrl
add
mov
jg
mov
mov
add
jbe
in
jl
inc
mov
pop
daa
adc
insb
lret
xlat
xor
cmp
xchg
mov
shll
ljmp
sub
lods
pop
je
adc
dec
push
les
outsl
or
outsl
inc
xchg
jg
mov
clc
xor
add
loopne
sub
jbe
mov
leave
ja
sarl
cmp
or
sbb
gs
sahf
mov
pop
xor
mov
dec
or
lock
ja
mov
mov
iret
and
ljmp
xor
xor
cmc
insb
xor
insb
inc
call
and
loopne
push
jmp
adc
rcll
rcl
adc
sahf
mov
lret
pop
movzbw
pop
pushf
pusha
mov
lea
jg
movzbw
pop
pushf
push
pushl
ret
shlb
inc
jbe
jmp
cmp
pop
je
push
mov
jp
xchg
rcrb
scas
inc
in
scas
push
or
mov
aaa
imul
push
pusha
nop
fsubr
adc
ret
mov
mov
sbb
test
mov
adc
rorb
dec
add
lea
call
andl
add
lret
lahf
jge
xchg
push
les
xchg
cld
add
ja
adc
jbe
ret
jmp
fnstsw
xchg
lret
pop
int
mov
lods
mov
adc
ret
sbb
mov
jbe
dec
pop
push
jae
cmp
jbe
pop
jle
push
das
cmp
sahf
ret
push
in
dec
sbb
jb
imul
sub
xchg
rcr
push
push
ror
insb
in
das
xlat
lcall
or
ss
sbb
inc
adc
xor
lea
arpl
inc
jbe
outsb
add
inc
rorb
mov
stc
xchg
ret
leave
mov
push
mov
cmpb
cmp
int3
inc
cmp
mov
jp
sub
push
cli
push
or
pop
fs
mov
push
clc
inc
pop
incl
pushf
test
sbb
fs
out
xlat
and
stos
adc
das
xlat
std
cld
mov
pop
sub
push
lahf
or
adc
icebp
imulb
test
cmp
mov
push
ss
loopne
push
mov
les
sub
test
jmp
pop
mov
inc
jbe
in
jge
outsl
int
es
mov
mov
adc
cwtl
mov
movb
mov
mov
mov
test
mov
sti
cmp
cmp
cmpsl
hlt
jb
arpl
or
mov
std
dec
adc
mov
xchg
adc
push
mov
incb
mov
std
xor
fdivr
ja
jae
insb
mov
mov
pop
push
lret
inc
gs
imul
inc
add
pop
inc
jbe
insl
sub
or
std
or
icebp
insb
cmc
adc
sbb
fwait
lahf
pop
cmc
mov
xor
or
mov
fisubrs
roll
mov
adc
rcrl
xchg
pop
sbbl
stos
int3
jb
sbb
mov
xchg
cmp
sbb
pop
clc
inc
inc
hlt
out
test
lret
inc
jbe
push
mov
mov
sbb
sbb
aaa
adc
aad
mov
mov
shl
int
dec
lahf
dec
les
imulb
xchg
xchg
adc
inc
push
xor
stc
pop
or
test
push
dec
pushf
jmp
jmp
ss
clc
pushf
adc
sahf
lods
jge
inc
or
xor
cmc
icebp
mov
in
rorl
xchg
adc
leave
enter
popf
shrl
sub
and
stc
scas
test
sti
int
adc
inc
cmp
xor
decb
and
leave
js
loopne
fcomps
mov
sbb
push
push
push
stc
cltd
jecxz
xchg
mov
stos
nop
vpshaq
xchg
stos
jo
test
lea
mov
adc
mov
jp
cmp
imulb
loopne
aad
inc
rclb
push
jmp
sti
rcl
push
fmul
popf
les
mov
sub
dec
pop
dec
xor
inc
xchg
sbb
leave
cmp
hlt
pop
repnz
mov
jmp
lea
call
pushf
lea
jae
stc
jmp
rorb
push
sbb
popf
jb
rcll
inc
pop
pop
dec
int
orl
sbb
adc
loope
arpl
ret
test
sbbb
and
mov
xor
mov
xchg
and
enter
scas
inc
lods
and
cmp
flds
fadd
cld
sbb
xchg
add
scas
xor
lret
cmp
pop
jle
test
xor
in
mov
dec
fiaddl
cltd
sbb
sti
push
or
inc
mov
pop
stc
popf
mov
adc
dec
add
arpl
mov
jmp
pop
cmp
rcll
sub
sub
lock
lods
test
or
dec
jp
mov
mov
sub
fsubl
xchg
sbb
insb
inc
in
sbb
jecxz
dec
loope
sub
mov
ss
jae
call
jae
dec
xchg
jp
jae
push
sbb
sbb
mov
stos
mov
repz
fcomip
inc
notl
cmp
dec
push
mov
insb
lcall
jecxz
sbb
mov
jo
incl
fldl
notb
std
xchg
sbb
popf
pop
cmpb
jae
adc
sbb
push
mov
xorl
xchg
cmpsl
aam
xor
les
seta
xchg
bt
sar
mov
pusha
mov
sub
bt
pusha
pushl
xchg
add
jge
btr
shrd
mov
clc
test
sub
call
mov
mov
xor
rclb
cmp
sub
mov
sbb
lds
or
ja
out
pop
jbe
push
call
mov
and
mov
ja
ljmp
aaa
sbb
out
or
mov
pop
lret
hlt
jae
mov
jnp
test
jae
out
adc
das
jbe
ret
shlb
push
adc
jbe
sbb
leave
cmp
gs
mov
repnz
mov
sub
cmp
inc
adc
inc
pcmpgtb
lea
sbb
mov
fisubl
push
cli
cltd
jne
sbb
mov
icebp
push
mov
push
lahf
pop
jmp
iret
dec
test
add
add
pop
sub
clc
or
xchg
and
mov
pusha
mov
jl
aam
adc
mov
in
inc
nop
dec
pop
mov
xor
rolb
adcb
lods
lea
jne
call
mov
mov
aam
inc
in
xchg
out
jp
sub
clc
mov
mov
int
call
outsl
lds
mov
in
pushf
mov
or
adc
mov
pop
mov
lods
and
adc
add
sahf
arpl
lea
mov
out
mov
imul
mov
jecxz
sbb
mov
mov
mov
aad
mov
movw
mov
pusha
movl
jmp
lea
jne
shld
shl
xchg
mov
btr
sub
btc
adc
dec
not
mov
clc
cmp
stc
jmp
push
pushf
lea
ja
push
jmp
call
je
mov
push
pushf
mov
lea
call
call
hlt
xor
jbe
mov
data16
inc
cmp
subb
js
leave
mov
inc
inc
jg
mov
mov
fsubp
loopne,pt
mov
sub
mov
pop
inc
mov
enter
loope
out
int3
add
adcb
inc
cmovnp
and
shll
jp
movsb
jno
shll
jecxz
sub
mov
les
sbb
loopne
outsl
pop
test
mov
movsl
jg
mov
push
leave
or
push
jae
jbe
push
push
cmc
push
dec
push
sbb
cmp
cwtl
jns
aaa
jle
call
jp
dec
xchg
cmpsl
mov
js
cmp
pushf
mov
stc
or
mov
adc
fs
je
jmp
cmp
cmp
stc
cmpb
pushf
pushl
lea
jne
movsbw
xor
ror
sbb
shr
call
outsb
dec
dec
jbe
jl
cmp
imul
mov
xchg
mov
std
int3
lcall
mov
fidivrl
pop
ljmp
je
ljmp
fcomip
dec
sbb
adc
adc
cmp
movsb
decb
data16
cmc
adcl
dec
arpl
mov
cmpsl
and
sbb
enter
mov
adc
in
lock
repz
push
bound
bound
in
sub
mov
dec
ljmp
pop
lds
cmp
push
fwait
inc
mov
fdivrl
xlat
pop
icebp
pushl
orb
inc
mov
adc
loop
or
adc
jb
xchg
jne
jecxz
in
pushf
test
xchg
jp
mov
cmpps
inc
negl
test
shrl
inc
mov
add
loopne
clc
ss
sbb
mov
and
in
sub
fsubrl
add
imul
cmp
les
push
sbb
sub
xchg
sub
xchg
jg
cli
jecxz
or
pop
or
jge
dec
jbe
insl
sub
mov
lods
jns
sub
cmp
popa
xchg
sbb
popf
aaa
std
mov
and
pop
xchg
inc
in
fnsave
fdivrs
jns
adc
mov
cltd
out
das
sbb
jecxz
ja
push
rclb
mov
add
and
loope
shll
or
dec
sub
adc
pop
loopne
xchg
loop
das
cmp
in
jmp
sbbl
sub
sbb
cmp
orb
jo
push
addr16
out
jl
ret
push
or
pop
mov
out
mov
imul
fdiv
cmp
mov
test
cmp
bt
test
add
stc
test
test
call
mov
mov
lahf
test
out
mov
mov
out
mov
mov
sub
mov
or
cmp
or
adc
add
or
xlat
test
loop
fucomip
dec
ljmp
rclb
push
aam
subb
pop
sbb
or
icebp
xor
out
xor
jecxz
inc
xchg
add
ret
test
cmp
loop
pop
xchg
dec
jbe
inc
push
xor
sub
cli
fsubs
push
movsb
sbb
fcomps
lret
xlat
test
sahf
mov
xlat
push
xchg
sub
push
ss
imul
xchg
or
mov
push
add
fstps
inc
mov
test
xor
out
pop
lcall
jae
stos
or
orb
xor
int
push
adc
xor
pusha
cmp
clc
mov
lds
jmp
pop
push
loope
bt
pushl
not
pushf
xor
stc
movb
call
pop
jae
dec
jbe
ja
ja
cmp
pop
fwait
hlt
push
pop
pop
in
pop
andb
addl
movsb
sbb
lea
jb
adc
add
fnstcw
fldenv
inc
stos
jae
fsubr
js
pop
js
push
fwait
add
leave
lock
add
inc
aam
ret
leave
jo
and
add
mov
pushf
popl
lea
jl
pushf
pushl
popl
pusha
movb
pushf
mov
lea
jmp
jmp
pusha
mov
pushf
mov
mov
xchg
call
lea
btr
shrd
shl
sub
pusha
bswap
lea
pusha
push
lea
jmp
mov
mov
jmp
cmp
sub
bt
pushf
cmpl
pusha
mov
movl
mov
lea
jge
push
mov
push
mov
mov
pushl
mov
mov
lea
jne
bswap
btr
jmp
pushf
lea
xchg
movzbl
bswap
pushf
pop
xchg
movw
lea
not
pushf
mov
jmp
pushf
popl
pusha
call
call
sar
bsr
and
bsf
rdtsc
pusha
mov
sub
movb
pushf
jmp
mov
mov
xchg
bswap
mov
push
movzbl
push
mov
not
movzbw
call
mov
call
pusha
mov
inc
and
bts
bswap
shl
and
bswap
mov
cmc
test
add
mov
push
mov
mov
push
pushf
pushf
push
lea
jmp
test
pusha
jmp
jmp
dec
sar
btr
stc
notl
rcl
sbb
aaa
bsf
mov
test
cmc
test
pusha
sub
cmp
cmc
test
pushf
and
mov
call
call
pushf
call
mov
mov
call
pushl
popl
pushl
movw
mov
push
lea
jmp
movb
mov
push
mov
lea
jmp
jmp
das
mov
call
pushl
popl
pushf
movl
inc
mov
movzbl
dec
bt
lea
bt
ror
xchg
dec
neg
inc
lea
lea
cmc
bts
sub
not
bswap
mov
mov
pusha
pusha
push
lea
jmp
mov
pusha
pushf
popl
mov
pushl
popl
pushf
movw
lea
jmp
bt
add
mov
mov
pushf
lea
jmp
movzbw
push
bswap
push
not
pushf
mov
jmp
mov
not
setbe
clc
mov
pusha
pusha
add
movb
jmp
aad
btc
movsbw
shl
movzww
clc
stc
pushf
bt
add
sub
ja
add
clc
push
xor
pusha
jmp
xchg
dec
dec
or
xor
bswap
shl
lea
btc
rcl
sub
mov
pushf
pop
mov
pushf
lea
jmp
call
inc
or
mov
cmc
cmc
bt
bt
pushl
popf
mov
movb
mov
lea
jmp
jmp
pusha
mov
call
mov
rol
shl
xchg
mov
btr
btr
movzbw
sub
movzbw
dec
inc
jmp
pushf
pushf
call
xchg
pop
mov
xchg
movsbw
mov
bswap
xchg
movzbl
pop
call
pusha
pushf
popl
call
cmp
pushf
pushf
sub
pushf
pusha
movb
movw
mov
movb
pushf
push
pushf
lea
jmp
cmc
clc
stc
rol
mov
call
xor
jmp
push
bswap
push
jmp
pusha
mov
jmp
cmp
call
pushf
jmp
jmp
mov
pushl
pushf
popl
lea
xchg
pushl
popl
xchg
inc
movl
pusha
mov
call
pushf
popl
call
pusha
pusha
dec
push
xor
pushl
stc
sub
mov
jmp
pushf
jmp
pushf
jmp
call
push
movb
pushl
popl
pushl
lea
jmp
pusha
mov
bswap
xchg
lea
lea
mov
not
pushf
popl
not
pushl
popl
lea
movl
not
movsbl
not
mov
xchg
mov
call
lea
sbb
mov
ror
sub
movsbw
mov
pushf
push
lea
jmp
inc
mov
shl
mov
stc
stc
bt
add
push
mov
pusha
pushf
pushf
lea
jmp
push
mov
mov
pusha
pushf
mov
movw
mov
jmp
movzbw
pusha
daa
mov
xor
mov
test
clc
cmc
stc
add
pushf
mov
pusha
pushf
lea
jmp
mov
mov
call
call
dec
cmc
rcr
rcl
rol
ror
bsr
call
call
jno
push
movw
movl
push
call
movl
pushf
call
mov
push
pushf
popl
push
push
call
mov
bswap
jmp
pushf
pusha
mov
push
mov
call
sar
rcl
inc
rcl
mov
stc
call
cwtl
mov
pusha
push
pusha
cmp
add
jmp
mov
push
dec
test
add
cmc
cmc
push
call
mov
pushf
pushf
lea
jmp
sub
jmp
pusha
pushl
pushl
popl
pushf
movl
mov
mov
lea
jmp
add
push
jmp
mov
jmp
call
movl
pop
pushf
jmp
lea
xchg
mov
lea
mov
jmp
bswap
push
mov
pushf
not
not
dec
bt
ror
pop
rcr
ror
movw
not
pushf
dec
btc
bt
movzbw
movzbl
lea
btr
bts
sub
call
push
cmp
stc
sub
push
pushf
mov
mov
lea
jne
jmp
shl
mov
bsf
btc
mov
bswap
shrd
movzbw
bsf
mov
clc
add
call
pusha
mov
push
pushf
mov
lea
je
push
pusha
pushf
xchg
mov
pusha
mov
pushl
xchg
pop
xchg
call
movl
pushf
call
stc
call
pop
pop
mov
call
jmp
movb
mov
pusha
mov
pushf
xchg
lea
mov
bswap
mov
pop
mov
lea
movzbw
lea
jbe
push
pushf
xchg
pushf
popl
dec
movsbw
dec
bswap
pushl
movzbw
push
not
lea
xchg
mov
inc
push
pushf
bswap
dec
btr
ror
xchg
inc
call
pushl
lea
dec
xchg
push
inc
lea
xchg
mov
not
jmp
ror
movsbw
dec
inc
test
lea
rcr
bts
and
jmp
rcl
neg
test
btr
mov
ror
and
adc
call
pusha
jmp
lea
mov
mov
mov
movsbw
lea
jmp
mov
bswap
not
movsbw
jmp
xor
push
bt
sub
push
mov
mov
push
bt
sub
pushf
pusha
pushf
movb
lea
jmp
mov
jmp
mov
movw
mov
pushf
call
pushf
popl
pushf
pusha
pushl
popl
pushf
pushf
mov
movb
lea
jmp
push
movb
push
dec
test
bt
add
jmp
mov
inc
xchg
movzbw
dec
bswap
clc
mov
call
sub
call
stc
xchg
test
pushl
add
jns
clc
push
cmp
jmp
movb
movb
pushl
mov
movb
pushf
push
lea
jmp
sub
movb
push
mov
jmp
movsbw
jmp
jmp
stc
push
xor
clc
add
bt
stc
clc
rol
push
call
call
lea
je
cmc
stc
push
cmp
sub
push
add
jbe
xchg
jmp
mov
cld
mov
pushf
std
pushf
pushf
cld
movb
push
jmp
bt
cmp
pushl
lea
ja
ror
rcr
aas
mov
and
aad
bsf
lea
aad
sub
mov
lea
add
and
pusha
sub
pushf
mov
movsbw
lea
pushf
lea
std
push
pushf
pushf
pushf
cld
mov
lea
pushl
movsbw
lea
pusha
cld
cld
mov
call
mov
mov
shrd
pusha
shl
mov
push
call
pusha
rcr
dec
shl
mov
call
call
popl
pusha
lea
jmp
pushf
mov
pushf
call
mov
push
pushf
movw
lea
jmp
mov
jmp
pushf
call
shl
sbb
add
mov
jmp
setb
neg
mov
bt
bt
bt
cmc
sub
test
shr
push
mov
call
bswap
pusha
rol
mov
setns
bsf
bswap
lea
mov
and
mov
jmp
mov
pop
xchg
pushf
dec
clc
call
jmp
rcl
movzbl
pusha
call
cmp
add
pushf
mov
push
pushf
popl
push
call
pushf
mov
pusha
jmp
call
setg
ror
xor
mov
call
not
stc
clc
and
push
movb
pushf
call
xor
jmp
pushl
popl
pushf
movb
push
movw
lea
jmp
ror
lea
push
dec
bsf
add
lea
adc
lea
sar
sub
not
pusha
bswap
lea
pushl
pusha
pushf
push
lea
jmp
pushf
mov
call
inc
dec
rcr
movw
jmp
shl
shl
bsr
mov
push
clc
test
pusha
sub
lea
jo
pusha
movb
movw
mov
pushl
pusha
movl
mov
lea
jmp
not
mov
not
mov
movzbw
pushf
popl
movsbl
pushl
popl
dec
pushf
movl
pusha
xchg
jmp
jmp
pop
push
mov
not
xchg
movzbw
dec
bts
rcl
bt
ror
call
xchg
movsbl
mov
movsbw
call
mov
clc
mov
test
add
call
inc
push
push
dec
pop
clc
dec
lea
or
sub
sbb
sar
adc
mov
cmc
bt
mov
or
cmp
add
add
pushf
sbb
mov
cmp
add
bswap
bswap
inc
push
inc
movsbl
clc
pushl
rol
btr
or
neg
adc
add
shrd
bsf
movzbl
or
bsf
setbe
movsbw
mov
jmp
pusha
pusha
pushf
mov
pushf
pushf
mov
jmp
mov
push
xchg
push
movzbw
pop
push
push
mov
call
not
ror
movsbw
test
mov
xor
not
shl
shrd
xor
ror
add
add
dec
inc
setl
jmp
lea
movzbl
pop
mov
pushf
pushl
lea
jmp
pop
lea
mov
pushf
push
pushf
lea
pusha
jmp
xchg
lea
xchg
pusha
pop
mov
pop
pushf
push
movsbw
mov
movsbw
movzbw
not
push
pushf
popl
lea
inc
call
call
jmp
bsr
mov
xadd
rcl
pop
stc
bts
lahf
daa
pop
movsbw
movzbw
aaa
cld
popf
lahf
lahf
xchg
pop
mov
pop
movzbl
movzbl
movsbw
pop
movzbl
pop
call
daa
clc
rcl
shl
mov
stc
sbb
stc
push
mov
test
add
call
call
pushf
shrd
stc
cmp
lea
add
jne
cmp
clc
cmp
pushf
jmp
rep
sbb
mov
add
jmp
bswap
not
dec
shrd
sar
bsf
lea
shl
dec
sub
lea
not
lea
call
movl
dec
pushf
bswap
mov
bswap
push
mov
dec
dec
not
rcr
ror
ror
movzbw
xchg
jmp
mov
pushf
mov
pushf
xchg
movzbw
pushl
call
jmp
and
pop
lea
movzbw
sar
pushf
sbb
sub
pusha
push
lea
mov
lea
jmp
cmp
xor
rol
and
mov
clc
call
mov
pusha
mov
movb
pushf
lea
jmp
pushf
mov
divl
pushf
mov
lea
jo
mov
call
jmp
push
clc
ror
cmp
neg
pushf
inc
cmc
test
sub
cmc
mov
pushf
xor
pushf
mov
pushf
mov
push
clc
sub
pushl
jmp
pusha
call
or
call
pushl
popl
movzbw
bswap
pushf
pushl
movl
pop
not
mov
jmp
dec
lea
ror
push
mov
inc
dec
inc
sbb
lea
btr
sub
pushf
bswap
lea
pushf
lea
jmp
bts
ror
movsbw
dec
call
pushf
mov
mov
pushf
lea
jmp
call
jmp
movzbw
lea
pushf
pushf
jmp
push
pushl
pushl
popl
movl
lea
jmp
call
push
pushl
popl
movzbw
bswap
jmp
lea
jne
jmp
movsbw
movsbw
bswap
not
mov
jmp
movzbw
pushf
popl
bswap
bswap
pushl
popl
not
pusha
pop
call
jmp
lea
movb
pushf
pushf
lea
jmp
call
sub
jmp
mov
call
test
cmp
bt
add
jmp
call
xchg
pusha
movl
jmp
mov
mov
mov
push
lea
jbe
pushf
mov
push
pushf
popl
call
stc
clc
pushl
popf
mov
mov
mov
lea
jmp
jmp
pusha
bsr
pushf
btr
movzbl
cmp
bswap
pushl
xor
bt
ror
sbb
neg
setb
stc
bsr
sub
jmp
adc
ror
mov
test
jmp
pushf
mov
pusha
mov
pushl
mov
push
push
xchg
lea
jo
bswap
movsbw
push
xchg
jmp
pushf
popl
jmp
pushf
mov
pushf
jmp
call
call
pushl
mov
call
pushf
mov
pushf
lea
jmp
sar
ror
mov
cmp
call
bswap
pushl
popl
mov
not
bswap
call
pusha
call
mov
pusha
push
mov
pushf
pushf
mov
lea
jmp
jae
cmp
sub
pusha
add
pusha
push
pushf
popl
jmp
pushf
popl
jmp
bswap
movsbw
pushf
popl
movsbw
pushl
popl
movsbw
call
clc
add
call
mov
pusha
call
ror
mov
pushf
adc
inc
add
add
movb
jmp
setge
not
pushf
mov
jmp
push
movzbw
lea
push
pushf
mov
pusha
movzbw
pushf
popl
call
add
xchg
bsr
bsr
mov
rcl
seta
bsf
ror
mov
pusha
stc
push
not
mov
pushl
bt
call
mov
push
call
and
pushf
stc
stc
cmp
jmp
lea
mov
setno
movzbw
xchg
call
pushf
call
xor
pushf
test
cmp
cbtw
test
clc
call
lea
js
push
pushf
movb
mov
call
inc
movzbw
bsr
movzbw
mov
inc
cmp
jmp
movzbl
lea
dec
xadd
rcl
shrd
call
pushf
mov
mov
lea
jmp
rol
lea
jnp
push
push
dec
pushl
cmp
cmp
clc
xor
pushf
jmp
pusha
pushl
mov
pusha
call
mov
movb
pushf
jmp
cld
movzbw
lea
mov
pushf
pushf
mov
pushf
cld
call
mov
pushf
movl
pushl
ret
not
pushf
bswap
pushl
popl
not
movl
inc
push
mov
pop
jmp
inc
dec
jmp
mov
pushf
movsbw
xchg
xchg
xchg
call
pushf
popl
pushf
pushf
pushl
pushf
pushl
popl
movb
pushf
pushf
lea
jmp
movl
inc
pop
mov
pop
dec
rcr
btc
btc
ror
lea
dec
neg
lea
cmc
btc
sub
pusha
lea
movb
pusha
lea
jmp
xor
call
pushf
mov
mov
lea
jmp
cwtl
lea
movsbw
push
movsbw
movsbw
bswap
mov
call
pushl
popl
pushf
lea
jmp
movzbw
mov
pop
jmp
movb
sub
cmp
jmp
pushf
pushf
popl
push
push
pushl
popl
movl
mov
movw
lea
jmp
push
mov
pusha
call
mov
test
sub
jmp
mov
push
lea
jmp
mov
pushl
mov
mov
pusha
pushf
lea
jmp
inc
xchg
bt
mov
inc
mov
call
mov
not
dec
pushf
btc
bt
ror
movzbw
mov
dec
sbb
inc
lea
cmp
sub
bswap
not
mov
pushf
lea
jmp
pushl
push
pushl
popl
pusha
lea
jmp
call
mov
movb
movw
mov
pushf
pushl
movl
push
mov
pushf
movsbw
bswap
jmp
add
pushf
lea
jne
push
mov
pushf
popl
jmp
push
pushl
popl
mov
pusha
lea
jmp
inc
test
movw
xor
test
cmc
sub
cmp
mov
add
jne
push
pushf
sub
pusha
jmp
call
pushl
popl
movw
pushl
lea
jmp
mov
pushf
mov
mov
movb
movw
lea
jmp
mov
pushf
pushl
pushf
popl
cld
lea
xchg
movzbw
movsbl
mov
pusha
movsbw
pushf
lea
pusha
std
xchg
jmp
pushl
popl
bswap
call
jmp
rcr
mov
cmc
test
jmp
mov
pushf
push
pushl
ret
dec
rol
xor
movsbw
bsf
movzbl
cmp
bt
mov
test
or
pushf
push
call
add
mov
and
mov
cmc
sub
clc
shl
pusha
mov
pusha
pushf
pushf
popl
jmp
cld
popf
pushf
movb
pusha
lea
jmp
mov
mov
lea
jmp
pushf
popl
inc
not
jmp
pusha
mov
call
sub
push
lea
pushf
movl
pusha
lea
jmp
movb
pushl
mov
pusha
mov
pushf
movb
lea
jmp
jmp
mov
pushf
push
push
mov
pushl
ret
add
add
push
mov
pop
pushf
xchg
movsbl
bswap
xchg
pop
mov
push
movsbl
movzbw
mov
movsbw
call
jmp
xchg
bswap
call
xor
btr
mov
pusha
mov
push
cmp
clc
stc
add
push
mov
pushf
mov
pushl
pushf
lea
jmp
cmc
rol
push
push
dec
call
sub
test
sub
jg
pushf
add
pusha
mov
mov
push
lea
jmp
movl
mov
jmp
movzww
pushf
cmp
lea
bt
cmp
add
push
push
jmp
pushf
mov
push
jmp
call
call
mov
push
jmp
call
mov
mov
movl
movw
call
jne
push
pushf
call
inc
bswap
movl
lea
inc
mov
not
dec
rcr
ror
push
call
neg
pushf
jmp
bswap
pushf
popl
dec
pushl
popl
not
push
dec
movsbw
movl
jmp
jmp
jmp
cwtl
cmp
mov
cmp
cmc
sub
movb
jmp
call
bt
push
jmp
rcr
movsbl
shld
sbb
add
btc
lea
bts
rol
pushf
jmp
lea
jae
pushf
pushl
mov
mov
pushf
lea
jmp
movsbw
dec
bsf
btc
inc
lea
clc
shl
rcl
sub
call
movb
jmp
mov
cmp
clc
push
call
movb
mov
push
lea
jmp
mov
pusha
jmp
lea
jl
pushf
jmp
pushl
mov
movb
lea
jmp
pushl
popl
pusha
pushf
pushf
pushf
lea
jmp
cmc
bsr
bsr
adc
mov
test
push
add
pusha
lea
jmp
cmc
pusha
imul
movb
jmp
mov
movsbw
xchg
xchg
push
mov
xchg
push
mov
call
mov
push
pushf
inc
inc
dec
pushf
ror
xchg
pop
pop
dec
push
bts
lea
or
or
sub
mov
pushf
not
lea
lea
pushf
lea
jmp
call
mov
push
mov
pushf
popl
jmp
mov
push
mov
call
push
pusha
mov
call
dec
movzbw
not
rcr
ror
pushf
bswap
lea
jo
dec
dec
shr
shr
mov
cmc
shld
not
cmp
sub
jmp
movb
pushf
pushf
mov
jmp
call
mov
pusha
movw
pusha
push
lea
jmp
pop
mov
jmp
movsbw
sar
neg
bts
mov
jmp
mov
pushf
push
mov
movb
pushf
pushf
call
add
cmc
cmp
shld
call
push
mov
push
lea
jmp
mov
mov
push
pushf
pushl
lea
jmp
pushl
popl
movl
pushf
pushf
lea
jmp
mov
push
movzbw
mov
pushf
pushf
popl
movzbl
not
mov
lea
pushl
popl
bswap
not
dec
movl
inc
jmp
push
jmp
push
mov
movsbw
pop
mov
pop
mov
bswap
pushf
pushf
popl
push
bswap
call
lea
cpuid
test
cmc
jmp
stc
push
push
call
mov
mov
push
lea
jmp
pushf
mov
movzbw
xchg
bswap
push
jmp
push
call
pusha
pushf
mov
push
pushf
jmp
pushl
lea
ja
test
shrd
not
xor
mov
shrd
shrd
movzbw
lea
rcr
adc
not
sub
xadd
btr
mov
daa
lea
mov
cmc
cmp
and
or
pusha
lea
rol
sub
jmp
bt
lahf
mov
cmc
test
xor
cmc
test
bt
jmp
lea
jo
pusha
dec
cmc
sub
test
pusha
cmp
cmc
xor
bt
pushf
cbtw
clc
cwtl
call
pushf
push
mov
lea
je
push
push
pusha
pushf
popl
mov
call
pusha
pusha
mov
jmp
pushf
jmp
rol
cmc
cmc
movb
add
call
xchg
mov
pushf
popl
pop
lea
pushl
popl
movsbl
not
inc
movl
bswap
movzbw
push
xchg
mov
pop
bswap
xchg
inc
dec
bts
btr
ror
not
not
xchg
dec
shld
lea
bsf
shl
sub
movsbw
bswap
bswap
mov
pusha
push
push
lea
jmp
dec
bswap
btr
jmp
mov
pushf
movw
pushf
popl
jmp
cmc
pushf
sub
pusha
push
push
lea
jne
pusha
cmp
test
test
xor
push
push
movl
pushf
xchg
call
pushf
mov
movb
push
lea
jmp
call
call
sar
push
push
inc
mov
jo
push
push
and
push
push
pusha
cmp
test
sar
push
push
shlb
push
inc
mov
adc
push
and
push
push
rclb
push
mov
push
push
add
push
push
xor
push
push
lock
and
push
push
pusha
outsl
push
push
xor
push
add
push
push
sar
push
push
and
push
push
loopne
push
push
sarb
push
push
lock
lock
push
inc
mov
adc
push
push
jo
push
push
adcb
push
nop
loopne
push
mov
push
push
inc
mov
xor
push
and
push
push
xor
push
mov
fs
push
pusha
ret
push
push
inc
mov
lock
and
push
push
andb
loopne
push
pusha
xor
add
push
push
mov
push
push
and
push
push
loopne
push
push
rcrb
push
push
mov
mov
xor
push
push
and
push
push
add
push
push
jo
push
push
pusha
cmp
in
push
push
inc
mov
and
push
push
and
push
push
andb
xor
push
push
jo
push
push
mov
mov
inc
adc
mov
push
push
push
and
push
rclb
push
mov
push
push
push
inc
mov
and
push
and
push
push
xor
push
adc
push
rcrb
inc
mov
jo
push
push
and
push
push
lock
push
mov
push
push
add
push
push
inc
mov
mov
mov
or
push
mov
pop
push
push
adc
push
xor
push
push
inc
mov
andb
and
push
push
rcrb
xor
push
push
add
push
push
add
push
xor
push
inc
mov
push
loopne
push
push
push
pop
push
push
pusha
cmp
cmp
pusha
xor
mov
push
push
rcrb
rcrb
push
push
mov
lods
push
push
sar
push
push
andb
rclb
push
pusha
cmp
push
push
push
fcoms
nop
loopne
push
adc
push
lock
push
mov
add
rcrb
loopne
push
push
andb
jo
push
push
mov
jnp
push
add
push
push
mov
push
push
pusha
outsl
push
push
mov
push
push
add
push
push
xor
push
add
push
push
lock
push
add
push
and
push
push
jo
push
push
lock
push
push
mov
push
push
jo
push
push
lock
rcrb
push
push
inc
mov
push
nop
jmp
push
pusha
xor
pusha
ret
push
push
jo
push
push
and
push
nop
loopne
push
xor
push
pusha
outsl
push
push
xor
push
push
add
push
and
push
push
xor
push
push
mov
push
push
add
push
push
adc
push
xor
push
push
xor
push
inc
mov
push
lock
push
rcrb
inc
test
nop
loopne
push
jo
push
push
adc
push
shrb
push
pusha
xor
andb
nop
jmp
push
shlb
push
loopne
push
push
mov
push
push
loopne
push
push
xor
push
push
xor
push
push
pusha
cmp
and
and
push
push
inc
test
jo
push
push
inc
adc
gs
push
mov
push
push
pusha
cmp
in
push
push
mov
push
push
xor
push
jo
push
push
adc
push
inc
test
lock
push
add
push
push
adc
push
add
push
xor
push
push
pusha
ret
push
push
xor
push
push
xor
push
loopne
push
push
loopne
push
push
inc
test
adc
push
push
adc
push
inc
adc
fcoms
mov
push
push
add
push
push
add
push
push
xor
push
push
inc
mov
and
push
push
nop
jmp
push
push
pop
push
push
jo
push
push
call
pop
xchg
movzbw
mov
pop
dec
pop
pusha
btc
stc
ror
dec
inc
dec
shrd
xchg
lea
shl
movzbw
shl
sub
mov
pushf
jmp
pusha
push
mov
pushf
mov
mov
xchg
movzbl
movsbw
mov
movzbl
xchg
movsbl
jmp
setne
mov
pushf
mov
pusha
mov
push
push
lea
jmp
bswap
pop
pushf
push
pusha
pushf
lea
jmp
pushl
popl
movl
lea
jmp
jmp
push
pushl
mov
pushf
jmp
sar
shr
btr
mov
test
test
test
stc
add
pusha
lea
jmp
mov
jmp
movzbl
movsbl
mov
mov
mov
call
push
pushl
popl
movw
pusha
push
mov
lea
jmp
push
mov
pushf
movb
pushl
ret
pusha
lea
mov
push
mov
movw
push
mov
lea
jmp
sub
jmp
pushl
push
dec
cmp
pushf
mov
sub
clc
call
stc
mov
jmp
add
mov
call
jmp
mov
clc
add
movb
lea
jmp
mov
jmp
pusha
push
movw
lea
jmp
cmp
bt
cmc
not
test
not
bt
sub
cmp
pushf
jmp
not
lea
sub
sar
mov
adc
sub
add
xchg
and
mov
stc
add
pushf
dec
inc
bt
movzbw
rcl
rol
shr
stc
neg
not
add
shld
btr
mov
movzbl
test
or
pusha
mov
cmc
pushl
sub
jmp
call
add
test
clc
bt
push
shrd
jmp
mov
pushf
clc
call
jmp
pushl
mov
push
pushl
mov
jmp
push
not
movsbw
push
push
mov
bswap
pushf
movsbw
mov
pushl
not
movzbw
not
jmp
stc
jmp
pushf
call
xor
mov
pushf
clc
mov
and
jmp
mov
ror
jmp
sub
call
pushf
popl
push
pusha
jmp
xor
mov
bswap
mov
inc
add
shl
mov
cmc
push
pushf
stc
add
push
pushf
pushf
push
mov
mov
push
lea
jmp
mov
push
mov
mov
pushf
pop
mov
pushf
movsbw
call
inc
dec
neg
bts
sub
movsbw
test
shl
mov
pushf
stc
jmp
aad
rcl
or
mov
rol
mov
pusha
push
call
mov
bswap
lea
pushf
popl
pushl
pushl
bswap
lea
pushl
popl
pushf
dec
not
dec
movl
bswap
mov
movsbw
movzbw
dec
rcl
ror
movzbl
xchg
lea
dec
adc
btc
shl
lea
bsr
sbb
sub
sub
movsbl
movsbw
not
mov
pusha
pusha
lea
jmp
mov
dec
mov
dec
movsbw
bt
rol
pop
ror
movzbw
call
pusha
pushl
call
test
pusha
xor
mov
stc
inc
dec
sub
mov
bt
sub
clc
shl
push
jmp
call
pushl
popl
movsbw
movl
bswap
call
btr
das
mov
cmc
cmp
xchg
mov
inc
sbb
mov
neg
mov
bt
clc
call
dec
pushf
add
call
lea
jl
rol
push
add
pushf
mov
pusha
push
pushl
ret
shl
not
bt
not
mov
pushf
call
mov
movb
movb
mov
mov
lea
jmp
dec
sbb
btc
lea
rol
sub
push
pusha
pusha
lea
push
pushf
mov
pushf
lea
jmp
mov
pushf
mov
push
movw
push
lea
jmp
dec
ror
stc
stc
ror
movzbl
dec
jmp
jmp
pusha
call
test
cwtl
cmp
sub
push
call
push
mov
jmp
push
pushf
popl
call
jmp
cmc
or
and
lea
mov
cmc
push
push
sub
pusha
call
mov
pushf
mov
pushf
call
pushf
pushf
lea
jne
push
push
sub
pushf
push
xchg
mov
push
movl
pushf
mov
pushf
mov
pushl
push
pushl
ret
push
bswap
mov
call
call
stc
rol
push
bswap
dec
inc
lea
and
movsbw
add
inc
pop
mov
push
pusha
clc
sub
call
jmp
jmp
inc
jmp
xchg
mov
pop
mov
movsbw
mov
movsbw
pusha
lea
mov
movw
pushl
ret
lea
pushl
push
pusha
push
lea
jmp
mov
pushf
lea
jmp
mov
call
mov
dec
stc
clc
bt
ror
test
call
push
jmp
rol
clc
add
jmp
shr
jmp
pushf
popl
jmp
sbb
shl
daa
mov
and
sets
rol
cmp
mov
cmp
jmp
movb
mov
pusha
push
pushf
lea
jmp
jmp
rep
std
btc
mov
rcl
jmp
pushf
push
bt
add
call
sar
bts
lea
btc
sub
sub
mov
bswap
movsbw
mov
pusha
pushl
pusha
mov
lea
jmp
xchg
jmp
ror
push
call
call
pushf
popl
inc
pushl
popl
mov
inc
call
mov
pusha
pushf
pushl
ret
jmp
pushl
popl
bt
cmc
bt
cmp
add
cld
jmp
mov
mov
xchg
mov
pop
mov
xchg
pop
push
mov
jmp
call
pushl
popl
push
movb
mov
lea
jmp
das
bsr
or
mov
pusha
clc
pusha
call
push
jmp
push
call
lea
jne
bswap
jmp
xchg
movsbw
bswap
movzbw
bswap
xchg
not
mov
xchg
jmp
shr
jmp
mov
xchg
bswap
push
movsbl
jmp
dec
push
lea
sar
sub
call
test
call
pushf
lea
cwtl
mov
movzbw
bswap
lahf
mov
mov
call
push
pusha
mov
pushf
jmp
call
test
cmp
pushl
call
movsbl
movzbl
mov
lea
jmp
pusha
mov
movsbl
mov
push
pushf
popl
pusha
inc
pushf
call
call
jmp
rcl
push
mov
mov
shl
add
pushf
mov
call
mov
sub
movb
mov
mov
mov
mov
mov
lea
jmp
lahf
not
jmp
dec
sar
neg
lea
neg
not
sbb
sub
lea
mov
mov
bswap
mov
pusha
push
push
push
lea
jmp
lea
pushf
lea
movb
push
push
lea
jmp
mov
mov
mov
pushf
pushf
popl
pushf
pushl
popl
pushf
push
lea
jmp
mov
pushf
movzbw
dec
bts
bt
btc
xchg
ror
pushf
dec
shl
movzbw
lea
inc
sub
push
mov
pushf
lea
push
push
pushf
pushf
lea
jmp
jmp
mov
push
jmp
dec
jmp
stc
bt
add
pushf
mov
mov
mov
lea
jmp
bswap
xchg
mov
mov
movw
mov
jmp
pushf
pusha
mov
push
pushf
movb
movb
mov
movw
bswap
mov
bswap
lea
jno
push
pusha
pushf
push
mov
jmp
pushf
movw
jmp
mov
push
pushl
movb
mov
pusha
mov
push
lea
jmp
sub
pusha
pushl
push
dec
call
call
aad
pusha
cbtw
rol
mov
neg
setb
sbb
mov
bt
push
stc
sub
cmp
bt
jmp
movzbl
xchg
xchg
pushf
mov
push
mov
mov
not
jmp
cmc
xor
bt
pushl
pusha
ror
pushf
pushf
pushl
jmp
call
mov
pushf
lea
jmp
bt
bt
bt
add
jmp
pusha
pushf
xchg
pushf
pusha
mov
xchg
movl
lea
mov
push
lea
pushf
popl
xchg
pushl
popl
movw
lea
bswap
movl
jmp
lea
jne
rcl
bts
bsr
bt
xorb
pusha
pushf
setl
pushf
mov
movb
push
pushf
mov
lea
jmp
add
jmp
clc
xorb
bswap
jmp
pushf
pushl
popl
pushf
movb
pushl
pushf
lea
jmp
call
not
jmp
bt
and
call
movw
sub
test
pushf
pushf
movb
shl
push
call
shl
mov
setne
mov
jmp
bt
shl
pusha
mov
bt
cmc
clc
jmp
mov
pop
pusha
movzbw
dec
movzbl
bt
ror
inc
dec
dec
jmp
mov
call
jmp
mov
call
sub
cmc
call
mov
movl
push
mov
lea
jmp
pop
pushl
popl
mov
inc
movzbw
pushf
movl
pushf
bswap
mov
dec
dec
xchg
bswap
bt
ror
push
call
jmp
pushf
xor
pushl
bt
add
call
pusha
lea
pusha
movb
lea
jmp
mov
pushf
pushf
pushf
mov
lea
jmp
cwtl
cmc
push
pushf
jmp
cmp
stc
add
stc
bt
xor
pusha
pusha
cmc
pushf
ror
jmp
pop
xchg
mov
xchg
pushf
popl
inc
pop
pop
pushl
popl
jmp
pushl
popl
movw
lea
jmp
