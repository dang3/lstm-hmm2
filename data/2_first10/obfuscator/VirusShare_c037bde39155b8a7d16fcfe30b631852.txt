es
lds
rol
aas
sar
ret
mov
popa
sub
pop
out
xchg
stos
addr16
js
adc
add
popa
jl
ret
pop
ljmp
fstps
faddl
roll
repnz
cmp
addr16
test
sti
sub
cmp
and
jae
stos
sbb
push
mov
push
mov
addr16
jo
fucom
test
sbb
rcll
add
sub
xchg
dec
jmp
aaa
mov
inc
inc
insb
std
ja
repz
pop
sub
xchg
insb
mov
pop
sbb
jmp
repz
pop
scas
bound
shll
jmp
sbb
xchg
xchg
cmp
inc
mov
xor
dec
in
rclb
cltd
jmp
and
imul
js
push
hlt
imul
nop
loopne
ss
aas
sub
pushf
lea
call
call
add
dec
data16
je
arpl
add
je
gs
je
jo
imul
lea
push
call
add
dec
insl
popa
addr16
imul
insb
popa
arpl
add
inc
outsl
inc
gs
insb
popa
jae
dec
bound
arpl
in
pop
adc
daa
mov
lods
xlat
sbb
fnsave
xchg
or
mov
and
ds
xor
pushaw
dec
lods
aas
clc
mov
pushf
pop
leave
cmp
int3
push
sub
aaa
pop
sub
sbb
arpl
ret
add
pop
fwait
cwtl
cltd
xchg
daa
pop
dec
jp
popa
mov
push
xchg
arpl
cmc
jns
cmc
mov
dec
test
bound
push
fadds
out
mov
xchg
inc
cmp
popa
adc
cmp
jecxz
pop
mov
mov
add
pop
adc
pop
adc
push
movsb
out
pusha
cs
dec
lock
push
jp
push
jo
addr16
fnstsw
add
sbb
jl
es
orl
bndldx
xlat
mov
add
adc
sbb
fcmovne
sbb
adc
insb
pop
rclb
cli
orl
pop
outsl
adc
or
mov
test
add
pop
stos
orb
sub
dec
iret
imul
adc
mov
shl
push
push
js
and
mov
cwtl
push
addb
fisttpll
push
xchg
dec
push
push
xor
dec
testl
icebp
dec
cmp
rcl
loope
faddl
inc
fstl
outsl
adc
ss
dec
leave
xchg
inc
xchg
insl
out
sti
scas
mov
js
inc
iret
mov
or
imul
dec
insl
popa
addr16
imul
ja
add
push
popa
imul
add
pushf
pushl
pushf
pushl
ret
add
inc
outsl
dec
outsb
je
jb
gs
jb
popa
je
pop
outsl
outsb
gs
popa
outsb
popa
addr16
add
inc
gs
imul
pop
std
std
mov
xchg
imul
jae
test
arpl
adc
xor
xor
stc
jg
int
ja
in
push
imul
pop
roll
frstor
adc
test
sbb
pushf
adc
mov
xor
xchg
push
data16
hlt
adc
xchg
pop
mov
push
enter
aad
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
popa
addr16
imul
popa
je
add
in
push
adc
jmp
add
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
scas
sbb
add
push
imul
popa
addr16
jb
jo
movl
pushf
movb
pushl
lea
jmp
jmp
add
inc
gs
je
arpl
bound
arpl
add
stc
jle
movb
not
pusha
mov
pop
lea
pusha
movl
pushf
mov
jmp
fs
cs
sub
mov
push
mov
int
jmp
ds
ss
orb
bound
and
mov
faddl
dec
sbb
mov
scas
xor
push
arpl
cmp
push
sub
xchg
and
xor
mov
adc
pusha
sub
daa
test
add
mov
inc
movsb
test
shll
add
xchg
addr16
aam
pop
mov
cmp
and
push
cmp
insl
test
sbb
sub
es
pop
or
icebp
lds
fldcw
push
popa
jno
into
push
int
ret
jmp
mov
add
add
fwait
ret
mov
mov
sub
cmp
call
call
add
push
gs
outsl
jbe
push
jb
jo
add
add
outsl
bound
inc
gs
gs
inc
je
insl
add
test
adc
lea
push
lea
jmp
add
inc
outsb
fs
popa
imul
insl
popa
addr16
imul
inc
jb
add
add
test
int
add
shl
mov
aad
rolb
pop
cld
aaa
bswap
mov
test
shl
shr
btr
mov
pushf
pushl
or
pusha
jmp
add
inc
jb
popa
je
push
outsl
insb
imul
movl
pushl
push
lea
jae
jmp
add
inc
gs
imul
js
push
add
lods
jmp
ret
pushf
pusha
cmpb
pusha
call
call
add
inc
gs
bound
arpl
add
inc
gs
imul
addr16
js
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
dec
outsb
push
arpl
add
gs
outsl
add
add
insb
arpl
insb
gs
add
push
cmp
push
cmc
cmp
and
test
pushl
add
mov
movl
pushf
lea
jmp
add
inc
insb
outsl
bound
push
imul
pushf
call
jmp
add
dec
outsl
popa
fs
outsb
jne
add
ret
lret
mov
rolb
das
jb
pusha
lea
ja
cmc
add
pushf
movb
push
or
movw
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
add
sub
movzwl
jmp
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
xchg
lea
movl
cwtl
pop
movzbw
lahf
lea
push
call
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
ror
movsbl
pushf
mov
lea
stc
setle
mov
clc
cmc
mov
cmc
rol
pusha
pusha
call
call
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
add
fs
ja
imul
cmpsl
aas
adc
pushl
popl
mov
pushl
ret
push
movsbl
mov
lea
lea
jmp
pushf
call
add
push
popa
je
insb
je
add
dec
outsl
popa
fs
imul
add
jo
inc
outsb
push
inc
imul
add
add
movw
stc
bt
cmp
jmp
fisubs
adc
repz
mov
imull
xchg
iret
daa
cmpb
loop
mov
aaa
pop
push
es
dec
cmpsb
lods
jle
mov
jecxz
pop
and
sbb
dec
sbb
push
rclb
inc
push
and
repnz
mov
sbb
lret
clc
imul
loopne
lret
or
jecxz
xor
mov
adc
add
popa
addr16
imul
addr16
gs
jbe
add
scas
push
lea
jne
neg
movsbw
add
shr
mov
neg
call
cmp
pusha
lea
jb
call
rep
pop
pop
lea
mov
setge
movsbw
xchg
lods
not
ror
shrd
add
or
dec
neg
or
btr
sub
sbb
not
xadd
not
shl
rcl
setge
sub
xchg
movsbw
mov
push
call
lea
jae
bt
cmc
cmp
call
push
movw
pusha
or
call
cmpsb
cmp
adc
mov
icebp
inc
dec
fdivs
push
cwtl
lret
fmulp
dec
cmp
ficompl
lcall
dec
and
insb
hlt
mov
and
and
cld
jg
inc
pop
sbb
nop
push
lods
push
mov
push
mov
xchg
fistps
movsb
jb
test
jl
lods
inc
mov
ljmp
and
adc
ss
mov
lods
subb
cwtl
cmp
inc
test
test
mov
jl
and
mov
fs
push
icebp
lea
loop
jle
push
mov
pop
pop
repz
std
lods
cwtl
inc
aad
insl
fwait
shufps
mov
ds
push
jo
jle
sub
xchg
sbb
pop
add
push
ficomps
sbb
inc
clc
test
loope
iret
sbb
mov
mov
cmp
lock
int3
mov
outsb
push
inc
mov
jp
insb
call
clc
or
push
mov
jo
std
or
pop
sub
test
lea
stc
in
dec
sub
cli
outsl
inc
cmp
add
jbe
icebp
add
repz
cmc
lcall
pop
mov
sub
cld
insb
jne
dec
push
ljmp
test
and
jge
je
jo
xlat
imul
add
add
add
jp
outsl
push
gs
jne
arpl
add
push
gs
imul
jae
add
inc
gs
inc
dec
jb
inc
js
add
push
push
inc
push
je
jb
jne
add
push
pushl
ret
add
push
gs
outsb
fs
inc
imul
add
add
inc
and
inc
push
movl
pushl
pushf
jmp
add
push
popa
gs
jb
popa
jns
jb
popa
je
add
lea
je
not
pushf
pop
push
lea
call
add
inc
gs
jb
insl
gs
jb
arpl
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
std
adc
ss
out
insb
sub
jbe
ljmp
imul
bnd
jns
push
inc
mov
jle
lcall
inc
fs
ja
cwtl
and
adc
mov
out
dec
rol
imul
jae
pop
xor
or
das
ljmp
jecxz
ljmp
mov
lea
push
and
inc
sbb
ljmp
xchg
adc
repz
hlt
dec
data16
add
fwait
cmp
into
repz
pushf
mov
out
out
gs
cmp
cltd
leave
imul
xchg
sub
xor
mov
sub
cmpsl
pop
lahf
mov
outsl
ja
gs
xchg
fstpt
mov
cli
adc
in
jb
add
sbbl
mov
stos
loopne
jo
in
jecxz
xchg
fcompl
shl
in
mov
cwtl
dec
xchg
and
mov
adc
pop
mov
in
bound
pushf
out
xchg
fwait
lock
sbb
insb
dec
add
dec
fwait
xor
stc
xor
das
add
inc
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
imul
insb
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
inc
push
add
add
imul
movl
pushl
pushl
popl
pushf
mov
pushl
ret
cmp
pushl
popl
cmp
pushf
cmp
call
movb
lea
call
add
rcr
and
mov
cmc
pushf
shl
jmp
movl
lea
pop
pop
push
lea
jmp
call
call
mov
pusha
push
pushl
ret
or
push
lea
jne
lea
push
mov
pusha
or
push
call
mov
not
movzbl
not
pop
pusha
pusha
pushl
ret
jmp
jmp
add
inc
outsl
insl
jo
jb
push
je
imul
push
push
outsb
outsl
ja
call
pushf
jmp
add
inc
gs
popa
jb
outsb
je
adc
jmp
call
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
popa
add
rorb
add
dec
mov
add
mov
and
enter
jecxz
add
add
je
outsb
jne
pusha
not
setg
pusha
lea
call
add
push
imul
jb
add
add
jae
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
je
insb
popa
jae
dec
outsb
outsw
push
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
mov
test
sub
or
neg
not
bsf
and
pushf
pop
mov
stc
add
jno
shl
cmc
pushf
mov
add
pusha
call
add
dec
outsb
data16
popa
je
push
arpl
mov
cmp
popa
and
lods
loopne
outsb
es
dec
addr16
fisubs
jnp
pop
sub
mov
lea
sbb
mov
aas
pop
into
xchg
dec
sub
mov
jnp
jo
fsincos
outsl
repnz
sbb
cmp
pop
repz
out
jmp
aas
jns
jmp
scas
add
dec
insl
popa
addr16
imul
addr16
push
insb
outsl
arpl
sub
jmp
add
dec
jae
push
call
call
call
stc
ror
jmp
cmp
es
adc
cmp
adc
ret
dec
movhps
insb
fiaddl
jns
stos
dec
psubusw
dec
js
xor
cmp
pop
sub
out
xor
subb
dec
test
or
leave
shrb
aad
or
loopne
mov
push
push
hlt
test
jg
add
dec
sub
clc
repz
cmp
mov
fldcw
cmp
movsb
mov
xor
insl
pop
in
std
ljmp
lret
push
addr16
sub
sub
lds
jge
sbb
xor
sarb
fisttps
js
gs
xchg
ds
or
adc
or
push
push
add
push
ds
in
mov
pushf
add
inc
gs
imul
jae
pusha
lea
jb
and
bt
mov
ror
shl
inc
ror
not
stc
cmp
mov
adc
xchg
daa
add
mov
push
pop
mov
setb
mov
jmp
call
add
push
gs
imul
popa
addr16
jb
jo
pushf
cmc
cmp
cmp
push
call
scas
push
stos
clc
adc
cld
aas
movsl
cmpsl
jge
inc
xor
jo,pn
jle
and
sub
loop
es
int3
ds
mov
push
dec
pusha
and
cmp
fimull
call
adc
xor
adc
adc
sub
sbb
imul
test
cmp
movsb
cwtl
jle
fiadds
xchg
test
pop
ljmp
test
loopne
clc
mov
xor
jo
inc
jmp
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
pusha
lea
call
cmc
pusha
stc
add
cmc
cmc
cmpl
pusha
pushf
lea
jne
lahf
movzbw
pop
lahf
not
pop
mov
sets
push
movsbw
pushf
pop
lea
call
lea
call
call
add
inc
gs
imul
add
dec
outsb
je
jb
gs
gs
jo
imul
push
gs
arpl
add
popa
addr16
imul
addr16
outsl
jbe
add
int
sbb
add
inc
push
outsb
jne
je
insl
add
jmp
add
addr16
outsl
jae
outsb
popa
insl
add
shr
cmp
add
je
popa
jo
outsl
fs
test
push
adc
call
pusha
movzbw
setb
movsbw
lea
pushf
lea
call
jmp
add
push
push
jb
outsl
jb
pushf
pusha
mov
pushf
lea
jmp
add
inc
outsl
dec
outsb
imul
add
push
mov
adc
add
pop
pop
pop
ss
les
lret
cs
jl
xchg
pop
push
addr16
and
out
loope
gs
mov
dec
dec
cwtl
dec
out
mov
jnp
and
in
inc
aad
jns
cmovnp
inc
adc
mov
out
pop
stc
shll
movb
adc
sub
lret
cmpl
pop
aad
xchg
push
inc
movsl
in
push
pushf
adc
adc
in
cmp
jp
fimuls
push
push
fidivrl
lods
lcall
gs
jns
je
insl
dec
gs
imul
sbb
or
pusha
pushf
lea
je
sets
bswap
lea
mov
movzwl
call
add
push
outsb
jb
imul
popa
jae
push
add
add
je
gs
popa
addr16
outsl
jae
lea
jae
xor
xor
mov
sbb
inc
mov
xchg
mov
rcl
adc
shr
mov
test
push
sub
cmp
cmc
clc
repnz
pushf
pushf
pusha
jmp
mov
adc
test
cmc
sub
bt
pushf
cmp
bt
shl
test
stc
stc
cmc
mov
cmp
stc
test
cmp
mov
pushf
jmp
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
add
add
enter
int
jp
btr
sub
mov
bts
xor
sub
rcr
push
jmp
add
push
gs
insb
outsl
jae
dec
gs
add
inc
gs
jb
jns
outsb
jne
add
inc
jb
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
repnz
add
inc
jb
popa
je
push
arpl
outsb
add
popf
pop
adc
lea
jae
pushf
seta
jmp
or
jnp
adc
xchg
jne
or
jnp
cmp
xor
loop
arpl
pusha
jns
loope
jle
imul
mov
inc
scas
lods
mov
mov
adc
xor
dec
dec
jae
xor
xor
cmp
addr16
xchg
jno
aam
mov
enter
clc
pop
sbb
loopne
and
aad
add
loope
jmp
ret
inc
mov
outsb
adc
mov
xor
and
ret
pop
adc
fwait
push
add
jecxz
fdivl
loope
es
mov
incl
rol
aaa
push
neg
movzbw
mov
test
sub
push
call
lea
jle
jb
bt
pusha
cmp
call
movl
pusha
pushl
pushf
push
lea
jmp
add
inc
outsb
popa
bound
imul
add
je
imul
add
pushf
lea
je
test
add
push
pushl
lea
jmp
or
pushf
lea
je
pushf
mov
cwtl
lea
pushf
push
pusha
push
mov
push
lahf
setle
lahf
pushl
popl
sete
pop
pushf
lahf
mov
not
movzbw
movl
pusha
jmp
add
push
gs
imul
outsb
add
insb
aam
add
mov
add
jmp
jmp
add
dec
jae
arpl
jo
jns
cmc
or
call
add
push
lea
ja
pushf
lea
je
pusha
test
add
mov
lea
jmp
cmp
jmp
movl
pusha
movl
push
lea
jmp
push
lea
jae
clc
call
movl
jmp
add
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
lea
je
test
cmc
cmc
add
pushf
cmp
push
push
mov
lea
jb
jmp
add
inc
push
dec
gs
inc
add
ljmp
cwtl
jbe
and
or
pop
and
dec
les
fldenv
jnp
shl
aaa
divps
cmpsl
inc
fnstenv
arpl
fcmovne
cmc
lcall
mov
cld
mov
sbb
jecxz
cld
bound
inc
bound
std
mov
xor
movsb
nop
addr16
add
cs
or
xchg
in
cmp
push
fcoms
mov
lods
popf
lds
subl
cmc
dec
xor
xor
enter
jmp
xchg
add
dec
jae
arpl
insb
gs
je
jb
xchg
call
movb
dec
cmc
neg
stc
clc
bt
test
sub
clc
jmp
pushf
pushf
mov
movzbl
cwtl
pushl
popl
lahf
push
movsbw
mov
mov
movsbw
cwtl
lahf
push
movl
lahf
lea
push
movl
jmp
clc
add
adc
xchg
les
push
enter
cld
into
movsb
xor
add
fidivrl
fidivl
icebp
inc
sbbb
int
inc
ret
inc
cmp
fwait
js
imul
icebp
andnps
mov
xchg
xor
and
into
scas
iret
sti
lock
std
fcomps
mov
xchg
inc
add
je
iret
mov
inc
cmp
jne
cmp
shrb
ds
jge
aam
in
push
mov
sub
je
xchg
mov
inc
dec
in
inc
xor
int
inc
das
fisubl
or
imul
adc
mov
dec
sbb
hlt
cmpb
mov
scas
xchg
and
adc
and
pusha
mov
rolb
cld
scas
out
cmc
lds
jecxz
sahf
daa
gs
lret
cs
outsb
bound
les
push
lods
subl
pop
sbb
xchg
and
fildl
dec
iret
or
rep
lcall
pop
in
push
fsubl
fcoml
mov
sub
test
in
iret
daa
add
or
add
cld
adc
out
inc
and
mov
mov
mov
jne
inc
push
pop
pop
lds
fwait
mov
add
imul
jb
add
push
gs
gs
popa
insb
jne
inc
js
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
dec
out
adc
mov
scas
or
repnz
sbb
xor
test
movsl
pop
mov
pop
lahf
lcall
adc
fcmovbe
or
pop
jmp
int
lret
adc
dec
fmulp
and
xchg
daa
mov
test
sarl
xorl
xchg
dec
pusha
adc
and
cmp
mov
addr16
les
mov
sbb
sub
clc
pop
push
subb
xlat
adc
stos
stos
pop
pop
xlat
testb
pop
sahf
mov
iret
lods
cltd
pop
mov
test
xchg
iret
clc
inc
gs
fstl
mov
ret
dec
pop
inc
jnp
call
jge
cmc
mov
xorl
dec
gs
popa
addr16
outsl
js
add
add
ja
arpl
inc
js
sub
sub
mov
shr
sub
call
stc
pop
ret
add
push
popa
imul
jo
imul
in
adc
dec
push
jmp
add
push
insb
pusha
mov
sub
cli
ss
adc
scas
pushf
repnz
pushf
dec
jecxz
cmpb
cwtl
lods
pop
or
ret
jbe
jno
pop
pop
cmp
xchg
fildll
movsl
sbb
cli
push
pop
mov
inc
pop
es
ljmp
or
push
ret
jge
jns
fwait
jmp
insb
pusha
mov
sbb
cli
sbb
cmp
in
sbb
mov
in
inc
ds
mov
stos
jge
ljmp
mov
mov
jnp
in
push
push
sbb
mov
cwtl
pop
inc
aad
sub
outsl
mov
cmp
pop
push
cltd
into
test
pop
movsl
pop
mov
lret
out
out
cmp
mov
xchg
pop
add
loop
pushf
fdivs
loope
sbb
enter
sahf
fs
adc
test
test
cwtl
mov
movsl
push
and
fwait
lea
mov
sbb
dec
pop
lea
bswap
mov
call
cmp
pushl
mov
pushf
push
lea
je
cmc
pushf
pushf
cmp
jmp
aam
sub
adc
ds
loopne
mov
mov
jmp
mov
loope
push
jne
pop
ret
lea
xchg
out
and
imul
out
lcall
pushf
leave
movsb
or
dec
sbb
sub
add
mov
mov
sub
ljmp
fisubs
jb
and
arpl
aas
and
dec
cmp
imull
xor
pop
cmp
inc
and
repz
dec
cmp
xchg
popa
pushl
not
call
add
push
gs
outsb
jne
push
popa
insb
jne
inc
add
xor
adc
jmp
add
inc
imul
dec
gs
popa
addr16
add
inc
and
cmp
sub
inc
and
or
push
pusha
mov
lea
jmp
clc
pusha
add
cmp
push
cmp
pushf
call
call
add
push
gs
popa
jo
jne
add
add
popa
jb
outsl
ja
jb
jne
inc
add
xchg
push
call
pusha
lea
jb
neg
shr
movzbw
mov
bt
pusha
sub
movb
pushf
pushf
mov
call
outsb
gs
jo
xor
cs
insb
add
fs
je
pushf
pusha
pushf
lea
jmp
jmp
fs
mov
jne
jno
and
mov
arpl
sub
fnstsw
and
imul
add
iret
cmp
or
pminub
add
insl
test
shll
push
pop
in
sahf
pusha
sbb
ret
pop
lahf
aam
lcall
dec
out
gs
in
and
shl
add
push
push
bswap
nop
pop
mov
dec
xchg
lahf
out
push
mov
jmp
lods
xchg
sub
outsb
add
sbb
out
cwtl
loop
mov
or
repz
sub
stos
mov
inc
hlt
mov
fwait
mov
ja
add
and
push
icebp
cwtl
scas
pop
inc
inc
mov
cmpsl
loope
mov
jle
sub
jecxz
adc
push
sub
aaa
push
lret
cmc
sub
iret
out
repz
inc
and
push
ret
mov
fcoms
inc
xchg
jle
cmc
testl
insb
mov
adc
jne
push
ret
inc
inc
mov
pop
inc
sub
ljmp
sub
dec
lcall
xchg
in
cltd
jge
sarb
sub
and
sub
addl
leave
cli
fstpl
fistl
fimuls
and
and
fwait
cmc
mov
xchg
adc
inc
lods
add
dec
jmp
adc
sub
push
pop
and
fwait
xchg
mov
mov
cld
push
cmpsb
stos
mov
fcoml
mov
lret
jnp
push
xchg
insl
stc
loop
mov
aas
mov
sub
fidivrl
pop
scas
lods
repnz
and
mov
insl
fmull
xchg
vmptrst
popf
inc
sti
mov
cmp
loope
push
mov
repnz
dec
ljmp
cld
cmp
scas
arpl
xchg
mov
ja
mov
out
imulb
and
jae
outsb
xchg
mov
xchg
out
pop
mov
gs
cmpsb
loopne
je
in
mov
jae
sbb
enter
test
stc
out
cmp
arpl
xor
jb
xchg
cmpsl
mov
lds
adc
push
mov
jns
pusha
add
mov
xchg
shrl
lea
inc
stos
mov
jmp
xchg
mov
repz
inc
dec
cmpsb
div
mov
rorb
pop
cmpsb
pop
shlb
les
icebp
mov
mov
movsl
andl
out
mov
jae
or
in
dec
in
fnstenv
adc
test
mov
and
xor
cli
xor
push
aaa
repnz
int3
add
push
and
xchg
push
loop
out
mov
notl
inc
push
out
jle
mov
sub
out
outsl
xor
jbe
pop
mov
xor
inc
insb
and
clc
sub
and
xchg
dec
cs
scas
lods
outsb
adc
es
mov
cwtl
scas
sti
cmp
fcomi
rorl
es
bound
and
hlt
aad
enter
sbb
xor
fimuls
paddw
fs
add
iret
dec
push
repz
test
testb
sbb
mov
mulb
cs
cmp
xchg
or
mov
aam
push
arpl
int3
pushf
and
aas
push
or
ss
shll
outsl
mov
test
movsl
aam
shl
xchg
popf
cwtl
mov
jnp
push
inc
stos
sub
hlt
fsubrp
or
stc
inc
push
cltd
jbe
sbb
jb
aas
sbb
sbb
sbb
jge
ljmp
into
jo
mov
rcll
shrl
adc
mov
add
jl
inc
aad
sub
divl
push
dec
out
lea
idivb
scas
fstpt
outsl
incb
adc
hlt
mov
mov
and
cwtl
mov
adc
out
xor
cmp
aas
inc
rorl
mov
and
xor
sti
lods
lods
ljmp
cmpsl
xor
push
xor
popf
cmp
in
data16
push
shlb
insb
push
mov
es
dec
dec
xor
and
repnz
mov
clc
mov
cmpsb
jns
ljmp
dec
xchg
enter
aaa
pusha
loop
xchg
adc
test
int
mov
mov
scas
sbb
dec
ret
aas
leave
aas
hlt
mov
ficoms
ds
movsb
pop
ja
dec
mov
stc
pop
lret
jns
ss
call
mov
ret
repnz
dec
cs
andl
pop
dec
lret
cmpsl
hlt
jmp
je
lea
ret
arpl
xchg
cmp
mov
aaa
add
pop
gs
sub
out
aas
pop
ret
bound
out
out
jns
test
cs
push
jo
jmp
adc
cli
cmpsb
cmpl
dec
mov
sahf
adc
mov
mov
mov
jns
in
sub
mov
mov
jns
fwait
inc
out
loop
cmc
insb
ffree
pop
roll
shll
repnz
mov
movsl
or
cmp
or
ja
je
sbb
mov
sti
in
inc
xchg
lea
or
push
in
pop
fsubs
jbe
push
pop
data16
dec
mov
jns
pusha
sbb
ret
jns
sub
enter
adc
pushf
push
cmp
or
scas
push
nop
lea
jnp
aam
mov
or
lds
movsb
js
xchg
movsb
imul
push
pop
pop
mov
int
lret
sbbl
outsl
frstpm(287
stc
imul
stos
stc
hlt
push
stc
in
mov
arpl
mov
sub
das
repz
lahf
push
arpl
popf
cli
inc
loop
jl
push
mov
mov
movsb
mov
push
push
shlb
pop
dec
sbb
shlb
xor
rorb
cmp
lahf
or
adc
xor
inc
sbb
push
popa
xor
inc
cmpsl
inc
jns
aam
cmp
add
call
not
imul
sub
push
sbb
cmp
aad
xchg
xchg
xor
and
mov
push
mov
rcl
sub
repz
push
fimuls
das
je
sbb
imul
push
outsl
mov
pushf
push
scas
inc
ret
mov
push
aaa
jns
jp
out
ret
adcb
pop
mov
insb
rol
mov
xchg
lods
mov
popf
add
mov
and
in
insl
daa
or
pusha
lahf
dec
mov
test
cmpsl
adc
imul
jmp
and
sbb
push
push
lcall
jge
jg
into
mov
pop
mov
add
sub
test
xchg
cmp
test
sub
dec
imul
jne
jnp
mov
mov
cmp
test
dec
insl
sbb
pop
out
pop
and
call
das
std
jl
adc
jne
pop
mov
aas
out
fld
mov
iret
mov
test
push
or
cmp
mov
mov
dec
cltd
fldt
or
aas
loopne
mov
add
mov
mov
jo
cmp
jl
and
cmp
and
mov
add
adc
loope
sti
scas
icebp
or
cmp
ficoml
lock
mov
movsl
repnz
adc
mov
jecxz
lea
xor
push
lcall
mov
jge
cwtl
fs
imul
scas
add
pop
test
outsb
rorl
ja
mov
test
loope
mov
push
xor
lds
cmpsl
les
inc
xchg
ljmp
mov
hlt
and
mov
fstps
jl
cmp
je
xor
pop
divb
push
fs
and
dec
xor
jo
mov
cmp
std
leave
ret
xor
pop
test
add
xor
push
push
icebp
ss
mov
add
div
es
arpl
loopne
jo
pop
stc
test
sbb
mov
jecxz
mov
mov
adcl
shlb
jne
sub
in
inc
lds
divb
xchg
mov
popf
movsl
add
mov
jns
in
fmuls
imul
movsl
clc
push
inc
outsb
out
inc
test
mov
mov
lods
inc
fcoml
xor
mov
xchg
lret
dec
aaa
out
or
sbb
mov
inc
mov
pop
add
mov
add
sub
cmc
test
shlb
fbld
jno
dec
push
shl
cwtl
and
pop
rcr
aad
lret
add
mov
scas
arpl
dec
mull
out
mov
in
popf
add
jno
cmp
rclb
or
mov
pushf
mov
pop
xor
pusha
jnp
xchg
inc
lods
adc
dec
push
sub
push
dec
mov
xchg
fiadds
js
add
test
xchg
sahf
pop
lods
lcall
dec
push
jge
cmp
cmpl
mov
mov
imul
call
call
fsub
daa
mov
lcall
mov
jb
aad
add
cwtl
sbb
mov
push
hlt
add
nop
pushf
sbb
and
sbb
dec
out
inc
into
loop
dec
gs
inc
fisttpll
in
mov
arpl
or
dec
xchg
xor
nop
sbb
xchg
sbb
in
in
cmp
dec
cs
cmpsb
pop
dec
mov
and
dec
bound
sub
lret
nop
xchg
xchg
push
add
popf
add
in
push
sbb
push
nop
push
xor
test
daa
pop
sub
movsl
xchg
push
pop
cmp
jne
lods
cli
bnd
inc
lret
popa
fsts
out
sbb
or
mov
ficoml
bound
add
movsl
enter
add
xor
cmpb
cmpsl
scas
jno
aaa
es
mov
xlat
ljmp
mov
pushf
jno
xchg
in
jl
roll
sub
lcall
ret
or
aaa
loop
cwtl
loope
out
jg
lcall
inc
clc
daa
movsl
jmp
jge
and
or
mov
mov
imul
mov
stc
es
add
aad
cmc
mov
lret
icebp
dec
out
xchg
inc
or
cmpsb
or
js
cmp
xchg
add
mov
push
jnp
dec
arpl
or
stc
daa
mov
sbb
jbe
orb
and
fs
std
shlb
int
pushf
fcoms
leave
fsubl
inc
mulb
mov
lret
xor
pop
dec
shlb
adc
mov
inc
push
orb
loope
ljmp
in
adc
bswap
inc
test
add
in
push
mull
pushf
sub
adc
iret
sub
popa
xlat
repz
call
out
stos
daa
mov
ror
mov
fs
sub
add
xorl
clc
xor
push
mov
cmp
adc
stos
jbe
pusha
dec
mov
push
mov
aas
and
enter
sub
je
lods
add
scas
sub
push
sbb
dec
jne
popf
arpl
mov
xorl
jbe
stc
or
sub
int
xor
dec
cltd
push
idiv
shll
sub
fwait
mov
dec
pop
mov
scas
mov
cmc
imul
arpl
enter
flds
repnz
sbb
fwait
mov
cmp
cmp
mov
or
mov
and
adc
ret
gs
mov
jg
pusha
jge
mov
jae
and
movsl
imul
fstpt
scas
pop
push
scas
inc
ficompl
xchg
jecxz
popa
xlat
adc
or
and
adc
sub
sub
jle
xchg
or
int
mov
pusha
mov
dec
ret
cli
xor
in
xchg
shl
lea
cltd
inc
cmpsb
dec
sub
lods
out
lds
orb
iret
and
mov
or
push
add
jge
mul
cmp
dec
inc
cltd
dec
or
aam
adc
andb
inc
sub
scas
shll
xchg
insb
pop
stc
sahf
repz
mov
daa
pop
push
inc
add
dec
repz
or
jg
xchg
and
adc
lahf
sbb
outsl
sar
popa
out
fcoml
cmp
dec
div
cmp
mov
jno
and
jne
in
imul
xor
mov
enter
and
sahf
cmp
pusha
xchg
stc
mov
repnz
in
mov
mov
push
pushf
sub
das
dec
push
sbb
adc
jge
push
or
jae
cmp
push
ljmp
call
dec
mov
inc
mov
mov
in
ret
xchg
jecxz
cli
mov
sbb
xor
or
lea
pop
sub
jp
fwait
outsb
mov
jp
inc
imul
xchg
fimuls
shrb
movsl
mov
cmp
jle
dec
sbb
push
scas
and
ror
mov
mov
stc
js
sbb
movsb
int3
mov
and
repnz
xor
ja
xchg
push
sub
sub
xor
loope
sbb
jns
push
ss
cmp
or
xchg
testl
outsb
movsb
sbb
sub
inc
dec
imul
lds
mov
push
sub
xor
or
frstor
mov
into
xchg
jl
and
push
ja
xchg
into
imull
xor
jb
std
mov
bnd
pop
xchg
xor
jnp
jp
dec
imul
cmp
movsl
in
lret
adc
cmp
or
repz
mov
xorb
inc
add
pop
inc
pop
mov
loopne
jmp
mov
bound
fbld
shr
sar
scas
imul
je
clc
sbb
pop
xchg
mov
jl
mov
test
lret
jnp
rcrl
sarl
bound
dec
loopne
cmp
mov
pop
cmp
adc
inc
inc
jecxz
sbb
sub
repnz
test
mov
pop
mov
or
loop
jge
push
pop
cmp
sbb
movsl
mov
or
shrb
test
out
add
push
scas
into
sub
mov
ljmp
outsl
sbbb
repz
mov
aaa
mov
js
jae
sub
jo
sbb
and
stos
push
mov
stos
mov
lahf
push
sub
shll
repz
inc
test
pop
sbb
pop
add
and
je
jne
lea
stc
in
divb
jmp
and
pop
pop
fwait
loop
inc
shlb
jb
stos
jmp
jl
mov
mov
jl
hlt
mov
cli
js
pop
lahf
inc
jp
ja
sub
push
cli
std
mov
adc
push
adc
ss
add
call
call
fwait
ret
sbb
add
add
mov
lods
and
pop
notl
mov
fistpll
repnz
fists
jmp
xor
loop
dec
cmp
push
stc
dec
dec
mov
les
orw
fstpt
je
jecxz
fisubrl
sbb
popf
lds
into
mov
arpl
scas
call
das
ja
scas
jg
jle,pt
and
mov
es
ja
fucomp
jns
add
xor
or
inc
mov
jg
push
ret
mov
push
cmp
jnp
gs
ja
filds
outsb
fisttpl
lods
out
daa
movsl
clc
push
mov
ret
test
out
inc
faddl
ja
mov
sub
sti
xor
xchg
ja
int
jge
mov
lods
pop
cmp
pop
xor
mov
cli
xor
xor
add
imul
std
insl
sbb
xchg
test
push
mov
add
dec
test
inc
xlat
push
push
outsb
jle
mov
int
imul
sbb
add
ret
insb
mov
out
push
rorl
xor
cmp
ljmp
in
pop
add
sahf
jg
dec
mov
fstpt
lea
aad
test
addl
fisttpll
out
icebp
push
icebp
out
sub
cld
insl
test
imul
iret
push
dec
inc
insb
orb
mov
aad
and
shr
adc
mov
imul
dec
or
aad
mul
nop
jp
and
fildl
cmp
xchg
ss
add
cmp
in
pop
mov
mov
sub
lahf
dec
enter
push
movsl
pusha
push
into
add
cmpsb
xchg
or
and
pop
stos
gs
jb
pop
sarb
mov
jg
mov
addr16
mov
cmp
inc
jb
sub
push
and
fisubrl
loop
xor
ret
fbstp
mov
stc
cmp
mov
cli
xchg
popf
js
adc
hlt
inc
mov
mov
outsl
in
call
xchg
mov
in
xchg
inc
add
shrb
lret
popl
cwtl
mov
add
mov
lds
stc
in
cmp
xchg
outsb
js
push
mov
cmp
int
sarb
imul
aad
sub
xchg
inc
add
repz
inc
test
fildll
repz
cmpsb
push
aad
jne
fwait
stos
dec
loope
inc
pop
inc
inc
repz
xchg
pusha
insl
and
jno
test
jecxz
aam
fdivs
cmp
jmp
adc
push
xor
outsl
repnz
dec
xorl
xchg
sti
enter
inc
xor
mov
sub
xchg
jb
cmpsb
nop
fldcw
xchg
xchg
and
adc
adc
repz
push
pushf
repnz
test
xor
icebp
fildl
and
xor
pop
cmpsl
mov
fldt
lea
mov
dec
mov
and
repz
cmp
add
mov
sahf
cs
jl
std
fisubl
mov
fs
test
mov
jp
nop
sarb
push
mov
xchg
pop
cmpsl
mov
push
fbld
and
dec
lock
or
xchg
movb
jne
std
insb
scas
sbb
cmp
mov
sbb
adc
mov
xor
dec
iret
mov
cmp
push
pop
push
mov
xchg
push
mov
fadd
sub
cmp
push
test
cmp
sub
fnstcw
ret
nop
adc
mov
movsb
mov
jns
inc
adc
imul
scas
shrb
outsb
mov
push
dec
fsubs
sbbb
clc
pop
cmp
andl
loop
ljmp
add
pusha
jae
pop
add
cmpsb
rcl
xor
int
outsb
xchg
cmp
add
add
int3
dec
fidivs
ss
fwait
arpl
int3
outsl
mov
adc
fwait
cld
add
dec
fdivs
or
push
arpl
test
dec
jp
push
cmpsb
in
and
out
bound
stos
push
leave
jae
stos
dec
cs
sbb
test
maskmovq
idivl
mov
in
adc
push
inc
inc
sbb
push
xlat
mov
fstpt
push
cmp
or
jge
pop
adc
jne
lods
lahf
dec
out
add
daa
push
std
loop
in
lret
adc
sub
sub
sub
inc
mov
pop
push
popf
int
je
sbb
popa
imul
icebp
ljmp
aam
pop
mov
leave
add
lods
push
fmul
sti
add
into
xor
adc
mov
repz
mov
divl
paddb
lds
sbb
and
xchg
adcb
xchg
xchg
movsb
sub
jne
mov
dec
dec
insb
popa
pusha
insl
int
js
es
stos
test
inc
aad
pop
mov
pop
jbe
xor
cmpb
mov
icebp
mov
dec
or
mov
in
outsl
xchg
mov
mov
leave
inc
popa
cmp
push
sub
inc
icebp
mov
add
xchg
call
mov
fmull
inc
in
scas
outsl
movsl
test
sti
pop
sub
aad
inc
xchg
repnz
mov
out
jo
and
adc
loop
frstor
shl
data16
test
lret
fidivs
arpl
ds
call
xlat
faddl
out
clc
shl
pusha
inc
test
jp
stos
sbb
rcrb
loope
in
in
aas
call
mov
xor
xchg
jg
jmp
je
mov
popa
daa
mov
imul
lahf
cltd
sahf
push
mov
lahf
mov
xchg
push
cmp
inc
push
push
pop
cmp
pinsrw
in
add
lahf
add
dec
fadds
jp
inc
addb
ljmp
rcll
sub
lahf
pop
jge
dec
jns
leave
data16
inc
adc
in
ja
fwait
mov
jo
add
dec
movsl
loopne
mov
jbe
test
and
cmp
jnp
getsec
jle
test
lds
fninit
mov
mov
cmp
jmp
xor
and
push
pop
shll
mov
flds
sbb
aad
fimull
jae
xor
jno
jecxz
inc
js
lock
hlt
gs
enter
push
dec
mov
sti
aad
test
pop
cmp
mov
stc
int
sub
push
push
jne
push
push
adc
dec
nop
shlb
or
cld
aaa
ja
add
imul
dec
lea
or
fsubl
or
outsl
or
aam
movsl
aaa
jecxz
adc
adc
hlt
fstpl
pop
movsl
pop
cwtl
pop
addr16
fcmovbe
mov
pop
out
mov
pusha
imul
mov
adc
mov
jno
fsubr
sub
gs
not
pop
inc
lods
nop
xchg
lcall
fs
push
dec
xor
inc
in
lock
and
sbb
cwtl
stos
inc
fwait
imul
outsl
and
cvtpi2ps
loope
push
sbb
add
dec
lcall
daa
nop
lret
or
dec
mov
scas
xchg
push
ljmpw
inc
enter
xlat
iret
xlat
test
jbe
rcrl
cmp
add
mov
adc
out
lea
jne
out
popf
es
test
cmpsl
xchg
cmp
iret
test
iret
mov
xchg
cmp
int3
popa
notl
mov
hlt
push
push
add
add
sub
adcb
cmp
mov
inc
xor
sbb
dec
out
mov
cmpsb
rcr
xchg
lea
icebp
out
inc
xchg
js
jbe
inc
aas
fistpll
enter
or
mov
fsubrp
adc
xchg
lock
adc
addr16
icebp
xchg
xchg
mov
stos
mov
push
fisttpl
dec
and
lock
jb
test
add
out
push
add
shll
mov
inc
orl
test
ja
push
imul
in
push
jno
ljmp
pop
jle
jg
push
inc
sub
nop
cmp
ljmp
xor
or
sub
xchg
xchg
lcall
shll
sbbb
adc
lahf
loop
xor
lahf
leave
and
adc
push
dec
xchg
out
sub
fsubl
xchg
mov
call
xor
hlt
pop
lods
sahf
push
cmpsl
into
inc
icebp
push
rolb
jecxz
repnz
sbb
jns
out
in
push
jb
xor
xchg
pop
xchg
mov
out
mov
cwtl
jmp
repnz
sahf
add
inc
insl
mov
test
mov
push
fwait
xor
sub
addr16
push
xchg
cli
test
popf
and
inc
add
bound
pop
mov
ret
adc
jns
sub
inc
inc
in
repnz
jge
movsb
pop
scas
mov
inc
mov
push
sub
daa
xor
lret
push
mov
mov
dec
adc
sub
mov
sub
add
ja
leave
insb
call
negl
add
loope
test
test
sbb
bnd
cmpsb
mov
lds
bound
adcl
leave
sbb
cwtl
movsl
xchg
push
jb
lret
mov
pop
ret
push
or
repz
sbb
lret
incb
xor
xchg
clc
cmp
sbb
inc
sarl
stc
jp
sbb
jb
add
mov
bswap
mov
stos
jne
test
mov
lret
jne
icebp
popa
jmp
push
les
cmp
mov
add
clc
mov
mov
mov
and
xchg
int3
xchg
push
push
fdivrl
stos
std
dec
or
repz
cmpsl
mov
cs
lods
aam
push
loop
xchg
in
dec
stos
xchg
ret
mov
pop
jb
sti
fsubr
xchg
jnp
std
sbb
sahf
mov
lods
or
call
out
and
jmp
push
cmpsb
jp
jae
and
xor
jmp
add
adc
sbb
sbb
cmp
sahf
push
in
cld
ret
pop
aas
test
pop
aad
sub
dec
jne
rcrl
jp
sbb
imull
std
adc
into
loopne
sub
xor
mov
sub
test
stos
pop
jbe
aas
fmul
imul
dec
mov
add
jecxz
std
test
add
jmp
or
jne
ret
adc
aad
pop
xchg
int3
inc
loope
dec
scas
sbb
push
stos
pop
sub
add
cmpsb
push
cmp
inc
movsl
mov
es
jo
mov
loope
cmp
ret
pop
arpl
ficoms
pushw
xor
pusha
fistpl
push
into
sbb
adc
jnp,pn
bound
scas
mov
pop
lods
mov
jle
dec
add
stos
call
xchg
dec
out
cmp
stos
in
in
in
sub
test
dec
out
dec
stc
add
xchg
and
xchg
std
fdivrl
decb
push
leave
out
xor
and
jl
add
out
dec
sub
xchg
aam
lea
lea
cmpsb
mov
inc
test
in
xchg
ret
aaa
pop
push
std
fwait
mov
adc
fidivs
pushf
out
dec
test
dec
stos
pop
and
push
pop
pop
pop
out
lahf
stc
bound
mov
dec
cmp
dec
lods
pop
rolb
xchg
fimuls
fwait
dec
pushf
pop
sbb
and
mov
jae
adc
test
push
outsl
stos
ret
lcall
jb
push
sahf
jae
neg
cmc
sti
ret
iret
pop
inc
push
xchg
into
rcrl
sbb
and
shlb
mov
xchg
popf
and
push
dec
adc
cld
mov
sbb
pop
fstps
pop
pop
dec
cwtl
pop
mov
stos
jns
mov
mov
je
sub
pop
pop
xchg
push
jecxz
adc
mov
jb
jnp
rclb
aas
fwait
insl
std
push
notb
loop
mov
out
fimull
outsb
sbb
mov
mov
int3
adcl
stos
pop
and
in
and
or
inc
sbb
fdivp
jae
out
cmp
mov
imulb
decl
gs
sbb
dec
pop
jno
xchg
ds
mov
dec
add
cmc
mov
mov
inc
sub
push
dec
cmpsb
cvttps2pi
sbb
add
and
xchg
das
mov
pop
push
ficompl
xchg
cmp
fidivrl
inc
push
gs
jmp
sbb
pop
rclb
js
mov
sub
jl
xchg
mov
lds
push
push
xor
stos
jnp
aaa
gs
mov
fstl
ljmp
fiadds
or
push
shl
xor
jo
cmp
jae
xchg
loope
xor
pushf
xchg
ficoml
rorl
add
jl
cmpsl
sti
pop
or
xchg
mov
mov
push
sub
dec
stc
sub
xor
cwtl
mov
ljmp
xor
jns
jbe
pop
jns
fbstp
xchg
scas
fldt
fst
inc
mov
sub
shlb
in
mov
lds
insl
cmp
mov
inc
mov
stc
adc
sub
and
pop
jns
ja
out
cmp
lds
fisttpll
or
push
pop
jle
push
rorb
jb
sub
mov
test
pusha
jns
or
call
pop
cmpb
int
addr16
jg
jnp
stos
outsb
mov
enter
lcall
pop
push
loopne
notb
add
insl
add
mov
inc
andb
xchg
lods
test
sbb
pop
cltd
ss
inc
ret
test
fbstp
out
shrl
and
outsb
xchg
mov
xor
mov
mov
adc
mov
dec
test
aas
test
mov
lcall
inc
scas
jl
sti
cltd
mov
bound
add
add
ljmp
test
daa
add
mov
xor
mov
inc
cs
dec
push
mov
cmp
insb
push
jne
mov
pop
mov
lea
sub
push
gs
dec
inc
cmp
push
jge
out
sub
lds
xor
or
xor
cmp
fimull
into
adc
xchg
loopne
cmp
dec
pop
lahf
inc
push
adcl
or
inc
mov
dec
shrb
add
xchg
adc
sahf
fisttpl
push
mov
push
pushf
das
lods
add
jnp
xchg
dec
mov
dec
adc
push
or
inc
in
pushf
ss
mov
mov
mov
bound
mov
dec
loop
xorl
pop
xchg
jbe
enter
push
pop
out
pop
imul
fldl
fwait
sbb
mov
xlat
xor
daa
popf
pop
repnz
dec
cmp
mov
dec
sbb
dec
iret
incb
or
test
cwtl
lds
imul
test
pop
inc
cmpsb
imul
idivb
inc
cmpsl
xor
test
loop
sub
fcoml
xor
loopne
add
daa
mov
mov
inc
push
jg
les
rcrb
mov
jl
out
cmp
xchg
hlt
out
jnp
xor
xor
xchg
pop
in
vpmaddwd
shlb
fs
ret
push
mov
mov
push
mov
adc
or
push
pop
and
mov
mov
sahf
mov
push
sub
sub
shl
daa
test
jle
call
jl
lcall
mov
xchg
call
mov
ret
mov
add
pop
ds
and
sbb
xlat
push
mov
jecxz
dec
ja
mov
sbb
add
les
cmp
cmpsl
cltd
in
stos
sub
stos
jge
pop
or
xchg
jle
enter
test
sbb
mov
ss
mov
sbb
jno
push
fs
in
cmp
add
ret
stos
into
inc
dec
popa
jnp
ljmp
mov
out
sub
mov
and
clc
xor
xchg
mov
pop
jbe
inc
cmp
flds
cmp
mov
addb
movsl
jp
adc
aas
adc
aaa
stos
jg
sub
in
dec
lcall
fsubrs
aaa
cmp
lret
sbb
pop
mov
outsb
aaa
and
mov
divb
cmpsl
jmp
insb
or
and
fucomip
xor
sub
or
sub
pop
cmc
clc
les
inc
lea
add
mov
xor
iret
jmp
dec
sti
imul
test
stos
dec
push
je
lods
sbb
xor
fs
imul
pop
test
les
data16
outsl
cld
loop
or
lret
jge
xor
test
insb
imul
jg
mov
stos
xchg
inc
hlt
daa
pop
push
sub
fs
mov
jmp
imul
push
xor
cmp
int3
fmul
popa
push
mov
or
or
dec
xor
jb
and
cli
mov
xchg
divl
fcomp
xchg
insl
fs
movsl
mov
addl
sar
mov
sahf
dec
jge
or
push
lcall
inc
mov
jge
dec
lret
rolb
pop
jnp
inc
mov
and
aam
lds
jno
push
add
lock
xor
and
adc
shrb
fcoml
shll
data16
jae
ja
push
aas
or
sarl
mov
jle
cmp
fidivrl
or
inc
mov
mov
iret
mov
jle
push
lahf
cmp
or
cmp
movsl
xchg
les
xchg
xchg
test
xor
imul
fwait
sbb
xchg
pop
mov
mov
pop
pop
jg
iret
inc
jae
test
inc
and
sbb
daa
mov
mov
push
cld
and
jb
push
imul
dec
mov
xchg
add
dec
aaa
loope
addr16
inc
ss
inc
in
sub
int
adc
inc
adc
je
push
outsb
jne
dec
div
cmpsb
jno
or
mov
and
call
fistl
pushf
mov
daa
das
adc
xor
push
pop
lcall
mov
pop
mov
jle
xchg
mov
dec
inc
jb
daa
sbb
test
idivl
cmp
or
add
cmpsl
xor
lcall
push
lcall
cmp
scas
mov
popa
inc
jg
push
push
add
lea
test
mov
lahf
sbb
fisubrs
ds
sub
or
push
in
pop
add
or
mov
hlt
fildll
mov
or
fnstsw
jo
les
dec
hlt
pushf
imul
insl
addb
add
push
adc
fucom
cltd
push
aaa
fcomi
aaa
lahf
inc
cmp
stos
pop
jmp
fldl
adc
inc
lock
mov
fcmove
dec
outsb
jmp
lret
add
sbbb
dec
xlat
aad
mov
fcompp
fbstp
in
cmc
xchg
loopne
iret
xchg
jbe
andl
int3
out
xor
sar
out
push
pop
cmp
mov
dec
pop
insb
pop
and
and
call
jb
hlt
pop
out
jo
sub
inc
inc
mov
gs
in
cmp
iret
sbb
shlb
cmp
js
jge
insl
xchg
dec
inc
sbb
fwait
fwait
dec
push
sbb
out
sbb
mov
fstl
mov
idivb
pop
sub
ret
fldcw
mov
fsubl
adc
add
ljmp
lds
scas
and
xchg
push
add
mov
dec
and
mov
adc
cmpb
push
fdiv
lcall
fwait
dec
xor
insl
push
pop
jge
cmp
insl
repnz
lret
dec
hlt
or
movsl
pop
mov
out
repnz
cmc
sub
pop
cmp
stc
insl
int
ret
addl
mov
mov
in
sbb
mov
dec
adc
mov
dec
sbb
pop
nop
add
jno
clc
dec
push
xor
iret
jns
js
xchg
mov
cmp
or
jbe
inc
shll
ror
fcoms
cmc
ds
idivb
loope
fsubrs
xchg
jmp
incl
add
movsb
pop
or
fld
mov
jae
hlt
and
insb
push
fbstp
adc
push
repnz
sub
xchg
mov
sub
data16
adc
jl
mov
test
lahf
mov
call
aas
in
jnp
sbb
insl
out
sarb
stos
xor
js
scas
dec
xor
mov
xor
cs
pop
or
pop
cltd
sub
xchg
ret
arpl
in
cwtl
jno
in
loope
jne
sub
out
cli
xchg
push
cmpsl
xchg
push
pop
lret
out
mov
add
pusha
sub
inc
int3
stos
ds
xchg
cwtl
stc
or
mov
movsb
jb
lds
sub
sub
es
out
or
popa
sbbb
imul
daa
jnp
mov
ljmp
dec
call
stc
mov
sbb
sbb
and
and
jl
jmp
repnz
mov
or
fcompl
jno
insb
daa
xorl
cltd
sarl
cltd
sbb
mov
aaa
stos
inc
movl
lods
cmp
fs
mov
push
sti
aaa
sub
pop
ficoml
aas
and
dec
int3
outsl
scas
xor
cmpb
push
jp
pusha
mov
jbe
and
xchg
and
andl
sti
dec
cmp
dec
lds
push
mov
lods
or
push
mov
mov
jo
xor
add
inc
sbb
call
push
sbb
lock
push
mov
pop
sbb
js
adc
cmp
push
test
dec
or
bound
adc
dec
pop
xor
pop
sahf
adc
outsb
jae
push
push
loope
lret
repnz
xchg
adc
mov
and
mov
icebp
sahf
aad
lods
push
sbb
xchg
mov
repnz
mov
mov
and
das
stos
inc
xchg
insl
cmp
inc
hlt
and
dec
mov
mov
mov
push
arpl
adc
aaa
add
push
cld
mov
pushf
mov
mov
loope
inc
enter
test
dec
add
add
data16
notb
or
arpl
dec
fs
xchg
inc
div
or
pop
dec
lcall
mov
sbb
sbb
push
loope
imul
fs
idivb
scas
mov
jl
push
and
js
and
push
rcll
enter
imul
data16
in
repz
mov
sub
das
lods
lds
push
mov
in
push
xor
push
mov
mov
ljmp
test
adc
xor
call
jnp
xor
push
mov
pop
loop
scas
shlb
sub
rcl
fsubrl
push
jns
lcall
shll
jns
cmp
adc
xor
aas
cmpl
addb
fs
fldenv
or
cmpsl
xchg
adc
into
xchg
jno
cs
mov
inc
mov
pushf
push
jle
pop
mov
std
inc
in
in
mov
cmp
dec
xor
xor
stc
mov
and
sbb
mov
xchg
xchg
sub
dec
adcb
cld
mov
add
xchg
or
and
lret
nop
push
mov
sub
push
sbb
adc
fsubs
dec
pop
push
push
loope
pop
out
or
and
push
dec
out
ja
pop
movsl
stc
outsb
mov
cld
out
dec
aam
adc
ljmp
in
fwait
adc
push
dec
jns
mov
sbb
sub
clc
in
mov
rol
xor
xor
push
std
sub
mov
mov
and
movsb
jl
outsb
dec
jmp
dec
leave
test
mov
nop
std
jne
jp
gs
int3
js
clc
push
push
loope
adc
cmp
movsl
imul
and
cmp
sbb
and
xchg
fwait
xchg
aam
es
push
inc
push
push
enter
adc
sti
and
call
loopne
xchg
and
ljmp
js
adc
stc
sbb
test
jne
xchg
mov
inc
add
push
data16
fwait
ds
or
sbb
ljmp
inc
loopne
test
mov
push
out
divb
fcoml
jo
push
lock
loope
ja
pop
xchg
dec
aaa
lock
std
das
mov
scas
sbbl
add
ret
imul
into
add
js
cmpsl
sbb
lods
ficoms
add
js
out
cmp
sub
mov
mov
rcll
sarb
mov
jno
xchg
addr16
movsb
rorb
mov
mov
lds
xor
jae
and
mov
or
mov
sub
mov
xor
mov
jbe
test
adc
fsubrl
bound
test
mov
mov
daa
mov
or
jmp
int3
loopne
fstpt
mov
mov
push
sub
jo
sbb
pop
in
nop
xor
sub
lds
mov
in
mov
aaa
mov
xor
fistps
mov
scas
nop
cmp
dec
out
mov
popf
mov
inc
xchg
outsb
popa
std
push
add
loop
and
ficomps
pop
cmpsb
xchg
mov
divl
fldcw
mov
ljmp
sbb
dec
and
pusha
fiaddl
sub
and
cmp
mov
cld
jp
loop
push
out
mov
push
pop
inc
rcrb
mov
mov
mov
adc
pop
fcoms
popa
jg
and
imul
rorb
in
out
shll
sbb
test
xor
movsb
fs
fcmovu
dec
sbb
xchg
xlat
lret
orl
mov
mov
pop
aaa
fadds
add
bnd
xor
or
testb
outsb
adc
jbe
in
jmp
movsb
jp
xchg
outsl
sbb
push
ja
xor
xor
add
cmpsb
jmp
aaa
sti
xchg
jbe
and
sti
dec
and
adc
push
test
dec
test
out
movsl
call
sbb
cmpsb
mov
out
mov
dec
mov
imul
leave
jns
sbb
mov
pop
outsb
fcoms
mov
sub
hlt
xor
sbb
cs
push
xor
push
xor
pop
add
inc
adc
adc
pop
in
inc
jecxz
in
outsl
mov
push
jecxz
inc
shr
inc
sub
sub
imul
jo
cmp
les
lods
mov
cmp
mov
les
roll
rolb
rcll
mov
add
push
jno
test
les
ret
loop
insb
jge
pop
stos
push
ds
out
mov
xorl
xor
std
dec
jle
mov
lds
sbb
adc
testb
aaa
push
rcll
inc
sbb
jp
or
dec
mov
mov
mov
lahf
jmp
mov
xchg
xchg
cmp
cs
sub
sti
insb
and
jb
mov
jmp
fwait
and
jmp
xor
inc
loope
sub
xchg
lods
iret
cli
pop
stos
push
mov
xchg
test
negb
sub
sub
mov
mov
mov
add
scas
jp
shll
push
fiadds
in
push
dec
scas
cvtps2pd
sahf
das
imul
push
adc
xchg
or
and
cltd
into
dec
add
jge
jg
imul
cmp
mov
es
mov
sub
sub
inc
adc
out
mov
orb
jne
adc
and
add
mov
scas
inc
inc
cmp
add
scas
ss
or
pop
es
es
xorl
dec
xchg
add
dec
ss
pop
fcompl
pop
cltd
jne
add
std
rclb
xlat
fwait
incb
xor
push
add
push
inc
dec
stos
popf
cli
lahf
add
cli
sub
insl
xchg
ret
arpl
xchg
or
out
pusha
adc
outsb
mov
mov
sub
mov
and
pop
or
ljmp
push
outsl
jl
dec
in
xorl
mov
xor
lret
sbb
push
dec
pop
adc
int
cmpsb
cwtl
pushf
in
push
aam
add
cld
fs
fs
ret
push
mov
shrb
cltd
mov
sbb
jns
mov
addr16
xor
shl
xchg
push
roll
dec
and
je
in
ret
or
push
andl
pushf
jo
insl
sbb
sbb
xor
sub
sub
jmpw
or
sahf
aad
ficoml
out
data16
jbe
in
mov
mov
xchg
push
orb
cli
cmc
in
in
push
sbb
testb
jg
movl
cmc
add
imul
sub
ror
cmpsl
jns
mov
dec
inc
lods
test
cli
insb
aam
cmc
dec
loope
into
imul
negb
insb
xor
test
sub
aas
xchg
scas
cmp
mov
fwait
dec
emms
mov
sbb
negl
jae
xor
add
aaa
movsb
mov
adc
inc
ds
faddp
mov
xor
arpl
lret
mov
iret
cltd
push
add
outsb
add
fnsave
ficoms
push
or
rorl
fwait
add
insl
lahf
sbb
mov
mov
testl
pop
cmp
repz
xchg
push
fwait
jno
cmpsl
les
jp
push
sbb
jp
jmp
pop
mov
inc
sti
pop
lcall
pop
mov
add
std
and
adc
adc
leave
lahf
ljmp
add
scas
inc
das
arpl
jbe
cltd
xor
xor
add
adc
out
fnstenv
adc
dec
ja
pop
jle
or
jge
dec
fcomps
sbb
ljmp
sub
les
jl
mov
and
jmp
add
je
sbb
jne
mov
in
popf
xchg
mov
push
dec
cld
aad
pop
dec
dec
jbe
add
les
cmpl
pop
enter
cmp
pop
popa
jge
add
pop
mov
out
movsl
inc
js
adc
cmpsl
or
jbe
xchg
stos
and
pop
aaa
mov
scas
mov
imul
lea
push
rcrb
inc
xlat
in
arpl
loop
ret
mov
sbb
rol
push
dec
cwtl
cmp
push
aaa
subb
jle
or
xchg
nop
inc
test
push
push
cmpsb
cs
lock
mov
jb
out
jnp
ret
mov
pop
nop
inc
fists
push
ret
loope
mov
add
imul
ret
mov
dec
fs
popf
subb
cmpb
movsl
mov
or
inc
cmp
or
pop
pop
ss
mov
aaa
lahf
adc
and
out
repz
add
fisubs
mov
out
std
lret
icebp
fisubrl
jle
add
sbb
icebp
and
xchg
mov
push
pop
int3
subl
push
jp
jmp
xchg
dec
sti
xchg
test
es
rcrl
and
mov
xchg
sbb
stos
les
jge
aas
decl
mov
push
or
adc
jmp
sbb
mov
into
es
push
rcrl
lahf
sub
cmp
xchg
data16
push
aaa
xchg
movsb
shrl
push
lods
cmp
jl
push
sub
insb
mov
fnstsw
sub
inc
xchg
sub
test
scas
cld
push
adc
dec
int3
mov
jmp
adc
scas
and
sbb
mov
fists
lds
inc
mov
xor
mov
sbb
mov
iret
into
mov
push
imul
dec
push
sub
pop
lret
lods
in
push
in
push
jae
lds
cmp
pop
mov
mov
stos
aad
pop
dec
cli
mov
imul
clc
mov
xchg
fs
loope
call
ja
sub
shll
push
mov
cli
in
in
fcmovne
fnstsw
xor
dec
rdmsr
iret
sbb
das
push
sub
imul
dec
enter
cwtl
in
pop
xchg
xor
leave
xlat
dec
in
adc
mov
xor
push
mov
jbe
xchg
xchg
jno
pop
popf
jbe
call
ret
xor
push
in
scas
mov
mov
lahf
fs
popf
sahf
push
dec
push
scas
loope
and
cmp
pop
adc
fistl
lods
adc
jo
cmp
inc
in
and
icebp
outsl
dec
add
nop
insb
out
xchg
pop
cwtl
xchg
stos
mov
dec
or
pop
cwtl
shrl
fisubrs
hlt
sbb
lahf
les
daa
mov
rcll
repnz
cld
jbe
xchg
sbb
fcmovnb
dec
cmp
mov
lahf
ret
aam
les
lcall
xor
hlt
and
sub
fadds
sbb
es
dec
les
ds
shlb
xor
inc
cmpsb
enter
imul
dec
xchg
repnz
xor
ficoml
xchg
fisubrs
pop
inc
mov
sub
lret
ret
adc
loope
xchg
les
and
mov
insl
xor
mov
sub
or
mov
inc
add
sti
push
pop
push
mov
fimull
dec
insl
int3
jl
outsl
scas
cld
in
xchg
sbb
push
js
jg
sti
push
das
mov
iret
loop
out
sbb
dec
aad
inc
sbb
dec
sarl
in
xor
test
inc
push
adc
int3
xor
fwait
sbb
fidivrl
rclb
and
push
inc
push
shrd
pop
in
xchg
sub
push
push
mov
sbb
cmp
sbbl
push
dec
xchg
pop
dec
jmp
and
outsb
and
jnp
out
shll
sbb
hlt
cli
test
leave
notl
movsl
push
fdivr
pop
or
pushf
shrb
xor
jns
push
and
outsb
sub
ljmp
mov
repz
inc
into
xchg
popa
loopne
daa
out
stc
and
mov
lret
sub
nop
mov
inc
xchg
or
xchg
fimuls
fldenv
popf
ja
lods
dec
mov
es
rolb
addr16
cmp
dec
popa
and
pop
mov
inc
fstpl
test
mov
insl
push
inc
lea
daa
mov
pop
mov
xor
inc
cs
imulb
call
add
cmp
xor
dec
adc
cmp
adc
pop
ret
out
mov
arpl
or
jno
fs
js
imul
cwtl
popa
dec
xchg
fisttpll
clc
bound
in
mov
fnclex
mov
cmpsb
xchg
lahf
bound
cmp
lea
mov
sub
pop
xor
insb
mov
adc
xchg
lods
sbb
loope
inc
xchg
stos
lahf
dec
push
jl
xchg
lods
adc
dec
inc
xchg
loope
cmpsb
jne
fwait
idiv
adc
sub
sbb
or
pop
pop
sbb
and
test
fldenv
sbb
test
in
out
pusha
in
lahf
std
hlt
or
mov
ss
frstor
sahf
nop
idivl
push
jnp
enter
out
cmp
mov
loop
and
daa
mov
mov
jmp
add
adc
mov
into
sahf
adc
push
or
cmpsb
pop
call
fists
mov
in
idiv
dec
cmp
test
dec
cmp
cmp
pop
jge
divl
and
popa
xchg
or
pushf
push
ds
stc
mov
cmp
mov
adc
dec
mov
outsb
out
les
adc
jnp
std
xor
adc
mov
in
fldt
mov
xor
stc
pop
sbb
mov
sbb
and
xchg
lret
in
jnp
xor
adc
loope
fsubp
test
ficomps
sub
ljmp
inc
and
cmp
ljmp
and
or
fldcw
xchg
dec
jle
push
add
mov
xor
push
jmp
hlt
and
and
mov
mov
sbb
jg
cld
aad
popf
mov
mov
inc
sbb
mov
cmpsb
cmp
std
es
push
or
jnp
xor
push
loope
gs
into
mov
mov
jmp
jns
adc
sahf
insl
out
fcomps
sbb
mov
cmp
mov
out
sbb
push
mov
aam
inc
in
pushf
es
add
sti
test
lcall
aam
pushf
dec
aas
xchg
out
sub
arpl
add
and
adc
into
scas
sahf
aaa
cmp
fnstsw
repz
add
std
sbb
dec
jle
adc
lods
stc
cwtl
inc
xchg
add
xor
mov
ret
or
cltd
dec
sbb
mov
pop
adc
cmpsl
adc
lock
aad
jge
fsubp
lea
sbb
int3
xchg
ror
ret
xchg
cmpsl
lds
dec
aad
aad
inc
inc
mov
jmp
mov
inc
test
es
add
jo
mov
dec
lahf
mov
sub
out
xchg
testl
movsl
cmp
shl
and
dec
jmp
jle
dec
push
inc
jg
add
push
leave
movsl
js
sbb
ret
lcall
adc
insl
mov
stc
or
mov
lods
outsl
enter
andb
js
adc
loope
out
shlb
movsl
inc
inc
fldl2e
shl
mov
xchg
add
sbb
adc
aad
and
gs
pushf
pop
pop
shl
mov
aam
or
dec
sbb
shr
mov
inc
mov
cmp
clc
cmp
mov
jle
iret
sbb
ret
gs
push
pop
or
push
sbb
mulb
ficompl
imul
xchg
rcr
sub
mov
and
ret
push
aad
lret
inc
sar
sub
loopne
in
xchg
push
leave
sahf
push
adc
inc
lret
dec
add
pop
clc
cmc
cmp
outsl
mov
aad
dec
inc
or
or
bound
jp
dec
xor
out
cs
cmp
inc
pop
call
sub
shlb
add
mov
push
shll
sub
mov
xor
add
fs
lahf
sub
jg
or
imul
mov
iret
sub
jecxz
nop
andl
xorb
lahf
sub
mull
lock
mov
ss
rclb
rol
pand
dec
jno
hlt
ljmp
orb
and
insl
and
jo
aaa
inc
jl
mov
and
stos
lret
mov
or
xchg
jle
jmp
mov
xchg
gs
lods
mov
in
test
and
xor
shrl
popf
adcb
js
xchg
xchg
std
adc
add
test
ficoml
sarb
push
cli
xchg
xchg
loope
fimull
pop
daa
xor
lods
cmp
les
cmpsl
outsl
scas
inc
test
push
and
sbb
ja
mov
in
fs
addr16
shrb
rcll
movsb
and
or
pusha
cwtl
add
lds
aaa
xchg
fnstsw
jo
adc
dec
cmpsl
inc
mov
fsubs
aas
mov
aad
lods
add
outsb
mov
pop
aas
mov
test
adc
mov
push
add
jg
cltd
cmp
push
jbe
cltd
sti
fdivrs
test
fistl
je
out
or
leave
inc
fldt
jmp
mov
add
xor
insl
in
fsubrs
pop
jmp
mov
and
mov
and
imul
inc
inc
cmp
mov
and
adc
push
and
mov
adc
push
lcall
jp
sub
mov
movsb
aad
cmp
and
push
and
jecxz
mov
push
push
jae
mov
stos
shrb
test
in
push
and
mov
aam
push
mov
jge
popa
sbb
dec
hlt
lock
push
mull
and
or
jns
mov
das
ja
dec
cmp
mov
jb
add
dec
aam
js
fs
mov
repz
pop
repz
jp
imul
mov
mov
and
adc
cmp
and
cld
dec
std
ljmp
les
in
push
in
xchg
in
sti
test
aam
aaa
fst
stc
inc
fwait
cli
insb
cmp
dec
mulb
mov
rcrl
cmc
lds
add
or
cmp
add
je
jns
and
pop
adc
mov
fs
fwait
in
sub
int
daa
jno
clc
push
sti
mov
cmc
mov
hlt
lods
cmpsb
fdivp
out
inc
in
or
ret
jmp
pop
jle
mov
int
push
cwtl
jo
imul
jns
cmpsl
pop
cli
mov
push
xchg
jmp
or
jge
aaa
sarl
imul
push
jno
adc
jg
scas
cmpsb
pop
jmp
pop
fnstcw
repnz
adc
cmpb
movsb
dec
lds
fisubs
pop
mov
jnp
das
jo
mov
xchg
lcall
clc
lahf
jg
fdiv
ret
sub
pop
or
bound
and
mov
cld
cmp
pop
scas
xchg
xor
rcl
inc
pop
add
jge
test
pushf
push
cmp
jno
lods
pop
dec
fidivl
push
push
jg
stos
ljmp
cmc
sub
hlt
inc
sbb
es
das
pop
mov
or
pusha
cmpsl
pop
sbb
scas
mov
mov
aas
dec
jne
out
in
stos
daa
repz
in
dec
pop
pusha
sbb
leave
call
insl
incb
arpl
fisubs
or
pusha
dec
pop
jne
gs
pop
in
or
cli
jp
cmp
insb
xor
xor
lods
cmp
sbb
mov
jne
dec
hlt
ds
adc
bound
lods
je
add
aam
jnp
ss
dec
jmp
pop
jmp
sahf
gs
and
sub
or
add
xchg
push
mov
out
or
pop
and
cld
jmp
jecxz
push
xor
cmp
in
jmp
xor
shl
mov
dec
outsb
inc
ljmp
cltd
sub
mov
inc
jne
fwait
or
leave
std
pop
je
aad
sbb
push
xchg
and
mov
push
push
inc
hlt
xchg
and
lods
scas
sbb
add
call
out
xlat
jne
and
gs
mov
mov
mov
mov
int
out
jae
xchg
lret
sub
sysenter
hlt
push
lret
mov
and
mov
ds
sbb
movsl
out
sub
movsb
cmpl
pushf
mov
setg
push
clc
ljmp
rcrb
or
mov
pushf
iret
stos
xor
mov
and
xor
mov
xor
test
gs
dec
adc
popf
lahf
mov
les
push
insl
sub
mov
in
psllw
mov
aas
push
jp
add
inc
in
lock
leave
mov
daa
cli
adc
sahf
jb
mov
in
and
adc
jecxz
inc
cltd
lahf
out
push
aam
insb
ja
jp
call
push
gs
test
mov
pop
xchg
mov
movsb
push
scas
mov
or
fdiv
bound
lahf
mov
and
mov
or
mov
jp
sbb
inc
jae
mov
pusha
std
or
mov
mov
scas
or
rorl
mov
fldl
pop
outsb
test
pop
inc
outsb
es
mov
sbb
sbb
in
lock
ficoml
add
cmp
in
cmp
add
scas
jecxz
jno
cmpsb
mov
sub
test
cmp
aas
icebp
xor
jmp
inc
xor
jo
cld
fldl
adc
and
and
jp
xchg
daa
lret
xor
cmp
mov
and
ljmp
fnsave
cmpsb
add
add
xor
test
icebp
inc
rorl
jg
gs
push
scas
inc
inc
or
jb
pop
aam
ret
push
inc
cmpsl
xchg
test
mov
push
jo
cmp
imul
xchg
hlt
daa
xchg
push
push
cs
mov
cmp
hlt
ror
push
pop
mov
adc
idivb
gs
and
inc
inc
aaa
lret
jo
lahf
sbb
cmp
ja
cld
bound
or
cwtl
pop
lods
sub
and
dec
dec
cld
sub
nop
jns
sbb
idivl
inc
shrb
pop
lods
jo
sub
outsl
inc
stos
sbb
push
daa
decb
inc
mov
push
js
add
ret
xchg
fistpl
dec
repz
pop
shl
mov
dec
dec
xor
insl
mov
or
mov
movsl
outsb
mov
shll
mov
inc
jnp
lcall
add
xchg
adc
lret
lea
or
mov
test
out
mov
inc
inc
mov
call
in
mov
rcll
movsb
xor
mov
adc
push
jle,pn
arpl
loope
stos
stos
jmp
dec
nop
stos
out
int3
pop
imul
stos
into
outsb
mov
cmpsb
cmp
pop
mov
pop
andl
pop
loop
pop
stc
mov
push
jno
mov
lds
inc
imul
popf
dec
inc
xchg
or
arpl
xchg
fwait
imul
sahf
lods
xchg
xchg
pop
clc
rcrb
out
xchg
xchg
in
fimull
js
mov
push
cmp
fnstsw
in
dec
mov
outsl
pop
lods
pop
pushf
xchg
pop
inc
into
fdivl
jnp
pusha
std
ljmp
and
scas
xor
ds
xor
insb
xor
das
test
pop
adc
les
mov
mov
jne
push
push
cwtl
rorl
ds
fsubr
and
jecxz
jne
mov
push
mov
pop
icebp
mov
popf
gs
std
ja
in
loope
jno
aas
jnp
lods
add
cmp
mov
aad
aas
leave
jmp
xchg
inc
inc
cmp
movsl
int
in
sbb
fnstcw
mov
sbb
xchg
push
cltd
pop
mov
movsl
lock
fildll
stc
or
mov
add
push
fsubrp
or
loopne
xor
inc
or
jno
mov
or
mov
mov
push
out
jo
imul
and
mov
js
fists
cmpsl
rol
add
sbb
aaa
mov
mov
lock
scas
fs
or
dec
lods
push
mov
sub
mov
in
notb
std
or
push
outsb
ja
iret
out
add
xor
inc
jge
mov
cmp
push
push
gs
js
aad
addl
jno
stc
mov
dec
or
push
les
cmp
mov
dec
jae
xlat
out
fwait
inc
in
mov
movsl
stos
lcall
xchg
cli
addr16
cmc
out
test
mov
pop
hlt
or
push
pop
fildll
xorb
int3
pop
aam
push
and
fucomp
imul
mov
xchg
cmp
aas
push
cmp
popf
xlat
mov
mov
pop
orb
mov
in
loopne
jmp
int3
mov
lock
and
test
ret
fwait
sbb
or
xchg
mov
pop
lahf
xchg
in
sbb
mov
sub
xchg
orb
add
sahf
out
add
shrl
pop
pop
jne
xchg
call
mov
sbb
pop
mov
cmpsl
icebp
ss
sbb
push
xlat
shrb
xlat
xor
mov
push
pop
sbb
sbb
jb
andps
jne
mov
fs
or
rorb
inc
jbe
es
mov
add
cmp
and
xchg
or
xor
mov
aam
inc
in
mov
cmc
sub
fistpll
xchg
and
xchg
xchg
cld
sub
push
jl
or
push
sub
mov
sub
xchg
ficomps
and
lcall
mov
or
add
pushf
jns
mov
dec
and
stc
mov
jnp
dec
xlat
pop
xchg
pop
sbb
inc
push
test
cmp
ja
jge
push
mov
adc
xchg
popf
faddp
adc
inc
jae
pop
arpl
cltd
jbe
leave
enter
dec
cmp
lret
test
dec
fiadds
adc
inc
daa
test
sbb
rcrl
lcall
ljmp
cwtl
and
aam
mov
jne
xlat
or
inc
push
sbb
cmp
inc
xor
mov
test
mov
ret
sbb
imul
cmpsl
notl
jo
mov
sub
pop
icebp
sub
std
adc
mov
loop
mov
adc
push
out
cmp
testb
sbbb
js
aas
cmp
outsl
shll
and
leave
push
xor
cmpsb
inc
fcmovb
mull
aad
jmp
movsb
lahf
mov
hlt
inc
jecxz
dec
in
cmpsb
rcll
add
pop
test
jb
mov
shlb
fnstenv
pop
xchg
arpl
pop
aas
andb
jne
mov
movsl
dec
push
jbe
push
sub
movsb
hlt
popa
add
repnz
jecxz
fisttps
xchg
aad
mov
insl
sub
call
xlat
cmp
fiaddl
fnstenv
pop
cmp
adc
sbbl
xchg
jp
mov
and
movsb
adc
loop
sbb
lods
or
repnz
mov
mov
adc
adcl
fwait
mov
mov
sub
das
mov
pop
sub
insl
or
xchg
push
sbb
insb
mov
dec
push
shll
lds
aad
sub
mov
adc
addr16
fs
inc
repz
mov
fucomp
js
add
jo
loopne
mov
xor
lcall
cmp
mov
cmp
sbb
xchg
lock
shlb
std
das
ja
sub
jo
ret
fmulp
add
adc
and
xor
repnz
movsl
cmp
lret
ret
jg
pusha
mov
lret
jmp
mov
mov
in
adc
or
lds
scas
movsl
das
dec
icebp
call
out
jae
mov
movsb
mov
or
jno
jno
js
inc
push
idivb
andl
jno
add
cld
cmp
dec
jns
adc
dec
les
pop
adc
jl
adcl
lods
enter
rcrl
out
push
fwait
sarl
hlt
mov
insl
jns
mov
popa
loopne
aam
cmpsb
pop
outsb
aam
xor
pop
xchg
fxch
xor
dec
and
add
insb
arpl
mov
xchg
dec
xor
pop
cmp
in
shl
inc
sub
mov
push
mov
cli
fsub
std
fsubrl
test
negb
ficompl
movl
fstl
movsb
push
dec
mov
sub
mov
pushl
xchg
mov
js
lds
and
mov
rcl
cld
inc
and
pop
push
shl
cmp
in
out
sarb
jo
cmpsl
mov
jp
pop
aas
xchg
mov
and
cmp
push
in
mov
xchg
sti
cmp
movb
in
insl
push
daa
pop
cli
fdiv
cwtl
std
cli
push
scas
mov
sarl
or
rolb
addb
incl
icebp
push
movsl
or
sbb
xlat
iret
inc
clc
mov
insl
inc
mov
push
cmp
sub
loopne
jns
lea
xchg
jmp
xor
dec
mov
scas
mov
push
xchg
xchg
out
xchg
repnz
nop
mov
stos
push
flds
lcall
mov
clc
pop
aad
pop
popf
sub
xchg
enter
or
sub
pop
mov
add
call
aam
out
mov
ljmp
dec
aas
xchg
popa
std
cs
stc
ficoms
lock
outsb
cmpsl
mov
add
ret
cmp
pop
in
out
push
ds
adc
clc
shrb
out
add
add
mov
test
lret
inc
sti
push
and
outsl
pushf
stc
jo
mov
adc
aad
mov
pop
xor
ss
push
test
jne
adc
iret
rcrb
mov
cmp
sbbb
sbb
fistpll
jmp
popa
lods
leave
mov
xor
push
fwait
mov
xor
dec
outsb
fldenv
dec
popa
sti
lods
push
add
dec
std
aaa
mov
in
leave
das
add
mov
xchg
sbb
out
repz
arpl
and
popa
pop
inc
push
test
clc
xor
pop
popa
mov
fistpll
outsb
movsb
fnstsw
rcr
jnp
xchg
mov
pop
scas
outsl
fsub
mov
fcom
sub
dec
scas
push
aam
xor
outsb
mov
aad
dec
div
cmp
outsl
nop
lret
rol
movsb
arpl
push
adc
pop
mov
fwait
xor
dec
addr16
lret
jbe
inc
sub
cmpsl
pop
add
in
add
lcall
insl
scas
das
add
stos
pop
out
push
bound
adc
mov
pop
fidivrl
inc
jne
mov
mov
dec
pop
je
jle
fcoml
jnp
xchg
xor
dec
mov
pop
lahf
or
jle
js
ret
adc
rcl
mov
push
adc
outsb
imul
sbb
push
jns
or
cld
add
push
shl
ret
dec
mov
fiadds
std
out
xorl
cmp
xor
jle
scas
cmc
scas
add
mov
jno
inc
xchg
mov
insb
mov
enter
and
or
decl
lods
or
push
xchg
cmp
and
jne
xchg
mov
das
call
lcall
addb
push
je
jnp
push
push
pop
sub
ljmp
cmpsl
mov
iret
pop
sahf
xchg
dec
ror
sarb
jge
cs
sub
shrl
dec
mov
and
mov
mov
fs
data16
inc
dec
imul
pop
xchg
jle
sub
jg
and
push
mov
dec
stos
aad
int
sbb
sub
pop
adc
xchg
addl
test
aam
xchg
ret
fbstp
aam
sbb
mov
mov
and
outsb
jecxz
and
lahf
loopne
and
enter
xor
mov
sub
out
fidivrs
in
mov
adc
mov
cmpsb
sub
stos
adc
dec
aas
pop
sbb
fldl
xchg
xor
stc
js
fdiv
mov
mov
inc
push
jno
das
fisubrl
out
test
fidivrs
jp
addr16
jno
shrb
out
out
mov
adc
jae
lds
or
lods
xchg
dec
sbb
dec
inc
into
xchg
pop
std
mov
inc
icebp
shr
rolb
dec
cltd
mov
xchg
mov
addl
xor
pop
lret
mov
cmp
fisubl
data16
into
dec
pop
jl
scas
pop
sti
push
pop
lds
popa
mov
hlt
pushf
fldenv
lret
push
rcll
ret
lret
idiv
cmp
jg
mov
sbb
mov
lods
mov
jo
xchg
mov
or
and
mov
pop
cmp
add
or
cmpsl
ret
stos
jne
cmpsl
and
andl
add
push
add
xchg
push
xchg
sbb
adcb
cmp
in
lret
mov
or
int
lahf
inc
xor
adc
lcall
xchg
les
iret
iret
std
mov
and
ficomps
enter
ds
dec
popf
data16
cmp
xor
mov
test
jae
add
lea
mov
scas
sub
rcll
mov
xor
cli
pop
pop
lds
fidivl
push
jbe
push
shrl
andl
push
into
hlt
test
jmp
pushf
pushf
imul
loop
and
ja
jbe
and
lcall
and
lret
sub
jmp
loop
dec
movsl
or
push
sahf
cld
mov
mov
adc
jnp
cmp
add
lahf
mov
icebp
sub
and
add
jle
jo
push
movb
jl
sub
imul
dec
jmp
fsubrs
sbb
dec
fstl
dec
fistpl
ds
xor
jl
and
insb
dec
push
out
jnp
mov
pushf
les
jbe
mov
in
movsb
andl
icebp
xor
cltd
pop
or
sub
mov
repnz
fdivl
dec
sbb
cmp
xor
xchg
cmc
jne
aad
fisubs
pop
pop
lahf
or
movsl
mov
daa
xchg
out
mov
stos
mov
imul
out
lock
mov
fimuls
call
repnz
dec
fldenv
popa
in
pop
mov
inc
stos
addr16
xlat
loopne
icebp
xor
movsl
jg
popf
sbb
cmc
or
cld
or
loopne
xchg
fsts
std
lret
adc
add
jge
sbb
mull
xchg
pop
scas
lea
in
jge,pn
data16
push
pop
movl
or
sbb
jl
jl
sbb
mov
xor
gs
adc
adc
pop
sbb
imul
add
add
jp
cmc
aam
nop
cmp
push
nop
or
mov
scas
popa
mov
es
out
ds
cmp
mov
sub
ficoml
jns
jne
mov
ror
add
test
std
adc
addr16
fs
cmc
mov
pop
fcmovnbe
or
shr
mov
adc
add
push
ja
scas
dec
iret
xchg
xchg
outsl
jmp
dec
out
mov
push
in
mov
xchg
fsubl
mov
cld
stos
and
mov
mov
lods
xor
cs
pop
mov
lods
lret
and
mov
in
fistl
movsl
leave
sub
sbb
aad
das
mov
aas
out
ja
and
loopne
pop
ficoms
push
out
mov
xchg
mov
adc
inc
mov
sbb
rcl
dec
imul
push
sbbl
mov
push
std
add
out
xchg
aas
cmpb
jge
lret
lea
sahf
xor
jecxz
das
mov
inc
movsl
sbb
je
test
jg
insl
xlat
jns
lods
sbb
jge
bound
add
lods
xor
mov
and
fsubp
lock
stos
push
mov
push
jne
dec
and
stos
jl
and
mov
pop
adc
cmp
repz
xor
inc
rorb
fstpt
xchg
mov
pop
jl
and
xor
shlb
sbbl
in
pop
add
lea
sbb
mov
mull
xchg
dec
sbb
add
in
in
sbb
push
xorl
push
leave
leave
adc
inc
int3
pop
pusha
mov
imul
xor
out
dec
enter
add
lock
jecxz
imul
push
insl
sbb
sub
push
in
aaa
flds
in
lcall
int3
aam
mov
fisubs
iret
lahf
lods
mov
add
ds
out
inc
pop
xorl
cmp
xlat
lret
cs
push
dec
pusha
addb
inc
dec
fdivrs
push
mov
inc
cmp
xchg
sbb
mov
sbb
addr16
lret
adc
loopne
sub
roll
mov
mov
shlb
xor
sti
and
fs
ljmp
rcr
cmc
sub
push
loopne
dec
jmp
fwait
mov
mov
xor
in
xor
jo
icebp
sub
jnp
test
imul
cmovge
push
out
das
loop
sbb
lcall
cmp
adc
orb
jecxz
xchg
mov
cmp
outsl
out
cmpsb
push
xchg
cltd
sarb
jl,pt
push
inc
aas
sub
mov
adc
push
ds
xor
xor
push
mov
lret
fwait
pop
shlb
lods
cmpl
push
fsubs
lret
aad
cmp
jl
jne
out
outsb
jecxz
xchg
push
fidivs
shrb
lcall
mov
lret
adc
lahf
cmpsb
sbb
addl
cmp
mov
test
mov
mov
cmpsl
sub
sbb
jl
incl
jg
sub
into
adc
mov
stc
and
sbb
xchg
mov
out
bound
cs
mov
lret
jmp
jmp
call
leave
sub
clc
mov
xchg
bound
divl
push
roll
mov
mov
lret
push
scas
pop
sbb
or
jl
xchg
popf
popf
loopne
std
loop
mov
jno
movsl
ds
inc
xor
mov
mov
pop
cli
test
adc
adc
cmp
mov
jmp
aam
pop
pop
sub
scas
daa
lret
test
pop
pop
das
out
jmp
mov
imul
xchg
les
lock
pop
mov
jg
push
mov
call
xchg
jno
cli
lcall
fildl
jl
sub
dec
xor
aam
push
lea
cmpsl
test
xor
test
sub
push
insl
xchg
roll
lods
mov
push
push
movsl
lods
mov
jmp
sub
out
repnz
arpl
lret
jg
jne
xor
dec
test
scas
xchg
pop
out
mov
or
fcoml
testl
push
dec
sub
jnp
dec
outsb
enter
pop
cli
inc
fs
add
fisubrs
adc
movsb
hlt
int
jl
add
xchg
mov
cmpl
repnz
jmp
mov
mov
mov
xchg
aad
jecxz
scas
or
pusha
gs
rcr
or
cmp
dec
xchg
test
cmp
test
lcall
push
inc
jge
or
or
and
jle
xorl
pop
sti
mov
mov
aad
pop
lock
and
adc
aas
aaa
out
xchg
xchg
pop
xor
lock
out
daa
mov
cmc
aad
aaa
jg
pop
nop
or
sbb
cmp
xor
xchg
or
aaa
insb
xchg
testb
mov
hlt
sti
js
data16
push
sub
cli
add
mov
or
sub
hlt
out
outsb
fsubl
ja
sbb
popa
mov
mov
mov
jp
out
mov
inc
loope
lea
test
push
xchg
dec
jl
push
cwtl
jecxz
movsl
pop
cmpsb
out
stos
pop
mov
dec
xor
jg
aaa
and
jle
sbb
adc
dec
adc
lods
mov
push
mov
rep
sub
fsubrs
sarl
xchg
cmp
pop
cs
inc
fldcw
sbbb
fs
adc
mov
xchg
out
bound
cmp
jp
xchg
xchg
sub
mov
adc
xlat
cmp
mov
andb
dec
push
lret
adc
pop
xorl
or
jbe
adc
cmp
test
jg,pn
rcrb
sub
rclb
sbb
lret
loope
adc
fcom
dec
iret
xlat
es
jbe
adc
sub
jg
mov
andl
rol
pop
and
aad
aad
mov
lods
add
mov
sbbb
pop
jp
push
outsb
pop
pop
and
mov
adc
dec
cmp
stos
cwtl
in
dec
gs
add
pop
jnp
pop
insb
repnz
mov
jo
std
shl
and
insb
scas
int3
sub
ss
push
sbb
dec
sbb
mov
xor
es
dec
adc
mov
adc
or
sbb
out
out
sbb
clc
and
dec
test
xchg
dec
xor
or
popf
cs
push
dec
fldl
popl
inc
dec
pop
mov
adc
and
xlat
aad
or
xor
in
jmp
sarl
or
cltd
push
fldcw
mov
jp
push
repnz
dec
add
pop
sub
inc
sub
bound
dec
inc
fidivrs
mov
inc
inc
sbb
push
fisttps
adc
orl
arpl
xlat
mov
push
mov
pop
jp
jnp
dec
dec
sti
hlt
aaa
xchg
rep
add
arpl
sbb
jecxz
ret
cs
mov
aam
push
xchg
ficompl
inc
pop
hlt
call
rclb
sbb
mov
paddusb
xor
xchg
pop
xchg
insl
jl
cld
imul
inc
pop
cmp
jno
fmull
iret
out
inc
pushl
mov
push
divl
gs
inc
mov
sar
movups
sbb
cltd
fbstp
or
cwtl
daa
mov
arpl
and
cmp
les
sub
inc
xor
nop
cmpsl
aas
inc
mov
push
cmp
hlt
out
loop
pop
ret
aam
and
in
mov
or
xor
pop
xor
mov
outsb
dec
test
mov
mov
or
sub
adc
shrb
fdivs
push
cwtl
lds
sbb
int
sbb
stos
adc
fwait
and
cmp
add
xchg
mov
sub
mov
fidivs
in
jecxz
stos
jbe
mov
fldcw
adc
loop
cmp
sub
rolb
call
mov
mov
int
int3
movsb
cmc
test
fisttpll
es
and
adc
call
lods
aas
out
adc
es
dec
popa
mov
lds
insl
adc
je
ret
jae
push
mov
pop
shrl
cmp
shrb
jno
inc
or
bound
sub
push
xchg
add
jmp
and
div
popa
loop
dec
stc
imul
daa
sub
je
sbb
pop
push
int3
xchg
addr16
mov
jb
pop
xchg
aad
in
adc
loop
fs
popa
push
cwtl
pop
gs
sub
icebp
int3
mov
sbb
cwtl
sub
sbb
fs
jne
mov
cmp
xchg
pop
imul
cmc
push
and
xor
loopne
dec
sti
fstpl
and
pop
push
lock
sarl
shrl
xor
syscall
ss
test
hlt
insl
xchg
xor
arpl
popa
fs
es
dec
std
lret
les
das
cmpsb
add
aas
stc
in
decb
sti
and
mov
dec
mov
mov
xchg
sub
and
cmp
push
aas
subb
out
movsb
mov
cltd
cld
out
outsb
repnz
fsubrs
mov
fsubrl
shll
mov
insl
and
add
jmp
mov
pop
jle
inc
xor
aam
adc
lcall
sarl
push
mov
mov
fs
addr16
mov
push
in
stc
and
outsl
arpl
push
out
test
mov
dec
inc
push
jne
lea
mov
outsb
inc
out
pop
or
pop
loop
push
cmp
mov
inc
add
mov
out
push
pop
adc
cld
mov
hlt
and
ss
mov
fs
jg
mov
or
and
cwtl
int3
out
sbb
pop
mov
push
and
ja
cmp
idivb
pop
or
shll
imul
fimuls
cmpsl
xchg
sti
andl
xor
inc
inc
pop
mov
popf
inc
jns
in
insb
pop
jle
icebp
das
dec
hlt
xchg
es
dec
fdiv
jg
vcvttpd2dq
sub
popa
test
cmp
ss
push
push
icebp
dec
and
cmp
mov
pusha
adc
movsb
inc
dec
ja
push
leave
or
sbb
xor
xchg
enter
mov
lods
cmpsb
sbb
pop
cmp
cld
movsb
push
sbbl
sub
iret
xchg
inc
repz
and
sahf
adc
jl
push
lea
jp
cmpsb
mov
clc
and
push
push
out
mov
dec
fsubrl
roll
ss
adc
push
xor
sarl
mov
mov
adc
pop
dec
mov
mov
cmpb
mov
sbb
shrb
fucom
sbb
addr16
out
iret
insb
test
push
add
xchg
ljmp
in
dec
pop
mov
aad
scas
add
cmpl
rcr
cli
inc
cmp
notb
xchg
mov
sti
loope
lahf
mov
jp
stos
enter
sub
cmc
pop
cmp
mov
cmp
ss
and
and
subl
les
jb
xchg
cmpl
add
mov
dec
shll
dec
loopne
xor
inc
ss
push
fcoml
push
shrb
mov
movb
lret
ja
cmc
xlat
sbb
outsl
in
cmc
imul
test
xchg
pop
jae
lods
pop
and
icebp
push
jecxz
mov
dec
adc
hlt
mov
xchg
lock
lock
in
aaa
push
call
std
hlt
stos
mov
pop
cmc
jmp
xchg
ret
rcrl
ror
dec
gs
inc
stos
icebp
ret
and
outsb
dec
sbb
daa
lock
test
adc
vmread
lret
jmp
push
and
xchg
fcom
insl
cmp
jg
lahf
aaa
inc
and
iret
sub
arpl
push
xlat
cmpsb
inc
popa
sahf
repnz
stos
orl
mov
add
or
mov
cmp
sub
jmp
aaa
mov
movsb
cmp
and
inc
dec
data16
add
pusha
imulb
pusha
or
pushf
xchg
pop
pop
add
sbb
jno
xor
and
inc
jb
mov
mov
mov
add
loope
cmp
jnp
adc
mov
jge
ss
in
and
mov
or
ret
in
dec
and
or
mov
shl
sbb
dec
xor
mov
adc
fs
push
sub
fldcw
scas
ljmp
stos
shlb
jbe
fisttpl
jge
cmp
push
sub
xor
xadd
jmp
in
dec
in
fwait
cli
ss
adc
push
gs
ja
inc
loope
and
push
pop
loopne
jmp
fucomp
stc
mov
push
xor
fnsave
test
inc
sub
inc
enter
mov
leave
xorl
les
in
xor
push
mov
cld
in
push
fwait
xchg
cmp
mov
sub
lods
jne
push
cmp
out
mov
push
sub
jb
lret
cmp
adc
test
jbe
xchg
pop
fisubrs
sarl
cmp
add
scas
push
jle
lahf
aas
mov
cmp
jne
sub
aad
idivl
out
pop
aam
dec
jge
jb
cltd
lret
cmpsl
jmp
inc
jne
cmp
stos
or
cmp
mov
mov
sar
add
jg
cmp
adc
mov
mov
mov
adc
mov
or
scas
shll
mov
shlb
inc
fs
cmp
bound
imul
lods
sbb
jns
dec
mov
mov
xacquire
bound
dec
xchg
push
insb
outsl
sbb
scas
cmpsb
out
testb
pop
hlt
cs
daa
mov
mov
jp
sahf
push
jbe
lods
and
cmpsb
pop
test
push
rcrl
or
sti
mov
cltd
inc
leave
daa
or
inc
loopne
jns
pop
lods
imul
mov
enter
imulb
cmp
cli
repz
sub
shlb
mov
mov
mov
xlat
mov
nop
sub
dec
faddl
ret
mov
jmp
and
fsubs
mov
cmp
std
sbb
add
fldt
arpl
cmp
scas
mov
lods
scas
jae
add
mov
andl
ljmp
in
mov
dec
xchg
shlb
sub
sbb
in
in
add
jbe
mov
stc
roll
hlt
sbb
movsl
fld
pop
loopne
je
jg
pop
sub
iret
das
in
adc
cmpsb
mov
int3
add
lea
lods
xchg
sub
aad
hlt
xchg
push
cli
loope
cld
movsb
mov
mov
cs
mov
icebp
xchg
ret
call
and
xor
mov
cmpsb
cmpsb
scas
call
jl
aaa
bound
add
push
outsl
stos
sti
pop
lcall
cmp
mov
xchg
stos
inc
inc
loop
cld
mov
or
lods
xchg
jmp
std
dec
fisttpll
scas
hlt
jns
sub
test
xor
cs
sub
and
daa
dec
cmp
fmulp
and
cwtl
mov
mov
adc
cmp
add
jb
adc
sbb
aaa
jge
in
in
sarl
fbld
mov
sub
jb
xor
push
lods
pop
push
aas
lods
jmp
cmp
jbe
push
in
dec
dec
jl
sub
pop
ret
jp
dec
call
test
icebp
call
jge
xchg
imulb
repnz
xchg
push
mov
push
fildll
mov
ljmp
push
int3
out
rolb
lock
aam
or
test
int3
mov
add
inc
jno
je
jmp
inc
add
loope
ret
idiv
and
dec
jnp
js
pop
ljmp
inc
stos
jns
mov
jae
push
sbb
add
jmp
into
popf
bound
ret
in
push
add
loopne
sub
push
dec
inc
xchg
jmp
fstpt
add
jns
scas
mov
and
mov
arpl
cmp
enter
ljmp
aaa
fadd
or
adc
mov
mov
add
ljmp
loopne
cli
pop
jne
mov
lcall
fs
or
aas
pushf
sbb
sbb
outsb
shrl
test
in
push
push
imul
dec
decb
ds
jb
sbb
xor
test
lock
in
rcrl
arpl
out
mov
jge
push
popf
sub
cwtl
neg
pop
mov
xchg
xchg
int3
sub
je
add
pop
arpl
shlb
popf
xor
adc
jo
cwtl
scas
shl
repnz
adc
mov
fistps
inc
jg
inc
xchg
repnz
xor
xlat
sub
mov
push
xchg
mov
in
jge
push
insb
daa
cltd
popl
mov
cld
sar
lret
sbb
outsb
lcall
adc
movsl
sub
es
sbb
sub
enter
jg
adc
lcall
mov
lcall
scas
dec
bound
mov
add
pmuludq
pop
cmc
dec
push
push
mov
je
fbld
loop
mov
mov
and
dec
push
sbb
mov
subl
das
add
xor
pop
int
adc
repnz
lret
lret
popa
dec
lret
jge
fmul
movsl
scas
pop
sbb
rcll
pop
adc
mov
fwait
stos
mov
jnp
xchg
mov
in
xor
sahf
mov
add
test
lret
cmp
rol
inc
movsb
mov
jmp
es
pop
ds
xchg
inc
cmp
sbb
mov
ret
jle
xor
ja
int3
inc
js
push
lahf
sahf
nop
arpl
fidivl
add
mov
daa
pop
vpshuflw
loopne
mov
push
jmp
js
mov
les
inc
rorb
mov
sbb
add
inc
ret
add
lods
testb
jno
and
fs
inc
pop
iret
sub
scas
mov
pop
popf
ret
pop
pushf
mov
xchg
dec
jne
sub
cli
gs
push
mov
inc
in
rorl
mov
lahf
dec
shlb
lcall
push
adc
dec
lahf
popa
pop
sbb
int
hlt
testl
icebp
xchg
leave
in
xchg
mov
popa
and
subl
out
sub
xchg
add
cmp
or
xchg
sbb
jae
aaa
and
push
out
xor
lds
add
sbb
mov
lea
mov
jmp
sub
test
insb
mov
sub
das
stos
add
loopne
pop
addb
dec
repz
jno
outsb
xchg
push
fs
jmp
lret
sub
scas
inc
pop
or
int
pop
sbbl
xchg
pop
sub
mov
bt
mov
pop
loopne
dec
mov
out
rcrl
into
add
cmp
ret
sub
shr
push
lret
dec
sub
jne
test
jmp
add
sub
xchg
lcall
pop
add
xorl
test
out
or
pop
mov
scas
mov
shll
iret
pop
es
adcl
cmp
iret
xchg
jmp
push
rol
imul
lods
nop
lcall
movsl
sub
adc
movsb
jae
loop
icebp
loop
test
in
xor
pop
je
adc
shlb
pushf
js
rorl
das
jle
call
orl
cs
lds
xor
or
shll
sub
es
mov
jb
ljmp
push
in
xor
pop
push
push
dec
inc
aas
sbb
shlb
clc
out
addb
mov
xchg
movsb
lods
or
dec
arpl
mov
xor
lods
mov
ja
dec
std
add
fs
dec
pop
std
cmp
pop
fwait
and
pop
xlat
ficompl
loop
loop
hlt
icebp
cmp
mov
lahf
xchg
ds
int3
mov
in
or
lret
insl
aaa
outsb
mov
imul
cmp
sarl
xchg
movsl
cmp
shlb
mov
outsb
stc
mov
std
or
aaa
psllw
inc
repz
xchg
aas
rcrb
andb
adc
insl
inc
in
cmp
gs
add
repnz
out
cmp
cmpsl
xor
cmc
faddl
mov
jge
jp
mov
pop
xchg
xlat
mov
cli
adc
cmc
sahf
push
cmp
pop
mov
dec
stos
clc
sub
ja
mov
xchg
movsb
sbb
mov
lock
filds
adc
arpl
pop
test
repz
lods
lret
push
test
shlb
xchg
insl
add
cwtl
gs
mov
sbbl
inc
out
fcmove
mov
shlb
imul
inc
and
push
lods
cmpsl
shlb
adc
idivb
or
push
imul
or
leave
and
inc
cld
sbb
lret
xor
mov
std
dec
and
cmp
xlat
ds
cmc
movsl
mov
int3
add
and
pop
in
gs
mov
or
andl
int3
fnstsw
rcl
inc
mov
xchg
adc
xor
or
mov
pop
leave
test
movsb
daa
jno
push
mov
pushf
testb
out
test
rcll
ret
sarl
ss
movsl
std
mov
into
test
les
sbb
add
out
test
pop
push
push
je
dec
rolb
push
xchg
std
inc
xchg
mov
mov
push
aam
cmp
add
imul
inc
or
adc
sbb
dec
aad
imul
pop
aas
packssdw
inc
adc
inc
loop
inc
sbb
in
mov
jne
mov
es
mov
addr16
cmp
ja
pusha
inc
dec
jecxz
cli
jnp
jnp
adc
jns
fsubrp
ja
js
clc
jo
out
or
inc
cmp
cmp
mov
fisubrs
jp
rorb
dec
leave
pop
jp
mov
or
addr16
pop
in
push
ljmp
stc
xchg
enter
jnp
and
fbstp
mov
in
outsb
xchg
add
pop
incb
xor
les
xchg
rolb
lea
jne
lea
rcl
out
stc
leave
outsb
xchg
jb
into
mov
test
mov
jmp
repz
adc
pop
dec
popf
adc
xchg
cmpl
sub
pop
mov
call
repnz
jnp
xor
imul
repz
in
push
out
fidivs
lea
dec
fdivrp
loop
insb
lret
mov
pop
aad
cmp
mov
inc
mov
incl
push
aad
add
mov
call
add
loopne
add
out
sub
jg
outsb
xlat
pop
sub
dec
or
arpl
mov
aaa
add
cmp
fs
mov
push
xor
mov
pop
xchg
xchg
adc
inc
loop
or
int
sub
mov
stos
pop
adc
mov
jne
orl
and
xchg
adc
xchg
sub
sarb
mov
mov
sub
push
out
test
ljmp
jl
adc
aaa
jg
mov
dec
push
roll
out
imul
ret
nop
pop
push
rorl
loope
fisubs
in
push
mov
lahf
enter
out
sbb
idivb
pop
cmpsl
dec
jge
mov
inc
bsf
lds
xchg
cltd
cltd
and
inc
je
out
mov
int3
call
mov
or
cmp
nop
mov
leave
aas
scas
mov
sbb
jecxz
lret
bound
cwtl
mov
jmp
test
adcb
push
pop
jae
mov
cmp
dec
push
in
fsubr
xchg
fwait
sbb
cmpsl
mov
sbb
cmpsb
push
push
sbbl
pop
xchg
loopne
shrd
cmp
clc
sbb
idivl
sub
or
pusha
in
outsl
mov
xchg
stos
sub
add
mov
pop
sbb
mov
mov
stos
pop
mov
add
pop
add
jns
lds
pushf
cmp
lret
out
orl
mov
in
dec
inc
push
lcall
cli
mov
mov
fisubl
test
ss
mov
inc
in
adc
test
sbb
add
jl
xchg
push
dec
rcrb
lcall
lahf
xchg
cmpsl
das
insl
push
push
lret
ljmp
mov
mov
cwtl
jl
mov
push
dec
mov
mov
inc
ljmp
es
leave
lcall
push
or
pop
mov
popf
scas
lahf
cmpl
xor
int3
sbb
arpl
enter
mov
mov
aam
fwait
jle
ja
lret
lcall
pop
push
shlb
sub
adc
mov
sub
loop
and
fwait
jecxz
jp
addb
cmp
pop
test
cmpsl
jmp
cmp
in
xchg
adc
dec
xchg
dec
sub
dec
js
testl
ds
leave
pop
outsl
mov
pop
add
mov
imul
push
mov
cmp
add
nop
cmp
popa
push
shll
mov
push
lods
push
mov
out
push
and
mov
adc
mov
inc
xchg
jnp
test
addr16
mov
stc
idivb
or
mov
out
jbe
out
jmp
cmpsb
lret
out
stos
inc
into
mov
pop
iret
in
mov
push
push
adc
das
jle
movhps
movsl
cmp
sar
lret
mov
mov
add
mov
lds
adc
clc
ljmp
repnz
or
sbbl
pop
movsl
ss
or
xchg
std
popf
repz
ljmp
inc
lock
and
repnz
pop
sti
mov
out
push
sub
dec
les
inc
sub
pop
inc
sub
push
imul
mov
and
mov
movsl
loop
fisttpl
dec
ret
and
aad
sahf
add
aam
pop
cmp
popf
test
cmpsl
xchg
cmp
xor
inc
lock
mov
ficompl
lds
and
dec
jnp
xchg
pop
aam
frstor
mov
pop
je
mov
shll
mov
or
inc
inc
sbb
push
std
cmpsl
dec
inc
dec
pusha
data16
fnstcw
inc
mov
sbb
push
lods
addr16
iret
pop
in
ss
add
or
movl
popf
mov
test
les
sbb
rorb
adc
sbb
lock
shl
enter
pop
test
jno
cmpsl
lcall
fstl
sti
ss
and
jbe
jb
shll
jge
data16
or
loope
shll
jl
mov
movsl
repnz
inc
add
cmp
movsl
mov
mov
cld
in
and
add
cld
push
adc
scas
dec
push
punpckhbw
and
add
cs
dec
mov
cmp
xlat
adc
and
mov
dec
fistl
idiv
fwait
mov
scas
leave
jmp
nop
dec
test
insl
mov
out
jne
push
jmp
push
hlt
outsl
sbb
inc
fcompl
cmpsb
shl
sbb
fcoml
into
icebp
add
xorb
xor
pop
mov
pop
and
xchg
sub
push
cld
dec
pop
fxch
sbbb
xor
push
jge
rorl
fsubrs
out
mov
jno
push
mov
aad
mov
hlt
or
jmp
push
sbb
lahf
add
scas
fdivrs
mov
movsb
dec
outsl
fldt
and
cmp
ret
or
pop
imul
aaa
xor
lds
sub
pop
adc
inc
stos
lods
jo
push
mov
adc
mov
adc
xchg
dec
leave
adc
lea
loopne
cs
leave
stos
fidivs
in
xchg
ror
data16
mov
or
push
jno
mov
sub
mov
sbb
lds
lods
daa
and
mov
ss
test
xor
and
or
daa
pop
imul
push
aam
jns
dec
push
jmp
push
pushf
push
frstor
xchg
jg
xor
ret
inc
lcall
std
jge
xchg
push
pop
push
jo
in
add
jbe
aaa
fdivs
popl
sbb
pop
outsl
and
aaa
xor
sub
hlt
cmp
cmp
cmp
jle
ja
outsb
ds
lods
lds
rorl
cli
adc
jnp
and
cmpsl
or
and
push
decl
stos
sbb
aas
scas
mov
js
pushf
and
mov
and
inc
fstp
pusha
add
mov
mov
movsb
ljmp
test
mov
xor
mov
sete
imul
ficoml
or
xor
jo
mov
repz
and
stc
xchg
jns
ret
cmc
outsl
dec
jns
adc
sbb
or
cmp
negb
fsubl
in
cmp
leave
jbe
jecxz
push
jnp
clc
fsubs
xlat
cmp
mov
arpl
pop
adc
xlat
lahf
mov
sbb
dec
push
loope
mov
pop
psubb
adc
test
push
mov
lock
jge
das
loop
int
dec
test
outsb
and
pushf
pop
or
sub
ljmp
popa
push
orb
pop
xor
icebp
inc
cs
lea
je
fldl
sbb
call
xlat
and
xor
push
or
push
ja
orl
jecxz
out
insl
es
fdivp
xor
jmp
xchg
popf
aas
mov
adc
jl
test
movsl
gs
jl
jmp
and
outsb
inc
inc
roll
nop
xchg
loope
std
mov
ret
adc
das
and
xchg
pop
push
pop
mov
lods
mov
push
aaa
add
lret
in
fsubrs
add
fisubl
mov
or
out
stc
jns
mov
mov
xchg
jbe
cmp
xchg
xor
ja
or
sub
into
aaa
pop
or
in
sbb
adc
jnp
push
loop
mov
test
xor
movsl
add
dec
leave
or
adc
or
push
nop
dec
push
sub
lods
incl
cmp
cwtl
call
packuswb
scas
jnp
cmp
cltd
jp
shl
aad
mov
fisubl
cmp
popf
dec
aam
pop
lods
cwtl
pop
push
imul
in
out
xchg
inc
mov
and
push
hlt
push
cmpsl
add
mov
push
inc
outsl
cmp
cmpsb
test
pop
mov
and
aad
xor
push
lods
add
dec
ret
frstor
test
mov
dec
adc
mov
cmp
push
add
les
xchg
fisubrl
jnp
mov
sub
lods
inc
fisubrl
and
fistpl
sub
imul
mov
imul
ror
or
lea
popa
iret
xchg
mov
mov
xchg
mov
inc
les
outsl
xchg
enter
gs
cmpsl
pop
sbb
dec
repz
mov
inc
fwait
pusha
jecxz
repz
jne
lods
sbb
pushl
xchg
popa
fistpll
adc
dec
dec
xchg
loopne
inc
pop
repnz
jb
add
mov
rolb
in
mov
fnstcw
xor
push
cmpsl
inc
adc
inc
pop
add
jmp
test
insb
adc
lahf
sub
bound
and
hlt
xchg
lret
jne
cli
ficompl
lret
fld
aas
push
mov
inc
fildll
adc
movsl
or
push
pcmpeqb
sbb
xchg
and
les
testl
adc
lahf
xor
sub
adc
pop
fimuls
shrb
es
jge
int
aad
gs
cltd
jp
sbb
js
scas
pop
sub
aam
mov
movsl
push
cltd
xchg
movsb
aaa
pop
aam
or
cwtl
mov
lret
dec
xor
push
outsb
cltd
mov
loop
pop
insl
scas
push
inc
cs
icebp
cmp
cwtl
xchg
jg
xor
pcmpeqw
inc
ljmp
inc
cli
pop
scas
outsl
jns
leave
icebp
jg
add
mov
jl
jge
movsb
push
cmp
pop
jl
lret
in
mov
or
aad
adc
push
je
jg
pushf
loopne
insb
mov
or
ret
movsl
mov
pop
rcrb
push
adc
jge
leave
xchg
pop
xor
mov
outsb
repnz
mov
jmp
jbe
sub
insl
test
pop
clc
test
add
sbb
jb
cmpsl
cs
mov
popa
jne
psllq
sbb
icebp
push
iret
inc
push
or
xor
lds
scas
loop
fstp
pushf
pop
popa
pop
std
mov
mov
stos
or
lahf
pop
sti
mov
shlb
das
movsb
dec
lret
addb
popa
outsl
jnp
leave
xchg
call
or
push
mov
sarl
adcl
jle
int3
inc
jle
fldt
test
xchg
xchg
inc
jmp
arpl
add
sub
jbe
cmp
mov
mov
test
repz
std
inc
cltd
jle
xchg
pop
loopne
ja
lret
pop
fistl
add
jge
add
mov
push
pop
push
outsb
and
loop
xchg
push
loopne
and
filds
dec
pop
push
stc
cmc
mov
and
test
lea
repz
mov
mov
notb
sub
in
xor
jecxz
aas
sbb
inc
shrb
mov
cmp
push
lods
dec
mov
mov
push
test
mov
lret
adc
inc
int3
or
and
hlt
idivl
cmp
jmp
cmp
sub
adc
shrb
mov
pop
and
jno
mov
lea
jo
movsl
pop
hlt
in
adc
sub
dec
and
ret
in
and
lock
lahf
in
fiaddl
pusha
adc
xor
dec
push
cmp
push
ljmp
add
and
movsb
add
inc
adc
xor
mov
cld
movsb
out
inc
test
and
mov
test
lock
into
xchg
pop
mov
fstps
insb
pushf
xor
adc
into
pop
xor
mov
out
jl
test
out
sarb
fwait
orl
es
jo
aaa
push
xor
or
inc
ja
out
sub
add
into
movsb
pop
mov
outsl
jo
mov
enter
cmp
inc
sub
xor
inc
movsl
add
xlat
in
pop
aaa
xor
pop
mov
add
mov
je
sub
loope
je
pop
mov
dec
mov
xor
rcrl
in
inc
es
clc
cltd
test
sbb
orb
and
cld
sub
sub
inc
je
and
push
cmc
inc
fidivs
xchg
test
or
outsb
push
dec
mov
negl
lock
pop
fists
popf
sarl
arpl
mov
js
dec
inc
xor
fstpl
out
fcomi
lret
aaa
test
cltd
insl
cli
push
mov
addr16
rcll
jp
and
nop
add
cmp
inc
popf
lret
jne
sbb
popf
fistps
mov
out
cmp
adc
sub
adc
fnstsw
das
test
jl
nop
sbb
cmp
or
push
sub
int3
push
mov
iret
mov
add
mov
lcall
clc
pop
push
push
push
dec
cmpsb
push
lret
jae
dec
mov
push
out
inc
cmp
jns
das
fstps
push
test
mov
rcl
imul
mov
cmc
int
adc
cmp
ss
jbe
sbb
ret
outsl
pop
push
lods
repnz
imul
cld
test
mov
inc
mov
sti
sbb
mov
mov
mov
add
xor
xor
dec
or
in
repnz
pusha
pop
lods
adc
adc
dec
loopne
into
loop
sahf
dec
sbbb
shll
fs
fimuls
sbb
mov
push
cld
in
fdiv
iret
xchg
jge
and
add
xchg
push
sub
dec
or
scas
xor
cmp
pop
inc
cltd
jl
sub
mov
hlt
data16
and
ret
jne
call
mov
test
jno
insl
jo
mov
test
mov
mov
or
orl
jge
jb
xchg
icebp
xchg
dec
xor
or
jmp
dec
push
cmp
pop
testb
adc
leave
sahf
sbb
test
lds
sbb
xchg
fdivs
or
cmpsb
notl
sbbb
push
test
das
jg
insl
out
out
jg
jl
cmp
les
outsl
mov
sbb
pop
jbe
pop
sbb
ret
cs
out
or
cmp
cmpsb
aad
inc
pop
ds
into
add
nop
enter
ja
xchg
fdivrs
add
ja
jl
cmp
lock
push
data16
ss
or
adc
jge
push
mov
mov
lret
cmc
sub
sbb
mov
mov
imul
int
mov
cmp
arpl
dec
cmpsb
inc
xchg
rorb
sbb
cmovae
popa
add
into
popf
mov
inc
xlat
nop
jbe
push
int
mov
mov
lahf
push
sbb
sarl
push
jmp
jl
push
xchg
push
mov
dec
sbb
cmp
jae
mov
or
cmp
mov
mov
sbb
popf
sub
inc
pushf
fcoml
sbbl
sub
sbb
and
shlb
push
cmp
pop
sar
or
push
dec
mov
iret
dec
pop
ss
lods
and
fistpl
jp
cs
pop
mov
mov
inc
dec
and
aam
mov
mov
xlat
mov
dec
xor
shlb
xor
and
nop
cmc
sub
jae
lahf
mov
push
sti
shrl
jb
dec
jle
pop
mov
mov
jno
data16
sbb
jmp
bound
insb
lea
les
lcall
jmp
xchg
dec
jmp
arpl
dec
pop
aas
daa
inc
dec
sahf
and
call
stc
push
jp
xchg
adc
sub
aas
lods
pushf
push
test
xchg
cmp
aas
xor
call
jae
pushf
ja
push
aad
inc
sub
fs
xor
push
sub
out
int3
pushf
cltd
pop
testb
mov
pop
outsl
pop
mov
add
leave
fwait
iret
mov
mov
adc
insb
mov
lahf
outsb
aas
push
pop
lods
adc
out
cmpsb
movsl
les
aaa
dec
pop
nop
xchg
add
push
dec
cmp
sub
or
jnp
fisubl
test
or
xor
cmp
shrl
andl
mov
mov
xchg
rcll
sti
js
inc
sub
jno
aam
mov
push
jo
cmp
push
mov
mulb
mov
xor
in
mov
mov
push
cs
push
xor
aad
jp
lcall
dec
repz
pop
aad
push
insl
mov
sarb
mov
mov
lock
push
jns
notb
sbb
cmp
mov
andb
dec
xchg
lds
inc
loope
cmp
mov
xlat
sub
push
mov
leave
push
or
rcl
cmp
fwait
adc
xchg
push
push
or
pop
cmp
xor
pop
out
loop
fcomi
xor
repz
and
in
insb
cvttps2pi
push
mov
xchg
xchg
pop
dec
jle
inc
shll
add
xchg
test
insb
hlt
stc
jns
mov
inc
imul
push
adc
mov
aad
inc
pop
mov
mov
mov
nop
sub
ja
xchg
dec
push
pop
rorl
fiaddl
outsb
jae
leave
push
jo
dec
lea
pop
inc
cmpsl
aas
push
sbb
push
dec
pop
cmpl
add
in
fcomps
add
cwtl
adc
ds
or
push
or
aad
cmp
mov
test
daa
leave
loop
xchg
std
lret
scas
mov
popa
sub
mov
aas
popa
clc
fbstp
and
movsl
pop
cmp
cmp
fisubl
dec
mov
pop
pop
pushf
subl
fisttpl
mov
dec
pop
loopne
and
testb
pop
cmp
fildll
add
push
xor
aaa
fnsave
dec
ljmp
sub
imul
sbb
mov
shl
orb
cwtl
and
inc
aam
mov
scas
and
rcll
in
inc
pop
hlt
into
bound
fidivs
mov
or
push
ret
sbb
mov
outsb
push
jns
adc
or
pop
pop
pop
fdivrs
loopne
lea
and
jmp
mov
xchg
repz
popf
rcl
scas
daa
push
shl
es
ret
rol
adc
repnz
inc
push
jle
aad
mov
fisubs
xor
cs
movsl
push
test
mul
loop
mov
add
cli
push
loope
jo
xor
enter
cmp
dec
sub
sub
cmc
push
js
loopne
test
cmp
add
ja
aas
dec
xchg
inc
out
pushf
jp
inc
arpl
lock
lock
inc
popl
or
lcall
pop
outsl
mov
filds
pushf
insb
rcrb
scas
in
xorl
out
movsb
dec
mov
loope
pop
jp
xor
xchg
mov
data16
dec
sub
stos
jb
or
das
fucomip
sbb
xor
ret
xor
adc
sub
fwait
xchg
hlt
mov
ds
insl
insb
inc
fidivrs
inc
scas
pop
je
sub
in
arpl
repnz
enter
jmp
ss
cwtl
gs
jnp
popa
push
mov
and
rorl
mov
shrl
mov
mov
lock
and
rcrb
hlt
jp
lds
pop
lahf
xchg
push
sub
dec
cmc
insl
ljmp
lods
or
lret
cmp
int3
mov
mov
pop
jb
in
call
pop
inc
adc
jge
pop
mov
and
in
leave
rcrb
push
out
mov
push
cmp
cld
inc
push
test
dec
sbb
inc
in
and
lds
push
jmp
mov
mov
rcl
or
les
orb
push
xchg
or
call
jne
and
push
mov
loop
jl
mov
insl
in
cmpsb
and
dec
daa
clc
pop
sbb
or
out
jbe
cmp
dec
xchg
add
inc
in
mov
gs
mov
je
mov
mov
jae
leave
pop
mov
sub
pop
push
xchg
push
jecxz
and
pop
pop
lahf
mov
or
repnz
mov
loope
or
mov
cmp
jg
arpl
je
jae
fwait
push
int
rcrb
xor
leave
sub
movsl
pop
lret
pushf
mov
testb
xchg
lds
mov
mov
bnd
test
pop
in
cmp
mov
sub
data16
sub
stos
stos
stos
push
dec
inc
shl
mov
js
cmpsl
ret
xor
andb
dec
adc
xchg
fmull
movsl
sub
and
cmc
popa
mov
push
pop
adc
xor
sbb
xor
xor
mov
sti
cltd
mov
mov
or
and
add
xchg
or
arpl
jmp
add
enter
jae
mov
sbb
iret
ja
iret
xchg
xchg
add
xchg
jo
xchg
jle
cmp
je
out
ficomps
fcmove
xor
jg
stos
insl
lods
test
xor
add
sub
stc
mov
jecxz
movl
out
jl
lods
fstpl
mov
adc
push
call
call
scas
rolb
mov
shlb
std
adc
pop
fidivrs
fsts
ret
mov
icebp
hlt
sbb
cmp
jbe
xor
addr16
in
bound
bound
cmpsb
pop
adc
pop
mov
mov
dec
popf
or
push
mov
cmp
mov
cmp
addl
inc
xlat
mov
pop
fs
jae
sbb
les
xchg
mov
push
xchg
push
jns
inc
mov
xchg
xchg
inc
fimuls
test
repz
lea
stos
hlt
mov
push
cmp
rcll
movsl
cld
aas
push
mov
stos
fstl
pusha
in
jbe
pop
jno
test
mov
sub
jb
push
adc
jae
shll
outsb
enter
cmp
mov
cwtl
sub
ret
sbb
and
xchg
sbb
adc
dec
cmp
jne
outsl
inc
lds
fs
scas
add
aaa
scas
sahf
push
icebp
in
lret
out
jl
mov
mov
push
push
std
aaa
cs
jnp
sub
cmp
xchg
sub
and
call
ss
outsb
sbb
mov
or
imul
adc
in
insb
jmp
icebp
mov
sbb
gs
mov
arpl
lret
or
cmp
gs
leave
pop
shlb
inc
scas
and
cmc
dec
in
push
insb
lahf
out
mov
test
test
sbb
movsb
adc
pop
fs
mov
test
xor
decl
stos
dec
cmpb
sub
sub
sbb
in
aaa
xor
icebp
sbb
call
lods
push
adc
imul
scas
ss
add
fstpt
sbb
ficoml
cmpsb
cmp
lea
xchg
inc
or
and
mov
fsubl
mov
insb
jmp
jbe
dec
fnsave
dec
andb
mov
fistl
inc
notb
xor
add
push
inc
fmul
fwait
and
mov
loopne
push
adc
sub
lods
add
sbbb
cmp
fdivrp
add
dec
mov
ss
or
hlt
inc
stos
test
call
mov
les
jno
nop
fsub
mov
adc
xor
popf
neg
int3
add
lahf
lcall
xor
shlb
sbb
insb
mov
sub
pop
push
mov
jo
insl
inc
xchg
xchg
adc
sti
mov
mov
mov
cmp
mov
mov
xlat
repnz
or
movsl
xchg
cmp
xchg
out
pop
and
rclb
cmp
or
add
bound
pop
out
repz
cmp
mov
mov
push
fstl
sbb
dec
cmp
repz
loopne
nop
fmuls
or
adc
xchg
xor
ret
scas
mov
jbe
in
mov
lods
repnz
cmpsl
push
dec
jmp
sub
dec
and
cltd
rcl
push
xchg
dec
leave
ja
cmp
popf
lock
sbb
cmovge
xchg
sub
jg
insb
jmp
test
push
in
jae
dec
call
add
mull
mov
mov
xor
ficompl
call
pushw
lret
and
mov
jno
in
adc
mov
cwtl
lea
jae
xchg
sahf
sub
adc
dec
daa
imul
in
xchg
adc
mov
aam
jg
ljmp
das
inc
ljmp
scas
lahf
mov
ja
and
je
fidivl
ror
es
stos
or
outsb
dec
repz
dec
pop
jb
sbb
insb
insb
sahf
gs
loope
fcomi
cmpsl
mov
test
jb
jne
mov
mov
jns
pushf
push
mov
dec
cld
mov
dec
pop
mov
js
pop
cmp
inc
inc
lahf
dec
or
jl
pop
jmp
adc
outsb
cmp
and
cmp
inc
icebp
dec
movsb
push
ret
xor
repz
push
dec
xchg
mov
dec
adc
mov
push
xchg
leave
pusha
orb
jp
add
push
push
push
mov
push
pop
pop
sub
adc
in
aaa
mov
out
dec
cmc
inc
loopne
cwtl
jp
push
sub
int3
mov
sbb
shll
xor
daa
lcall
pop
inc
out
orl
xor
popf
scas
inc
pop
fbld
arpl
rorl
bound
or
mov
push
jo
in
jge
mov
or
jae
inc
inc
ss
lds
popa
sbb
icebp
fsubrp
xchg
xchg
mov
repz
add
jl
and
mov
aaa
sub
out
dec
pop
loop
iret
mov
jecxz
daa
mov
xchg
xchg
cltd
loop
outsl
jl
pop
std
cmp
das
fsubrl
cmp
inc
rolb
jno
xchg
dec
pop
test
push
cmp
add
movsb
jb
pop
adc
push
push
bound
imul
testl
pop
shrb
pop
loopne
test
jecxz
xchg
mov
lret
push
jmp
sbb
subb
pop
inc
add
xor
adc
imul
insl
mov
shlb
xor
fld
mov
cmp
cmp
jmp
andb
mov
ret
pop
mov
sub
pop
mov
lds
pusha
ljmp
lret
in
or
xchg
cltd
push
rorb
sahf
hlt
cld
xor
incl
pushw
nop
mov
enter
and
lahf
stos
ljmp
sub
mov
push
adc
leave
lcall
ret
cmp
dec
cs
cmp
loope
mov
fldt
cmp
mov
andb
and
mov
sub
inc
gs
add
cmc
mov
ret
cmp
mov
test
push
inc
pop
xchg
inc
dec
sti
mov
add
jle
adc
cmp
lcall
sub
aas
lcall
or
clc
xor
mov
mov
ds
loope
aam
inc
loopne
or
mov
subb
push
mov
pop
and
or
pop
and
repnz
mov
rorl
dec
out
jge
cs
push
movsb
out
insl
inc
jmp
push
and
or
xchg
ds
popa
leave
push
push
in
js
outsl
xchg
lcall
or
jnp
xchg
inc
xor
push
clc
paddsw
mov
cli
js
aad
andb
xchg
mov
and
or
cmpsl
push
sbb
sub
mov
pop
insb
sbb
pushf
call
jb
inc
sub
sahf
jp
fnstsw
stos
mov
inc
jo
xchg
stos
jb
int
sbb
mov
add
mov
andb
mov
fisubl
jae
mov
cltd
pushf
arpl
push
adc
bnd
mov
mov
mov
jle
fidivl
cli
outsb
pop
dec
cmpsb
fldenv
mov
lret
inc
nop
es
addr16
fdivrs
pop
outsb
imul
jp
jb
jge
pop
es
orb
in
repz
sub
jle
mov
shll
les
mov
add
push
lds
int3
sub
dec
scas
inc
or
ret
push
mov
push
xor
stc
push
clc
cmp
jecxz
fildll
adc
out
adc
jg
insb
add
adc
imul
mov
mov
xchg
int
out
dec
xchg
sub
xlat
push
daa
movsl
jne,pt
shr
enter
cmp
pop
loop
or
mov
icebp
pmulhuw
loop
cmp
xor
add
mov
minps
lds
pushf
pop
lock
aas
or
sbb
repz
loope
sbb
cmpsl
jno
out
aam
sub
pop
ret
fisttpll
roll
push
out
clc
mov
push
fnstcw
popf
out
out
mov
mov
sti
inc
push
repz
imul
int3
push
push
lcall
int3
fwait
std
fstl
push
or
sahf
mov
cltd
call
adc
cmp
push
pop
xchg
scas
insl
pop
mov
mov
mov
outsl
stos
mov
sub
loope
push
das
es
ja
cmp
adcb
pusha
fcomi
mov
and
xchg
mov
and
push
negl
test
sbb
fsubrs
jmp
mov
xlat
xor
mov
fidivl
mov
js
clc
dec
sbb
sbb
sbb
pop
sbb
jg
mov
pop
nop
mov
hlt
mov
pop
into
and
notl
sbbb
mov
insl
xor
lods
shll
push
loope
arpl
and
bound
sbb
sub
dec
inc
push
test
fnsave
arpl
dec
xchg
in
sti
or
mov
mov
mov
dec
outsl
insl
sub
jecxz
xchg
loop
ljmp
jp
mov
dec
jge
sub
cltd
xchg
es
sub
mov
adc
and
insl
mov
lock
jmp
fnstcw
sbb
in
dec
mov
adc
ret
mov
push
addr16
or
dec
xlat
in
aas
or
lods
insl
stc
mov
mov
pop
xor
lret
sub
pop
xor
loopne
in
inc
mov
shrb
in
lcall
fcompl
leave
xchg
jp
je
cmp
sub
and
push
mov
dec
fsubl
or
and
sbb
mov
aas
cmpb
mov
cmp
cmp
iret
imul
jg
sub
inc
or
cli
out
das
mov
inc
inc
fstpl
mov
js
or
sbb
xor
imul
mull
inc
mov
stos
mov
cmp
insl
in
sbb
jo
mov
imull
les
xchg
movb
sub
out
clc
jl
xchg
xor
idiv
mov
add
mov
popf
cmp
dec
jmp
ds
or
or
iret
shlb
or
mov
pop
repnz
mov
fs
xor
mov
lock
xchg
cltd
mov
and
dec
jae
fsubr
push
lret
inc
xchg
adc
lock
sub
std
jae
sub
cmpsb
and
mov
jecxz
aas
in
xor
test
xchg
cmpsl
mov
push
mov
or
pop
xchg
stos
push
push
out
fisubrs
jecxz
add
push
lea
call
or
enter
test
lret
aad
stos
addr16
and
pop
mov
mov
std
popa
sub
dec
es
rcr
mov
fistpl
jge
mov
mov
mov
int
or
pandn
dec
cs
fwait
test
test
stc
mov
lcall
popf
xorl
mov
daa
ljmp
subl
xchg
inc
or
xlat
stos
mov
mov
cltd
push
adc
xor
sub
imul
rcll
cld
and
cmp
pop
int3
enterw
mov
arpl
mov
or
mov
fstps
jae
insl
mov
push
orb
dec
mov
jnp
je
addr16
sub
jl
call
sub
xchg
add
xchg
push
aaa
daa
push
sub
pop
out
test
mov
insl
filds
push
es
jp
inc
imul
aam
xor
or
xor
out
dec
sti
push
pop
dec
jae
xchg
mov
lock
jmp
jno
sub
cmp
les
shr
arpl
and
lds
mov
sub
or
jno
jecxz
xorb
dec
repnz
pop
pop
inc
lods
add
in
mov
fcmovb
shl
sbb
dec
cmp
test
or
and
xchg
scas
dec
xchg
push
loopne
scas
inc
ljmp
push
inc
fdivrs
stos
mov
adc
push
stos
and
rcl
add
ss
mov
or
mul
and
movsb
fwait
ret
sbb
dec
sub
or
sbb
push
jmp
test
mov
ljmp
psllw
test
fildl
mov
ret
ljmp
gs
add
jb
sbb
push
xor
fstps
orl
jg
xchg
jns
lock
das
jmp
outsb
int3
popf
inc
mov
jl
sti
fmuls
xor
jp
push
jns
pop
icebp
movsb
cmp
inc
jl
adc
adc
pop
js
xchg
push
into
mulb
jne
pop
jae
mov
ss
ljmp
sub
mov
sub
subl
mov
ljmp
pop
xchg
fwait
test
ret
xor
gs
pop
or
mov
data16
frstor
in
inc
or
fwait
mov
je
shrl
xor
aad
push
add
repz
sbb
mov
cltd
rorb
popf
push
movsb
fldenv
dec
mov
outsb
xchg
call
aam
mov
insl
sbbl
push
push
add
pop
inc
repz
mov
arpl
adc
repz
inc
fucom
pop
xor
mov
adc
sbb
and
sub
movsl
out
subb
jmp
jge
jno
or
and
ds
aaa
xor
lds
inc
fidivrl
jecxz
mov
pop
cmp
pop
mov
test
xor
insl
xor
shll
push
adc
leave
ret
cmp
loope
fimuls
or
aad
jmp
incb
fnstenv
xchg
dec
dec
cmpl
push
lcall
ja
out
stos
adc
or
test
inc
pop
push
test
jle,pt
enter
inc
push
fbld
iret
lock
loop
ljmp
mov
cli
out
sarb
fstpl
push
push
push
jno
arpl
mov
dec
xchg
sbb
fdivr
test
rcrl
mov
jg
shrb
frstor
push
icebp
xchg
lcall
clc
push
cmp
jle
mov
fsubl
or
ret
dec
pop
jnp
ljmp
aaa
fcmove
inc
sbb
xchg
mov
fisubs
lods
arpl
jmp
into
sbb
jle
popf
aam
iret
shll
test
xchg
test
shlb
test
inc
mov
divb
ja
hlt
cld
adc
fistps
dec
adc
cmp
adc
nop
cmp
popa
xor
movsb
xor
clc
ficoml
mov
outsb
sub
fimull
pop
or
loopne
daa
xchg
mov
add
subb
cmpb
in
xchg
jns
test
mov
dec
inc
inc
jecxz
xchg
cmp
fmulp
push
mov
cli
push
and
inc
mov
test
inc
jns
gs
test
sub
mov
jo
pop
fsts
cltd
aad
sar
adc
test
or
or
inc
adc
adc
je
and
add
pop
add
sbbl
scas
and
pusha
mov
test
out
xchg
sub
inc
sub
cmpsl
add
shrb
test
jl
pop
and
movsl
push
iret
xchg
ror
imul
rcrl
dec
lods
into
lods
mov
in
cmp
jns
xor
inc
je
hlt
push
and
testb
inc
fwait
and
fcmovbe
movsl
jo
inc
jno
gs
mov
cmc
fcmovne
hlt
aam
mov
lret
les
and
out
test
loope
mov
jb
jg
dec
dec
imul
mov
scas
adc
dec
and
mov
loop
cld
stc
dec
push
mov
out
mov
dec
enter
mov
fsubl
push
push
movsl
inc
filds
mov
adc
cltd
pop
mov
sub
stc
out
aad
cmc
popa
loope
das
pushf
clc
shrl
and
cmp
jmp
cmp
lcall
xchg
push
jge
jecxz
add
dec
ficomps
into
sub
daa
daa
out
das
mov
into
fs
mov
sub
jmp
clc
xorl
stos
lret
popa
fs
ss
or
mov
lcall
jmp
push
push
sbb
pop
aam
repz
xchg
scas
mov
add
scas
jecxz
cli
pushf
xor
in
loopne
xor
mov
mov
or
clc
pop
dec
mov
pop
jle
xor
mov
mov
repnz
icebp
cmp
sbb
aad
notl
pusha
int3
cltd
lods
mov
or
fwait
jns
cld
push
and
mov
dec
dec
jne
jne
into
sub
lahf
and
push
repnz
mov
pop
push
int3
sbb
pushf
in
add
cld
pop
jno
jl
mov
jbe
xor
les
repnz
jmp
cld
shrl
xor
loop
mov
test
or
aaa
repz
shr
movsb
addr16
out
mov
leave
pop
testl
cmp
mov
bound
xor
mov
aaa
lret
stos
fisubl
test
mov
xchg
call
daa
jns
int3
inc
pop
cwtl
pusha
iret
xchg
dec
and
test
icebp
mov
int3
nop
and
sbb
mov
test
or
addb
mov
pop
push
movsb
xor
inc
in
push
lcall
je
mov
data16
in
sub
xchg
sahf
pop
ljmp
nop
cmp
and
rorb
push
sub
shll
insb
push
mov
push
dec
in
or
sbb
lods
out
jl
stos
pusha
cld
fstpl
jne
mov
test
lods
xor
out
sub
pop
pop
pusha
cmpsl
sti
movsl
jne
ret
ja
sbb
or
mov
xchg
push
adc
pop
xor
pop
and
jge
jns
stos
push
cmp
lahf
jmp
push
repz
cld
dec
stos
fs
fstp
mov
lret
push
cmp
test
repz
inc
cltd
aaa
push
cmpsb
mov
add
fcoms
jmp
mov
and
in
xor
insl
ficompl
jne
push
in
adc
sbb
xorb
dec
dec
pusha
call
rolb
cltd
daa
stos
xchg
repnz
das
mov
dec
xchg
outsl
lcall
lret
clc
mov
xchg
test
repnz
ror
lcall
xchg
cmpsl
dec
jnp
add
mov
inc
pop
jmp
das
scas
push
xchg
and
mov
shr
xchg
jle
mov
shl
push
pop
cmpb
mov
dec
dec
ret
rolb
pop
mov
adc
sbb
lahf
jle
jp
pop
lea
jae
js
cmpsb
jmp
mov
outsl
scas
mov
push
mov
dec
xor
ja
jl
dec
cmpb
jmp
push
xchg
sub
fisttpll
sub
stos
adc
mov
stos
sub
xor
scas
jae
loopne
cmp
cmp
mov
ret
sbb
ljmp
and
jle
or
inc
out
jnp
pop
sub
xor
pop
sbb
mull
jmp
mov
fists
jle
mov
fbstp
xor
inc
xor
mov
stc
imul
rcll
cmp
loop
repnz
sti
mov
push
push
mov
mov
mov
jp
cmp
and
test
cmp
repz
mov
std
test
fs
push
mov
xlat
xlat
sub
and
scas
mov
outsl
iret
mov
push
jmp
pop
scas
sbb
ljmp
push
mov
adc
arpl
xchg
mov
loope
pop
lods
adc
scas
fidivs
lahf
sub
add
call
and
fisubrs
xchg
mov
sub
enter
test
ror
insb
cmp
scas
push
rorl
mov
jae
inc
dec
jmp
jno
push
sub
push
xor
ret
add
mov
sbb
inc
xchg
fidivrl
cwtl
push
fyl2xp1
push
adcl
cmc
jo
std
sub
hlt
lds
es
pusha
pop
rcrl
cmp
in
add
xchg
add
test
push
mov
sbb
sahf
jne
jg
lret
into
adc
std
or
mov
ret
sbb
and
ret
std
mov
mov
mov
mov
adc
inc
fcomi
outsl
pop
mov
sahf
dec
jecxz
pop
jecxz
hlt
imul
jmp
xchg
arpl
jl
and
cmpsl
add
jmp
push
xchg
pop
add
lock
lods
push
inc
rol
cli
int3
xchg
pop
cmp
inc
in
xchg
subb
and
imul
cmp
popw
das
int3
push
adc
stos
cmp
lahf
jl
add
xor
jmp
ret
lods
adc
imul
push
loopne
pop
inc
and
cld
data16
adc
es
fstpl
mov
sub
mov
mov
jle
icebp
daa
leave
and
mov
push
mov
je
das
jg
mov
and
cmpsb
add
int3
dec
lcall
xchg
out
adc
mov
pop
and
lock
mov
xchg
sub
add
decb
mov
lcall
cs
aam
inc
xchg
enter
fdivs
fildl
test
pop
sbb
mov
jns
adc
cmp
rorl
mov
cltd
sub
lcall
scas
and
add
jmp
inc
lcall
hlt
lock
adcl
and
addb
dec
test
cmp
insb
imul
sti
sbbb
sbb
cmp
cmp
outsl
dec
mov
std
xchg
ret
jnp
inc
push
in
jge
adc
cs
fdivp
jecxz
out
fdivs
push
dec
in
inc
jecxz
hlt
xor
test
jp
or
jbe
mov
test
sub
mov
xor
icebp
bound
xor
lcall
cmp
and
iret
pop
call
rcrb
or
adc
mov
sub
sti
in
hlt
sub
icebp
mov
neg
lcall
push
daa
or
lret
cltd
in
sti
push
xchg
pop
jnp
rclb
test
xor
mov
dec
cmp
jb
cwtl
pop
fs
inc
std
fsts
xchg
test
insl
cmpb
leave
jge
mov
ljmp
decb
pop
loopne
nop
js
rorl
or
adc
or
or
cmp
incl
jns
mov
in
sub
out
sub
mov
sub
adc
nop
xor
movsl
jo
jecxz
or
sahf
push
add
adc
aad
lret
ret
jb
in
ljmp
stc
cld
faddl
xlat
fbstp
or
mov
mov
fistpll
push
xchg
mov
stc
xchg
sbb
inc
je
mov
mov
push
into
imul
test
enter
lret
pop
add
adc
mov
mov
cs
mov
pop
leave
sub
into
inc
cs
fisubl
push
xor
inc
fimuls
cld
dec
push
bound
roll
scas
popa
sub
cwtl
ret
popa
adc
sbb
adc
mov
xchg
jle
test
xchg
adc
or
lock
js
clc
add
outsl
xchg
xor
xor
or
scas
sub
jae
insl
adc
stos
pop
cmpsb
fs
mov
mov
clc
stc
je
add
adc
cwtl
fisubrs
leave
ja
mov
jns
int
dec
loop
lock
mov
jl
cmp
push
mov
loope
sub
pop
movsb
in
lahf
xor
outsb
inc
cmp
daa
mov
cmp
sahf
dec
jo
adc
pop
mov
xchg
lods
lock
push
pop
dec
fisttpl
add
cmp
int3
inc
int3
dec
inc
js
pop
mov
mov
push
incb
or
sub
sbb
sbb
mov
mov
pop
enter
push
bound
cmp
jnp
cmp
daa
or
inc
adc
addb
push
arpl
movsb
push
sub
filds
push
rcrb
shlb
lahf
outsb
stc
arpl
cmp
dec
dec
xlat
jl
jle
jne
or
add
sbb
jnp
adc
orb
loopne
xor
stos
dec
jle
mov
dec
sbb
sub
std
orb
push
ret
int
movsl
bound
xlat
cmpsb
push
fisubrs
push
stos
cmp
dec
das
es
sahf
data16
xor
rcll
xchg
mov
pop
js
cmc
cmp
push
or
push
test
lock
lcall
lahf
pop
mov
push
xlat
dec
je
xor
adcb
stos
bound
jge
clc
leave
mov
in
gs
iret
jg
add
add
dec
mul
sbb
in
out
or
cld
iret
push
popa
xchg
loope
aaa
mov
pop
xor
mov
call
and
dec
or
pop
xchg
mov
out
filds
and
jno
pop
cmp
std
jmp
xor
sahf
push
cmpb
out
lods
fstpt
stos
add
movsb
lahf
mov
add
or
sub
cmp
xor
jg
lret
std
int3
inc
pop
push
daa
jno
jns
cmp
sub
jne
mov
imul
inc
out
outsl
xchg
and
into
xchg
in
outsl
sub
mov
xchg
data16
pop
loop
jae
inc
cmc
sub
adc
mov
inc
out
scas
in
fsubl
sbb
in
in
pusha
add
in
fsts
sub
call
cmp
das
add
push
sub
or
fidivrs
jns
pop
aad
lds
sbb
sti
lahf
scas
imul
xchg
or
or
mov
mov
int
out
enter
iret
fstps
stc
push
jo
std
movsb
movsb
adc
mov
leave
movsb
and
dec
in
rcrb
sub
icebp
mov
push
test
inc
sub
or
jns
xor
adc
mull
add
adc
or
hlt
in
and
push
jbe
fildl
cli
inc
cld
xor
popa
aas
dec
inc
mov
ja
mov
mov
in
add
inc
pop
mov
insl
push
mov
ret
xorl
push
inc
loope
ret
cmp
xor
sbb
mov
pop
cld
sub
adc
lods
cwtl
or
xchg
mov
scas
or
dec
and
shll
popf
sti
rolb
xor
push
fbld
jo
leave
outsb
mov
add
fimuls
pcmpgtd
cmp
mov
adc
in
push
adc
sbb
shrl
or
dec
mov
dec
jns
test
shll
pop
lcallw
jmp
decl
outsb
fcompl
daa
das
in
push
repz
adc
jg
xor
outsb
loop
in
inc
dec
jp
cltd
mov
mov
popf
movsl
cltd
dec
lods
sbb
pop
mov
add
test
ret
adc
and
push
fidivs
mov
movsl
sub
add
xor
ds
icebp
pop
pop
das
ret
mov
dec
cmp
jnp
jmp
pop
fxch
or
pop
loopne
add
es
lock
cmpsb
mov
jbe
push
cmp
lods
jnp
sub
and
dec
daa
repnz
repnz
dec
sbb
pop
mov
mov
mov
mov
sbb
sub
mov
xor
in
adc
pushf
loopne
inc
inc
bound
push
pop
xor
pop
mov
mov
xchg
cmp
iret
cli
push
or
inc
and
pop
pop
and
push
mov
sahf
mov
fwait
jns
stos
inc
ret
lds
xchg
dec
mov
orl
xor
sbb
incb
xlat
daa
sub
div
into
push
pop
popf
jo
cmc
dec
jle
xlat
aad
ficoms
jge
fisttps
enter
mov
adc
in
pop
loopne,pn
loopne
xor
loope
adc
repnz
jno
aad
or
and
outsl
test
lods
xchg
xorl
jp
bound
jo
loopne
ljmp
rcrb
xor
std
lcall
push
push
mov
sub
xor
loop
pop
inc
sti
sub
lock
out
sbb
adc
cld
insb
push
test
jecxz
xor
hlt
lahf
jp
imul
jp
xor
pop
dec
fimull
aad
lret
sbb
inc
push
loop
fcomp
int
lods
xor
testb
pushf
pushf
ljmp
loope
leave
sub
sar
ds
jno
inc
or
jno
je
jecxz
inc
cmp
jae
ror
cs
dec
cwtl
stc
push
ljmp
xor
or
ja
xchg
daa
mov
setne
mov
xorl
inc
stos
cmp
ret
scas
cmpsb
jo
popf
adc
sti
xor
mov
inc
notl
fimull
daa
mov
movsl
add
push
mul
aad
mov
mov
and
orl
push
fs
mov
and
lret
sti
je
push
cwtl
lahf
ss
or
in
inc
sarb
decl
mov
or
insb
lret
aam
mov
ret
mov
sar
jnp
add
aad
loope
dec
push
test
dec
pop
sub
out
and
fneni(8087
daa
mov
ja
ljmp
xchg
jmp
testl
not
adc
mov
int3
rol
lcall
adcl
aad
test
test
inc
or
stos
sbb
sbb
shl
mov
pop
ljmp
adc
xchg
sbb
enter
aam
jle
movsb
lcall
and
xor
ljmp
ljmp
inc
dec
outsl
xchg
mov
psubsb
and
inc
cmp
adc
or
xor
in
xchg
test
xor
adc
or
int
ret
mov
or
cs
lods
cmp
push
and
enter
mov
xchg
std
sub
cmp
jmp
lahf
jae
cmp
frstor
or
add
outsl
inc
jae
js
adc
loopne
cmp
jp
pop
pusha
insb
xlat
pusha
das
in
loopne
jl
prefetch
idivb
jl
test
cmpsl
js
mov
cwtl
std
adc
int3
dec
aas
jns
add
pavgw
pop
mov
adc
mov
js
fidivrs
xor
sbb
lret
shr
mov
out
pop
cmp
in
mov
repnz
pop
testb
xor
mov
pop
and
pop
pusha
lret
imul
cmpl
inc
xchg
loopne
loopne
mov
or
sub
rorb
leave
fsubrs
sbbl
frstor
jo
push
jb
cwtl
call
in
pop
pop
sbb
add
cmpsb
imul
sbb
cmpsl
dec
jnp
orl
outsl
ja
mov
mov
mov
push
pushf
xchg
mov
cld
mov
sbb
in
scas
fsubr
int3
jge
loope
push
enter
sbb
push
xchg
xor
dec
jbe
xor
repz
js
sub
cmp
pop
pushf
pop
movsb
xchg
mov
and
int3
xor
lret
clc
push
push
rcrb
and
jmp
or
and
and
jge
mov
lds
inc
fs
mov
jg
and
lods
fdivrl
dec
pop
xchg
cli
mov
inc
add
movsl
or
gs
mov
inc
mov
aaa
mov
enter
fnstcw
inc
dec
jg
clc
mov
dec
add
fstpt
je
mov
mov
sub
fsubr
pushf
clc
cltd
mov
jbe
mov
sbb
adc
jg
pop
je
ret
ljmp
andl
mov
fwait
lret
fdivrp
ficomps
js
movsb
push
loop
mov
in
or
js
and
sub
dec
int3
and
sbb
scas
adc
cld
dec
push
out
push
test
jo
scas
lods
adc
mov
jge
push
mov
cmp
xchg
cmp
stos
or
cli
jne
lea
pushf
test
movsl
or
enter
cli
mov
dec
scas
mov
cmc
lock
and
jge
mov
pop
lret
jp
inc
lahf
cmpsl
movsl
sub
mov
roll
push
pop
cmc
mov
int3
clc
or
sbb
jbe
mov
in
pop
inc
test
sbb
lds
and
jg
push
test
dec
test
mov
les
mov
pop
popf
stos
mov
push
sub
cwtl
sti
jge
jmp
adc
xchg
push
dec
sbb
and
pop
inc
jne
insb
lret
push
cmpsb
sbb
pop
pop
or
jp
test
inc
lea
mov
mov
in
xor
or
or
ret
loop
mov
sub
imul
jle
popa
pushf
call
insl
push
call
notb
pop
mov
lahf
out
andl
push
mov
dec
notl
lds
xchg
xchg
xchg
mov
movsl
mov
push
rcrb
pop
jnp
xchg
mov
int
jo
sbb
rolb
dec
push
sub
pusha
pop
xor
adc
int3
std
pop
xchg
pop
push
adc
mov
jns
pop
sub
xor
mov
adc
adc
jbe
mov
in
xor
dec
pop
jns
imul
inc
jno
ret
mov
testl
push
jecxz
xchg
decl
jbe
sub
sbb
mov
pop
mov
into
pop
cmp
ret
push
or
out
push
clc
aam
movsb
fcoms
shlb
mov
dec
push
and
mov
addr16
mov
cld
cli
insb
jecxz
mov
arpl
or
xlat
pop
arpl
popa
add
es
dec
fwait
xor
xchg
int3
cmp
fisubrs
ds
clc
adc
mov
mov
sahf
xorb
dec
sbb
loopne
push
insb
or
adc
lods
jge
dec
push
xchg
xorl
push
jp
inc
addr16
fstl
mov
mov
push
in
xchg
sub
out
mov
add
and
cmc
push
loope
push
test
testb
jnp
mov
jl
lods
sub
lods
mov
dec
cmp
mov
add
sti
cwtl
or
and
and
andb
inc
add
sahf
adc
dec
jae
nop
or
arpl
inc
ljmp
shl
loopne
jns
inc
je
push
ja
mov
add
movsb
cmc
add
jl
pop
mov
aam
mov
inc
sub
adc
stos
mov
sarb
or
imull
xor
sbb
stos
push
mov
push
mov
rorl
jge
ret
push
jmp
sahf
xor
outsl
inc
pop
aaa
fwait
dec
scas
addb
pop
enter
and
jno
mov
xchg
dec
cmp
mov
jo
in
cmp
in
add
repz
pop
xchg
add
sbb
hlt
mov
daa
jb
aas
out
dec
xor
cld
mov
mov
ljmp
insb
push
sahf
ljmp
ret
aam
mov
push
pop
cmpb
dec
movsl
mov
push
ror
mov
pop
cmp
sub
pop
insb
imul
mov
xchg
sbb
sbb
fisubl
jne
test
jp
xor
push
and
addl
sub
pop
insb
sub
dec
repz
daa
je
inc
out
popf
jge
cmp
mov
pop
pushf
push
movsb
xchg
lea
ds
bound
ret
push
add
adc
pop
aas
cmp
adc
jo
push
movsb
sbb
jo
mov
jp
push
xor
xchg
sub
and
nop
insb
jo
call
sbb
and
loopne
cmc
out
out
xchg
push
jp
sub
fsts
and
push
shl
repnz
cmc
adc
fldpi
mov
orb
sbb
mov
imul
test
xchg
out
pop
addl
scas
lret
adc
dec
jecxz
std
in
jbe
cs
ret
xchg
rcrl
outsl
loopw
or
sbb
mov
adc
and
and
test
xchg
cmp
cltd
mov
outsl
sub
adc
outsb
repz
and
test
and
mov
dec
das
mov
inc
fsts
sbb
jo
lods
clc
mov
jne
jl
mov
or
cmp
mov
inc
lods
popf
mov
pop
pop
pop
adc
in
fnstsw
popa
lahf
out
in
mov
ds
mov
jmp
sub
jmp
ss
int3
jl
sbb
push
push
xlat
stc
inc
shl
push
mov
cli
dec
ja
outsb
inc
jnp
xchg
pop
and
jo
dec
in
pop
iret
mov
fcompl
stc
adc
je
jecxz
aas
and
bound
movsl
enter
push
cltd
jge
fsubl
cwtl
pop
imul
lock
jle
jle
lock
mov
idivl
ror
shl
adc
in
cmpsb
cltd
push
sub
push
movsl
mov
sbb
in
pop
push
dec
sub
xorb
push
int3
adc
sbb
rcr
sub
test
outsb
cld
dec
das
and
imul
popa
adc
mov
pop
ds
cli
sbb
inc
es
mov
fcoms
sarl
inc
sahf
decb
into
lds
pop
orl
push
shrb
xchg
adc
jge
jg
vminps
lea
mov
subb
in
add
cmp
ds
dec
cmp
jecxz
or
das
scas
enter
les
mov
je
adc
dec
jg
inc
test
cmp
mov
loopne
je
insl
push
mov
fiadds
cwtl
sub
ficompl
adc
mov
in
imul
pusha
scas
sub
add
lcall
mov
out
jne
sub
xor
push
stc
stos
icebp
lea
imul
loope
jns
rcll
or
cmp
cli
fs
stos
sub
pushf
fists
ljmp
add
cmc
test
mov
or
ret
pop
mov
cmpsb
cmpsb
sub
adc
pop
mov
popa
mov
cmp
and
or
stos
scas
mov
push
addr16
mov
shrb
insl
jno
and
pop
roll
inc
fisubrl
jl
mov
sub
cmpsb
cmpsb
inc
ljmp
add
jp
adc
mov
pop
out
into
xchg
stos
out
jge
add
jmp
jbe
xchg
loopne
test
push
cmc
jg
dec
mov
leave
pop
xchg
xchg
popf
lods
ds
testl
cs
imul
scas
jl
jecxz
push
fwait
popa
lcall
cmp
cltd
ljmp
xchg
ret
addb
xchg
sub
adc
cmp
xor
scas
xor
jae
out
add
cmp
jb
xchg
xlat
repz
inc
mov
push
jo
sub
jle
sbb
and
adc
mov
dec
jnp
mov
cmp
cmp
loopne
add
cld
scas
mov
dec
sahf
sbb
adc
xchg
cwtl
sub
xor
sub
std
sbb
cmp
fsubs
sbb
mov
stos
fidivs
add
dec
adc
xchg
scas
shrl
inc
push
orb
rcrl
and
out
maskmovq
mull
xor
jae
cmp
test
repz
cmp
into
mov
mov
cmp
cmp
sub
test
mov
xchg
xchg
push
fisubrl
jne
jbe
or
int
xorl
inc
jg
or
jge
lret
ror
test
aad
dec
mov
jecxz
xor
add
pusha
pop
xor
xor
into
loopne
test
gs
sbb
adc
sbb
add
inc
iret
xchg
imul
xor
add
test
fistl
mov
push
mov
pop
mov
or
fcompl
cld
dec
mov
movsl
xchg
mov
ljmp
sbb
jbe
stos
xor
fidivs
xchg
push
mov
or
ret
or
mov
in
lods
pop
and
add
dec
pop
cld
push
mov
movsl
pop
sub
push
imul
insb
pop
dec
mov
jns
pop
pop
pop
bound
inc
jp
shlb
test
pop
pop
movsb
jnp
aaa
push
fdivr
push
cmp
stos
outsb
or
mov
icebp
imul
inc
pop
and
push
jge
out
xchg
das
ja
roll
pop
rclb
in
fadds
xorb
sub
xchg
pushaw
fcomp
ret
loopne
add
outsl
aam
test
inc
popf
jg
inc
cmp
push
push
mov
push
cli
loope
or
mov
repz
rcr
and
xchg
mov
cmpsl
insl
xchg
repnz
xchg
loopne
mov
push
icebp
ret
cmp
lock
ljmp
ret
and
or
mov
loope
and
pushf
fsubrl
int
jge
ret
push
dec
pop
jl
popf
nop
cs
ret
add
mov
jnp
outsb
iret
jno
repnz
jo
cmp
fldt
adc
xchg
js
test
imul
and
jmp
push
mov
popa
xchg
cltd
xor
and
inc
lea
sub
lds
and
pop
std
fdivl
shlb
cli
cwtl
push
or
and
push
dec
xor
jp
lods
int3
jl
mov
push
gs
int3
mov
cmp
int3
jecxz
rorl
shl
mov
rcll
xor
loop
test
ljmp
sub
stc
mov
pop
rcrb
mov
shl
adc
mov
mov
push
repnz
xor
dec
das
clc
push
aam
inc
cmp
dec
xchg
add
inc
out
adc
mov
xor
scas
pop
mov
scas
popa
dec
push
mov
jmp
xor
sbb
adc
fwait
repz
push
shl
pop
int3
mov
add
xchg
adcl
fwait
mov
or
lods
fidivl
lods
jbe
jg
stc
jnp
adc
movsb
cltd
lret
fstpt
dec
cwtl
in
xor
aam
into
out
adc
int3
mov
push
mov
jne
cld
jmp
in
jne
out
add
fisubs
inc
sbb
addr16
mov
mov
mov
aaa
aas
in
fistpl
mov
ficoml
scas
adc
xchg
xor
adc
mov
aaa
pop
dec
mov
popa
sbbb
ret
xchg
dec
fisubrs
jle
adc
out
mov
mov
pop
mov
adc
xor
fwait
mov
sub
mov
pop
sahf
loop
jo
or
loopne
pop
or
cmovo
or
addr16
jno
xchg
scas
in
popl
out
loopne
adc
stos
pop
add
push
inc
mov
pop
jns
mov
or
mov
jns
in
stc
outsb
jle
outsb
mov
xchg
inc
aam
fdivrs
pop
int3
cmc
and
icebp
jo
pop
dec
push
pusha
mov
mov
jp
or
fwait
mov
and
push
sub
sarb
jno
ja
jnp
test
pop
lcall
decb
in
mov
mov
movsl
subl
into
pop
callw
sub
pop
stos
dec
sub
mov
repz
xor
pop
popa
dec
aaa
fadds
out
cmpsl
jbe
sub
or
push
ret
xchg
test
cmpsl
gs
ret
jl
fnsave
sub
inc
rcl
mov
insl
xchg
sub
add
mov
mov
mov
iret
lcall
fwait
loopne
and
inc
stc
sbb
sbb
dec
mov
in
mov
sbb
push
and
lock
or
lds
sbb
loop
jae
xchg
daa
mov
les
rorb
bound
or
adc
sub
cmp
jne
mov
aad
shlb
sub
pop
pop
xor
or
jae
cltd
divb
out
enter
push
test
and
subb
pop
sub
jmp
xor
in
int3
mov
add
sbb
or
aas
sbb
and
mov
pop
lds
insl
cmp
fsubrs
fmuls
clc
inc
mov
std
in
lahf
sbb
or
and
sti
or
in
push
test
push
lods
and
pop
out
cmp
cmpsb
xchg
push
sti
stos
xor
out
test
or
pop
in
enter
xor
sti
xchg
inc
add
mov
jbe
sub
fwait
cmp
sub
mov
mov
cltd
dec
mov
xchg
daa
xorl
or
mov
and
rol
xor
test
popa
sbb
ficompl
leave
xchg
mulb
cld
dec
sbb
mov
adc
adc
cmp
sbb
call
xor
leave
jne
mov
xor
cmc
fbstp
mov
sbb
pop
cmp
xor
mov
push
push
insl
dec
test
mov
dec
xchg
into
xchg
dec
es
lret
and
add
cltd
sub
jmp
insb
inc
push
rorb
outsl
stos
arpl
xchg
xor
fiadds
xchg
xorl
and
frstor
scas
jne
push
rolb
add
or
xor
out
jg
or
dec
or
xchg
lods
sahf
test
std
ja
cmp
and
mov
icebp
lods
movsl
lock
outsl
mov
ss
lods
inc
movsb
xchg
mov
test
jle
xlat
int3
mov
lcall
rolb
out
jno
cmc
jmp
push
sbb
pop
pop
push
data16
testb
adc
shlb
or
sub
loopne
mov
fdiv
out
mov
ret
jmp
roll
movsb
cs
pop
in
inc
popa
cmp
adc
mov
es
pop
adc
push
and
cli
cld
sbb
in
sarb
imul
lahf
add
ljmp
and
push
pop
cltd
fs
lahf
popa
leave
jns
call
jle
inc
push
jae
sub
les
cmpb
pushf
xor
jmp
fimull
cmpsb
mov
arpl
xlat
cli
dec
push
rol
mov
sub
je
jg
push
cmp
mov
push
add
jp
mov
adc
and
and
mov
or
jp
pop
push
dec
inc
adc
pop
adc
or
sbb
adc
xchg
sbb
adc
inc
sbb
hlt
cli
xorl
call
stos
sub
stc
xchg
pop
lret
sbb
mov
inc
jns
xchg
sub
add
xor
rcr
jb
mov
push
es
adc
mov
or
inc
ret
fdivrs
addr16
and
fcomps
sbb
push
mov
fdivrs
xchg
test
ret
jnp
outsl
sbb
fstps
push
gs
je
popa
out
fimull
sbb
ds
das
jno
sbb
in
inc
cmc
in
jmp
add
add
pop
add
lds
dec
mov
mov
push
dec
xchg
fcomi
out
shlb
pushf
and
adc
sbb
test
adc
inc
xor
mov
xor
push
push
jb
aas
and
pop
fldenv
and
pop
sub
lods
or
ret
xor
mov
or
mov
aam
addr16
mov
sub
popa
fisubs
push
jbe
stos
lret
in
sbb
testl
pop
sahf
mov
push
out
sbb
aas
xor
incl
or
pop
lcall
xchg
inc
addr16
lahf
push
mov
and
and
pop
mov
cmp
or
add
and
push
rclb
or
push
arpl
jecxz
sbb
jmp
stos
jnp
out
add
bound
jmp
adc
test
jmp
das
faddp
sbb
addl
sar
fsubrl
shl
fucomi
pop
cmp
jns
sbb
cwtl
push
sarl
cmp
call
mov
in
and
mov
pop
out
push
in
dec
mov
inc
jno
test
mov
dec
add
adc
sbb
mov
lea
xor
lahf
lds
popf
add
icebp
lds
cmpl
add
pop
mov
loop
pushl
pop
popf
loop
and
push
pop
or
or
test
mov
insl
xchg
clc
sub
mov
jl
ljmp
add
pop
lds
fdivs
ret
outsb
mov
addl
mov
add
lret
pop
cwtl
push
add
mov
mov
mov
pop
fnsetpm(287
lcall
push
arpl
out
pop
enter
sub
inc
mov
mov
aam
mov
sbb
icebp
cltd
sub
mov
mov
into
xchg
into
negb
leave
mov
sbb
add
leave
add
push
scas
fstps
shrb
xchg
jp
fcoml
sub
pop
test
rcll
xchg
orb
shrl
push
mov
frstor
sbb
mov
xchg
xchg
lods
and
inc
inc
test
sub
ret
dec
inc
xor
sub
movsl
ror
xlat
mov
mov
outsl
les
test
in
lods
ds
push
fidivrs
xchg
sahf
sbb
sbb
nop
nop
lds
mov
add
fs
enter
mov
pop
pop
insb
sahf
xchg
scas
pusha
cmp
mov
mov
sub
je
adc
add
ss
cmpb
jl
pusha
incl
std
cld
rorb
mov
mov
push
lret
or
add
mov
addr16
ret
repnz
mov
lea
xor
imull
aam
and
xchg
mov
pop
lock
rcrb
inc
inc
in
push
out
push
and
inc
jg
scas
dec
xor
lahf
ret
das
jl
xlat
and
fwait
push
rcr
mov
das
push
mov
data16
fildll
xchg
in
loopne
inc
div
jbe
lds
lock
popa
mov
stmxcsr
push
cmp
lock
std
repz
jmp
int3
inc
hlt
and
loope
adc
pop
icebp
mov
jmp
repz
sub
int3
inc
lret
inc
cmp
xlat
ret
dec
cmc
imul
sbbl
je
sbb
inc
inc
loopne
sub
dec
xchg
loope
sti
jo
fisttpll
lret
pop
add
sub
fs
popf
pop
sbb
sub
es
imul
and
fwait
inc
add
ss
andl
mov
roll
nop
mov
pop
nop
push
dec
adc
outsl
fldt
pushf
inc
aas
aam
cmp
test
mov
xchg
add
ret
mov
lcall
ds
pop
sbb
inc
popf
ret
xchg
xor
pop
sarb
xchg
jno
add
ret
mov
icebp
mov
in
mov
rcrl
cwtl
sub
dec
pop
insl
lret
mov
lcall
mov
xlat
stos
pusha
xchg
inc
mov
aaa
sbb
mov
rep
mov
mov
bound
cltd
push
xchg
push
jns
sbb
outsl
shr
fstps
sbbl
mov
cmpsl
insb
jge
outsl
mov
arpl
jmp
lret
inc
popa
push
mov
xor
lret
push
sub
nop
adc
inc
shlb
pop
or
mov
repnz
shl
add
pop
lcall
adc
cli
insb
dec
jb
mov
nop
add
loope
xchg
mov
push
mov
adc
sti
sbb
add
into
or
sub
add
fstps
movsl
out
jl
test
fs
das
sbb
mov
insl
inc
jl
push
add
out
sub
hlt
push
mov
jbe
pop
stos
lea
push
loop
mov
shr
jbe
pop
dec
inc
xor
loop
xor
icebp
je
cltd
xor
iret
dec
or
lret
pop
or
xchg
in
aas
addl
sbb
je
jle
int3
mov
jbe
inc
test
cwtl
mov
inc
push
push
mov
shll
mov
int
xor
mov
nop
je
push
clc
out
lret
sbb
push
pop
fwait
ficoms
lahf
adc
and
xor
sbb
mov
loope
push
or
and
or
lea
pop
mov
cmp
mov
das
sbb
movsb
cld
add
or
mov
inc
insl
out
fadds
or
add
into
jmp
test
or
das
test
sub
fldl
mov
mov
push
jge
clc
ja
ret
mov
in
fisubrs
cmp
outsl
mov
insb
jns
and
mov
je
dec
adcl
jge
enter
pop
andb
in
out
sbb
push
fdivs
push
rcll
in
mov
dec
jl
sahf
sub
scas
xor
mov
lcall
dec
out
mov
loop
xor
fcoms
ljmp
icebp
int3
mov
mov
imul
xchg
or
pop
in
cmp
pop
dec
lock
mov
jecxz
fdivr
jb
call
sbb
sbb
outsb
adc
mov
je
dec
xor
cmp
xor
mov
je
outsl
xchg
inc
stos
inc
out
mov
sub
mov
nop
pop
ficoml
cltd
xor
fneni(8087
xchg
mov
fdivs
push
imul
testb
in
jmp
rcl
data16
scas
dec
mull
jbe
aam
xchg
popa
out
mov
cmp
rorb
outsl
std
or
mov
leave
cld
jne
pusha
stos
lods
rolb
dec
dec
mov
clc
mov
pop
stos
mov
push
loope
sbb
jg
dec
add
inc
xor
and
lods
ror
mov
mull
in
jns
fistps
mov
xchg
dec
inc
out
add
jg
mov
je
subl
inc
bound
lret
ja
adc
jae
mov
mov
sub
xchg
xchg
enter
dec
in
cmp
stos
mov
dec
lret
xchg
cld
push
nop
popa
fstpt
cmp
inc
mov
jae
fwait
ds
adc
or
icebp
and
and
decl
lret
popa
sub
out
dec
ljmp
lea
pop
or
or
lea
jne
and
daa
pop
xchg
filds
xchg
inc
loopne
punpcklwd
sbb
xchg
test
mov
push
addr16
movsb
cmpsl
or
inc
icebp
xor
negb
push
mulb
jae
lods
scas
sarb
stos
push
pop
je
pop
pop
mov
or
or
push
lret
rol
mov
jo
outsb
xorb
fnstcw
sbb
inc
jl
and
insl
bound
xlat
mov
xor
fwait
xchg
pop
push
in
mov
cltd
aaa
sbb
fnstsw
dec
inc
add
dec
movsl
mov
shrb
jbe
stos
mov
add
and
loop
nop
and
aas
sbb
data16
sbb
adc
aad
jg
dec
repnz
jmp
int3
inc
xchg
pushf
ffreep
push
sub
lcall
and
shrl
es
movsl
inc
pop
ja
in
imul
push
imul
fsts
jle
sub
daa
mov
mov
ss
fdivs
add
iret
sbb
add
rcll
inc
and
sub
sahf
xchg
dec
cltd
jge
jge
in
mov
xchg
repz
lock
fwait
outsl
push
inc
into
call
ret
stc
ljmp
add
pop
jl
or
mov
and
sbb
or
sti
cmp
and
inc
out
js
daa
dec
or
sub
ret
mov
sbb
adcb
test
adc
xor
pushf
in
cmpsb
push
pop
pop
xor
shrb
lahf
loope
lahf
pop
stos
jae
inc
add
push
jl
xchg
ljmp
push
xlat
lods
push
sbb
and
add
add
mov
push
xorl
pop
insl
outsl
loope
test
outsl
mov
adc
call
popf
fcomps
mov
aas
jns
test
or
xchg
das
les
inc
dec
insb
mov
add
hlt
das
inc
pop
popa
mov
das
mull
xor
std
stc
sub
push
dec
push
mov
push
xchg
outsb
add
jge
cli
push
aam
loope
nopl
adc
xchg
sarl
pop
add
lahf
xchg
data16
lods
xchg
xchg
jnp
pop
lret
inc
jnp
jne
scas
mov
pop
hlt
xchg
xor
cwtl
push
cmpsl
sahf
inc
cmp
out
in
icebp
cmp
jmp
push
sbb
push
out
mov
jmp
pop
out
lods
fs
das
cltd
bound
test
adc
nop
mov
or
pop
in
jl
in
pop
xchg
js
jo
ja
or
lret
sub
arpl
jbe
add
nop
push
xchg
insl
sbb
cmpsb
pop
mov
sub
pusha
jecxz
ret
sub
pop
popa
stc
repnz
mov
shrb
cli
lahf
daa
rcll
xchg
dec
lcall
lret
jl
out
or
sbb
in
cld
test
mov
sub
mov
scas
inc
xchg
mov
les
mov
inc
mov
movsb
add
pop
pop
jmp
cmp
dec
cmp
jns
sti
add
sbb
jecxz
repz
jae
push
jmp
cmc
jmp
xchg
sbb
cmpsl
push
cs
movsl
pop
mov
out
out
out
scas
or
mov
daa
mov
inc
str
mov
push
xlat
push
rol
ret
popl
xchg
xchg
adc
cli
push
subb
push
or
push
lret
push
arpl
xor
stos
repnz
int
mov
and
push
das
fucomip
mull
pop
dec
mov
mov
mov
and
adc
adc
push
ret
jne
outsb
push
sub
jb
das
inc
cwtl
fimull
push
mov
ret
inc
lcall
adc
or
inc
iret
orb
adc
test
fldcw
adc
ds
mov
lcall
scas
pop
lock
mov
fdivr
fbld
xor
lock
push
fcmovb
stc
pop
sbb
inc
iret
mov
lds
and
or
sub
add
scas
sbb
xchg
push
xor
cmp
pusha
or
aad
pushf
cmp
loop
mov
sbb
ss
push
jb
lcall
loope
pop
lret
les
stc
or
fwait
arpl
mov
push
and
xchg
sti
push
pusha
pop
jo
movsb
jle
rclb
fbstp
hlt
iret
mov
popa
adc
xchg
sbb
das
add
xchg
pop
jecxz
mov
addl
daa
sub
mov
test
jae
xor
test
mov
repnz
daa
pop
test
xor
push
mov
cmp
dec
call
rcl
stos
fbld
gs
shlb
dec
sti
sbb
mov
sbb
test
inc
jecxz
xchg
mov
lahf
mov
fbld
popa
cmp
ja
lret
movsl
fstps
xchg
sub
or
mov
add
xlat
mov
cmpsl
xor
int
and
adc
jmp
mov
test
mov
cld
pop
mov
outsb
push
ljmp
dec
std
and
cli
aam
cmpsl
inc
mov
inc
std
fmull
xchg
adc
pop
mov
xor
out
in
cltd
fucomip
mov
jo
test
pop
add
xor
push
add
insl
out
xor
xchg
cmp
in
pop
fbstp
pop
fmul
lea
ds
stc
hlt
xchg
fistl
push
xchg
push
addb
mov
inc
and
cmp
push
pushf
fsubrl
sub
pop
leave
hlt
cli
dec
lds
subl
neg
scas
mov
xchg
ss
push
sbb
js
sahf
jo
mov
sarl
mov
dec
imul
js
scas
adc
lss
sbb
jns
adcb
addl
out
mov
lods
test
jno
gs
inc
or
cld
mov
stos
dec
shrl
lahf
decb
ret
loopne
sarl
arpl
repnz
jg
lahf
and
dec
ret
inc
and
xchg
mov
sbb
je
out
sub
rolb
adc
dec
outsl
lods
enter
insl
mov
inc
push
ret
mov
dec
cmp
jbe
fsetpm(287
ljmp
sbb
sbb
mov
out
data16
and
and
adc
sub
fmuls
mov
push
cltd
imul
imul
xor
lock
fdivs
enter
sub
mov
jmp
addr16
test
pop
loop
gs
mov
pushf
sbb
jnp
fwait
xor
cltd
jnp
xchg
sbb
cmp
push
xlat
int
push
inc
mov
ldmxcsr
or
dec
repnz
int
push
xchg
sbbl
fildl
je
jo
xchg
neg
stos
test
sarb
pop
fcmovb
or
scas
lea
lods
cmc
xchg
lret
xchg
push
dec
and
arpl
inc
push
xchg
xor
imul
jl
jno
test
or
ret
xchg
mov
daa
add
aad
shll
in
lods
sbb
repnz
shr
or
sbb
pop
pop
clc
int3
push
xchg
repz
pop
xor
in
es
lea
mov
ss
cmp
and
sub
mov
out
and
mov
aam
mov
pop
repz
sub
shll
cld
mov
mov
mov
jl
xchg
test
rolb
insb
scas
sub
ss
xchg
sub
lret
je
rcr
stc
sbb
cmp
sahf
sbb
adc
cmpsl
arpl
aas
aad
adc
repz
je
mov
orl
and
or
sbb
mov
cmp
jb
push
movsb
mov
test
mov
jmp
jmp
xchg
pushf
imul
pop
outsb
xor
arpl
sbb
or
lret
enter
mov
iret
mov
out
gs
out
sub
pop
jg
pop
test
adc
leave
scas
ret
lea
pop
mov
pop
inc
xchg
rcrb
repnz
sbb
jne
xchg
ja
fwait
inc
pop
mov
jp
push
cmp
push
subl
mov
cmpsb
jle
aas
inc
loop
loopne
inc
jmp
rcrb
mov
in
xchg
push
fmul
loopne
cmp
pop
xor
jno
add
dec
mov
cld
pop
rolb
or
pop
sarb
fucompp
inc
xor
sub
xchg
xor
push
leave
fwait
inc
in
push
out
test
jmp
mov
pop
cltd
mov
insb
push
test
pop
aam
push
leave
dec
xor
adc
xchg
outsl
fists
cltd
lea
xchg
outsb
jl
movl
jnp
push
aaa
mov
lahf
inc
outsl
adc
pop
addr16
fdivr
add
mov
mov
add
sti
push
fdivr
sub
movsl
mov
sti
push
negl
push
mov
shll
in
mov
pop
fsubrl
out
add
cmp
insl
test
in
add
xchg
mov
cmp
sbb
sbb
out
int
insl
pushf
setle
and
mov
fnstcw
adc
adc
cmpsl
lods
rcrl
lock
lret
cld
test
mov
lds
pop
mov
add
rcl
push
sbb
jne
cmp
ds
and
xor
pop
lods
and
add
nop
sti
jb
sbb
out
rol
sbb
push
std
mov
mov
mov
adc
pop
mov
mov
xchg
dec
ja
pop
jne
xor
jmp
adc
ret
or
sarl
inc
sub
cmpsb
sub
jns
pop
pop
mov
insl
sbb
or
jmp
les
pop
mov
loop
add
jns
xor
mov
sub
stc
adc
jnp
mov
inc
mov
in
int
and
jne
daa
andb
dec
pop
cli
lret
jns
and
lahf
or
loop
adc
mov
loopne
popa
cmpsb
gs
dec
pop
lods
cli
mov
push
jae
enter
repz
mov
push
lds
push
xchg
dec
cld
into
mov
sub
and
lods
lock
pop
fwait
loop
sbb
mov
and
push
enter
inc
sub
arpl
sarl
test
mov
fidivrl
inc
addb
cmp
and
fists
aad
inc
ss
sbb
fcompl
and
mov
push
stc
out
outsl
jbe
pusha
fcmovne
pop
mov
add
cmp
adc
iret
movsb
je
push
gs
mov
mov
sbb
in
sahf
adc
pop
ror
mov
push
lret
add
adc
cs
xchg
nop
aad
sub
into
adc
cli
cld
xchg
cmp
cltd
mov
dec
shll
pop
popaw
mov
and
jnp
mov
or
in
ljmp
mov
cmp
sbb
mov
push
add
push
mov
lcall
cli
cld
mov
addr16
aas
fscale
cmc
push
aad
sbb
lods
std
inc
enter
push
dec
jne
pushf
cmp
jnp
mov
or
icebp
inc
lea
ss
jmp
mov
jne
pop
in
fidivl
cmp
inc
shll
add
pop
push
roll
xchg
clc
nop
outsb
out
dec
mov
addr16
mov
fsubl
scas
mov
js
inc
adc
inc
mov
dec
imul
mov
xchg
cmp
divl
xchg
cmp
mov
inc
mov
mov
mov
rcrl
in
mov
fimull
sbb
inc
jl
mov
mov
pop
stos
in
lcall
dec
mov
hlt
push
dec
pop
mov
xchg
or
jp
loop
test
dec
push
and
sub
test
jb
mov
lea
inc
into
xchg
pop
testb
cmp
icebp
leave
lcall
mov
test
and
sbb
xor
push
cmp
mov
push
pop
or
cmp
cmp
xor
jno
leave
les
xor
outsb
cli
mov
iret
icebp
push
sbb
shll
aad
int
inc
fidivl
lock
cwtl
movsb
or
add
add
inc
add
pop
in
mov
adc
sub
mov
jl
sub
insb
repnz
inc
cmp
mov
sub
adc
adc
mov
dec
scas
call
fldenv
mov
cmp
sub
or
xorb
nop
mov
adc
sti
push
std
xor
adc
sbb
ffreep
pop
mov
pop
lcall
das
lahf
push
lods
loop
les
bound
gs
das
mov
jecxz
sbb
cmpb
ret
sub
xor
insb
or
cmp
push
xchg
xchg
pop
inc
in
outsl
mov
aad
nop
sahf
push
aam
pop
pop
scas
sub
cld
mov
push
pusha
iret
push
mov
cmp
push
cmp
cmp
xor
mov
cmp
fcmovnb
xchg
xchg
pop
addr16
rcrl
loope
jmp
adc
and
arpl
and
sarl
sub
popa
popa
clc
and
int3
push
push
add
or
std
cltd
insl
cmp
and
ret
cmp
imul
dec
jbe
pop
lret
sub
int3
pusha
mov
add
cmc
cmpsl
sbb
push
mov
fdivrs
negl
dec
pop
sahf
lds
mov
sub
sub
mov
test
scas
fidivs
lods
and
xchg
xchg
mov
jmp
lcall
fistpl
or
gs
sbb
rcr
aad
mov
and
xchg
mov
out
into
rorb
call
dec
imul
xchg
xchg
lcall
sbb
jne
arpl
cmpl
ds
cmp
inc
push
out
push
pop
or
clc
xchg
orl
fdivp
imul
icebp
popf
bswap
loopne
in
inc
je
mov
bound
sbb
loope
push
js
enter
jp
sbb
mov
and
ja
int3
xor
cmpsl
and
stos
test
cmp
cmpsb
ret
and
mov
push
jne
popa
push
or
push
dec
test
pop
cmp
mov
aas
pop
sbb
or
xor
ljmp
pushf
xchg
mov
push
mov
xchg
pop
add
scas
rorb
sbb
ret
rcrb
pop
mov
mov
sub
jnp
xchg
imull
pop
xchg
movsl
mov
cld
stos
jo
cmp
jg
xlat
push
dec
popf
mov
imul
xor
test
mov
lods
dec
ds
xchg
adc
stos
int3
scas
imul
fists
insl
test
rcrl
pop
pop
sub
out
addr16
ds
movsb
addr16
add
shrb
imul
sbb
je
rorl
jl
pop
ret
and
mov
sbb
cmp
xor
push
sarb
popf
mov
roll
sbb
ljmp
cltd
pop
add
arpl
mov
nop
les
adc
call
pop
cmpsl
rcrl
push
pop
mov
adc
pop
outsb
sarl
pop
adc
push
mov
das
repz
test
into
sbb
scas
cltd
pusha
leave
ljmp
pop
imul
outsb
out
roll
js
add
mov
shll
sbb
xor
rcll
jle
test
and
and
mov
xlat
pop
mov
shlb
push
add
push
inc
sbb
frstor
push
lea
daa
mov
xor
sar
testl
sbb
push
and
add
pop
lods
jp
push
sarl
mov
sub
cli
push
xchg
and
or
push
mov
cmp
cld
cvtpi2ps
mov
icebp
dec
std
fbld
pop
movlps
mov
pop
pop
jmp
xchg
cs
push
stc
inc
inc
or
lahf
pop
sub
inc
outsl
jbe
shlb
sahf
and
or
pushf
dec
cwtl
mov
aas
cmpsb
sub
mov
cmp
outsb
or
daa
std
movb
addr16
mov
out
pop
and
jo
adc
mov
sbb
push
ljmp
add
cmc
je
mov
loopne
cmpsb
or
out
jg
mov
fwait
lea
fnsave
rcll
enter
pop
push
ja
iret
cs
outsb
add
fisubs
lds
jno
mov
dec
xor
repnz
sbb
scas
arpl
dec
mov
xchg
outsl
push
mov
bound
out
movb
and
pop
pusha
sub
insl
jl
outsb
and
add
cmp
mov
and
jae
cmpsb
and
mov
sbb
xor
addl
fs
add
shll
mov
mov
out
mov
dec
movsb
lret
xchg
jge
sub
push
enter
cmpsl
je
pushf
push
dec
repz
sbb
lods
sbb
inc
jno
jmp
xor
ss
bound
fstpt
jo
push
pop
and
or
mov
fidivrl
mov
ss
pop
cmpsl
and
mov
scas
mov
mov
inc
mov
jns
inc
add
xor
scas
mov
or
mov
imul
mov
nop
les
jno
shlb
js
or
xchg
out
enter
lahf
cmpsl
cmp
xchg
inc
test
pop
aam
add
hlt
iret
jno
adc
inc
mov
call
xchg
cmc
ss
xchg
stc
mov
idivl
rolb
or
mov
sbb
mull
outsb
jp
ret
push
cmpsb
loope
push
xor
aad
pop
cld
fidivrs
and
fistpll
or
jbe
add
aam
stos
sbb
mov
push
ret
sbb
hlt
cmc
rorl
gs
jns
sbb
scas
shlb
jecxz
inc
jg
data16
sbb
jae
repnz
je
jg
stc
imul
mov
ljmp
or
mov
jge
mov
push
inc
leave
xor
xor
cli
cmp
andb
push
call
fcomip
subl
mov
in
mov
pusha
mov
sahf
mov
addr16
add
aad
das
jl
cmpsb
test
loope
out
jb
lock
push
sarl
scas
add
sub
cld
lcall
ret
fdecstp
jnp
cmp
aad
into
sbb
adc
sub
fisubrs
lock
ds
cs
loopne
pop
and
mov
aad
xchg
iret
fstl
cmc
insb
xor
idiv
push
adc
movsl
lret
iret
cmp
sub
add
outsb
sarb
pusha
mov
dec
cmpsb
push
addr16
push
test
popf
mov
jae
mov
aaa
sbb
inc
pop
jle
movsb
mov
jae
test
ret
ljmp
pushf
das
data16
in
push
or
cmc
cmp
pop
iret
sub
pusha
mov
add
test
loop
clc
jmp
mov
faddl
fstl
sbb
and
pop
xor
mov
arpl
mov
push
aas
ss
shrl
imul
cli
aad
icebp
clc
lret
or
dec
or
fcmovnb
call
dec
in
scas
add
stc
lahf
and
imul
dec
push
jle
outsb
jle
cmpsl
adc
push
shl
cs
mov
xor
repz
aam
fmuls
out
dec
sbb
loope
outsl
cmp
jno
pop
hlt
das
rcll
popa
fisttpll
in
push
xchg
cmp
addr16
mov
pop
adc
daa
mov
jnp
imul
mov
fdivrl
xlat
pop
push
dec
insl
dec
inc
stos
andl
jmp
sub
btc
cmpsb
xchg
call
scas
stos
lea
cmpb
imul
mov
jg
fmuls
fcoms
movsl
cmp
sub
iret
push
adc
imul
mov
jecxz
mov
mov
rcl
leave
push
xor
and
push
cmpsb
xlat
jno
jl
ja
mov
mov
out
add
loop
loop
and
rorl
pop
das
jb
add
jae
xchg
out
or
sbb
cld
add
ret
sbb
hlt
mov
hlt
leave
and
lret
add
adc
repz
stos
jle
cmp
icebp
int3
and
sub
xchg
shl
lds
inc
xchg
push
mov
xor
test
lods
xchg
sub
inc
sbb
and
or
pop
jno
imul
adc
cli
inc
push
xchg
jl
add
lahf
push
cmpsb
mov
sbb
push
ss
sti
lods
jb
cwtl
dec
test
das
and
test
push
pushf
inc
in
bound
call
mov
lcall
int3
jecxz
lds
pop
into
mov
push
imul
push
adc
or
fdivl
push
push
pop
pop
fnstsw
push
lahf
sahf
and
scas
cmc
fimull
pop
push
mov
cltd
imul
adc
fcomi
ret
mov
sbb
dec
and
test
and
push
cli
popf
sarb
adc
or
pop
and
cmp
or
xchg
push
mov
lret
push
jmp
orb
into
xor
and
lock
lods
xor
xchg
movsb
pop
cmc
lds
adc
inc
das
je
into
push
jg
jne
idivl
repz
les
pop
mov
mov
mov
adc
cmpsb
push
daa
dec
lds
pop
aaa
cmp
adc
ret
fwait
jp
nop
mov
push
mov
mov
and
fsubrs
loopne
aad
data16
fstl
pop
jp
xor
mov
xchg
test
popa
push
push
or
xchg
jno
ja
popa
lahf
lret
push
sbbb
inc
sahf
lods
jns
jge
xor
or
xlat
mov
mov
jb
push
cmp
jo
test
call
subl
or
call
fcmovbe
lea
ret
jmp
xor
movsl
inc
lods
xchg
imul
xchg
shll
cmp
mov
xor
inc
insl
xor
mov
or
clc
fcmovnbe
out
push
jns
ljmp
adc
add
cmp
mov
rorl
cld
xor
shlb
mov
ss
pushw
dec
lds
lock
xor
clc
packssdw
or
pop
dec
add
lahf
push
xchg
jge
pop
ja
int3
cmpsb
push
fdivrs
insb
sahf
pop
les
xor
insb
jecxz
dec
cmp
inc
mulb
loop
pop
test
xchg
dec
jo
rcr
stos
cli
das
mov
jp
xchg
shlb
mov
and
fdiv
cmpsb
jae
pop
adc
sub
mov
xor
inc
lret
int3
cltd
lds
adc
inc
mov
lret
push
adc
and
rcll
into
dec
loopne
icebp
inc
dec
jno
dec
and
shl
je
icebp
dec
sarb
pop
mov
bt
xchg
adc
mulb
popf
push
cwtl
sub
inc
test
push
inc
cmp
scas
sbb
mov
mov
or
shrl
pop
adc
sbb
icebp
mov
cmp
adc
mov
or
jl
sahf
pop
add
imul
lods
js
pop
xor
iret
cmc
jb
cmp
dec
dec
outsl
rcr
fidivl
jne
std
lcall
xor
out
or
adc
repz
inc
xor
mov
adc
mov
je
jle
jmp
into
ret
mov
cmpsb
cmp
arpl
notb
data16
jge
xorb
mov
cld
lret
shll
sarl
rorl
xchg
mov
xchg
jle
mov
mov
sub
push
nop
xor
xor
imul
xchg
pop
addb
pop
scas
mov
insb
mov
mov
cmp
ret
dec
sub
push
fistpl
xor
aas
notb
pushf
jo
jmp
xorl
xor
add
sbb
inc
stos
imul
adc
ror
push
lcall
push
mov
jg
pop
sahf
fstl
movsb
aas
dec
cmc
pop
addr16
pop
mov
jae
out
or
jno
stos
pop
scas
sbb
mov
ja
push
xchg
mov
loope
jno
lods
and
insb
mov
mov
xchg
xor
shl
xchg
push
shlb
mov
sub
rcr
lods
insb
stos
movsl
sbb
loope
cmp
push
icebp
xor
movsb
shll
pop
out
inc
sub
sub
sub
aaa
stos
cld
adc
sub
mov
and
sahf
jb
sahf
mov
inc
pop
gs
inc
insb
fimull
sbb
stc
push
dec
shrl
push
cltd
mov
outsb
adc
pop
cmp
ret
inc
inc
inc
mov
mov
jb
sahf
and
sub
sbb
out
or
cli
outsl
xchg
xchg
mov
out
repnz
or
jno
ret
mov
adc
leave
pop
fildll
test
cmpsl
negb
dec
loopne
stc
cmc
pop
xor
sbb
sub
jne
cmp
pop
rol
and
lea
sub
es
jo
xor
lret
dec
jbe
mov
and
movsb
lds
mov
ljmp
add
negb
cmpsb
cwtl
xchg
xchg
push
cmp
dec
jnp
cs
add
cltd
jmp
es
jle
dec
dec
jnp
testl
jne
xor
mov
movsb
bnd
into
pop
jo
mov
in
lods
mov
push
and
icebp
and
fimull
inc
pop
pop
outsb
pop
dec
sahf
fnsave
dec
sub
xchg
inc
jmp
lods
push
ja
xlat
mov
jae
adc
push
pop
neg
push
cmp
jno
pop
insb
xor
or
xor
xchg
aad
leave
xchg
cli
jnp
mov
push
mov
xchg
jns
lret
cmpl
loopne
ljmp
dec
pop
xor
mov
jb
fistl
fimuls
enter
xchg
adc
jg
xchg
mov
mov
xor
insb
leave
and
test
mov
loope
adc
stos
mov
fnstsw
outsl
or
mov
arpl
aad
aam
icebp
in
xor
add
aam
dec
push
adc
adcl
imulb
inc
loopne
xchg
stos
repz
mov
or
nop
jg
in
xchg
test
cmc
pop
cmpsl
das
jmp
es
and
xchg
push
and
mov
in
mov
cmp
inc
jg
xchg
movsb
clc
push
jne
ret
adc
mov
push
scas
out
mov
fists
ljmp
ljmp
inc
inc
xchg
stos
sbb
xchg
mov
inc
pushf
loopne
movsl
xchg
dec
sbb
sub
adc
into
adc
pop
sub
fs
ja
lret
mov
pusha
pop
movsb
cwtl
sahf
arpl
jns
ja
ffree
jle
mov
cs
cli
jle
fisubs
in
leave
into
ss
cmp
sbb
dec
es
std
rolb
out
fs
pop
jo
mov
sbb
mov
out
push
add
and
cmp
mov
mov
pop
dec
push
mov
les
call
roll
nop
lds
pop
inc
sbb
xor
inc
adc
or
and
xchg
arpl
jg
mov
add
jb
xor
hlt
adc
stos
xor
push
xchg
push
inc
jo
sbb
enter
jno
xchg
xchg
jns
cmp
xor
sub
pop
or
shrb
shl
aad
sbb
stos
jp
dec
xor
ds
pop
mov
test
stc
fsts
inc
cmp
fwait
cmp
les
add
push
cltd
int
xchg
jl
cwtl
pop
loop
jo
fiadds
adc
aaa
push
add
jno
dec
and
mov
loopne
mov
add
jmp
lods
jae
pop
sbb
int
fwait
mov
mov
mov
movsl
dec
jnp
fldenv
push
ds
pop
repz
fs
push
filds
xchg
into
out
fstpl
and
mov
aas
mov
rcl
call
cmp
mov
into
adc
inc
mov
cmp
push
das
std
jae
push
and
mov
fistpll
aam
sbb
or
imul
xlat
xchg
mov
xchg
cmpb
mov
mov
xchg
js
pop
aas
outsl
inc
or
xchg
xchg
cmp
and
lcall
sub
ffreep
into
mov
mov
stc
cmp
shl
xchg
mov
sti
jno
or
hlt
xchg
or
xor
push
into
pop
xchg
or
mov
xlat
jae
hlt
pop
mov
clc
and
stc
cmp
inc
sahf
outsb
cmp
xchg
pop
mov
insb
dec
mov
push
xchg
ret
cmc
arpl
iret
sti
adc
addb
cmp
or
mov
sar
cld
xor
pushf
loopne
mov
xchg
inc
leave
outsb
jne
sub
jl
test
ret
mov
andb
pop
pushf
es
push
stos
lahf
adc
adc
xchg
ljmp
rcrl
or
dec
mov
scas
jns
in
or
push
jecxz
in
cmp
loope
loopne
iret
popa
pop
out
and
scas
jl
icebp
sub
and
jecxz
in
mov
mov
jmp
jp
int3
sbb
push
xchg
fs
leave
add
stos
fstpl
jns
fwait
cmp
or
es
inc
hlt
mov
gs
mov
shlb
push
out
or
dec
mov
ffree
out
gs
fdivs
cmc
cmp
aaa
mov
idivb
mov
cmp
pop
lret
out
push
jae
add
pushf
icebp
dec
mov
subl
inc
jp
fwait
out
jp
subb
pop
mov
sbb
xchg
adc
xchg
popl
hlt
sub
mov
sbb
and
pop
inc
mov
das
iret
mov
mov
idivb
add
scas
popa
in
xor
mov
sub
faddl
inc
xchg
inc
jle
clc
lret
push
shlb
fimull
adcl
jns
shlb
cwtl
adc
sub
jge
cmpsl
adc
xor
inc
arpl
cmpsb
add
mov
pop
cwtl
dec
mov
lods
mov
movsl
jo
push
sarb
dec
int
xor
nop
dec
push
xchg
mov
xchg
dec
xchg
movsb
push
std
mov
outsl
sti
xchg
lods
loopne
sti
mov
pop
fcompl
inc
or
jl
sbb
xchg
mov
sub
xchg
and
dec
das
push
cmp
scas
mov
jge
rorb
mov
xchg
clc
loopne
pop
enter
js
mov
outsb
mov
add
repz
push
adc
dec
dec
sbb
dec
mov
push
popf
xchg
adc
add
int3
shlb
aas
fs
and
pop
push
jl
add
imul
inc
mov
jnp
repnz
jle
jae
out
push
mov
arpl
and
jmp
sahf
aas
dec
popa
rcrl
xchg
xchg
cmc
scas
mov
popa
xchg
mov
dec
mov
in
insb
mov
jno
loop
push
pop
xorb
lcall
xchg
mov
mov
and
negb
in
dec
faddl
test
icebp
pop
inc
dec
mov
xor
mov
insl
mov
rorb
inc
dec
jg
xor
enter
adc
orl
rcll
lcall
cmpsb
mov
sbb
inc
out
push
push
xor
mov
cmc
jge
pop
mov
imul
fwait
shlb
mov
and
add
and
lcall
ret
mov
cs
xor
jl
fistps
add
rorb
cs
xchg
and
mov
or
cmp
jbe
dec
or
xor
push
adc
pop
sub
push
jo
movsb
movsb
cltd
dec
push
pop
fsts
push
push
mov
mov
ds
mov
mov
lods
or
fcmovu
cli
or
into
jns
adc
pop
ret
imul
xchg
subb
jmp
push
mov
or
push
and
pop
mov
lods
mov
loopne
push
adc
es
lds
mov
mov
outsl
cmp
cli
jecxz
stc
jbe
frstor
sti
pop
call
sbb
jmp
scas
pushf
xor
out
adc
sahf
xchg
test
pop
dec
daa
or
jp
mov
add
push
popa
ljmp
stc
lods
das
call
insb
rolb
aaa
pusha
jl
rolb
in
xchg
add
mov
xor
or
push
gs
andl
test
outsl
add
mov
test
and
pushf
sbb
sub
sbbb
mov
dec
mov
sbb
subl
mov
xchg
jno
mov
add
sub
mov
push
adc
adc
outsb
shl
in
or
pop
add
into
aam
inc
lock
pop
push
mov
add
mov
adc
out
repnz
add
cmp
sbb
mov
sahf
add
mov
loope
inc
push
adc
cmp
adc
ja
sbb
xchg
shll
or
dec
push
cli
nop
leave
jle
inc
scas
inc
push
and
mov
inc
xchg
mov
std
ret
popf
aas
push
xchg
shrl
inc
enter
rcrl
out
push
inc
sub
add
int3
test
jae
aam
cmpsl
xchg
fnstenv
lret
rorb
enter
pushf
shl
mov
and
mov
repz
divl
test
push
cmp
cld
mov
pop
fstpt
push
cmp
pop
lods
xor
fcom
push
call
test
xchg
pop
enter
sbb
je
sub
mov
cmp
lret
or
std
scas
cwtl
inc
mov
popa
testl
pop
jle
fsub
push
pop
pop
fbstp
aam
cmp
jl
cmpsl
mov
icebp
pop
inc
mov
jge
and
mov
out
sub
mov
sub
stos
lds
sbb
cli
mov
shrb
push
xchg
push
fidivl
lock
or
and
leave
lret
push
mov
hlt
pusha
mov
mov
xchg
push
adc
enter
and
or
sub
bound
mov
mov
push
movsb
dec
inc
xchg
sub
addr16
jp
push
imul
mov
adc
pop
cmp
xchg
cmp
jl
movsl
sti
add
mov
jg
ffreep
jae
into
inc
mov
adcb
push
cmpsb
loop
jmp
shll
xor
cmp
rcrb
iret
mov
aas
in
pop
rolb
xchg
pushl
mov
adc
jg
fstl
cmp
inc
inc
push
sbb
jo
ljmp
inc
xchg
dec
ljmp
xchg
dec
sub
add
xlat
stc
sub
fnstenv
fstpl
add
sbb
jle
cmp
fdivrl
or
adc
push
popf
cmp
cs
mov
or
popa
or
cmp
mov
daa
into
xchg
fimull
adc
dec
jnp
pop
repz
jmp
inc
icebp
lds
pop
push
inc
xlat
sbb
shrb
adc
mov
arpl
idivb
enter
push
cmp
inc
scas
xchg
cmc
pop
mov
arpl
imul
ljmp
cmpsl
insl
arpl
lret
cmpsb
push
ja
out
pop
rcl
xchg
sbb
pop
out
loope
jae
insl
sbb
les
into
pop
or
sahf
push
mov
das
lcall
outsb
ficomps
jmp
rcr
js
enter
jnp
mov
push
popf
push
daa
lret
mov
cli
dec
pop
mov
dec
push
mov
loop
cs
cmp
out
aaa
icebp
fisubs
sbb
dec
xchg
jecxz
mov
addr16
lret
fmul
push
mov
int
pusha
cmp
dec
push
popfw
pop
jne
mov
nop
pop
pop
aad
mov
adc
mov
jns
and
mov
lods
and
dec
rorb
xor
push
push
andb
add
inc
in
scas
mov
mov
jp
dec
repnz
das
lahf
rcrb
js
mov
ret
xchg
mov
push
pop
hlt
shll
inc
cwtl
xchg
rorb
imul
mov
jecxz
mov
cmp
mov
test
sbb
enter
mov
or
stc
insb
push
lahf
sbbb
adc
jbe
add
testl
dec
and
mov
pop
loope
sarb
jne
bound
jge
repz
add
gs
and
mov
out
gs
movsl
cmpsl
jge
lahf
xchg
addr16
out
popa
sbb
add
adc
scas
repnz
xchg
or
jb
data16
inc
and
dec
call
lahf
and
je
imul
xchg
mov
fnsave
cltd
adc
lds
fstpt
push
js
adc
mov
mov
sbb
jnp
repnz
insb
lret
std
in
xchg
pusha
push
mov
mov
jmp
roll
xor
iret
push
sahf
andl
push
rol
fstl
iret
cmp
sub
into
xchg
mov
lret
loop
movl
loope
js
js
pop
mov
cmpsb
scas
pop
addr16
cmp
in
xchg
les
int3
pusha
ss
stc
cwtl
js
loopne
out
push
adc
repnz
cmp
xchg
adc
pop
je
mov
lods
scas
jge
in
sub
and
mov
xchg
mov
add
push
jl
lock
inc
inc
outsb
or
or
inc
or
mov
fldcw
pop
fwait
sahf
repz
ret
inc
xor
imul
or
inc
arpl
int
or
push
mov
jae
sbb
cmp
mov
inc
fisttpl
cs
mov
adc
jns
inc
ja
jo
xor
xlat
arpl
push
movsl
popf
cmpsb
daa
pop
in
in
pop
xor
icebp
dec
or
arpl
push
repz
in
xlat
mov
outsb
and
es
ja
imul
xchg
sub
inc
mov
sbb
outsb
adc
jne
daa
and
jo
shrb
adc
and
cli
jo
jo
clc
lret
sbb
in
xorb
mov
imul
repz
push
arpl
lret
and
test
dec
add
xbegin
test
out
jl
jmp
lahf
sub
and
or
and
into
test
lcall
cmp
lcall
xor
push
aam
cmpsb
daa
cmpsb
call
and
mov
pop
push
sbb
add
cmp
xor
push
and
int
push
cwtl
inc
mov
or
lea
ja
sbb
xchg
iret
rolb
mov
push
ffreep
mov
add
cmpsb
xor
in
mov
adc
call
call
in
mov
push
fwait
movsl
imul
daa
or
jbe
mov
mov
ret
sub
inc
sbb
cmp
xchg
in
test
bound
loope
cmpsl
loopne
bnd
xchg
push
jno
in
loopne
movsb
lret
out
mov
icebp
nop
mov
imul
xchg
loop
gs
cli
jo
or
jne
lahf
cmp
or
lret
das
loope
or
jne
pop
ss
mov
xchg
in
jmp
cld
add
lea
icebp
dec
movsl
fldcw
jecxz
sbb
xor
inc
inc
mov
movsl
das
jbe
xor
pop
loope
in
dec
cmp
out
adc
xchg
inc
je
shr
push
arpl
cs
jno
fcomp
clc
in
sti
jle
popf
cmp
jg
dec
adc
mov
and
scas
out
push
inc
mov
push
nop
int
mov
out
lahf
mov
mov
pop
sbb
movsb
cld
jecxz
mov
test
or
addl
cld
into
adcb
xchg
xchg
add
scas
sub
jg
jo
std
push
pop
clc
lahf
popf
bound
xlat
fwait
js
jg
out
in
pop
xor
outsb
hlt
xchg
or
add
js
std
stos
cld
popf
loopne
or
jg
fists
dec
jne
mov
int
fisttpll
inc
std
xlat
iret
jle
sti
stos
mov
enter
xor
jl
je
add
in
aaa
outsl
ljmp
inc
jae
or
fldt
bsf
fs
push
sbb
dec
mov
push
push
negb
add
sbb
call
stc
pop
das
enter
lods
fwait
mov
mov
imul
icebp
and
fwait
mov
lds
ret
xchg
out
imul
adc
xor
xor
call
mov
inc
je
pop
pop
cli
jmp
clc
mov
mov
dec
leave
jnp
inc
rorl
sahf
negl
out
adc
dec
fs
loop
xchg
popf
cmp
jne
cmp
cmp
inc
mov
cld
mov
pop
adc
push
push
leave
fiaddl
mov
or
ljmp
hlt
jno
push
cs
pusha
jbe
lds
inc
inc
gs
rcr
or
xchg
pushf
into
scas
popf
popa
lds
icebp
cmpsl
pop
push
or
adc
test
les
inc
icebp
lret
lods
mov
adc
push
xchg
cmc
add
fstps
mov
push
jbe
popf
lcall
add
sbb
xchg
fwait
dec
jo
add
xor
adc
mov
xor
int3
aad
hlt
lahf
mov
xor
repnz
out
movsb
mov
mov
mov
xorl
stos
or
mov
fimull
cld
jne,pt
std
sub
add
or
shr
cmp
dec
adc
or
jl
les
pop
jae
and
mov
shl
mov
decl
cmp
mov
addb
xchg
or
jg
xchg
jge
or
push
arpl
das
mov
rclb
inc
sbb
adc
je
sbb
repz
lods
and
addr16
dec
icebp
repnz
dec
vcvtss2si
sub
subl
mov
cld
xor
cmp
int3
pop
popf
xor
xchg
fnsave
lock
push
lds
flds
repz
mov
pop
ret
icebp
xchg
cmp
sbb
mov
adc
mov
scas
cs
cmp
jle
aas
cmp
lods
repnz
lret
xor
pop
sub
imul
movb
push
jl
push
std
push
mov
mov
sbb
fwait
ret
fxch
sub
jle
lods
stos
xchg
adc
lods
lock
push
ret
andb
or
jae
popf
notb
mov
clc
mov
outsl
dec
into
loope
clc
xor
mov
push
xor
push
jo
enter
call
movsb
jb
sbb
in
and
jmp
aam
test
enter
push
pushf
mov
cwtl
push
outsb
or
xchg
push
inc
jl
lea
xor
or
mov
or
outsl
sahf
xor
jmp
rol
rcrb
sbb
jb
mov
dec
adc
fcompl
arpl
dec
imul
sub
out
int
outsb
jg
xchg
pop
cli
mov
and
and
or
sub
clc
out
add
into
out
cmp
or
add
sub
lods
out
and
and
test
xchg
loopne
sbb
or
hlt
out
test
in
fwait
jns
push
das
aad
push
or
mov
out
cmp
leave
push
cli
cmp
sub
add
cmp
je
add
test
scas
popa
shr
bound
movsb
add
inc
pushf
jmp
lods
mov
push
cmp
lahf
addb
sti
scas
mov
inc
decl
jg
and
or
jno
aas
xchg
addr16
push
mov
ret
mov
inc
ret
test
xor
stos
call
repz
ffree
std
and
es
or
cmp
test
sbbl
jg,pn
sbb
sub
out
push
mov
jne
jns
icebp
test
into
cmp
adc
imul
insb
iret
mov
jno
dec
mov
add
addr16
inc
add
pop
jmp
mov
fwait
pop
loop
mov
test
push
jb
and
inc
popf
xchg
hlt
pop
or
rclb
repz
pop
bound
adc
mov
inc
cmp
xchg
popa
js
pop
mov
mov
sbb
scas
xor
push
pop
in
jecxz
fdivs
mov
adc
aas
inc
pop
scas
add
add
in
pusha
push
orl
popa
cld
and
mov
iret
and
push
pop
dec
jge
cmc
outsl
pop
cmp
xor
shll
cli
push
adc
data16
pushf
add
push
dec
imul
mov
pushf
addb
add
mov
in
add
cli
jo
and
movswl
ror
and
mov
test
and
je
movb
outsl
aas
push
pop
push
pop
mov
mov
fdivrl
rclb
stos
jmp
adc
mov
cmp
shlb
addr16
pop
cmp
ss
inc
js
pushf
inc
and
push
add
loopne
inc
inc
xor
ret
push
andb
xchg
ret
mov
cmpsb
pop
jg
sti
scas
mov
push
dec
mov
addr16
mov
ret
and
lret
push
inc
inc
xor
shrl
xor
out
out
scas
cmpsb
xor
cmpsl
sub
sahf
imul
cmp
pushf
stos
xchg
mov
xor
mov
sub
push
aad
shl
ljmp
adc
and
pop
sahf
lahf
cs
cmp
daa
pop
jbe
fisubl
add
lock
int3
inc
sbb
and
mov
insb
cmc
xor
sarb
sbb
cltd
inc
lret
shrl
outsl
lods
clc
mov
les
test
mov
and
push
pop
xchg
jmp
repnz
pop
sbb
pop
mov
and
mov
or
into
adc
aaa
lret
sub
test
or
gs
mov
pop
loop
test
xor
ficoms
repz
pop
mov
pop
sbb
add
cs
scas
iret
les
loopne
lret
add
adc
push
pop
cmp
repnz
mov
cmp
push
inc
push
sub
mov
sbb
push
cmp
push
dec
testl
xor
stos
or
pusha
adc
push
mov
dec
push
lock
or
mov
xor
xor
testl
subb
jbe
popl
out
cmp
stc
in
enter
push
sahf
aaa
jecxz
enter
xchg
mov
xchg
cmc
mov
out
out
push
int3
in
push
test
and
mov
scas
add
cmpsb
andb
mov
mov
inc
pop
fcoml
and
mov
push
inc
mov
inc
jmp
jbe
sbb
inc
cmc
dec
pusha
sbb
jb
push
rclb
loop
outsb
inc
mov
inc
test
cmp
dec
ja
aas
push
int3
pop
je
insb
aaa
pop
loop
push
pop
xor
jo
xchg
cmp
pop
insb
xchg
sub
out
test
pop
mov
jecxz
pop
repz
ret
sub
lds
xor
jo
out
mov
pop
lock
push
adc
ljmp
insb
xor
pushf
loopne
push
inc
fcompl
repz
std
daa
push
and
sbb
je
adc
pop
push
adc
movsl
pop
arpl
loopne
rclb
add
mov
xchg
jbe
jecxz
shl
bound
mov
or
pop
mov
fsubrp
cmp
cmpsl
sub
inc
das
mov
mov
mov
mov
hlt
sti
sbb
and
mov
lret
inc
sub
lds
or
adc
xchg
in
fiaddl
xchg
push
push
jo
or
es
shrl
mov
scas
sti
jp
aaa
enter
rorb
mov
xor
dec
mov
jge
dec
aas
mov
and
and
pop
sbb
jmp
sub
inc
mov
shl
xchg
and
sti
jne
in
mov
xchg
xor
push
pop
movsl
lea
push
and
add
jne
inc
cmp
rcr
dec
inc
out
div
mov
popf
fsubl
adc
cmp
ja
jmp
cmpl
mov
popf
hlt
xchg
xlat
cmp
test
sbb
in
pusha
js
divl
loopne
sub
mov
movsl
or
and
fst
dec
aas
inc
sahf
cmp
mov
cwtl
mov
xor
sub
stos
int
cmpsb
jecxz
xchg
add
enter
icebp
add
addr16
xor
xchg
adc
subb
aam
pop
adc
xchg
mov
enter
and
inc
mov
jbe
sub
pusha
jl
lret
sbb
sbb
mov
bound
or
and
pusha
jle
fmull
inc
push
fmull
xchg
push
mov
mov
pop
mov
lds
jb
xchg
lret
cli
mov
lahf
aam
and
movsl
jg
popf
loope
jno
jae
adc
jl
xor
inc
ss
iret
dec
fidivl
repnz
js
push
mov
add
movsl
outsl
inc
mov
push
ds
sub
out
scas
mov
je
cmp
add
sbb
adc
arpl
cmpsl
call
sbb
lock
mov
mov
nop
sarb
mov
cmp
and
loop
xchg
lret
inc
sbb
push
mov
aam
stos
adcl
outsb
rcll
xor
mov
rcrb
fisubl
mov
mov
inc
nop
or
test
mov
xor
movsl
dec
pop
jl
repz
mov
orb
fistps
in
dec
cmc
test
cmpsl
lahf
gs
and
mov
push
jb
out
arpl
test
sub
jbe
test
xor
data16
add
mov
adc
mov
pop
pop
je
xchg
nop
mov
add
jecxz
cwtl
into
in
fcoms
in
mov
in
adc
in
xor
insb
cmp
mov
dec
les
push
fnsave
pop
lds
repz
scas
icebp
xchg
and
arpl
and
dec
leave
jbe
dec
in
fsubl
mov
fmuls
pop
inc
movsl
xor
inc
pmulhw
cli
adc
inc
insb
into
cmpb
out
rorb
inc
test
and
jns,pn
add
mov
add
call
lea
jle
pushf
adc
push
lahf
push
repnz
mov
and
jnp
pop
or
add
add
bound
cmc
lret
push
xchg
insl
test
insb
mov
push
push
loope
mov
adc
and
es
lret
xchg
push
or
rorb
sub
ds
fildll
ret
mov
jl
cmp
stc
push
std
sub
lret
sub
and
jmp
xlat
arpl
mov
cs
in
movsl
aad
ret
aad
addr16
outsl
lea
xchg
cli
cli
test
and
xlat
shr
cmpsb
adc
arpl
aas
mov
pop
inc
sbb
lea
movsl
push
fistl
push
sub
lahf
arpl
repnz
mov
aaa
cmp
rorw
push
aaa
inc
pop
cmp
or
aad
xchg
cmp
cmpsl
popa
shll
js
push
rep
sub
cmp
ficompl
mov
data16
subb
xchg
movsl
jb
loope
popa
push
xchg
add
repz
xchg
add
hlt
inc
pop
xlat
mov
jge
adc
sub
rol
pushf
push
lret
sbb
jb
popf
jbe
jle
xchg
mov
pop
inc
pop
xlat
into
mov
xor
cmp
sub
add
ret
lcall
fucomp
cli
xchg
bound
roll
les
add
xchg
je
nop
xchg
hlt
dec
aad
pop
int
dec
xor
nop
pop
lahf
cli
repz
xchg
dec
leave
cli
pop
lds
aas
std
jge
fidivrs
xchg
lock
lea
fwait
mov
or
inc
shrl
adc
pause
mov
or
data16
dec
test
xlat
in
mov
xor
imul
faddp
fistl
cmp
testl
and
dec
sub
addr16
sub
dec
push
test
push
jl
fldcw
push
lds
test
jns
mov
dec
cli
imul
xchg
adc
jge
push
mov
rorl
pusha
call
sti
out
outsl
cmp
popa
test
mov
mov
push
push
f2xm1
cmp
xlat
add
add
mov
push
popf
push
popa
ja
cmpsb
xchg
movsl
sti
cmpsl
mov
xchg
out
ror
xor
jl
shlb
jns
imul
jne
lret
jne
es
push
dec
call
xor
subl
xor
inc
mov
add
jae
mov
push
xor
inc
leave
repz
mov
pusha
hlt
out
test
and
and
push
jle
add
adc
adc
or
mov
jno
xor
cmp
mov
subl
mov
das
loope
jmp
and
lock
shlb
test
ljmp
jne
xchg
adc
xadd
outsl
lds
fnstsw
or
jp
and
and
les
pop
in
pop
add
mov
and
sarb
mov
mov
sub
mov
fmuls
xor
push
cli
sub
fsubl
mov
pop
and
sub
call
das
mov
outsb
leave
mov
hlt
jle
dec
xor
js
jbe
lret
sbb
mov
add
clc
lds
xchg
cmp
stos
sar
imul
jbe
push
mov
int3
and
push
mov
das
outsl
aas
fsubs
insl
pop
addr16
mov
sbb
outsl
test
lea
lret
jmp
ss
shlb
jmp
popf
cmp
hlt
adc
popa
imul
lock
dec
out
lea
xchg
enter
in
cltd
cs
into
pop
mov
adc
or
mov
mov
das
adc
sbb
mov
andb
push
add
sti
inc
in
push
pop
dec
rorb
mov
jmp
into
xor
sahf
inc
test
and
jmp
imul
cltd
pop
pop
dec
mov
pop
fs
mov
pusha
push
insl
sub
scas
cwtl
mov
int3
gs
addb
pop
mov
sub
pop
scas
ja
divl
lret
arpl
test
mov
jl
sub
sbb
out
es
inc
ret
cmc
outsl
cmc
add
jno
sbb
stos
sti
lds
fcompl
jbe
cmp
pop
sti
jecxz
jb
adc
into
push
inc
push
pop
pop
out
inc
or
testl
or
mov
inc
sub
es
outsl
jno
pop
mov
and
out
mov
sub
xor
and
notl
mov
dec
stos
pop
dec
mov
jle
and
add
mov
sub
pop
addr16
aad
ret
in
aas
dec
out
cmp
sub
es
push
rcrl
lahf
clc
icebp
xor
cld
cltd
cs
inc
mov
sbb
inc
jle
or
mov
fsubrs
sub
push
sbb
mov
decb
add
popa
mull
cltd
or
xchg
aas
aam
mov
sbbb
pop
ds
jo
or
push
shlb
xor
mov
data16
cmp
and
jp
inc
sti
pop
add
movl
gs
popf
jnp
enter
sub
inc
mov
insb
mov
shl
arpl
leave
or
jge
push
stos
int3
cli
bound
push
int3
and
xor
dec
stos
dec
fcomi
or
push
das
and
mov
xchg
sub
mov
or
pop
push
in
jnp
js
jge
cmp
jle
stos
dec
dec
rcrb
notl
fsubs
jp
pop
and
dec
inc
pop
jne
rorb
repz
cmp
or
mov
pop
outsl
cld
inc
mov
add
dec
push
cltd
xchg
mov
inc
fbld
in
or
add
popf
inc
jb
je
xlat
pop
jo
jmp
sti
pushf
cmp
cli
pop
jle
jle
mov
push
js
add
xlat
push
pop
lret
pop
mov
je
lock
mov
xchg
outsl
xchg
mov
outsb
cwtl
cmove
mov
sbb
imul
cmp
jecxz
add
push
or
push
fdivl
call
add
insb
les
aas
push
cwtl
mov
jae
inc
es
mov
or
sar
xchg
xchg
jne
ds
outsb
outsb
adc
nop
jnp
mov
lock
enter
jmp
loope
scas
aas
rclb
aam
js
call
xor
inc
dec
mov
hlt
movb
mov
mov
cmpsb
push
test
inc
mov
adcl
test
dec
mov
push
xchg
sbb
cmp
dec
xchg
js
out
jnp
adc
movsb
fildl
sbb
lret
push
xchg
sarb
stc
je
pop
and
mov
or
int3
cmp
cltd
leave
test
pop
add
and
adc
add
jge,pn
cmp
or
loopne
or
repz
or
es
aam
xchg
cmp
test
or
add
cmp
arpl
test
shrl
insb
aas
push
push
sub
sbb
mov
add
leave
bound
push
fld
xlat
call
js
and
aad
push
mov
in
pop
adcl
xchg
sbb
inc
and
xor
stos
mov
xchg
pop
shr
scas
pop
push
pop
mov
pop
je
insl
add
mov
push
xchg
mov
lahf
and
mov
mov
int3
mov
sar
jo
cmpsb
dec
sbb
test
sbb
sbb
outsb
mov
and
enter
add
lods
jl
dec
clc
stc
mov
mov
add
clc
or
ret
popf
pop
mov
ret
lods
fstps
push
jle
ja
dec
out
adc
adc
aas
lcall
push
mov
ds
inc
lds
mov
lret
lret
jbe
mov
jmp
xor
and
inc
pop
das
adc
movb
out
push
fisubrs
mov
sub
inc
add
pop
adc
scas
fildll
and
sbb
pop
out
mov
dec
mov
jle
add
test
faddp
test
jge
test
xor
mov
mov
pop
or
stos
inc
jne
pop
addr16
pop
in
repnz
mov
outsl
push
push
jnp
pop
sub
das
dec
daa
and
pop
push
std
pushw
scas
call
jo
addr16
popf
inc
loopne
mov
push
addr16
popf
dec
xor
xchg
mov
pop
xor
vunpckhps
aad
lret
jbe
ja
sahf
mov
dec
xor
or
jg
ret
ja
faddl
loopne
and
sti
adc
imul
inc
or
pop
sti
mov
sub
cwtl
int
and
xchg
fsts
add
fcoml
inc
and
ja
lahf
bound
pop
xchg
sbb
cmp
push
outsb
aam
fnsave
test
adc
mov
push
arpl
cli
int
cli
xchg
nop
mov
xchg
push
inc
push
iret
loopne
xchg
inc
jg
rcll
sbb
add
stc
popf
add
pop
sbb
addr16
mov
movsl
int
arpl
mov
out
xchg
imulb
das
pop
lcall
lcall
push
xor
hlt
inc
mov
or
mov
scas
inc
ret
mov
pop
sbb
jg
cmp
xor
loop,pn
lahf
adc
shrl
clc
jns
cli
xor
cwtl
cmovne
fadd
add
cli
lds
scas
loop
dec
adcb
and
out
sub
mov
mov
lock
les
ret
add
leave
jmp
mov
dec
and
inc
sahf
cmp
test
push
pop
es
push
pop
add
mov
or
cwtl
cmp
mov
pop
out
insb
xchg
enter
shrb
rolb
mov
cvtdq2ps
daa
add
add
jne
add
and
js
iret
pop
addr16
aas
add
out
push
out
xor
movntq
xchg
rorb
adcl
and
or
add
mov
std
mov
imull
mov
ds
mov
sub
push
cld
inc
dec
push
test
pop
add
clc
push
adc
jo
mov
popa
lods
or
or
lea
sbb
jbe
movsl
lea
cmp
scas
sub
mov
push
and
jae
aaa
js
pop
jecxz
xor
xor
filds
fwait
xlat
xchg
ss
inc
mov
push
shll
push
and
jle
test
sbb
jg
cmpl
repnz
cmp
scas
ret
pop
int3
fisubs
in
or
fmull
jb
jge
push
jae
or
mov
enter
orl
push
inc
dec
jo
push
out
sbb
mov
cld
loop
call
mov
in
fdiv
fnstcw
stos
subl
inc
enter
xlat
gs
cmp
or
ja
xchg
imul
add
mov
push
or
pop
fdivr
add
sbb
ret
in
in
jge
aas
lret
std
inc
push
push
gs
jl
rolb
and
and
xor
xor
adcl
lods
neg
mov
push
dec
jbe
pop
nop
fisubrs
jge
cmp
xor
mov
adc
jecxz
push
insl
cmp
push
and
and
mov
mov
imul
pop
lcall
mov
inc
jecxz
cmp
testl
orb
xchg
or
shlb
add
sbb
jae
xor
jmp
enter
mov
fmuls
insl
xor
shrl
cmp
mov
pop
push
shrl
mov
jge,pn
int3
jle
imul
jne
cli
mov
je
fwait
dec
fiaddl
jp
repz
ja
mov
add
cmp
and
push
mov
and
xor
test
or
pop
jecxz
jle
imul
jae
int
jns
pusha
mov
mov
adc
popf
dec
sub
mov
cmpsb
pop
loopne
mov
xorb
insb
or
gs
mov
xor
add
xchg
dec
adc
jo
mov
xor
stos
jbe
ljmp
cmp
mov
xlat
sbb
sub
jbe
and
cmp
cmp
sbb
push
lret
xchg
repnz
sub
inc
adc
aad
ljmp
mov
outsl
push
call
sub
pop
xor
stos
push
sbb
test
or
test
push
stos
je
sbb
daa
jno
sahf
icebp
cmp
loope
popf
out
adc
mov
adc
xor
aad
lods
mov
lods
mov
pusha
int
and
push
xor
clc
sub
ljmp
arpl
in
fidivl
inc
out
addl
insl
push
fbstp
jae
repz
dec
or
mov
jle
jmp
out
aas
insl
mov
pushf
sbb
mov
scas
movl
bound
dec
rcrl
mov
jl
inc
push
pop
sti
sti
cmpb
lea
hlt
pop
fimull
push
xchg
or
xlat
xchg
ret
dec
mov
mov
xor
bound
sub
ret
inc
rolb
popf
lods
mov
push
add
and
jl
jns
mov
add
aas
jmp
xchg
jnp
js
in
cmc
mov
incb
stc
shrl
rcl
push
push
aas
out
xor
dec
aas
adc
mov
sbb
je
inc
scas
aas
inc
pop
xor
pop
cmpsb
loop
lea
test
or
pushf
push
stc
xchg
fistpll
sub
jne
xchg
push
lahf
cli
mov
cmc
xor
push
or
ret
addl
leave
adc
stos
rcll
cmp
aam
sbb
mov
sbb
bnd
pop
push
sub
mov
mov
test
mov
popf
js
sbb
mov
sahf
sbb
imul
lret
sbb
pop
xchg
pop
cmp
xchg
xor
push
imul
and
cli
pushf
subb
repz
xor
stc
xor
jo
int3
xor
jb
xor
fidivs
aad
data16
dec
mov
sbb
xchg
lcall
dec
lret
cwtl
add
mov
inc
hlt
dec
lods
mov
xor
div
adc
repz
mov
dec
fs
xchg
push
add
stc
das
push
pop
dec
or
sbb
mov
mov
mov
loopne
ja
das
xchg
mov
out
cmp
and
mov
rclb
push
insl
imul
push
idivl
pop
out
fdivrl
repnz
ljmp
mov
adc
sub
or
in
cmpb
mov
sbb
inc
in
jb
aaa
mov
sub
scas
int3
iret
adc
sub
in
lcall
in
test
out
xor
icebp
les
mov
xor
into
xchg
inc
xchg
lcall
test
lds
in
inc
pusha
rcrb
or
cld
cltd
loop
call
mov
loope
sub
cmp
dec
call
xchg
out
xor
sbb
sbb
repnz
sbb
or
or
pop
insl
add
pop
arpl
lret
pushf
adc
mov
je
fbld
icebp
rcr
lcall
push
fldln2
ret
ljmp
cmpsb
push
ficoms
inc
mov
inc
mov
jb
add
imul
xchg
movsb
dec
sub
iret
movsl
sub
adc
push
dec
test
sub
push
loopne
aas
or
out
addr16
push
and
mov
sbb
push
outsl
push
push
pusha
cmp
cmp
in
xor
mov
leave
into
ss
rorb
cmp
movsb
movsb
sbb
icebp
xor
adc
scas
les
ds
out
arpl
cmc
mov
adc
ds
sbb
aam
imul
rcrl
mov
push
push
pop
or
pop
sar
xchg
and
and
sbb
and
jo
xor
rcll
xor
adc
outsl
mov
pushf
lock
cwtl
push
mov
inc
pop
mov
shl
ret
or
pop
cmc
sub
fxch
jmp
cld
out
ficompl
xchg
aaa
ja
xor
push
dec
ljmp
lret
jp
push
cli
xlat
pop
xor
jge
je
mov
sub
js
pop
addr16
cmc
in
inc
mov
xchg
jno
jne
or
lret
scas
aam
mov
outsl
xlat
call
mov
inc
popf
push
dec
xchg
daa
dec
pop
hlt
pop
add
mov
ja
loop
dec
jae
insl
add
add
fimull
iret
sarl
mov
mov
mov
xchg
aas
or
fiaddl
mov
xchg
add
test
pop
jno
jp
jge
cs
gs
jmp
sbb
stos
jb
dec
sahf
nop
jae
aam
lcall
push
aad
dec
cmp
mov
jl
cmpsl
push
sbbb
lret
and
outsb
insl
dec
hlt
mov
jbe
std
add
ret
xor
or
xchg
or
push
xchg
xchg
add
add
mov
insb
lods
xchg
add
pop
adcl
inc
cmp
movsl
lret
and
lahf
lret
add
sub
cmp
pop
stos
jnp
iret
flds
xor
das
lock
sarl
pop
pop
mov
aad
add
or
push
pop
mov
dec
shl
push
shrl
adc
sub
adc
inc
into
aas
fsubrp
jge
loop
mov
sbb
lcall
dec
xor
subb
fisubrs
mov
mov
xchg
or
movsb
insl
aam
in
das
daa
jecxz,pn
sub
cmc
test
pusha
xor
int
into
cli
pop
push
sbb
pop
sub
xchg
or
cmp
out
fmull
pop
icebp
inc
pop
cld
push
lahf
data16
cmp
leave
cmp
or
add
add
and
iret
popa
shlb
rolb
testb
adc
push
adc
fsubl
daa
inc
subb
inc
inc
xchg
je
out
jle
push
xchg
in
je
aaa
or
mov
movsl
xchg
sub
or
cmp
aaa
dec
fwait
add
idiv
jle
add
cmpsb
sbb
stos
clc
imul
pushf
imul
andb
inc
ljmp
mov
mul
or
cmpsl
inc
push
xor
jmp
cld
loope
outsb
or
push
dec
cmp
enter
inc
push
les
mov
mov
je
pop
mov
push
insb
cmp
mov
push
int3
fnstenv
and
sbb
and
notl
inc
sub
lods
clc
mov
push
cmp
dec
imul
xor
outsl
pop
mov
pushf
mov
sub
lcall
or
rol
pop
rcrb
mov
add
jnp
and
sarb
mov
mov
les
and
pop
mov
das
cmp
scas
fs
movsb
rolb
cmpsb
and
sub
mov
mov
fistps
sarb
fcomip
dec
ds
outsl
insl
mov
sbb
repnz
adc
fisubrs
inc
dec
add
gs
dec
rcr
rolb
push
scas
shll
xchg
gs
cwtl
mov
dec
mov
jg
mov
mov
loopne
xchg
cmpsl
mov
xor
loopne
pop
lahf
pop
movsl
pushl
sti
mov
mov
test
jp
scas
arpl
push
into
hlt
ljmp
stos
test
and
or
jg
data16
addr16
int
and
loope
popa
movsb
fisubrl
mov
mov
ljmp
mov
cltd
pop
ret
and
pop
scas
sub
cmpsl
andb
push
es
test
ja
fsubrp
mov
cmp
xchg
out
push
stos
cmc
ds
cld
in
or
iret
mov
cmpsb
xchg
sti
jge
sbb
inc
repnz
pop
sbb
outsl
lods
push
call
mov
fs
outsb
pop
into
jg
ret
and
push
out
leave
jns
xor
into
cltd
xchg
aas
adc
add
icebp
or
out
jae
jmp
pop
sbb
dec
dec
lahf
les
icebp
jmp
cs
ss
mov
clc
daa
jns
adc
and
adc
insl
outsb
sub
ja
test
sub
jno
xor
imul
mov
fdivr
movsb
push
adc
cli
mov
nop
jecxz
mov
pop
fs
lret
mov
lahf
mov
jbe
mov
sbb
popf
xor
mov
cmp
dec
inc
cmc
hlt
ret
push
outsl
mov
push
sub
mov
outsl
mov
jle
arpl
adc
out
xchg
je
cs
les
dec
pop
aad
cmp
ret
fstps
jl
aas
mov
mov
add
jns
sub
xor
lret
cmp
and
fsts
addr16
outsb
xor
test
popa
hlt
xchg
out
ss
pop
cmp
arpl
je
negl
test
lret
inc
or
repnz
hlt
ds
cmp
xchg
into
test
pop
jbe
fs
test
pop
dec
pop
sub
xchg
jno
xchg
or
fsubr
outsb
or
jg
push
fistl
out
aaa
sahf
pop
push
lret
sbb
subl
xchg
mov
stos
and
imul
mov
inc
mov
shll
rcrl
cli
fwait
mov
clc
mov
lret
les
cmp
mov
mov
in
mov
mov
jo
sahf
jo
push
jle
lods
icebp
xor
fwait
cmp
xchg
push
inc
jp
in
ret
std
sti
inc
test
xchg
sti
pop
js
dec
dec
xor
jp
movsl
jle
inc
jg
pop
mov
rorl
stos
jecxz
cmp
adc
adc
repnz
xchg
pop
movsl
push
mov
push
aaa
dec
jae
cmc
mov
popf
sub
add
pop
cmp
fwait
out
shll
daa
cmc
xchg
pop
and
adc
cltd
pushf
sub
sub
push
sarb
or
adc
rorb
cmp
mov
shrb
xchg
adc
mov
push
adc
subb
jnp
cmp
ja
add
mov
push
gs
cmp
je
fcompp
cli
hlt
cld
fstps
pop
outsl
gs
scas
lock
mov
mov
mov
fiaddl
jb
insl
jno
xor
loopne
sbb
push
shlb
xchg
mov
xchg
fstl
lods
imul
pop
in
sub
inc
jbe
cmp
and
repnz
stc
sub
test
xor
xchg
or
inc
in
or
or
xor
call
xchg
mov
pusha
cmpsb
lcall
xor
mov
cmpb
in
pop
mov
addb
jne
test
div
lret
adc
push
aas
pop
dec
mov
mov
adc
nop
jno
lods
jmp
inc
out
jae
mov
lods
stos
loope
popf
test
cmp
mov
jnp
popf
lret
mov
add
inc
and
adc
cmp
jmp
repz
stos
push
lea
mov
mov
int
and
xchg
je
or
jp
pop
xchg
lods
jno
sti
xchg
xor
pop
mov
sub
arpl
and
or
fmuls
jecxz
lea
jge
loopne
sub
xchg
add
sbb
bound
pop
or
es
lret
mov
mov
sarb
cmpl
gs
add
and
in
push
lret
in
test
in
jl
add
cmpsl
lcall
or
nop
into
loope
xchg
std
test
jno
rorb
fsubp
jg
inc
push
loope
pop
test
out
sbb
mov
push
mov
mov
popa
inc
in
push
mov
cmp
lods
pusha
aaa
sahf
cld
aam
xchg
adc
ljmp
in
jmp
mov
mov
scas
scas
dec
xchg
xor
mov
xor
and
inc
add
xor
jae
jns
cmpsl
mov
insb
test
insb
inc
lods
mov
popf
shll
gs
mov
sub
pop
pop
idivb
jns
push
cld
lock
pop
or
xchg
jmp
repnz
push
mov
int3
movsl
ja
cmpsb
clc
jb
mov
scas
pop
push
lea
movsl
or
pop
clc
and
ret
jecxz
push
je
daa
stc
cmp
xchg
loopne
push
sub
je
sbb
out
in
fdiv
xor
movsb
mov
pop
xor
stos
pop
dec
push
mov
out
fs
jns
pop
dec
inc
fisubs
inc
mov
xchg
push
je
jbe,pn
mov
sbbb
inc
popa
outsb
push
aaa
mov
xor
shlb
les
call
jl
xchg
int3
pop
adc
cld
fsubrl
jp
in
stos
pop
addl
jbe
push
mov
mov
add
fdivl
repnz
insb
sbb
add
stc
xor
mov
xorl
push
popf
movsb
fs
push
sub
imul
xor
mov
add
sub
jbe
imul
dec
dec
mov
dec
or
pushf
les
push
loopne
add
cmp
inc
cmp
scas
jge
cmp
xchg
add
dec
fnstenv
mov
dec
dec
je
mov
ret
sahf
das
and
xchg
mov
out
fcomi
cli
shll
sti
sbb
mov
in
rclb
pop
ds
cli
sub
mul
pop
test
adc
in
cs
icebp
mull
mov
or
imul
enter
je
subb
cmp
adc
push
ss
pop
add
cmpsl
xor
cmp
cs
out
fidivrs
inc
mov
mov
xchg
xchg
ja
ficoml
push
stos
js
or
cld
pop
sub
pop
push
aam
mov
fisubrl
iret
ror
mov
cmp
xchg
popf
ja
out
scas
dec
dec
mov
gs
push
xchg
mov
sub
pop
push
stos
loop
push
xlat
pop
sub
movsb
lods
and
out
jae
jge
data16
das
repz
pop
pop
clc
js
push
lods
xchg
and
jae
xchg
call
aas
sahf
cmc
push
jp
stos
out
into
xor
andl
imul
mov
adcb
in
add
call
and
je
scas
pop
loope
sti
jg
pop
bound
clc
pop
callw
pushf
dec
add
scas
lahf
dec
jo
mov
push
jmp
mov
scas
push
xchg
sub
sbb
dec
add
movl
ret
and
xor
pop
ja
inc
fsubrp
xchg
xor
mov
loopne
mov
lods
stos
fidivrl
and
ljmp
sub
dec
test
fildl
cmpsl
fisubs
shrb
pushf
shll
or
lea
xor
add
daa
into
out
sub
mov
jl
popa
incb
push
mov
push
xchg
push
pop
mov
or
aaa
push
xchg
mov
xor
xchg
add
and
sub
sbb
mov
scas
in
or
mov
pop
sbb
jmp
js
mov
mov
cs
push
jne
sbb
add
push
dec
sbb
mov
loop
xor
dec
outsl
std
xchg
cmp
mov
push
adc
and
filds
and
add
out
mov
mov
mov
sbb
inc
cld
aaa
push
jae
xorb
out
test
pop
sahf
test
xchg
movsl
sub
aad
shl
jns
push
test
aaa
ja
ljmp
mov
adc
jns
in
shll
out
in
mov
pop
jmp
in
cmpsb
push
in
jp
xchg
stc
add
movsl
jne
test
jbe
aas
push
test
push
sub
mov
loopne
pop
hlt
ss
xchg
adc
sub
pop
out
daa
mov
pushf
adc
pop
clc
pop
fwait
xor
sub
pop
mov
loop
dec
arpl
icebp
inc
es
ret
shl
xchg
xchg
imul
cmp
cmp
stc
sbb
mov
cmp
jg
in
in
xor
fidivl
adc
or
xchg
lret
fcomps
aad
pusha
jecxz
loope
lock
imul
fsubs
mov
inc
mov
xor
jne
pushf
jle
rclb
xchg
aad
mov
adcb
xchg
dec
ljmp
int3
jmp
jb
mov
mov
into
hlt
push
dec
sbb
mov
add
and
insl
aas
fidivrl
sbb
popf
inc
nop
stos
stos
pop
out
add
and
scas
cmp
jbe
xchg
movsl
push
sbb
rolb
andl
ret
je
ret
and
in
ljmp
lods
mov
push
mov
xor
out
lahf
std
xchg
lret
cmp
mov
dec
inc
addr16
push
ret
mov
imulb
sub
rcrl
sub
or
aas
xor
xchg
cmp
movsb
ficoml
lods
cmc
sahf
testb
pusha
test
sbb
negb
cmp
popf
ror
adc
in
ja
push
sbb
pop
dec
je
pop
or
jp
dec
icebp
es
mov
das
aaa
jbe
adc
sarb
or
hlt
loopne
rcr
loopne
or
dec
jno
xor
imul
aam
mov
pop
push
mov
adc
push
pop
xor
pop
add
pop
in
xor
pop
mov
stos
pop
dec
or
mov
fdivrs
enter
jb
loop
mov
cmp
adc
or
adc
loopne
sbb
mov
or
xor
inc
lea
xchg
aaa
pop
stos
jg
data16
fwait
loopne
adc
addl
dec
push
sahf
xchg
scas
sbb
push
les
dec
jecxz
in
enter
xor
inc
loope
add
xchg
jo
movsl
sub
test
adc
sub
inc
test
sub
bound
gs
sub
loopne
adc
aam
xor
mov
or
or
xchg
lcall
lock
mov
sbb
jmp
cmp
sbb
sub
inc
arpl
ds
xchg
test
js
adc
push
mov
push
out
mov
xchg
cmp
fs
les
pop
ljmp
les
push
pushl
movsl
mov
pusha
mov
sarb
test
xor
inc
rcrb
insl
dec
dec
dec
add
and
jmp
mov
cmp
or
xchg
cli
bound
dec
pop
cmpsb
sti
cli
enter
xor
nop
icebp
fstps
sub
fnstcw
insl
lock
ds
int
scas
mov
call
sub
or
scas
pop
push
sahf
add
xor
das
ss
fstp
inc
cmp
pop
popa
mov
push
jmp
cmp
xor
in
push
xchg
push
cmp
sub
push
clc
sub
add
outsb
jle
pop
rorb
fsts
lock
sub
and
mov
aaa
clc
hlt
mov
sarl
adc
ret
cmp
add
lahf
mov
sbb
cwtl
add
daa
addr16
adcb
mov
rorb
out
jo
ja
imulb
aas
xchg
mov
or
mov
ljmp
dec
jae
add
xchg
jnp
ja
adcb
lahf
sub
jbe
cmp
int3
imul
jecxz
aas
jecxz
out
sbb
pop
sahf
and
push
jecxz
mov
lahf
push
xor
push
out
lahf
rorb
test
push
mov
xor
scas
mov
jnp
iret
inc
shlb
jmp
sbb
hlt
dec
pop
loope
lds
stos
cmp
int3
lahf
ja
xor
in
es
mov
sub
icebp
push
push
sbb
sub
lods
inc
push
adc
add
xchg
loopne
imul
xchg
scas
xor
inc
jp
mov
popa
jmp
popf
xchg
test
jp
lds
push
inc
mov
test
mov
and
mov
push
jl
jb
push
fsubs
inc
jb
push
pop
mov
fistl
cmpb
icebp
hlt
push
xor
dec
jb
push
out
mov
popa
mov
cltd
add
subb
mov
arpl
jbe
sub
fwait
or
orl
mov
cwtl
dec
insb
mulb
xor
int
scas
push
in
sbb
lock
inc
cltd
mov
js
dec
mov
shlb
fildll
mov
sub
aam
pop
fiadds
pop
les
int
aas
loope
inc
xchg
inc
push
dec
jmp
lods
jo
out
in
cli
adc
leave
mov
sub
cvtpi2ps
fisubl
in
push
sbb
pop
into
mov
mov
xor
rcrl
testl
fisttpl
sub
pop
jge
mov
adcb
xlat
or
cmpsb
ds
pop
add
hlt
ret
bound
or
and
cmc
cmc
xor
call
pop
loopne
test
xchg
mov
and
push
repnz
test
scas
cmp
repnz
dec
inc
or
inc
addr16
or
or
or
or
cwtl
mov
sbb
out
mov
jle
inc
add
mov
cmc
and
sbb
sbb
and
push
jge
aad
push
js
out
daa
mov
xchg
rcr
divb
or
ss
std
nop
mov
xchg
sub
cwtl
lock
push
arpl
int3
into
and
pop
lods
adc
adc
push
dec
dec
add
mov
pushf
cmpl
jp
scas
out
jecxz
out
ror
xchg
mov
jbe
scas
pop
fwait
adc
jb
mov
dec
cs
nop
loopne
pop
daa
mov
mov
push
jo
fsubs
pusha
fwait
jp
dec
and
cmp
jnp
daa
mov
dec
xor
mov
fadds
dec
push
pop
fsubrl
imul
adc
imul
in
sti
popf
jns
lds
push
and
push
adc
xor
cmc
in
or
cli
mov
je
pop
jae
inc
cmp
loop
push
add
outsb
fidivl
scas
mov
jge
and
push
lock
dec
aam
sarb
imul
subb
shlb
mov
data16
pushf
loop
dec
or
xorl
push
mov
aas
int
or
cmp
pop
hlt
add
xchg
lret
mov
lret
mov
or
es
inc
movsb
imul
addr16
inc
js
inc
jno
cmp
ret
push
sbb
jb
idivb
jbe
inc
lret
push
aas
scas
xor
mov
pop
daa
cmp
cltd
frstor
test
xchg
fcomps
lahf
dec
mov
cmpl
sti
xlat
dec
push
lea
cltd
arpl
cmp
xchg
mov
sub
enter
sub
mov
shll
sarl
insl
push
hlt
test
imul
lds
stos
xor
scas
popa
mov
sbb
push
sarl
cmp
adc
es
test
out
in
popa
push
jp
lahf
adc
or
fiadds
fbstp
mov
ret
add
fnstenv
jp
outsb
cmpsl
mov
test
jne
xchg
loope
inc
mov
outsl
mov
xor
test
outsl
cmp
inc
fwait
cmpsb
mov
sub
cmc
mov
mov
adc
adc
and
jge
lcall
adc
fcoms
sub
pop
fstl
lret
sub
add
ss
ret
push
xor
pop
jbe
shl
xor
fs
sbb
xchg
cmpsb
stos
scas
loop
mov
rorl
fisubs
fidivl
mov
test
cmpl
shlb
mov
popf
or
add
push
xchg
lcall
xor
jecxz
mov
rclb
or
insl
xchg
xlat
outsb
test
cltd
mov
mov
sub
mov
test
adc
inc
mov
loopne
into
dec
cmpsl
mov
pop
insl
out
popf
lret
pop
sti
inc
mov
lods
inc
cmpsb
ss
mov
cmpsl
adc
outsl
mov
pop
xchg
notb
mov
cmp
notb
ljmp
mov
pop
push
mov
pop
mov
jmp
xchg
xchg
aaa
sahf
mov
loopne
pop
push
adc
movsl
outsl
ds
mov
imul
mov
dec
and
jmp
cmp
gs
jge
mov
cmp
push
xlat
add
sub
sbbb
jecxz
inc
aas
xor
cmp
xchg
pop
or
pop
out
mov
dec
cmp
inc
daa
mov
loop
or
inc
or
cli
movsl
scas
out
int
cmp
xlat
setge
push
xchg
cmc
add
xor
xchg
jne
ret
jl
cmp
add
inc
fcmove
into
and
add
mov
jnp
aam
leave
cmp
mov
jle
mov
sbb
hlt
lret
bound
loope
cmp
mov
add
test
jb
add
cmp
aad
loopne
sub
inc
ret
xchg
cmpb
es
out
pop
sub
jne
xchg
sbb
sbb
outsb
mov
sub
punpckhdq
std
fsubr
adc
lock
rcll
add
cmpsb
lods
cmp
out
rolb
and
pusha
sub
and
cmpsl
pop
or
negl
push
mov
insl
add
mov
jae
adc
fstl
pop
das
hlt
pop
and
or
and
rdmsr
outsl
fsubs
or
xlat
ret
adc
lcall
mov
repz
xor
fwait
jno
jnp
xchg
call
stos
call
fisttpl
inc
cs
mov
mov
mov
cmc
rcrb
cltd
sarl
arpl
std
pop
enter
les
int3
xchg
fildll
sub
sub
sarb
xor
mov
sbb
and
xor
int3
repz
cld
cmpb
loopne
in
cmpsl
pop
and
ljmp
jg
cs
xchg
iret
sbb
ljmp
iret
dec
out
dec
adc
cli
pop
mov
ret
adc
sub
xchg
lock
ret
xlat
icebp
cmpsb
push
mov
pop
inc
push
xchg
xlat
imul
add
jae
xchg
std
xchg
lcall
adc
jne
addr16
and
das
adcl
imul
out
adc
fildll
popf
pop
jmp
or
outsl
lods
mov
xchg
jecxz
inc
pop
add
dec
movsb
popl
and
rcl
ret
pop
fistl
add
shlb
cmpsl
or
orl
sbb
cmp
push
xchg
cmc
bound
lds
sub
mov
xor
lods
pushf
in
xchg
pop
jo
fisttps
jne
sti
add
cmc
into
sub
mov
sub
pop
stos
orb
pop
adc
lret
mov
cmp
movsb
pop
js
xor
rolb
lret
inc
inc
stos
add
movsb
in
repz
cmp
iret
std
mov
sub
xchg
enter
gs
test
mov
jae
es
adc
jle
and
lret
pop
pop
lahf
cs
inc
loop
push
push
call
mov
or
test
xchg
jo
dec
adc
xchg
adc
out
pop
negb
mov
lahf
push
popa
and
orl
mov
js
pop
pop
jno
mov
push
sbb
aas
mov
popa
loope
jne
inc
xor
movntps
mov
xlat
mov
insb
mov
dec
mov
negl
leave
xchg
jnp
or
or
mov
movsb
jl
or
sub
ficoms
xor
xchg
add
dec
mov
inc
inc
sbb
aad
repnz
xchg
or
cmp
outsl
sub
dec
xchg
and
dec
fnsave
dec
mov
adc
adc
pushf
scas
adc
jbe
stos
lods
or
mov
stos
rcrl
leave
pop
fdivs
insl
xor
mov
addr16
inc
and
sahf
jne
mull
xchg
gs
jmp
bound
das
pop
mov
xor
filds
sub
jbe
jno
add
inc
subb
xor
mov
cmpsb
pop
mov
xchg
push
mov
cmp
inc
fidivrs
stos
testl
movsl
jo
test
ds
mov
shll
jp
add
push
stos
nop
push
lea
scas
jo
inc
icebp
mov
add
adc
ret
jns
fldlg2
ret
stos
imul
push
popf
stos
jnp
daa
jge
mov
cld
mov
inc
pusha
add
mov
lcall
add
ja
cmpsb
mov
movsl
jae
call
cltd
xchg
sar
gs
daa
jbe
sub
pop
mov
lods
mov
adc
add
ficomps
add
lock
js
lds
pop
fwait
ljmp
mov
imul
jo
mov
dec
fistpll
jb
pop
adcl
iret
sub
rolb
xchg
aaa
inc
xor
lahf
cmp
pop
lret
xor
or
mov
cmp
in
rorl
sbb
into
lret
mov
push
cmp
xorl
jb
inc
cwtl
dec
push
mov
into
xchg
add
mov
ret
aad
push
mov
jne
or
popf
sbb
sub
ret
push
jl
inc
fcmovnbe
inc
movsl
dec
mov
cltd
lods
jle
in
cmp
pusha
aas
movsl
or
xor
leave
xchg
or
rorl
push
push
or
xor
popf
test
int3
int3
adc
inc
pop
outsb
sti
shrb
fstl
xchg
into
sbb
cmp
orl
sarl
sub
xlat
outsl
mov
arpl
and
push
shr
jns
inc
sbb
adc
xchg
imul
sahf
shld
stos
xchg
xor
stos
dec
in
push
and
jnp
xor
mov
adc
adc
adc
enter
fsubl
inc
inc
fcmovne
popa
mov
fcompl
mov
imul
xchg
flds
xchg
sub
sbb
jle
lods
sub
push
cld
arpl
inc
lea
inc
sub
pop
pop
cmp
xor
stos
pop
stos
ret
jne
shl
scas
repz
ja
mov
jecxz
sub
movsb
adcl
sub
push
leave
je
in
cltd
add
dec
stc
adc
dec
cmp
lret
cmpsl
inc
mov
fildl
pop
rorl
lcall
push
mov
sub
inc
scas
mov
cmpsl
enter
addr16
push
mov
das
lcall
push
and
fisubrl
lret
roll
aad
pop
push
xor
cltd
mov
test
enter
std
jne
fcmovne
xor
sub
xchg
out
std
inc
jbe
out
adc
inc
push
pop
and
mov
int
and
or
pop
and
inc
adc
scas
std
cli
dec
or
xchg
and
aaa
xchg
dec
int3
aaa
lahf
movsl
jmp
xchg
lret
clc
fwait
ss
outsb
les
hlt
and
dec
int3
leave
push
mov
mov
enter
outsb
lock
subb
fstpl
in
mov
int
aad
or
lods
sub
cmc
sub
fs
in
insl
outsb
push
sub
push
mov
jmp
push
jnp
mov
je
repz
mov
xor
comiss
dec
shlb
sub
scas
pop
pop
inc
in
lods
cmpsl
cltd
and
xchg
xor
cmp
xor
jl
mov
cmp
push
mov
lahf
rcll
or
push
xchg
push
sbb
scas
add
mov
inc
push
jle
sbbl
jge
bound
jb
test
lea
int3
mov
test
jns
in
cmp
cmp
inc
fcmovu
jecxz
movsb
push
ja
dec
mov
and
dec
xchg
test
stc
sbb
jne
ret
mov
loopne
cmp
pop
ror
lock
push
sbb
ret
cmc
insb
lret
stos
jl
int3
add
xchg
mov
xchg
mov
xchg
or
jg
or
loop
adc
rclb
movb
mov
mov
mov
data16
jnp
xchg
imul
in
adc
enter
cmpsb
loopne
adc
xchg
addr16
in
shrl
cld
cmp
pop
sar
mov
fistpll
popa
lock
xor
jne
mov
lods
pop
jp
and
cmp
xchg
cwtl
pushf
xchg
cmp
xchg
sbb
lock
inc
sbb
adc
add
and
shll
dec
and
pushl
add
es
xlat
jbe
dec
jg
jno
pop
inc
mov
inc
idiv
fmull
jg
xchg
or
xorb
lcall
mov
les
push
outsb
insl
push
rorl
out
ljmp
js
scas
fisttpll
out
clc
or
adc
aaa
movsb
sub
test
mov
inc
push
lods
lods
insl
daa
loop
mov
fists
xchg
mov
orw
xchg
sub
sbb
mov
add
lahf
inc
xchg
aaa
stos
add
fs
xlat
iret
jp
pop
mov
dec
xchg
stos
mov
jnp
inc
pop
add
push
dec
insl
icebp
popa
lds
shl
mov
test
lret
jno
filds
xor
add
pop
pop
dec
sbb
or
and
inc
clc
ss
dec
xchg
xchg
test
sub
cmp
mov
ss
mov
mov
adc
repz
xor
pmulhuw
lds
pop
test
sbb
ja
jnp
addl
xchg
pop
enter
lret
test
mov
movsl
sti
pop
adc
stos
rorb
testb
lea
lods
mov
lea
cmpsb
fnsave
jmp
mov
fcomps
popf
sti
and
aaa
pop
lahf
add
sub
xchg
test
sarl
cwtl
imul
inc
push
pop
cmpsl
lock
mov
rcrb
repnz
push
out
dec
jle
mov
mov
jle
or
orl
dec
sbb
and
iret
orb
xchg
xor
jo
jecxz
jb
jge,pn
fsubrs
ss
jecxz
cmpb
lret
sti
mov
sub
dec
int3
mov
xor
or
or
pusha
xlat
sar
aas
sbb
jl
push
and
je
arpl
or
or
fdivrs
lds
fstpt
inc
int3
pop
and
push
add
movsl
jne
aas
test
inc
cmpsb
mov
sbbl
loopne
jno
xchg
cmpsb
subb
cmp
jb
repz
and
and
xor
in
adc
mov
mov
sbb
fstl
out
jo
add
jg
outsl
iret
pushf
adc
inc
mov
imul
repnz
fwait
shll
pop
fdivr
add
gs
adcl
pushf
mov
cmpsl
cmp
lods
and
jl
out
arpl
xor
pop
mov
mov
add
push
inc
mov
test
jge
ss
mov
dec
imul
insb
xchg
mov
sub
xchg
popf
iret
or
pop
inc
mov
push
dec
test
loop
push
psrlq
adc
mov
push
mov
out
outsb
lods
jg
loope
push
xor
xchg
out
or
not
std
roll
inc
loope
jo
imul
lods
mov
jnp
add
sarb
pop
adc
mov
rorb
mov
xor
lcall
sub
or
push
pop
fwait
cmp
xchg
jmp
popf
loop
pop
push
pop
push
pop
xor
dec
rcll
jno
arpl
or
daa
enter
inc
xchg
or
sub
in
mov
cmc
xor
mov
cli
daa
cltd
jg
loope
mov
push
or
jmp
stos
jnp
bnd
arpl
mov
cmpsl
xchg
mov
std
fistpl
mov
lods
into
imul
stos
pusha
loop
test
fs
sub
fstpt
fcmovb
push
cmc
pop
or
jne
dec
jecxz
fcoml
pop
mov
jns
bound
loope
and
movsl
leave
stos
jecxz
iret
fisttpll
cmp
cmp
sbbb
mov
hlt
pop
ret
stos
mov
inc
outsb
arpl
push
add
test
jge
mov
ss
cmp
add
adc
call
fs
push
xchg
fldcw
stc
adc
mov
scas
fisubrs
aas
add
dec
in
push
fsubrs
push
dec
or
fstpt
xchg
or
shlb
pop
sbb
lea
sub
mov
je
mov
cmp
dec
jge
jmp
sub
jmp
xor
and
je
aam
add
outsl
pushf
or
sub
jp
inc
sub
jne
cmp
cmpsl
dec
lcall
ficoml
adc
jbe
push
aaa
sti
mov
movsb
mov
inc
lock
adc
ja
cld
jge
mov
and
clc
add
xchg
or
push
pop
cmc
inc
insb
das
std
adc
cs
or
pop
inc
loope
push
mov
mov
out
fsubl
ljmp
add
pushf
stos
into
jge
or
lock
mov
in
mov
outsl
add
in
call
adc
mov
out
es
push
call
push
or
add
dec
push
mov
mov
lret
addr16
rclb
jae
adc
mov
mov
pop
sub
add
fxch
jo
cld
mov
sbb
lret
add
and
xor
dec
repnz
repz
mov
movsb
lcall
mov
dec
call
cmp
lods
pop
mov
test
cltd
add
cltd
js
add
imulb
clc
imul
jne
fbstp
loopne
arpl
push
mov
mov
add
aaa
sub
pop
inc
mov
mov
loopne
mov
adc
push
bound
addr16
ret
jl
mov
mov
je
fstps
lcall
pop
out
mov
movsb
cld
scas
add
inc
nop
mov
scas
jmp
push
add
fdivs
adc
hlt
jo
out
xor
push
mov
insb
popa
pushf
mov
ljmp
add
lods
sti
mov
test
imul
inc
and
rcll
fwait
sub
in
fldl
loop
jbe
xor
notl
add
jb
cs
or
jb
outsb
cs
dec
pop
jo
inc
movsl
pushf
sub
xlat
jbe
movsb
or
mov
jecxz
cmp
xorb
test
ds
jge
or
je
cltd
test
push
call
jne
insl
jno
inc
fsubl
addr16
jg
sub
insb
in
push
add
fwait
psubd
mov
call
mov
mov
loope
push
sbb
push
sub
pop
add
subb
ljmp
add
scas
ja
pushf
aam
push
inc
inc
inc
les
pop
ficoml
and
inc
add
pop
lret
push
es
fisubrs
aaa
les
gs
pop
pop
outsl
bound
hlt
mov
loop
cmp
shll
mov
dec
fists
stc
jns
cwtl
js
cmp
add
outsl
or
push
das
jo
sub
test
dec
sbb
mov
sub
orl
jle
sub
cmp
in
push
inc
pop
fcomps
test
add
test
mov
int
aaa
clc
cmp
mov
call
fcmovu
sbb
pop
sbb
mov
lret
xchg
nop
lock
gs
jb
and
nop
out
cmc
mov
pop
fiaddl
dec
enter
repnz
jmp
cmpsb
lret
push
pop
jmp
mov
sub
rcll
jb
jns
lcall
mov
aad
out
sub
xorb
sub
mov
scas
pushf
dec
sahf
jge
xor
mov
js
pop
jmp
or
mov
push
jg
fmul
call
sahf
cmp
test
inc
fildll
ja
leave
cmp
addl
sub
lock
out
push
jnp
push
fsubl
jge
leave
iret
jb
or
lds
add
imul
xor
mov
clc
iret
gs
and
adc
bound
sti
push
repz
inc
sub
lock
lret
sub
mov
insl
cmp
pop
pop
adc
out
mov
stc
adc
sti
je
pop
js
cmp
jo
jns
cmp
fistpl
test
shrl
xchg
repnz
cmpsl
test
lcall
dec
pusha
jg
inc
mov
outsl
loop
pushf
in
mov
adc
subb
push
outsl
add
mov
stos
lea
xchg
sbb
cwtl
cmc
cmp
enter
cmc
mov
sahf
iret
in
sbb
popa
and
push
data16
mull
xor
inc
in
in
xor
dec
mov
xchg
jno
push
pop
sahf
xchg
xchg
inc
hlt
lds
add
dec
or
sbbl
inc
mov
and
push
cmp
lock
push
adc
inc
repnz
push
lret
xchg
jo
ss
sahf
lret
aaa
inc
sbb
test
pop
adc
adc
dec
roll
mov
dec
dec
dec
or
mov
fcomp
jmp
icebp
jg
push
ljmp
jmp
push
fs
daa
pusha
cmpsl
jge
pop
stos
loopne
or
int
dec
dec
cmp
sbb
xor
jp
mov
repz
lock
pushf
data16
into
mov
call
mov
outsl
push
fidivrl
mov
mov
push
loope
stc
adc
xor
into
gs
xchg
test
notb
pop
or
lods
ret
in
nop
or
insl
ljmp
fs
mov
push
incb
hlt
cmp
repz
out
dec
and
pop
sub
fistpll
pop
negb
imul
data16
xchg
lds
pop
sbb
push
jno
test
xor
aas
jmp
adc
xchg
mov
mulb
sub
xor
pop
push
xor
jg
fsts
mov
fstl
lcall
xchg
cmp
rcl
std
add
nop
ja
ret
adc
cld
fidivrs
movsl
and
cwtl
dec
js,pn
or
jmp
pop
pop
sub
adc
sarl
inc
inc
cld
jb
dec
pop
adc
movsl
shrb
jmp
or
sti
nop
aad
fprem
or
pop
xlat
mov
dec
rdmsr
xchg
out
or
cmp
mov
shll
pop
adc
mov
fsubl
inc
out
mov
dec
in
xchg
dec
scas
xor
push
mov
mov
leave
cwtl
dec
inc
xlat
sbb
repnz
mov
pop
js
stos
insb
shr
cmp
cltd
in
es
rep
xchg
cmpsb
add
xor
addr16
dec
scas
enter
xchg
nop
lcall
inc
mov
add
pop
add
mov
jp
clc
cmc
sub
xchg
flds
push
repnz
divb
mov
cmp
adc
aaa
sub
mov
lret
enter
cmpl
ror
imul
rol
cmpsb
mov
and
mov
ret
jno
mov
mov
es
and
fdivr
rolb
cltd
mov
or
xchg
dec
inc
mov
sbb
jge
push
cld
imul
or
mov
xchg
jle
cwtl
adc
mov
push
lcall
cmp
outsl
aam
js
leave
jmp
sbb
dec
daa
dec
lret
mov
mov
sbb
push
test
cmc
cmp
jo
ror
sbb
xchg
pusha
pop
inc
popa
int3
ret
lahf
call
add
mov
loope
sub
xchg
out
cmc
es
inc
and
and
std
clc
push
cs
or
and
mov
aad
inc
and
jae
adc
pop
adc
mov
dec
das
cmp
xchg
pushf
add
inc
pmuludq
mov
stos
fimull
jl
pminub
adc
aas
inc
mov
into
mov
mov
hlt
iret
push
ffree
xchg
rcrl
fs
lods
pop
push
out
into
int
mov
repz
out
mov
jnp
addb
mov
push
ret
mov
and
fdivrp
or
scas
jmp
addr16
cmp
and
movsl
bound
js
daa
fistl
cld
test
sbb
loope
je
and
cwtl
adc
cmpsl
call
outsl
cmp
mov
outsl
cmc
js
adc
andl
addb
test
icebp
jno
mov
mov
ljmp
fs
leave
xchg
gs
mov
xor
or
xor
mov
sub
push
jbe
in
testl
jmp
mov
xchg
leave
shr
pop
out
jb
jns
test
add
ljmp
scas
roll
cmp
cltd
push
stc
xor
pop
arpl
std
mov
adc
cltd
push
mov
dec
in
js
jl
push
sbb
mov
mov
mov
inc
cmpsl
or
push
push
adc
mov
jae
dec
push
rcrl
jle
adc
xchg
mov
test
or
in
mov
int
outsl
outsl
loop
add
mov
fidivrs
adc
jg
pop
pop
inc
in
cld
pop
movsb
cmpb
mov
xor
mov
push
xor
jno
add
pop
popl
pmullw
pusha
lods
aaa
cmp
dec
add
xchg
daa
arpl
sbb
hlt
xchg
movb
mov
dec
cmpsb
dec
fsubrs
add
dec
std
push
jmp
mov
in
mov
dec
xor
add
xchg
push
dec
mov
dec
jb
int3
jge
lea
pop
aas
imul
add
lret
je
sub
pop
loope
icebp
imull
jecxz
dec
jl
inc
xor
das
test
imul
fs
mov
push
and
mov
xor
fs
enter
aaa
jl
dec
dec
dec
cwtl
add
mov
pop
subb
push
cmpsb
out
ss
sti
jne
gs
dec
roll
or
outsl
sbb
adc
and
cwtl
pop
sub
lahf
mov
cmp
or
push
inc
lret
add
pushf
fs
adc
add
or
jp
mov
mov
add
jl
cld
xchg
lret
cwtl
insl
mov
xchg
scas
mov
sbb
xor
mov
lods
mov
pusha
fcmovnb
or
dec
out
jl
ficomps
jbe
rep
ljmp
jns
inc
xchg
lods
ds
xchg
mov
adc
xor
push
inc
adc
pop
sub
imul
jae
jmp
inc
mov
ret
and
mov
ss
and
adc
js
inc
sti
mov
cld
adc
adc
and
cmp
push
jge
dec
std
out
push
sahf
in
mov
add
test
push
or
imull
jecxz
add
ret
xor
push
jo
insb
cmp
xchg
push
arpl
jae
jo
mov
stos
and
cltd
inc
cmp
mov
inc
mov
adc
dec
pop
shr
mov
mov
outsl
int3
outsb
stos
mov
mov
je
xor
mov
push
mull
hlt
xlat
mov
stos
outsl
push
jnp
leave
sahf
scas
sub
mov
or
fs
mov
jl
mov
jne
mov
pushf
jbe
mul
or
imul
stc
fstpt
jae
and
xchg
pop
xchg
xor
ja
mov
add
mov
lret
andl
mov
insl
sarl
sti
out
imul
pop
push
mov
loop
fnstcw
inc
lock
adc
sub
movsb
mov
xchg
xor
xor
test
xchg
cmpsl
xor
add
leave
nop
addb
sbb
cmp
fcmovnu
jns
or
int3
fstp
in
mov
adc
add
rorb
push
lea
add
insl
pop
mov
rcrl
ja
sbb
test
mov
dec
sbb
mov
subb
push
lock
or
fs
adcb
fdivr
jbe
andl
fnsave
rolb
dec
mov
cmp
push
xor
push
sub
push
fs
pop
test
push
jecxz
lret
fimull
dec
mov
push
insb
rcll
dec
test
jnp
push
jle
inc
mov
inc
loope
jmp
sbb
mov
xchg
sbb
test
sub
call
jns
xchg
repnz
lds
cmp
fcmovne
jbe
add
inc
inc
sti
fldcw
fnstenv
xchg
daa
inc
mov
rclb
ja
pop
dec
in
dec
pusha
jmp
ljmp
outsb
mov
xchg
pop
scas
mov
out
fcmove
jp
lea
cli
je
std
and
sub
adc
lods
iret
inc
mov
ss
leave
xchg
xlat
jb
jne
sub
data16
leave
inc
pop
push
inc
addr16
mov
mov
sarb
imul
ljmp
cmp
fistpl
aam
mov
jbe
jge
inc
xchg
xchg
mov
push
ret
jmp
xchg
dec
cmp
dec
push
inc
jne
add
ja
movsl
in
lahf
pop
out
inc
cmp
call
mov
repz
mov
jbe
in
rol
sub
xchg
push
adc
fdivrs
clc
sub
jne
add
lret
loopne
out
sub
mov
pop
sidtl
test
roll
cmp
loopne
sbb
and
dec
xor
mov
mov
mov
xchg
jl
jbe
imul
push
fcompl
pushf
mov
xor
lods
inc
mov
loope
nop
xchg
adc
in
cmpsb
hlt
sub
inc
aas
jecxz
xchg
mov
push
repnz
add
lods
cmp
pop
jne
lock
fstp
cmp
std
inc
insb
xor
add
push
mov
test
aas
imul
xor
push
fwait
addb
mov
fmuls
fcompl
jmp
test
xor
lea
aaa
inc
or
push
push
push
in
mov
iret
jae
xchg
inc
loopne
cmp
fstps
cmp
push
bound
mov
jg
test
cli
xchg
ljmp
pop
push
add
adc
sarb
jle
sti
lret
jnp
pop
or
add
inc
jp
fprem
dec
adc
mov
dec
sbb
pusha
add
std
cmc
pop
inc
sti
dec
sub
enter
lods
or
mov
inc
je
xchg
fcmovu
call
mov
mov
adc
sahf
jae
test
cltd
and
insl
or
dec
push
lock
dec
adc
sub
jp
push
enter
sub
ficompl
sub
test
lcall
dec
js
push
sub
push
out
insl
pop
xor
add
sub
dec
mov
jbe
fistl
fs
lock
mov
shlb
fsubl
push
fisubl
in
ret
push
popf
negb
sub
movsb
dec
hlt
outsl
sub
insb
movsl
cmp
dec
sahf
inc
pop
ret
sub
or
mov
cld
push
mov
and
jl
mov
dec
sbb
push
idivb
fisttpll
movsb
xchg
movsb
loopne
pop
hlt
enter
jp
es
cmp
std
xchg
mov
mov
sbb
sub
hlt
and
pushf
pop
dec
insb
out
retw
dec
out
pop
pop
hlt
in
fstps
pop
adc
dec
sarb
xchg
dec
cs
popa
mov
jg
pop
popa
xor
lcall
sbb
loope
outsl
pop
push
mov
dec
dec
dec
adc
adc
mov
ss
lods
and
pop
sbb
test
imul
in
in
mov
dec
xchg
add
push
xchg
scas
in
and
fmul
movl
pop
dec
jmp
lcall
scas
sub
lods
xor
stc
ret
pop
js
adc
push
out
dec
mov
xor
add
mov
jno
cmp
sbbl
ljmp
shll
cs
adc
inc
or
sub
push
test
push
pop
mov
adc
dec
cltd
mov
sbb
cmovle
xchg
sub
sub
lods
repz
insl
roll
mov
mov
mov
mov
js
inc
cmc
sbb
and
addb
aad
out
lahf
repnz
inc
pop
sti
xor
clc
xlat
loopne
pop
mov
mov
mov
ret
mov
add
cmp
idivl
jnp
jmp
pop
pop
sbb
cmp
outsl
cmp
lods
ljmp
adc
mov
fbstp
lock
aad
add
lret
mov
cmp
add
push
int
popl
xchg
imul
fistl
scas
popa
mov
loope
cli
imul
dec
push
cmp
mov
or
sbb
xchg
xchg
add
pop
push
clc
push
lods
push
fmull
push
mov
gs
pop
and
add
add
sub
shll
mov
mov
xor
xor
fcmovu
rcll
fsubl
test
jmp
fwait
out
adc
dec
inc
mov
dec
cmp
out
ja
sub
in
mov
ret
push
jne
xor
and
sub
orl
sbb
cli
rcrb
push
and
insl
lret
aad
xor
leave
push
hlt
mov
leave
repnz
into
psubw
cmpsb
xor
push
sbb
ss
shl
xchg
test
rcl
outsl
jmp
pop
xor
inc
scas
jb
and
dec
test
mov
lods
push
pop
lds
cmp
mov
std
es
jae
cmp
enter
idiv
mov
ret
jnp
pop
push
ret
pop
clc
jbe
stos
movsl
lds
xorl
sub
jnp
pushl
and
js
enter
sbb
dec
ja
int3
ja
jge
jne
mov
out
mov
sbbl
add
gs
mov
add
ret
lret
sbb
es
or
cmp
imul
shll
add
pop
fstpt
verr
enter
test
movl
hlt
jae
adc
imul
icebp
add
xchg
sbb
and
movsb
mov
cmpsl
mov
stos
ret
leave
jmp
dec
cmp
enter
insb
fs
inc
in
cmpsb
pusha
sahf
loope
out
push
pop
xor
pop
scas
pushf
add
adc
sub
mov
inc
mov
out
icebp
xchg
mov
and
push
sub
mov
mov
stos
xchg
lcall
lahf
push
add
pusha
das
arpl
std
jnp
aad
jmpw
push
mov
aaa
jle
xchg
fdiv
lods
jmp
ret
mov
lret
xchg
pop
inc
jle
or
mov
data16
ror
push
and
mov
adc
jno
rcrl
mov
icebp
cltd
inc
sub
cmp
aaa
add
stc
fsts
fdivs
psrlw
rcll
sub
aam
mov
adc
cmp
dec
lret
lods
push
and
aam
or
mov
scas
out
mov
push
adc
jnp
ss
outsl
cmpsb
es
int
lods
inc
xor
cltd
lea
sbb
in
push
movsl
add
mov
jne
lock
mov
xchg
ljmp
inc
pop
xor
cmp
pop
push
shl
xchg
mov
mov
mov
mov
jmp
adc
lcall
pop
add
subl
push
mov
out
or
mov
lahf
fsubrs
jg
or
sbbl
mov
mov
or
jge
or
mov
mov
fadds
cmp
mov
adc
dec
shr
push
xor
xor
mov
loope
sahf
cmp
or
xor
daa
xchg
cmpsl
mov
ljmp
loop
aaa
test
or
sub
int3
pop
jae
in
stos
mov
rcr
inc
jo
rorl
jne
adc
xchg
in
mov
jmp
loopne
hlt
adcl
stos
mov
cmp
xchg
inc
ja
mov
or
cmp
into
xchg
or
jno
bound
js
movsb
clc
and
sti
pop
pop
aad
jnp
pop
xchg
sbb
test
dec
std
mov
mov
mov
je
and
jl
add
push
pop
arpl
jns
mov
and
cmp
test
ret
adc
sub
sti
xchg
sbb
adc
gs
cmc
cltd
mov
mov
and
and
xor
xor
xlat
movsl
icebp
ss
fdiv
sahf
add
fcompl
flds
and
fiaddl
inc
pop
mov
adc
aad
add
jmp
sub
mov
or
dec
inc
and
mov
int
xchg
cmp
andb
rorb
xor
push
stos
addr16
stos
cmc
inc
stos
jg
push
mov
mov
inc
xchg
sahf
push
pop
in
sar
jo
or
push
dec
mov
mov
inc
aaa
mov
je
jb
and
dec
push
sub
call
push
sub
sub
cs
push
imul
sahf
or
sahf
lods
in
addr16
fdivr
dec
xchg
jno
in
lahf
lods
aas
pop
stos
aad
pop
mov
popf
xchg
add
fstps
mov
bound
mov
test
sub
pop
pop
push
mov
test
sub
fisttpl
mov
push
push
stos
jmp
in
cs
dec
je
mov
push
out
hlt
cld
pop
out
adc
mov
adc
mov
mov
jecxz
scas
data16
mov
xchg
xor
sarl
lahf
sarb
or
icebp
pop
pop
cmc
xchg
addr16
adc
aas
mov
sbb
push
lret
adc
inc
insb
out
es
and
mov
mov
aaa
cwtl
mov
push
insl
mov
adc
stos
mov
fisubs
cli
stos
loop
xchg
jge
shlb
out
inc
push
decb
call
shl
dec
mov
inc
dec
cmp
mov
xor
jg
jne
loope
pop
loopne
cmpl
lret
addr16
push
iret
jae
mov
addr16
loope
xor
rcrl
jl
popa
sahf
call
pop
inc
or
mov
cltd
jb
xor
sub
or
add
push
sub
cmp
enter
xchg
lods
nop
out
push
rolb
adc
sahf
cmp
inc
pop
mov
fldt
push
aas
mov
mov
sub
push
mov
xor
cmp
jp
lock
sbb
xor
add
jno
cltd
jl,pn
sub
mov
in
fldt
mov
adc
loope
push
mov
movsl
subl
push
push
cld
negl
ja
imul
dec
mov
lods
je
test
aad
inc
cmpsb
clc
test
lret
jg
inc
lds
imul
popl
xor
jno
jb
add
test
mov
pop
sub
fsubrs
xchg
lods
dec
mov
and
pop
adc
cmp
pushf
in
cmc
fstps
in
push
cltd
mov
fcomp
dec
inc
stc
cmp
jno
pop
jmp
dec
sahf
mov
popf
loopne
mov
in
iret
jge
bswap
popl
das
clc
jl
hlt
push
adc
andl
aaa
mov
mov
in
arpl
out
push
xor
mov
divb
add
xchg
repz
fs
and
mov
ljmp
ret
fisubrs
std
scas
adc
out
jle
and
adc
cmp
jge
nop
insl
xor
mov
data16
or
push
adc
pop
xchg
jmp
and
mov
lret
jecxz
and
xor
inc
mov
dec
jecxz
xor
and
cld
mov
daa
jg
pop
sbb
xchg
in
push
aas
mov
and
das
pop
in
sbb
mov
das
push
leave
jb
cwtl
inc
adc
pop
or
push
mov
or
dec
fcoms
cmpsb
jecxz
mov
pop
scas
mov
cld
leave
cmp
sbbl
lcall
xchg
mov
lcall
cmpb
ret
test
movsl
push
cs
jl
mov
loope
cmp
fldt
jno
mov
fcomp
fnsave
test
inc
mov
push
add
xor
int
lock
pop
icebp
mov
aas
fildl
rcrb
push
stc
xor
jmp
cmp
xchg
icebp
lret
inc
cmp
add
xchg
std
and
push
mov
xchg
cwtl
inc
push
cmp
jb
sbb
jp
mov
cmc
pop
mov
sbbl
out
gs
cmp
jge
fucomi
lret
int3
xor
cs
push
mov
shlb
push
jg
iret
cmpsb
sub
iret
cmpsb
push
aad
mov
mov
xchg
dec
lds
pop
mov
test
sub
inc
or
cmp
int
ds
inc
pop
fisubrs
das
and
adc
mov
notb
or
xorl
sub
scas
out
in
es
int3
mov
mov
aam
dec
cli
pop
mov
sub
daa
lock
aaa
shrb
sbb
shlb
ljmp
jmp
in
inc
inc
add
adc
ljmp
nop
lea
cmp
psubusb
test
loope
lods
or
stc
or
popa
mov
push
repnz
fs
mov
inc
pop
jg
adc
adc
pop
mov
xor
xchg
cmp
jbe
imul
sbb
stos
scas
lods
test
adcl
adc
scas
lea
out
out
call
incb
jmp
dec
cmp
icebp
sub
or
jle
in
repz
jge
mov
insl
rorb
mov
pushf
cmp
divb
pop
stc
mov
pop
daa
pushf
xor
pusha
nop
mov
mov
add
cmp
mov
cmp
rclb
insb
mov
cmp
mov
pop
call
xchg
jbe
ss
scas
test
ror
into
arpl
pusha
mov
mov
mov
mov
and
mov
sub
test
xchg
pop
into
jns
cmp
popa
inc
outsl
jmp
sti
xor
movsb
arpl
cmp
fcomp
inc
inc
jns
pop
out
sbb
sbb
pop
inc
rol
and
cltd
fisttpll
mull
repnz
sbb
and
in
sti
cmc
jmp
pop
in
xor
scas
shll
jne
cmc
repz
sub
push
push
mov
lods
sahf
cmpsb
outsb
jmp
insl
mov
pop
fidivrs
inc
mov
mull
je
mov
arpl
pop
cmp
mov
push
mov
js
mov
xor
push
mov
insb
subl
bnd
cmpb
adc
aaa
pusha
cmp
and
dec
pushf
pop
into
jb
add
ror
int
in
push
rcll
jp
adc
mov
sbb
rol
mov
add
xchg
xchg
hlt
xlat
dec
fsubrl
xlat
scas
xchg
jns
inc
sahf
xor
mov
xor
and
pop
outsl
mov
adc
sub
mov
xor
fldt
or
jl
test
mov
mov
andl
adc
and
in
testl
dec
loope
adc
inc
je
in
out
dec
pop
xorl
ficoml
sbb
es
sbb
jge
out
scas
sbb
rorb
rcll
sbb
dec
jmp
lea
xchg
xchg
std
out
movsb
pop
nop
adc
notl
cmp
sahf
xchg
mov
icebp
ficompl
mov
lock
mov
cmpl
in
das
mov
xchg
mov
sub
mov
out
and
sti
jg
jno
add
push
sub
scas
icebp
js
std
cltd
add
mov
dec
push
out
cmp
xchg
xchg
sub
adc
loope
xor
dec
in
stos
pop
or
nop
idivl
cltd
out
mov
pop
xlat
and
cltd
fsubrp
sub
pop
sub
test
or
cmp
sbb
lock
decl
pop
cli
idivb
cld
jns
ret
pop
xchg
sub
pusha
mov
out
addr16
xchg
sbb
jae
enter
out
dec
jl
pop
cmpsl
cmp
jno
jge
cmp
repz
mov
aas
xor
in
sub
les
mov
inc
fcoml
add
int
je
repz
imul
push
push
std
inc
add
xchg
lods
call
mov
les
jbe
jae,pn
sti
jne
shlb
inc
add
popa
inc
push
leave
cmp
inc
in
sti
inc
out
xchg
movsl
push
ss
test
jmp
loop
dec
pop
test
xchg
jle
ja
das
es
mov
mov
jns
es
in
cmp
sbb
push
pop
inc
cld
pop
outsb
pop
pop
jnp
cwtl
xlat
lods
xchg
inc
lock
mov
xchg
stos
mov
inc
push
adc
movsb
cwtl
in
imul
fcompl
pop
push
pop
popa
and
js
or
lahf
pop
push
jge
clc
sub
mov
adc
aaa
data16
pop
fidivs
mov
aam
leave
mov
repnz
testl
xchg
or
cmp
adc
pop
imulb
insb
adc
xor
repz
lea
out
lret
sti
fsubl
adc
xchg
mov
lds
in
and
mov
data16
xchg
jl
fwait
mov
cmovb
rcll
add
das
scas
push
adc
mov
mulb
orl
subb
mov
and
loopne
and
jge
mov
jg
push
jecxz
std
jae
fdivrl
mov
xor
cmp
lea
out
loopne
mov
xor
in
call
aas
xlat
data16
ficoml
lea
push
clc
int
jbe
and
ret
xlat
fcomip
sbb
outsl
xchg
sbb
pop
or
rolb
push
ror
mov
mov
jno
test
jno
mov
imul
arpl
cmp
arpl
repnz
imul
adc
mov
iret
psubb
mov
ret
push
inc
xchg
fcomps
jo
sbb
jg
mov
bound
ficomps
jmp
sbb
lock
xor
mov
fwait
addr16
add
in
out
xchg
sub
call
xchg
adc
mov
xchg
cmp
cmp
cli
and
imul
pop
xchg
pop
push
push
aad
xlat
dec
aam
les
out
hlt
sbb
mov
test
push
sub
cmpsl
mov
pop
mov
sub
or
nop
or
sbb
subl
aaa
add
jle
mov
enter
gs
cmp
lea
mov
neg
in
add
cmp
shrb
hlt
test
cmp
lcall
stc
and
sbb
xor
subb
test
sub
sbb
out
nop
xchg
sub
mov
add
test
nop
mov
or
and
add
cltd
popa
imul
mov
nop
enter
mov
xor
test
std
fdivrs
insb
enter
je
xor
xchg
sbb
jo
popa
data16
jmp
test
out
nop
push
sub
cmp
stos
int
in
and
push
mov
insl
pop
gs
xchg
les
negb
scas
xchg
dec
imul
xchg
out
cmpsb
mov
sti
js
pop
pushf
sahf
or
aas
cs
sbb
scas
push
pop
stos
cmp
call
and
jne
fnstcw
jp
scas
mov
xor
hlt
loope
jno
je
xorb
push
js
jo
jb,pt
clc
daa
mov
push
hlt
in
test
je
mov
jbe
mov
outsl
cmp
out
cmp
adc
and
adc
inc
jmp
lods
inc
add
bound
sbb
mov
sbbb
xor
je
pusha
push
xchg
cltd
jle
pop
lea
jno
pop
ss
jne
and
dec
adc
adc
sub
scas
fwait
or
sub
cmpb
out
leave
in
movb
lods
mov
jnp
xchg
jle
fwait
pushf
fiadds
div
mov
out
inc
add
pusha
or
sbb
mov
xor
stc
out
jl
fiadds
imul
inc
or
scas
add
push
cs
cmpsl
add
sub
push
lret
movsb
xchg
cmp
and
sarb
iret
popf
pop
out
xchg
ja
mov
lods
push
push
push
lods
sbb
leave
or
test
cmpsl
pop
dec
mov
adc
mov
mov
loopne
cmp
add
push
xor
hlt
jno
fs
push
inc
icebp
pavgw
repz
data16
jmp
mov
adc
loope
popa
mov
or
mov
dec
mov
inc
push
add
mov
push
in
ja
js
adc
push
popa
xchg
and
xchg
adc
jo
add
or
mov
scas
inc
mov
adc
out
fsubrl
mov
cs
pop
cmpsb
sti
in
addr16
add
dec
dec
aam
cmpsl
loop
sbb
adc
or
cltd
cmpsl
xor
add
out
inc
and
insb
test
ljmp
cmp
pop
leave
pop
cwtl
addr16
aaa
adc
loopne
xor
pop
test
popa
inc
mov
insb
and
js
imul
into
mov
push
sahf
lods
int
cmp
sbb
jne
cmp
shr
pushf
scas
sbb
pop
cmp
rclb
sub
fisubrs
cli
inc
or
loope
jmp
or
in
dec
dec
cmp
out
sbb
movsb
pop
insb
dec
lcall
imul
repz
lret
sbb
negb
ja
and
xor
lods
dec
xor
pushf
lea
imul
push
out
mov
cmpsl
stc
jge
jns
xchg
in
mov
add
adc
inc
push
lahf
push
adc
sub
mov
dec
mov
hlt
popa
ss
jbe
insb
adc
cmp
cmpsl
mov
gs
jle
subb
add
adc
or
lret
xchg
cwtl
pop
fbld
pop
es
jo
and
sub
jnp
xchg
fcompl
repz
test
ret
pop
mov
cmpsb
adc
mov
jb
pop
xchg
sub
xor
testb
rcrb
mov
fnstsw
sbb
add
inc
stc
repz
xor
dec
pop
mov
mull
and
and
add
cmp
pop
imul
cmp
leave
jo
clc
add
dec
dec
out
adc
adc
fisubrl
mov
out
iret
sar
jae
sub
add
and
out
mov
fs
loopne
icebp
loopne
outsb
aaa
pop
mov
or
add
out
jmp
inc
or
fmul
jnp
xchg
js
mov
in
jno
pop
xchg
pushf
jnp
insb
scas
jno
lods
sti
push
jns
xchg
xchg
cmp
cmp
rcll
sub
enter
sub
fistl
or
pop
mov
xchg
repz
inc
mov
jecxz
jno
add
dec
or
mov
lods
lret
es
xor
push
scas
aad
insb
mov
movb
int
push
dec
dec
in
dec
int
push
shr
sub
adc
test
xor
ret
inc
enter
out
mov
pop
and
fistl
jg
and
stc
mov
add
lods
or
inc
mov
mov
jnp
pop
push
in
stos
mov
xor
push
nop
inc
neg
dec
test
lds
cltd
popa
repz
icebp
mov
xor
push
sti
fistpll
pop
sbb
fdivrl
push
mov
or
and
andb
xlat
mov
adc
ja
aad
fwait
push
arpl
adc
mov
das
movsl
jo,pn
sbb
imul
cwtl
xor
outsb
leave
adc
push
fsubr
mov
mov
add
push
enter
out
js
xchg
sub
testl
out
mov
jecxz,pt
imul
and
xor
in
repz
in
jp
scas
mov
pop
jg
pop
data16
insl
cld
adc
fnstcw
sub
mov
push
lcall
pushf
fdiv
out
inc
cld
sar
sub
movsb
lods
or
sbb
xchg
les
add
jg
test
imul
jo
out
fldcw
mov
sub
push
cli
mov
daa
movsl
aaa
sarb
add
mov
jp
in
mov
fs
stos
daa
and
in
pop
fidivl
pop
add
sbb
aas
sub
ror
xlat
imul
data16
in
sti
out
les
cmp
or
xchg
push
jp
push
rclb
rclb
mov
xor
sbb
in
into
aam
pop
mov
popa
int3
pop
jl
out
xchg
jae
pop
add
xor
icebp
jle
scas
fildll
outsb
js
sub
mov
imul
mov
pop
mov
add
lcall
cmpsb
fsts
test
bound
out
jmp
cwtl
ret
pop
jns
mov
popa
and
lret
shrb
imul
popa
loop
pop
aad
fmul
xchg
pop
movsb
ds
pushf
xchg
jae
adc
adc
sti
out
mov
xchg
xchg
dec
hlt
divb
xor
mov
lret
adc
push
push
and
sbb
xor
xlat
bnd
fwait
and
inc
cmp
nop
xchg
je
ljmp
in
mulb
in
adc
hlt
addr16
hlt
fnstcw
mov
in
sti
in
pop
inc
int3
rcrl
add
dec
cmpsl
jecxz
lock
xchg
push
dec
bnd
es
lret
je
test
dec
mov
inc
test
add
fstpl
mov
sub
jg
fwait
mov
push
adc
arpl
aam
sub
mov
in
jbe
movsb
or
into
int
sub
push
mov
dec
and
repz
sub
out
cmpsl
fxch
push
dec
rcrl
mov
adc
mov
enter
cmp
out
adc
out
sub
mov
or
xchg
mov
xor
mov
call
gs
xchg
or
cmp
add
xchg
in
push
test
cmp
dec
mov
lret
dec
or
in
out
jl
sbb
lds
iret
ljmp
fbld
or
sub
pop
mov
in
xchg
cwtl
roll
out
dec
dec
xor
pusha
pop
js
loope
mov
add
jb
mov
pop
mov
lret
fimull
and
cwtl
pushf
sub
arpl
sbb
inc
push
or
sub
sarb
pop
rclb
xchg
mov
jp
mov
cmc
movsb
push
cmpsl
sub
sti
in
push
mov
sub
imul
adc
aaa
gs
lcall
push
mov
pop
dec
fmul
fnsave
out
cmp
test
rcr
sahf
fiaddl
jbe
in
mov
xor
cmp
inc
int
xor
jp
jl
pop
aaa
movsl
push
in
sub
jle
push
add
inc
js
xor
cli
add
pop
dec
xor
aas
dec
inc
xchg
sub
xchg
and
mov
push
movsl
dec
sbb
jg
sarl
movsl
and
or
push
cld
or
int3
dec
and
je
pushw
ss
jo
mov
repnz
mov
and
dec
in
shr
push
xor
icebp
push
int
cmp
mov
xchg
out
pop
or
cltd
fcom
aaa
bndldx
mov
jno
jmp
xchg
ret
arpl
inc
add
or
dec
dec
and
aaa
dec
lods
mov
sahf
rol
shrb
popa
jecxz
insb
testl
pop
mov
xor
andl
mul
sbb
jg
popa
in
mov
les
ret
push
stos
lret
ret
pop
sub
sub
aas
in
fisubs
jo
or
les
push
push
sbb
lds
mov
fnsave
insl
fists
call
mov
add
stos
lahf
jl
cmc
dec
in
aad
cmpsl
addr16
test
out
or
push
ljmp
adc
sahf
shll
pusha
das
pop
aaa
out
xchg
xor
movsl
xchg
adcb
bnd
inc
movsl
xchg
sbb
push
push
pop
sbb
int
xor
jmp
adc
adc
outsb
outsb
pop
scas
push
mov
fadd
dec
rolb
loop
jg
cwtl
jnp
xor
lds
sub
and
dec
add
in
movsb
scas
in
jg
mov
xor
xchg
notb
add
cmpsb
das
pusha
push
stc
push
mov
fxch
pop
fcompl
sysenter
dec
addr16
pop
test
fwait
sar
xor
jne
popf
dec
lods
push
and
add
psrlw
aam
aas
inc
or
iret
add
lea
push
loope
push
in
mov
mov
lea
xor
in
cltd
pop
push
movl
jno
ret
je
cmc
pop
bound
mov
repz
xor
pop
pop
enter
jno
add
mov
jb
xchg
ficomps
sbb
jae
icebp
pop
fcompl
decb
repnz
inc
mov
icebp
and
xchg
andl
movsb
cmp
xor
lds
loop
mov
xchg
xor
lret
aad
adc
bound
stc
jmp
inc
loope
push
xchg
push
loope
cmpsb
shll
mov
adc
dec
fnstenv
mov
adc
roll
test
pop
mov
pop
in
or
adc
cmpsl
adc
loope
push
into
inc
in
mov
test
and
pop
add
aaa
orl
sbb
cltd
leave
out
call
fldt
add
push
or
ljmp
mov
cmpsb
stos
int3
sub
mov
add
pusha
sbbb
cltd
leave
clc
push
mov
xorl
stos
ret
js
jne
mov
mov
push
ror
iret
jno
aad
inc
in
push
dec
xchg
push
rcll
nop
popa
leave
sarl
out
mov
cmc
cs
sub
scas
jbe
outsb
xchg
cmc
dec
ss
and
xor
pop
jno
inc
add
cmp
nop
mov
or
mulb
cmp
stc
xor
adc
xchg
sbb
scas
lret
jns
jge
cmp
add
mov
out
push
iret
leave
scas
out
jmp
sahf
jno
shr
jmp
add
xchg
mov
mov
insb
fcom
push
jbe
push
clc
mov
mov
jno
data16
and
add
sbb
in
jne
jb
mov
push
mov
testl
dec
das
sbb
adc
xor
in
xchg
jb
leave
test
mov
cmpb
imul
cs
je
faddl
cltd
incb
lret
mov
out
shll
pop
lds
movsb
lret
dec
insl
pusha
pop
gs
add
arpl
dec
daa
loope
dec
inc
add
and
cmp
pop
adc
xchg
sbb
pop
mov
push
clc
push
mov
jo
insb
sbb
jns
out
in
mov
divl
push
push
scas
scas
les
mov
mov
adc
in
sbbb
ret
rcrb
bnd
sbb
adc
push
jge
pop
push
add
in
inc
push
aaa
jmp
mov
jns
pop
and
arpl
sahf
dec
outsb
dec
sub
push
push
stos
adc
sub
xchg
in
cwtl
ror
rclb
inc
out
xchg
jle
inc
push
lret
bound
popa
arpl
and
sub
jb
push
or
and
cltd
mov
sub
mov
push
xor
mov
pop
adc
neg
pop
mov
dec
mov
pop
inc
mov
mov
shll
insl
gs
pushf
outsl
lods
ljmp
and
jp
sbb
ds
invd
repz
rcr
fldcw
pop
scas
pop
hlt
lret
pop
mov
repnz
mov
das
scas
idiv
mov
and
enter
lods
push
push
int3
sub
inc
js
out
and
out
mov
out
xchg
and
enter
dec
mov
mov
lock
push
add
rcr
jp
jmp
mov
outsl
leave
repz
std
mov
mov
fldl2t
dec
ss
mov
jg
mov
cld
inc
lock
out
pop
xchg
inc
stc
outsb
sub
mov
js
test
add
popf
aam
and
push
xchg
inc
pop
push
repz
push
cmp
push
fistps
jge
mov
movsl
inc
shl
sbbb
scas
fprem
fiaddl
push
js
stos
xor
inc
cwtl
and
xor
fwait
movsl
sbb
mov
sbb
mov
adc
cltd
insb
fcompl
andl
cmp
or
test
sbb
pop
cmpl
xor
push
jle
repz
xor
push
bnd
inc
push
xchg
call
jl
pop
jno
addr16
cmp
push
stos
or
stos
loopne
fadds
ja
aam
xchg
mov
add
cmc
cmp
push
sbb
xchg
push
mull
sbb
pop
mov
scas
shlb
jmp
mov
sbb
subb
jl
enter
lahf
loope
and
loope
xor
sbb
ds
ljmp
loopne
jmp
scas
mov
movsb
mov
popa
mov
lea
stos
push
outsl
call
ds
mov
stos
std
dec
add
mov
adc
cmp
push
xor
xchg
ja
mov
xchg
jge
sub
fcompl
icebp
mov
jl
and
jmp
movsl
pop
dec
fisubrl
lea
icebp
js
lock
nop
out
aas
xor
ja
sbbl
sub
xchg
loop
mov
stc
inc
lods
les
adc
xchg
mov
or
sbb
fidivrl
cli
aaa
mov
inc
add
xorl
inc
pop
outsl
int3
enter
pop
int3
popf
dec
outsb
push
stc
iret
xor
ds
sbb
adc
jg
push
inc
sti
out
gs
jb
imul
test
movl
leave
add
push
aaa
mov
xchg
fwait
pop
popf
loopne
push
testl
mov
out
das
mov
les
push
leave
or
add
push
inc
ss
in
sbb
adcl
outsb
loop
xchg
or
stos
sub
and
mov
repz
fimull
xchg
and
leave
mov
xchg
xchg
mov
mov
das
sahf
shll
push
lret
ss
mov
mov
push
les
scas
ja
push
sbb
or
push
pusha
imul
js
push
orb
lahf
xchg
sbb
xor
out
sbb
iret
cmp
push
fistl
pusha
and
pop
dec
jle
sub
cli
push
in
pop
mov
popf
aam
xchg
push
xchg
cmpsb
pop
sub
and
popf
push
push
mov
insl
jno
push
inc
sub
inc
jno
pop
ret
mov
inc
fstpt
daa
adc
imul
stos
cld
subb
mov
jae
pop
push
xchg
sub
cmp
lcall
shll
ja
cmp
les
xchg
inc
add
cli
in
mov
cmpsb
push
xchg
cmc
xor
lds
fmull
testl
cltd
cli
ja
or
push
adc
jne
inc
xor
sbb
dec
cmp
pop
icebp
xchg
cmc
sarl
xchg
mov
shl
mov
outsw
in
add
mov
test
outsb
xor
dec
mov
loope
xchg
mov
cmpsb
dec
dec
into
jo
cmpl
mov
nop
addr16
je
xchg
dec
cmp
jb
das
jle
cmc
and
mov
inc
outsb
fs
sbb
jmp
arpl
aad
xor
mov
mov
jl
inc
movsb
not
test
lea
xlat
test
fcomps
roll
push
pop
mov
lahf
add
xchg
flds
mov
mov
sub
test
or
fsubs
es
jae
loopne
add
enter
cmp
sub
stos
or
dec
mov
loop
xchg
subb
mov
mov
sar
into
scas
pop
inc
cmc
cli
add
cmp
and
pop
into
xchg
adc
sub
cwtl
shlb
fisubs
jecxz
mov
pop
fisubl
pop
int3
aam
in
and
sbb
rol
and
inc
xchg
jl
lcall
das
or
in
mov
in
insl
fnstsw
sbb
xchg
cmp
jae
push
ficompl
mov
movsb
lods
sub
mov
mov
out
pop
mov
loop
popf
xor
sti
popf
or
or
pop
dec
xchg
adc
xchg
jb
jno
mov
inc
and
aas
adc
arpl
push
and
adc
xor
jnp
pusha
mov
sbb
icebp
rcll
fwait
pop
pop
imul
test
mov
push
andl
dec
data16
shrb
pop
lcall
mov
jbe
xchg
inc
jb
xchg
pop
xlat
mov
inc
arpl
sub
sbb
jns
push
jne
js
sub
mov
outsb
lock
sub
adc
jbe
push
lret
sbb
jmp
mov
es
out
movsl
xchg
lods
in
andb
call
lods
xlat
sbb
or
xchg
and
ljmp
mov
xor
mov
or
inc
sahf
in
icebp
mull
mov
xlat
dec
mov
test
jmp
cmp
cmc
lds
sbb
xchg
pop
jg
std
popf
aaa
and
scas
test
add
mov
inc
mov
dec
movsl
cmp
cmp
xchg
push
ds
sub
push
es
out
iret
cmp
dec
pop
out
and
jmp
rcll
into
and
rcrl
cltd
mov
mov
popf
mov
sbb
daa
test
scas
mov
inc
cli
sbb
mov
nop
out
rclb
fmull
add
mov
pushf
aad
lret
or
push
xchg
psraw
xor
shrl
add
test
in
lods
fcomi
js
test
lret
lahf
das
test
ss
and
fiadds
enter
jno
shrb
inc
hlt
jbe
movsb
lret
adc
sbb
test
out
lods
jle
pop
jmp
dec
mov
push
push
in
js
aam
inc
je
movsb
xchg
int
jbe
cmp
mov
lock
xchg
std
sub
pop
mov
cld
mov
mov
dec
jmp
les
sbb
push
cli
cmp
mov
rorl
sarl
dec
fs
cmc
or
les
into
das
stc
in
ret
push
and
mov
xchg
in
xor
fimuls
cmp
jne
inc
cmpl
jecxz
cli
push
add
fs
xor
ss
das
push
xchg
hlt
xchg
lret
add
lcall
dec
aas
sub
push
cmp
dec
es
or
imul
dec
mov
daa
push
mov
jns
mov
lods
mov
push
data16
movsb
sub
repnz
sub
outsb
fsubl
jbe
daa
mov
sbb
in
repnz
xchg
mov
jae
in
testb
nop
test
sbb
fnsetpm(287
mov
push
fldcw
adc
std
mov
imul
mov
xor
xchg
xchg
or
call
push
sti
test
loope
cltd
adc
das
mov
adc
loop
inc
inc
aas
xchg
and
filds
push
push
fcompl
inc
push
mov
repz
int3
jmp
sub
mov
push
jp
out
cld
sbb
cmpsb
test
and
sub
sbb
mov
or
jle
push
cmp
cwtl
clc
lcall
inc
adc
dec
cmc
aaa
jo
adc
mov
iret
inc
and
repnz
mov
icebp
mov
sub
loope
xchg
dec
xor
push
jecxz
loope
or
mov
inc
and
cmpsb
and
jbe
push
jge
cmp
sarb
ficomps
cmp
int3
mov
add
ss
out
push
jl
inc
les
les
ja
test
sub
cmc
inc
cmp
mov
push
ljmp
cmp
outsl
ljmp
pop
pusha
clc
jns
fisttpll
jb
jb
mov
jge
insl
and
xchg
das
inc
imul
jbe
mov
pop
sbb
push
mov
push
adc
push
mov
push
jecxz
mov
adc
sbb
jns
divl
adc
repz
pop
data16
push
or
aaa
inc
sub
mov
adc
push
aam
mov
fdivr
stos
mov
shlb
scas
ficomps
push
and
cmpsl
in
mov
and
adc
negb
stc
xchg
sbb
mov
insl
test
scas
in
push
in
subb
fcoml
mov
xor
fs
aaa
add
xchg
sbb
les
fsubl
dec
nop
pop
aad
jnp
push
xor
mov
ss
cld
in
push
fs
lret
jl
sbb
lock
sbb
stos
fcoml
imul
andb
mov
and
mov
pushf
pop
bound
xor
xchg
nop
sbb
jb
inc
push
repnz
xchg
lods
imul
into
and
mov
mov
add
fcomp
and
pop
dec
jp
dec
fwait
call
in
or
aam
cmp
sbb
add
pop
pop
push
mov
daa
push
dec
pop
repnz
pop
test
fldl
mov
int
push
inc
test
sbb
pop
mov
xor
xchg
push
inc
in
adc
sahf
mov
js
insl
imul
adc
adc
mov
adc
out
frstor
mov
and
ljmp
sarl
sbb
inc
mov
rorl
sahf
inc
mov
rolb
jmp
frstor
cmp
sbb
xchg
jnp
std
mov
pop
pop
dec
jmp
aad
bound
add
clc
mov
lods
cmpsb
loopne
das
dec
outsl
jae
jp
adc
jns
rolb
xor
repz
mov
fucomip
add
cs
in
xchg
ret
add
sbb
scas
cmc
sbb
fnstenv
push
jp
mov
mov
out
in
fmulp
fcoms
xchg
inc
cmp
pop
ja
pop
repz
mov
lock
outsl
rcll
xor
and
shrl
into
popf
loop
pop
pop
jb
aas
js
ds
fsubr
lahf
or
mov
scas
and
cmp
pusha
jne
jbe
inc
jbe
out
mov
jno
lret
inc
inc
sbb
adc
mov
insl
cwtl
xchg
jmp
mov
sbb
dec
test
fistps
mov
mov
add
lea
movsb
cld
push
aas
sbb
popf
push
mov
out
sub
sub
jecxz
or
push
imul
subb
fstl
sbb
fwait
dec
mov
scas
ss
fmul
pop
movsb
xchg
or
pop
pop
aaa
push
imul
lods
push
xchg
shl
jno
stc
imul
icebp
lock
jl
push
mov
or
dec
or
lcall
cmp
xor
dec
sub
push
addr16
lods
mov
xor
mov
inc
dec
jl
fwait
push
xorl
inc
js
push
xor
rcrl
xchg
repnz
pop
fidivl
push
pusha
bound
mov
xchg
mov
mov
or
xchg
xor
or
iret
sub
or
cmp
inc
mov
test
daa
lds
andb
cmp
add
call
cmp
pop
add
jb
mov
popa
lods
mov
test
fxch
jmp
xchg
jno,pn
fldt
ror
dec
jb
pop
std
push
jg
jg
jb
mov
fadds
xchg
scas
sbb
les
mull
fildll
into
lret
inc
mov
fsubl
gs
cwtl
sbb
in
imul
loopne
js
stc
jb
fwait
leave
into
and
popf
pop
rol
dec
add
data16
xor
or
decl
or
test
inc
pushf
mov
pop
testb
mov
adc
lahf
out
iret
pop
sbb
neg
xchg
imul
xor
scas
lods
add
and
aam
ds
shrl
mov
addr16
dec
scas
and
mov
mov
cmp
mov
stc
adc
aad
subb
inc
xchg
in
gs
fcmovu
pop
lods
mov
adcb
and
out
cwtl
jae
xor
out
cmp
mov
mov
mov
in
mov
shll
cmp
pop
int
inc
jecxz
ja
mov
xchg
gs
or
mov
rcll
add
mov
ret
pop
imul
cmpsl
push
cmc
mov
cmp
sub
cwtl
rolb
pop
push
mov
sahf
in
sbb
lds
rcrl
data16
fimull
xchg
xchg
and
pop
push
mov
data16
call
hlt
inc
and
cmp
cmc
jns
insl
cmpsb
test
inc
cwtl
mov
je
incl
xchg
push
mov
or
or
jns
inc
lret
jo
out
add
sub
fildl
jecxz
mov
testb
pop
outsb
mov
push
cmpsl
or
int
test
stos
dec
repz
addl
pop
ret
adc
sub
cwtl
jge
das
xorb
push
repnz
push
subl
push
push
notl
loope
movsb
test
fdivs
adc
daa
stos
ret
add
inc
xor
lods
inc
add
adc
adc
insl
cltd
call
aam
stos
jl
cmpl
addr16
mov
mov
mov
and
pop
jl
add
xor
lock
push
sbb
sbbl
gs
jbe
dec
xchg
or
daa
sbb
pop
aam
cmc
daa
pop
sbb
or
sub
push
sub
stos
aad
or
dec
dec
data16
add
jnp
neg
sti
inc
jnp
cmp
bnd
mov
mov
dec
es
ud2
test
das
jecxz
add
inc
test
pushf
es
int
setae
sub
sbb
sti
sbb
mov
cmp
sub
inc
dec
call
outsl
mov
sub
mov
dec
inc
sub
pop
mov
es
adc
or
add
mov
xor
stc
gs
push
xor
push
popa
add
dec
xorl
and
mov
sub
push
daa
and
mov
inc
push
dec
dec
les
rolb
or
fnstenv
mov
loope
xchg
adc
jle
out
xchg
xor
out
mov
mov
mov
inc
add
inc
mov
cld
lret
mov
scas
imul
inc
ret
adc
jl
dec
dec
mov
and
fldt
imul
insb
in
and
sbb
push
lahf
mov
jl
push
push
lea
out
mov
daa
std
add
push
pop
dec
popa
mov
mov
sbb
dec
out
adc
js
mull
dec
and
out
rsqrtps
xor
add
fisubrl
add
mov
pop
cmp
adc
cmpb
inc
and
jecxz
faddp
xchg
out
pop
mov
and
mov
adc
out
inc
jl
ret
pushf
je
gs
push
cmp
ss
ud2
jb
mov
fnstcw
or
push
sub
sub
outsl
mov
sub
cmp
sahf
pusha
dec
cld
push
leave
or
and
sub
int
pop
paddsw
lds
imul
mov
scas
push
aas
cmp
xchg
lahf
ret
cwtl
adc
das
inc
push
jne
adc
mov
pop
mov
pop
je
adc
stc
in
test
aad
js
jge
and
cmpsl
out
sub
mov
push
fcoml
add
ss
mov
repz
imul
add
xor
xlat
push
lock
mov
xchg
scas
pop
xor
xchg
imul
js
mov
inc
imul
orl
xchg
mov
lock
xor
and
insl
fstl
stos
xchg
and
roll
test
push
imul
adc
mov
and
pushf
adc
movl
lock
sub
mov
jge
hlt
mov
lcall
into
out
decb
loope
mov
mov
lods
jmp
lods
ret
imul
fwait
fwait
je
dec
loope
jno
sbb
jae
int
shll
adc
or
xlat
dec
push
or
mov
rcll
popa
xchg
push
pop
sbb
aaa
jl
outsb
shlb
pop
push
sub
loopne
mov
mov
repz
and
pop
mov
dec
jns
hlt
iret
cwtl
mov
inc
cmp
dec
ret
xchg
test
filds
pop
add
ret
jae
jne
mov
dec
xchg
xchg
mov
and
xchg
xchg
push
in
fmuls
mov
xchg
sbb
xchg
movsb
xor
and
sbbl
test
sbb
xor
notb
popa
addb
adc
cs
mov
movb
nop
pop
push
lds
int3
outsb
jb
mov
or
sti
rclb
lahf
push
test
xchg
jnp
xchg
and
mov
bound
adcb
push
or
pop
xchg
xor
aad
push
mov
dec
int3
fldcw
out
repnz
xchg
inc
aas
movsb
xchg
idivb
jg
mov
icebp
cmpsl
out
pop
neg
add
pushf
hlt
inc
cmc
stos
xchg
pop
rcrl
push
ret
jecxz
xor
lds
adc
sahf
jecxz
sub
jecxz
jge
sub
push
fcmovu
pop
adc
mov
ficompl
in
adc
cmp
enter
xchg
out
ss
jecxz
and
jo
daa
push
sbb
and
outsb
mov
jno
ret
in
test
push
pushf
xchg
je
sbb
popa
fs
adc
mov
jae
aas
sub
mov
jno
jp
jbe
bswap
push
dec
mov
fwait
xchg
jg
push
and
pushf
mov
cmp
xlat
or
mov
dec
aaa
adc
je
xor
loop
adc
mov
add
inc
aas
mov
pop
into
testb
mov
dec
mov
daa
sub
cmpl
push
lret
jae
add
loopne
inc
jl
aas
xor
xor
icebp
push
ja
adc
lahf
or
add
mull
les
sti
sti
xchg
cwtl
sbb
out
popa
in
std
popa
leave
fwait
mov
dec
inc
push
out
mov
xor
cmp
add
adc
lret
or
adc
in
cmp
inc
clc
dec
sbb
or
jle
xor
jmp
dec
shll
repnz
inc
or
jns
mov
cmp
inc
lods
fimull
jae
sub
lock
test
jae
inc
sbb
xorl
aas
xchg
add
xchg
or
lret
sub
lea
adc
jb
mov
mov
test
js
insl
add
xor
push
stc
lods
sbb
bound
cli
int3
dec
push
xchg
sbb
mov
mov
mov
push
rcrb
xchg
gs
lock
iret
jmp
jbe
jns
adc
push
mov
cmc
xchg
sbb
add
or
cld
xchg
push
ret
lcall
test
and
mov
jns
in
lods
mull
popf
test
jmp
or
leave
mov
testl
rclb
dec
daa
adc
push
mov
pusha
fistpl
xor
mov
sbb
xchg
lods
mov
mov
scas
aam
push
and
add
cmp
sbbb
pusha
cmp
shll
inc
mov
lret
mov
gs
ret
lods
push
subl
push
sahf
mov
rcrl
or
stos
mov
cmp
and
mov
ljmp
mov
lods
cmp
repz
mov
cmpsb
and
arpl
add
push
loop
mov
ds
daa
cmc
sbb
jp
daa
movsb
pop
shrb
stos
ss
jg
cwtl
push
pop
dec
xchg
movsl
inc
test
and
stos
je
lret
fidivrs
or
loop
testb
out
pop
and
add
aam
sub
sbb
out
int
pop
shll
dec
cmp
ret
je
jge
daa
mov
std
or
cwtl
inc
and
ret
xchg
add
jle
xor
inc
aam
jne
sub
inc
rorb
xor
mov
mov
add
int3
das
aas
jl
mov
test
fmul
subb
mov
xor
sbb
stos
pop
fadds
fsubrs
aad
adc
jl
and
add
mov
push
mov
test
andl
adc
mov
mov
ret
pop
add
jecxz
cmc
daa
imul
cld
fmull
in
cmp
fistpl
mov
add
movsl
fs
lods
jle
jmp
xor
xchg
mov
rclb
mov
dec
mov
mov
rcl
inc
pop
mov
bound
jp
aam
out
sbb
outsb
inc
dec
gs
das
and
lods
fsubrl
clc
xor
cmp
dec
xchg
mov
pop
and
jne
sbb
je
rcr
push
daa
fnstcw
fs
add
out
pop
push
pop
or
shrb
dec
sub
xchg
test
clc
repnz
dec
inc
adc
pusha
xor
cmp
dec
aas
ljmp
sbb
enter
scas
and
sbb
les
jecxz
or
arpl
insb
xor
neg
xchg
adc
jae
sub
and
ficompl
iret
pop
jecxz
push
lods
xchg
jae
cld
addr16
cmpb
add
bswap
mov
data16
adc
xor
push
sbb
mov
cwtl
xchg
adc
mov
push
pop
xchg
sbb
cwtl
push
xor
rolb
enter
push
sahf
sub
push
arpl
andl
push
adc
cli
jle
cs
inc
mov
mov
lds
sbb
cmp
in
icebp
loopne
mov
push
fwait
dec
or
push
leave
mov
inc
mov
bound
ret
push
aam
inc
push
loopne
mov
arpl
hlt
rolb
xor
dec
js
lcall
cmp
fimuls
negb
in
insl
ret
pop
mov
sbb
jne
pop
fcmove
hlt
dec
js
adcl
jb
xchg
jg
mov
or
fcmovu
cld
arpl
fcomps
mov
addr16
mov
mov
mov
cmp
test
fists
lods
insl
sub
or
and
mov
je
rol
xor
dec
ja
ljmp
pop
add
mov
fldt
out
jo
cltd
imul
dec
push
dec
ss
std
bound
divl
and
je
cmp
sub
rol
scas
sahf
jb
stos
push
sub
fistps
jmp
or
sbb
js
mov
mov
push
pop
dec
sub
or
loopne
mov
xchg
loopne
roll
adc
lock
arpl
fiaddl
jne
pop
into
jnp
push
bound
stos
in
mov
lods
iret
sbb
dec
mov
in
icebp
adc
int
push
sbbb
scas
jle
pop
das
push
jl
dec
dec
movl
in
dec
jnp
adc
xor
ss
or
and
jecxz
cmp
loop
xchg
popa
xor
mov
mov
aad
pop
or
mov
test
xchg
xchg
sub
cld
das
push
or
lea
mov
addl
sub
and
dec
adc
es
adc
dec
inc
std
pop
cmp
inc
aad
dec
mov
cmc
xor
sbb
dec
lcall
jp
mov
adcb
adc
daa
pushf
push
test
xchg
rclb
mov
lods
sbb
mov
lds
icebp
mov
movsl
dec
outsb
or
in
cmp
cwtl
xchg
mov
ss
push
push
add
xor
add
test
xor
call
test
movsl
cltd
lret
push
or
in
bound
lret
int3
cmp
flds
sbb
or
push
icebp
sbb
jge
fwait
and
inc
sub
in
pop
xor
xor
pop
mov
fsubp
jmp
push
or
mov
push
jmp
push
push
ss
sbb
mov
mov
rol
sahf
push
adc
sbb
ret
and
subb
push
cmp
filds
out
call
push
adc
inc
cli
cmpsl
adc
jns
mul
pop
jns
clc
fs
mov
xchg
dec
out
xor
pop
cmp
jl
in
mov
sub
inc
cwtl
sarb
dec
xchg
push
sub
cmpl
pop
xchg
jne
xor
mov
ss
into
xor
fwait
lret
sahf
mov
jp
shr
and
adc
movaps
repnz
repnz
jnp
enter
dec
test
adc
cwtl
cld
fsubrs
cmp
adc
pop
imul
xchg
or
fsub
lahf
adc
addb
jle
mov
mov
cmp
push
pop
xchg
aas
in
sbb
fs
vmulsd
or
stos
int3
scas
add
lret
jbe
out
mov
jno
loopne
pop
and
aam
scas
push
pop
mov
icebp
lcall
clc
cmpsb
fstpl
push
aad
pop
mov
fdivrs
push
push
sbbb
or
adc
loop
push
mov
icebp
jae
adc
mov
std
mull
sbb
jge
fs
stos
loope
sub
push
add
push
mov
int3
mov
fcoml
sbb
gs
push
rolb
pop
bound
enter
loopne
mov
mov
mov
push
ficoms
cmp
mov
xor
push
mov
aam
push
stos
outsl
add
ss
fidivl
pop
call
outsb
pop
dec
cmc
sbb
jno
lret
scas
mov
out
sub
mov
in
aad
push
add
ret
rolb
sub
sbb
in
addb
jg,pt
pop
fs
mov
jo
xor
xlat
sbb
and
xchg
fisttps
adc
mov
mov
mov
sbb
mov
push
add
fdivrs
int3
lds
mull
xlat
add
movsl
lret
orb
pop
jp
xchg
inc
stc
addr16
dec
pushw
pop
orl
mov
push
es
add
pop
xor
or
int
std
mov
sbb
fdivs
mov
inc
loopne
jae
xor
sub
jb
stos
add
call
mov
mov
fimuls
push
sub
dec
div
adc
test
aas
cld
push
mov
pop
sub
testl
pop
leave
js
jle
rorb
jmp
cmp
loopne
gs
jl,pt
stos
fsubrl
sbb
dec
into
jl
cmp
xchg
dec
xchg
and
mov
outsb
xor
push
int3
pop
cmp
int
imul
lret
mov
sbb
sub
inc
pop
fldenv
mov
sub
push
aas
add
add
call
mov
mov
mov
enter
ljmp
iret
pop
in
es
cmp
push
arpl
xor
pop
faddl
js
cmp
scas
fcmove
jae
js
mov
ret
nop
mov
jbe
mov
out
jge
push
or
mov
cld
jecxz
icebp
rcr
pop
ljmp
and
xchg
repnz
push
sub
fisubrl
jo
inc
push
sbb
xor
cmp
xor
mov
out
xor
movsb
test
hlt
cli
lcall
jnp
dec
scas
adc
add
cmp
jne
mov
insl
in
pop
hlt
sahf
mov
dec
sti
iret
jecxz
push
xchg
add
jbe
xor
push
push
pop
lods
jg
or
out
jp
fwait
cmp
pop
nop
in
lea
and
jmp
ds
insl
sbb
dec
fdivr
movsb
loopne
push
mov
lds
and
or
sub
jo
lcall
jne
sub
in
lcall
add
aad
in
xlat
dec
mov
test
sahf
xchg
dec
jecxz
and
xchg
hlt
jl
sbb
out
jg
je
ficoml
lcall
jb
ss
dec
movsb
insl
mov
stos
dec
mov
mov
adc
jl
xchg
jp
pop
add
ja
or
icebp
jmp
dec
in
pop
and
cmpsl
xlat
pop
testb
xchg
cmovge
fstpt
fnstenv
fcom
jle
ret
jns
mov
xchg
jno
hlt
add
in
add
mov
mov
subl
insl
stos
js
mov
pop
idiv
jne
clc
andb
movsb
incl
out
fisubl
sub
adc
sbb
jecxz
xor
push
mov
cmp
xor
addr16
mov
shrl
inc
cmp
lcall
fcmovne
ss
sahf
or
cli
daa
add
loope
mov
adc
test
js
lahf
imul
clc
push
ret
mov
add
sub
cwtl
mov
sbb
sarb
sbb
das
scas
jl
xor
xor
xlat
psrlq
repnz
sub
movsb
jp
xchg
incb
add
adc
fldenv
setg
push
inc
outsb
push
push
loopne
inc
lret
jmp
outsl
push
dec
adc
int
int
mov
rorl
addr16
lea
dec
mov
mov
pop
mov
sbb
jnp
sbb
lods
and
js
jne
mov
sub
jb
add
xchg
movsb
sub
pop
add
lods
mov
push
in
push
addr16
and
inc
pop
xchg
fldl
add
sbb
fs
or
xchg
inc
jecxz
cmp
jge
jecxz
jmp
add
stos
dec
test
sbb
adc
sbb
je
fsubrs
pop
lds
sub
shr
in
mov
xchg
ds
jae
inc
cmp
adc
aad
mov
mov
jmp
sarl
inc
ror
pop
andb
imul
mov
iret
mov
xor
fistpl
xchg
mov
adc
outsb
ret
push
fwait
jb
mov
repz
cwtl
stos
arpl
fisubrs
xchg
sub
cmp
leave
aas
mov
jle
add
cmp
push
gs
pop
mov
lods
push
dec
push
ret
mov
push
sbb
sbb
push
pop
mov
sarb
aam
add
repz
shlb
mov
jle
cld
jecxz
xor
lods
xor
push
sbb
sbb
and
dec
mov
aam
sub
or
mov
or
mov
xchg
pushf
xchg
inc
adc
popf
xchg
xor
jbe
xchg
xchg
into
sti
pushf
jno
out
loope
jns
aas
lret
mov
popf
inc
xlat
movsb
sbbl
or
fwait
inc
mov
aas
rcrl
shl
leave
mov
push
test
mov
fsub
cld
dec
sub
stc
cld
or
pop
es
and
fists
cli
xchg
and
ss
stos
adc
andl
jp
fstpt
lahf
mov
enter
outsb
mov
xor
pop
addr16
in
mov
inc
xor
insb
add
lds
push
in
xchg
dec
movsl
test
shlb
add
fistps
ds
clc
fstpl
es
mov
xor
xchg
fsub
add
in
dec
jnp
sub
sbb
dec
push
hlt
push
xor
mov
int
nop
mov
ds
aam
test
inc
cld
xor
outsl
jns
xchg
out
aaa
sub
and
mov
sahf
daa
loopne
sub
pushf
gs
sub
jge
popf
cmp
scas
jbe
cmpsb
filds
push
mov
mov
pop
xchg
cmp
mov
stos
mov
inc
movsl
gs
testl
add
xchg
cmpsl
jge
xor
sahf
mov
and
xor
pop
sbb
scas
repz
leave
fs
sahf
fmul
test
xchg
out
add
mov
sub
push
orl
xor
mov
out
pushf
in
scas
mov
sti
and
xchg
jns
pop
shll
dec
and
out
stos
or
sbb
pushf
fdivs
dec
jle
adc
into
inc
js
sbb
cmpsb
dec
mov
gs
fcompl
add
out
mov
icebp
sbb
mov
cli
stc
lret
push
pop
mov
cltd
sub
cmp
jmp
sub
xor
fmull
and
test
lret
push
bound
shlb
scas
add
shrb
inc
and
hlt
sub
xchg
je
add
push
jge
decb
out
loopne
aam
aas
sbb
test
push
rcl
loop
icebp
popl
aas
jo
repnz
int3
or
xchg
jmp
outsb
cmp
cmp
sbb
add
outsl
js
pop
outsb
hlt
push
js
leave
jbe
cld
or
mov
inc
je
xchg
jecxz
aaa
fsub
das
xchg
scas
movsl
mov
push
dec
dec
out
dec
jp
sub
pop
mov
mov
dec
inc
dec
imul
lahf
enter
imul
xor
cmc
sbb
cmc
sarb
das
aaa
jp
xchg
sbb
jl
out
fstl
pop
gs
mov
icebp
mov
sub
xchg
sbb
cmpb
lret
adc
adc
cli
call
adc
push
in
mov
popf
mov
xchg
scas
pushf
subl
jns
and
leave
into
int
pop
adc
in
sti
xchg
aad
repnz
mov
cmp
iret
push
lcall
and
lods
ret
js
pop
sub
jbe
push
aam
jnp
fcompl
pop
sarb
in
and
ret
push
mov
xor
sub
jnp
shll
dec
fwait
lar
in
insl
jl
pop
mov
add
repnz
dec
sub
es
bound
outsl
inc
fmul
ja
stos
into
xchg
lea
nop
pusha
mov
cmp
xchg
pop
cmpsb
xor
stos
jns
ret
std
ret
cmpsl
sub
and
bound
movd
adc
pop
pop
pop
fildll
jmp
xor
insb
into
cmp
mov
icebp
sbb
enter
imul
pop
adc
push
and
mov
js
cmp
mov
sbb
in
imul
jb
mov
test
and
mov
mov
jne
repz
sti
push
and
ds
xchg
sbb
mov
in
andl
mov
mov
push
mov
cli
xchg
add
test
or
jae
out
jb
call
sbb
cmp
out
push
add
popf
sub
xorl
jno
movsb
pushf
hlt
lea
ret
lret
js
stc
push
sub
lcall
in
sbb
jae
lret
out
mov
mov
out
sub
cli
xchg
or
testl
jns
das
dec
xor
lahf
jmp
sbb
inc
ret
mov
and
je
mov
inc
inc
pop
popa
iret
pop
cmpl
repnz
movl
and
ds
int
jp
or
cltd
inc
insb
cmp
cmp
push
scas
popa
es
testl
pop
push
shlb
dec
incl
shl
fwait
push
xlat
je
mov
push
pop
icebp
dec
adc
cmp
sarl
cmp
adc
cmpsb
inc
daa
mov
xchg
and
inc
dec
sub
daa
jmp
sar
lcall
lods
repnz
mov
mov
scas
movl
pop
popf
pop
cmc
std
jne
add
mul
pop
and
jne
pop
inc
mov
sti
pushf
arpl
adc
pusha
fwait
ror
jp
or
stos
mov
cmc
fcomps
cmp
lret
aas
into
es
notb
test
pop
test
outsl
loopne
or
adcl
xchg
and
fcomps
xor
faddp
xor
fdivr
jle
mov
lock
ja
lock
jle
mov
sbb
cmpsl
fucomp
icebp
daa
hlt
or
sarb
mov
lods
je
nop
xchg
cmpsb
cs
pop
pop
inc
addr16
sahf
ja
xchg
dec
inc
shrb
flds
aaa
cmpsl
cmp
cs
mov
push
mov
jmp
cmp
jae
js
sub
lret
jmp
loopne
cmp
test
movsb
roll
xor
pop
cs
cli
pusha
stos
lret
pop
xchg
jge
insb
lea
mov
les
fldenv
cltd
xchg
lahf
jns
sub
mov
jg
jg
sub
xor
fsubrl
sbb
imul
insb
or
idivl
enter
mov
inc
lea
mov
lret
shl
pop
adc
cmp
arpl
jmp
cltd
sub
sbbl
loopne
sbb
cld
or
imul
loopne
mov
dec
in
sbb
sarl
rclb
outsb
inc
jno
jo
out
push
ljmp
dec
aaa
sti
int3
decb
push
push
push
and
xor
sub
ss
mov
jb
inc
frstor
jecxz
xor
jmp
adc
pop
xor
stos
out
or
fisttpl
inc
push
in
mov
aam
fnstsw
add
jb
aas
call
push
push
hlt
mov
and
int
pop
in
adc
mov
pop
adc
push
or
or
push
xor
add
ds
xchg
shl
addl
xlat
mov
lcall
jno
pop
inc
mov
out
aaa
jae
dec
cwtl
out
xor
jl
sub
mov
xchg
jmp
shlb
nop
lret
ja
ret
jp
inc
sarl
mov
mov
mov
inc
bnd
and
pop
jns
jmp
loope
lret
fidivs
pop
jmp
out
out
sbb
push
xorl
mov
shrl
movsb
clc
sbb
shl
std
lock
mull
popa
rorb
fnstsw
in
dec
jmp
shlb
out
mov
outsb
repz
cmpl
mov
ljmp
adc
dec
push
stc
add
push
push
in
mov
call
movsb
in
jge
mov
movsb
dec
inc
das
loop
jmp
jecxz
jg
pop
in
adc
fwait
mov
into
jg
jno
lcall
jle
jecxz
sbb
or
int
stc
les
imul
mov
int3
loope
inc
xlat
and
imul
add
lret
ror
jp
dec
les
xor
xchg
divl
mov
sti
iret
xchg
into
test
push
jecxz
cmpsb
mov
xor
add
int
data16
cltd
adc
orl
pop
je
push
mov
inc
jne
ljmp
jmp
cmp
mov
dec
and
inc
xchg
fnstcw
fnsave
mov
incb
add
mov
pop
adc
xchg
jnp
jle
xchg
cs
pop
imul
jle
push
xor
leave
add
and
jl
mov
sub
cli
cmpsl
pop
fwait
les
xor
rorl
popa
dec
xchg
mov
aaa
inc
les
push
mov
rcrl
mov
push
jo
sti
dec
mov
test
mov
lea
int
dec
iret
add
leave
jecxz
loope
and
xor
jecxz
adc
pop
push
sbb
push
jnp
iret
jnp
jecxz
or
adc
mov
sub
xorb
xor
repz
std
and
jmp
add
in
out
insb
pop
ds
hlt
pop
mov
into
pusha
out
mov
mov
clc
and
inc
int3
popf
cmp
inc
xchg
sarl
in
ret
lret
das
stc
cmp
ja
fidivs
pushf
lods
bound
xchg
dec
pop
pop
adc
out
sbb
lds
mov
ret
xor
push
roll
inc
cmp
mov
inc
or
mov
lcall
jmp
pop
jmp
mov
cmpsb
push
sahf
push
xchg
mov
mov
stos
nop
inc
pop
dec
enter
fidivrl
out
clc
mov
inc
pop
xchg
ljmp
sarb
jnp
xor
pop
cmp
popa
cmp
nop
ficoms
push
xchg
mov
call
stos
lods
cmp
sysret
ljmp
cld
push
or
inc
out
fmul
cltd
xor
orl
jmp
add
cmp
inc
jg
rolb
aaa
jnp
movsb
push
pop
in
test
jns
leave
movsl
loop
stos
mov
pop
xor
inc
movsl
insb
testb
sbb
push
fadd
cmp
test
jl
mov
xor
neg
xchg
xor
sbb
pushf
inc
or
mov
mov
in
roll
push
dec
add
pop
lcall
mov
ss
shr
in
dec
or
pop
mov
push
arpl
push
inc
mov
jecxz,pn
daa
inc
dec
mov
push
pop
mov
xor
cmpsl
jbe
adc
pop
mov
idivb
rclb
ds
repz
sbbl
add
sahf
inc
ljmp
lahf
sub
sahf
xchg
das
and
icebp
or
aaa
mov
sub
outsl
inc
aad
aam
rcrb
pop
adc
dec
outsb
inc
or
test
jns
mov
and
mov
xchg
std
pop
rol
test
dec
or
dec
icebp
es
mov
dec
into
pop
push
daa
loop
jge
pop
and
add
ret
or
fstl
stos
jl
outsb
outsb
push
mov
imul
xor
sahf
xor
jecxz
pop
lods
add
jge
inc
in
inc
addl
mov
mov
js
sarl
mov
mov
js
aad
inc
dec
cmpsl
insl
pop
mov
push
xor
clc
scas
xchg
cmp
stos
xor
sub
xchg
repz
push
mov
mov
xor
add
jns
call
push
out
scas
cmpl
jmp
mov
aas
xchg
ret
pushf
mov
cmp
dec
addr16
push
imul
xor
mov
shr
pop
test
iret
leave
inc
out
in
cmp
movsl
mov
lea
or
addr16
stos
xchg
lock
inc
out
xor
test
aas
iret
inc
xchg
cmp
iret
ds
sub
xor
push
add
pop
addr16
in
and
loope
inc
in
out
pop
fnsave
mov
icebp
adcb
test
mov
push
xor
outsb
sub
jb
das
addb
gs
sbbb
mov
shlb
pop
inc
mov
test
mov
imul
pop
repnz
sbb
mov
fisubs
mov
ficoml
leave
in
adc
mov
leave
test
cmpsb
add
leave
xor
jne
dec
cltd
pop
lret
push
mov
sub
aas
rorl
movl
jno
mov
pop
cmp
inc
jae
jo
sbb
pop
add
dec
stos
in
int
rcr
xlat
inc
jb
outsl
xchg
shlb
ret
shrb
ss
inc
adcl
movsl
roll
les
jb
mov
adc
std
mov
sub
jb
mov
lods
sub
push
pop
xchg
pop
xchg
lahf
dec
mov
or
lret
pop
jge
pusha
mov
out
repnz
xor
cmpsl
lahf
push
nop
xlat
sub
xchg
mov
add
inc
mov
mov
data16
rcrl
rcr
icebp
or
jne
push
pop
sbb
test
jne
stos
mov
xor
push
jns
ljmp
out
fnsave
cmp
and
xor
inc
cmp
sub
add
and
mov
jbe
pop
inc
popf
xlat
sbb
pop
filds
mov
dec
in
shrl
cmp
es
adcl
fdivs
dec
mov
leave
sbb
dec
cmpsb
test
xchg
jecxz
fbstp
inc
adc
cmc
xchg
mov
xor
dec
lds
mov
lods
shll
mov
lret
or
xchg
pop
int
sbb
jae
mov
lods
test
pop
push
add
ficoms
dec
mov
sub
in
shlb
cmp
bswap
imul
mov
mov
sub
add
mulb
mov
cmp
xchg
aas
xchg
mov
pushf
mov
mov
or
adc
imul
cmc
sarb
jge
jns
jns
adc
jo
mov
lcall
xor
push
jb
jb
cli
mov
lock
dec
xchg
sub
mov
dec
cmpl
jp
addr16
out
pop
daa
cmp
cmp
stos
inc
test
test
jp
sub
or
push
mov
lock
push
rolb
pushf
fbstp
or
aam
repz
xchg
push
stc
push
inc
aad
lds
inc
enter
xchg
idiv
pop
into
xchg
add
pop
pop
jno
adcb
add
pop
or
scas
pop
ret
xchg
jbe
inc
push
sub
xchg
outsb
add
sbb
fiadds
rcrb
and
and
xor
aam
inc
sbbl
fidivrl
push
pop
divb
mov
xchg
lahf
inc
test
lea
mov
jo
xor
ror
addb
icebp
jecxz
ljmp
lds
aad
sub
aas
jb
xchg
in
lds
jbe
loopne
andl
or
mov
mov
cmp
stc
jnp
xchg
lahf
sti
mov
add
sbb
rorb
push
inc
in
out
fmull
lret
sub
sbb
xlat
sti
mov
lcall
mov
lods
inc
ds
cmp
jnp
push
fs
push
and
sti
xorl
and
sbb
inc
mov
lcall
push
stos
in
cli
cmp
leave
pop
xor
adc
jecxz
push
dec
pop
lret
dec
and
cltd
sbb
cltd
loop
arpl
sub
in
shrl
popf
sub
lods
push
mov
mov
insb
sub
mov
stc
mov
xchg
dec
dec
adc
lods
dec
ret
cmpl
cwtl
imul
call
repnz
pop
dec
and
ljmp
mov
cmpsl
xchg
inc
or
fwait
inc
fists
dec
pop
aaa
and
mov
cmp
sbb
shll
cmp
mov
shrb
fcom
jl
add
imul
push
sub
dec
mov
lret
cmp
je
lods
loop
sub
fsubrs
shlb
jns
popa
mov
pop
xchg
push
mov
cmp
xchg
jo
cmp
mov
cvttps2pi
xchg
addr16
ds
mov
cmp
hlt
xchg
mov
pop
xchg
pusha
sarl
inc
fists
movsb
jl
imul
mov
cmpsb
mov
push
push
xor
icebp
sub
enter
mov
ret
cs
imul
fistpll
mov
scas
mov
aaa
lret
fwait
or
cmpsb
push
ret
sbb
test
mov
and
fisttps
popl
fxam
aad
nop
push
test
addr16
mov
jo
add
xorb
jno
lret
cmpsb
sbb
mov
test
sahf
std
xor
xchg
cwtl
shlb
sahf
sub
cld
sub
ss
sbb
add
mov
mov
pop
mov
jp
mov
jmp
sub
ja
cmp
sub
stos
lods
movsb
stos
push
divl
int3
add
mov
cwtl
add
lea
testb
cmp
pop
enter
sbb
or
dec
ljmp
sti
push
call
test
cmpsb
mov
inc
mov
add
ljmp
cmp
jo
es
mov
ljmp
add
out
in
int
pop
jmp
and
pop
dec
in
xchg
addr16
rorl
fmuls
cwtl
jle
add
mov
arpl
lret
mov
dec
lods
fcompl
mov
scas
push
and
add
adc
sti
push
aam
repnz
loop
divl
test
scas
jmp
dec
aam
into
sub
fwait
iret
pushf
je
jmp
mov
rorb
fwait
jb
mov
fs
cmp
sbb
add
inc
rorl
and
sbb
in
xchg
icebp
fisubrs
push
sbbl
scas
neg
or
lahf
call
incb
in
mov
cmp
or
iret
cltd
or
pop
insl
int
ficompl
int
inc
xchg
pop
jns
stos
imul
sbbl
mov
sarb
jmp
jb
mov
dec
imul
rclb
maskmovq
in
aaa
cmp
cmc
pop
in
bound
pop
lds
lret
inc
fdiv
dec
mov
pushf
in
cs
lcall
sbb
or
jno
mov
fstpl
xchg
dec
jne
outsb
imul
push
xchg
test
jns
mov
jge
out
mov
mov
arpl
pop
gs
subb
cmp
xchg
lcall
jge
pop
cmp
lds
add
mov
push
jnp
movb
fnstsw
xchg
test
out
mov
jns
test
lret
int
mov
jmp
in
mov
dec
dec
jnp
ret
cmp
xchg
xor
push
inc
xlat
xor
imull
mov
xchg
cltd
out
mov
lret
ljmp
stc
pop
jns
push
das
xchg
scas
jecxz
xor
pushf
rcl
mov
and
cmp
mov
adc
test
hlt
sbb
mov
mov
fucomi
or
mov
jne
adc
ret
inc
lcall
and
test
sbb
je
imul
cwtl
mov
mov
jecxz
loope
push
mov
xlat
insl
dec
ficompl
add
fcomi
roll
jb
xor
adc
arpl
jecxz
and
sub
movsl
mov
rorb
xchg
mov
cmp
sarb
sbb
loope
test
pop
cmp
add
in
push
mov
fs
stos
dec
div
int
daa
sub
jge
and
mov
rcr
insl
adc
mov
xchg
pop
fadds
scas
jbe,pn
orl
sub
inc
sbb
xchg
into
xor
xchg
add
in
insb
nop
mov
pop
notl
out
or
sbb
iret
mov
xlat
fisttpl
movsb
xchg
pop
sbb
push
rolb
lret
rclb
lcall
mov
push
clc
scas
or
fwait
aas
js
mov
jne
pushl
push
shr
leave
mov
adc
stos
sub
push
out
mov
cwtl
mov
adc
adc
mov
xor
inc
pop
sbb
int
arpl
xchg
jne
dec
mov
jecxz
sub
je
lds
and
test
out
push
aas
sbb
xor
out
adc
push
ss
cmp
jnp
fstl
lret
and
into
jnp
dec
scas
subb
cmp
imul
adc
in
cmp
jp
lcall
int
pop
sti
in
dec
scas
popl
int
add
xor
andl
and
shlb
sbb
add
fadd
xchg
sbb
adc
cld
jne
ss
inc
js
imul
pop
cmp
pop
lcall
xor
in
pushf
out
mov
inc
dec
fistl
sub
jmp
add
add
jmp
or
enter
in
les
leave
enter
or
movsb
sahf
sbb
int3
cli
test
add
dec
cmp
fbld
jle
jbe
jnp
inc
test
jl
inc
sbb
jl
pop
addr16
add
xor
jg
ja
out
sub
ss
enter
test
mov
mov
repnz
mov
out
push
ja
loope
xor
scas
jb
hlt
sbb
mov
mov
orb
ja
stos
add
movsl
hlt
repnz
mov
in
imul
mov
roll
inc
dec
inc
inc
icebp
inc
int3
jno
push
popa
mov
imul
cmp
sub
in
and
fnstenv
jb
cltd
out
stos
insl
mov
clc
jle
mov
popf
push
test
inc
mov
arpl
jge
inc
scas
jg
repnz
mov
mov
adc
push
stos
or
mov
pop
push
cmp
jl
pop
or
arpl
sahf
rcr
jge
fwait
lcall
iret
and
addr16
mov
adc
mov
rcrl
jmp
jo
pop
mov
lea
cld
xchg
outsb
inc
add
mov
or
xor
inc
push
movsl
sbb
sbb
mov
adc
mov
pop
pop
repnz
pop
cmp
fwait
mov
adc
sbb
pop
push
faddl
lods
andb
push
cmp
test
ljmp
test
fnstsw
shrb
add
pop
adc
adc
in
jne
lds
push
test
lret
jge
cmp
ljmp
es
lcall
lcall
xchg
xchg
data16
pusha
add
add
sbb
repnz
mov
mov
adc
cmc
andb
call
sti
lahf
pop
int
or
pop
mov
dec
jle
push
inc
jns
cld
int3
loopne
pop
sub
loop
test
out
test
mov
xchg
jl
pusha
dec
movaps
cmp
adc
pop
notb
rorb
arpl
cltd
xor
add
mov
push
cmp
inc
inc
xor
int
push
push
cwtl
and
rorl
fistpll
mov
mov
xchg
notl
push
pushf
sub
sbb
shr
add
pop
mov
or
scas
mov
jae
sbb
imul
into
dec
dec
lds
or
lret
nop
adc
adc
popf
dec
shl
xlat
mov
adc
popa
push
cmp
mov
ss
jg
sbb
clc
das
sub
pushf
mov
push
mov
mov
shlb
std
call
sub
lcall
stc
mov
inc
test
out
lds
sub
mov
rcrl
mov
pop
push
adc
cmp
mov
inc
shl
xor
jp
cwtl
adc
jmp
add
mov
jge
mov
nop
jnp
lods
sbb
inc
mov
int
pop
push
addr16
add
cltd
mov
lea
scas
mov
movsb
mov
xchg
andb
mov
rcrb
fdivrs
mov
lock
jbe
hlt
xchg
xlat
mov
lcallw
adc
adc
sbb
mov
dec
push
inc
push
aas
add
lahf
cld
outsl
stos
and
push
pop
push
ret
cmp
fistl
sbb
les
and
gs
sbb
lahf
pushf
mov
insl
cmp
mov
cltd
mov
popa
sbb
lret
repnz
mov
mov
xchg
das
fistl
jl
lods
fs
sub
mov
add
push
push
and
xchg
mov
aad
in
inc
out
lock
dec
jns
fcomip
faddp
inc
les
dec
or
mov
aam
xchg
inc
xchg
or
loope
enter
add
push
dec
adc
sbb
cmp
stos
pop
sub
outsl
pop
dec
hlt
rcr
dec
fisubs
hlt
xor
xor
outsl
pop
pop
in
test
jo
aas
xchg
lahf
clc
dec
setnp
cltd
lea
and
fcmovb
cmp
hlt
push
push
cmp
testl
aam
mov
sbb
repz
scas
imul
mov
pop
mov
sub
outsb
mov
pusha
jecxz
sub
aad
xchg
scas
jmp
push
dec
fdivrp
mov
push
test
lcall
add
jge
test
lods
adc
int
cwtl
mov
and
enter
add
and
inc
aas
cmpsl
pop
stc
ds
enter
dec
imull
call
ret
ret
outsb
lret
jmp
icebp
dec
jbe
sub
iret
xchg
xlat
mov
loopne
fdivrl
pop
push
leave
leave
cmpsb
mov
mov
mov
rorl
add
push
fidivrs
ja
or
jae
jns
xor
addl
mov
dec
leave
stc
add
adc
sub
jmp
fsubrp
xor
ret
adc
lahf
lret
add
sbb
jb
popf
outsb
cmp
cmp
fdivrl
add
loope
push
scas
or
movsb
xchg
fs
div
jmp
movsl
inc
ret
les
lret
movsb
mov
or
repz
in
scas
ficoml
js
in
shrb
shrl
ret
mov
pop
mov
fwait
iret
cmc
scas
and
adc
cmpsb
mov
cmpsb
pop
jl
jle
cmpsl
mov
mov
aas
aam
and
xchg
stc
repnz
xor
push
mov
push
inc
mov
or
fsts
lret
mov
imull
sti
mov
xor
dec
fsubrs
repz
repz
das
lods
test
xor
mov
sbb
mov
push
mov
sbb
bound
xor
cmpsl
and
icebp
cli
mov
xchg
ss
cmc
jns
mov
movsb
outsb
imul
fisubrs
out
lret
out
dec
clc
cltd
in
sub
dec
add
dec
test
lret
and
test
push
and
cmp
inc
dec
pusha
test
in
packsswb
nop
mov
shr
fidivs
fs
jo
mov
or
push
adc
ja
in
push
out
cmp
pop
cmp
sub
push
pop
out
daa
sub
mov
cld
xor
fsubrs
sub
and
sbb
push
scas
and
das
cli
mov
es
jp
pop
inc
mov
test
dec
loope
idivl
dec
je
fiadds
outsl
xorl
xchg
xor
pushf
das
inc
inc
adc
mov
push
jl
pop
stos
out
mov
popf
scas
loope
and
pop
mov
cltd
iret
jo
push
or
sub
mov
sbb
gs
mov
in
jle
mov
stos
or
xchg
fildl
mov
mov
mov
push
hlt
lds
and
adcb
dec
insb
jg
mov
inc
fidivrl
std
mov
mov
sti
inc
mov
cld
mov
push
in
orb
out
out
repnz
xor
or
stc
test
imul
or
ljmp
popa
mov
nop
popf
fists
popa
or
pop
xor
cmc
sarl
push
push
mov
cmpsl
xor
or
clc
fwait
dec
lret
dec
clc
dec
adc
adc
insl
fcmovbe
shlb
and
popa
jmp
mov
insb
les
hlt
dec
cmp
xchg
jo
xchg
loop
pop
pop
push
xchg
imul
out
hlt
iret
and
push
ret
lds
outsl
sub
cmp
divb
int3
leave
ds
xchg
push
mov
daa
mov
cmp
mov
mov
fdivp
push
jp
aad
out
jb
leave
out
daa
cwtl
mov
pop
imul
cltd
in
aam
xchg
mov
push
push
xchg
leave
cs
int3
mov
sub
hlt
mov
mov
mov
out
leave
fcompl
fiadds
mov
push
cmp
dec
or
iret
jp
jp
cwtl
dec
cmc
iret
mov
cmp
lea
mov
in
in
dec
or
cs
push
gs
pop
out
iret
mov
pop
pop
mov
mov
mov
sbb
xchg
jne
in
nop
shl
push
mov
out
std
or
cmp
fstpt
hlt
cmp
mov
jns
add
mov
xchg
sbb
mov
js
sub
xor
sub
adc
enter
addr16
ss
mov
or
outsl
add
scas
jnp
roll
inc
dec
mov
or
sbbl
imul
pusha
lret
lea
rclb
xor
outsl
and
lret
jbe
add
push
les
aam
out
pop
icebp
out
inc
inc
loope
or
aaa
mov
dec
push
lret
daa
adc
cmp
in
pop
out
in
mov
in
pushf
in
fcompl
mov
push
sbbl
sti
push
xchg
fdivs
fs
jae
cmp
clc
and
dec
int
dec
cmp
push
jge
das
cmpsl
mov
cld
push
insl
and
xchg
push
call
pop
imul
jnp
adcl
fwait
sbb
shrl
fistpll
adc
mov
dec
adc
inc
fs
shll
mov
and
adc
bound
cmp
cmp
enter
jo
pop
xchg
sbb
in
mov
pop
xor
mov
ret
out
popa
mov
test
mov
sub
pop
xchg
fbstp
lock
leave
mov
outsl
and
lods
pushf
add
js
lods
adc
ss
stc
mov
sbb
mov
cmpsb
nop
sub
mov
fwait
mov
pop
xor
push
push
mov
sbb
jne
cld
test
cmp
xchg
inc
in
add
pop
add
cli
sbb
cmp
cmp
ds
psubw
popa
shr
addr16
cmp
adc
cltd
cmp
hlt
iret
daa
mov
insl
adc
jge
jge
add
adc
fmulp
cmp
pop
daa
ds
daa
add
push
lods
pushf
loopne
mov
clc
push
fiadds
xlat
mov
enter
mov
imul
adc
inc
sub
pushf
fcompl
sbb
mov
mov
cmp
sub
cmp
dec
in
mov
shl
fwait
cwtl
aam
sub
fimuls
jne
pop
outsb
sbb
dec
cmp
pop
ljmp
inc
mov
dec
xchg
cld
push
in
fxch
icebp
repnz
pushf
rcll
fwait
insb
jg
sbb
cmp
mov
mov
sub
xlat
xchg
push
xchg
jmp
push
jne
add
push
test
fisttps
in
mov
xchg
pushf
aaa
mov
fimuls
push
lea
iret
stos
in
lcall
push
out
sub
push
jmp
adc
pushf
dec
subb
ds
idivb
fsubr
cmp
in
xor
cmp
aaa
jmp
mov
mov
xor
lea
mov
lea
xchg
dec
les
inc
xor
inc
inc
jne
mov
lcall
in
sbb
jns
mov
fimuls
or
add
psrad
add
inc
and
push
adc
mov
jmp
aas
iret
jg
mov
cmp
outsl
aaa
inc
mov
push
mov
stos
out
lcall
jmp
mov
jmp
jmp
clc
and
or
ret
stc
mov
jge
out
sbb
ss
loope
fimull
out
ljmp
pop
aas
insb
outsl
arpl
bswap
scas
icebp
pop
jne
jns
xchg
add
fnstcw
popa
xor
jle
js
icebp
xor
xor
jno
es
sub
xchg
dec
ret
sub
push
cld
in
inc
xchg
icebp
je
movsl
adc
xor
jae
add
cli
pop
xor
push
stc
push
and
mov
mov
imul
or
rcrb
jp
aas
dec
jmp
into
add
std
xchg
roll
mov
inc
xchg
xchg
sbb
xor
inc
testb
popf
lock
sub
imul
inc
scas
out
inc
popa
sub
inc
pop
or
jmp
fdivrl
mov
arpl
mov
mov
test
leave
gs
jmp
cs
sbb
xor
or
lret
test
jmp
add
mov
sbb
test
push
pop
jb
stc
inc
rclb
cmp
sahf
pop
call
sbb
leave
dec
jo
mov
cwtl
scas
dec
fdiv
cmp
int3
inc
jns
cmp
outsb
in
mov
pop
push
push
inc
sbbb
ret
mov
pop
cmpsb
aam
push
mov
xchg
lods
jnp
test
pop
inc
xlat
es
and
mov
cmpsl
cltd
stos
xlat
sub
jns
enter
dec
jge
xchg
subl
push
adc
inc
mov
pushf
jns
iret
icebp
imulb
adc
imul
loop
sub
sub
pusha
inc
adc
stos
outsb
xor
xchg
hlt
sbb
sbb
xchg
mov
lret
add
ds
in
ret
mov
push
push
test
jnp
mov
xor
mov
adc
or
mov
sub
cmp
mov
cmp
and
xor
fstpt
fcomi
arpl
jl
mov
loopne
scas
paddusb
inc
mov
pushf
in
cmc
inc
daa
ror
aas
pop
or
inc
and
xchg
sbb
popa
sub
cmp
xchg
cmp
cltd
adc
xchg
mov
popf
imul
push
push
xchg
adc
mov
sbb
mov
aas
es
jl
outsb
jle
lock
xor
insb
push
cmp
xlat
pop
aad
xlat
dec
adc
xchg
ss
fwait
sub
mov
cmc
mov
and
cmp
mov
jmp
pop
call
mov
adc
inc
stos
in
mov
repz
and
cli
and
xor
or
pop
rcll
inc
or
cmpb
mov
lcall
add
lahf
mov
cmp
mov
or
push
pop
xchg
sahf
inc
movsb
cmp
dec
lret
pop
push
mov
adc
fdivl
jo
out
push
mov
pop
repnz
mov
pop
out
or
test
das
jmp
pop
inc
jne
test
loopne
insl
xor
fcomps
inc
testl
movsl
cmp
imull
das
pop
fstps
sarl
ss
ret
mov
orb
subl
mov
idivb
add
cli
jl
or
adc
add
mov
rcr
sub
fdivrs
xor
flds
movsl
add
stos
push
aam
dec
adc
push
gs
rorl
jns
loop
mov
hlt
mov
push
int3
fs
xchg
ret
hlt
or
std
aam
inc
pop
xchg
pop
inc
adc
push
lods
mov
xchg
loope
movsb
rcl
xchg
test
insb
inc
xchg
jbe
popf
les
mov
mov
or
sub
inc
sbb
idivl
call
jno
cwtl
movsl
stos
dec
rcrb
and
sbb
sub
xlat
jae
sbb
jp
xchg
aas
or
jbe
rcrb
adc
push
cmp
stos
push
ret
fcoml
lret
inc
dec
jecxz
popa
sub
pop
push
add
shll
adc
inc
mov
cmpsl
mov
into
popa
push
test
mov
mov
add
lcall
xor
mov
xlat
push
and
dec
fwait
cmp
adc
push
cmpsb
jbe
pop
xchg
pop
jmp
cwtl
cmp
in
xor
jp
jno
lret
pop
icebp
rcll
push
cmp
je
adc
dec
mov
leave
dec
push
jnp
jo
rorb
push
ret
dec
das
sbb
push
sub
cmp
rcrb
psrad
fmull
cmp
or
jl
gs
les
aam
mov
imul
adc
jle
adc
push
push
or
fsubp
fstl
pop
xchg
xchg
dec
adc
push
out
out
mov
add
mov
dec
cmp
fs
cmp
out
pop
push
jne
insb
inc
subl
out
inc
sarl
jne
and
call
mov
and
loop
pop
sub
xchg
sti
sbb
test
dec
icebp
adc
mov
aad
push
scas
enter
sub
sbb
sub
dec
pop
pushf
lcall
jae
or
dec
cmp
test
mov
stc
pop
lock
movsb
bound
pushf
stos
jne
test
cmc
xchg
clc
jae
insl
cli
xor
dec
cmp
test
lahf
mov
jg
in
xor
add
add
xchg
sarl
aad
cmpsl
xor
clc
ret
sbb
imul
cmp
out
stos
cli
xor
fcmovne
sbb
jg
in
push
cltd
inc
fwait
fsts
xor
mov
mov
push
and
imul
jmp
dec
jbe
push
jmp
mov
xor
fsubrs
xchg
xor
xor
fsubrl
mov
mull
out
or
sbb
sub
sub
push
jp
int3
rcrl
arpl
cltd
ss
imul
mov
xlat
lret
das
cmp
fdivp
and
fstl
cld
and
inc
stos
fidivl
mov
cmp
xchg
or
fisubs
stos
lret
int3
mov
cmp
dec
movsb
add
gs
sub
cmp
pushf
xchg
arpl
mov
fisubl
pushf
ret
jl
sarb
in
add
mov
pop
lea
cld
inc
fisttpll
cmpl
dec
xchg
mov
call
push
cltd
movsb
xor
jne
sub
mov
cld
mov
roll
leave
hlt
lcall
jle
out
xchg
leave
pusha
bound
aam
push
arpl
cwtl
or
cmp
out
push
int3
ljmp
cmp
adc
sahf
andb
fwait
mov
push
jbe
out
into
movsl
jne
fimull
push
push
sbb
outsb
jmp
ds
and
sbb
int3
push
div
dec
fcomps
adc
popa
mov
mov
inc
aad
outsb
xor
dec
sbb
shll
and
ljmp
sbb
clc
test
mulb
xchg
fwait
xchg
mov
xlat
test
cmp
test
insb
cld
arpl
jo
xchg
out
leave
stc
iret
rcrl
subb
in
xchg
jbe
loop
leave
add
std
repnz
imul
rcrb
stos
fst
cmp
and
addr16
aam
nop
jns
jne
das
iret
pop
das
sbb
or
xchg
addr16
add
icebp
sbb
jnp
dec
mov
and
repnz
std
pop
or
daa
daa
or
mov
rcrb
jmp
and
pushf
xchg
int3
outsb
mov
fldt
jle
cwtl
push
sub
movsl
fisttps
sbb
lahf
xor
shl
xor
and
cmp
xchg
pop
je
xchg
jp
mov
sbb
jae
jmp
cwtl
stos
out
repz
loope
add
ss
fs
sahf
mov
pop
sbb
int
sbb
cmpb
pushf
stos
call
dec
sbb
lods
js
test
icebp
and
jecxz
or
sbb
mov
cmc
mov
lea
and
mov
mov
je
ljmp
push
fbstp
jno
cmp
std
sub
cmp
jno
mov
inc
mov
jl
pop
xchg
into
or
jns
or
sbb
pop
mov
push
mov
xor
xabort
inc
stos
xchg
ljmp
gs
mov
cwtl
sub
nop
outsb
push
xchg
ret
cld
inc
repnz
ret
adc
mov
cmpsb
adc
mov
pop
adc
and
data16
cmp
push
adc
adc
test
push
and
sbbb
shrl
jge
int
pop
mov
cltd
call
push
mov
mov
test
insb
movsb
je
xchg
lock
daa
dec
jg
xor
push
or
loop
icebp
sbb
jge
inc
in
ffreep
jp
sti
xchg
xchg
dec
aam
pop
daa
mov
cmp
insl
pusha
ja
xchg
rol
adc
dec
rorl
cmp
push
mov
and
dec
les
lret
pop
jmp
dec
xchg
dec
xor
or
shlb
push
nop
pop
es
addr16
pop
daa
mov
add
std
pop
arpl
loope
adc
adc
sbbl
mov
push
adc
mov
mov
sbb
sahf
fdivs
rcr
movl
mov
daa
adc
mov
xchg
mov
push
mov
in
out
iret
pop
clc
jle
push
test
add
insl
jg
mov
nop
cli
xchg
jae
addr16
mov
cmp
daa
out
in
push
jmp
jg
iret
idiv
mov
xabort
mov
add
divb
repnz
lahf
imulb
dec
lret
pop
popa
push
jmp
push
or
imul
je
cmp
pop
out
sarb
leave
call
lret
outsl
int
mov
repz
fwait
push
ret
mov
lea
shlb
loope
mov
mov
pop
lods
fstl
imul
leave
ret
and
pop
add
cmp
int3
inc
call
gs
scas
jbe
fwait
mov
neg
js
insb
mov
aas
dec
mov
insl
push
mov
fdivrl
jb
fnstenv
ret
jp
stos
fildll
clc
sbb
inc
mov
fldenv
xlat
fstp
jae
cmpsl
mov
sub
js
in
call
push
pusha
andb
movsl
lcall
arpl
cmpsl
mov
mov
repnz
lods
adc
mov
ds
imul
mov
sub
clc
inc
dec
popa
mov
sti
outsw
pop
ds
sub
popa
adc
xor
xchg
lock
ljmp
lods
scas
push
pusha
jl
dec
lret
enter
xor
dec
mov
mov
subb
test
nop
test
inc
sbbb
testl
cld
add
lods
mov
xchg
mov
add
dec
and
ret
movsb
out
test
pushf
push
mov
dec
jg
adc
xchg
adc
cmp
out
pop
insb
dec
aad
mov
mov
in
sbb
in
int3
or
scas
pusha
jecxz
xchg
mov
adc
xor
pop
addr16
mov
xlat
mov
aas
les
rcl
mov
add
fwait
subl
mov
or
je
les
sbb
incb
push
lret
imul
int3
cwtl
ret
sbb
ss
lock
pop
test
jecxz
mov
fstps
push
sub
xor
stc
and
lea
push
push
cs
mov
inc
imulb
pop
aam
es
shl
fdivs
imul
movsb
repnz
ss
out
fadd
xchg
pushf
add
outsl
stc
scas
jp
or
out
cmp
out
xchg
movsl
add
lods
push
inc
jb
imul
or
mov
inc
add
sti
dec
dec
add
xchg
push
push
stos
popf
xorl
out
add
jge
mov
mov
mov
test
cltd
push
add
lods
ljmp
mov
out
jbe
jmp
inc
mov
xchg
ss
movl
cwtl
in
rorl
popa
push
mov
lea
add
push
push
mov
imul
mov
test
movl
sub
rolb
xchg
inc
or
pop
jecxz
sub
pop
adc
sarl
movsb
andl
das
dec
xchg
bsf
mov
sahf
xor
lds
in
shl
mov
mov
sub
imul
inc
jecxz
and
lods
pop
int
jecxz
cltd
mov
jle
fs
cmp
xor
xlat
pushf
mov
mov
sub
xchg
dec
jo
cmpsl
outsl
testb
jle
mov
cmpsl
iret
push
shll
je
stc
sub
adc
aaa
mov
and
or
or
mov
sub
in
inc
mov
sub
add
mov
sahf
fsubrp
jle
mov
call
fucomp
inc
xchg
aas
lods
push
jmp
jp
push
nop
pop
xchg
mov
xchg
add
movsb
sub
cmp
mov
das
fisubs
loop
outsb
mov
cs
testl
mov
int
push
aam
paddb
rcrl
adcl
movsb
xchg
xchg
ja
xchg
aas
movsl
loop
out
fs
xor
cli
jno
pop
xchg
loopne
and
mov
mov
mov
and
pop
lret
cmp
add
fsubl
push
jns
mov
mov
stc
fwait
xor
inc
clc
pusha
cmp
jo
pop
xchg
cmp
add
fadds
movsb
and
sbb
mov
in
imull
dec
xor
push
es
outsb
shrl
div
pop
lret
stos
mov
mov
paddw
andl
pop
lds
dec
mov
adc
inc
and
ja
pop
test
and
movsl
lods
sar
mov
out
out
sti
cli
stos
jne
stc
ja
xor
icebp
mov
mov
cmp
in
dec
lret
hlt
add
filds
sbb
cld
arpl
rcll
fdivrs
jo
sub
fstps
push
adc
dec
hlt
pop
rorb
mov
lods
pushf
and
or
repz
jg
inc
stc
insb
push
adc
add
mov
dec
cs
lret
sub
xchg
add
sbb
out
and
out
push
ret
push
or
pop
lret
xor
cli
in
jp
addr16
jne
es
jl
addr16
jns
pushf
fistpll
ljmp
dec
pop
imul
shll
dec
push
cmp
adc
inc
icebp
sbb
adc
dec
mov
mov
cmpsb
sbb
adc
iret
add
mov
adc
bound
mul
and
lea
fld
jg
in
shlb
cmc
pop
pop
adc
pop
imul
mov
xor
sub
fidivs
sbb
cmc
mov
xchg
scas
sub
test
ja
mov
insb
nop
ss
push
jno
push
dec
dec
push
repnz
mov
jnp
test
inc
loopne
cmpsl
int3
sub
ljmp
adc
jae
bnd
cmpsb
inc
dec
daa
push
into
xchg
jo
add
fcomps
enter
lret
jmp
cmp
pop
sbb
ret
sbb
mov
sub
out
ja
or
fmull
into
imul
xchg
daa
scas
ss
ret
add
adc
shr
je
mov
stos
sahf
inc
subb
jb
test
push
stos
sarl
cli
paddusb
andb
and
mov
adc
pop
stos
jl
imul
sub
xchg
aas
std
insl
leave
dec
aad
sbb
shl
lret
cmp
pop
stos
bnd
daa
jmp
cli
sub
cltd
ret
dec
cs
or
xchg
mov
lds
jmp
mov
das
cmp
push
xor
sbb
xchg
add
movsb
stos
dec
ret
pusha
pop
pop
fidivs
mov
jbe
push
dec
enter
or
insb
jb
pop
mov
fs
subb
adc
dec
jne
aam
stc
pop
pop
xchg
out
jb
insl
mov
push
sbb
xchg
cmc
fsts
inc
bound
fcom
jae
cmp
test
jo
cmpsl
cmp
rolb
in
sbb
pop
xchg
hlt
sbb
imul
ja
insb
push
orl
pop
data16
movsb
adc
xorb
movsb
loop
push
mov
leave
mov
rolb
ss
inc
sbb
xchg
and
hlt
les
cmp
cltd
fsubrl
sub
mov
outsb
addr16
push
scas
push
mov
lcall
inc
adc
mov
xor
xchg
scas
popf
jo
add
and
mulb
jle
arpl
loopne
xchg
addr16
arpl
ljmp
test
mov
jbe
ss
push
xor
inc
pop
imul
inc
leave
outsb
cmp
cmp
bound
out
movl
test
push
das
push
sub
cmp
mov
add
xor
and
js
dec
call
sub
mov
add
xchg
in
jno
cmp
push
aas
pop
add
aam
frstor
sarb
das
repnz
mov
call
sub
xchg
pop
lds
testb
cld
jo
das
popa
icebp
pop
cwtl
xchg
jne
and
xor
mov
leave
rorb
in
es
pushl
mov
cli
mov
int
cmp
neg
js
decl
mov
fdivs
mov
dec
xor
push
pusha
sbb
cltd
push
ja
mov
hlt
or
div
loopne
loop
leave
popa
clc
dec
and
imul
push
out
popf
jo
out
popa
jmp
push
std
insb
sub
push
mov
sbb
test
repz
add
imul
shrb
test
push
das
mov
pop
rorw
pop
or
lds
mov
jl
insb
ret
dec
pop
push
dec
stos
lods
adc
pop
jmp
jno
sbb
dec
xor
mov
cmp
stos
ljmp
mov
dec
in
cmp
pop
cmc
es
mov
addr16
test
cld
sub
incb
cltd
dec
add
and
testl
mov
popa
ja
jle
mov
fdivl
jmp
addl
jmp
xor
std
xchg
or
addr16
sub
lahf
inc
pop
xchg
pop
fdivrs
xor
jle
lcall
or
pushf
xor
iret
cli
pop
pop
pusha
and
mov
jbe
cwtl
sub
lahf
mov
mov
in
ss
mov
push
mov
or
jbe
xchg
push
lock
push
scas
mov
pop
mov
mov
dec
sti
xor
sbb
out
test
call
mov
loop
aas
adc
or
mov
data16
cmpsb
jo
das
pop
test
aaa
lret
xor
xchg
icebp
push
push
add
leave
scas
shlb
dec
sbb
mov
and
mov
add
ja
scas
push
cli
test
xchg
inc
or
subb
fsts
cwtl
iret
push
pusha
push
jo
mov
xlat
sub
stos
xchg
jg
cwtl
lds
mov
clc
adc
sub
dec
add
fs
or
out
mov
push
bnd
mov
mov
pop
pop
and
into
xchg
pop
push
ret
fildll
xchg
out
lcall
decl
sub
cmpsb
xchg
movsl
aad
mov
ja
sbb
fidivrs
jmp
and
rcrb
movsb
inc
stos
adc
jge
mov
and
pusha
sahf
xlat
xchg
icebp
jg
arpl
and
mov
push
add
lret
inc
test
xchg
out
or
push
jg
in
fmuls
inc
out
mov
imul
jmp
mov
pop
pop
xor
loop
cld
pop
ret
sub
out
cmp
jmp
insl
in
adc
jp
push
jg
xchg
jg
aas
ss
cmp
inc
mov
and
testb
xchg
jle
leave
in
and
inc
push
arpl
out
out
aas
jge
arpl
xchg
jb
jg
xlat
pop
add
neg
sub
imul
out
push
insb
nop
fs
out
or
xchg
mov
jp
ss
push
pop
outsb
dec
loop
std
pop
insb
fistps
scas
in
inc
mov
cmc
out
test
sbb
push
adc
ja
leave
pop
push
aaa
test
lahf
push
adc
adc
fwait
cmp
outsl
std
lcall
movsb
shl
mov
std
cwtl
mov
pushf
mov
mov
inc
lods
push
leave
je
push
mov
lret
push
mov
cmc
cltd
xor
lock
popw
adc
movsl
cs
sub
insb
xchg
sbb
lret
mov
xor
mov
pop
daa
outsl
icebp
jbe
jae
jne
aam
aas
pop
ljmp
sub
imul
jo
push
mov
mov
xchg
jg
iret
movsb
sub
add
lret
xchg
ja
jl
sarb
fbstp
xor
les
pop
cmp
and
leave
jp
lods
cmp
sbb
adc
and
pop
cli
jne
repz
int
cwtl
test
pop
rorl
xlat
stos
lret
std
xorb
into
xlat
ss
mov
test
ds
mov
stos
out
dec
outsb
pop
xchg
adc
cmp
pop
mov
mov
push
xchg
bnd
data16
shll
arpl
add
addr16
xchg
lods
sbb
jnp
pop
ss
pusha
mov
lahf
loope
mov
out
ja
xor
xchg
sti
lret
adc
sbb
ss
out
scas
xor
pop
add
xchg
cmpsb
testb
jbe
jnp
test
adc
mov
jmp
or
sub
inc
ja
stos
mov
push
enter
mov
loop
addb
push
les
and
in
push
add
dec
std
imul
pusha
sbb
icebp
add
and
je
inc
sub
sub
sub
repz
fidivs
pusha
loop
lahf
loopne
js
loopne
rcll
inc
cmp
pmullw
in
imul
inc
push
fwait
xchg
xchg
test
in
sahf
add
mov
adc
cs
jmp
test
push
cmp
inc
mov
mov
ror
dec
mov
inc
inc
out
sahf
mov
sahf
mov
sbb
clc
xchg
pusha
xlat
and
push
jae
lods
in
test
fprem1
les
shl
push
add
dec
sub
divb
dec
movsb
push
sbb
fs
out
mov
mov
pop
dec
cs
sbb
add
or
rolb
mov
les
adc
mov
dec
jg
sub
arpl
and
jno
mov
dec
inc
hlt
stos
int
jns
and
or
cmp
jle
jno
push
loop
cmp
sub
inc
out
incb
dec
nop
push
fabs
jae
jp
and
sbb
jo
mov
in
jmp
sub
jle
dec
rcll
test
popa
movsl
push
ret
mov
adc
adcb
xor
push
shr
cmp
ret
daa
pop
push
int3
dec
xor
cmpsb
fsubrl
imul
xchg
int3
dec
test
mov
jl
mov
js
mov
movl
aam
mov
inc
inc
jb
ficomps
push
in
jge
mov
out
sub
divb
jmp
or
mov
mov
jge
and
cmp
test
mov
or
nop
or
int
sub
push
gs
lret
xchg
mov
mov
and
lock
fwait
fidivl
negl
test
sbb
andb
mov
pusha
push
or
lret
data16
and
jmp
ffree
sbb
push
and
ja
cli
inc
mov
inc
mov
out
push
mov
ret
stc
xchg
popw
stos
add
pushf
mov
in
int
scas
popa
loop
mov
sbb
paddsw
mov
mov
aad
ret
mov
test
dec
inc
push
or
shrb
adc
cmc
nop
mov
mov
jl
jle
adc
test
rclb
inc
lret
mov
xchg
sub
fmuls
cli
arpl
fmull
adc
mov
loopne
call
xchg
aad
pavgw
js,pn
in
sbb
enter
mov
stos
sbb
sbb
fs
test
add
push
adcb
shrl
mov
xor
mov
and
call
sub
pop
mov
or
cmp
mov
or
adc
xchg
lea
mov
jl
adc
insb
pop
and
mov
sub
rorb
call
push
mov
int
or
test
jge
xor
pop
call
mov
repz
xor
scas
iret
sub
gs
dec
ds
jecxz
lock
fsub
pushf
or
outsb
xor
add
push
jno
iret
add
gs
fcmovb
jne
stos
cli
fbstp
jge
imul
loopne
or
push
mov
fs
or
ret
mov
inc
xor
jae
dec
push
xchg
std
mov
add
jne
repz
js
leave
imul
movsl
xchg
jp
addr16
inc
or
push
cmp
push
mov
dec
adc
push
add
ljmp
ds
mov
out
in
cmp
xorb
pop
in
mov
inc
adc
fidivs
pop
call
adcb
mov
lret
mov
mov
jmp
inc
inc
sub
ret
shrl
loope
ja
dec
jb
inc
outsb
test
mov
pop
dec
scas
pusha
lea
daa
dec
jb
in
or
dec
outsl
hlt
mov
imul
cmp
insl
jecxz
sub
dec
imull
or
dec
and
mov
inc
sbb
fcoms
testb
jle
sahf
aam
mov
and
cld
or
in
sub
mov
rcl
fsubs
xor
sub
aam
adc
pop
rcl
inc
lahf
test
pop
mov
ds
leave
test
jne
dec
or
mov
pop
mov
pop
mov
aam
lret
lods
loopne
cwtl
xor
pop
addr16
or
repnz
xchg
aaa
sub
cmp
lcall
dec
sbb
enter
and
stos
int
clc
and
mov
loopne
out
imul
movsl
js
lock
mov
mov
xchg
mov
pop
jne
push
ret
shrl
sbb
mov
imul
push
dec
into
mov
je
pop
je
ds
repz
inc
pop
movsl
jnp
testb
push
pop
daa
inc
lock
leave
push
adc
dec
insb
fistpll
push
jo
xchg
stos
xchg
jecxz
sbb
call
jle
adc
test
je
sub
and
dec
mov
xchg
mov
in
dec
iret
in
mov
popa
insb
pop
xor
scas
adc
push
into
jns
xor
sahf
xor
cwtl
pop
mov
imul
mov
push
cltd
pop
je
sbbb
stc
cmp
xchg
fnstsw
sub
arpl
mov
push
dec
lcall
pushf
fwait
xor
push
std
and
lret
and
mov
cmp
sbb
mov
cmp
stos
push
mov
movsb
les
mov
mov
fldenv
fdiv
xchg
jnp
outsb
mov
mov
addl
mov
jl
fsub
jmp
data16
jmp
cmpb
test
pop
clc
xor
sar
mov
sub
cmpsl
push
aas
or
and
out
add
enter
cmpsl
loopne
fcompl
cwtl
aad
shlb
add
rorl
mov
xlat
arpl
jmp
mov
scas
loop
mov
sub
test
jne
in
outsb
and
insb
sub
inc
or
int3
mov
mov
adc
out
or
sbb
sub
adc
jmp
and
stos
mov
adc
inc
stos
repnz
pop
into
aas
push
cmp
and
dec
mov
ss
cmp
and
clc
mov
jnp
mov
adc
and
pusha
rcll
mov
xlat
inc
inc
jbe
loopne
scas
insb
fildl
xor
mov
mov
jl
js
sub
sbb
jnp
lds
pop
fwait
iret
mov
cmp
loopne
cltd
pop
mov
add
pop
cs
jmp
fildll
inc
push
insb
negl
jp
mov
sahf
dec
ljmp
xchg
loopne
in
scas
repz
loop
and
shlb
pushf
or
cmp
inc
or
sub
adc
sub
pop
xlat
cwtl
pop
push
cmp
mov
sbb
cli
bound
mov
std
rcrl
fcmovnu
je
clc
mov
jne
push
inc
and
daa
movb
pop
jns
mov
push
jle
in
mov
aad
or
js
lahf
fdivs
push
test
cmp
sub
dec
dec
insb
mov
xchg
xlat
xor
test
xchg
mov
dec
xlat
outsb
push
jbe
pusha
cmp
test
or
sbb
xchg
adc
mov
int
pop
ja
fdivl
cmp
push
ljmp
subb
jno
popf
inc
xchg
mov
dec
inc
sahf
jo
fdivs
arpl
mov
imul
int
or
inc
fs
frstor
jecxz
adc
lahf
sub
aad
bound
mov
sarb
dec
movsb
lock
jecxz
es
repz
cli
cli
dec
mov
cmp
mov
xchg
jnp
out
sub
in
aam
in
sub
push
jmp
dec
lods
scas
cli
popf
xchg
iret
rcrl
mov
push
ljmp
pop
adc
mov
loope
repnz
into
sti
cltd
negl
and
jl
in
repnz
jnp
jg
push
sub
xchg
lods
jae
into
adcb
daa
addl
popf
add
stc
dec
and
pop
sub
enter
imul
call
mov
and
cmp
fdivs
cmp
push
jbe
inc
push
sbb
nop
sub
leave
xchg
mov
mov
leave
add
jne
push
push
or
pop
jmp
rcrb
insb
rolb
movl
sbb
dec
lcall
cltd
lea
aam
cmc
test
and
insb
dec
mov
ds
sbb
out
shl
jecxz
jbe
call
dec
jle
pcmpgtb
test
jge
mov
jae
sub
gs
xchg
push
or
push
fldenv
xlat
movsb
cmp
cmp
cli
adc
sbb
dec
ret
aad
addr16
push
sbb
mov
fisubs
adc
decb
jo
ss
bound
jl
sbbl
das
adc
movsl
sub
inc
and
mov
lods
dec
or
cld
pop
add
in
call
mov
dec
push
adc
add
or
lods
dec
ss
pop
fadds
stos
insb
mov
jge
or
jg
js
sbb
cld
inc
into
in
fcmovnb
cltd
mov
push
mov
sbb
push
sbb
mov
pop
add
mov
xchg
call
sub
sub
repz
ja
call
jnp
aam
jmp
daa
aad
mov
add
fbld
cs
xchg
sub
pop
and
insb
mov
mov
add
gs
mov
sahf
and
imul
sarl
stos
shl
xchg
jle
call
roll
add
lock
jns
rorb
call
mov
fs
inc
dec
jecxz
in
pushf
adc
add
outsb
cmc
adc
roll
fists
push
enter
lcall
mov
mov
je
mov
js
push
jl
das
dec
push
fwait
lret
push
cwtl
inc
mov
pop
xchg
rcl
fs
inc
lcall
and
sar
cmc
mov
scas
outsl
push
out
rorl
lds
dec
ret
xchg
fstpl
mov
icebp
pop
pushl
ljmp
scas
outsl
mov
mov
test
xor
fwait
dec
dec
xor
cmpsl
das
adc
jl
sub
mov
cmp
repnz
jmp
mov
pop
scas
mov
mov
lcall
fisttpll
insl
jno
lret
ficompl
test
mov
adc
sub
mov
xchg
add
push
mov
pop
sbb
and
and
loope
dec
cmpsl
rcrb
arpl
addr16
xchg
movsl
pusha
arpl
and
test
jecxz
repnz
lods
sub
das
lods
aas
into
fmuls
push
scas
rcrl
loop
add
push
or
dec
mov
sbb
shrd
mov
shll
fwait
movsb
jle
or
dec
shrb
sahf
sbb
mov
aaa
push
ss
xchg
sbb
loop
or
sbb
outsb
stos
add
out
xchg
add
or
push
mov
and
test
or
test
cmc
rcrl
mov
cmc
xor
stos
adc
pop
je
je
ret
inc
mov
iret
into
xchg
cwtl
sahf
je
jmp
jns,pt
fisttpll
xchg
push
mov
xor
jmp
ja
ss
mov
push
sub
sahf
add
in
outsl
popf
adc
push
or
fistps
dec
cs
imul
cs
inc
cli
jp
xchg
mov
ror
adc
sub
movb
jge
adc
in
arpl
jmp
nop
add
shr
push
inc
jp
es
shrl
shll
mov
push
loope
mov
stc
bound
dec
cltd
pushf
mov
test
fistpl
inc
lods
insl
inc
push
mov
pop
cwtl
xor
nop
or
rcrl
lock
cli
mov
inc
rclb
add
mov
cmp
repnz
or
scas
test
cmp
js
cli
stos
mov
enter
outsl
mov
or
mov
leave
xchg
inc
nop
jmp
mov
into
sahf
fwait
cs
and
mov
ret
cmpsl
push
stc
dec
cmpsl
ds
xchg
movsl
mov
inc
out
adc
cmp
dec
stos
fwait
aam
fdivrp
mov
lret
mov
mull
adc
stc
clc
lods
cs
pushf
mov
fs
sub
imul
and
mov
push
push
push
int3
out
aaa
jno
lcall
in
push
adc
mov
mov
icebp
cli
pop
push
sbb
cmp
inc
or
pusha
cmp
dec
in
adc
in
pushf
in
add
lds
lahf
bound
dec
stos
loope
gs
inc
stc
mov
pop
adc
aaa
imul
test
and
lods
loop
xchg
jl
sbb
ret
lret
mov
xor
pop
out
orb
cmc
inc
or
fisttpl
add
add
lcall
cmp
xor
es
sub
mov
mov
loope
sbbb
sbb
dec
pop
sbb
fists
and
js
mov
out
ror
push
mov
rclb
push
out
popf
repz
add
push
jge
scas
enter
cmpsl
inc
jne
cli
loop
stos
adc
mov
jae
ja
cwtl
popa
cmpsb
insb
sbb
pop
inc
sahf
shrb
hlt
outsb
and
pop
dec
mov
jo
mov
jg
xor
and
mov
push
push
or
in
cmp
fisttpl
mul
inc
ljmp
xchg
dec
sahf
popa
cmpsl
aam
test
jp
fistl
mov
popa
out
inc
add
push
aad
negl
push
dec
xchg
dec
lahf
inc
ret
test
cwtl
push
sub
push
and
aad
jbe
sub
das
scas
pop
xchg
inc
jno
xchg
movsl
mov
pushf
push
pusha
xchg
dec
mov
mov
sub
jmp
dec
je
sbb
inc
push
fisubl
clc
mov
adc
mov
jge
xchg
cmpsb
sarl
iret
mov
sbb
and
push
cltd
xchg
inc
pop
and
ret
xchg
repnz
or
mov
aaa
pop
or
pop
loop
fisttpll
pop
add
enter
jns
rolb
outsl
dec
xor
mov
xlat
jnp
fdivl
enter
pushf
into
sbb
into
jle
daa
into
push
or
popf
popf
push
cmp
dec
adc
dec
mov
sub
mov
cmp
testl
mov
jle
aam
mov
or
testb
ret
cmpsb
and
std
jnp
inc
adc
ret
loop
xlat
dec
aad
xlat
dec
cltd
jp
push
add
sbb
sbb
mov
lret
insl
and
dec
ret
cld
mov
ret
js
movsl
and
xchg
stos
mov
clc
outsl
sub
jo
outsl
je
push
in
insl
mov
rcll
popa
adc
add
cltd
push
pop
loop
mov
cmp
sbb
fwait
xchg
int3
jbe
lds
xchg
std
shlb
pop
insb
hlt
mov
fsts
arpl
outsb
xchg
and
outsl
movsl
or
mov
sub
ds
imul
dec
in
jmp
imul
leave
into
call
inc
sbb
ret
xor
mov
scas
adc
lahf
mov
push
mov
and
mov
and
mov
sbbl
and
jbe
int
xor
lds
ds
cmp
sub
clc
add
cmpsl
stos
and
pop
lds
stos
adc
out
mov
scas
cli
out
xchg
fistpl
and
aam
xchg
push
cmp
nop
aaa
pusha
mov
pop
rcll
enter
or
ljmp
pop
add
push
loope
cmpsl
stc
sbbl
xchg
stos
in
pop
pop
icebp
add
sar
repz
push
andl
inc
clc
pop
int
jno
lds
orb
jecxz
movl
or
stos
and
mov
sbb
dec
pop
cmp
inc
aam
in
lea
jge
sub
cmpsl
and
mov
mov
jbe
push
mov
xchg
mov
dec
fists
fisttpl
pushf
mov
ja
lods
in
adc
addr16
stc
daa
xchg
pop
inc
lock
or
out
cmpsb
lods
or
dec
lret
ljmp
mov
or
es
stos
jge
lods
xchg
cmp
cs
pop
inc
jne
dec
mov
add
gs
xchg
stos
scas
push
mov
test
loop
sbb
jbe
inc
bound
mov
push
into
sbb
mov
jno
sub
ja
iret
dec
in
add
adc
mov
imulb
iret
pop
and
jmp
gs
int3
js
inc
and
outsb
pushf
lock
jnp
imul
popa
lret
push
sbb
cmpsb
int
aad
jne
fsincos
or
push
stos
aam
mov
clc
ljmp
ss
loopne
pop
bound
je
adc
or
test
aam
mov
push
adc
sbb
stos
xchg
sti
xchg
or
daa
sarb
imul
or
xchg
sub
rcll
pop
rcl
ficomps
inc
push
loope
or
cmc
call
lahf
adc
add
sahf
in
dec
jecxz
int
xchg
jae
mov
popa
fwait
es
inc
int
ljmp
out
bound
ja
add
inc
lret
push
imul
mov
in
pop
testb
leave
mov
movsb
mov
dec
pop
sub
mov
mov
jl
pop
out
xchg
jne
mov
scas
jo
xchg
pop
sbb
cli
rcrl
adc
inc
cmc
test
push
std
push
pop
and
out
inc
inc
push
adc
sub
push
dec
dec
stc
mov
cmpsl
xor
shrl
xlat
mov
cmpsl
inc
xor
xor
sub
cwtl
fcomps
push
jnp
pop
push
in
xor
cmc
dec
lret
push
push
jecxz
jnp
jmp
pop
cmp
inc
cmpsb
ja
cs
scas
or
and
ror
inc
adc
pop
pop
dec
cmc
push
or
cmc
jb
push
adc
aad
test
not
jmp
loopne
fstpt
jnp
jo
lcall
das
pusha
sbb
jns
decl
mov
and
mov
mov
inc
cmp
insl
mov
xlat
push
in
add
mov
stos
jb
shl
add
push
cmpsl
dec
and
push
loope
xor
imul
add
jle
jg
mov
ja
lret
mov
std
fmuls
xchg
loopne
int3
pop
vpsadbw
filds
ret
push
cld
dec
add
jecxz
xchg
xchg
or
jno
iret
daa
add
mov
jge
jnp
mov
les
sub
in
loopne
mov
stc
mov
sub
inc
dec
pop
adc
adc
xlat
sub
xchg
insb
jno
jae
ret
mov
xchg
or
push
sbb
add
jp
dec
cmc
sahf
popf
mov
daa
lock
jnp
add
into
xchg
mov
xchg
and
sahf
or
inc
test
xor
fistpll
jae
cltd
int3
push
pop
ret
jl
dec
shrl
jae
dec
lret
mov
inc
jecxz
mov
pop
dec
cmp
mov
mov
negb
in
fdivrs
into
pop
out
sub
aaa
repnz
push
es
xchg
fadds
test
sbb
and
mov
inc
sub
in
inc
mov
std
and
mov
mov
sub
mov
cmp
or
cmp
sbb
mov
pushf
arpl
out
out
jecxz
rcll
int
xchg
xor
cmp
mov
mov
or
xorl
add
test
ja
push
pop
mov
dec
mov
adc
bound
test
jne
les
push
jecxz
mov
fwait
mov
test
movsl
inc
lahf
out
mov
fsubr
lds
loop
sbb
jno
loope
ja
add
and
sbb
rorb
inc
mov
out
inc
stc
lret
pop
lcall
dec
inc
scas
dec
hlt
sahf
je
inc
out
rolb
sub
add
mov
xor
test
fwait
adc
popa
js
stos
cmp
hlt
ret
ja
push
pop
imulb
adcl
cmpsl
jo
cmc
mov
lock
rcl
mov
out
mov
mov
xchg
fcomp
lret
adc
shrl
xchg
mov
jb
or
addr16
pop
fisubs
sub
mov
mov
inc
and
decl
push
sar
out
and
scas
xchg
or
in
mov
repnz
out
push
std
inc
or
xchg
ja
pop
cmovs
mov
xchg
mov
push
pop
lcall
repnz
sub
and
cmpsb
sahf
pop
mov
mov
insl
icebp
mov
pop
pusha
lahf
fmulp
out
mov
insl
xchg
movsb
cld
sbb
or
int3
icebp
mov
loopne
push
push
jp
pop
inc
in
jg
stos
pop
loopne
or
dec
aas
mov
in
movsb
js
xlat
add
lahf
sbb
icebp
insl
mov
sti
push
call
stos
sbb
mov
or
fwait
sub
pop
aaa
fsubrl
add
mov
pusha
and
jnp
in
xchg
popa
cmp
add
xchg
int
ss
jno
adc
lcall
cld
pop
dec
push
cmp
inc
push
dec
cmp
jbe
jmp
int
adc
mov
std
aaa
add
add
xlat
xchg
js
jnp
fdiv
adc
std
fldenv
sbb
dec
roll
gs
or
pop
jne
call
jg
into
insl
sub
int
jns
outsb
pop
xlat
lds
add
push
pop
sbb
sbb
neg
jae
faddp
test
rol
scas
add
das
mov
or
xchg
cmc
adc
push
popa
jp
loop
or
fucom
jmp
add
jmp
mov
sbb
loope
lock
cmp
faddp
cmpsl
mov
fistpl
or
inc
daa
fidivrl
cltd
jnp
sti
int
pushf
leave
sarb
pop
ret
mov
pop
inc
mov
push
xchg
icebp
test
lret
mov
cmc
enter
cmp
daa
nop
cmc
sbb
or
stos
mov
jecxz
xor
push
fildll
das
and
push
add
jb
pop
push
xchg
push
movq
lods
iret
jmp
cld
inc
jg
jbe
mov
hlt
lret
inc
push
and
add
sarb
not
xor
push
movsl
in
sahf
test
test
scas
andl
nop
pop
xlat
adc
push
dec
imulb
sub
mov
insb
cmp
cmp
push
or
inc
pusha
jnp
and
push
leave
cmpsl
xchg
out
outsl
jo
add
add
dec
mov
add
pop
mov
add
sbb
scas
rolb
jbe
xchg
jae
fs
scas
lea
inc
xchg
rcr
idivl
push
loopne
push
add
inc
mov
mov
and
jge
mov
fsubs
nop
mov
xor
ret
std
movl
mov
out
loope
mov
in
arpl
jmp
and
test
push
fbld
mov
dec
fistl
xchg
movsb
adc
jmp
inc
orl
or
pop
sahf
and
adc
test
js
jns
test
ss
dec
mov
xchg
popa
aaa
movsb
push
pusha
mov
test
jbe
ljmp
inc
dec
mov
dec
cmp
shlb
jmp
imul
mov
mov
mov
or
mov
outsb
inc
mov
pop
pop
data16
jmp
cltd
test
movsb
add
fcoml
aaa
fsubr
sti
sbb
mov
scas
adc
mov
repz
subb
inc
sub
push
xor
in
out
bswap
loope
xchg
add
aam
mov
nop
bswap
pop
call
lret
mov
mov
xchg
arpl
pop
dec
adc
mov
inc
mov
adc
out
sar
fucomi
jl
out
adc
leave
mov
or
push
jo
xchg
fwait
cwtl
push
pop
mov
es
sahf
and
idivb
stos
push
cmpsl
sub
repnz
mov
jl
xchg
das
lret
fwait
jb
lea
or
lcall
xchg
pop
out
dec
stc
cmp
aaa
jb
pop
shll
add
mov
movsl
push
add
sub
fwait
cmp
movsl
mov
pop
dec
xchg
fsub
pop
test
out
popa
orb
negb
sahf
dec
shll
orb
dec
dec
arpl
dec
repz
dec
mov
and
lret
push
cwtd
mov
rorl
push
in
outsl
bound
sbb
mov
bound
lret
push
xor
mov
pop
and
mov
stc
test
sbb
lret
inc
lods
loope
lock
add
data16
mov
jp
mov
mov
rclb
popf
or
fimull
aas
mov
das
add
xchg
clc
adc
jno
adc
daa
add
sbb
sub
ficompl
mov
fnstenv
stos
sbb
repnz
push
pop
ja
outsb
pop
outsl
pop
jnp
mov
push
aaa
mov
mov
mov
fldenv
and
scas
ds
fninit
dec
jo
in
fsts
mov
or
dec
scas
xchg
push
dec
jmp
push
pusha
and
lock
icebp
lea
arpl
sbb
cmp
adc
into
mov
or
add
outsl
stos
fs
popa
je
ficomps
mov
push
jb
mov
lods
jle
je
loope
mov
out
out
add
out
enter
notb
sub
scas
mov
aam
es
xchg
icebp
fcmovnu
mov
cld
mov
xchg
je
jo
cmp
cmp
push
xchg
test
roll
adc
xor
adc
mov
shrl
popf
pop
fnstcw
pop
inc
lahf
test
push
insl
jbe
add
in
outsl
mov
imul
out
repnz
in
pop
lock
pop
mov
pusha
jno
cs
xor
fsubl
clc
fwait
mov
fadds
push
fldt
sub
dec
outsb
sbb
cld
mov
sbb
lahf
and
jns
lds
xchg
mov
sti
inc
iret
adc
adc
push
jp
in
andb
mov
arpl
and
adc
cli
imul
adcb
scas
inc
cmpsb
movb
cmp
inc
lahf
sub
aaa
lock
sti
pop
mov
cmc
dec
test
outsl
lds
pop
loope
pop
xor
lcall
orl
movsl
std
mov
in
cli
ljmp
add
leave
aam
lahf
mov
jmp
xchg
xchg
jp
jg
bound
pop
and
jecxz
insb
movb
leave
loopne
cs
test
stc
pop
cmp
in
pop
out
mov
ja
pushl
or
xchg
jno
flds
iret
imul
mov
orl
fstpt
cmpsl
popa
adcb
hlt
xor
push
bound
pusha
ljmp
cmc
daa
inc
div
lds
jp
insl
dec
lret
mov
fisttps
xor
flds
mov
ljmp
pop
mov
jbe
and
cmc
mov
popf
lea
stos
pop
push
pop
stos
adc
out
jae
int3
fstpl
pop
or
xorl
dec
ljmp
movsb
mov
mov
lret
cld
ret
and
sbb
xlat
aad
jecxz
stos
xor
fwait
nop
xor
xchg
push
popf
cld
pop
popa
xchg
leave
push
addr16
aad
add
xchg
pop
or
test
arpl
inc
ja
jbe
xchg
shll
push
je
add
bound
das
test
iret
ds
push
mov
sti
pusha
push
fcoms
rcl
divl
testb
dec
xchg
mov
dec
lahf
mov
ficompl
jb
mov
pop
popf
adc
jns
and
lds
in
std
lock
add
dec
out
push
or
in
orl
sbb
pop
mov
imull
mov
les
pop
je
ret
dec
cmp
or
adc
daa
test
int
add
inc
sbb
xor
das
mov
or
push
movsl
xchg
xchg
call
mov
adc
sub
jl
push
pushf
cld
cld
push
into
lock
cmpsl
xor
sub
xchg
and
dec
mov
dec
lahf
add
leave
fmuls
fs
cmp
movsb
in
jl
out
int
loop
cmp
ret
push
int
test
xlat
pop
sub
push
shlb
dec
push
jge
cmp
aad
jmp
jge
jg
sbb
add
fwait
pextrw
xchg
das
mov
iret
rorb
pop
jno
xchg
jge
int3
mov
cmp
sbb
jbe
insl
imul
shrb
nop
push
lcall
mov
dec
out
adc
mov
out
dec
mov
iret
fisubrl
lds
jns
pop
inc
aam
lea
inc
inc
das
aas
in
call
adc
imul
xchg
adc
inc
pop
xchg
xorb
mov
stc
stc
cmp
dec
or
and
dec
les
aas
insb
popa
xor
pop
and
popf
sub
fisubs
fwait
jbe
jp
lret
lods
or
test
loopne
mov
bound
and
popa
mov
leave
mov
push
cmpsl
lret
pop
and
rcrb
jge
pop
repz
dec
repz
jae
scas
mov
dec
push
ja
jecxz
test
mov
inc
mov
test
fwait
xchg
mov
mov
gs
or
xchg
sbb
mov
rcr
out
xor
mov
icebp
xchg
mov
clc
outsb
xchg
bound
jle
adcl
aam
mov
popa
cmpsb
add
mov
mov
int3
in
frstor
xchg
pop
jnp
cmp
arpl
stc
repnz
jns
out
cmpsb
fcmovne
inc
fmul
movsl
or
fisttpl
cmp
cmp
jae
pop
fisubrs
test
jo
pop
stos
push
cli
mov
cld
roll
and
fwait
add
cmc
jmp
test
dec
ljmp
ficompl
outsb
cltd
jle
fcompl
in
je
pop
in
push
std
mov
or
pop
or
test
addr16
mov
inc
dec
mov
mov
push
in
cmp
outsb
xchg
pop
inc
movsl
inc
push
gs
ficoml
lods
push
addl
and
xor
addr16
mov
cmp
add
jb
hlt
into
insb
adc
das
fsubrp
add
pop
add
inc
fucomp
mov
movsb
adc
mov
pop
adc
lea
jmp
push
mov
mov
mov
sbb
decb
les
jbe
pop
cld
out
xor
sbb
hlt
mov
xchg
insl
aam
imul
mov
lahf
sub
pop
xchg
xor
int3
bound
push
cwtl
sub
pop
mov
ss
xor
mov
push
dec
scas
into
pop
jg
movsl
lods
adc
stos
cwtl
mov
lods
test
cmpl
pop
jae
xchg
lahf
imul
adc
hlt
xchg
test
fldl
jb
xor
jp
push
das
jmp
das
cmpsb
xchg
add
adc
pop
mov
sub
xor
mov
mov
fmull
js
sbb
xor
stos
loopne
ljmp
and
jb
pop
or
aaa
pop
mov
daa
sbb
dec
and
inc
add
rcrb
mov
sbb
outsl
mov
jmp
outsl
cmp
pop
and
mov
sbb
in
mov
adc
jge
out
sbb
jp
and
shlb
cmp
or
dec
pop
out
clc
into
divl
pop
bound
jno
call
out
scas
push
xor
fildl
or
lcall
daa
ficompl
iret
hlt
fadds
mov
xchg
mov
je
push
adc
add
addr16
imul
push
out
inc
push
punpcklwd
pusha
mov
loop
inc
mov
or
subl
aam
push
xchg
ds
pop
dec
inc
inc
dec
insb
push
lcall
cmp
fnstsw
sbb
mov
xchg
shld
inc
sbb
das
xchg
into
push
sub
out
in
pop
mov
or
mov
pop
jmp
jg
cmp
cmp
fs
dec
sub
stc
inc
xchg
cltd
and
ror
jae
shrl
gs
cmp
test
pop
cmpsb
hlt
ret
mov
mov
and
test
lods
ret
pop
gs
add
mov
int
xor
int3
jae
cmp
icebp
js
ja
inc
mov
cmp
xor
aas
in
xor
adc
and
sbb
lods
lds
fildl
cmc
jo
mov
xor
popa
jp
je
xchg
and
ret
dec
or
xorb
push
push
xchg
pop
mov
mov
out
sub
or
in
shl
into
xchg
rclb
mov
insl
je
mov
aas
loopne
daa
decl
dec
mov
cmp
fimuls
mov
pop
push
dec
inc
adc
xchg
and
ret
mov
jo
push
insb
push
pop
mov
xor
xlat
sbb
jbe
inc
xor
cld
and
dec
pop
scas
outsb
shrb
xor
dec
lods
mov
cmp
sub
mov
insb
mov
insb
jae
sub
mov
xor
out
xchg
pusha
and
and
and
ljmp
sarb
push
push
je
pushf
loope
add
loope
fadds
mov
inc
hlt
push
xchg
cmp
insl
or
push
sbb
pop
std
sub
and
stc
inc
mov
jno
decl
loope
movsb
push
mov
adc
aas
push
stos
mov
push
test
ljmp
pop
and
fwait
jge
xor
lds
div
push
lcall
jno
adc
dec
mov
orb
outsl
or
loope
loop
int3
lret
lock
fcomi
sti
xor
adc
in
mov
iret
icebp
cmpsl
clc
add
data16
mov
or
xchg
mov
lret
enter
cld
mov
add
outsb
scas
pop
cmp
mov
mov
dec
and
fnstcw
inc
and
dec
repz
jno
repz
and
mov
shlb
addr16
mov
sub
fsubp
insl
gs
pop
lahf
icebp
movsb
sub
pop
push
int
and
adc
xorb
jno
in
fcmovbe
push
dec
xchg
cmp
test
sub
data16
push
scas
add
fstl
out
incl
cld
pop
xorb
rol
mov
mov
add
mov
jo
inc
js
fisubrs
push
mov
cmpsl
push
ljmp
adc
xchg
adc
add
insb
mov
dec
pop
fidivl
fwait
inc
mulb
rol
dec
inc
iret
xor
stos
jp
fiadds
mov
lock
xor
pop
pushf
push
in
insl
xor
xchg
loope
xchg
mov
es
mov
xchg
sbb
jnp
imul
cmpsl
popa
sub
jns
push
lret
mov
in
and
xchg
mov
sbb
pop
insb
imul
xchg
mov
enter
outsl
repz
mov
fs
dec
sub
xor
repnz
bound
lds
iret
out
jecxz
jge
sbb
jmp
ret
fisubs
mov
daa
sbb
dec
add
dec
insl
add
pop
jl
or
xor
sbb
cmc
cmc
leave
lock
mov
dec
lcall
push
sbb
std
mov
cltd
addl
dec
cmp
mov
orb
mov
insl
repnz
out
inc
and
aad
mov
xchg
mov
fbstp
mov
pop
shlb
idiv
sti
mov
pop
sub
fdiv
mov
adc
pop
adc
jne
lret
sub
mov
push
pop
mov
add
jno
bound
iret
xchg
call
outsb
cmpsb
lods
int
lock
push
scas
and
sti
xor
lea
push
pop
dec
xchg
add
rcll
lea
adc
cmp
insl
addr16
pop
xor
clc
adc
sbb
js
fldl
aas
movsb
movsb
push
dec
aas
int3
cmp
xor
add
or
cmp
rcrl
sbb
ds
inc
in
mov
inc
xchg
dec
das
rcl
sub
out
mov
and
adc
pop
daa
icebp
orb
int
fldcw
xor
roll
mov
rcr
stos
sub
cmpsb
ret
xchg
loopne
dec
dec
std
out
stos
gs
jb
xchg
xor
xor
lods
adcb
lds
xchg
cmc
movsl
xor
fisttpl
sahf
stc
movsl
scas
ss
push
mov
cs
jb
mov
mov
xchg
add
clc
xlat
inc
cltd
push
nop
imul
jp
cmpsl
jns
inc
inc
addl
stos
push
mov
push
jae
out
mov
sbb
sbb
add
mov
xor
dec
mov
mov
push
rorl
dec
js
pop
push
add
xchg
ret
mov
movsl
mov
push
mov
mov
mov
pop
adc
cmp
sahf
mov
or
je
jl
mov
aas
popa
out
or
or
addr16
adc
shll
clc
cli
fsubl
mov
push
cmc
cmp
and
lds
jns
or
mov
mov
imulb
xor
stos
into
and
dec
cmpsb
mov
xorb
or
pushf
add
mov
cs
in
ret
jp
adc
lds
xor
xchg
cmp
sbbb
push
dec
shrb
jge
cli
jmp
mov
jge
pushf
add
sbb
and
icebp
pop
sbb
dec
js
mov
xchg
dec
fisttps
fucomp
xchg
adc
in
in
cmpsb
xor
testb
dec
xchg
pusha
scas
pop
bound
lea
jmp
in
in
push
xchg
push
add
es
jl
in
mov
pusha
push
cwtl
and
mov
pop
xor
rorl
pop
dec
add
xchg
jmp
inc
arpl
cmp
pop
pop
cmp
call
adc
cmp
cltd
rclb
sbb
loop
sahf
xchg
cmp
movsl
scas
lcall
mov
popa
inc
loopne
in
stos
add
shl
or
lahf
pop
xchg
arpl
push
imul
inc
xchg
cmp
rorl
xor
push
push
cmp
and
loope
xor
out
cmp
lods
push
outsb
xor
das
or
xchg
aaa
push
rol
pop
push
mov
sti
imul
mov
pop
xchg
dec
out
xor
repnz
icebp
dec
insb
out
or
test
jmp
ljmp
es
xchg
shrb
imul
mov
hlt
hlt
mov
pop
das
ss
in
jnp
dec
idivb
pop
pop
push
cld
mov
movsl
popf
or
inc
mov
jl
popf
rcrb
repnz
test
in
dec
or
mov
and
cmp
pop
pop
pop
xorl
pop
adc
mov
icebp
jg
into
and
pop
cmp
push
cmpsl
and
clc
data16
xchg
sub
loope
jmp
ja
mov
jecxz
frstor
scas
and
add
xchg
fdiv
popf
add
icebp
das
dec
insl
sbb
std
mov
in
lret
cmpsb
in
mov
sbb
adc
push
dec
xchg
push
hlt
add
dec
or
iret
aaa
mov
les
sahf
imul
into
in
ret
int
add
rcl
xor
sbb
push
divl
mov
mov
outsl
int
pop
pop
jecxz
mov
mov
inc
dec
or
pop
jecxz
rorl
sbbl
inc
mov
pop
cmp
int
inc
outsb
sbb
imul
pushf
or
call
call
pusha
pop
jae
imul
fists
fucomi
dec
adc
scas
xchg
sarl
sarl
aas
mov
fsts
jb
jo
lret
sar
or
lret
fistpll
pop
jns
lds
lret
jb
scas
jbe
xchg
imul
mov
add
push
xchg
adc
pop
sub
sub
sub
lods
dec
inc
imul
hlt
push
mov
nop
adc
cmp
jno
lea
repnz
mov
cmpsl
mov
push
inc
fsubs
xchg
sar
jg
aam
adc
pop
inc
cli
sub
lock
or
push
mov
aaa
mov
xchg
xchg
mov
popf
push
and
std
pushf
test
mov
ds
test
fwait
push
add
and
test
std
je
xor
or
mov
xchg
sarl
popf
jo
enter
mov
ficoml
add
dec
and
inc
pop
inc
add
push
push
and
add
daa
mov
repnz
pop
sbb
sbb
pusha
es
jmp
pusha
jbe
sub
bound
jp
popf
jno
mov
faddl
jnp
outsl
hlt
sub
add
cmp
cmp
adc
pop
stos
dec
push
call
mov
jb
ss
das
xor
test
cmpb
cltd
popa
ret
xor
insb
mov
jge
cwtl
xchg
inc
jg
js
test
sbb
dec
dec
xchg
jnp
hlt
sub
fistpl
xor
sub
shll
out
xor
add
test
and
jmp
xchg
bound
pop
addr16
pop
inc
inc
aaa
je
leave
xchg
jp
mov
jle
insl
push
ret
xchg
mov
sub
out
hlt
mov
enter
jo
add
repz
xorl
shll
pusha
outsl
or
push
test
mov
lcall
mov
cwtl
ja
xor
dec
outsb
sub
lret
jns
dec
xchg
jb
add
cwtl
jmp
dec
pop
push
mov
test
test
sbb
push
pop
out
ljmp
ja
pop
enter
jl
call
stc
cltd
dec
jnp
lock
sub
ficoms
sti
loope
frstor
pop
negb
dec
ja
xchg
xor
cmpb
mov
sub
xchg
push
int
or
jns
stos
cltd
aaa
out
or
cs
or
xchg
sbb
push
xchg
cli
pop
cmpsb
mov
push
mov
push
pop
jl
mov
cli
or
repz
addl
and
movb
cmpl
iret
daa
int
sub
or
adc
xchg
inc
iret
shl
jmp
je
imul
lods
mov
in
lret
aas
xor
mov
pop
dec
movsl
push
xchg
sub
cmpsb
sbb
ret
and
mov
stc
mov
add
jg
sahf
inc
fistpll
inc
sub
iret
loop
inc
sub
sub
push
jbe
sub
popa
jle
pop
notb
outsl
ds
add
loopne
push
xchg
stos
jbe
add
negb
adc
out
fbstp
inc
mov
cwtl
adc
outsb
mov
or
push
xchg
and
pop
daa
cmp
mov
sbb
mov
out
adc
mov
cmp
sub
les
jne
sbb
and
or
adc
hlt
xor
mov
test
test
sti
cmp
lds
sub
mov
and
jo
mov
aaa
stos
cmp
ss
ljmp
adc
add
clc
xor
jns
jnp
jne
inc
push
out
fwait
bound
int
xor
mov
add
stc
sub
mov
cmp
adc
sub
xchg
clc
and
daa
stos
dec
outsb
fstpl
ja
cmp
add
push
les
ja
and
sbb
or
in
addr16
pop
inc
jle
cmp
ret
mov
push
repz
add
push
movsl
outsb
daa
xchg
jnp
lahf
sysenter
insb
shlb
cmp
clc
jns
stos
lahf
mov
cmp
sub
mov
aam
repnz
and
rolb
dec
es
loop
jnp
inc
add
mov
inc
push
or
push
jo
or
les
rcrb
int3
jmp
push
ja
inc
or
push
sub
loop
mov
or
pop
jp
or
test
sarl
push
add
and
cmp
jnp
fisubs
xor
movsl
andb
fsubl
andb
mov
fs
or
rcl
lods
lret
clc
cmpb
push
and
pop
cmp
fmuls
dec
ja
push
in
call
xlat
fdiv
ret
cmc
xchg
decb
or
stc
mov
orl
jmp
push
adc
pop
outsb
sti
jmp
mov
mov
negb
push
test
or
sub
les
lods
jecxz
mov
pop
repz
jno
xor
xor
add
dec
movsb
lods
or
xchg
into
clc
push
pop
imul
rorl
lcall
insb
pop
jge
insl
rcr
and
repnz
push
jge
and
jmp
cmpsb
shll
pop
stos
inc
out
adc
lods
fcmovu
jns
ja
mov
push
clc
ret
mov
cld
inc
mov
add
mov
xor
sbb
movsb
and
xor
xor
outsb
jmp
and
fistpll
adc
mov
cld
push
in
xor
scas
repz
push
jae
gs
cld
add
jmp
sub
mov
sbb
dec
pop
aas
or
jno
dec
xchg
xor
sbb
call
pushl
mov
out
popf
inc
fcoms
test
lahf
fcmovbe
dec
ret
in
pop
popa
sbb
and
sub
dec
mov
nop
jae
loopne
cmpsl
sbb
shlb
jnp
xor
pop
shll
dec
outsl
push
loopne
dec
inc
int3
into
imul
xchg
test
bound
inc
mov
sbb
pop
scas
push
mov
sbb
xor
mov
add
push
loope
popa
sbb
aaa
and
in
fadd
jno
ds
fldl
and
xchg
sub
mov
in
mov
call
call
lods
pushf
jns
and
ret
and
jle
outsb
adc
lods
mov
stos
ret
sub
insl
mov
add
mov
pushf
idivb
jmp
or
in
jne
popf
jnp
dec
adc
push
shlb
push
adc
xlat
dec
mov
xor
mov
inc
shll
clc
mov
fsub
in
incb
mov
fwait
mov
mov
lds
outsl
in
or
mov
mov
add
mov
insb
das
jns
adc
jne
loopne
cmp
hlt
das
xchg
jno
movsb
in
sahf
js
scas
mov
test
cmp
cmp
mov
cltd
mov
outsb
std
scas
pushf
jbe
and
clc
dec
push
flds
js
cmpb
jns
fs
mov
ljmp
lea
xchg
push
pop
mov
sbb
xchg
aam
mov
push
sub
and
inc
mov
lret
cmpsb
sbb
mov
adc
push
jmp
sahf
ret
ret
sbb
sahf
xlat
mov
xchg
pusha
test
je
push
add
fwait
mov
mov
repnz
jnp
adc
adcb
popa
xchg
sbb
popa
lahf
shll
aas
add
jg
xor
add
push
rclb
sbb
stc
inc
inc
pop
in
cmp
xlat
mov
fsubrl
out
xor
dec
ret
sarb
les
pop
out
push
inc
outsb
stc
int
and
in
sub
insb
faddl
sbb
or
or
xchg
and
inc
cli
and
sbb
add
stos
test
jl
dec
cmp
adc
mov
cld
mov
fbld
incb
call
outsb
iret
mov
jmp
mov
test
divl
mov
xlat
push
pop
inc
lahf
inc
mov
adc
or
mov
or
or
out
mov
iret
mov
dec
jns
lahf
sbb
les
shr
mov
mov
and
mov
testb
adc
ret
int3
sbb
sub
data16
push
inc
push
mov
or
stc
icebp
dec
inc
xor
sub
mov
in
xchg
xchg
test
enter
sub
mov
pop
mov
push
mov
xchg
imul
mov
fs
dec
enter
mov
stc
bound
bnd
adc
xor
lret
push
in
xor
adc
clc
test
mov
pop
jp
call
mov
xchg
push
repz
imulb
cmc
fldenv
add
aas
mov
mov
or
lret
lcall
sbb
push
call
in
insb
inc
divb
xor
daa
xchg
out
add
jnp
inc
xchg
sub
pusha
jmp
int
cmp
jae
pop
ficomps
xor
or
adc
cmpsl
adc
shrb
lcall
pop
lret
push
mov
test
cmp
sub
push
push
out
sub
clc
adc
mov
sub
pop
cld
pop
fistps
jmp
push
repz
fisttpl
xorl
loop
cmpsb
sbb
movb
les
pop
clc
subb
push
sub
shlb
sub
xor
fildl
xor
gs
cmpsb
xchg
sub
insb
das
stos
jl
pop
pop
int
sub
jnp
xor
ss
mov
jo
sti
ja
shlb
loop
xorl
push
sahf
adc
mov
aam
jmp
scas
jmp
mov
xor
adc
lea
int
xor
cmp
mov
scas
sbb
out
and
or
stos
bound
and
sub
fwait
aas
jno
pushf
sbb
repz
inc
insl
ja
adc
popf
loopne
mov
add
sub
mov
das
mov
aas
int
and
mov
mov
gs
stos
int3
loop
cltd
jge
cmp
in
or
scas
or
imul
pop
sbb
sbb
add
aam
and
inc
sarl
lcall
dec
sub
fsubrl
jecxz
fcomp
dec
cmp
cwtl
stc
push
ss
adc
xor
cmc
sbb
adc
outsb
leave
dec
pop
inc
jmp
repz
mov
aad
push
movsb
lea
add
rorl
test
xor
filds
sub
mov
mov
pusha
aam
and
mov
hlt
loopne
jne
pop
mov
pop
sub
push
adc
mov
pop
ret
mov
outsl
jb
cmp
fwait
pop
in
dec
adc
jbe
pop
push
cltd
lds
stos
into
movsl
mov
cmp
or
pusha
std
adc
jmp
imul
leave
mov
popf
pusha
jno
sub
push
cmpsl
mov
xor
fnstsw
mov
mov
ljmp
lret
lock
pop
repz
in
in
sub
popa
daa
push
scas
jecxz
pop
and
push
popf
pop
fnstcw
and
dec
int
sbb
mov
lcall
lock
cmc
pop
sti
sbb
fisubrs
and
mov
aas
cmpb
les
xor
mov
mov
fldl2t
out
push
xchg
test
and
test
xchg
jge
xchg
pop
shrb
jge
in
jae
sub
bound
mov
ret
add
add
sbb
push
pop
pop
dec
adc
adc
scas
xchg
mov
mov
iret
dec
cwtl
pop
add
pop
xor
mov
int
pop
inc
testl
cmpsl
lret
lret
test
or
test
cmpb
les
out
jg
out
jo
push
js
and
mov
mov
xlat
and
jne
inc
and
push
idivl
enter
sub
mov
outsb
lock
es
cltd
xchg
pop
iret
in
cmp
int3
in
xchg
push
xchg
incl
dec
int3
pushf
sti
pop
push
adc
push
and
mov
jg
xor
outsl
nop
jnp
imulb
test
enter
cld
in
gs
xchg
pop
xchg
loop
add
call
mov
aam
cltd
adc
xlat
loopne
arpl
clc
xor
movsb
fs
sti
decl
daa
xchg
xstore-rng
cmpsl
lds
xor
in
test
les
shl
jb
push
pop
in
add
sbb
movsl
es
mov
lds
xchg
push
and
and
mov
js
shrl
arpl
and
add
or
sub
adc
ljmp
repnz
push
sbb
rcrl
pop
mov
js
inc
fcom
add
je
mov
xchg
scas
xor
jne
cmp
jp
and
adc
pop
in
arpl
and
add
push
and
inc
pushf
loopne
cmpsl
and
dec
add
push
je
shr
sub
jb
sbb
adc
mov
jmp
jnp
inc
inc
out
out
sar
outsl
and
in
lods
icebp
cmp
in
imul
or
jg
jg
cwtl
cmpsb
stc
popa
cmp
lods
movsl
dec
mov
inc
stc
mov
xor
lds
pusha
xchg
sbb
js
iret
das
adc
lods
sub
test
mov
pop
loop
pop
inc
stc
push
aas
mov
mov
movsb
push
fstpt
out
or
enter
lea
cli
das
imul
push
adc
add
mov
jecxz
pusha
out
loopne
and
cmpsb
xor
sbb
push
push
mov
sbb
cs
pusha
hlt
xor
pushf
inc
cmpsb
mov
cmp
pop
sbb
inc
in
cltd
xchg
stos
and
or
push
jge
mov
enter
rorb
nop
sub
or
mov
push
pop
pop
xor
lcall
jle
movsb
add
xchg
imul
sarl
decl
cmpsb
icebp
fcmove
ss
in
out
jle
cmp
sub
sbb
xor
and
aam
push
ljmp
mov
in
dec
cmp
fnstenv
inc
into
aaa
jmp
cmpsb
pop
test
add
leave
lahf
clc
dec
dec
leave
inc
jne
int
std
dec
cmpsl
stos
int3
mov
cmp
mov
gs
jno
test
inc
hlt
mov
push
pop
pop
sbb
sti
mov
sub
scas
jae
adc
dec
adc
mov
jmp
jmp
mov
call
cmp
adc
adc
xchg
cmp
roll
movsl
test
test
lcall
or
mov
pushf
push
or
fdivp
cld
rol
js
dec
adc
sub
in
scas
mov
push
test
mov
sbb
adc
cmp
pop
into
mov
and
mov
cmp
xlat
xchg
arpl
idiv
ljmp
test
sti
mov
ret
inc
dec
mov
test
adc
xor
sub
loop
imul
cmpsl
out
scas
arpl
decb
mul
pop
fdivl
in
lock
repz
xor
xor
adc
loopne
jbe
mov
rcrb
cmp
push
dec
aaa
xchg
loope
xor
mov
jnp
sub
ja
out
sub
ss
loopne
lock
cmp
clc
xchg
mov
lods
pop
adc
xchg
sti
clc
shlb
jae
pushl
inc
imul
mov
iret
lds
movsb
xor
mov
dec
cmp
fs
movsl
popa
pop
lret
loopne
rorl
in
rcr
xchg
push
cmp
add
cld
pop
jge
mov
clc
inc
neg
inc
cltd
lea
shr
movnti
dec
xchg
mov
loope
push
cmp
aaa
shlb
pop
ficompl
cli
push
repnz
adc
jne
ljmp
lret
sub
cltd
pop
das
stc
sbb
jno
cs
sub
mov
sub
pop
out
dec
aaa
fiadds
sarb
sub
sub
pop
stc
movsb
fidivs
out
and
bound
jns
sub
enter
and
push
aad
mov
outsl
mov
fdivs
ljmp
pop
out
ret
dec
jp
loopne
inc
cli
pop
pushf
scas
mov
ret
and
xor
cmc
es
call
inc
mov
mov
jp
fmuls
rolb
mov
dec
lret
push
or
cmp
les
dec
out
xor
mov
imul
std
int3
or
jecxz
fwait
pop
push
jns
jecxz
aam
pop
enter
in
xor
push
dec
mov
repnz
mov
movsl
cmp
sbb
mov
stc
xchg
inc
addr16
clc
int
leave
pushf
mov
sbb
push
lea
adc
fidivrl
stc
sti
jle
inc
inc
mov
xor
mov
adc
or
loop
mov
xchg
les
addr16
push
ljmp
mov
dec
mov
in
jge
xchg
ret
int
dec
inc
divl
sub
add
jg
add
in
pop
pop
sbb
je
lcall
mov
adc
inc
mov
or
shrl
inc
pop
push
fmull
repnz
rol
fiaddl
popf
mov
out
and
jmp
outsb
inc
pop
pushf
divb
out
cmpsl
pop
stos
loop
or
and
rcl
cs
mov
out
sarl
adc
aaa
jl
jne
mov
pop
dec
add
inc
add
sbb
mov
add
sbb
inc
sbb
or
loope
add
imul
rclb
inc
stc
mov
xchg
mov
mov
mov
add
fadds
mov
pop
and
test
ret
mov
out
cmp
hlt
push
add
mov
adc
lahf
adc
lcall
mov
repnz
xlat
jno
shlb
lds
test
ss
adc
cs
adc
inc
aad
lods
jge
pushf
sub
sbb
outsb
jne
aas
and
push
dec
sub
xor
test
fimuls
pusha
sbb
xor
cmp
cmp
repz
mov
clc
mov
xchg
sub
rcl
mov
ret
and
xchg
push
add
jne
lret
dec
hlt
outsl
cs
or
mov
xchg
push
in
adc
jns
lahf
outsl
imul
int3
daa
ja
ror
ds
subb
je
adc
xchg
and
or
loop
pop
pop
fsubrl
gs
sahf
xchg
repz
mov
add
mov
shrb
repnz
dec
push
xchg
jno
test
xchg
sarb
bound
add
loopne
or
ljmp
dec
cli
ds
dec
andb
sbb
mov
jmp
cltd
inc
xchg
mov
bound
nop/reserved
and
push
sub
mov
dec
add
dec
jmp
sahf
mov
sbb
xor
loope
adc
ret
cmpsb
dec
mov
iret
push
out
push
ss
xchg
sbb
dec
sbb
jo
leave
push
test
pop
push
pop
sub
cld
fs
mov
pushf
loop
loopne
fwait
int
nop
in
jl
mov
xor
arpl
push
test
mov
je
cwtl
imul
jns
add
out
push
mov
push
fidivl
test
into
push
jne
adc
shlb
adcl
pop
xchg
lods
stos
in
mov
xchg
mov
jnp
or
push
fcmove
fcmovnu
cmp
out
fs
adc
adc
push
pop
andl
push
je
add
hlt
test
rorb
mov
adc
dec
pop
inc
xor
pop
push
in
xorl
or
add
pop
dec
xchg
inc
mov
cmp
adc
mov
inc
pop
mov
jbe
mov
loope
inc
mov
mov
mov
and
mov
mov
cmpsl
pop
pop
xor
out
mov
jecxz
and
add
imul
xchg
repnz
repnz
in
adc
or
test
mov
std
lods
push
popf
push
mov
inc
and
imull
mov
xchg
xchg
fsub
mov
aad
sub
fwait
pop
pushf
and
mov
iret
sbb
pusha
pop
mov
daa
mov
adc
lret
sti
popf
inc
sub
into
ficoms
sub
in
cwtl
sub
fists
mov
adcb
loop
popa
sbb
fists
pop
mov
lds
sub
mov
mul
inc
sub
out
lock
incb
push
dec
sbb
xchg
sbbl
adc
jmp
cmovbe
jmp
sub
or
cmp
lahf
stos
or
clc
jle
mov
cld
ucomiss
mov
ljmp
pop
sub
sbb
aas
dec
sub
sti
add
mov
xchg
and
and
push
and
and
xlat
sti
inc
in
sbb
xchg
test
jl
pop
jbe
push
test
fwait
or
and
and
mov
pop
jle
lahf
pop
pop
or
test
test
mov
pop
out
mov
dec
mulb
jo
insl
inc
mov
mov
sbbb
nop
dec
cs
imul
pusha
push
and
jmp
jnp
push
test
ficompl
nop
push
pop
aas
mov
mov
mov
push
je
xchg
xor
sub
pop
adc
jnp
mov
inc
sbb
stos
mov
sbb
xchg
faddl
jb
daa
and
ficompl
test
add
or
sahf
pop
sub
sahf
aad
mov
ljmp
sti
dec
and
aaa
xor
mov
xor
fbld
inc
xchg
push
or
dec
fs
mov
dec
sahf
insb
stos
arpl
lods
and
push
inc
test
mov
lock
leave
push
arpl
popa
mov
xchg
lret
das
cmc
rcl
lahf
xor
push
loopne
pop
lcall
jns
adc
pop
jle
fldt
dec
xchg
jl
pop
xor
loopne
stos
mov
insb
lods
mov
lea
out
hlt
fsubs
pop
notl
popf
cmp
dec
not
shlb
pop
cltd
dec
mov
xchg
dec
out
mov
mov
into
jns
and
outsl
imul
mov
add
and
sub
in
aas
push
pop
push
fidivs
jl
mov
mov
add
xor
mov
movsb
dec
repnz
aas
shlb
inc
lcall
cmp
xchg
sbb
xor
inc
pop
outsb
inc
pop
jnp
rorl
lods
movsl
out
shlb
mov
imul
inc
add
int3
xchg
and
xchg
std
adc
xor
jns
pop
push
push
rcrb
cmpsb
imul
jmp
cwtl
popa
lcall
aaa
mov
in
icebp
fcompl
mov
imul
imul
iret
aas
sbb
inc
pop
mov
jmp
xor
mov
insl
lret
adc
push
in
into
pop
adc
inc
mov
pop
jb
push
or
or
mov
sub
ficomps
push
shrl
mov
repnz
fs
or
insb
das
test
movsb
popa
mov
adc
out
adc
cmp
int3
inc
mov
out
add
call
inc
call
inc
lods
inc
sub
fwait
push
in
push
rolb
addr16
in
pop
adc
sti
mov
mov
xchg
xchg
mov
out
sub
mov
sbb
add
pop
leave
int
mov
sub
or
cs
mov
xor
mov
imul
cld
push
dec
jmp
push
roll
sub
int3
xchg
xchg
roll
fs
add
or
sub
fcomps
lock
xchg
les
popf
jns
pop
imul
jl
fs
sbb
fsts
das
shll
les
adc
dec
fcompp
cmpsl
imul
mov
test
xlat
inc
add
sub
ja
in
adc
jecxz
insb
mov
arpl
dec
arpl
mov
js
mov
xor
into
je
scas
jecxz
jp
arpl
mov
lock
rcrl
mov
rcrb
sbb
jb
xor
js
mov
into
mov
rcrl
out
shrl
dec
rcrb
inc
inc
rcrl
addr16
pop
inc
sbb
ss
sub
add
pop
push
cmp
sub
push
inc
add
adc
int3
jecxz
mov
movsl
mov
and
jmp
add
add
imul
xchg
pop
sub
push
andl
mov
pop
into
sbb
adc
imul
stc
xchg
jmp
negb
pop
add
lock
xchg
addr16
push
add
sbb
outsl
aaa
xchg
inc
push
and
push
lret
push
sub
mov
xor
xchg
jb
ret
pop
pop
mov
dec
idivb
push
jp
inc
leave
push
mov
pop
lahf
add
sub
daa
xchg
xchg
cmp
test
imul
dec
lcall
iret
and
add
pop
lcall
lahf
fsubl
stc
pushf
scas
and
mov
inc
jge,pn
xchg
insl
push
rcll
repz
ja
push
aam
add
cs
dec
adc
std
decl
cmp
daa
push
and
lcall
test
add
pop
push
lods
adcl
add
cmc
and
cltd
jno
jp
sub
cmp
jmp
xchg
sarl
cwtl
bound
xchg
dec
sub
roll
insb
cmc
fimuls
lock
cld
pop
rcll
loopne
inc
add
xor
xor
push
cs
cmp
mov
jno
stos
dec
dec
mov
mov
je
sub
pop
pop
add
or
mov
dec
out
inc
and
call
loopne
add
inc
sub
inc
mov
adc
pop
dec
sbb
repz
mov
jle
mov
dec
mov
jne
das
fisubl
jnp
or
addr16
clc
inc
push
and
and
xchg
fisttpll
outsl
das
jae
scas
cmc
fistps
sub
add
or
xchg
and
or
stos
in
lods
add
or
inc
call
or
sbbl
add
addr16
sub
adc
cmp
cmpsl
incl
mov
push
rclb
pop
mov
sbb
mov
mov
pop
adc
pop
pop
jnp
imul
sub
cwtl
loopne
les
mov
adc
mov
xor
aaa
lock
loop
push
jnp
jmp
push
cmp
push
stc
mov
sub
cs
daa
mov
add
sub
imul
aaa
push
add
and
call
pop
mov
mov
outsb
dec
repz
and
lret
and
dec
jae
and
mov
adc
into
sub
arpl
jp
inc
and
xor
mov
cwtl
into
aas
pop
push
and
cltd
stc
gs
popf
inc
cld
call
sub
sbb
xchg
popl
stos
sub
orl
jecxz
jo
mov
xchg
es
jnp
loopne
sbb
cmpsb
test
aam
cs
sub
dec
xchg
and
fadds
aaa
lods
cmp
fcompl
jmp
lcall
scas
sbb
mov
ja
and
mov
arpl
mov
mov
adc
mov
lods
add
lds
pop
adc
jae
cmc
cld
mov
iret
jns
cltd
orb
jmp
das
lods
mov
inc
cld
xor
loop
mov
pushf
stos
adc
out
loop
mov
pop
fsubl
mov
xchg
jb
pop
or
nop
cmpsb
xor
adc
cmp
jle
sub
mov
sti
leave
dec
cmc
stos
movsb
xor
dec
mov
daa
aaa
cmp
loopne
pop
sub
sbb
push
mov
mov
push
push
pop
cmpsb
push
outsb
push
sub
mov
js
mov
adc
fstl
and
push
inc
cmp
push
movsl
mov
mov
mov
punpckldq
xor
ret
imulb
ret
pop
rclb
mov
jnp
jae
rcl
mov
enter
pop
add
nop
jl
pop
jmp
push
fdivl
cmp
arpl
popa
pop
and
jbe
inc
fwait
inc
addl
push
adc
jp
or
mov
mov
addr16
mov
stc
jp
mov
jmp
into
mov
les
fdivrp
pop
mov
andl
jbe
scas
bound
adc
repz
inc
fwait
sbb
aad
int
iret
bound
cmp
subl
dec
mov
sub
insl
repz
adc
adc
mov
mov
scas
mov
jp
pop
into
cmpsb
mov
sub
cmp
adc
jle
sahf
push
cld
inc
sbb
xchg
sbb
incl
mov
mov
call
cmp
fstps
mov
cmpsb
rcrb
xchg
jge
cmp
cs
imul
lods
pop
adc
jnp
mov
dec
ss
dec
iret
in
or
rcrl
mov
and
lahf
push
and
jbe
jle
cltd
mov
faddp
aaa
add
jmp
mov
xchg
add
mov
das
into
jns
test
jp
mov
arpl
push
lret
mov
xchg
pop
inc
shlb
pop
cmp
or
push
int
pop
pop
fistps
xor
sub
popa
and
nop
jle
fs
cmp
lahf
pop
stos
adc
test
xor
jg
test
imul
das
mov
mov
xor
rorl
xor
pop
sti
jne
adc
adc
cwtl
aaa
fs
in
ljmp
aaa
xchg
shrl
sub
add
clc
push
xlat
pop
sub
sbb
and
xor
lret
rorb
pusha
or
repz
add
sub
repz
out
fbstp
ret
fistps
xchg
adc
enter
out
out
jl
jns
push
xor
out
hlt
lds
mov
subl
psubsw
push
xchg
out
xchg
and
sub
scas
cmpsl
add
pop
mov
push
sub
cmp
aam
mov
push
or
sarl
jbe
rcrl
mov
mov
xor
pop
inc
dec
xchg
mov
pop
repnz
cld
cmp
loope
mov
fldt
ret
push
adcl
sti
stos
sub
inc
mov
or
repnz
xor
push
loopne
sbb
or
lahf
mov
cmpsb
push
test
fcoms
insb
shlb
jmp
in
or
mov
mov
inc
adc
cltd
mov
fs
adc
add
jbe
shl
add
pop
dec
push
stc
sbb
jno
insl
aad
in
jp
roll
mov
ret
mov
inc
mov
jne
mov
jnp
cmp
add
out
out
stc
mov
fcmove
bound
outsb
addr16
mov
add
add
sbb
inc
add
lret
cmp
mov
mov
shrb
out
into
sbb
sub
mov
hlt
inc
scas
cli
mov
mov
cmp
jp
push
sti
pushf
lahf
arpl
jmp
xor
mov
fdivrp
repz
xlat
jnp
aas
repnz
or
sahf
add
push
into
mov
cs
cli
imul
pop
and
mov
popf
dec
clc
mov
imul
rcrl
ret
jecxz
mov
in
jmp
cs
shl
ds
xlat
add
dec
xlat
mov
negl
jno
js
jno
mov
fucom
push
test
sbbl
jno
aam
sbb
hlt
jmp
out
and
call
xchg
sub
nop
or
sti
rcll
xor
push
cmpsl
xchg
xor
jge
lock
pop
jmp
sub
push
xchg
pop
out
add
adc
adc
mov
in
jge
jecxz
in
xchg
test
data16
xchg
xchg
aaa
cli
fisubs
adc
cmp
xchg
movsb
xor
movsl
movsl
shll
mov
sbb
dec
int3
call
jae
hlt
jge
aas
push
out
jae
rolb
mov
push
xlat
sub
and
dec
cld
pop
mov
fs
jne
je
and
or
mov
jecxz
lods
jnp
jb
lods
xor
insl
in
nop
call
xor
mov
mov
in
dec
jns
inc
int
js
fcomp
in
ficompl
imul
push
inc
mul
pop
les
mov
scas
or
or
pop
into
push
negl
outsl
push
pop
inc
cmpsl
mov
and
pop
test
sbb
xchg
seta
lahf
and
inc
mov
adc
jg
es
dec
jmp
fdivs
xchg
mov
out
pop
jmp
imul
xchg
add
fwait
jo
xchg
pop
inc
or
cld
test
mov
cmp
mov
pop
outsl
push
test
mov
and
mov
insb
adc
out
int3
call
dec
mov
inc
inc
mov
adc
cmp
fsubrl
cwtl
cmp
adc
and
cmpsb
arpl
out
or
lret
push
sub
lcall
mov
add
pusha
fld
icebp
fdivrl
lret
in
sub
cmp
fs
popa
pop
mov
cld
cmp
mov
rolb
fdivrl
outsl
in
lods
jne
adc
pop
gs
aaa
stos
mov
pop
add
movsl
xor
cmpsl
mov
pop
mov
pushf
call
scas
rorb
lret
and
dec
xchg
jno
sahf
test
es
cli
mov
icebp
out
ss
sbb
mov
inc
mov
cs
inc
shl
xlat
scas
jb
push
dec
add
lret
mov
push
lcall
movsl
sub
xchg
push
sub
ja
into
aam
xor
and
dec
pop
and
push
iret
mov
push
dec
das
xchg
aad
dec
jae
stos
mov
inc
cmc
or
push
ja
push
or
and
fisubrl
clc
jp
enter
mov
add
aad
inc
mov
test
xchg
push
movsb
mov
into
shll
lods
dec
and
scas
xchg
ficomps
pop
push
gs
shll
and
inc
push
mov
cmp
repz
push
xor
fldz
and
sub
sbbl
add
fistpl
int3
test
push
lods
jae
lret
pop
add
ror
add
lods
mov
mov
call
dec
repnz
push
outsb
xor
nop
inc
mov
sub
inc
jns
mov
dec
sti
inc
adc
mov
out
mov
dec
fisubs
repz
mov
nop
loop
aam
add
mov
mov
jecxz
jecxz
test
jb
outsb
dec
mov
push
or
into
filds
dec
xchg
or
push
sub
ds
and
mov
call
pop
cwtl
or
shl
adc
sub
out
clc
loopne
fadd
loope
cmpl
mov
or
fsubrs
inc
cmp
mov
cltd
and
sbb
cmc
outsl
mov
fisttps
cmpsb
xor
cmp
push
cmp
outsb
xchg
shrb
mov
cwtl
sti
rolb
shr
movsl
std
jge
loop
sub
fs
subl
mov
mov
pop
jg
mov
clc
add
cmpsl
push
into
mov
jle
pop
add
or
cltd
jnp
dec
jae
nop
loope
jno
jl
into
repnz
sub
loop
daa
inc
divl
mov
jb
or
and
jne
mov
inc
or
xchg
loope
pop
dec
and
inc
sub
push
lcall
insl
xchg
xor
inc
dec
adc
jp
mov
push
cmp
pop
xor
lock
mov
mov
sbb
dec
mov
jno
ds
add
loope
out
jecxz
push
cmpsl
stc
mov
xchg
jmp
incl
and
push
or
aas
add
orl
jnp
das
jl
cmp
mov
add
and
or
clc
and
pop
ficomps
lds
pop
xchg
pop
fadds
fmul
enter
inc
rcrb
pop
jle
out
or
xchg
lds
icebp
pop
xor
push
cmc
lods
jg
jmp
dec
inc
call
push
adc
sbb
divb
mov
mov
add
xor
pushf
cld
mov
icebp
test
popf
add
in
jnp
jns
shrl
xor
mov
call
mov
pusha
xor
mov
mov
movsb
mov
mov
int
mov
mov
push
outsb
and
jge
xchg
fdivl
sahf
pop
jnp
scas
pushf
mov
mov
add
sbb
push
cmp
push
push
rorb
cld
push
testl
les
push
jg
jo
inc
lods
mov
loope
sbb
out
mov
jns
xor
ret
stc
call
mov
data16
sub
or
loop
xchg
sbbl
xor
in
mov
jmp
and
in
sub
sbb
std
insb
adc
jmp
jl
xor
fildl
fcompl
dec
shrb
jmp
sbb
xor
lahf
mov
sarb
sbb
push
lret
sub
icebp
xchg
sti
mov
lcall
xchg
push
xor
push
inc
push
inc
xor
mov
out
js
outsb
pop
mov
inc
fistps
repnz
leave
adc
repz
call
add
ds
jb
jg
test
test
inc
adc
lds
mov
dec
fwait
jb
or
pop
aas
push
cmp
cs
cmp
pop
mov
jp
fldcw
adc
adc
das
out
lret
pop
mov
mov
and
jecxz
jge
clc
dec
adc
cmp
dec
mov
fdivp
shll
in
shll
cli
cmp
in
xchg
nop
sbbl
lcall
incl
xchg
loope
les
jmp
fstps
add
lods
int3
sahf
xchg
cmp
jne
add
push
out
flds
lret
mov
das
ret
sbb
mov
dec
ret
cmp
pop
std
mov
sbb
or
jecxz
sbb
sub
mov
leave
push
fcomip
ret
mov
jecxz
movsb
ret
mov
sar
mov
mov
insb
in
int3
test
call
mov
add
lret
movsb
xor
cli
pop
cmp
cmc
sbb
ds
adcb
fcmovu
and
popa
mov
cmp
movsl
pop
ja
mov
pop
repnz
daa
test
xchg
inc
inc
add
pop
mov
std
scas
jecxz
dec
pop
push
addr16
or
add
das
jecxz
jg
lret
es
mov
stc
daa
cmp
imul
scas
xor
dec
push
or
std
rolb
mov
cli
sub
lret
enter
rcr
xlat
pop
mov
stos
lret
imull
cmp
scas
sbb
jecxz
nop
hlt
sbb
dec
rolb
push
cmpsl
lock
xchg
mov
imul
out
mov
stos
leave
and
mov
mov
pop
ljmp
andb
push
cmp
jp
je
nop
test
add
push
pop
mov
xchg
pop
and
popf
test
sub
xchg
ja
fwait
jecxz
and
fsubl
data16
adc
lret
pop
loop
pop
in
jp
inc
and
std
scas
inc
orb
lret
movsb
pop
fldl
mov
loop
inc
lea
dec
test
aas
push
je
and
add
and
mov
adc
inc
in
mov
outsl
mov
insl
ss
or
sbb
lock
or
mov
iret
shll
adc
jbe
aam
icebp
push
shr
out
bound
and
data16
cs
shll
mov
or
lock
jne
xlat
dec
lret
cmp
mov
nop
push
xchg
xchg
imul
inc
pop
sbb
xor
loop
and
jge
int
or
mov
adc
ds
inc
adc
data16
mov
idiv
roll
lods
roll
xor
insb
hlt
test
push
cld
xlat
dec
or
mov
hlt
xchg
ljmp
cli
cwtl
int
insw
out
mov
repnz
icebp
inc
mov
lret
pop
mov
rolb
mov
cld
call
add
dec
call
in
scas
or
movsb
mov
insb
leave
dec
or
or
pop
pusha
fdivrl
stos
sbb
mov
std
mov
repnz
into
arpl
add
xchg
adc
addr16
push
inc
sbb
cmp
xlat
sub
les
mov
mov
adc
mov
jcxz
js
pop
out
or
cmp
inc
xor
or
rcl
xchg
inc
or
mov
mov
and
push
add
leave
jbe
pop
xchg
add
mov
sbb
movsl
adc
pop
push
leave
insb
mov
mov
and
movups
adc
scas
ja
xor
in
out
sbb
js
stos
jnp
mov
mov
mov
inc
dec
in
push
pop
sub
orb
dec
int
xor
xchg
loope
adc
out
aam
mov
xor
aam
in
pop
das
fnsave
insl
jae
xor
jecxz
je
xor
in
cmp
xlat
mov
fdiv
out
nop
sbb
add
mov
add
pusha
sbb
pop
jne
imul
xchg
mov
sub
sbb
sbb
push
push
mov
adc
mov
lret
shrb
fldl
xchg
jnp
push
ss
cmp
sahf
nop
shll
or
add
mov
repnz
roll
xorb
stos
loopne
add
cmp
flds
pop
repnz
stos
aam
dec
sub
mov
and
arpl
lock
sbb
sub
setle
pop
hlt
stc
adc
dec
out
cmc
pop
sbb
mov
mov
inc
lahf
push
xchg
dec
push
jne
adc
pop
mov
cmc
push
ret
stos
inc
invd
adc
xor
out
mov
rcrl
fs
push
jno
in
popf
sub
pop
dec
cmp
mov
jg
ret
fs
jne
fdivr
pop
dec
out
sbb
movsl
testl
add
sahf
pop
popf
mov
rcl
and
cmpsl
xchg
pop
stos
cmova
adc
es
push
sub
dec
adc
aam
leave
stos
jne
pop
repnz
jl
sarb
movsb
xor
dec
or
leave
jg
sbb
fisubl
pop
push
das
lea
imul
ret
and
cmpl
jo
out
push
mov
mov
mov
jo
ret
mov
je
cmp
or
add
push
aam
in
dec
in
data16
repz
mov
cmp
xor
jb,pt
adc
and
int3
fdivrl
or
mov
scas
ja
add
das
dec
mov
cmp
mov
push
nop
adc
fstp
inc
and
sub
pop
test
xor
jo
push
cmp
push
enter
mov
dec
xor
pop
fs
inc
pop
in
and
cmp
cmp
push
sub
frstpm(287
sub
int3
or
mov
xchg
add
mov
ret
hlt
pop
cs
into
jno
and
outsl
mov
add
aas
mov
lea
dec
imul
ss
sub
adc
pop
push
mov
mov
jmp
and
adc
add
pop
les
xor
inc
rcrb
and
lds
jg
add
arpl
out
mov
jecxz
cmpsl
movaps
dec
mov
sub
ja
insl
or
in
inc
pop
xor
inc
pop
xchg
mov
popf
jae
inc
xchg
ss
cmp
mov
test
sbb
and
dec
test
nop
mov
sbb
inc
je
adcb
lea
ljmp
push
lods
ds
incb
in
pop
xor
cmp
xor
sbbl
daa
nop
pop
shrb
inc
mov
test
je
mov
xchg
popa
es
mov
xor
xchg
xor
ss
jb
shl
adc
cmp
fcomi
sarl
scas
mov
insl
scas
sbbb
enter
in
cmp
pop
into
jle
clc
pop
int
cmp
pop
dec
adc
sub
cmp
loope
das
mov
cs
test
push
jmp
fidivrl
divl
addr16
sti
insl
scas
cmpsl
bound
int3
push
jo
pop
sub
pop
stos
lods
popf
pop
lods
cltd
mov
mov
xor
sub
mov
mov
stos
push
adc
dec
xchg
lods
rcl
icebp
cmp
outsb
bound
stc
jnp
adcl
jg
das
leave
das
enter
jg
flds
or
push
std
hlt
pusha
mov
sbb
push
mov
add
jmp
sub
sti
mov
cld
dec
push
imul
out
lret
add
pushf
jl
dec
mov
test
add
xchg
sarl
mov
jl
clc
mov
out
inc
xchg
test
inc
sub
cmpsl
into
jnp
cltd
add
ja
mov
movsl
in
pop
cmp
lahf
jns
sbb
arpl
sub
jge
adc
scas
jp
gs
je
or
loope
pop
mov
sbb
sub
add
gs
push
ljmp
ret
ds
clc
dec
xor
xchg
test
pop
inc
or
or
daa
inc
rol
pop
jne
cmp
xor
stos
sub
mov
leave
fimull
pop
fwait
ljmp
sub
sub
mov
add
repz
cmp
inc
add
pop
adc
sub
xchg
add
testb
arpl
shll
addr16
xchg
nop
xchg
and
push
sub
loopne
test
clc
faddl
or
sbb
mov
mov
lcall
fistl
gs
xor
pop
xchg
mov
inc
in
mov
pop
sbb
add
test
repnz
ljmp
cmpsl
jo
push
stos
dec
push
sbb
hlt
mov
in
arpl
sbb
sub
cmc
sub
lcall
jecxz
jmp
xchg
cmp
outsl
popa
repnz
sub
dec
addr16
leave
es
or
push
rsm
push
push
int3
jnp
cmp
nopl
sahf
mov
imul
jnp
adc
xchg
or
mov
scas
xor
xor
cmp
jnp
fistps
xor
xlat
mov
insl
cmp
push
mov
push
cltd
pop
pop
pop
js
pop
shll
insb
inc
mov
orl
cmp
pop
mov
jle
js
jno
lahf
outsb
lock
push
js
rolb
in
mov
dec
aas
cmp
add
xor
insl
pop
mov
mov
fs
and
fs
mov
cld
adcb
adc
sub
movsb
sbb
cmp
leave
in
movsl
pusha
pop
icebp
inc
inc
mov
lret
pop
dec
test
mov
cmp
mov
movsl
adc
inc
sbb
jp
sbb
in
daa
dec
jge,pt
and
mov
mov
aas
inc
mov
int3
cmc
inc
pop
mov
cmp
cs
dec
out
fbld
and
jecxz
das
sbb
sub
push
or
mov
sbb
or
jne
arpl
or
jl
xlat
xchg
xchg
ret
cmp
add
mov
in
inc
dec
es
xlat
mov
ljmp
push
lock
outsb
push
into
sbb
pop
xor
lods
inc
dec
jmp
dec
jle
xchg
cwtl
jns
ret
adc
mov
mov
dec
mov
cmp
mov
ret
add
xlat
fdivrl
out
sbb
mov
lods
outsl
add
mov
adc
divb
mov
faddp
in
nop
std
sub
cmp
pop
iret
daa
out
mov
pop
jp
stc
and
adc
outsl
lret
loopne
dec
popf
lock
push
enter
orl
mov
mov
and
pop
pop
cmp
test
jp
mov
repz
dec
andb
pop
adc
cmp
arpl
test
push
cmp
sbb
in
jecxz
daa
or
xchg
repz
aad
inc
add
push
mov
mov
lods
nop
popa
push
mov
mov
xchg
push
dec
aad
test
icebp
xor
popf
fistpl
in
lahf
mov
outsb
dec
jmp
xor
out
lcall
in
mov
dec
push
int3
push
rsm
pop
cmp
sub
mov
test
adc
inc
and
mov
repz
loope
out
shlb
rcr
sub
std
into
push
add
adc
pop
push
fisubrs
bnd
out
push
inc
push
popf
and
out
lods
xchg
or
outsb
leave
mov
fsubrp
dec
and
addr16
cmp
sar
lret
xchg
loop
out
lret
and
jne
dec
loop
cltd
outsb
or
push
push
lret
adc
idiv
or
shufps
xor
je
fcoms
outsl
loope
adc
jnp
push
jno
jg
cli
xchg
pushf
imul
xor
push
cmpsl
cmp
fisubl
aad
repnz
pop
int
aas
mov
add
filds
xor
sbb
mov
stos
sub
fnstenv
lret
pop
sub
mov
gs
lds
sbb
or
mulb
adcb
inc
jle
push
jmp
pop
loopne
push
mulb
test
push
mov
lcall
add
push
mov
imul
ret
inc
fstp
xchg
sub
lea
cmpsb
fisubs
jnp
lods
or
sub
adc
sbb
add
imul
xchg
pop
xor
out
cmp
leave
sbb
adc
add
lea
mov
sbb
cmpsl
es
movsl
cmp
cmp
xchg
xlat
xor
sahf
mov
scas
push
call
bnd
xchg
fidivrs
sbb
jge
ds
sbb
and
ds
roll
push
inc
inc
stos
push
push
pop
in
lock
mov
xchg
jo
in
mov
and
jl
xchg
hlt
jns
mov
mov
add
leave
push
or
add
in
mov
push
xor
fldl
addl
rep
pop
rorb
push
aas
arpl
cmp
jns
ficoms
cli
insl
pusha
inc
cmp
lods
mov
lea
add
in
jne
pushf
fdivl
icebp
inc
sub
imul
ficompl
call
xchg
sbb
xchg
jo
lock
lahf
aas
movsl
loop
pop
stc
mov
stc
mov
pop
or
xchg
push
push
cmp
testl
cltd
ret
jbe
adc
or
jge
sbb
or
int
mov
icebp
mov
pusha
xor
pop
js
push
in
sub
xchg
or
cs
add
mov
cli
nop
mov
pop
cmpsl
outsb
es
add
inc
into
aas
popa
jae
jne
int3
sti
and
aaa
jmp
imul
arpl
cmp
lahf
lahf
addr16
aam
xchg
dec
fbstp
aam
scas
test
fwait
dec
incl
or
inc
push
xchg
cmp
sahf
data16
mov
ss
out
outsl
mov
mov
dec
jl
pop
scas
xor
test
dec
movsl
pop
cmpsb
lret
inc
jecxz
mov
and
fiaddl
and
xchg
sub
out
push
repz
inc
push
xor
in
call
or
scas
push
movsb
out
jecxz
add
cmc
sbb
int
push
lock
icebp
xlat
cmpsb
mov
push
jle
repnz
push
xor
adc
inc
jnp
popa
lahf
aaa
xchg
filds
cmpl
out
jbe
in
adc
mov
pop
inc
loop
stc
or
lea
jl
movsl
lods
lds
das
test
or
fscale
cli
and
test
mov
mov
out
mov
ss
js
pop
cmpsl
sub
and
jecxz
add
mov
aam
inc
lcall
cmp
add
cmp
sbb
xor
rorb
xchg
and
dec
push
push
popa
stos
xchg
ja
sub
jb
and
push
ss
mov
and
mov
int
sub
ljmp
fidivrl
xor
push
outsb
loopne
lcall
mov
mov
lods
hlt
mov
lods
test
dec
dec
xchg
push
es
xchg
mov
daa
sub
rcll
bound
push
mov
iret
out
dec
or
incl
xorl
mov
mov
adc
push
ja
ljmp
adc
cmp
ljmp
jp
jae
aad
push
sub
je
ljmp
sbbl
sbb
aad
xor
push
push
sub
inc
popf
push
nop
adc
mov
sub
adc
xor
loopne
insl
les
sahf
xor
cli
xchg
xchg
dec
mov
cmp
insb
dec
cltd
sti
imul
in
das
adc
dec
sub
push
xchg
add
sub
push
pop
mov
dec
arpl
cmp
cmp
pushf
push
pushf
movsb
jecxz
fwait
in
fdivrl
dec
cltd
pop
push
and
mov
or
sub
cmp
lret
xchg
pop
adc
lods
add
sub
inc
stos
fstps
insl
xchg
in
stc
insl
es
pop
jnp
xor
jae
lcall
adc
pop
cmp
pop
cmpsb
subl
dec
cli
jb
stc
mov
xor
scas
mov
adc
movsl
jnp
cmc
shr
les
movb
dec
roll
pop
sarl
mov
mov
mov
lret
popf
out
in
mov
inc
imul
js
pop
cmp
fs
rcll
lods
cmpsl
mov
iret
enter
inc
push
mov
mov
ds
mov
sbb
jg
mov
arpl
pushf
scas
sahf
into
jecxz
loope
cmp
scas
shl
xchg
xor
leave
lcall
push
sub
dec
scas
std
ja
shrl
fimuls
push
jmp
mov
fisttps
das
stos
or
pop
mov
inc
or
or
data16
sbb
scas
push
mov
xor
je
xor
adc
lret
sub
outsb
jp
in
jbe
mov
fsubrs
inc
mov
add
clc
xor
arpl
push
dec
mov
jecxz
out
jae
cmpsb
pop
or
aaa
pop
push
push
xor
test
fcmovnbe
and
jmp
push
mov
push
out
jns
cmp
cltd
or
xlat
lods
sub
mov
les
out
movsl
aam
test
sahf
popw
fstpt
and
loope
xor
lods
xchg
imul
fstpl
es
add
int
fisttps
lret
xchg
mov
mov
loopne
mov
push
and
imul
mov
pushf
jb
sub
mov
sti
and
in
scas
push
or
jno
out
arpl
add
mov
push
adc
push
dec
or
lcall
addr16
mov
sub
bound
out
adc
and
mov
xor
add
call
cmp
cld
popl
mov
loop
push
push
sti
cs
mov
push
or
mov
mov
sbb
push
repz
jge
add
sbb
les
sbb
sbb
test
mov
mov
rcrl
ja
xchg
shll
mov
dec
xor
mov
nop
sbb
sub
xchg
mov
mov
xchg
scas
push
jbe
mov
cmp
ja
push
shrb
ret
add
inc
out
sub
lahf
xchg
mov
scas
pop
lahf
bound
das
imul
arpl
shrl
aas
xchg
sbb
scas
jg
xchg
lahf
rcll
out
stos
add
inc
jmp
xchg
into
enter
push
notl
push
stos
xor
mov
push
sahf
inc
jno
out
mov
jno
sbb
jg
loopne
mov
lcall
shrb
mov
imul
or
fs
dec
cmp
xchg
adc
mov
push
in
aam
cmpsl
mov
pop
cli
test
pusha
out
cmp
xchg
xchg
xor
pop
scas
mov
mov
mov
notb
push
and
sub
repz
add
mov
stc
sbb
pop
popa
push
ds
mov
sbbl
dec
pop
jl
sbb
out
test
xor
dec
pop
inc
bnd
sarl
jg
or
adc
into
loop
xchg
ud2
mov
clc
xchg
push
mov
push
or
sub
negb
retw
mov
sub
arpl
not
leavew
sbb
or
dec
int
es
xor
out
push
lahf
clc
xchg
cmp
arpl
arpl
add
das
jle
push
mov
jle
rorb
cmp
add
jecxz
sub
push
loope
aas
jbe
xor
jg
lods
cs
dec
sbb
and
xchg
std
popa
in
cmpsb
test
xchg
orl
dec
cli
sbb
ficoms
or
lcall
scas
in
sti
add
rclb
cmp
lcall
cmp
imul
dec
add
daa
cmc
sbb
in
mov
cmp
xchg
adc
mov
or
fistps
mov
in
ret
cmp
or
pop
loop
out
lret
add
add
and
mov
repnz
pop
jmp
add
sub
push
out
call
inc
mov
scas
cmp
sub
imul
je
fmul
sbb
jae
cli
test
push
sti
enter
outsl
loopne
mov
push
jecxz
xor
fsubs
ret
or
xchg
mov
ljmp
push
pop
fmuls
rorb
sbb
add
mov
mov
and
mov
aad
iret
cld
push
or
outsb
xor
and
dec
cmc
shll
ret
js
push
in
hlt
adc
fisubrl
dec
aam
lods
imul
xchg
cmp
pop
stos
xchg
ja
fcompl
push
ror
stos
xor
sbb
es
push
popa
sbb
xchg
aad
xlat
lea
andb
shr
mov
fst
jecxz
jno
adc
insl
sbb
or
dec
lret
cs
push
inc
pop
adc
stos
popa
js
mov
cld
or
mov
imul
pop
mov
daa
pop
lods
aad
xchg
cltd
sub
outsl
vmulps
xchg
test
sbb
inc
adc
mov
fcmove
cmp
xlat
ret
adc
fidivl
hlt
mov
mov
cmp
je
push
adc
mov
or
popf
jo
mov
xchg
inc
out
dec
and
cli
mov
mov
push
mov
jne
test
push
mov
push
pop
lods
pop
jns,pt
movl
popf
jne
sub
jg
insb
data16
in
add
pusha
add
test
cmp
sahf
jb
insb
mov
adc
cmp
test
mov
int3
mov
test
cwtl
lahf
das
xor
mov
and
jo
dec
mov
jg
lock
out
mov
ficoml
adc
and
sub
jle
sub
adc
push
adc
sarl
add
in
jnp
pop
les
jl
pop
mov
je
je
out
pop
xchg
aad
movsb
mov
or
jmp
sahf
sub
pop
add
cs
xchg
adc
sub
int3
sbb
fcompl
js
les
jb
mov
lea
sbb
dec
repnz
pop
inc
pop
shrb
adc
push
add
subb
aaa
push
test
in
cltd
cmp
fnstcw
stos
ljmp
arpl
push
mov
insb
fcoml
push
push
sub
scas
imul
test
jbe
cmp
sbb
sub
outsb
or
mov
out
adc
cwtl
iret
jno
sub
in
adc
mov
push
shrl
out
outsb
fwait
in
dec
outsl
subl
add
dec
cld
push
xor
cwtl
pop
xor
xchg
test
icebp
push
mov
xchg
test
cmp
xchg
popl
fdivr
pop
or
fndisi(8087
cmpsb
shl
cmp
into
lods
adc
mov
enter
inc
ret
js
push
lock
dec
sub
enter
iret
movb
jne
lcall
inc
jecxz
movsb
mov
lods
inc
cmp
jge
jae
mov
or
push
jnp
mov
cli
out
sbb
ret
pop
inc
repnz
sbbl
xchg
xor
adc
cmp
sbb
sub
flds
xchg
in
out
std
out
mov
pop
lods
xlat
out
aam
push
cmp
mov
push
push
out
jne
cmp
add
mov
leave
aas
int
mov
cmp
sbb
cmpsb
lods
test
js
mov
fsubrp
mov
pushf
jnp
fidivrs
test
or
xchg
jp
in
mov
bound
aad
push
cmp
sub
adc
outsl
inc
das
mov
mov
outsl
pushf
test
imul
jno
push
pop
xchg
ret
mov
addr16
mov
pop
mov
arpl
and
sbb
arpl
xchg
jmp
in
jb
arpl
je
jp
out
mov
mov
cmp
aaa
lods
stos
addr16
add
adc
push
filds
inc
lock
sub
or
mov
push
pop
and
lds
jmp
mov
cli
movl
mov
rcrl
das
adc
mov
imull
jmp
aaa
out
shl
sbb
xor
mov
lods
dec
pop
jp
adc
jecxz
push
shll
mov
adc
shlb
stc
mov
aas
popf
or
out
out
inc
push
arpl
add
or
ljmp
ss
cmp
sbb
sbb
mov
daa
bound
sbb
stos
and
jle
movsl
inc
icebp
cli
pop
out
adc
and
imul
push
mov
std
mov
or
dec
dec
shrb
xor
sub
cmp
mov
icebp
xchg
jmp
sub
clc
xchg
lret
or
push
xchg
inc
sti
sub
adc
xor
mov
mov
aam
addb
inc
fmull
push
movsl
inc
mov
ret
data16
pop
cs
out
int
lds
pop
lods
outsb
loopne
loope
mov
adc
pop
dec
out
mov
ds
xor
sbb
je
jle
outsl
mov
out
add
int3
js
adc
das
add
ljmp
mov
cmpb
or
js
or
repnz
xchg
js
sub
inc
leave
mov
dec
aad
cld
popl
inc
fcom
flds
fisttpll
mov
ficoms
mov
hlt
fstpt
orb
leave
push
fwait
adc
dec
aam
push
shlb
mov
sbb
inc
push
mull
lcall
or
pop
movsl
jl
scas
mov
jmp
ljmp
dec
cmp
popf
stos
addl
clc
jbe
in
adc
dec
movsl
inc
cmp
pushf
push
pop
icebp
xchg
movb
mov
fisttpl
or
cmc
cwtl
mov
sbb
push
mov
loopne
aad
push
lods
dec
pushf
insb
cld
fwait
leave
or
or
xlat
mov
scas
stos
or
daa
iret
ljmp
cmp
in
xchg
cmpsl
mov
mov
lcall
sarl
lods
div
jo
and
imul
es
outsl
xorl
sbb
sbb
inc
pop
push
fimuls
pop
cmp
fwait
cmp
xor
push
push
loop
add
repz
rolb
mov
jno
push
popa
ja
mov
or
mov
mov
ja
xchg
addr16
sub
sub
fldl2t
cmpsl
inc
xchg
jecxz
scas
xor
int
mov
xor
or
loope
sub
adc
mov
mov
cmp
sahf
scas
sbb
jmp
lods
mov
mov
sbb
sbb
inc
pop
xchg
sbb
fdiv
adc
or
sti
daa
adc
scas
xchg
inc
addr16
out
scas
out
cmp
push
popf
pushf
sub
cmp
ds
out
dec
ret
cmp
cmp
dec
mov
aaa
add
ffree
xchg
lret
outsb
loope
add
clc
dec
cmpsb
inc
mov
enter
or
push
leave
fstpl
add
dec
outsl
dec
adc
adc
mov
out
sbb
cli
popf
jne
movsb
xor
push
lds
adc
pop
and
ficompl
sub
xlat
cmp
mov
xlat
dec
inc
inc
jae
in
jb
loopne
dec
pop
pushf
cmp
xchg
dec
arpl
sahf
push
test
ljmp
data16
mov
adc
sub
jmp
adc
dec
ds
jmp
inc
ljmp
call
mov
jg
pop
dec
cmp
movsb
pop
mov
inc
psubsw
xchg
and
lds
mov
xor
xchg
push
imull
push
scas
test
inc
in
mov
jecxz
in
jne
adc
test
fsts
jo
pop
jne
dec
add
xchg
push
call
scas
sbb
repnz
inc
lret
push
sub
ss
leave
loope
mov
jg
mov
insl
das
mov
arpl
mov
xchg
fstpt
or
jmp
xchg
bound
ds
aaa
movsb
xorl
inc
or
jbe
inc
mov
sub
xor
xor
sub
push
and
mov
dec
test
scas
bound
mov
insb
insl
out
ds
lahf
repz
sbb
adcl
lods
hlt
icebp
pusha
pop
cltd
outsb
mov
adc
in
xchg
sbb
push
rorb
push
xor
fnstenv
stc
adc
mov
push
rcrl
daa
pushf
and
sub
cmpsb
iret
sub
xchg
adc
movsl
pop
push
xchg
xorb
adcl
inc
dec
xchg
mov
sbb
cmp
sbb
test
dec
adc
dec
jnp
xor
mov
fbld
xor
ficomps
subl
orb
popf
ljmp
and
pop
and
lods
arpl
loopne
dec
sub
sub
adc
insb
adc
sub
xor
loop
insl
int
negl
adc
jl
std
mov
fistps
mov
andb
push
cmp
inc
movsl
call
jl
pop
out
fcmovu
dec
and
dec
mov
js
test
cwtl
test
dec
mov
pop
inc
fsubrs
cmp
dec
daa
shll
sub
sbb
jo
lcall
lret
mov
cmp
cmpb
repnz
add
mov
inc
push
out
pop
cltd
add
fs
jecxz
outsl
scas
call
test
lahf
mov
jmp
ret
es
arpl
sbb
push
mov
mov
xchg
inc
dec
mov
pop
out
fisubrl
clc
les
popl
in
int3
push
movsb
fbld
testb
aas
faddp
lock
int3
sbb
adc
and
sbb
xchg
and
jno
ljmp
loope
movsl
push
cs
cmpsb
xlat
cmp
mov
mov
dec
scas
outsb
or
pusha
lidtl
sar
push
mov
gs
cld
jne
std
es
mov
stos
aam
sbb
les
inc
int3
cmc
dec
xor
nop
sub
sub
jecxz
inc
or
cmc
mov
nop
loope
push
xchg
cmp
and
inc
mov
int
int3
mov
cmp
les
shlb
pushf
jp
aam
sbb
nop
adc
jnp
jbe
xor
mov
sbb
jb
ret
sub
or
pop
insb
gs
bound
or
pop
jnp
out
cmpl
test
mov
xor
lods
cmp
notl
jmp
mov
pop
ljmp
js
push
push
rolb
pop
aas
es
xchg
ret
lret
jle
call
cmp
pop
jge
pop
lds
and
sub
out
scas
dec
iret
adc
arpl
out
or
cmpsb
mov
stos
mov
push
notl
xchg
pop
cmp
out
mov
xchg
cmc
imul
push
cltd
jno
stc
clc
adc
lods
rclb
mov
repnz
pop
fiadds
add
cmpb
cmp
insl
xchg
jecxz
shr
cmpsb
fldcw
aam
xor
data16
mov
jmp
adc
into
mov
mov
jbe
and
dec
adc
or
jle
int3
inc
test
inc
js
push
sar
bound
push
push
sbb
mov
in
inc
jl
jne
imul
jmp
sub
cld
imul
pop
cmc
out
dec
aas
jbe
and
fisttpll
add
iret
jl
aad
mov
loopne
and
xlat
xor
movsb
mov
cmc
dec
movsl
xchg
cld
aam
sbb
fwait
xchg
push
pop
mulb
ret
fs
pushf
adc
add
push
dec
subb
cmp
cmp
outsb
out
jno
jb
imul
ljmp
bound
mov
mov
jge
dec
sbb
cmp
scas
and
xchg
xchg
je
testl
inc
and
adc
dec
mov
imul
cmpsb
into
out
and
mov
sarl
fcomps
cmp
ret
dec
push
fwait
dec
clc
sub
xchg
loopne
cmpsl
inc
xchg
enter
jg
movsl
pop
mov
push
dec
rcrb
lods
fiadds
pop
mov
jns,pn
mov
sbb
push
mov
jg
sub
mov
int
or
loop
mov
sti
push
add
mov
sbbb
dec
es
add
leave
repz
sub
mov
xor
mov
out
pop
jb
mov
les
jae
adc
in
cmp
push
pushw
cli
in
loop
mov
int3
sub
je
mov
and
dec
inc
jae
add
push
ds
dec
ss
shl
push
and
and
xlat
sbb
lret
in
adc
stc
insb
jge
xor
scas
jg
add
popa
icebp
push
add
xchg
scas
push
and
shrl
sub
or
xchg
sbb
mov
adc
and
xchg
mov
inc
aam
add
out
stos
or
dec
lea
jo
fdivl
aad
ljmp
ljmp
or
loopne
mov
test
mov
push
xor
dec
xchg
into
sar
mov
sbb
mov
jnp
mov
mov
mov
mov
dec
pushf
xchg
icebp
mov
outsl
cli
sub
mov
scas
or
sub
inc
push
cs
mov
std
sub
and
xchg
jbe
or
xchg
shl
stos
testb
std
and
out
sub
int3
test
mov
ret
mov
aad
pop
and
fidivrl
or
mov
data16
jne
addl
mov
pop
cmp
inc
fsub
xchg
dec
pop
lret
dec
iret
mov
and
push
test
push
mov
je
add
clc
mov
mov
cmp
jnp
adc
jne
jo
xor
pusha
fcoml
outsl
in
lcall
mov
adc
dec
mov
mov
jge
add
int
inc
mov
inc
int
cmpsl
pandn
ret
out
cmpl
add
sbb
scas
push
das
ficomps
iret
js
xchg
or
mov
out
xchg
dec
ds
cmc
mov
jae
add
dec
mov
xchg
jnp
cmp
jecxz
push
or
xchg
pop
mov
cmp
addr16
sbb
adc
movsl
insl
shr
in
sahf
enter
pop
das
xor
mov
mov
cmp
in
out
rorl
inc
add
dec
in
loope
push
sbb
iret
adc
insl
adc
xchg
mov
push
lret
inc
jg
ljmp
ret
jge
loop
dec
xchg
add
mov
add
xchg
pop
jae
stc
int
je
adc
stos
int3
add
call
test
xchg
pop
cmc
gs
xchg
dec
mov
addl
push
bound
inc
std
mov
cwtl
adc
xchg
jg
push
fnstsw
cltd
int
xchg
lock
inc
inc
and
or
decl
adc
cld
and
cmp
pop
aam
into
pop
push
jo
mov
inc
rcr
add
push
add
test
in
mov
inc
sub
jns
mov
xor
int3
xor
ret
mov
push
bound
sti
mov
fiadds
outsl
ret
mov
lret
stos
pop
jbe
xlat
pushf
int
shlb
ds
push
aam
jmp
ret
push
or
mov
arpl
mov
aad
lret
bound
sbb
fsubrp
lds
sub
inc
sbb
xor
cmpsl
lcall
and
pop
xchg
dec
js
je
add
insb
cmc
iret
in
and
pop
sub
psubq
and
cmp
fdivrl
push
movsl
ret
int
rcrl
mov
in
mov
out
xchg
dec
add
dec
mov
push
sub
nop
jmp
lods
xchg
int
xchg
push
leave
xchg
sbb
cmp
mov
nop
jp
push
mov
push
jbe
pop
pop
adc
ljmp
scas
mov
sbb
out
dec
xchg
inc
add
fs
ja
and
testb
adc
loopne
xor
mov
lar
imull
in
jp
adc
adc
lds
ret
mov
adc
and
insl
push
mov
add
jae
sub
sub
shr
cmc
call
ds
push
jge
adc
xor
shlb
hlt
adc
xchg
repnz
pop
pushf
mov
negb
lock
nop
lock
aad
push
or
pop
sbb
inc
push
xchg
sbb
in
daa
mov
mov
mov
pop
cmp
pop
cwtl
sbb
cli
jo
xor
stos
out
xrelease
sub
jne
lds
adc
xchg
mov
dec
jmp
and
or
jecxz
cmpb
iret
fistps
loopne
mov
scas
lods
fadd
push
mov
mov
insb
pushf
push
or
lock
mov
cmpb
dec
aam
sub
cmp
mov
jg
test
mov
sbb
test
push
nop
jge
pushf
aas
pushf
stos
stc
mov
mov
add
out
dec
cmpsl
mov
or
mov
inc
jno
leave
and
and
or
and
push
int3
hlt
jne
rorb
push
jl
sbb
pushf
xchg
push
xchg
dec
lock
iret
sub
xor
adc
lret
mov
fdivl
jne
sbb
dec
mov
repnz
or
cmp
mov
mov
jmp
loope
mov
sub
int3
jo
xchg
cltd
adc
fstps
jl
mov
call
push
lahf
enter
pop
inc
out
test
push
mov
cmpsl
out
inc
rclb
shl
cmp
cmp
push
jmp
mov
cmp
lock
pop
negb
cwtl
mov
data16
enter
jbe
push
fstpt
jnp
loop
movsl
icebp
in
adc
pusha
sbb
repz
ret
add
lods
pop
dec
cld
cmpsb
jecxz
cld
push
sbb
daa
rcl
mov
pop
adc
inc
test
and
rolb
mov
test
lods
rcll
xor
cmp
fs
arpl
adc
xor
sub
hlt
cmpsb
or
insl
loop
lret
mov
push
xor
push
push
cmp
fsts
xchg
fstl
pop
repnz
add
push
imul
cmp
dec
fs
dec
sbb
js
rclb
lea
mov
mov
jb
xor
mov
sbb
pop
cmp
out
jnp
xchg
imul
dec
loopne
shrl
outsb
lods
xor
imul
push
dec
dec
je
mov
out
out
jns
xor
add
int3
lds
negl
cwtl
aad
pop
cmp
aad
mov
test
inc
mov
pop
ljmp
fstpt
push
pop
je
jge
sub
push
sti
cltd
rcr
sbb
mov
jl
fiadds
cmp
ds
js
mov
sub
push
outsb
adc
pop
test
pop
adc
addb
add
and
lret
push
out
jae
push
leave
addr16
out
mov
xchg
jne
movsb
mov
out
out
xchg
sbb
or
sbb
shrl
pop
aaa
xor
mov
loop
xor
cld
fmuls
jge
out
daa
iret
and
jnp
dec
jge
cmp
loope
mov
call
rcrl
mov
cli
cmc
xchg
enter
mov
dec
or
add
push
aam
inc
sub
addr16
jge
fbld
out
lds
mov
outsl
scas
gs
cmp
inc
mov
cmp
in
andl
and
call
pop
jecxz
andb
mov
testb
xchg
loopne
cld
cmc
cmp
out
and
frstor
mov
lods
add
shlb
aas
repnz
mov
inc
sub
or
enter
test
mull
jg
shll
lcall
sti
jb
test
push
or
insl
call
xchg
jp
or
in
lods
xor
push
std
adc
or
and
push
frstor
leave
add
cwtl
incb
cmp
insb
outsb
shll
andl
cli
in
pop
movsl
in
nop
loop
das
dec
xchg
fnstcw
inc
jno
and
fs
test
aad
jl
mov
jge
push
push
andl
lock
jmp
in
test
scas
xor
out
adc
or
nop
inc
cmp
push
xor
jno
cmp
ds
orb
out
add
mov
cmp
iret
test
mov
mov
inc
test
or
lea
cmc
ja
ljmp
popf
mov
cld
mov
mov
test
je
pop
testb
pop
pop
push
pop
fisubl
adc
inc
cli
and
lds
push
jo
mov
push
into
sahf
jnp
mov
jl
fiaddl
popf
jp
push
lret
call
call
dec
pop
js
mov
ret
inc
pop
push
int3
sbb
negb
xchg
lea
daa
cli
push
inc
fsub
xor
mov
xlat
stos
aam
lcall
insl
fadds
data16
mov
and
shlb
cmp
push
adc
mov
sub
into
cmpsb
push
add
mov
jno
loopne
push
push
hlt
test
jmp
add
or
push
cmp
cmp
xor
lods
repnz
xchg
sub
movsb
jne
ja
jg
sahf
test
dec
stos
stos
mov
out
insl
mov
jae
out
push
test
andb
daa
scas
inc
andb
sbb
jle
std
ja
and
in
call
pushf
jne
in
adcb
mov
cmpsb
addr16
cmpsb
xor
cmpsl
mov
cltd
push
nop
cmp
cmc
lret
pop
les
sub
jb
hlt
mov
or
addr16
mov
imul
and
cmp
mov
adc
sub
hlt
sub
cmp
jl
test
pop
test
pop
sbbl
sbb
mov
inc
es
cld
jae
or
and
adc
nop
add
sahf
call
inc
xor
pop
inc
mov
sub
in
add
inc
in
nop
adc
xchg
xor
jo
mov
or
rorb
ret
leave
nop
test
fs
mov
ljmp
sbb
or
pop
fwait
call
pop
cmp
add
sbb
push
jnp
jae
mov
loopne
punpckhbw
and
jnp
cmp
push
mov
mov
add
mov
adc
imul
dec
adc
jne
xchg
mov
dec
jns
insb
repz
mov
dec
aas
frstor
scas
add
jnp
jp
xor
cmc
andl
jb
adc
loope
in
mov
pop
adc
mov
xchg
jo
dec
lret
pop
loop
cwtl
leave
pop
scas
sub
btc
cmp
test
je
mov
mov
icebp
mov
jecxz
add
sub
js
adc
int3
pushf
add
divl
cs
xchg
cmp
dec
loop
lods
lea
adc
fldenv
mov
mov
int
cmp
adc
mov
insl
lock
inc
lods
inc
cmp
mov
or
jg
mov
pop
mov
adc
mov
pop
jae
mov
loop
mov
fbstp
mov
stos
jecxz
mov
test
scas
lret
inc
loopne
scas
cmp
aas
aam
xchg
dec
mov
sahf
ret
shrb
int3
insl
test
xor
mov
adc
mov
les
and
popa
push
int3
cmp
xchg
push
dec
movsb
std
sub
jo
sub
fidivl
imul
cmpsl
cmc
inc
scas
ffreep
das
cmp
shrl
add
cmpsl
sub
or
aam
rorb
or
pop
dec
shl
push
adc
mov
push
faddl
xchg
pop
dec
enter
outsb
mov
mull
and
push
aas
popf
clc
jno
add
lret
addr16
sbb
sub
mov
pop
fwait
xchg
add
movsl
andb
stc
push
fs
inc
cmp
in
andb
adc
cmp
pop
pusha
or
daa
mov
aad
mov
sahf
xlat
pusha
fsub
cmp
in
leave
flds
cmpb
mov
adc
pusha
jecxz
add
outsb
sub
push
sbb
jmp
lods
nop
push
loope
cmp
push
xchg
stos
les
mov
out
cmp
adc
ret
daa
push
fmull
cmpsb
enter
cmp
xor
repz
mov
cmc
insl
jl
add
dec
push
popf
mov
adc
and
stos
fistpll
lock
lods
mov
adc
mov
pop
xchg
cli
inc
mov
test
mov
add
test
int3
push
xor
or
stos
mov
scas
mov
lret
jno
cmp
jo
pushf
push
mov
push
popf
lret
int
neg
dec
dec
lods
decl
lret
std
in
fstl
dec
dec
inc
add
loopne
icebp
jnp
add
lret
dec
pop
push
pop
mov
dec
inc
jge
push
xchg
test
dec
push
xor
dec
pop
sub
nop
pop
cmp
pop
lret
sbbl
sbb
sbb
rorb
lret
test
mov
ret
pop
fistps
daa
jns
test
repnz
testl
mov
pusha
repnz
roll
adc
ret
push
inc
test
shlb
or
mov
dec
mov
or
mov
das
insb
mov
mov
dec
xchg
push
adc
aam
push
sbb
arpl
ror
or
mov
out
ja
cmpl
test
sub
mov
xchg
lcall
iret
ja
nop
scas
push
xchg
nop
pop
test
dec
aad
or
add
mov
sub
mov
add
pop
into
xchg
sub
into
cld
in
xchg
int
loope
jge
dec
push
mov
outsb
fdiv
int
sbb
sub
dec
adcb
fisubrs
mov
jmp
inc
movsb
dec
mov
sub
gs
push
sarb
pop
aas
sbb
aaa
or
mov
ja
pusha
inc
stc
cmp
pop
xor
pushf
add
inc
addr16
pop
mov
loop
insb
mov
test
sti
repz
sub
shr
pop
pop
lret
sti
gs
pusha
daa
fstpt
add
xor
xor
mov
inc
or
xor
fmuls
inc
pop
in
or
outsl
repnz
or
inc
scas
sbb
ss
sub
in
sub
dec
sbb
xor
ljmp
and
dec
ds
push
sbbb
data16
imul
pop
and
cmp
adc
sbb
sbb
repnz
ds
cmp
xchg
out
mov
pop
or
scas
mov
dec
fmull
sar
movups
jae
clc
sbbl
push
mul
lret
insb
mov
lea
mov
xchg
fisttpll
pop
push
out
add
sbb
mov
mov
fcompl
test
mov
cmp
mov
inc
xor
xor
fwait
cwtl
cmpb
push
jmp
or
test
iret
add
out
inc
shll
out
fcomps
arpl
jl
inc
std
pusha
adc
and
stc
add
push
inc
clc
iret
jg
dec
sub
or
call
mov
mov
call
mov
mov
fisubrl
movsl
cmp
inc
popf
sti
inc
adc
or
xlat
cmp
fstl
jnp
xor
push
cmp
ret
ds
dec
lods
mov
sbb
mov
xchg
sar
jno
xchg
std
bound
pusha
mov
cmp
mov
mov
dec
push
pop
pop
add
mov
add
cmp
fldl
lcall
iret
lea
mov
pusha
mov
jmp
adc
mov
inc
out
pop
mov
ss
aam
xor
sub
insb
push
and
jne
fwait
inc
mov
pop
in
mov
mov
enter
push
hlt
adc
xor
ret
sbb
lret
cld
mov
js
mov
pop
and
mov
push
and
test
outsb
ret
or
pop
jb
repnz
pusha
and
cmp
orb
popa
and
pop
xchg
fldenv
jnp
xchg
jge
dec
xor
out
push
enter
inc
sbbb
aam
in
xchg
aas
repnz
cmpsl
ficoml
cmp
add
jp
jle
mov
fwait
icebp
cmpsl
pop
inc
in
mov
or
rcr
sbb
sbb
inc
addr16
lea
incb
addb
pop
sbb
out
mov
fistl
loopne
dec
in
mov
adc
hlt
lret
mov
imul
adc
pop
arpl
cmpsb
inc
inc
mov
rorl
cmp
or
or
shll
dec
add
pop
aaa
mov
stos
push
adc
shld
sahf
addr16
jns
aad
xchg
leave
cmp
insl
bound
mov
mov
fstl
std
jae
mov
lcall
sbb
aas
and
roll
sbb
mov
call
int
jae
sub
or
push
and
xor
out
add
lock
pusha
or
loopne
xchg
popf
out
push
or
cltd
ja
inc
daa
or
mov
pushf
mov
push
pop
fs
push
hlt
stos
faddl
sub
scas
push
push
bound
mov
mov
data16
pushf
jb
fdivs
or
sbb
popa
push
jnp
mov
imul
orb
xchg
pop
push
movsl
and
add
addr16
test
mov
inc
sbb
and
aad
xchg
dec
sub
stos
cmpsl
or
in
jmp
cmpsb
or
sarb
mov
and
repz
js
sbb
test
out
int
jl
and
mov
sbb
xchg
push
pop
je
scas
mov
jmp
gs
popf
mov
fucomp
int3
push
adc
ljmp
imul
sbb
ds
xchg
mov
fs
mov
adc
mov
mov
push
cmpsb
push
enter
sbb
xchg
mov
jge
dec
mov
sbb
push
sbb
cmp
mov
cmp
add
or
arpl
cmp
xorl
xchg
inc
inc
js
lahf
xor
jge
loopne
and
insl
in
sub
inc
mov
pusha
sbb
pop
stos
mov
stos
lock
xor
sahf
push
inc
daa
out
and
inc
test
mov
mov
jb
pop
arpl
xchg
dec
add
sub
fcompl
dec
stc
daa
in
cmp
mov
sbbl
ljmp
jg
and
clc
pop
cli
fwait
jo
push
pop
addr16
lea
test
mov
push
out
cmpsl
dec
and
sbb
mov
lods
out
sbbb
mov
jle
and
jnp
nop
dec
adc
aam
or
ja
push
mov
inc
mov
add
out
sub
mov
adc
ljmp
test
pop
mov
or
mov
push
mov
dec
orl
push
xchg
in
pop
test
daa
jecxz
push
es
nop
outsl
mov
fdivrl
pop
inc
jmp
enter
pop
clc
dec
xorl
in
xchg
cmc
mov
mov
cmp
xor
out
mov
addr16
sub
sarl
inc
int
addr16
int3
and
ljmp
mov
dec
cmp
sub
push
add
push
gs
pop
mov
push
jp
sbb
mov
push
rorb
and
cli
xor
mov
add
aad
sub
mov
lea
jno
js
sbb
or
xchg
roll
out
fbld
mov
dec
inc
ss
and
sbb
cmpsl
pop
shlb
shl
enter
mov
xchg
jne
fmulp
jbe
test
inc
xor
sbb
jo
mov
fisubs
movsl
push
dec
xor
jmp
mov
pop
and
xchg
push
or
outsl
loope
jle
push
sub
mov
leave
sar
jns
nop
adc
dec
bound
shll
imul
out
jns
in
xchg
jns
in
aad
mov
or
xor
leave
leave
jbe
mov
pusha
cltd
adc
cmp
leave
mov
sahf
mov
dec
push
inc
pop
gs
enter
fistpl
adc
fsubrl
popf
mov
ja
push
xbegin
sub
sbb
repnz
sbbl
paddw
aam
hlt
js
leave
sub
imul
stos
dec
int3
movsl
test
ljmp
stc
mov
rolb
xchg
jle
xor
cmp
fwait
jnp
mov
or
inc
jge
pop
lea
std
xor
dec
imul
adc
aas
ds
std
imul
push
enter
bound
divps
pop
std
sbb
mov
iret
ss
sbb
ficomps
and
ss
and
std
mov
or
push
cltd
pop
pushf
test
ja
scas
ds
jnp
fidivrl
fmulp
push
ret
inc
mov
add
ss
shl
push
push
imul
fldt
jbe
cmc
jecxz
add
sub
fsubs
mov
test
icebp
decl
dec
sar
push
push
push
mov
out
sar
lds
jne
sub
sbb
shlb
lock
ret
xor
mov
pop
sbb
xor
ljmp
loope
out
sub
add
mov
bound
cmpb
xchg
jnp
mov
sbb
out
inc
or
aam
lcall
xor
pop
mov
je
xor
repnz
aad
pop
mov
xchg
sub
jl
stos
js
cmp
dec
shll
adc
jp
and
shrb
mov
fdiv
orl
mov
adc
cmp
mov
shlb
aaa
pop
std
nop
rcl
andl
out
xor
adc
call
leave
or
push
in
inc
xor
push
add
inc
ja
sbb
jecxz
mov
mov
repnz
stc
dec
dec
push
add
and
ret
inc
lcall
int
cmp
rcrl
shlb
out
mov
lods
cli
mov
inc
ret
inc
imul
mov
repnz
xchg
ds
cld
xor
push
stos
test
inc
or
push
ss
orl
cwtl
aam
aas
negb
pop
sub
jb
push
xor
bound
popa
push
push
fmull
imul
insl
dec
cmpsb
mov
in
cmp
scas
fwait
mov
adc
cld
stos
pop
stos
mov
cmp
cmp
add
movsb
pop
jne
dec
mov
fwait
insb
and
pop
mov
sub
hlt
cmpsb
sub
popa
or
arpl
aas
push
mov
or
test
fbld
inc
jns
lret
scas
sahf
insl
mov
out
mov
in
xchg
enter
dec
arpl
push
pop
and
cmp
lret
pushf
mov
inc
pop
push
lea
test
xchg
shll
cld
pop
mov
cli
dec
pop
adc
and
stc
push
divl
push
mov
xchg
and
xor
xchg
pop
dec
cmp
out
push
mov
or
testl
aaa
and
fnstcw
pop
ret
int
inc
rclb
cmpsl
push
scas
jne
mov
pushf
and
mov
aas
sub
xchg
outsb
sub
rolb
in
hlt
cmp
testb
mov
stos
fwait
mov
inc
leave
add
out
mov
adc
xor
iret
xor
cwtl
and
cmp
aad
dec
adc
pop
cmp
xchg
mov
push
data16
add
out
loope
add
adc
loop
bound
adc
push
call
jbe
sti
shlb
adc
pshufw
bound
jecxz
movsl
cmp
mov
jae
inc
xlat
adc
mov
adc
or
pop
gs
xchg
sahf
andb
add
in
sbb
jmp
sti
xor
enter
orl
add
iret
mov
inc
pop
fstps
push
nop
add
and
in
stc
sbb
pop
insb
out
jb
jns
cmp
mov
imul
mov
jle
lock
pop
shrl
popa
lea
fmuls
cmp
rcr
pusha
and
les
enter
jnp
sbb
pusha
fsubs
pop
filds
adc
xor
inc
loopne
adc
add
inc
movsl
or
sub
ja
sub
cli
stos
rcr
jb
rcrl
add
fsubr
mov
popa
movsl
inc
push
dec
push
sub
adc
rcrl
jns
repz
dec
pop
aas
pop
ret
cmp
lcall
jmp
dec
movsb
adc
fisttps
ljmp
loopne
lock
xchg
pop
sub
push
imul
adc
mov
hlt
and
popa
leave
or
inc
cmp
mov
xor
les
xchg
jmp
jnp
cmpb
mov
loopne
in
call
sbb
add
lea
inc
add
push
adc
jns
cli
inc
lea
jmp
sti
pusha
bound
cmpsl
xchg
in
repnz
popf
not
mov
pop
and
lret
mov
push
jg
pop
dec
dec
or
rol
inc
adc
fstpt
rclb
outsl
pop
jbe
lea
in
ja
lea
dec
inc
and
xorl
jge
int
mov
fcmovnbe
push
or
pop
pop
inc
in
pop
insb
aam
lods
in
in
push
xchg
cltd
mov
lret
or
xor
add
mov
pop
sbb
pop
jg
icebp
mov
dec
push
mull
mov
xchg
xchg
insl
lock
mov
jne
insb
push
imul
cwtl
mov
xchg
push
fldlg2
push
lds
aaa
mov
leave
jmp
jl
jne
popf
jle
mov
inc
inc
jae
das
fs
or
imul
mov
xor
xor
arpl
jne
add
js
mov
xchg
cmc
fstl
cltd
jno
adc
int3
dec
daa
mov
sahf
into
sbb
mov
leave
push
lods
in
out
pop
popf
adc
dec
inc
and
je
or
jo
sub
and
fnstcw
scas
scas
sahf
and
mov
xchg
roll
pop
test
es
outsl
dec
test
cmpsb
scas
mov
out
xchg
push
outsl
adc
or
adcl
push
push
mov
rcl
pop
out
adc
adc
push
loope
dec
inc
xor
fdivl
shrb
adc
stc
xchg
mov
push
cld
dec
je
sub
add
or
adc
cmp
xchg
lret
not
notb
shrl
lods
xor
pop
or
lds
jae
cmp
jae
jns
ss
scas
push
push
mov
mov
adc
gs
sbb
sub
test
or
lods
jae
pop
pop
in
hlt
mov
sub
mov
movsl
xor
fimuls
xor
decb
cli
jge
mov
add
push
aas
mov
fimuls
push
jne
and
mov
rorl
mov
or
call
mov
stc
fnstsw
mov
sub
mov
and
mov
je
push
movsb
roll
mov
ficoml
xchg
lods
jmp
dec
xchg
arpl
popa
lds
das
pop
mov
cld
movsl
mov
mov
cmpl
add
stos
sbb
lcall
jecxz
dec
sub
ds
aaa
test
xor
xchg
in
mov
and
cmpsb
add
mov
add
jae
stos
jl
sbb
jo
imulb
sahf
push
push
outsb
jmp
add
scas
jecxz
shl
adc
push
adc
loop
out
xor
mov
jbe
jnp
xchg
int3
jb
les
jmp
sub
mov
ffreep
inc
or
and
in
mov
movsl
inc
test
or
push
ds
sti
jae
fistpll
jne
inc
fdiv
testb
dec
push
push
sbb
add
lods
dec
add
fildll
lret
stc
push
dec
xchg
pop
test
in
shl
push
pop
mov
popa
jp
insl
xchg
and
leave
pushf
adc
cmp
cmp
insb
push
repz
scas
inc
in
out
pushf
jo
mov
cmpsb
sub
stos
push
sbbl
stos
ja
int
outsb
rcll
push
loope
andl
movsb
lea
jno
pop
nop
inc
or
jmp
sbb
loop
jecxz
shr
pusha
movsb
hlt
cli
add
cmp
jb
cmp
inc
push
stc
hlt
outsl
outsl
insb
add
jl
lret
lods
mov
mov
subb
pop
jmp
jno
jg
aad
bound
xor
or
sbb
adc
jmp
mov
movsl
jle
in
cli
mov
adc
aas
pop
dec
add
push
cmc
sub
sub
divb
mov
lret
and
cmp
es
pop
imul
inc
push
lds
jae
pop
xchg
jns
in
fs
mov
test
dec
imull
pop
adc
insl
mov
sub
mov
add
dec
cmpsb
inc
cmp
fcompp
push
cmp
or
scas
loopne
mov
outsl
out
addl
ret
add
shlb
jp
stos
dec
ljmp
push
add
out
scas
push
lods
in
mov
cmp
into
les
sbb
insl
loopne
pop
rorl
push
aam
bound
pop
ret
insl
mov
test
mov
imul
xor
and
aam
adcb
dec
or
in
adc
jmp
xchg
out
cs
das
sbb
inc
lds
jge
pop
incb
jae
lret
xor
push
jl
out
out
mov
das
mov
and
ds
iret
negl
ss
dec
popl
stos
stos
xor
repz
nop
icebp
xor
mov
repnz
outsb
add
into
mov
sti
mov
mov
pop
loop
pop
jecxz
jmp
nop
cmc
outsb
xchg
dec
add
pop
mov
insb
enter
add
xor
xchg
lods
rorb
sub
mov
xchg
jmp
jmp
mov
adcb
repz
cltd
dec
push
sub
lea
sub
mov
call
push
cmp
push
repnz
fs
mov
loop
xchg
lahf
mov
test
push
push
arpl
repz
mov
pop
and
nop
cmpsl
out
adc
push
push
jb
jo
cmpsl
imul
xorl
push
mov
cmp
stc
jg
std
jle
gs
sbb
cmp
mov
sbb
cmp
rclb
push
les
arpl
cmp
mov
inc
xchg
xchg
stos
out
lods
leave
mov
movsl
int
cmp
adc
and
jne
xor
push
pushf
lock
pop
push
ret
dec
clc
add
cmpb
xchg
outsb
and
stos
je
add
daa
fcoml
jae
out
xchg
inc
fnstenv
insb
add
jecxz
mov
mov
fistpl
sub
outsl
rcrb
inc
lahf
out
sbb
stos
movl
mov
sub
fnstsw
fdecstp
xchg
jb
jp
cld
push
mov
jns
mov
sub
jns
mov
shl
mov
cltd
push
xchg
mov
xor
xchg
bnd
insw
dec
fsubs
sub
test
and
mov
sub
sahf
mov
jp
fucom
xlat
xchg
loope
jno
jmp
sub
nop
rcll
pop
repz
fistl
scas
xlat
inc
in
stos
sbb
pop
adc
jne
xchg
cwtl
lahf
sbb
call
cmp
push
mov
lods
mov
and
push
push
data16
cmp
and
mov
jbe
mov
aaa
dec
fldl
xor
pop
in
pop
push
sub
test
hlt
jp
fiadds
pusha
and
add
jne
adc
cmp
jno
xchg
ret
iret
clc
add
jbe
rcl
ljmp
in
rcll
jge
xor
lahf
xchg
int
sub
pop
mov
bound
cmc
or
sbb
out
add
aas
pop
sub
inc
flds
add
mov
mov
jnp
pop
out
ljmp
jo
mov
mov
into
sbb
xor
inc
cvtps2pd
push
fists
cmp
sbb
push
arpl
roll
mov
push
subl
sbb
or
add
adc
push
cmp
insb
test
insl
mov
xor
imul
xchg
pop
loopne
ror
inc
push
inc
sub
and
inc
shrb
fs
push
sbb
loopne
mov
int3
ss
mov
lea
test
and
and
jo
int3
pop
aam
mov
dec
adc
hlt
xchg
testl
loop
jp
inc
sbb
push
outsl
sub
cmp
adc
je
xor
pop
push
jge
adc
add
or
mov
push
dec
or
mov
int3
dec
jb
mov
icebp
stc
lahf
cmpsl
aad
movq
jnp
loope
cmc
sub
cltd
outsb
inc
leave
scas
add
xchg
lret
mov
cwtl
or
es
dec
pop
mov
adc
mov
cwtl
scas
les
bound
int
or
xchg
ljmp
mov
jp
ljmp
lcall
insb
push
dec
pop
dec
cltd
push
push
cmp
xchg
std
pop
stos
xchg
hlt
jae
roll
ret
roll
rcrb
or
xor
mov
aas
xchg
cmp
xchg
scas
imull
sub
sti
sub
lret
jns
jg
sub
cltd
inc
mov
push
mov
add
mov
mov
xchg
sub
hlt
rcll
xchg
jmp
lea
push
or
xchg
popa
or
in
push
push
test
xchg
lret
das
inc
rcr
test
popa
and
pop
dec
jmp
insl
shlb
cmp
roll
std
jae
inc
jle
and
cbtw
fs
testl
mov
test
cmp
gs
ds
fwait
adc
or
mov
pop
and
jecxz
jne
push
inc
sbb
mov
fadds
addb
sti
js
push
push
xor
jbe
es
aaa
sqrtps
pop
inc
mov
movsb
insb
cltd
push
jl
stos
add
es
call
mov
pop
pusha
leave
jmp
js
mov
into
les
aas
inc
add
scas
call
cld
adc
cmp
or
mov
int
push
scas
shr
cltd
mov
movsl
mov
out
stc
jb
pop
out
sbb
and
pop
add
push
push
mov
test
test
lahf
mov
add
push
xchg
xchg
daa
arpl
jmp
fcomps
xor
mov
shrb
ret
popf
lret
repz
mov
jb
dec
ds
in
dec
ret
repnz
mov
jbe
scas
rcll
jp
pop
dec
xchg
mov
xchg
and
mov
sbb
shr
pop
ljmp
push
pop
xchg
mov
or
scas
jnp
add
adc
sub
neg
push
pop
xor
ljmp
mov
and
ds
in
or
mov
sbb
in
push
decb
cld
mov
call
and
xchg
stos
inc
mov
mov
jo
add
mov
hlt
mov
insl
cld
and
cmpsb
test
or
push
mov
xor
std
scas
movsl
test
pusha
int3
push
xchg
scas
push
loope
iret
mov
dec
repnz
mov
or
stos
fdivl
pop
xchg
stc
fst
int3
inc
xchg
pop
stc
cmc
rcl
mov
out
pusha
ss
sbb
sub
mov
lahf
pop
data16
or
jecxz
sahf
mov
incb
std
dec
clc
or
push
cmp
mov
popf
jmp
lods
inc
xor
push
push
jno
jne
andb
popa
cmpsl
gs
into
push
sub
cli
out
loope
xorb
cmp
je
mov
adc
mov
dec
das
adc
lea
mov
addr16
cli
jg
push
rcrb
push
shrb
fldcw
xor
cmp
xor
loopne
jns
jg
je
iret
jne
fstl
ss
pusha
xchg
ret
popa
insb
aad
stc
sbb
xchg
xor
aam
outsb
sub
fisubrs
mov
rcr
xor
xor
push
popa
cltd
cmp
movsb
mov
cmpsb
nop
xchg
xor
ss
clc
or
xchg
aas
mov
jno
loopne
addb
out
pop
mov
daa
mov
and
sub
xlat
fwait
adc
cmp
cli
xor
popf
push
xchg
and
lret
maxps
dec
mov
mov
mov
out
push
sub
hlt
mov
jmp
fwait
pop
popf
pop
fimull
popf
je
pop
pushf
cmp
loop
dec
adc
pop
arpl
into
adc
dec
aad
push
cmovo
or
cltd
scas
sub
jp
cmp
jns,pt
pushf
mov
pop
cmpsb
in
adc
or
int3
rclb
ret
pop
jno
cmp
imul
popa
lcall
mov
ret
hlt
mov
cmp
jmp
xor
fimuls
sbb
adc
hlt
popf
adc
popw
in
lds
dec
adc
push
fimull
jnp
test
loopne
pop
or
pop
mov
popf
movsl
repnz
mov
ret
add
dec
lcall
push
sbb
jmp
addr16
mov
adc
js
gs
enter
push
xchg
push
cmp
into
jecxz
push
lods
jae
pop
dec
sbb
aam
rcr
fwait
andl
ret
fdivrl
mov
xchg
mov
or
pop
ret
inc
stc
js
dec
cli
fidivrs
push
scas
lock
nop
sub
fisttps
maxps
add
jge
dec
pop
popa
test
inc
pop
push
and
xor
fistpl
sbb
loopne
in
or
pop
fistpl
lret
hlt
iret
mov
ss
sub
mov
out
xor
fs
lcall
push
jmp
dec
adc
jl
push
inc
pop
addl
ljmp
xor
jo
out
pop
mov
cld
les
sbb
pop
sbb
or
decl
add
cmp
mov
into
xor
inc
movsb
jnp
adc
je
mov
in
xor
gs
aaa
in
popf
add
xlat
jl
cs
push
sbbb
mov
adc
flds
mov
repnz
mov
xchg
add
scas
int
push
lock
pop
add
push
setp
adc
aas
jno
xor
call
cmp
xor
or
mov
push
and
xor
sahf
gs
ss
xchg
adc
imul
imul
in
pop
sub
sti
mov
inc
cmp
mov
dec
inc
scas
fwait
jmp
pop
or
into
out
js
das
aaa
push
or
or
enter
mov
loope
fmuls
jecxz
and
cltd
add
mov
pop
mov
add
inc
aad
aas
adc
sub
repz
sahf
inc
inc
pop
or
sub
fwait
xor
inc
xchg
data16
out
pop
test
sbb
mov
stc
jp
mov
mov
inc
jae
gs
notb
mov
sbb
rcll
xchg
jbe
rcrl
mov
push
test
sbb
dec
lar
push
test
xlat
std
imul
cwtl
hlt
jp
mov
loopne
mov
lahf
add
shrb
call
inc
xor
xor
int
leave
cmp
lret
xchg
mov
insb
xor
or
pushf
cmp
stos
dec
add
and
xchg
nop
cs
nop
adcb
mov
adc
xchg
iret
divb
pop
int3
sbb
mov
mov
mov
sub
jle
lds
ja
pop
inc
sbb
lods
repnz
adc
push
es
test
outsl
out
fmuls
icebp
xlat
scas
daa
inc
in
fsubs
adc
and
dec
jmp
test
xchg
adc
xchg
jae
sbb
xchg
aam
stos
daa
lret
mov
cmc
mov
call
sub
shlb
mov
stos
out
je
inc
popl
daa
jmp
mov
data16
outsb
test
mov
test
daa
fwait
and
jns
inc
iret
add
movsb
cmp
je
and
mov
sub
sub
mov
pop
sbb
dec
ret
stos
in
pop
inc
inc
notb
lret
inc
int
sub
sub
inc
jmp
jne
imull
mov
std
in
aaa
scas
mov
cmp
mov
outsb
sarb
inc
in
test
jns
lea
add
ror
enter
cmp
test
test
mov
mov
nop
mov
outsb
xor
movsl
sub
jne
cmp
rorb
sub
cmp
adc
sti
mov
jge
mov
adc
mov
lds
adc
sti
das
dec
add
std
mov
orl
xchg
pusha
mov
lea
call
sub
andb
sbb
pop
inc
lds
in
fwait
mov
xchg
hlt
mov
push
jnp
pop
xchg
dec
into
cld
rolb
movsb
mov
notb
lea
or
sub
push
out
inc
rcll
std
loope
mov
xchg
out
xchg
mov
xchg
movsl
and
push
imul
push
pop
push
pop
add
pop
fstpl
movsl
sub
xchg
jmp
jle
jg
pop
and
cltd
pop
js
out
push
mov
cwtl
adc
cmp
stos
int3
jne
cmp
dec
aas
dec
mov
shrl
int3
loope
xchg
mov
arpl
dec
cmp
setge
mov
ds
or
push
push
movsl
scas
sub
xchg
mov
testl
cwtl
sarb
mov
stc
cwtl
and
jecxz
int3
sbb
jle
pop
mov
clc
or
lret
dec
or
dec
loope
push
jmp
ljmp
js
and
subb
mov
push
lret
mov
inc
rcrb
jns
cltd
dec
sbb
dec
or
mov
push
fstpl
adc
dec
xlat
cmpsl
mov
iret
outsb
lock
add
maxps
ja
push
pop
das
or
xchg
cli
mov
sarb
push
and
adc
inc
sub
mov
lea
pop
pop
mov
pushf
je
add
dec
adc
adc
mov
inc
jecxz
scas
pop
insl
jl
mov
cmpsb
out
push
out
or
xor
push
cmpsl
test
adc
addr16
ret
popf
daa
stc
lret
mov
xchg
adc
dec
sub
mov
jecxz
adc
sub
inc
daa
xchg
test
push
js
jmp
mov
push
push
loop
mov
jl
cs
loopne
sahf
mov
mov
xlat
stos
ja
push
gs
lods
mov
scas
xchg
es
mov
pop
cld
ds
push
hlt
lea
push
jno
jns
xlat
or
xchg
add
mov
pop
repnz
sbb
out
sbb
pop
jne
xchg
jno
xchg
lock
outsb
jbe
mov
cmp
and
out
clc
pop
lcall
cmpl
lret
jb
inc
aam
mov
insb
int3
pop
mov
imul
inc
jnp
adc
adc
xchg
loopne
and
testb
cld
adc
cmp
loop
int3
scas
jg
xchg
ds
test
sbb
ret
cmpsl
imul
pop
mov
or
xchg
call
inc
or
movntq
mov
or
inc
cmp
fwait
hlt
sbb
bound
repz
xor
lock
sbb
ficoml
cs
or
push
outsl
xchg
push
gs
or
push
xor
mov
dec
fldz
jg
jl
lahf
fistl
test
popf
outsb
and
lcall
mov
jecxz
inc
aam
cwtl
les
fsubs
arpl
cmp
pop
cmp
rcl
mov
adc
dec
call
cmc
mov
jae
shlb
xchg
movsl
sub
shrb
cltd
jmp
or
xchg
jbe
push
mov
shrb
fsub
mov
jmp
mov
push
lock
cmpsl
xchg
into
xchg
jno
xchg
and
hlt
xor
incb
mov
fcmovnbe
jle
clc
clc
or
nop
mov
xchg
bnd
push
dec
arpl
sahf
add
iret
das
inc
call
je
scas
push
inc
rol
mov
bound
sahf
and
lods
in
lret
stos
xchg
cmp
mov
add
pusha
sub
dec
mov
mov
cltd
adc
dec
sbb
xchg
out
adc
mov
int3
repnz
sbb
push
ret
xchg
add
mov
mov
cmp
push
adc
and
cwtl
out
add
aaa
mov
push
inc
int3
sub
cmp
test
push
add
dec
jo
xchg
rorl
add
jle
mov
push
push
push
cmc
in
push
xlat
xlat
subl
xchg
mov
adc
fsubs
xor
dec
dec
shr
cwtl
arpl
mov
push
sahf
ss
jne
mov
lret
js
stc
addr16
out
std
mov
outsb
out
add
or
movsl
fneni(8087
sub
sahf
out
xor
fs
test
clc
jecxz
outsl
out
mov
mov
test
ss
push
and
test
imul
cmpsb
xlat
push
xor
mov
std
fdivp
pop
in
add
jo
xor
das
dec
inc
repz
xchg
push
jmp
fcomp
test
jne
mov
or
mov
jle
mov
xlat
mov
aad
mov
popf
adc
mov
jg
mov
shrl
out
filds
cli
add
xchg
mov
mov
push
add
xor
adc
jo
cltd
and
pop
pop
jo
adc
inc
add
mov
inc
fcmove
ficoms
push
into
sbbb
jns
jo
mov
sahf
push
lods
xorl
add
fcomip
in
cmp
jl
push
mov
cltd
popl
es
shll
sub
pop
fimuls
enter
adc
and
popa
xchg
insb
xorb
inc
adc
jnp
mov
pop
movsl
cmpsl
add
ljmp
lock
or
or
push
inc
ret
fildll
fistpll
xor
mov
xor
jb
xchg
in
xchg
dec
cmp
mov
xor
frstor
adc
int
decb
and
push
inc
xor
cmp
notb
sub
and
jge
adc
adc
sbb
movsl
cmp
repz
call
insb
pop
and
pusha
pop
or
cmc
lods
les
unpckhps
insl
gs
adc
int3
mov
mov
pop
lcall
mov
rcrl
bound
sbb
push
fs
pop
inc
inc
dec
les
mov
nopl
mov
inc
jl
insb
xor
lret
std
mov
cmp
nop
jno
fcom
jp
mov
add
int
mov
repnz
jmp
xor
imul
xchg
in
pop
ja
and
dec
sti
or
mov
sub
lds
iret
lea
dec
xchg
xchg
incb
aad
xchg
pop
and
lea
jmp
cltd
daa
pop
adc
pop
sub
pop
mov
xchg
rolb
push
lods
mov
sub
jg
mov
or
out
in
pusha
mov
leave
sbb
xchg
mov
loope
mov
dec
sbb
sub
iret
shlb
sub
rclb
and
mov
pop
outsl
or
dec
mov
lret
sub
xchg
mov
jmp
test
cli
andb
inc
lods
push
ror
test
adc
mov
adc
pop
push
into
div
test
fistpll
add
ss
push
inc
cmp
jmp
push
jae
inc
outsb
repz
inc
dec
jmp
cmp
aad
imul
cmp
push
test
adc
jbe
enter
sbbl
xor
mov
or
lods
fsubs
mov
cmovo
sub
inc
lahf
cmpsl
insl
pop
push
xchg
je
cmc
loop
rcrl
xchg
mov
hlt
out
push
lods
fists
call
dec
call
cwtl
leave
adc
xor
xor
inc
arpl
loope
cmc
lret
xor
in
ljmp
out
popf
repnz
sahf
dec
pop
test
and
adc
hlt
repz
stc
mov
cld
add
fsubs
clc
ret
mov
mov
jp
enter
xorl
js
icebp
xchg
ja
pusha
cmc
leave
fists
mov
push
cld
je
cli
jns
mov
fstpt
repz
mov
jge
mov
mov
cmpsb
inc
xchg
dec
jae
adc
add
in
and
push
jmp
cmpsl
or
lret
mov
sbb
dec
jbe
shlb
cs
pusha
lret
orl
sbb
sbb
pop
in
prefetch
scas
add
test
push
jb
sbb
lret
fstpt
fndisi(8087
lret
andb
sbb
xchg
ret
std
jbe
scas
sbb
xchg
aad
lret
or
lods
loope
push
lods
cmc
and
ret
and
shl
test
lret
fstl
mov
dec
pop
sbb
aam
mov
lret
cmp
mov
jmp
dec
ret
jg
cmc
cmp
push
or
decb
adc
mov
bnd
call
mov
jnp
push
and
dec
mov
cmp
and
pop
mov
aas
cmp
mov
inc
cmp
gs
xor
xchg
mov
sub
std
push
shrb
add
push
pop
dec
pop
cld
inc
mov
xor
popf
adc
loopne
andb
lahf
cwtl
scas
out
add
sub
and
aad
push
pusha
hlt
mov
nop
cmp
ds
gs
sbb
xchg
mov
adc
and
scas
dec
xor
xchg
lods
ljmp
fnstsw
dec
lods
sub
gs
mov
inc
cmp
dec
roll
adc
shll
inc
jmp
push
int3
jb
pop
sbb
push
mov
xlat
xor
jo
mov
sub
xchg
loope
icebp
mov
adc
or
add
mov
out
adc
cmp
xor
push
dec
gs
aaa
cld
mov
jecxz
mov
fcmovu
inc
push
xor
testb
in
cld
cmc
dec
movsb
push
mov
test
movsb
imul
pushf
call
pop
adc
sbb
push
in
sbb
lret
aaa
cmpsb
int
push
or
add
pop
jl
cmpsl
sub
and
stos
xor
rorb
inc
ret
and
mov
int
bound
xor
clc
mov
inc
pop
in
xchg
out
shrb
shlb
inc
insl
xorb
into
ja
cmpsb
mov
mov
outsb
arpl
pop
mov
xchg
ljmp
mov
es
test
rcr
inc
xor
jmp
repnz
jb
pop
push
mov
mul
test
adc
push
mov
and
loope
jp
xor
cmp
mov
and
sarl
mov
ljmp
repnz
in
fwait
jge
push
scas
bound
sbb
xchg
or
jp
pusha
sbb
loop
sub
lock
scas
mov
or
pop
xor
lea
mov
jge
fst
es
and
mov
or
mov
mov
sbb
sbb
imul
inc
in
movsb
jae
adc
mov
js
pop
arpl
jmp
add
mulb
or
pop
add
outsl
std
push
sarb
and
sahf
enter
jae
scas
out
push
movsb
cs
loopne
cmp
sbb
ficomps
push
pop
adc
out
ret
andb
shll
je
xor
mov
mov
jge
fisubs
sub
in
aad
and
imul
gs
pop
adc
jl
lret
mov
cs
pop
into
in
sub
jne
or
add
imul
or
and
lea
ret
scas
dec
sbb
mov
cltd
jmp
xor
jl
sbb
xchg
test
les
push
or
jns
or
inc
fnsave
push
or
pop
pop
xor
rcrl
xchg
adc
xor
sbb
dec
cli
lcall
mov
pusha
fmull
iret
enter
outsl
mov
repnz
js
lock
jnp
sbb
inc
xlat
in
pop
push
shlb
jecxz
or
imul
push
dec
fwait
rcrb
out
jmp
cmpl
aaa
mov
stc
push
in
fs
aad
pop
lea
in
neg
xor
push
out
test
fadd
sbb
mov
xchg
pop
cmp
mov
xor
xor
ret
push
ror
aaa
push
sub
arpl
sub
cmpsb
pusha
movsl
int3
test
call
jns
mov
push
insl
leave
cmp
lcall
xlat
mov
rorb
pop
fwait
mov
xchg
adc
adc
adc
dec
dec
mov
lahf
aad
fwait
arpl
mov
or
test
inc
xchg
push
push
sti
pushf
aas
add
or
adc
daa
test
outsl
or
pusha
jg
iret
ss
push
lahf
cmp
jmp
aas
imul
add
add
cltd
inc
pop
xchg
pop
xor
test
dec
mov
std
mov
pop
and
aaa
mov
aaa
push
repz
xchg
mov
jae
cmp
jo
dec
rorl
movsl
hlt
sahf
sbb
ja
ret
notl
pusha
lahf
bound
dec
scas
mulb
mov
int
jne
and
int3
ret
pop
sbbb
push
sub
fdivr
or
sahf
jl
adcb
enter
mov
push
xchg
add
xor
mov
or
push
cmp
mov
inc
mov
add
mov
sub
jmp
mulb
stos
leave
ja
lock
sti
xchg
or
inc
fwait
jbe
mov
pop
inc
push
jmp
pop
xchg
call
arpl
mov
mov
and
lds
mov
aaa
dec
ror
hlt
inc
outsb
inc
push
mov
js
xchg
jbe
imul
outsl
andb
xchg
adc
fisttpl
push
jp
int
cmpsb
jp
pop
cwtl
rcl
lods
imul
add
icebp
jne
xchg
push
jp
mov
xlat
mov
add
jno
sub
and
xor
add
sbb
pop
arpl
sub
jo
jnp
dec
int
pusha
cmpsb
data16
jmp
lock
mov
mov
xchg
aam
sahf
sti
ret
cli
sbbl
mov
stc
add
loope
jns
pop
dec
iret
mov
cmp
mov
cmp
fstpt
inc
cltd
cwtl
sahf
xchg
fidivs
lock
stos
in
adc
addr16
das
daa
xchg
out
pop
push
insb
mov
mov
fcomps
jnp
mov
push
xor
in
fwait
or
aad
mov
int
insb
jne
push
jae
popf
clc
pop
loope
aas
in
mov
cli
add
jae
sbb
push
dec
sbb
shl
mov
cmp
xchg
loope
xor
cmp
cmp
pop
push
xchg
mov
test
les
adc
sarb
ss
jg
fmull
mov
and
adc
jbe
or
imul
js
dec
call
add
cli
sub
mov
cmp
mov
or
inc
addr16
popf
and
icebp
pop
shl
arpl
lds
ljmp
or
ds
sbb
xchg
je
mov
and
dec
xlat
push
movsb
xchg
jmp
clc
or
aad
lods
add
mov
nop
sub
add
mov
aaa
inc
std
dec
xor
pop
inc
xor
push
sahf
sbb
pop
jo
test
mov
and
lods
imul
push
jge
adc
push
lcall
jmp
or
cmp
cmpsl
jecxz
sub
pop
xchg
lret
sub
fs
fnstcw
inc
push
lret
jno
mov
adc
sti
inc
add
in
mov
xor
roll
lds
and
daa
jp
repz
dec
inc
nop
movsl
and
adc
pop
mov
sbb
fistpll
clc
push
lahf
mov
push
adc
lods
js
and
mov
and
push
jnp
adc
aas
mov
jp
xchg
push
mov
icebp
test
in
xor
jg
sbb
pop
xor
scas
add
push
scas
daa
shll
pop
inc
js
fwait
mov
xchg
inc
adcb
xchg
movsl
cmp
or
out
sbb
bound
sahf
imul
mov
das
mov
outsl
shrl
pop
pop
inc
jbe
in
mov
rcll
stc
inc
sarl
loopne
addr16
jp
pop
push
es
idivb
sti
sub
dec
fists
test
jns
lret
mov
xor
mov
xchg
popf
cmc
mov
inc
mov
push
push
paddusb
std
mov
scas
mov
add
jge
push
fldt
sar
xchg
adcl
outsl
inc
cmp
stc
nop
outsl
ret
inc
out
adc
fs
xor
mov
sti
sbb
or
and
sbb
adc
push
inc
xorl
adc
mov
push
sbb
cs
ficompl
popa
push
les
mov
lods
sbb
ret
cltd
outsb
mov
fs
adc
xchg
inc
out
icebp
or
fiadds
enter
dec
or
cmp
popf
lds
xlat
inc
add
mov
mov
inc
pop
ss
jle
dec
inc
out
ds
cmpsb
push
jns
xchg
pop
jnp
in
addr16
clc
popf
inc
and
xor
leave
out
cmpsb
lock
pop
pushf
sub
ljmp
test
sahf
aam
mov
clc
mov
and
mov
es
imul
loopne
hlt
clc
loope
xchg
scas
rorb
in
adc
pop
cmc
pop
push
jl,pn
rcrb
and
not
and
fstl
outsl
sahf
imul
jb
dec
xchg
cmpsl
cs
jp
mov
sub
pop
mov
loopne
xchg
fstl
push
lcall
stos
xchg
jno
sbb
dec
adcb
mov
mov
pop
imul
cld
leave
mov
daa
addr16
jmp
cld
cwtl
test
lods
mov
pop
xchg
imul
test
xchg
pop
mov
pop
lock
lea
loop
ret
es
in
ss
lods
mov
mov
clc
aas
xchg
mov
in
pusha
dec
push
push
and
mov
or
pop
pop
jnp
fsubrs
stos
clc
xlat
loopne
ja
pop
push
sti
jle
dec
aas
jo
aad
cmp
rolb
fisttps
dec
ret
jno
cs
add
inc
lcall
fnstcw
push
and
xor
loope
mov
pop
mov
lret
mov
pop
mov
cmp
fsubr
dec
insl
popa
sub
fldcw
hlt
jae
or
repz
stos
inc
hlt
jmp
lahf
lcall
push
lods
xchg
arpl
xchg
out
jle
add
aam
inc
or
int
add
test
add
sbb
sti
push
jp
std
repz
imul
cmpsl
or
repnz
xchg
dec
push
scas
xor
cmp
sub
cmp
pusha
xchg
lret
cmpl
fsubrs
jle
ret
popf
fistps
popf
inc
imul
xchg
add
inc
leave
fisttpl
rorl
jl
push
or
jae
jo
mov
movsb
add
push
mov
es
jae
pop
in
push
sbb
out
lea
lret
and
mov
insb
add
aad
arpl
xchg
aaa
mov
mov
pusha
aam
jnp
sub
mov
popf
xor
mov
push
push
xor
mov
mov
call
mov
mov
mov
dec
fxch
insb
gs
cmp
sar
je
dec
mov
dec
xchg
mov
mov
push
inc
xchg
xchg
mov
pop
cmp
or
inc
jae
sarl
and
addr16
pop
cwtl
stc
mov
fcomps
lods
shrb
push
lods
subb
mov
pop
aad
gs
xor
movsb
comiss
aaa
push
xchg
jae
stc
imul
add
cli
push
pop
push
sub
lods
push
cld
fsubrs
movsb
mov
mov
dec
adc
jbe
xor
jmp
out
fisttpl
cmovs
jmp
add
mov
mov
mov
repz
dec
notl
sub
mov
add
push
sbb
pop
xchg
loope
ss
sarl
sbb
lea
nop
push
js
jmp
cld
sahf
mov
or
outsb
jb
mov
push
aad
cs
out
into
mov
pusha
mov
jbe
es
test
and
std
and
jl
xrelease
lret
push
inc
cmp
jmp
inc
stc
in
mov
mov
test
and
xor
push
iret
out
inc
in
fcoms
subb
out
pop
mov
sbb
inc
cmpsl
lock
sub
imul
cmp
pop
gs
lahf
pop
sub
or
test
pop
or
sbb
data16
jae
mov
sub
mov
push
les
loope
mov
mov
adc
cmpsb
jecxz
push
clc
mov
test
or
and
xchg
inc
ja
mov
inc
int
sub
jno
dec
mov
inc
dec
adc
les
mov
imul
ret
inc
inc
test
lret
popa
out
mov
sbb
push
inc
and
mov
ror
jne
cmpsb
lret
ret
inc
leave
sub
and
mov
mov
xorb
repnz
gs
mov
scas
or
arpl
and
ljmp
ja
jbe
mov
add
push
cs
and
xor
mov
out
pusha
negl
and
push
mov
mov
aaa
jo
xor
cmp
add
daa
andl
je
or
and
jp
xor
cmp
pop
int
pop
lret
or
ljmp
mov
cmp
dec
repnz
mov
out
psllw
into
ja
sub
mov
cmpsb
int3
dec
push
aas
into
sbb
imul
mov
adc
in
lret
xor
mov
mov
fisttpll
adc
int3
cmpsb
mov
sbb
psrad
orl
cld
sub
or
mov
rolb
popf
sub
aad
mov
dec
mov
sbb
or
aas
sti
scas
stos
mov
or
or
outsb
lods
xchg
jbe
or
les
das
xlat
fcmovbe
aas
std
push
addr16
sub
mov
jmp
ret
roll
addps
fcoml
in
and
and
test
xchg
sub
xor
sub
pop
or
jecxz
int
aaa
sub
and
mov
inc
popf
icebp
icebp
or
or
sbb
sub
outsl
insb
in
add
rcrl
stos
jle
bound
arpl
jl
jmp
outsl
fcompl
insl
add
cltd
adc
nop
pop
pop
pop
and
or
arpl
push
movsb
ss
sbb
shlb
ja,pn
cmp
out
sbb
mov
inc
cmc
inc
sbb
out
push
mov
imul
pushf
inc
nop
fs
addr16
mov
xor
mov
and
adc
sub
stos
jle
sub
out
inc
lret
gs
popa
dec
gs
sub
or
test
or
cmp
ss
les
int
subb
in
cmp
movsb
mov
call
movsl
mov
sbb
addl
adc
data16
dec
jp
and
dec
dec
inc
mov
xor
or
pop
cmp
adc
andb
dec
ret
loop
sub
mov
mov
push
sahf
mov
mov
cld
std
notb
js,pt
adcb
push
and
or
jmp
stos
in
mov
jae
push
enter
ret
ret
xorl
push
add
pop
daa
mov
inc
adc
adc
xchg
daa
clc
popa
lret
iret
dec
lds
ja
push
xchg
sahf
add
mov
xchg
mov
cwtl
jae
icebp
data16
xchg
repz
xchg
ss
sub
inc
mov
sahf
lcall
dec
cmp
lahf
movsb
testl
in
mov
insl
flds
sti
inc
mov
or
push
push
addb
jb
mov
add
lock
lock
fimull
cmpsl
sub
arpl
dec
jno
loope
popl
test
bound
and
mov
popa
dec
mov
push
iret
mov
les
fcoml
enter
push
aaa
sbb
out
cmp
push
xchg
mov
mov
cmc
leave
cmc
jp
jmp
divb
xchg
cli
aam
adcl
jge
jge
aam
add
lods
aam
xchg
sub
pop
shrl
nop
loope
cmpsb
andps
inc
cli
mov
fstp
popf
lcall
ror
mov
imul
sub
sub
jbe
push
sbb
push
push
ljmp
pushf
xchg
xchg
push
psraw
pop
add
inc
ss
outsl
stc
nop
testb
xor
dec
iret
jno
ret
imul
jns
pop
idiv
mov
or
mov
icebp
je
xchg
rorb
data16
aam
jo
rcrb
jecxz
xor
push
cmpl
or
mov
int3
dec
sub
into
xchg
mov
adcl
cli
insb
mov
lods
xchg
add
test
and
ret
sarb
int3
inc
mov
mov
leave
xor
xor
mov
lods
imul
fcompl
mov
cmpsl
inc
in
lods
bound
jbe
aaa
sbb
ss
rol
pop
or
lds
data16
dec
ds
xchg
lcall
xchg
push
shlb
fwait
inc
mov
add
or
scas
ficompl
adc
pop
mov
fdivrs
dec
icebp
fmuls
insl
cmpsl
mov
sbb
dec
xchg
test
scas
iret
clc
push
pop
iret
push
in
out
pop
aaa
jmp
adc
jbe
pop
inc
cwtl
push
mov
push
sbb
mov
xchg
daa
repz
push
cmp
or
outsb
sahf
adcb
pop
jb
xor
pop
push
int3
sti
js
mov
insb
push
fsubs
ds
sub
inc
rol
addl
rcl
lds
movhps
dec
aaa
and
jno
cwtl
data16
dec
mov
adc
aaa
sbb
mov
mov
inc
push
jo
dec
je
push
fcompl
pop
leave
stos
push
scas
sti
pop
jle
dec
in
pop
std
sub
pop
nop
jbe
pop
mov
mov
popa
outsb
sbb
popa
sbb
ret
sti
lea
mov
mov
xchg
add
into
sarl
adc
arpl
push
cld
mov
outsb
jge
cmpsb
fsts
std
les
outsb
call
icebp
push
imul
addr16
addr16
fldl
lret
sbb
xchg
inc
inc
call
idivl
push
or
loope
push
xchg
popa
push
icebp
push
or
repnz
mov
cmp
xchg
sti
push
mov
outsl
test
add
fcmovnb
imul
cmp
testb
mov
pop
fwait
lret
adc
es
stos
out
add
hlt
mov
jecxz
mov
pusha
shrl
mov
fistps
daa
lods
mov
cmp
add
pop
mov
mov
xor
cmc
dec
xchg
clc
mov
pop
lret
jmp
imul
scas
push
xchg
cmp
loopne
xor
dec
xor
arpl
ja
fbld
loop
xchg
je
stos
mov
or
daa
inc
int3
push
adc
inc
fwait
cmp
lahf
inc
mov
shlb
xchg
cmp
or
aaa
adc
stc
inc
ret
xor
sbb
out
stos
dec
orb
jns
push
dec
fstl
cmp
mov
lods
je
loop
inc
scas
adc
out
inc
cwtl
mov
in
cwtl
add
mov
mov
into
mov
push
cmp
sbb
scas
xor
cmpl
fiaddl
xor
inc
pop
in
push
sbb
loope,pt
enter
and
cmp
sbb
into
mov
imul
mov
cmc
xchg
xor
xchg
fistpll
lcall
loopne
cld
xchg
dec
mov
xchg
cs
sarb
or
sub
push
aas
rcll
into
cmc
xor
cmp
xchg
out
jl
pop
xchg
or
shll
inc
mov
fsubrp
jge
and
enter
cmpsb
add
es
cmp
fdecstp
adc
ror
cs
ss
mov
mov
stc
enter
mov
xchg
mov
sub
out
dec
xchg
lcall
cs
es
sbb
cmpsl
fsubr
add
arpl
test
aad
sbb
test
es
cmp
dec
cmpsl
les
test
jo
push
ds
in
dec
mov
jno
lret
xor
jl
movsbl
and
out
outsl
jbe
xor
add
into
jle
roll
pop
test
or
mov
push
mov
out
inc
inc
fucomip
jg
inc
push
insl
hlt
mov
adc
and
xlat
andb
cmp
cmpl
cmp
or
imul
inc
es
mov
insb
addr16
movsb
jno
cltd
jle
sub
push
fwait
sbb
lret
xchg
fs
jo
dec
mov
enter
stc
lea
mov
fwait
movsb
push
dec
push
imul
mov
or
clc
xor
rorl
shll
gs
int3
pop
lret
mov
or
and
test
mov
mov
push
pop
xor
jns
sub
sar
ja
sub
icebp
aaa
cmpl
std
cmp
cmp
std
xchg
cmp
cltd
test
dec
sbb
push
dec
mov
insl
sub
test
test
pop
push
pop
in
das
jno
orb
sahf
xor
mov
rcrl
and
ss
push
and
es
dec
cmp
add
xchg
or
mov
int
xchg
aad
or
iret
xchg
push
lret
and
in
mov
in
cltd
xor
fsubrs
adc
lea
sti
loope
inc
jg
out
rorb
mov
sbb
push
pop
pop
movsl
cs
mov
mov
popa
ss
movzbl
sti
rorl
pusha
cmpsl
xlat
or
push
test
sub
pop
mov
leave
cmp
fs
pop
popa
ficoms
insl
lea
mov
xchg
xor
jbe
mov
xor
in
scas
adc
loop
movsb
int3
push
bound
jmp
std
xor
mov
or
inc
cmp
jmp
loop
fidivrs
data16
clc
jbe
bound
push
cmp
jmp
stos
mov
int
dec
sbb
sub
imull
cmpsl
pop
adc
push
fs
adc
mov
dec
mov
es
mov
or
outsl
push
in
mov
clc
mov
mov
popa
add
or
std
fcomps
scas
insb
inc
push
and
les
out
sbbb
hlt
shr
sub
lods
sub
add
movsl
jg
mov
icebp
psrad
cs
dec
mov
js
xchg
shl
daa
sbbb
insl
and
fwait
dec
adc
sub
in
scas
cmpsb
mov
jbe
add
clc
mov
adc
sbb
repnz
pusha
mov
fcmovb
scas
loop
cli
add
mov
out
jmp
cmp
cmp
mov
dec
sub
inc
jecxz
mov
sbb
pop
add
or
cmp
add
xor
jns
in
mov
push
mov
call
pop
lret
into
fwait
adc
in
cmpsb
xor
inc
filds
and
insb
je
dec
add
les
lds
iret
pop
in
cmp
nop
lds
setb
sbb
es
pop
mov
mov
ret
std
sbb
lret
dec
je
rorl
mov
rcr
rorl
jae
fabs
addr16
dec
sbb
test
xchg
ds
xchg
pop
push
add
loope
sub
ret
fisttps
adc
int
addr16
test
pop
imul
sub
ljmp
pop
sbb
sub
addb
cmp
stc
xlat
cmpsb
sub
sub
lret
ds
lds
xor
jle
pop
mov
xchg
fadds
cwtl
inc
faddl
sbb
adcb
or
inc
push
lcall
xchg
call
inc
mov
aam
jnp
in
and
cmp
fdivs
hlt
xchg
ret
sub
ret
sub
dec
xchg
aaa
push
xchg
push
popa
outsb
mov
mov
push
fs
rolb
and
xchg
es
sti
imul
ds
or
xchg
xor
inc
push
xor
pop
enter
and
adc
outsl
cmpsl
lahf
mov
sarb
jmp
stos
adc
sub
popa
lock
lahf
jns
lcall
fxch
pop
mov
mov
cmp
es
or
jnp
mov
lds
dec
push
test
pop
inc
mov
movsb
stos
push
pop
adc
mov
jp
mov
lcall
std
push
mov
add
jp
dec
pushf
das
aam
test
inc
mov
sbb
mov
out
test
push
int3
or
cmp
data16
popa
insl
stos
pop
mov
mov
movsb
gs
or
test
test
pop
sub
sbb
pop
mov
jle
xor
xor
sub
in
pop
lods
adc
aad
cmp
pop
dec
in
cltd
dec
xorb
into
push
pop
or
push
daa
subl
imul
adc
sbb
xchg
sub
sahf
cmp
repnz
ljmp
add
add
pop
jecxz
aas
jl
loop
cmp
jecxz
out
mov
mov
ret
negb
sbbb
cmp
sub
cltd
pop
xchg
adc
lock
cs
call
icebp
mov
repz
iret
mulb
add
in
inc
jbe
arpl
sbb
add
cmp
xchg
pusha
lcall
push
sub
cld
jp
xchg
popa
sbb
push
out
arpl
lret
mov
in
in
push
sti
xchg
test
std
xchg
xchg
inc
shrb
fxch
cwtl
nop
ljmp
mov
divl
cmp
scas
rcrb
das
stc
int3
movsl
jne
push
mov
das
cmp
movsw
stc
jecxz
add
sub
mov
xchg
mov
xor
andl
add
and
push
fimull
or
dec
pop
dec
aad
mov
xchg
lret
mov
lret
arpl
fs
xchg
adc
ror
shlb
cmp
xor
xlat
shrb
xchg
hlt
cmp
imul
sub
out
stos
or
cmp
xchg
lods
mov
pop
xchg
shlb
jnp
scas
mov
movsb
jle
scas
arpl
ret
nop
push
gs
mov
cld
mov
das
mov
clc
outsl
or
lret
in
xor
mov
cmpsl
add
test
or
lret
into
push
ss
cli
xchg
xor
inc
xor
lahf
popf
adc
fdivrl
cltd
xor
scas
fadds
pusha
ret
dec
cmp
idivl
fimuls
cmp
adc
loope
sbb
jecxz
outsl
out
into
ret
je
stos
testb
inc
loope
insl
and
sbb
xor
movsl
leave
cmpsb
xchg
rorb
push
mov
push
mov
sbb
add
ljmp
test
cmp
icebp
mov
jg
add
inc
dec
or
cmp
int
loope
andl
mov
push
xchg
aam
jae
cmpsl
sti
insl
shl
add
fistpll
out
cmpsl
pop
int3
push
dec
cmp
mov
jne
pusha
popf
push
lods
sub
fwait
xchg
inc
aam
imul
clc
sbb
out
adc
stos
xor
scas
outsl
push
mov
insb
stc
idivb
cld
sahf
je
jne
xchg
repnz
icebp
jmp
cmpsl
cmp
inc
adc
dec
xor
imul
mov
dec
inc
adc
cli
pop
mov
mov
stc
scas
je
dec
mov
divb
aad
cmp
sbb
ret
testl
bound
xchg
fnstcw
cmp
inc
and
loopne
stos
jae
push
mov
out
ja
movsb
rcl
subb
aas
rcrl
repz
lods
stos
inc
aaa
sub
pop
test
lret
cmp
mov
ret
cmp
sbb
or
push
sbb
mov
sarb
dec
cmc
mov
call
add
cld
ja
lcall
or
sbb
mov
jbe
lret
cmp
insb
repnz
and
stc
test
out
inc
and
jg
cwtl
scas
mov
and
flds
jmp
xchg
dec
pop
jae
outsb
pop
cmp
mov
mulb
mov
add
iret
aam
mov
cmp
fs
cmpsl
jge
jl
jno
mov
push
push
fldt
sub
cmp
cmp
pop
push
mov
inc
ds
mov
mov
call
add
or
fistps
leave
and
add
xchg
daa
push
std
test
xor
adc
and
sub
xor
add
xor
call
mov
popf
out
loopne
pop
ljmp
cmc
jp
push
popf
mov
mov
addr16
test
movsl
mov
loop
rorb
xor
nop
loop
mov
stos
arpl
xor
mov
lods
xor
xchg
mov
push
mov
out
and
subl
lock
dec
lods
inc
or
add
scas
roll
mov
sbb
in
pop
jbe
mov
pop
ljmp
and
cmp
sbb
adc
mov
adc
syscall
mov
mov
push
mov
dec
jp
mov
clc
jecxz
test
negl
fwait
mov
sub
loop
mov
dec
sbb
mov
push
mov
sti
mov
push
mov
xchg
ja
test
fldenv
xor
ja
sbb
mov
sub
mov
jnp
mov
mov
scas
ljmp
mov
cmpsb
xor
inc
mov
push
inc
sti
push
push
sub
xor
outsl
inc
pop
cld
outsl
xor
add
add
scas
and
pop
ja
mov
sbb
pop
cltd
mov
fiaddl
sbb
pop
jbe
hlt
mov
sbb
mov
pop
mov
mov
adc
es
mov
xchg
mov
xlat
mov
pusha
shrl
jle
mov
lock
cmpsl
aas
jns
ss
cmovge
mov
aas
xchg
scas
cmc
and
adc
in
in
pop
jno
cmpb
or
add
sbb
sbb
add
fstpl
push
xor
push
lea
mov
pop
cltd
inc
mov
cs
subl
jmp
outsb
lahf
imul
xchg
fwait
jo
push
sahf
jle
dec
push
lods
or
cmc
lds
fldenv
mov
push
push
jnp
cmp
push
dec
push
cmpsb
pop
pop
repz
int
dec
bound
imul
jle
and
mov
dec
sti
and
xchg
rcll
push
imul
out
sbb
dec
and
and
and
cmpsl
sbb
je
das
fucom
scas
mov
lock
rcrb
test
add
mov
xor
shlb
push
or
test
bound
adc
jne
xchg
call
jne
xchg
sahf
nop
js
mov
leave
mov
lret
movsb
xchg
in
xor
das
pop
xchg
movsb
int3
aas
pop
repz
popa
and
lcall
lahf
icebp
sub
mov
cld
add
in
lret
jae
mov
pop
jp
fs
aas
mov
sbb
xchg
mov
jp
inc
lahf
cmpsl
in
lahf
out
clc
outsl
lcall
pushf
sub
enter
push
or
pop
pop
jecxz,pn
cmp
pop
adc
testb
sti
jl
enter
pop
or
push
inc
repz
mov
cltd
int
sub
arpl
mov
mov
cmp
push
xorb
cli
inc
cmp
cmc
fdivrl
mov
ds
cmp
cmpsb
pop
out
int
inc
and
je
and
dec
scas
lret
call
popf
xor
adc
and
jmp
xchg
cmp
pop
cmpsb
inc
xchg
adc
sub
hlt
pushf
push
or
daa
sti
push
and
stos
rolb
cmp
inc
test
sahf
or
or
jecxz
les
adc
dec
pop
sti
fwait
sub
adc
xor
imul
ficompl
out
arpl
mov
jae
inc
inc
imul
push
inc
inc
fmuls
inc
sbb
inc
stos
pop
mov
pop
xor
sub
call
cmp
out
xchg
pop
inc
inc
nop
pop
out
stos
xor
ss
rclb
inc
lods
xor
roll
jbe
xchg
mov
jmp
pop
and
cmp
mov
inc
cmp
sub
mov
jle
arpl
repnz
and
sbb
xor
packsswb
fbstp
aad
xchg
leave
cmp
or
hlt
mov
xlat
jns
mov
xchg
idivl
aad
scas
pop
nop
pop
mov
test
jl
add
int
aam
or
add
sbb
mov
xor
jns
fcoml
sti
pop
mov
inc
xlat
aam
add
stos
adc
addb
pop
jo
or
cmc
fnop
repnz
jno
mov
cmc
or
ret
mov
cmp
jne
cltd
pop
stos
adc
or
jmp
in
xor
fstpt
stos
add
aaa
std
jp
xchg
sarb
dec
cmp
daa
mov
xor
rcrb
mov
push
popa
inc
rcrb
cltd
aas
lret
adc
ss
adc
daa
js
lret
ret
pop
jae
push
subl
add
dec
jne
fwait
les
fildll
cwtl
sub
repnz
sub
jmp
cmp
xor
aad
sub
mov
js
jb
lds
lock
out
mov
inc
add
xchg
dec
mov
mov
jno
or
mov
dec
or
aas
out
add
adc
in
cltd
aam
rorl
pop
js
ljmp
scas
test
ret
mov
or
push
sbb
fcompl
sbb
cmp
inc
push
pusha
dec
jg
pushl
mov
out
loopne
xchg
inc
data16
dec
xchg
adc
cmpsb
out
mov
xchg
adc
jg
shlb
pop
inc
fdivrs
mov
or
sbb
test
pop
fildll
adc
test
lcall
ja
fisubl
mov
sti
insl
cwtl
std
jae
push
decl
fisubl
jbe,pn
or
push
cmp
sub
jmp
dec
not
clc
cmp
shl
decl
cwtl
mov
enter
xchg
add
sub
cmp
jae
jecxz
fsubrs
xchg
sysexit
jo
es
push
mov
xor
pop
pop
xor
mov
movsl
xor
xorb
cmp
xor
clc
in
mov
insb
xor
cmpsb
inc
sbb
sti
adc
inc
push
add
insl
inc
call
xchg
push
mov
das
and
rclb
ds
mov
lods
hlt
ret
inc
in
jl
enter
pop
or
jb
in
shll
insb
sub
xor
out
jle
in
fistps
imul
xchg
sbbb
add
xor
adc
addr16
popa
hlt
inc
mov
outsb
push
push
jnp
mov
stos
mov
nop
mov
push
mov
loopne
pop
into
imul
push
fs
jb
aas
sbb
jnp
push
and
mov
lret
add
nop
dec
mov
outsb
pop
add
enter
ret
popf
and
jne
xor
jb
xor
sbb
jle
jns
mov
xor
popa
cmpsb
sub
icebp
mov
pop
jno
push
and
mov
ret
and
pop
adc
fsubrs
mov
and
and
xor
lcall
lods
mov
cmp
aad
lea
dec
repz
xor
mov
cmp
imul
fwait
jg
jbe
cmp
inc
sub
popf
iret
jg
outsl
ja
sbb
jno
iret
test
mov
or
lock
fwait
lock
int
cmc
or
inc
repnz
rcll
sub
js
mov
mov
stos
sbbb
cmp
in
and
cmp
push
inc
pusha
imul
sub
movsb
out
and
sub
dec
les
cmp
mov
mov
xchg
adc
loop
pop
jo
pushf
inc
aas
cmp
mov
xor
jmp
sub
cltd
scas
cmc
jns
push
mov
mov
andl
xor
popf
jge
movsb
mov
inc
and
pandn
sti
ja
jnp
mov
jns
ds
cmp
push
jbe
mov
fwait
pop
pop
cmc
mov
jmp
mov
mov
push
sbb
push
add
pop
js
jmp
popa
fnstcw
xchg
xchg
int3
sahf
aas
imul
insl
xchg
inc
push
jbe
inc
cld
cwtl
gs
dec
in
fldt
negb
and
je
push
cmp
jecxz,pt
mov
add
pop
pop
addr16
dec
or
ljmp
daa
or
inc
adc
out
pop
jo
popf
dec
cwtl
or
xlat
xchg
pop
inc
pop
sbb
popl
dec
lret
cmc
sahf
icebp
mov
xor
ret
fst
divb
ss
mov
xchg
xchg
cmp
and
adc
pop
outsl
iret
xchg
add
ret
in
repnz
cmp
or
popa
adc
xor
lods
add
clc
movsl
popa
hlt
addr16
xchg
jnp
xchg
cmp
inc
add
cmp
jbe
fcmovnb
mov
xor
adc
cli
sbb
or
aad
lock
xor
cmc
mov
xchg
adc
pop
jmp
imul
inc
push
out
icebp
jmp
aas
es
push
enter
out
movsb
test
add
sbbl
cld
cmp
lods
jb
repnz
mov
mov
fadds
in
aas
and
pop
rcr
dec
les
fisubrl
in
adc
jecxz
repz
push
pop
ss
sahf
sbbl
push
out
mov
mulb
xchg
mov
xor
test
adc
sbb
arpl
ftst
lea
pusha
pop
aaa
fs
stos
mov
ss
mov
mov
mov
insl
pop
cmpsb
cltd
pop
jb
pop
push
insb
mov
cmpsb
adc
iret
jns
pop
shlb
cmp
and
dec
inc
dec
mov
outsl
shlb
or
jmp
sub
sbb
gs
pop
out
xor
test
jl
enter
int3
test
and
mov
mov
addr16
adc
lods
cmpsl
sub
cmp
mov
je
fdivr
test
push
push
out
loopne
insl
cmp
inc
mov
daa
stos
icebp
in
rclb
pop
ja
push
sahf
xor
rcl
pop
xor
adc
loop
nop
pop
sub
inc
cmp
pop
fwait
xchg
cmp
loope
pop
fists
ljmp
outsl
xchg
or
fnsave
and
lahf
icebp
pusha
sub
test
out
xchg
fsubl
fstl
stc
aas
dec
push
fidivl
in
loope
or
adc
adc
cmpsb
sbb
push
scas
mov
jns
popa
sbb
push
shl
jo
dec
pop
test
es
test
jle
add
ds
or
cs
lretw
mov
daa
test
leave
push
adc
and
test
xchg
out
loopne
xchg
jecxz
out
neg
jbe
pusha
dec
cs
insl
imul
add
inc
decl
adc
inc
xchg
cmp
push
sub
pop
out
test
repz
jae
inc
push
negb
adc
push
dec
gs
xor
aaa
imul
xor
in
popa
jle
add
imul
fisubs
pusha
clc
jno
insb
shlb
or
xchg
xor
imul
call
shrl
pushf
aam
repnz
lea
insb
adc
adcl
dec
xor
xchg
add
aad
int
pop
daa
pop
testb
cmp
mov
inc
and
adc
sbb
mov
call
pusha
call
pop
pop
mov
mov
jno
cmp
bound
jge
das
imul
mov
inc
jbe
cwtl
mov
data16
sar
out
or
push
adc
pop
not
pop
mov
sbb
imul
pop
inc
enter
lds
push
xchg
add
jae
ljmp
or
std
mov
out
dec
mov
notb
cmc
push
cmpsb
je
add
mov
inc
jp
push
jo
inc
and
test
jb
lcall
push
fildl
aas
and
add
movsl
popf
dec
mov
and
test
xorl
jecxz
inc
and
in
add
popl
inc
xchg
mov
nop
sahf
ret
or
or
xchg
adc
inc
jno
pop
mov
nop
lock
push
jno
insb
cli
iret
inc
cltd
dec
jecxz
xor
into
and
mov
ret
sub
sbb
ret
xchg
mov
push
ja
jecxz
lds
in
mov
mov
fdivl
or
jge
imul
jns
sub
fwait
cli
outsl
mov
push
out
int3
add
xor
mov
cltd
ds
xchg
mov
mov
and
cmp
sub
dec
bound
test
pop
mov
adc
ljmp
popf
test
inc
rcrb
or
add
jb
jmp
jne
mov
sbb
jmp
xor
push
insb
cmpsl
stos
repnz
mov
inc
out
mov
xchg
ret
jb
ds
int3
add
call
add
xor
add
test
sub
jnp
cltd
lods
mov
test
or
jae
jne
test
sbb
outsl
ja
or
rorl
lahf
cmpsb
std
in
pop
sbb
repnz
daa
or
shrl
cld
loopne
mov
cmp
inc
dec
or
sbb
cltd
lods
cmp
ss
leave
xor
aaa
shll
xchg
mov
outsl
push
cmp
daa
and
jbe
adc
fistps
jb
mov
mov
xlat
pop
jle
fs
mov
lods
loop
out
lcall
stos
inc
loope
xor
in
mov
in
fldcw
jb
rcll
pop
cmpl
repz
mov
es
fldt
xchg
and
fisttpll
lods
movsl
cmp
rorb
sbb
add
pop
fwait
inc
lods
mov
mov
int
pop
cmp
int3
and
mov
push
xlat
mov
xorb
and
xor
test
jns
sahf
mov
mov
sub
sub
sub
sti
xchg
xor
loope
scas
cmpsb
cmpsl
notl
dec
leave
mov
cmp
xor
xchg
mov
push
imul
imul
cmp
sub
pop
repnz
sarl
loop
mov
or
xor
call
push
movsl
jo
jp
pop
movsb
mov
dec
addr16
stc
out
xor
cmp
pusha
jecxz
xchg
jge
insb
rcl
fisttpl
cs
je
in
out
jb
jb
and
mov
jne
adc
sbb
cmc
pop
or
rcr
daa
cmp
or
dec
cmp
sbb
das
mull
repz
add
sbb
cmp
shrl
push
lods
cmp
ret
push
hlt
test
fidivl
pop
push
sahf
shlb
mov
je
push
inc
xor
aad
inc
adc
jle
and
lahf
stos
movsb
push
jmp
cmpsl
inc
mov
test
arpl
and
rol
inc
push
add
outsb
sbb
adc
pop
incb
cmpsb
sahf
fidivrl
mov
push
push
test
jle
jbe
notl
in
in
jge
dec
lds
jg
rcll
xchg
jb
outsb
iret
insl
shll
js
aas
mov
imul
test
jo
scas
cltd
and
in
push
add
cs
mov
dec
es
std
shlb
sahf
cwtl
pop
ret
mov
and
jae
mov
jbe
enter
xlat
imul
movsl
or
pop
cmpl
push
mov
ds
mov
mov
nop
add
pop
cmc
cmc
push
mov
std
push
pushf
cwtl
lds
sbb
pop
jb
sub
xor
pop
fsubrs
push
xchg
pop
adc
and
scas
orb
rclb
inc
mov
mov
jl
pushf
xchg
test
stc
shrl
out
ljmp
cwtl
mov
mov
mov
lock
pop
jo
mov
es
movsb
add
xchg
pusha
xchg
jg
jmp
adc
leave
jne
stos
push
lsl
ret
adc
cmpsb
pop
cmpsl
scas
sbb
xchg
sbb
mov
inc
js
test
and
mov
pop
aaa
nop
or
dec
xchg
outsl
cmp
pop
xchg
pop
cmpsb
add
imul
shl
xchg
into
leave
data16
insl
pop
data16
lahf
shlb
dec
dec
xor
fldcw
stos
cmpsl
repz
cmp
inc
fnstsw
pusha
add
pop
mov
cmc
push
mov
in
push
mov
test
wrmsr
or
gs
inc
out
add
adc
fwait
ljmp
call
xor
sub
daa
push
out
aaa
push
cs
jmp
hlt
xor
adc
lock
cmp
test
sbb
call
mov
mov
jb
imul
mov
pop
mov
in
cmc
inc
or
mov
cmp
push
aad
adc
xchg
cmp
push
add
sbb
and
mov
sbb
add
mov
lock
pushf
push
push
test
repnz
pop
jg
and
adc
pop
jne
mov
adc
jnp
mov
lods
ret
pop
push
pop
ds
iret
int
pop
mov
sbb
mov
pop
adc
lret
inc
xchg
add
mov
aad
add
jge
aam
sahf
hlt
rolb
fs
push
subl
pop
outsb
add
fnstenv
or
and
push
pop
cs
std
insb
fisubrs
mov
pop
cld
ds
rorb
dec
adcb
arpl
inc
rcrl
inc
or
lea
lret
xlat
insl
push
test
out
ja
jno
sti
pop
pop
lret
cmp
cmp
jl
lods
add
addl
cmp
cwtl
jge
jo
jbe
xchg
mov
sub
and
add
fidivs
shll
sub
addr16
sti
push
push
shrl
and
pop
inc
ja
pusha
pusha
mov
xchg
mov
sub
xchg
fwait
nop
mov
mov
lret
xchg
dec
add
pop
xchg
inc
add
push
or
ss
cs
sub
sahf
inc
xchg
in
repnz
in
dec
add
mov
mov
mov
fs
add
xor
xor
mov
jl
jno
add
mov
add
jge
outsl
adc
pop
lods
jns
test
stos
mull
std
mov
mov
push
lcall
xchg
in
pop
jae
dec
outsl
mov
lcall
mov
jne
xor
mov
loopne
xor
cmp
inc
out
aas
inc
test
mov
inc
fwait
inc
arpl
aas
das
dec
inc
cmc
cs
clc
repz
xchg
std
ret
jmp
xchg
add
lret
repz
sub
fsubrp
adc
test
push
inc
lahf
test
add
push
arpl
cltd
jecxz
lret
shlb
rolb
das
int3
pop
inc
adc
mov
inc
sbb
fisubs
jb
sbb
xor
rclb
aam
jbe
sub
outsb
mov
mov
xchg
dec
or
aaa
ds
cltd
pop
adc
push
inc
sbb
sarl
shll
xchg
and
and
add
push
lods
sub
add
stos
mov
sti
push
enter
xchg
inc
cmp
pop
fists
lods
xchg
stos
adc
pop
jl
jb
xchg
sub
sbb
cmp
fisubrl
rolb
push
push
and
sarb
adc
leave
lcall
je
lret
push
leave
or
or
enter
enter
mov
jecxz
jecxz
mov
js
das
icebp
add
int
pop
jno
sub
xor
loope
cmp
push
sub
out
in
fiaddl
daa
leave
mov
pop
push
lret
push
xor
mov
and
jne
scas
loop
and
test
sarb
sub
nop
pop
int3
sbb
mov
das
shlb
adc
mov
and
lds
aam
shlb
push
insb
hlt
mov
cmpsl
lock
cs
add
mov
or
jecxz
and
xor
push
cmc
adc
push
pop
xchg
in
rcrl
push
inc
rolb
or
js
cmc
clc
sahf
movsb
mov
imul
iret
dec
in
lret
bound
xchg
std
sub
scas
jl
adc
scas
pop
pop
mov
xchg
sahf
push
xchg
jo
nop
incl
dec
adc
sahf
pop
mov
imul
shrl
fbld
cmp
sbb
jecxz
mov
mov
mov
test
je
mov
stos
cmp
inc
cld
je
mov
sub
insl
mov
imul
mov
adc
inc
xor
fsub
inc
jg
out
mov
cmpsb
enter
pusha
aad
cld
rcrl
mov
pop
mov
gs
push
and
lret
lods
push
xor
in
loope
aad
ja
jnp
jmp
add
loop
jge
pushf
or
test
or
xchg
jnp
cmp
add
aam
imul
out
enter
cmp
dec
jns
shrb
mov
inc
xchg
jp
cmp
adc
notl
fiadds
push
mov
idiv
fists
mulps
test
shrb
dec
pop
dec
xchg
pop
mov
jo
fdivs
cmp
repz
mov
bndstx
push
jo
sub
mov
outsl
lock
sbb
adc
dec
dec
call
mov
adc
dec
stos
push
jmp
inc
inc
test
sbb
dec
inc
pop
int
mov
mov
xorl
repnz
fmull
jb
notb
std
popf
xchg
dec
sti
dec
jbe
mov
rcll
mov
inc
push
cmp
ds
xchg
sub
xchg
xchg
xlat
mov
ja
pop
inc
enter
inc
push
pusha
enter
xchg
aas
testl
pop
sbb
out
and
fucomi
cmpsb
xchg
int
pop
dec
push
mov
mov
mov
popa
adc
sbb
lock
push
daa
lods
imul
or
xor
data16
cmp
mov
xor
ficompl
je
sbb
repz
xorl
inc
cltd
sub
repz
cwtl
xchg
cmc
imul
cltd
fistps
cli
lret
mov
add
xlat
arpl
push
cld
jnp
xchg
sbb
xchg
aam
adcl
cli
sbb
push
cmp
lahf
jge
enter
ret
sub
mov
les
mov
test
push
push
cmp
jnp
int
iret
mov
shr
push
clc
les
arpl
pop
and
pmaddwd
pop
je
imul
xchg
pusha
push
or
adc
cmpsb
mov
movsl
rcrb
popa
filds
fistpl
mov
add
jo
sbb
test
add
mov
pop
aad
inc
pop
loopne
cmp
scas
js
cwtl
mov
stc
mov
xor
push
ja
xlat
cmp
jp
in
jecxz
test
repnz
sbb
add
inc
xlat
adc
pop
insl
xchg
testb
jb
mov
je
mov
fiaddl
cmp
jne
out
pop
jns
inc
movsl
xchg
add
or
cld
movsb
das
xchg
mov
imul
outsl
das
jno
pop
int
enter
jl
and
movsl
sbb
sahf
paddusb
daa
cmp
xchg
cmp
pusha
adc
repz
pop
mov
sub
rorb
sahf
xchg
cmp
js
iret
xchg
arpl
into
add
bound
int3
ss
js
or
pop
roll
push
and
mov
aad
sub
addb
ljmp
jmp
jmp
cs
decb
insb
xor
std
xchg
xchg
and
dec
cmp
cmc
lret
repz
repz
rclb
rolb
sbb
test
sub
push
xchg
cld
stos
inc
cmp
jnp
push
push
sbb
push
out
jp
jne
ds
inc
jns
pop
es
jne
lcall
jl
add
inc
ljmp
sub
mov
stos
ja
cmp
mov
xchg
and
or
push
sbb
out
test
popa
inc
aaa
aas
ss
xor
and
dec
sub
mov
add
enter
addr16
das
subl
xchg
cs
imull
push
jecxz
lahf
or
popa
nop
mov
frstor
and
push
rcll
mov
out
fnop
push
or
ret
aam
cmpsb
jge
in
out
test
lock
mov
sbb
loop
pop
stc
pop
test
cwtl
pop
in
fidivrl
cld
not
dec
mov
adc
adc
sub
push
push
in
or
out
cmp
imul
ror
hlt
pushf
js
jmp
xchg
fucom
ja
mov
cli
loope
out
mov
dec
fnstenv
aam
and
cwtl
xor
cltd
mov
push
xor
cmpsl
clc
popf
mov
mov
out
cmp
test
push
mov
lock
arpl
clc
movsb
pop
int3
xor
arpl
and
dec
or
adc
cmc
addr16
dec
outsl
sbb
jmp
or
fsubrl
mov
lds
fdivrp
pushw
les
stos
or
mov
data16
sti
in
mov
test
and
stos
int
add
and
ret
xchg
ror
pop
cmp
int3
fisubl
mov
cmp
pop
call
aam
lds
cmp
pop
stos
cmpsl
sahf
out
out
sbb
pop
repnz
push
cwtl
dec
adc
push
sub
inc
and
test
mov
int3
int
daa
add
sti
imul
popf
adc
sbb
and
bound
inc
or
sub
dec
dec
pop
pop
xchg
add
push
add
pop
and
xor
sbb
nop
pop
push
out
cmpsb
and
hlt
or
into
les
data16
fisttps
push
dec
mov
cmp
add
mov
add
adc
stos
cwtl
outsl
aam
imul
in
inc
cwtl
jp
pushf
push
jmp
sbb
or
cmp
push
adcb
sbb
jne
xlat
push
pushf
fidivs
in
push
mov
push
in
ja
push
sub
push
ljmp
cmp
push
fistpll
xchg
mov
daa
andb
cmp
rcll
mov
mov
dec
negb
xchg
into
mov
dec
mov
pop
sub
mov
pop
ret
das
mov
icebp
xchg
adc
inc
pop
mov
subl
push
add
sbb
dec
lea
adc
adc
jae
out
mov
movsl
inc
dec
or
push
dec
and
push
mov
daa
movups
mov
jb
push
push
test
into
idiv
scas
jno
out
mov
insl
adc
xlat
add
xchg
mov
xor
jg
into
xorb
test
shrb
loopne
ss
orb
shrl
test
or
dec
and
inc
sahf
test
aas
dec
push
addr16
js
cmpsb
jb
mov
adc
mov
fimuls
je
sahf
scas
inc
sbb
icebp
lret
scas
dec
mov
sub
cmp
xchg
scas
xchg
or
inc
lds
rclb
cmpsb
mov
rorl
and
mov
inc
test
push
pop
fdivrp
mov
adc
pop
addr16
jnp
xchg
testl
pushf
xchg
in
mov
jo
push
xlat
mov
pop
xchg
fmull
bts
push
or
dec
mov
test
sbb
imul
cmc
or
push
mov
push
mov
cltd
or
mov
outsl
and
mov
sbb
fsubl
leave
mov
lret
incl
lcall
mov
xchg
movsl
push
push
inc
les
cmpb
cmp
push
xchg
in
fs
nop
mov
adc
popf
lret
idivl
add
loop
ja
xchg
inc
pusha
mov
pushf
push
mov
xor
xchg
push
idivl
lds
sub
ss
mov
pop
repnz
xor
and
jmp
movsb
xor
scas
clc
arpl
icebp
iret
daa
cmc
jno
daa
inc
ljmp
test
cmpsl
adc
xchg
cmpsb
add
xor
sub
lea
xchg
std
pop
sbbl
sarb
add
pop
movsb
sbb
cltd
insl
cmpsl
stc
je
pop
mov
ds
jno
jb
aad
lds
push
daa
int
stc
into
lret
and
dec
fsts
adcb
rorb
gs
adc
clc
pop
movsl
insb
sub
xor
xchg
mov
outsl
test
push
mov
jle
and
fs
arpl
addr16
das
icebp
ljmp
dec
and
lea
inc
mov
xor
push
in
in
fnstcw
jmp
sub
sub
das
addb
pushf
xchg
hlt
addr16
mov
or
fwait
xchg
fsubrl
dec
cmp
jno
xor
scas
sarb
jne
xor
xchg
add
adc
das
pop
out
pop
sbb
pop
sub
push
push
dec
or
mov
notb
jge
xor
or
xor
std
jmp
test
inc
les
movsl
scas
xchg
movsb
decb
out
mov
outsb
mov
mov
mov
data16
mov
hlt
lds
mov
clc
mov
cmp
jnp
andnps
outsl
xchg
jp
or
jnp
or
incl
jbe
and
xor
lock
pop
xchg
jecxz
loop
mov
adc
sub
imul
jns
mov
subl
hlt
popa
pop
mov
clc
dec
icebp
sahf
dec
shrl
xchg
lret
ret
imul
ds
lods
pushf
jecxz
xchg
insb
repnz
or
xlat
or
inc
stos
fprem1
imul
sub
inc
sbb
adc
dec
xor
pop
xchg
sub
insl
lret
add
scas
jmp
xchg
roll
jg
andl
in
int
pop
ret
rcr
je
scas
ljmp
repz
in
rol
mov
out
adc
add
nop
insl
or
pop
in
sub
cwtd
sbb
rclb
test
scas
nop
push
jb
stc
enter
popf
stos
js
sahf
dec
daa
push
pop
mov
das
out
out
clc
and
xchg
xorl
lea
test
aaa
stos
into
mov
out
cld
cld
sbb
sub
mov
cmp
pusha
ret
push
jge
fsubrl
fistpl
dec
mov
inc
pop
cs
push
inc
cmpl
das
xorb
or
cmp
in
dec
mov
dec
imulb
xchg
out
cmc
pushf
mov
rclb
sarl
ds
loop
enter
les
xchg
sbb
ret
jns
cli
rolb
in
loop
pop
pop
sub
stc
mov
jne
in
or
leave
dec
adc
rclb
mov
mov
lret
movsl
adc
btr
mov
sbb
and
ficompl
ret
jge
pushf
jns
jbe
push
xchg
add
gs
in
inc
insl
sub
mov
dec
add
mov
jno
loope
data16
test
ret
sarb
insb
push
das
mov
lahf
pop
orb
xor
mov
js
sahf
ja
inc
mov
lea
fwait
xchg
out
fsubr
mov
aas
nop
and
inc
jns
icebp
xor
inc
push
jo
cld
lcall
ret
in
push
mov
jp
ret
clc
xchg
xchg
notl
dec
out
out
mov
shl
or
mov
cmp
and
icebp
filds
lds
push
sub
scas
aad
je
ds
cmp
mov
shlb
scas
xor
enter
mov
dec
enter
jns
xchg
int
cltd
out
aam
movsl
jo
leave
fcmovb
jnp
loop
sub
lret
cmp
in
add
lret
bnd
lods
sbb
int
cmpsb
cmc
ja
stc
pop
loop
mov
iret
je
bound
push
add
or
jbe
inc
xor
xchg
sub
mov
shlb
xor
mov
in
push
nop
and
jne
pop
push
push
out
jmp
mov
ss
push
icebp
clc
push
addl
push
sarl
shl
sub
into
jl
push
inc
addb
mov
arpl
xchg
lods
mov
mov
xchg
adcb
add
cld
inc
dec
stc
xor
inc
pushl
cmp
rcl
add
iret
pop
pop
xor
xchg
mov
and
inc
and
pop
adc
aam
jecxz
iret
jl
inc
imul
aad
dec
imul
jo
pop
sub
fistpl
adc
fisubl
mov
ficompl
inc
push
das
out
shll
adc
push
jge
and
stos
insl
mov
insl
xor
insl
lea
testb
dec
sub
jge
mov
mov
inc
and
pop
frstor
dec
sbb
fcompl
xor
imul
mov
fs
scas
insl
shrd
mov
sub
mov
bound
xor
popa
add
push
and
jecxz
ficompl
sbbl
xchg
xchg
sarl
and
lock
es
into
pop
push
ds
lret
and
push
mov
jg
jbe
imul
and
dec
pop
fisttpl
mov
fnstcw
dec
inc
lods
pop
mov
mov
mov
sbb
out
sbb
push
add
nop
mov
pop
inc
stos
push
cmp
dec
xchg
push
pushf
and
mov
xor
xchg
mov
jb
sbb
scas
ds
lcall
sarb
jo
add
daa
loop
mov
mov
mov
ja
inc
and
inc
cs
in
xor
addr16
push
ret
jbe
leave
inc
or
lds
sbb
ret
cmc
ds
clc
lods
sub
outsl
push
outsb
dec
jb
sbb
pop
push
mov
push
stos
gs
inc
mov
jae
push
adc
leave
int3
mov
push
in
inc
ljmp
dec
aam
dec
pop
loopne
pop
aad
dec
mov
mov
mov
and
mov
movsb
cmp
cmp
jmp
test
imul
outsb
dec
cmp
les
mov
shlb
or
int
stc
rcrb
das
push
pop
mov
adc
inc
cmp
cli
call
cmp
push
jnp
xchg
cmp
pusha
adc
cmp
xlat
movsb
dec
lret
lods
xor
lcall
shll
pushf
pop
jnp
push
jle
stos
mov
f2xm1
adc
mov
call
hlt
movsl
loope
jecxz
gs
adc
ds
push
lock
int3
test
or
call
mov
sti
xor
push
fbld
test
push
sahf
mov
sarl
or
dec
mov
pop
lahf
and
out
push
fstpl
dec
movsl
ficoml
lea
pushl
nop
cld
jp
incb
les
and
ss
jne
xchg
jae
das
daa
jns
add
jle
inc
xor
daa
fldl
pop
out
inc
insl
mov
jmp
bnd
out
cmp
icebp
subl
mov
xor
fadds
push
mov
sbb
addb
addr16
cmp
rorl
jecxz
mov
imul
jmp
fnsave
push
xor
lods
fldenv
stc
int3
xor
lea
daa
icebp
mov
fistpll
or
das
int
add
arpl
xchg
test
add
mov
sbb
mov
mov
pop
pop
fwait
mov
sub
sbb
sub
mov
test
jne
aad
into
enter
mov
and
push
lock
popa
mov
jb
std
and
or
mov
sbb
push
add
daa
cltd
pop
or
mov
or
push
test
ds
xacquire
sbb
push
add
xor
out
or
dec
leave
xchg
fisubl
jge
das
in
pcmpgtb
in
cmp
and
sbb
inc
enterw
push
inc
aam
lcall
inc
mov
int3
aam
add
or
insl
js
aam
repz
ja
test
fstpl
out
imul
xchg
roll
cli
std
rcrl
pop
adc
lds
popa
sarl
jns
ja
or
push
cmp
in
cld
outsl
ss
rcll
adc
sub
mov
mov
xchg
jae
pop
push
repnz
mov
arpl
mov
lcall
pop
xlat
push
push
dec
cltd
push
xor
rcrl
fprem1
jne
xchg
sub
pushf
inc
mov
inc
addr16
jp
addr16
mov
mov
jl
xchg
lds
pop
mov
adc
imul
mov
testb
xchg
inc
pop
enter
ja
sbb
push
or
aam
fsubrs
sub
sahf
pop
mov
das
sbb
leave
add
add
xor
lret
jnp
sbb
out
mov
xchg
insb
mov
push
push
and
jb
popa
popf
into
sbb
cmp
insb
or
sub
add
sub
iret
jne
dec
jmp
dec
rol
ds
aam
push
mov
jecxz
cli
lea
lret
gs
insl
fiaddl
mov
or
insb
cmp
rcl
movsl
push
ss
mov
xchg
push
pop
fbstp
ja
or
inc
jl
out
fisttpll
stos
push
lods
pusha
xchg
test
test
lret
mov
xor
ret
lds
daa
out
or
or
sub
sub
sbb
outsl
mov
mov
lods
int3
mov
sbb
mov
loopne
sbb
mov
add
dec
adc
inc
or
jl
jg
mov
push
rep
fists
mov
and
cmpsb
cmp
adc
add
ljmp
dec
sbbb
and
cmpsl
sbb
cmp
adc
cmpsb
pop
nop
popa
roll
push
fsubrs
jae
pop
movl
pop
jno
lea
sub
aaa
cmp
push
mov
lods
aad
pushf
mov
clc
or
pusha
sbb
and
jb
sub
clc
adc
mov
test
jo
enter
js
js
sub
jb
stc
xchg
subl
mov
sbb
jo
push
insl
sahf
push
pushf
test
stos
insb
mov
lret
sub
add
jg
ret
data16
rcrl
add
and
inc
sub
stos
cmc
inc
call
stos
jge
call
pop
sbb
adc
mov
xchg
xor
shlb
xchg
pop
out
rorb
in
fwait
clc
adc
sub
jbe
sbb
stos
orb
out
push
inc
cmp
push
js
data16
xor
sbb
add
test
add
rol
popf
push
ficoml
movsl
sbb
mov
xchg
xor
dec
sbbb
push
xor
dec
daa
and
loop
sahf
fnsave
adc
fs
mov
stos
sbb
fsubrp
lods
insl
sbb
sarl
gs
mov
fisubrs
stc
mov
outsl
sub
mov
push
or
mov
mov
xchg
fistpl
dec
dec
loope
lea
pusha
out
sub
mov
push
jmp
sub
sub
xchg
dec
sbb
cs
add
cmp
jle
mov
xor
lods
prefetcht0
xor
out
call
jo
out
mov
pop
repnz
sbb
add
movsl
or
pop
lods
std
ret
mov
in
ret
xchg
mov
int3
fidivrs
mov
sub
sub
sbb
sbb
jne
lock
add
addl
aad
scas
cmp
jp
xchg
fidivrl
inc
dec
out
and
or
push
dec
cwtl
and
mov
insl
sarb
clc
fwait
jo
mov
push
repz
adc
rcr
scas
inc
mov
lahf
push
push
test
xor
adc
inc
xchg
and
cmp
cmp
jo
stos
mov
xor
ret
dec
or
ljmp
mov
pop
mov
lea
xchg
cmpsl
push
inc
push
sbb
clc
loope
pop
pop
add
into
sbb
inc
adc
jnp
mov
fldcw
xor
clc
cmp
ss
arpl
xor
sbb
ret
mov
mov
hlt
incb
stc
scas
xchg
sub
jl
std
sub
mov
scas
xor
out
out
cs
sbb
or
es
nop
jge
inc
pop
and
pop
fwait
rorb
cld
aas
imull
cltd
push
enter
add
lods
dec
cmp
mov
add
add
xor
xchg
jbe
sub
roll
das
jb
push
cmpsl
add
sub
push
jno
xor
in
and
into
xlat
push
jo
adc
lods
inc
stc
mov
push
sub
mov
aas
mov
dec
loopne
sti
lock
fcmovnu
pop
jnp
push
arpl
push
outsb
mov
stos
or
mov
rol
int
push
loope
ror
add
mov
scas
aaa
nop
dec
mov
ljmp
mov
pop
fistpll
sti
mov
cltd
sti
jns
faddl
daa
repz
add
mov
mov
pop
pop
xchg
jl
popf
jl
das
iret
dec
sti
out
pop
xchg
jns
jnp
stos
push
aaa
add
icebp
xor
mov
data16
cmp
loop
inc
push
loopne
pop
xor
jnp,pn
cwtl
sub
incb
into
push
xor
mov
mov
adc
sti
push
stos
lret
add
mov
ja
xchg
jnp
pop
cmp
mov
sub
sbb
dec
out
mov
mov
inc
xor
jmp
xchg
dec
dec
mov
test
popf
dec
das
xor
es
nop
and
push
mov
insb
and
inc
inc
add
xor
xlat
or
sbb
pop
xor
add
rep
mov
andl
mov
inc
push
mov
xchg
add
fisttpll
insl
bound
ja
lock
js
hlt
push
fwait
push
add
mov
imul
stos
outsb
xor
ljmp
push
je
scas
push
mov
jmp
pop
loopne
mov
clc
out
test
mov
in
cli
cld
inc
pop
pop
dec
cmp
sub
mov
into
inc
pop
add
pop
imul
jecxz
push
and
inc
popf
xchg
les
push
or
add
gs
xor
and
fistps
test
test
ret
xor
ljmp
cmp
lret
sub
loopne
jl
cltd
je
inc
add
scas
mov
pop
sub
mov
std
lret
jae
out
jecxz
pushf
shr
fs
inc
dec
gs
adc
ja
mov
arpl
and
imul
sbb
pop
lock
fucomp
enter
xor
jae
test
xchg
das
jae
loope
jle
pop
popa
sbb
inc
ljmp
call
push
mov
cwtl
loopne
mov
jb
jno
jo
dec
mov
mov
sbb
mov
stos
jmp
push
ret
jecxz
xor
mov
jle
adc
or
xor
inc
scas
mov
lods
pop
cmpsl
lret
mov
add
sbb
mov
adc
jge
fadds
add
lock
xor
xchg
mov
fcoml
xor
sbb
mov
pmulhw
mov
mov
jne
or
repnz
mov
and
test
lret
dec
pop
dec
mov
jo
sub
dec
jo
stos
out
or
dec
push
sub
adc
sub
add
mov
pushf
mov
lahf
mov
cmp
repz
xor
sub
imul
loop
push
in
cmp
dec
sub
cmpsl
out
sub
dec
outsl
stc
pop
sbbl
sbb
mov
imul
pop
inc
mov
ret
ret
call
jbe
fsubrl
mov
pusha
jge
gs
mov
mov
fmul
hlt
or
lods
add
cli
push
insb
sub
fmulp
or
enter
xchg
xchg
push
mov
movsl
hlt
mov
lock
jmp
rcrb
cwtl
mov
test
mov
xchg
add
sbb
mov
sub
outsl
daa
cmp
out
pop
mov
push
stc
lods
test
xchg
xor
scas
in
insb
lods
cmpsl
addr16
sub
and
jb
out
sub
pop
insl
mov
shlb
inc
add
orb
fcompl
or
scas
clc
sub
test
aas
or
gs
aaa
sbb
dec
xor
aam
jl
and
push
sbb
pusha
pop
cmpsb
sbbb
fsts
out
cltd
and
adc
mov
inc
div
sbbb
push
loope
repz
sub
call
jl
jne
nop
stos
shrb
push
mov
jl
sbb
jne
sti
dec
insl
stos
push
pop
push
jg
pop
arpl
mov
aaa
or
pop
inc
sahf
rol
lods
js
iret
push
add
lods
nop
mov
scas
test
or
in
sbb
xchg
fidivs
lret
mov
push
jo
rolb
push
sub
push
sub
lcall
fists
iret
mov
in
jns
roll
inc
sbb
jnp
fnstcw
aam
test
mov
jmp
push
cmp
lret
dec
in
sbb
sarl
mov
bound
jge
jbe
clc
mov
bound
out
add
adc
test
jae
out
stos
pop
mov
push
call
sub
cmp
stos
xchg
push
les
sbb
ds
xchg
push
addr16
call
adc
addb
push
imul
add
fcom
cs
hlt
pushl
outsl
jge
push
push
bound
mov
adc
out
mov
outsl
aad
mov
cmp
test
push
hlt
push
jno
jns
sbb
mov
push
dec
cld
or
sbb
xchg
cld
test
pop
sahf
adc
bound
jl
add
mov
xor
push
scas
xor
jnp
fsubl
xor
pop
leave
inc
push
mov
adc
in
adc
movb
sub
aam
es
aas
data16
pushl
push
dec
add
dec
sub
cmp
and
gs
movsl
lret
aam
jns
outsl
jbe
dec
int
dec
shr
xchg
xchg
stc
xor
or
out
and
pop
pop
dec
fs
cmpsl
fs
sbb
enter
lahf
xchg
mov
ret
cmp
xor
xor
icebp
insb
mov
cmc
xlat
gs
push
jae
mov
jno
lcall
jle
fwait
and
sub
in
outsl
je
or
pop
pusha
xchg
movswl
popa
pop
popa
inc
push
outsl
in
adc
mov
lods
pop
call
mov
insl
mov
mov
lcall
jge
mov
and
fistps
stos
scas
inc
cmc
lcall
lcall
stos
mov
jnp
inc
ds
mov
push
push
aaa
out
jge
mov
cwtl
or
adc
js
and
ds
cmp
xor
push
sub
xor
adc
xor
stos
jnp
mov
outsl
sbb
sti
mov
shrl
push
xor
knotb
imulb
das
es
scas
inc
pop
lahf
mov
or
pop
push
mov
call
cmpsl
adc
push
mov
adc
daa
movsb
push
jl
sbb
popa
push
mov
sbb
int
jae
push
scas
jns
xchg
jmp
jbe
test
daa
js
mov
dec
sti
fcoml
inc
xchg
dec
fisttpl
movsl
xor
out
xchg
dec
push
sbb
xchg
cmp
cltd
in
inc
pushf
push
lods
push
out
push
lcall
mov
cmp
imul
mov
cmpsb
subb
cmp
das
loope
jp
add
stos
pop
test
hlt
xchg
sub
insl
jb
pop
xor
jl
sub
xchg
repnz
or
cltd
je
shll
jnp
ficomps
mov
rorb
push
mov
dec
outsl
loop
inc
push
adc
insb
xor
je
icebp
cld
adc
inc
cs
xlat
xchg
mov
inc
xor
rcrb
jo
dec
xchg
stos
movsl
shll
lods
push
add
and
std
adc
movsb
cmp
xorb
and
roll
dec
cmp
insl
jecxz
xlat
mov
fsubrp
or
or
push
lcall
ficomps
fsubs
xchg
mov
icebp
xor
inc
pusha
xor
lcall
call
iret
sub
ja
rcrl
sbb
inc
sbb
and
mov
nop
dec
lds
pushaw
out
int3
xchg
xchg
cmp
pop
mov
pop
xchg
adc
lock
test
out
inc
insl
and
aaa
jle
popa
push
repz
jmp
mov
jle
mov
mov
inc
or
loopne
lods
or
arpl
dec
add
fidivs
sub
negl
xchg
lds
push
iret
loope
push
fwait
mov
iret
lret
dec
mov
sbb
push
inc
ja
sti
insb
push
repnz
call
dec
inc
mov
ss
es
and
inc
cs
es
cmpsl
js
hlt
icebp
stos
aam
adc
push
bound
sub
jne
in
xchg
pop
les
aad
lret
lahf
movsl
or
inc
push
jno
mov
xchg
dec
cmp
xchg
pop
cmp
pop
pop
aas
mov
cmpsl
loop
aaa
repz
sbb
and
test
fldl
aas
mov
outsl
mov
pop
xor
or
aaa
sub
notl
cmp
out
dec
ljmp
adc
xchg
pop
arpl
in
mov
std
int
push
imul
scas
xchg
adcb
outsl
sbb
ret
mov
mov
inc
cmp
sub
adc
ret
lds
cmp
pop
bound
jl
fld
jecxz
cmp
aaa
incb
xchg
add
dec
push
dec
or
mov
xchg
shl
push
xchg
repz
fdivrl
xchg
cli
pop
xor
negl
nop
jns
cmpsl
pop
jl
out
mov
mov
std
cld
arpl
dec
roll
mov
jo
cmp
xor
pusha
xor
outsb
clc
popa
shr
sahf
jle
jp
xchg
out
shlb
fwait
push
push
lret
scas
lcall
pusha
stc
stos
jle
mov
sub
mov
imul
push
pop
popf
cmp
daa
cltd
std
push
sub
and
inc
jnp
mov
ljmp
add
mov
roll
pop
xchg
lods
xor
sub
fwait
sub
mov
ss
js
pop
inc
adc
fnstsw
jp
push
in
fcoms
in
dec
pop
outsb
pop
cltd
cmp
lock
push
in
pop
or
cmp
push
popf
add
hlt
popl
fmull
pop
pop
jb
les
mov
sbb
pop
sbb
push
fstl
add
mov
and
sub
scas
mov
insl
daa
stos
mov
xor
jo
in
shll
in
xchg
in
sbb
mov
add
les
xchg
incb
jecxz
cmp
inc
into
stos
out
andb
cmpsl
or
shlb
repnz
mov
xchg
mov
or
or
in
mov
mov
push
repz
xchg
mov
pop
cltd
push
addr16
int
rol
test
cmpsl
xchg
ret
imul
sub
jb
adc
sub
add
outsl
mov
loop
mov
lahf
jns
idivb
jbe
pushf
scas
hlt
dec
xchg
or
test
movsl
int
jecxz
cmp
sbb
movsb
push
push
mov
hlt
mov
mov
das
andl
je
ficomps
pushf
mov
jp
push
fcoml
test
cld
cwtl
gs
sarl
dec
gs
pop
sarb
je
shlb
cwtl
scas
push
popa
mov
dec
insb
mov
or
in
outsb
ja
xchg
jl
push
mov
dec
dec
push
mov
add
cmp
nop
jl
xchg
dec
stos
sti
loop
lcall
push
mov
hlt
cmp
and
mov
mov
pop
in
clc
sub
sbb
dec
jbe
mov
mov
dec
xchg
insl
mov
sub
lods
jp
adc
cwtl
push
outsl
cltd
sub
cli
push
pop
and
jnp
xor
outsl
xor
cmp
dec
cmpsb
sub
aaa
incb
fbld
adc
cmc
pop
insl
pop
ljmp
mov
pushf
call
push
xchg
xchg
push
cmpsl
and
pop
xchg
cmp
das
mov
stc
gs
fwait
cmp
xor
dec
sub
jno
sbb
fcompl
mov
shll
push
xchg
les
and
jb
push
dec
sub
imul
pop
pop
sbb
data16
mov
addb
push
add
jo
sbb
test
cwtl
inc
sbb
fidivrs
pop
lods
push
test
jle
or
xor
xor
out
push
daa
mov
xchg
add
sar
rep
adc
lds
xor
jge
icebp
rclb
cmp
sbb
and
fwait
pop
xchg
dec
fsubs
outsb
dec
pop
test
pop
mov
mov
out
push
fs
cmp
aaa
cmp
mov
movsb
js
repnz
sahf
subb
adc
mov
cmpsb
inc
rorl
movsl
mov
xor
push
adc
mov
repz
in
cmp
dec
lea
mov
mov
sub
pop
jb
repz
divb
stos
jl
jle
je
mov
cmp
jecxz
adc
cmc
into
cmp
iret
js
jge
shrl
or
mov
mov
call
rorb
or
jne
and
dec
dec
pushl
cwtl
fs
mov
aaa
jle
and
into
cltd
fwait
mov
idivb
clc
push
or
jns
and
pop
loopne
out
sti
es
adc
fstps
stos
lret
add
inc
lret
movsl
cmc
push
cltd
pushf
pop
pop
hlt
lret
push
shrl
cmp
push
inc
cmp
ja
mov
test
idivb
gs
dec
add
test
xor
data16
cmp
ljmp
lock
sub
inc
outsb
pop
or
xchg
push
flds
arpl
sbb
sub
xchg
add
add
inc
sub
xchg
popf
repnz
xor
in
out
iret
cld
inc
lcall
xor
loope
sbb
push
mov
sahf
sarl
sbb
gs
cli
xchg
push
sbb
mov
sub
aas
ffree
sbb
jmp
cmpsl
cs
inc
xor
dec
das
fs
xor
vmaxss
dec
iret
cmp
xor
fwait
arpl
add
stos
add
test
sbb
xchg
xor
test
adc
jecxz
fdivs
bound
ret
push
xor
adc
push
loope
pusha
pop
add
jmp
adc
sub
int3
rcll
subl
and
jb
cltd
sub
push
incb
out
mov
decb
pop
push
aaa
ljmp
mov
int3
mov
inc
inc
leave
push
mov
scas
icebp
cmp
andb
test
sub
bound
mov
push
add
xchg
xor
dec
add
in
rolb
sbb
jo
dec
sbb
fisubl
pop
jecxz
lods
or
cmp
aas
jb
outsl
jmp
adc
es
mov
mov
mov
push
in
mov
dec
cmpsl
add
lock
ret
adc
push
repz
hlt
scas
add
mov
and
jae
mov
inc
cmp
xchg
or
pop
pop
loop
and
or
and
nop
lcall
cmpsb
in
testl
int3
cmp
fldcw
mov
cwtl
out
movsl
subl
add
push
je
pop
adc
mov
sbb
dec
fidivrl
cmpb
and
aam
jne
lahf
ret
dec
pop
ja
arpl
fsubrs
or
lret
aaa
xchg
add
fdivs
mov
cmp
sbb
aas
mov
imull
lea
and
adc
jge
out
inc
sbb
stc
popa
dec
pop
movsl
mov
cltd
xchg
dec
loop
fidivl
pop
add
cwtl
jo
dec
mov
fildll
dec
bound
pop
jge
pop
test
or
xchg
pushf
dec
cmp
cwtl
or
cmpsl
sub
int3
clc
mov
and
je
sub
jecxz
and
es
inc
out
dec
lds
jo
or
jge
dec
jl
ja
fdecstp
inc
adc
add
sub
cmp
and
xchg
test
es
cmp
mov
popa
dec
dec
lcall
mov
inc
pusha
jb
jne
repz
lahf
push
sbb
shlb
outsb
aad
loopne
pop
sub
xor
fistpll
lock
push
lods
bound
dec
mov
mov
out
mov
aaa
xchg
mov
fstps
xchg
mov
loope
mov
sarl
mov
repz
mov
pop
dec
fldenv
add
or
push
lock
push
mov
xor
xor
mov
imul
pop
xlat
pushf
ja
shlb
shrl
xor
fldenv
adc
scas
inc
add
adc
out
dec
and
pushaw
push
push
lahf
mov
mov
lahf
adc
mov
cmpsl
int
sbb
fcmovbe
dec
sub
jbe
rcll
xchg
jle
leave
mov
outsb
lret
or
jns
and
xor
sub
or
push
adc
roll
ret
xor
xor
mov
lds
inc
popf
cld
cmp
cmpsb
pop
outsl
mov
stc
das
ss
pop
inc
or
out
lds
ficoml
into
call
jp
test
jg
addl
push
in
sbb
stc
pop
pop
cmp
test
jo
or
test
rcrb
mov
xor
popa
sbb
les
sub
jmp
xor
lods
push
icebp
imul
lcall
movsb
test
lods
xor
xchg
or
push
mov
shlb
xor
add
jg
sub
pop
popf
je
jae
mov
popf
pop
mov
test
add
cld
mov
or
push
push
dec
xchg
lcall
gs
in
into
push
roll
push
mov
out
adc
pop
nop
aaa
adc
pop
sbb
lods
addr16
push
inc
jge
dec
out
in
xor
jg
push
lcall
test
jae
push
and
mov
repz
imul
jle
dec
or
loop
inc
fisttpll
xor
xchg
sbb
push
lock
negl
xchg
test
xchg
xchg
out
pop
stos
movsb
mov
adcb
sub
push
dec
movsb
rep
fdiv
cmpsl
mov
cltd
lahf
inc
int
pop
loopne
pop
adc
aas
into
fbstp
sbb
sti
call
mov
pop
sbb
test
add
stos
jp
push
clc
outsl
incl
pop
jb
stc
lds
loop
test
in
mov
pushf
inc
pop
fwait
sbb
lahf
sbb
dec
push
js
xchg
or
test
adc
or
std
sub
fsubrl
mov
lods
data16
mov
enter
push
mov
sbb
call
rcll
xchg
mov
sti
fisttpl
outsb
les
xchg
fwait
mov
or
and
mov
gs
insl
repnz
mov
mov
lods
sbb
repz
and
pop
sbb
jmp
jecxz
xor
rcr
iret
inc
lds
xor
icebp
sub
aam
das
sbb
les
xor
std
inc
mov
mov
int
in
pop
js
lock
mov
in
push
pop
xchg
add
jmp
add
jnp
mov
pop
ss
mov
fnstcw
cwtl
pop
cmp
cmpl
cmp
out
add
mov
cmp
dec
lret
xchg
or
ret
subl
loope
cmp
hlt
sarl
pop
popf
stc
inc
popf
repnz
mov
and
sbb
inc
fisubrl
pop
out
mov
lret
leave
pop
xchg
sar
cltd
dec
ret
scas
shr
cmp
mov
dec
in
cmp
out
and
in
aad
dec
mov
shl
mov
jmp
icebp
scas
fadds
inc
jne
int
int3
adc
cmpsl
lcall
test
mov
inc
inc
dec
dec
push
xor
mov
push
and
add
push
subl
repnz
pop
xchg
fwait
jl
ret
test
fmuls
cmp
int
push
jbe
push
arpl
fildl
int
push
push
push
imul
push
ja
adc
and
push
rolb
cli
lahf
jnp
dec
mov
dec
out
or
pop
add
or
and
mov
std
mov
orb
aad
loop
xchg
mov
rorb
enter
out
pop
lahf
and
aas
xchg
or
adc
call
lods
adcb
xor
or
jns
icebp
dec
inc
int
int
imul
or
push
in
mov
cmpsb
imulb
mov
sbb
xchg
cmp
sub
adc
mov
inc
xor
mov
popf
inc
test
push
addb
cmpxchg
dec
int
roll
lahf
cmp
adc
js
scas
sahf
test
outsl
rclb
add
xor
push
iret
adc
jno
out
jb
hlt
add
test
dec
out
xlat
es
cmc
sarb
xchg
gs
or
sbb
sahf
movb
and
in
mov
push
cli
push
movsb
idivb
imul
sahf
jl
sub
mov
xor
mov
fs
leave
movsb
cltd
mov
adc
imul
movsl
lcall
imul
mov
sbb
enter
jecxz
pop
stos
mov
sbb
jle
push
xor
mov
adc
dec
jl
sti
in
aas
loop
sti
jo
or
test
push
stc
call
call
jno
pop
pop
adc
sub
inc
shll
loop
or
xor
arpl
push
ljmp
sub
imul
dec
add
test
outsl
stos
lea
movsb
adc
fadds
push
movsb
add
insl
push
rol
shrl
inc
mov
popf
ret
loopne,pn
movsl
stc
in
out
sub
fwait
lahf
lods
jno
sbb
or
sub
leave
dec
ss
mov
popa
jns
push
sarb
mov
in
je
sti
dec
xor
repnz
insl
cmpsb
jne
inc
add
mov
mov
dec
pop
lods
inc
inc
nop
fisubl
sbbl
mov
xchg
or
jb
outsl
adc
ds
push
adc
ror
adc
faddl
into
xchg
pop
dec
nop
lcall
mov
xchg
cs
mov
ret
mov
mov
or
and
and
cmpsb
out
cltd
lock
dec
dec
jns
push
testl
xchg
fildll
mov
adc
xor
test
mov
mov
lret
cmpsl
rcrb
in
test
out
leave
pop
aaa
out
imul
xchg
cmp
movsb
cmp
loop
pushf
or
in
daa
dec
mov
or
or
jecxz
xor
icebp
mov
cs
jge
insb
lea
xor
repz
pop
xchg
add
xlat
mov
sub
pusha
arpl
mov
jp
jno
pop
and
iret
stos
bound
mov
aas
xlat
push
inc
js
imul
add
mov
aam
cmpsl
mov
loope
add
jbe
cmc
movl
or
test
jecxz
ja
and
adc
jmp
xchg
mov
js
jge
aas
mov
enter
mov
scas
popa
fiaddl
or
sbb
adc
out
add
mov
sarb
mov
xor
mov
stc
pop
rcrl
out
xchg
mov
mov
arpl
sub
push
pop
jle
jae
ficoml
sbb
dec
jmp
into
into
nop
mov
pushf
xchg
jmp
xchg
push
test
icebp
loop
add
add
push
xor
in
fwait
pop
es
icebp
push
xchg
loope
mov
cli
test
popa
shrl
and
adc
inc
lahf
test
stos
add
fmuls
xor
mov
enter
xchg
mov
ficomps
jno
loop
adc
jo
pop
jmp
shlb
jg
pop
pop
in
mov
mov
cld
lahf
icebp
scas
dec
mov
xchg
jecxz
jbe
push
mov
sbb
inc
and
push
test
std
or
adc
ljmp
sbb
sub
shll
sub
in
jp
or
mov
mov
pop
std
sub
lds
pop
push
xlat
call
pop
ror
jbe
into
out
jno
sbbl
out
and
and
xor
aam
push
pop
jle
mov
jmp
popa
outsl
stos
ljmp
enter
jp
in
or
jge
aad
or
ret
aas
sahf
mov
push
inc
insl
jno
mov
xor
xlat
fistpll
mov
mov
femms
lahf
test
push
rolb
mov
les
lea
add
pusha
mov
call
fldl
lods
xchg
mov
xor
or
ds
xchg
fistpl
pusha
adc
or
sub
cmpsl
cli
addr16
setle
sub
jb
mov
cli
sbb
push
sub
inc
in
or
rcll
mulb
into
bound
xor
ss
std
mov
data16
mov
out
fdivs
dec
xor
sub
mov
imul
outsb
mov
mov
mov
jmp
pushf
sbb
scas
in
mov
mov
popf
sub
cmp
dec
sub
fcomi
aam
or
jno
roll
xor
jmp
add
in
data16
push
fwait
inc
xchg
loopne
popf
mov
xchg
imul
fists
test
je
scas
sub
mov
add
adc
jecxz
xchg
push
cmp
jmp
cltd
mov
push
and
cs
push
pop
pop
movsl
xchg
ss
xchg
xor
les
pop
lds
in
lds
sbb
mov
ret
aas
shlb
and
inc
enter
inc
insb
and
rcrl
shlb
repz
xchg
es
fadd
rcr
add
cmpsl
lods
sbb
or
adc
test
jae
push
fidivrs
xor
dec
mov
scas
pop
jne
mov
xchg
inc
cwtl
iret
out
popf
mov
adc
add
test
jb
pop
lret
and
mov
insb
dec
mov
cmc
mov
iret
and
mov
mov
push
push
push
jae
dec
jle
cltd
and
icebp
push
sbb
cmp
int
jecxz
imul
pusha
ret
adc
rclb
push
sbb
cwtl
rcrl
scas
sbb
or
lock
icebp
cmc
sub
and
pop
movups
enter
lahf
cmpsl
sub
sbb
sbb
leave
inc
mov
in
popa
ja
dec
and
cmpsb
xchg
or
push
mov
push
fs
pop
inc
or
xlat
cmp
fistl
idivl
andl
in
insl
dec
dec
mov
add
add
movsl
daa
mov
sbb
lahf
add
testb
adc
rcrl
in
inc
jecxz
sbb
cmpsb
std
xchg
ja
rep
rcr
jg
jle
rclb
pop
out
xor
push
jb
xchg
add
add
xor
add
fcompl
out
lret
pop
dec
gs
outsb
or
pop
or
mov
jp
adc
test
jb
add
jmp
mov
mov
rcrb
cmp
aad
arpl
xchg
xchg
or
push
mov
mov
inc
jb
mov
nop
adc
mov
inc
sub
mov
jg
daa
imul
nop
add
xor
cmp
jle
xor
addr16
xchg
lds
dec
jg
xchg
rorl
outsb
fdiv
loop
xchg
ds
cmp
mov
inc
lcall
jb
or
sti
or
or
fadds
test
sbb
lret
mov
nop
sub
fwait
into
jg
into
xor
or
rorb
sub
mov
sub
scas
xchg
lea
cmpsb
mov
inc
or
add
xor
push
mov
cmp
jmp
in
out
es
subb
adc
jno
inc
mov
inc
aaa
push
mov
push
subb
pushf
nop
cmp
aam
pop
nop
or
mov
lahf
add
jl
dec
loopne
icebp
lahf
pop
icebp
pop
insb
mov
fimull
rcrl
loop
imul
test
or
add
push
cmp
xlat
in
jnp
jge
cs
scas
sub
xlat
sub
xchg
inc
cmpsl
mov
sbb
xchg
or
fwait
dec
jmp
mov
xor
fstp
sbb
dec
sbb
inc
inc
xchg
push
das
inc
imul
mov
pop
cld
mov
or
mov
sub
test
clc
fs
int3
cmp
sub
aas
testl
pop
sbb
aaa
cmp
inc
mov
test
fsubrl
inc
xchg
push
xor
or
jne
nop
mov
inc
shl
andl
iret
fwait
adc
hlt
or
xchg
push
sahf
stc
inc
pop
and
stc
pop
inc
push
sbb
into
rclb
mov
jg
test
mov
or
hlt
adc
cmp
pop
cmp
jmp
sbb
mov
adc
negb
push
pop
add
push
movsl
gs
cmp
xchg
lods
les
or
adc
comiss
adc
mov
mov
push
inc
or
mov
push
push
fimuls
rcr
lods
and
push
mov
mov
dec
pop
je
sub
push
xchg
fldcw
outsb
jno
fwait
lahf
jg
ret
cmp
in
fdivr
dec
mov
xorb
sbb
mov
dec
fistpll
pop
mov
fmuls
sub
add
ret
push
inc
jbe
shlb
dec
dec
pop
mov
dec
movsb
shll
push
outsb
rcrl
jge
and
mov
mov
push
sub
lock
push
dec
jnp
add
xlat
in
add
pop
push
jge
jp
mov
sub
movsb
push
shlb
mov
cmpsb
dec
movsl
cmpsl
mov
fbstp
cld
fwait
mov
popf
xchg
pop
scas
inc
out
sti
cmp
fs
pushf
outsl
adc
repz
fst
dec
stc
add
out
dec
aas
inc
addr16
sbb
mov
adc
aam
je
ja
out
push
adc
iret
movsb
aam
or
fadd
jmp
cmp
jbe
inc
stc
insl
test
dec
mov
test
xchg
leave
mov
push
lret
pushfw
cmp
aas
mov
gs
es
imul
out
fisubrs
cmp
js
mov
sbb
sub
jae
mov
lds
cmpsb
sbb
cmpsb
and
xchg
pop
add
movsb
gs
orb
js
and
orl
pop
push
mov
jp
sub
cmp
jb
cmp
inc
pop
in
push
and
scas
sub
inc
in
in
out
fsubrs
inc
inc
cmp
add
lods
into
add
cmpsb
jb
push
xchg
add
addr16
inc
cld
inc
xchg
xchg
mov
or
ret
ljmp
cltd
popa
push
daa
lds
gs
or
mov
mov
fists
and
jb
cmp
in
xchg
jo
cmp
addr16
push
jns
loop
sub
daa
addr16
repnz
sahf
inc
mov
mov
and
jge
insb
adc
push
in
inc
test
xchg
imul
popa
popa
jg
pop
mov
in
jo
rclb
cmpsb
test
ljmp
out
mov
out
test
xchg
jg
sar
loopne
mov
scas
cmpsb
cmpsl
arpl
cmp
jg
adc
and
mov
xchg
iret
cmp
jp
pusha
xchg
gs
xorl
or
push
or
int3
pop
out
lock
mov
fs
jmp
add
sub
popf
jno
shlb
es
movnti
jae
jo
sbb
xor
push
ds
sub
xchg
sbb
scas
jp
jb
shll
cli
push
push
cmp
outsl
ret
test
jecxz
mov
into
jb
mov
test
sub
pusha
mov
ja
insb
mov
in
xor
mov
jns
fstps
sbb
cmp
stos
jmp
push
in
or
loop
pop
cld
dec
cmc
jle
cmpsb
and
sti
movsb
dec
sbb
add
sub
out
or
aas
mov
push
outsl
and
mov
add
test
mov
popa
lds
shrl
rclb
lcall
push
int3
sub
cli
insl
jmp
mov
test
cmp
sub
jnp
lods
cmp
std
mov
fwait
xor
xchg
sahf
lret
xchg
in
loope
dec
lcall
out
mov
out
shl
daa
icebp
push
mov
imul
scas
and
cltd
mov
into
pop
loop
orl
shlb
cmpl
rcll
mov
push
push
push
lods
sub
addr16
pop
sbb
dec
jb
sub
pop
jne
cmp
push
and
pop
rorl
lret
cmp
adc
sub
xchg
cltd
inc
cmp
sub
xor
sub
cli
lods
ljmp
xor
std
jg
jns
jg
das
push
sbb
mov
xchg
sbb
aas
jne
mov
push
pop
scas
pop
ss
jmp
mov
pop
sub
fiadds
push
loopne
sbb
js
pop
repnz
pusha
lods
mov
xchg
and
rorb
mov
lods
xchg
cmc
rcl
shlb
cmp
dec
push
xor
pop
stos
cld
daa
fwait
jle
mov
dec
cs
insl
in
cmpsb
push
cwtl
mov
inc
push
std
cmpb
call
fsubrs
dec
mov
iret
pop
dec
mov
lods
mov
inc
mov
inc
dec
jnp
xchg
inc
mov
ret
adc
xchg
inc
xchg
inc
push
aas
in
xchg
sahf
push
mov
insb
jne
xor
jnp
mov
andl
data16
lret
pop
addb
ficoms
scas
out
sub
push
add
imul
push
test
cmp
imul
xor
adc
dec
loop
lret
mov
lods
adc
mov
sub
push
cmpsl
sub
rcll
pop
adc
sbb
fldenv
loop
add
fmul
jae
repnz
xchg
cwtl
mov
sti
outsb
sub
sub
addb
inc
cmp
inc
mov
xchg
push
cmpsb
lahf
test
cmpsb
lcall
adc
fs
imul
jp
mov
push
dec
enter
movsb
push
sbb
gs
jns
rorb
sti
push
ljmp
jge
push
sub
xchg
dec
cmp
jo
xchg
or
xor
repz
imul
mov
xor
bound
test
ret
sub
lcall
and
gs
xchg
xor
xchg
mov
sub
jno
and
mov
iret
push
ljmp
mul
jl
push
xchg
and
fcomps
dec
add
movsb
sbb
ja
sahf
js
dec
xchg
fisubs
cmp
outsb
xlat
in
push
les
inc
inc
cltd
into
enter
aad
mov
cmp
xor
out
lret
ja
jns
aam
test
fisttps
shrb
shl
sarb
push
repz
or
push
dec
out
daa
sbb
movsl
rcl
cmp
das
xchg
cmp
gs
je
or
or
ljmp
or
or
das
or
pop
jge
hlt
push
add
dec
inc
aam
addr16
or
lret
addr16
adc
mov
repnz
icebp
data16
aam
mov
pop
iret
cmp
pop
mov
pop
movsb
mov
push
fisttpll
imul
out
std
iret
adc
mov
das
pusha
xchg
rcrl
lret
icebp
outsb
aam
dec
aas
pop
in
dec
out
cmp
lcall
dec
add
and
lahf
adc
or
fwait
push
cli
jmp
xchg
movsb
and
pusha
mov
cmp
cwtl
popf
add
icebp
das
sub
sarb
sub
sti
lds
popf
mov
mov
push
out
stc
ret
shll
mov
cmp
fisubrl
shlb
sti
xor
push
pop
mov
loop
leave
push
jns
neg
dec
and
lret
repz
in
dec
pop
dec
test
daa
mov
jae
fstl
dec
fisttpll
data16
dec
pop
push
pop
rorb
push
aaa
sbb
int
push
movnti
inc
int
pop
push
and
pop
push
lock
repnz
in
jo
outsb
in
xchg
push
sbb
pop
pop
cwtl
mov
sahf
adcl
loopne
bound
ret
mov
fdivs
hlt
lods
in
jbe
test
or
flds
pusha
inc
mov
ficoms
test
cmp
xor
add
add
nop
mov
adc
aam
inc
inc
sub
adc
enter
cmp
out
test
sub
pusha
jge
pop
add
sbb
sahf
shlb
clc
stc
dec
ret
loope
das
mov
inc
lea
repnz
xor
dec
dec
xchg
mov
out
push
stos
xchg
cmp
stc
repnz
push
lods
push
mov
inc
lds
adc
mulps
adc
cld
icebp
sbb
or
in
mov
adc
sti
pop
adc
pop
das
jns
repz
mov
fptan
fldcw
call
add
or
cmpsl
loopne
and
push
push
dec
adc
add
std
sahf
push
js
jbe
loope
hlt
push
jl
loopne
cmp
stc
cli
outsb
fsub
sub
cltd
mov
jmp
xchg
pop
jle
dec
std
rcll
add
fsubrl
jl
and
or
test
sub
call
mov
mov
push
outsb
fldcw
fiaddl
arpl
out
dec
sti
lret
jo
data16
test
in
jecxz
popa
mov
adc
cwtl
neg
mov
sar
adc
jp
xor
ficoml
xor
call
adc
scas
cmc
or
jbe
and
sbbb
jne
cwtl
and
rolb
mov
mov
aaa
push
inc
sub
jmp
rcrb
jecxz
fstp
in
lret
sbb
adc
int
add
dec
cmp
repz
cmp
mov
lods
addr16
icebp
lcall
test
lock
sti
cmpl
in
imul
jns
loop
xchg
fsubrs
mov
adc
cmp
push
add
ja
ret
mov
dec
fxch
gs
fidivrs
dec
test
adc
pusha
fsubs
or
loope
daa
fwait
popa
dec
xchg
std
xchg
push
inc
mov
dec
pop
test
sbb
gs
mov
cltd
out
sbbb
imul
push
add
mov
mov
or
push
in
inc
or
or
scas
clc
imul
scas
and
and
dec
imul
and
fsubs
aas
mov
dec
jns
lcall
jge
jnp
dec
mov
pop
in
cmp
push
aad
mov
sarl
mov
mov
ja
testl
loop
cmp
shll
outsl
mov
ljmp
ds
repnz
add
sub
in
cmc
jg
pop
and
imul
dec
enter
mov
decl
lods
shrb
mov
push
cmp
rol
pop
ret
scas
sub
jge
sete
push
test
pop
and
aaa
lock
mov
jmp
adc
pop
lds
sbb
pop
mov
jp
mov
jl
sbb
add
test
mov
leave
cmpsl
jmp
push
lds
sar
add
add
and
fdivs
mov
movsw
mov
mov
lcall
pusha
repnz
mov
jp
addr16
mov
cmc
test
shr
xor
mov
out
jecxz
pop
pop
roll
lods
cmp
mov
pop
ljmp
scas
frstor
insb
mov
sub
jmp
push
repnz
aas
jno
cmp
mov
xchg
jle
dec
xor
xor
iret
rcrb
mov
jbe
lock
icebp
and
sbb
jecxz
repz
mov
dec
cmpsb
jnp
int3
test
cmp
pop
adc
call
mov
add
mov
loope
xchg
popf
in
pop
fxch
dec
fmuls
and
filds
ljmp
push
lods
sbb
push
je
mov
mov
xlat
repnz
mov
push
cli
movsb
enter
call
insl
lret
fnsave
mov
cmp
ret
sub
sbb
ficoms
pusha
sti
lret
mov
or
xchg
xor
fisttpl
fnstcw
dec
loopne
inc
fistps
inc
ret
sbb
sbb
insl
and
hlt
cs
jne
fcmove
test
fwait
push
and
push
repz
outsb
ljmp
xlat
aas
fsts
js
lods
imull
sarl
out
lods
mov
sub
add
mov
lcall
cmp
jp
out
fwait
or
dec
int
mov
shll
fistpl
cltd
ss
pop
icebp
mov
out
pop
sbb
mov
stos
mov
mov
pop
sbb
jg
cmpsb
xchg
insb
add
push
sub
mov
popf
repz
roll
repnz
jle
int
cmpb
je
cld
xchg
push
ja
pop
push
xchg
mov
dec
sub
mov
mov
inc
cmp
lock
inc
dec
shrb
cs
pop
aad
imul
xchg
sub
jmp
daa
cmovs
inc
and
xchg
push
add
push
jo
call
sahf
insl
fistps
or
jl
mov
sahf
and
sub
sbb
pop
jae
inc
pop
xchg
in
mov
or
or
push
mov
inc
dec
iret
leave
jle
adc
xor
mov
loopne
nop
sti
int
out
orb
out
fwait
jbe
jle
imul
ret
sub
jmp
cmpsl
test
jb
sbb
sahf
adc
inc
jmp
insb
mov
out
mov
push
jge
jnp
sbb
stos
inc
xlat
jnp
push
cwtl
xchg
pusha
pop
mov
adc
jo
in
sbb
adc
scas
imul
in
sub
cmc
jo
aas
add
out
fsubrs
jg
fisubrl
xchg
sbb
iret
iret
add
fcomi
jmp
cmpsl
jb
ret
jecxz
sbb
fcoms
sub
aaa
add
insb
mov
cmp
fdivrp
xchg
jl
inc
xchg
repnz
and
jno
lock
mov
ficomps
cmp
sbb
jb
xor
jb
pusha
mov
dec
lea
imul
pop
adc
and
mov
jecxz
mov
mov
out
pop
adc
mov
pop
fsubrs
pop
or
inc
in
scas
pop
xchg
inc
pop
mov
xchg
jmp
jl
aaa
mulb
adc
sahf
add
and
js
out
fadds
cmp
cmpsl
dec
mov
sbb
ret
clc
test
or
loope
lock
jp
loopne
xor
scas
cltd
pop
xor
push
sti
nop
cmpsb
push
pop
cmp
fs
subb
lcall
inc
pop
fwait
mov
call
adcl
outsl
xchg
popa
cmp
popf
or
xchg
jmp
or
mov
inc
add
mov
subl
icebp
ja
rcll
lea
movsl
sbbb
sbb
and
repnz
jae
add
leave
or
in
aad
mov
mov
pusha
rcrb
pop
cmp
ret
jns
cmc
push
sub
or
dec
jg
mov
sub
mov
add
cmp
fstl
mov
out
cmpsl
mov
fists
rcll
aas
push
dec
xchg
fldl
test
sub
mov
dec
aaa
push
sbb
inc
ret
mov
lret
out
sub
xor
call
adc
or
mov
xor
cmp
or
je
inc
lods
mov
cmpsb
loopne
add
loop
jne
sbb
jae
xchg
outsb
add
jno
mov
test
lds
sub
fcmovb
mov
xchg
pop
xchg
lds
dec
mov
jns
push
arpl
sbbl
ss
rolb
cwtl
inc
fcoms
mov
and
insl
and
and
rep
push
adc
div
into
pop
sbb
shlb
test
stos
xchg
call
cli
mov
pop
test
cmp
in
cwtl
adcl
mov
iret
pop
adc
cmp
jge
cmp
cltd
mov
aaa
stos
arpl
push
in
xor
xor
test
stc
out
cltd
jp
inc
fcomps
pop
test
stc
sbbl
outsl
push
sbb
in
and
vdivss
xor
pop
mov
rclb
push
jl
jb
mov
adc
mov
call
sbb
les
cmp
lods
ss
mov
outsl
pop
sub
sbb
lahf
pop
sbb
incl
int
mov
jp
and
jns
push
jb
mov
inc
lahf
insl
jbe
push
and
sbb
mov
clc
fimuls
add
push
sub
inc
in
jecxz
idiv
out
sahf
dec
cmpl
sarl
sub
or
pop
movsl
ja
cmp
push
adc
out
sub
mov
and
xchg
push
lret
mov
cmpsl
mov
rclb
push
add
inc
add
sbb
jo
shl
sub
inc
bound
sbb
xchg
mov
xchg
cwtl
push
adc
xor
or
shrb
sub
div
mov
jmp
sub
shl
sahf
std
inc
cld
in
es
data16
clc
or
aas
scas
lret
mov
cmpsb
add
jle
imul
push
xor
lret
das
cld
adc
xor
stos
inc
test
dec
mov
scas
iret
xchg
loope
repz
gs
push
notb
mov
add
mov
addb
inc
fsubs
push
andb
pop
or
or
out
xor
adc
add
rcrb
jle
dec
dec
jne
lods
mov
mov
shlb
es
mov
outsb
jnp
cmp
aad
das
icebp
push
adc
lahf
fwait
add
sti
pop
inc
xorl
mov
cmc
or
nop
jnp
out
xor
arpl
test
ret
movsb
popa
es
push
sbbb
cwtl
xchg
jns
pusha
sbb
out
mov
das
xlat
gs
mov
fsubrs
pusha
sub
mov
mov
mov
xchg
push
nop
test
or
out
xchg
pop
xlat
jge
sbb
lea
das
std
push
ss
pop
rcrl
mov
sub
mov
fadds
jno
pop
ljmp
fs
rep
add
jge
into
pop
push
pop
leave
pusha
inc
mulps
cmp
mov
jb
xor
int
inc
adc
add
jbe
push
xlat
das
lcall
test
push
fimull
jmp
push
adc
sbb
icebp
lods
cmp
rorb
test
int3
xchg
das
popa
pop
sbb
jnp
mov
addr16
push
inc
pop
into
movsb
xchg
js
and
repnz
cs
call
addl
xchg
js
sub
outsb
pushf
in
in
pop
push
add
fwait
dec
pop
push
push
shlb
fmuls
cwtl
shlb
mov
mov
shlb
cmp
fwait
push
mov
ds
outsb
inc
data16
outsl
stc
mov
loope
adc
or
xchg
int3
je
adc
loop
jecxz
push
jge
jnp
xor
inc
cld
jae
add
xchg
inc
inc
mov
pop
ljmp
mov
aam
int
inc
and
xchg
sbb
mulb
enter
outsl
out
mul
mov
xchg
adc
or
fcmovnb
add
push
outsb
sbbl
mov
jns
add
xchg
ss
ja
test
xlat
adc
mov
mov
jnp
pop
pop
repnz
pcmpeqb
pop
ss
adc
outsb
jnp
cwtl
push
cwtl
cmpsl
leave
push
adc
xor
add
xor
adc
jae
add
fmul
xchg
inc
dec
rcrl
rol
test
dec
jp
adc
or
adc
jno
stos
repnz
cli
push
push
pop
sbb
or
stc
pop
aam
out
jo
bound
gs
jb
das
sub
push
rolb
cs
test
dec
testl
iret
or
lahf
mov
pop
push
std
mov
add
pop
sub
mov
pop
or
sbb
pop
ljmp
cld
nop
xor
aas
push
adc
push
cmp
aad
xchg
mov
xchg
pop
add
xchg
xor
in
adc
xor
scas
cmp
inc
or
sarl
jnp
fdivrl
pop
fldt
add
pop
lcall
mov
jp
mov
imul
leave
insb
lret
xor
lcall
out
push
fnstcw
pop
leave
popf
push
xchg
push
jae
ljmp
rcr
xor
mov
sarb
add
mov
mov
mov
loope
rorl
sub
add
popw
ret
test
mov
mov
push
aam
xor
mov
icebp
icebp
mov
push
xor
mov
insb
imul
loope
jge
pop
lcall
xor
lret
test
push
dec
enter
jge
fwait
or
mov
inc
mov
call
inc
ja
push
es
fnstcw
sub
push
add
cmpl
mov
shlb
mov
mov
push
pop
in
shl
daa
or
in
shll
adc
imul
pop
jmp
lods
add
sbbl
add
sbb
test
aaa
inc
xchg
sub
push
xchg
add
sbb
lahf
pop
and
sti
das
and
lock
push
dec
and
aad
jae
dec
pop
jb
enter
fidivs
mov
pop
outsb
mov
shl
jge
in
je
add
mov
xor
scas
and
push
inc
roll
mov
and
std
push
dec
test
les
out
push
fwait
cs
bound
mov
pop
mov
mov
mov
out
cld
fisttps
or
push
aam
mov
sub
mov
ja
aas
mov
pop
fndisi(8087
aad
mov
and
adcl
shll
dec
mov
in
test
dec
pop
lock
xor
mov
xor
mov
mov
aas
sbb
xchg
sub
jnp
jge
jo
call
mov
pushf
int3
sti
adc
lcall
pop
xor
mov
mov
call
mov
cwtl
inc
shl
inc
in
mov
mov
xchg
xor
std
xchg
fisubrs
sub
loope
adcl
push
rol
out
jo
ud0
dec
and
push
mov
in
push
test
xor
xchg
stos
push
xchg
lods
jbe
or
outsl
add
fwait
repnz
lahf
xchg
les
pop
adc
je
pushf
shlb
stos
daa
aam
aam
mov
addr16
mov
arpl
dec
and
pop
insl
mov
mov
clc
mov
scas
inc
scas
add
or
sahf
sti
loope
inc
lock
int3
inc
mov
sahf
jno
icebp
dec
or
xchg
or
pop
add
push
pop
cmpsl
out
cmp
mov
jbe
and
sbb
mov
and
sahf
inc
out
ret
and
dec
jmp
popf
inc
call
outsl
stos
pusha
pop
pop
shll
jno
adc
insl
movsb
adc
into
mov
cmc
dec
movsb
mov
mov
bound
pop
add
icebp
loope
xor
push
sbb
jns
lea
rcrl
fsubrl
mov
mov
mov
jmp
and
cwtl
xor
movsl
jle
push
pushf
repnz
xchg
dec
dec
rcrl
insl
xor
and
inc
sub
cli
push
mov
xchg
pop
push
lcall
push
negb
or
scas
push
pop
fs
xchg
jb
fs
push
sbb
and
xor
cmpl
adc
cmp
call
mov
mov
cs
mov
pop
mov
sbb
xor
push
data16
dec
adc
jb
pop
fildll
scas
pop
cmpsl
cmp
negb
jecxz
mov
inc
push
fsts
cmp
les
cmpsb
jns
stos
scas
enterw
push
in
mov
adc
sub
stos
mov
xchg
ja
sbb
cmp
mov
add
cmc
movsb
in
loop
add
or
xchg
bound
dec
mov
gs
jmp
mov
aas
int
hlt
out
dec
inc
hlt
pop
imul
inc
jmp
cmp
inc
imull
pop
adc
pop
mov
lahf
cmc
push
je
mov
dec
ret
mov
aas
xor
mov
xchg
testl
or
add
roll
and
test
sbb
sub
jae
in
lea
sarb
fnsave
xchg
fldl
mov
inc
gs
je
int
dec
insb
cli
inc
inc
arpl
jg
inc
cli
push
sbb
cmp
in
mov
adc
and
adc
or
or
mov
in
cmc
in
stos
pop
in
je
adc
xor
lods
movsl
jo
xchg
sub
test
cmp
mov
xchg
xlat
xchg
inc
sbb
mov
jbe
push
xchg
in
aad
sbb
rclb
es
enter
jnp
mov
mov
outsl
das
pop
xchg
push
cld
dec
jnp
adc
sub
in
dec
mov
imul
push
rcl
int3
mov
cmp
mov
xlat
ficoms
push
or
dec
int3
scas
push
mov
xchg
sbb
mov
std
test
scas
cmp
adc
mov
or
mov
add
pop
std
jp
push
outsl
or
inc
inc
pop
xchg
and
ja
pop
or
int3
scas
inc
loope
cli
mov
mov
inc
push
adc
inc
mov
sub
push
test
test
push
enter
cwtl
or
and
daa
push
imul
mov
movsb
outsb
or
dec
jno
icebp
icebp
mov
dec
dec
and
jmp
and
push
cmp
mov
das
adc
repz
sbb
mov
cwtl
sbb
iret
cmp
sbb
xchg
ret
or
loopne
mov
xchg
rorl
and
or
in
leave
dec
hlt
rcll
rol
aas
add
inc
or
ret
cmp
enter
outsl
fs
push
sbb
popf
sbb
add
mov
and
ss
clc
dec
adc
jmp
xorl
scas
fbld
jno
or
adc
imul
nop
sbb
loop
popa
andl
cwtl
sub
add
dec
test
movb
pop
and
fdivr
cmp
jmp
into
and
dec
adc
dec
fwait
stos
aas
arpl
imul
jae
out
push
sbbl
push
loop
push
dec
adc
out
jae
repz
push
loop
rclb
jg
inc
pop
sbb
out
xor
into
dec
pop
lods
jne
jecxz
ljmp
lahf
daa
cmp
icebp
pop
xchg
or
xorb
add
add
cmc
dec
popa
dec
test
pminsw
lods
insl
shll
add
push
into
sub
push
push
pop
negb
adc
test
dec
out
divl
fs
je
es
test
test
enter
cmp
movsb
xor
fnstsw
sbbl
cltd
enter
jmp
lods
cld
addl
push
adc
cmp
mov
jmp
jg
xchg
dec
add
pop
or
add
repnz
adc
xor
sub
popl
xor
xchg
cmpsl
add
fcom
call
and
neg
js
mov
fdivrl
aam
jbe
sbb
cmpsl
sbb
dec
pusha
jecxz
sub
add
mov
mov
ret
cld
dec
test
adc
mov
cld
jbe
lcall
mov
jns
cwtl
in
sbb
scas
lea
and
call
aaa
xor
push
out
xchg
adc
adc
adcb
adc
rcrl
les
xorl
push
or
inc
movsl
int3
mov
pop
je
add
imul
ja
in
sub
outsb
xchg
cltd
jae
int3
or
rcll
jp
push
add
out
add
call
sub
imul
xchg
test
push
adc
lods
mov
aaa
push
inc
xor
insb
ds
xlat
inc
je
sub
sbb
sub
cmp
clc
enter
stos
shll
push
daa
test
and
push
out
sarw
push
jns
jne
push
jmp
dec
aam
pop
xor
sbb
jno
outsl
aam
popa
mov
dec
push
es
lahf
mov
sbb
cltd
jo
les
data16
movsb
enter
bound
sub
inc
and
mov
leave
inc
pushf
mov
adc
fs
and
adc
sub
and
xchg
shrb
lret
or
dec
iret
aas
stc
in
incb
pop
enter
ret
decl
fnstcw
push
add
pop
sarb
andl
jbe
shlb
dec
inc
jae
fistps
iret
dec
pushf
and
cmpsl
repnz
insb
enter
daa
sbb
or
jnp
xchg
sub
and
push
int3
lods
test
outsl
out
inc
xchg
adc
mov
fcmovnbe
loop
data16
stos
pop
inc
adc
pop
push
jns
adc
adc
pop
popf
sub
adc
data16
mov
push
xchg
push
push
sti
stos
das
sarb
cmpsl
or
lds
fisttpl
sti
fsubrs
movsb
div
loope
nop
lock
mov
ja
mov
sbb
popa
dec
mov
xchg
mov
sub
inc
testb
add
dec
call
adcl
jp
sarb
pop
sbb
loopne
pop
jp
xchg
lcall
mov
add
jmp
adc
inc
inc
mov
test
inc
or
push
out
xchg
cli
push
mov
mov
lods
xor
movsb
mov
rclb
nop
mov
or
jbe
repz
in
push
insb
mov
xor
sti
sbb
in
push
push
and
lahf
push
dec
scas
dec
aaa
push
rcl
add
gs
cmp
add
dec
inc
rcl
xchg
mov
cld
loope
push
mov
bound
push
mov
push
insl
mov
daa
mov
insl
out
enter
inc
aaa
lahf
pop
cmp
je
adc
test
pop
push
push
xchg
popa
daa
mov
cs
xlat
stc
and
xchg
incb
xchg
in
out
test
jge
inc
pop
sub
cmp
jae
es
int
push
push
mov
fs
in
add
mov
cltd
lahf
idivb
mov
pop
mov
hlt
scas
dec
loopne
add
fcoms
inc
call
sbb
lahf
pop
popf
je
xchg
pop
movsl
xchg
sub
es
out
shrb
dec
lods
loop
adc
adc
and
mov
lock
cmp
sbb
adc
insb
sarl
mov
mov
fwait
out
xchg
aam
mov
jo
pop
jg
or
and
test
cld
pushf
dec
popa
shlb
sbb
xchg
ja
xor
inc
ljmp
test
mov
clc
pop
iret
inc
sahf
mov
lahf
pop
shrb
mov
pop
stos
fistpll
cltd
mov
js
sub
or
shrl
jp
loop
aaa
adcb
fildll
clc
pushl
dec
dec
mov
mov
jl
fstl
popf
nop
aam
pop
inc
es
pusha
decl
inc
xchg
repz
icebp
adc
mov
sti
cmpsl
jae
push
mov
sub
mov
mov
mov
jne
fstpl
mov
cli
rcl
jno
or
test
sbb
hlt
add
add
movl
cs
dec
mov
mov
mov
cmp
pusha
add
mov
pop
or
aam
ljmp
mov
mov
outsl
jge
jge
adcb
add
aaa
mov
inc
std
pop
ss
int3
daa
out
push
shrb
in
sbb
adc
sbbb
mov
scas
sub
in
add
ss
cmpsl
out
lret
xchg
insl
pop
jo
jo
sub
jns
mov
lret
jo
cwtl
movups
xchg
arpl
jne
out
inc
loope
sahf
pushf
cli
stc
shlb
mov
inc
mov
cmpsb
cld
insb
mov
jle
jne
les
shlb
test
xlat
hlt
clc
jmp
adc
hlt
ret
sub
mov
and
out
cltd
xchg
jne
ret
aad
and
pusha
xor
pushf
mov
xchg
xchg
leave
or
push
je
pop
dec
sub
loop
xchg
sub
xchg
inc
pop
ds
gs
data16
xchg
das
jl
pop
cmc
dec
loopne
push
repz
jns
rcrl
popa
cmp
xlat
sub
aaa
mov
les
and
ds
test
in
xor
in
cmp
xchg
xchg
fneni(8087
mov
cmp
pop
xchg
stos
cmp
add
inc
mov
jle
mov
mov
repz
jns
je
pop
push
scas
aas
ja
movsl
xor
cwtl
xlat
ss
cmp
jb
loope
mov
fistpll
rcll
and
dec
xor
je
jbe
lea
xchg
pop
divl
and
movsb
sub
imul
xor
xchg
pop
out
rcll
pushf
mov
sti
enter
mov
imul
dec
fidivs
push
into
sti
jl
pushw
movsb
dec
andl
cltd
mov
psubd
mov
leave
jmp
lock
outsl
ss
mov
push
jno
in
cli
dec
iret
pop
and
aaa
mov
add
popf
jb
nop
pop
jmp
cmc
aaa
pop
iret
push
cmpsb
cmp
stos
jp
loop
repz
mov
pop
adc
enter
or
in
cmp
cmp
mov
in
movsb
lahf
aam
ret
dec
out
scas
and
es
cmpsl
movsl
push
aad
xchg
dec
cmpsb
js
ret
test
in
bound
idiv
jge
cwtl
mov
test
add
push
mov
shll
fnstenv
mov
in
jo
pop
xchg
ja
inc
fistpl
rolb
mov
jg
push
jbe
pop
clc
ja
dec
mov
sub
and
push
lea
call
rcr
mov
jge
out
pusha
xchg
sub
test
adc
jae
pushf
jmp
add
cmp
xor
pop
rcrb
out
push
push
sbb
addb
dec
addr16
aad
int
lds
dec
pop
stos
adc
mov
mov
ljmp
jo
das
push
lods
fwait
insb
xor
fidivrl
mov
loope
mov
lret
dec
in
mov
ds
cmp
pop
adc
pushfw
mov
pop
xchg
stc
push
pop
sub
cmp
sahf
mov
adc
jae
inc
mov
dec
cltd
ds
call
leave
daa
cld
xchg
sbb
push
ljmp
xchg
ds
addr16
dec
add
push
fsqrt
ss
cltd
js
jg
cmp
sub
jg
add
sub
dec
cmp
dec
cmpsl
jbe
mov
cltd
inc
movsl
cmpsb
xor
cs
stc
shl
cmpb
and
cli
push
outsl
sti
push
pop
je
xchg
jns
test
inc
mov
or
dec
mov
push
es
mov
push
add
call
xchg
popf
dec
push
popa
push
push
push
lcall
test
xor
das
test
in
in
xchg
mov
pop
pop
adc
ret
and
jno
je
pop
addr16
xchg
scas
mov
mov
adc
pop
or
dec
sub
sub
std
dec
ljmp
dec
mov
inc
sti
pop
and
mov
addr16
jns
mov
popa
mov
mul
adc
and
mov
push
cmpsl
rep
jo
ss
fwait
lods
fisubrs
ret
mov
jo
push
stos
outsl
sbb
lcall
ja
and
in
jmp
bound
xchg
roll
ljmp
ja
in
or
cltd
out
push
dec
xor
int
add
dec
roll
in
push
mov
inc
js
push
fistpll
jp
push
aaa
push
ljmp
and
lea
ror
sub
cmp
cmp
adc
lea
lcall
mov
inc
push
sub
lret
pop
fdivrl
mov
mov
or
mov
xor
sbb
or
xchg
aas
sbb
ss
cld
lret
pop
mov
cmp
xchg
test
cmp
mov
lock
scas
icebp
inc
pop
mov
daa
cmp
pop
add
or
add
loop
cltd
sti
call
mov
jmp
push
sbb
pop
pushl
cmp
cmp
in
push
mov
pop
mov
pop
add
lahf
int
adc
fdivrp
dec
mov
jecxz
xchg
mov
xor
leave
ds
mov
mov
gs
sti
pop
fstpl
mov
mov
das
adc
stos
sub
xchg
or
ficoml
mov
testl
inc
cmp
and
jo
lcall
out
pop
mov
cmp
push
add
xchg
lods
jb
fldcw
iret
jl
dec
cmp
shlb
mov
in
scas
add
mov
aaa
xchg
cmp
jl
aad
out
pop
shlb
xchg
clc
jnp
jbe
and
jns
aaa
push
jge
bound
lods
inc
sub
dec
adc
enter
jne
inc
out
sub
insl
xchg
inc
jle
pop
lods
push
jno
addl
lea
pop
jno
dec
add
mov
mov
scas
rorl
popf
iret
dec
popa
mov
fdivrp
and
pushf
mov
call
inc
pushf
sub
and
fldenv
pop
mov
faddp
cmp
mov
in
push
dec
clc
xchg
mov
ljmp
lret
movsb
and
imul
sarb
jge
insl
adc
push
ss
daa
pop
paddw
dec
por
shl
sub
dec
jge
int3
rcl
push
pop
nop
mov
lods
xchg
insl
push
mov
outsl
sbb
aaa
inc
jl
lods
inc
jno
mov
jbe
push
orb
outsb
pop
test
dec
jbe
inc
inc
jae
xchg
or
xchg
mov
fdivs
push
sar
push
xor
imul
mov
pop
cmp
cmp
jae
popa
jne
iret
stos
pop
mov
jp
fisttps
push
dec
cmp
inc
dec
adcb
leave
xorb
xchg
das
and
adc
and
stos
fmull
pop
aaa
icebp
mov
push
pop
adc
mov
adc
adc
jo
scas
dec
xchg
pop
cld
shll
adc
aam
push
sbb
out
ss
das
inc
cmp
cmpsb
add
pushf
pop
cwtl
popa
rolb
pop
add
push
jp
decl
mov
sbb
rol
pop
psadbw
repnz
xchg
jae
loope
mov
shl
mov
fcmovbe
jno
leave
in
and
pop
inc
and
sbb
cmc
push
add
pop
dec
mov
jle
nop
mov
push
icebp
pop
pusha
sbb
sub
out
inc
roll
mov
cmp
ret
inc
inc
jnp
shl
lds
add
mov
xor
xchg
std
mov
xor
insb
insb
inc
push
dec
push
sbb
push
pop
or
insl
cmp
adc
push
pop
sbb
nopl
dec
pop
das
out
jecxz
rorl
add
mov
dec
shl
xchg
cmpsl
mov
mov
sub
pop
mov
clc
mov
clc
sub
add
fimuls
js
xchg
xchg
lret
xchg
cs
int
xor
cmp
xchg
pop
fdivs
pop
jge
or
cmp
xchg
scas
imul
xor
xor
mov
jl
jns
xchg
adc
adc
sbb
icebp
outsb
mov
inc
dec
cmp
inc
sub
stos
popa
jnp
gs
and
cli
hlt
pop
shlb
orb
incl
adc
cmc
lea
cmpsl
cmpsb
ret
sbb
mov
pop
sarl
push
xorl
push
mov
iret
push
add
scas
fidivl
cld
sahf
push
xchg
cmc
jge
inc
in
test
push
mov
call
lret
popa
out
or
shll
cmpsl
jne
mov
movb
or
xchg
aam
push
cli
or
push
mov
push
sub
out
dec
or
add
mov
cmc
cmp
jp
push
push
in
push
icebp
sbb
sbb
dec
int
cmpb
sbb
pop
fdiv
jecxz
loopne
cmpsl
xchg
clc
mov
push
xor
inc
jle
or
daa
xlat
and
in
js
jg
sub
scas
add
ja
js
or
mov
shrl
cmpsb
xor
jno
scas
lcall
dec
cmp
xor
xchg
orl
sub
sub
xchg
addl
imul
in
leave
adc
insl
adcl
add
pop
inc
repz
in
into
cmpsl
cmp
test
cmp
jge
mov
jnp
dec
xchg
push
movsb
push
push
sbb
lea
leave
sbb
mov
clc
dec
and
rclb
or
loop
dec
xchg
cmc
push
sub
xor
jmp
stos
push
xlat
jno
cmc
das
dec
insl
fs
and
dec
dec
arpl
lret
sub
push
imul
int3
jne
sub
jg
mov
nop
mov
push
in
dec
aaa
imul
inc
pop
xor
in
adc
dec
mov
xchg
dec
fdivl
push
push
and
sub
cmpsl
mov
loope
fs
add
xor
movsb
add
cmp
mov
pop
ss
push
mov
mov
mov
repz
cltd
out
xchg
aam
mov
out
or
gs
fwait
inc
js
cmpsb
sub
xor
add
jg
inc
cmp
mov
and
cmp
sbb
icebp
cmpsb
mov
dec
sbb
mov
push
add
sahf
out
out
push
sub
ret
push
add
adc
xchg
rorl
fisubrs
mov
push
mov
cmp
std
outsb
lock
add
cltd
dec
lcall
xor
outsb
mov
sub
shll
cmp
testl
test
js
lcall
jne
lds
pop
in
push
or
add
mov
add
ret
fwait
dec
call
adc
xchg
in
adc
shlb
andl
xor
mov
loop
mov
jns
test
cld
testb
jb
add
hlt
jg
in
ja
popa
inc
sub
test
cmp
push
inc
dec
pop
add
fidivs
scas
ds
and
push
negb
pusha
mov
aaa
push
test
or
inc
fnstsw
cmpsb
outsl
in
add
fbld
lcall
dec
and
int
xor
cmp
ret
ficoml
lret
xchg
popf
jb
insl
inc
in
arpl
test
adc
ret
test
inc
mov
xor
jecxz
subl
pusha
fdivs
or
xchg
insl
enter
scas
sub
or
lret
or
cs
repz
sub
imul
sbb
xchg
pop
jg
push
imul
push
aas
test
mov
leave
or
mov
dec
cmpsl
adc
ds
into
ljmp
cmc
pop
and
rcr
in
sbb
enter
sub
xor
fwait
xor
decb
xor
ret
push
clc
gs
sub
sarb
jnp
sarl
out
cmp
inc
fistpl
aad
aaa
xchg
cmpsl
test
pop
adc
cld
add
in
jecxz
sbb
or
daa
or
cmova
and
rorl
or
jbe
push
shl
xchg
add
add
out
and
and
fisubs
mov
add
mov
inc
push
adc
clc
imul
dec
pop
or
les
inc
push
aas
into
push
ss
mov
dec
jp
ja
in
aas
push
divb
inc
test
cmpsl
pusha
push
and
fsubrl
jo
shlb
xchg
ret
jmp
call
push
adc
cmp
scas
xor
jns
cmp
testb
push
pop
int
pop
jl
cltd
sub
jmp
cmp
std
loopne
mov
push
or
jno
sbb
stc
movsb
call
and
lods
cmp
jae
mov
add
lfs
stos
inc
stc
cmpsb
xchg
frstor
popa
xor
push
lea
repz
cmp
loopne
pop
or
pushf
lret
pop
add
mov
or
pushf
cmpsb
repnz
cmp
in
mov
lods
sbb
inc
mov
ret
mov
mov
in
mov
lahf
sub
dec
mov
jno
imul
push
sub
push
nop
push
stc
clc
cwtl
sub
sub
inc
pop
and
scas
mov
lock
insl
outsl
lods
frstor
outsb
xor
popa
sub
or
filds
pop
dec
into
pop
xor
fs
pushf
xchg
loope
mov
mov
and
test
mov
xchg
and
jle
rcrl
std
jecxz
cmp
dec
jle
outsb
xor
xchg
sub
aas
dec
popf
push
xchg
push
aaa
cmp
popa
xor
loopne
and
add
sbb
in
addr16
xchg
out
xor
sbb
adc
ror
cmp
sub
frstor
mov
or
rcrb
jl
shlb
out
inc
xchg
inc
cmp
mov
jno
push
les
les
inc
pop
fdivrl
bnd
fbstp
inc
dec
lods
mov
aaa
ds
xor
fildl
decl
xchg
push
sub
cwtl
push
push
sbb
pusha
fwait
push
mov
out
jo
test
xorb
stos
adc
push
jno
bound
cmp
sbb
push
sbb
leave
xor
and
mov
sub
fprem
lret
mov
and
in
xor
stos
fldenv
dec
cwtl
jle
sbb
push
aam
mov
out
xor
cmp
sub
push
xor
outsl
jnp
xchg
and
push
fisttpl
xor
aad
ss
cmc
lock
aaa
xor
mov
mov
mov
lret
xchg
mov
xchg
push
nop
inc
cmp
je
lea
push
repnz
cmc
jp
jbe
xchg
add
loopne
jns
mov
fnsave
ret
jmp
into
add
push
shll
dec
fsts
xchg
adc
cmpb
xor
mov
rol
int3
push
lods
ficompl
inc
push
rol
std
xchg
arpl
nop
dec
bound
je
cmpsb
test
mov
pop
jb
lahf
pop
int3
iret
mov
cs
push
loopne
xchg
jmp
sbb
mov
xor
fdiv
jmp
movsl
or
movb
iret
pushf
sti
or
and
xor
xchg
sbbl
xor
sbb
mov
cmp
sub
int3
mov
in
jecxz
mov
movsl
fs
dec
arpl
fistps
dec
lret
icebp
or
cmpb
fdivrl
dec
sub
mov
loopne
cmp
into
push
xchg
add
xor
jg
inc
test
dec
jae
fimuls
nop
in
and
lcall
jo
andl
dec
jae
push
push
mov
mov
lret
fcompl
add
sbb
pusha
lds
divb
in
cwtl
jle
aas
icebp
fs
imul
loope
in
push
jle
int
jge
mov
bound
adc
js
scas
jge
daa
jne
es
cld
bound
out
jge
pop
or
mov
enter
in
inc
arpl
addr16
jbe
sbb
sbb
test
cmp
adc
inc
pusha
ja
mov
pop
push
mov
push
jae
int3
push
mov
arpl
bound
or
sbb
ud1
cmp
lret
xchg
jns
add
mov
mov
mov
sbb
es
inc
fcmovu
sub
push
lea
les
mov
mov
cmp
mov
cli
repz
outsl
xchg
outsl
outsb
mov
and
out
mov
ret
aaa
xchg
add
fs
xchg
mov
jae
js
inc
loopne
push
je
pop
add
push
iret
jmp
push
iret
mov
xrelease
iret
and
mov
jp
push
sbb
imul
pop
push
add
outsb
jb
or
cli
pop
insl
mov
push
repnz
das
xchg
daa
jl
cmpsl
out
and
shlb
andb
pop
or
dec
fstpl
loope
pop
sahf
loope
push
sahf
leave
sahf
pop
cmp
dec
cmp
divl
push
add
push
pop
fwait
out
pop
push
dec
sahf
inc
or
mov
in
clc
inc
xchg
push
mov
loop
sahf
insb
mov
test
push
sub
jns
rorl
js
push
lds
xchg
icebp
orb
add
push
dec
dec
fisubrs
adc
mov
pushf
cli
rorl
insl
lock
jg
add
nop
sarl
xchg
stos
int3
insl
push
mov
jp
add
inc
inc
xchg
or
popf
sub
sbb
push
sahf
lods
into
push
xchg
stc
fimuls
rorl
push
repz
loope
lods
lahf
mov
xchg
pop
leave
in
fstpl
call
sti
cmpsl
sbb
push
movsb
and
add
inc
push
call
push
sti
mov
rcl
xchg
sub
into
js
flds
outsl
lahf
std
subb
arpl
dec
mov
mov
rorl
insb
lret
bound
icebp
out
mov
cmp
mov
pop
push
pop
das
or
addl
push
xor
into
mov
push
stc
leave
loopne
dec
xchg
mov
repz
into
add
lds
gs
imul
rcrl
insb
mov
enter
sub
ljmp
jge
fidivl
in
pop
or
int3
js
pop
sbb
jle
xlat
add
icebp
mov
dec
popf
and
inc
jb
add
movsl
test
ficoml
pop
inc
lcall
sbb
shrb
in
lret
insl
loop
pop
dec
xchg
lock
mov
scas
sub
mov
and
nopl
pop
cmc
arpl
in
xchg
xcrypt-ctr
cmpsl
ficompl
popa
pushf
lret
aam
mov
sbb
jmp
imulb
aad
and
mov
push
icebp
sbb
mov
ret
daa
sahf
sub
cmp
jmp
fdivr
inc
cmp
int3
sbb
addl
mov
test
les
cmpsb
add
adc
adc
gs
cld
ss
add
inc
or
push
sbb
ror
add
lods
jle
mov
sahf
imul
pop
add
pop
dec
jbe
push
jge
mov
ret
sub
testb
cs
pop
mov
pop
adc
cmp
shl
mov
mov
loopne
dec
mov
popf
aas
out
movsl
or
jmp
bound
movsl
jecxz
cmp
lock
inc
nop
fs
jne
mov
das
or
push
pushf
sbb
sbb
add
jecxz
je
or
pop
xchg
or
and
inc
out
aas
sub
dec
mov
std
ret
stc
push
ret
arpl
imul
dec
cmpsl
and
aad
add
into
sbb
mov
ficoms
in
and
and
fbstp
sarl
mov
pop
int3
adc
lods
repnz
loope
pushf
inc
sub
dec
pop
shrl
add
jg
fistpl
mov
ja
loop
int
ljmp
jae
rorb
mov
testl
clc
dec
push
inc
mov
daa
shrl
jbe
mov
bound
sbb
push
fimull
cwtl
orb
iret
push
int3
out
test
add
loopne
insb
mov
les
into
scas
mov
repz
push
es
jb
jnp
mov
sahf
dec
rcl
push
push
push
push
inc
gs
cmp
sbb
dec
insl
icebp
in
ds
call
mov
or
or
cmpsl
mov
jnp
fisttpl
xor
mov
lahf
movsb
or
jle
test
mov
add
mov
cltd
add
rcr
movsb
push
mov
aaa
or
aad
and
mov
lock
cmp
mov
out
jg
cmp
inc
xchg
popf
xchg
jo
push
dec
mov
lea
lea
nop
loopne
cmpsl
xchg
sbb
dec
add
cmp
clc
mov
adc
and
into
mov
test
clc
popf
and
stc
mov
lahf
lock
push
xchg
jmp
add
or
movsl
cmp
sti
add
sbb
pop
das
and
fsub
lcall
jno
addb
push
inc
adc
mov
fiadds
test
jmp
xor
xchg
pop
test
daa
cltd
insl
popf
lret
xor
sbb
and
dec
aam
lods
gs
cmp
and
inc
inc
mov
cli
out
gs
in
pop
sub
fsubrp
xchg
mov
into
hlt
adc
push
mov
insb
scas
mov
mov
gs
outsb
enter
cltd
push
sub
jmp
push
lret
bound
ja
mov
fidivrl
mov
push
jl
lds
push
ja
bound
rcrl
mov
push
push
add
cld
cmp
mov
push
lahf
imul
mov
jno
and
xchg
push
lods
and
mov
adc
adc
xor
rcr
lock
shrb
cmp
or
jne
xchg
mov
xlat
jno
adc
mov
in
lods
pop
adc
xor
int
decl
pop
ds
mov
pushl
mov
xchg
jp
mov
add
mov
leave
aam
movsl
movsl
sti
bound
popf
add
jecxz
cmpl
stos
mov
ds
xor
mov
cld
mov
sbb
add
fisubrs
mov
ret
mov
sub
ret
jb
enter
enter
jg
mov
movsl
cmp
add
mov
cmp
and
add
jle
pop
pop
mov
icebp
shlb
xchg
stos
pushf
dec
in
adc
fwait
stc
cmp
xchg
rcrl
or
xchg
insb
lea
stos
xlat
mov
adc
dec
push
pop
lds
pop
out
andl
pusha
fstpl
out
sub
leave
jno
and
nop
dec
mov
fildl
xor
jmp
cmpsl
es
sub
mov
loop
outsl
ds
xchg
insl
loopne
and
not
aam
mov
and
adc
dec
mov
xchg
jno
cmp
ss
sbb
inc
aaa
int3
movsb
pop
ret
repnz
cmpsb
push
mov
cmpsb
sahf
push
jb
cmp
ror
rorb
push
les
jmp
ljmp
push
inc
lret
jno
roll
mov
pusha
adc
jmp
mov
testb
idivb
xchg
insb
mov
push
cmc
mov
andnps
mov
and
stos
sti
rcr
sti
jle
inc
ret
ljmp
hlt
inc
xchg
xor
xchg
shr
xor
xor
or
imul
sbb
mov
and
adc
xor
sbb
repz
xor
inc
xchg
movntq
jg
ret
in
les
std
lahf
add
xor
loope
mov
jnp
popf
xchg
pop
add
shlb
and
addr16
test
dec
aad
nop
icebp
sub
pop
insl
xor
jb
cwtl
xchg
test
popa
shll
mov
test
es
cwtl
sub
test
test
cmp
lods
es
mov
pop
fildll
mov
movsb
dec
push
inc
push
cmp
push
xchg
dec
cmpsb
fcoms
jg
nop
sub
sub
xor
xorl
add
int
dec
mov
out
or
inc
mov
xchg
es
pop
sbb
rclb
xchg
inc
sub
jns
adc
jp
and
ja
mov
int
stos
pop
and
hlt
cmp
push
shl
cltd
cli
push
jge
hlt
dec
sbb
stos
aam
lcall
dec
jecxz
sarb
push
pop
xchg
cmp
add
jno
js
jo
sub
sub
lret
push
or
mov
das
hlt
inc
sub
clc
ss
pop
and
xchg
and
mov
shl
rcrb
cwtl
push
jno
imul
call
shrb
je
lret
jle
inc
mov
js
cmp
push
cmp
nop
dec
add
and
scas
mov
scas
push
sti
incl
movsb
inc
and
js
jge
test
lds
push
mov
mov
loopne
popf
sbb
push
lahf
fwait
int3
mov
ljmp
insl
fnstcw
movd
adc
pop
pop
sub
roll
or
inc
push
mov
movl
and
adc
es
cmpsb
or
paddsw
call
mov
jb
test
xchg
jno
dec
or
scas
out
jnp
jmp
sub
inc
jmp
and
iret
sbb
cmp
dec
pop
xchg
mov
push
stc
int
pop
fisttpl
adc
and
and
cmp
pop
or
das
cmp
scas
or
orb
push
popf
sbb
clc
jne
mov
dec
xchg
inc
mov
cwtl
and
mov
popa
push
mov
push
ds
mov
orb
mov
scas
xchg
leave
push
enter
pop
ds
push
ljmp
pop
xor
xlat
repz
pop
push
adc
scas
sub
arpl
or
sub
and
pop
mov
arpl
aas
dec
movsb
xchg
push
mov
lds
hlt
fisubl
testl
fsts
out
js
jae
mov
ja
ja
dec
mov
xorb
xor
test
outsl
mov
push
add
lret
xlat
clc
lock
int3
xchg
ret
add
push
jmp
ret
movsl
dec
cmp
push
and
add
and
mov
mov
jge
insb
ret
pushf
cs
or
jp
iret
inc
mov
in
inc
jbe
and
add
mov
push
lret
pop
rcrl
sub
and
les
std
jge
mov
mov
jnp
fidivrs
mov
icebp
pop
inc
sbb
pop
xor
add
push
adcb
push
xor
sub
add
in
pop
fnsave
pop
mov
sbb
xor
pop
cmp
movsb
mov
testl
and
rcrb
xchg
test
add
dec
mov
fidivs
add
pop
mov
shrl
cmp
fbld
push
pop
ret
addb
xchg
xor
insb
sub
inc
mov
or
mov
push
lock
mov
je
and
or
push
imul
jmp
xchg
xchg
sti
pop
cmp
out
pusha
dec
sbb
gs
jle
mov
jnp
mov
mov
cmp
scas
pop
sub
cmc
push
imul
pop
loope
pusha
into
sbb
cmp
out
aam
inc
mov
xchg
movsl
sub
xchg
jbe
xchg
jge
mov
dec
sub
sub
inc
loopne
mov
or
bound
sbb
das
jo
cmp
dec
insl
pop
adc
shlb
outsb
ret
mov
xchg
and
or
imul
push
psubusb
xchg
dec
and
adcb
lahf
pop
xchg
loop
pusha
das
leave
cld
pop
ret
jnp
in
push
jnp
outsb
mov
jb
xor
test
pop
imulb
ss
aam
jb
sbb
and
pop
stc
sahf
xor
mov
or
push
cld
imul
pusha
stos
insb
jl
pushf
ljmp
ja
imul
sbb
test
aad
mov
cmp
xor
or
rol
xchg
ss
testl
or
cs
pop
cmpsl
xchg
dec
cmp
jns
mov
idivb
cwtl
rorb
adc
mov
jbe
adc
fidivl
stc
push
mov
outsb
orl
ds
adc
add
loopne
lock
daa
lcall
jmp
xchg
inc
jnp
dec
mov
fists
loop
jb
imul
les
shrl
sbb
and
jl
sub
pushf
lahf
push
aaa
lds
jle
push
xchg
iret
push
mov
cmp
jp
mov
mov
inc
cli
mov
scas
xchg
into
mov
dec
xchg
mov
mov
xor
and
outsl
rol
xchg
cwtl
out
mov
es
and
xor
add
es
cmpsb
sub
xchg
fildl
sub
cmpsb
jae
sbb
jmp
pop
inc
push
xlat
xchg
dec
xchg
pop
popa
or
push
push
out
xchg
int
in
ss
je
icebp
mov
lahf
fistpll
stos
dec
loop
adc
mov
jo
push
lcall
cwtl
adc
xchg
addr16
dec
sub
jle
adc
fdivrs
nop
xchg
jp
push
montmul
cmpsb
inc
mov
bound
mov
out
cmp
cmp
out
jmp
test
xchg
jo
mov
mov
and
and
sbb
stc
fcmovnu
lea
rcr
mov
dec
push
mov
data16
xchg
dec
jns
xor
test
add
jle
mov
mov
push
mov
repnz
xchg
sub
pusha
xor
nop
out
out
dec
xchg
jne
lret
ret
pop
dec
rcl
iret
stos
jo
das
jmp
std
add
test
sub
sti
sbb
pop
cmp
les
lahf
push
dec
mov
inc
mov
sbb
and
pop
outsb
push
push
add
sub
jbe
mov
jbe
testb
shll
daa
pop
mov
xorb
and
push
sbb
arpl
jmp
inc
lret
mov
jne
or
add
xor
cmpsl
in
fisubs
movsl
sub
aaa
sub
dec
prefetcht1
lcall
mov
mov
xchg
sarb
outsl
push
cmc
mov
cmc
xor
jle
xchg
xchg
sbb
xchg
jae
fprem1
or
rorb
mov
mov
lds
mov
cmpsl
gs
pop
into
pop
es
mov
jb
loopne
push
jns
sti
inc
and
xchg
dec
movsl
and
cli
mov
mov
push
bound
out
jbe
in
or
ljmp
insb
xchg
in
dec
js
popa
cmp
sub
jno
mov
enter
xor
cld
std
adc
push
dec
scas
add
adc
fstl
int
loope
xchg
hlt
scas
xor
mov
adc
fs
inc
vunpcklps
pusha
or
aad
and
daa
cmp
std
fisttpll
or
shlb
imul
xchg
mov
in
pop
mov
dec
ret
ret
les
jp
and
fsubr
fdivs
sbb
rolw
jnp
ljmp
push
cmp
loope
test
adc
sbbb
fnstcw
dec
out
push
xchg
dec
repz
enter
mov
inc
les
dec
movl
scas
jno
mov
int3
in
cli
mov
pop
pop
outsl
lods
loope
mov
xchg
mov
xor
inc
cltd
dec
add
inc
inc
icebp
test
clc
push
int
stc
stos
jae
sbb
mov
mov
mov
mov
ret
pop
pop
xor
push
test
and
lret
lods
push
sbb
or
cli
sub
cmp
jnp
in
scas
pop
jmp
sub
push
push
imul
aaa
sub
int3
imul
xlat
rcll
out
mov
leave
movsl
adc
stos
js
jno
pop
paddusw
idivl
push
stos
sti
jp
pop
fnsave
pop
shrb
rorb
mov
in
pop
push
ret
cmp
out
lret
cmp
andl
lcall
fildl
ds
or
sbb
inc
mov
test
fldl
stos
xchg
push
push
ret
lcall
xor
ret
mov
mov
cmp
sti
lcall
jecxz
pop
jae
add
outsb
sbb
sub
adc
mov
mov
out
enter
add
sub
sbb
icebp
cltd
loop
shrb
sub
neg
out
mov
mov
add
cli
push
movsb
in
mov
mov
hlt
jmp
cmc
cmpsl
mov
pop
pop
rcrb
ret
inc
lea
xchg
popa
out
pop
test
or
adc
outsl
aad
subl
dec
cmp
fucom
mov
pop
mov
mov
and
sbb
das
adc
popf
mov
lret
aam
adc
push
std
icebp
push
fcoms
rorl
ficoms
pop
cmp
ja
rclw
sarl
or
in
push
adc
mov
mov
cld
mov
cltd
dec
push
ficompl
pop
pushf
inc
nop
cltd
arpl
daa
xchg
mov
icebp
aas
sbb
in
incb
lcall
out
adc
push
push
inc
pop
mov
add
inc
test
inc
lcall
inc
dec
lea
jecxz
xlat
fsts
jns
lahf
loopne
add
add
lods
inc
mov
cld
into
dec
pop
push
pop
idivl
inc
xchg
and
cs
pusha
int
sbb
mov
adc
push
in
mov
jl
sub
mov
sahf
ficomps
cwtl
subb
imul
pop
pop
mov
sbb
inc
cs
add
addb
cmp
cmp
inc
adc
movsl
cmp
inc
pop
jns
mov
pop
leave
repz
cmp
clc
sti
call
xor
inc
outsb
cmpsl
mov
test
movsb
in
mov
cmp
aaa
push
xchg
pop
fs
sub
adc
mov
mov
pop
xor
stos
sbb
add
outsb
sti
fst
into
push
lock
push
rcr
je
sbb
push
nop
loop
es
movsl
into
jb
jecxz
jb
clc
es
mov
adc
jb
inc
call
lret
cs
int3
lods
adc
push
mov
add
sbb
jmp
inc
and
jecxz
inc
inc
add
mov
or
cltd
movsl
mov
sub
movsl
add
popa
mov
ret
and
icebp
vpunpckhqdq
pop
out
adc
adc
notl
add
cmp
ret
xchg
les
or
mov
popf
push
mov
in
add
mov
dec
add
bndldx
push
add
repz
jae
xor
sar
push
adc
testb
mov
xor
mov
pop
clc
or
lcall
out
xchg
xchg
ret
dec
xor
push
stos
iret
xchg
push
add
dec
arpl
mov
in
xchg
cmp
data16
fnstcw
dec
inc
push
mov
les
and
nop
outsl
pop
sbb
fcmovnb
inc
cmp
xor
je
or
mov
cmp
adc
lock
loopne
cmpsb
frstor
mov
mov
mov
mov
es
negl
xor
outsb
rol
xchg
stc
cmp
fmul
insb
lret
adc
add
in
pop
pop
les
pop
push
testl
add
mov
adc
pop
xchg
scas
cmp
in
mov
sub
cmp
dec
xlat
mov
mov
leave
fwait
lret
adc
mov
std
mov
mov
dec
sti
popa
incb
sbb
fiadds
mov
mov
je
xchg
mul
pop
mov
adc
ret
cmc
lds
xlat
sub
inc
fisubs
xchg
sub
arpl
les
adc
or
movsb
aaa
int3
jle
adc
out
icebp
mov
cmp
pusha
adc
sub
xor
push
and
jne
xor
mov
push
inc
mov
sub
sub
xchg
fldl
inc
mov
js
push
jne
cli
mov
pop
jl
dec
rep
add
js
fsubr
decb
dec
mov
push
cltd
jmp
xorl
xlat
pop
lret
adc
fdivs
or
xor
sub
jae
jl
jle
add
push
and
and
inc
xor
pop
roll
adc
mov
movsb
les
sub
push
aas
sub
pop
movsl
dec
por
inc
cmpsl
shl
ret
mov
cwtl
fisubl
mov
scas
add
adc
inc
loope
aaa
xchg
inc
or
lcall
lea
sub
add
fcmovnu
fmuls
pop
sbb
or
dec
sub
or
jg
push
mov
clc
negb
jl
dec
sbbl
in
stos
hlt
or
cld
fwait
cmc
mov
out
dec
mov
rorb
pop
xor
cmp
pop
xor
jecxz
shl
xlat
push
test
or
sbb
int
clc
add
fists
pop
pop
xor
and
cmpb
stos
js
lock
orb
pop
push
mov
cmc
inc
test
xchg
cmc
push
push
add
icebp
pop
push
mov
imul
xchg
pop
xlat
cmpsb
mov
mov
imul
pop
xchg
pop
xor
in
repz
push
fxtract
iret
insl
in
das
test
jecxz
jl
loop
outsl
cmp
popf
jbe
ja
loope
pop
pop
popa
xlat
fsubrs
adc
lods
cld
pop
push
pop
sahf
lahf
call
xchg
pop
sbbl
push
mov
ret
cmc
add
mov
and
insl
pop
pop
cltd
xchg
push
icebp
insb
and
and
stos
les
cmpb
cld
nop
mov
fstpt
out
lret
and
inc
imul
xchg
hlt
jb
ds
cmp
leave
push
add
inc
loopne
in
cmpsb
cmp
mov
xchg
or
ja
shrb
pop
mov
test
faddl
pop
jge
pop
mov
dec
ja
repz
add
lahf
or
dec
push
icebp
and
pop
jp
mov
aam
or
push
pop
xchg
pop
pop
xchg
inc
sbb
push
pop
loop
xchg
xchg
jge
fistpl
mov
mov
aam
mov
addb
faddl
in
jae
pop
outsl
mov
sbb
sub
sarb
dec
and
sbb
in
negl
popa
xorps
mov
ljmp
test
mov
push
xchg
inc
movsb
call
subb
negl
pop
bound
mov
lds
shll
mul
xchg
lea
lahf
fists
fwait
insb
pop
inc
jo
pop
mov
stc
lods
or
inc
sub
pop
in
fcompl
outsb
bound
in
jbe,pt
push
or
clc
sub
sbb
addr16
lret
ds
bound
push
add
daa
add
and
inc
sub
push
shr
iret
and
or
bound
fistl
arpl
in
addr16
negb
sbb
cmp
fistl
xor
mov
aas
jg
test
dec
imul
mov
dec
icebp
aas
fistps
jmp
sbb
leave
fisubl
xchg
loop
sbb
cmp
hlt
bnd
adcb
loope
xor
repz
adcb
and
adc
pop
mov
xchg
cmp
sahf
sbb
or
jle
jmp
jnp
cmp
out
push
fcmovnu
cmpsb
cwtl
inc
sbb
pop
xor
push
xchg
lcall
test
test
jbe
ljmp
mov
xchg
mov
ss
rclb
stos
sub
movsl
add
int3
aad
xchg
pop
or
and
sub
mov
imul
adc
rcll
loop
and
scas
mov
bound
dec
sbb
jge
imul
sub
int3
push
movsb
push
in
sub
in
nop
cmpl
rcl
add
gs
dec
jns
or
mov
cmp
push
sub
fnsave
jnp
loope
xchg
cmp
inc
adc
pop
pop
jg
push
mov
sbb
pop
or
adc
and
xchg
push
sahf
loope
mov
xor
test
sbb
xorl
mov
mov
lea
mov
xor
cmc
fwait
rcrb
sbb
jp
push
pop
push
cmpsb
fists
push
outsb
mov
outsl
clc
xchg
jp
mov
xchg
stc
push
cs
andb
insb
push
sub
add
push
orl
cmp
ja
mov
in
mov
sbb
dec
pop
roll
jae
lret
imul
lds
pop
sub
inc
sbbb
repnz
mov
add
cli
adc
jne
sahf
in
pusha
lret
mov
push
lcall
cmpsl
and
sbb
pop
sbb
repz
xor
outsb
xchg
cwtl
adc
mov
imul
add
outsb
mov
test
fbstp
xchg
push
fbstp
sti
add
cmp
shll
cmpsb
jns
lret
gs
mov
xchg
jae
aam
loope
push
mov
cmpsb
cmpsl
in
dec
in
outsb
scas
jne
dec
xchg
adc
add
dec
jge
test
sbb
mov
sahf
cmpl
adc
jb
mov
pop
lcall
faddl
in
inc
or
iret
pop
sahf
cmpl
inc
pop
sbb
gs
cltd
and
jle
aad
add
in
pop
adc
or
pop
loop
mov
popa
sub
and
jnp
push
push
mov
fnstsw
shll
xor
mov
into
inc
mov
xchg
push
xlat
test
rcl
out
add
sbb
stos
subb
fisubrl
dec
es
adc
scas
aad
les
repnz
pop
out
push
mov
loopne
mov
test
daa
test
dec
int
loop
test
xadd
sub
lods
mov
inc
mov
dec
jns
lock
mov
inc
push
inc
loop
lahf
cwtl
ja
xchg
test
cmp
sbb
imul
imul
inc
test
ljmp
jle
xchg
cli
mov
loopne
inc
xchg
jno
mov
pop
fisttps
rol
rcl
loop
sbb
xchg
cs
adc
call
mov
fwait
aaa
insb
cmp
int
dec
push
sbb
sahf
push
sub
inc
mov
aad
out
add
int3
outsl
xchg
ret
ljmp
mov
sub
and
ljmp
and
aaa
lds
ret
add
xorb
sbb
idiv
dec
cmpsl
incb
ret
mov
loopne
dec
pop
push
lret
jmp
pusha
repz
mov
xor
call
mov
cmpb
push
cmp
sbb
inc
jmp
nop
xor
lcall
add
pop
out
fiaddl
popa
dec
inc
cmc
sbb
dec
das
test
dec
xchg
or
inc
sub
ss
push
fmul
fcompl
shrb
sbb
or
out
sub
int3
push
jle
cmp
aad
js
dec
ds
leave
dec
jp
cmp
pop
cmpsb
sbb
and
imul
mov
pop
mov
bound
fs
cmp
mov
inc
mov
inc
jle
imul
adc
adc
xadd
jo
cmp
sahf
scas
sbbb
xor
mov
cwtl
and
js
push
loope
aam
andb
push
or
jmp
or
ret
sti
stos
mulb
or
cmp
xchg
push
in
aam
xor
ja
imul
aas
sti
add
fdecstp
xchg
cmpsb
das
inc
mov
outsb
sub
mov
ja
test
lret
jae
sbb
fisubrs
in
icebp
sub
movsb
ja
popf
inc
mov
fiaddl
jns
shr
jp
mov
jl
pop
int3
lret
mov
add
insl
outsb
out
sub
fbstp
verr
fidivs
pop
dec
jl
leave
mov
push
push
outsl
xchg
loope
jbe
into
outsl
dec
rcrb
fmul
mov
mov
pop
into
and
mov
imull
out
test
out
push
movsl
xchg
xchg
test
test
jmp
hlt
sub
arpl
mov
insl
dec
push
lock
sub
leave
cmpsl
out
jecxz
cld
add
shrd
push
pusha
xchg
test
fs
xchg
add
ljmp
out
std
mov
or
leave
rolb
or
mov
xchg
pop
inc
mov
shlb
test
out
out
xchg
sub
sub
jno
jecxz
jle
xchg
out
cltd
mov
mov
notb
dec
das
icebp
adc
int3
subb
adc
adc
mov
aad
dec
clc
jecxz
xchg
movsl
out
dec
test
aas
adc
mov
mov
and
lahf
test
jbe
sbb
aam
sub
les
cmp
xchg
fistpll
push
push
fadd
shl
jae
test
cld
cmpsl
sub
lock
popf
stos
sbb
out
test
in
stos
repnz
stc
dec
neg
jbe
inc
xchg
lds
or
fldenv
sbbb
iret
jns
ljmp
shrl
dec
mov
mov
in
popf
push
add
xor
pop
adc
push
adc
pop
lods
sbb
sbb
push
stc
xchg
imul
mov
loopne
sub
enter
test
movl
sbb
rcrl
push
inc
subl
aaa
in
pushf
sub
enter
cmp
daa
cmp
enter
jl
ja
in
movsl
mov
enter
paddusb
arpl
cmp
lret
jge
jo
ret
lods
insb
sub
mov
jae
push
mov
hlt
fisubrl
pop
or
jecxz
cld
sub
jo
repnz
mov
xchg
lahf
mov
insb
lock
test
mov
jb
fidivl
cmc
out
or
push
cli
jb
icebp
mov
mov
nop
outsl
inc
and
sets
mov
cmp
push
mov
sbb
imul
mov
xor
fwait
jno,pt
pop
xchg
mov
arpl
mov
push
insb
mov
xchg
mov
repnz
test
fwait
es
xchg
sahf
popa
mov
cmc
mov
imul
push
mov
adc
movsb
ljmp
pop
xchg
mov
fnstsw
gs
test
mov
dec
push
fwait
mov
rclb
out
pushf
mov
test
scas
push
dec
sbb
mov
inc
cmp
sub
and
xlat
cmpsb
stos
xchg
xor
xchg
mov
cmpl
mov
and
scas
pop
xor
push
int
insb
int
dec
push
mov
test
mov
stos
pop
out
push
lea
lods
dec
daa
popf
mov
lret
lcall
or
push
sti
sahf
jmp
aaa
mov
jmp
aas
jle
outsb
out
lods
dec
dec
cmp
mov
jb
lret
testb
jae
xor
scas
push
shll
sub
test
mov
test
lods
or
les
and
mulb
out
push
icebp
cmp
push
clc
icebp
add
mov
and
push
leave
push
ds
das
js
inc
sti
sbb
xor
add
xor
sub
ljmp
fstps
inc
hlt
pop
popa
aad
lea
mov
fildll
adc
imul
bound
jnp
pop
andb
push
jg
in
adc
aas
movb
lds
push
or
push
inc
xorl
stos
inc
pop
subl
push
jp,pn
xchg
adc
movsb
push
jmp
fwait
cwtl
repnz
add
cli
ror
sbb
enter
adc
cli
fisttpl
js
xchg
cmpsl
and
addr16
mov
cmpsb
add
dec
popa
adc
inc
not
inc
mov
push
and
icebp
adc
xor
leave
aaa
iret
jne
adc
mov
or
xor
xor
and
js
movsl
movsl
rorl
hlt
call
in
mov
loopne
xor
sbb
xchg
aam
js
push
std
test
jne
mov
and
out
adc
fldenv
adc
add
mov
inc
scas
movsb
jns
ret
aas
xor
popf
divb
push
and
mov
mov
pop
sti
clc
push
jb
into
stc
inc
movsl
cmp
inc
adc
jo
cwtl
fsubrl
sbb
jb
sbb
rcr
mov
test
cmc
ljmp
adc
out
setne
pop
sbb
adc
xor
sub
js
xchg
sub
testl
xor
sub
out
lea
xor
aaa
jbe
xor
cmp
jle
call
stos
and
mov
fcoms
sbb
adc
rorb
subb
xchg
sbb
scas
jo
sbb
nop
jg
xchg
add
movsb
xchg
push
stos
push
std
mov
or
insl
push
nop
loop
xchg
test
fwait
cmpsl
pop
test
iret
mov
jmp
imul
pop
aam
xor
imul
jns
idivb
hlt
daa
jmp
insb
jp
bound
jnp
mov
xor
push
push
push
jo
incl
roll
sbb
ja
mov
lock
jl
fsubr
mov
repnz
sub
and
jne
dec
addr16
mov
pop
mov
mov
mov
pop
js
mov
xchg
adc
xlat
repnz
dec
test
sbb
in
test
push
push
ss
dec
xchg
lahf
sub
out
and
ss
push
lock
jge
and
loop
lea
test
jae
add
lret
jne
inc
dec
inc
and
pop
int
pop
mov
dec
repz
shll
add
jo
mov
stc
stc
cmpsb
xchg
xor
push
iret
or
push
in
mov
adc
repz
xchg
adc
in
mov
loopne
add
cwtl
data16
pushw
aas
adc
je
out
xor
pop
jge
inc
ljmp
dec
les
sub
push
lds
jnp
bound
shlb
adc
inc
ret
imul
je
imul
dec
sub
int3
test
dec
cmpsl
adc
mov
mov
dec
push
or
lret
jmp
mull
mov
or
xchg
add
scas
lcall
pop
pop
mov
sbbl
inc
out
lret
mov
jp
dec
dec
pop
into
dec
jg
out
mov
je
shr
mov
pop
pusha
add
leave
push
test
arpl
add
mov
mov
das
adc
test
mov
sbb
aad
nop
jl
mov
data16
add
into
js
and
pusha
mov
daa
mov
vpmacsww
jo
imul
ficomps
into
pop
mull
pop
push
js
mov
mov
adc
shrl
pop
lods
add
push
or
xor
js
movsb
mov
movsb
scas
inc
jp
and
daa
nop
rcrl
popl
icebp
nop
loopne
push
and
pop
test
sahf
addr16
cmc
lcall
sub
mov
pop
jbe
and
push
cs
ljmp
cs
test
push
pusha
push
sbb
mov
negb
ljmp
lods
sub
jge
scas
insl
inc
adc
adc
cmp
xchg
sub
xlat
test
cmp
adc
push
sti
or
cli
cmp
sbb
xchg
rcl
xor
sub
fldt
sarb
cmp
and
mov
pop
ljmp
dec
sbb
cmpsb
xor
or
adc
std
pop
and
in
stos
sub
sbb
xchg
movsl
outsl
cld
adc
pop
leave
lret
add
sahf
movsl
fsubs
xor
adc
adc
mov
and
xlat
adc
sub
test
push
cs
cmp
push
loop
xchg
or
pop
insb
shlb
mov
js
mov
filds
out
or
divb
mov
pushl
rolb
js
adc
mov
gs
jp
mov
jecxz
push
and
sub
adc
lods
xor
adc
hlt
xchg
cld
cltd
popa
jg
adc
push
xchg
aad
gs
add
inc
test
jle
add
mov
arpl
scas
xchg
and
lcall
cmp
jae
stos
push
mov
in
push
out
aad
lock
test
fdivrs
ret
push
push
std
sahf
sbb
cld
nop
jmp
mov
setnp
fmulp
int
ljmp
cmc
inc
shrl
pop
imul
ficompl
clc
xor
cltd
add
jge
lds
repnz
jmp
loopne
sbb
cmp
enter
ret
and
push
add
test
lods
shll
xchg
stc
sahf
int3
sti
adc
and
fidivl
stos
inc
imul
pusha
or
mov
mov
mov
bound
out
dec
jae
mov
imul
jbe
jle
inc
push
loopne
mov
cli
repz
movsb
pop
les
pop
xchg
in
xor
pop
xchg
cmp
dec
jnp
add
push
addl
es
xor
push
ljmp
xchg
adc
iret
push
enter
cmp
pop
into
bound
mov
jb
fdivl
pop
dec
mov
adc
inc
into
cmp
aaa
mov
je
ljmp
fldenv
dec
push
bound
dec
loop
cli
add
sub
test
jmp
or
loopne
inc
mov
fdivrs
lods
enter
mov
inc
outsb
push
scas
loope
repz
imul
cltd
xor
pushf
outsb
fildll
inc
fwait
dec
or
dec
psadbw
jg
ljmp
xchg
xchg
inc
add
jp
cmp
shll
sbb
push
inc
clc
sub
pushf
sub
mov
in
fiadds
sbb
mov
sti
arpl
mov
mov
mov
insb
xchg
fiadds
sbb
out
lcall
lds
scas
lahf
decb
mov
popf
mov
test
iret
push
dec
adc
negl
mov
mov
adc
stos
xor
aaa
test
lods
pushf
std
jge
jne
pop
and
push
jl
nop
shl
jno
mov
dec
dec
fistpl
mov
xor
loopne
sub
ficomps
or
ljmp
aad
sub
cltd
outsb
cli
sarl
imul
adc
pop
hlt
xor
add
xchg
cwtl
popa
loope
inc
adc
mov
insb
mov
adc
jg
or
sbb
sbb
or
mov
test
xor
push
jae
push
jno
sub
inc
les
pop
xchg
repz
push
xor
je
test
fcoml
shlb
sbb
fistpl
add
dec
das
sub
inc
scas
gs
xor
sub
ret
fdivrl
mov
inc
lods
movsb
popl
xchg
dec
flds
aam
mov
adc
out
stos
sbb
fstpl
pop
and
sbb
test
mov
mov
push
sbb
cld
jae
iret
outsl
mov
in
mov
jb
push
pop
seta
mov
pop
je
mov
lods
or
xor
sbb
push
push
xor
test
push
stc
xchg
js
dec
jp
outsl
add
aas
loopne
clc
mov
mov
leave
iret
dec
in
mov
xorb
mov
sub
cmpsl
push
aad
sub
or
movsb
add
in
pop
lds
icebp
mov
sub
nop
clc
sub
mov
enter
movsl
dec
mov
aaa
jmp
roll
mov
aaa
insl
sahf
fldlg2
or
mov
xor
cltd
and
pop
loope
sbb
popf
sarb
push
js
mov
jmp
xchg
daa
cli
pop
mov
fiaddl
jae
xor
ljmp
loop
mov
repz
mov
repz
sub
push
inc
je
ret
sub
fisttps
ffree
xor
jg
push
push
mov
ljmp
mov
or
adc
das
jle
clc
xor
xor
adc
into
ds
adc
sbb
dec
out
arpl
cmpsl
or
mov
mov
notb
xchg
clc
movsb
pop
test
mov
pop
jns
inc
paddb
leave
mov
scas
pop
xlat
fucom
jecxz
or
jnp
mov
cltd
adcb
jle
call
inc
hlt
mov
sub
inc
push
stc
daa
cli
test
in
mov
sub
mov
dec
lods
mov
jnp
dec
push
xchg
jne
iret
sahf
jge
call
repnz
into
sub
fcmovb
lock
gs
mov
loope
and
adc
mov
enter
ficompl
mov
mov
aam
outsl
testb
lret
inc
je
pop
mov
jmp
push
cmp
sub
xchg
mov
push
jae
or
push
icebp
cwtl
jno
loop
push
loop
cs
fldt
int
stos
sti
jle
cmp
fneni(8087
int
hlt
push
shrl
pop
adc
jne
push
jb
imul
mov
or
mov
pop
xchg
mov
movsl
into
shr
adcb
lods
jnp
data16
movsb
push
adc
mov
and
add
xchg
dec
lea
les
fstpl
int
jbe
icebp
jge
insl
and
popa
jl
jge
negb
sub
push
loop
rcrb
sbb
add
outsl
std
and
adc
icebp
andl
pop
out
jmp
or
cmpb
repnz
mov
aaa
shrb
cmp
inc
repnz
cwtl
mov
clc
inc
mov
cmc
mov
out
jle
loopne
xchg
mov
jnp
add
sti
sbb
movsl
mov
xchg
mov
enter
insb
in
jp
pop
pop
pop
inc
inc
sbb
xchg
inc
das
xlat
xchg
mov
jmp
loopne
mov
in
xor
rolb
iret
cld
movsb
subl
stc
sub
dec
mov
int
xchg
loope,pn
xchg
push
mov
sbb
dec
mov
mov
mov
push
ret
pop
push
inc
mov
sti
rorb
movsl
sub
adc
rcrb
test
xor
fbld
call
in
mov
push
dec
daa
insb
cmc
pop
ds
insb
adc
xor
in
scas
ret
je
sbb
add
scas
pop
loop
pushw
mov
lods
mov
sub
cmpsl
jg
outsb
mov
cmc
inc
xchg
mov
mov
pop
jmp
pop
mov
stc
aad
jo
loope
cmp
xor
outsl
mov
test
adc
adc
push
lods
inc
cmp
sbb
pop
or
gs
fcomps
test
xlat
sbb
lock
nop
jecxz
jecxz
dec
imul
fsubs
into
sub
negl
xchg
inc
lret
insl
xchg
push
outsb
faddl
push
cmp
inc
mov
mov
mov
ja
pop
cld
pop
cmc
insl
jge
mov
push
idivb
es
mov
lret
dec
bound
gs
mov
pop
je
jno
xchg
cmc
xchg
repnz
xchg
test
in
das
out
pop
js
mov
cld
in
sbb
dec
mov
cld
dec
jo
mov
rcrl
mov
push
mov
or
jmp
xchg
inc
ja
ret
push
cmp
insb
and
in
inc
dec
lret
mov
sbb
out
xor
gs
mov
or
inc
jmp
idivb
xor
test
add
loop
cmpb
roll
xor
adc
cmpsl
aas
fdivrs
movsl
jge
enter
rcr
jle
int
sbb
clc
inc
adc
sub
test
cs
daa
and
dec
and
or
mov
sub
test
jg
hlt
cmp
fidivrl
push
xchg
mov
xchg
clc
sahf
out
inc
loope
repz
xchg
sbb
jmp
std
stc
push
pop
arpl
jmp
xchg
add
xor
dec
popa
xchg
in
sar
xor
push
bound
inc
mov
and
adc
aad
imul
enter
into
aad
push
or
mov
xchg
dec
mov
mov
lods
jecxz
mov
lret
in
xchg
fcoms
outsl
imul
push
push
push
ja
inc
fnstsw
xchg
mul
lret
cmpsb
dec
pop
push
out
fcmovbe
push
fscale
fmuls
pop
sbb
xor
fs
mov
adc
lret
stos
pop
xor
inc
lahf
out
and
jno
fxch
xchg
add
imul
pop
aas
jbe
jmp
lds
jmp
movsl
sarb
jge
ret
push
and
movsb
mov
iret
push
jae
mov
dec
iret
xchg
push
sub
in
pop
dec
sub
adc
lea
push
sahf
mov
flds
test
inc
push
sub
lock
cwtl
mov
sbb
inc
rcrb
dec
mov
and
test
push
sub
push
jb
inc
leave
add
out
ret
dec
inc
xchg
repnz
push
fidivs
xor
les
cwtl
sbb
lock
movb
push
cwtl
in
int3
call
loop
jo,pn
mov
jmp
int3
push
xchg
cmpsl
or
std
roll
dec
push
adc
out
xlat
pop
mov
or
loopne
movsl
sub
jle
xchg
and
jo
dec
sub
jo
mov
jl
sub
push
insl
and
loopne
fimull
lods
arpl
orl
push
sub
xor
sub
dec
bound
sub
xchg
lea
jae
push
cmpsl
jge
je
in
iret
inc
clc
imul
jecxz
adc
fisubrs
mov
fsubl
lcall
push
cwtl
xchg
sub
rorb
mov
add
and
cmp
inc
jne
vmulps
fisubrl
fldt
icebp
out
aas
sbb
addb
gs
pop
in
leave
or
push
cltd
fbld
add
cs
push
insb
sub
and
shl
xor
popa
inc
test
push
xor
push
push
lret
inc
push
cmp
push
fdivrs
mov
ljmp
insl
pop
jmp
jp
outsl
fisubrl
cld
fldt
inc
sarl
xchg
js
cwtl
loop
add
test
stos
and
mov
lret
rorl
sub
test
daa
sahf
or
jbe
sti
das
mov
imul
mov
fstpt
int
mov
idivl
shl
ficoml
movsl
adc
jmp
jmp
mov
idivb
out
pop
aad
mov
rcr
push
adc
inc
cmp
or
loopne
lcall
mov
mov
inc
mov
movsb
inc
mov
adc
enter
xchg
mov
or
add
cltd
jmp
adc
sti
mov
and
cltd
add
aam
lret
stc
and
fstl
fildl
mov
push
enter
ljmp
pop
and
subb
int3
aaa
push
idivl
rol
mov
xor
jne
aam
push
bound
cwtl
sti
adc
xor
in
out
add
hlt
in
test
or
xchg
cmp
jecxz
les
scas
daa
mov
dec
xchg
mov
ljmpw
adc
jge
push
add
xor
pop
out
sub
gs
aas
or
xchg
frstor
pop
dec
and
inc
imul
push
sub
xchg
jl
sbb
sub
jnp
pop
cmp
stc
sbb
xchg
jne
das
or
pop
idivl
push
lahf
ret
push
bound
dec
push
xchg
mov
cmp
sti
push
inc
negb
mov
or
jle
pop
fcmovb
and
pop
test
xor
das
fstpt
fs
mov
test
cmp
das
jo
iret
adc
icebp
sub
cmpsl
lret
xor
pop
cmp
pushf
lcall
pop
mov
xorl
mov
test
fs
and
push
stos
push
jae
jae
iret
call
mov
adc
sbb
or
icebp
cwtl
xor
sbb
xor
int
add
adc
cmp
lods
jmp
jbe
adc
pop
test
out
sub
jle
pop
jno
mov
xchg
lahf
xor
in
cmpl
cmovbe
jge
sub
in
sub
clc
pop
xor
inc
xor
dec
jb,pn
ss
dec
pusha
insl
cltd
push
dec
inc
aad
shlb
inc
adc
dec
out
dec
ret
insb
ss
movsl
jns
add
mov
adc
fldenv
insb
add
pop
data16
mov
jg
mov
rcl
or
int3
inc
push
add
inc
xchg
or
and
pusha
sub
icebp
lea
notl
js
aas
adc
push
test
mov
movsl
sub
pop
xlat
pop
mov
xchg
and
cmc
sar
fwait
inc
push
cmp
pminsw
lret
sub
and
sti
jnp
lcall
push
idiv
jmp
movsl
cmpsl
pop
leave
mov
adc
int3
int
inc
test
pop
imull
cmp
mov
out
or
fcomi
in
adc
cmpsl
sbb
or
push
inc
cmp
and
lahf
loopne
jg
xor
pop
popf
fwait
dec
push
test
test
loopne
xor
mov
movsb
mov
push
cltd
pop
mov
gs
subl
movsb
push
jno
insl
ret
push
mov
fistl
dec
sahf
call
sarl
or
sbb
pop
push
xchg
out
data16
lahf
xchg
inc
dec
insb
ret
or
jno
dec
outsb
cli
loope
movsb
add
dec
adc
loopne
xchg
cmp
fcomip
cld
and
repz
ucomiss
inc
and
aam
pop
sbb
mov
and
rolb
xlat
mov
pop
popf
out
sbb
jns
icebp
imul
jne
sbb
push
imul
mov
sub
orb
movsl
jo
pop
ret
insl
xchg
pop
push
sub
xor
cli
shl
mov
movsb
xchg
xchg
xchg
lods
es
mov
adc
xsha256
cmpsb
adc
dec
lcall
or
mov
movsb
dec
sub
add
push
cli
fwait
sub
and
lcall
dec
ss
mov
mov
ret
cmp
jmp
xor
sar
scas
insb
pop
cmc
and
pop
cmc
cmp
shl
vmovapd
xchg
cmp
and
xor
fiadds
testb
outsb
xor
rol
mov
mov
push
xlat
or
mov
mov
sbb
popf
sete
mov
adc
pop
dec
adc
push
mov
mov
cli
xchg
aam
dec
movsb
aad
xor
dec
xor
push
sahf
push
fidivl
mov
in
nop
push
lock
cli
lahf
cltd
cmp
pop
push
cltd
stos
mov
and
mov
mov
pop
or
xchg
and
lods
inc
dec
mov
mov
shrd
or
clc
dec
loop
or
repnz
xchg
sub
sbb
sub
lods
dec
iret
or
rcr
add
loopne
sbb
cwtl
mov
loope
mov
lret
inc
mov
mov
leave
xor
xchg
mov
mov
cmpsl
mov
pusha
int3
xor
inc
in
insl
push
imul
or
pop
ds
inc
mov
or
adc
xchg
testb
jns
sub
enter
xchg
pusha
jnp
ljmp
or
mov
jb
clc
mov
ja
or
jg
lret
adc
cmc
jno
repz
in
negb
mov
mov
sbb
fnstenv
dec
popf
stc
loope
cmp
add
dec
daa
xor
push
or
cmpb
pop
cmpsl
ret
mov
outsl
jne
loopne
ja
push
lcall
hlt
out
pop
loopne
int3
pop
negb
outsl
and
jns
pop
outsl
fbld
mov
out
mov
pop
aaa
imul
mov
xor
or
mov
add
inc
jle
cmp
pusha
jp
in
aad
jl
xchg
sub
out
xorb
shrb
pop
movsl
enter
or
push
shlb
pop
lret
cmp
mov
mov
aam
add
push
xchg
jg
scas
add
jbe
xchg
shlb
cli
stc
les
fs
popf
ret
data16
movsl
cmp
jnp
jmp
loope
push
cli
mov
cmp
test
adc
adc
xchg
fs
xchg
pushf
jne
das
jle
popl
loopne
outsw
sub
push
out
inc
lahf
in
push
mov
inc
or
sahf
leave
mov
xchg
dec
loop
dec
insl
outsl
mov
ror
fisubl
or
mov
subb
shll
adc
pop
mov
imulb
call
fiaddl
cmp
int3
int
mov
rolb
ret
pop
mov
test
mov
pop
mov
ja
les
mov
lcall
imulb
aaa
repz
or
push
push
lahf
fwait
stos
dec
aam
loope
xchg
pop
mov
iret
add
jl
enter
mov
cmp
js
pop
inc
and
or
sbb
shll
leave
pop
outsl
pop
js
repz
and
scas
xorl
xor
jns
adc
fdivrs
hlt
dec
cmp
or
fs
or
ljmp
shll
rol
out
push
cmpsb
je
cmpl
push
call
dec
mov
cltd
lret
mov
and
fwait
lods
dec
icebp
sbb
leave
lcall
ret
mov
and
mov
inc
ss
into
lods
jns
fisttpll
jne
pop
dec
pop
jnp
mov
nop
jle
xchg
push
shrb
mov
mov
adc
push
mov
out
mov
inc
lret
mov
xchg
lcall
dec
xchg
cmp
stc
jp
dec
js
js
xor
loop
xor
in
mov
push
or
ja
test
leave
popa
mov
bound
mov
movsb
rcll
adc
sub
out
mov
adc
and
into
pop
dec
fnstcw
jne,pt
int
push
dec
cmp
cwtl
out
dec
or
jae
jbe
add
popa
xor
hlt
inc
sbbl
aad
loopne
sub
js
dec
push
xchg
pushf
nop
push
jge
xchg
and
loop
adc
iret
call
mov
sti
fmull
add
inc
sahf
pop
lock
jno
sub
cs
dec
dec
fimuls
std
xchg
or
cmp
lds
sahf
push
and
xorl
mov
adc
push
fnstenv
or
nop
jne
fbstp
aad
mov
mov
loopne
jno
call
je
inc
outsb
adc
push
js
ror
pushf
push
sbbb
sbb
in
xchg
sbb
stc
mov
out
xor
das
pop
inc
mov
adcl
testb
adc
adc
pop
push
mov
inc
imul
pushf
xchg
dec
inc
pop
andb
int3
xlat
hlt
sbb
test
fsubrl
das
dec
lock
les
pop
aad
mov
and
push
sub
test
enter
add
out
push
ja
sbb
xor
in
fildll
dec
cwtl
pushf
pop
xchg
dec
jne
fs
lahf
fs
or
sti
add
ja
push
aas
push
cld
or
filds
inc
dec
roll
push
mov
sahf
sub
xchg
push
sarb
push
cmp
add
jo
xor
lods
pop
movsb
out
xor
in
xchg
mov
subb
stc
pop
test
loope
and
es
stos
mov
shlb
pop
daa
mov
fnstenv
fstpl
inc
test
push
in
mov
pop
out
push
sub
mov
daa
stos
mov
or
pop
mov
sub
mov
inc
cmpsb
std
push
mov
push
jl
sarl
mov
mov
jbe
hlt
mov
aas
inc
pusha
in
das
mov
or
cwtl
cmp
pop
mov
lock
adc
push
jmp
inc
pusha
push
hlt
daa
ret
mov
divl
cmp
pop
insb
out
push
ret
sub
out
xor
cmc
pop
je
loopne
xchg
out
movsl
sub
sbb
and
scas
test
push
sbb
push
pusha
mov
jmp
icebp
jbe
test
out
ja
imul
sbb
push
xlat
fwait
push
sbb
pop
sub
add
cmc
sub
or
cmp
pushf
xchg
jno
bound
psubb
dec
cmp
push
orl
mov
xor
sbb
xor
mov
test
pushf
sbb
ljmp
lahf
cmpl
pop
cs
dec
inc
adc
cmp
test
mov
cmp
sub
inc
pop
mov
in
aad
jle
stos
shlb
xchg
dec
scas
push
push
mov
scas
or
jbe
jbe
lahf
add
mov
mov
or
jl
sub
daa
cmc
les
cwtl
arpl
add
sbb
mov
mov
leave
in
int
push
aad
data16
aam
dec
pop
das
cltd
cmp
push
and
test
fisubrs
adc
stc
jmp
xor
lcall
lods
xchg
adcl
cli
and
and
shlb
xor
data16
or
es
push
cmpsb
pop
int3
rcll
daa
mov
cmc
mov
sbb
inc
je
rdpmc
add
mov
jp
mov
cltd
xchg
sarb
fmuls
icebp
add
sub
adc
int
mov
xor
push
sub
cli
xchg
movsb
inc
orl
out
es
sub
lahf
dec
cwtl
sbb
push
arpl
popf
stos
push
in
je
in
pushf
cwtl
jae
pusha
jmp
nop
popf
pop
add
aaa
jl
mov
mov
cltd
mov
jle
push
xor
std
hlt
data16
pop
jecxz
or
test
xor
inc
push
push
adc
jnp
adcl
lods
fisubrl
fcomi
stos
fidivrs
jb
pop
jle
mov
or
lea
push
xor
xchg
or
push
cwtl
sub
and
std
jmp
mov
jle
sar
add
xor
lahf
sti
cmp
bound
dec
mov
adc
outsb
les
roll
jae
push
stos
dec
int3
cmpl
push
mov
pop
or
ret
push
hlt
sbbl
adc
shr
or
mov
mov
test
lahf
nop
jmp
inc
mov
xchg
in
xor
mov
cmpsb
subb
imul
shlb
push
aad
mov
sbb
and
mov
cmp
fs
cmp
sub
out
mov
fnstcw
fs
jns
push
ret
mov
mov
out
fadds
push
je
ret
hlt
cltd
sub
mov
push
inc
loop
adc
test
je
jb
imul
push
lods
xor
pushf
add
pop
xchg
push
fcmovu
sti
gs
and
cmp
bound
call
xchg
in
cmp
fisubs
sub
and
push
mov
push
add
inc
sub
and
sti
mov
mov
xchg
shll
call
sbb
and
xchg
std
packssdw
xchg
pushf
sbb
cmp
mov
notb
xor
cmpsl
pop
pop
pop
popf
dec
cmp
cmp
es
adc
xchg
subb
sbb
out
rclb
mov
leave
mov
bound
and
xchg
adc
cmc
sub
jmp
and
aaa
pop
testl
adc
sub
dec
pop
nop
movsb
push
in
push
pusha
mov
mov
stos
arpl
push
bound
clc
dec
jne
pop
rcrb
push
pop
outsb
addl
xchg
cmp
repz
jecxz
pusha
leave
rcrl
push
popa
jl
dec
scas
mov
cmp
test
leave
xor
xor
fsubl
in
subb
lret
scas
mov
cld
shlb
lar
lahf
outsb
cld
sub
mov
xchg
or
pop
push
and
mov
in
push
cwtl
lahf
orl
shrb
test
adc
xlat
repnz
xchg
add
pop
icebp
or
sbb
lods
push
cmc
lahf
and
dec
pop
scas
lods
stc
cmp
fcomp
outsb
pop
rolb
sbb
call
cmpsl
push
negl
pop
xchg
mov
mov
add
ret
adcb
cmp
outsb
xchg
push
mov
xor
ss
inc
or
repz
lods
shufps
adc
or
xchg
popf
lods
rcll
je
push
and
sbb
xor
dec
cmp
dec
idivb
adc
out
jg
sbb
mov
sub
dec
sub
push
xor
push
or
ds
xchg
jle
enter
pop
mov
push
jbe
jo
jb
mov
inc
lock
dec
mov
fisubrs
inc
sub
jl
je
or
cmpsl
push
dec
sbb
inc
lods
call
and
sub
mov
fstp
cltd
ret
jle
insl
outsb
mov
daa
sub
loop
aas
dec
fdivr
ss
aam
fcoms
sar
or
sbbb
or
movsb
or
lock
xchg
adc
pushf
jo
loop
pop
fcmovbe
test
aam
sub
push
dec
repz
push
movhps
xor
mov
aaa
movsb
sub
mov
in
aaa
or
dec
mov
ljmp
enter
adc
sub
ds
jnp
in
mov
jnp
xor
dec
mov
sbb
dec
inc
inc
mov
fsubl
incb
push
push
sbb
shll
xor
jge
pusha
mov
insl
daa
push
push
fsqrt
push
cmpsb
lea
jp
add
adc
imulb
test
mov
cmp
outsb
out
adc
js
vcvtps2dq
add
and
fs
dec
mov
pop
fldt
mov
rorl
mul
gs
inc
push
imul
sbb
sub
and
pushf
inc
jb
ss
fs
loop
movsl
xchg
pushf
rcrl
addr16
insb
jge
xlat
jl
dec
stos
xlat
testb
sbb
scas
mov
ret
push
test
sahf
jne
mov
sahf
mov
mov
cmpsl
or
fcmovne
push
rorb
adc
mull
jge
sub
cli
inc
adcl
push
mov
pop
bswap
push
in
and
push
pop
sbb
movsl
jne
push
jecxz
inc
and
and
pop
dec
jmp
push
push
jns
mov
inc
cmp
pop
mov
rorb
mov
mov
xchg
jno
pop
popf
movsl
jbe
mov
lds
sahf
push
sarl
xchg
add
mov
and
fwait
mov
mov
pushf
imul
sub
cmp
test
sbb
and
add
aaa
adc
lds
dec
xchg
fildl
inc
mov
and
addr16
movsb
les
enter
repz
mov
test
push
adc
out
popf
sub
ret
aam
or
xor
mov
ficoml
pop
mov
mov
inc
sbb
mov
std
into
jle
cmp
dec
imul
daa
and
jnp
fcomps
mov
rorl
rcrl
cwtl
pop
std
loop
sub
sub
dec
sub
jb
mov
js
ja
dec
or
xor
je
fs
lea
imul
shll
push
rolb
in
fmulp
andb
xchg
fsub
inc
xchg
jo
dec
cld
out
xchg
mov
mov
cmpsb
shll
push
int3
mov
ss
push
jmp
pop
lds
test
stos
push
sub
cmp
mov
xchg
divb
jg
fnstenv
in
or
push
jp
shr
push
jmp
dec
mov
loopne
mov
adc
fbld
mov
xor
fdiv
movsl
jne
xchg
push
cmp
testl
mov
push
and
or
lret
xor
dec
int
cltd
sub
jecxz
aas
cmpsl
adc
test
lds
sbb
sbb
xor
mov
daa
hlt
lret
andb
fwait
jae
add
mov
xchg
dec
popf
mov
jl
in
inc
rcrb
adc
add
mov
cld
orb
dec
rclb
unpcklps
out
pushf
push
repz
mov
scas
movsb
daa
mov
jnp
aas
mov
fisubs
xlat
mov
xor
andb
xchg
add
cmp
jle
mov
and
jb
addr16
push
ficompl
mov
mov
sub
cmp
fimuls
cmp
lock
inc
fisubrs
cmp
sti
xchg
lcall
push
mov
xorb
lods
add
adcb
add
mov
dec
jo
mov
testb
push
jno
or
test
or
repz
sbb
and
aad
cmp
pop
pop
shrl
add
jge
insb
arpl
das
cmpsb
incl
push
lret
inc
mov
add
hlt
out
lcall
mov
lea
mov
aam
jo
lods
cmpsb
add
subb
lods
mov
adc
jne
pop
std
inc
mov
push
loope
and
clc
xchg
adc
adc
loop
in
mov
sti
push
ja
or
add
inc
or
jmp
test
and
mov
or
lods
push
int3
fldcw
data16
outsl
jnp
lret
and
insl
lahf
test
ljmp
repnz
pop
loope
sahf
outsl
cli
dec
or
xor
pusha
xor
mov
loop
aam
test
out
cmp
lods
fcomps
push
es
push
lds
repnz
pusha
sub
iret
inc
lea
jp
jno
push
sub
xchg
cld
out
mov
and
jno
cltd
adc
mov
add
sub
insb
push
mov
adc
lds
adc
rep
add
out
xchg
sub
pop
pop
test
adc
mov
gs
cmpb
or
dec
push
mov
pop
nop
push
pop
xor
sbb
mov
std
fmull
ret
push
adc
pop
test
pop
push
mov
mov
aaa
int3
rcl
sahf
push
mov
addr16
cs
add
mov
mov
inc
bound
das
loopne
sahf
je
ds
sahf
mov
rcll
xor
xor
xchg
jae
stos
in
xor
lds
sbb
daa
repnz
push
aam
xchg
add
xor
sarl
jno
fsubrl
aas
test
ret
push
mov
lret
and
push
movsb
mov
imull
mov
push
fstps
push
mov
dec
and
mov
inc
arpl
nop
cmc
and
fs
and
lret
jns
hlt
push
lea
cmp
out
sbb
add
push
hlt
mov
adc
push
fdivp
mov
mov
jmp
andb
pop
dec
aas
ret
int
xor
movsb
ja
daa
es
je
outsb
jmp
fstpl
jnp
add
rcll
inc
cmpsb
not
scas
in
add
xor
rcrl
lcall
mov
cmp
insl
inc
out
and
and
inc
add
daa
xor
cltd
push
and
ja
jns
jno
inc
xchg
sub
arpl
sbb
sbb
data16
ss
xchg
hlt
mov
lahf
shl
mov
dec
dec
jp
add
clc
pop
mov
dec
shr
mov
dec
test
jecxz
test
add
or
into
sti
add
or
pushl
dec
popf
cmp
les
cwtl
jge
xor
jnp
inc
add
loop
mov
pop
mov
iret
jns
sbb
add
fistl
test
in
test
mov
iret
jns
jle
cmp
xor
fildl
loopne
mov
or
jb
adc
sub
nop
int
xor
xor
sub
int3
mov
push
push
movsl
pop
sub
ds
mov
jns
sub
insb
push
pop
mov
adc
aad
mov
loope
pop
aaa
xorb
and
inc
add
lds
cmc
ror
push
xchg
adc
sahf
or
inc
mov
jbe
leave
clc
sahf
mov
fdivs
add
mov
imul
add
lea
fptan
xchg
sub
fcompl
push
pusha
mov
add
shrl
adc
sub
mov
outsl
jg
fwait
sub
movsb
xor
scas
cmpsl
sub
enter
test
inc
rorl
imul
test
xlat
and
xor
add
aaa
ja
roll
xchg
xchg
xchg
add
out
aad
test
adc
add
pusha
insb
mov
in
pop
cmp
inc
xchg
sbb
lahf
test
je
clc
mov
cmc
push
push
out
pop
adc
cmp
xchg
fnstsw
mov
sub
mov
push
push
inc
popa
lret
jmp
ret
adc
fstpl
bound
xor
popf
dec
jmp
mov
repnz
ja
popa
repnz
xchg
add
add
mov
xor
andnps
pushf
inc
fsubrl
icebp
pop
adc
ja
scas
das
xchg
jnp
fadds
mov
push
mov
cmp
lea
adc
xor
mov
call
repnz
ja
gs
push
xchg
cltd
jge,pt
mov
xchg
and
cmovnp
dec
out
test
fistpl
mov
dec
mov
popf
push
mov
push
ljmp
fs
test
into
mov
insl
roll
adc
icebp
lock
fstps
dec
mov
jmp
aam
out
orb
and
movl
nop
mov
inc
add
fdiv
mov
xor
xorb
xchg
int3
dec
dec
cmpl
mov
fwait
test
jnp
leave
xchg
aaa
xlat
ret
add
gs
add
or
aaa
fwait
adc
into
jnp
or
sbb
dec
mov
insb
mov
mov
mov
or
xchg
push
jo
dec
cmp
dec
aas
jns
ljmp
adc
adc
lods
jp
push
sub
or
out
cmp
stos
jo
mov
dec
aam
mov
mov
xchg
inc
xor
ljmp
jae
jg
lods
jae
mov
lea
ficoms
sbb
dec
mov
mov
jo
movsl
xchg
sub
or
sbb
xor
popf
cmp
aas
test
push
ja
sub
xchg
iret
pop
je
fldenv
rclb
xchg
ret
imul
pop
mov
xchg
mov
push
add
push
imul
jg
push
icebp
xchg
jecxz
or
ret
cltd
shlb
jae
push
aas
loope
adc
sub
pop
dec
sbb
mov
xor
xlat
cli
pop
sub
enter
add
jnp
test
mov
sbb
in
loopne
rcrl
xor
test
das
push
pop
inc
cld
out
sbb
xor
in
lcall
dec
mov
adc
lret
mov
push
clc
and
pop
xchg
push
dec
sub
fwait
cli
je
dec
nop
xlat
sbb
in
dec
nop
sarb
dec
dec
andb
in
shll
movsl
and
enter
mov
pop
lea
rcrb
sub
cltd
push
icebp
xor
imul
jg
into
stos
cmpsb
mov
push
mov
add
inc
sub
leave
sub
xlat
aas
outsb
or
push
xchg
movsl
inc
cltd
mov
fwait
dec
pop
out
xor
into
pushl
ret
mov
in
inc
push
adc
sbb
mov
mov
xor
xchg
mov
pushf
xchg
mov
mov
cwtl
xchg
ffreep
repnz
addl
ja
cmp
mov
adc
jae
jae
pop
pushf
mov
loop
sbb
mov
test
xor
ret
arpl
in
fists
xchg
into
fildl
ror
push
add
xchg
and
add
roll
jo
mov
inc
jno
mov
pop
aaa
pop
and
and
mov
cmovo
pop
and
shr
xor
xlat
insl
rorl
outsl
insl
mov
cmc
fs
in
sbb
and
xchg
xchg
nop
sbb
adc
stos
ljmp
outsl
xor
in
lret
loop
push
push
lahf
mov
or
andb
sbb
push
lahf
inc
mov
out
scas
and
adcb
mul
rol
jo
mov
push
ds
rorl
adc
xorb
xchg
mov
jecxz
cmp
gs
andb
and
fldenv
mov
aaa
xor
or
in
bound
mov
mov
push
cmp
call
cld
jae
add
xor
lret
js
jne
or
notl
mull
jns
mov
sub
pop
and
xchg
mov
pop
jbe
imul
add
push
push
out
ret
decl
pop
jb
lods
pop
dec
call
decl
mov
add
ljmp
xlat
pop
data16
arpl
cmp
fdivrs
xchg
jbe
mov
dec
dec
dec
neg
in
or
fsubr
mov
sbb
into
lret
pop
mov
pop
pop
ss
pop
cmp
jae
mov
scas
lea
xor
ret
push
dec
cs
or
mov
sub
adc
inc
shl
xchg
rcrl
clc
push
lret
int
test
jg
inc
test
dec
int3
std
jmp
lods
ficomps
jg
adc
xchg
xchg
pop
jae
popa
jo
or
int
fldl
stc
aas
cmp
iret
add
mov
adc
jno
std
data16
aad
repz
gs
mov
mov
jae
call
test
rcl
push
lea
push
fbstp
or
add
pop
cmp
pop
sbb
or
insb
out
jmp
mov
lds
mov
iret
push
ljmp
rorb
pop
ss
and
pop
icebp
sti
cwtl
mov
pop
rolb
lea
xchg
shrb
das
jns
sbb
popl
mov
rcrb
xor
jl
and
je
add
adc
dec
push
jns
mov
aam
sti
mov
xchg
sahf
mov
jno
out
fnstsw
xchg
iret
cmc
jle
in
call
gs
push
mov
or
icebp
popa
push
cli
les
out
or
and
jmp
push
jno
push
mov
jo
and
ja
adc
mov
adc
or
and
xchg
fs
ret
sbb
jmp
lods
mov
into
pop
inc
mov
lock
sbb
push
dec
mov
ss
dec
outsl
adc
movl
jno
dec
cmp
out
mov
sub
test
jge
test
dec
xsha256
cmpsb
push
xchg
fsubr
pop
call
lret
push
out
inc
inc
dec
inc
outsb
xchg
mov
fisubs
mov
or
pusha
mov
inc
sbb
addr16
push
rolb
test
push
xlat
dec
cmp
xor
cmpl
cmp
pop
or
push
mov
enter
movsb
leave
arpl
push
loop
int
repz
insb
lods
mov
mov
lods
dec
addr16
and
les
push
mov
pop
xor
jns
lods
fidivrl
sub
mov
inc
lahf
incb
sub
addr16
add
cltd
inc
loope
add
add
xchg
add
stc
and
and
or
cmp
push
das
scas
lock
mov
or
popf
cmp
clc
mov
xrelease
jne
test
pushf
or
jmp
xlat
in
out
movsb
test
in
dec
sbb
dec
push
mov
mov
adc
inc
mov
repz
aam
cwtl
xlat
push
sub
cmp
ss
sbb
das
jns
add
mov
mov
test
push
inc
int3
mov
add
mov
lods
into
aam
or
add
lock
mov
repnz
push
mov
jb
xorl
clc
dec
fs
sarl
pop
sub
push
sbb
inc
and
dec
ljmp
jnp
push
add
arpl
cmp
test
outsb
faddl
mov
and
xor
hlt
push
insl
rcl
dec
mov
dec
or
in
mov
sub
sub
push
mov
jg
cli
add
sbb
divb
int3
in
jns
insl
fbstp
push
cld
push
or
or
pop
gs
push
add
mov
xor
out
jg
jge
mov
loope
stos
mov
sub
jb
pop
cmpsb
inc
ljmp
adc
lods
mov
push
sbb
ja
cmp
or
insb
mul
xor
xlat
std
dec
dec
mov
cmp
rcrl
popf
add
jns
pop
sbb
and
jns
popa
pop
scas
and
ds
enter
and
sbb
pop
cmp
push
cmp
arpl
aad
sub
push
push
shl
pop
sub
xor
adc
mov
repz
aad
and
js
push
shlb
add
dec
sbb
xlat
mov
and
movsb
push
ret
pop
mov
adc
sub
inc
aaa
pop
jl
jp
xadd
loope
out
inc
or
mov
je
dec
roll
xlat
in
aaa
inc
mov
fsubp
ljmp
out
or
int
mov
ficoms
sbb
push
cmp
add
mov
repz
ja
call
scas
sbb
sarb
mov
ds
insl
or
lcall
xchg
mov
lock
faddl
dec
cmp
mov
xchg
mov
out
inc
outsb
cmp
xchg
cltd
lock
arpl
int
movsb
push
sbb
imul
call
and
cmpsl
ja
dec
adc
xor
ss
bound
inc
addr16
lods
jge
inc
push
cmp
sti
mov
in
call
mov
insl
push
cmpsl
mov
lea
adc
cmc
faddp
js
in
pop
mov
fistl
fcmovbe
push
push
add
imul
push
push
push
jl
int
rcl
or
stos
nop
cmc
push
rorl
push
fnstcw
in
jne
inc
enter
aam
roll
aas
jmp
adc
pop
hlt
sbb
sub
ret
js
and
push
pop
xchg
xor
test
push
inc
sub
xchg
test
movsb
ror
rclb
out
imul
jmp
icebp
xor
out
xor
jb
rorl
in
add
inc
xor
dec
arpl
ja
loop
xchg
mov
stos
pop
cmp
sbb
mov
lret
lods
mov
sbbl
pop
repnz
nop
xchg
std
mov
call
mov
cmp
in
aam
std
lret
mov
adc
inc
xor
mov
xchg
out
and
pop
in
out
xor
xchg
jbe
jb
pop
push
inc
dec
ret
jno
sbb
mov
or
adc
lods
cmp
adc
pushf
pop
pop
pop
inc
inc
mov
out
out
or
xor
sbb
pop
stos
popf
inc
xor
fscale
push
xor
shlb
xor
jp
sbb
je
or
je
in
aas
inc
sbb
dec
pop
jno
or
mov
mov
insl
into
subl
inc
loop
pushf
insb
scas
jo
xchg
xor
scas
and
mov
xchg
je
sub
icebp
and
inc
sub
out
inc
jns
test
cmpsb
dec
lods
pusha
into
mov
mov
in
sub
mov
pop
negb
mov
jmp
add
pop
loope
fldenv
cmp
je
mov
adc
xchg
popa
adc
bound
mov
mov
push
sbb
insb
dec
call
fs
nop
pop
loop
jbe
or
arpl
jp
test
outsb
mov
cmc
fmul
pop
stos
int
fs
jl
icebp
int3
in
xchg
push
aaa
imul
xorb
push
add
pop
xor
rorl
test
add
les
inc
popf
shr
sub
and
pop
ljmp
fldl
push
fidivl
mov
testb
inc
pop
shll
aam
lret
push
xlat
push
pop
loope
inc
pop
aam
xor
fs
cs
jb
jns
insl
icebp
pop
aam
xor
aaa
sti
mov
adc
or
mov
pop
out
repz
push
loopne
enter
cmpb
xlat
and
or
lods
cmp
stos
fs
cltd
imul
es
cmp
jmp
push
cltd
or
mov
enter
mov
pop
cli
cmp
enter
enter
sbb
jns
icebp
cmpsl
inc
daa
push
fstl
inc
sbb
movsb
xor
lret
dec
negl
push
nop
test
cmp
cltd
repnz
mov
sbbl
add
test
mov
pop
stc
mov
insb
outsl
test
fs
jge
mov
pop
pop
add
lock
mov
data16
out
push
jge
xchg
ds
test
cmpsl
nop
pop
cld
aad
push
and
out
loopne
cmpl
inc
decl
mov
cmp
xchg
mov
inc
jecxz
add
rcll
or
rolb
std
iret
xor
or
dec
out
mov
and
adcb
sub
sub
jno
adc
call
sub
inc
pop
dec
nop
out
mov
mov
jmp
mov
pushf
scas
xchg
inc
cmpsb
jb
outsl
push
ret
mov
cmpsl
push
lret
pop
jns
pushf
push
mov
mov
clc
sbb
pop
test
xchg
sbb
cmovo
push
xchg
xchg
andl
stos
mov
jmp
mov
sub
push
int
pop
mov
sar
mov
sarl
cmpsb
sub
mov
int
push
mov
xchg
lds
jnp
scas
in
nop
jnp
push
test
cmp
lods
imul
jg
jle
mov
movsl
dec
repz
cmc
pushf
mov
hlt
addr16
jne
xchg
fcom
es
cmp
push
mov
jnp
mov
add
mov
or
and
jp
out
jecxz
leave
ja
in
or
jmp
add
mov
add
inc
mov
jnp
xchg
imulb
inc
or
int
dec
addr16
cmp
rorl
nop
fstpl
rcrb
in
sub
lcall
adc
lods
add
or
adc
mov
adc
loopne
lds
jns
dec
in
and
popa
and
mov
sbb
or
mov
mov
adc
cmp
arpl
mov
sub
mov
adc
jns
cmc
sti
cmp
fbld
lret
lret
mul
cmc
pop
addr16
mov
enter
out
sub
push
scas
add
pop
pop
arpl
das
xchg
in
les
jmp
testl
mov
js
mov
sbb
out
push
dec
xchg
xchg
das
jge
mov
jb
lea
out
popf
cmp
jnp
movsl
lret
scas
mov
inc
lods
push
sub
inc
pop
ds
and
xchg
clc
inc
enter
inc
add
jne
jecxz
or
jb
in
outsl
fstl
adc
xchg
adc
push
out
adc
inc
adc
or
jno
rorl
stc
rol
jg
ret
rcrl
lret
loope
stos
inc
in
xor
push
enter
inc
jnp
rol
or
into
xor
jg
sbb
jge
xchg
pop
and
inc
jmp
leave
sbb
xor
mov
test
imul
jle
aas
aas
sahf
jae
fildl
or
and
adc
add
lock
int3
mov
pop
aam
xchg
dec
cmpsl
cmp
cmpsb
mov
cmpsb
scas
loopne
mov
mov
imul
fstpl
clc
cmp
popa
fisubl
dec
bnd
and
push
add
cmp
lock
jge
mov
divb
lods
fldcw
jae
stos
pushf
pop
cmc
stos
mov
dec
cmp
inc
sti
in
std
mull
ljmp
fs
subb
in
out
js
sahf
cs
push
daa
jno
movsl
test
push
pop
inc
adc
jge,pt
adc
pop
mov
mov
xor
mov
fnstcw
inc
int
push
jmp
push
addr16
mov
add
push
loope
aam
dec
ljmp
leave
out
xchg
stos
cmp
js
push
mov
push
test
adc
stos
ss
or
push
xor
nop
cmp
mov
dec
repz
fwait
add
pop
lock
push
xor
insl
addb
cwtl
cmpsb
mov
mov
stc
lock
sub
test
mov
rorb
mov
or
adc
sarb
ret
test
inc
fldenv
xchg
daa
push
cs
out
jnp
jo
ljmp
mov
inc
mov
lods
daa
pop
xor
ds
or
insl
xchg
cmp
pop
repnz
or
aas
cmp
call
cli
cvtps2pi
mov
sahf
mov
outsb
inc
push
sbb
inc
push
pop
mov
xlat
ss
cmp
and
imul
push
sub
scas
jp
push
dec
js
into
inc
aam
dec
scas
fldt
add
mov
and
jmp
add
inc
out
std
pop
push
xchg
in
scas
shlb
mov
sbb
movnti
pop
jecxz
inc
adc
into
push
out
cltd
sbb
xor
xor
mov
cmc
xor
cmp
in
imul
cld
lahf
ljmp
test
gs
mov
mov
and
and
test
mov
imul
pusha
ret
repnz
stos
xor
fcmovb
je
test
ljmp
jg
popf
mov
pop
out
xchg
je
sub
fwait
adc
out
mov
and
clc
lahf
flds
push
sbb
aam
mov
call
add
mov
dec
lds
or
push
xor
arpl
jle
lcall
ja
ds
push
ja
sub
lods
sbb
jne
dec
enter
inc
out
in
test
cwtl
lret
push
in
sub
mov
ljmp
xchg
dec
dec
movsl
mov
es
lcall
aaa
and
mov
subl
lea
adc
mov
dec
scas
mov
pop
inc
les
mov
inc
fisttps
dec
push
lock
lea
inc
into
scas
insb
inc
mov
icebp
pop
movsb
orl
out
cmpsl
xchg
cwtl
inc
push
pop
cltd
dec
insl
jmp
and
push
sub
lret
adc
repz
cltd
popf
in
repz
pop
jle,pn
into
das
push
xor
mov
lea
mov
push
divps
ljmp
inc
xchg
ret
and
rcrl
xlat
repz
jle
rcll
dec
hlt
cmpsb
ds
inc
out
adc
push
faddl
scas
push
test
push
sbb
or
adc
and
ss
fbstp
arpl
push
inc
dec
xor
xor
iret
js
fdiv
cmp
imul
pop
in
rcrb
pop
into
mov
push
icebp
test
stc
ret
cmpl
out
rolb
jae
fwait
xchg
xchg
dec
jg
loopne
test
movsb
or
into
adcb
pop
inc
and
and
in
fwait
cli
stos
cmpsl
cld
inc
or
mov
adc
iret
daa
mov
pop
sub
insb
fsubs
jl
jno
push
xor
in
jo
repz
insl
addl
out
mov
mov
xchg
and
sub
data16
add
sahf
in
mov
jg
xlat
cmp
pop
sub
test
imul
push
lods
push
push
stos
repz
add
and
jb
adc
xchg
lahf
cmp
lret
mov
mov
sub
jecxz,pn
pushf
mov
sbb
jg
add
les
setl
test
or
test
rcl
mov
outsl
pop
scas
xor
dec
dec
or
mov
jns
fidivl
cmp
xlat
cltd
jnp
mov
repnz
sub
in
test
test
repz
xchg
jecxz
in
out
and
mov
in
add
popf
push
movsl
sbb
lcall
dec
int3
fisttps
out
clc
cmp
xlat
imul
sub
pop
mov
fcomi
adcb
pop
imul
cs
push
fnsave
fmul
add
movsb
sub
aas
mov
vmaxss
das
std
and
pop
lea
xchg
std
call
or
xchg
incl
jg
add
adc
cmpl
fwait
add
cmpsb
xchg
or
test
and
outsb
leave
mov
or
mov
dec
xchg
outsb
mov
rcrb
pop
ja
les
pop
and
fldl
ja
xor
popf
jle
sub
dec
cmpsl
pop
push
mov
stos
dec
cmc
movsb
mov
mov
xchg
enter
jecxz
jo
orl
mov
idivl
inc
in
and
icebp
cmpsb
or
fistps
mov
add
push
dec
push
dec
jg
inc
and
mov
jecxz
jl
repz
int
movsb
insl
xor
mov
and
inc
mov
lahf
mov
arpl
push
push
sti
es
pop
imul
inc
aaa
pushf
mov
popa
xchg
mov
dec
add
cmp
xchg
sub
jbe
dec
setbe
popf
js
dec
out
enter
sub
adc
xor
clc
xchg
in
cmp
adc
repz
xor
loope
mov
mov
stos
mov
lods
jbe
jl
int3
fstpt
cli
cmp
ljmp
loope
aad
push
adc
push
sbb
out
lahf
and
cwtl
das
jp
jmp
and
les
xchg
insb
out
sbb
mov
in
jmp
std
subl
sub
pusha
les
push
ret
pop
xorl
aad
stc
xchg
fs
inc
into
push
adcb
mov
in
adc
dec
sbb
arpl
mov
push
push
dec
stos
aad
sbb
inc
es
pop
or
xchg
xchg
cmpsb
push
rol
and
cmpsl
in
movsl
out
add
and
sbb
cld
jno
adc
adc
mov
sbb
js
aaa
mov
push
js
mov
shrb
jmp
cmpsb
adc
mov
cmp
mov
xor
xchg
cmp
xor
lock
data16
stc
sbb
sub
pop
lods
mov
loope
xchg
jnp
ss
pop
push
mov
and
lcall
shrl
nop
pop
jnp
pop
jb
sub
or
xor
out
and
in
cli
push
push
xlat
cmp
nop
sarl
cmp
inc
adc
lock
shlb
aad
push
mov
pop
addr16
mov
ret
inc
clc
stos
sbb
adc
mov
daa
sbb
in
mov
and
rcr
mov
stos
or
inc
inc
sahf
mov
arpl
cltd
and
les
push
in
fwait
inc
dec
mov
aas
jns
or
jbe
orl
cmpsl
pushl
jp
mov
xchg
ret
mov
ds
push
dec
fsubrs
fnstsw
and
iret
xor
sub
pop
ss
std
xchg
pop
nop
mov
loop
cmp
repz
sbb
es
das
cld
repz
mov
ret
xchg
insl
inc
xor
iret
inc
orb
lret
sub
dec
push
xor
rorl
add
add
shll
mov
adc
es
cmp
or
arpl
sbb
fcmovbe
loope
repnz
sub
clc
rorl
lcall
jno
xor
lods
dec
mov
jno
popa
sbb
dec
xchg
cwtl
addr16
inc
addr16
fisubs
inc
push
xor
mov
in
add
popf
mov
push
push
int
ficoml
jle
loop
out
mov
pop
movsb
push
inc
mov
fs
iret
xor
movsl
notl
iret
mov
fisttpll
mov
adc
sbb
mov
mov
sahf
mov
popf
inc
jge
fdivrl
sub
in
fcmovnu
imul
cmp
syscall
jne
and
push
jno,pt
fisubrs
pushf
pusha
cmpsb
rcrb
mov
xchg
mov
es
inc
or
lods
push
pop
pop
cmp
adc
dec
cmp
jl
push
loope
loop
lods
lahf
das
add
insb
mov
or
mov
mov
mov
inc
mov
mov
lret
sbb
ret
stos
ret
lahf
pop
js
lock
xor
roll
pop
cmp
cmp
aad
loopne
fwait
xor
pop
loopne
mov
ljmp
adc
pushf
dec
cwtl
cmpsl
jb
or
enter
orl
fbstp
sbb
lods
out
test
xchg
adc
movsb
enter
cltd
clc
shl
push
popf
push
out
dec
lods
mov
cmp
xor
add
outsb
addb
lods
cld
sub
je
lea
in
pusha
jnp
jb
shrb
stc
dec
inc
jge
xchg
scas
pop
ss
lds
clc
push
push
test
xchg
mov
sub
pop
dec
push
out
mov
jmp
pop
dec
xchg
loopne
aas
js
sbb
call
lret
inc
push
adc
sub
fs
iret
in
inc
xlat
pop
sbb
outsl
or
adcl
mov
rcrl
mov
shl
sbb
lret
add
repz
pusha
loope
and
or
in
adc
inc
jbe
cmp
push
mov
sarb
xor
adc
sub
aam
mov
jno
jnp
movsb
push
inc
mov
push
es
mov
jecxz
fldlg2
sbb
daa
lret
dec
notl
cmc
cmpsl
scas
fists
jp
mov
icebp
xchg
enter
test
sub
sbb
dec
ds
sbb
into
push
xor
push
cmovb
mov
aad
mov
cmc
sub
xchg
test
out
lock
push
xlat
das
cmc
das
dec
mov
icebp
aaa
and
jae
mov
add
lock
push
stos
ror
lock
jp
mov
add
popa
test
fs
mov
jns
cmp
int
ds
mov
and
and
mov
xor
mov
mov
cmc
notb
jmp
jb
fwait
stos
jae
xchg
outsl
mov
lret
push
cmp
and
push
rcll
repz
jl
jle
or
outsl
xchg
cld
add
in
iret
push
enter
out
sahf
mov
mov
xchg
add
and
push
dec
aad
out
add
mov
call
in
dec
push
ljmp
or
fs
in
mov
loopne
roll
jnp
xchg
add
mov
dec
jl
or
xor
or
add
mov
lds
sbb
inc
xchg
or
icebp
mov
sub
enter
jno
mov
mov
loop
arpl
cmp
push
mov
test
pusha
mov
shl
and
mov
pop
stc
nop
fldl
xchg
dec
xchg
mov
push
daa
jmp
or
add
lcall
lret
ja
ret
out
inc
jo
mov
inc
lods
jae
cld
loop
aad
pop
push
mov
xor
dec
int
out
fbstp
cmp
add
ret
or
ds
add
int
xchg
sbb
icebp
and
testl
loopne
adc
add
test
push
push
lret
imul
dec
aam
or
shlb
push
pop
push
lret
enter
lock
cmp
fs
ljmp
or
mov
iret
mov
xor
cmpsl
outsl
cmp
pop
adc
je
jl
push
pop
inc
pop
push
gs
adcb
ret
ljmp
test
cmp
and
xor
test
jns
sub
cmpsb
mov
pushf
or
inc
ja
mov
jp
xor
mov
in
test
mov
popf
mov
xor
in
adc
mov
aad
adc
popl
or
xor
sbb
push
leave
sbb
sbb
pusha
push
add
push
fstl
push
enter
lahf
add
sbb
insb
imul
adc
fs
or
mov
pop
mov
lahf
es
hlt
inc
dec
lods
sbbl
jae
daa
popf
stos
sub
mov
fwait
scas
and
or
or
pop
jo
dec
lret
and
mov
adc
dec
movsb
fcmovne
lods
fldl
mov
rorl
xchg
push
cvtpi2ps
subb
lock
out
idivb
ljmp
lods
fcoms
pop
sbb
fstl
clc
out
mov
cmc
add
std
inc
je
sbb
fs
pop
pop
push
in
stos
rorl
push
and
pushf
mov
xchg
xor
mov
add
xchg
sbb
lock
adc
loop
push
xchg
and
push
mov
movsb
push
sbb
es
ds
mov
out
mov
add
fistl
addr16
inc
cmpsb
cmp
jb
inc
dec
sahf
in
mov
into
push
adc
mov
xchg
ljmp
mov
cmp
push
test
shrb
push
andl
mov
xchg
nop
pop
jecxz
rclb
jae
jb
lret
arpl
fisttpl
and
out
movsl
aad
inc
sbb
addb
cmp
aaa
jp
inc
test
jo
mov
cmp
fidivrs
sbb
adc
test
jg
das
dec
inc
cmp
push
outsl
mov
or
inc
test
aas
cmpl
adc
or
dec
stc
or
jg
xchg
adc
add
in
mov
rcr
into
xor
cmp
cmp
dec
mov
xorb
lods
mov
push
adcb
lahf
mov
divb
lahf
pop
in
mov
push
in
jmp
je
xor
in
pop
enter
pop
or
lret
lods
or
jb
ficomps
in
popf
mov
sbb
jae
mov
jnp
popf
lahf
mov
insb
mov
clc
sbb
cmc
push
andb
adc
jb
push
rolb
mov
in
mov
or
lret
dec
cmp
and
scas
sub
push
les
icebp
xchg
and
repz
stos
adc
adc
sbb
mov
xlat
fdiv
jae
ljmp
mov
sub
or
mov
jae
lods
sbbb
mov
addl
xlat
xor
icebp
push
jnp
pop
mov
jmp
push
push
shr
and
xchg
pop
movsb
sub
inc
aad
lods
dec
mov
push
cmp
and
inc
mov
fisttpll
xor
pushf
and
sub
inc
dec
or
out
push
clc
push
loop
dec
cmp
fcoml
sbb
adc
xchg
outsb
outsb
push
shrl
push
jg
xchg
fs
out
pop
lret
or
or
push
mov
sbb
cmpsb
nop
ja
cmp
jg
bound
orl
pop
mov
lahf
lcall
daa
jmp
or
sti
scas
lret
mov
mov
mov
jge
sbb
add
pop
das
jmp
out
pop
mov
or
mov
stc
call
adc
inc
mov
in
xor
shrl
pop
es
fmull
push
insb
popa
push
test
into
mov
lret
lods
sbb
push
fnstenv
movsb
pop
dec
cmp
or
ja
enter
push
in
xlat
cld
pop
cld
fdivs
push
call
push
in
imul
jecxz
mov
push
push
mov
push
ja
insb
pop
les
loopne
lret
push
pop
scas
repz
int
int3
adc
aas
cmc
je
in
push
stc
pop
inc
movsb
dec
fnstenv
cli
das
lret
es
flds
fnstcw
mov
xchg
sti
inc
inc
mov
add
mov
jmp
mul
mov
and
ss
stc
or
push
ror
lret
bound
dec
insl
fbld
je
push
push
xor
mov
and
dec
jmp
rcrl
out
pop
ret
dec
jle
or
adc
mov
and
test
dec
loope
fstpl
enter
shlb
ds
lock
icebp
push
mov
sbb
in
sub
loopne
xchg
push
lds
test
jecxz
fldlg2
cmp
out
add
mov
add
int
pop
aad
pop
mov
jnp
jecxz
in
jle
xchg
rsm
jno
push
outsb
fs
mov
pop
icebp
rorb
jmp
pop
xor
push
mov
lea
xchg
adc
jns,pt
adc
xchg
iret
pop
adc
or
lcall
or
xchg
rorl
into
repnz
mov
sub
fcmovb
loop
xlat
xchg
sbb
and
mov
out
pop
icebp
loop
add
mov
pop
mov
test
xor
imul
pop
push
or
push
fs
pop
adc
inc
lods
cld
jl
mov
lods
mov
and
pop
movsb
and
mov
sti
lret
cwtl
jge
lret
imul
mov
sub
in
fisubs
repnz
adc
push
push
and
popa
dec
xchg
in
out
mov
sbb
push
movsb
sub
sub
sub
xchg
xor
gs
push
imul
loope
in
inc
push
ljmp
lods
inc
mov
mov
mov
mov
outsl
lock
push
sub
mov
jp
stos
add
xchg
js
push
inc
add
lea
xor
dec
push
lahf
push
mov
add
test
dec
and
sub
jo
jl
fucomi
clc
imul
fnsave
pop
mov
and
lock
aaa
inc
xor
js
sahf
mov
aam
mov
adc
mov
push
out
aaa
test
les
les
popl
stos
xorl
rcrl
xchg
sub
jae
ret
mov
imul
jmp
adc
aaa
dec
sub
pop
push
je
fmuls
rorb
xchg
mov
ja
ret
les
test
sub
std
psubsw
mov
push
adc
scas
xchg
test
mov
aaa
xlat
and
mov
sbb
arpl
mov
xor
jecxz
or
test
punpcklwd
testb
repnz
in
out
cmp
gs
ficoms
push
les
out
xchg
loopne
pop
je
aaa
aas
pop
pop
mov
xor
rcrb
mov
mov
aas
pop
or
sbb
pushf
dec
jge
fwait
xchg
sbb
ljmp
loop
xchg
jge
sub
aam
js
lret
subb
fldenv
mull
jl
cmpsl
fisubrs
adc
sbb
mov
rolb
test
in
pop
stos
adc
enter
jbe
xchg
shll
mov
xchg
pop
insl
jmp
adc
lock
ffree
jp
popf
cmp
movsb
mov
mov
bound
jmp
rcll
or
xchg
cmp
test
test
int3
xor
mov
in
mov
pop
push
mov
insl
pop
movsl
xchg
ljmp
xchg
out
lret
aad
clc
imul
and
fisubrs
inc
mov
push
mov
or
data16
or
mov
in
and
repz
sbb
jg
je
cmp
into
inc
lods
inc
jnp
or
cli
jno
fwait
inc
enter
cld
ret
sub
sbb
or
mov
fimuls
or
flds
js
paddq
pushf
fimull
sbb
das
mov
pop
mov
je
outsb
inc
out
jmp
cltd
lds
cmp
addr16
and
dec
xor
in
scas
imull
push
out
adc
adc
lahf
pop
mov
pop
mov
xchg
fdivrl
jge
mov
and
in
stc
dec
adc
lcall
cwtl
int
insl
in
adc
lock
sub
push
daa
orl
imulb
mov
scas
xchg
inc
dec
in
mov
notb
adc
out
inc
dec
jp
or
out
lcall
inc
lods
xchg
jns
icebp
je
jnp
js
push
jmp
mov
repz
or
xchg
movsl
lds
leave
ficoml
pop
jg
push
add
push
add
xor
mov
adc
enter
sbb
jp
or
cmpl
neg
frstor
fmulp
adc
or
rclb
daa
scas
sbbl
pusha
call
and
test
push
or
lock
pusha
enter
cmc
pop
cmp
sbb
repz
popf
inc
dec
jmp
push
and
or
scas
faddl
jns
xorb
out
mov
popa
adc
ds
mov
adc
int
sbb
test
xor
movsl
stos
mov
test
adc
mov
xchg
jbe
jb
pop
cmpsl
enter
imul
mov
push
rorb
sbbb
jo
dec
xor
adc
ja
gs
int
nop
mov
test
cmc
je
pop
jne
pusha
xchg
dec
lret
mov
jle
mov
lods
popl
push
arpl
cmpsl
out
xor
js
jns
mov
or
inc
jle
stc
push
sbb
sahf
pop
stos
testl
jne
sbb
xchg
cmpsl
int
out
enter
jecxz
cmpsb
inc
aam
in
stos
cmp
inc
ret
jle
fwait
out
xchg
aam
pushf
rclb
je
sahf
cli
pop
mov
js
inc
dec
cmp
fsubs
adc
dec
lcall
test
mov
andb
fldt
xchg
stos
pop
cld
cmpsb
popa
xchg
jns
sahf
add
jg
jno
jns
push
adc
loop
sub
ja
loopne
out
sub
push
loope
enter
rol
or
sbb
or
mov
mov
pop
sbb
xchg
lods
jo
xchg
mov
jp
mov
sub
dec
xchg
arpl
sti
loope
mov
adc
mov
lret
xor
pop
adc
push
popf
push
rcl
or
aaa
lods
jns
mov
rsm
mov
aam
gs
outsb
add
or
pop
sbb
or
fldt
push
mov
push
dec
push
inc
stos
dec
or
pop
xor
lods
sbb
aad
clc
xchg
dec
in
jb
popf
jle
or
push
xchg
cwtl
cwtl
js
cltd
outsl
sub
pop
fwait
pop
mov
inc
repnz
aam
dec
push
inc
clc
xchg
std
lret
in
mov
pop
aas
aaa
pop
cmp
ljmp
ja
pop
sahf
jbe
cwtl
dec
rcll
cmc
jo
icebp
adc
pop
dec
ja
in
cmp
jmp
dec
lods
xchg
dec
insl
sbb
adc
aam
xchg
pop
cld
pushf
mov
in
fnstcw
arpl
add
add
push
add
mov
xchg
sahf
xor
jno
jb
push
sbb
jl
ds
add
and
ljmp
pop
clc
into
jne
test
pop
in
out
pop
lret
sub
xchg
push
sub
ds
sbb
fidivrs
imul
int
push
mov
mov
test
loopne
jge
jo
xchg
jmp
jmp
cltd
jb
les
outsb
jecxz
out
fdivl
fsubrs
sub
jge
aam
jmp
mov
cmpsb
sbb
mov
push
xor
dec
lods
jmp
sub
adc
lds
sbb
xchg
lods
mov
jl
inc
mov
add
int3
es
insl
cmp
fisubl
rcrl
insb
stc
and
mov
cmp
les
out
sub
movsl
xor
add
aam
in
stc
mov
ljmp
jno
or
int3
mov
pushw
push
jns
hlt
jno
add
mov
dec
mov
das
and
add
pop
mov
popa
enter
cmc
cmp
stos
fsts
icebp
sarb
imull
notb
gs
ds
cmp
jmp
repz
pop
or
jmp
adc
mov
and
jno
icebp
add
jo
inc
jns
jl
sub
inc
scas
sahf
xchg
outsl
sub
int
cmp
mov
cld
loopne
mov
int
mov
aam
sub
out
js
mov
adc
daa
pop
lahf
roll
mov
movsl
jb
rorb
push
movsb
fldcw
out
and
testl
sbb
outsl
ljmp
out
pop
mov
xchg
mov
js
or
out
adc
test
sti
adc
cmp
pop
outsl
jg
in
mov
sub
add
push
lods
sbb
push
mov
pop
jp
xchg
mov
fst
mov
cli
lret
das
loop
or
cmp
and
lock
daa
mov
sti
add
ret
aad
xchg
pop
xchg
clc
test
cmpsb
and
aaa
lods
fnstcw
ret
mov
mov
jb
cmp
call
jbe
inc
xchg
push
gs
inc
rcrb
inc
scas
js
sbb
and
cmpsl
adc
jno
pusha
movl
xor
pop
lea
cli
aaa
push
inc
xor
inc
xchg
mov
out
adc
pusha
sbb
imul
std
and
cmp
rcrl
xchg
sub
dec
push
jmp
or
sub
mov
pusha
test
dec
pcmpeqd
mov
cwtl
mov
push
repz
xchg
sarl
incb
gs
testl
inc
bswap
outsb
pop
outsb
sub
test
lods
fwait
std
jecxz
aaa
or
test
xor
mov
pop
cmp
or
add
es
daa
add
mov
cmp
adc
push
gs
pop
lods
mov
sub
mov
adc
pop
mov
sti
jmp
xor
cmp
push
push
shl
jecxz
inc
test
inc
stos
into
add
imul
jbe
mov
xchg
orb
mov
dec
dec
iret
adc
jae
sbb
mov
dec
mov
imul
xchg
and
mov
and
dec
inc
stos
fmulp
lods
mov
arpl
cmc
cld
sub
lock
jge
or
jbe
mov
stos
lcall
cwtl
clc
std
clc
mov
xor
and
insl
ret
popf
fidivrs
pusha
adcb
mov
repnz
inc
fidivrl
in
orb
into
add
jl
outsl
mov
jge
jg
inc
fidivl
inc
in
and
dec
mov
pusha
lds
adc
sub
jns
inc
cli
je
in
and
mov
insb
adc
and
or
dec
aam
lods
jmp
push
push
mov
mov
push
cmpb
jne
push
into
jg
xor
in
xchg
sub
arpl
mov
shrl
fisttps
add
sbb
roll
test
lahf
or
sar
out
adc
les
arpl
popf
adc
clc
outsl
daa
mov
stos
scas
push
jmp
icebp
cltd
inc
jnp
in
cmp
popa
scas
maskmovq
idivl
push
mov
lret
stos
push
dec
cmovne
stos
pusha
mov
aas
lds
cli
leave
pushf
subl
sbb
rclb
mov
cs
mov
and
push
and
dec
sbb
dec
cmc
mov
ret
or
ret
pusha
jmp
cmc
movsb
sbb
testb
insb
scas
das
jo
jnp
lock
sub
repz
mov
adc
xchg
sbb
arpl
push
arpl
decb
or
or
mov
dec
movsb
pop
int3
fwait
out
mov
add
cmp
adc
sub
pop
insb
popa
adc
std
out
incl
out
dec
xchg
pop
inc
std
sbb
insl
pop
pop
in
decb
lcall
xor
xorl
or
les
sti
mov
inc
mov
jo
mov
and
inc
adc
inc
int
std
inc
dec
imul
in
sub
and
aam
stc
jg
xor
dec
sub
pop
sahf
mov
inc
mov
out
icebp
fs
jb
cmp
or
jae
dec
adcl
mov
repnz
mov
jmp
ret
mov
fdivrl
inc
cmp
add
rep
pop
std
push
pop
add
dec
dec
inc
mov
cmpl
inc
mov
cs
inc
fsubp
lds
je
pop
cmp
mov
jecxz
dec
sbb
adc
jo
repnz
cmp
xor
jo
out
hlt
scas
pop
insl
jo
pop
imul
mov
mov
shrl
js
dec
shr
stos
movups
es
adc
adc
inc
xchg
pusha
xchg
rclb
or
pop
inc
add
shlb
add
stos
jle
dec
cld
mov
arpl
mov
pop
fisubrl
mov
xchg
push
push
inc
das
xor
or
sbb
arpl
mov
pushf
repz
xorb
pop
inc
repnz
adc
scas
imul
pop
sbb
imul
xlat
in
shl
push
orb
mov
das
out
outsb
xchg
sub
inc
mov
and
sub
inc
push
in
pop
daa
pop
xor
int
out
pop
mov
adc
push
mov
aam
lret
call
jo
fimull
gs
mov
sub
push
ret
xchg
ja
aad
and
cmp
or
xchg
fldl
fistpl
push
imul
inc
or
jge
inc
xlat
mov
inc
mov
jbe
addr16
push
icebp
pop
imul
cmp
or
jmp
mov
aam
popl
sub
mov
lea
cmc
mov
leave
mov
jns
pop
pop
mov
lock
jg
jb
xchg
cmp
xor
aaa
sbb
mov
mov
xor
imul
push
pop
ds
mov
or
jb
push
dec
or
push
cs
mov
lahf
sub
enter
jmp
dec
pop
and
ss
and
push
mov
mov
or
sbb
push
sub
push
push
daa
rclb
mov
icebp
adc
mov
adc
sbbb
out
subb
popf
jmp
sub
add
mov
es
sarb
arpl
cmpsb
iret
inc
jae
mov
mov
test
dec
fisttpll
lahf
imul
mov
lock
ja
int3
out
movsl
cs
or
leave
add
fcoml
icebp
mov
lds
popa
jb
out
cmpsb
cmp
ds
mov
pop
lock
mov
or
push
in
call
inc
mov
jle
pop
repz
and
mov
ljmp
lods
mov
mov
dec
xchg
inc
xchg
or
fisubl
inc
sbb
mov
or
jnp
notb
pop
xchg
adc
mov
jo
adc
xchg
add
mov
xor
into
adc
lret
jbe
sub
in
mov
fwait
clc
mov
pusha
pop
mov
xchg
sbb
js
inc
inc
lods
xchg
insb
xor
sub
pop
jae
lret
loope
scas
mov
test
pop
sti
gs
popf
sarl
adc
jnp
pushl
or
sub
pop
in
outsl
or
cltd
lock
jl
out
sub
sub
pop
mov
mov
ja
fdivr
pop
insb
inc
movsb
ret
hlt
lock
movsb
xchg
push
fs
mov
sub
jle
test
ss
push
or
jge
pop
dec
mov
test
dec
scas
inc
pop
inc
icebp
mov
les
sbb
adc
jmp
out
or
jno
je
aas
xchg
clc
ret
in
push
fidivrs
cltd
and
jecxz
jp,pn
sbb
and
pusha
cmp
in
jne
pushf
adc
jb
loope
push
mov
adc
jmp
stos
lcall
and
lods
arpl
sub
in
gs
addr16
xor
mov
call
lods
fistpll
xor
xlat
inc
jp
or
push
fidivl
les
mov
lcall
incb
lods
cmp
in
loopne
or
test
xchg
mov
and
scas
adc
inc
repz
xchg
pop
sub
in
mov
jecxz
and
imul
lcall
mov
repnz
sub
sbb
mov
leave
scas
push
and
shlb
fwait
mov
out
xor
and
cwtl
sub
sub
scas
cmp
cltd
mov
pushf
jb
out
std
lods
mov
inc
das
add
loope
xchg
push
jb
jge
cmp
mov
xor
ret
gs
sbb
dec
test
mov
int
addb
ds
test
xor
in
xchg
mov
daa
jg
xchg
jb
call
dec
loopne
xchg
add
cs
push
test
fwait
clc
int3
push
lcall
fsubrp
clc
insb
mov
in
mov
insb
push
lods
fwait
gs
cmp
push
repnz
pop
jno
mov
shrl
jp
add
sbb
sbb
je
or
mov
rolb
outsl
cmp
push
outsl
inc
and
sbb
and
xchg
lods
data16
xor
in
mov
fildll
xchg
enter
gs
and
xchg
mov
xor
les
ljmp
mov
cmp
mov
or
mov
inc
cmp
xor
ja
lcall
imul
lods
addr16
xchg
jae
inc
mov
add
push
insl
mov
sub
icebp
sub
jns
test
and
pop
mov
out
pop
push
pop
arpl
push
shr
stc
andl
loop
xorb
xchg
xor
mov
fs
fsubrp
cmp
and
sub
negl
or
cmp
inc
jae
cmp
cmp
lds
lods
loopne
stc
stos
mov
sub
fisttps
sti
xchg
aaa
push
lahf
adc
imul
fidivs
loopne
pop
dec
and
cmp
subb
dec
and
addr16
dec
push
cmpsl
and
daa
cmc
in
push
mov
mov
sbb
hlt
loopne
dec
test
inc
cli
repnz
daa
xor
jbe
nop
lds
dec
xor
dec
jne
pop
and
sbb
repz
mov
jnp
push
bound
pop
loop
mov
addl
push
xchg
mov
ficoml
fcmovnu
outsb
or
movsb
cmp
push
adc
push
fs
add
add
ret
xchg
mov
in
mov
mov
sub
pop
imul
dec
cwtl
daa
inc
mov
and
jae
cmc
mov
mov
stos
dec
cmpsl
adc
xlat
sub
in
mov
fidivl
jae
sub
lahf
pop
inc
movb
fadds
jnp
dec
and
fld
or
mov
pop
mov
lahf
and
int
inc
aad
push
test
mov
mov
cltd
xchg
lcall
stos
shr
inc
jl
push
ja
mov
daa
cltd
cmp
pushf
ds
dec
push
adc
mov
sub
xchg
pusha
add
lock
int
subb
popl
adc
xor
inc
scas
lret
arpl
sarb
fbld
pop
lret
je
xor
xchg
push
sub
mov
cwtl
or
out
inc
aaa
leave
push
nop
and
fcoml
inc
test
stos
cmp
out
outsb
mov
inc
ja
bound
in
inc
add
push
mov
in
stos
test
or
idivl
jge
adc
shll
push
pop
jge
add
mull
jp
fcmovnb
cli
mov
stos
add
lcall
mov
mov
add
mov
pop
data16
mov
inc
push
mov
pop
sub
adc
clc
fsts
repnz
loopne
mov
jmp
inc
pop
add
hlt
sbb
sbbl
mov
int3
adc
sub
mov
aaa
pop
inc
hlt
dec
cmp
add
add
lea
ss
jmp
mov
mov
popf
mov
sbb
loopne
xorl
sbb
push
faddl
test
mov
push
push
rol
insb
push
and
arpl
sub
push
jp
aas
xchg
cld
pop
sbb
nop
fistpl
push
lret
sbb
jns
loop
test
push
mov
andb
inc
mov
jg
aas
jge
push
popf
jae
nop
neg
and
addr16
addr16
movsl
dec
dec
xor
fsubs
lahf
dec
and
dec
mov
push
dec
loope
cmpl
jp
jp
sub
pop
mov
and
push
inc
cmpsl
jecxz
xchg
inc
push
cltd
hlt
inc
in
fsubrs
push
inc
scas
inc
fstl
nop
xor
dec
push
cmp
lods
sti
scas
or
cmpsl
cltd
push
in
iret
adc
int3
rorb
imul
adc
push
lods
inc
jno
repz
and
imul
sbb
pop
mov
fdivr
ficomps
sub
add
pop
sbbl
push
sbb
scas
addr16
insl
jle,pt
jne
push
or
stos
xchg
cmc
or
push
ljmp
mov
movsl
scas
pop
es
inc
sbb
adc
loop
lods
push
xchg
sbb
jle
push
mov
push
icebp
fisttpll
adc
out
push
dec
lods
ret
lods
inc
test
daa
imul
jbe
xchg
inc
xor
out
mov
lcall
sbb
imul
and
xchg
mov
mov
mov
mov
add
sbb
aam
jp,pn
test
pushf
test
rolb
pop
or
movsl
mov
jo
and
xor
mov
gs
push
xor
and
test
ja
cmp
pop
add
lcall
mov
je
or
inc
std
ss
das
sbb
cmp
sub
push
outsl
inc
push
aad
fimuls
iret
inc
xchg
andb
adc
adc
add
popa
push
push
outsl
cmp
or
in
jle
ja
int3
cltd
and
pop
add
insb
loopne
ret
adc
leave
pop
inc
xor
inc
fsts
push
cmpsl
inc
xor
cmp
xor
stos
ss
jecxz
je
shr
cmc
push
addr16
pop
pop
cmp
and
push
and
push
pusha
mov
movsb
fldl
jae
test
add
or
or
xor
cmp
fsubr
and
movsl
cmp
outsb
push
cmpb
bound
aas
adc
cmp
gs
int
jg
fs
mov
cmp
or
and
jae
jecxz
cmpsl
pop
xor
or
jecxz
mov
insb
iret
out
in
jge
fsubs
xchg
sub
stos
add
test
xor
mov
fisubs
or
gs
cmpsl
mov
sub
xor
xor
inc
sbb
repz
subb
pop
xor
mov
sahf
add
decb
cmpsb
push
adc
xchg
xchg
adc
mov
mov
jle
sti
and
mov
jle
sbb
add
shrl
test
mov
inc
sahf
mov
and
inc
movsb
inc
and
jnp,pn
imul
ret
or
cmp
pop
adc
rcrb
sar
jle
mov
mov
clc
push
push
xchg
clc
aam
pushf
xchg
or
int3
stos
lock
inc
pop
ret
add
dec
and
mov
ljmp
mov
ljmp
xor
bound
inc
cmp
cmpb
jle
notl
mov
xor
mov
add
xchg
sbb
mov
mov
push
test
pop
or
scas
jbe
add
or
call
dec
std
xchg
push
stos
stos
pusha
loop,pn
or
lods
data16
imul
jnp
and
add
mov
mov
jo
aas
mov
mov
jecxz
sub
xchg
mov
jnp
adc
out
cltd
push
dec
fisubl
dec
test
mov
pusha
outsl
push
dec
das
sbb
lahf
fnsave
mov
push
cli
sub
jl
adc
ficoms
adc
push
or
sbb
mov
adc
test
xor
pop
sbb
mulb
cmp
idivb
mov
enter
enter
ret
jo
jno
pop
pop
popf
in
sbb
cli
sub
into
dec
out
mov
mov
push
mov
jnp
pop
or
jmp
sbb
scas
add
jecxz
shll
mov
mov
fcmove
aaa
gs
dec
lods
xchg
ret
stos
add
nop
or
and
xchg
jmp
fsubrs
jge
and
mov
fsubl
sarb
vaddsubps
out
inc
sub
loope,pn
lahf
pushf
pop
inc
je
dec
mov
cmpsb
jecxz
mov
push
nop
adc
das
mov
cmp
inc
xchg
push
sbb
test
xlat
sub
test
aam
imul
daa
fisttpl
cmp
adc
adc
pop
jbe
lods
hlt
test
hlt
adc
out
out
movsb
ja
rorl
cmp
dec
pop
xor
pop
pop
pushf
mov
inc
xchg
sti
cmp
lods
int3
lret
fs
std
pop
sub
xchg
jno
mov
inc
jo
jne
mov
lea
push
inc
mov
cld
xor
lds
dec
aam
test
xchg
test
jb
bound
in
push
das
movswl
rclb
adc
xor
rcrb
add
inc
add
add
sub
mov
sbb
xchg
push
loop
lcall
cmpl
out
sub
insb
outsl
subw
into
fisubs
fnsave
sti
mov
and
out
inc
pop
pusha
fistl
add
aad
insb
push
add
fists
mov
inc
adc
lds
dec
inc
cmp
fisttps
sub
shrb
imul
sub
cmp
push
dec
movsb
adc
subb
cmp
cs
sbb
xchg
cmp
enter
xchg
insb
xor
cs
pop
sub
test
cmpsl
in
jnp
out
dec
cmp
loopne
cwtl
scas
sub
lret
cmc
pop
jge
and
xor
lcall
bound
cmp
iret
lret
aad
fcomps
scas
mov
loopne
xor
pop
lods
gs
cmp
insl
or
pop
or
mov
pop
and
outsl
or
mov
aad
push
neg
mov
sarb
in
enter
loopne
iret
in
scas
push
xchg
les
mov
gs
shr
pop
scas
into
cltd
out
pop
loopne
sbb
test
addb
inc
and
xchg
loope
cs
loop
sarb
add
mov
mov
cld
sti
sbb
out
xchg
ljmp
stos
or
cmp
sbb
int
adc
loope
out
outsb
xchg
imul
nop
mov
inc
pop
pop
jae
loop
pop
ljmp
xchg
das
rcrb
das
push
cmp
xor
xchg
xchg
sub
cmp
and
jge
xchg
loopne
push
pop
jl
outsl
es
bound
idivl
xlat
gs
sbb
adcb
push
push
shll
pop
xor
lods
out
dec
bound
inc
push
je
sbb
imul
aam
jns
dec
nop
dec
mov
cli
cli
test
sub
inc
mov
inc
sbb
mov
ret
cltd
xor
cmp
cmc
in
xchg
dec
fdivs
jno
jge
adc
adc
push
push
test
or
sarl
aas
push
xchg
mov
mov
fs
push
ficoms
iret
push
addr16
inc
mov
inc
mov
js
movsb
sbb
in
std
sbb
jp
add
mov
repnz
aaa
pop
shl
jle
jl
jmp
out
mov
rcll
inc
gs
call
pop
jmp
jb
fnop
and
popf
or
popa
lea
xchg
pop
push
ret
fidivs
jg
gs
mov
imul
ret
push
pop
data16
adc
dec
pop
or
jp
iret
andb
pop
add
fwait
sbb
ljmp
add
jg
cmp
push
lcall
popf
cmpsb
inc
lods
mov
data16
movd
xor
jnp
push
subl
adcl
mov
incl
pop
fwait
xchg
mov
mov
pop
pop
insl
adc
hlt
sti
in
sub
outsb
outsb
xor
add
aad
movb
or
or
cmp
daa
test
xlat
inc
inc
inc
xor
jl
fs
cld
push
ds
and
mov
xchg
sti
sbb
xor
arpl
test
sahf
imul
popa
xchg
pop
ljmp
fs
add
faddp
push
sbb
jae
divb
mov
insl
test
fadd
inc
jg
out
cmp
inc
shr
nop
jl
mov
mov
sbb
mov
sub
mov
movsl
xchg
sbbb
je
ds
push
clc
adc
ret
sbb
out
daa
subb
push
sti
jp
mov
xor
ljmp
or
dec
addr16
xlat
xlat
sbb
cmp
and
sbb
jnp
adc
mov
sub
xchg
outsl
adc
dec
dec
ja
jecxz
mulb
cwtl
mov
mov
icebp
mov
mov
dec
pushf
loopne
rorb
jmp
xor
mov
aas
lock
xchg
push
and
test
ds
adc
enter
jmp
in
popf
lods
sahf
in
xchg
pop
push
clc
sbbb
out
and
test
dec
dec
xchg
stc
push
sub
js
mul
lahf
fs
pop
int3
int3
adc
xchg
inc
cmp
pop
xor
mov
gs
adc
mov
jl
xchg
leave
in
mov
aad
mov
lods
orb
lock
out
data16
out
into
scas
and
adc
icebp
pop
sub
mov
stc
lds
sahf
jl
inc
nop
push
gs
mov
pop
dec
sbb
add
inc
subb
aas
insl
rcr
cmpsl
arpl
nop
shlb
xchg
add
addl
call
xchg
mov
push
dec
ljmp
and
mov
outsl
in
xchg
jae
mov
fwait
cmp
cli
sbb
inc
daa
shrb
push
xor
hlt
xchg
mov
mov
test
fwait
mov
push
addb
lret
into
aas
lcall
stos
lahf
sub
testl
lret
jmp
and
adc
ret
inc
jo
and
rcrl
lret
sbb
test
dec
repz
arpl
das
in
incb
xor
add
test
xchg
insl
mov
push
sub
or
cld
sti
sti
das
and
push
push
xor
cld
pop
cmpsl
mov
mov
sbb
inc
aaa
cmpsb
or
lods
jecxz
loopne
jb
adc
push
mov
es
push
xor
lea
and
jbe
pop
fists
push
push
fcomps
lahf
inc
add
cmp
popa
pop
pmulhuw
cli
xchg
jbe
and
les
jecxz
cmp
xor
xor
or
xor
xchg
xor
std
pop
repnz
sbb
pusha
inc
iret
andb
in
xchg
mov
out
xorb
fcomip
mov
mov
loopne
shrb
iret
xor
xchg
pop
or
mov
mov
arpl
mov
les
pop
arpl
clc
in
loop
mov
out
movsb
and
icebp
in
test
push
data16
cmpsl
shll
ljmp
inc
pop
xorps
repz
jo
jp
mov
sbb
push
push
shrb
xchg
inc
push
and
push
test
mov
cltd
out
add
mov
loope
cld
mov
aaa
cltd
fs
rcrb
sub
sbb
in
fs
rcrb
mov
leave
xor
and
rcrl
fildll
lret
stc
das
popa
call
shll
mov
testl
xor
mov
sub
and
mov
test
sbb
cmpsl
or
fdivp
nop
loopne
sub
sub
fisttps
repz
js
sub
movsb
lret
dec
xchg
dec
decl
and
repz
lock
ljmp
loope
sbb
cmp
stos
cmp
xchg
xchg
sub
sub
dec
xchg
das
cmp
mov
sbb
ss
in
jno
mov
jo
das
add
sti
and
jns
dec
fidivrl
or
rcrl
addr16
mov
addr16
lods
adcb
push
adc
sarb
lahf
cmp
in
mov
insb
sbb
popfw
and
insl
loop
cmp
mov
xchg
lds
cli
pop
lods
adc
dec
fs
imul
mov
fbstp
pop
ss
sahf
push
test
pop
mov
sub
lds
dec
test
cmpsb
jmp
imul
loop
in
jp
mov
jecxz
cmpsb
std
or
xor
or
dec
sbb
mov
ret
dec
mov
add
pop
mov
mov
jb
cmp
shll
pop
push
mov
sub
dec
xor
loopne
push
push
loop
adc
xlat
rcrl
fstl
repz
je
out
fiadds
add
mov
dec
adc
sub
jns
sub
push
jl
dec
push
cli
push
cli
add
sbb
push
jle
sub
fsubs
jmp
sub
nop
jno
fwait
ja
cmp
cmp
mov
fistpl
mov
insb
add
add
ja
ss
cwtl
fsubs
and
movsl
cld
pop
jb
rcrl
icebp
add
dec
pop
in
push
rcrb
and
iret
decb
shlb
sub
cmp
push
adc
iret
mov
mov
or
fdiv
push
push
cmc
fs
cmpsb
je
stc
orl
mov
mov
cld
loopne
int
lcall
push
fcomps
pusha
mov
mov
sbb
in
cmp
xchg
sbb
jae
xor
nop
hlt
adc
int3
mov
xchg
jns
iret
into
jae
call
jae
push
out
mov
cmpsl
mov
das
jae
fistl
jmp
add
fdivp
pusha
push
insb
xor
call
sbb
dec
fstpt
punpckldq
push
mov
pop
push
daa
fsubs
rolb
mov
bound
aam
lahf
sub
lods
sub
enter
sub
jne
sub
out
or
lahf
jle
dec
pushf
cmpsl
and
mov
outsl
add
xor
inc
fldl
and
mov
mov
out
push
nop
jne
test
xchg
aad
stos
and
lods
adc
pusha
push
into
push
es
sbb
push
sub
fiadds
mov
or
push
push
dec
pop
push
mov
fwait
ret
or
in
scas
stos
pushf
movsb
das
mov
cltd
adc
sbb
outsl
aam
ret
pusha
cmp
cmpsb
stc
xor
ja
jo
insl
rorl
insl
inc
fildll
sbb
fildll
or
shl
pusha
sbb
push
add
xor
jno
sbb
pop
lods
push
ss
js
push
int
addr16
sahf
jbe
ror
sbb
adc
jne
push
xor
outsl
jg
dec
push
lods
adc
and
andb
rcrl
mov
and
jl
sarb
in
movsl
mov
leave
enter
jecxz
push
in
andb
mov
fiaddl
adc
notl
das
sub
inc
push
push
xchg
jecxz
pop
fadds
cmp
call
pop
movsl
jnp
inc
or
movsl
jg
cwtl
pop
mov
and
loopne
dec
rcr
sbb
dec
or
add
mov
rol
cmp
rcrl
mov
xchg
scas
lea
and
push
shr
xchg
mov
stos
lret
adcl
push
idivl
enter
xchg
fnsave
jmp
loopne
or
sbb
popf
mov
dec
insl
je
inc
and
xor
out
jnp
adc
mov
cmpsl
mov
lods
xchg
push
pop
shlb
scas
int
addr16
test
lds
jmp
mov
aam
movsb
stos
ja
adc
cld
ret
bnd
or
xchg
bound
leave
fdivrs
fs
mov
jb
xchg
inc
or
dec
push
xor
arpl
adc
pop
mov
repz
push
pop
movsl
dec
sbb
push
in
jbe
cmp
dec
pop
mov
testb
mov
and
mov
or
call
inc
push
in
pop
daa
dec
pop
mov
pop
fsubl
lret
loope
pop
dec
dec
popl
stos
sbb
jge
dec
xorb
cld
pop
pop
mov
repz
outsl
scas
add
loopne
sbb
popa
gs
lock
jb
push
pop
fcoml
push
sub
lock
pusha
xlat
daa
fcoms
dec
leave
dec
sub
sub
adc
or
push
push
inc
shl
repnz
fucomip
mov
movsl
scas
pop
fwait
mov
sbb
pop
adc
push
test
mov
pop
scas
xchg
add
cli
mov
rorl
cltd
stos
aad
aam
pushf
xlat
test
jecxz
push
test
imul
insb
fidivrs
cwtl
mov
into
dec
cmp
sub
out
mov
gs
sti
push
dec
in
mov
pop
push
ja
push
movsl
push
sahf
dec
xchg
orl
lock
adc
cmp
inc
lock
aaa
xorl
add
pop
data16
movsl
jae
enter
jb
push
xor
mov
mov
xor
mov
xor
xlat
ljmp
mov
nop
sahf
push
dec
inc
sahf
negb
sahf
pop
shrb
xor
popa
fstl
hlt
dec
and
xorb
jns
aam
jnp
mov
in
out
sti
dec
sbb
jl
icebp
movsb
movsb
jmp
lods
mov
test
xchg
mov
mov
out
mov
insb
push
arpl
add
fnsave
out
mov
jnp
dec
push
jle
inc
sbb
push
iret
loop
sub
jge
out
dec
mov
push
mov
andl
push
test
push
test
popf
lods
dec
lea
ja
jnp
arpl
xchg
sbbl
js
pop
xor
pop
cmp
icebp
pop
leave
xor
mov
and
dec
jb
mov
fcoml
cmp
mov
mov
in
and
rorl
stos
call
xor
inc
xchg
imul
arpl
jmp
movsb
out
lock
popf
movsl
push
jo
out
rol
outsb
pop
js
pop
or
pop
or
mov
inc
xor
lods
or
in
mov
scas
sbb
xchg
arpl
cs
jae
mov
test
fldz
bndldx
push
xchg
clc
jmp
cmpsb
pusha
cmpsb
or
rcrl
ret
popf
adc
daa
inc
pop
rorl
mov
cmpsb
add
pmulhw
push
sbb
cld
mov
js
popa
inc
cmpsl
adc
daa
test
sbb
cmpsl
jecxz
push
mov
and
and
aad
sbb
xchg
dec
cwtl
cmpsl
outsl
ret
stc
xchg
es
jge
or
adc
leave
sbb
jl
or
mov
jbe
hlt
es
sti
jb
test
mov
sbb
sub
pop
pop
xchg
mov
int3
jb
jb
aas
cmp
imul
sub
dec
or
cli
pop
jno
sub
insb
clc
xor
cmpsb
scas
popf
movb
mov
ss
adc
es
pop
jge
lahf
ret
sbb
bound
aaa
pop
adc
out
clc
js
mov
call
cld
jle
es
ret
andl
and
ss
push
addb
test
ss
movsl
mov
int3
arpl
ds
adc
ljmp
cmp
or
inc
out
cld
fwait
int3
shlb
in
cmpsl
adc
cmp
xorb
sbb
ljmp
push
adc
outsl
mov
movq
mov
cmpsb
push
clc
scas
and
daa
call
lcall
mov
enter
mov
mov
rclb
inc
enter
fs
lahf
cltd
jae
lods
fstl
imul
inc
out
dec
imul
xlat
and
push
test
xchg
insl
jb
pop
mov
pushf
jbe
das
dec
sbb
sub
test
cmpsb
outsl
mov
das
in
clc
orl
test
shrb
and
mov
out
sub
or
andl
sti
ret
push
fldl
jmp
aam
and
sub
repz
lods
push
repnz
lods
xor
sbb
mov
loopne
mov
movsl
fisubs
xorl
xchg
adc
adc
mov
mov
mov
test
pop
aas
xchg
jb
dec
idivl
pushf
jp
push
popf
repnz
sbb
scas
ret
lret
insl
or
and
mov
pop
mov
std
cmpsl
and
add
int3
push
lahf
inc
ret
aas
push
mov
push
aam
test
insb
cmpsl
dec
inc
fsubrs
add
leave
jle
lock
inc
ja
lods
pop
cmp
into
movsb
push
sub
xor
xlat
xor
ljmp
pop
push
push
std
cmp
cmp
jmp
sub
std
cmpsl
or
aad
add
add
popa
push
lea
in
outsl
jns
in
cmpl
ret
adc
mov
and
xlat
jns
lds
xchg
pop
ds
pop
aas
mov
mov
imul
int3
sub
jae
in
dec
in
xor
dec
lock
lea
mov
or
jnp
add
xchg
cmc
add
xlat
sti
fcompl
lcall
inc
xlat
outsl
pusha
std
push
enter
pop
jle
rclb
cmc
or
mov
xor
lret
les
mov
sub
push
adc
dec
rol
xor
and
mov
arpl
rcll
test
xchg
cld
aas
jl
mov
pop
daa
xor
xor
mov
dec
in
pop
dec
cmp
xchg
mov
mov
add
lret
mov
mov
je
dec
xor
xchg
pop
xor
xor
repz
dec
dec
sti
clc
jbe
mov
lock
clc
cmovo
imul
pushf
xor
jne
pop
pop
jns
jns
iret
or
inc
push
and
cmp
push
loopne
sbb
adcl
jnp
lret
fidivrl
fcmovbe
xchg
xchg
lods
movsl
add
popa
jo
subb
xor
ds
insb
fcompl
push
lock
dec
xchg
sub
adc
outsl
ja
jae
out
out
aaa
dec
test
push
roll
inc
fisubl
fcomi
dec
jmp
xchg
rcr
mov
mov
xchg
cli
jle
iret
cmpsb
or
mov
xor
movsl
or
aam
leave
or
xchg
dec
push
test
mov
outsb
mov
loopne
mov
cmp
shll
mov
or
shlb
mov
fnsave
pusha
out
sbb
xchg
ljmp
push
in
test
push
popf
and
mov
push
insb
repz
int
sub
lret
fldt
cmp
jae
out
sarl
repnz
mov
ret
mov
mov
mov
sbb
das
mov
dec
push
fcomp
test
jmp
dec
add
xor
inc
fistl
pop
cmp
mov
mov
hlt
push
imul
and
andb
sbb
das
test
stos
into
cmp
repnz
lock
mov
cmp
fsts
gs
pop
mov
jle
repz
mov
push
roll
mov
sub
imul
lcall
and
ret
push
mov
scas
xchg
xchg
lcall
and
lods
or
repz
push
gs
stos
jns
dec
imul
xor
ss
mov
jle
xchg
mov
add
call
movsb
jmp
cmp
ret
adc
popa
adc
fisubs
test
or
adc
mov
mov
xor
imul
nop
mov
cmpsb
xor
outsl
or
sub
outsb
xor
xchg
mov
daa
lret
movsb
cltd
and
popf
test
jne
push
push
jo
imul
enter
test
adc
mov
push
andnps
cld
mov
mov
movsl
pop
and
mov
cltd
add
scas
cltd
pop
shrl
pop
stos
jmp
dec
mov
lret
in
mov
shlb
hlt
nop
in
push
and
push
mov
sbb
dec
int3
inc
imul
add
in
les
cmovnp
or
mov
mov
pop
xchg
nop
repnz
aaa
xchg
shl
in
xchg
mov
sub
push
loope
add
inc
daa
add
inc
cmp
ds
push
or
xchg
test
sbb
hlt
int
imul
fdivrp
or
cmp
xor
jl
nop
add
pop
push
jo
add
inc
inc
call
int3
jp
movsl
je
sub
or
mov
jb
notb
gs
in
xchg
je
pop
lds
sbb
rclb
bound
and
mov
jns
push
sbb
loope
mov
pop
pusha
cmp
lahf
jmp
add
dec
scas
addb
mov
insl
sub
lret
pop
shl
inc
add
in
aam
adc
cmc
std
or
or
xor
cmp
mov
xchg
cmp
mov
ret
out
inc
and
arpl
mov
fldenv
pop
iret
rcr
ds
dec
inc
in
sub
push
fcomip
sub
nop
or
fucomi
lods
enter
jg
cltd
lock
dec
xchg
adc
inc
xchg
jae
or
in
jbe
push
or
inc
and
lock
nop
out
cmpb
aaa
outsb
in
or
jmp
repnz
into
cmpsl
add
mov
jle
cmpb
pop
das
and
outsl
jae
and
mov
in
fsubp
mov
lret
cs
sti
pusha
dec
adc
xor
jb
dec
repnz
mov
sub
mov
lods
sarl
cmpsl
pop
xor
shl
imul
xor
repz
mov
bound
mov
ljmp
sbb
dec
lret
pop
insb
and
and
mov
pop
testb
insb
std
sub
pop
inc
or
xor
mov
pusha
and
mov
notb
or
push
test
push
cmc
mov
pop
mov
mov
ret
and
mov
inc
test
or
inc
outsb
add
mov
call
mov
push
or
push
mov
or
adc
into
data16
insl
and
inc
sbb
xchg
and
cmpsb
divl
in
mov
in
adc
aad
fildl
adc
pop
in
clc
adc
lret
fistl
movsl
push
adc
adc
es
fdivrl
std
daa
mov
call
xchg
pop
inc
in
aas
lds
jmp
dec
and
fistl
outsl
jb
push
sub
cmp
pop
ss
lods
pop
dec
call
sti
mov
bound
and
cmp
push
scas
sbb
xchg
int
xor
aaa
mov
sbb
inc
aam
leave
and
fucom
cli
fcmovbe
sub
mov
adcb
imul
ja
cmp
push
mov
mov
cmp
push
fwait
or
pop
insl
sarb
xor
into
xchg
imul
sarb
rorl
mov
outsl
lret
lods
cli
sbb
cmp
xchg
cmp
pop
movsl
addr16
sub
lcall
sub
mov
repnz
arpl
sbb
in
jge
lret
inc
adc
push
and
aas
or
xchg
jne
cs
repz
sub
cld
mov
fmul
xchg
cmp
sbb
and
int
inc
mov
cmp
jnp
dec
bound
clc
xchg
je
mov
mov
and
outsb
into
pavgw
fs
mov
pop
fdivrl
aas
clc
pop
mov
jne
jg
inc
mov
xchg
cltd
sbb
inc
ja,pt
push
push
out
test
mov
dec
in
mov
hlt
sub
insl
cmp
ds
jmp
mov
jmp
test
stos
repnz
test
mov
popl
and
sarl
mov
jecxz
pushf
ljmp
popf
xchg
push
rcrl
test
xor
cmp
js
popf
adc
inc
icebp
out
test
imul
jl
stos
push
mov
mov
lds
inc
xlat
in
popf
dec
sbb
scas
push
mov
faddp
outsl
dec
xchg
jns
mov
inc
push
arpl
sbb
push
sub
push
stos
push
movsb
mov
mov
xchg
fldt
pop
clc
pop
fstl
mov
xchg
or
neg
ret
loop
push
cmp
xchg
int3
add
movsl
notb
jb
fisubs
scas
dec
popf
xchg
push
jmp
out
jae
ret
fs
and
lcall
clc
jp
pop
push
push
xchg
insl
push
adc
sub
pop
arpl
sub
mov
xchg
pushf
mov
cwtl
dec
mov
icebp
or
rcrl
scas
pop
cmp
add
inc
popf
ret
jge
cwtl
and
out
sbb
mov
cwtl
and
jmp
mov
aaa
out
mov
dec
stc
pushf
aas
int3
xor
or
xchg
cmp
int
test
call
adc
lea
flds
pop
push
sub
pop
adc
push
test
stos
cmpsb
repz
int3
in
test
out
jb
mov
dec
xchg
not
pop
repnz
xor
xchg
mov
or
sbb
arpl
cmpsb
call
bound
repnz
xchg
outsl
mov
xchg
mov
mov
or
sub
push
mov
rol
iret
cs
xor
fistpll
mov
aas
movsb
jge
stos
lret
stos
pop
lahf
sub
inc
xorl
cwtl
shrl
lea
rcrb
push
jp
push
and
inc
imul
cmp
scas
mov
xlat
ljmp
es
jns
adc
xor
sub
scas
xor
test
das
repz
rolb
cmpsb
mov
nop
ds
popa
int3
pop
jns
pop
sbbb
mov
jp
and
mulps
add
fstpt
xchg
popf
push
cwtl
rol
inc
jl
cmpsl
imul
mov
fsts
dec
jmp
ds
jecxz
testl
push
adc
sbb
jp
push
fsubr
and
fs
dec
jecxz
notb
xchg
sub
hlt
cmp
pushw
and
out
in
ret
mov
mov
shufps
lcall
adc
and
cs
pusha
push
in
mov
xor
push
sarb
call
sti
in
inc
xor
dec
jmp
test
iret
and
jecxz
inc
pop
sbb
or
outsl
into
mov
and
adc
cmp
mov
mov
pop
jns
push
jae
cmpsb
lock
or
mov
jne
stc
cmp
sbb
push
add
inc
push
mov
inc
rorb
ret
xchg
xor
scas
sub
pop
enter
aam
jb
push
inc
daa
in
pop
jne
dec
sbb
xchg
push
stc
cmp
test
mov
pop
shrl
dec
xchg
out
jo
mov
push
rorl
mov
and
add
add
and
mov
adc
nop
lahf
addr16
stos
loop
xchg
sbb
lret
jbe
sub
cmp
ret
int
pop
sub
lahf
movl
inc
adc
dec
fsubr
adc
and
popa
lock
shlb
out
insl
inc
fadd
xor
sub
dec
lcall
mov
jne
mov
loopne
cwtl
xor
and
push
mov
push
jl
sub
leave
xchg
inc
push
loopne
jg
sub
inc
push
inc
cs
sub
cld
jmp
fisubrs
xchg
inc
pop
das
ret
fisttpll
rcrb
fs
and
ret
add
fildll
cmpsl
mov
sbb
loope
sbb
sbb
repnz
xchg
repnz
inc
cmpsl
pop
jae
push
pop
sub
mov
insl
imul
ljmp
in
inc
inc
fistl
push
jp
and
pop
xor
pop
das
pop
mov
cmp
test
mov
mov
outsb
fistl
jno
adc
mov
lods
cmp
inc
adc
xchg
jbe
mov
andl
mov
sbb
xchg
popf
xchg
inc
pop
mov
outsb
xchg
je
paddd
outsl
and
sub
cltd
arpl
dec
fidivrs
fs
mov
jb
jo
test
sbb
or
rclb
fcoml
push
mov
jo
fucomp
jl
outsb
sbb
sahf
push
dec
insb
inc
mulb
xor
stos
push
cmp
mov
mov
pop
sub
sub
cwtl
pop
clc
fistpll
push
or
jp
fcmove
pop
shrb
cmpsb
jmp
ss
push
pop
xchg
mov
cmp
dec
and
inc
cltd
jg
or
jle
lea
or
outsl
pop
sub
and
push
jae
xor
jae
mov
loop
push
sbb
mov
rorl
xor
jle
stos
inc
mov
fldl
fmuls
lahf
insb
out
sarb
hlt
push
shll
addb
aas
pop
adc
ret
jo
out
mov
inc
lds
fst
push
xor
mov
cmpsl
xor
sbb
outsl
lcall
fsubrp
xor
sbb
ficomps
mov
mov
sbb
mov
arpl
inc
mov
xchg
or
call
aas
mov
sbb
addr16
jge
out
scas
lods
aam
int3
hlt
or
mov
das
cmp
pop
dec
jne
add
je
mov
outsl
ja
scas
mov
xchg
push
pushf
cmpsb
pop
add
cmp
pop
or
dec
fs
stos
roll
nop
fstpl
jge
push
loope
outsb
aas
mov
lcall
icebp
cmp
ds
xchg
mov
stos
inc
adc
das
sub
out
mov
in
shll
rorb
aad
repnz
arpl
xchg
dec
push
pop
out
sbb
dec
repnz
mov
imul
add
aad
call
cmp
hlt
lret
lock
ja
repz
xor
push
pop
pop
push
js
mov
mov
ja
stos
sub
sar
in
scas
jb
mov
loop
adc
xor
mov
mov
test
or
push
or
jl
mov
cwtl
mov
mov
cltd
call
pusha
or
sub
das
imul
or
push
pop
xchg
jbe
enter
sbb
inc
and
bound
out
aas
xorl
push
xor
inc
stos
add
iret
add
push
dec
inc
ficomps
jge
pop
daa
stos
mov
sub
and
xchg
jmp
sub
jnp
push
pusha
xorb
rorl
jb
inc
bound
mov
aaa
inc
sbb
lods
icebp
jb
jge
push
xor
push
ja
test
pop
mov
fucomp
int
mov
sarb
lods
jb
cmpsb
std
fdivr
aam
push
inc
aas
aaa
jno
movsl
repz
sbb
sbb
or
dec
ja
dec
pushf
dec
push
dec
das
test
push
jl
xor
push
jne
sub
pop
lret
mov
dec
out
mov
lret
ficoml
inc
sbb
movsl
sbb
aam
pop
dec
ljmp
mov
push
dec
mov
bound
out
fs
outsl
pop
scas
mov
or
ret
mov
repnz
lcall
pop
pop
cmp
dec
mov
cmp
das
and
andb
cli
cmp
push
sarl
lcall
hlt
dec
dec
jnp
aad
imul
loop
sbb
stos
inc
mov
cmp
and
insl
mov
mov
xor
xchg
xor
and
xlat
jg
inc
add
fisttps
cmc
aaa
loopne
mul
movsl
jae
sbb
mov
mov
sbb
sarl
test
sub
mov
addr16
rcl
xlat
call
cmpb
in
adc
imul
xchg
add
jae
add
lahf
push
and
push
push
jne
fistpl
xor
test
mov
iret
cmp
push
sbb
inc
jb
in
sbb
pop
adc
mov
sti
add
addl
iret
and
repnz
cmp
push
mov
mov
iret
sbb
jno
xor
push
push
add
inc
cld
test
cmp
ds
cwtl
cmp
cld
bound
mov
je
std
stos
mov
mov
orb
cmp
jl
daa
xchg
cmp
push
adc
gs
xor
xchg
pop
and
cwtl
cmp
aam
adc
push
loop
ss
jnp
xor
pop
cmp
js
pop
jno
loopne
dec
sbb
sub
test
or
jp
lret
adc
push
cmpsl
icebp
and
xor
das
mov
cmpsb
sub
call
mov
sub
sbb
fcoml
into
and
cmpsb
cmc
jb
nop
cmp
hlt
js
xchg
addb
mov
push
xor
stc
loopne
lods
cmp
adc
push
test
lods
mov
mov
test
push
cld
pusha
fildll
test
lock
cmp
pushf
popf
jno
psadbw
fistps
add
cmp
shrb
js
mov
jecxz
and
or
inc
int
add
fnstcw
ret
mov
fwait
sub
fcomi
xchg
sarl
xchg
test
push
dec
rcll
fists
adc
lock
ret
rorb
dec
sub
dec
pop
out
inc
adc
inc
int
fildll
xor
inc
push
shll
ja
scas
pop
inc
push
xchg
pushf
mov
inc
mov
inc
adc
push
xlat
cmp
sbb
test
das
mov
or
pushf
jno
and
mov
sahf
sbb
add
or
dec
inc
inc
push
cli
add
push
add
minps
sbb
adc
jg
cmc
jecxz
mov
mov
add
dec
adc
or
lds
ficoml
cmc
sbb
or
mov
push
push
js
into
jp
clc
clc
add
cli
xchg
cmp
pop
shrb
pop
and
sbb
mov
mov
ja
xchg
cld
fnstsw
pop
mov
cs
dec
adc
daa
mov
sub
inc
dec
hlt
lods
jns
dec
hlt
lea
rcl
imul
xchg
imul
rcl
dec
repz
aad
mov
sbb
inc
push
enter
or
out
loope
xchg
and
and
sub
sub
cwtl
insl
xchg
xor
mov
lock
push
repz
out
jl
mov
dec
lret
pop
lods
sbb
push
ficomps
das
xor
bound
cmpl
lea
adcl
orl
xchg
and
cmp
mov
xchg
sbb
stos
data16
add
test
xchg
sbb
iret
xchg
in
jb
add
sub
in
repnz
pop
cmp
stos
shrl
int3
adc
adc
jo
aas
xor
insl
js
xor
loope
push
pop
aas
inc
or
inc
jecxz
mov
sbb
xchg
imul
pop
jno
stos
cmp
push
mov
stc
in
in
addb
dec
rcrl
sub
ret
fsubl
ss
sbbl
outsb
adc
or
inc
add
cmpsb
mov
iret
adc
mov
test
imul
lret
mov
movsl
xor
out
pushf
mov
fdivrs
or
xor
adc
nop
add
imul
sub
aad
xor
in
inc
add
adc
testl
in
jmp
ffree
mov
sbb
jge
mov
test
lea
xor
fcoms
dec
adc
or
push
push
and
cmp
les
dec
push
cmpsl
out
pop
inc
jnp,pt
jne
cmpsb
out
mov
cmpsb
insb
lods
lea
js
ljmp
nop
stos
push
pop
pushf
aas
pop
sti
roll
subl
loopne
push
loop
leave
fisubl
clc
ss
inc
call
dec
mov
inc
push
addr16
adc
fnstsw
pop
pop
sub
jbe
jbe
lret
and
jne
dec
and
push
pop
sbb
push
out
inc
sbbl
leave
mov
add
adc
push
adc
xchg
lods
mov
aaa
jmp
add
push
les
push
fwait
adc
pop
adc
ja
icebp
and
xchg
pop
sbb
js
iret
mov
xor
jmp
cmp
mov
push
lds
adc
rcrl
lcall
pop
clc
pop
icebp
xor
jle
ss
dec
sahf
dec
mov
push
mov
sub
cmpsb
mov
in
mov
pop
inc
and
in
pop
repnz
fbstp
movsb
mov
and
add
add
sub
cmp
sub
jno
inc
decb
cli
sbb
mov
cmpsb
mov
ret
pusha
or
pushl
mov
inc
cmpsl
xchg
div
negb
mov
cmp
lcall
sbb
test
sbb
xor
mov
jnp
clc
les
mov
xor
mov
pop
mulb
mov
vmovddup
jl
jl
dec
and
push
cmp
add
or
insl
xor
jmp
add
cmpb
mov
fdivs
fcompl
push
add
insb
leave
stos
cwtl
mov
std
mov
rcrb
cs
lret
mov
adc
shll
xchg
imul
mov
xchg
ret
add
ja
rolb
rcrb
sub
or
and
pop
addr16
mov
loope
push
dec
sub
ljmp
sbb
sbb
movsb
push
iret
dec
je
lds
dec
jmp
or
pop
mov
sub
push
xor
mov
jae
mov
andl
xor
hlt
mov
icebp
js
mov
cmp
jge
or
repz
push
jne
int
pusha
jg
jg
in
clc
lea
out
ficoms
push
mov
inc
in
push
dec
ds
mov
mov
push
in
cmp
or
sub
sub
fistps
mov
mov
shrb
jbe
inc
shlb
sbb
leave
inc
dec
add
out
jne
jo
sbb
sub
jno
cltd
cmpl
test
add
repz
jle
mov
pop
xchg
jnp
mov
mov
sbb
mov
xchg
or
cmp
xchg
lret
fistpll
xchg
insb
shll
jle
mov
scas
dec
lods
mov
cmpsb
pop
xor
ljmp
je
das
enter
xor
jg
out
pop
fcomi
repnz
scas
outsl
jmp
sbb
pop
dec
mov
lahf
pop
or
lea
loope
xor
xchg
out
loopne
pushl
test
push
xchg
int3
aam
push
stos
mov
or
or
sub
jge
je
cmpsb
aaa
or
loope
lcall
cmp
push
fistl
xlat
int3
pop
push
adc
push
adc
mov
ret
call
cmp
or
pop
mov
pusha
xor
dec
push
scas
push
icebp
out
faddl
jge
inc
std
push
cmp
or
test
xor
outsb
adc
and
frstor
sub
insb
or
ds
xchg
or
dec
push
and
pop
or
adc
insb
mov
push
enter
sub
xlat
mov
fs
in
movsl
and
push
pop
jae
mov
scas
out
rcll
lods
jp
data16
sarb
loope
or
fs
push
dec
xchg
ret
xchg
outsl
int
sub
mov
ljmp
loope
pop
stos
fstp
inc
das
pop
out
popf
loop
dec
xchg
movsb
cmp
sbb
sbb
sahf
arpl
mov
sub
sub
xchg
mov
fscale
or
sti
cmp
in
mov
nop
sbb
mov
jo
addr16
mov
gs
ror
sub
jecxz
jp
filds
jp
mov
add
and
pushf
sbb
test
xchg
jp
outsl
in
fdiv
sbb
xchg
stc
xchg
addl
jg
xchg
xor
inc
pop
sub
dec
jo
pop
fs
cmp
lea
iret
add
mov
cs
add
nop
sub
cmp
jnp
dec
inc
pop
lahf
jb
cmp
test
repnz
hlt
sub
aam
movntq
cmc
rorl
pop
pop
and
sub
adc
sbb
dec
repz
fnstcw
mov
fisubrs
loop
mov
mov
xchg
mov
xchg
aas
mov
decl
sahf
ret
pop
jbe
dec
cmpsl
jnp
lcall
test
xchg
sub
inc
mov
mov
sub
push
in
jne
jge
add
xchg
push
jae
add
in
mov
or
sub
jg
lea
jo
std
adc
mov
add
dec
loope
ficoms
sub
call
frstor
mov
sbb
fsts
les
and
jp
inc
cld
ret
in
sarb
mov
add
in
sub
in
xchg
mov
dec
fst
pop
xchg
cmp
subb
popa
cmp
push
dec
mov
dec
movsl
jbe
mov
das
sub
js
faddl
sbb
push
sub
notl
lds
nop
jmp
int
testl
mov
aaa
xor
out
dec
mov
in
leave
daa
movsb
sbb
adc
xorl
mov
and
mov
in
xchg
push
ds
jno
arpl
leave
jmp
mov
xchg
push
mov
mov
and
int3
mov
sub
arpl
ljmp
adc
fsubrs
xchg
or
mov
fs
idivl
mov
push
std
out
pop
cmc
mov
jo
jae
fdivs
inc
sbb
int3
xorps
pop
cwtl
sqrtps
add
pop
mov
insl
push
cli
pop
inc
out
rcr
xchg
mov
roll
jae
dec
jp
xor
sub
loop
mov
fbld
xorb
mov
xor
mov
dec
pop
inc
push
push
mov
or
les
dec
hlt
cli
clc
lock
adc
jae
pushf
mov
addr16
inc
adc
pusha
insb
lahf
into
sub
aaa
xor
xor
or
cmp
mov
mov
scas
aaa
nop
sub
adc
sti
fwait
mov
mov
push
add
iret
test
enter
pusha
ficoml
add
out
nop
add
mov
movsl
lret
pop
pop
scas
cltd
out
dec
movsb
xor
jmp
and
das
lods
cmp
push
shlb
fdivrp
mov
aas
ror
sbb
mov
stos
push
sbb
push
test
mov
mov
dec
test
nop
mov
movsb
jle
sbb
sbb
sbb
jbe
ret
pop
aad
mov
loope
jo
ss
push
add
into
add
imul
leave
xchg
push
inc
jp
cs
xchg
add
sbb
rclb
lret
sbb
popf
inc
aam
rcll
xchg
mov
jae
dec
negl
mov
or
sbb
out
fbld
xchg
dec
dec
push
mov
int3
sub
and
mov
pop
xchg
dec
lcall
scas
aad
out
sbb
mov
gs
xorb
jae
insb
add
arpl
ljmp
inc
cld
add
add
aam
jecxz
scas
inc
adc
and
mov
push
cwtl
mov
fs
or
dec
idivl
popf
or
dec
adc
arpl
hlt
out
movsl
dec
mov
stos
mov
pop
popf
inc
xchg
int
pop
push
faddl
fildl
mov
mov
cmpsl
inc
xchg
push
mov
loop
cmp
popa
inc
mov
fwait
mov
icebp
ja
int3
jne
mov
fildl
rcrl
sbb
out
jl
xchg
mov
lea
mov
das
sbb
das
adc
cmp
adc
xchg
sub
es
cmpsl
xchg
xor
jbe
inc
pop
sub
dec
call
mov
jge
mov
movsl
cwtl
fstpt
out
int3
sarb
xor
add
add
scas
imul
mov
rorb
push
ja
dec
inc
fsubr
shrb
mov
into
push
add
lock
daa
movsb
repz
sbb
popf
push
jae
sbb
lock
leave
inc
sbb
dec
mov
or
mov
push
addr16
in
cmp
jo
daa
xlat
fisubs
jl
sbb
xor
xchg
pop
dec
xchg
pop
sbb
les
sbb
or
je
jne
inc
hlt
bound
lods
imulb
std
mov
leave
jge
pushl
or
push
and
jecxz
sbb
mov
push
pop
out
ret
pop
std
cpuid
loopne
xorl
adc
in
dec
inc
mov
inc
sub
push
in
lret
adc
xchg
rcll
mov
test
xor
cld
jo
mov
push
push
aaa
arpl
enter
hlt
pop
scas
jno
sti
into
mov
inc
push
cmp
fwait
pop
and
sbb
pop
sbb
andl
mov
fiadds
sbb
ret
mov
adc
js
mov
inc
jb
jb
stos
shrl
pop
popf
add
fwait
add
psubsw
jg
cmpsl
stc
fsts
in
sbb
pop
andb
or
stos
fnstsw
cmp
aaa
mov
jmp
les
cmp
lods
xor
adc
loopne
loope
mov
fcoms
pop
test
test
stos
mov
jno
xchg
mov
mov
rorl
int3
jg
or
xchg
jle
mov
js
lea
aad
in
lds
sbb
pushf
mov
andl
xchg
sbb
pop
lods
and
xchg
jb
jae
mov
or
sub
inc
mov
inc
fwait
mov
sub
cmovle
jo
aam
jmp
outsb
cmp
mov
xor
sub
clc
insl
mov
dec
aaa
es
xor
inc
sbb
lea
dec
jbe
scas
out
les
and
sahf
cmp
sysexit
push
pop
mov
mov
imul
arpl
and
jae
cmp
fwait
lds
xor
push
xchg
fidivl
fmul
mov
fisubrl
or
int
mov
xchg
sahf
ret
pop
fisubl
rcrb
mov
lret
adcl
lock
add
xor
addr16
xor
mov
das
fstl
sub
xchg
mov
movsb
lea
adc
mov
syscall
ljmp
push
inc
and
mov
je
inc
in
xor
push
mov
flds
daa
mov
icebp
shll
dec
daa
adc
push
dec
adc
mov
cli
aas
adc
cld
sbb
inc
out
add
fnstsw
sbb
outsb
arpl
cwtl
adcl
sbb
aam
jle
jge
push
xchg
push
xor
pushf
test
pushf
clc
in
aas
jno
outsb
push
subl
dec
sub
push
add
add
dec
cmp
pop
out
and
mov
test
pop
inc
cli
pop
or
and
in
sbb
mov
jle
sbb
out
ds
filds
and
pop
pop
fstl
mov
pop
add
pop
push
sub
fs
push
jae
pop
lret
clc
xchg
or
ds
stos
les
dec
xlat
mov
push
enter
lods
add
pusha
jb
or
mov
outsb
cld
lret
mov
adc
jae
stos
pop
cwtl
pop
pop
mov
cld
fwait
or
lcall
in
mov
xor
pop
insb
adc
lret
arpl
mov
cmpsl
aam
stos
ds
in
scas
mov
inc
adc
jecxz
pop
outsl
into
mov
imul
dec
enter
lea
cmp
push
xor
jmp
cwtl
in
cmpsb
aam
add
pop
test
mov
je
cmpl
xor
mov
pop
push
push
ja
scas
bound
cs
xor
gs
fstps
push
sbb
push
ljmp
jno
repnz
dec
mov
stos
mov
mov
lods
xorb
es
push
ljmp
push
push
jnp
mov
push
lahf
icebp
push
jo
sti
or
xor
push
fwait
ret
std
xchg
testl
sub
sub
sahf
adc
aam
adcl
iret
and
sbb
mov
and
jmp
pop
mov
sub
mov
xor
das
add
int
jns
add
lahf
shrl
cmp
rclb
and
aad
jns
sbb
push
icebp
and
jge
pop
mov
nop
out
sbb
cmp
mov
xchg
xchg
sbb
jg
adc
dec
jecxz
xchg
in
pushf
cmp
imul
and
fdivl
sbb
lds
inc
int3
cmp
adc
stos
in
out
mov
jae
mov
lcall
js
or
push
in
or
ljmp
scas
pop
mov
add
gs
dec
sbb
test
cmp
push
lret
fidivs
or
sahf
mov
sub
andb
xor
inc
xchg
loopne
mov
cmp
dec
in
fidivrl
dec
mov
adc
mov
lock
or
mov
pop
ds
sub
xor
arpl
rcll
jae
cmpsl
jmp
sbb
fnstenv
xlat
pop
jecxz
outsl
add
inc
call
pushf
inc
or
mov
shrl
inc
lods
pop
push
xor
push
lock
lcall
int
addr16
stos
push
outsb
lea
or
fisubrl
mov
in
mov
js
ret
inc
add
and
hlt
imul
pop
push
fidivl
or
lds
sbb
test
jnp
sbb
jmp
and
pop
or
or
pop
call
or
push
xchg
cmp
xor
stos
cmp
insl
add
mov
sbb
test
jle
das
mov
jecxz
std
dec
dec
mov
loopne
inc
sti
cmp
in
jmp
leave
mov
ret
add
in
mov
int
pop
xchg
ret
jae
cmp
mov
pushw
loopne
push
repnz
in
je
jle
cld
popf
ds
jb
aad
cmp
push
mov
jp
inc
jg
leave
or
mov
out
dec
test
or
or
inc
inc
ss
mov
cmp
mov
data16
mov
cmp
jb
inc
push
mov
loopne
adcl
mov
cli
and
je
movsb
mov
stos
outsb
idiv
sub
stos
fistpll
fimull
ss
mov
pop
inc
imul
lcall
lahf
adc
fwait
jp
and
push
mov
out
scas
arpl
in
iret
incb
push
shll
jge
iret
movsb
fcmovnbe
out
push
sub
add
xchg
mov
ss
outsb
scas
push
inc
or
lods
and
es
js
aas
and
imull
mov
cmpsl
mov
ffreep
cltd
sbb
mov
push
push
xchg
aam
mov
jg
xorl
sub
cmp
shlb
movsb
and
test
repz
arpl
mov
stc
inc
pop
subl
pop
adc
xchg
dec
clc
out
jnp
outsl
sbbb
pop
mov
jno
shl
or
mov
fdivr
inc
xor
rorb
sbb
add
mov
sub
ret
ja
shll
vmovntdq
mov
in
mov
lahf
std
js
fwait
adc
pushf
push
pop
scas
adc
push
iret
test
in
xor
add
mov
repz
mov
sbb
aad
xor
inc
push
cs
lock
neg
xor
ret
mov
cmpsl
cmp
insl
jne
push
out
insl
sub
push
adcb
sub
mov
mov
into
repnz
jp
sbb
fsubp
xchg
stc
mov
pop
inc
push
imul
sbb
add
mov
dec
cmp
lods
shll
and
les
pop
mov
imul
xor
ljmp
jecxz
pusha
dec
jg
cli
lea
mov
sbb
cltd
mov
loopne
int3
cltd
push
or
in
pop
pusha
or
xor
subl
mov
mov
xchg
das
rorl
mov
mov
pop
mov
fwait
das
dec
int3
out
test
pop
repz
int
sub
imul
jle
test
mov
xor
mov
cmpsb
xor
cmpsl
pop
pop
movsb
loope
out
mov
loop
mov
repnz
lcall
outsb
xchg
sbb
imul
punpckhbw
loope
mov
and
fldt
xor
pop
cmpsl
in
jmp
sub
outsb
imul
loope
ss
adcl
push
or
add
nop
int
cld
mov
push
xchg
loopne
sbbl
fincstp
ds
jecxz
mov
push
loop
aam
movsb
and
in
imul
jmp
pushf
add
xchg
or
in
pusha
inc
jle
dec
or
mov
fidivrs
cmpsl
imul
js
mov
xor
adc
int
leave
mov
inc
push
sar
shl
mov
ret
pop
cld
xor
sti
push
or
cmp
inc
lods
sub
rolb
cmc
jg
call
xor
or
cmpsb
bnd
scas
lock
insb
ret
lock
dec
cmp
jge
sbb
pop
stos
xchg
loopne
sub
std
fidivs
sahf
mov
sarb
aaa
cwtl
inc
adc
sbb
int3
inc
scas
popa
sub
divb
xchg
jle
and
jns
and
inc
test
dec
push
add
dec
loope
mov
pusha
jmp
inc
ljmp
jecxz
andl
cmp
cwtl
stos
push
in
sbb
jl
leave
shrl
insl
adc
cltd
mov
mov
or
or
mov
dec
outsb
mov
cmp
aaa
jle
sub
outsl
cmp
xorb
and
lods
jle
roll
dec
bnd
std
fiadds
iret
ret
in
or
les
scas
inc
aad
inc
jno
ljmp
cmpsl
pop
and
jl
fdivs
mov
nop
dec
inc
push
sbbb
fsubr
rorl
inc
into
loopne
test
insb
xchg
jmp
mov
decl
xchg
push
adc
or
mov
je
inc
shlb
jmp
jnp
pop
inc
inc
xchg
lods
mov
dec
loope
sub
lock
jl
or
test
lods
xchg
push
fucomi
xor
push
gs
paddusw
push
xchg
cmpsl
adc
push
push
sbb
adc
popf
sub
out
int3
xor
push
adc
xchg
sub
xchg
pop
dec
test
fimuls
pushf
gs
sbb
dec
sub
fiadds
jg
or
fbstp
xchg
dec
push
ljmp
mov
test
into
xor
dec
pushf
xchg
notb
out
js
scas
xchg
arpl
or
pop
sub
into
loope
fs
xor
stos
sbb
ror
push
mov
jne
sub
xchg
incl
cli
pop
js
or
cmp
pop
repnz
push
icebp
les
or
add
sbbb
or
lret
xchg
cmc
arpl
sbb
xchg
gs
mov
jo
or
jl
pushf
jbe
sbb
in
sub
daa
pushf
dec
pop
test
js
cli
jb
stc
push
das
stos
cmp
xchg
or
adc
popf
pop
xchg
dec
cmc
dec
hlt
daa
dec
add
scas
out
or
ficoml
sub
xchg
pop
movsl
mov
adc
dec
pop
aam
pushf
adc
bound
push
jne
sub
insb
inc
add
xor
mov
jno
pcmpeqb
cmp
xchg
pop
fildll
ds
push
jo
cmpsb
andb
jl
xor
sub
sub
jge
cld
insb
repnz
je
push
jbe
pop
push
or
add
movsl
push
cli
ds
dec
loopne
jns
cs
ret
outsb
loopne
push
mov
loope
std
imull
leave
je
push
aad
hlt
fldenv
and
fwait
notb
mov
js
cmpsl
adc
push
mov
scas
addr16
mov
sub
mov
pop
fmuls
loope
sbb
in
fiadds
ja
andb
lods
add
push
xchg
dec
repnz
mov
inc
pusha
into
sbb
pop
negb
lahf
jns
push
repnz
xor
push
xchg
inc
push
cli
mov
fidivrl
mov
sbb
nop
pop
in
inc
jns
xlat
addr16
xchg
test
adc
and
dec
dec
nop
pop
jmp
or
int
and
lods
icebp
and
clc
cmpsb
jnp
dec
jno
fdivrl
loop
inc
arpl
xor
mov
xchg
inc
xor
lock
xchg
mov
std
mov
jb
jle
xchg
sahf
imul
stc
cmp
bound
inc
sbb
xor
mov
fisubrs
inc
ds
jb
xchg
push
pop
scas
inc
fbld
hlt
scas
dec
mov
cmp
pop
lock
int3
inc
cmp
inc
bound
sub
mov
out
shrb
push
fcomps
jbe
sbb
push
adc
push
xchg
int
sarl
dec
add
dec
xor
icebp
dec
lcall
sub
mov
xor
xchg
cli
fnstcw
ds
stc
jge
mov
push
xor
push
rcll
lcall
and
pop
sbb
cmc
jle
fildll
mov
jmp
out
pop
inc
and
cmpsl
xor
in
xchg
xchg
aaa
out
mov
or
test
jbe
mov
xchg
mov
cmp
or
fidivs
sub
push
sub
xchg
pop
jne
jecxz
xchg
mov
aaa
sbb
mov
jmp
jecxz
aaa
push
sbb
cli
mov
movsb
push
add
arpl
jle
dec
je
push
mov
setne
popa
cmp
or
mov
outsl
cmp
pop
cld
jg
fucomi
aad
repnz
mov
out
iret
push
mov
arpl
push
cmp
dec
mov
lods
rcr
loop
mov
sti
lods
mov
cld
mov
inc
jae
jp
adc
mov
cmp
icebp
jl
push
cmp
stos
jnp
sbb
repnz
jne
les
out
sbb
inc
mov
cli
inc
mov
enter
insb
das
movsl
je
divb
sbb
lock
mov
adc
jl
jns
aam
cli
es
out
cltd
lods
je
testl
nop
sbb
push
xchg
fnsave
xlat
fs
xor
pop
dec
aaa
fwait
repz
xor
data16
cli
xchg
mov
sbb
mov
adc
lds
pop
repz
lret
xor
lret
loope
sbb
mov
inc
fwait
add
and
lock
pop
std
es
hlt
imul
scas
stos
dec
aam
adc
in
xchg
jmp
xor
ss
push
add
sub
addb
xchg
ja
call
cli
xlat
cltd
fsubs
stos
and
imul
mov
call
dec
xor
movsl
mull
popf
out
pop
xchg
movsb
clc
ja
js
test
scas
cmp
pop
ret
daa
scas
gs
jo
call
pop
xchg
fiaddl
pop
mov
push
sbb
sbb
jmp
cmp
stc
lahf
inc
adc
sbb
and
das
scas
sti
sbbb
dec
movsb
sbb
or
js
mov
mov
out
in
lds
iret
pushf
stc
dec
and
add
xchg
std
mov
sub
les
out
sub
cltd
adcl
mov
jno
fnstenv
xor
mov
inc
ss
add
jmp
inc
mov
insl
cmp
js
jecxz
push
inc
add
xchg
data16
insl
or
cltd
movsl
xchg
xchg
test
inc
in
aad
and
and
lcall
mov
lea
or
mov
jno
pop
adc
xchg
fwait
adc
icebp
xchg
push
xchg
pop
cmc
loop
andb
cmc
mov
xchg
xor
mov
jno
stos
mov
icebp
data16
add
fcompl
mov
jnp
or
xchg
or
mov
fistpll
lock
test
hlt
sarl
push
mov
inc
xchg
inc
add
data16
out
mov
xchg
out
outsl
cmp
rolb
ret
icebp
mov
aam
rcrb
in
sub
jne
and
int3
mov
sbb
cmp
jne
js
test
push
or
cmp
fmuls
int
js
lods
xchg
scas
fs
in
add
scas
push
mov
aaa
sub
xchg
mov
in
mov
aaa
pop
xor
in
fadds
fwait
jno
loopne
std
xor
sti
jge
cmpl
in
push
js
neg
or
jae
jmp
pop
test
sbb
es
popf
xchg
mov
out
or
cmp
sub
sbb
dec
jnp
xor
inc
lret
push
dec
push
fwait
xor
enter
into
cmp
cmp
adc
lea
mov
jb
lea
fstpl
mov
xor
push
arpl
pop
jbe
sub
sahf
rolb
push
sub
in
jns
cmc
cltd
or
hlt
mov
loope
popa
xor
cmpsl
jae
mov
enter
stos
inc
push
sub
ljmp
mov
in
adcl
and
xor
inc
mov
loope
sbb
lods
fcoml
in
pop
sub
xor
dec
xor
mov
ret
out
sahf
arpl
sub
pop
dec
sub
dec
ret
dec
xchg
push
les
sbb
jno
movsl
lds
cmpsb
xor
lret
push
pop
cmpsl
adc
adc
push
push
jb
jae
test
in
cli
dec
pop
leave
fsubrl
and
inc
mov
pop
or
jp
dec
sbb
mov
push
mov
into
jbe
aam
mov
inc
inc
dec
push
cmc
je
outsl
mov
imulb
imul
sbb
setb
fdiv
repz
into
lcall
sub
cmp
jmp
xor
mov
bound
adc
dec
cmpsb
lods
pop
repnz
jmp
fwait
sub
mov
or
jnp
pop
pop
stos
hlt
jp
jp
arpl
mov
lds
bound
inc
out
push
pop
jb
mov
mov
adc
xchg
xor
gs
dec
mov
into
stos
mov
mov
sub
push
in
pop
cmpsl
cs
add
faddl
push
cmp
xchg
mov
mov
jl
in
arpl
shlb
rorl
push
loop
push
cli
and
ja
pushl
dec
jbe
mov
scas
outsl
int3
push
dec
mov
adc
sbb
jo
xchg
and
xcrypt-cfb
cmpsl
daa
testl
xor
lock
lret
cld
or
movsb
jle
outsb
mov
and
mov
adc
fisttpll
mov
cmp
dec
loope
mov
rep
or
negb
sbb
bound
mov
loope
add
test
jno
push
popa
hlt
test
ret
out
lods
or
cmp
or
mov
sub
jmp
push
in
jnp
add
fnstenv
mov
and
shlb
lcall
mov
sti
adc
push
decb
xor
add
jl
int3
in
dec
test
faddl
cmp
ja
inc
sbb
xchg
cmc
mov
jmp
ljmp
add
add
inc
lea
sub
push
xor
ds
shll
or
orps
out
sbb
pushf
push
mov
out
push
in
push
pop
lock
cmp
mov
mov
push
into
mov
lods
scas
enter
icebp
aaa
sbb
iret
sub
jmp
popf
je
sub
dec
xorb
adc
lea
shll
push
aam
fwait
pop
test
jno
lock
pop
dec
add
push
jbe
int
popf
jmp
rcrb
pushf
movsb
mov
aam
jge
fmul
pushf
ret
es
xchg
daa
add
mov
mov
jb
mov
mov
push
js
push
std
xor
or
aaa
nop
push
xor
psubw
outsb
punpckhbw
shrl
test
lahf
xchg
pop
push
das
push
lahf
cs
imul
inc
cmp
xchg
mov
sti
je
dec
lcall
jg
sub
jbe
and
jle
mov
lods
mov
rorl
jecxz
xlat
xor
scas
sub
cmp
pop
out
aam
mov
pop
int3
inc
test
daa
push
bound
xor
ret
push
inc
pop
add
fiadds
rcll
hlt
mov
lcall
add
repz
arpl
hlt
pushf
add
sub
mov
sbbb
scas
pop
sub
mov
and
call
adc
cld
cmp
add
fldcw
movsb
adc
scas
xor
mov
cmpsb
mov
ja
in
fsubrs
stos
mov
push
test
jbe
jmp
jge
mov
loop
testb
mov
rcrl
jns
jb
scas
ret
xor
mov
ret
out
sbb
dec
xchg
or
test
enter
jl
jo
loop
dec
push
jne
pusha
ds
sbb
sub
aas
cli
or
mov
and
movsb
adc
aaa
out
xchg
xchg
mov
dec
push
push
mov
aad
mov
shr
sbb
push
and
xor
fnstsw
pusha
testb
sahf
xchg
adc
cmpsb
imul
insl
and
stos
inc
mov
dec
movl
cmc
mov
dec
loop
nop
ret
stc
out
inc
inc
jp
adc
lret
jl
popa
and
inc
out
repz
inc
push
out
outsb
pop
sbb
inc
sub
fdivrs
loope
push
test
test
out
lods
push
loop
ret
sub
jnp
fwait
xchg
sub
push
add
and
in
aad
fdivl
jno
add
jne
pop
pavgw
loopne
outsl
xchg
and
and
add
rcrb
arpl
fcomi
outsl
notb
jo
push
cmp
push
mov
adc
or
nop
cmp
shll
add
push
mov
test
gs
popa
sbb
bound
inc
or
mov
or
mov
add
and
pop
es
cmp
lahf
fidivrs
push
fldenv
int
xchg
push
das
icebp
pop
repnz
add
loop
and
ret
lock
push
lods
not
addr16
sbb
out
andb
aas
pushf
ss
jb
mov
mov
fsubl
bound
jl
mov
call
or
lods
pop
ja
inc
dec
inc
cmpsb
dec
je
scas
repnz
sahf
lds
xchg
lock
fisubrl
nop
bound
lret
sarb
add
aaa
stos
cld
xor
popf
lock
xor
andb
sbb
test
cmp
loop
adc
add
adc
rcr
dec
lret
pop
cld
mov
jmp
cli
loop
in
jmp
xchg
push
jns
arpl
scas
outsl
jecxz
popa
mov
jg
bound
add
and
xchg
out
das
lcall
dec
dec
pop
xor
ret
mov
adcb
inc
sbb
push
xchg
outsl
cld
out
push
pop
incb
inc
mov
shr
fistl
xor
addr16
roll
push
or
inc
sub
xchg
sub
testb
xchg
xor
adc
pop
push
mov
andl
fisttpl
xor
lods
and
std
mov
ret
or
scas
enter
fptan
and
jmp
sbb
mov
int
icebp
es
iret
inc
repz
jne
add
mov
fdivs
mov
dec
add
call
sti
lcall
xchg
mov
mov
cmp
push
pop
sub
or
inc
adc
dec
pushf
add
call
pop
aad
mov
sub
mov
test
mov
dec
loopne
xchg
je
jo
cmc
mov
scas
leave
cmp
out
sub
cli
sbb
pop
cmp
popl
dec
sub
xor
es
enter
scas
xor
mov
stc
cli
mov
js
and
cmp
lds
add
jnp
xlat
and
ret
leave
adc
xor
jl
int
push
sub
pop
hlt
fwait
mov
ret
lods
pop
sub
pop
xchg
push
pushf
push
sarl
xchg
les
sbb
and
inc
loop
inc
jmp
shrl
jo
aas
dec
lcall
int
lea
sahf
lahf
fnstsw
dec
subl
pop
sbb
imul
shlb
cmpsb
hlt
ja
mov
or
xchg
call
mov
mov
jbe
imul
inc
je
lahf
sub
pop
pop
scas
mov
sarb
out
xchg
mov
lret
push
jns
and
push
outsb
shlb
in
in
enter
scas
jge
cmp
inc
push
adc
fcom
cmpl
aaa
repnz
mov
push
add
imul
shl
and
add
js,pn
inc
and
and
pop
ret
cltd
imul
pop
inc
mov
sub
sahf
int3
lods
xchg
adc
leave
sbb
es
in
mov
sarl
fs
mov
sub
jo
or
out
fidivrl
xor
mov
jge
out
mov
stos
mov
mov
addr16
cltd
shll
sub
outsb
xchg
inc
ror
sahf
cmp
xchg
dec
jne
lret
pop
lret
loopne
arpl
jo
xchg
jne
xor
mov
int3
repz
cmpsb
insl
pop
int3
sbb
mov
jne
lds
xlat
cmpsb
mov
cmc
enter
sbb
out
mov
je
fdivrs
insl
int
fisttpl
mov
leave
add
mov
push
lahf
mov
scas
mov
push
add
mov
cli
subb
jecxz
cmp
ja
shll
lcall
pop
les
adc
outsl
or
jmp
andl
push
pop
popf
iret
add
mov
lods
iret
sub
dec
adc
pminsw
push
inc
mov
dec
cmpsl
xchg
fcoms
sahf
inc
cmp
std
adc
imul
inc
int3
fstps
mov
sbb
das
cli
scas
dec
ds
loopne
sub
adc
push
mov
jge
pop
add
dec
test
aam
sub
popf
mov
mov
scas
jbe
mov
jge
mov
push
int
scas
loope
mov
loop
test
xchg
lods
mov
inc
mov
out
jge
cmpsl
bound
mov
sahf
mov
mov
lret
xorb
and
adc
std
xchg
dec
add
or
test
xor
dec
jecxz
mul
outsl
xlat
addl
dec
and
push
shll
jle
call
pop
int3
dec
mov
ljmp
sbbl
movsl
xchg
inc
lahf
push
mov
mov
ljmp
lcall
mov
out
sub
sahf
pop
popf
inc
push
fstpl
popf
xchg
jge
adc
xchg
mov
and
add
dec
or
cli
ret
push
das
mov
into
push
loopne
mov
enter
data16
sub
mov
cltd
pop
lods
daa
movsb
mov
and
cmp
lahf
mov
jmp
movb
mov
xor
int
add
outsb
dec
xchg
sbb
xor
scas
test
sub
imul
sbb
in
add
mov
lods
or
dec
into
inc
icebp
int3
out
pop
push
cmp
xor
push
gs
xor
xor
add
lods
push
jp
mov
sub
mov
dec
pushf
jae
stos
sub
pop
jbe
mov
pop
push
sbb
arpl
push
mov
addb
adc
fisubs
jbe
jns
mov
xor
sarb
in
cs
test
cld
aaa
lea
psrlw
push
lahf
addr16
push
and
rcrb
fisubl
mov
jecxz
std
adc
adc
ljmp
icebp
test
inc
jb
add
push
lret
sub
shll
out
push
ljmp
js
imul
jb
sahf
lcall
xor
xchg
pop
ljmp
movsl
dec
iret
push
adc
jge
jecxz
in
jmp
data16
pushf
movsb
lahf
adc
inc
inc
jae
or
sti
push
movsb
iret
mov
mov
fs
imul
imul
pop
in
jbe
popa
rcr
enter
cs
cmpsl
push
incb
and
add
cmpsl
lds
mov
bound
dec
imul
int3
pushf
adcb
arpl
xor
out
je
cmc
push
sahf
mov
mov
jl
jns
fdivp
mov
imul
out
push
xorb
dec
sub
cmp
fbstp
mov
in
cmovg
pop
jge
insl
pushf
and
imul
dec
sti
in
gs
push
sub
cld
pop
enter
jnp
pop
mov
repz
sub
repz
or
mov
pusha
addr16
gs
xor
jnp
cmpsb
ret
inc
xor
lcall
xlat
out
mul
inc
in
mov
mov
sub
sbb
xlat
gs
icebp
inc
inc
sarl
das
dec
pushf
and
insl
mov
mov
mov
inc
out
mov
sbb
adc
mov
hlt
dec
loop
adc
mov
or
dec
inc
enter
jnp
lahf
pop
daa
mov
lret
xchg
mov
cwtl
sbbb
out
inc
mov
mov
cltd
and
loopne
clc
cld
repnz
das
inc
cmpl
mov
clc
mov
cmp
ljmp
fcmovnbe
xor
mov
mov
popa
shll
mov
mov
mov
sahf
jge
push
or
subb
xor
cmp
out
in
xchg
ss
mov
mov
pop
flds
imul
and
cmp
in
std
mov
ja
pushf
popa
dec
add
test
icebp
ss
js
ret
fmul
fstl
add
in
and
ret
mov
inc
into
enterw
test
pop
testb
mov
das
fstps
or
dec
xor
sbb
pop
mov
sub
dec
mov
sbb
addr16
xor
mov
aaa
inc
xor
dec
sub
xchg
inc
adc
mov
rcrb
add
int3
push
fildl
and
xor
mov
pop
addr16
jnp
out
movsb
popa
push
popf
add
mov
add
mov
aam
mov
iret
movsl
inc
ret
push
or
mov
addr16
mov
cmc
and
test
int
aaa
cli
insb
aad
ret
rcl
imul
ja
bound
and
inc
cwtl
mulb
enter
shl
std
leave
sbb
icebp
lret
in
push
mov
rcr
push
jb
in
lods
int
test
orl
adc
insb
jg
scas
lea
mov
gs
inc
dec
add
adc
mov
gs
clc
nop
pop
ljmp
pop
jno
movsb
fprem
sub
push
lods
add
mov
jnp
pop
mov
mov
jne
push
pop
sbb
testl
jae
jp
aad
orl
int
cltd
sub
sar
jb
xor
pop
scas
jae
cmp
mov
pop
push
sub
and
xchg
push
push
push
sbb
rcrb
sahf
aam
jl
in
mov
pop
push
mov
inc
movsl
pushf
xor
lahf
xlat
pop
inc
jmp
push
insl
mov
repz
cmp
pop
es
jp
enter
mov
shlb
fldl2t
jnp
fnstenv
das
fsubl
insb
arpl
sub
ret
iret
fwait
pop
loopne
in
cmp
ficomps
loop
pop
push
je
jg
fwait
aad
in
and
mov
push
leave
popa
cli
stos
dec
lock
xor
mov
lds
shrb
mov
jge
jb
push
das
lret
std
inc
fmull
push
mov
mov
sub
out
insb
inc
loop
test
jl
fsubs
adc
xorl
repnz
ds
mov
rcrl
fmul
pop
fcomps
jge
iret
movb
jbe
mov
lods
cmp
repz
adc
popf
mov
out
lret
pop
cmp
mov
popa
aad
and
inc
push
mov
push
loopne
jmp
in
xchg
ss
in
aas
inc
cs
dec
jne
fwait
push
jb
cltd
lcall
and
pop
xchg
addr16
loop
mov
int
cmc
lods
out
xor
sbb
or
repz
mov
pop
outsl
test
scas
sub
lds
push
and
sbb
mov
gs
adcl
pop
xor
cmp
loopne
inc
pop
mov
add
rcl
out
sub
jbe
insb
insl
inc
in
into
push
jecxz
shl
iret
push
rcr
push
mov
jmp
jecxz
pop
mov
loop
pop
adc
pushl
xor
loopne
xor
mov
add
mov
cmp
into
sub
xchg
lods
dec
popl
daa
xchg
insl
dec
adc
sub
adc
les
push
jae
sub
fidivs
ss
dec
mov
pusha
lret
ret
stos
subl
cmp
ss
or
fsubrs
mov
pushf
push
pop
dec
insb
or
mov
cmp
repnz
add
ja
sub
fldt
out
sbb
lds
or
aam
adc
pop
inc
lret
cmpsl
lcall
lcall
clc
subb
out
push
int3
dec
inc
xchg
mov
imull
enter
mov
xor
add
scas
cmp
inc
cmpsl
jb
mov
bound
sarb
xchg
push
scas
cld
xor
pop
cmpl
jl
shll
bound
sti
sbb
out
pop
insl
push
les
mov
clc
mov
testl
mov
aas
frstor
cld
xchg
cmp
push
and
xchg
stos
out
mov
xchg
sarl
cmpsl
mov
rcrl
dec
addr16
add
call
push
cmp
in
iret
imul
loop
add
frstor
das
lret
add
insl
dec
and
cmp
in
hlt
push
andl
psrlw
xchg
sbb
iret
outsb
into
push
inc
movsb
mov
push
shlb
inc
in
shlb
inc
mov
push
daa
dec
andb
jmp
push
lds
daa
lret
dec
xor
jbe
cmpsl
inc
cmp
movsb
pop
insb
ret
call
cmovnp
cmpsl
int3
xchg
push
or
jg
dec
jns
or
mov
and
sbb
lcall
xlat
mov
push
cmpsb
popa
lcall
and
or
and
sbb
mov
push
insb
lcall
sarl
clc
and
inc
fsubl
dec
sbb
lds
jbe
jmp
mov
xor
sbb
lcall
inc
arpl
jle
mov
pop
push
pop
adc
mov
lods
ficoml
arpl
mov
in
xor
sbb
sbb
inc
add
push
xor
sub
in
hlt
sti
mov
stos
sbb
jae
mov
in
push
push
add
repnz
mov
ja
les
cmp
lea
aas
fbld
aad
xchg
xor
mov
adc
or
and
push
cld
mov
inc
sarl
mov
andb
js
psrld
cs
movsl
jle
mov
cmp
int
popf
pop
aas
and
ret
in
inc
push
push
push
int3
mov
pop
ja
int
pop
sub
sbb
push
pusha
or
jnp
int3
jg
imul
inc
out
push
push
jns
out
dec
dec
aas
loopne
fwait
sub
test
sbb
mov
mov
les
les
popa
inc
xor
mov
jg
add
shlb
adc
shlb
test
sbb
adcb
xor
fldcw
mov
inc
cli
arpl
les
mov
mov
pop
call
or
sbb
int
nop
shrl
xor
decb
int
push
or
jnp
fs
inc
sahf
dec
test
int
dec
mov
outsl
and
sub
push
dec
xor
xor
pop
push
add
sbb
xor
call
dec
and
jl
fidivs
in
and
cmp
frstor
cld
pop
daa
arpl
outsl
mov
lods
jl
ljmp
aaa
lahf
adcl
test
sarl
je
rorb
aad
cltd
scas
xor
add
bound
sub
sbb
pop
ja
sarb
mov
cmpsb
loope
sub
pop
mov
mov
sub
daa
pop
pop
stos
jb
push
ja
mov
arpl
in
mov
outsl
sbb
js
or
movsb
adc
push
inc
lret
cmp
dec
dec
loop
jle
int3
push
out
pop
loopne
push
popl
lock
sbb
or
into
cmp
movsl
jmp
inc
jno
inc
das
adc
mov
mov
mov
imul
sbb
fldt
jl
ss
decl
icebp
icebp
mov
out
adc
xchg
add
scas
movsb
cwtl
sbb
mov
shrb
popf
sub
jp
sbb
push
dec
stc
out
and
lcall
xlat
ficoms
loopne
test
and
loop
std
arpl
xor
push
jno
or
inc
push
pop
fwait
inc
adcb
stos
xor
lcall
icebp
sub
in
sbb
dec
and
dec
orb
rcrb
xor
fcompl
popl
dec
xchg
pop
cmp
inc
std
pop
jnp
mov
cmp
pop
or
cmc
shll
or
loopne
mov
in
movsb
shll
mov
xchg
push
dec
push
fs
jb
mov
xor
inc
roll
dec
dec
lret
mov
jns
and
aas
push
jae
fbld
roll
into
push
xor
stos
jae
push
in
jl
jle
jne
addr16
add
das
roll
ds
and
mov
fmuls
mov
and
push
xor
mov
in
inc
mov
xor
xchg
mov
adc
adc
fcompl
dec
ss
xor
inc
add
mov
and
arpl
test
jae
sbbl
add
push
hlt
jg
add
push
std
cltd
imul
mov
cwtl
ljmp
mov
add
scas
fmuls
repnz
out
mov
mov
sbb
lahf
pop
loope,pt
mov
movsl
addr16
cli
fcomp
cmp
jl
inc
js
xor
test
pop
cmpsb
rclb
iret
das
in
sub
ds
in
xor
mov
xchg
test
stos
in
imul
xchg
or
fldl
fidivl
xchg
aam
outsb
sub
push
imul
pop
leave
xchg
test
cltd
and
mov
lock
fmull
xchg
pop
data16
jge
loope
pop
lea
mov
cmp
xchg
sub
scas
test
shrl
ficomps
inc
jbe
stc
xchg
flds
sub
loop
add
xchg
pop
mov
add
hlt
inc
test
repnz
ret
cmp
das
rcl
aam
es
sub
pop
push
jl
subb
mov
ficomps
inc
std
xor
mov
repz
mov
adc
cmpsl
rolb
cmpsl
ss
cmp
insb
inc
xor
add
in
shlb
shll
pop
sub
sbb
jecxz
out
ret
out
std
movsb
cwtl
lods
icebp
in
aad
lds
jp
movsl
xor
cli
mov
cmpsl
sub
rorl
and
or
out
mov
pop
pop
cmp
inc
pause
sub
dec
cmp
pop
repnz
lret
imul
jmp
add
push
cmc
inc
push
into
inc
add
fnstsw
jne
enter
lret
lea
push
mov
and
and
inc
xor
sub
adc
jecxz
mov
mov
in
movsb
les
out
xor
xchg
out
jnp
mov
enter
cli
pop
stos
pop
sub
push
ja
fistpll
mov
push
loop
arpl
test
mov
and
mov
inc
add
test
mov
cmp
fstl
aad
pushf
fnstsw
stos
lea
stos
mov
mov
mov
mov
test
mov
push
andnps
ret
adc
flds
pop
outsl
nop
je
pop
push
cmp
lock
stos
xor
or
adc
pop
mov
mov
xchg
cmp
fsubrs
sub
out
mov
ficoml
or
pop
add
mov
dec
aad
aas
push
jg
pop
jbe
xlat
in
add
cli
pop
fnstcw
or
xor
push
scas
loope
xor
mov
rorb
adc
dec
dec
mov
jno
pop
sub
xor
xchg
adc
nop
pusha
or
cs
je
out
es
ja
aad
sub
rolb
or
mov
jmp
testl
insb
add
xchg
cmc
scas
enter
lds
jle
dec
dec
xor
dec
mov
add
jns
jae
jnp
adc
xchg
sbb
out
sarb
mov
cmp
cld
jge
popa
insb
add
ja
jb
inc
aaa
jg
out
inc
jno
lods
sub
add
fiadds
fcmovb
jp
push
jp
aam
lcall
test
rcrb
xor
iret
cmp
xchg
into
call
mov
cmpsb
cmp
imull
mov
mov
pop
fstp
imul
test
nop
addl
stos
out
dec
sub
arpl
lcall
dec
int
push
sbb
push
adc
or
mov
nop
sub
xor
loop
je
sub
lock
push
repz
icebp
or
pop
mov
rcrl
lcall
fwait
rcrb
pop
sbb
fidivl
mov
fmuls
add
rolb
add
out
cmpsb
or
popl
cmp
jb
sahf
movsb
add
aad
outsb
dec
arpl
fwait
out
pop
fdivl
xor
adc
mov
jp
mov
xchg
mov
push
hlt
mov
and
test
test
aaa
in
inc
dec
inc
shl
imul
sub
and
out
rclb
std
dec
js
xor
push
fiaddl
xchg
or
sub
test
lods
sub
xchg
scas
loope
loope
pushl
loop
or
jns
pushf
lret
lea
fdivr
xchg
fs
add
test
sub
js
stos
lret
xor
ret
lcall
jbe
ja
mov
xchg
out
pop
adc
enter
and
lcall
movsl
daa
lods
add
adc
jge
ljmp
ss
xlat
in
in
push
fstl
mov
pop
or
mov
out
adc
arpl
divl
jns
add
xlat
xchg
out
shl
lret
lock
push
lahf
mov
lods
lcall
dec
sub
sbb
jnp
movsb
and
cltd
mov
jg
insb
pop
inc
mov
jae
insb
das
icebp
xlat
fdivr
adc
cmp
jb
ljmp
pusha
rcrl
movsl
xchg
popa
push
cmp
push
pop
add
dec
hlt
repnz
or
fsubl
gs
das
scas
mov
jb
cmpsb
xor
mov
pop
cmp
aad
pop
popa
in
push
lock
pop
push
or
xlat
mov
sub
sahf
out
inc
or
pop
jge
shl
mov
out
call
jb
adc
fwait
push
loope
add
mov
lcall
jge
xchg
push
int3
xchg
lods
or
movsl
fcom
lock
shll
ljmp
inc
adc
jmp
movsb
cmp
scas
mov
jecxz
imul
jb
or
cltd
cmpsb
rcll
fwait
jne
lea
sbb
cwtl
pop
push
add
fstpt
movl
cli
jmp
ss
xchg
inc
inc
fimull
in
cs
in
mov
push
mov
adc
xchg
pop
cld
imul
add
idiv
int
xchg
mov
jb
int
cmp
mov
mov
ss
add
mov
loop
clc
mov
mov
and
and
mov
mov
mov
lods
fld
sahf
je
mov
sbb
xchg
inc
push
fdiv
pop
pop
push
adc
jb
rorb
fldl
fists
xchg
xor
xchg
repz
push
cmpsb
lret
arpl
pusha
movsb
cmp
add
leave
cmp
iret
mov
xor
in
cmp
push
scas
sahf
lock
mov
mov
push
dec
adc
es
mov
in
leave
orl
insl
stos
pop
outsb
push
xor
or
mov
xchg
in
cli
mov
daa
mov
mov
iret
cli
and
cmp
cld
mov
outsl
test
mov
cwtl
xor
pushf
cmp
ds
xor
out
mov
pop
arpl
in
inc
mov
fwait
cmp
pop
js
lahf
jo
mov
dec
pop
and
std
xchg
xchg
push
or
sti
jae
dec
inc
sbbl
and
pusha
xor
or
mov
frstor
sbb
icebp
jmp
lsl
fldcw
mov
lret
jb
adc
sbb
sbb
ret
pushw
sub
mov
scas
repz
mov
push
xor
mov
add
ret
pop
mov
pop
push
pop
dec
pop
leave
lods
mov
jecxz
faddl
add
lret
cmp
ljmp
fildl
pop
addr16
push
mov
fstpl
fucom
inc
adc
test
cmpsl
mov
xchg
or
movsb
cmp
xchg
sub
mov
jecxz
jp
dec
and
cmpsl
push
jo
bound
inc
lods
cld
fldt
inc
mov
push
sbb
cs
leave
and
xchg
gs
xor
imul
stos
js
dec
jmp
sub
imul
jmp
xchg
gs
sti
je
xor
addr16
jae
pusha
inc
sbb
mov
incl
sahf
pmulhuw
into
cmp
dec
ss
lret
rorb
fstps
and
cwtl
stos
iret
lahf
sbb
ficompl
cmp
das
ficomps
xor
int3
cs
xchg
xchg
jo
push
or
mov
jbe
xchg
push
fstp
mov
pop
cld
xorl
loope
lods
repnz
mov
cmp
add
sti
xchg
jo
sub
insl
loop
fnstenv
dec
jne
loopne
xor
fimull
stc
shrl
sahf
ds
push
adc
ss
push
xchg
mov
daa
pop
std
ret
adc
sahf
fsts
mov
pop
test
inc
scas
sub
sbb
or
iret
dec
mov
loop
xor
nop
lea
ljmp
inc
and
dec
pusha
push
lahf
pop
adc
shll
jp
xchg
push
fistl
int
daa
fldt
xchg
mov
shrb
jae,pn
adc
push
mov
negl
mov
inc
out
mov
add
adc
mov
bound
mov
lds
mov
mov
loopne
dec
cmp
lret
std
mov
in
sti
insb
add
pop
jns
cli
or
stos
sbb
mov
push
or
sub
xor
dec
fiadds
cld
sub
adcl
insb
icebp
sti
outsb
xchg
fldenv
xchg
out
mov
in
pop
nop
aad
sub
inc
fidivs
jno
pop
sbb
aad
aad
lret
mov
cmpsl
xchg
jne
inc
sub
xor
pop
arpl
mov
dec
outsl
daa
rorb
lret
lock
aaa
jl
out
das
aas
jge
adc
and
into
pop
add
call
imul
adc
mov
adc
xchg
fists
adc
cltd
xchg
mov
or
sub
imul
adc
adc
mov
cmpsl
sahf
cltd
inc
mov
xchg
jl
jmp
sub
add
daa
sbb
push
faddl
stos
sbb
out
int3
cmpsb
imul
lahf
mov
push
rorb
imul
push
or
in
icebp
xchg
popf
sub
pop
orl
fisubs
hlt
fimull
push
xchg
mov
pop
stos
lahf
cld
xchg
repz
dec
lahf
inc
rorl
jno
out
testb
icebp
int
in
test
sbb
hlt
cltd
adc
mov
test
out
call
mov
xor
cmp
mov
jmp
xchg
cmp
xor
lahf
adcl
aaa
cmp
in
shl
bnd
adc
jmp
popl
es
mov
adc
inc
jno
jmp
int
dec
add
jle
repz
adc
pop
push
lods
cmp
iret
push
lea
scas
lea
sbb
mov
pop
pop
arpl
xchg
adc
data16
popf
sub
insl
add
ret
stc
insl
push
js
sub
movl
cmp
stos
add
xorl
cmp
fs
mov
js
mov
sbbb
in
shlb
notl
in
pop
in
push
orb
sub
pop
test
pop
adc
pop
les
add
rclb
xor
mov
pop
repz
movsb
jb
mov
jmp
out
in
xchg
subl
lds
dec
mov
xlat
aaa
jle
mov
std
out
mov
jns
pusha
dec
negl
jnp
xor
add
imull
jl
fcomps
divb
mov
jnp
and
xchg
mov
pop
daa
imul
je
dec
pop
xor
mov
and
daa
jns
push
inc
cmpl
cwtl
pop
mov
mov
sbb
repz
orl
jnp
mov
xchg
daa
mov
inc
adc
lret
jne
fldlg2
mov
repz
leave
inc
xor
add
test
sub
xor
icebp
cmpsb
ljmp
sbb
mov
or
add
in
adc
and
and
adc
into
jno
jmp
and
imul
movsb
filds
gs
dec
or
push
inc
jne
outsb
mov
xor
and
jge
lret
sub
ret
scas
pop
xor
daa
mov
jp
add
mov
scas
arpl
add
sahf
into
inc
adc
daa
xor
jp
lcall
icebp
jb
icebp
adc
jno
not
out
iret
xor
negl
or
mov
push
ret
cmc
daa
mov
sub
jno
repz
popf
sahf
stc
cmpsb
outsl
mov
sti
push
daa
int3
jne
push
xlat
xor
ljmp
push
jb
sub
sbb
aad
or
mov
imul
inc
xlat
add
xor
jne
dec
ss
cld
sti
add
or
mov
loopne
inc
cmpl
imul
cmp
pop
loopne
sub
jo
sub
std
inc
or
jns
daa
xchg
aaa
shll
cmp
xchg
xorb
jle
pop
mov
sahf
aaa
in
lea
xor
inc
lods
cmp
sub
ret
pop
jl
inc
pop
imul
mov
testb
es
call
push
xor
or
cld
or
inc
lcall
inc
cmp
push
lret
adc
int
push
subb
imul
adc
sahf
dec
xor
mov
mov
xor
pop
add
push
jo
or
fisttpll
cltd
repz
cmp
ficomps
imul
jmp
stos
jbe
xchg
insb
outsb
pop
neg
daa
ret
pop
hlt
movsl
cmp
cld
out
out
push
or
and
sub
int3
and
sub
rcr
adc
pop
bound
loopne
add
pop
outsb
stos
stos
sbb
lcall
adc
pop
push
mov
mov
mov
cld
inc
lock
lods
dec
push
cmp
pop
mov
shlb
imulb
cmp
jb
in
aaa
jmp
fprem
rolb
addr16
fdivrp
sub
jmp
add
lret
mov
or
or
aas
add
in
push
cmp
aad
out
push
adc
jbe
lds
mov
inc
push
test
sub
adc
cmp
inc
jae
mov
psrad
push
cmp
cs
call
xchg
or
inc
cmpb
popf
jle
lock
enter
xchg
stos
xchg
fcoml
mov
test
stos
sahf
jp
sub
jbe
shll
xor
xor
mov
xchg
arpl
jns
mov
test
out
sahf
sub
and
lds
ja
aaa
push
movsl
sbb
in
xchg
movsb
mov
add
inc
fdiv
out
xchg
sti
mov
in
les
inc
dec
mov
mov
xchg
sub
cmp
inc
fcoml
shl
filds
lcall
mov
roll
cltd
sbb
sub
iret
iret
sbbl
pop
xchg
mulb
std
inc
out
orl
sarb
sub
movsl
sbb
inc
mov
pop
jge
push
cwtl
jmp
mov
shrb
push
enter
push
outsb
pop
inc
push
jg
lods
sbb
rorl
sti
push
lret
cmp
loope
fnsave
inc
xchg
rol
les
insb
adc
pop
rcll
mov
fstpt
xor
pop
or
mov
sbb
inc
or
jo
dec
pop
mul
jge
je
mov
clc
fcmovb
pop
in
aad
sbb
ja
push
jne
jp
mov
scas
mov
cmp
mov
cwtl
xor
mov
add
jnp
aaa
inc
cmpsl
adc
or
cmc
into
dec
inc
std
mov
ljmp
call
popa
icebp
sub
lds
add
sub
daa
dec
lods
jl
pop
and
test
sub
adc
stos
ljmp
push
push
cmp
sbb
jl
lret
addr16
rcll
and
outsb
movsb
push
push
rolb
lods
sbb
xchg
aas
hlt
daa
push
or
movsl
subb
mov
repnz
in
daa
or
popf
dec
rorb
push
push
add
sbb
es
mulb
or
or
jnp
add
in
fisttps
loope
mov
xor
or
mov
scas
andl
mov
ficompl
sbb
push
sti
inc
adc
subb
pop
jno
mov
cmp
stos
lahf
mov
dec
dec
lods
mov
fdivrl
daa
mov
xchg
jge
jno
arpl
pop
test
jnp
mov
push
js,pn
xorl
sti
rol
bound
loopne
push
pop
inc
or
jle
dec
pop
outsb
insb
jae
push
mov
aas
inc
fldt
rorb
call
insl
jp
mov
xlat
and
lahf
sbb
fcompp
mov
add
stos
or
sar
dec
stc
rolb
dec
sub
rcrl
and
and
repz
xor
xchg
cmp
xchg
add
cmp
out
ret
xchg
cltd
push
test
das
ret
mov
mov
mov
fwait
clc
mov
xchg
push
jne
pop
xchg
insb
push
call
sbb
shll
cmp
in
cwtl
pop
xor
lret
xlat
sub
sbb
mov
mov
ds
fdivrl
std
aaa
pop
mov
push
sbb
aam
ljmp
sbb
test
rcrl
fsubrs
or
aas
pop
xor
int3
and
xchg
jne
jecxz
or
test
fcmovne
cmp
pop
into
aam
aam
xor
pop
xchg
add
sbb
ret
fistps
loop
jno
or
xchg
cmp
mov
pop
int
add
into
inc
ja
gs
xchg
dec
into
or
cmp
test
fsubr
sbb
jne
repnz
pop
les
lods
repnz
outsl
popf
decl
xchg
jmp
jnp
sbb
pop
iret
sub
cmc
fidivs
jmp
test
inc
cmp
shr
adc
mov
mov
shrb
inc
ret
push
pop
mov
cwtl
mov
mov
dec
jg
test
xchg
jg
add
cmpsb
jmp
mov
sbb
xchg
pop
cli
gs
ret
mov
stc
push
movsb
jmp
dec
cmp
cmpsb
push
test
add
aad
cmp
mov
repnz
sub
clc
dec
pushf
cmpl
xchg
sub
adc
pop
xor
cmp
dec
iret
test
sbb
loop
call
xchg
test
icebp
leave
adc
cmp
lds
and
addr16
xor
inc
cmp
movsl
dec
movsl
xor
rep
mov
ss
jle
movsb
shlb
xlat
testl
xor
xor
sbb
inc
jge
cwtl
add
add
inc
fcompl
data16
mov
scas
cmp
in
cli
inc
aad
cmc
bound
jmp
xchg
lock
iret
jge
enter
dec
scas
sbb
adc
pop
fldt
jbe
push
xchg
cmp
test
dec
push
js
push
rcll
mov
rcll
xchg
cmp
stos
daa
sub
pop
out
add
fistpl
cmc
or
hlt
stc
les
sbb
mov
int
dec
mov
lock
mov
mov
outsb
fstl
push
cwtl
ret
xchg
push
sub
std
mov
mov
mov
xor
stos
add
sub
shl
sbb
adc
fcomps
xchg
enter
push
adc
or
mov
add
lock
into
aaa
out
sbb
sbb
push
popf
data16
ljmp
imul
pop
pop
js
popa
scas
cmpsl
cmp
outsl
mov
mov
jecxz
push
popf
mov
sahf
stc
mov
push
pop
mov
test
call
xor
pusha
lcall
or
mov
mov
aam
jl
push
ss
mov
xchg
inc
divb
out
sbb
push
mov
popa
push
mov
push
dec
int
ss
pop
jbe
mov
shlb
loopne
jb
xor
cmp
mov
inc
popf
xchg
rep
cmp
push
push
cltd
xor
dec
ret
loopne
xchg
xor
lea
push
mov
dec
mov
pusha
dec
scas
jp
lea
xchg
pop
or
int3
daa
lods
xchg
gs
cmpb
popa
outsb
and
or
adc
test
lret
pop
jg
pop
dec
aad
loopne
jbe
pop
cmp
push
scas
aam
jae
pop
xor
mov
pop
mov
aad
lea
imul
int3
jae
fsts
cmp
aad
std
and
inc
movl
mov
adc
mov
add
push
in
loopne
imul
jno
dec
add
push
add
mov
iret
xlat
inc
push
clc
mov
push
or
cld
xchg
fwait
inc
pop
and
pop
mov
cmp
stos
mov
xor
cli
mov
fcomps
in
aad
push
cmpl
jne
std
hlt
adc
out
inc
add
or
or
jg
jmp
into
jg
sti
jae
in
or
adc
jecxz
mov
pop
mov
scas
std
stos
ret
xchg
data16
out
es
pop
call
repz
repnz
mov
nop
xor
add
mov
popf
jp
test
mov
xchg
and
dec
sahf
fldl2t
scas
mov
icebp
mov
lahf
jecxz
pop
insl
inc
ljmp
pop
outsb
xchg
xor
jo
or
test
nop
inc
loop
sub
pop
aam
mov
inc
std
or
call
lods
cld
and
mov
jmp
les
pop
mov
and
bound
sub
loopne
mov
jne
push
std
out
jbe
in
lea
and
push
pop
enter
sub
ja
mov
xchg
lock
int
leave
adc
add
mov
dec
dec
xchg
jle
inc
out
repz
adc
dec
rol
pop
scas
xchg
jns
push
cmp
add
and
scas
xor
fcomp
adc
cmp
add
xor
out
int
dec
xor
cmp
gs
dec
dec
sbb
testl
jo
mov
popf
add
andl
rcll
cmp
xchg
lcall
repnz
or
jb
inc
xchg
push
int
or
mov
loopne
mov
adc
xadd
fs
les
jnp
insb
sbb
dec
jmp
jmp
xchg
pop
push
aam
mov
inc
xor
mov
test
lock
jp
dec
mov
dec
pop
leave
jno
sbb
icebp
mov
daa
stos
scas
push
add
dec
mov
fnstcw
xchg
cmc
sahf
jo
xchg
sbb
pop
daa
mov
jns
mov
in
sbb
lock
divl
cmpb
shlb
inc
fs
push
les
call
push
mov
adc
jno
imul
add
xchg
rcl
test
adc
xchg
shlb
fldcw
int3
fwait
repz
adc
enter
inc
ljmp
pop
cmc
ret
loop
pop
repnz
jmp
mov
mov
fsubrs
pop
arpl
mov
mov
sub
adc
dec
cmp
xor
and
rcr
ficomps
ljmp
sti
test
xor
les
pop
pop
sub
sar
jp
mov
aad
pop
lret
and
rcrb
push
addr16
fmull
repz
pop
pop
inc
cmpsb
ret
inc
xchg
int3
xor
lahf
outsb
sub
inc
inc
mov
dec
pusha
add
shrb
std
dec
jbe
pop
dec
out
sub
in
imul
jle
push
xchg
setnp
mov
cmpsb
fldt
je
mov
push
in
mov
add
movsb
add
rorl
gs
das
jno
rcll
pop
add
aas
insl
cs
pop
fwait
add
jns
enter
sbb
dec
nopl
jbe
bound
ja
aaa
jbe
arpl
xchg
fidivs
filds
sti
cmp
leave
aas
cmp
dec
std
or
mov
dec
dec
push
push
add
add
jl
test
sbb
inc
in
shrb
adc
out
nop
xor
cmp
cli
std
jl
nop
lcall
lahf
jge
mov
dec
mov
ja
jge
insl
dec
xchg
inc
lret
sbb
mov
inc
movsb
xchg
in
lcall
inc
leave
mov
xor
popa
xor
call
pop
scas
cltd
sbb
call
lods
stos
pop
or
popa
cli
std
pop
xor
push
mov
mov
jge
subb
cmpsl
lods
xlat
aaa
cld
lds
dec
fildl
pop
ficomps
inc
mov
rcrb
cwtl
xor
sbb
in
lret
psubsb
test
fnstcw
jne
xor
fsubs
pop
std
test
aad
fmull
mov
mov
icebp
mov
push
je
outsl
outsl
and
mov
xchg
mov
test
fsubrl
xchg
aas
mov
mov
test
add
out
jge
inc
das
fmull
mov
nop
test
movsl
mov
xor
pop
mull
ret
jnp
lret
testb
dec
sbb
xchg
jp
jp
pop
lcall
fnstenv
cmp
mov
rcrb
and
pop
cwtl
mov
mov
or
and
clc
stc
and
cmp
in
stc
mov
push
out
loop
push
in
shll
in
push
fnstsw
mov
mov
dec
inc
mov
fwait
mov
pop
and
add
test
jmp
test
dec
cwtl
cmc
adc
mov
cmp
xchg
test
mov
xchg
cld
mov
push
pop
jmp
rolb
mov
std
or
pop
and
inc
or
xchg
cwtl
push
pop
mov
test
popa
rol
push
test
leave
ja
push
push
popf
aaa
test
sti
lods
in
sti
pop
iret
xchg
ds
mov
and
lods
repz
dec
sbbl
jge
push
ret
mov
pop
icebp
or
and
fwait
js
cmp
and
fimuls
ja
lods
cltd
fcoms
jne
mov
cs
mov
int3
mov
mov
iret
xchg
fiadds
sbbb
adcl
adc
inc
add
and
popf
jbe
pop
pop
pop
or
dec
popf
pop
or
das
mov
xchg
rcr
aas
pop
xor
nop
mov
enter
sub
mov
movsl
pop
adc
inc
adc
xchg
lock
xor
or
xchg
inc
sarb
jno
add
add
out
sub
jbe
lahf
into
push
fildll
push
mov
sub
jp
aad
mov
bound
push
int3
cld
nop
sub
outsl
xchg
sbb
mov
mov
pop
mov
sub
jp
movsl
xchg
addr16
add
daa
adc
pop
inc
gs
jle
push
movsb
call
repz
je
shrl
push
cmp
or
roll
scas
enter
dec
pop
xor
ljmp
adc
das
adc
in
lods
dec
popa
inc
xchg
cmp
inc
stc
bound
movl
pop
push
dec
int
jb
lods
sub
subb
xor
mov
adcb
pushf
jecxz
std
scas
out
cmp
fisttps
ja
jbe
xlat
xchg
cmp
out
pop
mov
add
push
sbb
dec
mov
rorb
cmp
dec
fscale
lock
cmpb
push
adc
add
loopne
cltd
sahf
sti
lds
cli
and
daa
push
jne
xchg
jecxz
das
cmp
loop
repnz
add
jne
daa
xchg
mov
outsl
pop
arpl
mov
sbb
adc
mov
lea
sub
push
mov
dec
rolb
movsl
js
fwait
add
out
lods
jo
dec
mov
jno
adc
and
jns
jmp
mov
sbb
jp
push
xchg
adc
mov
adc
leave
in
inc
cs
pop
movsb
je
xorl
jle
jb
mov
in
sub
sub
ss
fstl
cmpsb
aad
ficompl
push
cwtl
adc
add
push
mov
ja
rcl
shrb
pop
in
ss
adc
sub
and
shlb
mov
inc
add
out
idivl
fs
cmc
test
lods
enter
pop
inc
notb
leave
cmp
outsb
jae
pop
sbb
lock
movswl
jo
aad
sbb
sub
and
dec
loop
pop
addr16
flds
aad
cwtl
mov
dec
and
push
outsl
xchg
add
sub
imul
cmp
push
stos
pop
mov
cmp
insl
or
imul
inc
jecxz
aad
mov
add
iret
or
mov
in
pop
xchg
outsb
lods
sub
add
iret
rolb
xor
xchg
rorb
jbe
shl
mov
pop
jne
js
outsb
nop
pop
aam
mov
lcall
loop
daa
lret
mov
test
outsb
mov
cltd
inc
cmpb
xchg
cltd
jae
rol
sub
add
adc
push
cmp
inc
out
sahf
out
mov
and
test
inc
fucom
std
test
jno
iret
jg
jb
adc
dec
insb
insb
xchg
mov
stos
inc
outsb
push
ss
mov
daa
ja
hlt
mov
shrb
mov
lea
mov
and
sti
movd
mov
push
int
movsl
jbe
outsl
scas
mov
inc
pop
push
fstp
pop
push
pop
adc
arpl
out
push
inc
mov
imul
cltd
in
aaa
repz
je
clc
cmc
enter
pop
jo
pop
mov
or
xor
outsl
repnz
mov
jne
xchg
dec
push
cmc
cmpsb
pusha
nop
cmpsl
sbb
int3
xor
lds
rorl
xor
sub
and
xchg
jo
icebp
xchg
shl
repz
movsl
inc
adc
push
dec
movsb
out
adc
jo
cmp
adc
inc
dec
pop
sub
rcr
nop
scas
push
cmp
insb
push
lret
lea
cli
loop
sbb
xchg
rol
movb
mov
pop
xchg
mov
pop
test
addr16
cmpb
cmp
outsb
mov
clc
cmpsb
jne
mov
mov
dec
or
jl
inc
mov
xchg
nop
cltd
mov
sti
sbbl
lods
xor
outsl
sbb
test
fildl
ficoms
jae
adc
xor
push
jp
and
fstl
cld
cmp
sub
mov
loopne
outsb
test
nop
cmpsb
dec
sarb
cmpsb
loop
out
shll
push
and
cmp
cmc
and
jno
mov
out
cmovo
xchg
and
aas
std
mov
ljmp
jmp
adc
xchg
scas
inc
ret
repz
or
mov
mov
xor
cmpsb
jne
andb
insl
stc
mov
cwtl
popa
loope
push
inc
mov
mov
shrl
jmp
inc
rcl
pushf
cmpsb
cwtl
sarl
jge
mov
in
mov
fnstenv
push
sbb
cli
pushf
test
jge
lcall
outsl
push
call
mov
push
repnz
stc
cmpl
test
shlb
push
sub
icebp
in
jle
fs
rcll
mov
inc
pop
mov
lods
xchg
int
mov
push
jae
lock
call
aad
scas
add
or
pop
xchg
neg
jno
sbb
add
mov
in
pop
sbb
loop
test
jno
inc
or
loope
lret
sub
mov
aad
pusha
idivl
cwtl
jbe
pop
and
jle
les
inc
add
addl
pop
mov
lahf
decb
mov
stc
bound
shrl
das
fcomip
fistpl
jae
xor
mov
popf
xor
add
scas
aaa
or
aam
mov
rcrb
inc
ss
pop
rorb
xorl
shll
repz
movsb
push
xchg
imul
iret
imul
cmp
push
les
iret
test
rclb
sub
sub
jp
mov
add
cmp
mov
sbb
mov
xor
jl
out
cmpsl
xchg
jl
ret
mov
inc
int3
mov
incl
pop
filds
loopne
jnp
jae
in
adc
test
jge
shlb
je
ss
mov
mov
xchg
mov
mov
push
jnp
or
test
je
push
out
cld
in
jae
daa
mov
outsb
cmp
out
data16
paddusw
icebp
xorl
inc
push
mov
dec
mov
pmaddwd
ret
mull
bound
repz
ljmp
out
repz
dec
loopne
arpl
je
sub
pop
daa
push
repz
sbb
xor
and
mov
mov
cmp
mov
fildl
loope
pushf
mov
jp
lods
inc
js
mov
adc
loop
rol
lock
inc
cmpsb
mov
add
inc
je
pop
shrl
fcompl
sbb
aad
test
adc
xchg
mov
cmp
sub
int3
mov
loop
shrl
xor
jns
hlt
clc
jl
out
popa
shrl
pop
xor
jl
das
fwait
xchg
popa
xchg
xchg
jg
repz
jo
mov
lds
mov
push
ds
jmp
push
inc
pop
popa
push
sub
imul
xchg
dec
rcrb
iret
dec
add
push
add
pop
sarl
adc
cld
mov
scas
mov
dec
xchg
xchg
xchg
les
jecxz
icebp
aam
pop
rcrl
out
pop
test
out
loope
enter
mov
decb
mov
lock
pop
push
jg
in
xor
sbb
or
mov
ljmp
repnz
xchg
xor
fisttpl
addr16
jbe
inc
fcmovnb
push
or
nop
jle
mov
mov
dec
jbe
movsb
scas
sub
xor
cmp
jae
cs
enter
sbb
or
rorb
mov
mov
push
out
fdivr
sbb
xchg
insl
cmp
cld
push
ljmp
sbb
push
lret
out
test
sub
repnz
or
and
notb
lock
lcall
mov
fiaddl
sub
outsb
movsl
pop
js
fmul
daa
jl
mov
pop
nop
cmp
mov
and
daa
mov
mov
shll
inc
into
jmp
cmpsl
adc
add
mov
push
imul
push
mov
shrl
outsl
movsb
push
xorb
cmc
aad
or
insl
xchg
rorl
ret
aam
sub
sbb
cltd
dec
inc
leave
mov
stos
addb
add
mov
movl
nop
mov
je
imul
pop
add
scas
or
out
cmc
scas
outsl
mov
call
sub
dec
mov
xor
adc
inc
xchg
push
ror
leave
sahf
imul
mov
jbe
mov
arpl
aad
mov
mov
fnsave
inc
and
es
pop
xchg
xor
add
ljmp
in
mov
scas
add
sbb
pop
mov
xchg
mov
test
mov
mov
add
adcb
xor
jmp
or
xor
les
inc
lahf
or
mov
je
nop
cwtl
fsts
cmp
cmpsl
mov
cmp
mov
cwtl
xchg
fdiv
subl
and
add
inc
mov
cmp
push
sti
lret
dec
sub
dec
ret
sbb
fnsave
out
add
xchg
push
test
add
add
lock
and
inc
icebp
pop
out
pop
mov
cmpsl
ret
inc
rolb
inc
mov
jge
pop
push
or
lods
in
scas
leave
or
sbb
pop
lods
push
mov
ljmp
out
pushf
sub
or
lcall
out
mov
enter
mov
push
subb
sbb
mov
mov
inc
insl
aad
push
mov
insl
sbb
ljmp
fmuls
pusha
sbb
and
and
dec
ljmp
insb
pop
das
xor
dec
fiaddl
sbb
cmpsb
sti
dec
sub
test
add
add
jne
jmp
jae
sbb
push
inc
push
test
out
out
dec
mov
stc
pop
filds
mov
pop
bound
adc
dec
xor
push
pushf
add
adc
sarl
icebp
pop
sub
sbb
call
daa
xlat
push
dec
stos
dec
dec
and
lahf
lahf
add
in
shlb
pop
adc
sub
fimull
mov
sub
std
aam
mov
lea
pop
mov
cwtl
inc
rorb
outsb
dec
out
sub
fisttps
je
arpl
ljmp
repnz
clc
rcrb
into
or
sahf
sti
pushl
inc
test
cltd
or
mov
out
lea
or
jo
inc
push
bound
dec
sbb
jl
add
sub
or
cmp
addl
or
pop
imul
jb
in
add
call
or
loopne
xchg
fsubl
das
push
cmp
or
mov
hlt
pop
jmp
ficoml
stos
push
insl
shr
stos
repz
daa
stos
out
test
imul
enter
mov
pop
sub
pop
cld
pop
lea
pop
and
jb
mov
or
mov
cmp
inc
and
or
jmp
fwait
cwtl
dec
dec
rcl
cmp
std
lret
pop
pop
les
sub
mov
test
in
pop
dec
mov
dec
jnp
sbb
push
xchg
pop
and
enter
lods
push
cmp
sti
int3
imul
pop
lcall
cmc
adc
cwtl
js
dec
ret
test
int
jnp
shll
lods
pop
ljmp
outsb
fstl
cld
scas
mulb
inc
inc
mov
jge
ja
jl
bnd
mov
sub
insl
ret
mov
leave
mov
fdiv
mov
jecxz
push
jg
adc
or
pop
add
repnz
lds
stos
mov
je,pn
icebp
addb
jae
loop
mov
adc
add
dec
decb
jle
pop
fildl
loop
hlt
adc
fbstp
inc
mov
lret
int
outsl
cmp
mov
mov
or
and
lahf
mov
sbb
dec
inc
popa
mov
cld
lcall
mov
jne
ds
jmp
js
fs
out
aam
ret
jns
adc
je
lea
xor
aas
xor
sub
mov
xchg
jne
and
stos
jmp
sub
pop
rolb
scas
adc
movsb
pop
filds
sbb
or
mull
push
jbe
xor
rcrl
add
xor
loopne
jecxz
lea
adc
xchg
nop
stos
popf
or
outsl
roll
jbe
lcall
fistps
in
dec
ss
sub
mov
jg
adc
movsl
shlb
mov
xchg
mov
pop
repz
sbb
jge
test
xor
int3
jae
ja
push
pop
jmp
stos
out
dec
pop
mov
sti
rcrl
mov
mov
add
out
movsb
sbb
lahf
mov
jge
je
je
xchg
pop
gs
inc
jp
pop
js
dec
out
jmp
push
ja
sub
into
mov
repnz
mov
mov
adc
xor
test
jnp
push
loop
popa
hlt
int3
int
inc
jne
std
xor
roll
sub
into
daa
jbe
mov
dec
stc
subl
lahf
sub
outsl
sub
add
sbb
push
jae
jne
aad
scas
mov
xchg
mov
cltd
hlt
cmpsl
lret
xchg
mov
or
cmp
inc
add
jge
dec
inc
mov
dec
outsl
xchg
int3
stc
inc
fsub
mov
sarb
repz
pusha
fbld
jne
mov
xor
jnp
cmp
xchg
push
aas
aas
int
sbb
arpl
hlt
cmp
cmc
ret
or
add
cmp
jb
adc
rorl
adc
pop
movsb
daa
xchg
mov
and
fisubrl
fs
es
dec
dec
pop
pop
xchg
jb
fadds
imul
ss
cmp
daa
push
lret
mov
mov
push
popf
add
or
or
fs
hlt
sbb
fcoms
pop
cmp
ret
shll
or
mov
or
jl
lret
lods
iret
fsts
clc
ret
fwait
mov
std
cltd
lods
shlb
push
fnstenv
lret
mov
out
pop
dec
outsl
mov
stos
test
movsl
jo
add
cmp
add
leave
scas
push
push
push
leave
pop
mov
pop
fwait
mov
rol
aas
dec
and
mov
inc
insb
push
pop
loopne
mov
loop
dec
mov
jp
jae
dec
xchg
popl
jo
jbe
adc
mul
and
imul
inc
stos
adc
mov
push
xlat
mov
mov
test
stc
pop
or
dec
sbb
addr16
push
or
mov
inc
mov
jae
mov
or
xchg
pop
sahf
sbb
mov
push
xchg
pop
cmpsb
das
addb
sub
adc
and
out
stos
mov
addr16
fwait
mov
rcll
das
gs
bound
sbb
mov
js
or
jno
cmc
xchg
adc
cwtl
movsb
lahf
fs
out
xchg
or
aaa
gs
test
std
push
popa
add
shr
fcmovbe
aam
mov
divb
mov
cmpsb
insb
mov
popa
xchg
cli
mov
test
ja
mov
mov
repz
loope
jbe
leave
clc
or
xchg
push
mov
mov
add
xchg
rorl
or
add
in
inc
add
ljmp
mov
and
jl
loope
ss
mov
rorb
call
and
in
jae
pop
or
nop
pop
clc
mov
sbbb
sbb
lcall
mov
insb
and
pop
mov
xor
test
sbb
imul
xchg
and
jmp
and
cmp
cmp
iret
xor
clc
iret
xchg
int
add
and
and
lods
test
popa
or
mov
mov
fidivl
filds
mov
add
push
and
cmp
mov
adc
loopne
test
sbb
int
hlt
sub
lret
fldt
insb
sahf
cmp
cmp
mov
lret
sbb
inc
pop
dec
into
add
adc
pop
and
mov
or
inc
jo
int
mov
ja
addr16
push
outsl
cmp
inc
bound
mov
in
aad
inc
add
icebp
in
mov
sbb
lea
in
cmp
xor
cltd
or
add
add
rol
mov
xchg
cli
mov
das
daa
xor
popf
or
ss
push
sub
dec
jp
cmp
pushf
cmc
insl
stos
loopne
xor
inc
stos
sub
xor
int3
test
inc
push
sub
arpl
idiv
insl
daa
or
jp
aas
xchg
xor
arpl
xchg
pusha
divl
jmp
pop
jb
xchg
inc
cmp
mov
mov
or
icebp
lea
pushf
mov
lds
enter
and
enter
repnz
cmp
mov
mov
or
jbe
sub
sub
and
nop
or
and
test
lock
getsec
push
xor
scas
mov
jle
push
flds
sbb
mov
fs
out
fcmovb
ljmp
xchg
fcmovb
cmp
fcompl
dec
jecxz
dec
loopne
mov
lds
and
jns
jp
mov
or
pop
pop
jns
push
outsb
mov
push
sub
and
cmc
sbb
add
test
ds
daa
jle
out
outsb
xchg
and
push
loopne
xchg
imul
insb
idiv
lea
push
int
fists
mov
leave
cmp
push
inc
jns
shlb
or
mov
xchg
imul
lret
sub
lds
imul
xlat
add
cmp
xchg
lahf
mov
pop
mov
ret
jae
mov
call
out
push
mov
iret
cld
in
ret
xchg
sbb
flds
nop
or
repz
in
int
outsb
repnz
mov
shrl
in
or
xor
retw
jo
mov
add
jmp
out
push
pop
push
pop
stos
outsb
leave
push
jne
sub
mov
mov
cs
movsb
in
sti
mov
mov
clc
cmpsl
cs
pop
xor
les
andl
pop
rcl
xchg
mov
les
js
or
mov
std
cmc
jg
xchg
js
pop
mov
icebp
iret
fcoml
clc
mov
stc
scas
data16
cmp
xorb
subl
adc
jg
fdivs
pop
cmp
jno
mov
fimull
lcall
or
sbb
add
lcall
mov
adc
clc
or
lock
es
mov
xchg
cli
sti
and
mov
adc
inc
xchg
ds
sub
sub
or
or
fbld
jg
add
jg
cmpsl
stc
jbe
and
xchg
mov
stc
bound
mov
sbb
in
pop
sbb
push
add
arpl
mov
sub
dec
stos
mov
ds
mov
dec
mov
sarl
xchg
fs
xlat
sub
or
int
push
xor
pusha
mov
adc
ret
ss
adc
mov
pop
mov
mov
aam
fiaddl
or
add
std
pop
cmp
mov
test
cmp
sbb
and
out
xlat
dec
mov
scas
in
das
dec
jns
or
orb
jns
sub
add
dec
call
push
je
mov
sub
inc
jg
sbb
and
sahf
mov
jmp
lds
mov
cmpsb
pop
lods
xchg
rcrl
inc
pop
jno
jnp
lods
cmp
pop
mov
pushf
stc
xor
push
jle,pt
in
popf
ss
pop
test
aaa
or
addl
xchg
adc
mov
call
push
call
mov
jbe
push
in
ret
aam
test
enter
sbb
arpl
mov
sbb
mov
sbb
cmp
out
dec
pop
cmp
inc
xorb
rcrb
pushf
outsb
daa
inc
lret
cmc
pusha
xchg
aaa
push
cmp
inc
ljmp
and
pushf
sarl
in
into
mov
push
movmskps
cmp
shrb
pop
xor
lahf
sbb
xchg
cltd
divl
jno
lock
filds
xorl
inc
movb
test
push
mov
adc
mov
mov
icebp
stos
daa
addr16
mov
pop
cmpsb
cltd
mov
add
test
incl
xchg
mov
loop
pop
xor
mov
ljmp
or
mov
out
dec
mov
push
add
xlat
mov
inc
imul
mov
ss
xchg
jno
test
xor
push
xchg
lahf
add
sub
mulb
lcall
jge
dec
push
sub
test
mov
inc
cmpb
pop
xor
int
mov
loopne
pop
outsb
jo
xchg
arpl
or
pop
imul
cwtl
and
cmp
repnz
mov
xor
push
aam
xor
jbe
add
mov
mov
mov
xchg
jns
mov
loopne
xchg
dec
mov
or
test
dec
and
sub
repz
pop
adc
pusha
aad
outsl
jnp
push
mov
or
repnz
cwtl
and
stos
mov
xor
filds
mov
xchg
cwtl
fidivs
xor
dec
jle
cmp
and
das
cld
shll
mov
mov
and
dec
outsl
pop
add
insb
adc
push
dec
mov
jle
lret
or
inc
inc
aad
mov
scas
sbb
aam
xor
inc
xchg
int
stos
cmpsl
and
cmpsb
xchg
sub
cmpsb
fildl
shr
xchg
and
sti
lahf
and
push
inc
ja
sub
push
jmp
lret
lods
test
dec
xchg
push
xchg
xchg
push
adc
jb
daa
mov
push
push
cmp
jne
out
dec
pop
loop
adc
mov
pop
push
adc
sti
lods
mov
pop
jg
mov
in
rolb
pop
sub
push
aaa
xor
jb
jecxz
sub
adc
out
call
negb
loopne
adc
inc
in
inc
jg
cltd
cmpb
fsubrs
mov
daa
or
inc
clc
push
pop
pushf
or
popa
jg
push
call
cwtl
push
and
push
jbe
mov
aas
mov
enter
jg
adc
push
sbb
leave
inc
test
inc
push
sub
scas
bound
ljmp
lods
insb
scas
fdivrs
pop
repz
dec
sbb
mov
imul
mov
mov
pop
jo
jnp
sbb
jge
and
push
icebp
sarl
xchg
push
mov
jbe
fildl
scas
push
inc
arpl
xor
adc
pop
or
pop
xchg
mov
sahf
pop
pop
fcoml
or
adc
push
jmp
cmpsl
popa
repz
iret
dec
int
mov
xor
aad
out
pop
sti
mov
jo
dec
lods
scas
lods
fldenv
aam
fstps
test
pop
pop
push
jbe
leave
outsl
ret
mov
lods
inc
scas
in
dec
sbb
int
mov
xor
xchg
pop
in
cltd
imul
pop
addr16
cli
addl
icebp
ret
jg
or
ret
cmpsb
adc
mov
popa
repz
jmp
pop
mov
sbb
popf
test
xlat
push
sahf
cld
mov
stos
mov
outsb
imulb
inc
into
adcb
mov
nop
push
mov
adc
mov
sahf
jbe
sbb
push
sub
ds
sahf
pop
leave
mov
rcll
loope
or
lds
inc
mov
jl
push
inc
pop
adc
add
out
aaa
lahf
clc
outsl
les
nop
std
xor
mov
jecxz
jo
xchg
paddusw
imul
enter
nop
push
pop
add
ret
dec
jae
out
jge
push
cmp
xchg
add
jg
loope
dec
sbb
mov
test
fcomip
rorb
and
jmp
adc
call
loope
cmp
pop
sbb
mov
shrb
sub
sahf
lods
dec
aas
cmp
xor
out
mov
adc
lahf
mov
push
adc
mov
fwait
icebp
rcll
dec
ret
pop
scas
add
xor
cwtl
xor
mov
jge
sub
push
push
mov
cli
rol
mov
adc
sbb
dec
fwait
rcll
popf
sarb
jp
jo
rcrl
push
mov
inc
dec
in
inc
mov
push
pusha
cmp
test
mov
insb
iret
je
out
sbb
sub
adc
stc
sbb
mov
fsubs
movsl
or
rolb
repz
cwtl
xor
scas
adc
mov
jbe
ret
mov
jno
jns
mov
adc
dec
rcl
mov
sahf
fistpll
mov
scas
fmuls
mov
mov
jp
aad
add
or
imul
jp
data16
pop
ret
pop
fldl
call
dec
or
jne
in
xor
aad
add
jb
push
test
decl
inc
mov
sarb
or
xchg
int
push
and
sub
daa
mov
sti
dec
mov
aam
push
shrl
and
mov
mov
mov
cmp
fiaddl
xor
mov
popf
xchg
xor
nop
sub
mov
or
push
rcrb
cmp
push
stos
push
sbb
mov
das
mov
and
cmp
enter
adc
test
adc
jo
scas
cli
lods
and
pop
ds
xor
aas
jge
fistl
and
mov
fiaddl
sahf
cld
jb
jns
mov
outsb
mov
repz
in
shl
mov
fisttpll
aas
sar
sub
pop
mov
push
cmpsl
mov
les
xor
lret
sub
add
dec
push
lret
and
jg
add
jb
lock
inc
lret
dec
inc
mov
jno
lds
shlb
and
jb
add
lret
xor
lcall
cmpsb
xlat
stc
in
stc
mov
aaa
repz
add
jae
and
fmull
out
lcall
sbb
adc
mov
cmp
mov
je
es
jne
or
mov
dec
enter
gs
scas
push
cmp
mov
in
push
imul
call
mov
fiaddl
inc
mov
sbb
in
aad
jl
push
ret
cld
inc
sub
cmp
scas
jmp
xlat
out
xor
testb
rcrl
outsb
ffree
arpl
push
cmp
notb
push
hlt
cmp
loope
enter
dec
rcrb
lock
aas
leave
imul
jns
mov
cmpsl
cwtl
mov
adc
xor
xlat
into
mov
dec
out
jmp
call
jno
shlb
sbb
fisttps
xchg
lods
lods
pushl
fnsave
bound
repz
out
outsb
popl
mov
in
cltd
sub
xchg
ja
mov
and
fldenv
adc
mov
inc
pop
movsb
pop
or
out
pop
xchg
stos
sub
sub
and
movsb
stos
cmp
adc
out
mov
push
rorb
adc
pop
inc
dec
mov
stc
xchg
xor
repz
stc
jl
push
addr16
add
lea
mov
add
sbbb
std
fdivl
push
in
lcall
xchg
jg
fucomip
cmp
dec
xchg
jmp
cltd
pop
mov
fsts
or
inc
xchg
andb
clc
movsl
out
push
lock
jae
aas
and
or
ja
lds
xor
pusha
aas
adc
push
nop
mov
push
sub
push
add
add
dec
stc
aas
push
andb
dec
cmp
or
xorl
or
inc
mov
adc
jnp
pop
gs
sbb
inc
loopne
loope
das
lock
popf
xchg
jge
push
push
and
ficompl
testl
push
movl
stos
dec
mov
jbe
in
ljmp
pop
push
loopne
out
movsb
inc
jbe
fdivs
sahf
shrl
mov
dec
jp
xchg
jle
inc
repz
das
data16
pushf
out
enter
lock
xor
sbb
int
jae
mov
fisttpll
sbb
rclb
cmpb
xchg
stc
ja
jbe
movsb
aam
and
aad
jbe
mov
icebp
popa
lahf
cli
and
movsb
aas
mov
jp
adc
rorb
jb
idivb
aad
into
lock
add
flds
popl
aad
or
mov
jg
push
mov
aam
jp
je
imul
test
in
pushf
jmp
jb
call
inc
cmp
lods
jbe
cmp
ja
imul
adc
in
js
pop
popa
sbb
stos
xchg
leave
jmp
xchg
and
cltd
jb
dec
xor
add
push
je
cmp
iret
je
pop
cli
or
jge
mov
dec
daa
mov
ja
push
cmp
add
lock
std
and
xor
inc
lods
xlat
in
adc
xchg
xchg
notl
add
push
mov
in
sub
xchg
pop
push
aad
pop
call
imul
jmp
and
push
ret
fidivs
cmp
xchg
dec
stos
nop
inc
and
sahf
into
adc
outsl
dec
stos
or
sahf
imul
orl
or
sbb
add
js
arpl
inc
xor
adc
fdivs
cmc
xchg
xlat
sub
idivl
mov
decb
xor
fidivrl
dec
cs
movsb
out
sbb
pop
je
mov
fs
add
leave
ds
cmp
fists
pop
inc
aam
out
flds
lds
add
sbb
cltd
xchg
mov
out
pop
jo
insb
fists
xchg
sub
sti
cmp
cmpsl
sbb
pop
push
sarl
and
push
sbb
sub
inc
push
sti
lret
push
sbb
rcl
cld
jge
popf
fwait
cltd
mov
jge
lock
xchg
movsb
fisttpll
push
mov
xchg
loope
shrb
fidivrs
out
inc
mov
adc
out
js
loop
fisubl
fistl
cmp
popa
dec
cmp
and
outsl
cs
mov
loope
stos
jo
insl
rcrb
dec
js
dec
mov
jae
mov
mov
popf
sub
jle
and
popf
push
inc
repnz
mov
sbb
aad
push
pop
mov
dec
inc
add
or
mov
mov
fsubrp
adc
sahf
pop
add
cmp
and
test
inc
adc
cli
and
imul
add
sub
lods
rcrl
jns
and
wbinvd
mov
push
je
xchg
stc
test
dec
in
xchg
inc
cmp
cmp
out
jge
and
push
mov
pop
in
psadbw
add
inc
sarb
scas
in
testl
cld
adc
ljmp
ret
adc
loope
sarl
lahf
mov
ret
push
addl
nop
mov
out
add
push
push
xchg
loopne
adc
cmpb
cmpsb
sub
insb
xchg
sub
into
cmp
andb
ror
jmp
mov
mov
lret
mov
out
xchg
enter
inc
push
repnz
rorl
xor
pop
dec
test
xchg
inc
bound
dec
sahf
or
push
xlat
mov
stos
dec
sub
movsl
inc
outsl
sar
orl
shlb
imul
rolb
cmp
push
mov
test
sbb
ret
sub
mov
mov
push
scas
cmpb
xchg
les
popa
add
jbe
pop
ja
mov
pop
cltd
ret
stos
push
jge
bound
and
cltd
pop
dec
imul
lock
lcall
pop
jnp
add
xchg
in
pop
aaa
sar
cli
xchg
sub
inc
dec
inc
pop
jb
sub
cwtl
mov
ret
xchg
cmpsb
and
inc
add
inc
add
arpl
mov
in
jmp
jbe
cs
inc
push
cmp
inc
dec
sbb
inc
jecxz
popa
xchg
test
push
daa
fnsave
vpshlq
xchg
push
xchg
sbbl
or
push
enter
in
jns
mov
fs
push
out
outsl
rol
gs
and
int3
xlat
sti
or
movsb
ds
xor
xchg
aaa
or
std
jle
lret
out
mov
add
lock
mov
fadd
sahf
mov
dec
inc
cwtl
lds
adc
lret
push
sbb
and
mov
push
or
rcrb
add
out
pop
cld
or
aaa
je
pop
ss
in
adc
sub
jb
pop
call
sbb
xchg
inc
loopne
fadd
mov
or
mov
jl
fidivs
test
xor
cmpsl
pop
adc
push
faddl
jne
or
inc
mov
ret
rcll
sub
sub
push
cmpb
mov
push
jmp
js
inc
xchg
lock
lds
xor
les
sbb
cmp
sarl
push
cmp
aam
sbb
cmp
inc
lret
fsubrs
mov
jmp
scas
stos
aad
outsb
pop
adc
out
movsb
ss
or
push
pop
lock
inc
pop
push
pop
add
int3
lea
push
adc
xchg
mov
jbe
xchg
cmp
int3
insl
stc
lock
movsb
sbb
stos
je
mov
insb
bound
push
mov
arpl
out
outsb
loopne
xchg
pop
pop
or
and
enter
test
add
lahf
sarb
jno
inc
jg
out
xchg
loopne
test
test
sarb
scas
pop
aaa
xchg
add
and
push
mov
fstl
or
sbb
mov
aaa
mov
cmc
daa
jns
dec
jg
imul
sub
pop
outsl
lret
lcall
xchg
inc
and
dec
aas
lods
jae
and
decb
mov
pop
cltd
popf
mov
xor
in
xor
mov
dec
imul
push
aam
jp
mov
add
loopne
fwait
and
out
push
cmpsb
push
push
fsts
stc
xor
cmpsb
lret
sub
sub
lret
pop
sub
mov
dec
sub
jb
mov
push
jl
fcmovbe
and
xor
popa
pusha
test
push
out
and
sbb
xchg
cmp
adc
cwtl
test
cld
dec
jbe
xor
push
aam
mov
inc
dec
pushf
rcl
in
aaa
sti
sbb
and
xor
mov
js
movsb
mov
mov
cmp
sbb
fistl
stos
pop
lock
sbb
xchg
pushf
loopne
rolb
fsubr
nop
rcll
popf
cltd
in
fcomp
jmp
fucomp
pop
dec
adc
adc
sub
pop
cmp
gs
jge
xchg
ljmp
and
icebp
pop
fucomi
stos
mulps
out
dec
cmp
xor
insl
daa
dec
out
push
outsl
loopne
pop
enter
pop
pop
cwtl
cmp
cwtl
sbb
stos
mov
mov
sbb
mov
mov
mov
stc
push
and
dec
imul
adc
mov
fidivrs
mull
pusha
dec
aad
xor
imul
incb
es
xor
test
mov
mov
clc
fwait
lock
mov
arpl
fidivrl
lcall
test
mov
add
inc
js
mov
xchg
fs
mov
xchg
or
repnz
pop
sub
repz
jns
jp
and
daa
rcrb
aad
lock
cmpl
jne
cmp
testl
jne
test
popa
mov
mov
fbstp
test
xchg
popf
cwtl
test
jne
inc
sub
pusha
mov
out
push
bound
adcb
repnz
lea
cmp
cmpl
lds
loope
mov
icebp
jecxz
jmp
popa
ljmp
and
aam
jmp
test
xor
mov
sbb
cmovb
jl
or
jno
iret
popa
fbld
call
adc
dec
stc
mov
pop
and
movsl
lock
pusha
xor
mov
add
inc
adc
ljmp
imul
or
mov
test
push
insb
fnstsw
rorl
jb
std
sub
popa
testl
jnp
daa
loopne
xchg
xchg
jo
std
imul
clc
mov
hlt
call
fmull
push
add
sub
adc
enter
cmc
enter
lcall
inc
sub
or
popa
jnp
je
arpl
mov
push
pop
dec
push
pop
rcrb
push
incl
rcll
daa
xchg
add
pop
jmp
xor
arpl
and
dec
ljmp
mov
shrb
mov
insl
icebp
cmpsb
popf
test
pop
push
fdivl
mov
xor
mov
jo
fisttpl
pop
movsb
loop
test
jns
sbb
hlt
rcrb
cltd
jg
jo
mov
sarl
pop
std
or
push
push
clc
or
adc
dec
xor
jg
mov
test
imul
adc
ljmp
lock
sub
je
pop
andb
daa
mov
in
and
push
repz
sub
sub
push
jmp
inc
jb
divb
xchg
arpl
adc
clc
and
sbb
adc
cmc
lret
sub
add
loope
jg
addr16
mov
lcall
add
mov
xor
pusha
or
movsl
push
lret
scas
sbbb
scas
or
fwait
pusha
adc
cmpsl
leave
or
int3
in
stos
xchg
jne
lret
in
subl
jnp
cmpsl
push
dec
add
popl
and
ret
pushf
xor
cmp
jecxz
sub
sub
push
out
cltd
xchg
sub
shlb
das
icebp
fwait
sbb
je
rcrb
out
adc
lret
jl
out
lock
aaa
lret
push
pop
fisubrs
sub
lea
out
mov
lds
cmpsb
cmp
push
inc
mov
jns
xchg
jl
sahf
ficomps
push
in
aam
iret
je
cmp
ret
xchg
pusha
cmp
pop
icebp
add
mov
fs
or
push
iret
mov
and
inc
mov
imul
call
ret
gs
mov
mov
testl
push
and
negb
pushf
iret
push
fsubrl
leave
adcb
push
cmp
or
repz
pop
stos
inc
push
cmpsl
pop
xchg
mov
pop
insl
iret
mov
xchg
lods
mov
sub
mov
sbbb
cld
pop
mov
push
loope
insb
jo
inc
and
add
mov
adc
adc
dec
mov
js
ds
imul
sub
aaa
push
enter
xchg
cmp
push
cmpsl
push
dec
enter
fisubrl
mov
push
daa
popa
mov
sbb
insb
lods
lret
in
pop
les
call
push
mov
dec
and
mov
sub
fcomip
mov
jns
mov
ja
add
or
or
insb
cld
aam
cltd
pushf
into
add
xchg
mov
lret
jns
push
push
ss
mov
pop
stc
push
pop
inc
mov
out
popf
fprem
jmp
mov
or
out
idivl
popa
sahf
inc
jge
es
loopne
loop
imul
fsubs
sahf
mov
jnp
out
cli
fists
fidivrl
les
test
adc
pop
push
dec
movsl
lret
dec
cmpsl
andl
arpl
mov
rorl
or
mov
sub
sub
fs
jecxz,pn
xor
or
and
inc
fiadds
out
inc
push
out
pushf
or
mul
lock
pop
pusha
jo
pop
repnz
mov
leave
push
adc
mov
cmp
arpl
xlat
andl
push
add
mov
lods
fsubr
xchg
movsb
cmp
sbb
dec
xor
fisubs
and
fs
call
cmpsl
inc
pop
add
fcmovnb
rcrb
in
rcr
std
pop
gs
jb
inc
or
and
dec
and
jnp
fldcw
arpl
sub
xor
stc
and
imulb
ret
mov
or
mov
add
insb
ds
in
mov
popa
adc
mov
lods
call
cmpb
pop
dec
pop
pop
xor
adc
out
push
inc
sbb
aaa
mov
cmp
dec
lret
les
jae
lret
data16
rcr
sbb
or
ss
movsl
and
in
adc
ds
sti
dec
mov
test
dec
jbe
test
or
xor
nop
rolb
adc
shll
test
inc
jbe
jge
stos
and
jmp
pop
das
mov
push
push
mov
inc
pop
xor
test
out
dec
pop
pushf
mov
sub
mov
imul
add
xor
enter
jns
push
xor
loopne
sbb
addr16
scas
mov
or
das
mov
xchg
fisttpl
or
lcall
daa
aad
or
and
sub
sar
into
fcompl
sbb
inc
sbb
push
jnp
in
cs
push
jns
xor
mov
arpl
outsb
sub
pop
outsl
loopne
xchg
inc
cmp
cmp
jmp
mov
dec
jne
and
adc
les
push
lods
negb
das
cli
je
dec
sbb
add
gs
sbb
gs
es
gs
dec
mov
es
outsl
jb
push
loop
sbb
and
icebp
mov
jle
push
ret
loope
hlt
cmpsb
ret
xchg
lahf
outsl
push
and
xchg
pop
sub
iret
pop
jne
scas
outsl
lods
add
adc
cmp
jb
and
cmp
fwait
sub
xchg
in
inc
push
shll
idivl
jns
fistl
add
xor
outsb
dec
jno
mov
cmpsl
test
sti
jecxz
mov
insb
stos
into
jecxz
in
in
decb
adc
icebp
mov
add
fdivrl
mov
in
pop
and
lahf
push
xchg
fwait
lods
xchg
enter
data16
cwtl
movsb
nop
cmp
jo
lret
loope
mov
inc
clc
jl
pop
dec
psllq
add
jbe
hlt
jne
popf
ss
std
xorl
call
popf
leave
int
iret
mov
push
pusha
pushf
je
inc
pop
dec
bound
lahf
cmpsb
cwtl
shll
or
in
icebp
cmp
xchg
rorl
add
sti
lret
push
cs
mov
scas
mov
add
xchg
in
mov
pop
sahf
pop
iret
cmc
push
addl
adcl
and
repnz
mov
push
dec
pop
scas
lods
ret
fcomps
daa
jbe
inc
push
push
xchg
orb
mov
sahf
out
icebp
adc
mulb
sbbl
xor
mov
pop
cmpsl
rolb
mov
sbb
call
xor
incl
leave
cmc
cmp
stc
icebp
out
mov
test
mov
pop
pop
push
cltd
xchg
mov
mov
adc
int3
ja
out
sbb
das
fldenv
fwait
cmp
mov
mov
push
and
mov
xchg
mov
mov
mov
popf
mov
mulb
lahf
or
sbb
jb
div
insl
fists
push
mov
xchg
jle
xor
stc
dec
xchg
sbb
movsb
sub
icebp
dec
dec
pop
lahf
outsl
push
leave
jp
jne
mov
nop
push
sbb
in
sahf
push
xor
in
mov
ror
xor
adc
adc
add
repz
nop
out
inc
or
push
jl
xor
rorb
ljmp
push
fwait
daa
in
sbb
rorb
orb
enter
pop
daa
shrb
loope
int
into
inc
ret
add
fcmovb
fwait
add
adc
ds
sub
dec
loop
push
push
gs
mov
push
int3
adcl
mov
fistps
in
sub
adcb
div
movsb
incl
jns
jp
mov
xchg
in
mov
dec
inc
loope
in
movl
bound
push
cwtl
aad
pop
mov
shlb
out
cmp
popa
les
les
or
hlt
mov
movsl
lret
lock
cmpl
in
inc
js
into
sbbb
xor
mov
adc
jl
js
mov
pcmpgtb
or
cltd
and
leave
icebp
xor
icebp
outsl
jno
movsb
inc
mov
cmp
cmp
jg
ja
sbb
movsb
mov
sbbb
into
push
cmp
imul
mov
and
loopne
inc
addl
mov
xor
out
mov
arpl
int
stc
xchg
jbe
xor
into
lock
push
out
mov
and
fs
loope
push
mov
nop
xchg
out
cmc
push
add
dec
dec
mov
push
popl
aam
fs
sub
mov
xchg
adc
loope
mov
int3
lea
fsubr
or
or
and
inc
adc
mov
fst
xchg
push
push
mov
push
lret
jb
into
or
dec
das
fcomps
or
ss
test
sub
cld
fdivp
cmpsb
out
and
popf
andl
stos
sbb
sbb
mov
mov
pop
out
sub
inc
pushf
roll
push
and
loop
repnz
inc
cmp
and
pushf
mov
aam
xor
jl
adc
rolb
pop
mov
movsb
mov
leave
aas
inc
rclb
fwait
jnp
sbb
cmp
popf
aad
cwtl
jne
mov
cmp
sbb
inc
dec
shld
mov
jecxz
arpl
push
cmp
jae
pop
sbb
cmp
xchg
pop
push
js
pop
mov
enter
jge
or
pop
mov
mov
ljmp
lcall
mov
add
and
mov
test
or
subl
add
jg
repnz
std
lcall
es
shl
pop
into
lock
in
xchg
roll
insb
cltd
call
pop
add
xor
aaa
xchg
movsb
shlb
adc
jo
inc
fistpll
xlat
mov
mov
popa
fisttps
stos
cld
enter
stos
shll
ret
insb
or
testl
cmp
pop
shrb
mov
lret
sbb
sbb
pushf
or
push
push
das
stc
xchg
pop
shll
imul
adc
enter
cmpsb
or
mov
add
lea
in
shlb
push
add
cmc
or
lock
out
push
add
jbe
adc
test
inc
push
stos
dec
hlt
fsubrl
sahf
sbb
sti
loopne
mov
inc
lcall
out
clc
in
pop
fisubs
dec
and
jnp
xchg
fisttpll
pushf
dec
addr16
repz
mov
lahf
pop
inc
dec
mov
cmpsl
cmp
mov
mov
adc
mov
adc
xchg
jbe
dec
fsts
xchg
and
mov
sub
fadd
cmpsl
dec
add
or
fistps
xor
sub
int
xor
dec
sub
push
xor
add
mov
and
sbb
xor
push
pop
repnz
cmp
out
and
sti
add
push
inc
adc
pop
test
mov
fdivrl
rcrl
sbb
and
lahf
cltd
push
pushf
mov
pop
es
or
push
or
test
mov
test
push
xorb
aaa
jecxz
stos
mov
and
in
mul
pushf
push
sub
int
call
mov
fcomi
loop
sbb
rcrl
push
or
pop
dec
out
or
clc
stos
jp
adc
pusha
outsb
stos
fisubl
adc
cmp
and
mov
in
adc
cmp
sti
sub
jmp
icebp
fwait
dec
pop
xchg
fsubr
inc
and
ds
sbb
cmp
loope
mov
js
ds
dec
inc
clc
lea
fisttpl
jbe
adc
notl
mov
pop
ds
mov
icebp
repnz
adc
mov
jge
adc
xchg
ljmp
jmp
mov
adc
popf
insl
mov
iret
inc
push
adc
jmp
mov
loopne
int
lea
xchg
repz
pushf
subl
mov
cltd
test
sbb
in
out
lahf
jmp
rcll
iret
not
mov
ss
popa
jne
mov
repnz
addr16
fnstcw
enter
sbb
mov
inc
push
ljmp
test
and
loopne
jnp
das
or
jp
add
cld
sub
movl
xchg
inc
pop
scas
das
les
mov
ss
dec
jno
inc
ftst
adc
mov
loope
pusha
sbb
cmp
mov
lahf
fisttpl
pop
push
add
rorl
xchg
mov
dec
stos
scas
fmuls
pop
pop
cmp
jbe
test
sub
mov
add
inc
insb
cltd
test
js
insb
adc
insl
push
stc
and
outsb
dec
cs
mov
sub
in
out
mov
mov
add
mov
fs
pop
faddl
fidivl
mov
xor
sbb
mov
mov
stc
jl
dec
jae
pop
fsubrs
add
xor
or
test
mov
inc
mov
xor
or
add
mov
mov
cwtl
popf
xor
and
sub
fisttps
dec
mov
out
test
je
nop
cmp
repnz
xchg
push
mov
pop
pop
mov
xor
lahf
fsub
test
in
jmp
jecxz
jnp
pop
int
add
push
mov
popa
fimull
aam
dec
mov
sti
jmp
out
jg
lods
xlat
pop
add
add
jmp
int3
fdivp
mov
adc
imul
adc
enter
pop
scas
pop
sub
test
cmpsb
pop
dec
movsl
gs
xchg
pop
loopne
aas
pushf
aad
out
lods
mov
popa
sbb
xor
dec
mul
and
xor
repnz
and
adc
out
cmp
xor
xchg
dec
addr16
cmp
in
and
dec
mov
incb
cwtl
push
inc
jb
jp
test
cmp
imul
pop
lahf
cmp
adc
les
andnps
mov
mov
mov
xchg
adc
aam
cmp
xchg
iret
or
daa
movsb
xchg
push
adc
mov
ret
orb
rcll
pop
inc
scas
sub
add
mov
mov
scas
loopne
in
pop
sarl
jg
mov
mov
sub
cmpsb
dec
adc
aaa
pop
push
sbb
mov
push
out
xor
icebp
xchg
mov
leave
jmp
repnz
xchg
and
cmp
leave
gs
fcom
adc
outsl
dec
pop
pop
add
test
mov
jns
adc
aas
fsubrs
adc
imul
sbb
aas
cmpsl
xlat
fs
and
je
xchg
xchg
mov
das
jle
dec
jno
sbb
push
dec
cmpsl
cmp
push
rcll
mov
or
xchg
sbb
jns
lret
ror
adc
notb
lds
inc
xorl
mov
sub
xchg
test
mov
jmp
lahf
add
push
pop
bsr
movsb
or
leave
lods
aaa
xchg
mov
cmp
mov
add
pop
pmaddwd
je
pop
mov
xchg
inc
or
movsb
push
dec
lret
enter
jb
icebp
cld
movsl
push
add
mov
pop
div
cmp
sarl
mov
sub
mov
fwait
push
add
lods
jb
fbstp
cltd
mov
xor
dec
out
adcl
scas
in
pop
inc
or
pop
es
dec
mov
jg
jge
imulb
lods
xor
test
push
inc
pop
hlt
cld
xchg
cmpsb
sbb
mov
sbb
nop
outsb
cmp
mov
push
mov
mov
mov
fldl
in
sub
xchg
fstl
loop
xor
cmpsb
gs
outsl
inc
sahf
xor
cli
fildl
push
dec
push
pop
pushf
or
js
mov
in
subb
fisttpl
ds
fidivrl
adc
xor
or
pop
sbb
enter
roll
cmp
je
jle
in
hlt
jecxz
sarb
xchg
pop
int
movsl
stos
jnp
test
ret
out
push
xchg
mov
cwtl
gs
stos
push
sub
es
cmp
jmp
xchg
adc
filds
jae
or
shll
mov
sbb
imul
shrb
das
lea
lcall
or
xor
call
cmp
and
lcall
stc
cli
mov
xchg
fs
and
inc
loope
inc
out
je
imulb
pusha
dec
dec
add
mov
rorl
ret
mov
mov
push
stc
cmpsb
mov
adc
popf
imul
fstpl
inc
sub
mov
out
mov
pop
arpl
jle
adc
lds
inc
push
and
andb
jmp
sub
pushf
sub
repz
cld
insl
sarb
adc
imul
push
lock
dec
xchg
mov
xchg
or
repnz
stos
nop
sbb
xchg
imul
shll
sbb
out
mov
scas
mov
test
and
repz
jbe
sti
rep
lcall
mov
sbb
push
loope
orb
add
mov
out
mov
jns
cmp
loop
xchg
mov
or
push
sub
aam
mov
sub
mov
shlb
dec
sub
inc
mov
loope
xchg
mov
out
movl
sbb
adc
rcrb
xchg
pop
jmp
cmp
out
xchg
mov
sub
outsb
mov
push
push
push
jg
adcl
shll
xor
dec
jg
and
push
mov
shl
pushf
pop
add
pop
sarb
sarb
lea
ljmp
xchg
ret
insb
pop
sbb
push
mov
mov
adc
add
mov
fs
cmp
add
jno
int
bound
add
dec
ret
test
inc
shll
add
and
mov
lret
cld
jmp
insl
inc
imul
dec
mov
loopne
int
aad
xor
addb
fcomps
push
std
cmpl
js
cmp
fists
mov
mov
cli
pop
dec
jecxz
sbb
repnz
cmp
aad
into
dec
jnp
fcompl
psrad
xor
add
or
cmp
jmp
xor
mov
and
xorl
arpl
addl
pushf
loope
add
dec
inc
ret
and
sub
lret
aad
pop
inc
dec
adc
add
inc
jge
lds
sbb
mov
push
xchg
dec
les
xor
and
les
xchg
mov
lcall
jmp
into
inc
mov
push
loopne
xor
or
movsb
cmp
mov
rolb
jae
or
ds
pusha
and
test
sbb
pop
jo
cmp
jo
loopne
pop
adc
mov
stos
out
pusha
imul
jecxz
mov
xor
shlb
cmp
push
imul
push
test
and
pop
sbb
xor
rolb
xor
push
xor
mov
mov
lds
push
jno
pop
pop
mov
xchg
mov
sti
jno
mov
cli
push
cmp
add
ficomps
inc
ss
jne
iret
in
mov
popa
out
dec
sbb
inc
loopne
push
pop
fwait
add
inc
adc
jnp
pop
inc
push
lcall
mov
les
repnz
inc
mov
mov
out
lret
xlat
mov
in
cmp
addb
les
stos
fs
adc
loop
popf
cmc
add
fldcw
cmc
iret
and
mov
cmp
insb
jg
xchg
insl
mov
outsl
test
ds
or
orl
rorl
fbstp
xor
fwait
in
fidivrs
mov
mov
or
in
xchg
xchg
or
arpl
and
sub
sbb
cmpb
dec
mov
enter
adcl
xor
mov
out
outsb
divb
dec
sbb
adc
jno
jae
add
and
outsl
loop
jl
jnp
xchg
int
stos
mov
pop
fsubs
jl
imul
and
mov
push
adc
in
sbb
sti
lock
stos
adcl
inc
push
subl
data16
cmp
sbb
in
fisubrs
out
push
enter
xor
scas
dec
dec
jns
cmpsb
dec
mov
mov
push
inc
enter
cmpsb
test
lret
jne
mov
or
in
xor
lds
xchg
cmp
jbe
lret
imul
je
std
imul
or
cmp
imul
lret
and
in
lret
test
push
sub
je
into
inc
addr16
adc
xchg
test
sub
jge
mov
dec
pop
bound
push
adc
nop
push
cmp
insb
push
cwtl
cmp
outsb
sti
sub
mov
cmp
push
xor
rorl
cmp
pusha
sbb
ret
loopne
cmpsl
xor
mov
dec
xor
xor
sbbl
fists
mov
daa
or
mov
popa
mov
ret
insb
mov
add
inc
mov
stos
pop
xchg
dec
call
adc
mov
jmp
outsl
push
xor
into
or
pop
mov
xchg
sbb
arpl
dec
sub
push
sub
mov
sahf
faddl
pop
add
mov
xor
push
add
in
roll
cli
imul
pop
scas
and
sarb
das
loope
popf
aas
inc
adc
jl
mov
sub
lret
ljmp
fs
loopne
fistl
mov
inc
add
aad
or
mov
test
or
pushf
inc
sub
inc
lret
fsts
xlat
cmp
pop
es
pop
std
sub
cmp
aad
in
imul
mov
cmp
mov
pop
ss
xchg
addr16
mov
out
or
push
movsb
jnp
mov
cmpsl
outsb
add
fucomi
xor
out
adc
ret
jo
jl
dec
loop
mov
jae
test
fsub
test
push
jmp
ljmp
dec
mov
in
xor
std
dec
inc
insl
push
cs
cs
cmp
icebp
lods
sub
sub
loopne
push
hlt
sbb
pusha
imul
xchg
insl
hlt
aam
ljmp
push
cmp
imul
repnz
add
and
xor
lds
clc
shr
cmpsb
inc
mov
push
in
testb
pushf
inc
adc
fs
dec
jns
pop
pop
fildl
xchg
sbb
sub
ss
pop
xchg
aas
faddl
mov
test
sahf
and
ljmp
icebp
jle
push
cmc
cs
test
addb
add
and
into
shlb
sahf
leave
or
mov
pop
sub
xchg
sub
dec
cmc
push
jle
out
cmp
test
mov
push
clc
cwtl
lahf
in
shr
pop
and
gs
bound
aaa
lods
mov
pop
sahf
fbstp
mov
jb
lods
ret
in
push
xor
lahf
outsb
stos
push
in
lds
mov
test
mov
cmc
sti
mov
or
sub
fs
test
repnz
lods
adc
cmpsl
inc
rcl
pop
repnz
imul
in
in
or
and
xorl
cmp
cwtl
int
mov
jae
jns
jns
sbb
lock
gs
xor
outsl
or
jo
mov
imul
lret
fsub
aad
and
out
lcall
aas
mov
movl
andb
clc
xor
sbb
sbb
and
cmpsl
les
pop
fiaddl
pop
sub
fistpl
adc
xchg
sub
sbbl
insb
outsl
dec
shlb
mov
dec
mov
int
addr16
lock
mov
scas
out
xchg
repnz
aaa
push
mov
sub
pusha
xchg
dec
add
add
in
bnd
fmuls
fdivrs
enter
es
inc
sub
leave
jecxz
stos
fwait
ja
or
sti
lret
scas
fwait
shl
sub
or
addr16
jl
inc
in
stos
and
das
adc
outsb
cmp
ret
loope
dec
movsl
inc
pushf
loop
sbb
xchg
fcom
dec
pop
scas
mov
loopne
addb
sbb
push
into
in
add
fst
fidivl
into
fiadds
inc
xchg
in
shlb
jge
je
iret
sub
incb
mov
push
hlt
pop
and
push
xchg
dec
subb
cli
lods
mov
mov
mov
in
pop
push
test
jp
adc
pop
dec
mov
lock
ja
xchg
sub
aaa
movsb
cmpsl
mov
pop
clc
rep
or
rcll
insb
adc
test
mov
mov
xlat
jae
lret
lret
sub
fwait
shlb
popf
enter
mov
sub
inc
mov
roll
sti
repnz
fidivrl
testl
repz
xlat
sbb
rcr
fwait
movsl
imul
sbb
loope
aas
mov
xchg
sub
rcll
mov
fdivp
jno
int
subb
int
jge
adc
mov
nop
scas
movsb
mov
shll
push
cmp
cltd
fcomp
in
pop
scas
dec
push
mov
lahf
push
jae
movsl
js
mulb
add
mov
fucom
mov
int3
outsb
mov
fwait
jbe
cmp
adc
pop
pop
cltd
xchg
ljmp
mov
mov
mov
into
xchg
sub
inc
clc
pop
mov
cltd
loop
fld
jmp
pusha
mov
fstp
lock
fidivs
popf
mov
or
dec
testl
inc
clc
movsb
adc
data16
mov
jle
pop
add
dec
xor
insl
dec
stos
xchg
dec
pusha
xorl
jle
adc
xchg
cmp
inc
mov
aam
aas
lret
sahf
mov
mov
stos
les
pop
push
jnp
adc
and
add
sarl
or
lds
cmp
xor
js
sbb
mov
cmp
sarl
nop
subb
outsl
xchg
cmpsl
push
dec
je
jbe
xlat
push
pop
dec
repz
into
mov
sub
cs
xchg
sahf
test
stc
aam
add
insl
jg
jecxz
rolb
inc
cmp
dec
cs
sti
sub
in
out
mov
std
cmp
mov
outsb
sub
jecxz
fcoml
adc
je
test
fs
fnstsw
sbb
pushf
fldenv
lds
mov
sub
push
cmp
mov
inc
outsl
mov
push
je
std
mov
lds
jne
pop
mov
push
repz
dec
mov
jecxz
cmp
or
aam
test
dec
mov
ss
lock
call
sbb
inc
leave
aaa
cmp
add
cmp
cmpsl
stc
jo
inc
icebp
add
mov
jo
cmpl
mov
into
rcl
dec
pusha
xor
mov
adc
insb
and
lods
mov
mov
imull
loopne
adc
lods
mov
mov
or
into
ja
loop
and
outsb
lcall
mov
or
push
dec
hlt
out
xchg
ret
xchg
dec
adc
adc
jecxz
shlb
sub
mov
loopne
int
jnp
icebp
xchg
ljmp
mov
inc
push
xor
es
pop
outsb
movsb
mov
xlat
jbe
jbe
pop
jnp
sub
push
or
pop
mov
xor
pop
shrl
stos
inc
aad
pop
adc
sub
cmpsl
inc
dec
leave
fdivr
dec
pop
mov
sub
or
or
mov
sarl
in
cmc
and
mov
fwait
push
mov
hlt
inc
push
loop
mov
inc
imul
cmp
out
pop
mov
jb
xchg
aas
imul
shlb
xor
ret
mov
repz
sarb
scas
inc
sbbb
and
jo
mov
pop
stc
xor
jge
pop
adc
xchg
out
mov
scas
cli
xchg
cmpsl
or
insl
in
mov
mov
sub
cmpsl
fs
imul
pop
sbb
stos
inc
ret
push
xchg
adc
iret
mov
lea
xor
imul
nop
pop
mov
cs
fisttps
pop
scas
js
push
rorb
jp
andb
mov
fs
dec
shlb
sub
inc
ret
iret
bound
adc
pop
call
ret
sub
xor
sub
movsl
jecxz
fidivs
ljmp
dec
fs
js
mov
ja
out
movsl
pop
int3
notb
fmuls
adc
xchg
test
mov
int3
mov
out
shll
insb
repnz
stos
cmp
sti
movsl
insl
jp
adcl
insb
pop
aaa
or
sbb
fiaddl
jo
sub
int3
mov
pop
push
sbb
movsl
out
lret
push
inc
xchg
aam
fisttpl
lods
in
inc
dec
rcl
inc
and
fnstenv
cmc
mov
sub
lock
gs
jns
loopne
cmpb
pop
in
adc
pop
push
mov
pop
xchg
xor
adc
int
repz
cmp
push
sub
test
in
mov
je
hlt
es
cltd
dec
shlb
stc
ficoml
sbb
stos
jp
mov
cmpsl
jecxz
add
mov
imul
lahf
pop
pop
xor
fwait
mov
ss
add
out
test
call
pop
daa
sub
aad
fimull
lods
cmc
aad
lds
mov
or
aad
or
mov
and
xchg
int
or
adc
push
sub
dec
negb
dec
push
sbbl
loop
mov
insb
inc
fwait
lahf
insb
jmp
mov
inc
les
mov
rorb
lea
fwait
mov
out
je
xchg
xchg
pop
lret
das
add
mov
adc
add
jecxz
stos
push
jo
stos
cmp
adc
into
je
sahf
mov
adc
pop
dec
vxorps
cmpsl
mov
insl
lahf
mov
imul
mov
push
adc
jle
lods
and
notb
fildll
cmp
cwtl
je
sbb
sub
shlb
mov
jge
pop
aad
adc
fldt
push
push
ljmp
and
movsl
lock
roll
lea
imulb
and
icebp
fldt
dec
mov
dec
jno
mov
inc
ret
dec
jmp
dec
pushf
mov
lahf
mov
xchg
stos
out
jbe
mov
cmc
add
dec
xchg
mov
adc
sub
test
sbb
xorl
popf
push
pop
fucomp
fsubs
aas
aad
out
lcall
mov
jns
movsl
scas
mov
popf
decl
out
test
js
mov
pop
pop
and
sbb
pop
or
clc
out
or
imul
xchg
inc
aam
rol
pop
das
int
insl
dec
lds
cmp
add
xor
in
std
dec
pop
mov
incb
xor
jo
cmp
fnstenv
jb
outsl
push
aas
adc
mov
inc
repz
inc
xlat
or
fstl
xchg
sbb
sbb
lea
rcll
mov
mov
jg
fwait
lcall
mov
xor
sub
in
insb
leave
cltd
and
ss
out
xor
mov
lret
outsb
xchg
shlb
mov
add
cmp
jae
lods
sub
add
or
and
aas
adc
aaa
inc
stos
je
cltd
add
and
xorb
lods
xchg
sbb
xchg
and
jne
mov
push
mov
movsb
xor
pushl
outsl
push
add
dec
lock
jge
jb
out
lret
je
and
pushf
out
inc
int3
jne
aas
adc
cmp
mov
ljmp
inc
xchg
out
and
xchg
xorb
lahf
sahf
mov
pop
das
rcrb
or
mov
push
cmp
mov
mov
fistps
enter
pop
or
mov
sti
icebp
es
inc
xchg
add
out
cli
movsb
inc
or
mov
lock
cmp
and
sarb
sbbb
repz
xor
adc
mov
mov
shl
in
sbb
jno
arpl
mov
mov
dec
enter
inc
push
xchg
imulb
jnp
iret
push
mov
mov
mov
add
mov
jbe
sub
out
and
push
xchg
mov
or
repnz
push
out
pop
in
pusha
mov
test
lods
lret
inc
sbb
out
cmc
mov
mov
mov
and
test
and
adc
bound
push
jne
jle
pop
test
ret
fmulp
mov
adc
in
sbb
inc
imul
xor
adc
enter
xchg
add
gs
out
mov
fstl
inc
mov
fwait
aaa
repz
add
fisttps
xorl
hlt
sbb
test
cmp
insb
sub
shl
out
je
loopne
mov
inc
and
lds
fmull
fucomi
testb
jl
outsl
pop
push
xor
or
dec
loope
loop
push
inc
mov
incw
and
sarl
lcall
out
mov
mov
mov
jge
sub
xor
xchg
movsb
movsb
mulb
sbb
fsubp
mov
add
aam
inc
and
addr16
nop
push
imul
mov
mov
mov
es
pushl
inc
xor
or
lret
test
mov
mov
aaa
mov
outsl
jl
sbbl
push
sbb
push
xlat
xor
dec
push
int3
loop
mov
jmp
fildl
mov
sub
push
adc
imul
stos
or
pop
stc
xor
lods
sub
bound
in
shll
incl
fs
adc
popf
fcmovnbe
pop
mov
mov
jge
xchg
in
push
outsb
mov
or
xchg
ficoms
roll
cmp
iret
sub
cld
daa
adc
movsb
xchg
scas
lods
mov
push
inc
push
jne
mov
xchg
call
pop
pop
adc
stos
lods
xchg
jns
faddl
mov
mov
add
clc
mov
jno
fucomi
sub
mov
mov
jg
jae
jno
adc
insb
add
in
stos
inc
and
jns
call
repnz
stos
jb
test
scas
bound
je
popl
testb
push
es
cmp
repnz
mov
ret
xchg
mov
ret
mov
jl
push
xchg
sub
dec
inc
dec
push
mov
and
mov
sub
cmp
repz
dec
pop
sub
loope
xchg
fwait
jmp
dec
mov
mov
in
stos
mov
push
insl
loopne
and
mov
push
mov
xor
fldcw
or
inc
dec
mov
sub
lods
js
loopne
push
jne
push
daa
pusha
push
dec
sub
mov
or
insl
cld
dec
adc
loope
push
push
mov
sarb
sbb
out
jmp
push
sub
int
test
jg
dec
cmp
cs
dec
fidivs
adc
jnp
lds
rcrl
je
fcoms
lock
mov
sub
cmp
ret
in
mov
cmp
xor
jmp
dec
es
pop
js
push
dec
ljmp
xorl
stc
pop
sub
mov
jne
loope
jl
push
mov
ret
imul
cmp
xchg
and
gs
adc
mov
jp
jo
cltd
and
fidivl
repnz
xorb
adc
test
lcall
in
shlb
imul
mov
xchg
adc
jecxz
in
out
imul
ret
cltd
jae
push
scas
mov
mov
pop
sbb
dec
je
adc
jne
xchg
and
lods
roll
xor
fnstcw
into
cmp
movsb
mov
repz
call
jno
stos
mov
push
adcl
mov
xor
loopne
rorl
jne
cltd
or
jno
adc
cwtl
into
push
pop
mov
movsb
or
or
ljmp
push
ror
call
push
add
loope
sbb
inc
jae
pop
in
and
jnp
ret
divl
cli
and
cs
sub
fidivrs
mov
inc
cmp
sub
cmp
cmpsl
cs
xchg
pop
dec
jle
jg
pop
in
xorb
scas
aaa
xchg
ret
aam
xlat
jnp
cmp
pop
or
inc
sbb
mov
loopne
push
jns
cmp
sbb
adc
imul
stc
mov
fcmovu
inc
popf
je
mov
or
mov
pop
sub
mov
mov
cli
pushf
adc
sub
push
cltd
mov
jp
fbstp
jns
inc
sub
adc
rcl
sbb
add
sahf
cmc
outsb
mov
dec
rclb
lahf
mov
fistl
and
clc
push
pop
rorl
inc
jno
cmp
jge
cmp
movsl
mov
stc
scas
daa
aad
xchg
cmp
scas
mov
subb
lcall
sub
dec
int
mov
imul
addr16
jno
add
jl
mull
push
and
pop
or
lock
adc
rcll
lods
jmp
pusha
daa
xchg
pop
push
rorb
movb
mov
outsl
xor
int
incb
and
xchg
or
divb
arpl
push
in
push
test
fldl2t
sub
cs
in
scas
dec
movsl
in
add
shrl
jecxz
lret
imul
imul
sar
insb
push
xchg
and
mov
mov
hlt
sti
rol
mov
sbbb
pusha
fs
outsl
iret
cmp
cmp
test
aad
cld
dec
pop
sub
mov
ret
jmp
call
mov
and
mov
outsb
inc
imul
or
in
cwtl
fldl
les
dec
cmpsb
movsb
or
xor
push
pop
pop
xchg
cmova
or
jge
int
dec
setp
dec
mov
fucomi
dec
fisubl
add
sub
jg
or
rorb
or
add
lea
xchg
enter
push
test
add
add
icebp
std
xchg
adc
push
dec
xorl
jns
scas
shrb
cli
repz
out
jno
leave
js
arpl
shr
push
add
mov
push
sub
push
sub
fbld
mov
and
inc
or
popf
push
popa
daa
in
sbb
cmpsl
sbb
push
mov
lcall
movsb
iret
es
xor
fstps
xchg
xchg
stos
fsubrp
push
add
xchg
or
push
xchg
xchg
cmp
pushf
sti
lret
lods
sub
mov
aaa
lahf
idivl
sub
addr16
inc
jbe
shrl
pop
push
pop
jne
inc
fnstenv
addr16
fisttps
mov
dec
out
push
ss
fnstenv
sub
dec
das
cmpsl
lea
idivb
lret
xchg
out
xchg
adc
push
call
jbe
xor
pop
mov
mov
sbb
je
mov
mov
mov
xchg
cmp
jge
dec
insb
and
or
std
mov
cmp
nop
sbb
and
hlt
adc
cltd
mov
push
sub
jle
das
stos
imul
cli
mov
int
insb
inc
scas
les
ljmp
stos
add
lock
mov
pop
xor
in
pop
lods
push
std
or
xchg
dec
shlb
cltd
jae
mov
or
jns
lock
les
inc
mov
mov
mov
and
push
dec
mov
cmp
sub
pop
adc
dec
aaa
js
pop
call
jb
loop
outsl
dec
lret
push
mov
mov
nop
pop
mov
mov
aam
ret
aam
adc
mov
add
aaa
xchg
mov
notl
stos
dec
inc
mov
jmp
scas
movsl
pop
movsl
scas
bound
in
insl
cmpb
push
mov
jnp
jp
out
adc
int
xor
jo
pop
movsl
mov
aam
fisttpll
in
in
cwtl
adc
mov
mov
cmp
insl
push
dec
adc
in
into
pop
add
push
mov
adc
inc
pusha
push
and
shlb
mov
mov
ss
or
mov
mov
jp
adc
inc
cmp
mov
flds
lods
sub
push
push
xor
popf
pop
sbb
mov
cmp
mov
inc
lcall
xchg
out
shr
push
jmp
inc
lahf
divb
fisttps
mov
and
mov
dec
pop
jecxz
sti
in
das
sbb
mov
mulb
push
fldenv
mov
jecxz
xchg
adc
pop
jge
jae
out
fsubrs
cmpsl
test
jne
xor
sbb
rcrb
pop
imul
push
ds
mov
adc
inc
popa
sarl
arpl
stos
pop
sbb
inc
fmulp
in
add
subl
jo
or
mov
xchg
xchg
cmp
arpl
jb
stos
repnz
or
xor
je
imul
decl
xchg
mov
jmp
std
adc
xor
xchg
divb
mov
nop
ficompl
jmp
sbb
in
inc
sub
ja
fimull
push
ret
mov
push
cltd
xlat
hlt
ret
gs
inc
into
inc
loopne
aaa
mov
fildll
xor
subl
mov
sbb
pop
cmp
sub
nopl
lcall
jp
or
shl
out
xchg
mov
cmpsl
jne
in
xor
dec
lea
push
xchg
adc
gs
dec
xorl
std
ds
pop
add
adc
jo
notb
lods
mov
lret
into
test
and
lds
mov
add
sti
negb
push
iret
cmp
stos
xchg
and
inc
stos
rcll
in
add
negl
dec
mov
and
das
pop
in
std
push
dec
push
push
and
pop
hlt
out
gs
fildl
adc
mov
push
imul
stc
sub
pop
orl
imul
sub
and
add
xor
pop
mov
xor
sub
les
repz
and
insb
lods
pushf
js
loopne
push
adc
stos
add
and
adc
adc
pop
mov
clc
stos
cmp
lods
add
pop
sti
jae
call
lcall
pop
sub
imul
add
xchg
inc
lret
mov
pop
xchg
or
call
call
or
mov
aam
or
cmp
imul
enter
mov
mov
or
jb
addr16
or
fisubrs
jle
scas
stc
insl
divb
pop
mov
aas
or
sbb
sub
sub
jmp
out
sbb
or
push
cmpsl
in
fwait
pushf
push
mov
or
cld
add
or
fldcw
dec
add
jae
imul
add
xchg
cmp
cmp
mov
cmpsb
shrb
jns
dec
icebp
sarb
push
add
push
faddl
das
popf
pop
add
xor
pusha
mov
inc
pop
mov
ret
cli
and
mov
idivb
pop
mov
mov
frndint
or
mov
sub
stos
dec
outsb
mov
scas
jno
fcmovnu
jge
out
cmp
jle
icebp
cltd
in
mov
enter
in
call
mov
sub
aas
xlat
icebp
push
roll
pop
mov
imul
ret
fbstp
mov
call
push
fld
aam
cld
cmc
pushf
jb
push
add
dec
loope
int3
daa
lret
insb
jbe
pushf
or
lock
xlat
and
jb
je
sub
pop
jmp
pusha
sub
push
inc
ljmp
rclb
push
das
ds
mov
sbb
cmp
or
dec
sub
or
mov
fmull
andl
test
test
test
out
aad
pop
mov
sub
sub
cmpsl
add
lcall
mov
arpl
out
mov
out
cli
hlt
add
xchg
lds
mov
pushf
in
ret
std
add
daa
insl
leave
push
addb
cwtl
xor
pop
push
sbb
out
mov
ljmp
pop
test
or
imul
or
rorl
adc
mov
mov
mov
popa
xchg
sbb
ljmp
xchg
mov
into
mov
bound
stc
jp
inc
in
pop
jb
daa
out
add
sbb
dec
xor
pop
out
adc
rorl
out
outsl
sub
inc
jp
das
inc
adc
loop
inc
inc
outsb
mov
daa
fwait
adc
xor
mov
xlat
jbe
les
lods
mov
in
cltd
andb
mov
xchg
inc
sbb
xchg
jne
cmp
sub
out
jp
dec
or
mov
xor
in
shl
jne
mov
or
cmp
pop
push
xchg
and
xchg
sbb
fnstsw
jge
jne
shl
faddl
push
jbe
or
push
hlt
and
inc
lcall
mov
push
stc
ret
sbb
cmpsl
hlt
xor
leave
jge
call
inc
arpl
orb
mov
cltd
in
test
mov
test
dec
sub
push
push
into
xor
pop
mov
and
push
call
xchg
sarb
jp
out
out
jne
movl
in
pop
jno
fwait
xchg
sub
rcrl
dec
push
and
inc
inc
pop
in
inc
lds
fmulp
divl
ja
daa
icebp
imul
sbb
pop
mov
imul
cmp
jns
add
pop
stc
movsl
icebp
inc
mov
leave
xchg
cld
mov
leave
mov
repz
sub
stc
jne
adc
in
mov
dec
xchg
mov
inc
xchg
shrl
ret
push
add
js
sbb
sarl
pop
mov
sbb
in
fidivs
mov
jo
xchg
outsb
testb
rorl
imul
push
mov
lret
push
repz
fwait
movsb
inc
xchg
or
out
adc
mov
pop
jmp
loope
das
jns
aas
cmp
addr16
out
sub
shlb
pop
xor
mov
or
pop
mov
testl
cld
pop
dec
pop
insb
mov
cwtl
iret
movsl
in
repnz
sub
leave
cmp
xchg
pop
orb
inc
sbb
and
adc
xorb
xchg
xchg
xlat
test
clc
adc
out
cmpsl
iret
add
in
clc
inc
dec
mov
testl
dec
xor
in
mov
je
cli
xchg
repnz
hlt
inc
leave
jmp
push
xchg
mov
pop
sti
xchg
dec
sbb
pop
movsb
ss
inc
and
mov
mov
daa
mov
push
sarb
cmp
cld
int3
mov
or
test
fdivrl
mov
push
xchg
pop
xchg
cmp
scas
push
xchg
pop
inc
dec
xchg
je
mov
iret
out
cmp
leave
out
cmp
in
adc
mov
xchg
fbld
sub
xor
scas
arpl
jmp
stos
adc
dec
jbe
call
cmpsb
pop
sub
and
xchg
mov
mov
out
push
out
in
sub
sbb
adcb
xor
cld
push
gs
sbb
rclb
das
add
fstps
jmp
insb
lret
add
or
sub
pop
xor
jecxz
int
inc
js
shlb
push
sbb
cmp
sbb
std
call
fisubl
push
inc
mov
sbb
ss
mov
dec
ret
push
cli
jmp
sbb
xor
xchg
enter
test
icebp
sbb
adc
mov
ja
jns
and
les
lea
push
jp
and
gs
mov
cld
mov
cwtd
mov
je
jecxz
jnp
pop
testb
bound
aas
add
xor
cli
adcb
mov
jg
out
dec
rcrb
rorl
scas
mov
in
adc
push
outsb
cmp
roll
xor
dec
bnd
pop
xchg
cs
add
stc
scas
dec
rorl
mov
pop
ss
stos
jmp
sbb
js
nop
test
repz
and
mov
and
sub
pop
mov
aas
outsl
push
or
adc
lods
jle
dec
xor
aam
lds
mov
pop
xor
or
mov
or
mov
pop
ret
push
push
std
and
repnz
testb
ljmp
push
fisubl
pop
push
pop
orl
inc
incl
jo
outsl
sbb
addl
mov
or
jecxz
cmp
loopne
sahf
adc
icebp
mov
dec
sub
push
fimuls
ret
mov
fwait
gs
xor
test
inc
mov
out
idivl
adc
loopne
adc
aaa
jo
mov
mov
jo,pn
popa
idivb
idivb
pop
ds
pusha
sbb
ja
addr16
ret
push
shll
aam
cmp
mov
mov
mov
xchg
mov
xchg
daa
outsl
test
clc
mov
inc
mov
fistpl
test
movsb
call
clc
mov
inc
inc
rcrb
dec
pop
fisttpl
int3
sahf
dec
add
testl
xchg
pop
sbb
iret
das
cwtl
mov
or
test
inc
lods
xchg
sti
fiaddl
push
loopne
cmc
xchg
adc
jne
sti
or
or
or
in
inc
daa
jnp
fldenv
and
xchg
lcall
dec
pop
xchg
dec
cmp
or
jnp
add
lahf
or
imul
daa
sahf
repz
or
cmpl
add
push
sbb
movsl
jg
lea
mov
cmpsb
loopne
lds
push
mov
xchg
mov
dec
std
mov
lcall
xor
popl
push
sub
inc
push
testb
push
add
pop
out
mov
pop
add
jp
jge
cmc
inc
imul
sti
stc
cli
pop
clc
cmp
pop
dec
xchg
cmp
inc
mov
popa
hlt
add
test
cmp
xchg
fmull
jne
add
stos
lahf
cmp
jecxz
or
push
inc
mov
cmpsl
push
and
sub
mov
inc
mov
in
mov
arpl
loope
pop
pop
cwtl
push
dec
xor
sub
mov
adc
je
int
push
xor
movsb
out
xchg
mov
jmp
cmp
int
mov
or
xchg
jno
subb
or
rcr
mov
push
dec
push
push
mov
dec
mov
lret
push
push
mov
sti
add
xor
je
push
add
mov
add
push
push
rcr
xorl
sahf
xor
mov
jb
pushf
and
mov
jecxz
fwait
xchg
inc
sub
and
iret
pop
ja
inc
out
mov
adc
andb
pop
cmpsl
xor
cmp
sub
stc
jg
into
cmp
xchg
inc
out
or
push
dec
or
jp
adc
pop
testb
std
cli
sub
in
popf
fimull
fildll
addr16
xchg
adc
mov
or
es
call
ret
jae
movsb
mov
and
cmp
pop
mov
es
pop
xchg
lcall
mov
mov
jne
cmc
xchg
mov
mov
add
sti
jg
cmpsb
ret
pushf
js
pop
xchg
in
mov
sub
mov
jno
push
xchg
shll
mov
dec
mov
push
imul
mov
ss
cmpsb
sub
outsb
jl
std
jno
jbe
enter
push
clc
out
dec
ss
mov
int
xchg
mov
pop
pusha
test
lods
and
testl
lahf
or
push
sub
mov
mov
push
into
jg
jno
jmp
pop
dec
add
in
movsb
and
mov
push
outsl
push
inc
aam
and
push
pop
or
inc
mov
mov
mov
ret
cmp
sub
mov
outsb
outsb
sub
dec
add
or
or
lods
lock
loope
into
loope
or
mov
sahf
in
jns
push
inc
push
jae
call
dec
pop
and
mov
mov
addr16
mov
in
xlat
pusha
sub
jmp
xchg
daa
rcr
mov
push
std
push
mov
mov
pause
loop
or
mov
mov
in
and
add
enter
xor
insb
mov
iret
data16
into
jmp
push
mov
dec
jmp
dec
adcb
push
fldl
pop
insl
adc
mov
xchg
jo
mov
cmp
inc
cmpsb
inc
call
sbb
arpl
sbb
pop
icebp
or
sub
cmp
loopne
inc
cmp
fadd
imul
ret
scas
xchg
ss
jp
in
out
lahf
lods
sti
mov
rclb
push
or
dec
cmp
sub
fdiv
xchg
push
mov
pop
insb
jmp
or
jnp
mov
pop
push
add
xlat
insl
pop
pop
sub
fistl
ficoms
js
aas
test
dec
or
fldt
clc
sbb
pop
ret
pusha
in
sti
pop
mov
scas
ds
mov
les
sbb
jle
jo
sbb
rorb
scas
mov
xor
jnp
push
data16
or
daa
mov
lds
sbb
cmp
pop
mov
dec
mov
or
addr16
mov
lret
imul
adc
out
out
add
rcr
inc
negb
xchg
test
ds
gs
or
push
ret
pop
mov
mov
inc
and
loope
test
cmpsb
fnstenv
xor
repnz
add
stos
and
rcrb
call
pop
notl
scas
xchg
mov
push
rorl
mov
rclb
xchg
mov
lds
push
xchg
sub
into
nop
out
xor
fldt
dec
inc
out
fsubrs
ljmp
int3
add
pop
clc
out
xchg
and
mov
imul
jmp
pop
xor
and
fs
push
pop
clc
or
std
mov
outsb
mov
sub
ljmp
sbb
and
scas
cmpsb
pop
stc
sar
bound
sub
adc
clc
sbb
xlat
scas
dec
dec
mov
sbb
stos
daa
dec
out
mov
jno
scas
into
mov
aad
pop
xchg
inc
jmp
cmp
testb
push
out
cltd
dec
push
inc
fs
fimuls
dec
inc
xor
in
test
out
ja
xchg
cli
add
std
and
out
cmp
call
das
dec
adc
dec
sbb
xchg
or
mov
and
fdivs
and
test
pop
mov
jp
cmp
dec
and
loopne
pop
add
sub
adc
ret
mov
inc
jne
mov
and
push
movsl
pop
xchg
mov
mov
sbb
or
enter
lods
sbb
add
insl
push
push
in
and
out
notb
in
sub
or
in
xchg
push
cmpb
jp
lcall
in
push
loop
jmp
scas
std
bound
xchg
hlt
dec
pop
outsb
cmp
mov
in
lret
fadds
xchg
cmp
sbb
xchg
fidivrl
inc
adc
pusha
pop
mov
icebp
xor
dec
mov
cmc
mov
imul
in
neg
pop
cmp
mov
and
pop
push
pop
mov
dec
mov
add
out
cmp
add
fs
and
fbld
jno
stos
jg
mov
mov
fsub
fstpt
ret
out
test
mov
jge
pop
mov
cs
jo
les
dec
cmpsb
not
cltd
and
cld
sub
movsb
stc
mov
xchg
push
adc
xorb
jae
imul
sbb
adc
dec
adc
dec
andl
inc
int
jo
imul
cli
leave
sub
push
or
std
loopne
jns
lret
dec
outsb
std
pop
popa
insb
ret
dec
sub
add
mov
lcall
add
arpl
mov
outsb
or
push
or
das
push
test
out
int3
aas
inc
stc
clc
jmp
lods
je
jl
lods
jno
in
mov
mov
dec
insl
mov
adc
add
xchg
lock
js
jno
sub
fisttpl
fisubrl
push
xor
cmc
int3
xrelease
pop
loope
and
sub
adc
xchg
arpl
test
dec
cmp
mov
dec
mov
xchg
push
insl
adc
stos
dec
pop
lea
mov
inc
test
lret
jp
mov
js
loopne
mov
xchg
xchg
mov
mov
mov
fwait
add
xor
jb
stos
nop
xchg
out
in
adc
in
xlat
xchg
mov
repz
loopne
adc
jg
nop
cmpsb
jns
shr
in
xor
adc
inc
inc
orb
aam
jl
push
lcall
dec
loopne
int
loope
push
mov
cmp
ss
fmulp
dec
aad
loope
cltd
pop
scas
outsl
xchg
inc
lret
mov
mov
cmp
into
cmp
fwait
sub
sbb
cmpsl
mov
cmp
cwtl
xor
imul
mov
shll
cli
imull
pop
adcl
sub
fdivl
pop
pop
lods
out
in
sarb
repnz
mov
cmpsb
enter
aas
push
sbb
cmp
and
and
or
mov
sahf
dec
sbb
push
jo
push
lods
leave
repnz
xor
sarl
pusha
xor
jp
clc
cmpsb
adc
bound
dec
sub
scas
aaa
gs
inc
mov
xor
or
rclb
inc
pop
sub
pop
lcall
pop
and
es
dec
rorl
inc
inc
sub
lea
movsb
test
lret
pop
in
dec
sbbl
leave
mov
xor
dec
mov
rolb
mov
imul
in
push
mov
mov
xchg
stc
mov
xor
jge
mov
push
push
jb
cmp
cmp
dec
ret
shlb
cmpsl
cmp
scas
pop
shlb
jne
cmpb
inc
insb
dec
xor
or
aad
enter
popa
mov
dec
inc
sub
adc
ret
arpl
xchg
add
push
xor
jmp
out
cmp
inc
js
jbe
push
mov
add
mov
pusha
adc
push
sub
call
dec
iret
inc
ficoms
xchg
sti
push
sbb
xor
cmp
cmc
bound
jg
add
bound
xchg
mov
data16
sarb
mov
call
stos
add
mov
outsl
arpl
cmpsl
mov
add
cltd
fidivl
mov
ss
bound
out
inc
fidivl
xchg
in
shl
cmp
jne
mov
sub
push
movsb
div
jbe
jnp
leave
mov
shl
xor
pop
xor
fstpt
gs
loope
push
frstpm(287
test
push
mov
sub
mov
repnz
out
mov
fbld
adc
lods
ror
pop
and
iret
sbb
and
mov
fsubl
jmp
pop
andb
jnp
or
loopne
pop
mov
loopne
shll
xor
imulb
subb
cmp
adc
fcomps
in
push
cmpsb
sub
icebp
or
fdivl
shll
subb
mov
add
jge
pushf
test
aaa
shrb
loop
in
jno
add
enter
xor
leave
popf
push
mov
or
mov
jp
xchg
sbbl
scas
fucom
push
xor
pusha
scas
sub
loopne
sub
adc
out
pop
jge
ret
or
stos
int
mov
mov
pop
xchg
or
xor
add
test
xor
loop
jb
fcmovnb
les
and
out
mulb
insb
mov
jl
js
jno
jns
lret
fst
inc
ret
aam
dec
insb
sub
mov
dec
xchg
inc
or
iret
sti
jb
xor
mov
xlat
rcrb
push
call
imul
mov
add
insb
out
sub
cmc
and
sahf
mov
push
js
push
push
mov
or
and
dec
leave
jnp
icebp
cmp
mov
out
inc
lds
loopne
enter
add
and
add
je
scas
test
inc
or
fldln2
pushf
and
pop
ficoms
push
loop
fbld
jle
aas
adc
mov
je
xchg
dec
stc
sub
fs
ror
sti
xchg
or
fisubl
mov
mov
mov
adc
scas
leave
and
insb
xchg
and
sub
xor
mov
xchg
orl
fdivl
gs
lcall
jl
inc
sbb
and
lea
push
or
mov
push
imul
jle
sbb
adc
sub
fimuls
jnp
or
cmp
iret
lret
orl
push
dec
xor
push
mov
aam
ret
push
loopne
cmp
mov
push
ljmp
jns
dec
xchg
adc
addb
mov
mov
inc
or
cmp
inc
mov
mov
or
push
jno
pop
mov
dec
sub
cmp
je
gs
rcrb
adc
or
std
cld
or
adc
xor
popa
and
into
fistl
mov
push
cwtl
enter
lret
and
out
bound
jbe
add
in
stc
divb
pop
xchg
shll
adc
pushf
test
adc
gs
je
in
sbb
inc
adc
arpl
faddl
add
out
fstl
test
das
sub
popf
pusha
xor
cwtl
sub
xchg
test
xchg
cltd
pop
push
sub
push
cmp
jecxz
int3
xor
out
mov
xchg
cmp
iret
out
adc
or
jbe
cmp
rorb
fisubrl
xlat
lcall
adc
ja
mov
cmpb
lods
xor
xchg
data16
fildl
or
loop
xchg
jmp
ficomps
repz
mov
dec
jg
add
pushf
cmpsl
cld
mov
push
cmc
mov
sbb
jp
orb
adc
jne
inc
inc
mov
sbb
adc
push
mov
movsb
cli
mov
sbb
sub
mov
cmpsb
pop
adc
pop
mov
bound
in
out
lea
push
sbb
out
mov
fistps
sbb
sub
mov
xchg
mov
pop
sahf
into
sub
nop
cmp
icebp
sahf
xchg
add
and
adc
icebp
dec
rcr
xchg
cld
adc
pop
loopne
add
loopne
inc
in
fisttpl
push
pop
sbb
mov
pop
scas
mov
adc
dec
and
cmp
add
pop
and
dec
pushf
push
jne
icebp
xor
hlt
js
xchg
xchg
pop
jnp
mov
bound
cmpsb
movsl
xor
sbb
fs
inc
sub
es
aas
stos
std
stos
jmp
jnp
scas
push
aas
mov
inc
out
sub
stos
loop
iret
mov
fstpt
cs
aam
or
in
mov
and
add
mov
sbb
jns
mov
jb
test
jmp
cmp
ja
xchg
mov
cmp
ja
inc
mov
mov
in
out
pop
adc
mov
xchg
dec
add
or
mov
cmp
cmp
sub
popf
mov
mov
sti
cmp
das
lcall
push
sub
xor
test
mov
add
mov
repz
loop
fidivrl
mov
into
dec
mov
arpl
inc
jp
mov
mov
cmp
pop
adc
mov
pop
aad
stc
jecxz
clc
mov
in
inc
mov
loopne
es
add
jmp
push
loop
fisubl
pop
sbbb
sbb
pusha
cmc
push
xchg
pop
int
cld
dec
mov
mov
mov
scas
imul
inc
cltd
pop
es
enter
push
inc
test
gs
pop
mov
loop
mov
lea
pop
dec
lret
and
xchg
fwait
icebp
bound
jbe
jns
dec
stos
xchg
jle
adc
int3
rcrb
shrl
cmp
xor
ja
jp
cmpsb
xor
or
add
lock
and
mov
loope
push
fcoms
and
gs
add
push
mov
loop
dec
and
popf
xchg
pop
shl
sbb
mov
out
fsubr
test
in
gs
inc
sbb
pusha
cli
lahf
fisubs
int3
cmpsl
or
rcrb
mov
aad
inc
and
add
or
jns
int3
and
mov
mov
nop
ret
rcll
cmpsb
mov
sub
inc
pop
xchg
add
adc
jl
andb
mov
lock
lock
aam
gs
mov
test
ret
and
pop
push
mov
add
in
das
pop
mov
lret
std
cmp
adc
mov
push
rol
rcr
push
dec
lock
cmp
mov
pop
mov
lods
mov
ret
ret
cs
lret
std
cld
xchg
jne
outsl
mov
test
popf
pusha
mov
dec
or
fadds
or
lds
add
mov
arpl
cmpsb
ds
cli
and
mov
aaa
mov
sbbl
inc
call
mov
ja
lods
jp
fwait
jge,pt
adc
push
jle
std
fcomp
daa
push
inc
outsl
fcmovne
sahf
push
xchg
adc
xlat
pop
push
and
mov
jb
mov
adc
fstl
std
adc
scas
ficoml
mov
lret
mov
out
inc
push
mov
inc
sbb
ficoms
jb
pushf
push
les
mov
push
mov
pop
xchg
pop
sbb
fmuls
inc
push
cmp
in
subl
aaa
aad
mov
je
pop
mov
adc
cmp
pop
mov
cmpsl
xchg
sbbb
je
stos
aam
push
pop
test
mov
scas
ss
jg
fisttpll
adc
lahf
pop
or
dec
call
xchg
hlt
sub
xchg
xor
data16
push
inc
inc
mov
out
cs
stc
mov
std
pop
mov
xchg
rol
inc
sbb
imul
inc
or
jns
in
push
pop
faddl
adc
shll
nop
cld
jnp
or
and
sbb
ficoms
sbb
aaa
loopne
xor
inc
icebp
ds
mov
mov
fimull
jno
aam
je
test
js
es
das
mov
dec
pushf
sbb
imul
cld
imul
mov
mov
dec
sbb
out
push
test
mov
push
pop
loop
out
fisttpll
mov
jbe
cmp
pop
cmpsb
data16
adc
adc
pop
add
mov
in
push
jno
fistps
or
mov
iret
mov
in
pop
push
push
dec
inc
pop
xchg
or
mov
test
mov
aam
xchg
out
iret
orl
imul
jnp
mov
sbb
sub
mov
outsl
imul
pushf
pop
mov
mov
pop
or
add
bound
pop
xchg
icebp
sarl
insl
dec
xchg
into
inc
dec
sub
in
adc
pop
jmp
jne
and
loope
mov
lret
sub
xor
mov
adc
or
scas
push
pop
xor
mov
bound
lret
sub
sbbl
mov
jae
fcompl
xchg
notb
sbb
mov
mov
push
std
out
jnp
jbe
xor
repz
mov
rcl
push
fsubrs
movsb
xchg
rcll
jmp
sub
stos
cmc
push
fwait
lds
roll
jne
inc
adc
mulb
xor
lcall
fs
cmp
mul
jg
fs
pop
lcall
push
repz
mov
movsb
inc
repz
cmp
mov
xor
cmp
ljmp
test
jae
jno
fwait
cmp
xchg
into
sbb
and
push
iret
or
stos
jmp
mov
push
outsb
test
add
popa
pop
inc
xchg
data16
add
lock
shr
mov
call
out
test
xor
mov
sahf
dec
call
push
andl
pop
push
push
mov
mov
pop
pop
pushf
cs
push
dec
mov
aaa
adc
iret
pusha
stos
loope
dec
clc
out
mov
rorl
stc
inc
popa
mov
out
lods
imul
xchg
daa
mov
lret
lods
das
mov
sub
icebp
jne
loope
data16
cli
ret
cltd
xor
pop
add
pop
mov
out
push
stos
jno
xchg
std
aad
sub
sub
iret
inc
ss
mov
adc
xchg
std
sbbl
push
xchg
mov
and
es
xchg
rol
dec
cmpsl
jbe
lods
lods
mov
sti
in
xchg
icebp
jge
pop
sarb
mov
jbe
cltd
mov
dec
mov
jmp
jbe
pop
lret
and
jnp
or
out
into
in
gs
shl
ret
xorl
mov
int
inc
cmpsl
into
pop
sar
fdivrp
xchg
scas
in
pop
popf
push
push
rolb
sbbl
ljmp
add
adc
push
inc
jl
ljmp
arpl
shll
aaa
insl
pop
insl
bound
sbb
fisubrl
sbb
push
and
in
jmp
jo
lods
add
mov
or
adc
insb
mov
inc
fstps
jmp
fchs
sub
inc
bound
mov
aaa
loop
jae
loop
call
popa
in
aam
sbb
add
mulb
push
lds
cmp
xchg
pop
test
jle
lods
push
xor
xchg
mull
inc
rcr
shlb
and
mov
adc
nop
ret
dec
and
cs
sbb
cmp
lret
ror
or
ret
out
aad
sub
aaa
or
clc
ja
dec
dec
mov
cli
sub
xor
pop
outsb
arpl
rclb
call
aad
lods
daa
adc
mov
mov
cmpl
pop
daa
aad
adc
orl
repz
xor
clc
jb
and
lret
cmp
inc
int3
lock
sbb
mov
mov
xlat
jne
pop
in
and
mov
int
and
jle
daa
in
push
imul
repnz
add
xchg
and
mov
mov
or
mov
pop
lret
lods
lcall
loopne
mov
out
sbb
mov
add
or
ss
push
in
pop
mov
int3
mov
pop
das
das
add
sbb
dec
clc
xor
rcll
inc
pop
js
sub
push
stos
cmpsl
andl
cmpxchg
loope
mov
xor
or
mov
push
leave
lret
mov
leave
lock
xchg
inc
pop
imul
mov
out
aaa
jmp
cmp
mov
mov
push
inc
scas
mov
mulb
sbb
mov
popa
cmp
stos
lods
fcmovnu
inc
jne
mov
ss
ret
outsb
mov
fimuls
add
iret
mov
mov
cltd
mov
cmp
and
mov
xchg
xor
sbb
jno
in
fbld
out
push
loope
pushf
and
add
testb
mov
mov
jmp
cld
fdivs
sbb
sbb
fisubs
mov
mov
push
mov
adc
mov
rol
pop
dec
mov
pop
cmp
imul
mov
push
add
xlat
into
es
repz
subb
adc
push
hlt
mov
clc
inc
dec
xor
inc
nop
cli
es
repnz
mov
xor
push
ss
int
add
xchg
adc
sti
out
pop
inc
ret
cmpsb
insl
divl
in
in
cmp
mov
inc
inc
shll
mulb
jbe
mov
pop
push
sbb
inc
adc
or
pop
imul
and
sbb
mov
cwtl
jo
iret
mov
outsl
jl
lret
inc
fwait
icebp
jae
mov
lods
push
xchg
mov
lahf
ret
jno
cmp
int3
jns
mov
repnz
cld
and
xchg
dec
into
cmp
xor
cmp
xchg
cli
and
cmp
mov
and
inc
test
ljmp
sub
je
inc
sbb
pushf
dec
imul
jecxz
jae
imul
push
dec
mov
jae
faddl
sub
xor
sub
popf
lods
inc
mov
hlt
push
adc
loope
mov
xchg
repz
bound
mov
sub
sbb
fdiv
add
push
pop
aad
clc
into
stos
movsb
add
clc
pop
cmp
lcall
pusha
and
add
mov
pushf
pusha
mov
add
imul
pusha
or
fwait
test
mov
fisttps
and
cmp
test
inc
jle
into
sub
xor
mov
pop
cltd
push
rep
mov
imul
into
lea
fdivrs
cpuid
mov
adc
mov
fisttpll
pop
pop
xchg
jb
das
push
call
jge
pop
pop
clc
out
lea
test
imul
fs
test
inc
fnstcw
or
jae
clc
push
lock
jo
shll
jmp
cmpsl
jmp
hlt
push
and
out
add
std
iret
hlt
cmp
pop
xlat
ljmp
insl
ja,pt
inc
cmpsl
inc
inc
or
mov
adc
in
aam
add
add
jg
sti
jmp
pop
lods
sbb
mov
imul
push
repz
cmpb
mov
imul
xchg
cmpl
imul
mov
call
outsb
lret
sbb
jle
nop
dec
sbb
std
in
fsubl
call
ja
aam
sbb
repnz
push
xchg
xchg
add
xor
and
lds
dec
cmp
cmp
mov
push
gs
lds
cltd
inc
push
gs
mov
ret
jne
in
dec
inc
enter
sbb
pushf
in
mov
cld
add
sub
pushl
push
divb
loopne
insl
nop
or
js,pn
addr16
icebp
pop
lret
lods
movsb
dec
mov
and
sbb
in
pop
test
add
xchg
stos
sub
mov
xor
mov
mov
push
lds
mov
lea
into
jne
push
cmp
sar
stc
daa
aaa
sti
movsl
sub
negb
cltd
xor
dec
loopne
fmulp
nop
mov
pop
sbb
adc
rol
add
xor
push
ss
xacquire
cli
mov
stos
cwtl
fnstenv
add
xor
push
and
sub
adc
test
popa
add
pop
ret
shlb
imul
sub
sub
test
insb
or
idivl
popl
sub
dec
push
movsl
jl
cmp
xchg
stos
mov
inc
lods
sub
mov
out
sub
movsb
out
out
xor
idivb
popf
pop
mov
xor
fildl
fstl
ss
in
in
mov
data16
fdivrs
xor
shl
inc
xor
dec
addb
out
mov
mov
lret
notl
imull
pop
out
ljmp
out
pop
repz
popa
stos
aad
dec
stos
or
dec
mov
pushf
loope
cmp
lods
mov
xchg
int3
mov
lds
arpl
lcall
nop
popa
adc
add
sbb
js
add
inc
cmp
mov
stos
ljmp
mov
ja
js
insb
jbe
mov
stos
add
pop
iret
ds
dec
aaa
xchg
dec
cltd
cli
rorl
loopne
iret
xor
or
pop
gs
out
jnp
pusha
in
and
xor
xchg
outsl
xlat
mov
xchg
in
lds
out
jge
sub
lds
add
cli
pop
push
add
sbb
rcl
sub
xchg
pop
push
and
stos
xchg
mov
stos
outsb
imul
lahf
mov
xor
dec
fcomps
pop
jl
shl
dec
flds
cwtl
fldenv
and
popa
xor
mov
shl
sub
inc
dec
lds
filds
pusha
inc
outsl
sti
sarb
popf
jecxz
jns
jne
inc
pop
sbb
test
sub
ja
dec
cmp
mov
jl
xchg
stos
xor
or
mov
or
imul
es
divb
jno
mov
inc
jmp
dec
jmp
fmuls
cli
nop
dec
sub
es
mov
int3
jno
fucompp
dec
mov
and
mov
xchg
xlat
fwait
cli
sub
jae
movsb
sbb
dec
into
or
xchg
add
inc
jle
clc
sbb
mov
pop
ja
mov
mov
addr16
mov
cmpsl
mov
xor
shl
mov
push
jb
imul
xchg
loopne
dec
imul
mov
rolb
in
inc
push
mov
in
addl
icebp
out
push
pusha
insl
clc
inc
test
cli
and
mov
imul
xor
dec
icebp
xchg
dec
xchg
xchg
dec
fldl
sub
flds
pop
jmp
adc
or
mov
xchg
addr16
xchg
add
push
adc
testl
jle
dec
push
shlb
mov
call
push
insl
mov
jg
rcr
add
sbb
xlat
popf
dec
imul
out
lcall
shrb
shr
sub
popa
adcl
push
repnz
fsubs
jecxz
sbb
sub
sbb
adc
imul
inc
push
popf
cmp
ds
mov
add
dec
mov
fs
pop
cltd
or
jecxz
jmp
xchg
pop
xchg
cltd
xchg
call
das
fisttpl
mov
xor
aam
jmp
adc
xchg
leave
adc
fbld
std
pop
shll
adc
jae
sbb
in
jno
add
imul
xlat
lods
sbb
fwait
mov
xor
loop
dec
pop
aas
xchg
adc
or
sbb
jg
cmp
xchg
xchg
adc
mov
test
adc
icebp
mov
dec
fwait
scas
repz
xchg
xlat
push
and
xchg
and
adc
fimuls
pop
divl
fs
imul
test
mov
aas
jge
sbb
dec
xor
fdivs
mov
xchg
lcall
lock
arpl
cmp
js
test
adc
adc
jnp
pop
popa
push
pop
xor
data16
mov
inc
stos
add
jnp
inc
iret
aas
add
jge
and
loop
out
or
mov
pop
lock
negb
in
lock
jecxz
call
jp
cmp
adc
xchg
inc
xchg
in
mov
inc
or
dec
int
sti
mov
mov
pop
ss
in
pop
mov
sbb
ret
or
sbb
pop
dec
mov
jnp
jle
dec
stos
push
xchg
mov
jecxz
sub
rorb
punpcklbw
add
test
mov
filds
xor
xchg
adc
xchg
scas
mov
scas
stc
xor
mov
jbe
mov
adc
repz
dec
test
ja
and
mov
inc
mov
roll
cmp
mov
xor
inc
push
mov
mov
pop
rclb
push
sub
scas
data16
sbb
inc
jo
sbb
adc
ds
and
add
sahf
pusha
cmp
lds
pop
mov
pop
sbb
and
cmc
mov
xor
xchg
push
xchg
not
pop
mov
cwtl
pop
jp
jns
scas
xor
xchg
cmpsb
xor
jo
xchg
sbb
data16
dec
jmp
stos
cmp
dec
dec
movsl
mov
repnz
sti
mov
jbe
dec
pop
mov
outsl
mov
and
sub
test
popa
xor
test
mov
or
jl
div
jb
stos
jg
bound
add
movl
dec
jo
lahf
andb
add
inc
mov
jno
pop
inc
mov
cmp
push
idivl
lahf
cs
inc
jns
pop
andb
aas
call
dec
add
es
add
ficoms
bound
loop
movsl
lahf
cltd
movsb
out
fbld
dec
dec
hlt
pop
in
lret
sub
and
mov
mov
mov
loop
pop
or
push
jno
or
rorb
clc
add
test
jno
push
in
cmp
jo
js
lods
cmp
in
xor
xor
push
jg,pt
push
fistl
add
test
loop
xchg
push
push
and
and
push
pop
dec
out
imul
jno
mov
insl
mov
inc
mov
ja
mov
cmp
sub
lahf
sbb
test
sbb
in
loopne
mov
nop
lret
das
lcall
sbb
lahf
in
loope
pop
add
xor
sarl
cmpsb
lods
push
repz
inc
jae
adc
dec
aaa
jmp
dec
jle
fisubrl
ljmp
test
mov
call
pop
aam
cmp
shl
jge
lahf
int
aas
fs
pop
cmpsl
in
inc
push
dec
call
push
add
insl
pop
pop
xchg
ret
test
unpckhps
mov
push
inc
sub
movsb
loope
mov
lcall
insl
repz
arpl
mov
inc
insl
out
stc
mov
jne
popa
mov
fnstenv
pop
repz
lcall
dec
inc
dec
mov
adc
lds
into
mov
je
pop
adc
fcmovb
mov
mov
les
push
xor
push
iret
or
aad
int
xchg
movsl
into
pusha
xchg
cld
jp
add
lahf
adc
mov
aam
mov
or
adc
jp
jp
sub
in
call
aas
aas
iret
push
sbb
bound
ret
push
hlt
pop
cmp
push
in
iret
fsubl
dec
fadds
les
in
dec
int3
and
test
iret
add
xchg
cli
jle
xchg
stos
ljmp
dec
pop
add
hlt
pusha
fyl2x
adc
shrb
decl
mov
pushf
push
mov
arpl
pop
popf
push
cmp
cmpb
and
aad
sbb
cmpsl
jae
fnstsw
push
xorl
loopne
fbld
not
mov
jmp
adc
pop
xlat
fdivrs
dec
popf
inc
mov
in
add
mov
jns
inc
adc
jge
pop
mov
push
insl
dec
fnstenv
lods
mov
xor
gs
mov
leave
add
repnz
and
mov
dec
xchg
push
stos
das
push
sbb
xlat
mov
in
sbb
gs
pop
or
mov
test
mov
fxch
lods
mov
jge
cmpsl
push
xchg
aam
stos
cmp
inc
push
jge
pop
xchg
mov
cmpsb
popa
adc
lret
ljmp
mov
in
dec
push
je
scas
jl
sub
push
ds
xor
shr
mov
repnz
mov
aaa
fcoml
jns
push
and
scas
adc
add
dec
in
jmp
mov
sub
cmc
in
call
add
xor
adc
mov
cmc
leave
ficoml
sub
sbb
out
mov
dec
mov
sbb
jp
add
ror
dec
inc
mov
les
xor
repz
sbb
and
outsl
mov
push
test
and
push
and
sahf
jb
mov
inc
cmp
xlat
xchg
lods
out
pushaw
rcrl
arpl
mov
sub
shl
fistpl
mov
push
stos
mov
rorl
pusha
inc
add
add
ljmp
ja
adc
mov
add
les
outsl
sahf
push
jb
sbb
ss
mov
addr16
inc
push
push
mov
jnp
aam
enter
mov
dec
dec
test
xchg
cmpsb
in
lds
dec
movsb
add
jns
cwtl
adc
xlat
pop
movaps
cmc
cmovle
and
std
dec
xor
mov
sbb
flds
adc
jle
mov
jmp
rorl
jns
andl
lea
or
pop
mov
pop
enter
std
in
jmp
ret
xchg
lcall
stos
jl
pop
sbb
and
iret
push
nop
addr16
push
pop
jno
jnp
xor
push
data16
add
add
or
cmp
roll
in
mov
mull
xor
imul
dec
sbb
cld
xchg
test
mov
sub
movsl
cmpb
cmpsb
mov
push
decl
inc
int3
adc
mov
cmc
jne
mov
cmp
mov
mov
insb
mov
mov
jp
fstpl
bound
je
sbb
fdivrl
xchg
cmpsb
mov
pusha
cld
scas
adc
sbb
xor
inc
jb
xchg
push
stos
push
mov
cwtl
push
imul
add
cmpsl
and
dec
mov
mov
mov
repz
mov
xchg
mov
add
fs
xchg
pop
es
test
shl
ss
sbb
mov
pop
sub
ja
mov
sub
xor
clc
lds
fimuls
add
mov
xor
ret
push
std
mov
xchg
insb
ucomiss
stc
in
aas
xchg
int
xor
adc
lds
and
lret
mov
icebp
add
jnp
push
pusha
arpl
pop
pusha
sahf
gs
ljmp
bnd
jl
pop
push
mov
and
ret
sti
xchg
mov
lds
mov
loop
movsb
das
pop
mov
filds
insb
xchg
cmp
mov
mov
rcrl
movsb
addl
mov
insl
inc
mov
cmp
cmp
cmp
clc
js
jge
iret
add
pop
mov
pusha
push
jnp
shrb
jg
mov
out
pop
mov
pop
push
andl
test
sub
jge
pusha
and
push
lods
stos
xchg
pushf
fbstp
jmp
sarl
adc
lcall
mov
in
mov
rcrb
je
or
pop
loop
adc
les
mov
lock
push
push
jg
mov
test
in
and
lods
insb
icebp
dec
adc
lock
and
int3
cltd
and
adc
outsl
mov
cmp
into
jp
je
and
mov
in
ffreep
ret
mov
aad
setb
push
aaa
push
add
jle
scas
xchg
jge
subb
mov
aad
push
movsl
ljmp
sbb
sbb
push
mov
push
jae
push
lods
imul
add
bound
cmpsb
sub
bnd
mov
call
bound
inc
pop
clc
es
repnz
addr16
outsb
mov
imul
mov
js
in
jmp
mov
mov
data16
sti
dec
lret
mov
lahf
data16
adc
pop
stc
into
push
les
in
loope
out
mov
add
sbb
enter
and
pushl
out
aad
mov
jg
jnp
stc
lcall
loop
xorb
mov
xchg
pop
stos
mov
cmp
out
lods
scas
pop
sbb
ret
mov
loopne
push
lock
xchg
mov
jne
in
cmp
sbb
fwait
jmp
lods
stc
stc
sub
pushf
aad
aad
or
push
add
lahf
mov
scas
rolb
pop
xchg
inc
movsl
ja
pop
lahf
jae
std
fnop
adc
nop
dec
test
push
outsl
sub
xor
adc
sub
mov
lds
sub
lcall
mov
jp
rorl
pop
push
sbb
pop
sahf
sahf
lods
xchg
sub
loope
idivb
push
lods
xchg
xor
cli
pop
lcall
leave
test
sub
dec
pop
or
popf
mov
scas
pop
roll
mov
out
daa
int
clc
mov
lcall
mov
fidivrs
xchg
fdivrs
imul
push
shll
push
int3
shrb
cmpsb
inc
fstp
push
push
jp
or
jp
lahf
adc
pusha
in
adc
in
leave
xlat
pop
xchg
and
fiaddl
popf
outsl
dec
cwtl
stc
iret
mov
add
testl
lea
sbb
mov
or
mov
sahf
pop
dec
and
mov
out
xor
push
jl
data16
leave
cs
jo
rcrb
pushf
in
imul
cs
sbb
jge
mov
push
xchg
inc
aaa
push
test
fs
lock
mov
dec
divl
ds
jecxz
dec
cmc
push
adc
loope
inc
mov
cli
inc
inc
jne
mov
dec
inc
pop
mov
int3
inc
xor
jle
es
push
std
lds
inc
out
dec
into
fcomps
sbb
shlb
movsl
mov
dec
push
call
mov
icebp
outsl
lock
mov
xlat
shrl
je
sub
test
sub
xchg
dec
out
jecxz
dec
das
jbe
xchg
and
and
ret
out
sub
pop
bound
test
sahf
fdivrp
aaa
daa
cmp
jmp
aad
xchg
stc
stos
shrd
push
and
xchg
fadds
pop
aas
push
mov
in
cmp
sbb
mov
adc
push
xlat
jg
dec
ret
jns
sub
adc
out
ds
bound
aas
cmpsb
sub
ljmp
add
mov
lahf
pop
adc
inc
bound
imul
loopne
arpl
mov
test
mov
test
xor
stc
cmp
xchg
in
mov
adc
movsl
popf
mov
jge
fwait
jns
jno
mov
stos
and
inc
addr16
sub
loope
sbb
insb
push
adc
adc
sbb
lods
sbb
or
dec
push
jne
insl
mov
sub
sub
pop
or
xchg
cmc
shlb
aas
cmp
jecxz
fs
out
arpl
pop
adc
mov
and
lcall
sub
inc
outsb
insb
or
or
sahf
add
mov
mov
sbb
sbb
xor
leave
pop
pop
iret
pop
in
jns
inc
and
call
leave
inc
sbb
inc
adcb
sub
cmp
icebp
mov
in
cmp
in
in
fnstcw
dec
mov
jg
or
lret
sbb
leave
or
movsl
dec
xor
ficoml
pop
rcr
mov
outsb
in
lea
mov
mov
xor
push
xchg
ljmp
cli
jno,pt
lret
push
lods
repz
mov
aam
mov
mov
shll
push
xor
shrb
jb
push
adc
xchg
loope
adc
cltd
inc
push
mov
add
mov
jmp
mov
loop
pop
push
or
enter
aaa
mov
sub
pusha
out
outsb
pop
inc
int3
lds
pop
xchg
dec
push
ds
fdivr
movsb
lock
sarb
pop
dec
xchg
or
jmp
inc
xchg
repnz
stos
aad
test
mov
dec
iret
xchg
sbb
lods
xor
fidivl
mov
mov
les
pop
and
ljmp
jo
jg
aaa
jae
pop
xor
sbb
xor
imul
mov
fldcw
enter
or
pop
jne
movsb
sub
mov
lret
inc
mov
mov
pop
mov
push
xor
les
jne
js
orl
inc
aas
mov
xor
imul
outsl
subl
adc
aam
dec
fwait
push
mov
out
sub
dec
lods
mov
dec
and
cmpsl
je
sbb
mov
stc
and
or
sbb
push
adc
jle
push
mov
pop
or
mov
outsl
icebp
les
jge
push
or
or
data16
mov
repz
js
sahf
lods
mov
idivb
mov
jne
das
inc
cmpsl
add
ret
mov
xchg
sarl
jb
outsb
inc
push
or
in
gs
out
add
fs
pop
loopne
mov
pop
imul
out
in
mov
gs
dec
scas
and
pop
arpl
std
cld
div
movsb
int3
mov
cmpsb
pop
stos
sbb
lds
icebp
ss
jg
shlb
imul
sahf
pop
cmp
mov
fchs
gs
jmp
adc
call
and
or
and
sbb
jg
xor
pop
or
stc
jns
sbb
addr16
or
lahf
in
rolb
idiv
int3
sahf
imul
stos
sahf
xor
jno
mov
aaa
dec
scas
pop
mov
in
jecxz
mov
add
xor
rclb
or
call
into
imul
test
sub
push
ljmp
adc
out
sbb
push
fcom
push
shrb
sub
add
sti
sbb
mov
or
lahf
inc
divb
xchg
xchg
xchg
cmp
jmp
jle
insl
in
and
sarb
xchg
ds
xor
adc
aam
add
dec
and
cwtl
dec
cmpsb
adc
fstp
int3
fistpl
repnz
cltd
sbb
repnz
jno
push
and
outsl
xchg
out
add
mov
movsb
sarb
push
xchg
lods
push
stos
insb
inc
or
inc
sub
std
pushf
sbb
icebp
jle
int3
ret
and
inc
dec
cmp
or
mov
mov
pop
dec
mov
bound
fidivrl
ret
int3
rol
pop
outsb
mov
xor
fwait
cmpl
jg
lds
adc
sbb
das
jne
sbb
and
mov
mov
in
push
and
daa
js
sub
cmp
fs
lds
jmp
cmc
adc
pusha
jl
pop
mov
mov
pop
jb
adc
cld
sub
pop
jmp
jmp
push
dec
cmp
jmp
xlat
adc
arpl
add
int
adc
cli
sub
cmpsl
cld
inc
movsl
inc
push
mov
xorl
sahf
ficomps
xchg
xchg
stos
popa
iret
xor
mov
clc
loope
lcall
cmp
sbb
loope
inc
add
push
xor
sbb
movsl
scas
push
enter
fwait
mov
dec
or
sbb
jmp
jbe
int3
dec
mov
shl
mov
adc
jg
and
insl
add
popf
cmp
cmpsl
insl
lahf
js
dec
pop
mov
lret
sbb
rorb
sbb
arpl
clc
test
adc
dec
jecxz
ret
lret
xchg
dec
cmp
add
and
cmp
fidivrs
cmc
xor
out
inc
div
pop
dec
push
and
inc
test
xor
scas
int3
push
mov
jl
xlat
xchg
lcall
rcrl
and
lret
gs
ds
dec
add
in
scas
or
inc
push
cld
sub
add
adc
out
mov
fildl
js
std
call
sub
popa
fstps
mov
lock
movsl
jg
dec
jle
xor
push
xchg
icebp
sti
xor
cmpsb
loopne
adc
sbb
js
imul
addr16
jns
jnp
sub
inc
sub
pop
filds
cli
adc
adc
pop
rclb
in
pop
mov
adc
repz
mov
aaa
jno
push
jmp
sti
jne
aad
mull
fmull
incl
mov
mov
pop
and
xor
iret
sbb
lock
ljmp
adc
mov
nop
je
ret
mov
mov
mov
fucomp
mov
adc
and
add
push
cmp
jmpw
outsl
adc
jnp
clc
mov
inc
jmp
add
out
mov
adc
mov
cmpsl
cs
jecxz
xlat
or
shlb
push
movsb
stc
scas
mov
lock
sbbl
test
lock
scas
nop
out
lcall
jmp
test
lret
jp
jp
fmul
jl
sub
xchg
adc
in
leave
mov
xchg
sahf
cmp
cmp
jnp
data16
pop
inc
std
rolb
push
test
xor
push
adc
push
sbb
out
les
push
sarl
imul
cmp
or
xor
or
dec
jg
jnp
movsl
adc
lods
movsl
in
les
xchg
sub
outsb
outsl
incl
add
xor
xor
adc
or
xchg
bound
jbe
lods
ds
repz
call
cwtl
mov
fisubrs
xchg
add
mov
je
jb
add
pop
adc
lcall
cmpb
sbb
jno
xchg
call
mov
push
jbe
pusha
pop
cmp
mov
pop
mov
mov
adc
jp
dec
jne
jge
dec
mov
and
out
and
and
pushf
test
shl
test
enter
ss
ss
xor
fldt
pop
or
fcomps
shrb
dec
sub
jno
je
xor
or
mov
sbb
or
fisubrl
jnp
pop
push
rorb
es
fdiv
jg
sub
cmp
mov
pop
jecxz
cwtl
stc
fimuls
push
jb
jle
sbb
lcall
loop
jne
add
mov
mov
test
out
lods
jne
test
push
scas
sbbl
xor
cmp
push
xchg
pop
out
pop
adc
xchg
bound
rcll
mov
nop
cmpsl
and
pop
mov
pushf
loope
adc
cs
and
lock
fsubl
or
pop
out
push
cmpsl
xchg
dec
push
nop
mov
mov
dec
ds
sbb
mov
adc
mov
add
fwait
xchg
mov
cmp
xchg
adc
out
insl
pmaddwd
lret
xor
push
jne
push
nop
int
repnz
jle
add
gs
mov
mov
repnz
nop
sti
inc
enter
mov
inc
test
mov
add
arpl
xor
roll
movsb
add
das
aaa
loop
or
cltd
insl
adcl
mov
sti
pop
aad
outsb
popa
insl
stos
add
lods
sbb
enter
push
wrmsr
cld
out
jae
pinsrw
sub
mov
je
test
out
loop
and
mov
arpl
cmp
ljmp
scas
inc
mov
clc
push
sti
test
loopne
or
hlt
or
ja
gs
or
addr16
flds
incb
pop
cmc
mov
xchg
sbb
lret
jp
das
sti
cmp
adc
mov
cmova
fsin
fbstp
sahf
enter
aaa
add
mov
jno
jno
movsb
inc
jnp
mov
push
add
and
mov
dec
xchg
in
fimull
inc
repz
cmpb
sub
cmp
fmuls
jge
insl
outsb
test
sub
inc
xor
scas
push
cmpsb
jns
inc
out
push
mov
fsts
push
sbb
mov
stos
and
int
or
mov
mov
mov
pusha
adc
std
push
daa
adc
mov
rorl
andl
fildll
pop
int3
adc
fs
clc
and
pop
mov
push
negb
clc
mov
push
inc
lcall
mov
ja
repz
imul
sub
ficoml
xor
out
cmp
mov
stos
sub
mov
movsl
ljmp
add
pop
push
push
outsl
int
sbb
pop
inc
int
mov
cmp
inc
je
push
and
and
jae
arpl
outsw
sbb
mov
push
sti
in
inc
inc
xor
int3
cmp
push
loope
shll
xor
pop
lods
into
outsl
add
pop
mov
push
cmp
jge
mov
cs
jmp
xor
push
dec
and
push
mov
inc
push
shl
mov
xchg
ljmp
push
mov
mov
loope
movsb
jb
enter
fdiv
test
or
sub
adc
jae
or
stc
pop
jg
or
jo
mov
fldl
loope
stos
cmpsb
sub
bound
out
cltd
mov
imul
push
out
lret
inc
or
push
sbb
jnp
ss
jg
inc
mov
mov
mov
cmp
cmpsl
push
xchg
ja
push
add
dec
mov
jl
jae
push
add
leave
in
icebp
sahf
adc
fwait
sub
fsts
in
adc
or
xchg
loopne
pop
lret
jns
addr16
test
out
scas
mov
cmc
sub
test
loop
inc
adc
js
and
cmp
cmpl
mov
mov
dec
test
fs
xor
mov
out
fmuls
jae
or
imul
push
push
jb
into
cmc
jns
and
sub
sbb
push
mov
into
ror
or
or
push
add
cmp
jg
dec
or
cli
rcl
jnp
or
mov
shll
nop
adc
xchg
jo
pushf
in
or
and
inc
ljmp
dec
stos
dec
xor
in
sub
cli
hlt
xor
sub
roll
cwtl
shll
in
testb
inc
or
insb
hlt
adc
or
icebp
popa
add
in
les
inc
mov
shlb
jecxz
push
movsb
sub
test
cmp
dec
int3
xor
inc
and
pushf
lods
sub
mov
scas
bound
jns
mov
outsl
aad
repz
and
nop
xchg
push
ja
mov
mov
cmp
dec
inc
pop
add
mov
push
repz
scas
repnz
pop
jae
cmp
iret
sarl
test
add
lret
jmp
mov
notb
arpl
std
dec
ss
cmp
pop
dec
sub
scas
cmp
mov
xchg
jmp
cmp
int3
stos
sub
scas
lods
cli
aas
add
pop
popa
cmc
push
imul
xchg
xchg
pop
scas
push
xchg
fildll
imul
mov
xchg
loope
divl
scas
push
insb
or
cld
jno
fwait
lahf
out
mov
loop
gs
mov
leave
rclb
cwtl
rorb
pop
stos
aaa
mov
mov
jl
scas
xchg
jbe
lods
push
and
pop
test
sbb
shr
cmp
mov
test
and
bound
xchg
stos
movsl
fdivrl
test
mov
adc
sub
enter
add
inc
adc
subb
and
push
jmp
lret
jmp
jo
insb
xchg
data16
pop
sub
jno
add
mov
add
jecxz
shrb
fnsave
sti
movsl
mov
xor
ss
jge
ss
pop
add
stos
repnz
std
pop
nop
stos
mov
lods
pop
jb
push
data16
mov
xor
dec
jp
lret
scas
inc
scas
push
insb
fdivr
iret
in
repz
sbb
cwtl
inc
iret
aaa
imul
jbe
inc
pop
js
xchg
xchg
hlt
sub
inc
jg
out
outsl
xchg
repz
sub
dec
xor
adc
les
mov
out
lret
cmp
pusha
cmp
cmpsl
dec
jmp
push
mov
mov
lods
mov
popf
cmp
pop
testl
and
movsl
outsb
jge
jl
pop
mov
mov
es
movsb
loope
mov
adc
add
test
lcall
adc
jle
pop
sub
sub
push
repz
test
xchg
xlat
push
aad
popf
mov
dec
notl
dec
loope
pop
ret
jae
dec
in
ja
loopne
aad
sbb
xor
or
xor
pop
pop
and
rcrl
cwtl
add
inc
xchg
popf
mov
and
lcall
mov
mov
je
pop
xor
cmpsl
sbb
mov
leave
sub
mov
or
and
push
xchg
repz
mov
addl
jg
rclb
gs
aam
mov
aad
inc
dec
ret
leave
xor
outsb
stos
and
stos
sbb
inc
cmp
js
std
out
arpl
fisttpl
mov
adc
test
das
hlt
lods
xor
call
mov
int3
xor
out
push
mov
jno
mov
and
push
xor
fidivrl
push
adc
ljmp
mov
mov
mov
into
mov
loope
mov
sbb
mov
fcom
outsl
push
or
sbb
cmp
fs
sub
insb
mov
and
or
inc
imull
lea
nop
imul
mov
stos
sub
stc
xchg
inc
push
ret
loope
push
xor
lcall
cmp
jo
test
mov
sub
icebp
jg
into
or
insb
imul
xchg
mov
incl
push
xor
push
inc
ret
xchg
push
xor
sbb
orb
insb
dec
mov
and
pop
pop
inc
jl
cmp
inc
xchg
aam
or
sbb
ficomps
imul
pop
mov
leave
adcl
fs
ret
cmp
fsubs
js
jae
out
lret
stc
or
xchg
stos
fstps
and
ret
rcll
mov
sub
sub
pushl
das
push
mov
fldenv
jg
lahf
insb
inc
leave
mov
cmc
push
sub
hlt
jno
jbe
sbb
repz
xor
out
out
repz
loop
dec
xor
xor
sbb
add
sub
push
enter
cmp
fsubrs
sub
clc
xorl
fstps
test
je
cmpsl
adcl
fcomps
or
stos
std
in
mov
movsl
pushl
or
jb
test
push
lds
xor
inc
and
push
push
sbb
add
ret
lret
dec
mov
outsb
mov
filds
inc
sti
mov
adc
xor
in
mov
push
out
mov
xchg
cmp
add
cmp
xchg
fwait
movsl
repz
pusha
jae
pushf
and
sbb
inc
cmp
jecxz
gs
divl
jbe,pt
xchg
add
shll
sbb
cmpsb
push
pusha
mov
repz
and
fwait
add
imulb
push
fnstsw
xchg
mov
push
and
inc
mov
ja
mov
and
stos
fs
mov
sub
adc
stc
inc
mulb
es
mov
leave
inc
mov
xor
xor
shlb
xor
nop
cmpb
or
pop
ds
shll
xlat
ds
and
sub
faddp
int3
in
xchg
and
or
jbe
xor
inc
mov
mov
movsb
cmp
imul
xor
data16
bound
sbb
mov
loopne
xor
sub
scas
mov
jb
mov
sbbl
sbb
xchg
or
xor
in
inc
aas
inc
jl
popf
xor
adc
cwtl
xor
stc
xor
jbe
or
mov
pop
mov
ljmp
cmp
rorl
leave
imul
test
cs
les
push
lahf
fstl
mov
jge
cli
xor
enter
clc
in
inc
fidivrl
ss
push
add
hlt
add
sbb
in
or
fisubrl
mov
inc
and
call
xchg
and
or
fstpl
or
jo
fwait
inc
fdivl
frstor
xchg
aaa
roll
stos
dec
fwait
rorl
das
inc
pop
outsl
mov
mov
movsl
jg
cmp
dec
mov
repz
dec
and
xor
les
cli
js
sub
hlt
push
ret
jl
ja
add
pop
pop
scas
sbb
cltd
loope
addr16
adc
pop
sbb
push
pop
adc
pushf
push
in
cmp
dec
js
daa
int3
lea
push
jo
sub
loopne
sar
sub
cmc
xchg
dec
fs
loopne
out
inc
push
mov
inc
scas
out
jle
add
jne
sti
pop
mov
cmp
dec
leave
push
and
mov
ret
cmpsb
pop
testb
pop
filds
shll
pop
outsb
gs
adc
and
jl
mov
mov
iret
push
adc
outsl
repnz
jg
imul
int3
or
bswap
sti
adc
hlt
cli
fsubrs
pop
jecxz
dec
pop
jae
stos
xlat
adc
je
je
aas
out
dec
stos
out
movsl
fs
xor
jb
movsl
pop
mov
stos
aam
xchg
imul
inc
leave
or
cmp
add
cld
imul
mov
xchg
adc
sbb
lea
inc
les
out
xlat
lds
iret
jb
push
lea
jno
adcl
jo
pop
sub
insl
insb
test
mov
mov
out
push
movsl
dec
jge
fisubrs
daa
leave
pop
jno
daa
rcrb
dec
insw
cmp
cmp
mov
push
dec
mov
fwait
bound
sub
cli
fldl
push
pop
sub
pop
shrd
xchg
jg
aas
add
insb
mov
fwait
jge
fisubl
mov
mov
cmpsl
cld
add
mov
movsb
fmul
dec
pop
out
add
cmp
stos
xor
jge
xor
jp
dec
push
ss
bound
pop
adc
sbb
sub
inc
mov
jg
inc
push
inc
xchg
lods
mov
or
shlb
pop
mov
and
stos
dec
push
mov
xor
imul
shlb
data16
in
jnp
adc
sahf
adc
jbe
add
dec
push
lret
inc
ja
fnop
dec
jle
shlb
xor
sub
or
pop
sub
push
mov
push
insb
sarb
pusha
lret
cld
ja
test
mov
jae
mov
and
insb
cmp
jo
pop
push
fisttps
jmp
insl
mov
inc
push
insb
sbb
or
mov
test
hlt
and
or
sbb
push
jns
mov
addr16
cmp
fcomps
divl
ficomps
lods
or
mov
xchg
mov
and
ret
push
cmp
add
data16
mov
shll
sub
hlt
mov
loop
mov
test
scas
push
mov
xchg
mov
insl
mov
jbe
orb
sbb
fidivrs
jae
in
lds
aaa
pop
in
pop
push
push
pop
and
push
pop
mov
out
int
jbe
dec
mov
int
add
fldenv
jnp
mov
rcll
mov
push
xorb
push
cmp
insl
xor
sbb
aaa
ret
pusha
cmp
inc
sti
jns
loopne
or
and
sahf
movsb
mov
jns
in
adc
push
cwtl
add
les
or
nop
or
or
jmp
int3
xchg
inc
mov
out
or
fistps
mov
pushf
out
sbb
ret
push
popf
xchg
aas
rsqrtps
ss
push
mov
fimuls
push
mov
data16
jecxz
jmp
in
cmpsb
mov
jmp
xchg
js
mov
scas
je
mov
shlb
scas
imul
sbb
inc
out
mov
dec
push
sbb
addl
outsl
repnz
lret
sub
repz
mov
inc
sbbb
repz
mov
loope
jno
fstl
inc
div
aas
icebp
test
ljmp
test
add
out
xor
movsl
int
addb
outsl
mov
ja
cld
add
or
mov
clc
test
rolb
inc
rorl
push
fnsave
loope
mov
push
ds
xchg
out
out
sti
aaa
insb
test
out
sbb
test
sti
push
adc
cmp
adc
adc
and
das
jmp
out
icebp
sbb
pop
xchg
inc
outsb
loope
fcomps
cli
adc
xchg
cmpsl
bound
mov
cs
rorb
sarl
jg
push
dec
aaa
stos
out
xchg
mov
push
add
daa
movsl
lcall
ss
adc
inc
out
push
vphaddbq
leave
int3
mov
imul
xor
loopne
mov
push
imulb
xchg
sti
lahf
sti
xorl
pop
clc
and
lods
push
cmpl
pop
mov
in
js
enter
mov
and
xor
pop
mov
xor
mov
pop
into
test
fucom
negb
orl
mov
add
cmp
and
or
in
sub
sub
movsb
xorl
out
adc
dec
stos
adcb
pusha
pusha
push
out
pop
lea
mov
or
ret
insl
sub
and
mov
cmp
mov
jl
jbe
fs
sub
sub
rcrb
xchg
shrl
xlat
and
xlat
out
sub
lods
lods
dec
push
push
sub
jmp
push
mov
std
sbb
lret
inc
aas
cmpsb
lock
fcmovb
out
out
mov
mov
loopne
pop
xchg
cli
cmc
out
scas
cmp
dec
in
mov
jne
adcb
mov
inc
jp
sbb
pusha
mov
js
ret
bound
cmp
sbb
sbb
mov
imul
mov
sub
pop
les
out
xchg
mov
cmp
out
in
adc
jle
mov
jg
aaa
mov
xor
iret
in
cmp
fistpl
adc
adc
sti
dec
sahf
jp
jmp
pop
jb
jg
push
ret
xchg
jne
rcll
mov
mov
cmp
mov
xchg
in
bound
loopne,pn
jo
sbb
stos
rorb
subw
xchg
aam
outsl
pop
add
test
imul
in
pop
movups
sbb
aas
pop
ds
test
test
pop
out
mov
sub
fisubl
mov
pop
xchg
mov
inc
jg
inc
imul
fists
xor
lar
sub
cmp
into
sbb
cmp
sub
shll
lods
push
sti
jne
pop
or
arpl
pop
cmp
sbb
jnp
xchg
rcr
mov
subb
pop
addr16
add
jl
pop
pusha
add
jmp
xlat
or
cmp
sbb
pop
mov
mov
jb
ss
mov
and
stc
aaa
iret
mov
cmp
mov
or
out
or
and
jae
push
xchg
mov
and
mov
xchg
insl
mov
pop
sub
loop
pop
and
or
icebp
mov
out
dec
pop
and
aam
inc
outsl
sbb
push
jmp
lahf
pop
jp
aad
mov
cmp
fwait
sbb
or
in
add
imul
inc
fistl
adcb
sbb
cmp
cmpb
ss
inc
lock
inc
and
dec
xor
aaa
loop
sbb
sbb
pop
arpl
or
jl
aaa
xor
je
les
int3
outsb
xchg
dec
mov
jne
mov
sysexit
jecxz
jne
pop
lea
push
idiv
das
jno
arpl
clc
lahf
pop
sahf
enter
add
nop
fists
push
mov
sub
mov
push
dec
cli
xchg
test
mov
in
mov
fdivs
ret
adc
inc
xchg
adc
in
add
mov
push
push
movsl
cwtl
scas
mov
iret
sub
or
fwait
cmp
jmp
xor
jmp
jmp
outsl
fistpl
push
shrb
fnstsw
leave
mov
and
mov
jle
jl
mov
enter
cs
dec
push
xor
lods
inc
inc
xor
pop
dec
pop
mov
mov
mov
adc
sub
inc
movsl
cmp
pop
je
movsl
pop
daa
sub
cmp
psubd
xorb
adc
iret
mov
mov
jbe
jl
jns
decl
cwtl
mov
mov
int3
sarl
xchg
nop
push
cmp
hlt
dec
in
and
rcl
imul
dec
pop
in
out
cmp
dec
popf
jae
repnz
jmp
jp
adc
push
dec
in
repnz
mov
pop
in
xor
jmp
lea
mov
lods
xorl
mov
shlb
iret
jnp
daa
mov
sub
cmp
pop
lret
repnz
repz
arpl
mov
dec
lock
mov
dec
inc
aam
cwtl
dec
or
xchg
mov
cmp
mov
pop
jecxz
push
std
fwait
movsb
adc
xor
mov
cmp
push
mov
and
mov
pop
xor
and
frstor
xchg
pop
mov
sbbl
mov
loope
fdivl
jle
sub
xor
jbe
sub
and
cltd
cmp
jmp
jno
jl
faddl
repz
mov
xchg
jge
dec
adc
add
cmp
das
fisttps
mov
cli
push
cmp
push
out
mov
mov
repz
xchg
es
in
add
pusha
push
fnstenv
mov
mov
sbb
pop
sahf
stos
loopne
sbb
lcall
hlt
lret
dec
xor
iret
cmp
adc
or
dec
ljmp
adcl
in
aam
imul
loopne
fxch
scas
ficoms
mov
xchg
xor
shrl
pop
sub
push
mov
sub
dec
je
outsl
mov
movsl
inc
loop
scas
jo
dec
push
add
pop
mov
jns
loop
shrl
pop
je
inc
mov
ja
xlat
pop
fisttpl
gs
mov
arpl
jecxz
clc
cmp
xchg
pop
pop
xor
ljmp
push
hlt
insb
je
push
std
inc
gs
inc
repz
xacquire
popf
jg
cmp
add
push
les
fistl
pop
adcb
out
mov
xor
stos
mov
clc
negl
mov
push
mov
jns
jo
xchg
sub
andl
push
test
jnp
fwait
xor
mov
add
and
shl
or
test
in
fucomp
cmp
add
mov
jp
and
mov
aas
aas
shrl
sbb
subb
cmp
pushf
push
mov
subb
mov
lret
scas
push
cmp
mov
cmovns
popf
ret
jns
subb
sbb
mov
bound
clc
aaa
mov
popa
clc
cmpb
loop
mov
fwait
out
sub
pop
in
jp
push
maskmovq
fistpl
leave
stos
mov
mov
push
sar
movsb
push
das
adc
addr16
repnz
movsb
jnp
decl
imull
mov
cmpsb
ret
adc
xor
subl
push
mov
adc
adc
out
movb
mov
mov
pop
fistpll
xchg
push
ret
mov
int3
add
or
bts
pop
mov
sbb
cld
mov
movsl
push
les
cs
xor
jmp
call
inc
gs
fstps
sahf
xchg
mov
ds
pop
arpl
mov
or
add
mov
loope
dec
fstps
mov
popl
jae,pn
inc
icebp
xor
inc
insb
dec
jle
mov
or
insb
sub
hlt
cmp
cld
aaa
in
adc
fdiv
xor
je
jmp
xchg
gs
out
arpl
maxps
xchg
iret
mov
cltd
mov
dec
push
das
arpl
mov
cmc
sbb
and
es
dec
adc
mov
ljmp
int3
xchg
jo
jmp
dec
and
add
mov
sbb
or
mov
mov
dec
cmovbe
sbbl
pop
mov
push
leave
shll
loop
mov
push
imul
mov
dec
insb
leave
sbb
add
inc
mov
popa
lods
inc
in
lock
or
out
arpl
arpl
sahf
dec
insb
das
or
mulb
push
or
fstpl
mov
cmp
or
mov
addb
inc
jp
add
data16
pop
sub
jae
test
sbb
cmp
push
ds
xor
test
cwtl
cli
sbb
call
mov
adc
push
mov
push
mov
jno
inc
adc
aas
cmp
mov
pushf
dec
mov
cs
adc
loope
add
jl
dec
inc
inc
xlat
inc
insl
mov
or
add
pop
cwtl
mov
push
mov
sbb
push
fmulp
jae
add
popa
bound
mov
mov
fdiv
out
test
scas
jg
jmp
add
push
dec
lods
fidivrs
cmc
mov
js
cmp
subb
in
xor
xorb
push
jns
dec
pop
ja
cltd
aaa
popl
pop
xor
data16
dec
xchg
fwait
or
xchg
push
lahf
and
push
es
add
pusha
inc
jns
leave
xor
into
scas
rorl
popa
cld
pushf
jle
push
jae
jmp
sbb
xchg
cmp
push
leave
fisubrl
inc
divb
es
mov
loope
pop
or
jne
out
mov
or
into
xchg
dec
sub
sbb
fildl
movsb
dec
jae
push
adc
xchg
sbb
push
lcall
aam
insb
fcoms
add
sub
ret
push
or
inc
adc
dec
in
sbb
jae
jae
out
out
mov
pop
add
rcll
cmpsl
mov
cmp
mov
and
popa
ds
lret
ret
out
xchg
xor
nop
loope
mov
dec
xor
mov
neg
mov
daa
mov
add
xchg
fs
aaa
iret
and
xorl
cmp
or
jp
pop
mov
mov
andb
or
jno
lret
test
mov
mov
push
push
ds
sbb
mov
xor
sub
cmp
addb
dec
push
aas
sbb
jb
mov
repz
xor
aas
or
inc
lcall
into
xor
rorb
jns
aaa
decl
daa
out
push
jns
add
xchg
pop
fldcw
xchg
mov
lret
dec
push
push
cli
cld
ret
iret
adc
rcr
jnp
sti
add
jnp
lret
mov
ljmp
movsb
mov
jmp
sub
xchg
rcrl
push
dec
xchg
cmpsb
out
andl
mov
inc
mov
sbb
inc
mov
fwait
xchg
xchg
fisttpll
adc
jle
xchg
xor
xorl
fdivrs
mov
pop
imul
mov
push
xchg
mov
jp
in
daa
xchg
mov
stc
inc
xchg
in
xor
jbe
out
inc
add
jmp
adc
es
inc
jns
mov
sahf
nop
movb
aaa
inc
outsl
movsb
lock
xor
cmpsl
mov
imul
jg
daa
xor
mov
cmp
xchg
and
dec
dec
sahf
imul
loopne
sbb
xor
decb
xchg
js
mov
mov
mov
inc
inc
imul
xchg
push
mov
flds
roll
xorl
and
icebp
mov
pop
dec
std
sbb
sub
and
add
add
pop
lahf
dec
add
into
jae
xchg
insb
mov
mov
fldcw
mov
imul
arpl
cmp
ret
jl
inc
in
dec
fdivs
insl
stos
inc
insb
pop
inc
mov
cltd
ret
adc
loope
cmp
cmc
cli
xor
cmc
cmp
iret
ljmp
cmpsl
push
xor
stc
insb
enter
sbb
rcll
push
ret
dec
jle
push
jno
in
xchg
mov
mov
jae
repz
pop
dec
popf
scas
xchg
inc
push
shrl
sti
jecxz
jb
and
pop
dec
cmp
xchg
aaa
imul
addb
mov
jb
les
and
jl
push
or
sbb
adc
repnz
or
inc
add
inc
push
mov
movups
dec
mov
and
jnp
sub
sahf
and
inc
and
add
lds
pop
stos
into
mov
xchg
sub
push
dec
jmp
lea
imul
imul
mov
mov
pop
stos
add
imul
repz
sub
sub
sub
aaa
in
out
and
inc
xchg
test
loopne
dec
cli
sbb
sub
mov
sti
push
add
adc
sahf
insb
addb
adc
add
mov
pop
movl
sub
or
out
in
or
and
sub
lret
jecxz
push
sti
adcl
cmp
cmp
mov
jno
fadds
mov
inc
mov
xor
into
test
mov
pop
insl
dec
daa
outsl
lods
int
jno
push
xchg
fsubr
sub
mov
push
sahf
lahf
sub
fdivrs
xchg
sbb
xchg
in
scas
cltd
adc
lahf
nop
insl
roll
leave
adc
adc
push
loope
popa
mov
and
inc
icebp
and
dec
mov
adc
cmpsl
sbb
or
nop
mov
push
pop
in
xchg
outsl
and
mov
mov
enter
cmpsl
xchg
sti
mov
loopne
leave
xchg
dec
pop
push
jne
les
mov
imul
jo
cmp
test
inc
fcompl
pop
sub
sbb
daa
push
mov
jge
mov
fdivrs
xchg
fists
sub
lret
or
sti
cmpsl
push
aam
mov
dec
mov
mov
enter
inc
ret
icebp
pop
push
lods
push
mov
out
mov
cmp
cmp
mov
in
add
cmp
sub
sbb
scas
mov
roll
inc
lods
mov
jbe
pushf
jb
test
jg
cld
aaa
aad
lock
mov
cmp
mov
into
repz
jmp
mov
jo
rolb
push
mov
aam
jne
loop
sbb
or
pop
xchg
mov
adc
divl
scas
sti
dec
mov
sub
cmp
mov
add
out
mov
nop
pop
pushl
pop
bound
jno
sub
into
jb
mov
nop
sub
dec
adc
dec
nop
movsb
ljmp
js
mov
sub
loop
divb
push
xor
lods
or
test
fbld
inc
aam
imul
cmp
cmpsb
enter
xchg
mov
push
iret
imul
dec
xchg
call
int
sbb
mov
pop
xchg
jecxz,pt
mov
jge
lcall
mov
sbbb
xor
push
outsb
push
mov
fldt
js
sub
bound
or
nop
xor
sub
jno
mov
dec
xor
sahf
fmuls
pop
outsb
lea
lahf
pop
mov
sub
jecxz
sbb
and
mov
jns
push
jg
mov
xchg
mov
nop
je
bound
xchg
sub
stos
sbb
push
jb
push
js
ret
loop
sub
pop
pop
inc
or
dec
or
add
fwait
mov
lret
enter
xor
fsubl
lods
cltd
pusha
add
fucompp
movsb
and
shrl
xchg
adc
jmp
jge
xchg
xor
les
insb
cs
pop
aaa
add
or
mov
xchg
sbb
push
into
nop
stc
gs
mov
mov
sub
sub
std
movsb
dec
jmp
sub
in
mov
mov
xchg
lcall
xchg
push
loopne
and
sub
jl
movsb
mov
repz
and
jb
mov
mov
dec
andb
aaa
jmp
out
xchg
sbb
xor
daa
gs
mov
xchg
cmp
inc
push
aas
inc
push
rclb
cmp
adc
inc
movsl
mov
pop
dec
les
xchg
sarb
ds
out
enter
push
push
test
lock
imull
jp
imul
aam
popf
mov
out
sub
or
dec
xchg
roll
or
sbb
pop
addb
pop
adc
js
mov
icebp
addr16
mov
inc
mov
pop
cmc
sbb
stc
adc
adc
shlb
push
sub
mov
jo
sbb
jns
dec
popf
popa
jns
xchg
xchg
pop
or
inc
mov
ret
sarb
stos
movsb
mov
iret
mov
jl
sbb
mov
xchg
nop
push
mov
bound
out
mov
pop
pop
push
cli
jecxz
movsl
mov
adc
push
sub
and
adc
jge
adcb
pusha
movsb
jmp
cli
addr16
in
addr16
inc
xor
mov
mov
xor
clc
dec
mov
add
out
mov
sahf
iret
sub
mov
lret
mov
add
push
loope
testl
jbe
add
js
es
mov
xlat
test
das
int
movsl
aad
push
pop
data16
dec
sbb
sbb
ja
dec
xchg
mov
xchg
js
xchg
sub
stc
add
out
sti
lcall
mov
mov
add
out
div
mov
ss
push
xchg
jb
jbe
stc
mov
ss
jae
in
sub
xor
xchg
or
sub
adc
sub
mov
rcll
adc
jle
xchg
loopne
mov
lods
jb
popf
cmp
pushf
andb
mov
add
mov
add
std
test
xor
sbb
inc
push
rcrb
adc
adc
pop
dec
jecxz
sarb
xchg
gs
xchg
jo
push
or
lds
negb
cmp
decb
push
leave
sub
dec
jns
sbb
repz
inc
or
pushf
xchg
xchg
sbb
jne
pop
mov
testb
mov
pop
mov
out
jle
test
sti
xchg
out
fcomps
pop
adc
popa
cmpb
mov
mov
pop
fdivs
sub
lret
add
sbbl
daa
sub
or
sbb
stos
adc
or
rclb
dec
or
cwtl
jge
xor
or
fmull
fdivp
sbb
jns
jmp
xor
dec
pop
push
imul
xchg
inc
out
scas
jle
adc
xchg
pop
negb
scas
mov
ret
sub
cmp
xchg
pop
andb
daa
push
lock
fcomip
cli
and
mov
aaa
add
pop
mov
xlat
dec
fsubrs
imul
enter
and
call
or
mov
xchg
cwtl
negl
js
jmp
rol
cli
or
dec
mov
inc
cmpl
mov
rolb
pop
sbb
jp
dec
imul
js
sub
push
pop
add
and
adc
xchg
dec
mov
popa
mov
sbb
sub
cmp
mov
stc
dec
mov
sarl
pop
jne
adc
mov
leave
mov
inc
imul
inc
sbb
lret
je
cmp
sbb
add
sbb
mov
sahf
imul
cmp
int3
add
stos
aaa
fsubrl
insb
imul
and
mov
lds
mov
nop
cmp
testl
lods
xchg
push
jno
insb
js
push
sub
inc
call
loopne
mov
outsl
out
lock
pop
mov
popa
punpckhbw
adc
ds
or
shlb
pushf
ja
shll
or
jg
push
mov
and
pop
pop
cmp
outsl
dec
add
push
xchg
push
subl
outsl
int
mov
sub
popf
sbb
scas
int3
mov
xor
stos
rorl
shrb
adc
orl
push
sbb
inc
movb
aas
sbb
xor
mov
inc
cmp
jno
mov
xlat
pop
cmc
xchg
push
int
fs
popa
shlb
mov
dec
lahf
test
stos
jb
sahf
xor
fbstp
push
imul
out
loope
outsb
jl
mov
popa
sbbl
mov
lock
pop
inc
adc
sbb
loopne
xor
dec
adc
decb
ja
icebp
lods
ret
test
movsl
or
data16
repnz
call
and
subl
jge
shlb
pop
jp
adc
movsb
add
lea
lahf
insb
xor
jb
mov
add
movsw
inc
lds
inc
idivl
push
and
and
leave
mov
test
add
push
xchg
adc
lock
sbb
mov
push
pop
mov
je
mov
mov
jno
stos
aam
shrl
enter
dec
pushf
aam
lfs
inc
aaa
aad
xor
xlat
xchg
shll
or
push
pushf
inc
push
repnz
loopne
movsb
data16
jns
and
repnz
in
lcall
and
fcoml
mov
aam
cmc
movsb
pusha
fstl
push
or
inc
xlat
rol
sub
dec
inc
enter
xor
jle
lret
and
push
sub
inc
jb
pop
jg
pushf
cld
sbb
in
or
or
jae
aad
sub
fiadds
pop
sub
idiv
jns
sub
outsl
xchg
testb
push
push
mov
ljmp
cmpb
outsb
xchg
outsl
pushf
cmc
clc
and
aaa
pop
sub
in
or
sahf
jp
cmp
cmp
inc
jnp
push
test
clc
mov
or
sbb
stc
inc
cld
dec
dec
pop
adc
hlt
aad
jmp
mov
dec
adc
mov
mov
in
xchg
mov
mov
jae
sbb
andb
add
pop
jne
inc
pop
mov
scas
movsl
cwtl
add
fdivl
add
mov
xchg
add
and
push
sbb
insb
sub
out
jns
repnz
push
push
fists
cs
loope
adcb
jno
repnz
out
sub
stos
hlt
movsl
mov
test
xlat
sub
push
push
and
mov
iret
dec
jge
pop
pop
push
xchg
out
out
or
test
dec
fnstenv
je
push
jae
xchg
dec
test
adc
nop
push
es
addb
cmp
outsb
leave
lods
dec
icebp
mov
nop
pop
jecxz
adc
ja
ret
cltd
and
sarl
lea
cli
fstl
sti
xchg
sbb
out
pop
xchg
loopne
clc
adc
call
pop
inc
dec
dec
out
dec
cmpsl
push
jb
cmp
movsl
out
popa
shrb
lods
in
push
mov
sbb
dec
enter
dec
stos
dec
jl
out
xchg
push
jae
and
ljmp
or
mov
ret
mov
jno
mov
push
cmp
iret
ret
in
lods
sbb
xchg
std
jmp
clc
notl
xor
es
or
adc
insl
in
pushf
mov
in
cli
mov
lods
push
inc
and
ret
pop
mov
sub
aam
pop
mov
insb
data16
ljmp
add
mov
movsb
and
cs
xchg
inc
xchg
add
sarl
scas
insb
sub
das
inc
in
jecxz
mov
push
jle
mov
cmpsb
mov
push
popf
pop
movsb
pop
cltd
idiv
out
out
sbb
mov
ljmp
mov
rorl
int
cmp
test
imul
mov
adc
xor
dec
jle
out
mov
or
movsb
ret
xor
stos
out
pop
faddl
jle
push
out
add
cld
stc
nop
xchg
out
sbb
rclb
sbb
jge
aaa
ret
mov
mov
push
mov
lea
jb
or
push
inc
test
mov
add
lea
pop
les
fisubrl
decl
rol
ret
cltd
arpl
mov
jg
nop
es
xchg
xchg
mov
cmpsb
scas
push
jle
mov
negl
test
pop
adc
ljmp
movsl
addr16
jge
mov
and
jbe
lea
test
rcl
mov
sahf
jnp
stos
ret
add
rclb
outsl
mov
jmp
aad
in
andb
cmp
mov
mov
test
loope
add
mov
dec
mov
xor
xchg
sbb
adc
mov
outsl
hlt
popa
push
ret
mov
xchg
jge
xor
clc
lret
adc
inc
nop
and
adc
testb
mov
and
jecxz
mov
mov
dec
mov
outsl
push
add
and
imul
addr16
sbbl
cmpsl
dec
mov
scas
insb
xor
int
adc
faddp
lret
pushf
dec
xchg
cmpb
add
rcrl
dec
and
mov
jmp
mov
lahf
or
mov
mov
incb
movsl
xchg
sahf
or
loop
out
imul
mov
fldl
insb
leave
mov
insl
mov
test
ror
scas
inc
mov
test
xchg
adc
mov
dec
outsl
js
les
pop
leave
dec
call
push
sahf
push
gs
mov
adc
mov
adcb
aaa
xor
dec
lret
pop
jo
or
imul
sub
jnp
sbb
jnp
aaa
or
jp
into
js
daa
cwtl
sub
cmp
sub
push
shl
lret
mov
outsb
mov
jno
int
les
adc
mov
cltd
shll
arpl
jmp
imul
cli
add
lret
sub
lret
cmp
jmp
mov
add
repnz
adc
test
test
pop
mov
aas
push
movsb
jae
dec
es
jae
sahf
inc
ret
sti
mov
cld
jo
hlt
jno
int
xor
pop
sub
jl
inc
call
add
jo
sub
sub
in
icebp
xor
or
jo
add
subb
jne
jp
sbb
xchg
dec
es
jns
arpl
mov
sbb
push
adc
adc
sub
lcall
sahf
sbb
ljmp
ret
xchg
aam
pop
sub
loopne
js
xor
pop
and
dec
fistpll
insl
inc
xchg
xor
and
and
dec
and
cld
lcall
mov
pop
repz
int
xchg
xchg
movsl
dec
inc
push
fdivrs
adc
mov
push
imul
cld
xchg
icebp
fisubrl
js
orl
xchg
cmpsb
push
inc
dec
and
dec
cmpsb
add
and
ds
mov
sbb
xor
cltd
ja
sbb
pop
insl
mov
int
imull
iret
mov
sti
repz
daa
ljmp
push
mov
test
cmp
pushf
jne
pushf
xchg
fs
pop
push
dec
arpl
mov
cltd
inc
bound
shrb
push
fisubrl
enter
cli
jne
arpl
mov
pop
add
push
xor
in
aas
pop
xchg
popa
or
push
cld
shl
pop
cwtl
jbe
insl
test
shlb
call
cmp
pop
push
lret
insl
xchg
dec
pop
add
jmp
test
stos
fbstp
ret
out
out
or
xchg
push
icebp
mov
repnz
dec
iret
mov
adc
cmc
jne
sub
push
je
dec
cmp
jp
sbb
mov
xor
cmp
pop
and
test
sub
out
mov
sub
push
mov
mov
and
insb
adc
sar
cwtl
mov
scas
bound
js
sub
jne
xor
sub
sarb
sbb
sbb
jle
movb
jno
and
inc
xchg
pop
mov
xchg
pusha
add
mov
stos
jbe
das
add
xchg
lret
andl
fiadds
ss
js
ja
sbb
negb
and
sbb
mov
ret
mov
cmp
lcall
pop
sub
pusha
pusha
xchg
lock
add
mov
test
je
cmp
insl
pop
xlat
sub
mov
xchg
repz
scas
addr16
pop
push
jge
arpl
add
mov
add
xor
data16
icebp
je
ljmp
mov
mov
jl
shl
scas
ret
clc
or
add
mov
cmpsb
cli
mov
je
xor
gs
cwtl
adc
xchg
cltd
xchg
testb
adc
and
mov
gs
xchg
cwtl
or
jmp
notrack
icebp
push
sbb
mov
jecxz
std
sbb
stc
jno
dec
andl
test
dec
pushf
push
jne
mov
es
and
jge
push
test
cmp
lds
sbb
testb
mov
add
arpl
sbb
sbb
and
xchg
fcomi
lret
pop
xor
adc
adc
ss
test
dec
xchg
cmc
clc
mov
nop
mov
mov
jb
jp
loope
dec
jnp
push
xchg
test
cmc
lret
ss
std
enter
mov
jns
bound
outsb
push
xchg
jmp
lods
inc
rdpmc
xchg
das
pop
scas
es
test
push
popl
fidivs
out
xchg
mov
inc
inc
sub
add
jge
out
sub
shrb
jbe
test
das
cli
in
mov
popf
testb
loope
add
pop
popa
sub
jecxz
lds
jle
and
hlt
xor
mov
xor
and
push
mov
dec
jecxz
push
xchg
mov
fstpl
sbb
fwait
adc
lahf
cs
arpl
pop
sub
xchg
roll
cs
aam
stos
add
and
push
js
jg
ljmp
das
out
mov
mov
popa
mov
push
mov
into
aam
lcall
out
cmc
addr16
sbb
ret
cld
cmp
add
mov
xor
sbb
in
adc
iret
inc
lahf
adc
add
mov
sbb
mov
mov
fldt
lcall
jp
lock
test
ss
fildll
rorl
in
sub
push
jae
arpl
mov
dec
in
pop
or
and
in
in
sub
and
adc
inc
sbb
sbb
hlt
sub
sbb
cli
rcll
fbld
std
or
dec
rolb
adc
push
pop
inc
lods
imul
scas
pushf
ja
in
push
fs
repnz
cld
mov
mov
jp
loop
div
xor
dec
imul
imul
test
pop
mov
lret
inc
cmpsl
arpl
cltd
insl
pushl
pop
pop
lcall
mov
bound
aaa
cmp
rcr
movsl
push
imul
lods
push
xor
cmp
sbb
jecxz
xchg
mov
cmp
scas
imul
xchg
inc
lods
ret
int
ljmp
sbb
stos
shl
add
inc
xor
je
xorb
xor
pop
jae
or
jecxz
popa
inc
pop
and
addr16
icebp
hlt
dec
pop
loope
push
and
pop
fdivrp
stos
mov
xchg
jg
repz
pop
and
in
fldt
std
bound
ficoms
iret
add
adc
mov
mov
sub
pop
insl
pop
add
xor
mov
outsl
and
and
repz
mov
clc
fstpt
mov
push
out
into
jns
mov
sbb
stc
mov
xchg
pop
leave
jae
fidivrs
in
fmuls
subb
insb
popa
loopne
push
aad
pusha
pop
jp
push
mov
xor
or
fstpl
sbb
popa
push
in
cmp
and
mov
or
in
pop
loop
inc
sub
mov
xor
dec
aad
lds
sahf
ret
sub
push
cmp
mov
mov
aam
out
lahf
mov
jge
xchg
movl
mov
test
in
xor
push
and
jo
cmp
bound
pop
mov
adc
xchg
jmp
repz
xchg
jne
xchg
sub
xlat
mov
arpl
push
iret
loop
pop
jle
out
jno
sbb
add
out
sbb
outsb
mov
ss
push
mov
pop
mov
add
xchg
inc
mov
lods
push
xchg
xor
movsb
fcompl
and
popf
pop
cmpb
pop
pusha
jp
inc
push
inc
lods
test
xor
cmp
mov
sar
out
xor
pop
scas
int
sti
pusha
loope
ret
cwtl
or
inc
loope
jnp
jecxz
cmpsl
mov
data16
and
mov
mov
aaa
stos
test
pop
adc
cwtl
pushf
rol
call
lcall
inc
or
inc
and
jnp
out
sbb
jno
cmp
mov
in
jbe
xor
ljmp
out
sbb
dec
fisubrl
maxps
mov
fldl
fisubrl
aaa
cmp
xor
test
lea
cld
add
mov
insl
cs
shll
cmp
mov
dec
mov
out
mov
cmpsb
ret
ficoms
ds
push
xor
inc
popf
jne
testb
mov
xor
xor
ljmp
mov
popa
in
in
scas
cmc
or
lds
mov
and
ficoms
add
in
jnp
es
stos
xchg
push
fstpl
mov
mov
clc
xchg
pop
cmpsl
mov
sub
jge
test
add
cltd
andl
mov
cld
stos
add
mov
sbb
daa
ret
and
jae
lahf
or
sub
adc
push
lcall
cmp
cmpsl
adc
pusha
inc
lock
or
shrl
es
arpl
mov
adc
dec
out
in
or
dec
fadds
movsl
pop
lcall
sbb
xchg
fucomp
adc
popa
xchg
cmp
sbb
jge
rcrb
pop
push
inc
and
mov
mov
xchg
xchg
mov
sbb
lahf
lods
je
lahf
mov
xorl
jae
push
sbb
cwtl
cmpsb
stos
divb
jbe
stos
mov
mov
xchg
or
or
nop
dec
mov
inc
arpl
or
sub
xor
and
push
mov
and
inc
fwait
and
mov
xchg
pop
xor
addr16
sub
add
mov
repz
nop
sub
sahf
lods
or
cmpl
das
xor
push
js
xchg
inc
lds
out
out
push
xchg
mov
pop
cld
sbb
sub
mov
jno
mov
sarb
mov
jne
add
and
xor
adc
iret
subl
aas
out
fdivs
addr16
fimull
dec
pop
jmp
incl
add
ret
repnz
outsl
sbb
xlat
push
mov
daa
in
pop
test
cld
add
or
sbb
pop
jns
and
bound
mov
and
and
sbb
jp
inc
add
mov
and
testl
shrl
fidivrs
adc
pop
outsl
xlat
pop
out
cmp
jmp
test
push
test
xor
push
mov
sbb
sbbl
pop
jbe
adc
call
stos
aas
or
mov
xor
sbb
movsb
fildll
cmp
adc
sub
aas
ljmp
dec
loop
ljmp
sub
or
jp
jbe
lret
pop
cltd
movsl
mov
push
sbb
pop
mov
jg
cmp
into
cvtpi2ps
stc
call
push
add
pop
aas
out
push
cld
mov
jns
push
mov
nop
leave
and
sbb
sub
inc
and
cmc
mov
ljmp
push
outsl
sbb
cmp
push
adc
push
pushf
jmp
insb
jl
sub
jno
push
sbb
mov
pop
and
fists
mov
jl
rcrb
pop
int3
xlat
or
cmpsb
loopne
dec
in
sbb
inc
test
inc
mov
scas
xor
cmp
fsubs
xchg
pop
jl
mov
popf
pop
push
clc
adc
lea
xchg
arpl
lock
mov
add
cmp
jecxz
dec
std
sub
sbb
mov
cmp
sub
push
push
aas
out
stos
mov
sub
les
int3
bound
fcmovnu
xor
sbb
mov
cli
test
xchg
jae
xor
nop
ja
dec
rorl
ds
pop
out
cwtl
stos
xor
add
in
lret
outsl
icebp
and
xor
or
fnsave
stos
jnp,pn
ret
xchg
icebp
in
fmulp
scas
mov
cld
dec
sbb
out
out
lods
imul
mov
dec
outsb
inc
notb
push
lods
cmp
mov
je,pt
rcrb
push
outsb
cli
stos
cmp
pop
call
pushf
mov
icebp
mov
inc
mov
repnz
je
sub
out
cmp
jp
rclb
ja
mov
ja
out
aas
std
push
in
xchg
ja
push
xor
adc
inc
popf
adc
push
out
cmpb
int3
fsubs
imul
sbb
pop
test
or
xchg
ret
negl
jl
mov
clc
dec
push
pop
lock
rcrl
out
lret
pop
adc
ja
lock
mov
mulb
xor
aam
rcrl
sbb
sahf
lods
fwait
into
mov
fidivl
dec
fnstenv
sbb
fstl
int
cwtl
pop
sub
mov
test
add
push
repnz
sbb
stos
dec
sub
xor
add
pop
add
push
pop
ror
dec
rcrb
adc
ret
inc
cmpl
mov
pop
dec
fstps
sub
test
hlt
sub
mov
cld
lods
and
fnstsw
clc
dec
jb
add
cmpsl
dec
je
in
pop
adc
je
sbb
js
loop
jmp
mov
lea
add
mov
dec
shrb
test
push
jae
dec
mov
nop
sahf
repnz
sbb
imul
dec
add
aaa
dec
call
gs
int3
addl
sub
and
lds
xchg
push
xchg
ds
mov
lods
enter
out
mov
sbbb
outsb
cmp
dec
xor
inc
rcr
arpl
jp
test
mov
rorb
push
pop
cmp
loope
adc
jp
inc
fsubl
sbb
cmp
jg
cwtl
mov
pop
cwtl
push
dec
and
rcll
sbb
mov
out
sbb
bound
fisttpll
cli
mov
mov
xchg
rclb
daa
jb
jle
dec
pop
cmpsl
jae
sub
fiadds
dec
not
cmpsb
inc
dec
insl
inc
sbb
insl
popf
sub
sbb
pop
insb
jns
sarl
add
repnz
jmp
sbb
sub
adcl
xchg
imul
enter
mov
cltd
cmp
loopne
mov
mov
stos
lea
adc
sbb
push
xlat
pop
pop
ret
xchg
jg
clc
push
fbstp
sub
leave
lods
mov
sbb
mov
xor
in
mov
out
test
movsb
jne
loopne
add
lret
and
push
nop
repnz
fs
push
sub
loop
push
push
inc
jb
bound
adc
push
pop
dec
sbb
xor
pop
fldenv
js
cli
push
sahf
enter
adc
dec
cmp
push
jbe
aas
out
nop
addb
hlt
in
xchg
add
outsb
add
mov
dec
fildll
in
arpl
mov
daa
sar
cld
movsl
and
jl
rcrl
push
pop
nop
cmp
sub
add
orl
jecxz
dec
out
ret
inc
mov
mov
xchg
loopne
fisubrl
movsb
aad
push
push
ret
imul
xorb
lcall
fistl
stc
rolb
pop
fadds
subl
out
fdivl
pop
mov
push
push
cmp
add
or
cltd
das
jno
adc
scas
orl
repnz
leave
shll
cmp
movsl
sbb
je
stc
dec
orl
sahf
dec
pop
sar
and
mov
pushf
push
push
movsb
jae
and
out
out
mov
jne
xorl
dec
inc
ja
addl
push
decb
stos
ja
jb
fisubs
test
inc
push
dec
fidivs
cltd
leave
jle
jl
int
movl
out
mov
sti
pop
xor
cltd
cmp
cmpsl
mov
sub
or
push
lret
jge
roll
pop
jns
pop
int
fcomp
out
arpl
mov
lret
push
icebp
lds
lret
adc
sbb
push
lret
into
notl
sbb
xchg
test
in
std
push
xor
jo
icebp
fadd
sti
lret
out
mov
aaa
sti
mov
cmpsb
fidivrl
cmpsl
sbb
inc
or
push
addl
mov
je
stos
push
aad
pop
mov
inc
ds
shll
inc
xchg
push
inc
adc
rolb
push
sub
add
push
jbe
sub
and
in
push
jp
xchg
cmp
xor
stos
sub
xchg
xchg
pop
adc
mov
mov
jne
in
ss
xor
dec
rclb
loopne
dec
dec
jl
and
arpl
pop
negl
mov
jbe
mov
and
pop
arpl
jnp
pop
and
xchg
loopne
ret
inc
xchg
jns
out
in
lock
fucomi
movsl
jnp
shl
cmp
dec
xor
mov
jnp
push
mov
popa
add
sbbl
add
inc
pop
push
fcomip
mov
push
dec
out
ficoml
pop
pusha
int3
rcl
and
jb
push
jle
in
pop
and
movsb
mov
packuswb
std
dec
xor
pop
adc
stos
mov
mov
add
out
lock
and
in
das
enter
or
xchg
mov
clc
popa
mov
bound
repnz
inc
fmulp
lock
dec
in
outsb
lods
out
cmp
cmpsl
scas
inc
aad
mov
xor
jno
xchg
sbb
adc
mov
xor
xchg
mov
jle
sub
inc
daa
dec
shll
mov
test
inc
repnz
testb
ret
movsb
mov
and
or
adcb
call
add
out
push
cmp
cwtl
inc
cmc
andb
sbb
cli
mov
cltd
jo
add
adc
sbb
std
adcb
mov
xchg
adc
jp
push
push
jp
add
jp
scas
dec
into
fbstp
xor
xor
xor
ds
out
pop
cmp
adc
sti
cmp
push
loop
daa
jno
mov
fcoms
sti
movsb
pop
push
mov
push
and
inc
and
cmp
xchg
aas
jnp
sub
test
leave
cmpsl
sbb
xchg
xchg
test
xor
sbb
sbb
ret
pop
leave
mov
xor
test
xor
fwait
loop
mov
ljmp
ja
sahf
xchg
nop
mov
cmpl
mov
adc
nop
mov
fcomip
int3
mov
cmp
jl
call
inc
je
pop
dec
pop
lea
jge
pop
clc
imul
jns
into
xchg
cltd
pop
mov
shr
or
ds
and
stos
leave
jo
xchg
dec
sub
je
out
mov
xor
dec
movsl
inc
in
fnstsw
movsb
mov
adc
fstpt
lods
hlt
jge
xor
stc
xchg
jne
inc
fldenv
add
inc
pop
xlat
fs
loope
mov
lret
inc
sbb
ret
pop
int
test
pop
xchg
in
mov
push
add
jbe
xor
or
mov
dec
mov
fisttpll
jnp
popf
push
lahf
scas
repnz
and
dec
adc
push
cmp
pop
or
out
xchg
pusha
subb
into
push
cmpsb
int
movsb
dec
arpl
mov
xchg
jnp
call
sbb
lea
dec
loop
and
mov
inc
pop
push
pop
mov
adc
and
push
inc
sub
cmc
mov
ds
test
es
mov
push
pop
sub
pop
iret
cmpsb
push
popfw
cmp
and
push
gs
scas
addr16
outsb
add
mov
sub
jb
pop
mov
sbb
aam
mov
sub
push
jle
adc
pop
sti
mov
mov
lret
sub
xchg
scas
stos
fimull
aad
mov
sub
or
dec
pop
or
test
adc
ljmp
mov
and
and
cld
add
pop
xchg
jg
sub
add
sbb
mov
mov
xchg
adc
pop
pushf
orl
ljmp
je
addr16
xor
test
insl
adc
shll
and
adc
mov
mov
mov
push
mov
push
lea
sbb
dec
jmp
fldenv
or
dec
stos
add
push
mov
aad
stos
aaa
sub
xchg
lret
ret
sub
push
enter
mov
sub
lods
lcall
jg
aaa
sahf
xor
icebp
xorb
mov
lds
fcmovb
sbb
repnz
mov
jne
ret
cmp
popf
aam
mov
xor
mov
pop
mov
sarb
adc
add
push
pushf
dec
and
dec
mov
divl
testl
dec
cwtl
in
rol
mov
jo
push
sub
out
jo
test
xchg
mov
adc
pop
cmp
fisttps
push
push
sti
push
pop
mov
or
xchg
sub
pop
mov
pop
jg
jg
jb
loop
sub
adc
or
jmp
dec
std
cmp
mov
std
push
adc
dec
mov
jmp
push
lea
pop
jbe
in
adc
lret
lcall
and
fimull
xor
add
mov
jp
fstl
popf
mov
gs
dec
fmull
mov
stos
clc
adc
xor
scas
stos
push
movsl
das
xor
xchg
and
pop
push
sub
testb
insl
inc
jnp
jo
sahf
push
cmpb
cmc
adc
xor
xchg
push
add
pushf
mov
lock
out
es
adc
push
stos
pop
mov
xor
cmp
lret
push
rcrb
xlat
mov
sbb
ljmp
mov
jge
jmp
pusha
aas
loopne
iret
loop
xor
leave
jo
dec
jmp
pop
adc
clc
je
mov
and
decl
scas
add
cwtl
movsb
xor
enter
mov
int3
cmc
arpl
adc
xor
push
clc
lock
stos
lock
inc
adc
cmp
push
jo
jne
add
inc
adc
mov
cs
int3
jmp
lcall
pop
mov
sub
mov
scas
loopne
popa
jno
jae
lods
jg
adc
sub
xchg
ljmp
popa
lea
insl
add
shlb
stc
xor
xor
jbe
xchg
fstps
fwait
jg
arpl
sbb
jne
xlat
xchg
dec
inc
rep
inc
std
sahf
stc
mov
sahf
adc
rcrb
call
loope
xor
mov
loop
xchg
jmp
sarb
out
popf
cs
xchg
rcl
dec
xchg
sub
jp
pop
call
or
push
aam
push
mulb
ja
movsb
icebp
jmp
inc
sub
ret
push
add
hlt
mov
in
adc
pop
xor
jo
xlat
or
js
cli
sub
or
or
shr
jp
clc
sahf
out
jb
es
jo
lret
pop
std
call
cmp
pop
int3
cmp
dec
cmp
rorb
sahf
jb
jne
lods
mov
cmp
clc
mov
pop
dec
fcmovnu
bound
pop
test
inc
fwait
rol
mov
fmuls
adc
xor
or
in
pop
xchg
add
sub
ja
sahf
enter
test
call
push
movsl
inc
mov
scas
pop
mov
jp
sbb
out
pop
mov
lock
in
dec
cmc
or
mov
and
stos
pop
lret
mov
mov
add
inc
adc
fldenv
rorl
adc
inc
mov
pop
pop
mov
jl
xorl
out
cli
shr
add
add
icebp
dec
lea
sahf
mov
jg
aaa
inc
sti
push
mov
add
in
shll
out
fidivrs
and
insb
cmpsb
cli
aaa
push
filds
xchg
xchg
out
xchg
push
add
ds
stos
cs
rclb
popa
jg
push
mov
cmp
cmp
adc
push
incb
fs
dec
dec
xchg
xor
sbb
clc
outsl
fucomp
out
fadd
cmc
inc
mov
int3
jl
mov
imul
scas
repz
pop
inc
cmp
cmp
xor
scas
scas
int
in
fcoml
loope
push
out
dec
es
rorl
mov
push
imul
sbbb
pop
adc
mov
or
pop
cwtl
push
enter
adc
jne
xor
push
jg
aad
scas
es
push
jp
dec
shrl
data16
sbb
mov
sbb
push
out
fiadds
xor
stos
xchg
out
fwait
imul
lret
insb
sub
aam
cld
push
xor
ljmp
int
ret
outsb
hlt
sub
adcl
and
scas
clc
cli
jno
es
rolb
jge
or
mov
mov
pop
imul
dec
imul
bnd
mov
loop
mov
and
sbb
divps
and
lods
negb
pop
loop
dec
in
loope
ficomps
push
mov
xor
int3
fs
mov
push
jae
sub
cmpsl
mov
or
mov
add
jp
pop
test
orb
xor
mov
xchg
ja
sub
sbb
push
jp
mov
push
add
sarl
mov
add
adc
mov
in
call
test
mov
adc
fmul
ret
sahf
addr16
in
mov
sub
mov
or
pushf
cltd
test
loopne
ret
repz
icebp
or
xor
in
les
add
inc
or
sub
add
mov
fsubrs
cld
pop
mov
xor
out
jnp
movsb
jecxz
scas
ret
jnp
mov
enter
adc
mov
pop
pop
add
shll
pusha
andb
sbb
roll
fistps
xchg
sbb
add
mov
adc
enter
jmp
push
test
jl
mov
jae
mov
imulb
jle
pop
imul
call
add
mov
jmp
xor
fucomi
jmp
cs
add
jnp
inc
jmp
rol
call
or
inc
adcb
or
sub
add
cli
push
adcl
fadds
clc
mov
ret
mov
inc
xchg
fldt
jp
repnz
movsl
pusha
mov
sub
xlat
add
rolb
cld
xor
lret
push
cmp
ret
add
push
jns
xchg
add
or
jns
fsts
lock
cmpsl
divb
gs
add
rclb
enter
mov
stc
xchg
adc
sub
test
sbb
das
and
push
mov
popf
sbb
mov
jg
movsb
addl
add
in
and
inc
les
pand
inc
lea
lret
add
scas
fwait
dec
fwait
ret
enter
or
lahf
fldl
inc
xor
pop
pop
leave
mov
ret
inc
stos
cli
cld
stos
cs
out
push
lods
iret
sbb
mov
test
pusha
dec
mov
insb
test
arpl
ljmp
inc
ljmp
jecxz
cmp
or
or
pop
add
jnp
stc
pop
sti
jo
xor
jl
arpl
push
js
inc
shll
pop
push
mov
mov
pop
pop
pop
into
in
sub
push
jnp
dec
repz
int3
add
lock
mov
xchg
adc
lcall
lcall
andl
xlat
stos
imul
aad
pop
push
pop
in
test
fdivp
arpl
cmp
and
jb
and
xchg
mov
int
mov
xor
mov
push
into
dec
pop
mov
fsubrs
fs
sbb
ss
cmp
sahf
cwtl
pop
in
and
jecxz
cmpsb
mov
adcl
repnz
loopne
mov
popa
out
dec
lcall
xlat
sub
add
mov
dec
mov
xchg
cs
aas
push
rcll
andb
lahf
pop
xchg
jno
xorl
sti
or
cld
pop
fcmovbe
mov
inc
test
mov
mov
fstl
xchg
lds
push
ds
or
mov
adc
int
insl
inc
cmp
inc
xor
sub
or
xor
cli
push
loopne
pop
push
stos
adc
pop
adcb
js
cld
or
lret
divb
or
push
cmp
std
pop
or
cmc
popl
jmp
out
cwtl
inc
outsl
cwtl
fwait
subl
addr16
sti
in
mov
inc
jo
out
popa
pushf
xchg
jmp
xorl
hlt
testl
stos
push
push
test
out
loope
repz
pop
add
and
mov
out
repz
sahf
es
push
cmpl
cld
ss
fmuls
push
shlb
add
adc
push
cs
cltd
lods
push
sub
popa
pop
lea
cmp
or
mov
jp
sbb
or
add
incb
lret
add
push
mov
in
lea
les
mov
fnstsw
in
dec
inc
mov
or
pushf
mov
pop
ss
pusha
lods
lcall
cmp
mov
jge
add
sbb
rcr
mov
jp
testl
fsts
adc
or
fnsave
mov
insb
adc
clc
icebp
jg
inc
orl
mov
rcl
cmc
xor
sti
push
mov
jmp
jb
or
mov
pop
subb
movsl
mov
clc
sub
pxor
pushf
sub
sub
fstpt
mov
fucomp
jmp
xchg
push
mov
xchg
iret
jmp
daa
mov
and
push
xchg
jp
nop
mov
fisubs
jp
imul
xchg
cltd
cmp
gs
add
sub
push
adc
das
mov
jb
and
pop
or
addl
mov
and
insb
fwait
push
cwtl
lret
movsb
stc
mov
dec
jnp
xchg
pop
and
pop
push
push
or
int3
sub
jae
jl
push
cli
push
imul
daa
jcxz
add
dec
cmp
jns
or
jno
cmp
movsb
sub
repnz
mov
adc
test
sub
jle
test
popf
and
shr
aaa
loop
lret
sub
jge
addb
daa
in
es
insb
pop
in
sbb
stos
jle
inc
mov
adc
xchg
fmull
sub
dec
aas
scas
sbb
mov
dec
cmp
sbb
xchg
subb
pop
neg
cmp
sahf
jmp
cmpsl
loopne
push
loope
pop
pop
pop
adc
xchg
addr16
ja
inc
jo
ja
sub
jae
imul
xor
cmpsl
mov
loopne
ret
in
outsb
cmpsl
sub
jl
sub
cmp
mov
inc
arpl
lret
loope
push
adc
ds
jno
xchg
pop
ror
push
and
cmp
jns
mov
mov
xor
and
pop
pop
jmp
or
and
jmp
xor
xchg
mov
mov
ljmp
and
pop
clc
xchg
jmp
jecxz
cmpsb
bound
sbb
cltd
fcomps
decb
cmp
pop
cmc
test
pop
inc
addr16
sbb
xchg
inc
cli
pop
in
mov
repnz
adc
daa
dec
ljmp
enter
scas
adc
out
jg
loop
leave
jle
jbe
jo
mov
push
jg
jmp
jnp
xchg
sbb
das
mov
pusha
push
push
jo
addr16
jg
hlt
sar
push
xor
xchg
ret
sub
mul
inc
mov
sbb
push
filds
cmp
outsl
out
hlt
and
dec
lcall
mov
pop
out
and
popf
cmp
aam
jns
cwtl
bound
and
cmpsb
jns
mov
mov
jae
cmp
enter
inc
mov
insb
jno
scas
lret
inc
jo
clc
int
outsb
vmovntpd
ss
lock
popa
dec
xchg
inc
adc
std
mov
mov
pop
pop
outsb
inc
into
xor
mov
xchg
or
out
jmp
popf
neg
test
jle
mov
mov
popa
push
int3
push
or
push
insl
cmp
cmpsb
loop
xchg
sub
adc
je
lock
cmpsb
jo
sub
hlt
dec
sub
inc
dec
stos
pop
add
rcrl
mov
imul
push
nop
dec
cs
add
imul
inc
hlt
loopne
out
push
jnp
dec
es
mov
push
lcall
in
ds
cmp
inc
icebp
out
rclb
mov
das
ljmp
sahf
sbb
mov
lods
sub
pop
dec
sbb
rcr
mov
dec
adc
sbb
nop
cmc
data16
xor
movsl
mov
xor
aas
test
imul
aam
ja
movsl
push
ret
popa
jns
adc
popa
scas
dec
or
mul
xchg
iret
xchg
lods
stos
loop
clc
adc
inc
add
data16
sbb
push
sub
mov
loop
shlb
push
mov
imul
loopne
xchg
jae
les
es
dec
xor
jae
sub
movsl
mov
pop
mov
daa
imul
cld
imul
xor
mov
int3
ret
lahf
mov
cmpsb
sub
dec
inc
pop
pop
push
pop
jge
pop
mov
fsub
push
out
jno
dec
push
ss
inc
mov
in
push
mov
pop
or
dec
and
outsb
ljmp
push
in
dec
and
xchg
jmp
mov
int3
mov
out
dec
sbb
dec
mov
push
sub
xlat
cmpsb
fs
xchg
stos
dec
add
ret
aad
push
xor
aam
outsb
xchg
cli
jne
in
mov
in
or
out
or
jle
inc
jle
pop
mov
test
mov
inc
outsl
and
mov
xchg
out
push
lcall
push
or
jnp
cmp
push
or
jo
js
dec
add
pop
outsb
outsl
xchg
mov
jl
push
sbbb
test
dec
cs
sbb
sbb
scas
sub
test
push
jb
mov
out
jne
jne
xor
test
cmp
addr16
je
cmp
fidivs
test
xchg
jns
sbb
xchg
push
mov
push
jmp
dec
arpl
or
pushw
xchg
jbe
outsb
mov
push
mov
adc
popa
mov
dec
and
add
pop
imul
xor
fsubs
ficoml
xor
dec
je
and
cmpsl
xchg
shlb
adc
lock
loop
lods
inc
movsl
sub
jle
mov
push
dec
jmp
pop
les
dec
dec
pop
lret
xchg
pop
push
sub
mov
jmp
cli
dec
in
xor
test
or
jp
dec
xchg
jecxz
and
lcall
push
and
and
and
pop
sub
in
clc
cld
icebp
sarb
pusha
lods
xlat
xor
cmp
push
inc
xchg
test
fidivl
std
outsb
mov
movsb
test
mov
pop
and
dec
icebp
lahf
cwtl
inc
aad
sub
adc
jno
xor
mov
jp
nop
xor
add
inc
mov
cmp
popa
mov
dec
and
int3
cmpsb
scas
fiadds
mov
add
notb
adc
shr
sub
push
mov
mov
loopne
xchg
pop
inc
adc
cwtl
hlt
out
lods
in
jmp
roll
sub
xchg
mov
push
pop
loop
or
xchg
enter
addr16
adc
stos
enter
mov
loopne
add
gs
repnz
lods
icebp
sbb
in
jae
in
daa
repz
fnstcw
cmpsb
cld
xchg
xorb
mov
dec
sbb
dec
out
mov
das
sbbl
mov
test
ficoml
fs
decb
jl
xor
iret
xchg
jmp
mov
insl
pop
dec
sub
rclb
and
hlt
mov
rorb
jle
imul
xchg
shrl
xchg
add
daa
cs
out
in
js
in
test
imul
pop
mov
in
xor
leave
mov
push
scas
mov
inc
xor
cmp
add
cs
jle
cmp
hlt
popfw
negl
les
loopne
push
xchg
xor
rorb
mov
test
jp
and
xor
rcr
push
in
jae
sbb
and
pop
mov
adc
xor
cmp
cmp
ja
jg
sub
dec
lea
fs
push
in
sbb
mov
iret
imul
outsl
pop
jmp
inc
and
xchg
push
and
je
cs
sahf
popa
popf
gs
in
sub
and
imul
dec
sub
adc
xor
adc
cmp
jg
jb
pop
cmp
mov
sub
push
into
aaa
jno
pop
aam
cmp
cmpsb
jle
scas
in
mov
test
xor
cmpsl
fs
int3
cwtl
pop
stc
loope
repnz
push
cld
pop
insl
sub
dec
lret
add
xor
cmpsb
add
push
gs
sub
adc
pushf
sub
cmp
xor
mov
mov
adc
pop
cmpsb
lret
or
rolb
dec
adc
sub
and
dec
or
push
sahf
ljmp
out
jno
jge
scas
pop
jb
pop
cmpsl
ljmp
fimuls
or
dec
aas
mov
add
push
xor
ret
fcoml
int3
pop
mov
xchg
and
movsb
jo
mov
push
or
rcll
mov
arpl
jge
sub
push
sub
movsb
dec
popl
int
imul
movsb
daa
inc
pusha
test
pop
imul
inc
bound
adc
loope
pop
mov
mov
push
js
lods
fiadds
popf
cmp
dec
lods
cs
test
roll
test
ljmp
test
mov
mov
sub
mov
popf
xchg
lcall
sub
mov
out
ss
lds
xor
dec
push
andb
lret
mov
inc
scas
jne
int3
dec
clc
push
or
mov
cmpb
test
push
xchg
jnp
mov
sti
sub
dec
mov
jmp
pop
stc
js
out
cwtl
adc
fidivrl
jge
or
and
or
pusha
dec
mov
adc
push
sub
cmp
pop
lds
testl
stc
or
jl
loop
in
or
or
fisubrl
mov
mov
loope
jo
adcl
std
aaa
jne
xchg
sub
cmp
dec
popa
in
jecxz
fbld
out
and
sbb
rcll
test
filds
mov
imul
mov
cmp
pop
pop
sbb
sahf
pop
mov
icebp
stc
add
xor
cmp
jl
icebp
lcall
stc
incl
mov
add
adc
mov
adc
push
test
inc
jle
fimull
dec
addb
xor
aas
pop
inc
imul
icebp
repnz
imul
push
and
test
xchg
sbb
xchg
sbb
inc
add
sti
mov
add
sub
push
inc
loope
cmp
mov
aad
mov
testl
sbb
imul
cmpb
lds
add
adcl
mov
les
xchg
jle
lods
loope
inc
insb
mov
lds
push
pop
xor
mov
xor
mov
push
arpl
es
imul
jle
fwait
push
test
out
add
inc
jge
pop
push
mov
imull
cwtl
xchg
cld
and
jnp
ja
popa
stc
xor
shlb
nop
incl
cmp
sub
dec
les
or
es
aam
shll
mov
popa
in
stos
andb
outsb
int3
scas
pop
jne
xor
shl
pop
mov
cli
push
rcrb
mov
ret
mov
inc
out
aad
jae
inc
lret
push
dec
inc
sub
mov
sub
roll
push
stos
or
cmp
sub
ficomps
repnz
in
popa
stc
push
cmp
cmp
std
dec
dec
push
dec
fidivrs
xor
iret
push
adc
xor
dec
sub
xor
mov
rcrb
jle
xchg
call
lret
roll
mov
mov
int3
fdivs
xchg
jmp
pop
rolb
out
xor
xlat
xor
fmull
adc
fcoml
mov
test
cmp
pop
cmpsl
mov
mov
std
pusha
test
or
hlt
call
cmp
add
jo
dec
shrl
mov
sahf
test
sub
test
loop
sbb
mov
repz
sbb
std
cmp
sarb
mov
xor
cwtl
xchg
add
aam
std
movsl
cli
xor
imull
mov
aaa
xor
jge
sub
iret
xchg
or
adc
cmp
xchg
rcrb
clc
mov
jnp
and
mov
cmp
rcr
jno
and
xchg
andl
es
push
cmp
lahf
pusha
cmp
mov
enter
divl
xorl
push
add
push
jbe
shll
add
inc
in
pop
xchg
inc
pop
inc
mov
divl
lods
inc
adc
mov
push
cwtl
fwait
cmp
mov
popa
push
repz
imul
pop
adc
push
faddl
adc
xchg
or
xor
jne
inc
inc
mov
xchg
cmp
popf
loopne
fwait
aam
push
adc
movsb
pusha
sub
sbb
cmp
cmpl
mov
es
jo
nop
popf
pushf
push
add
popf
into
iret
jmp
mov
scas
push
sbb
clc
xchg
inc
js
idivb
push
mov
mov
test
in
in
inc
jb
xchg
mov
jp
bound
pop
push
dec
jno
outsb
icebp
int
ds
int
lds
sti
push
xchg
push
aam
jp
pop
ljmp
cli
in
cmp
inc
cmp
int3
test
fiaddl
pop
pop
mov
and
xlat
mov
out
loopne
insb
jns
or
jmp
mov
and
sub
dec
lcall
pop
jo
lahf
mov
imul
xchg
pop
jge
jge
sbbb
mov
and
stc
dec
nop
std
pop
push
mov
dec
enter
mov
les
pop
mov
stc
bswap
or
xchg
mov
sub
pop
and
add
fnstenv
orl
adc
ret
stos
mov
lods
loop
mov
ret
inc
popf
sbb
jl
pop
fsubs
or
aaa
mov
shll
add
cmp
mov
cltd
pop
repz
clc
roll
mov
rorl
in
dec
js
test
ret
in
pop
push
push
das
push
dec
xlat
test
mov
mov
in
xor
int3
xchg
pop
mov
test
in
or
js
xor
jl
mov
sub
mov
lods
push
jge
xorb
and
dec
outsb
jge
in
fistps
mov
xchg
cmp
jecxz
scas
pushf
jb
clc
addb
fstps
stc
mov
mov
push
test
rcrl
adc
cmp
lahf
cmp
gs
les
sub
mov
fstpl
mov
pop
inc
and
call
lods
adc
rorl
pop
and
pop
or
jle
xchg
pusha
cli
cmp
jg
data16
sarb
into
dec
adc
sbb
cltd
mov
in
or
repz
mov
das
push
test
fidivrs
sbb
cld
cmp
adc
out
stc
imul
jbe
add
lds
inc
int
pop
lahf
jno
jns
mov
test
sti
cmp
shlb
repnz
mov
call
testl
lods
inc
and
sti
lret
pusha
add
adc
test
xor
outsl
ja
mov
clc
xor
stos
xchg
xchg
sbb
scas
cmp
push
fmulp
jne
lods
lret
dec
in
cmp
mov
cmp
inc
incb
rolb
push
cvtps2pi
ljmp
lock
cmp
mov
shll
or
jne
sbb
testl
mov
sahf
andl
insl
add
mov
dec
inc
push
mov
cmp
adcl
in
insl
dec
scas
mov
lcall
cli
lret
sbb
lods
add
sahf
add
push
mov
imul
cmp
jnp
pop
insl
inc
cmp
jp
dec
adc
dec
out
or
sbb
xor
sub
js,pt
xchg
and
dec
pop
fcoms
jle
lcall
add
push
jp
cmp
sbb
test
cld
jecxz
push
aam
sub
rorl
ljmp
and
jb
inc
std
call
mov
sub
xchg
std
cmpb
movsl
xor
inc
jne
push
std
gs
notl
stos
cmp
je
inc
je
and
div
int3
pushf
ret
vsqrtpd
or
mov
pushf
push
add
frstor
sbb
mov
push
leave
aam
jb
pop
xchg
mov
es
add
and
insl
aam
fs
dec
xchg
stc
inc
icebp
mov
das
or
popf
rolb
and
fwait
in
insl
pop
es
pushf
mov
aaa
mov
jge
jo
dec
dec
push
fs
jns
in
repnz
fisubrl
add
sub
es
jne
mov
inc
xor
movsl
inc
lret
ret
jg
mov
push
sbb
aam
sbb
pop
push
mov
scas
test
scas
mov
orl
jo
mov
aam
inc
cmc
scas
mov
adc
in
mov
hlt
sub
fists
sub
cmp
cwtl
stos
popa
das
adc
das
xor
cmc
adc
xchg
out
and
jne
rcrb
shrb
xchg
stc
or
gs
gs
sbb
stos
inc
cmpsb
stos
sbb
rclb
dec
lods
push
pop
sbb
nop
loopne
mov
mov
inc
cmp
in
bound
mov
inc
fdivl
pop
sbb
pushf
sti
in
sub
clc
fldenv
add
test
sub
incb
lock
sbb
aas
jg
sbb
add
mov
shlb
test
arpl
lea
pop
nop
pop
mov
and
popa
lret
or
es
xor
test
pop
fwait
cmp
mov
addb
jae
jle
jb
mov
or
jae
fiaddl
xor
fucom
clc
push
xor
in
jmp
insl
outsl
or
cmp
dec
sub
insb
cmp
push
cli
lock
adc
adc
pushf
sar
xchg
nop
sbb
cmp
xchg
push
or
ja
jmp
lock
popa
inc
dec
and
addb
adc
mov
sahf
adc
and
cld
ret
pop
int
dec
sub
or
or
popf
popa
mov
mov
loopne
dec
int
mov
xchg
jbe
int
call
mov
push
dec
test
mov
jnp
mov
and
fsts
inc
jl
aam
xor
imul
dec
xor
or
fs
and
rcrl
sahf
cmc
shrb
popa
cmc
mov
sbb
addr16
jle
imul
loop
mov
dec
movsb
xchg
cmp
dec
lds
repz
adc
test
aaa
push
test
jge
jns
sbbl
idivb
or
mov
add
jl
clc
xor
or
and
adc
jae
xor
aad
fdivl
mov
sbb
sbb
add
insl
clc
mov
cwtl
dec
fnstsw
mov
mov
push
insl
fldt
gs
or
push
push
fmull
inc
pop
pop
movsl
mov
adc
jo
in
inc
xchg
dec
lods
sub
addr16
cs
les
popf
int
inc
dec
pop
les
rorl
mov
aam
sub
leave
mov
dec
sub
bound
xor
aas
push
fldenv
mov
sub
push
sbb
adc
jnp
das
pop
test
jb
movsl
xor
cmp
scas
sbb
xchg
push
push
mov
or
jne
test
mov
dec
imul
mov
imul
dec
mov
cmp
in
mov
sbb
stc
xor
out
cmpsb
ret
jl
into
in
cli
fdivs
out
in
dec
aad
pushf
mov
mov
frstor
sbb
leave
jb
fnstsw
cmp
fcomps
push
mov
insl
aaa
push
push
pop
aas
test
mov
movsl
or
jns
add
jbe
mov
cmp
pop
ss
loope
cmp
or
sarl
lods
mov
pop
sub
in
hlt
sbb
dec
incb
mov
jle
stos
test
scas
push
fadds
lcall
ss
lahf
fs
adc
dec
push
adc
jmp
xchg
and
lea
adc
push
mov
fimull
inc
mov
and
and
xorb
push
cmp
push
adc
cli
jns
xor
das
mov
pop
fistl
jbe
and
addr16
pop
jae
push
test
loopne
rolb
popf
sbb
pmaxsw
adc
or
mov
int
sti
sbb
fwait
or
sbbb
popa
subl
es
fstpl
lcall
inc
imul
movsb
andl
sbb
out
jecxz
dec
jne
movsb
push
addr16
add
mov
bound
cltd
or
shll
sahf
xor
adc
inc
pushf
add
ja
xchg
sbb
in
les
sbb
dec
adc
cmpsb
add
xor
jl
aam
fisubl
sarl
in
push
mov
cwtl
push
cmp
lods
add
add
inc
xor
mov
fs
rolb
push
jae
dec
subl
out
cmp
cmpsl
adc
mov
xlat
and
ror
and
popl
pop
mov
or
out
insb
mov
mov
lea
jo
cmp
mov
jecxz
push
lea
pushl
push
je
andb
sub
lods
push
movsl
fs
xor
pop
and
pop
mov
rol
inc
outsl
pop
dec
dec
out
sti
jmp
cld
mov
fcoms
sub
addr16
clc
aas
push
jecxz
scas
ret
xchg
dec
sub
jo
das
cmpsb
sub
out
dec
sub
aaa
loop
inc
sub
call
dec
ljmp
movl
cmp
leave
xor
je
jbe
xor
push
or
out
loop
hlt
in
adcb
loope
daa
mov
cmpsl
cmp
inc
aaa
out
lret
outsl
mov
xchg
nop
into
pop
inc
push
add
jno
icebp
xorl
jns
test
add
sub
cmp
div
jno
mov
pop
xchg
mov
push
int
jle
rcll
xor
lret
xchg
sbb
shl
mov
and
cmpsl
add
sub
in
xchg
and
pop
add
arpl
mov
mov
cmp
push
sub
inc
loopne
lcall
loop
adc
jo
and
dec
js
ficomps
adc
int3
lret
lds
lret
sbb
imul
enter
and
fs
push
shll
out
xlat
or
popf
jge
leave
jo
dec
repnz
imul
mov
xchg
or
dec
cmp
std
xchg
adc
shll
sbb
icebp
jecxz
sub
mov
mov
mov
movsl
daa
sbb
sbbl
or
inc
rcr
outsb
and
cs
push
les
aad
push
sbb
arpl
jecxz
mov
adc
xor
fiadds
xor
out
mov
xchg
mov
mov
cmp
pop
mov
scas
jo
jbe
mov
sahf
or
rorb
cmp
out
imul
push
push
popa
dec
es
push
mov
adc
ret
les
shlb
cs
adc
mov
pop
mov
xchg
lahf
mov
sub
es
cmp
aam
rcl
cmp
out
popa
push
add
fnstsw
rorb
and
xlat
aam
popf
les
cmp
mov
mov
adc
out
mov
and
cli
bound
cld
nop
aam
xlat
les
pop
pop
xchg
mov
cmp
sub
xor
roll
loopne
paddusb
fisttps
fwait
out
inc
les
pop
nop
ret
push
push
lahf
ret
js
das
pop
or
sbb
pop
mov
sarl
xchg
lahf
hlt
ret
pop
add
jnp
clc
pushf
xor
insb
fimuls
jae
je
dec
and
push
add
les
popf
loop
push
dec
dec
inc
sbb
push
lret
sbb
pop
mov
outsb
ss
xchg
and
or
or
xorl
mov
xor
jo
jne
sbb
sub
jmp
pop
mov
loop
imul
mov
out
aas
xlat
sbb
enter
pushf
ficoms
in
inc
out
scas
or
mov
push
xor
int
push
or
jge
out
jae
cmpsb
mov
into
js
pop
pop
inc
inc
aas
xor
call
out
imul
xor
adc
int3
push
cmp
sbb
mov
jge
and
pop
popa
push
inc
cmp
stos
loope
outsb
mov
push
xlat
or
xchg
cmp
jp
jo
jle
iret
dec
sbb
dec
dec
xchg
dec
mov
dec
jmp
fistpl
int3
sti
dec
addr16
mov
cs
rol
imul
or
das
dec
dec
rol
and
cmp
xorl
outsb
repz
repnz
shlb
push
and
out
icebp
ss
pusha
inc
ret
scas
jle
adc
loopne
or
imull
push
add
loope
icebp
jle
dec
jl
lret
int
daa
out
mov
dec
pusha
mov
pop
shlb
cld
loopnew
pusha
xor
fnstenv
outsb
inc
push
rolb
pusha
or
ret
cld
les
pop
lods
stos
outsb
faddp
in
cmpsb
push
negl
push
mul
pop
mov
sub
jge
insb
xchg
xchg
adc
int
pushf
cli
dec
push
or
cmp
pop
cwtl
add
xchg
pop
mov
pop
shlb
jo
mov
and
lahf
jo
mov
jne
out
scas
movsb
movsl
rorl
mov
ror
in
dec
push
ds
pop
out
adc
cli
mov
sahf
xchg
jno
pushf
sub
mov
sarl
mov
jo
fcoml
shl
mov
es
es
pop
push
push
inc
dec
xor
lea
loopne
dec
imul
mov
push
or
aam
movsl
sahf
push
add
cmp
adcb
lret
cmpb
cmpsb
arpl
nop
shrl
popf
ja
out
cmp
sbb
mov
and
or
js
sub
das
jge
cmp
lds
push
push
out
test
sbb
xor
decb
dec
jg
je
fwait
dec
add
mov
jns
fucomp
js
fcoml
movsl
aas
ret
and
push
out
inc
push
pop
mov
fildl
mov
xchg
jp
shlb
add
int
pusha
push
imul
mov
in
adc
lcall
jg
jecxz
stos
inc
std
scas
fistps
inc
jne
inc
call
inc
dec
in
rorl
lock
rorb
and
rorb
mov
outsb
lahf
jg
push
push
push
xchg
mov
sbb
leave
lea
pushf
sahf
jmp
dec
loop
popf
mov
xchg
in
add
cmp
and
and
inc
dec
xchg
pop
ficomps
xchg
mov
adc
mov
push
ljmp
insb
imul
and
or
imul
lret
and
inc
and
dec
pop
and
sti
xor
stc
sub
loop
dec
jecxz
cmc
pop
dec
test
inc
sti
in
inc
pushf
or
gs
test
and
mov
div
inc
cmp
loop
pop
scas
ficompl
pop
jnp
loop
xlat
pop
xchg
std
cli
push
sub
lods
lahf
test
push
rol
pop
test
aam
xor
daa
push
testl
sub
dec
cmp
and
mov
int3
shrb
pop
xchg
aam
insb
fimull
adc
adc
xchg
data16
jmp
loop
test
xor
pushf
mov
push
rolb
in
inc
sbb
stc
adc
mov
mov
jle
ljmp
jge
pop
repz
push
cmp
fwait
jg
sub
push
ret
cmp
push
push
mov
pusha
scas
xchg
cltd
rcrl
or
rcrl
push
and
pop
out
addr16
fstpt
sbb
adc
rcll
or
repnz
leave
lods
dec
xchg
cmc
mov
test
popa
fcmovu
into
lds
xchg
test
mov
iret
sbb
fsubl
push
mov
fisttps
or
fwait
cmp
add
xchg
jb
fwait
add
and
imul
and
sbb
stc
or
pop
stos
aad
pop
rorl
jl
test
popa
and
push
lds
jmp
jl
lock
push
faddl
cli
aam
lock
cmpsl
xlat
das
icebp
mov
sti
and
lret
test
fidivrl
xlat
xchg
sub
pop
pushf
mov
sub
pushf
sbb
pop
bnd
repz
jg
xchg
push
jns
call
push
lds
adc
lock
xchg
popf
sbb
pop
xor
push
outsb
xchg
adc
ja
fst
mov
adc
xor
push
sbb
sub
push
add
pop
push
add
or
or
cmp
fimuls
jb
pop
mov
sbb
jb
push
dec
lock
leave
maxps
jb
sub
cmp
add
jg
rcr
rcr
scas
sbb
mov
xchg
and
mov
or
jg
std
mov
out
push
gs
pop
fyl2x
xchg
je
xchg
mov
aaa
sub
pop
inc
cmpsb
add
lods
es
pop
in
adc
rorb
ret
xor
push
cmp
push
sub
outsl
aad
mov
sub
xorb
and
outsl
arpl
xchg
mov
lret
cmp
pop
pop
mov
iret
call
mull
add
sbb
arpl
xchg
daa
sbb
add
hlt
sbb
xchg
jns
add
divb
js
and
xor
fs
cmp
les
lret
jp
in
xor
cmp
insl
ficoms
xor
icebp
scas
int3
sub
mov
xchg
mov
jg
pop
std
arpl
loopne
outsl
xchg
pusha
sbb
and
stos
sub
mov
xor
jg
imul
leave
jge
xchg
aas
lods
push
jmp
dec
leave
push
push
cltd
cmpsb
dec
mov
pop
jmp
int3
bound
pop
pop
jmp
adc
mov
mov
adc
or
jl
push
cld
test
bndstx
jecxz
pusha
sti
push
shll
arpl
inc
or
test
xor
int3
scas
data16
inc
shrl
fbstp
lock
sahf
lea
adc
cmp
or
mov
xor
xor
popa
bound
xchg
stc
mov
jge
xchg
stc
fwait
cli
xor
call
jbe
jno
xor
sbb
call
rep
lcall
add
mov
sahf
cmpsb
xor
mov
push
jp
inc
jbe
dec
rcl
mov
ljmp
xchg
and
pop
cmp
out
jne
pop
test
fdiv
xchg
lret
and
xor
sbb
jmp
inc
or
roll
mov
inc
fmull
jle
rcrb
aam
std
sub
jp
neg
and
jmp
xor
test
mov
or
mov
in
mov
in
dec
cwtl
lods
movsb
int
iret
arpl
push
pushf
mov
ds
mov
fdivrl
push
push
in
cmp
and
popf
ljmp
jbe
or
cmp
or
dec
aas
xor
lahf
adc
jno
jno
fcomps
das
test
cmp
jb
cmpsb
sbb
fiadds
decb
push
add
arpl
push
cmp
push
inc
idiv
push
fsubl
int3
sub
inc
sub
test
xchg
xchg
cmc
daa
or
lds
ss
dec
pop
mov
jge
or
add
inc
xlat
xchg
ljmp
andl
and
xor
sbb
loopne
call
inc
push
inc
std
xchg
mov
jb
push
mov
movsl
lret
icebp
pop
mov
into
add
sbb
mov
sub
or
mov
push
push
insb
mov
sbb
jb
es
insl
jno
int
test
cmp
dec
test
add
int
push
mov
jns
mov
shlb
xchg
push
add
mov
rorl
mov
addr16
dec
repnz
jns
add
sbb
mov
mov
icebp
xor
scas
push
cmp
xor
insl
xor
movb
xorl
out
leave
sub
int3
and
cld
negb
ret
add
pop
lock
lods
mov
sbb
clc
sbb
push
cmp
jmp
add
adc
mov
jp
out
lcall
adc
stos
dec
sub
addr16
fsubrl
bound
mov
das
jns
jbe
in
xor
mov
call
loop
sar
mov
iret
imul
sbb
and
testb
test
std
cmp
notb
divb
or
daa
pop
xchg
xor
std
xchg
cmp
movsl
mov
shlb
sbb
mov
add
test
incb
pop
xchg
push
mov
pop
and
stos
pushf
lret
sarl
data16
aas
xchg
outsl
out
cmp
cwtl
sti
orps
std
lods
inc
sbb
inc
xor
inc
test
jl
call
pop
mov
sti
mov
les
push
add
cmpsl
aaa
jmp
xchg
and
dec
cmp
pop
dec
mov
pop
outsb
mov
out
aaa
mov
notb
das
xchg
decl
mov
test
lock
scas
scas
pusha
push
or
add
jmp
xor
in
cmp
es
add
fcoms
das
sbb
out
decb
fwait
mov
dec
mov
xchg
pushf
add
lea
mov
pop
jecxz
out
push
lea
push
jo
mov
into
or
cltd
jecxz
dec
pop
inc
out
clc
push
xor
mov
popf
and
xchg
imul
sarl
jns
aas
mov
ret
insb
jo
or
pop
loop
inc
add
cmp
aam
jns
cmp
pop
and
mov
mov
sub
bound
cmp
pop
sbb
jnp
repz
fbstp
xor
mov
cmp
lret
xchg
mov
in
cmpsl
lods
jne
or
cmp
ljmp
mov
or
adc
sbb
add
cmp
pop
fwait
and
pop
into
std
cltd
lcall
or
sbb
stos
mov
mov
pop
mov
jecxz
loop
push
subl
roll
movsb
dec
sbb
mov
js
sarb
cmp
int3
dec
push
arpl
cli
repnz
and
lods
pop
push
add
push
inc
les
out
mov
sub
std
cmc
dec
push
jle
pop
loopne
mov
fimull
xor
insb
jbe
mov
cmp
movsb
or
es
pop
inc
imul
or
push
mulb
mov
pop
sub
mov
add
call
mov
idiv
cmc
test
mov
mov
adc
mov
shrb
insb
fninit
xchg
xor
xchg
ds
cs
push
fwait
adc
imul
fcomi
jp
and
leave
mov
push
fwait
mov
xchg
call
sub
outsb
mov
cmpsb
and
and
mov
cmp
stos
cmp
insb
insb
daa
rol
rcrl
std
sbb
xor
pop
pop
insl
popa
xor
shrl
stos
cmp
clc
mov
stos
push
mov
adc
in
mov
fisubrs
stc
inc
ret
gs
dec
sbb
add
dec
mov
xlat
cmp
sub
cli
sti
jl
outsl
imul
sbbb
cmpsl
mov
and
mov
andb
xchg
imul
add
jg
lret
cmp
xchg
test
jle
push
in
leave
dec
xchg
daa
mov
pop
push
add
enter
jae
int
xchg
aaa
lea
in
sub
test
dec
cmp
pusha
les
mov
xor
lahf
add
xchg
or
xchg
cs
sub
jp
inc
fs
push
xor
repz
cmpsb
xor
les
mov
mov
push
mov
stos
aaa
loop
fwait
test
pop
add
jno
sub
rcr
stos
or
jl
inc
and
xor
cmpsb
cmp
sahf
mov
and
xchg
into
popf
rol
sub
or
mov
dec
push
mov
xchg
mov
add
addr16
pop
push
mov
mov
xchg
and
and
outsl
cmp
leave
loopne
jb
dec
jg
or
outsb
push
testb
call
jle
push
push
dec
xor
jno
xchg
pop
adcb
sub
sti
fs
inc
aas
or
fcoms
out
movsl
mov
inc
aaa
xor
mov
sti
rcrb
es
fmuls
cmp
fcomps
inc
inc
jp
movsb
test
and
pop
push
push
popf
sbbb
insb
adc
in
test
cmpsb
or
vpmacssdql
popa
cmpsl
icebp
jecxz
xchg
xor
call
pushf
jle
jl
cmp
pop
jns
pop
inc
inc
cli
add
jbe
and
xlat
and
lea
lock
les
and
out
adc
mov
sub
testl
xlat
outsl
mov
xchg
out
inc
leave
jmp
adc
pop
clc
dec
xchg
sbb
cs
iret
testl
cmp
test
sub
mov
int
xor
mov
ljmp
add
test
enter
sbb
cmp
sbb
sbbl
call
xor
push
cmp
sbb
pop
adc
jb
dec
repnz
xchg
lahf
or
or
int3
or
ret
cwtl
fst
push
int
adc
mov
and
mov
mov
movw
lret
fdivrl
pop
xlat
insl
mov
mov
clc
negb
push
mov
push
jge
mov
frstor
shll
insl
dec
bound
aaa
mov
adc
mov
movsl
sub
mov
das
mov
and
shlb
mov
and
bound
jle
das
push
in
xor
mov
pop
sahf
subl
aas
ja
mov
cmp
dec
and
lcall
mov
pop
jp
jno
mov
daa
loope
push
and
pop
add
jmp
mov
movq
adc
pop
mov
xor
scas
jl
imul
mov
mov
mov
in
xchg
ret
sbb
lret
std
aas
jnp
lock
adcl
mov
cmpsb
cmp
fnsave
push
push
inc
or
adc
notb
xchg
xchg
in
cs
pop
popf
addr16
add
out
fldenv
ret
cmp
jg
mov
imul
bound
jno
popa
xlat
lret
test
add
pop
test
sti
xchg
daa
rclb
stos
push
sbb
xor
fs
push
shl
pusha
pushf
pop
and
nop
outsl
lods
imul
cmp
andl
jmp
lods
aaa
out
loopne
sub
cmp
add
lcall
out
fidivrl
sti
stc
lcall
ficomps
in
mov
xor
aas
rorb
mov
mov
stc
push
lods
sahf
add
enterw
out
dec
jl
xchg
aaa
inc
cmp
imul
jecxz
lods
rclb
ja
add
add
mov
mov
js
rcrb
lahf
mov
mov
jl
xchg
cld
mov
sub
aaa
imul
sub
fistps
add
adc
sbb
adc
into
jl
inc
movsb
addr16
xor
pop
fistps
orl
mov
mov
and
mov
test
pop
cmpsl
cmp
and
and
and
inc
dec
aad
sti
xchg
and
inc
xchg
aam
mov
pop
int
rolb
mov
arpl
mov
push
jne
ds
push
push
test
arpl
hlt
jg
mov
arpl
insb
dec
ds
adc
pop
mov
sub
mov
or
pop
fdivrs
xor
pop
or
inc
icebp
cmp
ss
jp
mov
cmpsb
inc
add
adc
int
dec
push
loop
inc
subb
add
arpl
pop
jno
and
push
xorl
pop
or
and
in
subb
xor
ret
xor
clc
dec
jle
fcmovb
push
add
xchg
testb
and
push
shll
adc
or
fisubrs
call
pop
aad
scas
sbb
xlat
jl
std
js
sbb
jnp
pop
movsb
jo
das
sub
icebp
push
xor
jno
and
shll
xchg
clc
dec
cmp
xor
or
in
fistpll
js
pop
mov
or
xchg
jle
mov
les
mov
inc
lret
sbb
xchg
dec
jbe
push
sub
lret
pop
sahf
negb
rcrb
push
nop
sahf
shl
dec
mov
xor
dec
mov
cmpb
xchg
xchg
mov
out
cmp
add
pop
mov
mov
mov
push
sbb
mov
mov
dec
jae
std
cld
adc
lret
mov
push
xor
cmp
ret
sub
cmc
cwtl
mov
call
addr16
add
xor
jb
call
mov
adc
mov
jp
push
aam
sub
jl
sbb
mov
cmpsb
ljmp
fmul
scas
push
mov
mov
mov
lahf
fmull
pushf
icebp
scas
xor
or
mov
sub
jne
in
xchg
shrb
mov
mov
jecxz
jmp
push
fcoml
insb
mov
mov
test
mov
mov
adc
lcall
jg
and
dec
fcoms
in
push
test
cmp
push
sub
ja
pop
sub
int3
pusha
ljmp
mov
push
pop
xchg
cmp
push
sub
loop
or
dec
fnstsw
xchg
pop
in
sub
insb
int3
mov
stc
stc
pop
pushf
ljmp
push
hlt
mov
mov
fisubl
sbb
lds
lea
sbb
loop
sbbb
adc
push
popf
scas
jae
adc
lock
js
lock
insb
jb
add
scas
dec
or
popa
and
xchg
jl
pop
sub
mov
stos
add
dec
int3
inc
loop
add
sbb
mov
pop
jl
push
mov
popa
push
test
pop
pop
mov
repz
jae
adc
cmp
push
cmp
loope
scas
in
jnp
add
sub
fwait
scas
pop
mov
iret
add
or
add
xchg
mov
adc
lcall
arpl
test
push
sahf
stc
mov
fwait
out
repnz
lods
and
xor
dec
repnz
and
add
lcall
mov
sub
or
je
hlt
inc
dec
sub
jne
les
repnz
push
sti
mov
fisubl
insl
cmp
je
jns
out
jl
test
je
outsl
pop
xchg
inc
cmp
xor
inc
into
xchg
mov
push
in
dec
je
fldl
add
sub
pop
xchg
int
sbb
inc
aas
add
jne
lods
out
dec
imul
or
ljmp
jbe
xor
decb
das
push
ficoml
xchg
mov
call
sbb
test
pop
xchg
in
mov
lock
push
sbb
sbb
mov
std
test
test
push
lahf
out
les
js
push
btr
enter
jmp
push
bound
sbb
mov
mov
push
in
test
lods
pop
js
out
adc
scas
lret
jae
ds
mov
pop
or
lea
sbb
test
ljmp
icebp
loop
cmpsl
jecxz
mov
aas
std
mov
push
add
jp
mov
mov
fdiv
push
jmp
fidivrs
mov
adc
popa
inc
xor
es
gs
add
jo
int
fistpl
jmp
fldt
xchg
push
lcall
ljmp
and
pop
aaa
mov
inc
cli
pop
cmp
lods
adc
jnp
enter
pop
ljmp
jno
fwait
sbb
ds
push
jle
xor
enter
dec
ret
insb
aad
pop
dec
mov
push
push
imul
or
repz
dec
insb
push
out
imul
sub
jmp
fsubs
push
inc
pop
push
inc
push
in
cmp
or
cltd
push
out
in
aam
adc
gs
mov
shlb
jb
loop
pop
adc
push
movsl
aam
mov
and
jge
xchg
pop
add
or
jo
in
jecxz
ficomps
pop
jno
sbb
push
lds
js
mov
lea
jge
mov
outsl
lods
lock
lods
out
fcmovnb
jl
xchg
pop
test
ficoms
lods
pop
mov
fstl
clc
into
xor
popf
pop
pop
lcall
xor
jle
xchg
add
pop
pop
inc
jno
inc
out
fldcw
mov
adc
adc
dec
xchg
jmp
add
cli
sub
adc
aad
lahf
incb
push
stos
pop
add
inc
or
mov
test
popf
out
push
dec
cld
in
movsb
scas
mov
in
pop
fldl
test
and
xchg
or
sub
jp
js
int
in
push
mov
xor
mov
adc
or
or
pop
mov
inc
cmp
test
ficoms
push
adc
mov
les
cltd
dec
add
inc
shrb
pop
or
enter
pop
insl
xor
ficoml
out
movb
ds
pop
cwtl
das
push
push
inc
pop
sub
sbb
push
mov
movsl
jae
and
pop
ja
adc
aaa
push
and
ret
or
mov
mov
cs
jo
ret
std
add
sahf
push
lods
or
mov
pop
inc
xor
jge
into
push
push
fisubrl
sahf
into
clc
mov
cmp
gs
pop
lea
test
add
stos
iret
fs
je
into
cmp
bound
aam
cmc
in
outsb
fucomip
insb
negl
jg
add
int3
jecxz
adc
xchg
in
les
in
adc
cmp
fmuls
imul
sub
imul
dec
stos
cld
adc
aam
or
movsb
jg
aad
jnp
jnp
add
xchg
pusha
or
add
xor
add
aaa
sbb
xor
xor
and
popf
cmp
jg
push
jmp
add
jge
fdivrs
stos
inc
fmulp
push
inc
mov
mov
dec
add
ja
cmpsb
and
adc
xorl
ss
or
xchg
dec
data16
lcall
sbb
es
scas
sub
sbb
shl
xchg
popf
sbb
jmp
pop
pop
xorb
push
xchg
inc
out
inc
sbb
mov
mov
jle
clc
xchg
mov
jno
call
test
fstps
repz
lea
in
pop
test
push
negl
mov
inc
push
pop
and
push
fincstp
adc
mov
pop
sub
mov
xor
insb
fmull
xchg
jecxz
cwtl
adc
sbb
and
mov
adc
ljmp
out
jp
pop
ss
sbb
repnz
xor
fs
addb
mov
popa
fmuls
pop
push
mov
jbe
popf
repz
mov
outsl
cmpsb
xor
mov
cltd
push
dec
addl
xchg
pop
iret
dec
push
rep
es
imul
addr16
sub
sahf
lret
test
arpl
ljmp
aas
aam
neg
aaa
or
sbb
xchg
movsl
sbb
movsb
lcall
adc
notb
das
rcrl
insl
fadds
add
and
imul
ds
out
jl
inc
jo
dec
rclb
dec
lds
addl
or
iret
sub
sbb
mov
jns
lcall
ja
push
out
xchg
daa
or
xor
insl
mov
inc
add
xchg
dec
pop
pop
jge,pt
push
jl
ss
jecxz
xchg
setp
xchg
jb
sahf
mov
or
mov
xor
push
jmp
ret
dec
dec
adc
into
imul
xor
sub
out
call
or
xchg
and
push
test
gs
mov
jbe
pop
in
fcmovnu
sub
cmp
outsb
jne
or
loopne
push
and
mov
out
rorb
gs
sbb
xchg
je
mov
addl
inc
fsub
mov
in
cmp
fs
xchg
push
push
inc
jo
fsubrp
jmp
lods
shrb
es
mov
fstps
sahf
ret
lahf
jge
add
inc
addr16
pop
cwtl
shl
xor
mov
sbbb
jns
insl
rcll
mov
dec
mov
pushf
mov
aas
jns
in
jge
mov
inc
push
in
imul
xlat
pop
and
shll
push
jmp
lock
cmpsl
add
enter
sub
push
aas
ret
cmp
pop
cwtl
xchg
mov
addl
das
jp
daa
xchg
mov
fcomi
scas
pop
jno
dec
rdpmc
and
jo
in
subl
mov
mov
jbe
cs
push
push
enter
nop
ret
popa
pop
sbb
mov
loopne
out
adc
or
jmp
or
cs
ds
pop
sbb
add
xor
jno
add
jg
outsl
pop
daa
out
dec
mov
pop
aas
add
lcall
movsl
adc
adc
sti
sbb
sbb
stos
mov
dec
sub
das
mov
test
jp
stc
jmp
sti
iret
sub
decl
int
test
adc
push
or
mov
mov
pop
ret
sub
xchg
aaa
out
and
sub
negl
daa
jge
adc
fs
xor
daa
sub
lahf
pop
imul
daa
adc
inc
out
shl
test
mov
int
lahf
push
add
aas
push
mov
mov
inc
dec
js
xlat
in
les
dec
jmp
pop
mov
add
inc
scas
fbld
dec
inc
push
inc
fs
push
leave
arpl
movsb
lock
arpl
inc
mov
jmp
jge
mov
sbb
jne
enter
mov
dec
rclb
inc
loope
adc
or
lods
mov
pop
mov
push
cmp
out
or
repz
sub
lods
movsb
nop
rorl
iret
mov
xor
xchg
and
add
pop
dec
push
pop
aam
mov
cmp
or
add
push
bnd
jle
add
push
repz
sahf
mov
or
or
movsb
stos
add
cli
daa
test
push
mov
das
add
aad
outsb
insl
flds
inc
mov
inc
in
rcrb
push
and
nop
xchg
pushf
pop
lea
add
mov
jnp
addr16
movb
xor
enter
iret
inc
testl
add
and
ljmp
enter
pop
mov
jo
rclb
aam
daa
xchg
out
push
sahf
andl
inc
sbb
add
mov
dec
mov
movsl
pop
jp
and
imul
mov
enter
sub
pop
push
nop
icebp
dec
sarl
das
daa
adc
xchg
shlb
push
arpl
in
push
mull
push
hlt
jae
sbb
mov
in
dec
jp
aas
cli
fnsave
or
fwait
cmp
mov
xchg
lea
sub
imul
incl
std
push
out
xchg
dec
push
nop
cli
pop
pop
mov
test
je
fsts
cmp
fdivr
jnp
jae
pop
dec
aas
add
cltd
jge
fs
data16
jne
aaa
inc
jecxz
xchg
faddp
add
push
dec
push
jo
enter
jo
push
popa
shr
push
add
push
inc
outsb
sub
pop
movsb
je
pop
mov
xor
pop
ljmp
xor
fcompl
xor
pop
inc
aam
pusha
cltd
enter
dec
sti
adc
loope
decl
xchg
scas
js
jae
add
popf
mov
loop
add
cwtl
ret
cmp
sbb
addr16
lahf
push
fwait
ret
jo
in
cld
jge
stc
sti
in
cmp
mov
pop
lahf
or
add
inc
loop
sub
cmpsb
mov
push
pop
dec
cli
add
loope
cmp
sbb
pushf
ret
jmp
push
lcall
jmp
adc
inc
mov
mov
mov
testl
cmpsb
jne
sbbl
fcompl
adc
fcompl
sub
pop
aam
clc
xchg
sahf
call
icebp
adc
cmp
cmp
inc
jecxz
aad
cli
pusha
idivb
cmpsb
dec
add
sub
mov
mov
js
push
cmp
mov
dec
pop
adc
js
xchg
xor
mov
push
cmpsb
repnz
mov
cld
imull
int
pop
stos
cmp
xor
push
lahf
jge
data16
xchg
push
paddsw
dec
fst
jb
sbb
cli
ficomps
outsb
enter
nop
cltd
test
aas
pusha
cmp
push
aaa
adc
outsl
sbb
and
pop
jnp
aas
mov
cli
sti
mov
popf
add
insb
adcl
ss
jno
or
dec
call
jae
int3
jne
test
inc
cltd
cmp
imul
inc
push
shrb
mov
out
in
icebp
dec
cmp
pop
add
fwait
add
es
cli
jb
ja
repnz
xor
adc
cltd
fistpl
sti
movsb
xor
add
bound
jl
pop
sbb
mov
sub
mov
add
inc
mov
sbb
out
cmpsb
push
add
sbb
cs
out
xchg
add
call
mov
xchg
pop
ja
fwait
xor
icebp
stc
sbb
movsb
out
adc
pop
fistps
daa
pop
mov
sbb
lret
xchg
ret
int
in
and
mov
jg
jmp
daa
pop
dec
add
insb
adc
mov
test
and
es
xor
lahf
pop
or
sub
fisubl
cltd
cs
inc
xor
sbb
stos
outsb
fldln2
addb
or
xchg
clc
lahf
lods
jbe
nop
aad
mov
pop
xor
or
push
inc
jns
test
and
je
pushf
sbb
dec
ret
vpmaxub
cli
fsubrl
into
add
sub
fstp
push
mov
jecxz
lds
subl
xor
pop
shrl
scas
xor
lds
adc
xor
cli
test
push
xchg
jge
sbb
jae
pop
and
mov
stc
popf
mov
xchg
movl
cld
fildl
shr
ret
je
push
cwtl
ja
ret
push
inc
imul
xor
test
adc
sbb
ret
lret
sbb
cli
mov
iret
data16
adc
lahf
mov
cwtl
add
and
dec
add
in
fs
sti
inc
mov
pusha
subb
sahf
mov
daa
or
or
mov
adc
mov
vmovdqa
cwtl
arpl
push
or
push
cmpsb
lret
jl
mov
in
push
inc
into
ds
xor
dec
rcl
pop
xchg
insl
aad
cmp
repz
add
sub
adc
mov
cmpsb
adc
pop
add
mov
test
sbb
ficoms
inc
jne
rolb
or
or
jnp
in
xchg
repnz
adc
fstpt
mov
outsb
xor
out
xor
addb
dec
jle
sub
mov
jl
movsb
add
insl
fcmovb
aaa
sti
insb
pop
push
lahf
jae
pop
cld
or
jl
loop
das
cs
stos
cmp
movsb
xor
xor
mov
lods
cmp
sbb
ret
daa
adc
int
xor
idivb
jae
and
out
test
inc
xchg
pop
aad
or
insb
rcl
fs
cs
sarl
jae
jae
xor
scas
jle
pop
les
xor
xchg
loopne
sbb
push
inc
jo
mov
adc
movsl
push
jg
cwtl
insb
icebp
shrl
mov
sub
push
or
ret
scas
insb
xchg
inc
and
mov
and
dec
sbb
mov
outsl
ret
xlat
sbb
add
in
jo
push
hlt
or
xchg
test
je
xchg
int3
sub
jl
inc
shlb
or
xchg
cs
ror
or
scas
aam
jle
dec
out
cmp
lock
mov
ret
adc
add
mov
push
jbe
cmp
jns
inc
cmp
or
dec
out
cmp
cmp
xor
in
jns
fldenv
fistps
push
rclb
fcoml
and
sub
gs
gs
hlt
mov
pop
xchg
dec
dec
insb
dec
insl
pop
inc
ds
in
and
test
mov
sbb
pop
jb
pop
xchg
mov
xor
addl
xchg
xchg
sub
mov
cwtl
push
pop
inc
mov
mov
push
or
jnp
sbb
int
enter
inc
fsub
int3
callw
add
out
bound
mov
test
cltd
inc
add
cs
xchg
arpl
in
mov
sti
pusha
dec
in
jle
iret
xlat
int3
out
inc
scas
inc
int
xor
sub
sub
daa
jecxz
cwtl
ds
xchg
and
int3
mov
lret
sub
xor
cmp
pop
lds
dec
mov
cmc
int3
jp
rcrl
repnz
jle
mov
rcl
jle
scas
pop
xchg
cli
or
ljmp
data16
pop
rorb
jns
xchg
outsl
repnz
jno
lcall
dec
xorb
jne
je
jl
fistl
fmuls
addr16
out
inc
jg
cld
add
repz
cmpl
rorl
or
and
lock
mov
mov
mov
ret
test
loopne
jmp
cmp
rol
in
xor
ljmp
jno
aam
aas
scas
and
inc
sbb
and
push
and
sarb
and
int3
imul
inc
xor
addr16
stos
jle
dec
push
and
je
scas
jmp
decl
repnz
insb
push
mov
push
mov
insb
js
sub
mov
mov
imul
mov
inc
push
dec
jle
shrl
fldt
xor
lds
push
insb
inc
add
fcmovnbe
movsb
testl
cmp
pop
insb
js
mov
sub
stos
dec
dec
push
push
mov
out
dec
out
imul
mov
push
lcall
cmp
jnp
push
sbb
mov
xchg
mov
sbb
dec
cmc
fdiv
out
mov
dec
adc
pop
xorl
je
imul
inc
adc
jnp
or
ffreep
adc
fs
cmpsb
push
sbb
popf
dec
pop
das
movsb
sbb
xor
insb
push
cli
addr16
lods
popf
lahf
loope
cwtl
xchg
jbe
pop
jmp
xchg
cwtl
ss
xchg
push
lods
imul
xor
adc
mov
ficompl
jo
add
xor
gs
ja
sub
arpl
lods
cmpsl
lds
xor
lret
in
or
or
adc
and
fistpl
lods
imul
add
or
inc
mov
mov
dec
das
mov
cmp
popf
cmp
sti
in
outsb
and
mov
jmp
push
ja
std
dec
mov
repz
sub
or
push
cwtl
stos
les
stos
adc
cmp
add
jnp
cmp
jne
outsb
xor
adc
xchg
das
sbb
dec
aam
stos
pop
test
int3
push
in
mov
decl
cmp
leave
out
mov
xor
lods
push
hlt
iret
xchg
dec
add
or
xchg
callw
lods
fsts
inc
lods
jmp
or
xchg
and
cltd
sub
add
fidivrs
and
enter
jae
cmp
sub
jno
imul
and
dec
jg
out
lcall
xor
lods
add
push
aad
in
insl
dec
int3
dec
jne
lods
sbb
ljmp
mov
jp
and
lcall
push
sbb
mov
adc
popf
adc
and
pop
adc
iret
testb
mov
cli
lret
cmpsb
sub
insb
scas
xor
sub
push
mov
cmc
push
bound
push
or
fsubrl
in
push
stos
sub
mov
ja
mul
xor
jne
lods
out
mov
ds
push
lock
mov
pop
mov
dec
inc
js
mov
fistps
sub
fistps
add
stos
pop
cmc
jnp
int3
xlat
jecxz
xor
out
je
xchg
mov
xchg
cli
adc
mov
test
push
ja
mov
mov
adc
mov
jo
dec
push
dec
pop
in
adc
sarl
push
sbb
dec
cmp
add
mov
cld
out
into
insb
inc
stos
nop
fs
push
popa
xor
mov
pop
inc
scas
dec
inc
push
movsb
push
and
jg
add
push
pop
pusha
pop
dec
dec
popa
mov
xor
int
stos
bound
insb
or
nop
rolb
or
jmp
sub
in
aam
cmp
mov
or
fs
mov
inc
pop
adc
inc
mov
lock
jge
ja
push
in
loopne
inc
data16
rorl
push
adc
pusha
push
adc
mov
incl
xchg
jo
mov
insb
or
xor
hlt
xchg
lds
pop
or
xlat
incb
int3
sbb
imul
xchg
fldcw
push
into
pop
inc
sbb
fcomps
cmp
mov
pusha
or
mov
xchg
push
cmp
sub
pop
scas
adcl
and
xor
jae
jl
xlat
ja
pop
stos
js
out
mov
in
cmp
stos
jbe
xor
add
out
inc
enter
and
int3
xchg
pmulhw
jne
fidivrl
mov
mov
sbb
sbb
lods
lea
out
call
jns
bound
dec
out
pop
push
in
mov
inc
sub
mov
xchg
and
sbb
inc
mov
loope
pushf
test
sub
stos
jg
imul
adc
scas
jmp
ds
insl
jl
xchg
loopne,pn
mov
pop
fsubrl
lret
bound
inc
in
aas
sub
lock
repnz
xor
ret
out
xlat
out
jnp
dec
xchg
ljmp
mov
or
and
cmp
js
mov
outsb
pusha
rorb
pop
push
sbb
xor
cmpsl
jg
int
movsb
out
adc
dec
lret
dec
and
mov
pop
jbe
xlat
mov
push
or
push
daa
out
mov
or
adc
add
sbb
in
cwtl
js
or
dec
fisubrl
neg
shl
push
and
jo,pt
out
sub
sahf
and
fs
adc
sbb
add
iret
xchg
dec
xchg
xchg
and
leave
lcall
mov
adc
and
cmp
roll
cwtl
into
bound
jle
sbbb
sub
fxch
insb
mov
lret
gs
inc
push
inc
adc
xor
adcb
adc
dec
pusha
ret
push
pop
fisubrl
fstps
xor
divl
add
jb
aad
mov
mov
push
jo
add
icebp
dec
scas
sub
push
loopne
push
mov
repnz
adc
push
sahf
xchg
sbb
pop
lcall
or
sti
dec
cmp
je
or
stos
and
in
xchg
in
mov
push
mov
in
sub
adc
and
cmpsb
lcall
bound
js
call
lods
dec
adc
and
repnz
pusha
shlb
push
js
push
out
push
mov
cli
lahf
out
mov
dec
sahf
testb
rcr
fmul
jmp
call
cmp
or
dec
adc
das
sub
js,pt
les
lret
or
dec
inc
push
jne
mov
pop
sbb
iret
dec
push
mov
shlb
push
sub
cld
sub
and
and
cmpsb
shll
popa
insl
inc
jecxz
mov
les
lahf
in
outsb
stos
adc
cmpsl
lods
dec
push
mov
int
frstor
jg
int
push
scas
int
es
lcall
int
and
sub
div
push
sti
ret
add
mov
jmp
mov
mov
int
jmp
jns
loopne
cld
loopne
add
int3
cmp
ficoml
jmp
mov
adcl
int3
cmp
xor
loopne
dec
xorb
jnp
inc
inc
popf
push
xchg
out
xor
dec
lock
mov
or
dec
and
sub
push
in
cld
adc
pop
mul
inc
push
repz
pop
jp
cld
push
sbbl
mov
pop
bound
sub
enter
cs
out
std
mov
loope
cmp
out
and
dec
lea
sbb
or
dec
push
push
lahf
mov
dec
dec
xchg
jnp
sub
adc
jmp
or
push
icebp
nop
cmp
mov
in
jne
adc
dec
aas
xchg
sub
pop
lods
mov
fcmovnbe
push
in
dec
rolb
xchg
sub
dec
mov
fcoml
lods
popf
push
push
dec
lds
xchg
mov
fnstsw
mov
cmp
stos
and
cmpsb
sub
adc
add
cmp
or
insl
lret
mov
shll
inc
or
pop
dec
xchg
test
packssdw
inc
clc
push
push
mov
inc
movsl
mov
iret
cmp
nop
xchg
js
push
cmp
xor
aam
xor
xchg
orb
xchg
test
sub
sbb
mov
into
sub
movsl
cmpsb
shrl
stos
pop
xor
inc
dec
imul
jmp
inc
xchg
mov
outsl
lock
mov
jmp
shl
call
jae
ret
addr16
xor
movsl
xchg
lcall
stos
js
mov
jecxz
and
push
push
mov
mov
decb
mov
insb
push
lahf
xchg
mov
in
xor
cmpl
adc
int3
clc
daa
mov
pop
fisttpl
pop
addb
push
loope
jg
mov
push
pop
fwait
cmp
xchg
fbld
mov
in
dec
clc
and
sbb
js
push
xor
push
call
test
dec
add
xchg
add
mov
adc
and
mov
sbb
cs
mov
outsb
andl
xchg
sahf
dec
gs
js
cltd
test
jle
jp
iret
and
pop
cli
insl
jp
cld
mov
loopne
cmpsl
outsl
stc
hlt
inc
ss
jnp
and
mov
xchg
cmc
jmp
rolb
push
lock
test
xchg
gs
mov
lret
das
xchg
push
into
ds
mov
or
fadd
cmp
mov
loope
test
mov
cmc
sub
push
or
fdivrs
adc
mov
jl
adc
mov
dec
rorb
jecxz
and
add
jns
xchg
and
or
std
test
pusha
mov
push
test
movsl
sarb
ss
adc
mov
adc
push
xorl
sbb
daa
mov
and
jo
xchg
dec
cltd
lret
inc
stc
pop
fmuls
mov
sbb
xchg
rcrb
ficoml
jns
lods
jg
loope
add
mov
pop
clc
test
sbb
in
imul
inc
jecxz
lds
test
pop
inc
push
sarb
or
pop
scas
xchg
dec
rorl
nop
sbb
cmpsb
loop
jb
or
cmp
leave
clc
cli
bound
cwtl
neg
jp
fnstcw
mov
push
mov
xor
sub
fmull
push
jmp
out
mov
loop
ljmp
sti
stos
or
fwait
and
push
inc
xchg
and
add
imul
lret
sbb
xchg
add
arpl
pushf
arpl
ret
lret
xor
xchg
xor
or
stc
lods
mov
xchg
test
inc
dec
in
rorb
mov
lret
cmpb
repnz
adc
jmp
mov
dec
dec
ljmp
push
inc
ret
xchg
pop
xorb
insb
jg
cmpb
push
repz
ret
or
out
xchg
add
xor
sub
clc
lods
rolb
frstor
ret
push
lret
test
and
dec
fstl
cmp
out
push
cmp
inc
jae
and
mov
push
push
iret
dec
enter
pop
pop
xchg
int
cmp
jp
rcll
cmpl
mov
jnp
nop
push
out
arpl
test
mov
out
pop
cs
lds
rorl
xor
cmpsb
cmpsb
jmp
into
adc
mov
in
shrl
adc
scas
leave
sub
les
mov
adc
and
adcl
sahf
insl
lods
repnz
push
std
sbb
jb
push
fiaddl
or
adc
stos
pop
pop
mov
push
or
add
push
jg
insl
jl
adc
add
pop
ret
insl
in
mov
shrl
mov
pop
cli
cmp
in
sahf
mov
insb
inc
dec
xchg
les
cmp
data16
stos
sbb
je
jecxz
or
clc
cwtl
lret
mov
add
jno
mov
pop
inc
daa
dec
fnsave
jno
call
clc
ljmp
imul
jp
add
adc
lds
sbb
or
jo
inc
pushl
gs
mov
and
jecxz
loop
mov
mov
jecxz
mov
mov
cmpsb
dec
sbb
pop
adc
xchg
jmp
pushl
iret
sbb
mov
pop
jno
sbb
jge
fadd
push
outsl
adc
ljmp
nop
xorb
jnp
jns
int3
test
test
lcall
push
pop
sub
mov
xchg
ret
xor
mov
loopne
fwait
sbb
mov
jle
lahf
cmp
mov
cld
dec
push
data16
into
clc
sbb
push
jbe
jg
and
dec
mov
clc
sub
add
pop
cmp
idivb
lret
js
or
cmpsl
popa
loop
push
mov
xchg
cmpsb
and
mov
in
repz
cmp
jle
xlat
sub
mov
sti
or
mov
sti
aam
pop
test
pop
and
dec
out
mov
push
sbb
sbb
mov
fcmovnu
arpl
daa
adc
rorb
adc
add
or
sbb
push
sbb
call
adc
sbb
mov
popa
and
sbb
cli
add
and
aaa
jmp
adc
add
ret
pusha
outsb
cs
push
mov
out
popf
sbbb
rolb
repz
shrl
sub
inc
sub
cltd
add
jne
push
mov
sbb
push
xchg
push
mov
cmpsb
inc
fistpll
xchg
push
pushf
into
cmpsl
outsb
cmp
xchg
sub
lahf
in
inc
cmc
xchg
inc
jae
dec
ret
dec
or
sub
dec
iret
int3
jecxz
push
cwtl
orl
ds
xor
push
or
mov
lock
jge
sbb
or
loope
aam
ljmp
sub
pop
loopne
or
es
cmpps
lahf
pop
mov
int
mov
int
push
push
insl
out
sbb
xchg
mov
pop
mov
push
sub
leave
loope
adc
mov
pop
jl
cmc
fwait
loopne
pop
sbb
mov
fcom
sub
jo
pop
or
jle
cmpb
or
pop
pop
fwait
dec
and
mov
pop
adc
aam
fistpl
lds
pop
mov
cmp
jge
pop
fs
cs
xchg
cwtl
popa
stos
push
mov
rcl
jle
fcoms
ret
jns
pop
enter
loop
xlat
ss
mov
or
rorb
int
pop
outsb
adc
in
or
add
leave
fcomps
or
push
mov
cmpsl
loopne
jbe
add
lds
xlat
call
or
sbb
mov
aas
pop
jge
jno
cmp
test
outsl
xor
enter
mov
subb
pushf
loope
lahf
lret
add
je,pt
mov
loopne
sub
push
lahf
pusha
fimull
mov
dec
push
cld
xor
gs
shr
imul
xchg
jo
movsb
enter
popa
or
xchg
aaa
pop
gs
pop
int3
mov
inc
xor
xchg
insb
int3
pusha
and
dec
push
mov
dec
mov
es
cmc
sbb
jle
dec
lods
mov
imul
imul
iret
jp
mov
and
inc
sub
mov
cpuid
mov
cmp
xchg
imul
loope
xlat
scas
jbe
scas
pop
mov
mull
je
push
in
or
xchg
inc
lea
pop
push
subps
or
shrl
push
ja
xlat
punpcklbw
cmp
aam
sbb
or
ja
int3
mov
dec
push
push
insb
inc
rcr
ret
and
jl
sahf
into
push
pop
bound
outsl
cmp
ret
dec
jo
stos
enter
sub
adc
xor
mov
xchg
push
insl
out
cmp
enter
xchg
push
inc
cmp
out
iretw
cld
pop
xchg
add
cltd
add
xchg
addr16
stc
ds
addr16
subb
ret
js
inc
andb
cltd
inc
lea
xchg
inc
lock
jb
xor
jno
popf
or
and
sahf
jge
inc
bound
hlt
cmp
and
mov
sbbb
sbb
out
arpl
lret
jo
mov
push
pushf
push
pushf
in
xor
mov
and
dec
or
movsb
xor
cmc
pop
pop
push
enter
inc
adc
scas
jmp
pusha
lret
or
sub
std
iret
into
pop
adc
pusha
cmp
sub
dec
mov
xor
fdivl
mov
xchg
push
cmp
inc
inc
pop
mov
cmpsb
cli
sahf
xchg
imul
mov
lock
popf
into
pop
and
mov
sti
hlt
loopne
fwait
add
xor
out
lret
cmp
rcll
push
ret
cmp
jg
ficoml
jle
inc
test
rcll
xorl
mov
xor
or
and
inc
aas
add
mov
out
sahf
dec
push
hlt
imul
mov
lock
ljmp
testb
jnp
mov
repz
in
mov
fs
popa
or
test
shlb
dec
adc
pop
pushf
in
stos
cmp
push
push
push
xor
ret
sbbl
jbe
push
adc
dec
mov
int
pop
inc
arpl
sub
clc
mov
test
shlb
xchg
lahf
aad
test
jo
xchg
push
and
pop
adc
cmp
inc
jg
or
mov
repz
insb
mov
mov
lret
mov
loop
jge
mov
pushf
pop
xor
test
nop
testb
pop
pop
jno
xor
lahf
xor
xsaveopt
imul
sub
and
icebp
mov
aam
dec
xchg
jecxz
mov
sahf
fwait
jns
pop
loope
sti
mov
fstpl
xchg
sti
subb
mov
pop
pop
jecxz
imul
lcall
add
cmp
mov
aas
sbbl
or
fists
pop
lret
pop
rorb
push
dec
adc
dec
arpl
push
ljmp
cmp
subb
xchg
loop
or
ja
push
jle
and
xchg
shrl
sbb
in
mov
inc
shr
call
push
xchg
jnp
test
imul
in
hlt
xor
fdivrl
add
push
js
out
pop
dec
sub
lock
jmp
mov
sub
jae
mov
dec
push
outsl
jno
and
cmp
pop
or
les
jb
aam
imul
jecxz
pushf
loope
jge
movb
sub
lods
push
int3
stc
jnp
inc
mov
xchg
jle
add
jbe
xor
push
in
dec
cmp
movntq
cmp
je
scas
andl
xchg
sbb
jb
stc
pop
fistps
mov
out
cwtl
lea
cmp
enter
popa
aad
bound
ror
push
jl
repz
cmp
popa
xchg
adc
jbe
imul
sbb
add
or
inc
lock
push
movsl
outsl
insl
popf
mov
lret
add
insl
bound
lea
sbb
sbb
or
orl
xor
cmpsl
jnp
or
bndldx
ret
addb
sbb
lcall
lcall
cmp
mov
pop
add
jp
daa
mov
cmp
push
cmpsb
push
add
lret
lret
xlat
mov
mov
out
fucomp
cltd
and
add
push
sbb
popa
pop
sbb
xchg
pop
xchg
ds
je
push
mov
lahf
mov
std
idivl
mov
fdivrs
es
inc
jmp
sbb
aas
or
lahf
push
ret
stos
xchg
jne
push
jg
dec
pop
fdivs
inc
stos
cmp
xor
jl
lret
mov
lods
lock
jno
repnz
sbb
hlt
imul
out
jmp
mov
jp
mov
jns
push
bound
or
push
or
scas
addr16
sbb
rcrb
outsb
adc
lock
repz
nop
lock
mov
jmp
popa
aad
js,pt
adc
insb
cmpsl
xchg
dec
nop
push
in
or
lcall
mov
loop
test
cmp
mov
div
js
leave
jb
push
inc
sbb
test
scas
push
stc
pushf
add
fsubr
inc
sub
movsl
jne
jns
or
js
mov
pop
jge
and
cmp
xlat
pop
in
push
cs
pop
jae
mov
add
mov
push
sarb
adc
ret
pop
sub
jno
lahf
jge
pop
out
lds
dec
cmp
adc
lods
in
ss
and
add
mov
jnp
lods
ret
sub
lods
popf
or
pop
or
popa
sbb
int
jp
imul
pop
rcl
sahf
jae
mov
sub
dec
sbb
cmc
jae
mov
sahf
lea
rcrb
mov
cmpl
pop
into
pushf
sarb
arpl
fbld
sti
roll
push
subb
mov
mov
pop
jge
out
cltd
mov
scas
scas
xchg
cmp
mov
arpl
iret
pop
outsb
jmp
loope
fdivrs
nop
sub
or
mov
in
cltd
mov
push
dec
mov
cmp
rclb
clc
pop
pusha
push
sbbl
fdivrp
rcl
arpl
int
xor
divl
jl
xor
andb
enter
add
repnz
sub
inc
mov
subb
xor
rcrl
pop
xchg
mov
push
fucomi
out
cld
into
outsl
jmp
jne,pn
dec
fistpl
or
pop
sub
dec
shrb
inc
push
push
and
aas
lret
jge
inc
scas
add
xor
mov
push
push
enter
xchg
data16
inc
cmp
xchg
and
rorb
sub
mov
lea
bound
fists
jo
fisttpll
sbb
sub
clc
mov
sarl
xor
cs
mov
insb
cltd
cmpsl
sbb
daa
out
fwait
sub
stc
lods
mov
in
data16
int3
mov
sbb
mov
pop
add
mov
cltd
insl
iret
fmull
sarl
xor
dec
clc
mov
mov
sbb
xor
pop
fs
mov
inc
rcrb
clc
test
and
aas
xor
jl
mov
lods
pop
sbb
stos
mov
pop
sub
loope
push
mov
es
push
and
cwtl
jo
fcmovne
pop
mov
rcl
mov
add
nop
das
outsb
mov
mov
push
sub
sbb
pop
inc
jmp
imul
mov
js
mov
mov
in
fbstp
rorb
lahf
insb
and
inc
in
adc
cmp
mov
xor
add
rclb
shll
jb
adc
lret
sub
jecxz
sbb
sahf
fs
pop
adc
mov
mov
or
or
xchg
jmp
jae
mov
push
sbb
jle
rcll
pop
or
sarb
int3
fnstsw
xchg
inc
ret
xor
gs
and
adc
orl
mov
xchg
lcall
lahf
out
xor
mov
jge
fidivl
xchg
xchg
mov
aas
addr16
fmuls
sahf
cmp
insb
push
imul
mov
icebp
popa
shll
xlat
add
leave
cmp
xchg
cmp
pop
into
xchg
jecxz
cmp
sub
cmp
lcall
cli
xchg
mov
mov
std
jno
xor
addr16
add
aaa
mov
lret
arpl
out
xchg
and
adc
fistl
mov
in
jmp
sub
lahf
decl
fsubr
or
jge
pop
lods
jbe
push
rcrl
pop
mov
lret
add
add
jge
xchg
shll
sub
cs
ds
add
sti
lock
push
rcrb
aad
mov
lcall
jmp
and
cs
icebp
xor
out
mov
insb
xchg
mov
dec
cmpl
pop
stos
jns
ret
inc
shlb
popf
iret
scas
call
popf
stc
pop
jno
popa
movsbl
jg
call
xchg
mov
inc
and
add
xchg
mov
out
sahf
inc
lret
cmp
sub
jo
add
inc
es
test
pusha
lds
das
add
mov
cwtl
pop
adc
repnz
and
or
sub
xchg
mov
mov
jb
call
out
mov
scas
and
xchg
ds
xor
or
aam
pop
or
fndisi(8087
pop
cmp
adc
outsb
jbe
adc
push
pop
or
xor
mov
imul
or
test
out
mull
xor
call
xor
pop
movsb
js
mov
cmove
test
xchg
pop
dec
or
insb
push
cmpsl
xchg
push
xchg
inc
mov
nop
push
push
pop
and
loope
leave
mov
inc
xor
ljmp
inc
mov
sbb
jnp
mov
fiadds
jo
mov
sub
lods
adc
jnp
mov
aam
out
int
add
mov
jne
jns
pop
call
push
loop
jbe
mov
or
test
xchg
xor
enter
into
push
cmp
mov
mov
sub
and
jg
fwait
sub
sbb
gs
test
stc
icebp
mov
es
aad
hlt
fcoms
cmp
add
jp
pop
int
hlt
shlb
arpl
cltd
loopne
jbe
fstp
mov
sbb
arpl
aaa
ftst
push
sub
test
outsb
adc
xchg
jg
sub
call
fldenv
stos
fists
cmp
jno
and
out
ret
pop
xor
xor
out
add
inc
fidivrl
into
mov
test
adcl
shll
push
xchg
ret
mov
adc
sub
loop
push
mov
add
fldcw
ret
bound
cmp
dec
and
inc
mov
out
cmpsl
and
pop
shlb
sahf
sbb
orb
inc
and
addr16
test
out
fldl
std
dec
cmp
pop
rcrl
fs
test
and
daa
mov
dec
jbe
adc
cmpsb
sahf
cmp
xor
xor
jnp
aad
cmp
scas
jle
repnz
add
mov
xchg
sub
jne
pop
xlat
sub
sbb
inc
scas
jl
dec
push
mov
rorb
add
push
xchg
jno
cmp
pop
shrb
rolb
mov
addr16
inc
xlat
mov
push
sub
nop
test
fidivrl
mov
andb
roll
imul
outsl
clc
mov
pop
out
notb
les
inc
ffreep
ret
sub
push
xchg
or
push
add
sbb
mov
sub
push
pop
push
inc
loopne
shlb
cwtl
fdivrl
jge
jne
int
lea
cmpsl
inc
js
inc
or
arpl
push
adc
loopne
lea
mov
sub
insb
mov
popf
inc
push
inc
stos
dec
pushf
pop
test
adc
fxch
out
adc
out
adc
pop
ret
bound
aas
addr16
pop
andl
mov
icebp
pop
jmp
sbb
arpl
mov
movsl
movsb
adc
aad
dec
orb
outsl
sub
cmp
mov
loopne
aad
mov
arpl
xor
data16
jmp
and
stos
mov
mov
mov
mov
negl
inc
pop
fdivrl
mov
dec
in
shll
jb
pusha
insl
sarl
cld
repz
out
in
fimull
pop
mov
adc
xchg
out
sbb
shlb
jb
jle
push
add
xor
les
pop
xchg
add
add
sub
dec
rol
fildl
jne
mov
sbb
cmp
icebp
insb
sbb
rorl
add
repnz
dec
push
in
adc
lcall
adc
push
out
or
js
mov
jne
cmp
shrb
mov
decl
loopne
push
push
shl
cli
jge
mul
xor
inc
cmc
push
inc
inc
mov
dec
mov
sahf
sbb
jbe
fisubrl
stc
jl
aaa
cmc
add
sub
jecxz
data16
cmp
notl
jge
je
loop
sbb
mov
aaa
adc
rcrb
in
scas
jle
or
adc
sub
cmp
test
mov
enter
nop
cmc
into
adc
cltd
imul
pop
inc
cmpsb
loop
into
loop
inc
cmp
into
jecxz
sub
jbe
les
push
xor
push
mov
push
add
sub
fistpll
xchg
bound
mov
cmp
sbb
decb
xlat
adc
jl
xchg
movsb
inc
mov
loop
sbb
cli
xchg
sahf
rcrl
rcrb
lock
and
lock
test
jns
mov
and
std
ss
push
push
mov
shlb
lock
xor
dec
sub
cmpsl
setns
add
adc
aad
inc
int
push
popf
das
jecxz
call
les
xchg
loop
popf
mov
int3
cmp
popf
ljmp
repnz
icebp
stc
add
loop
jbe
lods
arpl
jae
cmpb
jo
push
ljmp
and
pop
test
fistpl
ss
mov
jmp
jnp
adc
cld
out
das
scas
mov
inc
dec
cmc
call
out
jbe
or
stc
leave
inc
jle
loop
outsb
sub
cmpsb
jnp
out
fwait
sbb
dec
mov
jmp
push
or
mov
int
leave
push
mov
cmp
mov
pop
push
movsl
jmp
jne
dec
mov
adc
mov
push
shlb
mov
push
outsb
into
jl
arpl
movsb
jmp
rorb
fdivp
pop
ss
popa
scas
cld
mov
push
leave
call
push
lcall
lea
testl
rolb
fs
sub
in
mov
insb
xor
dec
inc
loop
inc
pop
outsb
outsl
pop
xchg
bnd
jp
push
aas
lret
sub
xorl
jne
jmp
pop
mov
sbb
loop
sub
lds
pop
fcompl
imul
inc
test
dec
ds
xor
xor
loope
pop
insb
and
fidivs
pop
xchg
jl
addb
mov
mov
pop
xchg
aas
in
out
lret
shl
or
pop
push
iret
add
xchg
mov
pop
popa
icebp
gs
dec
push
add
xchg
fnsave
das
mov
mov
mov
sub
outsl
push
pop
pop
sub
inc
pop
aas
mov
aad
stc
xchg
sub
stc
faddl
shll
mov
js
add
ret
test
jle
nop
adc
add
jne
inc
dec
mov
daa
rcrl
out
jns
mov
rcr
inc
mov
pusha
push
out
sbb
jecxz
sti
jnp
lea
and
push
fwait
aas
icebp
lds
or
or
mov
or
movsb
loopne
sub
cmp
bound
sub
sbb
mov
scas
or
stos
fistpll
adc
icebp
cld
jge
fwait
mov
cmp
aad
jge
inc
fnstcw
stc
inc
lods
mov
push
xchg
or
ljmp
lods
cmp
pop
jns
or
in
movl
adc
mov
xor
cmc
sbb
ss
sahf
inc
shll
rcl
adc
repz
stos
std
push
push
pop
fs
jp
jo
mov
pop
adc
push
and
or
push
push
int3
lcall
sbb
push
fiadds
push
mov
mov
mov
jg
lds
fldl
and
or
jbe
popf
jmp
fnsave
dec
cmc
lcall
jmp
jge
dec
mov
das
test
add
push
ss
inc
sub
pop
movsb
loopne
loopne
jge
or
jg
popf
imul
push
mov
cwtl
ret
or
shlb
in
xchg
mov
jno
inc
loop
mov
sarb
les
clc
cmp
adc
xacquire
aaa
pop
push
fstpl
xchg
das
aas
es
pop
and
dec
pop
scas
cmp
mov
sbb
sub
or
test
mov
xchg
cmp
sub
cmp
dec
pop
sahf
jnp
leave
fistl
pop
adc
and
jae
inc
add
pop
cmp
out
in
scas
mov
test
xchg
and
jnp
das
shrl
and
icebp
out
imul
add
lret
cltd
testb
push
mov
popa
mov
arpl
aaa
sub
lahf
stos
inc
cmpsl
ja
mov
mov
call
xor
fcmovbe
js
jbe
push
inc
popl
sbb
icebp
pop
sub
lret
jbe
jmp
add
mov
subb
and
inc
jp
mov
bound
sub
lods
push
or
dec
nop
fsubs
dec
inc
cltd
movups
int3
or
jl
inc
cmpsl
inc
inc
test
jb
sub
mov
sbb
push
push
pop
pop
push
add
push
dec
push
cmp
and
imull
movsb
iret
loopne
lret
lods
xchg
dec
push
int
bswap
jmp
push
xor
scas
shll
sub
or
out
popf
pop
out
push
ret
test
sub
push
pop
repnz
mov
bound
mov
cmp
imul
adc
in
add
test
mov
push
daa
cltd
sbb
lea
xor
dec
mov
aam
pop
je
test
or
stc
cmp
pop
bound
xlat
gs
xchg
pop
dec
into
push
std
mov
scas
out
add
aas
gs
push
and
lea
pop
xlat
sub
insb
mov
in
cmc
movsl
add
dec
sub
sbb
shrl
push
adc
mov
add
ljmp
jp
shl
push
adc
das
jle
scas
sbb
ret
sub
cmpl
lahf
repz
mov
loopne
inc
shlb
lea
fs
fistl
insb
notb
lock
shrl
mov
stc
cwtl
xlat
and
std
push
cmp
mov
mov
pushf
push
rcrb
jo
aad
pop
pop
add
ret
pop
pop
cmp
fisttps
adc
lret
add
dec
rclb
mov
int3
xor
ljmp
push
aas
stos
and
aad
xor
or
shrb
jb
push
mov
not
and
cs
and
sub
push
jno
dec
or
leave
mov
xor
cmp
mov
fisubrs
daa
add
outsl
jns
mov
das
repz
sysenter
mov
jmp
adc
lds
sti
insb
dec
aaa
nop
dec
imul
add
mov
cltd
aad
les
add
fs
mov
jno
dec
and
lock
cmpsl
int3
je
icebp
das
in
xor
cmp
adc
into
inc
pop
or
pop
pop
mov
ja
sbb
and
push
and
lret
fnsave
lret
out
jno
cld
pop
adc
imul
push
dec
push
cmpsb
push
push
je
mov
jle
inc
push
mov
out
and
mov
sbbl
stc
adc
fucomip
cmp
in
xchg
incl
cli
sub
sub
je
mov
and
in
pop
inc
mov
xor
icebp
ja
iret
into
sahf
push
addr16
mov
and
sub
scas
int3
adc
pushf
dec
mov
out
mov
jp
and
aam
mov
imul
sbb
test
in
in
cli
mov
cld
jno
cmpsb
shll
jne
push
sub
imul
aaa
cmp
out
lock
clc
and
xchg
hlt
mov
cmp
pop
rcrl
insl
outsl
shll
lcall
add
pop
arpl
adc
movsl
jb
mov
adc
je
sub
pop
xor
push
mov
adc
inc
ret
cli
sub
fwait
fwait
mov
jne
inc
cmp
cmp
mov
add
pop
push
mov
inc
and
sbb
dec
add
movsb
repnz
jl
imul
lods
dec
loop
ret
call
adc
lock
xchg
mov
movb
decb
jle
xor
fsubrl
outsl
inc
aad
mov
sbb
mov
int3
or
fcoml
jg
sbb
outsl
jl
mov
shl
sbb
stos
test
mov
inc
int
pop
push
iret
pop
jge
imul
sub
cmp
cmpsb
rcr
cmp
jge
jne
decb
out
pop
xor
lods
pop
cmc
push
inc
in
push
clc
icebp
mov
mov
inc
and
pop
xor
pop
loope
jb
jge
push
fs
dec
cmpsl
lahf
inc
sub
adc
pushf
cmp
ds
adc
imul
fnsave
pusha
inc
sbb
lods
mov
adc
lahf
sar
insb
adc
xlat
mov
sbb
addr16
cld
testl
sti
pop
outsl
inc
inc
lods
sbb
jne
popa
mov
repz
jmp
adc
jno
incl
add
push
repz
nop
in
or
push
in
aad
xor
adc
fucom
orl
jnp
push
inc
mov
xor
lds
mov
ljmp
lods
mov
popa
push
js
xchg
cmp
arpl
call
inc
sub
ja
into
les
js
mov
jmp
sbb
xchg
sti
or
cmpsb
test
loopne
push
adc
push
mov
sbb
stos
cmc
adc
clc
add
sub
dec
pop
mov
adc
and
dec
pop
lret
push
adc
sbb
dec
push
aas
push
adc
or
out
dec
add
leave
sub
or
pop
mov
inc
sti
daa
xchg
mov
jecxz
addr16
add
inc
xchg
push
cltd
pop
cmc
lea
shlb
jno
push
nop
popa
ret
mov
xrelease
mov
pop
xchg
mov
lcall
push
icebp
dec
sub
movsl
fdivs
xchg
arpl
clc
sub
xor
dec
jae
jbe
pop
xor
mov
pop
mov
rorl
push
aas
into
movsb
ja
mov
scas
addl
mul
add
lcall
insl
add
insl
fbstp
fildl
jg
pop
imul
pop
xor
cmp
cmp
sbb
xchg
jecxz
mov
mov
dec
mov
or
add
sti
loop
dec
pop
sub
sahf
adc
sbb
enter
sbb
jecxz
xchg
insb
xchg
xchg
test
fildl
stos
ror
test
xchg
mov
cwtl
dec
jp
dec
mov
dec
lock
push
repnz
inc
cmp
cli
fwait
inc
sbb
negl
xor
push
cmpsl
sub
mov
mov
adc
push
mov
mov
fs
mov
rorl
inc
addr16
lods
pop
imul
mov
push
jecxz
out
push
jle
jnp
xchg
push
add
rcll
add
rorl
dec
scas
fdivrp
and
jmp
push
das
dec
push
stc
add
andb
add
les
cmpxchg
movsl
iret
cmp
test
inc
in
and
rol
lahf
stc
popf
icebp
cli
push
lahf
sbb
stos
scas
xchg
mov
test
xor
jge
mov
lahf
jmp
xor
and
notb
out
out
test
shll
xlat
aad
jmp
and
push
js
ret
dec
stos
imul
and
shll
push
sub
mov
out
dec
xor
cld
xchg
movsb
pushl
mov
mov
in
or
in
into
xchg
sbb
mov
push
sbb
add
xchg
jno
mov
mov
adc
mov
mov
jo
cmpsb
xor
ja
push
mov
dec
jl
andb
shr
mov
adc
push
mov
mull
sbb
xor
pop
jge
popa
stos
lret
pop
push
fsubs
insb
push
inc
in
inc
xchg
in
fisttpll
mov
repnz
nopl
outsb
sub
jnp
xchg
jo
test
adc
xchg
jmp
pop
gs
cli
js
icebp
adc
stc
in
inc
xchg
dec
and
cli
push
xchg
std
adc
ljmp
cmpsb
xor
or
inc
ret
fs
mov
mov
and
stc
lret
out
mov
fadds
fwait
mov
in
inc
mov
flds
pop
in
sti
xchg
std
jb
scas
sub
test
icebp
pop
sbb
movl
out
and
inc
xchg
ret
mov
into
js
lds
mov
inc
lds
iret
lcall
imul
mov
sbb
xchg
jbe
adc
fs
xchg
mov
dec
popa
add
lods
jb
cs
or
push
sbb
out
fidivl
jno
jno
loope
mov
push
pop
loop
jecxz
std
pop
ficoms
xchg
cmp
hlt
mov
mull
pusha
pop
aad
arpl
inc
xor
out
inc
sub
xchg
stos
sub
loope
sub
stos
cwtl
jns
xor
cmp
arpl
outsb
sub
jbe
or
push
arpl
mov
mov
pop
jge
data16
mov
and
pusha
push
lods
mov
std
or
stc
push
mov
test
rcll
in
subl
shlb
lret
and
in
data16
std
aas
outsl
hlt
fsubr
out
in
mov
and
and
mov
cmp
mov
xor
mov
stc
jnp
dec
scas
jo
jg
push
dec
enter
sub
enter
lret
bound
jmp
out
pop
sbb
xchg
scas
mov
mov
adc
mov
push
mov
adc
add
mov
xor
dec
cmp
pop
dec
ljmp
int
cmp
lock
cwtl
loopne
push
mov
mov
jmp
shll
add
jb
icebp
jle
xor
rcrl
jbe
out
clc
or
cmp
or
sbb
push
es
inc
xor
aaa
mov
sti
mov
cmp
xor
movsl
call
inc
loope
push
mov
push
xchg
ficoml
mov
andl
lcall
out
jmp
jne
cmp
mov
mov
popf
xor
std
test
lcall
pop
push
imull
sbb
fs
jge
iret
push
push
jecxz
sbb
fwait
sub
inc
rcrl
add
rcr
gs
rcrb
data16
inc
mov
outsb
imul
adc
out
or
push
cmpsl
call
sub
jne
xchg
inc
jle
movsb
and
dec
add
hlt
and
mov
ja
int3
push
mov
hlt
mov
jae
add
xor
cmp
int3
xchg
jl
test
cmp
or
loopne
cs
inc
in
mov
fsubrl
mov
mov
rolb
pop
scas
mov
jge
mov
repnz
add
stos
pop
in
add
das
jp
call
sub
adc
loop
sub
pusha
xchg
mov
or
xchg
inc
dec
adc
insl
jecxz
pop
jp
nop
xlat
in
movsb
pop
dec
scas
mov
in
inc
sub
lock
aaa
mov
nop
xchg
lret
xchg
das
push
lret
cli
lret
popf
test
mov
pop
stos
lret
push
daa
lret
mov
xchg
aas
add
icebp
inc
bound
ljmp
jle
mov
push
mov
out
and
loop
sub
add
mov
cmp
jp
orb
mov
das
mov
testb
lock
or
or
mov
test
sti
cmp
arpl
sbb
push
cmp
iret
and
rcrb
nop
and
fidivrl
ds
adc
clc
inc
adc
insl
push
bound
sub
or
outsb
cwtl
lock
pop
smsw
cld
ret
mov
push
or
hlt
dec
stos
sbb
sbb
fistpll
sub
xor
stos
cmp
mov
fadds
inc
movsl
in
sub
push
cli
mov
and
in
in
rolb
inc
idiv
xor
mov
je
mov
sbb
cmp
xchg
xor
mov
mov
dec
andl
adc
jno
xor
insb
add
dec
add
ret
jp
adc
ja
jnp
add
push
stos
cltd
int3
out
outsl
mov
lock
jp
je
arpl
ja
jg
push
push
push
pop
dec
mov
inc
pop
ja
sahf
cmp
adcb
daa
addr16
xchg
jnp
ds
test
sbb
mov
or
lret
push
leave
jp
xor
inc
dec
adc
pushf
testb
mov
aad
leave
aad
lock
cmc
mov
das
fdivrl
xchg
mov
cmp
imul
jecxz
aam
mov
mov
decl
mov
sub
icebp
lahf
int3
ret
xchg
pop
mov
sbb
or
inc
push
fsubrs
xchg
shlb
je
cmp
mov
std
or
sub
ror
stc
clc
pop
mov
icebp
mov
je
pop
xor
xchg
pop
cmp
fidivl
xlat
out
dec
scas
data16
cmp
sub
and
popf
mov
fsubs
push
fwait
xor
adc
hlt
lds
sbb
rcrb
pushf
into
jns
mov
lea
xor
popa
jne
cli
mov
inc
xchg
and
cmpsb
movsl
aad
dec
sub
mov
dec
inc
dec
sbb
mov
dec
cmpsl
adc
lods
notl
mov
xor
popa
sub
or
incb
loopne
insb
movsb
into
pop
adc
mov
cmc
adc
push
imul
sub
loopne
outsl
push
shl
lock
out
or
xor
mov
cs
imul
arpl
mov
ss
mov
ret
xchg
inc
mov
push
jg
mov
mov
scas
repnz
fcmovnb
insl
rcll
mov
int
sbb
jmp
mov
icebp
in
jb
bound
pop
inc
repz
fisttpl
inc
sub
push
sbb
icebp
mov
mov
iret
sarl
xchg
mov
pop
push
jne
and
sti
leave
daa
xchg
or
xchg
frstor
jecxz
xchg
or
sbb
aaa
jle
add
loopne
xchg
test
into
cmp
fadd
ror
leave
or
cwtl
inc
cmc
in
mov
dec
popa
in
mov
jae
sti
and
arpl
jge
xchg
xsaves
out
ljmp
push
imul
shr
movsb
lahf
xor
push
cmp
xchg
jae
sub
xchg
scas
jecxz
divl
lock
mov
dec
lcall
rclb
or
enter
or
mov
or
dec
xorl
sub
jbe
push
ret
int
bound
je
fbstp
fdivp
add
jnp
inc
jns
jmp
and
lret
cmpsb
pop
push
sub
mov
out
sub
inc
lods
lcall
mov
xor
popf
sub
inc
aaa
fcmovu
sbb
mov
lret
out
stc
repnz
sti
lods
ss
js
and
mov
sbb
movsb
push
fadds
into
mull
jle
push
cmp
sahf
sub
cmpsb
add
and
sbb
aaa
int
hlt
and
pop
pop
loop
push
adc
pop
sub
sbb
sbb
sahf
mov
jmp
pop
mov
sbb
pop
sub
or
jp
es
inc
int
outsb
xor
out
add
xchg
negl
js
dec
mov
jecxz
adc
xor
mov
or
pop
mov
sbb
movsl
adc
dec
xchg
pusha
rolb
inc
addr16
xchg
sbb
data16
hlt
out
adc
jmp
data16
xchg
xor
ja
movsb
rclb
adc
push
addl
or
mov
sbb
das
hlt
addb
push
mov
jb
inc
and
xchg
outsb
jae
sbb
jae
dec
fmulp
shlb
xchg
or
nop
enter
and
push
mov
das
mov
sub
mov
pop
add
jge
fadd
jbe
cmp
sar
pop
cmpsl
in
mov
pop
inc
mov
int3
sbb
mov
ljmp
rclb
outsl
popf
push
add
add
mov
xchg
loope
sbb
cs
xchg
pop
mov
rcrl
rorb
sub
push
sahf
jbe
sti
add
mov
mov
sbb
fs
arpl
lcall
mov
bnd
cmp
aaa
stc
mov
clc
data16
adc
icebp
cmp
popf
adc
lods
fmuls
out
fcom
mov
push
scas
cmp
int3
out
cmp
pop
lret
jmp
test
icebp
sub
lods
mov
sub
xor
sub
mov
sti
mov
popa
jns
aas
lods
popf
push
je
cmp
repz
pop
mov
rcr
pusha
sub
jno
xor
out
mov
mov
jo
into
mov
dec
jle
xor
push
out
inc
call
mov
addl
jle
imul
lods
into
aaa
fistpl
sub
jno
mov
lret
into
cmpsl
mov
scas
cs
dec
ss
iret
clc
addr16
mov
sub
loope
loopne
inc
loop
or
inc
dec
adc
shl
hlt
dec
cmp
jmp
pop
cmp
mov
ljmp
lahf
cwtl
inc
loop
fstl
push
jg
hlt
mov
pop
and
addr16
std
dec
xchg
push
in
mov
cmc
cmp
inc
lcall
adc
or
loope
inc
mov
xor
adc
xor
into
rclb
aaa
int
jmp
adc
and
arpl
adc
xchg
in
loop
xchg
xor
test
dec
cmpsb
adc
popf
loop
mov
mov
fwait
pmuludq
lods
leave
push
mov
jnp
mov
repz
inc
sub
pushf
out
xor
push
aas
out
push
mov
xor
dec
and
pop
loopne
push
lret
dec
push
push
jns
mov
jge
pop
push
or
or
mov
cmp
xchg
add
imulb
dec
cmp
ss
loopne
or
insl
ja
mov
hlt
sbb
pusha
dec
jo
add
pop
mov
loope
leave
pop
mov
xor
sbb
jl
adc
outsb
dec
cli
jbe
push
lods
mov
test
xchg
push
sbb
int
nop
sbb
pop
aad
push
inc
in
scas
pop
mov
lcall
loopne
mov
icebp
dec
lahf
sub
lahf
fst
aaa
cmp
insb
adc
cmp
mov
adc
imull
sbbb
lcall
out
stc
or
jno
testl
dec
movsl
xchg
in
pop
les
pop
cmp
rsm
cld
sbb
es
push
xor
mov
in
dec
and
arpl
lods
fisttps
inc
xchg
aaa
inc
jb
xor
push
push
adcl
mov
in
test
jp
push
xchg
std
cmp
xor
rcrb
or
add
mov
push
jl
mov
cwtl
mov
xchg
dec
subl
fdivrs
bound
mov
rcll
pop
jne
mov
pmulhw
xlat
fsubrs
cmpsb
movsl
sub
push
push
lods
bound
jo
cmp
adc
stos
xor
in
je
add
dec
out
or
fs
in
jp
movb
sub
mov
repz
aad
sub
mov
fwait
into
sub
test
lret
push
js
ret
dec
cmpsb
adc
sub
jns
mov
jp
adc
lcall
stos
inc
mov
sub
enter
int
push
insl
mov
adc
xor
mov
pop
mov
jae
dec
fcmovb
pop
pop
inc
and
adc
or
movsb
fwait
ss
popf
inc
sbb
push
enter
mov
jp
stos
pop
xorl
add
xlat
cs
sbb
xor
ds
adc
test
cmpsl
rcll
sbb
notb
jl
jecxz
sub
ljmp
lods
cmp
lea
shlb
pop
movsl
aaa
stos
and
iret
aas
mov
lcall
icebp
jle
push
push
lock
popf
xor
out
inc
cli
ds
push
inc
push
ds
inc
and
xchg
sbb
in
mov
pop
in
into
cmp
mov
push
pop
mov
xor
outsl
fwait
mov
sbb
fdivrs
dec
mov
loope
lret
bound
imull
adc
cli
xchg
adc
fdiv
mov
fwait
cmp
xchg
mov
xchg
jo
mov
cltd
out
pop
aad
out
pop
fcompl
jno
cmpb
pop
ds
sub
mov
punpckhwd
push
fstpt
sti
cs
lret
ficoms
jb
xlat
jbe
lods
or
cltd
and
movsl
cltd
pop
ds
mov
je
xor
lret
push
insb
dec
cmp
jmp
scas
mov
cmp
push
sahf
adc
daa
dec
pop
ljmp
ljmp
mov
mov
inc
push
fbstp
jl
call
nop
sti
gs
flds
jp
loop
jmp
mov
pop
shll
pop
jb
mov
and
push
sub
ljmp
xor
out
push
adc
xchg
fcmovnu
cmp
dec
mov
cmp
sbb
mov
inc
jle
repz
cmp
mov
mov
lahf
or
das
cmpsb
lods
clc
pop
loope
jb
lcall
push
xchg
out
and
sub
vmovdqu
sbb
dec
pusha
das
cmpsl
fwait
sarb
dec
adc
and
testl
rcr
xchg
and
jle
xor
sbbl
lret
outsb
stos
cmpsb
sbb
rcrb
aas
ja
out
xor
and
es
sbb
inc
addr16
mov
xchg
jl
std
jnp
jg
fiadds
mov
mov
lret
sub
pop
out
call
lret
test
daa
ret
mov
out
fstl
push
add
frstor
aas
or
pop
mov
or
jbe
push
mov
push
add
xchg
divb
mov
and
and
in
cmpsl
ss
cli
mov
dec
jne
inc
fistpl
cmp
bound
pop
push
andb
cmpsb
or
mov
movsb
popf
pop
jecxz
mov
scas
pop
jns
daa
mov
mov
push
pop
jnp
ss
int
mov
ds
xchg
lret
inc
mov
or
outsl
into
testl
sti
xor
or
mov
or
hlt
or
hlt
mov
bound
repz
rep
sahf
sti
add
mov
push
pop
jecxz
dec
adc
adc
stc
pop
sub
fcmovne
push
cwtl
pop
rcr
in
pop
jge
shll
and
push
xor
push
lcall
mov
push
in
cmpsb
clc
iret
es
stc
mov
pop
mov
add
xchg
mov
mov
test
sub
xchg
mov
in
ret
out
mov
stos
imul
mov
fsubrl
lods
test
dec
bound
mov
lret
test
sub
out
rolb
loope
js
test
lea
sub
aas
adc
sbb
xchg
fnstcw
test
xor
das
mov
sbb
fmuls
loopew
pusha
fisubl
xchg
jnp,pt
lds
hlt
push
add
mov
fldl
dec
ds
ret
std
inc
jmp
out
dec
jns
bound
rorb
mov
aad
leave
sti
push
mov
push
bound
cmp
xor
sub
sub
dec
cmovnp
in
sbb
iret
adc
mov
mov
addl
aam
mov
sub
dec
cltd
jmp
xchg
pusha
adc
and
setg
pushl
lea
das
push
cmpsb
cmp
mov
sub
sahf
enter
stos
or
repnz
cmp
fs
imul
sbb
add
inc
mov
ss
ss
add
xor
ljmp
idiv
and
rolb
fistpll
push
pushf
jp
or
sbb
btr
movsl
jecxz
je
imul
add
jns
sub
in
jmp
call
lcall
mov
inc
ftst
push
ds
mov
lcall
imul
outsl
cmpsl
jge
xor
sti
sbb
daa
sub
dec
mov
push
fisubrs
or
sbb
cltd
or
pop
mov
test
mov
push
xchg
mov
cmp
push
mov
icebp
lods
or
pop
xchg
xchg
or
dec
aaa
icebp
xor
test
and
mov
fcompl
xchg
lods
adc
mov
ja
imul
divb
cltd
in
dec
les
or
cwtl
fdivs
mov
xchg
mov
xchg
dec
mov
push
push
cs
in
adc
outsb
pop
push
sahf
or
ds
xor
sub
les
sub
dec
and
pushf
dec
inc
pusha
inc
insl
repz
push
insb
sbb
decl
cmp
call
inc
jo
xchg
sbb
gs
pop
pop
mov
cli
testl
push
sti
push
mov
mov
pop
dec
mov
adc
das
and
push
loope
stos
sbb
clc
jbe
push
mov
loope
sbb
mov
mov
popf
movl
push
cwtl
adc
jl
loope
and
xchg
bound
aas
fimuls
push
out
sub
lcall
sti
cmovbe
mov
inc
cmp
mov
or
std
cmp
xchg
adc
js
lock
pop
sbb
cmpsl
adc
arpl
push
jbe
stos
push
sub
sbbl
loope
xchg
test
shl
subb
ss
jge
mulb
lret
pushf
leave
jmp
outsb
push
sahf
call
cmp
add
std
pop
jle
call
sbb
dec
test
push
add
pushl
out
mov
leave
nop
mov
xorb
mov
pop
lods
jne
jmp
jge
and
rorb
in
fnstsw
dec
sbb
stos
pop
mov
out
orl
adc
call
test
ret
sub
mov
mov
xchg
push
icebp
arpl
cmc
mov
roll
fnstsw
jns
mov
addb
in
dec
std
sar
arpl
adc
mov
xor
xor
adc
sub
js
std
push
ss
and
add
adc
pop
mov
jo
nop
xchg
rcrb
adc
ljmp
stos
ja
mov
mov
pop
sub
adc
inc
testb
pop
cmp
bound
subl
pop
movsb
jns
icebp
push
lahf
iret
or
pop
pushf
mov
xchg
pop
ror
jecxz
repz
fcompl
test
lret
cmpsl
orl
sbb
mov
imul
push
insb
mov
jl
nop
out
sbbb
add
cltd
mov
dec
pextrw
adc
push
mov
mov
test
ss
dec
mov
mov
mov
pusha
inc
mov
adc
cmp
mov
or
push
push
inc
sahf
dec
rcrb
lcall
push
test
push
pop
adc
dec
test
dec
cmpsb
in
int3
dec
je
repz
je
jg
stos
scas
jmp
push
xlat
mov
jno
aam
lock
ds
xchg
xchg
inc
sbb
movl
xor
xchg
mov
outsl
xchg
aaa
popf
sub
and
cltd
mov
popf
loopne
mov
pop
or
sbb
adc
jp
sahf
sti
mov
sub
mov
add
mov
push
cmc
pop
fisubrs
inc
adc
inc
cmpsb
scas
pop
xchg
jnp
mov
cmc
mov
in
cmpsl
loopne
in
lret
insb
mov
mov
lods
cmc
into
mov
sbb
das
outsl
mov
sbb
data16
sti
movsb
scas
cld
fcomp
aad
xor
sbb
push
addl
aas
nop
jne
sub
ljmp
fdiv
inc
mov
aaa
adc
out
adc
out
in
pop
icebp
int3
test
xchg
add
das
movl
adc
pushf
jecxz
jbe
call
jb
popa
cmp
mov
dec
in
jmp
cmc
mov
jne
int3
test
cmp
jb
out
inc
sub
inc
clc
push
mov
sti
hlt
js
clc
arpl
iret
repnz
fsub
lods
mov
pop
in
sti
lock
stc
movsb
inc
jae
insb
jnp
and
out
sti
inc
xchg
rcll
loop
ds
std
js
jecxz
cmpsb
or
pushf
adc
aad
das
inc
sbb
pop
cs
mov
jnp
mov
cmc
mov
int3
out
hlt
mov
popa
xchg
sahf
add
das
add
sub
mov
and
xor
lock
cmc
movsb
enter
mov
call
mov
ds
pop
mov
mov
push
dec
out
mov
xor
fisubrs
inc
test
or
loope
shrb
lds
aad
rcrl
adc
scas
xchg
pusha
out
fucomi
mov
int3
pop
or
js
sub
inc
and
pop
sbb
pop
outsl
rcrb
or
int
loop
sub
subl
mov
fisttps
mov
or
rolb
adc
adc
jo
out
sbb
mov
mov
in
sub
ss
and
je
in
mov
jcxz
js
sbb
imul
push
stos
mov
das
cltd
inc
inc
mov
xchg
div
lahf
mov
or
cmpsl
movsl
imul
xchg
in
fistpl
test
xchg
scas
sbb
loope
pop
and
mov
inc
mov
xchg
testb
and
aas
or
fnsave
fs
mov
push
es
pop
push
sbb
aam
ret
arpl
fbstp
cli
addl
push
cmpl
cld
xor
jecxz
bound
or
cmpsl
mov
mov
lods
and
test
mov
cmp
jne
mov
inc
cwtl
pop
dec
fcomps
imull
jmp
outsl
cmpsl
dec
movsb
push
or
in
dec
sbb
push
std
pop
push
jb
or
int
or
imul
jl
and
aas
sahf
aad
scas
outsb
or
jo
sti
pusha
pop
xchg
in
rorb
les
adc
inc
mov
pop
mov
pusha
inc
push
xor
movsb
iret
fcmovne
fiadds
repz
das
push
dec
cmpsb
pushf
mov
imul
popw
pop
ficomps
mov
pop
pop
jb
sbb
xor
mov
mov
addr16
jmp
cmp
icebp
mov
js
sti
and
movsb
out
ret
jle
arpl
sub
mov
cmp
jmp
cli
mov
mov
xorl
add
je
add
mov
cwtl
dec
scas
outsl
scas
mov
and
mov
sti
lea
mov
pushf
adc
push
mov
adc
cmp
fdivs
or
cli
sbb
or
rorb
cmp
lahf
xchg
pushf
shl
bound
adc
xor
mov
xchg
pusha
daa
scas
in
jno
adc
and
or
and
call
lods
ja
mov
mov
pop
sbb
inc
adc
add
int3
gs
mov
add
ss
add
mov
xchg
std
shrl
std
sbb
mov
or
pop
or
test
mov
cli
arpl
or
int3
or
idivl
sub
std
and
lahf
xchg
into
fsts
loop
mov
bound
jg
in
jno
or
andl
imul
xlat
cmovno
cmp
mov
mov
xor
xor
les
sbb
and
mov
inc
xchg
lods
rcrl
mov
pop
and
movsl
adc
gs
dec
mov
rcr
fisubs
push
mov
jmp
mov
add
in
clc
add
xlat
or
mov
or
or
xchg
mov
mov
lds
iret
dec
ja
add
divb
std
push
xor
or
lock
sub
or
mov
loop
lea
push
cs
xor
mov
int
rcr
addr16
jne
dec
mov
fistl
push
xchg
inc
jp
or
lea
and
pushf
xor
and
cmp
daa
inc
xchg
pop
adc
push
adc
and
stos
xor
int
inc
fadds
dec
lret
sbbb
or
jno
and
mov
dec
and
jns
sahf
aam
dec
and
ss
in
push
int
sub
dec
leave
adc
push
sbb
add
cmp
xor
lret
xchg
sub
sub
test
out
lods
movsb
negb
xor
mov
mov
fildll
movsl
mov
mov
aad
cmp
fiaddl
jge
lock
sbb
cli
jmp
jbe
insl
mov
into
aad
push
mov
imull
leave
in
stc
out
leave
fistpl
lock
pop
mov
test
sbb
add
pop
pop
insb
inc
mov
insl
in
add
xchg
cmp
mov
adc
scas
loope
gs
or
or
pop
fldcw
scas
dec
dec
es
add
cmp
lods
fmul
pop
push
mov
sbb
cwtl
cltd
loop
cwtl
dec
xor
sub
fdivrl
pusha
dec
imull
dec
mov
daa
shlb
les
push
ret
dec
push
xchg
pop
jge
dec
and
aam
mov
xor
je,pt
dec
insl
je
lahf
or
or
es
mov
cmc
and
das
cmp
xorl
movsl
xor
ror
out
pop
cwtl
ret
scas
jns
jne
cmp
and
xor
ljmp
jecxz
mov
adc
aas
sbb
js
pop
sbb
cmp
pop
cwtl
adc
sbb
rolb
xchg
insb
ljmp
mulb
ftst
lret
das
fisubs
push
mov
sub
add
mov
xchg
ret
call
and
jge
jnp
jns
lcall
pop
pop
adc
adc
pop
push
shl
push
jg
jo
mov
fucom
sti
pop
popa
aas
and
sbb
out
pop
movsl
sti
mov
sub
cmpsb
out
fbld
cmp
jge
enter
cli
push
pop
mov
pop
push
lret
push
sbbl
popa
lock
and
xlat
call
mov
data16
fbstp
push
mov
jge
push
shlb
xchg
pusha
xchg
cli
shlb
call
jmp
push
pusha
lret
pop
adc
mov
or
iret
test
mov
hlt
call
inc
xor
or
dec
jnp
sub
in
lea
arpl
imul
xchg
mov
xchg
mov
sub
jge
sub
mov
jae
fcomi
cmpsb
and
dec
and
in
fstpt
mov
pop
xlat
jge
push
loop
xor
cwtl
movb
mov
add
orl
loope
aaa
test
lds
sbb
leave
and
repnz
inc
xor
jmp
cli
iret
mov
stos
sub
dec
movsl
daa
inc
popa
mov
add
mov
in
cmp
ret
jbe
mov
rolb
cmp
outsb
rorl
out
mov
ret
popa
inc
pop
loop
fs
stos
sbb
dec
xchg
mov
scas
dec
test
push
adc
aam
inc
push
lds
mov
pop
int3
cmp
cmpsb
jecxz
jmp
sti
push
addr16
xlat
in
cld
stos
push
ds
hlt
scas
lock
or
fstpl
shrl
movsb
xchg
imul
jbe
push
add
adc
es
mov
push
jmp
aam
xor
add
sbb
inc
lret
push
daa
daa
push
push
and
mov
sbb
fistl
ljmp
mov
fwait
xor
out
pop
cmp
push
iret
iret
xchg
test
hlt
add
xor
cltd
push
loopne
mov
jo
sarb
femms
push
or
mov
mov
fwait
inc
pushf
jnp
add
enter
stc
inc
clc
push
or
shll
test
popf
and
dec
mov
fucom
mov
dec
out
sub
lret
inc
sbb
add
ds
bound
pop
lods
mov
cli
lods
inc
and
push
pushf
push
ret
push
daa
sub
aaa
xor
xlat
je
add
out
fstpl
and
insl
mov
push
xorb
dec
mov
fidivs
movsb
lcall
in
leave
jmp
jne
xchg
mov
fnsave
xchg
cmp
add
sbb
push
jecxz
movsl
xor
sahf
pop
xchg
pop
sbb
shl
add
xchg
out
leave
in
lods
ja
cmp
xor
out
and
aaa
mov
and
outsb
inc
adc
ror
cmpsb
jns
or
hlt
mov
test
mov
mov
addb
or
push
mov
inc
in
add
out
jo
lret
add
ret
mov
push
outsl
call
mov
sbb
data16
push
es
inc
loop
lock
insb
adc
adc
sbb
jl
xchg
shrb
mov
pop
mov
mov
out
push
cmpsb
icebp
dec
aam
das
das
cltd
jge
mov
ret
shlb
xor
sub
and
fidivs
or
jle
push
xchg
xchg
inc
loop
or
dec
add
cmpsb
adc
mov
movl
push
aas
mov
movsl
enter
cs
loope
xchg
lcall
pusha
cmp
sbb
adc
fldenv
jbe
pop
xchg
shrb
scas
xor
cmp
add
jg
or
lret
jg
jbe
insb
and
sbb
xchg
push
mov
lods
add
mov
test
jge
add
cmp
dec
in
cmpsb
out
jnp
mov
pop
mov
lcall
add
loop
popa
icebp
and
rorb
add
and
std
jns
add
and
jbe
cmp
fcmovbe
shl
pushf
xchg
je
sbb
testb
aas
cmp
hlt
mov
aad
aam
add
pop
ror
jp
fnstenv
fwait
outsb
mov
aas
or
insl
icebp
mov
adc
pop
popa
push
mov
lock
pop
fdivrs
out
jl
js
pop
cmpsl
jge
mov
cmp
add
lret
out
loope
fsubrl
ja
icebp
inc
xchg
mov
pushf
dec
fadds
jo
shll
mulb
jmp
fs
pop
out
cmp
push
or
sbb
test
inc
and
test
lods
mov
xchg
aad
ss
lods
aas
inc
adc
lret
adc
cmpsl
or
pop
mov
mov
adc
jle
push
jno
retw
leave
enter
push
js
in
xor
fdivrl
cwtl
repz
jp
orb
enter
fcomp
jge
lock
or
setno
jbe
xor
add
es
jmp
jmp
lahf
push
mov
add
adc
cmpb
push
cmp
and
dec
push
addr16
xchg
mov
sub
inc
popa
dec
mov
pushf
push
in
int
xchg
test
inc
pushf
mov
pop
into
leave
xlat
arpl
addl
adc
std
or
int3
xor
and
int
sbb
imul
or
sub
loope
push
ja
loope
lret
xlat
stos
jae
fstps
mov
sbb
shl
jo
adc
lret
lods
mov
cmpb
stos
pop
iret
or
dec
push
mov
cld
push
out
shll
xlat
and
add
rcl
leave
pop
movsb
jbe
nop
test
repnz
cmp
sbb
xchg
inc
aas
add
repnz
loop
dec
imul
fsubr
add
sub
rorb
dec
pop
fnsave
cmp
dec
cld
fs
xchg
int
fpatan
xor
call
es
pushf
dec
into
mov
push
lds
mov
pop
pop
cli
xchg
in
enter
sarb
aaa
js
cwtl
loope
push
stos
or
adc
stc
mov
mov
call
rcll
adc
adc
stc
pushf
subb
adc
push
inc
ss
repz
out
mov
movsb
xchg
push
aas
fcmovnbe
jp
out
movsb
sbb
test
loop
push
lret
dec
jae
dec
test
aaa
cld
je
aaa
das
jne
lahf
inc
dec
fdivrl
mov
outsl
add
cs
fxam
adc
push
dec
dec
cmp
loop
in
stc
clc
rcl
cmpsb
test
je
rcrb
jl
fldenv
and
jge
test
xor
sbb
rcl
add
push
xchg
xor
pop
lds
cmc
in
and
nop
jnp
fsubs
aaa
shll
inc
inc
les
xor
mov
int3
jbe
inc
xchg
repz
push
add
sub
sub
rcll
enter
dec
insb
and
fwait
daa
inc
movsl
cmp
xchg
in
inc
cmp
stc
testb
movsl
cmp
int3
cmpsb
jo
push
mov
mov
dec
lret
fsubrl
mov
xchg
inc
popf
adc
jb
cmp
test
adc
daa
cwtl
daa
inc
jp
test
addr16
jo
add
ret
xchg
sub
cld
popa
xor
cmp
insl
rcll
sub
push
adc
pushf
insl
ss
mov
fadds
adc
adcl
jo
mov
mov
dec
xor
mov
or
xchg
pop
dec
jae
mov
out
mov
and
mul
jp
jge
xchg
mov
loope
cmp
in
cmpsb
int3
lret
mov
stos
pop
cmc
movsb
loop
jbe
pop
jle
stos
dec
into
push
pop
and
cli
sub
mov
sbbb
lock
imul
push
mov
int3
popf
xchg
mov
in
sbb
loop
jmp
pop
jle
push
ja
iret
adcb
sub
or
xor
rcr
mov
ja
mov
sub
enter
jl
cmpsl
pop
test
adc
mov
mov
and
and
mov
mov
scas
dec
inc
mov
inc
pusha
dec
test
inc
mov
jae
in
jg
jge
sbbl
xor
pusha
add
mov
pushf
int
test
loop
cmp
xchg
pop
push
jbe
and
cmc
jns
push
mov
mov
xchg
or
and
jno
ja
into
cmp
xor
jecxz
popa
arpl
pop
test
sub
out
aad
aam
jb
mov
test
andb
adc
int
fsubrl
and
inc
lods
xchg
mov
pop
cwtl
push
stc
push
sarl
shlb
lea
leave
movb
add
scas
not
push
adc
jo
lods
inc
adc
mov
cld
adc
enter
and
cltd
push
lahf
std
pushf
outsb
outsl
xor
imul
test
push
sub
notl
insb
jb
cmp
add
mov
cli
xor
mov
out
pushf
pop
jp
ficomps
push
outsl
mov
dec
outsl
sub
xor
mov
jle
test
data16
pop
mov
jle
lret
push
sahf
bound
cmp
lret
int
pop
out
fiadds
xchg
fsubs
popa
xchg
or
lret
das
mov
jp
mov
cwtl
mov
rclb
sub
mov
nop
lods
xor
mov
cmpsl
loop
xor
push
movsl
test
push
push
add
into
int3
mov
push
sbb
movsl
mov
sbb
lds
xor
int3
stc
lds
add
mov
sbb
sbb
negl
dec
push
jmp
mov
cltd
aaa
bound
mov
clc
push
mov
lea
mov
lds
pushf
sysenter
les
jno
jne
cmpsl
sub
pusha
in
sahf
dec
popa
sti
mov
iret
sbb
sti
gs
idivb
iret
ss
cltd
inc
push
xorl
xor
pop
mov
pop
inc
rcrb
mov
xlat
pop
movsl
adc
sbb
adc
inc
roll
sub
mov
jge
xor
sub
and
ja
adc
mov
xor
dec
push
xchg
inc
ret
xor
mov
mov
cmp
data16
mov
xor
mov
jns
xor
inc
mov
stos
addr16
mov
jl
daa
push
out
call
xor
mov
mov
popf
les
cwtl
xor
rcrl
mov
into
sub
mov
mov
xchg
in
dec
bound
ret
roll
xorb
js
fnstcw
adc
in
xchg
jle
sub
pop
scas
mov
xchg
leave
fadd
scas
xchg
cwtl
cmp
std
inc
jbe
sub
adc
insb
popa
popa
fwait
stos
inc
or
or
xor
call
sub
bndstx
sub
in
loope
fisubl
std
aas
sbb
and
lds
test
or
divl
ret
lahf
mov
push
gs
pop
xchg
mov
adc
jl
mov
and
popf
sbb
adc
push
shl
js
inc
test
jp
adc
push
int
lcall
jl
xor
mov
pop
inc
mov
mov
mov
out
mov
xchg
jle
ss
and
jl
pop
add
push
push
mov
or
test
frstor
test
inc
in
jp
and
fidivrl
and
lock
mov
in
popf
scas
adc
rcll
mov
addr16
aaa
add
in
dec
push
dec
inc
jp
jnp
inc
pop
jno
ljmp
push
jge
int3
mov
daa
cmp
cmp
loope
sbb
xor
enter
loope
cltd
daa
dec
lret
xchg
js
iret
lcall
or
lods
icebp
in
mov
xchg
stc
pop
mov
roll
rorb
test
fildl
jb
test
cmp
stc
adc
push
dec
mov
pop
out
ss
mov
outsb
movsl
popf
sarb
add
pop
pusha
cli
fs
in
or
push
imul
sbb
sub
xor
pop
dec
jo
neg
orl
cltd
inc
aam
cmp
cltd
xor
ss
dec
sbb
loope
cmc
xchg
sbb
out
adc
inc
ret
push
insl
idivl
and
pop
jb
test
pop
xchg
push
jne
ret
pop
arpl
or
push
in
push
xor
fidivl
movsl
jae
jae
rcll
cwtl
lret
fmulp
mov
sbb
add
push
enter
cmp
inc
inc
std
dec
xchg
out
lods
xor
cwtl
mov
aas
outsl
pop
push
loopne
push
mov
xor
dec
inc
popf
lods
mov
inc
xor
sub
scas
ss
inc
mov
stc
cwtl
fwait
les
ss
ss
ja
or
sub
imul
dec
jg
pop
subl
pop
scas
inc
aaa
and
sti
ss
cmp
scas
cmp
test
lret
sbb
mov
or
adc
xchg
inc
pop
shlb
jns
push
jg
fadds
jo
flds
sub
mov
or
aas
mov
jno
out
or
push
or
repnz
hlt
mov
sar
dec
arpl
std
lods
xor
add
stos
outsl
setl
mov
add
pop
xchg
pop
aad
sbb
pop
sbb
aam
jbe
adc
scas
or
imul
pop
xchg
or
mov
stos
sub
pop
fstps
das
dec
repz
aaa
or
add
gs
pop
cmp
adc
cmp
lahf
dec
or
push
iret
cmpsl
push
cmp
sub
push
push
push
adc
dec
cli
cmp
sub
sti
jge
push
push
mov
adcl
push
inc
lahf
shll
adc
popa
xchg
roll
rcll
lahf
jge
xor
add
cmp
jg
dec
sbb
mov
lea
sub
stos
push
sbbl
lret
xchg
daa
mov
xchg
std
mov
je
pop
jbe
cld
pop
inc
fistps
xor
lret
inc
inc
add
jmp
sbb
fdivs
jle
iret
xor
xchg
jns
clc
xchg
mov
movsb
push
int
stc
sub
sbb
pop
ljmp
xor
cmp
and
xor
cld
dec
sbb
or
scas
stc
dec
adc
xor
into
dec
sbb
int
sub
imul
jbe
notb
scas
cmp
movl
inc
gs
push
push
icebp
jno
add
les
xor
mov
xchg
fdiv
dec
sbb
jae
jno
sahf
ret
subb
and
fidivs
loopne
inc
nop
mov
add
sub
mov
lret
or
adc
dec
insl
mov
cmpsl
push
and
lods
pop
adc
out
xchg
cmp
call
sub
adc
leave
xchg
or
ss
and
je
mov
pop
and
dec
xchg
test
mov
jb
cltd
sub
andl
movsl
push
mov
mov
cli
gs
adc
pusha
push
pop
dec
or
leave
mov
cli
adc
clc
push
jne
jp
jge
adc
adc
ss
jmp
adc
xor
mov
pop
les
mov
pop
in
repz
jp
rol
out
mov
and
add
push
scas
jnp
lret
fiaddl
jmp
ds
scas
sbb
xchg
pop
adc
icebp
dec
inc
fnsave
faddp
into
movsl
jne
loop
pop
lret
push
mov
push
outsl
jns
lret
xchg
xchg
pop
jns
sub
stos
sub
pop
les
xor
scas
mov
clc
ds
mov
outsl
push
pop
pop
in
aam
les
stc
pop
mov
sbb
imul
rorl
xchg
cwtl
lahf
xor
and
push
packssdw
sbb
bound
ljmp
cld
pop
int
jmp
imul
dec
ljmp
xchg
inc
mov
pusha
jp
stos
mov
ret
sbb
jecxz
ret
cmc
xor
xor
xchg
das
mov
xorl
in
in
adc
insl
mov
pop
push
jl
push
cmp
mov
sub
into
xor
jne
or
jb
jns,pn
test
insb
push
push
leave
ja
repnz
outsl
pop
int3
dec
in
add
and
loopne
in
and
ljmp
je
test
mov
test
push
mov
xor
add
stos
or
inc
notl
std
shrl
test
dec
push
add
lods
inc
pop
js
lret
bound
movsb
jae
xorb
push
xor
or
push
sbb
mov
sar
in
adc
pop
test
jns
out
arpl
xor
add
mov
xchg
in
in
iret
pop
pop
mov
and
mov
and
xor
das
cmp
xor
pop
push
gs
push
jg
out
sbb
mov
mov
jecxz
pop
fidivrl
cwtl
mov
jg
jne
fldl
and
mov
sahf
push
mov
aas
outsl
bound
jb
sub
lret
jp
push
cmpsb
push
daa
cmp
xor
imull
out
sub
push
scas
jo
adc
repnz
lcall
push
and
cli
inc
cmp
stos
mov
test
sbb
jne
mov
mov
cwtl
lret
push
mov
cmp
jnp
sar
sbb
mov
or
push
cmp
fwait
cli
int
lea
andl
jae
mov
lahf
jno
pop
fucomp
mov
mov
xchg
negl
aas
das
dec
int
push
daa
push
xchg
test
and
loopne
mov
rcrb
das
mov
xor
add
lcall
xor
mov
pop
out
push
mov
jo
inc
mov
adc
inc
std
dec
test
pop
add
and
cmpl
test
adc
adc
cmp
push
out
fs
pop
stc
add
pushf
cmp
insl
inc
dec
adc
adc
mov
push
das
sub
pop
mov
out
jb
mov
lock
cltd
or
cmp
stc
sub
add
xbegin
mov
stos
cmc
push
or
push
cmpsb
lods
mov
mov
and
fisttpl
pop
push
xchg
daa
push
fadds
ficoms
adc
mov
mov
imul
sbb
xchg
test
cld
lock
cltd
mov
fcoml
push
lea
aad
cmpsl
adcb
mov
sub
jle
jb
inc
xlat
jecxz
mov
adc
das
xor
cli
pop
push
in
push
push
sub
cmp
or
notl
popa
inc
sub
lret
and
aam
pop
lret
pop
jge
cmp
cs
in
movsb
push
mov
lods
pop
pop
insb
mov
ja
adc
arpl
pop
popa
int
push
leave
fsubrl
jp
cmpsb
push
mov
xchg
add
cli
push
mov
imul
pop
test
dec
repnz
xchg
or
lahf
inc
cltd
jnp
push
out
sub
outsb
test
inc
arpl
mov
xor
std
xor
gs
in
and
js
and
cmpsb
adcb
dec
mov
mov
dec
push
ds
cmpsl
rcrb
lcall
clc
jecxz
mov
lock
xchg
ret
or
subl
pop
xchg
shrb
mov
out
fsubp
dec
push
fucomi
push
push
xor
pop
cli
ffreep
test
pusha
mov
into
xchg
inc
sub
adc
mov
in
pop
push
faddl
in
out
sbb
pop
into
out
lea
fldcw
xchg
frstor
out
xchg
lret
or
xlat
fdivs
push
jle
nop
push
mov
lods
pop
pop
notb
add
xchg
pushf
repz
cmp
cmp
mov
xchg
imul
push
lods
and
push
popf
mov
or
mov
push
out
ds
or
nop
cs
jo
or
mov
push
test
cli
add
outsb
sbb
mov
dec
xor
jne
test
shll
aaa
pusha
stc
ss
mov
and
and
mov
or
add
sti
push
mov
popf
call
shl
adc
and
xor
lcall
cmp
lret
dec
fistpll
push
sub
mov
pop
jp
cmp
neg
les
mov
in
les
push
cli
cmp
cmovae
xlat
pop
maskmovq
idivl
outsb
xor
mov
andb
xor
adc
testl
xor
nop
cld
shlb
ss
pop
push
movsl
add
xchg
fxtract
fidivrl
insb
dec
mov
dec
jge
pop
popa
scas
pop
ficomps
xchg
repz
cmp
pushf
push
jle
es
mov
mov
xchg
insl
popa
sbb
iret
pop
cmpsl
int3
int3
enter
imul
imul
mov
out
stos
mov
mov
xor
pusha
in
les
add
jg
xchg
ds
sub
cmp
and
xlat
jo
push
clc
pop
and
jo
aam
jge
fcompl
adc
dec
pop
inc
aam
popf
adc
rorb
mov
sahf
out
lods
and
mov
dec
aad
cmc
je
or
jno
testl
mov
dec
jl
mov
dec
faddl
adc
or
sbb
movsb
add
jae
out
imul
jns
pop
adc
and
sahf
xadd
or
push
dec
loop
fucomip
imul
or
divb
je
ja
ja
inc
cmc
outsl
test
aad
test
xchg
add
je
pop
sbb
dec
addr16
push
cmpsl
imul
mov
add
jge
pop
cmp
das
push
loop
add
sahf
das
cmp
xor
pop
int3
not
dec
ja
sbb
dec
aas
or
fbld
aaa
mov
in
pop
in
sti
xchg
mov
lds
jo
jo
or
fabs
aaa
out
aas
out
mov
and
shll
test
jae
mull
mov
cmp
mov
lahf
test
test
insb
or
mov
mov
pop
push
enter
sahf
pop
pop
insb
fs
flds
gs
push
in
sbb
fadd
mov
pop
addr16
fs
call
jle
xchg
or
loope
or
adc
in
les
push
push
lcall
mov
xchg
ja
fidivrs
mov
sbb
fwait
cltd
pop
daa
repnz
lea
inc
mov
inc
outsl
fildll
push
mov
aad
ficomps
add
sbb
mov
rolb
sub
test
les
shl
mov
imulb
iret
sub
jae
mov
sbb
ret
lret
jge
repz
sti
repz
fcoml
fisubrs
mov
fld
push
xchg
repnz
sub
into
push
fmuls
aam
pop
in
adc
xchg
fwait
xchg
adcb
cmpsb
daa
outsb
xchg
sti
cmp
push
pop
mov
xor
lods
cmpsl
lahf
cmp
pop
addr16
mov
data16
mov
adc
xorb
adc
leave
cmp
sbb
jle
inc
adc
addb
xchg
jl
adc
xchg
fcmovnbe
adcb
or
ljmp
fists
pop
pop
negl
rcr
push
push
popa
or
hlt
dec
popf
xor
pop
xor
lcall
call
add
sub
add
cltd
imulb
jge
icebp
insl
mov
vmovaps
mull
or
dec
push
fdivrl
dec
adc
push
aas
lods
push
call
sub
jmp
out
repz
pop
cmp
pop
out
inc
gs
cmp
icebp
xor
cmp
sbb
jb
xor
cmp
sub
xrelease
jg
jae
popa
inc
lret
fwait
adc
jecxz
dec
add
push
lahf
xor
bnd
push
lea
test
loope
sbb
mov
push
pop
push
mov
cmp
test
mov
jl
jbe
rclb
or
lock
push
xchg
sub
jg
jge
cmp
loop
nop
cmc
or
gs
call
adc
push
add
adc
jae
push
rcrl
int
das
test
sbb
mov
lock
push
outsl
test
jae
mov
adc
outsl
adc
call
test
xor
pop
dec
out
scas
cwtl
lahf
loopw
inc
jl
xlat
push
icebp
xor
sub
into
or
mov
push
mov
jg
inc
xchg
and
xlat
pop
pushf
std
stos
outsl
test
ret
pop
dec
dec
mov
adc
xor
xor
scas
je
outsl
jb
push
xchg
lds
jge
test
sarb
jo
cmpsb
jnp
popa
push
pop
and
add
mov
xor
xchg
test
bound
imul
jne
push
enter
or
out
ja
xor
ret
imul
imul
stos
push
mov
mov
sbb
cld
test
out
push
inc
pusha
and
mov
les
jb
sarb
rorb
push
loopw
cmp
pop
jae
mov
jne
xor
mov
rcrl
repnz
jno
mov
mov
jns
pop
add
loope
jp
xchg
in
ret
mov
sbb
xchg
pusha
repz
add
xorl
jbe
jg
push
bound
lahf
adc
inc
push
in
jg
pop
cmp
out
push
pop
xchg
loop
rcrb
adc
shrb
sub
push
push
cmp
int
test
les
pop
lock
iret
insb
ja
int
push
add
stos
andl
roll
and
das
fldcw
sbb
inc
xchg
cmp
into
push
fcoms
std
enter
stc
sahf
dec
outsl
xor
xlat
les
xchg
or
outsl
jne
mov
test
mov
jg
mov
ss
push
lret
rcrb
mov
in
mov
aad
test
lcall
push
jne
xor
xchg
movsb
mov
stos
lock
enter
push
daa
jmp
push
push
pop
adc
xchg
pushl
dec
fiadds
push
js
imul
movsl
dec
int3
frstor
sub
nop
sbb
xor
mov
mov
mov
sub
hlt
and
or
aam
and
xorb
push
ja
mov
mov
add
mov
pop
xor
arpl
inc
roll
out
push
stos
xchg
mov
test
pop
xchg
ljmp
inc
ja
sbb
cwtl
loopne
daa
ljmp
call
push
pop
loop
in
rolb
jbe
push
daa
dec
xor
mov
shrb
lea
sbb
lea
cmp
add
adc
das
mov
scas
fmuls
adc
mov
sub
test
je
shll
movsb
xchg
lcall
pop
jp
inc
mov
sub
jmp
push
shll
push
push
pop
sbb
xor
out
inc
and
stc
ja
and
out
mov
adc
inc
sub
stc
mov
lcall
mov
cmp
insl
push
insl
in
xchg
cs
shl
jns
mov
mov
pop
inc
mov
or
jge
es
stos
inc
pushf
and
inc
mov
xor
imul
ss
negb
or
push
sarl
in
mov
pop
pop
mov
sahf
lret
add
and
sub
dec
pop
add
les
pop
ror
and
mov
xchg
pop
push
sarl
push
hlt
dec
jb
es
xchg
mov
add
lea
inc
pop
jns
lcall
test
jp
mov
xchg
adc
int
call
add
imul
pop
das
sub
mov
mov
jle
and
and
aam
into
xorl
push
xor
xor
mov
mov
xchg
fmul
mov
test
cmp
mov
and
dec
inc
and
fdivr
jb
mov
and
mov
and
addl
dec
inc
fmull
jbe
daa
in
mov
into
jle
sub
fimuls
mov
stos
test
stos
or
jge
add
clc
add
cmp
imul
inc
dec
movsl
data16
call
mov
loope
mov
daa
sbb
add
pop
cmpsl
mov
icebp
and
mov
sbb
iret
dec
adc
in
in
and
jne
push
repz
adc
mov
lods
adc
movb
in
and
in
pop
imul
adc
fidivrl
cmpsl
cld
insl
leave
adc
mov
or
ret
adc
mov
jno
jmp
ss
popf
xor
loope
ret
cmpsl
jnp
mov
mov
add
jae
inc
pop
or
aaa
pushf
xchg
lds
stos
sbbl
jnp
mov
xor
sbb
mov
out
hlt
and
out
test
popa
push
or
incl
push
out
xlat
jmp
jle
jbe
jmp
into
in
xchg
xchg
lret
insl
jns
sbb
dec
pop
stc
mov
addl
xchg
jo
insl
stc
pop
out
int3
push
push
and
push
mov
es
jbe
mov
and
call
inc
imul
lock
sbb
jae
nop
loopne
xor
rcll
jo
mov
aad
mov
leave
leave
mov
loope
cmpsb
imul
ds
inc
xchg
jnp
mov
mov
mov
adc
inc
mov
imul
in
or
jp
jl
xchg
inc
jne
icebp
push
js
sub
lret
nop
andl
int
jp
jns
mov
test
xchg
xchg
mov
push
sbb
adc
lea
stc
mov
cmpsb
sahf
pop
lcall
hlt
les
and
xchg
testl
maskmovq
testl
popf
sub
mov
jo
push
popf
jo
mov
es
mov
pushf
pushf
mov
jne
add
not
test
mov
add
shl
sbb
ss
in
stc
cmp
sbb
mov
push
leave
mov
xchg
pop
and
in
inc
loop
push
add
push
flds
hlt
das
test
test
in
mov
test
test
jmp
or
cld
lea
das
insl
fwait
shlb
ss
inc
jmp
push
jle
sub
rcl
dec
add
pop
int3
pop
ret
mov
imul
fsubs
testl
mov
jo
mov
lock
pushf
xchg
sub
cmp
inc
loope
or
ret
aaa
pop
pop
mov
ljmp
mov
std
jno
sbb
addr16
cltd
jbe
mov
sbb
dec
xchg
jp
pop
jb
mulb
adc
lret
inc
insb
aaa
mov
push
xor
test
pop
xchg
adc
jecxz
or
lods
clc
push
pop
mov
mov
popa
xor
xchg
addr16
mov
xchg
andb
sub
stos
cs
xchg
add
or
push
push
inc
insb
aas
jecxz
scas
dec
mov
clc
test
pop
and
lret
mov
cmp
adc
inc
pop
fwait
in
int3
xchg
cwtl
push
sub
push
fsubrl
mov
fisubrs
incl
jl
lods
dec
out
xlat
and
cmpsl
push
add
sar
and
add
orb
sti
loop
imul
inc
mov
inc
loopne
in
rorb
stc
cmp
int3
add
or
ret
mov
insl
insb
inc
scas
icebp
mov
lcall
dec
push
mov
pop
dec
jae
imul
adc
inc
stos
mov
inc
push
fcomps
bsr
adc
and
xchg
lret
push
cmp
lock
adc
dec
filds
xor
scas
mov
das
jns
add
sub
cmp
fiaddl
or
mov
movsb
stos
lds
jnp
scas
xchg
and
sub
mov
mov
lret
mov
lahf
int
jmp
dec
push
push
dec
cmp
cmpsb
push
mov
or
pop
pop
lahf
add
enter
and
gs
and
dec
sbb
jmp
pop
insb
pushl
es
daa
fcoms
pushf
scas
js
sbb
jge
mov
add
mov
xchg
popf
mov
pop
adc
loopne
mov
addb
and
je
adc
push
mov
lret
pop
mov
icebp
ljmp
jbe
data16
push
xor
push
or
shll
mov
mov
mov
inc
add
aaa
adc
add
add
push
mov
shr
or
sub
imul
xchg
add
cld
or
fistps
sbb
leave
xor
or
xor
das
sbb
adc
hlt
hlt
xchg
shrb
mov
jmp
sub
in
adc
add
out
iret
cld
xchg
sbb
sti
movsb
les
enter
out
lods
js
repnz
js
loop
jns
pop
pop
or
dec
cmp
xchg
mov
push
adc
pop
fwait
movsb
jl
in
mov
and
pop
xor
adc
cmc
ficomps
jecxz
add
daa
sbb
clc
popf
push
mov
or
fwait
int3
cli
pop
insb
cmpsb
mov
dec
mov
out
dec
call
mov
pop
cwtl
jne
pop
and
ds
out
lock
repz
mov
jl
xchg
mov
adc
sbb
or
jg
mov
sbb
push
pop
sbb
outsb
mov
xor
adc
and
xchg
and
mov
jnp
or
notb
xor
mov
pause
icebp
dec
adc
jno
std
inc
lods
je
or
hlt
pop
cmp
dec
arpl
mov
cmc
dec
add
int3
or
and
push
loope
jns
sahf
mov
test
pop
aad
fcompl
bswap
mov
lcall
les
aad
int3
iret
jp
negb
aad
fsubs
dec
push
sbbl
enter
cmp
lock
pop
sbb
cmp
xchg
mov
mov
push
sahf
iret
xchg
and
in
adc
idivb
scas
mov
cs
sub
lock
push
push
leave
xlat
jnp
loope
mov
mov
mov
push
lret
or
mov
fiaddl
loopne
ret
dec
sti
sbb
adc
push
mov
dec
roll
mov
or
ffreep
dec
loopne
and
in
lahf
sub
sbb
jmpw
mov
movsl
es
fisttpl
mov
dec
adc
jle
insl
imul
test
and
fisubl
mov
pop
fwait
dec
loop
mov
sub
imul
xor
lods
adc
dec
imul
clc
out
outsb
push
cs
sbb
sbb
and
stc
mov
shlb
jbe
mov
mov
test
in
cmp
and
or
inc
cmp
mov
xchg
stos
cltd
negl
outsb
push
adc
enter
sbb
mov
icebp
xor
daa
das
add
in
xor
mov
jb
dec
mov
or
bound
ret
xor
cs
loopne
js
pop
xlat
imul
lcall
mov
sbb
loop
push
push
repnz
dec
sarb
out
decl
sarl
xor
jl
repnz
pop
sahf
pop
insb
fs
jp
xor
stc
scas
mov
test
sahf
outsb
lea
sti
pop
xor
jbe
dec
jns
int3
mov
xchg
inc
adc
dec
pop
mov
fldt
pusha
cmp
xchg
add
insb
pop
iret
dec
xor
sbb
xchg
sbb
rorl
scas
test
dec
sub
fsub
jecxz
loopne
sbbb
adc
dec
imul
cmpsb
sahf
xchg
cs
xor
gs
std
inc
mov
popa
test
into
mov
sub
call
or
lahf
out
out
add
rorb
popf
call
jnp
xor
xchg
roll
sub
shll
adc
jmp
psubq
les
dec
add
lock
xchg
or
das
ffreep
loop
addr16
and
sbb
mov
movd
or
push
dec
mov
sbb
arpl
loopne
dec
mov
xchg
add
mov
mov
xor
js
inc
ret
loopne
add
adc
sub
inc
and
pop
loopne
mov
mov
lcall
sbb
dec
xchg
pop
dec
inc
push
int3
out
jns
cmpsl
insb
repz
push
pop
ja
jnp
fildl
enter
scas
mov
cmp
andl
movb
push
cs
dec
shll
xlat
xor
dec
negl
stc
mov
push
dec
push
fstpt
and
cmpsb
push
mov
mov
sub
ret
ss
xchg
jle
sub
imul
sub
push
mov
movsl
inc
popa
mov
in
fisubs
jp
fs
cmp
xchg
outsl
lods
rorb
out
adc
stos
and
ror
js,pn
inc
out
loope
mov
dec
sub
cwtl
dec
fildl
das
adcl
das
cmp
sub
sbb
sub
cmpsl
xchg
xchg
addb
insl
mov
push
out
inc
push
xchg
xchg
cmpsl
lods
push
fldt
lahf
push
out
mov
dec
push
lods
scas
jl
adc
jnp
call
xlat
and
lods
sbb
in
push
andl
fwait
cmp
mov
outsl
add
adc
mov
mov
ret
xor
pop
xor
mov
xor
cmp
push
sbb
mov
mov
sub
neg
repz
xchg
popf
int
mov
pushf
fildll
push
sbb
and
add
scas
fs
das
and
pop
test
insb
enter
mov
adc
xchg
xor
adc
stos
nop
xorb
mov
xchg
jmp
outsb
sub
mov
aaa
aas
icebp
xchg
xchg
xorb
mov
and
mov
adc
mov
ret
popa
pop
dec
dec
mov
xorl
jbe
outsl
outsl
sub
fwait
sbb
push
dec
loope
gs
and
ret
data16
aaa
push
adc
gs
fcomi
inc
adc
popa
movsl
adc
movsb
mov
jecxz
lahf
jle
out
sub
ret
sub
sbbb
call
mov
shlb
pop
rorb
nop
mov
and
pop
nop
and
mov
shll
mov
ret
gs
mov
and
fldenv
inc
inc
ja
inc
mov
mov
fidivrl
or
fcoml
pop
mov
lret
call
xchg
sbb
push
adc
int
rorb
jo
pushf
sub
int3
call
loope
ret
jnp
pop
pop
xor
mov
std
xchg
in
outsb
and
mov
ja
inc
mov
ds
aam
arpl
cmp
insl
sbb
xor
mov
pop
jl
and
cltd
sarb
xchg
mov
add
cld
mov
xor
ret
stos
outsb
adc
fnstcw
push
pop
in
loop
stc
ret
stc
scas
dec
push
pop
push
dec
lret
hlt
cmp
and
or
lock
adc
fcomp
mov
mov
jg
icebp
pop
sbbb
fidivs
jae
in
jp
cmp
aaa
xchg
fdivp
inc
adc
in
testb
xchg
ljmp
gs
mov
scas
test
xor
adc
mov
cmpsl
cli
jno,pn
loope
add
shr
mov
mov
repz
hlt
add
inc
repz
xor
mov
cmp
js
push
std
jo
incl
arpl
in
mov
mov
xchg
or
cmpl
or
pop
xor
out
inc
adc
pop
pop
sbb
jb
ljmp
sub
cmp
mov
mov
sub
pop
mov
cmp
ss
dec
enter
enter
clc
hlt
xchg
mov
test
sbb
mov
sub
dec
cli
sbb
mov
ror
jmp
jecxz
rcrb
and
inc
mov
hlt
aas
cmp
xor
sbb
and
sub
popf
pop
mov
or
out
mov
int
pop
sbb
iret
or
and
xchg
dec
and
arpl
icebp
ja
cs
ret
inc
or
push
shr
insl
inc
out
pop
stos
test
mov
xor
aaa
jnp
xor
mov
push
xchg
cmp
adc
leave
lret
ja
out
dec
ljmp
imul
pusha
faddl
dec
psllw
mov
cmp
int3
sub
mov
js
and
add
sbb
int
mov
ret
ljmp
out
or
inc
mov
sbb
das
add
popa
sub
inc
jmp
mov
inc
jmp
mov
xchg
bound
mov
inc
lahf
cmpsl
testb
inc
ret
dec
inc
roll
mov
cmp
inc
pop
cmpsl
lcall
fdivl
fdivl
push
xchg
in
ja
out
or
enter
or
pop
jg
mov
xchg
out
or
lahf
pop
and
dec
jb
and
sub
out
nopl
jl
sub
jae
js
mov
stos
dec
test
lock
adcb
mov
add
insl
test
movsl
push
xchg
mov
sbbl
sarb
push
or
sbb
xchg
daa
cwtl
sbb
inc
push
add
jp
btl
into
mov
pop
lret
inc
aam
cmp
lods
stos
adc
call
je
shr
dec
out
pop
sub
sub
mov
add
inc
adc
pusha
and
cmpsl
inc
xchg
cmpsb
jnp
push
insb
sar
dec
push
hlt
mov
divb
sbb
adc
mov
mov
mov
fwait
cmc
mov
jae
dec
jae
xchg
mov
test
push
pop
and
pusha
loop,pt
into
or
bound
mov
rorb
jbe
and
js
cli
push
mov
and
pushf
sub
dec
mov
cmp
loopne
inc
enter
sub
pop
les
adc
ret
adc
xchg
sub
ss
xchg
jnp
dec
cmp
lcall
jae
scas
xor
cmp
cli
in
or
jne
fldl
sub
test
xchg
add
xor
dec
cwtl
or
outsb
add
test
pop
mov
adc
outsl
pop
insl
divl
xor
in
dec
mov
push
sti
imulb
push
push
mov
mov
je
cltd
cmc
mov
ret
mov
rcrb
int
cmpb
cld
stos
xchg
mov
pushf
lods
xlat
std
scas
mov
and
add
push
mov
inc
adc
adc
adc
pop
std
int3
outsb
mov
ret
in
sbb
add
jbe
cmc
add
mov
xor
imul
outsb
push
lret
lods
idivb
sbb
es
push
jae
and
bound
lock
mov
rorb
subl
fwait
int3
jl
pop
add
cmp
and
adc
fadds
inc
sbb
xchg
js
mov
xor
repz
dec
push
or
push
int
iret
stos
xchg
std
sbbl
out
sub
sub
and
xchg
dec
fimull
jbe
repz
adc
in
and
daa
xor
bound
adc
or
xor
mov
daa
loope
ds
jp
out
repz
cli
in
sub
in
add
faddp
cmp
mov
xchg
outsl
mov
adc
jle
lahf
pusha
cmp
icebp
fadds
add
dec
inc
mov
leave
gs
shrl
add
xor
jnp
push
andl
lds
in
jl
lods
mov
int3
hlt
and
xchg
cmp
inc
insb
add
sbb
notb
jp
dec
rcll
push
cmp
pushf
lock
xlat
pusha
or
mov
jge
lods
fistps
pop
or
mov
mov
dec
cmp
and
inc
call
jns
push
lcall
push
pop
push
inc
cmp
pop
aas
add
lcall
mov
sbb
xor
push
lcall
call
in
xor
mov
inc
lret
adc
imul
sbb
test
xlat
add
iret
iret
data16
pop
ret
adc
aam
int3
add
mov
jns
or
lock
cli
dec
pusha
or
scas
cmp
andb
iret
push
sbb
out
jmp
stos
lods
push
cmp
mov
scas
jle
in
pusha
popf
icebp
xchg
pop
cltd
push
dec
xor
mov
popf
push
mov
mov
jl
lret
ret
les
lahf
xchg
aam
ror
push
mov
mov
lret
adc
cs
cmp
rolb
mov
mov
inc
xlat
ss
sbb
dec
pushf
jg
cli
add
jl
pop
dec
or
adc
scas
scas
push
sub
or
mov
rorl
lcall
std
xchg
rorb
mov
faddp
push
inc
lods
xchg
xchg
roll
cmp
mov
outsb
rcr
xchg
sbbl
and
push
adc
pusha
dec
out
xchg
sub
or
sub
inc
es
sbb
sub
mull
push
push
sbb
imul
jo
paddd
sahf
cltd
stos
jnp
rclb
and
int3
mov
lcall
mov
xor
push
fwait
or
mov
xor
pop
dec
iret
jns
cmpsb
stos
jl
sbb
mov
sbb
jno
fdivrp
jno
inc
add
gs
push
in
cmp
in
inc
mov
shlb
mov
inc
pop
push
mov
cmp
mov
and
mov
mov
repnz
fnstenv
pop
cmpsb
cltd
sbb
in
xlat
adc
inc
addb
fcmove
pop
or
pop
inc
push
or
ds
leave
and
dec
mov
orb
sub
out
nop
and
loope
ret
inc
inc
add
outsl
and
pop
and
adc
xor
aam
mov
push
sahf
aad
test
or
xchg
push
stos
inc
mov
fwait
cmpsb
push
jg
push
mov
mov
ret
pop
rorb
jge
test
and
jp
or
aas
int
lcall
fsubp
adcl
or
mov
adc
orl
sbb
into
pusha
jne
sub
push
das
scas
xchg
sub
mov
lret
out
sbb
mov
test
jge
frstor
lods
orb
or
or
inc
sub
inc
xchg
and
sbb
inc
ficompl
jmp
mov
sbb
mov
inc
sbb
repnz
sub
xchg
out
cmp
idivb
jo
daa
hlt
jb
rcrb
movsb
fsubrs
sti
dec
xor
xor
sub
and
aam
mov
movl
mov
xchg
add
rcrb
arpl
xchg
sub
adc
leave
sub
dec
movsl
mov
xor
sbb
icebp
cmp
test
and
dec
sbb
aas
insl
pop
dec
and
lods
mov
and
pop
mov
push
sbb
mov
movl
cmp
mov
cmp
adc
push
push
imul
sbb
shll
xchg
popf
jg
push
mov
inc
adc
outsl
iret
mov
jecxz
pop
lods
cwtl
add
jbe
call
test
cmp
ja
pop
jbe
pop
hlt
cld
int
stos
ja
test
adc
dec
add
sbb
or
jmp
stc
popa
xor
outsl
shll
or
loopne
fimull
hlt
push
rcrb
mov
pop
mov
cmp
scas
call
mov
pop
cmpsl
or
xchg
dec
and
inc
and
leave
imul
and
les
movsb
in
es
rclb
xor
mov
pop
rclb
mov
push
sbb
mov
cli
mov
es
sbb
or
xchg
push
push
jmp
and
jmp
mov
jmp
lods
sub
adc
fwait
enter
movsb
sahf
aas
or
jbe
push
cmpb
cmp
test
pop
rcrl
fwait
js
cmpsl
gs
stc
ja
loopne
cmp
dec
xor
cwtl
push
pop
inc
cwtl
pop
popa
xor
jb
xchg
cltd
aad
add
pop
jmp
jae
sahf
push
mov
lock
jmp
mov
sub
jle
adc
mov
lret
inc
aam
scas
fadds
push
addb
shll
pop
insl
cmp
stos
jmp
cmp
pop
inc
int
aam
dec
notl
push
add
out
inc
jae
dec
cmpsl
lahf
add
test
add
ficomps
rcl
ja
dec
and
lret
adc
mov
pop
jns
mov
jo
pushf
and
rclb
popf
out
sarl
sbb
xchg
loopne
mov
push
fs
sbb
sub
inc
movsl
xor
scas
cli
aaa
and
cmpsb
jecxz
ficomps
jmp
xchg
push
addl
pusha
bnd
iret
mov
mov
jae
xchg
cmovle
hlt
shl
adc
lods
hlt
sub
pop
lcall
repz
push
and
loope
xor
inc
sbbb
hlt
std
adc
push
imul
and
insl
pop
mov
clc
lds
inc
test
cld
decl
inc
jp
notb
stos
lcall
push
ret
or
rcpps
and
xchg
pop
mov
test
aaa
mov
call
ret
in
pushf
sub
pop
mov
push
das
pop
clc
inc
add
mov
test
decb
dec
ds
fsubp
mov
je
sbb
rol
out
jno
mov
stos
pop
mov
cld
cmp
push
lock
pop
mov
mov
repnz
pop
xchg
pop
cmp
sti
pop
mov
adc
cld
ss
jb
push
gs
xchg
lock
inc
mov
jecxz
fcmovnu
inc
push
insl
sub
popa
in
xlat
mov
out
pop
xchg
sub
movsl
test
sahf
dec
in
fldenv
jae
ja
add
fildll
add
pop
cs
out
rdmsr
or
pop
pop
test
inc
mov
mov
cwtl
pop
iret
pusha
sub
pop
cltd
loopne
cmp
mov
push
enter
mov
xor
sub
fnstsw
jecxz
adc
rcrl
and
test
or
add
dec
pushf
js
mov
xorl
add
fmull
aas
mov
ficompl
inc
movsl
pop
jns
pop
cmp
outsb
fnstcw
mov
and
xlat
inc
jle
mov
shlb
sub
shll
mov
inc
cmp
jp
xchg
out
int3
faddl
xchg
cmc
inc
xchg
je
mov
clc
pop
jbe
incl
cmp
push
jmp
jns
pop
idivl
test
dec
cmc
and
cwtl
jne
cs
adc
mov
cld
mov
dec
imul
bound
mov
adc
ret
mov
in
jg
insb
jb
negb
mov
out
pop
mov
sbb
mov
cld
push
mov
cmp
mov
out
mov
pop
adc
dec
test
xchg
cmp
ret
or
inc
movsb
into
jle
lods
adc
fwait
popa
xchg
jae
pop
xchg
cltd
lret
cmp
dec
ret
scas
inc
inc
mov
and
ja
inc
aam
jo
add
sub
test
outsl
dec
mov
sbb
es
arpl
inc
sbb
xor
adc
or
xchg
mov
xchg
insl
sub
shl
insb
mov
stc
dec
mov
and
xchg
fidivs
arpl
or
stos
out
dec
popa
mov
cmpsb
jbe
pushf
xor
sbb
or
int3
gs
xor
adc
mov
pop
lcall
and
iret
aas
mov
dec
mov
repz
sbb
or
sbb
sbb
cltd
pop
pop
out
dec
imul
jmp
mov
flds
sahf
or
fs
iret
lret
mov
pop
insb
inc
xchg
fcmovne
mov
and
cmc
pop
das
cmp
dec
or
sbbl
jnp
icebp
rcl
mov
shlb
mov
mov
inc
stc
lods
push
hlt
mov
dec
fs
mulps
test
mov
xchg
mov
mov
pusha
mov
and
loope
push
mov
int
push
std
xchg
out
sbbl
gs
dec
push
shll
sahf
lods
repz
xorl
mov
xchg
push
xor
and
fdivr
into
stos
aad
dec
mov
in
repnz
sarl
mov
xchg
cmp
push
pop
jbe
mov
and
shrl
add
out
sbb
sti
xor
lea
jnp
adc
out
xchg
push
nop
ljmp
lods
xchg
subb
add
add
ret
sahf
fimuls
out
ds
clc
jle
in
and
dec
cmpsl
nop
outsl
xchg
and
dec
mov
sub
xchg
pop
mov
outsl
and
in
pop
xchg
mov
xchg
cltd
sahf
pop
stos
push
inc
out
aaa
add
sahf
xchg
rorl
ja
stos
std
push
inc
push
outsb
or
call
inc
cmp
shll
cli
fstpt
gs
xchg
cmp
cmp
test
dec
xor
clc
push
fisttpl
and
jo
xchg
mov
jg
push
jp
out
xor
in
or
xor
sbb
enter
push
inc
xchg
gs
movsl
popf
adc
xor
rol
inc
and
mov
inc
mov
sbbl
xchg
js
lock
inc
adc
pop
int
loop
repnz
insl
inc
cmp
movsl
pushf
idiv
xchg
lret
jge
mov
fcmovb
mov
xor
jnp
cmp
in
mov
sub
loope
push
jmp
add
dec
div
es
dec
mov
dec
je
movsb
sahf
clc
sub
xor
lds
xchg
nop
xor
pusha
int
push
add
push
mov
jle
fistps
add
mov
jecxz
or
fdiv
in
xor
mov
daa
insl
xchg
mov
jbe
aas
and
cmp
mov
imul
insl
lahf
and
jae
sub
lock
inc
sbb
testb
repnz
mov
or
and
mov
push
jnp
dec
insb
mov
cmc
inc
inc
dec
sub
lock
or
addr16
inc
gs
std
push
sbb
push
enter
add
xorl
inc
dec
push
jp
arpl
fldcw
sahf
xor
fs
stos
dec
fisttps
lock
xchg
xchg
out
sbb
pop
push
mov
loop
aad
cmc
cmp
or
pusha
repnz
add
ret
mov
sar
sahf
mov
pusha
into
lds
xor
xor
movsl
imul
push
xor
mov
rcrl
sub
enter
sub
pop
mov
movl
xchg
lret
add
aas
test
jge
loope
mov
sub
cmp
mov
adc
push
lds
shl
sbb
push
ss
ret
scas
popf
jnp
sbb
sub
mov
add
adcb
add
push
xorl
push
mov
or
out
inc
push
fcom
push
lahf
pop
nop
rcr
rdpmc
movsl
push
mov
inc
xchg
mov
shr
enter
pop
dec
loope
and
loope
nop
push
dec
pop
jl
sbb
clc
inc
dec
push
push
ret
push
mov
jae
jl
int
ja
dec
pop
sbb
mov
rol
mov
cmp
ret
mov
mov
fdivr
lea
fcmovb
add
push
cld
lcall
xchg
popf
mov
mov
lea
add
test
sub
pop
mov
push
rorb
pop
mov
repnz
sbb
outsb
or
mov
inc
dec
lods
out
shl
test
sbb
out
lods
xor
das
repz
cltd
fs
iret
popa
dec
ljmp
movsb
adc
jmp
jp
inc
xchg
pop
or
add
add
cwtl
push
pop
hlt
pop
movsb
repz
sbb
daa
clc
fsubs
shrl
sub
and
cmp
hlt
inc
lcall
fsubl
out
insl
test
pop
inc
mov
ret
mov
jp
movsl
mov
xchg
push
add
sub
rcrb
sbb
inc
jge
incb
xchg
push
loope
hlt
andl
testb
push
jmp
pop
dec
mov
and
cli
pop
je
lods
ret
roll
ret
mov
pusha
pop
dec
stc
xchg
and
mov
bound
sub
inc
mov
jg
or
scas
jle
mov
cmp
jp
out
out
inc
cmpsl
mov
mov
sbb
pop
sub
mov
inc
loop
lock
push
jbe
fstpt
jp
cmp
mov
and
mov
mov
popa
mov
sbb
and
rol
jno
lret
sub
test
loopne
in
lahf
mov
cmp
and
fdiv
ja
xor
subl
and
pop
aad
pop
lods
push
icebp
test
dec
mov
mov
push
mov
aad
cmp
jb
out
lods
lahf
push
hlt
subb
loop
jg
pop
nop
or
cmp
sbb
dec
sub
fadd
mov
pop
fildll
aad
sbb
mov
pop
std
xor
test
jno
pushf
dec
xchg
add
ja
add
lods
rolb
into
aam
pop
cmp
cmpsl
fs
pop
sti
push
xchg
xchg
jo
pop
mov
stos
out
pop
add
jge
data16
pushf
pop
xchg
mov
outsb
js
fistps
test
xor
mov
cmp
lock
xor
dec
pop
movq
and
repz
mov
or
cmp
in
je
push
xor
pop
dec
dec
sbbl
push
jge
xchg
push
scas
out
fnstcw
xor
lcall
cmpsb
ret
aaa
aad
fwait
das
jo
sub
scas
xchg
ret
lea
les
fisttpl
mov
insl
mov
cmp
mov
out
sbb
hlt
pop
push
ds
fdivl
mov
push
test
scas
cli
xchg
jecxz
jae
test
xor
std
xchg
decl
mov
gs
push
in
dec
loope
movsb
divl
inc
mov
mov
mov
mov
mov
push
popa
aas
and
inc
xchg
in
fldcw
and
jbe
push
xor
jmp
cmpsl
rcl
jnp
mov
xchg
les
loope
inc
adc
cmp
lock
imul
mov
movsl
sti
pop
add
lea
xlat
inc
inc
in
pop
repnz
icebp
inc
mov
outsl
xor
push
popa
inc
lcall
inc
dec
test
pop
pop
mov
loopne
repnz
pop
pushf
mov
adc
pop
mov
push
mov
mov
dec
movl
adc
and
in
les
push
pusha
andl
cmp
imul
or
push
push
jg
mov
mov
icebp
stos
sub
mov
xchg
daa
jp
and
xor
xlat
xor
mov
mov
push
adc
lret
insl
clc
fsts
jle
lret
mov
add
cmp
inc
inc
jl
es
les
push
and
int3
push
push
and
inc
insl
jnp
sbb
mov
shl
sbb
and
fst
push
mov
movsb
pop
mov
add
xchg
rol
xchg
int3
xor
add
push
test
sub
in
pop
bound
daa
xchg
rcrl
mov
test
xlat
add
fwait
jo
mov
pop
inc
jmp
jmp
les
adc
push
arpl
inc
shrl
lahf
and
jne
shll
and
testl
mov
imul
ljmp
mov
imul
test
loop
sarl
push
stc
movsb
lods
subl
gs
jnp
push
repnz
lahf
cwtl
and
je
mov
cltd
inc
loope
pop
scas
ss
xchg
jbe
pushf
out
and
or
push
pop
outsb
jbe
sub
xchg
jecxz
or
cmc
hlt
scas
jge
in
or
add
lea
fldt
insl
lods
dec
sbb
sub
jp
inc
loop
mov
mov
popa
and
cmp
push
xor
or
sbb
push
and
dec
in
ja
mov
clc
mov
lods
xor
out
jb
pop
cwtl
js
pusha
pop
and
aam
jl
enter
int
je
xor
insb
jo
cmp
adc
and
xor
pop
lret
sub
mov
lods
les
mov
xor
mov
mov
fldcw
addr16
js
inc
in
dec
lcall
shl
mov
test
xor
mov
fsubrl
fcoml
ret
dec
adc
add
repnz
cmp
sbb
inc
jmp
adc
push
loop
cwtl
sub
mov
pop
je
lods
mov
jge
xchg
jle
ljmp
mov
lds
popf
sub
fisttpl
jbe
loopne
sbb
push
inc
dec
mov
fs
add
xchg
cli
sub
xlat
adc
push
and
xchg
inc
push
stos
add
dec
stos
std
pop
int
movl
xchg
fs
clc
pusha
repnz
nop
icebp
cmc
xchg
pop
stos
sti
xchg
loop
arpl
cli
and
in
push
sti
lock
aas
fcomp
iret
push
pcmpeqw
sub
push
loope
je
icebp
cwtl
and
movsb
rcrb
outsb
outsb
mov
outsl
and
xchg
push
pmulhw
mov
lods
and
ret
pop
jmp
movb
mov
loopne
cmp
xchg
pushf
and
stc
in
lods
lods
lahf
push
bound
pop
xchg
mov
stos
lcall
dec
cmp
mov
icebp
popa
in
jecxz
pop
and
jecxz
cmpsb
dec
jno
clc
xchg
lahf
aam
sarl
lods
xor
mov
aad
rorl
mov
movsb
das
inc
or
mov
loope
mov
and
aam
and
insl
cwtl
adc
or
inc
xchg
in
stos
inc
adc
in
fildll
pop
sbb
das
xor
cs
lret
sbb
cmp
rclb
and
cmp
cmpsl
test
or
hlt
lods
inc
xorl
dec
push
sbb
cmp
loopne
aaa
jecxz
lret
lods
lret
iret
sbb
and
test
mov
jae
jecxz
fmuls
push
sarl
insl
js
sub
daa
fsubs
cmpsl
mov
xchg
inc
mov
movsb
mov
jbe
mov
cmp
stc
mov
test
outsb
in
test
gs
mov
adc
iret
out
test
out
test
lea
mov
push
imul
rorb
add
aas
xchg
je
sbb
stos
testl
int3
mov
je
out
call
or
nop
mov
xor
nop
ds
xor
and
add
cwtl
adc
mov
cmp
test
fucom
pop
popf
std
repz
fisubrs
loopne
adc
jmp
add
rcrb
xchg
sub
inc
xor
jge
sti
push
and
fwait
clc
sub
out
cmpsl
and
mov
dec
mov
add
in
fdivl
cmp
sub
mov
je
pop
fdivrl
test
pop
or
int3
mov
mov
or
jg
xlat
or
fnstenv
xor
or
or
shll
lret
mov
inc
inc
hlt
jmp
dec
xchg
adc
aad
loopne
mov
inc
in
popf
fnstcw
inc
push
add
lcall
mov
adc
mov
jno
mov
cwtl
mov
or
in
call
and
js
into
test
cmpb
dec
in
js
ret
and
mov
lahf
test
mov
jmp
cmp
cmp
and
insl
sbb
add
fwait
lods
mov
iret
bound
adc
in
jecxz
cs
sub
xor
adc
cmp
jmp
push
cld
rcr
cmp
shlb
mov
data16
adc
jbe
xor
icebp
xchg
rcll
ret
cmp
test
es
dec
mov
pop
and
lcall
dec
or
mov
mov
dec
mov
mov
pop
mov
xlat
fwait
jns
jb
fwait
jle
inc
rcll
movaps
daa
sub
pop
add
test
test
adc
adc
push
mov
lods
jns
fs
cmpb
sub
sbb
fbld
addr16
loope
iret
inc
adc
pop
rcrl
mov
adc
mov
push
mov
inc
mov
or
xchg
ds
mov
mov
cmpl
and
outsl
and
testl
jg
xor
pop
jae
cltd
rcrl
sbb
aas
push
arpl
enter
enter
scas
mov
xor
push
adc
testl
sbb
jle
add
shl
push
ja
xchg
jae
fwait
push
je
mov
xor
mov
jns
mov
arpl
stos
imul
mov
push
push
xchg
dec
xor
jb
loope
pop
into
push
cmp
jmp
or
pop
int
jae
inc
dec
ja
pop
mov
xchg
imul
push
clc
dec
pop
jbe
daa
or
mov
daa
add
cmp
jo
gs
pop
lods
frstor
inc
loopne
sahf
sub
jmp
lcall
iret
int
in
movsl
lods
faddl
jge
fadds
repnz
call
nop
add
mov
out
fdivr
dec
or
lds
faddl
mov
cmpb
in
jne
xchg
mov
test
or
out
add
outsl
stc
push
mov
add
mov
jg
clc
push
outsl
sti
arpl
ljmp
add
ljmp
or
cmp
jo
andl
out
push
fistpl
fwait
sahf
pop
out
push
dec
int
addr16
fwait
mov
add
fcomps
xor
dec
ret
cwtl
sbb
inc
xor
test
and
or
xchg
jnp
outsb
fldl
das
xchg
nop
mov
pop
cmpsl
aas
pop
stos
and
call
mov
mov
leave
push
es
mov
lcall
fmull
push
push
addr16
mov
rclb
and
insb
ja
rol
inc
xor
jbe
test
mov
xchg
inc
negl
cs
fldl
sbb
cmp
mov
or
mov
mov
subb
out
add
push
clc
fldl
bnd
andb
adc
stos
and
fmuls
lods
push
incl
jmp
scas
adc
inc
aaa
push
nop
call
pop
scas
pusha
add
adc
fisubrs
in
jl
lds
pop
arpl
dec
pushf
pop
test
mov
mov
xor
inc
test
in
add
vpaddsb
jmp
pop
add
int3
jae
mov
test
jnp
gs
jbe
outsb
mov
push
add
pop
fs
pop
sub
push
fisttpll
inc
in
sbb
sbb
mov
inc
dec
push
test
cmpsb
jle
je
push
push
incb
jmp
inc
mov
movsb
xchg
mov
add
add
inc
jge
mov
divl
decl
fistpll
es
fimull
dec
dec
xchg
add
fisubrl
idivb
push
clc
test
push
fsts
cmp
ret
or
imul
sbb
pusha
roll
cmp
test
add
icebp
stos
fcomp
insl
clc
sub
loopne
mov
jae
imul
mov
cmp
idivb
rcrl
roll
les
jmp
daa
add
and
jmp
sbb
xor
push
mov
and
pop
dec
ret
cmp
add
mov
xchg
sti
ret
pop
push
loope
lods
lds
inc
enter
xor
aad
add
or
jg
js
in
inc
in
dec
fisttpl
pop
mov
mov
inc
mov
pop
mov
cmp
lods
adc
pop
mov
outsb
pop
std
and
cwtl
inc
inc
dec
arpl
bound
add
testb
xchg
push
and
sti
dec
jne
test
out
gs
jp
fs
cmpsl
out
jne
push
inc
cmp
inc
adc
bound
jg
lret
bound
sub
dec
or
xor
sub
lds
xor
mov
mov
stos
and
out
mov
xchg
sub
subl
sarb
test
nop
push
push
jp
xor
loope
lcall
lock
push
cmp
dec
xor
pop
ds
mov
cmpsb
lock
fcoms
xor
mov
and
cs
lods
sub
dec
cs
mov
sub
push
dec
enter
sarb
sub
push
lahf
pop
pop
dec
mov
xchg
insl
push
lock
mov
inc
not
inc
repz
cmc
push
cwtl
inc
stos
idivl
or
inc
adc
and
mov
loop
pop
push
jecxz
or
inc
xlat
outsl
mov
dec
jo
jo
cmpsl
rcrb
sub
inc
add
cld
lea
inc
loopne
cld
xor
lock
mov
ss
or
xchg
adc
shll
add
imul
mov
cmp
add
inc
or
frstor
fdivrl
ret
jbe
stos
mov
mov
inc
jne
mov
jl
fucomi
add
test
xorl
cld
add
jmp
cli
push
lss
test
cmpb
pop
loop
pop
push
aad
mov
stos
xchg
in
fists
add
push
push
in
fbld
cld
mov
cmp
mov
iret
jae
mov
lods
in
rcr
in
mov
dec
xor
fs
imul
and
mov
mov
movsb
sti
movsl
mov
gs
mov
nop
mov
jge
loopne
pushf
lahf
scas
bound
icebp
jg
sub
arpl
fildl
adc
les
xor
sub
xlat
mov
in
fdivrl
jo
push
aam
dec
mov
jl
pop
xchg
mov
sbb
ja
rclb
icebp
ret
pusha
jecxz
fists
push
stos
cmp
mov
add
sub
sub
lcall
mov
mov
aas
mov
std
pop
cmc
mov
icebp
clc
popf
mov
mov
or
mov
or
xor
pop
push
xlat
imul
push
jecxz
mov
icebp
jns,pt
sar
ret
cli
cld
sub
loope
repz
xchg
je
test
and
jnp
shll
out
repnz
cli
ds
xor
in
fs
xchg
fwait
call
pop
lods
fildll
xchg
arpl
std
pop
addr16
push
xchg
data16
sbb
mov
sti
andl
or
sarl
mov
mov
pop
loope
ds
cs
pop
or
lods
popf
push
or
inc
adc
dec
push
mov
aaa
into
stc
shll
daa
pushf
test
aas
xor
outsl
bnd
add
and
jo
sub
fstp
into
imul
add
sti
int
push
mov
hlt
fwait
inc
inc
outsb
es
mov
inc
fimuls
mov
clc
shrl
loopne
iret
in
clc
jne
or
adc
dec
xchg
xchg
adc
sbbl
jg
daa
imul
in
ss
repnz
cmp
pop
sub
push
cmp
adc
dec
mov
lock
mov
xchg
aam
and
addr16
stos
sbb
xor
icebp
jo
pop
pop
out
aam
or
aad
mov
insl
stos
add
mov
mov
in
ljmp
fwait
lea
xchg
xchg
mov
xchg
sbb
jo
data16
cwtl
cmpsl
cwtl
xchg
fwait
xlat
mov
mov
sub
pop
shrl
xor
jl
pop
arpl
jp
scas
sub
int3
stc
mov
mov
mov
hlt
std
sarl
ret
call
cmp
in
popa
mov
loopne
mov
mov
pop
mov
add
pushf
addb
cwtl
xor
jnp
loope
ja
jo
ror
and
pop
movsb
jmp
popa
in
aaa
out
out
and
rclb
jbe
pop
xchg
and
ret
mov
call
mov
add
cmp
mov
jae
sbb
xor
popf
jp
jo
scas
in
add
test
inc
sub
in
mov
arpl
imul
in
jg
and
push
aas
xchg
mov
jecxz
pop
stos
lods
jg
mov
push
add
dec
pop
leave
mov
pop
push
sbb
ret
lret
mov
cmp
push
and
pop
cltd
and
insb
cmp
rorl
mov
and
mov
cmp
mov
jp
ret
nop
popa
test
js
inc
or
cltd
pusha
push
cld
stos
or
sbb
xor
ret
and
ret
test
and
nop
int
push
xchg
sub
sbb
dec
enter
xor
push
movsl
mov
pop
xor
shll
leave
notl
pop
aas
mov
xchg
call
inc
mov
lods
aad
pop
or
and
xor
mov
dec
xor
push
mov
dec
aam
cmp
jge
push
xor
jl
lea
mov
scas
xor
fwait
mov
outsl
sub
nop
loop
insl
mov
hlt
fsubrs
inc
scas
aaa
ljmp
jno
pushf
out
mov
int
xchg
pop
mov
fxam
shrb
inc
inc
xlat
pop
jmp
xchg
and
jns
push
sub
mov
fcmovnb
mov
mov
mov
pop
mov
gs
les
adc
jl
imul
adc
in
jecxz
dec
std
scas
sti
adc
push
popa
add
pop
movsb
inc
jmp
dec
scas
cmp
inc
xchg
rcr
inc
aas
je
je
push
repz
bound
jns
jbe
sbb
aas
or
xchg
incl
inc
pushf
sbb
lahf
sub
lcall
add
mov
ret
or
push
js
lahf
xor
mov
mov
sbb
jg
dec
xchg
jg
les
fmuls
aas
es
inc
xchg
xchg
xor
in
push
shll
imul
mov
sub
cmp
scas
cmpsb
es
sbb
adc
imul
ss
sbb
pop
pop
aam
ret
iret
or
outsb
push
sub
call
adc
xor
push
sbb
fwait
push
inc
lods
push
xor
cmp
xorl
mov
pop
mov
xchg
ret
pushf
dec
in
dec
mov
stos
int3
lea
xchg
int
daa
out
fdivr
jmp
int3
shrl
lahf
mov
out
xor
push
shrl
adc
iret
icebp
mov
shll
test
pop
or
inc
sti
cmp
and
movsb
pop
jno
mov
call
pop
imul
es
jp
lods
inc
pop
add
sub
pushf
testl
andb
or
push
aaa
xor
cltd
add
ret
xor
mov
jmp
adc
jns
push
popa
cmp
sbb
popf
push
mov
or
and
ds
xchg
push
push
jmp
jo
rclb
pop
cmpsl
shlb
movsb
fldl
lret
push
jg
stos
in
mov
mov
pop
repz
cmc
or
in
jbe
mov
dec
lock
cwtl
mov
cs
xchg
jnp
lahf
ror
dec
add
in
lock
clc
xchg
dec
lea
mov
pushl
dec
pop
cmp
popa
in
cpuid
frstor
mov
mov
pop
sbb
xorl
sbb
lret
shll
xor
fmull
adc
rcll
jnp
mov
sub
xor
call
imul
out
dec
arpl
cwtl
lahf
addr16
aam
and
lds
negb
loope
loop
fiadds
scas
push
xchg
pop
mov
dec
xor
orb
and
xchg
cmp
cmc
test
iret
pop
add
xchg
cmc
das
repz
stos
pop
xor
add
cld
mov
lock
jns
es
orb
xchg
adc
pop
sub
adc
jmp
push
add
rclb
in
nop
mov
mov
mov
sarl
dec
outsb
icebp
mov
stc
repz
mov
mov
lcall
or
jecxz
sub
cs
lods
in
insl
ret
inc
cmp
cmp
xchg
dec
cmpsb
insb
rol
jl
inc
or
sti
jp
pop
jle
sub
mov
movsb
cli
fcmovnb
inc
mov
push
pop
pop
push
enter
insl
rcr
mov
jbe
sub
dec
add
in
dec
push
jecxz
test
punpcklwd
dec
inc
cmc
jo
cwtl
xor
sahf
out
xorl
scas
mov
mov
ds
push
push
cmp
fidivrs
aaa
nop
int
cmp
bound
pop
out
jle
push
jo
xlat
adc
movsb
cmp
in
mov
movl
sbb
subb
jbe
mov
lods
pop
adc
cmc
pop
push
fdivrp
or
cmpsb
or
cmp
sbb
mov
pop
xchg
lret
mov
lahf
es
sbbl
mov
scas
fstpt
xor
mov
add
push
dec
jp
and
test
negb
les
push
movsl
and
je
les
sub
mov
fistpl
ljmp
mov
xor
shrl
sbb
mov
jne
xchg
call
in
sub
pop
fs
rcr
xor
or
cld
pushf
fnstsw
sarl
orb
scas
lods
dec
sbb
sbb
arpl
and
xchg
lods
aas
inc
fwait
add
sahf
xor
adc
sarl
push
sub
inc
loope
push
push
xor
lods
je
sti
inc
into
mov
pushf
mov
mov
aam
iret
xor
ret
push
xchg
outsb
sarb
rol
test
popl
pop
add
or
lods
push
sbb
inc
sub
stos
add
pop
shr
mov
dec
mov
int
cmp
dec
pop
jle
mov
add
fnstcw
nop
xor
imul
jnp
ja
shrl
inc
sti
jno
fistl
fcmovu
stos
adc
sub
fisttpll
ss
sbb
lods
jmp
adc
jnp
les
icebp
pop
aad
repnz
sub
mov
or
out
dec
xchg
sbbl
aaa
push
push
in
push
pop
xchg
nop
mov
mov
mov
int3
mov
shlb
leave
push
add
call
xchg
mov
aam
dec
mov
jecxz
push
mov
mov
add
xchg
pop
jge
pop
ja
sub
fisubl
adc
and
xor
sub
and
mov
test
das
lret
int3
mov
mov
xchg
push
add
fisubrs
int3
movsb
in
or
jp
nop
dec
sbb
jg
xor
mov
xchg
adc
insl
mov
add
add
adc
out
enter
int3
nop
sub
adc
cltd
sahf
nop
push
xor
xor
pop
stos
adcb
stc
or
and
aaa
adc
ss
cmp
stos
addps
push
inc
lret
cli
xor
insb
rorb
sbb
insb
repz
push
add
ja
jecxz
es
mov
orb
or
sahf
jns
lret
in
jge
scas
pop
shll
xor
cmp
mov
sti
testl
cmp
bound
dec
mov
stos
fmuls
and
icebp
jns
stos
insb
push
jno
xor
out
cmp
clc
xchg
sbb
mov
push
or
int
pushf
ja
sahf
mov
out
mov
imul
jl
sbb
std
xchg
outsb
ret
fmulp
std
xchg
mov
cld
stc
ret
arpl
sub
lea
push
jae
dec
loopne
or
jle
lods
es
leave
jno
or
pop
cmp
je
push
push
lcall
pushf
xorl
cmp
and
push
and
pop
adc
clts
lahf
xchg
cmp
sbb
aad
fwait
pop
ret
cmpsb
inc
scas
hlt
sbb
sbbl
cltd
cmc
repnz
adc
shlb
dec
fwait
sub
fdivl
lods
loop
orb
mov
mov
jg
xor
mov
sub
ret
mov
jle
fstpl
arpl
inc
mov
addr16
xchg
cmp
jmp
push
pop
cmp
mov
cmpsb
repnz
cwtl
jl
dec
or
repnz
insl
adc
lahf
mov
mov
je,pn
xor
cmpsb
test
cmp
inc
sub
mov
cwtl
out
sti
mov
dec
and
cwtl
stos
movsl
jae
aas
jp
out
pop
divb
sbb
jno
or
pop
dec
xor
jmp
test
push
cld
lret
mov
fmul
mov
mov
pop
shrb
mov
mov
xor
push
xchg
pop
jne
aas
xlat
mov
mov
or
lcall
adc
xlat
or
fs
xlat
cmp
in
out
test
jecxz
or
jle
jo
mov
xchg
sub
mov
xchg
inc
push
minps
fldl
scas
push
ss
repz
and
xor
sub
push
mov
scas
or
jne
enter
nop
arpl
divb
cmpsb
inc
mov
lret
pop
and
leave
ljmp
pushf
fmull
jns
sub
push
or
mov
push
xchg
mov
or
push
jae
jo
jg
jle
sub
hlt
jp
mov
sti
in
sti
or
xchg
ret
inc
fdivrs
jmp
adc
ja
stos
pushf
jge
popf
mov
sbb
int3
sub
lock
cmp
hlt
jno
dec
je
sub
adc
push
clc
test
lods
add
inc
xchg
sbb
xor
add
fcmove
aam
mull
sbb
mov
dec
mov
push
lret
insl
test
mov
sub
lahf
sbb
int
imul
fcmovnu
into
pop
add
gs
lds
push
rorb
add
cltd
sbb
add
popa
mov
adc
adc
pop
push
push
jl
call
gs
mov
movsb
inc
insb
ja
data16
insl
xchg
sahf
mov
negb
fistpll
int
mov
fbstp
pop
ja
call
cmc
mov
cld
popa
clc
add
out
int
and
scas
mov
addl
jmp
cmpsl
push
cld
into
lods
jns
dec
ss
add
sbb
pushf
dec
ret
sub
ljmp
loopne
or
fisubl
mov
pop
into
lcall
inc
out
in
xlat
fcomip
mov
imul
mov
orb
sbb
and
test
xchg
mov
imull
das
mov
scas
and
mov
lock
and
addb
out
arpl
pop
pusha
dec
inc
js
fs
jne
pop
or
imul
negb
jge
mov
lret
aaa
mov
mov
sub
je
lahf
mov
push
xchg
and
loopne
sti
les
cwtl
and
pop
dec
jo
push
cmp
xchg
fisttps
mov
pop
xor
xchg
fildl
pop
and
pop
cmp
dec
mov
mov
add
mov
flds
aam
test
mov
push
dec
jo
mov
jmp
and
ja
and
jg
loopne
xor
push
stos
push
sbb
movsl
stos
add
js
scas
xor
decb
les
aaa
aas
sbb
add
inc
inc
jno
or
nop
sbb
mov
lock
sbb
mov
lods
cli
sbb
insl
xchg
arpl
jge
fbstp
mov
jb
mov
sub
mov
dec
and
mov
mov
mov
in
xchg
lea
es
mov
inc
mov
clc
or
pop
scas
ss
shll
in
inc
int3
adc
mov
loope
ror
or
mov
sbb
mov
pop
in
or
mov
pop
pop
movb
sbb
cli
xchg
cmp
notb
dec
lret
sbb
xchg
dec
xor
xchg
mov
mov
sub
dec
add
xlat
fs
inc
mov
mov
sahf
inc
pop
aad
sbb
cmp
ret
push
adcl
and
test
jo
xchg
add
mov
mov
jmp
adc
mov
fdivl
leave
push
dec
add
lods
mov
add
or
insl
movsl
push
stos
out
push
ret
in
sub
mov
into
xchg
xchg
xchg
and
add
andb
pop
xchg
cltd
mov
inc
push
nop
cwtl
mov
mov
lods
test
aas
imul
push
mov
loopne
arpl
dec
sub
std
lds
mov
call
test
aad
adc
fs
insl
push
out
fnclex
lds
and
mov
bound
les
or
iret
inc
or
jo
sub
test
jg
pop
dec
popf
dec
push
js
jmp
or
or
cmpsl
push
pop
jle
xchg
adc
jp
push
mov
pop
lods
jge
loopne
or
xor
ds
inc
fs
nop
mov
xchg
cmp
je
or
mov
cmp
lea
dec
mull
push
aaa
dec
aaa
loope
inc
data16
ret
in
mov
ficoml
inc
lock
rorl
sbb
pop
mov
sahf
xlat
nop
adc
sbb
call
ud0
mov
adc
xchg
sbb
pop
out
push
in
cwtl
shll
out
inc
les
lea
rclb
cmp
adc
cwtl
ljmp
and
mov
insl
dec
jge
fsubl
push
push
xchg
pop
adc
outsl
fisttps
int3
mov
jno
fucomip
jns
jp
or
sub
jne
lret
cmp
xchg
aas
in
scas
sbb
shlb
pop
adc
xchg
imul
cmp
jnp
push
cwtl
outsl
aas
push
or
cld
punpcklwd
mov
xchg
mov
cli
cmp
mov
adc
das
inc
addr16
pop
test
ss
cmp
stos
jge
inc
push
rcrl
rorb
out
sti
add
pop
ljmp
push
push
push
pop
push
int3
mov
dec
xchg
out
mov
out
dec
nop
adc
mov
fidivrs
cmp
mov
jl
pusha
xchg
out
int3
outsl
jg
xchg
addr16
lea
dec
or
push
mov
pushf
cmpsb
pop
int
test
repnz
es
xchg
xor
stos
lcall
inc
cli
jp
mov
test
pop
fstpl
jmp
test
jae
inc
sbb
or
lret
sbb
aad
pop
inc
scas
or
fdiv
in
sti
test
sbb
cmc
icebp
or
mov
dec
push
cli
out
mov
daa
bound
test
jne
jg
mov
aas
nop
fs
daa
lock
push
mov
addl
sub
sti
push
aam
frstor
jb
rcrl
sar
dec
cli
inc
neg
and
hlt
fidivs
leave
test
inc
cmpsb
test
int3
cwtl
mov
test
adc
in
rcll
inc
notl
adc
dec
mov
push
mov
fwait
subl
push
jle
xor
int
add
mov
fisubl
push
inc
pop
test
call
add
jp
jecxz
add
xchg
xchg
dec
or
popa
cmp
sub
scas
adc
push
and
das
cmc
loope
lods
sub
jo
mov
lret
adc
sbb
jg
fiadds
dec
sub
jo
cmp
xchg
ljmp
stc
pop
daa
cmp
jb
jno
aad
shll
jmp
cmp
xorl
xchg
adc
adc
les
mov
popa
jnp
inc
test
fadds
in
js
inc
mov
push
cmpsl
xchg
repz
mov
out
mov
in
push
popf
in
cwtl
jbe
adc
adc
test
leave
cmp
out
sbb
add
inc
dec
jo
sahf
js
decb
ret
cmpsb
scas
add
out
stos
add
mov
sbb
mov
shlb
push
ficompl
repz
inc
jecxz
cmpsb
jae
ljmp
add
ret
orl
push
mov
sbb
mov
jno
fstpt
cmpsl
aaa
test
and
push
in
xorb
outsb
sub
inc
pop
jno
enter
test
mov
adc
imul
jo
inc
leave
cwtl
popf
cli
lea
mov
cmp
test
out
dec
in
ret
repnz
cmp
es
mov
shl
dec
sub
frstor
rolb
inc
jnp
nop
xorb
inc
push
xor
outsb
insl
xor
jmp
or
pop
add
arpl
mov
sub
push
daa
mov
hlt
je
sbb
jae
mulb
inc
hlt
rcrl
jge
in
dec
push
pop
push
hlt
xlat
push
lds
cwtl
or
psrld
sarl
push
ret
jne
gs
je
jb
mov
test
cmc
mov
mov
adc
pop
pop
inc
and
or
stos
cmp
mov
inc
mov
pushf
and
dec
push
mov
mov
jb
sbb
sbb
popa
lcall
pop
dec
stc
or
into
add
lock
insl
cmpsb
lahf
pop
mov
lods
nop
mov
dec
and
cmp
sub
fldenv
jns
or
mov
cmpsl
fwait
xchg
xlat
xorb
mov
and
rcrl
pop
pushf
dec
push
sbb
fcompl
lods
popf
sub
mov
pop
icebp
xchg
shl
ror
sbb
std
add
mov
push
cmc
lahf
sub
call
or
sbb
shlb
shrl
in
cltd
test
pop
sti
adcb
movsl
scas
ljmp
stos
aam
cs
mov
sar
cmp
not
pop
add
jbe
xorl
rorb
cmp
push
or
cmp
dec
data16
idivl
or
sbb
jecxz
jle
fs
negb
cmp
cs
dec
dec
lods
imul
bound
jp
mov
call
icebp
stos
fildll
aam
sbb
lret
insl
or
add
mov
sbbb
into
fiadds
and
jbe
add
jbe
mov
xor
shll
mov
decb
xchg
jbe
inc
inc
out
xor
notb
imul
outsl
xor
xor
scas
push
aad
mov
fsubs
loop
jmp
pop
negb
cli
or
fmul
dec
mov
sub
cmp
dec
and
outsb
inc
gs
in
xlat
add
jmp
mov
andb
push
lcall
and
rcrl
jecxz
or
shr
add
call
xor
daa
cmc
mov
shrb
jp
or
sarb
push
adc
push
movsb
push
insl
sub
les
cli
add
or
mov
cmpsb
lods
fwait
arpl
adc
call
or
push
pusha
imul
mov
in
sbb
decb
fwait
mov
mov
mov
adc
pushf
sub
or
fwait
ret
and
insb
loop
push
xor
add
scas
arpl
sarb
cmp
dec
xor
aas
inc
lds
mov
adc
add
cmp
les
sub
add
xor
ja
iret
fcoms
scas
mov
dec
stos
mov
bound
cmp
lock
fstp
ret
fwait
cwtl
subl
mov
cmp
jbe
std
sbb
in
je
das
mov
xchg
inc
repnz
out
aaa
dec
movsl
ss
mov
adc
mov
pop
shrb
xchg
lds
mov
xchg
mov
idiv
xchg
dec
dec
pushf
dec
inc
les
push
sti
sub
cli
mov
sub
sbb
movsb
clc
outsb
inc
xor
jne
xor
aaa
loope
popf
mov
mov
sub
inc
mov
xor
int3
hlt
clc
movsl
xor
push
pop
jnp
cmpsl
movsb
lret
lea
ljmp
dec
mov
orb
test
hlt
je
pop
sub
or
rcrl
jp
push
pop
lea
test
pop
js
xor
popf
push
inc
xchg
rcll
arpl
hlt
cmc
dec
mov
ljmp
int3
sbb
inc
test
push
cmp
rorl
aaa
jl
ret
loop
pop
iret
loop
sub
ds
clc
cli
sar
lea
addr16
xchg
aad
sbb
push
div
sub
mov
pop
pop
stos
fidivs
xchg
sarl
cmp
fwait
and
sub
fsubrs
adc
daa
adc
xchg
xor
inc
jge
insl
roll
add
leave
in
int3
lcall
fdivrl
xchg
cli
adc
cmc
push
test
sti
cmp
aas
insl
aas
lea
imul
xchg
or
add
jne
sub
jae
movsb
mov
xchg
pop
jns
lret
mov
dec
out
ret
jge
mov
push
push
adc
sub
inc
aam
rclb
mov
lret
cld
cld
test
add
movsl
insl
pushf
mov
enter
sbbb
sahf
jo
pusha
or
enter
ljmp
mov
cld
or
lahf
dec
loope
orl
jbe
jmp
mov
cmp
ret
jae
mov
xchg
std
in
test
sub
ljmp
mov
data16
inc
xor
aam
add
adc
jns
pop
pop
rcrl
xlat
jp
sub
cmpb
aas
aad
shrl
and
jo
test
sub
stos
add
fisttps
ficoms
lds
outsb
jmp
jo
pusha
cmpsb
mov
insl
nop
jo
arpl
add
jbe
fisttpl
jnp
test
iret
lret
lock
in
adcl
jmp
pop
jp
xor
cmc
pop
mov
in
lods
jo
dec
and
in
sub
sti
ret
fwait
hlt
arpl
popa
push
ja
sub
dec
lahf
lock
jmp
inc
mov
mov
dec
loop
jmp
or
fldenv
fldl
jne
adc
add
cwtl
xor
push
inc
pushl
push
fstpt
pop
into
mov
repnz
add
nop
pop
leave
dec
pop
push
push
int
xchg
loop
dec
je
add
das
cmp
sbb
jmp
dec
dec
fldcw
jp
fnstsw
nop
mov
xchg
call
xchg
mov
inc
imul
movsb
xor
lea
idiv
push
scas
cmpsl
ret
xor
push
add
mov
xor
insl
cwtl
adc
test
adc
push
or
dec
aas
jnp
jg
and
add
cmp
decl
sbb
lods
arpl
mov
es
cs
stc
lods
pop
adc
insl
je
jae
add
xor
xor
add
pop
xchg
inc
and
mov
xchg
lahf
lock
push
xchg
lods
movl
jno
inc
mov
mov
popa
and
adc
in
arpl
xchg
mov
pop
hlt
pop
je
sbb
push
adc
jns
adc
sbb
inc
out
rcll
add
fwait
lcall
ds
daa
adc
xchg
lcall
mov
xchg
fidivrs
scas
xlat
xor
mov
daa
sub
mov
mov
mov
pop
dec
jge
adcb
adc
and
pusha
mov
and
sti
nop
push
scas
imul
xchg
xchg
xor
sub
push
loope
arpl
insb
adc
ja
mov
js
and
cld
aas
inc
add
ss
shrl
jecxz
enter
and
rcr
pop
adc
js
push
das
dec
mov
enter
and
xor
cmpsl
test
mov
sbb
imul
popf
xor
sbb
mov
enter
mov
cli
mov
jl
jbe
mov
test
sbb
pop
shrl
xchg
gs
out
mov
notb
mov
sub
xlat
jecxz
std
push
mov
sbb
rcrl
scas
mov
mov
loopne
sub
nop
rolb
icebp
insl
inc
xchg
push
lods
out
push
pop
inc
int3
dec
mov
push
push
jg
add
sbb
push
mov
test
push
and
dec
into
sahf
aad
imull
jmp
mov
xchg
bnd
mov
out
loope
outsl
cwtl
xchg
pop
ret
call
sub
lock
orl
xchg
mov
jmp
dec
add
test
push
add
mov
bound
testb
cwtl
fcmovnu
ret
push
pop
cmc
in
rcll
push
xchg
mov
in
js
popa
add
andb
shlb
lods
inc
negb
ret
jne
pop
mov
shlb
insb
xor
xlat
jbe
add
or
div
mov
mov
mov
push
pop
rolb
mov
cmp
or
jb
addr16
scas
popa
xchg
sub
cmp
int
fimuls
inc
add
cmc
sub
sub
jmp
out
insl
shll
add
testl
push
mov
xor
rcrb
push
ret
pushf
inc
push
imul
ds
data16
jmp
push
fdivl
mulb
xchg
cs
or
lahf
lcall
sarl
aas
mov
fs
fidivrl
hlt
mov
and
mov
or
sub
push
lret
mov
and
and
mov
adc
test
mov
push
iret
sbb
xchg
fldt
popf
ljmp
rorl
pop
inc
xchg
jbe
inc
shlb
push
test
mull
iret
imul
or
sbb
scas
jl
xchg
lods
mul
push
out
test
jno
mov
xchg
cmpsb
jp
clc
mov
cld
or
cmp
lods
ret
cs
dec
test
adc
fucomip
arpl
jle
add
jae
popa
scas
ficoms
mov
mov
adc
dec
test
loope
out
sbb
inc
xchg
and
push
mov
aaa
or
ljmp
lcall
mov
mov
sub
fwait
dec
mov
pop
jmp
pop
stos
xchg
addr16
adc
pop
sarl
pop
dec
fadds
cmp
sub
adc
jns
push
das
faddl
movb
stos
fistps
add
mov
scas
and
out
loope
mov
mov
or
loop
clc
dec
lds
add
in
xchg
mov
pop
test
and
mov
add
jge
mov
lcall
int3
and
add
out
cli
scas
add
mov
mov
mov
loopne
cmpsb
add
pop
jnp
xchg
outsl
cld
pop
mov
jne
jno
jno
mov
ror
push
cli
or
dec
stc
nop
inc
mov
jecxz
je
mov
lcall
mov
and
or
fldt
cld
mov
cwtl
sbb
jnp
es
cmp
mov
lds
ret
data16
and
mov
xchg
xor
jbe
decl
lock
mov
js
inc
in
cwtl
pop
xchg
xlat
in
push
mov
mov
into
jle
add
xchg
lea
sub
jmp
outsl
inc
data16
push
or
and
mov
xor
and
test
inc
mov
push
inc
jbe
movsl
inc
icebp
mov
mov
pop
sub
dec
cmp
dec
loopne
jbe
xor
adc
xchg
loope
cmpsb
dec
and
add
inc
outsb
rep
xor
dec
fisubs
aad
fisubrl
in
cli
add
popa
test
clc
mov
dec
jge
jmp
adc
dec
cmpsb
pop
jmp
jne
jmp
js
fs
pop
inc
sbb
ss
lcall
jb
call
movsl
mov
sbb
push
dec
inc
jae
cmp
out
js
xchg
mov
adc
push
jle
xchg
dec
pop
jb
sbb
xor
pop
mov
or
shrb
inc
movsb
adc
sbb
stos
pop
xchg
add
leave
cmc
sub
pop
rcr
and
mov
jge
mov
je
filds
mov
pop
loop
mov
push
mov
xchg
hlt
jge
and
mov
push
push
lahf
loopne
jl
popa
int3
cmpsl
shll
inc
mov
jo
rolb
int
mov
dec
aas
test
jmp
jbe
fbstp
fs
std
adc
stc
sbb
not
dec
imul
pop
push
and
jns
loope
add
test
jb
cli
jmp
xchg
hlt
lea
shrb
je
or
or
pop
and
cmp
sbb
push
cmpb
push
loop
movsl
or
dec
mov
mov
inc
hlt
loopne
stos
loopne
lcall
enter
stos
adc
pop
jo
faddl
testl
je
add
push
add
in
je
jge
daa
or
sahf
jle
in
fstl
out
loop
cmc
cmp
insb
andb
or
and
popf
cmp
push
jno
fisubs
add
or
nop
xchg
pop
sub
and
lods
cltd
popf
fisttpl
sbb
xorb
daa
sub
mov
adc
jno
scas
and
lret
sub
jmp
mov
mov
loopne
adc
out
out
sub
in
jb
fcoms
adc
xchg
ja
lret
imul
int3
push
call
jbe
xor
or
cwtl
fldt
in
pusha
xchg
or
sbb
repz
test
or
aam
orl
lods
jb
or
jnp
pop
push
loope
repnz
test
mov
mov
fcoml
sbb
mov
sub
push
test
adc
cwtl
xor
in
pop
int
xchg
sbb
and
cltd
push
jo
jecxz
notl
movsb
out
push
jg
shld
sub
add
les
mov
imul
test
nop
jl
or
and
lods
jge
outsb
xlat
in
push
loope
dec
hlt
inc
cld
neg
bound
mov
arpl
push
in
jo
lahf
sub
sbb
push
mov
mov
arpl
ss
insb
hlt
jge
cmpsb
cmp
mov
dec
or
ret
mov
stos
and
cmc
mov
xchg
dec
mov
inc
mov
push
mov
inc
pop
add
jb
js
icebp
pop
push
adc
fdivrl
ljmp
fadd
int
adc
lods
and
sar
and
pop
add
cli
push
sbb
cmp
outsl
inc
xchg
pusha
xor
push
in
int
sub
test
inc
ja
inc
lock
pop
or
cmp
les
jmp
adc
pusha
cld
addr16
or
jo
jge
fdivrl
xor
int3
xchg
lds
test
push
sahf
nop
shll
inc
push
adc
jae
add
test
imul
icebp
jbe
mov
pop
mov
jmp
xchg
loope
fmull
dec
mov
hlt
or
cmp
pop
in
std
add
adc
stos
out
cmpb
lahf
jl
and
test
xchg
mov
and
sub
adc
lcall
pop
push
cwtl
jge
lea
ljmp
fsts
dec
mov
lods
mov
cmp
lods
xor
and
cli
call
adcl
movsb
mov
loop
sbb
push
jo
mov
push
movsb
lods
ror
das
adc
out
repnz
and
adc
pop
loope
scas
outsl
mov
test
or
mov
int
shr
test
bound
outsb
or
ljmp
push
icebp
adc
lods
push
out
mov
sbb
js
call
dec
dec
int
iret
ljmp
mov
mov
xor
xchg
jns
mov
jmp
push
sti
testl
pop
pop
pop
pop
int
scas
pop
xor
test
insl
les
adc
dec
clc
push
loopne
fimuls
rclb
and
dec
sbb
push
cmpsb
movsl
lds
add
jmp
mov
movsl
fwait
pop
add
sbb
cld
inc
or
or
rol
inc
mov
jp
shll
out
add
xchg
push
movsb
fldcw
mov
dec
icebp
jb
xor
pop
ljmp
prefetch
dec
mov
push
das
iret
ret
rcll
push
loope
pop
inc
aam
mov
shlb
cmp
push
test
push
daa
push
divb
sub
fldcw
pop
push
mov
fisubrl
mov
push
cmp
pushf
jbe
fnstenv
pop
cmp
pop
lods
sbb
sar
testl
adc
shlb
aad
icebp
pop
push
mov
cmp
pop
inc
push
sar
jno
dec
xor
in
push
push
pusha
pop
mov
mov
imul
adc
pop
push
rcrl
shlb
push
fisttpl
inc
shlb
divl
push
fucomip
dec
mov
dec
jmp
push
imul
enter
inc
and
dec
cmp
and
lods
and
movsl
pop
lcall
inc
pop
cld
lea
mov
divb
loop
and
lret
or
inc
int3
add
outsl
mov
fidivl
ja
test
jne
mov
faddl
and
je
mov
je
push
into
mov
dec
cmpsl
xchg
loop
jl
xchg
in
ss
rorl
cmpsb
push
ljmp
dec
mov
out
jne
pop
jmp
test
or
imul
fcomps
movsb
out
xchg
test
sub
sub
inc
insb
push
test
insb
dec
mov
cltd
scas
cli
mov
jns
sbb
ljmp
insl
cmp
cld
jbe
and
cbtw
test
sbb
outsb
mov
sub
mov
cmp
scas
mov
sbb
insl
push
sbb
pusha
dec
mov
add
xchg
int
mov
hlt
addl
iret
mov
push
lahf
ja
mov
pop
cmpsl
lea
lcall
push
sbb
popa
fwait
jg
mov
jno
stos
mov
stc
xor
dec
aaa
xor
stos
lret
or
orl
mov
fsubl
cmp
sub
fistpl
push
cwtl
insb
push
out
and
inc
shll
xor
add
mov
add
loopne
mov
icebp
gs
xchg
pop
nop
icebp
sarb
addr16
loope
js
sub
out
jg
fcompl
cmp
fstps
je
and
sbb
dec
fadds
fbstp
and
push
and
sub
stc
leave
xor
subl
imul
outsb
in
seto
shrb
icebp
xchg
es
mov
mov
loop
jns
xchg
push
push
mov
mov
jmp
mov
jb
sub
dec
stc
cld
push
mov
jl
push
sahf
sbb
lcall
nop
subb
lock
or
out
jge
pop
and
lret
cmp
mov
pushl
loop
sbb
inc
pop
or
jle
sbb
dec
jl
test
decb
cmp
push
ja
cmpsb
std
sbb
add
cmp
lret
add
mov
pop
fists
mov
fbld
popa
sub
jp
icebp
xchg
add
cltd
sbb
out
leave
xorb
xchg
pop
movsb
icebp
mov
inc
xchg
xor
cwtl
movsl
out
inc
out
rorl
pop
cmp
xchg
lcall
xchg
in
in
mov
js
insl
in
mov
xchg
dec
jae
stc
and
test
shlb
cmp
shr
push
adc
data16
mov
fisubrl
adc
int3
push
push
jle
lock
xor
xchg
ss
push
ss
sbb
daa
ds
pop
fisubl
pop
or
inc
mov
mov
lds
subl
and
pushaw
xchg
je
rclb
mov
sub
add
lock
repnz
inc
sahf
mov
jg
xchg
lods
xor
add
cmpsb
mov
jo
pop
test
sbb
aad
push
or
outsw
adc
rorb
sarl
rcll
arpl
imul
and
pop
xor
es
fnsave
inc
jb
cmpl
aad
jl
jb
add
xchg
jnp
imul
pop
es
mov
outsb
scas
add
ret
sub
xor
movsb
sbb
or
call
xchg
sbb
adc
hlt
adc
push
jl
fwait
cld
lret
cmp
lahf
and
out
mov
jbe
and
mov
inc
jbe
pop
pop
sahf
dec
push
xchg
loopne
nop
inc
sub
sahf
in
xchg
pop
outsl
data16
mov
cs
and
popf
enter
nop
or
dec
add
pushf
lds
push
xchg
mov
leave
lea
test
out
std
call
rcrl
out
jge
mov
sub
mov
push
cmp
adc
movsl
inc
mov
shll
push
test
adc
dec
xorl
mov
push
lds
pcmpgtw
add
jae
fadd
or
addr16
jne
inc
jo
pop
ljmp
in
xchg
fs
sbb
sarl
popf
mov
and
jle
push
repz
dec
xchg
and
lods
sub
icebp
xchg
xor
xchg
repnz
adc
ret
rorb
push
xchg
add
adc
pop
or
cmp
ret
fsubrs
mov
loopne
movsl
out
inc
std
mov
iret
pop
sbb
mov
enter
lret
pop
jne
xchg
xlat
inc
out
test
cmpsb
sbbl
jb
and
pop
and
xchg
push
xchg
dec
call
push
shlb
fwait
pop
aaa
mov
ljmp
not
jecxz
std
cmp
loope
iret
into
add
in
add
inc
cmpl
lock
or
dec
dec
loope
addr16
int3
jle
sbb
or
js
je
hlt
ret
jecxz
std
pop
add
adc
dec
in
add
xchg
mov
sbb
cmpb
inc
sbb
mov
arpl
stc
insl
mov
lock
xchg
ror
push
mov
clc
xchg
jno
pop
xor
dec
sub
push
mov
push
mov
cmp
xchg
dec
sti
fmuls
dec
or
fs
mov
dec
fpatan
mov
and
xchg
push
jl
popf
xlat
icebp
xchg
pop
dec
xchg
aad
das
psrld
insl
addr16
jne
test
test
cmpsb
cmp
jno
cltd
dec
scas
add
cmp
inc
fmull
mov
mov
add
ja
dec
call
push
push
mov
pop
fucomip
pop
push
loope
cs
mov
pop
sub
jl
out
push
sbb
jne
adc
xor
mov
dec
pop
mov
adc
adc
sub
icebp
jecxz
cwtl
or
lcall
cs
mov
loop
cmp
or
jne
mov
xor
and
pop
xor
and
mov
out
mov
iret
scas
addr16
clts
fidivl
xchg
and
es
cmp
jp
xor
rcrl
ret
cmc
loope
mov
push
push
dec
insl
pop
addr16
sub
std
cmp
mov
xchg
fs
xor
test
pop
push
pusha
mov
in
hlt
faddp
add
fadds
bound
adc
mov
jae
outsl
xor
sub
jnp
add
fisubl
xchg
aam
fcom
mov
pand
cltd
mov
mov
push
popa
ficoml
add
int
aam
minps
out
xor
dec
mov
push
add
cltd
cmpb
sub
and
test
rolb
imul
jmp
in
stos
lock
push
pop
mov
jae
out
fcompl
mov
ljmp
mov
pop
pop
sub
or
arpl
divl
iret
cmp
add
rorl
fsubrs
jne
test
fwait
addb
jb
clc
xchg
loope
pusha
mov
xorl
xchg
cltd
cmp
inc
sahf
std
bound
cmpsl
sub
jge
out
or
je
ficoms
cmpsb
push
pop
ja
jne
ret
mov
cmpsb
xor
push
and
adc
mov
xchg
das
mov
mov
cs
ja
testb
add
in
dec
and
mov
rcll
add
pop
push
cmp
and
xchg
and
inc
outsl
xchg
push
inc
cmp
arpl
cli
xor
dec
and
or
sbbb
rep
mov
dec
gs
cmp
mov
mov
shlb
stos
stc
xor
mov
or
insb
lahf
jl
cmp
mov
sbb
pop
jne
jnp
sarl
popf
sub
addb
rorb
xchg
xlat
xchg
push
or
inc
jp
jne
cwtl
repz
adc
mov
jne
jge
jl
lea
cmp
scas
push
aas
insb
xor
cmpsb
out
lock
xor
adc
dec
pop
or
sbb
jmp
rolb
cmc
xchg
jecxz
notl
stos
lods
jo
out
jo
and
jnp
iret
xor
inc
imul
test
push
jne
jo
sti
inc
movsl
out
mov
mul
lea
push
gs
idivb
dec
stos
cmp
outsb
andb
push
jmp
jp
lahf
data16
nop
pop
lahf
push
fsub
jp
mov
push
sbb
movsb
push
inc
icebp
popf
xchg
pop
jp
mov
sbb
mov
pop
mov
lret
dec
popa
lods
cld
dec
mov
add
mov
les
pusha
pop
mov
bound
inc
sub
cwtl
stos
shll
aad
fwait
cmp
sbb
outsl
jg
fwait
addr16
dec
xchg
add
xor
push
and
cld
adc
jle
dec
popa
push
cmp
xchg
and
mov
push
jne
or
lea
push
pop
inc
dec
inc
in
xor
inc
add
out
push
push
push
pop
or
xor
jns
std
cmp
jnp
scas
pop
jnp
dec
and
and
cmp
inc
mov
aad
push
inc
add
outsb
jnp,pn
mov
inc
ficompl
mov
push
xchg
out
shll
xchg
adc
dec
outsl
sub
cli
les
sub
out
out
jno
and
mov
cmp
xlat
das
xor
js
or
mov
lds
ret
ret
cltd
add
leave
xchg
xor
pop
in
andb
gs
add
rcrl
push
fs
aad
in
aam
cwtl
ss
mov
xchg
dec
notb
pop
inc
cmpsb
jmp
add
test
fisubs
arpl
mov
sub
frstor
imul
sub
push
in
or
push
pop
mov
add
add
in
cmp
mov
jmp
push
fbstp
add
fisubs
pop
jns
mov
test
mov
push
xor
xor
mov
fmull
adc
or
inc
imul
jmp
lret
or
ret
sub
loopne
lods
out
mov
mov
popa
ss
lahf
and
and
ret
sub
cmp
outsb
cs
jmp
aaa
inc
loope
notb
inc
in
lcall
push
mov
call
cli
lods
sub
out
mov
inc
jp
sub
or
cld
hlt
xlat
bound
test
cmp
xor
cmp
dec
loope
enter
lret
pop
lods
pop
add
cmp
xor
ja
in
mov
adc
std
cmp
aas
data16
jnp
imul
jne
shll
mull
out
xor
push
repnz
push
mov
fnsave
add
aad
xchg
pusha
pop
mov
das
mov
sbbb
daa
ret
inc
fadds
notb
sbbl
call
lret
mov
xchg
xor
fs
dec
and
jbe
or
aam
jae
mov
lds
pop
int3
pop
aaa
xor
mov
shrl
push
mov
jbe
movsb
mov
pop
jb
dec
push
cwtl
mov
movsl
and
xlat
pop
and
mov
cmp
add
mov
mov
push
aad
lcall
or
mov
inc
push
adc
daa
mov
mov
jecxz
pop
or
rclb
imul
fwait
jle
inc
out
setp
xor
in
adc
cltd
jnp
orl
mov
xchg
test
lock
sbb
fdivrs
cmp
mov
es
pop
jbe
lahf
jnp
jp
add
aas
in
xchg
addb
push
cli
add
or
sti
cmp
sbb
cmpsw
sar
fwait
cmp
add
aad
xor
jbe
icebp
rcll
inc
add
and
mov
adc
in
mov
movsl
adc
cmpsl
push
gs
lds
stos
loop
divl
cmp
and
enter
cs
iret
or
mov
repz
mov
push
repnz
push
sbb
cmp
idivb
or
jl
adc
push
add
btc
jp
enter
jl
mov
or
and
cmp
gs
inc
enter
dec
test
xor
dec
stos
bound
add
and
pop
test
cwtl
idivb
das
nop
clc
sti
in
out
push
push
pop
inc
les
add
push
jb
lcall
ret
dec
lock
xchg
stos
fwait
sbb
xor
cld
push
aam
popf
adc
and
sbb
roll
push
rcrb
sub
movsb
pop
pop
and
inc
xchg
in
push
xlat
sbb
mov
mov
hlt
smsw
cld
and
imul
inc
sbb
adc
jl
push
sbb
pop
ljmp
sbb
mov
jecxz
add
jl
lea
jp
into
mov
inc
dec
lods
rolb
pop
pop
mov
xchg
mov
stc
and
sub
sbb
mov
cmp
adc
mov
ljmp
mov
lret
or
xchg
fnstcw
out
mov
insl
mov
shl
mov
std
addl
pop
xchg
icebp
cmp
cmpsb
movl
repz
fwait
mov
dec
push
or
or
loopne
jecxz
xchg
jbe
xchg
sub
sbb
xlat
mov
sbb
out
icebp
pop
or
xchg
adc
lret
mov
dec
ja
inc
sbb
icebp
add
out
mov
out
out
fldl
xor
dec
dec
jbe
cmp
pusha
add
in
and
pop
mov
jmp
fistpll
cmp
xchg
cmpsb
loop
in
sub
mov
out
jno
jnp
mov
cmpsb
in
loopne
or
cmp
xor
mov
inc
add
jl
push
out
lret
mov
dec
adc
sub
mov
dec
push
or
sub
xor
jne
dec
in
mov
jl
loop
test
add
int
inc
inc
mov
jae
data16
jecxz
dec
inc
inc
xchg
dec
mov
test
inc
mov
repz
jns
mov
mov
jle
jnp
push
push
scas
or
sbb
mov
les
xchg
and
adcb
aam
dec
inc
fs
cmc
dec
in
repnz
dec
divb
clc
out
adc
jg
cwtl
adc
test
or
insb
ret
and
push
sub
cli
lret
repz
js
or
flds
and
test
pusha
je
shl
push
sub
push
mov
sti
jecxz
out
ss
mov
cltd
or
or
lods
dec
cmpsb
fcoms
fcoms
mov
scas
jae
aaa
stos
sub
lret
enter
iret
jne
call
and
data16
mov
lods
jge
inc
dec
lahf
jne
dec
add
cmpb
or
lcall
repz
and
fbstp
dec
inc
jecxz
bound
push
aam
scas
sub
ret
pushf
cld
rcl
jle
mov
orl
into
data16
lock
lds
sbb
xchg
or
adc
outsb
arpl
int
pop
in
js
movsb
dec
push
cmp
dec
popf
dec
mov
or
mov
je
jecxz
jle
jmp
mov
pop
push
cmc
mov
fcmovnbe
pop
jp
jbe
or
jns
lea
jp
lea
fstps
dec
dec
inc
idiv
daa
fadds
add
in
mov
in
rorb
xchg
mov
lret
push
pop
aas
loope
das
dec
mov
gs
cwtl
ret
or
dec
lahf
stc
xchg
sbb
mov
out
jmp
cwtl
shll
cld
jmp
jne
daa
inc
sarl
fmull
mov
hlt
jbe
shl
jb
cmpl
rol
lock
jne
arpl
sub
insl
into
adc
push
cmpsb
inc
dec
jmp
jae
push
stc
xlat
cmp
pop
scas
fs
dec
push
xchg
pop
push
in
add
ret
into
jnp
or
jae
ja
loop
sub
xlat
in
aam
mov
mov
aaa
insl
cmp
and
push
out
in
inc
jge
stc
and
add
mov
es
arpl
dec
popa
icebp
imul
aam
es
mov
pushl
fs
outsl
inc
jmp
mov
cmp
pop
clc
pop
jae
inc
dec
test
dec
mov
stos
repnz
test
fsub
or
add
add
dec
lods
sub
bound
icebp
in
xchg
xchg
jl
jbe
pop
or
mov
jnp
push
shl
dec
scas
pop
daa
and
pushf
imul
in
mov
rorb
nop
fwait
repz
insl
fisubrl
pop
push
xchg
clc
not
ficoml
pop
mov
push
mov
stc
mov
pushf
push
mov
lods
loop
mov
popf
cwtl
xchg
incb
mov
in
mov
icebp
roll
and
negl
test
loopne
pushf
negb
mov
jmp
push
mov
xchg
sub
lds
fisubrs
jge
test
pop
xchg
stc
aas
dec
insb
mov
pushf
jo
imul
fsubl
jg
xchg
lds
mov
ja
pop
dec
out
pop
cmp
fwait
jmp
sub
mov
jmp
adc
pop
push
ret
mov
ljmp
or
int3
add
inc
dec
mov
jae
push
and
push
out
shl
add
push
dec
loopne
testl
jae
push
pushf
pop
cltd
jnp
push
imul
push
repnz
out
les
xor
lcall
scas
repnz
mov
inc
int
sub
and
int
inc
jmp
dec
aaa
jecxz
fisttps
jo
fnsave
inc
mov
fsubs
ds
pop
jge
sub
fcoms
xchg
sub
push
and
fabs
mov
xor
adc
lods
cmp
outsb
js
sub
push
cmp
sub
mov
movsb
push
mov
xchg
push
and
mov
ret
fdivl
mov
scas
out
lret
xor
mov
fsubr
in
mov
lock
mov
mov
pop
mov
insl
jmp
ds
inc
cmp
mov
inc
push
inc
xor
mov
mov
sub
dec
cmpsb
ja
push
jg
sub
popf
mov
nop
iret
jo
mov
jmp
jno
and
dec
add
les
das
dec
adc
and
movsl
std
call
imul
sub
fcoms
out
popf
lock
sub
sub
je
das
outsl
cs
adc
bnd
ds
lret
dec
fs
jbe
mov
and
jnp
lahf
sbb
rolb
outsl
popf
rcl
add
adc
or
fdiv
jo
sar
add
repz
fdivs
lcall
ljmp
push
icebp
insl
das
setge
sti
sti
pop
ror
pop
push
les
scas
sbb
or
aam
jb
fs
jp
and
movsb
popf
jae
aad
movb
mov
inc
push
sahf
xor
pop
mov
lock
ss
mov
adc
adc
test
xorl
nop
push
gs
loopne
inc
imul
mov
cltd
jbe
sub
jecxz
or
sbbl
fcomip
out
out
dec
in
dec
mov
jo
and
dec
in
repnz
std
test
adc
div
movsb
lock
js
movsl
sbb
and
and
sub
pusha
or
jae
int
mov
adc
aas
stos
adcl
jno
aaa
sbb
lret
and
dec
popa
lea
inc
lret
pop
push
mov
cwtl
sar
add
jge
pop
adc
inc
rorb
std
fcompl
enter
sub
and
mov
ret
mov
inc
mov
xor
mov
repz
jne
fsts
ja
ret
mov
ds
push
mov
push
cs
pop
ret
ja
pop
mov
pop
xchg
icebp
sarb
test
movsb
cld
lcall
xchg
xchg
orl
add
mov
ror
push
xor
push
xchg
pop
sub
jnp
int3
push
pop
daa
dec
push
pop
out
scas
sub
cmp
clc
and
imul
call
gs
add
repnz
xor
pop
repnz
loope
mov
sti
syscall
jecxz
mov
aaa
mov
add
sti
add
rol
cmpsb
pop
cmpsb
mov
add
jle
xchg
dec
xchg
pop
pop
shrb
adc
fisttpll
popa
mov
rorl
push
jg
fisubrl
daa
in
js
imul
fucomi
add
decb
sub
sbb
xor
sub
movsl
xor
or
test
sahf
ret
cmpsl
xchg
pop
and
jnp
push
cmp
cld
iret
fcomps
xchg
xchg
mov
leave
push
fwait
data16
pop
mov
mov
pop
push
adc
hlt
inc
lahf
xor
sbb
gs
test
stos
pop
imul
jb
or
cmp
push
xchg
jb
std
lret
jmp
outsl
xchg
adc
push
pop
xor
dec
insl
push
sub
push
mov
and
mov
into
pop
jae
in
dec
stc
xor
dec
inc
sahf
test
sub
pop
dec
sbb
push
and
pminsw
sub
cmp
jl
aad
and
test
add
cwtl
lock
sbb
and
loop
rcll
xchg
jp
repz
or
mov
mov
jecxz
add
fcmovnbe
mov
dec
je
cwtl
out
mov
icebp
jmp
jb
aad
hlt
daa
js
push
sbb
push
and
lret
mov
jge
pop
inc
adc
push
xor
mov
xchg
cwtl
dec
pop
es
ja
sub
push
aaa
pop
int
adc
in
pop
mov
dec
ds
rcl
lods
dec
out
xor
mov
jmp
adc
aad
add
pop
cmp
cmp
in
sar
xchg
sbb
sbb
sub
jl
repnz
cli
test
lret
adc
mov
rolb
adc
scas
dec
add
xchg
and
test
lret
mov
xchg
pop
mov
ss
sbb
mov
push
pop
pop
or
mov
orl
push
mov
xchg
nop
jmp
and
sub
jae
sbb
jl
mov
jns
xchg
mov
cmp
and
push
adc
inc
or
lods
cmp
jecxz
inc
cwtl
jns
xchg
adc
or
add
pop
ret
popf
push
add
mov
js
sbb
aaa
lea
loopne
fs
ret
icebp
mov
xchg
xchg
inc
setge
in
clc
and
fsts
dec
cli
dec
stc
mov
in
popa
ss
out
jbe
fmull
cmp
mov
add
shll
addl
dec
push
insb
insb
sub
mov
xchg
std
aas
mov
lea
and
movsb
inc
and
repz
cmp
xor
mov
push
or
cmp
shlb
rcrl
int3
or
mov
lock
dec
addb
mov
popl
lea
ljmp
pop
bound
notl
xor
popa
iret
sbb
test
add
mov
out
ljmp
pop
loopne
test
in
imul
mov
inc
shrl
lods
aas
cmp
inc
dec
inc
xor
ds
inc
lret
sbb
jns
fwait
cmp
xor
negl
pop
sub
test
add
adc
mov
mov
stc
xchg
jge
and
cli
movsl
pop
sub
mov
dec
int3
sbb
and
push
call
lret
jge
xlat
lea
dec
mov
dec
sbb
jb
pusha
sub
sarb
shrl
or
icebp
dec
sub
xlat
or
daa
pop
call
mov
mov
cmp
jb
sbb
inc
repnz
fistl
shll
pop
insl
mov
sbb
scas
decl
test
sarb
xchg
in
pusha
lods
jmp
sbb
dec
sahf
into
mov
icebp
jb
dec
sub
sub
mov
pop
and
jle
rclb
ja
loop
adc
cli
jmp
imul
jecxz
jb
rorb
lds
jl
insb
lea
out
mov
lods
xchg
lods
inc
popf
mov
int3
test
sti
pushf
fdivs
insl
mov
es
or
push
sbb
int
test
leave
mov
mov
mov
movsb
sbb
push
pop
cmc
mov
out
xchg
inc
mov
push
pushfw
insl
xchg
les
pop
pusha
or
sub
int
mov
lock
pop
cmp
imul
mov
test
imul
mov
dec
das
inc
xlat
mov
or
imul
cmp
jg
in
aas
std
cmp
mov
into
cmpsl
pop
xchg
lods
mov
das
jmp
or
cmp
jge
in
inc
imul
hlt
cmpsl
add
fiadds
inc
mov
inc
or
jo
xor
pusha
in
dec
push
sub
js
and
or
popa
out
sbb
lock
mov
fdivl
and
sbb
and
repz
inc
repnz
ds
insl
sub
add
cmp
lret
mov
push
push
xchg
cmp
xchg
mov
mov
stos
xchg
cmp
cmp
in
scas
int3
push
repz
sbb
xchg
orl
outsl
sahf
fwait
cmpsl
xchg
iret
in
inc
pop
outsb
add
ljmp
push
push
mov
xor
add
lret
ja
sbb
mov
out
into
scas
adc
ds
ficoms
sbb
sub
js
pop
orl
sbb
bound
daa
mov
popf
and
cs
cwtl
mov
ds
lahf
push
lcall
cli
out
pop
lret
imul
jecxz
push
jp
out
xchg
xchg
sub
jg
mov
xlat
cs
insl
xlat
cmc
hlt
push
lret
sbb
int3
repz
xchg
imul
call
mov
mov
push
add
mov
test
into
add
nop
inc
mov
push
push
mov
out
in
repnz
les
aas
loope
testb
dec
mov
mov
dec
or
cmp
push
jg
icebp
jmp
mov
cli
es
xchg
and
add
xor
pop
push
sbb
add
outsl
ffreep
sub
rclb
lahf
popf
dec
fdivl
imulb
cmpsb
sbb
cmp
add
cmp
cld
dec
or
jmp
cmp
stos
or
les
pop
imul
mov
into
popf
orl
xor
pop
pop
xchg
xlat
in
sbb
sbb
inc
stos
insl
mov
arpl
lahf
push
ja,pt
jnp
loope
divl
in
add
push
lcall
dec
in
cs
rcrl
decl
out
mov
es
stos
imulb
adc
flds
shrb
pop
leave
mov
xor
and
fistl
imul
insl
inc
loope
add
popf
fisubl
pop
inc
repz
xchg
pop
jnp
xor
jne
inc
xor
cli
ds
mov
shrb
inc
xor
pop
mov
jb
repz
cltd
mov
or
in
xor
pop
mov
jl
mov
and
cmpsb
out
or
xchg
addb
fwait
jl
pmulhw
jo
in
loop
ret
push
jl
xchg
inc
push
push
sti
sub
into
fisubs
mov
das
jo
ljmp
test
adc
jnp
push
pop
lock
adc
ja
pop
into
push
xchg
jns
lock
sti
cmp
and
lods
push
pop
pop
mov
jnp
pop
icebp
ret
aad
pop
push
out
cmp
lret
data16
dec
arpl
mov
mov
ret
les
call
ret
pop
sbb
fsts
sbb
in
mov
scas
or
pop
xchg
mov
cld
je
xor
js
mov
inc
sbb
xchg
and
cld
repz
aaa
inc
cmp
sbb
rcl
push
xchg
pop
sbb
dec
pop
sub
call
jno
outsb
xchg
jl
pusha
push
push
sub
xor
mov
hlt
scas
insb
stc
mov
inc
jl
xchg
out
dec
ficoms
sbb
adc
jecxz
lret
mov
jp
mov
push
sub
sahf
mov
in
or
adc
pop
inc
push
push
xchg
adc
rcrl
sub
sbb
push
cld
adc
addr16
outsb
lods
adc
sbbl
xor
jb
icebp
inc
rolb
push
icebp
pusha
call
test
sub
pushf
int
test
mov
and
adc
and
add
adc
add
xchg
sub
cmpsb
adc
ret
test
add
int
dec
mov
push
sbb
mulb
mov
mov
xor
into
jg
pop
push
fld
mov
adc
jecxz
sbb
fidivl
ficomps
sub
xchg
mov
fucomp
or
sahf
into
and
mov
ss
push
fcompl
sub
repz
sbb
data16
mov
xchg
push
imul
int3
dec
mov
adc
mov
cmp
sbb
inc
pop
insl
push
inc
insl
pop
fdivr
push
cli
mov
cmp
jl
sub
gs
mov
xchg
repz
pop
lcall
inc
lahf
ror
lods
dec
dec
add
and
push
jns
pop
xor
dec
pop
push
dec
lods
fsubrs
dec
cwtl
push
inc
mov
add
clc
dec
das
stc
aad
outsb
jo
mov
add
and
movsb
iret
in
push
sub
subl
ss
add
out
jg
mov
xor
aaa
mov
popa
test
push
fmull
push
jle
sub
out
clc
enter
sbb
mov
inc
cld
cmp
dec
hlt
sbb
sub
xchg
mov
sbb
mov
and
push
push
addb
cwtl
out
jg
in
lds
movsb
fsubrs
nop
xor
mov
pop
cmpsl
mov
loop
mov
mov
push
mov
fiaddl
sahf
fwait
ret
jge
cmp
lcall
add
inc
xchg
ljmp
or
inc
add
in
xor
and
add
mov
jge
js
stc
in
push
jnp
mov
and
pop
std
and
icebp
loope
js
in
mov
jle
orl
fildll
sub
adc
insl
mov
and
movsb
bound
sub
in
and
sbb
mov
mov
cmpsl
addl
or
mov
cmpsb
sbb
pop
or
mov
popf
pop
adc
xor
mov
inc
dec
pop
notl
pop
cltd
push
idivb
jp
movsl
cmpsl
add
sub
cwtl
xor
out
in
lret
jmp
fs
in
movsb
adc
lret
not
cs
mov
inc
into
add
lret
fwait
add
je
mov
jno
inc
mov
xchg
jp
cmp
scas
inc
add
mov
movsl
sbb
pop
repz
lahf
mov
inc
data16
aam
bound
test
and
and
imul
or
in
addb
push
fistpl
inc
jbe
push
lret
out
ret
faddl
sub
mov
pop
xor
mov
sub
aaa
sbbl
xchg
jecxz
int
mov
dec
inc
inc
gs
fcom
add
fcmovu
into
mov
nop
js
mov
mov
fucom
ja
mov
or
jbe
rcr
lock
cmc
in
fldl
xor
mov
push
pop
flds
or
sbb
xor
mov
lock
inc
int
insl
int3
arpl
or
jecxz
andl
daa
cmp
or
int
pop
xor
mov
outsb
cwtl
adc
repz
mov
sbb
mov
popa
cmp
leave
leave
lea
inc
push
push
pop
cmp
sbb
outsb
push
cmp
repnz
push
mov
xchg
rcr
movsb
adc
imul
or
outsb
push
filds
sbb
scas
adc
aad
subb
sbb
xchg
jmp
mov
ds
mov
xlat
xchg
jo
aas
loope
scas
mov
cmpsl
daa
xor
pop
inc
insl
jae
dec
mov
xor
and
mov
pop
sbb
shrl
dec
sub
sbb
cli
mov
fwait
sti
mov
loop
out
jae
rcll
bound
lahf
aam
jb
sub
lahf
xchg
jno
sbb
test
sarb
adc
push
inc
push
jg
movsl
cltd
inc
mov
das
pop
inc
arpl
aam
iret
rcpps
pop
push
pop
fsubl
jnp
sub
pop
push
inc
dec
ds
int3
leave
and
test
popf
push
out
sub
sbb
xorl
stc
push
pop
xor
imul
mov
mov
and
cmp
pop
push
cmp
cmc
shr
ja
int
jge
lahf
mov
adc
int3
mov
mov
out
jbe
into
cmp
testl
sbb
push
repnz
lret
push
loopne
sub
xchg
cmp
out
stc
push
add
sub
xchg
loop
test
fisttpl
dec
test
mov
sbb
pop
jg
std
das
fstpl
push
fbstp
test
xor
sbb
aad
clc
lods
repnz
sub
pop
bnd
mov
fdiv
scas
sarb
fwait
cltd
dec
enter
xchg
mov
mov
aad
jno
xchg
add
cmpsl
popf
orl
pop
pop
add
jmp
or
pop
dec
mov
add
adc
sub
mov
jl
add
call
xor
sbb
dec
dec
xor
inc
test
aad
cli
add
enter
ljmp
adc
sub
ljmp
add
mov
imull
int
es
xor
cmp
mov
push
ss
movsb
inc
cmp
outsb
out
and
mov
cwtl
xchg
mov
int3
cmc
inc
sbb
pop
adc
lods
pusha
push
fisubrl
fwait
sbb
adc
in
rorb
jnp
icebp
roll
mov
inc
jae
inc
xchg
in
orb
cmp
insb
data16
pop
mov
sahf
repz
dec
cmp
das
outsl
ds
hlt
cmp
and
fstl
mov
mov
jg
fldt
shr
or
je
or
mov
repz
sbb
or
sub
xor
mov
adc
clc
arpl
cld
xchg
popf
sub
loop
fidivrl
int3
jnp
mov
sub
adc
popf
cmp
insl
loop
call
pop
sbb
sbb
lods
stos
gs
scas
std
ret
shlb
sarl
sub
lret
aam
mov
push
or
lcall
rorl
or
dec
sbb
inc
mov
ret
das
pop
cmp
jge
or
hlt
jo
inc
sbb
in
js
and
out
jo
add
enter
loope
stc
in
movsl
aam
sub
add
stc
movb
or
add
inc
movsb
fidivrs
mov
rcr
lcall
jns
in
mov
add
stos
push
in
xor
pop
leave
aaa
sbb
fprem1
xchg
inc
dec
and
cmp
repnz
add
push
mov
lcall
in
outsl
mov
mov
lods
add
bound
das
cmp
inc
cmpsb
dec
loop
insb
push
xchg
jne
orb
ljmp
out
addb
xor
cs
cmp
pop
xchg
jnp
js
mov
push
pop
add
or
cmp
adc
xchg
mov
pop
stos
or
out
test
inc
int
push
mov
inc
jg
out
mov
clc
test
xchg
or
popf
repnz
push
sub
or
sub
rcrb
xor
lods
aas
shlb
push
clc
out
fmul
stc
jmp
pop
xchg
loopne
movsb
jno
mov
push
mov
icebp
fistpll
pop
stc
pop
push
in
lret
sti
sbb
test
imul
pop
aam
dec
xor
loop
inc
leave
outsl
jecxz
sub
xchg
ret
cmp
cmp
sbb
mov
insl
addb
xchg
push
les
mov
xchg
inc
lock
or
rcrl
dec
add
in
stos
inc
and
mov
pop
cmp
jno
sub
mov
in
mov
add
call
sub
mov
mov
iret
xchg
or
mov
jns
push
mov
inc
inc
daa
fcoms
adc
cmp
ret
jl
insl
xchg
xchg
test
xchg
lods
lea
cmp
lret
out
lds
xlat
lods
add
rorb
lahf
lods
push
sbb
xchg
cld
sti
cmp
add
jp
aam
movsb
sar
xchg
ljmp
and
xorb
fwait
aam
inc
shlb
jmp
mov
ficomps
and
push
popf
inc
cmp
xor
adc
jg
mov
rcl
sub
pop
jle
addr16
push
xor
xor
popf
popf
mov
jle
out
jno
and
popa
rcrb
cmp
jno
jp
add
adc
fcom
sahf
push
lcall
push
imull
stos
cmp
jne
cmpsb
leave
xor
dec
xor
mov
cmpsb
or
xchg
out
inc
test
xchg
scas
jmp
in
imul
adc
orl
ret
jl
mov
iret
cmp
ss
pop
in
push
test
add
adc
and
fwait
add
mov
pop
mov
rclb
pop
call
cld
push
or
enter
test
mov
nop
xor
mov
fsts
jmp
outsb
xchg
sub
mov
outsb
fwait
adc
gs
adc
sub
push
pop
imul
ffreep
add
jo
out
push
inc
cmp
pop
cmp
and
jno
push
adc
mov
mov
je
mov
and
sbb
push
and
xchg
inc
jmp
push
mov
mov
mov
jl
daa
idivl
test
insb
pop
pop
sub
mov
fbstp
pop
cmpsl
arpl
pop
bound
sbb
mov
arpl
notb
or
pop
shrl
out
jmp
cld
cmp
into
movsb
in
cmp
mov
lret
in
adc
aaa
clc
shlb
mov
push
pushf
pop
sub
repz
sahf
shl
mov
insb
dec
addb
jne
add
shr
incb
shll
adc
imul
jns
mov
inc
jl
xchg
jmp
fwait
dec
or
fucom
lcall
or
clc
sbb
ja,pt
pop
loope
adc
xor
inc
clc
inc
mov
xchg
rolb
mov
aas
pushf
and
dec
jmp
xchg
fldenv
rcll
mov
dec
cmp
ds
and
aad
push
xchg
ret
andl
xchg
cmp
xor
jnp
push
repz
mov
aas
popa
daa
mov
mov
loopne
mov
or
call
xor
adc
lret
adc
dec
jge
aam
ficompl
pop
or
pop
mov
int
pop
clc
mov
pop
pusha
jp
xchg
lods
ja
sub
xchg
imul
insl
pop
outsb
push
pop
ficoml
and
and
xor
imul
notl
pushf
cmpsl
jbe
cmc
cli
test
mov
pop
dec
jnp
xchg
jbe
popf
stc
push
std
inc
inc
shlb
mov
je
jg
mov
fsincos
dec
aas
addr16
cmpl
cs
cmp
cs
mov
pop
imul
and
clc
sub
dec
jbe
fld
jge
push
mov
lods
or
mov
cmp
int
sar
outsl
clc
lahf
sbb
mov
aaa
cmpsl
inc
sbb
mov
push
rclb
pop
inc
cmc
test
fisttps
cli
inc
mov
xchg
cmp
sbb
iret
xchg
pushf
jmp
daa
scas
adc
jo
dec
popf
adc
repnz
xor
xor
jno
aaa
mov
and
sbb
adc
xchg
andb
out
mov
xor
stos
or
push
mov
push
in
imul
cmp
jbe
mov
mov
clc
fst
stc
push
cmpsl
mov
pop
mov
outsb
jae
cmp
fsubl
sbb
out
out
cmp
add
add
xchg
mov
cmp
jge
andl
pop
lahf
outsl
push
jle
lcall
popf
scas
or
mov
ss
loopne
das
jmp
mov
mov
lock
in
in
push
push
out
jb
sti
and
sarl
adcb
scas
xchg
aas
scas
mov
jg
mov
jne
repnz
daa
mov
orl
je
out
fldl
clc
sub
push
clc
xchg
ja
cs
pop
outsl
dec
push
outsl
push
push
xchg
inc
pop
out
test
jne
jb
add
out
test
xor
sbb
xchg
jp
mov
jne
loopne
and
push
btc
scas
adc
add
add
flds
cmc
jp
xchg
stos
ds
shlb
adc
sarl
out
fidivrl
sub
movsl
test
add
fisubl
adc
inc
stc
sub
or
subb
push
adc
xchg
ljmp
fs
or
ficoml
jle
shl
adc
lock
xchg
ret
icebp
sub
cltd
imul
fistpl
fmul
mov
insb
cmp
sbb
xchg
loop
mov
repz
lcall
fs
cwtl
push
pop
pop
xchg
in
and
mov
sbb
pop
cmc
sub
mov
push
sbb
pushf
dec
in
andb
movsl
in
xchg
xor
aam
add
loopne
xchg
pop
cwtl
inc
notl
lahf
bound
inc
leave
dec
or
mov
shlb
adc
pop
pop
movsb
or
outsb
push
lcall
pusha
add
sbb
jecxz
loop
cs
and
std
inc
pop
outsb
jmp
mov
and
je
xchg
cmp
lahf
xchg
sub
inc
movsb
inc
inc
call
inc
loop
inc
sub
call
inc
fbld
cmpsb
mov
movsl
movl
lret
push
scas
mov
dec
sbb
frndint
lods
lahf
add
call
mov
leave
nop
xor
ja
push
arpl
adc
xchg
sub
lods
in
ljmp
sar
xchg
cmp
ds
mov
xor
mov
aam
das
pop
inc
mov
dec
int
cmp
popf
pusha
pop
and
je
cwtl
lret
gs
test
cwtl
sub
mov
cld
aad
mov
and
cs
loope
inc
in
and
das
mov
dec
add
stos
nop
ret
cmp
loop
je
xor
out
cli
inc
out
fnsave
inc
shl
pop
fwait
jp
or
or
sub
and
jle
inc
jbe
mov
mov
jg
popa
mov
lock
inc
sbb
es
dec
addb
or
push
iret
pop
js
jmp
stos
xchg
mov
adc
sub
mov
pop
adc
jmp
adc
in
movsb
outsb
xchg
push
cmpsb
ja
test
addr16
hlt
jg
mov
movsl
jns
mov
js
push
pop
sub
sub
addr16
ret
testb
and
testl
loopne
sub
sub
gs
mull
insl
insl
xchg
mov
sub
ret
and
and
mov
rclb
mov
mov
fsts
xchg
int
mov
xchg
into
or
cli
and
nop
movsb
iret
xchg
add
adc
inc
xchg
in
cli
bound
ror
fildll
int3
aam
dec
mov
imul
inc
inc
sub
xchg
std
mov
rcl
fstpt
jg
adcl
test
fsubr
jg
stc
inc
das
aad
fldl
xor
aas
es
mov
mov
xchg
jo
nop
out
leave
daa
ljmp
fbstp
adc
pusha
adc
add
cmp
mov
push
in
dec
inc
es
add
dec
cmpsb
cwtl
dec
enter
stos
xchg
xor
mov
mov
xchg
flds
inc
lock
cmp
mov
hlt
rcrb
testl
jno,pt
js
xor
ljmp
mov
cmp
dec
sbb
xchg
pusha
inc
je
cwtl
inc
xchg
sub
jno
hlt
in
filds
push
push
bound
lret
and
push
mov
sbb
sbb
fs
push
xlat
cmp
mov
mov
mov
pop
inc
ss
mov
sbb
repnz
jge
movsl
ja
std
xchg
sbb
lahf
push
sbb
mov
push
fcmovb
hlt
jl
cmpsl
mov
fwait
push
imul
movsl
mov
sbb
jg
sub
mov
add
ss
imul
lds
in
ds
jecxz
jecxz
mov
loop
pop
jb
push
mov
repnz
and
add
outsb
imul
or
pop
inc
add
cmp
bnd
and
sbb
mov
mov
fcomip
xor
mov
dec
xor
mov
int3
xor
test
fimuls
mov
mov
sti
push
sti
pop
roll
addr16
dec
sahf
adc
loope
adc
xchg
je
movsl
mov
cmpsb
fisubrs
xchg
jg
adc
repz
mov
adc
sub
push
stos
push
add
mov
mov
cmp
jecxz
roll
pop
lods
jno
notl
adc
mov
imul
lcall
enter
lods
sti
xchg
aam
adc
adc
push
lods
dec
mov
data16
push
scas
jae
xor
push
add
inc
bound
and
pushf
in
enter
and
add
sbb
stc
cmp
dec
and
cmp
stc
inc
cmpsl
dec
lods
sub
jmp
hlt
std
fucomip
pop
xor
mov
adc
push
cmp
out
push
mov
sub
xchg
shlb
mov
aas
gs
stos
sbb
jae
and
pop
add
insb
and
and
fcoml
push
into
int3
mov
xchg
jo
mov
daa
mov
mov
sarb
inc
sub
imul
das
push
insb
pop
push
dec
sub
rolb
repz
loop
fprem1
pop
in
sbb
adc
ja
sub
jo
xchg
rcr
stos
int3
mov
loop
cltd
mov
out
pop
or
in
js
jbe
pop
jge
int
pop
dec
out
insb
jae
pop
stos
sar
sbb
jnp
mov
sbb
scas
xchg
xor
pop
insb
stc
pop
repz
pop
xchg
imul
add
jo
mov
stos
jb
add
cmp
stc
ficoms
adc
fisubrl
mov
flds
mov
test
mov
push
push
in
mov
xchg
lret
stos
clc
adc
cmpsb
fucom
mov
cmp
out
sub
jmp
add
ja
mov
sbb
sub
mov
daa
xchg
mov
js
clc
xchg
cmp
sub
fwait
mov
push
outsl
push
pop
in
shlb
or
fsts
mov
stc
fstpl
pop
stos
mov
inc
fildl
cmc
xor
stos
lods
popw
decb
push
inc
xchg
inc
dec
out
xor
jg
enter
pop
fwait
adc
fidivrs
cld
add
fwait
or
add
mov
in
xlat
sahf
jg
inc
aaa
push
mov
in
stos
lcall
js
add
call
dec
scas
fidivl
jle
mov
aas
inc
cmp
jae
lret
pop
dec
andl
sbb
jmp
repz
and
testl
fstpt
pusha
cmp
shrb
mov
xor
inc
mov
or
je
daa
xchg
and
loope
push
std
sbb
pushf
adc
movsl
test
add
jae
push
cmp
push
cmp
push
bswap
fwait
stos
test
cmp
or
les
sbb
lea
cld
imul
out
idivl
adc
pop
add
or
dec
fldl
and
fldenv
jo
xor
sub
aad
enter
dec
dec
into
ds
pop
mov
push
test
not
ljmp
dec
divb
adc
pop
fcmovne
mov
pop
pushf
xor
dec
lods
xchg
and
add
loope
in
mov
js
test
pop
jle
and
inc
mov
call
imul
pop
imul
cld
pop
ds
dec
stc
frstor
shrl
in
addr16
dec
popf
mov
shll
pop
jp
and
dec
lcall
ja
inc
popa
aas
jbe
pop
push
dec
xor
cltd
inc
jns
add
lret
cld
filds
sub
cmp
pusha
adc
aaa
pusha
arpl
or
fprem1
outsb
aaa
sarb
mov
iret
pop
mov
xchg
xor
sub
outsb
rcll
pop
push
sub
mov
test
cli
leave
jnp
fsubp
inc
sbb
loop
je
lods
fldenv
mov
fisubrs
cld
lcall
pop
in
in
orl
mov
push
mov
pushf
adc
fiaddl
daa
xchg
std
ss
decb
movsl
sub
cmpsl
mov
or
dec
xchg
jle
inc
rclb
inc
lcall
or
imul
movsl
test
pop
out
aas
jecxz
fildll
xchg
test
adc
sub
sbbb
imul
pop
lock
clc
in
clc
fsubrl
xor
sarb
push
cs
pop
xchg
lret
xchg
xor
filds
mov
in
cmp
in
xchg
loope
and
cmp
jmp
inc
xor
insl
stos
jmp
mov
mov
inc
mov
mov
xchg
out
jno
jo
pop
xchg
sub
push
sub
mov
xlat
mov
dec
nop
orl
push
lea
xchg
lahf
out
nop
imul
push
mov
dec
cmp
movsl
popf
jl
ljmp
das
mov
and
and
xlat
cmpsb
gs
adc
imul
xchg
xchg
cmp
cmpb
movsb
shll
jge
rcrb
mov
sahf
jmp
mov
sbb
pop
sbb
lock
repz
pop
pop
jecxz
pushf
fidivl
leave
push
xor
loop
push
movsl
jb
pop
xchg
xchg
in
xor
insl
movsl
std
fiadds
inc
xor
scas
pop
ficompl
mov
outsl
insl
fld1
inc
mov
mov
sbbl
inc
push
mov
stc
adc
xchg
mov
outsb
sbb
fldenv
or
addl
out
negl
mov
and
sbb
pop
aaa
cwtl
in
scas
arpl
or
sbb
lcall
bound
jmp
pushw
push
xchg
ljmp
mov
and
addr16
fcoml
fwait
pop
mov
out
cs
push
mov
rcrb
fistpl
cltd
sti
dec
ret
outsb
popf
mov
daa
or
sbb
pop
dec
cmpl
pop
cmp
int3
out
sub
xchg
out
mov
sbb
rolb
or
mov
sbb
movb
pop
xor
inc
xchg
inc
mov
push
mov
mov
push
cmc
loopne
jne
xchg
or
shll
sbb
dec
fimull
add
jbe
sahf
xchg
pushf
call
in
and
scas
fmul
int
push
cmp
push
mov
jo
pop
lock
xchg
and
xchg
iret
fbstp
in
lds
xchg
mov
mov
pop
sti
add
xor
in
mov
test
xor
dec
or
and
sub
out
add
shlb
push
loop
pop
and
lods
push
mov
mov
pop
xor
mov
adc
lret
cli
xchg
mov
pop
orl
cli
xor
push
stos
mov
pop
inc
in
xchg
fadds
test
mov
sbb
mov
dec
repz
adc
mov
sbb
jne
arpl
xchg
ljmp
mov
cmpsl
in
insb
mov
decl
dec
add
aad
xchg
inc
push
sbb
dec
inc
mov
dec
xchg
leave
imul
repz
add
xor
cld
sub
sbb
jg
inc
insl
sbb
aad
push
mov
or
mov
cmpsb
adc
imul
in
imull
out
or
xchg
sbb
xor
sub
adc
add
aaa
arpl
xchg
push
push
int3
insb
int
sbb
inc
sub
or
loop
push
fwait
rolb
inc
sub
js
movsb
cmp
icebp
andl
jge
mov
rcr
sub
cltd
push
mov
push
xchg
ss
enter
jecxz
push
dec
rclb
jp
in
jae
dec
sbb
roll
aas
push
repnz
mov
mov
cmp
shll
xor
xchg
std
push
sbb
das
mov
sbb
lock
adc
pop
push
push
mov
cmpb
call
pop
mov
incb
add
aaa
mov
or
push
push
int
nop
xchg
jle
pop
icebp
imul
cwtl
adc
ja
lahf
or
daa
pop
daa
fmull
push
lret
pushf
stos
push
or
or
push
cltd
add
data16
arpl
mov
or
xchg
inc
imul
sub
ljmp
inc
mov
jecxz
pushf
add
add
jae
jmp
fwait
je
pushl
lods
leave
sub
cmp
adc
roll
ljmp
fsubrl
in
mov
mov
adc
jmp
mov
inc
imul
or
hlt
xor
xchg
xor
sti
sub
jnp
xchg
adc
dec
cmp
insl
out
cltd
xlat
and
inc
lods
jmp
cmp
stos
pop
outsl
sbb
mov
movsl
and
aam
mov
sub
mov
cs
mov
sbb
cmpsb
clc
sbb
cmp
xor
jns
mov
inc
out
adc
lret
movsl
rdtsc
jne
popf
push
or
jb
lret
dec
sub
les
rcrb
fisubl
or
lret
jg
icebp
pusha
sub
test
inc
mov
adc
sbb
pop
and
push
rcrb
push
sub
dec
push
mov
jno
in
int
inc
bound
inc
out
lret
xor
jg
dec
jno
xor
cmpsb
js
or
in
pop
jo
mov
jns
mov
fwait
mov
nop
dec
orl
sbb
addr16
add
lods
popa
sbb
jmp
loope
ja
add
push
daa
loopne
or
leave
inc
sub
adc
imul
dec
or
outsb
mov
or
popa
lahf
stos
icebp
clc
cmc
add
xor
ret
lret
mov
cmc
gs
loopne
cmp
data16
std
jle
in
mov
inc
xor
pop
pop
loopne
jnp
adcl
icebp
std
jae
sti
or
or
and
jecxz
aam
in
dec
mov
lret
dec
fisttps
and
mov
push
adc
pop
sub
lret
mov
fmull
inc
roll
xchg
mov
je
sti
add
push
lret
or
add
lods
mov
dec
mov
inc
or
bound
loopne
jo
imul
xchg
ja
vpmaxsw
loope
cli
xchg
jl
arpl
jle
mov
xchg
imul
jns
dec
mov
in
lret
and
pop
or
xlat
lds
jnp
dec
xchg
imul
movsl
mov
ja
add
or
cmpsb
mov
adc
sti
xchg
jno
sub
out
jo
nop
in
cmpsb
jp
fucom
lcall
negb
push
std
adc
aaa
push
test
lahf
mov
mov
mov
imul
fisubs
jne
xor
in
xlat
in
sti
pop
std
out
cmpsl
int3
out
fdivp
inc
sbb
into
inc
or
and
outsl
sarb
xchg
push
and
out
scas
data16
inc
mov
and
sbb
fwait
sub
add
lcall
cltd
inc
dec
dec
mov
push
sub
movsl
repnz
mov
jmp
cmpsb
mov
dec
jp
cwtl
jecxz
push
dec
add
fcom
xor
aaa
testl
or
mov
sub
mov
jg
push
lods
call
or
aad
rcrb
jge
mov
fisubs
enter
dec
adc
sbb
dec
inc
xor
scas
xchg
fmull
push
or
xor
add
cltd
notb
jmp
dec
mov
out
in
std
rolb
lret
mov
xchg
mov
pop
in
fldenv
lds
les
in
inc
data16
mov
lcall
repz
pop
sbbl
cmp
push
std
ja
xchg
bound
fs
lds
sbb
dec
leave
xchg
or
xor
push
test
gs
in
jb
int
ds
cmp
bound
mov
push
lret
ja
mov
dec
test
pop
mov
aas
aad
dec
lcall
cmp
adc
add
ret
sbb
in
mulps
cltd
ss
adc
roll
cltd
cmp
gs
fdivs
mov
movsb
cli
bound
xchg
jle
and
sub
roll
jl
push
ficoms
pop
cmp
data16
repnz
dec
pop
lds
out
or
pushf
popf
push
pop
cltd
push
leave
test
mov
pop
repnz
dec
jmp
stc
push
sub
pop
cwtl
xlat
cmp
cld
repnz
add
mov
cmp
and
jp
lds
dec
mov
mov
jno
mov
sbb
addr16
stc
and
add
movsl
imulb
sbb
dec
shl
repnz
mov
dec
cwtl
inc
mov
and
das
dec
lahf
rcrl
js
test
adc
dec
sbb
loop
sbb
pop
mov
sbb
sub
loope
push
pop
insb
lods
jns
addps
or
icebp
and
fs
jne
mov
add
lahf
lea
test
int
fs
jp
daa
sahf
leave
pop
sbb
mov
and
vucomiss
aad
jp
push
fistpl
loopne
pusha
pop
mov
jge
dec
sar
mov
pop
inc
aaa
jecxz
sbb
push
cmp
fisubrs
lods
jl
push
dec
pop
or
xchg
push
mov
xchg
or
stos
mov
pop
imul
and
loopne
push
ficoms
outsb
hlt
lahf
cmp
and
xor
push
pushf
sub
cmp
mov
mov
dec
jg
lcall
popl
adc
push
loop
cld
add
shr
fwait
cmp
dec
js
xor
dec
cld
movsb
dec
sub
aam
mov
mov
cmc
pushf
cmp
fwait
xor
loope
or
nop
inc
and
int3
adc
addr16
mov
jo
xchg
fs
ja
mov
sub
mov
dec
imul
add
icebp
sub
xchg
pop
pop
xor
cmp
movsb
fs
xor
dec
cmp
mov
divl
sbb
in
jl
push
xchg
pop
sbb
js
or
mov
dec
push
and
mov
hlt
movsl
and
lods
rclb
leave
and
cld
mov
ja
xor
in
push
cmpsl
shll
je
imul
push
push
jbe
inc
mov
push
fsub
inc
inc
mov
mov
xchg
adc
mov
sub
adc
je
test
clc
repz
pop
and
jne
out
dec
hlt
jmp
sti
add
sbb
and
cwtl
mov
shlb
pop
imul
dec
out
call
xchg
dec
pop
je
jae
dec
xchg
add
popf
push
jg
daa
sbb
jg
divb
test
and
xchg
in
lret
into
pop
cmp
inc
mov
fwait
lods
push
push
fsubrl
adcl
sahf
and
and
mov
in
add
mov
fwait
les
inc
arpl
cmpsb
sahf
xchg
lods
iret
xor
aam
test
cli
stc
ja
fists
sbb
mov
lahf
add
fnstcw
fnstenv
pop
pushf
add
mov
sub
jbe
xor
lea
enter
add
aaa
daa
negl
stc
sub
mov
fstp
dec
jmp
stc
out
cld
adc
or
xchg
adc
adc
scas
sbb
mov
dec
rcl
jnp
sbbb
mov
cmp
addr16
scas
xchg
push
andb
cmc
sub
hlt
cld
lock
daa
push
mov
mov
fidivrl
sub
sub
and
xor
xor
fbld
in
mov
aad
xor
and
xor
dec
fldt
test
cmp
add
scas
enter
mov
test
cli
pop
mov
jmp
das
xchg
push
mov
adc
movsb
or
push
loop
cwtl
fdivp
push
inc
and
xor
inc
and
lods
cmpsl
xchg
sbb
cld
or
dec
add
test
push
loopne
dec
pop
xorb
adc
xchg
or
fiaddl
dec
das
push
pop
sub
incl
mov
sub
aam
push
and
fptan
data16
sub
inc
bound
es
js
xor
push
out
stc
lock
push
aas
add
je
mov
dec
in
sub
loope
or
push
test
out
xor
mov
inc
pop
sbbl
ret
lret
das
inc
xchg
loope
fwait
mov
sub
mov
push
lcall
pop
scas
pop
jmp
cmp
lret
adc
mov
dec
mov
and
or
ds
clc
add
xchg
push
cs
xor
js
jo
push
pusha
adc
outsl
idivl
dec
repz
sbb
push
imul
xor
pop
fildll
test
pop
push
sbb
adc
sub
xor
pop
jno
xor
pop
jnp
cs
sbb
push
lahf
cmc
stos
rol
idivl
loop
xchg
ds
decl
aam
divb
mov
faddp
push
sbb
popf
push
jl
pop
into
push
nop
jecxz
mov
ret
sbb
dec
mov
pop
add
mov
jecxz
aas
jle
jl
lods
jnp
xor
in
jno
push
add
lahf
imulb
inc
mov
mov
ss
inc
jnp
inc
inc
and
daa
or
movd
inc
jmp
out
and
loopne
adc
sub
or
xchg
adc
adc
inc
fdivrl
out
fistps
inc
nop
notb
mov
cvtpi2ps
vpmaddwd
pop
mov
xlat
imul
aad
mov
pop
jbe
or
cli
jns
pop
loopne
data16
push
adc
add
mov
scas
divl
xor
aam
sbb
repnz
jle
leave
jno
add
inc
jmp
mov
push
repz
adc
dec
pop
cmpsb
jmp
fs
fdivl
add
xor
filds
cli
out
out
lods
pop
leave
aam
lret
pop
push
cmp
repnz
sub
cmp
cli
inc
xor
shl
sahf
jp
push
sbb
ficoms
scas
push
insl
push
or
bound
mov
xlat
lea
in
push
pop
bswap
fidivl
inc
mov
xchg
cwtl
sbb
inc
mov
lcall
scas
xchg
push
sti
aas
adc
dec
mov
in
mov
pop
pop
push
push
scas
mov
inc
sbb
jbe
rol
leave
pop
in
push
idiv
out
lods
mov
cmpsb
das
xchg
aas
scas
mov
rcrb
mov
sub
icebp
push
repnz
sub
movsl
pushf
or
dec
jnp
jnp
lods
outsl
mov
popa
push
jno
decl
add
frstor
sbb
scas
arpl
dec
lock
mov
inc
inc
xor
sub
loopne
sub
movsb
mov
push
cmc
pop
or
fdivl
icebp
cld
cs
dec
xorl
das
and
dec
jmp
mov
ret
sub
inc
test
into
adc
push
push
mov
into
adc
ret
mov
cmc
pop
shl
dec
push
cmp
sbb
sbb
inc
adc
jmp
cmp
adcl
mov
int3
xchg
add
out
in
push
sahf
jl
cmpsl
in
mov
cmpl
jae
or
aas
lret
xor
push
out
and
pop
scas
pop
das
jle
aas
shll
pop
pusha
test
or
inc
pusha
and
loopne
lcall
pop
mov
mov
ja
into
mov
fdivp
insb
inc
mov
std
push
jno
lea
stos
in
addr16
mov
mov
xchg
daa
push
xor
sbb
xchg
loopne
mov
fwait
xor
add
jmp
int
push
aam
negb
ja
pop
and
xchg
xchg
sbb
sub
mov
cld
xlat
ror
mov
out
dec
test
js
call
add
xor
shlb
dec
gs
mov
mov
inc
jnp
lahf
addr16
enter
test
cmp
jmp
dec
fabs
fs
or
lret
mov
jle
cmpb
xchg
bnd
add
xchg
subb
push
xchg
not
mov
xchg
xchg
out
xchg
and
adc
mov
test
xor
mov
jne
pushf
cmp
or
pop
bound
mov
adc
push
les
jb
xchg
pusha
fcoms
cmp
xor
lret
jns
movsb
xor
or
fldt
in
dec
arpl
inc
adc
sbb
sbb
or
shrb
and
push
mov
arpl
cmp
mov
popf
fldcw
dec
jle
rorb
ds
cld
scas
hlt
sbb
mov
fs
pop
std
lret
repz
dec
mov
into
and
ljmp
dec
dec
fstpt
adc
lcall
out
cmp
mov
imul
fadds
push
cmp
out
xor
into
stos
xchg
movsl
adc
mov
dec
pop
cwtl
imul
fadds
fs
add
and
cli
arpl
inc
sub
js
lret
ret
and
cld
inc
xlat
cwtl
mov
bound
pop
ja
clc
fildl
in
lock
or
lods
mov
adc
sbb
lods
xchg
jl
test
mov
out
mov
mov
or
jmp
das
pop
test
pop
and
pop
fbstp
sub
lret
mov
mov
inc
push
int
clc
loope
outsl
rcrb
lds
cmpsb
push
or
mov
sbb
insl
hlt
das
cmp
aam
lea
pusha
pop
dec
mov
cmp
push
inc
pop
ja
xchg
mov
lret
cmp
push
in
xchg
icebp
pop
dec
push
xchg
inc
nop
pop
pop
in
pop
cmc
mov
or
mov
xchg
dec
stos
arpl
ret
out
fsts
mov
and
insl
rclb
inc
dec
push
adc
inc
sub
insb
pop
push
loopne
or
imul
outsl
enter
sub
pushf
inc
add
pop
jo
lods
fbstp
push
or
xor
inc
push
sub
and
xor
test
mov
icebp
cmp
push
xchg
mov
movsb
das
inc
out
je
sub
jg
loop
fs
or
mov
sbb
int
stc
cmp
sub
mov
testb
repz
xor
jge
aam
jmp
pop
xchg
sub
arpl
mov
sbb
arpl
je
lods
push
stos
xlat
pop
cmpl
jge
add
aad
xchg
pop
fwait
ljmp
mov
mov
cmpsb
add
nop
inc
mov
scas
es
sub
jecxz
jb
cmp
mov
xchg
pop
and
lock
pop
jnp
sub
dec
inc
jmp
adc
push
inc
push
inc
movsl
fimull
loop
adc
dec
ss
cmp
clc
add
mov
xor
rorb
ret
pop
divb
inc
in
repnz
clc
aam
jnp
sbb
aas
xchg
je
rol
out
xchg
pushf
lret
xor
es
xchg
scas
mov
sbb
call
hlt
idiv
and
into
jno
cmp
mov
rcrb
or
xor
sbb
lcall
and
aaa
jo
add
bound
xor
or
daa
popa
pop
mov
xor
mov
mov
xchg
jle
ret
aad
inc
loope
gs
je
pop
xchg
sbb
adc
out
pusha
xchg
xor
lea
adc
icebp
xchg
xor
pusha
sahf
hlt
lea
dec
aam
sbb
shr
pop
adc
lret
outsb
sar
cmp
clc
cltd
jno
cmp
pop
mov
cld
mov
popf
aas
push
lret
addr16
cmp
insl
sbb
repz
aaa
and
dec
mov
mov
dec
mov
outsb
push
mov
xchg
mov
inc
push
adc
xor
stos
inc
mov
inc
pop
in
loopne
xlat
movsl
pop
mov
inc
lahf
scas
sbb
mov
or
sub
mov
or
test
add
fisubl
pop
aaa
and
pop
and
shlb
test
add
jb
pop
stos
pop
pop
lods
lds
add
aas
lret
shrl
mov
jl
sar
addb
mov
sub
es
cmp
shr
mov
lret
in
push
mov
sbb
adc
pop
stos
cmp
and
cld
mov
movsb
and
xchg
jmp
lret
ljmp
mov
in
pop
mov
jge
lods
out
insb
adc
push
mov
adc
jecxz
dec
jno
stc
lods
cmp
add
push
mov
push
sbb
pop
rcll
pop
shrl
mov
add
xchg
jge
call
mov
cs
cmp
or
loopne
or
cmp
fwait
pop
fisubl
lock
movsl
adc
fidivrs
mov
xchg
push
mov
fs
push
cld
mulb
aas
cmp
bound
rcll
sahf
dec
scas
in
sbb
jno
movsl
popa
inc
aaa
sub
outsb
mov
xchg
sbb
out
pop
jo
or
imul
mov
out
mov
pop
push
pop
lret
test
mov
dec
pop
outsl
mov
lea
ja
gs
or
fsubr
or
insb
sbb
jo
cmp
mulb
push
cmp
jle
jae
enter
in
push
xchg
mov
cmpsl
test
sub
daa
sbb
pusha
or
jb
mov
or
das
imul
in
jg
fildll
adc
sub
fcmovb
pop
dec
push
jns
lea
into
je
inc
add
add
inc
orb
data16
ds
inc
or
cltd
popa
xchg
int
push
xchg
cli
and
lods
pop
test
icebp
inc
dec
stc
fs
and
sbb
hlt
outsb
lcall
ds
in
lds
xchg
adc
ds
inc
xchg
imul
ljmp
pop
andb
xchg
fs
out
jge
cld
mov
popa
hlt
arpl
xchg
add
sbb
mov
out
rcl
xchg
pop
mov
xor
xchg
mov
sbb
dec
mov
and
insl
fldt
sbb
cwtl
frstor
and
cmp
pop
ja
int3
enter
aas
bound
cmp
lods
xlat
stos
pop
mov
popa
xchg
testb
push
test
decb
int3
sub
popf
into
ss
orb
mov
sahf
xor
stos
xchg
inc
jbe
push
in
popf
mov
or
lock
push
repz
mov
cmpsb
sub
add
push
jno
xchg
inc
ja
fidivrl
push
popa
lahf
push
lds
push
jmp
testl
xor
icebp
shll
not
jmp
xchg
std
dec
in
rcrb
push
or
fs
push
int3
shl
jbe
mov
dec
dec
adc
lods
cltd
mov
insb
sbb
into
xor
push
or
jmp
and
call
pop
loopne
scas
xor
testb
daa
lcall
and
add
fwait
ja
push
daa
sarl
shlb
mov
pop
pop
sbb
sbb
dec
dec
outsb
mov
xchg
out
pop
mov
or
xchg
or
rcll
push
test
pop
mov
jp
sub
movsl
mov
xchg
test
xor
push
shrb
bnd
cs
test
lret
xchg
mov
mulb
insb
cmc
xchg
mov
mov
xchg
int3
push
xchg
hlt
add
inc
and
cmp
jmp
outsl
dec
pop
xchg
jecxz
cli
adc
mov
or
nop
sub
mov
shll
inc
xor
dec
sbb
push
and
push
mov
push
test
mov
and
mov
out
subb
cmpsb
pop
dec
mov
push
adc
loope
test
test
fbstp
outsl
repz
sub
add
add
sub
jo
aad
movsb
mov
pop
mov
sahf
inc
sub
adc
fildll
add
int
mov
rclb
es
pop
cltd
dec
sub
and
arpl
cli
sbb
mov
push
sub
xor
pushf
sbb
nop
jbe
add
rcl
repnz
jne
fs
mov
xchg
mov
fnsave
push
dec
fnsave
bnd
cmp
mov
mov
push
xchg
cwtl
jo
in
mov
and
mov
mov
scas
sub
pop
lds
push
jns
insl
stc
adc
stos
jg
repz
jno
mov
scas
popa
xor
mov
and
sub
jmp
int3
enter
push
xor
mov
fisubl
ljmp
das
push
rorb
sbb
xchg
sti
mov
ret
pushf
xor
test
mov
test
fidivs
out
jl
add
add
adc
fnstsw
add
sarb
xchg
mov
addb
mov
mov
iret
mov
in
jne
cs
xor
fistpll
bound
andl
mov
sbb
aad
and
sbb
cmp
adc
sti
mov
add
or
jg
or
dec
or
cmpsl
sti
dec
in
xor
ljmp
dec
and
stos
jno
and
imul
sub
outsb
mov
sbb
dec
push
jg
test
test
xchg
jne
jmp
or
rorl
mov
mov
pop
pop
push
add
loopne
bound
jecxz
inc
mov
inc
sahf
fidivrs
jnp
outsl
orl
jnp
sub
test
fisttps
sahf
sti
xchg
ror
mov
popa
xor
mov
push
in
add
push
fdivrl
je
arpl
rorb
inc
clc
lahf
arpl
and
push
std
xor
mov
pusha
jp
xor
xor
decb
addr16
mov
or
repnz
lods
insb
stos
mov
aaa
dec
xchg
stc
pushf
out
stos
sub
inc
sub
rcrb
push
je
jmp
int3
push
inc
frstor
lds
jae
pop
aad
xchg
sub
xchg
arpl
or
mov
lods
clc
jmp
jo
outsl
leave
xchg
mov
jb
push
fcmove
xor
xor
jno
adc
in
lock
divb
fbld
outsl
inc
dec
jae
pop
mov
mov
and
push
mov
and
cmp
push
sub
inc
xor
mov
test
mov
gs
pop
addr16
sub
xor
in
sbbl
inc
pushf
dec
das
cmp
out
jmp
dec
lahf
push
mov
out
aam
aaa
sahf
sbb
call
adc
add
arpl
add
push
mov
pop
mov
adc
icebp
cmp
das
pop
cmp
inc
add
loopne
in
addb
xchg
mov
push
cld
pop
adc
mov
pop
lods
in
add
nop
sbb
mov
mov
lods
test
fisttpll
fisubrs
xor
mov
mov
dec
lret
mov
sbb
out
aad
movsb
adc
imul
pop
es
fsubp
es
and
mov
fsts
enter
test
jb
sbb
inc
ljmp
roll
dec
mov
sbb
push
ss
mov
in
mov
mov
ja
inc
xor
aam
shl
ficompl
mov
nop
add
mov
sbb
dec
sub
dec
cld
add
imul
mov
into
adc
aam
xor
insl
push
aaa
adc
mov
out
xchg
xlat
sub
testb
inc
lds
shlb
ljmp
fldcw
add
insl
sub
aas
and
xchg
fs
je
bound
shl
lret
push
cmpsb
lods
iret
push
out
in
call
sahf
adc
mov
imull
inc
xchg
pop
mov
repnz
adc
das
xor
dec
pop
ret
sahf
bound
js
enter
push
dec
fdivr
dec
or
jae
push
mov
lods
aad
push
cmp
mov
sub
mov
arpl
iretw
dec
pusha
or
jmp
test
pop
sti
aas
and
sbb
or
aas
mov
fwait
mov
outsb
mov
aam
arpl
mov
lahf
out
mov
cmp
je
mov
arpl
sub
mov
xchg
pop
inc
scas
jne
or
fnsave
sub
inc
ss
je
cmp
loop
fcom
add
sbb
fucomp
inc
int
fisubs
mov
shll
adc
out
into
gs
pop
shll
xchg
jecxz
lds
imul
push
sbb
sub
fwait
mov
in
repnz
outsl
cmp
sub
mov
daa
addl
pop
jbe
xchg
in
and
or
fdivrs
jo
mov
lds
lds
push
stos
add
push
ffree
xchg
push
xchg
sub
daa
dec
lea
and
pop
js
push
divl
lahf
mov
sarb
cmp
jg
sub
mov
leave
jb
mov
int
cmp
pop
push
je
adc
sbb
addl
rep
sub
inc
gs
aad
test
pop
dec
test
xor
lret
and
jge
imul
ret
xchg
ljmp
jmp
xor
leave
cwtl
jl
sub
lret
push
loopne
inc
inc
sbb
movsl
setg
outsb
jg
xor
xchg
jns
or
and
ljmp
into
jmp
pop
mov
fcoms
cltd
fwait
cmc
pop
add
mov
pop
jge
fmuls
xchg
movsl
sbb
cmp
addr16
inc
sub
fcmovnb
pop
add
pop
outsl
add
ja
mov
jnp
pop
add
mov
repz
inc
shrl
cmpsb
ja
inc
dec
mov
xor
cwtl
add
sti
cmp
xor
jns
in
jnp
inc
mov
lds
test
lock
add
push
fwait
lahf
pshufw
lahf
mov
xchg
pop
add
insb
push
push
xor
dec
aaa
and
or
jae
repz
push
lock
addl
xor
ja
xchg
xor
aas
outsb
aas
or
xor
lea
add
bound
xchg
mov
or
in
adc
nop
mov
adc
shl
jecxz
push
push
dec
sbb
pop
jg
aas
push
or
enter
mov
inc
cmp
xor
push
adc
adc
movsb
pop
imul
dec
ficomps
xchg
mov
pop
mov
xchg
sbb
inc
xor
push
popa
mov
cmc
out
inc
jb
or
sbb
and
sbb
mov
imul
dec
lret
in
jo
rcrl
push
mov
xlat
call
mov
and
inc
add
loopne
and
lods
dec
imul
outsb
xchg
lods
aas
addr16
fnsave
sub
inc
lret
dec
cmp
jno
ret
and
dec
xchg
inc
jns
sar
in
dec
dec
dec
push
sbb
jb
loop
xor
lds
testl
movsl
sbb
les
popf
push
out
cmc
in
mov
fs
mov
lods
outsl
sub
fs
sub
xor
pop
inc
cmc
imul
add
jno
cs
je
inc
add
jge
iret
adc
cmp
push
ja
mov
repz
test
lds
les
add
nop
mov
or
stos
pop
xchg
insl
pop
ss
jne
xchg
or
inc
je
jp
jle
testb
mov
cmpsb
add
mov
jno
test
adc
lret
sub
test
push
add
lods
lea
notl
adc
push
ss
jae
xor
int
mov
movsb
in
inc
and
jae
bound
sbb
ja
xchg
xor
pop
ret
jno
push
test
cmc
push
xor
push
xchg
pushf
ja
sbb
mov
pop
mov
hlt
push
sbb
inc
mov
mov
into
rcrb
cld
rol
nop
mov
fnstsw
daa
nop
xor
mov
pusha
mov
shrl
loop
inc
dec
cmp
pop
mov
out
popa
outsb
movsl
loop
mov
imul
ret
lods
sbb
hlt
fisttpl
das
repnz
xorl
mov
mov
inc
orb
out
and
outsl
dec
inc
jge
pop
lock
fmull
ds
dec
clc
sub
scas
sbb
inc
mov
mov
pushf
pop
cmp
mov
in
lods
int
out
es
test
pslld
fwait
dec
push
xchg
push
pop
aad
pushf
sub
xchg
rcr
dec
bound
sbb
movsl
xorl
and
andb
daa
movsl
lahf
outsb
ja
mov
scas
and
adc
xchg
into
mov
or
push
cwtl
mov
mov
or
mov
push
cs
add
add
pop
jbe
sarl
sub
insb
and
out
scas
fmuls
jae
cltd
ret
inc
popa
int3
push
stos
push
jo
mov
add
xor
leave
cltd
adc
cmp
jbe
lods
pop
lcall
aas
repz
xor
ret
xor
daa
inc
out
add
mov
jns
or
mov
setns
sahf
ds
lahf
insb
and
aad
jle
in
sti
add
lods
pop
xchg
jg
cltd
in
and
xchg
adc
jle
mov
inc
daa
bound
les
lret
xchg
jbe
jg
hlt
sub
xor
adc
jbe
stos
pushf
int
jns,pt
inc
cmp
jmp
shll
ret
jb
mov
inc
fsubl
sti
sbb
popf
jbe
icebp
or
inc
test
int3
or
jp
sahf
xlat
shrb
inc
pop
mov
add
test
bound
dec
cmp
and
sbb
add
jae
js
loope
mov
test
push
addl
dec
pusha
addr16
sub
push
repz
xor
add
push
loopne
test
mov
lret
cltd
out
jbe
hlt
pusha
dec
jecxz
dec
or
insl
aad
dec
popf
dec
mov
mov
sbb
pop
and
mov
mov
dec
sub
mov
push
insb
xchg
xor
pop
sub
jecxz
dec
int3
fldt
pusha
pop
lods
lods
das
xchg
cmp
mov
fsubr
in
lahf
loopne
fxch
adc
dec
cltd
or
xchg
jle
push
int
cli
xor
mov
mov
push
mov
push
shll
gs
test
push
mov
addl
mov
std
add
push
mov
push
adc
mov
sbb
xchg
pop
pop
and
mov
mov
jg
aad
loop
adc
dec
mov
insl
mov
and
fbld
push
push
fst
pop
jge
ficoml
cli
fcomps
lahf
adc
mov
or
xchg
nop
fucomp
adc
je
push
and
sub
pop
lock
popf
test
mov
jmp
and
pop
push
sbb
pushf
xor
fists
sub
and
lahf
add
js
rcrl
mov
sbb
fcmovbe
pushf
sbb
push
xchg
into
inc
sub
or
aaa
or
mov
cwtl
push
std
pop
xchg
mov
cmpsl
mov
xchg
sbb
or
addr16
push
xchg
xchg
pop
aas
cwtl
fmull
xchg
out
mov
in
mov
lcall
sbb
mov
rcr
push
cmpsb
gs
ja
icebp
pop
loopne
mov
cmpsb
in
lea
mov
test
test
addr16
lahf
cmp
lahf
lcall
adc
xlat
repnz
ficompl
inc
arpl
aas
push
ja
repnz
sbb
sub
push
xchg
mulb
loop
ror
or
clc
xlat
lods
ds
fsub
out
daa
shl
std
push
ret
fdivrs
add
mov
enter
mov
jnp
mov
ret
push
insb
sbb
imul
pop
mov
dec
std
movsl
push
hlt
jno
outsl
aas
add
sahf
xor
sub
repnz
xchg
dec
xlat
or
mov
dec
mov
iret
xchg
dec
aas
xor
scas
ror
popa
addr16
fisubrs
lahf
lock
aad
dec
lods
fdivr
imul
mov
inc
mov
or
push
std
popf
xlat
lahf
pop
shlb
mov
xchg
mov
mov
sahf
jmp
and
daa
xor
je
loopne
and
or
stos
mov
mov
cld
push
das
mov
or
jle
inc
ror
jecxz
pop
pusha
fcoml
adc
sbb
int3
push
pop
popf
lret
rcr
inc
ljmp
fiadds
cmp
mov
mov
sub
sbb
imul
pushf
in
clc
lret
mov
sub
xchg
and
pop
lret
mov
or
mov
dec
or
sarl
lcall
xor
popf
imul
cmpsl
ds
bound
push
or
sahf
adc
cmpsb
ja
jp
mov
and
aam
xchg
ljmp
popl
and
movsl
in
cmp
and
aam
imul
fmull
xor
jge
pop
mov
mov
and
in
sbb
sahf
or
pop
sub
insb
dec
adc
pop
icebp
jno
lret
outsl
push
adc
sahf
lret
pop
sub
mov
iret
push
mov
jge
negl
stc
mov
dec
and
sbb
mov
xchg
adc
fadds
out
lahf
cmp
cmp
cwtl
ret
inc
pop
outsb
daa
lret
mov
add
mov
pushf
dec
lahf
sbb
sub
scas
push
jnp
cmpsb
ret
pop
mov
hlt
cmp
cs
test
mov
xor
or
mov
jecxz
scas
sub
add
sub
out
pop
addr16
push
arpl
dec
xchg
mov
out
addr16
inc
xchg
scas
mov
mov
aas
cmp
cld
pop
xlat
ja
adc
dec
rcr
sbb
mov
xor
ljmp
cmp
or
insl
std
scas
outsb
lods
arpl
or
aas
dec
test
mov
orb
subb
sub
mov
sti
jb
xchg
push
pop
jl
shll
test
mov
inc
inc
rcr
and
xor
pusha
push
fildll
lods
sti
or
dec
out
cmpsb
adc
mov
lock
cmp
fisubrs
les
pop
sub
pop
pop
xor
inc
cmp
add
jl
lock
in
iret
js
insl
int
jb
push
mov
dec
adc
lret
out
nop
insb
aas
ljmp
leave
sub
inc
and
and
pop
in
icebp
fdivl
rolb
sbb
out
outsl
outsb
jb
jns
and
int
lahf
adc
jo
out
inc
sbb
ds
lods
inc
std
inc
jge
test
popa
push
mov
fucomi
movsb
xchg
mov
aam
in
loope
sbb
jmp
dec
jge
fcmovu
or
sbb
xchg
mov
pop
or
mov
push
sarb
lods
xlat
pop
jno
mull
dec
sub
add
das
rcrl
adcl
fstps
xchg
pop
inc
push
sbb
ljmp
push
fcomps
xchg
jo
xchg
gs
fildll
aaa
mov
sbb
shrl
or
faddl
add
fstpl
dec
or
fs
call
xacquire
fmull
dec
push
xor
xchg
xor
cmc
clc
pop
mov
sbb
data16
fiadds
or
adc
add
fs
stos
mov
mov
lods
xor
adc
push
mov
sub
push
or
jmp
lods
push
test
loope
xlat
mov
dec
in
pop
add
jl
inc
fstpl
or
ds
sbb
ds
add
inc
cs
cmovno
stos
das
cs
hlt
lea
sub
jo
iret
mov
add
add
stc
mov
xor
xor
prefetch
or
adc
sub
daa
leave
imul
loop
inc
mov
gs
sbb
fcomps
cwtl
ficomps
lret
repnz
cmp
sub
pop
sbb
push
xchg
mov
adc
xchg
jecxz
push
call
out
imull
inc
xchg
jmp
out
aas
jge
cwtl
cmp
xor
fsts
adc
lods
test
sbb
or
jp
pop
mov
nopl
and
jg
dec
daa
adc
aad
push
je
and
mov
xor
pusha
fidivl
xchg
scas
pop
sbb
bound
setbe
hlt
push
ds
mov
lea
lea
add
test
dec
les
xor
dec
rcrl
jecxz
fimull
lret
orl
fsubl
test
rep
fdivrs
std
sub
rolb
rol
jbe
mov
insb
std
mov
sbb
roll
ljmp
fwait
es
and
ret
sbb
mov
stos
cwtl
incl
mov
xchg
push
xchg
std
xor
jle
nop
ljmp
xchg
jne
cs
dec
rcll
push
mov
mov
cltd
jb
jae
xor
and
shlb
push
sbb
xor
dec
bound
loop
out
sub
out
lock
loopne
test
adcb
fsubrs
in
mov
mov
stos
rclb
push
std
mov
jb
sub
imul
scas
fimull
mov
fmuls
xchg
xchg
aam
lods
inc
mov
xchg
outsl
xor
jno
bound
mov
lcall
test
lahf
testl
out
out
jle
pop
fidivs
or
xchg
add
dec
xor
jge
cmp
jns
icebp
mov
mov
jbe
push
lods
or
push
jne
out
jbe
pushf
or
shrb
xchg
mov
pop
xchg
add
push
cltd
sub
cmc
fs
mov
dec
fwait
dec
sub
inc
popa
jl
jne
xor
jmp
add
fsts
push
fimull
inc
jp
insl
lret
in
lcall
je
repnz
call
aaa
mov
mov
sub
or
aad
mov
or
or
imul
inc
push
jg
mov
iret
xor
push
xchg
std
fldln2
leave
shl
xor
xchg
les
push
inc
push
xchg
push
xchg
sti
dec
sub
add
adc
lcall
jae
and
lock
jge
pop
scas
sub
sbb
push
jl
adc
sbb
ds
popa
inc
test
stos
clc
mov
scas
push
out
add
cld
ljmp
sbbb
call
call
dec
test
cltd
add
cmp
stos
iret
xchg
jecxz
adc
movsl
flds
jg
mov
dec
outsb
jae
shlb
clc
jo
das
cwtl
jns
imul
push
sti
lods
pop
cmp
rolb
cmp
les
int3
repnz
xor
cmp
push
in
sarb
inc
mov
dec
test
icebp
mov
mov
pop
cmpsb
adc
mov
pop
fmulp
fidivl
popf
dec
xor
subl
xor
inc
push
cmp
sbb
add
testl
lock
xchg
sbbl
in
unpckhps
jle
or
adc
cmp
insb
mov
lea
out
add
inc
jne
daa
loop
jecxz
ljmp
cmp
scas
pushf
fwait
jecxz
mov
bound
test
sub
mov
push
xor
stos
lret
mov
inc
fs
lcall
mov
lock
pop
adc
jnp
gs
push
lcall
lret
test
jae
adc
push
fcmovnbe
xchg
jae
push
lea
mov
cmp
scas
sub
jg
lcall
add
and
pop
inc
mov
loope
mov
repz
push
in
addr16
mov
aam
xor
mov
push
stos
mov
roll
scas
loope
fsts
mov
xor
icebp
call
mov
jp
loopw
xorl
call
cmpsl
imul
in
call
mov
or
or
stos
jp
pusha
xor
inc
and
cwtl
ljmp
pop
std
int3
mov
sti
mov
xchg
outsl
push
mov
and
in
addr16
js
sti
cmp
imul
pop
movsl
pop
mov
fbld
pushf
xlat
cmc
ds
fstps
sti
push
or
pop
repz
loope
arpl
xor
dec
ja
ja
cmp
adc
data16
ds
mov
jcxz
test
pop
and
jno
dec
jmp
xor
push
aad
lahf
xchg
imul
outsl
sahf
cmp
inc
mov
mov
mov
loope
pop
add
insb
rol
adc
xor
lea
daa
mov
push
nop
lods
js
sub
leave
test
sub
into
lcall
jae
cwtl
jmp
mov
fidivl
add
mov
mov
mov
and
call
cmp
add
mov
xor
psllw
test
icebp
and
jmp
int3
push
add
cwtl
stc
cli
aaa
incl
out
cli
mov
push
push
push
sbb
cmp
in
xchg
sub
movsl
mov
pop
xor
js
mov
test
pop
movsb
push
sti
xor
xor
loopne
scas
rcrl
pop
dec
lods
ret
jns
mov
loop
mov
xlat
test
enter
ret
mov
xchg
and
inc
scas
and
movsb
and
xor
int
lock
cmp
fistps
or
test
sbb
jb
adc
das
shrl
xorb
cmp
notl
push
or
call
sub
out
dec
lcall
adc
xor
mov
jbe
enter
daa
pop
mov
jae
mov
and
mov
shlb
inc
lds
xchg
push
mov
mov
ljmp
adc
call
push
mov
push
outsl
jno
mov
test
icebp
cmc
add
cmc
or
jmp
jl
pop
mov
lahf
mov
mov
jmp
cmp
das
aas
adc
out
int3
xchg
cmp
aas
fidivs
and
movsb
es
cmp
inc
aam
out
idivl
mov
jb
rclb
push
aaa
imul
call
loop
xor
and
adc
xchg
or
movsl
xchg
and
lcall
jecxz
arpl
pop
and
lret
push
pusha
push
inc
test
mov
and
push
adc
call
jg
enter
push
sbb
in
dec
xor
or
imul
shrb
lods
mov
sti
mov
fcoms
jnp
jecxz
cmp
shrb
xstore-rng
cmpsl
add
leave
dec
mov
jl
daa
aad
aaa
dec
mov
dec
das
ret
lea
mov
xor
sub
mov
test
dec
pop
jns
rolb
add
sar
xor
rclb
repz
rcr
adc
jg
stc
xchg
gs
dec
add
clc
inc
gs
mov
inc
ja
xchg
jne
stc
mov
popl
clc
mov
adc
testl
testl
out
dec
add
cmp
push
cltd
mov
mov
inc
insb
sti
loopne
inc
sbb
scas
jo
dec
insb
pusha
divb
cmp
in
jg
jge
adc
repnz
divl
mov
push
jae
repnz
dec
jo
mov
and
dec
dec
rorb
push
stc
pop
pop
rclb
dec
mov
inc
xchg
out
sub
repz
aas
inc
out
lock
jmp
mov
ficoml
mov
xchg
lea
mov
mov
je
ss
push
imul
push
scas
and
jnp
adc
pop
pop
fldcw
in
jns
jle
sbb
nop
jp
pop
sub
sub
cmp
mov
dec
arpl
sub
mov
stos
hlt
push
sub
test
xor
and
movsl
sbb
inc
mov
jecxz
fstpl
jno
pop
xor
sti
sbbb
push
sub
filds
pop
mov
inc
movsl
sub
mov
repnz
pop
pop
mov
jl
pop
xchg
xcrypt-ctr
cmpsl
cwtl
and
inc
cmp
inc
std
mov
cwtl
lret
xchg
insb
pushf
fwait
xchg
push
aas
adc
cmp
dec
mov
mov
jno
xor
mov
adc
fsubl
repz
enter
enter
and
mov
push
pop
dec
or
add
push
shll
mov
out
or
loop
xor
xchg
clc
decl
mov
inc
jns
sarb
sbb
jmp
orl
iret
iret
xchg
movd
inc
mov
mov
es
mov
mov
jl
scas
sub
cltd
scas
lock
cwtl
push
sub
popa
std
popf
push
jb
in
push
mov
add
jge
push
enter
enter
imul
sbb
loopne
mov
cmc
imull
inc
add
add
sahf
add
push
insb
push
ds
mov
fstps
add
test
pop
jmp
jge
jl
fs
pop
stos
pop
push
sbbl
ds
aad
pop
dec
push
mov
addb
jle
in
negb
es
push
sbb
inc
std
hlt
mov
and
fldcw
in
push
push
in
mull
ds
cmpsb
imul
rcr
sub
mov
cmc
add
sbb
pop
jg
adc
xor
test
add
dec
push
dec
cltd
adc
jg
jle
mov
insb
adc
aas
sub
jl
xchg
out
popf
mov
xchg
adc
dec
adc
pop
stc
mov
rcr
hlt
mov
jno
xchg
add
jle
mov
sti
xlat
cmp
mov
adc
sub
jl
stos
out
daa
push
pusha
rcr
and
or
ljmp
sbb
xchg
dec
aad
xor
sub
jae
sahf
sub
pop
je
cmpsl
xor
cmpsl
adc
hlt
call
mov
test
push
sbb
or
fists
movsl
icebp
dec
rcr
sbb
jmp
adc
pop
ljmp
js
popf
pop
and
mov
ljmp
test
aaa
rclb
dec
mov
roll
add
jne
pop
pop
shlb
sarb
cli
inc
and
icebp
jl
mov
lret
mov
sub
pop
push
and
inc
fs
mov
adc
fcoms
leave
js
ljmp
inc
aaa
mov
mov
sub
andl
fsub
gs
pop
sub
add
push
adc
fiadds
test
inc
mov
cmp
mov
mov
sti
jo
or
aaa
inc
add
fstps
adc
repz
mov
out
test
les
and
aaa
jmp
xchg
or
mov
ficoml
dec
mov
pop
or
and
outsb
ret
or
lret
dec
scas
lock
lock
or
pusha
push
insb
sbb
xor
neg
pop
test
mov
fildll
out
sub
sahf
loope
dec
jecxz
dec
lcall
mov
cmp
xor
cmc
mov
pop
repnz
jle
icebp
fisubrl
mov
test
imulb
gs
push
cmpsl
das
mov
mov
jae
jbe
pop
in
rcl
dec
sarl
sub
stos
inc
loop
fiaddl
popf
pop
add
aad
lret
sahf
pop
ljmp
repnz
sub
les
sub
clc
in
sahf
addr16
das
mov
jge
shlb
pop
std
or
and
push
stos
pop
mov
and
mov
fstl
out
xchg
cmp
inc
shl
mov
lods
das
gs
xor
out
mov
je
rcl
lods
fidivl
push
jno
sub
pop
aas
in
inc
push
xorl
lcall
popf
push
outsb
and
xlat
repnz
jp
lret
mov
jge
pop
ror
push
test
gs
iret
xchg
mov
das
inc
dec
imul
fidivs
aad
sbb
loopne,pn
shll
mov
or
add
add
or
daa
lcall
out
dec
jnp
pop
dec
rol
mov
push
fcoms
mov
call
dec
sbb
lods
ret
jecxz
mov
push
aad
add
push
popa
aad
xor
mov
dec
pmaxsw
inc
adc
mov
out
stc
testl
rclb
data16
dec
test
dec
divb
and
sub
sar
mov
dec
mov
lret
subb
lret
mov
jnp
popa
and
int3
mov
loopne
cmp
dec
test
ja
nop
and
inc
xor
mov
or
pop
xchg
mov
mov
enter
cltd
push
data16
mov
in
mov
shll
and
imul
negl
insb
mov
and
ret
sbb
outsb
popa
test
mov
in
mov
pop
pop
mov
jmp
lret
add
jg
pop
xchg
repz
adc
aas
js
jg
mov
mov
push
pop
cmp
cmpl
mov
or
int
inc
push
jbe,pt
nop
mov
stos
lahf
xor
push
pusha
adc
inc
mov
mov
idiv
fadds
mov
pop
dec
pusha
lods
pop
mov
mov
or
cmpl
fstpt
lods
xchg
dec
adc
insl
jne
ss
mov
icebp
rol
or
das
mov
cmp
sub
xchg
jmp
jns
cmp
xlat
sti
inc
pop
inc
dec
inc
sub
sub
in
loopne
repz
and
out
pop
cmp
xchg
xchg
cli
shll
mov
and
jno,pt
popa
ud2
lahf
mov
aad
jecxz
jmp
inc
shl
cmp
cmp
outsb
sbb
ds
std
cmp
push
sbb
out
dec
fbld
test
je
xchg
push
jns
dec
dec
or
mov
dec
xchg
jne
jp
dec
add
aas
int
rcl
and
xchg
cld
add
loopne
mov
cld
pop
repnz
fildll
xchg
dec
loop
stc
dec
and
test
stc
xchg
mov
stos
add
cli
jl
xchg
dec
and
je
es
sahf
pop
xchg
and
mov
out
xor
imul
mov
repnz
jle
and
imull
test
fucomip
repz
inc
xchg
pop
sbb
or
int3
cmp
addr16
sbb
fstl
fisubrs
lds
imull
and
fwait
push
fisubrs
jnp
pushf
pop
cmp
sbb
out
jno
push
xchg
xor
add
jge
pusha
xchg
adc
pop
insb
jbe
pop
mov
adc
gs
aaa
xor
jge
aam
incl
jecxz
gs
lods
xchg
dec
shl
gs
pop
outsl
dec
ss
mov
insl
in
mov
mov
rclb
jb
mov
sub
gs
cmp
cltd
jmp
dec
fisttpl
addr16
mov
xchg
fistpl
stos
jae
cmc
mov
pop
xchg
test
and
lods
jae
mov
sub
nop
push
pop
lods
divl
lahf
cmp
cwtl
scas
mov
jge
faddp
mov
mov
mov
sub
lods
mov
and
sahf
mov
push
push
or
push
adc
insl
test
dec
push
lret
lret
inc
popa
arpl
cli
push
mov
adc
push
scas
mov
sub
cld
out
cmp
cli
inc
or
stc
inc
iret
test
inc
loop
jl
sti
std
push
test
mov
xchg
jg
adc
lods
in
xchg
mov
xor
and
adc
sti
mov
pop
pavgb
add
pop
xor
cmp
mov
ja
mov
pop
jns
jecxz
in
jl
fisubrs
popa
out
xchg
mov
xchg
ret
jmp
and
pop
pop
sub
pop
pop
es
imul
xor
mov
mov
pop
jge
into
mov
inc
fistpll
sub
icebp
aad
pop
push
clc
xchg
lock
nop
fs
jp
mov
ja
xor
mov
loopne
fbstp
test
pop
pusha
mov
push
repz
pop
mov
pusha
sbb
fidivrl
xchg
xchg
xor
mov
add
arpl
lds
add
sbb
xlat
jae
mov
pop
push
xchg
jmp
and
inc
shll
rcll
inc
add
sub
or
rcr
mov
jg
lcall
imul
pop
test
mov
cmp
scas
sub
cmpsl
jo
sub
mov
mov
sbb
fildll
xchg
cmc
pushf
push
push
inc
test
jle
addl
js
sti
sub
jle
pop
push
movsl
push
lahf
push
cltd
out
adc
mov
js
cmpsb
sbb
dec
stc
add
cmpsl
mov
xchg
mov
push
orl
mov
adc
out
sbb
test
stc
inc
out
lock
pop
xchg
icebp
cmpsb
lods
push
repz
dec
pop
insb
and
mov
cli
scas
push
int3
ret
or
mov
in
jo
call
sbb
loop
lret
push
pop
jae
in
mov
adc
clc
adc
xor
insb
push
enter
sub
push
scas
test
out
sbb
pop
push
stc
rclb
mov
adcl
add
sub
ret
add
jno
pop
cmp
mov
xor
cmpsb
or
xor
adc
lods
shll
jg
push
push
jle
xchg
lret
mov
add
cmpl
imul
js
fisttpll
int3
test
repnz
pop
sub
rcr
addr16
cmp
xchg
pop
xchg
sbb
inc
in
call
mov
cltd
sub
jmp
idivl
pop
data16
scas
push
mov
test
xchg
lcall
mov
lcall
and
xchg
repnz
push
incl
xorl
je
sub
cmp
notl
shl
jnp
dec
xchg
ja
inc
out
jmp
or
pop
out
dec
add
lds
or
jecxz
dec
ror
iret
sbb
inc
scas
mov
dec
cmp
pop
imul
lods
sbb
loopne
pop
movsb
enter
iret
sbb
nop
lret
jmp
sub
into
mov
dec
fstpl
outsb
rcrl
je
and
loope
jns
and
mov
test
dec
nop
lods
ficoml
imul
cmp
and
jl
push
push
xchg
adc
jle
xor
idivl
notl
popf
mov
icebp
xor
or
daa
fnstcw
jns
outsb
pop
inc
loopne
adc
faddp
dec
pop
je
addr16
je
lea
xlat
iret
fnstenv
push
mov
out
xchg
xchg
aad
dec
mov
cs
aas
jl
push
adc
mov
jno
fisttpl
dec
sahf
inc
sbb
and
jbe
add
mov
sbbb
repnz
push
es
in
pop
or
rcrl
clc
frstor
cmp
das
cmc
or
loope
sbb
repnz
les
cmpsl
adc
dec
adc
inc
lcall
es
jbe
std
pop
orb
xchg
insl
icebp
dec
hlt
clc
in
xchg
in
inc
push
sub
mov
arpl
fdivrs
fistpl
sub
adc
pop
sbb
les
push
or
sbb
fildll
insl
lea
pop
mov
cmp
mov
jae
push
loopne
xchg
testl
sub
add
adc
lock
adc
mov
cmp
push
test
sub
bound
subl
sbb
adc
shl
icebp
test
xchg
inc
mov
aam
das
xor
cmp
insb
aad
cmp
incb
mov
xor
xchg
mov
loopne
movsb
call
loopne
in
push
jmp
or
push
aam
cltd
sub
nop
pop
hlt
insl
js
sub
xchg
fwait
pop
repz
or
into
out
cmp
pop
fmull
rolb
dec
sbbb
divb
pushf
mull
bound
daa
scas
shrb
push
loopne
andl
lcall
lret
xchg
jno
aam
xor
pop
xor
push
test
sbb
cmp
les
add
xor
out
in
lcall
in
mov
and
fstpt
jg
insb
add
push
jns
test
mov
aaa
in
adc
add
pop
cmp
and
jb
or
sub
cmp
ja
sarl
or
out
mov
fisubl
mov
push
adc
mov
mov
pop
sbb
mov
imul
testl
out
pushf
lds
std
ret
mov
adc
mov
repnz
jle
adc
xchg
lret
and
inc
sti
popa
mov
mov
mov
push
and
mov
outsb
sahf
out
sub
popf
rolb
add
orb
ret
insb
dec
sub
inc
mov
dec
pop
ss
faddl
pusha
rcll
adc
aam
lods
ja
out
insl
dec
xor
mov
jmp
pusha
les
mov
push
cmp
sbb
cmpsb
lret
push
outsb
in
data16
testl
cltd
imul
je
ljmp
lret
mov
adc
loopne
test
aam
clc
or
mov
xor
dec
rclb
rolb
xchg
and
push
fbstp
popf
popf
sbb
fisubs
and
lret
jbe
push
shll
push
xlat
cld
sub
cmp
pop
xor
pusha
cltd
pop
rcll
icebp
sbb
mov
enter
das
cmpsb
std
fidivl
addr16
daa
pop
ror
jge
mov
imul
std
test
mov
rdpmc
movsl
or
cmpsb
int3
jg
mov
addr16
movsl
mov
pop
cmpsb
xchg
push
sub
pop
jge
pushf
sarl
cwtl
xor
mov
xor
out
sbb
movsl
xor
xchg
scas
repnz
sub
add
in
jg
xchg
fs
lds
or
xchg
ss
jl
jbe
pop
push
in
int3
inc
jmp
lods
jecxz
push
lahf
das
inc
stos
add
mov
mov
sub
stos
dec
mov
int
or
adcb
sbb
inc
fmuls
sub
adc
fnstsw
clc
ffree
pop
cld
incb
mov
mov
lret
xchg
cltd
fisubrs
sbb
movsb
scas
inc
lods
add
pop
out
pop
and
or
sbb
add
enter
or
mov
aam
add
ret
xorl
stos
pushf
mov
and
stos
int3
jmp
inc
inc
mov
adc
inc
pop
lock
aaa
popa
faddl
idivb
pop
out
loopne
inc
leave
or
out
xchg
adc
test
jecxz
cmp
shl
das
adc
inc
xlat
and
bound
cmc
mov
jge
sub
les
fisubrs
stos
add
sahf
push
mov
jnp
cmpsl
sub
xorb
les
cmp
call
inc
notb
bound
or
mov
das
mov
decl
pop
pop
mov
pop
xchg
inc
ret
mov
mul
cmp
cs
sbb
xchg
movsb
arpl
inc
pop
in
xor
pop
add
xor
push
lods
cmp
lcall
cmp
int3
in
xor
negb
jae
int3
in
test
inc
ljmp
dec
sub
push
dec
or
and
and
popf
lcall
insb
fldenv
or
mov
shl
or
jns
dec
mov
ret
mov
repz
cmpl
ret
jae
call
int
push
push
pop
push
push
or
pop
adc
push
xchg
scas
out
mov
push
jno
jo
xchg
std
ret
add
rcrl
es
fistpl
imul
int3
inc
cmpsb
jb
cmp
dec
push
iret
daa
cmp
mov
iret
leave
push
pop
xchg
fiadds
mov
xor
rorl
push
cld
xchg
inc
outsb
jmp
xor
es
jmp
call
xor
cmp
xlat
test
in
dec
rcrb
sbb
int3
dec
jnp
fs
out
outsl
leave
cs
jge
mov
gs
pop
jle
shlb
cltd
jge
push
lahf
in
dec
pop
and
fwait
popf
cs
idiv
pop
repz
fmuls
dec
inc
fstps
cmp
and
arpl
decl
lods
jg
repnz
stos
sbb
add
dec
cmp
ret
push
int3
insb
aad
shlb
popf
jb
sbb
jmp
test
lret
aad
cmp
imul
mov
pop
stc
fidivs
add
dec
push
popa
mov
arpl
inc
xor
sarl
mov
ljmp
incb
movsb
pop
mov
fnsave
adc
add
jne
jge
lret
in
add
inc
inc
insl
in
int
push
dec
xchg
dec
push
insl
xor
dec
imul
outsl
int
inc
cmp
inc
cmc
aam
and
es
enter
or
dec
mov
popf
adc
loop
mov
xchg
and
stos
xchg
xor
dec
push
mov
jne
add
mov
imul
cltd
outsl
push
leave
call
out
and
fbstp
movsb
dec
movsl
dec
mov
es
dec
pop
mov
fcoml
push
mov
inc
les
xchg
mov
pop
test
pop
fs
push
jo
or
setnp
sbb
hlt
int
mov
xchg
call
push
test
loope
xchg
jmp
sbb
shl
sub
jns
mov
mov
enter
jbe
iret
insl
test
pop
mov
pop
and
ljmp
icebp
data16
add
lods
adc
add
stos
faddl
mov
inc
push
sub
push
pop
cmc
cmp
lret
dec
adc
lods
ss
adc
mov
data16
cltd
fwait
and
lahf
icebp
loope
cld
cmp
std
cmpsb
test
cmp
cmpsl
xchg
inc
xor
push
outsb
outsl
mov
pop
ret
inc
loopne
and
fdiv
mov
xchg
imul
or
fs
or
clc
add
push
jnp
pop
sbb
sarb
frstor
pop
inc
jle
and
pop
pop
or
pusha
scas
push
pop
stc
cmpsl
jmp
ret
in
xor
or
push
dec
mov
mov
mov
sub
lahf
jo
pop
out
jne
scas
les
push
into
mov
mov
ror
sub
adc
pop
arpl
fsubr
push
pop
fsubrs
std
fildl
mov
aas
jne
pusha
push
xor
call
xor
inc
andb
add
int
pxor
or
xchg
pop
pop
push
xchg
mov
sub
add
lea
jecxz
repz
idiv
and
dec
add
xor
shlb
pop
call
sbb
ss
add
aas
addr16
mov
xchg
inc
nop
cmovg
pop
mov
popa
scas
int3
xchg
cs
movsb
add
ret
addr16
mov
ficoml
inc
insb
repnz
mov
pop
sub
repnz
jg
cmp
out
pusha
rcr
jnp
inc
push
inc
stc
fcompl
and
adc
and
mov
mov
pop
pop
imul
repz
loope
imul
xchg
add
negl
xchg
rolb
rcrb
mov
ret
dec
mov
xchg
es
fmuls
js
jecxz
push
stc
fsubrl
or
jnp
push
mov
ret
out
and
mov
pop
pushf
and
xchg
push
sbb
jl
mov
adc
mov
pop
mov
inc
jle
bound
cld
scas
sub
rolb
pusha
sub
push
test
bound
rcr
popf
fs
es
imul
sub
cmp
mov
xor
adc
fs
in
sub
or
out
pop
mov
xor
ficoms
mul
mov
sub
mov
jno
mov
dec
add
jle
mov
fnclex
adc
sbb
push
mov
mov
adcb
push
jbe
xor
loopw,pn
rorl
rcrl
push
sbb
stc
xchg
fidivl
loopne
fdivr
iret
stos
xchg
lret
xchg
jl
push
inc
jecxz
gs
xlat
dec
cmp
push
mov
icebp
clc
xlat
and
xchg
lret
scas
xor
fs
dec
dec
adc
rclb
push
pop
fdivr
inc
mov
sbb
shrb
xchg
xor
cmc
sbb
lods
mov
xchg
mov
xor
adc
or
sub
xchg
int3
and
or
mov
push
xor
xlat
sbb
imul
cmp
lods
out
mov
sbb
inc
adc
sbb
divb
inc
push
xor
cmp
mov
dec
pusha
pop
adc
addb
inc
jg
push
cmpsl
daa
inc
andb
cs
cld
xchg
insl
mov
or
ds
lea
mov
push
outsl
stos
pusha
push
or
adc
add
lret
pop
daa
jo
dec
mov
adc
adc
clc
xchg
mov
xchg
jecxz
dec
jle
xchg
jns
popa
pop
loop
dec
stos
xor
and
leave
rclb
leave
inc
cmpb
xchg
sub
or
enter
movsl
mov
das
add
js
jno
sub
ss
lock
fs
pop
lods
mov
clc
test
xchg
jge
adc
or
xchg
xor
sbb
rcrb
hlt
cmp
sbb
jp
mov
pop
cmc
stc
pushf
inc
int
out
push
repnz
pop
mov
popa
clc
test
gs
jmp
pop
shr
and
pop
jne
orps
dec
and
xchg
jne
xor
pop
dec
cmp
mov
lahf
xchg
jb,pn
movsl
int3
cmpsl
call
push
sbb
jecxz
adc
sub
mov
int3
scas
mov
lcall
or
xor
inc
out
mov
sahf
fs
loope
xor
mov
ret
repz
jp
fdivl
nop
in
fcompl
cs
jg
lods
sub
adc
inc
loop
xchg
sbb
int
pop
stc
or
add
outsb
cmp
push
jb
jae
pushf
fistl
shr
pop
test
or
popa
and
add
push
add
mov
inc
mov
add
lods
mov
ljmp
push
xchg
pop
outsb
lahf
int3
jp
cltd
pop
adc
xchg
scas
sbb
adc
int
bound
icebp
pop
lret
fstp
push
and
int
inc
fdivr
bound
dec
mov
mov
fbld
inc
scas
pop
sbb
and
in
iret
stc
dec
inc
popa
sbbl
popa
and
add
cmp
pop
or
sub
sahf
es
inc
inc
pop
cld
stos
fwait
popa
pop
adc
and
es
adc
sub
popl
mov
mov
push
fwait
cmp
pop
pop
popa
sbb
test
push
xor
sarl
jne
fsubs
mov
iret
dec
insb
lds
mov
pop
clc
sbb
fwait
adc
cmp
add
enter
push
orb
mov
sub
shll
pop
lds
rclb
mov
insl
mov
add
notb
fucompp
adc
or
scas
mov
hlt
inc
mov
rorb
lods
pop
or
sbb
popf
and
dec
shlb
dec
inc
into
or
test
pop
test
sbb
fs
xor
inc
stos
aam
xor
clc
outsl
push
dec
inc
jno
sub
jno
les
outsl
hlt
jb
inc
inc
lahf
push
andl
arpl
mov
pop
cmp
xchg
jp
dec
xchg
lahf
pop
adc
jecxz
xlat
int3
adc
cwtl
imul
shlb
mov
pop
jo
pusha
loop
dec
add
dec
aad
sub
inc
or
dec
outsl
adc
jae
insl
lock
jmp
sub
ss
inc
aaa
jo
repz
mov
adc
rcrb
dec
sub
es
xorl
cld
xlat
add
add
adc
lds
cmp
jbe
mov
fcomps
imul
and
das
and
in
ffree
cmpb
pop
mov
lds
pop
into
jecxz
test
int
add
cmc
movsb
scas
scas
dec
mov
pop
xchg
xor
cwtl
mov
stos
sti
cmp
or
shlb
inc
incb
stos
inc
clc
mov
xchg
ljmp
ds
ja
data16
test
push
cmp
es
jo
cmpsl
shll
lds
les
jg
roll
mov
cmp
fisubrs
jmp
sahf
push
push
neg
dec
push
fisubrs
aas
clc
sbb
sti
dec
rol
jl
jmp
inc
xchg
jae
sub
pop
rcrb
add
push
xor
fwait
mov
jg
xlat
mov
push
or
mov
sbb
sbb
lahf
js
dec
bound
enter
loop
push
repnz
xor
cmp
adcl
movsl
inc
ret
push
mov
sub
aad
dec
jmp
dec
mov
pop
jo
jb
add
xchg
daa
pop
sarl
adc
cli
shrl
cmp
scas
xor
rolb
imul
mov
out
mov
mov
dec
andb
xchg
sbb
jo
iret
xchg
xchg
test
dec
out
lods
lcall
mov
int3
cmp
sbb
shlb
mov
mov
push
add
sarl
fs
mov
pop
xor
adc
jle
pop
jb
sub
xchg
iret
in
jns
ljmp
cwtl
sub
in
pop
test
dec
pop
push
pop
fs
xchg
outsl
rorl
ret
or
shlb
xor
int
push
and
ljmp
fisttpl
jge
mov
imul
mov
sub
jno
sbb
fldenv
ss
mov
sbb
int
inc
jecxz
subl
xor
fbstp
push
fildll
push
mov
pop
aad
jno
lds
shlb
push
pushf
mov
lock
leave
stos
icebp
or
or
dec
sbb
addr16
xchg
adc
mov
repz
in
push
ja
dec
xor
ret
fwait
cmp
or
in
inc
push
hlt
das
sbb
sarb
push
pop
and
adc
add
and
leave
jbe
cmp
mov
cwtl
out
jne
js
dec
popf
loop
rorb
dec
fidivrl
cli
ret
hlt
clc
or
add
jns
inc
ds
xchg
lret
mov
pop
cli
mov
xchg
mov
push
xor
and
popa
jo
mov
fdivrp
scas
enter
xor
js
outsl
mov
roll
stos
adc
or
pushf
clc
bswap
inc
adc
cmpsl
in
ret
mov
call
fcmovne
notb
push
roll
scas
cmp
add
mov
adc
outsl
pop
loopne
add
dec
lret
stos
incl
and
jnp
loopne
sub
add
lds
pop
cmp
cmp
stos
stc
cmc
sub
pop
lods
jno
and
mov
ffree
aad
into
push
dec
outsb
mov
hlt
xlat
out
rcl
aas
lds
jg
pop
jno
outsl
push
scas
outsb
aad
loope
lock
jbe
mov
imul
xchg
sub
outsb
xchg
lcall
and
mov
aam
push
sbb
test
aad
jle
mov
aad
sbb
mov
fsubrl
je
into
xchg
inc
repnz
inc
icebp
add
aas
jne
outsb
sbb
mov
mov
mull
adc
and
add
adc
inc
jle
aam
inc
sub
lret
cli
shlb
inc
push
xchg
inc
sub
out
cmp
fsub
je
in
cmp
dec
cld
mov
xchg
or
jbe
lods
shll
insb
push
stc
cmp
xor
lds
scas
xor
jae
mov
idivb
and
sub
std
pushf
imul
loope
push
dec
pop
cmp
pop
lds
fcoml
mov
test
adc
jp
inc
mov
cmpsl
cmc
fldt
jge
stos
pop
add
sbb
arpl
cmp
and
hlt
enter
mov
mov
aam
leave
subl
push
push
xlat
add
pop
push
sbb
mov
aas
fdiv
stos
pop
pop
dec
nop
sbb
rcrl
nop
or
lret
or
fldt
push
in
pushf
sub
add
add
sbb
sbbb
ret
sub
das
sbb
outsl
test
xchg
mov
mov
pop
xchg
cmp
or
inc
pcmpeqw
dec
pop
push
sbb
aam
bound
lahf
fs
xchg
and
pop
and
dec
out
popf
cs
adcb
sbbb
hlt
test
mov
cs
push
or
dec
mov
xor
daa
xchg
push
push
sub
fsubrs
movsb
jp
lcall
les
add
add
lret
inc
adc
and
xor
in
add
andb
push
mov
push
pop
rorb
popf
js
cmp
insl
mov
stos
cmp
sub
push
subl
fiaddl
cltd
and
sahf
iret
or
jg
or
aaa
scas
dec
push
cmpsl
fldenv
and
mov
pop
mov
jl
pshufw
lcall
jge
inc
imul
in
enter
into
xchg
stos
push
in
stos
rclb
std
in
aaa
sbb
mov
jge
pop
aad
dec
xchg
cmovns
jb
nop
jge
mov
inc
jecxz
pop
pushf
dec
lds
xchg
pop
in
xchg
xor
adc
fisttpll
rorl
mov
in
test
aaa
cltd
xchg
arpl
addr16
ret
jb
mov
inc
dec
or
push
addr16
and
bound
repz
cmpsl
imul
jle
xchg
lahf
das
sub
pop
popa
jae
imulb
in
std
and
cld
adc
je
pop
pop
fcompl
pop
bound
and
sbb
in
sbb
and
scas
jbe
mov
outsl
decb
leave
clc
add
cmpsb
adc
sbb
jp
jle
and
xchg
sarl
loop
and
pop
xchg
in
shrl
pop
aas
icebp
cmp
cld
add
iret
xchg
xchg
outsl
nop
pop
sub
push
jmp
lods
inc
cmp
sub
mov
les
jae
push
jmp
lret
ret
sbb
int3
push
out
or
push
shrb
fcmovnb
in
test
cmc
int3
mov
cmp
add
mov
comiss
test
push
cmp
dec
lods
sbb
jecxz
jb
pop
adc
push
mov
dec
add
xchg
pushf
jns
push
test
dec
adc
shll
dec
dec
push
pop
fwait
and
and
pop
cmpsl
data16
lods
loopne
ret
in
add
fistps
test
imul
mov
out
arpl
std
and
ret
les
cli
ss
pop
xchg
adc
mov
rcl
or
movl
xchg
dec
cli
add
shlb
nop
es
repnz
sbb
dec
fstpt
dec
sarl
jnp
push
movsl
js
xchg
cs
lods
lock
hlt
push
std
push
outsb
stos
xchg
mov
es
mov
fisubs
adc
sub
jp
or
pusha
popf
and
inc
cmp
push
andl
xlat
push
in
sub
sbb
or
cmpsl
aad
cltd
lock
les
sub
test
and
lock
lahf
push
fstpl
sub
and
jge
cmpsl
adc
pop
or
mov
xchg
inc
cmpsb
mov
call
mov
push
out
or
mov
jno
rcll
xchg
aaa
jbe
lods
xchg
out
pop
lods
repnz
ds
cwtl
xchg
adc
push
imul
rcll
add
iret
pop
out
mov
icebp
rcr
in
xchg
mov
fistpl
adcb
loopne
je
hlt
mov
ss
in
or
inc
out
add
mov
ret
xchg
aam
mov
push
lds
cmp
shrb
test
test
mov
ds
ficoml
push
and
dec
lret
dec
dec
xchg
es
dec
mov
xchg
es
and
add
and
push
push
nop
in
cli
xor
xchg
cld
ja
movsl
btc
add
lock
es
adc
mov
mov
icebp
lcall
xchg
cmc
xchg
and
inc
outsl
pop
addr16
mov
inc
pop
movsb
adc
pop
lret
xchg
push
outsb
jmp
popa
xor
mov
jbe
mov
mov
ret
inc
or
je
icebp
int3
sub
ljmp
xchg
and
arpl
or
stc
cmpsb
mov
pop
sub
sbb
adc
push
lods
pop
dec
sbb
das
mov
cmp
inc
imul
or
push
pusha
xchg
lock
ljmp
jg
push
push
push
lret
test
test
jnp
pop
call
pop
enter
mov
test
sub
pop
push
ljmp
or
or
hlt
imul
adc
jecxz
mov
test
cmp
pop
fnstsw
push
movsl
lret
cmp
out
test
jbe
int3
adc
stos
inc
imul
mov
jge
inc
and
vcvtph2ps
mov
aas
incl
stc
fstpl
std
pop
imul
jne
mov
div
popa
inc
scas
shll
data16
data16
loop
pushf
jns
push
mov
push
mov
add
cmpsb
pop
movsb
pop
dec
int
sar
movsl
repnz
sub
jns
arpl
sqrtps
push
decb
dec
test
jae
xchg
rcrl
xchg
push
fcomp
sub
and
and
ror
fwait
stc
icebp
push
dec
mov
mov
aam
inc
ret
adc
inc
fidivl
cmpsb
fcompl
mov
mov
popaw
ds
push
jnp
cmp
lods
sbb
push
sahf
rclb
in
sbb
in
xchg
negl
fdivr
imul
inc
clc
jno
mov
adc
push
out
xor
daa
xchg
mov
jl
push
cmp
add
rcrb
inc
cmp
cli
je
add
jmp
xchg
sub
lea
fdivp
repz
lret
mov
lods
ret
inc
jo
sbbb
xchg
jp
pop
imul
sbb
sbb
fcmovnbe
jnp
outsl
insb
movsb
inc
dec
lds
sbb
js
pushf
mov
xor
cmp
daa
xor
sub
inc
mov
dec
xorl
inc
add
scas
inc
cmp
insl
ja
outsl
cs
inc
out
into
add
cmp
and
mov
daa
in
adc
pusha
sub
aas
pop
or
orl
ja
pop
cmpsb
js
cmpsb
lods
xor
fbstp
in
cmp
xchg
inc
mov
dec
push
adc
xchg
das
ss
jg
jno
fbld
shlb
movsl
ljmp
jbe
push
test
inc
push
xor
fistl
loope
fwait
adc
push
sbb
cld
jbe
cmp
fstpt
sbb
pusha
lds
jno
jns
outsb
shlb
mov
hlt
and
or
sub
jne
adc
jl
xor
icebp
cs
or
insb
push
lods
add
scas
xorl
ss
jp
sbb
lahf
adcl
mov
xchg
sbb
jns
sub
mov
shll
push
pop
gs
sbb
xor
pop
call
popa
hlt
lods
ds
sti
or
xor
jb
std
ds
mov
movsb
inc
in
mov
shrl
xlat
inc
je
jecxz
std
ljmp
xchg
lods
xor
xor
test
jbe
pop
inc
mov
lahf
mov
lcall
cmp
jnp
jl
and
mov
sbb
add
arpl
mull
dec
fcomps
and
in
ljmp
test
sub
sub
les
repnz
mov
or
mov
lds
mov
jl
cmp
fwait
lahf
push
cld
aaa
fstl
adcb
mov
and
dec
stc
or
flds
aaa
adc
leave
or
fstp
clc
loop
ds
lahf
adc
mov
cmc
xlat
xor
int3
lock
mov
test
data16
cwtl
push
mov
repz
idivl
jns
sbb
fiadds
xchg
scas
xchg
sbb
push
es
mov
shll
cmp
sarb
cmp
call
inc
sarl
mov
les
ds
scas
cmp
sub
out
push
jb
in
sub
outsb
mov
jno
movl
xor
mov
cmp
xor
sbb
mov
dec
repnz
int3
clc
add
inc
dec
popf
pop
sti
mov
sub
cmc
xor
mov
push
outsb
daa
out
aad
jae
sti
movsb
clc
int3
jmp
xchg
inc
mov
repz
inc
adc
mov
pop
mov
or
stos
outsl
pop
out
adc
or
mov
call
lret
mov
fcmovb
out
mov
daa
inc
in
push
out
pop
cwtl
loop
repz
test
adc
fs
fwait
push
out
stc
movsb
sub
jle
mov
sahf
jle
stc
sti
add
mov
clc
mov
lret
in
dec
xor
mov
mov
cmp
xchg
adc
mov
push
add
in
and
jmp
sbb
push
mov
fstl
dec
call
adc
mov
add
stos
push
mov
nop
sbb
jb
mov
lret
xchg
add
sbb
ljmp
cmp
push
clc
movsl
mov
add
movsb
push
xchg
xchg
jg
and
jo
out
xor
mov
in
movsb
push
mov
dec
jge
into
push
push
sbb
out
inc
mov
sbb
es
inc
and
stc
jno
inc
sbb
stc
mov
test
and
push
stos
mov
push
aam
xor
imul
sbb
mov
stos
daa
aad
pusha
mov
das
filds
insl
ljmp
ljmp
jnp
insb
pop
pop
xor
pop
add
xor
movsl
adc
xchg
xor
inc
mov
ja
sbbl
sub
shlb
mov
loopne
mov
cltd
int
inc
inc
xchg
les
xor
jno
int3
icebp
and
xor
testb
out
pusha
or
andb
xor
leave
cmpsb
xor
mov
ds
pop
lret
sbb
lock
sub
jns
jmp
lds
aaa
test
fistps
in
xchg
dec
jle
sbb
pop
movsl
divl
push
dec
or
add
sbb
sbb
push
mov
xchg
insb
mov
insl
adc
inc
push
dec
mov
jbe
add
xor
call
mov
cld
into
mov
imul
bnd
mov
add
mov
repz
loope
xor
jp
andb
test
repz
test
or
sarb
cmp
xor
sub
and
xchg
fnsave
push
adc
in
push
adc
xchg
xor
lahf
adc
push
sahf
sbb
mov
mov
mov
dec
pop
ds
lret
aaa
mov
dec
test
cld
clc
or
jle
sub
sub
jae
fwait
mov
xor
stos
leave
fistps
push
mov
cmc
add
add
gs
add
mov
push
mov
lcall
loop
aaa
loope
add
loopne
xchg
xchg
ds
loope
popf
out
adc
cli
repnz
pop
in
lods
fldcw
cmp
mov
out
xor
mov
ja
adc
sahf
mov
sub
insl
test
repnz
repz
adc
cld
pop
push
shr
mov
sub
test
xor
loope
mov
sbb
out
mov
ss
aam
aas
movsb
xchg
insb
sbb
adc
gs
lods
and
imul
test
imul
xchg
inc
fldt
loope
pop
into
les
jmp
push
jae
and
sahf
sub
nop
push
or
cmpl
or
fisubrs
xchg
push
rolb
fsubl
pop
push
dec
push
cmp
add
movsl
inc
jecxz
scas
jge
lret
mov
js
push
sub
jnp
lret
adc
lahf
faddl
cmpsb
in
push
push
pushf
inc
lcall
jge
lds
rol
cmp
jecxz
dec
mov
adc
xorl
mov
jg
sub
sbb
rcll
xor
mov
mov
adc
jbe
sbb
into
jge
shl
push
cmpb
aad
js
mov
or
data16
fimull
imul
xchg
mov
pop
imul
push
mov
mov
pop
dec
mov
pop
sbbl
fldenv
ret
pop
lods
xor
les
cwtl
repnz
es
stos
cmpsl
mov
mov
divl
and
and
loop
lods
push
outsl
cmp
dec
iret
sub
aad
ljmp
push
jmp
pop
roll
scas
scas
dec
jle
push
fstpl
push
add
or
xor
fcomip
aaa
scas
sub
out
test
push
xchg
xchg
in
stos
or
dec
add
fnstsw
popa
inc
movb
aas
sahf
mov
mov
ret
in
push
jb
inc
pop
xchg
jg
subb
repz
adcl
mov
out
pusha
xor
rolb
xor
mov
popa
loop
or
adc
adc
push
cltd
xchg
push
push
movsb
in
mov
pop
loopne
mov
ficoms
dec
je
fsubrp
shll
lds
mov
push
dec
jge
adc
inc
call
lcall
jle
fcmovbe
ds
pop
pusha
in
mov
dec
aam
mov
push
jmp
add
inc
mov
dec
das
mov
pop
stos
sbb
hlt
divb
imul
sub
add
sahf
xchg
lret
loop
inc
rcrb
repnz
scas
mov
mov
aaa
jb
inc
xor
fidivl
jo
fisttpll
cmp
mov
fsubrl
or
pop
xor
test
mov
push
cs
imulb
mov
aam
kmovb
or
stos
lcall
dec
arpl
lock
push
popf
jb
ss
push
dec
jnp
inc
dec
jne
aam
ret
mov
sti
push
ds
in
dec
add
fnstsw
lahf
adc
in
push
mov
sub
scas
test
jns
daa
xchg
jb
mov
push
pop
dec
scas
popf
xchg
push
mov
stc
push
cld
push
mov
mov
in
xor
mulb
jmp
outsb
mov
les
mov
clc
stc
out
icebp
and
adc
mov
add
xor
add
push
dec
call
loopne
aas
out
sbb
fs
push
cmp
mov
jae
scas
xlat
xchg
dec
cs
std
cli
ret
mov
pushl
andb
jle
mov
jle
fisttpll
ret
aas
adc
xor
lcall
mov
test
cld
ss
sub
gs
aaa
inc
rcrb
imul
cli
or
xchg
test
leave
inc
push
sbb
icebp
push
add
jno
out
push
mov
shlb
or
and
pop
aad
fbstp
repz
notb
outsl
inc
repz
in
es
or
lahf
xchg
ljmp
xlat
inc
sbb
and
dec
inc
or
push
pop
sbb
sahf
mov
insl
jle
or
stos
mov
neg
and
xchg
lock
jns
pusha
repnz
and
jle
adc
loopne
dec
sub
jnp
es
out
insl
jne
xchg
leave
jbe
mov
mov
jne
push
sub
cld
dec
cmpsl
jle
out
xor
outsb
dec
rolb
inc
fisttpll
clc
add
test
mov
xor
inc
cmpsb
push
js
pop
pop
mov
pop
rorb
jae
mov
xchg
sti
test
inc
shll
add
daa
inc
mov
mov
mov
add
dec
or
cltd
cld
xchg
and
and
mov
bound
test
js
inc
imul
sbb
inc
add
adcb
int3
stos
call
in
add
cmp
das
jae
aam
je
cmc
add
test
mov
das
cmp
sub
xchg
jp
repnz
nop
xchg
popa
add
pop
enter
test
adc
in
fs
cld
jno
mov
mov
adc
inc
imul
and
cmp
andb
mov
sub
aas
fwait
xchg
mov
or
lret
adc
cmc
inc
pop
adc
xchg
mov
mov
push
lret
fisubrl
jge
fwait
jne
xor
cmp
dec
in
xchg
fstl
dec
outsl
mov
ret
shrl
fimuls
inc
jg
jle
add
out
mov
adc
xchg
cmp
imul
add
mov
xchg
clc
mov
fadd
std
mov
popf
hlt
nop
sbb
mov
shlb
sbb
mov
jmp
ficoms
jmp
push
jae
jae
and
shll
xor
adc
out
push
aaa
push
mov
add
pop
sbb
sbb
dec
push
adc
mov
and
and
inc
add
pop
mov
sbb
in
inc
pop
movsl
dec
fistpll
cmpsl
mov
cmpsb
cli
xor
cmpl
pop
pop
adc
pop
shlb
je
negl
stos
cli
ss
fwait
jecxz
mov
mov
xchg
stos
dec
push
push
or
jnp,pt
cli
inc
add
mov
mov
sbb
movsb
pop
test
out
ljmp
jo
mov
sbb
inc
outsl
pop
repnz
xor
sub
xchg
ret
je
push
inc
cwtl
sarb
xchg
or
sarl
aam
sbb
push
jb
jo
cmpl
cs
sbb
les
add
sbb
jnp
mov
pop
repz
das
lods
mov
inc
mov
clc
shl
pop
xor
mov
pop
das
fdivrp
mov
lcall
mov
push
and
hlt
jnp
les
add
pop
in
xor
and
cmp
stos
int
jg
insl
mov
and
xchg
imul
dec
adcb
rol
xchg
xchg
out
sbb
add
xchg
cli
xchg
pusha
data16
jnp
sahf
jns
add
push
jge
pushf
repnz
bound
mov
mov
dec
lcall
mov
push
std
and
and
mov
aas
push
add
iret
jb
scas
jb
push
js
roll
mov
ret
xor
les
jle
mov
scas
or
xchg
jmp
enter
cmp
lret
cmpsl
das
xchg
mov
dec
dec
xchg
inc
int3
and
push
test
mov
cmpsb
loop
shll
mov
fadds
and
arpl
push
pusha
sbb
xchg
mov
or
in
sbb
sbb
scas
fcoms
push
add
sub
adc
paddb
repz
mov
sub
mov
xchg
and
shll
icebp
addr16
out
out
cmp
into
add
lods
call
push
inc
outsl
sub
imul
xor
cmpsb
mov
mov
dec
pop
outsl
push
fistl
imul
cmp
mov
pop
push
xor
movsl
adc
jmp
in
mov
cmpsl
stc
sub
adc
adc
adc
ret
jp
lds
adc
or
pop
dec
rol
mov
mov
cs
loopne
push
pop
imul
xchg
xor
stc
or
sbb
push
popa
ret
jecxz
add
scas
push
xchg
dec
rcr
pop
pushf
rolb
xor
or
hlt
inc
test
je
filds
xorb
orl
push
rcll
fwait
ss
jns
adc
cli
jmp
sbb
sbb
push
sbb
adc
insl
jmp
sbb
out
inc
and
call
cmp
add
mov
in
test
insb
adc
outsl
popa
jg
lock
les
js
pop
nop
and
mov
xchg
sbb
sar
inc
ret
fwait
stos
xchg
mov
and
fdivrs
add
jae
ret
sbb
adc
nop
sub
inc
adc
push
push
cmp
xchg
test
popf
mov
push
cmp
ljmp
and
inc
loop
fdivs
push
sub
add
sbbl
mov
leave
push
rcll
negl
xchg
sbb
cmp
or
mov
pop
sub
jmp
xchg
jb
outsb
or
pop
outsb
xchg
cmp
or
mov
in
mov
cli
jp
dec
jmp
sub
push
daa
jb
push
bound
test
mov
push
call
ja
js
add
loopne
mov
cwtl
stos
jnp
pop
mov
xor
cld
cs
insl
loop
pop
push
mov
sbb
xor
dec
adc
cmpsl
and
scas
out
cmpsl
xrelease
jbe
xchg
jmp
hlt
test
shrb
movsl
push
jl
outsl
stos
cmp
xlat
cmp
call
mov
mov
out
or
mov
mov
xchg
aad
sub
out
incb
test
clc
xchg
pop
negb
and
adc
mov
aas
dec
icebp
mov
lret
sahf
mov
aad
jle
add
insl
imul
popa
mov
inc
mov
out
and
and
addr16
inc
rolb
mov
mov
xor
or
dec
mov
cmpsb
pop
push
pop
outsl
cwtl
jecxz
or
aad
adc
push
scas
jp
dec
xor
je
hlt
sbb
clc
jno
inc
or
es
inc
inc
cmp
loop
pop
mov
mov
xchg
out
pop
pop
mov
nop
jmp
push
jne
and
push
cs
jecxz
cltd
dec
pop
loope
mov
xor
outsb
ret
add
sahf
jmp
vucomisd
mov
sub
sbb
xor
mov
into
jae
pop
imul
xchg
in
pop
adc
and
ret
faddl
in
push
mov
xor
mov
shrl
push
dec
add
lret
mov
aad
sub
cmp
cmp
mov
lds
xor
xor
jo
jbe
aad
jmp
iret
pop
sbb
aaa
adc
push
cmpsl
lods
mov
sarl
fs
nop
testb
test
push
sub
xor
out
mov
mov
xchg
dec
cmc
ljmp
enter
fs
leave
or
xchg
sbb
in
mov
or
cmp
cmp
cmp
je
vpxor
push
sub
loopne
sub
call
jge
cmp
mov
sbb
dec
in
in
enter
lods
sbb
out
sbb
add
xor
iret
adc
fs
jl
pop
cmp
in
xor
mov
mull
aaa
fdiv
ljmp
in
mov
fadds
dec
lock
and
test
jmp
cmpsb
jle
cwtl
imul
jmp
mov
lock
and
aad
inc
xor
sahf
push
dec
cli
push
pop
lods
xor
cmp
pop
popf
orl
adc
mov
cmpsb
sti
dec
cmp
bound
les
push
lret
fsubrl
add
jnp
les
mov
dec
mov
xchg
aas
add
dec
test
sub
sub
push
mov
jle
push
ds
call
pop
push
insb
shlb
dec
das
mov
ljmp
insl
jne
sbb
or
mov
jl
fwait
mov
adc
cs
inc
cmp
inc
ds
and
lcall
mov
clc
push
cmp
xor
xchg
es
in
add
dec
dec
mov
push
rorb
push
push
mov
mov
mov
js
pop
sbb
xor
sti
mov
adc
gs
xchg
test
repnz
jb
in
into
adc
mov
aam
jp
addr16
cmp
scas
cwtl
push
dec
aad
call
mov
sbb
dec
call
push
lds
pop
addl
jmp
sub
sub
lret
fisubs
cli
outsl
pop
test
cli
xor
inc
repz
jnp
aas
mov
push
jb
pop
adc
cmp
in
in
fcoml
shrb
lods
les
std
mov
mov
push
aam
imul
push
and
inc
jns
mov
mov
sbb
mov
lods
cmpsl
loopne
lods
or
out
pop
jg
push
adc
jbe
cwtl
push
cltd
sub
aad
pop
fisubrs
setp
mov
cmpsb
dec
dec
cmp
in
sub
pop
in
outsl
add
enter
sbb
iret
inc
ss
push
cmpsb
push
inc
jbe
test
shlb
fidivrl
jp
test
pop
jne
sbb
sarb
addr16
and
testl
dec
stos
cmc
mov
out
aas
push
enter
rorb
enter
sub
or
in
aad
adc
sti
sub
pusha
xchg
xor
xchg
fsubrs
out
sbbb
jmp
scas
sarl
sahf
sbb
mov
sti
roll
cli
jle
in
pusha
fsubrs
cmpsb
inc
cmp
rcrb
icebp
cmp
inc
adc
fisubl
inc
and
mov
lcall
mov
xor
inc
ds
mov
pop
xor
filds
xor
mov
sbbl
inc
pop
or
push
and
ljmp
iret
mov
push
mov
movsb
mov
dec
pop
inc
cltd
out
xchg
mov
jo
rcr
imul
popa
popa
xchg
mov
rcrb
cmp
int3
rorl
mov
mov
lret
imul
adc
cmpsb
cmp
movsb
icebp
add
mov
roll
mov
out
sub
jbe
mov
outsb
push
sub
shl
fdivs
push
push
add
cld
incl
ss
inc
or
cld
push
ljmp
xor
jge
imul
pop
mov
inc
scas
and
je
or
jle
jg
int3
fnstenv
stc
cltd
add
or
sbb
lock
mov
add
mov
push
sahf
push
icebp
mov
popa
jp
jae
in
mov
inc
adc
xchg
mov
outsl
xor
cmp
cmp
cmp
mov
loop
add
xchg
or
movsb
sti
mov
lock
aad
mov
mov
icebp
sub
xchg
test
push
ljmp
rorl
sbb
or
sbb
push
xchg
into
xchg
push
movsb
mov
clc
fcmovnbe
inc
cmpsb
inc
jb
pop
sbb
mov
mov
jae
mov
xchg
jns
jo
shrb
sti
pop
es
ss
cwtl
inc
sahf
hlt
push
xchg
sub
dec
cmp
in
dec
js
push
test
loop
fwait
out
xchg
and
pop
pop
push
cli
sbb
jecxz
cwtl
xor
mov
test
cmp
adc
xlat
insb
cmp
arpl
gs
repnz
mov
cmpsb
xchg
cmp
or
into
scas
xchg
hlt
clc
or
testb
lock
or
and
addr16
mov
pop
xor
fcmovnb
cmp
rolb
dec
pushl
sbb
pop
mov
adc
stos
mov
rorl
jge
xchg
dec
movsb
pop
dec
lahf
fwait
mov
mov
out
repnz
insl
outsb
lock
inc
add
push
push
adc
enter
add
dec
loop
jbe
mov
inc
loopne
cs
jae
fcomps
insb
mov
jg
jb
jge
pop
jp
push
jns
popf
sbb
cltd
xorl
push
pop
shrb
into
jl
in
cmc
cmp
pop
fcmovb
xchg
ds
inc
inc
aaa
popf
push
pop
aaa
mov
test
xchg
push
pop
lret
jecxz
pushf
cmpsl
and
das
xchg
inc
push
mov
out
mov
mov
sti
aam
cmp
xor
sub
mov
jp
into
sub
xor
mov
mov
sub
fisubrs
dec
xchg
inc
test
mov
and
push
imul
cmp
jle
hlt
mov
mov
xchg
add
loop
add
xor
pushf
push
gs
jns
xlat
pusha
xchg
lock
insb
jecxz
pushf
cmp
xchg
mov
sbb
fldenv
ljmp
pop
jp
jb
mov
scas
sbb
sub
xchg
sub
ret
dec
add
cs
out
es
cmp
fadd
ljmp
cs
and
cltd
dec
movsb
cwtl
and
mov
jmp
push
mov
xchg
insb
subb
rolb
sbb
dec
inc
or
pop
es
data16
stos
out
inc
or
push
int
lret
in
addl
fs
imul
cld
inc
ja
push
xor
icebp
aaa
jg
ljmp
add
mov
push
movl
fisttps
popa
fisttps
repz
scas
dec
jne
aaa
push
lea
sbb
xchg
std
fs
aad
out
dec
ficoms
cltd
mov
loop
and
movsl
push
lret
std
clc
cld
aad
mov
je
pop
and
out
jmp
and
add
outsl
outsl
cmp
outsl
pop
movsb
das
int
mov
or
popa
fisttpll
mov
ret
jl
std
test
push
xchg
xor
movsb
sub
aam
mov
stc
sbb
aam
add
test
mov
mov
add
addl
push
and
rcrb
and
repz
mov
div
fwait
inc
mov
inc
xchg
push
lock
pop
sbb
add
mov
jl
enter
les
or
push
insl
ljmp
add
cs
add
fiaddl
rolb
jb
mov
test
daa
aaa
mov
adcl
push
push
in
mov
addr16
ds
xchg
scas
outsw
ret
scas
sub
mov
lret
fwait
icebp
adc
filds
mov
hlt
aaa
mov
mov
scas
xor
adc
adc
sti
or
scas
xchg
xor
daa
jns
loope
int
mov
xchg
mov
pop
add
jmp
aaa
and
jno
insl
stos
push
mov
popf
pop
cmp
fwait
pop
and
pop
or
es
add
in
std
in
fwait
mov
push
aad
and
mull
mov
jne
in
add
lds
ret
mov
or
dec
aaa
int
loopne
out
pop
out
in
out
lods
mov
shl
mov
add
lods
or
lods
sahf
pushl
bound
scas
mov
fsubs
pop
jne
aaa
jae
notl
inc
sbb
in
cmp
sub
in
insl
adc
sub
push
adc
loope
sbbb
sbb
and
adc
xchg
rep
add
mov
mov
lods
sbb
ret
dec
div
xchg
add
pop
xor
lea
push
int
xchg
ljmp
mov
cmp
test
push
or
sbb
addl
sub
xchg
ds
inc
pop
jnp
in
sub
cmp
out
insl
add
pop
adc
in
test
xor
outsl
int3
cmp
sub
hlt
or
add
add
add
cmp
fldt
lds
inc
stos
xlat
adc
inc
xor
std
jle
xor
jns
stos
aas
jb
pop
mov
jbe
dec
js
jmp
adc
int
iret
int
sti
addb
mov
jb
mov
shl
pop
aam
jmp
imul
xchg
mov
sub
xchg
pop
xchg
repnz
shl
and
aad
push
cmp
push
mov
nop
mov
lret
cmp
jnp
mov
mov
dec
pop
sub
ds
xchg
jle
xor
orl
arpl
stos
mov
bswap
xchg
inc
add
mov
mov
ret
adc
jae
out
divb
pop
out
ret
aas
cmp
addr16
xlat
mov
jmp
outsl
push
iret
test
fdivl
and
mov
int3
cs
int3
les
jmp
or
adc
adc
mov
in
add
mov
ret
std
lcall
sbb
je
in
cmp
lcall
cmp
lret
out
xchg
pop
mov
push
cmp
fisttpl
push
cmp
fmull
and
mov
pop
jbe
push
jnp
sbb
jae
ss
sahf
in
out
pop
stos
out
or
daa
push
ret
dec
fwait
rcr
push
call
add
scas
mov
inc
add
push
pop
dec
sub
ljmp
pop
adc
sbb
inc
int3
out
sub
dec
sbb
xchg
pop
xchg
das
imul
mov
ljmp
push
push
lods
cmp
adc
repnz
lret
imul
jnp
fldenv
cmp
sbb
cmc
mov
pusha
sti
leave
imul
xchg
or
pop
push
xchg
les
xorl
jno
das
stc
mov
cld
fmuls
fcmovnu
in
pusha
stos
or
pop
jns
jl
adc
aad
push
add
popf
test
lahf
outsb
cld
sub
xor
movb
jge
add
xor
mov
mov
dec
or
mov
pop
out
sbb
jns
test
mov
les
xchg
or
adc
andb
mov
sbb
pop
pop
aaa
and
std
mov
rcrb
push
int
pusha
jp
sarb
dec
fwait
lea
cmc
sub
inc
rorb
jecxz
adc
sti
insl
in
mov
inc
icebp
in
adc
add
bound
mov
and
mov
mov
sarl
push
js
mov
cmp
movsb
jnp
stos
push
dec
rcrb
sti
pop
mov
outsl
flds
jne
clc
and
subb
add
push
shll
shlb
mov
stos
pusha
out
shrb
ficompl
add
add
jbe
jge
enter
pop
sti
mov
add
inc
mov
stc
adc
jle
mov
pusha
xor
mov
into
wrmsr
stc
test
enter
jns
and
mov
xchg
mov
imul
fxch
outsl
lret
push
cmp
shll
ret
xchg
repnz
das
pavgw
scas
mov
loopne
dec
call
cmp
mov
call
cs
outsb
xchg
inc
sub
imul
jnp
xlat
enter
das
mov
cltd
mov
mov
cwtl
jb
pop
out
xchg
adc
sar
sub
sub
add
dec
xchg
or
pop
into
pop
into
and
aam
test
pop
inc
inc
jp
ds
sub
fisttps
notb
mov
clc
sti
pop
testl
push
shl
rorl
ret
add
xchg
decb
ja
jp
stc
out
outsb
jns
sbb
cs
sahf
insb
jecxz
mov
push
push
int
faddl
arpl
arpl
or
es
cmpb
cmpsl
loopne
cmpsb
cmp
sub
scas
popf
fisubs
push
pusha
sbb
sbb
sub
pop
lcall
pop
add
clc
mov
shrb
sub
js
cmpsb
xlat
lahf
pusha
pop
fs
jecxz
daa
jae
sbb
xor
push
adc
into
jge
push
scas
clc
andb
pop
nop
jb
dec
js
push
out
popf
adc
idivl
stos
clc
dec
imul
loope
push
jmp
clc
push
xchg
and
xchg
sbb
hlt
sarb
popa
add
pop
cli
add
ja
or
mov
pusha
add
sbb
ss
pop
aam
mov
popf
int
lds
or
imul
or
sarl
jae
mov
and
scas
xchg
dec
xor
clc
push
repnz
add
lret
test
push
xchg
push
fxch
dec
in
gs
divb
and
cmp
mov
dec
cmpsl
or
cltd
jne
mov
lret
imul
jae
fdivl
cmpsb
xor
xor
sbb
dec
mov
cmpsb
in
les
jl
xlat
mov
in
insb
push
xchg
dec
sti
push
jle
arpl
mov
jp
pop
jns
mov
sub
mov
int3
push
jns
bound
sub
mov
push
out
pusha
ljmp
cmp
cmpsl
mov
in
push
adc
iret
fidivl
sub
les
ret
outsl
test
and
fsubl
sbb
stos
int
inc
enter
jle
das
adc
xor
lcall
cmp
scas
imul
hlt
sub
add
push
aam
nop
js
dec
mov
xchg
jg
in
and
data16
iret
ja
insb
cmp
cmp
lods
lret
or
shrl
inc
cs
or
ds
mov
in
scas
mov
add
or
pushf
sbb
dec
jne
jne
imul
push
dec
loopne
jg
adc
hlt
cmp
jge
dec
jnp
and
out
idivl
sti
and
or
in
cs
xlat
fldcw
cwtl
add
inc
rcl
xor
movsb
insb
push
xor
aaa
cmpsb
imul
mov
jp
aaa
xchg
bound
mul
stc
dec
jne
sbb
pop
cmc
sub
jl
pop
clc
ret
inc
xchg
mov
inc
dec
dec
add
mov
push
push
dec
xorb
push
or
pusha
int3
inc
jl
stos
inc
push
jo
cwtl
mov
in
ja
lds
add
dec
stos
add
xchg
inc
push
xor
pop
xorl
mov
or
adc
cmpl
sahf
add
popa
mov
fisttpll
push
aam
cs
cmc
inc
jo
lea
xchg
in
jbe
or
popf
pop
outsb
repz
sbb
and
pop
cs
fs
icebp
push
push
into
cld
subb
in
repnz
loopne
outsb
inc
push
cmp
adc
loope
sbb
andl
push
in
adc
push
hlt
idivb
mov
jle
scas
mov
pop
inc
sub
sbb
out
push
xchg
cltd
lret
addr16
inc
dec
ret
xor
dec
mov
stos
imul
jnp
lods
bound
mov
sbb
inc
clc
addr16
adc
adc
push
xor
pop
es
leave
xor
xchg
insb
ja
push
mov
and
iret
iret
or
push
dec
insl
mov
lds
hlt
inc
fwait
mov
jl
xor
mov
jp
ficomps
mov
je
jns
cs
xchg
sbb
iret
xor
mov
cwtl
out
aas
cmp
cmp
decb
pop
pop
fimuls
arpl
push
movsb
sbb
cwtl
mov
add
and
rcl
add
divb
scas
aad
fidivs
xchg
inc
sbb
dec
mov
int3
iret
es
sub
mov
pop
sub
pop
cmp
pop
xor
shrl
mov
rcrl
out
pop
fnstenv
mov
cmpb
cmp
inc
push
inc
popf
xchg
add
cmpsl
in
dec
das
pushf
push
xchg
or
cld
cmpb
arpl
pop
xchg
cmp
pop
and
jg
cld
dec
out
push
cmc
cmp
ds
cmp
xor
ljmp
gs
rcll
insl
jmp
push
mov
dec
sti
mov
pop
sub
aas
mov
mov
jge
mov
mov
pop
pop
mov
dec
jnp
stos
movsl
or
xchg
dec
add
aaa
outsl
push
mov
mov
rcl
inc
ret
jo
add
iret
insb
leave
shll
sub
pop
aad
add
xor
dec
jne
cmc
inc
add
pop
push
arpl
mov
clc
dec
cli
push
repz
lahf
pop
xor
in
mov
icebp
or
or
add
outsb
out
pop
lock
idiv
sub
dec
aaa
das
and
lds
es
mov
sub
adc
mov
jp
sub
popa
xor
mov
fsubrp
mov
in
scas
add
pop
gs
into
in
in
or
dec
test
xchg
adc
inc
push
mov
gs
adc
test
jmp
mov
rorb
rcll
mov
mov
xor
icebp
loopew
loope
sarb
or
mov
jcxz
add
lds
mov
hlt
popf
xor
cmpsb
mov
or
leave
adc
pop
adc
das
xorb
inc
push
xchg
in
or
lods
imul
sbb
sbbb
mov
or
pop
adc
adcb
jbe
or
mov
cmp
sbbb
mov
fidivl
cmc
ss
sbb
ja
sbb
insl
adc
arpl
adc
add
aas
jl
dec
sbb
aam
into
push
pop
or
add
imul
add
pushf
or
and
xlat
jmp
push
fists
shrl
lcall
popf
jnp
cmp
stos
xchg
and
fwait
mov
lret
mov
sub
xchg
mov
push
rcl
dec
mov
jg
sub
cmpsb
ja
pop
ljmp
mov
lea
lahf
inc
push
iret
push
mov
outsl
repz
push
inc
mov
cmpsb
fistl
movsb
xchg
xchg
xrelease
loop
xor
mov
sti
cmpsb
test
es
aam
add
xor
xor
test
inc
aaa
repnz
cmp
adc
and
cmp
xor
pop
adc
cltd
cmp
cmpsl
cmp
insl
ja
repnz
cmp
inc
adc
xchg
in
mov
pop
shrb
addr16
cmc
pop
cmp
int3
mov
test
fistl
arpl
inc
insl
ds
mov
and
pop
sbb
xchg
cltd
push
sti
lea
xchg
adc
notb
loopne
aam
loopne
call
ret
neg
cmc
mov
mov
fdivp
out
or
ret
cmc
push
sahf
inc
xchg
mov
jae
sub
movsb
sub
push
push
lahf
push
xchg
xchg
repnz
leave
add
mov
into
shll
dec
es
mov
sbb
and
add
loopne
fs
sbb
aaa
lret
shlb
push
cmp
pop
aaa
xorl
lea
out
xor
mov
jecxz
mov
push
or
ss
pusha
dec
pop
sub
xlat
mov
mov
xchg
mov
jb
jnp
mov
adc
sbb
test
data16
push
and
dec
fdivs
jnp
mov
call
mov
adc
push
inc
jb
add
iret
push
fwait
daa
inc
nop
cli
cmp
gs
jno
out
lods
bound
andl
inc
jecxz
loope
lods
push
in
jnp
shlb
outsl
or
sbb
jp
dec
das
out
gs
repz
xchg
push
ljmp
adc
les
imul
cmp
xrelease
repz
lret
clc
nop
cmp
les
pop
xor
mov
pusha
fildll
pop
call
sub
dec
xor
call
out
cmp
jecxz
mov
and
adc
dec
loopne
fucomi
sahf
imul
je
cld
and
iret
iret
sbb
les
or
ret
pushf
inc
xchg
movsb
test
or
add
push
xor
or
adc
inc
xor
adc
lods
mov
add
pop
or
scas
addr16
mov
andl
insb
les
fsubs
mov
call
stos
push
into
out
int3
ljmp
dec
jb
mov
fwait
pop
mov
push
hlt
or
cmpsb
push
mov
pop
cs
xor
fcom
subl
out
jp
mov
mov
popa
roll
shr
mov
push
shrb
adc
jg
adc
mov
sub
rcll
sbb
shrb
out
inc
jo
imul
jno
add
and
lods
lods
jge
lds
adc
call
and
stos
jbe
jae
lds
jns
pop
stos
addb
call
jns
repz
adc
pop
popf
add
cs
add
and
ljmp
out
pop
or
inc
mov
dec
and
mov
faddl
loope
leave
mov
xor
cmp
mov
mov
xlat
out
and
mov
fistps
imul
je
aad
push
inc
in
mov
dec
into
pop
sbb
in
pop
inc
sbb
push
mov
daa
out
insb
into
cli
jns
xor
inc
addr16
dec
loopne
push
lods
fistpll
push
xchg
addr16
out
mov
cmp
les
pop
cmc
repz
mov
or
and
daa
test
fstpl
sbb
lds
scas
out
lock
or
inc
ret
xlat
dec
lret
arpl
jne
xchg
nop
outsl
mov
adc
pushf
scas
imul
call
sub
jge
mov
in
lock
test
push
inc
pop
rorl
push
fisttpl
xchg
inc
in
push
cmp
stos
aas
or
fnstsw
xor
jbe
mov
mov
xchg
dec
je
add
outsb
sbb
stos
pop
mov
mov
subb
test
test
mov
nop
cmpsb
test
pop
pop
lods
push
in
sbb
mov
andb
and
mov
jbe
loopew
stc
mov
and
call
inc
rcll
arpl
cmp
mov
ljmp
shrb
scas
mov
pop
test
jecxz
mov
jle,pn
jecxz
rorl
test
in
popa
sub
cmc
xchg
jae
dec
ss
imul
jle
sar
pushf
xchg
les
sbb
stos
mov
out
sub
mov
in
jg
and
test
sub
mov
shr
cs
or
mov
popf
pop
xorl
notb
jmp
dec
push
aam
mov
xor
imul
pushf
inc
mov
xchg
add
mov
hlt
cmp
add
inc
lahf
push
mov
mov
fistps
stc
outsl
jle
xchg
or
bound
stos
imull
loop
mov
mov
enter
ds
cld
and
fdivs
push
lret
shlb
dec
fmull
cmpsb
dec
ds
xor
cmpsl
call
adc
shrb
push
aam
loope
adc
lea
adc
hlt
test
sti
mov
dec
jo
push
push
and
sbb
pop
mov
ret
sahf
sbb
mov
push
sub
push
jg
inc
cld
lods
jg
sub
decb
loop
sub
aaa
mov
dec
adc
pop
ljmp
pop
mov
ret
xor
nop
lods
loope
inc
pop
loop
adc
jne
mov
into
stos
push
and
push
in
out
popf
lds
mov
sbb
fsubrs
xchg
lcall
and
xor
inc
lock
pop
jb
sub
xor
out
jae
add
in
movsl
aad
pop
das
in
int
inc
outsb
cwtl
ret
or
add
out
movsl
jns
cmpsb
xsha1
cmpsb
or
jp
lret
inc
fwait
repnz
mov
mov
in
pusha
enter
outsl
out
int
movsl
cs
lds
in
or
jae
sbb
inc
fimuls
push
je
add
inc
repz
adc
add
dec
out
lcall
mov
lret
jae
fisttpl
pop
ds
fildl
jl
js
xor
xchg
and
fldenv
pop
pushf
push
sbb
add
jo
xlat
xchg
lock
insb
add
push
out
pop
pop
or
repnz
mov
out
sub
test
iret
pop
jle
push
es
mov
ljmp
xchg
jp
loopne
inc
xlat
adc
sbb
movsb
xlat
push
lock
jge
roll
adc
mov
repz
sub
mov
iret
push
sti
lds
push
dec
jmp
mov
sti
pop
stos
scas
out
push
sbb
aam
push
xor
mov
insb
adc
sub
into
into
cmpsl
cmp
fucomip
pop
mov
lcall
mov
int
dec
sbb
rol
lods
loope
mov
ja
and
in
das
adc
mov
jge
movsb
std
mov
jae
xchg
outsl
dec
sbb
icebp
je
iret
ja
jbe
iret
add
test
test
lds
shr
xchg
mov
loope
ds
cs
cmp
sbb
sbb
mov
in
dec
add
xchg
ficoml
mov
dec
and
int
mov
sub
mov
cmp
mov
in
add
push
test
xchg
adc
mov
repnz
inc
sub
mov
pop
adc
stc
test
test
cmp
int
sub
pop
xor
push
push
mov
pop
outsl
lahf
out
loop
inc
cmpsb
inc
inc
jl
sbb
or
lcall
orb
mov
addr16
push
out
adc
jecxz
adc
fnsave
or
sbb
push
jnp
sbb
in
push
movsb
dec
and
mov
push
jmp
aam
cld
test
inc
sbb
test
mov
push
xlat
mov
inc
stos
pop
out
mov
stc
push
mov
mov
jl
cmc
dec
fsubrl
enter
xchg
mov
mov
inc
mov
lods
xor
pop
jbe
cmp
testb
test
scas
adc
add
fsub
mov
xchg
push
scas
insl
aas
add
rcrb
pushf
daa
scas
aas
lret
fcompl
and
jge
pop
mov
mov
cmp
push
fisttpll
das
lods
sub
in
int
push
push
popf
cs
mov
bound
adc
push
lea
test
xchg
mov
daa
test
mov
stos
aas
and
lea
test
pop
stos
aad
dec
mov
sbb
add
loopne
add
push
and
add
stos
sub
sub
sar
xchg
in
xchg
movsl
adc
bound
jae
mov
inc
xor
dec
leave
cmp
mov
loop
mov
jge
sub
fsts
sub
sub
pop
cmp
lcall
cmpsb
cmpsb
leave
stc
add
and
int3
clc
sub
iret
jle
daa
lock
shl
mov
insl
rorb
and
mov
mov
mov
mov
pop
mov
lret
enter
inc
pop
xchg
xlat
xchg
enter
inc
pop
gs
mov
out
push
cmp
jl
inc
mov
dec
ja
clc
and
hlt
add
mov
in
aam
fstpl
dec
rcll
js
outsb
adc
nop
inc
cs
lods
and
inc
mov
or
adc
dec
leave
or
xor
fcmovb
add
cmp
add
add
xchg
mov
add
cmp
push
or
ret
cli
lcall
adc
outsb
fsubs
bnd
scas
add
test
in
out
mov
shl
sbb
sub
lcall
dec
daa
cld
sub
push
sahf
mov
push
popa
sar
mov
lods
mov
mov
cltd
lahf
mov
cli
lods
in
pop
jo
fsubr
mov
mov
push
or
stc
test
scas
jle
lods
test
jns
mov
pop
pop
and
das
je
jp
loop
lock
inc
ret
jp
pop
sbb
js
imul
jnp
fwait
bnd
fldenv
dec
adc
stos
cli
cld
int
out
jecxz
in
cmpsb
cmp
jns
mov
movsb
leave
inc
lea
rcl
mov
sbb
mov
aas
neg
mov
scas
pushl
clc
adc
mov
lea
xor
ltr
cwtl
hlt
adc
adc
mov
enter
inc
test
mov
xor
pusha
sub
cli
cld
inc
mov
out
xchg
arpl
arpl
xchg
xchg
movsb
inc
jne
and
and
movsl
or
xchg
clc
xchg
pop
call
and
xchg
loope
test
inc
add
js
pop
test
cmp
jno
jmp
xchg
aas
xchg
dec
shll
movsl
cmpsl
jnp
dec
rcrl
sub
adc
addr16
mov
pop
bound
dec
or
mov
jp
push
mov
pop
inc
lahf
mov
inc
dec
cmpsl
jecxz
and
movsl
ret
pop
and
rorl
shll
jg
ja
cs
leave
int3
in
mov
fnstcw
add
sbb
pop
sti
scas
imul
ja
pop
inc
scas
mov
aaa
pop
cwtl
orl
rcll
sub
in
lret
cmp
cltd
push
test
dec
loopne
xchg
shlb
mov
and
test
dec
jecxz
mov
lea
push
or
inc
push
mov
psrlq
xchg
pop
mov
cmp
lods
enter
mov
ja
cmpsb
sbb
gs
inc
inc
adc
iret
jb
add
data16
adc
push
shlb
add
into
lock
adc
aad
bound
fldpi
imul
cld
dec
nop
push
dec
pop
push
out
ss
pusha
call
movl
bound
dec
sbb
sarb
mov
insb
adc
je
movsb
fildl
cli
repz
or
jmpw
sbb
mov
mov
or
or
xchg
xchg
xchg
pop
cmp
sbbl
push
outsb
scas
dec
xchg
jg
gs
push
add
aas
or
adc
fistpl
sub
aam
ret
mov
or
push
pop
enter
scas
sbb
mov
sbb
sub
jge
andl
or
leave
mov
divl
sbb
jmp
sbb
ljmp
push
enter
inc
xchg
cmp
inc
cltd
xchg
mov
pop
mov
pop
push
push
jae
jmp
jp
adcb
adc
push
movsl
sub
mov
or
add
pushf
bound
inc
addr16
adc
pop
jecxz
mov
mov
scas
cmp
adc
dec
jns
loopew
lods
jmp
fs
int
mov
jge
push
lret
scas
pop
dec
jbe
push
sub
hlt
leave
mov
adc
adc
push
fcomps
and
and
sub
jmp
clc
push
scas
push
popf
les
and
cmpb
mov
nop
rclb
cmp
aaa
jo
mov
and
mov
xchg
lds
sub
mov
cwtl
and
cmpsl
xor
pop
add
mov
data16
inc
mov
jecxz
mov
cltd
lret
jo
xchg
shl
jmp
jp
jnp
loop
and
lds
pusha
lea
ret
test
and
xor
cmp
or
sbb
xchg
mov
test
jle
lcall
xchg
pushf
mov
mov
mov
xchg
jae
sub
fidivrl
jg
mov
push
sub
and
jle
aad
xchg
ret
iret
pop
adc
jp
bound
fldenv
stos
jns
push
popf
fisttpl
jmp
fistpl
ds
mov
mov
mov
orl
inc
adc
lret
mov
and
and
xor
and
aaa
lret
out
sub
mov
jle
xchg
xor
rolb
loopne
adc
out
ret
imulb
testl
outsl
xor
ror
ljmp
sti
adc
loope
ret
pop
lret
syscall
jmp
xchg
rcr
pop
adc
dec
insb
loope
mov
pop
pop
test
dec
shr
in
pop
fisttpl
adc
outsl
cmp
mov
orl
sbb
test
outsb
mov
ja
pop
mov
push
xchg
adcl
mov
cld
dec
testl
or
int
cmp
fisubl
pusha
push
lock
int3
ja
mov
push
sub
adc
arpl
xlat
cmp
jo
fsubs
push
mov
daa
fdivl
mov
push
bound
enter
adc
out
pop
rclb
mov
cli
sub
cmp
cmp
aas
sub
xchg
loop
adc
movsl
mov
bound
pop
xor
jge
sub
mov
ljmp
sub
jne
cmpsb
sub
into
cmpsb
xchg
mov
inc
imul
and
dec
rcrl
sbb
adc
popf
jae
add
mov
shlb
or
sarb
data16
aad
mov
mov
sbb
sub
push
mov
test
sbb
pop
fmul
clc
mov
cmp
in
push
mov
std
insb
insb
mov
sbbb
in
aad
call
lea
out
loop
or
mov
ret
in
lea
dec
xor
not
inc
dec
movsb
inc
les
jo
push
int3
inc
dec
and
dec
jmp
sbb
pop
xor
pop
mov
cmp
inc
lcall
movsb
push
dec
add
aad
test
sar
pop
xorb
pop
movsl
dec
fcomip
fstpt
pusha
push
jl
sub
popf
xor
shlb
xor
ja
mov
jg
in
sub
cltd
jne
gs
xchg
sub
or
popa
leave
jecxz
jb
mov
inc
into
test
dec
xor
push
mov
jmp
loope
insb
test
lods
xorl
test
aad
xchg
call
shl
push
adc
sbb
fwait
daa
push
dec
mov
lahf
rcll
movups
pop
ljmp
js
mov
push
jae
repnz
pop
and
pop
add
into
imul
lret
idivl
dec
fnstcw
xor
cs
inc
ja
pushf
fimull
in
xor
popf
aad
int
stc
lock
idivb
push
dec
aam
div
and
dec
movsl
cmp
sahf
mov
sbb
pop
push
or
roll
or
loope
orb
test
sub
stos
popf
sti
mov
aas
and
and
fdivl
std
in
in
lcall
adc
stos
shlb
push
pop
hlt
mov
out
insb
jb
sbb
inc
push
xor
mov
popa
punpckhwd
in
pop
dec
andl
loope
loop
in
iret
aas
addr16
mov
arpl
lahf
ret
cltd
dec
daa
xchg
pop
xchg
jne
rcr
scas
popf
sbb
das
adc
ja
xor
std
sbb
xor
ljmp
lret
pop
push
or
sbb
jp
in
jnp
stos
out
mov
sub
xor
cmp
mov
sub
fnstcw
inc
inc
or
sbb
or
pop
pop
xor
mov
insl
adc
insl
mov
xor
dec
push
lret
test
jle
test
mov
jge
mov
shll
lock
cmpsl
pop
inc
or
roll
and
xor
xor
aad
sbb
xchg
scas
roll
xchg
or
in
lods
dec
nop
cmc
inc
test
jl
lds
out
lret
mov
mov
sbb
or
ficompl
push
enter
imul
mov
cmp
orb
repz
arpl
shlb
mov
cmpl
je
decl
pop
mov
add
sub
sbb
add
sub
mov
xchg
sub
js
push
icebp
ret
fs
imul
fcomip
ficomps
aad
or
xchg
push
mov
int
popa
and
push
fidivrl
dec
jae
dec
and
adc
xor
sbb
xorl
rorl
adc
ret
dec
rcr
call
jmp
popa
pop
fmuls
mov
and
stos
enter
push
mov
fnstcw
pop
xchg
push
pop
inc
lahf
aas
imul
fildll
shll
xchg
cwtl
cmp
imul
mov
movsl
push
jns
pop
out
in
lods
sbb
sbb
stc
insl
or
cmp
repz
arpl
sbb
daa
xchg
mov
or
outsl
lds
popa
mov
inc
dec
loopne
ret
xor
adc
xchg
cli
data16
push
test
pop
test
pop
leave
push
sub
add
mov
jg
xchg
cmp
xor
fs
pop
inc
shrl
imul
pop
xor
cmpsl
pop
test
clc
icebp
dec
and
clc
cmp
adcb
mov
loope
aas
pop
push
jg
mov
cmpsl
lret
pop
jns
pop
addl
test
mov
xchg
insb
ret
popa
mov
and
sbb
jne
adc
or
mov
dec
xlat
add
and
inc
push
ljmp
mov
pop
adc
mov
gs
inc
jno
lods
push
sub
rcrb
in
push
test
jge
stos
dec
xchg
cmp
inc
sbb
movaps
repnz
pop
shrb
jecxz
subl
loope
mov
and
pop
decb
insl
dec
loop
inc
dec
jno
adc
xchg
lock
scas
insl
pop
cmpsb
pop
stos
out
jno,pn
insl
cmc
inc
adc
push
fwait
or
push
iret
imul
sub
jbe
cmp
sbb
mov
loop
les
pop
ret
mov
into
or
xchg
movsb
or
fimull
flds
add
jb
ljmp
add
mov
adc
push
scas
sar
cwtl
daa
pusha
cltd
and
in
data16
dec
scas
fcoml
test
dec
sbb
mov
jo
nop
cltd
repnz
addr16
pop
outsb
pop
dec
jl
pcmpgtd
xchg
adc
push
stos
das
ret
fsubs
rcr
push
xchg
lret
push
xchg
adc
out
fstpl
ljmp
jb
js
push
pushf
test
popa
cmp
dec
mov
or
inc
mov
push
push
push
subb
push
imul
mov
lea
sub
mov
sbb
cli
mov
mov
or
mov
mov
fcom
adc
jb
jecxz
and
loope
scas
mov
icebp
mov
pop
mov
xor
fidivrs
mov
mov
xchg
ljmp
cli
xchg
imul
mov
xchg
sbb
scas
mov
outsl
xchg
xor
cmc
mov
loop
scas
lock
sbb
ds
push
add
sbb
adc
ret
xor
test
incl
sub
mov
add
add
cld
repz
jo
in
sahf
jae
mov
out
jne
lds
rcrl
imul
fwait
das
pop
jbe
jecxz
arpl
sub
dec
fldl
rcrl
es
cli
jmp
leave
dec
mov
xor
sbb
jne
sbb
jle
test
dec
mov
stos
movsb
out
ja
std
gs
mov
dec
add
jb
movsl
dec
jmp
stc
stos
fldt
ss
imul
adc
or
fistpl
das
out
jp
jmp
sbb
sub
mov
add
pop
dec
ret
pop
adc
cmp
mov
jae
test
or
dec
xor
cld
jmp
scas
jne
insl
jmp
adc
inc
inc
cmp
scas
arpl
pop
lret
shll
sbb
xchg
jg
addr16
jecxz
adc
inc
rolb
pusha
pop
test
xor
ret
sar
adc
ret
or
lahf
movsb
mov
or
dec
ss
stos
and
pop
adc
es
add
push
cmp
or
incb
out
push
mov
cli
fisttps
daa
cwtl
into
push
cmp
movsb
cmpsl
and
movl
lods
aas
add
insb
push
sbb
test
jl
add
fdivl
inc
adc
hlt
or
pop
adc
into
adc
dec
arpl
aas
outsb
mov
mov
push
dec
mov
cmp
xor
add
lock
xchg
cmpsl
insb
pop
mov
hlt
arpl
leave
mov
dec
das
js
xchg
dec
lahf
sub
test
jmp
jge
jnp
insl
add
jecxz
sub
dec
pushf
cmpsl
fcomps
sahf
pop
insb
in
cmc
test
sbb
out
lret
xor
adc
inc
mov
loopne
bound
aaa
shlb
push
xchg
pop
movsl
or
clc
pop
pusha
hlt
or
or
cli
add
mov
cmc
xor
ds
outsl
mov
push
mulps
ds
fistl
push
jge
mov
pushf
lds
lret
sub
popf
iret
xor
add
or
jmp
mov
or
lcall
sbb
out
enter
mov
mov
dec
cmp
pop
js
aad
xchg
adc
cwtl
scas
inc
leave
ss
push
pop
sbb
movsl
repnz
mov
lret
xchg
push
dec
jecxz
lods
xor
cs
sahf
xchg
je
out
push
mov
frndint
sbb
jle
push
push
pop
ret
or
xor
cmp
jne
pop
pop
aam
inc
popf
or
gs
cwtl
push
pop
shrl
ja
or
mov
loop
js
cli
cmp
mov
xor
push
fisubl
jp
xchg
mov
mov
xor
mov
mov
and
pop
loope
sub
mov
push
decl
inc
fwait
pusha
jg
pop
mov
add
lock
xor
inc
je
mov
ret
outsb
jle
sahf
ret
sbb
xchg
into
push
jo
call
call
test
inc
ja
xchg
in
pop
sub
xchg
adc
addl
hlt
imul
stos
mov
xchg
adc
ljmp
scas
mov
push
jmp
dec
lods
outsl
bound
pop
fists
xor
inc
xchg
std
std
fs
aaa
movsl
xor
jns
cmp
add
or
adc
push
gs
scas
sub
movsl
sbbb
dec
mov
test
add
cli
jbe
sub
call
out
int
sbb
lahf
adc
cmp
lret
outsb
loope
or
mov
test
hlt
pushf
xor
popf
aam
sub
daa
jno
outsl
mov
cmc
shr
mov
or
repz
lret
or
rcrl
ja
mov
mov
sbb
sti
dec
rol
in
mov
mov
int3
stos
imul
push
cmpsb
mov
das
lret
mov
inc
xchg
mov
xchg
pop
aas
push
or
and
fidivrs
stos
adc
sbb
inc
iret
data16
ljmp
pause
scas
add
xchg
xor
pop
les
lock
mov
cmp
jmp
xor
rcrl
dec
mov
ja
insl
pop
test
aaa
mov
mov
jl
jecxz
loopne
loop
sbb
mov
adcb
push
inc
int
nop
lahf
inc
arpl
cltd
sbb
and
iret
ljmp
jmp
cwtl
cmp
ja
add
ret
push
mov
cmp
leave
or
int
sbb
popf
sub
pop
fnstenv
push
xchg
testb
fwait
xor
mov
push
fnstcw
ja
xlat
shlb
cmp
push
add
mov
fnstcw
jns
sub
mov
inc
dec
das
dec
mov
lcall
scas
out
dec
sub
pop
cmc
sub
mov
mov
pop
dec
inc
cmc
and
sbb
xchg
sar
pop
mov
insb
aad
fiadds
xchg
push
or
roll
dec
enter
xchg
xor
shlb
mov
sub
pushf
lcall
je
adc
sbb
jo
stos
ret
loope
mov
aad
xchg
test
xor
jne
xor
fwait
add
xchg
fs
jmp
outsb
iret
mov
insl
cmp
hlt
ljmp
sti
frstor
jbe
ret
xorb
push
push
stc
xor
out
sbb
mov
in
loope
pusha
jb
adc
push
int
mov
loope
out
cwtl
lret
cli
stc
fmul
xchg
mov
sbb
test
sub
mov
lea
pop
mov
stos
sub
repz
or
mov
inc
jge
push
sbb
test
pop
rcrl
cmpsl
and
dec
jl
les
dec
daa
mov
mov
ja
mov
ret
fwait
push
sub
fidivs
lock
sbb
push
popa
cmp
cmp
fnstsw
and
es
pop
cmp
push
pop
or
lahf
pop
test
xlat
iret
mov
xchg
xor
mov
arpl
push
xor
inc
repz
xchg
sub
or
adc
mov
fcoml
pop
xchg
sub
cmpsb
ficoms
cmp
hlt
out
enter
jns
adc
push
inc
xchg
mov
inc
in
sub
inc
gs
dec
cmp
mov
fisubl
pop
mov
bound
divl
xor
jmp
fstps
or
push
cli
push
loope
mov
jge,pt
dec
loop
test
out
xor
psraw
jne
rcrl
jb
aas
or
inc
pop
sti
test
push
sub
mov
das
add
jne
mov
mov
jg
pop
pop
dec
cltd
inc
clc
push
jg
jo
ret
cmp
cmpsl
inc
inc
xchg
or
cltd
cmpsb
adcb
xor
jecxz
stos
repz
cmp
cmp
cmpsl
ret
mov
dec
insl
or
in
int3
inc
lret
movsb
fcompl
mov
and
es
xchg
push
xchg
mov
arpl
adc
fadds
push
jmp
mov
repz
cvtps2pi
pop
inc
lea
or
jne
out
xchg
dec
cld
dec
push
or
cmpsb
shrb
bound
push
rcrb
jne
jp
clc
neg
stc
shll
push
sub
insl
xstore-rng
cmpsl
stos
xchg
jns
in
mov
dec
xlat
cmpsl
outsl
movsl
ret
sti
or
cli
sbb
mov
mov
lret
add
pop
addr16
jae
lret
stc
adc
sbb
ret
push
jmp
cmp
pop
insl
popa
sbb
sbb
mov
mov
and
add
xchg
cli
mov
mov
sub
xchg
xchg
add
and
mov
push
test
xchg
mov
insb
wrmsr
xor
cmp
in
cmp
push
int
xor
addl
dec
xor
push
lods
dec
xorb
jle
daa
sub
and
ds
mov
enter
xchg
out
xor
mov
inc
out
sbb
sti
shl
ds
mov
lcall
shlb
mov
add
call
scas
dec
and
mov
aad
xor
scas
push
push
lret
sti
scas
ficoml
mov
ds
jg
fisttpl
or
and
sbb
push
push
cmc
jl
cmp
imul
dec
rorl
lods
sub
int3
loope
add
rcll
mov
lret
mov
mov
in
push
ljmp
mov
push
or
mov
dec
negl
test
pop
sti
mov
insb
aad
dec
push
imul
add
subb
pop
and
xor
pop
inc
cmpb
inc
les
adc
in
in
push
mov
xchg
push
inc
pop
jecxz,pn
pop
dec
aas
mov
xor
pop
arpl
inc
shlb
cwtl
mov
jb
mov
iret
test
hlt
rcrl
test
daa
xchg
xchg
jbe
mov
sti
pop
mov
mov
mov
xchg
movsl
jne
andb
fmul
mov
ror
icebp
ss
sub
lcall
aas
push
push
sub
pop
cltd
push
shrb
cltd
cmp
dec
ficomps
and
mov
scas
jl
fisttpll
idiv
or
jp
inc
sbb
lea
add
gs
sub
arpl
lret
icebp
test
rorl
sub
pop
addl
jnp
or
push
dec
xor
loop
pop
in
jmp
mov
fcmovu
dec
push
in
adc
mov
lea
lds
mov
mov
mov
in
dec
iret
popf
stc
iret
xlat
push
and
repnz
nop
mov
jnp
jnp
add
ret
pop
rorl
scas
mov
or
adc
fisubrl
cs
imul
sbb
mov
popw
adc
xchg
scas
mov
push
clc
popf
ds
jne
mov
fwait
inc
mulb
lret
or
test
jns
test
or
xchg
dec
aaa
cmp
test
shld
push
pop
sahf
mov
sbb
jecxz
scas
cmp
inc
cmp
pop
mov
jg,pn
fisubs
push
mov
mov
in
int
add
and
ja
popf
jmp
insl
outsb
lods
int
sbb
and
pop
inc
js
fs
dec
xor
pop
stos
mov
inc
or
dec
insb
arpl
ss
or
sub
xchg
rorb
jbe
jge
jbe
push
fisubs
push
lds
sti
and
sbb
sbb
mov
push
jmp
shl
mov
inc
sub
or
or
push
mov
xchg
and
fcmovnu
cmc
xor
pusha
cmp
mov
inc
sbb
pop
sub
cs
out
pop
push
outsl
les
and
dec
mov
inc
xor
sub
lock
daa
std
arpl
dec
dec
out
inc
adc
pop
jl
test
cmp
jle
loop
push
xor
dec
mov
pop
out
adc
and
mov
int3
mov
std
gs
cltd
in
cld
jecxz
lret
call
stos
in
sbb
xor
sub
xor
push
pop
cmp
mov
xchg
out
add
int3
xchg
std
mov
xchg
mov
push
fwait
push
jnp
add
inc
mov
minps
cmp
adc
into
jae
jmp
pop
stos
push
xchg
mov
enter
mov
adc
insb
gs
push
aas
out
xor
leave
and
imul
cwtl
pop
rclb
cmp
shrb
orb
mov
mov
in
mov
fdivl
cmp
sbb
in
int
add
jb
movb
mov
and
cs
insl
movsb
mov
mov
loopne
push
inc
add
lods
in
icebp
movsl
sub
call
inc
dec
and
pop
inc
xor
xchg
cmp
jo
xchg
sub
sub
mov
in
loope
repnz
mov
pop
sbb
daa
dec
outsl
scas
or
mov
orb
sbb
xchg
cmc
xchg
idiv
pop
pop
and
pop
or
aam
pop
push
xchg
jecxz
adc
loop
mov
jnp
sbb
add
out
mov
xor
or
mov
dec
add
cwtl
jb
sub
jo
call
loop
test
mov
sub
dec
popa
pop
add
into
jmp
sub
clc
iret
lcall
pusha
cmp
in
loop
mov
rcll
dec
mov
jmp
mov
shlb
in
or
outsb
mov
gs
add
ds
aaa
nop
inc
jle
jp
lcall
xchg
rcll
ret
fisubl
add
mov
lret
mov
ret
sbb
mov
sub
dec
mov
jo
xor
mov
rorb
aas
xor
cltd
fisttps
push
xor
adc
mov
int3
cwtl
lock
out
movsb
cmp
inc
xor
lods
es
repz
xor
cmp
mov
jp
mov
mov
test
fisubrs
pop
loopne
fisttpll
jmp
inc
adc
mov
push
repnz
fcoms
out
aam
push
scas
test
add
xor
sub
or
cmpsb
jl
mov
inc
rorl
mov
inc
xchg
sbb
fwait
movsl
sbbb
dec
sub
iret
lahf
jmp
jecxz
mov
xchg
clc
fwait
repz
mov
out
test
daa
push
in
push
push
icebp
push
dec
cwtl
imul
pop
cmc
cwtl
and
jmp
addb
mov
loopne
xchg
mov
pop
adc
fs
in
pop
xlat
mov
push
clc
sarl
stos
sbb
jae
sbb
in
stc
test
and
mov
stos
popl
dec
sub
push
xlat
popf
xchg
or
xchg
pop
push
in
adc
jb
mov
test
cmp
test
clc
jp
das
jecxz
push
fbstp
sub
aam
xor
mov
cld
dec
les
inc
or
xor
pushaw
jo
fsubr
addl
mov
in
cld
or
mov
or
stc
dec
dec
pop
mov
push
mov
jge
push
adc
mov
xchg
inc
sti
out
inc
inc
in
jns
cmpsl
adc
inc
sarb
sti
clc
ror
icebp
mov
subl
into
es
cmp
inc
ret
rclb
xchg
ret
sub
mov
pop
call
xchg
inc
and
out
inc
pandn
jo
hlt
int
rcll
mov
jp
push
push
or
dec
sahf
xchg
lret
mov
xorl
les
and
lea
sbb
push
imul
loop
push
push
jne
stos
ss
push
xchg
iret
fucomp
mov
mov
ret
jns
xor
push
int
jecxz
push
xchg
pop
mov
jg
pop
push
jb
jns
sbb
lret
push
nop
orb
add
andb
mov
xchg
in
lret
cmp
scas
xor
aaa
fs
adc
fisttpll
mov
xchg
cmp
dec
or
in
cmp
fildl
inc
xchg
jge
mov
jbe
lret
xor
daa
es
jnp
cmc
popa
shlb
cmp
cmpl
push
rcr
enter
inc
mov
push
jmp
sub
mov
inc
cmc
xchg
pop
inc
popl
cmpsl
xlat
cltd
out
mov
or
mov
inc
jecxz
sbb
xor
mov
inc
outsl
test
and
xor
jl
push
fldcw
and
and
testb
jns
xor
or
repz
xchg
pop
cmp
xchg
and
sahf
add
xchg
shlb
mov
pop
xchg
xchg
stos
icebp
or
fdivl
or
and
pop
in
jne
or
fcompl
pop
dec
sub
adc
xor
add
mov
push
lods
jbe
jle
int3
pushf
sub
adc
push
inc
bound
push
mov
dec
je
loopne
dec
out
cmp
cmpb
lahf
clc
in
cmp
popf
in
cmp
inc
outsb
addr16
les
or
loope
push
add
adc
repz
cmp
cwtl
push
sub
mov
pushf
pop
popf
add
mov
add
and
lea
arpl
mov
test
ret
push
jne
loopne
data16
leave
mov
into
sbb
lds
fsubrs
pop
out
sbb
hlt
in
mov
mov
jne
shlb
adc
add
jecxz
les
jg
lret
inc
iret
sbb
vaddpd
or
cmp
mov
out
fsubl
fsubrp
sbb
lock
ret
lret
adc
or
dec
arpl
int3
js
xor
imul
js
sbb
lods
sbb
push
movsl
push
lds
out
cmp
aaa
repz
sbb
push
das
add
cmp
cmp
mov
or
fsub
ret
pop
in
and
in
sub
adc
mov
mov
pop
xor
rcl
addr16
ret
xor
cmp
loop
dec
mov
movsb
jl
push
sbb
jge
mov
fiadds
adc
xor
pop
or
mov
dec
sub
addr16
out
dec
xor
cmp
adc
dec
repz
add
fmul
sub
mull
xchg
insb
mov
and
pop
loop
cld
mov
xchg
cmp
jne
mov
or
xchg
fimuls
fidivl
shl
sahf
stc
sbb
shrl
subb
ret
icebp
cmp
fwait
lahf
fwait
xchg
push
cmc
out
nop
cmpsl
xlat
jmp
cmc
xchg
fisttps
insb
dec
movsb
mov
inc
mov
jmp
inc
pop
ljmp
aam
jb
jmp
aaa
jbe
pusha
dec
int3
nop
lahf
jns
push
test
inc
mov
sbb
jl
int
gs
mov
lret
pop
stos
jnp
sbb
cld
aam
sub
cltd
sbb
sbb
clc
jmp
pop
pop
push
and
call
ss
cmp
mov
test
xchg
outsb
test
mov
inc
orl
jno
nop
outsl
icebp
mov
addb
and
imul
xor
iret
and
sub
mov
pop
repz
pusha
add
in
out
push
sub
adc
push
xchg
cmc
cmp
nop
dec
mov
and
pusha
pop
lcall
ret
xor
mov
add
in
fwait
ljmp
lret
lahf
sbb
test
adc
add
inc
mov
out
mov
sbb
fs
push
fimull
lret
ss
nop
test
outsb
inc
sub
mov
pusha
sbb
add
imul
hlt
scas
and
sub
cmpsl
push
xchg
repz
stos
push
icebp
hlt
out
push
jbe
add
int
daa
mov
sbb
stc
mov
cmpsb
lock
xchg
push
lahf
jecxz
out
aas
adc
push
std
or
jle
in
dec
pop
inc
popf
pop
ja
dec
or
mov
dec
int
loopne
push
pop
push
jle
es
adc
push
add
push
push
clc
nop
adc
xchg
inc
fsubr
sub
test
popa
out
and
mov
ja
xchg
test
leave
xchg
xor
aam
fisttps
out
das
hlt
jecxz
bound
adc
mov
mov
mov
sahf
xorl
xchg
cltd
mov
roll
pop
inc
fwait
sub
out
push
pushf
dec
xchg
pop
loop
push
xchg
add
fsts
push
or
mov
push
loopne
push
cmpsb
jmp
lret
int
pop
lea
mov
xlat
mov
outsb
lcall
stc
sbb
push
dec
mov
nop
push
int
ja
jl
mov
loopne
movsl
stc
in
xor
xor
out
push
xor
lcall
sbb
je
jl
test
xchg
jo
adcl
scas
fidivs
cld
pop
jmp
scas
adc
sbb
xlat
loopne
jae
jecxz
in
arpl
pop
aaa
mov
jae
int3
push
imul
jb
jp
pop
dec
cli
mov
adc
xchg
push
sub
in
xlat
insb
cmpb
or
push
out
pop
shll
lds
inc
daa
push
mov
mov
add
dec
jne
leave
sbb
out
jp
xchg
clc
enter
add
pop
sbb
or
test
sub
xchg
ljmp
push
push
mov
jne
hlt
pop
nop
es
pop
or
lods
cmp
push
sbbl
repnz
sbbb
pop
or
push
mov
and
in
mov
mov
insb
sbb
lock
je
sti
loope
in
scas
mov
xlat
inc
in
xchg
aam
je
mov
imul
adc
popa
enter
sub
cmpsl
fstl
fistpll
sub
jg
sbb
xor
cltd
push
mov
lods
mov
mov
cmp
mov
bndstx
or
jecxz
icebp
xchg
xchg
test
sbb
cmp
and
icebp
arpl
mov
sub
add
mov
or
sbbl
cmp
cmp
in
bound
cmpsl
movsb
or
movsl
test
fdivl
es
mov
sbb
imul
mov
and
cmp
push
mov
push
rcrl
or
scas
icebp
imul
cmc
pop
pop
jle
ret
inc
leave
xchg
ret
scas
adc
iret
push
faddp
daa
lods
jae
xor
mov
cltd
cmpsb
push
stos
fs
repz
and
mov
push
jno
add
jbe
mov
popa
xchg
pop
in
add
flds
aam
mov
lock
jl
call
movsl
orl
mov
fbld
clc
aam
pop
outsl
cltd
sub
dec
inc
inc
hlt
rol
daa
sub
mov
pop
pop
dec
rorb
testb
mov
adc
ficomps
mov
out
add
or
dec
mov
shlb
or
icebp
dec
or
int
insl
inc
filds
shrl
insb
xor
or
inc
cmc
call
dec
cwtl
add
out
xchg
or
sbb
or
adc
insb
in
sub
sbb
movsl
inc
adc
mov
call
hlt
and
lcall
jp
or
jmp
xchg
inc
ds
dec
test
lods
adc
and
cmp
int
es
mov
and
dec
and
insl
inc
push
into
fbld
aas
xchg
je
or
adc
mov
inc
call
mov
push
adc
rorl
xchg
stos
fscale
out
sbb
or
xchg
outsl
xor
and
jl
stc
mov
sub
out
out
or
arpl
mov
inc
and
push
adc
sub
movsl
lods
pusha
scas
sbb
cltd
xor
dec
pop
mov
punpckhbw
adc
lcall
or
pop
cmp
xorb
shrl
sbb
push
loop
xchg
xor
dec
repnz
push
sbb
mov
jae
fisttpl
push
popf
das
pop
popa
pusha
push
push
popf
mov
mov
stc
lea
and
and
pop
lds
jno
mov
xchg
sub
in
xchg
or
jmp
popl
lea
jo
inc
pop
xchg
mov
inc
mov
jo
inc
mov
dec
sbb
sub
sub
sbb
pushf
fisttpl
movsb
push
xor
mov
mov
inc
push
jecxz
xchg
mov
add
inc
mov
pop
outsl
sti
mov
rorb
mov
jecxz
insl
xchg
adc
daa
pop
fcmovnu
aaa
xchg
mov
dec
xor
pop
push
mov
js
xlat
pop
sbb
adc
pop
das
push
sub
pushf
cli
fs
nop
cli
mov
cmp
into
cmp
inc
pusha
xor
lcall
mov
or
int
sbb
or
lods
or
cwtl
call
les
xchg
call
aam
jmp
cmp
adc
gs
loop
roll
ja
ss
push
or
xchg
aad
lds
push
cmp
sahf
shlb
pop
push
test
xchg
jnp
loopne
sarb
or
mov
jecxz
jecxz
sub
add
add
stos
jmp
push
mov
mov
int3
adc
fwait
push
xor
int
dec
jmp
push
lret
adc
jecxz
cwtl
sub
mov
dec
repz
call
mov
std
addr16
imul
outsl
js
push
and
dec
or
xlat
call
mov
dec
icebp
addr16
aam
rclb
ja
hlt
inc
xchg
add
ret
pushf
xchg
out
pusha
or
push
rolb
mov
aaa
pushl
cmp
xorl
lods
sbbl
popa
cltd
adc
aad
cltd
daa
cmp
adc
and
cmp
mov
push
mov
test
xchg
fcomps
imul
lds
mov
stos
call
cwtl
sub
stc
push
push
sbb
sbb
cmpl
push
fcmovnb
add
xor
imul
incb
xor
dec
lcall
scas
push
adcl
rcrb
shll
mov
testl
xchg
or
rcr
rclb
jecxz
mov
dec
push
mov
call
and
mov
xor
xchg
or
pop
jge
lods
lret
popf
or
mov
scas
leave
xchg
xor
cmc
or
dec
fisttpll
fdivs
in
push
cld
add
dec
jmp
xchg
in
sbb
test
and
aas
dec
lea
or
mov
adc
ret
les
sub
movsl
add
xor
in
arpl
xor
mov
sub
push
add
adc
dec
xor
imul
lods
adc
cs
nop
rol
mov
loop
gs
fdivs
jg
nop
inc
mov
jbe
mov
push
dec
mov
pusha
stos
push
xchg
sbbl
mov
sar
and
cmp
xchg
dec
sbb
sahf
cmc
inc
inc
dec
icebp
sub
xor
inc
loop
sub
mov
xor
pop
jmp
dec
xchg
xchg
pop
jo,pn
fsubrs
in
xor
inc
or
cltd
xlat
inc
sub
aad
adc
jge
aaa
lods
mov
adc
mov
or
lcall
mov
or
adc
loopne
pop
mov
shlb
jnp
pop
movsl
mov
test
mov
push
xchg
out
arpl
mov
in
push
test
xor
jne
lret
aam
push
mov
lcall
push
mov
nop
jle
mov
ljmp
xorb
mov
and
data16
enter
jp
sub
divl
test
add
mov
aam
negl
jbe
movsb
inc
xchg
mov
cmp
mov
lcall
sbb
sbb
arpl
mov
pop
pushf
mov
sub
adc
mov
sub
int
cmp
in
not
out
cmp
xor
mov
or
and
xlat
or
pop
pop
or
clc
jne
outsl
stc
lret
gs
xchg
cltd
stc
and
inc
push
and
xchg
push
jnp
dec
push
ds
sbb
xor
add
repz
dec
add
adc
nop
fiaddl
lcall
push
test
jecxz
pop
out
aas
cmp
mov
movsb
add
jbe
scas
sub
fincstp
fcoms
xchg
js
push
js
cmc
dec
lahf
xchg
out
jmp
xor
data16
ret
dec
lcall
push
add
mov
xchg
jle
in
adc
fmul
int3
sbb
cli
lea
ret
add
inc
or
fstps
fsubrs
sub
pop
leave
ss
pop
mov
jno
dec
and
insb
add
jmp
push
push
cmp
dec
out
jecxz
dec
fiaddl
neg
pop
enter
pop
pusha
pop
sbb
xchg
aas
movsl
inc
outsl
mov
mov
or
ljmp
stos
fwait
mov
nop
or
int3
mov
ja
popa
or
into
gs
lock
adc
jne
and
rcr
jle
hlt
xchg
test
out
popa
mov
sahf
test
outsl
cmp
js
xlat
push
int
hlt
xor
ret
cmp
pop
ja
push
scas
aad
iret
mov
fs
xor
or
ss
in
add
pop
imul
adc
jae
addr16
fists
xchg
pop
iret
orl
mov
lods
cmc
lds
sahf
push
inc
shlb
ret
xor
dec
xor
dec
cmp
sysenter
in
mov
and
pop
add
jmp
leave
fsubrl
mov
lret
cmp
lret
std
int
stc
xchg
dec
jge
out
lea
std
jno
test
push
xchg
enter
fsubs
fninit
jle
inc
xor
and
repnz
mov
lret
call
not
out
dec
test
repnz
stos
bound
xor
pop
movsl
arpl
subb
adc
sub
or
xor
inc
inc
push
mov
jl
arpl
jae
adc
inc
jbe
pop
out
add
jl
divl
or
in
jp
in
adc
adc
in
inc
test
int
and
pop
imul
mov
sbb
sub
push
mov
dec
push
push
mov
hlt
dec
mov
mov
pushf
cmp
sub
mov
adc
mov
icebp
pusha
fcom
lods
and
jl
cmp
js
sbb
mov
cmp
imul
sub
ds
leave
inc
test
add
jge
in
mov
jle
jb
and
push
ss
mov
mov
push
sub
mov
cmp
das
xor
cwtl
or
add
enter
xchg
ret
lods
or
subb
jge
mov
dec
cld
cwtl
pop
pop
pushf
addr16
jecxz
xor
add
and
outsl
sahf
movsb
fcmovu
inc
adc
dec
mov
mov
loop
bound
subl
and
cwtl
decl
adc
mov
or
or
in
out
sbb
ret
mov
push
ret
stc
mov
push
add
test
pop
lea
jmp
popf
pushf
push
or
cli
nop
inc
jp
add
into
icebp
inc
pop
pop
mov
aam
pop
xor
in
das
lret
sub
xchg
aas
popa
sti
xor
pop
mov
mov
push
jae
mov
xor
mov
cltd
or
aaa
pop
push
push
hlt
popa
xor
stos
xor
cmpsl
jo
dec
sub
out
lret
scas
adc
inc
cmpsl
mov
fdivrs
pop
in
pushf
movsl
or
inc
push
and
dec
and
mov
cmp
loop
add
pushf
pop
imul
jge
mov
xor
sub
cmpsl
ret
movsb
dec
dec
xlat
cmc
push
aaa
and
pop
pop
js
push
iret
fmuls
mulb
add
fsubrs
push
ficompl
xorb
je
icebp
addr16
enter
dec
cld
or
xor
iret
jl
add
in
jnp
xchg
test
pop
jnp
jo
xor
les
outsb
out
faddl
push
ljmp
push
lret
cmpsb
fwait
and
sbb
sbb
sbb
push
scas
push
mov
test
or
movsl
add
or
stos
popa
sub
push
jg
int
push
mov
dec
xor
or
inc
lahf
adc
sar
jmp
push
and
mov
out
pop
push
lds
aam
cmp
cmpb
push
cmp
fidivs
cmp
xor
pop
push
or
mov
gs
jae
in
sbb
in
js
push
enter
loop
jge
and
jg
sbb
scas
rcll
xor
repnz
repz
cmpsb
lcall
adc
jo
dec
adc
jne
dec
mov
cld
fwait
les
mov
stc
incl
xchg
ror
pushf
cmc
stos
not
cmpsb
add
or
add
shll
pushf
repz
mov
and
jae
jae
pop
jae
rcrl
push
int3
sub
sub
lret
adc
pop
sbb
rolb
xchg
push
dec
mov
fmuls
jecxz
outsl
and
insb
xor
xor
jnp
or
scas
outsb
pop
fidivl
test
aad
ja
xor
shl
add
sub
addr16
inc
cmc
or
lcall
add
mov
xor
cmp
dec
ficoml
xchg
jbe
fs
and
stc
jae
and
vmaxpd
jge
sbbl
pop
test
pop
jg
jecxz
ss
cmp
mov
cmp
mov
push
pop
clc
jno
mov
mov
stc
push
fwait
jl
mov
das
push
cmc
cs
mov
stos
cwtl
js
xor
ret
call
mov
cmp
jae
cltd
fs
js
stos
pop
movl
scas
setle
or
and
pop
out
add
push
clc
sub
orl
add
adc
ret
xor
scas
loopne
loope
mov
push
mov
add
add
mov
sbb
or
push
add
and
pop
in
or
pusha
xchg
sub
stos
ja
or
inc
lods
xchg
jle
inc
and
mov
sahf
push
je
cmpsl
fdivs
mov
push
out
cs
dec
push
push
add
shlb
sahf
repnz
and
je
lods
popa
ret
xlat
out
sbb
stos
lret
clc
scas
ficompl
mov
add
jge
add
push
push
aam
add
mov
mov
inc
cmpsl
lcall
pop
xor
xlat
mov
adc
cmpsb
pusha
out
rolb
mov
cmp
or
stos
enter
pop
pop
mov
loopne
xchg
test
ja
mov
dec
inc
inc
cmp
cltd
ja
jne
or
sar
add
es
and
sbb
rolb
leave
pop
xlat
lret
or
or
pop
je
mov
imul
add
popf
add
popf
aas
xor
and
jmp
mov
jno
mov
jmp
adc
loop
mov
cmp
pop
pop
mov
cmp
stos
jge
out
jl
dec
sub
mov
popa
pop
repz
xor
and
fidivrs
stos
out
cmpsl
stos
dec
mov
jmp
jg
mov
adc
shrb
aam
mov
jns
idiv
and
jecxz
into
scas
shlb
lods
sub
stos
sub
or
cmp
push
pop
lea
push
inc
jae
insb
sub
pop
and
cmp
dec
fwait
out
loopne
dec
ds
mov
inc
push
popf
mov
out
and
dec
cmc
push
jo
inc
stos
shlb
aad
xchg
push
jge
sbb
std
loop
sbb
and
lahf
clc
dec
or
idivb
push
adc
jo
pop
xchg
aas
xchg
pop
aam
out
ja
mov
cwtl
cmpsb
sahf
in
out
and
ror
enterw
es
fs
lret
xlat
stc
aam
push
add
in
fucomi
cmpsl
cwtl
pop
mov
addr16
leave
insb
cmpsl
mov
fsts
out
push
sarl
idivl
cmp
cmp
fwait
test
sub
loope
test
mov
mov
enter
jmp
pop
stc
push
les
bound
popf
mov
lret
xchg
pop
enter
sbb
mov
je
sub
sti
jecxz
mov
test
pop
inc
xchg
cmpsb
mov
dec
or
btl
xor
jae
jl
mov
fcoml
push
push
add
cs
in
xor
xor
rcl
movsb
push
pushf
icebp
call
cltd
int
loope
mov
cmp
dec
inc
push
pop
xchg
out
mov
sub
dec
push
in
and
mov
adc
test
mov
pop
lcall
je
movsb
pop
adc
ljmp
testl
adc
adc
sub
mov
cmp
push
das
call
pop
ret
cmp
cwtl
jge
push
inc
mov
je
jb
ror
inc
push
mov
and
orl
leave
add
add
out
lret
daa
pop
ret
pop
add
add
or
xchg
mov
xchg
adc
aas
lahf
xchg
and
ja
out
orb
xor
test
pushf
cmp
xor
clc
xor
sbb
mov
inc
mov
cmp
add
cld
sub
insb
add
pop
add
fisubrl
sahf
push
gs
mov
pop
cmp
pop
cmp
test
pusha
lret
loop
test
lret
mov
pop
movsl
arpl
cwtl
xchg
sub
mov
and
divb
jnp
pop
add
jbe
stc
cltd
xor
das
popa
cmp
add
cmp
push
ror
mov
enter
shll
jecxz
mov
fsubrp
or
jo
stos
adc
insl
leave
sub
or
fildll
in
mov
add
cmpsl
cmp
hlt
hlt
loop
push
xor
test
sarb
ret
std
mov
sbb
jecxz
jnp
outsb
sub
pop
bound
aaa
pusha
ret
insb
jo
stos
in
add
mov
add
jmp
out
sub
xchg
pop
inc
mov
mov
fidivrs
mov
repz
lret
push
xchg
clc
frstor
dec
cmpl
xor
bound
inc
repnz
or
in
test
or
dec
in
test
push
push
cltd
leave
shll
jbe
mov
je
test
jg
ficoml
push
test
push
inc
jmp
repz
and
loope
sub
mov
mov
mov
imulb
lock
insl
shlb
fimull
push
xchg
xchg
lret
mov
add
mov
hlt
and
ret
push
insb
mov
pop
scas
cmp
mov
add
sbb
xchg
stc
mov
shrl
mov
cmp
push
dec
xor
cmpsl
mov
dec
xchg
add
push
cmp
cltd
out
add
sbb
jp
stos
pop
sub
xchg
or
mov
aaa
mov
mov
shl
push
mov
sub
dec
inc
andl
xchg
popf
stos
push
push
or
mov
scas
daa
sub
jg
test
data16
gs
shll
pop
cmpsb
rorb
pop
andl
std
add
sub
cmp
sub
mov
sarl
outsb
jg
or
shll
mov
xor
mov
sub
enter
cs
inc
inc
jl
mov
jo
es
jb
addr16
xor
lea
insl
cmpsl
xchg
rcrl
add
repz
sahf
mov
mov
xchg
sbb
out
xchg
inc
fsubs
pop
test
loopne
sbb
mov
xor
movsb
mov
repnz
jb
mov
add
pop
xorl
rorl
inc
mov
fmull
inc
add
mov
sbb
xchg
rcll
imul
sarl
sbb
js
mov
lahf
inc
push
lret
jge
jbe
in
lret
jmp
sbb
popf
mov
repz
leave
mov
jno
xchg
pop
lcall
stc
in
invd
mov
ljmp
mov
repz
in
sub
push
inc
int
mov
pop
mov
cmp
pop
movsb
lea
pop
outsb
test
test
cmp
mov
mov
addl
jge
jp
push
imul
mov
pop
das
out
pop
shl
test
pop
cmp
daa
dec
push
pop
stc
sub
ret
push
imul
mov
test
js
cmpsb
mov
xchg
aad
test
cmp
mov
push
in
push
in
mov
mov
adc
je
das
adc
outsl
lods
lods
jl
jecxz
pop
inc
sarb
aaa
inc
cmp
pop
xor
out
push
aas
mov
pop
and
out
test
inc
imul
call
xor
push
shrl
dec
lock
push
fcmovne
flds
dec
sti
pop
decl
inc
dec
xchg
movsl
mov
ret
and
xor
test
shlb
fistps
xchg
stos
fmuls
leave
hlt
fcomps
stos
dec
xchg
cli
cmpsl
cmp
int
sbb
push
xchg
lds
mov
jno
fisubrl
add
xor
cwtl
adc
mov
push
mov
popa
imul
incl
nop
into
addb
sbb
xchg
push
and
push
ja
lea
jb
xor
lret
repz
enterw
mov
test
js
cmp
test
inc
jle
jg
jmp
mov
out
push
aad
inc
out
jo
sbb
add
dec
push
div
dec
sub
clc
mov
imul
aaa
out
inc
pusha
mov
xor
adc
bound
leave
lret
or
or
mov
je
mov
push
cmpsb
sbb
push
adcl
pop
xchg
ja
loopne
shll
mov
sub
sub
enter
sub
pop
int
pop
cmp
or
lahf
movsb
sub
cmp
or
cli
aad
and
ror
testb
imul
xchg
enter
test
scas
dec
cmp
pop
es
lret
stc
test
imul
in
sti
mov
push
push
jns
mov
xchg
mov
cmpsb
cmp
push
vmwrite
or
sar
pop
xor
adc
out
dec
rcrw
pop
mov
dec
pop
rorb
out
jl
addr16
in
sbb
icebp
out
cmpb
enter
popa
sbb
lcall
dec
gs
jmp
jmp
loop
mov
xchg
sbb
sub
inc
ficompl
sub
shrb
ret
aas
rcrl
popa
fildll
push
loop
scas
mov
das
orl
or
shl
out
xchg
push
pop
or
or
push
cmpsl
cmpsl
popf
int
scas
pop
push
aas
mov
insl
dec
inc
sub
nop
mov
push
xchg
les
cltd
sub
shll
jbe
sar
lahf
xlat
in
fsubrp
pop
xchg
cmpsl
ljmp
leave
pop
pop
pop
cld
jmp
imul
dec
insb
aas
mov
push
add
adc
daa
inc
stos
sti
imul
mov
push
push
scas
push
gs
xchg
inc
xchg
in
orb
stos
mov
les
mov
xchg
xchg
negb
add
mov
pop
jae
push
int3
xor
mov
push
lret
into
add
fadd
jns
mov
mov
std
and
test
dec
out
jp
push
mov
mov
icebp
ljmp
and
xlat
pop
xchg
pop
in
lret
fimuls
decl
shlb
scas
out
add
and
cmp
out
fildl
fidivrs
mov
and
jge
sbb
adcb
xor
adc
ret
insb
aaa
mov
mov
xlat
addr16
lods
ja
dec
andl
arpl
outsb
and
xchg
inc
xor
inc
add
shll
pusha
pop
mov
mov
cmpb
or
test
and
lcall
jg
dec
cmpsb
sub
jb
arpl
jae
call
xorl
ljmp
loopne
mov
jle
out
sub
jne
repnz
or
inc
repz
lods
aas
fdivs
repz
inc
mov
cmp
mov
faddl
inc
sbb
lods
lea
cwtl
xchg
addl
inc
iret
pop
and
in
cmp
mov
adc
out
in
rcr
fisubrs
adc
cmp
and
push
pusha
insl
cmpl
mov
push
fldcw
fistl
inc
jge
jecxz
fwait
sahf
sub
ss
push
cmp
aaa
adc
lret
xchg
cmp
daa
inc
inc
sbb
jle
and
cwtl
or
mov
adc
sbb
fwait
mov
mov
sbb
repnz
loop
pop
mov
pushl
shrl
fisttpl
sub
pop
mov
call
jmp
gs
jb
mov
call
mov
mov
int
xchg
fwait
sahf
rolb
orb
or
inc
pop
mov
imul
sbb
adc
sbb
dec
je
lahf
inc
dec
push
xor
xor
movsl
xor
cmp
call
iret
pop
sbb
sbb
add
mov
and
push
sbb
cmp
stc
push
or
shlb
sbb
cmp
scas
mov
pop
sbb
test
mov
xor
call
mov
jmp
arpl
outsl
xor
inc
xor
fyl2x
test
jle
cwtl
pop
xchg
push
xor
sti
mov
mov
pop
pop
pop
flds
push
gs
push
fidivrs
fs
hlt
adc
repnz
out
mov
iret
add
mov
js
mov
ja
mov
inc
fs
test
notl
jl
mov
jecxz
jp
ret
lahf
test
bound
mov
stc
xchg
nop
test
iret
push
adc
xor
lret
cld
or
js
iret
stos
loop
addr16
xor
mov
and
jmp
lret
sbb
jp
mov
std
lea
jne
lahf
outsl
stos
imul
xchg
and
data16
lcall
xchg
in
cmc
jne
rorl
jae
push
divb
jp
insb
mov
out
jo
push
jg
pop
divl
stos
push
rcll
test
pop
push
arpl
pop
adcb
or
mov
dec
lret
lods
pop
ljmp
mov
mov
dec
ficompl
xor
or
lret
ja
stos
bound
sbb
call
jne
into
popa
adc
bound
sub
xor
insb
push
sbbl
icebp
faddl
stos
fildll
cltd
adc
mov
add
jbe
cmp
in
fstl
idivb
pushf
sub
aaa
es
icebp
test
jb
test
je
test
inc
cs
in
push
cmp
imul
xchg
cwtl
mov
lfs
mov
ret
mov
xchg
add
and
dec
orb
insl
mov
push
rorl
lea
cmc
xchg
jmp
xor
mov
or
mov
add
imul
aad
test
or
in
add
mov
cmp
fnstsw
testl
outsl
fsubrs
inc
xchg
xchg
cmp
fisubrl
xchg
lods
push
inc
sbb
rcrb
jecxz
ss
popa
repz
and
out
movsb
lds
js
dec
cmp
mov
inc
sbb
icebp
pop
pushf
cmp
cmp
popf
adc
and
in
push
inc
jge
sbb
add
push
cwtl
xchg
bound
add
inc
mov
test
mov
xor
push
mov
rcr
movsl
inc
orb
cli
idivl
sbb
clc
mov
lock
sbb
xchg
lahf
mov
shl
or
jnp
xchg
jl
jp
scas
ljmp
mov
inc
out
cmp
insb
lcall
push
mov
test
add
jnp
int
pop
adc
int3
mov
mov
jg
mov
nop
movsl
mov
mov
enter
scas
mov
arpl
add
pcmpgtd
pop
cmp
mov
iret
inc
jle
mull
sbb
sbb
pop
sahf
add
stos
jmp
jne
mov
iret
jae
orl
fimuls
pop
insb
jmp
loopne
add
scas
mov
test
xchg
lds
clc
mov
data16
fcoms
xchg
cmp
sbb
fistps
xchg
xorb
insl
fdivrl
inc
mov
sub
cmpl
xor
add
inc
nop
dec
dec
pop
das
imul
ss
insb
imul
clc
shlb
adc
add
sbb
imul
lock
push
fcoml
je
dec
repnz
pop
or
int
leave
sbb
xchg
daa
bound
lods
mov
dec
adc
adc
xor
dec
mov
inc
xchg
out
imul
xchg
lahf
sub
sbb
imul
and
sbb
rcl
push
mov
jae
ret
dec
in
lret
cmp
pop
xor
movsl
mov
push
dec
xlat
addr16
fcomip
pusha
lcall
pop
nop
mov
mov
mov
push
inc
js
dec
inc
jge
pop
lds
dec
into
out
insl
push
add
or
js
cmpsl
imul
xor
das
movsb
clc
inc
and
inc
and
mov
bound
fcompl
pop
mov
decl
je
into
adc
sbb
pop
inc
add
jb
mov
or
cld
pop
pop
dec
scas
mov
scas
nop
push
lods
inc
pop
popa
dec
pop
and
mov
insb
cwtl
int
mov
lock
push
in
mov
xchg
adc
xor
stos
jle
inc
pusha
clc
mov
into
cmp
jae
lock
inc
mov
sub
sbb
aad
cmpsl
insb
and
mov
sbb
push
negb
enter
cmp
or
add
and
imull
out
iret
jle
dec
sbb
ljmp
int
mov
push
cltd
subl
add
dec
ds
xor
add
push
adc
pushf
pop
cmc
push
mov
cmp
aad
cmp
test
xchg
mov
adc
mov
dec
movsl
rolb
xor
jecxz
sbb
adc
xchg
pop
push
lods
mov
test
jmp
sahf
xchg
push
stos
mov
push
outsb
leave
outsl
jecxz
imul
pop
sbb
cmc
sarb
mov
adc
adc
arpl
nop
mov
imul
cmp
adc
movsb
mov
shlb
mov
loop
mov
jae
sbb
add
neg
out
pushf
pop
jl
repz
cmpsb
lock
mov
jle
pusha
pop
je
in
je
sbb
lea
repz
mov
fdivs
out
test
mov
and
int
cli
sbb
sbbb
mov
add
icebp
and
push
int3
lret
push
popf
add
mov
push
mov
out
jb
enter
jp
out
cmpsb
mov
mov
out
sbb
cmp
ss
or
push
mov
out
push
test
sahf
icebp
sbb
les
jnp
lods
lds
popa
xchg
or
xchg
enter
scas
filds
js
insb
dec
xor
sbb
sarb
sbb
fdiv
adc
movsb
push
mov
push
pop
cwtl
push
sub
scas
shlb
ret
iret
push
jge
popf
cmp
aaa
xor
pop
cmp
cmpsl
pop
insl
js
ss
aaa
xchg
imul
adc
mov
test
pop
lods
mov
movsl
dec
daa
loopne
jmp
adc
popa
movb
mov
xchg
mov
std
xchg
int3
shrb
std
outsl
data16
sbb
fldcw
and
sbb
cmp
imul
pop
sub
int3
jecxz
push
inc
inc
out
mov
mov
dec
adc
and
push
jecxz
mov
adc
jno
inc
mov
push
pusha
add
xchg
cmpsl
xlat
outsl
mov
mov
sahf
cmp
push
or
xor
lcall
das
loopne
test
es
orl
test
mov
jnp
cli
jp
or
imul
pop
xor
sbb
enter
xor
dec
pop
add
mov
std
pop
sub
js
testb
nop
mov
push
jbe
ror
clc
std
jp
hlt
mov
cmc
jmp
adc
mov
inc
fadd
sbbl
cltd
test
or
sbb
pop
lock
push
lret
popf
loope
sarb
jnp
xor
add
ljmp
inc
mov
ret
xor
cmc
es
mov
xchg
icebp
aam
aad
enter
insl
imul
sbb
adc
mov
ds
fisttpl
add
mov
sahf
std
ret
loopne
ds
ljmp
inc
pop
sti
push
cmp
sarl
and
fadds
jb
inc
je
sub
test
sbb
inc
jnp
mov
push
and
data16
or
adc
sub
fistpll
or
pusha
dec
out
push
lock
push
cltd
repnz
pop
mov
fwait
daa
mov
andb
or
fdivr
test
push
fcomip
xchg
rcll
push
sbb
outsb
push
je
push
sub
mov
mov
jl
popa
test
mov
push
leave
in
insl
mov
ja
leave
cmp
daa
mov
es
outsb
mov
loope
rep
mov
add
inc
mov
or
lds
shr
pop
xchg
ljmp
dec
out
repz
push
rol
outsb
in
inc
rcrl
sub
negb
mov
mov
inc
pop
inc
or
lods
dec
ljmp
lret
mov
int3
xchg
and
pusha
and
xor
cltd
and
adc
sub
in
call
mov
mov
push
add
in
xlat
and
mov
out
dec
sbb
mov
iret
ljmp
adcb
insb
adc
mov
aaa
fisttps
xor
or
push
rorb
xchg
xorb
inc
jg
lods
shll
xchg
pop
jbe
out
pop
pop
sub
mov
cmpsb
fs
or
mov
jnp
aam
sub
cmpsb
stos
movsb
scas
dec
inc
pop
add
add
scas
sahf
ja
jl
cmp
mov
test
iret
pop
mov
push
test
sbb
mov
push
stos
out
push
push
daa
in
test
ficomps
jo
push
dec
lahf
mov
and
and
imul
add
xchg
insl
adc
sbb
push
aam
mov
sbb
jle
mov
adc
xchg
iret
mov
add
lret
ss
aam
dec
shl
gs
cmpsb
pop
mov
mov
inc
mov
mov
repnz
iret
and
test
mov
hlt
dec
out
ret
sub
mov
loop
lcall
cmp
cmp
daa
das
mov
lret
call
cwtl
adc
imul
and
xorb
aaa
jp
test
stos
jns
imul
xor
idiv
add
sbbb
mov
jo
or
ljmp
fmul
inc
icebp
mov
jns
and
fprem
je
pop
ror
ja
test
loop
mov
cmp
shrl
xchg
and
xor
fxam
or
popa
pop
or
arpl
int
sahf
aam
sub
sbb
jb
jnp
call
push
adc
call
dec
testb
test
cmpsb
inc
cmc
jp
testl
sub
rorb
popf
or
ret
sahf
outsb
and
test
push
cmp
out
adc
xchg
addr16
xor
scas
rol
fadd
imul
flds
dec
sbb
mov
out
fmull
xor
test
dec
adcl
in
xor
dec
jp
gs
cmpsl
insl
and
jmp
sbb
add
adc
cmpsb
pop
pop
push
sbb
es
jae
sti
xor
push
out
cmp
mov
cmp
fdivs
test
pop
xchg
push
nop
push
cli
mov
sbb
popf
push
subl
sub
pop
xor
push
push
xchg
inc
idivb
push
sub
int
adc
and
mov
dec
ds
inc
pop
mov
shll
leave
js
mov
repnz
ret
arpl
sbb
mov
push
insl
pop
adc
sub
xlat
test
fistpll
test
bswap
iret
sub
xchg
inc
neg
mov
xor
cld
addr16
mov
pop
jl
mov
dec
push
adc
pop
sarb
adcl
dec
adc
ja
and
jecxz
lds
adc
pop
pop
cmp
dec
aaa
into
cmp
stc
sti
dec
mov
into
pop
lds
mov
hlt
inc
aam
je
push
ja
dec
loop
mov
mov
inc
popa
adc
lcall
lods
mov
cmp
add
sub
fcoms
gs
mov
sub
or
and
jl
das
mov
jl
push
inc
adc
fadds
int3
pop
montmul
cmpsb
xabort
or
fbld
jge
jge
mov
ljmp
nop
cmp
mov
pop
mov
mov
stc
mov
mov
pop
cmp
jnp
cmp
pusha
cwtl
sub
xchg
pop
scas
gs
ret
loop
loopne
mov
mov
sbb
imull
push
nop
pop
xor
sbb
rcr
push
xchg
repz
or
shrb
fisubl
sbb
cld
mov
repz
imul
popf
pop
dec
cld
int
loopne
ret
adc
push
mov
test
nop
pop
xorb
arpl
rorb
push
loopne
clc
add
ss
jae
and
cmpsb
outsb
arpl
jg
gs
pop
fsubp
and
adc
push
rorl
shll
cwtl
das
xchg
inc
fldlg2
xchg
jnp
es
add
mov
xor
popf
ret
cld
mov
inc
and
outsb
fwait
push
arpl
jae
add
in
jo
push
movsl
lock
cmp
dec
jg
mov
mov
shr
adc
stc
inc
out
in
push
arpl
or
int3
mov
pop
mov
mov
push
mov
mov
jnp
leave
out
mov
in
mov
sub
push
in
enter
cltd
lods
arpl
adc
jae
mov
xor
add
and
mov
inc
arpl
in
or
scas
xorl
shll
cmp
xchg
aam
into
mov
dec
stos
sub
jo
popf
cmpsl
je
dec
add
pop
int3
test
aaa
cwtl
cmp
or
ja
jl
popa
mov
das
push
pop
into
cmp
inc
cs
lahf
cmp
ja
data16
dec
inc
cs
pop
hlt
and
xchg
rorl
test
shr
push
inc
mov
fcmovne
fstl
jo
dec
hlt
push
in
push
fiaddl
push
pushf
stos
sbb
fadd
jae
ds
mov
add
mov
out
js
cmpsl
adc
loop
sub
sti
push
jns
push
adc
fwait
xor
sbb
xchg
outsb
mov
jmp
hlt
and
cwtl
negl
push
insl
iret
test
and
repz
and
or
xchg
cmp
sub
mov
and
push
ret
jno
push
arpl
ficompl
out
lahf
and
nop
movsb
ret
cmc
loope
in
ffree
dec
int
sub
adc
inc
hlt
lret
xchg
add
push
push
inc
mov
test
flds
sub
sbb
xchg
adc
hlt
aaa
cmp
outsb
jmp
ss
imulb
mov
mov
fnstsw
sub
rorl
fcoml
sbb
inc
lret
adc
addr16
loop
lds
adc
mov
loop
fildl
loope
shlb
nop
xlat
mov
dec
or
sbb
sub
xlat
imulb
nop
push
sub
sub
fstpl
loope
inc
xchg
dec
sub
sub
ds
jecxz
in
popf
inc
push
lfs
jge
inc
pusha
arpl
stc
test
sbb
test
xor
fsubl
nop
add
xchg
sbb
cmpb
fwait
mov
add
sarl
shll
imul
shll
test
cli
dec
xor
mov
mov
cmp
mov
adc
push
xor
mov
repnz
or
add
mov
stc
cmpsl
xlat
addr16
fildll
scas
mov
mov
inc
adc
pop
iret
xchg
xor
js
pop
mov
lcall
cmc
repnz
fistl
mov
arpl
push
mov
add
test
jo
scas
and
sub
in
mov
jge,pn
or
or
mov
or
push
fld
mov
ret
icebp
mov
imul
lret
out
adc
mov
aad
push
lcall
inc
add
fcompl
pop
mov
sub
cltd
movsb
lods
xor
xchg
jle
jmp
ljmp
mov
jne
and
jp
pusha
aaa
lods
sub
mov
push
sbb
lret
xchg
xor
adc
pop
imul
int
std
bound
fcmovnu
mov
outsb
mov
nop
pop
repz
je
pop
mov
fbstp
out
mov
pop
and
int3
fnstcw
repnz
or
cmpsb
fidivrl
ds
daa
push
push
lods
sbb
sub
and
or
jl
loopne
bnd
insl
pusha
es
fwait
jnp
dec
fstps
das
push
cmc
shlb
mov
in
cmpsb
lret
rcll
jge
push
inc
mov
cltd
cmpsb
rorl
xchg
jbe
pop
loope
mov
push
mov
push
stos
incl
stos
mov
mov
push
cwtl
pop
sbb
std
repnz
xor
mov
mov
jno
mov
sbb
mov
pop
data16
adc
inc
ss
out
loope
mov
stos
call
ss
pop
sub
scas
scas
popf
addr16
aam
out
cmpsl
andl
jo
jmp
inc
fisubrl
xchg
dec
add
sahf
cmp
movsl
push
cmp
fcoms
nop
clc
ret
dec
orb
pop
js
out
aad
mov
mov
push
pop
ss
in
xchg
ret
dec
scas
movsl
and
inc
nop
push
ffree
jae
cld
popa
in
in
jl
mov
sarl
lds
movsb
notb
mov
imul
xor
and
imul
ljmp
mov
pop
outsb
or
daa
iret
jo
repz
inc
sbb
aaa
mov
push
and
mov
or
inc
jne
aam
aad
push
imul
loop
scas
roll
into
ljmp
jbe
xchg
sub
push
push
and
nop
dec
aad
inc
push
mov
dec
inc
inc
movsb
out
mov
add
add
add
jge
push
loopne
sub
stc
scas
pusha
dec
punpckhbw
in
push
inc
rcrl
xor
mov
fistpll
orb
movsb
xchg
sub
inc
loope
cmp
adc
sbb
cmpsb
pop
xchg
in
pop
or
aam
xchg
mov
mov
push
mov
push
fs
jns
push
mov
rcrb
mov
out
and
bound
data16
or
mov
mul
pop
icebp
movsl
xchg
inc
cmp
dec
push
fisubl
cmp
test
cmc
shll
jmp
sahf
sbb
test
test
jl
stc
pop
sbb
ret
aad
aaa
xchg
pop
lret
cltd
xchg
leave
adc
mov
cmpsl
sub
jo
push
jp
push
lods
push
cmpsl
test
sub
ds
hlt
ss
sti
add
test
loopne
shr
stos
stc
push
stc
and
in
test
add
dec
lret
aad
outsb
lcall
fadds
pusha
push
mov
lds
and
jb
inc
pushf
cmpsl
lods
imul
sub
push
mov
lret
or
in
fs
dec
aam
adc
xor
push
sbb
das
dec
pop
push
sbb
push
sbb
xor
lods
inc
add
cmc
sahf
daa
lret
jb
in
aaa
adc
jae
divb
push
add
shrb
xor
test
inc
push
push
pushf
lea
jnp
push
jb
cld
scas
jge
js
aaa
xchg
push
add
dec
clc
pop
cmp
cmp
dec
mov
dec
sbb
test
cmpsb
cmpsl
or
bnd
and
call
aad
push
insb
daa
es
pop
iret
xchg
pop
fld
loop
push
cmp
dec
bound
loope
push
cwtl
push
dec
push
je
mov
cwtl
in
out
incl
dec
test
sbb
fidivs
fstpl
fdivrl
dec
jmp
lea
pop
inc
push
shlb
test
pop
jmp
aam
repnz
jmp
pop
mov
out
mov
mov
ds
repnz
aaa
xorl
lea
mov
mov
imul
ffreep
and
fsubs
lret
shr
sub
push
mov
cld
xorb
lahf
pop
fstl
xchg
mov
sarb
outsl
adc
and
in
test
cltd
sub
imul
sub
cmp
mov
dec
cmp
xchg
insl
jecxz
or
or
dec
sbb
pop
dec
fdivl
cmp
adc
mov
pop
test
mov
jp
xchg
movsb
std
pop
gs
and
inc
and
or
dec
dec
fidivrl
xor
dec
popa
mov
imul
ss
xchg
mov
or
mov
xchg
xor
xchg
lret
or
idivl
mov
mov
mov
mov
mov
inc
das
mov
addb
bound
into
push
mov
ret
test
in
in
mov
xchg
imul
pusha
xor
cli
call
mov
daa
cli
pop
cmpsb
fidivrl
notl
add
and
fstpt
add
daa
insl
fldt
jbe
push
daa
aas
mov
mov
sub
sahf
shlb
mov
mov
or
xchg
out
push
mov
call
pop
and
bound
add
sti
mov
sbb
and
filds
pushf
ror
cmp
dec
push
pop
pop
adc
testl
pusha
sub
das
out
out
out
cli
sbb
hlt
add
aad
push
repnz
mov
and
dec
stos
ljmp
xlat
stc
lods
inc
dec
dec
fcomip
fiadds
aam
xor
dec
xchg
aam
rorb
dec
scas
push
xchg
mul
dec
ret
into
cmp
mov
mov
push
leave
mov
cwtl
mov
in
loopne
aas
xchg
mov
cmpsb
and
inc
sar
add
and
out
ljmp
inc
jbe
bound
sti
mov
mov
ret
cmp
aam
and
mov
mov
cmpsl
add
sbb
jbe
addl
maskmovq
push
in
jecxz
xchg
sbb
sahf
mov
cwtl
mov
push
add
inc
lea
jno
fstl
mov
ljmp
xlat
push
ss
push
xor
out
and
cld
add
pushl
sub
sbb
scas
inc
das
jne
test
aas
divb
lods
scas
pop
pop
sbb
jns
push
mov
sbb
out
cmp
mov
lahf
leave
and
xor
cwtl
fs
test
jo
cmp
jns
add
popa
lret
xlat
scas
jno
xchg
jae
daa
lret
mov
and
repz
pop
inc
es
xchg
add
xlat
mov
loopne
test
pop
lods
pop
loope
mov
jp
mov
movsb
push
cmp
test
jl
add
cmp
test
pop
cwtl
sub
imul
jbe
sub
or
je
fldcw
pop
repnz
imul
or
mov
or
mov
push
adc
repz
push
data16
add
or
imul
add
pop
add
push
or
inc
sbb
bound
and
lahf
xor
clc
lret
nop
shlb
int
inc
xchg
inc
sub
inc
jl
mov
jecxz
in
mov
in
sbb
lret
aam
icebp
fists
lahf
in
fsubr
adc
ss
inc
ror
je
or
mov
arpl
pop
insb
push
ss
adc
imul
mov
inc
lahf
inc
and
in
sbb
ficomps
push
pushf
mov
mov
setae
imul
xor
repz
push
aad
stc
xchg
pushf
notb
aas
cmp
xor
pop
cs
xor
lock
outsl
dec
addr16
outsl
shrb
jns
les
jg
sbb
push
in
jno
xchg
jo
mov
mov
add
loope
movsl
add
inc
js
and
cld
add
sbb
pop
popa
repz
or
jnp
xor
jns
test
push
jae
dec
cmp
adc
lock
aas
dec
xchg
jbe
lcall
fidivl
pop
pop
fdivs
call
insl
cwtl
lods
lods
fistl
sbb
add
cs
ds
ds
mov
fsubrl
loop
push
bound
arpl
dec
jl
and
les
push
insb
and
dec
fmull
adc
fstl
rorb
adc
fsubr
mov
jno
cmp
pop
mov
mov
adcb
jbe
mov
test
or
mov
ljmp
sbb
mov
adc
pushf
in
dec
mov
pop
xor
mov
or
add
xor
ss
adc
xchg
test
aaa
lock
out
pop
adc
fldenv
andb
sbbb
dec
hlt
fcmovb
xorl
jns
dec
inc
aaa
aaa
sbb
xor
fisubs
sub
or
add
sub
mov
call
xchg
xor
mov
push
fucomip
je
push
repz
fdivrl
test
mov
pop
mov
out
adc
cmp
out
sarb
mov
mov
xchg
shrb
ljmp
xorl
flds
in
dec
mov
data16
inc
rclb
leave
sub
test
mov
cmp
lods
inc
pop
jno
pop
sbb
cli
mov
loop
scas
xlat
into
mov
push
outsl
insb
ret
push
pop
js
jo
call
pusha
stos
add
lret
pop
addr16
mov
test
jne
ds
out
add
in
addl
das
sti
jp
cmpsb
sbb
cmc
sbb
cli
adc
mov
xchg
sbb
pop
mov
adc
or
sti
jnp
loopne
out
inc
stc
pop
notl
push
inc
lcall
push
loop
iret
idivb
and
ljmp
mov
pop
dec
cld
xor
call
and
sbb
pushl
repnz
xor
ss
stos
pop
adc
pop
push
adc
sbb
aam
xor
inc
adc
inc
pop
dec
aad
xchg
push
scas
enter
pop
sbb
aad
std
stos
pop
rcrl
ret
mov
ficoml
ja
jb
xchg
lods
mov
jg
sbb
scas
push
cmpsb
in
adc
fidivrl
cmp
push
aad
jmp
mov
shrl
dec
ret
pop
jb
stc
xor
shr
cmp
pop
and
or
je
mov
stos
cmpsb
xchg
mov
pop
pop
mov
pop
frstor
aaa
int
inc
jl
movsl
insl
xorl
out
fnstcw
mov
in
scas
cmp
call
rclb
into
pop
inc
in
jecxz
xchg
mov
popf
sti
test
dec
pop
xor
cltd
sub
jnp
push
push
sub
in
cs
mov
mov
outsl
xor
pop
cmpsb
add
push
aad
inc
test
push
aad
stos
gs
repnz
ss
fdivrl
sarb
jne
cltd
cmp
je
in
inc
mov
xor
sbb
popl
sbb
pushf
pushw
sub
das
in
mov
fidivrs
dec
fisttpl
add
mov
imul
add
mov
les
mov
sub
ret
jae
ror
cmp
fldt
xchg
xor
cwtl
mov
mov
pop
shrb
cmc
adc
lock
mov
stos
int3
push
insb
xchg
and
loope
dec
push
mov
rorl
dec
and
or
fstpl
imul
rclb
jne
inc
lock
in
fwait
mov
add
stc
arpl
lret
inc
add
inc
gs
jbe
lret
dec
push
jnp
xchg
insl
push
mov
or
fldt
mov
jmp
test
xor
inc
inc
out
push
aas
loopne
ret
xor
mov
daa
sub
scas
ret
hlt
out
fisubrs
cmp
pop
aam
or
pop
mov
inc
mov
add
dec
sbb
leave
out
fs
xchg
jae
inc
je
int
cmpsb
cmp
push
stc
pop
mov
stos
sub
loopne
sub
in
in
iret
xor
scas
push
das
jge
pop
inc
dec
enter
fldt
data16
filds
outsb
inc
pop
jge
aam
out
jecxz
fs
mov
or
stos
lds
sbb
and
inc
or
and
push
pop
push
mov
aaa
xchg
in
dec
dec
push
or
fadds
mov
cmp
test
es
inc
xchg
dec
fidivrl
ret
enter
scas
dec
mov
fiadds
push
push
xchg
out
in
mov
mov
xchg
sub
or
push
imul
mov
mov
insb
push
loop
aam
aas
es
mov
js
lock
dec
dec
idivl
pop
pop
xor
push
jnp
adc
xlat
push
xlat
mov
in
push
mov
xor
sbb
repz
lds
ja
xlat
scas
xchg
jne
data16
repnz
mov
xor
mov
addr16
sbb
std
pop
pop
ja
push
add
or
jg
int
daa
dec
mov
mulb
mov
lea
inc
cltd
mov
cmp
movsb
pop
jb
sub
in
jb
imul
cltd
outsl
mov
jmp
insb
and
jge
rcr
ljmp
and
xchg
cmp
mov
aas
and
cltd
xchg
add
xor
cmpsb
lret
add
in
mov
mov
into
clc
cmpsl
not
iret
mov
add
add
and
xchg
mov
int3
jns
inc
xor
aaa
lock
insl
insl
ret
adc
sub
xor
ret
les
mov
inc
lds
pop
sub
adc
test
pop
inc
or
and
dec
fildll
incb
leave
andl
or
sub
sub
push
iret
ljmp
cli
ljmp
or
sub
test
cs
jmp
mov
in
sbb
mov
lcall
shrl
inc
mov
lods
in
lea
bound
int3
xor
cltd
gs
mov
inc
add
addl
lret
jns
push
sub
push
stc
stc
dec
xor
movsb
sti
xchg
repnz
fucomi
mov
lret
adc
enter
dec
or
in
add
jp
mov
jle
ja
je
dec
enter
mov
push
push
test
and
pop
movsb
or
and
roll
jb
mov
scas
out
add
popl
repz
jmp
addr16
insl
cmp
adc
and
dec
repz
enter
inc
mov
sub
adc
add
and
inc
mov
adc
or
bswap
inc
mov
jno
shll
inc
cmp
inc
test
cmp
jnp
das
ds
pop
out
adc
inc
mov
xchg
or
xchg
cmp
leave
outsb
aas
jae
xor
cmp
subb
and
pop
pop
and
xchg
out
pusha
bound
out
aaa
scas
sbb
in
mov
jmp
pop
cld
nop
das
out
aas
mov
mov
das
pop
jb
sahf
iret
and
cli
dec
cmp
mov
sbb
xor
out
xchg
pop
cmpsl
jmp
fimuls
arpl
cld
pop
adc
inc
jp
xchg
psubd
andb
test
cwtl
pop
popa
add
test
cmpsb
xor
mov
stos
mov
inc
pop
dec
mov
mov
or
mov
xchg
int
push
shl
jns
aam
jmp
test
dec
shlb
and
fsubs
mov
sbb
nop
cmpsl
jno,pt
es
adc
rol
idivb
lods
xor
int
xchg
stos
in
adc
clc
xor
mov
mov
jp
sub
mov
scas
loopne
cmpsl
pop
xchg
insl
lcall
fmul
call
call
int3
aad
sahf
mov
movsb
dec
xchg
cld
in
nop
aaa
mov
cld
cmpl
cmp
pop
inc
xor
cmpsl
or
dec
loopne
xor
cld
in
sbb
xchg
and
pusha
mov
jmp
mov
sub
mov
cmc
mov
mov
mov
ror
jecxz
ret
sbb
ss
pop
xchg
stos
pop
mov
mov
inc
xor
xchg
inc
lcall
push
adc
xchg
test
movsb
daa
mov
lcall
data16
or
adc
push
sub
std
xchg
sub
inc
icebp
jnp
cs
loope
mov
ret
into
cmpsb
dec
push
mov
mov
xchg
adc
add
adc
push
jns
push
or
pop
add
aad
gs
ja
aam
ret
mov
movl
fwait
lods
ret
aas
or
mov
fisttpll
test
push
cmp
add
add
pop
leave
dec
mov
ss
jg
test
addps
mov
pop
in
add
test
sbb
outsl
pop
push
out
lods
jp
fidivs
es
lods
xorl
mov
add
jno
int
mov
repz
pop
pop
pop
mov
xchg
in
xchg
sub
les
shrb
pop
mov
imul
pop
dec
jbe
loope
add
mov
pop
das
pop
in
in
cmp
rcr
sbb
push
fwait
xor
cmpsl
into
push
pop
cmpsl
adc
fsub
dec
dec
pop
push
lret
and
jbe
cmp
push
sbb
mulb
pop
sbb
iret
outsb
mov
lret
push
jno
mov
dec
dec
imul
pop
loopne
outsl
mov
dec
mov
mov
loope
testl
movl
sub
xor
jno
lods
sbb
sub
sahf
test
sbb
jge
inc
xlat
movsl
mov
cmp
repnz
loopne
xorl
std
push
adc
xlat
pop
js
xchg
cld
mov
stos
xchg
xor
jo
addb
adc
add
jg
jae
dec
sub
std
sti
mov
sub
fwait
pop
mov
aas
cwtl
mov
scas
push
ret
xchg
adc
sbb
ljmp
inc
xchg
insl
cmp
negl
lods
mov
mov
cmpsl
xchg
jo
test
push
loop
xchg
arpl
loop
and
in
xchg
pop
cmpsl
push
aam
cmp
stos
cmp
add
and
and
arpl
jle
jmp
jle
or
lret
stos
or
mov
out
imul
shrl
loop
pop
lods
nop
ret
pop
lret
inc
cmp
into
sbb
lea
sub
push
xchg
xchg
sbb
pop
and
mov
into
or
sbb
or
mov
mov
adc
daa
fucomip
mov
arpl
dec
lret
dec
sbb
xor
dec
mov
scas
lret
fidivl
xchg
scas
cwtl
inc
out
jge
add
mov
pop
movsb
mov
int3
cmpsl
adc
testb
xchg
push
lock
scas
das
fstps
cld
insb
aas
test
mov
push
jne
mov
pop
bound
dec
sbb
loopne
lds
and
hlt
dec
sahf
inc
inc
adc
push
mov
movsl
xchg
or
fimull
das
xchg
notb
push
outsb
sub
rcl
cmp
rolb
and
push
xchg
jne
loope
addr16
sub
pop
or
jae
dec
dec
cmc
pop
aad
into
ja
jg
flds
out
int
mov
mov
pop
jg
pop
pop
mov
lret
and
adc
iret
pop
xchg
xchg
mov
add
inc
ljmp
mov
movsb
adc
mov
and
cmc
data16
je
push
sbb
xchg
dec
hlt
or
clc
mov
cmc
add
pop
inc
pop
jbe
push
clc
mov
leave
mov
fstpl
mov
inc
sbb
icebp
pushf
or
or
inc
xchg
fisubs
and
jecxz
shll
pop
mov
mov
sbb
dec
inc
loope
lcall
cltd
jge
push
in
icebp
sti
add
fists
test
pop
mov
clc
and
sub
out
sarb
cs
ficoml
and
popf
add
xor
sub
stos
lea
sub
xchg
push
adc
and
adc
xor
and
pushf
pop
add
mov
scas
cmp
pop
or
insl
and
pop
inc
xchg
pop
test
cmp
sahf
repnz
dec
sti
dec
arpl
push
fs
cmp
and
mov
arpl
les
fnstcw
xchg
cmp
jno
sti
adc
jmp
push
mov
dec
dec
ss
jbe
adc
lock
ret
es
lock
xor
sbb
mov
mov
inc
mov
insb
push
jnp
push
cmovl
xor
mov
loopne
inc
aas
testb
sbb
lods
sbb
mov
test
je
mov
js
scas
jbe
sbb
or
pop
or
rorb
ljmp
pop
xchg
popa
or
imul
add
icebp
push
xchg
cmp
rol
push
jg
leave
lods
out
xchg
pop
ret
mov
std
loope
rorb
stc
or
gs
imul
pop
push
sbb
push
imul
out
add
lret
cmp
mov
mov
sub
pop
mov
ja
cmpsl
dec
push
sbb
add
stos
int
xor
add
push
cmp
jle
mov
jle
fstl
inc
arpl
jle
das
cld
iret
add
div
test
fisttps
mov
jecxz
mov
sbb
scas
orb
jns
ss
push
push
mov
inc
xor
lods
mov
lret
sbb
xor
aaa
dec
shrb
call
test
xor
ds
mov
scas
jle
aas
ja
imul
jbe
push
cli
ret
dec
idivl
jge
jl
jg
and
lcall
mov
dec
data16
cltd
mov
jae
jae
in
shr
xchg
xchg
ja
dec
xor
stos
imul
push
or
lea
jnp
inc
rcll
arpl
fcmovbe
dec
decb
jo
ja
xlat
pop
pop
push
cld
lcall
or
aad
adc
hlt
cmp
mov
lcall
xchg
sbb
dec
inc
jne
stc
shll
push
stos
sbb
jle
push
add
iret
test
dec
scas
pop
cmp
inc
mov
mov
fidivrs
pop
stos
inc
adc
cmp
and
cwtl
movsb
ss
pop
pushl
je
mov
jge
push
aad
jl
repnz
add
or
int
cmpsl
pop
out
pop
mov
and
lea
addl
aad
jmp
xchg
dec
shl
and
xchg
xchg
imul
lods
jecxz
test
push
lret
adc
iret
into
pop
or
lods
jbe
jns
add
enter
add
adc
bound
inc
xchg
xchg
adc
fsts
sbb
sbb
stos
add
and
mov
sbb
jg
mov
test
insl
out
scas
xchg
insb
dec
setae
pushf
and
int3
xchg
mov
xchg
outsb
or
xchg
jmp
mov
fldt
inc
sti
jo
mov
push
add
stc
dec
sub
push
xchg
movsb
mov
mov
jbe
push
popa
sbb
cli
cld
sub
mov
outsb
cmpsb
xor
adc
jp
in
popa
sbb
sbb
mov
inc
cwtl
test
data16
mov
lea
push
push
and
call
adc
jo
testb
ljmp
js
pushl
mov
ret
pusha
adc
jp
add
adc
jle
ss
pop
cld
adc
test
jne
in
loopne
pusha
test
loop
sbb
lcall
push
ds
pop
xor
test
xchg
lahf
mov
jg
push
out
xchg
ljmp
pop
pusha
das
rcrl
jbe
clc
dec
in
push
xor
ror
sahf
int
mov
rorl
and
mov
sub
lods
jbe
mov
xchg
sbb
jno
mov
pusha
mov
lret
arpl
leave
cs
and
mov
dec
inc
pop
or
leave
aaa
mov
aas
mov
sti
call
dec
pop
jg
popf
ficomps
fimuls
adc
push
mov
sbb
repnz
or
add
mul
mov
lcall
jmp
scas
adc
xor
add
sbb
bound
inc
call
sbb
push
out
mov
dec
movsw
sub
mov
negb
ret
pop
int3
mov
bound
in
das
les
and
aad
add
repnz
jge
sub
mov
hlt
add
xchg
inc
sub
mov
sub
adc
add
lea
inc
cmp
sbb
fstps
add
popa
lret
lods
adc
sbb
loope
mov
je
jo
inc
and
push
push
popa
call
mov
add
sub
xchg
ds
mov
and
mov
pop
or
leave
sub
jg
jg
sub
inc
lock
sub
pop
enter
movsl
sub
int
enter
mov
xchg
xlat
cwtl
mov
sbb
xchg
push
or
loopne
mov
cmp
lds
sbb
add
ljmp
ds
mov
jp
testb
mov
subb
es
xor
add
xchg
mov
int
jae
push
inc
mov
and
xchg
dec
fistpl
loop
fildl
out
fisubs
ljmp
mov
es
repz
in
lods
iret
sub
inc
push
cmp
pop
xor
test
and
xchg
sub
stos
jns
pop
je
and
mov
out
shlb
outsb
roll
sti
fidivl
sub
mov
pop
push
lcall
into
sbb
stc
adc
sbb
pusha
sbb
pop
sub
je
inc
mov
fstpt
mov
adc
and
repnz
dec
adc
pop
cmpsb
dec
or
inc
adc
cmpsb
into
int3
icebp
js
cwtl
xorl
jae
sub
cmpsl
jge
pop
lret
idivl
push
xchg
out
mov
cmpsb
xlat
call
dec
mov
addr16
sub
inc
lds
shrb
or
rcr
lcall
xchg
dec
sub
aaa
mov
fs
push
push
mov
or
je
aam
cmp
push
push
ret
adc
or
movsb
fdivrs
lcall
lret
mov
test
mov
mov
or
in
out
repnz
dec
in
push
imul
xor
popf
popf
mov
rep
repz
jg
faddl
mov
and
imul
pop
xchg
sbb
roll
add
jae
scas
push
adc
cmp
aad
loop
lahf
pop
aad
inc
or
rcl
aaa
iret
inc
cmpsb
sti
insl
xchg
push
pop
fcomip
nop
xchg
xor
mov
pop
push
stc
movsb
movsl
pop
mov
sbb
cld
imul
out
xchg
das
lret
inc
cwtl
popa
jne
out
pop
rcrb
mov
add
xlat
add
push
and
faddl
insb
or
jno
cmp
insl
add
aas
push
dec
mov
test
lock
movsl
outsl
lock
into
xorl
aaa
stos
xchg
testb
mov
mov
lcall
rol
fists
pop
insl
and
pop
jo
xchg
sbb
movsl
fistl
mov
mulb
pop
outsb
out
xor
sub
imul
lea
mov
pop
jno
cmp
aaa
daa
and
pop
lds
push
icebp
jmp
ljmp
cmp
pop
add
test
push
push
sbb
mov
out
sbb
cmpsb
jp
lods
cli
enter
dec
xchg
test
in
ret
loope
shrb
cmc
inc
or
push
xchg
cmp
test
push
fsubrp
mov
dec
pop
lcall
adc
xor
icebp
lds
sbb
cmpb
mov
push
push
dec
push
inc
jle
out
xlat
jns,pn
repz
es
aad
sbb
jmp
int3
repnz
lods
add
mov
clc
bound
add
push
inc
lret
mov
sub
scas
push
push
dec
mov
and
cmc
sbb
pusha
mov
cmp
into
pop
clc
xlat
jnp
in
mov
lahf
in
dec
test
mov
dec
pop
sub
cmp
cld
mov
inc
in
jnp
and
dec
jbe
add
loop
jo
stos
fidivrs
jmp
out
or
mov
xchg
mov
xor
sbb
loope
mov
pop
fistpll
std
in
push
cmp
cmc
xchg
jno
shl
pop
pop
arpl
sbb
in
insb
pop
sbb
jae
fisttpll
fbld
in
xchg
sbb
mov
inc
stos
popa
jle
das
dec
and
sbb
mov
sbb
adc
add
popa
or
dec
xchg
into
xor
inc
xor
pop
pushw
adc
push
mov
rolb
les
pusha
ficomps
sub
mov
mov
insl
stos
pop
sbb
push
out
push
sahf
adc
jbe
jg
xchg
mov
roll
dec
inc
sbb
xchg
adc
xchg
pop
std
stos
inc
mov
out
push
test
sarl
dec
ja
mov
xchg
and
push
xchg
out
push
push
and
ror
mov
cld
jns
dec
enter
je
daa
sub
sti
mov
repz
xchg
jns
jp
aas
add
jecxz
mov
jle
movsb
mov
fdivrl
xor
pop
add
vandps
es
cmp
xor
and
outsl
lahf
inc
scas
data16
mov
mov
jecxz
out
xor
jge
jmp
pop
mov
rcrl
es
fs
add
dec
mov
int
mov
mov
mov
push
cmp
lods
cmp
and
add
xchg
ss
adc
ss
or
xchg
fstl
std
xor
aam
sbb
es
sti
pop
jg
out
jae
int3
fwait
call
out
cmc
add
int3
mov
punpckldq
cmpsl
enter
in
cmpsb
sbb
in
mov
int3
cwtl
dec
jmp
or
jnp
sub
mov
cmpsb
jle
cwtl
pop
push
sub
movsb
mov
shl
cltd
add
push
adc
inc
iret
cmp
xchg
call
adc
pop
mov
jp
add
test
inc
mov
sbb
mov
jnp
lahf
jg
fs
jae
pusha
test
inc
xchg
int3
mov
repz
in
jno
andb
les
das
add
icebp
lock
rclb
ret
pop
inc
leave
cmp
push
shl
lock
out
inc
ret
and
icebp
jo
movsb
fs
pop
aad
inc
sub
mov
xchg
fnsave
scas
int
dec
les
lret
push
shrl
into
mov
repz
icebp
adc
lret
and
dec
cmp
addb
xchg
mov
sahf
sub
aam
call
insl
lcall
pop
inc
sub
and
and
sbb
stos
jbe
cwtl
cmp
out
dec
push
jbe
mov
push
ret
aas
xchg
or
jne
mov
cmp
idivl
negb
xchg
test
lock
daa
mov
roll
add
ss
sbb
fiaddl
jb
ret
xchg
xchg
loope
subl
pop
rorb
data16
sbb
jge
leave
mov
mov
jge
inc
push
sub
xlat
clc
mov
pop
pop
inc
or
xor
xor
int
iret
inc
xchg
adc
fnstenv
adc
and
mov
inc
mov
icebp
into
shll
fcompl
mov
and
adc
mov
popa
or
outsb
push
cmp
jge
stc
sbb
jne
loop
cmp
sub
mov
add
dec
shrl
mov
jecxz
mov
mov
adc
loop
sub
mov
lahf
add
pop
add
test
movsb
aad
cld
push
subl
or
insb
or
xchg
test
lcall
xor
mov
sbb
xchg
sbb
mov
jp
mov
sahf
jecxz
mov
mov
cli
pusha
mov
in
sub
js
sub
jg
sti
jbe
pop
repz
or
stc
pop
scas
and
mov
xor
stos
jo
xor
cmpl
cs
jmp
cmp
mov
pop
mov
jg
jge
lahf
mov
insl
fidivl
je
scas
sub
hlt
jp
mov
pop
stc
lock
mov
mov
sub
cmp
dec
jp
outsl
and
pop
add
pop
lods
nop
adc
movd
insl
shll
mov
mov
or
rclb
add
adc
dec
mov
movsb
outsl
xchg
fistpll
pop
mov
inc
ficompl
cmc
jle
sub
push
addr16
call
imul
xor
fidivrs
jge
hlt
ret
sub
cmpsb
mov
jne
lds
jg
or
fs
xor
rorb
or
adc
enter
lahf
movsb
addr16
sahf
pushf
lret
aas
dec
enter
mov
xchg
add
ret
xor
flds
hlt
mov
adc
dec
leave
sub
or
lcall
mov
push
cmp
rorb
pop
cmc
xchg
mov
inc
cmp
out
aas
xor
dec
or
mov
cli
mov
enter
jbe
inc
test
insl
ss
js
push
lcall
in
jb
or
insl
sbb
push
jmp
xchg
test
stc
addb
add
xchg
fsubrs
adc
imul
xlat
popf
daa
xchg
call
out
and
mov
ds
andb
clc
sbb
or
mov
mov
inc
pop
adc
movsb
mov
lcall
pop
add
push
test
jle
cmpsb
fwait
jl
push
cmp
dec
fstps
push
data16
or
in
sbb
es
xor
ret
pusha
sub
in
inc
xchg
inc
mov
mov
mov
mov
jle
sbb
adc
xor
pusha
ljmp
stos
arpl
dec
cld
mov
pop
rorl
and
hlt
orb
outsb
icebp
adc
mov
ja
imull
out
mov
test
repnz
inc
pushf
dec
sub
mov
enter
xchg
push
or
xor
sbbb
pop
movsl
js
aam
out
xchg
hlt
push
mov
cld
add
push
sbb
and
lcall
mov
mov
arpl
lret
ds
ja
inc
aas
scas
sti
add
popf
xor
xchg
jno
das
sbb
les
aaa
push
cmp
cmp
arpl
aaa
cld
in
das
sahf
js
test
cmp
test
pop
push
xor
sti
adc
cmpsb
inc
mov
clc
cmp
cmpsl
or
test
xlat
fistl
movsb
test
xchg
subb
fmuls
pushw
repnz
pusha
ljmp
mov
jne
sbbl
rol
movsb
out
adc
in
adc
jg
dec
xor
mul
movsl
sahf
jg
test
pop
add
test
lret
dec
add
into
inc
sub
idivb
adc
and
cld
stos
mov
mov
lock
adc
mov
mov
sub
adc
test
ja
cmpsl
fisttps
lods
push
lret
cmpsb
pop
arpl
ja
mov
xchg
lret
dec
lahf
adcb
push
and
fnsave
movsl
push
jl
ss
ja
icebp
lock
xor
hlt
fcmovb
cld
jle
testb
push
and
dec
jno
imul
paddw
rolb
das
and
xchg
les
jp
mov
test
insl
test
bound
jo
ficomps
fs
ret
pop
jne
repz
push
and
adc
lods
lea
sub
mov
adc
std
ja
mov
jmp
sbb
fcompl
mov
push
jg
jo
test
out
lahf
in
pop
jle
cmpsl
jb
mov
mov
clc
adc
adcb
pop
mov
arpl
rcrl
arpl
push
mov
nop
push
xchg
lds
push
mov
mov
lcall
sbb
cmp
inc
jle
xabort
cmp
xchg
int3
jge
out
repz
inc
lock
pop
jbe
insb
lret
jle
js
xor
lods
xchg
aam
lea
cltd
xchg
cld
cltd
das
shll
push
mov
sti
inc
lds
andb
cli
mov
sub
sbb
and
imul
arpl
ljmp
sub
clc
je
push
and
push
sub
out
iret
in
addr16
das
jno
push
test
enter
sbb
inc
mov
lret
pop
and
mov
popa
cld
popa
pop
push
stc
jmp
decb
mov
push
leave
mov
dec
mov
aaa
xchg
mov
fidivs
sub
mov
or
mov
popf
insl
sub
and
cmc
jge
sub
push
cmp
pop
out
or
add
aam
cwtl
mov
cwtl
aam
mov
add
cwtl
in
in
adc
inc
pop
inc
jp
and
insl
mov
enter
inc
or
gs
stos
cmpsb
popf
jecxz
xchg
shl
xchg
adcl
and
mov
jl
ffree
sub
xchg
push
ss
jecxz
jb
mov
enter
or
cmpsb
jge
or
and
cmp
es
cli
mov
pop
and
mov
or
in
cltd
inc
pop
jns
cmpsb
and
xchg
in
dec
xor
into
test
adc
mov
pop
jmp
inc
jnp
mov
cmpsb
fistpl
shl
jp
push
mov
icebp
clc
mov
sbb
icebp
jmp
mov
sbb
cmp
js
xlat
add
push
jmp
popa
mov
mov
inc
fs
mov
aas
lea
or
pop
scas
adc
setno
pop
inc
data16
pop
iret
sub
or
dec
pop
xchg
inc
stos
aaa
call
xchg
pop
or
stc
sub
dec
mov
lock
lds
cld
je
iret
sub
sbb
pusha
push
add
notb
pop
imul
pop
xor
mov
psrlq
mov
ret
int3
xor
ds
xchg
fwait
and
mov
push
cmp
adc
push
stc
mov
or
dec
idivb
mov
lahf
jecxz
mov
in
test
mov
rcr
lds
and
sbb
mov
add
mov
xor
mov
or
fistpll
movsb
inc
xor
shlb
out
jecxz
mov
push
sti
dec
std
imul
icebp
and
cmp
pop
in
or
fisubl
mov
mov
cmpsb
inc
stc
mov
xchg
xchg
cli
jmp
push
mov
pop
ljmp
push
or
adc
push
adc
push
push
sub
inc
pushf
dec
shlb
mov
xor
pop
repz
push
mov
aas
push
jecxz
mov
adc
mov
data16
adc
das
and
stos
mov
popf
pop
into
sub
jmp
lds
in
mov
dec
aas
add
adc
ja
adc
aad
cmp
and
in
aas
adc
sti
je
outsb
add
aad
aad
cmpsb
call
sub
push
pop
test
pop
xchg
test
jae
pop
fwait
lcall
mov
sub
cmp
pshufw
push
mov
cli
pop
pop
movsl
js
dec
mov
and
rcrb
cltd
add
push
dec
and
inc
lahf
test
add
out
cli
adc
loop
mov
mov
fdivl
clc
aas
mov
mov
or
cmc
dec
pop
mov
outsl
repnz
adc
add
ret
fidivrs
push
push
shll
pop
cwtl
xor
mov
scas
scas
fisttpl
cmp
mov
outsl
lahf
xchg
in
jg
lock
fimull
ds
jae
fwait
lods
xchg
lds
sahf
cmp
insl
mov
testb
add
and
adc
or
addl
jb
ret
sbb
add
nop
or
repz
int
ds
push
data16
cmc
or
es
pop
sbb
ror
sbbb
mov
mov
add
dec
and
outsb
adc
bswap
cmp
inc
sti
ret
in
xchg
dec
jo
or
dec
add
pop
fmull
pop
xor
shrb
push
lds
in
jecxz
sbb
jbe
out
cmpsb
mov
sub
out
lods
add
cmc
hlt
push
xor
xor
sub
cmp
cli
int
in
mov
or
fnsave
cmc
test
out
mov
pop
dec
ljmp
mov
pop
adc
cmpsb
mov
push
inc
clc
xor
mov
sub
insl
leave
leave
mov
mov
jnp
mul
sub
push
sbb
iret
inc
sub
imul
and
mov
add
jnp
inc
mov
mov
xchg
jle
mov
xchg
sub
jnp
mov
add
and
andl
test
add
sbb
mov
bound
imul
rorb
cmp
mov
int3
push
mov
outsb
adc
fcmovnbe
ret
or
jb
mov
mov
cmpsl
push
insb
xchg
mov
or
push
cltd
dec
sub
sub
int3
adc
push
dec
lret
insl
loopne
or
xor
pop
cmp
jge
aam
add
shll
mov
faddl
xchg
mov
in
jecxz
out
push
ss
and
xchg
in
xchg
pop
imul
xchg
call
scas
loopne
incl
mov
push
cwtl
sbb
fcoms
jne
pop
xlat
sbb
jb
mov
push
adc
cli
std
fwait
xlat
leave
lods
add
sub
lods
pop
push
and
mov
xlat
sub
xchg
cltd
movsl
cmpsl
jg
daa
xchg
mov
cmp
in
mov
arpl
sahf
add
cmp
loopne
sti
rorl
jbe
push
imul
and
insb
add
jl
enter
lds
ret
ljmp
in
dec
addr16
fiaddl
test
adc
xlat
sbb
push
adc
fadd
jnp
xchg
cmp
movsl
ret
sub
xchg
lock
dec
pop
mov
scas
test
popf
sub
push
icebp
pop
ja
gs
push
subl
jecxz
pop
pavgw
loop
sub
int
or
js
and
sarb
pop
fcmovnu
testl
xchg
xchg
push
ret
lret
ret
push
fistpl
nop
fbstp
lea
and
add
xor
pop
lds
mov
mov
enter
dec
adc
sub
enter
nop
outsl
cmp
popa
jbe
insb
loopne
and
outsl
sbb
aas
ret
push
sub
inc
test
ret
das
add
es
icebp
push
lods
movsb
pop
test
insb
cmp
sbb
leave
cmp
aaa
cmp
adc
imul
stos
aas
rcrl
jb
xor
std
sbb
pop
cmp
or
iret
aam
pop
cwtl
call
pop
out
lret
fisttpll
loop
scas
out
test
jge
js
lds
sbb
cmpsl
xchg
fisubs
mov
pop
mov
nop
mov
adc
xor
nop
sbb
popa
fwait
add
repz
jnp
jge
insb
aaa
mov
cmp
dec
movsl
dec
mov
ss
pop
dec
lahf
cmp
push
sahf
daa
test
mov
mov
cmp
xchg
pop
sub
in
push
xchg
enter
inc
call
dec
sbb
mov
jmp
xor
and
daa
fucompp
jbe
js
cmp
push
lds
xor
mov
insl
loope
notl
cmpsb
loop
clc
testl
outsb
mov
xchg
ja
out
sti
into
lea
mov
stos
imul
jnp
cmp
xor
sbb
jae
js
dec
sbb
jl
adcb
or
jp
xchg
xchg
scas
cmp
sbb
pop
xchg
fucomip
in
xor
fsubs
std
push
lds
cmp
roll
pop
mov
lret
push
dec
push
shlb
jo
fs
dec
in
dec
ds
adc
xchg
and
push
cmp
and
pop
movsb
call
fisttps
mov
inc
xchg
xor
loopne,pn
and
jnp
push
xor
cmpsb
sub
adc
es
jne
adc
xorb
test
mov
test
and
mov
mov
pop
ror
ja
scas
mov
aaa
and
lods
sbb
jae
cmp
sbb
mov
inc
js
xchg
or
cmpsl
aad
mov
dec
fdivs
shrb
sbb
mov
sub
out
cmp
icebp
outsb
xchg
sbb
mov
pusha
fldl
push
icebp
and
out
dec
or
dec
mov
mov
clc
out
insl
and
movsb
cld
jge
pushl
dec
xorb
outsb
xchg
popa
mov
mov
pop
call
mov
mov
lods
xchg
inc
push
sti
sbb
aad
jmp
cmpsl
iret
adc
push
into
fisubrs
jmp
out
sbb
jns
xchg
in
add
ficomps
xor
testb
adc
int
dec
into
icebp
or
loope
jp
loopw
mov
jnp
pop
psubw
leave
not
pop
loopne
mov
xchg
mov
xor
lret
dec
arpl
aas
add
dec
mov
stc
jge
add
gs
std
mov
jnp
cltd
adc
idivb
inc
call
scas
push
fstpl
aam
addr16
lods
pop
mov
jmp
movsl
stos
ss
hlt
repz
movsb
xchg
rorb
pusha
inc
xor
or
cmp
loopne
sub
jb
lds
inc
inc
imul
push
fldl
xor
mov
push
repz
inc
jae
out
outsb
stos
outsl
out
jmp
rorb
or
andl
adc
in
xor
lcall
or
sti
dec
and
adc
mov
cwtl
inc
mov
jne
dec
fs
xchg
popa
imul
inc
movsl
xchg
fsts
inc
addb
enter
mov
lret
pop
pop
sub
mov
mov
cmp
es
jl
jle
mov
and
mov
adc
aad
scas
dec
je
mov
fdivr
out
and
or
ret
mov
loopne
fs
jb
sub
xchg
test
cltd
out
push
push
insl
ss
inc
pop
int3
sub
ss
lods
pop
and
out
sub
insb
popf
in
repz
in
andb
test
inc
adc
inc
push
sti
aam
insb
in
fdivs
leave
or
shll
mov
jle
xchg
and
inc
test
out
jb
in
aaa
xchg
lock
cmpsl
or
mov
xor
arpl
cltd
mov
cmpsl
enter
and
jo
dec
nop
movsb
mov
push
out
pop
inc
in
jb
cmc
mov
xor
cmp
or
ljmp
jbe
dec
rcr
adc
push
addl
push
or
inc
lahf
das
xchg
int
cmp
jb
pop
mov
mov
loopne
es
dec
inc
mov
mov
and
xchg
jb
leave
or
cmpsb
pop
aam
ds
mov
scas
jnp
jbe
in
sub
fucomip
sub
dec
push
or
fwait
mov
enter
inc
and
call
iret
popa
popa
adc
imul
cmpsl
cmpsb
jge
mov
pushf
cmc
push
xor
sub
sbb
je
adc
push
test
xchg
jae
sahf
icebp
dec
pop
mov
sbb
subl
sub
into
or
adc
mov
xchg
out
mov
dec
cmpsl
lods
movsb
inc
jp
mov
add
sti
aad
dec
orl
aam
jb
and
mov
jecxz
sbb
dec
add
jne
fcoml
push
mov
jp
popa
mov
dec
dec
push
or
ret
scas
lret
jmp
ds
sbb
out
gs
arpl
inc
pop
scas
rcr
xchg
add
loope
stc
cmp
push
pop
sbb
sub
push
jb
testb
push
aas
jp
ret
into
pop
push
daa
mov
mov
adc
inc
push
popa
lock
mov
loop
stos
sub
ljmp
popa
and
insl
or
jae
push
xor
mov
gs
xor
or
lcall
call
flds
and
je
xchg
jae
std
lea
sbb
push
sub
repnz
xor
jb
or
insl
rol
xlat
and
movsb
filds
aam
mov
cmpsl
pop
dec
sub
daa
hlt
dec
xor
mov
dec
hlt
test
add
or
dec
jl
inc
and
aam
xchg
fwait
addr16
into
mov
dec
icebp
lods
add
or
xor
loope
call
rcr
or
ss
lahf
shll
lret
cmp
inc
cwtl
inc
pop
xchg
mov
dec
pop
lods
aas
sbb
in
sub
mov
in
stos
cmp
inc
arpl
rolb
subl
push
test
xchg
cmp
sub
clc
mov
out
cmpsl
test
cmpsl
cltd
rcl
and
xorl
sub
push
sbb
jnp
push
mov
add
jmp
dec
xor
in
out
dec
jns
lahf
gs
test
dec
mov
or
sbb
jbe
rcrb
cwtl
cli
insb
sub
xchg
adc
push
std
into
mov
jne
aad
in
sub
lock
push
pop
repnz
dec
lahf
in
mov
bound
sahf
adc
es
adc
add
test
ss
and
lret
push
lock
cmp
xchg
imul
das
push
inc
lods
adc
aas
adc
sbb
jne
jl
xchg
test
in
sub
stc
or
andl
sub
cmp
cmp
pop
dec
and
fidivrs
leave
mov
int3
push
push
adc
or
xchg
pop
sub
mov
mov
xchg
mov
fisttpll
dec
sbb
mov
jmp
mov
pop
test
ja
scas
mov
sub
pop
mov
sbb
out
test
adc
lock
dec
fldenv
pop
popa
and
inc
popf
test
push
subb
lods
and
outsb
cmc
push
sbb
inc
ds
jmp
jmp
add
insb
pop
data16
jo
push
inc
iret
shlb
rclb
or
setne
out
das
shll
stos
popf
or
mov
cmp
mov
imul
mov
lock
jo
imul
addr16
cltd
mov
pop
push
cmp
in
mov
ficompl
leave
stos
mov
loope
dec
xchg
dec
outsl
sti
cmp
loop
lret
adc
push
and
sbb
repnz
cwtl
ja
into
add
sub
or
fildl
es
push
xchg
xchg
sbb
fs
insl
and
pop
lcall
and
pop
syscall
ret
fsubrp
sti
repz
bound
pop
add
pop
inc
sbb
repnz
mov
mov
inc
hlt
mov
push
xor
sbb
jo
dec
in
xchg
push
mov
pop
xchg
jne
sbb
push
cmp
xchg
jmp
test
xchg
pop
clc
cmp
adc
fmulp
inc
cmpsb
xchg
test
out
xor
mov
pusha
jmp
mov
nop
mov
sub
adc
sub
cmp
cmpsl
push
loop
push
pop
jge
movsb
bound
fcmovne
test
push
and
mov
je
pop
push
pop
mov
cmp
jne
pop
cmp
std
int
movsl
lret
cmp
loop
lock
or
out
mov
mov
fnstcw
rol
es
cmp
gs
cmc
mov
imul
xor
sub
mov
push
out
gs
jle
lea
stc
popf
in
xchg
jo
xor
pop
loop
push
fsubs
adc
add
and
cld
mov
push
mov
cmp
sub
in
add
mov
dec
iret
lods
js
movswl
sub
mov
bound
sub
adc
jne
imul
iret
js
mov
rcrl
jge
cmp
cmpsb
fisubs
outsl
jecxz
fildl
sub
js
clc
mov
xchg
into
xorl
popa
je
and
fstpt
mov
jne
dec
cmpb
or
imul
lret
rclb
dec
outsb
adc
pop
jb
fwait
sbb
pop
push
xor
mov
ja
mov
inc
out
fs
or
adc
mov
mov
adc
cmp
aam
adcb
outsl
push
scas
add
nop
rolb
xlat
and
sub
jo
movsb
decl
decb
jnp
rcr
mov
fistpl
mov
ds
test
or
xchg
movsl
sub
bound
add
mov
lock
mov
out
pop
mov
xchg
scas
sub
push
negb
mov
and
lods
jmp
sarb
unpckhps
pop
lret
push
mov
out
push
push
push
mov
sub
cs
pop
int
insb
fnstsw
rcl
scas
push
adc
popf
fldz
and
ficoml
pop
mov
je
jae
notl
ret
lahf
shrb
sbb
shrl
addr16
add
repz
cltd
dec
cmpsb
insb
stos
lock
jne
pop
sbb
aad
xor
push
js
sbb
push
push
mov
insb
pop
addb
popa
out
mov
push
push
mov
rclb
cmp
aad
mov
dec
daa
js
nop
testl
cmp
xor
mov
xchg
loope
nop
fxam
cltd
mov
xor
aas
mov
shlb
test
mov
mov
fldenv
cmp
jmp
mov
xchg
jb
repz
jle
pop
call
imul
ret
jb
inc
in
cmp
push
rcll
lock
mov
cmp
dec
loope
cmp
push
xor
into
stos
cwtl
xchg
sub
add
cld
loopne
ja
fcompl
subb
in
cmp
cmpsl
repnz
addr16
pop
fdivrs
arpl
scas
vpshlq
xor
jg
rcrl
jnp
and
xor
movsl
sbb
pop
sti
add
jo
and
sahf
loop
push
push
fs
pop
into
in
xchg
in
cmpsb
jno
inc
mov
stc
or
mov
inc
ret
mov
mov
pop
shrl
js
cwtl
and
outsb
push
call
stos
sbb
aaa
icebp
xor
fisubl
repnz
pop
adc
cli
push
lds
mov
jnp
jmp
inc
sub
dec
cli
push
push
mov
or
mov
and
clc
sti
pop
mov
jmp
das
loope
sarb
adc
pop
pushf
stos
push
push
stos
mov
ds
dec
xchg
test
or
mov
loop
das
test
adc
test
pop
ds
sti
rcll
push
fwait
mov
push
scas
push
addr16
pop
jmp
and
lods
cmp
xchg
xor
cwtl
bswap
push
inc
andl
mov
dec
int
or
das
fildl
divb
add
fiadds
roll
jbe
jbe
sub
or
loopne
or
cli
sti
mov
mov
jge
mull
xor
orb
and
pop
push
pop
sub
mov
pop
std
roll
test
mov
dec
cmp
fisubrl
push
jne
clc
push
cmp
xchg
pop
in
push
in
adcl
stos
or
inc
xor
inc
pop
icebp
pop
add
movsl
mov
mov
loop
js
cmp
aam
rcl
or
push
out
fcmovnu
call
inc
fadd
mov
mov
leave
je
xchg
sub
or
repz
lods
push
sbb
mov
enter
xor
in
fcmovbe
push
sarb
pusha
xor
dec
cmp
push
push
loop
sbb
mov
insl
xor
das
xchg
ds
sbb
les
xchg
cmp
out
pop
shll
adc
jl
arpl
leave
imul
add
and
push
push
dec
push
adc
in
mov
mov
pop
outsb
or
adc
fsubrl
mov
pop
xlat
dec
aam
cmp
out
mov
xor
ret
dec
pop
pop
iret
js
fimuls
or
loopne
jns
sub
xchg
jl
lods
fstl
into
pop
cld
pop
icebp
mov
mov
cmp
sbb
in
or
cmp
push
imul
fcompl
xor
loopne
inc
scas
cmc
mov
pop
cmp
mov
inc
pop
in
cmpsl
xor
dec
adc
cmp
dec
bswap
cmp
loopne
add
sub
jle
popf
call
les
std
stos
mov
lds
push
push
or
jne
insl
in
call
lods
dec
or
sahf
and
repz
push
add
pop
dec
push
push
mov
imull
cli
cmc
pop
nop
add
inc
repz
pop
int3
ja
cmp
cs
jae
cmc
mov
inc
insl
cld
adc
add
call
mov
stc
xor
push
mov
xchg
mov
clc
jne
xchg
push
repnz
orl
loopne
jbe
jmp
pop
insb
hlt
jo
sub
imul
cld
mov
mov
pushw
pop
pop
enter
pop
out
pusha
cmp
inc
pop
cmp
xor
loope
addb
rcrl
cs
jb
js
fisubrl
add
ret
add
adc
daa
testl
pop
pushf
lods
or
pop
cmpb
dec
cmp
ljmp
test
in
pop
movntps
and
xor
or
insb
in
or
lcall
jns
sti
pop
test
push
loop
add
imul
mov
outsl
sti
pop
stos
fdivs
insb
js
lea
sub
lcall
fwait
es
loope
repnz
xor
lock
lcall
cld
popf
xor
xor
shlb
sbb
jecxz
xor
aam
imul
lea
xlat
lret
rol
js
xor
call
mov
adc
adc
orb
mov
out
dec
dec
mov
or
fadds
mov
int3
dec
fstps
sub
xor
pop
mov
push
imul
lret
jg
mov
mov
dec
xor
inc
dec
sbb
adc
imul
divl
bound
stos
mov
mov
dec
jae
lahf
dec
jno
lcall
mov
xchg
xor
adc
test
mov
outsb
mov
aaa
push
push
mov
and
adc
inc
pusha
or
xlat
insl
in
mov
negl
cmp
inc
andnps
enter
mov
mov
add
add
jp
mov
je
xor
xor
inc
out
mov
pop
mov
mov
xor
adc
xchg
cmp
icebp
xor
add
xor
push
add
test
xor
or
outsl
lods
lods
repz
test
movsb
or
xchg
out
gs
sub
jbe
push
inc
les
roll
es
or
mov
jmp
sub
jo
xor
decb
jge
daa
lock
loop
repz
loopne
jns
test
ja
or
cmp
les
daa
cmp
sbb
outsb
mov
push
inc
popa
clc
mov
pop
jnp
inc
repnz
sti
ss
ljmp
inc
outsl
call
inc
nop
mov
jo
mov
movsb
pop
test
sbb
loope
cmp
aaa
sar
mov
and
sub
mov
jae
shl
ja
jle
mov
shrd
adc
mov
mov
lea
xchg
hlt
sub
je
fmulp
adc
std
repz
mov
dec
mov
push
adc
out
jns
and
in
sbb
mov
repz
jg
sbbl
stc
push
jae
loopne
cmp
mov
adc
outsb
inc
jg
lret
and
xor
shrl
test
jo
test
add
pop
adc
jb
popf
sbb
mov
rep
mov
fiaddl
outsb
pop
fwait
jae
xlat
mov
jns
xchg
mov
stc
add
mov
lock
in
aaa
test
xchg
shlb
lcall
rolb
je
push
fildl
inc
sub
insl
jle
bound
adc
popa
sub
mov
mov
int3
test
movsl
inc
push
and
out
imul
or
or
mov
rcrb
clc
fwait
outsb
out
and
movsl
dec
jmp
loope
push
stc
fiaddl
xchg
jp
rorb
mov
cwtl
movsb
call
dec
cmp
ds
or
sbb
jnp
pop
sub
mov
sahf
out
sbb
lds
mov
push
nop
mov
push
cmp
push
push
mov
rol
add
adc
lahf
js
mov
fidivrs
in
lock
das
jl
dec
cmc
push
push
push
sar
xchg
jns
xor
jmp
ljmp
mov
and
out
add
cs
cld
aaa
or
imul
inc
mov
xor
mov
adc
jmp
ds
in
mov
les
pop
inc
and
pusha
jo
faddl
inc
push
and
loope
enter
mov
fwait
mov
jge
lahf
jge
jecxz
int3
fstpl
add
cli
xor
lds
cwtl
mov
cmp
shl
test
inc
xorb
fstl
mov
mov
pop
into
add
and
inc
je
and
inc
sbb
test
lret
and
cmc
mov
sbb
ret
or
iret
mov
mov
mov
xchg
cld
lret
mov
inc
mov
cli
fs
cwtl
jne
aad
aad
outsb
xchg
cltd
cltd
sub
xor
mov
and
mov
or
add
jnp
aad
and
push
test
js
cmpsb
adc
loopne
cwtl
lret
rorb
adc
jns
stos
lcall
push
sub
mov
fstpl
lcall
loope
cwtl
dec
and
enter
xor
aam
add
test
fwait
jge
lds
push
int3
jbe
dec
xchg
jne
loopne
jno
lret
pop
out
cmp
mov
fdivr
lret
cli
fsubrs
xor
and
or
or
aad
andb
pop
xchg
inc
ljmp
enter
bound
jmp
mov
loopne
in
das
bound
push
push
dec
jo
sbb
xor
rcrl
hlt
sub
rcr
cmc
rclb
fcompl
dec
inc
cmp
test
movsb
and
rcll
xor
pcmpgtd
bound
loopne
test
adc
pop
cmpsb
cmp
inc
in
ret
pop
cltd
pop
lcall
jle
push
mov
jno
cwtl
xlat
gs
mov
nop
ss
cmpsl
ss
pop
or
repnz
rorl
jmp
nop
aaa
push
mov
aaa
movb
mov
cs
stos
in
bound
lock
repnz
sbb
arpl
jg
pop
xor
or
inc
cwtl
jmp
xor
arpl
mov
outsb
mov
or
test
js
repnz
imull
xor
adc
mov
call
lea
xchg
mov
xor
mov
in
pop
cmp
xor
insl
lds
ret
pop
call
insb
divb
push
lcall
aad
and
int3
add
mov
dec
or
add
sahf
sti
lock
lea
test
mov
xchg
mov
mov
out
icebp
xchg
dec
fstl
mov
push
scas
jle
jmp
sti
or
dec
adc
mov
out
cmp
test
loop
mov
inc
pop
test
loope
add
sub
enter
loop
notb
sbb
out
lret
push
arpl
ljmp
aaa
addb
lret
test
xor
cmp
mov
mov
or
xor
and
mov
and
mov
pop
add
fisubrs
insb
lcall
cs
ds
sbb
cmp
iret
fldenv
lret
pop
mov
mov
xor
and
sbb
dec
sarb
stos
push
scas
shlb
and
xlat
mov
mov
pop
xchg
sbb
enter
lret
lods
mov
cli
xchg
mov
and
fisttpl
imul
mov
dec
xor
cmp
sar
cli
test
and
icebp
inc
or
xchg
and
sbb
std
mov
outsb
scas
lret
lahf
shll
mov
bound
mov
loopne
in
stc
pop
pusha
jmp
push
inc
loope
ja
mov
add
out
mov
in
pop
and
movsb
xchg
xchg
call
pop
mov
cmp
js
cmp
push
pop
or
jns
imul
sbb
jno
jb
cmp
xchg
imul
test
aas
repnz
push
sbb
pop
fwait
sub
lock
push
jmp
mov
mov
in
fadd
adc
xchg
mov
cltd
or
sahf
and
lret
sbb
fists
dec
jns
cmp
orl
enter
cmp
fistps
les
and
in
xchg
push
inc
pusha
inc
adc
mov
lock
jbe
das
mov
dec
loopne
test
pop
fs
scas
xchg
shrb
mov
test
loop
jmp
into
xlat
cmpsb
xor
sub
push
xchg
test
xchg
stos
xchg
mov
ds
mov
loope
outsb
or
leave
mov
arpl
xchg
imul
or
mov
sti
lods
rcrl
aad
inc
cmp
adc
imul
mov
mov
loop
popf
aad
and
xchg
psubusw
jle
and
insl
add
into
fldcw
pop
and
in
lds
and
jle
mov
xchg
push
and
gs
and
in
pop
xor
and
inc
push
cs
int3
xor
jge
dec
push
sahf
jl
cmpl
lcall
add
lods
jo
lret
sbb
repnz
cwtl
xchg
adc
daa
cmpsb
sbb
sub
and
pop
inc
dec
add
out
data16
je
notb
and
xorl
pusha
sahf
gs
lret
sbb
shl
mov
out
push
pop
xchg
jge
inc
dec
xor
xor
in
xchg
mov
mov
es
push
mov
jp
out
std
aaa
in
mov
or
or
or
sub
xor
pop
imul
out
daa
loopne
or
sub
in
dec
add
cmp
sti
xor
mov
add
fidivl
xchg
clc
inc
ficoms
xlat
pop
decb
cmpsb
pusha
rolb
and
push
mov
cmpsl
bound
push
clc
xchg
stos
xlat
imul
jle
fs
cmp
fsub
subl
repnz
dec
mov
or
mov
push
or
cmp
movsl
mov
xchg
inc
in
jno
add
rolb
movsl
sarl
jns
mov
cli
jp
test
movsb
insl
xchg
mov
fcomip
lds
push
fadd
sbb
push
dec
sti
out
mov
mov
jl
cmp
cmp
mov
neg
ret
fildll
sarb
test
ss
jg
push
dec
cli
or
pop
insl
mov
jae
aam
push
inc
fdivs
popf
sub
mov
fwait
int3
push
dec
push
cmp
pop
stos
clc
imul
push
sub
add
andl
std
into
sub
push
xor
in
fs
sbb
imul
cmp
iret
inc
xor
mov
jae
sub
stc
fsubrs
inc
es
scas
cmp
mov
xchg
push
iret
adc
mov
xchg
pop
inc
push
sbbb
xchg
loope
rol
cmp
fsubr
insb
pop
loope
pop
mov
sarl
mov
or
ds
std
aas
dec
and
jmp
push
scas
sub
push
fwait
xchg
leave
rcr
cld
jecxz
inc
mov
in
mov
push
xchg
lcall
push
push
cmc
mov
sbb
jmp
sub
pop
push
inc
xor
push
mov
add
pop
lahf
mov
inc
cmp
and
popf
add
outsb
mov
loop
imul
loope
orl
out
pop
cwtl
rolb
out
bound
std
xor
int3
aad
lret
pop
icebp
in
cmp
lahf
shrl
push
lods
test
test
push
cs
pop
cli
dec
leave
xchg
or
xchg
add
xor
ret
and
push
inc
cltd
and
jo
push
mov
out
and
inc
je
xor
xchg
push
pusha
add
pop
orb
mov
mov
add
imul
repnz
orb
sub
mov
lds
sub
jb
stc
stc
enter
push
jmp
cmp
loop
mov
iret
repnz
andb
rclb
push
jo
sbb
outsb
push
out
jl
cmp
or
pusha
ret
loop
repz
out
in
out
jp
dec
icebp
mov
ljmp
sbb
xor
test
dec
mov
push
xchg
mov
fldl
lret
cmp
sbb
jle
and
fcoms
loop
scas
inc
pop
andb
jge
mov
in
xchg
std
test
cmc
xchg
inc
add
pop
or
fcmove
leave
jo
and
jne
sti
jmp
pop
gs
jg
adc
add
mov
mov
std
imull
cmpb
lahf
arpl
ds
pop
pop
fstl
inc
nop
xchg
iret
out
mov
sub
cmpl
jo
out
inc
sub
pushf
rcrl
mov
rorb
dec
stc
cld
cmp
or
mov
or
sbb
inc
mov
pop
sahf
subl
adc
pop
fsubr
dec
add
cmp
loope
or
test
in
mov
repnz
jo
cli
jne
push
add
pop
adc
ror
add
or
mov
cwtl
sbb
adc
test
pop
xor
mov
fcoml
and
repnz
dec
lret
iret
cltd
pop
xor
stc
cwtl
lret
pusha
icebp
das
inc
lea
pop
lcall
out
cmp
clc
mov
adc
lods
xchg
dec
jo
jmp
stc
jmp
inc
dec
cmp
sub
outsl
test
ljmp
push
je
xlat
mov
xor
mov
loope
ljmp
xchg
in
dec
pop
call
loope
mov
mov
mov
ds
mov
mov
ds
sbb
test
adc
sbb
jae
call
xor
and
pop
mov
pop
jo
jg
and
mov
xchg
inc
addr16
test
mov
mov
mov
enter
scas
jnp
pop
mov
or
add
jns
notb
mov
dec
in
cmpsb
insl
out
ds
imul
inc
or
in
mov
add
lods
rcrb
out
sub
sarb
je
loop
shrb
subl
dec
lods
xchg
insl
xchg
test
or
jp
dec
lods
dec
mov
arpl
cmp
mov
mov
dec
cmp
popa
jb
mov
and
dec
imul
subl
test
xor
adc
cmp
sbb
sbb
js
dec
fs
inc
data16
adc
cwtl
mov
xchg
jno
loop
test
lods
push
xchg
es
aas
repz
shlb
dec
pop
add
imull
mov
mov
or
imul
lahf
test
xor
stos
or
cmpsl
adc
push
lods
mov
sahf
push
andl
dec
shrl
in
cmp
lret
sub
jnp
loop
in
dec
test
jg
adc
push
mov
hlt
pop
add
fcompl
mov
mov
jecxz
mov
lock
mov
orl
enter
rolb
mov
addl
fistpl
and
lret
lock
xchg
push
movaps
lret
cmpsl
mov
jecxz
and
jbe
jb
inc
and
das
lock
cmp
shl
rclb
push
jne
mov
jle
cmp
cmpsl
roll
es
adc
pop
mov
mov
and
call
fcomps
adc
je
iret
or
jnp
jne
lea
imul
int
xchg
sar
push
icebp
push
add
stos
filds
rorl
mov
ljmp
arpl
aam
inc
fwait
adc
adc
stos
push
fimuls
int3
mov
xchg
push
adc
xchg
jl
push
lock
mov
insb
fildl
jb
mov
idivl
jl
mov
pop
push
cmp
stos
repz
xor
cltd
sub
inc
fidivl
mov
test
loope
push
pop
ret
loopne
ds
push
or
cmp
sti
mov
cld
jg
fldt
mov
pop
jnp
mov
fwait
inc
pop
mov
inc
clc
jo
adc
mov
mov
test
sbbl
rcrl
pop
mov
xchg
lea
pop
pop
ret
sarl
out
cmp
mov
dec
inc
divb
xchg
fcoms
ljmp
nop
in
lret
push
mov
cmpb
imull
jmp
es
gs
xchg
sbb
sbb
sbb
xchg
cwtl
jo
mov
cmp
rcrl
inc
sbb
out
loope
lock
pop
jmp
icebp
and
xor
rcrl
and
jbe
sbb
jo
push
push
iret
mov
pushf
inc
jbe
pop
out
fiadds
fwait
mov
mov
adc
jbe
gs
fistl
xchg
adc
iret
jne
add
pop
mov
fwait
xlat
push
insl
mov
pop
adc
in
mov
jl
mov
ficoml
loop
ljmp
pop
nop
and
test
in
int3
es
pop
shll
in
hlt
dec
cmp
test
jb
in
mov
cmc
cld
push
inc
xlat
stos
cmp
jl
mov
push
movsb
popf
and
cmp
pushf
pop
outsl
add
pop
rclb
pop
insl
int
popa
sbb
or
xor
scas
jmp
cli
push
fnstenv
sub
insb
fildll
out
out
cs
and
cmp
rclb
mov
loopne
add
mov
jae
into
clc
stc
cmp
sbb
lahf
sub
jl
or
inc
fbld
outsl
or
addr16
ljmp
rorb
cmp
push
cmp
xchg
or
xlat
enter
ds
bound
mov
fmul
int3
in
cmp
push
shll
icebp
pop
gs
jno
stos
mov
sbb
mov
es
call
adc
or
pop
xlat
mov
outsb
fdivl
leave
arpl
lret
jne
sub
inc
xchg
enter
adc
mov
daa
inc
mov
pop
jge
xor
in
dec
clc
or
lcall
rcr
mov
add
lcall
mov
xchg
pop
notl
loopne
test
dec
jo
test
jno
xor
jmp
sub
pop
mov
cli
ds
fisubrl
sub
movsl
inc
or
mov
enter
dec
inc
push
and
cmp
mov
jl
dec
push
sbb
fidivl
stc
xchg
mov
mov
xor
cmpl
cld
test
pusha
push
shrb
jo
adc
loop
loop
cmp
scas
stos
mov
jg
inc
aaa
push
mov
push
pop
add
adc
popf
outsb
cmp
mov
sub
mov
pop
mov
dec
mov
xor
lods
dec
dec
fwait
adc
inc
add
xchg
js
sub
adc
insl
ss
js
insb
sub
nop
daa
sub
push
xor
mov
push
push
mov
outsb
les
roll
js
inc
daa
jne
and
fcom
push
xchg
cltd
repnz
mov
push
inc
sar
outsb
adc
insl
stos
ror
dec
adc
mov
dec
stc
ja
icebp
push
nop
sub
inc
adc
sbb
sbbb
andl
jnp
jecxz
fstps
test
and
cmp
jecxz
fnstenv
imul
inc
cmp
inc
mov
jg
xorl
push
and
mov
lret
jmp
jne
stos
shrl
xor
std
cmp
jl
cmp
rol
jnp
imul
aad
sbb
mov
lock
pop
pusha
loopne
push
sbb
mov
mov
mov
into
and
xor
imul
xlat
mov
imul
adc
xchg
jae
adc
xchg
cmp
loop
mov
mov
push
inc
and
jmp
push
and
push
add
push
bound
xchg
and
push
mov
cli
bound
adc
lahf
adc
jne
sub
out
icebp
shr
jo
cwtl
loope
lahf
clc
mov
jnp
fnstenv
arpl
jnp
and
or
cwtl
dec
rcrb
hlt
or
or
mov
scas
lcall
jb
add
jae
insb
test
aam
loopne
or
pushf
mov
popa
push
int
add
xchg
and
cmp
sub
ja
cltd
imul
out
push
and
mov
ss
pop
sub
jbe
cmpsb
pop
int3
arpl
pop
dec
test
adc
add
cmp
or
xor
or
mov
mov
xchg
and
dec
jecxz
in
mov
pop
sub
stc
int
dec
and
ds
or
lea
loopne
push
xor
push
fbld
jns
loop
push
loop
out
cmp
xchg
xchg
or
inc
enter
sub
xchg
sub
test
xchg
mov
rorb
jbe
repz
and
pop
in
push
ds
fdivs
movsl
das
cli
jecxz
or
adc
shrb
repnz
mov
xchg
ds
outsb
insl
aam
sbb
mov
inc
adc
sbb
in
jp
mov
push
lea
testb
aad
adc
pmaxub
aam
fstpt
jns
mov
in
cmpsb
inc
aam
adc
pop
sub
insb
les
inc
jl
jne
push
out
int
cwtl
push
ret
or
mov
jb
jbe
lods
lcall
sub
adc
jo
ret
mov
cmp
mov
xchg
mov
out
lea
scas
test
mov
movsl
mov
fmul
cltd
cli
scas
bound
cmp
rclb
jle
iret
js
or
push
fs
je
push
mov
pop
add
dec
inc
jno
cmp
loope
andl
add
mov
push
inc
push
or
popa
out
sub
xchg
andl
inc
lidtl
idivb
xor
or
out
jns
in
cmp
cmp
adc
sarb
imul
jne
ss
fsubrs
jnp
aam
je
jns
and
sbb
cmpsl
jno
pop
mov
js
cmpsb
mov
stos
and
fldt
or
daa
insl
pop
xchg
repnz
push
scas
idivl
lea
and
add
cmp
mov
clc
mov
aas
xor
incl
sub
test
les
pop
insb
in
mov
repz
lock
rcll
adc
loopne
dec
ret
addb
jge
inc
ret
mov
sub
aas
cld
shll
int3
repnz
dec
rcrb
adc
icebp
pop
shll
sahf
dec
out
cmp
xchg
adc
fildll
cmp
scas
out
int3
push
or
sub
fcomps
aad
xchg
lcall
and
adc
add
scas
int3
sub
imul
inc
daa
jbe
cwtl
fidivrl
jmp
loop
push
cli
arpl
and
push
dec
pop
lret
andl
jmp
mov
xchg
dec
push
int3
subl
lods
sbb
pop
aam
enter
mov
ljmp
and
jno
or
lds
clc
pop
into
mov
imul
ljmp
pop
pop
xchg
mov
and
and
add
pop
lock
cmp
and
arpl
dec
icebp
cs
or
xor
cli
divb
jmp
cmp
dec
sbb
sub
in
out
cmp
cmc
push
rolb
jecxz
mov
xchg
into
stc
cwtl
repz
es
jmp
int
enter
and
cmp
sti
inc
sbb
or
sub
push
test
xlat
push
cmc
and
test
pop
push
add
fists
sbb
sbb
outsl
mull
fildl
ja
cmp
jnp
lcall
xor
imul
arpl
or
push
in
adc
divb
or
cmp
aaa
push
fistl
mov
or
sahf
sti
clc
xchg
add
cmp
mov
cld
mov
and
mov
jg
jge
lds
test
mov
into
cmp
in
iret
xlat
xchg
enter
fwait
scas
arpl
jae
lret
loop
add
push
popf
cmp
sub
jne
pop
out
stos
xor
pop
iret
jmp
and
push
into
in
out
lods
add
dec
das
adc
and
mov
or
mov
jnp
cmpb
push
test
js
into
sti
stos
jmp
cs
cmp
push
es
rcrl
dec
push
int3
inc
sub
sbb
pop
fistpll
leave
out
jle
push
addl
andl
jbe
and
sbbb
mov
fidivrs
and
mov
aas
pop
mov
jne
pop
sub
xor
ljmp
jno
pusha
jb
mov
fucomip
jmp
test
mov
mov
lods
xchg
fldcw
mov
add
dec
out
or
movsl
ja
out
mov
push
push
lahf
sbb
icebp
shlb
fsts
loopne
mov
add
dec
out
mov
xchg
xchg
xchg
jo
lods
jo
sbbl
dec
in
sub
pop
gs
add
pop
dec
out
cmpsb
inc
inc
jp
pushf
jno
or
scas
jmp
outsb
nop
stc
xchg
mov
arpl
sub
imul
test
cli
xor
cmpsb
cli
jmp
or
es
repnz
mov
aaa
rolb
scas
bound
outsb
lret
cli
outsl
dec
shll
and
lahf
ret
jmp
jo
mov
sti
sbb
iret
popa
shll
pop
repnz
mov
xchg
or
daa
stos
push
lea
mov
pop
ret
or
roll
arpl
mov
fdivrl
cs
bound
sbb
mov
jp
les
mov
gs
bound
xor
cld
stos
imul
adc
pop
shrb
sbb
clc
push
mov
push
popf
sbb
call
or
pusha
mov
test
icebp
jne
cmc
outsl
mov
cmp
fists
add
xchg
push
mov
aaa
loop
dec
xchg
stos
cld
sbb
dec
inc
add
nop
pop
nop
cmp
dec
pop
mov
or
shll
fcompl
pop
testb
mov
mov
in
jle
sub
inc
jp
cld
imulb
inc
jge
dec
push
cmpsl
ljmp
push
lea
fisubrs
popa
push
fcomi
dec
push
std
cmovno
mov
mov
pushf
and
sub
and
popf
and
pop
mov
pop
and
mov
movb
imul
cmp
ljmp
xchg
xchg
stos
aas
fcoms
aas
repz
frstor
je
push
cmpsb
pop
inc
fldcw
movsb
cmp
icebp
dec
insb
xor
scas
and
push
inc
daa
cmp
dec
sbb
jne
and
pop
xor
fisubl
mov
cmp
ret
repz
shrl
pushf
push
jmp
cmp
test
sub
iret
pushf
cmp
data16
je
push
pop
sub
mov
pushf
push
inc
aaa
lret
adcl
das
cmc
in
mov
add
insl
lods
je
sub
negb
pop
test
int
leave
rcrb
and
add
andl
cmp
xor
pop
je
dec
mov
mov
inc
cmp
rcrb
sub
lods
xchg
daa
mov
or
mov
mov
mov
cmpsb
inc
outsl
sbb
mov
pop
or
dec
movsb
scas
push
adc
cltd
mov
rcrl
sbb
lods
xor
xchg
scas
xor
pop
dec
cmpb
fcoms
sti
pop
push
pop
jmp
in
adc
mov
out
mov
sub
fistl
add
jae
or
bound
cmp
cs
sarl
arpl
pop
testb
lret
xchg
fsubrp
inc
xchg
cwtl
mov
popf
xchg
test
outsl
mov
mov
daa
jne
sbb
test
and
add
stc
stc
aaa
jp
dec
cs
cmp
jmp
mov
push
inc
cmc
inc
mov
or
xor
jl
dec
pusha
lea
mov
loopne
fcoml
jno
mov
dec
mov
or
js
lods
mov
fmuls
jb
movsl
int3
inc
and
cmp
mov
mov
aam
and
hlt
cmp
and
add
repz
mov
les
mov
pop
or
nop
pushf
push
pop
jge
add
sub
and
and
pusha
test
das
mov
lcall
jnp
xchg
fistpll
xor
sub
xchg
cld
or
xlat
lcall
ja
ljmp
loopne
roll
pop
das
in
and
add
mov
test
adc
adc
shl
and
jbe
cs
mov
add
xor
adc
mov
loopne
jno
loopne
into
movsb
sbb
roll
pop
jecxz
out
movsl
out
popa
add
cs
xchg
out
std
out
cmpsb
push
mov
dec
mov
cmpl
xor
fwait
dec
add
inc
movsl
mov
push
pop
les
insl
test
adc
popf
jbe
pop
pop
lret
rcll
in
into
subl
ret
shr
lods
push
jo
inc
jo
call
aaa
stc
xchg
mov
jbe
stc
addr16
adc
leave
fcompl
lds
inc
in
sbb
mov
loop
jbe
dec
inc
sarb
xor
dec
mov
mov
jecxz
subl
or
fistps
out
loopne
test
jb
fiaddl
pop
fidivrl
mov
lock
imul
stos
out
mov
scas
in
in
stos
cmp
xchg
imul
push
mov
jb
cs
sbb
xlat
xchg
movsl
jl
jecxz
loope
adc
fwait
push
fimuls
mov
lods
mov
dec
pop
rolb
pop
test
not
sbb
sbb
leave
sub
mov
in
rclb
pusha
mov
ror
mov
stos
adc
jge
jo
cmp
inc
inc
jp
push
push
mov
push
mov
mov
xor
jne
fcomps
mov
loopne
lods
dec
xlat
int3
fnstcw
scas
pushf
xchg
and
sbb
int
add
cmpsb
lahf
and
pop
xchg
mov
mov
sbb
cmp
mov
adc
xchg
sbb
lret
jmp
adc
cmp
inc
ret
loopne
movl
xchg
fstpl
cs
insl
js
hlt
sarl
xor
mov
addr16
mov
jl
jecxz,pt
mov
xchg
and
or
mov
stc
cltd
adc
xor
add
lods
test
sub
ljmp
cmp
shlb
mull
sub
lea
adcb
or
je
adc
cmp
ret
mov
and
inc
mov
rcl
inc
mov
test
dec
or
lods
pop
mov
in
addl
lcall
mov
pop
dec
xchg
sbb
insb
jp
outsb
lock
push
loope
dec
mov
adc
cld
and
ffree
scas
clc
out
sub
les
nop
pop
loop
xlat
jp
mov
xor
jg
out
cmp
or
lods
dec
xor
nop
sbb
push
and
leave
xchg
out
into
in
sahf
gs
fnsave
add
jno
and
pop
mov
cld
pushf
lahf
std
nop
dec
jle
sbb
mov
and
adc
push
pop
mov
jns
adc
les
out
xor
inc
es
mov
fisttpl
cmp
xlat
int
out
pop
mov
mov
push
xchg
mov
jb
into
arpl
arpl
jno
jmp
mov
imul
ja
je
leave
xor
test
loopne
lods
xchg
sbb
add
push
inc
scas
sub
cmpsb
fcomp
sbb
pop
jl
rcr
dec
inc
dec
mov
fsubrs
mov
outsb
lock
pop
or
fmull
or
sbb
shlb
in
scas
push
sub
mov
adc
sub
adc
xorl
inc
lret
jns
pop
inc
outsl
fwait
push
sub
ret
mov
xlat
sbb
ljmp
adc
into
xor
ja
sub
data16
mov
jbe
push
es
in
pusha
dec
test
icebp
jl
push
daa
icebp
xchg
or
jp
iret
jecxz
and
outsl
push
add
out
ss
xchg
xchg
pop
test
ljmp
movsb
je
xor
or
xor
test
sub
aas
pop
lds
mov
daa
scas
push
xchg
xchg
cltd
push
loop
ret
imul
movsl
dec
aad
sub
gs
mov
jle
scas
popf
outsb
rcrb
dec
push
out
js
fnstcw
inc
fwait
ret
mov
add
pop
pop
xorb
xchg
rorl
cwtl
pop
xor
icebp
cmp
push
scas
pop
pop
nop
adc
lret
sub
inc
cwtl
addr16
fs
jnp
lret
adc
aas
pop
dec
push
fildll
sub
sbb
jo
iret
add
xchg
xor
sbb
jge
cli
xor
gs
xor
and
push
pop
add
data16
pop
scas
stos
lcall
pop
addr16
pop
xchg
roll
std
jnp
pop
mov
fstpl
fbstp
adc
push
cmp
shr
fsubrl
or
call
pop
dec
add
add
dec
addr16
es
imul
rcl
xchg
sub
stos
xor
inc
and
movsl
js
jp
adc
out
push
mov
xor
pop
lock
pop
mov
repz
cmp
dec
adc
aad
cli
in
les
mov
in
jae
mov
loope
xor
mov
ret
mov
cs
ret
sarb
pop
cld
mov
mov
icebp
insb
in
sub
shll
jb
movsl
test
icebp
mov
push
das
stos
popa
sbb
inc
test
sbb
popa
mov
sahf
cmp
outsb
fsubrs
movsb
fisttpl
popa
test
out
push
sahf
push
pop
out
mov
lret
jp
or
int3
inc
mov
popf
add
into
push
mov
data16
mov
mov
xor
dec
js
jg
sbb
mov
loop
mov
mov
mov
pop
scas
dec
xchg
ja
cltd
movsb
lcall
insb
cmc
mov
fs
cld
adc
push
mov
and
ret
pop
xchg
mov
mulb
mov
mov
ds
std
push
sub
cmc
jp
xor
in
cld
and
lods
fidivrs
stos
test
mov
cmpl
adc
adc
mov
or
movsb
mov
add
jbe
lds
sbb
push
jae
push
dec
loopne
and
mov
inc
push
inc
sbb
push
mov
shll
fisttps
mov
es
jno
cli
insb
pop
push
jbe
adcl
pop
pop
or
lahf
loopne
lods
jns
lret
movsl
popa
mov
add
scas
addr16
test
or
fsubp
test
dec
jno
xchg
popa
or
idivl
inc
insb
mov
sub
lds
cmpsl
sub
movsb
sub
or
xor
dec
sub
lods
lods
pop
inc
lret
enter
lea
aad
stos
mov
and
loope
mov
mov
sbb
mov
sbb
rcr
movsl
sbb
ljmp
clc
xor
insl
cmp
mov
cmp
pusha
int
movsl
stos
xor
rolb
lock
xor
loope
out
les
dec
cmp
dec
adc
pop
dec
sbb
xor
adc
stos
pop
shl
add
scas
lock
mov
pusha
mov
or
mov
rorb
inc
les
dec
lds
aam
out
xchg
mov
mov
or
sbb
es
mov
inc
lods
mov
xor
push
mov
lock
shrb
inc
jne
and
cltd
inc
sub
xor
stos
sbb
cmp
ljmp
dec
push
popf
test
sbb
jecxz
adc
call
pusha
jmp
and
add
test
push
shr
rcr
sbb
xchg
ret
push
mov
cltd
mov
push
jg
stos
lods
in
std
mov
leave
movsb
mov
push
mov
inc
xchg
inc
adc
cs
sub
scas
test
mov
xor
push
mov
sbb
mov
call
test
ljmp
lea
jecxz
icebp
dec
test
dec
aam
mov
mov
into
cmp
or
repz
push
enter
je
push
pop
add
fiaddl
pop
insl
ret
xchg
cltd
pop
loope
xor
shrb
out
cmc
cmp
and
fdivl
push
mov
addb
leave
js
xchg
xchg
jne
stos
mov
sub
mov
mov
lret
xor
lcall
and
pushf
bswap
adc
dec
stc
sub
jecxz
push
flds
cli
add
or
inc
push
ror
mov
mov
out
lahf
jle
lods
cmp
data16
imul
mov
lods
xchg
loope
adc
cmp
rcrb
mov
shlb
dec
scas
xchg
cmp
jge
cmp
cwtl
mov
test
out
xor
jno
jg
fistps
fstps
push
lcall
and
fnstcw
cmpsl
out
push
aaa
or
mov
mov
std
or
adc
mov
int3
mov
and
xchg
sbb
jno
gs
xchg
pop
repnz
jle
aaa
dec
imul
adc
pop
fcompl
sub
in
xchg
aam
lcall
stc
hlt
mov
dec
sub
push
enter
repnz
es
in
mov
push
push
or
mov
push
test
push
jecxz
sub
inc
insl
insb
out
pushw
xchg
shll
sbb
and
jne
ret
mov
mov
cli
push
nop
or
add
imul
scas
mov
shll
cmp
cmpsb
cmpsl
and
stos
fsts
add
jge
das
stos
adc
popa
adc
pusha
dec
test
or
out
cmp
cwtl
test
jg
mov
dec
psrad
push
and
jne
daa
pushf
pusha
sub
cli
repz
xor
sbb
inc
push
fildl
cmpsl
fcoml
inc
cmp
mov
imull
loopne
leave
std
fwait
idivb
xchg
sahf
hlt
and
insb
mov
add
add
adc
fs
sub
out
cmc
clc
std
add
aaa
fadd
push
add
mov
mov
int3
cltd
fdivr
addb
or
xchg
test
xchg
lahf
scas
add
cwtl
sub
int
fimull
fwait
push
enter
jecxz
test
pop
out
mov
test
adc
mov
add
les
inc
or
jae
ds
sub
mov
xchg
pop
mov
pusha
push
and
incl
stos
into
loop
mov
sub
mov
in
and
jecxz
es
sbb
int3
mov
lods
stos
cmp
repz
clc
jecxz
mov
pop
loop
inc
dec
incb
pop
mov
data16
cmp
or
mov
mov
outsl
mov
mov
repnz
add
or
shlb
inc
test
and
mov
and
ret
push
scas
or
sbb
xchg
pop
add
mov
pop
xor
or
add
pop
jbe
shr
mov
inc
adc
fs
faddl
and
and
or
lods
cmp
outsl
inc
mov
popa
stos
dec
jb
mov
cmpsb
scas
xchg
cmp
mov
mov
xchg
push
or
mov
sbb
adc
inc
in
pop
ss
imul
int
lret
in
xchg
xchg
and
lea
ret
popa
cmp
mov
fildll
inc
sub
into
das
pusha
mov
inc
xchg
dec
xor
scas
mov
mov
insb
outsl
or
dec
cld
jge
loop
sbb
and
mov
fildll
insl
aas
jno
imul
mov
xchg
outsb
xchg
or
incb
mov
cwtl
test
push
lods
fstpl
hlt
mov
in
rorb
push
and
fdivs
and
push
aam
push
std
mov
pop
jp
push
negl
lods
fwait
ds
or
and
insb
das
xor
xor
movsl
lods
lods
scas
pop
lcall
adc
mov
xchg
sub
shl
pop
xchg
xlat
jge
out
out
jns
fildll
push
cmp
sahf
dec
mov
or
stos
mov
notb
pushf
xorl
ss
xorl
mov
into
test
pop
sbb
and
out
adc
lret
subl
das
negl
andl
iret
inc
hlt
mov
dec
popa
inc
icebp
les
mov
sub
test
sarl
pop
fs
test
adc
aaa
jne
and
inc
push
in
divl
arpl
sub
mov
jb
mov
fnstenv
push
aad
lret
xor
dec
push
data16
jg,pn
lea
sub
sub
mov
int
stos
and
mov
daa
cs
not
daa
fwait
adc
cmp
and
mov
aaa
test
into
imul
out
out
out
movsl
imul
sub
mov
mov
je
nop
movsb
dec
loop
mov
aam
loop
insl
test
out
les
mov
addl
cld
out
adc
push
fldt
xchg
cmp
or
pop
push
hlt
rclb
lret
out
cltd
bound
jae
cmp
clc
jns
dec
nop
out
pop
sub
pop
ret
add
or
fcoms
incl
pop
push
out
jg
out
xchg
mov
mov
in
sub
cmp
andb
and
sub
arpl
jno
jecxz
movsl
stc
lods
pop
add
pushf
mov
push
mov
inc
fstpt
inc
xchg
pop
adc
cmp
es
rorb
mov
imul
adc
jle
pop
or
lods
adc
sub
inc
cmp
mov
fwait
out
jb
add
fcmove
add
xchg
xchg
popa
mov
fsubr
ss
sti
and
fisttpl
pop
mov
mov
lods
or
inc
pusha
mov
out
fimuls
ds
jnp
lcall
xchg
scas
pop
aam
outsl
pop
jecxz
fs
sti
hlt
pop
movsl
or
sub
dec
jno
jp
loope
push
or
sahf
pushf
push
push
orl
dec
dec
in
and
mov
aaa
insl
cs
icebp
cmpsb
dec
pop
icebp
adc
cwtl
adc
sub
jg
jbe
movl
outsb
adc
dec
adc
xor
std
xchg
cmp
addl
sarb
xor
xor
sarl
or
inc
pop
ja
sub
mov
xor
fsts
jg
addb
xchg
add
icebp
mov
shrb
aam
xor
inc
push
outsl
fadd
ja
scas
push
or
cmp
xchg
adc
pop
xor
xchg
aam
mov
xor
popf
lcall
fstpt
in
loopne
mov
cltd
fidivrs
loop
ret
push
icebp
ljmp
daa
mov
test
dec
or
int3
sahf
sbb
mov
cmpl
xor
cwtl
or
xchg
fdivrs
xor
jns
adc
jecxz
sub
popf
nop
sbb
ret
inc
inc
insb
xchg
and
xor
sahf
arpl
les
std
in
scas
loopne
pop
clc
jae
scas
xor
sbb
sub
subb
imul
imul
dec
rolw
daa
mov
mov
mov
subl
js
iret
push
fildl
mov
jbe
scas
outsb
subl
inc
fsts
jp
test
sub
mov
pusha
hlt
aam
fisttpl
decl
push
aas
loop,pn
and
loop
ret
inc
hlt
repnz
inc
fsubl
repnz
into
sub
inc
inc
cmp
xchg
negl
mov
clc
fnsave
jle
jle
aas
ja
arpl
iret
aas
cmp
pop
and
cmp
or
jne
mov
scas
mov
mov
mov
mov
cmp
daa
cmp
nop
jge
popa
jae
sbb
and
cmp
xchg
mov
sub
push
xor
in
jns
and
imul
pop
repnz
xor
pop
andl
mov
jmp
adc
xorb
xchg
jb
hlt
jg
loopne
scas
xor
enter
push
pop
sbb
aaa
imul
lret
jne
cmpsl
cli
xor
lret
add
mov
inc
mov
les
cld
imul
xor
and
mov
and
add
cmp
mov
dec
sbb
imul
mov
fsubrs
mov
mov
or
hlt
in
gs
sahf
mov
or
dec
es
inc
out
js
addr16
inc
lock
movsl
cmp
aam
outsl
sbb
stos
faddl
and
push
lcall
pushf
xchg
and
pusha
loop
dec
into
push
mov
sbb
add
and
mul
sub
mov
mov
inc
mulb
push
mov
adc
ds
repz
inc
in
adc
out
test
cs
cmc
jo
sbb
jno
sub
shlb
add
repnz
or
sub
sbb
sti
lods
and
repz
mov
xor
ss
mov
mov
pop
int
pop
push
in
push
mov
imul
and
push
js
mov
jae
inc
xchg
pop
int3
rolb
sub
xor
pop
mov
cmc
push
imul
and
stos
stos
add
das
push
pop
dec
inc
js
cmp
cmp
push
inc
pushf
ds
sahf
jmp
imulb
or
jle
sub
push
mov
out
mov
cmp
pop
push
clc
icebp
mov
mov
xchg
shlb
fadd
popf
icebp
adc
mov
inc
xchg
lcall
insb
mov
cmp
out
cwtl
add
jne
xor
mov
sbb
inc
cmp
ds
mov
lahf
mov
cmpsb
repz
lock
cwtl
and
mov
gs
ljmp
push
gs
and
insl
xchg
pop
leave
push
mov
lods
mov
aas
clc
dec
add
outsl
insl
fistpl
pusha
shll
mov
jg
push
adcb
or
bound
shlb
jns
lahf
add
pop
jne
jg
mov
mov
fidivrl
push
outsb
jne
notb
andb
shl
and
cmp
mov
pop
dec
push
inc
xchg
addr16
leave
xor
jp
lods
dec
and
das
repz
jle
sbb
jl
sbb
pop
xchg
mov
push
insl
inc
lret
cmc
cmpsb
out
cmp
pop
lds
mov
jle
pushf
sub
inc
shll
cmp
daa
sub
adc
cmp
pushf
int
push
jmp
in
lods
aad
push
and
dec
add
out
push
inc
add
aam
push
rcrb
push
sub
jp
in
mov
popf
arpl
negl
test
lcall
or
jne
ret
out
mov
inc
or
mov
scas
and
flds
inc
dec
scas
std
mov
jge
jmp
lock
xchg
jp
sbb
loopne
inc
sahf
mov
adc
jl
clc
jg
lcall
repnz
add
and
cmc
nop
sub
sub
cmc
push
mov
add
mov
imul
scas
scas
shrb
jg
sbbb
pushf
cmpsb
cwtl
push
mov
jno
clc
jge
sahf
mov
push
shr
dec
outsl
movsb
andb
cmp
fistps
repnz
in
jmp
sbb
js
lret
aam
xor
testb
add
orb
lock
inc
and
xchg
add
jp
fwait
jp
arpl
in
fs
enter
jae
mov
xlat
jle
xor
into
push
iret
push
lahf
mov
adc
das
mov
stc
push
repnz
mov
cmpsb
fcmovnbe
and
shl
inc
push
pop
xchg
sub
dec
push
xchg
push
insl
in
dec
testb
sti
mov
stc
dec
xchg
negl
mov
loop
das
fwait
push
scas
adc
dec
mov
pushf
je
push
test
popa
xor
out
imul
jle
sbb
sub
xor
xchg
in
movb
xor
cmc
pop
leave
fistps
mov
push
fisttps
push
sets
add
test
pop
add
insl
dec
stc
andnps
movsb
jbe
jbe
lret
jmp
dec
inc
add
and
loopne
test
push
adcb
mov
movsl
lcall
mov
sti
adc
or
mov
mov
xor
icebp
fld
lret
adc
add
es
cmpsl
jmp
imul
cmp
jnp
pop
push
or
movsb
mov
push
scas
out
rcrb
inc
cwtl
rcrl
filds
cmp
cli
iret
daa
xlat
mov
xor
cmpsb
popa
pushf
xor
jp
sbb
pop
sub
mov
sbb
in
jl
push
push
sub
cmp
popf
dec
jne
xchg
push
test
push
out
arpl
xchg
add
add
sbbl
dec
popf
mov
xlat
ljmp
cwtl
sbb
dec
inc
daa
lcall
nop
dec
inc
or
sbb
sbb
ffree
pusha
add
aam
fisubs
xlat
cmp
mov
cltd
adc
jp
push
pop
push
push
dec
cltd
pop
lret
jmp
test
xchg
cmpsl
filds
aad
pop
in
push
clc
add
sbbb
cs
pause
adc
negb
push
mov
dec
dec
jecxz
jno
cmp
mov
push
jl
jbe
pop
mov
jle
and
in
jne
adc
in
pop
push
or
push
into
scas
cmovno
mov
outsb
xchg
dec
repz
cld
or
xor
das
xor
das
dec
fidivrs
push
rolb
jg
jae
push
mov
adc
pop
cmpsb
adc
ret
xor
lahf
xor
mov
mov
aam
mov
inc
mov
sbb
mov
dec
cmpsl
pop
mov
popa
or
pusha
mov
fmuls
outsl
fadd
mov
insl
sbb
mov
push
xorl
xchg
arpl
jl
jg
cld
mov
or
inc
and
cmp
imul
inc
jae
or
pop
mov
out
stos
mov
stos
xchg
in
push
adc
mov
and
sub
std
inc
fldt
xor
jns
xor
push
push
test
sbb
pop
adc
jg
stos
je
inc
aas
jp
addr16
cli
xor
pop
lret
or
lret
test
sbb
jecxz
adc
scas
xchg
movsl
loope
cmp
mov
lahf
sbb
mov
stc
in
leave
ror
push
xchg
cmp
jb
or
icebp
test
jbe
dec
jnp
int
push
cmp
fcoms
fmul
pusha
mov
outsl
cmc
jbe
pop
push
bound
int3
ljmp
and
stc
pop
cmpl
push
sub
test
cwtl
xorb
bound
inc
mov
cmp
test
mov
outsl
jmp
jne
in
aad
push
rclb
cmp
mov
adc
or
mov
icebp
push
jb
xchg
cmpsb
jnp
xchg
lock
pop
repnz
lds
mov
test
xor
lahf
lret
das
pop
es
adc
or
push
pop
mov
dec
lcall
dec
repnz
mov
popf
imul
xor
outsl
cmpsb
adc
xchg
pop
xchg
nop
add
jecxz
in
or
jbe
xor
sub
je
and
adc
sub
fs
adc
xchg
ja
jl
loope
push
mov
aam
sub
xor
jecxz
repnz
fcomps
mov
mov
xchg
cmpsl
jno
push
nop
shl
das
in
push
pop
sbb
inc
mov
call
pop
in
inc
jecxz
xchg
add
mov
xchg
or
enter
push
das
adc
test
mov
adc
cli
push
and
adc
sahf
dec
sar
mov
push
mov
sub
sbb
add
pop
dec
nop
sbb
je
inc
sahf
pushf
aad
fwait
or
inc
lea
bswap
out
and
scas
mov
add
cmp
mov
push
into
jl
ret
cmpsb
push
aad
adc
xor
loop
mov
pop
aad
and
sub
dec
shll
out
lahf
sbb
int
orl
sub
sub
or
mul
cmpsb
sbb
les
ljmp
ss
cli
dec
and
lods
jle
dec
push
and
hlt
insb
jmp
movsb
sti
out
andl
mov
lods
adc
lcall
outsl
sub
inc
rolb
imul
inc
loope
push
out
mov
mov
xlat
jbe
aas
jl
lea
xchg
cmp
mov
into
aas
dec
bound
loope
jg
test
aaa
xor
cs
mov
fstpt
test
insl
sbb
add
xor
adc
imul
inc
fstpl
jecxz
or
aaa
insb
mov
push
xor
ja
or
jo
jae
aaa
data16
dec
xchg
mov
push
add
jo
adc
pop
sub
test
jmp
and
div
mov
in
sahf
xor
subl
jnp
xlat
push
mov
daa
cmp
out
cld
mov
jge
je
in
enter
ljmp
jno
push
out
andb
push
rclb
push
cmp
fisubrs
ss
xchg
jnp
icebp
in
sti
jecxz
sti
repz
xor
lock
bound
dec
dec
xor
test
pop
leave
sarl
sub
sbb
aad
push
jns
shr
mov
or
in
in
call
lret
mov
popf
fs
cmc
test
sbb
mov
sbb
sti
das
xchg
push
dec
insb
xlat
or
das
and
xor
insl
mov
test
pop
pop
mov
jns
lret
adc
out
leave
push
or
ljmp
and
lret
mov
shlb
xchg
pavgb
push
pusha
negl
ds
imul
pusha
dec
xchg
inc
mov
inc
and
pop
pushf
insb
jo
sbb
mov
mov
orb
jge
push
add
hlt
mov
insb
jae
or
or
cwtl
faddl
fs
xchg
jg
sti
ret
pop
cltd
pop
jg
push
test
jbe
aas
mov
lcall
icebp
inc
jns
push
pop
pop
push
push
push
cmp
add
mov
shlb
daa
push
aam
mov
xchg
cmp
lds
pushf
add
push
in
loope
cmp
pop
es
cmp
sahf
adc
push
mov
icebp
mov
mov
je
cmp
shlb
movsl
push
jbe
daa
jnp
push
jnp
mov
sbb
popa
pop
mov
fstpl
cmp
mov
pop
out
insb
and
sahf
or
push
shrb
or
fnsave
jo
fisubrs
cli
push
jns
push
ja
push
out
cld
ss
rol
inc
mov
dec
mov
int3
push
popf
pop
aad
outsb
dec
cmp
lret
cs
aaa
ljmp
in
or
xchg
out
nop
cmp
scas
fadds
adc
je
mov
pusha
or
rcrl
mov
cmp
cmc
sub
mov
lock
adc
in
inc
pop
dec
xchg
fdivl
inc
out
aaa
jo
jo
ja
mov
mov
sub
popf
movl
stos
inc
mov
or
lret
in
mov
shrl
sbb
and
dec
pop
mov
sub
test
in
add
lcall
data16
push
jp
mov
sub
fcomp
das
dec
sbbb
sbb
call
aad
ds
mov
ljmp
mov
je
adc
lret
xchg
outsb
out
nop
cltd
inc
lea
lahf
outsl
sbb
mov
xlat
or
stos
pop
push
and
mov
cld
cmp
xor
mov
dec
mov
xchg
hlt
adc
mov
dec
mov
ljmp
xchg
dec
cmp
jb
lds
jnp
call
test
push
nop
lock
jge
call
mov
push
outsl
inc
xor
jle
mov
mov
pop
adc
test
push
inc
fcomps
cld
lock
xadd
cli
dec
adc
leave
ret
scas
mov
adc
mov
dec
sbb
push
sub
leave
mov
stos
cmpsb
xchg
push
jbe
aas
jno
call
movsb
push
aas
jnp
adcl
jb
adc
or
bound
xchg
sbb
add
push
cmp
inc
jle
scas
jbe
pop
mov
inc
mov
scas
mov
add
sti
push
popa
test
and
scas
and
pop
popl
andb
stos
or
pop
dec
rolb
mov
push
dec
mov
sbb
sbb
movsb
push
std
mov
ds
jp
je
adc
outsb
sahf
es
cmp
mov
out
loop
nop
inc
cmp
je
out
gs
and
xchg
mov
mov
repnz
push
dec
cmp
test
imul
add
xchg
cltd
add
or
push
in
mov
flds
xchg
cmp
xchg
rol
int3
jne
inc
fdiv
xor
push
icebp
aam
fisttpl
icebp
ljmp
or
or
xor
addb
aam
imul
adc
push
popa
push
mov
xor
jmp
mov
cwtl
mov
aad
popl
sti
add
adc
dec
pop
outsl
mov
mov
arpl
sbb
inc
cmp
mov
fnstenv
cmp
mov
loopne
repnz
sub
push
setbe
out
pop
pop
pop
xchg
mov
xor
push
das
inc
jl
into
and
scas
lcall
pop
notl
jle
add
out
pop
pop
xor
mov
and
daa
lods
mov
adc
pop
xor
divl
shl
sbbb
test
scas
sarb
fs
lahf
jge
mov
test
outsb
out
pop
cmpsl
ret
pop
popf
fistpl
es
add
cli
lods
xchg
popf
inc
xchg
loop
test
xlat
insl
shl
jecxz
sbb
fucom
lret
mov
lcall
inc
jno
mov
into
fidivrs
mov
lock
xchg
mov
mov
xchg
inc
pop
inc
mov
inc
test
mov
ss
or
jae
pop
mulb
mov
xor
xor
pushf
scas
std
pop
dec
lret
test
xchg
leave
xlat
daa
jecxz
adc
addl
inc
xchg
xchg
lods
mov
mov
int
push
stc
stc
inc
mov
insb
outsb
inc
inc
and
inc
cs
fldenv
add
jp
nop
or
mov
push
mov
pop
in
ret
movb
push
push
popa
adc
jmp
cmp
fiadds
or
mov
iret
ja
dec
push
or
mov
push
inc
sub
cmp
mov
scas
fdivs
aas
push
cmp
adc
and
clc
dec
adc
fstps
ja
xchg
aad
xchg
and
add
push
xor
mov
into
adc
fdivr
repz
ja
add
mov
adc
dec
or
lods
mov
cmpsl
sahf
sbb
fbld
cmp
mov
jnp
insl
xchg
pushf
dec
ja
push
mov
scas
push
in
repz
adc
adc
xchg
arpl
mov
shlb
jle
dec
divl
sub
or
sbb
push
pushf
mov
jl
mov
dec
mov
fidivrs
inc
jns
pop
inc
sbb
ds
mov
inc
aas
xor
add
sub
cmc
cmc
pop
data16
jle
aaa
xchg
xor
mov
inc
scas
mov
in
test
push
mov
test
sbb
add
aam
popf
rclb
aam
ljmp
insb
out
shl
sbb
xor
lret
push
mov
loopne
test
les
jne
jle
std
shl
jp
adc
add
sbb
pop
xor
pop
daa
add
mov
lods
add
push
fxch
add
sarl
dec
iret
sbb
mov
inc
mov
or
lods
in
test
jp
inc
lret
mov
xor
rcrb
ljmp
test
xor
fadds
stc
and
out
cmpb
push
mov
lret
add
cs
scas
pushf
incl
dec
jl
fildl
and
enter
bound
jmp
out
push
in
pusha
mov
dec
ja
outsl
dec
mov
pop
sbb
in
arpl
jmp
pop
ds
jae
xchg
cmp
xchg
nop
xor
mov
shlb
test
aad
push
or
lods
movsl
xchg
mov
insb
xchg
loopne
data16
decl
cli
lods
cs
repnz
mov
push
testb
jl
loopne
or
les
mov
ljmp
cmp
shl
out
or
cmp
fisttpl
fwait
lahf
out
test
jecxz
xchg
arpl
pop
les
push
mov
cmpsl
xchg
pop
inc
in
push
adc
testb
mov
push
pop
lods
xlat
add
and
pop
sahf
lds
fwait
daa
adc
dec
and
js
inc
lea
lahf
xchg
jmp
jg
test
push
add
dec
pop
xchg
in
lds
xor
inc
dec
xchg
or
mov
xchg
xchg
pop
stc
into
xchg
inc
je
fidivs
jo
add
sub
js
lods
sub
push
mov
pusha
or
xchg
pop
iret
bound
data16
or
push
sbb
mov
es
mov
push
dec
adc
jp
inc
mov
mov
push
xchg
mov
jg
insl
ret
sbb
xchg
xor
lcall
out
mov
adc
shlb
cld
insl
std
sbb
std
cli
sbb
mov
ds
xor
loope
jecxz
rcrl
jl
cld
mov
add
fcompl
repnz
roll
jmp
mov
orl
es
dec
xchg
orb
loope
adc
push
cmp
test
cmc
dec
sub
fwait
dec
mov
loop
adc
dec
in
mov
jge
addb
roll
push
push
test
sub
ds
cmpsl
xchg
out
inc
je
rcrl
sbb
mov
and
sbb
jecxz
mov
mov
jl
lds
pushfw
adc
or
ds
repnz
aad
fwait
jle
add
pop
sub
sub
xchg
add
andl
jae
gs
push
in
jae
aaa
jnp
cmp
inc
push
nop
cmp
xchg
icebp
mov
sbb
loopne
jp
ds
fwait
xchg
hlt
xchg
int
shll
cmc
sahf
xor
inc
loope
daa
xor
js
push
mov
rcrl
pop
fldl
mov
out
fnstcw
aaa
enter
jae
or
add
mov
mov
rcll
dec
mov
xchg
repnz
inc
scas
pop
and
scas
cs
xchg
pop
js
das
arpl
das
jge
pop
pop
push
jmp
js
sahf
int3
cmp
xor
xor
jle
pop
xchg
pusha
pop
and
xchg
popa
mov
repz
mov
sbb
adc
roll
xchg
cmp
dec
sarl
insl
imul
jmp
or
leave
mov
dec
sbb
rorb
cmp
mov
mov
add
movsl
mov
mov
stos
sti
or
mov
lods
and
out
cmp
jg
jl
mulb
mov
mov
xor
icebp
out
notl
inc
in
aam
addr16
mov
add
push
mov
sarb
xchg
xor
dec
mov
jbe
xor
cs
cmp
inc
xor
inc
ds
mov
push
pop
push
lock
sbb
xor
xchg
add
icebp
ret
inc
jl
xchg
pop
repz
push
xlat
ficoms
andl
pop
xor
rol
icebp
fldenv
push
sub
xchg
bnd
out
inc
push
mov
push
push
inc
lock
xchg
test
daa
xor
mov
jecxz
cmpsl
mov
or
sbb
mov
pmuludq
push
leave
adc
sub
hlt
inc
jmp
cmpsb
lret
fbstp
xor
dec
inc
sbb
cld
push
insb
fistpl
push
dec
xor
bound
sub
sar
daa
ljmp
dec
pop
inc
arpl
and
push
and
into
jno
stc
or
push
loope
rcr
bound
loopne
sbb
sub
adc
in
repnz
pusha
jne
shll
mov
lahf
in
mov
dec
push
rcrl
jbe
sarb
int
cwtl
sub
rcll
add
push
pop
mov
jp
mov
sbb
aam
jg
sbb
stc
mov
inc
shll
mov
imul
xchg
std
cmpsb
stc
adc
rcrl
out
divl
cld
add
into
dec
add
aad
fs
and
cmpsl
shlb
adc
push
mov
movd
dec
stos
adc
add
lock
adc
mov
adc
ljmp
insb
insb
es
ficoml
out
inc
mov
or
jne
cltd
sub
loope
xchg
cltd
repz
cmpsl
addb
cmpsl
gs
pop
popf
sbb
mov
sarl
inc
xchg
lahf
jmp
pop
push
imul
adc
lods
leave
jb
or
push
pop
sub
cmp
popf
cmp
in
lods
add
pop
pop
inc
xor
xchg
mov
insb
out
das
cwtl
sub
out
mov
mov
sub
mov
insb
add
and
ljmp
and
pop
jne
rcll
outsl
add
test
jb
mov
cmp
jmp
lock
xchg
in
sub
imul
xor
hlt
movsl
mov
data16
fisttpll
jle
std
jge
lods
fists
cmc
xor
xchg
aaa
mov
mov
testl
jb
je
inc
sbb
shlb
scas
pop
mov
push
insb
mov
into
pop
in
ljmp
negb
mov
add
jl
jns
mov
sbb
dec
inc
insl
js
dec
sbb
lods
lods
pop
jbe
mov
insb
test
nop
mov
scas
push
push
ja
mov
fisubl
sbb
leave
cltd
adc
push
mov
xchg
hlt
repnz
mov
sub
and
push
sbb
pop
mov
mov
jns
sub
outsb
fcomps
fwait
cmc
inc
xor
ret
or
fcoml
js
xchg
sub
out
sbb
jb
add
inc
lds
jbe
mov
xchg
pop
sarl
push
notl
push
int3
xor
cmp
int
in
jecxz
aam
fndisi(8087
aad
sbb
jb
int
out
inc
outsb
adc
mov
inc
add
stc
lods
outsl
or
arpl
xor
add
in
bound
jae
loope
xor
cmpsl
sbb
pop
jp
fcom
sub
pop
lcall
pop
add
mov
jbe
das
fidivl
jo
cld
clc
ret
jle
adc
mov
ss
dec
inc
push
sub
mov
adc
inc
shlb
rorb
arpl
sub
popa
scas
ljmp
dec
mov
push
dec
or
push
insb
jecxz
sbb
testb
addr16
mov
fimull
repz
mov
scas
xor
and
mov
stc
inc
mov
dec
mov
jae
leave
cmp
sti
movsl
aad
push
test
sbb
lcall
iret
es
icebp
add
inc
fcmovbe
js
movsl
test
data16
addr16
sbb
pop
mov
inc
call
das
ss
out
adc
mov
cmp
lea
pop
in
lret
std
inc
xchg
sti
stc
jl
xchg
adc
sbb
fwait
xchg
repnz
cmp
repnz
out
dec
daa
sbb
out
lds
fiadds
mov
dec
lods
hlt
ret
cli
jb
iret
shrb
nop
into
or
test
sahf
pop
adc
out
ss
push
mov
xrelease
sarb
scas
mov
adc
in
mov
std
lds
fwait
into
gs
cli
mov
shrb
add
adc
test
int
inc
int3
sbb
fdivl
jo
mov
cli
mov
aad
mov
sub
js
lret
pop
mov
sbb
imul
jle
sub
outsl
dec
xchg
dec
pop
mov
pop
dec
cmp
dec
mov
jecxz
subl
jle
bnd
jo
mov
enter
add
jae
cld
in
data16
and
ss
mov
mov
dec
std
push
les
les
jns
stc
jno
jno
cmp
jg
mov
cmp
mov
ret
lds
jmp
mov
fistpll
dec
ret
cmp
cwtl
sar
stos
rep
dec
arpl
jns
sub
enter
aam
and
xchg
mov
bound
xchg
repnz
pop
cmp
or
sbb
xchg
fistl
xor
lea
adc
jg
mov
mov
mov
xchg
rorl
arpl
cmp
das
dec
or
jne
out
add
loopne
loop
xchg
int
mov
pop
int
cli
mov
mov
sti
pusha
fnop
sbb
std
push
cmpsl
insb
xchg
popf
stos
push
sbb
jle
inc
adc
xchg
mov
ss
xchg
scas
xchg
xchg
push
mov
mov
hlt
mov
mov
popa
jne
add
cli
pushf
push
sub
jno
adc
dec
shlb
xor
es
test
out
xchg
mov
or
scas
cli
push
js
cltd
shll
popf
sbb
fldl
mov
mov
arpl
aaa
jl
pop
rclb
jmp
dec
and
daa
sub
insb
repnz
mov
pusha
mov
rcrb
fisubl
xchg
mov
cmp
inc
push
jg
into
mov
push
loope
cmp
arpl
jg
push
into
inc
adc
sbb
jle
hlt
stos
bound
xor
fs
ret
inc
pop
mov
outsl
ljmp
pop
outsb
xor
mov
pop
sub
or
leave
xor
hlt
cmc
xchg
sbb
jmp
popf
mov
popa
loop
in
cmc
or
sub
sub
push
mov
vmovaps
cmp
notb
ss
scas
out
jmp
adc
insb
and
mov
call
push
mov
pushl
fbld
das
mov
mov
mov
push
imul
add
inc
subb
aas
ror
xor
das
int3
and
cmpxchg
mov
xchg
dec
sub
push
bnd
pop
adc
adc
jle
and
jb
mov
lock
aaa
dec
and
pop
pop
pop
mov
mov
adc
pop
mov
mov
sub
mov
sub
test
out
add
es
inc
push
mov
fsubrs
dec
adc
cmpsb
or
inc
mov
aam
addr16
insb
nop
add
pop
pop
call
and
mov
or
mov
aad
jg
mov
clc
jecxz
loop
mov
xor
pop
push
sub
imul
daa
jnp
testl
push
jbe
popa
stc
dec
add
xchg
or
test
mov
dec
inc
les
and
mov
xor
fdivrl
mov
push
out
loop
inc
out
or
jle
vmovaps
ficompl
leave
xlat
cmpb
or
add
push
pop
into
mov
movsb
int3
dec
xor
xor
ror
jnp
jl
jne
cltd
jmp
shl
mov
and
imul
jmp
push
inc
insl
out
push
push
in
sarb
movsl
jmp
in
pushf
ficoml
cmp
stos
es
cmp
adc
insl
lods
push
shlb
push
jnp
xlat
dec
stos
scas
dec
add
sub
xchg
out
aaa
sbb
popa
les
call
ja
add
sbbb
into
movsb
add
mov
and
stc
int3
cld
mov
mov
test
rol
add
pop
fdiv
loope
jae
std
loope
imul
sub
sub
outsb
cmpb
pop
inc
movsl
lret
mov
mov
sbb
adc
clc
mov
outsb
and
scas
mov
data16
add
arpl
push
bound
in
xchg
jb
push
inc
push
out
pop
mov
adc
xor
and
jmp
data16
aad
and
cmpsb
and
inc
ja
or
pop
dec
scas
jne
call
push
sub
das
lret
xor
sub
push
sub
loope
enter
lock
mov
cmpsb
or
outsl
dec
mov
dec
push
add
pop
cmp
mov
cmp
ja
in
xchg
add
xor
test
aad
push
sub
cld
sarb
aaa
inc
pop
add
pop
dec
mov
ds
dec
push
add
ficoml
pop
mov
stos
push
in
sbb
mov
push
mov
xorl
dec
popf
mov
nop
loopne
mov
mov
pop
ret
js
icebp
ror
cmpsl
pop
cld
std
cmp
jmp
scas
ds
sub
xchg
sub
sbb
loop
push
or
insb
ja
fs
sarl
sbb
jmp
data16
push
into
cs
inc
das
adc
and
jge
icebp
sub
adc
mov
test
mov
fndisi(8087
fsts
sbb
push
movsl
das
and
cmp
pop
dec
nop
jae
gs
sbb
mov
inc
fs
fdivrs
test
xor
mov
icebp
or
xchg
push
aaa
jbe
pop
hlt
jnp
inc
icebp
loopne
lock
xor
fldl
pusha
jl
push
clc
inc
clc
push
movl
mov
pop
fisubrl
addl
cmp
stos
jae
dec
mov
mov
pop
int3
fisubrs
jmp
sub
lods
dec
mov
stos
push
stos
dec
std
sahf
or
scas
jp
in
loope
pusha
sub
shrb
mov
or
adcb
mov
push
roll
jecxz
mov
out
leave
outsl
loop
lock
scas
outsl
dec
call
movsb
jbe
rol
leave
mov
mov
frstpm(287
jg
jle
jne
mov
or
jae
cmp
sbb
push
scas
xor
lret
cmp
movsl
test
scas
cli
xor
sbb
popf
inc
add
and
adc
cmp
mov
adc
xchg
div
cmpsl
xor
push
jns
xchg
aas
jmp
jl
stos
cmp
movsb
fsubrs
jne,pn
mov
jno
lods
mov
sub
or
mov
xchg
and
jge
mov
jl
pushf
outsb
test
jmp
adc
fisttpll
and
jecxz
not
xchg
addl
xor
repnz
daa
jl
sub
mov
leave
pop
cmp
shlb
mov
and
push
mov
add
xchg
sub
ss
shll
lock
sbb
add
aas
inc
ljmp
sub
sahf
icebp
fucomi
sbb
cli
js
and
cmp
dec
xchg
gs
cmp
xchg
imul
lods
out
cmp
scas
std
ret
push
inc
xchg
in
aas
repz
dec
scas
push
mov
inc
std
sub
or
outsl
rclb
xor
and
mov
insl
rol
sbb
xlat
scas
push
nop
data16
dec
clc
scas
push
jae
add
incl
inc
ss
das
ja
add
jg
repnz
test
or
mov
fsub
adc
inc
mov
addr16
xlat
and
lods
fs
xlat
mov
das
push
dec
push
lods
sti
fdivs
mov
xor
adc
mov
or
cld
dec
popw
xchg
adc
adc
sbb
fidivs
outsb
test
fbstp
loopne
imul
int
insb
xchg
stc
das
hlt
mov
dec
add
lahf
rcll
cmc
adc
jge
ret
das
loop
push
movsl
mov
roll
lret
sti
loopne
dec
ret
fcmovnb
mov
lahf
loop
push
jp
xor
pop
mov
ret
push
sti
sbb
push
arpl
xchg
into
in
lahf
in
mov
pop
stos
arpl
pop
xchg
out
dec
cmc
mov
inc
cmc
lods
dec
mov
int
or
and
mov
lods
xchg
pop
sbb
sub
int
and
stos
push
sti
sbb
out
dec
push
cmpsb
jo
and
sbb
xor
dec
and
pop
push
adc
dec
push
push
sbb
xchg
mov
mov
lret
jne
call
shll
and
lds
pop
inc
fs
or
out
stos
nop
add
lret
movsl
ja
mov
mov
stc
fs
gs
ja
in
sub
pushf
fstpt
std
inc
fcmovbe
add
lret
xchg
xor
mov
sbb
das
imul
cmpsb
rcll
test
add
aas
mov
addr16
das
insb
add
rorb
shld
cmpsb
jbe
jbe
push
in
xor
je
adc
dec
sbb
dec
daa
lods
out
lock
not
movsl
pop
lods
and
mov
lret
in
xor
test
lods
push
or
jno
insb
idivl
ljmp
and
out
insb
cwtl
cwtl
push
push
stos
sti
push
cmpsb
xchg
xor
or
xchg
cmpsl
clc
ret
xor
xor
js
clc
out
and
xchg
xchg
sahf
loop
imul
xchg
mov
imul
mov
dec
js
xrelease
push
mov
incl
dec
cs
xlat
push
pop
iret
ret
in
out
add
jp
mov
and
int
cltd
cmp
fsubrs
fpatan
push
jl
bound
in
jae
rep
int3
mov
xchg
loopne
fs
popl
cli
inc
dec
loop
sbb
xchg
ds
adc
add
adc
lret
icebp
mov
cmpsb
dec
lock
xor
pop
lahf
fs
notb
filds
mov
scas
enter
mov
jne
test
pop
icebp
and
fldl
ljmp
sbb
mov
adc
loope
dec
xchg
test
jmp
aad
insl
mov
lea
lret
hlt
mov
inc
inc
and
fs
js
dec
lods
cmp
out
mov
dec
aas
imul
adc
test
rcll
mov
pop
dec
cltd
cs
sub
jmp
fwait
addr16
movsl
cmp
js
dec
push
xchg
nop
mov
lcall
gs
into
repnz
gs
lods
cmpsb
psubsw
pop
push
adc
pop
lcall
mov
add
fwait
stos
or
jnp
push
call
cmpsb
mov
call
xor
ds
jns
jnp
insb
gs
fcoms
mov
jmp
into
aaa
test
scas
adc
pop
push
subl
call
scas
add
data16
sti
inc
sbb
shll
lods
int
push
sbbl
test
xor
lods
pop
add
fmul
stos
jp
fisttpl
insl
cld
adcb
dec
push
mov
push
mov
repnz
jb
lods
add
imul
pop
dec
loopne
push
xor
and
pop
mov
daa
dec
mov
jne
pop
hlt
pop
hlt
sub
ja
cmp
cli
fcompl
pusha
dec
pop
aaa
into
addl
xor
into
adc
jg
dec
lods
repz
jb
fdivrs
adcb
int3
dec
jnp
sub
push
mov
push
lock
es
outsl
mov
shll
push
dec
test
lock
and
mov
in
fists
insb
sbb
daa
dec
hlt
lods
push
mov
popa
sbb
ja
xor
notl
mov
cmp
rcr
movsb
js
lret
adc
push
iret
push
sub
ja
cmpsl
pop
fs
or
aas
xor
inc
cmpsl
mov
insl
ja
pop
mov
pop
wrmsr
cltd
aad
mov
loope
into
in
dec
mov
mov
outsl
inc
mov
sbb
and
add
lea
insb
ja
push
stc
clc
outsl
jg
xorb
rcr
test
xlat
les
adc
sti
je
sbb
rcrb
sbb
ret
in
lods
ja
test
adc
or
gs
mov
add
sbb
add
pop
fiaddl
mov
inc
adc
and
pop
jo
pop
pop
jo
or
cmpsb
pushf
sub
inc
movsl
jbe
push
rcrb
ror
push
insl
jmp
cwtl
insb
xor
lret
arpl
xchg
push
jnp
or
dec
repz
orl
rol
lcall
cmpsl
xchg
js
xchg
lret
mov
cmpsb
out
mov
lret
bswap
popf
mov
pop
cld
dec
and
lock
jl
fstpl
insb
lods
dec
pop
fcmovne
shlb
pop
test
rol
add
cmp
lahf
cwtl
lock
ljmp
xor
notb
mov
out
mov
mov
aad
cmp
dec
cmp
dec
and
nop
sarl
pop
add
loope
out
fdivr
adc
lahf
sbb
cmp
enter
dec
mov
pop
mull
movsb
lods
inc
jmp
and
scas
ss
outsl
adc
and
cli
jge
scas
imull
or
xchg
lcall
push
stos
push
into
out
inc
jl
nop
sub
fmul
jmp
scas
add
xchg
add
mov
xchg
push
xor
xor
jo
add
mov
push
xor
xor
push
or
xor
mov
enter
or
cli
mov
cli
lods
sub
idivl
xchg
movsb
xchg
pusha
push
and
xor
and
sbb
ret
xor
or
fistl
pmullw
and
push
mov
jg
mov
repnz
aam
js
fdivrp
mov
cmpsb
mov
pop
xchg
inc
mov
es
cld
mov
push
lcall
xchg
vshufps
aad
xchg
jge
inc
xchg
fcmovne
sbbb
add
pop
das
mov
pop
sahf
push
xor
sub
adc
inc
imul
sbb
int
push
sbb
mov
scas
pop
pop
pop
clc
xchg
mov
sahf
add
andb
imul
clc
mov
js
test
add
cmp
mov
shlb
sbb
mov
popa
lahf
stos
imul
add
xchg
out
mov
out
lds
mov
cmp
push
dec
andb
mov
push
jbe
sub
inc
and
xor
cmpsb
fbstp
adc
jecxz
lcall
loope
inc
int3
cs
sub
sbb
or
mov
daa
sbb
sub
testl
shr
fwait
or
imulb
in
lret
jp
mov
inc
or
orl
aaa
xlat
ror
sbb
popf
dec
lock
xor
push
in
aas
ss
mov
pop
jae
mov
test
dec
mov
mov
mov
pop
xchg
sbb
cmp
sahf
xor
mov
pop
and
cmp
xchg
lea
mov
jmp
push
mov
test
inc
cmpsb
lea
js
pop
aad
xchg
sbb
clc
jmp
mov
int3
ja
inc
cli
pop
jbe
adc
enter
mov
xchg
and
add
ss
push
pop
lea
cmpsl
dec
cmpsb
mov
aad
add
call
divl
jp
fsubrp
mov
test
pop
xlat
sbb
push
arpl
stos
add
imul
lahf
sub
sub
idivb
jl
inc
adc
jl
ret
jmp
mov
aaa
mov
fwait
subb
outsb
jb
and
sub
dec
mov
push
out
loope
mov
pop
pop
inc
adc
push
mov
ja
addb
cli
rcrl
in
imul
fadds
xchg
rorl
mulb
pop
iret
inc
movsb
xchg
jb
int3
psubb
fcom
dec
fisubrl
and
pusha
or
push
mov
mov
dec
pop
mov
outsb
mov
popw
and
outsb
mov
pop
mov
sub
divb
cs
aaa
mov
mov
std
cmp
pusha
adc
aas
test
inc
jl
push
aam
mov
push
or
xchg
mov
dec
jb
enter
xor
cmpsl
cmpsb
daa
and
mov
iret
mov
pmulhuw
std
cmc
rcll
aaa
mov
sub
in
jl
jae
and
cmc
dec
bound
xchg
xlat
pusha
aaa
lock
popa
in
xor
dec
lods
fdivr
jne
and
fwait
dec
jae
jnp
dec
cs
push
insb
call
outsb
in
jbe
push
xchg
cltd
fsubl
pop
pusha
inc
jnp
pop
stos
inc
mov
inc
sbb
sbb
frstor
push
aaa
mov
add
jl
sbb
dec
in
faddp
sti
push
pop
insl
js
aaa
shrl
insl
int3
cmp
mov
mov
mov
popa
pop
push
push
cs
pop
xchg
sub
sahf
sti
rcrb
fldcw
cwtl
in
out
repz
add
andl
shrl
pop
xchg
jl
xchg
sub
fs
and
xchg
and
jno
pop
scas
or
pusha
push
out
inc
hlt
rcll
push
sub
xchg
or
lcall
test
jg
in
cs
xor
pop
pop
out
push
in
or
fwait
add
fwait
hlt
lock
loopne
dec
push
mov
xchg
push
push
in
jmp
stos
loop
sub
mov
ss
push
push
mov
ss
push
adc
divb
dec
mov
movsb
das
ja
test
mov
je
and
lea
cmp
mov
dec
shl
pop
and
lret
dec
xchg
xor
aas
aaa
pop
pop
aad
push
jo
inc
or
jo
sub
popa
add
xor
mov
sahf
dec
mov
fldcw
int3
push
mov
jle
mov
inc
mov
xor
mov
sub
add
dec
mov
dec
into
xchg
in
repnz
lahf
sbb
mov
mov
addr16
imul
adc
insb
lods
lods
fnsave
jp
addr16
fdivl
out
repnz
dec
adc
inc
test
xchg
ret
std
adc
int
mov
inc
xchg
pop
ljmp
out
pop
in
xchg
stos
add
out
popf
pop
cmpsl
dec
ret
and
fcmovu
push
cltd
sub
les
les
or
negb
inc
add
pop
jae
adc
aam
gs
inc
pusha
mov
jns
out
mov
andl
clc
pop
testl
icebp
pop
sbbb
movsl
ja
adc
push
imul
add
push
cs
out
es
push
and
jbe
cmp
fdivrs
sub
cmp
pop
repnz
repnz
cmp
and
loop
push
xchg
xchg
cltd
lret
add
mov
stc
dec
into
movl
jbe
jne
jl
inc
mov
mov
add
cltd
test
sbb
mov
jg
jecxz
pop
dec
scas
loop
and
aaa
in
mov
leave
hlt
mov
pop
xor
jae
fsubrs
and
add
adc
pop
loope
dec
out
les
adc
xchg
ljmp
mov
sub
mov
es
push
lcall
or
adc
mov
andl
lds
stc
push
fstps
mov
fisubrl
mov
add
jns
push
xlat
das
testl
cld
sub
pop
repz
pop
cmp
mov
mov
fadd
mov
or
dec
xchg
xchg
popa
push
or
shr
popf
xchg
pop
sahf
fstl
pop
fidivrl
fnstsw
sbb
mov
adc
jl
mov
jp
xor
loope
push
mov
mov
xchg
popa
adc
testb
or
jns
adc
ja
lret
insb
lock
std
add
xchg
cmp
cli
shl
jae
repz
mov
xchg
or
ljmp
cli
add
mov
inc
push
lahf
push
xor
add
adc
pop
jne
pop
sub
outsb
mov
xchg
fmuls
add
out
aaa
cmp
cmp
and
mov
stos
imul
add
fimuls
rorb
out
aam
iret
xor
mov
add
sub
sub
inc
mov
movsl
sub
adc
pusha
shr
xchg
mov
and
insb
dec
mov
das
mov
dec
int
fmuls
out
xchg
fcomps
jge
mov
into
sub
aad
les
das
mov
jmp
lcall
in
lret
adc
ret
stos
ss
test
cmp
sbb
hlt
addr16
lea
mov
nop
outsl
insl
cld
and
movsb
mov
lret
aaa
out
sbb
icebp
pop
fimuls
cmpsb
mov
pop
jle
ljmp
cmp
cmp
stos
sub
ror
and
stos
and
dec
jne
adc
enter
xlat
scas
mov
cmp
popf
pop
sub
ret
cmpsl
or
cld
xor
xchg
sarb
imul
mov
out
cld
sub
jp
aaa
loope
dec
jno
push
data16
outsl
jge
ljmp
and
insb
pushf
mov
sahf
loopne
arpl
jne
mov
fmul
out
jmp
push
aaa
test
mov
sub
fs
iret
jnp
sbb
cli
test
mov
or
into
not
mov
sbb
push
adc
test
mov
test
mov
jl
xchg
aam
pop
push
ds
mov
sbbb
in
xchg
je
cmp
popa
sbb
pop
out
pop
fnstenv
imul
sub
leave
std
push
pop
ret
adc
mov
pop
sbb
stc
test
aam
adc
rcl
pop
sub
xchg
lret
jne
dec
mov
dec
adc
and
out
aad
dec
sbb
in
aaa
mov
ret
shlb
xchg
sub
cmpsl
imul
inc
mov
cmc
aas
jl
test
fsubr
mov
mov
out
pop
in
lret
arpl
movsl
dec
inc
fstpl
lcall
into
xchg
inc
xor
mov
fdivrs
push
mov
or
jmp
dec
push
pusha
lret
mov
xor
mov
mov
inc
clc
cmpsl
jo
ss
out
or
mov
sbbb
push
movsl
mov
mov
and
mov
pop
aaa
lock
ret
and
outsb
pusha
adc
das
adc
push
mov
pop
pop
inc
pop
fs
mov
mov
mov
gs
movsl
push
or
std
outsl
xchg
inc
loop
icebp
arpl
out
shlb
in
jno
hlt
shrl
ret
lea
inc
fnsave
loope
xchg
pop
dec
out
insl
imul
dec
jecxz
lahf
in
movsb
enter
cs
push
cmp
cmc
and
fists
jb
inc
ss
dec
addl
xor
test
enter
add
gs
inc
xchg
les
dec
pop
and
add
xchg
cltd
loope
push
jmp
out
sti
sahf
fsubl
ficomps
sarb
or
xchg
add
xchg
cmp
adc
xchg
mov
enter
inc
mov
imul
cld
andb
lret
jno
cmp
lds
sub
jmp
loope
cmp
pop
and
and
sub
test
outsl
inc
sbb
mov
cmpsb
aad
mov
jbe
leave
xlat
data16
clc
sahf
lock
mov
arpl
jo
jl
sbb
add
inc
xor
inc
mov
mov
or
adc
mov
bound
bound
jmp
hlt
xchg
leave
imul
xchg
and
mov
sub
int3
jmp
mov
mov
inc
jb
je
stos
popa
mov
mov
pop
mov
jne
dec
or
frstor
stos
add
sbb
inc
jno
lcall
pusha
jle
push
lock
stos
mov
out
in
int3
popa
cmp
ficoms
inc
iret
in
scas
fiadds
mov
insl
jmp
sbb
loopne
mov
cmp
pop
mov
cmc
insb
pop
dec
movsb
dec
pop
inc
fsubrs
ja
rcl
arpl
jb
decb
mov
push
mov
pop
aam
pop
mov
lds
bound
outsl
push
sahf
sbb
pop
mov
int
leave
inc
lds
out
mov
mov
lcall
jp
mov
mov
push
ljmp
mov
inc
stos
xlat
adc
fnstcw
movsb
sub
sub
pusha
idivl
pop
into
mov
stc
in
add
popa
and
hlt
or
clc
cmp
sub
mov
fucomi
xor
adc
add
fs
pop
ss
jbe
xchg
inc
jge
mov
test
enter
daa
dec
sub
or
cmp
pusha
repnz
int
cmp
and
lods
push
jo
lock
jl
push
repnz
xor
lret
movsb
pusha
paddusb
subb
popf
data16
or
rcll
mov
xor
add
imul
add
int
inc
mov
lods
pop
ja
icebp
loopne
loopne
scas
push
test
test
push
sub
jge,pt
push
jl
jnp
cmp
test
fstps
cwtl
cwtl
and
rcr
inc
sub
inc
jb
je
cmpsb
mov
dec
test
jo
iret
mov
cmpsl
mov
fs
and
shr
movsl
shll
lcall
or
in
sub
lcall
sarl
hlt
dec
mov
je
adc
pushf
cli
mov
cmc
mov
test
sbb
xor
mov
aas
mov
cmc
mov
jns,pn
ds
gs
xchg
sbb
jmp
leave
cmp
mov
lret
bound
cmp
popf
lock
in
fwait
jb
inc
pop
jmp
test
mov
bound
adc
rep
xor
or
data16
adc
add
mov
not
test
hlt
mov
xor
mov
add
lods
sub
pop
xor
pop
hlt
pushf
aaa
sahf
mull
jge
xabort
cmpsb
daa
push
pop
icebp
jl
js
bound
lods
cmp
data16
jge
and
xor
dec
mov
lods
outsb
and
lahf
notb
pop
inc
lods
push
mov
out
enter
jo
lock
inc
cwtl
sbb
sub
test
mov
jnp
addr16
sub
sbb
push
adc
insl
je
cmp
test
xchg
ret
adc
sub
sub
jb
lds
das
jne
jne
shlb
sub
mov
push
cmp
or
jbe
jmp
inc
dec
int
sub
lcall
pop
xchg
cld
fidivrs
in
cmp
mov
sub
fcmovnbe
pop
mov
dec
or
lret
lahf
or
loope
xchg
roll
sti
icebp
inc
out
loope
in
call
cli
jae
in
push
xchg
mov
xor
in
scas
ret
rolb
pop
dec
std
outsl
lods
in
orl
jmp
out
jmp
mov
push
dec
xlat
lock
cmp
xchg
dec
fisubrs
mov
rorl
sbb
pop
fdivrl
aam
jecxz
jns
int
scas
pop
jo
popa
jae
bound
rorl
sub
cmp
or
and
push
daa
std
xor
ja
test
add
fadds
roll
dec
mov
inc
std
pop
inc
test
leave
pop
add
and
stc
lea
js
insb
xor
pop
cmp
xorl
pop
test
ret
add
shll
mov
cmp
add
sub
test
sahf
mov
cmc
lock
adc
fisubs
inc
sub
iret
adc
lods
adc
push
xor
sub
test
mov
das
dec
sub
lods
outsl
pushl
inc
jg
in
push
push
ficoms
pop
jp
dec
mov
test
pop
pop
fs
mov
cmc
pop
sbb
jb
sub
ja
cld
inc
sbb
aad
or
repz
mov
in
push
int3
test
xlat
hlt
xchg
sbb
push
mov
pop
xor
sarl
fs
es
cmp
dec
es
fimull
fwait
mov
pop
in
daa
mov
jle
jmp
sarl
cmp
mov
or
sub
xchg
push
mov
out
mov
cld
mov
xor
mov
in
or
das
adc
stc
or
push
mov
sub
push
inc
sub
dec
es
pop
sahf
sub
xor
cwtl
fisubs
jns
add
sbb
add
cmp
mov
mov
shrl
pop
sbb
in
icebp
mov
psubsb
pop
lcall
pop
ja
add
sbb
mov
test
inc
movsl
xchg
loop
sbb
gs
add
mov
adc
es
jns
jge
push
mov
mov
sbb
xchg
test
sub
stc
sub
bswap
stos
cmp
jl
in
and
lahf
or
jo
xor
inc
jns
add
sbb
sti
add
xchg
mov
lods
rclb
outsl
lods
rclb
aad
xor
xchg
lock
pop
push
jle
sub
aas
stc
mov
xchg
pop
roll
leave
sbb
aaa
and
out
popf
inc
inc
filds
sbb
cld
mov
test
mov
adc
test
jecxz
mov
mov
and
mov
inc
loop
ja
dec
mov
call
loop
xor
jmp
xchg
mov
adc
les
mov
ret
sbb
sbb
dec
or
or
pop
outsb
or
repz
mov
ret
and
test
shlb
jp
sub
push
pop
lds
xchg
clc
push
sub
nop
inc
shll
adc
jmp
jp
xchg
hlt
and
outsb
mov
xor
pop
mov
sub
shrb
lret
or
loop
jb
pop
ja
mov
gs
cmp
out
loope
cmpsb
jge
add
mov
lcall
cmp
xor
push
aam
pop
repz
add
and
pop
dec
dec
jo
push
push
inc
xchg
adc
loope
nop
test
inc
dec
mov
outsb
dec
cmp
loopne
mov
rcll
das
mov
jp
sbb
dec
repnz
mov
movlps
pop
dec
push
ds
hlt
cmp
pop
icebp
mov
inc
inc
in
popa
enter
or
jecxz
sbb
mov
lea
cmc
fdivl
fidivl
ficoml
sub
pop
in
dec
loop
pusha
or
mov
sub
mov
or
sub
sub
fbld
out
pop
fadds
pop
enter
mov
sti
ds
pop
imul
stos
lds
fnsave
mov
fdivp
mov
aad
andb
cli
jno
cmpsb
and
js
test
out
mov
mov
ja
pop
cli
pop
loope
xlat
fucomip
fcomi
adc
xchg
shl
js
outsb
and
jnp
and
imul
bound
jne
and
ljmp
push
sarb
jmp
cmp
insb
addr16
jge
push
pop
dec
mov
adc
sbb
addr16
sub
test
mov
lcall
pop
je
jnp
xchg
scas
int
nop
sarb
add
lret
dec
inc
jmp
mov
dec
rclb
push
es
enter
adc
stc
and
xor
lds
inc
jne
ficompl
fchs
arpl
cmp
movsl
in
sub
jns
in
imulb
rcl
pop
jmp
sub
stos
sub
hlt
call
sub
inc
inc
xor
xor
leave
jmp
push
gs
loop
dec
loop
and
lds
hlt
mov
testl
call
dec
mov
fistps
hlt
push
dec
push
gs
in
test
dec
addr16
or
cld
mov
adc
les
xchg
addr16
adcl
push
inc
jecxz
cmp
push
inc
cmpl
les
cmp
imul
pop
or
leave
sbb
jbe
sbb
xor
dec
fadds
out
lret
ret
push
adc
or
cmp
cli
xchg
mov
sbb
popf
jl
mov
mov
or
scas
xchg
test
mov
ja
aaa
dec
jno
inc
daa
lods
imul
sbb
stc
mov
adcb
mov
sub
outsl
lock
stos
fwait
jp
push
push
cltd
data16
cld
scas
out
je
or
inc
cs
pop
in
imul
pop
aam
stos
xor
in
mov
push
jbe
xchg
mov
push
mov
mov
pop
mov
push
dec
jmp
aas
addr16
out
jg
hlt
mov
cs
lods
mov
mov
mov
pushf
cs
jecxz
xchg
adc
pop
push
arpl
pushf
mov
mov
lods
imul
movsb
xchg
imul
cmp
into
jbe
adc
aas
sti
pop
add
cmp
push
adc
movsb
test
or
add
aas
jge
cmc
fwait
dec
stc
pop
or
gs
push
popa
xchg
leave
mov
pop
inc
stc
mov
pop
ret
divb
mov
test
cmp
jp
int
sar
push
pop
xor
pop
push
adc
xchg
pop
in
mov
mov
or
cmpsl
scas
xchg
gs
test
cmpb
mov
shrb
and
pop
movsl
shlb
icebp
std
add
sbb
push
ficompl
sub
lcall
jo
pop
gs
pop
cs
push
pop
sahf
bound
mov
mov
cwtl
dec
sub
push
lret
adc
push
dec
outsb
scas
rcrl
sbb
mov
mov
fldcw
inc
dec
mov
sbb
cmp
dec
movsl
negl
enter
popa
insb
adc
pop
mov
mov
cwtl
into
call
movsb
xchg
fs
and
dec
push
pop
std
insl
mov
xchg
pop
lods
stos
loope
pop
imul
and
xchg
xchg
and
cmpsb
clc
adc
sarl
add
push
mov
add
mov
jns
inc
xor
js
and
mov
lods
fcomps
js
push
mov
inc
xchg
in
lahf
jg
fstpl
loop
pop
stos
mov
sub
nop
pop
stos
mov
jae
and
icebp
adc
addr16
insb
pop
mov
jecxz
shl
cmp
mov
rol
and
sub
jo
ret
outsl
in
pop
lea
add
inc
adc
push
sub
inc
pop
cmpsb
mov
mov
hlt
adc
fldcw
mov
xor
orl
cmpb
or
fmull
xchg
xchg
cmpsl
leave
mov
cs
jmp
xorb
jb
sti
cmpb
pop
aam
xchg
loop
xor
mov
sbb
addl
decb
push
sbb
insb
jns
pop
scas
pushf
jg
decb
loope
movsb
mov
mov
cmp
outsb
repz
aad
xchg
cmpsl
fstps
or
adc
mov
mov
jnp
out
arpl
outsw
pushf
xchg
and
xchg
pop
inc
popa
dec
lcall
and
cmp
fwait
test
cltd
inc
mov
shlb
and
xchg
aas
cmp
cmp
outsl
cs
into
test
fcompl
pop
cltd
jecxz
jge
mov
hlt
inc
std
pusha
mov
out
jmp
insl
mov
adc
fldcw
fwait
push
out
inc
icebp
cltd
or
cs
sub
je
js
aam
cwtl
inc
mov
cmp
clc
popf
xchg
jp
push
jns
dec
clc
mov
test
mov
add
in
mov
sbb
inc
fcmovbe
and
mov
fwait
add
xor
fidivrl
and
clc
push
xor
mov
outsl
push
mov
mov
dec
fmull
xor
dec
lcall
mov
push
pop
lretw
insl
cwtl
test
mov
mov
insb
pxor
jmp
push
mov
jae
sub
js
lods
cmp
jns
ficoml
ja
sbbb
int3
mov
sbb
ficoms
mov
mov
jle
jg
imul
push
insl
mov
lret
mov
cmp
mov
fidivl
je
adc
rclb
call
scas
mov
lods
mov
shll
les
fisubrs
or
mov
xchg
outsb
int
out
fwait
xchg
adc
sub
jb
cmc
cmp
imul
nop
scas
fldcw
mov
das
into
and
hlt
cmp
int
icebp
out
jg
clc
mov
scas
xorb
xor
sbb
cmp
int3
adc
sub
nop
test
dec
not
fistpll
inc
mov
inc
push
ja
mov
jle
xor
mov
sub
fistpl
orl
repz
in
lods
pop
aas
cmp
rorb
pop
jp
sbb
pop
jae
cmpsl
push
adc
push
int3
mov
pop
stos
hlt
jbe
fsts
test
ror
jmp
jb
aad
lret
xchg
in
in
xchg
out
sbb
popf
lods
cs
in
pop
cmpsl
cwtl
out
scas
dec
cmpsb
sbbl
lock
sti
out
stos
jne
xchg
xlat
stos
push
data16
stc
jp
movsb
into
jmp
stos
addr16
aam
rorl
mov
push
test
data16
pop
lcall
mov
shl
dec
dec
or
shll
fucomp
out
lods
pop
int3
xor
mov
aaa
arpl
js
int3
inc
xor
adc
xchg
add
pop
test
add
mov
sbb
mov
mov
sub
das
ja
adc
pop
into
repz
pop
cmp
push
bound
add
ret
sbb
idivl
mov
mov
fbstp
rcrb
and
add
jmp
gs
int
push
inc
mov
je
push
sub
cs
frstpm(287
test
cmp
sub
mov
enter
mov
mov
and
fmul
cmpsb
call
cwtl
iret
repz
lahf
xor
sbb
sbb
sti
fmul
rorl
inc
mov
xor
dec
loop
ret
movsb
jae
bound
mov
inc
dec
push
pop
adcl
popf
call
nop
xor
aaa
add
jno
jg
cmpsb
mov
or
fs
movsb
aaa
shll
roll
cmp
dec
jne
push
jg
ds
gs
inc
add
mov
push
mov
cmp
gs
sub
sbb
or
push
jle
aam
jne
adc
pop
and
les
mov
inc
stos
pop
xchg
xchg
stos
loopne
and
ret
push
sti
ds
sub
push
insb
imul
in
mov
lahf
imul
adc
push
sbb
loopne
push
jne
lahf
and
into
addl
mov
dec
cld
mov
outsl
xor
push
and
inc
jg
mov
lret
pop
int3
ljmp
inc
call
cmp
cmpsl
test
les
push
rcl
mov
ret
and
mov
and
stos
inc
adc
pop
movaps
sub
cmpsb
push
loop
adc
fnstcw
xor
dec
mov
push
pop
pusha
jp
jmp
xchg
fwait
pop
mulb
cwtl
outsl
add
push
pop
and
daa
pop
daa
lret
leave
bound
pop
or
dec
fidivs
mov
sbb
and
xor
push
sbb
push
or
pop
push
enter
add
mov
mov
cwtl
stos
iret
adc
pop
jge
mov
testb
push
pop
fsubs
push
jae
mov
cwtl
fmuls
repnz
into
sub
lret
ret
js
movsl
cmpsb
sbb
push
loopne
lahf
call
sub
in
and
bound
jb
fbld
jmp
xchg
stos
scas
mov
cmp
popa
loop
mov
jb
sahf
or
pop
inc
inc
or
adc
cmp
add
jecxz
cli
test
sbb
cmpsl
mov
push
sub
out
bound
mov
out
push
pop
mov
ficomps
in
shlb
pusha
sti
fidivl
xor
roll
pop
iret
stos
out
mov
repnz
dec
sbb
mov
add
mov
xchg
in
lds
push
push
adc
jmp
and
jp
cmc
outsb
or
adc
lods
add
ja
or
nop
push
shl
test
gs
fistpll
lea
sub
ja
in
lods
clc
out
jle
hlt
mov
sub
xor
mov
sub
sub
cmp
in
mov
icebp
dec
and
sbb
sbb
lds
cmp
inc
add
sbb
add
jno
es
dec
add
or
pop
push
outsb
cwtl
adc
jle
push
lods
stos
push
push
xchg
popa
mov
sub
jp
add
aaa
or
fs
ljmp
push
pop
xor
mov
mov
lock
daa
in
xor
mov
or
int
and
test
pop
clc
imul
mov
iret
aad
adc
clc
stc
int3
inc
cmc
pop
mov
sbb
cli
push
icebp
cltd
in
mov
test
inc
push
fists
cmpsb
movsb
push
fisubrs
xchg
xchg
mov
iret
add
cmpb
je
jg
xchg
cmp
sbb
add
mov
pop
xchg
fucomi
dec
fstl
jle
mov
scas
inc
test
push
mov
shl
sbb
shll
pop
into
out
scas
mov
std
stos
clc
pop
outsb
addr16
xor
push
push
stos
xorl
daa
out
push
inc
insl
pop
cmp
adc
dec
scas
or
jae
les
jle
sbb
mov
fwait
pop
jo
and
out
shlb
xchg
xor
mov
cmp
mov
sbb
or
pop
icebp
cmp
jne
jno
shlb
lcall
jp
in
xor
loopne
adc
pusha
push
xor
insb
pop
and
addr16
push
pop
notb
into
pop
lahf
cmp
cmpsb
pop
inc
aam
es
inc
dec
and
jo
movsl
icebp
mov
pop
pop
mov
in
jbe
mov
jbe
aaa
mov
enter
mov
mov
stos
jmp
xchg
pop
loope
ja
outsb
out
rolb
inc
loop
push
push
and
enter
lret
inc
push
fsubl
cmp
lcall
push
mov
scas
loop
and
dec
loope
aaa
push
int
fs
es
xchg
ds
jle
xor
inc
and
ror
dec
lods
outsl
fisubrs
inc
dec
enter
sbb
out
inc
nop
enter
fwait
mov
nop
test
pop
cmpsb
cmpl
inc
pushf
and
cmc
jecxz
cmp
incb
loop
mov
sbb
pop
fldl
sbb
imul
adc
add
sub
into
fstpt
ret
jo
lods
loope
xchg
inc
mov
test
js
cmpsl
push
add
inc
mov
fstps
je
cmp
sub
pusha
loopne
and
cmpsb
dec
pop
mov
insb
aad
jbe
pop
aam
loope
mov
jmp
pop
imul
jecxz
fs
repz
push
subb
inc
stos
mov
test
mov
fstps
push
push
xor
cmp
clc
mov
adc
test
cld
loop
push
dec
les
fnsetpm(287
bound
dec
mov
repnz
decb
pop
fdivl
in
data16
xor
cmp
das
push
and
lock
push
xor
jae
scas
int
mov
enter
loope
pop
xchg
push
mov
or
cli
lcall
mov
cmp
enter
sub
cltd
dec
push
mov
and
in
nop
push
andb
rorl
lcall
jg
lods
sbb
int
inc
dec
jecxz
adc
mov
mov
enter
lock
in
jns
test
outsl
mov
mov
fs
or
fcomps
pusha
jl
xchg
js
lds
in
mov
test
push
shlb
lds
jae
sbb
bound
popa
sub
cmp
imull
push
cmpb
idivb
cld
into
mov
xor
cld
das
fistl
sbb
sub
fidivrs
pop
fcmove
and
xchg
fildl
mov
sub
adc
jne
nop
icebp
repnz
popf
and
sbb
sub
and
in
jbe
push
enter
and
pop
pop
push
mov
rcrl
adc
sbb
jne
jae
mov
adc
push
sbb
movsb
push
jle
cmp
ja
cwtl
int
cmp
mov
sub
cmp
int3
hlt
std
xchg
nop
sbb
adc
sbb
in
ret
push
test
mov
inc
popa
mov
adcb
pusha
lds
dec
mov
fnsave
and
popf
sub
add
inc
fisubrs
jb
add
outsb
or
push
sub
xor
push
push
leave
dec
sub
xchg
int3
add
leave
jecxz
fisttps
xlat
inc
mov
nop
jecxz
mov
mov
mov
mov
rcll
in
popf
cld
push
sti
sbb
ret
loope
push
mov
lea
aad
dec
push
popa
insl
popf
mov
sbb
mov
imulb
fbld
addl
out
lret
jg
jne
std
std
cltd
call
mov
jns
xor
lock
pop
clc
je
xchg
push
adc
jns
pop
mov
mov
bound
or
iret
aam
loop
stos
arpl
mov
stos
out
pop
sbbl
nop
xchg
push
mov
xor
scas
adc
mov
inc
cmp
push
inc
std
pop
sbb
mov
cmove
aaa
mov
sub
pop
es
pop
xor
or
mov
or
jae
mov
lods
push
mov
add
pop
aad
dec
ret
mov
inc
inc
mov
pop
outsb
popf
dec
iret
xchg
hlt
xlat
xchg
xchg
add
cmp
insb
sbb
xchg
or
cltd
aaa
aaa
mov
mov
aas
mov
outsb
test
fwait
push
sub
jb
and
cmp
sub
dec
lods
aam
dec
pushf
lods
xchg
lock
and
xor
cmp
mov
sbb
jl
inc
add
pop
jp
add
ljmp
testb
int
or
loop
rcrl
cld
sub
jns
push
shlb
pop
aam
cmpsl
sbb
nop
mov
adc
mov
push
imul
push
inc
sbb
call
shll
add
jo
shrl
loopne
in
std
and
sbb
or
cwtl
imul
adc
clc
std
shrb
arpl
push
mov
js
stos
sub
or
and
jecxz
jns
or
in
mov
pop
and
sub
add
dec
fisttps
pop
pop
ds
test
sub
jne
mov
loope
popf
push
outsl
xchg
push
pop
inc
mov
in
cltd
mov
mov
cli
out
insb
jbe
test
fsubp
inc
and
fwait
cmp
inc
pop
sbb
stc
rorl
add
sub
or
rorb
mov
and
jb
adc
out
loopne
out
mov
or
sbb
rolb
mov
jbe
mov
out
in
mov
gs
pop
inc
ret
cmp
pop
in
mov
pusha
and
decb
push
pop
iret
or
rolb
push
outsl
inc
rcll
sbb
lds
loopne
cmp
and
mov
xchg
pop
dec
imul
loop
and
imulb
xchg
test
lcall
add
lea
fwait
shll
test
dec
lcall
jbe
int
jle
push
cmp
fcmovu
cmp
mov
cwtl
rolb
add
orb
push
loopne
stos
cwtl
rep
xor
mov
jp
sub
jl
push
aas
dec
pop
sbb
out
das
dec
dec
rcrl
or
push
jne
jb
xchg
repnz
loopne
pop
mov
cld
and
pop
lcall
sti
inc
jo
loop
pop
dec
jne
adc
jo
dec
int
adc
adc
fcompl
in
push
xchg
mov
insb
mov
mov
cltd
inc
mov
push
mov
cmpsb
xor
xchg
adc
js
sbb
in
cltd
int3
hlt
jae
push
sbb
int3
and
mov
fists
aas
jnp
addr16
ja
pop
sbb
inc
rolb
pop
xlat
push
adc
adc
les
in
outsb
lret
shrb
push
loope
movsb
pop
cmpsb
push
jbe
xchg
mov
repnz
fidivs
iret
clc
mov
aaa
mov
and
sbb
in
iret
data16
popa
rolb
test
in
adc
pusha
jle
or
out
std
mov
xchg
push
add
fsubs
sbb
add
mov
out
sub
pop
decb
adc
lret
pop
outsb
enter
shl
lret
imulb
mov
cli
inc
xor
subl
pop
inc
lcall
ja
sub
loopne
cmc
test
ja
sub
cmp
dec
adc
jl,pn
lds
lahf
mov
dec
ret
and
or
cmp
cwtl
dec
pop
movsl
add
sarl
and
loope
mov
cmp
xchg
outsb
repz
sti
cli
or
and
mov
rol
dec
xchg
cmc
lock
push
pop
add
add
test
xor
int3
jmp
repnz
mov
shlb
lcall
icebp
or
movsb
or
ss
add
mov
or
in
mov
xor
xlat
add
aaa
push
cmpsb
aas
push
sbb
push
push
xchg
outsb
dec
ret
out
in
add
jmp
rcl
les
adc
mov
lahf
lcall
daa
xchg
inc
xchg
rorb
cld
es
in
sbb
sub
aas
test
inc
popa
push
dec
adc
pop
sbb
and
mov
push
mulb
dec
adc
jecxz
push
xor
xor
pop
pop
sub
mov
xchg
sbb
fidivl
bound
lahf
sbb
mov
mov
push
xchg
dec
dec
lods
adc
loope
xor
sub
dec
lret
push
cmp
enter
push
subb
inc
test
pusha
test
jb
jns
imul
pop
test
int3
xchg
mul
inc
rcrb
sbb
xor
loope
xor
rcll
loope
mov
lret
popf
imull
dec
mov
cmp
mov
mov
xlat
push
xor
cmp
dec
data16
sbb
inc
lahf
cmpsb
dec
out
push
lahf
fiadds
dec
sbbb
movsb
das
inc
lock
pop
mov
mov
sahf
cmp
mov
jge
dec
dec
test
mov
mov
into
enter
cmp
inc
aad
xor
movb
dec
push
divl
int3
enter
loop
ljmp
add
lods
fcmovnbe
mov
jne
dec
sti
addr16
imul
pop
mov
out
adc
mov
aad
movsb
loop
push
adc
xor
mov
jle
stos
mov
lcall
inc
and
pushl
mov
fcoms
xor
popf
fcmove
lds
inc
mov
add
movsb
xchg
adc
les
dec
mov
cmc
ljmp
pop
xchg
loope
je
pop
scas
sbb
dec
inc
loope
lret
loopne
sub
pop
xlat
xor
jecxz
jno
cs
stos
sbb
push
aam
add
call
push
in
mov
push
push
pop
ja
xchg
out
andl
and
mov
inc
cmp
es
sti
das
mov
mov
aaa
push
and
pop
xlat
clc
pop
movsl
jmp
push
hlt
lock
fcompl
push
dec
push
add
aad
mov
sub
mov
test
daa
jns
fmuls
jb
loopne
xchg
out
xor
in
and
mov
mov
pop
clc
insb
cmp
bound
stos
mov
mov
ds
lods
mov
inc
jns
adc
je
mov
addl
out
xor
sti
lds
rcrl
daa
add
push
out
cmpsb
xchg
pop
mov
out
adc
dec
sbb
insl
leave
cmp
aaa
in
lret
mov
mov
aam
push
mov
push
sub
inc
es
scas
fmuls
fsts
lahf
inc
adc
inc
mov
in
and
je
pusha
in
pop
vmovups
dec
add
inc
add
inc
xor
xchg
push
pop
int
inc
and
adc
jmp
adc
fcomps
out
insb
jl
outsb
xchg
cmp
faddl
fnstcw
sbb
inc
je
cmp
dec
mov
fldt
ret
xor
lock
mov
nop
jge
pop
rorl
sub
adc
out
jecxz
mov
xchg
loopne
out
scas
int3
call
out
aas
add
bnd
mov
notl
cld
dec
and
imull
arpl
push
insb
out
sbb
mov
xchg
and
cwtl
mov
popl
and
aam
dec
aas
push
fwait
cmp
mov
push
dec
inc
push
adc
adc
jecxz
ljmp
and
mov
xchg
lock
push
and
add
stos
scas
lcall
aaa
mov
aad
pushf
jnp
xchg
or
mov
mov
cmc
mov
and
dec
push
cmpsl
xchg
pop
add
out
aaa
inc
dec
mov
xchg
cld
incb
outsb
dec
sub
int
fs
lods
vpaddsw
and
xorb
insb
dec
mov
inc
sbb
movsl
xchg
dec
pop
fsubp
out
jmp
add
sub
aaa
cmp
pop
xor
cmp
outsb
inc
sahf
cmp
cltd
and
dec
test
dec
or
xchg
pop
push
push
ret
mov
pop
mov
add
mov
push
pop
neg
inc
orl
mov
fildll
ja
pop
les
icebp
mov
rorb
xor
pop
cmp
jmp
xchg
outsb
sbb
stc
mov
mov
push
jge
push
adc
pop
pop
xor
xchg
xor
or
mov
imul
pop
adcl
sbb
es
imul
and
clc
adc
jmp
or
jg
jne
imul
xchg
insl
or
mov
adc
push
add
push
out
clc
aad
or
loope
pop
movsb
dec
jbe
add
sbb
gs
stos
addr16
imul
lods
sub
mov
mov
lahf
pushf
inc
xchg
inc
ds
mov
icebp
cmp
aad
loope
orl
sub
cmp
jle
int3
pop
sbb
xor
dec
in
into
inc
and
sub
lcall
cltd
pop
daa
jno
ret
dec
jle
lahf
subb
in
jle
xchg
jae
inc
and
lahf
push
push
aas
or
xlat
mov
dec
xor
into
out
push
movsb
loopne
fisubrs
cmp
and
lods
call
inc
testl
cli
ret
jne
add
cltd
dec
ret
in
xchg
xchg
sbb
jnp
fs
push
loop
cmpsb
fcmove
push
and
aaa
orl
outsb
mov
sub
cmc
fimuls
dec
inc
mov
and
movsl
movsb
cs
cmp
mov
les
cld
xchg
xchg
jno
or
stos
fidivrl
loope
loope
les
movsb
inc
ret
pop
or
sti
jbe
mov
push
and
leave
push
mov
lahf
mov
stos
and
lcall
and
mov
push
dec
decb
sub
pop
cmp
rclb
push
jle
pop
mov
pop
xor
in
sub
insl
mov
push
cmpb
ror
outsb
mov
addr16
cmpsl
add
adc
data16
and
mov
gs
dec
in
xor
push
mov
ret
pop
mov
insl
subl
xchg
xlat
cmpsb
xchg
dec
mov
in
jnp
xchg
ss
repnz
inc
shr
jle
mov
scas
or
add
ret
push
inc
movsb
mov
sub
ffreep
imul
out
pushf
adc
ret
fdivr
push
sbb
pop
push
or
xchg
mov
dec
mov
daa
xchg
adc
xor
sbb
loope
mov
imul
clc
in
ja
mov
aaa
and
sub
das
push
mov
mov
jg
or
pop
xchg
mov
hlt
mov
ja
mov
push
xchg
xchg
popl
xchg
sbb
in
out
lods
sbb
push
aas
out
in
push
dec
adc
xor
ret
cmc
xchg
insl
imul
clc
mov
arpl
cmpsb
ret
movsb
add
jmp
int
repz
cltd
dec
sbb
xchg
cs
in
shll
xor
and
pop
sbb
sub
icebp
mov
adc
or
lcall
cmp
inc
lret
mov
push
orb
mov
xchg
mov
lods
or
push
jmp
fs
xchg
adc
cltd
and
push
pop
jmp
ret
ja
scas
cltd
mov
mov
icebp
leave
ret
shl
mov
jnp
adc
mov
inc
mov
outsl
jae
add
add
sbb
sub
mov
loop
pop
sbb
or
mov
inc
xchg
stc
pop
sbb
inc
mov
in
dec
addr16
aas
jo
jbe
fucomp
mov
mov
sbb
mov
jne
fisttpl
scas
adc
lret
outsl
pop
dec
lahf
inc
stos
mov
push
loopne
shlb
cmpsb
popa
hlt
fnstcw
add
out
aad
and
dec
inc
cmp
sti
push
jae
std
or
addr16
push
push
and
sbb
aas
pop
mov
pop
int
in
aas
mov
jle
sti
adc
xchg
aam
mov
or
mov
std
hlt
mov
mov
je
ret
les
outsl
in
lret
cmpsb
mov
push
adc
cmp
leave
jne
push
pop
cld
cmc
cmp
xor
out
fwait
or
add
push
imul
xor
out
fiaddl
js
mov
mov
dec
push
add
dec
sbb
outsl
dec
xorl
xchg
ja
adc
cmpl
test
aad
mov
adc
in
fld
fisttps
cmp
jo
and
adc
inc
arpl
enter
jns
mov
push
push
inc
outsb
cmc
xchg
out
inc
fwait
out
fimuls
subb
and
add
lods
aam
and
out
negb
push
pop
push
xlat
xchg
push
sarb
dec
jo
ss
lock
or
mov
sub
mov
loop
pop
out
mov
pop
mov
inc
dec
xor
push
pusha
mov
add
loop
push
mov
fmuls
cltd
sbb
pop
pushf
icebp
pop
lea
jns
or
mov
sub
scas
lods
es
xor
popl
lahf
sti
sub
lret
xor
movsb
rorl
push
pop
test
mov
jno
stos
xchg
mov
jae
push
jp
repnz
sti
dec
out
xlat
sub
mov
iret
sub
pusha
leave
shl
jg
lahf
fdivrp
lret
fsubl
fmul
sbb
xchg
push
push
push
int
adc
jp
sbb
jg
sub
and
mov
xlat
mov
enter
inc
and
dec
jg
inc
and
pop
hlt
outsb
adc
out
sbb
mov
mov
icebp
jo
out
pop
in
mov
clc
hlt
jg
xor
ja
sub
lods
xchg
xchg
dec
sbb
scas
sbb
imul
xchg
arpl
cmp
adc
and
lods
push
xchg
pop
and
js
insl
mov
dec
bound
xor
sbb
in
das
pop
aad
fwait
out
movsb
add
xchg
adc
aad
mov
addb
sbb
push
jecxz
in
es
int
mov
mov
test
xchg
adc
jge
cmp
mov
adc
adc
stos
and
icebp
sub
or
pop
or
and
or
xor
pop
sbb
jnp
pop
mov
lret
jecxz
xchg
stos
xor
dec
aaa
stos
jmp
mov
fcomps
pop
push
xchg
clc
mov
mov
cmc
mov
pop
jg
or
cmp
test
hlt
aaa
pop
mov
test
jp
mov
or
sbbb
mov
xchg
pop
call
insl
sub
fs
xor
ds
sbb
out
arpl
int
cld
push
inc
xor
and
dec
pop
and
mov
enter
jae
repnz
xor
movsb
mov
sti
jns
and
in
fwait
enter
pop
xchg
jae
daa
ss
adc
sub
cmc
mov
dec
mov
xchg
mov
jae
cmp
mov
notb
cmp
dec
xchg
push
icebp
adc
clc
mov
jge
xchg
ret
xchg
into
mov
pop
inc
bound
or
lds
in
js
outsb
in
jo
fldln2
fwait
pop
cli
sub
inc
inc
daa
hlt
jmp
mov
ljmp
xchg
sub
or
rcrb
and
cmp
push
sbb
icebp
pop
call
andb
lds
aam
pop
scas
in
lret
das
mov
js
mov
scas
lods
aam
pop
cmpsl
cmp
sbb
xorb
dec
ss
es
mov
popf
mov
out
std
lcall
inc
jbe
mov
out
sub
int3
push
sbb
mov
xorl
dec
push
mov
jo
add
std
fcompl
cs
cwtl
dec
es
jo
mulb
mull
pop
add
ret
mov
jle
pause
dec
mov
js
push
lods
add
cmp
cmp
data16
les
test
push
sub
es
dec
fildll
dec
jns
pop
test
pop
test
sbb
loopne
outsb
or
sbb
daa
xor
lret
ror
mov
and
cli
inc
jnp
in
out
rclb
jp
aam
mov
pop
cmp
pop
or
outsb
mov
sqrtps
aas
jbe
je
notl
mov
aam
lds
mov
mov
lods
in
mov
inc
add
jge
add
daa
sbb
push
xchg
aam
ljmp
push
inc
aad
xchg
sub
push
sahf
es
jmp
cs
cmc
xchg
mov
fidivs
sahf
out
xchg
daa
aad
aam
sub
sub
push
cld
setge
arpl
jmp
jle
mov
add
push
mov
lds
out
jns
pop
pop
push
popf
sbb
dec
dec
cmp
push
fwait
inc
cmp
pop
js
inc
mov
and
mov
lds
arpl
sub
cmp
int
loope
lahf
jp
ja
pop
pop
imul
rcrl
mov
das
pop
dec
sbb
and
dec
pop
ds
sti
ret
jne
pop
push
popa
iret
loope
mov
mov
sub
jbe
cmp
sbb
fisttpl
aam
cmp
adc
add
mov
sub
cmp
cmp
in
mov
test
call
jnp
sbb
dec
push
jmp
bound
sub
sub
sarl
inc
pop
mov
icebp
xor
stos
lods
and
mov
dec
ret
bnd
clc
xor
dec
cmc
sub
imul
test
xor
mov
and
pusha
push
hlt
sbb
pop
lret
cmp
imul
jae
cmpsb
push
push
dec
aam
pop
sbb
cltd
movsl
add
cld
in
adc
mov
inc
pop
mov
xor
ljmp
lods
xchg
popa
push
pop
insl
adc
mov
adc
arpl
ja
mov
inc
hlt
jg
jp
cmc
push
ret
pop
rorb
sbb
lcall
or
popa
jge
mov
push
in
xor
sub
mov
ljmp
xchg
rcl
shll
mov
push
add
shl
test
icebp
cmp
cmpsb
orl
or
cmp
or
mov
sbb
push
pop
repz
dec
push
xchg
xchg
addb
shll
xor
jge
push
fcomps
ret
addr16
in
inc
xchg
xlat
mov
movsl
cmpsb
dec
arpl
rorl
lret
pand
popa
inc
mull
movsl
int
push
push
xchg
lcall
jge
dec
pop
add
faddp
push
mov
movsb
pusha
in
je
cmp
jg
fisubrs
mov
out
sbb
fwait
and
mov
pushf
test
aaa
xchg
nop
ds
dec
shrb
pop
lahf
lea
fnstcw
inc
in
push
shlb
out
mov
jmp
or
jns
cmpsb
stc
inc
mov
aad
and
leave
fucomp
aad
mov
jno
mov
stos
jns
repz
notb
aad
out
jl
jnp
jge
ret
or
sub
sub
mov
loop
or
adc
xchg
cmp
dec
dec
std
out
jmp
adc
sbb
cmp
and
dec
pop
and
sbb
test
push
repnz
pop
mov
add
rep
jp
add
push
mov
roll
push
jecxz
push
fmull
add
inc
pop
xor
pop
jecxz
cmpsb
mov
hlt
inc
inc
mov
sbb
fisttpll
dec
in
and
stc
fcmovne
add
pop
sub
aam
inc
mov
cmp
movsb
stos
jp
stc
mov
mov
stos
jne
aas
rcr
xchg
loopne
sub
outsl
inc
xchg
sbb
scas
into
dec
sbb
push
mov
lds
rorl
mov
sarl
lods
cltd
pop
cmp
lods
and
sti
nop
in
adc
xchg
fcmovnb
pop
aas
scas
shlb
insb
xor
adc
insl
adcb
xchg
ss
arpl
fs
sbb
add
sub
mov
js
cmp
cmc
les
shll
push
pop
lret
pop
mov
xchg
out
push
add
add
pop
pop
mov
shrb
xchg
insb
dec
std
xor
mov
dec
xlat
mov
ljmp
add
jae
insl
mov
in
arpl
adc
lcall
movsl
cs
out
xchg
xor
std
cli
pusha
cmpsb
icebp
and
jb
add
insb
inc
mov
aaa
jg
sbbl
xor
or
push
jnp
xor
mov
sub
push
push
dec
adc
or
inc
jge
inc
mov
scas
test
inc
outsl
inc
lods
sub
xor
ror
int
pop
cli
mov
repz
dec
inc
popa
mov
stos
imul
imull
in
mov
xor
pop
mov
jl
cli
xchg
sbb
aam
xchg
jno
sbb
outsl
ja
mov
inc
ucomiss
mov
rcll
mov
pop
daa
stos
data16
push
mov
or
loopne
imul
subb
adc
sub
lods
lahf
xlat
sub
jae
xchg
and
or
lods
stos
adc
popf
negl
sbb
cmc
pop
test
jno
sti
int
leave
inc
xchg
mov
inc
popf
add
xor
mov
pop
push
jl
cli
inc
jb
fcmovbe
inc
adc
idivb
jl
pop
outsl
in
mov
fnstsw
sbb
mov
or
in
in
andb
sbb
ret
fwait
and
aaa
rcrl
xor
mov
pop
fstpl
pop
fcmovbe
int
push
xlat
xor
sub
cmp
ds
out
xchg
cmp
push
or
sub
adc
dec
popa
sub
insl
loopne
ret
repnz
fsubr
dec
mov
sbb
stos
mov
loope
out
cltd
pop
stos
mov
and
je
inc
mov
popa
inc
push
mov
pop
mov
cmpsl
pop
cwtl
xor
push
mov
movsl
pusha
shlb
lods
jb
mov
sti
push
fildl
mov
sahf
sbb
push
add
mov
dec
xor
nop
fcmovnu
das
pop
fistl
sbb
push
out
int
push
into
js
jge
mov
jecxz
js,pt
cmp
sub
xchg
adc
aaa
iret
es
lods
aas
pop
out
into
xchg
inc
and
xor
adc
in
push
or
pop
cwtl
pop
addl
dec
aad
add
loopne
inc
mov
mov
andb
xor
pop
xchg
mov
loop
xor
inc
cmp
enter
pop
test
repz
dec
loopne
or
imul
addr16
sub
into
cmp
lods
pop
xchg
mov
fistpl
outsl
jecxz
fiaddl
sarb
in
inc
out
mov
scas
lea
mov
pop
stc
in
pushf
mov
jne
loope
out
dec
push
and
mov
jecxz
mov
sub
imul
inc
aad
pop
adc
iret
movsl
and
outsl
add
stos
int
repz
xor
jmp
ja
sbb
push
xor
and
mov
ret
push
cmp
lret
xchg
cmovp
ja
and
les
mov
pop
cmp
adc
mov
clc
pop
aas
pop
sarl
data16
push
xor
mov
fwait
sbbb
stc
push
mov
sbb
enter
mov
jae
dec
dec
test
sub
arpl
or
add
fwait
movsb
cmpsl
adc
lret
adc
inc
inc
movsl
lret
daa
cmp
sub
lods
pop
pop
fxch
gs
cmp
cs
fsubrl
call
mov
pop
mov
stos
jne
mov
das
sub
imul
jmp
es
xlat
aad
hlt
aas
stc
mov
sbbl
int3
adc
cmp
lods
or
stos
in
adc
cmp
andb
add
xor
enter
add
adc
in
xor
pop
cmp
daa
loopne
leave
mov
aam
nop
push
jl
inc
dec
cwtl
lock
mov
out
mov
xor
rcr
hlt
hlt
jnp
push
inc
sarb
jns
push
cld
and
dec
imulb
mov
clc
mov
and
mov
adc
aas
push
out
xor
adc
cmpsb
fdivl
loop
mov
cmp
test
pop
out
xchg
mov
call
nop
fcompl
push
mov
mov
lahf
icebp
out
or
fwait
movsl
out
stos
outsb
cmc
and
sub
outsl
push
pop
fildl
pusha
stos
out
pop
leave
xchg
mov
lret
dec
outsl
mov
lret
pop
dec
rcrb
cld
jmp
arpl
cmp
fimull
es
lock
pop
and
je
into
add
adc
andb
sbb
push
lea
pop
push
scas
push
jg
push
cli
xor
mov
aas
out
push
ss
sbb
jp
mov
add
push
lds
xor
xchg
stos
jns
adc
pop
jno
scas
cmp
mov
fidivl
pop
js
mov
fisubs
rcll
push
pop
pop
insl
mov
pop
cmp
mov
out
add
sub
mov
xor
daa
fnstsw
in
imul
negb
cmp
mov
fildl
mov
imul
jle
out
or
sub
pop
cltd
lcall
in
in
xor
lcall
cmp
ror
pop
push
arpl
xchg
popl
inc
enter
mov
in
jno
sbb
out
scas
sbb
test
cmp
sub
jns
aaa
movsb
sarl
imulb
test
xor
fst
mov
sahf
cmp
shlb
fldcw
movsl
lahf
push
cmp
add
bound
scas
pop
nop
cltd
pop
in
shlb
xchg
jo
pop
jmp
fbstp
popf
lahf
xchg
jmp
jmp
mov
cmpsl
sbb
push
and
vmwrite
push
adc
mov
add
adc
fsubl
out
test
popa
lcall
mov
add
nop
jne
adc
cld
pop
adc
ss
loopne
ret
je
enter
mov
sbb
adc
lcall
push
mov
xor
out
jae
cwtl
adc
xbegin
dec
ljmp
ror
sbb
popa
out
jg
pop
jmp
add
cmp
lret
sub
sub
push
imul
mov
sbb
xor
add
js
in
je
jo
popf
cli
ljmp
cwtl
int3
pusha
sbb
dec
push
xor
enter
sub
xchg
subl
ret
push
cli
mov
loopne
fbstp
dec
mov
aad
fldt
push
lret
repz
pushf
sub
dec
cmpsb
mov
aam
movsb
and
xchg
loopne
repz
push
jno
mov
push
push
mov
jmp
test
in
mov
mov
stos
mov
fisttps
imul
arpl
sub
sub
loope
mov
lcall
inc
add
fadds
imulb
nop
push
add
push
pusha
scas
push
andl
xchg
aaa
cmp
lret
jl
ljmp
jp
sbb
dec
inc
dec
fsubl
fmulp
adc
enter
mov
mov
call
rolb
inc
add
daa
push
or
pop
fsubl
imul
popa
xchg
rolb
pushf
xlat
imul
cmp
cli
xor
jo
imul
jg
negl
je
jecxz
or
dec
cmp
xchg
pop
cwtl
fdivl
xchg
enter
and
clc
popl
pop
xlat
sub
aad
pop
inc
enter
xchg
xchg
xchg
xchg
cmpsb
push
leave
push
push
cltd
push
adcb
xchg
mov
in
adc
and
cmp
out
sub
call
sub
adc
jmp
and
arpl
fidivrs
shll
repnz
filds
mov
push
stc
std
leave
fmul
sahf
imull
fnsave
sub
insl
in
sbbl
mov
insb
shlb
inc
and
mov
insb
dec
in
icebp
sub
mov
lahf
mov
or
mov
repz
hlt
lcall
pop
imul
and
dec
xchg
pushf
pusha
lods
outsl
pushf
insl
incb
sahf
fldcw
push
push
jp
dec
pop
rcrb
lret
cwtl
xchg
popf
or
scas
xor
ret
pop
addb
sbb
fdivl
imul
mov
cs
sub
scas
pop
dec
dec
es
data16
push
aam
lea
in
xor
iret
push
xchg
inc
dec
cmc
aas
cmc
scas
stos
test
and
or
fmuls
xor
andb
pop
and
mov
lods
out
movsl
sub
call
xchg
test
jg
push
jnp
inc
ds
fwait
sbb
inc
lea
dec
loope
call
decb
daa
adc
repnz
movsl
add
push
mov
mov
in
cmp
lret
aas
call
and
sub
mov
pop
es
insb
pop
inc
add
cmp
mov
mov
ret
sahf
pop
mov
ds
enter
xor
ror
pop
imul
mov
xor
jg
jbe
in
fisubs
aad
pushf
push
lea
stc
jl
lods
pop
out
cld
push
inc
shrb
lock
inc
xor
in
lds
push
push
pop
inc
lcall
pushf
push
xchg
sub
push
cmpsb
jl
mov
bound
ljmp
nop
iret
add
or
cmp
pop
sbb
cs
dec
lret
lods
stc
adc
das
add
sbb
push
js
clc
inc
xchg
movsl
inc
push
mov
loope
movsl
mov
lret
test
bswap
lret
js
repnz
test
sub
fsts
in
in
pop
jp
inc
insl
mov
das
cmp
inc
dec
xchg
push
int
stos
mov
fldl2t
repz
fxch
into
push
lock
dec
cmp
mov
and
insb
mov
lods
scas
mov
nop
xorb
sbb
and
fisubl
movsb
ja
jae
sub
cmp
stos
push
mov
stos
cmp
sbb
test
stos
sbb
add
out
loopne
loopne
dec
loopne
outsl
shrb
jge
mov
addl
push
insb
push
sahf
jno
push
add
pmulhw
push
outsl
push
loopne
lret
or
int3
movl
sub
add
and
or
lahf
xor
std
in
pop
mov
xchg
jne
popf
push
mov
cwtl
pop
dec
movsb
xlat
cmp
mov
movsb
ret
push
imul
push
xor
das
pop
adc
cmp
enter
xor
inc
fbld
mov
xchg
popa
cmp
imul
xlat
pop
xorb
mov
jmp
push
movsb
gs
idivl
cli
inc
jmp
or
adc
insb
push
mov
pop
jb
je
jl
je
cltd
adc
loopne
pop
mov
icebp
mov
rcl
push
push
test
add
pop
pop
lds
andb
or
scas
in
pop
dec
sub
je
out
push
mov
mov
or
mov
inc
cs
or
dec
test
es
push
test
fidivrs
je
imul
loop
mov
sub
sahf
cs
push
cltd
sub
fldl
icebp
sbb
rclb
sbb
xchg
inc
push
or
inc
out
fwait
sbb
mov
test
dec
and
sbb
mov
jmp
push
and
dec
mov
les
insl
xchg
lahf
insb
shll
and
aam
negb
mov
push
dec
sbbl
cmp
cmp
jb
push
dec
cmpsb
popf
test
jg
pop
inc
cmp
sbb
aad
cmc
lret
repnz
ret
pop
into
stos
mov
clc
dec
test
out
cmp
out
push
jge
fcoml
sbb
inc
add
sub
pop
dec
mov
cmpsl
das
aam
sub
pusha
ret
lret
xor
iret
or
xchg
mov
sti
fisubs
fstpl
xchg
xchg
mov
mov
sbb
sub
mov
and
cmp
addr16
jbe
or
or
cs
pop
lahf
icebp
sub
cs
cmp
das
not
push
loope
fs
or
or
mov
sub
repnz
fldcw
xlat
push
shll
in
mov
aad
sbb
mov
nop
pop
xor
aaa
pop
mov
jmp
into
ss
fbld
push
push
ljmp
lods
mov
mov
pop
mov
ret
adcl
sub
movsl
sbb
cmpsb
adc
sub
dec
and
out
pop
shll
jno
and
xor
add
out
in
sahf
insb
dec
mov
mov
sbb
pop
icebp
out
mov
nop
ds
xchg
xor
mov
stc
mov
dec
sbb
popa
ret
add
testb
sar
mov
addr16
data16
ljmp
imul
sub
jne
jg
jno
xor
nop
or
or
pop
fimull
mov
or
sbb
mov
sti
ds
mov
out
rclb
mov
scas
add
aad
jno
lret
xchg
mov
sub
lahf
pop
sbb
fnstenv
and
fwait
hlt
cmp
inc
jge
dec
or
sbbb
jl
lret
jmp
mov
in
mov
push
cmc
inc
pop
ja
rorb
push
dec
gs
test
dec
push
jp
test
xchg
mov
push
jge
lock
sub
xchg
inc
shlb
mov
incl
jbe
mov
rolb
pop
das
dec
fmul
leave
stos
cmp
sbb
sub
jne
lret
mov
mov
xor
int
adc
jg
lahf
cmp
mov
adc
sbb
lahf
cmc
pop
adc
out
jae
in
rcrl
dec
jecxz
mov
and
lock
cmp
loop
imul
xor
lahf
fwait
insb
add
fdivr
aad
or
mov
cmp
xchg
cwtd
cmp
fs
movsb
cld
repnz
stos
fsubs
popa
dec
jle
sub
sub
jae
lahf
cmp
or
aad
pop
popa
sbb
das
push
push
imul
jl
dec
and
cmpsl
xchg
pop
mov
popa
mov
xor
es
add
leave
jge
pop
jmp
mov
hlt
sub
dec
jbe
call
jp
xor
or
aas
fisttpl
xlat
filds
test
rcr
pop
xchg
les
leave
clc
bound
mov
pop
icebp
mov
xor
inc
xor
jbe
iret
popa
or
scas
cmpsl
sahf
movsl
pop
movntps
xlat
leave
test
test
jns
jb
pop
movsb
fdivrs
dec
cwtl
jg
in
mov
dec
mov
pusha
pop
inc
imul
fisubs
xor
lods
stos
push
inc
es
lods
dec
lock
into
cmp
into
ret
add
cld
testb
push
test
sahf
add
lcall
adc
hlt
pop
jge
dec
adc
test
mov
and
xchg
or
jae
fucomip
std
adc
filds
sahf
jo
rclb
mov
orl
mov
or
push
xor
and
and
lods
movsl
cwtl
add
test
cmp
cmpb
mov
iret
mov
mov
add
lock
lea
and
mov
pop
cmp
or
add
add
repz
in
adc
adc
push
dec
mov
call
xchg
push
push
movsb
push
or
pop
out
enter
cmpsb
adcl
repz
call
inc
hlt
sub
add
nop
cmp
pop
lahf
iret
in
and
jge
mov
bound
pop
xchg
xchg
cmp
sbb
adc
imul
jp
cwtl
xchg
xchg
jp
stos
mov
inc
lcall
and
dec
mov
mov
push
mov
cmp
jge
dec
ja
cmc
mov
or
repnz
jo
adc
jbe
or
push
test
or
add
jbe
inc
sahf
cmc
nop
jp
push
or
sbb
shlb
fldenv
nop
lcall
push
mov
andb
mov
cli
or
aam
mov
pusha
lret
addr16
jnp
std
in
and
movsl
xchg
cmp
cmp
mov
ret
mov
pop
je
push
loopne
dec
dec
pop
shlb
in
ss
pop
or
std
out
jl
pop
lret
out
pop
push
repnz
daa
xchg
pop
xchg
dec
je
push
rcr
iret
mov
outsl
stos
mov
popf
pop
int3
sti
mov
xor
into
inc
xchg
dec
pushf
and
repz
out
push
sbb
aam
lret
jl
test
scas
push
push
and
ret
int
mov
push
sub
std
mov
shll
outsl
add
insl
mov
mov
movsb
and
je
xor
jl
jbe
enter
xlat
sbb
in
movsb
and
cmp
sub
leave
mov
mov
ljmp
cmpsl
inc
repnz
cmpsl
xlat
leave
xchg
jl
out
fistl
push
xchg
out
push
jle
lret
mov
push
out
mov
jl
adc
cwtl
cmp
mov
jl
lds
out
lahf
pop
xor
aad
jmp
cmp
sbb
mov
shrl
xor
inc
bound
push
add
ror
pop
xchg
loope
cwtl
inc
cld
imul
or
add
stos
push
stos
rcrb
push
or
pop
enter
mov
jb
pushl
inc
scas
lock
fwait
mov
or
cwtl
test
push
cmp
ss
add
jb
lods
inc
in
imul
into
mov
mov
fsubs
sub
fldl
les
mov
ss
fs
imulb
sub
cltd
fwait
divl
nop
pop
das
adc
loopne
nop
ja
add
lds
in
xor
mov
push
je
and
sbb
loope
lock
icebp
dec
popf
std
mov
shrb
fildl
cwtl
pop
cmpsl
in
or
bound
push
in
mov
mov
cmp
add
push
lret
jnp
pop
inc
push
or
mov
jp
ret
lret
push
jne
mov
ds
push
add
sbb
movsl
and
sbb
jmp
pop
sbb
icebp
cli
sbb
jb
push
mov
push
cmpsl
roll
sbb
dec
lods
sub
push
std
mov
pop
xchg
inc
jge
ja
jg
push
repz
sub
mov
movsb
imull
add
pop
fstpl
repz
repnz
enter
sbbl
fdiv
dec
out
pop
dec
fadds
in
xor
mov
mov
mov
and
rcrl
xchg
sub
mov
repnz
arpl
jge
sub
test
mov
cs
into
fwait
lret
pop
add
insb
jecxz
xchg
xor
mov
push
pop
pop
xchg
rclw
mov
fsub
lret
jge
leave
test
roll
mov
lock
aam
cmp
dec
cmpsb
int
inc
aam
sti
shlb
cmp
xchg
clc
mov
push
mov
lcall
mov
mov
mov
pop
inc
lods
jne
lahf
ljmp
pusha
mov
cmp
repz
fcompl
negb
lea
inc
ffreep
ret
cmp
mov
lods
mov
addr16
bound
loop
cmp
rol
dec
inc
iret
pop
xor
mov
jns
dec
sbb
mov
inc
add
mov
mov
ret
pusha
dec
dec
fnsave
shr
or
iret
or
mov
fisttps
fmuls
adc
cmpsl
xor
maxps
push
add
jp
jae
xchg
cmpsl
loopne
cld
mov
and
and
mov
add
jmp
mov
inc
gs
cmp
sti
sub
push
lock
and
mov
fadd
mov
mov
insb
sub
in
pushf
mov
pusha
inc
aam
adc
cmpsb
std
and
js
cmp
xchg
sub
rcrb
mov
sbb
icebp
fwait
loop
stos
lret
mov
pop
adc
movsl
pop
cmp
test
sub
jmp
push
mov
dec
mov
aaa
mov
lahf
ret
int3
mov
repnz
add
fwait
sub
lds
add
cmp
mov
add
das
fisubl
mov
popf
repz
shl
mov
pop
inc
mov
test
push
mov
test
inc
in
adc
xchg
je
js
adc
gs
sti
sbb
push
push
daa
inc
push
hlt
adc
cwtl
mov
mov
mov
clc
add
lock
mov
jns
in
jb
sub
mov
mov
jl
or
sub
out
xchg
pushf
inc
es
outsb
pushf
pop
push
stc
xchg
xor
mov
mov
into
xchg
xchg
ret
cld
mov
push
push
or
mov
sub
jg
call
sbb
ja
scas
mov
mov
mov
jb
xchg
fwait
inc
arpl
insb
es
adc
ret
das
repz
adcl
icebp
mov
dec
mov
adc
or
cmp
mov
sub
imul
adc
lds
ret
cs
jne
pop
mov
sti
lcall
mov
outsb
mov
aad
xor
lcall
ret
ja
mov
leave
xor
push
cwtl
mov
pop
leave
and
mov
lock
loope
fs
sbb
xchg
xor
addr16
mov
inc
jnp
jo
testb
xchg
pusha
lret
push
xor
xor
lds
out
leave
jb
jns
cmpsb
insl
in
mov
xchg
mov
gs
loopne
dec
or
jbe
into
test
add
clc
cmc
adc
fists
inc
fnstenv
fdivrl
testb
and
mov
test
sub
je
jno
aaa
mov
xchg
sbb
xor
push
fdivr
push
fs
jecxz
mov
inc
sarl
push
jmp
into
int
ret
xchg
std
je
cmp
inc
jecxz
xchg
dec
fwait
inc
add
in
pop
mov
jg
xchg
lods
pop
nop
sahf
xchg
fstl
mov
repz
in
cmc
nop
into
arpl
mov
inc
lret
xchg
or
mov
jb
dec
inc
pop
pop
inc
pop
rcrb
sbb
imul
insl
arpl
add
add
popw
es
jl
out
sub
stos
xor
adc
lods
mov
xor
cmpsb
jb
mov
shll
mov
add
ror
or
out
push
ret
pop
imul
jbe
push
cmp
lock
pop
dec
xor
mov
cli
pop
push
xchg
aas
enter
arpl
sar
cltd
mov
pop
fcmovbe
ss
out
mov
iret
add
mov
or
mov
dec
addr16
push
jp
and
xchg
mov
add
leave
in
fndisi(8087
lock
aaa
aas
or
cmpsb
subb
fwait
sub
sbb
aas
dec
inc
mov
stos
cmp
les
imul
lea
insl
cmpl
lods
lods
dec
and
cmp
xchg
mov
pop
add
jo
fisttps
xor
enter
cltd
jmp
jl
pop
int
mov
lock
and
sub
mov
push
and
jnp
icebp
out
sbbl
and
cmpsb
outsb
scas
push
popf
ss
jb
ss
addr16
outsb
fadd
sbb
sahf
cmp
jnp
pop
push
outsl
aad
fs
jno
xchg
dec
mov
dec
pop
or
mov
movsb
mov
mov
lcall
testl
cmp
cmp
cmpl
mov
out
sbbb
jmp
ljmp
stos
testb
in
mov
lods
push
or
sub
xchg
dec
notl
subb
dec
test
gs
sbb
inc
lcall
push
xlat
mov
lds
mov
xorb
mov
roll
scas
xor
ret
ja
in
pop
add
out
inc
fdivrs
sub
call
xchg
fildll
mov
cmp
loopne
or
js
pusha
dec
rcll
adc
push
shrl
push
jl
mov
mov
mov
inc
mov
jns
push
scas
mull
sbb
outsb
in
pop
xor
inc
pop
dec
orl
jne
test
and
enter
xor
popf
ds
lock
les
dec
cs
or
or
outsb
cmp
bound
lcall
call
xor
mov
xor
push
adc
jns
sub
loope
daa
push
xchg
sub
lds
xchg
push
cwtl
mov
imul
shlb
mov
and
aas
pop
dec
mov
sbb
add
aam
cmp
es
divb
mov
mov
fdiv
outsb
imul
aaa
mov
xchg
sub
sahf
inc
add
mov
out
lock
pop
scas
popf
dec
sbb
pop
out
push
inc
movsb
cmpsb
adc
and
dec
lret
fsubs
stc
push
mov
push
dec
inc
dec
jmp
mov
lods
fcoml
mov
dec
loop
and
mov
mov
jge
dec
mov
lods
jne
pop
inc
push
sahf
adc
inc
mov
xchg
test
mov
adc
xchg
mov
enter
rcrl
xor
cmp
adc
nop
or
sub
xchg
cld
test
fidivrs
mov
in
mov
pop
clc
push
shll
je
or
xor
movsl
jp
imul
fcom
cwtl
sub
out
das
outsl
std
mov
xlat
mov
inc
mov
cs
aam
mov
fsubr
xor
ljmp
ret
movsl
dec
add
pusha
jno
lret
push
mov
daa
outsl
mov
cmp
cmpsl
sbb
sbb
push
out
pop
inc
js
mov
xchg
cmpsl
movsl
and
sbb
fists
add
lods
inc
xor
jle
popf
into
ss
mov
mov
shlb
mov
or
adc
fbstp
mov
sub
jmp
jg
push
dec
xor
push
lods
mov
pop
mov
push
mov
fnstsw
push
and
or
test
loop
mov
pop
in
bnd
aaa
jmp
xchg
mov
pushf
push
mov
outsl
add
inc
mov
fwait
jns
push
repz
sarb
scas
shrl
imulb
pop
rclb
pop
loop
ffree
in
adc
pop
cmpsl
in
dec
adc
cmp
daa
jecxz
ffreep
mov
cwtl
adc
xorl
xchg
loop
loope
pop
jb
fisubl
fstps
and
outsb
gs
nop
cmpsl
pop
out
mov
adc
mov
mulb
mov
jg
test
sub
and
adc
in
push
jmp
jmp
mov
aam
sti
scas
popf
hlt
fidivrl
dec
jo
ret
or
fistl
enter
testb
scas
mov
fsub
es
pop
jmp
jmp
dec
and
cmpsl
ret
mov
je
pushf
scas
cmpsl
cmp
xor
call
shlb
xchg
mov
adc
inc
testl
fidivs
or
mov
sbb
in
jmp
cmp
sub
sbb
je
in
aam
jle
mov
sub
fdivrs
push
pop
sbb
movsl
movsl
mov
rcll
scas
stos
and
inc
jnp
and
cmc
mov
and
fdivr
mov
push
lods
fstpl
jmp
xchg
push
aad
das
or
out
push
push
jae
add
fbld
adc
cs
adc
scas
les
mov
dec
out
pop
jnp
imul
dec
fists
mov
push
clc
addl
sbb
lock
dec
add
adc
or
jp
pusha
push
adc
mov
mov
mov
pop
clc
dec
insl
aam
xor
xor
or
cmpsb
dec
push
ret
or
cmp
mov
pop
cmp
sarl
push
mov
push
jp
stos
add
sbb
cmp
cmp
dec
ret
xor
inc
push
mov
jecxz
lods
scas
adc
sbb
xchg
lret
mov
ja
fld1
lret
mov
push
inc
insl
rcrl
push
jge
jle
in
daa
test
sbb
and
js
cmp
mov
jg
push
repz
push
popa
fs
lcall
lds
lret
outsl
es
imul
scas
xchg
push
inc
les
mov
shll
mov
sti
push
pop
movsl
pop
call
out
or
dec
sahf
data16
xor
jns
rcr
das
rolb
mov
sarb
jbe
cmp
fbstp
add
jle
and
adc
mov
push
popa
push
jbe
ds
add
adc
rcrl
pop
movaps
jns
mov
clc
adc
notl
int3
lcall
jns
xor
xor
shrb
fadd
mov
in
sub
mov
xchg
outsb
xor
scas
lds
or
cmp
jnp
inc
push
xorl
push
sbb
movsb
mov
mov
mov
and
cmp
mov
add
xor
mov
leave
lret
mov
mov
adc
lock
clc
mov
lret
imul
pop
add
and
mov
xchg
or
aad
dec
lock
hlt
test
pusha
push
jne
jne
testl
xor
mov
push
bound
faddl
xor
inc
mov
lds
daa
mov
mov
mov
enter
and
adc
pop
sbb
inc
in
lcall
fistps
lods
or
pop
out
dec
pop
sahf
inc
inc
test
std
mov
jae
lret
decb
shrl
shlb
jae
cmpb
shr
lcall
push
sbb
pop
mov
and
stc
notb
cld
inc
decl
dec
mov
nop
adcl
add
or
das
inc
mov
add
mov
rcrb
shlb
pop
mov
daa
bnd
data16
aad
push
dec
pop
ficomps
mov
cs
mov
cmp
jecxz
lds
rcr
xchg
sar
cmpsb
jo
out
lods
mov
add
jge
int
sbb
call
mov
mov
add
push
int3
mov
or
mov
jg
addr16
pop
xchg
pop
sub
mov
fiadds
stos
mov
and
lret
movsb
hlt
cli
mov
mov
iret
push
push
pop
pop
outsb
pop
adc
pop
push
xchg
xor
out
jecxz
lea
add
push
cs
mov
cmp
arpl
loopne
incl
leave
imul
add
dec
or
jne
sbb
cld
test
adc
dec
and
and
xchg
mov
jecxz
add
leave
outsl
loopne
lret
dec
or
daa
insb
lahf
jge
pop
cmpsb
xor
aas
push
cld
test
pop
jno
pop
jmp
push
xor
mov
outsl
sbb
loop
lods
sahf
hlt
es
jecxz
int3
sub
scas
push
xchg
or
out
inc
push
pop
or
pop
xchg
cmpsb
mov
outsl
leave
leave
jg
jecxz
push
jo
in
adc
insl
add
or
test
cmpsl
repnz
int
stos
mov
fldt
and
mov
sbb
fnstcw
xchg
add
inc
into
nop
ss
dec
scas
push
cmpsl
cmc
xor
push
push
enter
call
jmp
push
mov
mov
sahf
add
sbb
in
gs
sbb
call
hlt
rcll
fmul
xor
rorl
push
pop
lea
addr16
inc
pop
xchg
stc
inc
adc
sbb
add
stos
mov
mov
xor
or
cmp
jae
adc
or
and
rdpmc
mov
mov
mov
hlt
dec
jecxz
ljmp
add
loope
clc
jg
xchg
movsb
cmp
push
cmp
test
out
int
sub
ja
repnz
jnp
aas
push
jbe
mov
pop
inc
into
clc
mov
cmp
sub
scas
lret
aam
movsb
push
fimuls
fs
xchg
pop
push
movsl
out
mov
push
aaa
fists
push
or
sarb
in
daa
loopne
jne
cmc
or
sbb
out
in
vmwrite
mov
push
ds
dec
inc
mov
outsb
push
addr16
xor
dec
lock
cmp
sahf
call
jns
add
xchg
fbld
inc
jge
cmp
lret
addb
mov
inc
xchg
sahf
adc
push
or
or
sub
jnp
lea
mov
mov
js
xor
pop
xor
leave
cli
inc
sbb
mov
xchg
popf
sbbb
daa
or
add
sub
xchg
icebp
xchg
jno
jmp
jb
add
out
imul
adc
xchg
inc
subb
sub
pop
push
mov
shr
enter
push
or
xor
push
addr16
into
and
popa
pop
lock
and
pop
and
mov
pusha
loop
sbb
xchg
cli
jo
addr16
sub
out
xor
inc
xchg
mov
xor
in
ficompl
xor
push
sbb
or
mov
daa
push
xchg
mov
lret
push
rorl
lret
sahf
call
lahf
mov
test
add
sti
sub
mov
test
push
scas
adc
ret
pop
lds
rcrb
pop
repz
insl
insl
add
aaa
xchg
xchg
jbe
lahf
jo
cs
in
hlt
xor
das
dec
dec
rorl
mov
push
adc
imul
jae
in
sub
mov
inc
jmp
pop
dec
push
jl
out
mov
pop
enter
gs
cmp
mov
push
xchg
popf
sbb
mov
jmp
sub
lods
orb
mov
add
shr
inc
imul
popa
push
out
jle
mov
arpl
or
ret
gs
pop
push
sub
fisubrs
ret
ret
dec
pop
bound
push
dec
out
xchg
jne
and
cmc
enter
int
pop
fwait
adc
ljmp
cli
sub
mov
in
les
inc
cmpsl
cmpl
xchg
jno
mov
ret
cmp
xchg
push
sbb
mov
loope
add
inc
push
subl
mov
mov
jnp
adc
ljmp
jo
adc
daa
scas
or
push
add
push
in
lods
nop
fsubs
add
add
xchg
shll
loop
stc
sbb
sub
adc
cmp
es
push
pop
call
scas
xor
pop
xchg
mov
call
mov
add
add
mov
pop
loop
shlb
fnstcw
fwait
mov
in
pop
insb
sbb
xchg
shlb
xor
out
sub
out
js
fistl
pop
sub
pop
test
in
ret
repz
xor
add
repnz
es
jb
and
mov
lds
out
stos
test
or
in
mov
or
ds
push
mov
out
jle
pushf
dec
repnz
std
pop
mov
cmc
sub
dec
mov
insl
cwtl
push
std
subl
roll
test
pop
pop
xorl
ja
mov
xor
lcall
jo
and
movsb
add
ret
mov
test
jle
out
push
jle
mov
push
fistl
test
sbb
mov
ret
movsl
popf
in
xor
loop
inc
cmpsl
or
jg
sub
fidivrl
mov
stos
stos
lcall
push
insl
push
push
sub
pop
into
dec
aas
add
data16
loope
mov
aad
popa
adcb
js
arpl
addr16
adcb
jecxz
testl
fidivrs
mov
loop
addr16
and
mov
repnz
sub
cltd
jl
mov
sbb
add
xor
mov
data16
sbb
jl
xor
xor
fistl
addl
decb
cs
shr
ret
mov
xchg
push
sub
js
mov
dec
shlb
push
int
cmpsb
pop
in
mov
xor
stc
shl
lock
stc
lret
add
in
adc
fs
incl
rcl
out
jge
mov
daa
jae
hlt
pop
push
inc
sbb
push
outsl
jecxz
sub
jbe
or
push
in
mov
imul
ret
call
jnp
lret
mov
mov
add
scas
fcomps
mov
xlat
dec
mov
fst
cmp
test
shld
mov
mov
fldt
dec
loope
jo
push
sub
cmp
mov
cmp
lds
jle
mov
out
push
sti
pusha
dec
es
xchg
mov
nop
stos
sub
and
cwtl
fwait
repz
push
pop
sbb
cmp
sub
fwait
das
and
ss
mov
cmpsl
stos
test
pop
rcrb
scas
sbb
or
push
xchg
pop
and
pop
test
and
fnsave
das
shl
push
mov
add
sbb
clc
stos
inc
and
jno
mul
adc
dec
mov
int
rol
xchg
out
into
les
xchg
fimuls
aas
or
in
push
jp
xor
dec
or
xor
in
fs
pop
xchg
out
lods
mov
dec
lret
pop
pop
icebp
out
mov
adc
xor
sti
je
lahf
jg
xchg
jp
xchg
dec
out
ds
cmpsb
adc
jle
int
ja
mov
sarl
sahf
cmp
sbb
sbbb
dec
pop
mov
pushf
subb
sub
sarb
dec
cmp
scas
cmp
xchg
outsl
cli
aad
inc
ret
int
xor
dec
mov
jle
ffreep
xor
sbb
cmp
subl
fdivs
mov
xor
cmp
jle
stos
mov
nop
mov
push
idiv
lods
sub
pusha
es
rolb
fs
or
leave
jecxz
jl
xlat
xchg
jecxz
xchg
jbe
jns
sub
xor
divb
pop
adc
xchg
lods
jl
mov
pop
inc
sbb
push
rolb
hlt
test
lods
push
test
jnp
in
bound
mov
lcall
or
and
cmp
in
inc
fisttps
mov
popa
aad
je
std
mov
outsb
mov
inc
xor
mov
cmpsl
mov
xchg
xchg
cmp
cmp
test
fcomps
pop
or
stos
jne
les
push
dec
js
xlat
or
mov
xchg
orb
push
mov
push
addl
pop
mov
mov
outsb
lea
lahf
add
inc
fstps
xchg
lret
lods
xor
mov
adc
stos
test
xor
rep
xor
add
push
popf
popa
xor
sub
sub
lds
push
mov
mov
dec
lds
xor
push
dec
mov
pop
lcall
fcoml
ret
xchg
stos
cwtl
and
out
arpl
insb
leave
or
les
pop
clc
dec
outsl
and
jno
mov
sbb
aam
ret
and
cltd
std
ror
ljmp
fs
mov
jp
movsb
in
leave
cmp
pop
push
or
push
enter
xchg
cld
jl
push
sbb
lds
imul
jne
push
mov
mov
add
stc
xlat
roll
testb
arpl
lock
xlat
dec
mov
ja
mov
pusha
test
mov
nop
imul
mov
xor
inc
stos
jle
cmp
inc
cmp
loopne
ds
or
cmp
stos
inc
andl
fstps
imul
sub
push
sbb
stos
push
jns
into
stos
sbb
ret
imul
aam
ljmp
lods
or
xorl
int
cmp
xorl
inc
push
mov
scas
stos
lods
mov
xchg
scas
in
pushf
jb
xor
or
testl
push
test
add
cs
xor
push
dec
ret
aas
sbb
pushf
push
pop
xchg
mov
lcall
out
rcrl
xchg
cmp
lret
popa
jne
inc
rcll
std
and
and
loope
push
das
int3
or
xchg
xchg
mulb
repnz
mov
xor
push
lods
pop
mov
pop
cmpsb
mov
outsl
cmpps
jmp
mov
xorb
inc
add
jb
dec
test
pop
add
pop
xchg
add
mov
pusha
mov
mov
pop
cld
xchg
stos
cmc
testb
sub
pop
out
dec
cmpsl
and
andb
ret
adcl
and
aaa
es
or
mov
leave
lret
xchg
dec
mov
push
cs
hlt
paddw
xor
out
dec
inc
orb
jmp
lcall
inc
add
int
test
imul
paddw
cmp
loop
daa
sub
adc
mov
push
int3
jge
push
cli
sbb
sbb
stos
push
jmp
inc
mov
xchg
add
mov
les
pop
inc
jns
jne
cltd
out
sahf
cmpsl
movsl
push
hlt
aam
mov
fisttpll
pop
fadds
iret
lock
mov
dec
sub
mov
pushf
movsb
sub
in
fisubrs
or
orb
inc
xchg
bound
mov
push
push
xchg
mov
add
sub
mov
inc
test
sub
bswap
das
js
hlt
and
cltd
jge
std
mov
in
xlat
std
xchg
inc
clc
or
jge
and
dec
mov
cmp
cli
xor
mov
repnz
mov
mov
cmc
and
and
add
aam
cmp
inc
push
sbb
jp
insl
inc
cmp
pop
sti
pop
xchg
bound
xor
rolb
enter
jl
push
dec
int
data16
test
std
pop
ljmp
xor
rcrl
jb
xchg
xorl
fmuls
push
fdivrl
add
jb
or
add
push
push
sbb
outsl
shlb
inc
xchg
mov
xchg
in
adcl
ret
stc
sbb
mov
adc
xor
pop
scas
sbb
or
adc
cmp
into
mov
push
pop
mov
insl
inc
cmpsl
imulb
mov
dec
push
mov
stos
and
scas
sub
loop
test
or
and
lock
pop
ljmp
cmc
xchg
divl
popf
xor
cmc
mov
mov
inc
jnp
mov
fdivp
mov
dec
xor
mov
popf
jg
cmpsl
sub
mul
hlt
jle
dec
or
int
arpl
jbe
enter
push
mov
dec
std
movsb
sub
in
cltd
inc
mov
pop
cmp
bound
sbbb
jae
cmpsl
imul
jecxz
lea
es
insb
push
mov
icebp
shll
rclb
je
xor
in
ret
dec
push
stos
es
xorl
cmp
imul
nop
lock
fcompl
adc
cmpsb
xor
xchg
arpl
outsl
or
dec
in
pop
bound
imul
adc
out
mov
jns
jl
jmp
mov
adc
test
fldl
xchg
dec
test
push
jle
addb
cmp
xor
sbb
pop
sbb
push
push
or
xchg
in
sti
dec
mov
std
or
sbb
in
sbb
jl
inc
in
pop
sub
mov
jg
test
sbb
inc
insb
mov
mov
insl
or
dec
sub
pop
js
sub
add
imul
es
push
test
and
mov
jge
cld
shr
aad
fnstsw
xchg
mov
loop
cmpsb
clc
xchg
pop
loop
cmp
sub
pop
xchg
cs
xchg
jmp
push
push
xor
stos
fsts
mov
xor
cmp
mov
mov
lods
loope
sbb
andl
or
lret
push
xor
aad
out
push
ljmp
jo
xlat
leave
pop
in
sub
dec
out
adc
dec
cmp
mov
lret
icebp
adc
sbb
jae
shlb
fwait
pop
repz
imul
inc
sbb
or
orb
in
fildll
popf
mov
insb
mov
push
and
xchg
or
xor
and
adc
inc
adc
push
mov
and
arpl
loopne
sti
mov
das
mov
push
hlt
fs
scas
shll
adc
and
pop
pusha
cmc
imul
stos
xchg
sbb
outsl
jl
sbb
jne
mov
xchg
punpcklbw
mov
adc
add
adc
das
mov
daa
leave
cmp
inc
loope
hlt
sbbb
rcr
test
xchg
xchg
mov
jge
or
xchg
fcompl
rclb
mov
jnp
rcrl
cmc
ret
or
and
adc
insb
or
and
xor
and
dec
movsl
xor
xor
cmpsl
jmp
rorb
sbb
xlat
das
hlt
scas
mov
jge
pop
inc
incb
dec
push
sahf
mov
ja
cmp
xor
clc
iret
or
into
nop
and
push
cld
js
dec
sbb
dec
sar
out
adc
faddl
mov
adc
push
mov
pop
test
mov
repz
insb
mov
xor
jo
mov
cmp
aad
jns
pop
jne
jbe
lock
mov
xlat
xorb
cmc
push
aas
dec
push
fisubrl
scas
stos
outsl
inc
fadds
xchg
mov
xchg
arpl
xchg
cmp
push
int
stos
and
xchg
imul
jbe
movsl
pop
sbb
inc
cmp
outsl
inc
lods
shrb
cmpl
icebp
clc
pop
jb
or
mov
fcmove
sbb
test
add
jbe
lods
fsts
cwtl
sarb
xchg
cld
mov
push
mov
and
dec
cmp
xchg
pop
bound
das
and
pop
addps
aas
mov
stos
movsb
stc
jmp
mov
add
cwtl
mov
dec
cmc
setle
jnp
inc
cmc
or
test
insb
dec
mov
cmp
sbb
hlt
sarb
jge
data16
aam
mov
lahf
dec
jp
lahf
add
or
outsb
pusha
into
sbb
pop
ret
out
and
das
lods
inc
mov
test
rclb
and
in
push
xchg
ljmp
xchg
insb
popa
push
hlt
mov
js
jmp
or
fsubp
mov
sbb
outsl
or
and
and
sbb
dec
hlt
mov
lock
call
fisubrl
fs
cmpsl
aam
into
aas
mov
lock
stc
push
aad
call
and
jbe
lods
lahf
or
sub
repz
mov
popf
popf
add
out
ljmp
xor
fists
sub
scas
jp
cmpsl
test
arpl
out
insl
cli
adc
jle
lret
jnp
sbb
pusha
push
dec
gs
cmp
inc
cmp
jno
enter
inc
sub
inc
mov
dec
mov
aad
addb
push
pop
cmp
icebp
das
cmp
cmp
js
stos
aas
jmp
and
lret
repnz
jmp
push
out
test
hlt
jns
xor
push
and
test
stos
jmp
cld
or
mov
rol
mov
pop
into
test
xor
mov
mov
mov
pop
dec
dec
loopne
mov
ret
cmpb
insb
ds
mov
sbb
mov
popa
xchg
mov
xchg
lret
sub
lods
fxch
cltd
cmc
adc
inc
cmc
test
mov
jb
sbb
push
or
lods
jge
bound
cmpsb
lcall
ror
fldl
test
js
jb
or
stos
arpl
inc
mov
xchg
jle
xorl
cmpsb
xchg
aam
pop
pushf
xlat
pop
xor
cltd
pop
push
dec
fcomps
xor
or
sarl
jmp
cmp
adcl
inc
popf
js
inc
jns
mov
inc
sbb
push
scas
fdivs
fsubp
mov
fbstp
pop
bound
pop
pop
sub
rorl
and
push
jmp
cmp
ret
cmc
lods
jl
inc
lods
fwait
xchg
ret
je
daa
push
clc
rcrb
and
jmp
shll
out
pop
add
adc
mov
andb
xor
sahf
sbb
push
sub
xor
sub
lea
pop
push
inc
xor
xor
xchg
xchg
cltd
popf
pop
xorl
xor
cwtl
xchg
mov
movsl
mov
inc
popf
mov
xor
loope
scas
test
push
mov
push
rclb
mov
jp
mov
notl
test
in
inc
jns
add
jnp
es
je
sbbl
fcmovne
mov
sbb
test
push
stos
sub
ds
testb
xor
dec
pusha
sbb
cmpb
in
sti
and
inc
pusha
dec
dec
and
dec
sbb
sbb
or
mov
mov
sub
fcompl
push
xchg
and
xchg
js
dec
xchg
cli
mov
sbb
dec
out
shll
xor
cmp
adc
enter
dec
push
aas
popa
cmpsb
xor
push
cmp
lahf
adc
push
repz
std
sub
mov
clc
enter
outsl
or
nop
lret
nop
add
mov
xlat
sbb
lcall
inc
mov
dec
xchg
xor
icebp
xor
push
jnp
jge
adcb
add
faddp
push
cmpsb
sub
movb
xchg
xor
pop
fwait
mov
dec
and
les
aaa
mov
xchg
nop
in
jle
adc
push
and
lcall
in
mov
xchg
rcl
push
rolb
into
jecxz
clc
leave
lods
push
jl
push
fcmovne
sub
imul
les
sti
cli
or
or
insb
shlb
gs
pop
inc
pusha
inc
push
pop
cmpsb
ja
push
stos
loopne
or
cli
lret
lock
or
ja
xchg
icebp
daa
push
jmp
xor
in
adc
fs
lds
in
das
test
pop
xchg
cmpsb
sub
bound
cltd
mov
xor
cmp
negb
daa
hlt
sbb
ljmp
push
popf
push
push
arpl
xchg
aas
in
cmp
pushf
rcl
ljmp
mov
insb
cmpb
mov
in
push
lcall
pop
and
xchg
xor
pop
rolb
std
outsl
and
cmpsl
cwtl
outsl
sbb
mov
xlat
push
ror
pop
push
movsl
sub
leave
xor
fadds
ret
lods
mov
fisubl
mov
enter
push
add
loop
in
inc
in
cli
rcl
cld
out
rcll
jnp
cltd
stc
xchg
xor
jle
fisubl
dec
insb
test
jge
and
test
xchg
pushf
lds
das
out
jecxz
lds
pop
jmp
add
dec
outsl
push
sbb
pusha
into
or
dec
shlb
sti
xchg
repz
dec
adc
or
fsubl
mov
dec
int3
inc
mov
data16
lret
rolb
inc
mov
pop
pop
mov
movsb
enter
mov
outsb
mov
je
xchg
sub
push
cmpl
sbb
mov
inc
je
or
cmc
xor
cltd
dec
hlt
and
test
jle
insb
push
dec
or
mov
in
cvttps2pi
dec
hlt
daa
dec
sub
add
pop
or
sarl
arpl
inc
mov
xchg
adc
hlt
mov
cmp
dec
mov
xchg
int3
adc
sub
mov
test
loopne
add
loope
inc
push
or
icebp
adc
cmp
pop
inc
dec
movsb
sub
and
mov
gs
loope
enter
mov
testl
xchg
cltd
jg
addr16
int3
push
inc
add
jl
popf
pop
inc
or
xchg
out
add
repz
push
sbb
sbb
rorl
rcr
and
and
xor
inc
mov
or
dec
imul
icebp
cmp
dec
lods
mov
clc
hlt
add
pop
fwait
iret
cmpsl
outsl
pop
sarb
dec
addr16
loopne
out
hlt
packuswb
sahf
cmp
fldt
pop
sub
orb
stos
jns
ds
push
sbb
fistpll
jmp
sbb
xor
jno
dec
clc
dec
aam
mov
dec
jecxz
daa
js
and
and
push
and
rcrb
lods
mov
out
clc
imul
loope
or
jmp
fcoml
cmpb
leave
inc
rcl
ja
in
pop
movl
xchg
add
hlt
ljmp
or
push
mov
cmp
aas
mov
call
jb
js
sbb
sti
xor
bound
aad
cwtl
sbb
popa
adc
jnp
int3
jge
out
xchg
push
jl
fwait
aaa
or
fistps
inc
ja
pop
stos
inc
test
inc
or
cli
dec
adc
data16
sarb
in
in
jle
sbb
cmp
dec
mov
pop
pop
inc
addr16
cmc
cmpsl
push
ja
cmp
sbbb
aaa
or
mov
xchg
clc
std
cmp
jnp
push
pop
ja
fstpl
in
xchg
mov
scas
shlb
fadds
mov
pop
mov
xchg
dec
and
ljmp
lcall
jl,pn
orb
add
cmp
ret
imul
imul
call
outsb
aaa
inc
xchg
pop
movsl
add
pop
and
mov
rcll
stos
pop
sub
pop
or
jbe
popf
shrl
mov
and
sahf
or
mov
ja
or
out
and
into
insb
xchg
mov
sbb
jmp
fcompl
lret
inc
dec
aas
bound
xor
mov
sbb
jl
and
pop
in
xor
pop
sbb
iret
fwait
mov
cld
aaa
subb
push
jmp
adc
mov
hlt
fsubrs
mov
pushf
into
aas
in
bound
popa
mov
loopne
mov
dec
popf
es
mov
cmpl
mov
mov
test
outsb
xor
int3
cmp
cmp
lds
mov
xchg
std
fcomps
gs
mov
std
outsb
mov
jnp
leave
div
pop
enter
rcrl
mov
xchg
cmp
and
cltd
sub
arpl
cmp
cmpb
jp
xor
mov
into
cmpb
mov
sarb
dec
sub
xchg
pushf
or
mov
pop
scas
adc
mov
xchg
pop
stos
aam
les
daa
jo
sbb
out
xlat
mov
repz
cmp
add
sbb
pop
bound
or
xor
loope
sti
hlt
clc
pop
inc
sub
arpl
testl
and
int
jle
mov
inc
lds
push
jecxz
lcall
jnp
fidivl
cmp
and
sbb
out
adc
xchg
ljmp
pop
sbbb
loopne
adc
jns
or
pop
into
hlt
gs
jg
jmp
int3
sbb
jl
jp
inc
sbb
push
mov
and
daa
faddl
dec
cwtl
xchg
xchg
arpl
adc
in
sub
sar
xor
outsb
mov
adc
sbb
pop
fisubrl
or
sbbb
leave
fs
xchg
cld
loop
mov
xchg
fmuls
dec
pushf
push
mov
push
add
lahf
jnp
pop
cltd
sub
push
pop
pushf
jno
inc
xor
cwtl
loop
cmc
add
xlat
dec
aas
cmp
jp
test
xor
and
mov
xchg
push
clc
xor
inc
lea
push
jns
mov
decb
adc
add
mov
js
test
or
scas
aas
aaa
inc
emms
pop
jp
int
clc
mov
wbinvd
nop
insb
add
dec
mov
jno
mov
dec
into
add
inc
pop
xchg
enter
call
push
jae
mov
dec
add
inc
cwtl
jecxz
mov
add
fs
and
add
add
stc
mov
loope
jge
mov
push
pop
popf
test
outsb
adc
lcall
inc
xchg
sbb
js
fdivrl
icebp
push
xor
fwait
mov
lcall
push
adc
push
imul
xchg
cs
push
xor
mov
mov
int3
aad
fiaddl
mov
mov
call
xor
cmp
movsb
shll
lret
movsb
mov
mov
mov
pusha
mov
push
or
test
imul
mov
adc
xor
adc
xor
mov
cmp
fmulp
inc
fildl
pop
pushf
lds
mov
sbb
push
subb
shl
xor
push
jge
lret
sarl
sub
movsl
js
outsl
push
jp
mov
push
jg
mov
pop
add
jae
xor
cs
cwtl
aas
cmpsb
xchg
mov
pop
push
ss
clc
mov
arpl
jmp
lds
ja
mov
jg
movsl
sbb
arpl
push
inc
mull
cs
push
push
xor
push
pushf
stos
insb
stc
and
add
adc
sbb
xchg
aaa
jmp
insl
inc
mov
fs
jl
es
out
inc
xchg
cmp
andl
bound
mov
movsb
mov
push
jecxz
shll
xor
mov
xchg
mov
ret
dec
adc
push
xchg
imul
sbb
test
insl
cmp
rorb
pop
loopne
mov
mov
xor
sbb
data16
dec
ret
insl
fs
mov
push
or
mov
mov
leave
jns
sbb
push
sub
out
jnp
insb
mov
adc
movsl
cwtl
mov
xor
loope
sbb
push
nop
jne
add
push
xor
mov
scas
mov
pop
cmp
outsl
gs
pop
out
fwait
test
out
mov
mov
test
inc
roll
dec
pop
xchg
pop
cli
sub
aam
sub
push
adc
cmp
movsb
stc
repz
cmp
xor
xor
mov
sbb
adc
out
dec
xor
sti
arpl
dec
aad
mov
add
loop
and
mov
adc
sub
cmpsl
add
mov
pop
repz
and
test
jle,pn
inc
mov
cwtl
inc
xor
xchg
dec
sbb
test
and
out
add
in
insl
push
outsl
jp
pop
or
pop
sahf
xlat
testb
dec
das
jge
pop
mov
out
in
dec
mov
cmp
mov
or
xchg
cld
push
outsl
addl
and
add
jp
and
in
push
or
cli
fstl
loop
loope
inc
out
mov
jmp
add
sbb
popf
sub
test
and
mov
int3
fiadds
dec
jnp
sub
push
or
mov
lea
ss
lcall
lahf
sub
sahf
cmc
popf
incb
push
add
pusha
push
arpl
dec
in
fwait
mov
adc
enter
add
aam
xor
lods
in
pop
inc
ret
xchg
cmc
fdiv
adc
dec
or
push
fiadds
clc
xchg
pop
outsb
mov
enter
xchg
shlb
movsl
inc
mov
lock
or
xlat
nop
mov
shll
fsts
cmp
mov
cmp
adc
outsb
out
sti
lahf
fdivrs
aad
fidivrl
mov
lahf
mov
jb
outsl
in
cmc
test
add
cli
stos
push
test
jmp
mov
jg
insb
and
add
dec
repz
sti
mov
roll
mov
mov
fs
cmpsb
inc
testb
sbb
and
bound
mov
inc
mov
shll
shlb
jns
inc
push
push
pop
insb
sbb
test
cmp
push
and
dec
pop
test
popf
cli
pop
mov
inc
cwtl
ficoml
aad
shrb
stc
jb
and
scas
jg
daa
jno
mov
add
mov
mov
mov
inc
fdivrs
dec
loop
jmp
sbb
adc
outsb
sar
xchg
adc
adc
or
lret
mov
jp
xor
popa
adc
or
dec
push
push
or
cmpsb
xor
jl
sti
xchg
cwtl
fadds
push
in
stos
stos
imul
mov
ret
mov
dec
jns
sub
imul
or
loope
loope
sub
rcrl
mov
cmp
xor
rorl
leave
loope
fstps
sbb
or
push
lods
nop
daa
mov
aas
xchg
cmp
sti
push
mov
dec
lcall
icebp
sub
add
pop
shll
cmc
out
and
add
insl
mov
cmpsb
adc
cli
xchg
mov
adc
mov
fisubl
fimull
mov
jge
sahf
sub
sbb
call
bound
xchg
leave
or
adc
lods
inc
mov
dec
dec
fisttps
fidivrl
lret
push
lret
add
shr
inc
prefetcht0
clc
hlt
fcmovb
cld
push
adc
ds
pop
push
sub
xor
and
and
jbe
loope
push
stos
xor
cs
adc
jmp
inc
movsb
leave
outsb
jns
adc
sub
shrl
push
lahf
jae
add
fs
sbb
push
out
sub
sarl
repnz
enter
xlat
jnp
xchg
mov
les
xor
push
popa
popa
out
cmp
in
or
call
cmpsl
and
pop
clc
xchg
adc
sarb
mov
add
in
mov
jnp
push
fistps
mov
xor
jle
in
xlat
push
mov
sahf
fcomps
adc
mov
xchg
lods
iret
loop
cmpsb
pop
and
mov
mov
push
and
aam
insb
lret
mov
sub
mov
sub
push
jmp
xchg
dec
filds
xor
fiadds
int3
mov
rcr
mov
and
lods
sahf
out
xchg
mov
xor
sarl
adc
mov
jecxz
or
sbb
test
popl
xchg
push
inc
xlat
xor
mov
ret
mov
xlat
add
loop
fcoml
mov
iret
or
jmp
scas
mov
cmp
nop
mov
adc
xor
into
pop
movsl
int
cmp
scas
cmpsb
pop
pop
fnstenv
mov
mov
stc
jg
pop
int
cmp
jbe
push
scas
mov
loop
or
test
push
xchg
pop
loopne
dec
and
cmpsl
cld
mov
bound
mov
push
arpl
sbb
xchg
inc
push
or
sbb
rolb
test
adc
out
je
sbb
mov
cmpsl
sbb
in
popf
aaa
cmpsl
in
add
outsb
fsubl
jne
fcomps
sub
pop
adc
and
sub
inc
cmp
pop
cmp
lock
push
push
adc
push
xchg
sti
lret
mov
inc
xchg
inc
stc
adc
in
ljmp
cs
and
push
stos
pcmpgtb
shrl
repz
fistpl
movsl
fstps
jo
xor
bound
cmpsb
mov
sbb
add
mov
lcall
jl
push
loopne
mov
or
int3
sbb
mov
xor
lds
mov
aaa
mov
xor
lock
dec
cs
push
lahf
sub
dec
add
into
sub
mov
lock
add
pop
xchg
pop
mov
push
ss
dec
mov
add
push
bound
cmp
push
rcrl
clc
mov
or
arpl
pop
frstor
loopne
pop
ja
imul
std
adc
sbb
cmp
mov
mov
jnp
insb
ja
ret
mov
mov
fwait
rcrl
jle
xchg
mov
push
jns
jae
scas
repz
mov
add
add
lods
sahf
inc
shrl
inc
test
lods
mov
sbbb
pusha
xlat
jmp
ja
inc
and
adcb
xadd
xchg
adc
out
cmp
sub
dec
popa
push
insl
xor
xchg
cmp
push
scas
dec
cmp
insl
std
fiadds
in
sbb
movsl
repz
jmp
sub
cmp
mov
cmp
test
outsb
adc
in
pop
mov
std
int
mov
fwait
dec
push
decb
pop
xchg
sbb
dec
ret
add
shll
mov
push
mov
inc
jmp
or
jbe
jp
jbe
sub
pop
pusha
pop
out
inc
fadds
push
ljmp
lahf
fistpll
sub
mov
arpl
sbb
out
mov
mov
sub
jno
mov
decb
cwtl
adc
fs
sbb
fiadds
iret
icebp
pop
es
xlat
pop
int
sbb
mov
jne
out
das
fimuls
sti
add
and
lahf
fcomps
out
and
add
call
bound
mov
sahf
inc
or
pop
sub
fidivrs
sbb
test
cmp
push
mov
rcr
decb
push
loopne
in
and
lret
imul
pop
adc
cmp
std
in
cmp
pop
fmuls
inc
cmp
fs
add
std
pushf
cbtw
push
dec
dec
mov
cmpsb
push
push
or
repz
adc
fst
dec
lret
sub
mov
movsl
cmp
jge
cli
cmp
jne
dec
pop
aam
xchg
pop
lods
lea
sahf
push
sar
inc
lds
mov
sahf
outsb
stos
mov
aam
push
cli
adc
jmp
dec
push
test
push
sbb
shl
adc
add
mov
xchg
cmp
mov
dec
shlb
jb
inc
dec
lods
ljmp
xchg
xchg
bound
fcoml
ffree
data16
mov
pop
mov
xchg
mov
rcl
mov
leave
inc
sbb
cmpsl
dec
cli
loop
outsb
sbbl
pushf
pop
mov
dec
mov
mov
xor
jmp
or
and
in
xchg
and
xor
pop
das
int3
cld
dec
sub
icebp
and
add
pop
mov
cmp
int3
rcr
mov
and
out
inc
pusha
stos
lock
cmp
fmuls
cli
lcall
jns
sahf
loope
loope
inc
mov
or
pop
jnp
stos
popa
call
fisubs
fstps
xor
inc
adc
and
or
insb
aaa
arpl
lea
jmp
or
sub
daa
insb
js
hlt
push
out
mov
inc
cmp
mov
adc
data16
aam
pop
jle
outsb
nop
clflush
dec
loopne
mov
fcompl
jmp
mov
cmp
push
or
mov
inc
cmpb
mov
into
or
add
jnp
inc
sarb
bound
test
cmp
sbb
xchg
cltd
jno
hlt
stos
cs
inc
aad
ja
lret
xlat
les
out
loopne
shll
pop
inc
loop
or
lock
adc
rcl
pop
mov
and
les
jb
mov
in
or
lret
les
jl
loop
sub
adc
cmc
imul
xchg
scas
push
push
into
pop
adc
cli
clc
mov
or
jg
inc
pop
lret
inc
std
sti
mov
adc
cmp
inc
dec
leave
vmwrite
cmp
mov
stc
into
test
inc
fsubs
cmp
mov
hlt
rcr
inc
cmp
cwtl
inc
inc
mov
pop
xchg
leave
pop
cmp
inc
mov
sub
push
jle
test
jmp
ja
jno
lret
push
pusha
or
or
loop
pop
fs
xchg
push
xchg
or
or
ds
bound
and
rcll
and
jne
pusha
sbb
pusha
mov
pop
dec
movsl
lret
lcall
stc
lds
jne
add
and
pop
aaa
pop
idivb
sub
lods
ret
cli
lock
jno
push
orl
mov
jb
test
mov
sub
jno
add
push
ret
xchg
xor
mov
stc
sub
fildll
xchg
ss
idiv
pushf
cli
aam
call
dec
xchg
out
sub
out
sub
xchg
or
add
js
ss
push
daa
popl
dec
orb
jnp
xor
push
in
push
ret
mov
jo
ss
sahf
aas
pop
test
inc
jbe
pop
xor
pop
jmp
jbe
std
mov
lds
lods
or
mov
jbe
add
and
sub
push
rorb
jle
stc
out
out
lea
sub
xchg
test
ds
push
mov
or
insb
shll
in
cmpsb
loop
notl
and
pushf
fucomp
sub
or
jae
xor
aas
fstl
lret
jno
test
push
int3
clc
jne
mov
lods
mov
xor
xor
push
loopne
sub
inc
gs
aaa
xlat
xchg
jl
jno
inc
test
repz
mov
or
or
bound
push
jnp
shll
cltd
adc
iret
dec
inc
mov
repnz
jge
das
stc
dec
dec
inc
fisttpll
jae
sbb
cld
push
sub
in
scas
int
loop
or
call
pop
mov
loope
les
adc
push
movl
sub
ss
or
daa
mov
push
sbb
or
adc
outsb
loop
loope
loopne
sub
jp
nop
and
faddl
xorl
dec
push
ljmp
into
out
es
adc
dec
gs
sub
gs
dec
sbb
fstpt
aad
jno
and
mov
sub
aam
cmp
add
xorb
and
xchg
jp
mov
mov
sbb
or
xchg
add
nop
inc
cld
pop
cli
pop
mov
imul
xchg
adc
push
sub
mov
adcb
push
sub
stos
xchg
stos
inc
outsl
cmp
int
xchg
pusha
adc
pop
sti
js
or
cmp
cmp
fldcw
and
adc
mov
xor
dec
xchg
or
mov
push
mov
stos
iret
xchg
fs
mov
mov
lret
pop
xor
jns
push
insb
in
cmp
pop
rcrb
cmpsl
sbb
dec
cmp
popa
mov
and
and
cmp
js
jmp
je
jne
mov
jge
xchg
inc
pop
pop
xchg
mov
int3
mov
lret
add
mov
push
enter
mov
rcll
cmc
jbe
push
xor
mov
das
adc
xchg
sub
and
push
lds
addr16
xchg
mov
les
jbe
lahf
fdivl
fwait
pop
repz
mov
mov
adc
and
popf
nop
dec
jo
mov
mov
mov
clc
pop
mov
push
pop
xchg
cwtl
cmp
in
int
mov
xchg
scas
loop
syscall
cld
xchg
sarl
pop
movsb
mov
lcall
fs
lock
inc
xor
push
mov
icebp
cmpsl
mov
or
fsubl
inc
scas
mov
mov
sbb
add
sbb
xor
pop
imul
mov
lret
jo
scas
jge
ret
pop
iret
dec
xchg
idiv
mov
xchg
and
pop
xchg
add
mov
nop
xor
and
andb
fsub
cmc
and
loopew
jnp
das
xchg
sbb
mov
mov
loopne
das
add
and
cwtl
jmp
jge
sbb
leave
bound
jecxz
pop
sbb
jo
pop
dec
js
lcall
jns
mov
rolb
mov
mov
pop
movsl
ja
jno
xchg
xor
push
push
xchg
mov
sub
stos
jns
aas
iret
xchg
pushf
fs
mov
cmp
or
leave
in
inc
xchg
test
jg,pt
xorb
loop
lock
push
aad
hlt
out
fcmovnu
jnp
int
xchg
push
or
mov
dec
push
mov
adc
pop
mov
xor
cs
popa
outsb
push
cmp
pop
mov
jge
fiadds
xchg
adc
cli
mov
not
test
inc
repz
js
adc
into
stc
shlb
cmc
mov
loopne
xor
push
mov
inc
ljmp
aas
sub
adc
or
dec
ret
in
jns
test
mov
pushf
cs
xchg
pushf
dec
push
stc
imul
dec
xor
into
dec
mov
out
jno
ret
fucomip
mov
lret
xchg
rcrb
std
xor
or
dec
fistpll
addr16
dec
lods
aaa
fcom
sub
test
adc
mov
bound
dec
cmp
push
es
push
pop
xchg
fcoml
xor
add
inc
xchg
sbb
pop
pop
outsb
pop
pusha
mov
pushf
ret
pop
test
aas
ja
outsl
mov
scas
mov
jnp
lods
adc
mov
xchg
push
add
sub
ret
xchg
push
jnp
pop
xchg
mov
adc
cmp
add
inc
lret
push
je
clc
or
adc
sub
sbb
enter
lahf
mov
mov
xor
adc
pop
jns
sti
je
jnp
jecxz
movsl
jecxz
nop
btc
jmp
sbbl
test
dec
es
pop
xor
cli
icebp
adc
sbb
dec
out
and
or
insl
adc
mov
inc
ret
in
in
xchg
insl
fildll
popa
fs
or
sbb
arpl
sbb
jg
push
test
stos
xchg
cmpsb
cmpsl
fadd
leave
cld
adc
ror
inc
jge
bound
mov
std
div
sbb
mov
sbb
das
out
sbb
sbb
mov
jno
adc
add
lea
call
ljmp
data16
pop
clc
mov
xlat
push
ret
push
jbe
jbe
cmp
rcrb
push
jne
out
adc
js
test
popa
sub
xchg
mov
xchg
push
shr
les
xchg
adc
ret
jb
sub
pop
jae
dec
outsb
aas
mov
push
mov
add
xchg
xor
or
sbb
push
data16
test
cmp
mov
loop
and
lods
popa
inc
stos
jne
mov
and
in
lock
testb
and
fadd
lods
sti
mov
sbb
inc
add
jge
pop
cmpsb
repz
inc
sbb
mov
popl
or
icebp
xor
dec
push
pop
movsb
adc
test
push
call
or
push
imul
and
push
cmpsl
movsl
or
aaa
cwtl
mov
cld
dec
insl
sub
icebp
cmp
cmpsb
mov
repz
es
sarb
mov
pushf
dec
in
jns
mov
pop
leave
fmull
or
dec
inc
xor
js
xchg
shrb
jl
subl
popa
xchg
lcall
out
sub
fwait
mov
push
mov
imul
jno
add
push
dec
roll
dec
fnstsw
enter
test
shlb
mov
iret
cmc
loope
mov
fidivrs
ret
lods
dec
test
ljmp
dec
xor
cmp
rcrl
push
loop
jge
and
xchg
dec
xchg
adc
test
push
cmp
les
mov
data16
mov
push
jns
adcb
push
inc
sbb
push
es
icebp
mov
out
pushf
pop
sbb
lret
pop
clc
cmp
testl
inc
jne
stos
mov
inc
movsl
pop
popa
mov
adc
pop
cmp
cmpsl
lret
xor
sahf
sub
pop
cwtl
popa
fs
je
lock
and
xor
cmp
cwtl
or
jo
ljmp
stc
mov
jno
pop
mov
aaa
mov
or
sbb
pop
cld
mov
mov
cmp
insb
jmp
in
clc
hlt
in
or
sbb
repz
sahf
sbb
sub
test
js
xchg
les
dec
sahf
fmull
fildll
or
hlt
sub
iret
int3
arpl
or
or
cwtl
sub
and
mov
pop
sub
cmpsl
in
xor
idivb
aad
arpl
stos
pop
bound
fistl
push
mov
xor
add
pop
imull
jl,pn
mov
xchg
das
es
or
imul
xchg
xor
mov
add
sub
inc
jns
xor
mov
push
rcr
jge
fs
in
or
sub
iret
and
mov
pop
xchg
loopne
out
and
push
xor
scas
psllq
mov
lret
mov
fwait
shrl
jne
mov
ret
outsl
stos
jg
aad
mov
scas
lret
mov
bound
shrb
sti
adc
dec
std
pusha
and
andb
loope
add
stos
cli
adc
or
test
inc
xor
jbe
pop
push
outsl
pop
jmp
fs
jne
int
cmp
movl
push
repnz
inc
popf
add
sahf
or
cmp
xchg
sbb
nop
xchg
push
das
into
cld
fs
in
sbb
xor
mov
or
push
jb
movsb
cmp
inc
inc
cmc
inc
popa
test
daa
cmc
popa
imulb
hlt
sbbb
cwtl
sub
out
mov
adc
jge
sbb
fstl
out
and
stos
scas
jo
dec
rorb
and
das
add
or
push
xchg
out
cmp
sbb
outsl
push
or
lods
in
xchg
mov
adc
dec
test
sahf
bound
clc
jnp
cmp
xchg
stos
imul
sub
psllw
pop
pop
mov
sub
sbb
sub
cwtl
sub
mov
orl
or
jle
or
rcr
ljmp
out
punpckhdq
arpl
sbb
mov
or
insb
pop
jno
xor
add
cmp
out
dec
pop
push
cmpsl
out
fildll
dec
and
rorb
jge
jno
jmp
imul
rolb
fistpll
mov
and
add
or
mov
or
xor
call
push
mov
clc
push
inc
xlat
gs
je
pushf
repnz
mov
scas
jnp
add
mov
mov
out
out
lds
pop
pop
out
cmc
mov
pushf
ds
loopne
adc
push
pop
push
sbb
cli
fs
fcmovb
and
aam
iret
dec
lahf
mov
fwait
addb
scas
inc
sbb
das
dec
jno
push
or
imul
adc
and
ss
ss
adc
push
or
scas
sbb
lods
andb
and
icebp
mov
dec
lods
pop
and
lds
cli
test
inc
lret
push
inc
dec
das
loop
inc
cmpsl
bound
mov
adc
mov
mov
jmp
insl
sarl
jmp
inc
idiv
jg
add
cmc
iret
xor
cmp
push
aam
in
stos
cmpsb
jg
cmp
push
jo
lea
cmp
pushf
mov
test
mov
xchg
dec
fnstenv
pop
xchg
xor
or
pop
lods
les
sbb
xor
and
cmpsb
aad
push
push
repz
sbb
bound
sub
xchg
in
loop
lods
cmp
mov
push
nop
cmp
mov
mov
mov
shlb
sbb
mov
mov
mov
mov
pop
scas
push
pop
pushf
rolb
cmpsl
add
mov
daa
inc
mov
pop
cltd
mov
dec
xor
aam
fcoml
out
loopne
or
pop
ljmp
out
stos
and
xchg
ret
jno
lcall
cmc
mov
adc
jno
mov
pop
jb
push
fs
adc
cmp
stc
xchg
adc
push
xchg
in
jecxz
cwtl
loope
js
dec
test
fistps
repz
mov
mov
lcall
fisubrs
xor
jecxz
push
sub
push
ficompl
xor
push
sub
aam
clc
aam
push
shll
push
repnz
inc
negb
adc
push
xlat
jl
jl
mov
gs
mov
xor
test
add
je
mov
mov
aaa
cmpsb
je
push
xor
lods
xchg
mov
inc
push
ss
cltd
dec
sub
cli
aaa
mov
xchg
in
pop
sbb
cmc
push
mov
sahf
insb
pop
movsl
sbb
mov
push
sbb
sarl
adc
hlt
bound
lock
add
cld
cli
and
popa
sbb
fcomps
mov
adc
imul
cmp
pop
lock
mov
out
pop
out
lret
push
jb
inc
shll
in
push
adc
arpl
xor
je
das
shlb
mov
lods
xor
cmp
mov
insl
mov
sbb
pop
ret
push
cmpsl
xchg
shll
mov
movb
mov
pushf
push
pop
jae
out
stos
lods
dec
xor
mov
mov
inc
ljmp
mov
aad
push
or
rorl
lcall
dec
sbb
stos
mov
push
test
xchg
mov
es
sub
xor
in
ret
and
shlb
jge
lods
out
xorl
dec
pop
sub
arpl
mov
lret
les
hlt
inc
test
xchg
loopne
xor
dec
test
cwtl
mov
pop
in
scas
xor
out
add
fistpll
or
xchg
test
in
xor
popf
data16
in
mov
xchg
adc
lret
out
mov
fdivl
mov
cltd
cs
cmp
or
cmp
push
pop
test
mov
pushf
shrb
inc
fisubrs
or
bound
push
bound
shrb
sbb
pop
call
mov
sbb
outsb
int3
sub
mov
cmpsb
push
insb
rcrl
aaa
insb
into
lahf
adc
jp
xchg
pop
xchg
ret
cs
mov
adc
jl
adc
stos
push
filds
mov
stc
nop
out
repnz
pop
mov
sub
int3
mov
jp
inc
mov
insb
mov
xor
test
test
dec
mov
mov
mov
out
aam
add
adc
cli
dec
nop
mov
mov
aad
lret
push
sub
jg
add
ffree
mov
inc
mov
fwait
mov
cmp
xchg
into
push
jbe
jae
not
aaa
pop
call
mov
pop
push
imul
lahf
jns
icebp
js
pushf
dec
mov
cmp
in
xchg
jbe
jne
bound
dec
xchg
repz
sti
cltd
loopne
sub
dec
mov
jle
push
daa
jne
pmaxub
and
nop
int
mov
push
sbb
and
ror
mov
xchg
sti
and
aam
cmp
mov
fisubrl
popl
add
cmp
mov
fadd
imul
aaa
test
frstor
stc
loop
sub
xlat
xorb
lock
inc
jnp
imul
lret
or
clc
pushf
adc
and
popf
loope
cmc
fiadds
pop
add
popf
stos
jno
pusha
push
sub
sub
test
cmp
je
mov
cmp
ja
orl
inc
out
push
add
inc
in
call
loopne
push
mov
push
add
fiaddl
popa
fistpll
int
push
ss
aad
addr16
das
scas
fisubs
cmp
gs
clc
loope
dec
sbb
xchg
dec
xchg
dec
cld
and
call
inc
lds
pop
ja
xchg
push
sbb
push
sub
sub
lahf
popf
lea
sbb
inc
mov
imul
push
adc
je
jne
sbb
std
mov
pushf
or
mov
mov
xor
xorb
mov
bound
lret
push
mov
pushf
jmp
mov
clc
xor
and
test
mov
stc
rorl
adc
mov
lcall
jb
sub
andb
push
stc
mov
in
inc
jbe
fisubrl
stos
stc
cmpsb
jae
sub
xor
sti
add
divb
dec
mov
jge
fnsave
cmpsl
arpl
pop
fadd
gs
imul
imul
sbb
push
sub
pop
adc
idiv
jmp
mov
pusha
mov
mov
je
jmp
ror
cvtps2pd
push
ss
pop
xor
sbb
lret
jp
leave
shll
outsl
loopne
xchg
lahf
mov
push
push
arpl
cmp
mov
movsb
xchg
insl
imul
ret
shr
inc
lret
dec
adc
and
push
pop
test
sar
cld
cmpsl
xor
movsb
lcall
mov
decl
mov
aam
jmp
nop
cltd
push
pop
dec
pop
addl
adc
mov
push
inc
mov
sbb
adc
jge
sarl
popa
mov
ud2
or
push
or
mov
aas
xchg
xchg
sbbl
add
arpl
ljmp
inc
mov
sbb
addr16
mov
call
cmp
test
js
test
scas
ret
inc
fsts
sbb
dec
lock
pop
cs
and
fiaddl
and
imul
ret
cmpsl
xchg
scas
cwtl
xchg
xchg
push
mov
nop
cs
and
sbb
out
fwait
daa
sub
sbb
inc
xchg
push
xor
mov
adc
jne
mov
lods
xor
push
mov
addr16
test
and
adc
incl
lods
pushl
pop
orl
inc
add
push
loop,pt
movsb
out
mov
xlat
jbe
es
cmp
lods
insl
pop
rol
test
sub
dec
add
and
pusha
mov
cmp
ret
dec
cmp
rcrl
mov
clc
jmp
pushf
test
mov
shrb
rcll
inc
sub
jb
rep
xchg
call
ret
idivl
insb
push
divb
mov
or
movsl
das
xchg
out
cmp
jnp
cmp
or
push
arpl
js
pop
jne
addb
or
int3
adc
leave
adc
pop
or
cmpsl
in
in
mov
adc
dec
cld
jl
aad
and
xchg
sbb
and
repnz
mov
pmulhuw
into
sub
pop
sti
dec
jmp
iret
js
jecxz
mov
dec
cli
je
push
dec
push
sbb
xchg
fidivl
pop
add
mov
pop
add
jb
lods
addr16
xor
inc
lahf
inc
pop
cmp
xor
in
lahf
and
jb
or
cmpsl
arpl
aad
jle
xchg
aam
dec
test
movl
mov
sti
sub
fdivrs
xlat
dec
dec
pop
cmp
enter
jle
out
outsb
mov
or
jg
and
cmpsb
repz
cmp
fdivrs
pop
shrl
hlt
xchg
gs
mov
mov
push
inc
jecxz
cmp
jg
xchg
lods
dec
sbb
mov
pop
sub
and
cs
xchg
push
adc
dec
cmc
sub
popl
jmp
lret
jle
cmp
push
xor
xchg
add
and
inc
sub
lods
sub
int
mull
pop
mov
mov
loop
fnstenv
jge
dec
dec
das
cmp
mov
out
cmpsl
xchg
adc
dec
int
in
popf
adc
and
outsb
orl
or
in
int3
rol
scas
mov
adc
mov
adcl
jle
or
mov
ss
xor
add
fdivrs
stos
out
imul
xlat
pushf
movl
dec
lds
or
inc
fwait
sub
iret
pusha
iret
jae
jge
cmp
pop
add
sub
sbb
je
sub
test
cli
andl
adc
lcall
pushf
pop
mov
jle
jo
or
or
push
lahf
lcall
sbb
xchg
outsb
or
adc
out
sub
adc
scas
roll
pushf
or
cmp
mov
test
mov
dec
mov
mov
push
mov
jo
cs
incb
mov
cld
or
lods
lcall
negb
sub
lock
and
mov
mov
jmp
xchg
xchg
sub
sub
and
lods
in
es
aas
jmp
adc
es
mov
push
popa
aam
lret
popf
and
mov
imul
test
stos
cmp
lret
ja
pop
aam
xor
leave
jns
lock
xchg
out
mov
jl
jl
sbb
out
fstpt
lret
lea
pop
xor
test
push
fnsave
sarb
pop
cmp
movsl
xchg
pop
fisubs
xor
out
lods
test
ljmp
xor
push
or
xorl
cmpl
pop
fnsave
push
adc
mov
add
adc
addb
jl
mov
sub
mov
ds
andb
loopne
inc
adc
inc
int
adc
sub
pop
in
movsl
dec
icebp
out
daa
aam
subb
push
test
pop
xchg
mov
daa
mov
mov
adc
rolb
ss
mov
in
pop
inc
pop
jle
fs
or
add
adc
scas
gs
fstpt
cwtl
ljmp
aaa
pop
insb
loopne
cwtl
les
adc
das
addr16
ss
mov
shrl
stos
mov
push
push
xlat
addl
mov
xor
xchg
into
cmpsb
icebp
mov
sub
addr16
imul
std
shlb
lds
sar
clc
cld
ret
orl
addl
stos
movsl
popf
pmaxub
int
cmp
push
jb
jp
add
add
xchg
add
dec
add
xchg
outsl
push
in
jae
stc
xor
mov
xor
xchg
jae
adc
addr16
loope
pusha
stos
mov
inc
adcb
mov
popa
jae
or
roll
ljmp
mov
pushf
xlat
xor
jp
mov
cmpb
dec
outsb
les
push
testb
xor
cmpsb
std
sbb
sahf
push
or
and
push
cmp
repz
pop
imul
push
cwtl
idivl
pop
insb
xor
xchg
push
jno
dec
or
test
ss
dec
call
push
movsl
enter
mov
and
xor
jbe
add
enter
mov
aam
fcom
dec
jno
cld
je
and
xchg
cmp
movsb
aad
lods
ficoml
cltd
jp
leave
fs
and
jnp
mov
into
mov
imul
mov
data16
stos
mov
mov
les
push
adc
das
jns
sahf
mov
dec
lds
insl
dec
les
std
adc
cmc
movsb
ret
add
iret
pop
in
rclb
pusha
mov
adc
les
mov
xor
rclb
notb
pushf
xor
out
mov
fdivrl
int
inc
pusha
jle
scas
jmp
cwtl
sub
mov
shr
mov
pop
dec
mov
pop
xchg
pop
mov
pop
shrl
repz
push
in
jo
movsb
rorl
in
cwtl
in
mov
in
clc
sbb
cmp
rcll
cmpsl
int
push
nop
movsl
rorb
stc
xchg
stos
xchg
fwait
pop
int3
mov
iret
xchg
imull
push
mov
pop
and
push
fldcw
push
pop
mov
pop
jae
test
jp
adc
mov
mov
jle
inc
xor
pop
hlt
in
leave
sub
ret
and
ds
mov
mov
and
mov
test
dec
and
pop
adc
fadd
test
filds
sub
fstpt
shrl
mov
ficomps
mov
movsb
movsl
jmp
cmp
xor
mov
or
pop
cwtl
int3
test
add
lahf
inc
adc
xor
cmp
pop
dec
sbb
fldenv
mov
sbbl
in
insl
call
push
insl
test
dec
cmp
mov
push
jne
inc
xchg
lcall
orl
xchg
mov
cmp
fimuls
jp
sub
jne
clc
sbb
adc
jl
jmp
clc
mov
jb
call
ljmp
andl
js
or
push
adc
xchg
loope
push
pop
outsb
add
xchg
adc
jb
and
jnp
addr16
mov
repnz
lcall
mov
jle
pop
sbb
lods
imul
ret
push
imul
xchg
outsb
dec
dec
xchg
dec
lea
pop
mov
in
pop
push
xchg
leave
in
lret
xchg
cmpsb
mov
adcb
push
push
std
mov
int
mov
cwtl
dec
andnps
lea
and
jnp
xchg
out
jp
jl
in
cmp
add
test
imul
shll
sub
aaa
sub
pop
and
sub
stos
adc
add
incb
out
mov
mov
cmp
jg
or
inc
mov
mov
cmp
xor
xchg
and
sub
push
lds
dec
int
sahf
push
outsl
enter
mov
aad
arpl
es
in
xor
mov
std
pop
sbb
ds
xchg
add
ljmp
adc
sti
cmp
pop
mov
imul
push
xor
enter
out
pop
mov
xchg
or
push
call
je
sbb
jnp
add
icebp
imul
jo
mov
cmp
fimuls
pop
shl
fnstenv
mov
ret
jecxz
adc
negb
pop
pop
mov
add
es
mov
ficompl
lret
aam
xor
adc
bound
cmp
mov
in
xchg
loope
fimull
inc
out
in
xlat
sarb
mov
inc
lret
or
dec
imul
add
imul
xchg
dec
jmp
xchg
arpl
js
cmp
push
pop
jmp
xchg
sub
dec
pop
ss
xor
sbb
mov
cmp
xor
enter
pop
stos
stos
repnz
mov
and
mov
or
xor
lcall
push
xor
adc
mov
arpl
or
fcompl
cmc
adc
decb
sahf
ffree
push
mov
mov
pop
lcall
das
mov
jo
and
sub
adc
addr16
sub
out
sbb
add
mov
out
js
sbb
in
cmp
pop
out
push
jbe
or
sarl
call
cs
fistps
cmp
cmp
xor
in
pop
outsb
xor
les
aas
jp
dec
push
sub
test
xchg
stos
push
jge
and
repnz
out
pop
packssdw
movsl
daa
fisttpll
pop
cli
xchg
test
mov
iret
das
pop
inc
les
mov
add
inc
adc
movb
pop
popf
dec
xchg
inc
sti
aaa
shlb
inc
int
std
cwtl
adc
fnstsw
ljmp
lods
in
dec
inc
add
mov
push
enter
add
adc
jecxz
sbb
add
sub
sub
dec
xor
lods
xchg
testl
mov
push
je
not
add
loope
mov
insb
adc
mov
insb
adc
mov
out
arpl
fs
adc
mov
bsf
das
cmpsl
outsl
enter
mov
add
imul
clc
sub
fwait
in
xchg
cmpb
add
push
adc
sub
adc
cltd
or
cmpsl
mov
pop
fidivl
enter
loope
sbb
int3
je
lret
and
fwait
xchg
mov
icebp
or
mov
fisttps
xor
and
dec
out
and
mov
dec
orb
ljmp
stos
push
mov
jp
cmpsl
enter
dec
and
gs
adc
pop
idivl
mov
outsb
mov
notb
orb
jno
mov
and
insb
mov
loopne
pop
mov
jmp
jge
fs
nop
leave
xchg
mov
rcrl
lods
lahf
fidivrl
dec
inc
add
and
dec
inc
mov
sbb
pop
lret
fstl
push
inc
addr16
mov
and
fistl
pop
addr16
push
pop
jnp
cmp
into
enter
push
push
push
mov
out
jnp
nop
add
dec
je
inc
push
outsl
int3
xor
jnp
jecxz
push
and
les
mov
xchg
or
xor
stos
hlt
inc
push
jae
cmp
lods
push
das
jns
jg
imul
mov
jge
sub
test
roll
mov
push
in
test
loopne
jecxz
lods
dec
popf
jo
int3
xchg
lods
es
add
fmuls
out
mov
jnp
andl
mov
mov
std
les
adc
sbb
into
int3
aam
inc
cmpsb
mov
test
sub
sub
jbe
fs
xlat
repnz
xchg
add
sbb
in
aad
mov
or
fdiv
pop
repz
aas
lcall
dec
fs
ss
js
sbb
gs
or
aad
push
pop
mov
in
stc
fidivl
inc
pop
mov
sbb
fmulp
adc
jmp
arpl
dec
cmp
xchg
rorl
aaa
ds
sbb
fldt
rcrl
out
test
sahf
lcall
cmpb
arpl
jbe
gs
pop
mov
int
mov
cmp
or
inc
insl
cld
cld
xchg
push
push
dec
imul
and
fcmovnu
inc
call
mov
imul
sarb
mov
add
test
mov
pop
rcrb
pop
cmc
rorl
xchg
adc
dec
mov
mov
ss
mull
mov
shl
call
cmc
enter
cltd
pop
mov
jo
cmpsl
push
andl
mov
roll
xchg
outsl
enter
pop
aad
push
adc
testb
hlt
test
pop
mov
mov
loopne
in
addr16
xchg
adc
cmp
lods
push
addr16
cmc
cmpsb
pop
pop
fistps
inc
fisttpll
out
jb
jp
push
jae
add
aad
pop
pop
dec
push
xor
xor
jmp
aas
jnp
xchg
adc
cmp
jmp
mov
add
mov
and
inc
xchg
pop
call
popa
xchg
test
lods
adcb
insl
xchg
jnp
jle
aad
aas
divl
outsb
cmpsb
xlat
push
mov
enter
andb
sbb
iret
push
outsl
jp
push
icebp
jns
xchg
into
xchg
adc
mov
inc
adc
jle
mov
pop
pop
scas
mov
push
sbb
push
mov
shll
xor
scas
jns
mov
repz
mov
and
lds
sbb
xchg
xlat
scas
mov
les
stos
adc
xor
fadd
fidivl
outsb
xchg
fildl
loope
ds
push
jb
xchg
clc
push
les
fdivrl
cmpsb
cltd
lret
lock
push
cmp
adc
add
jecxz
jns
psubd
ljmp
pop
enter
es
jb
adc
sahf
mov
out
mov
int
stos
adc
sub
xchg
lret
mov
push
cwtl
pop
pusha
and
ficompl
xchg
jge
test
adc
jo
fstps
cmpsb
mov
adc
or
add
loopne
mov
sub
lock
es
push
xchg
sahf
pop
adcl
cmpb
icebp
jno
sbb
mov
ja
xchg
nop
ret
test
sub
fwait
xchg
repz
and
push
adc
dec
mov
lahf
ss
sahf
and
cmp
data16
cmp
mov
jg
aas
push
jns
mov
fldcw
push
push
rorb
in
sbb
das
mov
xor
jmp
fstpt
pop
jmp
push
add
jge
sbb
push
sub
js
daa
mov
xchg
push
push
cmp
ret
arpl
shlb
bound
xchg
push
jnp
fsubrs
jmp
cmp
stc
cwtl
dec
push
adc
lods
lock
popf
pop
xor
mov
push
cmp
in
add
sti
add
daa
clc
push
cmp
adc
inc
push
loop
xchg
pop
fiadds
xor
mov
es
cmpsb
sti
adc
add
cmpl
cli
loopne
mov
into
pop
arpl
xchg
xor
mov
fcmovu
popa
daa
adc
ret
jne
in
sarl
mov
fldt
fstp
sub
das
sbb
add
push
test
sub
or
arpl
mov
dec
xor
int3
hlt
pop
in
pusha
jmp
pusha
dec
lret
dec
sti
mov
push
jl
icebp
inc
sub
pop
sbb
xlat
xor
adc
stc
jge
ljmp
dec
ret
lds
jmp
mov
mov
mov
das
pop
xor
icebp
test
fidivrs
in
mov
loopne
lods
adc
out
inc
mov
hlt
inc
cmpb
repnz
test
mov
push
es
xor
pop
bound
js
jns
sub
imul
cmp
jb
fadd
or
pusha
lock
fcompl
mov
ds
mov
fistps
dec
sahf
stc
inc
fistps
ja
arpl
xchg
jns
sbb
jmp
push
ljmp
xor
insl
pop
ret
imul
data16
xorl
loop
data16
mov
adc
adc
test
xor
mov
ret
fldl
jno
das
je
fdivrs
xlat
push
xchg
pop
mov
inc
leave
cwtl
cmpb
mov
or
xor
sbb
sbb
pop
dec
jl
into
out
rcr
cmc
fwait
lcall
push
jae
popa
mov
adc
cwtl
outsl
sub
call
hlt
pop
repnz
in
cmpb
out
subl
inc
insl
lcall
enter
andl
pop
inc
movsl
insb
cmpxchg
xchg
jo
mov
cmp
adc
cmp
jne
or
ror
sub
clc
or
call
cld
in
test
lahf
pop
repz
fimuls
fnstcw
shl
fisubrl
sub
push
clc
jnp
aaa
push
rorl
sub
adc
and
cli
inc
mov
adc
dec
jg
cmpsb
adc
pop
test
and
inc
into
xorl
push
lock
dec
in
leave
mov
xor
xchg
mov
xor
sbb
dec
push
cmpsb
inc
pop
sub
push
hlt
sbb
or
jnp
xchg
xchg
sbb
pop
mov
es
sbb
insb
inc
ret
xor
push
lods
mov
adc
push
xor
jle
pop
in
cmp
test
xor
add
mov
dec
test
cmp
xor
cmpsb
sbb
fdivrl
and
inc
shr
jecxz
test
pop
je
pop
sub
fdivr
or
cmc
cmp
inc
inc
add
xchg
fistps
xchg
dec
xor
pop
mov
push
arpl
mov
stos
fistl
or
pusha
dec
lods
ret
sbb
xchg
lds
mov
or
negb
les
xchg
lea
xchg
shl
outsb
pop
cli
lods
popa
mov
pop
mov
dec
sbb
out
decl
inc
shl
int
test
cwtl
dec
pop
stc
ret
xchg
loop
imul
aas
sbb
ret
inc
ret
adc
or
dec
cmpsl
lret
push
das
in
fidivrl
jnp
js
aaa
sahf
pop
call
hlt
add
sub
ja
dec
movsb
adcl
jmp
ljmp
sbb
int
mov
cmp
in
jo
push
push
int3
mov
clc
pop
jno
scas
push
push
adc
pusha
dec
jmp
pop
mov
std
and
pop
add
sbb
in
xchg
lret
cmpsl
les
and
adc
mov
xlat
aad
andl
dec
icebp
sbb
das
add
rol
lret
mov
cmp
cwtl
and
cmp
test
mov
sub
aaa
adc
mov
jb
scas
fs
inc
aam
cs
push
fldl
fdivrs
mov
and
outsb
xchg
xchg
test
pop
xor
fisttpl
out
imul
out
divl
pop
ss
cmp
into
mov
and
fldcw
jg
rolb
or
daa
fdivrl
bound
add
dec
mov
sub
dec
and
pusha
data16
push
popa
cli
cmp
push
outsb
cmp
orl
cmc
cmp
sbb
mov
dec
jge
nop
loopne
fdivs
lret
xlat
nop
mov
fwait
movsl
mov
mov
xchg
nop
add
sbb
pop
or
daa
mov
fidivrl
cmpsl
jge
test
into
adc
or
jb
or
xor
imul
xor
cmp
inc
dec
sti
and
sub
mov
cmp
shr
pop
test
jne
imul
push
fs
sti
sbb
imul
fidivl
mov
xor
stos
enter
jmp
inc
dec
daa
rcrl
fwait
int
add
dec
dec
in
xchg
mov
xchg
adc
inc
mov
clc
enter
add
or
hlt
adc
jno
fs
mov
js
jp
shr
pop
dec
pop
jbe
aaa
xchg
xor
das
jg
movsb
jmp
in
push
sbb
mov
dec
sbb
aam
negl
lea
add
out
add
xor
ds
sbb
lods
cmp
pop
cs
add
sub
adc
jle
rcr
mov
shll
cmpsb
call
lret
pushw
cld
scas
jmp
add
jo
mov
xor
cmp
mov
arpl
loop
pop
mov
mov
dec
testb
add
es
lock
sub
pop
mov
pop
lcall
ret
daa
cmc
jg
lahf
repz
lea
out
fistpll
dec
mov
jecxz
add
mov
sahf
push
mov
mov
pop
xlat
sbb
pop
out
xor
das
inc
mov
and
push
pop
lds
fists
insl
sub
mov
cwtl
pop
je
enter
xor
stos
daa
subl
jecxz
dec
lea
sti
int
and
test
xchg
xor
in
dec
mov
mov
and
xchg
mov
int
in
ffree
mov
in
mov
jecxz
insl
adc
sarl
xor
cltd
mov
push
inc
adc
push
dec
pop
into
mov
pop
pushf
data16
adc
push
and
stc
loopne
out
out
add
leave
in
xor
push
popa
in
jl
in
in
push
sbb
lret
jae
mov
data16
push
jnp
sub
or
sub
scas
mov
xchg
adc
inc
mov
add
rcll
lahf
int
enter
and
cmpsb
xchg
or
dec
test
outsb
incb
adc
xor
pop
or
mov
jo
jg
into
jmp
inc
mov
test
pop
xor
mov
push
test
ret
mov
cmp
and
pop
push
and
loopne
add
imul
mov
out
jne
mov
jg
imul
or
ret
push
pop
or
dec
push
or
cld
mov
pop
jecxz
loopne
mov
pop
in
movsl
push
dec
jge
outsl
stos
mov
ret
xchg
mov
bound
sub
mov
sbb
jb
out
int3
add
mov
push
push
inc
pushf
push
or
stos
cld
inc
sub
sub
out
xchg
lahf
pop
mov
fistps
aaa
arpl
sub
mov
and
stos
cld
dec
sub
shlb
in
jmpw
and
add
mov
dec
in
and
dec
or
ret
int3
lock
xchg
inc
sbb
jbe
rorb
mov
mov
enter
fisubrl
inc
adc
and
cmc
xchg
mov
jb
test
mov
hlt
push
adc
lods
sub
mov
pop
fbld
cmpl
ret
insl
sub
and
in
ss
outsl
fists
aaa
jo
inc
sti
jmp
add
mov
push
bound
push
push
std
rcll
and
imul
pop
into
fs
xchg
stos
add
jb
inc
repnz
sbb
dec
mull
xlat
jg
jle
gs
jle
mov
cmp
cmp
mov
inc
and
adc
push
inc
push
inc
push
xor
fstpl
aam
pop
push
xor
fwait
rolb
ds
jle
mul
jno
mov
cld
adc
jnp
jns
sub
push
pop
mov
push
add
jb
fistl
insl
scas
dec
or
sahf
js
and
outsb
sti
pop
dec
ja
jl
insb
add
loopne
jbe,pn
sub
sahf
stos
push
push
loop
add
ror
pop
jbe
and
pop
cmp
sub
xchg
iret
xchg
xlat
or
mov
nop
das
fisttpl
dec
sbb
jl
or
mov
fbstp
out
sub
pop
mov
mov
inc
add
mov
cmp
lds
add
push
aad
scas
sti
xor
mov
movsb
inc
pop
ret
add
cmpsl
dec
sub
add
adc
jo
inc
test
test
daa
push
rol
cmpsl
test
push
nop
scas
dec
pop
cltd
out
ja
loop
repz
popa
xorb
jno
bsf
shrb
repnz
into
outsb
pop
adc
mov
popf
mov
jp
mov
sbb
sbb
into
out
iret
mov
test
loopne
push
inc
xor
and
repnz
or
popf
add
inc
sbb
mov
push
and
stos
popa
cmpsb
jno
add
test
or
sub
inc
insb
fwait
dec
sti
shll
test
or
adc
insl
cmp
scas
out
insl
shll
or
adc
adc
sbb
shlb
jp
push
sub
pop
sub
sub
shrl
pop
push
inc
push
fld
roll
rorl
stc
mov
xchg
xchg
inc
out
inc
cmp
xor
pop
jle
ljmp
push
scas
xor
jg
test
sub
jb
add
adc
cmp
nop
mov
jmp
cmp
cmpsl
dec
sahf
cmp
xlat
xor
imul
leave
popa
xor
stc
test
dec
sbb
jb
rep
pushf
js
push
xchg
fstpt
sub
and
dec
pop
enter
imull
cli
xchg
or
and
mov
jns
scas
fstl
shll
outsl
insl
addl
jecxz
jmp
mov
pop
jle
or
call
lea
out
xor
jb
pop
sbb
cmp
aaa
enter
push
push
or
lock
icebp
pop
mov
or
mov
add
pop
or
mul
push
adc
fwait
stos
mov
jbe
adc
cmp
dec
andl
je
push
push
sbb
ja
adc
jo
jb
push
js
mov
divl
mov
cmp
sti
mov
pop
or
xor
jge
mov
aas
sbb
iret
add
pop
xor
xor
js
adc
and
sti
jmp
fs
pop
aaa
sti
adc
jl
push
add
or
xor
decl
add
push
arpl
xchg
ret
inc
loop
cs
lret
xor
negb
cli
push
push
fidivl
add
xor
or
addr16
std
or
mov
jg
and
out
and
sub
popa
mov
and
rorl
and
outsb
les
jp
int3
cmp
fisubs
inc
popf
divl
xor
daa
dec
aam
xchg
js
sarl
inc
loopne
jg
and
in
push
or
imul
cmpl
pop
xor
das
jp
sub
push
inc
jb
fsubl
mov
call
ret
jmp
idivb
cmp
lahf
out
fucom
adc
int3
jmp
dec
rorl
shl
push
fwait
ds
adc
ljmp
xchg
out
shl
mul
add
add
jae
mov
mov
mov
shll
orb
out
pop
loop
jnp
push
lret
and
fldl
mov
sub
adc
xor
ficompl
loope
adc
cmp
or
sbb
in
pop
adc
adc
imul
pushf
imul
leave
mov
and
jbe
push
dec
xor
sahf
int3
lods
mov
outsb
and
int
stc
dec
push
loope
andl
in
test
test
or
notl
adc
jp
leave
and
fildll
ret
test
push
and
cli
jp
imul
aas
inc
sbb
jae
fld
frstor
mov
dec
inc
je
in
movsb
jp
xlat
jp
adc
jno
dec
icebp
pop
lods
mov
xchg
xchg
inc
pop
repnz
push
push
fdivrl
movsl
xor
mov
jbe
out
mov
int3
xchg
arpl
cmp
adc
cmpb
mov
xlat
neg
sub
pop
push
xchg
cltd
sarl
inc
aam
xor
xlat
loopne
sbb
cmp
jmp
xchg
ja
mov
popa
xchg
sti
sub
fcmovnb
mov
dec
mov
dec
das
call
insb
ljmp
dec
insb
sub
and
mov
xchg
test
push
jbe
adc
mov
lcall
mov
aam
jno
in
add
stos
xchg
xchg
adc
mov
mov
cmovp
pcmpgtd
xor
shll
aaa
inc
mov
aaa
in
push
or
or
mov
ja
ja
in
adc
outsb
ljmp
ss
repz
xchg
inc
inc
scas
mov
mov
stos
insb
inc
movsb
inc
and
loopne
xor
popf
testl
in
xchg
adc
mov
cmp
mov
cmp
dec
sub
pop
mov
mov
or
cli
xor
aam
inc
xor
push
mov
cld
push
sbb
cmp
xchg
cmp
xor
jg
or
ret
loop
cmpsl
mov
dec
arpl
cli
fdivrs
inc
xor
fsub
mov
outsl
adc
fsubs
pop
push
xor
mov
and
or
xor
push
push
xchg
sahf
cwtl
pop
cmp
pop
inc
cld
andb
or
xchg
sub
cmp
sub
xchg
pop
call
dec
sub
imul
andb
gs
popa
mov
mov
inc
and
mov
in
xor
cmp
cmp
test
popf
xchg
push
sbb
fstpt
sahf
push
pop
mov
jge
popf
lret
mov
add
ds
popf
xchg
in
mov
mov
loopne
mov
dec
cmp
repz
out
xchg
bound
aam
jns
sbb
pop
imul
stos
imul
cli
inc
pusha
add
adc
and
in
rcrl
xor
push
jecxz
and
cmp
mov
fimull
push
jge
out
cmpsb
addr16
push
mov
or
inc
pop
and
aam
movsl
rcrb
in
cmp
or
pop
fists
xchg
dec
aas
jns
negl
in
mov
or
in
push
and
and
out
inc
or
adc
loop
pop
and
movsb
or
das
and
gs
cmp
mov
into
outsb
dec
stc
xchg
pop
lock
mov
in
sub
mov
pop
imul
call
es
dec
std
scas
xchg
pop
cltd
jp
and
mov
sub
dec
fdivrs
jo
ret
lret
cmp
cltd
fldl
mov
lcall
out
data16
mov
dec
subl
je
outsl
aad
or
sub
mov
mov
cmpsb
repnz
mov
mov
andb
xchg
in
push
adc
jb
loope
or
pop
cs
outsb
adcl
and
decl
push
mov
dec
xorl
or
mov
sahf
mov
std
pop
cs
stos
jp
or
lods
mov
outsl
pop
mov
imul
or
into
imul
fsubrs
shlb
dec
xchg
sahf
ss
cltd
loope
cwtl
inc
mov
out
bound
test
xor
xchg
fdivl
mov
push
lods
sarl
mov
inc
fistl
push
aas
icebp
mov
push
xor
in
inc
mov
xlat
jle
jp
repnz
cli
in
xor
cmp
lods
shll
stos
xchg
cli
inc
and
in
dec
lds
clc
pop
mov
fdivrl
xchg
jl
lods
adc
pop
data16
pop
jns
in
push
gs
ret
dec
addr16
cmpsl
insl
out
pusha
insl
jne
mov
xorb
xchg
sbbl
iret
ljmp
fwait
adc
rorl
jge
psubusw
ret
jp
and
inc
lret
cs
movsl
inc
jb
jnp
jb
jp
mov
fwait
jne
push
xor
loop
mov
pusha
shrb
int
enter
jp
je
xchg
jmp
dec
andl
xor
jg
and
nop
push
jl
sti
pusha
inc
mov
test
add
mov
shll
out
xchg
scas
add
notl
aam
iret
dec
test
repnz
cmp
sbb
cmc
mov
sub
inc
inc
cmp
lcall
jo
mov
outsb
jecxz
es
xchg
inc
push
pop
adc
lret
mov
cltd
push
pop
sti
add
mov
je
daa
dec
mov
mov
lock
adc
iret
xchg
sub
mov
cs
dec
mov
imul
xor
loop
icebp
fs
test
arpl
xchg
test
data16
dec
xor
or
xchg
mov
push
pop
pop
push
idivb
pop
test
sar
xor
xor
adc
mov
divb
popf
push
xor
in
mov
adc
scas
in
mov
psrad
jl
lods
movsb
mov
sbb
xchg
ja
ret
cwtl
adc
jmp
aam
or
dec
rcrb
pop
mov
aas
add
dec
fcmovbe
xchg
fsubp
sbb
test
pop
push
sbb
aam
lcall
scas
push
jae
or
cmp
jmp
adc
cmp
mov
lock
mov
inc
mov
je
lods
lock
into
inc
sub
jmp
lret
scas
and
push
sbb
add
lcall
insb
jle,pn
pop
cli
arpl
clc
or
sub
add
es
pop
xor
mov
arpl
pop
jp
lret
dec
mov
filds
nop
mov
xor
lret
dec
add
inc
mov
sbb
sbbb
sbb
loope
gs
dec
fs
jl
pop
idiv
test
pop
nop
push
idivb
addr16
daa
pop
sub
xor
shrl
ds
push
imul
xlat
pop
mov
sti
movsb
data16
outsl
cmp
fwait
cmpsb
mov
inc
sub
sahf
subl
adc
fwait
cs
xchg
dec
mov
lds
xor
mov
daa
out
movsl
lcall
add
mov
inc
push
lahf
xchg
inc
nop
or
outsl
int
movsl
std
dec
dec
xchg
jo
sub
dec
clc
daa
rol
mov
dec
push
add
lret
xchg
lcall
sahf
cld
lds
sub
lea
cli
ss
ljmp
inc
setnp
add
mov
stos
jl
mov
push
iret
or
mov
jae
idivb
stc
or
das
adc
xlat
xchg
jne
inc
xor
mov
in
sarl
jge
loope
xor
ljmp
enter
test
cltd
dec
pxor
insb
pop
push
and
jnp
or
cmc
xor
dec
test
leave
cli
ds
adc
fldl
ljmp
sbb
and
or
or
out
and
arpl
sar
inc
ja
gs
lcall
idivb
fisttpll
sub
inc
das
add
movswl
shll
mov
hlt
cld
add
mov
jb
or
inc
or
sbb
loope
push
mov
rcl
push
sbb
imul
inc
in
out
sbbl
outsb
fs
and
mulb
cmp
lcall
sub
lods
dec
std
lods
in
aaa
mov
hlt
pop
mov
cmpps
insl
pop
inc
cmp
jo
adcl
sar
mov
into
push
cmc
jno
xchg
leave
xchg
js
jg
nop
xor
mov
or
cld
xchg
cs
add
jne
mov
fisubs
jecxz
lods
add
outsb
jp
mov
mov
test
pop
cmp
out
cld
xchg
cmp
cltd
shr
ret
pop
lds
mov
jo
sbb
arpl
shrl
lods
dec
push
aaa
jl
mov
seto
cmpsl
add
rolb
mov
mov
insb
repnz
int3
or
fsubrl
sub
and
rol
addr16
int
lret
subb
sbb
dec
and
sahf
pushf
aam
add
int
negb
aam
and
mulb
mov
lcall
push
sbb
add
mov
popa
jae,pt
cmp
and
xor
je
sbb
ret
in
stc
and
inc
lret
jo
lcall
mov
xor
adc
fbstp
data16
xchg
mov
lahf
ljmp
dec
fidivrs
inc
mov
cmp
imulb
push
pop
xor
inc
mov
push
cwtl
ret
mov
push
xchg
fcom
stos
nop
outsb
mov
cmp
dec
add
outsl
mov
pop
inc
lds
inc
xchg
or
inc
mov
test
mov
lods
inc
xor
sbb
insl
cmp
ds
popf
addl
stos
pop
mov
jae
sub
or
jno
fisubrs
inc
insb
cmpsb
loope
cwtl
insl
cli
in
filds
ret
sub
roll
in
xchg
push
mov
cmc
loop
jmp
sarb
ret
out
fldt
xor
int3
std
scas
add
cmpb
out
fcomps
incl
mov
test
pop
lds
cli
push
sbb
xchg
in
jge
mov
icebp
test
popf
mov
pushf
inc
je
sarl
fnstsw
out
xorl
imul
jle
outsl
xlat
int
xchg
popa
clc
sub
lea
pusha
call
mov
outsb
clc
pop
gs
imul
xchg
ret
cmp
push
insl
popa
dec
aaa
js
in
mov
push
outsb
or
mov
fisubs
test
testb
sbb
cwtl
xchg
jb
or
iret
inc
fistl
adc
loopne
test
mov
stos
rclb
adc
loop
cmpsl
cltd
mov
inc
leave
loopne
dec
cmpl
add
data16
pop
out
sbb
mov
adc
xor
jmp
shlb
mov
pop
push
mov
sbb
leave
jbe
fadd
dec
xchg
test
test
hlt
stc
mulb
ficoms
jnp
sub
inc
sbb
pop
out
mov
xor
inc
xchg
loop
test
dec
or
jmp
and
rcrl
fdivrp
pop
pop
ljmp
aaa
cwtl
test
xor
dec
repnz
dec
and
xchg
insb
divb
pop
adc
cmpsb
lcall
outsb
in
test
fstp
int3
xor
xor
jnp
repnz
cmp
pop
xchg
and
out
and
rcl
stos
mov
sbb
mov
push
mov
mov
jecxz
mov
adc
scas
and
ficoml
mov
into
mov
pop
daa
in
cmp
ret
lcall
jle
out
insl
pop
lea
jle
sbb
and
outsl
and
cmp
sub
and
notb
jo
xchg
and
fldenv
sbb
mov
xor
es
out
mov
aam
inc
js
outsb
testl
dec
xor
sahf
add
loopne
or
test
out
rcll
lahf
ficoms
int
inc
repnz
test
popa
ja
leave
ret
pop
jmp
lea
inc
xlat
mov
movd
inc
add
sbb
mov
and
ljmp
test
mov
jmp
jge
lods
hlt
jno
bound
cli
sub
mov
ds
fwait
sub
ljmp
int
pop
pop
daa
push
add
mov
push
lock
loope
inc
outsb
cmp
sahf
idivl
fidivs
ljmp
fisubl
enter
clc
das
pop
xchg
nop
sub
sub
adc
sub
repnz
cli
xor
inc
stc
xor
mov
popa
jge
mov
in
andl
mov
mov
push
pop
cmp
ja
jno
test
fsubrp
push
jnp
xor
ret
out
mov
ror
cmpsb
test
or
ljmp
addr16
mov
inc
xchg
dec
mov
xchg
sti
mov
out
pop
addb
jp
mov
iret
push
jae
jle
insb
jb
cmp
mov
xor
aam
adc
jmp
hlt
fsubs
rcll
mov
jbe
test
nop
jg
add
push
or
cmc
pop
adc
test
incb
rep
cwtl
cltd
mov
adc
push
mov
mov
push
inc
addr16
or
movsb
lds
cltd
mov
xchg
int
pop
dec
lods
stc
test
cmp
clc
push
xchg
ljmp
into
xorl
into
mov
mov
mov
bound
bound
popa
movsb
and
es
daa
dec
dec
xchg
scas
or
push
scas
xor
push
and
mov
and
jnp
xor
fadd
lds
pushf
dec
sbb
jae
dec
pushf
rorb
aas
inc
xlat
push
and
imul
int
cmpsb
aad
xchg
xchg
sbb
bound
jmp
sarb
adc
jo
in
add
jmp
test
aam
cmp
xchg
mov
xor
imul
dec
arpl
mov
mov
push
cmpb
jne
jg
movsl
xchg
shrl
pop
sahf
fisubl
jge
xor
jecxz
add
js
adc
loope
es
mov
jecxz
mov
inc
sbb
push
in
dec
cmp
popf
orl
add
cmc
nop
imul
mov
mov
fistpll
js
or
stos
push
js
imul
push
aad
mov
shr
loop
xor
je
xor
in
in
mov
xor
or
push
cmp
stc
cs
push
push
stos
xchg
dec
sub
xchg
fstpl
insl
jmp
nop
jecxz
scas
mov
pushf
in
mov
add
jnp
mov
mov
push
inc
push
xchg
cmpsl
pop
push
jmp
cmp
xor
pusha
cmpsb
adc
cmc
add
jmp
pop
lret
shl
rcl
rcll
inc
cmp
xchg
push
or
cmp
cmc
mov
dec
mov
shlb
inc
xlat
xchg
push
incl
shlb
dec
jnp
out
in
mov
and
leave
xor
cs
inc
cwtl
push
pop
ret
mov
mov
sub
stos
xchg
sti
push
test
and
test
popf
fldcw
lret
ja
pop
mov
mov
sub
sarl
pop
insl
lahf
cmp
pop
xchg
shll
sbb
xchg
dec
repnz
inc
mov
loope
jge
xchg
stos
jecxz
jnp
cld
int
aam
fadds
in
test
push
push
jecxz
jmp
xchg
inc
sahf
lret
lock
lret
out
sub
sbb
fsubl
test
jmp
sub
xchg
dec
pop
mov
subb
add
lds
int
xchg
ret
fisubrl
mov
je
rolb
add
cwtl
xor
push
in
aad
pop
arpl
sbb
dec
movsl
loop
imul
jno
ss
dec
mov
sbb
jne
sub
inc
aam
mov
and
js
in
hlt
add
sbb
jl
je
mov
xor
out
sub
push
js
loopne
cmc
cmpsb
scas
in
ss
lea
xchg
adc
cltd
aam
fildll
stc
sahf
sub
aam
ja
push
jmp
xchg
into
sub
idivb
cli
jno
sahf
adc
mov
aad
mov
mov
or
das
mov
popa
sbb
dec
jb
loop
sbb
std
jo
jno
jmp
jecxz
dec
mov
jb
jnp
sub
scas
mov
jne
in
insl
not
xchg
sarl
cmpsl
insl
out
sbb
push
out
les
mov
loop
xchg
add
mov
int3
pusha
sub
add
mov
loopne
xchg
dec
stos
cmp
aaa
loope
adc
dec
or
pop
or
cmp
fisttpl
mov
jno
cmc
dec
xchg
xchg
sub
lods
jb
test
fimuls
or
jae
lcall
sti
cmpsb
jo
push
dec
mov
sbb
into
inc
sarl
outsl
ret
pop
jge
fistps
sbb
mov
int
idiv
lods
pop
out
test
stos
push
out
cmpsb
mov
repnz
rolb
cmp
jg
mov
rol
dec
leave
fnstcw
pop
cmovae
loop
push
outsl
cli
inc
jo
hlt
pop
mov
cmp
les
mov
pop
cmpsl
push
les
add
fidivrl
add
icebp
fs
jne
push
loop
pop
inc
mov
mov
iret
mov
dec
add
loop
sbb
stos
mov
or
dec
sub
pop
std
mov
push
or
rcl
fisttps
jg
mov
push
pop
repz
push
sahf
mov
mov
and
jno
mov
dec
lret
and
outsl
pushf
and
cli
cli
cs
inc
xlat
mov
sbb
iret
lods
ret
mov
outsl
push
loopne
loop
mov
ds
jmp
sti
xorl
sti
push
shll
hlt
cmp
sahf
out
add
arpl
jl
push
mov
mov
test
or
xor
mov
sbbb
repz
sub
call
push
dec
sub
and
bsr
xor
or
xor
in
pop
cmc
dec
mov
jbe
jle
int3
js
sbb
xchg
arpl
test
xchg
and
pushf
pop
mov
xor
xorl
mov
fcmovbe
mov
lods
test
rclb
pop
sbb
sub
aaa
or
fdivs
cmovno
ret
mov
mul
scas
insl
das
xor
cmp
nop
loopne
mov
xor
xor
jecxz
test
adcb
sbb
sar
fcomip
ficoms
cmc
mov
loopne
pusha
sub
jecxz
mov
mov
icebp
push
inc
std
pop
arpl
push
and
icebp
xchg
cs
into
xchg
aad
mov
dec
bswap
test
negb
dec
add
je
ret
push
mov
imul
sbb
stos
and
mov
rcr
decb
and
ljmpw
test
or
shrb
ror
jbe
pop
insl
fistpl
lods
es
sub
das
inc
push
dec
jae
in
sarl
call
mov
pop
xor
ret
ja
pop
push
mov
fwait
jmp
add
pop
lcall
subb
fmull
add
sub
lcall
pop
mov
xorps
insb
in
lea
and
mov
push
cld
outsl
jns
sbbl
in
add
out
xchg
test
xlat
mov
mov
popf
nop
mov
or
jge
testb
or
push
xchg
pop
or
cmp
inc
push
push
addr16
mov
push
mov
sbb
idivb
roll
jne
pop
mov
lret
xor
mov
push
sbb
xchg
std
mov
dec
inc
push
sbbb
into
out
cmp
jmp
orb
and
add
rorb
mov
add
jb
xchg
and
fdivl
jno
lds
inc
xor
stos
push
push
cmp
inc
push
or
and
mov
jl
jnp
dec
mov
xor
or
xor
push
dec
mov
int
mov
adc
cltd
mov
jae
sbbb
cmp
or
push
fidivrs
jmp
icebp
ret
mov
jns
push
arpl
fisubrs
hlt
cld
pusha
cmp
mov
and
nop
jnp
push
fidivrs
jle
repnz
call
flds
cwtl
inc
aas
add
ret
push
sbb
inc
pop
inc
in
int3
dec
cmc
xchg
mov
jg
xor
inc
adc
fucomip
and
sub
dec
lcall
mov
or
test
jmp
lds
and
lods
add
pop
int
push
out
repnz
add
dec
movsl
into
jmp
icebp
jb
loope
xor
insl
mov
fadd
repz
in
adc
xor
push
call
add
fbstp
insb
out
mov
jle
mov
std
fldl
push
adc
cld
insl
pop
jnp
out
movsl
adc
mov
xor
es
add
push
mov
mov
cli
fisubl
inc
fisttpl
dec
jns
out
call
mov
enter
xchg
add
adc
jg
outsb
jmp
pop
mov
into
test
in
aas
push
and
aam
jno
fsubs
xor
lods
in
pop
test
shufps
fs
mov
ret
mov
inc
xchg
jecxz
sahf
xchg
xorb
loope
mov
lea
ret
mov
xchg
mov
xchg
call
add
dec
jp
pop
dec
pop
cs
cli
sub
daa
dec
jae
lret
adc
and
js
mov
mov
and
mov
push
sbb
add
das
dec
mov
dec
shll
stos
inc
fwait
add
mov
or
outsl
sahf
pop
push
or
sub
push
dec
fcompl
cmpsb
cmp
dec
dec
cmpsl
pop
std
sbb
idivb
loopne
jge
mov
test
into
xchg
stos
test
sahf
filds
jnp
mov
adc
and
xor
mov
sub
jle
jae
sbb
sub
or
cld
mov
out
push
loop
cmpsl
lds
or
xor
iretw
sahf
imulb
arpl
popf
movb
leave
xchg
in
xchg
jb
jle
xchg
cmp
cmpsl
test
cmpsb
xchg
loop
lret
shlb
pop
lahf
dec
sub
xchg
dec
fs
mov
test
add
mov
xchg
pop
sbb
adc
inc
aaa
std
cmp
fst
lret
insl
pop
push
aad
dec
push
mov
sbb
pop
fcmovu
and
inc
out
lcall
xor
ret
mov
push
and
mov
mov
cwtl
xor
cld
and
push
dec
adc
jne
cmpsl
leave
fld1
add
inc
and
out
dec
xor
xor
repz
sub
add
imul
icebp
mov
out
arpl
add
rorl
xor
int
insb
add
sbb
push
mov
test
mov
mov
jge
sub
inc
mov
and
dec
scas
inc
pop
or
push
lret
jge
xor
rcrl
aam
fisubrl
dec
popf
or
pop
lahf
sbb
mov
inc
andb
out
nop
leave
dec
lock
push
jl
mov
ja
std
sub
popf
aaa
jo
clc
fistpl
notl
inc
jb
xor
pop
mov
sub
mov
inc
dec
bound
jae
adc
add
pop
pop
sahf
pop
jae
xchg
add
lds
or
xor
mov
cmp
dec
mov
jo
sbb
in
sub
cltd
pop
imul
mov
cmpsl
repz
lea
enter
and
fcomps
dec
cmc
imul
out
stc
gs
fwait
cmc
cmc
into
xchg
fstl
fwait
sub
sbb
ds
xchg
jecxz
das
xchg
mov
adcl
add
les
pop
arpl
es
inc
scas
in
jns
sub
lds
in
cmp
ret
out
dec
mulb
je
push
xchg
mov
call
or
mov
inc
add
outsb
iret
jae
cmp
loopne
sti
add
stc
pop
frstor
mov
outsl
out
jbe
inc
xor
je
jb
sub
sbb
mov
mov
jnp
icebp
push
cmp
arpl
cs
sub
mov
sbb
loop
mov
mov
or
or
sbb
push
pop
jns
in
test
cmp
outsl
push
xor
outsl
movsb
pop
add
and
lock
in
inc
pop
lods
sahf
fimull
and
ret
sbb
xchg
add
leave
movsl
test
enter
jo
cmp
or
push
and
push
or
rcrb
sti
and
sbb
sub
mov
sbb
cmpsl
jle
adc
lods
xor
dec
js
outsb
pop
adc
loope
push
lcall
add
fcompp
fstps
mov
jns
mov
stos
test
xchg
jo
in
jmp
stos
daa
add
dec
jo
cmpsb
mov
mov
adc
test
or
sub
shlb
sbb
xlat
es
pop
rcl
and
div
add
mov
cmp
fisubl
xlat
xor
repz
fiaddl
pop
push
lret
outsb
xchg
test
mov
ret
bound
cmp
cltd
or
cli
cmp
sub
cld
jbe
test
es
dec
test
cli
hlt
sahf
xchg
shlb
lods
sub
call
ss
mov
cs
mov
ret
mov
cmpsl
mov
and
xor
insb
mov
mul
and
out
pop
jb
shlb
int3
xlat
test
cld
loope
std
and
arpl
add
lods
pop
gs
dec
push
cmp
xchg
and
cmc
xorb
mov
lahf
lds
pop
sarl
xlat
mov
xchg
fdivr
pushf
les
cmpb
or
sub
mov
jg
out
xor
jns
and
push
push
push
repz
push
fldt
add
add
shll
and
add
mov
push
icebp
sti
dec
push
mov
ja
stc
jbe
jns
mov
outsb
enter
outsl
mov
out
and
flds
aas
out
push
lods
aam
adc
adc
or
fldenv
mov
inc
dec
mov
push
les
stos
sahf
sbb
push
pop
insb
bound
pop
push
movswl
push
idivl
dec
and
jmp
xchg
sub
push
pop
fldl
lods
mov
lock
ds
fildl
dec
mov
test
add
mov
pop
dec
std
jp
push
fcompl
pop
pop
scas
and
stc
and
psubq
loop
pop
push
jmp
add
xor
sarl
mov
dec
dec
dec
dec
rorb
lret
pop
roll
xchg
ret
xor
arpl
mov
ja
aaa
fnstsw
and
fsubp
and
mov
dec
fadd
cli
ja
xor
jg
push
enter
nop
mov
cwtl
xchg
sbb
jge
nop
lea
and
int3
jp
mov
inc
test
je
ss
adc
popf
xchg
jns
icebp
jbe
leave
mov
cmp
lods
push
pop
pop
and
subl
cli
jns
aam
fisubs
mov
or
addr16
sub
js
mov
dec
add
sbb
cmp
stos
and
mov
pop
addr16
std
push
in
mov
insb
stos
jae
pop
jns
subl
fs
clc
mov
xor
pushf
addr16
mov
in
mov
inc
mov
push
pop
ljmp
jae
push
int
clc
cmp
inc
in
or
mov
jmp
jne
push
lock
inc
cmp
sub
and
xchg
cmp
dec
test
jo
xchg
outsb
add
call
es
jp
sub
pop
inc
into
adc
out
sbb
lea
dec
dec
es
ds
inc
jp
imul
js
jo
mov
test
sbb
cmp
push
test
dec
mov
cli
mov
inc
pop
clc
add
or
popa
insb
xlat
insb
icebp
mov
movsl
push
pushl
out
xor
push
mov
insb
lock
cmovs
sbb
pop
mov
jle
inc
xchg
cmp
lret
ljmp
add
ljmp
into
test
jb
iret
dec
and
xorl
das
or
or
movsl
pop
insl
gs
dec
and
xchg
jge
aas
out
push
cmc
xchg
adc
dec
dec
mov
ficomps
into
leave
enter
add
lea
jp
outsb
test
jg
sub
popa
icebp
jmp
out
add
mov
jge
xor
orl
mov
pushf
dec
mov
mov
imul
push
inc
cmp
mov
fcoms
sbb
jmp
mov
jmp
mov
shrb
cwtl
dec
inc
mov
mov
mov
cmpsb
aas
mov
inc
call
cmc
fdivs
inc
mov
flds
lret
shlb
fs
cmp
mov
sbb
daa
loopne
add
jl
fs
fldl
push
push
js
insb
pop
cmc
push
inc
pop
pop
sub
add
in
testb
icebp
ret
hlt
stos
outsl
push
insl
mov
shl
push
out
sub
pop
pop
sub
sbb
mov
ljmp
scas
je
aam
xchg
inc
ret
rorl
iret
dec
mov
push
xor
mov
mov
pop
inc
mov
aaa
push
dec
mov
mov
rcll
test
sbb
loope
sub
decb
test
insb
add
pop
xchg
call
add
popf
out
or
movsb
jp
mov
pusha
inc
xor
shll
jnp
fwait
aas
outsb
in
test
test
push
icebp
cmpsb
jbe
sbb
or
sbbb
adc
xor
mov
repnz
scas
sti
push
pop
add
sub
adc
mov
dec
in
idivb
sbb
insl
mov
xchg
idivb
xor
in
into
lods
repnz
adc
mov
dec
sub
lods
push
movsb
ret
xchg
lahf
fdivrp
mov
lods
or
out
adc
cmpsb
lahf
xor
loop
loop
imulb
jge
jns
and
push
mov
adc
dec
xchg
fmuls
les
sbb
pop
dec
fldcw
push
sbb
cmpsb
inc
popf
repnz
fwait
and
jno
adc
add
popf
cmp
dec
movsl
insl
push
arpl
call
mov
mov
xor
ffreep
pop
xlat
out
and
sbbb
inc
sbb
mov
fildll
std
jae
sub
mov
dec
insl
in
sbb
ret
aaa
jecxz
shrb
push
int3
adc
xchg
insl
or
movl
ljmp
ret
mov
sti
xor
fstpl
push
sbb
mov
stos
out
lcall
mov
mov
adc
hlt
stc
sub
xorl
jge
adc
cmp
fbld
cltd
js
cmpsb
mov
aam
dec
cld
repz
inc
fwait
or
stc
inc
pop
dec
mov
stos
aaa
movsl
cmpsl
aad
mov
pop
ds
dec
aas
sbb
mov
add
sahf
sbb
sub
jg
lahf
ret
jp
cmp
dec
inc
sbb
dec
mov
adc
das
push
test
or
or
in
xchg
sbb
jg
fcoms
les
orl
push
inc
adc
pusha
mov
scas
xlat
scas
jle
jbe
fwait
xor
dec
imul
push
mov
nop
in
sbb
adc
in
aas
subl
sahf
testl
inc
adc
jne
mov
mov
mov
add
and
call
push
ss
loop
cmpsl
repz
daa
jecxz
xchg
clc
add
jp
mov
pop
dec
fisttps
push
or
ret
outsb
mov
jmp
push
les
sbb
xchg
inc
int3
pop
dec
sub
mov
test
mov
push
inc
push
add
shlb
xchg
pop
vsubps
lcall
or
lock
xchg
aad
mov
or
fs
and
insb
jmp
sub
xchg
ss
dec
pop
add
mov
sahf
xchg
xor
pop
adc
jg
mov
int3
mov
in
xchg
rorl
out
jno
cmp
ja
push
cltd
mov
hlt
push
rolb
out
add
mul
sbb
rorb
lcall
add
push
and
or
lock
sub
mov
pop
cltd
push
pop
push
ret
aaa
ret
add
jl
cmp
jmp
or
jmp
inc
dec
mov
add
les
add
insb
ret
add
addr16
jle
sbb
add
add
cmp
daa
inc
mov
divb
shll
push
roll
test
stos
sub
jbe
dec
push
xchg
xorl
roll
clc
test
mov
pop
leave
aaa
add
lret
ljmp
shrb
test
int
in
pop
setns
ret
jns
in
sbb
jecxz
sub
add
xor
adc
lds
hlt
sahf
lahf
and
push
ret
repnz
pop
push
enter
cmc
jno
das
into
shlb
divb
lea
ljmp
aad
in
repnz
fwait
and
in
jo
fiaddl
jg
fwait
mov
mov
lahf
movsl
sub
pop
les
addr16
mov
fwait
in
in
add
shlb
xor
sbb
add
jp
push
jno
xor
fimull
sub
sbb
jne
xor
add
sbb
out
dec
in
fdivrs
aaa
stc
pop
orl
adc
sbb
loope
fimull
mov
popa
xchg
stos
dec
pusha
mov
xchg
jmp
jl
dec
cmp
xchg
outsb
popl
or
add
or
adc
mov
scas
mov
pop
pop
jmp
insl
out
push
inc
aas
adc
pop
inc
psadbw
in
lods
pop
xlat
call
and
pop
insl
xor
je
add
shrl
xor
movsl
test
add
or
sub
jecxz
outsl
jno
repz
mov
outsb
cmp
and
cld
fldt
sbb
insl
scas
jno
sbb
or
add
jae
lods
popf
cmc
out
divb
rorl
sbb
mov
call
aaa
pop
fs
adcb
test
adc
jp
jns
mov
xchg
dec
or
int3
jle
out
aad
xchg
dec
cmp
jbe
mov
stos
jp
imul
fdiv
shlb
mov
adc
into
sysexit
cli
lods
sahf
push
adc
pop
adc
or
lods
les
orl
push
cmp
das
leave
gs
pusha
and
xchg
inc
sbb
sbb
jecxz
insb
jnp
mov
pop
mov
pop
push
aam
inc
sub
jl
inc
mov
and
push
insl
inc
ret
mov
xor
mov
xor
outsb
push
mov
sbb
shll
xchg
push
add
mov
cltd
ja
fbld
cmpsl
into
icebp
xlat
lds
cmp
mov
jmp
push
clc
mov
fcoml
enter
repnz
js
shlb
lods
sub
insb
stc
cmp
repnz
jno
pop
out
loope
xor
lret
pop
outsl
xor
sahf
inc
adc
push
mov
sub
test
mov
jle
mov
scas
fwait
dec
mov
mov
sbb
in
cmp
imul
test
into
xchg
or
inc
adc
cmpsb
mov
fisttps
and
mov
inc
dec
jg
dec
sarb
mov
into
mov
je
sub
adc
mov
scas
fs
daa
jl
push
adc
dec
pop
or
xchg
stc
or
enter
xor
shll
js
pop
xor
mov
sub
cmp
jbe
xchg
loopne
cltd
pop
icebp
xlat
shl
out
mov
popf
dec
xchg
filds
sahf
stos
push
je
or
jnp
adc
push
sub
mov
in
push
mov
push
dec
daa
out
ret
sbb
cmp
test
xchg
inc
sub
scas
sbb
punpckhbw
sbb
ss
ret
js
imul
iret
daa
sbb
jno
shlb
dec
popa
andb
ja
dec
adc
repz
hlt
loop
xchg
enter
mov
xor
call
mov
lea
div
insl
xor
int
stos
mov
pop
inc
mov
sub
cld
das
cmc
insb
xor
pop
adc
call
inc
add
push
test
sub
ret
mov
fdiv
xchg
fldt
jg
sub
or
add
int
push
jb
ljmp
bound
cmp
stos
call
sbb
rclb
or
out
imul
mov
sub
jg
cltd
cmpsl
test
jle
cmc
and
negb
and
add
test
push
push
push
insl
popf
mov
sbb
outsb
sub
orl
push
scas
js
push
xchg
push
xchg
push
push
pop
pusha
cmp
pusha
pop
repz
pop
dec
leave
int
mov
mov
and
jg
lcall
outsl
inc
repnz
loop
dec
insl
dec
inc
mov
jne
xchg
mov
sarb
adc
insb
push
add
test
out
addl
push
push
std
in
mov
push
cmp
xchg
or
jl
mov
scas
fildll
cmp
pop
mov
scas
mov
mov
cmp
pop
mov
sub
out
je
repnz
scas
push
jb
addb
cld
iret
pop
divb
sahf
arpl
cmpsl
mov
xlat
sub
dec
xchg
stos
cwtl
out
std
and
iret
js
push
in
jle
daa
call
mov
iret
push
out
test
pop
sarb
mov
cli
xor
xor
add
loope
imul
dec
dec
xor
ret
rcll
sbb
ror
addr16
fwait
mov
mov
mov
mov
push
push
pop
dec
xlat
out
subl
dec
or
cltd
cli
cmp
pop
rcll
sbb
mov
imul
jo
dec
mov
mov
lods
sbb
js
cmpsb
lea
add
adc
pop
sub
mov
loopne
imul
popa
xchg
push
sbb
or
pop
addb
shl
mov
movsb
pop
enter
aaa
cmp
or
pushf
inc
pop
test
xchg
cmp
sbb
add
and
in
imul
shrl
push
data16
data16
das
cld
sahf
inc
xor
divl
xlat
pop
push
into
sarl
mov
xor
mov
out
mov
dec
jns
and
fwait
push
aaa
shlb
pushf
add
test
pop
jb
sub
sbbl
dec
mov
mov
test
xchg
subb
xor
shl
mov
pop
xchg
ja
jno
test
loop
jnp
push
out
cmp
aad
sub
addb
fdivs
push
pop
push
push
xlat
ret
pop
roll
sub
adc
gs
stos
add
aas
lret
add
or
int3
jmp
dec
adc
xor
pushf
jo
fisubl
xchg
sahf
lods
lahf
adc
outsb
mov
cmp
stos
mov
cmpl
pop
cltd
or
sub
daa
cmp
jecxz
fs
jmp
std
idivb
pop
xlat
lahf
mov
jnp
addr16
rcr
or
and
fwait
dec
and
adc
xchg
lods
push
dec
dec
rsm
aas
shlb
fnstenv
mov
test
sbb
and
mov
push
mov
xor
std
lcall
mov
int3
lcall
xlat
out
mov
sub
xchg
mov
psubb
roll
xor
pop
jmp
sub
push
lods
and
cltd
inc
lods
in
jl
xchg
mov
add
into
or
cmp
xchg
and
sub
mov
sahf
repnz
pop
sbb
ficoml
or
fidivrl
mov
fs
mov
add
into
fs
fmull
push
pop
pushf
inc
xor
dec
xchg
flds
pop
fdivrs
add
xor
rorl
mov
adc
notl
lock
xor
lcall
incb
ss
jecxz
call
mov
in
clc
push
mov
rcrb
jnp
xchg
push
in
and
decb
mov
in
inc
inc
aaa
push
xchg
clc
dec
popf
movsb
jmp
dec
test
shl
fisttpl
mov
sub
xchg
adc
je
insl
cmp
iret
mov
adc
in
dec
rolb
les
leave
add
sub
arpl
inc
out
xchg
dec
dec
je
inc
movl
insb
rclb
ja
stc
cli
pop
jno
cltd
insb
cmpsl
or
xor
inc
adc
pop
xor
in
sarl
std
mov
inc
jnp
xchg
jnp
adc
scas
cmc
xchg
or
xorw
fdivrl
lods
dec
cmc
jnp
hlt
es
ret
addr16
fldl2t
and
push
inc
imul
js
scas
xchg
push
cli
inc
test
das
or
rcl
push
scas
xchg
shrl
and
sub
and
dec
adc
push
shl
dec
scas
cmc
or
or
jb
and
ss
into
pusha
fdivrs
pop
js
iret
sbb
fmul
sub
jne
pop
xchg
push
cs
sti
or
cmp
in
mov
mov
pop
mov
xchg
sbb
xchg
lods
jne
pop
les
ficompl
mov
xor
imul
jecxz
dec
enter
rcrb
mov
jo
mov
push
add
cmp
mov
mov
cmp
push
mov
jo
cmp
std
popl
iret
mov
cmp
add
mov
mov
push
hlt
mov
arpl
inc
and
inc
pop
push
into
cmp
pop
sbb
adc
and
or
ljmp
dec
mov
inc
shrb
ret
dec
cmp
fdivs
jnp
jae
and
cmc
mov
pop
fisttps
pop
loop
xor
xchg
fstl
lret
sbb
outsl
mov
rolb
pop
add
mov
sbb
scas
ror
imul
xchg
mov
add
mov
stos
jp
xor
add
or
mov
sub
test
cmp
fnstenv
mov
mov
enter
mov
fdivs
sti
pushf
in
les
sbb
xchg
or
test
aam
mov
fimull
dec
mov
cmpsb
push
es
decl
addl
xor
xchg
pop
lahf
insb
pop
jb
push
scas
movb
scas
inc
add
bound
leave
mov
adc
mov
vpmacsdql
push
mov
pop
or
and
cmpsb
lcall
out
aas
scas
ror
mov
mov
lea
adc
dec
lds
ss
fwait
mov
movq
lock
ljmp
mov
popa
cli
sub
add
test
xor
mov
bound
cli
adc
cmpsb
cmp
cmc
push
inc
mov
or
push
out
xlat
mov
arpl
hlt
cmp
testl
push
cmc
jnp
popa
mov
and
ret
add
push
inc
dec
insl
jecxz
punpcklbw
pop
aam
test
popa
aam
or
pushf
test
rorb
add
int3
dec
scas
subl
insl
pop
xor
cmc
iret
int3
push
jnp
or
fdivp
mulb
add
cwtl
xor
sub
int3
movsb
jg
hlt
jo
jno
add
movsb
clc
insb
pop
inc
or
inc
bt
scas
leave
shrl
repnz
aad
je
jo
repnz
sbb
adcb
loope
adc
insl
leave
fwait
xor
inc
inc
or
jne
ret
pop
rcll
add
repz
dec
loopne
adc
and
adc
and
pop
in
sbb
mov
adc
inc
cld
dec
pop
jae
in
push
push
push
ret
nop
and
xor
pushf
dec
das
pop
adc
xor
or
dec
sbb
adc
dec
fwait
addr16
shrb
xchg
pop
xor
adc
rcrl
and
insl
sbb
push
in
or
dec
stc
mov
mov
jo
or
xchg
cmp
jo
aad
push
leave
ja
rorl
popa
sbb
addl
inc
fidivrl
insl
arpl
add
or
nop
cmp
push
clc
ret
ret
inc
imul
xchg
and
and
push
dec
mov
addr16
out
sbb
pop
in
int
js
dec
repz
push
out
adc
inc
iret
push
lock
pop
call
rolb
cmpsb
popa
test
and
clc
mov
bound
jp
hlt
mov
pop
adc
inc
aam
out
add
imul
mov
and
jl
ficoms
inc
std
mov
adc
cmp
stos
sub
test
pop
dec
hlt
jmp
or
mov
fcoml
cli
out
sahf
popf
fsubrs
dec
stc
mov
and
movsl
lds
or
mov
movsb
fsubrs
mov
push
mov
adc
insl
sbb
mov
cmp
jns
nop
push
jns
dec
cwtl
rcll
lods
push
fsts
pop
mov
inc
or
xchg
mov
cmc
gs
adc
clc
jbe
fstps
jne
jns
jmp
icebp
mov
and
push
push
icebp
jg
sbb
cld
add
pop
jns
and
lret
xorb
aaa
hlt
inc
xor
jnp
out
sub
std
lret
out
pop
enter
xchg
cmp
imul
pop
cmp
mov
aaa
mov
bound
mov
lea
mov
xchg
dec
xchg
insl
movb
mov
in
pushf
jns
add
das
cli
inc
cmp
lahf
sti
lret
in
popf
test
jge
and
adc
mov
sbb
fstl
inc
lods
cmp
rcl
popf
cmp
or
adc
mov
sbb
addl
sbb
fadds
mov
jbe
aaa
fsubl
lahf
cltd
test
lret
jmp
addr16
xchg
pop
push
out
xchg
or
stos
and
jl
or
mov
xchg
subl
mov
mov
mov
aad
xchg
mov
jns
push
sbb
adc
test
mov
cmp
insl
test
xchg
xchg
and
or
add
rol
stos
into
inc
sbb
dec
cmc
inc
movsl
test
scas
loop
jb
push
mov
loop
repz
lret
into
es
mov
inc
add
jmp
sub
push
scas
inc
and
sub
cmp
mov
adc
add
jecxz
movsl
fwait
in
adc
dec
jo
and
cmp
sbb
pop
push
jp
ds
xchg
dec
dec
mov
cli
dec
and
das
push
add
in
xor
sarb
hlt
ja
divb
rcll
jne
loop
ds
mov
out
shll
jl
mov
in
and
add
repz
mov
jne
fdivrs
inc
mov
scas
nop
sbbb
inc
test
add
inc
cwtl
out
shll
pop
movsb
sub
mov
test
push
and
decb
add
inc
adc
dec
push
cmp
pop
mov
mov
mov
jo
push
sbb
inc
or
into
mov
into
sub
dec
mov
xchg
lods
imul
sub
dec
xchg
dec
xlat
rorl
iret
inc
jg
xor
inc
fmulp
lahf
mov
cltd
fcompl
dec
add
sar
dec
pop
pushf
add
lock
mov
inc
mov
mov
mov
movsb
jp
push
sub
cli
mov
aad
call
test
out
inc
xchg
pop
push
mov
or
push
les
mov
xchg
dec
jns
aad
add
ds
movsl
dec
ret
jae
mov
fwait
ret
pop
insb
mov
inc
sbb
push
test
popa
je
les
xchg
adc
jo
daa
mov
push
outsb
mov
xchg
loope
jae
xchg
pop
pop
jb
or
jp
push
jp
push
fwait
and
mov
in
leave
add
clc
mov
adc
push
fnstcw
pop
adc
jmp
vpsrld
fstl
cmp
cmp
jo
inc
xchg
push
dec
add
int
jp
lods
mov
add
leave
shll
repnz
pop
mov
test
pop
inc
clc
cmc
jno
sub
push
add
pop
orl
ss
pop
sub
pop
push
mov
call
icebp
jp
or
fnstsw
stos
dec
adc
xlat
cmpsb
mov
jnp
daa
xor
inc
call
xor
cmp
xchg
cld
cmp
fisttpll
mov
in
lods
sub
jbe
push
int3
and
outsb
int
mov
cli
incb
dec
xor
dec
sbbb
and
fs
bound
sbbb
cmp
clc
int3
push
pop
mov
rcrb
dec
dec
in
xchg
insb
gs
popa
or
imul
push
ss
push
cld
ret
mov
out
insl
mov
lods
lock
decb
xor
hlt
cld
vpaddq
fimuls
dec
cmp
mov
movsl
and
or
add
pop
js
and
and
push
enter
inc
cmp
imul
test
xor
lods
mov
mov
cmp
ret
pop
dec
fucomp
bnd
add
push
aam
xor
pop
dec
aas
imul
outsl
pusha
inc
pop
sub
cmp
sbbl
xchg
xor
les
dec
jbe
data16
mulb
fcoms
mov
pop
data16
pop
enter
inc
lods
add
push
cwtl
xchg
movsl
add
loop
add
das
insl
mov
inc
push
adc
int3
pushl
lret
mov
adc
movsl
loop
lods
cmp
test
loope
jno
push
mov
dec
xor
xchg
adc
lods
adc
daa
push
dec
xchg
addr16
xchg
sbb
loopne
lret
inc
adc
cltd
lret
mov
aam
dec
adc
lcall
in
cwtl
xchg
js,pt
lret
push
cmp
cli
push
or
lret
sahf
jge
aam
adc
mov
cmpl
fnstenv
mov
pop
adc
cmp
std
in
lea
pcmpeqb
mov
xor
outsb
pushf
inc
cmc
into
cmpsl
mov
push
pop
and
push
jecxz
mov
dec
and
and
pusha
outsb
mov
or
test
inc
subb
jle
mov
mov
ljmp
fbld
sub
mov
ljmp
ja
popa
into
jnp
push
stc
rcrb
dec
aas
fucom
mov
mov
test
sbb
in
fwait
test
add
stc
push
clc
sub
mov
cli
jmp
push
xor
jb
adc
sub
sbb
ja
sub
push
pop
and
cvtdq2ps
lret
push
mov
sahf
int3
cmp
mov
cld
push
lock
aas
cmc
inc
test
rol
sbb
bound
clc
mov
pop
pop
outsb
sahf
or
adc
jmp
lds
cmp
pop
in
sarb
add
mov
dec
aad
mov
jne
pop
stos
mov
adc
fnstsw
enter
inc
and
test
sub
adc
add
adc
call
xchg
stos
nop
leave
sub
incb
outsb
push
pop
test
lret
xor
les
inc
faddl
dec
loopne
enter
adc
add
jge
ds
das
insb
movsb
adcl
outsl
add
subb
movsl
cmpsb
cld
add
pop
pop
cwtl
dec
enter
je
into
mov
mov
jle
fcomip
shlb
fdivl
mov
sbb
add
mov
and
push
shrb
xchg
fadds
add
dec
out
push
test
out
scas
dec
add
lret
push
add
das
inc
rcl
inc
dec
sahf
jne
mov
subl
push
fld
test
mov
iret
lock
adc
insl
rorl
inc
push
xchg
fiadds
out
insl
sbb
stc
xchg
add
mov
xchg
push
cltd
outsb
lods
movsb
movsl
sti
insb
cmpsb
fs
jne
xor
ret
enter
inc
mov
icebp
mov
mov
add
inc
sbb
push
faddl
and
xchg
jo
or
mov
movsl
mov
out
sub
in
loope
ret
mov
or
inc
imulb
in
mov
cwtl
pusha
jb
mov
lret
mov
jno
cmpsl
in
inc
sbb
insb
mov
and
push
and
pop
xchg
ficomps
into
mov
xchg
popf
mov
into
inc
cs
iret
pushf
mov
sub
pop
inc
pop
inc
ss
mov
mov
inc
in
xchg
fcompl
out
add
xchg
out
lods
lds
jg
or
pop
call
out
add
xchg
mov
inc
mov
iret
push
sub
mov
mov
out
dec
ds
rcr
ret
in
jl
jle
add
xchg
xlat
js
pop
inc
and
or
pop
xchg
or
mov
pop
sbb
lods
ficoml
stos
addr16
fmuls
and
icebp
sub
mov
jbe
stos
xchg
loop
mov
fisttpll
and
xchg
je
fisubrs
mov
mov
jnp
or
push
nop
mov
imul
rcll
add
pop
lea
pop
aad
xchg
adcl
iret
addr16
aas
insl
sbb
dec
xor
nop
and
lea
sbb
pop
adcb
popf
js
fdivp
sbb
pop
cmp
xchg
inc
inc
das
pop
into
xor
repnz
cmp
iret
and
sub
push
inc
sbb
mov
cmpsb
out
je
inc
dec
pop
fs
adc
jecxz
xchg
dec
cmp
jg
mov
xlat
int3
in
int
orb
aaa
sbb
call
test
mov
mov
mov
popl
scas
int3
cmp
and
sub
call
or
inc
stos
or
out
sbb
dec
ja
int
add
test
xchg
ror
sbb
cwtl
adc
ret
test
mov
cmp
lea
pop
dec
jo
sbb
jle
push
das
ljmp
jo
fdiv
mov
stos
jo
cmp
mov
adc
pop
push
lcall
imul
push
sbb
or
mov
jp
mov
stos
sbb
mov
pop
or
lcall
jmp
es
push
cmc
dec
mov
enter
cmp
hlt
and
pop
leave
dec
imul
push
mov
lret
enter
stos
cmp
mov
dec
adc
dec
loope
push
cmp
mov
mov
xor
test
daa
cmc
psubd
or
ljmp
enter
pop
pop
xchg
scas
inc
pop
sbb
movsb
hlt
adcb
or
test
mov
jmp
enter
mov
pop
jg
rorl
clc
lea
cs
loopne
xor
jnp
into
hlt
imul
mov
ds
sub
andb
mov
push
sub
mov
into
addr16
cmp
cmpsl
mov
bound
inc
cmpl
or
pop
jp
sti
inc
stos
test
pop
testb
jmp
mov
push
les
xchg
mov
adc
dec
mov
xor
pop
xor
jno
dec
cmp
jae
test
or
add
jne
jmp
sti
sti
dec
shll
sub
insl
scas
dec
popf
xchg
ljmp
xlat
mov
sub
dec
lcall
sub
xor
push
adc
lock
mov
jns
imul
js
addl
adc
xchg
rol
icebp
mov
push
dec
dec
out
jl
cmp
jo
push
inc
dec
outsb
movsl
pop
add
xor
nop
cmp
jne
mov
or
adc
mov
fildl
sub
sub
xchg
inc
mov
lea
movsb
mov
dec
xchg
mov
dec
push
inc
cmp
sbb
lahf
push
push
repnz
stc
adc
shll
sahf
lret
cmc
addr16
ret
cmpsl
jg
out
adc
dec
push
not
jle
ret
loope
lahf
mov
fldl
and
cmp
cmp
mov
repnz
mov
imull
or
xchg
mov
push
push
notb
mov
jl
leave
shll
inc
orb
daa
mov
push
repz
pop
pop
rcr
jmp
movsl
movsb
clc
xlat
xor
std
add
aad
adc
push
mov
push
xchg
mov
push
mov
int3
dec
mov
sbb
add
in
lods
ret
or
pusha
xchg
fistpll
inc
scas
aaa
popf
sbb
xchg
cmp
xchg
out
xchg
sbb
stc
lea
aaa
jae
dec
imul
test
dec
mov
sti
roll
sbb
cs
int
pusha
jle
lea
data16
popl
test
pop
adc
or
adc
out
sub
push
imul
movzwl
enter
mov
inc
es
adc
cmp
cmpsb
jb
xchg
add
popa
call
sub
jnp
mov
xchg
sub
xlat
add
lret
mov
sbb
sub
ret
aad
jo
mov
mov
faddl
sub
mov
lcallw
cwtl
outsl
xchg
stos
mov
jge
int
in
push
mov
pusha
sbb
xchg
push
cmc
push
sub
pop
mov
daa
loopne
movsb
popf
insb
sbb
inc
testl
cmp
xchg
adc
inc
pusha
call
lods
xchg
dec
sbb
fwait
xor
daa
movsl
shll
cmp
add
repz
orb
addl
adc
sub
ss
push
lret
and
jno
jb
push
fwait
sub
mov
fdivrs
dec
into
fldenv
push
pop
sbb
mov
push
xchg
sbb
iret
mov
and
push
daa
xorb
push
lcall
lea
dec
cmp
dec
scas
push
sahf
enter
cmp
mov
icebp
shrb
add
loope
push
and
jb
dec
dec
and
sahf
insl
lds
inc
push
and
mov
mov
les
mov
push
out
cmp
xchg
xchg
lock
insb
js
or
call
icebp
pop
div
dec
fidivs
xchg
mov
add
cmpsb
int
dec
lret
dec
pop
mov
push
lods
repz
sbb
sub
or
sub
push
std
lock
dec
sbb
push
scas
adc
cltd
inc
shrl
sbb
fnsave
or
popa
call
mov
sbb
ret
push
or
cmpsl
push
mov
lcall
cmp
xor
aas
sbb
inc
add
xchg
push
pop
aam
sbb
mov
ss
out
cmp
sub
mov
jo
mov
jno
ret
push
scas
cwtl
mov
fcomi
xchg
cld
xchg
and
pop
cmc
inc
inc
pop
test
add
imul
outsl
testl
vminsd
and
cmp
stos
in
mov
mov
jecxz
outsb
incb
xchg
jbe
add
mov
mov
sbb
je
movsl
jl
pop
cs
push
jl
cwtl
shll
std
lds
add
aad
enter
xor
mov
adc
inc
sahf
mov
iret
cld
and
les
jnp
cld
mov
fnclex
leave
pusha
jl
divb
cmp
fwait
sbb
dec
jecxz
jbe
dec
lods
repz
loop
xchg
dec
or
cmp
ja
ljmp
xchg
rcll
and
addl
add
sub
stos
mov
in
rclb
mov
sbb
jp
pusha
sbb
dec
in
enter
pop
sbb
lea
or
xor
int
das
popa
dec
adc
sub
jl
leave
jg
pop
lcall
cmp
fucomp
test
das
das
out
xchg
les
push
inc
xchg
adc
inc
and
adc
imul
mov
push
xchg
leave
fmulp
jno
dec
adc
outsb
sub
cmp
ret
les
out
push
push
xor
mov
adc
or
mov
mov
push
sub
jne
or
sub
jb
ja
js
push
hlt
inc
rcl
aam
push
mov
xchg
leave
call
xlat
push
cmp
add
push
or
enter
sahf
cmp
arpl
jle
icebp
loope
sub
dec
push
aam
mov
cmp
inc
imul
fsubp
ret
jecxz
adc
push
sahf
add
add
jno
push
jo
cltd
sti
rolb
sahf
loopne
les
mull
sub
jne
js
jge
std
mov
add
sub
sarb
imul
js
jnp
adcl
out
cs
or
cld
cwtl
jl
mov
mov
mov
add
xchg
aam
cmp
inc
or
mov
insb
jp
std
enter
jbe
aas
push
jb
jmp
sbb
aam
lods
cmp
xchg
mov
adc
aad
cld
cltd
lea
mov
jne
outsl
outsb
sub
cmpsb
or
inc
fdivs
mov
in
js
push
add
dec
repz
jno
jecxz
mov
stos
fnstcw
ror
and
sbb
insb
lods
mov
in
dec
les
adc
mov
mov
add
sbb
and
test
mov
arpl
hlt
imul
or
mov
loop
push
jmp
pop
mov
pop
loop
and
arpl
icebp
test
add
scas
lcall
shlb
insb
mov
inc
cmp
mov
dec
ss
ds
mov
cltd
fildll
jo
rorb
movsl
jno
jle
aas
inc
pushf
pop
xchg
addb
repz
pusha
dec
pushf
jg
stos
jp
mov
sub
test
jecxz
js
add
test
outsb
mov
xchg
scas
sti
mov
adc
jae
mov
xor
movsl
movsb
xchg
inc
xorb
adc
push
cld
and
clc
mov
add
push
testl
mov
xor
or
pusha
out
shrl
loopne
xor
movsb
mov
or
push
loop
adc
or
mov
outsl
loopne
cmc
or
mov
jb
cmp
cmp
and
or
xchg
or
jae
sbb
mov
test
pop
lret
sub
push
aad
lds
jecxz
ljmp
lea
lods
and
dec
std
out
mov
jns
aas
adc
push
std
sbb
and
sub
out
stos
xchg
in
les
rorl
and
inc
xchg
push
clc
adc
pop
scas
cld
jle
cli
xchg
es
aam
popa
sub
js
repnz
lock
aas
popf
inc
sub
int3
cmp
std
enter
inc
adc
loop
pop
stos
or
popf
jae
enter
movb
inc
mov
popf
ja
inc
mov
sub
leave
or
jmp
push
in
push
cmpsl
jnp
push
dec
jno
sbb
xchg
cmp
push
mov
sbb
pop
dec
psubd
sub
inc
mov
or
roll
mov
bnd
adc
inc
mov
into
xchg
movsl
cwtl
fwait
pop
mov
inc
xor
imul
das
fldl
xor
push
sub
and
cmpsl
outsb
add
adc
adc
ret
or
sti
xchg
fs
jnp
add
int3
cmp
inc
std
jge
add
and
scas
fistpl
test
les
test
xor
lahf
jnp
out
sbb
push
cmp
ljmp
adc
and
out
mov
push
in
adc
mov
addr16
insl
xor
jb
idivl
xor
out
jb
ljmp
jno
shrb
hlt
jo
cltd
data16
scas
cltd
adc
hlt
loope
push
sbb
mov
push
inc
adc
aas
sub
inc
les
cmp
cmpsb
lcall
adc
imul
repnz
call
out
inc
mov
push
jp
rcrb
sbb
push
outsb
out
mov
rol
pop
push
lds
addl
and
imul
and
cmpl
inc
test
lahf
ret
aam
sub
repz
push
adc
adc
lds
push
pop
sbb
xchg
adc
jne
dec
xchg
cli
mov
test
cmp
dec
popf
repnz
cltd
xor
add
xor
push
cmp
loope
mov
cltd
std
inc
dec
sub
push
rcrb
pop
stos
mov
cmc
cmc
stc
out
or
sub
fdiv
out
xor
out
push
lods
jge
cmp
lret
jb
int3
or
orb
sbb
ljmp
pop
pusha
cmp
les
je
push
xchg
xlat
jmp
pushf
addl
loopne
and
out
repz
cmpsl
das
and
sub
test
lcall
xor
stc
push
popa
xchg
sub
das
pop
sub
or
push
sub
pop
in
iret
gs
jmp
ret
fstps
dec
fsubrp
fs
and
pop
mov
shll
repz
adc
cmc
fs
movsl
mov
aam
femms
testb
pop
push
push
and
pop
add
enter
sub
inc
xchg
out
ss
daa
out
xchg
int
movsl
mov
push
mov
dec
push
fwait
negb
jbe
in
ret
inc
xchg
sub
stc
pop
push
and
in
rcl
ds
pop
loopne
psubd
ffree
loopne
sub
mov
inc
mov
into
cmc
adc
cltd
insl
mov
push
fistl
es
and
into
lea
mov
adc
dec
push
add
les
and
sub
repnz
mov
sbb
lcall
stos
mov
add
out
xor
xchg
stos
out
scas
or
in
lcall
cmp
cmp
xchg
cld
iret
das
rol
hlt
sub
aas
andl
add
sub
cmpsl
adc
cmp
dec
xchg
test
mov
or
repnz
cmp
sub
dec
insb
loope
lds
pop
rcl
adc
test
insl
ud0
dec
out
xorb
aam
scas
call
hlt
aaa
sub
hlt
stc
movb
into
jo
inc
mov
lods
addr16
cwtl
push
pop
jbe
jb
jecxz
arpl
mov
cmp
ret
sub
xchg
jp
push
xor
in
jne
incb
xchg
fwait
jg
lds
fs
cmp
mov
mov
nop
xchg
mov
cmp
bound
adc
les
repz
outsb
adc
sbb
pop
shrb
pusha
inc
imull
dec
mov
mov
nop
fimull
mov
dec
mov
js
mov
xchg
push
sahf
pop
mov
mov
inc
dec
pushf
jbe
into
xchg
scas
iret
xor
jbe
and
ret
xchg
push
jge
mov
jp
es
ds
cmpsb
cmc
setb
inc
pop
pop
iret
daa
mov
mov
mov
xor
jo
xchg
cmc
sbb
outsl
xchg
lods
sub
ljmp
int3
jbe
push
inc
pop
dec
test
data16
jp
out
pop
jg
mov
icebp
int
nop
nop
outsl
test
fdivrs
mov
test
pop
stos
push
pop
xor
repnz
fwait
jne
out
mov
pop
dec
int3
cmc
fisttps
adc
movups
addr16
inc
pop
loop
mov
xchg
add
test
faddl
jne
and
and
xchg
rcl
cmp
bound
or
pop
add
dec
xchg
mov
push
xor
cmpsb
dec
ret
adc
cmpsl
pop
adc
fcomps
ds
rcrb
mov
mov
sbb
sub
add
jg
test
ja
jno
jmp
lds
inc
jns
mov
mov
stos
sbbb
mov
mov
cmpsb
mov
jmp
cli
mov
xorb
cmp
dec
or
jmp
pop
jns
test
xchg
clc
sbb
and
lahf
adc
enter
inc
jmp
xchg
ljmp
pop
mov
cmp
lods
or
jo
cltd
dec
xor
outsl
in
mov
ljmp
lahf
mov
imul
mov
jno,pn
jo
add
sbb
repz
sbb
push
cmpl
and
pop
pop
sbb
sub
je
nop
mov
adc
fstpt
pop
loope
fmull
jle
or
and
loope
and
std
lahf
fidivs
lds
es
mov
add
rclb
mov
jne
hlt
xchg
add
pop
mov
fwait
jecxz
sub
imul
ret
mov
shrb
mov
movsb
dec
fdivrs
add
dec
adc
add
divl
arpl
mov
les
pop
rcll
pop
dec
enter
mov
mov
rcrl
int
in
nop
leave
mov
mov
loopne
mov
mov
and
sub
xor
mov
test
dec
lea
fists
lock
sbb
cmpsb
les
jo
add
mov
bound
inc
adc
push
and
out
std
mov
pop
out
sbbb
sbb
cmp
std
mov
pop
jp
xchg
xor
jge
lods
pop
outsl
pop
cmc
inc
movsb
add
loop
mov
enter
arpl
adc
faddl
dec
mov
mov
stc
imulb
mov
push
ja
mov
movsl
dec
out
jb
mov
lods
jle
lcall
and
jne
add
and
es
pop
push
mov
and
xchg
xor
and
pusha
jge
scas
into
adc
lret
or
cmc
lahf
sub
jg
sbb
in
sti
jge
jnp
xor
out
dec
ds
mov
sub
add
and
outsb
pusha
imul
lcall
or
je
cmpsb
mov
mov
xchg
add
jle
fsubrl
push
pop
mov
add
sub
lea
repnz
and
stc
jg
mov
dec
mov
pop
push
ficoml
sbb
ret
mov
cli
popf
and
or
pushf
jbe
jl
ss
rorb
movsl
cmpsl
push
pop
push
pop
cltd
cmp
mov
bsf
imul
dec
and
jae
lods
cmp
fdivrs
mov
dec
jae
ret
mov
ret
mov
pop
or
push
jmp
jmp
pop
leave
cwtl
jecxz
inc
sbb
scas
xor
push
loop
sbb
dec
scas
sbb
xchg
shll
shl
cmp
sbb
inc
cmpsl
mov
cwtl
hlt
and
xchg
or
xchg
xchg
pop
adc
add
sub
scas
aam
xchg
jae
in
jp
rcl
mov
and
stos
lcall
adc
or
loopne
sbb
push
insb
mov
ss
and
cmp
adc
movsl
dec
arpl
xor
test
mov
or
pop
jmp
cld
arpl
and
pop
scas
or
sub
ret
xor
fidivl
rcr
jne
adc
mov
cltd
les
xor
cltd
das
inc
cmp
inc
loopne
and
ds
dec
dec
pop
or
ret
pop
jbe
mov
xchg
addl
and
sbb
bnd
pop
adc
xchg
mov
loop
scas
or
enter
cltd
jle
mov
xor
lods
mov
or
movsl
mov
das
pop
rclb
cli
push
xlat
mov
xchg
adc
dec
or
call
mov
into
sub
hlt
mov
fbstp
out
sub
jo
jmp
arpl
mov
jns
sub
fisttpl
in
ljmp
loope
and
fwait
or
ja
inc
cmpsb
jmp
call
cmpsl
into
or
andl
fstl
sub
jmp
aaa
mov
dec
pop
sbb
sahf
daa
cmp
push
test
adc
jnp
aas
xchg
sub
mov
add
aad
inc
stc
jbe
pop
pop
cmp
filds
dec
mov
dec
add
and
sbb
pop
pop
in
pop
pop
xchg
pop
int
jmp
out
pop
pop
js
xchg
pop
add
outsl
push
jnp
data16
leave
adc
inc
fcoml
and
mov
xchg
sbb
add
jp
addps
ss
in
add
divl
test
mov
outsb
sbb
xchg
add
fstps
testl
outsl
movsl
push
xor
in
lahf
mov
fldcw
push
pop
push
cs
jbe
fnstcw
js
mov
dec
and
fwait
mov
pop
sub
ret
and
cli
fmuls
inc
aas
jae
add
push
cmpb
add
pop
push
inc
sbb
cwtl
fmuls
xor
or
sbb
jecxz
scas
or
xchg
stos
pop
ror
into
fs
pop
mov
adc
sub
jl
pop
mov
sub
data16
jns
cmp
mov
out
fldl
xchg
insb
mov
mov
cmpsb
jge
loop
or
jl
push
xchg
lods
mov
movsl
popa
hlt
mov
pop
and
xchg
dec
test
ret
cmpsb
test
mov
sub
ljmp
cmp
fists
inc
dec
inc
or
xchg
aad
cmp
imul
adc
xchg
xorl
mov
adc
or
inc
lret
outsb
mov
loope
insl
cmp
orl
or
pop
push
arpl
dec
dec
jb
jb
jo
mov
outsl
sub
leave
mov
xlat
mov
mov
aam
int3
test
xchg
iret
movsl
push
ja
shl
cld
out
jl
sub
add
jae
jge
in
lret
mov
jns
loopne
pop
jae
jbe
shrb
mov
sti
lcall
int
dec
cli
movsl
inc
loope
mov
add
sub
rcrl
jbe
mov
pop
rorl
mov
add
add
cli
ret
sub
dec
lret
lock
jmp
pushf
aaa
mov
iret
cmp
stos
enter
dec
invd
stos
sub
xor
ficoms
loopne
or
dec
push
test
bound
jnp
mov
mov
out
push
dec
lret
jg
stos
jl
test
jns
jnp
xor
sahf
and
push
loopne
sub
mov
sbb
jecxz
test
cmpsl
jp
jae
pop
rol
push
pop
jb
test
mov
in
sub
in
in
jbe
idivb
mov
sti
adc
fs
xor
cmp
mov
mov
adc
jno
push
cmp
push
mov
loop
xor
xorb
out
cmp
sbb
add
test
add
lods
js
sub
push
aaa
aad
sbb
jge
mov
js
loopne
xor
add
roll
imul
arpl
imul
mov
push
adc
jp
jmp
jp
test
and
insl
add
movsb
ja
frstor
mov
push
stos
scas
jge
mov
std
addb
loopne
movsl
imul
gs
rcrb
sub
mov
test
movsl
jnp
fisubs
push
sub
push
add
test
sub
ret
divb
mul
ja
repnz
mov
mov
pop
jb
push
and
cmp
aad
into
cmp
scas
adc
mov
out
addr16
fisttpll
xchg
ljmp
inc
fisttps
jno
xor
mov
dec
iret
sbb
jbe
data16
jne
mov
movsl
mov
inc
mov
add
lods
lods
and
cmpsb
push
dec
push
pop
cmpsl
push
sub
push
loop
stos
out
push
mov
cmp
inc
outsb
xchg
pop
push
cmp
add
cmp
movsb
mov
ds
arpl
or
std
lret
je
stc
inc
inc
inc
loope,pt
push
push
cltd
ljmp
lds
xchg
pop
lea
cs
pop
inc
setp
pop
xchg
cmp
push
stos
cmp
mov
pop
std
popf
das
inc
adc
popa
dec
sbb
insl
daa
pop
push
lahf
scas
jne
stos
dec
or
ds
xchg
popf
mov
fmuls
jb
mov
outsl
dec
mov
mov
jo
hlt
jnp
mov
out
or
and
pusha
sub
loopne
xchg
call
mov
inc
int3
gs
dec
sti
out
arpl
into
lock
sahf
addr16
dec
jmp
mov
pop
lcall
call
mov
xchg
push
adc
pop
inc
cwtl
pop
lock
insb
dec
xchg
lret
js
and
aaa
mov
push
xor
inc
mov
outsb
stos
mov
cmc
push
mov
inc
int
int
mov
xchg
jbe
jae
lret
mov
je
cli
mov
rcll
call
lock
pop
lds
lods
mov
scas
or
ja
je
rcrl
jns
pop
insb
sbb
jb
xchg
mov
in
inc
pop
adc
mov
pop
fstpl
mov
xor
mov
ficoml
lock
adc
or
inc
fwait
clc
jl
jmp
popf
les
es
test
push
dec
xchg
sub
dec
xor
lret
cli
pop
aam
cmp
mov
xor
mov
inc
ficoms
out
in
dec
flds
mov
pop
xchg
inc
xchg
sub
negb
loop
add
imul
cmc
push
ljmp
inc
cmc
mov
insl
jo
pop
and
addr16
daa
popf
or
aaa
adc
push
and
push
pop
jae
lret
ljmp
pop
or
loop
test
jecxz
test
mov
rcrl
mov
cs
jmp
sub
xchg
nop
vmovups
pop
nopl
ror
cld
aad
nop
pop
xchg
fildll
shrl
push
cmp
and
fbstp
daa
dec
out
roll
jmp
pop
adc
jnp
nop
sub
rolb
lcall
in
sarl
mov
rclb
icebp
fdivs
insl
insl
arpl
jecxz
outsl
movsl
rorb
or
adc
int3
mov
mov
pop
shl
inc
add
pop
xlat
mov
fmul
out
insl
xchg
imul
call
dec
cmp
inc
sbb
ja
clc
test
shrl
lock
in
cmpsb
in
cmp
mov
xor
jge
mov
and
nop
daa
push
cmp
loop
mov
loop
outsb
dec
icebp
lods
mov
mov
mov
xchg
into
call
insl
xlat
mov
setnp
aad
and
aam
mov
jmp
inc
mov
out
adc
inc
push
sub
ret
mov
jbe
jle
scas
pop
mov
fisubrl
in
outsl
cmp
mov
scas
sub
sbb
dec
lock
loopne
pop
fwait
dec
stos
or
aam
ja
into
cwtl
push
negb
push
push
in
push
xlat
out
daa
out
dec
xor
stc
ss
push
inc
imul
arpl
stc
enter
in
mov
hlt
inc
xchg
jmp
ss
imull
inc
lods
addb
mov
add
jle
sub
test
std
and
sahf
jae
std
xor
and
mov
lods
rol
inc
fisubl
dec
add
xor
pusha
and
and
inc
pop
adc
bound
xchg
jo
lods
cmp
xchg
sbb
cmpsb
mov
or
fidivrl
push
xor
ret
shll
and
push
push
cld
push
test
pop
mov
jmp
adc
xor
mov
mov
in
gs
xchg
push
mov
cmp
and
xor
mov
or
jo
fmuls
fdivrs
or
loopne
es
fs
mov
pop
pop
hlt
enter
adc
cs
inc
in
insl
ret
sbb
adc
push
scas
or
pop
popa
mov
pop
sub
enter
xchg
dec
int3
stos
orl
mov
mov
add
push
or
mov
xchg
sbb
push
pop
mov
ja
pop
stos
sbb
testb
push
fbld
or
inc
popf
mov
popa
fldenv
xorb
inc
addr16
icebp
sub
in
es
mov
icebp
cmpsl
mov
lret
dec
mov
in
cmp
aas
add
sti
push
mov
lea
lahf
ret
push
mov
mov
notb
mov
mov
add
mov
mov
scas
jo
out
loope
push
mov
fsubrp
cmp
jne
aam
pop
sbbl
pop
fcoml
add
shrb
out
adc
sbb
jmp
fwait
jg
orl
add
or
loope
clc
in
cwtl
cld
xchg
fimuls
add
fimull
inc
push
jecxz
jno
inc
inc
pop
pop
nop
inc
pop
scas
arpl
out
decb
inc
stc
mov
les
ret
jne
call
push
adc
add
lock
dec
roll
out
push
xchg
rcl
mov
ret
xchg
roll
out
cld
imul
outsb
pushf
jae
cwtl
jg
cmp
ds
outsb
mov
loop
outsl
pop
xchg
mov
test
xor
add
mov
pop
add
xchg
ds
js
cmp
iret
nop
xchg
ljmp
mov
int
mov
mov
adc
outsb
push
fs
dec
add
mov
dec
pop
pop
push
or
xlat
pop
insb
into
orb
ret
dec
dec
add
popa
fstps
xchg
mov
ljmp
idiv
lcall
or
testb
scas
ja
or
shl
inc
jmp
call
pop
jmp
ret
sub
pop
jp
inc
ljmp
inc
or
or
outsl
int3
pop
sub
dec
xchg
mov
leave
pusha
cmp
js
dec
int3
ja
lret
ret
sti
in
fwait
cmp
ljmp
mov
in
mov
jae
icebp
dec
loopne
popa
pop
pop
shll
lcall
xchg
dec
daa
fsubs
sbb
ret
lods
outsl
mov
inc
jg
mov
add
daa
and
jae
mov
sti
push
dec
into
imul
int3
ss
and
ja
and
ljmp
jmp
mov
cmp
sbb
into
and
xchg
test
icebp
cmp
imul
push
sub
incb
inc
mov
pushl
clc
stc
repz
mov
cmp
sbb
popa
sub
scas
and
jle
loopne
neg
adc
cltd
out
dec
insl
mov
xor
fbstp
adc
xor
fildl
push
fmull
jbe
inc
pop
das
loope
ss
jmp
scas
ds
into
xor
push
test
cli
fwait
lods
pop
xorl
test
andb
xchg
cmp
scas
pop
in
mov
dec
xchg
leave
dec
aas
xchg
or
outsl
out
sbb
jne
shrb
and
xchg
out
rolb
and
push
cmpsl
jl
and
push
pop
pop
repz
out
cld
rcrl
jno
in
rcrb
int3
jecxz
in
add
imul
fsubrl
in
cmp
mov
xchg
mov
loopne
es
and
pop
jo
xor
or
jge
xor
in
jbe
shr
push
in
outsb
je
or
cmp
outsb
ds
hlt
bound
cmc
pop
fisubs
imul
mov
inc
cmpsb
push
pop
hlt
jbe
neg
cmp
or
or
adc
or
out
mov
cmp
ret
or
loop
adc
addr16
mov
cmc
gs
movswl
scas
jne
pop
mov
pop
sbb
sub
xor
mov
and
dec
test
out
clc
dec
scas
sbb
inc
mov
rol
cmp
rcrl
into
dec
push
lahf
jne
jecxz
push
mov
fnstenv
in
jmp
dec
push
leave
sub
les
and
mov
psadbw
icebp
in
and
fstl
pop
int3
fadd
push
jecxz
xor
loope
push
add
jbe
jge
or
sbb
sbb
pop
pop
sub
inc
lahf
leave
push
leave
lds
jmp
add
fisubs
pusha
mov
mov
cli
les
mov
mov
out
pop
mov
daa
loop
arpl
cmc
daa
popa
scas
clc
outsl
mov
fdivrl
sub
out
add
gs
je
xor
xor
dec
mov
data16
mov
gs
dec
sub
test
sub
addb
xchg
push
outsb
sti
sbb
push
ficoml
add
lods
cmpsl
stc
out
aaa
pop
or
insb
dec
dec
pusha
and
mov
pop
and
mov
cwtl
mov
jge
movsb
jg
dec
js
mov
stos
jae
fildl
mov
push
mov
imul
aam
pop
das
adc
xor
adc
xchg
and
hlt
mov
fldenv
jmp
mov
idiv
das
xor
fs
int
loope
aam
xchg
pushf
pop
out
movaps
adc
mov
mov
adc
mov
movsl
pop
cmp
adc
in
mov
stos
test
dec
cmpb
pop
xor
xchg
outsb
push
fwait
sub
in
sbb
jo
and
pop
out
testl
mov
ja
addb
out
addr16
lcall
cltd
xor
nop
xchg
or
inc
mov
rcrb
mov
dec
or
inc
insl
pop
inc
outsl
dec
mov
jle
mov
lods
jle
outsb
xchg
xchg
cmp
pop
cmpsb
rolb
insl
add
dec
mov
mov
mov
xchg
ja
icebp
or
cltd
fucom
imul
cmp
pusha
pop
arpl
test
adc
mov
cs
sbb
out
jno
aam
cli
or
add
pop
xchg
and
ror
or
fwait
inc
adc
mov
cmp
inc
sahf
xchg
sub
push
sub
mov
push
icebp
mov
aas
pop
ds
sbb
fbstp
xchg
jecxz
pop
pop
sbb
push
ja
dec
and
and
sbb
into
xchg
mov
cltd
icebp
rcl
push
pop
pop
lods
adc
sbbb
mov
jge
xchg
mov
adc
faddl
jae
and
call
pop
add
call
inc
fwait
mov
mov
popf
lcall
in
push
adc
js
shlb
aaa
aaa
lods
xchg
insb
sahf
roll
mov
ljmp
add
xor
test
dec
dec
cmp
popf
pop
test
jge
mov
movsl
or
xchg
pop
enter
cmpsl
rcr
movsb
push
insl
dec
cmp
sub
mov
ja
shr
loopne
clc
adc
lods
lret
pusha
in
imul
jp
mov
xor
negl
mov
pop
ja
stos
push
mov
mov
push
lcall
add
push
and
in
cli
fwait
js
arpl
testl
sub
pop
dec
iret
inc
jb
js
jb
andl
dec
out
fnstcw
and
dec
mov
repz
inc
adc
inc
int3
shl
sbb
or
mov
mov
jmp
loopne
addb
jbe
xor
push
pop
push
sub
ljmp
cmpsb
pop
xchg
mov
add
in
imul
mov
mov
lahf
sahf
adc
mov
jns
test
sbb
imul
ja
out
mov
push
fcoms
push
les
pop
dec
and
test
popf
insl
movsl
push
add
mov
mov
jo
shll
push
xchg
scas
addr16
stos
sti
leave
stc
pop
pusha
mov
push
mov
mov
pop
mov
cld
test
cltd
in
inc
xchg
cltd
stc
clc
movsb
popl
and
mov
or
and
cmp
out
sbb
inc
fs
mov
adc
lods
mov
into
xchg
cli
adc
bound
sbb
pop
and
pop
sbb
shrl
pushf
negl
es
rolb
lds
pop
dec
jo
xor
pop
cld
mov
aad
gs
shlb
subb
int3
sub
xchg
js
mov
add
mov
sub
and
and
cld
ficoms
in
movntq
or
nop
test
int
add
push
lds
mov
xor
daa
fld
adc
leave
pop
mov
es
sub
cmpsb
sahf
mov
xchg
mov
pop
imul
mov
xchg
loopne
dec
adc
inc
insb
orl
imul
sub
js
test
incl
imul
dec
stc
mov
jbe
jle
shrb
and
dec
loop
sbbl
push
mov
fadd
dec
mov
pop
enter
mov
push
into
adc
inc
mov
pop
fcomi
lret
sub
arpl
es
push
dec
fists
enter
sti
pop
sarb
xchg
jne
aas
pop
adc
mov
insb
push
in
add
cld
inc
call
cmp
sbb
loope
xor
sbb
mov
ret
in
cltd
sub
xchg
xchg
add
shl
mov
add
subb
loopne
mov
mov
rorb
cmpsl
lea
movsl
jmp
adc
jnp
shrb
ds
push
sbb
pushf
bound
sbb
xor
repz
les
adc
stos
aam
lcall
cs
imul
leave
nop
mov
das
pop
movsb
sbb
xadd
ret
pop
push
sub
sbb
pop
andl
fnstsw
dec
and
movsb
rorb
jg
jge
pop
add
out
bound
ja
sub
mov
syscall
jns
mov
ret
sub
rclb
sub
sub
add
or
mov
jbe
in
sub
stos
pop
lret
pop
cmpsb
jmp
and
stos
pop
jmp
das
pop
call
testl
scas
filds
negb
jne
xor
in
gs
sub
sbb
pushf
sub
mov
dec
pop
hlt
or
aad
push
dec
jecxz
je
jecxz
dec
shll
push
shlb
sbb
aam
sbb
imul
lods
or
mov
or
xchg
sub
push
cmpsb
rcrb
add
sti
outsl
jecxz
sbb
dec
push
and
outsl
mov
out
out
xor
outsl
shrb
inc
push
xchg
cmpsl
sbb
sub
sub
inc
loopne
sahf
mov
sbb
enter
repz
jbe
mov
push
sub
div
testb
arpl
mov
out
push
dec
or
scas
inc
fisttps
pop
mov
cld
and
or
mov
cltd
jge
mov
xchg
or
into
sbb
repnz
jno
lock
dec
xchg
jl
pop
cmp
sub
test
into
fs
cmpsb
jg,pn
sti
or
jbe
jbe
push
mov
test
lea
mov
mov
pusha
cmpsb
xor
or
pop
mov
mov
push
std
sbb
iret
test
push
xchg
mov
or
stc
ljmp
sbb
mov
or
mov
jg
or
bound
inc
ss
xchg
pop
stc
insb
push
popf
cwtl
hlt
rclb
fmuls
leave
mov
mov
mov
pop
insb
inc
movsb
jbe
mov
lock
jge
cmp
mov
insl
in
mov
or
mov
in
mov
paddusw
cltd
inc
scas
lock
cli
inc
push
imul
mov
das
mov
in
cmc
scas
xchg
out
popa
lods
iret
mov
fcompl
fisubs
xor
es
adc
add
pop
lcall
push
push
push
ret
lret
ficoms
or
out
xchg
or
push
js
stos
add
lods
mov
popa
pop
lods
cwtl
cltd
lea
and
push
ja
fs
std
add
push
inc
mov
lds
in
pusha
pop
jne
mov
add
jmp
push
popa
int
mov
mov
sahf
sbb
ffreep
jl
mov
scas
cmp
mov
test
xlat
add
sbb
data16
and
jne
arpl
cmc
lods
out
mov
cmp
ds
dec
sbb
ficoms
pop
sarb
pushf
jge
stc
test
push
mov
sub
mov
fdivl
out
add
lret
xchg
lret
push
lcall
lods
push
mov
cmpsl
sbb
mov
adc
cmp
pop
cmpsb
jmp
cmpsb
cmpsb
movsb
add
hlt
ret
outsl
cs
pop
aad
stc
cmc
outsb
or
gs
outsl
movsb
pop
outsl
jge
leave
push
icebp
je
leave
push
jmp
fcmove
xchg
mov
xor
fimull
shlb
and
xchg
or
xchg
inc
inc
jns
mov
or
test
pusha
ss
negb
cs
xor
xor
ss
shlb
call
mov
insl
aaa
mov
mov
ss
add
mov
aam
scas
mov
jno
bound
mov
cltd
cld
push
dec
cli
xchg
sub
int3
push
mov
fs
push
jecxz
or
xchg
insl
sti
fs
xchg
adc
hlt
movsb
pop
iret
in
aaa
pop
fiadds
fnstenv
jmp
gs
loop
dec
pushf
ss
push
mov
pop
iret
mov
mov
add
inc
popf
mov
jno
js
cmp
adc
adc
lods
add
cmp
mov
test
inc
xchg
das
cld
mov
add
add
rorl
push
ss
xlat
jo
jo
ret
dec
fucomp
roll
sub
lret
mov
daa
shll
mov
sub
cmp
popa
mov
jne
mov
sbb
pop
fdivl
adc
out
and
adc
fcomps
jo
xorb
lcall
mov
repnz
sub
cmc
iret
cltd
jle
js
dec
jp
and
mov
inc
leave
xchg
jb
pop
mov
cs
and
xchg
push
pusha
imul
orb
pop
adc
imul
loopne
cmp
std
bound
scas
dec
cmp
jl
mov
inc
pop
scas
push
cmp
int
in
and
jg
out
xchg
push
xchg
sub
pop
inc
pop
push
jb
xlat
arpl
push
sbbb
add
repz
jo
into
out
cmpb
or
mov
xchg
ja
subl
pop
pushf
push
mov
test
in
push
jp
mov
clc
xor
adc
sahf
xlat
aam
fildll
jg
jge
add
mov
inc
stos
or
mov
test
lods
xchg
enter
cli
jecxz
les
mov
leave
adc
sbb
js
and
sbb
loopne
fucomip
lret
ss
rcrl
cmpsl
push
dec
fnstsw
xor
and
sbb
sti
adcb
sbb
pop
out
das
xchg
jnp
adc
fcomps
js
jnp
aam
xchg
push
xor
enter
sbb
mov
adc
cmp
jp
stc
je
loope,pt
sub
out
push
cmp
in
mov
cld
inc
xchg
rcr
add
les
xchg
or
sub
fwait
jnp
mov
mov
xor
stos
push
or
mov
mov
xorb
mov
lcall
loopne
mov
aaa
sahf
add
mov
repz
fs
jne
cwtl
faddp
enter
repnz
mov
xchg
dec
out
adc
adc
push
loope
nop
stc
les
sub
dec
adc
xchg
push
insb
xor
sbb
shlb
subl
cmpsl
je
adc
daa
add
aad
out
call
loope
data16
pop
or
lods
sub
cwtl
notb
in
scas
cmpsb
sahf
sti
daa
leave
ficompl
dec
test
mov
inc
xchg
or
sahf
enter
push
jbe
adc
lret
add
in
scas
push
and
ja
and
pop
and
out
mov
out
fimuls
sub
dec
pxor
jle
push
scas
lea
jno
mov
and
std
pop
inc
adc
repz
xor
xchg
iret
inc
mov
scas
jbe
jg
imul
dec
lahf
cmpl
pop
arpl
xchg
push
icebp
xor
xchg
in
inc
in
pop
leave
sub
push
mov
insb
rolb
xor
cmp
or
pushf
popa
shlb
ficoml
dec
dec
xor
jg
xor
cmpsl
lods
ja
roll
inc
imul
popa
add
movsb
jp
jmp
jne
cltd
dec
xor
xchg
adc
dec
fs
pushf
adc
imul
popa
push
adc
aaa
out
mov
mov
push
call
xchg
pushf
cltd
xchg
cmp
inc
mov
and
hlt
stc
cmpsl
icebp
fxch
add
lods
stos
lahf
movsl
out
push
imul
scas
mov
je
and
and
mov
xor
add
jbe
xchg
inc
popa
jo
fs
arpl
fwait
adc
lret
cli
out
pop
enter
fucom
ljmp
xchg
inc
mov
iret
into
fnsave
rcr
mov
rclb
lret
ja
divb
mov
leave
lcall
cwtl
mov
cld
push
sbb
mov
add
mov
call
in
add
push
incb
fsubp
popf
xchg
mov
xchg
cmc
sbb
fs
push
js
ret
push
gs
in
mov
fwait
jecxz
dec
jno
ror
sbb
ret
in
cmp
jle,pn
nop
xchg
xchg
lcall
aad
stc
das
xchg
repnz
push
jp
loope
es
adc
jmp
cmp
out
aas
data16
stos
fidivl
mov
test
cmp
scas
incl
fiaddl
xchg
mov
repnz
pushf
pop
div
addr16
or
sbb
and
call
mov
leave
ficomps
insl
dec
ds
ret
jecxz
pop
les
lret
mov
or
jno
int3
fiadds
mov
fs
mov
adc
jbe
arpl
add
xchg
or
in
xor
push
lods
jl
roll
movsl
lret
mov
icebp
cli
insl
dec
xor
add
ja
pop
mov
scas
sbb
lret
repnz
sub
xchg
mov
jecxz
ds
or
data16
outsb
lret
fadds
push
cmpsl
insb
repnz
aam
or
pop
fcmovu
loopne
xor
fs
mov
sbb
shlb
pusha
pop
pop
inc
sti
cmc
sbb
cmpsl
std
xchg
and
std
pop
pushf
lahf
xchg
inc
xor
call
call
xorl
mov
add
push
movsb
sbb
lods
in
xor
mov
sbb
dec
sub
jecxz
mov
es
pushl
frstor
rorl
cmc
pop
and
gs
or
mov
xchg
stc
jp
add
xor
outsb
pop
dec
sti
rcr
push
inc
aam
push
jnp
pop
sub
les
push
mov
repz
xchg
lods
inc
div
bound
pop
and
mov
lods
js
es
jno
cmpsb
lret
cmc
sub
repnz
push
jg
cmpsb
sub
fcmovbe
sar
dec
arpl
test
and
pop
pop
mov
dec
test
jmp
inc
sub
dec
cmpsb
scas
rcrl
fadd
repz
push
div
inc
lahf
pop
pushf
push
push
push
xchg
or
push
mov
jp
cmpsb
push
in
lahf
lret
out
sub
sub
push
mov
testb
xor
add
bound
scas
push
pop
mov
lret
add
sbb
gs
jecxz
jmp
jge
mov
inc
sbb
sbb
xchg
bound
adc
lahf
inc
inc
mov
jno
adc
dec
sub
pop
fld
add
cmp
mov
push
sub
incl
xchg
movsb
inc
int
in
mov
jae
push
bound
shrb
out
les
or
fcoml
or
rclb
jmp
cmpsb
adc
and
mulb
fdivs
mov
add
inc
mov
loope
mov
adc
dec
sbb
sbbl
in
dec
pop
jge
dec
jmp
mov
ja
test
mov
rolb
jl
popa
mov
adc
sahf
loope
push
jmp
int
mov
mov
loopne,pt
xor
hlt
int
jno
shlb
sub
and
rcr
jle
ljmp
filds
into
push
gs
push
or
mov
xchg
dec
mov
and
int3
jae
mov
pop
gs
sbb
dec
fsubs
add
sarl
fistpl
ljmp
repz
or
les
sbb
frstpm(287
sub
in
loop
dec
cwtl
aam
inc
mov
jp
push
xchg
add
cmc
sbb
xor
cltd
mov
xor
mov
mov
mov
sti
movsb
sbb
daa
pop
cli
dec
push
jecxz
push
sub
shrl
fmull
aas
mov
add
movsb
sub
jae
pusha
lods
outsl
adc
or
xor
dec
mov
bound
insl
push
rolb
outsb
jns
sbb
dec
test
pop
push
fbld
dec
scas
jno
jns
sar
mov
pop
movsb
cltd
shll
push
int
icebp
mov
mov
cmc
dec
lock
and
add
test
cmc
pop
or
jmp
fiaddl
jb
fwait
test
ss
xchg
stos
out
rcrb
lcall
mov
scas
mov
ficoms
mov
scas
and
clc
loope
and
cmp
ds
arpl
outsb
rclb
dec
jne
pusha
add
hlt
or
pop
in
add
adc
test
xor
push
jae
push
pop
add
enter
outsl
in
sbb
js
push
pop
inc
xor
icebp
mov
cmp
ljmp
adc
loop
adc
sub
lret
scas
cli
mov
aad
mov
shll
mov
pop
fdivp
and
addr16
in
shrb
aam
data16
mov
cmpsb
add
or
xchg
pop
inc
inc
cltd
pop
data16
cmp
pop
add
inc
sbb
std
sahf
add
cld
repz
stos
xchg
push
xchg
comiss
inc
hlt
mov
sbb
lahf
mov
xchg
sub
push
mov
mov
fwait
mov
in
or
jle
dec
xor
pop
testl
into
decl
daa
sub
das
mov
or
popa
ds
jl
les
outsb
stos
inc
and
jp
xor
lret
sti
test
sub
xor
loopne
data16
cmp
std
pop
add
cld
outsl
mov
xchg
or
movsb
shlb
jno
fucom
roll
scas
cmp
cmp
sub
shlb
sbb
imul
movb
ds
push
jmp
pop
mov
cmovne
lock
sub
cwtl
jno
add
ret
mov
mov
add
in
ss
ret
mov
and
ljmp
inc
ficompl
mov
lods
out
shlb
push
push
cwtl
fsts
mov
popf
sub
popa
xchg
icebp
push
mull
lcall
test
push
adc
xchg
sub
fwait
push
int
mov
xchg
sbb
movsl
in
cld
sbb
cmc
push
inc
mov
sub
andb
or
adc
add
jnp
cmp
sub
push
aam
loope
sub
arpl
and
dec
pop
iret
fcoml
pop
cwtl
outsb
jle
jnp
jmp
ss
mov
sub
pop
pop
lock
inc
roll
cmp
mov
cmp
ss
and
sub
pop
jb
out
test
orb
xchg
cmc
jl
sub
push
jbe
popa
add
mov
jp
fldt
adc
das
cmp
rolb
aad
xchg
pop
sarl
jge
xchg
loop
mov
sub
idiv
dec
xor
or
test
lods
mov
jns
add
cmp
popa
and
mov
test
sub
pop
push
or
pop
xchg
mov
xor
push
xchg
cmp
xchg
sub
in
jns
rol
mov
popf
lds
jb
jbe
push
pop
pop
shl
in
das
mov
pop
sbb
stos
sbb
test
sbb
jp
mov
mov
lock
mov
and
add
xor
cmc
jp
out
cmp
cmpsl
out
or
stc
cmp
add
pop
push
into
xor
cmp
subb
mov
sub
jp
pusha
jg
cltd
cmc
lahf
mov
addb
mov
shrl
insl
fs
and
mov
js
pop
hlt
mov
jo
add
test
push
or
xlat
scas
mov
xor
stc
cld
xor
pop
jo
or
icebp
sbb
mov
xchg
imulb
pushf
mov
mov
cli
cld
cmpsl
dec
xchg
test
xchg
mov
out
or
xchg
mov
fdivs
stc
cltd
out
or
xorb
repz
jb
in
sarb
or
mov
add
fnstenv
in
lods
dec
xlat
out
ret
pop
ss
aas
imul
xor
aas
sti
add
test
test
sarl
jl
popa
xor
sldt
dec
fsub
and
jecxz
in
loope,pn
lea
mov
xor
repnz
mov
mov
scas
lret
outsb
popa
ds
dec
sub
popa
jg
cmpsb
testb
and
mov
jno
insl
push
sub
adc
dec
lods
dec
roll
pop
mov
repz
mov
test
jl
xor
jmp
cmp
or
mov
xor
das
xorl
std
dec
stos
loop
or
inc
into
das
mov
scas
and
mov
cmp
pop
dec
rcrb
and
jbe
test
inc
adc
hlt
adc
xchg
iret
lcall
movsb
jecxz
pop
xchg
mov
hlt
mov
push
sub
call
xchg
xchg
ljmp
xchg
and
xchg
decl
in
inc
push
xor
jecxz
sahf
mov
push
fistpll
cmpsl
jge
stos
sbb
and
cmp
test
arpl
jns
xchg
out
pop
leave
push
cli
push
rcl
fcmovnb
xchg
push
xchg
fistpll
repz
jbe
cmc
sub
pop
mov
pop
dec
adcb
xor
sub
sahf
mov
push
adc
inc
lds
mov
popa
icebp
sbb
inc
xchg
xchg
lods
mov
jmp
mov
clc
iret
stos
mov
ret
inc
sbb
scas
xchg
xor
add
imul
ds
sbb
leave
je
xlat
pop
sub
adc
inc
cmp
cmp
aam
loop
mov
push
stos
inc
movsl
stos
mov
or
negl
int3
stos
or
shrb
pop
mov
sub
push
je
inc
imulb
pop
jge
ja
xchg
arpl
je
xchg
test
xchg
dec
rcrl
cli
push
pop
dec
xlat
xor
push
and
rolb
mov
gs
mov
xchg
pop
into
and
ret
lods
sub
add
addb
xor
jns
jmp
jl
loop
fadds
fnstenv
in
lret
jne
lahf
mov
gs
shrl
popf
daa
push
loop
or
push
mov
adc
pop
mov
mov
clc
dec
inc
into
xor
nop
push
andb
or
mov
adc
mov
jb
push
and
daa
mov
iret
push
imul
or
loope
jmp
subl
cs
cmpsb
add
repz
lods
or
cli
jecxz
mov
mov
mov
jmp
mov
lods
mov
es
mov
stos
adc
mov
jp
idivl
push
pop
push
scas
fbstp
insb
jne
xor
sbb
cwtl
test
pusha
es
shrb
inc
stc
cld
stos
mov
imul
stos
leave
jns
outsl
dec
pop
cmp
cld
add
add
pandn
mov
ss
popa
sub
xchg
int3
notl
mov
cs
adc
mov
xchg
xchg
sbb
cmp
cmp
imul
ss
jbe
xor
mov
outsb
in
xchg
pushf
imul
xor
mov
inc
fimuls
inc
add
and
adc
and
loop
mov
inc
std
jbe
push
in
les
out
xchg
cltd
testl
into
jno
xchg
test
lret
push
dec
loopne
in
pop
cmpsb
in
iret
push
lds
dec
dec
mov
xchg
cmp
sbb
mov
aam
cmp
mov
sti
mov
push
outsb
xchg
sarb
sub
add
add
icebp
or
and
xor
in
in
mull
inc
mov
or
mov
mov
sbb
adc
test
mov
mov
cld
or
fucomp
push
out
sti
jecxz
in
andb
mov
imul
addr16
dec
cmc
cmp
inc
ficoms
push
cmp
cmp
sti
gs
pop
scas
enter
fwait
jg
jne
das
mov
push
clc
arpl
fidivl
cltd
xor
push
adcl
hlt
mov
mov
iret
popf
sub
push
push
subl
jo
std
mov
mov
inc
iret
lods
and
adc
les
pop
in
xor
daa
cmc
mov
fiadds
push
push
pop
and
mov
daa
les
jmp
daa
inc
int
out
jp
cld
jbe
add
mov
jae
pop
stos
int
sbb
inc
or
cmp
mov
dec
mov
and
inc
sbb
mov
mov
outsb
xor
gs
cmpsl
stc
or
scas
cli
jne
jg
rcll
mov
inc
mov
imul
cwtl
mov
popa
pop
cmp
sbb
add
sub
mov
out
add
sar
mov
call
jmp
xor
imul
shll
dec
ds
inc
add
sti
dec
adc
repz
xchg
iret
jno
idivl
movsl
adc
insl
jmp
mov
ja
stos
mov
jge
mov
and
gs
mov
out
nop
and
sub
rdtsc
mov
js
mov
scas
addr16
mov
pop
js
out
sbb
dec
push
mov
cmpsb
int
inc
sub
popf
sbb
mov
jp
fwait
das
cli
and
into
pop
xchg
shrl
icebp
sub
inc
xor
sub
push
mov
fidivrs
addr16
fcoml
adc
stos
mov
xchg
jnp
mov
fnstenv
lds
mov
sbb
sub
mov
lea
insb
hlt
xor
ret
add
lock
les
nop
lock
sbb
ret
and
enter
push
fidivl
dec
mov
push
pop
lock
out
jecxz
sub
add
mov
sbb
cmpsl
push
sbb
jo
outsl
fmuls
xchg
rcr
cmp
daa
sub
pushw
add
jno
js
test
mov
cld
sbb
jnp
dec
cs
push
xchg
cmc
jne
rdmsr
gs
push
imul
iret
inc
xchg
mov
popa
adc
mov
sti
add
adc
es
mov
push
loop
sub
arpl
into
test
jae
rcrb
xor
cmp
lods
sbb
int3
ffreep
adc
mov
sbb
mov
cld
sub
mov
add
mov
and
out
and
inc
out
aad
js
mov
push
arpl
fucomip
dec
cwtl
sti
lahf
int3
enter
int3
fildll
lret
ret
scas
inc
out
xchg
test
cmc
sub
mov
inc
add
and
jbe
rorl
stos
ljmp
push
jno
sbb
fs
lahf
xchg
cmp
mov
scas
popf
pop
into
and
dec
pop
stos
test
cli
cmp
int
lret
bound
dec
in
jne
xorb
add
sub
in
rcrl
sub
pop
pop
cmp
adc
inc
cld
scas
xchg
out
mov
xchg
mov
push
cltd
and
inc
outsl
fdiv
and
cli
mov
mov
test
add
and
ja
lcall
xchg
shll
enter
push
xchg
mov
xlat
jbe
jl
cmp
xchg
hlt
aam
adc
cs
in
rcr
out
test
outsl
sub
xor
xor
dec
sub
xchg
inc
xchg
mov
xor
jg
enter
sub
push
cpuid
fcmovnbe
fstl
cld
sub
pop
insb
int3
adc
cs
into
add
aaa
enter
jmp
adc
or
loope
and
mov
imul
cmp
jno
xchg
add
fidivrs
mov
inc
clc
or
or
sahf
cli
lret
mov
push
sbbb
int3
xor
hlt
lds
xor
xchg
hlt
sbb
adc
imul
pop
lret
mov
fs
scas
and
push
pop
cmpl
inc
jb
outsl
mov
lea
sub
dec
add
dec
push
add
sbb
mov
clc
in
or
cmp
mov
sahf
mov
jbe
push
nop
insl
je
je
mov
push
aad
popf
cmp
mov
std
push
lock
mov
iret
cs
mov
in
bound
add
mov
pusha
iret
ficoms
es
ficompl
shll
call
sarb
scas
in
ret
sub
inc
and
lods
int
cmp
jno
push
repz
out
inc
xchg
mov
into
out
cld
mov
lds
xchg
mov
inc
test
sbb
push
cmp
out
jle
inc
shl
inc
adc
lahf
fiaddl
dec
out
xchg
nop
orb
xor
adc
push
mov
adc
sarl
adc
mov
jge
mov
fsubrs
shll
jbe
scas
rcr
sahf
je
roll
xchg
in
imulb
mov
jns
movzbl
mov
mov
popf
or
push
sarl
jl
test
mov
repz
fnstcw
inc
inc
push
xlat
sub
mov
and
xor
adc
fiaddl
xor
cmp
sbb
adc
aas
push
mov
sub
adc
stos
adc
lods
arpl
and
pop
inc
movsl
pushf
xchg
and
lret
in
dec
cwtl
js
or
cwtl
lret
out
push
and
lret
scas
mov
shll
stc
push
jae
pop
sbb
fldcw
xor
jae
sub
scas
idivb
pop
ficomps
loop
and
pop
pop
and
mov
push
test
leave
stc
popf
scas
cmpsl
loop
call
xchg
sahf
xlat
out
add
sub
jnp
lods
sti
mov
int3
push
sub
lahf
es
inc
push
ficoml
stos
inc
pop
xor
push
outsb
cmp
pop
jne
pusha
add
cmpsb
jl
ret
paddb
push
inc
add
or
mov
push
aad
jae
hlt
iret
inc
xchg
sbb
popa
in
rcrl
push
push
adc
mov
repnz
ror
pop
mov
out
jb
lock
push
nop
ljmp
mov
push
mov
xchg
scas
mov
push
jo
mulb
andl
aad
aas
push
addb
mov
nop
xchg
adc
int
xchg
ficompl
lret
mov
cmp
sub
push
pop
jp
mov
mov
xchg
mov
mov
sub
jg
shrb
iret
jns
lods
loopne
std
shr
js
sbb
xchg
adc
lcall
js
push
pop
fldenv
call
sub
ss
movsl
and
imul
clc
jg
push
xchg
inc
dec
adc
mov
movsl
jno
cmp
aaa
lock
je
dec
add
mov
xchg
xor
je
shrb
gs
jb
das
mov
fwait
es
inc
in
push
out
idivl
cmp
movsb
aam
sub
pop
out
push
lods
cmpsl
insb
stos
xchg
dec
jb
int3
push
pop
pusha
call
jnp
cltd
es
int3
push
mov
push
idivb
xchg
mov
mov
jo
and
lods
add
cmpsb
jl
sbb
push
fsubrp
add
add
in
aaa
lods
insb
push
push
shl
les
sbb
sub
iret
lcall
push
pop
xchg
mov
and
pushaw
xchg
xchg
repz
repz
mov
inc
sbb
fbld
dec
pop
outsb
shlb
mov
shlb
and
repnz
add
add
inc
fidivrs
add
dec
xor
sbb
ljmp
xchg
mov
sub
sbb
or
or
leave
jle
or
icebp
adc
lret
stc
fistpll
sbbl
ret
fnstcw
sbb
popa
orl
lea
mov
test
dec
mov
int
jge
dec
cmc
pop
ret
pop
jl
xor
aam
cmpl
pop
subl
sub
push
lret
inc
inc
insb
idivl
jo
pop
sub
pop
pop
sbb
mov
dec
stos
and
jnp
sub
cli
adc
sub
push
pop
inc
xchg
pop
xchg
es
mov
jo
mov
int
xor
mov
divps
inc
js
mov
cvttps2pi
enter
pop
xor
push
je
xchg
outsl
push
repz
pop
clc
mov
sbb
int
ljmp
and
jl
sub
aad
cwtl
dec
movsb
sub
pop
call
mov
mov
mov
add
and
mov
inc
jnp
pop
inc
xchg
leave
test
xchg
ficomps
lods
fists
mov
int3
push
dec
sbb
pop
icebp
xchg
mov
adc
adc
or
cld
aad
repnz
add
xchg
xor
mov
push
lret
repnz
out
jbe,pt
or
xor
cwtl
sub
xor
aam
mov
cmp
in
mov
cmpb
movsb
inc
and
cli
mov
ja
add
mov
hlt
repnz
popa
arpl
adc
mov
clc
jne
jp
aam
std
dec
pop
clc
xchg
or
stos
incl
cld
jecxz
incb
mov
out
add
out
iret
pop
lret
insl
jbe
or
mov
dec
shll
sbb
loopne
sbb
xchg
call
inc
xor
inc
aas
jmp
bound
adc
cltd
inc
xchg
fnstenv
lahf
push
xchg
xchg
sub
mov
js
xchg
jne
jge
and
adc
orb
xor
mov
pop
in
insl
sub
pop
out
aam
adc
mov
das
inc
pop
jl
cs
int3
jmp
cld
xor
add
imulb
in
jae
pop
push
and
js
xor
sub
inc
sub
out
or
jecxz
add
and
ds
fs
adc
and
out
push
mov
sbb
inc
mov
into
cmp
mov
imul
sarb
das
xor
leave
dec
lock
pop
mov
and
adc
in
ret
mov
bound
outsb
outsb
or
ficompl
sbb
dec
rcrb
mov
inc
jbe
mov
data16
test
adc
sbb
lock
xchg
mov
pop
mov
stc
adc
shll
int
icebp
mov
leave
repnz
sbb
or
jne
test
cmp
aaa
jbe
pop
stc
xchg
adc
xor
jmp
ja
out
adcb
pop
xorb
add
jns
inc
sarl
stc
lret
clc
sub
fnstenv
xchg
push
xchg
std
sti
stc
cmp
shrl
cmpsb
pop
pop
lods
shl
xor
xchg
repnz
fcompl
sbb
adc
mov
popl
sub
fcomip
xchg
sbb
iret
sbbb
jg
pop
cmpsb
xor
or
lret
pop
pop
push
adc
fnstsw
cmp
jmp
outsl
mov
push
dec
xor
or
inc
dec
pop
jo
lods
add
jo
repz
pop
es
adc
or
adc
pop
stos
mov
cmp
clc
imull
rcrl
imul
in
mov
scas
push
push
cmp
push
lahf
jge
repnz
ss
cmp
inc
and
xchg
push
push
notb
sti
ret
out
int
cwtl
mov
mov
rolb
mov
in
jecxz
inc
jmp
jb
les
aaa
adc
push
xchg
outsl
adc
fdivrs
xor
mov
cwtl
add
icebp
ja
mov
push
mov
mov
xchg
jl
scas
loop
sub
dec
cmp
outsl
mov
sar
hlt
push
incb
pop
pop
out
movsl
and
andb
cmpb
jns
fcomps
rclb
popf
les
in
and
inc
push
xlat
in
imul
aam
sub
xor
vfrczps
or
lds
lods
add
mov
aas
daa
xor
popf
xor
dec
icebp
xor
mov
arpl
sub
xchg
mov
outsl
imul
pushf
ss
loope
adc
push
adc
stos
pushf
std
out
ljmp
test
movsb
inc
aaa
divb
cmp
std
loope
sub
scas
arpl
inc
clc
cwtl
pop
xchg
lret
or
test
in
mov
cmp
repnz
xchg
fcmovnb
scas
jl
ss
ljmp
mov
test
or
adc
out
ljmp
cld
mov
jg
fsubrl
sbbb
fcmovnbe
dec
push
dec
pop
push
mov
jecxz
cmp
jne
nop
mov
push
rcl
xchg
mov
fldcw
pop
push
jo
imul
pop
fisubs
arpl
out
ret
sbb
out
lock
mov
test
es
push
xor
adc
fimuls
rorl
and
cmp
fldt
pop
push
jp
not
ret
jb
dec
cmpsl
pop
mull
xor
aas
enter
jo
mov
and
cmp
mov
stos
ljmp
sbb
scas
je
call
xor
mov
mov
jns
or
into
mov
dec
adc
or
cs
negl
xor
loope
push
ss
add
jnp
sub
cwtl
jp
cli
imul
sti
loop
inc
loopne
dec
jmp
mov
test
mov
and
insl
fs
test
pop
rcrb
movsl
cmp
xchg
pop
or
xchg
lea
push
sbb
mov
sti
mov
scas
loope
inc
fcompl
andb
out
and
loopne
jae
mov
fmuls
dec
mov
adc
cmpsl
add
pop
add
sub
movsb
mov
mov
sti
outsb
mov
imul
sub
xor
sbb
push
mov
jnp
add
out
push
jbe
dec
lods
inc
out
push
ret
mov
ljmp
pop
dec
and
and
rcr
loop
xor
or
in
shlb
mov
cmp
jmp
idivl
xchg
fcom
subl
inc
mov
and
and
mov
mov
xchg
adc
nop
cmp
and
cmp
add
aam
popw
test
sub
jo
add
ret
mov
or
lret
cld
xchg
xor
mov
mov
cmc
dec
lock
fdivs
insb
repz
xchg
scas
dec
cli
mov
inc
pop
cmp
insb
mov
in
cld
test
push
dec
orl
mov
insb
xor
sti
and
mov
sub
vhaddpd
sub
lea
mov
lds
push
inc
in
es
js
daa
push
xchg
cmpsl
inc
fprem1
push
cltd
xchg
or
in
das
jns
push
sahf
jno
nop
mov
cmp
or
icebp
xlat
fwait
jg
sbb
repnz
cmp
cmp
sbb
xchg
xchg
push
adc
outsb
xor
or
bndstx
mov
stc
call
filds
in
jne
out
mov
dec
cmp
or
inc
xchg
add
nop
test
xchg
das
imul
push
cli
dec
xchg
cmc
fistps
popf
fucomip
ficoml
lea
fwait
loope
test
fs
add
jno
xor
xlat
fildl
sarl
or
inc
sbb
pushl
aas
lock
sub
and
mov
push
ja
xor
mov
cs
push
movzbl
and
cmp
dec
inc
dec
mov
popf
imul
call
popa
cli
inc
jns
adc
xor
pop
daa
cmpb
dec
mov
cmp
cmp
inc
sbb
in
test
jns
cwtl
daa
shrb
sub
sti
movsb
aaa
fimuls
das
lea
mov
adcb
and
rclb
repnz
xor
ds
out
out
jae
and
push
fmul
and
out
in
or
dec
mov
and
inc
push
popa
jg
dec
push
xor
pop
cmpsb
lret
icebp
xchg
xor
cmp
xor
mov
popf
repnz
mov
negb
std
pushf
lock
pop
int3
cmp
faddl
clc
push
icebp
mov
iret
cmpsb
aad
inc
pusha
sar
mov
xchg
mov
inc
cmp
divl
push
faddl
pop
sti
cmp
sub
cmpsl
daa
lcall
inc
out
mov
movsb
pop
cmp
push
subb
mov
insb
push
into
cmp
push
fisttpl
iret
pop
sub
insl
jbe
data16
outsb
mov
pushl
jmp
inc
mov
andl
push
sbb
inc
divb
bound
daa
fnstcw
paddd
jbe
seto
cmp
xor
ffreep
stos
enter
out
mov
jp
pop
pause
inc
pop
insl
imul
ja
pop
pop
outsb
ss
mov
out
test
movsb
stc
sbb
dec
adc
cmp
cwtl
dec
push
sub
out
cmp
pop
push
insb
inc
cs
negl
mov
jecxz
gs
stc
jecxz
lds
arpl
lods
mov
or
lea
cmp
pop
popaw
jo
stc
mov
insl
scas
fisttpll
icebp
adcl
xor
shll
call
xlat
adc
stos
mov
or
movsl
ja
sahf
lcall
push
ficoms
push
push
stc
shll
or
shrb
adc
sbb
lret
ret
xchg
sub
int3
enter
ljmp
mov
filds
xor
lock
rclb
cli
stos
int3
sahf
sub
mulb
shlb
iret
out
shlb
pop
imul
rcr
sbb
mov
sbb
mulb
adc
loope
xchg
jge
xchg
popf
iret
bound
dec
inc
jbe
cmp
stos
adc
push
cmpsb
cmp
mov
pushf
mov
testb
lahf
fdivr
mov
add
fidivl
fistpll
imul
and
or
fmul
addl
push
mov
ret
cmp
push
sbb
lods
ret
push
push
sbb
enter
cmp
push
inc
les
psrlw
mov
add
sbbl
xchg
xchg
jb
outsb
sub
lahf
jae
ret
xchg
nop
inc
scas
popf
daa
ficompl
imul
mov
xchg
push
ja
mov
dec
int3
data16
push
push
in
pop
adc
sub
movsl
movsl
push
ss
out
mov
or
cmp
or
xchg
shl
dec
adc
aaa
mov
subb
pop
lcall
dec
push
sti
add
aad
adc
dec
outsl
popa
ljmp
pushf
enter
aad
shlb
cmp
mov
mov
hlt
mov
stos
xchg
mov
mov
mov
or
mov
xchg
lcall
xchg
pusha
jmp
dec
mov
sbb
es
xor
test
push
addl
xlat
jp
xchg
push
push
popa
dec
and
lds
fucom
cld
mov
jo
into
push
fxch
dec
loope
and
xor
cmpsl
cmpsl
fidivrs
data16
push
mov
xor
push
jnp
push
icebp
jge
testl
pop
jle
lahf
sbb
filds
lods
sbb
push
mov
jl
shl
movsb
flds
lcall
mov
pop
int3
scas
shlb
insl
cmp
movsl
pop
ss
adc
push
pop
shrb
leave
lahf
inc
add
pop
loop
int3
or
fsubs
insb
mov
xor
jg
adc
sub
mov
bound
or
push
iret
inc
inc
lds
mulb
int
das
shl
ret
xor
loop
xchg
testb
add
movsl
lock
js
jno
in
push
lret
rcll
jns
inc
inc
sub
push
fpatan
mov
and
mov
mov
mov
mov
mov
mov
pop
lods
ret
stos
stos
mov
add
es
nop
shrl
xchg
lcall
lahf
insb
in
and
push
nop
shll
jg
fildll
cli
cmc
lods
jne
dec
dec
and
pop
scas
dec
or
rcrb
inc
add
xchg
mov
xor
ja
sbb
loop
outsl
clc
push
pop
testl
hlt
dec
xor
jo
and
bnd
and
fadds
ret
pop
xchg
jo
mov
xchg
fisttpl
leave
lea
or
mov
aas
ret
sub
test
jmp
dec
loopne
loopne
dec
pop
xchg
pusha
add
mov
fisubrs
xor
or
gs
popl
push
movsb
movsb
lcall
int3
mov
loope
mov
pop
jns
in
cmp
and
mov
pusha
mov
cs
sbb
jl
jo
inc
sub
and
xor
rorb
pop
cli
lods
popf
xchg
iret
mov
fnstenv
out
scas
decb
test
adc
jle
jmp
jbe
ret
decl
sbb
add
sahf
and
mov
mov
xchg
push
xchg
mov
ror
fldt
int
icebp
pop
cmp
imul
push
pop
mov
jg
es
sbb
xor
xor
pop
pushf
das
push
sbb
and
jl
inc
or
gs
xchg
aad
add
adc
push
inc
mov
fisubrl
push
inc
push
xor
aas
pusha
bound
xchg
lods
mov
xor
push
xchg
sub
repz
das
loop
or
into
xor
into
add
das
jg
cltd
mov
movsb
adc
orb
jb
mov
pop
mov
adc
dec
lret
ljmp
andb
add
fstpl
or
and
je
data16
repz
mov
sbb
dec
fistl
jo
cmc
push
mov
lret
sub
out
insl
lods
xchg
pop
and
push
addr16
subb
mov
in
jb
lret
popa
out
outsl
mov
cmp
fcomp
jp
cmp
icebp
scas
cli
and
jne
pop
cwtl
cli
imul
xchg
stc
fcompl
and
in
pop
push
cmp
rolb
mov
in
add
cltd
lds
jle
cwtl
and
jmp
inc
dec
int3
add
rolb
ret
addr16
ja
push
stc
push
pop
xchg
imul
adc
enter
and
subl
cltd
and
or
or
das
mov
call
shlb
adc
fucomip
lcall
inc
cmp
clc
xor
sbb
lahf
jo
xor
test
push
push
push
push
sub
push
mov
xchg
pop
jbe
and
lods
pextrw
sub
inc
pop
lea
ret
lret
movsb
mov
inc
sahf
cmp
iret
out
xchg
jle
std
jl
daa
fs
out
fildll
mov
or
fxch
dec
ficoml
mov
addb
dec
arpl
pop
inc
rcrl
lahf
push
jnp
and
push
fxch
add
out
xchg
vsubpd
test
js
add
cmp
push
out
fwait
adc
movsl
mov
cltd
pop
shll
add
jmp
clc
sbb
pop
cmp
jle,pn
iret
mov
fldcw
test
sbb
pop
fists
sahf
pop
shlb
lea
sub
dec
imul
cmpb
fwait
jno
ljmp
xchg
pop
pusha
leave
pop
js
icebp
data16
push
xchg
addl
lods
es
dec
mov
adc
sbb
repnz
xchg
jg
lods
pop
fwait
push
mov
ds
jnp
int3
mov
mov
sahf
notb
popf
nop
mov
inc
out
outsb
xchg
sbb
into
imul
call
into
movsl
lds
repnz
xchg
sub
sbb
outsb
and
pushf
std
imul
pop
ret
push
inc
pop
or
add
out
cmp
add
ljmp
mov
out
icebp
into
push
cmp
jp
jno
outsb
mov
add
mov
jb
xchg
add
mov
js
xor
and
stos
icebp
arpl
lods
das
pavgw
or
outsb
dec
insl
inc
jo
jae
xchg
mov
stc
test
xor
push
loope
mov
xor
inc
mov
inc
ret
pop
xchg
in
idivl
push
cli
sub
jg
aad
insl
pusha
push
popf
mov
pushf
adc
sbb
dec
ljmp
mov
sbb
test
daa
fiadds
adc
jno
out
inc
mov
stos
jnp
les
mov
jo
mov
cmpsb
inc
and
pop
js,pn
jno
adc
sub
ret
cmp
clc
test
clc
les
push
sbb
and
iret
stos
jnp
push
mov
fwait
push
mov
xchg
mov
cli
loopne
or
pushf
jnp
push
pusha
daa
inc
pop
or
data16
mov
xchg
mov
js
push
xchg
jnp
mov
cmp
je
call
fistps
xchg
hlt
imul
sub
mov
popf
push
fisubs
shrl
iret
divl
repz
cmp
pop
xchg
loope
push
pusha
xor
imul
or
dec
cld
push
jns
inc
add
rcl
gs
roll
cmp
cmp
loop
jae
inc
jecxz
jg
push
mov
xor
cmpsl
inc
dec
repz
pop
push
xchg
lahf
leave
add
push
roll
pop
xor
test
in
fcomps
outsb
jp
loop
hlt
push
movsb
push
push
inc
jp
rcrb
and
mov
mov
xor
sahf
mov
cmp
fistps
sbb
mov
jae
mov
add
int3
push
clc
mov
adc
push
or
inc
mov
fstpl
insb
stos
and
push
add
js
fwait
call
or
pop
arpl
adc
jmp
divb
xchg
jb
sub
out
inc
pop
out
and
pop
pop
nop
aaa
lds
lret
mov
dec
push
es
or
repz
ffreep
xchg
dec
dec
test
movsl
xchg
xchg
out
pop
inc
mov
outsl
ja
stos
aaa
cwtl
sbb
sbb
testb
push
outsl
addr16
roll
mov
pop
mov
xchg
xchg
aaa
shl
and
leave
push
aam
gs
cmpsb
movsl
sbb
push
subl
dec
push
insb
jns
mov
dec
in
bound
ficoms
inc
sarb
sarb
xor
push
adc
addl
sbb
push
sub
fldenv
int
enter
or
push
out
or
sti
dec
pushf
dec
dec
push
cwtl
in
ret
and
pop
mov
stos
inc
cmpsl
mov
mov
mov
std
xor
sbb
mov
les
inc
adc
ljmp
arpl
mov
push
fsubrs
ret
mull
mov
cmpsl
not
lcall
jbe
adc
mov
loopne
xchg
push
popf
andl
mov
movsl
leave
sbb
mov
leave
mov
out
push
cwtl
add
scas
cs
mov
loopne
push
cmp
push
pop
or
popa
mov
fs
xchg
and
fldenv
xor
add
and
mov
arpl
inc
nop
pop
mov
scas
in
or
or
lret
mov
and
sarl
xlat
cmpsb
push
pushf
mov
jnp
mov
push
mov
pop
or
xchg
f2xm1
pushl
fdivrs
shrb
cli
or
mov
clc
adc
sub
adc
inc
loopne
sbb
sbb
ficomps
mov
inc
inc
test
xchg
out
testl
xchg
bound
data16
bound
cmp
xor
mov
psubsb
insl
dec
xlat
dec
repnz
pop
add
xchg
dec
jle
mov
add
lea
xor
dec
xor
sub
pop
mov
out
cmpsl
or
data16
mov
jno
xor
add
inc
or
repz
xor
movsb
out
mov
ror
cmpsb
or
xchg
push
lret
lret
popf
xchg
shrb
aam
or
in
xchg
mov
movsl
jns
xor
sahf
xor
lds
cmp
xor
xor
jmp
push
lret
sbb
je
push
inc
das
sbb
and
add
xchg
and
fyl2xp1
ror
ret
pop
mov
mov
in
push
xor
push
mov
out
and
ljmp
rolb
adc
cmc
popf
cli
pop
pop
cmc
inc
mov
inc
sub
pop
sbb
or
mov
mov
cmc
rcrl
aam
push
push
outsb
sbbl
mov
mov
hlt
outsl
outsl
jns
mov
sub
pop
add
in
mov
outsb
jns
pop
dec
and
shl
sbb
adcb
cmp
pop
js
and
sahf
fmuls
aaa
rorb
xchg
sbb
mov
inc
loopne
imul
mov
push
mov
xchg
into
bnd
flds
adc
cmp
sub
bound
add
mov
leave
pop
sub
jmp
pop
aam
mov
mov
lods
sete
test
fwait
adc
fdivs
loop
add
and
jmp
jmp
les
pop
repnz
add
test
shlb
arpl
jp
test
negb
and
in
aas
sub
pop
sub
imulb
notl
pop
ljmp
scas
pop
inc
loopne
mov
jl
xlat
movsb
sti
jmp
add
xchg
in
mov
and
cwtl
jecxz
daa
in
std
add
add
ss
mov
outsl
inc
out
pop
jl
sub
aas
pop
dec
mov
jmp
and
mov
ret
pop
xor
or
and
add
hlt
inc
fs
test
out
lock
jmp
pop
enter
xor
sti
or
mov
add
fld
out
insl
stc
jbe
xchg
cmp
mov
in
cltd
pop
outsl
dec
xchg
adc
jl
sbb
clc
pushf
in
ret
xor
out
loopne
jb
mov
add
testl
pop
sar
adc
mov
sahf
jbe
mov
fimull
mov
xlat
scas
jbe
cmp
leave
xchg
neg
outsb
cmp
imul
pop
inc
dec
out
ljmp
clc
mov
leave
mov
int
pop
push
sub
notl
push
cli
pusha
test
jns,pt
sbb
bound
stos
je
inc
icebp
mov
pop
adc
jbe
sti
pop
cmp
je
lahf
and
popa
xor
add
sub
xchg
jne
or
fidivs
push
js
or
xor
fdivrs
add
or
push
mov
out
movsb
mov
inc
or
data16
push
sub
pop
pop
cli
sbb
mov
call
sub
test
and
jne
or
jle
mov
test
sub
mov
mov
ja
mov
xor
rcrb
pop
js
pop
sbb
sub
mov
mov
stos
repz
ljmp
sbb
data16
jp
mov
jbe
xchg
pusha
std
add
sub
test
dec
call
sbb
mov
push
push
shlb
outsb
cmc
push
xor
and
aaa
pop
push
and
mov
sbb
enter
popf
cmp
imul
sub
inc
xor
xchg
push
mov
int
inc
bound
sub
inc
xor
cmp
mov
cmc
int3
sarl
and
fdivrs
ret
cmp
aaa
cmpsb
mov
and
cmpsb
push
std
ljmp
mov
jno
clc
loope
xor
gs
shrb
adcl
leave
pop
pop
sbb
cwtl
push
push
mov
adc
int3
dec
out
adc
push
dec
and
cmp
inc
shl
cmpsb
lret
jnp
xor
add
dec
adcl
push
jns
mov
enter
int3
fcoms
cmp
cltd
jg
aad
lret
mov
dec
jle
sbb
push
fdivl
mov
nop
lods
icebp
fwait
sahf
adc
lret
repnz
jns
sahf
pop
icebp
pop
and
mov
jno
aas
cli
add
or
popf
test
sub
sbb
push
or
je
or
mov
xchg
pop
shrb
outsb
les
or
sbb
or
pop
xchg
mov
jmp
and
ja
out
mov
mov
jo
ret
push
insb
ret
insl
cmp
ret
mov
into
and
test
leave
xor
outsl
adc
jo
xchg
inc
xchg
xor
sbb
mov
subb
sbb
movsl
out
in
and
js
insl
and
addr16
cltd
xor
pop
and
add
mov
cmp
ja
xor
mov
pop
pop
mov
inc
dec
add
sbb
xchg
pusha
dec
lahf
pop
pop
lret
mov
out
mov
push
sahf
mov
jo
ror
inc
out
lcall
mov
repz
and
mov
push
fadds
outsl
test
mov
out
insl
cmp
stos
mov
sub
fwait
loop
lea
imul
or
jns
frstor
aaa
mov
inc
and
jo
lds
outsl
ljmp
faddl
imul
push
js
and
test
aad
dec
add
mov
inc
push
scas
mov
lea
jns
pop
ss
ret
out
ficoml
or
mov
stos
sbb
cmp
xlat
std
pushf
mov
mov
inc
jecxz
mov
mov
aas
push
rcr
call
cmpsb
in
rcll
stos
xchg
subb
sti
imul
sbb
dec
pop
adc
addr16
mov
jnp
jo
cld
jg
pop
mov
lds
loope
test
lea
pushf
inc
cmp
pop
jae
xor
mov
std
xchg
add
mov
mov
push
jp
lds
jle
and
pusha
push
add
mov
push
imul
ds
ret
or
lods
and
adc
daa
pop
cmp
dec
pop
ret
mov
fs
inc
loope
or
out
adc
frstor
mov
inc
movsl
mov
or
idiv
aas
xor
push
loop
dec
in
cmp
push
dec
mov
and
inc
es
add
cld
out
inc
sbb
and
cmp
or
push
fdivrs
jle
cwtl
mov
mov
repnz
xchg
pop
arpl
cmp
clc
mov
fldenv
xlat
lods
push
das
dec
ljmp
mov
add
push
mov
ja
or
mov
or
test
cli
rcrl
flds
mov
pop
inc
xor
xchg
xchg
adc
mov
sub
dec
imul
xor
cmpsb
es
cmpsb
imul
xchg
fstps
inc
call
lods
stos
cmpsl
add
cmp
cmp
sub
rolb
push
rolb
pop
jl
push
movsl
xchg
mov
cmpsl
mov
aam
jle
aad
adc
dec
pop
pushf
into
jo
cmpb
leave
jae
fists
push
lods
cmp
inc
inc
test
daa
in
cmp
lret
xchg
test
add
mov
pushf
mov
popf
out
push
cmp
mov
test
sbb
jge
leave
mov
arpl
ret
lcall
pop
adc
std
out
mov
jo
test
outsl
repnz
sahf
mov
lcall
and
popa
adc
or
dec
cmp
or
adc
inc
aas
jns
mov
xlat
repnz
daa
jne
test
lret
mov
xchg
mov
add
mov
incl
lock
and
push
jge
jne
push
mov
mov
push
fs
sub
dec
stos
scas
mov
es
mov
sub
addb
aaa
fstpt
pop
inc
mov
lods
or
mov
push
int3
stc
jnp
scas
lds
xchg
dec
xor
stc
in
sarb
popf
stc
loopne
rclb
mov
and
js
jns
insl
in
movsb
add
cmp
xchg
jmp
lods
lds
or
clc
jmp
xchg
inc
sbb
jecxz
into
lds
inc
leave
lock
icebp
mov
lret
mov
out
loope
push
neg
fwait
imul
mov
mov
fs
mov
adc
lock
cmp
jns
sahf
fdivs
mov
mov
xchg
mov
xor
popa
push
fistpl
and
xlat
mov
scas
and
ljmp
call
idivb
jl
fildl
jmp
daa
push
xor
jg
jmp
testl
dec
movsl
out
pop
xor
pop
push
arpl
push
insb
sub
test
mov
lret
ret
jle
imul
std
data16
push
mov
cmp
pop
leave
cmp
mov
lock
jl
xlat
mov
inc
cmp
aam
test
xchg
add
sahf
sub
imul
pop
sbb
adc
or
adc
loope
mov
mov
mov
rorb
mov
pmulhuw
and
sbb
sbb
and
add
xchg
insl
mov
inc
adc
jmp
mov
into
sbb
imul
cltd
inc
leave
add
sahf
movsl
jno
mov
cmp
repz
cmp
mov
xchg
jns
xchg
adc
idivl
mov
fsts
mov
das
xchg
inc
xorl
or
ret
scas
ret
in
ja
cli
mov
adcl
js
sbb
imul
sub
loopne
mov
stos
xchg
push
std
rcr
leave
scas
jb
out
jp
shrb
pop
pop
daa
aas
mov
xchg
leave
fmulp
cmpsb
mov
aam
push
xor
pop
jo
stos
and
iret
js
xchg
fdivl
mov
xchg
cmpl
stc
hlt
pop
pushf
xchg
mov
out
scas
test
sbb
jp
cmpsb
cli
stos
inc
sti
outsb
jle
or
andb
jns
popl
xor
sti
inc
shlb
clc
mov
inc
xchg
icebp
mov
mov
jmp
xor
ljmp
pop
inc
cmp
iret
pop
xlat
sub
filds
shr
iret
inc
cmpb
mov
fnstenv
jnp
mov
sub
cmp
fsubl
adc
sub
push
xchg
cli
or
mov
je
repnz
je
mov
adc
mov
loopne
xor
ret
jb
test
dec
push
push
xor
cmpb
and
push
daa
lret
jecxz
fwait
cwtl
fldcw
sub
jge
push
std
xor
cmp
daa
adc
lret
xchg
fisubrl
jp
es
cmp
popa
arpl
outsb
mov
jbe
and
mov
push
and
and
mov
test
mov
in
test
pusha
pusha
sub
movsl
lret
stos
xor
std
test
mov
and
jg
xchg
hlt
xchg
xlat
pop
outsb
or
jnp
inc
inc
xchg
lods
popa
inc
push
stc
ficompl
clc
sbb
enter
lods
neg
jg
push
mov
loopne
rcll
out
or
and
int3
in
cs
and
cli
aam
mov
pop
in
xchg
cwtl
push
inc
jecxz
pop
cld
cltd
sbb
xor
pop
sti
arpl
int3
pop
fs
mov
enter
cmp
inc
dec
addr16
push
inc
addr16
icebp
mov
xchg
adcl
jno
mov
lods
push
jle
repnz
fwait
nop
or
inc
cmpsl
mov
or
push
ljmp
cmp
or
add
or
or
das
push
mov
mov
imul
std
add
push
push
inc
in
test
aad
dec
shr
cmp
ret
pop
and
lret
fabs
sbb
fidivrs
lock
sub
repnz
stc
xchg
adc
ret
stc
dec
mov
jb
inc
popf
pop
cmp
xor
int
jle
cld
pop
pusha
push
mov
pop
mov
fbstp
lahf
jnp
loope
inc
repz
mov
and
xor
out
in
insl
test
inc
lds
mov
sbb
mov
pop
in
mov
cmp
repnz
bound
stos
mov
popa
rclb
cltd
rcrb
enter
push
pop
sub
xor
push
loop
add
mov
into
ret
cmp
dec
add
int3
sti
sahf
xchg
loop
adc
or
imul
stc
sub
dec
mov
sub
add
fnstsw
push
jl
popa
jns
das
push
sub
in
and
push
push
test
push
mov
repz
ror
jmp
lret
loopne
push
mov
clc
in
arpl
dec
rclb
ss
sub
mov
dec
std
xchg
sahf
xchg
sarb
push
rclb
pop
gs
mov
jns,pn
cmp
adc
sti
jp
or
mov
adc
dec
mov
sbbb
pop
daa
gs
push
rcrb
xchg
test
inc
roll
pop
push
mov
clc
push
and
pop
arpl
add
fnstenv
stc
ss
stos
stos
jmp
mov
leave
pop
sahf
mov
jae
pop
push
icebp
das
leave
inc
test
mov
leave
rol
ds
jmp
mov
mov
sub
imul
xchg
jp
sbb
cmpsb
fiadds
mov
or
adc
xchg
stos
fcomps
pusha
loop
mov
inc
pop
mov
mov
jbe
iret
xchg
mov
ret
call
idiv
push
sbb
xor
mov
push
xchg
ret
jl
ss
mov
loop
in
add
mov
dec
shrl
jae
lock
faddl
mov
xchg
sub
inc
dec
push
out
rcl
popa
adc
xlat
or
fcomps
sub
fs
lock
mov
test
mov
or
into
push
xlat
movsl
iret
xor
cmc
imul
shlb
in
test
push
in
pop
aad
sbb
jbe
sub
lea
aam
cwtl
xlat
mov
push
das
push
scas
int
stc
fcoml
dec
adc
cmp
xchg
pop
mov
jge
mov
jno
jo
push
lods
cmp
scas
inc
mov
gs
or
pusha
shll
push
orb
and
push
cmpsl
mov
jge
xchg
rcll
mov
leave
mov
pop
out
or
mov
shll
pop
icebp
adc
loope
cmp
pop
jl
jne
jne
add
dec
mov
pop
push
lret
aam
scas
mov
dec
adc
js
sbb
cmpl
shr
sar
sahf
test
xchg
lods
pop
xor
cli
adc
inc
jne
aad
ret
arpl
xchg
repz
sub
dec
pusha
out
push
or
mov
scas
out
add
xor
inc
scas
subl
xchg
insl
mov
int3
dec
and
pushf
mov
mov
pop
lahf
push
mov
fisubrl
inc
mov
fldcw
and
inc
out
stc
xor
xor
ja
mov
push
and
dec
inc
loopne
call
xor
inc
std
ret
sbb
adc
repz
mov
pop
int3
les
dec
or
xor
and
dec
sbb
data16
mov
mov
sbb
sbb
cmp
and
jno
iret
push
rol
and
fldt
xor
inc
fwait
lcall
test
or
and
jbe
jmp
loope
sarl
cmp
cmp
push
dec
jl
out
push
sbb
xchg
mov
rorl
pop
ret
test
cwtl
or
js
xor
jbe
mov
sahf
dec
mov
xchg
and
jl
jbe
sti
pop
push
addr16
jno
lods
mov
xor
inc
inc
lret
and
and
testb
xor
in
push
roll
pop
jecxz
ret
gs
jb
inc
popa
xchg
mov
xchg
pop
ss
sub
ret
mov
test
xchg
insb
cmp
pop
inc
arpl
pop
adc
cli
adc
sbbl
and
push
in
sbb
clc
pop
push
int
pop
adc
mov
lds
test
adc
mov
shrb
jp
adc
lods
jp
xorl
repnz
fbld
xor
push
jae
addb
mov
cmp
mov
inc
aaa
dec
test
xor
je
jecxz
inc
icebp
gs
int
jmp
cmp
shlb
adc
call
push
sarb
cmpsb
xchg
cmp
cmp
sti
push
xor
test
inc
cmp
sbb
aam
jbe
fcmovnu
cmc
shl
daa
aas
mov
sbb
and
out
loop
mov
aad
xor
adcb
adc
out
pushf
std
mov
ljmp
sbb
jecxz
je
insb
mov
sbb
jbe
jl
loope
inc
adc
push
dec
ja
jo
adc
repz
add
xor
mov
test
call
push
mov
sahf
leave
ret
rol
or
xlat
rcll
push
repz
xchg
insb
and
enter
xchg
scas
push
pop
cmpsb
call
push
inc
and
mov
fnstenv
out
or
lret
leave
call
mov
fucomi
and
lcall
dec
mov
and
nop
idivl
repz
and
cs
lret
cmp
js
repz
test
mov
test
pop
clc
mov
shrl
movsl
ret
cli
xor
push
loopne
push
cmp
stc
inc
cmp
into
and
jb
xchg
imul
testb
push
mov
sahf
inc
cld
jno
sbb
test
pop
aaa
pop
test
mov
dec
divl
lret
mov
stos
movsl
adc
dec
movsb
cmp
stos
dec
lret
aam
xchg
cmp
divl
mov
or
sahf
pop
push
or
lcall
push
jg
lods
adc
or
arpl
xchg
sub
adc
mulb
test
pop
outsl
lahf
and
cmc
ja
or
shrb
orb
xor
or
sub
sub
sbb
dec
sti
sub
inc
xchg
mov
and
mov
jecxz
in
mov
call
sti
pop
inc
outsb
pop
mov
mov
aad
jne
in
fcmovne
cmp
in
push
stc
aaa
add
sbb
popl
xchg
into
sbb
mov
rclb
in
adc
into
add
jno
sbb
add
repnz
es
jge
into
std
adc
jecxz
lea
and
mov
outsb
push
lea
cs
fisttpll
sbb
cmp
out
xor
and
mov
jl
inc
inc
add
sub
je
testl
mov
das
stc
pop
mov
bound
xchg
loope
ja
mov
lods
lea
adc
cmp
xor
cli
xchg
nop
add
cmpsb
imul
xor
lcall
mov
test
repnz
xchg
sbb
in
das
shrl
dec
cmp
xchg
cmp
int
xchg
stos
addr16
cmp
loop
clc
divb
mov
and
xchg
test
jno
loope
mov
add
add
jge
mov
or
jg
push
pop
adc
mov
insl
movsb
adc
bound
stos
and
jo
sbb
push
cmovge
add
cmp
pushf
xchg
pushf
jnp
mov
and
mov
jne
int3
inc
orl
sbb
lret
stos
nop
xchg
imul
or
and
and
je
xor
jnp
jl
std
das
pop
jno
aaa
push
pop
and
fs
in
loopne
int3
shlb
fidivl
test
push
dec
push
dec
sbb
rcrb
cwtl
mov
jge
dec
sub
mov
jo
cmp
mov
cmpb
mov
cmpsb
fdivl
add
stos
lds
aas
fldenv
xchg
mov
jp
push
add
ja
sbb
jno
iret
adc
icebp
aad
pop
insl
sbb
shlb
loope
inc
sahf
mov
lods
iret
xchg
clc
push
and
negb
dec
outsl
pop
mull
fwait
inc
adc
xchg
lret
mov
inc
xor
pop
inc
and
insl
push
ja
scas
popa
pop
notl
inc
push
fprem
test
aas
pop
jnp
jnp
fbld
divl
push
mov
popa
dec
dec
popa
mov
sub
ret
or
jg
aad
sbb
adc
inc
ja
outsb
ret
mov
push
xchg
into
adc
ret
or
loope
lods
aam
jne
shll
or
sub
jp
mov
push
xor
mov
xchg
push
loop
stos
int3
push
or
adc
addb
xchg
mov
xor
shlb
sub
popa
jae
cmp
mov
mov
mov
mov
dec
shl
ficomps
add
loopne
adc
push
dec
gs
or
xchg
aas
push
pop
adc
push
out
xchg
push
data16
jg
jnp
shlb
dec
inc
mov
hlt
or
lret
mov
pop
ja
pop
fdivrl
out
movsb
cmp
dec
add
dec
inc
cmpsb
adc
daa
addr16
in
aas
mov
mov
xchg
mov
dec
and
jg
outsl
aam
jae
mov
nop
jp
sbb
sub
inc
jo
sbb
inc
fdiv
iret
arpl
lods
mov
or
jp
adc
aad
inc
js
dec
pslld
addb
push
test
inc
mov
into
fstpl
int
pop
mov
insl
sbb
test
test
out
cmp
hlt
jne
dec
cmp
leave
sub
add
or
mov
push
fs
dec
mov
push
push
push
push
sub
cmp
rcrb
pop
test
sub
scas
inc
push
dec
mov
jns
outsb
mov
stos
addl
out
lods
jmp
imul
jle
leave
test
lcall
daa
mov
nop
inc
not
sub
cmp
sahf
aas
push
and
daa
sub
adc
inc
xchg
add
enter
fcoms
mov
fadd
pusha
push
insb
clc
push
dec
fxch
fsubs
in
or
dec
lahf
lea
imul
and
stc
mov
cwtl
ret
fldl
push
pop
imull
aas
hlt
or
push
jns
cs
lahf
outsb
enter
push
jb
jne
xor
loope
mov
lret
add
sub
loop
inc
sub
das
insb
pop
mov
mov
jp
lock
push
xchg
lret
fcmove
push
nop
cli
xchg
jno
sti
rcl
mov
ja
mov
rorl
out
jne
mov
fimuls
sub
mov
add
out
ret
pop
call
mov
aaa
xchg
and
dec
xchg
dec
repz
push
imull
push
ss
popl
or
and
lea
out
inc
movsl
jmp
js
jmp
cmp
xor
xor
mov
repz
jo
fdivl
mov
mov
outsb
test
pop
jg
mov
pushf
add
dec
nop
mov
dec
jp
add
cltd
imul
xchg
inc
mov
fisttpll
jae
mov
sbb
sbb
sub
js
xchg
or
jle
ret
xchg
mov
ret
out
push
inc
test
fnstenv
xor
and
push
sub
sub
cmp
roll
out
movsl
mov
pop
jb
je
cmp
daa
shlb
pushf
stc
and
js
lods
scas
and
cli
xor
pop
aam
xchg
test
hlt
shl
inc
adc
in
mov
fmul
or
negl
loopne
xchg
inc
bound
mov
mov
pop
push
in
clc
fisubl
mov
loopne
cmp
bound
jg
jns
inc
mov
mov
inc
push
push
pop
stos
sbb
pop
sbb
sbb
cld
ss
push
mov
stc
test
fadds
js
fsubrl
ljmp
xlat
jno
cld
lods
les
movb
pop
lcall
mov
cmp
lea
jno
lods
push
mov
mov
sahf
pushf
cmc
rcrl
insb
cmp
xchg
roll
pop
add
mov
stc
and
jecxz
add
sub
xchg
inc
mov
push
mov
aas
dec
mov
fiaddl
leave
fcmovu
mov
sub
mov
cmovle
adc
pop
cmp
inc
push
inc
mov
cli
das
or
cmp
adc
mov
add
push
js
push
imul
aam
lcall
push
adcb
mov
xor
test
lret
dec
jne
in
dec
dec
cmc
test
push
mov
push
and
cmp
fidivrs
sbbl
mov
push
mov
loop
jmp
outsl
cli
sbb
loopne
imul
in
adc
xlat
lds
imul
adcb
dec
add
adc
imul
push
test
cmpsb
and
cmp
scas
and
mov
lds
or
add
or
stos
ret
fiaddl
dec
shll
int3
mov
mov
lods
push
addb
add
stc
pop
pop
push
ss
ds
mov
dec
aaa
push
add
dec
pop
mov
add
cmp
addb
pop
out
mov
mov
enter
jge
xor
adc
js
bound
xchg
jge
popa
and
cwtl
subb
mov
in
js
fdivs
inc
out
xchg
out
push
xchg
out
adc
sbb
sbb
pop
lea
add
xchg
fisubs
pop
mov
push
ret
or
inc
jg
inc
shl
popa
out
adc
out
mov
movsl
xor
loopne
call
sbb
imul
mov
xor
cmc
scas
cltd
and
outsl
sahf
xor
nop
lea
push
cmc
scas
fldcw
push
out
adc
ds
test
adc
pop
jbe
lods
mov
shrb
push
sbb
add
pushf
in
iret
mov
add
sub
push
xor
stc
inc
fchs
mov
leave
ljmp
mov
ljmp
test
xchg
test
sti
int
pusha
outsl
stos
arpl
test
in
jecxz
imul
aas
lahf
cmp
repz
sub
dec
bound
inc
cmp
or
imulb
lock
hlt
and
adc
out
sbb
adc
aad
outsl
xchg
arpl
sbb
out
dec
idivl
data16
xlat
pusha
and
mov
cld
mov
movsb
cmpsb
out
loope
aas
and
push
inc
adc
pushf
jns
test
or
xor
inc
lock
test
push
mov
push
aas
pop
loopne
popf
cmp
loopne
cmp
pop
sbb
inc
pop
scas
xchg
inc
cli
ss
pop
adc
lods
cmpsb
add
mov
jnp
movsl
sbb
das
addr16
or
push
mov
mov
ret
cmp
push
mov
fcmovne
inc
cmp
cmpsb
out
movsl
repz
jae
xor
in
in
sbbb
cmpl
subl
cs
push
mov
xor
xor
mov
pop
adc
loop
sbb
inc
pusha
jl
fwait
mov
push
or
mov
scas
stos
icebp
mov
cmp
push
std
sub
add
mov
jns
mov
jns
dec
ss
sbb
call
inc
push
mov
scas
mov
das
inc
in
pop
xchg
or
iret
push
sub
pop
xchg
ds
adc
test
jmp
out
xchg
sti
int
inc
mov
out
mov
fisubs
push
fstpt
sub
int3
dec
mov
dec
mov
xchg
pop
dec
mov
stos
in
pop
and
and
ss
or
out
mov
sbb
lock
dec
or
rclb
inc
cmc
iret
btc
dec
xchg
mov
das
xchg
lcall
cmpsl
xchg
sbb
xorl
and
push
loopne
dec
lods
push
pushf
inc
bound
dec
daa
jnp
xor
fdivrs
push
popf
mov
push
pop
mov
lods
pushf
enter
dec
scas
into
rol
sbb
cmpb
outsb
mov
cltd
leave
pop
loope
mov
insl
xor
lods
xor
sbb
jbe
mov
xchg
aas
cmpsb
mov
pop
or
in
lock
push
inc
shlb
adc
dec
mov
cmp
fnstenv
mov
mov
dec
cmp
lds
inc
mov
sbb
leave
xorb
insl
and
xor
mov
cmpl
xchg
pop
adc
cwtl
jns
add
loope
push
outsl
push
jg
mov
mov
pop
aad
lods
xchg
xchg
lret
jp
addr16
xor
jl
or
in
xchg
out
dec
sbb
les
rcr
scas
sahf
test
dec
stos
andl
dec
out
imul
test
jns
fbld
xchg
movsl
dec
sub
data16
sub
dec
lods
lahf
and
mov
rolb
xchg
jne
cld
lds
xor
sbb
xchg
inc
sbb
vcomisd
jge
in
icebp
push
push
outsb
cwtl
add
xchg
cmp
sbb
push
jmp
loop
dec
iret
sub
insl
jae
je
cmp
cmc
ds
mov
push
inc
xor
xchg
adc
ja
shl
adc
sub
or
push
and
lock
pop
or
push
movsb
and
adcl
mov
clc
rcrb
into
push
int
push
leave
in
dec
xchg
gs
fldenv
adc
scas
add
sub
lods
pop
test
test
int3
leave
cmp
lret
xor
mov
jns
rcrl
cmpsb
mov
xor
mov
xchg
js
jge
sbb
add
loope
sub
jl
adc
add
sbb
clc
mov
xchg
lahf
xchg
rolb
decb
iret
mov
jle
sti
jmp
mov
cmp
dec
sbb
mov
ret
mov
scas
repnz
sub
repz
in
lret
in
mov
mov
or
or
push
inc
jbe
jmp
mov
mov
imul
mov
fistps
or
or
lcall
mov
cmpsb
inc
xchg
into
pop
ds
imul
sahf
or
fidivl
xor
jmp
jns
sub
lods
jne
imul
test
or
mov
es
movsl
pushf
out
fistl
xor
inc
or
das
daa
mov
push
sub
popf
aas
xlat
jb
lds
notl
jns
xchg
cli
lock
sbb
add
inc
cmp
out
jns
jb
mov
mov
pushf
pop
lock
pop
jp
test
inc
out
mov
push
dec
sbb
or
adc
jecxz
inc
cmc
loope
dec
test
inc
fsubrs
cmp
jge
mov
cltd
mov
mov
shrb
dec
cmp
mov
adc
pop
xor
add
mov
loop
and
das
push
nop
xchg
jo
pop
add
xor
sbb
push
or
or
data16
dec
cmpsb
sub
xlat
stos
dec
xor
jle
bound
jne
mov
cmp
ja
jnp
sbb
test
cmpl
pop
lret
arpl
jle
lds
lock
mov
mov
cmpsb
iret
insb
mov
nop
pop
out
pop
rcrl
imul
loope
int3
popf
daa
fimull
or
xorl
and
divl
xor
add
add
inc
dec
and
jg
jl
cmpl
mov
xchg
ja
mov
enter
cmp
push
sbb
in
imul
and
lret
mov
pop
pop
int3
mov
je
push
dec
inc
ja
cmpsb
push
rcr
mov
dec
dec
imul
fstps
out
dec
pop
and
cltd
test
jb
ljmp
cmp
daa
sbb
in
mov
dec
fistl
outsb
dec
ficoml
ret
mov
dec
mov
into
call
jno
jnp
dec
push
icebp
mov
mov
repnz
out
mov
and
call
cmp
dec
gs
mov
scas
mul
inc
popf
adc
sti
in
outsl
mov
in
pusha
cli
pusha
push
mov
ret
js
lret
sub
js
lds
sub
lods
orl
jb
sbb
pop
jb
in
je
scas
xchg
cmp
nop
and
movsl
int
call
or
aad
sbb
cmpb
pop
mov
mov
adc
adc
mov
lahf
outsl
xchg
les
imul
or
cmp
int3
lret
sub
mov
fs
dec
sbb
adc
push
push
or
inc
fnstsw
dec
cmp
rcpps
test
dec
ficoms
cwtl
push
cmpsl
imul
or
jle
or
dec
stc
scas
mov
sub
flds
and
insl
inc
sti
filds
mov
outsb
sti
shll
cmp
sub
or
cmp
xchg
mov
mov
add
mov
in
pop
sahf
daa
and
aad
xchg
fwait
add
lock
icebp
adcl
scas
jge
pop
mov
repz
adc
lea
iret
and
add
mov
clc
in
dec
daa
fwait
pushf
jecxz
push
and
gs
lret
jae
pushf
mov
xchg
xor
fcmovnu
loop
dec
negl
inc
cmpsl
pusha
and
mov
aas
sahf
sbb
mov
int
aaa
inc
mov
sub
lcall
movsl
mov
pop
push
hlt
xchg
cmc
jmp
pushf
xchg
xor
push
dec
sub
pop
jmp
fucomip
in
jbe
jo
add
movsb
or
mov
clc
insb
mulb
fildll
sub
push
adc
xchg
push
inc
nop
pop
lock
or
jno
rorl
dec
cmp
cmp
sub
mov
mov
loope
iret
lcall
sahf
lahf
jmp
inc
xor
sbb
cld
les
fs
jns
or
add
and
lret
int
test
pop
and
add
cltd
in
sahf
mov
in
js
fsubrp
loop
cwtl
xchg
xlat
repz
adc
movsl
addr16
sub
and
jb
mov
es
lret
sbb
cmp
imul
and
inc
fisttpl
test
fldt
lods
mov
inc
or
in
ss
or
xchg
loopne
pop
sbb
jb
mov
inc
loop
jecxz
mov
jg
test
push
sub
icebp
shll
add
jmp
xchg
roll
fs
mov
aad
leave
ja
cmpb
mov
movsb
mov
sahf
inc
jecxz
orl
mov
mov
dec
leave
xor
jle
aas
dec
mov
outsb
jbe
sbb
rcrl
adc
dec
pop
in
xor
iret
add
jmp
adc
push
xlat
sti
adc
xor
dec
cmp
int3
sti
xchg
cmp
sahf
sarl
cmp
mov
lock
je
sbb
jae
insl
jl
jge
mov
dec
xchg
pop
lahf
insb
mov
push
mov
outsb
call
cmp
mov
push
or
loop
cltd
pop
inc
or
aad
cmp
testb
inc
in
or
loopne
fsts
popf
push
jno
push
xchg
inc
movsb
jmp
mov
push
mov
aas
addr16
unpcklps
cs
mov
cli
cmpsl
test
mov
and
fmull
push
cli
rcrb
xchg
stc
xchg
into
cmp
out
inc
sti
ret
out
pop
adc
jle
or
popa
rorl
test
into
pop
je
or
add
lcall
xchg
bound
mov
int
dec
pop
pop
addr16
mov
test
sbb
stos
hlt
insb
add
jbe
adc
jb
mov
inc
hlt
pop
int3
jnp
pusha
andb
pop
ja
dec
ja
push
cmp
movhps
lock
mov
das
jb
adc
fwait
stos
addr16
movsl
cs
scas
dec
arpl
mov
or
push
mov
push
aas
imull
and
mov
and
cs
outsb
mov
jnp
repz
dec
xchg
ret
int3
fsts
add
stos
sarb
or
inc
mov
sahf
cltd
push
aaa
addr16
fs
mov
in
dec
in
inc
pop
stos
mov
jae
insl
xor
adc
pop
mov
aaa
pop
stos
iret
jne
daa
cmp
xor
jge
out
and
mov
dec
jne
out
arpl
pop
mov
daa
shrb
jnp
repz
aad
sub
mov
fisubrs
popa
imul
addb
out
in
js
shrb
sti
aam
push
mov
add
inc
xor
and
sbb
data16
sub
pushf
mov
fnsave
adc
ret
mov
ss
sbb
adc
inc
shlb
mov
add
aas
jmp
stos
scas
clc
fsub
push
mov
dec
pop
addr16
loope
pop
cmp
inc
loope
lahf
inc
or
in
pushf
dec
push
jmp
filds
push
inc
xor
out
test
cmp
cmp
xchg
popf
push
jno
fimuls
arpl
and
adcb
rolb
aam
in
pop
ss
push
ljmp
adc
lods
out
push
fisttpl
aad
push
add
mov
out
inc
dec
jns
and
sbb
stc
popf
sub
inc
rcrb
add
inc
push
js
lock
push
loope
out
ja
push
enter
jnp
pushl
xchg
mov
rcl
jno
std
lret
lcall
sub
stos
dec
sub
ret
outsl
pop
mov
push
mov
sbb
rcrl
popa
gs
imulb
test
cmpsb
xchg
aam
add
arpl
lret
and
enter
xchg
pushf
or
and
dec
bound
loop
std
je
push
bound
inc
mov
adc
mov
testl
xchg
out
jmp
dec
into
jmp
test
out
loope
pop
cmpsb
sub
push
sbb
cmp
loopne
fcomps
mov
sub
mov
and
adc
inc
and
push
inc
lcall
aaa
imul
adc
inc
test
loop
icebp
pop
fmuls
scas
and
cmpsl
sub
sbb
xor
outsl
jl
xchg
ret
mov
bound
sbb
sub
jnp
push
and
lock
and
mov
or
jecxz
mov
cmp
ss
jnp
shrl
xor
cwtl
lock
dec
add
cmpsl
adc
or
pop
sbb
outsl
cmp
fisttpl
xchg
inc
call
pop
sub
in
scas
rcll
or
or
add
je
das
xor
outsl
stc
cmpsb
fcmovnb
popa
out
push
add
cld
pop
popf
dec
push
add
cli
push
scas
pop
out
ss
mov
push
mov
scas
sbb
jecxz
mov
mov
test
mov
or
mov
mov
je
insb
mov
repz
jne
movsl
push
add
mov
daa
jo
rcll
mov
dec
int
xchg
jge
lea
arpl
jns
sbb
in
daa
mov
sbb
mov
shlb
jne
int
call
xchg
flds
add
sti
daa
lea
cmp
or
push
pop
clc
adc
or
das
pop
pop
pushf
push
pop
test
ljmp
hlt
roll
sbb
sbbl
ljmp
into
test
call
stos
shrb
xchg
xlat
imul
pop
cmp
mov
cltd
add
and
jns
dec
stos
sub
outsl
ja
test
orb
mov
jg
pushf
lret
jmp
push
mulb
lret
xor
mov
mov
mov
loop
imul
mov
iret
loop
int3
push
or
xchg
dec
sub
sbb
inc
mov
xor
xchg
ja
icebp
xchg
mov
sub
push
enter
and
or
or
jle
mov
adc
sub
and
dec
lds
insl
sub
adc
scas
notb
push
movsb
mov
cs
lods
jmp
xor
cmpl
std
dec
and
aas
lods
fildll
inc
jle
inc
jne
pop
and
sbb
lods
and
mov
xchg
mov
pushf
into
and
mov
sbb
mov
mov
push
imul
and
lcall
int3
push
mov
xor
xor
lcall
mov
daa
add
sub
das
jle
pop
mov
jge
mov
mov
push
sbb
xor
prefetch
pop
cmpsl
addb
inc
cmp
mov
out
dec
push
dec
mov
add
dec
xchg
xchg
out
rcll
and
push
or
add
mov
inc
push
test
stc
adcl
sub
add
fdivs
ljmp
movsl
ret
loop
mov
imulb
push
xchg
sbb
into
lods
aad
add
pop
das
sbb
cmp
mov
lret
mov
mov
push
out
pmaxsw
insb
pop
subb
roll
notb
mov
sbb
gs
sbb
push
mulb
xchg
mov
out
sub
or
lret
ret
pop
cli
cmpsl
out
fmuls
jne
mov
jmp
inc
mov
mov
dec
mov
lret
addr16
sub
adcb
out
sub
add
jmp
nop
notl
fcomip
inc
fnstenv
jbe
hlt
cmp
outsl
daa
fidivl
fistl
ret
cli
vmovss
adc
xchg
dec
loop
cltd
jne
xor
fsub
ljmp
push
call
fmul
xor
sti
stos
pop
fists
push
out
nop
mov
and
sbb
sub
std
int
fcoml
mov
out
xor
cmp
imul
pop
lods
pop
push
add
hlt
clc
shl
insb
jmp
movsl
test
dec
movsl
cmpsb
mov
outsl
dec
aad
cmp
hlt
xchg
xchg
popf
fistpll
ja
lock
imul
adc
imul
cs
mov
jb
sub
ljmp
xchg
pop
out
or
pop
xor
stos
or
in
and
loopne
hlt
pop
ja
imull
xorl
mov
lods
aaa
inc
out
xchg
out
lret
jns
cmpsb
test
push
out
insl
or
lods
mov
idivb
inc
das
std
loope
jb
fldenv
mov
clc
ljmp
cli
pop
mov
por
push
movsb
mov
mov
dec
stos
pop
ja
cmpsb
pop
mov
mov
sub
stc
adc
cmpb
mov
fdiv
cmpsb
lahf
xor
sub
cmp
mov
fnstcw
test
sub
ss
pop
popf
xor
cwtl
xchg
testb
into
push
and
adc
push
push
xor
and
mov
push
arpl
idivl
lret
pop
lods
jecxz
stc
mov
ss
fwait
sysenter
fs
fcomps
mov
pop
add
repnz
cmp
adc
add
mov
aaa
push
imul
xchg
mov
xchg
loopne
fwait
ds
dec
push
mov
sub
adc
xchg
push
sbb
icebp
movsb
cmp
cltd
leave
push
sbbl
mov
test
xchg
stos
pop
call
das
mov
sbb
lods
ds
mov
pop
shrl
pop
or
inc
cmp
enter
ljmp
xchg
cmp
cmp
aaa
push
icebp
sbb
fs
mov
lcall
out
xchg
mov
xor
mov
out
shll
xor
mov
daa
sbb
inc
rcl
mov
sbb
bound
cmc
fwait
in
outsb
jo
push
cmp
call
mov
fbld
imul
clc
arpl
dec
into
negl
mov
mov
loop
lret
push
lcall
loopne
mov
test
sbb
mov
jle
pop
adc
cli
call
push
or
lret
jl
lods
mov
imul
or
das
dec
jb
mov
imul
dec
pop
int
pop
sbb
cmpl
mov
xor
jne
xchg
pop
cmp
pop
push
daa
scas
fwait
sahf
push
lods
mov
push
xchg
sub
sub
clc
cmpsb
inc
leave
out
mov
imul
add
adc
sub
cmp
daa
int3
movsb
lds
mov
out
cmpsb
fs
repnz
sbb
mov
rclb
sub
je
jl
xchg
push
divl
testl
sub
rorl
pop
lcall
dec
aaa
data16
lret
add
arpl
dec
inc
out
rclb
leave
in
lods
in
and
arpl
enter
arpl
pause
and
push
sbb
test
push
xlat
dec
inc
sub
sbb
cmp
and
xor
fisubl
hlt
cmp
gs
xchg
cmpsl
jbe
push
or
mov
repnz
out
imulb
sub
out
sbb
dec
cmc
dec
mov
pop
cmc
jmp
jecxz
dec
int3
pop
std
subl
dec
mov
je
punpckldq
dec
scas
movsl
lods
arpl
jo
pushf
dec
fdivrs
dec
flds
cmp
in
fdivs
xchg
movsb
ret
js
packuswb
in
xchg
mov
or
xor
mov
xchg
aas
mov
int
test
int
hlt
loope
cmpsl
rorb
pop
xchg
std
hlt
mov
sarl
mov
cld
xor
sub
int
test
je
jno
adc
pop
outsb
in
sub
mov
push
leave
pop
outsl
xchg
mov
xchg
and
mov
cltd
push
sub
int3
and
rcrl
and
mov
sub
test
pop
sbb
loopne
jg
xor
data16
mov
gs
xchg
push
add
pop
gs
cs
cmp
ss
in
lret
aas
mov
adc
pop
mov
sub
mov
enter
adc
in
inc
or
sub
lcall
and
jb
mov
dec
mov
stos
xchg
sub
pop
mov
jne
dec
lods
cld
sub
in
jo
jo
jbe
push
pop
add
mov
fnstsw
xchg
sbb
bound
lret
mov
inc
jle
jmp
jnp
pop
ficomps
incb
popa
stos
pop
and
dec
negl
test
push
repnz
push
mov
jb
ffreep
dec
dec
loopne
lods
shrl
mov
pop
cmp
push
inc
dec
pop
icebp
pop
gs
sahf
inc
pop
sub
inc
in
jp
bound
mov
and
aam
aam
dec
add
xchg
test
lea
rorl
fmulp
into
repz
push
jmp
push
adc
dec
pushf
jecxz
ret
int
rorb
mov
dec
mov
jb
js
test
ror
iret
nop
fwait
in
jns
xchg
stos
and
pop
sub
pusha
cmpb
add
or
lods
pop
ss
leave
fisttps
call
notl
push
jo
sti
jmp
mov
mov
negl
sbb
fst
btr
int3
push
aaa
dec
repz
lds
mov
push
loopne
pop
push
xchg
mov
mov
sar
loop
and
pushf
jge
lahf
sti
ss
sub
adc
mov
mov
sbb
cli
andb
pop
jbe
dec
push
push
sub
xchg
jl
adc
cmc
ret
nop
insb
adc
cmpsl
lock
shlb
dec
fs
fbstp
cmp
push
xchg
push
in
sub
lock
lret
bound
ss
push
jg
jp
inc
dec
scas
mov
sub
in
cmp
mov
ss
and
sbb
imul
nop
ljmp
adc
pop
mov
sub
in
inc
jns
sub
movsl
xchg
pop
and
mov
mov
push
and
test
sub
fidivrl
inc
pop
pop
mov
dec
jl
xchg
cmpl
lock
daa
xor
or
pop
adc
rcrb
mov
mov
scas
das
sbb
in
inc
shrl
jnp
clc
shr
fcompl
sbb
subl
lret
scas
aam
popa
xchg
iret
repnz
arpl
fdivrs
sub
shll
std
out
pop
or
je
mov
dec
lret
aam
rclb
shrl
mov
pop
mov
xor
add
mov
mov
dec
shl
std
lret
push
test
mov
push
inc
rorl
movsb
cltd
add
adc
cltd
jecxz
lahf
xor
stos
frstor
sbb
or
xor
mov
push
lds
or
sbb
dec
shrl
test
lahf
in
push
jp
xchg
stc
into
sti
add
sub
fs
pop
popf
ljmp
je
cmpsl
stc
mov
push
das
xchg
lcall
xchg
xchg
cmp
pop
daa
dec
test
xor
push
xchg
sub
jno
push
xchg
movsb
out
and
or
lods
test
xchg
insl
mov
inc
pop
cmp
scas
xorb
popa
add
add
pop
in
fildll
loope
clc
arpl
mov
jmp
and
lods
aas
cmpb
iret
mov
jbe
mov
fdivs
outsl
hlt
cmp
add
jne
daa
push
adc
out
xchg
sarl
into
popf
in
push
fs
lock
flds
out
loopne
fsubl
mov
andb
in
mov
stos
adc
popa
jbe
mov
loope
push
adc
inc
into
jb
or
aam
mov
loope
sbb
pop
divl
cmpsb
mov
sarb
mov
and
cmp
adc
push
cmp
mov
movsl
add
aad
xor
fnstsw
xor
aaa
or
imul
add
xchg
dec
aaa
idivl
xor
leave
dec
lahf
mov
pop
arpl
mov
sub
inc
jg
in
add
add
jmp
das
adc
in
add
imul
shl
jbe
add
inc
jae
jb
out
in
repz
fs
inc
sub
jmp
std
stos
shrl
fsubr
or
add
enter
push
repnz
pop
sub
push
jle
jb
pop
xchg
leave
lahf
mov
xchg
adc
add
mov
xchg
pop
sbb
add
adc
mov
mov
je
adc
adc
jae
cmpsl
adcl
or
fidivs
sbb
mov
adc
lods
pop
mov
cmpsl
jge
gs
inc
sbb
sub
insl
push
dec
pop
vscalefss
jo
mov
jecxz
pusha
lds
cmp
outsb
mov
int
mov
dec
out
cmp
enter
movsb
lea
or
or
mov
shll
iret
ret
cltd
ret
push
fnstsw
xlat
ret
pop
pop
push
push
and
jne
add
imul
jmp
repnz
xorb
adc
xchg
das
loopne
notl
incb
std
jns
aad
test
mov
es
mov
cmp
faddl
mov
sub
sarb
push
dec
add
test
cmpsb
out
dec
xor
jle
add
and
xorb
sbb
cmp
enter
dec
cmp
xchg
dec
fwait
les
dec
lds
push
movsl
mov
pop
push
iret
js
shll
or
inc
loop
sub
sbb
jbe
addb
cmp
xchg
iret
cmpsb
cmp
ret
push
fidivl
aam
cli
mov
push
add
addr16
int
mov
bswap
fsub
sub
out
jae
ljmp
out
push
mov
ja
add
xlat
xchg
clc
push
in
loopne
sub
jae
jg
jg
xchg
shlb
arpl
int3
and
lods
adc
mov
sbb
movsb
or
adcl
xor
dec
sbb
xchg
popa
sbb
cmc
pop
pop
repz
or
xchg
loopne
addr16
das
jb
fdivr
cmp
leave
adc
sub
jns
mov
sub
ja
dec
jb
xchg
cmc
sub
sahf
mov
adcl
lea
mov
or
push
outsl
push
cmpsl
xor
xchg
pushf
mov
jnp
add
fcmovb
pop
in
pop
movsb
jl
insb
aad
sbb
insl
mov
decl
inc
dec
mov
inc
or
aaa
dec
pop
cld
add
int
mov
scas
sbb
int3
das
mov
push
push
gs
aam
pusha
or
xchg
inc
mov
imul
in
jae
sub
dec
ds
xchg
aad
jmp
mov
out
popa
cld
jmp
sbb
mov
jne
dec
mov
enter
or
inc
mov
mov
lret
pop
pop
dec
idivb
ja
popf
mov
push
jg
mov
pop
je
dec
nop
lret
pushf
adc
add
stos
mov
push
lods
test
push
push
cmp
shll
dec
xchg
pop
repz
pop
push
push
jno
jno
cli
out
or
xchg
mov
jo
cmp
shrl
sbb
push
imul
pop
mov
ss
stc
lahf
loop
leave
fstl
cs
jae
mov
fadds
mov
sahf
push
sub
scas
in
sahf
mulb
lret
cmp
xchg
clc
pop
dec
popf
inc
in
lahf
mov
mov
lret
mov
xlat
inc
xchg
das
fsubl
ja
loope
push
loope
daa
jns
jns
sub
enter
sub
inc
dec
xchg
aam
xor
aaa
or
lods
call
fs
pop
lea
cltd
fiaddl
aas
mov
and
dec
cmp
pushf
jle
addr16
jbe
xchg
mov
std
mov
cmp
jecxz
pusha
leave
adc
push
xor
sbb
xchg
sti
sub
mov
int
pop
dec
xor
cli
movsb
mov
mov
outsb
enter
xor
outsb
or
mov
int
fxch
dec
mov
mov
inc
mov
stos
call
pop
mov
dec
mov
mov
cmp
add
sarl
es
dec
andl
int
sbb
adc
cmpb
adc
inc
pop
sub
lock
testb
shll
repz
mov
into
ss
mov
out
dec
push
aam
inc
sbb
push
mov
or
jo
pop
or
call
xchg
pop
or
in
push
sarl
xlat
inc
into
adc
movsb
cmp
sub
test
fnstsw
pop
mov
pop
mov
mov
ja
ds
ljmp
daa
iret
dec
bound
gs
mov
into
or
xchg
repnz
mov
push
aaa
aas
or
push
es
mov
or
pusha
dec
mov
jle
mov
insb
jp
adc
je
clc
frstor
adc
imul
pop
and
dec
adc
clc
or
icebp
pop
aad
lods
lcall
pop
in
cmc
jg
fadd
lock
roll
mov
stos
xchg
stos
mov
aam
ds
mov
pop
dec
aas
stos
les
and
push
mov
sub
xchg
rol
or
sbb
jmp
inc
adc
repz
rcll
movsl
mov
mov
dec
inc
sbb
xor
cs
sub
dec
pop
mov
lcall
cmp
int
xor
icebp
cs
jno
add
push
inc
push
out
cmc
mov
in
or
add
pop
pop
test
loop
repz
ret
adc
and
lock
xor
out
pop
push
lcall
inc
mov
insb
sub
dec
push
pop
pop
setne
pop
int
jmp
bnd
iret
push
scas
xchg
aad
jge
mov
jle
in
fildl
xor
jns
fimull
dec
xchg
pop
int
mov
popa
jns
sub
iret
sub
push
mov
xor
in
fsubr
mov
das
sbb
dec
pushf
inc
cmp
mov
in
or
or
cwtl
popa
mov
xchg
xchg
mov
pop
xchg
ret
jne
jbe
iret
lds
add
push
gs
sbb
sahf
aam
cmp
and
cmp
cmpsl
add
andl
sbb
cmpsl
fildll
adc
dec
rorb
test
leave
xchg
mov
and
mov
aam
adc
mov
stos
arpl
bound
add
sbbl
fwait
push
sbbl
mov
push
aas
sub
mov
scas
test
out
xlat
pop
mov
jae
and
mov
cmpsb
stc
imul
scas
cmp
shr
pusha
cli
jns
aas
je
stos
mov
cmp
sbb
int3
mov
sub
iret
mov
out
imul
push
cmc
sub
mov
dec
or
fidivs
jae
dec
add
rcll
mov
fwait
sbb
sub
ss
inc
clc
jnp
cli
add
mov
dec
push
in
fidivl
stc
cmpsl
scas
data16
leave
jae
jmp
loopne
push
iret
sbb
and
pop
push
pop
and
add
cmpsb
je
negb
enter
xchg
daa
les
nop
fcompl
lock
jecxz
jmp
aad
pop
aam
mov
inc
jns
dec
lods
xlat
sub
mov
addr16
and
mov
xor
mov
push
jnp
or
cmpxchg
cmp
dec
xchg
cs
and
pop
push
sbb
add
jbe
dec
lods
push
pushf
inc
jo
cmp
adc
sti
cmpsb
dec
lret
call
cmc
fnsave
mov
insl
clc
jge
push
sbb
jmp
pop
push
pusha
es
and
test
inc
mov
push
dec
std
mov
out
test
pusha
mov
jle
outsb
int3
inc
imul
rcll
push
push
xchg
push
outsl
das
cmp
dec
push
jno
xlat
out
test
xchg
add
arpl
push
std
cmp
jo
into
cmp
pop
pop
pop
or
adc
cmc
in
cmp
shr
insb
cmp
mov
jbe
adc
pop
lret
je
hlt
mov
ret
cwtl
cltd
cmp
cs
fisttps
movsb
xlat
out
rorl
push
mov
adc
loop
lret
mov
mov
adc
xchg
push
insl
adc
and
dec
adc
mov
inc
sub
jmp
lods
fwait
imul
in
cltd
jo
pop
mov
and
adc
cmp
aas
mov
mov
xor
push
jne
shll
lret
sbb
xor
add
out
lods
mov
lret
pusha
setnp
aas
ja
push
xor
and
sub
push
in
ja
daa
je
mov
sahf
cmc
lret
dec
mov
jnp
mov
xchg
sbbl
nop
outsl
aaa
mov
roll
mov
pop
shl
and
adc
sbb
in
push
fcomps
mov
dec
fsubl
add
lahf
int
mov
push
jmp
cs
js
mov
mov
ss
lds
pop
add
push
or
fldl
adc
jnp
lds
in
inc
jp
scas
cmp
dec
mov
add
dec
gs
dec
in
movsl
add
pop
cs
xchg
pop
mov
aam
iret
dec
adc
mov
ja
lock
mov
int3
sub
das
sbb
rcrl
pusha
add
adc
pushf
scas
mov
in
cmp
and
mov
and
arpl
inc
or
aas
out
cld
ror
mov
xchg
and
push
pop
pop
pop
mov
mov
aad
xchg
mov
enter
fwait
shll
arpl
in
scas
mov
bound
add
or
xor
sbb
xchg
out
jl
nop
and
int
sub
movsl
pop
mov
pop
adc
test
xchg
sbb
push
into
xchg
add
dec
fs
cmpb
push
push
jge
fwait
lea
enter
test
push
sarl
add
in
or
iret
dec
push
push
dec
mov
adc
pop
int
jle
jg
outsb
sub
ss
sbb
scas
cmp
mov
aad
jecxz
adc
xor
cmp
xchg
push
pop
xor
mov
inc
shll
jp
loope
cmpsb
fs
push
insl
push
mov
mov
dec
jp
pop
lods
mov
ficomps
pop
xor
jg
or
test
incl
add
les
je
xor
sbb
ljmp
inc
add
mov
xchg
and
lock
mov
lods
enter
lods
sub
mov
or
fdivrl
sahf
inc
mov
adc
mov
push
jmp
and
inc
mov
mov
mov
icebp
sub
and
xor
add
addr16
pop
imul
gs
lea
scas
ds
adc
sub
sbb
mov
nop
rep
sub
and
sub
shl
sbb
jo
popa
dec
into
mov
mov
pop
call
pop
cmpsb
jl
push
fldcw
pushl
adc
or
int
xchg
outsl
arpl
arpl
jl
xchg
add
mov
sub
push
movsb
icebp
aaa
test
aad
or
jo
jns
mov
lret
bound
add
aad
mov
idivb
dec
sbb
jp
sarb
push
popf
orl
dec
add
xchg
test
addr16
mov
jno
jae
inc
sub
mov
sub
sbb
add
idivl
imul
adc
ljmp
cmpsb
dec
hlt
mov
or
gs
sar
or
xchg
jno
mov
fs
mov
fisubs
insl
orl
mov
shrl
push
insb
cmc
cltd
mov
or
rcll
test
push
and
cmp
cmc
movsb
push
stc
dec
jg
add
cmp
jmp
dec
arpl
pop
adc
sti
jb
notb
arpl
lds
sub
xor
out
xchg
adc
ds
xchg
mov
sti
adc
inc
pop
insl
add
ds
fstpl
xor
add
call
pop
pop
inc
scas
sahf
std
mov
ja
push
pop
jno
mov
ds
cmp
test
bnd
test
mov
clc
lods
loope
xchg
outsb
dec
sar
sub
fnstcw
fldl2e
xor
fimuls
je
lods
lret
push
in
sub
mov
mov
adc
mov
dec
and
pop
pop
inc
and
sbb
and
adc
les
nop
lret
sbb
sub
aad
jg
push
shll
sub
ror
cld
fldcw
mov
inc
fldcw
dec
push
inc
pop
cmp
jo
inc
sahf
inc
mov
frstor
repnz
xorl
push
rcl
xor
mov
jne
pop
loope
scas
jle
fists
push
lcall
pop
xlat
rolb
daa
xor
nop
stc
xchg
aaa
out
jle
push
cmc
mov
lcall
lds
xchg
dec
loop
rcl
cwtl
ud0
outsb
orb
in
mov
imul
outsl
mov
or
mov
int3
mov
mov
cwtl
dec
or
fisttpl
or
insl
or
subl
push
fmul
subb
ficompl
adc
inc
decb
jnp
mov
gs
ret
aad
xor
mov
pop
mov
test
xor
jbe
fcmovnb
sbb
rcl
xorb
in
or
mov
insl
and
sbb
popf
pop
or
add
ss
test
sbb
into
aaa
iret
sbb
sub
pop
dec
push
or
and
add
jecxz
fwait
into
cmp
dec
pop
pop
jnp
dec
sbb
xchg
fidivs
xor
jo
push
jbe
push
mov
insl
push
mov
movsl
lret
jbe
ss
pop
sub
scas
inc
add
in
sti
ret
ljmp
lret
push
stos
ret
enter
xor
adc
inc
es
scas
sub
pop
sbb
outsl
jl
fimuls
enter
cmc
fcomps
sbb
add
dec
adc
ljmp
call
dec
cmp
sub
outsb
scas
aas
mov
pop
xor
in
xor
xor
pop
fstl
rcrl
das
jmp
dec
cmp
fistl
loopne
push
cmpsb
mov
mov
xor
xor
in
and
pop
rclb
lfs
lahf
push
dec
pushf
lock
rcll
mov
int3
push
push
sarb
or
loop
lock
jg
inc
inc
xchg
sbb
adc
mov
adc
aaa
push
daa
add
jecxz
jmp
nop
inc
pop
fwait
test
loopne
jp
push
andb
adc
push
dec
lret
mov
inc
push
jb
xorl
lods
pop
mov
out
pop
cmpsl
fdivp
cs
dec
adc
in
sti
and
push
pop
pop
or
mov
cwtl
dec
push
inc
xchg
dec
jl
mov
jl
clc
out
jge
enter
push
mov
imul
mov
dec
les
pushf
fcmove
das
fstpt
out
jns
push
test
gs
bound
jo
hlt
add
fidivl
xchg
out
mov
dec
cmp
je
push
xchg
rcrb
push
sbb
add
bnd
or
cmc
xchg
inc
bound
and
lret
mov
xchg
mov
lods
pop
in
pop
mov
sub
push
mov
mov
scas
imul
mov
ja
movsb
inc
inc
shlb
loop
push
pop
pushf
lods
or
xor
xor
pop
xchg
cmp
idiv
and
cmpsb
mov
rcr
lret
int
inc
push
dec
pop
imul
jo
sbb
and
mov
into
mov
mov
xchg
sti
mov
stos
xor
ds
dec
add
mov
loop
jmp
xchg
add
ror
adc
jg
je
pop
dec
dec
imul
add
es
lret
xchg
cmp
in
movaps
call
scas
jp
cltd
sub
sub
jp
movsb
and
dec
pop
and
fwait
movsb
lods
and
std
pcmpgtb
push
je
xor
hlt
mov
mov
adc
inc
mov
fistl
or
ss
jne
leave
std
jbe
fstp
loopne
test
push
test
movsl
jle
or
and
int
cmp
add
lcall
enter
cmp
inc
aaa
mov
cmp
pop
cmp
mov
pop
sbb
mov
pop
cmp
arpl
pushf
imul
mov
adc
jecxz
cmp
pop
mov
mov
inc
sbb
or
iret
and
aas
mov
cwtl
pop
jo
pop
lods
insb
xchg
lahf
cs
daa
test
dec
or
out
mov
insb
ja
mov
out
pushf
incb
sti
inc
push
cmpsl
sbb
jns
test
adc
mov
cmp
scas
shll
xorl
imul
pop
cmp
dec
fldl
cld
push
mov
cwtl
test
addl
outsl
dec
pushf
fs
mov
sbbl
std
xchg
add
and
xor
pop
dec
pop
gs
lock
lods
test
lods
or
sub
pop
int3
add
iret
movzwl
sub
sarb
test
mov
aam
ret
mov
push
clc
sbb
inc
pop
clc
in
pusha
sub
mov
loope
test
sahf
jl
xchg
stos
outsl
imul
jae
xor
outsl
mov
mov
aas
jbe
sub
daa
insl
negb
movzwl
test
push
loopne
jle
adcl
push
lods
popf
cmpsb
add
and
lret
or
xor
incl
jno
sub
adc
test
sbb
push
das
je
test
or
inc
ja
push
pop
cmp
push
inc
ss
xlat
gs
mov
shll
lds
jle
pop
adc
adc
push
nop
xor
mov
cwtl
jb
fs
aas
adc
push
pop
fscale
stos
push
jl
mov
mov
mov
sbb
imulb
popa
test
dec
add
cmc
sub
and
stc
cmp
or
iret
pop
dec
test
inc
punpcklbw
pop
inc
fcoml
mov
ret
clc
and
test
out
or
mov
mov
lods
int
xchg
and
je
sub
outsl
mov
int3
out
xor
jge
ljmp
outsb
lock
push
cld
mov
jnp
lea
xchg
in
cltd
sbb
or
sub
mov
push
push
imul
cmc
adc
outsb
xor
test
stc
popa
jl
push
daa
jo
ret
aaa
stos
adc
pop
inc
in
out
scas
loopnew
sbb
mov
in
fnstsw
push
or
mov
adc
sahf
and
fs
ss
lds
call
or
test
sbb
pop
xchg
fisttpl
mov
jnp
in
cmp
loopne
mov
cmp
fcomi
push
adc
add
jecxz
sub
dec
adc
add
pop
filds
cmp
sahf
xlat
cmp
mov
dec
test
iret
inc
or
push
sbb
movsb
adc
lahf
roll
out
cltd
adc
call
cli
or
pushf
in
arpl
jns
sbb
aam
add
loopne
lods
mov
aam
test
mov
mov
push
adc
jl
aaa
andl
mov
or
hlt
ja
xchg
sub
push
xor
mov
mov
mov
into
loopne
mov
mov
jg
sbb
in
notb
mov
mov
mov
movl
cli
jnp
cmp
das
das
mov
mov
cmc
push
andl
int
mov
pop
pop
inc
dec
mov
iret
mov
fidivrl
xchg
shlb
xlat
jmp
pop
lods
cld
or
clc
sub
xchg
icebp
movsb
sub
inc
popa
jo
sbb
jge
loop
mov
iret
sub
cs
imul
push
adc
aas
xor
icebp
bound
push
push
pop
add
dec
bound
mov
mov
lcall
decl
sub
mov
enter
pop
test
xlat
lahf
and
addr16
prefetch
push
jb
lock
lahf
jns
scas
ds
add
insl
in
hlt
sub
jns
adc
xor
stc
lcall
lods
ds
ficompl
cwtl
fnstcw
cwtl
and
push
xchg
add
stc
jg,pn
mov
rcrl
jecxz
or
repnz
push
xor
inc
push
dec
dec
insb
add
into
lods
jb
sbbl
xchg
ret
or
or
std
call
jnp
dec
xor
lret
pop
pushf
cmp
mov
outsl
lahf
xor
jg
arpl
cmp
lods
out
loop
push
inc
mov
data16
mov
rorl
ret
mov
sbb
xor
call
mov
fstps
cmc
sub
mov
mov
jle
popf
lods
inc
inc
dec
les
in
das
inc
push
les
mov
out
push
xchg
xor
xor
xchg
inc
add
jno
fcomi
je
adc
jecxz
aas
xor
adcb
fstpt
mov
aaa
into
mov
mov
dec
cmp
or
loop
push
mov
rcrl
lods
xchg
mov
lods
dec
aas
mov
stos
mov
dec
faddl
in
insl
cmc
sbb
push
mov
jmp
mov
inc
add
out
ss
jmp
aas
cld
mov
fstpl
xchg
sub
add
fldenv
or
test
into
gs
mov
adcl
sub
ljmp
cli
or
and
xor
hlt
fs
push
cmp
add
push
fs
push
addr16
dec
hlt
push
sar
movl
xchg
sbb
mov
pop
jge
imul
mov
add
les
out
test
outsb
jmp
dec
ja
fdivs
cltd
pop
loop
test
cs
cmp
pop
add
mov
jecxz
pop
outsl
sub
repz
pop
push
int3
push
lods
mov
outsl
jnp
or
and
dec
pop
pop
pop
dec
call
fdivrs
jmp
push
and
test
fidivl
lock
mov
into
testb
int3
cltd
add
cmp
out
jae
je
dec
lcall
int3
sub
popf
xchg
cli
pop
rol
xchg
add
cmp
inc
push
pop
xor
rcrl
daa
jp
data16
mov
pop
pop
movsl
rcrb
inc
movsb
inc
add
fstpl
notl
mov
repz
les
aas
adc
mov
outsb
lcall
mov
add
xchg
cmp
lea
mov
pop
push
lods
push
ret
cwtl
gs
pop
mov
xlat
test
push
push
push
push
das
xchg
adc
das
xlat
mov
ja
or
out
int
pop
dec
lods
jp
mov
sbbb
fnstcw
aam
lods
call
mov
fwait
push
scas
notl
lock
or
cmpsl
scas
in
in
xchg
ret
add
je
or
or
xchg
push
ficompl
sbb
mov
fwait
push
xchg
cmp
push
xchg
int3
arpl
pop
insb
cmp
popf
xor
mov
iret
dec
pop
sub
dec
and
subl
pop
loopne
inc
adc
jne
rcll
iret
lret
mov
mov
xchg
aam
dec
and
dec
mov
push
or
or
fs
jno
adc
and
shrb
insl
filds
push
dec
arpl
shl
mov
jmp
shrl
stos
addr16
test
shlb
repz
jg
imul
dec
cmpsb
adc
das
fidivrl
hlt
fildl
mov
pop
ret
mov
add
enter
inc
pop
pop
lods
insl
pop
les
mov
add
cmpb
fildll
add
adc
sbb
cli
add
fstl
addl
xchg
fcompl
pop
cmp
dec
dec
pop
push
sub
nop
in
subb
dec
dec
mov
and
xor
mov
sub
jb
push
divb
cmp
inc
andb
xor
fsubp
pop
cs
ret
nop
inc
aad
mov
fldl
sti
loopne
loope
xor
jbe
mov
arpl
mov
roll
sbb
sub
mov
clc
cmp
push
pop
sub
cmp
test
adc
int3
add
or
mov
daa
jns
std
pop
in
loop
sahf
cmp
pop
mov
push
mov
sbb
push
insb
add
jnp
or
cmp
or
sub
jnp
pop
jle
jl
push
fists
mov
mov
mov
mov
nop
fwait
xor
mov
js
data16
cmp
mov
mov
xchg
lahf
jnp
cltd
dec
mov
push
add
ljmp
jne
mov
test
shufps
or
xor
fists
stc
shll
lock
testl
mov
pop
stc
dec
jo
sub
mov
repz
lahf
les
movl
add
lds
loop
xchg
mov
aam
xor
and
stc
ljmp
hlt
add
xchg
outsl
stos
sbb
mov
lods
cli
xor
push
jle
sub
and
xor
mov
mov
add
iret
paddd
pop
dec
lods
dec
lret
fs
sti
push
push
mov
inc
cmpsb
in
jae
jns
pop
sbb
and
adc
ss
jp
shrb
in
push
call
fdivrl
cmp
mov
xchg
mov
cmp
popa
ja
addr16
shlb
setbe
cmp
lods
jecxz
pusha
scas
leave
je
add
inc
sti
adc
mov
add
dec
cmp
fst
mov
pop
andl
or
mov
das
sub
xchg
negb
sbb
mov
dec
pop
xchg
cltd
mov
test
stc
cmpb
neg
add
mov
pop
loopne
int
jno
jbe
cmc
mov
push
ja
fidivrs
stos
lcall
sbb
cmp
sbb
cmpsl
addr16
fs
pop
xor
cmc
cmp
out
mov
and
rclb
jnp
pop
shll
mov
and
adc
jmp
pop
into
outsl
push
sbb
mov
mov
cwtl
test
pushf
and
out
jns
je
and
pusha
imul
mov
das
or
pop
adc
adc
inc
je
cmc
xchg
jne
xchg
jle
lods
dec
out
lcall
mov
mov
repnz
insl
outsb
into
or
frstor
adc
mov
xchg
lods
jb
shll
jg
inc
lahf
mov
cld
repnz
int
lds
das
inc
mov
sbb
pop
push
mov
ljmp
scas
pop
push
xlat
lea
and
outsb
rcpps
decl
outsl
sbb
call
scas
cmp
shll
mov
lock
pop
jp
jbe
out
lret
jp
addr16
movsb
fwait
lods
test
repz
lret
mov
pop
pusha
lods
or
out
addr16
enter
and
scas
push
icebp
in
pushf
rcr
das
and
adc
das
sub
repnz
sbb
push
out
mov
mov
and
cli
jle
fstl
inc
sbb
sub
test
test
mov
cmp
ret
jns
jbe
scas
rorb
repnz
mov
addr16
in
pop
pop
sub
xchg
lds
add
into
call
inc
js
loop
dec
jnp
xchg
mov
fldt
movsl
popa
mov
ss
adcl
les
jne
jns
or
lret
push
add
sub
je
push
out
mov
pop
xchg
call
pusha
dec
imul
and
addb
jmp
jns
jno
xor
xchg
shrb
push
mov
jns
fcoms
push
lahf
out
or
or
lahf
js
inc
or
jnp
sub
sbb
sbb
test
push
adc
ja
push
inc
shll
popa
fmul
lcall
ret
movsb
jae
inc
adcl
ja
imul
cld
adc
pop
sub
jg
pop
fs
inc
inc
mov
enter
pop
sub
cmp
jbe
pop
aas
pop
pop
dec
in
inc
fadd
cltd
mov
arpl
int
dec
popf
fisttpl
push
sub
imul
imul
outsb
jo
ja
lods
sub
cmpsb
adc
cmp
push
in
mov
aas
push
xchg
ljmp
scas
push
mov
cmp
dec
call
test
enter
lods
jbe
mov
clc
popf
cs
je
dec
cmp
and
hlt
inc
loopne
lds
daa
mov
ret
and
xchg
leave
lods
ret
mov
cmp
imul
sti
dec
loopne
add
sbb
aaa
push
sub
lcall
jp
clc
decb
pop
fstps
mov
sarl
xor
lahf
xchg
in
nop
outsl
cmp
mov
ret
cli
jae
mov
aaa
cmp
mov
sbb
sbb
sbb
sub
gs
movsl
pop
mov
pop
xchg
arpl
imul
mov
ret
fsubrl
pop
arpl
push
fwait
sub
fistl
push
test
and
rolb
in
insb
ljmp
outsb
jne
and
pop
sub
sub
aas
mov
test
lcall
xchg
or
xchg
gs
cmp
adc
cli
movsl
push
jl
sbb
out
lret
loop
ss
ljmp
inc
sub
outsl
jnp
xchg
aad
mov
subb
sarb
jae
inc
insl
and
stos
pop
gs
iret
push
or
in
pushl
mov
inc
dec
dec
xchg
in
sub
sub
xor
inc
dec
hlt
sbb
sbb
inc
insb
scas
inc
mov
xchg
inc
mov
cmc
mov
loopne
ret
in
adc
jns
jecxz
test
mov
sub
dec
outsb
cmc
cld
fs
pusha
jmp
es
lds
push
popa
sahf
test
dec
pop
push
pop
negl
mov
lods
pop
and
inc
pop
jecxz
fcomp
dec
xor
or
jle
fwait
or
sub
dec
jl
cs
pop
gs
fisubs
imul
push
or
sub
movsb
pop
loopne
pop
popf
ja
stos
add
sub
data16
lret
aad
icebp
lock
push
pop
or
push
sbb
aad
incb
and
aas
sbbb
lds
mov
mov
int
ret
push
push
es
and
or
cltd
push
cmp
cmpl
pusha
rol
inc
jbe
jmp
cmc
sub
fistl
and
aad
cltd
inc
push
sbb
cmp
adc
or
dec
lods
aas
xchg
rcl
jl
loopne
ss
pop
ret
lds
push
mov
cmp
popa
push
dec
mov
loop
les
xchg
sbb
jecxz
stos
inc
lods
loop
pop
mov
dec
push
inc
cli
pop
dec
mov
cli
sti
cli
jecxz
xchg
fsts
mov
int3
dec
push
mov
adc
adc
inc
in
aas
dec
int
int
cmp
mov
jno
aad
inc
jmp
popa
add
fucomip
pop
or
leave
pusha
gs
mov
mov
mov
cmc
lret
mov
mov
mov
mov
adc
sbb
jecxz
push
loop
and
sbb
es
pusha
push
data16
or
jo
ret
inc
divl
push
push
test
xor
jl
and
sti
pop
dec
aas
push
jne
push
cld
xorl
out
sub
out
sbb
hlt
xchg
cltd
sbb
outsb
adc
fidivl
scas
and
ret
pop
and
leave
loope
cld
or
lret
mull
cmpsl
cmp
dec
adc
sub
push
out
push
sbbl
jnp
xchg
aas
xor
xor
je,pt
xor
dec
mov
mov
movsl
les
inc
insl
out
add
ja
ret
pop
dec
jp
cmp
frstor
adc
and
inc
dec
in
inc
xor
or
addr16
pop
xlat
dec
inc
dec
xchg
fdivrl
or
jb
mov
adc
loope
jno
movsb
pop
cmpsl
sub
cltd
cld
mov
cmp
jno
ss
adc
pusha
push
push
out
mov
push
push
rol
fcmovu
jb
fldcw
xor
push
daa
imul
mov
loope
jnp,pt
pop
mov
xor
push
push
push
adc
and
cmpsl
sahf
add
dec
add
stc
jl
jp
jecxz
jle
xadd
inc
setle
repz
dec
int3
testb
addr16
bnd
dec
sbb
enter
cmp
mov
stc
pop
adc
or
add
lea
lahf
mov
ret
movsl
mov
sub
les
or
jmp
mov
ret
sbb
mov
mov
jo
adc
pusha
lods
inc
inc
lret
rorb
lret
aas
jecxz
inc
shll
repnz
jae
sub
je
mov
mov
xchg
fwait
inc
mov
dec
jne
mov
cmp
xchg
lock
xor
sbb
iret
sbb
lods
mov
popa
adc
sbb
jae
bound
inc
aaa
int3
cmp
push
cld
adc
out
mov
or
or
xlat
push
arpl
dec
pop
scas
jae
cmp
push
jecxz
bound
add
jae
push
icebp
adc
xor
loope
or
std
popa
push
jg
sub
push
daa
mov
je
movsb
pop
xchg
dec
les
xor
into
mov
adc
sub
je
dec
ds
clc
and
lar
cmp
adc
xchg
jns
in
idivl
test
cs
cltd
sub
xor
xchg
daa
popf
les
repz
push
adc
lcall
sub
jp
ljmp
jae
fwait
sub
push
add
add
inc
test
adc
sub
pop
jb
inc
js
cld
popa
imul
out
scas
mov
mov
aas
addr16
jbe
scas
lea
in
jl
jne
ss
test
js
sbb
or
inc
cmp
shl
je
xor
mov
gs
push
rcr
jp
push
cmpl
jne
aaa
mov
mov
imul
jp
mov
icebp
icebp
filds
lock
xor
mov
sbb
jle
inc
pop
and
mov
rol
icebp
mov
fs
cmc
stos
scas
xor
shll
icebp
cmp
xor
hlt
mov
xor
add
fcomps
dec
mov
pusha
cmp
xlat
add
cmp
inc
mov
lods
loop
xor
dec
stc
sub
jbe
xor
out
ds
addb
ds
clc
das
jne
outsl
xchg
adc
icebp
icebp
mov
adc
shlb
mov
mov
xchg
pop
and
pop
fldt
icebp
mov
jmp
xchg
xor
pop
dec
loop
sar
sti
inc
inc
stos
arpl
and
int3
lods
sbb
fimuls
loopne
aas
enter
pop
dec
push
cmc
leave
inc
sbb
out
mov
fwait
out
pop
push
sub
adc
movsl
pop
stos
pop
mov
in
shl
mov
je
inc
sbb
rclb
fs
adc
push
mov
ja
mov
test
adc
adc
dec
xchg
aaa
jno
in
call
cmpsl
rorb
outsb
pop
mov
cmp
mov
clc
lret
cwtl
les
cmp
cwtl
add
xor
sti
test
data16
lea
sti
fcoms
pop
fsubr
mov
jbe
imul
inc
adc
loop
arpl
imul
mov
inc
sbb
fimull
movsl
jge
fwait
les
in
gs
stos
and
sahf
xor
aad
lcall
push
cmp
xchg
adc
jge
ror
push
ljmp
pop
mov
aas
mov
pop
jo
push
adc
xor
dec
out
arpl
jnp
or
cmp
ffree
add
push
mov
icebp
outsb
cmp
jno
adc
pushf
repnz
out
jl
dec
daa
and
out
bound
fmulp
imul
lahf
scas
push
fcomps
sbb
dec
lds
outsb
push
mov
cmc
pusha
cwtl
ss
xchg
cmp
sub
or
sbb
or
pushf
sub
sbb
inc
mov
in
stos
mov
inc
jle
push
mov
or
int
js
cwtl
pop
sub
lret
lahf
scas
pushf
xchg
cmc
test
pop
jg
pop
ficoml
fninit
clc
adc
call
fcompl
lcall
lds
push
cmp
fsubl
lods
ret
inc
push
or
cwtl
pop
cs
mov
push
jae
xchg
mov
cmp
or
cmpsl
rcrl
daa
adc
nop
fs
daa
sbb
mov
jecxz
jbe
sub
mov
mov
sbb
repz
dec
push
xor
js
mov
aam
lret
scas
dec
out
jg
cs
mov
mov
jg
in
cmc
sub
popa
add
mov
gs
xchg
movsb
fwait
andl
mov
arpl
std
adc
leave
or
jle
lret
and
sarl
jmp
es
insl
pop
lods
adc
inc
lock
pop
push
hlt
mov
or
in
lret
and
xor
pop
bound
xchg
das
ds
mov
popa
or
or
jge
in
cld
imul
js
inc
lods
or
mov
mull
push
add
cmc
icebp
in
xchg
mov
mov
shrb
inc
sub
clc
mov
loop
out
mov
add
or
clc
push
xor
jge
cmc
push
or
out
rorl
push
mov
cs
inc
and
ret
cmpsb
jp
adc
out
in
rcll
inc
mov
lds
sti
fisubs
in
dec
ljmp
xor
mov
call
add
nop
movl
icebp
jge
es
inc
sbb
or
call
add
shrb
sub
ror
mov
lcall
enter
inc
fnsave
jno
jbe
pop
sbb
je
sbb
and
pop
lods
bound
and
xchg
xchg
jp
mov
xchg
push
in
stc
outsl
cltd
push
sbb
jnp
fisttpll
jae
or
sub
pop
push
negb
ss
ss
mov
cmpsl
mov
inc
mov
push
mov
dec
push
data16
mov
inc
fbld
sbb
cmp
adc
fdivp
and
add
outsl
iret
pushf
out
jb
pop
cmc
int
adc
or
pop
rcl
xchg
jmp
iret
test
out
lcall
xor
into
pop
push
in
mov
add
aad
inc
daa
xor
and
call
inc
cmpl
mov
rorl
push
icebp
xchg
mov
pop
dec
dec
pop
push
out
xchg
cli
push
mov
es
jge
push
lret
inc
cmp
pop
loopne
icebp
dec
mov
fwait
addr16
jle
xchg
inc
data16
push
mov
rclb
pusha
imul
scas
adc
imul
jge
shlb
lods
loopne
inc
je
sti
xstore-rng
cmpsl
ret
scas
pusha
xor
in
mov
outsl
ja
lods
push
mov
dec
sti
int3
fstpt
xor
mov
gs
cld
scas
jmp
sti
jp
pop
sub
pop
push
xchg
adc
jbe
cltd
push
inc
sbb
mov
fcompl
jmp
xchg
test
cmp
and
mov
shr
sti
in
dec
cmpsb
push
mov
xor
aas
iret
sub
insl
xor
lds
xor
out
cltd
jnp
test
jle
movsl
xchg
adc
pop
jmp
xchg
inc
lds
xchg
dec
test
dec
shlb
jo
vmread
fistps
movsl
sub
outsl
pop
inc
call
sahf
and
dec
pusha
incl
int
mov
sahf
cmpsl
dec
mov
pop
test
pushf
out
div
outsl
ret
or
ds
lock
and
movb
add
jno
jmp
inc
jns
popa
mov
push
negb
dec
fcoms
mov
inc
xchg
pop
addl
arpl
jae
jb
inc
loope
scas
push
repnz
jmp
repz
add
push
mov
mov
lds
mov
lret
sub
movsb
add
sub
fcompl
lock
xor
push
fdivrs
add
test
push
ret
lock
fnstcw
xor
add
dec
or
jmp
popa
mov
cmp
push
loope
rorb
sbb
push
stc
dec
in
sub
cld
jo
je
cld
mov
pop
mov
lods
inc
orl
rclb
and
loop
lret
jns
xchg
push
push
mov
out
add
dec
rcr
xchg
leave
add
dec
push
lds
adc
add
addr16
xor
pop
ja
xlat
lock
adcb
mov
aaa
cmp
or
inc
add
mov
fistl
mov
cmp
push
cmpsl
movsl
mov
jne
xchg
imul
mov
in
ds
jne
cmp
adc
dec
outsb
out
sub
dec
out
push
cmp
js
xchg
int3
je
dec
daa
std
jno
sbb
insb
je
data16
dec
in
mov
jo
mov
test
mov
clc
sbb
aaa
cli
imul
fmull
xchg
add
cmp
pop
int3
negb
mov
and
ret
pop
xchg
in
bound
jle
iret
jmp
shlb
mov
jnp
stos
push
xor
test
loop
pop
jmp
ret
fnsave
js
in
outsb
lods
pop
or
pop
push
adc
cmp
push
pop
addb
and
mov
in
fistpl
fs
add
imul
movsl
mov
loope
add
adc
pop
cmpsb
push
jb
mov
loope
out
inc
fstl
pop
lods
pop
dec
sbb
push
jnp
loopne
rorl
imul
in
xchg
mov
or
dec
adc
les
daa
inc
push
test
lcall
daa
push
clc
addl
sbb
jbe
into
inc
add
adc
push
stos
addr16
push
aas
daa
mov
shlb
aaa
pop
popa
loope
dec
push
sbb
cli
xor
insl
jle
lods
in
divb
lock
jb
jge
or
and
idivl
repnz
add
aas
jl
xor
das
dec
pop
xor
aas
lds
mov
std
adc
jnp
xor
sub
loope
jmp
cs
xor
cs
ret
lret
mov
or
andb
jle
push
pop
cli
mov
movsb
dec
cmp
push
adc
cli
das
pop
movsb
jae
stos
out
push
adc
sbbb
mov
cmpsb
fs
mov
mov
mov
stos
into
shrb
jmp
mov
insb
mov
fdiv
mov
out
or
cmpsl
andb
jns
loope
mov
es
arpl
push
loop
repnz
mov
xchg
jae
in
aam
push
mov
dec
cli
in
add
scas
jnp
ljmp
cmp
or
rorl
stc
jle
adc
or
fs
xorb
add
nop
jae
inc
ret
xchg
and
aad
call
popf
xor
cmpb
mov
ss
sbb
repnz
push
fadds
dec
cwtl
jp
cltd
test
push
hlt
pop
mov
and
mov
or
dec
mov
lea
jle
sub
in
pop
leave
lcall
push
jecxz
mov
in
out
dec
movsl
pop
and
addr16
xchg
psrlq
inc
dec
sub
adc
lret
dec
sub
sub
je
adcl
jl
jns
jae
cmpsb
movsb
xor
mov
roll
divb
cmp
and
dec
arpl
jno
jns
sub
pop
popa
test
mov
mov
jge
sbb
cmp
cmp
mov
clc
es
js
push
and
inc
xor
pop
outsl
sti
sub
pop
sbbb
fdivs
mov
mov
mov
adc
pop
dec
add
jecxz
or
mov
loopne
mull
push
dec
push
sarl
xchg
xor
int
add
pop
sub
out
dec
mov
pop
frstor
mov
xchg
or
andb
lods
jmp
push
adc
push
mov
loop
mov
mov
adc
push
push
in
cmp
cmpsl
lds
lock
stos
lret
push
loopne
call
xor
jns
adcb
xchg
rep
insb
and
cld
mov
fistpl
pop
lret
dec
into
lods
xor
test
add
push
jb
sarb
dec
or
mov
pop
jge
fmuls
in
jmp
xor
xor
mov
js
cmpsb
mov
ficoms
mov
xchg
sub
rorl
cwtl
aam
scas
lret
sub
xor
jl
mov
dec
dec
cli
insb
mov
js
scas
dec
and
or
mov
imul
bound
mov
xchg
mov
and
dec
daa
or
loope
xchg
adc
outsl
push
fwait
insl
push
scas
lods
scas
inc
jo
popa
clc
sub
ja
aaa
xor
dec
xchg
mov
xchg
sbb
pop
sahf
lea
push
inc
in
fsubrs
out
outsl
mov
sbbb
rorl
sub
mov
sahf
in
dec
imul
pmaxub
sub
subb
jp
outsb
pop
sbb
mov
sahf
adc
jnp
cli
popa
incl
jmp
xor
adc
pop
mov
mov
xor
or
div
inc
lds
add
fsts
loopne
into
jo
and
mov
sub
popa
xchg
dec
add
pop
xor
mov
loop
outsb
jecxz
loop
jno
jae
out
xchg
int3
stc
jb
pop
out
mov
sbb
dec
mov
movsl
popa
xor
sbb
out
ljmp
sti
dec
cmp
ret
pop
js
push
cwtl
cmp
movsb
daa
jg
sub
rorl
or
adc
dec
sbb
sbb
rorl
sahf
sub
rcl
mov
lds
ljmp
nop
in
repz
mov
sbb
mov
sbb
ret
out
push
sub
inc
mov
mov
add
sbb
stos
outsl
in
mov
add
es
mov
fadds
icebp
dec
mov
pusha
push
cltd
arpl
lods
add
stc
add
cmp
rclb
aad
int3
inc
mov
cld
xor
adc
inc
dec
inc
xor
inc
jle
xchg
xchg
mov
mov
and
stos
mov
lds
enter
inc
daa
in
xchg
stos
mov
cmc
jne
sub
mov
sbb
jp
add
jne
mov
outsb
out
jb
push
lods
push
cmpsb
or
cli
and
imul
in
xchg
call
les
sti
fld
add
mov
push
loop
inc
dec
aas
push
fildl
in
data16
dec
cmc
pop
faddp
into
dec
pop
out
jo
sbb
insb
lds
cmp
mov
mov
lret
dec
jg
cmp
stos
es
xor
adc
sbb
test
cwtl
bound
out
xchg
mov
test
bnd
adcl
loop
or
cs
das
jmp
fstps
fs
jle
insl
imul
daa
and
cltd
sub
xchg
add
pop
loopne
scas
cmc
das
iret
mov
cld
mov
push
jo
jbe
test
inc
sub
testb
pop
add
pop
ret
or
fmull
mov
inc
push
mov
inc
int
int
popf
adc
loopne
rcll
js
cmpsb
xor
pop
xchg
inc
pushf
mov
nop
sbb
loopne
push
mov
jl
leave
inc
jmp
push
iret
iret
xor
and
inc
pop
arpl
or
or
test
push
cmp
mov
popa
sbb
or
or
les
sub
add
pop
or
pop
inc
adc
xor
mov
js
jae
ret
and
mov
add
stc
or
js
incl
sub
push
dec
fstl
sbb
inc
cmp
push
sub
inc
or
mov
jb
xchg
sub
sub
ret
push
jp
sbb
cmp
push
xchg
jae
dec
or
loopne
jge
mov
xor
ror
jmp
aas
push
inc
negb
loope
in
pop
jb
jo
and
mov
dec
in
ror
aam
adc
fwait
call
xor
outsl
lea
xchg
cld
out
arpl
loopne
js
or
add
or
push
mov
shll
pop
lea
in
mov
mov
xchg
lods
mov
mov
inc
add
xchg
cmp
lret
cmpsb
aaa
or
cmp
fbstp
jmp
or
test
int
movsb
pop
xchg
fistps
add
into
loopne
jl
jl
jnp
cmpb
push
scas
shl
lock
fnstsw
daa
mov
dec
cmp
and
xor
jae
popa
cmp
xorb
push
pop
push
push
sahf
mov
mov
bswap
pop
roll
xchg
arpl
dec
in
mov
pop
cltd
fwait
pop
jns
clc
aaa
in
call
aas
cmp
dec
jns
test
shrb
hlt
push
push
arpl
addr16
inc
cwtl
daa
add
std
pop
addr16
mov
in
inc
adc
cs
cmpsb
push
dec
jbe
icebp
add
jmp
dec
aad
ljmp
inc
int
xchg
mov
push
shlb
mov
xchg
dec
jno
and
scas
mov
pop
call
pop
insl
cmp
adc
push
lahf
cs
enter
or
out
cmp
dec
shrl
mov
lock
xchg
mov
mov
subb
or
xor
pop
loope
in
std
in
cmp
sub
lods
adc
stc
pop
pop
fs
gs
scas
outsl
mov
clc
repz
jae
and
dec
mov
mov
icebp
andl
lods
out
in
pop
and
xchg
pop
imul
in
loope
push
jne
and
pop
loope
outsl
dec
pusha
cmp
jb
pop
aaa
sti
inc
in
ret
mov
mov
dec
movsl
inc
lods
out
das
arpl
pcmpgtb
data16
dec
fnstcw
mov
aam
add
pop
mov
pop
jmp
call
pop
push
loope
and
fistl
lock
into
jl
xor
cmp
rcll
std
cmpb
push
call
mov
rcrb
or
in
xchg
sub
ss
adcl
mov
mov
outsb
std
test
mov
enter
and
and
loop
ror
int3
adc
xor
ljmp
lret
or
or
fisttps
mov
mov
cwtl
jp
fistl
ret
cs
ret
mov
out
pop
shll
popf
mov
sbb
fwait
inc
cmp
pop
cli
or
push
mov
jp
inc
out
adc
lret
int
mov
inc
adc
sti
xchg
in
or
push
stos
xor
call
fistps
or
scas
or
jns
scas
mov
xchg
inc
int
aaa
mov
jp
mov
xor
hlt
dec
push
cmp
add
push
lods
inc
mov
das
aam
mov
jne
jb
push
xchg
sarb
pop
or
lea
mov
dec
scas
jb
imul
or
imul
and
loope
popf
xor
test
sahf
sub
jno
aas
sub
add
jo
shll
popf
mov
inc
cltd
push
rcll
sti
imul
push
inc
jmp
int3
ret
cmp
jge
or
inc
xor
aam
das
outsb
rcr
pop
jnp
inc
fbstp
cmp
orb
xor
cmp
idivl
inc
and
mov
mov
cmpb
dec
lahf
xor
movsb
mov
mov
in
push
lret
sbb
mov
dec
cwtl
inc
pop
sub
pop
in
sub
pop
inc
pusha
lret
xchg
loope
aam
shlb
clc
xchg
sub
add
and
outsl
fstps
rcr
addl
lea
inc
data16
movsb
inc
pop
aam
int
in
ret
imul
push
jns
mov
movsb
push
out
out
pop
sub
scas
pop
adcb
mov
pop
or
fstpl
jb
jne
rcll
nop
jno
lea
scas
push
sahf
add
into
int
sbb
int
adc
cs
xchg
loopne
dec
insb
lds
adc
pop
and
sbb
aam
inc
movsb
in
sub
stos
scas
mov
mov
push
outsl
bound
cmp
jno
push
hlt
dec
and
sbb
jmp
movsb
pop
cwtl
call
movups
fdivr
outsl
jb
movsb
pop
int3
sub
in
mov
fwait
jmp
dec
in
adc
jp
enter
push
sbb
insb
test
sub
inc
push
inc
xchg
add
jle
insb
popa
scas
jmp
jo
in
push
or
and
push
ds
sbb
cmp
int3
jnp
cmp
out
pop
inc
add
add
and
cltd
and
into
outsb
pop
dec
pop
fildl
lods
xor
mov
data16
outsl
jecxz
jb
adc
and
stos
dec
sbb
jp
es
lock
dec
in
aad
xlat
lods
lret
popf
fwait
test
mov
or
aas
repnz
push
lods
and
cli
pop
xchg
cli
sarb
imul
adc
cmp
push
jecxz
xacquire
setge
adc
cmp
fcmovnu
dec
pop
leave
sub
mull
adc
loopne
cs
jge
and
xor
push
bound
inc
cwtl
push
iret
fstl
xor
pusha
sbb
mov
lcall
in
into
popa
sbb
sbb
pop
les
mov
pusha
hlt
push
add
dec
cmp
pusha
push
rcr
pop
jmp
push
adcb
out
cli
andb
sub
jno
mov
adc
jmp
mov
xchg
sbb
stc
or
adc
arpl
mov
das
jg
aas
push
dec
cmp
xchg
and
stos
imul
loope
add
loopne
adcl
push
shll
test
cs
mov
adc
jecxz
ret
sbbl
jbe
orl
loope
cmpsl
push
mov
test
dec
push
ret
fidivrl
push
add
pop
leave
inc
loopne
push
aam
adc
dec
testl
ret
pop
gs
popa
dec
dec
cmp
sbb
mov
dec
dec
mov
and
stos
inc
into
rep
jns
xor
mov
out
imulb
addr16
cmp
push
ret
adc
aas
mov
adc
push
jp
ja
std
jnp
pop
addr16
xor
and
push
mov
loopne
and
mov
push
sub
mov
dec
das
ss
scas
in
sbb
mov
xchg
sub
fs
or
in
jecxz
mov
sub
adc
xchg
add
cmp
push
leave
mov
xchg
int3
mov
ja
xor
ljmp
out
mov
mov
out
pop
xlat
xchg
pop
es
cli
push
mov
dec
adc
push
xor
scas
les
mov
push
mov
jnp
out
xor
cmc
stc
enter
popa
js
lods
mov
fdivrl
das
add
dec
xchg
inc
scas
xchg
data16
xor
adc
fs
outsb
les
scas
ret
pop
dec
pop
push
scas
jp
lcall
sub
popa
imul
mov
or
dec
dec
clc
add
mov
cmp
sbb
cltd
xchg
js
iret
inc
scas
inc
cmc
mov
movsb
cmp
jp
inc
jo
cmp
jnp
fnstenv
inc
in
or
sbb
or
xchg
push
cmp
je
sbb
jl
xor
repnz
lods
xor
scas
stos
mov
jae
cmc
fstpl
dec
es
fnsave
pop
lahf
dec
xchg
cmp
imul
out
push
cmc
sub
xor
mov
cmp
lahf
fcoms
adc
mov
mov
out
mov
xchg
sub
es
scas
orl
xor
or
jl
out
mov
mov
inc
popf
mov
or
sbb
xor
xchg
sbb
jmp
fstps
dec
nop
shll
add
icebp
arpl
dec
repnz
xchg
lret
ret
inc
mov
scas
xchg
pop
hlt
sti
imul
cli
das
stos
and
in
or
xor
adc
pushf
shr
stos
es
stc
pop
in
and
pushf
pop
jnp
shrb
mov
mov
lahf
sub
mov
loopne
gs
adc
int
in
test
mov
daa
sub
cltd
cmp
xchg
data16
data16
es
movsl
iret
lea
add
outsb
mov
xchg
sub
into
inc
out
rolb
xor
bound
push
cmpsb
fcompl
test
nop
xor
repnz
inc
loop
add
das
adc
jmp
nop
clc
fsubl
mov
scas
mov
sub
inc
mov
ds
int
xchg
nop
ret
xor
mov
inc
push
push
rclb
mov
xchg
xchg
cs
mov
lret
mov
mov
mov
mov
pop
std
mov
mov
arpl
sbb
in
xorl
cmp
xor
outsb
cmp
push
mov
lret
mov
xchg
ret
pop
repz
adc
inc
sub
jmp
jno
pop
sub
leave
ja
mov
sub
rclb
popa
dec
pop
and
daa
push
xor
sahf
fiaddl
outsb
sub
shrb
mov
repnz
mov
jmp
movsl
loope
push
jne
cmp
push
inc
xchg
bound
popf
add
lods
push
xor
xor
dec
mov
mov
sub
cmp
fstpl
test
jle
dec
mov
in
mov
or
or
int3
pop
les
outsl
inc
cmp
in
push
stos
in
sub
fwait
out
pusha
iret
or
sbb
adc
punpcklwd
sbb
inc
call
in
jmp
mov
cld
mov
sarl
sbb
mov
lahf
data16
jg
shlb
pop
pop
loop
in
insl
jno
addr16
push
jno
scas
imul
push
push
pop
lret
push
fldenv
mov
out
repz
jb
xchg
or
rol
lahf
lock
sub
lcall
in
lahf
lock
inc
lds
jg
subl
sub
jl
push
in
cmp
loop
push
cmp
bound
jae
adc
loopne
jge
test
jne
loop
jge
in
stos
rorb
dec
xor
rolb
call
lods
and
ret
jge
pop
lahf
add
mov
cmpsl
and
adc
mov
fnstcw
fwait
push
push
adc
dec
jl
fldenv
int
xchg
xchg
repz
pop
fs
int3
add
aaa
mov
sahf
pusha
loope
out
push
inc
jne
jmp
jg
adc
and
retw
dec
mov
outsl
fisubs
scas
dec
fildll
out
sbb
inc
inc
pop
arpl
mov
push
ljmp
lcall
jle
mov
lahf
pop
lea
jbe
mov
sbb
adc
jae
or
push
test
cwtl
dec
rorl
cmp
std
push
adc
out
gs
cmpsl
repz
dec
add
jnp
dec
imul
negl
mov
pop
daa
jae
in
adc
add
jl
cmp
push
in
cmp
pusha
xor
cmp
jo
cmpsb
or
movsl
lea
hlt
mov
pop
call
add
pushf
inc
fdivs
xchg
leave
dec
inc
ja
mov
out
pop
or
in
xchg
mov
dec
mov
aam
int
std
lds
cmpsl
lret
sbb
push
mov
jp
cwtl
mov
mov
movsl
dec
in
pop
jo
in
in
jns
sub
popa
fstps
sub
ds
insl
mov
cmovae
pop
popa
mov
rcl
cmpsl
and
insl
addr16
mov
add
sbb
lods
adc
test
frstor
inc
loope
mov
sbb
jo
and
adc
call
shll
pop
test
mov
movsb
jb
pop
movsb
and
cltd
popf
neg
sub
call
sub
insl
dec
cmp
movsl
int3
mov
mov
movsb
into
push
cmp
sub
or
cmp
mov
call
rorl
ds
xchg
mov
stc
jbe
mov
fdivrp
push
cld
cmp
cmp
sbb
pop
jmp
push
call
and
je,pn
rolb
inc
xor
mov
dec
push
lret
sub
in
test
inc
scas
iret
imul
jg
cmpsl
push
sub
sub
ds
mov
hlt
push
pop
jo
orb
lds
out
jg
ret
fdivrl
sahf
nop
pop
daa
fists
hlt
push
xlat
aad
dec
mov
push
sti
inc
pop
cmc
scas
cltd
xchg
pop
lahf
xchg
imul
cmpsl
imul
mov
add
push
sub
jmp
fistl
sub
adc
inc
lds
xchg
dec
pop
sar
adc
fs
xchg
xor
pop
or
and
push
das
pop
mov
or
cmp
push
les
mov
lock
push
sbb
dec
jae
mov
mov
pop
mov
xchg
pop
push
cli
int3
xchg
in
pop
insl
fbstp
scas
adc
cmpsb
aas
scas
add
cmp
jbe
sbb
lea
cmp
mov
lcall
dec
pop
sub
adc
push
mov
dec
or
mov
xor
bound
and
pop
scas
inc
jecxz
imul
sub
mov
mov
mov
inc
aam
inc
and
outsl
sbbw
popa
mov
mov
jecxz
imul
popa
lods
test
xchg
or
mov
out
in
jg
enter
push
leave
xor
pop
dec
or
dec
std
mov
push
and
cmpsl
dec
ljmp
jl
sub
jge
mov
int
insw
cmp
je
sahf
dec
mov
das
imul
orl
popf
mov
xchg
ja
daa
cmc
lds
sub
pop
sub
jmp
jmp
jns
loop
jg
mov
inc
mov
dec
cmp
jae
push
push
fnsave
jmp
dec
arpl
sub
gs
push
jnp
adc
test
and
mov
inc
mov
je
sti
das
icebp
xchg
lds
cmp
push
lret
mov
cltd
jb
orl
outsb
xchg
push
repnz
bound
pop
mov
fisttpl
in
popa
pop
dec
or
adc
pushf
dec
pop
stc
xor
dec
mov
cli
or
xlat
subb
cmp
jge
sti
push
push
xor
dec
and
xor
adc
sub
repnz
test
jl
outsl
arpl
xchg
rcl
call
ret
jg
shrb
ljmp
dec
or
shll
nop
loop
int
stos
aaa
xchg
flds
movl
pop
cmp
scas
push
fnstenv
xchg
cld
hlt
movsb
push
push
loope
ds
cmpsb
fldenv
cltd
xchg
mov
xchg
mov
jbe
and
fisttpl
aad
rorb
incb
add
test
negb
popf
call
dec
dec
lock
lock
ret
mov
xor
icebp
xor
add
js
mov
mov
cmp
mov
cmpl
das
adc
jge
iret
mov
add
cmpsb
imul
add
outsb
les
push
xchg
or
xor
pop
in
orb
and
lea
ja
or
out
dec
sbb
mov
imul
mov
mov
out
xchg
cmp
fldt
stc
mov
jbe
cs
call
lret
dec
aas
sahf
xchg
xchg
xor
ljmp
inc
inc
xor
scas
sub
loopne
pop
jbe
jne
div
int
add
jge
pop
fidivrl
bound
inc
mov
mov
push
or
lcall
xor
inc
cmp
sbb
mov
pop
out
jnp
adc
test
outsl
stos
mov
or
cmpsl
jmp
mov
add
pop
ja
push
xchg
push
jg
stos
and
repnz
and
cld
mov
jae
sub
xchg
and
push
in
jge
mov
mov
fidivl
push
ja
xchg
loop
mov
cli
lods
dec
out
fisubl
cmpsb
dec
cld
popa
cltd
add
movsb
xchg
push
pop
cmp
sub
jp
pop
mov
xchg
push
hlt
aaa
in
dec
adc
daa
add
and
jecxz
sbb
imul
shrb
push
adc
outsb
popa
test
aad
jb
xlat
aam
out
cmc
dec
fstl
inc
or
cli
xor
push
fadds
pop
popf
fistl
cmp
dec
dec
mov
loope
fisubl
dec
add
push
popf
subb
stos
mov
insb
stos
lea
push
movsl
shrb
pop
pop
xor
dec
lret
add
out
mov
push
cld
rclb
or
out
clc
mov
into
xorb
fwait
in
push
out
mov
lds
lcall
adc
loope
xchg
fldl
jle
lcall
cmc
cmp
xor
xor
cmpb
aas
shrl
sub
call
dec
stc
das
jl
ss
test
or
test
je
stos
lock
mov
add
mov
inc
push
cmp
js
adc
out
push
jne
inc
in
dec
stos
xchg
fs
decl
stos
pop
jg
sbb
pop
push
pop
imul
adc
dec
jnp
movsl
adc
into
mov
call
divl
jge
add
scas
adc
outsb
push
mov
sbb
fsub
dec
mov
aas
addb
push
imul
sub
mov
mov
fildll
pop
mov
ffree
cltd
fwait
or
loopne
pop
push
popa
scas
add
call
stc
xchg
add
sbb
in
daa
and
out
outsb
pushf
aam
iret
pop
test
pop
rcr
cmpsl
add
sub
ret
xor
test
fistpl
sub
ss
cld
ds
neg
push
xor
inc
push
push
or
fs
xchg
xor
fnsave
cmp
mov
stc
rcr
fdivrl
mov
push
or
jg
mov
adc
sbb
rcrl
movsl
add
mov
shrb
lock
push
repz
pushf
jns
pop
js
mov
ljmp
sub
sbb
stos
sub
mov
mov
jae
aaa
push
fisubrl
hlt
push
pop
es
jecxz
mov
push
out
test
imul
hlt
mov
repnz
sub
jo
fstpt
iret
adc
dec
pop
mov
pop
cmp
and
inc
lods
scas
sbb
inc
test
in
std
ficoml
sbbl
lret
jmp
aad
push
add
mov
out
sbb
cld
adc
imulb
shll
sub
cmp
xchg
mov
dec
pop
rorl
cs
dec
sbb
loope
out
insb
pop
imul
out
cmp
dec
inc
js
jns
mov
sbbb
or
sub
push
jae
xchg
rclb
dec
mov
lret
xchg
ret
fstpl
dec
add
mov
mov
inc
movzbl
inc
push
cmp
aad
dec
ja
fldl
lock
aaa
daa
fldl
add
inc
sbb
pop
xchg
or
mov
adc
clc
adcb
out
xchg
or
and
mov
cs
pop
leave
arpl
call
test
outsl
out
and
push
mov
pop
mov
loopne
ss
xchg
in
mov
jge
mov
cs
outsb
cmp
push
push
stc
mov
jno
pop
subl
pop
fldcw
cld
mov
shlb
xor
or
fbstp
push
sbb
ret
loopne
add
push
cmp
cmp
fcoml
mov
flds
mov
dec
mov
and
cld
push
inc
out
push
sbb
dec
cld
mov
mov
push
mov
dec
xchg
push
mov
loopew
sbb
ror
fwait
or
sbb
fwait
dec
daa
shlb
sbb
cwtl
pushw
pushf
test
pop
jb
outsl
js
push
hlt
jo
mov
loop
push
push
call
sub
dec
dec
push
sbb
shll
scas
jl
inc
std
int
add
and
sbb
cmp
sub
int3
jmp
lret
fsubrl
subb
clc
jnp
lods
test
xor
stos
lock
shll
mov
and
pop
sub
nop
push
inc
mov
int
cmp
push
mov
imul
fcomps
sbb
pop
and
and
or
ja
cmp
testb
fxch
sub
les
test
sti
xlat
and
jbe
data16
xchg
sahf
cmp
jbe
popa
adc
xor
pop
stc
jg
mov
push
incb
push
sbb
inc
hlt
xchg
inc
xlat
xor
out
das
adc
inc
inc
mov
or
or
loope
and
int
out
or
xchg
imul
ret
cltd
jbe
addr16
and
dec
add
cmpsb
cs
pop
nop
nop
cwtl
or
popl
mov
mov
adc
mov
xchg
int
adcb
aas
mov
int
pop
lret
push
mov
cs
pop
mov
push
sub
push
inc
dec
sub
mov
push
je
fwait
and
fdivl
pop
aam
loopne
push
aaa
cmp
fdivrl
xrelease
shlb
jnp
mov
mov
sub
fcoms
xchg
aaa
in
push
xchg
dec
pop
js
int3
sarb
lock
adc
mov
cwtl
sahf
inc
xchg
test
pushf
sub
push
int
testl
cld
jns
cs
push
cmp
icebp
push
rorb
mov
inc
iret
daa
in
sub
lret
fwait
mov
jne
mov
mov
mov
ficompl
cltd
sbb
aam
xchg
and
ss
xchg
cmp
sahf
inc
push
push
ret
cmp
repnz
test
jmp
lcall
in
ljmp
fstps
add
cmc
jne
ja
test
outsb
inc
mov
mov
mov
or
lcall
ror
in
push
dec
dec
xchg
jb
bound
out
mov
enter
loope
ja
jmp
sbb
inc
sub
aad
fcomip
and
xchg
das
mov
push
bound
mov
addr16
seto
fcmovnu
mov
inc
add
bound
cmp
arpl
and
jnp
or
js
std
xchg
faddp
adc
push
xchg
mov
adc
mov
nop
push
cld
popf
in
xchg
sarb
dec
dec
xchg
sahf
ja
xchg
and
sub
jae
cmpsb
loope
mov
outsl
pusha
jne
gs
jl
push
mov
out
pop
jg
dec
xchg
mov
outsl
dec
sbb
ljmp
inc
bound
xchg
lret
xor
jmp
loope
sub
cmpsl
movsb
lods
movsb
jnp
mov
in
sbb
lahf
jnp,pn
dec
xor
fimull
adc
mov
sbb
push
sub
testb
ret
cli
add
pop
mov
push
fiaddl
push
movsl
ret
fwait
mov
int3
pop
and
and
fistps
add
dec
mov
and
xor
arpl
es
jo
mov
jge
push
xchg
pop
fldt
fbstp
and
push
push
out
jae
addr16
inc
daa
cmp
fistl
cld
xchg
jge
or
out
cmp
xor
add
xchg
push
xchg
mov
and
cmp
andb
and
inc
dec
push
add
fldt
sbb
ljmp
ja
call
push
rcrb
xchg
mov
xorb
addb
push
out
and
xor
flds
fidivl
sti
jecxz
negb
ja
bound
in
mov
test
pop
cld
cmc
xchg
sub
push
jl
push
loopne
lahf
imul
inc
or
sbb
loop
shrl
mov
and
lret
push
mov
rorb
es
and
ss
mov
loope
movsl
sar
scas
inc
xchg
cmpsb
ficoml
stos
scas
sbb
js
popf
or
xor
bound
cmp
jl
xor
cmp
fsubrp
jbe
test
dec
mov
push
mov
jmp
push
repnz
jb
and
aad
adc
jne
sbb
jnp
loope
mov
test
jge
dec
add
mov
mov
aaa
mov
daa
cmpsl
nop
mov
push
in
std
jecxz
fsts
mov
outsb
add
push
mov
jae
out
in
mov
pop
je
shlb
data16
mov
repnz
mov
loop
and
cs
pop
lods
enter
shrb
dec
mov
ret
pop
cmc
jecxz
cmp
mov
and
pop
sbb
xor
data16
outsl
push
test
push
cltd
lods
in
pushl
push
cmp
mov
stos
jmp
or
rcll
pop
and
adc
hlt
xchg
sbbl
cli
jbe
push
testb
lds
fcoms
adc
shll
sub
mov
and
dec
aaa
inc
or
les
ljmp
or
mov
test
fcompl
scas
pop
xchg
pusha
sub
xchg
dec
bt
int
adc
shlb
lods
cmp
jns
and
cmpsb
clc
add
fisttps
fistpll
add
jbe
xchg
xchg
and
jge
xlat
scas
fwait
out
xor
xchg
inc
loope
sbb
shrl
jae
ret
js
int3
push
iret
sbb
mov
push
lret
jg
adcb
dec
sbb
mov
sti
xchg
jp
movb
add
adc
int3
sahf
sahf
fmulp
div
in
xor
sbb
enter
nop
es
xchg
into
outsb
pushw
jae
sahf
xchg
dec
scas
or
pop
mov
xchg
push
or
js
mov
xlat
ret
aam
sbb
leave
int3
and
movsb
popf
xchg
jb
and
push
cmpsl
and
imul
repnz
cli
jl
sahf
jl
xor
push
popa
out
mov
xchg
iret
pop
sub
fiadds
mov
pop
push
pop
xor
lea
or
jb
sbbb
dec
data16
sbb
lds
cmp
mov
xchg
inc
cmp
xchg
push
xchg
push
je
adc
mov
iret
inc
jne
mov
mov
lock
gs
sbb
cmp
or
mov
popa
mov
cmp
push
add
inc
andb
jmp
jecxz
sbb
movsl
stos
sti
dec
loope
scas
mov
pop
repz
out
movsl
addr16
dec
push
cmpsl
lods
jns
jo
sti
dec
adc
ret
jbe
out
pop
into
ret
fadd
mov
outsl
mov
sbb
int3
push
xchg
pop
icebp
lods
adc
pop
scas
int
sti
mov
outsl
cmpsb
cmp
dec
aad
int3
cmc
divl
xor
jo
jne
fstpt
test
into
pop
push
in
push
inc
in
dec
cmp
loop
cld
pop
stos
push
imul
jns
sahf
and
mov
inc
lret
jne
dec
jo
inc
pop
stos
sti
sub
faddl
dec
loop
ss
rcll
mov
pop
jl
aas
rcrl
repz
sarl
into
lret
inc
mov
cmp
sub
xchg
arpl
mov
xchg
outsb
fldt
repnz
test
jmp
stos
push
lret
insl
adc
xor
mov
jl
jecxz
cmpsl
pop
das
push
pop
adc
jno
insl
inc
scas
dec
ja
ret
jp
mov
arpl
pop
imul
ljmp
shll
xor
cmc
inc
aas
pop
and
xor
rorb
cmpsl
xlat
shll
push
mov
in
or
or
cltd
int
jp
push
outsb
adc
outsb
icebp
lods
in
stc
fisubs
mov
pop
add
sub
xchg
sub
dec
addb
add
jbe
add
mov
push
outsb
popf
les
mov
inc
movsl
and
mov
add
mov
out
inc
push
dec
and
movsl
xor
dec
imul
jecxz
into
dec
xchg
dec
push
and
mov
out
xchg
xchg
in
jbe
mov
and
jle,pt
ret
lcall
out
add
xlat
jge
lret
jmp
or
add
jle
frstor
imul
push
and
pop
js
notb
xor
lds
lock
adc
adc
jo
clc
into
jns
mov
lock
pop
mov
mov
or
push
push
mov
mov
cmc
fwait
xchg
ljmp
xor
push
lret
cmp
jmp
inc
jnp
inc
xchg
cmp
cmc
js
or
nop
push
ljmp
mov
inc
daa
sub
push
mov
dec
cld
cs
xchg
add
mov
mov
push
jo
add
call
or
sub
cmc
mov
notb
mov
je
add
or
and
jecxz
mov
pop
dec
jp
jne
push
mov
into
add
push
rol
adc
pop
adc
mov
pushf
rorb
xor
and
cli
hlt
subl
test
enter
pop
leave
insl
dec
pushf
nop
ret
cmpsl
hlt
push
dec
pushf
jo
pop
nop
jl
push
fisubrs
push
leave
mov
cmc
in
xor
xchg
fstl
stos
jno
insl
xchg
inc
and
pop
loopne
sub
js
push
jb
lret
ret
into
imul
pop
mov
push
roll
mov
xor
jmp
lret
inc
addr16
lock
adc
ljmp
or
pop
ss
dec
sbb
push
int
into
cmpsl
dec
xchg
push
inc
int
addr16
in
inc
inc
adc
push
fldt
and
fidivrl
fwait
xchg
popa
add
in
cmpsl
fs
enter
ds
shrl
jecxz
push
out
or
adc
pop
or
sub
push
hlt
sub
cmp
pop
mov
sbb
add
lar
cmpsb
sub
movsb
sahf
lods
stos
das
add
ss
dec
dec
out
lret
test
cmp
mov
inc
ljmp
cmp
je
or
xlat
ret
mov
or
cmc
std
aas
jg
fdivl
inc
mov
inc
pushf
xor
sub
mov
pop
pop
pop
push
sbb
xchg
jae
xor
mov
call
xor
inc
insl
push
imul
push
subl
or
push
lret
dec
xor
and
push
sti
mov
andb
cmp
and
pop
or
add
or
xor
cmpsb
dec
arpl
sub
outsl
xor
mov
sub
add
xor
mov
loopne
call
ret
popa
push
jne
in
fisubrs
sarl
pop
or
outsl
ret
push
xchg
rcll
sub
mov
jg
and
push
int3
lahf
icebp
les
adcw
out
dec
icebp
and
add
add
in
lcall
test
mov
dec
fldl
xchg
adc
pushf
fidivrl
sub
imul
cmp
adc
popa
cmp
notl
in
jb
push
or
push
addr16
mov
xchg
cmp
adc
mov
push
sbb
xchg
mov
jns
leave
into
push
pop
daa
hlt
movsb
pavgw
or
addl
or
mov
adc
sub
mov
mov
fwait
cmp
fisttpl
inc
push
mov
and
cmp
popf
scas
and
mov
rolb
rorb
icebp
cmp
dec
ror
or
fistpl
test
jg
pushf
inc
test
cmpl
cli
fsubs
or
std
xor
test
lret
jnp
dec
mov
add
stos
jmp
mov
in
and
mov
in
dec
adc
dec
shlb
insl
daa
imul
les
inc
pop
popa
gs
and
fsubs
or
out
iret
mov
test
and
add
mov
adc
mov
mov
push
xor
iret
dec
in
in
out
xor
pop
nop
inc
fstpl
xchg
iret
sub
sub
inc
fidivrl
push
dec
sbb
and
shl
repz
lcall
mov
mov
fisttpll
mov
sbb
scas
test
adc
xchg
mov
sub
adc
out
xor
mov
xor
fcmovbe
jg
adc
sub
mov
sarb
adc
sub
pop
inc
mov
shll
rol
movsb
inc
push
hlt
rcll
mov
cmp
xchg
cmp
xor
outsb
mov
inc
pop
insl
jbe
sbb
cs
imulb
sub
lret
pop
cld
jmp
pop
adc
ljmp
mov
shlb
rol
or
add
mov
sub
dec
sbb
cmc
push
daa
xor
movsl
repz
mov
rolb
imul
fbld
cmc
mov
mov
mov
adc
cmp
inc
nop
push
jbe
push
shr
sub
orb
out
inc
cs
xchg
adc
out
cli
adc
jo
fimull
cli
test
mov
add
inc
mov
cmp
repz
nop
fbld
mov
pop
cmp
xchg
dec
faddl
mov
jg
dec
push
in
iret
mov
sub
mov
sbb
or
mov
pusha
push
das
jmp
jmp
inc
lds
sub
popa
pop
add
pop
xor
sub
add
cld
dec
mov
in
cmp
and
mov
xor
data16
sub
out
jl
verr
sahf
push
lods
pop
aam
sbb
xor
lods
xchg
pop
sub
sti
pop
lret
out
mov
insl
cmp
into
dec
imul
cmp
cwtl
cwtl
popf
xchg
xlat
cmp
sahf
mov
fldt
jns
sbb
jae
jb
flds
ret
out
push
jmp
pop
cmp
inc
adc
push
pusha
int
addr16
xor
stc
or
xchg
movsb
add
icebp
jg
aas
pop
jge
movsb
mov
out
jo
sbb
push
aas
insb
cld
mov
aaa
jns
jae
sub
jbe
mov
cmp
in
loopne
cmpsl
sbb
and
xchg
sar
xchg
sbb
movsb
fists
add
mov
dec
xchg
mov
inc
cltd
inc
arpl
cmp
push
pusha
rcll
mov
mov
je
mov
xchg
mov
dec
arpl
fistpl
loopne
imul
ret
inc
xchg
stc
sti
jge
and
push
push
loopne
push
add
xchg
hlt
pop
push
into
in
add
jno
or
aaa
and
jecxz
test
ja
outsb
notl
inc
fidivs
movsl
cs
outsb
out
sbb
push
sbb
ja
shrl
sub
jle
gs
push
inc
jp
les
lods
jmp
lods
cld
xchg
pop
repnz
test
jg
jb
and
andb
bound
sahf
pop
xor
mov
inc
mov
repnz
mov
cld
mov
test
xchg
mov
adcb
icebp
addb
roll
ja
dec
lock
pop
packsswb
filds
jno
rorl
insl
jecxz
dec
in
cltd
and
jne
lret
bswap
cld
ljmp
iret
addr16
xor
xor
mov
iret
fdivrs
mov
lahf
inc
jmp
fldenv
add
jle
scas
xlat
or
sbb
lds
dec
add
xchg
mov
xchg
inc
cmpsb
or
push
setg
cmpsb
xor
out
loop
pop
gs
sbbb
inc
ja
jl
addr16
xchg
js
inc
repnz
into
fsubs
sub
stc
push
inc
rcrb
xchg
es
es
test
pop
jns
xor
adcl
mov
cmp
mov
fnstcw
aaa
add
xchg
pop
mov
daa
lods
ss
shlb
cmp
xchg
pop
adc
fstpl
pop
inc
add
or
nop
jo
mov
cli
inc
in
or
pop
pop
xchg
xchg
inc
adc
iret
jo
leave
scas
xchg
insb
or
outsb
xor
sbb
fisubrl
daa
sbb
lea
movsl
aas
push
sub
cld
add
test
adc
aad
sbb
pop
jb
icebp
js
mov
mov
xor
sub
mov
jo
int3
lods
and
jmp
lods
mulb
mov
out
sarb
xor
ret
mov
aas
push
daa
push
pushf
cmp
ss
jb
jne
mov
ljmp
sbb
out
iret
mov
shlb
cld
ja
inc
push
push
fabs
lock
gs
and
pop
dec
jnp
cwtl
insl
sub
in
cmp
jp
ret
ficoml
mov
pop
jl
or
scas
out
fisttpll
xchg
popf
gs
aaa
jne
fstps
movsb
mov
jl
mov
mov
xchg
rcrl
cli
pop
notb
out
aaa
lret
dec
or
sbb
and
sbb
adc
outsl
out
xlat
cmp
stc
and
sti
data16
scas
and
and
cmp
sub
aad
push
push
fidivs
aaa
ret
push
out
sbbl
in
sub
push
pop
adc
pushf
dec
mov
pop
inc
pop
pop
dec
or
stos
jns
repz
sbb
lods
mov
mov
cmp
sub
nop
insb
sub
int3
cld
ljmp
std
lock
push
sbb
pop
xchg
cs
xchg
pushf
icebp
xchg
push
mov
cmp
inc
arpl
cli
and
mov
dec
mov
xor
pop
cmp
mov
cmpsl
test
loopne
cld
xchg
jge
push
sbb
ljmp
add
std
orl
mov
mov
mov
pop
es
repnz
jecxz
gs
xor
dec
dec
jbe
lret
adc
and
push
xor
add
lods
popf
lock
fldz
dec
jecxz
out
lret
mov
mov
lods
adc
add
cmp
mov
loop
mov
inc
lahf
add
mov
dec
aaa
adc
xor
push
adc
push
xchg
das
out
push
sub
fwait
xchg
sbb
cmc
xlat
inc
mov
dec
sbb
lds
adc
pop
shlb
cmpb
cli
jns
out
xchg
sbb
push
inc
sub
leave
xchg
adc
ret
lods
je
lret
sub
ds
xor
mov
inc
add
pop
mov
mov
popa
mov
shll
orb
dec
pop
cwtl
aam
js
mov
jl
mov
xchg
xchg
add
cmc
popf
xor
jns
bound
ja
aam
in
mov
popl
and
sarl
push
mov
push
test
ljmp
jp
sub
adc
lea
cwtl
push
xor
add
sub
in
fdivrs
fistpl
xchg
mov
pop
mov
sbb
jne
rcrb
shl
jb
cmc
pop
cmpsl
adc
clc
neg
mov
add
bound
test
inc
rcrb
or
rorl
and
aad
pop
cld
lret
pop
stc
sbb
stc
insl
jno
mov
jo
shlb
rcrl
aas
shll
aam
add
dec
sub
bound
pusha
add
insl
jg
adc
jp
mov
outsl
or
gs
inc
aam
cld
dec
xor
inc
ret
pop
jp
pop
cwtl
jg
inc
into
pop
dec
pusha
push
or
ja
jecxz
negb
repz
mov
gs
inc
mov
iret
orb
cmp
add
and
je
scas
testl
aas
mov
sbb
push
inc
outsb
test
inc
iret
push
loope
jg
clc
loop
insl
pop
loopne
hlt
push
cld
mov
adc
mov
dec
ds
xchg
xor
jns
out
xor
or
shll
dec
push
fwait
mov
pop
push
mov
les
int
pop
arpl
sub
inc
mov
cmp
je
adcl
pop
dec
insb
rcll
in
jne
pop
xchg
lret
stos
stos
daa
lock
subl
in
add
sbb
xor
push
cltd
sti
mov
xchg
insl
shlb
dec
loop
inc
rcll
jns
ret
jo
and
clc
jecxz
jmp
movsb
mov
rcrl
push
test
push
pop
inc
cli
addl
push
jle
addl
loopne
and
mov
xchg
nop
mov
call
dec
and
adc
outsb
inc
lock
push
ja
std
ret
lret
mov
sbb
in
mov
mov
mov
adc
in
cmc
cmp
adc
jno
cmp
fistps
cld
cmpsl
ja
gs
dec
dec
test
inc
bound
cltd
and
xor
adc
xchg
cld
gs
xor
pop
inc
leave
xor
rorb
adc
stos
xchg
out
jp
dec
out
flds
stos
test
insl
pop
sbb
adc
imul
inc
mov
xor
adc
jg
xchg
aaa
jne
cmp
nop
and
dec
aad
inc
dec
test
cs
nop
push
xlat
mov
inc
test
in
lret
stos
xor
cmpsl
insl
idivl
jp
mull
mov
mov
int
and
cmp
cmc
mov
test
xchg
jns
test
fsubrl
test
cltd
repnz
dec
pop
jb
in
pop
mov
cmp
jo
popf
sub
lahf
push
cmp
jne
push
and
lahf
stc
cltd
inc
pop
repnz
jns
roll
out
das
mov
sbb
pop
xor
dec
inc
mov
in
xchg
mov
aam
xchg
movsb
je
inc
pop
jl
jo
test
js
popf
pop
loope
in
in
roll
cmp
inc
test
dec
pop
inc
imul
adc
daa
push
cli
jge
bound
dec
stc
pop
inc
pop
jo
push
into
addl
pop
cwtl
cmp
dec
xchg
mov
lods
cltd
data16
jg
push
leave
or
or
xchg
xchg
rcr
sub
pop
sub
int
inc
inc
fists
cmc
shlb
pop
mov
mov
femms
mov
push
jmp
sbb
mov
test
cltd
out
pusha
jbe
xlat
ja
js
push
xor
jp
add
xor
add
xchg
and
mov
push
push
jp
leave
mov
data16
pop
xlat
test
adc
js
mov
jno
push
int
sub
adc
loop
push
mov
inc
sub
iret
adc
std
adc
fidivrs
mov
loopne
jg
insb
in
jmp
sbb
les
dec
lds
push
cwtl
repnz
mov
negl
and
cmp
jge
aaa
pop
out
cmp
sub
push
dec
inc
xor
in
cmc
pop
and
cld
mov
xchg
xor
push
cmp
or
cmp
and
mov
in
mov
mov
adc
jmp
pop
mov
xor
jbe
and
ja
mov
subb
shlb
adcb
lods
jne
push
mov
test
xor
ds
pop
scas
leave
in
cld
sub
ljmp
int
test
mov
jae
pop
cmp
cmp
mov
outsl
daa
divb
int
stos
and
lret
pop
int3
imul
js
js
lock
cltd
jl
ret
cmc
jge
cmp
xchg
rorb
in
adc
jmp
or
mov
and
loop
stos
cltd
insl
inc
and
or
ljmp
sbb
cmp
inc
push
push
mov
jge
jae
fwait
ljmp
adc
nop
pop
jbe
movsl
or
fnstsw
mov
lods
sarl
pop
cmc
cld
pop
add
cmp
sar
inc
es
sub
mov
popa
loope
xchg
sbb
lret
pushl
jle
add
pop
jae
into
inc
mov
jmp
lods
ss
jl
repnz
cmp
mov
cli
idivb
pushf
dec
push
pop
adc
scas
cltd
sbb
xchg
xchg
mov
sbbb
jns
das
push
mov
lcall
xor
add
push
movsb
imul
mov
das
icebp
xor
aad
mov
push
lods
stc
mov
jg
aaa
sub
add
pop
dec
pop
pop
and
cmc
jle
push
test
loope
push
xchg
or
loop
insl
pop
fsub
into
movb
jno
and
sbb
dec
inc
mov
sbb
adcl
cmpsl
lods
ja
fcmovnb
jo
xor
out
int3
or
inc
in
andb
in
xor
mov
mov
dec
mov
jge
fscale
add
pop
lret
sti
push
inc
cld
mov
cmp
xor
ffreep
rorb
mov
adc
ljmp
outsl
mov
repz
enter
dec
ja
repz
movsb
enter
hlt
xor
stos
jle,pt
scas
inc
jge
xchg
movsl
sahf
sub
push
stos
pusha
loop
jbe
xor
daa
jb
pop
lcall
cwtl
cmp
mov
aad
add
xchg
xlat
jl
out
mov
inc
lods
xchg
xor
dec
in
inc
call
pop
cltd
imul
mov
cmpb
xor
fsts
sbb
jg
pop
mov
cmp
mov
cmp
nop
adc
out
test
inc
add
lods
std
stos
jl
dec
out
aad
jo
or
xor
inc
push
test
sbb
pop
cmp
out
xchg
test
sub
push
pop
mov
add
add
inc
xor
jo
cli
ret
insb
xor
in
or
pop
in
fcompl
cmp
xchg
adc
pop
cmpb
movb
pop
movsb
shll
cli
test
int3
sbb
int3
cmpsb
call
and
push
xchg
or
ss
xor
cmp
repz
sub
insb
test
jmp
das
fcoml
inc
sbb
leave
leave
int3
jae
in
aam
adc
adc
mov
sub
lret
pop
lcall
or
mov
mov
movsb
cmpl
int
insl
addr16
in
inc
pop
test
in
pop
aas
xchg
dec
or
cmp
pusha
cld
jge
sub
popf
xor
cmc
adc
xor
or
call
dec
insl
jo
adc
sbb
cmpsb
loop
jb
jb
xchg
nop
mov
test
xorl
divb
lret
shl
cmpsb
in
mov
sti
mov
stos
jp
mull
test
mov
shr
inc
lahf
push
xchg
cld
ss
sbb
jecxz
aas
inc
sub
cmc
test
out
xor
shll
xchg
mov
ljmp
mov
sub
pop
fsts
inc
leave
lea
mov
aaa
jnp
cli
and
sti
cmp
inc
out
ficompl
lret
mov
push
adc
inc
dec
cltd
jmp
sbbl
fimuls
inc
and
xchg
xor
sahf
loop
gs
lret
in
scas
fstpt
jmp
sbb
out
pop
push
icebp
and
test
jle
idivl
or
lret
add
sbb
xlat
mov
push
hlt
pop
xor
cmp
inc
jno
das
or
rol
vpsllq
inc
adc
mov
xor
mov
mov
int3
jae
jge
shlb
in
insl
mov
je
fsubs
bound
popf
sub
popa
aaa
ds
push
enter
jl
iret
fisubl
sbb
mov
rcrb
add
inc
xchg
out
jecxz
pop
or
pop
stc
testl
stos
sbb
mov
mov
ret
push
mov
mov
mov
lods
es
xchg
sbb
fdivs
xor
cmp
in
pop
mov
orb
in
xchg
rol
int
or
bound
loope
xchg
movsb
add
aam
bound
jno
imul
aaa
in
andl
xorl
cmpl
frstor
negb
hlt
loop
mov
scas
mov
sub
and
xor
push
dec
mov
jmp
mov
push
dec
std
mov
into
push
jge
movsl
ret
lods
out
icebp
cmpsl
jae
inc
push
mov
popf
shll
xor
call
aam
xor
dec
sub
and
rcll
or
mov
mov
adc
ja
xchg
xchg
or
mov
rolb
cltd
ss
out
or
inc
dec
fistpll
xchg
inc
arpl
cltd
xchg
in
ss
cwtl
stos
leave
bound
push
lahf
xchg
aaa
pop
jmp
cmp
jg
cmp
and
outsl
sahf
adc
mov
push
test
add
jbe
aas
mov
icebp
fsubl
iret
sar
pop
inc
js
mov
das
fsts
sub
dec
xchg
add
dec
das
addr16
pop
fdivrp
dec
imul
adc
push
lea
xchg
sbb
scas
fs
xchg
fcomps
push
add
sbb
pop
gs
fwait
xchg
repnz
daa
in
lret
ret
adc
inc
mov
push
adc
xor
push
pop
bound
test
mov
or
imul
cmp
hlt
adc
ret
mov
jae,pt
push
jne
icebp
jl
mov
std
pop
adc
stos
jno
mov
pushf
pop
pop
and
lret
lds
cmc
dec
jo
divb
in
fstpt
loope
add
mov
xor
pop
jecxz
int3
cli
pop
ss
mov
and
outsl
imulb
sub
mov
in
clc
and
add
push
mov
out
aad
mov
dec
popa
fcoml
nop
xchg
addr16
mov
loop
out
pop
std
inc
dec
jnp
inc
inc
pop
fnstsw
sub
jnp
enter
stos
jbe
jns
test
ljmp
xor
inc
adcl
ret
aaa
cmpb
adc
mov
rolb
and
cli
imul
jb
stos
ficompl
sub
push
jecxz
cmp
iret
jecxz
xchg
ja
inc
mov
movsb
sti
xor
jno
mov
sbb
sahf
sbb
xchg
xorb
xor
fcoml
adc
pushw
sbb
pop
sub
scas
out
dec
xor
xchg
add
data16
popa
in
outsb
mov
jecxz
sbbl
mov
and
out
lods
mov
ja
fmulp
in
xchg
fidivl
xchg
addr16
and
dec
dec
ret
vcvtss2si
popf
dec
ret
rcl
cmp
subl
cmpsb
pusha
rcrl
aaa
mov
dec
fldcw
cmp
sbb
adc
insb
icebp
popf
lret
aas
sti
dec
out
rcrb
cmp
inc
inc
mov
stc
mov
enter
sti
adc
aad
sbbw
jl
sub
xchg
in
popa
xorl
rolb
adc
pushf
mov
mov
mov
and
aaa
mov
insb
aad
or
fildll
psubd
jl
jno
mov
mov
jo
lea
push
outsb
jle
xlat
and
subl
add
lret
loopne
out
or
pop
push
xchg
and
xchg
add
fisttpll
cwtl
out
iret
cmp
cmp
out
dec
lret
mov
xor
jns
push
jl,pn
push
mov
push
sub
adc
sahf
cmp
mov
add
gs
lcall
jbe
mov
xlat
push
cmc
insl
xor
movsb
xchg
test
jnp
xor
mov
rcrl
fnstsw
inc
sub
ljmp
add
push
out
stc
sbb
imul
mov
cmp
cmpb
xchg
jo
stc
bswap
inc
push
in
dec
int
and
pop
fistpll
js
cmc
adc
add
add
hlt
cmp
xchg
out
pop
arpl
mov
push
push
popa
bound
dec
inc
mov
aam
sub
dec
or
jns
adc
or
or
arpl
mov
nop
xchg
or
imul
pop
popa
test
cmp
out
scas
lods
mov
in
repz
sahf
mov
iret
inc
lock
loopne
outsl
or
scas
lahf
or
popf
sbb
call
loopne
or
dec
out
add
pop
repz
je
pop
xchg
or
mov
cmp
or
adc
negb
popa
jmp
jecxz
mov
inc
push
push
je
mov
roll
jnp
lock
and
in
dec
outsb
sbb
inc
xchg
dec
in
push
hlt
fcoml
es
ror
es
adc
aad
scas
xchg
sbb
dec
dec
daa
notl
xlat
jle
mul
loop
push
dec
push
pop
iret
jmp
loope
out
popa
xlat
adcb
sarl
or
xchg
jl
push
mov
lret
fisttpll
jge
push
sbb
inc
or
scas
mov
cltd
sbb
ljmp
push
outsb
scas
lret
stos
repz
add
and
push
cmpsl
lcall
push
mov
push
cltd
aas
xchg
dec
jmp
adc
mov
or
sahf
stos
mov
jno
mov
mov
in
mov
leave
orl
ret
cwtl
or
jnp
inc
cltd
push
cld
fisttpl
jg
mov
mov
fidivs
add
popf
dec
mov
cmpsb
cmp
outsb
xchg
push
addl
enter
mov
pusha
mov
sarb
pop
add
or
fadd
jle
test
jle
lea
jo
loope
std
sbb
stc
adc
outsl
sub
roll
jecxz
pop
pop
dec
jge
mov
ret
leave
subl
pop
rolb
pop
pop
and
mulb
mov
mov
or
push
sahf
xchg
mov
mov
fstp
cli
hlt
fiaddl
sbb
pop
add
inc
adc
test
mov
enter
xlat
sahf
sahf
das
loop
xchg
inc
cli
pushf
mov
pop
push
add
cli
push
xor
lcall
sub
xor
mov
fadds
mov
or
jl
cwtl
add
dec
rcl
mov
push
xor
sbb
call
jle
or
lods
push
ret
mov
cmp
cmpsl
cmp
das
popf
aaa
das
lcall
ljmp
arpl
pop
scas
inc
and
in
popf
xchg
pop
sub
pop
adc
loopne
mov
lea
mov
popa
cwtl
mov
stos
aam
scas
ret
adc
jecxz
adc
lea
bound
call
and
push
push
sub
or
mov
mov
test
into
jecxz
and
call
ja
pop
mov
cli
push
loop
adc
add
sahf
fimull
les
sahf
gs
inc
and
adc
sar
negb
mov
push
cmpl
mov
and
xchg
cli
sub
test
dec
mov
mov
add
icebp
jmp
sub
push
outsb
xchg
aaa
sbb
das
sub
popa
jp
adc
in
sti
or
jne
adc
mov
push
lcall
jnp
inc
mov
movsb
xor
int3
out
or
xor
sub
mov
scas
sub
jno
and
jmp
dec
xchg
enter
inc
jo
pop
sub
dec
cmc
mov
loop
std
push
icebp
pop
imul
mov
shlb
mov
sub
aas
sbb
fstpl
jae
dec
or
fidivrs
sti
sbb
sarl
bnd
dec
lods
xchg
inc
dec
loope
cmp
insl
aad
int3
pop
adc
in
pushf
push
stos
inc
sar
dec
cmp
icebp
jo
into
push
sbb
aaa
dec
mov
add
int
adc
push
cmpsl
rcrb
mov
fbstp
xchg
push
fwait
das
sub
xchg
test
popf
leave
cltd
xchg
sarb
add
scas
push
cmp
inc
inc
cli
and
inc
push
cmp
sbb
xchg
mov
imul
in
or
mov
adcb
sub
callw
dec
cmp
sub
loop
xor
repz
inc
cld
fnstsw
xor
int3
add
inc
pop
dec
test
pop
test
inc
dec
divl
stos
inc
sub
int3
aam
cmp
push
pusha
jne
out
sub
lods
out
addr16
mov
decl
or
out
xchg
loop
jae
add
jno
pop
mov
popa
mov
sbb
pop
mulb
or
adc
movsl
jg
push
stos
jae
cmp
loop
inc
fs
push
adcl
sbb
les
push
push
shrl
call
out
jmp
jno
out
test
cli
shl
lret
push
sub
pop
pop
rolb
adc
sbb
sbb
add
xor
popf
imul
and
cmc
pop
or
push
inc
test
jmp
sub
ret
in
inc
in
sbb
ret
pop
int
cmp
lock
and
xlat
loopne
lods
faddl
jp
xor
ficoml
cwtl
std
imul
dec
js
scas
pop
jmp
dec
mov
sbb
pop
jno
adc
cli
ficoml
into
mov
inc
jb
shll
lret
pop
shl
pop
hlt
lahf
sti
popa
adc
adc
mov
sub
mul
add
xchg
or
inc
pop
gs
pop
andb
cmpsl
pop
mov
sub
inc
mov
ljmp
daa
xchg
fmul
jmp
mov
jmp
out
lds
sbb
insl
inc
push
xlat
inc
int3
cmpsb
dec
ljmp
or
push
add
xor
cmp
leave
je
pop
pop
in
dec
jb
pop
adc
pushl
roll
mov
cmp
pop
lock
mov
pushf
xor
test
lret
dec
sub
mov
mov
push
dec
xchg
add
push
mov
mov
shufps
lahf
xor
pop
xchg
ljmp
dec
cmp
inc
and
jg
int
dec
int3
sub
and
adc
insb
lea
out
inc
xchg
jecxz
lret
sub
add
std
sub
pop
push
mov
pop
push
fmulp
xchg
push
lock
mov
inc
sbbb
dec
or
shl
cld
sub
rol
test
pop
xchg
cmp
inc
or
lods
test
and
mov
or
xor
shrl
cltd
push
mov
xchg
cmp
jmp
xchg
xor
fwait
add
repnz
incl
fstpt
mov
mov
adc
or
jae
xchg
movsl
push
add
push
pop
jbe
or
cmp
push
insl
bound
push
sbbl
jae
loop
mov
push
add
add
and
cmp
pop
orl
push
dec
add
xorl
stos
mov
push
mov
leave
or
pushf
mov
or
cmp
cltd
es
mov
jne
into
inc
xchg
mov
sub
inc
out
cltd
and
js
fsubrl
shr
hlt
dec
sub
adc
sbb
adc
lods
stc
mov
jb
push
inc
ret
or
mov
lods
fadds
movsl
dec
cmp
insb
lcall
mov
xorl
pop
xchg
bound
pusha
pop
xorl
or
push
je
das
and
testb
addl
aad
das
and
inc
hlt
push
in
adc
add
inc
imul
lods
or
dec
cmp
bound
loope
pop
shlb
mov
or
dec
arpl
cs
lahf
dec
add
and
sub
or
aas
movsb
inc
sbb
les
inc
xchg
push
insb
adc
lcall
jnp
icebp
outsb
mov
adc
ja
sbb
dec
in
cmp
fldt
adc
inc
les
push
dec
cmp
xchg
mov
out
movsb
test
aaa
pop
popf
clc
jbe
or
out
mov
push
push
lahf
cmp
and
in
xchg
mov
add
lods
add
pop
fucomip
fwait
ljmp
inc
sbb
xor
mov
mov
sbbl
sbb
jae
cmp
ret
mov
and
pop
push
add
mov
xlat
je
mov
mov
mov
pop
sbb
sahf
aam
out
insl
push
pushf
pop
stc
rolb
jb
pop
pop
xor
push
sub
sbb
mov
push
jns
sbb
inc
out
lret
sbb
xchg
ss
push
stc
shlb
out
rcll
aam
adc
enter
in
dec
sbb
cmp
cwtl
lea
cli
xchg
and
insb
sbb
insb
scas
jle
sbb
ja
cli
ss
jne
ss
jge
pop
dec
dec
mov
cmp
into
xor
into
divl
shrl
movsb
xchg
cmpsl
add
pushf
fsubr
mov
std
cmpsb
rcll
js
sahf
fcompl
jmp
sub
lods
pop
pop
and
lret
mov
ret
ja
cmc
test
add
pop
push
es
sbb
pop
iret
loop
pusha
call
xor
in
add
lods
add
fsub
mov
movb
cli
mov
mov
sub
ret
mov
xor
pop
popf
xchg
ds
dec
std
xor
xchg
pop
xlat
push
push
movsl
les
mov
pop
jl
sti
ss
cmp
incb
das
sub
jb
or
out
xchg
popf
jns
mov
jne
fmul
pop
jne
and
push
aad
lret
jle
xacquire
xorl
jne
repnz
repz
inc
jp
into
mov
dec
push
pop
data16
pushf
rcr
sbb
aad
pop
cmp
xchg
repnz
dec
pop
add
adc
rolb
ret
aas
mov
mov
mov
adc
inc
test
push
insb
cmp
shll
shl
dec
xchg
inc
shll
shll
std
sub
xchg
ret
imul
sub
pop
push
jp
scas
popf
or
lods
imul
cmp
sbb
popa
or
xor
sbbl
jns
dec
pop
test
and
addl
jmp
lods
hlt
outsb
sahf
xor
mov
mov
inc
xchg
inc
fldl
cmp
orl
xchg
xchg
and
dec
aad
or
daa
xchg
fsubrs
sbb
xchg
push
xchg
cmp
pop
xchg
dec
lret
cs
int
shl
and
dec
shrb
mov
rorb
pop
mov
inc
ds
imul
lahf
insb
mov
sbb
das
in
mov
scas
sub
and
add
sbb
stc
push
jle
mov
mov
adc
mov
mov
xor
pop
sbb
inc
dec
jecxz
sti
xor
movsb
push
mov
cltd
pop
std
jno,pn
stos
xlat
mov
sbb
out
mov
push
aam
cs
jmp
cmp
or
xor
dec
mov
cmpsb
pop
or
push
inc
push
aad
add
lret
popa
push
pop
aam
mov
lock
sti
pushf
into
cli
xchg
idiv
mov
or
mov
dec
shl
push
inc
mov
rcrb
mov
iret
sahf
push
lea
std
rcrb
mov
popa
mov
outsl
xchg
inc
sbb
out
inc
adc
adc
xchg
std
jle
pop
addb
mov
sbb
sub
jg
cmp
aaa
lods
add
ds
fdivr
jl
sbb
lods
aas
push
jecxz
jnp
gs
fadds
inc
cmp
cmp
push
cmpsl
mov
cwtl
or
xor
out
xor
in
mov
daa
cmp
dec
loop
xchg
sub
stos
push
adc
xchg
insb
lcall
push
ror
scas
repnz
mov
adc
cmp
pop
fs
rorl
movb
jae
repz
iret
testl
rolb
daa
clc
mov
lahf
pushf
add
gs
adc
and
cmp
mov
pop
and
popf
mov
enter
hlt
fbld
test
and
dec
or
add
fbld
xor
jb
adc
subl
loopne
dec
hlt
aaa
rcl
pop
aaa
nop
pusha
lea
sbb
xor
push
pop
addr16
push
sti
xor
sub
xor
shll
push
sub
fadds
and
popa
xor
jge
stc
inc
lcall
push
mov
mov
adc
xchg
jl
aaa
loope
out
and
add
ret
lcall
lret
cmpsl
cmp
int
jg
sub
pop
shrb
aaa
pop
xlat
sbb
sbbl
add
xchg
loopne
shrl
rorl
imul
cmc
stc
push
cmp
outsl
lret
xchg
xor
aam
mov
dec
and
jmp
jno
je
enter
adc
in
enter
add
jecxz
test
out
mov
mov
ficompl
fsubrl
adc
shll
mov
xchg
insl
mov
xchg
pushf
push
and
mov
dec
xor
xor
repnz
push
fwait
out
inc
fisubl
mov
andl
add
out
fwait
sbb
sub
mov
inc
sbb
arpl
mov
repz
adc
addr16
into
jge
mov
fdivrl
js
fwait
test
lods
mov
cmpsb
aaa
or
xor
leave
inc
je
int3
mov
cmpsb
es
mov
lods
inc
fimull
push
inc
push
pop
pop
mov
ficoms
mov
sbb
xor
mov
in
data16
push
dec
xchg
hlt
inc
icebp
inc
sbb
xchg
insl
cmc
std
dec
out
jl
inc
inc
mov
adc
add
inc
repnz
add
inc
jae
add
sbbl
push
mov
fsubr
cld
pop
mov
xor
pop
mov
shll
push
mov
and
cli
push
jns
xor
jmp
sbb
mov
imul
arpl
fnstcw
lods
cltd
into
rorb
inc
test
leave
push
mov
loopne
dec
push
add
xchg
stc
ss
inc
dec
push
ror
xor
push
cmp
lcall
les
movl
insl
cmp
js
cmpsb
roll
jns
xor
xchg
push
sub
xchg
cld
imul
push
cmpsb
pop
mov
lea
mov
mov
insb
dec
mov
aaa
mov
pop
ret
incb
cmc
pop
xchg
lret
push
aas
popf
bound
test
data16
int
popa
call
push
fstl
mov
mov
xchg
pop
or
cmpsl
push
imul
pop
and
jecxz
test
inc
sbb
push
dec
pop
cmp
jae
nop
jno
or
stc
ljmp
push
mov
cld
mov
sbb
test
add
lret
aaa
jge
dec
pop
xchg
cltd
mov
rcll
sub
cmp
dec
nop
xchg
lret
enter
sub
adc
mov
mov
loop
subl
in
dec
cmp
dec
test
dec
mov
jl
adc
mov
and
sbb
enter
arpl
stos
pop
dec
jo
call
jp
and
into
movsl
mov
add
xor
enter
sti
jns
popf
and
cmp
push
sub
imul
shll
loop
call
mov
push
inc
enter
mov
push
adc
push
xchg
sbbb
les
push
ror
fldenv
push
mov
xor
push
inc
int
iret
mov
int
iret
call
lea
fs
adc
jmp
adc
cmp
and
jge
adc
js
int3
popf
adc
mov
pop
enter
sbb
movsb
out
jno
out
dec
fld
in
jne
xchg
jno
mov
pop
movsb
and
stos
dec
out
mov
mov
std
adc
cmp
mov
pop
cwtl
hlt
rcrl
mov
ljmp
cld
adc
aam
dec
out
push
pop
ret
dec
or
sbb
push
jp
lcall
outsl
pop
loope
mov
repz
ret
in
lods
aad
sub
adc
adcb
and
xchg
xor
int
mov
and
shlb
repz
jle
or
into
fimull
xor
stos
lea
cmp
lcall
or
roll
pop
in
add
jb
push
xchg
mov
shlb
cmp
inc
cmp
aas
and
sub
mov
sbb
cmp
in
imul
fisubs
cmp
pop
xor
pop
lahf
lock
cmp
xchg
mov
gs
adc
inc
inc
loopne
decb
ficomps
movsb
fildl
and
add
push
notb
xchg
stc
fwait
cmpsb
popf
adc
cmp
cmp
sub
stos
add
mov
jmp
mov
push
sarb
aad
icebp
iret
jge
movsb
mov
dec
insb
mov
outsb
out
add
insb
sarl
dec
lret
out
inc
imul
aad
push
xbegin
xchg
inc
jns
jp
xchg
push
into
xor
imul
push
mov
and
xchg
arpl
mov
push
xchg
lahf
pop
mov
mov
rol
sub
or
adc
push
iret
and
out
rol
pop
sub
notb
ret
jns
cmp
cltd
xchg
jmp
popa
jl
popa
pop
add
sbb
xor
lahf
cmp
es
mov
test
xchg
adc
cli
mov
cmp
inc
cmp
clc
adc
pop
push
xor
sbb
push
push
imul
mov
dec
dec
push
into
sbb
lods
push
push
out
push
ss
enter
jmp
add
jmp
and
fmul
adc
mov
jo
push
sub
cmp
xor
sbb
or
in
idivb
popf
mov
add
scas
loope
arpl
add
cmc
cmp
addr16
test
std
retw
adc
jae
lcall
xor
lods
scas
fiadds
int3
mov
mov
pop
push
jecxz
stos
ret
xlat
fcomi
jns
inc
fisubl
xchg
scas
mov
lea
ds
arpl
cli
xchg
add
push
pop
add
xchg
fs
fs
fxam
adc
add
test
test
cs
mov
mov
js
fiaddl
mov
sidtl
push
cltd
mov
xchg
sbbb
xor
cmp
test
cli
pop
std
stc
or
into
push
loop
test
cs
push
ljmp
sub
sbb
mov
cltd
and
roll
stc
idivl
sarb
inc
cmpsb
call
inc
rorb
in
loope
stos
inc
fsubl
or
leave
lret
daa
bound
and
xor
rcrw
xchg
or
jge
push
cmp
dec
cmp
xchg
lahf
push
ret
xor
dec
cmp
ljmp
js
scas
cmp
stc
lahf
adc
push
out
sbb
and
or
imul
dec
pop
xchg
add
dec
mov
adc
xchg
jo
xchg
pushf
int
push
insb
fsubl
jecxz
mov
and
push
addr16
add
mov
rcpps
jecxz
sub
pusha
dec
push
inc
lods
fmuls
mul
aam
outsb
inc
sti
xchg
lods
xchg
pop
add
inc
lds
xor
sub
lret
pop
test
jae
popf
mov
xchg
call
aaa
inc
fcmovu
push
fs
mov
xor
in
in
ret
adc
cmpsl
jbe
sbbl
shll
push
fwait
shrl
std
add
enter
mov
in
or
or
xor
aas
cmc
pop
mov
add
fisttpl
lret
push
shr
lret
subb
or
fmulp
add
out
fmul
lds
dec
incb
sub
pop
pop
add
popf
xchg
add
add
push
mov
arpl
pop
fistl
mov
jb
daa
loop
ficoml
outsl
cwtl
inc
jp
movsl
or
imul
arpl
sti
xchg
movl
xor
cmp
sbb
push
outsb
xchg
mov
mov
mov
dec
out
xor
in
xor
push
mov
ljmp
shrl
shrb
xchg
adcl
enter
pop
mov
int
inc
sub
jmp
loope
dec
aas
fisttpll
das
data16
or
xor
sbb
xlat
stc
xchg
popa
mov
mov
scas
xor
shl
mov
cmp
test
inc
sub
loopne
data16
fwait
lods
inc
jle
std
cmp
ret
pop
outsb
out
shlb
dec
shll
xchg
and
pushf
push
and
mov
aas
mov
push
lea
aaa
push
psraw
fwait
aam
imul
fisttpl
repnz
bnd
mov
mov
sarl
incl
sahf
sbb
mov
lret
xor
aad
mov
fstl
and
inc
add
mov
jg
dec
nopl
mov
loope
nop
push
pop
sbb
fs
mov
in
shrb
fbld
mov
cmp
or
lods
adc
and
notl
jecxz
scas
adc
loop
daa
test
repnz
rcr
in
add
jns
or
mov
insl
sahf
test
imul
push
stos
inc
lret
pop
push
and
pop
xchg
or
pop
cmpsl
sarb
mov
mov
dec
xor
cld
pusha
sub
dec
loope
arpl
lahf
lods
cmp
gs
pusha
mov
fcomp
lret
mov
pop
cmc
shrl
cld
dec
mov
sub
lock
mov
inc
dec
adc
push
cmp
test
clc
in
mov
push
out
adc
pop
fnstenv
add
roll
pop
bound
in
scas
stc
divb
xor
das
add
fistl
lret
stos
cltd
adc
sub
cmp
clc
xlat
jge
push
movsb
cmc
stos
ret
ficoml
mov
shlb
lcall
cli
mov
xchg
mov
xchg
mov
out
xor
pop
mov
outsb
test
mov
cmp
int
mov
icebp
or
int
sbb
je
mov
jns
std
stos
jmp
sbb
xchg
or
out
nop
pop
inc
xchg
daa
iret
cmp
pop
call
gs
sbb
test
xor
cld
iret
out
iret
aad
push
xchg
jne
js
pop
stc
xor
jns
outsb
add
cmpb
adc
dec
mov
jg
mov
dec
loope
repz
insb
imul
test
int3
aad
xchg
out
or
mov
lsl
cmp
fcoml
xchg
add
pop
push
sub
push
xchg
jle
ja
add
or
dec
adc
sub
mov
dec
je
pop
in
out
mov
adc
jp
test
mov
in
push
scas
cmp
scas
shl
rcll
and
sbb
and
repnz
jns
sub
enter
push
jb
push
sbbl
fldt
std
repnz
jmp
in
inc
jo
xchg
fistpl
aas
sub
js
gs
and
pop
pop
xchg
add
xchg
mov
mov
pop
cli
and
xor
mov
sub
insl
xchg
scas
add
insl
mov
addr16
std
and
lods
add
pushf
xchg
rcrl
cmp
mov
jge
xchg
xor
inc
js
xchg
sbb
push
inc
std
in
lds
pushf
jbe
inc
scas
add
xor
cmp
xor
in
bound
lods
mov
test
mov
xchg
movsl
fdiv
or
mov
les
js
sti
jg
jmp
sub
or
cmp
push
popa
and
inc
sbb
lea
pop
add
sub
push
movsl
aaa
imulb
mov
cmp
ja
mov
int
nop
es
dec
test
sbb
daa
roll
mov
and
pop
cld
sbb
jo
xlat
loope
sbb
test
stc
rorb
mov
mov
mov
jecxz
stc
mov
pop
pushf
andl
push
cmp
xor
imul
aad
mov
or
mov
dec
cmp
out
in
mov
dec
lahf
or
pop
push
addr16
adc
pop
mov
mov
pop
popf
pop
xchg
stos
dec
mov
movsb
stc
insb
mov
xorl
pop
lea
lahf
sbb
stc
iret
out
adc
and
repnz
rcrl
push
fisubl
jl
das
lret
in
jecxz
ret
xlat
push
mov
arpl
dec
push
pop
jle
sbb
repnz
dec
les
sub
jne
jbe
inc
cwtl
popa
stc
inc
or
in
cmpsl
inc
mov
subl
mov
mov
lret
fs
cmp
shll
xchg
les
stos
aad
and
bound
ljmp
sbb
mov
adc
sbb
push
push
and
xchg
jns
xchg
popa
imulb
iret
cmp
das
push
mov
jnp
shlb
inc
pop
pop
pop
inc
add
push
xor
pop
xchg
mov
cmp
gs
jecxz
jne
pop
in
add
push
jecxz
shll
lds
cltd
xchg
lds
inc
inc
rorl
jno
push
shrb
jmp
lea
lea
add
inc
push
xchg
ljmp
mov
or
push
jae
xchg
in
sarl
addb
dec
roll
imul
sbb
pushf
add
loope
dec
cmp
lock
nop
lcall
js
mov
mov
movsb
sbb
xchg
mov
sub
test
jge
rcll
jne
stos
insl
fcos
add
push
sbb
mov
mov
mov
push
fisttps
add
add
mov
sahf
andb
dec
dec
stos
sti
lods
mul
and
ljmp
sub
pop
lds
lret
loop
lahf
out
xor
dec
out
mov
stos
bound
xlat
pop
sbb
shrb
cmpsl
cmp
pop
sub
imul
js
xchg
mov
test
mov
dec
or
add
gs
cmp
xor
or
dec
loope
jmp
add
mov
repnz
and
adc
cmp
jo
pop
add
and
dec
mov
test
jns
adc
test
mov
inc
xchg
repnz
xchg
fmulp
xor
cmp
adc
add
xchg
imul
into
mov
lret
lds
stos
and
outsl
jo
mov
enter
or
mov
ret
lock
push
sahf
lock
js
je
sub
insb
inc
mov
inc
int
xor
frstor
pop
scas
mov
imul
pop
mov
leave
jne
mov
sub
push
dec
movsl
inc
push
repz
push
lcall
xchg
inc
imul
xor
push
mov
decb
stc
jle
roll
xor
and
jno
adc
int3
mov
inc
in
in
mov
pop
pop
mov
cli
mov
mov
xchg
jnp
or
shrl
jb
sbb
add
neg
nop
push
xor
xor
mov
push
push
lret
xor
mov
lcall
xor
xor
icebp
jb
outsb
fimuls
push
test
xchg
add
push
mov
pop
ret
dec
orb
sub
push
pop
mov
jmp
es
ds
cld
jnp
ud1
or
shll
fwait
outsb
lea
adc
dec
lret
out
push
sti
mov
xor
les
cmp
sub
adc
or
push
gs
mov
fdivrs
shll
mov
fistpl
imul
stc
aam
clc
push
rcll
or
xor
out
sbb
cmp
mov
sbb
push
jo
sub
xchg
test
push
or
push
ja
push
add
ja
inc
test
lods
test
mov
jl
sti
adc
pop
cltd
sub
mov
les
into
sub
popa
ljmp
ja
push
jecxz
xlat
sub
negb
aad
mov
or
sbb
icebp
outsl
mov
fisttpl
leave
out
jge
mov
mov
imul
add
push
push
xor
add
data16
outsl
dec
pop
cmc
push
and
fadds
leave
xor
sbb
and
sbb
test
fs
xchg
cmpsl
inc
adc
dec
mov
adc
xor
das
xchg
mov
pop
mov
cmp
cmpsl
pop
add
mov
jo
jl
ds
push
ror
stos
lds
lahf
push
in
and
sub
adc
inc
xchg
mov
mov
add
cmc
leave
sarb
shrb
inc
and
mov
pop
mov
sub
cmpxchg
aaa
hlt
repnz
add
fnstcw
inc
int
inc
jp
xchg
mov
mull
test
mov
xchg
imul
test
inc
nop
jg
sbb
xlat
cmp
mov
adc
pushf
bound
add
jle
push
inc
or
incb
and
push
rolb
adc
dec
les
call
dec
mov
inc
dec
fcoms
jne
out
jae
pop
fs
sub
xor
add
lods
pushf
xchg
mov
repz
arpl
jbe,pt
jne
pop
jo
add
test
imul
cmpsb
test
sbb
jmp
or
dec
xor
push
xor
sbb
sub
and
jmp
or
mov
push
test
iret
adc
mov
lock
xchg
icebp
mov
lret
mov
divl
mov
pop
mov
imul
std
imul
pop
movsl
jb
test
xchg
cwtl
and
shlb
xchg
stc
les
xchg
inc
inc
fcoms
push
push
lcall
xchg
xchg
mov
outsl
lods
mov
ret
bnd
clc
ljmp
or
xor
ret
or
into
xor
pop
negl
sbb
add
mov
outsb
rcrb
inc
stos
stos
fstp
js
mov
mov
mov
call
dec
dec
outsl
dec
sub
std
add
in
or
cs
ss
hlt
or
mov
incb
add
jae
inc
out
push
cmpsb
incl
pushf
cmpl
jmp
stc
inc
xchg
push
aam
xchg
or
clc
dec
add
jmp
push
lds
mov
pop
adc
dec
int3
mov
xchg
push
pop
push
stos
adc
popa
das
insl
cmpsb
aam
test
push
mov
test
ss
mull
adc
jne
lods
sbbb
cmc
xchg
mov
jge
je
or
es
and
cmp
xchg
mov
sbb
jle
xchg
cmp
test
mov
loop
or
fwait
jo
mov
mov
push
xlat
mov
inc
lcall
sub
cmp
push
je
pop
iret
sbb
loopne
hlt
ljmp
out
adc
mov
loopne
pushf
mov
fisubs
sub
lret
lahf
sbb
in
aam
mov
add
add
in
cmp
test
idivb
cmp
add
mulb
adc
lret
adcl
fdecstp
outsb
lods
or
jno
cmpsb
lcall
pusha
jnp
lock
aas
mov
pop
sbb
adc
cltd
push
cld
arpl
add
bound
adc
cmpsb
dec
imul
cmpsl
dec
add
sar
jno
jns
dec
aaa
imul
imul
sti
insb
mov
idivl
push
cmc
rcrb
in
and
mov
inc
cmp
push
push
sub
mov
cld
lahf
call
in
cmc
ficoms
test
test
ja
push
and
xor
xor
or
mov
lret
jae
sbb
decl
xchg
cmpsl
sub
inc
call
sahf
pop
mov
push
jno
aaa
mov
pop
inc
pop
pop
jmp
add
push
lods
mov
mov
jecxz
lahf
fcmovb
jecxz
shll
jno
insl
mov
das
ljmp
push
sub
xchg
mov
adc
les
data16
inc
jb
xor
pop
push
test
mov
stos
pushl
addr16
adc
ret
or
sub
shrb
cmpl
icebp
lret
test
add
pusha
cmp
test
xor
testb
ljmp
push
xchg
dec
cmpsb
data16
xchg
cmp
mov
xor
jmp
jl
addr16
cmp
sbb
add
mov
test
adc
jge
sbb
push
lock
mov
cmp
pop
jecxz
cmp
xchg
lods
cmpsb
xchg
mov
jge
push
test
mov
xchg
push
push
adc
jo
dec
ds
push
add
xchg
xor
movsb
lret
popa
jecxz
add
popaw
pushf
pushf
pop
lahf
sbb
jb
sub
gs
cmp
cmp
jg
jmp
in
cwtl
test
pandn
jmp
cmpsb
adc
cmpsl
pop
push
movsb
mov
sbb
or
arpl
mov
cmp
dec
xchg
pop
mov
push
ss
lea
jo
es
pop
add
loop
jmp
icebp
jb
adc
sti
inc
xor
aas
adc
mov
or
push
dec
and
rcrl
sbb
jmp
mov
sub
push
leave
or
add
scas
loope
loope
adc
sbb
imull
sub
shr
test
inc
cs
std
cli
cmp
outsl
loopne
sub
sub
sbb
or
jae
xchg
rclb
xchg
push
add
mov
imul
and
mov
mov
lds
push
aas
sti
enter
add
divl
clc
vpaddusb
jno
pop
xchg
mov
cltd
test
mov
leave
sbb
rorl
jg
inc
popa
aas
dec
xor
adc
inc
push
hlt
jecxz
cs
pop
sub
mov
mov
test
adc
mov
mov
sarl
cmp
jmp
push
lods
loopne
or
lea
cmp
jle
sbb
sbb
xchg
inc
movsl
loope
insb
sbb
jno
push
sbb
mov
push
jmp
sbb
cmp
ret
js
xor
cmc
cmp
arpl
into
mov
mov
inc
push
sbb
adc
sbb
out
adc
xchg
cmp
pop
push
pop
ret
dec
dec
in
mov
hlt
fcmovnbe
sub
repnz
sbb
inc
dec
into
dec
adc
lret
mov
or
shl
sahf
mov
inc
rcrb
and
mov
inc
mov
push
fsubr
movsl
mov
jle
push
and
push
sbb
shrb
aas
adc
fidivrl
aas
daa
movsb
loope
cs
jge
aad
xchg
add
add
gs
sub
addr16
and
fs
gs
arpl
lock
lods
cmp
mov
mov
pop
jle
ret
inc
cmpsl
jmp
xchg
lods
imul
lea
jae
fwait
xor
sbb
mov
or
imul
nopl
pop
push
jg
cmp
dec
sbb
jmp
mov
sub
jbe
xor
jbe
pop
cmp
insb
sti
lods
lcall
mov
fnstenv
ss
dec
pop
lret
pop
adc
mov
xchg
inc
xor
inc
jbe
xchg
in
and
sbb
out
loope
popa
mov
fsubr
test
xchg
movsb
pop
mov
mov
out
movsl
rorb
add
mov
bound
imul
xor
mov
movsl
mov
leave
ss
mov
xor
mov
sub
lods
mov
sub
ljmp
sbb
jo
lock
enter
minps
push
fsts
cli
popa
into
out
frstor
dec
rorb
int
and
add
pop
pop
data16
scas
xor
push
je
or
push
scas
in
in
cmp
andl
xlat
popa
test
jle
adc
fsubl
rclb
addr16
js
das
lods
jns
push
dec
xchg
cltd
jge,pn
sub
mov
arpl
inc
cli
mov
pop
mov
mov
std
sarb
mov
jnp
xchg
loop
lock
mov
into
adc
sahf
test
push
or
inc
cltd
mov
add
mov
fdiv
jno
jne
mov
cmp
arpl
bnd
into
cmp
jl
inc
jne
out
inc
push
bound
xor
daa
xor
test
and
in
shlb
push
and
inc
lcall
dec
mov
adc
fs
adc
scas
dec
pop
dec
and
mov
sub
leave
repnz
andl
push
fnsetpm(287
fnstsw
repz
fmuls
mov
pop
xchg
scas
std
mov
lods
mov
inc
enter
push
ret
mov
insl
sbb
cmp
incb
jge
js
test
jo
push
jge
adcb
push
test
mov
clc
xchg
stos
xchg
mov
cmp
xchg
test
sbb
fildl
jne
arpl
inc
lret
mov
or
pop
push
mov
les
in
in
adc
lock
or
cltd
add
push
cmp
mov
add
cmovb
into
test
filds
je
xor
dec
ret
push
pop
mov
pop
aad
pop
cmpsb
je
xchg
imul
sub
jg
enter
mov
xchg
stc
push
jp
popa
in
sub
pop
addr16
adc
and
sub
adc
das
jo
cmc
and
test
sub
xchg
push
jns
and
dec
sbb
repnz
movsb
out
insl
cli
cld
push
repnz
cmp
imul
add
jnp
mov
push
cmc
mov
pop
sbb
push
loope
in
pop
xor
test
dec
ret
dec
shrl
outsb
stos
rolb
adc
test
push
push
test
std
fsubs
cmp
sub
mov
pop
movsb
pop
mov
pop
testb
push
dec
cmc
roll
rorb
xor
mov
jle
out
test
ret
je
out
flds
xor
jae
int3
hlt
repz
jo
and
dec
jnp
mov
add
mov
push
push
aam
aam
sub
rcrb
and
jb
stos
scas
fisttps
dec
call
add
inc
movsl
or
mov
shll
hlt
outsl
xchg
push
jb
nop
adc
cmpsb
mov
and
out
push
push
pop
ret
cwtl
sbbb
sbb
pusha
movlps
cmpb
xchg
outsl
jbe
sahf
mov
mov
pop
inc
or
ret
mov
lock
int3
into
push
pop
test
ja
out
cmpsl
inc
sub
pushf
outsb
stos
lds
dec
adc
fisubs
insb
xchg
int3
xchg
icebp
popf
enter
lock
sbb
mov
test
or
cmp
or
sbb
adc
pop
adc
mov
fsub
stos
inc
popa
and
arpl
in
push
inc
arpl
sbb
xchg
adc
push
sub
inc
andb
mov
cmp
and
hlt
lret
jl
test
sub
pop
test
pop
aas
dec
pop
aad
lock
mov
ret
out
jecxz
data16
into
or
fmuls
in
mov
pop
push
rcr
loope
cmp
popa
fisttpll
into
mov
stos
sub
clc
data16
ljmp
pushf
cli
dec
push
repz
imul
imul
icebp
push
mov
add
push
push
in
out
sub
push
pop
xor
cmp
pop
movsb
leave
xchg
rep
cld
xor
cmp
bnd
jns
outsb
pop
fcmovbe
lcall
imul
inc
inc
dec
add
rolb
fnstcw
int
xor
xlat
fucomp
scas
push
cmp
cmc
aam
jns
jnp
xor
push
lods
mov
add
push
loope
outsl
sbb
rcrb
pushf
fcoml
xchg
mov
loop,pt
cmc
les
or
push
cmc
lret
shll
into
lock
out
stos
test
xchg
in
aaa
int3
sahf
enter
and
test
jno
and
insb
loope
insl
mov
push
pop
and
dec
cmp
ret
lods
cld
adc
xor
std
pop
sbb
mov
cmpsl
adc
lods
aaa
push
outsb
pop
sbb
sbb
call
or
cmp
setb
out
repz
les
insb
push
mov
aam
inc
jb
cmp
mov
pop
icebp
mov
adc
and
push
push
test
enter
out
mov
xor
in
stos
mov
test
cmpl
xchg
and
cld
adc
pop
addr16
mov
test
jae
orb
jns
lcall
jmp
jne
les
ja
or
mov
sub
lds
dec
pop
out
pushf
out
fdivrl
sbb
out
outsb
dec
xchg
xlat
adc
cmp
jg
loop
mov
and
xchg
sbb
mov
popf
adc
mov
shlb
out
jge
outsl
and
rcl
scas
mov
xchg
mov
test
xor
stc
mov
mov
xchg
aas
je
adc
test
cmc
orl
pop
fs
dec
or
push
mov
inc
cmp
jmp
das
loope
addr16
daa
push
mov
scas
push
mov
loope
push
insb
jl
xor
sbbb
lahf
rorb
iret
inc
cmp
cli
aas
cmp
pop
mov
adc
cmp
jns
cmpsb
xchg
popa
sbb
mov
dec
or
out
incb
xchg
cmc
adc
jmp
and
mov
fsubrl
mov
sbb
xor
mov
repz
das
pop
and
jp
sbb
movsl
in
aam
pushf
xor
stc
xchg
mov
dec
dec
iret
sahf
ficoms
cwtl
adc
enter
push
je
jbe
subb
js
adc
and
scas
div
andl
movsb
int3
push
in
push
push
xor
sbb
xchg
pop
mov
mov
enter
add
movsb
fnstsw
dec
enter
mov
mov
mov
lods
lock
cs
stos
imul
shrl
lods
pop
fsubrs
mov
adc
dec
adc
push
ja
nop
push
inc
negb
xchg
std
ret
sub
push
push
lea
cmpsl
sub
das
call
ds
dec
dec
aam
mov
scas
pop
dec
push
out
xchg
cs
sbb
ss
jno
pop
dec
ds
jne
testl
daa
cmp
aam
outsb
std
cmp
test
js
cmp
loope
xchg
clc
xor
push
outsb
cmc
cmc
jp
pop
movsl
add
test
mov
mov
push
dec
and
mov
outsb
fisubrs
leave
pop
xchg
sbb
stos
popa
xor
mov
jno
pop
es
mov
in
subb
xchg
mov
sub
xchg
cwtl
pop
push
nop
dec
or
ret
ljmp
xchg
jg
push
arpl
push
cmpsl
xchg
sub
adc
leave
dec
mov
ret
push
jbe
movsl
mov
pop
mov
add
popf
pop
movsb
lcall
mov
hlt
cmpsl
pushf
xor
pop
test
mov
or
stos
inc
outsl
subb
jmp
cmpsl
movsb
fldcw
call
outsb
outsb
jne
divb
sti
adc
and
xchg
int
pop
inc
adc
mov
test
not
js
cli
jns
sarl
mov
mov
and
mov
fsts
loope
cmp
cmpsl
add
loope
cmp
sub
in
pushl
out
adc
xor
daa
out
test
rcrl
dec
shrl
lcall
mov
adc
jge
jno
push
lock
inc
ror
imul
lods
aam
out
int
inc
fimull
jb
outsl
xchg
dec
dec
aaa
push
test
jp
inc
lock
popa
int
test
test
and
push
sub
cli
jg
fnstsw
cmpsb
test
inc
mov
arpl
add
js
add
mov
xchg
push
mov
insl
outsl
or
das
dec
inc
mov
or
sub
dec
mov
loope
mov
push
call
mov
push
andl
cltd
dec
les
sub
das
sbb
sbb
rcll
mov
mov
xor
cmp
cmp
in
cmc
rclb
jb
sahf
in
pop
adc
push
xchg
cltd
lret
xor
inc
xchg
imul
into
ret
in
jge
arpl
sub
jmp
imull
lcall
stos
pushf
testb
into
shrb
sti
rcr
pusha
out
call
jns
jno
inc
imul
lds
lods
bound
cmp
xlat
mov
into
inc
pop
mov
xor
push
inc
and
test
rcrb
iret
xchg
sub
lcall
cmp
pop
xor
cld
pop
hlt
icebp
stos
jno
fmuls
popa
in
ss
jo
clc
testl
push
loopne
adcb
xchg
push
test
adc
js
sub
jp
scas
dec
out
mov
mov
daa
pushf
jg
insl
push
add
mov
push
mov
push
pop
sarl
mov
pop
sub
adc
sub
jb
aad
int
clc
jmp
and
leave
add
push
jno
push
xchg
fidivs
push
jae
jl
jb
lds
mov
sub
scas
shrb
or
aas
mov
xor
loop
jb
pop
orb
imul
inc
add
add
dec
pop
mov
insb
xchg
je
xchg
jnp
xor
mov
lods
in
xor
enter
aas
popa
addr16
jns
mov
xchg
fdivrs
push
push
xchg
mov
fcoml
add
data16
in
jbe
adc
or
push
dec
mov
movsl
mov
popf
jg
test
xor
push
nop
or
aas
mov
sub
andl
loope
inc
mov
inc
outsl
cltd
xchg
outsl
out
aaa
dec
enter
rorl
test
jae
aaa
fxch
leave
push
mov
cmp
push
mov
push
adc
xchg
ret
mov
adc
mov
outsb
and
out
enter
add
mov
jb
les
sub
std
add
jp
mov
inc
or
mov
fnsave
idivb
cmp
add
popa
incl
negb
fxch
outsl
es
add
xchg
lods
mov
adc
inc
mov
pop
and
stos
jno
adc
cmpsl
sub
icebp
jle
out
aaa
stos
mov
push
or
or
cmpb
cmp
or
mov
inc
cs
adc
pop
js
je
or
lcall
insb
outsb
imul
jg
pop
push
pop
shll
mov
sub
test
out
inc
pop
fidivl
orl
in
sbb
jns
jne
mov
enter
mov
and
push
cmpsl
cli
jp
std
std
mov
lret
dec
add
out
and
repz
aam
fwait
dec
mov
movsb
jnp
push
aad
clc
loopne
jge
push
or
out
xchg
sti
pop
aam
movsb
mov
in
mov
std
test
mov
inc
xorl
cmp
rcl
add
mov
xchg
dec
stos
push
push
outsb
inc
fldt
xchg
and
or
stos
push
roll
push
push
pop
and
cltd
es
push
inc
or
cmp
test
pop
xchg
fisubs
xor
adc
out
xchg
jb
repnz
sbb
inc
mov
xchg
jl
ljmp
jo
insl
mov
push
xor
xor
sbbl
lret
and
mov
mov
shll
ss
mov
push
fnstenv
cmc
aam
cli
roll
out
cmp
pushf
push
mov
and
inc
jne
xorb
sub
jp
outsb
sub
outsl
es
stc
out
leave
rcl
or
push
lods
pop
dec
xchg
mov
dec
push
inc
movsl
pop
and
movsl
fwait
int3
iret
push
add
je
ds
sahf
in
jge
fstps
push
dec
cli
or
ljmp
and
cs
push
call
aas
xor
pop
mov
sub
add
outsb
inc
push
add
and
or
dec
dec
lahf
sub
mov
and
insl
idivl
in
cltd
popf
imul
cs
insb
dec
cmp
test
push
popa
fnstenv
out
add
arpl
ret
xchg
sub
pop
add
and
push
ljmp
jns
push
mov
dec
js
in
mov
xchg
jl
pop
pop
xchg
add
into
sti
movsb
int3
jne
or
insl
push
das
sub
dec
lock
insl
scas
xor
cld
mov
data16
pop
leave
pop
xor
cs
outsl
and
add
pop
test
in
lret
sub
dec
adc
pusha
inc
shrb
cmp
sahf
jg
and
out
sbb
test
jnp
add
push
add
shll
pop
shll
pop
cwtl
ss
pop
jns
rcrl
add
add
jmp
sbb
add
adc
jp
repnz
icebp
mov
sbb
scas
fcom
push
xchg
cld
mov
mov
push
mov
leave
into
mov
lods
mov
mov
dec
mov
push
imul
and
dec
add
sub
fldl
jnp
inc
xchg
cmp
cld
pop
jl
mov
les
push
cs
inc
cltd
jnp
xchg
mov
lret
xchg
jecxz
xchg
mov
scas
test
jns
shlb
enter
jae
aaa
dec
pop
or
push
pop
dec
adc
cld
mov
lods
ret
xor
js
add
mov
stos
mov
push
mov
jbe
fsubr
mov
outsl
mov
lds
pushf
dec
in
lret
mov
ds
jg
sbb
xor
mov
and
push
add
or
pop
scas
xchg
dec
sbb
dec
push
xchg
cmp
inc
inc
sbb
mov
stc
loopne
jbe
or
jle
out
fwait
out
push
in
dec
mov
fdivrs
data16
cmc
pusha
and
sbb
or
imul
jmp
nop
clc
mov
test
mov
pop
adc
jp
jno
cmp
pop
dec
adc
orl
out
test
stos
mov
xor
add
out
in
lcall
lock
cwtl
pop
outsb
dec
dec
enter
inc
js
jmp
cmpsl
add
mov
lret
fldt
in
lods
push
sarl
sub
sbb
push
andl
leave
je
cltd
jns
in
or
std
iret
xchg
out
jbe
je
add
in
in
clc
xor
xchg
popf
push
and
adc
lret
sbb
fistpll
inc
ret
in
sbb
xchg
mov
pop
aas
mov
push
lret
mov
dec
xor
stc
sbb
loop
push
aad
lcall
test
mov
xchg
xor
int
dec
insl
xor
push
outsb
daa
jle
ficompl
insb
por
ja
sub
pop
pop
fmuls
int3
cmp
xlat
xchg
adcl
test
add
mov
mov
das
fiaddl
sahf
pop
cwtl
shrb
jns
jb
int
or
xor
das
dec
popf
sbb
add
xchg
xchg
jg
gs
jecxz
inc
xor
dec
sub
dec
or
hlt
into
mov
insl
lahf
pop
out
arpl
fistpl
add
dec
push
stc
jne
xchg
out
outsb
sti
hlt
ds
stos
add
in
mov
pop
pop
adc
in
jbe
arpl
cli
and
repz
inc
jp
pop
icebp
imul
enter
push
out
pop
or
out
xchg
sub
add
arpl
or
jmp
or
add
mov
insb
in
sub
xchg
pusha
mov
stos
add
mov
stos
inc
out
aaa
lock
ja
cli
mov
addr16
jb
shlb
cmpsb
icebp
sbb
xchg
cmc
stos
pop
fs
in
int
jo
mov
jg
addr16
adc
mov
lret
add
dec
xchg
sti
jns
lods
jb
add
sti
and
mov
clc
and
movsb
dec
cmp
les
jmp
or
sahf
std
in
lret
lea
pop
out
push
sub
push
popf
sub
jns
dec
ret
imul
dec
inc
data16
lods
outsb
inc
mov
xor
fadds
aas
rcl
jo,pn
in
ljmp
mov
out
push
jle
repnz
out
jnp
les
cmp
scas
fldcw
jg
add
int
mov
in
pop
lahf
sarl
lret
sti
or
loope
or
xchg
sti
and
in
fcmovb
jbe
dec
aaa
pop
mov
dec
sub
jg
js
or
cmp
loope
or
push
je
mov
jno
cwtl
push
pusha
data16
data16
fbstp
mov
bound
xchg
fidivl
mov
fstl
test
dec
fwait
mov
fs
sub
cwtl
inc
test
mov
fdivrs
hlt
fs
xchg
or
roll
out
and
mov
push
je
push
outsb
push
aaa
dec
jbe
xchg
inc
jle
xchg
sahf
pushl
jecxz
aaa
push
fcomp
cmp
imul
mov
stc
imul
sub
stos
bound
inc
rorl
sub
out
mov
aas
jo
mov
pop
xchg
frstor
les
jne
stos
inc
jnp
inc
pushf
jmp
xchg
pop
icebp
imul
in
dec
lods
repnz
mov
inc
xchg
out
mov
aaa
push
out
xchg
jl
outsb
mov
repnz
mov
sbb
test
outsb
shlb
lret
mov
pop
cmp
adc
push
je
test
adc
and
pop
sub
fidivrl
subb
call
adc
aas
fistl
fstp
jno
mov
dec
or
push
ret
subl
sbb
xor
mov
lea
movsb
jp
cmp
popf
xor
jno
jbe
out
insb
je
je
or
hlt
and
dec
inc
mov
cmp
xor
pop
push
idivb
lods
cwtl
outsb
mov
popa
mov
jp
xchg
jmp
lods
data16
ds
mov
mov
xor
mov
mov
pop
rcll
sahf
or
mov
ficompl
xchg
inc
inc
sub
es
pop
pushf
xlat
or
push
pop
adc
ret
jecxz
lea
mov
xchg
mov
flds
ja
xchg
and
jno
sub
pop
jnp
das
mov
repnz
jb
icebp
xchg
data16
lret
pop
lea
out
ret
cmp
nop
cmc
loop
pop
add
leave
enter
add
daa
fcomps
mov
cmp
dec
xchg
popa
cmp
or
pop
test
adc
pop
add
dec
sub
rcrb
push
cld
push
popl
inc
or
and
add
outsl
test
js
aam
leave
or
xchg
fs
pop
dec
andl
mov
fwait
sub
push
mov
or
fldcw
cwtl
xor
adc
push
enter
xchg
jl
adc
mov
data16
dec
inc
pop
push
mov
mov
cmp
loop
out
xor
mov
pop
pop
mov
lcall
ds
fldenv
in
rorb
xchg
out
xor
and
mov
xor
push
popa
fidivrs
in
xor
pop
jns
test
pop
lods
cwtl
adc
sbb
cs
shrl
sti
mov
mov
xor
adc
cmp
adc
ror
jne
mov
add
aad
inc
pop
cmp
scas
andb
xchg
add
sbb
inc
movsb
xor
aas
mov
out
sahf
add
mov
push
push
pop
jne
xchg
mov
mov
outsl
fnstenv
into
mov
sbb
pusha
adc
sbb
fimull
mov
arpl
aad
insb
scas
xor
xchg
push
nop
leave
pop
mov
out
jne
popa
js
fiadds
jmp
sbb
mov
into
lret
xchg
sarl
mov
sbb
push
bound
loop
inc
or
lock
add
or
out
aam
sbb
mov
dec
adc
inc
sub
pop
jb
cmpsb
and
aaa
sub
imul
popa
rorb
and
xor
iret
adc
mov
pop
mov
jae
loop
adc
movsl
or
pushf
cmc
inc
lods
mov
lea
mov
ret
xchg
jno
and
js
test
add
push
test
pop
dec
or
pop
jge
pop
dec
fwait
divl
push
stos
aaa
rep
mov
rep
mov
sub
or
xorl
sbb
es
inc
add
repnz
int
sub
sbbl
ret
outsl
mov
xor
xor
call
pop
mov
jp
pop
in
or
fcmovnb
lcall
xor
add
xlat
push
test
cs
lcall
repnz
push
jns
sbb
or
inc
cmp
adc
not
xchg
add
xchg
push
cwtl
mov
ds
jge
lods
add
inc
pop
or
movsb
ja
lcall
and
pop
cmp
mov
repnz
inc
mul
movsl
lods
arpl
jae
push
jl
xchg
mov
idivb
cmpsl
popf
ret
lds
and
push
stos
mov
mov
shll
pushf
fimuls
push
mov
pop
dec
dec
adc
mov
or
lock
in
or
mov
call
pop
cmp
insl
xor
rolb
or
mov
jg
out
sarb
jb
arpl
cltd
ja
mov
fimull
std
loopne
mov
ja
in
out
call
pop
outsl
mov
mov
jmp
out
loop
mov
cmp
fcomi
lock
into
lods
pop
sub
fmull
lret
jg
lret
pop
das
fstp
mov
divl
fstpl
in
insb
add
test
jno
setns
sbb
and
xor
fwait
jb
inc
cltd
adcb
lods
stc
xchg
add
cmpsb
aaa
jp
xchg
enter
scas
add
movsl
mov
in
cwtl
das
jge
or
push
js
or
flds
mov
popa
sbb
mov
mov
mov
fidivrl
clc
xchg
lock
xor
fdivrp
mov
adc
pop
mov
mov
pop
arpl
jle
dec
push
jns
xchg
cmc
xchg
movsl
loope
shrb
jnp
shlb
insl
outsl
jns
cwtl
push
leave
xchg
push
xchg
in
lret
push
dec
mov
mov
xor
in
popf
add
mov
mov
sbbb
addr16
shlb
test
adc
andl
dec
xchg
mov
es
ret
push
ja
xlat
sub
std
mov
cmpsb
gs
daa
es
or
mov
fildl
mov
jge
std
nop
sub
push
arpl
push
repz
or
ds
xchg
push
lock
addl
sub
xchg
jns
test
push
je
test
in
lret
sbb
jmp
mov
dec
imul
jo
iret
pop
pop
fdiv
mov
lods
mov
fwait
and
and
jb
add
dec
rcl
stos
jne
sti
mov
jge
gs
loope
xor
nop
int
rorb
rclb
aaa
or
imul
adc
dec
lret
sub
nop
mov
xchg
rorb
ds
lea
jno
enter
lds
sub
js
mov
xor
and
xlat
or
lea
and
insl
test
push
popa
mov
pop
xchg
push
aaa
adc
stos
addb
pop
jl
sbb
xchg
cmpsb
or
adc
stos
mov
adc
cmp
imul
mov
sub
sbb
or
rol
out
sub
jns
lock
stos
cwtl
jl
jo
mov
dec
cmp
sahf
push
cmc
add
xchg
cs
icebp
jne
adc
lods
das
lods
popf
ss
cwtl
xchg
dec
movsb
adc
and
and
les
xor
mov
sti
fisttps
pop
xor
lods
sbb
dec
jns
cmp
iret
nop
jnp
xor
mov
sbb
sub
add
push
mov
icebp
mov
pop
inc
bound
inc
xor
pop
movl
mov
inc
inc
testl
sub
sbb
lock
adc
dec
pop
cmp
jp
movsl
xor
out
in
pop
jno
sbb
jp
dec
and
fbstp
in
fs
loope
mov
in
mov
xchg
inc
or
jno
lods
and
sbb
scas
stos
sbb
mov
shrl
pop
sbb
add
scas
mov
pop
nop
ret
adc
into
cmpb
pushf
rcl
mov
mov
fistl
mov
adc
ljmp
add
xor
sahf
jnp
mov
and
sub
push
sbbb
rorb
sub
pop
jo
fsubl
pop
in
decl
and
and
sbb
inc
jnp
daa
sbb
lcall
mov
pop
lea
mov
jo
jae
rorl
hlt
repz
lea
add
inc
imul
ret
push
inc
outsb
lret
in
mov
sbb
shll
idivb
mov
or
test
and
insb
mov
or
mov
jg
pop
xchg
jmp
fninit
and
aam
add
fdivs
inc
iret
add
call
lock
cmc
xchg
pop
mov
ret
mov
sbb
aaa
je
lods
add
faddl
out
jmp
test
call
jb
cli
jl
pop
fimull
xchg
dec
loop
std
add
cmpsl
cld
mov
loopne
mov
adc
inc
lea
pop
notb
dec
xor
push
inc
cli
sub
mov
ljmp
popa
dec
or
mov
pop
pop
adc
pop
imul
dec
mov
imul
pop
cli
into
xchg
rcrb
jb
lea
jne
sub
out
add
mov
sub
idivb
sbb
lret
pop
dec
stc
xchg
mov
test
mov
mov
mov
clc
pop
into
insb
leave
pop
inc
mov
cwtl
pop
sbb
cwtl
ja
jl
or
push
pop
icebp
dec
pop
add
sbb
mov
pop
pusha
adc
int3
js
mov
ja
ljmp
mov
in
adc
jae
inc
sub
jo
cli
pusha
xor
jecxz
fldt
test
xchg
out
adc
int3
mov
or
movsb
sub
mov
xor
daa
or
push
ret
and
push
mov
mov
inc
xor
and
cmp
idivb
popl
rcll
mov
cmpsb
and
fwait
jle
stos
add
ljmp
inc
fsubs
adc
mov
inc
jmp
cwtl
rol
lret
stc
stos
or
xor
imul
scas
imul
mov
lahf
add
lods
push
daa
js
std
mov
into
adcl
push
jae
addr16
inc
xorl
inc
fmull
xchg
sbb
xor
arpl
imul
into
sub
sbb
mov
insl
xchg
aaa
add
arpl
pop
add
push
iret
sbb
lods
mov
leave
xor
xor
pop
jne
stc
outsb
mov
sbb
lret
add
clc
sub
pop
ja
or
fimull
adc
out
shrl
pop
xchg
pop
lock
sbb
and
popa
xor
outsl
pop
cmp
stos
sbb
inc
lret
sarb
lods
pop
ret
adc
adc
jbe
mov
ljmp
aas
test
mov
shrb
fwait
jo
jl
fs
repz
dec
adc
and
ret
test
add
pop
out
in
mov
push
icebp
mov
int
adc
nop
xor
hlt
mov
adc
or
enter
xchg
cld
stos
xor
fstpt
jecxz
push
movsb
inc
pop
arpl
sbb
inc
imul
ss
out
lds
scas
cmp
xor
test
insb
incl
mov
inc
xchg
js
sti
ss
cwtl
inc
popf
popa
mov
push
inc
xor
lcall
cmpsl
fisubrs
ret
nop
sub
sti
add
dec
push
shr
cmp
xchg
leave
add
push
add
jl
mov
fidivrs
mov
sbb
and
cwtl
xchg
movsb
aas
push
jbe
and
mov
popa
fs
ljmp
xor
and
add
pop
jns
pop
hlt
loope
mov
aad
stc
outsb
xlat
rcrb
push
xchg
cmpsb
jle
stos
mov
xor
and
xchg
add
adc
jo
dec
xchg
clc
add
pop
cmp
push
sbb
jecxz
sbb
cmp
es
addb
imul
pusha
mov
jmp
push
cmp
sbb
mov
inc
mov
add
lock
ss
push
cmpsb
sbb
inc
sbb
call
les
icebp
test
sbb
add
xor
push
jbe
lods
testl
mov
pop
cmp
in
push
repz
cmpsb
rcl
pop
icebp
cs
repz
popa
cwtl
or
mov
fstpl
pop
fistps
bound
push
lea
inc
testb
and
inc
insl
cli
mov
in
mov
lret
insl
xchg
std
subl
scas
gs
popf
movzbl
lock
fsubs
pop
dec
mov
fsub
roll
lahf
sub
sbb
mov
jg
adc
addr16
ljmp
popa
pop
je
inc
pop
xchg
push
imul
jecxz
add
or
int
aam
push
cmp
roll
push
jge
and
nop
movsb
rorb
mov
adc
mov
jge
lods
shll
mov
lock
pop
aaa
fistpll
adc
outsl
subl
out
mov
sbb
dec
xchg
test
push
xchg
dec
xchg
frndint
cmp
sbb
sbb
mov
jp
and
mov
dec
mov
jl
enter
pop
xor
sub
and
or
movsl
aaa
pop
jb
push
dec
inc
mov
or
and
mov
mov
xor
lods
mov
and
in
pop
cmp
pop
mov
outsb
dec
cmp
xor
jp
dec
out
mov
lods
dec
nop
and
ret
mov
fwait
jl
jae
fwait
daa
vmwrite
icebp
and
mov
mov
imul
sbb
ret
stos
mov
dec
repz
xorb
mov
and
dec
cmp
cmp
cmc
test
ret
jo
and
cmc
icebp
ffreep
int
push
fiadds
int3
out
scas
insl
mov
neg
scas
punpcklbw
xchg
sub
push
sbb
orl
js
jb
loopne
push
inc
out
test
subb
fnstcw
dec
inc
subb
cs
outsb
mov
icebp
jecxz
movsl
fildl
int
pop
inc
movsl
jl
and
push
sarb
testl
in
shlb
add
or
cmp
add
sub
loopne
dec
or
ja
mov
mov
push
inc
outsb
xchg
fs
adc
lods
cltd
push
mov
mov
push
filds
ret
in
lock
xorl
mov
adc
push
mov
test
add
hlt
xor
in
mov
xchg
addr16
inc
mov
cli
sub
lret
lea
int3
jns
push
scas
cmp
outsl
mov
int3
ret
mov
adc
mov
das
repz
cld
repnz
mov
loope
outsl
test
push
pop
add
cmc
rol
add
loopne
ret
mov
stc
or
lods
sbb
rcrb
loope
imul
in
cmp
mov
adc
lds
mov
add
popa
adc
inc
xchg
pop
xor
rcll
mov
push
scas
sub
repz
pop
addr16
mov
jge
jg
shrb
lds
jecxz
hlt
inc
or
sub
out
fimuls
aad
jge
dec
mov
cmc
add
lret
stos
or
lods
jnp
inc
add
mov
jge
mov
js
pop
adc
mov
mov
and
lret
and
lret
bnd
sar
aaa
pop
jo
or
xchg
add
mov
andb
and
hlt
clc
sub
sub
inc
push
pop
and
add
dec
hlt
je
inc
add
inc
and
das
js
inc
jns
test
dec
dec
sub
xchg
jg
daa
xchg
sub
mov
push
movsb
dec
adc
xor
cmp
inc
push
in
inc
outsb
or
cmp
shrl
xchg
out
jmp
jnp
ret
data16
jns
push
inc
push
lea
clc
insb
cmp
push
movsb
cmp
rclb
outsl
mov
flds
fwait
jnp
out
dec
cmp
add
cmc
dec
mov
outsb
jns
enter
out
repz
je
cmpl
aam
mov
push
inc
xchg
adc
inc
clc
dec
lods
mov
mov
lahf
in
ss
sub
cmp
xchg
xchg
inc
or
iret
mov
mov
pop
cs
test
or
insl
mov
stos
mov
cwtl
cmp
cmpsl
mov
cmp
rorb
adc
mov
mov
ret
pop
fdiv
pop
mul
aad
enter
loopne
xchg
sar
enter
mov
in
mov
fisttps
dec
mov
insb
cmpsb
aaa
sarb
xchg
add
sub
xchg
cwtl
inc
pop
arpl
faddl
and
subl
rolb
imul
inc
insb
sbb
dec
xor
fdiv
aam
test
mov
sbb
roll
stos
test
or
mov
loopnew
les
lret
int
xchg
or
out
xchg
je
popf
and
sbb
in
push
movsl
lds
inc
push
mov
jg
add
loopne
andl
adc
adc
lds
push
push
adc
pushl
sub
jecxz
push
sbb
sbb
xchg
xchg
shlb
jp
sbb
dec
insl
outsl
fcmovu
rcl
cmpsl
adc
cld
inc
shll
mov
fdivs
sbb
imul
xor
fistpll
mov
stos
fbstp
xchg
movsb
mov
rcll
ret
test
xchg
test
pop
cmp
clc
push
mov
ret
int
mov
sbb
and
out
dec
jmp
inc
push
in
fistl
lds
ret
stos
inc
pop
adc
icebp
push
jnp
out
or
sub
push
pop
jno
ljmp
push
cmp
sub
push
mov
dec
cld
fndisi(8087
xchg
into
jbe
out
add
mov
mov
out
inc
xchg
pop
mov
aaa
in
fistpl
jo
dec
fadds
insb
push
je
out
mov
xlat
add
je
inc
xchg
dec
jns
popa
cs
jge
loop
cld
sti
les
xor
cwtl
pop
pop
dec
into
dec
mov
icebp
pop
jmp
mov
cltd
or
lahf
inc
inc
xchg
push
or
adc
sbb
xchg
jb
xchg
test
pushf
jae
imul
mov
jne
mov
out
push
mov
std
xlat
and
sub
imul
movsb
orl
popa
out
sbb
testb
fsubl
fistl
xor
xor
jmp
or
das
inc
aaa
std
ds
outsl
dec
mov
inc
cmp
cli
imulb
fdivrs
xorl
inc
or
mov
or
and
or
loop
cmpb
fildll
pushf
jne
sbb
jge
xor
rcrl
push
push
pusha
pushf
cmp
mov
scas
jb
cmc
mov
jbe
inc
or
das
xchg
lock
fildll
test
or
aas
cmc
cltd
dec
jge
frstor
or
xchg
sub
ds
sub
imul
das
adc
faddl
test
jno
mov
stos
push
pop
loopne
lock
aaa
pushl
inc
stc
fcmovb
jecxz
mov
pop
icebp
movsl
iret
xor
sub
inc
add
gs
test
leave
das
sbb
aam
repnz
fbld
xchg
sub
insl
icebp
fcomps
movsb
jmp
movl
inc
pop
jno
xchg
mov
data16
xchg
pop
imul
mov
mov
arpl
in
mov
gs
arpl
xor
cmp
adc
sbbl
push
pop
push
and
movsl
jae
repnz
gs
mov
aas
adc
andb
loop
fwait
jbe
inc
jmp
mov
movsb
and
fisubl
sub
cmp
mov
or
or
stos
pop
outsl
pop
sub
fisttpl
push
mov
push
jo
sti
ret
shlb
leave
shrb
sub
lcall
sbb
or
fwait
lods
data16
mov
jg
test
repnz
lret
xchg
cmp
xor
mov
shr
in
aaa
pop
test
push
imul
cli
ljmp
dec
jmp
stc
jno
mov
scas
dec
cli
rorb
inc
lock
mov
dec
les
mov
jb
ret
fstps
iret
test
cmp
pop
jno
xchg
and
jae
movsb
xchg
outsl
jb
aaa
mov
add
repz
das
xchg
push
add
in
test
repnz
imul
addr16
pop
inc
xchg
xchg
mov
inc
repz
dec
sbb
cli
sub
cmp
push
jae
mov
pop
adc
repnz
ret
xlat
mov
add
xlat
sub
dec
mov
push
pop
fwait
mov
out
and
xchg
sti
cmp
sbb
stos
lret
out
xchg
mov
fwait
and
test
fdiv
add
sbb
cmp
jl
popa
dec
dec
push
in
imul
mov
and
inc
out
jno
mov
jle
scas
mov
jg
cmp
xor
addr16
clc
inc
sub
div
repnz
xchg
jns
jl
ljmp
mov
andb
nop
outsl
andb
addr16
cmpsb
lcall
inc
pushf
fmul
push
sarb
or
scas
cmp
xchg
outsl
testb
push
mov
xchg
lock
pop
mov
imul
int
xor
mov
dec
push
jecxz
xchg
dec
int3
sub
jp
ret
outsb
pusha
adc
adcl
lcall
data16
mov
aad
adc
cmpb
fsubr
lock
pop
cmp
adc
enterw
mov
loope,pt
negl
pop
jbe
mov
jp
sub
js
mov
inc
mov
and
bound
dec
or
or
sbb
jae,pt
mov
mov
pop
call
sub
ret
out
xchg
mov
mov
or
add
jbe
push
fsubr
push
inc
jb
dec
mov
or
repz
outsl
cli
cmp
scas
cmpsl
paddusb
dec
mov
pop
mov
les
mov
push
push
sub
out
les
fildl
nop
hlt
lods
inc
outsb
push
imul
cmpl
mov
insb
lds
sbb
mov
stos
xchg
push
mov
push
inc
sub
cmp
loope
fisttps
lret
movsl
xchg
jmp
out
push
in
xchg
sbb
inc
mov
mov
push
mov
test
mov
mov
jnp
sbb
mov
sbb
jp
gs
dec
lret
das
sub
pop
pop
xchg
repnz
jge
dec
sub
insl
mov
cmpsl
add
insb
hlt
adc
add
lds
pop
loopne
orl
aad
lret
int
ds
push
mov
sub
aad
xchg
je
fdivl
repz
xor
xchg
jo
iret
fisubrl
xchg
xchg
data16
cmp
ss
ljmp
sub
sub
jp
jne
sub
jns
mov
addr16
push
or
mov
je
cmpsl
and
mov
repnz
and
mov
xchg
jmp
xchg
push
ficomps
push
shll
das
push
cmpxchg
sub
pop
sub
std
pop
stos
test
sbb
dec
xor
mov
mov
stc
jge
push
jg
shlb
fs
lcall
notl
orl
xchg
cwtl
dec
push
mov
movsl
xchg
stos
xchg
adc
movsb
lret
movsl
sub
mov
push
xchg
push
aam
fiaddl
call
dec
shrw
into
loop
lcall
mov
add
inc
xchg
or
mov
js
nop
xlat
sbb
call
test
dec
popf
es
imul
mov
cwtl
aad
pop
cltd
mov
in
sub
mov
mov
jmp
popa
cmpsl
xor
push
add
jae
mov
push
popa
bound
mov
int
mov
fildll
div
cld
pop
imul
cltd
inc
das
insb
insl
lcall
mov
push
arpl
add
add
cmp
xchg
aas
outsb
test
jo
sbb
mov
mov
out
andl
cmc
add
fmull
push
icebp
insl
mov
jg
mov
jb,pt
inc
and
jl
mov
out
or
bound
lods
mov
popa
add
ljmp
mov
repnz
pop
and
filds
dec
mov
out
movsb
mov
dec
loope
mov
push
lods
push
pop
fst
ret
stos
dec
jb
mov
cmp
add
jne
cs
cld
jb
mov
repnz
imul
lahf
int
mov
fildl
xchg
mov
pop
dec
ljmp
fisttpl
push
lds
jb
push
lea
adc
inc
lret
test
fs
dec
add
sar
adc
in
adc
loop
enter
xchg
mov
icebp
pushf
xor
scas
sub
sbb
jb
dec
and
jns
adc
inc
inc
es
jle
data16
mov
fwait
mov
xor
xor
mov
xchg
jecxz
inc
cmp
jle
lea
loop
popa
jno
movsl
in
rorb
cmp
cwtl
in
push
push
mov
je
mov
inc
in
sti
in
test
dec
aad
push
test
and
lcall
lret
jmp
outsb
mov
jg
and
jno
data16
scas
pop
out
outsl
jnp
icebp
pop
inc
inc
inc
loope
sbb
mov
or
loopne
or
jbe
fsubrp
push
fwait
std
insb
ljmp
pop
jbe
ja
push
sbb
nop
movsb
mov
adc
inc
add
cmpsb
sbb
loop
mov
add
xor
xchg
stc
lock
subl
fwait
les
or
pop
xor
fcoms
jbe
cmp
rcrl
inc
xchg
pushf
push
ret
loop
xlat
ljmp
lcall
hlt
xor
push
in
fs
lods
pop
mov
ja
ret
iret
xchg
shl
push
push
cmc
mov
fdivs
filds
adc
cmp
add
rorb
inc
mov
repz
mov
scas
pop
or
mov
add
cmp
xor
dec
cmp
or
out
dec
inc
popa
pop
mov
test
jl
jno
pop
push
push
jo
add
repnz
ficoml
jl
or
mov
or
dec
shlb
popa
scas
or
pop
jnp
push
adc
sub
inc
sub
data16
jmp
push
cmp
outsb
cmp
out
sub
add
test
bound
or
int3
inc
mov
pop
cld
pop
jbe
pushf
stos
or
xchg
jl
inc
and
popf
add
outsl
arpl
and
mov
pop
mov
push
gs
jne
addr16
out
cmp
push
mov
push
jmp
les
out
mov
jae
adc
mov
xchg
test
fsubrl
test
dec
xchg
xor
or
sbb
mov
nop
mov
inc
lods
arpl
pop
fmull
sbb
es
cmp
xor
push
mov
mov
push
add
cld
or
jo
in
enter
icebp
xchg
cmpsb
fsubrl
lcall
pop
ret
cmp
lds
lods
cmp
or
cmpsb
mov
repz
and
clc
fstpt
push
xor
cli
sbb
adc
mov
add
sbb
lcall
pop
inc
xchg
xchg
call
dec
movsb
icebp
mov
stos
fcmovnb
in
test
pop
scas
js
iret
shlb
ret
and
loope
in
push
ljmp
push
or
xchg
or
outsb
xchg
iret
std
mov
cmp
and
mov
mov
int3
mov
insl
repnz
cltd
outsb
cmpsb
ljmp
stos
ja
pop
xor
sub
imul
dec
jae
jmp
push
mov
cmp
fwait
adc
mov
jo
fsub
mov
in
lret
mov
adc
movsl
pop
or
push
cli
push
sti
dec
std
cmp
icebp
sub
or
sbb
insb
push
lods
test
dec
or
push
cmp
scas
stc
add
sub
jns
mov
jb
and
jno
adc
add
cmc
mov
inc
cmpsb
jl
xchg
lcall
inc
xor
sbb
push
ror
icebp
dec
in
jp
out
push
mov
cltd
xchg
add
push
add
xor
cmp
dec
xlat
cmp
insl
lea
gs
es
dec
paddb
adc
test
mov
and
mov
je
sti
and
iret
jge
jbe
jmp
xor
xor
dec
cld
insb
jo
or
mov
cmp
stos
ret
mov
ficoml
sub
xchg
mov
in
in
movsb
adc
enter
jbe
es
and
jge
repnz
pop
mov
sub
xor
adc
mov
test
es
cli
lds
mov
pop
add
rcr
lcall
inc
lods
inc
mov
add
cltd
push
jle
int3
and
ja
imul
es
sahf
fwait
pop
jnp
sub
push
dec
inc
mov
mov
pop
mov
imul
repz
js
xchg
sbb
sub
into
fstpt
mov
add
pop
scas
push
push
sub
add
aam
xchg
das
mov
pminsw
lret
mov
mov
into
cld
dec
call
repz
xor
or
jmp
adc
daa
pop
pop
mov
push
in
mov
shr
fidivrs
add
pushf
scas
fadds
cmp
add
cmp
mov
les
push
stc
lret
mov
aas
data16
push
inc
testb
pop
inc
sub
sub
rcll
fistl
mov
pop
pop
sub
jbe
sub
push
and
fadd
das
scas
idivl
and
sbbl
or
jp
adc
dec
push
mov
push
pop
sbbb
push
dec
pop
out
mov
pop
test
mov
mov
out
mov
push
daa
inc
lret
ret
xchg
adc
addr16
or
jg
test
jp
je
mov
cld
xchg
loop
repnz
mov
stos
into
adc
cs
lods
add
sub
loop
scas
adc
xchg
push
dec
icebp
mov
imul
jmp
adc
or
icebp
inc
add
mov
jl
push
xorb
lret
sbb
subb
adc
adc
je
or
cmp
sti
das
repnz
cmp
aas
rorb
pop
ljmp
leave
fisubrl
movb
rolb
pop
into
lods
pop
es
push
or
mov
push
inc
jmp
or
mov
aaa
repz
pusha
add
mov
call
adc
loop
push
push
in
add
inc
les
int3
jl
mov
lcall
shr
cmpsl
xlat
mov
jmp
pop
push
jle
add
repnz
lock
cmp
push
movsl
js
int
jne
xor
popf
adc
sbbl
pop
adc
adc
fisttpl
jns
inc
adc
xlat
icebp
sbb
sahf
ret
lods
sub
lret
fwait
pop
test
in
or
and
fprem
gs
lds
imul
mov
and
rclb
cmpsl
data16
ds
ss
movsb
lods
paddw
mov
xchg
mov
push
jb
iret
or
pop
xor
in
or
cmpsl
xchg
in
aaa
clc
jle
jb
testl
and
cwtl
sbb
jge
dec
adcl
cmp
outsl
or
gs
jge
add
stos
aad
xchg
cmp
into
lods
adc
es
pop
jg
push
cmp
xor
lods
push
push
pop
aad
rcrb
dec
lea
imull
push
shll
jb
cmp
jmp
mov
xor
add
repnz
sub
mov
and
pop
addr16
mov
insb
cmp
or
pushf
leave
int3
addr16
sub
pop
inc
cld
adc
jmp
xchg
cs
lods
pop
jb
repnz
lock
imul
enter
adc
outsb
xchg
push
inc
xor
push
stc
subb
lods
push
imull
and
mov
jle
mov
ss
ja
mov
mov
jmp
sbb
push
jge
sub
imul
out
sub
test
sahf
aaa
add
les
cmc
dec
cmpsb
sub
mov
movsl
dec
mov
xchg
sbbb
lret
mov
fisubs
mov
add
or
or
std
into
lods
aam
data16
mov
jbe
int3
pop
push
mov
dec
les
sti
mov
mov
repnz
lcall
clc
in
fdivp
cltd
das
push
inc
mov
imul
int3
inc
push
fldcw
mov
sub
out
push
dec
dec
mov
cmp
mov
push
fimuls
fbstp
jl
pop
add
and
mov
call
sbb
shll
negb
dec
mov
jnp
push
pop
sub
insl
scas
iret
and
cwtl
pop
fcmovnb
sub
mov
es
call
je
mov
adc
out
cmp
cmp
push
repnz
jne
test
mov
pop
stos
cvtdq2ps
daa
sub
les
inc
push
cmp
les
mov
stc
mov
pop
push
cld
mov
jbe
sub
dec
pop
cli
cmp
xchg
lock
pop
pop
pop
or
sahf
imulb
xchg
div
int3
add
and
rorb
fcomps
loopne
jno
enter
je
mov
sub
dec
mov
cmp
sub
jge
or
cld
add
cmpsb
fcmovb
stos
inc
add
cmp
xchg
mov
insb
mov
push
xor
lcall
movsl
js
movb
mov
imul
scas
xchg
mov
or
les
repz
xor
ja
push
xor
and
sub
scas
dec
jae
cmc
imul
dec
mov
or
inc
fdivl
mov
inc
cwtl
dec
test
sub
test
and
das
cmp
jae
aaa
jnp
xorl
pop
psrlw
ds
jbe
cmp
and
ds
cmp
test
sub
jnp
cmp
mov
data16
fstpt
push
xchg
push
adcl
sbb
std
push
fs
shlb
ror
cld
xor
cli
pop
inc
jo
mov
cli
in
scas
outsl
xchg
jb
fmuls
scas
sti
jmp
test
jbe
leave
or
hlt
jo
mov
mov
insl
outsb
sub
push
inc
popf
push
push
xchg
cmp
mov
push
jne
lds
mov
sub
push
sbb
shll
sbb
cld
sbb
es
jmp
jno
test
pop
bound
xchg
pusha
sbb
call
in
mov
sti
adc
dec
lahf
cmp
cmp
cmp
pusha
pop
push
xor
inc
sti
mov
xchg
fcoml
sub
sbb
sbb
aam
dec
ret
scas
mov
dec
mov
push
adc
push
imul
adc
sti
lods
mov
fistpll
stc
test
sbb
mov
stos
subb
sbb
or
test
aas
cmp
xchg
add
in
jne
sub
inc
xor
lahf
int3
aad
dec
or
insb
rorb
orb
inc
repnz
cs
jmp
or
ror
mov
shrl
jl
and
imul
jp
sbb
cmp
xor
shl
mov
or
or
in
mov
pop
lahf
mov
mov
js
roll
push
cmp
mov
outsb
and
inc
push
jmp
clc
push
and
sbbb
cmpl
loop
jge
adc
xchg
mov
push
or
jbe
test
cld
jo
sub
loopne
add
dec
in
jmp
rcl
iret
push
cmp
mov
push
std
test
dec
shrb
fstpt
jbe
jb
inc
test
pop
mov
popf
int3
mov
ljmp
push
pop
adc
jo
sub
and
mov
popa
and
inc
out
sub
or
xchg
lds
rcr
mov
pextrw
cmp
mov
repnz
aaa
and
stc
xor
mov
rcll
dec
fidivl
incb
in
cmp
xchg
mov
and
push
jnp
dec
cmp
aam
ljmp
icebp
sub
xor
cwtl
push
jno
and
ret
sar
push
fstpt
mov
lods
mov
loopne
ffree
jnp
or
push
push
imul
inc
aaa
xchg
ds
xchg
and
stc
daa
and
inc
std
jnp
sub
jb
inc
mov
out
inc
imul
sub
mov
test
sbb
jmp
add
int
sub
fstpt
fnsave
imul
ja
imul
movsb
lea
sahf
mov
jge
mov
loope
call
add
movsb
dec
js
andb
out
or
ret
or
adc
or
ljmp
dec
negl
push
cmp
mov
lods
in
mov
scas
lods
cwtl
jmp
mov
lock
out
pusha
jae
jne
outsb
push
inc
mov
cwtl
push
mov
imull
jl
dec
sub
in
pop
shrb
mov
outsb
aam
movsl
xlat
out
loope
xor
adc
cmpsb
rol
hlt
mov
push
inc
adcl
mov
sub
push
mov
inc
push
xor
cs
or
lcall
pop
inc
jecxz
push
xchg
sarl
pop
int
popf
call
sbb
fcoms
inc
movb
mov
stc
mov
adc
mov
lahf
jb
lods
pop
cmpsl
mov
das
imul
jb
pop
mov
shrl
es
cmp
stos
dec
sub
mov
lret
daa
arpl
loopne
test
xchg
pop
lock
cmp
xchg
xor
xchg
aad
pop
ficoms
mov
pop
xor
addr16
clc
adc
cmp
fistps
imul
xor
xlat
sahf
jge
fwait
dec
pushf
jo
mov
pop
mov
push
xchg
into
mov
je
adc
and
push
adc
aas
sub
stos
lret
xor
incb
push
imul
dec
pop
inc
cmp
mov
inc
cld
cmpl
mov
mov
xor
in
std
sub
insb
in
sarb
cltd
sbb
std
das
mov
or
cmpl
pop
mov
inc
add
into
jae
lcall
unpckhps
insb
daa
in
std
inc
lcall
rol
fisubrs
pop
es
mov
mov
inc
aas
mov
clc
pushf
ja
arpl
inc
movsl
ret
mov
cwtl
adc
pop
daa
jl
jecxz
mov
mov
xor
daa
cli
and
ss
mov
jmp
insb
dec
mov
adc
xor
xor
cmpl
fsub
jmp
jno
popa
jg
outsl
mov
push
xchg
out
icebp
ja
mov
sbbl
pop
push
dec
sbb
mov
adc
std
mov
cmp
daa
cmp
idivl
push
jg
mov
repz
test
clc
sbb
jle
aam
incl
jnp
push
cwtl
jnp
sbb
xchg
sbb
pop
or
mov
push
sbb
push
shlb
into
xor
js
push
or
es
movsb
or
push
in
aaa
repnz
sbb
je
xor
sahf
je
mov
ljmp
cmp
rorl
orl
bnd
xchg
movsb
test
inc
std
push
sti
insb
mov
decb
nop
xor
imul
pop
aas
mov
inc
outsb
ja
lret
clc
push
ficoml
xor
out
mov
jmp
add
jg,pn
xlat
push
aad
and
or
and
jns
sar
insb
mov
jl
fadd
imul
test
ss
and
mov
movl
or
jo
dec
mov
inc
sti
jecxz
add
mov
jns
stos
and
rorl
mov
lock
mov
les
pop
push
pop
lods
pusha
add
push
enter
and
pop
js
sti
dec
aaa
mov
fnstenv
add
mov
aaa
mov
call
aas
out
test
push
data16
aad
xchg
push
pop
mov
add
mov
insb
sbb
fistpll
and
hlt
icebp
fsin
test
scas
mov
pop
adc
leave
sbbb
in
jge
popf
dec
add
rep
adc
mov
call
add
loope
push
cmp
push
es
imul
push
mov
sub
add
jge
adc
decb
popa
pusha
or
std
adc
out
clc
jb
jne
dec
es
loop
jp
push
stos
add
jle
dec
arpl
sbbb
push
xchg
data16
aaa
ret
jno
sbb
je
es
mov
lds
in
ljmp
popa
dec
and
mov
test
cmpsl
ljmp
into
popa
xlat
les
mov
adc
lcall
fimull
push
inc
mov
mov
shll
lods
repnz
sub
xor
xchg
mov
inc
loope
jmp
sub
jo
and
lods
dec
pop
cld
fadd
dec
bound
inc
xchg
jnp
lods
jbe
or
add
push
jno
mov
push
push
dec
cmp
movsl
sbb
push
popf
push
pop
fucomi
cmp
push
jb
dec
add
aam
fildll
clc
test
and
push
cmp
jb
cld
cltd
addl
mov
arpl
push
adc
mov
orb
xor
mov
orb
mov
xor
fildl
inc
cmp
cmp
daa
add
fwait
fwait
or
lcall
xchg
stc
push
rcrb
push
pop
movb
jo
mov
lret
xchg
pop
cld
sar
sbb
xchg
sub
ljmp
mov
sbb
xchg
jo
xorl
out
cmp
xchg
fnsave
or
add
adc
fs
stos
dec
pop
add
mov
cld
inc
mov
mov
ljmp
pop
adcl
stos
js
imul
nop
rcl
mov
xor
mov
xchg
xor
xor
cmpsb
jno
ljmp
aaa
dec
mov
loope
push
push
jne
punpcklbw
dec
xchg
ss
push
les
gs
push
add
jge
mov
jo
stos
fisubrs
push
jg
xchg
sub
mov
cwtl
and
test
addr16
loope
mov
mov
mov
mov
clc
mov
into
rcrl
xor
jmp
repnz
in
jbe
jno
addr16
bound
inc
insb
add
cltd
in
lcall
xor
arpl
insb
clc
sub
cmp
gs
mov
cld
xchg
fimull
sbbl
fsubs
fwait
xchg
sbbl
mov
jae
das
rcr
cmpsl
in
inc
in
lahf
and
inc
cmp
sbb
inc
jno
jge
inc
cmpsb
sbb
cmpsb
fsubrs
xor
inc
ljmp
dec
inc
lock
add
adc
jbe
mull
cmp
cli
test
inc
inc
mov
dec
fs
mov
in
mov
pop
cmp
xchg
popf
out
adc
push
mov
mov
repnz
jno
xchg
pop
loop
add
pop
fidivs
cmp
lcall
fnsave
clc
or
iret
mov
cmpsb
mov
enter
fs
inc
mov
jmp
inc
xor
inc
test
fcompl
push
mov
push
mov
mov
inc
jbe
ror
sbbb
frstor
dec
les
cmp
push
mov
xlat
out
mov
movsb
pop
xchg
push
pop
cli
sub
addr16
xchg
mov
jns
xlat
dec
cmc
movb
je
add
in
jg
orb
sub
stc
cld
push
lods
fwait
ss
sub
mov
xchg
aaa
repnz
jmp
push
ja
adc
cmc
imull
cmp
jecxz
adcb
imul
popf
dec
jge
xor
mov
int
sbb
adc
pop
gs
stos
or
jb
test
inc
xchg
sbb
loopne
orb
mov
fcmovne
enter
mov
scas
adc
mov
xor
pop
int3
mov
sbb
cli
cli
addr16
push
jge
ds
xor
out
adc
jns
ja
test
mov
mov
mov
js
call
loope
movsb
inc
sub
adc
jle
aad
xlat
insl
push
cmp
arpl
mov
cmp
int3
sub
gs
xor
inc
dec
xor
adc
sbb
xchg
out
data16
sbb
insl
cmp
pop
loop
jno
push
xchg
adc
popf
mov
pop
mov
push
mov
lret
les
scas
stc
xchg
cmc
adc
cmp
subb
pop
jae
fs
xor
cmpsb
jne
xor
cltd
or
lcall
incb
faddl
cwtl
jno
or
and
cltd
xlat
loope
pop
push
add
jbe
sbb
jg
sub
push
std
lret
scas
lret
jbe
add
test
mov
sub
stos
sbb
jle
inc
push
mov
mov
jbe
pop
out
imul
mov
loopne
jge
test
fs
sub
mov
mov
jbe
mov
pop
sub
or
lret
jno
es
testb
ljmp
test
push
mov
mov
or
sbb
push
mov
mov
aas
clc
sub
nop
stc
and
movl
inc
dec
fsts
sub
bound
inc
jge
lods
mov
xchg
mov
pushf
loope
hlt
mov
cltd
out
push
sahf
loopne
ljmp
sbb
xchg
or
add
fisubs
int3
jbe
mov
jl
hlt
fcoms
jmp
pop
add
jp
mov
arpl
xor
pop
cmp
sub
jmp
add
jae
inc
add
jecxz
arpl
sbb
movsl
jo
in
xor
push
test
leave
roll
push
pusha
sbb
fwait
inc
cmovbe
shl
sbb
mov
add
push
test
xchg
jle
fidivrs
sub
pop
cmpsb
pop
and
or
sbb
xlat
aam
icebp
inc
xchg
xor
outsb
add
ss
pushf
xor
push
data16
lcall
pop
adc
fdiv
aad
sbb
push
repnz
add
jnp
mov
jge
mov
mov
ljmp
mov
inc
jge
cmp
js
scas
sbb
cmp
inc
dec
loop
mov
arpl
dec
mov
out
movsb
xchg
out
xor
dec
push
rcrl
mov
test
inc
scas
jmp
into
add
sbb
psraw
gs
and
loopne
and
pop
sbb
into
fildll
mov
and
adc
stos
nop
or
mov
int
add
insb
repz
cmp
fdivrs
cmp
sub
fidivl
cmpb
xchg
ss
lea
jb
fwait
movsl
stc
movsl
mov
nop
rep
and
aam
in
pop
cmpsl
pop
cmp
push
jb
jno
adc
sahf
pop
mov
shr
sbb
int3
aaa
inc
ret
sbb
je
dec
imull
mov
push
xor
push
nop
sbb
in
mov
mov
jnp
sbb
add
push
mov
ljmp
lods
or
int3
cwtl
out
and
push
jge
cmpsb
in
jl
push
and
inc
lock
int3
jle
xlat
dec
outsl
dec
jp
dec
subb
into
pushf
ja
jbe
cmp
lods
jb
flds
inc
dec
sub
in
mov
sbb
mov
pushf
ret
shrb
incl
sti
jo
jno
cmp
aas
outsb
jle
leave
lcall
pop
stos
in
add
pop
je
stos
push
insl
notl
pop
aas
fstpt
loopne
iret
loop
imul
testl
mov
mov
sti
mov
or
mov
cmpsl
dec
xchg
xchg
ss
mov
cmp
out
mov
xchg
or
lcall
lods
daa
scas
mov
rcl
jo
ds
or
out
inc
out
adc
cmp
dec
push
adc
es
out
add
adc
dec
push
push
and
xchg
push
mov
cmp
into
mov
hlt
sbb
pop
imull
jge
mov
mov
push
arpl
dec
mov
sbbl
testb
mov
add
sbb
arpl
shr
sub
andb
aam
stos
imul
xchg
sub
pusha
mov
ror
cmp
js
xlat
adc
push
mov
mov
push
orl
xchg
pushf
insl
xor
sub
adc
js
cs
add
arpl
push
and
push
mov
jae
lock
sub
jl
out
lock
push
and
fistpll
das
pop
jmp
mov
cmpsb
insl
lds
mov
movsb
cs
xlat
test
mov
lds
add
shl
pop
cmc
je
mov
mov
xchg
stos
push
adc
repz
adcb
cmpsl
loop
std
dec
mov
dec
add
movsb
les
insl
mov
lods
scas
fsubs
repz
add
push
sbb
fwait
and
jb
adc
cmpsb
cmpsl
pop
andb
jecxz
std
movl
sbb
aas
jae
inc
mov
in
xchg
dec
negb
dec
and
movsl
jmp
mov
fidivrs
sub
out
mov
pushf
pop
jbe
aam
clc
adc
mov
adc
mov
lock
sarb
xchg
fs
xor
iret
and
pop
adc
mov
mov
fldenv
jno
mov
cmp
jne
cmpl
pusha
out
or
and
mov
adc
xchg
sub
imul
rol
or
repz
xchg
pushf
or
add
test
cli
dec
cmp
fldt
xor
or
sub
lods
cmpsl
nop
repz
mov
stos
ss
adc
add
fldenv
push
fcmovnb
pop
fsubl
cmpb
sti
adc
aaa
and
mov
push
lock
add
je
jle
cld
cmp
sub
outsb
dec
jns
jecxz
imul
out
add
pop
xchg
xchg
dec
mov
push
test
push
xchg
imul
adc
seta
mov
scas
mov
or
push
mov
jle
gs
fstl
das
test
xchg
into
stos
and
mov
ljmp
out
adc
clc
fadds
adc
or
dec
lods
dec
sub
addr16
fsubp
popa
call
clc
lcall
lock
test
inc
dec
sbb
mov
insl
jecxz
sub
xlat
cmpsb
push
fs
ret
mov
scas
add
pop
sarl
out
sub
fdivrs
lret
adc
xor
xchg
daa
daa
outsb
stos
movsl
jnp
mov
cwtl
pop
or
adcb
or
dec
in
loope
add
cmp
sub
imul
ret
or
stos
movsb
aaa
push
xorb
mov
mov
aam
xchg
sbb
iret
or
popf
jg
sbb
lods
sub
test
xlat
push
out
aas
iret
das
insl
xchg
dec
pop
adc
jae
insb
mov
sub
or
cmpsl
stc
scas
loop
sub
aas
push
inc
out
shrb
push
push
jle
mov
fstl
lods
enter
mov
xchg
mov
cld
loopne
mov
sbb
stos
and
and
sbb
nop
dec
push
aad
lock
pop
adc
or
bound
aaa
aaa
adc
cs
ja
cmp
stos
mov
scas
movsw
xchg
cmp
mov
insb
mov
ds
adc
neg
daa
lds
ljmp
push
mov
int
lea
jmp
and
mov
mov
and
xor
imul
jmp
xchg
imul
pop
mov
jnp
add
idivl
fwait
in
cmp
pop
mov
inc
sbb
enter
pop
xchg
lea
fdivp
test
mov
and
push
xchg
mov
into
dec
mov
loopne
adc
mov
push
fisubrl
mov
cmp
mov
dec
movb
mov
ss
inc
stos
popf
daa
sub
sbb
mul
cmp
cmc
lcall
je
or
add
es
loope
lcall
scas
fisubs
sahf
jo
adc
std
jb
orb
ret
jnp
fs
orl
shl
clc
cld
insb
push
mov
das
stos
hlt
ljmp
cli
not
imul
xchg
jnp
movsl
inc
xchg
js
call
je
stc
mov
fadd
fbld
hlt
clc
mov
hlt
adc
fs
insb
repnz
out
mov
fadd
mov
pop
aad
xor
dec
mov
inc
pop
or
loop
lret
sub
lds
sbbl
outsb
dec
fwait
jnp
or
xchg
sbb
mov
xor
cmp
daa
sub
out
movsb
mov
or
xor
mov
pop
push
in
scas
call
mov
and
out
dec
out
fisubl
lock
popf
jno
adc
lcall
or
or
mov
cmpsb
push
arpl
into
adc
mov
arpl
lods
aam
imul
andb
mov
and
jb
mov
divb
and
call
inc
mov
and
jecxz
pushf
cli
fnstenv
loope
cmp
aaa
jno
mov
dec
cmpsl
xchg
mov
cwtl
cli
xchg
push
ss
jo
sub
aad
inc
push
xor
pop
ljmp
fwait
pusha
mov
xchg
and
lds
inc
mov
ljmp
cwtl
call
xchg
mov
cmp
xchg
add
mov
cmp
sbb
sub
sub
daa
sub
test
jl
aad
mov
les
mov
scas
pop
movsb
dec
xchg
jge
push
cmp
push
jmp
xor
lahf
jl
push
xchg
inc
stos
test
push
xor
inc
mov
or
lods
sbb
cmp
jecxz
imul
repz
inc
ror
push
test
lret
stos
repnz
jl
popa
addr16
repz
mov
enter
out
fcmovne
gs
jge
inc
int3
xchg
cld
pop
ss
add
mov
xchg
mov
enter
jo
scas
mov
negb
cmpsl
inc
mov
outsl
push
push
xchg
ret
xlat
inc
das
and
mov
dec
add
jns
jns
lahf
lock
cmp
in
sbb
mov
and
outsl
lock
cli
addr16
shlb
aam
or
movsl
add
xchg
rclb
add
scas
lods
and
rorb
fwait
out
add
lret
adc
add
mov
rcll
mov
cld
dec
lods
dec
mov
cmpsb
mov
inc
mov
sti
sti
fldcw
ljmp
fidivrl
mov
xchg
ss
popf
imul
mov
mov
data16
inc
cmpsb
out
cmp
push
sub
dec
es
pop
mov
ret
std
add
mov
fsubrl
negl
push
test
lret
jbe
loop
aad
xchg
stc
movsl
test
lea
sbb
xchg
cmp
adc
mov
das
mov
stos
js
arpl
or
popa
add
ja
push
dec
shl
pop
pushf
enter
sti
xchg
cltd
jl
push
dec
stos
andl
aas
loope
or
mov
mov
aad
sbb
pop
sub
orl
xchg
push
sub
out
dec
rcll
add
mov
insl
aaa
mov
mov
leave
int3
outsb
sbb
pop
and
jo
and
add
rclb
and
in
push
jmp
into
movsb
pop
bound
pop
pop
repnz
outsb
mov
notl
pop
sbb
mov
das
loop
mov
or
push
out
stc
insl
dec
fbstp
aaa
enter
xchg
roll
xor
gs
mov
pop
inc
mov
movsl
or
js
enter
add
xor
dec
stc
test
mov
mov
push
sbb
fsubrs
mov
add
and
jae
add
mov
xor
mov
in
mov
lods
dec
jecxz
gs
insb
sub
icebp
jmp
icebp
pop
jmp
sbb
arpl
mov
in
jmp
push
mov
popf
fs
mov
aad
xchg
dec
out
dec
and
mov
lcall
inc
mov
stos
adc
into
cli
and
adc
adc
test
lea
mov
imul
mov
loopne
mov
lret
push
xlat
sbbb
vmwrite
out
xchg
push
les
ja
or
gs
sub
mov
jb
xchg
xor
adc
sub
lock
jb
xchg
xchg
add
and
inc
pop
adc
insb
dec
bswap
mov
std
lds
out
cwtl
je
push
pop
aaa
mov
push
fcmovu
or
mov
mov
adc
xchg
scas
cmp
mov
cmpsb
movsb
pop
jle
sarb
cmp
inc
sub
inc
call
sub
inc
in
push
xor
inc
fs
xor
mov
insl
mov
les
cmp
inc
or
or
ret
dec
lret
addl
add
sahf
lret
add
fidivrl
mov
sub
sub
push
cmp
or
sub
jg
mov
jp
mov
lret
push
adc
fnsave
sar
pop
sbb
or
daa
adc
std
ret
or
pop
ljmp
mov
xchg
lcall
icebp
icebp
ds
iret
xchg
cmp
mov
sahf
add
in
imul
das
cmp
jmp
xor
mov
aas
adc
and
jge
mov
pop
mov
fiaddl
add
xor
mov
adc
push
out
adc
rclb
pusha
mov
cmc
jle
cmc
push
or
mov
das
mov
xchg
in
push
cmp
cwtl
adc
lods
dec
dec
and
rol
and
fwait
les
jmp
xchg
imul
add
mov
push
shr
lods
stc
lahf
mov
or
add
movsb
add
out
aam
cmp
test
into
xor
mov
and
leave
inc
push
sbb
adcl
mov
add
sti
lret
xchg
ret
sbb
ret
xor
movsb
mov
cli
xchg
pop
subl
fxch
push
jbe
adc
jne
xchg
icebp
sahf
jge
sbb
mov
cmp
sbb
mov
repz
stos
and
push
cli
scas
into
bound
ficoms
movsb
hlt
push
out
fcompl
into
dec
and
pusha
mov
xchg
adc
xor
xor
xchg
fwait
cltd
mov
mov
and
outsb
data16
arpl
lea
mov
xor
pop
idivb
sarb
pop
pop
jp
int
andb
sbb
into
add
xchg
dec
xchg
pop
stos
sti
xor
fnsave
mov
dec
pop
push
fidivrs
popa
xlat
mov
or
xor
mov
or
jge
test
mov
loope
icebp
inc
jp
out
insb
jp
push
fdivrl
pop
jo
or
sbbl
mov
mov
std
pop
cmpsb
fmuls
or
mov
ja
out
jb
and
xchg
je
lret
xchg
xor
xor
loopne
dec
arpl
jnp
jns
jmp
addb
xchg
pop
adcl
movsb
xor
into
loope
andb
pop
imul
pushf
push
mov
and
iret
mov
popf
mov
cmp
jmp
xchg
sbb
xor
mov
dec
push
scas
les
aaa
imul
push
inc
sbb
ljmp
lret
cmc
fwait
cmp
scas
push
jle
clc
xor
mov
lock
int3
or
mov
xchg
push
mov
aad
jecxz
jno
and
loopne
jmp
pop
daa
xchg
aas
loope
push
andl
xchg
or
es
pop
mov
mov
inc
imul
addb
push
jbe
daa
pop
cmp
lods
xlat
andb
or
jg
mov
sbb
icebp
xchg
rcrl
mov
dec
xor
xchg
insb
testb
loopne
fs
xchg
xchg
iret
jle
mov
dec
aam
jp
push
repz
and
popf
dec
imul
cmp
les
xor
mov
inc
and
sub
sbb
lock
mov
mov
test
or
xor
jb
sbb
cmp
loop
in
push
mov
pop
jge
nop
inc
adc
mov
sbb
inc
mov
shlb
xchg
xor
mov
lret
push
and
sub
mov
and
adc
repz
mov
imull
push
push
punpckldq
push
ljmp
sbb
mov
icebp
scas
inc
mov
mov
jbe
xchg
mov
adc
punpcklwd
jle
aam
shrb
sbb
test
call
xor
inc
jne
outsb
jns
aam
sbb
or
std
pop
dec
into
xor
dec
and
mov
push
test
push
mov
and
push
loope
popa
adc
jae
pop
push
mov
ljmp
test
mov
xchg
ds
adc
aad
mov
adc
test
xor
in
xor
shrl
mov
add
adc
ficompl
sbb
adc
pop
lcall
add
shlb
inc
clc
mov
rcr
popa
mov
rorl
xchg
ljmp
insl
pop
sub
sti
push
jnp
ss
push
dec
mov
or
inc
jbe
lahf
inc
mov
push
sub
jb
and
push
add
inc
test
cltd
mov
in
mov
sahf
test
mov
rolb
xchg
or
cwtl
fidivl
out
mov
loopne
test
jns
movsb
and
inc
fwait
add
popa
mov
sub
fstps
cmpsb
dec
ficompl
mov
xlat
mov
lock
rclb
or
stc
cmp
jo
test
adc
ret
sbb
jnp
imul
sub
shll
int
test
sub
ss
jo
popf
cld
ds
xor
mov
add
add
mov
out
in
test
cld
fisttpl
leave
add
sbbb
cmp
or
xor
out
test
popa
loop
jle
jne
test
jo
dec
out
xor
sbb
mov
in
addr16
int
fsubrs
and
inc
xchg
or
jae
ss
lahf
insb
mov
mov
jo
mov
xchg
fsubrs
fcompl
or
in
cmp
pop
xchg
adc
flds
dec
mov
inc
lock
nop
cmp
iret
jo
daa
das
and
shl
mov
test
aam
mov
cwtl
jp
xor
lcall
sbb
cwtl
aaa
mov
jno
stos
push
pop
xchg
lds
arpl
or
xor
mov
mov
sbb
das
loopne
and
or
xchg
lock
fistpl
fwait
fwait
pop
adc
xor
and
xor
fsubp
test
jl
jae,pt
mov
dec
out
dec
xor
xor
xchg
inc
xor
sbbl
scas
pop
mov
xor
bound
jnp
mov
or
xor
mov
xor
pop
adc
sbb
adc
rcll
xor
jnp
mov
stos
xor
lea
lret
mov
cli
xchg
jns
add
addb
and
xlat
jp
pop
daa
std
fwait
out
out
xlat
push
imul
push
aam
mov
ds
js
xchg
xchg
add
div
ret
adc
xlat
push
jg
mov
cli
int
push
dec
adc
jmp
inc
mov
out
dec
dec
add
fucompp
lret
mov
jbe
je
jge
test
mov
mov
lea
shlb
dec
repnz
jnp
imul
stos
sbb
iret
jae
pop
int3
rcrb
std
pop
mov
mov
push
cmp
sti
cmp
jae
insb
aad
push
mov
pushf
cmpsb
mov
sbb
dec
dec
rcll
mov
enter
sbb
out
aas
out
aad
dec
je
sbb
add
cmp
xor
jp
adc
cltd
jg
filds
popf
mov
lock
lods
jns
ret
jge
adc
mov
push
scas
push
fisubs
insl
enter
lock
adc
ja
cmp
push
aas
add
and
dec
cmp
xor
mov
lcall
sbb
outsb
sub
pop
and
jae
dec
mov
pop
adc
cmp
push
or
mov
pop
xor
xor
or
and
jmp
adc
push
push
icebp
or
insl
sbbl
and
xchg
dec
pop
rorb
pop
das
push
add
dec
mov
jp
adc
inc
mov
sub
cmp
sub
pop
xor
inc
sahf
loop
jnp
mov
pop
or
or
repnz
pop
sub
loopne
add
cmp
inc
incb
arpl
push
mov
cmp
insb
mov
add
sub
js
fs
xchg
jge
push
in
adc
xor
or
cmp
jbe
sti
xchg
inc
fistl
mov
and
sbb
int3
mov
cli
call
mov
aas
pop
or
clc
subl
or
xchg
std
push
cmp
xor
mov
loopne
inc
cmp
sbb
add
xchg
data16
fdivs
fidivs
in
jae
loop
out
sbb
les
and
and
es
mov
mov
pop
arpl
jno
xchg
dec
pushf
outsb
inc
mov
push
dec
jge
mov
lcall
mov
fsubl
xchg
mov
aaa
cmp
or
jns
add
pop
shrw
les
adc
dec
dec
dec
mov
lcall
push
xor
mov
and
iret
mov
arpl
sub
dec
inc
cli
clc
mov
pop
out
js
mov
add
das
push
pop
add
gs
pop
or
inc
adc
pop
scas
mov
in
or
test
add
add
jp
decl
mov
fldl
call
rcrl
mov
mov
mov
in
mov
js
pop
incl
push
stos
rorl
pusha
and
fmulp
jbe
xchg
aam
push
roll
cmc
adc
xchg
pop
sub
stos
sbb
cmp
ja
jp
and
xchg
and
imul
jl
push
push
cmp
fisttps
mov
cmp
or
pop
mov
lret
cmp
mov
sub
pushf
orl
mov
test
scas
or
push
lahf
and
lret
popf
in
and
clc
bound
fcom
mov
dec
or
imul
mov
mov
fs
dec
icebp
cmp
insl
dec
out
or
adc
fnstsw
cli
pushf
and
add
mov
cmpsl
jns
add
mov
mov
xor
xor
es
cmpsl
sub
mov
fstpl
mov
pop
xor
push
popf
and
xor
scas
xchg
rcll
xor
adcb
cmpsl
sub
in
les
push
icebp
subb
add
loope
xchg
mov
in
mov
mov
mov
mov
xorb
cltd
test
adc
push
dec
dec
adc
fs
das
pop
fwait
js
inc
clc
lock
xchg
sbb
inc
jp
push
and
sub
xchg
xor
scas
pop
push
fcomip
inc
mov
dec
ljmp
arpl
rol
sbb
cmp
and
pusha
adc
push
imul
clc
ud0
xor
sub
xchg
movsl
cmp
scas
sub
adc
roll
aam
xorb
shrb
cwtl
xchg
stos
jb
push
roll
test
mov
fistl
fidivl
das
pop
pushf
mov
mov
mov
pop
mov
movsl
push
je
cmp
xchg
aad
sub
enter
sub
aaa
inc
mov
cmp
dec
push
pop
xor
pusha
hlt
mov
and
inc
lret
push
in
dec
mov
mov
mov
mov
jmp
in
or
std
cmc
sub
scas
push
lds
adc
or
cmp
sub
pop
loopne
mov
jle
dec
add
iret
movsb
pop
inc
push
faddl
stc
shr
sbb
xchg
das
clc
mov
ffree
inc
sub
or
or
mov
xchg
insl
push
xor
mov
cmc
lods
inc
xchg
into
outsb
cld
dec
jl
mov
push
jne
adc
fcomps
jle
jne
pushf
cmp
mov
mov
add
jg
pusha
popf
adc
aas
add
cmp
pop
jne
jmp
mov
gs
push
push
sub
call
lea
xor
or
aad
push
push
cli
mov
inc
movsb
mov
adc
and
stos
aaa
into
mov
enter
shll
mov
xor
lds
push
dec
cs
ret
add
push
sub
pushf
in
xor
in
bound
and
and
add
jae
sbb
xchg
rcrb
jp
dec
adc
mov
dec
jo
dec
xchg
mov
es
inc
lcall
stos
add
mov
fwait
jns
loope
aaa
lfs
mov
inc
lret
xor
inc
mov
shlb
and
jbe
out
outsb
das
mov
es
ja
repnz
xorl
xor
mov
sbb
mov
das
mov
fisttps
in
inc
xor
test
inc
cmpsl
cs
lods
ss
mov
lods
psadbw
push
scas
sbb
xor
inc
jl
mov
repz
pop
movsl
nop
inc
shlb
fdivrl
mov
je
fistpll
or
jecxz
repnz
pop
lret
add
cwtl
inc
sub
mov
aas
mov
pop
leave
out
pop
adc
outsl
mov
push
adc
jnp
dec
add
xor
or
or
fnsave
fbstp
xor
sbb
scas
int3
scas
mov
push
cmpsb
inc
scas
shlb
push
jmp
xlat
ja
aaa
dec
mov
out
movsl
inc
idivl
imul
roll
xchg
or
es
lret
popf
iret
pop
mov
lods
jp
push
mov
push
dec
call
xchg
inc
fldcw
xor
into
sahf
inc
cld
mov
cmp
mov
idiv
sub
icebp
test
mov
stos
and
clc
repnz
adc
sub
loopne
push
or
mov
mov
and
scas
jl
jbe
sarl
sub
jg
fisubrl
and
adc
test
mov
aaa
inc
jb
lea
inc
and
and
and
mov
leave
jbe
lret
cmp
pop
sub
dec
mov
xchg
loop
sub
negl
scas
aaa
pop
mov
or
dec
cwtl
je
add
fwait
movsl
sub
icebp
lock
shlb
lods
cmc
dec
jl
cmp
rorl
negl
push
pop
jge
mov
mov
pop
scas
ret
jns
push
pop
in
inc
shlb
and
in
je
lock
inc
mov
out
int
js
aaa
in
mov
dec
ja
dec
or
loop
dec
pushw
add
in
add
cmc
push
lds
inc
aas
jne
out
or
pop
and
cli
out
inc
xchg
ja
inc
mov
adc
adc
in
push
jbe
mov
stc
push
mov
cmp
pop
cmp
leave
movsb
bound
mov
dec
in
lock
pop
pop
cs
xor
idiv
les
add
jmp
sti
adc
jg
sub
lods
sbb
ljmp
or
push
push
test
pop
sbb
ljmp
fisttps
jo
jmp
rclb
and
jne
int3
pop
sub
inc
mov
adc
js
pop
movsb
adc
pushf
cmpsb
mov
jl
mov
mov
inc
hlt
lods
pop
dec
jns
cmp
pop
inc
jae,pn
sbb
mov
cltd
sbb
or
mov
not
ljmp
fs
adc
xor
add
iret
int
int
mov
mov
or
cld
add
cmpsl
jae
or
andb
sbb
inc
mov
daa
imul
cs
mov
leave
call
outsb
out
pusha
fcoml
mov
xlat
mov
testb
add
popa
mov
push
adc
ret
gs
cmp
int3
aam
daa
outsb
int
xchg
jle
divl
sub
mov
ss
pushf
jnp
mov
xorb
stos
aas
push
cmpsl
setae
hlt
inc
lea
mov
pop
in
ficomps
mov
xchg
cwtl
cmpsl
loop
les
sahf
pushf
lds
scas
movsl
add
mov
jmp
mov
sbb
stos
cli
ret
outsl
fwait
lods
and
sbb
stos
add
mov
xchg
imul
aad
mov
pusha
fdivl
int3
insb
in
repnz
xor
enter
pusha
int
mov
lods
xchg
dec
iret
mov
mov
in
fiaddl
testb
mov
add
jge
loop
test
mov
dec
ffreep
pop
into
cld
xor
lds
insl
jns
fs
jo
jo
sbb
jecxz
pop
test
cmp
outsl
iret
xor
popa
cs
jl
in
aaa
push
mov
movsb
repnz
inc
loop
jg
sub
scas
or
sub
pop
mov
mov
ja
out
in
pop
xor
inc
fidivl
and
sahf
mov
cmp
xor
mov
mov
arpl
sbb
sahf
dec
fisubrs
adc
int
adcb
insl
lods
fimuls
and
pop
add
lock
scas
cltd
pop
sbb
pop
xor
mov
xchg
test
loopne
adc
rclb
in
mov
sbb
jecxz
and
lahf
pushf
dec
adc
cmp
add
sub
daa
sbb
add
fwait
sub
jg
cli
mov
jno
jge
stc
adc
aas
mov
movsb
icebp
dec
push
in
dec
mov
dec
shr
adc
int
cli
fistpll
cmp
pop
into
or
or
je
cmpsb
sbb
scas
or
adcb
das
and
dec
add
es
or
inc
jnp
jno
es
push
inc
push
and
mov
clc
test
mov
mov
jg
jmp
out
fs
dec
xchg
ss
and
dec
pushf
ds
inc
mov
sub
cmpsl
cmp
mov
orl
xor
lcall
push
imul
cld
dec
mov
mov
jnp
sbb
test
in
jb
movl
imul
adc
add
cwtl
mov
dec
push
mov
scas
cmp
lock
enter
pop
subl
xor
xchg
jbe
insb
adc
xchg
sti
add
lret
mov
xor
sub
iret
stos
fxch
test
mov
inc
rorl
idiv
mov
outsl
add
xchg
xor
cmp
xlat
pop
xchg
imul
pop
inc
dec
sub
xlat
mov
inc
cltd
inc
xchg
jb
and
fadd
adc
mov
mov
mov
or
lcall
fcoms
inc
mov
jne
add
xchg
arpl
lcall
ficoms
cltd
and
pop
arpl
dec
mov
add
cs
daa
mov
pushf
movsl
pop
mov
scas
aas
jmp
jp
shrl
adc
mov
sbb
jl
fsubl
ret
push
push
mov
dec
mov
gs
add
adc
xor
popa
data16
cli
loop
lock
mov
imul
hlt
push
jnp
xor
in
ret
pop
sbb
mov
icebp
xor
in
popf
sub
and
inc
lock
push
lea
aaa
cmpsl
push
inc
imul
mov
cmc
dec
mov
lods
fsubs
scas
lds
sahf
xchg
lret
push
mov
or
jecxz
sti
cmp
mov
xor
cmp
dec
pushf
xor
pop
out
stos
and
ret
xchg
into
fcompl
jb
sub
xchg
sbb
sti
lcall
cmpsl
iret
and
push
test
mov
and
mov
lret
push
dec
pop
rolb
jp
xor
icebp
pop
popa
iret
out
out
sahf
push
cmp
jg
lcall
sub
pop
iret
xchg
inc
ficoms
lea
test
adc
repnz
xor
dec
jecxz
mov
mov
pop
insl
inc
jge
js
pop
in
std
adc
jns
dec
pop
shlb
jae
std
mov
femms
dec
adcb
xor
adc
sbb
outsl
enter
xchg
call
mov
aad
filds
popa
loope
jnp
out
pop
adc
pop
test
jnp
jb
ficoms
inc
jne
cmpsl
sbb
fs
jne
cld
xchg
shl
leave
stos
fimull
hlt
mov
insl
pushf
push
cmovae
outsb
and
dec
mov
pop
and
fisttpl
jae
adc
mov
mov
in
adc
orl
loop
enter
sub
and
sub
xor
andnps
add
leave
fldcw
pop
inc
mov
adcl
out
xor
sti
faddl
subb
in
pop
pop
daa
arpl
jmp
jnp
hlt
ret
add
lahf
xor
pop
cwtl
xor
sbb
std
mov
sbb
insl
rcrb
mov
push
push
mov
orl
adc
adc
int3
push
cli
inc
enter
sub
insl
inc
mov
sahf
xor
mov
add
ja
jecxz
xor
pop
out
idivl
mov
rol
lds
sbb
ds
push
in
stos
mov
pop
push
ficoml
or
movsb
int3
jg
pushf
shrl
cmp
pop
push
fdivs
les
out
test
scas
push
push
xor
jns
pop
inc
push
into
mov
daa
insl
push
popf
shr
jbe
inc
xor
adc
cmp
lods
mov
ds
sbb
testb
popa
loop
add
pop
idivl
loope
mov
lods
mov
lret
mov
push
and
int
mov
int
psubb
pop
scas
enter
pop
push
and
or
pop
mov
test
jnp
push
inc
iret
in
int
mov
cltd
or
pop
push
push
push
rcl
fistl
inc
sub
test
jp
push
test
pop
jo
in
mov
rorb
jb
sub
jno
lea
sbbl
sub
outsl
adc
sbb
insl
push
pushf
fs
cmpsb
imul
cwtl
lods
add
outsl
test
fldt
scas
add
lds
mov
int
int3
mov
icebp
adc
ret
lods
adc
xor
es
bnd
stos
push
pop
fstps
xor
sub
cli
rorl
mov
sahf
fldenv
mov
out
xor
cmp
pop
sub
pop
shll
mov
loope
ds
sbb
das
cmp
push
mov
cmpb
and
sbb
inc
aas
sub
loop
inc
add
and
data16
mov
icebp
mov
jne
jo
pop
mov
movsl
inc
lcall
jae
sub
push
cmp
adcl
dec
std
rol
xchg
inc
xor
dec
out
cmpsl
inc
loope
jno
out
popa
mov
sti
test
int3
jp
xchg
bound
or
jbe
xchg
adc
popa
jle
xchg
mov
add
cmpsl
dec
arpl
jbe
loope
or
inc
int
dec
mov
in
iret
xchg
popa
jp
test
test
fldl
dec
push
repnz
in
add
or
hlt
in
ljmp
jp
ret
int
cmp
pop
add
mov
fsubs
and
pop
mov
cs
and
ljmp
cwtl
push
pop
cmovno
mov
fistpll
daa
ficomps
inc
cwtl
jmp
sbb
mov
lock
mov
andb
or
or
push
data16
lods
adc
fsubrp
sub
and
cmp
xorl
ret
mov
jb
repnz
andl
outsb
add
jbe
mov
mov
mov
jns
push
pop
and
inc
mov
jge
sub
jbe
call
decl
sub
sti
add
scas
add
push
pushf
and
mov
sbb
cwtl
cld
call
and
cld
stos
push
jl
lods
sahf
sub
enter
fldcw
loopne
push
stc
pop
jns
xchg
push
adc
inc
add
in
pop
cmp
cmc
jmp
lcall
shll
cmp
ljmp
jmp
sti
sub
dec
in
fisttpl
adc
jnp
pop
out
add
std
xorl
les
or
in
push
lods
outsl
push
out
or
dec
jno
shlb
mov
and
rcll
rolb
in
jmp
mov
orb
mov
jae
sbb
shrb
sub
inc
push
aam
test
neg
sti
movsb
ret
mulb
hlt
vpinsrw
aaa
mov
cli
sbb
push
adc
or
cwtl
nop
int
cld
jbe
or
addr16
test
adc
aad
push
les
icebp
idivb
ret
pop
aam
xchg
test
scas
out
das
sbb
fsubl
cmp
pop
mov
lret
pushf
mov
and
imul
ret
int
xchg
stos
mov
mov
cltd
fidivl
clc
lret
ret
movsb
dec
out
insl
rorl
push
popa
out
insl
xchg
push
roll
test
int3
pushf
or
sub
inc
inc
add
push
xchg
jle
scas
es
iret
fldenv
mov
fcoml
inc
in
xchg
mov
mov
push
vfrczpd
sub
les
mov
addr16
xchg
popa
popf
lret
enter
leave
popa
mov
mov
std
and
mov
insb
loopne
mov
ret
mov
push
pop
mov
mov
sti
test
neg
inc
mov
in
or
and
push
hlt
cmpsb
add
xor
sub
mov
or
aad
xchg
js
or
cmpsb
pop
repnz
sbb
repz
push
shlb
int
dec
xchg
scas
out
or
sub
aam
mov
in
adc
push
imul
aas
add
bound
mov
inc
shll
or
cmpsb
sbb
add
test
add
dec
cmp
inc
ja
push
cmp
scas
jo
ja
mul
insl
mov
and
dec
mov
in
dec
jmp
sbb
push
mov
imul
adc
fprem1
ds
or
push
rcll
add
inc
mov
dec
scas
sti
adc
call
and
mov
loope
outsl
icebp
jae
mov
xchg
call
hlt
fistpll
push
xchg
cmp
pmullw
and
lcall
lahf
jge
jo
cmp
test
jge
fs
mov
stos
mov
ja
ret
jae
rcll
xchg
fstps
sub
dec
repz
faddl
sub
mov
cmp
xchg
ret
in
sub
mov
fildll
lret
pop
xlat
add
xor
jmp
addr16
ret
cmp
test
scas
push
lcall
and
dec
gs
ret
mov
sub
into
fisubrs
loope
loop
cmpsl
iret
cmp
loope
shll
insl
ret
shll
pop
cltd
mov
mov
mov
lahf
push
dec
jp
fsubl
sarb
pop
inc
and
testl
je
addr16
sub
stos
xchg
imul
sub
gs
add
inc
icebp
mov
outsb
lds
jecxz
outsb
adc
sbb
mov
sub
scas
mov
enter
cmpsl
cs
stc
xor
testl
mov
mov
lahf
cmp
fmul
bound
hlt
inc
inc
mov
pop
dec
inc
mov
ss
mov
ret
xchg
iret
mov
jmp
xorl
fadd
sbbl
sahf
xchg
arpl
pop
rclb
loope
lods
orl
icebp
cmp
mov
aas
movsb
leave
mov
and
loop
mov
xor
adc
sti
call
xor
inc
cmp
lcall
out
shr
std
pop
lods
pusha
cmp
dec
lret
addl
xchg
cli
inc
fcoms
cmc
xchg
pop
and
push
jle
cs
mov
jne
jns
in
insl
add
mul
xor
in
dec
inc
dec
cmp
pop
mov
mov
xor
or
sub
insb
mov
xchg
push
sbb
inc
and
call
es
adc
mov
outsl
aam
out
cmp
cmp
xchg
dec
mov
rcll
push
andb
and
movsb
fcoms
popf
icebp
mov
mov
aam
aad
das
imul
or
call
xorl
push
iret
lock
xchg
and
lret
push
and
mov
clc
jle
std
lcall
das
faddl
sbb
inc
xchg
int3
mov
dec
mov
test
xor
push
xchg
inc
mov
je
push
sub
xor
mov
cmpsl
push
push
mov
xor
repz
pop
bound
aam
imul
push
adc
jne
das
fs
enter
sbb
mov
mov
add
xor
popf
popa
or
insl
int
mov
pusha
cwtl
push
popa
pusha
pop
hlt
push
mov
pop
daa
js
rorb
pop
daa
jae
pop
push
shll
movsl
dec
push
pop
dec
inc
jae
clc
mov
lret
sahf
fcmove
cmpsl
inc
pop
test
vxorps
sti
mov
rcrl
lods
jb
push
cmp
jae
fisttps
sbb
xchg
adc
add
lds
int3
xor
push
movsb
dec
and
pop
rcr
adc
mov
cmp
jbe
pop
shlb
or
ljmp
pop
xorl
mov
xchg
and
mov
or
jg
rorb
mov
faddl
mov
imul
fstl
add
aas
sbb
push
adc
stos
cmp
xor
or
add
je
pop
lock
inc
jle
ljmp
icebp
int
fidivs
push
out
les
shrl
pop
in
pop
dec
adc
stos
fmuls
stos
inc
mov
lea
mov
or
push
rcrl
out
lods
adc
mov
mov
loopne
xchg
xor
fnstsw
repnz
jns
sub
sbb
or
mov
out
mov
xchg
add
lea
stos
dec
addr16
push
lock
ja
mov
adc
xchg
out
ret
out
ja
sub
xchg
iret
sbb
inc
cmp
jno
arpl
add
andb
cmp
scas
into
push
jle
xor
sbb
sub
xor
adc
fnsetpm(287
insb
xor
fs
or
fwait
add
push
bound
push
push
movsl
mov
je
sahf
idivb
pop
out
sub
adc
fists
call
addr16
sbb
mov
push
add
push
es
adc
inc
aaa
or
mov
push
loop
js
outsb
stc
xchg
xchg
iret
xor
or
dec
pop
dec
aas
lahf
lock
enter
cwtl
adc
jb
loop
test
daa
cs
cli
xchg
push
cmp
jb
dec
cmpsb
int3
mov
jno,pt
lock
add
pushf
mov
std
mov
xchg
sbbl
mov
daa
addb
imul
stos
mov
fidivrl
xchg
sbb
aam
xchg
insl
movsb
ja
in
rol
inc
iret
icebp
iret
and
sbb
ljmp
add
pop
movsb
sbb
jbe
sti
adc
loope
sub
cltd
inc
jmp
inc
and
scas
pushf
fnstenv
adcl
shrb
lahf
or
mov
mov
stos
stos
stos
sbb
jge
in
clc
pop
ret
lret
add
jecxz
in
xor
push
pop
loopne
lahf
sbb
shll
sub
mov
push
jle
out
add
leave
ret
movsl
mov
xchg
inc
jg
push
lock
lret
loopnew
mov
mov
stc
pushl
fs
or
xor
mov
mov
les
dec
jecxz
push
adc
pop
lret
lds
xchg
enter
in
push
cmp
xchg
and
lods
pop
aam
dec
fmulp
outsb
lds
push
frstor
jmp
jns
shll
mov
sub
jp
jb
into
sahf
sar
mov
push
in
xchg
dec
adc
dec
mov
push
inc
popl
test
mov
imul
xor
add
out
push
cmpsl
popa
int
lcall
xor
cmp
loop
dec
mov
adc
test
sub
mov
test
push
clc
mov
test
loope
incl
adc
aad
cld
das
sub
pop
test
and
icebp
jmp
lret
rcr
inc
mov
mov
sahf
pop
jl
or
repnz
pop
out
mov
popa
lcall
adc
inc
dec
lcall
leave
hlt
les
pop
jle
cltd
xchg
pop
xchg
into
pop
ljmp
xor
cmp
xchg
inc
ret
mov
roll
mov
jle
mov
or
call
fadd
bound
cmpsb
lds
mov
xchg
out
stos
mov
pop
out
mov
mov
adc
sbb
mov
sahf
testl
mov
mov
sahf
sbb
adc
and
sub
aad
dec
cwtl
loope
xor
aam
mov
mov
add
or
or
xchg
push
xchg
pusha
pop
sbb
ljmp
movsl
arpl
test
jp
inc
sti
adcl
stos
enter
rorb
outsb
dec
xor
sbb
xchg
loope,pn
dec
cwtl
xchg
add
jle
mov
mov
orb
mov
and
push
cltd
add
cmpb
push
pop
fisubrs
loop
dec
xchg
ret
nop
loopne
shll
test
cld
push
dec
jo
lcall
pop
mov
popf
pop
sub
jae
xchg
adc
inc
push
and
jmp
jmp
cwtl
pop
fwait
fs
sub
and
jp
loop
mov
inc
lret
push
ret
sub
jb
inc
xor
lds
inc
icebp
jo
pop
or
pop
je
scas
mov
adc
ficoml
das
arpl
outsl
insb
adc
int
leave
inc
mov
jbe
int3
ss
je
xchg
pop
sbb
lds
sbb
pop
push
jno
aas
lret
or
pop
lods
and
ja
lock
mov
add
add
mov
inc
enter
out
cmp
lods
dec
dec
lret
mov
ss
mov
icebp
sbb
out
jne
call
dec
repnz
mov
mov
pop
push
repnz
les
stos
cltd
sarb
inc
push
or
je
pop
mov
sbb
das
add
inc
test
subb
dec
adc
sub
iret
pusha
adc
enter
push
std
inc
mov
mov
out
or
xchg
in
push
xor
cld
aaa
lahf
stos
sub
mov
jnp
push
mov
inc
push
sub
aas
lea
clc
mov
inc
clc
pop
cmp
popf
je
add
ret
movl
pop
sub
mov
adc
mov
stos
xorl
mov
insb
pop
in
daa
pop
cmp
and
pusha
jmp
push
mov
shl
insb
loopne
cmp
mov
int
test
mov
jg
movsl
test
stc
aam
mov
mov
and
push
mov
mov
imul
loop
scas
sbb
outsl
ja
cwtl
lcall
sti
or
icebp
aaa
mov
mov
or
jbe
sub
out
inc
sbb
add
test
rclb
adc
cmpsb
mov
jo
pop
ljmp
push
jecxz
mov
je
mov
sarl
jno
add
sbb
mov
xchg
fcompp
icebp
in
negl
pop
arpl
add
dec
push
jle
and
mov
pop
sbb
icebp
pop
sub
lds
jno
sti
mov
jg
or
imul
mov
dec
sbbl
pop
jo
fldcw
and
cmp
test
jo
mov
test
lcall
sbb
fnstcw
mov
lds
sarb
sbb
pop
loop
ret
pop
test
and
adc
aad
inc
orb
push
popa
test
in
inc
je
sbb
cmp
push
hlt
notl
xchg
push
enter
dec
lea
xchg
ss
ret
test
pop
xchg
hlt
jns
fisubrl
cmp
popf
fsubrs
add
sbbl
lods
stc
pop
cmp
out
aaa
cltd
insl
xchg
rcr
andl
pusha
xchg
lretw
xor
out
jb
inc
mov
xchg
mov
test
mov
jo
inc
jecxz
inc
fs
mov
pop
stos
sub
mov
ret
int3
mov
push
lds
in
adc
movsb
add
cmp
mov
pop
popa
mov
or
stc
js
addr16
pusha
xor
mov
pop
sbb
mov
or
adcb
nop
or
addr16
lretw
or
lea
cmp
gs
std
aad
sahf
push
clc
test
cmp
dec
gs
dec
mov
shr
xor
lds
xor
fnstcw
sbb
frstor
pop
xor
mov
sub
jg
add
sahf
in
pop
fisttps
loope
add
mov
jl
mov
adc
adc
mov
bound
aas
out
inc
out
into
imul
or
mov
sub
movsl
loope
ja
int
sub
inc
cltd
lods
or
out
nop
fs
pop
mov
cs
mov
sub
xlat
test
sbb
insl
push
mov
ror
inc
and
inc
sub
xchg
jne
aam
pop
icebp
push
xchg
and
inc
in
cwtl
ljmp
dec
std
ljmp
ret
mov
loope
out
jo
rolb
loopne
sub
in
cmc
fisubrl
test
jg
and
push
pop
or
add
xor
dec
or
adc
je
test
stc
fst
gs
pop
xor
std
pop
popf
push
fnstsw
cmp
xchg
mov
lock
and
sarb
pop
stos
mov
inc
dec
adc
shll
inc
xchg
mov
sub
push
negb
mov
mov
fidivrs
pop
sahf
rclb
andl
lret
or
stc
arpl
cwtl
sub
flds
rclb
inc
pushf
inc
xor
or
sbb
mov
sbb
stc
enter
pop
fisubrs
dec
xchg
xorb
inc
dec
icebp
fwait
js
and
xchg
rep
pop
ds
pop
fldcw
adc
cltd
outsb
or
xchg
push
clc
test
divb
inc
cmp
cmp
adc
push
dec
stc
dec
scas
call
rcrl
mov
in
xchg
lret
mov
ss
mov
fscale
inc
pop
xor
in
gs
and
stos
inc
mov
xchg
mov
cmp
jnp
jbe
ds
idivl
mov
shlb
pop
xchg
and
mov
mov
dec
stos
xor
inc
sbb
pop
arpl
scas
lcall
add
xor
xchg
mov
call
fcomp
js
mov
xchg
inc
call
je
push
cmp
loopne
xorb
push
test
fcompl
xor
jg
aas
pop
push
cmp
push
inc
xor
and
fdivs
cmpsb
inc
fs
out
inc
test
aam
cwtl
pusha
add
jge
sub
lret
ficoml
out
sarb
mov
add
inc
clc
inc
push
add
push
sarb
fldpi
xor
stos
lods
lret
xlat
xor
sbb
imul
mov
push
aaa
inc
xor
add
add
jns
push
xor
push
or
test
cmpl
or
cmp
push
sub
cs
fcmove
mov
add
inc
or
xchg
inc
xchg
inc
xchg
push
mov
push
cmp
push
mov
les
inc
stos
lock
lock
or
pop
jae
ficoml
inc
inc
and
mov
sub
inc
aaa
shll
lahf
fstp
bound
dec
mov
add
jae
mull
sarb
sub
es
arpl
push
les
fiadds
jne
out
loope
cmc
lods
adc
xchg
sub
je
mov
fadds
add
addr16
mov
mov
fidivs
dec
dec
mov
inc
lds
insl
push
pop
pop
xchg
and
push
mov
js
adc
lock
sub
adc
popa
out
jle
mov
enter
add
jnp
ret
or
sub
cs
clc
inc
adc
addr16
pusha
sahf
pop
push
test
scas
push
pop
jg
fucomip
jmp
dec
outsb
push
jae
jo
rolb
pop
adcl
int
cld
addr16
in
mov
cmp
movb
arpl
pushf
pop
jnp
mov
sbb
mov
dec
mov
xchg
cmpsb
sub
pop
mov
mov
fisttpl
pop
mov
test
add
xchg
divb
test
xor
push
xor
push
in
push
sbb
push
dec
sti
dec
sti
dec
fnsave
add
add
enter
icebp
pushl
ljmp
fwait
add
jmp
push
push
mov
xchg
add
sub
icebp
mov
or
daa
add
dec
inc
fld
cmp
xchg
jbe
scas
xchg
add
sbb
push
mov
mov
xlat
push
inc
mov
xor
popa
add
sahf
cmp
sub
shrl
jno
ficomps
dec
cmc
cli
and
cmpsb
or
mov
orb
mov
popl
cltd
push
lods
sbb
jnp
icebp
pop
xchg
pop
jmp
popa
andb
pop
arpl
dec
push
jl
lcall
mov
faddp
push
xor
add
push
pusha
mov
and
xchg
mov
std
sub
mov
pop
add
pop
dec
mov
psubsb
mov
dec
test
icebp
cwtl
or
repnz
xchg
or
inc
gs
mov
push
adc
in
ror
mov
shrl
ret
loope
cmp
test
xchg
pop
mov
mov
cmp
sub
dec
pop
cmp
std
xchg
mov
jp
dec
sub
fs
push
push
xor
je
pop
mov
gs
xlat
mov
dec
jno
lods
sbbl
jg
or
orl
jae
ds
fs
sub
aaa
mov
pusha
xor
pop
ret
push
sbbl
cmp
lock
js
test
shlb
jne
loop
push
inc
loopne
dec
and
sti
push
push
js
out
pop
rorl
cs
loope
adc
std
mov
push
test
negb
add
pop
push
fidivrl
mov
andl
cmp
jle
push
movsb
in
loopne
stc
xor
ror
insl
cltd
or
sub
jae
push
ljmp
sub
xor
or
hlt
xor
push
xor
ret
jns
add
push
arpl
or
adc
pop
dec
bound
vmovups
pop
mov
dec
cs
push
js
cli
andb
fistl
jo
jo
sti
loopne
or
jo
sub
imul
pop
cli
jnp
loope
adc
out
call
sarb
hlt
ret
ret
push
sub
or
leave
mov
mov
sbb
rcrb
sub
out
xchg
cmp
or
xor
fstps
mov
add
shll
cmpsb
dec
jle
sti
jmp
in
sar
cmp
mov
lret
movl
cmp
cmp
clc
cmp
mov
cmp
int
jmp
aas
and
psubd
std
arpl
adc
enter
jns
in
xor
xor
adc
lea
es
cmp
lods
cmpsl
or
popf
dec
inc
jnp
fildll
sub
pop
popa
lahf
daa
push
ljmp
mov
popa
sub
push
push
jno
xchg
cld
cmp
test
loopne
movsl
pop
hlt
dec
test
shlb
xchg
mov
jl
jbe
insb
lahf
nop
push
fwait
cld
int
popf
bound
jo
arpl
test
push
sub
mov
jl
mov
lods
push
xor
push
fdivr
pop
and
insb
fisubrs
data16
ljmp
pop
mov
iret
pop
lods
sarb
mov
jmp
sbb
testl
mov
in
shlb
sbb
movsb
imul
add
test
dec
insl
outsl
int
test
jmp
or
mov
rorl
sub
push
lret
pop
cmp
inc
in
xor
xchg
adc
cmpsb
insl
out
shrb
aam
mov
push
or
sub
jp
shr
push
imul
push
pop
cwtl
mov
scas
push
lock
shll
cli
mov
mov
add
mov
sub
pop
lahf
mov
jl
enter
not
pop
pop
imul
pop
sbb
mov
ret
shll
lods
pop
jl
dec
popf
rcrb
dec
add
add
add
xlat
add
sub
mov
push
ljmp
push
pop
sbb
inc
ss
lret
icebp
lret
out
in
idiv
ss
inc
insl
popf
xchg
in
and
jmpw
cld
iret
inc
pop
jb
pop
mov
jae
push
aam
fwait
xor
mov
push
pop
sbb
mov
outsl
in
lock
jo
lods
and
fisubrs
xor
and
icebp
call
inc
sub
push
orl
xchg
pop
sbb
fwait
xor
xor
adc
insb
and
sbb
in
sbb
jnp
sub
dec
pop
sub
adcl
jbe
cmpsl
cmp
pop
jg
dec
sub
fstp
cld
push
cmp
and
adc
out
sub
jmp
or
push
loop
push
mov
xor
mov
test
mov
adc
stc
out
jl
mov
rolb
flds
mov
test
push
fucomip
mov
and
movsb
into
xchg
enter
inc
arpl
xor
loopne
pushf
add
cmc
adc
cmp
add
ds
adc
push
and
sub
stc
mov
lahf
pop
popf
ss
fnstcw
je
ret
xchg
adc
mul
daa
mov
test
scas
or
mov
jp
mov
das
sub
sub
cmp
adc
mov
dec
inc
divb
jecxz
push
test
lds
sbb
jl
ret
cmp
test
aaa
xor
mov
repz
or
adc
ss
aad
sahf
mov
inc
and
mov
aam
pop
scas
pop
data16
rcrl
and
ficomps
pop
pop
jae
inc
mov
stos
sbb
jns
xchg
popf
or
pop
pusha
and
in
clc
sbb
mov
outsb
sbb
sahf
cmpsb
sbbl
mov
fwait
rorl
and
outsb
mov
or
mov
xor
les
cmp
mov
inc
ret
nop
stc
inc
and
xchg
xorl
out
testb
lds
pop
test
mov
mov
aaa
hlt
scas
je
cmp
pop
cwtl
adc
jmp
lds
xchg
adc
sub
out
in
or
bound
xchg
sbb
xor
popf
cmc
imul
push
arpl
and
and
cltd
push
or
subb
xlat
fdivs
mov
loop
stc
jle
xchg
cli
push
inc
inc
scas
push
aam
into
dec
mov
andb
shl
test
icebp
jp
lods
mov
movsb
jo
arpl
or
mov
push
add
pop
cmp
or
mov
and
arpl
xchg
inc
xor
sbb
mov
xchg
call
outsb
inc
ret
xchg
pop
mov
push
dec
inc
mov
mov
jae
pop
sub
add
lods
lcall
mov
cmp
std
icebp
pop
and
push
call
mov
iret
negl
lods
sub
sbbl
xor
sbb
sbb
pop
in
leave
xor
enter
std
sbbb
mov
imul
aas
fs
xor
das
inc
or
sub
add
out
xor
nop
xchg
and
mov
or
mov
lret
lock
pusha
jge
mov
jp
lcall
adc
pop
pop
mov
outsl
fstpt
push
fwait
ja
and
popf
negl
mov
jg
jne
xchg
mov
lahf
push
and
and
xorb
inc
std
or
pop
fsts
out
xchg
in
ret
xor
imul
mov
andl
cmpsl
cmpsb
test
jmp
cmp
addr16
dec
pop
popf
add
pop
cwtl
scas
mov
mov
adc
pop
movsb
cmp
loopne
mov
roll
pop
ret
lret
cmp
sbb
mov
adcl
fisttpl
int3
xchg
and
sub
mov
jns
ret
pop
cltd
jno
lock
addl
call
insb
jbe
mov
jl
add
test
rorb
lahf
add
flds
ljmp
adc
daa
adc
rcrb
pop
imul
and
pop
jae
adc
inc
pop
push
add
mov
inc
out
jo
or
sbb
mov
or
and
fisubrs
scas
imul
sub
sbb
repnz
out
mov
and
inc
outsl
into
aas
idivb
clc
in
inc
push
pop
int3
cmc
int3
repnz
add
xorb
mov
lret
sub
jbe
jmp
ds
xor
mov
xchg
pop
cmp
imul
push
loop
sub
dec
loope
sub
stos
dec
fndisi(8087
xor
cmp
mov
push
fcompl
gs
sub
ss
push
cmp
mov
sub
xor
nop
mov
inc
mov
arpl
jle
adc
mov
aas
sub
pop
stos
clc
lods
xchg
push
div
loope
dec
iret
mov
test
jnp
mov
and
jge
not
in
or
jae
negb
dec
mov
iret
pop
push
fisttps
loope
mov
mov
jo
test
inc
nop
sbb
push
lahf
loopne
gs
jmp
inc
nop
inc
jp
stos
dec
ja
iret
dec
lock
je
les
test
ret
ljmp
xorl
jbe
icebp
ss
mov
add
sbb
adc
test
js
pop
push
bound
sarb
push
scas
mov
pop
dec
hlt
sub
jl
icebp
adc
insl
or
cmp
mov
lahf
mov
dec
leave
cmp
push
jbe
clc
lea
jbe
jo
xchg
pop
mov
pop
mov
pop
and
jnp
adc
rcl
jecxz
ret
in
aas
adc
lahf
aad
mov
add
sbb
adc
jmp
loope
pop
test
mov
cld
add
mov
rcl
jecxz
inc
push
stc
mov
orb
inc
cmp
mov
xor
bound
push
inc
cmp
in
lcall
mov
dec
rclb
stos
pop
inc
inc
sbb
adc
xor
and
inc
call
push
or
js
jbe
daa
adc
fdivl
cmp
nop
scas
sub
jne
ficoml
les
dec
inc
inc
stc
mov
xchg
jo
shl
push
push
jp
js
xor
lea
push
into
xchg
sti
push
icebp
dec
adc
or
xchg
inc
stos
lods
test
test
andl
pop
xchg
dec
fdiv
xor
xor
sbb
rcrl
scas
ljmp
lock
xchg
lret
js
cld
ja
xor
jle
popl
mov
and
or
mov
in
mov
fs
add
sbb
out
loop
aaa
iret
xor
hlt
cmpsl
stos
jne
or
icebp
cmc
lret
jge
out
iret
or
xchg
ret
je
repnz
daa
ret
mull
cmpsl
popf
xor
push
lock
out
or
pop
dec
cmp
mov
mov
cli
dec
jmp
lea
ds
add
ficoml
inc
cmp
ficompl
pop
xchg
out
mov
xchg
ss
das
sahf
mov
notb
aam
mov
out
stos
subl
cmpsb
gs
cmpsb
fcmovnu
sub
jmp
inc
lods
and
scas
pop
xchg
jg
lock
es
insb
mov
pop
lret
aam
cmpl
mov
and
movsb
das
cmp
in
out
cmp
fisubs
sub
lea
pop
fstpt
push
stc
movsb
and
fnstsw
pop
sbb
cli
test
xor
push
add
pusha
inc
in
in
bound
jo
in
jbe
or
add
pop
mov
xchg
jl
and
rorb
outsb
sub
jbe
inc
mov
mov
jno
rcll
imul
scas
outsb
pop
pop
xlat
jmp
add
pushf
inc
sub
xor
mov
adc
rorl
loop
jno
jne
test
scas
or
daa
mov
adc
dec
or
mov
and
sub
stos
lea
in
movl
in
adc
mov
insl
push
mov
divl
les
mov
and
imul
imul
test
push
lods
mov
pop
xchg
pop
and
fisubs
push
popf
push
push
dec
movl
cmpsb
je
inc
test
sub
ret
fmull
xchg
into
mov
sbb
add
addr16
in
negl
add
and
sbb
mov
cmp
adc
movsb
lcall
add
fbstp
jnp
adc
dec
and
rorb
imul
cmc
out
or
adc
out
shlb
xchg
lret
sub
push
fistl
cltd
adc
and
jnp
mov
repnz
xor
sbb
adc
pop
mov
in
sub
std
xchg
mov
mov
jmp
les
inc
adc
and
sub
mov
movsl
scas
mov
add
shl
adc
dec
jg
xor
out
adc
aas
cmp
mov
les
jecxz
add
out
aaa
mov
pop
fsts
gs
ss
lcall
dec
jb
stos
pop
test
sub
stos
xorb
jl
iret
insl
test
mov
sar
std
or
mov
imul
jbe
das
mov
or
stos
test
pop
lods
int
sbb
push
dec
cmp
xor
sti
push
and
mov
and
pop
mov
or
jge
pop
sbb
cld
mov
dec
ds
xchg
cwtl
lea
and
iret
insl
push
int3
ja
and
mov
xor
jge
inc
mov
xchg
mov
loope
mov
stos
mov
mov
mov
jae
xchg
adc
cs
fisttpll
xchg
lcall
cmpsb
and
mov
jg,pt
in
pop
gs
jl
xchg
jl
or
sbb
loop
rorl
and
daa
sbb
xchg
loopne
inc
dec
jl
mov
xchg
adc
inc
insb
sub
rorb
xchg
call
pushf
fsubrl
icebp
lret
test
adcb
test
push
lahf
pop
mov
mov
jecxz
mov
call
test
or
push
push
jne
sub
inc
jg
lcall
push
mov
sbb
pop
out
cli
jo
gs
stos
xchg
adc
xchg
push
fsubrl
mov
popf
rol
or
jae
hlt
mov
popa
push
mov
cli
imul
in
test
sub
lret
mov
pop
sbb
stc
repnz
sub
incb
aam
pop
mov
sahf
push
fcomi
loop
dec
cmc
mov
push
lods
adc
nop
test
orl
dec
add
stos
insl
vsqrtss
stos
inc
dec
cmpsb
imul
lods
enter
sub
loope
divl
fs
cmpsl
inc
dec
push
adc
push
jg
add
xor
movsb
jo
fistpl
out
pusha
push
cmpsl
ret
fimull
jnp
push
sub
pop
xchg
jo
xchg
aaa
mov
out
sbb
xor
add
fwait
mov
test
adc
jno
push
cmpsl
lods
lock
fists
pop
in
xchg
inc
xor
push
orl
daa
pop
pop
and
ss
dec
movsl
imull
push
inc
in
enter
cld
cmp
push
dec
in
and
sbb
sbb
rcll
cltd
pop
or
pop
pop
or
out
fiaddl
fsubp
mov
mov
shrl
sub
or
xchg
cld
sub
add
jmp
mov
in
mov
hlt
dec
insb
icebp
or
mov
addr16
mov
push
dec
or
stos
mov
xchg
pop
push
sub
push
cmp
insl
test
out
xchg
push
lea
mov
mull
negb
xchg
jnp
push
rorb
jno
push
inc
xor
out
ss
or
stc
pop
adc
fisubrs
roll
out
mov
adc
stos
push
sbb
fs
pop
mov
add
inc
cmp
xor
sbbb
fistl
sub
icebp
add
and
sbb
cmpsb
inc
lahf
mov
pop
mov
hlt
xor
testl
sub
call
sahf
mov
push
sahf
dec
repnz
aaa
je
out
movsb
push
cmpl
fwait
or
hlt
rcll
insb
fnstcw
cwtl
pusha
lahf
lock
sbb
sub
sub
add
lret
lcall
jle
mov
call
fisubrl
aas
push
cmp
loop
mov
mov
mov
fs
sub
push
dec
mov
inc
movsb
pop
mov
mov
xor
lret
cld
mov
pop
mov
add
into
popa
push
xchg
mov
sbbl
aam
adc
jae
mov
mov
cltd
fnstcw
dec
sahf
mov
sub
push
add
fnstsw
cld
pop
fisttps
cmp
int
or
js
data16
mov
fisttps
jns
jmp
sub
dec
pushl
decb
cltd
mov
data16
xchg
fcomps
loopne
mov
in
adc
jmp
push
lahf
scas
mov
loope
into
pop
mov
xchg
in
xchg
insl
arpl
pop
sub
xchg
inc
xlat
push
mov
or
inc
fs
add
hlt
cli
popa
insb
mov
imul
jb
test
xor
popa
cmp
ds
mov
lds
and
pop
adc
out
mov
lret
je
cwtl
rep
ds
loopne
cs
mov
dec
push
mov
pop
sbb
inc
aas
test
fwait
pop
mov
loop
lds
bndldx
test
dec
test
jae
test
dec
push
clc
add
xor
int3
addr16
jne
ja
push
push
imul
sbb
in
negl
call
cs
pop
adc
lret
shll
fimuls
mov
movsb
and
std
pop
fwait
add
loope
in
stos
mov
mov
je
add
out
lahf
scas
aad
call
inc
dec
add
insb
inc
pop
add
cld
lods
jecxz
loop
jae
jne
out
push
xor
xor
popf
sub
addl
mov
ds
addr16
movsl
adc
xor
mov
out
dec
jno
popf
cmp
es
push
push
jb
pusha
cmc
sbb
xchg
xor
sub
jle
dec
and
jno
shl
pushf
and
mov
pop
fsubrp
imul
mov
iret
mov
mov
cmp
dec
inc
pushf
lods
sub
call
adc
jge
push
int
adc
adc
movsl
aaa
mov
aam
pop
aaa
pop
cmpsl
jge
dec
pop
mov
xorb
loopne
cmpsl
scas
icebp
stc
xchg
xchg
xchg
lock
push
hlt
inc
int3
jge
inc
ljmp
xor
jl
scas
repz
int
imul
and
inc
scas
mov
jno
push
loope
addl
ss
repnz
and
cli
push
aad
fwait
mov
jle
mov
dec
rcrl
mov
mov
mov
inc
push
push
push
cmp
sbb
subl
inc
pop
xor
shr
cmp
dec
ret
mov
fmull
mov
sbb
test
bound
call
jg
or
shrl
push
sbb
mov
into
in
xor
lea
mov
sub
in
inc
cmp
xor
push
xor
enter
cmp
aaa
pop
cmp
cli
movsb
jns
outsl
jbe
mov
xchg
out
call
imul
insb
in
and
dec
inc
mov
pop
shlb
pushf
cmp
add
sbb
ret
rcrb
out
mov
pop
add
dec
out
jecxz
sbbl
leave
sbb
fists
bswap
mov
jo
inc
jb
cmp
inc
xchg
fwait
inc
dec
xor
in
jb
jo
mov
ret
sarb
out
aaa
aaa
call
sub
mov
std
mov
test
or
imul
mov
addr16
jno
add
shl
std
roll
pop
mov
sub
fstpt
dec
nop
mov
push
and
decl
pushf
fldenv
int3
rolb
sub
xor
pop
js
rorl
sbb
outsb
adc
mov
jb
and
or
add
lahf
push
and
cmp
sub
out
scas
cmc
popf
ret
rcrb
mov
sahf
sub
lea
imul
and
fsts
xor
mov
jl
cli
sbb
xchg
mov
mov
mov
popf
fstpt
lret
mov
cmp
jne
loopne
mov
cli
pop
loope
ss
sbb
daa
push
das
xor
std
aad
mov
adc
push
cwtl
sub
add
mov
cmp
sub
sub
push
push
js
or
push
mov
mov
push
pop
sbb
int3
mov
xchg
jb
addl
ljmp
pop
int
pop
pop
xchg
jl
aad
scas
fsubl
jo
insl
and
push
dec
cmp
dec
aam
jg
jmp
out
in
nop
inc
mov
lock
test
mov
or
arpl
lds
imul
lods
push
push
push
fidivs
mov
insl
push
cmp
mov
outsb
mov
adc
mov
mov
xlat
loope
imul
inc
lret
mov
lods
jp
repz
pop
lock
lahf
sbb
dec
dec
mov
pop
into
arpl
or
push
imul
repnz
jnp
jns
lcall
sarb
push
xchg
cs
cmpsl
stos
pop
dec
push
dec
xlat
ja
imul
xor
xchg
repnz
insb
cmp
push
dec
movsl
pop
fnstenv
cltd
add
pop
xlat
inc
push
jno
lds
cmc
das
jl
sub
jge
das
fcmovne
lods
mov
shll
jno
mov
das
out
testb
das
jp
ljmp
mov
mov
stos
inc
and
leave
push
in
sbb
cs
addr16
mov
loope
mov
in
inc
push
lods
out
sbb
fistl
nop
flds
in
test
pushf
adc
adc
jbe
leave
in
xchg
shrl
cmp
xchg
jle
jo
push
dec
inc
lods
or
mov
inc
mov
ds
das
jae
mov
jl
pushl
call
fldcw
das
jecxz
dec
adc
dec
xchg
mov
xchg
mov
inc
or
daa
nop
mov
fdivl
call
cwtl
push
sbb
add
in
fnstenv
xchg
aaa
push
aaa
sbb
outsl
sub
jmp
pusha
fwait
scas
addb
testl
cli
sbb
cltd
xor
ret
in
jbe
pop
dec
fs
or
sbb
aad
mov
lock
pop
cmp
cmpsl
or
loopne
inc
jmp
outsl
cmpsl
mov
mov
cmp
inc
fimuls
pop
out
and
mov
mov
xor
fdivrs
iret
pop
sbb
cmp
mov
mov
aad
insl
add
shlb
scas
jb
xlat
in
insl
mov
xor
clc
xchg
cmp
jp
or
sbb
jbe
roll
inc
into
push
sub
test
jmp
mov
jle
js
daa
jne
and
fistps
mov
or
jnp
mov
imul
aaa
xor
jp
pop
xor
sbb
sahf
adc
mov
outsl
or
hlt
insl
stos
jmp
lea
cmpsl
gs
scas
shrb
imul
and
inc
push
mov
inc
inc
loopne
or
jl
mov
test
xchg
popa
std
push
les
cwtl
mov
call
adc
out
xor
scas
sbb
jge
loope
jns
mov
ds
mov
mov
sahf
lahf
cmc
or
xchg
lcall
std
jl
mov
dec
pop
push
lcall
mov
repz
pop
mov
es
movsl
cmp
cmc
ds
cmc
fisttpll
push
and
xchg
out
or
int
test
jb
ja
jle
push
aas
sub
mov
sbb
push
lods
adcl
fs
ret
ljmp
xchg
mov
cmc
aad
lods
mov
or
xchg
add
xor
stos
popf
lret
mov
add
fldpi
xorl
xchg
mov
inc
xchg
std
push
stos
popa
popa
sub
divl
xor
pop
pop
repnz
cmp
cld
or
mov
outsb
mov
outsb
xor
xor
sub
sub
pushf
popa
stos
fisubrs
test
mov
fs
pop
std
xlat
pop
sbb
in
dec
insl
and
pop
cmp
stos
inc
add
movsl
lock
mov
ljmp
add
loopne
int3
clc
imul
call
leave
cmpsb
in
pop
or
fidivs
out
inc
sbb
adc
lods
sbb
pushf
cltd
add
sbb
or
cmp
addb
jg
dec
sbb
dec
push
push
mov
nop
in
sub
out
dec
ljmp
xor
add
cmp
pop
out
mov
js
or
xchg
aad
push
add
test
inc
divl
cmp
nop
rcrl
mov
dec
mov
add
mov
leave
imul
in
stos
xchg
mov
xchg
jl
mov
ret
push
add
pop
mov
inc
pusha
and
cmc
stc
jb
cmpsl
scas
pop
lock
mov
xchg
sbb
mov
dec
imul
repz
push
stos
rcrl
inc
imul
scas
adc
cld
fisubrl
nop
push
mov
inc
xchg
cs
dec
mov
roll
rcll
xor
xchg
aas
lds
aad
or
xchg
adc
vpsubsw
mov
fistps
stos
xchg
fucomi
xor
xor
jne
cmp
hlt
outsl
sub
jae
xorb
push
stc
insb
pop
ljmp
test
in
sub
pusha
fwait
lods
int
std
stc
lret
dec
enter
xchg
call
cmpb
cld
mov
ds
in
sub
jl
imul
adc
mov
cmp
cmp
je
aam
rcr
arpl
adc
int3
jge
daa
pushf
push
sti
xlat
dec
pop
xlat
sub
inc
andb
xchg
addr16
add
adcb
leave
stc
mov
inc
stos
or
lret
aam
cmp
shl
arpl
mov
lods
dec
fstpt
inc
ret
sti
je
aad
xor
xor
or
jl
xchg
mov
fwait
cmpl
pusha
call
xchg
xchg
xchg
test
daa
sub
leave
repz
test
mov
pop
dec
push
std
mov
sub
fidivl
cmp
sbbl
pop
insb
sbb
cmpsb
xchg
rorl
xor
cmp
mov
sbb
dec
cmpsl
shlb
test
mov
int3
lods
cli
insb
sahf
mov
mov
xlat
push
add
xor
ret
and
sbb
gs
jno
addr16
dec
mov
and
es
imul
insl
adc
fsubrs
or
adc
aaa
jb
jo
movsb
into
xor
ds
xorl
rolb
outsl
dec
subb
mov
mov
nop
adc
xlat
or
sub
xor
cs
aad
jo
leave
push
sub
add
int
inc
xchg
jge
movsb
xchg
xchg
repnz
sti
push
scas
sbb
out
cs
pop
ja
cmp
cli
dec
js
cmc
add
cmp
out
loop
jo
or
mov
test
test
lock
sub
out
in
cmp
xor
xchg
xchg
out
push
call
bound
mov
pop
add
lds
pushf
lock
hlt
fstpl
inc
clc
push
add
lds
and
cmp
xlat
ret
cmpsb
add
jno
shll
mov
sbb
fidivrs
and
ss
jg
cmpsb
dec
leave
js
ficompl
add
lods
inc
jmp
sbb
fs
cmp
in
enter
add
cmpsl
mov
fldt
lds
lea
fisubl
mov
mov
pop
or
xchg
xchg
lods
xchg
jl
lret
bound
mov
xchg
roll
xor
pop
pop
jns
arpl
xchg
inc
dec
gs
push
mov
adc
rorl
stc
je
aad
xor
lods
and
add
pop
and
dec
pop
or
push
testb
dec
loopne
imul
pop
out
lahf
inc
xchg
lds
lea
add
ret
out
and
inc
testl
push
into
addr16
mov
mov
cmc
sub
lea
fistpll
fcomps
cltd
xor
test
sub
dec
pop
popa
adc
rcll
jo
leave
push
push
lcall
mov
cmpsl
adc
cmpsb
and
jb
mov
xor
arpl
aaa
lods
arpl
mov
bound
and
inc
mov
dec
add
lds
mov
xor
in
jg
xchg
push
aad
or
cwtl
dec
xchg
dec
and
cmp
ljmp
mov
loopne
sbb
out
mov
lahf
dec
mov
pop
js
int
out
or
decl
mov
pop
cmp
add
icebp
pop
jecxz
cmpsl
icebp
or
mov
cwtl
sub
sbb
fsubrs
sbb
das
pusha
subb
pop
mov
popa
mov
add
push
jae
cli
push
cwtl
mov
pop
and
fnstenv
pusha
sub
xor
nop
mov
cmp
popa
fldl
lahf
test
test
inc
dec
cmp
sub
orb
arpl
mov
push
jecxz
push
outsb
sahf
add
xchg
mov
lret
pop
push
mov
insb
shlb
sti
in
dec
ret
jg
pop
out
mov
ret
in
xchg
and
in
int
aad
fdivrl
sub
popa
imul
rolb
add
or
and
inc
mov
push
mov
movsl
mov
leave
es
pop
and
mov
sub
push
mov
cmp
push
lret
or
adcl
cwtl
push
xchg
repnz
fsub
sbb
sti
add
push
sarl
jae
scas
jge
movsl
xchg
xchg
fstps
push
cmp
dec
not
into
pushf
sbb
pop
sub
popa
mov
xor
call
mov
cmp
lods
rolb
js
cmp
std
int3
mov
jp
into
sub
jne
addr16
sub
cmc
hlt
jge
dec
dec
cmp
loop
jmp
push
fldcw
sbb
outsb
xorb
pop
lret
nop
mov
fistpll
mov
xor
add
test
cltd
and
jne
stos
test
stc
dec
das
jne
lock
cmp
xchg
inc
xor
test
cmp
sub
adc
mov
xchg
add
push
cmc
cmc
jmp
xchg
loope
loopne
sbb
xrelease
push
push
mov
das
dec
mov
ljmpw
dec
and
test
dec
lcall
pop
adcb
movsb
loope
cwtl
sahf
call
mov
jns
repz
push
imul
mov
lret
cmp
int3
mov
inc
pop
out
cmp
ljmp
gs
hlt
pop
jecxz
ret
lcall
mov
loop
pop
add
pop
xchg
or
push
sub
fldl
cmp
pop
std
lods
push
sub
xor
xor
inc
ljmp
lret
jp
cwtl
mov
mov
dec
aam
icebp
lods
in
jnp
movb
sbb
aas
test
daa
sub
std
jo
xchg
es
inc
push
lods
mov
add
inc
xchg
lock
mov
sbb
cmp
jecxz
mov
outsb
movsb
push
push
andl
mov
sub
imul
sub
insl
mov
mov
mov
pop
mov
or
clc
idivl
adc
jbe
mov
in
xor
xchg
cmc
push
jmp
jbe
jmp
pusha
and
xor
push
dec
popl
outsl
cmp
dec
or
push
mov
scas
push
xor
jns
aaa
xchg
pop
pop
sub
pop
mov
xor
in
inc
aas
xlat
es
mov
sbb
cmpsl
cmp
push
aam
fwait
and
out
test
xor
add
cmp
inc
clc
gs
xchg
inc
cmovs
jle
xchg
push
sbb
jbe,pn
push
test
loope
inc
xor
sar
mov
sbb
out
icebp
or
pop
cld
inc
cmpsl
test
add
mov
sub
scas
jg
pop
add
popf
scas
gs
mov
sub
cmpsb
xor
push
mov
and
fisttpll
sbb
ljmp
xchg
arpl
test
movsl
pop
inc
pop
mov
inc
pushf
inc
jp
aas
arpl
mov
mov
test
mov
adc
add
fsubrl
or
cmp
or
out
int3
ss
out
add
add
in
fs
and
pop
push
add
adc
inc
bound
repnz
pop
jae
ss
inc
cmp
push
insl
sbb
lret
xchg
outsb
mov
test
adc
inc
jge
je
ds
mov
or
addb
lret
sarb
ficomps
cmp
mov
push
bound
pop
aad
int3
xor
cltd
cli
mov
pop
aam
and
jo
outsb
out
or
ja
mov
fimull
inc
push
xchg
mov
divl
mov
fidivs
xchg
or
jo
sbb
jns
test
cltd
aad
mov
inc
pop
lods
mov
in
loope
fwait
inc
mov
and
or
clc
mov
adc
das
jecxz
xchg
dec
leave
inc
pop
dec
mov
push
and
jmp
movntq
pop
aas
mov
sbb
mov
jl
sbb
std
ja
xlat
orb
mov
pop
jb
int3
mov
dec
sbb
push
test
jmp
and
or
es
jg
mov
ret
xor
ds
in
fistpll
add
mov
lds
out
pop
icebp
mov
inc
lds
pop
out
repz
ret
or
jns
cwtl
arpl
push
adc
scas
pop
mov
mov
or
es
push
lahf
iret
bound
fcompl
pop
adc
rclb
cmpsl
lock
xor
or
leave
test
in
test
add
push
sub
pop
mov
gs
rolb
idivl
sbb
push
xlat
or
xorl
mov
xchg
pop
push
push
xor
sysexit
ret
fwait
add
mov
aad
movsl
popa
pop
lods
pop
outsb
xchg
daa
add
not
movsb
aaa
ja
adc
sbb
ljmp
push
adc
loop
cmp
ss
dec
sub
or
jl
cmpsb
mov
in
sahf
sub
add
lods
mov
iret
push
test
add
dec
into
pop
sub
push
lea
daa
inc
lret
dec
repz
scas
stos
mov
mov
lods
enter
arpl
and
mov
shr
ror
faddl
in
xchg
fwait
out
dec
loopne
insb
inc
cmp
add
mov
mov
in
enter
push
push
out
out
ds
shrl
sti
xchg
mov
jns
jp
push
daa
cmp
jbe
das
mov
cwtl
fstps
jecxz
inc
xor
pop
pop
cmpsl
pop
mov
lock
pop
dec
outsb
lods
aam
mov
test
adc
pop
loopne
pop
test
adc
in
cltd
sbb
dec
imul
mov
shll
mov
xor
notb
push
sub
sbb
imul
mov
xchg
shr
aad
pushf
xor
pop
xchg
pop
pop
sub
push
adc
jle
fstps
pop
fldenv
or
fcoml
pop
sbb
push
add
xchg
push
and
adc
popf
xor
push
fptan
sub
cmc
rol
jmp
mov
int
test
das
movsb
or
mov
jle
mov
test
pushf
push
sub
xchg
pushf
lcall
ljmp
cli
xchg
imul
ret
loopne
cld
std
mov
sub
pop
pop
cwtl
movsb
push
sub
insl
icebp
jnp
jb
add
pop
jg
push
clc
inc
push
mov
pop
int
or
test
js
outsl
sbb
pop
dec
pop
pop
and
dec
or
repnz
mov
repnz
ret
jnp
imul
jb
out
je
xchg
add
loop
jle
xchg
mov
testl
fisubs
in
outsl
add
test
pop
adc
mov
mov
sub
xchg
fidivs
xorl
pop
lcall
dec
andb
xchg
clc
ds
pop
mov
or
push
jb
psadbw
jle
pop
repnz
aas
add
mov
icebp
hlt
push
ds
ljmp
add
jecxz
xorl
xor
out
data16
and
or
xchg
test
sbb
shll
dec
insl
xchg
iret
movb
push
adc
adc
insl
std
addl
cltd
mov
bnd
adc
jmp
in
pushf
and
addr16
flds
mov
shlb
pop
cmp
sbb
mov
push
pop
xchg
jl
adc
push
sti
adc
pop
xor
cmp
inc
push
stos
xor
add
iret
lcall
jg
not
adc
call
xchg
cltd
pop
pop
imul
insb
gs
mov
mov
aaa
mov
dec
movsb
inc
mov
sbb
jp
jae
insb
hlt
jg
daa
dec
adc
iret
cmp
nop
adc
xchg
scas
in
add
int3
adc
int3
cmp
test
add
je
adc
or
dec
jbe
jo
or
fwait
push
push
xor
mov
pop
mov
xlat
add
movsb
aad
movsb
loop,pt
jmp
lea
repz
ss
cmp
adc
int3
xor
jle
mov
add
out
cmp
sbb
mov
call
mov
push
or
cmp
repnz
inc
popf
cmp
scas
xor
adc
jl
adc
jmp
adc
add
ffreep
jo
pop
out
xchg
aas
xor
adc
repnz
int3
scas
jae
cmpl
cmp
cli
out
push
test
xchg
mov
push
xchg
mov
out
push
adc
loopne
test
movsb
cmp
int3
repnz
aas
loopne
push
insl
lea
xchg
jge
std
arpl
pop
ret
das
cmp
pop
pop
clc
cmp
scas
sub
bound
enter
std
add
pop
out
mov
pushl
xchg
mov
xchg
in
mov
fistpl
aam
test
mov
mov
jae
mov
mov
sbb
loop
dec
xchg
xlat
arpl
pop
test
sub
xchg
pop
or
into
call
sbb
jb
dec
loop
loope
or
jae
or
aad
push
pop
adc
loop
and
lds
xor
loop
mov
pushf
or
int3
add
add
int3
imul
cmpsl
and
jp
pop
push
cmp
cmp
xor
data16
outsb
pop
cs
hlt
scas
pop
ret
pop
mov
mov
fwait
xchg
push
pop
mov
lcall
bound
xor
loopne
loopne
dec
push
cmpsb
mov
stos
push
push
mov
hlt
push
scas
jne
pop
and
lock
dec
or
push
sub
jae
dec
push
mov
or
cs
push
add
xchg
xor
pop
rolb
xor
sub
xor
stc
add
push
ror
jno
cmp
sahf
fiadds
mov
adc
xchg
pusha
pop
push
jae
sbb
sub
sbb
out
popa
mov
sbb
push
gs
adc
and
daa
in
iret
hlt
jns
jmp
ret
out
test
ljmp
dec
data16
pop
fimull
mov
fisubrl
mov
inc
xor
lea
cmp
xor
push
in
sub
mull
or
add
mov
add
and
cmpsb
xor
dec
cmp
outsb
pop
cld
mov
xor
lcall
stc
loopne
push
sbb
pop
cmp
cmp
pop
fs
nop
in
mov
xchg
sub
and
dec
testb
jmp
pop
lock
mov
out
dec
sub
movsb
jge
mov
add
scas
dec
dec
js
mov
mov
add
push
popf
mov
fwait
jne
mov
je
mov
outsb
pop
insb
loopne
cmp
jae
rorb
adc
movsb
and
dec
loopne
inc
xchg
inc
sbb
lds
cmc
pop
stc
xchg
int3
cmp
sub
mov
push
adc
outsb
mov
jno
xor
movsl
adc
mov
add
ret
aas
push
popf
add
mov
sub
scas
lcall
fldenv
cmp
cli
test
adc
jb
pop
fs
or
xchg
lods
dec
popa
pop
cmp
jge
inc
push
mov
icebp
sti
cmp
movsb
test
in
add
or
inc
jg
pop
sbb
xor
jne
notl
aad
add
popa
rolb
lret
repz
daa
test
mov
and
cmpsl
mov
or
inc
jae,pt
out
and
mov
ret
jge
fwait
sbb
imul
popf
divb
cmc
xor
jne
std
and
in
ret
test
popa
pushf
sbb
ljmp
enter
cmp
in
mov
mov
xor
xchg
lods
jg
loop
mov
or
aad
fs
sbb
add
jno
xchg
pop
inc
gs
popf
fs
jle
pop
leave
pop
imul
add
xlat
push
pop
test
repz
pop
inc
or
aas
add
outsb
cld
push
xor
push
jle
or
inc
sti
pop
sub
popa
xchg
push
mov
cld
mov
pop
and
lret
cmpsl
or
sub
ret
lret
movsb
inc
bound
test
rclb
cltd
jge
dec
fwait
ss
mov
dec
add
push
cmpsb
insl
push
jne
add
push
push
rcrl
push
rolb
dec
mov
pop
outsl
sub
pop
mov
jecxz
popa
pop
xor
pop
sub
dec
xchg
out
stc
pop
push
add
out
inc
xor
add
je
cs
sbb
add
mov
repz
dec
popa
shl
repz
jnp
sbb
sbb
sub
mov
rcll
sbb
push
lods
das
mov
sbb
dec
cli
xor
cmp
int3
dec
jg
xor
jne
inc
push
decl
mov
push
loope
add
nop
shll
in
cli
jne
pop
sbb
aaa
pop
outsl
stc
mov
pop
jecxz
push
movsb
fidivs
xchg
mov
or
or
mov
xor
ljmp
and
mov
in
out
jb
movsb
ficompl
sub
rorl
ror
adc
inc
jmp
cmc
and
stc
pop
jmp
inc
test
divl
pop
les
insl
xchg
cmp
push
and
aaa
ds
cmpsb
dec
test
mov
cmp
out
mov
mov
push
cmp
jo
inc
or
loope
subl
pusha
test
xchg
in
lea
xor
or
int3
ret
pop
cmc
pop
xchg
leave
outsl
mov
cltd
mov
daa
stc
adc
or
jmp
pop
lods
nop
xchg
out
sbb
push
lods
nop
push
dec
addl
mov
shlb
pushf
lock
jecxz
mov
loope
mov
sub
push
push
roll
ficoml
pushf
ret
adc
jg
lods
int
mov
js
jecxz
cmc
push
pop
cmp
bound
jo
or
adc
jnp
aam
sub
sbb
test
dec
cli
scas
pusha
fistps
mov
mov
imul
in
pushf
lds
push
xchg
sub
jo
adc
and
hlt
imul
loopne
or
xor
xor
ss
add
in
imul
sub
inc
jb
movsl
popl
cwtl
ret
fwait
cld
sti
ret
out
icebp
jmp
mov
adc
sub
push
out
mov
xorb
jp
mov
pop
lock
inc
in
pop
hlt
aaa
cltd
shld
insb
pop
loope
or
pop
mov
add
jmp
loopne
pop
sub
mov
or
sbb
les
push
jle
xlat
aam
xor
das
pop
and
push
pop
fs
sahf
mov
lods
inc
cli
add
cmp
jmp
and
in
cmp
sub
inc
xchg
and
xchg
enter
lds
and
pop
add
nop
dec
hlt
xor
cmp
cmp
jmp
lahf
inc
xor
test
daa
or
popf
daa
mov
cltd
pop
les
jle
and
mov
or
aad
mov
dec
sub
cwtl
pusha
push
pop
mov
lods
cltd
mov
out
icebp
xchg
rcll
and
mov
mov
sbb
sbb
popf
or
in
les
cli
push
imul
xlat
inc
add
and
out
mov
dec
stos
sahf
lea
aam
fisubrs
int
and
inc
popa
xor
jecxz
movsl
jae
out
xchg
mov
mov
divb
sbb
fiadds
shl
xor
xor
dec
sahf
jl
daa
pop
lahf
js
jge
aaa
in
cs
into
adc
movsb
fxch
data16
cmp
and
dec
loopne
push
ja
andl
call
sbb
loop
insb
pop
pop
mov
fmulp
sub
mov
clc
mov
stc
movsl
das
jne
lahf
imul
mov
cli
fcoms
dec
cmp
cmp
enter
xchg
fwait
jno
aaa
incl
pushf
je
cmc
rcr
push
lock
xor
cmp
and
push
ljmp
popa
dec
mov
test
fstpl
vpaddq
int
mov
arpl
mov
nop
movsb
mov
nop
nop
cmpsb
lods
in
mov
stos
add
xor
xchg
jmp
mov
and
xor
pop
add
fimull
ds
sbb
or
bnd
andb
push
std
dec
mov
inc
and
cmp
cmp
cmc
enter
xor
push
repz
jmp
and
xor
push
dec
pop
call
fdivs
cmp
sbb
pop
pop
lock
rcll
scas
repnz
sbb
iret
cwtl
pop
scas
inc
stc
aam
mov
int3
ret
enter
xor
dec
popl
sarb
pop
xchg
mov
mov
sarl
call
sbb
stos
icebp
and
lea
psubd
sbb
mov
stc
das
cmp
movsl
pop
data16
xlat
lcall
push
cmpsb
sbb
mov
cli
es
dec
aam
cmp
pop
addr16
outsb
cmpsl
sub
dec
divb
mov
jae
dec
into
dec
sbb
into
fcmovb
loopne
cli
mov
adc
jg
jle
sub
jle
pop
loop
mov
outsb
scas
and
dec
pop
pop
movhps
or
clc
and
mov
sti
jns
test
lea
xchg
iret
rolb
mov
adc
wrmsr
dec
inc
jp
sub
xor
add
mov
pop
dec
or
jb
test
xchg
push
fimuls
sub
gs
mov
popf
out
inc
jge
sbbl
bound
dec
mov
pop
mov
jl
sbb
aaa
int3
repnz
ja
loope
dec
icebp
gs
cld
inc
mov
cmpb
and
add
test
cli
mov
dec
arpl
fisttpll
inc
inc
cmp
daa
mov
xchg
jge
int3
or
push
jge
hlt
arpl
sub
sub
lea
pop
pop
jge
lods
cmp
dec
push
mov
in
xchg
leave
test
icebp
adc
in
movsl
imulb
cmp
xor
fbld
xchg
rcrb
pop
and
dec
jg
stc
nop
js
roll
shrl
xchg
xor
dec
hlt
shl
je
lcall
and
add
ficoms
and
fidivs
and
into
jmp
loopne
mov
or
lcall
push
sbb
aam
push
cmp
jmp
add
sub
or
adc
cmp
mov
adc
mov
adc
scas
insb
fisttpl
scas
daa
mov
jg
mov
lods
push
add
ljmp
pushf
sub
mov
ret
adc
fs
insb
inc
push
pop
aaa
jecxz
sub
pop
sbb
inc
pop
mov
fcomip
movsl
mov
dec
pop
aam
cmp
repz
jge
dec
and
sbb
mov
test
pop
xor
aaa
push
idiv
adc
test
inc
rcll
dec
into
sbb
xor
lahf
cmp
dec
repz
jbe
mov
pop
xchg
add
fimull
inc
jne
push
push
inc
lds
int
mov
inc
shll
or
or
int
in
and
cmpb
push
push
nop
mov
jmp
leave
add
sub
fstpl
jns
imul
push
cmpsl
sarl
nop
mov
add
inc
sbb
or
adc
mov
xchg
rcll
jecxz
insl
sahf
mov
int
orb
mov
sbb
push
stc
scas
fwait
subb
lahf
inc
cmovno
repz
push
fmull
inc
push
inc
les
push
subb
push
mov
jne
sbb
push
or
stos
sub
cmp
call
add
and
enter
xchg
add
loope
add
inc
and
arpl
or
clc
pop
test
outsb
mov
adc
lds
lahf
inc
int
pop
outsb
push
nop
das
ljmp
jnp
lcall
add
jmp
push
scas
mov
sub
sub
cmc
pop
outsb
xchg
imul
mov
movsb
or
jae
add
inc
mov
push
cs
push
inc
add
mov
xchg
repz
jns
repz
xchg
in
dec
push
out
pop
call
leave
popa
gs
xor
lock
lock
push
dec
sub
xor
and
or
mov
mov
xchg
lods
fs
dec
into
cs
sti
mov
xchg
inc
rcrl
adc
xor
xchg
sub
lods
add
jp
cmc
popf
xor
sbb
pop
jl
in
dec
inc
jge
jo
clc
hlt
add
hlt
stos
xchg
sbb
jo
cmp
mov
sbbl
bound
mov
mov
mov
enter
testl
push
popa
mov
mov
jge
iret
sub
imul
add
gs
es
lods
ljmp
mov
cld
dec
rcr
or
xchg
shlb
sbb
enter
pop
mov
jnp
pop
mov
mov
in
popf
push
jb
xor
jne
or
lock
or
cs
sub
mov
cmp
pop
cli
pop
stos
cmp
dec
inc
dec
cltd
sbb
mov
sbb
enter
inc
sub
sbb
lods
inc
sub
mov
xchg
push
enter
inc
daa
lea
mov
dec
leave
imul
push
or
mov
push
lcall
mov
sbb
lret
cmp
push
iret
pop
cwtl
out
fcomi
push
test
es
lea
aad
pop
pop
in
lret
push
pop
push
mov
add
cmp
mov
stc
dec
fs
stos
iret
lret
test
jle
int3
ret
pusha
or
pop
mov
sub
imul
jae
xor
adc
loop
out
ret
adc
rcll
or
jnp
mov
les
xchg
xor
mov
adc
pop
ror
rorl
subb
daa
dec
mov
sahf
xchg
outsl
out
sub
cmp
adc
cs
iret
shrb
imul
mov
jl
inc
daa
mov
pop
out
idivb
xor
in
fnstcw
aas
mov
rcr
mov
adc
cmp
sbb
push
and
cmp
mov
daa
movsl
lods
adc
outsl
shrl
inc
ret
add
xor
fcoms
pop
fmuls
and
mov
fwait
test
push
push
and
stos
adc
xchg
inc
mov
xor
cmp
push
mov
add
push
push
dec
or
xchg
fsts
jg
and
mov
mov
adc
nop
push
subl
xor
fldt
push
cmp
leave
lret
test
mov
cmpsb
andl
add
inc
jmp
push
inc
je
fs
rorl
push
clc
jl
scas
orl
jp
cli
test
and
ja
jae
daa
add
cmpsb
mull
nop
enter
out
std
xor
mov
jns
add
bound
call
ss
pop
test
push
push
and
mov
jo
mov
xchg
push
inc
push
in
mov
shl
or
jo
dec
xchg
and
hlt
or
and
sbb
pop
cltd
mov
stc
mov
neg
pop
sbbl
pop
lea
lods
or
outsb
scas
clc
mov
out
dec
add
ss
xor
fdivs
jg
push
cmp
jle
gs
push
aad
sbb
std
add
addr16
push
add
movsb
push
out
inc
pop
sahf
dec
sbb
cmpl
inc
movsb
jmp
adc
imul
fimuls
sbbl
cld
aad
dec
movsb
dec
stc
xchg
jno
clc
sub
xchg
sbb
pop
stc
cld
aam
cmp
cs
push
stc
call
dec
xor
orb
insl
adc
pusha
into
dec
mov
push
fnstcw
lcall
mov
es
cli
outsb
leave
pushf
adc
mov
push
loopne
dec
cli
test
out
into
in
inc
out
or
push
lods
sub
jnp
sub
adcb
push
or
loop
push
pop
inc
aaa
scas
sub
lods
push
jb
int3
pop
jmp
cwtl
fldt
jl
adc
or
fisttpl
icebp
fwait
push
jl
push
shrb
jo
and
mov
mov
sbb
push
sarb
mov
daa
idiv
xor
push
popf
xor
add
jne
jns
int
jmp
stos
dec
sahf
xchg
lret
sub
sbb
movsl
mov
sub
jns
test
mov
movsb
cmp
inc
dec
add
and
aad
add
cld
sub
push
dec
gs
mov
inc
sbb
xchg
xchg
xchg
mov
ljmp
repz
sub
add
lock
dec
jecxz
mov
adc
inc
mov
out
mov
jno
in
mov
push
jp
add
loop
dec
cmp
inc
cmpsb
xor
pop
sub
loop
lret
call
loopne
ds
aas
mov
push
or
test
jle
stos
sub
mov
mov
sbb
cmp
xor
jae
pop
cmpb
ss
cmpl
outsl
fldenv
leave
notb
into
pop
xchg
mull
push
mov
adc
lea
shrb
adc
insb
xor
mov
loop
aam
sub
inc
cmp
xchg
adc
popf
xor
inc
or
push
sbb
and
lock
add
sbb
repnz
bound
sub
sbb
cmpsl
pop
jmp
xchg
in
test
or
in
or
jle
mov
mov
mov
cmp
push
mulb
push
dec
jno
pop
sbb
push
lret
jno
int
push
xor
add
and
addr16
test
push
mov
adcb
cmp
ret
fildl
fsubrl
sub
cmp
ror
cmpl
pop
fistl
or
mov
popf
rep
ja
ret
cmp
dec
in
mov
lahf
adc
outsl
cld
sub
cs
sbb
in
stos
sbb
inc
adc
adc
sbb
iret
lret
xchg
xor
or
xchg
sbb
mov
xchg
mov
dec
insl
jecxz
inc
outsb
push
sahf
xchg
adc
popa
call
pop
mov
ret
xchg
jge
jne
sbb
inc
jle
xor
mov
jl
sub
rol
in
pop
pushf
ret
inc
imul
dec
xor
pop
sbb
push
out
lock
addr16
cmp
sub
or
int3
dec
lods
xor
and
jbe
fwait
and
mov
xchg
mov
cmp
ss
push
mov
fwait
or
cmp
jb
lods
push
sbb
gs
sub
rorb
jmp
xchg
dec
jle
jge
mov
out
out
mov
dec
mov
mov
sahf
lahf
ja
out
outsb
stos
sti
cwtl
test
push
jbe
mov
ffreep
lahf
jno
sub
sub
scas
cmpsb
pushf
dec
aas
add
or
cmp
jno
jno
fcomps
in
nop
nop
dec
pop
push
xchg
and
mov
dec
inc
insl
cmp
clc
scas
test
test
fldl
and
repz
cld
cmp
and
inc
mov
mov
jb
lds
inc
out
xchg
sbb
repnz
cltd
lods
call
mov
rcll
adc
out
sub
dec
int3
xor
mov
cmpsb
in
adc
jp
cwtl
dec
pop
loopne
std
aas
ss
sbb
test
xor
mov
fs
stos
arpl
cltd
push
cs
add
ljmp
mov
movb
loopne
push
call
mov
dec
cld
arpl
stos
outsl
into
stos
lea
stos
nop
and
pop
into
mov
push
ljmp
in
xchg
out
bound
pop
jle
pusha
rcrb
dec
sbb
jbe
and
xor
ljmp
or
mov
aaa
icebp
decl
cmp
mov
xchg
fs
jmp
sub
and
scas
fwait
sub
dec
add
cltd
xchg
cmp
inc
in
jno
sbb
std
mov
pop
imul
test
sarl
les
mov
nop
mov
pop
es
adc
mov
iret
roll
sub
std
cs
js
adc
xor
out
or
lods
mov
mov
flds
add
pusha
cld
jae
push
push
pop
jne
aam
cld
ret
push
or
movsb
loop
jge
pop
js
shll
dec
fs
dec
sbbl
cmp
and
cwtl
out
into
jp
mov
lds
cmp
jl
sub
mov
mov
xlat
shrl
repnz
inc
inc
fsubl
and
push
fcmovu
and
jle
andl
mov
xor
push
xor
cmc
adc
push
jne
inc
adc
cld
mov
and
sub
inc
lock
rcrb
stc
js
push
lods
dec
pushf
out
lret
push
adc
and
cmp
adc
mov
cmp
jl
push
pusha
inc
lret
ret
ret
fsub
sub
arpl
cld
inc
orl
adc
gs
xchg
icebp
loopne
pusha
mov
and
sub
jbe
leave
cmp
xchg
dec
xchg
dec
pop
mov
xchg
ror
sbb
daa
pop
loop
push
dec
mov
cltd
loope
adc
aaa
mov
ret
inc
popa
ret
enter
push
mov
inc
dec
push
and
lret
pop
cmpsl
addr16
enter
mov
push
jae
and
or
push
js
lcall
addr16
faddl
push
mov
fs
loope
adc
mov
idiv
mov
ja
ret
sub
pop
aad
iret
iret
sub
mov
ficoms
jge
movb
push
cmp
jl
ret
xchg
inc
mov
inc
sub
subl
imul
fcompl
jmp
sub
aaa
inc
sub
adc
push
les
inc
daa
test
inc
pop
shl
icebp
sbb
mov
sahf
mov
or
repnz
push
in
arpl
mov
mov
scas
jae
mov
add
je
mov
sub
lds
jge
inc
loop
test
jle
cs
mov
jne
daa
js
jbe
shlb
out
add
dec
mov
outsb
pusha
stc
cmpb
push
jno
ja
repz
out
fmuls
pushf
in
cmpsb
xchg
or
inc
sub
inc
jae
icebp
sbb
cmpsb
rclb
adc
ljmp
imul
inc
mov
cmp
icebp
inc
push
push
popf
scas
out
ret
sub
cmp
sub
inc
jmp
popf
xchg
rcll
jne
mov
and
psrad
xchg
push
shll
sbb
insl
std
or
popa
mov
jbe
and
xchg
int
call
fmull
jle
iret
sbb
testb
std
orb
pop
scas
lret
jge
xchg
dec
lahf
cld
out
pop
jle
inc
xchg
jns
pop
ds
aad
mov
push
pushf
pop
jb
aad
negl
loopne
cli
das
push
inc
xchg
push
movsl
dec
jl
inc
lea
xor
les
jge
stos
jmp
jns
or
dec
dec
mov
adc
outsl
outsl
cld
subl
ljmp
or
push
call
inc
mov
sbb
add
lds
gs
or
fimull
sbb
push
imul
inc
push
jp
push
pop
xchg
sbb
mov
insl
icebp
cmp
mov
adc
movsb
push
cmpb
inc
xor
fisttps
and
scas
mov
and
push
push
jno
inc
nop
ljmp
cmp
fists
repnz
pop
out
push
xchg
rcl
insl
lods
lods
addr16
lock
lods
push
popf
cmpsl
lret
cmp
add
mov
data16
aad
in
mov
pop
adc
fnstenv
insb
in
adc
sub
sbb
aad
jo
mov
pop
mov
mov
inc
iret
sbb
pop
inc
sar
inc
lret
outsb
sbb
sahf
xor
fdiv
add
rol
je
test
xor
jge
mov
data16
inc
test
iret
cmpb
sub
mov
jb
ljmp
push
jno
cld
add
xchg
cli
enter
lret
push
cwtl
add
pop
ss
test
imul
cld
in
test
icebp
jb
mov
stos
popl
fbld
pop
sub
jno
sub
ja
fcom
and
out
stos
jno
or
ror
sub
sbb
lods
test
rep
pop
icebp
mov
sub
pop
cmpsl
and
les
xchg
sar
cmp
jno
xchg
jno
xchg
adc
cmp
adcl
pop
and
fdivs
sbb
loop
xor
adc
popf
add
aad
pop
call
inc
inc
lcall
jo
orl
push
pusha
rcrb
dec
int3
dec
adc
pop
sti
out
sbb
movsb
xor
rcr
iret
cmp
mov
pop
mov
xchg
sbb
mov
adc
movsb
inc
lcall
push
cmp
rolb
pop
push
dec
push
or
jmp
in
stc
mov
or
cmc
sub
repz
push
sarb
mov
cmp
imul
sbb
pop
cmp
dec
aad
cld
sub
imul
xchg
nop
shlb
or
cmp
cmp
cmpsb
lods
push
stc
test
data16
mov
mov
outsl
jnp
imul
cmp
out
adc
insb
pop
lods
cld
in
inc
lret
sbb
fidivrs
fnstcw
mov
xor
pop
jmp
sbb
cmp
dec
push
cld
xor
pusha
xor
and
cmp
ds
lret
sub
cmpsb
sbb
hlt
jge
leave
xchg
mov
mov
jecxz
xor
jg
cmpxchg
outsb
cmp
dec
push
jae
cmp
stos
xchg
mov
cmp
cmpl
and
cmp
les
loop
pop
call
addl
loop
jle
xchg
xchg
fdivrl
add
xor
hlt
subb
xor
adc
in
sbb
out
push
sbb
mov
leave
jno
dec
pop
adc
fwait
test
mov
fcmovbe
sub
mov
xchg
push
mov
push
fildl
pop
into
mov
and
ljmp
icebp
movsb
jecxz,pt
divb
fcompl
bound
and
cmp
sbb
lcall
jo
mov
in
sub
xchg
lret
jg
das
jl
xchg
lahf
or
subl
rcrb
sbb
outsl
stos
pop
fprem1
scas
mov
sub
pop
lcall
inc
mov
mov
js
add
and
leave
pushf
mov
inc
aad
mov
cli
push
movsb
mov
pop
stos
imul
movsb
adc
mov
jl
je
sbb
shlb
fisttpll
mov
imul
xchg
stos
push
or
cmp
jb
ljmp
sbb
jg
cmp
xorb
stos
mov
and
xor
stos
adc
push
push
mov
mov
cs
or
sbb
mov
mov
aad
rclb
cmp
jle
jns
mov
pusha
dec
adc
pop
imul
sbb
scas
aad
jle
pop
mov
subl
cli
xchg
test
mov
adc
sub
popf
inc
pop
ja
popf
andb
insb
repnz
xchg
stos
mov
push
mov
mov
adc
jbe
sub
mov
inc
push
jbe
pop
fistl
sub
test
in
pop
divb
mov
incl
dec
jge
sbb
mov
test
inc
insl
xchg
sub
and
sahf
dec
shlb
scas
pop
rclb
lret
push
inc
or
fdivrp
dec
aad
and
xor
les
cwtl
dec
fcompl
pushf
push
mov
push
jge
cmp
dec
add
or
sbb
xchg
cmpl
xor
cli
jo
inc
out
arpl
push
out
sub
inc
fucomi
scas
test
add
push
or
cmp
jmp
mov
mov
daa
addr16
xor
iret
repz
inc
aas
movsb
nop
addb
add
sbb
iret
pop
aaa
jmp
mov
fldcw
xor
mov
xchg
sub
or
pop
jae
in
adc
imul
cmp
loop
mov
xchg
mov
loope
int
jnp
leave
cltd
leave
addr16
jno
cltd
addr16
scas
ja
sahf
jecxz
inc
es
mov
fistpll
push
mov
das
and
mov
mov
mov
pop
sbb
pop
stos
sub
push
test
mov
fwait
loope
mov
or
push
scas
sti
inc
int3
mov
sbb
cmp
popa
mov
fsub
pop
or
sub
mov
fisubl
cmpsl
jl
and
inc
lock
and
jbe
aad
outsb
sbb
sbb
push
sarl
fildl
inc
scas
jg
jle
fldt
mov
inc
cs
mov
xor
out
push
sbb
lret
pop
out
jne
movsl
add
in
mov
inc
mov
fcoms
mov
insl
and
outsb
xor
mov
pop
mov
mov
push
ljmp
cmp
push
push
push
push
decb
divl
hlt
roll
xchg
shr
lahf
sti
ljmp
call
sub
mov
push
loope
aam
jge
mov
or
lds
in
outsl
dec
add
mov
sbb
jo
std
sbb
cld
jo
sbb
jg
inc
pop
subl
cmp
dec
popa
cmp
gs
fxch
testb
stos
aas
lds
in
xor
adc
aad
and
xchg
mov
cmp
jmp
cli
stos
sbb
pusha
int3
lcall
adc
pop
push
push
push
ret
xor
mov
mov
xchg
js
add
dec
mov
mov
add
and
add
stos
sub
xor
popf
push
inc
daa
sbb
sub
dec
leave
push
and
jmp
stc
aaa
ljmp
jns
mov
test
out
mov
mov
pop
mov
and
int
aas
push
test
mov
fbld
jae
push
jge
in
pop
enter
mov
jbe
in
jl
cs
cwtl
cmpsl
dec
xchg
pop
push
jl
icebp
or
dec
sub
cmp
mov
lock
mov
rorb
repz
jge
test
sbb
sub
mov
push
dec
mov
cld
rclb
je
xor
pop
cmpsb
or
adc
sub
stos
jmp
fcmovne
xor
sbb
leave
cwtl
mov
fidivrs
sub
ret
xchg
pop
movsl
lods
xchg
xchg
or
faddl
pop
push
into
xchg
xchg
ja
mov
hlt
andl
add
push
mov
sub
push
or
pop
ret
aam
fs
sbb
jl
jg
rclb
int3
pushf
lock
add
pop
cmp
add
daa
sarb
jmp
xchg
mov
aas
inc
icebp
and
mov
jecxz
filds
mov
outsl
pop
mov
and
adc
dec
sub
pop
jo
roll
adc
push
jmp
mov
dec
sbb
jns
lea
jnp
out
sub
pop
ja
cmpsb
mov
pop
fsubrl
xlat
jmp
pop
push
push
cmc
mov
pusha
mov
scas
mov
add
mov
and
xchg
mov
loopne
xlat
or
mov
pop
push
in
mov
jecxz
mov
pop
mov
mov
jp
dec
fwait
pusha
sbb
repnz
icebp
std
outsb
push
push
add
mov
jmp
test
pmullw
sbb
sarl
push
cwtl
sub
iret
add
lret
rol
push
cmp
jno
push
imulb
mov
ret
push
cs
adc
adc
sbb
das
cmp
and
xchg
jg
pop
xchg
mov
xor
stc
popa
adc
fimuls
mov
dec
fisubrs
jmp
fmuls
fs
jo,pn
daa
push
and
imul
les
fidivrl
xor
xlat
inc
mov
popf
stc
aaa
fistpl
dec
sub
push
sbb
pop
mov
test
add
or
jge
pop
mov
fdivrl
lock
mov
inc
sub
aas
lods
gs
loop
push
mov
jmp
cltd
xchg
mov
xor
out
adc
cs
ss
push
jl
popa
push
ret
enter
rcll
and
or
push
xchg
inc
imul
nop
test
xchg
sahf
lea
and
dec
rolb
fbld
pop
mov
pop
rorl
jne
fbld
sti
add
lods
fisttpll
in
sub
jnp
in
sub
push
push
mov
mov
mov
and
test
mov
les
adcb
push
mov
andb
aam
ret
dec
push
in
cld
mov
xchg
and
out
in
fistpll
push
add
leave
push
inc
and
inc
xchg
jp
pushf
sbb
lret
mov
push
rol
push
in
push
jbe
das
sub
xor
inc
xchg
loopne
jae
adc
add
push
repz
adc
sbb
push
sub
pop
sahf
daa
jg
mov
or
xchg
das
lds
aas
mov
xor
out
xchg
sub
ljmp
xor
outsl
test
push
fnsave
xor
pop
push
repz
lcall
gs
ficompl
jge
inc
mov
mov
sub
jl
les
cmp
in
jp
sub
xchg
mov
or
das
xor
iret
xchg
fldlg2
aam
mul
xchg
sbbl
mov
leave
lcall
pushf
sub
leave
or
arpl
mov
out
jbe
mov
add
aad
movsl
push
dec
or
cli
fsubl
mov
leave
inc
clc
mov
nop
int
lds
sub
fldl
test
lret
add
mov
jbe
inc
insb
cmp
push
inc
movsb
mov
pop
sub
mov
out
sbb
dec
xchg
xchg
hlt
cmovns
imul
xor
mov
sbb
xchg
fisttpl
fsubrp
jbe
sbb
and
fwait
cmp
js
sub
jno
pop
xchg
and
js
xchg
or
sub
mov
mov
cltd
pop
stc
fists
mov
inc
aad
jb
idivl
inc
add
sahf
xor
cld
rcl
out
jmp
cld
xor
dec
jp
bound
mov
icebp
xchg
sbb
xor
aad
and
test
fnstenv
out
dec
add
hlt
imul
in
mov
in
in
cmpsb
loope
pop
std
popf
mov
shrb
repz
xchg
insb
jb
xor
rclb
bound
jnp
xchg
cltd
int
sub
ficoml
cs
rcr
movsl
xchg
push
push
mov
cwtl
hlt
insl
imul
insb
adc
add
mov
movsb
test
sarl
fildll
bound
and
jle
inc
neg
adc
xorb
lcall
adc
jmp
bound
stc
xor
daa
add
xor
cmp
adc
mov
cli
jge
movsl
mov
lock
mov
cld
sahf
dec
out
jo
inc
cmpsb
scas
lahf
cwtl
inc
dec
cmc
rcrb
add
insl
sbb
adc
mov
pop
fldt
sbb
lods
add
out
insl
fistl
xor
sub
pop
lods
mov
popf
jae
outsb
jns
cmp
insb
cld
xchg
orb
push
iret
ret
push
int
and
add
jl
call
add
inc
rorb
scas
ja
push
mov
inc
out
pusha
loopne
mov
xor
xchg
cmpb
and
mov
sub
inc
cmpsl
push
sahf
cmpsb
xchg
imul
or
nop
enter
int3
sti
inc
pop
mov
dec
mov
imul
mov
ficoms
sti
pop
xchg
mov
jno
pop
lahf
inc
or
cmp
xlat
imul
dec
mov
popa
pop
jo
adc
mov
idivl
into
out
or
repnz
xor
push
xchg
imul
lock
shll
xchg
add
in
sbb
and
test
jo
xchg
jns
push
xor
ret
sbb
mov
pop
rclb
popa
inc
mov
jb
cmp
mov
sub
cmp
test
jp
addb
leave
mov
mov
outsb
lds
fsubrp
rdpmc
sarb
gs
popa
neg
mov
jo
pop
mov
sti
dec
les
add
mov
inc
int
inc
pop
fldcw
ljmp
and
mov
test
fisubl
pop
xchg
push
pop
movsl
or
or
cmp
js
imul
cmpb
and
add
xor
outsl
pop
mov
into
inc
inc
mov
adc
js
out
fs
outsb
xchg
int3
aaa
xor
push
fwait
ret
dec
sub
in
pop
jb
inc
or
andb
jmp
dec
repz
addb
sbb
repz
push
outsb
mov
and
aad
mov
push
cmc
call
lods
mov
inc
push
mov
cmp
stos
dec
cld
out
mov
xchg
push
cmp
call
rep
mov
sub
shl
ret
mov
push
sbb
repz
push
push
test
stc
jb
jecxz
xor
mov
rcrl
mov
mov
and
in
adc
mov
sbb
popa
inc
pop
push
xlat
or
or
xchg
into
lods
sbb
pusha
push
sub
or
inc
jo
add
fists
add
addb
cli
sub
dec
sbbl
jo
adc
sub
jl
ss
cmp
cmc
ret
and
pop
in
adc
lock
mov
fldt
test
arpl
sti
mov
icebp
or
iret
mov
sub
adc
inc
push
sti
xor
mov
dec
cmp
into
mov
dec
push
fidivrs
mov
xor
outsb
ror
pop
imul
int
pop
sbb
jmp
test
arpl
jae
mov
jno
push
mov
movups
jmp
mov
lock
cmp
dec
subb
and
pop
mov
adc
ljmp
divb
int
jmp
xchg
fldenv
push
lahf
sub
xor
cwtl
ficoml
insl
xor
loope
cmp
mov
sarl
test
mov
push
les
inc
mov
sbb
sbb
pushf
insl
mov
push
sbb
test
lods
pop
sub
xchg
fwait
mov
and
jnp
aam
jg
ja
xchg
in
cmp
in
jge
or
popf
mov
fidivrs
pop
dec
xchg
adc
or
negl
mov
sbbl
test
mov
cmp
shlb
cmpsb
movsb
pop
enter
xorb
mov
test
adc
push
dec
loope
pop
mov
jmp
xor
lds
jmp
lock
test
mov
or
push
push
mov
cmp
pop
imul
test
mov
stos
mov
cmc
out
loop
insl
push
popf
pusha
outsb
leave
mov
shlb
dec
ja
pop
js
shll
mov
jns
sub
fwait
pushf
pop
jbe
xchg
movsb
adc
cwtl
adc
inc
test
dec
xchg
jge
es
dec
stos
cmc
mov
pop
mov
shlb
push
shll
fld
mov
add
mov
ret
inc
push
loopne
mov
mov
xor
daa
jae
push
sbbb
rclb
scas
add
dec
lods
scas
mov
push
jo
jne
sbb
cmp
or
imul
pop
and
mov
pop
xchg
scas
lret
mov
mov
xchg
cltd
mov
ja
mov
push
pop
cld
mov
dec
scas
gs
mov
jle
rorb
imul
push
xor
adc
sub
inc
xchg
inc
into
sub
or
movsb
xor
clc
jno
popa
mov
cmp
push
mov
jae
pop
insb
pushl
in
push
inc
add
adc
clc
rcrb
insl
loopne
ds
cmp
sbb
jb
add
adc
or
or
sub
imul
mov
subps
sub
add
dec
roll
mov
movsb
mov
es
clc
mov
sti
es
adc
mov
adcl
popa
adc
sbbl
push
pop
ss
cmp
fucomip
mov
push
cmp
scas
xchg
mov
lcall
mov
hlt
sbb
xor
out
outsb
insl
push
pop
inc
les
rclb
add
or
push
xchg
jno
cmp
or
pop
push
mov
xchg
jle
movsb
andb
mov
sub
sbb
sbb
test
cli
mov
push
sub
gs
jge
in
inc
enter
in
daa
sub
cmp
test
and
and
mov
stos
nop
popf
subb
lock
orl
mov
callw
or
mov
in
dec
test
mov
lret
xchg
add
mov
push
inc
or
mov
and
xlat
repnz
enter
lret
mov
lods
mov
mov
xor
jmp
loop
scas
fstl
push
jle
mov
sbb
call
stc
pushw
cmp
sahf
data16
mov
insb
sbb
jge
fs
xor
leave
sbb
jae
inc
sbb
test
jno
stos
xor
mov
repz
mov
stos
jg
punpckhwd
icebp
decb
cltd
mov
idivl
outsl
cs
repnz
or
mov
out
orl
mov
or
jmp
insl
pusha
mov
sub
cld
adc
push
jle
mov
sahf
out
cmc
jecxz
js
mov
mov
insb
add
xchg
negb
repz
sbb
inc
push
rcll
loop
fdiv
or
dec
lahf
or
push
enter
mov
jne
stos
or
shl
sbb
adc
dec
sbb
sbb
and
pop
and
aas
push
xchg
shrb
push
xor
xlat
or
test
sub
out
ja
clc
mov
mov
push
rdmsr
pop
sub
arpl
subl
jb
add
push
pop
frstor
test
xchg
mov
or
pushf
ret
jge
movsb
insb
lcall
ret
mov
adc
cmpsl
add
push
insb
sub
ds
mov
ret
subl
and
sahf
outsl
inc
cmp
mov
mov
sub
mov
xchg
fmul
and
or
add
push
and
or
dec
cmp
cld
push
call
std
addb
fisttps
insl
xchg
nop
and
cmp
sbb
jbe
sub
repz
test
sub
push
or
daa
lock
xchg
fidivl
mov
xor
mov
and
lea
and
loope
outsl
fsubl
lcall
and
xor
mov
sbb
jbe
xor
out
adc
pop
mov
dec
xchg
int
add
sub
call
mov
int3
xchg
pusha
mov
xchg
add
jl
sub
es
es
adc
sub
dec
ret
xchg
and
cmp
sbb
lock
rcr
fidivrl
imul
fs
repz
cmp
cmpsb
push
pop
sbb
loope
rcrl
mov
jo
rolb
mov
pop
bnd
loopne
int3
negb
test
jne
cmp
xchg
jne
mov
mov
sub
sub
loop
mov
mov
push
stos
dec
pop
outsb
add
inc
push
pop
cmpl
popf
jp
mov
cs
nop
incl
cmpsb
sahf
imul
jmp
cmpl
jg
cmpb
ja
xor
adc
test
outsl
cmpsl
lods
maxps
pop
sub
scas
cmpsb
pop
add
dec
les
ss
test
cmp
fs
movl
aad
fstl
stos
mov
or
pushf
inc
lcall
shl
in
cld
scas
enter
sbb
test
mov
or
scas
sti
push
and
jecxz
cmc
in
mov
xchg
sarb
nop
test
inc
xor
pusha
outsl
xchg
sarb
std
mov
mov
pop
enter
xor
rcrb
leave
stos
sti
push
mov
divl
fistl
jne
mov
cmp
idivl
jmp
decl
fcomp
hlt
push
and
xchg
ds
and
mov
or
out
jae
lea
mov
daa
mov
call
push
mov
and
sahf
repz
jl
clc
sub
adc
insl
add
fs
jns
fcompl
pop
push
lock
lret
inc
test
mov
cmpsl
mov
jbe
testl
xor
lret
arpl
fstps
in
fcomps
or
xchg
out
cmpl
loope
xor
out
cmc
cmp
sbbl
cwtl
rcll
cmpsl
add
push
lea
lds
sub
nop
adc
pop
aad
dec
fildl
ss
insb
fisubs
xor
xlat
sti
fdivs
pushf
outsl
outsl
fsubrs
gs
jae
cmp
or
adc
mov
jbe
inc
es
sub
xor
setg
jbe
cltd
std
pop
shlb
repz
sub
icebp
fcmovb
cmp
adc
fdivl
or
mov
insb
sub
jmp
lret
xor
stos
mov
lea
in
loopne
ret
mov
pop
inc
js
sarl
sbb
fcompl
pop
js
mov
adc
mov
je
add
gs
inc
xlat
outsl
rolb
xor
mov
mov
int
pop
outsl
nop
rcrl
call
lret
cmp
dec
outsb
mov
sti
hlt
sahf
push
loopne
dec
divl
push
sub
push
leave
arpl
mov
stos
xchg
mov
xchg
lock
cmp
imul
xor
mov
cmp
stos
cmp
stos
outsl
and
ss
lcall
std
mov
fidivrs
jg
cmpb
stos
mov
pusha
jb
std
xor
push
or
lds
adc
test
lods
scas
mov
xlat
addb
cmc
mov
pop
inc
outsl
stos
in
lret
dec
rol
push
je
or
test
int3
rcl
xchg
or
out
dec
clc
and
jp
es
ds
lret
and
nop
cmova
jmp
shl
arpl
roll
popa
js
push
in
mov
div
nop
lods
push
mov
xchg
loop
sbb
dec
imul
ret
mov
inc
mov
pop
inc
jne
cltd
jg
add
xchg
xlat
and
mov
jne
sub
pop
in
pop
fisttps
sub
mov
cmpsl
fldcw
dec
outsb
test
les
movsb
in
and
push
xchg
loop
and
cmpsb
inc
repnz
iret
sub
sub
loopne
dec
je
cmp
stos
jbe
adc
xor
xchg
mov
data16
sbb
in
and
xorb
push
les
stos
loope
inc
mov
repz
mov
pop
lea
or
sub
xchg
sbb
mov
inc
inc
addb
and
sti
movsl
xchg
sbb
repz
call
mov
loopne
nop
add
xor
mov
add
push
and
cli
mov
iret
xor
push
sti
mov
test
mov
bswap
movsb
iret
sbb
sti
sbb
idivl
nop
mov
mov
xchg
or
jbe
clc
in
add
sbb
les
sahf
inc
push
stos
out
adc
hlt
sub
sub
add
mov
jecxz
pop
gs
lcall
lahf
xchg
fsub
rolb
loopne
sbb
das
mov
add
out
dec
addr16
sahf
mov
sar
dec
add
or
adc
push
pushf
xchg
ret
aas
enter
xchg
sub
pop
xchg
pop
xchg
sbb
xchg
test
movl
loope
adc
andl
adc
add
out
cmpsb
mov
jnp
das
loopne
xchg
ret
sbb
cmp
jl
out
sub
leave
std
inc
repz
shl
rcll
lock
mov
lahf
cmp
sub
sub
push
clc
pop
cmpsl
mov
fstl
mov
enter
sahf
mov
fidivl
inc
mov
xchg
cmp
push
sbb
sbb
add
and
sbb
loope
dec
dec
ret
xlat
sbb
fwait
rcr
decl
xor
cmpsb
xor
cmpsl
incb
dec
xchg
push
sub
jo
sub
loop
and
jecxz
repz
jne
jne
test
mov
iret
cmp
shrb
fwait
rcll
add
sahf
stos
xor
out
pusha
pop
add
cs
cltd
sub
mov
xchg
push
dec
push
add
push
cmp
push
lods
push
push
jecxz
sahf
cs
add
iret
dec
adc
popf
and
or
push
adc
repnz
lret
pop
out
shlb
ret
fnstenv
movsl
leave
add
test
dec
sbb
jmp
cmp
jne
sbb
hlt
mov
mov
jnp
outsb
jns
cmc
add
add
leave
push
pop
addr16
xchg
mov
inc
push
xchg
add
dec
xlat
pop
hlt
mov
loope
or
mov
push
nop
enter
sti
shrb
xor
pop
pop
jns
bound
lcall
cmp
xor
mov
fmuls
les
scas
ds
jp
pop
insb
cmp
sbb
pop
stos
nop
popa
jo
stos
stc
mov
bnd
into
sbb
stc
mov
adc
jo
out
pop
stos
in
jecxz
inc
and
mov
or
add
daa
push
fnstsw
mov
xchg
jae
mov
add
mov
mov
push
dec
repz
mov
xor
pop
aad
pop
mov
push
mov
gs
leave
sbb
jl
mov
mov
adc
in
xor
popa
lock
jge
repnz
orl
in
rcl
mov
mov
daa
shrl
cmp
scas
or
dec
cwtl
lcall
mov
test
enter
repnz
ret
frndint
mov
cmp
inc
out
jne
pop
mov
mov
push
and
jg
adc
movsb
mov
mov
sbbb
sbb
out
or
xchg
pop
or
int
insl
sbb
xchg
pop
push
mov
rcrl
push
int3
inc
xchg
and
outsl
cmp
out
aad
mov
out
bound
ss
dec
xchg
fwait
out
and
pusha
sub
xor
fwait
push
test
aad
in
cld
in
movsl
out
sub
mov
sti
xlat
push
jns
add
mov
xchg
ret
aad
pop
lock
adc
mov
fsubrl
jb
xor
cmp
lret
stc
out
movsb
and
adc
lret
mov
sub
call
jle
mov
test
ficoml
or
xchg
aas
and
xor
rcll
mov
jmp
es
icebp
jle
add
push
das
jle
add
js
stos
idivb
pop
js
mov
or
mov
dec
int3
push
sbb
pop
cmp
sti
mov
clc
mov
xchg
sbb
lret
js
sti
decl
mov
push
mov
add
and
loopne
sub
adc
push
sbb
test
pop
pop
jmp
popf
dec
cmp
mov
mov
loope,pn
es
lcall
into
adc
outsl
jle
sti
add
hlt
jge
aam
xchg
test
sub
cmpsl
push
addr16
mov
add
fistl
xchg
cmc
push
dec
icebp
rclb
ja
out
mov
cmpb
pop
aam
cmp
xchg
add
push
mov
xor
insl
rolb
cmp
arpl
inc
loope
orl
xchg
scas
shrb
pop
fmul
jl
sbb
xor
dec
pop
and
cs
mov
mov
test
pop
es
mov
in
push
pop
cmp
addb
fs
xchg
out
push
jns
sahf
pop
cmpsl
and
fnstenv
add
sti
sahf
xchg
and
mov
or
sbb
les
lahf
data16
mov
jge
sub
sub
lret
lahf
call
ja
push
and
shll
xor
lahf
insb
repnz
add
sarl
jmp
pop
cmp
imulb
xor
push
leave
sar
cs
pop
out
and
pop
push
sarb
cmp
cmp
fists
mov
mov
pop
sarl
mov
popa
stos
cmc
push
jp
xorb
push
xlat
sub
mov
leave
and
sbb
pop
inc
cwtl
push
scas
pop
dec
cmpsb
xchg
stc
mov
icebp
test
jno
in
jne
or
pusha
pop
lods
inc
fidivrl
andl
cld
fcoml
dec
add
and
mov
movsb
sbb
icebp
scas
adc
fwait
adc
cs
outsb
fbstp
dec
insl
push
mov
sbb
jecxz
xor
mov
daa
push
pop
inc
jno
lret
sbb
sbb
shrl
sbb
ret
fistl
jae
push
sarl
mov
xor
and
pop
dec
sub
loop
icebp
push
outsb
and
adc
bound
fucom
xor
fldenv
xor
lock
insl
stos
pop
mov
sbb
push
jg
pop
call
insb
movsl
icebp
adc
dec
xor
mov
stos
jo
cwtl
pop
clc
mov
std
movl
stc
jge
outsb
test
in
subl
mov
mov
inc
jp
hlt
fistl
in
inc
ficompl
inc
nop
in
stos
lret
aaa
sub
test
fisubrl
loopne
mov
test
movb
sti
adc
movsb
jb
xchg
sub
mov
leave
xor
cltd
mov
out
xchg
scas
xchg
test
movsl
cld
adc
loope
jno
add
pop
jecxz
cli
outsb
loope
sbb
stos
lcall
xchg
and
jne
test
mov
mov
inc
push
shrl
mov
icebp
sbb
pushf
jnp
mov
push
test
shr
jge
in
xchg
xchg
push
and
in
dec
adc
add
xchg
push
enter
pusha
jae
loope
data16
push
mov
out
xchg
xor
add
cli
jmp
pop
fabs
xor
add
aas
mov
or
rorb
iret
push
sqrtps
iret
xor
pop
ljmp
movzbl
loop
cmp
cmp
inc
ljmp
adc
rcll
jno
bound
data16
inc
ja
pop
loope
adc
add
imulb
jle
add
xor
jae
xor
jp
iret
cmp
cmpsb
jl
push
mov
test
push
test
jmp
and
scas
jl
push
inc
mov
lahf
adc
mov
xchg
cmp
loopne
bound
cs
insb
and
xor
loope
mov
lret
stos
daa
jle
adc
lret
and
shll
push
xchg
jge
aaa
mov
jb
test
xor
xor
push
stc
or
push
mov
test
iret
jp
insl
cld
dec
mov
push
cmpsb
jo
mov
add
fdivs
jp
jns
adcb
mov
outsb
andb
in
xor
lahf
and
les
aad
and
lods
into
filds
mov
jl
out
cmp
je
or
jbe
adc
mov
scas
jl
xor
aam
jnp
call
hlt
aad
add
push
push
dec
push
cmp
jo
push
inc
xor
clc
cs
pop
xor
int3
test
xlat
cli
sub
mov
add
popf
pop
xor
jno
fmuls
and
pop
movsb
and
je
pop
push
stc
push
test
outsb
sbb
mov
insl
dec
inc
cmp
dec
enter
psubw
mov
ss
inc
ljmp
jg
lahf
frstor
pop
cmc
mov
and
pop
add
imul
adc
repz
faddl
stos
cltd
pop
mov
or
loop
inc
imul
insl
xor
adcb
push
mov
icebp
xchg
push
add
pop
mov
filds
add
mov
into
jne
push
dec
lret
dec
cmp
sub
jbe
mov
test
in
in
sub
jmp
repz
gs
fildll
je
push
xchg
and
mov
xchg
adc
push
leave
jae
dec
jns
out
pop
fwait
mov
push
add
dec
cmp
lods
gs
mov
rolb
ret
icebp
orb
xchg
pop
push
xor
test
lahf
xor
mov
xor
jo
mov
fstl
sbb
jb
or
stos
lods
sbb
out
sbbl
scas
outsb
mov
std
pop
lcall
inc
xlat
je
pusha
mov
pop
sub
xchg
imul
outsl
cmc
cmp
test
sti
loop
popf
inc
and
xchg
and
jns
push
ret
mov
sub
inc
addl
idivl
in
enter
test
es
xchg
xchg
inc
jno
and
cmpsl
int
les
mov
cli
fisubrs
and
sbb
push
call
sarl
and
inc
mov
jno
cmpsb
pop
orl
jge
adc
pop
mov
xor
mov
push
mov
popa
mov
into
adc
add
mov
push
jl
cmpsb
lods
sub
rclb
popf
cltd
rorl
mov
cmp
adc
cmp
pop
lret
inc
cwtl
dec
xor
sbbl
cli
xor
vpaddsw
sar
out
add
sahf
cmp
test
cli
enter
inc
dec
adc
cmp
mov
movsb
xchg
movsb
lods
test
cmp
cld
pop
scas
and
push
mov
insb
notl
shrl
stos
dec
in
inc
ja
les
push
sbb
dec
or
or
push
lock
add
jl
idivl
cmc
and
jmp
cmpsb
adc
insb
mov
call
xor
or
push
in
dec
arpl
mov
lcall
js
scas
stc
cmpsl
or
pop
insb
xlat
push
inc
push
test
xchg
test
sbbb
aaa
dec
movl
pop
loop
xchg
outsb
loop
mov
jnp
scas
mov
ret
loopne
das
movl
pop
xor
fld
movsl
in
xor
mov
js
mov
leave
decb
xchg
je
cld
out
ja
push
fisubrl
pop
push
sub
jno
push
out
xor
inc
pop
cmp
ljmp
sbb
lods
mov
xor
dec
jl
add
inc
decl
testl
in
into
dec
ss
pop
std
mov
cmp
mov
and
xor
mov
and
sub
sti
lcall
fimuls
sbb
ret
ljmp
out
or
lods
rclb
jge
xchg
pop
lret
mov
hlt
sbb
inc
jb
xchg
or
dec
push
cmp
pop
fisttpll
xlat
mov
dec
movl
push
shr
fabs
shr
jg
ret
repnz
mov
cmp
cmp
adc
sahf
mov
sub
into
push
movsb
mov
inc
int3
fnsave
jp
cli
pop
sub
dec
mov
mov
jl
dec
sbb
adc
stc
loopne
fadds
jns
cmp
data16
addr16
pusha
pushf
inc
rorl
add
cmp
cld
icebp
jbe
dec
arpl
data16
or
push
fs
movsb
fisubrs
inc
push
out
dec
mov
or
sbb
cmp
mov
or
sub
jns
adc
add
push
rcll
outsb
test
cmp
cmp
test
push
cmp
mov
cmp
and
sub
sbb
xor
leave
or
pop
lods
mov
mov
or
test
lret
dec
ljmp
push
cli
mov
or
push
jo
sbb
pop
or
shlb
cmc
fs
jl
test
sbb
cwtl
repnz
lcall
sbb
xchg
dec
add
mov
jge
shl
les
jl
fildll
add
mov
push
jg
inc
xchg
xor
leave
xchg
push
ret
dec
push
imul
cmc
cmpsb
shrl
adc
adc
aas
sbb
negb
scas
fsubs
rol
aas
out
or
gs
pop
push
ret
inc
mov
shlb
imul
adc
adc
mov
mov
xor
push
inc
dec
push
pop
movsb
inc
cmp
xor
rcr
xchg
pop
ja
xchg
leave
add
jl
mov
dec
wbinvd
ds
mov
cmpsb
lock
ret
push
mov
sbb
dec
int3
dec
andb
mov
test
sub
stc
push
xchg
and
shll
jae
xor
jns
push
sbb
xchg
loop
or
psrld
movsl
lea
out
mov
adc
popa
mov
ss
outsb
cmp
and
popa
dec
push
mov
mov
push
iret
rorl
test
adc
sub
push
punpckldq
add
mov
add
mov
xor
dec
cmp
dec
out
adc
push
pop
lret
pop
psraw
dec
sub
mov
xchg
xchg
cmp
rcll
and
xchg
mov
add
stos
xlat
jbe
sbb
mov
scas
dec
dec
and
sbb
arpl
sub
pop
push
inc
push
push
nop
in
and
cmp
pop
inc
pop
ss
enter
and
mov
push
dec
mov
xor
cs
fistps
mov
lea
lock
mov
rolb
cmpsb
js
push
mov
add
dec
push
mov
xor
clc
inc
and
cmpsl
push
neg
mov
mov
jge
test
xor
ja
xrelease
push
push
test
xor
xchg
testb
rolb
int
pop
lds
out
pop
inc
cmpsb
adc
bound
popa
ja
push
xchg
xor
leave
popl
clc
mov
sarb
in
xchg
and
movsb
js
divl
insl
sub
mov
push
xor
fnstenv
rolb
sbb
lcall
mov
jp
cmp
mov
cmc
bound
lock
mov
loop
xchg
sarb
rolb
mov
shl
bound
jle
xlat
inc
and
or
inc
pop
ds
iret
repz
daa
mov
aaa
mov
mov
mov
add
push
out
cmp
push
aas
nop
popf
scas
in
in
ss
subl
stos
out
sbb
dec
cmpsl
aam
mov
std
sub
cld
jbe
jl
shrb
and
and
jnp
jl
leave
fisubl
mov
ret
mov
inc
loop
cld
sub
mov
inc
pop
es
sbb
subl
stc
rcrl
pop
add
out
mov
push
push
jg
pusha
repnz
jmp
or
push
xchg
arpl
sub
pop
inc
pop
aas
test
dec
xor
xchg
in
shlb
insb
mov
bound
mov
dec
loopne
inc
inc
and
dec
xchg
xor
fcmove
dec
push
adc
mov
inc
cmpsb
jns
in
aad
orl
jmp
jmp
push
das
fstpt
dec
pop
sbb
inc
mov
pop
and
pmovmskb
seto
sbb
hlt
xchg
shrl
sbb
sbb
shrl
xchg
ret
xchg
cmp
int
xorb
xor
jge
sahf
outsl
scas
je
inc
add
enter
xchg
in
fcompl
lcall
jbe
push
cwtl
add
cmp
loop
sub
ret
xor
iret
or
int
jmp
sbb
ret
push
fdivl
gs
je
sbb
fwait
ja
cs
dec
mov
inc
sbb
mov
or
std
push
adc
push
bound
call
pop
mov
xchg
insl
push
outsl
notb
xchg
sbb
js
or
movsl
addr16
inc
fs
adc
dec
push
cs
in
xchg
cmp
push
ret
orb
jnp
stc
lret
pop
pop
test
int
cld
movsb
xchg
mov
add
mov
test
inc
repnz
movsb
lods
mov
add
dec
repz
push
das
insb
jo
jmp
stc
mov
shll
out
std
arpl
pop
cmp
cltd
jnp
fs
pop
sti
cmp
and
daa
sub
aad
int3
sarl
push
mov
inc
jmp
xor
xchg
adc
inc
loop
jg
xlat
loop
cmp
mov
js
insb
cmp
dec
es
fldl
lret
dec
fisttps
mov
cld
inc
mov
mov
mov
inc
movsb
and
inc
jo
mov
sbb
push
push
pop
push
add
mov
in
pop
pop
movsb
int
cmp
popa
mov
lret
lods
aaa
cmc
cmp
shl
mov
push
mov
mov
nop
xor
leave
sub
add
inc
lea
into
xchg
outsl
dec
mov
lods
pop
dec
push
cmp
sbb
mov
cmc
mov
inc
pop
icebp
bound
mov
xor
icebp
jne
adc
cld
shr
dec
and
cwtl
mov
push
pop
ret
addr16
mov
sub
mov
shl
xorb
call
pop
out
and
xor
lea
mov
xchg
xor
pop
lods
imul
subl
mov
mov
sub
int3
cmp
mov
nop
xor
adc
lods
inc
jns
fildll
loope
mov
popa
jge
nop
int
pop
push
jns
je
mov
sarb
inc
ret
xchg
dec
leave
lahf
and
shll
roll
cmp
cmp
lret
xor
adc
dec
out
insb
add
insl
cmp
pop
mov
andl
mov
mov
or
jp
daa
pusha
repnz
mov
push
repnz
push
out
or
movsl
out
call
xlat
mov
sbb
aas
pushf
push
add
cli
in
pushl
sahf
imul
fstpt
ljmp
xor
adc
xor
shlb
xlat
sub
sub
jl
divb
loope
imul
int3
inc
inc
aam
pop
ss
dec
test
addr16
jae
mov
les
js
test
mov
in
mov
push
fsubrl
sub
mov
cmp
in
cmpsb
daa
out
xchg
and
push
jns
and
xlat
int
push
cld
jl
out
jle
shl
pop
inc
mov
xor
loop
das
jne
cmpsb
pop
push
and
ror
mov
add
aas
fsubrl
fsubr
bound
nop
mov
sbb
lahf
cmp
sub
cmp
add
jle
bound
push
xchg
xchg
jle
sarl
cmp
lds
jnp
repnz
inc
std
push
pushf
call
push
and
shll
dec
je
jae
xchg
xlat
add
test
or
leave
xchg
xor
mov
cmp
push
pusha
and
dec
roll
cmpsb
mov
nop
sub
push
lods
pop
xor
scas
and
xor
bound
add
ss
js
inc
cmp
imul
push
lock
out
movsb
cmp
mov
adc
jmp
or
mov
jbe
xchg
fsubs
ss
mov
jge
enter
xchg
stos
dec
movsb
mov
pop
inc
cmc
jl
iret
pop
ja
push
cmp
int
pop
fstps
add
add
pop
adc
cmpsl
xor
mov
int
test
and
add
and
sbb
stc
adc
iret
pop
mov
or
outsl
jne
push
mov
call
pop
icebp
xchg
push
dec
lfs
push
adc
ret
aaa
add
cmpsb
jns
pop
nop
xor
cli
add
and
notl
ja
push
pusha
add
mov
sub
push
pop
fwait
das
les
mov
and
pop
outsl
or
mov
and
test
in
sbb
add
add
cwtl
das
dec
lret
aaa
enter
or
daa
and
adc
arpl
mov
jbe
int
mov
mov
inc
pusha
das
and
jae
in
push
xchg
cmp
inc
mov
pop
cld
or
aaa
shrl
adc
jg
sbb
adc
leave
ss
add
mov
push
and
out
jmp
xchg
mov
mov
inc
xchg
les
sbb
pop
das
xchg
mov
jo
ja
nop
popa
mov
rcll
xchg
insb
sahf
mov
jo
add
inc
xor
bound
sbb
xchg
jmp
xchg
mov
xor
sbb
xchg
pop
sarl
scas
xchg
mov
push
test
push
aaa
cmc
fistl
bound
and
adc
cmp
out
popa
stos
mov
or
xor
sbb
ljmp
nop
gs
sbb
jno
call
inc
sti
movsb
cwtl
sbb
popa
push
es
loopne
adc
in
push
cld
out
cmpsb
outsb
das
add
xor
xor
xchg
push
popa
out
js
dec
es
mov
adc
daa
aaa
pop
xchg
or
negb
fwait
jae
jmp
mov
add
or
in
inc
inc
aam
outsl
das
jbe
mov
pop
test
aam
movsb
stc
outsl
mov
and
fbld
std
xor
pop
mov
xchg
mov
pop
pop
sub
xor
xchg
and
iret
jecxz
repnz
ljmp
aaa
cmpsb
imull
scas
mov
inc
mov
jl
outsb
jae
sub
or
gs
popf
sbb
or
or
test
daa
and
adc
push
enter
sbb
iret
arpl
loopne
mov
test
out
push
mull
daa
inc
and
fbstp
popf
and
jns
mov
movsb
mov
adc
pop
cld
inc
cs
ja
repnz
lahf
aaa
mov
inc
in
sbb
popf
add
or
fisttpl
cmp
cmpsb
and
push
test
lcall
testl
jae
movsb
fildl
pop
pop
idivl
shl
lret
sbb
aaa
inc
and
into
adc
xchg
and
and
cmc
ffree
jle
xchg
repz
shr
fstps
in
je
push
leave
aaa
mov
and
shl
push
dec
cmp
mov
pop
ljmp
cmp
jle
or
test
fdivs
stos
sbb
cmp
aas
dec
mov
pop
mov
xlat
cmp
inc
cmpsl
cmp
sbb
inc
xchg
or
pop
sub
clc
and
add
stc
mov
xlat
dec
ds
jnp
add
das
push
cmp
hlt
mov
inc
xlat
sbb
cld
or
data16
sub
ss
repnz
xor
imull
mov
test
ret
jns
push
mov
imul
add
mov
mov
inc
mov
cld
push
insl
lock
out
sbb
push
and
jmp
cld
loop
lods
pop
aam
rcr
je
mov
lret
mov
lret
mov
ret
add
and
repz
mov
adc
pop
mov
test
pop
dec
call
lds
sbb
pop
mov
mov
push
fisubs
ss
popf
adc
push
leave
and
push
nop
std
lock
xchg
dec
out
xchg
xchg
pop
pop
and
inc
sub
adc
sub
xchg
push
std
cltd
clc
mov
fsubp
jge
lods
pop
in
pop
mov
cwtl
into
in
xor
xchg
aam
push
lret
call
outsl
test
jb
in
ss
pop
jo
in
jge
icebp
ss
cld
andl
mov
and
and
push
cli
clc
cmp
or
ja
jne
inc
cmp
adc
negb
jb
not
lods
test
loop
dec
lcall
fnstenv
fadds
adc
mov
ret
adc
xchg
jmp
fcoms
xor
mov
arpl
jmp
xchg
lahf
pushf
int
mov
lods
es
scas
inc
shll
dec
mov
inc
push
adc
add
cltd
movsb
cmc
xor
sar
popf
push
test
xor
jbe
push
cmpsb
dec
in
push
decb
lahf
dec
out
ret
cmpsb
dec
enter
push
push
fsubrp
sub
sbb
and
push
xchg
inc
repnz
lea
mov
mov
and
xor
sub
mov
or
ror
lcall
cmc
lods
loopne
enter
cmc
imul
ds
sbb
nop
push
shll
iret
and
mov
mov
sub
mov
lahf
mov
push
fildl
jmp
fistpl
dec
fdivs
dec
push
xchg
mov
loope
pop
sbbb
add
pop
mov
clc
inc
mov
cmp
arpl
popa
sub
xchg
jge
das
and
jl
jp
lahf
push
push
jo
xor
pop
adc
mov
mov
sub
aaa
and
loopne
xor
pop
rclb
lahf
or
cmp
sbb
mov
pusha
cmp
pop
sub
pop
inc
popa
push
daa
xchg
push
xchg
xlat
xlat
xchg
test
xchg
sub
adc
in
sub
lahf
into
mov
dec
mov
xor
inc
imul
call
bound
jo
push
push
or
movsl
lods
cld
inc
das
ja
mov
scas
arpl
imul
mov
cmp
or
xor
mov
fadd
mov
rcrb
mov
bound
or
pop
sti
sub
add
ljmp
push
call
pop
jg
push
lcall
subl
mov
push
jl
das
ss
mov
or
sbb
dec
pushf
enter
loop
xchg
fsubrl
pop
jb
push
rcrb
into
xchg
cltd
pop
fisttpll
sbb
jnp
movsb
sub
mov
mov
push
mov
dec
sti
arpl
out
int
push
cmc
push
stos
lcall
sub
push
fsubs
roll
movsl
fwait
mov
cmc
sub
xlat
mov
jmp
addb
aam
sbb
xor
xor
mov
and
fisubrs
lcall
jg
mov
xlat
inc
les
add
pop
std
cmp
cmp
addl
add
ds
rorb
les
enter
mov
dec
mov
iret
xchg
adc
shlb
or
xchg
xchg
dec
loope
mov
sahf
fs
stos
sbb
int
jae
adc
sbb
pop
ret
into
shlb
fidivrl
cmp
jne
aad
mov
jl
fimull
jl
shl
sbb
lods
mov
popa
mov
out
aam
cmp
jbe
and
ret
shll
adc
and
jg
mov
ror
push
out
in
or
lahf
xchg
inc
lret
popa
aaa
sub
adc
movups
mov
push
jp
mov
rcr
mov
enter
pop
dec
mov
lret
xor
neg
mov
jecxz
rcpps
adc
imul
les
mov
cltd
sbb
popa
imul
push
sbb
test
test
cmp
jnp
test
push
cmpsl
lahf
jae
xchg
clc
addr16
mov
fwait
adc
mov
dec
sarb
cs
addb
imul
ret
push
push
cmp
scas
xchg
test
dec
or
adc
xor
add
andl
dec
jo
mov
dec
lods
in
pop
decb
call
push
call
cmp
test
sub
addr16
test
imul
jmp
enter
sti
and
mov
test
adc
pop
inc
or
les
ret
movsb
insb
fdivrp
bound
fbstp
add
jl
pop
sub
ljmp
insl
fdivrl
mov
dec
cmp
sarb
cltd
das
out
and
sbb
andl
cmc
lret
push
sub
inc
lds
pop
cmpl
daa
jge
pop
jbe
mov
leave
cmp
add
movb
push
out
insb
cltd
adc
jmp
jbe
inc
in
xor
idivl
xchg
mov
pop
inc
and
or
dec
jns
jbe
cmp
mov
adc
adcl
int3
adc
fnstenv
xlat
repnz
xor
mov
mov
xlat
mov
shrb
xor
mov
inc
add
pop
sti
out
xchg
or
inc
inc
mov
adc
pop
or
lahf
std
lods
cltd
outsb
pop
xchg
pop
sub
add
aad
loop
scas
pop
jg
xchg
insl
into
fiadds
sti
jae
jg
jl
fs
and
test
xor
scas
imul
aam
shll
out
je
add
mov
in
sbb
adc
clc
lret
pop
cwtl
cltd
mov
lahf
scas
insb
jb
ljmp
loope
inc
out
sbb
out
andb
xor
mov
xor
dec
leave
lock
sub
jg
or
cmpsl
pop
push
push
cmpsb
dec
push
into
cmpsl
sub
jne
jmp
xchg
xor
int
jl
aad
inc
xchg
jmp
ljmp
and
cwtl
jecxz
mov
mov
scas
out
and
loop
mov
xchg
lcall
paddw
adc
int
shll
test
negl
mov
cltd
mov
jg
test
bound
loop
aad
js
jle
inc
imul
rol
and
clc
push
jp
call
int3
jae
push
ret
add
or
sbb
xor
fidivrl
mov
mov
enter
jle
mov
or
push
xor
mov
addb
ds
or
loopne
jge
add
push
repz
inc
fistps
push
and
shrl
mov
out
shll
cmp
or
xchg
fdivrs
dec
sub
sti
inc
in
in
clc
xor
arpl
xchg
push
mov
cmpl
mov
xor
test
popf
jae
rorl
mov
insl
xor
bnd
lea
out
sub
mov
lods
mov
sub
jb
add
cmpsb
dec
xchg
mov
push
shrl
imul
mov
pop
mov
loop
xchg
js
pop
icebp
loope
jnp
and
call
in
fildl
cld
inc
jno
enter
orl
imulb
insb
aas
clc
movsb
repz
lea
adc
jo
jmp
mov
or
lret
sahf
out
clc
adc
dec
cmp
fisubrs
xor
lock
lods
add
roll
int
pushf
mov
cmpsl
cmc
sbb
mov
fsts
arpl
iret
sbb
test
dec
cmp
pop
mov
cmp
pop
push
int3
xor
cmp
es
lock
orl
xchg
loope
jno
data16
popa
aaa
mov
jecxz
test
jns
orl
fcmovnu
nop
pusha
or
cwtl
mov
dec
out
aaa
dec
dec
or
lret
in
or
subb
jae
xchg
aam
dec
inc
aas
or
mov
dec
repnz
add
movsl
cmp
ffree
cmp
add
cmp
pop
dec
xor
stos
bnd
insl
ret
pop
dec
mov
mov
cmp
add
das
jmp
push
hlt
inc
lcall
inc
or
fldenv
mov
aaa
push
nop
mov
incl
pop
negb
add
rcrb
xorb
pop
pop
testl
leave
divl
or
outsb
stos
or
sub
mov
xor
adc
stos
bnd
fildl
nop
push
xor
cwtl
test
in
dec
sub
fsubl
lds
addl
mov
xor
lret
or
cld
jo
addr16
and
filds
xor
out
jo
jns
ljmp
xchg
jle
std
les
ss
dec
sub
rcl
xor
jl,pt
push
dec
outsb
inc
insb
loopne
nop
std
inc
aaa
sbb
scas
ljmp
xor
sbb
lea
insb
dec
xchg
sbb
jp
lock
xlat
test
ss
clc
shl
imul
out
add
cli
std
addl
and
pop
mov
inc
daa
popa
repz
loop
xor
jae
int
test
lahf
push
cli
loop
add
clc
pop
adc
xor
cmpsl
mov
lea
cltd
pop
inc
jmp
jno
sub
sbb
loope
popa
test
xchg
mov
mov
test
dec
cmp
test
lcall
push
hlt
lea
rol
and
outsb
add
and
dec
mov
sbb
scas
lret
into
fildll
sub
mov
int3
pop
loopne
add
mov
inc
jmp
loopne
cs
and
and
mov
mov
popf
fstl
xchg
xchg
add
ja
mov
mov
lret
xor
divl
inc
inc
push
ret
adc
push
jno
sbb
xchg
mov
loopne
jecxz
jecxz
cli
sarb
push
loop
mov
sbb
mov
das
test
push
cld
or
mov
fsubrl
adc
scas
xor
lods
rcl
or
sub
loop
push
inc
mov
or
movsl
loopne
imul
xor
lods
pop
aas
scas
in
in
fnstenv
ds
xchg
aaa
mov
sbb
pop
inc
xchg
or
mov
shlb
adc
out
sti
std
or
mov
daa
outsb
jo
into
add
jbe
ficoms
lods
mov
ss
mov
sbb
and
pop
pusha
sbb
cwtl
pushf
sub
add
sbb
sub
sbb
inc
push
mov
add
add
sbb
xchg
jb
int
add
jl
push
lock
jnp
cs
das
jns
mull
mov
mov
mov
mov
jmp
mov
lea
pop
frstor
sbb
aad
lcall
sbb
xchg
lods
and
sbb
jecxz
ret
inc
jmp
ret
popf
lock
cmc
xchg
fldt
mov
mov
lret
test
mov
mov
pusha
jae
adc
out
subl
jae
cld
popl
outsl
mov
adc
sub
cmp
pushf
xchg
pop
mov
pop
inc
push
clc
leave
mov
jae
sarb
jns
leave
sbb
cltd
xchg
fldln2
insl
movsl
pop
cmp
ficompl
mov
cli
push
cmp
ljmp
mov
insb
fiadds
data16
iret
push
inc
mov
mov
dec
push
std
inc
sub
mov
pop
and
push
sbb
cmp
dec
mov
lahf
xchg
jmp
mov
push
arpl
rcll
test
inc
cmpsb
dec
bound
aas
mov
sbb
mov
movsl
sbb
mov
lods
mov
inc
scas
pop
movsb
int
jo
int3
pop
in
xor
rolb
orl
push
or
cmc
push
jecxz
sbb
lods
int3
les
pop
dec
aad
clc
or
dec
ljmp
sub
imul
inc
dec
jb
scas
mov
inc
add
repz
lock
aaa
mov
jle
into
loope
and
sbb
push
jnp
jmp
cmpb
pop
and
adc
or
leave
push
and
test
push
cwtl
outsl
lcall
scas
stc
pushf
movsb
jns
cmp
dec
pop
push
inc
push
mov
rcrl
cmp
movsb
aad
push
cmp
cmp
stos
and
mov
fnstenv
sbbb
repz
addl
bound
mov
sub
mov
enter
cmc
ja
cmpsb
inc
clc
and
and
mov
fwait
xchg
shlb
xor
jae
mov
fwait
loope
test
roll
cs
mov
fisubs
mov
aam
pop
pop
sbbl
lret
imul
sti
cmp
shll
mov
rcl
push
xchg
mov
xor
jne
pop
roll
jnp
ret
push
imul
gs
cwtl
push
xchg
std
xor
arpl
add
movsb
fnsave
fdivrl
inc
dec
adc
clc
out
outsb
aaa
xchg
dec
jecxz
les
aas
test
lahf
pop
and
out
push
lahf
xchg
push
cmp
cmpsb
and
fldenv
dec
mov
nop
xchg
xchg
jnp
mov
sahf
xlat
sub
std
or
aaa
imulb
outsb
mov
or
loopne
push
data16
mov
jecxz
adc
stc
fsubrs
or
out
sbb
movsl
jbe
jmp
pop
lock
je
fstl
dec
loopne
mov
xor
rcrb
mov
int3
loopne
aad
cmp
xor
and
lret
inc
shll
aam
filds
adc
in
xchg
xchg
pop
out
xchg
ljmp
int
inc
fstl
and
mov
sahf
xor
int3
loopne
in
jle
push
sbb
sub
mov
aad
mov
pop
mov
addl
xchg
daa
cmc
test
iret
sub
mov
bound
dec
xor
mov
push
les
add
mov
aas
fwait
insb
das
adcl
sub
data16
inc
repz
sub
xchg
negl
test
push
push
mov
int
rcll
add
adc
xchg
xor
sti
dec
and
out
popa
jo
xor
aad
pusha
in
out
sub
pop
fldcw
cld
xor
mov
or
cmp
push
push
lods
xor
push
ret
xor
loop
test
imul
pop
push
add
add
mov
sbb
push
pop
cli
dec
pop
add
push
aas
add
cli
cli
lock
popa
lea
lea
fdiv
jp
insb
scas
imul
pop
push
sbb
rorb
ret
mov
insb
sahf
xchg
bound
inc
inc
cmpl
jmp
adc
aad
push
xor
shl
fistpl
cli
xchg
pop
mov
pop
loopne
ret
cmp
mov
mov
iret
es
inc
sbb
lcall
jnp
xchg
ss
jp
adc
in
hlt
stos
inc
rolb
add
outsl
jnp
testl
cmp
xor
sarl
fisttps
jecxz
xchg
push
lods
jle
aaa
test
into
movl
in
das
test
and
ja
adc
xchg
sub
rcll
mov
add
or
out
seto
sub
popf
mov
and
jae,pn
sbb
sbb
xchg
leave
and
sarb
mov
mov
push
call
jecxz
fs
cmp
pop
mov
jbe
mov
and
jl
and
scas
xor
leave
inc
dec
lahf
pop
xor
mov
pop
jg
push
orl
mov
decl
xchg
add
ror
cmp
xlat
xchg
push
bound
rcr
lods
xchg
pushf
ljmp
xor
testb
lods
cmp
js
pop
add
test
pushf
mov
mov
popa
icebp
inc
lds
dec
aam
mov
in
xchg
jbe
stos
icebp
in
lods
mov
pop
mov
subb
lods
xchg
shr
addr16
or
add
xchg
jl
mov
int3
test
push
inc
jl
dec
cmc
mov
in
fwait
xor
mov
add
outsb
push
pusha
dec
ret
repnz
cmpl
lahf
adc
mov
stos
adc
lahf
subl
scas
clc
out
loope
fnstcw
sbb
aad
adc
push
lret
xor
ror
ljmp
js
jno
sub
int3
aad
hlt
test
sub
stc
scas
sub
xor
mov
hlt
js
scas
or
daa
pusha
and
mov
sub
sub
push
xchg
sbb
pop
add
xchg
inc
jae
and
sbb
nop
pop
inc
sbb
xchg
xlat
out
xor
sti
clc
dec
or
lcall
mov
ja
jno
or
or
call
lret
xchg
mov
cld
xchg
xchg
cmpsl
jge
movsl
jl
sub
jo
add
xlat
jbe
adc
cmp
lcall
cmpsl
and
call
add
insl
jl
and
mov
int3
clc
or
sbb
test
das
sbb
pop
pop
sbb
add
add
dec
ja
pop
sub
stos
push
mov
mov
adc
push
sub
outsl
call
mov
mov
sub
out
xor
les
std
mov
scas
xor
sub
ds
inc
cmp
fisttpl
xchg
sbb
pop
mov
out
in
add
mov
out
out
mov
add
imul
and
cmp
add
mov
bnd
cmp
ljmp
dec
sbb
jg
sub
and
js
xchg
or
push
leave
push
icebp
pop
pushf
adc
mov
mov
or
fstpt
lods
xchg
in
in
fsubrl
cmp
addr16
push
dec
pop
xor
in
in
insb
les
add
cmp
andl
mov
mov
fdivrl
adc
pop
jecxz
mov
std
lods
pop
mov
sub
loope
pop
divl
xchg
jecxz
adc
ret
pop
pusha
sahf
icebp
xor
insl
lret
add
scas
pop
into
popa
add
jecxz
aaa
and
mov
inc
addl
je
mulb
adcb
push
ret
popa
mov
call
fidivl
cltd
addr16
or
fsubl
dec
in
xchg
push
push
in
pop
or
push
xchg
or
jae
xor
cmpsb
cld
jl
les
out
orl
imul
out
pop
loop
inc
xadd
add
mov
inc
and
int
negl
aas
addl
ss
or
xchg
data16
out
adc
jne
cmp
jne
out
in
int3
jge
adc
or
rep
insl
ss
jne
push
mov
jnp
pop
pop
jmp
mov
or
stc
movsl
push
lea
in
sti
bound
and
add
ds
stc
hlt
xor
ljmp
sti
fldenv
out
les
outsb
jbe
hlt
adc
cmc
scas
lock
adc
dec
test
and
sub
cmc
pop
push
std
inc
jno
ss
xor
into
dec
mov
ficoml
pop
xor
shrb
imul
cltd
data16
pop
jle
dec
imul
sahf
icebp
xor
inc
cmp
pop
adcb
cwtl
sbb
dec
inc
fsubl
pop
push
ret
push
mov
leave
stos
movsb
dec
cwtl
dec
mov
icebp
daa
add
xor
sbb
stc
dec
incb
iret
jmp
sub
lods
int
mov
shl
mov
push
and
div
test
mov
stos
mov
cmp
xchg
push
es
dec
int3
es
jo
xor
rorl
push
xchg
popf
lcall
jge
shlb
sub
jo
xor
sub
xchg
aas
lods
ret
mov
in
adc
into
loopne
mov
mov
jmp
and
orl
shl
pusha
xchg
lcall
sti
sub
xchg
outsb
mov
nop
insb
mov
push
lea
js
or
in
push
adc
mov
xor
mov
mov
add
push
xlat
les
xchg
sbb
push
sub
cmp
mov
icebp
icebp
popf
out
mov
adc
adc
inc
lret
lds
and
ljmp
in
cld
xor
fldl2t
loopne
xchg
mov
int
pop
insl
cmp
je
stos
jne
jp
dec
push
movsl
sbb
int
or
out
xchg
bound
mov
jns
jne
test
and
test
repz
test
xor
xchg
mov
xchg
cmp
mov
dec
pop
cmp
inc
ljmp
or
test
inc
xchg
jne
cmp
repnz
sbb
je
ret
sub
jne
fldl
or
inc
cmp
sub
jp
jl
and
push
and
lret
sub
inc
test
imul
mov
mov
and
dec
jo
cmpl
out
xchg
push
pop
sub
dec
sub
jmp
pop
push
mov
push
mov
cltd
movsl
aad
and
sub
ret
mov
notb
sbb
or
and
lods
mov
pop
or
cs
stos
mov
ret
add
fs
mull
lret
xor
inc
xchg
leave
imul
cmp
jge
std
jg
jecxz
or
sti
mov
cmp
pop
ds
clc
hlt
cs
loope
scas
inc
pop
test
or
and
mov
pop
and
jp
and
xchg
mov
pop
iret
andb
stos
push
out
cs
mov
call
aam
push
push
cmpsl
movsb
das
loop
iret
cld
inc
cmp
adc
jecxz
push
stos
cmc
mov
push
cltd
fistl
and
jp
bound
jecxz
sar
shll
jae
pop
sti
cli
inc
push
loop
popf
repz
adc
xor
fucompp
insl
jb
mov
out
sbb
jle
in
adc
adc
inc
hlt
fimull
sbb
mov
fucom
jp
loope
shll
and
jbe
xchg
jbe
xchg
cmc
adc
hlt
mov
cs
fnstenv
push
and
pop
or
push
lret
outsl
test
dec
sahf
divb
stc
mov
jne
cmc
popa
mov
or
ds
mov
sub
addl
std
mov
in
xlat
push
xchg
jmp
or
add
mov
lock
in
push
cmp
sub
es
pop
imul
iret
test
ret
fidivrs
sbb
shlb
jecxz
ret
loop
add
or
popf
je
loopne
stos
push
push
lods
int
lcall
sarb
call
sbb
or
mov
inc
adc
or
dec
sbb
daa
adc
xchg
cwtd
lea
pusha
mov
inc
xor
pop
xchg
cwtl
pop
pop
sub
rcrb
jmp
sbb
cld
inc
rcrl
xor
jge
dec
and
xchg
jns
xchg
dec
push
inc
lret
jne
into
nop
add
or
shll
sbb
int
out
in
ja
xor
cmpsl
outsl
mov
mov
mov
or
adc
mov
in
aas
jle
repz
sbb
movsl
push
mov
je
mov
mov
lds
pop
pop
pop
push
adc
sbb
and
inc
dec
imul
rorb
or
push
sarl
cltd
push
ljmp
arpl
or
jge
push
dec
cld
mov
jl
dec
sub
push
push
pop
mov
inc
jge
in
daa
add
negb
mov
test
data16
xor
icebp
faddl
cmp
pop
decl
aas
add
in
into
fcoms
jno
in
xor
cmp
mov
bnd
bound
dec
movb
test
lcall
lock
stc
fidivs
out
movsb
add
sub
bound
clc
xchg
sbb
popa
mov
les
enter
fidivl
cmp
pushf
xlat
movsb
fnstcw
loop
lcall
popa
jecxz
cmp
mov
loope
insb
dec
cld
jl
or
notb
mov
outsb
sub
and
rcrl
jmp
test
ret
mov
fs
test
dec
mov
add
xor
rclb
sbb
sub
dec
and
lods
lahf
cltd
ljmp
mov
dec
jne
jnp
out
sti
jo
jecxz
sbb
mov
sub
movsb
insl
sarl
aad
cmpsl
push
scas
pop
jb
sbb
jmp
loop
cmp
fdivl
aam
sbb
inc
xorl
fcmovbe
mov
mov
outsb
fcmove
cli
jmp
inc
pop
negb
pop
add
sub
arpl
into
mov
int3
lahf
mov
scas
pop
pop
cltd
jmp
in
cmp
std
ljmp
mov
mov
xchg
mov
movsb
outsl
aaa
pop
fdivl
mov
adc
jnp
cmp
fsubs
je
fwait
mov
test
hlt
xor
dec
xor
inc
dec
jl
pop
fldl
imulb
std
stos
repz
jno
pop
add
outsl
push
sbb
lahf
nop
mov
je
cltd
xchg
addr16
xor
pushf
mov
adcb
ds
or
mov
mov
xchg
cmp
mov
int
push
out
jno
mov
cmc
push
cmp
lods
xor
xchg
insb
add
sbb
ds
mov
adc
jae
pop
sub
xlat
mov
es
mov
mov
xlat
pop
jle
cmp
lea
jo
stos
pop
jl
jbe
call
or
xchg
inc
dec
sbb
test
arpl
in
loopne
and
dec
std
inc
rcrb
xor
test
fisubrs
scas
xlat
jbe
jg
push
out
cmp
push
dec
stos
mov
lcall
mov
push
int
dec
adc
ljmp
test
dec
aam
pop
negb
dec
mov
jno
mov
push
cmc
inc
imul
mov
ljmp
mov
jecxz
pop
sahf
scas
js
mov
andl
je
sub
or
add
test
sbb
jecxz
insl
movsl
add
and
in
cld
sahf
mov
int3
xor
int
sbb
int3
sub
pop
add
std
sub
mov
scas
in
jp
int3
les
dec
movsb
fisubs
or
inc
fwait
jo
mov
outsl
outsl
jmp
xchg
inc
mov
ret
push
xor
or
cmpsl
xorl
shufps
mov
rcrb
mov
ss
into
stos
ljmp
push
sbb
adc
add
aaa
fs
sub
and
loop
pushf
fwait
pop
mov
and
aad
xchg
pop
cmp
push
fldcw
fistpl
std
cltd
ljmp
ret
outsl
mov
mov
adc
jae
dec
loopne
sub
enter
push
fs
jo
ljmp
out
into
loop
push
sbb
lods
dec
notb
push
sbb
sub
int
test
jbe
mov
cli
lret
pop
ds
inc
xor
cmp
fcmovnu
into
mov
mov
pusha
jg
sbb
popa
jbe
xor
lods
sti
dec
dec
lods
in
int3
mov
or
lret
pop
jmp
fdiv
cmp
js
pop
add
stc
pop
adc
imul
subl
outsb
test
or
inc
pop
mov
out
xchg
fs
sub
or
das
inc
jecxz
cltd
data16
fistps
fs
cmpsl
wbinvd
push
jno
cmpsb
xor
daa
mov
and
loope
sti
es
xchg
in
mov
add
call
cmp
into
loop
xchg
cmp
dec
mul
jp
pushf
aas
leave
das
ja
iret
rcrl
imull
addb
inc
fnsave
push
fwait
adc
fsts
jns
das
inc
inc
loop
pop
stos
fstpt
cltd
xchg
sbb
mov
fs
movsb
rcll
mov
adc
add
sub
mov
scas
sbb
repz
pusha
leave
add
jno
out
lds
add
pop
xlat
sbb
xchg
int3
scas
icebp
in
jecxz
pusha
int3
loopne
ret
out
mov
xor
clc
and
lahf
jl
add
cmovs
mov
pop
xor
sbb
sti
cmp
mov
mov
push
or
bnd
dec
jb
notb
adc
loop
movsl
pop
push
test
repz
pop
imul
xchg
in
aas
jo
xor
stc
ret
push
inc
mov
push
add
ljmp
add
shlb
jge
push
sub
out
jg
es
dec
sbb
sbb
inc
sub
add
pop
mov
lret
adc
sbb
mov
decb
or
jle
loop
repnz
addr16
mov
imul
aad
sub
bound
aad
mov
inc
sbbl
and
mov
xchg
es
in
sbb
inc
jno
cmpsb
scas
popa
mov
push
adc
icebp
rclb
sub
cvtps2pi
iret
ja
push
mov
addb
out
ss
pop
fisttpl
adc
into
xchg
fisubl
cld
inc
mov
push
and
mov
mov
jne
mov
xlat
mov
nop
cmpsl
shlb
add
cmpsb
bound
lea
jp
sub
mov
sbb
xor
fldln2
pop
loope
pop
dec
or
or
dec
jl
mov
in
add
in
xor
aad
shlb
push
xchg
mov
aas
mov
push
nop
enter
mov
push
push
mov
arpl
mov
lcall
add
mov
rcll
jns
das
sbb
outsl
lods
out
inc
jp
xchg
cmc
mov
dec
addb
pusha
push
mov
out
cmp
loopne
pushf
sub
mov
lods
inc
das
xor
sti
fs
stos
hlt
stc
pop
out
sub
cmpsl
call
sub
adcb
fsubrs
add
testl
push
stos
repz
jp
sbb
inc
xor
jb
rcrb
lret
pop
sub
mov
dec
jns
jns
fildll
imul
orl
push
mov
sar
push
pop
mov
sbb
jecxz
xchg
cmpsb
out
adcl
sbb
imul
push
or
rorb
dec
fimull
imul
mov
xchg
das
into
pushf
imul
pushf
ja
pop
out
sahf
cmpsl
das
xor
dec
push
xor
jl
js
dec
inc
mov
cmpsb
popa
ret
fs
jo
into
adc
movsb
mulb
inc
jbe
fisttps
add
xchg
mov
iret
inc
imull
shrd
add
or
dec
nop
test
outsb
push
scas
enter
mov
mov
pop
sub
cmc
mov
mov
out
mov
push
mov
pop
rcll
sub
insb
push
mov
rorl
xor
jle
sbb
test
and
jecxz
cmp
test
arpl
add
dec
sbb
not
add
pop
andl
push
mov
xor
adc
jne
cli
scas
jl
cmpsl
mov
ljmp
cmpsl
push
out
out
insb
push
dec
adc
les
out
xchg
cltd
pop
cltd
data16
pop
rcr
loop
cmpsl
push
and
ja
ret
out
or
call
pusha
xorl
jbe
nop
addr16
mov
iret
xor
aas
dec
pop
mov
sub
or
pop
pop
sub
mov
les
mov
pop
nopl
mov
lret
push
mov
sbb
push
fstpl
rclb
lock
imul
push
mov
stos
and
jmp
sub
cli
sahf
cmp
pop
adc
push
add
pop
cmc
int3
jecxz
sub
xchg
shll
xor
push
sbb
push
pusha
inc
mov
sbb
sahf
stos
push
popf
arpl
gs
out
out
fdivrl
inc
xchg
cmpl
repnz
xchg
ficoms
sub
xchg
push
orb
negl
mov
push
pop
pop
cmp
nop
sti
sti
je
scas
pop
adc
pusha
cmc
das
xchg
push
lds
rclb
popf
movsl
hlt
xor
adc
push
dec
mov
pop
jp
test
and
sbb
iret
xchg
inc
imul
fadds
add
adc
fwait
pop
jae
sbbb
add
inc
sti
lcall
fisttpl
push
jne
jae
mull
adc
sub
lret
ret
mov
jbe
les
icebp
add
lcall
cmp
scas
pop
pop
xor
sbb
repz
push
dec
les
or
lret
mov
lret
cmc
mov
mov
subl
xchg
outsl
lods
mov
lahf
sbb
pop
sbb
nop
stos
cmc
repz
lcall
call
les
mov
cmp
in
call
ljmp
mov
fcmove
pop
mov
addr16
push
cld
shll
or
and
dec
lods
jno
ljmp
into
cmp
jne
shlb
adc
int
leave
mov
push
repnz
fs
sub
or
lods
sub
jmp
sahf
add
sub
adc
add
lret
iret
out
sub
inc
inc
mov
xorl
xchg
mov
stos
and
push
scas
cmpsb
xchg
in
int3
mov
pusha
lret
aas
cld
and
out
cmp
cmpsb
into
addr16
test
pop
test
pop
gs
jp
daa
cmpsl
adc
jne
sub
fnsave
cmp
mov
push
mov
ret
mov
push
or
jmp
loope
das
lock
mov
loopne
js
xchg
loop
sbb
in
xchg
jmp
push
lods
and
scas
adc
push
xchg
add
fisttpll
push
gs
jecxz
aad
xchg
pushl
jle
ficomps
pop
push
aam
add
pop
push
cmp
rclb
mov
push
sbb
pop
push
sbb
adc
aam
je
push
xlat
pop
mov
pop
inc
js
insb
out
stos
out
and
inc
sti
pop
jmp
or
push
gs
negb
mov
out
mov
jb
loope
xchg
int
enter
fs
push
test
testl
fcoms
jge
or
out
mov
jmp
cmpb
imul
imulb
into
cmp
fcomi
xchg
out
clc
shrl
pop
lret
aas
sahf
cmpsb
push
pop
inc
adc
xlat
mov
or
jg
repz
cmpsl
imul
mov
sub
pushf
xor
bound
pop
out
mov
jne
cmp
imul
pop
aaa
movsb
filds
pop
inc
loop
pop
mov
push
mov
push
mov
loope
cmp
push
push
mov
xchg
sbb
popf
aas
push
xorl
idivb
mov
and
dec
mov
lahf
mov
add
or
inc
dec
pop
jecxz
dec
leave
roll
cmp
add
rclb
dec
xchg
aaa
jecxz
and
push
cmpw
aam
jne
adc
sahf
out
rorb
mov
fmull
inc
dec
aas
and
mov
out
mov
adc
lret
pusha
add
and
cld
leave
xchg
sub
sbb
push
pop
pop
mov
scas
jmp
int
xchg
jno
nop
sbb
scas
aad
lret
loopne
inc
std
fwait
and
adc
or
pop
jno
lahf
xlat
mov
push
mov
push
bound
inc
loop
cmp
pop
std
pop
and
lods
inc
dec
cs
jno
dec
mov
sub
lock
icebp
testb
jle
push
fmul
cmp
xchg
subb
arpl
leave
xor
jb
loop
test
aad
cmpsl
fadd
dec
shl
sahf
std
pushf
loopne
dec
stos
roll
sbbl
add
mov
in
and
xlat
pop
in
es
das
mov
les
or
sub
jbe
test
jl
pop
and
jno
adc
int3
jbe
adc
and
enter
or
in
ds
outsb
cmp
fmull
xor
pop
fnstenv
frstor
cmp
cmp
mov
inc
fcmovb
push
xchg
loop
mov
or
aaa
mov
mov
inc
xchg
imul
in
shlb
sbb
inc
ljmp
repz
cmpsl
inc
lret
lds
std
les
xor
andb
inc
inc
dec
push
lcall
enter
mov
in
out
lahf
sub
fdivs
dec
push
mov
cltd
test
lds
inc
or
pop
push
iret
jae
ret
out
add
push
das
hlt
mov
or
sarl
sub
or
nop
adc
inc
cmp
addr16
jns
xchg
imul
jns
mov
cmp
mov
mov
mov
dec
mov
adcl
dec
das
inc
adc
cwtl
sub
adc
ja
mov
imul
dec
psrad
dec
jmp
dec
push
mov
pop
cmp
mov
dec
push
inc
push
mov
fdivr
xchg
xor
add
sti
shrb
jmp
jne
mov
pop
fdivrl
ret
clc
or
stc
popf
stos
jae
jne
movb
pop
push
inc
or
and
ret
inc
out
data16
test
lret
add
sbb
fsubr
fistps
adc
xor
addl
xchg
mov
fistl
fidivrs
mov
incb
mov
insb
jge
cmp
mul
pop
jle
pop
push
jne
lcall
xor
pop
xchg
mov
aas
dec
adc
out
sub
mov
mov
jp
push
icebp
push
add
cmp
mov
fcomps
pushf
push
leave
dec
lds
mul
jnp
mov
pop
test
popf
xchg
cld
push
add
cwtl
add
sbb
subps
add
out
notl
imul
test
cld
sbb
int
and
imul
stc
inc
xor
lock
movsb
es
cli
sbb
xchg
insb
repnz
add
insb
mov
xchg
sets
int
lcall
scas
ret
xor
push
inc
pop
dec
pusha
outsl
outsl
xchg
fcoms
lds
es
mov
mov
jp
push
dec
rcrl
xchg
xor
mov
adc
mov
lock
xchg
push
outsl
or
cli
mov
jge
aaa
sub
icebp
daa
aad
adc
mov
or
ja
jne
add
fwait
pop
add
lds
cld
scas
pop
cwtl
jle
jp
mov
fists
xor
mov
push
test
loope
or
arpl
push
xor
lock
dec
push
int3
aam
pop
in
fnstsw
add
fdivs
inc
ljmp
sbb
lods
rolb
ss
fwait
ret
jge
data16
sbb
std
mov
lret
das
mov
jns
leave
mov
sub
pop
xor
xchg
pop
loopne
jno
jns
enter
push
and
aad
or
or
pop
lret
xchg
inc
and
pop
movsl
push
aam
jnp
lds
sub
pushf
inc
enter
pop
mov
dec
movsl
adc
jbe
lahf
leave
jbe
push
loop
sbb
ja
cld
leave
sub
add
rcr
movl
mov
push
pop
pop
cmc
jb
in
cmc
jg
cmpsb
mov
cli
xor
xor
xlat
push
fbld
jl
fprem1
jns
jae
cmp
je
rcrb
dec
xor
sbb
and
pusha
mov
sub
inc
adcl
scas
xchg
outsl
add
cmpsb
clc
and
inc
sarb
imul
cli
xchg
clc
xor
jmp
clc
dec
dec
push
jg
aas
stc
mov
inc
xchg
inc
ds
test
cmpsb
mov
add
aad
lret
std
jbe
out
js
jecxz
inc
aaa
inc
and
cld
inc
pop
xchg
in
fcompl
xchg
cld
xlat
faddl
dec
aaa
xchg
leave
sbb
dec
into
push
lret
mov
leave
or
dec
hlt
lds
xchg
popf
test
mov
insl
in
cwtl
sub
aaa
imul
out
aad
xor
adc
int
add
sub
fwait
mov
pop
incl
mov
inc
xor
lea
jns
popf
xor
stc
subb
shl
push
aad
out
das
out
xor
mov
outsl
mov
or
adc
jl
call
sbb
ljmp
adc
fistpll
cmc
sbb
addr16
adc
add
inc
jge
mov
fdivl
aad
cmpb
cmp
pop
ja
dec
frndint
pop
push
inc
loopne
cmp
sbb
mov
pop
mov
adc
hlt
cwtl
call
mov
in
mov
dec
pop
cmp
pop
push
push
mov
mov
or
ss
lock
xor
inc
loopne
xchg
stc
jge
pop
adc
movsb
mov
add
fs
lret
daa
and
into
jg
pop
pop
out
push
pop
daa
das
popa
sub
test
pop
insl
lret
pop
sub
push
jns
les
pop
adc
jbe
iret
test
std
dec
mulb
sbb
aas
xorb
and
xchg
mov
out
jnp,pt
mov
divb
rcl
mov
std
pusha
outsb
sar
hlt
into
mov
sub
add
pop
test
xor
mov
out
rorb
arpl
inc
cmpsb
jle
sub
and
sti
mov
shlb
jbe
mov
mov
movsl
xor
incl
sub
in
cld
js
sbb
pop
jbe
or
enter
fimull
mov
mov
gs
repz
cmp
mov
mov
scas
sbb
scas
add
fdivl
sbb
lods
ret
lret
inc
or
adc
push
hlt
add
rorb
add
xchg
and
sub
sbb
ret
sub
dec
mull
out
or
andl
adc
aad
mov
movsl
mov
lret
test
add
rcrl
mov
cmp
sbb
out
test
xchg
jecxz
enter
rcrb
mov
or
int3
push
adc
jno
jb
push
popf
jmp
mov
and
cmp
adc
dec
cmp
scas
stos
mov
jns
sbb
imul
dec
lods
xchg
into
xchg
dec
aam
dec
mov
add
idivl
outsb
xor
int3
push
inc
pushf
xchg
add
push
dec
imul
inc
and
test
pop
xor
arpl
dec
or
inc
sbb
shlb
stc
jg
fdivp
adc
das
loopne
mov
and
ret
inc
push
xlat
int3
pop
out
push
lods
push
xor
subb
sahf
sbb
xchg
push
and
pop
push
imul
mov
scas
pop
pop
xor
rclb
test
push
and
fcomi
mov
arpl
loop
mov
shlb
sbb
ret
jae
xchg
pop
lahf
mov
cs
sub
xchg
sbb
mov
and
push
ss
inc
test
pop
rorl
jg
dec
inc
push
pushf
xchg
subb
jp
jl
add
lds
mov
addr16
xor
iret
or
sbb
mov
nop
inc
push
push
ds
shl
sbb
int3
shll
add
cli
out
mov
push
lods
test
mov
mov
cmp
push
sbb
sbbb
dec
jp
int
jp
fdivrl
inc
jbe
mov
ret
cltd
gs
mov
stos
lods
lds
nop
pop
aas
subb
sbb
inc
jo
ret
mov
cmpsb
ja
ret
mov
fildl
and
xchg
lds
push
les
insl
add
iret
and
negl
xor
mov
adc
cmc
jecxz
mov
lret
stc
enter
or
jmp
addr16
jb
adc
and
adc
rorb
mov
mov
sahf
addl
push
cmp
roll
fwait
cmp
sbb
xor
imul
loopne
push
xchg
pop
mov
mov
or
inc
daa
in
push
cmpsl
bound
fdivp
imul
mov
cs
stos
xor
sub
mov
or
inc
test
aam
ss
pusha
mov
aad
cmp
in
inc
es
xchg
jnp
popa
aam
das
enter
mov
xchg
std
test
jo
insl
test
data16
add
xor
insl
sbb
or
aas
fisttpll
mov
inc
cs
sub
mov
adc
lea
addr16
in
sbb
stc
bnd
pop
imul
lret
into
movaps
stc
cli
xor
dec
jne
ret
out
jp
daa
fsincos
push
push
mov
xchg
test
stc
scas
adc
xor
and
nop
lods
mov
aaa
imul
ja
sbb
xor
jmp
sub
jns
movsb
xor
pop
rcrl
inc
aaa
pop
jb
adc
adc
mov
and
sbb
add
insb
add
jne
push
es
dec
pop
fisttps
popa
les
adc
push
dec
test
int3
ret
jns
pop
addr16
mov
push
rcr
pop
pop
mov
mov
fisubl
or
pop
jl
out
or
shlb
scas
sub
adc
insb
shll
test
arpl
repz
xchg
pop
and
stos
and
imul
aas
sarl
xor
push
nop
pop
popf
shl
dec
dec
mov
daa
cmp
sti
inc
add
int3
loope
mov
adc
pushf
bound
lret
ja
pop
mov
xor
cmp
xchg
loop
cmpb
cmpsl
pop
cmc
addr16
fstpl
sbb
bound
lods
mov
or
aaa
sbbb
imul
mov
scas
mov
aaa
bound
stos
cmpsl
call
lret
xor
popf
jnp
cmp
sub
outsl
sarb
jae
push
jle
xorl
adc
cmp
mov
adc
into
jecxz
pop
xchg
sbb
push
mov
inc
pop
cld
pop
dec
aaa
pop
mov
orl
out
out
inc
xchg
out
int
inc
ja
push
into
fbld
stc
mov
out
adc
sbb
ret
cmc
mov
aad
in
pop
lret
mov
mov
jnp
mov
cmpsb
cld
inc
incb
push
mov
jo
loop
sub
xchg
dec
sarb
push
jl
ret
fstpt
adc
imul
daa
push
jnp
outsl
jmp
push
out
pop
push
pop
push
lcall
mov
aaa
xchg
popa
std
mov
rorl
dec
insb
popf
xor
fs
sbb
rorl
dec
loope
jp
push
scas
test
inc
mov
mov
ja,pn
ss
or
mov
jle
vrsqrtss
mov
jb
rcll
or
cmpsb
lahf
mov
loop
movsb
sub
push
lahf
add
sub
leave
cmp
add
lcall
arpl
rcll
push
cmp
lea
xor
pop
push
add
aam
jmp
leave
mov
repnz
xor
inc
inc
pop
pop
mov
push
lods
movsl
mov
repz
add
pop
mov
out
ja
adc
popa
ljmp
in
int
xchg
cmpsb
bound
call
push
enter
xchg
add
add
sub
jb
jne
pop
inc
into
jbe
or
pop
pop
aad
inc
mov
call
iret
sub
cmpsb
sub
mov
std
rol
ss
sbb
add
mov
iret
or
test
dec
int
and
inc
stc
jle
fdivrs
ljmp
inc
decl
inc
and
or
loop
xchg
fwait
fwait
push
repnz
aas
popa
cs
push
cmpsl
lcall
dec
aad
add
sub
ret
or
cmp
fcoms
out
pop
xor
sub
xchg
aad
add
adc
fsts
mov
adc
mov
scas
pusha
cs
ss
push
mov
mov
pop
shll
nop
outsl
dec
xor
inc
jnp
loopne
pop
mov
jp
shlb
jle
adc
insb
cmc
lcall
clc
je
and
js
pop
xor
xlat
push
jae
mov
inc
clc
sbb
int3
std
shrl
cmp
xchg
and
mov
sbb
push
rclb
cmc
sub
out
pop
ficoml
lock
bound
scas
ret
mov
and
fs
push
in
out
icebp
adc
inc
or
push
in
mov
fwait
repz
fwait
rol
arpl
lock
dec
fstpl
dec
adc
and
iret
mov
hlt
nop
ret
or
inc
les
mov
lahf
xchg
cmp
dec
shll
fistpll
hlt
cmpsl
dec
sub
mov
ret
sarl
scas
popa
jmp
lcall
jge
mov
cmp
lock
jnp
sub
push
mov
inc
orb
mov
ja
lods
mov
fcoms
sub
cmp
mov
mov
mov
pop
leave
out
mov
cltd
sbb
out
loop
aam
and
mov
ss
sbb
xor
adc
imul
aad
cmp
divl
mov
sub
mov
adc
or
pushw
push
dec
inc
or
inc
cld
jnp
pop
sub
pop
cmpsb
inc
inc
cmp
pop
rorl
imul
icebp
aas
insl
daa
jle
sub
jo
add
test
test
xchg
cli
fdivrl
test
cmpsb
hlt
mov
mov
iret
std
out
clc
sbb
mov
inc
jecxz
std
pop
pop
xor
fwait
cs
repz
xor
add
mov
inc
cmpsl
inc
data16
jp
leave
clc
pushf
sbb
xchg
pushf
fisttps
out
in
cmp
xorb
fldenv
xchg
xor
dec
xchg
push
rol
pushf
xchg
add
jge
add
fwait
aad
repz
jg
jecxz
shlb
lret
inc
xorl
mov
mov
hlt
inc
push
jae
jecxz
psraw
outsb
lods
cmp
mov
and
pusha
mov
xor
xor
insb
xchg
mov
dec
hlt
cld
xor
loope
xchg
sub
pop
push
out
mov
jmp
inc
loope
xor
cmp
pop
js
adc
fmull
cwtl
iret
int
jl
or
lods
mov
jb
into
aam
adc
loope
and
xor
shrb
jb
testl
or
data16
mov
mov
fsubr
lods
pop
call
aas
movl
shr
pusha
fidivs
sbb
mov
jmp
and
shl
push
or
aaa
jno
xlat
cmpsl
scas
sub
pop
pop
adc
jecxz
lret
mov
and
pop
push
dec
cltd
or
and
mov
leave
sbb
mov
mov
mov
scas
add
out
xlat
stos
inc
outsb
sahf
sbb
xchg
sbb
lods
or
divl
cmpsb
iret
jb
dec
cltd
push
jmp
ss
aam
sar
popf
mov
mov
mulb
imul
and
ss
andb
das
push
in
push
in
dec
mov
push
or
push
cltd
adc
dec
sbb
mov
and
lods
mov
jmp
sub
in
out
adc
mov
mov
and
add
sbb
mov
cmp
cltd
or
lea
cmp
rclb
sbb
mov
jno
ja
adc
aaa
or
call
or
nop
xchg
or
rol
and
stc
outsb
test
pop
xor
es
fsubrs
data16
leave
jno
loopne
dec
jl
adc
mov
sti
inc
jl
adc
movsl
pop
cmp
fs
fadds
pop
jno
xchg
jp
js
aas
rclb
pop
inc
sbb
jne
fisubrl
fiaddl
adc
or
inc
filds
mov
and
fidivrs
jge
sbb
lmsw
mov
in
dec
rclb
and
int
andb
and
stc
data16
loop
jnp
loopne
dec
rcrb
jae
pop
rorl
dec
mov
jo
and
out
xchg
inc
mov
mov
pop
outsl
xor
sbb
mov
ljmp
dec
arpl
add
ss
sbb
lds
adcl
mov
iret
ja
cwtl
sbb
ret
lock
cmp
jecxz
adc
fwait
and
xor
hlt
or
lret
mov
jmp
mov
sbb
decl
mov
inc
xor
loop
mov
test
aaa
repnz
ljmp
out
dec
bound
mov
das
pop
jge
leave
or
nop
cmpsl
mov
xchg
stos
ja
mov
xchg
arpl
dec
ss
pop
and
jne
ficoml
or
roll
mov
inc
xor
in
sbb
imul
addl
inc
push
ljmp
push
andb
push
in
pop
fadd
jno
push
push
xor
jle
mov
ret
test
test
pop
je
cwtl
adc
std
cmp
shl
mov
adc
mov
dec
mov
nop
ss
mov
repz
lret
pop
jbe
js
loop
test
les
dec
push
mov
idivl
mov
test
jg
xchg
inc
jecxz
mov
and
mov
daa
dec
fsubs
cmp
mov
pop
and
push
push
dec
pop
fs
movsb
push
add
xchg
inc
push
addl
mov
imul
mov
push
lock
gs
fwait
xlat
pop
arpl
mov
je
dec
dec
push
xlat
test
rcr
adc
push
sub
cmp
xchg
insb
shl
insb
sbb
add
enter
bound
lcall
sahf
imul
lods
xchg
cld
sti
cwtl
test
subl
sbb
mov
hlt
pop
cld
adcl
push
xchg
and
xor
xor
nop
scas
xchg
shl
std
jne
sub
fidivl
mov
test
rorl
pop
push
adc
push
divl
dec
lret
movsb
push
xchg
js
cmc
jp,pn
pop
cltd
and
jg
sti
imul
in
pop
enter
pop
ja
xchg
mov
xor
xor
pushf
mov
jnp
pop
mov
pop
fisubl
jbe
pop
mov
arpl
insb
adc
cltd
and
imul
cld
push
iret
popa
andl
xchg
in
sarl
sub
sbb
mov
inc
cwtl
xchg
outsl
fdivl
je
lods
sbb
cmp
sarb
test
pop
fcmove
cmp
daa
roll
jmp
inc
mov
sub
dec
cld
nop
loop
xor
call
or
pop
cmp
inc
push
and
or
gs
or
sbb
sub
pop
sub
leave
lret
cld
pop
gs
inc
push
rcll
adc
push
into
push
cmp
mov
jo
jl
push
shlb
or
inc
cmp
inc
fsubs
fs
mov
shrl
ret
dec
test
sub
mov
and
jnp
stos
popa
movsl
ja
outsb
sbb
scas
mov
lock
inc
xchg
push
test
mov
pushf
lods
cmp
mov
popf
pop
xchg
in
push
bound
out
imul
and
xchg
pop
or
lret
sub
fldcw
test
pop
leave
push
cmp
mov
and
cmp
fs
mov
cld
inc
mov
in
xor
pusha
jno,pn
pop
xor
xchg
or
int
and
lods
mov
das
xchg
add
out
int3
mov
stos
or
push
shrb
rcll
or
insl
jo
dec
rcll
push
es
out
cmc
mov
outsl
push
pop
push
cmp
jnp
adc
and
xor
int
lea
xchg
cwtl
xchg
push
sbb
add
adc
xor
cmp
bound
movsb
xor
inc
jecxz
pop
mov
lret
insl
imul
js
push
mov
inc
pop
inc
bound
jne
dec
push
dec
cmp
icebp
ret
scas
xchg
sub
into
pop
sub
dec
adc
shr
mov
clc
ds
jne
inc
mov
int3
xchg
or
mov
push
sub
arpl
leave
cs
sub
pop
in
pushf
jo
popf
setbe
mov
enter
scas
js
jns
cmp
imul
ret
mov
push
enter
cmp
inc
jno
dec
pop
add
jns
inc
out
mov
js
mov
jne
push
xchg
mov
xor
xchg
call
loop
sub
stos
xchg
xor
outsl
dec
jg
aam
or
and
imul
loope
test
mov
lds
jmp
and
sub
popa
fimuls
rcrl
and
fsubl
jmp
fisubs
pop
xor
jno
pushl
xchg
pop
lahf
std
add
jge
and
adc
pop
push
pop
mov
inc
cltd
pop
xchg
into
nop
shlb
pop
xchg
dec
mov
imul
mov
pop
sbb
int
and
dec
sbb
inc
xor
and
jge
dec
nop
ss
js
arpl
aam
mov
std
jne
outsb
mov
ficoml
mov
mov
insb
les
sub
xlat
pop
sub
xchg
repz
cli
test
int3
cltd
outsb
mov
mov
cmp
pushf
nop
cs
sbb
or
push
orl
xchg
mov
push
ljmp
outsb
adc
xchg
cs
mov
mov
pop
lods
outsl
inc
je
das
xchg
dec
stos
xor
sbb
pushf
add
adc
enter
or
and
insb
xor
mov
inc
daa
loopne
pushf
jl
sub
and
mov
xor
push
dec
dec
out
imul
sbb
out
and
and
jg
movsb
sbb
jno
pop
lret
int3
sbb
pop
mov
fnstsw
lods
pop
lock
gs
stos
jns
in
add
fcomps
fiadds
xor
sub
cwtl
in
cmpsb
ss
cwtl
jb
push
dec
fadds
adc
out
into
fsub
je
add
push
in
xchg
adcb
aas
adc
addl
adc
enter
push
and
ljmp
dec
lods
and
fistpl
push
xchg
icebp
fimull
mov
in
shl
mov
jns
xchg
pop
js
in
push
add
dec
xor
pop
add
imul
cmp
fcoml
push
pusha
jecxz
push
adc
adc
pop
rorl
adc
dec
pop
mov
in
mov
sarb
enter
movsl
clc
stos
ret
loop
dec
mov
pop
or
in
arpl
adc
mov
add
mov
in
adc
pop
jbe,pt
shll
adc
cmp
adc
mov
arpl
into
cli
shrb
loop
jg
dec
sub
dec
and
add
sub
adc
test
shlb
outsl
mov
popa
mov
mov
popa
scas
movswl
xlat
aad
cwtl
jnp
outsb
js
arpl
into
testl
adc
xchg
data16
fistl
mov
jae
sbb
lds
cmp
pop
cmp
test
rcrl
adc
add
pop
rolb
in
xchg
cmp
clc
addr16
push
ljmp
shl
sub
ljmp
inc
cmc
pop
stos
adc
adc
aaa
pusha
jns
pop
pop
cmp
mov
aaa
sub
sub
xchg
mov
sbb
push
xor
mov
imul
outsl
movl
pop
hlt
cmpl
or
popa
inc
push
xor
mov
xor
xor
pushf
shl
sti
inc
movsl
ja
jb
dec
aas
add
and
loopne
jne
xor
xchg
inc
stos
adc
loop
or
imul
inc
xchg
push
sti
mov
ret
or
lds
cmc
lods
pop
sbb
pop
repz
or
pop
adc
xchg
cmpsb
aaa
cmp
js
rep
adc
aas
lret
loopne
sub
jbe
push
daa
sub
std
arpl
stos
test
dec
mov
jbe
dec
xor
add
addb
sbb
sbb
jle
lods
jo
inc
movl
sub
cs
lea
fs
pop
sbb
in
push
mov
ja
in
push
jne
xchg
mov
mov
sbb
sub
mov
out
lea
jmp
aaa
push
sbb
dec
lock
pop
mov
mov
hlt
inc
push
xchg
jmp
out
outsb
and
mov
xchg
adc
push
ficoms
repz
mov
inc
fimuls
push
std
lret
xchg
fwait
cmpsb
fwait
fwait
sbb
and
mov
jbe
dec
pop
pop
push
mov
pusha
cmp
ficoml
fwait
push
subb
pop
or
jle
cmp
lret
test
test
std
adc
fnstenv
adc
add
mov
aas
cs
daa
inc
push
outsb
adc
in
loop
into
shlb
lret
sbb
xchg
push
xor
fcmovbe
cmp
out
add
mov
push
scas
inc
add
cmp
adc
sbb
xorb
data16
rolb
jge
jb
adc
leave
add
es
sbb
dec
cli
call
pop
push
pop
sub
rorl
aas
popa
dec
cmp
push
mov
mov
arpl
cmp
xchg
jo
fdiv
test
les
jbe
loopne
pop
inc
fisubrl
and
xchg
cwtl
inc
push
adc
xchg
push
cmp
xor
add
loopne
inc
sbb
xlat
push
xor
popa
dec
movd
lods
sub
es
mov
stos
ja
lods
jno
stos
push
jbe
mov
sbb
mov
scas
xchg
cld
xchg
fs
fs
mov
jp
inc
movsb
add
push
lock
pusha
or
scas
inc
xor
stos
bound
mov
std
mov
sbb
movsl
add
leave
pop
fucomip
imul
mov
ds
xor
ljmp
dec
mov
lret
sub
and
dec
pushf
mov
jo
mov
cmp
repnz
icebp
xchg
outsl
or
xchg
adc
orl
xchg
mov
push
test
cmp
in
push
leave
jnp
hlt
dec
dec
fwait
mov
repz
sub
jle
js
jmp
mov
push
xchg
inc
inc
pop
repz
mov
hlt
or
mov
dec
push
icebp
dec
push
jmp
adc
or
pusha
xchg
xchg
jmp
arpl
test
mov
lcall
mov
mov
movsb
xorl
jbe
mov
ss
lock
and
shll
cmp
mov
add
mov
mov
movsb
push
cmp
mov
movsb
fstps
jg
xchg
js
mov
dec
into
lods
mov
cld
mulb
cmp
pop
les
mov
pop
sub
clc
icebp
out
push
loope
mov
pusha
push
adc
lds
fstpt
sub
jo
gs
xchg
call
dec
add
sti
add
jle
dec
mov
xlat
pop
inc
test
loope
mov
call
inc
xor
daa
cmp
js
negb
gs
rcrl
mov
dec
std
insb
loop
sbb
sti
enter
in
mov
loopne
push
add
shll
xor
xor
jmp
loope
shrb
arpl
addr16
or
jmp
dec
sar
inc
inc
data16
mov
bound
mov
push
repnz
faddl
cmp
lods
popl
test
jo
add
popf
rclb
cmpsl
int
sub
jae
mov
movsl
xchg
stos
cld
xchg
and
aam
or
enter
int3
mov
lret
lahf
lcall
mov
or
push
xchg
sahf
adc
ror
xchg
ljmp
mov
insl
and
xchg
cmpsb
das
out
cmp
mov
sub
cmp
ret
lahf
mov
jecxz
and
mov
lcall
dec
adc
dec
fdivs
shrb
xchg
cmpsl
icebp
or
loopne
insl
aaa
cs
sti
mov
pop
cmp
stos
push
dec
pop
sti
enter
jp
fs
xlat
push
mov
mov
adc
add
pushf
sets
inc
ss
jl
int
pop
mov
scas
adc
mov
bound
sub
push
push
iret
fsubs
or
cmp
dec
roll
clc
sbb
sbbl
fidivl
lcall
adc
or
push
xlat
push
dec
pop
bound
cmpsb
mov
imul
mov
je
pop
inc
hlt
lock
fbld
and
jmp
notb
jnp
sti
mov
mov
loopne
mov
add
or
pusha
and
ret
ss
push
dec
fwait
orb
jmp
mov
sub
dec
mov
test
jecxz
xchg
mov
sbb
aaa
inc
imull
push
push
cmp
ret
loope
iret
in
cli
test
gs
mov
add
cwtl
push
cs
outsl
repnz
mov
sbb
pop
stos
aaa
push
data16
inc
test
add
insl
cmp
ljmp
sub
and
leave
mov
cmpb
out
lock
cmp
in
test
inc
xchg
and
movsl
in
jo
outsb
sbbl
cmp
dec
fldcw
es
or
mov
fucom
mov
add
repz
cli
jns
ss
or
inc
mov
xor
ret
sti
add
js
loop
xor
sbb
pop
jo
jp
lahf
push
mov
mov
mov
stc
xorl
push
hlt
fwait
subl
fyl2xp1
and
aad
inc
cmpsl
sub
mov
and
dec
cs
sbb
add
and
arpl
lret
inc
jne
lods
xchg
inc
push
inc
je
test
subb
aaa
pop
lea
xlat
push
dec
mov
ret
lods
mov
inc
dec
inc
sbb
aaa
add
and
fsubrs
jae
in
xchg
es
hlt
push
ljmp
fbstp
cwtl
std
repnz
and
add
stos
out
or
lcall
xor
mov
pusha
push
mov
int3
clc
jne
dec
xchg
mov
mov
out
cmp
aad
in
gs
adc
add
mov
stos
sub
xlat
rorl
lcall
pop
insb
push
and
push
sbb
pop
fbld
jge
and
push
jae
pop
dec
dec
xor
pop
inc
cs
xor
sub
lods
sub
gs
lahf
stos
mov
int
sahf
cltd
call
add
add
adc
add
ljmp
mov
jmp
ja
loopne
je
sbb
scas
loopne
in
hlt
lods
inc
ss
sbb
cltd
test
ficomps
jne
fiaddl
sub
push
pop
pop
pushf
cltd
hlt
fs
cmp
and
loop
cmpsl
mov
testb
xchg
inc
xchg
sbb
add
xor
inc
fisubl
xchg
sub
push
in
aaa
aad
leave
sub
dec
stos
and
das
dec
rcll
cmpsl
out
push
clc
sbb
mov
pop
xchg
xorl
jp
popa
xorl
cs
addb
mov
or
jle
popf
cmp
in
clc
les
push
inc
push
jmp
or
xchg
push
add
and
icebp
add
sbb
out
popa
pop
add
xor
fs
xlat
idivb
and
xchg
mov
adc
fcomip
leave
out
sub
sbb
mov
pop
xchg
add
xor
cli
mov
cmpb
sub
adc
fwait
rcrl
nop
mov
test
movsl
pop
sub
repnz
insb
mov
jmp
lods
leave
pop
lock
push
mov
cli
or
xor
dec
fiaddl
ja
test
out
cmpsl
jo
nop
aas
bound
lret
xchg
cli
icebp
mov
xor
push
jno
into
add
mov
nop
stc
das
insb
out
mov
cmpsl
jnp
repnz
push
dec
xchg
or
stos
jns
cmp
mov
add
popl
jle
push
dec
rorl
push
adc
in
inc
xor
sub
insb
faddp
cwtl
fadd
cltd
bound
xchg
les
push
xor
nop
add
andb
mov
js
xchg
repz
jle
cmp
lock
movsb
xchg
fucom
mov
pop
pop
and
jmp
adc
stos
dec
mov
jg
jecxz
mov
sbb
lahf
mov
lock
inc
aad
cmc
pop
or
dec
mov
test
jp
lret
push
int3
sahf
rcrb
pop
fists
cmp
pushf
loope
push
xlat
inc
push
mov
cmpsb
xchg
adc
popf
icebp
xor
addb
push
pop
out
mov
mov
and
rcrl
pop
jbe
and
mov
mov
mov
scas
and
adc
inc
push
stos
adc
icebp
jb
je
rcrl
aas
lods
mov
mov
nop
adc
xor
xlat
mov
xor
lcall
pop
outsl
mov
mov
push
pop
or
lock
adc
leave
cmp
jnp
cmp
mov
out
cmp
lds
aam
fldl
and
mov
rol
mov
das
sarb
icebp
lods
loopne
out
stc
jo
sbb
pop
ret
lret
push
out
repnz
fcoml
adc
cmp
ss
shrl
out
jnp
xchg
je
jmp
ds
bound
dec
dec
cmp
ffreep
fldt
testb
cmp
and
lret
lret
loopne
stos
int
rclb
stos
xor
mov
cmp
fimull
js
adc
int3
clc
ret
push
jle
or
movlps
in
popa
aaa
daa
inc
stos
lcall
jle
loop
in
loop
mov
push
inc
cmp
adc
add
mov
mov
xor
sub
int3
add
movsl
out
sbb
and
fildll
inc
divl
push
or
outsl
push
movsb
or
nop
ss
and
push
mov
mov
push
add
sub
sub
inc
and
sub
jb
ret
movsl
or
movzwl
adc
fstl
xlat
xchg
and
mov
xor
pop
or
pushf
hlt
pushf
push
mov
mov
icebp
ficompl
cs
andb
dec
fsubs
mov
xchg
pop
pop
pop
jo
push
pop
mov
xchg
push
mov
loop
pop
std
jne
sbb
scas
jge
mov
dec
mov
and
imul
cli
add
pop
adcb
out
movl
mov
shrb
mov
cld
push
sbb
mov
and
xchg
cmp
add
sub
push
lret
ja
xchg
pop
ss
jl
into
push
into
pop
lea
ret
icebp
ds
lret
mulb
iret
push
in
bound
cs
stos
push
lret
cs
xor
sarb
xor
in
sub
ret
je
jae
and
inc
pop
push
sbbl
xlat
pop
repz
push
imul
sbb
xchg
call
outsl
xor
jp
inc
push
xchg
add
lret
sub
dec
imul
sbb
ror
outsl
cmp
outsb
nop
roll
dec
movsl
int
popa
push
cmpsb
cmp
iret
iret
scas
push
mov
cmp
push
xchg
cwtl
mov
push
adc
or
pmaxsw
add
xchg
hlt
addb
pushf
mov
daa
jmp
xlat
push
insb
jg
in
inc
jnp
mov
mov
loop
sbb
cmp
insb
mov
aas
mov
jge
cmp
rorl
fadds
out
sbb
xor
scas
and
movl
xor
jp
mov
add
popa
sub
mov
jmp
jb
cmp
leave
btr
pop
or
xor
testl
hlt
push
xchg
mov
xchg
jbe
test
pop
cmp
fs
mov
xchg
hlt
dec
sub
int
shll
les
sbb
std
mov
cli
test
push
iret
in
mov
inc
sbb
in
mov
in
mov
cmpsl
dec
adc
jmp
test
imul
mov
rorb
xor
push
or
addr16
pop
inc
mov
mov
icebp
lods
adc
inc
cmp
add
insb
push
addl
and
push
push
xchg
fldcw
dec
fnsave
cs
popa
dec
fnstcw
jmp
insb
les
push
pop
jb
sar
outsb
push
adc
repnz
add
imul
pusha
mov
loop
mov
das
hlt
dec
dec
aad
add
inc
xchg
jnp
inc
jnp
mov
pop
test
outsl
jge
adc
popf
ljmp
outsl
mov
push
in
sub
inc
and
add
cmp
sti
sbb
sti
or
jo
jmp
aad
pop
cmp
or
loope
inc
cmp
sbbl
fucompp
cs
adc
cld
mov
xor
aaa
cmp
mov
outsl
mov
nop
lods
sbb
out
out
outsl
pushf
sub
or
sahf
mov
cld
sar
cmp
fisubrl
cmpsb
dec
adc
es
add
dec
lahf
push
fcmovb
shl
movl
add
scas
xchg
add
or
pop
pop
mov
aad
leave
repnz
pop
je
push
idivb
sar
cmp
test
xchg
scas
fmul
xchg
adc
ss
sub
es
cmc
adc
ljmp
jg
fnstenv
push
ror
adc
dec
popa
in
test
in
push
xor
rcl
cmc
push
adc
dec
std
xor
sbb
lods
mov
stos
int
iret
outsb
push
fistpl
dec
push
daa
xor
adc
scas
dec
xchg
push
mov
mov
test
mov
stos
cmpsb
out
subl
cmc
jb
mov
cmp
push
pop
lods
popa
mov
outsb
pushf
jmp
lret
inc
loop
add
setno
jmp
mov
sahf
cwtl
imul
ret
hlt
shll
sbb
xor
xor
mov
sub
or
push
cmpb
sbb
imull
xchg
pop
in
in
inc
shll
mov
mov
cmp
and
pop
dec
in
bound
pop
arpl
pop
inc
dec
cmp
adc
sbb
cli
push
sbb
sub
fwait
sbb
mov
jns
pop
jmp
push
call
aad
xor
jp
jnp
lea
lret
jne
inc
sub
scas
outsb
fsubs
adc
outsl
jo
int
in
xchg
mov
sahf
rorb
int3
mov
pop
int
push
aam
push
sbb
aam
xorb
call
bound
mov
loope
rcrb
movsl
inc
xor
leave
xor
inc
mov
push
adc
push
mov
cli
jle
jle
aaa
mov
push
mov
mov
in
inc
aad
movsb
adc
lds
pop
out
sub
movsb
sbb
dec
mov
pop
fwait
out
mov
test
inc
mov
lods
das
xchg
add
and
lahf
mov
ficompl
sbb
fs
adc
dec
xor
xchg
addl
rol
iret
xchg
lea
xchg
inc
sahf
test
test
aam
in
imul
cmp
paddq
xchg
fadds
add
mov
sub
pop
jne
jns
outsl
jle
pop
loopne
fsubrs
lcall
fdivrs
inc
div
mov
or
mov
aaa
ficompl
add
xor
cmp
sbb
xor
xor
arpl
jo
inc
mov
lret
push
mov
setae
inc
cmp
inc
inc
mov
lahf
incl
pushf
jp
das
jge
pop
ds
cmp
stos
leave
lret
mov
inc
repnz
mov
fdivl
mov
mov
mov
cs
adc
ret
cmpsb
call
or
fidivrs
push
xchg
cmp
dec
or
xor
push
daa
in
jo
jg
xchg
imul
sub
pop
jns
test
xor
scas
ss
inc
push
push
mov
push
push
cmp
push
popf
stc
rcll
out
and
xor
mov
cld
or
in
mov
call
sbb
mov
inc
sar
cmp
adc
dec
and
mov
xor
add
mov
out
pushf
loopne
push
ret
and
and
fwait
hlt
cmp
in
xchg
push
inc
shl
mov
sti
push
insb
jle
inc
add
pop
mov
adc
lahf
or
jb
mov
lahf
nop
pop
xor
rcll
roll
aad
mov
stos
xchg
int
aam
and
loop
clc
popa
sbb
cmp
adc
test
cwtl
scas
movsb
or
cmpsl
shlb
mov
out
xlat
nop
dec
push
lea
mov
mov
xchg
mov
jbe
xchg
scas
xchg
lods
icebp
js
add
fstpt
insl
mov
xor
xor
inc
lcall
mov
mov
in
loop
out
fstl
cmp
xchg
rorb
rcr
lea
sbb
lahf
or
mov
sub
cmpl
mov
jp
xor
rolb
loop
jae
cwtl
aad
jecxz
dec
cmp
jbe
pop
or
movsl
cmp
and
shl
rclb
daa
push
mov
mov
mov
adc
jns
out
mov
push
fcoms
out
ljmp
or
loopne
lcall
inc
fsqrt
mov
movsl
cmpb
add
cmpsl
out
ret
lahf
mov
cmp
push
int3
mov
pop
mov
mov
insb
push
mov
in
jns
cmp
movsl
push
pop
outsl
ret
das
decl
fstpl
dec
jle
das
rep
fidivs
xor
std
jne
or
lcall
cmc
out
cmc
sbb
mov
or
dec
subb
fstps
les
outsl
cmp
pop
out
pop
pop
cmc
das
test
mov
mov
mov
popf
fisttpl
dec
adc
lods
mov
xchg
adc
or
test
popa
dec
add
shr
ret
outsl
in
xchg
aam
mov
push
mov
popa
xor
fldl
cld
imul
jmp
test
mov
fstpl
jo
mov
sub
jmp
nopl
out
cs
in
mov
sbb
pusha
or
arpl
sub
jne
mov
mov
pop
stos
mov
ds
fildll
jle
sub
repnz
loop
mov
insl
mov
and
and
stc
aad
test
pop
std
mov
fildl
icebp
and
daa
dec
out
insb
in
js
jbe
cmp
pushl
xchg
fmull
test
mov
popf
push
fsubrs
mov
sub
inc
cld
rclb
xlat
xor
add
cmp
dec
pop
adc
scas
mov
jbe
and
xor
mov
mov
cwtl
push
sbb
sbbl
fs
pop
add
mov
push
in
xchg
adc
int
iret
pop
xchg
mov
cwtl
ds
rorl
and
mov
xchg
inc
mov
scas
movsl
xchg
arpl
hlt
cltd
mov
adc
adc
out
jmp
or
dec
repz
xchg
imul
aam
mov
dec
sub
and
and
add
xor
xchg
pop
xor
xor
shrl
jmpw
movsb
or
rorl
mov
shlb
or
je
pop
adc
fidivl
leave
mov
cmp
add
xor
ret
int
hlt
stos
sbb
push
lret
mov
mov
imul
cmpsl
or
ds
jp
mov
hlt
dec
push
daa
xor
lods
push
push
mov
or
and
data16
fimull
aad
inc
loope
xchg
inc
mov
out
pop
dec
clc
jecxz
orl
jb
loop
mov
repz
jne
jp
rcrl
mov
sub
mov
test
mov
cwtl
and
dec
xlat
clc
adc
fldenv
data16
notb
add
lods
popa
aaa
add
cs
and
pop
xchg
out
lret
xor
ret
call
and
xchg
roll
dec
test
cmp
in
and
inc
jne
in
xorl
loop
jae
sbb
das
mov
stc
insl
test
insl
leave
scas
es
mov
cmpsl
scas
imul
popf
sub
sbbl
repz
jecxz
mov
xchg
dec
inc
jbe
cmp
mov
dec
push
push
nop
sahf
mov
add
scas
push
pop
push
jle
fcomps
and
push
sar
push
rcll
mov
jbe
or
les
leave
jg
jno
add
pop
ror
inc
mov
mov
cmp
xlat
and
xor
or
dec
jp
pop
sbb
xor
jp
out
mov
xchg
xchg
and
popa
lods
ja
push
dec
inc
cmp
inc
push
cmpsb
push
or
jmp
aam
cli
jb
or
adc
rcrb
pop
pop
insl
dec
jno
fnsave
fwait
inc
mov
cmc
in
sub
sbb
cmp
mov
stos
subl
dec
aas
or
xor
aam
pop
push
loope
lret
mov
out
mov
sub
and
imul
fidivrs
push
stos
ficomps
mov
inc
sbb
mov
ljmp
ficompl
mov
adc
mov
adc
add
adc
or
inc
test
flds
imulb
or
or
fcmove
ret
lret
fistl
popf
pop
jl
pop
iret
aam
push
push
sti
dec
inc
sbb
mov
cmc
mov
cld
add
jbe
pop
sub
push
aad
test
testb
pop
xor
mulb
or
scas
rorb
xchg
gs
cli
jne
movsl
inc
mov
aam
bound
push
std
ds
popa
push
mov
xor
imul
ret
mov
cmp
fwait
popa
add
push
scas
add
lret
adc
scas
pop
adc
insb
sub
loop
js
lret
cmp
imul
jns
pushf
ret
cmp
test
cmp
xchg
or
dec
je
les
mov
or
repz
jnp
test
push
sub
loopne
mov
scas
dec
std
mov
mov
rorl
mov
fs
orl
das
sbb
cwtl
arpl
fs
adc
push
push
cmp
sarb
lods
lahf
pop
or
pop
jns
push
fimuls
xchg
jno
arpl
lods
sbb
dec
xchg
fiaddl
es
sbb
push
inc
mov
pop
cmp
outsl
lods
or
dec
es
mov
push
mov
insb
mov
nop
xchg
call
or
std
add
cmc
mull
dec
idivl
and
cmpsl
mov
mov
roll
repz
cmpsb
and
adc
out
jle
fsts
jb
mov
xlat
lret
jns
shlb
cmp
std
xor
and
jns
or
inc
insl
pop
or
xor
jp
inc
mov
jl
cmp
pop
out
lahf
iret
pop
pop
cmc
adc
pop
mov
ficoms
adc
jl
mov
pop
data16
sub
fstpt
lahf
cmc
std
pop
push
scas
inc
xor
mov
pop
outsb
shrl
jmp
inc
imul
sbb
loopne
add
rcrb
xor
out
xor
les
mov
mov
pop
sti
and
popf
insb
fnstcw
in
add
ffree
cwtl
cli
cmp
or
xchg
out
loopne
jp
inc
mov
pop
add
push
and
jmp
cmpsl
xor
xor
movsb
mov
push
cmc
adc
ret
adc
stos
cmc
popa
push
xorb
aas
test
lods
add
adc
mov
mov
inc
cltd
jno
lds
cld
loope
outsb
aam
ret
lds
sub
cmpsl
push
lret
sti
jbe
fs
push
loopne
pop
aas
stc
movsb
mov
cld
aaa
nop
bound
adcl
sub
cmc
pop
call
pop
test
mov
les
test
or
imul
cmp
and
test
adc
mov
sbb
cmpsl
mov
pop
std
adc
cmp
out
mov
cmpsl
test
mov
push
xchg
mov
mov
xchg
mov
and
sub
das
in
test
das
mov
shll
ret
stc
pusha
dec
and
push
xor
dec
in
add
xor
mov
aam
mov
pop
xor
daa
iret
mov
push
movsl
movsb
jbe
sahf
rolb
das
scas
mov
icebp
pop
jbe
mov
lods
cmp
mov
jmp
mov
outsb
sub
xor
sarb
xlat
add
xlat
dec
dec
push
sub
loope
push
inc
decl
pop
jb
roll
pusha
ja
bound
arpl
cmpsb
ljmp
xchg
cltd
push
jge,pt
ret
imul
into
sbb
ret
cld
ja
aaa
cmp
stc
xor
pop
hlt
jmp
cli
testb
sub
dec
dec
rolb
decb
mov
push
mov
sarb
in
and
out
popa
xchg
daa
cs
leave
push
outsb
arpl
mov
xor
clc
xchg
dec
push
les
loope
inc
jmp
lcall
cld
inc
dec
and
and
cmpsl
sbbl
cltd
or
mov
int
out
mov
sbb
xlat
std
loop
inc
add
out
mov
sar
sub
icebp
jns
in
cs
sub
pop
aam
push
or
push
shll
xchg
cmpsb
and
popa
in
je
push
xchg
repnz
adc
outsb
shr
cmc
push
jbe
insb
mov
mov
outsl
in
outsl
mov
push
add
sahf
jns
enter
lods
xchg
int3
imul
stc
push
ret
mov
and
fbstp
push
jecxz
packssdw
adc
xchg
addr16
je
sub
sbb
xor
jecxz
dec
pop
leave
repnz
xlat
mov
xchg
out
xchg
out
cs
popa
jmp
and
adc
cmp
fsubr
lret
jmp
outsl
and
inc
and
jno
xor
lcall
pop
fs
js
sarl
iret
xor
inc
sub
adc
enter
or
popa
jae
xchg
dec
mov
cmp
jne
fcoms
iret
insb
fldt
push
filds
pop
xorb
fcmovb
inc
pop
xor
int
mov
xor
cmpsb
pop
ja
lods
ror
adc
fcoms
cmpsl
test
pusha
cwtl
inc
xchg
push
cmp
pop
xchg
and
mov
fists
jnp
push
orb
leave
jl
test
adc
int3
mov
in
ja
bound
fadds
pop
sbb
pop
add
aam
movsb
inc
inc
pop
inc
sti
pushf
mov
psllw
pop
jo
or
and
outsb
cmp
fstpl
adc
hlt
lock
push
filds
ljmp
or
lcall
inc
mov
push
xchg
fbstp
jle
dec
pop
mov
mov
push
jbe
arpl
arpl
aaa
push
lock
arpl
sub
mov
push
insb
loope
mov
mov
fdivrl
and
cmp
sub
test
adc
hlt
jbe
sub
jns
inc
aas
cmp
sub
pop
jnp
jae
and
daa
mov
add
push
xlat
cmp
test
pop
popf
jo
lcall
or
fidivs
add
dec
mov
fnstcw
mov
push
mov
push
pop
inc
mov
inc
aam
xor
mov
ds
push
imul
imul
stc
and
out
ds
mov
sarl
into
imul
mov
add
xor
faddl
sub
aam
notb
sub
cmp
dec
mov
push
mov
test
push
daa
adcb
push
icebp
int3
ret
adc
pop
adc
fcmovnu
ljmp
mov
test
hlt
mov
inc
das
sbbl
mov
jno
ror
in
dec
mov
hlt
or
rcrl
test
jmp
fninit
inc
cmpsl
enter
xchg
or
push
mov
popa
loope
nop
lret
lds
scas
mov
js
inc
fstpl
pusha
pop
xchg
push
sbb
stc
add
arpl
xor
and
sub
mov
xchg
dec
xchg
cwtl
sbb
testb
dec
sbb
jg,pn
fimuls
cmp
mov
mov
pushl
ret
cmp
adc
fistpl
push
movsb
out
push
cmp
push
mov
pop
xor
repnz
xor
imul
and
aam
mov
mov
rcl
fwait
daa
xchg
adc
lea
popa
leave
jae
ret
jmp
jae
xor
mov
outsb
dec
cld
mov
mov
adc
cmp
lock
lds
std
or
push
in
inc
and
push
sbb
xchg
lods
cmp
testb
sub
fdiv
aad
test
std
in
mov
cmpsl
mov
sub
adc
xor
fnstenv
lods
adc
add
repz
data16
xchg
dec
and
in
fwait
pop
hlt
divl
sbb
mov
xchg
xor
sbb
lcall
lds
mov
pop
or
sub
std
js
imul
addr16
inc
ret
hlt
mov
adc
mov
mov
lea
push
xchg
push
test
pop
fadd
jle
jns
stc
daa
cmp
test
jns
int
stc
dec
icebp
cld
in
dec
cmp
les
mov
sub
imul
or
cmc
xchg
dec
insb
repnz
outsl
lahf
sti
in
inc
icebp
filds
push
mov
dec
adc
dec
add
test
mov
fistl
ljmp
notl
cli
xor
das
iret
iret
cmpsb
push
sbb
gs
and
pop
test
jb
addb
aas
add
insl
xchg
push
jg
mov
aaa
or
sbb
enter
push
dec
inc
int
mov
sarb
mov
cmp
fadds
pusha
mov
jns
sti
mov
div
stos
xor
push
subl
adc
mov
xchg
pop
add
cs
xlat
clc
lods
jae
jns
shrl
and
push
shll
push
jnp
mov
cwtl
add
or
cmp
stc
fmull
lret
lock
outsb
inc
mov
or
mov
push
lods
adc
cwtl
das
in
mov
aaa
int
jg
push
push
into
and
fmull
cmpsb
push
stos
std
out
mov
movq
out
out
mov
out
rol
fs
adcb
push
mov
and
outsl
sti
jmp
mov
add
adc
mov
aam
lea
out
dec
pop
testl
rorb
test
movntq
out
roll
pop
bound
adc
push
bound
popa
ret
pop
int
fs
lret
call
mov
inc
and
inc
adc
je
icebp
enter
insb
adc
xlat
jno
cmp
int
lcall
xchg
xchg
inc
adc
int
xchg
test
sahf
pusha
sti
clc
inc
xor
gs
ret
mov
cmp
jecxz
sbb
cwtl
sbb
out
cmp
cli
push
popf
pop
leave
movsb
and
lock
adc
xchg
enter
shrl
fnstenv
push
rclb
in
addl
mov
into
xor
hlt
or
test
clc
xlat
clc
in
shlb
ss
inc
xchg
sub
dec
and
ds
xchg
ret
add
in
hlt
sbb
push
mov
lret
fwait
mov
inc
mov
add
ret
push
ret
shl
lods
xor
push
cmc
jge
jbe
mov
pop
ljmp
shl
mov
out
sub
jb
mov
fldcw
dec
scas
sti
bound
pop
lahf
ja
mov
mov
mov
popa
test
dec
test
adc
mov
jl
les
outsl
pop
cmp
pop
ret
rorb
adc
pop
gs
cmp
mov
pop
jle
sub
mov
xchg
jp
mov
and
mov
imul
adc
stc
cmp
add
ret
jecxz
add
mov
jno
push
push
sub
add
sbb
bound
add
cltd
ret
scas
push
inc
pop
scas
xor
test
jne
sub
jle
and
mov
es
mov
and
movsb
sub
jp
popa
jo
lods
or
mov
cmpb
xor
inc
add
xchg
out
mov
mov
and
fdivl
push
push
mov
aam
aam
cld
stos
sbb
add
stos
pop
xchg
out
adc
scas
popf
dec
fsubrp
dec
mov
or
mov
jns
and
aas
xchg
pop
push
roll
dec
sub
cmp
xlat
loop
icebp
leave
dec
inc
mov
insl
into
test
test
ret
fbstp
push
nop
pop
aas
inc
shll
mov
dec
ret
push
sub
mov
xlat
lret
dec
stos
and
push
pop
lret
clc
push
in
push
lds
pop
rep
stos
and
idivb
mov
das
lahf
mov
jns
or
ret
push
mov
mov
lret
mov
xlat
push
bsr
test
out
cmpsb
pop
xchg
testl
aad
mov
mov
mov
xor
ud1
jle
pushf
lea
shl
mov
fcmovne
and
movsb
push
and
fdivrs
roll
mov
shll
dec
xor
sahf
inc
int3
push
in
pushf
fsubrs
cmpsb
pop
mov
mov
mov
enter
adc
outsb
xor
ret
push
fisubs
mov
fnsave
mov
or
aam
mov
jmp
int
lea
push
shll
shll
xchg
pop
add
xchg
fdivrp
or
pop
and
cmp
push
cmpsl
lcall
sub
out
insb
mov
out
shrl
std
sub
loopne
and
stos
mov
mov
sbb
and
sbb
cli
repnz
cmp
fwait
in
xchg
data16
inc
dec
xchg
push
dec
cmovae
push
movsb
xchg
xor
dec
dec
or
cmp
fcoml
and
adcb
inc
jge
int
imul
fisubrl
jno
mov
repnz
or
xor
jg
iret
fisubl
pop
mov
fsubl
mov
dec
test
pop
iret
inc
int3
dec
enter
mov
push
pop
jno
lods
je
bound
mov
xor
push
push
dec
pop
mov
dec
xlat
inc
inc
mov
inc
ficoms
mov
xor
lea
pop
cli
insb
push
fstpt
xor
pop
cs
jae
pop
jb
jp
lret
in
int3
push
lods
aaa
pop
sahf
cmp
push
cwtl
sbb
insb
out
xlat
fnstsw
pop
add
add
add
roll
loopne
jecxz
cs
pop
xchg
push
cld
lds
dec
outsl
xchg
xchg
or
shrl
data16
std
frstpm(287
sub
outsb
mov
repz
imul
fldcw
and
jp
insb
lahf
jecxz
dec
lds
pushf
or
push
jp
sub
cmp
leave
pop
sbb
hlt
mov
mov
cs
cmp
sbb
mov
insb
mov
hlt
pop
imul
pushw
push
mov
fcmovb
mov
dec
xchg
mov
sub
notb
gs
add
jmp
mov
int
lcall
gs
rcrb
push
je
mov
fs
push
test
into
and
mov
fstps
xor
cmp
pop
lcall
cs
xchg
cli
shrl
cmpsb
loop
stos
js
loopne
mov
addr16
jmp
rep
mov
repz
sahf
or
xorl
test
mov
jecxz
mov
call
call
push
jecxz
sti
test
aam
mov
dec
int3
gs
jecxz,pn
jns
into
xchg
das
adc
inc
adc
jno
jnp
fdivs
fdivr
lret
das
das
cmpsb
dec
mov
push
fisttpl
adc
push
add
jecxz
cmpsl
pushf
hlt
pop
addb
bound
popf
outsb
out
mov
sbb
ja
jns
add
lahf
out
scas
mov
decl
inc
rol
push
or
dec
outsl
insb
and
ss
jo
lcall
pop
inc
lcall
mov
fildll
pop
in
dec
inc
repnz
fs
inc
lock
cmpsl
jne
xchg
fsubr
add
or
cmp
lret
hlt
fdivrs
sub
pop
fnsave
xchg
repnz
test
jns
xor
mov
or
mov
adc
test
cwtl
adc
ret
xor
cli
es
pop
fnstsw
movsl
cmpsl
cmp
push
scas
xchg
fimuls
pop
fsts
dec
xorl
loope
dec
pop
icebp
test
iret
fisubl
pop
fwait
shll
jmp
loop
stos
adc
les
pop
mov
fisubrl
jmp
push
xor
mov
xor
vmread
and
mov
arpl
or
xor
je
out
sbb
lock
lock
aam
mov
cmpsb
cli
jnp
cmp
popf
push
arpl
pusha
mov
and
iret
es
popf
addr16
shll
push
cld
jle
ret
nop
insb
rcll
pusha
sbb
adc
lds
dec
pop
je
inc
pop
js
loope
push
pop
push
rcl
sub
mov
mov
pop
out
in
outsl
jb
sbb
pop
xchg
loope
xchg
dec
es
dec
and
cli
mov
mov
inc
gs
inc
jecxz
jle
adc
bound
push
inc
adc
and
in
xchg
sti
in
lea
cmp
inc
nop
mov
stos
mov
mov
and
push
cmp
dec
insb
xchg
imul
std
cmpsb
ljmp
ret
pop
fstpl
adc
sub
sub
lods
mov
xchg
shrl
mov
in
or
fisttps
xor
sbb
sbb
sbb
jle
gs
imul
ja
ljmp
mov
lds
pop
inc
inc
mov
mov
sub
cmpsb
add
sub
nop
iret
popf
cld
mov
xchg
xor
in
fldl
repz
into
or
movsl
loope
shlb
jmp
stc
xchg
cmp
jbe
cwtl
add
lcall
stos
inc
sub
sahf
je
xchg
loop
inc
sbb
imul
fcoms
test
into
call
or
cld
or
in
dec
sub
pop
cmc
cli
pusha
mov
pop
mov
rcll
inc
out
fmul
xchg
imul
pop
popf
test
gs
pusha
dec
and
shl
fists
dec
and
cli
mov
jns
loope
arpl
xlat
sub
popa
mov
dec
or
mov
ja
lret
xchg
aad
std
add
int
sub
out
mov
adc
int
stc
ja
cmp
cmp
imul
pop
pop
mov
pusha
xor
and
xor
movsl
mov
mov
pop
jnp
stc
and
xor
mov
leave
cmp
fwait
pushf
and
lcall
shlb
mov
jp
mov
jl
cmp
and
or
and
or
sbb
ja
mov
inc
cmp
jg
mov
mov
in
xor
cmp
mov
and
mov
fstpt
jno
adc
add
or
outsl
xchg
sti
sub
cmp
daa
das
das
mov
push
test
pop
pop
pop
mov
outsl
mov
mov
cmp
and
jmp
mov
insl
testl
dec
dec
into
test
scas
and
mov
enter
add
jmp
push
xor
add
fistpl
shll
ror
mov
push
es
pop
outsl
mov
data16
add
int3
xchg
ror
icebp
dec
mov
lahf
es
dec
stos
sub
aam
dec
into
jo
jne
in
fcoms
call
or
fwait
inc
jnp
cmp
jmp
hlt
jno
sbb
and
jl
or
and
push
ficoml
addb
or
xlat
mov
scas
ss
gs
decl
mov
shl
add
cmp
xchg
sub
pop
jle
cs
or
cmp
mov
xchg
mov
and
lds
jle
pop
lods
adc
push
iret
jns
lods
sub
mov
repz
add
negl
push
je
add
rol
mov
pop
icebp
lcall
lcall
sub
push
cmpsb
popa
enter
push
jmp
dec
push
mov
inc
mov
int
fsubrs
pop
inc
sbb
dec
out
and
imul
shlb
scas
not
ds
fbstp
and
cmp
sbb
in
xor
mov
popa
repnz
loope
lea
movaps
or
sub
inc
test
lods
mov
and
int3
bound
pop
cmpsb
push
mov
cmp
add
xchg
or
movsl
pushl
jno
out
pop
push
addr16
imul
roll
jnp
iret
lock
xor
sbb
inc
xchg
or
jne
push
popf
pop
adc
mov
or
mov
pop
cmp
imul
jns
mov
sub
stc
mov
xchg
jb
inc
push
inc
pop
pop
out
push
jmp
int
adc
inc
jbe
lret
push
adc
jp
cmp
lods
repnz
jae
mov
fistpll
frstor
sub
cltd
inc
inc
or
cmp
or
jno
flds
jmp
mov
mov
outsl
mov
cmpsl
loope
mov
iret
xchg
inc
push
movsl
jg
mov
fistpl
lods
arpl
and
scas
pop
or
out
clc
test
loope
inc
jne
das
pop
and
inc
add
mov
in
jbe
push
lock
scas
push
pop
cmp
cltd
fidivrl
and
mov
loopne
inc
push
mov
push
inc
mov
sub
lahf
negl
fists
xchg
mov
push
jl
mov
test
inc
adc
inc
imul
adc
jmp
inc
xchg
rcr
mov
movsl
adc
fs
sbb
test
inc
aas
ror
je
adc
fadds
fmul
insb
daa
dec
adc
cmp
xor
hlt
jns
xchg
pop
sbb
les
bound
dec
je
fstpt
sub
xchg
jbe
insl
pushf
outsl
repnz
insb
adc
xchg
leave
cld
pop
cld
mov
pop
xor
repnz
jo
cli
insl
mov
pop
outsl
sbb
cmp
arpl
jle
std
push
jle
cmp
rol
sbb
aad
inc
pop
sbb
enter
fs
loop
mov
and
xor
add
ss
fldenv
pop
test
sahf
dec
jecxz
ljmp
rcll
addl
aam
pop
lret
pushl
push
pop
insb
test
sbb
dec
xor
loop
data16
lods
arpl
in
bound
push
pop
xchg
fs
idiv
cmp
shrl
inc
nop
pop
sub
sbb
and
xor
add
shrl
xor
cmp
cs
sti
sbb
push
fisubrs
jae
ret
outsb
adc
sbb
mov
div
insb
fs
insl
subb
push
and
and
pop
jb
aam
xchg
jp
sub
xlat
repnz
xchg
shll
mov
repz
xchg
jo
ds
jmp
js
icebp
mov
add
sbb
inc
mov
ljmp
mov
mov
movsb
or
and
mov
test
push
insl
add
jl
push
cmpsb
out
push
in
hlt
mov
fcom
es
adc
scas
push
adc
pop
cltd
call
sbb
dec
add
fcom
and
sbb
mov
rcrb
pop
es
fisubl
pusha
jne
ljmp
add
leave
sbb
lahf
xchg
stc
andl
push
jnp
dec
mov
jns
inc
sbb
xchg
mov
cmp
xor
sub
call
test
xchg
int3
cmc
cmp
stos
pop
sbb
jne
sbb
xchg
shll
mov
push
xchg
or
mov
ja
inc
dec
cmovbe
jge
jg
std
and
or
cmp
or
mov
add
xchg
xor
pop
outsb
lock
fstpl
lea
or
push
jb
sub
pushf
andb
adc
add
jge
sub
lds
shlb
dec
or
push
test
jo
lcall
ljmp
xchg
int3
or
arpl
lcall
ficoms
arpl
rclb
orb
xchg
ret
push
nop
pop
repz
sahf
js
add
push
push
or
xchg
daa
shrl
pop
push
xchg
ret
pop
xlat
scas
sbb
or
cmp
ljmp
mov
stos
repnz
jns
mov
fldenv
out
lds
sbb
fcmovne
add
repz
jge
cmp
cwtl
adc
sbb
mov
out
lret
pop
adc
fadds
jno
arpl
call
dec
shl
out
iret
loopne
jg
adc
push
testl
xor
scas
and
data16
ret
sbb
or
loopne
mov
inc
inc
pop
sahf
pop
push
or
imul
xchg
jmp
cmp
xchg
lods
jp
pusha
fimuls
loope
sbb
fbstp
iret
or
dec
mov
xor
mov
imull
imul
addr16
xor
into
and
xor
mov
test
repz
ss
lods
adc
push
push
push
movsl
sub
scas
pop
data16
cli
gs
push
int3
cmpsb
add
test
pop
aaa
mov
out
mov
sbb
icebp
push
add
jg
popf
stos
loope
lock
inc
adc
cmp
dec
out
mov
xchg
and
mov
stos
shl
hlt
icebp
add
nop
push
or
push
mov
jge
add
xor
ja
dec
insl
or
cld
fsubl
ds
mov
aad
in
adc
test
mov
ljmp
dec
repz
das
test
jge
rcrl
sub
pop
icebp
jo
mov
xchg
cmp
dec
jmp
pusha
pusha
cmc
jbe
xchg
test
mov
orb
pop
cmpl
std
pop
push
arpl
mov
jae
lea
fstpt
mov
lea
inc
cmpsb
arpl
jns
js
addr16
mov
jecxz
testl
jge
roll
data16
push
jae
push
jae
pop
in
iret
mov
jae
int
lods
ret
jp
cli
ja
fdivrs
shlb
xchg
rclb
add
iret
jno
sti
iret
add
scas
xchg
jae
mov
jg
inc
int3
jl
ss
jne
sti
iret
fcmovnbe
arpl
push
cs
xchg
inc
xchg
fstpt
out
out
push
fistps
pop
ret
mov
pop
aaa
mov
mov
sahf
jbe
fistpl
loop
repnz
jnp
cwtl
ficompl
int
adc
fisttpll
and
cltd
jecxz
dec
mov
insb
pushf
movsb
dec
loopne
cltd
int
mov
push
inc
repz
mov
pop
mov
mov
add
mov
sbb
js
ja
jns
es
into
ds
cmc
test
mov
xchg
adc
push
loopne
mov
aad
pop
jne
cmp
dec
rorb
inc
jb
arpl
imulb
in
ja
mov
testb
dec
sbb
cmp
xor
loope
dec
push
divl
fisubl
mov
cmp
lret
dec
and
and
push
mulb
movsb
negb
outsl
dec
cmp
mov
neg
push
xchg
leave
xor
jge
mov
dec
loopne
cltd
and
push
sub
insl
mov
loopne
aad
lahf
fistps
mov
xlat
jmp
add
pop
pop
movsl
punpckhwd
sub
xchg
cmc
xchg
and
sub
cmp
push
sub
lahf
enter
sbb
loope
flds
das
daa
decl
sub
push
je
sub
mov
ret
sbb
dec
sbb
faddl
rclb
inc
iretw
in
arpl
cli
sub
sub
inc
or
roll
ret
lods
sbb
xor
xchg
adcb
out
mov
lcall
imul
dec
dec
fs
lret
cmp
fstpt
sbb
push
test
sub
mov
shl
xor
scas
sbb
in
xchg
inc
ror
jmp
or
fsubl
jecxz
push
mov
imul
push
in
fwait
insl
xchg
daa
mov
sub
int3
adc
xchg
jns
mov
mov
ss
mov
sbb
clc
aas
jno
jle
fidivl
cld
cli
cmp
pusha
sub
rcrb
cmp
data16
out
mov
inc
mov
jmp
mov
xchg
sti
adc
cmp
stos
pop
push
frstor
or
mov
aad
cmc
add
js
loopne
jg
loopne
pop
aas
test
dec
jmp
fsubl
je
xor
and
cmp
movsl
sbb
test
mov
sbb
test
cwtl
loope
xor
xrelease
lock
rcrb
jns
push
hlt
cmp
push
fs
dec
dec
cmp
and
psrad
pop
jns
sysret
xchg
and
mov
or
push
xor
dec
or
inc
xchg
xlat
inc
outsb
lock
das
mov
ss
movsb
cmp
loope
dec
xchg
pop
bswap
out
rol
mov
mov
fmulp
jle
aas
das
mov
out
or
ja
and
es
cmp
xor
out
inc
sbb
test
pop
ret
mov
sub
jmp
out
cmp
mov
and
sub
loop
cmpl
in
daa
adc
add
mov
mov
inc
xchg
enter
outsl
shr
ret
imul
xchg
dec
mov
pop
dec
sbb
jg
pusha
cmp
pop
fwait
jae
ret
sar
xchg
or
jno
inc
outsl
and
xchg
aaa
in
mov
cmc
cmpsb
mov
cwtl
xlat
ljmp
xchg
fstl
lods
sarl
iret
sub
decl
add
mov
push
je
pop
mov
mov
cmp
mov
aad
push
and
loope
xchg
inc
pop
add
and
push
cmp
stos
rcrb
fisubrs
fcoms
int
js
into
iret
sbb
or
push
jge
ds
xchg
sahf
faddp
in
nop
test
cltd
sbb
push
dec
jo
pop
xchg
rcrl
cmp
js
das
xor
rcr
sbb
lds
testb
les
dec
movsl
pop
mov
or
cmp
aam
adc
es
ja
inc
inc
mov
shr
and
xchg
jae
inc
adc
inc
js
jb
dec
jmp
cmc
cwtl
ret
daa
int
or
rorb
and
shll
in
xor
ja
lea
cmp
sub
mov
lock
mov
aad
or
xchg
dec
mov
push
js
gs
push
mov
in
jl
addr16
frstpm(287
pop
rcll
outsb
iret
pop
rcr
jns
mov
pushf
jnp
cmp
in
adc
add
flds
stos
adc
sbb
lds
pop
push
mov
hlt
testb
mov
jp
sbb
jle
mov
xor
xchg
vmovapd
cmp
inc
push
scas
add
adc
xchg
add
lods
mov
insb
xchg
dec
sub
out
fistpl
addr16
das
inc
rep
adc
mov
push
pop
mov
mov
pop
ja
pop
mov
push
shrl
and
xchg
dec
mov
fcoms
pop
cwtl
push
adc
jmp
pop
xchg
inc
out
xor
mov
adc
das
roll
addr16
mov
mov
repnz
sub
fidivrs
insl
sub
add
add
sbb
push
hlt
cmp
lahf
mov
push
hlt
cld
lods
movsb
add
cld
cmpsl
cmp
xor
iret
xor
inc
in
in
outsb
lods
jp
popf
insb
and
cmp
scas
loope
jns
iret
inc
or
jg
sarb
enter
sbb
sti
jo
test
pop
inc
cmp
fisubs
dec
and
jno
jne
lock
mov
pop
mov
jge
sti
cmp
mov
adcb
cmp
pop
test
fdivrs
clc
mov
push
pusha
xor
clc
clc
or
mov
jb
mov
mov
xchg
jnp
jne
push
loopne
push
loope
mov
dec
fcomi
mov
call
jg
in
add
mov
push
lret
cld
jb
jmp
bound
enter
xor
mov
mov
ljmp
out
hlt
sub
cld
nop
push
out
push
and
ficoms
ret
shrb
inc
xchg
push
aas
roll
dec
add
xchg
xchg
fs
jmp
add
aam
inc
jg
imul
xchg
pop
and
movsb
cli
sub
js
xlat
mov
mov
mov
lods
int3
mov
js
movsl
fs
mov
xchg
negb
loope
jp
cmp
add
addr16
movb
push
push
push
pop
cmp
out
xchg
sbb
out
dec
ret
adc
mov
sar
push
push
scas
mov
rorb
mov
pop
test
sub
jecxz
xchg
or
popw
rcr
stc
cwtl
repnz
icebp
cmp
mov
jno
jg
jge
sahf
jge
pop
cmc
rcr
sbb
test
ljmp
mov
ja
notl
cli
and
jb
loop
jg,pt
inc
jge
loop
idivl
lea
sub
pop
fcmovb
loope
xor
inc
mov
inc
inc
pusha
mov
shl
jp
jb
lods
scas
leave
sub
lret
sub
dec
jmp
stc
fs
sbb
cmpsl
cmpsb
cmp
bound
test
dec
mov
push
dec
xor
mov
stc
aas
pop
rorl
mov
jns
push
jnp
or
packsswb
mov
and
adc
jle
andb
add
xor
ss
xor
mov
fwait
enter
test
dec
dec
test
mov
icebp
test
push
mov
pop
pop
xlat
pop
dec
jb
scas
punpckldq
aam
stos
addr16
and
add
mov
pop
cmp
xor
push
cmpxchg
jno
xchg
test
rcll
pop
jp
xchg
loop
data16
aam
enter
sahf
mov
cmp
jne
inc
mov
xlat
ljmp
push
add
popf
inc
call
daa
ja
ss
sub
add
cmp
out
xor
xchg
and
jmp
dec
sub
lcall
and
dec
out
jmp
dec
sbb
sarb
and
pop
aad
hlt
pop
mov
fcmove
push
dec
test
dec
clc
xchg
add
fsubrl
adc
mov
adc
mov
mov
xor
subb
fstp
stos
idivl
mov
pushf
lock
xchg
aad
leave
fisttpll
cmc
mov
add
repnz
faddl
lods
pop
mov
add
out
enter
xchg
adc
adc
or
add
pop
push
mov
fwait
pop
repz
jp
add
and
pop
in
iret
and
push
xchg
je
sub
into
out
pop
das
pop
jb
pop
pop
mov
cmpsl
jp
and
ja
lcall
fsts
mov
xlat
pusha
inc
testl
dec
or
stc
xchg
addl
mov
mov
inc
lret
jecxz
pop
fisttps
pushf
add
add
fisttpl
jne
pop
push
sar
inc
jl
cmp
sbb
mov
icebp
cli
mov
stos
pop
inc
arpl
push
int3
mov
gs
std
mov
push
cmc
xor
adc
dec
and
push
dec
repnz
add
shlb
xchg
test
and
dec
sub
push
mov
or
call
mov
lcall
pop
xchg
dec
andb
sbb
out
cmp
add
jo
and
pop
pop
xor
mov
enter
fucomp
cwtl
add
mov
push
mov
nop
and
xor
or
ja
push
jecxz
sub
movsl
dec
popf
movb
inc
stos
pop
sbb
adc
dec
and
sbb
shl
andb
shll
enter
inc
in
push
shl
jle
outsl
ficoms
out
data16
test
push
leave
xchg
mov
xor
cmpsb
sbb
addl
or
idivb
mov
dec
stc
add
scas
notl
je
insl
inc
movsb
and
in
mov
mov
lock
fildll
mov
call
pop
rorb
dec
loop
hlt
push
xchg
push
gs
popf
lods
mov
jo
sub
out
imul
ja
adc
add
repnz
pop
mov
std
add
inc
rcll
jb
jno
sub
sub
push
push
inc
fsubl
dec
dec
pushf
fcomps
sub
inc
stos
adc
mov
fs
cmp
pusha
outsl
adc
scas
negb
sahf
jbe
xor
imul
sqrtps
test
adc
mov
xchg
push
sub
mov
es
dec
insb
add
scas
jnp
mov
mov
out
fdivr
xchg
movsl
mov
jnp
lods
or
mov
mov
call
pop
push
jmp
dec
push
mov
inc
loopne
int3
fldt
jp
bound
data16
sub
imul
add
aam
mov
incb
insl
iret
mov
sbb
inc
out
outsl
push
and
ljmp
fmull
inc
js
push
enter
lock
jae
sti
sarl
pushf
lcall
jle
ds
mov
or
popw
or
test
pop
adc
loope
xchg
daa
dec
pop
mov
int
fidivrs
pop
rcrb
inc
mov
sbb
xor
imul
cmp
ret
pop
xor
es
push
fadd
call
pop
push
out
aas
and
pop
xchg
ljmp
cwtl
xchg
jo
mov
rcl
adc
pop
jo
xchg
inc
inc
out
xlat
shll
sub
jne
mov
pop
xchg
test
and
fcoms
mov
insl
jno
das
mov
int
ss
into
inc
dec
cmp
inc
jae
cmp
push
sbb
add
and
inc
adc
out
shrb
data16
outsb
stc
jp
fildll
enter
stc
les
jecxz
mov
int
xor
cld
mov
dec
push
sbb
test
imul
test
lret
inc
out
stc
divl
push
clc
pop
inc
scas
pusha
in
or
frstor
or
and
or
cmpsl
push
lahf
xor
rcrb
or
jbe
mov
inc
popa
pop
enter
mov
xor
mov
setge
in
jp
ja
fcoms
outsb
adc
mov
add
xchg
fisubrl
cmp
clc
mov
loope
iret
jg
out
test
sbb
insl
popf
dec
shrb
lahf
cmp
aaa
insb
clc
js
fistpl
test
sbbl
pop
mov
mov
xorb
call
sbb
stc
and
movsb
aam
popa
xor
sub
sbb
adc
iret
test
out
faddl
and
mov
mov
pop
or
dec
adc
push
xor
clc
dec
or
mov
and
mov
enter
fmuls
inc
add
imul
cltd
enter
test
and
outsb
push
aad
out
or
add
push
out
addl
addr16
push
repnz
pop
jp
ss
dec
clc
outsl
pop
push
scas
lods
cmpb
adc
insb
lret
pop
insb
cs
out
nop
pop
sahf
pop
testb
sarl
insb
popa
xor
jmp
xchg
je
outsl
ret
pop
outsl
out
cmp
daa
je
and
fwait
cmp
xchg
mov
lahf
std
sbbb
aad
jecxz
dec
gs
mov
push
mov
leave
push
push
push
pop
or
loop
push
jp
out
fcomip
mov
fmuls
sbb
rolb
and
adc
nop
lds
push
ret
sbb
adc
adc
sahf
icebp
jl
xchg
addr16
mov
insb
jg
ljmp
xor
adc
sbb
inc
adc
daa
xor
imulb
fsubl
dec
in
inc
divb
dec
push
ss
cmp
mov
cmc
add
call
mov
pop
and
inc
mov
enter
push
sub
int3
mov
mov
pop
ss
jecxz
sbb
fadds
add
pop
pop
adc
idivb
subl
icebp
mov
mov
mov
sbb
lahf
mov
pop
jl
mov
int3
pusha
jmp
iret
imul
jo
orl
fnstcw
movsb
add
ljmp
test
andb
sarb
outsb
add
mov
mov
pop
insb
mov
dec
in
mov
jge
adc
mov
pusha
dec
add
xchg
stc
sub
sub
insb
movl
mov
sbb
fidivrl
sub
cmpsb
pop
push
push
jnp
bound
aad
aad
movsl
vminps
mov
mov
aam
dec
mov
mov
test
pop
andl
and
add
mov
outsl
or
int
mov
xchg
sub
stc
rclb
not
iret
das
push
jecxz
outsl
imul
popa
jge
pop
in
mov
jp
add
roll
jns
sub
mov
adc
push
mov
pop
and
and
jge
loop
dec
out
jno
sbb
jge,pt
pop
or
int
sbb
lods
bound
jns
ret
popf
inc
jg
and
lds
push
fnstsw
mov
inc
push
adc
ret
xchg
out
xor
mov
fstps
mov
scas
push
lods
rolb
or
ficomps
sahf
xchg
stos
fmul
and
push
into
inc
sbb
add
pop
xlat
mov
lds
lods
or
lahf
cmp
dec
mov
cs
movsb
jno
pop
and
out
ret
out
cmp
mov
mov
jle
or
push
lods
int3
push
jnp
clc
adc
push
adc
test
iret
cli
clc
dec
imull
dec
sub
and
sbb
out
xor
movsb
sbb
xor
out
aam
jecxz
aas
stos
inc
fisttps
rorb
cli
mov
sbb
cmp
movsb
mov
mov
adc
add
push
pop
add
lea
dec
mov
sub
gs
dec
mov
sahf
inc
pop
or
aad
push
mov
or
and
pusha
xor
mov
jg
push
jae
sub
mov
adc
dec
fldl
cmp
or
outsl
sarb
mov
lock
aaa
fidivrs
imul
cmp
scas
dec
call
sub
mov
push
in
pop
cwtl
sub
ss
aaa
in
xor
jne
mov
mov
mov
cmp
xor
jg
pop
cmp
aam
and
hlt
rcrb
sarl
push
xor
das
test
inc
cwtl
mov
scas
dec
mov
gs
cmc
data16
std
je
xor
in
push
push
lock
adc
inc
lods
fcoml
inc
clc
mov
hlt
mov
mov
cmp
pop
cltd
sub
movsb
shrl
inc
and
jecxz
xor
cmp
sbb
cmpsb
popa
dec
pop
addr16
cmp
adc
xchg
cmp
call
jg
lret
rol
lock
cmp
movsb
sbb
mov
sub
push
or
sarl
cmp
fildll
lock
fiadds
pusha
lods
jae
xchg
stos
inc
jae
push
push
sub
push
push
andl
mov
stos
lods
mov
ficoms
insb
or
xlat
mov
sahf
jecxz
jne
int
xor
mov
in
add
cmp
mov
test
cmpsl
pop
mov
inc
xor
aas
sub
xor
dec
cmp
inc
sbb
imulb
sub
adc
daa
sti
das
pop
aaa
jge
popf
pop
sbbl
out
cltd
jecxz
inc
sub
enter
movsl
cld
je
rcr
incb
fldcw
cwtl
cmp
rep
mov
jne
leavew
mov
ljmp
mov
jmp
xlat
test
shll
mov
iret
sahf
ds
add
pop
dec
mov
test
inc
out
inc
push
mov
jno
xor
leave
mov
pop
call
ret
cmpb
cmp
jp
out
cld
mov
xor
arpl
cmp
cmpsl
lcall
subb
mov
and
cld
sbbl
mov
mov
cmpsl
stos
fwait
sub
outsl
std
mov
out
xchg
shll
ljmp
mov
jl
outsb
adc
dec
sbb
xor
hlt
jmp
addl
fmuls
inc
iret
mov
ljmp
je
xchg
loope
dec
cmc
pop
loop
xor
pop
jne
inc
mov
add
rclb
mov
jns
test
lock
aaa
push
cmp
movb
cwtl
js
sti
andb
mov
pop
cmp
sar
mov
add
pushf
out
and
sbb
add
jge
cli
shlb
and
call
mov
ret
mov
loope
xor
addb
mov
adc
mov
dec
stc
jnp
mov
dec
ss
scas
femms
pop
push
dec
stc
mov
mov
or
leave
adc
pop
adc
fs
scas
jb
sbb
mov
mov
test
xor
outsb
dec
cmp
imulb
inc
push
mov
cld
xor
add
das
jmp
jge
pusha
test
adc
mov
add
add
popf
sub
dec
fisubs
test
stc
call
xor
mov
jnp
push
movsl
int
mov
fcmovbe
test
adc
cli
shlb
xchg
fsubs
add
push
add
test
push
sahf
insb
cmp
lods
aaa
jmp
push
sbb
test
sbb
ljmp
sti
xchg
push
insl
and
scas
adc
push
loope
jne
push
cli
sbb
shlb
mov
xor
and
ss
arpl
sbb
nop
aad
add
fsubr
add
mov
cli
icebp
jle
mov
jge
das
in
cs
incl
and
xchg
mov
movsb
adc
pop
fiadds
jp
jne
out
js
jbe
popa
dec
inc
in
enter
roll
jbe
jnp
pop
sbb
aam
cmp
scas
repnz
ja
inc
push
xchg
and
xlat
es
aas
mov
pop
mov
or
mov
mov
lods
outsb
sub
xor
jb
pop
pop
lods
ja
lret
push
pop
test
aaa
lods
xor
cmp
mov
mov
add
shrb
xorl
mov
test
mov
mov
dec
iret
mov
leave
leave
dec
or
and
pop
xor
sub
xor
aad
pminub
mov
in
cmp
pop
inc
mov
insb
pop
roll
imul
cmp
les
int
cltd
daa
mov
stos
sbb
out
movsb
xlat
xchg
pop
data16
jmp
mov
scas
movsl
jg
rcrl
lods
lcall
push
pop
loop
addb
fs
mov
popf
fnstenv
inc
push
sub
or
adcl
mov
and
push
jle
into
inc
stos
sub
jno
fs
inc
shr
inc
mov
dec
lahf
shl
out
push
mov
xchg
out
hlt
je
and
mov
push
jle
adc
pusha
mov
enter
into
mov
mov
sarb
aas
dec
sarb
inc
mov
push
in
in
iret
enter
lds
bound
popf
enter
and
add
and
mov
stos
push
pushf
sub
jmp
xchg
jnp
cmpsl
mov
ss
mov
mov
arpl
call
pop
add
insb
sbb
sbb
add
mov
aas
lea
stc
popa
stos
adc
test
sbb
push
aaa
xchg
inc
sub
xor
test
sub
cmpsl
enter
repz
test
negl
pop
jae
divl
aaa
int3
jp
lcall
jne
int3
mov
inc
push
scas
mov
sbb
lods
add
movsb
into
test
test
fnsave
cmp
nop
out
xlat
bound
ja
shll
dec
stos
xor
xchg
or
or
inc
pop
gs
cli
xor
mov
out
fstp
aad
inc
cmc
add
mov
call
lahf
lret
mov
pop
inc
pop
scas
and
jg
mov
outsl
or
xor
arpl
xchg
fbld
pop
sbb
rcl
mov
inc
ljmp
lret
mov
sub
mov
pop
out
loop
xchg
bnd
xchg
xchg
or
push
inc
dec
inc
cld
rorb
mov
fisttpl
lret
dec
inc
sub
fidivs
jne
inc
loope
sub
fists
pop
movsb
fs
dec
ds
dec
xor
jl
inc
pop
je
cmp
jo
pop
inc
mov
cwtl
pop
add
mov
insl
shl
adc
fucomp
stos
divl
inc
adc
test
mov
push
scas
outsl
sub
pusha
sbb
fwait
nop
mov
push
mov
and
dec
ret
ljmp
out
gs
and
out
pop
adc
or
add
jo
movl
inc
mov
hlt
stos
call
nop
cmp
mov
mov
inc
jbe
mov
push
mov
inc
les
mov
nop
pushf
ret
in
jle
sub
imulb
push
lret
negl
notb
pop
mov
sbb
lods
mov
repz
fs
fbld
hlt
jae
mov
cltd
ljmp
inc
mov
and
push
stos
lahf
std
ret
cwtl
inc
and
cmp
shlb
dec
adc
ds
dec
pop
mov
dec
dec
mov
sbb
mov
xor
push
in
add
jle
lahf
mov
aad
pop
ljmp
jecxz,pn
dec
pushf
dec
mov
or
nop
add
rcrb
pop
sbb
xchg
sbb
sbb
sub
pusha
push
scas
test
push
loope
jge
call
stos
rorb
popa
or
pushf
cmpsl
repz
jecxz
js
add
cld
in
movb
or
pop
xlat
mov
lret
cli
out
xchg
ret
inc
jne
xchg
arpl
mov
lret
test
xchg
or
scas
xchg
dec
jg
fwait
jg
cmpb
mov
pop
adc
or
lock
jg
sarb
stos
shlb
adcl
pushf
pushf
xor
clc
fdiv
repnz
fldl
cmp
fwait
popa
aam
ss
push
pop
test
mov
xor
andb
dec
xor
stos
ds
adcl
add
movsl
dec
popa
push
insl
xorl
rcrl
fmul
into
xor
aas
mov
add
mov
and
inc
leave
sub
sub
jl
mov
xor
ja
sbb
push
ss
push
adc
adc
pop
retw
push
or
push
sub
pop
jg
addr16
inc
jo
inc
xor
lds
mov
loop
mov
stc
vandnps
pushf
icebp
adc
daa
jl
xchg
add
sbb
xchg
das
add
jns
shlb
xor
test
xor
pop
inc
dec
or
fstl
dec
or
xchg
xchg
mov
and
loope
into
or
cmp
push
ljmp
and
jnp
repnz
mov
jl
adc
std
and
roll
dec
shrb
rclb
inc
inc
add
cmpb
xchg
mov
cld
fwait
sub
ret
jge
add
scas
pop
dec
icebp
xor
cld
xor
xchg
push
stos
jbe
loop
adc
push
lock
mov
sub
pop
xchg
dec
xchg
dec
xor
or
mov
leave
dec
mov
fistpl
ror
ds
mov
into
add
add
outsl
rorl
shll
out
add
mov
es
or
sahf
mov
sub
ljmp
aad
lret
mov
aam
das
lcall
shrl
inc
or
adc
xchg
movsb
ret
mov
inc
jg
and
pop
xor
adc
sub
push
adc
pop
adc
jmp
fisttpll
mov
mov
lock
test
sub
fstps
pop
hlt
mov
push
cmp
movups
into
mov
lods
xchg
mov
mov
jns
fs
ds
sahf
jae
dec
push
and
movsl
jge
cltd
test
push
mov
scas
jns
mov
mov
jge
cli
mov
scas
out
jecxz
xor
pop
outsb
mov
jge
cmp
pushf
arpl
shlb
jl
les
lock
sti
cltd
orb
ljmp
cli
out
fs
scas
mov
aaa
push
decl
movsb
pusha
xor
insl
mov
shrb
dec
pop
dec
imul
and
add
or
add
incb
mov
imulb
loop
inc
repnz
or
mov
jbe
lcall
fildl
pop
cmp
jl
stos
ss
flds
mov
dec
lret
push
cmp
or
xor
sahf
aam
adc
negb
dec
or
out
pop
pop
mov
dec
sbb
repz
push
dec
mov
mov
sti
stos
mov
inc
dec
or
xchg
shll
je
xchg
mov
jb
jp
cmpsb
dec
add
sbb
jnp
fnsave
loopne
mov
add
flds
xchg
adc
pop
cmp
rcll
cli
pop
mov
or
mov
push
icebp
push
cli
jne
test
pushf
cs
loopne
mov
shll
jns
cmpsl
sbb
ret
jecxz
fidivrs
loope
cmp
and
into
out
clc
or
adc
dec
insb
jg
arpl
mov
cmp
xor
cmp
int
pop
sti
movsl
fldt
popf
data16
dec
pop
mov
dec
nop
ret
jl
pop
sets
test
mov
pop
push
pushf
std
out
pop
jl
dec
gs
and
xchg
fmuls
pop
mov
das
jp
and
and
xchg
aad
jnp
sbb
dec
dec
and
dec
test
test
sub
dec
jle
dec
sbb
fcoml
fucomp
add
shll
pop
lahf
adc
inc
cwtl
inc
pop
repz
cltd
sbb
mov
sub
mov
push
idivb
test
or
mov
std
aam
dec
idivb
loopne
shll
ss
sub
testb
sti
cltd
rclb
insl
outsb
or
push
pop
mov
stc
inc
xchg
bt
addr16
mov
sub
clc
fdiv
jle
push
jnp
hlt
adcl
call
xchg
stos
xchg
or
xor
in
mov
sub
sub
mov
in
ss
daa
jae
outsl
sbb
xchg
rcrb
in
jae
xor
xor
add
stos
das
imul
out
pop
and
addr16
cmp
mov
pop
cld
pop
imul
lahf
adc
insl
testb
pop
push
imul
mov
dec
es
push
loopne
cwtl
cmp
shrl
mov
pop
xor
cmp
jbe
mov
lds
clc
pop
sbb
jne
mov
add
aas
pop
mull
sub
lods
insb
pop
or
adc
xchg
pop
mov
out
stc
push
dec
test
pop
inc
dec
lock
daa
mov
sub
push
in
iret
xor
mov
sti
fwait
adc
adc
adcb
cmp
leave
decl
or
xchg
cmc
or
mov
or
sub
jb
pop
dec
push
jae
add
sub
pop
add
inc
push
shl
xchg
jbe
cmp
pop
push
push
inc
dec
pop
les
cld
rclb
push
std
mov
pop
aad
test
or
add
inc
add
nop
sub
xchg
mov
cmp
inc
sbb
add
scas
jae
in
xor
add
in
mov
pusha
or
xor
and
aad
lret
sbb
mov
imul
clc
aaa
push
fstpt
push
xor
sub
inc
or
in
rorl
popf
xchg
ret
or
mov
notl
and
addl
int
sub
push
addr16
cld
out
jge
or
adcl
xorb
shlb
les
jb
rcll
pushf
dec
or
mov
mov
jnp
iret
lahf
push
js
lahf
inc
sub
push
imul
push
mov
sub
test
adcb
mov
insl
test
leave
sbb
dec
adc
fsubrp
lds
fsts
ror
out
or
imul
pop
enter
dec
fs
stos
xchg
xchg
mov
repz
inc
in
fwait
cmp
cs
dec
movb
cmp
or
dec
push
inc
mov
arpl
pusha
in
add
dec
lret
xchg
ljmp
push
sub
fmull
adc
cmp
mov
xlat
scas
pop
shlb
sub
mov
inc
mov
lahf
inc
xchg
js
xchg
inc
push
sbb
mov
repnz
xor
hlt
ret
jl
and
inc
cmc
mov
mov
mov
xor
and
nop
stos
cmp
mov
out
or
in
insl
xor
mov
aad
clc
push
ds
daa
xchg
add
adcb
iret
or
rorb
mov
out
sbb
dec
cld
dec
les
mov
xchg
fs
hlt
mulb
and
add
pop
adc
popa
loopne
leave
xor
call
jb
hlt
std
and
or
out
inc
je
int
aad
and
cmp
loopne
and
pop
fnstcw
adc
pop
bswap
jl
sti
stc
xlat
push
lcall
shrb
push
imul
add
arpl
xor
lahf
stos
shrl
cmp
push
daa
sbb
imul
jle
enter
out
and
outsb
into
jo
inc
stos
pop
xor
adcl
pshufw
out
les
xchg
imul
and
or
push
sbb
repnz
stos
jae
adc
xchg
ja
pop
cmpsb
xorb
rorl
cld
addl
add
cmp
xchg
xor
int3
inc
pop
xchg
inc
out
sub
cmpsb
ss
cmpb
push
pop
xchg
lcall
cmp
and
inc
js
aam
gs
mov
mov
out
inc
cmp
loopne
cmc
cmp
mov
in
pushf
outsb
icebp
int3
inc
mov
jno
pusha
jp
icebp
push
dec
mov
icebp
imul
ret
mov
lcall
mov
pushf
xchg
movlps
mov
sbb
jg
movsb
fimuls
push
pusha
fdivs
fnstsw
rorb
adc
jmp
lock
sbb
call
andl
cmp
test
jp
lahf
jo
mov
inc
xor
out
jne
pslld
inc
mov
fstpl
mov
mov
sub
pop
jle
xchg
loope
dec
add
adc
dec
sub
jg
mov
lock
ljmp
sub
outsb
pushf
lods
mov
shlb
push
and
clc
push
stos
and
cmp
pop
dec
in
sbb
cmp
mov
lock
and
movsl
fcmovnb
push
shll
idivl
sbb
sbb
add
loopne
in
push
or
xchg
roll
dec
test
fstpl
xchg
lret
mov
mov
push
inc
xchg
aas
jnp
sbb
push
test
mov
enter
push
mov
add
cmp
mov
cmp
inc
xchg
rcrl
test
int
lods
sbb
popf
sbb
in
push
sahf
jg
repz
leave
lock
movsb
and
mov
jnp
imul
mull
push
gs
cmc
sub
fidivrs
and
jns
pop
inc
jno
shrl
mov
ss
pop
adc
jp
lret
adc
or
subb
xor
adc
movsb
sub
cs
int3
inc
test
inc
sbb
inc
add
es
pop
sub
lods
lods
fnsave
loope
iret
cmp
push
data16
xor
and
cli
mov
movsb
jns
xchg
out
mov
dec
push
inc
lret
dec
and
push
sahf
cld
or
cwtl
jnp
and
pop
fldcw
fwait
jmp
push
pop
sti
sahf
loopne
enter
pushf
aas
xchg
push
jge
mov
lds
sub
test
stos
call
popf
decb
adc
rolb
inc
in
cld
sbb
mov
push
pop
fcom
aas
xor
push
xchg
sti
xchg
jb
pop
test
daa
sbb
dec
xchg
iret
fcmovnb
in
in
xchg
push
dec
scas
add
in
stc
lods
jne
addr16
pop
jae
shl
adc
or
sub
sahf
jge
stos
lods
adc
fmuls
and
add
pop
push
push
aaa
add
push
push
fwait
sbb
push
adc
mov
pop
out
ret
rcl
mov
jo
enter
jne
xchg
or
jnp
cmp
cltd
xor
add
lahf
xchg
fisubrs
and
pop
xchg
push
rcll
jbe
jne
adc
sub
push
add
or
xchg
or
lds
loope
pop
and
adc
sub
movntq
mov
or
rcrl
or
nop
sbb
not
mov
pop
or
mov
call
orb
cmp
lods
aam
insl
nop
dec
fidivl
cmpsl
cmpsb
add
outsb
sti
ds
pop
dec
mov
sub
jl
jp
sbb
movsl
or
repnz
negl
push
inc
fwait
mov
jecxz
cmp
mov
pop
test
sub
rcl
mov
mov
arpl
adc
xchg
dec
sub
xchg
xchg
shr
dec
sbb
repz
arpl
xchg
lcall
rorl
mov
movsl
cld
leave
out
lahf
sbb
and
dec
pop
adc
sub
sbb
arpl
imul
or
lret
fistps
sti
out
push
cmpsb
adc
sbb
xchg
hlt
xchg
mov
mov
cmp
sti
fdiv
addb
pusha
mov
dec
ljmp
xchg
loopne
xor
or
cwtl
out
aaa
cmc
pop
xchg
stos
fcmovu
imul
popf
scas
pop
jae
iret
cmpb
dec
ljmp
test
inc
dec
mov
xchg
mov
inc
inc
in
sbb
inc
fcoml
mov
pop
xchg
jae
scas
sarl
jo
call
mov
jns
and
mov
jle
add
mov
add
pop
in
cs
xchg
lret
mov
sbb
imul
adcb
mov
xchg
mov
cmp
sbb
das
fstps
adc
outsl
in
pop
sub
xor
adc
sbb
aaa
xor
push
repz
inc
shll
mov
adc
sti
inc
inc
jmp
sub
adc
mov
clc
es
push
mov
or
or
mov
cmp
push
lret
cs
cmpsb
insl
or
mov
inc
adc
ficoms
aad
jge
sub
mov
cli
xchg
dec
pop
mov
fwait
add
push
paddsw
pop
scas
cmc
adc
dec
push
add
pop
test
xchg
and
jne
sub
push
cmc
pushfw
pop
rclb
aaa
lea
jne
cmpsb
inc
mov
mov
pop
mov
jns
xor
adc
clc
xor
popf
mov
mov
pusha
cmp
mov
push
aam
int3
shlb
adc
stos
call
loope
sbb
fnstsw
stc
xor
xchg
mov
pop
push
lahf
popa
dec
jle
sbb
inc
dec
sub
push
inc
jns
adc
jnp
mov
mov
negl
sbb
or
repnz
inc
pusha
sub
jnp
jp
fsub
ficoml
mov
mov
dec
push
in
sbb
mov
mov
pop
dec
inc
sbb
or
stos
xchg
out
mov
mov
insl
mov
jbe
enter
movsl
sub
popa
mov
or
mov
jmp
sub
cmpsl
stos
icebp
xchg
jne
sbb
enter
fimuls
dec
add
insb
pop
clc
pop
std
inc
roll
mov
pop
repz
mov
sti
inc
roll
mov
lods
jp
sub
insb
jecxz
cmp
nop
push
das
xor
sbb
mov
mov
sub
js
out
enter
sub
lods
faddl
cmp
cmp
add
movsb
push
ja
mov
in
xchg
mov
stos
pop
or
xchg
jb
lock
nop
sbb
mov
jge
stc
push
and
or
cmpsb
fcompl
lds
fwait
inc
insl
data16
xor
sub
lods
sub
test
jg
sarb
pop
mov
pop
mov
pop
mov
sti
ss
mov
cli
mov
sbb
mov
adc
adc
xlat
and
lock
sub
add
mov
cltd
xor
aaa
cltd
mov
xchg
cmp
adc
adc
popa
test
jg
sbb
sti
arpl
fisubrs
xchg
adc
smsw
push
into
inc
inc
fs
fmuls
adc
bound
xchg
sub
aas
enter
jecxz
cmp
mov
std
mov
cmc
fwait
mov
pusha
lret
mov
hlt
or
sbbb
sti
ljmp
mov
sub
aam
adc
shrb
sub
dec
js
sub
inc
mov
jl
push
adc
out
jl
insb
scas
mov
scas
test
cmp
push
btc
sbb
xor
sub
or
push
ljmp
xchg
iret
sub
sub
dec
rorb
int
jmp
lret
outsb
add
scas
movsl
pop
lods
jnp
js
sub
in
data16
pop
pop
jo
fwait
dec
xor
sbb
lea
fildll
mov
xor
popa
or
popf
mov
rclb
or
lret
dec
push
and
in
dec
pop
adc
rorl
negb
sahf
test
jge
pop
bound
fists
test
sbb
rcrl
xor
add
sub
iret
subl
mov
jmp
popf
add
addr16
adc
cmp
and
sti
subb
add
sahf
push
sbb
push
loope
and
or
imul
dec
insb
icebp
pop
jo
mov
dec
cmp
cli
insb
push
inc
xchg
cmp
dec
mov
test
lcall
pop
gs
xor
mov
xorl
dec
adc
inc
movsl
arpl
inc
sub
mov
jno
mov
aas
xor
jns
jge
sbb
movsb
or
int
mov
shl
inc
pop
cltd
enter
or
mov
and
mov
cs
pop
pusha
arpl
or
and
cmc
imul
int3
sub
data16
push
cmc
adc
add
sub
cwtl
aam
cmp
hlt
push
fnstenv
scas
push
jge
inc
xchg
mov
pop
jp
je
push
add
sbb
lds
aas
sub
sbb
loopne
adcl
outsl
push
cltd
sub
mov
popf
in
imul
movsb
push
and
call
pop
scas
xchg
inc
fistl
pusha
call
repz
das
dec
bound
mov
ret
sub
xchg
mov
mov
shlb
cmp
stos
bound
mov
or
inc
push
mov
repnz
and
mov
shrb
mov
sub
adc
iret
cld
inc
sub
lahf
inc
xchg
test
cmp
loope
pop
test
fwait
sbb
popa
inc
mov
xchg
rcrb
fstps
mov
stc
sahf
add
aaa
mov
or
test
test
dec
sbb
xchg
fidivs
jo
mov
jle
bound
lock
pushf
push
cmp
mov
and
sbb
imul
dec
mov
fisubs
test
ficoml
imul
inc
fnstsw
sbb
les
pop
xlat
inc
sub
lahf
mov
fucomi
and
mov
push
mov
dec
jl
es
ss
mov
xchg
inc
pop
insb
mov
es
and
lods
cmc
aad
call
mov
add
or
jecxz
xor
lods
clc
jl
cs
mov
ret
lods
inc
pop
leave
adc
jg
fsubrs
lcall
adc
push
addr16
xchg
jmp
int
xchg
mov
add
cwtl
lea
sbb
add
stos
loop
dec
pushf
jmp
push
cmp
jmp
add
mov
das
cmc
inc
das
pop
mov
jmp
stc
push
xor
movsl
dec
adc
push
fs
insl
sbb
sarb
mov
repnz
pop
pop
ljmp
cltd
imul
ja
inc
jns
jne
sahf
sub
jnp
sbb
dec
push
out
ss
add
insb
ret
adc
scas
and
mov
jns,pt
fcoms
adc
jl
out
into
stc
adc
sub
push
xor
cmp
dec
add
sub
sbb
push
cmp
insb
sub
xchg
cld
fcomps
and
mov
mov
mov
mov
mov
pushf
dec
push
or
xor
aas
adc
pushf
cld
mov
push
push
push
pop
jne
mov
lods
cltd
shlb
aam
mov
jo
ds
aas
mov
fisubs
fstl
rorb
ss
dec
jmp
dec
mov
jbe
inc
cwtl
shlb
sbb
nop
insl
push
in
dec
sbb
js
push
adcb
notl
lahf
sub
psllq
int3
pop
jle
out
frstor
test
test
test
es
andb
mov
stos
mov
cs
dec
in
pop
mov
xor
inc
cmp
mov
ja
pop
pop
rorl
inc
mov
int3
les
add
sbb
test
rorl
push
ret
dec
jg
mov
adc
in
iret
push
mov
cli
mov
mov
inc
push
fisubs
fwait
push
jb
flds
inc
adc
movhps
rorl
jmp
es
xchg
popf
mov
xor
xchg
cs
sbb
movsl
sub
andb
mov
push
xchg
test
fldt
mov
jl
add
nop
add
negl
pushf
dec
shl
inc
xlat
mov
adc
jl
lds
push
jmp
jo
mov
dec
and
cmp
adc
int3
sub
insb
jmp
loope
push
outsl
jp
mov
test
test
cltd
mov
xchg
sbb
aaa
xor
jecxz
aaa
mov
lds
dec
sbb
aaa
pop
scas
push
dec
orl
das
cltd
mov
pop
pop
mov
xor
and
divb
jno
sbb
cmp
in
xor
arpl
or
mov
aad
adc
lock
cmp
dec
decl
es
xor
pop
in
push
mov
sbb
mov
pop
pop
adc
cmp
cs
loope
iret
jns,pt
pop
das
push
scas
cmp
xor
mov
cmp
push
mov
lret
aam
xchg
into
cmp
pop
and
xchg
data16
jbe
xor
mov
pop
push
leave
mov
and
sbb
int
jge
mov
fdivrs
xorl
popa
popa
and
adcl
outsb
jge
sar
xchg
cltd
sti
pop
push
into
call
repz
adc
sbb
cs
xor
dec
ffree
js
loopne
dec
xlat
ret
ret
ret
insb
push
addr16
mov
ret
mov
dec
stc
inc
hlt
adc
mov
push
jle
es
jmp
inc
inc
and
sarb
pop
pusha
xor
adc
stos
shrb
sub
mov
jecxz
out
fdivs
mov
xchg
pop
and
cmp
xor
or
scas
mov
in
cmp
and
ret
add
dec
loop
xchg
jno
mov
ja
repnz
sti
pop
and
stos
stc
rcr
inc
lahf
jle
inc
dec
and
lea
les
push
mov
adc
dec
ljmp
pop
in
pop
pop
inc
push
scas
mov
mov
dec
mov
sbb
enter
imul
bnd
pop
xor
pop
insl
int
push
or
dec
xor
in
mov
mov
rcll
or
dec
add
in
imul
iret
dec
sahf
dec
push
inc
or
xchg
leave
lahf
mov
call
mov
mov
or
sub
xor
adc
arpl
jle
in
pop
pop
and
fxch
enter
stos
out
push
and
shll
jne
jle
push
test
mov
out
xchg
lods
in
jg
cmc
mov
push
or
sbb
out
cld
adc
das
pusha
les
loop
mov
cmp
lods
cmp
cmp
adc
sub
sbb
cmp
xor
dec
dec
lahf
test
test
mov
stos
scas
jmp
cmp
popf
fidivrl
adc
inc
movsl
test
jns
jno
pop
movsb
sbb
popa
cmpsl
cmpsb
xor
lea
mov
lea
sub
pop
repz
fldenv
jne
lods
jmp
hlt
push
jb
add
lods
xchg
pop
pop
adc
or
mov
cmp
dec
les
jg
mov
add
push
mov
mov
inc
loopne
jecxz
dec
lret
adc
sub
subb
push
in
xchg
ja
ficoml
xchg
adc
mov
aas
sub
xor
pusha
test
adc
push
repz
jecxz
mov
fistl
xor
aad
sbb
push
xchg
push
stc
shll
xor
xor
mov
out
ret
mov
inc
fidivs
scas
popa
adc
cli
jnp
outsl
mov
push
mov
jno
fiadds
xchg
xchg
add
cmp
setbe
mov
rorb
or
fimuls
pop
and
xchg
shlb
or
fs
stos
inc
rclb
lahf
add
fildll
notb
sub
imul
flds
pop
adc
adc
pop
int3
popa
repz
sarb
test
push
in
sahf
ds
add
cmpsl
pop
popf
mov
push
in
fsts
dec
pop
push
rorl
cs
xor
jae
mov
push
loop
mov
fisttpll
or
dec
mov
add
sti
popa
mov
fwait
adc
cmp
fistl
sub
int3
out
sbb
movsb
dec
repnz
test
mov
mov
cs
xorb
aam
sti
cmp
jo
lds
sarb
test
out
icebp
mov
fdivrs
mov
cmc
add
push
push
icebp
mov
int3
mov
jae
jle
mov
push
sub
incb
test
aad
fbstp
mov
insl
hlt
call
stos
fsubl
mov
outsb
daa
std
add
mov
call
xor
loop
push
test
outsl
int
lea
bound
aas
addr16
dec
popa
lcall
inc
xor
in
mov
leave
addr16
inc
cmp
fstpl
add
fwait
xchg
movsl
jle
pop
rclb
add
ret
dec
xchg
dec
cmc
push
inc
pusha
jb
or
aaa
leave
ja
movsl
pop
ljmp
outsl
out
xor
sub
fwait
pop
enter
pop
mov
cli
shl
inc
cmp
shl
jge
mov
cmp
sahf
jb
and
xor
add
testl
mov
pop
popf
add
lods
in
xor
out
std
xchg
mov
mov
aad
test
cmc
mov
adc
push
and
jb
mov
inc
sbb
or
or
jae
inc
mov
inc
imul
xchg
mov
cld
mov
add
insl
jmp
pop
lret
push
stos
add
test
jecxz
mov
push
push
dec
adc
loope
lds
or
jno
jo
insb
lods
mov
adc
jbe
pop
imulb
jbe
insb
xchg
jbe
movsb
outsb
cmp
jle
adc
xchg
mov
jecxz
lret
sbb
addr16
push
push
loope
shlb
test
enter
sahf
fisttpll
or
or
clc
les
mov
movl
cs
push
loopne
jecxz
stos
cmp
loop
ja
ja
decb
and
or
jp
dec
inc
adc
mov
mov
nop
out
mov
or
lea
fldenv
insb
pop
int3
fsubl
icebp
mov
add
adcb
test
inc
sub
loop
cld
dec
xchg
adc
dec
mov
out
pop
xor
das
jecxz
pop
xorb
mov
add
mov
xchg
loope
test
popa
insl
punpckhdq
out
mov
push
cli
test
sub
or
push
aam
jno
loopne
sub
out
daa
mov
sbb
jmp
inc
mov
jmp
lahf
repnz
lods
push
addl
popl
test
xchg
test
ljmp
rdpmc
and
fnsetpm(287
xor
mov
push
xor
sbb
adc
dec
mov
mov
add
dec
and
fisubl
ret
cmp
aas
xor
cmpsl
sbb
in
in
sub
push
icebp
movsb
int3
lock
out
test
pop
sub
pop
pop
inc
and
mov
mov
in
sbb
arpl
mov
enter
mov
mov
inc
cmp
daa
pushf
xlat
or
popa
or
pop
jae
dec
inc
fsubrs
jmp
dec
xchg
jp
lcall
dec
mov
inc
jb
dec
aad
or
and
gs
mov
stc
jae
mov
inc
jl
and
in
not
jnp
mov
push
call
icebp
fs
xchg
xchg
push
in
int3
sti
pop
jbe
lret
sub
in
cmp
in
repnz
inc
loopne
movsl
xchg
pop
mov
dec
jno
mov
cmp
iret
or
pop
adc
jl
ja
or
sbbl
loopne
out
pop
xor
sbb
mov
inc
push
mov
pop
fdivl
push
sbb
test
xchg
mov
sub
cmp
mov
push
cmp
add
sub
lods
cli
scas
lds
and
mov
je
outsb
call
pop
lret
test
fmuls
stos
loopne
sub
outsb
bound
mov
das
push
xor
adc
inc
das
test
mov
push
arpl
stos
aas
mov
mov
jge
add
and
lahf
inc
fwait
add
in
out
push
lea
cmp
repz
jo
jnp
daa
xor
pushf
flds
push
repnz
nop
sbb
cwtl
inc
sbb
or
sub
ljmp
or
nop
stos
jnp
aam
push
dec
test
inc
les
mov
rcrl
fcom
xchg
mov
pusha
repz
jl
cltd
and
add
scas
mov
xchg
fldcw
or
test
jno
movsb
fsubrl
mov
and
out
or
pop
and
es
mov
pop
lcall
push
incl
ret
cmc
cmp
or
cltd
jge
cs
sbb
push
fsubl
mov
jge
popf
shr
aad
cltd
in
jns
repz
jae
adc
mov
scas
mov
les
pop
jns
fwait
mov
pop
lea
mov
test
or
lea
push
bound
adc
push
add
xchg
jg
fs
xchg
sub
loopne
mov
cmpsb
aas
bound
mov
sbb
inc
std
in
adc
and
rolb
into
outsl
jg
outsl
jg
mov
mov
int3
mov
or
add
push
seto
shlb
mov
add
lret
in
mov
push
jne
dec
cld
mull
mov
loop
rcl
xlat
inc
pop
test
pop
aaa
stc
jmp
adc
mov
dec
stc
test
xor
arpl
push
int3
shlb
loope
ret
in
xor
adc
ja
jmp
pop
add
not
adc
xchg
cmp
or
sub
xor
push
xor
popa
roll
mov
cmpl
and
jg
ret
scas
push
imul
inc
fidivl
inc
rolb
mov
jl
cmp
outsl
sbb
stc
sbb
jle
xor
mov
inc
add
jo
mov
jg
cs
add
mov
add
mov
push
stos
mov
pop
cmp
popa
notl
dec
lods
or
repz
fstpl
sub
xchg
orb
repz
cmp
cmp
inc
sbb
repz
sub
aam
sbb
popf
jle
outsb
int
lret
and
add
stos
push
inc
dec
jge
xchg
test
pop
fcoms
xor
cs
std
cmp
add
stos
xor
push
push
mov
push
dec
push
test
andl
sbb
dec
and
imull
shr
cmp
xchg
xorl
stc
inc
pop
jns
add
push
jns
mov
test
adc
pop
pop
mov
jle
loope
xchg
add
lods
hlt
in
push
aam
ret
push
aam
imul
std
inc
jae
jns
ja
sub
mov
es
cwtl
inc
pop
ret
lds
cmp
scas
lret
mov
pop
cmpsb
call
loope
mov
insl
fisttpl
int3
mov
xor
jge
icebp
xor
aad
mov
xor
test
or
test
cmp
xchg
add
or
mov
shlb
sbb
sub
lods
gs
loope
xchg
mov
jns
je
push
pop
sbb
jne
ja
jge
enter
ja
and
divb
in
daa
ds
adc
and
stos
adc
and
cmp
xor
inc
xchg
aas
inc
xchg
xlat
xchg
sbb
shl
pop
insb
mov
je
cltd
or
xlat
es
inc
in
hlt
push
outsb
repnz
stos
mov
loopne
lods
in
out
fsubrl
sub
add
popa
mov
dec
mov
in
jmp
add
fistpll
sahf
jmp
repz
pop
out
jecxz
vmwrite
mov
cs
enter
data16
and
pop
cmpsb
fisubrs
aad
dec
aad
jns
es
mov
cmp
pop
call
sbb
das
mov
mulb
cs
jno
mov
cmp
cwtl
std
push
sub
xchg
pusha
xor
out
fldt
aaa
or
lods
mov
inc
movsl
cli
add
in
loope
je
fdivr
sahf
adc
lea
les
xor
lret
stos
mov
adc
ret
fmuls
insl
stos
ljmp
jmp
subb
int
das
insl
add
out
mov
dec
cwtl
jecxz
inc
jne
lock
ficoml
cmpsl
pop
cli
xchg
inc
mov
and
mov
jmp
mov
arpl
into
cmc
jno
xchg
push
insl
jnp
pop
cmc
pop
inc
jno
jp
mov
lcall
pusha
pop
mov
cmp
or
mov
sbb
push
dec
leave
faddl
sub
rcrl
and
cmp
aam
idiv
mov
cmp
insb
mov
xchg
lcall
inc
lods
push
sbb
ret
fisttpl
and
lock
jb
and
outsb
or
fldenv
sub
les
cmp
bound
aad
into
cmpsb
pusha
and
lods
sbb
lcall
out
fwait
sahf
cmpsb
sahf
pop
stos
jbe
mov
gs
jg
in
fstl
or
mov
idiv
xchg
push
xchg
into
pop
cmp
aaa
pushf
pusha
fadds
mov
and
and
sbbl
lret
loop
jbe
cltd
clc
dec
daa
fbstp
push
stc
repz
jle
inc
leave
cmp
sbb
cli
data16
adc
dec
xor
adc
sub
int
cmp
inc
jg
and
stos
notl
test
xor
or
xchg
cmp
mov
or
cmpsb
pop
pop
dec
lods
movsl
jae
add
fistps
aaa
xchg
add
ret
and
cmpb
ss
pusha
push
mov
inc
inc
xchg
mov
sub
in
push
inc
adc
pop
jl
inc
sahf
push
inc
xchg
ret
push
scas
inc
jmp
mov
mov
ret
sub
or
aas
push
adc
loope
dec
pop
jmp
add
movsb
icebp
ljmp
call
sub
push
mov
enter
cmp
icebp
test
sub
outsl
or
adc
out
inc
adc
ss
push
daa
or
mov
cwtl
cmp
das
push
loope
push
mov
sub
dec
fwait
mov
aaa
cmp
int
adc
and
into
arpl
cltd
adc
mov
sub
idiv
test
ret
push
and
xor
cli
js
out
fs
fwait
pop
adc
std
cmp
jno
das
jae
push
decb
movl
pusha
inc
and
lods
mov
lret
hlt
mov
lds
inc
out
sub
push
pop
in
mov
lods
cmpsb
or
rcrl
jg
std
jmp
inc
xor
into
dec
mov
adcl
cmc
sub
push
pop
jne
mov
in
lds
mov
jmp
rcrl
xchg
push
popf
mov
add
das
loopne
dec
es
inc
xchg
xchg
sar
popa
push
fidivs
cmpsl
jg
dec
orl
outsl
incb
shr
xchg
pop
inc
in
mov
jecxz
inc
xchg
or
jo
pop
dec
mov
fnstenv
jg
popa
mov
dec
add
insl
shll
ds
pop
and
mov
cmp
cmpsb
inc
fcmove
mov
aad
call
cmc
jl
or
pusha
inc
fsubrl
test
arpl
jbe
icebp
roll
mov
and
mov
dec
push
nop
es
lahf
aad
lea
test
insb
pushf
xchg
pop
add
out
sbb
cwtl
dec
loope
data16
push
mov
dec
mov
repnz
mov
shll
sti
in
aas
jge
popf
mov
fidivl
jne
int3
jmp
fisttpl
roll
jmp
pop
xor
inc
or
push
les
je
add
dec
pop
add
shrl
dec
mov
mov
cs
xchg
roll
cmp
pop
mov
push
jbe
leave
arpl
std
scas
xchg
pop
mov
add
dec
pop
dec
mov
mov
je
pop
dec
xlat
add
shlb
iret
icebp
and
mov
sub
jle
bound
shlb
pop
ficoml
pop
and
icebp
outsl
movsb
test
iret
data16
jno
and
mov
or
mov
push
or
ss
lret
mov
sub
mov
int3
sbb
lods
inc
into
jecxz
mov
xor
mov
or
aad
mov
idivb
dec
jns
inc
popa
test
cmpsb
fwait
pop
xor
adc
aas
cmp
cmp
int3
setp
mov
jne
popa
jp
push
insb
lds
inc
sub
or
stos
repnz
mov
adc
dec
nop
sbb
cltd
and
mov
inc
arpl
int
jecxz
adc
jbe
notl
test
dec
xor
cwtl
movsl
outsb
iret
in
jecxz
add
adc
xor
jge
mov
ret
jne
popf
push
xchg
lret
data16
mov
pop
sbb
adc
scas
lahf
rcll
and
adc
fstpt
and
ss
shrb
bound
shrb
out
pop
lock
arpl
xor
xchg
jnp
sub
xchg
xor
jnp
lock
cmpb
jmp
in
inc
test
imul
adc
mov
inc
xchg
cmp
and
cld
into
cmc
sarl
lret
dec
jecxz
mov
adc
call
inc
mov
pop
pop
and
in
das
testl
cs
cli
inc
iret
ljmp
mov
cmp
or
in
pop
mov
mov
mov
fwait
iret
xor
cmpsl
lret
call
das
lock
jnp
aaa
xchg
pop
inc
or
mov
rcrb
cs
call
call
ljmp
dec
negb
add
stc
pushf
sbb
test
in
xor
jl
in
sub
jo
jmp
dec
push
pop
mov
jp
jp
popf
shlb
fwait
arpl
aam
add
mov
sbb
jp
adc
test
enter
inc
aam
cmc
or
stos
xor
and
xchg
rol
and
idivl
sbb
imul
lock
fmull
lds
lret
mov
fsubrs
lcall
mov
xor
mov
pusha
or
hlt
test
in
outsl
lcall
clc
sbbb
jle
add
xchg
dec
popa
mov
fs
dec
jno
repz
int
clc
pop
nop
mov
into
pop
cmpsb
jnp
mov
stos
outsb
mov
mov
xor
add
negl
push
mov
sub
test
mov
push
cmp
dec
adc
fcomip
stc
xchg
into
inc
lock
int
push
xchg
repnz
xchg
dec
test
cmp
inc
out
cmp
jmp
ret
in
inc
mov
and
xchg
adc
sub
inc
xor
inc
xor
sbb
jge
adc
jge
sbb
mov
pop
lods
dec
js
pop
fidivs
test
fs
sbb
jo
lret
mov
jb
or
lods
adc
cmp
xchg
dec
sub
in
adc
test
jnp
rcpps
push
adc
jge
stc
testl
mov
and
ljmp
cmp
xchg
sahf
in
cs
nop
faddl
jns
mov
mov
xlat
push
push
lds
aaa
jbe
fldenv
cld
mov
ret
mov
or
or
lea
outsl
jmp
or
xor
or
iret
pop
mov
pop
mov
outsl
cs
test
std
loopw
movsb
cli
in
jo
cwtl
fstpt
jle
cmp
adc
ss
mov
cwtl
cs
stc
stos
xor
movsb
clc
push
out
aas
xor
mov
mov
insl
sub
std
jge
lret
ja
subb
out
outsl
outsb
add
adc
clc
pop
mov
push
sbb
cli
add
call
pop
out
arpl
mov
cli
data16
jp
sbb
pop
mov
sahf
addb
mov
je
lock
push
scas
jne
mov
push
push
mov
mov
aad
sbb
lahf
pop
lahf
jo
add
jmp
loop
jp
jg
enter
jae
xor
jne
popf
movsl
mov
sub
mov
scas
mov
jb
mov
aaa
ja
in
fdivrl
idivl
mov
lea
std
cmp
or
push
sub
ja
test
in
pop
jmp
adc
insl
cmp
add
mov
fsubs
or
inc
inc
mov
adc
stos
rcll
mov
aam
mov
lock
cli
mov
dec
lea
cmp
jg
je
stos
mov
aas
sbb
fisttps
int3
jae
jecxz
xchg
cmp
enter
inc
and
push
sub
cmp
pusha
dec
aad
cmpsl
jp
out
pop
rorb
pxor
mov
mov
adcl
sbb
pop
movlps
jo
or
ror
cwtl
das
adc
out
jne
push
test
and
inc
mov
aam
fisubl
cmc
rcrb
and
pop
mov
in
sarl
push
push
scas
lods
enter
jb
sbb
inc
int
sub
movsb
mov
aas
mov
loop
aam
fs
push
jo
aad
lret
sub
push
mov
add
jae
pop
sub
jle
mov
or
insl
pop
ds
int
in
inc
shlb
icebp
pop
jecxz
adc
cmp
xor
mov
and
ja,pn
dec
outsb
jge
and
lahf
and
out
loop
or
lods
xor
push
xor
mov
jne
adc
addb
dec
imul
xchg
pop
ljmp
dec
add
push
pop
xchg
mov
and
test
movsb
mov
ss
js
je
dec
pop
xchg
jle
inc
lahf
lods
pop
repz
mov
mov
mov
xor
aad
fwait
repz
fwait
jecxz
dec
jle
outsb
jno
cmp
jl
addr16
je
add
addl
or
adc
xor
mov
or
ds
push
xchg
fsubrp
int
push
mov
rcrb
fdivrs
add
add
cld
adc
jae
push
mov
shlb
sti
call
fs
sti
dec
out
and
ss
mov
cli
pop
pop
insl
jns
test
das
push
and
pop
jmp
or
cmp
or
cmc
lock
fcmovnu
or
xchg
lahf
mov
test
lahf
call
stos
mov
jae
lcall
mov
popf
aam
cltd
into
pusha
leave
xchg
add
push
test
sub
testl
inc
movsb
movsl
inc
mov
das
mov
mov
test
xor
sbb
mov
clc
fs
mov
inc
cltd
jnp
pop
adc
icebp
aas
andb
mov
push
mov
scas
in
push
repz
fdivr
leave
xchg
push
mov
outsb
test
int
mov
outsb
jecxz
inc
loopne
add
inc
sbb
adc
jno
leave
js
ja
xchg
subl
inc
push
daa
sbb
daa
lods
fs
mov
bound
mov
sub
mov
ss
in
xchg
xor
aas
test
adc
stc
stos
and
push
lcall
mov
jge
xor
icebp
jmp
aas
adc
jnp
jecxz
lods
jp
adc
int3
mov
int
jg
push
jns
gs
fimull
or
pop
cmp
add
jl
push
sahf
cmc
inc
cltd
repz
mov
addr16
push
testb
add
idivl
sbb
add
sbbb
rcll
fcmovnu
cmpsl
sub
mov
adcl
xchg
nop
xchg
mov
testb
out
test
insl
pop
pop
xor
clc
mov
fdiv
dec
jb
lods
repz
or
xor
or
and
or
inc
mov
dec
jno
nop
aad
inc
fsubrs
dec
cmovle
sbb
jne
lea
mov
mov
aaa
and
jle
mov
xchg
test
add
xchg
dec
mov
and
mov
cmp
movsb
lea
cmp
int
les
inc
scas
repnz
loop
add
lock
mov
jg
rcrb
xchg
fstl
idivb
notl
and
fdivs
wrmsr
arpl
sub
lods
daa
pop
xchg
repnz
aam
mov
aam
add
sub
jl
aam
dec
pop
daa
pushf
insl
es
fs
xor
or
inc
dec
inc
bnd
insl
icebp
push
ja
add
es
cli
into
push
mov
mov
jne
push
sbb
cmpsb
cmpsb
sbb
sbb
mov
xchg
push
inc
fcompl
sub
xchg
inc
mov
js
push
mov
pop
xor
clc
dec
cwtl
test
pop
adc
xchg
jno
or
add
push
cmp
pop
stos
pop
ss
lahf
aas
lock
lods
aam
adc
cli
popf
aaa
xlat
jno
daa
rol
out
lret
push
xchg
add
ficoml
xor
or
nop
aaa
add
xchg
movsb
sub
sbb
adc
lahf
out
aam
nop
inc
hlt
sbb
arpl
and
sar
ljmp
adc
fiadds
lahf
sti
imul
mov
pop
ss
aad
stos
pop
pop
jnp
cmc
daa
inc
mov
sbb
loope
fadd
aaa
mov
push
in
add
sub
inc
dec
ljmp
roll
pop
addb
add
mov
push
pop
mov
push
inc
mul
femms
les
and
and
stos
out
arpl
ss
cli
sub
sub
mov
adc
jns
push
add
mov
dec
repnz
lcall
mov
push
xchg
pop
cwtl
test
jmp
scas
out
add
sbb
and
adc
repz
mov
jne
mov
addr16
out
sbb
dec
ds
roll
ljmp
xorb
add
in
pop
icebp
shl
push
cmp
stc
jge
orb
mov
or
outsb
pushl
das
jb
lahf
scas
xchg
add
add
dec
push
lods
pop
pop
pop
push
pushl
ffree
jmp
cmp
dec
cmc
push
xchg
push
cmp
push
xchg
dec
rorl
xlat
out
movsl
mov
rcl
inc
repz
rorl
mov
inc
pop
add
scas
mov
pop
pop
cmpsl
enter
mov
jnp
cmp
addr16
stos
inc
aas
dec
dec
imul
je
jmp
mov
xor
sub
repz
cmp
xchg
or
and
cmpsb
in
das
jmp
mov
subb
or
cwtl
push
jb
jp
push
cmp
repnz
sar
mov
pop
icebp
insl
push
pop
out
rorl
gs
fs
dec
cmp
into
cmp
mov
popa
mov
sbb
das
xchg
aad
sahf
xchg
cmovle
cltd
push
push
push
adc
ljmp
sub
adc
xchg
and
push
adc
das
leave
pop
loopne
pop
adc
aaa
aaa
fiaddl
adc
cmp
bound
sbb
adc
mov
pop
cmc
lods
mov
mov
std
cmp
cmpl
mov
dec
adc
leave
cmpb
or
pop
sub
dec
sahf
mov
pop
push
and
or
adc
in
in
sub
mov
imul
lds
dec
pushf
loope
lods
pop
es
ret
imul
xor
and
cmpsl
jmp
push
xor
and
loopne
lret
jecxz
les
repnz
add
insb
dec
mov
inc
ds
or
add
dec
xor
lahf
test
or
mov
push
loop
stos
fbld
lret
mov
jg
nop
loopne
loope
mov
and
in
mov
jbe
fidivrl
repz
or
or
ret
gs
subl
lcall
push
popf
scas
push
mov
cs
in
je
jae
fildl
not
jno
xchg
imul
xlat
call
loope
dec
and
dec
fisttpl
xor
xor
sub
jp
jbe
fcomip
sbb
adc
ret
mov
stc
sub
cld
cs
leave
fcompl
xor
ficoml
aad
mov
adc
loop
xchg
out
or
pushl
mov
cmp
pop
lods
inc
push
imul
insl
inc
test
push
or
iret
mov
xchg
ficoml
dec
sub
or
xchg
jecxz
sub
repz
sarl
lcall
lds
mov
mov
adc
mov
stos
lret
aam
or
aaa
fmull
lea
adc
addr16
pop
lret
nop
orb
jno
mov
sub
test
mov
push
xchg
add
iret
fstl
out
inc
inc
ds
pop
stc
stos
ljmp
call
ret
xchg
xadd
mov
push
in
sub
jbe
mull
je
push
and
inc
and
and
push
les
dec
dec
ret
scas
mov
push
jmp
jp
push
xchg
lret
mov
cmp
jecxz
or
sub
xchg
cltd
mov
inc
out
cmp
test
inc
cltd
or
mov
push
movsl
cmp
pop
repnz
add
loop
mov
loopne
xchg
push
rcrl
test
push
push
xchg
popf
sbb
mov
xchg
or
push
inc
sub
pop
js
jmp
sub
incb
repnz
pop
xorl
pusha
pop
add
test
dec
test
jo
jbe
aam
inc
mov
or
cli
push
xlat
sub
stos
daa
push
ret
clc
push
bound
out
lcall
aam
scas
cmp
and
pop
push
push
aad
jnp
pop
pop
cmpsl
or
aam
data16
loopne
aam
xor
cli
scas
inc
dec
out
int
jmp
repnz
inc
in
aaa
out
mov
cld
sub
fs
mov
jp
push
jb
mov
dec
test
mov
inc
ret
lods
add
mov
cmpl
imul
dec
push
and
cwtl
push
rcll
xor
inc
inc
popa
dec
inc
je
cwtl
outsb
mov
lea
pop
insl
andl
and
add
and
imul
push
lock
es
iretw
shl
das
mov
icebp
and
andl
lret
pop
sub
add
das
mov
jne
clc
inc
push
lods
ret
dec
adc
pop
int
xchg
das
xchg
popf
loop
lods
pop
cmc
cld
lret
fnstenv
add
out
or
in
decl
xor
adc
cmp
fsubrs
out
mov
fstps
loop
or
xor
dec
fldenv
or
xor
sub
cs
imull
pop
mov
inc
inc
sub
xor
aad
xchg
dec
cmpsl
sbb
pusha
ds
mov
lcall
pop
xor
inc
xor
outsl
shlb
push
xlat
jae
mov
pop
add
cmp
add
loop
out
nop
int
jae
mov
or
movsb
mov
push
hlt
aam
out
add
orl
pop
mov
or
mov
xchg
mov
lea
aas
adc
mov
ret
mov
outsb
and
cmpsl
add
jl
lret
ret
shlb
and
inc
pop
mov
sub
inc
je
jmp
mov
jae
outsl
pusha
push
mov
jno
mov
enter
mov
xchg
sub
mov
stos
out
std
andl
fnsave
negl
fucom
sbb
addr16
push
fcmovnu
adc
outsb
in
lods
pop
stos
xor
pminsw
lahf
push
cmpsb
pop
sbbl
push
gs
pop
test
aaa
cmp
adc
jecxz
sub
fiadds
or
or
inc
dec
push
sub
mov
psllw
xchg
adc
ret
mov
fisttps
leave
xlat
movsb
push
pop
lahf
sarb
negl
pop
movb
push
ret
adc
aam
and
mov
pop
sub
std
lds
out
inc
mov
hsubpd
mov
sahf
cmpsb
mov
sbb
addr16
bound
aaa
jmp
mov
sbb
cmovl
test
push
insl
int
or
pop
into
addr16
leave
lds
adc
js
fisubl
enter
mov
adc
inc
sub
push
enter
or
cltd
mov
dec
push
pusha
push
and
aas
add
add
jg
add
xor
or
mov
repnz
jl
xlat
sub
cmp
push
outsl
in
push
push
movb
xchg
or
cli
out
pop
xor
shlb
cmp
dec
sbb
add
sub
adc
mov
jb
mov
sbb
mov
shlb
arpl
scas
inc
add
mov
iret
or
add
xor
sbb
in
scas
jns
sub
cltd
cmp
in
xor
mov
xchg
push
xchg
push
inc
sbb
jle
jne
rcr
and
pushf
mov
push
mov
sahf
lahf
rorl
movnti
pop
xchg
jmp
fildll
push
inc
inc
cmpsb
std
push
mov
cmpsb
movsl
mov
sub
repz
xchg
sbb
dec
jne
and
ds
mov
xorl
test
out
out
icebp
pop
dec
or
mov
negb
mov
lcall
push
or
in
push
xor
xchg
in
leave
mov
push
int3
xor
mov
jno
mull
cmp
mov
data16
push
mov
jecxz
xchg
jecxz
in
dec
arpl
inc
mov
inc
aad
out
mov
mov
rol
fstps
lea
lret
cmp
dec
mov
fisttps
sbb
xor
mov
add
ret
adc
shrw
flds
nop
ljmp
add
aas
xor
inc
pop
cmp
aas
shl
jae
mov
xchg
mov
sub
inc
inc
jae
and
outsl
dec
push
push
mov
fildll
rcr
jecxz
cld
popf
mov
fldt
jp
popf
sbb
pop
mov
into
inc
inc
mov
popf
lea
icebp
jo
jbe
sbb
cmp
fisttpl
xor
loop
out
ret
stos
ljmp
jecxz
dec
pop
push
ret
mov
lahf
in
std
sbb
es
mov
loope
je
jae
sbb
mov
mov
xor
lret
dec
push
mov
mov
pop
or
jns
sbb
cmp
inc
lahf
lcall
cli
and
loope
pop
cmp
mov
jecxz
xchg
popf
or
sarl
mov
imul
decb
sub
insl
out
xor
mov
arpl
iret
pop
es
outsl
mov
sub
mov
mov
and
mov
outsw
icebp
jbe
loopne
xchg
dec
add
sub
loop
loope
lds
mov
cmpl
xchg
dec
and
jp
mov
and
xchg
jae
scas
in
lock
insl
xor
sbb
pop
jo
int3
inc
les
add
xchg
cmp
jge
insb
jae
cmc
and
add
jb
and
jo
mov
xchg
cmpl
mov
scas
inc
cwtl
push
bound
sub
xchg
lea
pop
cmc
fisubrs
dec
hlt
in
xchg
mov
jae
ret
jge
mov
out
add
divb
iret
andb
cld
popa
clc
lds
push
xchg
lock
iret
ss
arpl
xchg
inc
aas
imul
jae
jle
in
push
mov
lcall
push
and
enter
inc
mov
ss
mov
lock
enter
add
mov
xchg
fwait
aaa
aam
pop
into
jbe
cli
inc
fnstenv
mov
arpl
xchg
icebp
pop
inc
cmp
mov
insl
or
icebp
and
ss
mov
cmpsb
in
xorb
sub
aaa
sub
mov
fadds
inc
push
inc
frstor
shlb
inc
arpl
pop
push
loopne
and
push
daa
gs
addr16
adc
pop
jno
jmp
mov
and
mov
in
iret
out
push
in
cli
xor
inc
dec
dec
lock
test
xor
or
mov
in
adc
cmp
insl
loopne
jg
lret
cli
dec
lods
sub
add
clc
out
es
stos
jecxz
pop
adc
mov
mov
mov
jbe
pop
mov
fldt
rcl
mov
inc
rcll
xor
popa
and
lea
repnz
mov
sbb
jmp
fildl
inc
cmp
fstl
xchg
jmp
adc
stos
iret
jb
push
mov
mov
cltd
shlb
xor
dec
mov
fistps
inc
inc
divl
loopne
lods
jb
add
mov
push
fistpl
outsb
les
push
or
adc
sub
mov
pop
imulb
lret
test
pop
and
xchg
add
sbb
and
pop
test
rclb
jle
xor
mov
lds
push
lcall
mov
jp
repz
jmp
mov
mov
shr
mov
aas
dec
sbb
jle
sar
or
mov
ds
push
les
mov
repnz
mov
mov
out
jbe
xchg
jno
sahf
jp
lahf
div
out
outsl
fnstsw
xchg
andb
inc
clc
pop
out
fstl
imulb
fs
test
mov
sahf
ja
inc
cmp
clc
jno
xorl
sbb
cmpb
xor
scas
push
jmp
lahf
push
or
xor
pop
mov
dec
ret
sti
jmp
push
test
push
in
mov
rolb
sbb
ljmp
aaa
dec
xor
sbb
test
mov
addr16
test
xchg
lcall
movsl
aaa
roll
int3
jne
in
es
outsb
pop
pop
add
movsl
popa
mov
popf
fdivr
repnz
fs
cmp
or
xchg
test
pop
or
push
adc
stos
mov
jge
sbb
aaa
jp
xchg
and
push
cld
not
xchg
fistpl
stos
mov
fisubl
in
sbb
pop
aad
insb
jecxz
pop
es
adc
icebp
inc
inc
xchg
jecxz
add
cmp
cmp
mov
mov
add
pushf
mov
test
lahf
fs
dec
sti
dec
je
xchg
or
ret
sar
fcoms
scas
lea
xchg
inc
xlat
mov
pop
mov
imul
divl
cli
fsubr
fstp
in
jb
pop
inc
add
in
push
xchg
mov
std
jg
shll
mov
and
push
add
cmp
in
repnz
mov
push
sbb
mov
adc
dec
loopne
push
pop
mov
pop
in
cmc
cmpsl
add
jne
rorl
xor
fbld
or
loopne
loopne
lods
cmp
push
pop
jns
rol
test
push
out
dec
pop
or
and
pop
pusha
pusha
cmp
add
sbb
xor
sub
pop
lahf
fisttpl
jns
das
mov
outsl
into
adc
mov
aaa
nop
sbb
xchg
cmp
int
inc
sbb
gs
xchg
xchg
lods
fiaddl
jnp
fadds
sub
mov
pop
icebp
mov
out
out
jecxz
subl
mov
in
ja
xor
or
xchg
jo
sub
enter
ret
stos
adc
in
lea
adc
xorb
inc
int
ljmp
add
mov
cmp
fwait
std
cmp
and
sub
or
outsl
xor
cltd
shll
mov
jg
push
jnp
jno
mov
outsb
mov
push
rcr
pop
mov
fnstsw
xor
xchg
aam
stos
leave
sbb
addl
sub
or
in
sti
jp
pop
push
iret
out
shlb
jns
inc
inc
andl
loope
inc
into
dec
pop
mov
sub
hlt
test
andb
cli
xor
bound
mov
scas
stos
scas
push
push
jmpw
jl
shl
insl
cmp
dec
push
dec
sti
cli
inc
and
cmp
xor
sub
adc
push
stc
xor
push
push
mov
mov
dec
ljmp
dec
dec
push
rcr
lds
mov
and
xchg
in
lea
cli
inc
cmp
inc
xchg
jl
sahf
nop
cmp
push
rcl
add
jne
xlat
adc
out
adc
push
mov
out
lock
or
xor
es
push
cld
imul
push
pop
mov
add
std
jle
sahf
lods
inc
pop
jp
mov
cmpsl
roll
sahf
movsb
mov
mov
loope
sbb
adc
ret
inc
xlat
shrl
push
sbb
adc
jb
mov
push
ret
hlt
sbb
mov
xor
stc
aas
aad
sti
mov
cmpps
dec
rolb
cwtl
jnp
loop
addb
ja
cmp
mov
aas
mov
imul
outsl
mov
xor
and
icebp
push
mov
xor
or
mov
stos
sub
sub
mov
jecxz
sbb
mov
out
mov
lods
push
add
jp
mov
ds
movsb
inc
and
das
fs
sbb
xor
or
sbb
lds
imul
loopne
fst
mov
test
jno
or
inc
mov
lret
call
leave
inc
adc
xchg
and
test
int3
pushf
add
leave
xchg
adc
lock
aaa
loope
iret
xchg
mov
xchg
fsubl
push
and
lret
out
dec
mov
pop
fldl
jb
sub
movsl
xchg
es
stos
xor
push
cld
cmp
inc
gs
cmp
and
fisttpl
lods
push
jle
out
bound
orl
push
cmp
xchg
iret
sbb
pop
pop
les
loop
xor
jle
push
jge
push
outsl
adc
orl
dec
pop
cmp
test
lods
push
fcmovnbe
leave
into
lahf
jle
loop
dec
jno
jle
fstpl
mov
sti
sub
std
mov
sbb
cmpsl
mov
frstor
iret
xchg
and
incl
xor
or
mov
mov
jge
insb
aad
cmpsb
repz
cmpsb
mov
dec
pop
mov
push
sbb
pop
divl
xlat
aaa
inc
and
mov
fisubl
mov
pop
add
push
daa
idivl
and
mov
stos
dec
jo
xor
andb
cli
jp
inc
in
push
sub
cs
jp
xchg
cli
sbb
dec
xlat
or
aam
lock
repz
cltd
ficoms
int
ret
push
hlt
and
fistpll
cli
pop
or
ljmp
sbb
dec
and
in
das
jns
das
adc
push
xor
icebp
xchg
pop
inc
fcmovu
in
mov
mov
adc
and
mov
adc
cmp
fdivrl
in
shrl
mov
insl
mov
cltd
jb
hlt
mov
sub
sub
lcall
lds
in
mov
xor
xor
fildll
arpl
mov
sbb
mov
sub
xchg
mov
or
and
lds
adc
mov
cmpsb
mov
jp
jmp
es
sbb
insl
add
subl
cmp
sti
in
out
outsb
aas
sti
adc
and
ficoms
jno
nop
jb
hlt
cmp
jg
lahf
jge
pop
and
push
clc
aad
mov
lock
sbb
jno
inc
rol
pop
sbb
gs
movsb
mov
sub
jecxz
fisubrs
ss
adc
cmp
push
imul
jl
xchg
movsl
dec
lods
xor
icebp
movsb
out
icebp
scas
cmc
mov
dec
or
mov
scas
js
pop
daa
push
mov
insl
into
popf
sbb
or
pop
fisubl
push
xchg
subb
mov
sub
and
out
pushf
ds
roll
js
rcrl
scas
std
pop
lods
jmp
testl
mov
cmp
into
out
mov
das
mull
xor
shrb
mov
mov
ret
jnp
scas
xor
xchg
lahf
xchg
xchg
es
push
lea
xchg
notl
xor
xor
inc
in
or
lahf
mov
mov
jns
stos
cli
ffreep
dec
cwtl
enter
sub
xorl
add
and
cmp
adc
sub
jmp
fcomi
dec
xor
xchg
sbb
iret
jp
scas
repz
inc
frndint
adc
icebp
cmc
stc
xor
dec
stc
call
mov
mov
ret
shll
stc
inc
add
push
cmp
cmpsl
je
iret
dec
test
sub
fstl
movsb
mov
mov
add
push
pop
es
sarl
pop
mov
nop
adc
shll
test
dec
cli
xlat
cmpsl
sub
mov
xor
bound
cs
pusha
mov
outsb
sti
mov
dec
xchg
jecxz
imul
inc
mov
les
clc
fs
lea
jns
subb
push
je
imul
and
inc
inc
add
hlt
push
in
pushf
mov
pop
imul
cli
hlt
shlb
shll
or
and
pop
sbb
cmpsl
add
stos
aas
sub
sbb
xchg
lock
outsl
mov
jge
pop
xchg
dec
inc
imul
addl
or
xor
inc
dec
mov
jbe
dec
jne
add
pop
add
sub
pop
repz
sub
in
pop
xchg
lods
add
pop
jp
clc
dec
xlat
lret
cmp
leave
jle
xlat
dec
sub
fwait
cmpsl
vxorps
pop
mov
es
je
shlb
je
or
pop
jo
add
push
pop
mov
lods
bound
gs
ret
lcall
ret
mov
mov
mov
dec
mov
or
adc
xchg
cld
lcall
push
outsl
popf
repz
mov
adc
pop
fildl
adc
loop
cmp
lock
repz
cs
sub
xor
xchg
push
in
cli
movsb
add
xchg
scas
jae
jl
insb
repnz
cs
sbb
mov
inc
cmp
jns
cmp
ja
lock
and
pusha
jo
jbe
pop
or
inc
xchg
mov
arpl
adc
int
loope
push
out
dec
pushf
mov
jno
cmp
popf
add
cmpsl
stc
adc
leave
aam
gs
int
mov
jb
sbb
mov
enter
cli
mov
lods
dec
adc
fwait
das
fs
and
xchg
fwait
loopne
gs
push
movsb
std
setae
fwait
icebp
addl
stos
mov
nop
sub
pop
ret
cmp
sar
sbb
repz
sahf
in
and
mov
cmp
testl
popl
xor
aam
inc
mov
loopne
das
cmp
mov
mov
mov
ds
mov
out
fsubrs
aam
or
aad
jnp
and
xor
push
clc
sbb
fsubl
push
sub
push
mov
jae
imul
xchg
lss
dec
mov
fistpl
add
mov
pop
or
mov
cmp
call
cmp
orl
out
add
in
or
and
sbb
inc
mov
sub
xlat
scas
stos
adc
aas
adc
sbb
dec
inc
mov
into
loope
enter
lcall
aam
pop
add
and
inc
dec
in
aas
push
mov
sub
iret
hlt
ljmp
xor
fsub
push
out
add
bound
in
push
cmp
cmpsl
mov
fs
xchg
push
mov
cmc
pusha
inc
fmul
pusha
ljmp
xor
adc
pop
adcb
add
mov
testl
in
les
lock
mov
out
test
scas
mov
mov
mov
or
mov
hlt
out
or
in
xor
cmp
mov
or
dec
stc
into
or
in
ds
popf
add
daa
lock
mov
pop
push
mov
mov
ret
mov
or
or
lea
cltd
popa
aad
add
or
pushf
jb
dec
shrb
les
mov
filds
stos
or
daa
adc
ficoml
fildll
and
scas
bound
popa
xchg
mov
sub
shrw
bound
or
lcall
add
xlat
stos
pop
sti
movsb
pop
into
cmp
jge
or
add
sub
mov
mov
test
inc
sub
mov
or
push
adc
mov
in
into
in
outsb
dec
adc
mov
stos
cwtl
jl
or
sbb
movsl
push
dec
mov
push
sub
outsl
mov
lods
pop
inc
in
fdivrs
jl
mov
sbb
ja
test
mov
sub
jecxz
mov
or
mov
test
xchg
push
sub
sbb
andb
fcoms
pop
ljmp
out
mov
fidivl
or
imul
je
pop
sub
fsubrp
das
jle
pop
pop
lcall
ss
lahf
mov
ret
popf
cmpsl
mov
xchg
cwtl
mov
pushf
icebp
jae
popa
jg
pop
sub
arpl
and
sub
and
int3
fisubrl
mov
add
jmp
cmp
gs
dec
pop
adc
mov
or
outsb
xor
stc
punpckldq
call
dec
inc
pop
push
shlb
jnp
pop
jge
bound
inc
in
sub
lret
jnp
dec
inc
xchg
pushf
ljmp
addr16
mov
or
jecxz
aam
mov
xchg
pop
push
out
inc
mov
and
outsl
and
pop
arpl
add
or
nop
xchg
push
out
shrb
xchg
outsb
enter
daa
repz
push
pop
pop
sahf
loop
or
mov
cltd
outsb
add
xchg
out
gs
jb
fiadds
or
cli
jle
add
jmp
lds
xchg
inc
jmp
inc
shrb
push
cli
loop
pop
xor
mov
out
jg
cmp
mov
jnp
shrb
inc
mov
rcrl
mov
je
mov
gs
push
cmp
pop
icebp
aas
clc
inc
mov
dec
jg
movsb
xor
movsl
rorl
mov
movsl
xor
mov
xchg
lret
add
jb
subb
insb
xchg
xchg
fs
fidivs
clc
mov
int3
hlt
aam
lret
mov
dec
push
sbb
bound
xchg
mov
sub
nopl
push
mov
mov
outsl
and
add
int3
mov
shll
xchg
and
fstps
cmp
add
sahf
adc
push
scas
pop
rorl
or
xlat
movsb
dec
jp
xchg
mov
imul
add
lret
sbb
or
arpl
inc
dec
jae
lods
jnp
xor
sti
aam
mov
mov
negl
xchg
xor
aas
xor
inc
adc
lds
sub
jo
cwtl
mov
cmp
and
pop
inc
loopne
mov
xchg
enter
out
jp
inc
add
mov
popa
xor
rcrb
iret
sbb
movsb
add
xchg
test
inc
fildl
adc
mov
adc
loope
into
mov
push
jecxz
mov
xchg
pop
mov
sbb
sub
xchg
push
andl
jns
out
mov
cld
pop
or
push
or
cmpsl
dec
in
xchg
xchg
sbb
movsb
leave
in
ret
adc
mov
push
adc
sbb
jno
fists
xor
cli
xlat
enter
pop
pop
mov
adc
cmp
xchg
nop
fcoms
sahf
adc
in
jno
mull
sub
mov
xor
dec
jl
push
in
push
call
xchg
inc
mov
mov
xchg
and
xor
f2xm1
inc
pop
pop
test
icebp
and
xor
addr16
inc
add
adc
inc
mov
mov
cltd
and
repnz
scas
ja
mov
sub
clc
push
add
push
xchg
ret
push
aad
fildl
pop
stos
add
mov
fstps
mov
movsl
repz
and
or
and
sub
mov
jo
push
add
stos
add
sbb
jno
push
rcrl
cltd
sti
test
inc
xor
or
cmp
in
or
jmp
hlt
bound
mov
push
jns
push
adc
jmp
fimuls
fmuls
sti
sbb
shrl
mov
and
sub
aad
xor
xchg
mov
addr16
sbb
fsubs
lret
or
incl
aas
mov
add
add
lahf
mov
inc
repz
imul
push
test
jb
out
dec
mov
mov
ja
inc
inc
stc
data16
cmp
addr16
cmp
les
adc
inc
sbb
jne
pop
mov
xor
add
divb
add
in
int
push
pop
cmpsb
insl
int
mov
movsl
mov
push
test
add
pop
add
xchg
in
arpl
ficomps
push
mov
inc
inc
lcall
mov
arpl
push
rdtsc
and
push
fisubl
repnz
adc
jmp
xor
les
rcll
or
jg
mov
xor
and
mov
jnp
ja
sbb
pushw
mov
and
add
dec
outsl
les
nop
dec
pop
int
jecxz
in
stc
xchg
jge
in
jle
cmovg
or
xchg
push
out
adc
pop
mov
xchg
sub
mov
out
sarl
movsl
mov
xor
pop
mov
or
test
or
dec
xchg
inc
or
pop
stc
cwtl
dec
add
ja
dec
sbb
push
xchg
ret
aad
adc
xor
sub
mov
jo
mov
data16
dec
loop
test
sbb
lahf
push
push
inc
cli
pop
cwtl
fcompl
in
pop
out
rolb
cltd
xor
fcmovnu
jae
stos
push
dec
cmc
stos
push
pop
jo
in
and
push
inc
stos
daa
ss
icebp
mov
dec
push
jecxz
and
imul
xchg
push
dec
push
pop
pop
jne
out
loope
imul
cltd
push
xchg
jecxz
jl
push
pop
fsubl
jle
out
pop
jp
xlat
aas
sbb
and
inc
lcall
cltd
popf
mov
jns
sbb
jmp
jecxz
sarb
cmp
scas
test
insl
movsl
xchg
mov
shrl
pop
aaa
jmp
or
push
jge
cmp
lcall
popa
rclb
jg
nop
pop
mov
cs
mov
sti
lock
jmp
pop
sub
dec
xchg
mov
xchg
sub
jns
jo
jp
push
fbstp
xchg
sub
sbb
mov
repnz
repnz
cwtl
enter
pop
ds
xorl
dec
xorl
mov
cmp
mov
ret
movsl
xor
call
int3
fistpll
notl
lcall
xchg
add
rclb
push
jb
xchg
jnp
mov
fisttpll
inc
pop
jb
jle
push
fistpll
mov
mov
sbb
sub
pop
mov
fldcw
or
sbb
xchg
fs
adc
inc
fs
js
or
or
in
negb
sbb
lcall
int
xchg
fiaddl
ljmp
add
mov
sub
test
mov
or
adc
mov
push
mov
inc
cwtl
jecxz
mov
je
lahf
int
mov
fldcw
mov
test
xchg
and
or
in
xchg
icebp
jecxz,pt
out
leave
sbb
or
adc
movsl
fcomps
sub
jo
jge
jp
dec
or
sub
pop
or
je
outsb
test
inc
or
or
cwtl
rorl
fdivr
jae
in
pop
lcall
int3
in
inc
xchg
sub
shrl
cwtl
rcll
aam
jmp
adc
xorb
imull
xchg
out
mov
add
pop
or
lahf
mov
and
xchg
sbb
push
hlt
mov
pushf
push
push
fadds
repnz
ljmp
xor
jns
mov
jp
loop
and
push
bound
inc
ficoml
mov
sbb
and
outsl
xchg
and
out
adc
mov
aam
jae
inc
dec
pop
push
dec
rorb
and
or
cmpsb
adc
push
cmp
outsb
ja
jecxz
orl
test
push
iret
mov
or
pop
add
mov
pop
and
out
test
rcll
jno
mov
jnp
sub
and
mov
js
pop
pop
or
jno
fisubs
in
mov
adc
add
shrb
mov
inc
ficompl
fdivs
cmc
push
and
stc
or
add
lcall
dec
adc
and
ficoms
dec
aam
inc
movsb
lods
aas
dec
lcall
std
fcoms
repz
mov
pop
jecxz
movsl
clc
mov
cwtl
arpl
push
push
addb
lahf
outsb
imul
mov
adc
shl
aad
cs
add
fidivl
sub
aas
adc
insl
sub
test
enter
push
ljmp
outsl
ds
inc
push
inc
std
push
cmpsl
aaa
mov
ficomps
push
sahf
or
in
loop
xor
lock
rolb
test
mov
arpl
lods
xchg
stc
mov
xchg
mov
aaa
popf
iret
mov
add
repnz
ljmp
out
les
lret
outsb
jecxz
ds
scas
dec
mov
adc
push
testl
jg
cltd
dec
and
in
out
faddp
orl
push
insb
or
jp
pop
xchg
xor
pop
adc
xor
outsb
stos
inc
mov
sbb
stc
xchg
fsubrs
dec
mov
adc
add
mov
shr
pop
mov
inc
lods
mov
pop
cwtl
ficompl
cld
ret
sbb
xor
scas
mov
sbb
xchg
sbb
mov
xor
rclb
jbe
movsb
jns
pop
orb
adc
xchg
mov
pushf
xchg
hlt
mov
jne
add
add
mov
jo
cltd
inc
imul
pushf
sbb
inc
cmp
lods
arpl
xchg
sub
pop
insb
xchg
data16
out
out
jb
push
insl
mov
sub
dec
out
sarl
sub
stc
push
ror
xchg
and
ss
movsb
dec
adc
sarl
pop
or
cmpsb
shr
icebp
aam
fs
pop
enter
lcall
inc
push
cs
lret
out
movsb
inc
jns
mov
or
sbb
sub
dec
rorb
bnd
mov
inc
mov
shrb
imulb
cmp
mov
lock
repz
cwtl
adc
stos
mov
outsb
test
mov
in
sbbl
sbb
dec
cmp
es
xchg
aam
lods
cltd
fmuls
stos
dec
cmp
shrl
sbb
stos
xchg
jg
push
push
jne
mov
dec
inc
mov
mov
pop
std
sub
into
mov
icebp
pop
enter
jl
mov
jae
jne
int3
xlat
daa
stos
xor
mov
ds
cld
or
jb
data16
push
or
adcb
call
jge
sti
cwtl
lahf
mov
sbb
js
cmp
mov
xor
jmp
and
push
xor
xor
sahf
pop
inc
inc
mov
jns
ret
jmp
cs
jno
mov
test
idivl
mov
cs
insb
orl
xor
xor
sahf
rol
fidivrl
push
into
neg
sub
mov
loope
cld
jo
pop
rcrl
jbe
out
fdivl
sysenter
add
call
rolb
mov
jno
sarb
mov
add
mov
jg
pop
out
jmp
inc
mov
rorl
push
mov
jmp
call
mov
pop
pop
jbe
fcmovb
cmpsb
andl
push
es
pop
pusha
xchg
andb
mov
or
push
or
xchg
js
loope
jns
xchg
fnstsw
cmp
mov
inc
arpl
shrl
popf
pop
pop
ret
xor
mov
loope
aam
scas
stc
mulb
insl
sar
pop
stos
dec
insb
mov
add
shl
std
or
les
inc
fidivl
adc
xchg
jg
imul
push
mov
dec
imul
sub
cmp
stc
cmpsl
orb
mov
mov
push
arpl
movsb
insb
pop
jb
push
aas
loop
sub
stc
push
cmp
push
xor
xchg
sub
mov
xor
fwait
js
imulb
inc
adc
ss
int
mov
pop
in
lea
notl
std
jmp
mov
cmp
aaa
xchg
and
cmpsb
test
loope
mov
jbe
test
data16
in
mov
jae
ds
mov
mull
icebp
call
les
sub
fs
mov
fdiv
in
sub
mov
outsl
addr16
dec
shrl
call
dec
mov
cmp
or
arpl
jg
data16
std
dec
ret
add
jb
movsl
jp
lcall
and
fstpl
test
pop
jge
sbb
mov
ret
divb
dec
mov
sbb
or
cmp
cs
jle
jle
and
in
xor
sub
andl
mov
int
xor
push
lock
stos
or
sub
mov
push
jge
out
sar
in
aam
fs
dec
fcmovbe
andl
out
or
add
mov
jnp
jne
leave
pop
inc
mov
mov
test
push
xchg
rolb
mov
push
mov
sbb
scas
cmp
mov
push
or
or
xlat
xchg
sbb
jmp
add
cmp
orb
sub
add
popf
push
int3
mov
sbb
push
fs
inc
pop
and
adc
pop
jmp
mov
repz
cs
pop
negl
addb
pushf
rorb
and
sarb
mov
and
rorl
cld
jo,pt
sub
jo
push
jnp
in
loopne
sub
and
lods
or
sti
jo
lods
in
pop
sub
sbb
ljmp
repz
push
mov
push
loopne
outsb
xchg
fisubl
pop
xchg
js
xor
sub
push
outsl
mov
lock
inc
es
push
imul
lods
jae
dec
shlb
loop
adc
cmpsb
mov
xor
mov
jae
ja
pop
sub
dec
enter
cmpsl
sti
xor
mov
pop
lock
shlb
ljmp
sahf
movsb
rcl
mov
in
repnz
lcall
push
fisubs
das
pop
fiaddl
mov
ret
je
dec
push
psllw
push
fwait
sarl
insb
into
loope
jge
in
mov
pop
jmp
leave
sbb
loopne
loopne
idivb
fnstcw
or
pop
inc
scas
or
ljmp
into
stc
push
ficoms
adc
xlat
sbb
mov
out
adc
in
aam
xchg
divl
imul
sub
or
test
sbb
cmp
fimuls
dec
sub
clc
pop
mov
xchg
mov
out
rcrl
imul
cltd
out
mov
cmp
movsl
jnp
or
shl
andb
movsl
ljmp
adcb
fcompl
and
pushf
out
cs
fs
push
out
mov
jmp
inc
xchg
aad
jp
enter
sti
in
dec
jns
rolb
cmp
inc
push
stos
pop
out
imul
or
xchg
test
push
jle
or
insl
mov
inc
dec
icebp
mov
or
sub
scas
sbb
jns
pop
push
dec
mov
xchg
or
test
mov
popa
sub
je
add
std
xchg
sahf
inc
mov
cltd
in
bound
mov
add
sub
xchg
add
xor
xchg
call
jle
loopne
ljmp
pop
aas
mov
sbb
add
arpl
pop
push
cltd
insl
add
and
and
fstps
aaa
lret
repz
sahf
pop
dec
inc
std
sbb
mov
jl
das
jle
mov
lret
mov
pop
jno
pusha
push
dec
ret
push
out
xchg
int3
cmp
jp
inc
stc
icebp
out
xchg
pop
add
fsubrs
ljmp
lahf
fbld
into
cmp
add
outsb
or
in
mov
push
and
iret
inc
xor
repnz
jg
call
xchg
add
xor
cmp
ja
decb
imul
lahf
repz
jb
pop
loope
es
test
jae
mov
jle
jbe
lods
mov
and
mov
push
mov
mov
jg
dec
data16
in
sti
xchg
mov
push
cmp
test
xchg
imul
adc
inc
mov
inc
pop
sbb
daa
lea
mov
inc
lret
xorl
inc
push
and
insb
scas
outsl
ljmp
fiadds
xor
add
xchg
icebp
mov
pushf
dec
or
mov
jmp
cwtl
push
ficompl
movsl
shlb
adc
ds
notb
xchg
jmp
test
and
notb
or
push
out
mov
movsl
cli
xor
jns
dec
xchg
shlb
adc
push
push
data16
aad
out
testb
mov
lea
popf
jae
jno
sub
ss
jno
jmp
les
idivl
pop
outsl
xchg
cmp
cmp
mov
jbe
inc
leave
sti
xchg
and
mov
inc
pop
lods
push
lods
push
add
lret
leave
mov
mov
or
mov
fsubrs
xor
insl
mov
ja
in
stos
lds
mov
add
xor
xchg
cld
es
into
js
out
xchg
mov
lcall
pop
inc
xchg
stos
lea
in
and
xchg
imul
xor
xchg
in
arpl
cmp
pop
jbe
jb
xor
rolb
int
mov
loope
mov
sub
inc
pop
mov
les
jmp
push
icebp
ljmp
jmp
ljmp
scas
cltd
dec
js
xchg
adc
pop
jnp
in
fsub
pop
sarb
sbb
cli
cmp
icebp
sub
or
cmc
push
das
mov
xchg
mov
push
rolb
dec
cmc
in
jge
inc
mov
loope
cmp
dec
jge
and
dec
repz
mov
push
mov
sub
iret
mov
sbb
lahf
pop
cmp
in
test
out
fisubs
je
add
leave
sarb
sub
in
insl
scas
push
sbb
or
mov
gs
repz
or
mov
fstps
xor
sub
mov
mov
ja
into
inc
addl
scas
out
pop
sub
mov
lods
xchg
in
lds
inc
rcrl
jg
xchg
bound
or
imul
scas
stos
addb
sub
mov
or
sbb
xor
cmp
sbb
jle
cmpsl
rcrb
lods
xchg
adc
into
sti
in
mov
adc
xchg
daa
inc
out
fbstp
xchg
ljmp
mov
mov
insl
pop
mov
xor
aad
sub
mov
dec
add
add
rolb
scas
xchg
jg
push
push
sti
xor
dec
insb
shlb
mov
int3
fsubp
push
xor
jmp
fistpl
sbb
ljmp
jl
jno
mov
stos
mov
bound
push
mull
ja
cmpsb
inc
mov
adc
jb
mov
das
mov
lret
mov
lea
adc
imul
sub
mov
test
leave
addr16
aas
sahf
pop
mov
lods
js
dec
aas
jge
or
mov
cmp
mov
movsl
sub
mov
into
idiv
cltd
es
adc
mov
imul
out
mov
inc
mull
inc
mov
mov
movsl
inc
mov
cmp
in
xchg
cmpsl
sub
and
jle
and
xlat
out
fsubs
into
ss
lods
mov
mov
xor
mov
sub
std
jb
fdivs
cmp
adc
int
out
out
xor
inc
push
roll
addr16
iret
fcomip
repnz
push
push
sahf
push
push
jb
or
push
pushf
jmp
jne
or
daa
jae
scas
mov
xchg
jecxz
push
sbb
shll
push
add
lret
lret
das
movsl
xchg
les
mov
popa
mov
cli
clc
repz
testb
xchg
jbe
xchg
repnz
cld
addr16
sbb
xor
mov
lret
jno
jb
leave
fsubrs
aaa
pushf
scas
rolb
add
push
sbb
andl
ret
lahf
jl
arpl
jge
js
sub
inc
mov
jmp
jb
loop
mov
pop
xor
jmp
add
xlat
cwtl
lret
sbb
arpl
in
cwtl
aad
xchg
lds
loop
xchg
xchg
loope
adc
xor
mov
pusha
iret
out
out
mov
cltd
pop
fisttpll
adc
jp
movsb
jge
in
push
sbb
mov
jle
test
out
outsl
cli
mov
add
inc
push
mov
cwtl
lahf
outsb
mov
jecxz
aas
jg
popa
adc
sti
fstps
shlb
add
insb
imul
lcall
jg
jns
mov
cmp
aaa
push
and
cmp
mov
pop
add
inc
cmp
test
dec
int
and
xor
mov
lea
cmp
movsb
jno
hlt
jge
sub
xchg
shll
adc
lahf
test
xor
or
dec
mov
mov
push
mov
std
push
cmp
push
hlt
inc
shrl
insl
fstps
loop
sub
fs
sarl
pushf
inc
in
pop
xchg
mov
pop
mov
jmp
loope
push
lock
sbb
loop
cmp
mov
ja
mov
dec
lods
cmp
add
cmp
add
xchg
in
scas
sub
adc
out
iret
cmp
mov
shll
add
int
push
roll
jl
mov
xor
pop
and
jo
jg
adc
add
and
daa
arpl
fistps
add
sub
or
rcrb
fs
fsub
jae
inc
mov
cld
sahf
sub
add
mov
leave
iret
sub
pop
lods
dec
push
inc
repnz
sbb
adc
jbe
pop
mov
mov
mov
or
ds
sub
inc
or
ret
inc
push
dec
jmp
xchg
imul
sub
jns
mov
stos
xor
adc
mov
jo
add
dec
lret
out
adc
adc
adc
scas
mov
push
jns
xorl
jg
pop
test
push
mov
pop
xor
cli
fnsave
fnstcw
movsl
lods
xor
or
in
and
daa
push
das
adc
mov
ja
lahf
jp
pop
pop
jle
pop
jge
xor
cmpb
ss
pushf
pop
or
daa
and
rorl
ljmp
sub
adc
xor
js
jb
nop
push
int3
out
mov
push
mov
insb
sbb
icebp
shr
jo
std
dec
fisubrl
pop
test
stc
and
lds
mov
fdivrl
push
rclb
lods
fwait
xor
jmp
arpl
xor
aaa
hlt
inc
jecxz
icebp
sub
jg
arpl
and
leave
loopne
jbe
jmp
jg
cwtl
fs
sub
adc
lret
test
lahf
in
fadds
and
sbb
dec
repz
stos
orl
iret
or
cmp
scas
mov
outsb
xor
jae
cmp
addr16
fs
ss
out
daa
jns
push
cld
pop
fsubl
gs
inc
scas
pop
mov
sbb
adcl
or
sbbb
or
lret
xor
mov
push
mov
pop
dec
xchg
loope
fs
xchg
jb
pop
inc
fisubrs
js
or
lods
test
and
jno
pop
add
fadds
stos
aam
mov
jl
aas
es
inc
call
and
stc
xchg
mov
sbb
lahf
hlt
mov
cmpsb
jae
ds
cmp
leave
xchg
int
adc
add
test
mov
mov
jno
xlat
adc
xlat
dec
mov
insb
adc
mov
mov
in
lret
pop
stos
sbb
sub
cmp
push
xchg
daa
mov
mov
mov
inc
add
jg
andb
sub
cmp
add
push
pushl
mov
ljmp
pop
in
ja
sub
hlt
je
pop
dec
jne
jnp
mov
ds
inc
loopne
jb
test
sarb
xchg
push
sarb
mov
sbb
inc
ja
jg
aad
inc
jecxz
fistl
call
and
mov
lret
jmp
jle
mov
nop
dec
testb
xchg
push
pop
pusha
aam
jae
popl
inc
test
dec
push
pop
mov
ret
out
arpl
shll
orl
push
and
test
mov
cwtl
ret
push
dec
cmp
shrl
dec
out
sbb
mov
js
sub
jns
scas
mov
fsubr
xchg
pop
insl
inc
inc
into
sahf
ret
mov
fwait
push
gs
mov
insl
repz
xlat
cmp
sub
mov
popa
cli
std
xchg
cmpl
jmp
test
adc
cmc
imul
sub
fisttpll
mov
lods
mov
adc
sbb
sarb
pop
mov
cmpl
xor
jno
push
test
insb
sbb
leave
push
lods
pop
pop
into
bswap
fnstcw
push
sahf
out
jns
adc
xchg
movsl
cmp
add
push
mov
js
mov
lea
inc
jns
xor
stc
jne
xchg
dec
ret
ljmp
jno
push
jle
pop
or
shr
cmpsb
push
shlb
lock
jae
out
test
jae
dec
push
mov
dec
aas
sub
scas
adc
iret
nop
mov
bound
xor
lock
sbb
xor
lods
sub
xrelease
add
test
mov
pop
xlat
stos
int3
pop
pop
and
iret
incl
jle
lret
sbb
divb
mov
hlt
repnz
jbe
jge
jg
fisubl
sarl
sub
or
adc
shl
cmp
mov
xor
pop
sbb
clc
sbb
push
sbb
and
add
or
dec
rclb
jne
xchg
dec
xchg
push
or
xor
popa
cmpsb
sbb
je
lods
es
adc
push
xchg
dec
out
sahf
arpl
adc
dec
dec
mov
mov
lods
testb
in
stos
mov
and
imul
push
call
js
imul
push
jl
jbe
or
cli
mov
dec
xchg
mov
sbb
leave
inc
rol
pushf
mov
hlt
sbb
fstpl
xchg
dec
js
mov
mov
scas
jo
mov
jo
outsl
leave
mov
pop
out
subl
and
add
subl
adc
rorb
mov
mov
negl
mov
mov
pop
rorb
cwtl
and
xorb
or
popf
add
push
es
inc
mov
je
pop
addr16
pusha
mov
jg
cmp
lret
cmp
movb
out
jnp
inc
mov
xchg
in
inc
sti
imul
xchg
or
iret
or
xlat
push
mov
adc
js
inc
xchg
mov
pop
fidivrs
xchg
pop
inc
sbb
lret
sbb
stc
nop
mov
cmp
jns
clc
jmp
pushf
mov
inc
cmp
mov
and
dec
lret
mov
xchg
shll
insb
subb
sbb
pop
adc
cmp
fs
mov
adc
enter
xchg
mov
push
dec
daa
daa
cli
ljmp
mov
subl
rcrl
scas
cmpsb
insl
add
or
aam
pop
out
pop
jp
push
dec
insl
ficompl
lcall
jbe
sub
ret
mov
push
and
mov
mov
mov
imull
in
das
icebp
pop
test
fidivrs
sarl
cmp
xchg
test
rcl
mov
aas
jg
mov
xor
xor
xor
xor
jbe
push
cmp
lret
popf
rcrb
mov
rorl
jnp
inc
or
xor
fimull
enter
movl
cmp
loopne
cmpl
mov
cmpsb
sbb
fistpll
xchg
repnz
xor
movsb
mov
and
dec
ret
data16
add
and
je
push
push
je
stc
push
mov
cmp
xchg
ljmp
into
mov
movsb
movsl
mov
int3
push
lea
add
dec
popa
mov
enter
repz
pop
jae
sahf
ljmp
shl
out
adc
das
cmc
mov
fs
add
xchg
incl
jno
movsl
jmp
pushl
push
push
data16
push
nop
xchg
jecxz
cmovnp
imul
pusha
out
repnz
xchg
sahf
push
flds
repz
or
and
test
fsubrs
jl
out
dec
jnp
push
std
add
pushf
dec
add
adcl
adc
enter
cld
int3
mov
cmp
xchg
sub
pop
inc
into
sub
in
insl
stos
stc
jg
das
dec
jg
pop
lret
aas
pop
andl
ljmp
cli
mov
fcoms
jb
mov
and
cwtl
jecxz
jns
ss
arpl
xchg
push
aad
dec
lds
fldlg2
sub
dec
mov
cmp
enter
mov
mov
mov
dec
scas
imul
xlat
or
inc
ss
inc
testl
enter
pop
out
sub
add
jno
xor
jg
lods
sub
or
mov
sub
mov
cmpsb
mov
jb
dec
inc
addr16
data16
aas
xchg
imul
pop
cmp
lret
mov
outsb
rclb
lea
cmp
loopne
cltd
pop
adc
add
push
dec
mov
sbb
push
icebp
jbe
jne
int
andb
lret
jbe
and
sbb
or
push
and
pop
lcall
insl
add
scas
cmpsl
or
xlat
sbb
test
dec
inc
fisubrl
jbe
fs
cmp
mov
sub
add
test
aaa
and
or
xchg
jo
jo
in
jb
dec
dec
aas
es
lock
fwait
test
aas
lcall
icebp
xlat
jp
push
mov
mov
cmp
jmp
cmp
sbb
loopne
xchg
sub
rorb
rcl
mov
nop
int
or
pushf
ret
daa
test
mov
aam
mov
mov
xchg
adc
mov
loope
in
inc
rclb
addb
add
dec
inc
loopne
jnp
std
xchg
out
inc
push
xor
mov
loop
mov
sub
ljmp
push
adc
or
out
leave
bound
jnp
cmp
xchg
sub
in
and
inc
iret
pop
notl
push
xor
cmp
gs
das
mov
cli
jno
ficoml
cli
push
shrl
push
xchg
jae
xchg
jo
lahf
mov
inc
adc
mov
add
dec
sub
xchg
jl
add
mov
mov
ss
mov
adc
scas
mov
mov
cmp
out
or
idivb
int3
scas
add
push
aas
adc
cld
imul
addr16
loope
jp
ljmp
inc
pop
inc
adc
mov
dec
jle
lcall
push
inc
mov
fcoml
insb
adc
lds
jae
les
mov
jb
or
xchg
stos
sbb
and
jo
pop
stos
sbb
jb
mov
pop
or
ss
lds
call
xchg
push
adc
arpl
je
cmp
inc
adc
pop
fsubs
and
ret
push
loopne
loopne
cmp
int3
jno
rorb
and
mov
push
xor
loop
loop
int3
push
xor
jmp
xor
mov
imul
fwait
jnp
std
fwait
cmp
xchg
mov
call
cwtl
test
fisubrs
push
inc
dec
pop
jg
xchg
aam
xchg
lret
cld
push
je
je
mov
push
cltd
pop
cld
mov
ljmp
mov
or
bound
or
sbb
or
sahf
aas
scas
shrb
xor
sub
hlt
std
xor
shl
fistpll
movsb
scas
cmp
icebp
adc
dec
cmc
popf
dec
into
cmpb
add
cmp
mov
jns
sbb
bound
int3
addb
mov
sub
push
sbb
daa
xchg
ffreep
loope
push
inc
roll
cmp
psadbw
adc
xchg
inc
inc
cmp
push
mov
adc
in
emms
inc
mov
adc
shlb
sub
push
sbb
or
jge
movsb
lea
ret
push
cltd
xchg
arpl
jp
lret
insl
test
leave
inc
sbb
lahf
push
xor
shl
dec
mov
lods
mov
sub
int3
sbb
fs
pop
dec
jae
stc
sbb
jns
cmp
fcompl
test
lahf
mov
or
pop
fs
jecxz
inc
fdivl
xlat
add
out
fsubp
adc
dec
sbbb
lret
pop
push
cmp
out
sub
cmp
mov
xchg
xor
cli
enter
out
pop
xchg
sub
sarb
xchg
add
cs
inc
jl
and
dec
sub
lret
enter
dec
inc
nop
mov
jp
pop
mov
popf
lods
call
xor
mov
sbb
outsl
push
cmp
dec
mov
push
mov
loopne
add
aam
loop
or
subl
lock
ljmp
mov
popa
xchg
or
xorb
daa
or
ja
jno
push
andb
int
adc
sbb
mov
pusha
insl
pop
popw
testl
popa
or
cmc
and
inc
adc
mov
mov
addr16
pop
cmc
call
cmpsb
or
and
mov
shrl
mov
and
lcall
stos
mov
sete
dec
push
mov
bound
out
mov
loope
mov
sub
jmp
xchg
fildll
aad
xchg
and
xchg
mov
test
enter
test
adc
inc
stc
xlat
pop
jmp
xchg
push
push
je
pop
xchg
sar
es
add
push
pop
fbstp
test
loop
cmp
icebp
inc
dec
mov
stos
xor
and
and
aam
cmpsl
add
dec
push
mov
in
pop
mov
int
pop
movsb
rolb
loopne
xchg
jl
bound
pop
aad
arpl
cs
cld
enter
adc
mov
iret
push
and
push
mov
add
aaa
loope
lret
and
pop
ret
sbb
cmp
jno
sub
scas
and
cwtl
mov
test
les
bound
pop
mov
rorl
imul
fmuls
inc
in
loop
jmp
sub
jne
push
arpl
ljmp
and
push
out
dec
dec
and
push
xorl
or
dec
fwait
cmc
dec
jae
sub
xchg
push
xor
sub
mov
rcl
ret
dec
jp
filds
daa
xlat
xor
or
jecxz
pop
imul
out
xor
jmp
and
test
dec
dec
dec
mov
jo
adcb
daa
mov
cmp
sbb
push
mov
out
mov
lock
adc
fwait
jmp
push
cmpsl
rcll
jb
add
lea
pop
dec
lock
dec
push
divb
fcomp
or
sub
push
stos
xchg
stos
lahf
scas
in
mov
mov
push
push
push
adc
sti
or
repz
mov
test
scas
jnp
mov
inc
sub
xorb
mov
leave
push
adc
stos
aad
loope
test
jne
in
dec
cwtl
cmp
and
or
cwtl
xor
in
push
insl
repnz
out
jge
sarl
subl
sub
lea
jmp
jno
ljmp
mov
jp
add
mov
push
insl
push
vpandn
out
inc
and
xchg
sub
mov
repz
xchg
pop
jge
sub
pop
inc
mov
test
mov
jae
inc
jecxz
in
pop
jle
cli
iret
or
add
xor
das
mov
js
imul
sub
or
and
and
stos
or
adc
lret
cmp
flds
int
adc
fucom
fisttpll
jecxz
popf
or
out
and
xlat
push
lock
pop
jl
push
gs
notb
mov
fstpl
xlat
mov
fsub
dec
sarb
scas
push
sahf
cmp
and
cmp
push
into
or
xchg
mov
test
gs
xor
in
inc
outsl
mov
ficomps
test
jecxz
mov
push
or
add
xor
jnp
hlt
and
je
mov
lds
hlt
xor
fsubrs
call
mov
mov
cmp
mov
push
fistpl
xor
nop
add
aaa
mov
push
pop
les
cmp
pop
fcmove
dec
aas
fwait
fwait
xchg
cmc
daa
xchg
loope
mov
xor
sub
call
test
nop
mov
iret
inc
mov
out
push
addr16
test
sub
or
sbb
mov
mov
pop
cmpsb
test
cld
jno
mov
add
ss
shll
clc
fisubs
test
mov
nop
rclb
push
out
ss
jmp
cli
jmp
jle
jne
inc
sbb
pop
fdivs
mov
cmp
cmp
or
pop
out
adc
adc
mov
mov
incl
imul
addl
and
mov
hlt
push
push
call
daa
pop
and
sub
sti
jae
shll
push
movsb
cmp
push
mov
movl
and
dec
inc
imul
std
ds
mov
xchg
adc
fwait
add
pop
jnp
int3
test
sub
std
inc
repz
mov
mov
cwtl
sbb
xchg
and
mov
xchg
scas
push
cmp
out
daa
shrl
scas
xchg
js
dec
mov
jl
jbe
ljmp
mov
fcomps
adc
dec
cmc
sbb
pop
test
bnd
mov
mov
sti
imul
inc
xor
aaa
sahf
adc
xchg
inc
mov
push
icebp
xor
jmp
gs
xor
popa
and
loopne
xor
orb
js
lods
mov
sbb
mov
cwtl
fwait
jb
int
push
push
dec
pop
in
xorl
fs
jnp
push
fwait
sub
push
push
sub
ds
lea
or
sub
adc
js
mov
loopne
outsl
sub
pop
out
mov
sbb
pop
mov
fucomp
fs
mov
int3
mov
outsb
lahf
rcrb
and
daa
mov
sub
loope
and
aaa
les
pop
push
popf
pop
outsb
xchg
sti
add
test
cs
xor
push
out
pop
lcall
dec
lret
sub
cmp
jbe
cwtl
shll
in
imul
nop
es
dec
dec
sbb
adc
fsubrp
push
sbb
xchg
xchg
jp
jl
pop
cld
lret
cmp
pop
dec
mov
out
ljmp
sahf
sub
inc
je
imull
out
jmp
ds
cmp
loope
ret
mov
imul
subl
or
daa
loop
and
cld
xchg
inc
mov
subl
js
cmp
loope
xor
mov
mov
lea
addl
fwait
dec
shrb
rcl
mov
rcrb
jp
adc
xor
xor
xor
adc
adc
arpl
inc
nop
cmpsb
sbb
repnz
fbstp
lret
cmc
cmpb
xchg
arpl
and
mov
push
jno
cmp
or
add
lds
stos
test
jge
xchg
enter
adc
jp
mov
adc
dec
xor
mov
push
gs
inc
push
int3
cmp
inc
out
es
add
xchg
lods
adc
sahf
cmp
push
add
loopne
imulb
scas
pusha
and
scas
mov
fbld
shl
add
mov
gs
sar
cld
outsl
fiadds
popf
sbb
add
repz
mov
leave
mov
fdiv
mov
lret
inc
test
movsl
cmp
mov
adc
incb
js
adc
outsl
loopne
adc
xchg
ljmp
lret
dec
fisttpl
cmp
sub
sub
pop
jno
add
lods
mov
roll
cmp
ret
movsb
hlt
shrl
movsl
test
imul
sbb
jns
adc
out
nop
xchg
out
inc
jnp
sbb
ret
nop
stos
sbb
mov
data16
sub
dec
jge
repz
nop
sbb
pop
jb
jmp
enter
out
push
sub
ret
pop
and
arpl
in
popf
mov
test
push
idivl
pop
testb
lahf
jecxz
es
xchg
arpl
dec
call
fldl
lods
cmp
or
or
push
sub
xchg
add
dec
cld
mov
cmp
push
cli
add
in
mov
sub
add
inc
pop
inc
sbb
adc
xlat
or
fwait
leave
les
cmpsb
lds
ret
jo
jecxz
mov
outsl
jne
lods
pop
das
sti
cmp
adc
cmp
orb
jp
jnp
jmp
lea
xchg
and
adc
and
adc
and
jle
enter
dec
pop
and
dec
push
jo
and
in
pop
movsl
ds
scas
ficomps
sbb
aaa
loope
call
outsb
push
mov
mov
in
insb
pushf
xor
dec
inc
and
lods
loopne
sar
cmpsl
ds
add
setnp
mov
shll
rcll
out
inc
aad
mov
repnz
sbbl
dec
fwait
movsl
pop
pop
mov
inc
mov
insb
in
je
fstpt
jl
inc
adc
movsl
dec
shll
mov
dec
pop
inc
and
push
dec
sub
cltd
stos
jbe
ljmp
jo
cwtl
push
pop
ss
xchg
dec
cltd
ss
sub
enter
loopne
ds
jmp
sub
pushf
or
sub
imul
cwtl
lea
cmpsb
das
mov
xchg
dec
adc
mov
dec
pop
cmp
mov
stos
das
xchg
test
mov
rcrl
xor
decb
lcall
repz
xlat
xchg
push
outsl
inc
mov
adc
popa
mov
lcall
imul
dec
fsubl
mov
xor
fdivl
adc
cltd
jno
and
add
add
xorps
jo
jmp
and
lcall
push
cmp
or
lret
popf
stos
push
jne
push
out
mov
cltd
push
loopne,pt
ret
testb
ss
arpl
push
jmp
shld
imulb
xor
jge
mov
mov
ror
jp
fldcw
adc
inc
xchg
adc
cs
filds
xchg
cli
xor
ja
sti
adc
jnp
lret
jg
mov
ficompl
push
sahf
loopne
popa
dec
sahf
popl
insb
test
loopne
pop
ja
sbb
mov
inc
mov
int3
aas
dec
adc
daa
cmpsb
mov
jge
push
dec
jbe
cmpsl
lods
cmc
inc
mov
negl
mov
or
addl
dec
pop
xchg
mov
orb
and
out
push
sub
outsl
call
pop
sahf
push
andw
fstl
inc
push
jns
punpckhbw
cli
test
pop
sbb
mov
std
xchg
push
lcall
cltd
xlat
loopne
adcl
inc
stos
ljmp
xchg
aad
movsl
out
outsb
mov
sub
push
add
inc
push
roll
pop
les
jle
cmp
aad
cli
in
or
arpl
inc
shl
dec
mov
sbb
stos
add
sti
cltd
push
xor
pop
sub
roll
xchg
mov
cli
cwtl
movsl
dec
mov
out
or
js
sub
cmp
cld
testl
mov
cmp
enter
ds
push
mov
sbb
or
pop
fsubs
subl
hlt
push
test
jl
pop
nop
pop
call
or
and
or
adc
xchg
std
test
sbb
dec
outsb
and
jg
cmpsb
test
xchg
and
out
inc
lods
push
call
pop
jnp
inc
in
pop
mov
mov
mov
adc
sub
xorl
xchg
jg
xchg
inc
mov
inc
insb
ja
jmp
sub
mov
dec
js
in
xchg
xor
sub
mov
idivb
and
movsb
mov
call
cmp
lret
jae
pusha
xchg
sub
cmp
shlb
test
or
hlt
mov
jno
push
and
dec
pop
movsl
and
push
inc
pop
ljmp
adc
inc
fsub
dec
jae
and
in
sbb
xor
loopne
or
pop
fwait
or
mov
mov
xor
seto
lea
mov
pop
int3
push
lahf
xor
stos
mov
xor
ja
out
jae
xchg
inc
decb
adc
loopne
push
xchg
cmp
shll
mov
hlt
loop
mov
in
shlb
sbb
in
add
push
ljmp
cmpsb
stos
fwait
xor
xchg
mov
mov
repnz
int
mov
cmp
xor
mov
push
or
movsl
outsl
movsl
mov
mov
outsl
mov
fimull
pop
xorl
in
popa
xlat
add
idivl
mov
jns
in
mov
xor
cmp
cmp
dec
or
adc
xchg
inc
int3
xchg
fnsave
into
imul
sub
pop
loope
arpl
or
xor
scas
xchg
add
xchg
mov
inc
insl
in
fnsave
aad
xor
mov
repz
xor
addb
or
pop
pop
add
adc
and
add
xchg
xchg
repnz
or
scas
in
mov
rolb
sahf
pop
pop
and
into
fldenv
in
add
jnp
adc
nop
pusha
mov
test
inc
jne
dec
hlt
lahf
dec
movsl
inc
inc
mov
lods
hlt
push
pop
or
inc
mov
xor
lret
push
mov
cmp
pop
pop
push
mov
leave
scas
ds
sbb
mov
mov
add
jmp
sbb
pop
test
popf
cmpsl
adc
cmpsl
dec
jge
aas
test
push
fisubrl
xor
xchg
out
xor
shlb
cmpsl
out
out
mov
ja
mov
add
lods
jae
inc
popa
clc
xchg
mov
das
ud2
ficoms
leave
xorps
ret
fldt
les
cltd
punpckldq
insb
inc
and
xchg
jge
sbb
xlat
push
aas
and
dec
and
rcll
add
imul
push
cmc
cmp
xchg
sub
lock
jne
mov
mov
scas
subb
and
les
push
ret
jno
xchg
out
jne
push
dec
push
add
dec
ss
lods
mov
ret
int
add
orl
in
add
sbb
mov
mov
daa
fs
mov
inc
mov
popf
or
rolb
push
inc
out
cltd
out
sbb
inc
lret
cli
or
inc
sbb
rorl
pusha
add
sbb
int3
sub
out
fisubl
cmpb
icebp
adc
mov
xlat
sub
push
daa
call
sbb
stos
mov
fs
mov
clc
fimull
sub
es
sbb
pop
or
ss
out
out
cmp
cmpsb
enter
sti
in
adc
xchg
aas
pushl
sbb
mov
push
mov
add
inc
push
inc
dec
cmp
add
ror
jae
movsb
test
adc
xor
rolb
leave
cmpsl
inc
mov
popa
in
xor
pop
inc
pop
push
test
sti
aam
jle
enter
jne
sbb
adc
or
dec
push
xchg
les
add
mov
or
adc
push
aam
das
adc
dec
test
mov
fbld
pop
jmp
xchg
loop
inc
loope
aad
sbb
out
or
jge
xor
lods
bound
in
xor
pop
shll
popf
xchg
aas
nop
adcl
dec
imul
popa
iret
jge
pop
sub
push
cltd
add
lcall
push
cmc
dec
les
les
adc
mov
xchg
sbb
jae
aaa
cld
ljmp
adc
out
bnd
imul
mov
ret
sbb
jne
add
roll
shlb
testl
jne
xor
or
popf
sbbb
ret
push
fwait
inc
cmp
lahf
ljmp
loopne
jmp
mov
push
jmp
out
adc
sti
jns
in
repnz
pop
das
mov
cmp
fimuls
and
cmpsb
aam
jmp
hlt
outsl
jnp
call
ds
add
push
push
insl
gs
adc
mov
aaa
aad
scas
jb
or
xchg
ret
loopne
int3
mov
enter
pusha
jle
hlt
insl
mov
pop
notl
clc
movsl
ror
sbb
test
sarb
popa
test
dec
xor
mov
testb
lret
adc
cmp
test
mov
mov
sti
sbb
lock
add
jnp
or
fs
pop
outsl
pop
out
sub
loopne
jle
ja
jns
stos
aas
mov
inc
mov
push
push
add
ja
xor
xor
fld
push
cmp
int3
sbb
imul
jae
pop
leave
movsb
inc
sub
or
in
jge
or
and
pop
xor
add
enter
push
out
in
scas
mov
dec
mov
lods
xlat
and
xchg
pop
xchg
imul
xor
dec
xor
repnz
std
mov
call
mov
insl
push
jp
lret
mov
pop
xor
ds
sub
adc
jmp
dec
outsl
mov
add
sarl
pop
jp
push
mov
and
push
jo
mov
mov
xor
in
lcall
jecxz
sub
push
das
js
mov
mov
pusha
jbe
mov
stos
out
jae
mov
push
and
and
jle
add
and
pushf
push
jae
xchg
inc
push
add
mov
sbb
jb
pop
dec
call
adc
xor
sarb
inc
mov
adc
cltd
pop
test
ljmp
add
cltd
or
fs
mov
dec
mov
flds
inc
and
aaa
add
addl
jnp
fcompl
xchg
push
xor
push
mov
dec
or
int
xchg
cmp
sub
addr16
loop
xor
pusha
adc
ja
cmp
pop
jne
dec
xchg
cmp
ja
pop
popf
push
dec
and
jle
aad
xor
add
leave
and
xor
xchg
sarb
push
inc
jp
mov
aaa
add
ror
adc
add
or
sahf
movsb
xor
std
aaa
push
pop
in
int
lar
ds
mov
hlt
and
mov
push
jbe
sub
int
in
icebp
pop
jge
dec
lret
popa
push
outsb
dec
xchg
push
xor
push
gs
rclb
js
or
fwait
mov
neg
jle
sbb
push
mov
mov
sbb
xchg
es
call
push
jo
pop
call
popf
aas
adc
mov
add
sub
or
mov
jae
std
enter
aas
shll
es
in
lret
jb
dec
es
pop
jb
cmp
xchg
xchg
push
ret
push
lret
sbb
mov
daa
push
and
dec
add
jo
jl
cmp
or
lret
pop
inc
mov
mov
inc
lret
inc
loopne
pop
std
cmp
lret
ret
mov
subb
addl
cwtl
mov
icebp
xchg
xor
lcall
or
and
mov
and
dec
fmuls
icebp
scas
xchg
sub
add
cmp
push
ficoml
addl
sti
jno
lods
imul
ja
and
and
fcmovnu
mov
add
imul
sti
dec
push
adc
movsl
pusha
mov
shlb
add
pusha
dec
addr16
mov
ja
test
cwtd
fildl
pop
xchg
or
inc
js
aam
aas
sbb
sub
add
add
mov
lret
push
roll
mov
jmp
xchg
or
push
cwtl
icebp
imul
xchg
ret
jbe
sub
cld
sbb
dec
inc
cmpsb
push
stc
mov
xchg
test
ds
mov
xor
gs
or
or
dec
imul
rorb
and
aaa
test
iret
xchg
mov
xchg
xchg
adc
movsb
mov
stos
lock
dec
fnstsw
push
loopne
gs
pop
push
mov
imul
push
cmp
mov
insl
xor
icebp
das
dec
cwtl
cld
xchg
push
dec
cwtl
push
adcb
jo
stos
jp
pop
sbb
stos
jle
out
xor
clc
mov
or
xchg
popf
lea
push
push
cmp
dec
test
rorl
mov
mov
xor
ljmp
mov
pop
jno
iret
dec
xchg
pop
fdivl
rep
arpl
cmpsl
leave
xchg
inc
outsb
or
push
add
add
enter
fisttpl
xchg
bound
leave
or
test
pusha
add
push
cltd
lret
xchg
stos
cmp
das
in
pop
jl
and
push
out
jg
das
mov
out
imul
push
and
jnp
sub
xchg
inc
pop
push
xchg
rcrl
xchg
iret
sti
sbb
je
pop
sbb
or
cwtl
jae
dec
cltd
dec
mov
xlat
test
ja
pop
mov
das
add
jo
gs
inc
xchg
shr
add
js
mov
and
out
cmp
sahf
adc
das
pop
iret
jae
jb
xchg
loope
gs
mov
pop
dec
aam
pop
add
xchg
mov
mov
daa
xchg
mov
mov
fbld
repz
outsl
mov
daa
dec
mov
jne
sbb
cmp
xor
push
pop
jae
fld
daa
out
cmpsl
pop
adc
stos
lds
cmp
out
lock
sbb
dec
xor
popf
push
cmp
xchg
clc
jo
je
jge
push
mov
loope
pop
lods
mov
in
daa
jae
lea
insl
stos
imul
adc
xor
movsb
icebp
stc
arpl
fs
movsl
es
cmpsb
or
or
sarl
mov
aas
inc
sbb
cmp
lahf
push
mov
into
sub
rcrb
sub
pop
pop
in
mov
out
cwtl
sti
dec
rorb
push
push
adc
dec
test
lcall
dec
xor
hlt
cmp
test
stos
dec
scas
xor
cmpsb
andl
test
mov
cs
jge
inc
mov
adc
call
jge
gs
mov
cwtl
aam
dec
mov
rorb
subb
sbb
arpl
stos
jae
add
jne
roll
sub
and
cmp
or
cmpsl
cli
es
cmp
xchg
cs
addl
pop
xchg
jnp
es
icebp
push
imul
shlb
add
push
outsl
aas
in
lods
mov
jp
xchg
dec
imulb
fstl
enter
test
repz
pop
xor
mov
popa
mov
stos
xlat
push
aas
scas
arpl
call
adc
out
and
or
test
into
lret
pop
xor
insb
xlat
push
mov
xorl
bnd
ljmp
popf
in
out
ss
int3
pop
jnp
neg
dec
test
inc
test
pop
es
jle
or
jns
int3
mov
xchg
adc
lods
cmpsl
cld
xchg
jle
lahf
popf
sbb
jae
pop
dec
push
test
arpl
sbb
push
subb
dec
sub
sub
stos
add
cmp
incl
daa
push
sbb
repz
pusha
push
addl
xor
arpl
lods
ss
in
stc
mov
test
cmpsb
or
repz
inc
daa
scas
and
inc
mov
mov
or
sbb
js
aad
and
aas
xor
or
stos
arpl
sub
and
sub
push
adc
fisttpl
fcoml
jp
cmpsl
andb
imul
addb
mov
mov
jl
scas
mov
fbld
cmc
int
push
mov
mov
mov
lods
jno
mov
add
int
adc
sbb
pusha
cwtl
into
xchg
pop
int3
jbe
loope
adc
xchg
or
jg
mov
dec
testb
scas
jmp
adc
divb
dec
adc
hlt
jb
push
js
inc
mov
out
push
push
aam
ss
cmp
orb
or
insb
les
jl
or
je
mov
jnp
or
aam
push
xchg
cltd
mov
sub
mov
les
arpl
mulb
jmp
test
mov
xor
cmpsb
adc
cli
out
mov
sbb
in
rcl
mov
clc
rcrl
xor
add
pop
movsl
push
ljmp
hlt
mov
or
xchg
imul
movsb
movsl
push
xor
inc
out
inc
adc
shl
sub
in
je
mull
test
pusha
stc
lds
rcrl
dec
sahf
imulb
in
rolb
jb
dec
pop
addr16
mov
lret
inc
lea
mov
adc
js
push
sbb
dec
cs
xchg
push
out
push
cmp
rorb
lds
mov
test
fnstcw
loop
pop
loopne
inc
lret
clc
mov
xchg
aad
popa
outsl
rcr
in
test
mov
dec
bound
or
xchg
jo
popa
and
setge
adcb
out
test
adc
sbb
pop
aaa
push
or
movb
pop
cmp
stos
pop
xchg
jg
nop
scas
rcll
cmc
hlt
arpl
lahf
les
pop
inc
repnz
adc
xor
jle
fimull
mov
pop
aam
out
fstl
push
aam
inc
inc
pushf
mov
sbb
pop
js
into
jo
mov
je
js
adc
lea
xor
and
bound
out
adc
jp
pop
dec
xchg
cmp
es
mov
aas
les
mov
jbe
cmp
in
mov
lea
lock
lds
sbb
test
cltd
jle
popf
pop
xor
pop
push
nop
mov
add
push
sbb
pusha
adc
inc
push
imul
ret
xchg
aaa
std
pop
lret
and
jae
and
dec
jns
jecxz
lret
and
inc
push
push
fnstcw
pop
mov
aad
jae
push
inc
scas
loopne
popa
pop
xor
mov
jg
pop
sbb
imul
fdivrp
pop
pop
mov
test
out
cltd
xchg
or
scas
cltd
popf
inc
mov
in
mov
sti
mov
jne
xchg
mov
push
mov
clc
scas
mov
inc
movsb
or
rcll
stos
fmuls
xor
sti
add
ljmp
mov
and
mov
mov
std
and
fsubp
push
std
push
int
pop
es
pop
sbb
outsl
and
xchg
adc
fstps
test
cmp
repnz
cmp
shl
dec
scas
popa
sub
xchg
xor
sub
xor
int
dec
mov
xor
aam
pop
outsb
pop
loop
decb
je
bound
cmc
cmp
sarb
push
fsub
pushf
xor
sti
or
xor
pop
pop
not
in
mov
and
ds
push
push
popf
icebp
and
inc
movsl
cmp
out
bound
and
mov
sbb
arpl
loope
dec
cmp
sub
iret
pusha
call
lods
xor
enter
add
xor
jno
ja
lods
xchg
iret
dec
fbld
adc
dec
and
push
mov
jmp
inc
xchg
pop
mov
into
xchg
sbb
lods
sbb
lret
push
jno
mov
shl
inc
stc
jp
pop
je
jl
xlat
jge
ds
mov
xor
or
add
xor
pop
push
lea
jb
push
cld
mov
adc
mov
push
xor
jl
inc
das
mov
mov
or
insb
cs
adc
int3
dec
std
push
xchg
push
and
scas
mov
int3
sti
scas
gs
push
and
adc
push
add
sub
scas
and
xchg
sub
imul
outsb
pop
adc
out
ret
push
push
ja
mov
inc
lret
in
fistl
mov
je
imul
push
xchg
xchg
fs
dec
jbe
lock
dec
fiadds
and
sbb
adc
rcrl
push
mov
inc
jl
aam
inc
jo
push
je
mov
sbb
sbb
fists
push
imul
repz
les
sub
sbb
mov
push
lds
sbb
jno,pn
iret
lcall
sub
push
fistl
sti
insb
xchg
inc
mov
or
std
fs
jmp
dec
cmc
insb
dec
fbld
add
sbb
js
scas
test
in
mov
xchg
mov
les
adc
mov
or
push
cli
inc
cmpsb
mov
mov
jo
faddl
dec
adc
outsl
mov
outsl
in
pop
call
sub
mov
jg
dec
ss
inc
xchg
lds
in
adc
scas
jmp
fsts
jecxz
scas
in
cmp
int
xchg
push
mov
es
dec
inc
xor
popf
jns
jge
inc
inc
cmpsb
arpl
adc
mov
aam
and
dec
mov
pop
xor
push
ja
jo
jne
mov
pop
jmp
mov
in
dec
inc
mov
loope
repz
jp
sbb
jo
push
pop
pop
loop
call
dec
mov
in
inc
fiaddl
in
mov
and
push
int3
lret
div
inc
cld
jb
dec
dec
hlt
add
xchg
push
dec
jno
fcoms
xchg
divb
testb
xchg
or
and
addr16
bound
or
stc
movsb
push
mov
das
xor
and
xchg
jl
fdivs
mov
cmpsl
dec
aam
out
fstpt
popf
in
mov
out
cmp
leave
popf
pop
xor
data16
cmp
adc
sbb
sub
cmp
icebp
xchg
jl
mov
dec
call
lock
mov
xor
mov
xchg
sub
scas
clc
push
call
das
push
sbb
sub
mov
repnz
mov
in
jo
call
mov
pop
cmp
aam
pusha
out
mov
jmp
xor
inc
movsb
xchg
inc
popa
out
jp
test
out
dec
adc
jg
lea
in
repz
std
mov
cmp
mull
nop
pop
insl
sub
lret
dec
pop
xchg
xchg
repz
into
movsl
or
cltd
adc
adc
inc
sub
shl
ljmp
xor
orl
pop
inc
sbbb
inc
push
dec
sub
clc
decl
mov
mov
add
inc
mov
adcl
jp
cmp
fstpl
loop
cltd
push
fwait
mov
xor
fimull
cld
into
das
fdivs
ret
js
push
jo
xchg
fsts
lcallw
dec
jae
cmc
inc
pop
aam
jecxz
sub
mov
cmpsl
jl
mov
ljmp
fistpl
jl
xchg
mov
sub
adc
adc
clc
dec
enter
pop
leave
popf
xchg
js
fmulp
cmp
sbb
out
push
mov
inc
dec
pop
pop
fs
pop
rorl
or
mov
adc
xor
adc
movb
incb
ret
push
sbb
imul
add
dec
out
xchg
sbb
and
das
mov
repnz
sbb
xchg
cld
mov
bound
jle
fnstsw
sub
incl
jo
xchg
aad
mov
xchg
dec
push
sbb
ret
sub
aad
in
test
xor
ret
mov
jge
push
adc
test
xchg
daa
pop
cld
jge
lahf
lock
sub
inc
adc
or
test
mul
aad
out
jecxz
stos
pop
mov
or
xor
aaa
dec
lods
hlt
jecxz
sub
push
pop
imul
push
sbb
jmp
and
lods
xchg
lret
je
scas
sahf
sbb
mov
pop
daa
dec
lcall
das
dec
push
aaa
sar
out
sub
rcrl
add
aad
sub
sub
mov
sub
adc
mov
push
or
xor
dec
push
or
insl
test
pushf
bound
cmpsl
push
scas
jae
cwtl
cli
mov
sub
cld
in
scas
daa
pop
mov
pop
mov
cmpsb
es
xchg
sbb
add
stos
jecxz
sub
adcl
cmp
sub
sub
stos
dec
push
fs
pusha
xchg
stc
and
test
pop
ds
mov
stos
mov
inc
push
fidivl
fnstenvs
jnp
jne
gs
mov
in
add
out
cmc
adc
dec
pop
add
sub
or
push
inc
sbbb
enter
divb
adc
shll
mov
dec
cmp
jg
cmp
dec
cld
sub
std
shlb
mov
and
lds
shr
or
and
popf
hlt
adc
jecxz
jnp
scas
xchg
mov
and
rcrl
dec
pop
add
js
mov
dec
out
push
stos
ljmp
xorb
mov
mov
imul
push
sub
push
mov
lds
testb
out
fwait
xchg
xor
pop
xchg
test
inc
test
ficoms
xor
jmp
outsl
dec
sbb
mov
lret
pop
in
mov
mov
jmp
adc
sahf
lahf
filds
in
jnp
or
pop
lds
dec
push
test
add
xchg
dec
cmp
sbb
negl
mov
jp
dec
pop
pop
int
xchg
cld
pushf
icebp
insl
inc
and
stos
imul
rcrb
push
popa
xor
mov
mov
add
gs
xor
scas
dec
xchg
js
push
push
loop
outsb
fists
dec
nop
push
cltd
aad
cs
movsb
mov
aam
push
aam
arpl
clc
sbb
inc
loopne
add
jns
dec
sub
enter
lahf
add
mov
mov
mull
call
and
hlt
and
and
add
mov
cmp
jbe
and
xor
sbb
int
fbld
fs
mov
call
pop
cmpsb
sbb
test
ret
cmpsb
ds
dec
bound
mov
mov
cmp
aad
mov
icebp
into
add
cli
fsubr
jmp
push
mov
pop
mov
cmp
dec
cmp
mov
or
jle
cli
jae
pop
lods
or
jmp
xchg
cmp
ret
aas
lret
nop
les
mov
mov
sbb
enter
push
push
outsb
dec
xor
push
in
gs
fidivs
jle
dec
jge
pusha
clc
mov
jo
cmp
mov
jne
daa
sub
adcb
mov
mov
iret
je
pop
sahf
je
adcb
scas
pop
add
add
pop
pop
jge
sub
lcall
xchg
xlat
pop
jl
mov
repz
out
sub
int
and
push
dec
scas
sub
sahf
loopne
or
dec
sbb
ljmp
xchg
jnp
out
testl
scas
in
mov
int
in
jp
dec
fwait
int
and
sbb
mov
fidivrl
add
pop
xor
or
cmp
fucomi
out
xchg
repnz
jecxz
mov
adc
or
mov
cltd
push
and
cmc
pop
jl
test
mov
jmp
push
and
mov
mov
jp
xor
jmp
lock
int
mov
push
lods
xor
inc
fs
retw
iret
subb
sub
dec
gs
lods
sbb
rorl
push
adc
popf
filds
idivl
push
cld
jno
lahf
xor
clc
add
xchg
push
adcb
add
and
ja
stc
es
and
adc
test
pop
inc
sbb
ret
lods
test
xor
out
add
mov
notb
cld
xorl
mov
enter
mov
or
mov
fimuls
shlb
lcall
push
pop
test
sbb
or
jecxz
and
dec
push
idivl
sub
lahf
fs
cs
jnp
lret
idiv
push
test
std
in
icebp
aam
hlt
test
jl
lock
movsb
cltd
push
jg
lds
in
aas
push
or
leave
pop
push
les
xchg
aam
je
jno
sbb
sarb
fwait
sbb
push
mov
push
dec
pop
pop
sub
movsb
xlat
inc
lock
ss
fcoml
int
or
hlt
sahf
xor
cmp
loop
lock
push
scas
fldcw
push
or
mov
dec
imul
cmpsl
inc
scas
pushf
rorb
or
ljmp
push
ret
xchg
lds
in
xor
sbb
mov
mov
sbb
int3
ja
pop
mov
pop
sbb
in
fldcw
cld
and
pop
adc
mov
movsb
int3
dec
mov
movsl
adcb
lcall
sbb
mov
add
mov
jne
cmp
mov
jnp
fsubr
mov
outsb
je
shl
fwait
or
ror
shrb
mov
push
test
loopne
loop
adc
dec
cmp
jecxz
and
xor
dec
or
add
in
jnp
xor
cmp
adc
into
stos
inc
adc
arpl
push
jge
adcb
mov
test
test
daa
mov
mov
shl
pushl
in
pushf
xor
add
aam
movsl
arpl
mov
sub
ds
mov
mov
inc
orb
pop
pop
xchg
add
push
jnp
mov
popf
stos
adc
sub
pop
dec
dec
and
xchg
lds
mov
test
xchg
or
sbb
push
mov
and
push
push
mov
fcmove
rcrb
cmpsl
sub
pop
dec
mov
inc
cltd
pop
xchg
mov
xchg
hlt
das
addb
sti
std
repnz
cmp
aad
outsl
sub
shlb
pop
sub
inc
cmp
outsl
mov
loop
aas
sbb
fnstsw
lahf
jae
inc
test
or
dec
jae
push
out
mov
frstor
sub
jl
jmp
and
xchg
adc
sti
lods
inc
outsl
popa
inc
movsb
sar
push
out
insb
shlb
sub
push
scas
imul
jne
cmpsb
cmp
cmp
add
je
sub
lret
and
dec
push
out
dec
gs
mov
out
mov
xchg
aam
adc
test
shr
sbb
ljmp
stos
or
add
adc
inc
ljmp
into
pop
or
insb
mov
xchg
or
into
or
push
fdivl
inc
mov
in
push
aas
add
ljmp
notb
aaa
loop
push
inc
shrl
sub
pop
pop
inc
daa
lods
push
xor
stc
dec
sbb
cli
cltd
shrl
fxam
inc
decb
push
in
mov
cmp
and
ss
and
dec
test
push
mov
sub
xchg
push
xor
add
mov
icebp
pop
iret
nop
scas
inc
cmpsb
sbb
inc
repz
jp
loope
fucomi
cli
mov
cmp
incl
cmp
call
pop
aam
pusha
nop
inc
jb
dec
movsl
push
sbb
js
fcomip
enter
cmp
in
xlat
sub
ret
and
mov
push
jo
dec
enter
sbb
hlt
and
fisttpll
jae
pop
sbb
cwtl
int3
cmc
stos
inc
sub
add
cld
sub
scas
loop
mov
out
sti
mov
mov
adcl
insl
loop
xor
mov
lret
inc
test
mov
sbb
pop
xchg
pop
fcmovu
insl
cs
mov
mov
push
lock
loopne
mov
popf
pop
hlt
sbb
xor
into
out
sbb
dec
xchg
lds
sarl
push
cmp
loop
xchg
adc
in
adc
js
push
cmp
cmp
xchg
add
pop
fwait
jb
xor
adc
xor
lea
sahf
add
xor
sbb
xor
mov
xlat
jl
out
pop
or
cmpsb
xlat
sti
je
mov
pop
sub
loop
xchg
loope
cwtl
add
pop
jge
sub
xorb
jno
jno
gs
popa
adc
or
ret
dec
clc
sti
loope
addr16
jbe
mov
std
ret
mov
jnp
fsubrl
xor
sti
int
lods
adc
jp
hlt
repnz
jbe
xor
sbb
les
stc
out
out
jp
sbb
sbb
repnz
mov
hlt
inc
and
cmp
test
cld
xlat
dec
sub
mov
push
test
add
pusha
out
sti
in
test
push
mov
imul
jge
mov
fists
fsubs
sbb
arpl
xchg
pop
js
pop
mov
pop
dec
dec
out
shll
shlb
outsb
in
fwait
mov
shll
push
cld
ja
stos
and
aaa
int
stc
es
or
fadd
pop
or
scas
jno
cwtl
cmp
jae
adc
push
jle
clc
lea
cmp
ret
mov
mov
mov
test
popf
and
pop
repz
cmp
xchg
xor
lods
add
mov
dec
lods
addps
pop
std
adc
sbb
ficoms
out
cli
mov
dec
pop
ja,pt
pop
ficoml
ss
outsb
cltd
mov
sbb
ss
leave
mov
mov
call
mov
imul
cmp
pop
xchg
inc
movsb
out
hlt
sub
push
pop
lea
add
jae
popf
add
cli
dec
outsb
add
jns
jns
mov
pop
pop
fcoms
adc
cmp
mov
iret
setge
mov
or
js
sub
dec
mov
out
dec
inc
xor
xchg
push
ss
cs
sbb
xor
icebp
pop
cmp
test
inc
inc
mov
cmp
sbb
and
add
or
outsl
jno
cwtl
ret
cwtl
frstor
pushf
mov
leave
loop
jae
and
mov
fsubl
insl
mov
mov
push
mov
inc
lret
cmp
cmpb
movsl
jb
push
sbb
xchg
iret
jge
cmp
sub
push
dec
fistpll
mov
cmp
cmp
rol
xchg
pop
dec
ss
inc
cmp
push
or
ficoml
xchg
mov
out
inc
rorl
pop
xchg
adc
xchg
add
insb
rolb
repnz
rcl
sub
mov
or
push
daa
in
jns
jns
sub
push
jl
add
scas
bound
fisubrs
xor
jno
mov
sahf
pushf
icebp
mov
xor
ja
imul
sub
clc
inc
adc
into
mov
jg
xor
hlt
jns,pt
pop
shrl
add
into
sub
test
clc
jmp
leave
les
std
push
dec
jge
add
pop
cs
test
test
dec
xlat
test
adc
xor
lods
fnstsw
mov
mov
lds
std
inc
push
outsb
xchg
leave
and
mov
xor
jns
push
jmp
xchg
test
and
mov
loopne
dec
pop
call
out
les
xchg
faddl
mov
dec
out
rclb
scas
cli
adc
aam
cmp
mov
leave
jle
jo
jnp
inc
es
mov
sub
and
pop
fnstsw
sub
mov
inc
leave
movsb
push
lahf
and
sub
scas
stc
ficompl
stos
mov
adc
call
sub
pop
adc
mov
in
jnp
adc
cld
hlt
leave
push
dec
sbb
mov
enter
das
xor
sub
jb
shrb
cmp
inc
ret
adc
dec
in
mov
pop
xor
mov
mov
rol
pop
cli
adc
fldt
out
pop
dec
dec
pop
mov
mov
rorb
das
push
jp
subb
sub
sbb
push
or
ret
imul
das
ljmp
mov
insb
push
insl
hlt
pushf
je
inc
rcrl
dec
xor
push
inc
jmp
into
repz
add
push
cmpsb
mov
xorl
jecxz
pushf
inc
inc
or
test
add
push
lods
inc
xchg
jae
inc
sub
pop
movsb
cmp
sbb
xchg
inc
ss
inc
dec
imul
mov
pop
mov
adc
ss
stos
xchg
in
dec
adc
sub
inc
out
pusha
fidivrs
movsl
out
mov
cmc
dec
jno
lods
dec
scas
out
repz
pop
push
or
stc
in
or
hlt
xor
les
repnz
cld
leave
mov
orb
iret
pop
int3
fimull
rclb
stos
or
and
je
test
inc
ljmp
cmp
into
out
mov
push
jge
or
clc
out
sub
cmpsb
insl
insl
and
cli
repz
cmp
mov
mov
loope
ja
mov
ret
icebp
push
lret
jae
cmpsl
lock
pop
stos
push
pusha
mov
jg
pop
pop
mov
out
out
popf
or
mov
xchg
and
mov
or
test
icebp
dec
push
xor
out
cli
sub
dec
adc
inc
rcr
cmpsl
rcrl
jg
or
xorb
xchg
repz
dec
in
sub
inc
cwtl
add
test
ljmp
adc
jns
cli
mov
scas
shrl
cmp
mov
out
vmread
fadds
fsubrs
add
push
dec
rorb
dec
pop
cwtl
pop
sub
push
jmp
rcl
cwtl
icebp
fsub
sub
dec
sbb
ss
mov
in
enter
dec
sub
adc
nop
inc
loope
ja
int
mov
ret
dec
dec
pop
lds
push
dec
xchg
cmp
jl
cmp
mov
loopne
int
mov
sub
mov
jne
mov
mov
push
insb
addb
sbb
insb
mov
push
dec
and
popa
push
addr16
test
rcrb
nop
in
inc
rol
cmpsl
inc
pop
arpl
pop
mov
sbb
das
test
aaa
push
mov
xor
push
jmp
and
xchg
adc
std
rol
in
push
je
dec
popa
or
filds
imul
fstpl
sti
cli
adc
imul
jle
mov
add
mov
cld
mov
pop
shrl
jmp
call
out
pop
pop
fidivrl
cmpb
xchg
cmovl
add
filds
rorl
jbe
clc
out
add
and
mov
push
in
or
stc
lods
jge
xchg
loop
push
daa
xchg
repz
insb
movsb
pop
iret
cmp
fimuls
out
add
in
add
inc
add
or
mov
lods
sub
movb
xor
movsb
xor
ficompl
mov
das
fmulp
jo
sbb
adc
aas
adc
int3
imul
aas
push
sub
jmp
sub
pushf
clc
sub
out
lods
mov
aad
or
push
cmc
mov
mov
rorb
pop
icebp
scas
in
add
jle
pop
cli
stc
pop
jg
lods
xchg
cmc
js
mov
cltd
push
les
xor
xorl
in
das
xchg
jne
add
xor
push
jle
nop
push
or
xchg
xchg
xchg
or
lahf
mov
ret
adc
sbb
jp
in
aaa
imul
push
aad
pop
fistpll
out
and
jle
mov
xchg
mov
pop
jae
aaa
mov
imul
adc
rcr
mov
inc
insl
leave
mov
packsswb
lret
in
mov
push
pop
les
mov
add
in
fistpll
out
or
mov
or
push
inc
jp
sbb
sub
adc
movsl
xchg
and
cltd
addb
pop
jmp
pushl
std
push
pop
cmp
arpl
lret
cld
push
fistl
pushf
lods
sub
mov
movsb
out
ret
cmpl
push
add
movb
stos
push
das
jnp,pn
movsl
inc
mov
add
and
xchg
inc
lea
sub
stc
push
sbb
sbbl
iret
es
mov
pop
pop
inc
sahf
sarb
or
add
inc
loop
pop
lods
dec
mov
or
xlat
pop
mov
stos
xor
xabort
inc
sbb
call
in
mov
das
mov
jp
xchg
add
rcll
sub
imul
enter
adc
movsl
rep
or
jbe
and
ss
rol
ret
sbb
mov
lock
jns
xchg
sbb
jb,pn
insl
sub
mov
outsb
test
shlb
and
data16
lret
lcall
mov
and
mov
xor
xchg
aas
mov
jns
adc
out
iret
cmp
dec
sub
inc
das
test
lock
in
into
mov
shll
fmulp
and
xchg
xchg
jne
outsl
jno
push
mov
lret
xor
mov
test
or
xor
movsl
lds
imul
dec
mov
loop
cs
sbb
mov
shrb
je
push
add
dec
ret
andl
jbe
ret
and
cmpsb
and
aaa
jnp
and
xchg
sti
jmp
aas
fisttpl
popa
push
cmp
push
or
out
clc
les
push
ja
aaa
cs
sub
adcb
push
push
pushf
jecxz
mov
push
rcrb
fbld
jmp
insl
lea
cli
mov
xor
imul
mov
pop
notl
insb
pop
sub
and
ror
adc
into
inc
cmp
xor
icebp
stos
pop
das
mov
js
mov
stos
mov
dec
cwtl
decl
jb
scas
jae
orl
js
jge
hlt
and
in
inc
fs
cmp
and
jmp
add
lcall
daa
xchg
fcompl
jb
icebp
aad
jmp
or
mov
pusha
mov
lock
stos
scas
ret
lds
mov
jecxz
lods
imul
mov
adc
sub
mov
xchg
push
push
push
sti
adc
popa
mov
movsl
sarl
ljmp
inc
into
sbb
xchg
add
cld
fstp
adc
std
repnz
arpl
repnz
dec
out
adc
outsb
dec
fnsetpm(287
jmp
pop
loope
xor
mov
fwait
das
imul
inc
pushf
dec
outsl
xor
jecxz
pop
mov
les
jb,pt
add
xor
cld
in
shlb
jmp
fisubs
imul
cmp
push
pop
clc
or
dec
dec
xor
mov
and
scas
scas
pop
ficoml
stc
adc
fsubr
int
push
fidivs
pop
sub
lods
popa
pop
xor
push
xorb
fildl
scas
cmp
mov
add
nop
addb
stc
jge
pop
les
fcoml
shl
enter
xchg
out
jbe
and
mov
jo
mov
jo
imul
inc
or
mov
xchg
mov
fcmovnbe
inc
dec
and
sbb
ljmp
repnz
pop
xor
test
ret
and
gs
test
std
push
add
sub
pop
jp
add
imul
cmp
stc
mov
jbe
mov
xchg
mov
inc
pop
jae
lods
ret
sub
mov
sbb
enter
int3
lret
out
jmp
mov
idivl
rol
pop
sbb
mov
jns
lahf
sub
and
mov
xchg
push
bnd
xchg
sti
sbb
mov
mov
inc
jae
mov
adc
mov
call
xchg
jb
mov
jecxz
out
cmp
push
jecxz
int3
sbb
push
fdivrl
pop
mov
pusha
stos
mov
decb
xchg
mov
hlt
int3
in
dec
sub
add
adc
push
pop
js
dec
test
adc
sub
pusha
mul
xchg
inc
push
sbb
adc
adc
add
mov
in
xor
call
mov
fistps
add
pop
sbb
lods
push
pushf
pop
lret
imul
notl
pop
ret
subl
push
push
mov
rcll
loope
inc
sbb
sbb
std
adc
sbb
xchg
mov
fstp
sbb
rolb
sub
hlt
mov
cmp
mov
mov
jle
stc
and
sti
mov
repz
testl
push
cld
xor
rclb
sub
pop
pop
mov
dec
nop
stc
cmpsb
and
int3
xchg
mov
flds
dec
inc
and
shlb
jae
add
ds
cld
jno
push
dec
lds
push
jmp
subb
lods
leave
loop
movlps
pushf
inc
inc
adc
or
fdivrs
nop
dec
pushl
paddw
addl
xchg
in
xor
call
sub
sub
jne
adc
xor
cmp
mov
or
or
es
ficoml
rclb
sbb
mov
fwait
ljmp
push
and
out
and
mov
cmpsb
inc
cwtl
jmp
xchg
cld
daa
addr16
and
sbb
mov
ljmp
lds
adc
jmp
es
fsubp
and
in
test
repz
pop
stos
ret
mov
inc
pop
test
movsb
dec
cwtl
push
dec
mov
mov
ljmp
dec
sub
and
dec
scas
xchg
lea
aad
dec
hlt
and
jnp
stos
imul
cmp
jecxz
daa
pop
pushl
push
notl
or
lock
out
push
jae
out
sbb
loope
gs
gs
sub
loopne
stos
xor
pop
mov
cli
inc
test
xor
cmp
int
jmp
mov
or
cmp
sbb
lahf
mov
loopne
add
sbb
mov
lods
push
jbe
lods
mov
or
int3
enter
into
xchg
out
insl
cli
xchg
push
push
lds
int
sub
jle
nop
loope
fwait
and
jno
out
cmp
xor
shlb
xchg
in
loopne
pop
scas
shr
push
pusha
jp
cltd
fisubrs
roll
test
xor
mov
gs
or
stos
add
jo
adc
pop
nop
out
lret
stc
sbb
fwait
pop
sbb
ja
mul
add
iret
psubb
add
stc
pop
popf
outsb
push
mov
xlat
imul
add
push
fs
sbb
jb
adc
dec
sti
push
stos
out
iret
push
lret
sbb
fadd
mov
push
xor
jecxz
and
sbb
aas
int3
adc
xchg
push
lea
cmp
fcomip
xchg
pop
xchg
in
outsl
cmp
add
stc
scas
aas
and
jg
xchg
jle
jl
in
repnz
popa
mov
mov
jo
or
xlat
stc
inc
pop
pop
jecxz
imul
jb
std
fs
xor
jge
int
sub
xchg
je
mov
push
cmp
in
fdivs
pop
xor
cmpb
stos
pop
fwait
push
ret
jge
and
sarl
pop
dec
pushl
lea
pop
and
aaa
xchg
ja
and
sbb
mov
mov
lret
and
cmp
pop
jno
mov
out
addr16
movsl
and
mov
imul
sub
and
inc
mov
dec
ret
lods
xchg
pop
mov
out
pop
xor
xchg
jb
sub
jl
cmp
xchg
xor
mov
jmp
sub
cmpsb
rclb
dec
xor
xchg
pop
jle
addr16
push
ret
xor
mov
sub
mov
cmpsb
cs
out
imul
jnp
jno
les
fisubl
ret
insl
fwait
mov
mov
bound
mov
dec
cmpsl
aad
scas
lret
cmp
fistps
mov
pop
xor
xor
pusha
bound
stc
out
inc
mov
adc
mov
cmpsl
dec
mov
add
xchg
ret
clc
mov
mov
mov
loope
cmp
mov
jb
lret
dec
sbb
add
js
mov
frstor
aas
mov
jmp
jecxz
das
inc
mov
lods
cmp
mov
push
dec
jmp
cmpsl
add
pop
arpl
ja
aad
xor
push
adc
repz
or
pop
or
cld
xor
stos
xor
shll
movsl
fcomps
in
subl
add
mov
incb
out
roll
fcoms
inc
and
fwait
test
inc
decl
lds
pop
imul
std
ljmp
in
push
push
sub
ret
scas
outsb
pop
sbb
mov
mov
lods
add
jle
les
push
cmp
jecxz
push
sbb
push
test
pop
fisttps
and
repz
flds
mov
repz
sbb
and
adc
mov
push
push
in
movsb
xchg
push
xchg
mov
outsb
sub
mov
mov
pop
pusha
movsl
enter
push
mov
fcompl
movsb
jbe
or
fnstsw
mov
stc
xor
mov
push
xor
xor
cmp
sub
xchg
add
ret
and
mov
sbb
push
push
nop
lret
enter
add
test
in
in
and
sub
das
int3
in
nop
mov
jge
xor
mov
pusha
dec
cs
pop
test
jo
add
rclb
or
sti
insl
call
add
int
nop
js
je
lods
pop
ljmp
insb
in
mov
iret
xchg
sbb
inc
fsubl
sti
xlat
test
mov
adc
dec
mov
inc
jbe
adcb
in
mov
cmp
inc
adc
push
les
cmp
inc
adc
pop
andb
push
gs
and
dec
xchg
pop
mov
int3
jo
je
push
and
leave
cwtl
mov
push
jbe
or
or
push
jge
mov
mov
shll
pop
fmulp
dec
push
ss
xor
fmul
jp
insl
mov
sub
imul
sbbl
and
push
test
xchg
int
loop
xor
jmp
adc
lock
inc
cmpsb
mov
fstpt
jge
inc
into
mov
pop
out
push
pop
xor
pusha
ds
push
cltd
in
fdivp
cmpsl
lods
push
popa
inc
sbb
cmc
pop
gs
mov
addb
pop
dec
xchg
leave
aaa
push
or
mov
cmp
icebp
lds
pop
add
sub
out
lock
dec
outsl
sub
sti
dec
pop
jb
jne
push
in
add
xchg
popa
lods
lcall
jns
sub
icebp
stc
in
mov
or
push
add
jae
insl
shr
stc
sub
add
inc
mov
sarb
dec
and
or
js
stos
in
cmp
andb
iret
mov
fidivrs
add
ds
mov
push
fcmovu
inc
xor
add
in
add
jle
push
mov
cld
sti
cwtl
mov
push
dec
push
sub
aam
cld
xor
sbbb
cld
pop
adc
daa
into
push
or
fisttps
jae
pop
jae
popf
mov
add
inc
cmpsl
fdivrl
lahf
cmp
test
les
daa
bound
sbb
jnp
dec
or
or
or
pop
mov
xchg
fbld
nop
jno
adc
stos
xchg
inc
sarb
bound
xlat
out
out
adc
popf
add
fisttpll
pop
ret
ret
mov
push
sbb
or
dec
lods
inc
pushf
sub
sub
sbb
out
mov
ljmp
jmp
hlt
inc
les
mov
aaa
es
jne
and
inc
outsl
xchg
jae
pop
xchg
sbb
pop
daa
or
stos
push
shll
not
mov
lods
fxch
leave
cltd
cld
loop
mov
or
or
cmpl
sbb
fimuls
jbe
and
and
lret
or
fxch
and
test
in
mov
push
test
dec
frstor
outsb
cmp
sahf
push
mov
add
inc
add
sbb
sbb
sub
dec
pop
dec
inc
xchg
fistl
lret
test
js
mov
fcompl
sbb
mov
or
orb
xchg
push
cmp
mov
cli
es
pop
hlt
cli
mov
test
xor
xor
jp
inc
repz
adc
mov
cs
and
iret
shrl
cmc
push
test
mov
aad
add
cli
movsb
hlt
dec
adc
shll
pop
push
call
jge
jge
cmp
loopne
ljmp
add
out
cmp
xlat
addr16
jns
sbb
and
pop
pop
test
jg
jmp
dec
jns
fmuls
push
push
call
dec
mulb
mov
bound
jns
dec
pop
mov
stc
stc
ljmp
cmp
dec
xor
fnstsw
enter
jge
or
mov
lcall
sarb
pop
xchg
das
or
jle
inc
jo
cmp
insl
push
loopne
sbb
sbb
in
sbb
add
pop
adc
mov
mov
cmp
or
jo
inc
mov
adc
aas
loope
add
aam
add
add
xor
iret
cmpb
xchg
add
xchg
sbb
ja
xor
cmpb
jns
push
sbb
insl
xor
gs
jmp
jb
jge
dec
adc
cmpsb
pop
outsb
cld
fcos
pushf
sarl
xorb
mov
inc
cs
imul
fsubrs
mov
cli
enter
add
sbb
sub
or
bnd
fistpll
repnz
cmc
enter
in
cmp
test
adc
aaa
mov
xorl
mov
fstpl
and
mov
fst
lds
leave
int
shlb
mov
jo
out
mov
pop
jno
mov
enter
jne
jmp
fcomps
xchg
aas
shl
xchg
push
mov
repz
addb
adc
int3
inc
mov
jns
push
imul
jns
mov
mov
and
enter
popa
inc
addl
js
mov
fimull
push
test
adc
mov
adc
jns
lock
push
mov
pop
xchg
adc
fs
notl
and
icebp
lods
hlt
std
mov
scas
inc
and
push
and
out
lods
popa
cmpsb
sti
adc
sub
inc
enter
xchg
mov
idivb
xor
out
pusha
test
arpl
mov
into
or
mov
stos
mov
ds
jmp
push
flds
call
xlat
or
push
mov
decl
jmp
and
push
jns
ja
mov
lods
leave
sbb
testl
movsb
jge
out
mov
lods
mov
push
sub
fcomps
or
neg
aaa
cld
inc
mov
cwtl
mov
sbb
cmpsb
pminub
fsubrp
pushf
test
fnsave
mov
push
addr16
jle
add
inc
add
scas
push
push
fwait
call
rcrl
pop
adc
push
ret
cmc
inc
stos
incl
push
and
dec
cli
inc
inc
test
jecxz
mov
pop
pop
lods
jne
daa
add
add
mov
fisubrs
mov
push
rolb
sti
stc
add
fwait
rolb
divl
pop
nop
xor
and
fisttps
adc
sbb
add
add
test
cmpsl
push
shl
mov
int
add
cmp
sub
fsubr
test
mov
sub
sti
mov
ret
inc
or
fsub
and
in
in
in
push
stos
lods
inc
out
neg
mov
loope
mov
adc
mov
jo
adc
dec
adc
sub
in
movups
ljmp
stos
mov
pushf
push
repnz
cmp
and
xchg
int3
push
fisubl
das
fcmovnu
clc
nop
xchg
jbe
cwtl
loop
test
jecxz
sbb
test
sub
mov
xor
dec
cmpsl
stos
lret
out
in
fs
loope
sbb
lret
std
andl
mov
cmp
jp
xchg
mov
xchg
pop
sub
enter
push
pop
adc
jge
mulb
clc
decb
mov
ja
es
outsl
add
or
cmp
cwtl
xchg
pop
xchg
inc
sbb
out
sub
je
hlt
std
pop
jne
adc
sub
mov
adc
mov
jg
dec
jg
push
out
stos
out
loope
dec
rcl
repnz
clc
jo
sbb
addr16
rcll
fcomip
les
dec
add
jae
dec
int
sar
lds
fwait
pop
push
dec
int
addl
test
adc
and
xchg
mov
or
ja
loop
fimuls
lea
shll
sbb
jb
cmp
or
jge
mov
imul
shll
repz
lods
jne
cli
xchg
dec
je
add
mov
adc
jae
repnz
xor
xor
bound
nop
fisubl
push
orb
xchg
pop
je
enter
push
enter
dec
inc
shl
pop
call
inc
pop
adc
jecxz
mov
or
clc
rorl
mov
icebp
lret
xchg
fidivs
mov
adc
loopne
ficomps
loope
adc
lcall
xchg
mov
bound
out
stos
sbb
fdivrl
xchg
data16
mov
out
cmp
test
add
adc
jecxz
adc
std
and
aas
push
fdivrl
ja
sbb
ljmp
in
inc
sbb
push
mov
xchg
sbb
fnstsw
xchg
mov
add
and
jl
or
mov
cli
xchg
stc
rcrl
xchg
stos
stos
inc
testl
mov
mov
xor
test
mov
inc
mov
dec
scas
jb
fbstp
and
cmc
or
fsubrp
dec
cs
lahf
daa
sub
pop
adc
out
add
xor
fidivrl
mov
xchg
scas
add
aaa
clc
dec
enter
push
and
jno
add
mov
mov
pop
int3
jns
mov
xor
or
inc
clc
je
jns
jns
stos
fcoml
jae
dec
je
adc
mov
or
bound
cmpsb
es
jmp
and
pop
xor
pop
dec
out
pop
imul
cmpsb
imul
adc
lock
or
pop
ret
subb
or
dec
fcmovne
xor
mov
jne
popa
in
lea
adc
push
inc
mov
sbb
mov
ljmp
std
icebp
xchg
popf
outsl
lahf
roll
mov
mov
addps
jg
and
jecxz
mul
mov
fdivp
xlat
sub
jl
and
lds
pop
cmpl
fbld
in
cmpsl
loop
xor
mov
int
aam
stos
ror
pop
mov
cmp
cmpsb
xor
cmp
push
das
xchg
js
mov
cmc
sbb
xor
fwait
mov
mov
outsl
xor
int
loope
test
fldcw
shlb
xlat
mov
shrb
and
pushf
imul
push
out
pop
stc
in
dec
add
xchg
aaa
ret
mov
jnp
ret
sbb
aam
shlb
lret
mov
push
fdivl
mov
fistps
stc
addr16
cmpb
lods
iret
inc
mov
mov
sahf
mov
mov
stos
mov
imul
cmpxchg
mov
and
rorl
sbb
into
iret
movsl
lahf
popf
mov
mov
loop
lds
cli
cld
lods
xchg
out
mov
jecxz
mov
add
lods
loope
sbb
xor
add
cltd
pop
or
inc
aad
xor
loop
and
mov
xchg
int3
pop
mov
push
fwait
sbb
xchg
je
testb
inc
jb
movsl
xor
sbb
and
ror
inc
addl
sbb
lcall
in
iret
inc
popa
cmp
icebp
pop
dec
cmp
cmp
or
aam
ss
mov
push
jle
add
xchg
mov
adc
mov
test
mov
cmp
cs
shlb
lods
loope
inc
push
push
push
mov
js
cmpsb
xchg
out
out
leave
pop
negl
jb
inc
inc
add
icebp
lret
loopne
jecxz
dec
xor
mov
sbb
sbb
in
xor
inc
mov
int3
and
std
test
js
test
sbb
jmp
inc
repnz
mov
loopne
push
enter
add
adc
cld
test
adc
lahf
push
xchg
sub
xor
cli
loopne
jae
jl
or
cld
pushf
pop
call
rcll
dec
fisubrl
out
xbegin
addr16
sub
mov
mov
push
push
daa
loop
cmp
mov
add
pop
dec
imul
jno
stc
cmp
sbb
lock
mov
fmuls
cmpsb
cmp
js
std
pop
fdiv
sub
repnz
icebp
sub
imul
scas
lret
imul
aam
cmova
mov
dec
add
arpl
pop
iret
mov
nop
in
outsb
cld
sbb
cmp
stc
cmpsb
fs
fldcw
lcall
cmp
dec
jl
push
scas
das
cwtl
std
leave
lea
loop
mov
push
sbbb
and
push
lds
inc
sub
adcl
pop
rolb
imul
in
mov
xor
icebp
mov
xchg
rcr
daa
mov
push
andb
mov
mov
mov
gs
aaa
dec
idivb
mov
push
fwait
call
jbe
jne
pop
sub
popf
pushf
inc
loop
push
dec
outsb
xchg
cmp
notl
mov
inc
pusha
int3
pop
hlt
pop
inc
jmp
lret
stc
push
test
cwtl
sub
mov
sbb
test
pop
mov
scas
cwtl
pop
testb
out
clc
repz
adc
xchg
jmp
test
bound
xor
push
mov
jns
mov
lock
push
cli
jp
fwait
jecxz
mov
mov
push
icebp
inc
cmp
add
pop
sbb
std
add
and
std
jmp
aaa
mov
sub
lds
jnp
dec
fadds
rcl
int3
insb
divb
ret
mov
cmp
call
and
jecxz
mov
add
int3
xchg
push
test
xchg
sbb
das
out
cmp
dec
pop
jp
xor
sub
dec
shr
adc
cltd
lret
leave
xchg
popa
paddusb
and
inc
add
addr16
inc
popa
mov
push
fwait
popa
xchg
jno
sbb
xchg
cmpl
lods
fs
bound
test
insl
pop
pop
mov
lret
mov
testl
aad
mov
sbb
push
icebp
icebp
adc
rcl
sbb
cltd
sub
push
lds
andl
mov
inc
sbb
sbb
push
or
jo
mov
mov
adc
fdivl
loope
cwtl
int3
and
ja
addb
mov
sarb
icebp
xor
mov
jp
sahf
cmp
adc
mov
in
aas
mov
sbb
ja
adc
xchg
movsb
aas
inc
and
sub
rorl
or
add
sbb
cs
mov
pusha
mov
cmp
mov
sbb
out
cltd
jb
adc
push
mov
cli
insl
push
dec
mov
fstp
and
jle
jmp
dec
lcall
scas
out
sub
lahf
sbb
pop
shrl
dec
push
add
or
mov
cli
shlb
in
mov
aas
imul
push
and
imul
xor
fwait
in
mov
ljmp
xchg
mov
div
data16
lahf
test
jo
pop
orb
mov
ds
push
sahf
sbb
lock
cmp
loopne
sti
js
cwtl
push
sbb
test
and
cmp
mov
pushf
push
mov
imul
and
inc
or
fs
in
in
pop
movb
inc
sbb
pop
inc
movsb
sbb
inc
not
movsl
insb
mov
addr16
sbb
inc
and
pop
add
mov
and
popa
pusha
dec
push
popf
mov
jbe
inc
mov
sbb
mov
add
inc
jmp
mov
test
push
icebp
rcll
and
jecxz
dec
lret
jecxz
stc
std
push
imul
rolb
push
adc
fistpl
pop
lahf
loopne
es
repnz
jno
ja
ljmp
add
pop
ss
roll
xchg
insb
imul
push
push
insb
xor
cmc
xchg
pop
fimull
repnz
pop
lds
mov
push
and
xor
test
call
leave
and
js
repnz
and
push
xor
mov
stos
jae
push
push
push
rolb
sub
sub
mov
sbb
mul
jae
xchg
ret
dec
je
ss
add
scas
fdivs
adc
add
or
dec
xor
mov
ds
push
enter
ljmp
sti
int3
push
lcall
pop
aas
in
pop
lock
mov
sub
leave
adc
int
mov
inc
xchg
in
aaa
sub
or
mov
das
inc
push
inc
jecxz
pop
andl
jns
subb
xor
xchg
pop
lods
mov
ljmp
mov
dec
mov
hlt
orb
outsl
mov
ss
or
xor
and
mov
cmpsb
jge
xchg
jp
xlat
push
in
pop
xchg
push
in
cmp
xchg
fdivrs
push
cmc
xor
test
in
and
push
in
and
movsl
pop
icebp
mov
inc
fsubs
jmp
jmp
fwait
push
mov
ljmp
mov
adc
push
mov
mov
popf
mov
je
cltd
xchg
lcall
jp
int3
xor
xchg
mov
cmc
add
mov
pop
jmp
add
fmuls
insl
cmp
fwait
int
cmp
leave
cmp
jno
in
fwait
arpl
jb
sbb
adc
and
sub
cmp
repz
pop
mov
rclb
lcall
loope
xchg
xorl
or
sub
inc
xchg
or
out
lods
addr16
push
rolb
fs
lock
iret
insl
shll
js
popa
adc
lock
mov
call
mov
and
lods
cld
cli
inc
jne
jecxz
fldz
out
or
inc
ds
xorb
outsb
mov
loopne
add
hlt
or
lret
gs
nop
sbb
repz
mov
out
push
out
sub
fidivrs
pop
and
in
lret
lcall
lcall
out
mov
in
cld
adc
rcrl
adcl
adc
out
pushf
push
jg
mov
nop
scas
mov
push
cld
ret
cwtl
ret
mov
adc
mov
cld
mov
lock
or
insb
mov
xchg
ret
mov
pop
es
es
gs
stc
jp
push
cmp
inc
int3
xlat
nop
push
fisubrl
dec
jnp
or
roll
sarl
imul
adc
xchg
test
in
push
mov
mov
shrl
xchg
loopne
lods
dec
add
pop
push
sbbb
dec
outsb
adc
les
xchg
xlat
cmp
mov
mov
arpl
les
adc
xor
inc
mov
cmp
pop
rcll
ret
sbb
rcr
jge
mov
adc
mul
pop
cmp
fcomip
decl
cli
aas
cmp
mov
and
jns
inc
mov
arpl
add
mov
or
xchg
lret
or
faddl
int3
div
cwtl
mov
mov
ret
inc
inc
fsubs
sbb
cmp
or
aad
inc
pop
sub
outsl
xor
orb
mov
xchg
jp
push
jl
dec
sbb
jg
scas
push
push
lods
arpl
mov
int
pop
insb
cmp
movsb
notb
xchg
nop
mov
jmp
adc
mov
dec
cmp
mov
ret
stos
lds
adc
xchg
cmp
je
inc
ljmp
mov
xor
hlt
mov
sub
mov
sbb
js
stos
cmpsl
jne
scas
bound
in
adc
out
pop
cmpsl
push
add
out
insb
mov
mov
push
enter
js
aas
popa
and
push
test
sbb
popa
or
out
sbb
loop
jae
inc
enter
push
and
out
and
das
addr16
repz
push
out
jmp
mov
mov
push
mov
fdiv
pusha
test
mov
lcall
xchg
pop
xchg
js
pop
dec
inc
cld
or
xchg
icebp
enter
jl
sub
add
lahf
push
cmp
daa
xor
je
in
push
shl
and
data16
pop
lods
fiaddl
sbb
inc
xlat
dec
mov
and
adc
adc
popa
lods
xorb
push
fucomp
cmp
cmpsb
cs
jo
movsb
ret
push
outsl
cmp
mov
push
loopne
lods
pop
dec
popa
adc
dec
dec
push
inc
sarb
mov
hlt
sbb
mov
inc
push
jecxz
out
addr16
add
jle
xor
hlt
divl
mov
jle
repnz
das
lahf
popa
mov
xor
mov
mov
mov
andl
test
push
push
lahf
dec
or
addl
jb
pop
adc
sbb
mov
add
pop
pop
push
lcall
stos
test
jno
lahf
mov
sbb
xor
xor
pop
and
pop
push
add
cmp
sti
xor
outsl
push
rolb
dec
clc
dec
loope
enter
inc
push
cmpsl
inc
or
fldenv
push
sbb
sbb
xchg
adc
adc
mov
dec
mov
stos
jo
pop
mov
mov
inc
mov
insb
pop
pop
pop
and
jns
add
mov
dec
cmovl
sbb
clc
add
cs
push
aad
cmp
and
xchg
cmc
mov
and
cld
subb
mov
and
enter
pop
xchg
mov
lock
mov
ds
daa
mov
fwait
test
int3
push
push
mov
lods
add
or
cmc
jnp
es
out
xor
xor
jae
incl
imul
inc
neg
xchg
aam
popa
sub
scas
and
aad
fisttpl
jp
sbb
jns
int3
push
dec
loop
inc
sarl
adc
adc
xchg
scas
dec
repnz
test
mov
adc
sbb
outsb
cwtl
in
xchg
out
adc
fsubr
jle
cmp
fdivrl
cmc
pop
jl
inc
adc
lock
popf
rcll
scas
mov
mov
out
loope
sub
xor
mov
rcrb
sub
mov
fdivs
xor
pop
jb
sub
inc
shlb
add
mov
inc
cmp
inc
pop
mov
xor
cltd
push
nop
int3
imul
sbb
fcoml
adc
enter
adc
cmc
aas
and
xchg
xor
or
in
shll
jo
cs
xchg
or
dec
imul
adc
xchg
sub
into
xor
repnz
insb
inc
mov
imul
xor
insb
mov
repnz
xor
pop
data16
pop
xchg
mov
dec
mov
int3
loop
push
scas
pop
enter
mov
orl
pop
std
pop
in
push
movsl
les
iret
push
jg
pcmpgtb
test
or
push
js
mov
test
leave
in
cmpsl
push
and
mulb
xchg
shrb
push
icebp
cli
stc
adc
mov
and
arpl
push
sbb
movsb
jb
pushf
cmp
xor
fidivl
or
or
and
lret
jp
cmp
gs
cmp
inc
in
test
imul
imul
mov
cmp
xchg
and
frstor
inc
push
adc
test
and
pushf
popf
and
mov
sub
fucomp
loop
or
dec
mov
xor
and
int
clc
dec
pusha
ljmp
out
sub
orb
hlt
xchg
int3
movb
fstps
les
add
add
add
sub
test
and
mov
rcrb
pop
push
out
xchg
or
dec
or
daa
sti
push
cmpsl
mov
xchg
or
mov
adc
mov
jae
popf
roll
daa
jp
shll
testb
imul
cmp
jmp
pop
dec
jmp
push
mov
and
xchg
data16
mov
push
inc
rorb
add
push
add
jge
test
in
jne
fsubr
andb
fdiv
cwtl
mov
and
outsl
sbb
lea
mov
lock
enter
xchg
scas
and
xor
aaa
lret
pop
sub
outsb
or
pop
shlb
arpl
cmc
ret
cmpsb
rclb
or
xchg
iret
insb
mov
mov
ret
xchg
pushf
stos
push
sub
push
cmp
sub
push
cmpsb
mov
sub
mov
ds
jns
out
enter
clc
fdivp
mov
jae
aaa
gs
nop
inc
arpl
add
sbb
push
pop
dec
sub
loop
repz
xor
mov
dec
mov
cmp
popf
or
fsubrp
mov
or
cwtl
jns
sbb
clc
outsb
pop
roll
fsubrs
pop
or
sub
int3
gs
cli
out
push
fmuls
push
pop
xlat
mov
inc
sub
lock
lock
or
mov
mov
insb
lcall
pop
mov
popa
mov
push
add
arpl
xchg
jae
aas
hlt
outsb
add
xchg
jne
loopne
xlat
mov
movsl
xchg
loop
aam
repz
sub
dec
lcall
lea
mov
adc
sbb
cmp
cli
jp
repz
ja
enter
push
out
dec
mov
in
and
aaa
insl
pushl
or
mov
lret
or
mov
addr16
push
xchg
cmpsl
loope
addr16
push
cltd
dec
xchg
cmp
and
dec
dec
xchg
cltd
jle
fildll
ljmp
scas
adcl
mov
and
aam
jp
jge
sbb
scas
push
sub
mov
call
fnstenv
jne
push
ret
rorl
incb
cmpsl
add
or
inc
aam
or
mov
in
adc
adc
loop
jmp
mov
cmpsl
pop
mov
les
lret
pop
add
sbb
dec
mov
nop
mov
jbe
movsl
sahf
or
cmp
mov
call
into
mov
loopne
addr16
je
movsb
sbb
sub
cwtl
jo
cmp
xorl
insb
test
or
insl
xor
stc
inc
adc
aad
hlt
ficoms
imul
fimuls
loope
mov
test
add
out
bound
fsubrs
and
pop
inc
push
mov
sti
push
pop
cmpsl
or
jp
cwtl
add
mov
ja
adc
inc
lret
lds
jbe
das
insl
sbb
stc
mov
push
mov
xchg
daa
jmp
sbb
je
fbstp
lods
push
jo
and
repz
lret
xor
or
and
jbe
xchg
push
icebp
cmpsl
aam
jl
or
ds
repnz
pop
sbb
pop
push
lds
daa
loop
loopne
and
mov
mov
lcall
add
dec
filds
jnp
sub
orb
xor
and
jns
inc
jle
mov
dec
xchg
fcomip
cwtl
mov
push
dec
adc
xchg
xchg
mov
fimull
loop
test
sub
mov
jne
repz
scas
push
mov
arpl
xor
add
imulb
iret
jecxz
cli
adcl
lcallw
scas
mov
pop
adc
push
mov
nop
out
in
enter
int
pop
enter
add
xor
int3
cmp
popf
pop
and
push
cmc
arpl
jl
xchg
jmp
sub
adc
mov
mov
imull
lea
cmc
mov
mov
push
scas
cmp
test
lret
or
test
xlat
out
push
sarl
gs
fildll
mov
icebp
aad
test
out
jb
cli
push
inc
xchg
sti
and
xchg
add
mov
hlt
or
mov
mov
enter
adc
cs
rcl
jo
push
mov
pop
push
lock
mov
dec
outsl
or
add
jge
xchg
bound
cmc
inc
fbstp
adc
inc
cmpsl
mov
test
pop
stos
gs
dec
cmp
clc
jecxz
icebp
pushf
mov
push
jne
pushf
pushl
xor
ret
or
fwait
pop
xchg
push
mov
xor
sbb
invd
shrl
jle
out
call
cs
clc
stc
or
mov
ds
and
aad
add
fdivrs
adc
jp
pop
test
cmc
mov
inc
sbb
das
dec
mov
sub
dec
outsl
and
frstor
dec
or
int
aas
jl
jp
scas
das
cmp
sbb
dec
xchg
push
or
mov
and
cmp
dec
loope
pop
xchg
push
mov
sub
cmc
push
cli
and
repnz
popa
lds
daa
rol
xchg
test
test
sbb
sub
mov
je
dec
je
sbb
outsb
leave
xor
mov
in
sub
insl
lods
pop
push
pushf
mov
ficoml
xchg
mov
mov
mov
jmp
or
mov
or
dec
jbe
ja
cmp
inc
loopne
mov
xchg
pushf
in
jbe
mov
test
push
mov
test
or
decb
data16
mov
adc
pop
sub
fcoml
push
dec
pop
es
sub
pushf
in
loopne
rcr
mov
cmpl
cmp
mov
lods
cs
sub
or
push
xchg
sub
mov
pcmpgtd
or
jp
dec
stos
lea
pop
icebp
in
js
gs
xor
and
bound
add
lret
jg
mov
psubusw
loopne
inc
pop
imull
sbb
aad
mov
dec
fcmovnbe
inc
subl
add
test
jb
or
mov
out
dec
mov
fcompl
xor
push
stos
pop
dec
pushf
adc
loop
dec
mov
xor
or
scas
mov
lods
and
stos
or
pop
adc
jecxz
test
je
mov
sbb
jmp
mov
push
insb
mov
jo
repz
cmpb
adcl
add
xchg
pop
shll
shl
imul
aam
xchg
fcoml
jno
pop
mov
popa
add
movsb
xor
cmp
mov
loop
mov
lret
repnz
repz
aad
out
pop
mov
jne
nop
lea
ret
xor
xrelease
leave
mov
sub
push
add
mov
out
dec
scas
ss
cmp
lods
adc
inc
test
sarl
repz
push
or
sbb
sub
enter
out
inc
inc
or
fcoms
xchg
adc
in
add
sbb
sbbl
and
cwtl
jbe
mov
mov
movsl
xor
jle
cmp
dec
daa
sbb
into
movsl
test
xorl
cmpsb
adc
and
mov
push
fmuls
sub
dec
test
pop
mov
and
aam
roll
sbb
inc
in
adc
add
xchg
int3
adc
ljmp
and
sarb
jb
lahf
and
out
std
mov
adc
sbb
popa
mov
popf
sbb
pop
xchg
ds
sbb
or
outsl
lock
inc
jp
sbb
je
sbb
pop
test
lret
rclb
stos
notl
add
bound
inc
xorl
mov
sti
xchg
add
cli
pop
movsl
mov
sbb
mov
lcall
call
jae
and
bound
leave
pop
in
cmc
aaa
movsl
into
hlt
in
xlat
std
inc
enter
call
push
mov
ljmp
lret
leave
push
sub
movsb
test
out
inc
mov
xchg
adc
out
sbb
push
out
pop
inc
fstpl
lea
sarb
insl
cmp
mov
sahf
xor
push
nop
int
sub
jb
inc
jae
lahf
stos
push
xchg
fsubrs
pop
xchg
sub
sbb
xchg
and
scas
leave
mov
in
pop
jge
xchg
lock
cli
jecxz
inc
inc
sub
icebp
mov
idivl
rep
cmpsb
mov
mov
push
adc
ds
clc
pop
mov
lret
xchg
adc
and
xchg
and
xor
cmp
ds
mov
shll
pop
cmpsb
pusha
jne
mov
cmp
sub
and
aaa
or
and
clc
icebp
fucomip
stos
sbb
jnp
cmpsl
scas
xchg
fiaddl
icebp
imul
push
jae
and
cmp
jmp
mov
ficoml
andb
pusha
das
cmp
fwait
mov
adc
or
jge
xor
mov
fs
js
xchg
sbb
mov
test
fs
push
mov
jecxz
lock
jbe
fldl
test
dec
out
jle
orl
mov
repnz
ret
in
mov
jbe
sbb
test
ret
mov
inc
jecxz
pop
xchg
and
ds
daa
cmp
fwait
sub
or
inc
push
scas
pop
fnstenv
iretw
xlat
xor
es
push
sub
sbb
test
xor
push
mov
lret
hlt
fidivrl
inc
sbb
mov
ss
insl
jmp
mov
push
or
cmc
idivl
mov
add
inc
push
mov
adc
sub
stos
adc
mov
xchg
jns
mov
pop
jmp
jge
push
mov
mov
pop
xchg
sub
and
cmc
insl
das
pop
lsl
ret
call
sbb
or
mov
je
adc
pop
fwait
cs
sbb
iret
inc
xor
hlt
popf
gs
pushf
mov
into
jmp
lret
xchg
stos
mov
fwait
pop
int3
mov
punpckhbw
jne
mov
out
js
push
lea
shl
push
sahf
push
xchg
add
mov
and
lea
cmp
mov
insl
fcoml
mov
cmp
flds
js
lahf
ret
xchg
adc
jmp
pop
pop
pop
jmp
test
mov
outsl
repz
push
stc
push
xor
jb
insl
mov
loop
rorl
dec
dec
sti
xchg
stos
fwait
mov
test
mov
out
jl
dec
or
repnz
dec
and
bound
xchg
sub
sub
je
cli
lret
cmp
or
pop
lea
lcall
sub
dec
xchg
xchg
pop
mov
ds
int
mov
gs
lods
push
dec
pop
mov
add
push
add
imul
and
jl
adc
inc
pop
movsb
lcall
jns
fcomi
ss
pop
mov
fucom
and
or
dec
daa
fwait
mov
mov
mov
call
add
aam
test
fdivrl
or
cltd
mov
out
das
rdmsr
add
mov
jns
pop
ds
pop
sahf
repnz
out
aaa
pushf
dec
sti
pop
or
fldcw
cli
add
scas
mov
xchg
ljmp
cmc
fwait
mov
cmpsl
fdivs
fdivrp
cwtl
adc
push
mov
mov
sub
call
and
lret
std
xchg
jne
dec
sbbb
sbb
push
push
mov
mov
pop
xor
loope
jp
mov
cmp
test
sbb
rcll
pop
mov
fucomp
ds
xchg
imul
mov
cld
cmp
sub
xchg
xor
loopne
push
pop
fs
ds
or
sbb
pop
add
xor
scas
enter
xchg
imul
imul
addl
add
sub
cs
pop
adc
adc
mov
cmp
shrl
pusha
out
out
rorl
aas
mov
cmpb
jl
xchg
xlat
dec
loope
xor
ds
add
inc
dec
cs
xchg
ss
imul
and
jp
push
cmpsb
sbb
add
jne
aam
and
jb
mov
cmp
cmp
sahf
mov
outsl
enter
jmp
jge
push
js
pop
imul
push
inc
cmp
sub
sbb
sbb
or
std
mov
idivl
loope
jno
mov
inc
push
fwait
pop
int3
mov
jnp
mov
adc
sar
aaa
or
je
mov
stos
jb
ja
rorl
inc
push
cmp
in
adc
sbb
pop
fcmovb
add
aaa
cmp
loope
sub
or
adc
lahf
or
push
inc
lock
adc
push
movsl
push
je
cmpsb
xchg
cmp
adc
xchg
ss
in
push
cmp
jmp
dec
ficomps
sbb
xor
insb
sbb
imul
push
lcall
xchg
das
lds
out
orb
push
push
test
pusha
or
mov
mov
outsb
sbb
dec
inc
mov
sub
iret
jmp
roll
lret
or
mov
outsl
push
and
test
adc
cld
mov
add
xchg
sbbb
scas
add
hlt
cld
mov
jmp
fwait
adc
imul
adc
mov
push
adc
xor
sbbl
iret
ljmp
cmp
loope
sbb
lret
sub
shll
fisubl
push
in
xorb
xor
ljmp
int
test
pop
dec
ja
insl
jno
inc
pushf
std
scas
out
insb
push
test
movsl
mov
pop
pop
inc
cmp
dec
int
mov
add
cli
or
xchg
ror
loopne
iret
loop
mov
jae
loope
and
adc
sahf
pop
cmpsb
insl
cltd
jle
and
icebp
inc
cli
imul
testl
adc
mov
inc
rol
mov
pop
inc
je
cltd
inc
scas
iret
push
sbb
cmpsb
inc
inc
jge
pop
cmp
scas
xor
inc
lret
sbb
xchg
or
fwait
mov
push
fstps
loopne
lods
test
cmp
stos
xorb
mov
imul
adc
lea
movd
cli
stos
imul
jge
sbb
pop
pop
pop
xchg
hlt
inc
push
cmpsl
mov
fsubrl
lods
imul
cltd
stos
and
mov
out
mov
or
cmp
movsl
mov
jns
pop
xor
mov
mov
sbb
inc
mov
mov
mov
jmp
push
mov
add
shrb
insl
enter
cmpl
mov
mov
sub
mov
push
movsl
jecxz
push
push
shlb
sub
stc
faddl
xchg
jmp
js
inc
xchg
call
or
jnp
dec
ss
or
jno
dec
pop
cld
add
mov
xlat
clc
mov
sarb
rorl
mov
fists
outsb
pop
mov
dec
aam
inc
cmpsb
mov
push
mov
and
add
decb
popf
add
repnz
addr16
mov
mov
inc
sbb
xchg
fsts
hlt
bound
bound
jne
mov
dec
cltd
das
loope
test
adc
xchg
add
add
push
sbb
arpl
pop
adc
lock
pushf
in
test
push
mov
stc
stc
inc
or
sub
sbbb
add
call
dec
jp
fs
fists
xor
sub
ss
jle
stc
jl
jmp
xchg
fdivr
repnz
mov
ret
fnstsw
out
bound
movsb
out
js
push
in
push
scas
sub
es
pop
std
sbb
inc
xchg
icebp
lret
out
add
lcall
jae
pop
jns
cmpsb
loop
aam
xchg
adc
fldl
mov
push
adc
mov
pop
adcb
scas
outsb
scas
cs
xlat
push
xor
inc
sbb
lea
int3
mov
pop
push
xchg
out
add
inc
sarb
sbb
cmc
jns
or
and
ficompl
in
and
pop
imul
push
pop
out
ret
andl
mov
sbb
je
mov
sarl
insb
adc
cld
sbb
xor
andl
imul
lretw
pop
adc
fmull
in
xor
enter
out
fimuls
pop
sub
movsl
push
sbb
das
repnz
adc
sub
lods
shll
cli
out
mov
push
add
cmp
lods
xchg
adcl
mov
fs
fildll
sub
lret
add
cmpsl
test
add
jbe
jecxz
mov
leave
js
xchg
inc
cltd
gs
stc
xchg
dec
push
jbe
pop
inc
or
push
sub
push
mov
pusha
push
xchg
mov
pop
pop
mov
and
stc
fwait
and
or
mov
xchg
ljmp
cmp
jle
cmpsb
pop
push
add
fidivrl
mov
and
mov
ljmp
jnp
or
xor
sub
call
aas
push
and
pop
scas
pop
outsl
lods
xchg
fisttps
mov
mov
stc
push
inc
daa
cmc
aam
shll
pop
xlat
xor
int
jbe
mov
mov
and
xchg
movsb
int3
xor
or
mov
xchg
cmp
enter
inc
aad
cmp
or
push
lahf
lret
and
jl
lds
bound
shrl
dec
push
push
or
loope
mov
or
lahf
xchg
dec
xchg
pop
and
xchg
jnp
loopne
cmp
jmp
lret
leave
mov
stc
add
pop
and
mov
dec
mov
int
mov
icebp
repz
jns
sbb
ret
fstpt
das
mov
imul
ret
enter
mov
adc
jo
enter
mov
add
add
cld
cmp
dec
inc
in
or
push
mov
and
iret
icebp
inc
xlat
ret
xlat
repz
test
sbb
je
fs
sbb
fs
jp
or
hlt
loope
sub
inc
ss
aaa
pop
xchg
lret
or
mov
adc
pop
xor
stc
add
adc
jnp
push
lods
jp
incb
xorb
out
sti
push
lods
or
cmc
dec
aas
mov
addl
lods
insl
cmp
mov
popa
jl
orl
popf
loopne
inc
push
push
add
push
lods
imul
test
push
jno
push
mov
push
add
roll
imul
lret
lea
repnz
mov
add
lcall
data16
popa
cmp
xchg
das
mov
jg
xchg
mov
jae
aas
iret
push
insb
imul
repz
rorl
cmp
inc
xor
clc
fnsave
jg
shlb
xor
or
das
in
push
loope
testl
push
push
add
cmpsl
cmpsb
add
je
mulb
cli
cmp
pop
push
stos
dec
pop
lods
loopne
mov
dec
or
insb
sbb
push
clc
int
push
and
mov
movsl
dec
je
adc
in
cli
pop
nop
adc
cmp
adc
pmovmskb
iret
fsub
outsl
hlt
xchg
cld
lea
sbb
jp
subl
daa
jae
cli
daa
dec
call
scas
pandn
lret
je
xor
test
push
pop
sbb
xor
sbb
repz
or
loopne
std
dec
out
mov
imul
pusha
mov
lcall
jae
pop
adc
push
pop
mov
jbe
push
inc
dec
test
lock
dec
push
xor
iret
aas
fidivrl
fcoml
pusha
inc
add
popf
or
into
popa
adc
push
or
popa
jmp
or
dec
adc
sbb
mov
lods
decb
mov
xor
loop
imul
imull
pushf
fincstp
xchg
shl
mov
cmpsb
xchg
movsl
adc
into
and
jmp
fcoms
sbb
xchg
add
into
sub
inc
cmpsb
lret
mov
adc
mov
mov
lret
negb
xor
dec
call
mov
das
call
insb
outsb
outsl
inc
jo
aas
inc
out
mov
sbb
mov
or
mov
push
pusha
add
repz
mov
jle
cmp
out
sbb
cmp
inc
scas
jno
sbb
loop
jb
loopne
push
addb
adc
rorl
icebp
aad
sub
add
lock
sub
outsl
in
cmc
shll
cmp
mov
stos
cmp
sbb
mov
jl
mov
ret
mov
rolb
mov
sti
aam
aas
aaa
jp
mov
shlb
mov
pop
push
nop
jmp
aam
repz
in
mov
stos
push
inc
cmp
imul
push
jmp
mov
cmpsb
fwait
and
fdivr
js
xor
pop
cmp
or
push
das
mov
xchg
out
out
adc
fisttpll
sarb
cmp
lahf
sub
sar
add
adcl
arpl
jmp
jl
je
jp
pusha
push
dec
loop
or
xor
push
sbb
jnp
fldenv
adc
push
xchg
lret
push
aaa
add
test
or
ret
aad
jg
jno
sub
mov
cmp
les
jno
hlt
xor
mov
xchg
pop
pop
test
addr16
jle
shrb
in
iret
mov
int
jg
stos
and
int3
rcll
jmp
mov
mov
cltd
add
sahf
cmc
sbb
inc
outsb
dec
mov
mov
jmp
xchg
lock
inc
cmpsl
cli
in
pop
in
mov
mov
sbb
mov
pop
inc
mov
xor
jge
mov
inc
xchg
or
outsl
or
icebp
mov
pop
js
lea
mov
roll
pop
inc
imul
aas
movsl
mov
adc
into
in
xchg
test
orb
lods
popl
mov
inc
pop
sbb
xchg
repz
mov
push
add
lret
push
aad
in
fldcw
dec
push
mov
jmp
push
and
test
stc
insb
mov
jl
inc
adc
mov
sub
jne
sub
mov
imul
and
call
cmp
ja
push
daa
and
adcl
sar
jge
or
loop
aaa
cmp
call
cmpsb
mov
scas
shll
movsl
or
loope
jp
aaa
sub
cs
or
pop
test
cmp
xor
sbb
bound
ljmp
jl
adc
imul
xor
push
xchg
mov
shl
inc
repz
mov
xchg
pop
pop
xchg
ja
fldenv
setb
xchg
push
xchg
or
test
add
int
pop
cmp
cld
mov
xor
sbb
je
pop
jle
jle
iret
cmpl
xchg
mov
js
mov
aam
xor
mov
dec
cmp
je
or
pop
int
scas
sbb
or
aad
jnp
out
sbb
pop
loop
lods
stos
movsb
push
jle
jg
mov
jg
push
call
mov
imul
mov
in
sarb
rcll
jmp
fstpt
mov
push
push
jmp
and
lcall
xor
mov
lds
enter
nop
imul
sub
pop
or
fdivrp
in
lods
enter
mov
xor
mov
mov
adc
shrb
or
stc
add
xchg
fnsave
jp
movsb
hlt
rcrb
or
in
mov
mov
pop
adc
nop
cmpb
xchg
add
add
push
jne
ficoml
mov
aas
lods
popa
aas
xlat
repz
pop
push
push
movsb
stos
out
cmpsl
push
push
ja
shr
lea
ss
in
fcmove
mov
shll
leave
dec
dec
and
push
inc
mov
mov
add
lods
dec
bound
sub
dec
in
clc
lret
xor
jl
pop
push
nop
addr16
and
cmpsb
xchg
pop
nop
pop
popf
ss
test
leave
test
sahf
scas
adc
jmp
add
lods
int3
xchg
negl
pushf
movsb
adc
xchg
ret
xrstors
fldenv
push
cmp
lea
or
sub
mov
xchg
push
dec
inc
in
pop
cli
imul
and
nop
push
ret
sbb
pop
xchg
pop
xchg
iret
mov
or
int3
lret
mulb
imul
pusha
int3
cltd
mov
adc
mov
mov
pop
or
xor
adc
jae
cmp
xchg
movsb
stc
or
sti
test
incb
rcrb
sub
or
out
mov
add
jle
stos
mov
gs
xchg
ret
and
sub
cmpsb
dec
mov
xchg
addl
ljmp
xor
xchg
mov
andl
inc
stos
xchg
mov
pop
je
cli
hlt
xchg
popf
movsb
sub
xorl
popf
jecxz
into
nop
lds
leave
xor
mov
adc
arpl
mov
fwait
in
fldt
push
mov
pop
mov
or
icebp
fwait
lret
lahf
inc
push
jb
mov
cs
sbb
jne
sahf
gs
pop
sbb
xchg
push
add
sub
mov
cltd
sub
xor
fdivl
xor
pop
mov
insb
xchg
add
icebp
mov
jg
jnp
js
gs
insl
sbb
and
jnp
and
aam
mov
and
pop
dec
mov
push
test
mov
jb
cwtl
mov
icebp
and
or
imul
cmp
cmc
aad
xchg
sti
lahf
out
inc
pop
pop
scas
inc
lea
mov
sbb
stos
mov
dec
adc
dec
enter
stc
adc
mull
sbb
inc
loopne
pusha
or
scas
pop
fwait
sbb
mov
or
push
jo
mov
movsl
cli
idivb
xor
lret
fsubrs
sub
xor
jno
cmp
gs
mov
sahf
lret
add
lahf
inc
mov
cli
pop
cmp
mov
fucomip
mov
jge
or
cmp
adc
or
add
xchg
sbb
je
and
in
icebp
das
mov
stos
inc
ret
dec
sbb
popa
mov
inc
bnd
adc
cmp
hlt
jbe
fcomps
sbb
loope
mov
dec
mov
lret
or
and
stos
mov
cmp
add
stos
in
loopne
and
cmp
mov
jns
loope
iret
sbb
leave
xchg
pop
dec
imul
xchg
sti
push
repnz
adc
sub
dec
aad
es
xor
or
frstor
inc
lret
je
xchg
and
sub
pusha
sbb
jae
scas
lea
je
push
enter
enter
rolb
pop
xor
add
call
fisttps
sarl
jbe
sub
pushf
xor
dec
pop
loopne
out
lcall
fcos
ret
popf
out
xchg
push
mov
stos
xor
rcl
pop
imul
inc
sub
pop
insb
divb
dec
push
or
in
in
mov
lret
adc
cmp
test
arpl
dec
or
jmp
mov
pop
pop
pusha
xchg
in
jecxz
mov
xchg
sbb
test
outsb
xor
sub
addl
pop
mov
je
push
dec
lods
aam
adc
dec
iret
lods
dec
nop
jmp
xchg
lahf
divl
es
loope
insl
or
mov
mov
sub
inc
pop
sbb
pop
add
test
mov
xor
inc
push
cmp
push
cltd
daa
xchg
inc
ja
push
nop
jb
add
insl
sahf
dec
mov
nop
movsl
mov
lcall
inc
lahf
pusha
inc
movsb
sbb
stos
lea
xchg
out
and
pushf
insb
cmpsb
ficomps
push
mov
loopne
mov
mov
dec
jno
inc
and
ljmp
cmp
dec
andl
cltd
push
mov
xchg
test
repz
push
js
movsl
jae
push
dec
pop
outsl
push
aaa
pop
imul
rcrl
jo
into
add
mov
mov
idivl
repz
and
mov
testb
std
mov
jecxz
xchg
pop
in
ja
insb
je
out
mov
xor
or
cmp
das
outsl
notb
rcr
and
add
pop
out
jmp
mov
push
sub
stos
sub
cli
add
pop
outsl
sub
push
xchg
adc
outsl
stc
mov
jno
jge
bound
inc
dec
fnsave
cmp
jl
lcall
rclb
inc
mov
add
xchg
sarb
pop
inc
jmp
mov
je
repz
mov
outsb
test
xchg
enter
and
pop
dec
or
fidivl
or
in
mulb
scas
out
xchg
and
fs
sarb
ljmp
dec
or
inc
lret
xchg
int3
ja
sub
jbe
ljmp
mov
stos
pushf
lahf
jg
cli
dec
cmc
push
xchg
loope
jae
ss
mov
mov
mov
movsl
or
and
xor
loopne
and
int3
and
jne
cmp
inc
test
adc
hlt
mov
ds
pop
cmpsl
outsl
xor
or
mov
jns
adc
and
jmp
mov
lds
pop
pop
hlt
ja
pop
xchg
lcall
fwait
repz
cs
pop
mov
mov
inc
inc
into
xchg
gs
lods
sahf
dec
std
pop
push
out
pop
decl
cmp
inc
adc
imul
das
out
iret
push
insl
mov
adc
ret
ret
jl
out
cwtl
mov
cld
mov
sbb
xor
in
xacquire
sub
xchg
jl
imul
sub
mulb
aas
imul
rorb
out
jns
push
xlat
mov
jl
xor
test
insb
pop
test
mov
daa
stc
dec
cmp
mov
jp
iret
and
cmp
jg
ja
lret
jl
pop
pop
call
rol
pop
je
adc
in
lods
pop
in
imul
or
jge
cltd
push
mov
jmp
scas
es
jmp
rcrl
push
daa
or
cwtl
jb
and
aas
jno
sbb
sahf
and
cmp
xchg
mov
stos
adc
or
mov
inc
into
inc
repz
inc
icebp
fcmovnu
xor
ds
adc
and
lods
or
loop
fisttpl
xchg
call
or
add
repnz
push
js
pop
push
sahf
mov
and
jne
into
imul
dec
lock
mov
stos
movsb
xor
sub
fisubs
sub
mov
sub
mov
mov
sub
movsl
dec
push
or
cwtl
mov
std
push
mov
insb
xchg
in
xchg
out
outsl
popf
cmpsb
and
xchg
scas
adc
pop
jg
mov
repz
fidivs
adc
in
jmp
mov
test
roll
pushf
inc
xlat
jns
rcr
aas
adc
dec
fwait
andb
lahf
and
dec
mov
movsl
pop
and
mov
xchg
repz
adc
lahf
xorl
std
out
cmp
mov
scas
ljmp
pop
std
sub
pop
add
xchg
rorl
or
mov
cmpsl
mov
or
fistps
aam
add
sub
clc
das
inc
xchg
scas
push
lods
punpcklwd
icebp
insb
or
bound
jae
or
mov
cwtl
test
fmuls
mov
sub
outsl
js
outsl
or
mov
jnp
stc
pop
jnp
cmpsb
mov
int3
push
gs
sti
aas
and
leave
out
add
cmp
or
sbb
subb
xchg
inc
aas
push
mov
cmp
jae
orl
jno
xchg
dec
pop
pop
js
and
sbb
xorl
popf
mov
inc
movsb
mov
dec
sbb
ss
sub
subb
mov
in
push
enter
popa
adcb
addr16
adc
xchg
push
sub
pushf
and
or
fildl
push
push
jns
pop
push
push
add
cmp
push
outsl
out
lock
or
pop
aam
icebp
aaa
jle
jb
roll
fcmovu
ret
dec
pop
add
adc
lods
adc
pop
cmp
dec
mov
jg
dec
dec
test
dec
std
js
mov
movsl
cmpsl
fistl
dec
cmc
push
xor
cltd
cmc
pop
jne
adc
rcr
pusha
and
ds
std
fsubrp
jo
dec
ss
sbb
jo
data16
cmp
or
addl
fildl
js
fnstsw
pop
orl
daa
fnstcw
sub
lods
xorb
or
jge
std
and
adc
out
jl
adc
rolb
fwait
je
mov
xchg
sbb
lea
mov
or
sbb
jae
cli
lahf
xchg
out
in
iret
jae
pmulhuw
jnp
push
and
push
sbb
aad
in
daa
scas
and
daa
lods
and
loope
imul
adc
insb
lods
mov
pop
and
ja
pop
ret
jbe
sub
bnd
inc
rcr
aas
jp
jne
hlt
mov
jnp
cwtl
fsts
aad
mov
int3
subl
inc
xor
shll
mov
mov
mov
push
cld
and
jae
jno
mov
cs
test
test
mov
imul
testl
bound
cmp
ss
fldt
add
adc
sahf
adc
stos
push
xchg
fs
jge
jno
pop
int3
add
aas
sti
testb
hlt
dec
cwtl
inc
mov
out
scas
pushf
or
xlat
adcl
rorb
push
shlb
scas
mov
ret
dec
mov
xchg
scas
and
sahf
ja
mov
jmp
mov
lret
mov
out
jp
pop
jp
sahf
pop
popf
xchg
pop
xlat
inc
notl
push
inc
outsb
xchg
ret
rorl
pcmpeqb
xchg
ret
aad
into
mov
fwait
cltd
mov
shl
pop
test
mov
aaa
sub
arpl
sbb
cmpsb
or
ret
mov
dec
xor
or
pop
popa
jge
jmp
sbb
push
inc
ljmp
in
adc
mov
stos
lcall
xor
test
push
aad
xor
cltd
fs
sti
loope
sub
stos
testl
pusha
insb
lahf
fidivrs
lock
movsl
cmpsb
inc
ret
pop
hlt
aaa
aas
adc
or
xchg
mov
sub
movsb
ret
fists
adc
bound
sbb
ljmp
inc
in
push
lcall
lcall
sbb
int3
sbb
leave
dec
and
xlat
dec
mov
call
insl
and
cmp
fistpll
adc
lods
aas
mov
adcl
sub
mov
add
int3
arpl
cmp
loopne
int3
mov
gs
mov
cmpl
insb
clc
jmp
xor
sub
jns
inc
arpl
mov
pop
mov
push
jle
adc
adc
hlt
out
fistps
and
ja
stc
cmpsl
ret
xchg
popa
push
test
pop
jnp
in
push
xchg
dec
push
cli
stos
pop
popf
subb
xlat
pop
and
mov
pop
xchg
push
mov
int
push
loop
pop
sahf
sbb
aad
mov
orb
cmp
lahf
ja
dec
lock
and
rorl
xchg
test
xor
push
pop
mov
sbb
stc
and
into
les
fstpl
fistl
push
in
mov
push
jno
ds
popa
flds
or
cmc
push
andl
and
outsb
push
out
enter
insl
and
mov
add
and
gs
adc
mov
xor
mov
adc
loope
insb
sbb
sbb
cltd
xor
sub
fimull
popa
cmpsb
xchg
bound
lds
pop
jns
cmp
cld
ja
inc
arpl
scas
or
lret
mov
mov
mov
insb
mov
or
and
jge
xchg
test
adc
cwtl
dec
inc
loop
dec
lds
sub
mov
decb
in
lods
aam
loopne
scas
loope
ret
dec
in
add
cmpsl
jae
pop
push
push
cmpsb
and
adc
or
adc
idivb
sarl
cs
mov
jecxz
notb
in
mov
sbb
jnp
pusha
push
and
pusha
ss
xchg
sub
add
test
shl
xchg
xor
test
inc
shll
or
inc
push
add
mov
xor
adc
xchg
loop
xor
pop
mov
pop
insb
xchg
push
fidivrs
adc
popa
mov
mov
dec
mov
pop
mov
pop
imul
xchg
jle
inc
push
pop
fwait
or
mov
xchg
dec
icebp
decl
mov
mov
mov
push
sub
popa
or
sub
aad
push
xchg
push
clc
insl
push
movsb
test
sub
mov
out
add
ret
cmp
cld
out
and
add
jl
jo
sarb
adc
mov
jg
or
push
ljmp
outsb
or
outsl
in
sub
mov
mov
pusha
cmp
xor
xchg
popf
push
ret
out
dec
push
popf
es
pop
addr16
loopne
aam
xchg
fdivrs
cltd
int
leave
ret
icebp
jns
pop
mov
mov
imul
pop
pop
out
out
or
and
cli
push
mov
add
mov
adcb
or
les
pop
xchg
clc
sbbl
cwtl
rorl
push
ljmp
xchg
sahf
push
popf
test
ljmp
lea
lahf
jp
lods
mov
mov
push
insl
out
int3
fwait
jmp
cmp
jne
clc
cmc
cmp
push
cmp
mov
jb
fisttps
test
xchg
push
add
pop
loopne
and
clc
cmp
cmpsl
cmp
mov
or
xor
cmp
aam
mov
mov
or
cmpsb
dec
sbb
xorl
push
andl
out
popl
pop
loope
addr16
mov
add
sbb
jo
lret
mov
add
xorl
xor
test
sub
je
pop
testb
pushf
jno
addr16
imul
mov
mov
push
push
cmpsl
hlt
insl
hlt
cmp
inc
sub
cli
lcall
mov
gs
push
cs
aad
push
push
inc
and
imul
pop
insb
repnz
mov
cmp
cmp
inc
dec
adc
or
shlb
push
cli
sub
je
mov
push
or
outsb
loope
add
out
pop
push
cmpsb
inc
adc
xchg
pop
loopne
jns
std
jle
mov
outsl
andl
and
push
subb
sub
fldcw
mov
sti
add
mov
jl
hlt
pop
das
popa
mov
xor
mov
xchg
and
pop
adc
mov
jge
push
daa
hlt
xor
sbb
xchg
aam
xlat
nop
xchg
or
fwait
hlt
bound
push
movsb
push
sub
pop
jl
xchg
test
xor
xchg
push
inc
mov
pop
js
mov
insb
lock
inc
or
scas
pop
dec
pop
adc
push
jg
mov
mov
lcall
sbb
repnz
sbb
jge
cmp
ret
sub
mov
jno
xchg
inc
rorl
pop
lods
cli
pusha
pop
mov
lds
inc
lea
int3
jecxz
dec
outsl
fistpl
cmp
data16
mov
jno
dec
test
cmp
lods
jp
sub
add
jae
pop
jns
jge
imul
test
dec
ret
fmull
mov
xor
pop
lods
lret
mov
mov
lods
test
xchg
insl
cltd
mov
mov
sub
mov
xchg
xchg
and
bnd
xor
xchg
jecxz
sub
movsb
inc
or
xor
or
mov
mov
mov
ds
out
push
pop
jno
lea
pop
sar
das
fiaddl
in
shlb
js
pop
jae
icebp
mov
and
stos
scas
ret
sub
je
test
ss
pminsw
jb
jae
fisttpll
aam
inc
int
pop
leave
xor
in
fcmovnb
test
lahf
in
mov
push
data16
bound
pop
jl
push
mov
daa
push
dec
lock
mov
pusha
cld
jmp
fsubrs
inc
or
inc
aad
lret
popf
incl
jne
pop
imul
fucomi
or
cmpsb
push
dec
loopne
xchg
xor
or
ret
push
push
insl
adc
mov
les
cmp
inc
test
add
daa
xchg
sbb
pop
cmp
fxch
push
jge
inc
push
ret
jo
in
addr16
dec
aam
imul
lock
inc
pop
clc
fildl
ret
add
and
fnsave
popf
mov
dec
mov
fwait
pusha
pop
cmp
and
gs
xchg
mov
cmp
dec
loope
jge
xchg
notl
stc
call
lods
cmp
cmc
sub
push
adc
push
sub
push
dec
cmpsb
adc
or
xor
in
imul
pushf
clc
xchg
lds
pop
add
scas
repz
notl
xchg
xchg
sar
sub
pop
inc
jecxz
nop
fdivl
inc
pop
xchg
in
jmp
testl
or
mov
ret
add
addr16
jl
cmp
push
dec
repnz
ja
lea
clc
mov
jl
mov
lock
outsb
dec
mov
mov
jno
xchg
adc
xlat
icebp
or
inc
roll
mov
xor
aad
mov
ret
loope
fisttpll
test
fisubs
sbb
push
jo
pop
ds
and
push
jmp
adc
cmp
mov
imul
sub
ljmp
xchg
xchg
call
jle
adc
xchg
ret
dec
test
inc
lock
lcall
mov
cli
orb
rcll
ret
scas
clc
mov
pop
lds
lods
into
out
clc
sub
inc
lcall
das
xchg
and
sbb
fisttpl
scas
xchg
or
pop
cld
in
adc
in
insb
mov
mov
mov
psrad
push
int
xchg
sbb
pop
dec
rorb
in
mov
in
xor
push
out
mov
dec
fadds
push
cmp
shl
adc
mov
into
dec
inc
sbb
shll
daa
pop
gs
jae
sbb
sub
jmp
mov
mov
in
push
dec
incb
jge
je
jae
jp
add
js
addb
lea
stos
and
fsubrl
push
dec
add
daa
insl
xlat
lds
cmpsb
xchg
imul
inc
pop
and
cmp
cltd
clc
fcompl
popa
loope
rorb
out
cmp
divl
push
shrl
jle
js,pn
into
fstl
xchg
sbb
adc
cmp
add
lds
or
icebp
das
sbb
add
adc
in
jns
iret
sbb
stc
daa
jp
cs
lcall
scas
pushf
inc
sbb
inc
iret
pushf
jp
in
xor
popf
adc
jge
mov
and
es
dec
mov
rorl
int3
nop
fstps
mov
sbb
push
aam
sbb
adc
int
sbb
lds
arpl
gs
cmp
add
mov
test
stos
movsl
test
adc
fisubrs
enter
pop
mov
mov
jnp
lahf
and
adc
pushf
pop
imul
ret
aas
pop
sarl
push
jl
sbb
je
in
push
popa
pushf
fs
filds
sbb
pop
xlat
jl
cmp
push
inc
je
push
sub
xor
movsb
subl
sub
cmp
xor
lahf
nop
adc
popf
std
cmpsl
fwait
rcl
adc
outsl
inc
addb
jne
mov
sbb
or
xor
out
repnz
loopne
cwtl
movsl
and
inc
jmp
pop
pop
inc
frstor
mov
jb
movsb
es
mov
test
push
sub
test
cmpl
xchg
je
icebp
sub
pusha
and
movsl
xchg
imul
sub
lcall
enter
jae
data16
lret
cs
pop
jg
mov
hlt
imul
mov
sub
pop
sub
out
sub
or
mov
cld
outsb
test
ret
pop
sub
mov
ror
repz
cmpsb
test
jmp
dec
scas
std
lret
jg
daa
inc
sbb
push
fstpl
cmp
mov
frstor
push
out
sti
xchg
and
lahf
adc
push
ret
add
hlt
sbb
icebp
jb
pushf
push
pop
xor
fnsave
pop
cmc
push
data16
clc
jmp
leave
insl
jl
mov
pop
add
inc
in
adc
push
scas
mov
leave
test
mull
sub
loopne
test
inc
scas
sbb
shll
inc
lahf
xchg
lods
int3
push
push
mov
xchg
push
or
and
leave
push
faddl
mov
lods
fistpl
adc
cmpl
pop
out
cwtl
cmp
sub
nop
out
aaa
push
sbb
fisttps
push
in
ja
xchg
pushf
push
dec
push
push
movl
and
push
add
push
inc
sub
ret
std
mov
sub
xchg
xchg
push
inc
clc
clc
or
fistpll
arpl
xor
cmpsb
inc
mov
and
scas
loope
xchg
scas
sti
sub
pop
inc
jl
xor
push
loopne
mov
je
stos
pusha
scas
push
cmp
ret
gs
and
mov
sbb
sahf
push
leave
fmull
ja
jle
ret
xchg
pop
into
stos
ja
in
pop
ret
sub
pop
dec
shll
xchg
dec
cmp
sub
fs
scas
loope
pop
jl
call
xchg
test
sbb
idivb
es
adc
xchg
pop
mov
and
mov
add
sub
rolb
mov
mov
fdivrs
cmp
inc
and
adc
sbb
cmp
mov
mov
xor
adc
push
pusha
iret
xchg
mov
add
rcrb
sar
and
cmp
ret
push
xchg
daa
scas
scas
inc
sub
pop
jne
mov
pop
cmpsb
shll
mov
push
mov
lahf
addr16
jl
mov
push
push
test
scas
ror
aad
push
cmpsl
mov
movsl
filds
mov
call
cmp
or
xor
cs
ss
jl
inc
jle
or
imul
cltd
movsl
mov
dec
push
inc
je
cltd
jp
push
and
inc
push
pop
fstl
xchg
cmpsl
push
popl
mov
es
lea
add
rcrl
xchg
sti
and
cltd
pop
and
jne
sub
cmp
int
mov
mulb
sti
mov
aam
fimull
sub
imul
or
test
or
mov
movd
leave
sub
ljmp
sub
into
rclb
or
and
xchg
push
popa
jecxz
in
mov
arpl
xor
je
divl
push
and
jno
fsubrl
clc
ror
jb
jb
jmp
je
ja
mov
adc
icebp
pop
dec
add
jnp
sub
sub
push
xchg
cltd
in
dec
mov
or
fsubrl
mov
gs
divb
call
pop
shl
aaa
repz
out
mov
ret
adcb
out
subl
xchg
test
inc
stos
shl
cli
mov
test
into
in
iret
loop
and
dec
and
clc
outsl
xor
cmp
clc
aas
inc
jmp
cmp
mov
sbb
cmovp
and
sub
dec
pop
fwait
call
mov
repz
mov
data16
inc
popf
aas
syscall
push
leave
mov
lods
mov
inc
jo
fidivl
popa
add
js
inc
jne
and
je
adc
lret
xchg
jle
mov
xor
pushf
sbb
fsubrl
jecxz
xchg
int
or
sub
icebp
repnz
sti
xorb
adc
dec
pop
jne
inc
cmp
call
xlat
stos
inc
test
sbb
outsl
out
fdivrl
adc
lds
mov
iret
decl
fxrstor
push
dec
sbb
les
aad
cmp
rorb
mov
out
sbbb
push
mov
imul
xlat
mov
orb
push
mov
scas
adc
sub
push
pop
test
repz
rclb
invd
sub
mov
adc
mov
stc
es
push
sub
stos
and
clc
xchg
imul
mov
sahf
outsb
aad
in
inc
fxch
lahf
jno
push
mov
fsubrs
fstps
and
mov
add
movsb
mov
lock
push
jmp
lods
out
mov
dec
xchg
out
les
hlt
ds
adc
shl
daa
nop
mov
sbb
push
sbb
inc
xor
aam
cld
into
mov
cld
cltd
lahf
push
mov
sbb
fldcw
or
xor
ficoms
sub
test
pop
sbb
dec
imulb
pop
fsubs
pushf
fldt
lret
rcrb
cmp
mov
or
jg
jl
lret
sbb
and
lock
mov
mov
out
push
and
adc
inc
jmp
lods
out
sub
ljmp
sub
fsubs
xor
and
adc
outsl
insb
sub
and
sbbl
cmp
or
stos
inc
div
dec
lcall
insb
lock
out
sti
inc
lods
mov
mov
aam
pop
mov
cmp
loope
pusha
pop
pop
dec
fidivrs
push
or
mov
cmp
or
inc
mov
adc
repnz
out
loop
pusha
aas
xchg
enter
lret
mov
ja
scas
inc
sar
adc
mov
inc
and
nop
mov
pop
adc
xchg
xorb
xchg
xchg
add
jns
cmp
inc
mov
inc
push
stos
movsb
and
push
push
imul
cmp
push
cmp
mov
movb
push
dec
addr16
data16
popf
icebp
cli
mov
aam
sbb
jmp
imull
jne
iret
cmpl
push
xchg
push
dec
scas
jp,pn
pop
mov
push
negb
jbe
add
mov
addl
lods
sbb
cmpsl
xor
mov
cwtl
dec
sbb
and
in
ror
dec
std
divb
sbb
fucomp
mov
mov
ret
push
pop
rcrl
addr16
out
lods
repz
xor
mov
pushf
inc
dec
fnsave
cmp
into
inc
dec
incb
mov
add
loop
mov
mov
sub
std
mov
cli
cmp
jne
pusha
lds
aad
pop
or
push
sbb
aaa
rcl
pop
push
or
das
mov
shll
or
or
scas
data16
sub
cs
pop
push
jmp
fstpl
ss
dec
jecxz
fisttpl
xor
xor
test
sub
ds
movsb
loope
lods
xchg
imul
push
fsts
jne
rorl
sub
pop
loop
pop
cmp
mov
out
bswap
jo
pushf
xchg
shll
aas
adc
and
repz
movsl
out
clc
inc
sbb
ret
clc
loop
cwtl
outsl
dec
shll
sbb
into
jmp
andl
out
cs
aam
lahf
in
dec
push
pusha
icebp
call
pusha
mov
add
imul
repz
fistl
push
decl
inc
mov
aad
out
mov
sbb
scas
lahf
cmp
leave
adc
fistl
aaa
test
fdivrs
pop
mov
push
mov
jns
jae
out
loopne
inc
mov
jbe
pop
in
in
in
push
and
hlt
cld
mov
mov
mov
sbb
mov
scas
fsub
push
repz
sub
lcall
jne
lods
bound
cmpsl
mov
sub
sti
aas
into
movsl
ss
xor
pop
sub
mov
xor
test
ds
or
in
sbb
jno
dec
sarb
xor
mov
push
dec
push
pushf
mov
mov
idiv
fs
repz
mov
xchg
xor
ret
lcall
xchg
int
pop
adcb
stos
fwait
jnp
dec
jmp
lahf
mov
inc
cmp
lock
xor
mov
pop
inc
sub
pop
lahf
adc
xchg
and
fwait
lret
add
in
push
jnp
push
jmp
mov
mov
rcrl
mov
or
cmp
in
adc
ss
push
dec
sar
push
push
and
repz
hlt
repz
xlat
pop
lds
idivl
pop
xchg
mov
sub
xchg
mov
lahf
inc
aad
in
dec
mov
or
fldcw
sbb
and
mov
jle
jae
faddl
je
push
mov
addr16
stc
scas
and
cmp
xchg
and
adc
fldcw
mov
xlat
pop
pusha
mov
mov
inc
rol
out
inc
ja,pt
movsl
mov
stc
mov
loop
add
pop
divb
mov
mov
in
push
dec
stc
add
push
lahf
inc
fsub
xor
fsubrl
jo
fldt
shrb
inc
movsb
lret
jl
mov
lds
cmpsl
sbb
rol
popa
cmpb
fstl
testl
aam
push
adc
iret
ror
push
andl
rcrl
fimuls
shr
push
dec
and
xor
mov
movsb
cmp
inc
inc
loope
int
out
loopne
xorb
leave
cmpl
cmpsl
in
jl
push
adc
imul
fistpl
iret
out
and
lcall
aaa
into
mov
xchg
jecxz
inc
pop
mov
sbb
jg
lods
dec
xchg
mull
inc
mov
mov
outsb
cmpsb
mov
xor
xor
andb
dec
add
dec
sub
outsl
or
cmp
mov
mov
sub
lahf
hlt
js
cld
add
pushf
push
adc
sub
gs
sarb
or
mov
mov
jg
xor
fs
xor
xchg
outsb
aam
aad
jge
aas
data16
pop
jb
je
jns
or
mov
stc
enter
popf
mov
scas
or
nop
sbb
or
mov
insb
pushl
mov
lods
in
cmp
scas
add
fsubl
scas
mov
stos
iret
jl
stos
int3
inc
inc
lock
daa
js
mov
push
fdiv
dec
xchg
dec
hlt
and
jmp
add
cs
push
ret
jl
movsb
in
sahf
adc
stc
xchg
in
cwtl
add
loope
lds
sub
add
or
dec
add
dec
cmpsb
or
lock
inc
sub
xchg
add
adc
xor
pop
stos
fiaddl
pop
in
jle
mov
dec
jmp
push
ficompl
pop
test
pop
sub
inc
cmp
out
das
test
jae
adc
and
adcl
fwait
pushf
rcr
jbe
out
lods
mov
loope
ret
inc
repz
cmp
mov
pop
hlt
mov
cmc
xchg
pop
aad
in
inc
push
pop
mov
sub
outsb
imul
dec
dec
daa
fidivs
dec
daa
or
js
pop
sbbl
xor
pop
and
cwtl
and
sub
push
and
adc
outsb
out
adc
sbb
xor
int3
xor
lods
imul
add
dec
loop
pushl
push
in
imul
nop
push
push
inc
cli
aam
packsswb
fidivrs
addr16
iret
mov
js
divl
xchg
or
cwtl
lret
lods
pop
push
in
xor
dec
cmp
lea
push
mov
push
leave
xor
in
int3
inc
push
nop
pmaddwd
push
and
popa
cmp
pusha
or
pop
fistl
xorl
scas
inc
pop
lock
sub
es
mov
and
shr
mov
cmpsl
ficompl
jno
shr
lar
aaa
rdmsr
add
or
dec
inc
jns
add
cmp
lret
mov
dec
aam
nop
mov
popl
sbb
scas
scas
icebp
mov
lcall
push
jnp,pn
cmp
out
or
lods
pop
imul
shlb
push
and
cmp
jbe
or
xchg
pop
out
pop
movsb
sbb
std
sub
jae
and
ficoms
jmp
cwtl
inc
dec
sub
inc
in
and
adc
xor
outsb
sub
inc
sbb
cmp
aad
jg
icebp
adc
cmc
stos
add
mov
ret
sub
adc
mov
sbbb
pop
add
push
cmp
jnp
enter
dec
and
adc
insl
mov
mov
sub
mov
mov
icebp
mov
cmp
popa
add
hlt
lds
orb
out
movsb
fldenv
add
mov
or
push
lods
gs
lds
imul
jbe
mov
sub
push
pop
jb
mov
out
lock
out
jl
pop
outsl
jb
dec
test
mov
cmp
cmp
mov
pop
adc
dec
mov
jae
adc
std
js
push
clc
lret
dec
fdivrl
jb
dec
mov
shll
and
adc
lods
dec
and
add
ss
in
push
div
xor
cmp
sub
int3
push
and
inc
in
adc
test
inc
outsl
add
mov
shl
sub
mov
loope
push
cmpsl
sub
cmp
insb
sbb
inc
incl
sbb
sbb
mov
movsl
xor
or
cwtl
mov
inc
sub
and
sbb
inc
add
and
or
adcb
enter
aad
fninit
in
xchg
pusha
sbb
cmpsl
js
jl
lods
xchg
mov
shrb
push
loopne
popf
call
xor
or
push
cs
sub
lods
xchg
in
lea
push
repz
adc
dec
js
dec
hlt
mov
xchg
clc
stos
aam
lret
mov
je
aad
push
sub
inc
ret
stos
or
imul
jo
test
out
decb
and
dec
daa
add
ja
out
fdivrl
add
es
add
dec
hlt
sub
in
repnz
or
call
jno
jp
dec
rorl
lds
xchg
sbb
inc
add
add
and
mov
inc
in
fcoms
mov
icebp
xchg
pop
sbb
jno
mov
jmp
sbbl
xchg
aad
mov
push
inc
fstpt
divl
lock
cmp
rorl
fwait
mov
add
popf
pop
and
cmp
push
jg
cmp
lds
or
sbb
xorb
ja
aam
insb
clc
fimuls
adc
ret
lahf
add
ds
bound
add
lods
push
mov
pop
mov
clc
push
pop
and
push
popf
test
xor
dec
sbb
adc
xor
mov
mov
dec
adc
dec
jno
jb
out
cmc
enter
xor
test
andb
add
inc
fdivrl
or
jmp
xchg
and
les
arpl
xlat
or
push
or
aad
jl
lods
push
inc
push
cmp
sub
fldl
ljmp
push
outsl
xchg
mov
mov
cmp
inc
fwait
arpl
adc
leave
mov
adc
mov
int3
push
test
cld
adc
stos
push
mov
or
add
dec
test
lahf
out
jns
xchg
cmp
fsubl
loopne
or
pop
sbb
cmp
leave
stos
cs
sbb
clc
push
hlt
mov
fsubl
xor
inc
adc
jmp
inc
mov
scas
stos
push
scas
xor
popf
gs
divb
mov
xchg
xchg
fdivl
sub
test
cld
ret
subl
jle
or
cli
or
fucomi
sub
cmp
mov
pop
aad
jns
sub
in
jle
jns
and
dec
sub
push
push
int3
mov
stos
xor
lcall
add
xorb
xchg
adc
xor
dec
imul
lret
xchg
fldenv
xchg
xchg
in
and
mov
iret
xor
int3
and
mov
sbb
shl
xchg
fldl
test
icebp
add
mov
push
hlt
in
cli
dec
dec
jge
daa
adc
cmp
movsl
fdivs
std
push
xor
jp
sarb
pop
adc
push
es
nop
push
mov
mov
hlt
sbb
subl
mov
xchg
jp
jns
cwtl
hlt
mov
sbb
nop
mov
mov
out
int3
jmp
xchg
or
adc
mov
fimull
dec
jle
sbb
jae
test
pop
cmp
out
mov
pop
adc
out
sub
pop
push
dec
lret
leave
sbb
sar
fucomi
ljmp
xor
shrb
lea
mov
hlt
popf
dec
scas
test
cwtl
adc
movsl
jb
aaa
lods
lcall
inc
mov
mov
das
adc
jns
les
and
mov
rolb
sbb
addl
dec
int3
loope
push
mov
push
inc
and
es
repz
in
and
add
fwait
mov
xchg
mov
into
add
scas
mov
into
shr
fistl
push
bnd
jnp
add
scas
inc
lock
std
mov
dec
lea
jge
xchg
in
push
pop
push
mov
daa
lcall
fidivs
xchg
jo
cwtl
sub
mov
adc
loop
push
mov
addr16
fnstsw
mov
push
jnp
data16
mov
jmp
jno
jg
int3
daa
sti
pushf
sarb
mov
push
mov
sub
int
aad
subl
jmp
sub
dec
das
add
pop
dec
mov
mov
push
imul
into
xchg
fdivs
fisubrl
push
push
fistl
push
leave
imull
cwtl
inc
push
leave
xor
jne
dec
popf
cmp
jmp
sub
mov
hlt
mov
fdivrs
ret
xchg
mov
orb
inc
xor
js
cmpsb
or
cld
fsubs
pusha
mov
push
xor
pop
out
filds
jp
mov
pushf
movsl
and
in
insb
jo
inc
dec
ja
inc
mov
daa
test
pop
stc
xor
icebp
lahf
xchg
or
in
iret
mov
lret
xchg
cmc
cmp
push
pop
fcmove
pop
rolb
jmp
add
movsb
sbb
das
push
xchg
push
cmp
test
add
push
movsl
pop
and
lcall
sbb
lcall
ljmp
jmp
cs
jle
int3
cmpsb
imul
sub
inc
jg
fnop
repnz
jnp
ret
pop
push
mov
out
adc
stc
fnstenv
faddl
in
or
mov
push
mov
bound
ja
push
pop
sbb
adc
pop
out
push
jns
jb
stos
aaa
jecxz
outsl
enter
mov
pop
mov
sahf
loop
and
mov
int
sbbl
fwait
scas
fwait
pop
sub
inc
int3
and
in
sbb
push
inc
cld
incl
pop
dec
shll
xchg
movlhps
pop
rcrl
dec
mov
pop
fs
inc
mov
mov
sar
loopne
add
test
testl
in
xlat
push
mov
repnz
push
xor
nop
xor
pop
sub
sbb
push
pop
call
ficomps
lock
adc
or
dec
inc
pop
sbb
pushf
into
xor
add
add
jbe
dec
mov
pop
lods
pop
sub
cmp
dec
cld
ja
add
fwait
adc
nop
dec
lcall
sub
xchg
mov
imulb
sbb
and
mov
push
das
adc
loopne
pop
into
jns
push
push
mov
jne
xor
mov
mov
lock
sbb
dec
outsb
mov
adc
iret
dec
inc
pop
repz
dec
mov
ret
or
jno
cmpsl
fcmovnu
and
inc
push
cmp
in
lea
adc
cmc
movsl
ja
test
cli
jo
dec
and
xor
imul
popl
dec
out
call
in
sub
sbb
pop
mov
push
les
mov
and
adc
outsb
mov
fwait
mov
in
add
cmpsl
loop
es
incb
and
js
loop,pt
stos
loopne
icebp
mov
push
pop
mov
sub
lret
jo,pn
xchg
data16
sub
icebp
std
lret
or
icebp
adc
push
test
test
cwtl
jns
xor
in
inc
test
movb
push
add
sub
mov
xor
xchg
jl
js
push
cmp
loop
or
mov
fstpt
adc
adc
and
push
aas
decb
fwait
imul
pop
mov
ficoml
out
testl
iret
add
daa
mov
dec
cmpsb
gs
arpl
pop
push
inc
into
lret
lea
andb
ret
cmp
int
int
addr16
iret
cwtl
into
mov
dec
mov
mov
dec
std
rcll
push
dec
xor
lds
push
ret
hlt
mov
cmpsb
mov
fldt
dec
cmpsl
xchg
pop
add
ss
rcrb
outsl
cmp
test
divb
repnz
add
xchg
lret
and
ss
aas
rcr
hlt
out
sbb
xor
sbb
sub
ret
in
insl
adc
popa
sbb
push
fiaddl
imulb
outsb
jl
outsl
sarb
mov
cwtl
add
and
rorl
adc
or
mov
js
dec
leave
popf
test
mov
repnz
ficoml
xor
fcoml
or
xchg
dec
jl
loopne
inc
movsl
jmp
adc
mov
mov
out
push
gs
lret
pusha
jmp
cmpsl
mov
aas
mov
xchg
leave
jnp
shll
xor
push
xchg
cmpsb
fs
jecxz
stc
cmpsb
adc
stos
bnd
icebp
jmp
fldenv
sbb
test
pop
mov
jo
inc
aad
pop
cmp
and
fnstenv
sbb
pushf
in
cmp
repnz
and
mov
test
test
mov
cmp
and
aad
out
cld
add
mov
insl
imul
jp
adc
cli
dec
jnp
xor
xchg
pop
mov
sti
adc
sahf
pusha
imul
cs
mov
mov
shrb
popa
pop
inc
dec
cmpsb
movsb
and
push
nop
mov
pop
sub
fildl
fisttpl
mov
icebp
pushl
repnz
inc
mov
sub
loopne
sub
mov
lds
divl
sub
std
sub
inc
hlt
cmpsb
sub
int
cltd
imul
fiadds
or
xchg
stos
repnz
les
sub
cmp
iret
xchg
fwait
xchg
hlt
clc
mov
aam
cli
inc
sti
add
push
add
ss
push
out
icebp
stos
inc
arpl
faddl
ret
loopne
or
push
xchg
add
pop
ffree
pop
popa
pushl
xchg
dec
sbb
inc
jb
in
shlb
fadd
daa
mov
js
xchg
or
pop
push
sbb
pop
popf
mov
lea
push
add
cmp
cs
pop
lret
sub
movsb
cmpsb
jns
adc
adc
loope
clc
or
mov
sahf
cltd
xor
shr
inc
test
push
pushf
js
cmc
das
mov
or
aam
xchg
lods
lods
add
xchg
loop
and
lcall
ja
out
loopne
gs
movl
jno
or
ja
pop
inc
push
out
adc
fs
das
dec
fs
cmpsl
cmp
pop
xor
cli
sub
mov
lea
cwtl
push
leave
lret
je
test
mov
outsl
js
and
dec
cli
add
fsubs
jl
add
outsl
mov
push
ljmp
sbb
xchg
addr16
and
ficompl
fcoms
inc
repz
mov
mov
std
xchg
adcl
pop
inc
negb
pop
add
or
pop
loopne
bnd
cmp
mov
xchg
sub
iret
or
mov
fstl
dec
int3
mov
or
dec
push
stos
xor
fldenv
dec
fistpll
add
push
push
cmc
lret
push
jbe
cmp
pop
and
lret
aas
push
push
sbb
insl
outsb
sbb
adc
iret
add
sub
xor
aas
pop
or
popl
shr
dec
xchg
jecxz
inc
push
cli
dec
pop
xor
loope
sbb
dec
es
mov
jmp
pop
push
mov
clc
pop
sub
cmp
js
cmp
jecxz
leave
popa
mov
mov
in
jl
repnz
lods
cmp
pop
add
cltd
js
jnp
ret
shll
out
icebp
pop
adc
pop
or
mov
popa
adc
filds
pop
adc
sti
inc
sub
pop
out
adc
mov
jmp
mov
leave
insl
mov
pop
push
xchg
xchg
push
mov
fstpl
mov
xlat
and
stos
fistl
in
rcl
sbb
pop
pop
fidivrs
adc
cmp
add
arpl
mov
sbb
rolb
lds
popa
cmp
mov
ds
mulb
or
adc
fsubrl
sbb
test
mov
shlb
jg
imul
scas
inc
fdivl
data16
scas
std
cmp
or
and
dec
xor
xchg
xor
loopne
push
and
fwait
outsl
jns
fsubp
arpl
iret
movsb
daa
jge
mov
sbb
arpl
dec
popl
lret
and
adc
sub
mov
jl
xchg
mov
rcrb
je
sub
frstpm(287
pop
pop
add
negb
enter
inc
pop
in
jo
jne
cmp
in
andl
jge
aaa
cmp
mov
jge,pt
sub
arpl
bound
test
mov
std
inc
stos
aad
scas
sbb
out
and
stos
dec
mov
push
mov
mov
cli
and
xchg
xor
sti
push
xchg
or
cli
insl
pushf
cltd
and
das
jbe
mov
add
mov
push
or
inc
movsb
lea
test
inc
stos
pop
push
cld
imul
jmp
xchg
call
dec
lods
sbb
test
repnz
aad
xor
icebp
ss
pop
mov
jae
enter
addr16
movups
das
rorb
adc
ficomps
adc
cmp
icebp
inc
aam
jp
pusha
aad
add
mov
push
inc
adc
loope
sbb
xchg
lcall
sbb
mov
imull
xchg
mov
stc
mov
dec
test
ja
ds
test
out
es
lods
cltd
inc
mov
fstpt
and
lret
sbb
dec
scas
stc
lret
mov
test
jns
nop
fidivrl
mov
rcrl
xchg
out
dec
in
shlb
adc
dec
stos
movsl
aas
jl
out
and
scas
insb
cltd
outsl
mov
mov
mov
leave
call
dec
mov
cmp
inc
pop
sbb
xor
mov
arpl
mov
aaa
mov
sarb
xchg
stc
or
clc
adc
cmp
fldt
dec
jnp
mov
lock
lahf
mov
jge
es
adc
fmull
les
addb
icebp
mov
inc
sub
cwtl
scas
mov
or
ss
mov
imul
or
mov
lret
push
inc
nop
or
dec
sub
sahf
cli
or
adc
movsb
adc
fidivrs
xor
pushf
leave
dec
in
push
push
shlb
sub
lods
or
pop
mov
cli
push
xor
pusha
inc
pop
fs
dec
addr16
xor
ljmpw
xchg
cmp
pushf
negb
hlt
test
or
add
add
sub
stc
ret
cmpsl
iret
loopne
xor
subl
insb
lds
imul
sbb
sub
mov
scas
stos
and
fadd
add
add
xchg
mov
jno
mov
jae
out
sub
push
adc
mov
jg
cbtw
je
addb
mov
ja
cmp
inc
incb
xor
addb
mov
mov
add
pop
jg
push
push
pop
sbb
push
mov
jne
sub
outsb
xchg
dec
std
dec
inc
in
imul
jecxz
data16
add
xchg
jg
les
mov
nop
lcall
pushf
daa
or
inc
out
sub
push
test
adc
or
mov
ja
cmp
pop
fidivrl
inc
aas
sbb
scas
lcall
fidivrs
pop
repnz
jns
cmpl
mov
outsl
arpl
mov
jbe
xchg
imul
rolb
ficomps
std
cmp
ss
inc
dec
shr
stos
push
adc
enter
cmp
scas
ja
js
mov
inc
in
push
aam
mov
mov
xor
cwtl
push
sub
cmpsl
repnz
mov
sub
hlt
xor
cltd
je
loopw
xchg
std
push
lods
dec
pop
pushf
popf
aaa
loop
pop
mov
aam
repnz
ret
in
dec
fdivl
loop
call
aam
dec
int3
cmp
out
dec
xchg
das
inc
pop
insb
jnp
hlt
mov
andb
push
inc
mov
dec
int
jns
negl
fistl
cli
pop
ljmp
out
push
movsl
ret
add
outsb
pushf
lods
sbb
subl
aad
sbb
jnp
cli
jl
mov
xchg
dec
pop
aam
adc
insl
sub
insl
and
cltd
repz
movsl
mov
pop
popa
insl
adc
xor
sbb
inc
out
mov
mov
insb
fiaddl
mov
pop
inc
sub
fstl
xor
ficompl
cltd
clc
in
dec
xchg
sbb
push
nop
fs
in
cmp
dec
rorb
rolb
repz
push
cmpsl
int3
std
iret
dec
aam
xor
icebp
adcb
ret
mov
mov
cmp
jno
popa
out
les
or
jg
jbe
fisubl
jl
cmp
mov
mov
je
adcl
aaa
cmpsb
or
adc
lret
pop
inc
insl
clc
cs
dec
or
bound
out
stc
repnz
faddl
aam
packuswb
rcll
sbb
jae
out
pop
jbe
push
add
xchg
movsl
cmp
xor
xor
or
sub
sbb
xchg
push
bound
push
mov
push
adc
je
add
mov
pop
xchg
mov
test
arpl
mov
mov
inc
ret
pop
mov
jp
and
sub
or
xchg
dec
imul
dec
decb
popf
inc
lcall
mov
movsb
pop
inc
cmp
clc
adc
mov
loop
dec
jge
xchg
popf
scas
imul
nop
xchg
push
pop
xor
lods
mov
loope
jo
dec
and
mov
rcrl
icebp
jecxz
cmp
sub
dec
ss
sbb
xchg
jbe
shll
ja
add
iret
lods
mov
outsl
xchg
sub
dec
push
sbbb
pop
xchg
sbb
xorb
mov
cld
mov
and
ret
xor
addr16
jp
xchg
cmp
popa
ds
mov
mov
xchg
or
add
and
divl
push
xor
xlat
sbbl
cmp
mov
sub
data16
jo
in
jbe
fadd
sbb
loope
decl
xcrypt-cfb
cmpsl
out
mov
mov
ret
lock
in
das
pop
addr16
cmp
popa
int
xor
push
mov
dec
mov
push
jns
gs
mov
mov
jecxz
add
ja
inc
sbbl
ds
adc
sbb
pop
xchg
clc
int
sarl
dec
pop
lds
rolb
imul
add
lea
daa
or
mov
cltd
cmp
cmpsl
aam
or
or
push
lcall
mov
mov
adc
xchg
sti
clc
or
dec
or
stos
sbb
or
mov
lahf
mov
imul
adc
lods
lret
aas
hlt
in
sti
sub
sbb
sub
inc
scas
sbb
xchg
dec
xor
pop
xchg
jg
sbb
mov
push
or
inc
inc
mov
dec
fisubrl
jmp
dec
xchg
dec
xchg
push
pop
push
imul
push
in
mov
aaa
cmp
dec
xchg
sub
adc
jne
test
scas
sbb
adc
cmpsb
outsl
movsl
iret
sbb
aam
xor
mov
xchg
imul
sahf
lods
mov
and
and
xchg
pop
xlat
cmp
movsb
or
inc
ds
fwait
addr16
fstl
mov
test
out
xor
inc
and
jecxz
cmc
push
push
inc
xor
xchg
lock
mov
pusha
popa
mov
int3
stc
mov
pusha
xor
int
in
add
adc
push
jmp
cs
add
das
jns
pop
sub
adc
mov
xchg
dec
xor
sbb
fmuls
jb
fs
dec
aaa
fnstenv
dec
push
bound
cmpsl
xor
adc
sub
shl
add
add
nop
add
sbb
xor
int
jbe
add
shrl
les
inc
stc
add
push
call
mov
xchg
fiadds
rorl
test
adc
sti
push
mov
adc
leave
push
inc
rcrl
mov
add
fwait
push
dec
es
rorl
jle
pop
lea
fdivp
mov
out
lahf
add
pop
mov
sub
xchg
add
pop
jno
pop
sbbl
shrl
fimull
jne
outsb
mov
test
cmc
cltd
lock
ret
popw
or
cmp
inc
inc
push
mov
int3
xor
test
mov
aaa
push
jmp
sbb
inc
pop
pop
js
mov
gs
xor
jae
nop
sbb
push
fdivrp
setns
cltd
adc
and
mov
fwait
popf
addr16
popf
or
push
mov
xor
loopne
divb
or
and
lret
push
dec
repnz
sbb
cmp
push
lret
repnz
xchg
inc
dec
arpl
std
xchg
mov
fsubrl
loop
mov
flds
sar
in
xor
in
fimull
les
test
cli
and
int
adc
cmp
fadd
sti
xor
push
jnp
push
rclb
or
arpl
pop
push
in
or
add
rcl
cmpb
jg
leave
add
sbb
outsb
les
cli
xor
jecxz
jae,pn
or
push
fsubrs
xlat
pop
iret
mov
or
lahf
or
dec
and
dec
mov
sub
lret
xor
inc
xorl
and
ficomps
stos
mov
cmp
sbb
es
jmp
fmul
cmpsl
cmp
lock
jns
sbbl
or
das
cmp
push
pop
aas
in
pop
lret
dec
xor
ljmp
push
leave
xchg
cld
xor
nop
xor
leave
or
cmpsb
mov
dec
orb
inc
or
sbb
sub
test
mov
jg
dec
or
inc
xor
xor
addb
ret
insl
xor
cmp
ret
or
dec
rolb
inc
loope
pop
ret
roll
mov
xchg
cld
aad
lahf
dec
bnd
add
or
add
movsl
insl
stc
dec
push
xchg
mov
inc
mul
cld
cwtl
sub
jp
pop
add
sub
mov
ss
cmp
arpl
stos
shr
mov
pop
cmc
push
jb,pt
pop
push
jp
and
jne
mov
aad
mov
push
ficoml
fcoms
data16
dec
repz
sbb
in
dec
rcrb
pop
cmpb
popa
outsb
out
sbb
pushf
jg
loopne
and
mov
inc
ret
xlat
lret
and
jo
add
sub
mov
adc
mov
xor
das
jae
push
add
xchg
add
inc
stc
in
adc
test
xchg
bswap
mov
jecxz
fdivr
dec
and
adc
jne
xchg
in
inc
imul
adc
rolb
mov
test
add
or
orb
and
arpl
push
fiaddl
inc
adc
add
fsubl
and
push
mov
adc
hlt
mov
cmp
je
push
mov
cli
or
arpl
ja
inc
loopne
aas
jmp
and
into
shlb
lret
mov
inc
push
push
int3
push
xor
sti
int
in
sbb
mov
out
mov
fs
cmp
inc
scas
pop
lcall
iret
mov
les
jp
sbb
dec
xchg
sbb
sbb
lret
jnp
imul
lahf
sti
fdivs
stc
hlt
dec
lea
mov
pop
je
jge
xor
pop
sub
cmp
pushf
fwait
or
dec
icebp
pushf
mov
add
sbb
jmp
arpl
pop
out
shll
stos
test
inc
repz
inc
lea
dec
mov
mov
clc
dec
mov
shlb
hlt
cwtl
xor
or
outsb
push
int
push
or
push
sbb
pop
ret
and
mov
adc
xor
and
mov
je
mov
cmpsb
mov
loop
jp
push
lock
pop
addl
or
fadd
and
push
push
out
lods
xlat
mov
or
pop
jae
xchg
xor
mov
mov
ret
jno
mov
popa
pushf
rcrb
jmp
push
jns
lods
cmpsl
sub
pop
lods
xchg
mov
ds
rorb
or
fimull
leave
dec
jge
int
mov
rcr
mov
pop
scas
outsl
in
stos
in
or
lret
add
and
sti
dec
pop
insb
mov
mov
mov
leave
pusha
mov
fldenv
ljmp
in
enter
cmp
cmp
adc
call
bnd
fwait
mov
push
xchg
jmp
lahf
std
mov
insl
dec
out
rorl
imul
jge
xchg
test
cmp
dec
sub
scas
lret
insb
adc
jecxz
xor
inc
mov
fwait
push
subl
es
mov
mov
jg
xor
xor
mov
inc
fwait
mov
movsb
or
data16
scas
adc
adc
push
testb
es
xor
std
dec
bound
sub
loop
jg
movsb
jmp
mov
ljmp
into
or
jae
lahf
cwtl
mov
aaa
cmp
dec
adc
mov
clc
pop
mov
arpl
lock
in
mov
push
lcall
dec
and
or
gs
xchg
loopne
ds
addr16
jbe
test
ljmp
push
or
dec
popf
stos
xchg
cli
push
mov
and
enter
popl
sbb
insl
and
outsl
ljmp
inc
lret
repnz
mov
mov
scas
bound
int
jge
stos
je
pop
in
std
xchg
int3
xchg
aad
out
and
popa
int3
push
mov
cmove
js
adc
ds
shll
sub
push
popa
daa
add
shll
sbb
dec
fldenv
mov
jp
adc
rcrl
test
icebp
repnz
add
xchg
enter
sbb
pop
jge
aad
ja
ss
mov
pop
or
push
lea
sbb
xchg
add
mov
mov
sarw
out
lds
fs
jno
popf
divl
jp
std
adc
insl
xor
fmuls
aam
iret
mov
xlat
push
inc
inc
repnz
icebp
jg
and
mov
pop
aad
orb
sbb
push
les
jge
js
shlb
scas
lea
in
add
cmc
adc
cmpl
hlt
int
push
push
sub
fs
sub
ljmp
lea
daa
xchg
inc
in
out
jns
into
mov
lods
sti
je
xlat
rorb
cwtl
fisubl
jbe
mov
dec
mov
inc
out
outsb
out
sub
xor
fldcw
cwtl
loopne
cmpb
mov
xchg
push
xor
test
or
sub
jae
jo
fs
add
jne
aam
push
cmp
xchg
dec
push
rolb
or
flds
push
out
xor
adc
out
adc
cmp
iret
jo
mov
mov
jge
xchg
stos
mov
xor
les
mov
pop
jno
inc
jo
imul
xorb
outsb
loop
mov
addr16
cld
scas
push
inc
mov
pop
call
pop
push
int3
daa
pop
mov
mov
scas
stos
test
out
test
add
pop
mov
lea
shl
je
push
shlb
and
pusha
or
imul
sub
push
cmpsl
dec
jns
xchg
cmpsl
mov
out
das
inc
orl
test
sti
sbb
adc
call
push
cmp
and
fwait
ja
imul
and
push
fstl
mov
xorb
jmp
push
ljmp
adc
cld
divl
popa
xor
mov
ret
add
inc
cmc
outsb
ja
inc
and
push
and
dec
mov
push
nop
push
insl
sbb
inc
scas
push
popa
pop
or
xlat
fstp
jle
inc
add
dec
push
adc
imul
out
push
pop
movsl
dec
shl
ds
in
lret
or
push
fwait
jmp
jne
fmuls
pushf
jb
xor
ja
mov
cwtl
push
push
add
jg
lea
cmp
jns
sbb
stos
push
aaa
rcr
add
insb
mov
push
sbb
or
mov
enter
add
mov
push
aaa
imul
fimuls
hlt
orl
dec
push
out
push
xor
add
mov
fstl
ret
mov
insl
lods
lods
shll
xchg
sbb
mov
push
jne
sti
lcall
movsb
mov
inc
int
data16
sahf
xor
and
inc
cmp
mov
loop
xor
inc
lea
les
pop
shll
call
mov
je
lods
dec
cmc
pusha
int
jb
lods
and
fists
sub
jg
sbb
dec
mov
xchg
lret
lock
mov
ljmp
insl
gs
aad
dec
movb
icebp
push
shrb
push
cmpb
jp
xchg
imul
pop
div
mov
scas
or
cmp
cltd
inc
cmp
xchg
ret
inc
scas
test
in
push
push
pop
xchg
sbb
insb
lods
or
push
push
mov
cmp
sub
out
jae
and
fwait
xor
push
cmp
nop
test
or
sbb
clc
es
ja
dec
pop
jne
sub
push
popf
aaa
xor
test
mov
jecxz
ror
dec
push
out
push
nop
adc
fistpll
mov
dec
adc
arpl
mov
testb
xor
jae,pt
rcrl
pop
adc
xchg
xchg
test
out
addl
xchg
fistpll
imul
jle
mov
es
mov
fldenv
adc
cmc
lods
not
pop
sub
nop
leave
mov
jo
imul
or
pushf
nop
mov
sarb
enter
out
mov
nop
lea
mov
fistpll
mov
into
int
sahf
movb
mov
aad
in
ds
fidivl
lods
adc
add
test
mov
addl
cmp
dec
das
jmp
out
cs
je
xchg
add
dec
leave
inc
jmp
js
cmovnp
push
out
nop
les
cs
arpl
insl
jbe
jb
lock
rclb
cmp
mov
inc
jno
testb
jne
dec
out
call
jo
fcoml
lds
int3
xchg
cmpsl
out
out
mov
push
loope
xor
xchg
gs
call
mov
fidivl
pop
mov
rcrb
jge
imul
mov
sub
in
xchg
loopne
and
rorb
or
fldt
mov
inc
inc
out
stos
ss
add
dec
and
popf
shll
clc
cwtl
cmpsb
and
icebp
sbb
dec
lea
dec
iret
stc
cmp
repnz
xlat
pushl
shrl
movsl
cwtl
cmc
xchg
jge
out
sbbl
fmull
out
xchg
cs
lret
test
rorb
bt
lds
cwtl
scas
pop
addl
jle
sbb
lds
mov
addb
mov
out
xchg
sub
add
xchg
sub
gs
imul
pop
fisubs
mov
pop
dec
les
in
sub
sbb
sahf
pop
mov
fstpl
ljmp
ret
sbb
cmovns
mov
xor
insb
mov
push
pop
push
inc
mov
ret
popf
push
out
iret
cmpsl
sarb
and
ret
adc
mov
inc
dec
pop
pop
mov
dec
mov
rcrb
push
adc
dec
test
dec
jmp
jne
mov
cwtl
adc
mov
inc
movsl
dec
and
mov
sub
sarl
mov
sub
sub
and
or
lds
pop
ror
inc
fidivrl
cmp
and
repnz
or
jmp
lds
push
xchg
dec
scas
fldt
add
push
lret
xor
cmp
imul
adc
xchg
int3
shlb
jp
xbegin
cmp
xor
lret
roll
and
adc
mov
dec
sarl
jno
dec
ja
sub
push
out
lcall
cmp
jmp
sub
mov
fisubs
int
fwait
repz
lcall
mov
jo
mov
js
rorb
xchg
xchg
in
sbb
pop
pushf
pop
mov
lods
cmp
data16
popa
push
das
pop
push
leave
jp
xlat
aas
in
jge
hlt
and
mov
dec
mov
inc
mov
jle
inc
outsl
push
loopne
bound
mov
push
dec
push
ja
rep
xor
adc
out
cmp
notb
in
test
leave
out
in
and
ja
stos
fsubs
jo
lcall
mov
pop
mov
ret
ret
adc
ja
bound
pop
fisttpl
movsb
lret
and
cmp
lcall
dec
inc
mov
cmpsb
lock
mov
adc
mov
push
lock
incl
out
js
in
cmp
adc
or
nop
es
sbb
arpl
pop
lea
pushf
lods
sub
fsubrp
add
out
cmpsb
adc
sub
mov
addr16
mul
pop
mov
adc
or
lods
shrl
cs
mov
fcmovnb
int
and
push
xchg
jmp
sub
mov
gs
add
push
out
lds
into
call
cmpb
adc
daa
and
pop
cmp
mov
out
sub
movsb
scas
mov
ret
pop
push
icebp
in
outsl
pop
jecxz
je
out
dec
fdivrl
stos
leave
test
data16
test
pop
dec
mov
jp
sub
cmp
cwtl
shll
pop
ret
cmpsb
stc
cmp
in
sub
jecxz
outsb
movsb
daa
ret
sub
loopne
adc
das
ret
or
out
call
aas
popa
lret
andb
mov
enter
jbe
arpl
xchg
xchg
daa
xchg
xchg
enter
dec
fdivrl
cmp
cmc
adc
into
in
push
stos
out
in
add
jg
leave
push
push
xchg
imull
clc
push
fwait
mov
notl
mov
aam
xchg
sbb
movsb
dec
fs
sbb
fnstsw
mov
pop
adc
rclb
loop
push
ss
sub
iret
ljmp
push
xor
mov
xchg
sbb
test
xchg
xchg
dec
mov
mov
rol
mov
ds
xor
data16
ds
xchg
xchg
ret
movsb
imulb
imul
aas
repnz
cmp
fisubl
and
je
and
mov
jp
loopne
lcall
mov
push
pop
int3
sub
jb
aas
loop
sbb
hlt
clc
xchg
jno
pop
and
pushf
lret
mov
scas
add
pop
sbbb
cmpsb
inc
repnz
mov
imul
cltd
jp
ja
pop
push
and
mov
mov
push
cmp
lock
dec
js
push
pushf
iret
inc
repz
imul
or
push
mov
lds
xchg
call
inc
ds
push
pop
mov
xor
cmpsl
sbb
inc
icebp
fiaddl
in
test
inc
pusha
js
dec
xchg
sar
cmp
cmpb
adc
shll
cmp
aaa
and
mov
inc
dec
outsl
lock
daa
cmpsb
and
xorl
cmp
add
loop
fsubr
cli
pop
sub
cmp
jp
sub
mov
xor
in
ret
test
cmp
in
mov
loope
sbb
jbe
and
adc
sti
xchg
sbb
inc
sahf
pop
adc
cli
js
push
insb
cmc
inc
pop
inc
out
mov
cmc
gs
and
mov
sbb
imul
jne
sub
loope
enter
xchg
adc
loop
ret
mov
add
pop
or
cwtl
mov
pop
dec
movsl
fsubrp
pusha
adc
dec
enter
ret
int
loopne
neg
fs
push
dec
push
inc
mov
lcall
push
loop
inc
push
inc
aaa
syscall
mov
mov
iret
loopne
mov
sub
test
pop
shrb
clc
inc
push
push
lods
js
cwtl
adc
lock
mov
in
jns
sbb
mov
jg
es
push
jl
cmp
mov
jmp
add
sti
jne
adc
adc
in
and
jge
cld
clc
mulb
cmp
in
lcall
loop
inc
push
and
jb
fldl2e
dec
cmpl
or
test
out
mov
dec
pop
pop
jnp
popf
xchg
dec
push
mov
cmp
xchg
daa
dec
mov
sbb
scas
mov
sbb
call
popa
stc
push
pop
ret
incl
popa
movsb
fucompp
mov
call
push
fidivs
cmc
leave
je
cmpsl
jnp
imulb
or
addl
xchg
jecxz
fdivl
xchg
cmp
rcr
mov
loope
mov
les
jb
shl
fildl
and
rcr
loope
aas
std
enter
or
pop
xorb
negb
insb
data16
or
sub
dec
test
add
sbb
or
mov
imul
dec
xchg
jmp
mov
inc
js
scas
sbb
sbb
push
xchg
testl
sbb
lods
mov
ja
pop
inc
inc
jge
push
cwtl
adc
inc
push
sbb
out
or
dec
sbb
xchg
and
cmp
add
enter
int3
fisubs
and
mov
andl
mov
out
xchg
xchg
xor
out
inc
repz
mov
pusha
and
jbe
popa
pop
fsts
push
int
enter
sbb
mov
rolb
sbb
stos
sub
gs
mov
call
sbb
mov
cwtl
sub
lods
mov
or
pop
cmpsb
dec
mov
inc
sbb
ud0
inc
jns
sub
or
aad
cs
pop
xchg
mov
jbe
cmp
mov
out
jbe
dec
les
ficompl
lea
mov
adc
or
mov
fildl
mov
mov
ljmp
dec
cmp
adc
sub
std
mov
adc
out
repz
arpl
sbb
repz
roll
adc
pop
pop
out
ds
scas
rorb
mov
popf
jns
outsb
lea
ljmp
mov
fistpll
pop
cmp
mov
sbb
push
mov
push
mov
sub
xlat
out
adc
push
fcmovne
repnz
test
rdmsr
aam
adc
dec
mov
mov
pop
xorb
cli
add
filds
shll
jg
in
pop
add
inc
xlat
movsl
mov
orl
orl
dec
pusha
push
pushf
cmpsl
cmp
sbb
dec
sub
das
mov
shrb
fmulp
test
jge
cmpsl
lret
dec
xchg
push
xchg
mov
cld
loopne
nop
dec
mov
adc
cmp
iret
ds
push
mov
xchg
cmpsb
pop
mov
sub
xor
xchg
xchg
jle
pop
insb
xchg
jbe
xchg
lods
xchg
pop
jns
mov
pop
pusha
jmp
adc
adc
repz
aad
aaa
mov
push
movsb
or
push
lahf
mov
jne
cwtl
aam
push
inc
cmc
fisubrl
jne
mov
aas
xor
or
cltd
popf
pop
shr
cmpb
imul
and
add
jmp
pop
dec
sbb
add
pushf
scas
aam
add
ss
aad
into
repnz
rorl
hlt
cmp
mov
adc
cmp
adcb
je
lea
or
inc
daa
daa
in
pop
xor
test
pop
lahf
std
into
negb
lahf
mov
dec
test
inc
push
mov
fildll
testb
jnp
pop
pop
and
lock
xlat
push
and
xchg
lock
xorl
mov
pop
lods
cmpsl
es
sahf
cmp
inc
dec
jmp
daa
sub
or
jne
pushf
rol
stos
je
pop
mov
aas
mov
jbe
push
or
pop
insl
fwait
sahf
push
ss
sub
jb
push
out
push
xorb
mov
cltd
mov
in
mov
add
cltd
mov
and
dec
aas
inc
jecxz
inc
das
mov
xchg
popf
lahf
sarb
mov
sahf
xchg
outsb
mov
xchg
shrb
xchg
jae
jl
out
cmpsb
cmp
adc
lods
fcomps
push
repnz
add
cmpb
mov
fistps
push
mov
in
xlat
cmp
repnz
or
movsl
mov
test
out
pop
fidivs
inc
push
adc
inc
push
nop
inc
pop
mov
pop
cs
push
out
js
mov
lea
fstpt
xchg
xorb
bound
pushf
cltd
sbb
das
mov
fisubrs
mov
cltd
xor
sbb
and
mov
inc
fbstp
mov
or
cmpsb
pop
ss
xor
call
mov
lret
sti
filds
je
and
outsb
mov
pushf
lcall
pop
cltd
mov
and
mov
icebp
insl
cmovge
int3
ret
mov
cmp
iret
das
lds
mov
and
cltd
push
add
je
xchg
rdmsr
fucomi
fistl
addr16
jmp
xchg
ds
int
pop
dec
or
inc
xchg
ficoms
cmp
out
mov
mov
jns
outsb
ljmp
xchg
inc
lods
jg
xchg
mov
inc
pushf
cmpsb
and
pusha
mov
shll
ror
sahf
xlat
adc
andb
jecxz
insb
jae
mov
lret
xchg
adc
pop
fdivp
mov
andl
int3
add
xchg
dec
repnz
filds
xor
or
out
dec
xchg
inc
inc
push
adc
jl
and
lahf
scas
jmp
xor
adc
sub
clc
jmp
add
pop
scas
sbb
push
xchg
cmp
mov
nop
int3
scas
pop
dec
adcb
mov
cmpb
jmp
pop
jnp
insb
outsl
fnstsw
mov
push
neg
inc
add
mov
dec
xchg
ja
mov
ja
popa
shl
hlt
adc
sbb
cld
ja
repz
jle
outsl
cmp
ljmp
xor
fisttpll
sbb
int3
out
and
inc
imul
sti
fucomip
xchg
cmpsb
sti
sub
jo
leave
in
dec
or
jmp
jl
xor
mov
dec
ja
adc
dec
ds
adc
out
push
pop
pop
sti
sbb
cld
adc
loop
mov
inc
stos
lret
or
mov
lahf
out
push
add
ss
rorb
pop
pusha
mov
mov
pop
sahf
sub
sarl
xor
divb
mov
test
push
or
cmp
inc
fwait
arpl
scas
push
add
sbb
lret
add
ds
xchg
es
jb,pt
or
inc
imul
stos
cmp
les
and
ficoml
xchg
je
inc
sti
jno
dec
stos
popl
test
mov
popaw
mov
jae
daa
mov
jb
push
add
bound
es
mov
push
mov
push
xor
push
jno
insl
sbb
add
aam
pop
and
sarb
mov
call
xor
push
mov
mov
pop
adc
movsb
jle
dec
rep
push
inc
jl
pusha
mov
mov
pop
add
aaa
je
xlat
mov
subl
les
je
pop
mov
in
ljmp
adc
je
add
push
ds
adc
icebp
xor
lods
movsb
mov
cwtl
jle
arpl
mov
shll
aad
add
into
xor
scas
lock
jmp
xchg
pushl
push
fnstenv
dec
mov
js
mov
push
push
push
jge
mov
insl
movsl
lods
pop
ret
out
cmp
xchg
cmc
mulb
jns
out
xchg
stos
in
xchg
mov
jle
pop
call
repz
fs
enter
ret
into
or
xchg
xor
xchg
loopne
testl
cmpsl
push
aam
sbb
push
nop
jmp
mov
ret
xchg
loope
movsl
sbb
xchg
test
cmp
scas
jmp
inc
jecxz
fildll
fisttpll
xchg
aad
rorl
insb
rol
pop
or
rorb
cmc
inc
ds
lcall
xorw
pop
and
lahf
dec
mov
lods
test
pop
xchg
data16
pop
pop
cmpsl
sub
add
jne
insb
lods
call
incb
movsb
inc
inc
pop
test
les
mull
lret
ja
jmp
lret
fnstsw
push
adc
call
push
and
out
dec
xor
xchg
movsb
dec
dec
shlb
and
enter
xor
gs
hlt
jle
inc
aam
mov
or
cmp
repnz
cli
ficoml
ficomps
sub
ficoms
out
fiaddl
sarb
push
decl
daa
lock
xlat
mov
cmpsb
mov
inc
and
outsl
xor
test
int
fdivr
rcl
push
mov
adc
cwtl
mov
ret
fsubl
shll
ljmp
lods
pop
pusha
stos
popf
sub
or
push
mov
sub
scas
out
icebp
cmc
or
lea
or
add
sub
xor
iret
into
inc
lds
imul
popf
pop
jmp
dec
dec
xor
cld
jle
out
mov
ret
test
mov
pop
push
and
insb
call
incl
out
adc
ljmp
sbb
jns
push
push
jbe
imul
xchg
mov
mov
cmp
idivb
adc
stc
sub
mov
fs
xor
mov
adc
adc
xchg
bound
push
lods
inc
rclb
xlat
push
and
arpl
fwait
sub
push
faddl
je
jbe
fcmovb
stc
fwait
pop
xchg
adc
sbb
mov
popf
lds
and
sbb
cmp
or
rcr
cmc
test
cmpsb
pop
out
sub
cli
shlb
mov
loop
gs
shrb
in
push
sub
push
mov
inc
jp
cs
icebp
in
mov
mov
jmp
mov
jp
fstl
dec
jae
cltd
sbbb
sbb
push
and
fistl
jne
adc
mov
sub
pop
jecxz
daa
ret
jbe
les
fdivrs
out
dec
add
ja
mov
insl
enter
jl
mov
sbb
popf
mov
ret
mov
iret
arpl
mov
movsl
push
jns
push
push
fsubr
cmp
fmull
fcmovnb
inc
iret
fs
mov
xchg
jnp
push
lahf
stos
inc
loope
jno
in
test
ret
in
loopne
addb
sbbb
test
movsl
fwait
sub
lret
cld
daa
js
xchg
test
in
dec
adc
jl
loopne
dec
cwtl
dec
repz
jl
jg
cmp
xchg
push
push
ljmp
lds
mov
lock
stos
int3
inc
sbb
hlt
mov
dec
pusha
mov
dec
lods
push
inc
movsb
stos
test
iret
jno
pushf
hlt
jl
repnz
jecxz
add
xchg
jecxz
or
inc
cld
aas
cmp
mov
push
lock
sarl
mov
rolb
jg
shlb
pop
dec
cltd
arpl
ret
cmp
mov
push
push
jne
mov
clc
jg
cs
mov
inc
call
sahf
mov
fucomp
lods
in
mov
push
inc
out
push
xchg
dec
bound
sub
cmp
mov
push
lret
je
aad
ret
jp
movsl
adc
enter
xor
sbb
imul
push
adc
fwait
jb
pop
pop
pop
movsb
leave
xor
andb
lds
in
int
xchg
fs
jbe
or
add
push
pop
nop
sbb
xchg
and
int3
jo
scas
mov
cld
sti
das
xor
pop
inc
test
ljmp
push
mov
dec
loopne
cmpsb
inc
or
mov
repnz
imul
cwtl
xchg
mov
outsb
sti
cmp
in
sbb
cmpsl
lret
xchg
push
test
lea
push
out
xor
adc
sub
cmp
pop
mov
add
loope
jbe
or
and
mov
sbb
mov
into
jb
push
repnz
jge
push
pusha
popf
mov
lahf
mov
sbb
adc
add
mov
mov
pop
loop
rcr
adc
pand
int
addr16
dec
jns
and
mov
mov
sbb
mov
imul
push
scas
dec
adc
loopne
add
xchg
inc
push
ss
pop
in
repz
jl
xchg
out
jmp
mov
lea
and
fcomps
and
sti
inc
push
push
leave
xchg
mov
jae
pop
out
mov
add
mov
ret
ss
iret
dec
mov
insl
mov
ja
pop
stos
mov
das
int3
mov
imul
andb
push
push
ja
andb
fwait
lods
jbe
mov
push
sbb
push
cmp
call
pushf
test
mov
movsl
cmp
cmp
dec
pushf
insl
add
les
push
jp
js
stos
sub
cmp
xor
pusha
or
jp
mov
push
out
jbe
fdivrs
inc
les
push
ds
add
lods
mov
outsl
push
push
ss
cwtl
rol
mov
inc
int
rcrb
mov
cmpsl
sbb
in
pop
add
adc
in
les
testl
call
adc
or
stc
mov
push
lcall
enter
popf
xchg
jp
mov
dec
out
push
sahf
cmpsl
in
lods
jne
inc
mov
mov
push
sub
xchg
das
pusha
or
mov
or
xor
cmp
xchg
rcll
push
push
mov
jp
add
lahf
mov
dec
and
ret
dec
pop
dec
jne
xchg
movsb
movsb
js
enter
inc
push
push
lret
xchg
xor
imul
pop
icebp
xchg
sbb
test
dec
mov
mov
jg
sti
fcomi
dec
movsl
xor
jle
pop
loope
push
xor
out
mov
lods
inc
movsb
enter
ja
mov
fidivs
pop
fistpll
aas
in
cmp
ds
cmp
jp
js
jb
lret
push
shrl
inc
push
stos
mov
xchg
pop
mov
mov
cmp
xchg
bound
nop
inc
hlt
mov
aas
shll
sub
inc
adc
sbb
int3
ljmp
xchg
mov
jmp
pop
ficompl
push
loopne
data16
sbb
ja
outsb
pushf
mov
sbb
sub
mov
in
cmpsl
mov
stc
out
mov
inc
jns
xchg
cmp
cmpsl
xchg
clc
or
es
je
cmp
xor
inc
mov
cmc
mov
dec
pop
xchg
imul
cmpb
insl
xchg
jo
in
clc
push
mov
sti
imul
jmp
jb
test
mov
addr16
fistps
mov
xor
stc
lcall
insl
rol
movsb
and
aam
mov
mov
cmc
fs
mov
es
imul
mov
fcomip
stos
pop
cmp
mov
mov
es
clc
pop
ss
pop
test
xor
xchg
and
movsl
cmpsb
add
jno
dec
pop
stc
sbb
aad
out
sahf
lods
ds
push
loope
js
out
xchg
sbb
pushf
sbb
dec
mov
or
cmp
ret
lcall
xchg
insb
push
jae
les
xchg
notb
je
cmc
mov
not
mov
bound
lods
mov
xchg
sti
xchg
aaa
inc
outsb
cs
hlt
ja
icebp
sbb
mov
loopne
mov
mov
loope
mov
xor
inc
ds
in
cmp
mov
aam
lahf
or
ja
ja
add
lds
sub
jo
push
and
jge
sti
cmp
bnd
jo
push
cmc
pop
movsl
dec
clc
clc
jae
repz
out
cmpb
fwait
bound
sbb
out
cmp
and
insb
xchg
lahf
mov
or
rol
jmp
movsl
lock
mov
mov
dec
or
mov
das
cltd
xchg
cltd
cmpsl
sub
lds
imul
frstor
push
das
enter
dec
xchg
lret
cmpl
inc
or
in
out
rcrl
imull
and
pop
jno
xor
xchg
nop
aam
pop
std
pop
popa
hlt
push
mov
push
aam
mov
mov
lret
add
sbb
insl
out
imul
and
jle
movsl
mov
and
cld
cmp
jmp
or
repz
nop
jb
fisttpl
jg
adcb
shl
inc
adc
dec
and
or
sub
lret
add
mov
push
addr16
sbb
cmpb
mov
stos
xor
add
aam
push
dec
inc
or
mov
xorb
arpl
add
xchg
mov
and
sbb
sbb
imul
mov
dec
insb
mov
xlat
pop
sub
push
xor
add
mov
rclb
jns
or
ja
add
aad
sub
pop
mov
pop
mov
xchg
and
repnz
inc
dec
es
cmpsl
pop
test
xor
sub
cltd
cmpsb
inc
cmp
js
mov
pop
rorl
pop
xchg
push
add
and
int3
push
popa
mov
inc
fbld
dec
xor
dec
adc
jae
lret
push
dec
adc
rorl
or
adc
cmp
jge
sub
jne
aam
repz
inc
mov
ljmp
mov
push
or
scas
mov
or
xchg
in
mov
xor
das
push
in
mov
lret
lret
jns
mov
dec
xchg
xchg
test
cmp
enter
stos
inc
fs
cmp
jae
xor
fdivrl
mov
enter
leave
aad
mov
xor
mov
pushl
test
push
add
divb
mov
xchg
jge
dec
push
int
ss
xchg
jae
and
lds
pusha
or
fwait
imul
lock
mov
outsb
pop
xchg
sub
add
loop
cs
lret
stc
iret
cmpsl
jl
mov
xchg
lret
pop
test
dec
add
divl
in
lds
xchg
xor
push
adc
xor
pop
inc
sub
pop
pusha
outsl
sub
std
test
pop
ret
fs
and
pop
cmp
out
and
inc
xchg
inc
mov
std
stos
repnz
pop
or
add
mov
stc
aaa
daa
jbe
push
dec
fldenv
fmull
mov
push
mov
mov
movsl
cmp
fcompl
aad
popa
bound
out
scas
xchg
icebp
sti
aas
popf
test
pop
fucomp
jae
jge
mov
mov
dec
sti
bound
pop
loopne
repnz
gs
push
pop
std
push
aas
rcrl
lock
lods
dec
in
shl
out
gs
cmpsl
mov
scas
rcl
lret
in
daa
dec
out
aam
pop
xchg
ret
lea
dec
aaa
sub
jbe
jge
add
cltd
int
pop
popa
cmpsl
dec
cmp
push
inc
jo
xor
lock
frstor
pop
pop
out
pusha
repz
nop
mov
add
std
jge
push
and
int3
push
lcall
movsl
int3
dec
sbb
push
cmp
pop
fs
xchg
pop
push
xchg
insl
push
and
es
dec
pop
je
loopne
insl
out
daa
iret
loop
ret
or
pop
cld
or
scas
cmp
mov
cmc
adc
test
mov
imull
jnp
addr16
insl
sub
xchg
adc
push
fidivrl
add
push
push
stos
movsb
mov
push
lret
int3
adc
adc
xchg
dec
inc
or
fisubl
cmp
mov
jno
arpl
lds
lock
dec
sbb
test
sarl
sbb
data16
es
adc
or
bound
je
xchg
mov
enter
ret
into
ja
mov
sbb
test
or
jmp
fimull
push
sti
mov
ffreep
ss
lods
jg
push
outsl
mov
stc
dec
arpl
mov
out
mov
cmpsl
ret
int3
stos
and
movsl
jl
es
cmp
xlat
add
push
out
mov
rcll
das
push
cmp
loope
out
adc
xchg
in
leave
je
add
cltd
add
popf
ficomps
daa
les
test
pop
adc
adc
rorl
call
cli
mov
push
notl
aaa
js
pop
mov
pusha
mov
xchg
jg
stos
ds
sbb
dec
stc
fsts
insl
push
loop
dec
dec
push
sbb
or
test
jge
pop
xchg
adc
jp
mov
xchg
inc
dec
stc
ljmp
rclb
cmp
cmpb
lods
push
xchg
jge
std
sub
pop
cmp
pop
bound
sbb
out
mov
mov
mov
mov
nop
lds
mov
mov
js
lahf
pop
cmc
xlat
add
mov
pop
aas
cs
and
sub
scas
pushf
jno
pop
enter
pushf
push
sub
add
jnp
enter
push
or
jne
test
mov
jae
mov
add
cld
loopne
fcomps
sbb
sub
xor
sbb
sub
loope
int3
sbb
push
jo
into
inc
test
ficoml
mov
mov
cmp
inc
mov
test
or
mov
cmc
into
enter
mov
xor
pop
add
out
jno
lret
popa
ds
sub
pop
and
or
xchg
loop
xchg
outsb
push
adc
les
repz
mov
or
fiadds
pop
push
dec
dec
js
xchg
subl
add
cmpsl
mov
cs
fsubl
les
data16
aas
cmp
lods
pop
gs
insb
mov
cmc
ficomps
es
fstpt
pop
xor
push
sub
and
add
mov
test
push
push
xor
pusha
jle
cmpb
cmc
push
aam
insb
decb
pop
or
mov
mov
mov
mov
xchg
outsl
daa
adc
sbb
out
enter
xlat
in
adc
sub
in
inc
push
xor
adc
fmul
mov
adc
mov
sub
cs
scas
add
mov
and
ret
xchg
out
cmpsl
popl
sti
in
jecxz
mov
into
add
sub
nop
pop
cmp
mov
sub
repnz
and
cwtl
popa
xchg
push
cmp
pusha
ret
cltd
cltd
or
add
pushf
sub
jno
test
mov
nop
cmpsb
stos
cmpl
shlb
and
mov
xor
mov
hlt
test
sarl
sub
xlat
fucomi
lret
xchg
iret
in
mov
movsl
hlt
and
mov
mov
or
mov
shlb
add
inc
mov
push
jo
push
icebp
loopne
js
xchg
inc
xchg
div
outsb
cwtl
rclb
pop
push
and
xor
inc
pop
in
stos
cli
lods
push
jns
rcrb
add
xchg
pop
rclb
or
leave
dec
push
push
sub
push
movsl
jae
les
lret
adc
iret
jmp
xchg
jp
sbb
lret
dec
leave
and
mov
jl
repz
aas
cmpb
leave
mov
data16
add
mov
xor
int
and
scas
add
call
xchg
addr16
incb
or
inc
or
mov
mov
sub
xchg
fadd
ds
push
iret
loope
fs
repnz
cli
adc
ret
sbb
aas
and
fisttpll
mov
mov
add
psubusw
aad
jne
sbb
inc
test
imulb
jmp
xor
push
and
dec
repnz
jno
xor
lea
out
insb
test
fsubr
xchg
adc
add
mov
and
and
in
cli
dec
mov
repz
add
xlat
xchg
mov
add
add
push
pop
mov
inc
sub
jae
xchg
xchg
mov
or
mov
icebp
mul
cmp
mov
cwtl
aam
shll
adc
iret
cmpsb
ja
jae
loopne
cmp
insb
cld
mov
push
ss
pusha
jbe
cwtl
add
inc
pop
mov
popf
aaa
imul
sti
inc
pop
cmc
in
das
mov
pop
imull
fnstsw
sub
xor
and
pop
mov
ret
shll
xor
and
ficompl
jnp
cwtl
sub
jge
pop
lret
mov
test
jae
or
xchg
and
fdivs
add
dec
sub
mov
jle
insl
and
push
xor
out
sbb
in
jmp
sub
mov
sbb
jge
les
test
push
fs
sub
adc
dec
mov
pop
nop
in
arpl
ds
mov
jne
mov
add
mov
and
push
dec
scas
nop
movsl
fimull
push
xor
push
xchg
sub
pop
xor
mov
sbb
dec
xor
das
add
stos
mov
jno
jnp
jge
or
xchg
loope
push
xchg
add
sbbb
ret
out
sbb
pop
mov
fstl
or
mov
xor
imul
fiaddl
push
or
add
loope
mov
sub
xchg
ss
shr
fstps
sar
jb
and
mov
mov
lock
cmc
mov
mov
popa
ss
mov
jmp
add
lahf
sub
es
fcmove
aaa
je
and
fdivrl
enter
fimuls
add
cli
push
cmp
and
and
fstpl
mov
test
pusha
shrl
jecxz
add
sub
dec
movsl
stc
not
jl
adc
aad
lds
iret
xchg
push
or
mov
scas
popf
movsl
iret
enter
fmul
data16
mov
push
dec
mov
xchg
mov
cwtl
adcb
mov
fsubr
repnz
sti
pop
adc
stos
mov
fsubrs
jge
insl
dec
pusha
movsl
adc
jno
arpl
pop
dec
int3
pushf
fdivrl
sbb
add
jecxz
and
adc
inc
sbb
daa
out
sbb
mov
cmp
lds
jl
cs
mov
push
dec
pushf
mov
sbb
inc
jmp
inc
faddp
icebp
and
cmc
pop
imul
enter
or
loopne
fisubrs
notl
dec
mov
xorl
in
xchg
xchg
and
xchg
int3
cmp
pop
jb
call
aas
cld
in
push
mov
push
add
jo
or
inc
and
inc
xor
sbb
mov
mov
mov
xor
jge
xor
add
test
popa
mov
xor
je
cltd
and
test
jle
inc
and
ljmp
mov
mov
sbb
mov
fsubrl
pop
add
jbe
mov
sbb
mov
push
or
add
js
adc
ret
cmp
and
sarb
mov
pop
mov
out
xchg
rcrl
imull
mov
imul
test
add
addb
xchg
aas
mov
jl
fwait
andl
cli
xor
icebp
xchg
stos
dec
dec
pop
pop
adc
xor
cwtl
sub
add
cmp
jno
enter
mov
push
int
and
and
mov
arpl
into
incl
clc
xor
fisubs
das
fstpt
push
xor
movsl
push
dec
pop
add
lock
test
and
inc
into
cmp
mov
xchg
lds
mov
jecxz
add
dec
xchg
mov
fsub
and
sub
in
mov
pop
mov
pop
xor
xchg
test
or
call
mov
dec
inc
push
dec
xchg
xor
xor
sub
dec
jb
jl
mov
mov
mov
or
inc
cmp
jnp
sbb
xor
push
dec
dec
jl
int
loopne
cwtl
dec
cmpl
xchg
lods
lret
dec
cmp
movsl
xor
insl
sahf
mov
adc
sahf
cmp
into
dec
xchg
and
shl
ja
mov
arpl
out
push
cmc
mov
push
sub
cmp
nop
int3
add
dec
jne
pusha
inc
jl
and
mov
push
add
mov
pop
inc
push
or
push
mov
mov
popf
mov
sbb
xlat
mov
and
cmpsb
ret
fbstp
push
xchg
and
rclb
dec
minps
popa
dec
and
mov
icebp
sbb
add
jmp
movsb
and
jl
push
cmp
mov
pop
and
jmp
sbb
in
xlat
dec
or
fiadds
dec
xchg
sbbb
jg
sub
inc
rcll
es
nop
or
add
fldt
ljmp
in
stc
xchg
pop
push
jae
mov
sarl
push
into
mov
stos
push
inc
jne
imul
jbe
xchg
dec
pusha
or
sub
test
pop
sbb
inc
pop
idivl
test
add
fdivs
ljmp
popa
dec
pop
push
sbb
dec
push
arpl
cmp
xorb
les
jg
cmp
pushf
mov
int3
and
pop
sbb
daa
cmp
cmp
dec
shl
testl
pop
loopne
jle
xchg
cltd
mov
add
add
cwtl
jnp
add
test
adc
or
mov
jae
mov
jo
loop
lea
cmp
std
adc
pop
subl
xchg
xchg
xor
ret
mov
arpl
push
xor
rcll
cmp
adc
mov
mov
incl
repnz
and
outsb
lea
outsl
xchg
sub
sbb
add
jecxz
cmp
push
sub
jp
mov
jo
cli
dec
jbe
pop
mov
test
mov
jb
in
push
or
pop
pusha
mov
incl
in
pop
add
das
dec
ret
sub
fnstsw
mov
mov
jecxz
hlt
or
jecxz
lcall
inc
mov
push
ficoms
imul
cmc
sbb
mov
cli
es
mov
xchg
xchg
fcoms
pop
int3
std
in
jg
push
push
int3
fwait
inc
push
add
add
mov
push
div
ljmp
cmpl
hlt
fdivrs
jp
adc
push
or
dec
mov
jle
sbb
adc
mov
xchg
loope
pop
jo
inc
adc
mov
push
imul
sbb
orb
push
inc
and
testb
sub
out
sub
pop
xchg
popa
push
dec
scas
pop
pop
push
add
jbe
in
daa
add
mov
insb
fisubl
cli
inc
push
mov
or
push
aas
insl
xchg
dec
inc
sbb
push
inc
mov
fwait
sbb
cli
mov
dec
rcll
icebp
das
ja
nop
add
dec
cli
repz
mov
or
mov
fstps
xlat
push
cmp
lds
out
jns
adc
dec
push
in
jmp
xchg
in
pop
std
in
test
cmp
cltd
or
push
jae
inc
push
mov
pop
mov
add
in
xchg
cmpl
pop
add
imul
leave
push
inc
dec
pop
jp
and
mov
into
inc
rorb
fidivl
adc
movsl
jecxz
jecxz
cmp
jo
loope
inc
and
mov
xchg
decl
xor
insl
cwtl
mov
sub
mov
hlt
xor
and
push
inc
or
push
fsubp
ljmp
in
mov
das
jnp
loope
mov
out
xor
dec
mov
sarb
mov
dec
xchg
jo
dec
mov
leave
pop
test
cmp
or
push
mov
cmp
mov
pop
jbe
in
cmp
stc
cmc
dec
mov
push
mov
aam
lahf
cmp
add
ja
or
mov
or
mov
lds
das
fs
cmpsl
push
shll
adc
lods
cli
movsl
pop
jecxz
inc
inc
mov
imul
mov
inc
inc
pop
jge
push
jbe
add
mov
mov
or
pop
leave
out
iret
inc
pop
fdivr
imul
scas
mov
popa
icebp
adcl
shll
int
jecxz
lcall
int
imul
das
out
scas
shrl
out
aad
lea
mov
enter
push
xchg
push
out
movb
mov
cmp
pop
ret
pop
or
popa
pop
dec
xchg
cmp
repz
insl
dec
dec
sahf
aaa
je
scas
test
std
mov
dec
cmp
nop
xlat
jp
faddl
cmpsb
and
add
dec
not
hlt
clc
xor
gs
int3
pop
in
mov
pop
add
sbb
pop
call
lds
je
cmp
push
fwait
jnp
lods
popf
notl
rcl
xlat
mov
pop
push
dec
loop
cli
add
in
mov
dec
cmp
mov
or
ljmp
scas
scas
das
xor
repnz
imul
out
mov
mov
xchg
aas
inc
cmpsl
movsl
out
sbb
push
push
insl
cmp
cmpsl
xchg
adc
push
dec
sub
xchg
jmp
ja
std
inc
shr
je
repnz
loopne
sbb
aaa
dec
mov
cmp
xor
and
gs
scas
xorl
cmp
inc
in
push
div
sub
lods
testb
fsubr
lods
dec
cwtl
sub
push
xor
fldl
jno
pushf
push
xchg
sbb
mov
sarl
xor
mov
push
sbb
sar
pop
jnp
icebp
in
push
int
add
mov
ret
icebp
pop
mov
or
mov
jne
scas
adc
adc
jbe
cmpsb
popf
sbb
adc
lahf
in
scas
incb
push
xchg
dec
aas
adc
inc
sbbl
dec
call
aas
cmp
dec
xor
rep
dec
pop
in
sub
dec
push
addr16
xorb
mov
shrl
cmp
add
push
sub
leave
insb
jmp
imul
mov
sub
jo
jns
push
pop
sti
clc
xchg
hlt
and
call
dec
insb
pop
push
cld
lock
xor
cmp
jmp
and
sbb
je
inc
nop
push
movsl
sub
xchg
pop
mov
adc
in
lahf
jmp
push
or
dec
push
ds
cmpsl
out
testb
jg
mov
xchg
dec
jle
xorb
adc
in
mov
add
lret
out
repz
xchg
cmp
xor
fists
test
cmp
jnp
fs
rol
lret
dec
inc
jmp
add
stos
not
outsl
dec
mov
mov
call
lods
mov
xchg
sub
push
xor
jecxz
ror
rorl
sti
and
push
jae
lea
xchg
pop
and
ja
lods
fldt
scas
js
arpl
pop
or
adc
ljmp
dec
subb
pop
jo
imul
out
pop
mov
out
cmp
or
add
adc
mov
add
and
lds
xor
mov
sarl
rcrb
hlt
sub
push
jmp
fistpll
pop
xlat
test
sub
sbb
addl
pop
int3
push
pushf
cmp
xor
pop
je
xchg
adc
fsubl
clc
callw
std
sahf
cmp
les
repz
addr16
xchg
fstpt
or
mov
lea
call
into
loope
hlt
sbb
call
add
bound
in
lret
rclb
mov
sbb
shrb
js
cmp
fldcw
mov
out
outsl
jae
aad
mov
or
inc
cwtl
orl
ljmp
dec
jno
jmp
xor
mov
lea
inc
pop
ret
jns
fmuls
fwait
push
fwait
stos
lea
mov
adc
mov
pop
sub
mov
jle
mov
push
js
loopne
sbb
push
push
push
test
mov
mov
jp
adc
inc
jae
sub
sub
mov
aaa
push
sub
test
orl
mov
dec
or
sbb
push
test
pop
ljmp
rolw
popa
mov
and
cmp
shr
enter
xchg
in
into
xlat
push
inc
adc
push
pop
dec
in
xlat
rclb
in
mov
inc
adc
xchg
cmp
and
sub
ljmp
sbb
xchg
cmc
jbe
or
xchg
icebp
push
int3
mov
cmp
pop
mov
nop
and
and
inc
loopne
setb
sbb
orl
rcrl
pusha
sbb
add
sub
fcompl
sti
lock
dec
jp
lock
pop
push
pusha
lods
jle
stos
push
mov
mov
cmp
loopne
push
jne
push
push
add
lahf
cwtl
push
in
push
cmp
fadds
xchg
mov
mov
sub
int
lods
dec
test
lcall
ret
scas
jae
inc
pop
lods
add
es
bound
fidivrs
xchg
ror
inc
sub
push
and
add
or
mov
xchg
cmp
fucomip
adc
pop
ds
addr16
fdivrl
test
loop
mov
and
scas
push
subl
xor
cmp
aas
stc
add
outsb
jne
pop
push
lret
mov
jbe
inc
ds
adc
push
test
scas
xchg
and
mov
fs
sbb
pop
in
xchg
sub
dec
xor
cmpsl
mov
inc
cmp
aas
mov
mov
call
inc
mov
lea
fstpl
out
mov
mov
mov
push
cli
mov
cld
push
xchg
push
jns
out
sbb
mov
scas
jae
sti
pop
add
push
sbb
nop
cmp
sub
ss
add
add
mov
or
dec
push
push
je
js
scas
lods
adc
inc
and
fnsave
mov
popa
push
mov
jo
adc
or
cwtl
xchg
or
in
lcall
mov
mov
movb
xchg
lret
dec
mov
mov
cmpl
outsb
push
lds
lret
mov
adc
test
loopne
arpl
sbb
pop
xchg
popf
adc
fildll
outsl
shl
lds
pop
mov
mov
inc
cld
xchg
hlt
cwtl
push
in
decb
daa
cmp
pusha
mov
mov
xor
cmpsl
jne
das
rorb
mov
aam
inc
sub
imul
lcall
push
mov
xchg
push
and
jecxz
cmp
movsb
stos
orl
ljmp
sbb
xchg
ror
push
push
mov
incl
int
data16
in
lahf
mov
pop
add
ficomps
and
frstor
xor
pop
jb
and
fsubs
pop
push
popa
ljmp
fdivrs
mov
out
and
xchg
pusha
and
in
mov
xor
dec
repz
jno
push
mov
and
icebp
pop
xchg
xchg
test
dec
movb
xor
sahf
cmc
int
pop
add
scas
shll
add
fwait
scas
scas
rclb
cmc
mov
rol
int
or
out
fimuls
xchg
mov
icebp
mov
sbb
jp
mov
adc
sub
and
jno
fxch
mov
dec
xor
mov
hlt
lea
push
aas
add
pop
out
cld
dec
dec
dec
cmpsb
jg
push
jmp
cmp
addb
mov
lret
daa
js
call
lods
dec
cmp
repz
jmp
stos
and
or
sub
loope
enter
nop
gs
cmp
in
or
adc
stos
and
dec
add
in
repz
mov
repz
and
pop
push
ja
push
push
mov
xchg
push
and
loope
imul
mov
inc
mov
push
xor
adc
ja
push
add
fidivl
das
mov
mov
negl
aam
xchg
enter
pushl
cmp
clc
lahf
jmp
jb
lret
push
push
jo
add
sbb
movsb
or
enter
jg
or
push
jp
sbb
xchg
insl
or
pop
cli
xor
nop
lahf
nop
nop
dec
jo
clc
imul
push
icebp
das
add
push
dec
stos
mov
lcall
xor
int3
aad
arpl
xchg
mov
pop
aas
pop
fldl
mov
daa
pop
rcr
cmp
or
jbe
mov
dec
in
jg
mov
mov
jle
inc
sub
fs
or
add
xor
lret
adc
cld
jns
xorl
iret
insb
int
push
sub
push
adc
fadd
xchg
cmp
pop
fidivl
pop
outsl
nop
rcll
out
scas
mov
inc
cmp
xchg
jge
mov
jae
xchg
sahf
lds
sbb
push
inc
cmpsl
dec
jnp
sub
bound
pusha
xor
enter
sbb
mov
dec
je
xor
mov
jb
stc
adc
sbbl
js
cmp
mov
adc
ret
lds
mov
adc
in
movsl
ret
call
shlb
adc
adc
sbb
jns
mov
arpl
das
cld
add
jbe
jecxz
cmp
popf
int
xchg
cmp
mov
mov
push
lret
and
fwait
andl
or
pop
sbb
pop
xchg
int
cmp
xchg
mov
dec
push
loope
out
jp
and
xchg
sahf
inc
jg
and
pushf
jnp
shll
inc
cwtl
jp
cmpsl
mov
fcomp
int
and
fidivs
test
mov
movsb
pushf
and
or
sbb
test
sub
xchg
adc
xlat
inc
add
cmp
xchg
xchg
pop
jae
mov
jo
pop
mov
mov
stc
xorl
stos
dec
xrelease
adc
mov
outsl
jnp
inc
push
addb
daa
xchg
or
mov
sysexit
mov
lahf
dec
fucom
cld
jmp
shlb
cs
mov
xchg
fisubrs
out
cmp
pop
push
mulb
js
dec
into
aaa
or
fdivr
and
cmc
dec
decb
xor
add
dec
fdivrs
sub
sarb
jge
nop
or
addl
or
adcb
aam
inc
pop
or
clc
repz
ret
fldenv
lret
push
xor
xchg
imul
cmp
sub
mov
xor
insl
enter
push
mov
std
paddusb
jbe
or
insl
call
inc
push
adcb
fsts
and
push
out
addr16
daa
sub
adc
and
std
call
rorl
loop
repnz
xor
pop
je
mov
cmp
jb
cmpsl
mov
add
jge
push
ss
es
pop
hlt
lock
xchg
xor
dec
cli
iret
mov
movsl
je
add
pushf
iret
add
xchg
test
mov
and
int
fistl
adc
stos
push
mov
int3
xor
loopne
sub
rcl
lds
in
aas
movsl
imul
popl
push
xchg
push
negl
pop
testb
add
sbb
cmp
mov
cmpsl
fs
and
mov
je
call
inc
popf
xchg
repz
xchg
dec
push
xor
je
pop
ja
adc
pop
mov
out
or
lds
pop
sub
push
jae
fisttpl
pop
in
sarl
daa
mov
nop
cmpsl
mov
inc
mov
push
sub
daa
push
dec
adc
dec
out
jo
dec
notb
hlt
ja
int
or
pop
dec
mov
icebp
cmpsb
dec
mov
adc
scas
cmp
xor
xor
sub
filds
inc
mov
adcb
into
imul
cmp
mov
fnstenv
mov
pop
jl
rorl
iret
aam
out
clc
dec
loop
sub
mov
mov
bnd
cs
xor
xchg
mov
push
sub
xor
lods
jge,pt
lcall
fidivs
push
ret
add
sbb
fcoms
mov
fwait
mov
xor
aam
mov
or
pop
mulb
sub
inc
jg
subl
fcoms
mov
sbbb
cmp
mov
mov
push
fnstcw
sub
jmp
adc
mul
sahf
in
xchg
outsb
dec
fildll
or
jnp
cmp
loopne
nop
or
adc
cmp
mov
sbb
cld
push
cmpsb
pop
jecxz
fwait
rorb
popa
outsb
fisttps
cmp
lock
xchg
fiaddl
les
mov
leave
cmc
test
xchg
lods
xchg
pop
mov
jp
xor
cwtl
xor
jg
adc
xlat
mov
cmp
fdivr
sahf
add
cmp
or
mov
mul
stos
rorl
shlb
cmp
xchg
cwtl
xchg
aad
mov
mov
xor
mov
das
mov
jp
xor
repz
jbe
fcomip
gs
dec
aaa
jo
push
mov
cmpsl
outsl
pop
rcrl
jmp
mov
dec
or
sub
iret
mul
xchg
sbb
dec
mov
add
imul
and
or
jg
adc
push
lods
andb
or
loopne
add
xchg
movsb
sub
lret
cmc
lock
bound
or
pop
mov
pop
lods
mov
pop
and
out
lds
and
and
in
pop
mov
out
jge
adc
push
push
push
cmp
xchg
ret
subb
shl
mov
js
dec
push
adc
or
pushf
push
jb
add
lock
cmp
mov
jne
in
cwtl
or
push
leave
xchg
push
jmp
insb
or
cwtl
ja
xchg
jnp
mov
xchg
pop
movsb
test
loop
mov
xor
into
bound
xor
and
xor
hlt
cmp
xchg
adc
movsb
xchg
and
in
xor
mov
inc
add
mov
jno
mov
fcompl
rclb
sbb
inc
mov
cmpsl
inc
stos
dec
mov
insb
and
sahf
out
les
xchg
in
mov
arpl
insl
push
adc
cmp
lcall
mov
xchg
inc
out
or
mov
adc
xchg
lods
xor
sbb
les
shrl
fbstp
test
stc
sub
mov
lcall
in
fdivs
mov
jle
call
rorb
jbe
lock
cmc
xchg
movsb
sbbb
mov
adc
rorb
leave
push
stos
clc
lret
pop
gs
cmpsl
xorb
push
mov
das
pop
jb
mov
repz
bound
shll
pop
sbb
dec
or
js
dec
pop
out
loopne
adc
push
xor
mov
lods
test
ss
fxrstor
hlt
out
fcomp
mov
sahf
pop
cmpsl
addr16
clc
push
aam
jp
test
sbb
cmc
adc
test
adc
aas
push
stc
cmp
shrl
fsub
sbb
iret
leave
mov
inc
xor
jo
sarb
dec
cmp
inc
icebp
pop
xchg
mov
dec
lret
fisubrs
insl
jp
fwait
in
pop
in
sbb
addr16
fxch
pop
out
loopne
cmpsl
xor
cld
jns
jl
and
es
and
push
dec
bound
inc
mov
fld
hlt
dec
sbb
in
mov
or
sbb
repnz
mov
out
cmp
mov
xchg
outsl
dec
test
pop
rcll
inc
gs
inc
les
dec
xchg
test
jo
leave
xchg
enter
inc
push
movsb
test
testb
mov
or
push
addb
dec
movsb
pop
rcr
xchg
frstor
fwait
cli
inc
xor
dec
push
sti
mov
xorl
cmpsb
std
pushf
test
sarl
addr16
or
jae
fadds
sub
and
pop
jno
imul
fldcw
fstpl
sbb
dec
mov
pop
cmpsl
mov
int
stc
mov
fisttpl
movsb
push
pop
jle
dec
jge
jne
pop
and
inc
repz
jle
fnsave
outsl
in
pop
mov
lahf
or
out
mov
jecxz
cli
and
add
mov
mov
movsl
jno
out
sbb
jl
sbb
mov
aas
pop
xchg
cs
jbe
lcall
fcmovne
aaa
or
pminub
xchg
and
push
mov
mov
push
test
stc
and
mov
pop
inc
pop
pop
pushl
shl
jns
insb
scas
notl
mov
mov
xchg
dec
lret
mov
test
mov
adc
scas
sbb
inc
xor
loopne
or
mov
dec
mov
arpl
cmp
loopne
dec
ret
data16
fisttpll
std
out
shrl
push
gs
data16
dec
test
bound
dec
test
xchg
and
adc
arpl
xor
test
sbb
push
in
cld
in
loop
clc
mov
xor
fstpt
arpl
sub
xchg
mov
cmp
xchg
insb
inc
shr
add
sbb
out
rcrb
push
push
dec
push
inc
pop
in
inc
bound
ss
xor
addl
fsubr
test
mov
mov
loop
imul
sahf
sub
loop
insl
xor
push
in
scas
xor
ja
arpl
cmp
outsb
push
and
out
cmp
push
add
mov
stc
in
mov
add
jg
sub
data16
loopne
add
xor
dec
aaa
xor
sub
imul
xor
insl
sahf
add
and
adc
das
ja
adc
mov
pop
xchg
daa
cltd
xor
inc
push
add
outsl
enter
pop
push
jl
lret
dec
out
aad
mov
imul
and
mov
jno
push
mov
jp
scas
es
push
xchg
out
movsl
adc
mov
and
adc
fcoml
push
loopne
or
arpl
or
je
rcrl
sbb
fs
and
ror
jae
popf
add
add
pusha
push
nop
cmpsb
jnp
mov
sbb
xor
lret
cli
mov
inc
and
adc
ret
lret
xchg
inc
push
xlat
scas
or
cmp
xchg
aas
mov
cli
flds
jns
xorb
popa
xchg
fcomi
inc
and
sbb
cmp
xor
icebp
xchg
test
pop
fwait
bound
jg
mov
push
and
cld
lods
cmp
shrb
lret
push
inc
inc
dec
daa
pushf
push
push
aam
jmp
sbb
xchg
mov
pop
out
pop
loop
fimull
inc
mov
mov
jno
dec
mov
add
mov
and
xchg
lcall
hlt
adc
jge
inc
test
dec
sbb
cwtl
push
dec
insb
inc
mov
fisubrs
mov
and
jle
mov
cmp
adc
add
divb
cs
mov
cwtl
js
or
or
rcrl
mov
pop
icebp
insl
es
mov
mov
add
movsb
pop
sbb
fs
out
pop
sub
pop
enter
daa
jbe
jle
adc
fisttps
movsb
xor
fmuls
xor
stos
mov
jge
call
mov
adc
push
je
cmp
adc
addr16
pop
or
jbe
out
inc
fsubr
sbb
out
mov
cs
mov
push
and
sbb
mov
push
pushf
xchg
pop
aaa
inc
or
sarl
in
clc
fwait
into
fwait
aam
mov
out
or
ja
sbb
pop
sub
mov
test
xchg
outsb
shrb
dec
fdivr
pop
fdivrl
cmp
in
xor
push
imull
inc
mov
into
adc
popf
cmp
push
fisubl
cmp
loop
cwtl
pop
jmp
lea
lods
cmp
cld
xor
loope
pop
cmpsb
push
xchg
out
test
jbe
rcrb
orl
inc
adc
pop
cmp
dec
icebp
sub
and
xor
sub
jns
sub
push
dec
adc
out
and
xchg
or
ja
and
jb
pop
test
inc
xchg
jge
add
xchg
pop
daa
out
xlat
mov
cltd
inc
hlt
out
dec
out
cld
sub
push
js
in
mov
outsb
iret
add
inc
hlt
rol
popl
xlat
or
cmpb
aam
scas
and
hlt
jp
pushf
pop
inc
mov
lock
mov
add
dec
xor
jmp
hlt
std
pop
or
adc
mov
pop
les
xor
shl
bound
xchg
mov
js
or
adc
ret
hlt
xlat
aad
sbb
sbb
int3
repz
mov
push
lds
jnp
cmp
lret
iret
add
lahf
cwtl
in
sbb
or
popa
xchg
popl
xchg
out
push
pop
filds
popa
jne
decb
xchg
fstps
jnp
rcrl
cmp
nop
jns
push
or
jae
lcall
mov
call
xor
cmp
arpl
fucomp
in
pop
inc
cmp
sub
sub
fsubr
ret
outsb
add
sub
jo
xor
push
stc
jno
jle
test
add
arpl
or
pop
sub
or
push
push
xchg
sbb
adc
mov
push
fstpt
ret
lret
add
pop
hlt
loop
les
cmc
xor
mov
insb
add
sbb
xor
fwait
and
clc
setg
addl
testb
les
push
movsb
jmp
dec
cmpsb
lods
and
movsb
sbb
imul
pop
mov
mov
call
or
mov
dec
xor
cmp
insl
out
adc
push
out
in
out
sub
jbe
xor
into
imul
mov
pop
jecxz
test
je
fistpl
test
xchg
sbb
out
pop
pop
gs
mov
push
jle
mov
xchg
fisttps
cmp
push
push
pop
mov
outsl
xchg
loop
lods
push
inc
das
fdivl
pop
and
mov
rcll
push
dec
and
dec
das
mov
ds
mov
stos
adc
ret
ja
into
dec
xor
test
in
and
int3
dec
mov
enter
jp
cmp
int3
dec
cmp
jmp
xlat
mov
popf
push
push
shl
adc
mov
mov
mov
in
outsl
sbb
loopne
cwtl
sub
incb
push
rcl
in
inc
insl
sti
outsl
and
rcr
mov
nop
call
std
test
sub
jno
arpl
stos
aaa
popa
pop
push
aad
or
xor
out
fimull
lcall
jecxz
push
add
xchg
xchg
fwait
adc
outsb
push
fdivrs
shlb
dec
dec
lods
push
mov
jbe
sub
subb
sub
bound
and
jno
lahf
insb
cmp
mov
and
nop
pusha
das
mov
sti
cmp
cmp
jmp
dec
aad
adc
mov
insb
add
gs
insl
into
shrl
cmp
in
jbe
arpl
inc
jp
or
or
mov
je
cli
and
mov
shll
mov
dec
insb
mov
sub
lahf
mov
jo
or
fadds
push
push
int3
aaa
push
incb
pushf
dec
test
repz
je
lock
pop
test
ret
xor
out
jbe
mov
jb
mov
out
div
cvtdq2ps
stos
rclb
arpl
fbstp
pop
sub
cmpl
and
roll
xchg
jbe
sub
mov
divb
sbb
sub
push
sub
adc
leave
in
adc
mov
jmp
or
fwait
or
pop
mov
jmp
fmull
aad
outsl
pop
jge
es
pop
inc
and
fisubs
addr16
data16
push
orb
aas
pop
aam
cwtl
mov
and
ds
cmpsb
mov
cmpsb
arpl
stos
xor
pop
clc
sbb
inc
scas
ret
fcompl
mov
loopne
xchg
jb
and
dec
dec
inc
stos
lds
aas
outsl
sub
mov
inc
je
lods
sub
pushf
dec
dec
cltd
nop
or
and
popa
push
mov
dec
sbb
cmp
sub
add
std
jg
mov
cmp
xlat
xchg
xchg
loope
mov
decl
ss
dec
mov
inc
and
adc
cltd
push
lahf
arpl
pop
das
inc
inc
fs
loopne
push
and
sub
ja
sub
cld
jne
arpl
jmp
clc
mov
inc
and
jnp
xlat
inc
pop
lahf
cmpb
add
repnz
nop
lea
and
xchg
sub
lds
inc
mov
pop
xchg
xchg
xor
cmpsb
sub
xchg
xlat
sbb
xchg
sti
scas
cmc
enter
orl
loop
subb
and
cmp
out
ja
jne
or
inc
scas
add
aas
cmp
cltd
push
sub
mov
sahf
jmp
roll
push
loope
movl
pop
inc
sbb
subl
mov
sbb
sub
jecxz
in
dec
sbb
cwtl
inc
ds
lods
inc
jb
outsl
sub
fnstenv
mov
jns
lea
xor
in
andb
xchg
jg
subl
mov
jbe
cs
ss
gs
mov
mov
cmc
sbb
sbb
aaa
sub
cwtl
or
sbb
test
inc
clc
xchg
jp
and
add
stos
fstl
push
aad
mov
xchg
xor
sub
cmp
out
xchg
jne
mov
in
hlt
or
mov
popf
mov
adc
sbb
insb
xchg
inc
lret
or
and
das
scas
fs
ds
push
cmp
lds
call
jecxz
jne
push
xchg
mov
sub
cltd
lods
aas
and
imul
call
fwait
aas
imul
jl
cmp
lcall
test
scas
sub
pop
jbe
pusha
and
in
fidivs
outsl
sbb
and
xor
gs
pushf
pop
jns
push
sbb
adcl
dec
xlat
xor
in
push
pop
fdivs
jns
add
inc
inc
or
jg
jl
dec
push
in
push
imul
and
xchg
lcall
xor
xchg
fnsave
xchg
loopne
arpl
mov
lret
dec
icebp
mov
fcomi
popf
cmp
sbb
shl
fidivrl
jno
test
cwtl
repnz
pop
inc
or
mov
fsubrs
jne
rcrl
cltd
test
cmp
imul
cmpl
jns
sbb
sbb
jecxz
cmp
cmp
inc
jae
addr16
rcrb
xchg
aam
std
sti
adc
sub
sbb
sahf
push
or
mov
mov
out
sub
mov
add
mov
jmp
mov
push
mov
push
mov
repnz
pop
push
mov
xor
iret
mov
dec
lret
call
insl
rcrb
cmp
lods
sub
loope
rcll
mov
or
push
push
xchg
lret
xor
mov
fs
adc
pushf
imul
mov
sub
mov
movsb
sub
mov
gs
sub
call
push
and
pop
iret
jmp
or
rcll
inc
xchg
out
push
xor
test
outsb
dec
leave
les
and
aaa
js
jp
popf
insl
int
stc
test
ret
xchg
in
xchg
jo
mov
mov
add
xchg
mov
movb
outsl
int
cmp
xor
in
leave
adc
test
das
or
xchg
pop
inc
jmp
or
push
cwtl
aad
dec
push
gs
xor
js
sub
std
insb
mov
inc
sub
pop
cwtl
mov
lock
pop
pop
mov
push
out
adc
icebp
lods
std
sub
cmpsb
cmpsl
inc
orb
ja
mov
cltd
fbld
clc
nop
or
dec
je
fcmovu
add
ss
cs
int
or
pushf
adc
aam
mov
test
rclb
mov
adc
push
pop
mov
lcall
lea
push
lock
or
orb
fldt
popl
lcall
pop
std
sbb
movsl
vmovaps
adc
jmp
mov
aaa
push
xor
rorb
and
mov
mov
aam
andl
mov
scas
adc
dec
mov
mov
xchg
int3
sbb
and
inc
stos
mov
sub
or
cmc
ljmp
push
cltd
ss
mov
int
test
push
mov
or
cmpsl
data16
mov
aaa
mov
cmpsb
xchg
mov
adc
push
sub
xchg
push
push
mov
clc
sub
dec
jge
mov
or
adc
sub
push
cs
mov
ja
das
fsubrl
lret
xorl
and
in
in
ds
jns
sub
sbb
addr16
ja
fcoml
lret
push
push
das
ss
inc
cltd
xchg
add
arpl
xchg
sti
mov
mov
dec
mov
mov
pop
inc
dec
add
fdivl
sub
daa
testl
and
lahf
jbe
punpckldq
lods
mov
mov
cwtl
icebp
in
xor
ja
cli
fsts
scas
lods
dec
mov
fstl
aaa
subl
jge
cmp
repz
add
in
mov
mov
pop
data16
cs
xchg
jge
movsb
pop
push
jno
out
sarl
adc
ljmp
xor
mov
push
fistl
mov
movsb
push
jns
sarl
adc
sub
out
xchg
data16
out
adc
xchg
jmp
xor
jno
sbb
pop
cwtl
ja
mov
adc
call
and
movsl
out
popa
xor
inc
jge
iret
imul
mov
out
int
xor
cmp
ja
es
or
jmp
icebp
in
mov
popf
and
jne
fstpl
cmp
imul
inc
sub
xor
pop
filds
mov
out
sub
cld
sbb
mov
cs
push
call
adc
push
push
lret
lods
fbld
mov
xor
ret
aas
repz
inc
jmp
js
inc
fsubp
adc
pop
das
loop
repnz
cmp
lahf
sbb
or
lea
ret
xchg
shl
add
icebp
xor
rorb
push
loope
dec
gs
faddl
mov
mov
lods
in
xchg
gs
adc
cmpsl
inc
add
and
inc
int3
adc
adc
sub
inc
push
inc
or
icebp
ds
mov
push
mov
mov
mov
push
test
test
gs
pop
push
xchg
pop
pop
inc
testb
xor
dec
cmpb
inc
mov
xchg
lock
xchg
jns
mov
pushf
sbb
and
adc
loope
pop
xor
loop
or
inc
mov
aas
adc
jae
push
std
add
stos
insl
rolb
clc
cmp
pop
xchg
and
pop
pop
sbb
imul
cmp
cmp
in
js
mov
scas
addr16
lret
ds
add
pop
jo
xchg
filds
xchg
xchg
imul
xchg
mov
mov
cmp
cmpsl
aaa
sbb
and
adc
enter
mov
fnsave
int
dec
push
lock
xchg
pop
ljmp
idivl
ja
outsb
xor
xor
mov
pop
in
or
inc
cmp
loope
into
in
in
imull
dec
and
dec
pop
add
or
rcr
adc
es
daa
jbe
push
out
mov
push
outsb
dec
dec
push
das
stos
mov
test
std
andnps
sub
mov
mov
sbb
imulb
adc
cmp
aad
inc
xor
jp
sub
xchg
xchg
pop
sbb
ret
push
inc
pop
add
jecxz
fscale
push
sub
cld
jo
insb
jg
fs
push
mov
fstl
push
stos
jle
mov
xchg
adcb
ret
add
stc
mov
std
or
mov
mul
ss
pop
and
mov
dec
rclb
enter
pop
ficoms
push
pop
jecxz
push
dec
outsl
sub
out
xor
jns
add
xchg
and
push
xlat
mov
sbb
test
stc
push
pop
push
test
jmp
gs
pop
cmp
out
pop
sub
ret
jmp
sub
in
push
ja
pop
stos
pop
faddl
sub
push
jle
test
pop
stos
shlb
xor
sub
dec
rorb
lock
pop
pop
fisubs
movsb
add
or
scas
push
ja
daa
jb
xor
call
mov
dec
xor
mov
mov
pop
in
pushf
rcl
push
sti
cmp
push
and
lock
pop
divl
ret
push
lods
mov
test
push
movd
popa
push
add
add
push
mov
mov
aaa
mov
xor
dec
add
mov
dec
shr
aam
cmp
loop
sub
les
pop
mov
mov
std
in
cmp
lret
jmp
pop
lds
push
push
aam
jmp
enter
dec
cmp
addr16
pop
push
add
xchg
mov
outsl
mov
mov
push
test
adc
dec
movsb
sbb
cmp
add
arpl
rcrl
xchg
cmp
pop
cmpsl
sbb
push
pusha
pop
cmp
xor
pop
ja
xor
inc
inc
mov
push
mov
mov
or
and
stos
mov
pop
fcoms
lods
adc
mov
es
loope,pt
popf
mov
stos
push
movsl
dec
gs
outsb
movsb
mov
sbb
xchg
js
mov
cwtl
sub
inc
pushl
mov
mov
into
add
push
imul
sbb
adc
push
not
xchg
fucomp
lds
adcl
push
xchg
popf
jae
mov
xchg
pop
or
in
or
addr16
push
and
pushf
cmp
adc
adc
fcmove
cmp
and
cmc
das
dec
cmp
stos
xchg
sahf
pushf
fiaddl
xor
cmp
and
jl
popa
and
scas
test
cld
pop
cmp
xchg
les
mov
dec
inc
lret
lahf
jmp
fistpll
adc
shll
cltd
jnp
in
addr16
insb
pop
push
movsb
dec
fidivrl
mov
mov
fildll
movsb
inc
cmpsl
out
mov
sub
movsb
orl
mov
stos
fwait
pushl
gs
in
mov
xchg
sub
fwait
add
pop
test
shrb
or
jns
data16
jle
aam
shll
or
jl
shrl
adc
xchg
sub
xor
in
adc
dec
jb
sti
imul
ljmp
cs
enter
idiv
ss
or
and
pop
mov
dec
mov
mov
adc
lcall
mov
out
sbbb
add
mov
ljmp
inc
insb
adc
xchg
sub
cmp
cmp
cmp
sub
pop
mov
test
fidivrl
and
sub
lods
mov
fcoml
jno
inc
dec
inc
push
mov
out
aas
mov
cs
dec
daa
jmp
sbb
adc
or
call
jns
and
xchg
test
aam
cmp
testl
and
sub
add
aad
aad
inc
dec
push
jae
mov
mulb
xor
sti
clc
ja
addr16
inc
cld
cld
pop
scas
and
mov
cmp
dec
xor
add
pop
sti
mov
adc
loope
int3
stos
mov
inc
rcll
xor
and
fisubs
es
out
clc
cmp
or
jae
xchg
out
push
ss
outsl
mov
or
shll
pop
inc
xrelease
clc
jne
repz
cwtl
dec
pop
adc
or
cmc
pop
scas
movsb
push
jno
mov
add
add
mov
adc
push
pop
mov
cmp
jno
sub
imul
subl
inc
lahf
notl
cmp
in
mov
and
or
and
xor
jp
out
push
filds
out
call
pushf
xorl
or
scas
mov
push
mov
fisttpl
sub
mov
push
aaa
pop
pop
add
out
dec
xchg
imul
mov
ret
out
imul
int
sub
cld
add
cmp
jmp
clc
repnz
cmp
andl
movsb
ss
mov
test
dec
or
aaa
jle
ja
mov
xor
xchg
fwait
imul
loope
cwtl
xor
insl
cmp
sub
sbbb
lock
fcmovu
dec
fiaddl
out
dec
xor
push
dec
mov
inc
push
mov
sbb
into
and
stos
push
int3
push
pop
mov
scas
inc
cmp
dec
cmp
ficompl
jbe
test
not
jnp
mov
jno
cmp
sbb
xchg
pop
cs
lret
pop
test
pop
push
mov
test
mov
xchg
lret
mov
loop
test
lds
and
mov
pop
xchg
insb
mov
fmull
push
fisubl
in
xchg
lcall
repz
test
in
fdivr
pop
fsubrs
xor
and
mov
leave
ja
xlat
bound
loopne
mov
adc
ficoml
nop
dec
incl
shll
subb
popf
ja
imul
ret
pop
inc
jp
fwait
stos
test
jecxz
ds
mov
and
sahf
call
jp
or
jp
xchg
push
add
cltd
pop
add
push
cmp
hlt
int3
dec
lods
xchg
mov
std
mov
jo
xor
mov
push
jp
out
cwtl
sahf
cmp
popf
or
shlb
and
scas
lods
sub
jne
push
jbe
inc
adc
and
xor
mov
pop
adc
enter
pop
mov
call
sub
xor
xor
scas
aad
insb
cltd
rcr
decb
popa
call
adc
and
fldl
shll
imul
test
ja
fwait
xor
inc
xchg
add
xchg
lods
out
dec
xor
in
lock
push
sbb
jo
xchg
jo
mov
mov
out
cmp
test
out
jne
sub
mov
fsubs
test
lcall
es
movsl
jle
imul
mov
sbb
out
and
iret
push
out
or
jo
mov
fs
mov
lods
cmpsl
xor
mov
cld
insl
ret
mov
jge
mov
mov
lret
add
shrb
inc
inc
pop
pop
mov
push
add
mov
dec
test
mov
das
stos
or
lahf
scas
fsts
jle
imul
sbb
or
cmp
cmp
dec
xchg
xchg
jg
testb
push
fstpl
pop
repz
and
cli
shr
fwait
bound
add
xchg
repz
inc
push
pop
shl
cmp
ljmp
dec
inc
lret
shlb
cmpsb
add
out
push
js
mov
aad
fidivrs
out
or
xchg
mov
daa
rolb
jl
xchg
jnp
add
fldenv
mov
hlt
cmp
push
popa
mov
mov
lret
xchg
stc
push
cli
dec
rolb
mov
inc
aas
lock
lahf
les
mov
fadds
cmpsb
aad
adc
lock
sub
int
rorl
rcrb
add
cwtl
sub
stc
and
pop
pop
cwtl
data16
push
or
int
dec
dec
xor
push
mov
mov
out
add
enter
sub
jl
test
sbb
in
fstps
push
mov
movsl
rolb
adc
xchg
jg
inc
bound
mov
daa
push
fistpl
das
push
add
and
push
nop
adc
stos
test
mov
xor
pop
das
test
fldcw
pop
fs
adc
and
repz
mov
mov
enter
cmp
jae
lods
mov
and
dec
lods
into
pop
stc
dec
popa
popf
push
les
jg
icebp
or
mov
adc
movsl
sbb
sbb
push
sti
mov
mov
mov
test
inc
adc
orb
mov
pop
bound
lret
sar
pop
mov
push
push
loop
adc
les
sbb
stos
mov
dec
adc
inc
dec
mov
cltd
sub
mov
and
jp
xor
push
cltd
inc
movsb
inc
cmp
jecxz
or
and
shlb
mov
mov
jae
push
or
xchg
dec
aaa
cwtl
sub
and
and
andl
orb
ret
dec
scas
daa
xchg
mov
pop
mov
aas
xor
aad
stos
es
xchg
pop
xchg
adc
mov
xlat
xchg
xor
xor
dec
add
mov
adc
popf
xchg
mov
sub
fidivs
sub
add
pop
inc
arpl
mov
mov
pop
fisubrs
push
mov
popf
aas
xchg
lods
mov
pop
xchg
inc
ret
pop
adc
mov
xchg
adc
push
or
cltd
mov
mov
and
inc
mov
sarb
dec
cld
cmp
adc
cli
sub
sbb
add
xchg
push
fdivrl
icebp
pop
sbb
push
sub
fsin
shrl
push
ret
adc
shlb
fists
clc
les
daa
pusha
jge
jne
add
jnp
or
icebp
inc
jne
repnz
fwait
scas
adcb
jg
sub
iret
or
outsb
jnp
mov
insb
repnz
cmpsb
loope
repz
jns
push
jns
jb
lret
mov
and
movsl
in
fs
mov
dec
fldl
repz
pop
test
dec
jne
shlb
cltd
addr16
mov
mov
and
inc
inc
std
inc
inc
sti
jl
enter
lock
pop
scas
and
sub
test
std
adc
xchg
mov
call
adc
fsubr
in
xor
je
std
cli
jp
call
mov
jno
mov
add
arpl
add
pusha
xor
cmp
lock
sub
pop
ret
jmp
dec
xor
adc
inc
mov
sahf
mov
sti
mov
xchg
pop
xchg
cmp
add
jb
cmp
fwait
aam
loopne
xchg
data16
jmp
dec
and
lea
fwait
loop
fwait
mov
repz
and
scas
lret
cmp
adc
mov
shl
or
sbb
fcoms
adc
outsb
cmp
sub
mov
push
mov
enter
lcall
push
nop
dec
mov
mov
int
movsl
jmp
es
and
dec
xchg
xlat
xor
fwait
mov
andb
icebp
inc
subl
mov
jno
ljmp
push
lds
xor
and
fists
cmp
pop
jp
jg
ja
mov
sahf
jl
pop
jl
jbe
pop
push
xchg
outsb
xor
repnz
dec
jns
out
cmp
sbb
call
ja
jge
repnz
cmp
mov
inc
inc
inc
mov
fcomp
mov
out
xchg
mov
dec
fadds
ds
aad
mov
and
pcmpgtb
hlt
or
iret
hlt
icebp
mov
fs
fdivl
cmp
aas
adc
rcrl
jp
and
sub
in
add
cmp
push
test
add
call
push
push
gs
repnz
xchg
dec
cmp
clc
std
out
cli
out
sub
xor
mov
pxor
push
fadd
sub
inc
pop
in
stc
aaa
subb
in
jnp
lret
mov
arpl
outsb
aas
clc
add
and
lods
repnz
dec
or
mov
lcall
ds
cmpsl
cmp
loopne
or
stos
xor
lret
fstpl
mov
mov
inc
sbb
add
int
sti
repnz
ja
jmp
inc
mov
mov
jne
test
leave
insb
test
dec
shlb
xor
mov
inc
inc
ja
mov
xor
jb
xchg
mov
jge
test
sub
add
cmp
int3
pop
adc
inc
pop
mov
jnp
and
dec
repnz
cmpsl
out
inc
decb
xchg
sbb
mov
mov
ds
shr
sbb
xchg
int3
aas
cmp
lcall
addb
mov
xchg
dec
lret
inc
push
test
or
pop
add
jp
dec
ds
push
fcoms
pop
stos
jecxz
and
sub
dec
mov
cli
jg
pushf
clc
pop
shr
jno
popf
pop
bound
mov
adc
sarb
cld
jmp
dec
sbb
cltd
xchg
mov
iret
aaa
sti
xor
or
add
scas
imull
pop
ljmp
inc
fnsave
clc
xchg
jae
sbb
enter
inc
mov
shll
xor
into
xchg
jecxz
xor
lods
mov
mov
iret
mov
leave
dec
jp
repnz
in
fisubrl
jb
adc
sub
mov
jnp
shrb
jp
push
cmpb
jbe
in
or
into
addr16
mov
or
sbb
out
cmpsb
jmp
sbb
call
je
xor
in
out
mov
cmc
jmp
in
xlat
push
mov
push
xchg
push
sti
lea
cmp
test
push
pop
fs
imul
add
je
adc
cmp
mov
lods
lret
inc
xor
js
imulb
jle
inc
sahf
das
outsl
fstpl
or
pushf
pop
lds
inc
js
cmp
pop
cld
clc
jns
push
cmp
mov
insl
cwtl
mov
jmp
test
gs
cmp
leave
shll
pop
jge
enter
push
aad
xor
xchg
js
hlt
or
and
das
xor
mov
mov
xchg
sahf
fisttpl
sub
mov
mov
pop
in
adc
out
mov
jg
addr16
scas
push
dec
dec
daa
inc
addb
dec
xor
xchg
loop
mov
outsl
dec
scas
xor
jl
sub
pop
inc
inc
mov
adc
mov
leave
mov
fcompl
dec
sbb
outsb
into
aad
aas
cmp
xor
push
push
push
and
xor
jbe
xchg
mov
pop
mov
aaa
cld
jl
ss
xchg
push
dec
xor
ret
mov
outsb
pop
les
inc
dec
cltd
xorb
aas
enter
sub
dec
pop
push
jns
mov
mov
pop
shll
data16
add
lahf
sarl
popf
in
sbb
inc
inc
inc
addr16
popl
sarb
aaa
scas
mov
daa
cmp
pop
pop
xchg
add
mov
push
ficoml
ret
mov
loop
or
mov
das
in
sub
lea
fwait
mov
call
sbb
scas
fldenv
or
adc
jns
fldenv
or
or
xchg
popa
cmpsb
inc
mov
test
add
push
ffree
inc
xchg
in
in
fwait
xor
push
arpl
repz
push
inc
xchg
jnp
mov
mov
test
inc
cmp
and
pop
lcall
in
stos
sbb
pop
push
lea
and
cmp
push
pop
push
sbb
and
and
mov
sbb
xor
push
fwait
jmp
ss
pop
add
into
dec
and
inc
mov
scas
mov
mov
hlt
push
jecxz
lea
pmaxsw
xchg
testb
scas
fildl
frstor
or
mov
pusha
adc
das
adc
rclb
punpcklwd
into
xchg
aaa
push
push
arpl
and
jne
sub
filds
rcl
sub
orl
and
lcall
xlat
loope
pop
sub
test
ficoml
or
outsl
je
jp
and
sub
mov
lock
pop
jle
clc
arpl
test
add
stc
sbb
lret
call
xchg
and
inc
movsl
sub
js
pop
inc
push
mov
adc
dec
sub
faddl
pop
mov
pop
aad
pushf
movsl
adc
pop
pop
insb
insb
push
pop
sub
js
xlat
andl
push
inc
xchg
decb
push
leave
loope
xchg
pop
pusha
stc
aaa
ret
push
or
dec
dec
jns
in
cmpsl
pop
test
mov
jmp
xor
mov
pop
ja
jns
add
mov
stos
bnd
fildll
lcall
cmc
cmc
clc
push
out
std
fnstcw
mov
in
add
xchg
sbb
add
dec
loop
cmpsb
pop
push
das
adc
pop
cmpsb
xor
push
sti
dec
sub
stc
mov
sbb
lods
outsl
sub
ja
xchg
add
sahf
mov
jbe
insl
ds
cmp
out
cwtl
addr16
jp
dec
cld
xchg
in
pop
hlt
cmp
fidivs
push
jl
dec
lcall
movsl
jnp
aad
jg
jge
adc
rolb
lret
cwtl
adc
pop
xlat
repnz
fiaddl
mov
push
cmp
adc
cwtl
cmp
daa
sub
test
fdivrs
pusha
mov
inc
inc
mov
dec
xchg
and
sub
xor
in
pop
dec
testb
movsl
iret
xchg
jbe
mov
pop
pop
sbb
sub
clc
adc
sbb
xchg
fdivrl
ficoml
and
ret
pop
jmp
cmp
inc
aas
push
mov
sahf
pop
lds
sub
add
push
adc
or
sub
in
dec
cmp
js
and
stc
ret
adc
pop
cmp
jb
in
push
test
stos
pushf
movb
pusha
push
jle
test
sbb
adc
int
xchg
ja
xor
adc
popf
adc
idivb
adc
fistps
scas
js
xchg
inc
dec
out
pop
in
jbe
shl
push
mov
addr16
push
adc
cmp
mov
shll
bound
in
lea
mov
jecxz
clc
cli
sub
push
push
adc
es
mov
or
outsb
in
fstps
jl
pause
gs
or
in
fcoml
sub
adc
xor
cmpsl
jae
dec
sbb
pop
sbb
sbb
push
outsl
adc
aas
les
mov
push
sbb
jge
lock
int3
mov
push
inc
mov
test
loopne
std
cld
lock
lea
sbb
stos
call
pop
mov
imul
gs
push
or
jb
push
mov
fs
xchg
lahf
shll
inc
sub
sbbl
push
and
aaa
sub
adc
sbb
or
clc
jmp
or
mov
test
jbe
mov
push
out
xchg
mov
mov
fwait
pop
or
jg
imul
insl
mov
loope
aam
call
pop
push
cmp
shll
insl
dec
xor
push
outsl
cld
or
jmp
stos
sti
cmpsb
sbb
and
and
mov
jl
shlb
inc
aad
lcall
int
mov
pushf
sub
ret
pop
sbb
and
in
imul
pusha
lret
stos
inc
imul
push
out
aaa
add
out
clc
loop
jnp
insl
push
test
js
push
cltd
int
mov
jno
mov
arpl
inc
or
aas
popf
add
repz
outsb
mov
adc
push
add
das
mov
xchg
fiadds
jge
insl
push
jno
cltd
dec
repz
sub
add
cmp
pop
pushf
lahf
es
cld
jg
mov
lds
fmull
cmp
inc
hlt
jl
clc
jg
jbe
push
pop
lds
jo
dec
dec
out
mov
xchg
stos
cmp
inc
xchg
push
or
repnz
fs
xchg
jae
push
add
adc
pusha
scas
insl
sub
push
cmp
lret
sbb
adc
jae
fwait
inc
loop
in
jne
add
imul
lahf
int3
jmp
jnp
add
addr16
xor
jl
or
aad
jg
jnp
fists
int
mov
dec
dec
xor
pop
shl
shl
incb
lret
jmp
int3
mov
data16
cmp
ret
push
dec
arpl
je
ror
stos
leave
arpl
xor
sub
and
lret
inc
or
lret
icebp
fsubrl
mov
loope
fisubrl
mov
lods
fisttps
xchg
add
call
sub
stc
adc
out
jmp
int3
pop
cmp
mov
and
insb
into
test
aas
pop
fimuls
ret
call
stos
push
shrl
fwait
ss
dec
insl
adc
int3
xor
dec
int
scas
mov
outsb
sbb
stc
mov
jnp
fsubrs
push
jp
ja
out
mov
into
adc
inc
jle
push
sub
outsl
xlat
push
jne
data16
icebp
and
mov
aad
inc
jmp
pop
dec
sarb
loope
jb
inc
scas
insb
mov
pop
jg
orl
add
rorl
mov
ljmp
inc
imul
pop
push
inc
fsts
ficompl
sub
idivl
cmp
jle
xchg
lods
adc
sub
add
pushf
enter
cmc
push
hlt
mov
and
mov
mov
loope
nop
mulb
outsl
mov
addb
data16
xchg
jns
sarl
dec
sbbb
push
xchg
cmp
mov
into
out
push
call
mov
daa
mov
inc
push
push
inc
iret
stos
push
or
fidivrl
jge
mov
andl
xchg
pop
insb
enter
mov
jo
pushf
ss
out
test
xchg
xchg
sub
fwait
outsb
out
add
mov
les
adc
inc
cmpsl
cwtl
sbb
aam
test
mov
dec
icebp
arpl
mulb
add
pop
in
test
mov
sbb
lcall
push
bound
mov
aam
xchg
fisttpl
xchg
push
push
idiv
daa
cwtl
push
sub
sbb
inc
xchg
gs
lds
sbb
or
test
fimull
insl
shrl
push
mov
push
rol
subb
push
inc
rclb
aam
fistpl
jns
faddl
test
dec
mov
in
xor
push
in
dec
inc
push
sbb
dec
out
xor
jp
sub
ret
scas
loopne
sub
xchg
xor
in
mov
icebp
gs
lret
pop
enter
pop
scas
sahf
or
ja
sub
mov
pop
push
xchg
pop
cmp
push
mov
sbb
pop
pop
adc
jb
sti
xchg
loop
sub
or
adc
mov
xchg
pop
test
cwtl
dec
push
cld
xchg
mov
stos
inc
mov
xor
addr16
rorb
cmp
push
repnz
adc
out
and
in
sbb
mull
fsubrp
jle
stos
leave
aaa
push
push
push
mov
mov
pop
scas
adc
sbb
adc
shlb
fldl
insb
gs
or
push
push
sub
outsl
mov
mov
adc
jno
sbb
jle
into
sub
xor
test
loope
stos
rcr
rcll
loopne
and
dec
lret
jmp
cwtl
ljmp
aaa
push
int
xor
xor
add
movsb
aad
ret
sbb
dec
shrb
and
in
aas
out
mov
sbb
add
aad
cs
dec
popa
or
fcmovnb
int
ds
jmp
out
sbb
fisttps
jp
xorl
data16
loopne
mov
cmc
mov
inc
lcall
cmpsl
sti
pop
and
stc
popa
adc
xchg
push
mov
and
mov
scas
rcll
dec
insl
enter
jne
sbb
lods
rorb
ret
xor
adc
xchg
cmp
jg
cld
rcll
push
mov
add
cmp
fldenv
dec
icebp
in
clc
sbb
loope
and
push
scas
out
and
mov
pop
adc
int
out
and
pushw
stos
and
pop
mov
jb
mov
add
cltd
mov
repz
std
adc
int3
dec
dec
lahf
pusha
jl
push
mov
or
dec
fs
enter
jne
dec
mov
bndstx
in
mov
and
xor
mov
xor
bound
xor
xlat
sub
outsl
or
or
jle
sub
jno
in
sbb
cld
inc
cli
sbb
fdivl
orl
cmp
xchg
fs
add
pop
daa
push
jp
sub
scas
dec
push
lahf
push
mov
jecxz
insb
icebp
xor
cli
in
adc
jo
mov
push
pop
in
fisttpll
ffreep
stc
mov
je
or
test
es
jbe
repnz
adc
pop
scas
pop
and
cmpsb
loopne
add
fstpl
jecxz
jmp
into
jns
and
dec
push
dec
sti
ljmp
fisubl
cmp
out
xor
movsl
or
xor
mov
imul
jae
lcall
daa
sti
dec
or
aam
loop
lock
mov
jmp
add
add
movl
ljmp
pop
out
push
fs
ret
mov
add
sub
cmp
lea
jae
loopne
lods
out
test
or
pop
add
insb
fimuls
jge
adc
push
lret
scas
int3
fldcw
mov
lret
xchg
mov
movsb
sbb
leave
je
pop
jo
mov
xchg
repz
sbb
call
add
flds
leave
sbb
mov
cmc
iret
shll
mov
fstl
mov
or
pop
mov
and
cmp
cwtl
push
clc
sub
dec
sbb
xchg
addl
pop
rclb
xorl
dec
xor
icebp
jge
roll
daa
mov
or
lret
int
cli
fdivrs
mov
sbb
jg
push
dec
pop
sbb
and
mov
mov
scas
cmp
mov
adc
imul
push
outsb
lock
call
xchg
jb
aas
sti
mov
pop
adc
mov
scas
scas
scas
mov
js
int3
scas
cld
pushf
test
sub
je
pop
lahf
mov
shl
cmpsb
imul
pusha
imul
fscale
daa
inc
cmp
xor
fstpl
mov
nop
movl
dec
or
je
and
add
add
bound
iret
lret
and
adc
pushf
popa
add
jns
orl
mov
cmpsl
test
jns
inc
insl
cmp
rcl
xor
jmp
or
je
xchg
push
pop
lds
cmp
xchg
incb
repz
mov
fwait
adc
enter
and
pop
dec
sarb
mov
out
dec
add
sbb
sub
sub
packssdw
dec
lods
push
xchg
inc
pusha
jp
cld
pop
push
xchg
sub
iret
movsl
shlb
cmp
lock
bound
dec
xchg
outsb
sbb
int
das
das
into
ss
cld
mov
in
dec
lcall
fdivl
pop
mov
adcb
mov
shrl
adc
aaa
adc
xlat
and
sti
rolb
cli
imul
add
lret
mov
ja
mov
xchg
lret
or
xlat
fwait
test
js
int3
icebp
in
aaa
add
push
fwait
outsl
xchg
push
outsb
inc
sahf
or
test
adc
xchg
lods
jno
dec
int
sbb
add
mov
cmpsb
daa
push
pop
cmp
or
in
cmpsl
fadds
shll
jg
clc
aam
dec
mov
ds
pop
xorl
mul
or
call
xor
adc
sti
rorb
cmpl
lock
xor
push
cltd
aaa
popl
add
xchg
movsb
pushf
test
add
enter
shr
mov
jns
scas
inc
push
inc
sub
pop
add
mov
push
add
push
adc
in
fwait
into
xchg
in
imul
cwtl
dec
shll
mov
lods
xor
mov
dec
mov
gs
ds
cmpsb
hlt
pop
jl
dec
pop
insl
dec
out
add
xor
xlat
adc
out
outsl
mov
dec
aad
push
ficompl
lret
xchg
rolb
jmp
jae
cs
arpl
mov
fcmovnbe
mov
xor
sub
pop
out
iret
or
cmp
rcr
sub
lods
jnp
sbb
push
test
bound
mov
imul
movsl
push
imul
fucomi
add
push
mov
icebp
cmp
add
out
adc
int3
xchg
push
jb
inc
jl
pop
repz
andl
jecxz
pusha
xor
stc
or
jnp
out
movsl
in
jnp
dec
lcall
push
sub
pop
js
call
icebp
inc
and
cltd
sub
arpl
mov
adc
cmp
fnstenv
leave
mov
mov
data16
pop
inc
xchg
in
into
loope
or
repnz
mov
jp
pop
pop
stos
je
pop
inc
jmp
and
mov
ja
pop
adc
sbb
push
fiadds
add
pop
mov
inc
out
pop
xchg
push
fildl
mov
jecxz
cmpsb
imul
mov
faddl
into
push
ja
xchg
inc
mov
dec
mov
movsb
xchg
fs
inc
add
inc
fnsave
sub
leave
movsb
xor
push
jnp
or
subl
sbb
mov
stc
dec
mov
scas
sub
adc
push
sti
pop
mov
push
sbb
push
fucomp
inc
inc
dec
xlat
xchg
ljmp
ror
aas
int
dec
mov
cld
or
imul
out
xchg
or
cltd
jle
lods
mov
daa
xchg
loop
mov
pavgb
outsb
lea
ds
add
and
push
stos
idiv
lods
hlt
fisttpl
test
inc
and
cmp
mov
xchg
and
cmpsb
dec
adc
xor
mov
xchg
mov
ja
pop
fldcw
sub
pop
push
lea
insb
out
mov
or
cli
in
sar
sbb
adc
fnstenv
iret
xchg
inc
mov
jle
pop
inc
adc
cmp
popf
test
sbb
fmuls
mov
and
xchg
lods
mov
pop
xchg
cmp
and
sbb
xor
leave
popf
cld
inc
xchg
movsb
mov
push
jb
shlb
es
insl
pop
or
mov
xor
loope
nop
cmpsb
andb
pusha
cmpsl
xchg
dec
mov
pop
orb
sub
push
dec
mov
test
jge
xchg
or
fcmovbe
hlt
ljmp
pop
or
xchg
fnstcw
mov
mov
out
mov
xorl
cli
cmp
testl
pushf
cmp
sti
mov
fwait
stos
and
jo
lds
ret
rcrl
sahf
and
rol
insl
lock
push
movsb
sti
addr16
sub
push
inc
push
push
xor
imul
mov
xchg
std
pushf
pop
pop
hlt
andb
adc
lods
jb
lahf
pusha
xchg
dec
loope
loopne
push
jmp
adc
xor
jl
iret
fdivs
je
dec
fnstenv
ljmp
mov
push
clc
xor
cli
outsl
rcrb
mov
inc
mov
jae
push
pushf
decl
jl
into
jge
dec
xchg
push
insb
adc
lcall
mov
add
and
mov
sbb
clc
mov
lods
jo
rorb
pop
pushf
daa
mov
inc
xor
mov
sahf
and
cltd
js
dec
xor
test
push
fbstp
xor
femms
add
loop
mov
push
cmp
adc
mov
sbb
jg
cltd
mov
cmp
pop
sbb
dec
adc
xchg
aad
cmp
xor
imul
insb
ja
int
adc
sbb
mov
mov
mov
fstl
dec
adc
pop
out
adc
push
enter
repz
cmp
lods
in
ficoms
push
sub
and
xchg
movb
add
and
jp
mov
mov
adc
push
adc
jmp
fwait
push
lcall
popa
xchg
mov
push
out
daa
or
dec
jb
mov
loope
scas
xor
xor
add
or
inc
and
jo
movsb
push
mull
pop
mov
pop
stos
out
cmpb
scas
mov
sub
pop
in
repnz
testl
jns
sub
in
jmp
push
cmp
dec
rclb
pop
dec
and
stc
idivb
js
outsb
das
pop
das
sahf
scas
mov
or
mov
xchg
hlt
sub
cwtl
negl
sub
sub
jg
dec
push
push
push
ljmp
fstl
mov
fstpl
dec
xor
dec
and
pop
xchg
pop
repnz
rclb
and
aad
jb
xor
push
in
lret
cltd
iret
arpl
inc
outsb
mull
mov
dec
jp
mov
xchg
hlt
push
cs
xor
jl
or
ja
loope
jp
sbb
fidivrl
jmp
xabort
or
repz
and
lret
enter
xchg
aam
repnz
xor
lahf
loope
inc
xchg
cmpsl
xchg
cmp
call
add
inc
pop
sbb
bound
js
inc
hlt
idivl
or
inc
test
inc
pop
cld
lret
arpl
decl
repnz
xchg
imul
dec
jne
test
add
jmp
int
lahf
inc
popl
test
jle
and
mov
push
bound
mov
enter
adc
lods
and
mov
mov
mov
cmp
pushf
add
das
loop
les
xor
pop
push
stc
bound
xor
sbb
sbb
int
cmp
lret
jle
lods
xchg
hlt
aaa
mov
in
jo
push
cltd
adc
mov
inc
lods
dec
pop
mov
jmp
or
les
fldcw
shll
fs
fistps
subb
rolb
shrl
nop
mov
jp
mov
mov
inc
imul
mov
lock
add
mov
in
clc
adc
gs
mov
inc
push
lea
xor
pop
pop
sub
xor
sub
gs
scas
mov
push
jg
fsubrs
iret
pop
fdivl
lock
dec
stos
mov
addl
jg
sbb
pop
les
lock
pop
xchg
sub
icebp
bound
sub
bound
inc
mov
mov
xchg
push
sbb
fistps
nop
adcl
pushf
fnstsw
daa
sbb
ficomps
pop
jae
adc
popf
int
std
into
mov
aaa
adcb
xor
adc
jge
cmpsb
addl
mov
cmp
insl
and
mov
aas
stos
mov
or
fs
and
add
mov
xor
dec
jmp
insl
fcmovnb
repz
stc
into
and
cwtl
stos
jb
cmp
jae
shll
sbb
enter
jo
gs
cmpsl
dec
jle
xchg
addr16
or
adc
orb
add
stc
adc
sub
in
inc
fwait
adc
aam
mov
xchg
push
enter
enter
mov
xchg
loop
sti
mov
xlat
jne
add
mov
aas
out
sub
pop
insb
daa
inc
mov
xor
xchg
repnz
sbb
xor
dec
xlat
or
and
shrb
fwait
inc
and
mov
ds
roll
mov
leave
repz
add
fs
push
addr16
cmp
pusha
out
xchg
add
roll
in
pop
imul
imul
pop
mov
sbb
in
mov
int
out
inc
xchg
sbb
mov
popf
mov
cmpsl
dec
jnp
jne
and
ja
xor
add
shrl
out
iret
shlb
bound
or
rcrb
pop
inc
sbb
sub
test
sub
dec
push
jb
xchg
ret
movd
out
mov
cmp
in
mov
in
push
data16
jge
sbb
push
sbb
mov
aaa
cld
outsb
jo
movsl
cmp
adc
or
mov
jbe
repz
loopne
mov
test
in
fwait
jns
push
xchg
icebp
inc
aas
into
repz
dec
rcll
mov
add
lds
add
sub
imul
aam
adc
xchg
jne
add
stos
jnp
test
ret
push
idiv
jbe
hlt
sbb
movsb
bnd
dec
pop
mov
xcrypt-ofb
cmpsl
jmp
push
sti
repnz
cmc
and
cmp
sub
add
mov
arpl
cmpsb
cmp
jo
or
aas
xchg
test
movsb
adc
imul
jge
incb
outsl
push
pop
mov
pop
inc
dec
outsl
aad
fistpl
inc
scas
in
mov
mov
add
dec
lods
add
stos
cmp
sub
insl
imul
fdivp
scas
ss
shrl
aaa
adc
adc
ds
leave
jl
enter
lcall
sahf
pop
fdivl
scas
pop
je
out
icebp
jns
push
jl
push
das
ficoms
mov
imul
add
sub
cltd
fidivl
cmp
or
xchg
aam
or
lock
dec
cli
push
movl
xor
mov
dec
push
sub
lods
aaa
jl
pop
mov
push
cld
push
imul
adc
repnz
flds
adc
js
sarl
lods
push
push
or
cli
scas
cmp
out
push
arpl
out
ret
push
sarl
mov
xchg
outsb
push
jge
mov
mov
pop
lods
mov
in
adc
adc
or
jmp
lret
mov
inc
adc
push
aam
push
aaa
dec
jne
jnp
sbb
xor
mov
mov
lret
movsb
pop
xorl
push
dec
dec
inc
jae
jle
popa
push
push
aad
mov
test
jno
push
ds
movsl
mov
mov
pop
imul
sahf
adc
sbb
adc
fwait
pop
sahf
hlt
stc
pushf
fcmovnbe
sahf
sbb
cmp
or
xor
and
out
cmp
aam
dec
stc
or
inc
sub
inc
cmp
mov
ja
inc
jns
and
in
push
xor
xlat
pop
std
stos
lcall
fwait
jb
mov
mov
sub
subl
cmp
in
cmc
sub
clc
mov
mov
das
out
data16
addr16
notl
ret
cmpsb
mov
xor
dec
popl
mov
loope
cmp
gs
aas
in
mov
xlat
pop
mov
cmp
fs
cmc
cmp
imul
les
xor
xchg
rcl
jno
pop
mov
sub
jmp
mov
sub
mov
sbb
dec
jae
xchg
adc
inc
mov
cltd
or
cmp
repz
mov
cmp
mov
add
dec
sbb
adc
xchg
ja
cmc
pop
xchg
xchg
test
inc
cmp
jnp
pop
xor
movl
pushf
arpl
sub
loopne
stc
test
scas
leave
inc
push
in
jbe
mov
js
out
and
ja
test
mov
pop
xchg
jecxz
mov
sub
adc
jne
ljmp
lcall
fnstcw
jb
bound
hlt
icebp
mov
and
jae
or
aad
aas
ja
xor
and
scas
es
outsb
adc
mov
mov
and
jns
pop
dec
lods
jno
cmp
jnp
dec
jmp
sub
in
sbb
loop
es
xchg
dec
add
repz
pop
dec
jo
iret
jno
adc
test
mov
and
jne
into
stos
rcl
scas
inc
pop
dec
loop
rorl
mov
ds
push
fildll
sbb
outsl
sub
xchg
fnstcw
and
popf
mov
pop
stos
fst
shrb
adc
nop
stos
sbb
in
xor
mov
pop
cmp
jbe
ret
imul
into
stos
fwait
pop
out
sarl
movsl
add
jl
ja
cli
js
jl
inc
roll
fs
xor
insb
xchg
cmp
pop
xchg
insl
push
or
mov
cltd
orl
mov
ja
sub
loop
xchg
add
sahf
stos
mov
movsb
mul
jns
or
fnstcw
rol
les
xorb
out
scas
and
and
sahf
inc
flds
ret
aaa
adc
mov
repnz
dec
mov
xchg
repnz
out
cltd
jg
mov
sub
test
jbe
fs
push
sbb
dec
sarl
mov
jmp
out
jo
push
insl
mov
sbb
jno
xlat
ret
sbb
cld
dec
push
inc
or
lret
pop
ficompl
pop
in
mov
andl
fdivs
or
adc
dec
mov
cltd
sbb
jecxz
push
aam
icebp
pushf
js
mov
xchg
ds
out
test
nop
sub
sub
out
pop
xor
xor
les
shlb
rorl
scas
jo
xchg
and
sub
cmp
std
adc
es
xor
xor
mov
loopne
push
loopne
nop
rcr
inc
adc
aad
mov
jb
mov
addb
pushf
and
xor
or
mov
je
int
inc
adc
mov
fstpl
lods
add
and
in
enter
sub
inc
fimuls
push
fisubl
in
jnp,pn
jge
inc
pusha
pop
popa
shrb
subb
adc
mov
dec
mov
data16
imul
xchg
out
inc
es
xchg
jne
lds
cmpsb
loop
dec
jmp
xchg
stc
xchg
call
xchg
rol
add
loopne
mov
pop
cmpsl
xchg
jecxz
mov
test
in
aaa
addr16
jge
mov
cmp
mov
adc
xchg
add
cmp
sub
imul
cld
inc
mov
mov
adc
sti
mov
mov
notl
ljmp
movsb
aam
pusha
xchg
cmc
xor
nop
or
xchg
cmp
mov
push
adc
jb,pt
jl,pn
sbb
and
xor
xor
nop
xchg
data16
mov
adc
pop
incl
test
test
jmp
xchg
add
jbe
mov
adc
cmpsb
fisttpl
mov
mov
dec
mov
imul
fisubl
xor
adc
pop
add
rcrb
xor
les
sub
fsubrl
add
inc
int
add
push
les
std
sub
subl
fnstenv
stos
repnz
jmp
dec
test
fwait
in
xchg
push
or
inc
or
cs
sub
cmc
mov
or
lahf
in
mov
or
mov
scas
imull
int3
daa
in
xor
mov
orb
xor
cmc
mov
push
ds
mov
jae
mov
sbb
push
cmp
xchg
cmc
scas
nop
shrl
out
fsubs
pop
into
lcall
sub
mov
pop
fildl
in
mov
mov
sbb
imul
out
lret
mov
mov
pop
inc
fistps
cmp
ja
dec
xchg
xchg
pop
and
outsb
outsl
int3
incb
inc
push
push
ljmp
clc
cmpsb
iret
sbb
mov
sbb
fs
insb
add
xor
adc
in
sarl
icebp
mov
gs
lods
xchg
push
sarl
fildl
sbb
lea
in
push
inc
push
cmpsb
jnp
movsb
stc
sbb
movsl
xor
add
orl
sbb
mov
loopne
jns
dec
add
insb
ret
les
rclb
sbb
cld
pop
dec
adc
mov
and
xchg
cmpl
arpl
adc
enter
fldenv
aam
mov
sahf
mov
mov
insl
ja
scas
or
push
xchg
pop
dec
jb
xchg
leave
xor
mov
mov
ljmp
int3
into
in
or
sahf
xchg
push
xchg
or
aad
sub
and
movsl
xlat
aam
sub
xchg
adc
xor
inc
mov
popf
daa
adc
inc
cli
push
sub
dec
icebp
fists
pop
push
stos
pop
sahf
add
jne
jno
jb
inc
int3
xor
into
ss
gs
cltd
ss
push
out
loope
mov
in
mov
fmull
xor
xchg
mov
rol
push
sub
divb
addr16
pop
ja
mov
lock
pop
xor
loope
das
les
mov
or
mov
loopne
gs
popf
mov
mov
imul
adc
xchg
testl
pop
inc
xor
add
mov
cmpsl
cmc
push
test
test
test
xchg
add
aad
fdivl
and
rcl
dec
shl
sbb
jecxz
test
movsb
mov
addl
mov
loopne
das
or
lcall
mov
aam
loop
push
sahf
pop
lods
lret
jmp
inc
insl
inc
cmp
jmp
cmp
andl
aas
into
clc
add
hlt
and
repnz
mov
and
ds
cmp
nop
and
push
insb
adc
lds
or
sarl
aaa
add
fsubs
icebp
es
stos
ret
mov
aas
pop
or
mov
mov
cmpsb
scas
jmp
adc
daa
das
cmp
movsb
ljmp
mulb
cmp
in
adc
into
inc
mov
adc
aaa
stc
mov
xchg
sti
leave
xchg
cmc
faddl
lods
mov
mov
and
out
fsubs
daa
adc
loop
stos
cmp
and
ds
sub
adc
push
sbbl
rcrl
stc
out
mov
sbb
cmpsl
lods
mov
dec
pop
je
mov
out
pop
ss
lret
pop
enter
and
xchg
fnstcw
xchg
out
pop
lea
xchg
jne
and
lret
inc
sub
sti
inc
xor
sbb
js
inc
cmp
xchg
movsl
mov
jmp
add
into
jge
fldt
adc
cmp
cmp
pusha
or
in
dec
add
jae
fbld
inc
jp
out
push
cmp
xchg
sbb
lock
pop
cwtl
cmpsl
mov
xor
ret
push
adc
fists
xlat
fistpll
aaa
dec
repnz
mov
push
dec
es
aaa
inc
stos
outsb
scas
js
pop
sbb
negb
inc
leave
mov
jne
mov
jno
adc
pop
xchg
popf
out
pop
aad
dec
pop
inc
clc
out
dec
or
adc
jns
mov
mov
movsb
jmp
cmp
es
or
add
testb
dec
cmp
jl
mov
or
and
dec
xchg
pusha
or
add
call
mov
xchg
icebp
insl
and
insb
xchg
or
sub
je
or
and
jno
adcl
add
ljmp
out
rcrb
push
rcr
jge
xchg
sub
lcall
fildl
loopne
out
mov
sti
lret
mov
out
sbb
js
jle
insl
int
pop
mov
int3
lds
decb
dec
out
adc
mov
sbb
pop
cs
inc
and
movsb
ret
pop
jo
cwtl
mov
pop
imul
pop
pop
out
push
inc
mov
sti
movsl
aas
aas
jbe
mov
pop
mov
mov
outsl
jmp
xchg
scas
ss
sub
mov
or
and
jne
test
pop
notl
lret
inc
add
mulb
inc
in
ljmp
ss
mov
std
jmp
mov
sbb
jae
inc
cmp
push
add
cmp
test
sub
stos
ljmp
jge
sbb
push
add
in
fmul
jbe
das
loopne
cmpsb
xchg
sbbb
bound
add
insb
inc
mov
push
sub
dec
and
std
jp
mov
ret
aad
mov
jns
add
push
mov
iret
add
cmp
inc
mov
scas
mov
and
cli
out
scas
sbb
mov
ret
cmp
push
mov
push
pop
or
jns
jle
mov
inc
or
sub
jmp
cwtl
movsl
imull
and
inc
adc
shll
cmc
mov
fisttps
push
pop
mov
adc
cmp
xor
shlb
add
cmpsb
xlat
mov
jge
jecxz
push
in
push
and
mov
jmp
loope
jbe
mov
pusha
and
pop
and
jno
cs
ret
icebp
imul
pop
inc
into
hlt
and
or
xchg
xchg
std
aaa
mov
sbb
mov
adc
lahf
adc
inc
xor
insb
inc
dec
and
mov
jle
fistps
in
stc
cld
ss
and
mov
pop
adc
pop
inc
xor
inc
mov
add
dec
mov
xchg
rcrb
push
lea
mov
adc
lcall
inc
push
adc
push
push
dec
scas
pop
rorl
aas
outsb
jmp
mov
ss
inc
loope
icebp
push
test
iret
dec
mov
mov
leave
cmovl
je
and
and
test
fs
outsl
xlat
movsl
or
aad
cmp
daa
outsl
inc
lods
lret
cmpsb
inc
pusha
add
cmp
xchg
std
int
jge
maskmovq
jae
stos
pusha
aas
data16
rorb
add
push
shrb
fisubrl
jmp
cmp
stc
fisttpl
pop
aad
ja
push
pop
movsl
pop
int
add
mov
movsl
cwtl
add
lods
popf
or
inc
fildl
add
push
push
xor
pusha
pop
pop
aas
inc
push
imul
adc
lds
push
ds
insl
popf
jns
out
pushf
scas
hlt
fucomi
add
mov
call
shl
arpl
jns
ljmp
cs
mov
xchg
push
rcrb
xchg
shlb
scas
jo
ja
cmp
inc
ljmp
mov
repnz
jbe
push
cmpsb
add
stos
jne
fcomp
cmpsb
fdivrs
out
les
push
ja
cltd
mov
mov
push
ja
push
pop
adc
into
lods
mov
xchg
and
data16
mov
mov
lock
mov
arpl
and
cmpsl
repz
faddp
cmp
push
push
jecxz
into
out
mov
cld
jne
sti
repnz
andl
xchg
inc
icebp
pop
mov
adc
mov
ret
outsb
int
cld
imul
rcr
ffreep
cmpsb
jne
in
adc
sbb
into
push
leave
setbe
daa
push
mov
mov
pinsrw
mov
pop
out
jns
sbb
jbe
xor
dec
imul
insb
clc
shll
inc
rcrl
lcall
mov
rcll
inc
stos
jle
jl
push
mov
fldl2e
xor
fisttps
pop
mov
inc
imul
add
or
sbb
call
mov
stc
inc
aam
inc
and
mov
xchg
sub
mov
lods
fisttps
test
cmc
mov
pop
mov
inc
push
sbb
call
jae
rolb
pop
or
cmp
outsl
mov
push
std
pushf
xchg
nop
ss
adcb
dec
hlt
into
xchg
mov
mov
lret
orl
and
js
adc
mov
inc
push
pop
inc
sbb
lods
mov
out
je
repz
pop
xchg
ret
jp
inc
push
outsl
movsb
cli
xchg
lock
dec
xor
std
dec
mov
push
fdivl
dec
cmp
and
sub
dec
sbb
loopne
xor
stc
call
jno
add
ss
mov
mov
std
cmpsb
sub
push
sbb
stos
gs
lods
xchg
jge
fists
pop
loope
lret
jb
xor
adc
pushf
xchg
xchg
push
mov
pop
loope
jno
popf
clc
lret
mov
mov
lods
addb
dec
lods
adc
insb
dec
inc
outsl
pop
mov
cmp
out
push
subl
jecxz
jne
ds
jbe
insl
out
out
arpl
nop
cli
xchg
and
cs
test
imull
xchg
cld
idivb
xchg
lret
mov
mov
lods
movb
adc
dec
dec
jne
or
sub
xchg
add
or
mov
mov
out
dec
cmp
jl
sahf
je
or
mov
mov
mov
sti
push
jns
addr16
shlb
or
call
loopne
idivb
repz
stc
divb
jmp
xchg
rorb
push
aaa
mov
out
iret
push
add
mov
loopne
add
pop
xchg
mov
scas
add
notb
jns
mov
cmc
lcall
dec
pop
jg
add
sarl
fsubrp
adc
aad
adc
fs
sub
push
aad
dec
adcb
sub
fs
int3
in
mov
and
repnz
push
ret
xor
sub
mov
jb
adc
mov
pop
push
mov
ds
mov
mov
mov
push
aaa
sub
stos
lds
lea
sub
out
sbb
fwait
cs
mov
data16
clc
lret
addr16
jo
and
push
mov
jge
sbb
cwtl
sub
int3
sti
sahf
outsl
loopne
cwtl
push
dec
add
jle
and
push
sbb
sub
xor
fiaddl
scas
leave
dec
jle
in
ret
lods
repnz
mov
ja
loope
in
sbb
inc
adc
mov
mov
lods
orb
mov
mov
xor
mov
or
add
add
sbb
mov
dec
aas
lds
dec
push
dec
cld
sbb
out
dec
mov
push
mov
sbb
push
roll
inc
cwtl
push
sbbl
das
test
jmp
in
mov
sbb
and
and
mov
shrl
pop
dec
mov
inc
xor
and
pop
inc
idivb
sub
push
cmp
xchg
mov
cmpsb
push
imul
mov
dec
lcall
mov
iret
nop
mov
repz
and
xor
mov
cmp
lods
icebp
jp
and
test
aas
inc
subl
or
lret
push
mov
gs
into
xor
pop
mov
inc
push
insb
mov
je
cmp
lods
addr16
or
imul
mov
pop
mov
jl
in
fsubrp
cmp
and
xchg
pop
sub
cmpsb
pop
repnz
add
xlat
xchg
jae
es
test
and
add
in
sti
sbb
testb
lret
cmp
es
or
xor
in
add
stos
imul
dec
push
outsl
lea
fsubl
rcll
and
and
pop
adc
dec
mov
xchg
popa
mov
xchg
add
dec
stos
cld
ss
shll
test
rorl
dec
insb
pop
pop
sub
sar
sub
stc
iret
and
fwait
add
mov
cltd
pop
mov
ds
push
popf
aas
pop
adc
sarb
jno
inc
sbb
lgs
adc
mov
cmp
sub
hlt
out
mov
ja
inc
test
cltd
stos
adc
jg
and
repnz
test
or
das
mov
adc
call
sahf
icebp
pop
movsl
push
lret
enter
mov
add
xchg
hlt
cld
pop
mov
int3
addr16
movsb
xchg
mov
xchg
cmp
mov
sub
inc
pop
lret
jle
pushf
sbbb
lahf
mov
lret
mov
lods
mov
mov
repnz
dec
lods
pusha
shr
push
cmp
cmp
insl
xchg
test
fnsave
in
jmp
push
mov
sti
cmp
stos
stos
push
bound
div
test
sub
es
pop
xor
cmpsb
mov
test
test
xor
call
iret
gs
js
push
cmpsb
call
and
add
dec
pop
mov
adc
mov
push
xor
xor
test
addr16
jns,pt
pop
inc
jnp
xlat
ds
popa
pop
xor
add
adc
add
push
clc
imul
ficomps
clc
sub
mov
push
sar
or
aaa
jge
lock
sahf
lcall
xor
lea
jno
lcall
xlat
adc
jns
push
pop
arpl
push
fildl
mov
ret
cld
dec
mov
inc
mov
xchg
pop
push
and
fdivrl
dec
jge
pop
ficomps
dec
jae
dec
jnp
test
and
dec
adc
aad
inc
sub
lea
mov
mov
popf
aaa
mov
out
insb
lret
adc
or
repnz
adc
jmp
xchg
cmp
inc
xlat
adc
pop
fcmovne
fwait
dec
and
sbb
cmp
bound
adc
cmpsb
jae
out
dec
mov
jns
mov
xor
or
jecxz
lcall
inc
add
cwtl
lahf
pushw
sarb
dec
mov
xchg
mov
mov
dec
dec
sub
test
fidivl
cltd
sbb
cmpsb
mov
aas
cmp
lcall
xchg
cmp
sbb
and
mov
ja
pop
cmp
xchg
daa
xor
mov
das
and
in
rcll
dec
xor
repz
jno
jg
jb
push
mov
mov
shl
cmp
sbb
lock
andb
sar
cli
and
pop
add
cs
and
dec
mov
ljmp
cmc
in
fwait
push
js
je
test
xorl
iret
aad
faddp
mov
leave
lret
dec
inc
ret
aaa
addr16
inc
call
jecxz
sub
mov
pop
jb
sub
mov
out
lea
popa
adc
xchg
lret
movsl
cli
fcom
cmp
add
icebp
out
into
andl
test
or
mov
cmpsb
fwait
daa
and
mov
fbld
jmp
sarl
jbe
clc
push
cmp
sbb
sub
xor
xor
out
mov
sbb
pop
xor
push
loopne
enter
ror
push
movsl
or
xchg
ficoms
cld
sbb
repnz
test
push
stc
pop
es
push
pop
adc
shlb
inc
pop
std
cmc
test
dec
push
push
adc
outsl
mov
pop
xorl
xor
xor
mov
push
test
jp
pop
adc
or
stos
push
jb
or
xor
add
mov
lahf
pop
out
push
push
push
mov
pop
and
adc
and
mov
lea
in
sbb
test
dec
mov
push
in
inc
dec
mov
xor
stos
mov
out
imul
movq
push
das
xchg
mov
pop
add
daa
xor
dec
nop
cmp
aam
mov
insl
mov
push
fcomi
lock
and
sbbb
out
in
dec
out
fimull
xchg
test
lcall
loop
push
push
scas
or
sub
lds
pop
jecxz
jecxz
les
add
gs
adc
hlt
xor
in
cmp
popf
sub
outsb
add
add
outsl
arpl
mov
jl
lea
mov
mov
add
or
int
add
dec
xor
out
insb
mov
xor
loop
dec
cmp
cmpsb
inc
pop
std
je
aas
jae
push
stos
lret
cmpsb
lods
movsl
mov
setne
mov
lahf
mov
not
mov
or
inc
cmpb
adc
lods
testb
xchg
cmp
mov
mov
pop
movsl
and
icebp
inc
jne
into
add
popf
stos
add
and
adc
stc
in
jno
mov
or
mulb
notl
push
je
jbe
adc
outsb
jge
adc
arpl
mov
sbb
clc
pop
jle
je
xchg
ds
lock
test
adcl
outsl
in
out
push
mov
insb
xor
mov
inc
mov
aam
pop
jge
sahf
dec
mov
cmc
add
and
inc
jns
cli
jbe
xor
lea
inc
inc
setg
cmp
dec
insb
xor
fisttps
mov
fs
pusha
mov
mov
or
mov
xor
sarb
bound
mov
sbb
mov
push
sbb
xchg
repz
mov
movsb
cmpsb
jnp
ljmp
ret
notb
inc
aas
and
cwtl
jns
subl
adc
push
xchg
js
mov
cmpb
out
ja
stos
addr16
test
add
loope
jbe
and
mov
inc
or
xor
in
fdivl
je
shrl
fstp
ds
push
in
aad
fcoms
push
pop
xchg
xchg
push
ret
cmp
imul
fwait
pusha
loop
test
arpl
loop
or
shrd
les
je
fs
mov
icebp
popa
or
neg
subl
je
and
sbb
pop
push
and
push
fcoms
pop
mov
jmp
cld
ret
inc
mov
mov
inc
lds
mulb
leave
int3
das
sbb
out
inc
push
jle
lret
pop
lret
out
cmp
and
int3
or
adc
mov
ud2
mov
repnz
xchg
les
jb
jle
aas
mov
mov
loope
pop
imul
stos
cli
stos
popa
repnz
out
mov
jmp
dec
mov
movsb
mov
aas
pushw
jge
rorb
rol
mov
and
int3
movsb
push
sub
inc
or
jne
lcall
data16
cmp
cmc
dec
mov
push
pusha
fisubrl
in
pop
add
cmc
andl
and
push
sbb
test
xlat
xor
and
sub
lahf
xor
xchg
pop
xor
and
sbb
hlt
jb
hlt
js
cmpsb
cmpb
int3
push
or
sti
movb
dec
xchg
lahf
and
jg
cmp
imul
xchg
inc
iret
stos
fisubs
mov
fstl
mov
sbbb
inc
mov
push
dec
xchg
or
shr
daa
shrl
out
mov
mov
shrb
mov
xchg
sub
push
out
mov
xchg
dec
add
or
mov
jp
mov
shll
cs
push
dec
movsl
xchg
sbbl
cmp
sbb
inc
out
movsb
jbe
sahf
xchg
jmp
jae
dec
pop
mov
movsb
cmp
in
push
dec
imul
icebp
xchg
test
add
loop
pushf
inc
push
insb
mov
xchg
lds
loop
jmp
push
mov
shl
adc
hlt
inc
mov
add
fcompl
lock
ret
cld
enter
lock
dec
jmp
movsb
mov
xor
cltd
mov
jle
inc
mov
xlat
add
inc
jl
push
adc
add
je
lock
test
mov
xchg
jo
push
xchg
insl
clc
adc
pop
js
adc
subb
outsb
or
int3
lea
pop
cmp
aad
xchg
dec
hlt
clc
jmp
shll
cmp
inc
int3
push
insb
pushf
push
pop
lahf
loopne
lods
aam
and
pop
mov
pop
jecxz
pusha
push
pop
notl
imul
push
int3
dec
in
iret
xchg
mov
movsb
or
ja
nop
bound
inc
jl
out
jl
lret
fsubrl
mov
pop
dec
xor
sbb
aam
movb
stos
push
and
add
cmpsb
lcall
test
xor
mov
popa
xor
jno
lahf
sbb
pusha
shrl
ljmp
and
xchg
jg
pop
dec
imul
in
leave
mov
aad
test
pop
js
fwait
imul
push
in
lahf
inc
pop
and
stc
mov
pop
sbbb
push
popa
mov
cmpsb
jnp
xchg
dec
xor
fdivs
mov
push
xchg
jb
mov
mov
mov
xor
adc
xlat
fs
xchg
aaa
lds
insl
ljmp
xchg
flds
add
sbb
fisttps
xor
cmp
std
loopne
xor
lods
pop
jne,pt
and
mov
sbb
and
ja
insl
lock
out
adc
fld1
adc
in
mov
imul
lock
ja
decl
jge
sub
mov
fstl
and
notl
dec
pop
repnz
out
add
in
mov
xor
int
lock
test
adc
add
outsb
cmpl
popa
cmpsb
push
inc
in
sub
in
jne
cld
or
xor
cmpsb
cmp
in
push
repnz
stc
testb
mov
sarl
dec
enter
mov
sahf
and
mov
cmp
mov
sbb
aas
sbb
or
adc
pop
int
out
push
jo
jecxz
lea
xchg
or
sub
xchg
add
mov
into
cmp
repnz
sub
inc
inc
ja
ret
das
and
loopne
sbb
rcrb
ss
jle
pop
xchg
xchg
xor
inc
divl
out
fmull
fisubrl
xor
ficoms
adc
scas
pop
sti
push
and
dec
arpl
add
in
ficoms
inc
test
sbb
outsl
cld
movsl
scas
cli
aam
loop
call
or
mov
sbb
in
inc
outsl
fsubs
enter
mov
push
mov
add
sarb
jle
fnstsw
and
pop
stos
jno
movsl
daa
cmp
dec
cmpsb
inc
push
and
sbbb
jle
mov
push
mov
pop
adc
sub
sub
push
add
cwtl
and
loop
aad
push
dec
or
fisttps
add
fmulp
lods
addr16
xor
fwait
xchg
push
jecxz
xorb
xchg
dec
hlt
out
ja
inc
orb
and
push
xchg
dec
cmp
lea
ds
jns
dec
jno
push
jge
jnp
xor
imul
mov
out
xorl
and
ss
pop
cmpsb
data16
sub
scas
add
repz
mov
cmp
pop
cmp
cwtd
sbb
xchg
cmp
jnp
sub
mov
iret
adc
dec
jno
mov
pop
push
lock
mov
test
sub
jl
hlt
jbe
sti
popa
add
mov
mov
push
andl
lcall
clc
lods
ret
lods
push
adc
movsl
jge
inc
mov
push
pushf
adc
cmp
mov
inc
mov
iret
hlt
imul
lock
and
lret
mov
jecxz
dec
hlt
mov
sbb
popl
mov
aas
mov
pop
inc
repz
mov
mov
xchg
mov
xchg
fwait
ja
jnp
pusha
cmp
pop
mov
cmc
mov
fists
movsb
cmp
jns
pop
rorl
jae
sub
scas
cmp
nop
cltd
or
and
icebp
xor
pop
fsub
add
mov
dec
mov
aad
loop
xor
mov
or
pushf
ss
cmpsb
cmp
push
mov
mov
add
dec
inc
jmp
das
push
arpl
jmp
cmp
xchg
loope
popf
stos
jo
push
test
leave
loop
push
pop
inc
jns
orb
data16
or
loope
pop
lea
pushf
inc
push
es
loopne
cmpsb
fcoml
popf
sub
adc
sub
arpl
lcall
mov
and
jns
push
test
push
or
out
jbe
pop
xchg
and
lahf
xor
out
test
cmpsb
stos
xor
insl
test
jnp
xor
sbb
mov
and
inc
enter
jno
outsl
cmpb
inc
int3
inc
jp
xchg
pop
xchg
xor
and
sub
mov
xlat
dec
xor
adc
xchg
add
inc
adc
movd
jge
daa
in
fs
mov
lcall
stos
jmp
dec
add
fwait
xchg
outsb
cmp
sbb
inc
mov
or
cld
or
sahf
arpl
cld
clc
jne
cmpb
ficoms
sbb
sbb
lds
inc
mov
loopne
cli
xchg
inc
cmp
insb
pop
cmp
xchg
ret
out
mov
shrl
mov
pop
xchg
pop
push
daa
push
mov
pop
call
outsb
sub
sub
xor
lds
add
push
xchg
outsl
adc
shlb
dec
lock
jne,pn
stos
sub
mov
adc
push
dec
or
daa
mov
jmp
mov
fisttps
mov
js
dec
xchg
cmp
pop
pop
stc
cmc
adc
lods
fldt
xor
aaa
push
push
in
sahf
dec
mov
and
sbb
icebp
and
fwait
outsl
push
xchg
lret
mov
xchg
xor
sti
rorl
ss
std
mov
sbb
mov
jl
mov
jle
cltd
stos
dec
nop
add
enter
pusha
pushf
cmpsl
shrl
inc
push
ror
dec
mov
mov
pop
int
aaa
stos
aad
cli
inc
pop
or
cmp
aad
mov
test
or
dec
mov
dec
fwait
add
int3
pop
push
jbe
shlb
daa
in
lcall
push
or
fld
push
sub
or
aad
scas
adcl
adc
sub
push
int3
or
aas
jns
xchg
or
jmp
dec
call
mov
mov
scas
stos
mov
pop
add
ss
idivl
xor
pop
into
jne
fnstsw
mov
imul
jbe
push
jnp
popf
in
in
loope
fnstsw
and
in
lock
divl
cwtl
cltd
shlb
in
jl
or
inc
mov
cmpsl
jae
or
xchg
push
shll
inc
das
shr
push
or
out
xchg
in
push
fistl
out
aas
test
fcoml
xorl
testl
jne
sbb
adc
in
idivb
and
stos
pop
dec
inc
xor
lret
mov
test
dec
add
in
dec
fimull
in
or
sbb
popa
sub
jbe
idivl
sbb
cmp
jno
cld
mov
sar
add
adc
or
outsb
push
enter
jg
add
mov
jmp
and
mov
daa
popf
into
pop
in
dec
or
sbb
lret
mov
pop
add
mov
mov
mov
test
sbb
loopne
sbb
mov
xlat
cmp
push
jo
outsl
cli
lret
je
adc
arpl
adc
test
xor
test
mov
jns
add
cmpsl
addl
das
xorl
call
or
into
nop
sbb
jns
sub
je
std
loopne
hlt
aaa
xor
mov
testl
adcl
mov
pop
push
inc
pop
xor
xchg
arpl
cld
adc
pop
cmc
mov
sub
sbb
stos
mov
aaa
push
add
iret
jecxz
inc
mov
lret
movsl
and
and
mov
dec
movb
xchg
aad
stos
sub
ljmp
mov
popf
cwtl
sbb
dec
ja
xor
ds
dec
xor
mov
add
ffreep
data16
sarl
sbb
add
adc
jno
inc
add
stos
hlt
lods
lods
xchg
and
int3
mov
dec
das
in
adc
loope
outsl
sbb
pop
jb
sub
enter
imul
pusha
push
out
jb
icebp
icebp
jb
mov
lods
adc
lods
and
mov
mov
pop
hlt
mulb
jno
cmp
js
or
mov
rcr
mov
mov
int
push
es
sub
idivb
jbe
ficoml
cmp
mov
dec
add
loop
pop
pop
adc
dec
rorl
add
dec
sbb
cmp
jae
cltd
lret
sbb
out
out
xor
pop
test
out
sub
cwtl
jecxz
xchg
jecxz
rorl
add
addr16
lahf
xor
std
in
add
mov
push
inc
mov
lock
xchg
insb
es
or
cmp
stos
inc
jl
mov
scas
mov
bound
jns
fdivp
mov
cmpb
sti
aas
rorl
out
test
or
out
insb
fcoml
push
pop
mov
dec
inc
jns
mov
int
repnz
mov
cld
clc
lea
pop
or
sti
mov
jae
hlt
jnp
add
loope
pusha
push
stos
ror
inc
cwtl
cmpsb
shrb
pop
outsl
or
iret
sub
xchg
cmp
dec
xor
mov
push
mov
hlt
dec
insb
cli
clc
pop
movl
int
xchg
shl
repz
out
addb
push
pop
adc
adc
outsl
cltd
adc
push
inc
pop
rorb
gs
push
and
add
xchg
negb
and
mov
gs
jl
imul
mov
mov
lods
pop
fwait
mov
pop
mov
adc
pop
mov
inc
ret
mov
rolb
pop
jecxz
pop
mov
push
sbb
cli
mov
andl
xchg
insl
stos
dec
xchg
call
push
mov
dec
movsl
xor
or
cmp
nop
int
sub
mov
bound
dec
add
jne
fdivs
sbb
xor
or
jp
pop
js
adc
dec
rclb
sbb
into
and
arpl
mov
imul
add
imul
cmp
mov
pop
and
rorl
jns
push
sub
jp
mov
and
arpl
bound
pusha
or
pushf
cltd
sub
jb
mov
fldcw
xor
daa
push
inc
dec
dec
adc
fld
mov
mov
call
lods
mov
cmp
xor
enter
cmpb
lods
adc
les
sub
test
jmp
jnp
and
scas
xchg
xor
and
in
flds
fst
rorb
jnp
sti
xlat
jae
cmpl
or
xchg
inc
sub
add
lcall
pop
mov
aas
pop
sub
sub
je
lahf
cwtl
add
jbe
loop
dec
icebp
adc
xchg
clc
inc
out
jne
pop
xor
push
push
out
jns
sbb
mov
and
cmpsl
orb
inc
jge
push
movsb
mov
sbb
fisubrl
movnti
or
xchg
aam
sub
loop
xchg
lret
jns
xor
scas
jno
push
jae
das
jl
dec
mov
sub
aaa
mov
xlat
lret
xchg
ret
xor
outsb
mov
int
mov
adc
ficoms
lret
aaa
adc
jns
pop
outsb
mov
test
dec
ret
add
call
dec
in
xchg
mov
jno
cmp
adc
mov
sbb
fdivp
jmp
or
adc
rorl
mov
shrb
mov
outsb
xchg
lret
ret
jge
negb
rcr
loope
dec
filds
or
insl
lock
jge
dec
rcrl
jmp
arpl
and
cmp
ficoms
aas
mov
mov
cmp
adc
or
rol
shl
mov
sub
arpl
lahf
cmp
fdivrl
ss
loop,pn
mov
mov
pop
xchg
lock
in
inc
xor
bound
pop
cmpsl
daa
sbb
jb
cli
pop
mov
push
inc
movsb
xchg
and
xchg
leave
push
jg
ret
js
dec
popa
nop
push
xlat
aam
ret
inc
inc
mov
mov
cmp
cmpsl
fwait
pop
addr16
cmc
add
call
fwait
out
inc
nop
and
fistpll
sarb
in
mov
jnp
mov
pushf
imul
adcl
repnz
mov
sub
mov
mov
add
xchg
adc
cmpsl
mov
mov
adc
test
push
and
rcrl
add
and
in
cmp
clc
and
fcompl
addr16
aad
lods
scas
xor
jb
adc
add
xor
rcrl
std
push
cmp
sbb
sub
adc
jno
test
ss
ret
in
in
pop
sbb
arpl
testl
fsubr
faddl
push
jp
sarl
add
dec
xchg
jno
fldcw
push
jnp
jo
and
cmc
sbb
xchg
imul
and
repz
in
outsb
sbb
sub
or
in
xlat
repz
decl
sbb
inc
push
mov
sub
sbb
outsl
movb
cmp
cmp
fyl2x
in
aad
xchg
nop
pop
pop
sbb
sbb
movl
test
ret
adc
dec
icebp
and
jae
movsb
jmp
es
es
ret
mov
fs
and
stos
int3
inc
roll
sahf
bound
addb
and
xchg
leave
aad
pop
ret
xchg
gs
cmpsb
fadds
push
shll
inc
inc
and
out
xchg
pop
orb
sbb
jno
mov
mov
int3
in
jmp
push
loope
adc
insb
mov
mov
out
repz
insb
mov
sub
clc
loope
mov
loopne
xor
pop
jnp
ljmp
add
rcll
sbb
cltd
xlat
lahf
jae
mov
lcall
mov
cs
int3
cmp
sbb
xchg
arpl
out
jmp
orl
nop
rclb
out
aaa
rcl
cmp
dec
adc
and
test
and
out
jb
sahf
push
inc
notl
xchg
sbb
ss
shll
mov
pushf
lds
ret
jecxz
dec
adc
jmp
mov
enter
push
jne
imul
pop
dec
adc
pop
jnp
xchg
movsb
cmp
dec
xor
lcall
lret
jae
sbb
das
es
inc
push
int3
cmpsl
jnp
clc
lods
das
fcos
hlt
mov
shlb
sbb
add
insl
xor
icebp
shlb
cwtl
xchg
fadds
fwait
out
aas
mov
leave
dec
outsl
sbb
aas
inc
pop
movsl
lcall
testb
pop
push
dec
scas
adc
cmpsl
mov
and
and
mov
mov
or
adc
push
mov
sbb
push
imul
into
cmp
sti
lcall
xchg
mov
or
jbe
pop
pop
xchg
mov
adc
inc
push
fstl
mov
sub
popa
add
lcall
push
fld1
and
push
aas
movsb
pop
pop
pop
cmp
sti
clc
push
inc
je
mov
fcmovne
movsl
inc
add
xchg
dec
rol
ss
sub
sbb
test
xchg
mov
push
jecxz
divl
js
push
js
les
or
pop
pop
xchg
xchg
sbb
xor
das
stc
xchg
in
cmpxchg
ss
into
jnp
pop
addr16
sub
jnp
arpl
imul
xor
aas
cmp
test
xchg
jne
aam
xchg
daa
xchg
inc
sub
add
mov
orb
idivl
repnz
push
idiv
mov
cwtl
frstor
repz
sub
sbbl
pop
sbb
fldcw
jmp
icebp
and
sub
cmp
cmp
test
mul
decb
push
cmpsl
imul
mov
mov
mov
loope
stc
aaa
mov
adc
mov
jp
mulb
loopne
stc
adc
dec
test
cmp
and
out
mov
mov
mov
xor
loop
cld
add
loop
mov
icebp
mov
aaa
or
or
add
adc
outsl
cli
push
in
xorl
pop
xor
loop
adc
jl
pop
sti
shr
inc
insb
or
lock
shlb
jb
rorb
nop
push
adc
sahf
insl
cmp
popf
inc
test
and
shrb
fmull
jns
dec
and
in
int
xchg
inc
add
stos
or
mov
sbb
fwait
cmc
lds
call
test
sahf
xchg
mov
nop
jecxz
and
mov
mov
mov
jge
sbb
adc
sub
daa
xchg
std
call
add
lret
test
push
dec
hlt
cmpsl
push
jno
scas
leave
loope
addr16
sub
fmulp
mov
push
ds
orb
fld
mov
sbb
inc
sti
pop
and
subl
aaa
sub
mov
adc
aas
pop
jmp
mov
xor
scas
insb
fisttps
iret
sub
pop
jmp
dec
xchg
in
sbb
mov
imul
or
inc
outsl
pop
stos
inc
addl
jmp
test
mov
sub
stos
mov
cmp
das
fmull
xchg
test
mov
jns
das
insl
cs
cwtl
dec
cmpsl
pushl
andb
pop
xchg
dec
sbb
dec
pop
out
aaa
or
cmp
cwtl
data16
int3
or
dec
sar
mov
icebp
push
dec
icebp
ret
insl
inc
sub
hlt
push
xchg
pop
lcall
jb
ds
inc
push
xchg
dec
roll
sarl
fmuls
mov
enter
mov
mov
pmuludq
mov
cld
jne
dec
out
mov
dec
sub
imul
stos
stos
or
jle
jne
test
pop
in
bound
lahf
das
fbld
cltd
daa
insb
lcall
lcall
push
sbb
xchg
aaa
jbe
mov
loopne
cltd
lock
mov
movl
cmp
filds
lods
jecxz
gs
fcoms
pop
dec
jecxz
loop
mov
aaa
leave
adc
or
push
jmp
xchg
push
mov
decl
fnstsw
sbb
out
adc
sub
cltd
cwtl
bound
sub
pop
xchg
mov
je
loopne
movsl
cwtl
dec
inc
sub
sub
lcall
jp
sti
pop
xchg
sbb
in
add
xchg
cltd
mov
test
aam
test
sbb
iret
jno
or
out
jle
in
iret
sar
and
outsb
lock
mov
or
imul
popf
dec
fadd
lahf
sub
dec
jecxz
adc
mov
fidivl
dec
mov
sete
jbe
pop
and
pop
inc
dec
pusha
jne
mov
in
jge
scas
jae
pop
fst
ret
jmp
jmp
jns
mov
push
into
pop
cmp
jl
jecxz
cmp
mov
orl
pop
mov
or
ret
or
inc
int
pop
les
xchg
sub
aas
xchg
es
call
pop
xor
mov
push
pop
aas
jmp
rcrb
push
xor
movsl
jg
data16
xchg
movzwl
or
mov
mov
fidivs
push
sbb
aam
jo
mov
ficoml
sub
aam
ret
test
data16
sub
jb
into
lahf
dec
fcom
fisttpl
mov
jmp
bound
cmp
pushf
sbb
ficoml
aam
mov
aas
cmpsb
pop
lds
ret
je
fistps
inc
push
cmp
push
xor
lock
jnp
xchg
add
push
in
nop
je
add
scas
pop
imul
push
and
push
push
adc
mov
stos
sbb
mov
jge
scas
xchg
lock
xchg
popf
mov
std
cs
xchg
xor
arpl
push
lahf
pop
push
sub
lods
add
fcoms
mov
rorl
subb
xor
or
movsl
add
or
std
in
add
cmpsl
aaa
cmpl
sbb
jp
sbb
sti
push
push
sbb
push
xor
movsb
loop
repnz
clc
repz
sbb
dec
fbld
pop
dec
call
les
mov
mov
sub
pop
inc
push
fmulp
add
or
sub
lea
rol
push
push
repnz
outsl
fsubrl
jecxz
iret
cmpsl
jmp
pop
aad
sbb
mov
shr
outsb
sub
mov
sbb
sbb
cmp
sub
test
jo
shrb
push
aam
xor
mov
adc
dec
mov
fwait
iret
cmpsl
cli
or
push
pop
ss
outsb
and
and
pop
rcll
pop
rolb
test
sbb
rorl
mov
or
inc
sbb
pusha
push
lods
pop
mov
jne
into
pop
mov
fldt
mov
in
jnp
out
cmpl
adc
arpl
push
mov
cld
inc
call
sub
movsb
xor
pop
mov
xor
shlb
xchg
mov
daa
mov
adc
add
pop
xchg
add
scas
lahf
jp
es
push
bound
or
dec
xor
mov
arpl
aaa
jno
mov
stos
andb
jae
ffreep
loopne
icebp
sahf
jnp
cmpsl
ret
or
mov
push
mull
repz
pop
les
les
pop
and
mov
push
adc
pop
inc
xor
cmp
push
fisubrl
mov
js
dec
jae
ret
mov
std
mov
outsb
std
cmp
jle
lret
sbb
fsubrl
stos
mov
sub
aad
cwtl
or
cmpsl
sbb
or
adc
pusha
int3
ss
fsts
push
xor
jne
rol
adc
fcompl
adc
in
icebp
xor
mov
mov
loopne
punpckhwd
lods
and
sub
mov
mov
jbe
inc
jbe
and
and
jl
dec
sbb
push
jl
and
lret
lock
xor
adc
dec
add
sti
dec
push
or
xor
nop
adc
mov
stc
or
pop
incl
add
cmpb
mov
push
push
sub
cmp
push
add
ror
leave
sub
addr16
daa
inc
cs
lret
cmp
cli
ljmp
addb
mov
push
push
jle
fwait
xchg
or
rcl
shrb
cli
into
arpl
inc
mov
or
add
jp
mov
aam
or
add
iret
adc
cmp
jno
mov
mov
and
scas
fcom
lahf
in
fwait
repz
mov
mov
jmp
loope
adc
sbb
push
add
cmc
ret
cmc
rcll
jno
xor
clc
jnp
addr16
jmp
pop
pop
popf
sub
cmpxchg
iret
clc
pop
fsubr
mov
pop
idiv
jp
divl
loopne
xchg
pop
nop
push
pop
arpl
and
mov
lcall
inc
mov
jg
cmp
sub
test
push
fldl
les
loopne
sbb
pop
shlb
test
and
mov
sub
jne
or
call
loopne
mov
shrb
inc
lods
sub
xchg
sarl
inc
jmp
and
add
pusha
cltd
sbb
loop
dec
and
dec
xchg
cmp
mov
aad
outsl
iret
sub
pop
jnp
push
out
sbb
push
dec
jns
movl
std
sahf
imul
pusha
scas
popf
lods
dec
jnp
pop
mov
iret
gs
cmp
sub
xchg
int3
sbb
pop
xlat
sbb
out
insl
adc
pop
mov
into
mov
cmp
jno
mov
sub
int
es
addr16
mov
daa
cltd
mov
dec
pushw
rol
out
shr
cmp
jle
xor
sbbb
sbb
or
mov
mov
mov
dec
jo
orl
ficoml
arpl
pop
aaa
mov
cmp
out
lret
je
test
imul
fbld
jp
insb
jb
mov
ds
cmp
fcompl
clc
add
out
xor
ja
push
xor
xchg
cmp
jge
shl
push
lahf
jp
enter
pop
loopne
enter
push
lods
jp
loop
stos
sti
push
mov
jo
dec
out
adc
shll
pop
add
unpckhps
dec
sub
xchg
jle
mov
outsl
add
sub
imul
inc
push
push
mov
mov
mov
into
in
ljmp
adc
sub
cld
imul
jae
test
je
cmp
mov
pop
icebp
test
lods
adc
aad
cli
xlat
jnp
push
jg
inc
jl
pusha
or
xor
jg
mov
sub
pop
pusha
add
mov
mov
xor
imul
cmp
or
pop
je
xor
imul
sbb
mov
and
mov
adc
repz
outsl
adc
adc
cmpsl
adc
test
sbb
fistps
lds
insl
dec
xchg
andb
stos
mov
test
fistps
pop
imul
mov
or
pop
lods
lods
mov
in
hlt
sub
mov
push
sbb
in
roll
shl
and
ds
xchg
and
sahf
repz
push
adc
lret
mov
popa
leave
xor
or
push
cmpsl
or
and
xchg
out
fucomp
mov
add
mov
mov
addb
scas
dec
out
fmuls
lock
repz
lods
adc
jae
subl
in
push
hlt
sub
dec
ficomps
push
and
in
call
mov
xorb
adc
sub
stos
or
sbb
sbb
xchg
adc
pop
mov
pushf
sbb
xor
fisttps
jbe
mov
inc
mov
insl
int3
sbb
add
mov
pop
xor
data16
adc
inc
inc
push
imul
aam
lods
jmp
push
push
and
out
icebp
ret
fcomps
hlt
sub
jmp
and
pop
ret
xchg
dec
loope
nop
pop
xor
popl
adc
pop
xlat
jmp
ds
mov
pop
pop
js
je
xchg
or
cmp
ja
ss
mov
dec
mov
loop
aas
cld
xchg
inc
fidivl
sti
mov
ret
mov
sub
inc
shll
pop
dec
roll
mov
int3
sbb
rorl
or
sub
cmpsb
pop
jbe
mov
adc
fcoml
iret
mov
sbb
push
pop
leave
mov
dec
sub
cld
xor
mov
sbb
data16
ret
mov
dec
xchg
addr16
std
iret
or
sbb
call
inc
mov
sti
push
aad
cmp
dec
push
mov
int3
enter
pop
cmp
pushf
or
jg
mov
mov
fdivs
dec
xchg
jns
daa
xor
jae
dec
mov
jb
leave
jg
loopne
in
pop
cmp
or
or
int
mov
dec
imul
push
mov
shrb
int
mov
out
ss
and
aam
aaa
and
jnp
mov
xchg
pop
sti
pop
xchg
mov
mov
push
jo
adc
sub
lcall
mov
adc
imul
add
leave
pop
idivl
rcll
ja
mov
gs
pop
sarl
mov
sbb
mov
jp
mov
pushf
aam
mulb
loop
dec
jmp
outsl
cmp
push
loopne
cwtl
jp
pop
dec
inc
in
xchg
out
call
lods
or
cli
or
fneni(8087
dec
cmp
frstor
fistpl
jbe
add
inc
jmp
jbe
iret
loopne
movsl
je
aas
rolb
stc
xchg
or
mov
fisttps
mov
lahf
push
les
shll
push
sbb
repnz
dec
lods
push
sub
data16
sahf
orl
or
xor
rolb
test
clc
sbb
xorb
hlt
and
in
sbb
iret
xchg
pop
cltd
lods
xor
add
adc
dec
mov
mov
sbb
imul
xchg
jge
or
cmpsl
loop
pop
fwait
push
mov
xchg
mov
mov
daa
mov
scas
aad
or
cli
dec
test
push
std
or
js
jno
sbb
sub
sbbb
fstpl
outsl
lea
fcoms
sub
outsl
lock
ret
fdivrs
dec
xchg
enter
pop
and
sub
dec
jp
les
out
jo
sub
lcall
push
data16
jnp
loopne
adc
sub
or
lds
adcl
dec
shrl
inc
adc
subl
ds
jg
jecxz
insl
cmc
mov
cli
xchg
add
push
and
out
cltd
inc
test
sbb
int3
xor
ss
xor
push
popa
fnstcw
scas
movb
mov
jbe
mov
fimull
aas
stos
outsb
fwait
sub
adc
push
fisubl
xchg
mov
out
inc
cmpsb
inc
adc
sub
push
call
out
sbb
cs
push
mov
movsl
enter
test
jmp
insl
repz
jp
inc
fcoms
cmp
gs
lods
out
ja
ljmp
xchg
cltd
and
cs
xor
mov
data16
pop
or
sub
rol
popa
lds
call
cmpsl
push
jbe
add
das
mov
stos
or
ror
mov
jl
aam
aaa
sub
adc
push
out
add
popf
outsb
fisubrl
xchg
test
out
icebp
fwait
ljmp
lahf
adc
xor
arpl
out
gs
sbb
mov
cmp
lods
mov
outsb
shlb
stc
mov
in
iret
lods
dec
sub
mov
dec
mov
rorl
sub
addl
or
iret
out
ja
dec
push
leave
sub
jno
push
mov
xchg
fdivrs
xchg
std
xchg
ret
xchg
jecxz
pop
in
stc
stc
push
outsl
cwtl
sbb
int3
in
add
fnstenv
push
push
mov
outsb
adcl
mov
pop
push
mov
test
mov
xchg
jge
mov
xor
mov
cs
iret
xchg
jb
add
pop
sub
clc
dec
sub
loopne
fisubrl
and
stc
fldt
xor
and
arpl
and
sti
into
iret
out
mov
dec
test
aaa
mov
xchg
sbb
xor
insl
ficomps
sub
ret
xchg
sbb
andl
mov
jge
jne
cmp
test
push
inc
adc
fimuls
cltd
sbb
jmp
cmp
jl
pop
push
sbbb
mov
inc
sub
or
scas
adc
cmpsb
cmp
insb
movsb
xchg
inc
orb
cmp
out
add
mov
mov
inc
cmp
mov
mov
outsb
icebp
sbb
cmp
and
xorb
les
mov
pusha
insb
mov
daa
adc
or
pushf
js
fisubs
sbb
mov
or
frstor
inc
sti
cmp
mov
sbb
jle
lret
jecxz
xor
add
adcb
in
in
mov
call
test
xchg
bound
xchg
shlb
jl
out
shll
loop
lcall
loop
adc
mov
xor
sti
pop
test
ret
mov
inc
fiaddl
jl
psrlq
aam
xchg
int
adc
mov
scas
xchg
sub
pop
int3
or
shlb
add
pop
mov
dec
push
aaa
pop
add
lcall
arpl
in
cmp
movsb
call
mov
add
cmp
pop
or
repnz
push
cmp
jge
push
xchg
shrl
jno
lahf
pop
outsl
arpl
gs
jmp
das
or
push
or
movsb
cli
test
fildll
fidivrs
add
jg
cmp
leave
mov
jo
movsl
fsub
xor
sbb
inc
clc
jnp
popf
xchg
out
dec
inc
fcomip
xchg
push
xor
pop
push
mov
cld
cld
cltd
cmpsb
jecxz
push
add
jb
dec
aad
xor
dec
mov
jmp
mov
sbbb
dec
push
adc
lock
pop
mov
sbb
les
ss
mov
shll
dec
mov
adc
or
dec
push
gs
stos
sbb
mov
push
mov
flds
mov
adc
out
xor
ret
rcll
cmc
sbb
sarb
sbb
fistl
cld
shrl
jg
roll
test
test
push
pop
and
xor
cmp
and
arpl
std
pusha
mov
push
ret
clc
movsb
mov
je
daa
inc
or
push
ds
xchg
cmp
pop
ja
out
imul
inc
popf
mov
push
es
mov
jne
or
fwait
scas
mov
jbe
sti
sbb
or
pushf
pop
jg
sar
lods
cltd
jnp
mov
mov
and
test
scas
pop
imul
insb
mov
in
jne
enter
scas
mov
sbb
pop
pop
mov
aaa
add
adc
sbb
movsl
ds
jbe
jnp
inc
fsts
pop
ds
daa
mov
out
dec
and
adc
lcall
pop
push
cltd
or
loop
xlat
mov
fsubl
aaa
adc
sarb
jmp
lods
lea
dec
xor
mov
push
out
xor
test
dec
lret
adc
lods
nop
cmc
ror
inc
and
add
dec
mov
test
jae
loop
jae
addr16
mov
xor
outsb
cli
aaa
mov
cli
xor
push
rorb
sbb
call
clc
std
or
arpl
and
mov
pusha
push
xchg
lock
sub
jno
xchg
test
push
cmp
push
scas
mov
and
divb
shrb
mov
cmp
xor
mov
rolb
mov
xchg
pop
pop
cmc
in
fdivrl
or
call
and
sub
inc
loop
xchg
into
jle
mov
and
inc
flds
addr16
ret
std
sub
cmpsb
mov
cmp
fstpt
push
gs
mov
jnp
fldt
xor
dec
sbb
fdivrl
add
imul
shlb
frstor
lret
icebp
out
jmp
stos
lds
icebp
adc
jno
jae
fcmovne
lret
inc
popf
cltd
mov
ss
sbbl
notb
pop
pop
out
into
add
sub
pop
hlt
xchg
jle
je
lods
mov
pushf
inc
mov
lret
dec
movsl
test
pushl
jo
add
sbb
push
mov
stos
mov
inc
fadd
popa
lcall
pop
aas
inc
jl
xchg
adc
das
dec
adcl
cmpl
xchg
and
mov
xchg
pop
pop
sti
imul
mov
das
jge
out
ret
aaa
pop
fidivrs
test
cmp
lds
pop
pop
lret
dec
jnp
shlb
sub
lea
bound
push
pop
ljmp
mov
xchg
test
cmp
inc
add
test
jbe
adc
inc
call
dec
test
lret
xor
or
movb
popa
divb
and
jnp
sbb
mov
cmp
jno
imul
add
add
gs
rclb
sub
fs
outsb
lea
insl
repz
cmpsb
call
sbb
mov
mov
inc
xor
cwtl
shlb
dec
add
addb
out
xchg
test
out
or
mov
xchg
and
movsl
test
push
jnp
aad
mov
mov
push
and
or
test
arpl
jg
andw
xchg
lcall
adc
lods
inc
mov
adc
xor
push
sub
mov
notl
lcall
aam
jp,pn
add
inc
mov
aas
in
scas
and
shlb
xchg
ja
ror
xorl
ss
dec
iret
mov
imul
cli
and
ret
cmp
dec
mov
scas
jge
adc
icebp
jbe
sub
repnz
and
push
jle
xchg
es
inc
push
xor
adc
jmp
stos
mov
jnp
dec
loope
ja
fidivrs
into
scas
mov
cs
ret
jecxz
inc
push
int3
cmc
inc
mov
cmp
mov
jne
std
push
int3
mov
and
mov
adc
pop
js
addr16
mov
addr16
and
or
mov
add
push
daa
and
sub
or
mov
xor
or
int3
sub
int3
push
adc
int
jmp
mov
ret
test
shll
gs
mov
cmp
loop
ljmp
addb
jno
or
icebp
jle,pn
ror
ss
popa
addb
push
data16
stos
outsb
ficoms
pop
pop
mov
cmpb
stos
xor
in
jp
push
cmp
leave
sub
notb
adc
mov
fcmovne
push
test
pop
out
das
dec
loop
mov
hlt
ja
jg
and
cwtl
mov
jl
push
pop
loopne
pop
adc
in
and
loope
in
fcomps
and
decl
es
es
movsb
xchg
mov
shll
fidivrl
xchg
xchg
sbb
cli
xchg
pop
fwait
jae
jae
jmp
insl
fnstenv
xchg
sbb
scas
aas
cs
and
or
enter
sbb
movsl
mov
push
dec
lahf
shll
push
mov
push
in
push
aad
jb
mov
add
pop
nop
cwtl
cli
mov
xchg
add
rcll
mov
popa
outsb
pop
cmp
and
push
mov
in
es
ljmp
icebp
mov
loope
add
sbb
cwtl
xchg
outsb
cmp
cmp
hlt
xchg
mov
jecxz
jb
je
fs
in
aam
lea
popa
jmp
and
xor
pushf
cltd
imul
cltd
dec
xlat
add
adc
addr16
mov
jmp
inc
xchg
repz
dec
divps
jnp
test
xchg
movsb
add
add
lcall
clc
mov
pushf
mov
inc
bound
inc
xlat
dec
js
inc
fxch
in
inc
aad
scas
cmpsb
inc
mov
add
in
dec
xchg
cltd
or
dec
movsb
out
outsl
lea
cld
lds
mov
test
push
sub
rcrl
push
adcl
cmpsb
sub
arpl
mov
cmp
test
pop
jp
xchg
aam
cli
sub
and
ss
icebp
xchg
pop
dec
loopne
jns
inc
das
pop
repz
pop
test
iret
add
repz
push
aam
add
mov
jne
out
mov
jmp
dec
push
imul
cmp
sub
xchg
pop
pop
pop
ret
push
or
jge
fadd
in
mov
mov
test
imul
cmp
lcall
push
sbb
cld
add
push
mov
sbb
xchg
push
push
lods
outsb
enter
das
jns
xor
push
cwtl
sub
fistl
pushf
pushl
aad
loope
loopne
cld
repnz
xchg
pusha
ret
cmp
vcvtsi2ss
sti
cmp
and
lods
add
and
adc
pop
adc
movsl
push
lret
or
lods
test
bound
and
dec
loop
daa
enter
jne
mov
inc
out
push
dec
inc
fisttpll
mov
imul
bound
jmp
sti
mov
loop
xor
mov
xor
mov
scas
stc
inc
pop
icebp
test
sub
out
cmpb
adc
add
out
sbb
ss
mov
jecxz
mov
daa
sbb
adc
mov
inc
cmpsb
add
pop
shl
movsl
popf
addr16
cmpsl
inc
adc
wbinvd
popa
and
push
ret
inc
mov
les
mov
push
lret
call
push
jns
cmp
jmp
xor
lret
push
cmp
inc
dec
test
pop
adc
cli
and
ja
dec
mov
inc
cmp
ljmp
pusha
call
lods
lcall
mov
ljmp
andl
xchg
sub
popf
movl
cld
dec
cmp
xor
mov
stc
rcrb
jbe
hlt
mov
addr16
fcomps
xchg
sbb
push
push
outsl
pusha
xorl
jg
push
sub
jno
xchg
cli
repz
xchg
shll
pusha
or
xor
add
xor
or
jp
xchg
adc
mov
in
test
fcmovb
add
mov
lahf
add
test
jle
loope
insl
jmp
push
dec
mov
jb
adc
popf
lret
orb
and
dec
in
lret
push
inc
cli
sub
das
gs
xor
xchg
int3
add
hlt
xor
push
cmp
repz
inc
aam
into
mov
cld
add
adc
mov
daa
fs
daa
fs
adc
bnd
mov
enter
fstps
or
cmp
dec
jp
bound
js
lcall
mov
stos
push
push
push
cmp
mov
les
pushf
sub
outsl
jbe
push
gs
cmpsb
push
subl
mov
outsl
into
pop
mov
loopne
leave
adc
xor
push
fstps
pop
inc
mov
lock
jl
dec
adc
not
pop
pop
cli
test
je
and
scas
dec
stos
cmc
or
jo
and
in
arpl
fisubs
out
push
lahf
arpl
pop
jne,pt
lock
aam
shrl
pop
fstpt
mov
fdivs
arpl
aad
push
push
jmp
pop
mov
push
lea
scas
icebp
fsubrs
ds
repz
out
std
stos
notl
xchg
icebp
sub
jg
lcall
fdivr
xchg
stc
pop
mov
pop
mov
mov
fisttpll
push
sub
and
insl
cltd
jp
mov
lcall
add
or
lods
push
cs
js
cmovno
mov
stc
js
pusha
daa
jo
push
inc
fistl
push
movsb
sbb
mov
out
lret
ror
push
cmp
pushf
cmpb
and
sub
inc
cmc
jae
lret
push
pop
inc
inc
mov
pusha
out
or
leave
adc
mov
sub
xchg
push
pushf
or
loop
popf
lods
push
and
movsl
jae
mov
cmp
gs
xbegin
mov
daa
pop
aad
lret
hlt
mov
vpsubq
jg
sub
mov
push
nop
lahf
mov
xchg
enter
pusha
mov
hlt
cld
pop
fcmovnbe
and
push
add
add
rolb
add
push
xchg
lds
mov
and
mov
mov
jb
or
push
test
mov
and
hlt
icebp
xchg
add
xchg
xor
les
stos
jge
push
shlb
inc
jno
cwtl
in
cmpsb
push
add
adcb
les
rcll
test
mov
and
dec
sbb
pop
xlat
fs
js
testb
push
ret
fwait
das
push
sub
gs
inc
sub
inc
mov
cmc
add
imul
and
adc
stc
lahf
jp
stc
pop
dec
movzbl
jo
popa
js
enter
xchg
aas
jecxz
sbb
mov
sub
test
mov
cld
icebp
shl
into
fnstenv
inc
enter
pop
mov
shlb
movl
mov
mov
jbe
xor
cmp
sbb
adc
jns
sub
stos
jns
out
imul
sarl
dec
gs
adc
mov
ljmp
or
adc
dec
out
pop
insb
rcl
lcall
xchg
out
sub
cld
divb
js
ja
sbb
or
gs
or
or
rorb
fwait
add
add
imul
test
shl
outsb
add
inc
inc
lahf
jl
sahf
mov
ljmp
sub
arpl
cli
dec
push
or
cmp
mov
jns
mov
call
cmp
in
xor
cmp
sbb
push
ficompl
addb
int
jmp
xchg
loope
or
scas
pusha
mov
xchg
stos
fistpll
imul
cmp
inc
cmp
dec
mov
int3
out
ja
adc
push
pop
outsb
ss
in
sbb
stos
test
jecxz
insl
mov
xlat
pop
cltd
xor
sti
insb
repnz
daa
fists
idivl
push
aam
jae
inc
inc
arpl
sub
cmpsl
xchg
movsb
mov
mov
mov
test
cwtl
cmc
push
lcall
pop
jmp
arpl
stc
pop
sbb
jp
adc
fildll
cmp
idivb
dec
aas
xchg
and
push
pop
scas
xor
xchg
xor
push
je
and
bound
dec
dec
jmp
push
pop
sbb
cmc
mov
cld
ret
negl
pop
insl
jbe
jo
mov
cmp
sub
jae
jecxz
fsubs
mov
in
xor
or
xchg
mov
xor
jb
in
pop
movsl
in
jl
mov
repnz
fmull
lret
iret
rolb
dec
push
jb,pt
inc
xchg
mov
mov
mov
sbb
jl
mov
mov
es
inc
out
mov
jg
add
cmp
add
or
call
adc
insl
in
mov
imul
dec
sahf
lcall
arpl
in
aad
xchg
mov
inc
push
or
and
mov
mov
ficoms
mov
clc
lods
arpl
mov
movsb
aas
lret
add
mov
pop
out
push
rcrl
push
icebp
aas
aaa
adc
or
push
fmuls
fcomps
add
sub
mov
inc
mov
mov
ss
lods
mov
add
adcb
sbb
insl
add
mov
hlt
hlt
fldl
stos
jo
xor
test
add
xchg
dec
stc
sti
or
xchg
adc
xchg
nop
scas
xor
and
inc
jle
test
stc
dec
mov
and
push
push
jne
cs
cli
movswl
mov
outsb
sub
ret
inc
aad
out
mov
xor
out
popa
lcall
test
pop
push
aam
idivl
mov
scas
pop
subl
and
ficompl
add
cmp
imul
js
cli
out
out
xlat
jbe
lcall
add
jbe
out
out
scas
mov
enter
pop
cltd
scas
mov
lret
mov
js
jg
xchg
jg
insb
scas
cmpsl
out
int3
fcompl
cmpsl
fcompl
mov
dec
jno
sbb
int3
test
pop
in
sbb
cmp
add
add
std
lret
mov
mov
pushf
sbb
mov
sbb
rolb
movsl
and
inc
sub
mov
inc
shrl
xchg
ds
pusha
sti
xlat
dec
out
jmp
inc
push
pop
cs
shll
mov
movsb
cmp
adc
scas
xchg
fwait
cmp
sarb
addb
andb
rolb
pusha
sti
daa
popf
sbb
dec
add
mov
sub
pop
mov
imul
jno
mov
dec
sbb
mov
add
stc
leave
int
out
lock
rclb
imul
outsl
test
push
stos
cmp
jae
dec
mov
xor
mov
pop
jp
or
pop
and
xchg
mov
mov
push
fcompl
loopne
adc
fwait
leave
fstpt
loop
pmullw
sti
lods
aad
dec
cmp
stos
nop
imul
push
mov
lods
mov
loope
cmp
push
roll
out
mov
subb
pop
les
sub
pushf
fsub
call
test
cmp
movsb
clc
xor
lea
mov
cltd
mov
or
and
ja
pop
rolb
jl
mov
mov
leave
daa
stos
or
jno
mov
out
inc
cmp
xor
push
xchg
dec
fisubrl
fldenv
or
lods
push
jb
test
out
testl
and
mov
cmc
sbb
jl
or
mov
fdivrl
in
int
outsb
jo
cwtl
add
adc
sbb
fdivr
cmp
mov
inc
arpl
xorb
hlt
xchg
outsb
std
repz
inc
jnp
in
scas
xchg
rolb
in
mov
sub
pusha
fnsave
dec
add
andl
cwtl
xchg
mov
movsl
mov
or
sub
leave
scas
lahf
dec
icebp
or
insb
jge
imull
lahf
fmul
loope
dec
pusha
inc
pop
mov
mov
mov
sub
jo
fwait
ret
jns
jno
xchg
xchg
inc
repz
jg
test
cld
popa
inc
or
mov
jmp
ds
cmpsl
inc
ss
addb
pop
jb
push
icebp
out
rorl
pushf
xchg
test
cmp
scas
and
das
out
xchg
mov
repz
dec
bnd
shll
pusha
mov
movsl
les
mov
imul
pushf
adc
cmc
push
test
js
lret
adc
ljmp
jae
sbb
dec
push
xchg
jae
inc
aam
addr16
adc
cltd
jmp
dec
mov
jle
or
rcll
call
add
aas
pop
iret
cmp
inc
mov
cwtl
adc
clc
stos
push
shll
inc
out
and
cmp
adc
fsubrp
ljmp
sti
subb
jnp
adc
jmp
sbb
mov
dec
scas
lock
jecxz
xor
inc
mov
gs
bound
cwtl
movsb
mov
xchg
nop
and
mov
stc
inc
dec
sub
xor
xchg
addb
sbb
lcall
dec
adc
cmc
jbe
cmp
dec
call
fnsave
cmovnp
insl
enter
jecxz
pop
sub
int3
dec
dec
mov
add
les
and
movsb
sbbb
inc
movsb
jg
fs
std
fimuls
adc
pop
xchg
pop
bound
or
mov
out
and
mov
js
cwtl
mov
outsb
or
faddl
andl
push
sbb
xchg
imul
pusha
adc
test
and
push
mov
shl
jl
xchg
movsl
nop
sbb
dec
popa
lahf
and
inc
es
add
cmp
int3
and
inc
into
xorb
or
xor
loope
ja
mov
test
lret
clc
stc
dec
jb
ja
cwtl
int
and
sti
and
ss
rclb
jae
inc
xor
stc
sub
dec
pop
lret
mov
fnstcw
push
mov
ljmp
mov
test
lods
and
nop
insb
ret
dec
xor
inc
pop
sub
rep
push
cmp
push
pop
xchg
adc
mov
or
sbb
addr16
jbe
dec
movsl
adc
aad
xchg
mov
cmp
repz
xor
scas
jno
xchg
dec
and
mov
xor
and
push
mov
push
jl
in
add
lods
popa
add
push
add
mov
cmp
push
xor
cld
jnp
jbe
imull
mov
flds
or
aam
dec
loopne
lea
cltd
scas
xchg
loope
das
mov
outsb
hlt
xorb
lcall
aaa
pop
inc
jl
push
or
iret
dec
xchg
enter
mov
popl
xchg
lods
into
jl
push
jmp
lds
mov
push
jmp
sub
leave
push
pop
jl
subl
aam
mov
dec
shlb
xchg
scas
pushf
fnsave
xchg
mov
repnz
cwtl
sub
in
mov
cmp
xor
xor
std
sub
stc
cs
adc
mov
js
dec
insb
cmp
push
aad
stos
cmp
cs
fsqrt
xchg
jp
sahf
push
xchg
or
xor
outsl
rcr
cmp
in
xchg
adc
hlt
ja
mov
jle
out
shl
imul
or
xor
mov
xchg
or
jl
rcrl
jbe
jae
xchg
dec
pop
mov
rorl
dec
cltd
cmc
xchg
ret
fcmovne
pop
fnstenv
insl
mov
jbe
daa
mov
aas
clc
mov
sbb
jmp
jne
insl
cmpsl
nop
insl
jg
cmp
insl
and
lds
aas
cmp
lods
jne
mov
add
ret
test
stos
cmp
xchg
add
push
mov
outsb
mov
jnp
movsb
push
dec
sub
les
or
xor
rolb
sarl
inc
iret
jne
popa
cmp
or
xchg
fisubrs
and
pop
sbb
add
cli
int3
xchg
inc
mov
dec
fidivrl
inc
xchg
divl
popf
dec
dec
dec
loope
std
ret
icebp
or
push
cmpsl
and
jo
hlt
pushf
xchg
sub
dec
in
dec
jns
lods
lret
adc
movsb
and
bound
fadds
adc
add
nop
in
pop
in
xchg
inc
adc
aas
lock
ud2
pop
cwtl
cmp
xchg
cmp
push
ja
les
adc
nop
pop
jbe
les
inc
hlt
xor
in
test
lds
or
xor
nop
sbb
sbb
push
mov
js
cmp
xchg
scas
movsl
jne
in
loop
dec
lods
xlat
aam
orl
repnz
addr16
inc
jle
fstl
mov
je
mov
dec
loop
rorl
xchg
jno
xchg
sbb
inc
fstpt
add
rclb
lret
jl
cltd
jno
dec
call
rclb
loopne
int3
mov
into
push
lret
popf
push
inc
fmull
pop
or
push
cmc
xor
mov
sbb
inc
sbbb
push
out
jb
mov
jnp
sub
fldcw
cmp
push
push
jno
sahf
jle
into
mov
dec
fnstenv
out
xor
fsubs
ss
inc
push
adc
fdivrs
pop
js
xor
or
mov
jo
clc
out
push
movsb
icebp
jae
inc
sub
dec
sbb
je
aaa
outsl
scas
xorb
cltd
xor
jns
cmp
cmp
mov
in
push
fisubl
jge
add
pop
aas
xchg
jle
mov
je
push
jp
sbb
fdiv
lods
dec
sub
inc
test
pop
adc
mov
cmp
pop
mov
inc
push
gs
mov
push
xchg
xchg
jnp
shrb
es
cmp
lock
out
pop
mov
lods
dec
bswap
fidivrs
arpl
test
dec
xorl
and
je
xchg
ret
dec
std
hlt
lods
mov
ficompl
popa
enter
popa
dec
inc
dec
xor
mov
inc
movsb
mov
sbb
int3
shll
and
push
add
sbb
cwtl
xor
out
pop
shrl
push
or
mov
addl
inc
sub
xchg
test
nop
sbb
fdivrl
adc
mov
xlat
and
jb
and
loope
add
sbb
dec
popf
loop
sub
sub
aad
or
xchg
aam
mov
lods
xchg
stc
bound
or
decb
pusha
outsl
out
xchg
data16
hlt
scas
stos
xor
loope
cmp
repnz
loop
addr16
and
dec
nop
xorl
or
push
mov
xchg
mov
repz
sub
mov
and
pop
outsl
popa
lds
mov
or
ds
popa
xchg
mov
push
cs
cli
test
dec
inc
mov
mov
push
call
movsb
mov
push
fiadds
and
sbb
or
outsb
out
lcall
and
scas
add
popa
aam
push
pop
xor
and
std
xchg
add
fiadds
lods
imul
cli
je
lret
fidivrs
sub
loop
out
adc
cmp
dec
popa
push
cli
dec
test
in
fnstsw
fs
xchg
pop
and
dec
mov
xor
inc
dec
pop
cmp
movsb
adc
or
mov
sub
pop
pusha
hlt
add
dec
mov
jmp
sub
movsb
push
cmpsb
in
pop
dec
push
add
jecxz
mov
xchg
fiaddl
aam
mov
push
xchg
add
inc
mov
aas
test
dec
stos
sbb
scas
testl
gs
in
addl
sbb
in
cmpsb
mov
sbb
add
jo
xchg
into
inc
movsl
mov
clc
mov
lret
xor
out
das
popa
jmp
or
sbb
pmuludq
repnz
into
sbb
xchg
sbb
and
and
fwait
dec
enter
jno
aad
xchg
xor
lret
pusha
nop
lock
adc
fcomp
xchg
xchg
js
jle
daa
loop
push
cmpsl
xor
out
dec
insl
adc
or
cmp
xchg
mov
cmp
jbe
pop
fs
aaa
cmp
scas
mov
stc
mov
ljmp
xchg
push
jnp
push
jl
adc
ja
sbb
jg
mov
arpl
hlt
mov
or
cmp
push
test
fs
add
mov
dec
push
outsb
andl
out
int
stc
subb
adc
sbb
shll
sub
xchg
push
int
pop
sub
cmpsl
inc
xchg
enter
xor
mov
notb
jecxz
jbe
repz
jmp
fwait
dec
in
insb
iret
push
fmull
or
test
jns
pop
xchg
push
mov
sub
and
pop
push
shrb
imul
fldt
dec
add
sub
idivl
sub
jmp
xor
aaa
ss
ljmp
pop
sti
lock
push
push
sbb
lahf
pop
lock
and
add
mov
sbb
mov
int
or
adcb
mov
fcmovnb
push
cmp
lods
aas
adc
dec
in
xor
fidivrl
lods
in
xchg
mov
movsb
xor
lds
outsb
mov
cld
test
in
fimuls
daa
pop
mov
or
mov
push
pushf
lcall
pop
cmpsb
pop
inc
sbb
lret
mov
lcall
cld
jl
in
jbe
call
loopne
sub
lds
push
cli
int3
inc
or
xlat
mov
or
into
sub
addr16
jae
gs
lcall
jnp
add
push
mov
dec
adc
mov
lret
sbb
mov
inc
fs
fstps
das
jno
comiss
aad
out
pop
add
add
inc
xchg
jns
hlt
jbe
jae
gs
jno
subb
mov
sarb
push
mov
dec
cs
arpl
adc
xor
push
inc
scas
cli
pop
cmpsb
sub
mov
sbb
jae
mov
shll
cmp
rcrb
mov
sub
sbb
mov
and
cmp
popf
push
cmp
push
jecxz
lds
xor
push
lds
add
pop
jnp
lcall
adcb
fisubl
cmc
xchg
cltd
push
test
lret
mov
scas
xchg
lods
cmp
mov
cmp
add
es
pop
sbb
test
cmc
fs
adc
out
cmp
or
sub
ret
or
mov
push
pop
jmp
mov
fwait
hlt
into
add
dec
push
repz
mov
ret
jb
aam
xor
xchg
iret
mov
movsl
xchg
out
push
add
out
add
pop
rcr
jp
pop
fwait
mov
scas
outsb
push
jl
mov
xor
shlb
clc
push
into
pop
or
push
js
shlb
mov
out
inc
and
pushf
inc
sbb
popf
sahf
and
in
mov
cmp
add
xor
int3
pop
ret
or
mov
mov
movaps
aas
push
shl
ss
inc
popa
std
ss
mov
xchg
mov
aaa
insl
xchg
inc
dec
mov
or
pop
or
add
mov
mov
rolb
inc
outsl
add
mov
pop
xchg
scas
xchg
mov
sub
loope
jecxz
adc
cltd
dec
loopne
arpl
rcll
lret
or
sarl
in
popf
fcmovnu
clc
maskmovq
mull
add
fcomp
mov
pop
shrb
push
dec
cld
mov
cmpsb
xor
repnz
or
pop
out
iret
arpl
add
les
adc
mov
ja
loope
fcomps
addr16
or
movsb
and
and
xchg
and
pop
add
jmp
arpl
sbb
movsl
sahf
cltd
mov
int3
leave
mov
dec
in
ret
pop
mov
sbb
push
out
push
int3
test
jge
adc
out
cltd
xchg
nop
in
add
shlb
add
inc
xor
icebp
mov
and
in
fwait
mov
push
mov
mov
push
xchg
leave
pop
cmp
mov
lahf
xchg
add
out
loop
ret
popa
out
outsl
cwtl
dec
sti
add
lret
or
ret
xchg
jbe
jno
fnstcw
push
out
leave
push
sti
jno
subb
sub
or
pop
pop
jo
lea
into
dec
push
dec
mov
xor
je
les
inc
lahf
cltd
pop
inc
clc
scas
fidivs
movsl
lods
rcrb
daa
jne
adc
notl
popa
leavew
gs
mov
out
push
popf
gs
ds
inc
xchg
mov
mov
push
jmp
ficoms
mov
sub
add
jo
sub
mov
or
outsb
orb
into
repnz
roll
loop
sbb
xor
pushf
aad
mov
inc
test
pop
ret
push
sahf
leave
rcll
ss
mov
in
jns
xchg
shll
dec
fmuls
je
rcrb
sub
add
sbb
cmp
xchg
mov
lret
and
stos
xchg
decl
sbb
xor
adc
loop
pop
mov
push
lret
mov
inc
mov
stc
and
mov
scas
sbb
pop
daa
jecxz
dec
rorb
mov
aaa
int3
les
fisttps
insl
sub
fadds
jnp
aam
movsb
jns
mov
test
fmuls
xor
push
clc
mov
rolb
loope
test
jns
loope
outsl
mov
inc
xchg
sub
fucomp
jb
pop
cmpsb
pushf
cs
aaa
xor
inc
xor
aam
jbe
xchg
sub
inc
push
popf
pop
mov
hlt
inc
lock
mov
shlb
mov
lret
outsb
mov
rcll
cli
xchg
inc
inc
push
out
sbb
mov
lea
jle
pusha
jbe
pop
sub
cmpsb
mov
in
ret
jecxz
and
int3
flds
adc
gs
cmp
scas
cmpsl
inc
jbe
cmp
vaddsubps
add
aas
jb
mov
xor
cmc
popf
mov
fidivs
and
adc
pop
push
sbb
in
fbstp
bound
xor
repz
mov
xchg
push
sbb
xlat
lods
aam
adc
pop
or
lock
adc
and
cmc
pusha
cltd
std
comiss
lcall
add
idiv
pop
pop
jecxz
cmp
cwtl
adc
cmp
inc
and
lea
movsb
mov
sbb
adc
mov
or
fadd
lret
cmp
dec
jnp
add
xchg
aas
pop
pusha
clc
lea
test
jbe
mov
xor
aam
xchg
das
mov
in
rorl
sbb
ret
cmpsb
lret
push
stos
movsl
or
jecxz
arpl
jbe
or
push
stos
test
lock
repnz
nop
mov
aam
mov
push
push
pop
dec
imul
mov
lcall
push
out
pushf
pop
dec
jne
sti
loop
or
adc
mov
stos
pop
pop
lods
movsl
in
movsl
inc
mov
inc
addr16
pop
fwait
dec
pop
lds
imul
add
xchg
cmp
aas
xchg
mov
testb
rcll
in
xor
add
dec
in
ret
add
cwtl
cld
fcoms
sub
es
hlt
mov
pop
mov
fstpt
out
ljmp
sbb
js
imul
div
and
xchg
add
leave
repnz
std
mov
or
xchg
adcl
ds
imul
subl
xor
and
pop
lret
insb
out
mov
sub
cmp
and
call
pop
jp
clc
mov
pushf
adc
cmp
mov
dec
adc
ds
bound
jmp
mov
jmp
sub
inc
jmp
bound
mov
xor
add
pushl
mov
jo
mov
pop
lock
fstl
adc
inc
jmp
out
iret
cs
add
in
cmpsb
int
es
add
dec
aaa
popa
adc
testb
aaa
sbb
adc
popf
mov
add
fildll
jmp
subl
out
cli
pop
jmp
mov
bound
pop
or
pop
fsubr
cwtl
outsl
lcall
test
repnz
out
inc
sbb
jnp
lock
or
stos
fnstsw
dec
call
xchg
or
pusha
and
hlt
or
icebp
out
or
lods
pop
jo
arpl
xchg
sarl
sti
sbb
notl
iret
add
stc
testb
lcall
scas
insb
addl
sbb
add
jl,pn
push
mov
dec
clc
and
iret
push
inc
fmuls
pop
mov
adc
add
cwtl
ds
adcl
and
ds
int
inc
push
fwait
addb
inc
iret
dec
or
setg
cmp
pop
xor
aam
imul
aad
dec
out
jle
ret
jl
cmp
pushf
stos
cmp
ss
push
inc
addr16
lahf
push
inc
jno
leave
cmp
mov
mov
mov
jl
mov
mov
scas
fndisi(8087
push
push
into
data16
fstl
icebp
fdivr
sbb
ss
ds
cmpsb
add
hlt
sub
mov
sub
cmp
shll
add
iret
pop
ret
subb
or
dec
cwtl
pop
mov
daa
insb
mov
sahf
outsb
add
inc
adc
cmp
iret
xchg
adc
imul
cli
inc
mov
add
xchg
negb
inc
pop
loope
or
loopne
jge
mov
cmp
sbb
push
mov
xchg
inc
mov
jecxz
enter
push
jecxz
push
xor
jnp
mov
orl
cs
cld
dec
sub
fcoms
push
cmp
in
inc
inc
insl
dec
subb
ror
jg
add
aas
shrl
jns
mov
clc
roll
xor
sub
add
adc
movsb
xchg
mov
xchg
pop
in
fcoml
incb
fstl
test
call
aam
frstor
sub
in
hlt
adc
insl
add
push
xor
addr16
cmp
lret
jnp
pop
jle
xor
ficoms
push
mov
data16
push
loopne
or
and
es
cmp
sub
bound
mov
leave
or
adc
scas
xchg
xchg
arpl
jno
sub
push
jno
enter
fildll
mov
pop
test
cmc
mov
mov
cmp
adc
add
jle
add
xchg
fcmovne
gs
fisubs
cmpsl
es
jmp
fsts
stos
dec
ds
xchg
pop
and
xor
sub
add
inc
add
cmp
out
pop
jp
xchg
les
stos
jg
scas
cmp
xor
lcall
lahf
shll
jl
xor
mov
add
popf
lds
into
ret
addr16
fnsave
cmc
jmp
dec
mov
mov
call
jmp
sub
jmp
arpl
or
dec
jbe
in
fnstsw
mov
pop
leave
xchg
mov
xorb
pop
jo
cmp
rcrl
rclb
push
fxch
push
cmpsl
sti
pop
out
jg
xor
mov
je
dec
jne
mov
xlat
jne
pop
les
jnp
push
or
or
pop
into
xchg
cmc
pop
or
jmp
lret
lret
test
test
pusha
inc
fld
adc
jo
loope
xor
in
or
test
loope
dec
push
add
mov
test
adcl
enter
push
and
out
dec
lds
mov
push
outsl
inc
or
sbb
ss
push
sub
xor
shll
repz
out
loop
loop
lret
hlt
push
lret
fsubs
add
jns
jmp
xor
imul
mov
xor
testb
adc
pop
adc
ret
daa
out
pop
std
push
pop
clc
dec
jbe
lret
sbb
out
cltd
push
mov
sub
std
sbb
sbb
mov
push
cmp
push
mov
sbb
pop
and
mov
je
loope
xchg
cwtl
in
popa
std
and
add
out
lret
js
das
pop
push
or
adc
lods
mov
adc
mov
sub
pop
daa
cwtl
sbb
cli
pop
dec
cmc
sbb
or
out
lea
daa
mov
jbe
repz
dec
test
call
cmpsl
mov
inc
adc
cld
aas
scas
push
out
sub
mov
pop
rcrl
stos
xor
pushf
push
jmp
insl
jmp
lret
jmpw
sbb
imul
xchg
fistpll
mov
and
cmp
mulb
adc
insl
jns
inc
jl
or
mov
js
mov
dec
xchg
sub
mov
push
xchg
mov
test
mov
or
adc
repz
pop
dec
xchg
mov
sub
pop
or
xchg
and
mov
testl
mov
cmp
into
ds
cmp
mov
test
out
pop
ret
jnp
dec
outsb
cmpsb
pop
mov
gs
xchg
fs
loopne
push
rolb
sarb
sarl
out
test
loopne
xchg
cmc
pusha
add
pop
gs
adc
enter
lret
or
in
mov
sahf
jecxz
enter
repz
cmc
dec
out
add
lods
fiaddl
add
pop
add
jo
inc
stos
inc
lock
pop
pusha
es
addr16
int3
xchg
in
aad
adcb
xchg
push
mov
aaa
sub
push
in
inc
mov
dec
mov
stc
pop
dec
hlt
aaa
mov
inc
dec
les
lock
xchg
cmp
or
pop
adc
scas
daa
jo
or
hlt
mov
pop
jne
cmp
add
fwait
cld
pop
inc
je
adc
repnz
aam
mov
int3
rclb
jg
fwait
jno
dec
or
and
mov
xchg
and
popf
decb
pop
out
lcall
lea
inc
frstor
mov
int
pop
mov
sub
sbb
mov
dec
sub
adc
rol
and
loop
mov
test
icebp
insb
push
inc
shrb
in
out
fwait
hlt
dec
in
loopne
add
loope
mov
loope
adc
xor
mov
scas
xchg
sbb
mov
or
ljmp
or
and
inc
or
xor
inc
cmp
adc
xor
fidivrs
es
push
xbegin
xor
add
and
rorl
aaa
pop
in
push
add
lods
cltd
adc
or
cmpsb
xchg
mov
sbb
mov
xlat
stc
mov
mov
push
or
shrb
pop
mov
cmp
test
xorl
inc
sbb
or
pop
repnz
jae
add
mov
lret
mov
js
in
pop
aam
cmc
jge
cmc
aaa
addr16
movsl
mov
iret
adc
mov
adc
pop
stos
fdivrs
aad
lods
int3
xchg
popa
lret
fnsave
dec
push
mov
mov
je
cld
sarb
popf
loope
dec
test
into
pop
loop
mov
arpl
xor
movsbl
dec
jno
sarb
cmp
push
daa
data16
movsb
icebp
imul
dec
jle
lods
mov
cmp
cmp
mov
repnz
mov
lret
divl
and
xchg
adc
enter
and
loope
jmp
fldenv
inc
mov
and
jae
call
ror
fucomp
fistpll
insl
ret
roll
jo
lods
sarl
cmpsl
out
fdivs
into
jl
loope
call
sbbl
mov
test
inc
sar
leave
mov
lcall
push
stc
fdivrl
std
and
sahf
imul
adc
in
mov
cmpsl
xorl
xchg
sub
rorl
fdivl
mov
mov
add
sub
and
sub
add
cmp
test
movsb
call
lods
es
push
and
les
mov
add
ja
dec
popa
daa
xor
or
test
fidivrs
rolb
insb
aaa
xchg
mov
lea
test
lock
ret
sub
dec
pop
mov
push
mov
mov
daa
je
leave
fistpl
mov
lret
fdivrp
ds
mov
cmp
mov
iret
subb
xchg
addr16
xchg
add
loopne
jnp
outsb
xlat
insb
sbb
jmp
fiaddl
outsl
imul
push
dec
sbb
mov
inc
sahf
jl
cmp
sbb
aas
mov
das
mov
jge
add
sub
push
stc
cmc
mov
lcall
mov
cli
mov
push
out
movsb
loope
mov
mov
mov
inc
cli
and
nop
add
dec
iret
mov
xor
pop
outsb
mov
xchg
rol
jl
pop
mov
jl
xor
scas
dec
test
push
mov
cmp
mov
add
sub
dec
cmpl
sub
rol
dec
sub
add
dec
test
pop
cmp
shlb
mov
xor
in
ret
lods
mov
addb
test
int3
cltd
jns
aaa
clc
cmpsb
jecxz
pop
xor
push
sub
call
push
mov
dec
sub
adc
int
fwait
sub
repz
or
or
cltd
dec
ficoms
jmp
hlt
mov
lods
add
or
sbb
sub
test
cmp
es
stc
nop
adc
sub
loop
imul
mov
xor
push
out
iret
fwait
int3
xchg
mov
inc
inc
or
pop
clc
adcl
mov
and
ljmp
dec
xchg
mov
jbe
call
add
adc
fstps
out
insl
and
out
xor
mov
clc
js
in
test
sbb
scas
push
xlat
test
push
cmp
inc
lock
jnp
pop
cmp
pop
scas
hlt
stc
pop
dec
subb
add
dec
jecxz
aaa
pop
in
inc
roll
sbb
mov
shl
inc
dec
jmp
rep
add
lahf
add
pop
xchg
pop
cmpsb
mov
mov
mov
mov
out
lahf
mov
xcrypt-cbc
cmpsl
fsubp
push
jge
xchg
mov
push
jg
ret
mov
xchg
push
cwtl
dec
jecxz
negb
aas
inc
fwait
cmp
xchg
and
cmp
pop
mov
scas
cli
xchg
push
adc
ret
add
repnz
adcl
sub
mov
xchg
adc
fmul
xchg
cmp
xchg
mov
scas
sbb
push
fidivrl
lods
push
xchg
sub
arpl
jle
in
arpl
rolb
ss
add
clc
mov
ror
outsb
cmpsb
daa
sbb
das
jl
add
add
pop
in
xchg
in
jge
xchg
negb
stos
rolb
sti
ljmp
mov
push
xlat
fwait
fwait
fwait
dec
mov
out
pop
shrl
inc
adc
inc
add
daa
pop
sbb
inc
adc
test
mov
lret
push
fistpl
or
jp
arpl
xor
xlat
repnz
repz
pop
rcl
test
pusha
test
mov
dec
rorb
jnp
fildl
cmp
aam
jg
sbb
into
sbb
orl
sti
aaa
jmp
sub
cmpb
or
ss
xchg
cmp
inc
jmp
sahf
mov
adc
popa
shrl
xor
cmpsl
mov
cld
stos
dec
add
sbb
sub
call
and
inc
xchg
lock
xchg
dec
pop
shrl
outsl
test
dec
pop
mov
jmp
or
popf
lret
jae
push
mov
xchg
or
hlt
daa
add
push
stos
xchg
in
sar
mov
es
insb
xchg
test
mov
mov
loopne
mov
ficompl
scas
sub
sbb
stos
into
fbstp
pop
mov
mov
enter
cs
fisttps
test
pop
jge
addl
aad
outsb
int
mov
jnp
fisubrs
adc
jns
insb
sub
dec
jl
pushl
fcoms
or
sbb
fnstsw
pop
or
xchg
push
int3
jge
inc
xor
xor
pop
push
lahf
cld
dec
lcall
aaa
xchg
daa
dec
push
jl
in
dec
pusha
std
sub
add
inc
ret
insb
xor
jle
jno
pop
test
bound
hlt
adc
jo
cmp
mov
outsb
call
dec
pushf
jge
repz
popf
xchg
jmp
aam
sub
jmp
sbb
leave
add
dec
pop
aad
adc
pop
mov
mov
mov
mov
fstl
mov
loope
fisttpll
sub
push
add
in
cmpsb
movsl
or
fcomps
stos
enter
mov
in
in
fisubl
or
aaa
ret
inc
sbb
dec
icebp
mov
push
push
jg
sub
fdivrs
xor
pusha
into
std
xor
popf
cld
adc
mov
loope
sti
dec
xchg
push
pusha
jecxz
jmp
mov
fcmove
xor
out
mov
dec
lods
pop
push
jl
daa
repnz
mov
xchg
js
fmull
popf
movsl
in
mov
insl
jnp
inc
push
adcl
pop
xor
mov
and
dec
jns
dec
fists
and
test
and
out
mov
sub
sub
push
adc
jge
out
ja
popa
pop
jo
popw
sar
lea
inc
mov
nop
inc
xor
mov
push
mov
mov
mov
sub
lea
dec
shll
pop
and
push
jp
dec
nop
mov
cmp
mov
les
loope
cmpsb
cmp
leave
push
les
mov
xlat
pop
mov
mov
in
pop
dec
outsl
popf
inc
sbb
push
pop
mov
dec
pop
pop
adc
out
and
popa
cmpsl
jb
cmp
popa
sub
mov
vpshufd
fcmovu
std
jge
shlb
mov
lods
pop
mov
xchg
ss
and
aad
mov
rclb
jl
cli
xor
pop
mov
mov
inc
sbb
les
fstpt
sbb
outsl
sub
lock
push
scas
add
psrld
dec
pop
pop
jp
mov
push
js
movsl
mov
mov
or
cmc
enter
lods
dec
ficoml
xchg
ret
pop
jecxz
arpl
mov
xor
jg
jmp
or
das
repnz
daa
addr16
in
mov
cmpsb
xor
mov
rclb
adc
xchg
fdivl
mov
jae
push
add
loop
adc
xchg
sbb
cmp
or
sub
sbb
pop
jg
hlt
ret
ds
ds
imul
lods
sbb
push
ret
shll
sub
and
push
inc
loop
lcall
scas
nop
neg
mov
jnp
jmp
and
fsub
flds
pop
xchg
leave
cmp
rol
add
xchg
push
ficoms
iret
push
push
add
dec
lds
push
test
sub
sub
or
test
sbb
pmulhw
xchg
bound
pop
mov
sti
pop
pop
jle
cmp
inc
inc
push
dec
pushf
int
mov
stc
popa
jae
add
push
adc
dec
das
and
mov
stos
out
mov
leave
and
lods
inc
in
add
adc
mov
shlb
dec
or
fisubrs
and
out
xor
repz
xchg
shlb
dec
pop
cmp
cltd
pop
sarl
push
jg
pop
xorb
adc
js
jmp
test
cli
rorb
xor
loopne
cld
mov
cmp
push
xchg
loope
adc
push
iret
data16
cmpsl
inc
outsb
inc
aad
cmp
xor
fsubrs
pop
or
daa
repz
jmp
gs
jb
or
mov
rclb
rclb
push
cmp
dec
test
dec
fstpt
cmpsb
push
push
addl
scas
pop
jmp
add
xchg
xchg
fcomp
sbbb
test
push
aam
xor
mov
rol
push
ret
add
and
addb
and
loop
pop
loope
lret
test
push
adc
push
shll
and
outsl
popa
mov
fwait
fwait
xchg
sub
sbb
test
in
cmp
xchg
call
and
aas
repnz
out
mov
arpl
inc
fdivrl
std
xorl
pop
stos
mov
xor
movsl
mov
pop
cli
out
mov
ret
jp
pop
sub
popf
dec
in
dec
jge
lret
and
leave
jle
lret
push
push
push
andl
fsts
hlt
mov
loope
and
sbb
pop
xchg
loop
xchg
jbe
mov
cmp
fcmovbe
loop
fldl
es
xor
xchg
outsb
sarb
push
mov
iret
ds
dec
addl
sbb
sub
cmp
cmp
daa
xchg
addb
incb
mov
xor
mov
jno
xchg
in
mov
push
mov
mov
loop
mov
cmc
fisttpl
in
adc
sbbl
insl
sti
sahf
cmp
divl
sbb
inc
cmp
push
xchg
outsb
imul
in
std
push
adc
std
lret
out
inc
stos
push
fmuls
out
sti
jge
pop
sub
in
or
sub
stos
sbb
mov
roll
psubsw
push
popa
dec
mov
or
addr16
sar
rolb
push
sbb
call
repz
xor
jle
ja
scas
aas
movl
add
sub
cli
lea
lds
ds
pop
mov
mov
nop
mov
jle
sub
call
mov
adc
call
daa
lret
jg
testl
xor
ret
or
push
lods
rdmsr
stos
ja
inc
mov
jmp
fnstcw
and
mov
sti
cwtl
pop
mov
cld
test
jle
in
gs
ret
aam
fistps
lds
adc
and
cwtl
in
push
mov
push
mov
push
inc
mov
sub
push
shll
adc
xor
add
cmp
mov
in
push
ds
inc
mov
inc
dec
cmpsb
shll
icebp
popa
adc
push
fsubs
popf
xchg
mov
jb
daa
divb
loopne
pusha
mov
in
and
ficoms
xchg
fldt
and
adc
adc
cmp
sub
outsl
sbbb
sub
js
push
sbb
adc
adc
xchg
sub
lods
xchg
mov
xchg
lods
aad
in
mov
cmp
ja
movsl
cmp
dec
aad
icebp
push
cli
ljmp
mov
sbb
idivb
push
jnp
movsb
sub
iret
sbb
out
adc
enter
cltd
add
xor
mov
mov
enter
sbb
sub
mov
clc
jo
xor
dec
fcmovne
imul
push
loopne
cltd
dec
dec
repz
and
jp
insl
cmp
or
es
sub
subl
xor
adc
jbe
sahf
push
shrb
mov
jecxz
adc
js
dec
in
add
hlt
jns
fstl
jnp
xlat
mov
ret
pop
add
mov
dec
gs
popf
insb
aaa
imul
lahf
sbb
xchg
or
movsb
dec
out
jle
daa
in
and
add
leave
adc
push
add
cmp
mov
sub
pop
icebp
lret
lret
decl
into
adcl
push
dec
out
in
cld
mov
sahf
xchg
jmp
rcrl
ficoml
daa
rcr
pop
jg
push
loop
dec
fimuls
push
adc
lock
add
push
add
cli
leave
pushf
out
jg
mov
add
int
sti
insb
adc
lcall
movsl
ljmp
jae
cmp
stos
fsub
xor
cmp
xchg
fidivs
lret
and
movsl
ficomps
sbb
sub
add
sub
or
ss
xchg
jae
inc
mov
aam
jne
sbb
loopne
push
iret
or
jmp
stc
loop
stos
adc
push
xor
invd
mov
jae
xlat
ss
xchg
aad
mov
and
test
adc
lea
fcomps
xor
pop
mov
outsl
sbb
std
es
xchg
shlb
and
jo
loop
int3
out
jb
jge
pop
cwtl
push
ds
mov
ficoml
popa
inc
add
jge
jne
mov
pop
sub
mov
sub
inc
outsb
shl
or
mov
pop
push
pushf
aaa
es
pusha
jg
mov
or
insl
jmp
and
mov
out
ret
mov
cmp
lea
outsb
insl
sub
popa
push
leave
shlw
xor
cmp
sar
xor
mov
dec
movsb
fimull
enter
or
xor
into
mov
mov
data16
adc
xor
mov
lea
out
imull
bound
xor
fnstsw
jae
push
jae
sub
inc
sub
popa
and
push
mov
insb
gs
cs
sub
fscale
adc
cltd
add
popa
divb
repnz
andl
adc
adc
stc
cmpsb
clc
pop
out
pop
or
push
punpcklwd
das
js
leave
push
or
push
sbb
jno
adcb
and
out
adc
or
mov
lds
test
stc
jmp
mov
mov
xor
mov
std
cmp
sub
test
mov
das
mov
jno
pop
jo
cld
mov
loope
inc
call
adc
orb
sbb
mov
ret
pop
hlt
jmp
mov
mov
pop
or
xor
mov
pop
test
ret
inc
les
sbb
mov
fidivl
ret
outsb
xchg
mov
sbb
lods
jg
xor
sub
bound
jg
cld
push
ret
popa
ss
testl
int3
fsubrl
pop
push
das
jno
rorb
jl
dec
cmovp
jb
or
xchg
or
in
xlat
lret
mov
add
jmp
shlb
jge
idivb
mov
loopne
les
ret
cli
add
mov
push
insl
mov
loope
out
sti
pop
pushf
mov
mov
mov
push
mov
sahf
or
rolb
cmp
mov
lds
mov
xor
fsubr
push
dec
jecxz
mov
cltd
pop
and
shll
sub
jmp
movsb
fs
mov
mov
jbe
and
movsb
mov
test
stc
lock
sbb
cmpb
mov
lock
lods
xor
rcll
jg
xor
dec
xor
fwait
daa
xlat
inc
not
push
inc
out
es
xor
imul
outsl
mov
add
push
or
or
insl
mov
mov
push
aas
push
dec
push
mov
adc
add
mov
enter
add
fiadds
mov
lods
xchg
shrb
push
cmp
cmp
pop
jle
popf
xlat
hlt
xchg
pop
fadds
cmp
inc
fists
ret
xorb
push
adc
inc
loop
sub
dec
int3
or
clc
mov
xor
jb
mov
mov
ffree
ror
repnz
jmp
lods
xchg
ljmp
and
xor
jl
mov
dec
cmc
fyl2xp1
cmpsl
jno
xchg
test
dec
dec
jo
jmp
push
fsubs
sbb
xchg
aaa
jle
adc
lea
ror
das
repz
push
jle
aaa
insl
pop
sti
jns
shll
lea
cmp
mov
pushf
jne
ret
inc
cmp
adc
xor
jbe
lds
adc
dec
push
sbb
fwait
es
cmp
sbbb
insb
xlat
and
dec
iret
jg
lock
test
cmp
in
enter
or
or
sbb
int3
mov
inc
jae
rcr
in
cltd
xor
sub
xlat
inc
cmpsl
pop
and
pop
dec
shl
rcll
dec
movsb
mov
and
in
adc
or
fadd
rorb
add
adc
mov
lods
out
popf
jae
stc
loop
pushf
add
ljmp
jbe
mov
repnz
jb
xchg
fistl
movsb
pop
and
aas
out
mov
xlat
xchg
ljmp
pop
xchg
bound
jb
stos
push
testb
mov
cmp
cmc
pushf
inc
pop
mov
mov
movsl
and
sahf
loop
push
call
daa
out
cmc
push
js
aad
movsb
pop
sbb
mov
jecxz
fcoml
xchg
dec
xor
mov
pop
mov
movsb
mov
ret
push
js
jle
push
out
sbb
aaa
shrb
mov
jae
fcmovnbe
xchg
aam
jp
dec
inc
rcl
ds
in
faddp
hlt
xchg
jno
xor
out
ds
ficomps
and
add
icebp
rcrl
popa
cli
les
mov
and
arpl
jp
jnp
xchg
jae
imul
sbb
lock
in
fs
pop
add
int3
jl
ret
jge
in
cs
imul
push
xor
push
sarl
call
faddl
sbb
dec
cld
mov
mov
pop
icebp
loope
mov
sbb
pusha
add
repnz
jg
ret
rcl
arpl
pop
or
int
adc
enter
jecxz
clc
adc
push
sub
add
cwtl
aad
lods
and
pop
cmp
rclb
mov
negb
arpl
clc
push
mov
push
shlb
lds
pop
jns
lret
jle
push
mov
ret
ss
sub
jg
mov
lret
les
dec
leave
sub
inc
loope
aam
cmp
outsl
dec
jmp
leave
add
push
out
gs
aaa
pop
pop
repnz
inc
pop
jo
stos
mov
mov
dec
gs
jl
jb
in
int3
std
lods
sbb
xchg
mov
sbb
psubsw
mov
mov
dec
mov
mov
pop
sub
mov
ret
shlb
bound
daa
push
ljmp
inc
std
test
lahf
test
das
int
imul
pop
pusha
or
mov
mov
mov
ja
fwait
sbb
inc
gs
pop
lret
inc
push
mov
aad
push
es
cmp
in
shr
jb
cmp
into
lods
lods
std
cmp
pop
push
pop
jl
push
lea
pop
subb
mov
lock
ds
pop
fnstenv
mov
andl
enter
xor
cltd
imul
ja
stos
mov
jmp
cmc
scas
mov
cmpsb
lret
lret
pop
mov
je
iret
or
sar
insb
sahf
or
adc
sbb
mov
gs
pop
mov
sub
fsubl
fists
push
stc
pop
fisubl
jb
mov
mov
ror
xor
fsubrs
dec
rolb
push
pop
das
inc
bound
inc
and
add
addb
xchg
clc
push
and
mov
mov
xchg
mov
clc
ds
fidivrs
mov
and
ss
jo
xchg
adc
push
jo
movsl
ja
jmp
jge
push
sub
inc
pushf
pop
jae
es
es
outsl
loope
mov
adc
stos
push
pop
loop
cmc
popf
aad
fstpl
clc
add
sbb
push
or
imul
cmc
cmp
movsl
cmc
dec
mov
dec
sub
call
popa
adc
sub
push
xlat
or
xorl
sti
sbb
jo
decb
fwait
mov
fidivl
dec
test
xor
sbb
jl
sbb
lods
lea
aaa
bound
push
outsl
mov
decl
sub
sub
jp
or
shll
sarb
pop
mov
inc
aad
movb
cli
mov
xchg
pop
pop
cld
sar
adc
fisttpll
lahf
add
fimull
sub
cltd
xchg
pop
pushw
push
xchg
inc
in
addl
push
or
mov
dec
pop
inc
or
pop
sub
xor
sbb
cmp
inc
hlt
ficomps
pop
outsl
sub
cld
sbb
flds
push
sub
cmp
popa
lret
xchg
adc
cld
sub
push
jb
loope
push
push
xchg
pop
jp
loope
fidivrs
push
lock
or
lahf
out
stos
adc
std
fs
movl
test
rolb
out
in
dec
xor
hlt
ret
sub
jb
orl
roll
xor
stos
lods
jbe
test
jge
mov
inc
cmp
mov
dec
inc
jp
iret
push
adc
adc
jae
inc
enter
outsb
js
call
mov
add
gs
xor
lock
fisttps
inc
jne
lret
fdivrl
es
jo
cmp
xchg
mov
sbb
mov
pop
sub
mov
rcll
or
sbb
add
std
sub
jge
jns
jae
jge
cmpsl
mov
sub
cwtl
inc
jnp
cmpsl
nop
and
repnz
xlat
sub
outsl
cmp
ljmp
insb
xor
add
xchg
clc
mov
in
sbbb
mov
fildll
addr16
iret
nop
inc
mov
xchg
in
mov
lds
aaa
push
and
nopl
in
aas
adc
repz
out
cmp
mov
xor
test
inc
cmp
mov
ds
and
mov
inc
adc
iret
mov
ret
pop
adc
mov
add
cltd
mov
aad
pusha
cs
xchg
xor
push
add
xchg
out
dec
mov
sbb
jnp
cmp
and
jae
inc
mul
aaa
sti
imul
inc
mov
push
test
fcom
test
sbb
int3
aas
or
rol
in
xchg
xorb
jecxz
fistpll
add
pop
xchg
aam
cmpsl
sub
sub
aam
test
popf
pop
pop
loope
push
and
adcl
icebp
cmpb
push
cwtl
movsl
addr16
jmp
lahf
lcall
outsl
in
dec
mov
pop
pop
pop
es
and
inc
iret
push
gs
jb
jnp
push
sbb
push
insb
scas
sti
jmp
xor
cmp
sbb
call
add
jo
dec
push
xor
movsb
or
es
lcall
xchg
inc
sbb
jmp
fsub
mov
and
insl
and
push
or
adc
loopne
mov
test
xor
jbe
jnp
jp
rorb
subb
stc
inc
ds
pop
sub
sub
scas
push
adc
ja
xor
and
and
sbb
pop
xchg
jae
jns
imul
cmp
sbb
mov
pop
adc
lret
jg
sbb
push
push
or
jecxz
mov
lcall
and
pop
movsb
mov
mov
mov
lret
mov
pop
mov
add
dec
jb
icebp
pop
jg
dec
fcmove
dec
mov
mov
scas
vpsrlw
movsl
jne
in
insb
mov
shll
jp
ret
fmuls
scas
pushf
mov
in
add
dec
adc
pop
and
test
push
movsl
mov
cmc
xchg
inc
push
mov
dec
or
insl
in
icebp
xchg
ja
push
adc
sbb
rcr
inc
mov
mull
loop
ljmp
out
sbb
xor
add
adc
mov
out
mov
sub
addr16
mov
sub
adc
pop
out
insl
lret
ret
daa
push
jg
into
repnz
adc
mov
pop
push
ljmp
mov
jle
cmpsb
popa
mov
test
jo
ljmp
test
mov
xor
movsl
adc
movsl
mov
sbb
push
sbb
xor
mov
mov
xchg
jmp
mov
inc
dec
ret
pop
idivb
mov
xchg
das
dec
insl
cmpsl
mov
or
fsubs
xor
sub
jl
ljmp
dec
jp
xchg
int
aas
cltd
and
and
lcall
jno
icebp
ret
imul
pop
add
in
das
or
popa
cltd
mov
insl
stc
ja
outsl
test
sub
xor
aad
std
rol
push
in
xor
xchg
cmp
lds
fisubs
rcll
xor
int
push
scas
iret
push
add
push
int3
pop
push
mov
inc
dec
sbb
and
push
lret
gs
lods
cs
push
clc
int
test
pop
or
dec
int3
jge
in
pop
pusha
fwait
push
movsb
dec
and
push
push
jmp
ret
push
mov
sahf
jo
xor
fiaddl
jbe
pushf
or
data16
xor
mov
mov
in
imul
adcl
inc
mov
stc
pop
mov
call
or
jmp
cli
mov
fdivrs
or
fcoml
push
jecxz
sub
out
movsb
push
pop
jb
repz
es
sbb
pop
xchg
ficompl
movsl
inc
mov
fsubs
mov
jl
mov
nop
daa
mov
fists
xchg
lret
lret
fisubrs
push
pop
mov
lods
push
leave
popf
roll
inc
xchg
jo
arpl
repz
int
lahf
sub
cmpb
pop
shlb
movsb
jb
adc
mov
popa
pop
add
cli
test
into
rorl
out
inc
or
addr16
movsl
inc
lcall
jg
mov
fiaddl
adc
mov
xchg
orb
iret
nop
int
cmpl
xor
add
clc
pop
lret
jge
ret
add
test
addl
mov
cltd
loope
loopne
leave
jecxz
scas
inc
ja
loop
aaa
push
outsb
negb
pop
push
mov
push
add
add
mov
js
pop
adc
lahf
xor
pop
subb
or
leave
dec
cmpsl
lock
mov
or
inc
lds
outsl
and
xchg
xchg
mov
fidivs
icebp
add
mov
xlat
loope
enter
icebp
hlt
push
jae
cmc
jne
loope
pop
xchg
adc
xor
add
push
inc
fsubl
cld
aaa
lcall
sti
mov
in
fidivs
xor
adc
sub
cld
inc
daa
sub
aam
mov
data16
daa
xor
repz
imull
mov
pop
dec
sbb
lds
mov
cmp
dec
push
hlt
mov
push
ret
push
sbb
gs
lahf
xchg
hlt
pop
xor
push
ja
repz
lret
add
jge
inc
and
daa
mov
adc
xorl
enter
loop
jne
xchg
mov
add
imul
jno
sub
and
inc
push
mov
insl
ret
idivl
or
adc
call
mov
test
je
push
popa
fiadds
mov
stos
into
mov
cmp
xor
test
imul
mov
and
test
jo
inc
push
or
lods
ljmp
testl
mov
jmp
push
ret
push
clc
outsl
pop
dec
mov
and
pop
and
xor
cmp
in
push
cmpsb
lods
rolb
ret
stc
push
ja
call
sbb
repnz
cld
push
imul
sub
insl
mov
mov
adc
pop
jg
pop
xchg
dec
cltd
inc
push
aas
in
sahf
xchg
mov
adc
dec
push
dec
mov
jecxz
test
into
icebp
sbb
pop
test
daa
mov
cmp
test
adcb
jns
add
dec
movsl
pop
insb
adc
xchg
daa
pusha
js
les
add
and
push
jo
repnz
xchg
jle
xor
mov
inc
loop
jg
arpl
mov
or
out
adc
cltd
stos
mov
fdiv
cltd
inc
daa
int3
lock
pop
add
sub
cltd
mov
xor
add
push
stos
les
xchg
mov
in
jge
lcall
out
mov
cmpsb
mov
cmp
sub
mov
push
mov
int
jmp
jp
cmc
std
mov
pop
cmpsl
lea
repz
inc
jne
inc
adc
pop
xor
inc
insl
adc
xor
adc
loope
cs
daa
jle
mov
sbb
mov
push
imul
push
mov
imul
xorb
mov
cmpsl
jbe
mov
mov
mov
sbb
clc
jecxz
mov
pushf
cmp
bnd
mov
mov
jp
jmp
fdivrs
testl
repz
mov
jl
fxch
or
test
dec
fsub
push
adc
lea
pop
add
jmp
mov
sbb
loope
sbb
jno
insl
popa
sbb
push
mov
les
jp
jecxz
or
bound
aaa
iret
es
push
loopne
mov
add
cmc
adc
int
push
push
fsubl
jno
adc
pop
jae
jae
push
mov
mov
shrb
add
into
and
xor
and
ret
nop
mov
fistps
stos
xchg
loop
cli
or
les
test
sub
jbe
add
jbe
lods
xor
out
pop
xchg
shl
jl
xchg
xor
loopne
test
xor
cltd
xlat
push
sub
popf
test
mov
imul
pop
pop
dec
daa
inc
pop
mov
mov
out
ja
or
cli
int
xchg
ret
push
mov
mov
mov
ds
rclb
xor
pusha
mov
add
jb
inc
dec
adc
es
xor
add
es
aaa
cmp
rorb
sub
mov
lock
outsl
push
rorb
or
outsl
sti
xor
arpl
shl
pop
les
adc
loop
dec
int3
push
lahf
rcrb
movsb
jl
push
imul
inc
adc
mov
ror
add
adc
push
and
cwtl
pusha
pop
and
movsl
cs
jae
cmpsb
sub
call
mov
or
dec
xchg
push
mov
jb
nop
sub
fldt
push
pop
pop
add
jp
sub
mov
xchg
dec
push
imul
xor
jne
push
out
lds
adc
out
xlat
mov
mov
rcr
pop
xor
out
sbb
jns
icebp
jne
outsl
cmp
cmc
gs
loop
mov
mov
push
lds
mov
cmp
ja
add
lret
inc
inc
stos
xchg
dec
jmp
je,pn
or
rorl
gs
mov
add
fsubrs
lods
jns
sub
jno
add
lods
pop
popa
pop
stc
test
mov
adc
ds
dec
stos
int3
stc
scas
lret
and
mov
lret
lods
ret
imul
dec
in
pop
aad
mov
fadds
imul
lret
sub
push
mov
mov
mov
lods
push
pop
cmp
add
jl
cmp
cltd
and
xor
call
xchg
sub
mov
mov
mov
jge
lea
popa
jnp
sub
dec
test
jae
mov
mov
xchg
pop
test
cld
jo
xchg
jb
sti
sbb
cmp
aam
adc
xchg
push
mov
add
sub
mov
je
push
xchg
es
popa
ficoml
or
push
sub
jmp
inc
aaa
ljmp
cmp
dec
mov
ja
jge
add
je
notl
mov
ljmp
mov
or
cmp
cmc
jnp
add
cld
add
dec
out
daa
dec
or
jmp
in
int
rclb
mov
fucomi
imul
mov
mov
mov
ficomps
adc
cwtl
pop
cmp
push
pop
mov
cmpb
popf
mov
pushf
push
push
js
add
push
add
jbe
inc
cmp
xchg
push
cmpsb
lcall
aam
add
out
fmull
push
insl
aam
mov
shl
or
sahf
xchg
insl
jmp
xchg
dec
xchg
mov
sbb
in
dec
sbb
mov
lods
xor
scas
dec
jg
lahf
test
push
and
ret
lea
fs
adc
sub
out
and
sbb
idivb
neg
sub
imul
mov
xchg
outsl
pop
pop
adcl
std
ret
inc
pop
in
or
mov
andb
nop
cmc
lock
jns
insl
pop
mov
jo
testb
adc
lcall
out
imul
sarl
pop
add
push
inc
aas
clc
call
cmp
jle
cmp
das
test
add
and
inc
jb
dec
jb
shll
jg
hlt
cld
aam
int3
sbb
and
xchg
rolb
cmpsl
push
ret
gs
jo
test
js
jle
and
push
inc
clc
cmp
rclb
outsb
fs
mov
ret
cld
jns,pt
cmpsb
sbb
mov
setp
xchg
jae
push
xor
into
and
fstpl
add
dec
mov
xor
bswap
dec
outsl
and
leave
pop
test
mov
add
js
and
stos
mov
adc
mov
xchg
rcll
movsl
imul
push
dec
bsf
mov
out
jle
adc
xchg
lods
mov
nop
imul
push
pop
gs
ss
mov
and
xchg
scas
movsl
mov
out
mov
sti
or
inc
int3
sub
addb
jne
stos
jnp
ljmp
les
ss
push
loope
into
jecxz
xchg
fdivrs
xor
pop
or
sti
adc
xor
int3
push
fistpl
adc
add
or
lock
call
fcomps
test
mov
push
sahf
cmp
pop
ljmp
call
nop
dec
push
fidivrs
cmc
pop
fists
cmp
lods
stos
push
insb
mov
enter
jg
imul
popf
lret
adc
cli
push
shll
outsb
sti
mov
cmp
in
inc
leave
test
mov
clc
xlat
sahf
sub
push
scas
xor
jecxz
cltd
pop
ja
cmc
imul
orb
nop
pop
sub
cmpl
sub
outsb
fs
adc
xchg
mov
xor
js
in
cld
mov
and
jae
fst
daa
jg
shrl
sub
es
je
mov
xchg
fs
mov
pop
and
sti
jp
jnp
add
scas
inc
sub
iret
cmpsl
mov
jle
mov
xor
aaa
jp
inc
mov
push
jns
xor
mov
and
lret
jno
mov
and
inc
mov
popf
dec
sahf
movsl
adc
aam
es
and
notl
shlb
loopne
add
inc
xchg
das
push
ret
sub
or
inc
leave
sti
out
cmp
es
dec
lds
xchg
in
lods
shll
xor
in
pop
or
fildl
outsl
out
and
sub
dec
into
mov
xchg
cmp
notl
push
mov
jg
jae
mov
aas
in
mov
lret
dec
jmp
jne
ds
lock
or
inc
enter
faddl
inc
nop
mov
xor
popf
mov
ss
sub
into
xchg
ja
sub
or
outsb
or
push
es
mov
scas
shr
xchg
xchg
push
nop
xor
jl
sbb
lock
jecxz
xchg
mov
push
xchg
ret
mov
int
inc
mov
push
rorb
mov
in
shll
shl
cmpsb
clc
std
stos
xor
fildl
lea
pop
clc
pop
fld
scas
aaa
and
pop
loopne
xchg
packssdw
int
jno
cmpsb
dec
jl
in
pop
mov
aaa
ss
or
sti
xor
push
inc
sbb
push
sbb
repnz
js
daa
lret
loop
add
dec
decb
inc
cmc
lret
sbb
dec
fistps
cmp
pop
jmp
test
jecxz
and
movsb
push
ret
jp
mov
js
loope
sbb
add
add
mov
and
sbb
push
xchg
int3
pop
mov
pop
outsb
or
inc
addr16
fists
fistpl
pushl
cli
es
adc
hlt
test
jle
out
bound
inc
icebp
dec
pop
adcl
add
dec
jo
or
lea
int
loope
mov
iret
aaa
into
xchg
shrl
mov
jae
popa
sti
jmp
rolb
je
mov
and
imul
cld
pop
fisubs
repz
add
xchg
into
enter
frstor
cmp
jle
inc
push
imul
mov
mov
ja
jp
insl
jle
xor
flds
bound
add
addr16
adc
dec
pop
sub
stos
mov
adc
hlt
inc
push
and
mov
popa
jmp
bound
insl
repz
insl
adc
lcall
dec
mov
cmp
inc
lods
mov
jmp
pop
sbb
test
xor
pop
inc
loopne
clc
push
in
fs
add
mov
cli
mov
xchg
fbstp
sbb
leave
jne
and
mov
mov
outsl
stc
notb
lods
push
outsl
wrmsr
dec
jnp
xor
xor
cmc
or
imul
aad
mov
jbe
dec
call
pop
sbb
cwtl
inc
loop
sbb
mov
jae
adc
das
jge
or
daa
adc
mov
jb
push
jp
cmpsl
cmp
frstor
add
and
imul
es
mov
mov
or
cld
dec
pop
or
fisubl
push
xchg
cmp
cmp
stos
lock
xchg
mov
dec
jle
mov
cmp
push
es
fs
negb
pop
mov
test
daa
and
cmp
idiv
adc
jp
mov
push
mov
xlat
rcr
out
or
push
jae
scas
push
fists
popf
pop
loope
jnp
idivl
scas
int3
ds
fs
mov
mov
gs
mov
pusha
fisttps
stos
adc
inc
mov
daa
and
out
pushl
pop
stos
jmp
xchg
cmc
adcl
push
xor
negb
inc
dec
negb
xor
xchg
leave
dec
mov
fldt
test
jb
mov
addr16
adc
or
sub
mov
or
dec
pop
cltd
push
es
mov
mov
mov
adc
aas
call
adc
pop
sub
inc
not
ljmp
xchg
mov
cmp
pop
lret
sbb
push
test
jp
push
call
adc
mov
jo
mov
push
ret
into
fisubs
inc
xor
fnsave
sbb
xchg
jb
fbstp
test
jmp
jae
ds
xchg
jns
aad
push
lahf
stc
test
mov
sahf
xchg
loop
pop
xchg
xlat
push
cmpsl
fsubrl
repnz
mov
fnstsw
negb
imul
xlat
inc
xchg
mov
fcompl
test
mov
cmp
cmp
add
loopne
scas
repz
scas
fldenv
sar
sub
cmp
mov
data16
jbe
and
sarl
add
ja
test
lea
adc
popl
adc
pop
jmp
sti
lds
add
loopne,pn
pop
inc
lcall
lfs
mov
lds
or
mov
cmp
sub
into
std
pop
jne
pop
pop
cwtl
out
fs
rorl
popf
mov
xchg
lock
cs
test
mov
dec
mov
jmp
aad
shll
out
xlat
iret
je
push
pop
arpl
popf
xor
clc
divb
inc
fs
and
leave
push
adc
inc
pop
mov
fsts
test
fmuls
jns
mov
lahf
je
call
push
movsl
pop
out
outsl
popf
movsb
cwtl
dec
or
mov
daa
cmp
std
adc
and
pop
xor
adc
dec
pop
dec
aad
mov
aaa
cld
sub
mov
mov
inc
js
inc
sbb
inc
ret
pop
mov
adc
push
imulb
dec
push
notl
or
mov
ja
cmp
and
jp
jecxz
cwtl
out
mov
xor
or
cmp
sti
cmp
mov
arpl
or
in
fwait
adc
pop
mov
pop
mov
jp
clc
clc
sub
scas
out
testb
sbb
push
fnstenv
pop
mov
jne
pop
pop
test
fdivs
popf
mov
lock
stos
mov
sar
xchg
xchg
sub
mov
es
jl
sbb
inc
pop
adc
xor
mov
add
outsl
xchg
imul
xor
aaa
jecxz
dec
inc
xor
xor
add
and
mov
ja
lods
cmp
adc
dec
sbb
insb
push
mov
cmp
cmpsl
and
push
in
xchg
setns
shlb
or
cli
cli
loop
fldcw
or
jecxz
loope
jle
push
pop
subl
call
sbb
or
xor
add
or
sbb
push
sub
or
mov
lods
xchg
dec
shll
push
fildl
inc
sbb
jnp
pop
repz
mov
inc
repnz
int
pop
dec
out
cli
sub
push
imul
or
cmpsb
test
push
sub
mov
divb
add
push
dec
sub
mov
sbb
lds
cli
cmp
repz
mov
mov
xorl
sbb
imul
push
or
push
xchg
mov
js
cmp
rcll
adc
ret
dec
lahf
ret
mov
push
fmuls
and
mov
add
mov
mov
scas
das
dec
inc
out
fwait
int
cli
test
jo
cli
xor
sub
xor
xchg
jnp
roll
jns
cwtl
push
popa
mov
fbstp
push
sbbl
imull
movl
nop
lret
lcall
jg
jns
jae
mov
mov
rorl
sub
sub
jns
lods
xor
ret
xor
sub
push
ret
cmc
cmp
orl
daa
imul
push
insb
and
or
xor
jecxz
and
mov
mov
sbb
push
mov
mov
loop
cltd
add
mov
xlat
test
adc
push
pushf
das
out
cmp
mov
push
out
out
pushf
lock
pop
jp
lods
push
sub
sub
aam
lahf
imul
test
inc
shrl
fdivp
das
push
jo
outsl
loop
cmpsl
leave
xor
dec
add
dec
cs
pop
add
lods
or
int3
pop
std
jl
scas
add
aaa
adc
inc
les
mov
dec
jge
jmp
or
mov
divl
paddsw
dec
lods
lods
xchg
adc
in
lock
lret
sbb
outsl
clc
xor
jle
int3
adc
xchg
push
les
lods
cmpsl
or
daa
adcl
repz
test
icebp
sti
fmuls
stc
rcll
cwtl
shl
loop
test
inc
rorl
or
mov
fwait
mov
shll
out
testl
mov
mov
fldl
push
sbb
addr16
cld
sbb
pop
and
add
stc
das
push
test
jle
mov
into
and
dec
dec
add
cmc
xor
ljmp
xlat
loopne
sti
je
cwtl
or
in
aaa
mov
testl
icebp
or
shr
outsb
fldenv
fiadds
or
out
into
pop
jp
and
xchg
daa
inc
and
push
sub
push
in
xor
out
sbb
idivb
loope
sti
stc
sbbl
test
push
daa
cmp
clc
movsb
pop
cmc
imul
xchg
dec
hlt
lea
lock
add
mov
popf
mov
clc
addl
add
jo
and
outsb
dec
add
push
lahf
ret
roll
fimuls
orl
orl
add
sub
add
ret
push
stos
jp
jmp
es
xor
out
movsb
iret
sub
int
jae
push
insb
push
movsl
push
jne
ret
movsb
adc
push
inc
mov
sahf
js
add
sbb
xchg
xor
rclb
jp
sarl
sbb
sbb
lahf
lret
cmpb
adc
scas
cmp
dec
adc
mov
and
call
rep
imul
aam
dec
pop
lret
adc
cmp
dec
aad
jne
ret
or
push
xor
mov
out
outsb
mov
sbb
mov
sub
sub
icebp
fisttpl
xchg
mov
fidivrs
push
xchg
cmp
cmp
pop
xchg
test
jl
popa
add
xor
jbe
add
loopne
sbbl
or
int
xor
inc
aam
fidivl
cwtl
cmp
test
dec
ret
or
mov
pusha
lods
ficoml
mov
imul
mov
lcall
xchg
jnp
xchg
pop
fisubl
jb
adc
or
add
cmpsl
aam
push
data16
push
jg
jp
cld
sahf
les
or
lcall
repz
sahf
daa
adc
hlt
or
lahf
cmpsl
divl
mov
mov
cmpb
sub
into
ljmp
mov
ret
lds
sbb
das
in
or
in
jecxz
jne
push
aad
push
lods
popf
push
lods
xchg
xor
cmp
pushf
sbbl
mov
mov
cmpsl
fisttps
dec
cli
adc
add
push
std
std
fucomi
les
test
xor
push
jge
cmc
cmp
mov
add
jnp
dec
hlt
dec
push
cli
xchg
inc
aaa
test
mov
das
fcomps
es
or
mov
repz
xchg
sub
jg
inc
out
lock
into
test
pop
and
in
pop
xor
push
fsubrl
leave
mov
jno
fld
or
xchg
jecxz
les
fimull
adc
test
or
add
daa
out
cmc
or
pop
int
iret
adc
scas
inc
dec
add
add
cli
mov
or
in
lret
xchg
mov
sbb
pushf
dec
rorb
xchg
push
push
call
jbe
adc
mov
pop
mov
mov
xlat
add
test
lock
leave
mov
bnd
pop
iret
scas
mov
gs
ficomps
and
mov
add
aas
stos
cmp
and
dec
imul
mov
xchg
adc
add
mov
cltd
lods
pushl
movsb
imul
mov
js
bound
jbe
sbb
sbb
sub
mov
push
jle
xchg
inc
sarl
lcall
add
or
mov
repz
add
pop
push
push
pop
xor
jle
sub
sub
cmpsb
iret
mov
mov
fdivrs
mov
lods
and
dec
cmp
ffree
sub
pop
mov
mov
sub
fbstp
mov
cmp
imul
xchg
loope
xchg
iret
cmpsl
jp
xchg
rcrl
data16
lods
rorl
push
pop
scas
loop
bound
insb
or
ds
aam
sub
push
or
es
jbe
push
int3
jo
inc
add
sar
fldl2e
mov
mov
in
or
xchg
cli
push
fistl
movsl
loopne
and
icebp
sub
push
test
pop
mov
ja
ror
aas
pop
mov
out
adc
add
mov
hlt
pop
xor
jns
pop
push
jmp
push
jl
jl
push
scas
pop
push
ficoml
pusha
out
movsl
andl
adc
in
popf
or
ljmp
sub
push
sbb
jb
mov
sub
jb
jae
mov
xor
mov
jbe
adcb
push
loop
jge
pop
xchg
and
sbb
cmp
insb
adc
dec
popf
inc
mov
and
je
psraw
lsl
fldenv
sti
mov
push
jg
dec
lret
leave
test
test
sub
cmp
and
lret
mov
sub
cmp
and
sub
adc
aas
nop
aam
dec
pop
cmp
cmp
movl
cmpsl
jp
adc
fbstp
outsb
inc
daa
dec
push
and
enter
out
gs
sbb
push
mov
pop
add
xor
xor
in
pop
lahf
cmpsl
pop
pop
xchg
mov
in
cmp
loopne
and
cmp
subl
loopne
jmp
pop
pop
inc
sbb
jae
jno
xlat
fs
rcrl
jmp
cmc
sub
inc
int
jmp
into
scas
loopne
int
mov
cltd
arpl
sbb
cmp
xchg
xchg
inc
mov
push
xor
outsl
push
mul
shrl
mov
je
fcmovb
mov
je
fidivrs
in
add
imul
in
repnz
mov
push
outsb
or
jb
sahf
sub
or
and
xor
dec
imull
pop
or
aam
cmpsb
dec
and
out
cmp
dec
or
pop
repz
pop
push
fwait
lods
test
gs
dec
sbb
pop
sub
cmp
je
jmp
ret
mov
cmp
cmp
sbb
sub
dec
push
cs
cmp
jo
jno
inc
faddl
ss
inc
jle
sub
inc
push
mov
mov
push
xorl
ljmp
mov
gs
push
mov
add
adc
scas
inc
out
or
sbbb
add
shll
fsubl
int
push
add
mov
loop
pop
jmp
int3
dec
js
mov
adc
jge
inc
inc
jle
dec
dec
out
scas
jecxz
sbb
and
mov
pusha
add
adc
andl
mov
add
cltd
sub
std
and
std
scas
and
out
push
mov
mov
fwait
loopne
adc
leave
test
mulb
ret
popf
cltd
ss
in
daa
mov
loop
sbb
xlat
xchg
xor
sbb
shl
and
sub
xor
xchg
add
stc
ja
fiadds
sub
xchg
aaa
ljmp
jmp
jle
mov
shll
and
and
fldt
mov
aam
loope
xlat
xchg
and
hlt
fsubp
aam
mov
push
out
xor
ret
not
stos
popa
frndint
outsb
pop
add
orb
push
or
movsl
fistpl
loope
or
mov
and
mov
stos
mov
push
mov
js,pn
jge
aad
pop
sbb
pop
sti
xor
add
jbe
cmpsl
cld
and
or
push
ss
pushf
jl
lret
jmp
jns
lds
mov
xchg
inc
add
ja
fwait
and
jnp
jne
sbb
or
and
in
sub
mov
push
int3
mov
movsl
test
test
dec
aam
pushf
popa
mov
aam
aaa
sbb
pop
pop
lcall
out
mov
out
pop
adc
std
jnp
inc
inc
adc
outsl
cmp
int
sub
xchg
fincstp
push
insb
das
sub
out
sar
fcoms
mov
dec
mov
inc
mov
scas
aad
test
and
test
sub
pop
pop
mov
addr16
in
inc
push
xchg
ffreep
icebp
cmp
dec
hlt
test
xchg
scas
xchg
cs
jns
xchg
hlt
ret
movsb
call
xchg
xor
cltd
and
and
repz
stos
clc
cld
insl
cmp
addr16
idiv
lods
icebp
xchg
lretw
jo
ss
sahf
and
popa
jecxz
not
pop
daa
sbb
subl
shll
mov
ret
fwait
or
and
lret
leave
dec
xor
xor
mov
mov
lahf
das
xor
in
js
dec
or
pop
popa
les
lahf
cmp
mov
push
jo
mov
inc
mov
rorb
or
mov
gs
bound
lods
sub
adc
insb
xor
test
inc
mov
data16
push
adc
aaa
or
in
push
cmp
mov
divb
out
psllq
adc
sub
test
lcall
add
rcll
push
scas
push
dec
or
out
sub
int3
cmp
lds
pop
lahf
xlat
mov
shll
cmp
xchg
mov
clc
adc
lcall
push
rcrl
pop
mov
in
add
repnz
add
mov
outsl
lcall
mov
pop
inc
scas
in
out
fnstenv
movsl
bnd
daa
xchg
test
xchg
cli
out
notl
add
test
lods
inc
inc
mov
mov
mov
aas
push
clc
jmp
stc
movsb
cmpsb
inc
adc
fdivs
inc
mov
ret
sub
pop
fchs
pop
pushf
inc
push
push
inc
sbb
xor
lret
push
scas
stc
fld
sub
or
icebp
nop
or
gs
or
sub
out
popa
or
addl
test
lea
daa
nop
sub
jge
or
add
das
insl
and
inc
lock
lcall
imul
push
sbb
adc
loopne
dec
sub
lcall
arpl
mov
cs
lret
xor
mov
sbb
sbbb
dec
test
mov
mov
xchg
icebp
adc
jle
mov
cmp
and
jno
aam
push
shlb
sub
inc
ret
cmc
dec
mov
imul
jae
test
mov
sbb
mov
dec
push
pop
imul
testl
and
rclb
pusha
subb
xchg
test
sarl
xorl
lds
or
filds
or
data16
mov
or
or
in
movl
or
pusha
mov
imul
cmpsl
rcll
imull
lds
xchg
in
and
pop
aad
sbbl
cmpsb
fucom
gs
ficompl
outsb
iret
bound
add
mov
popa
xchg
jo
xchg
arpl
xor
pusha
mov
mov
inc
adc
lock
loope
jns
mov
pop
sahf
shll
pop
sbb
std
data16
xlat
jbe
jge
adc
loop
cli
add
mov
and
mov
test
fdivrl
sub
jnp
outsl
fwait
mov
mul
les
pop
xchg
subl
lock
mov
test
shll
xorb
sub
mov
xchg
int3
cmp
jecxz
sub
movsl
notb
xlat
pop
add
scas
inc
cmp
mov
mov
arpl
daa
fstpl
loop
or
mov
jno,pn
cmp
test
mov
aam
leave
and
stc
or
adc
jb
inc
cltd
inc
in
int3
loop
mov
js
repnz
lods
cmp
jns
nop
pop
push
pushf
sbb
cmp
and
repnz
pop
mov
out
mov
mov
hlt
aam
test
stc
sbb
inc
xchg
outsl
or
pusha
xchg
imul
out
loopne
pop
jmp
sub
sbb
push
cmpsb
in
pop
arpl
add
icebp
mov
xor
addl
jno
mov
sbb
and
add
mov
mov
add
mov
xor
or
mov
aad
shlb
sahf
inc
jbe
jp
cmp
mov
sbb
pop
js
pop
push
xorb
xchg
jl
jae
and
mov
aaa
aam
push
insl
out
inc
fmul
sub
aas
adc
sub
dec
mov
sarb
sbb
push
dec
lods
dec
adc
out
loopne
cld
dec
adc
push
mov
pop
aad
or
out
mov
rol
icebp
push
decb
mov
ret
faddl
movl
mov
nop
mov
and
dec
mov
enter
push
jmp
jbe
cmp
or
jle
jae
popf
sbb
fcompl
sbb
in
out
adc
sbb
sbb
pop
jnp
test
dec
sub
dec
pop
shrb
mov
int3
aas
xor
cmp
jno
sarl
xchg
sysret
mov
xchg
inc
leave
inc
mov
fldcw
cmp
xor
rcll
xchg
and
push
bound
subl
xor
xchg
lds
mov
pop
pop
cmp
add
sarb
jbe
bound
mov
pop
dec
or
xor
leave
push
sahf
sbb
jb
enter
psrlw
stc
pop
loopne
add
push
fisubl
ret
mov
fdivrs
pop
sbb
sahf
rcll
inc
or
push
pusha
cltd
loope
pop
pop
cmpl
inc
dec
push
cmp
out
mov
iret
fimull
push
xchg
sub
add
dec
mov
xor
sti
insb
loopne
lods
sub
arpl
push
add
sbb
push
shrl
or
es
out
ret
mov
ret
jnp
fcompl
cmc
iret
add
xchg
aas
loope
repz
js
cs
and
mov
xor
lcall
fs
not
cli
adc
faddl
dec
shlb
add
sub
xchg
data16
adc
cmp
cmp
call
xor
xchg
inc
or
mov
mov
jo
and
add
ss
sbb
in
adc
push
xchg
ljmp
mov
arpl
or
sub
cltd
mov
fsubrl
movsb
out
testb
pop
jg
cmp
or
add
popa
push
push
fcmovu
cmp
inc
enter
mov
pop
lea
pop
fs
xor
add
out
inc
es
and
adc
jo
insl
fwait
xchg
xor
mov
cld
jne
pop
das
mov
out
mov
jb
push
push
or
xchg
aas
adc
jns
dec
imul
mov
loopne
sbb
inc
lahf
leave
test
xor
jnp
push
pushf
xchg
fisubs
push
jp
imul
xor
adc
loope
test
adcb
lock
cmp
bnd
mov
mov
orb
sub
mov
mov
js
add
xor
xor
je
mov
pusha
jecxz
pop
roll
xchg
adc
stc
inc
or
aam
mov
push
lret
mov
movsl
aam
cmp
scas
xchg
fs
inc
arpl
rcrl
jbe
aam
cmpsb
pusha
push
xor
mov
cld
and
into
lret
mov
scas
xor
lods
imull
lods
mov
sbb
xor
jns
push
fs
dec
mov
cmp
scas
jle
mov
xchg
lods
adc
jmp
arpl
aam
aad
sarl
xor
or
fwait
inc
in
ljmp
add
hlt
add
mov
xchg
js
pop
out
or
ret
stos
test
out
inc
and
repz
lods
lahf
pop
or
pop
ja
cmp
xchg
hlt
call
inc
mov
cli
mov
or
cmpsb
xchg
insb
outsl
ret
lret
stc
cmp
cltd
cmp
dec
outsl
xchg
shl
and
mov
movsl
xchg
out
ss
loopne
dec
ficoml
test
sbb
adc
sbb
push
cmp
fstpt
jo
repz
popf
sbb
out
add
outsb
dec
pop
andl
enter
mov
cli
js
into
jno
add
xchg
loope
insb
addr16
xchg
aad
call
shrb
shll
sub
or
push
jb
mov
inc
inc
inc
stc
mov
and
imul
pop
push
xor
inc
insl
pop
pop
pop
jl
push
jl
xlat
arpl
in
push
in
fcoml
rolb
jnp
rorb
loop
cmpsl
movl
outsb
and
dec
mov
lret
dec
outsb
pop
add
mov
jle
test
addr16
aad
mov
lods
popf
stos
add
jo
into
nop
hlt
jmp
insb
dec
lods
iret
sahf
sbb
pop
daa
ja
pop
add
mov
cmp
pushf
xchg
dec
sub
add
cmp
in
filds
xor
mov
jbe
je
fcomps
jne
outsb
ljmp
jp
inc
push
jbe
outsb
or
fnsave
push
mov
imul
mov
inc
adc
and
dec
jl
sarl
sub
push
addr16
mov
jmp
cmpsl
out
sbb
inc
jecxz
in
fsubrs
stc
mov
jb
or
push
adc
inc
jno
cmp
andl
mov
stc
addr16
movsb
or
bnd
inc
push
test
mov
add
mov
mov
xor
imul
cmp
inc
mov
loopne
and
dec
repz
xchg
mov
movl
cmp
add
fdivs
pushf
sbb
pop
pusha
insb
pop
imul
cld
es
mov
fwait
mov
insb
sub
and
mov
jbe
popa
sbb
pop
xor
mov
sbb
out
sbb
mov
imul
and
mov
pop
jecxz
lea
xor
ret
sahf
pop
mov
popf
ror
sbb
into
ret
stos
inc
mov
ret
dec
xchg
pop
push
sbb
rcrl
dec
and
mov
or
mov
arpl
add
pop
leave
mov
mov
imul
fists
xchg
dec
push
push
mov
mov
ja
lock
insl
insb
insl
ja
push
movsb
cmp
jb
adc
mov
cltd
mov
or
jle
push
data16
jne
jne
xchg
inc
jmp
jae
xchg
xlat
push
repz
outsb
test
xlat
nop
and
pop
cs
pop
aas
xchg
out
iret
addr16
xchg
pop
dec
mov
push
aaa
xor
mov
fnstsw
lahf
popa
ficomps
push
shlb
nop
pop
push
jns
or
add
push
sub
xchg
notb
stc
ret
mov
loope
add
lret
faddl
fucomi
loop
push
or
lret
pop
xor
inc
cli
ret
push
dec
mov
sbb
lahf
pop
xchg
dec
sbb
adc
clc
adc
jl
xor
cmpsl
mov
dec
and
jnp
dec
cmp
fstl
loope
rolb
iret
jp
leave
lcall
pushf
cli
enter
cli
in
mov
mov
pushf
loope
test
les
add
pop
lea
or
sbb
cmp
stos
cmp
push
dec
mov
arpl
jns
popa
popf
cmp
out
sbb
or
insb
lcall
addl
push
sbb
adc
pop
rorb
ss
aaa
jno
pop
adc
xchg
insb
stos
scas
jne
xchg
movsl
and
popf
cmp
iret
jp
mov
xchg
adc
lds
xchg
stos
das
lcall
callw
scas
mov
cmp
aas
inc
gs
pop
lock
arpl
movb
lahf
sub
xchg
xchg
addr16
aas
inc
sahf
mov
sahf
sar
push
les
xchg
inc
mov
mov
pop
pop
lds
push
cmp
add
fwait
xchg
std
outsl
stos
add
in
push
inc
dec
int
clc
scas
nop
push
mov
adc
pop
adc
cmpsb
out
sub
xor
pop
aam
outsl
or
out
adc
ja
adc
test
dec
mov
mov
push
mov
or
push
inc
cmpsl
sub
mov
inc
je
add
xchg
lret
add
hlt
incb
xor
fnstsw
adc
fnstsw
pop
in
jmp
or
mov
push
cli
int
lahf
xchg
or
add
in
mov
dec
inc
inc
fists
lcall
dec
int
test
pusha
cmpsb
or
xor
add
push
leave
int
mov
ret
lds
pop
lds
cmp
cmp
xchg
ljmp
mov
mov
mov
xor
dec
jnp
out
in
outsb
rcrl
sbb
fsts
and
push
addr16
outsb
xchg
mov
les
sub
das
mov
arpl
adc
dec
push
push
addb
loope
or
pusha
sbb
fsave
loopne
cli
outsl
jge
mov
arpl
fnstsw
popa
call
incb
mov
nop
push
push
push
js
and
jo
mov
pop
jae
adc
push
xor
in
mov
sbb
sub
or
cmp
inc
shrl
adc
xlat
loope
mull
sub
pop
jg
adc
and
xchg
mov
cmp
jg
and
mov
das
mov
cld
movsl
and
push
pop
int
fldt
mov
sbb
sub
into
sub
sti
movsb
dec
pop
pop
xchg
dec
mov
orl
repz
adc
sbb
arpl
lret
jecxz
mov
adc
push
inc
pop
jmp
inc
jmp
cmp
push
sarl
idivb
jle
sahf
popa
adc
cmpb
adc
lods
and
or
ss
jle
mov
movsb
pop
bound
idivb
daa
shrb
aaa
sub
xor
xchg
push
push
cmc
push
xchg
stc
aad
pop
push
mov
sbb
or
fwait
cmc
mov
aad
jo
sub
or
cmpsl
outsb
ja
xlat
add
push
jle
inc
js
lret
enter
jae
jle
fwait
clc
mov
btc
fwait
mov
xchg
in
push
fwait
push
test
popl
pushf
fbld
mov
mov
jg
inc
lahf
pcmpgtb
push
lods
mov
sub
bound
int
push
add
push
jle
push
inc
in
iret
addr16
cmc
imul
mov
inc
cmpsb
push
sbb
rcl
add
cmpb
xchg
cmp
cli
arpl
into
outsl
jp
out
jo
insb
cmp
add
cmp
pop
ss
fmull
sbb
mov
js
rcrb
and
mov
pop
fistps
cmp
mov
dec
push
cmpsb
jb
jmp
mov
inc
fcmovu
inc
push
pushf
fisubrs
inc
or
sbb
push
sub
mov
imul
sar
rorb
testb
mov
popa
push
push
icebp
ret
mov
push
rcrl
test
inc
jl
ja
mov
repnz
aam
jnp
lret
repz
xchg
in
in
mov
cli
fldl
inc
cmp
sbb
dec
lock
adc
jg
push
mov
mov
xchg
mov
xchg
jp
pop
mov
inc
xchg
insb
push
test
cli
popf
dec
imul
mov
std
pop
mov
and
fstl
mov
icebp
leave
aad
mov
out
fld
and
xchg
adc
pusha
pop
repz
cmpsb
rcl
and
dec
out
sbb
dec
sahf
sbb
dec
ficoms
xchg
into
or
sub
inc
dec
ljmp
and
or
fsubs
cwtl
movsl
and
sar
mov
push
push
or
stc
int3
cs
inc
jle
jg
mov
inc
lahf
rclb
pop
pop
mov
fsubs
mov
add
mov
push
rcr
adc
push
xchg
lahf
popa
mov
fisubrl
push
and
ret
es
repnz
push
andl
push
mov
fildll
scas
out
pop
and
lods
gs
aam
cmpsl
stos
mov
pop
test
ljmp
mov
lods
popa
and
xor
jne
or
out
data16
sub
sbb
mov
cmp
adc
adcl
int3
jp
dec
shr
jno
jp
cmp
out
cld
in
sbb
out
repnz
cmc
js
cmpsl
pop
add
and
or
dec
and
jnp
cmpsb
and
inc
stc
dec
fldt
cmp
mov
stc
aad
mov
repnz
and
fidivs
xchg
xor
mov
fistps
lcall
aaa
les
xchg
test
add
data16
fwait
jnp
sub
add
insl
pop
outsb
movsb
test
pop
mov
and
jecxz
pop
addr16
call
cmp
push
test
sbb
sub
leave
lods
movsb
sarl
lcall
sub
or
fstp
fs
cmp
and
insb
loopne
xchg
je
movsl
inc
rorb
stc
and
xchg
les
shl
jbe
lret
jp
test
sub
rcr
lcall
jecxz
dec
fs
jge
mov
mov
pushf
xchg
lds
gs
in
std
mov
mov
xor
adc
inc
jg
cmp
xchg
mov
and
xor
fdiv
fs
mov
sti
jbe
loopne
mov
nop
adc
jecxz
sbb
jmp
rcrl
mov
out
adc
sbb
daa
insb
stos
fs
jo
dec
mov
aaa
test
xor
pusha
iret
inc
mov
mov
mov
popa
or
popf
addr16
jo
test
xor
xor
aaa
rolb
pop
scas
adc
add
ret
pop
fs
mov
call
into
lods
xchg
das
data16
roll
out
add
add
cmp
mov
gs
in
and
iret
and
pop
fs
pop
inc
sahf
sub
shlb
xchg
out
xor
xor
cmp
mov
rclb
cmp
sub
mov
mov
xchg
int
outsb
pop
jp
lods
pop
int
mov
popa
shlb
or
movb
push
fwait
jmp
aam
sbb
lahf
shl
cmovl
addr16
push
popf
icebp
sbb
js
loope
dec
popa
into
movsb
dec
mov
cmc
pop
scas
mov
fld1
out
cwtl
jecxz
adc
loope
push
add
dec
rorl
cs
lcall
in
dec
in
fcompl
jns
cli
rorl
inc
int
mov
loop
int
enter
xchg
or
ficompl
test
outsl
mov
and
push
pop
pop
add
jecxz
cmp
xchg
add
out
xchg
jne
or
xchg
dec
mov
cs
mov
jg
xor
dec
lods
mov
mov
cwtl
aam
lods
pop
adc
or
jmp
inc
lret
addr16
mov
mov
push
mov
insl
mov
lret
xchg
push
or
daa
mov
sbb
addr16
mov
xor
push
mov
adc
fisttpll
push
and
adc
aaa
push
adcl
sbb
fimull
cwtl
dec
xor
xor
shl
fcoml
mov
or
ror
gs
bound
outsl
insb
cmp
sub
push
lods
in
and
mov
xor
pop
mov
roll
sub
mov
cltd
jmp
ja
mov
push
cwtl
imul
and
push
outsl
mov
sub
mov
cmp
xchg
mov
sub
rorb
adc
sub
sub
mov
or
inc
loop
test
out
pop
jne
inc
je
les
nop
xchg
js
fidivrs
dec
sbb
sbbl
mov
call
adc
mov
fstp
out
cmp
pop
mov
daa
outsl
imul
sbb
cmp
popf
dec
adc
out
arpl
dec
movsb
mov
rcrb
mov
scas
push
and
add
jg
sbb
cmp
jge
push
popf
jg
pushf
sbb
lods
aam
jnp
xlat
test
adc
adc
xchg
sbb
outsb
pop
jno
inc
out
pop
mov
rcll
adc
push
orb
dec
and
fdivrs
aam
sbb
push
inc
addl
inc
sub
dec
stos
push
and
fldl
cs
push
mov
push
out
pop
push
and
or
xor
push
xor
jns
cmp
or
sub
mov
movsb
in
mov
pop
dec
and
test
and
ljmp
push
push
or
sub
add
jge
dec
mov
adc
loope
fistl
fistps
addb
cmp
mov
add
or
btc
add
and
cmp
rclb
fistpl
xor
pusha
pop
imul
dec
nop
mov
and
sar
cwtl
jge
dec
test
jns
sahf
add
rcrb
enter
push
fidivrs
jp
stos
cwtl
mov
pop
push
leave
mov
xchg
and
adc
inc
or
movsb
lods
iret
mov
dec
mov
mov
call
mov
int
mov
aam
popl
pop
test
dec
inc
inc
lods
loop
xchg
mov
cli
adc
bound
test
lahf
ss
mov
sbb
sub
dec
daa
xchg
xchg
or
in
stc
andb
les
mov
mulb
jb
mov
outsb
out
stos
stc
loopne
lcall
clc
pop
push
xor
and
inc
lods
sub
test
xchg
pop
pop
repnz
mov
jae
jo
mov
xchg
sti
xchg
les
or
rcll
lock
cmp
push
push
sub
inc
mov
xor
cld
cmovle
cwtl
divl
gs
jnp
push
daa
xlat
mov
inc
clc
mov
testl
icebp
mov
cwtl
gs
push
push
fwait
notl
shrl
pop
sarb
bound
inc
pop
pop
add
sarl
arpl
in
clc
jge
popa
in
fwait
mov
adc
jp
inc
aaa
push
adc
insl
mov
bound
adc
xlat
test
add
pushf
repnz
loopne
pushf
mov
xor
pop
pop
adc
clc
popf
cmp
mov
xor
mov
outsl
movl
xor
or
ljmp
nop
mov
sub
lcall
push
adc
js
rorb
rcrl
aad
xchg
lret
or
sti
push
mov
pop
cmp
mov
test
in
dec
insl
mov
or
les
sbb
in
mov
cmp
mov
shl
inc
pop
or
push
nop
mov
hlt
ds
das
sub
mov
add
pop
cmp
sbb
cmpl
das
leave
adc
mov
mulb
ffreep
xlat
mov
ficompl
pop
repz
xor
sub
mov
xor
xchg
lret
sbb
push
mov
imull
jle
cmp
pop
mov
sbb
stc
adc
mov
cmp
cld
sub
dec
cvtps2pd
repnz
cli
mov
sub
movsl
jge
cmp
jmp
popf
fs
mov
sti
ss
adc
jno
and
test
mov
cli
stos
aad
and
sub
dec
mov
insb
insl
xor
add
xor
hlt
hlt
mov
push
mov
sbb
xchg
sbb
lea
mov
hlt
xchg
dec
adc
adc
mov
mov
icebp
xchg
and
pop
lret
pop
outsb
xchg
popa
pushf
dec
or
stos
jbe
stos
pop
pushf
std
not
icebp
pop
loop
insb
adc
pop
insb
shlb
xor
xorl
adc
push
sub
mov
adc
push
notl
lock
test
fidivs
das
mov
dec
and
arpl
mov
ljmp
pusha
xor
or
jp
stos
inc
push
aas
subl
mov
mov
mov
cmp
or
cwtl
xor
or
addl
push
movsl
pop
add
mov
xor
ret
addr16
push
jae
mov
sub
or
xor
and
cli
sub
xor
mov
sbb
adc
adc
cmp
lret
test
rclb
pusha
cli
int3
pop
xlat
xchg
dec
jle
dec
arpl
out
iret
sti
enter
push
sub
jge
outsl
push
pop
jg
into
and
pop
scas
dec
pop
hlt
lods
mov
adc
lock
rorb
aas
and
add
cld
jmp
sbb
inc
shll
sbb
mov
pop
add
jo
mov
mov
push
mov
ret
arpl
les
nop
faddl
jle
xor
js
or
movl
lods
ret
aam
mov
test
in
or
movsb
dec
aas
xlat
hlt
pop
inc
pop
jns
push
addr16
daa
xor
stos
js
insb
fs
pushl
out
loope
inc
filds
cmpsl
hlt
movsb
loop
inc
ss
in
adc
pop
inc
xor
stc
xchg
cmp
sub
aad
aad
adcl
sub
rolb
sbb
lods
in
cmp
inc
movl
aam
int3
fs
push
adc
adcb
mov
xor
add
cwtl
dec
fwait
mov
push
jl
jp
inc
fisttpl
dec
stos
ds
out
inc
es
leave
add
xor
aad
fildll
leave
sarl
jle
adc
add
sbb
roll
imul
insl
add
mov
xchg
popa
insb
adc
mov
pop
into
fldt
js
jns,pt
jb
fwait
outsl
and
sub
dec
sbb
push
mov
mov
clc
cmp
fsub
mov
pop
sete
repnz
out
in
and
sbb
sbb
xor
fwait
jns
xchg
inc
sbb
lods
ret
pop
xchg
and
push
xchg
mov
inc
push
jg
sub
insb
inc
sahf
sub
or
pop
fwait
mov
sub
test
out
and
push
daa
pop
sub
mov
sbb
add
add
movsb
les
loop
mov
rolb
sahf
pusha
loope
cmc
pop
ud1
pop
mov
pop
mov
andl
cmp
xor
adc
js
sbb
sbb
mov
fimull
hlt
in
inc
scas
in
call
xchg
xchg
add
mov
dec
enter
add
rcrl
in
mov
xchg
inc
sub
dec
or
lds
das
insl
push
mov
je
inc
out
adc
jmp
mov
ljmp
lahf
cmp
xchg
jo
clc
xchg
push
rorl
js
xchg
xchg
leave
adcl
mov
jne
shlb
dec
dec
lods
rolb
arpl
mov
les
sbb
sbbl
mov
xchg
loop
or
sbb
addb
or
andb
jno
or
mov
ds
dec
iret
cmp
bound
mov
mov
inc
mov
inc
jecxz
pop
roll
cmp
dec
mov
push
es
or
in
jae
lods
add
out
or
rol
inc
enter
sbb
pop
mov
mov
loop
bound
add
lods
test
int3
stos
mov
out
jg
cmp
jb
push
dec
xchg
cmc
pushf
push
mov
lret
std
pop
push
pop
mov
roll
mov
lods
dec
fadd
lea
test
add
adc
pop
xchg
mov
inc
push
and
sub
or
xchg
and
out
shl
xor
sbb
add
jae
mov
shl
inc
push
gs
jne
dec
jp
push
stos
mov
scas
data16
adc
add
pop
pop
flds
cltd
jns
mov
dec
lods
lret
in
mov
sbb
roll
cld
mov
pop
cmp
jmp
xchg
in
sti
pop
imul
adc
or
mov
lods
stos
mov
xchg
test
inc
dec
int
xchg
cmpsl
xchg
adc
mov
pop
ljmp
outsb
xchg
aas
sub
xchg
pop
sub
sar
adc
repz
fcoms
jns
fwait
test
outsb
pop
cmpsb
push
lahf
sbb
pop
mov
jbe
sbb
int
xor
adc
and
pop
sub
std
movsl
push
inc
shlb
dec
stos
filds
jnp
rcll
xor
xor
jle
lcall
jecxz
sub
xlat
shrl
push
dec
add
add
inc
gs
pop
enter
rcrl
pop
fimuls
lret
xchg
sahf
iret
sub
insb
pusha
mov
push
negb
ficoml
mov
sub
in
jno
sti
into
les
outsl
mov
push
popa
in
lret
mov
imul
out
mov
sarb
mov
cmp
pushf
movb
push
add
insl
js
pop
clc
sub
pusha
jns
shrb
lods
sti
xchg
jbe
fdivr
inc
icebp
adc
fiadds
les
fisubl
xchg
shll
imul
xchg
insl
jne
mov
sbb
jmp
xchg
xor
inc
mov
int3
adc
ret
mov
jmp
add
sub
jae
loop
cmpsl
and
out
add
insb
xor
std
or
cmp
push
push
popa
shlb
stos
pop
shll
daa
jo
cmpsl
add
add
or
sbb
inc
add
cwtl
out
pop
xlat
mov
sar
jbe
gs
pop
in
jl
sbb
or
xor
fiadds
add
pop
and
cmp
nop
mov
in
movsl
out
pop
dec
imul
push
ja
mov
push
mov
adc
inc
jbe
jb
push
sub
clc
cwtl
pop
int3
popa
movsl
das
setl
cld
std
dec
mov
loope
adc
mov
dec
xchg
ss
xor
and
cmp
jnp
or
inc
outsb
mov
push
push
ljmp
push
jbe
sahf
inc
insl
into
dec
push
adc
pushf
popf
shrb
call
int
mov
into
and
incb
pop
repz
mov
aam
adc
daa
stos
xchg
or
pop
fwait
xchg
ret
xchg
adc
test
popa
and
pushf
mov
fsubrs
ja
pop
cs
int3
ss
push
leave
xor
cmc
xchg
inc
adc
cwtl
mov
cmp
jp
mov
mov
mov
push
and
fildl
bound
in
clc
or
or
mov
cwtl
imul
js
fldcw
sbb
das
push
repnz
inc
sahf
shr
out
adc
cli
pop
pop
adc
xchg
xor
das
fists
faddp
push
pop
int3
aas
lods
xchg
and
stc
fucomp
jnp
mov
in
xorb
ss
push
das
mov
out
lcall
movsl
pop
dec
mov
push
stos
jge
ret
or
cmp
bound
int
andl
fwait
cld
insl
leave
adc
sub
in
jg
mov
test
outsb
test
fwait
pop
pusha
cmc
icebp
sub
jbe
sub
or
dec
xchg
inc
or
subb
insl
mov
fistps
call
jmp
leave
test
dec
mov
roll
sub
sbb
cmp
pop
add
push
adc
loopne
jae
cs
adc
outsl
sarl
jae
cld
ljmp
repnz
leave
icebp
in
cmpsl
insb
ljmp
movsb
arpl
or
xchg
mov
xor
mov
pop
lock
cmp
es
lods
cmp
ret
stos
adc
out
or
addl
lods
orl
lcall
sub
dec
dec
outsl
push
sub
lds
adcb
xchg
inc
in
push
push
ret
jecxz
pop
rolb
fs
out
xor
aad
lcall
jp
stos
jne
mov
rorl
out
out
or
shrb
mov
in
cltd
in
jl
xchg
jae
jmp
push
xor
hlt
push
xorl
sbb
nop
dec
or
shlb
mov
mov
aas
iret
push
hlt
mov
push
adc
cmpsb
iret
jae
pop
adc
insl
pop
inc
subl
pop
push
dec
sbb
mov
movsb
popf
pop
in
add
popf
test
xor
pusha
mov
imul
sbb
pop
cwtl
iret
call
movsl
cmpsb
repnz
jg
mov
int
mov
cmc
mov
in
fsts
sub
aas
cmc
sub
icebp
dec
inc
xor
shrl
cmc
pushf
insl
jno
pop
cmp
dec
cmc
xor
mov
cmp
mov
push
jno
pop
sbbb
imul
xchg
xchg
fcoml
call
aam
je
lahf
stos
shll
mov
mov
rcrl
sub
clc
dec
out
cld
xorl
adc
push
jge
ret
popa
jl
ret
imul
jecxz
cmp
dec
sbb
fdivr
stos
pop
aam
inc
jle
int
out
sbb
rcrb
out
jnp
mov
aas
int3
arpl
popf
ret
dec
jnp
adc
into
dec
sub
cmc
mov
fsts
sbb
sbb
fidivs
fsubrl
dec
sbb
shlb
test
add
je
mov
lea
jbe
imul
mov
xor
call
adc
das
popf
inc
in
xchg
or
jne
jmp
mov
popa
xorb
jecxz
arpl
es
and
inc
test
addr16
cmp
sub
cmc
in
xor
adcb
aaa
cwtl
lods
nop
out
outsb
push
repz
call
jae
adc
pop
test
fdiv
dec
faddp
loopne
test
mov
fimuls
fwait
jmp
mov
add
inc
mov
pop
and
out
fcmovnu
mov
inc
adc
outsb
imul
add
movsl
insb
cwtl
fsubl
scas
adc
scas
xchg
test
test
subl
pop
scas
sub
int3
enter
sarl
mov
xchg
jns
and
mov
cmp
loope
popf
mov
mov
out
jbe
jb
shll
cmpsl
mov
push
xor
aaa
das
sub
fwait
imul
inc
scas
fsubr
in
daa
dec
push
lods
sub
lcall
push
add
fcompl
jnp
cmp
mov
xchg
inc
push
push
jmp
sbb
jle
shlb
adc
cmpb
fwait
mov
nop
rorl
call
jg
xor
into
aas
add
paddb
ljmp
or
enter
and
outsl
dec
test
sbb
fld1
push
adc
ds
push
mov
jno
lods
rcrl
lds
jge
rclb
shrl
ret
in
adc
stos
mov
lret
pop
jnp
and
dec
push
testl
outsb
fsubl
leave
push
cwtl
ljmp
or
xchg
fsubl
lret
mov
addb
xor
jne
mov
xchg
out
leave
aad
lcall
rcrl
sbb
xchg
ljmp
pop
lret
add
aaa
mov
and
cwtl
mov
rorb
and
mov
fiadds
in
dec
pop
push
mov
aam
fistl
xor
cmp
aam
sub
inc
cmpsl
adc
outsb
popa
dec
push
cmp
cwtl
and
out
scas
js
pushf
pop
mov
add
mov
pop
inc
mov
fs
stc
in
stc
adc
inc
mov
mov
mov
aad
and
and
mov
lods
lods
mov
pop
arpl
fdivl
and
xor
out
repz
fldenv
push
xchg
imulb
fisttps
arpl
cmp
and
xchg
xchg
xchg
fsub
pop
inc
push
push
mov
mov
out
ss
rclb
push
jg
and
mov
rcrl
lock
roll
repz
xlat
cmp
movsl
gs
or
cmp
sub
or
in
stc
push
loopne
out
mov
lock
call
stc
mov
gs
out
int
aas
pop
jp
mov
lock
mov
inc
popa
call
das
aaa
mov
int3
stos
mov
dec
xor
test
mov
stc
cld
popf
out
gs
fwait
sbb
js
subb
jle
pushf
dec
addr16
cmp
lcall
mov
cmp
mov
dec
push
dec
lods
pop
sahf
fsub
adc
xchg
dec
outsl
inc
jns
ret
daa
push
lcall
mov
mov
push
stc
gs
xlat
and
rcll
push
adc
mov
mov
sub
adc
insl
add
mov
pop
ret
repnz
inc
push
popf
es
idivl
push
sbb
ret
sbbl
jno
lods
or
cmc
in
fisttpll
xchg
sar
jg
pop
pop
push
xlat
lret
xchg
sub
test
dec
inc
fmuls
dec
gs
cmp
lcall
inc
or
xchg
inc
cmpsl
out
xor
arpl
div
stc
push
fwait
insb
sub
test
mov
lods
xchg
subb
fsub
inc
ss
mov
inc
or
daa
mov
jns
jg
push
call
insl
ret
sub
mov
jecxz
xchg
test
push
popa
into
mov
out
mov
idiv
into
jmp
div
icebp
xchg
push
push
insb
sbb
mov
mov
ljmp
push
add
shrb
xchg
jecxz
test
lret
fs
pop
call
repz
push
cwtl
mov
pop
cmpsl
mov
mov
and
xchg
cwtl
ds
gs
xchg
aaa
std
out
js
pop
xchg
pop
add
jnp
sbb
lcall
push
inc
add
out
hlt
in
vmwrite
pop
cli
dec
push
ds
nop
jg
lcall
jb
adc
in
movsl
or
mov
rcl
or
cmp
sub
movsb
cs
out
xlat
imul
popf
cmc
movsl
xor
stos
lret
xor
andb
xlat
jle
iret
int
cld
cmpl
jno
and
je
rcrb
and
aad
scas
adc
ljmp
jge
mov
fsubrs
sbb
shll
mov
adc
repnz
push
insb
and
sbb
dec
cmpsb
pop
mov
imul
pushfw
mov
push
jmp
rclb
rclb
scas
pop
addr16
dec
push
pop
fistl
or
les
sbb
aam
adc
movsb
sub
mov
cmp
out
add
aam
jbe
imul
inc
imul
cwtl
cmp
or
adc
stc
mov
insb
pop
xchg
in
or
outsl
mov
xor
xchg
add
push
xchg
jo
sbbl
lret
loope
dec
mov
mov
cmpb
bound
jne
ret
xchg
mulb
sbb
dec
enter
jne
mov
xchg
insl
ljmp
aas
filds
out
and
repnz
push
sub
pop
xor
pop
xchg
or
ret
arpl
dec
lds
sub
xor
adc
loope
jbe
jne
imul
mov
stos
test
push
ja
xchg
push
test
pop
shlb
jae
orb
out
loope
out
jp
jbe
xchg
mov
fs
in
xchg
popf
aam
cmc
movsb
xorl
mov
jmp
pop
cwtl
aas
pusha
push
arpl
in
rorb
dec
sub
adc
pushf
pushf
fistpll
ficoms
jne
repnz
or
cmp
gs
mov
push
dec
jno
lds
jmp
bound
pop
add
addr16
sbb
in
cmc
out
out
movl
lret
push
outsb
mov
xchg
mov
push
cmpsl
xchg
jmp
dec
push
in
fsubr
xchg
jnp,pn
inc
cmc
inc
push
sbb
lods
shlb
fnsave
mov
mov
lcall
scas
mov
dec
loop
dec
push
testl
push
pusha
mov
cmpsl
loopne
and
push
adc
mov
bswap
out
pop
mov
jb
mov
inc
cltd
lret
call
shrb
sbbl
add
das
xchg
cli
aas
arpl
or
out
ljmp
pop
add
out
loopne
dec
mov
dec
ret
popa
fwait
xchg
movsb
jle
frstor
pusha
out
mov
push
pop
lahf
hlt
cld
pushf
mov
mov
es
or
loop
jmp
push
push
dec
scas
mov
xor
rolb
insl
test
mov
scas
dec
jo
cmp
ds
adc
add
cmc
mov
andl
pop
jnp
push
adc
je
imul
js
ret
dec
jle
pop
jp
push
sbb
xor
popf
mov
xor
cmp
arpl
out
jmp
movsl
sub
sub
imul
mov
xor
leave
lahf
cmpsl
imul
cmc
cs
jo
jae
hlt
pop
pop
movsb
xor
pop
push
jae
mov
push
pop
jle
cmc
pop
std
push
push
xchg
nop
das
push
outsb
iret
mov
push
push
pop
pop
dec
repz
stos
or
fmull
movsb
jne
pop
popf
das
insl
and
insl
addl
dec
lcall
sub
sbb
push
aaa
dec
jns
sarl
out
adc
jnp
test
mov
push
mov
leave
daa
out
ret
pop
sub
fwait
sarl
sub
in
pop
cld
or
hlt
clc
and
jns
inc
push
rclb
cmp
and
movsl
add
shrl
xor
push
outsb
dec
sahf
push
sub
jl
adc
xor
insl
pushf
scas
js
xchg
bound
or
push
sub
and
fnstsw
xorb
int3
sub
lods
cltd
adc
fcomps
add
sahf
inc
mov
aas
sub
aaa
scas
pop
mov
mov
or
push
stc
pop
xor
into
ja
sub
adc
jp
push
enter
jl
adc
out
cmp
ret
lods
cmp
cmp
clc
lcall
mov
xchg
cltd
insb
and
push
movsl
addb
inc
jmp
pop
cmp
rcr
hlt
sti
mov
push
ficomps
add
add
add
mov
mov
mov
or
cmpsb
mov
dec
xor
int
and
mov
dec
lea
xor
adc
sub
or
inc
clc
and
mov
mov
ret
xchg
fstpl
dec
or
xchg
mov
ror
dec
sub
pop
jle
enter
adc
adc
shll
mov
jnp
je
repnz
call
mov
push
outsl
aas
leave
add
dec
mov
and
sbb
data16
test
mov
sub
cmp
test
movb
jo
dec
add
movsb
dec
push
add
push
arpl
call
js
aad
fnstcw
nop
xchg
add
mov
pop
xorb
push
scas
out
sti
test
imul
enter
les
out
fnsave
sbb
call
arpl
lar
sahf
sbb
fdivs
mov
in
adc
inc
sub
push
enter
out
lock
lahf
cs
sub
pop
push
stos
dec
inc
mov
popl
es
fdivr
or
fcoml
shll
adc
xchg
mov
cmp
sarb
pop
push
cli
subl
add
sbb
inc
adc
push
lods
ret
push
in
mov
adc
push
adc
jns
lcall
hlt
rcrb
ss
aam
movsb
icebp
aas
jmp
aaa
xor
dec
pop
arpl
cmp
mov
and
push
lcall
popa
inc
jg
cli
mov
inc
cwtl
pop
inc
das
pop
xchg
pop
les
mov
sarl
loopne
add
aas
adc
subl
mov
aas
out
and
push
or
in
jbe
mov
inc
push
addr16
inc
jae
jg
mov
mov
movsb
adc
cmc
daa
aam
lcall
lds
xor
scas
iret
ret
test
and
int3
imul
push
push
mov
inc
xor
daa
cmc
stos
cli
sti
cli
loopne
arpl
roll
jnp
mov
push
jnp
xor
cmpsl
push
and
pop
daa
or
cs
jo
mov
std
xchg
jo
sbb
adc
mov
push
sbb
aad
dec
adc
mov
inc
popf
das
out
or
orb
mov
out
fcoml
sub
lret
jne
shr
xchg
add
xchg
jl
vmread
sbb
inc
and
sbb
loope
xchg
push
popf
jae
into
hlt
mov
mov
sub
ret
and
jle
ret
loop
lea
js
ror
mov
push
mov
pop
mov
push
data16
scas
xchg
into
jb
icebp
bound
cmp
pop
aam
and
std
adc
repnz
xor
rcl
cmp
lock
push
ficoms
mov
movsl
inc
fimull
cli
push
fildll
rcr
cmp
bound
aad
ljmp
mov
rorl
or
and
fwait
rcl
mov
es
outsb
je
sbb
jb
pop
jg
sbb
movsl
pop
mov
xchg
popf
lahf
aaa
jno
roll
push
in
push
insl
scas
mov
mov
mov
inc
inc
outsb
popf
jle
pop
repz
cmc
jmp
es
xchg
or
call
in
push
divb
mov
cmpsb
or
push
pop
xor
hlt
sub
mov
sbb
jnp
stc
jp
in
mov
inc
out
cmp
sub
adc
es
xchg
test
int3
scas
cmpl
inc
pusha
fwait
mov
fstpl
leave
movsb
pop
jae
push
sbb
std
fwait
outsl
jle
sbb
pop
rolb
fldenv
mov
lea
popf
cs
mov
repz
xor
sbb
jle
push
stos
sub
sub
mov
jns
jge
out
stos
sub
in
push
push
sub
cli
mov
mov
mov
aad
movsb
add
xor
xchg
dec
mov
pushf
fdivp
js,pn
fiaddl
jno
test
sub
push
mov
imul
enter
gs
sub
and
mov
outsb
addl
xchg
xchg
push
test
enter
es
pop
les
repz
dec
xchg
pop
sub
ficompl
aaa
push
mov
adc
xchg
push
jne
cltd
fs
sub
ja
dec
nop
xchg
mov
dec
addr16
lock
idivl
dec
xor
add
fwait
sbb
xlat
ljmp
cmp
leave
xchg
icebp
test
cs
in
sub
stc
cmp
rolb
cmp
push
loop
sbb
stos
xor
inc
je
je
add
test
mov
cli
inc
nop
jl
shrb
mov
cmc
xor
stos
and
jns
push
xchg
int
sbb
fsubp
xor
and
or
pop
cmp
clc
and
outsb
icebp
sub
outsb
sbb
jle
xchg
ret
outsl
and
mov
sahf
fistpll
data16
ret
dec
enter
mov
ss
cmp
ret
xor
imul
pop
push
mov
es
or
dec
inc
dec
adc
jge
call
hlt
push
and
mov
arpl
cmp
add
nop
or
inc
push
test
aad
test
cmp
xchg
jne
stc
push
jbe
jbe
adc
cmpl
push
sub
das
test
std
xchg
add
js
inc
daa
fstpt
pop
addr16
push
xchg
fisttpll
jecxz
adc
js
pop
cmpsl
outsl
mov
pop
push
and
in
ror
adc
dec
xor
in
int3
sbb
push
orb
pop
add
mov
push
fidivl
es
mov
adc
and
mov
or
or
fistpl
jg
sti
adc
bound
push
test
out
fwait
or
scas
ljmp
sbb
lahf
xlat
orb
dec
adc
pop
push
lret
pop
inc
leave
or
leave
enter
lret
mov
mov
dec
aas
and
outsb
ja
outsb
inc
jbe
xor
mov
push
pusha
scas
imul
sub
test
loop
sub
filds
mov
mov
scas
incb
ljmp
sbb
sbb
ret
loopne
mov
adc
aad
repnz
sbb
push
cmpsb
outsb
and
inc
dec
push
push
mov
xchg
aas
out
xchg
sahf
mov
repnz
ja
lret
das
jno
jecxz
cmpl
adc
xchg
xchg
sar
test
sahf
push
or
daa
mov
clc
xchg
sarl
inc
int
sub
xchg
mov
mov
xchg
sahf
push
dec
adc
orb
fstps
aaa
jl
mov
or
clc
ss
dec
sub
fsubp
sub
aaa
in
js
push
aaa
fdivrl
inc
mov
inc
sub
pusha
sti
stos
add
push
adc
out
lea
scas
test
adc
stos
push
pop
mov
cli
push
pop
js
roll
fsubrl
dec
cmc
ljmp
xchg
insb
pop
popa
dec
sbb
test
ret
xchg
jnp
push
pop
clc
pop
aaa
mov
lahf
aaa
movsl
xchg
bsr
test
fadd
jno
fadd
dec
xor
out
pop
cmpsb
aam
outsb
dec
lcall
sbb
mov
inc
aas
in
icebp
jg
pop
dec
jno
inc
aam
pop
fiadds
mov
mov
cmpsl
cmc
mov
inc
stos
and
jb
insl
xor
inc
call
sub
movsl
mov
in
scas
das
rcl
mov
lock
adc
push
addb
lods
mov
mov
pop
fisubrs
lods
push
movsl
and
into
sub
mov
aas
pop
test
cmp
and
inc
mov
insl
jns
jecxz
fdivrl
je
lcall
out
outsb
ss
movsl
leave
jmp
inc
or
sbb
ljmp
imul
out
xchg
fmuls
in
mov
push
xchg
mov
fwait
xchg
popa
mov
mov
mov
push
sbb
dec
ja
jne
outsb
test
sub
pop
insl
scas
call
jo
xor
insb
outsb
pushf
out
filds
or
aas
ret
mov
xorl
dec
mov
xor
ja
mov
cltd
jp
mov
and
push
daa
cmpsl
and
in
mov
inc
dec
mov
xor
push
xor
out
out
inc
mov
and
push
mov
rorb
xchg
lds
icebp
push
loopne
mov
pop
pushf
mov
sbb
pop
fsubrl
push
mov
mov
roll
mov
xchg
cmpsb
pop
scas
jns
iret
sbb
jmp
inc
cmp
mov
dec
mov
mov
xchg
repnz
mov
cmp
or
push
and
ds
adc
lods
sub
rol
pop
data16
aas
sti
push
in
out
fs
pop
insb
inc
or
test
sbb
pop
cld
loope
pushf
les
inc
mov
test
ret
adc
jne
out
pop
in
adc
jae
mov
sbb
cld
push
push
daa
mov
pop
call
inc
xchg
sahf
faddl
les
subb
xchg
add
ja
mov
dec
daa
dec
xchg
cmpsl
mov
jnp
insl
mov
mov
loopne
mov
mov
or
mov
int3
enter
loopne
mov
ss
pushf
mov
fldt
jp
clc
push
scas
int
pop
adc
lods
mov
or
cwtl
sub
xor
cld
dec
inc
adc
sti
les
mov
or
jmp
sbb
sbb
hlt
sarl
jecxz
bound
inc
sbb
xor
jge
mov
fmuls
cltd
stos
lods
loopne
loope
add
repnz
push
dec
dec
jae
and
fdivl
xchg
into
sbb
mov
sub
jno
and
stos
pop
and
mov
push
icebp
dec
shrl
inc
push
ret
inc
jg
mov
jmp
add
enter
xor
lds
adc
xorl
imul
movsb
fisttps
lea
mov
repnz
rorb
mov
mov
pop
jno
and
pop
rorb
outsl
sub
cld
push
cld
cmp
inc
scas
mov
pusha
scas
xchg
mov
pop
imul
inc
xchg
mov
inc
or
mov
cmp
shll
and
xor
in
cld
add
fwait
cmpsl
jb
xor
fs
ret
inc
cmp
and
mov
jmp
les
sub
int
fldcw
repnz
push
sti
push
inc
pop
imull
pusha
push
fbstp
fwait
test
xchg
sub
lret
sbb
sti
cmp
stos
pop
push
lcall
sub
scas
push
rcrb
lods
sarl
mov
push
icebp
add
pusha
xchg
jbe
imul
add
cli
push
jno
sub
jmp
je
clc
xchg
cmpsb
push
adc
loope
dec
mov
or
pushf
cltd
xor
stos
mov
xlat
adc
and
mov
mov
rcll
or
daa
lret
std
cmp
and
je
ja
adc
aas
test
movsb
xor
push
dec
es
jbe
inc
int
add
icebp
sbb
push
outsl
adc
pop
movsb
test
cmp
cmp
and
mov
dec
test
fldt
subb
shll
inc
pop
add
lcall
gs
push
call
addb
popf
sub
jns
out
mov
cwtl
cli
push
aas
xchg
jmp
adc
pop
or
jns
jmp
adc
movsb
mov
pop
adc
insl
inc
aaa
fs
jae
pop
sub
push
sbb
inc
push
nop
push
shll
jo
xchg
int
popf
mov
dec
and
push
into
or
pusha
pop
pop
sub
add
cmp
push
vpshaw
lock
fsqrt
mov
mov
dec
xchg
dec
data16
arpl
push
push
add
or
mov
mov
cmp
fldenv
aas
iret
push
enter
adc
sub
add
repnz
mov
daa
notb
je
push
notl
mov
jecxz
andl
in
sub
clc
cmp
insb
jecxz
cli
pop
xchg
frstor
jl
cmpsl
jmp
stos
pushf
push
inc
mov
call
in
pop
jg
adc
sub
js
movsl
inc
add
mov
inc
cmpsb
adc
jne
lods
xchg
and
dec
lods
rorb
jnp
fsubrs
cli
pop
loope
cwtl
ret
fwait
mov
xchg
mov
add
mov
xchg
jns
jecxz
dec
inc
sub
ret
push
mulb
insl
xor
sub
bound
adc
insl
dec
into
pop
mov
mov
pusha
mov
in
lret
outsl
jmp
gs
push
inc
xchg
jecxz
mov
cmp
int
sbb
cmp
fdivrs
and
stos
pop
fsts
les
add
loopnew
test
shl
loopne
cmp
inc
push
test
insb
movsb
out
add
movsl
aaa
cmpb
lea
adc
xchg
inc
mov
mov
jl
sbb
subl
xchg
dec
stos
xor
cmp
test
mov
insl
fsubr
xchg
jnp
scas
sbb
aad
push
rcr
es
scas
sub
mov
pop
orl
lcall
jno
rcr
sub
outsb
fistpl
getsec
or
xchg
inc
fstpt
rclw
shrl
es
fdivrs
cwtl
repz
aad
sub
xlat
insl
mov
pop
mov
dec
xlat
or
jge
or
push
adc
dec
icebp
dec
orb
xor
jb
push
loope
sbb
add
push
push
movsb
push
jbe
ss
xlat
cmp
inc
pop
or
cmp
stc
arpl
mov
jmp
repz
jnp
xchg
adc
jecxz
test
gs
lret
xchg
mov
cmp
inc
ja
mov
or
or
xchg
pushf
cmpsl
dec
lods
sub
and
bound
mov
repnz
je
mov
lods
inc
insl
clc
movsb
sbb
cltd
and
xor
push
xchg
ret
insl
jmp
js
lcall
mov
pop
fwait
mov
and
adc
clc
inc
stos
push
inc
mov
mov
pop
ret
or
clc
or
mov
jb
sub
mov
dec
or
aad
mov
and
inc
jo
adc
sbb
imul
mov
push
dec
arpl
add
sar
lods
dec
stc
int3
or
add
xor
mov
ficompl
mov
outsl
mov
leave
das
cltd
jl
pop
daa
sbb
ljmp
xchg
jnp
inc
mov
lods
das
and
cli
mov
enter
mov
pop
rcll
rclb
ja
cwtl
cwtl
addr16
adc
mov
shll
jmp
call
popf
xchg
and
mov
out
push
mov
mov
test
pop
ret
mov
scas
sbb
mov
jg
scas
push
fwait
inc
pop
fidivl
sbb
adc
decb
inc
xchg
lret
int
inc
inc
mov
add
cmc
cmpl
test
cld
clc
xchg
lahf
inc
je
cmp
sub
xchg
mov
call
insl
mov
js
outsb
fdivrl
inc
sti
test
xchg
mov
sub
aam
adc
sub
push
pop
inc
cmp
pop
in
nop
cwtl
inc
in
inc
icebp
dec
cmp
stos
cli
mov
sbbb
xchg
nop
fisttpll
sbb
cld
ret
or
clc
pop
repnz
cld
and
call
mov
jbe
sbb
jge
or
fbstp
mov
cs
dec
push
adc
cltd
pop
add
ret
cmp
mov
jge
lods
iret
mov
lock
andl
jl
xchg
mov
sbb
arpl
jp
fdiv
sub
lahf
or
fdivrs
cmpsb
jae
scas
call
punpckhbw
mov
xorb
fnstenv
or
imul
insb
pop
sbb
jb
inc
scas
imul
lret
adc
mov
inc
jo
das
jnp
or
outsb
jl
xchg
inc
inc
aas
sbb
cmpb
jno
dec
fisttps
decb
push
rclb
mov
stc
mov
hlt
dec
xor
push
inc
fsub
dec
xchg
sbb
rorb
lock
enter
loopne
adc
xor
push
cmpsl
and
iret
cmpsb
das
add
cmp
rolb
pop
inc
fs
push
mov
iret
insb
cs
sbb
mov
pop
lcall
int
adc
hlt
mov
mov
push
adc
iret
mov
cmpsb
fnstsw
mov
outsl
scas
push
lcall
cmpb
popf
push
iret
mov
cltd
pop
loope
bound
popl
imul
loop
cmp
add
adc
setg
hlt
sbb
sbb
mov
lds
mov
outsl
aad
rolb
add
jmp
std
mov
push
mov
pop
pushf
js
call
adc
andb
aad
xor
adc
adc
icebp
cmpb
fimull
dec
dec
and
mov
sbb
insb
pop
cmpsl
xchg
in
push
or
les
sbb
pop
xor
adcl
mov
cmpsl
sub
push
andl
sbb
insb
das
xor
jae
pop
xor
inc
ljmp
fldt
cli
inc
inc
rorl
pusha
inc
jp
cmp
xchg
fiaddl
dec
mov
gs
jg
sbb
mov
icebp
lods
pop
ficompl
pop
movsb
cmpsb
orb
cmp
cmp
pop
cld
or
icebp
pushf
adc
sbb
icebp
jmp
mov
int
in
pop
fsts
les
loope
loope
cltd
push
mov
js
xchg
add
or
and
push
mov
int3
rclb
push
xchg
ljmp
jne
dec
and
testl
sub
leave
jmp
ss
xlat
inc
or
aaa
incb
insb
jmp
xlat
dec
cmpsb
dec
mov
js
lds
xchg
xchg
pushf
mov
loop
push
stos
xchg
add
test
std
mov
insl
ss
lret
in
shlb
popa
mov
outsl
mov
sbb
adcb
pop
outsb
xchg
test
mov
inc
xchg
cwtl
call
movsb
sub
repz
pop
jl
mov
lret
shlb
subl
pop
jecxz
les
cmc
sbb
leave
in
fisttps
sub
mov
sbb
repz
outsl
fdecstp
pop
or
push
aam
pop
cwtl
push
js
jne
shlb
mov
pop
mov
mov
jnp
repz
stc
daa
or
or
xchg
mov
push
mov
ret
pop
shl
sahf
mov
cmp
mov
bound
mov
push
jge
ds
cltd
lods
mov
test
xchg
repz
lahf
sarb
mov
and
xor
ds
mov
xchg
adc
and
jo
divb
push
lcall
cmp
sbb
mov
dec
rclb
mov
lcall
mov
add
roll
fadd
mov
shrb
pop
jmp
jae
bound
jnp
ret
mov
add
rcrl
pop
xor
cld
adc
mov
scas
sub
jmp
pop
repz
dec
push
jb
lahf
pop
mov
mov
arpl
sub
mov
and
rolb
hlt
pop
bound
mov
sbb
dec
mov
mov
leave
sub
imul
mov
mov
xor
lcall
fwait
mov
pop
imul
in
xchg
andl
sbb
ret
jmp
sbb
jb
and
inc
mov
into
icebp
sbb
and
adc
or
stos
jle
test
nop
lret
adc
arpl
std
fstp
dec
mov
or
and
test
sub
je
dec
mulb
je
ljmp
imul
mov
ja
fisubrl
and
ret
cmc
and
dec
add
pop
jo
inc
jnp
xchg
push
pop
aam
mov
lock
repz
lods
fistpl
jge
out
xchg
cltd
lods
pop
imul
mov
rcll
movntps
ret
std
icebp
fldl
xchg
inc
leave
enter
call
dec
je
cmp
pop
test
dec
xor
pusha
mov
jbe
outsb
fcomps
jecxz
addr16
les
outsl
and
test
pop
cmp
fwait
pop
in
cmp
or
les
movb
sub
imul
jg
das
mov
clc
ljmp
adc
jae
dec
lea
hlt
dec
xchg
adc
ljmp
out
je
into
divl
or
cmpsb
mov
fildll
sti
negl
xchg
sub
aam
cmc
das
ljmp
push
or
lock
or
or
repz
orl
lea
and
mov
push
dec
jae
cmp
xor
test
fs
movsl
imul
jns
push
pop
dec
outsl
jl
cli
mov
dec
or
test
les
inc
xchg
lods
jge
xchg
cmp
pop
notw
jno
imul
cmc
cltd
lea
call
add
xor
lcall
add
stc
jl
xlat
mov
pushf
das
mov
jle
mov
sbb
and
inc
pop
push
push
daa
cld
aam
cmpsl
cmpsb
icebp
out
mov
fidivrl
adcb
mov
dec
xchg
iret
loop
mov
jae
xor
jb
sbb
sub
ljmp
add
adc
rclb
pop
out
cmpsb
aas
lds
jl
into
xchg
movsl
inc
pop
xchg
lea
inc
iret
mov
out
adc
jb
sbb
mov
inc
sub
aad
sarb
shll
push
fdivs
cld
mov
add
xchg
mov
add
stos
push
jnp
test
je
dec
pop
rcrb
xchg
and
push
movsl
mov
fisubs
pop
stos
icebp
hlt
sub
xchg
shll
cs
fisttpll
push
fnstenv
lret
xchg
jae
push
call
cmp
sub
mov
std
cmp
or
aaa
sbb
push
jge
push
xor
enter
loope
mov
inc
jnp
mov
das
xchg
out
mov
iret
sub
fdivrs
push
lahf
jl
jns
jle
mov
mov
out
aad
adc
cmc
cwtl
icebp
in
rorl
jnp
hlt
inc
subb
dec
xor
faddl
lea
fdivrs
cld
addl
leave
jmp
ss
lods
mov
dec
fistpll
xor
jo
xchg
push
add
leave
stos
iret
cmc
add
daa
es
testl
push
movsl
in
mov
inc
dec
gs
insl
ret
cmpsl
out
mov
push
in
pop
test
xor
sbb
adc
pop
mov
mov
add
cmp
push
aam
lret
addl
lret
ficoms
add
mov
testl
movsl
inc
testb
out
jns
inc
mov
sbb
cld
and
in
shll
and
bound
push
push
xchg
push
or
out
scas
dec
mov
outsb
pop
enter
fstpt
aam
pushf
inc
jge
and
stc
std
aaa
ss
add
dec
into
enter
sub
in
ja
pusha
into
enter
mov
dec
in
push
mov
repnz
xor
popa
mov
lods
jae
shll
dec
dec
push
lock
xchg
mov
xchg
jle
fidivs
xchg
js
cmp
insb
ret
jp
dec
cmc
dec
jl
outsl
pop
mov
aam
jp
bnd
xchg
cmp
xor
lock
loope
mov
dec
lret
aad
es
mov
cmc
dec
pop
test
jbe
push
mov
dec
jecxz
push
daa
inc
add
mov
insl
sbb
sbb
dec
push
lcall
cmp
cmp
inc
mov
pop
cmp
fmuls
push
test
fs
mov
rclb
or
mov
fsts
fdivrs
es
iret
popa
push
aad
lahf
shll
jno
fdivrp
mov
loopne
ljmp
leave
clc
imul
pop
mov
hlt
int3
dec
sub
movsb
mov
dec
and
push
ss
inc
pushf
jp
mov
cmpsl
out
dec
lock
inc
mov
push
or
in
xchg
push
lods
xor
mov
lahf
fcomps
xor
rep
dec
std
sbb
mov
lods
inc
loop
rcl
adc
xorb
fcomps
shrl
jne
andb
add
jmp
jge
aas
pop
xor
dec
mov
gs
movsb
dec
loopne
cmp
movsl
fldl
push
mov
pop
push
mov
rcll
xor
es
mov
cld
repnz
scas
and
or
dec
ja
shl
and
push
inc
and
sbb
pusha
adc
fbld
sbb
popa
sub
push
mov
int3
mov
sbb
xor
add
sub
daa
shll
inc
cmpsl
inc
add
into
xor
or
xchg
cmp
lahf
mov
call
nop
or
lods
xchg
mov
push
sarl
leave
loope
lcall
push
loopne
les
dec
scas
xchg
aad
mov
xchg
out
push
push
and
inc
pop
inc
xor
loope
push
orl
jge
loopne
lret
int
cmpsl
pushf
pushf
outsb
in
scas
or
jae
shlb
idiv
inc
mov
mov
rclb
sbb
sub
add
andb
jge
ss
pop
mov
pop
in
mov
daa
sub
bound
lret
in
ds
sub
cmp
xchg
add
andb
int3
push
sti
mov
xchg
arpl
test
pop
je
inc
cld
xor
mov
xchg
imul
subl
cmc
mov
adc
fimuls
jae
in
or
jnp
dec
xor
insb
adc
add
mov
jl
jle
std
mov
popa
sub
pop
dec
dec
repnz
adc
popf
outsl
fcoml
dec
imul
arpl
imul
lock
mov
inc
inc
je
jno
in
jecxz
fs
sbb
gs
fcmovu
test
inc
incl
xchg
mov
into
push
push
push
das
sahf
mov
pop
add
xchg
sbb
or
out
jp
imul
xchg
das
adc
push
orb
stos
and
add
push
and
mov
js
xor
in
mov
fmuls
xchg
cmp
in
mov
inc
xor
aam
dec
pop
imull
pop
into
in
mov
dec
shll
push
dec
mov
fmuls
xchg
nop
fs
scas
inc
xorb
mov
lea
adc
out
lock
mov
fbstp
jmp
xchg
pop
pop
out
lcall
mov
dec
adc
clc
xchg
out
and
scas
pop
popa
and
mov
out
stc
data16
mov
and
or
inc
or
push
or
mov
out
inc
xchg
test
aad
sarb
lods
lea
xor
add
mov
movsb
inc
insl
push
or
cld
aam
pop
inc
dec
dec
mov
test
into
sti
mov
xchg
stos
jne
daa
and
ja
jne
xor
mov
sbb
cmp
push
int
jnp
negl
testb
cmc
popl
jbe
nop
pop
ficoms
cmp
in
jl
aas
jne
insl
mov
xchg
mov
sub
call
or
push
jbe
shrb
push
push
js
int3
and
ss
lds
jbe
movb
lret
test
adc
pop
jge
lcall
cli
shlb
pop
icebp
pushf
pop
inc
xchg
sub
lahf
xlat
sub
pop
xor
or
mov
orb
dec
test
sub
push
dec
test
pop
jl
xchg
inc
or
daa
pusha
nop
xor
push
fadds
dec
inc
imul
push
loope
test
mov
sub
push
sub
xchg
sub
rorl
dec
sbb
es
mov
lods
add
out
movsb
sub
shll
neg
mov
negb
jno
inc
nop
iret
mov
insb
mov
xchg
xor
sub
mov
cltd
popa
int3
push
or
clc
aaa
pop
jle
xchg
stc
xchg
cmpsl
mov
sbb
sub
or
push
lods
call
adc
cmpsb
push
test
fsts
call
xchg
aam
scas
xor
cmp
mov
lret
aad
leave
test
and
inc
loop
repz
push
cmp
fnsave
rolb
stc
mov
fsubrs
mov
xchg
pop
pop
mov
nop
pushf
into
jmp
data16
ljmp
mov
xchg
sbb
mov
dec
add
dec
and
scas
ret
test
and
adc
pop
sub
ret
test
jmp
pop
pop
in
lret
lds
xor
jp
cmpsb
fistl
les
inc
or
push
shlb
and
or
sub
iret
mov
sbbb
inc
jns
add
inc
fdivs
and
mov
mov
aaa
fcomp
sti
mov
icebp
mov
sub
sbbb
loope
inc
sub
lods
push
sub
popl
mov
test
imul
lock
sbb
jns
jae
jg
rcrl
sahf
insb
stos
jbe
cmpl
pop
xor
cld
and
push
mov
mov
mov
jbe
xor
shrb
lcall
sbb
in
mov
insl
or
mov
and
call
ficomps
xchg
in
hlt
fwait
sbb
mov
in
das
cltd
sub
push
movl
pop
pop
aam
aas
out
negb
insb
sbb
sbb
mov
jo
mov
inc
mov
jl
fdivs
inc
mov
test
mov
ret
lret
test
jnp
sub
sbb
dec
xchg
xchg
icebp
loop
sbb
adc
mov
cmp
mov
out
xorb
sub
in
lret
test
push
nop
arpl
lret
mov
pop
xchg
incl
cmp
sbb
enter
sbb
xor
icebp
movsb
xor
nop
icebp
pop
in
int
mov
pop
dec
cmp
jae
inc
push
cltd
push
and
xchg
jecxz
mov
in
pop
cmp
xor
jnp
jo
sarb
sub
icebp
les
out
mov
mov
fsub
cli
mov
push
mov
inc
cmp
inc
lret
ss
daa
xchg
sbb
jae
pop
push
and
nop
in
or
xchg
inc
xchg
add
mov
pushl
in
fadds
dec
push
lret
leave
divb
adc
jns
or
loope
js
hlt
aaa
xchg
addr16
sbb
into
icebp
repnz
xor
jo
lahf
sub
loop
jecxz
adc
ret
inc
ret
out
test
ret
lret
and
mov
out
or
fdivrs
mov
xchg
mov
outsb
jl
or
lahf
push
inc
clc
daa
popa
addb
xchg
repnz
popf
in
or
stos
sbb
xchg
js
aas
jo
push
add
ss
lret
pop
leave
call
cltd
pop
push
pop
jo
mov
pop
sbb
fldenv
stos
bound
int
push
ret
mov
fs
scas
xor
cmp
or
lods
lahf
pushf
ljmp
mov
jb
sar
mov
inc
cmp
jo
and
jnp
pop
or
in
movsb
int3
mov
movsl
sub
mov
ljmp
push
push
shrb
std
adc
out
js
testl
repz
sub
lahf
mov
fcoms
push
or
mov
test
pop
sbb
pop
xchg
cltd
add
lahf
push
loope
inc
dec
xchg
fsub
gs
cmp
push
sti
fwait
ret
jo
and
mov
rorl
and
push
outsb
mov
push
inc
adc
xor
mov
xchg
fcomps
dec
imul
ret
jge
js
add
loop
or
cwtl
mov
lahf
add
jno
fxch
mov
inc
mov
mov
jmp
hlt
xlat
or
add
sbb
add
fsubs
add
mov
mov
scas
xor
push
cmpsl
jo
sbb
lret
mov
movsb
fwait
mulb
inc
ucomiss
jle
pop
jge
cmpsl
and
push
and
aad
ja
lods
push
repnz
subb
push
jecxz
dec
mov
fwait
dec
push
pop
addb
and
adc
xchg
mov
cmp
movsb
adc
scas
jl
out
dec
cmp
jns
push
dec
dec
leave
mov
jle
xor
fxam
mov
into
rclb
sahf
add
data16
jb
cmp
lock
scas
pop
in
lea
lea
xchg
adc
xchg
repz
mov
stc
sbb
xlat
xchg
es
dec
decb
xchg
in
jnp
inc
mov
mov
loope
cmc
mov
jns
sbb
mov
pop
btr
push
loope
push
pop
jl
mov
xchg
sbb
pop
dec
test
mov
mov
test
push
sbb
mov
pop
popa
mov
xor
jbe
movsl
fincstp
ds
push
andl
xchg
add
sbb
inc
jecxz
or
aam
mov
xchg
cmc
sub
adc
and
fistpll
xchg
xchg
xor
stos
xchg
pop
inc
cmc
cmpsl
lret
rorl
pop
cmpsl
mov
xor
clc
dec
dec
sti
jge
loopne
sahf
mov
mov
and
test
xchg
jp
loop
outsl
lret
cmpb
push
jb
inc
cmpsl
mov
jl
rclb
out
roll
std
pop
dec
xchg
int
fwait
shlb
arpl
push
idivb
fwait
jns
xchg
inc
enter
cmpsl
lds
xor
inc
push
es
inc
mov
cmpsb
fs
xor
std
push
adc
repnz
or
or
cmpsb
ret
ja
ljmp
leave
cmp
xchg
pop
addr16
and
pusha
mov
jge
dec
sbb
fsubrs
test
out
aam
lret
jg
dec
add
xor
adc
loopne
inc
add
cmp
sub
push
jge
jmp
mov
adc
popa
popa
iret
cmpb
iret
cmp
fs
and
ror
lret
scas
push
aas
aam
rorb
out
test
dec
in
jecxz
pop
mov
imul
sbb
add
orl
inc
push
cwtl
mov
popf
inc
scas
in
stos
insl
mov
mull
mov
test
mov
push
pusha
xchg
nop
adc
sbb
inc
imul
push
cwtl
daa
test
jns
and
js
clc
sub
xlat
movsb
inc
pop
fdivs
addr16
push
and
cmp
stos
clc
add
aad
test
xchg
testl
push
lahf
mov
adc
or
mov
out
jecxz
inc
mov
lcall
sbb
popa
daa
inc
inc
imul
jae
push
ds
xor
popa
std
imul
or
cltd
sub
xchg
cmp
jmp
lcall
mov
out
lret
movsb
and
and
jb
hlt
movsl
jmp
and
iret
xchg
test
out
sub
stc
mov
mov
sar
into
jnp
insb
cmpsl
mov
inc
and
add
xchg
bound
test
out
pop
in
pusha
jbe
out
xchg
in
mov
sub
test
push
sub
fidivrs
hlt
mov
inc
push
jecxz
movsl
nop
sub
insl
mov
adc
inc
in
sbb
roll
out
or
cltd
pop
xorps
and
aad
outsb
repz
repz
add
or
in
mov
pop
jl
in
mov
xlat
cld
in
xlat
push
or
insb
mov
popa
push
mov
imul
or
adc
nop
shl
mov
ud0
mov
jnp
sub
les
in
or
repz
pop
cmp
push
adc
loop
outsb
mov
mov
push
add
inc
in
ja
adc
xor
or
stos
mov
jge
fcmove
mov
mov
ret
cltd
push
cmp
and
pop
cltd
sub
lcall
sub
mov
sbb
push
and
popa
jbe
adc
lea
cmp
or
insl
sub
and
pushf
repz
push
sub
add
pop
cmp
test
adc
mov
ret
adc
mov
xor
es
rcrl
aaa
stos
out
dec
jnp
push
mov
loopne
arpl
cltd
jne
xor
jge
clc
jns
jl
pop
and
pop
int3
daa
fs
or
mov
cmpsb
sti
or
loope
ret
mov
mov
orl
ljmp
push
lock
dec
cli
inc
ret
cmp
mov
loop
js
shl
fimuls
aas
loopne
movl
outsl
mov
adc
lcall
fwait
out
int
fs
cmpb
int
and
scas
dec
loopne
cmp
dec
outsl
mov
mov
push
mov
adc
jbe
outsl
pusha
pusha
cs
jb
xlat
popa
stos
add
fiaddl
jg
shll
popa
sbb
aad
pop
stos
dec
ja
hlt
jnp
push
aas
dec
sahf
decb
stos
int3
push
mov
lcall
aam
sub
inc
xchg
pop
and
sub
pop
sbb
test
jp
js
fdivrs
test
and
sub
std
dec
xchg
lds
adc
fbld
jae
ss
cmp
aam
pop
inc
xor
loopne
fnsave
test
push
push
pop
out
xor
mov
cli
outsl
cwtl
cmpsb
sub
aam
cli
xor
xchg
mov
popa
ljmp
xchg
xor
pop
mov
flds
push
repz
sub
loop
inc
jge
out
mov
and
fwait
and
out
push
notb
out
jle
dec
push
leave
sub
rclb
test
jecxz
inc
icebp
fadds
insl
push
adc
test
cmp
popf
outsb
xlat
xchg
mov
xchg
add
in
sub
push
shld
inc
pop
and
jmp
adc
mov
adc
sbb
js
pop
push
inc
loopne
or
std
push
cmp
jg
repz
sahf
dec
dec
xor
gs
and
inc
cli
jae
rcll
ret
ja
xchg
pushf
pop
outsl
aad
dec
cmp
xor
sbb
adcl
decb
aas
mov
adc
push
lcall
dec
out
out
jmp
mov
jg
mov
out
lods
mov
adc
or
mov
loop
lock
fs
in
cmp
daa
cmc
push
and
enter
popa
das
cmc
lea
movsl
and
jg
pusha
pop
rorb
push
movsl
jecxz
mov
push
loopne
cmp
in
pop
cli
leave
jmp
jno
dec
add
das
bound
mov
and
fstp
and
inc
lcall
int3
push
inc
push
mov
ljmp
xor
lret
sbb
jmp
shll
out
out
lret
dec
rcrb
in
mov
insb
add
jg
inc
adc
sbb
xchg
cmp
cmp
cli
adc
ss
adcb
dec
mov
xchg
mov
xchg
iret
push
popf
insb
js
inc
test
mov
cmp
mov
in
pop
daa
jns
dec
jne
jno
cmp
push
sub
movsb
bound
xchg
bound
aad
and
xchg
inc
cmp
add
xchg
jmp
std
cmpsb
jno
mov
divb
xlat
pop
sbb
icebp
outsb
daa
or
data16
push
jb
scas
icebp
cmc
repz
jo
jbe
mov
cmc
jno
push
pop
dec
rcrl
push
and
iret
sub
dec
inc
arpl
mov
dec
and
aam
pop
add
xchg
mov
add
cli
sarb
movsl
mov
test
shl
sub
add
mov
lds
push
cmp
push
mov
cmpsl
pusha
push
lcall
xor
pop
int3
sbb
or
jp
mov
ror
or
adc
xor
inc
mov
rorb
mov
movsb
mov
jbe
pusha
adc
test
mov
xchg
push
jge
out
sbb
sub
pop
lahf
dec
and
jle
insb
daa
popf
fmuls
xor
and
in
out
movl
int3
push
in
lds
cmpsb
jecxz
mov
int3
cmp
inc
inc
pop
push
adcb
scas
xor
cs
lods
add
repz
idiv
pop
fisttps
cmp
test
repz
out
xchg
jns
outsb
clc
lahf
lock
mov
xor
or
stos
or
lea
jl
pop
mov
into
insb
adc
or
jb
ss
testl
adc
call
cld
xor
jg
mov
punpckhdq
les
sbb
and
xchg
pop
stos
lea
in
xor
and
jmp
dec
popf
test
cmc
mov
cmpsl
cmp
test
bound
or
dec
sub
ja
popa
bndmk
cmc
pop
int3
adc
push
roll
enter
mov
xor
sbb
jl
ret
adc
mov
sub
inc
xor
xchg
or
test
popf
jmp
movsl
and
jmp
mov
mov
mov
or
out
lret
cmc
test
push
push
cmp
and
mov
push
loop
adc
outsb
pop
xchg
cld
mov
inc
leave
cmp
mov
cwtl
xchg
repz
jge
popa
lds
mov
adc
mov
adc
jp
adc
lods
push
mov
lret
cmp
mov
mov
cmp
mov
sub
push
es
jo
ror
sbb
fldt
test
cwtl
sbb
test
or
mov
imul
out
pop
jno
rorb
sub
inc
out
adc
rol
jg
push
insl
mov
inc
lods
inc
mov
pop
outsb
rcr
das
xchg
sub
cmp
inc
push
cmpsb
jmp
add
out
adc
ljmp
jp
xchg
int
or
push
sbb
hlt
sbb
ret
xorl
mov
jg
sbb
xor
cmc
mov
sbb
arpl
and
inc
fsubl
jo
cmp
cmp
jno
not
icebp
repz
enter
repnz
jmp
mov
dec
inc
mov
push
and
nop
pop
test
jmp
enter
jmp
outsl
inc
cld
test
aaa
std
inc
push
sub
out
repz
jecxz
mov
in
xor
shll
and
out
sbb
iret
xor
aaa
out
jb
add
dec
sub
mov
lock
mov
push
jmp
ljmp
insl
xchg
cmp
out
rorb
pusha
pop
pop
mov
lret
inc
pop
mov
inc
icebp
push
pop
push
es
enter
test
sarb
xchg
in
aaa
insb
fstpt
icebp
ja
bound
pop
daa
mov
sbb
les
aam
adc
push
dec
mov
fldl
pushf
xchg
mov
and
lods
lahf
push
lret
fnstenv
sub
jne
outsl
data16
and
jg
mov
movsl
inc
inc
dec
cltd
ss
dec
pop
sarl
mov
mov
es
pop
mov
xlat
or
cmp
sub
out
stos
repnz
filds
sti
roll
lret
sbb
or
imul
fwait
fstl
mov
insb
stos
cmpsl
sbbl
dec
mov
dec
es
lods
sti
test
in
cmp
jo
clc
in
mov
jo
notl
daa
in
out
jnp
fwait
clc
cli
xchg
push
das
xlat
andb
jbe
das
and
cmpsb
sahf
mov
divl
movsl
mov
xchg
cwtl
sbb
adc
iret
repnz
or
sbbl
shl
dec
dec
cmpsb
sbb
jl
pop
shll
sbb
fists
jns
dec
lods
pop
mov
jg
out
inc
mov
xchg
and
imul
mov
mov
in
xor
pop
mov
rorb
out
mov
cwtl
fsubrl
push
add
ror
mov
mov
push
cli
add
pop
or
dec
clc
inc
nop
lahf
mov
pop
testb
xchg
aad
scas
mov
ret
xor
std
mov
sar
mov
push
mov
stos
xor
in
pop
jmp
cwtl
mov
adc
xor
ret
int3
sbb
fwait
cltd
xchg
dec
fpatan
xor
fs
jns
jle
fstsw
and
shlb
fnsave
mov
cmpsl
lods
pop
ds
mov
xchg
jbe
adc
mov
cmp
inc
pop
fldl
mov
mov
inc
add
and
cmpsb
dec
mov
call
dec
shrl
clc
lahf
jne,pn
mov
or
mov
pop
fsubr
stos
pop
cmc
leave
fwait
mov
icebp
xor
xlat
out
add
stos
xchg
mov
mov
and
out
sahf
cmp
push
fs
sbb
inc
mov
out
mov
dec
clc
adc
inc
fidivl
pop
lahf
je
jns
lock
cmp
lcall
mov
stos
mov
imul
icebp
mov
jb
cmpsl
je
insl
xchg
xor
out
out
push
cmp
push
popf
lret
sti
lcall
leave
stos
pop
push
sub
lcall
out
popf
xor
push
sbb
lret
cmp
imul
mov
sbb
fwait
and
ss
dec
mov
xchg
lret
loop
sub
outsb
pop
xor
rcrl
xchg
in
orl
fwait
mov
sti
jb
mov
cmpsl
mov
sub
xor
dec
xchg
dec
xor
or
lcall
aad
outsb
lcall
xchg
cmp
pop
jp
adc
test
pop
shr
xor
cmp
bound
lds
outsb
adc
frstor
mov
subb
pop
cwtl
push
jnp
xchg
cltd
in
lock
and
adc
adc
nop
mov
scas
negb
jb
push
fs
sarb
cmp
popf
jle
and
mov
jp
loop
add
mov
fisubrs
neg
lds
xor
repnz
bound
scas
das
cwtl
clc
aaa
lds
ja
cwtl
addr16
inc
in
cmpsl
jno
mov
pop
jle
lods
in
adc
movsb
or
test
in
or
movsb
fucomi
cs
cmp
cltd
rorl
in
lcall
xlat
xor
leave
icebp
pop
dec
test
push
add
adc
jle
push
out
xchg
xorl
cwtl
dec
idivl
dec
pop
fcomi
mov
test
mov
jnp
mov
mov
insl
mov
push
das
fs
xchg
clc
iret
les
mov
imull
mov
inc
in
repz
fsubr
fmuls
mov
dec
jne
dec
addr16
jmp
jecxz
jns
and
push
into
cmp
mov
mov
faddl
mov
jp
sub
leave
xor
mov
xorl
sbb
in
mov
push
out
lahf
stos
ss
push
dec
je
and
ret
jbe
sahf
pop
sbb
nop
jecxz
adc
scas
out
sub
out
or
lahf
sub
daa
push
push
dec
int
js
dec
and
lods
aad
cmp
add
iret
mov
pop
ficoms
mov
add
dec
push
stos
repnz
nop
shlb
or
aas
pop
adc
sub
inc
fsubrl
add
mov
leave
andb
repnz
dec
jmp
mov
iret
mov
mov
cmp
cmp
cwtl
into
cwtl
mov
pop
mov
lahf
mov
jo
outsb
dec
inc
add
mov
enter
cmpsl
cld
lock
cmpsl
dec
xchg
fadd
ficompl
push
mov
fs
cld
adc
lock
xchg
adc
xchg
xor
fcmovbe
test
xor
in
lret
out
and
sub
out
pop
jmp
lahf
fst
sbb
dec
mov
lea
cmpsl
in
popa
cmp
push
sbb
repnz
push
aad
rep
jge
jno
xlat
test
jmp
sbb
adc
xchg
and
sub
add
add
shlb
mov
aam
or
add
cmp
out
out
fiadds
jo
inc
push
mov
ss
mov
push
xchg
pop
sbb
or
mov
arpl
mov
arpl
call
xcrypt-cbc
cmpsl
aam
dec
cmp
xchg
filds
mov
pop
sub
xchg
or
aas
cmpsb
roll
inc
inc
pmullw
les
pop
jl
arpl
dec
cmp
lods
inc
cld
or
scas
xchg
lods
aad
aas
fucom
stc
lret
cmp
stc
mov
mov
dec
inc
in
cmp
lea
jp
sti
push
sub
lcall
popf
fsubrl
movsb
in
dec
stos
into
clc
sub
dec
jno
xchg
sub
push
pop
dec
mov
jbe
jg
lret
xor
adc
fldl
add
push
or
mov
mov
iret
jg
cld
or
jnp
push
mov
fstpt
pop
jge
test
jbe
enter
pushaw
addr16
mov
mov
jne
jnp
in
bound
xchg
xchg
daa
push
pop
icebp
inc
test
negl
out
dec
pop
mov
jl
fdivs
xchg
fcomps
mov
mov
mov
mov
test
xchg
xchg
js
pop
out
out
or
mov
pop
scas
ljmp
lods
pop
push
xor
stos
pop
jmp
and
sub
fiadds
cmp
jmp
pop
aas
ficompl
test
stos
push
sti
mov
pop
inc
dec
sub
scas
push
mov
test
xor
add
call
inc
fisttpll
mov
mov
inc
repz
and
out
mov
mov
test
in
jno
aad
mov
xor
pop
out
repz
jp
jp
jle
insb
pop
sbb
rcrl
divl
push
lret
insl
xchg
add
test
push
cwtl
inc
jp
les
push
xchg
xor
push
lea
adc
imulb
add
testl
test
fldt
dec
cmp
ret
pop
xchg
les
clc
push
and
pop
loope
push
mov
mov
jns
xchg
mov
mov
or
pusha
das
pop
cwtl
cltd
enter
mov
jne
jae
fiaddl
add
je
adc
lret
inc
push
jnp
test
repz
pop
pop
shrl
lds
adc
push
into
dec
inc
xchg
adc
xchg
add
daa
enter
loop
adc
jne
inc
inc
out
mov
push
cmp
enter
mov
aad
test
dec
push
add
jecxz
lret
ret
xor
mov
lahf
dec
mov
pop
jmp
aas
jecxz
icebp
call
pop
mov
fstpt
int3
nop
stos
test
call
fs
jo
aam
aas
imul
add
popf
xor
js
push
adc
push
rol
sub
add
or
movsb
in
sti
sahf
cmp
jge
xor
mov
add
pusha
sub
jb
mov
jge
inc
repz
insl
shll
or
in
loopne
inc
repnz
hlt
fimuls
xor
xor
xorl
cs
pop
adc
fbld
iret
cmpsl
lea
ljmp
rclb
fnstsw
jp
sarb
int
ficomps
testl
data16
xchg
jb
sbb
lcall
sbb
jno
jb
pop
or
lahf
popa
jmp
hlt
movsb
fidivrs
and
sub
push
dec
aam
jmp
adc
mov
dec
loopne
pop
scas
dec
daa
aad
mov
xor
adc
lods
add
jbe
pop
fldz
pop
in
shl
add
in
push
out
mov
xor
sbb
mov
leave
lret
xor
pop
xchg
ja
lods
stc
mov
test
leave
mov
mov
mov
int
sbb
xchg
mov
pushf
and
insl
xchg
fisttpll
aaa
add
jg
pusha
add
fistl
lcall
scas
enter
int3
std
rcr
negl
lds
rcll
push
insb
mov
clc
jl
shl
int
scas
clc
testl
inc
inc
cld
push
xchg
xor
out
lahf
cmpsl
lods
filds
add
xor
loope
pop
inc
push
cmp
inc
xchg
adc
or
xchg
dec
push
ljmp
loop
out
push
jo
pop
sub
out
aaa
cwtl
jnp
cmpsl
xor
ds
push
pop
arpl
cmp
test
andl
jmp
aaa
pop
lods
mov
and
aad
xor
jb
jns
subl
jns
idivl
pop
sti
xchg
out
insb
inc
jns
dec
pusha
fdivs
mov
lea
mov
pop
add
iret
inc
js
aas
loope
or
xor
push
inc
push
pop
mov
daa
int3
push
jne
inc
data16
fstpl
int3
loop
js
iret
jmp
loope
cmp
cmp
jnp
jno
stos
or
sub
or
xchg
lret
mov
ficompl
movl
inc
sub
lds
in
or
jae
push
mov
add
and
mov
subl
ret
lret
xchg
xorl
cltd
insl
mov
in
out
lds
rcr
mov
mov
imul
add
and
jl
mov
or
cltd
aas
lds
loope
out
mov
lret
shll
inc
mov
popa
xchg
nop
adc
imul
jnp
push
sbb
pushf
imull
dec
mov
dec
xchg
xor
repz
enter
inc
xchg
push
enter
dec
sti
or
ret
or
sahf
mov
insb
jb
inc
and
jne
push
mov
and
jg
lret
movb
push
inc
out
dec
idivl
pop
sub
mov
jno
lcall
lret
mov
ljmp
aam
popa
jno
push
int
lds
jp
sub
adc
xchg
inc
pop
pop
inc
cmp
mov
cld
or
ret
sti
inc
sbb
iret
test
or
push
jns
sub
mov
and
mov
loop
xchg
imul
jbe
xor
movsb
xchg
jle
subl
mov
das
push
or
lds
cs
or
sbb
and
mov
aas
inc
dec
imul
fmuls
shll
repnz
and
imul
aaa
sub
in
and
sbbl
mov
popa
inc
imul
fistl
cmp
add
cli
xchg
jno
jp
scas
sub
add
jo
mov
enter
shlb
mov
lds
cmp
add
cmp
lods
cmc
lea
lret
in
fstps
xlat
xor
lret
roll
lods
test
xor
and
mov
ja
loopne
xchg
cmc
cmpsb
in
shll
push
mov
xor
push
mov
or
xor
lahf
jecxz
insl
mov
or
dec
lds
add
and
mov
dec
andb
lcall
std
loop
shlb
xor
outsb
sub
fs
dec
shlb
fistps
lret
rclb
je
pusha
ja
inc
outsl
fcomip
cmp
sub
cmpsl
movsl
nop
pop
and
gs
jp
and
push
dec
jnp
or
lret
fisubrl
in
flds
dec
jo
icebp
int3
lods
cwtl
test
push
add
je
notl
xor
mov
stos
lods
add
xor
repnz
cli
xor
cmpsl
dec
sub
ljmp
mov
enter
sub
xor
ret
icebp
test
lret
pop
addr16
mov
insl
loop
icebp
cmpsl
pop
pushf
mov
xchg
push
pop
adc
xchg
cmc
movsl
pop
movsb
mov
sbb
idivl
mov
sahf
out
sub
stc
stos
inc
repnz
and
mov
in
dec
dec
shll
xchg
out
dec
ss
sub
push
sbb
add
or
cmp
repnz
aaa
cmpsb
or
dec
fs
pop
cmp
mov
repz
or
pop
push
push
pop
stos
jb
mov
rcr
add
fistps
lea
sahf
aam
sub
loope
lock
arpl
mov
add
adc
push
dec
les
das
arpl
ss
xchg
imul
out
leave
sub
stos
addr16
add
sbb
lock
lock
mov
sysret
mov
ret
push
sbb
in
push
push
cmp
js
mov
lds
inc
lea
fidivrs
add
hlt
xchg
jnp
punpckldq
mov
jg
mov
adc
ss
xor
xchg
mov
hlt
push
jb
test
push
hlt
jnp
clc
t1mskc
cmc
leave
mov
enter
cld
insb
scas
clc
daa
pop
aas
mov
pop
imul
mov
xchg
aaa
outsl
js
pop
xorb
outsb
mov
rcrl
lahf
adc
pop
in
iret
xchg
gs
call
sbb
rcrl
fsubp
call
jae
sub
adc
out
xchg
or
push
inc
cmpsl
cmp
push
mov
std
jae
cmp
ljmp
or
mov
inc
or
xor
cli
hlt
or
loopne
pop
mov
dec
sbb
jp
xor
xchg
pop
pop
test
pusha
pop
add
xchg
lahf
mov
outsb
imull
fcoml
adc
pushf
insl
xchg
movsl
adc
decl
lahf
sbb
mov
loope
in
pop
addb
mov
mov
xchg
pop
sbb
sub
or
cmp
jae
inc
lret
test
lret
mov
sub
mov
jne
fcoml
shll
lret
jg
sub
stc
xor
jmp
mov
cmp
dec
mov
dec
mov
es
lods
lods
lret
pop
or
clc
push
cwtl
sub
mov
inc
and
xchg
jle
shrl
sbb
fldt
add
inc
pop
andl
dec
stos
pop
setb
jae
popl
jmp
call
and
and
fstps
mov
call
or
rol
dec
add
mov
hlt
jg
loope
fadds
add
testl
sub
adc
adc
add
rcll
stc
fistl
xchg
cmp
les
sbb
cmpsb
rolb
arpl
movsl
imul
inc
inc
hlt
lds
push
dec
in
loopne
push
and
add
insb
mov
outsl
fwait
icebp
or
or
fbstp
sbb
enter
cltd
jne
sti
addr16
inc
cmp
inc
out
jle
movsl
iret
adc
fidivrs
lods
or
inc
fcmovu
add
cwtl
mov
mov
test
jo
sub
cmp
jno
xor
xchg
and
lret
ficoms
andl
jne
add
movb
fstpt
pop
out
scas
arpl
mov
lds
fildll
decb
add
inc
aas
sub
adc
mov
dec
sbb
sbb
insl
popf
lds
sahf
and
out
es
ja
or
dec
test
cmp
shlb
lods
xor
push
arpl
pusha
movsl
mov
pop
sbb
out
jo
push
or
dec
movsb
movsb
sbb
jne
aas
adcl
mov
fistpl
xorb
in
xlat
add
jge
sub
pop
inc
mov
sbb
mov
add
sub
inc
xchg
dec
or
test
xchg
rclb
mov
pop
mov
push
inc
cmp
cmp
dec
insl
dec
cmc
loopne
xchg
jge
sub
mov
inc
add
mov
mov
dec
sbbb
xlat
and
test
hlt
pop
or
jno
sub
sti
adc
jns
add
add
cmpsb
sub
in
in
ja
mov
loopne
out
movsb
xchg
mov
sub
aas
jg
adc
jg
dec
sbb
push
andl
out
inc
push
pop
dec
pop
sbb
stos
mov
jb
call
and
fwait
cmpsl
mov
xchg
pop
loop
xor
iret
inc
add
je
cvtdq2ps
pop
shr
insl
leave
cld
pop
mov
stos
lret
sbb
pop
movsl
xor
ja
dec
gs
stos
sub
mov
test
dec
cwtl
inc
sbb
loope
repnz
sub
adc
fiadds
insl
mov
lds
xor
mov
mov
int3
mov
aam
and
or
inc
mov
push
push
and
rolb
negl
xchg
xor
pop
out
loop
add
jge
inc
les
leave
scas
out
and
call
pop
test
add
push
mov
xchg
shrb
mull
fidivrs
xchg
aaa
dec
leave
fs
pop
xchg
push
add
pop
sub
mov
cmc
and
inc
out
add
mov
mov
fldenv
test
inc
int3
sarl
or
adcb
mov
pop
js
stos
in
push
int
add
rorb
dec
and
imulb
and
cs
dec
sahf
push
cmp
cli
ret
pop
jae
addl
mov
push
movsb
dec
mov
ror
test
mov
or
adc
jo
mov
fdivrl
cmpsb
dec
xchg
ss
ss
sbb
inc
iret
inc
roll
ret
out
push
pop
imul
sbbl
outsl
xor
out
scas
jnp
shrl
jg
and
dec
loop
pop
push
add
and
test
sbb
ds
jbe
cmc
shl
mov
ror
iret
icebp
sub
jl
rclb
sbb
or
aad
push
mov
push
sub
jnp
aas
iret
cmp
clc
and
popa
int
cmp
shll
pusha
mov
gs
insl
cmpsl
jb
cltd
jmp
pop
push
scas
mov
lock
out
inc
xchg
cli
or
inc
stc
testb
mov
pop
cmp
push
sbb
stos
or
fsubrl
mov
adc
add
imulb
jle
ja
lcall
jmp
inc
aas
testb
mov
imul
mov
movsl
xlat
sbb
mov
add
stos
mov
sbb
fcomps
and
xchg
cmp
les
outsb
in
add
sub
in
mov
pushf
inc
pop
inc
mov
popa
mov
in
dec
push
daa
pop
es
add
push
repnz
fadd
out
test
bound
xor
cltd
sub
lahf
rolb
sbb
pop
gs
or
or
or
lods
popf
imul
mov
xchg
mov
test
std
jl
xchg
sti
xor
cmp
clc
repnz
enter
test
add
sti
mov
insb
iret
repz
adc
push
and
sub
mov
mov
adc
jge
or
je
pop
shl
sbb
addb
xchg
inc
frstor
mov
js
pop
fdivs
std
xchg
jmp
test
lock
inc
push
insb
xchg
adc
repz
out
mov
insb
inc
stos
fidivrl
jmp
stc
or
ljmp
std
xor
insl
in
mov
mov
dec
push
cmpsl
and
mov
mov
or
add
xchg
mov
or
adc
mov
repnz
inc
sbb
xchg
cltd
lods
into
in
pop
jle
lret
pop
xor
aam
mov
rorb
aas
jmp
inc
pushf
daa
loop
aaa
and
jmp
leave
popa
jle
xchg
jecxz
cmpsb
adc
pop
lock
shl
repz
fdivr
pop
xchg
cmp
jecxz
enter
dec
leave
pop
nop
das
movsb
lret
stos
sub
push
aad
sub
push
xchg
imul
lret
pop
test
imul
loopne
pop
dec
mov
lods
addl
jae
loope
fs
cmpsb
cmp
push
pop
popf
xchg
mov
add
pop
loope
mov
cmpsb
out
ds
push
notl
lods
sarb
cmp
xor
out
les
cmp
subl
and
stos
mov
fmull
sbb
test
arpl
pop
cmovb
mov
sub
inc
clc
fmuls
sbb
dec
sub
cli
cmpsl
repz
iret
pop
mov
in
mov
lret
mov
pop
imul
int
sbb
fs
sub
xchg
dec
lods
jne
cmp
lds
mov
nop
int3
inc
stos
in
sub
lret
out
cmp
mov
aam
flds
or
shll
sti
call
inc
adc
les
enter
ret
imull
data16
std
push
pop
dec
cmc
inc
sbb
cld
nop
icebp
mov
mov
mov
push
inc
mov
aad
jp
repnz
js
clc
jle
and
jns
lret
jle
push
cmp
andb
arpl
cld
aaa
imul
hlt
out
in
add
add
popf
and
je
mov
stc
and
cs
inc
xlat
xchg
lcall
das
rclb
xchg
scas
jp
stos
cmp
push
test
pop
add
in
add
loope
inc
jp
fucompp
inc
data16
xchg
arpl
es
cwtl
cmp
xchg
loop
dec
ss
xor
add
add
fcoml
es
xchg
push
jle
stc
xlat
sbb
in
fcom
push
mov
pop
orl
in
pop
test
push
push
cmp
adc
pop
inc
sbb
pop
inc
or
jb
clc
mov
lret
sub
in
pop
rol
push
lret
mov
dec
nop
stc
xor
pop
mov
mov
mov
aas
int3
jle
xchg
xchg
adc
mov
popl
inc
lret
call
clc
xor
push
dec
insl
mov
mov
mov
lds
dec
adc
pop
add
push
pusha
or
ret
jno
out
dec
sarl
test
jl
ja
lods
sub
std
dec
inc
xorl
mov
nop
xor
push
mov
rcrl
movsb
cmp
mov
add
add
subl
orl
dec
adc
repnz
pop
leave
and
hlt
jae
mov
jbe
cs
xor
sub
mov
mov
outsb
jb
lods
and
dec
out
filds
mov
fcmovb
push
lods
mov
arpl
fcmovb
dec
fiaddl
pop
dec
popa
pop
pop
mov
add
add
clc
scas
push
mov
push
push
in
dec
xchg
xchg
cmp
mov
xchg
mov
xorb
xchg
sbb
lret
loope
aaa
mov
push
sbb
sub
or
adc
xchg
xchg
out
int
xor
insb
ficoms
fwait
dec
iret
mov
mov
js
jl,pn
add
loope
push
mov
push
inc
pop
clc
stc
push
mov
out
mov
inc
xchg
fisubl
mov
mov
arpl
mov
hlt
daa
jle
andl
mov
or
jb
push
into
dec
push
outsb
jge
outsb
daa
in
push
mov
pushf
lock
stc
xchg
rcrl
lods
jbe
not
flds
push
int3
mov
xchg
dec
int
mov
pop
push
adc
pop
cwtl
movl
ss
sub
mov
fldl
mov
pop
cwtl
mov
sub
inc
daa
outsl
cmp
shrb
adc
fwait
in
pop
jne
scas
or
mov
fdivs
out
inc
adc
sti
mov
scas
xor
out
in
push
cmpsb
out
mov
shll
frstor
imul
scas
push
dec
pop
aad
sub
sahf
sub
mov
les
movsl
cmpsb
std
cwtl
std
in
sbb
ss
scas
push
add
xor
adc
in
scas
dec
or
dec
ds
jle
aam
lcall
roll
xor
xor
aam
jns
xchg
mov
or
aad
jno
mov
scas
nopl
popf
shlb
cli
cmp
push
inc
jmp
xchg
scas
shrb
mov
xchg
pushf
ret
cwtl
iret
dec
int
adc
xchg
or
xor
int3
adc
lock
je
inc
jo
jg
in
sbb
orl
iret
jb
xor
inc
dec
xor
mov
jns
xor
mov
imul
loope
push
test
jb
fs
out
sbb
popl
mov
ja
inc
fmull
pushf
std
xor
push
movsl
gs
leave
fcoms
icebp
icebp
jns
xchg
stc
lea
xchg
mov
out
into
movl
movsb
test
mov
gs
les
out
test
cmp
in
ss
in
pop
or
cmp
test
mov
enter
sbb
rorb
movsl
inc
pop
push
ficompl
mov
jbe
enter
and
or
loopne
jmp
insl
push
xor
cmpsb
popa
mov
pop
shlb
mov
xchg
roll
push
sbb
test
inc
ficomps
imul
xchg
mov
fcompl
and
mov
or
or
push
mov
xchg
mov
fwait
jnp
sub
fistl
jo
dec
aas
addr16
aam
sbb
push
pop
or
jo
rorl
ljmp
pop
das
xchg
push
nop
addr16
mov
idivb
nop
addr16
sbb
movsb
cmpsl
sub
push
out
outsb
inc
in
xchg
sub
xchg
jae
ficompl
cmp
or
or
int3
cmp
adc
and
test
and
lret
inc
adc
cwtl
insb
arpl
mov
pop
sahf
mov
push
cmp
pop
jns
mov
int
inc
and
xor
pop
xorb
in
mov
xor
cmp
filds
sub
cmp
push
dec
pusha
or
pushf
inc
dec
mov
sti
arpl
in
scas
cmpsb
mov
fistps
imul
mov
push
aaa
mov
mov
cmpsb
sub
inc
inc
adc
les
jnp
or
shrl
or
jnp
jno
andl
sahf
andb
pop
mov
pop
push
inc
js
cmp
jb
ret
lock
daa
and
cmc
mov
mov
imul
pop
fidivl
scas
mov
inc
lock
ficoms
add
mov
aaa
dec
out
cltd
std
in
call
ds
fcomps
push
lods
pop
jp
lahf
cmp
ss
mov
jmp
popa
mov
mov
adc
dec
mov
jae
fdiv
jg
mov
add
mov
lods
or
xchg
insb
inc
fs
or
adc
dec
data16
fdivrp
cmp
test
cmp
loopne
and
std
rcr
icebp
cli
lret
repz
pop
xchg
movsl
popa
stos
ljmp
call
pop
adc
stos
dec
jge
xor
mov
pushf
ds
and
push
mov
mov
aad
push
fxch
aaa
pop
out
insb
imul
lcall
mov
inc
xlat
pop
sub
mov
push
xchg
movsl
sub
leave
dec
cmpl
aas
ja
xchg
ret
xchg
and
aam
fistl
negb
pop
xchg
sub
jns
and
pop
push
mov
bound
and
rol
mov
fs
add
mov
neg
cmpl
mov
in
jl
insb
add
rcrb
xor
mov
int
mov
enter
es
jb
aaa
mov
stc
sti
loope
or
test
mov
mov
out
shrb
mov
and
and
int
sbb
repnz
add
xchg
push
jg
aad
add
test
jns
inc
aam
mov
fwait
lea
loopne
fidivs
jne
iret
gs
inc
pop
mov
cmc
cld
mov
mov
and
idivb
jb
add
testl
cli
cmpsb
out
sbb
sub
mov
jmp
add
jle
jbe
and
jnp
push
sarb
outsb
sub
mov
test
aaa
inc
cmc
add
push
cmp
mov
jne
test
pop
xor
hlt
push
cmp
sbb
jbe
add
add
inc
xor
bound
in
adc
loope
jmp
sub
cmp
cmp
loope
lcall
outsb
mov
push
add
mul
pop
outsl
sbb
daa
les
sub
sbb
popa
fmull
jae
sti
shrb
or
fsts
sub
cmp
sbb
mov
mov
jge
xlat
das
jg
mov
mov
cmp
push
movsl
ds
or
out
xor
orl
shll
sub
shrb
push
rcr
xchg
loop
add
shlb
mov
mov
jae
mov
xchg
cmc
xchg
mov
mov
and
mov
mov
fsubrl
int3
adc
orl
rcrb
shr
mov
repnz
popf
lea
sub
cwtl
pop
mov
jnp
and
inc
je
out
jnp
xor
call
cmp
aad
or
xor
aad
or
add
rorb
xor
das
bound
dec
das
call
rcrl
arpl
scas
out
cwtl
sbb
imul
dec
mov
dec
int
xor
arpl
xchg
sbb
mov
xor
shll
stc
fbstp
push
and
fs
mov
mov
fsubrl
and
stos
push
dec
arpl
pop
popa
stc
jae
sarb
lret
adc
cmp
lods
and
xchg
imul
inc
cmc
mov
push
push
popf
mov
nop
ds
in
lods
cmpsb
inc
xchg
outsb
test
movsb
ds
push
les
and
rcl
mov
in
inc
aam
push
movb
cmpsl
js
gs
negl
les
pop
cmp
push
cmpsb
xchg
nop
mov
push
and
add
mov
sub
jl
leave
fdivs
sub
out
cmpsl
cmp
out
dec
inc
mov
iret
lret
adc
mov
xorl
jl
rep
stos
xchg
mov
test
pop
pop
xchg
movsb
in
pop
cmpsb
rorb
stos
xor
push
mov
dec
cmp
in
repnz
fldcw
jno
adc
sbb
outsl
ljmp
or
ds
jo
enter
sahf
mov
xchg
sub
mov
ds
xchg
sub
clc
cs
mov
and
cmpsb
std
sub
mov
lcall
mov
xor
out
pop
jmp
adc
cmp
test
test
lock
leave
ds
dec
mov
test
test
sbb
mov
mov
jmp
and
mov
mov
mov
mov
push
mov
lods
pusha
fcmovnu
adc
mov
push
jl
mov
add
clc
ftst
xchg
and
aam
mov
inc
stc
movb
cmp
mov
sbb
mov
sbb
flds
roll
in
ret
pop
or
mov
scas
and
mov
mov
cmp
add
xor
insl
data16
jo
jp
outsl
push
int
mov
ret
sbb
dec
cmp
mov
sub
sbb
cmp
ficomps
mov
inc
pop
clc
jecxz
mov
ret
shl
cs
test
inc
add
xchg
lods
inc
pop
inc
adc
jbe
jno
rclb
in
sbb
shrd
mov
mov
cwtl
add
ret
xorl
cltd
pop
into
lods
cmp
and
push
push
xchg
test
jg
lods
shll
dec
je
mov
jmp
sub
cld
out
pop
sub
and
mov
lock
pop
cmovnp
mov
cmp
push
test
add
push
sub
test
movsl
loope
cmp
jg
adc
lds
inc
inc
jns
inc
mov
xor
lcall
sub
and
sbb
mov
push
cmp
adc
lods
jecxz
cmc
and
xchg
sbb
pusha
popf
xor
cmpsb
sub
sbb
sbb
mov
repnz
les
ds
js
jne
jbe
addr16
rol
cmp
fnstenv
jnp
daa
sub
fstl
push
push
int
mov
push
and
aas
adc
mov
mov
mov
cltd
dec
inc
ja
ja
es
in
insb
into
xor
dec
daa
repz
test
aad
hlt
in
jno
sub
dec
and
dec
mov
xchg
int3
lods
movsl
jno
xorb
imul
jbe
jns
pop
push
into
ret
dec
inc
in
stos
and
mulb
rorb
icebp
mov
call
adc
fwait
call
mov
lret
js
mov
xor
push
mov
shlb
add
fcom
or
sub
or
int
push
mov
leave
jo
push
sbb
in
push
cmc
jp
adc
in
sbb
mov
mov
inc
test
and
mov
dec
xchg
mov
mov
xor
nop
jb
inc
into
dec
adc
dec
nop
push
out
in
pushf
les
lcall
and
pop
sbb
jmp
in
cmp
int3
and
test
fstps
test
fldenv
mov
pop
test
fsub
jnp
and
hlt
das
mov
pop
ret
adc
aad
and
inc
fdivp
inc
lea
mov
icebp
scas
das
mov
ret
xchg
pop
out
adc
fcmovne
mov
dec
cmp
cmovae
cwtl
jae
inc
movsl
xlat
fsubrp
outsl
insb
pushf
lock
and
mov
and
ja
outsb
in
fidivrs
xor
negl
fisubs
mov
aaa
cmp
mov
cmp
adc
out
test
xchg
or
mov
aam
outsl
sbb
out
sbb
xchg
mov
cltd
jecxz
stos
scas
data16
repnz
scas
lret
lcall
ja
popf
insl
pop
or
sti
jo
fnstsw
mov
sbb
dec
jp
shrb
into
call
mov
jl
cmpsb
bound
adc
mov
mov
aam
adc
jmp
cmp
outsl
push
pop
or
sub
mov
adc
xchg
push
lock
ret
nop
pop
push
sahf
or
push
ret
inc
shrl
xchg
pop
enter
jns
jns
rorb
out
fdivr
mov
rcrb
inc
roll
inc
push
fcompl
fists
ret
sahf
stos
cld
cltd
mov
std
sub
insb
leave
sub
jnp
aas
jle
fwait
sbb
adc
xor
cltd
addr16
pop
fdivrl
inc
jno
adc
sbbl
arpl
stc
inc
jae
cmp
rorb
iret
jno
mov
fimuls
aaa
decb
lods
xlat
jae
add
outsb
es
mov
enter
out
cmc
jge
add
cwtl
push
je
mov
gs
sub
cwtl
sbb
repz
icebp
push
push
or
cmp
mov
jecxz
jl
fdivrl
xor
test
or
inc
loop
outsb
cmp
lock
jmp
cwtl
popf
imul
cmpsb
push
mov
insb
ja
cmc
cltd
pusha
sbb
xor
mov
fcomps
fcompl
and
bound
jmp
test
and
cs
movsb
adc
icebp
in
pop
pop
jg
xor
icebp
cli
jl
jae
aaa
fisubl
clc
xchg
arpl
shr
sbb
mov
push
inc
push
adc
test
and
stos
das
lcall
add
sbb
xchg
sbb
aam
roll
aaa
pop
and
jae
testb
xlat
daa
loopne
ja
push
lea
jmp
test
mov
gs
jne
xor
pop
add
stc
gs
mov
pop
mov
pause
mov
push
mov
aaa
mov
xor
push
mov
shlb
je
mov
les
xchg
por
js
mov
mov
add
adc
jno
popa
sbb
adc
adc
mov
pop
xor
jb
subb
inc
sub
rorl
mov
lret
lds
jne
adc
add
nop
sbb
mov
mov
sti
js
jne
lods
cmc
sub
sbb
repnz
fstpt
cwtl
sub
xlat
ljmp
psubsw
adcb
in
inc
push
imul
les
xchg
add
adc
add
popa
jl
pop
sbb
imul
dec
xor
push
mov
getsec
scas
fimuls
mov
xor
push
int
orb
ror
inc
add
sub
loop
xorb
sub
inc
sub
sbb
xor
jae
incl
pop
mov
mov
insb
in
or
subl
out
xchg
sbb
add
or
test
insb
out
push
adc
inc
adc
cmp
jmp
push
in
out
cmp
sub
sub
das
stos
ret
cmc
push
aas
test
inc
iret
loopne
pop
inc
iret
roll
add
jne
test
add
inc
pop
andb
mov
scas
roll
mov
ljmp
sbb
and
std
pop
jbe
test
pop
imul
out
sarl
cmp
shrb
fildll
cmp
inc
testb
inc
lret
sar
sbb
cmpsl
dec
add
push
mov
and
add
mov
or
loope
pop
enter
push
push
cmp
pop
fsubrp
adc
test
cmp
subl
insl
into
xchg
stc
enter
je
push
lret
lea
loopne
sbb
sbb
cmp
inc
mov
pop
nop
nop
ljmp
fildl
pop
and
mov
pushf
or
cltd
mov
jmp
test
adc
and
fistps
fcomps
sar
sub
movsb
sub
pop
fbld
sti
out
mov
ds
pushf
ja
out
iret
sahf
addr16
je
jne
scas
or
sbb
inc
inc
enter
js
jo
adc
stos
das
sbb
rcrl
bound
mov
shlb
pop
out
mov
mov
sub
out
inc
xchg
iret
mov
repz
popf
pop
into
in
out
or
xor
jg
mov
pop
cmpsb
jb
sub
and
fildll
outsl
enter
xchg
or
mov
loope
pusha
arpl
lahf
jecxz
adc
sbb
push
repz
dec
mov
imul
sbb
out
cld
lret
ds
lods
inc
enter
add
pop
add
adc
cs
jno
cmpsb
aam
mov
add
pop
or
mov
mov
sbb
shll
flds
outsl
mov
or
mov
pop
jae
jno
or
pushf
mov
mov
push
add
repz
vucomiss
loop
fscale
pop
mov
lret
imul
sbb
shrl
mov
mov
pop
push
into
or
jbe
xor
jno
movsb
mov
jbe
jmp
add
push
mov
daa
or
or
sbb
addl
cld
mov
add
addr16
mov
repnz
or
das
inc
inc
mov
dec
repnz
dec
pop
xchg
test
mov
ficomps
loopne
and
push
jl
jp
filds
pop
mov
mov
adc
pop
xchg
xchg
lods
sub
popa
mov
scas
mov
adc
pusha
ret
push
mov
js
cmp
shrl
lcall
aaa
aaa
xor
xorb
je
fs
jns
mov
sbb
das
add
icebp
mov
in
xchg
jp
pop
cmp
outsb
jg
xchg
in
cmp
jg
insl
mov
es
call
mov
test
aad
enter
jnp
inc
jecxz
pusha
popl
decl
add
xchg
cmp
mov
rolb
mov
fcomps
movsl
ret
int3
scas
adc
or
aad
call
jns
mov
icebp
sub
addr16
adc
mov
fidivs
mov
dec
jmp
rclb
imul
les
xor
addl
cmc
cwtl
cmp
enter
dec
cmpsl
stos
das
sub
out
xchg
sbb
sarb
je
ret
pop
jmp
add
ficoml
int
lea
std
out
daa
sub
dec
outsl
or
ffree
rcrb
xchg
mov
adc
or
sbb
mov
xchg
sbb
out
pop
lods
divl
mov
cwtl
sub
cmpl
add
lret
sbb
adc
adc
into
in
mov
inc
mov
jb
ficoms
and
arpl
out
pop
sub
pop
xor
mov
pop
mov
adc
fsubrs
xchg
mov
push
pop
and
ljmp
push
cs
push
mov
inc
stos
testl
adc
jge
fisubl
push
push
jb
xor
stos
xchg
fsts
and
mov
jno
mov
mov
lock
add
push
xchg
mov
cltd
adc
push
add
pop
mov
add
notb
push
int3
sbb
aad
xorb
cli
mov
xlat
mov
addl
loopne
aad
repz
dec
inc
mov
dec
fdivrs
inc
xlat
movsb
fucomi
push
mov
xor
fnsave
sbb
aam
cmp
jb
mov
pushl
mov
lahf
xchg
dec
stc
dec
cmp
into
or
lods
dec
lret
mov
pop
dec
xchg
lret
sbb
push
xchg
sub
jnp
push
fstpl
mov
push
sbb
inc
jbe
sbb
das
xchg
jo
fstps
sub
jl
outsl
sub
adc
jl
adc
add
mov
xchg
daa
aam
mov
out
and
popa
lods
sbb
pop
dec
lret
in
push
mov
stos
inc
inc
call
dec
add
mov
or
dec
loopne
jmp
and
xor
rolb
or
mov
jl
cmp
inc
mov
sub
xchg
xchg
add
pop
cld
mov
je
fists
shlb
xlat
mov
movsl
fnstcw
and
and
cmp
scas
sbb
sub
or
mov
sbb
fildll
movsb
inc
jle
stos
mov
ficoms
jnp
les
push
ret
fs
test
cmc
inc
inc
add
push
pushf
mov
push
mov
pushf
in
jae
aas
sbb
js
add
push
inc
fnstenv
jge
ja
shlb
or
mov
cmp
cmpsb
dec
int3
aas
pop
mov
test
test
flds
test
fimuls
push
jmp
pop
push
lcall
orl
sub
mov
dec
orb
sahf
sub
mov
jmp
add
roll
ss
and
lcall
pop
mov
mov
dec
and
stos
and
xchg
fldcw
sbb
mov
pop
fcmovu
push
testb
push
pop
mov
clc
int3
push
push
jne
xchg
jl
mov
idivb
xchg
mov
xor
sbb
scas
cs
out
das
out
lds
out
insb
dec
jp
adc
cs
pop
cmpsb
out
xchg
bound
leave
jo
pop
mov
mov
push
pop
cmp
jmp
jle
rcrl
add
iret
jbe
dec
lea
mov
pop
jge
xchg
jo
mov
xor
fimuls
testl
into
xor
xor
lret
cmp
xorl
out
adc
aam
aas
aad
pop
xor
sub
jl
add
call
jo
shrb
xlat
pusha
pop
and
icebp
push
test
or
mov
jbe
sahf
fsubp
jnp
mov
popa
jbe
incb
fistpl
push
jno
pop
mov
pop
sub
ret
mov
pop
sbb
in
push
ja
imul
sub
push
mov
mov
fisttpl
in
ljmp
xchg
mov
faddl
xchg
push
lock
sbb
add
mov
push
xchg
xchg
repnz
sbb
cmc
xchg
das
out
dec
cld
push
or
cmp
inc
fdivr
fsubrp
add
adc
mov
gs
fucomip
sub
mov
or
into
xor
xchg
adc
addr16
xchg
ljmp
inc
xchg
xor
bound
ja
rcrl
sbb
cld
push
out
pushf
dec
xchg
adc
lods
outsl
xor
inc
cmp
adc
lret
gs
sub
hlt
int3
sti
test
inc
cmc
jge
out
aad
pop
lcall
int3
sbb
xchg
lock
cmpsl
imul
mov
test
pop
idivb
fs
repnz
push
es
xchg
xchg
leave
bound
mov
pop
rolb
cs
push
cmp
scas
mov
add
push
lret
roll
push
imul
mov
in
subl
sti
clc
sbb
fwait
and
cmc
ss
push
pop
mov
imul
xchg
cmp
out
jp
test
jecxz
xchg
popa
cmp
orl
loopne
sub
mov
push
add
fnstcw
pop
push
aaa
daa
pusha
fs
cli
orb
xchg
inc
leave
iret
aad
pop
xchg
inc
cmpsb
push
cli
mov
iret
push
pop
rcll
das
xchg
push
shlb
std
hlt
addr16
sbb
jecxz
cltd
mov
out
shl
add
sbb
shrb
dec
imul
jno
xor
jge
sbbl
lods
push
dec
insl
pop
push
jb
cltd
pop
mov
imul
xlat
popa
cmpsl
scas
mov
pop
loop
mov
pop
xor
xor
in
xor
pusha
xor
aad
out
or
insl
in
adcb
cmpb
outsl
cmpsl
xchg
pop
mov
mov
scas
cmpsl
sbb
lret
mov
pop
aad
and
in
imul
mov
js
mov
inc
fcomps
hlt
repz
insl
push
xchg
outsl
cmpl
sahf
ja
xchg
je
cltd
sub
insb
stc
fs
sub
fistps
js
cld
icebp
jecxz
nop
inc
push
adcb
push
test
pop
repz
js
cmpsb
mov
dec
call
arpl
leave
testb
test
and
mov
movsb
jne
cmc
mov
mov
mov
jae
and
je
sbb
lds
xchg
imul
icebp
mov
pop
adc
sti
and
add
gs
test
stc
cli
cli
sbb
push
xor
stc
sar
cwtl
push
push
ljmp
dec
sub
iret
dec
sahf
mov
sub
out
xor
or
in
enter
cmc
insb
call
push
or
jo
mov
std
and
pop
out
mov
dec
pop
xchg
popf
daa
repz
xchg
sub
jnp
mov
mov
fs
and
fs
jecxz
jno
cmpl
in
and
xlat
sbb
pusha
in
pusha
cmp
sub
xor
jge
push
dec
scas
mov
mov
mov
jo
add
jp
jle
sbb
inc
dec
jne
pop
inc
fidivs
loopne
icebp
cmpsl
cli
leave
or
pop
repnz
out
hlt
and
mov
loopne
sbb
or
add
icebp
sbb
mov
mov
or
xor
xchg
das
call
mov
stc
leave
test
daa
dec
rol
pop
inc
cmp
out
or
xor
adc
adc
and
push
cs
pop
dec
jae
enter
or
pop
cmc
xorb
ljmp
xchg
push
movsl
push
dec
and
cmp
loopne
adc
mov
jmp
sbb
fdivl
sub
lcall
pop
mov
loope
cmp
pushl
dec
xchg
inc
stc
rcll
mov
mov
sbb
cmp
es
inc
lret
in
lods
xlat
loopne
jmp
cs
xchg
xorb
lret
clc
leave
ds
or
dec
enter
adc
xchg
shr
mov
pop
sti
bound
xor
xor
lds
fsubrs
push
pusha
rdmsr
fprem1
pop
sub
test
mov
sbb
sbb
inc
fdivr
inc
add
int3
nop
aam
add
lcall
fcomip
sbb
mov
mov
call
and
sbbb
push
pusha
xor
xchg
jl
pop
or
lods
pop
test
in
pushf
xchg
push
mov
popf
xchg
dec
jge
adc
scas
mov
mov
xchg
aas
push
shr
imul
mov
sbb
pop
nop
sarb
push
jnp
stos
pushl
mov
cmp
insl
fdivl
jg
je
jne
jecxz
cmp
rclb
sbb
lea
mov
or
xor
lret
rcll
sbb
push
sti
add
push
sub
push
xchg
jno
hlt
jne
adc
stc
inc
aad
push
xchg
jae
push
imul
imulb
jne
mov
or
sbb
out
test
cmpsl
test
in
sub
lahf
sub
fstp
daa
adc
mov
mov
adc
sti
outsl
call
and
scas
std
push
outsb
adcl
shlb
fucomp
xor
scas
jmp
pop
push
xor
loopne
into
xor
aas
sysret
jno
aas
mov
push
or
int3
repz
jle
pop
pop
pushf
cmp
xchg
xchg
and
mov
cltd
rcl
push
push
aas
leave
xor
into
jmp
adc
ret
xchg
lock
rclb
push
mov
xchg
jmp
sub
das
dec
cmpsb
push
cmp
ljmp
lea
stc
lcall
mov
jp
xchg
scas
and
ror
outsb
or
sub
fsubl
rol
adc
jo
ret
push
cmp
inc
ret
lods
rcrb
test
xchg
and
das
les
in
mov
call
cmc
jle
dec
adc
movsl
aad
xchg
fcoml
push
nop
xor
and
ret
jae
cmpsb
push
inc
push
bound
inc
sub
loope
movl
dec
mov
and
push
leave
sub
mov
loop
sub
inc
inc
mov
jmp
push
sbb
in
cmpsb
dec
pop
ss
js
ljmp
std
xchg
sub
stos
xor
out
dec
fisttpl
or
inc
sbb
fisubs
test
fwait
add
lea
add
movsl
in
or
cmp
sub
sub
sbb
cmp
ja
insl
sbb
repnz
mov
es
xor
pop
mov
and
cmp
jmp
or
inc
add
movsl
adc
cmp
inc
je
stc
in
dec
repz
xchg
fs
lds
xor
push
cmc
in
push
sbb
sbb
aad
pop
push
aas
pop
fs
add
in
shlb
repnz
cld
pop
push
push
and
sub
mov
fimull
lahf
imul
test
cmp
mov
dec
repz
xor
insb
add
shrl
stc
mov
cmpsl
movsb
idivb
mov
fstpt
sbb
in
jle
jbe
scas
fidivrs
push
int3
bound
addl
push
mov
cld
xchg
out
dec
imul
ret
xorl
fbld
mov
mov
inc
pop
lds
mull
outsl
gs
sti
add
out
pop
out
adc
popa
data16
xchg
inc
push
leave
cmp
adc
jecxz
jge
or
fidivrs
in
push
lods
pop
stos
lods
bound
dec
inc
or
push
lea
jl
push
enter
into
dec
pop
adc
jnp
push
fs
cwtl
adc
mov
aam
and
movsl
xor
mov
jb
mov
dec
mov
jp
icebp
jmp
shr
inc
cmp
cmp
jae
cmp
ss
inc
addr16
cmp
cltd
call
pop
mov
xchg
add
add
mov
filds
sarb
js
push
pop
jecxz
mov
mov
sbb
mov
nop
int3
dec
add
subl
in
push
imul
cltd
jae
int
pop
pop
inc
outsb
iret
jno
lock
das
sbb
dec
pop
cmpsb
mov
lret
loop
scas
insb
dec
add
pop
jb
clc
dec
stos
movsl
roll
pop
roll
mov
scas
inc
lahf
sbb
pop
mov
adc
sti
sub
mov
jns
dec
mov
test
gs
xchg
cwtl
adc
cli
in
adc
push
and
push
push
mov
inc
popa
xchg
xlat
mov
mov
dec
push
inc
sub
push
push
int3
or
sub
cmp
nop
gs
shlb
inc
scas
add
or
jle
push
lock
cwtl
enter
inc
mov
mov
xchg
cmpl
cmpsl
bound
adc
xchg
fildl
mov
inc
gs
gs
add
mov
lock
popl
movsl
je
insb
sbb
out
fdivl
cmp
popf
cwtl
popf
rcll
adc
enter
scas
and
cmp
dec
xlat
xor
mov
mov
clc
xchg
inc
mov
adc
rclb
hlt
movsb
mov
hlt
cs
jmp
jbe
stos
cmp
dec
call
and
jmp
push
dec
arpl
out
adc
and
sub
jp
rorl
popf
loopne
aam
xchg
mov
sub
pop
leave
cli
fcomi
fwait
int3
mov
ja
into
std
daa
pushf
int
flds
cmpsl
sbb
iret
cwtl
stc
jge
lods
sub
add
adcl
inc
mov
and
repnz
stos
xlat
pusha
imul
cmpsl
push
into
dec
xchg
sub
das
daa
std
fwait
sub
jb
xor
outsl
pop
jge
not
imul
xchg
in
jmp
sbb
arpl
xor
xlat
xchg
pop
jge
lret
inc
dec
arpl
cmp
lahf
mov
je
sbb
repnz
inc
popf
inc
or
adc
mov
imul
bound
pop
fisubrl
sbb
xor
mov
mov
aad
xchg
cld
push
outsb
lcall
lcall
bound
ss
das
sbb
leave
imul
aam
jmp
xchg
shll
push
lods
add
fnsave
data16
into
das
in
ja
bound
jmp
mov
leave
aam
loope
dec
cmp
xor
push
jmp
hlt
fwait
inc
imull
test
pop
roll
and
outsl
sbb
mov
sub
adcl
pop
dec
adc
mov
sbb
inc
sti
pop
push
jns
insl
xchg
cmp
xchg
cli
xchg
aas
mov
push
and
jecxz
stos
test
jl
lea
add
aaa
xor
or
push
lahf
sti
movsl
cld
into
inc
jl
dec
outsb
add
cmp
xchg
or
nop
xor
inc
mov
vmovdqu
mov
test
and
dec
pusha
and
mov
loopne
rcrl
xor
les
sarb
xchg
sub
leave
push
test
loopne
adc
push
mov
hlt
movsl
pop
add
gs
cs
pop
je
jg
mov
mov
or
xchg
jno
lcall
and
outsl
loopne
cmpsb
sub
mov
mov
jecxz
pop
mov
es
call
pushl
test
mov
pusha
enter
pop
mov
imul
dec
add
fsubs
fwait
cmpsl
sbb
cmpsb
in
in
and
test
ret
ss
arpl
jno
fisttpl
mov
lcall
scas
push
cs
repnz
mov
add
jmp
cmp
nop
mov
jg
mulb
les
jmp
aam
xchg
dec
subb
jecxz
adc
add
xlat
movsl
shrl
mov
mov
fmull
mov
lods
dec
ror
sti
pushf
pop
push
repz
fnstenv
mov
xchg
lret
ret
call
push
sbb
sarl
pop
cltd
xor
push
iret
xchg
lret
clc
imul
out
test
scas
jnp
and
push
inc
pop
outsl
sub
pop
mov
pop
scas
leave
adc
stc
jbe
mov
sbb
add
aam
inc
push
das
mov
fwait
or
popa
push
mov
mov
pop
roll
lods
scas
ss
inc
push
push
cmp
loope
daa
push
gs
aas
shlb
ret
jg
adc
mov
in
mov
aam
ljmp
cmp
push
add
mov
das
data16
push
outsb
cmp
das
push
add
out
lret
pop
lea
and
clc
mov
mov
pop
or
jnp
loopne
in
add
xlat
or
dec
addr16
call
leave
xchg
mov
jae
xor
or
pop
jp
dec
add
or
notb
neg
jle
inc
sub
rcrl
out
test
xor
aam
mov
ja
inc
jle
or
lock
imul
movsb
push
insl
xor
fmull
xchg
addr16
loope
xor
call
std
jb
pop
lcall
push
jge
lods
ficomps
dec
aad
add
rclb
ljmp
ss
test
fiadds
push
mov
mov
xor
mov
cmp
orb
adc
or
xchg
shufps
loope
push
inc
lret
jecxz
xchg
ret
sub
jns
ljmp
cs
into
push
pop
or
mov
xchg
mov
mov
sbb
push
push
test
call
in
xor
bound
push
and
gs
pop
shl
loop
inc
push
mov
pushf
pop
adc
mulb
ret
pop
or
pop
jb
push
in
fnsave
mov
dec
cs
dec
add
cmp
test
popa
push
dec
dec
repz
xchg
outsb
dec
jb
call
mov
aas
ja
in
and
add
repz
test
fucom
idiv
ret
aaa
inc
add
insl
fcomps
pop
imul
adc
orb
jecxz
sahf
push
pop
mov
mov
mov
lock
stos
xor
aas
xchg
mov
out
out
xchg
scas
imul
pushf
mov
sub
hlt
aaa
rorl
and
scas
fimull
mov
rcll
push
ret
pop
lahf
fs
mov
push
push
xor
stos
aad
in
add
std
pop
mov
or
inc
pop
pop
jecxz
movsb
mov
pandn
lds
mov
mov
or
add
jb
mov
int
mov
lret
dec
clc
not
icebp
sbb
out
sbb
xchg
pop
jl
cld
or
or
mov
test
popa
push
pop
cmp
stos
dec
sbb
outsl
mov
test
sbb
mov
cmp
repnz
sahf
lds
rclb
push
test
mov
jp
shrb
cmpsl
mov
into
stc
sti
enter
sub
inc
jp
mov
fwait
xor
in
outsl
stos
loop
add
cwtl
mov
adc
out
mov
xor
ljmp
dec
addb
lds
xchg
orb
jecxz
xor
add
jnp
ds
lods
or
into
fistpl
repz
add
sbb
aaa
imul
xor
aad
in
lcall
jecxz
dec
add
mov
cmp
pop
pushf
pusha
and
lret
mov
je
dec
dec
arpl
stc
add
scas
std
jno
out
sbb
cmp
flds
pop
lea
daa
adc
or
xor
jbe
fistpl
xchg
cld
or
incb
or
cld
pop
inc
aam
push
mov
fsubrs
push
xor
jns
mov
lock
xor
loopne
aaa
stc
adc
mov
or
subb
cmp
fdivp
nop
sbb
and
inc
jae
jb
leavew
adc
pop
in
int
repnz
stos
and
sbb
jp
shlb
or
fistpll
lock
adc
mov
jno
push
test
imul
test
popf
and
gs
stos
xchg
jle
jecxz
sahf
adc
daa
pop
jg
jae
fnstcw
xor
outsb
lds
xchg
lea
icebp
mov
cltd
inc
aas
mov
das
mov
dec
outsb
xor
and
dec
pop
mov
js
nop
mov
xchg
add
add
scas
test
out
lock
leave
xor
xchg
bound
in
rcrl
sahf
push
insl
mov
inc
lods
and
in
pop
jp
imul
mov
mov
aaa
ret
cmp
pop
push
aaa
mov
ljmp
gs
cmp
clc
mov
in
cmp
and
jp
mov
imul
stc
dec
data16
jg
mov
pushf
jae
rorb
jg
xchg
stos
jle
jns
jnp
imul
mov
aad
popf
xchg
push
cmp
mov
subb
sbb
mov
dec
xor
pop
mov
call
lds
inc
cmp
mov
fs
push
push
inc
test
jp
sbb
inc
ds
xchg
sarl
add
mov
shll
rorl
push
out
jl
lea
cmc
sbb
notb
int3
cmp
xchg
sbb
pop
mov
js
cmpsb
and
fcmovbe
push
js
xchg
outsl
xchg
fnstcw
mov
out
dec
lcall
fdivp
insl
adc
ljmp
jne
unpckhps
cmp
push
push
add
ja
jno
repnz
xor
movsl
jo
cs
sahf
pop
xchg
cmpsl
mov
in
gs
or
leave
dec
test
je
xchg
jecxz
sub
push
jno
ljmp
inc
movsl
mov
mov
add
mov
test
mov
scas
or
add
pop
xchg
fs
stos
inc
mov
js
cs
cmp
adc
orb
outsl
cli
xchg
push
dec
push
unpcklps
xchg
jl
stos
push
push
mov
mov
loop
jge
lea
xor
ret
test
movsb
add
adc
mov
andl
test
arpl
lcall
or
push
or
mov
and
cmp
xchg
xor
xchg
mov
mov
inc
add
je
movsl
enter
call
lahf
outsl
data16
pop
cmpsl
arpl
rcrl
loop
lret
outsb
pop
cmp
fldcw
in
scas
mov
stos
das
pusha
or
and
adc
mov
sub
icebp
or
sub
and
cmp
sahf
and
lcall
ret
in
rorb
adc
mov
pop
mov
imul
addr16
aas
push
push
cmp
clc
sub
dec
add
jnp
xor
fs
nop
mov
cmpsl
mov
mov
je
js
inc
jns
lea
lods
stos
sbb
cwtl
dec
xor
cmp
mov
mov
pop
sarl
call
fxch
mov
subl
into
adc
stos
aaa
stos
dec
in
sbb
popa
ret
aam
inc
or
fwait
insb
xchg
stc
cli
pop
xchg
xchg
push
xchg
cmpsl
adc
adc
lret
push
jno
test
dec
out
inc
jle
les
adc
xchg
lret
add
xor
sub
arpl
shlb
mov
lds
rcll
mov
adc
int
and
xchg
sahf
mov
mov
aam
enter
lcall
mov
inc
push
imul
push
test
push
ja
pop
xor
mov
ficomps
push
out
shlb
push
mov
dec
dec
stc
test
cltd
or
dec
fdivs
add
mov
push
cmp
nop
hlt
xor
adc
out
addr16
jecxz
imul
mov
out
jno
fstps
adc
stc
stos
push
test
and
mov
xor
dec
push
sbb
pop
xchg
mov
mov
mov
xor
push
fistl
dec
hlt
xor
or
fidivrl
test
popa
outsb
xchg
and
fstpl
imulb
dec
mov
iret
je
sbb
xchg
outsb
loop
int
test
enter
mov
fsubs
ret
jns
jns
jnp
or
push
jnp
sbb
jne
enter
test
xorb
cmpb
sub
in
aaa
sub
cmpsl
aam
in
mov
push
es
push
or
rcrl
arpl
xchg
lods
adc
sbb
sub
dec
in
hlt
out
mov
jne
mov
cmp
cld
mov
mulb
sub
aaa
dec
test
loop
mov
fstps
mov
pop
insb
sub
push
push
push
pop
fidivrs
mov
mov
imul
repnz
into
lcall
mov
out
ret
xchg
pop
dec
mov
add
repz
les
pop
mov
add
mov
cmp
aam
outsb
lahf
mov
shlb
cmc
pop
cmp
jle
addl
movsb
loopne
iret
mov
movsl
push
jle
xor
in
lret
std
je
repz
cmp
insl
popf
inc
sti
bound
add
aas
dec
sub
push
lods
or
jns
popf
pop
push
icebp
sbb
dec
adc
push
data16
sub
data16
in
data16
jle
cltd
sbbl
repz
imul
loopne
jae
mov
call
mov
ja
pushf
dec
push
inc
aad
test
test
lret
add
lods
out
pop
sub
outsl
push
cmp
cmpsb
jge
pop
pop
cwtl
xchg
clc
mov
mov
std
bound
push
popa
xor
popf
mov
jbe
inc
or
dec
decb
cmp
mov
icebp
sub
mov
jle
inc
jb
loop
lahf
outsl
and
or
mov
dec
xor
mov
jb
pop
outsl
repnz
inc
and
mov
cmpsb
and
add
or
or
sbb
in
sub
imul
nopl
mov
push
mov
in
in
repz
rolb
movsl
ljmp
rcrl
xor
add
mov
cmpsb
loope
or
pop
mov
outsl
jne
not
or
sub
xchg
mov
sbb
cmp
add
clc
gs
push
aad
lods
cmpsb
repnz
repz
or
arpl
fwait
push
and
repnz
popa
cmp
jae
rcrl
or
pusha
sti
bound
and
add
jmp
shlb
mov
jns
xchg
cmp
dec
aaa
xor
push
mov
add
call
xchg
or
inc
jmp
or
aaa
mov
test
jp
adc
loopne
dec
mov
jecxz
in
sub
out
ljmp
dec
in
bound
inc
cmc
pop
jnp
loope
lods
inc
inc
cld
dec
jg
pop
fnsave
inc
pop
or
xor
cmp
cwtl
dec
pop
enter
jmp
inc
fwait
adc
mov
movsl
ret
out
xor
hlt
nop
roll
lock
mov
outsl
push
add
clc
pop
pop
loope
xor
fists
adc
cmp
mov
push
mov
adc
rcr
inc
insb
lea
pop
dec
inc
or
test
sub
in
sub
sbb
mov
clc
dec
add
je
mov
cli
ltr
adc
mov
cmp
xchg
pop
add
sbb
outsl
pop
pop
jp
movups
adc
ds
adc
sbb
int
in
mov
cmpsb
fsts
jge
sub
or
or
pop
push
sbb
cmp
rcl
in
xchg
inc
movsl
adc
test
loop
adc
and
lahf
dec
mov
sub
xchg
mov
scas
sub
push
sub
mov
test
icebp
setl
xor
push
pusha
pop
out
repz
and
sub
test
paddusw
aas
cmp
dec
mov
call
pop
aaa
cwtl
fs
sub
mov
jbe
dec
insl
fistl
out
inc
pop
clc
mov
jg
mov
stc
enter
push
mov
leave
sbb
sbb
stos
and
xorl
or
test
test
xor
jp
jb
fldcw
and
jg
inc
into
add
xor
pusha
lahf
sbb
push
lods
ds
add
add
pop
or
cmc
leave
push
jnp
mov
cmc
jp
inc
jecxz
aaa
sbb
jg
mov
lahf
into
pushf
adc
fs
lods
inc
lods
dec
and
ja
push
jnp
popa
xchg
lock
sbbb
das
dec
jbe
in
sub
pop
bound
sbb
sbb
mov
mov
leave
stos
jo
add
dec
and
pop
sbb
shll
lea
fwait
sahf
cltd
loopne
lods
push
and
int3
mov
sbb
in
fnsave
cmp
cmc
into
pop
js
iret
iret
xor
mov
nop
pop
jl
call
mov
inc
rol
adc
fisubrs
adc
test
push
sub
inc
cmp
push
adcl
pop
les
push
shll
cld
sbb
add
addl
lcall
push
sub
js
out
test
ss
shll
xlat
dec
dec
mov
mov
lahf
aad
xor
popa
cmpsb
xchg
xchg
jae
adc
cmpsl
insl
mov
jnp
mov
ret
mov
sbb
mov
loopne
pop
or
test
iret
dec
scas
or
repz
pop
sbb
cmp
xchg
pop
sbb
cmpsb
mov
movsl
cmpsb
pop
pop
jmp
mov
ret
in
out
out
pop
sbb
mov
dec
dec
fidivs
dec
pop
pop
jo
jecxz
mov
insl
outsb
jg
lea
pop
cli
jge
sbb
xor
mov
sbb
jae
sub
daa
mov
pop
dec
mov
mov
xor
cmp
ret
dec
mov
add
jl
stos
sbb
cmp
sbb
pop
shrb
jmp
stos
sbb
out
in
dec
cmp
sub
popa
sbbb
cmp
xchg
sub
jne
cmpsl
jnp
push
aad
dec
xchg
out
lods
mov
cltd
inc
and
sbb
mov
inc
cs
xchg
push
arpl
pop
adcb
or
int
fimuls
out
movsb
pop
movsb
jg
lahf
ret
mov
aam
rol
js
lock
sbb
or
cmp
call
leave
sub
jmp
xor
pop
mov
pop
pop
or
adc
xor
adc
push
stc
rorl
mov
xor
jle
or
clc
xchg
sub
cmc
mov
loope
cmpsb
les
xor
cmpl
xchg
push
test
lret
in
pop
scas
outsb
mov
xchg
jbe
movsl
ds
jmp
clc
inc
xor
aam
xchg
out
mov
pop
movsl
nop
aaa
popf
fistpl
xchg
inc
popf
xor
add
loop
packuswb
movsl
xor
fs
mov
xor
jge
and
fbld
insb
je
test
test
aad
adc
or
add
jp
cmp
sub
lock
pop
fcmovb
add
lahf
mov
push
push
scas
pop
in
add
pmuludq
sbb
cmpsl
repnz
ds
sbb
dec
mov
pop
mov
pop
int
mov
pop
xor
pop
mov
add
xchg
mov
or
jo
push
pusha
int3
cmc
jmp
mov
cmp
xchg
lods
out
xor
rcrb
xor
mov
cmc
inc
cmp
nop
mov
out
jmp
scas
xchg
pushf
lcall
das
adcb
hlt
add
out
cld
imul
aaa
faddl
lds
cmpsl
cmp
outsb
mov
idivl
mov
nop
loop
repnz
cmp
jne
mov
or
call
xchg
aam
xchg
mov
enter
sbb
sub
bound
push
popa
jnp
jp
aaa
ss
mov
mov
outsl
enter
test
ror
mov
addb
fcoml
mov
pop
xor
mov
push
out
scas
test
rorl
loope
push
or
repnz
lahf
sub
inc
pop
mov
andb
pusha
clc
clc
push
imul
mov
ret
sbb
mov
lahf
call
mov
jge
in
push
push
movsl
lret
out
inc
xchg
sub
stc
insb
ljmp
call
nop
or
push
mov
test
mov
xchg
dec
int
mov
or
xor
or
lcall
shll
and
mov
lcall
cwtl
loop
pop
xor
out
clc
add
mov
movsl
and
lahf
jge
scas
mov
mov
adc
aam
mov
outsb
push
adc
stos
sti
sub
sbb
shlb
lods
movsl
mov
sahf
js
in
mov
loope
fsubr
mov
cmc
add
lret
cmpsl
jae
xchg
insl
mov
cltd
testb
aad
mov
mov
push
cmp
fisubrl
pushf
imul
test
fwait
enterw
testb
cmp
pop
mov
jno
ja
mov
testb
cmp
sub
outsl
in
mov
add
outsb
inc
jno
cmp
aam
push
lods
loope
xchg
fwait
xchg
mov
cmp
sbb
daa
inc
les
outsl
xchg
pop
xor
adc
aas
cwtl
dec
rep
cmpsb
and
stos
sti
lahf
sub
push
xchg
pop
sbb
and
lods
jle
out
pushf
ja
mov
aam
mov
xchg
movsb
jl
test
xor
scas
lds
testl
fwait
nop
push
lahf
dec
push
lahf
aad
jmp
push
js
push
or
mov
popf
fs
push
sub
inc
sub
std
jg
arpl
jmp
sti
mov
ret
rclb
cli
mov
add
flds
int
inc
shr
xchg
maxss
shrb
adc
cltd
loope
repz
paddq
jno
aaa
les
filds
pusha
daa
push
sbb
repnz
imul
dec
popa
mov
fiaddl
cmp
jg
pushf
insl
test
decb
inc
lretw
insl
cmp
cmp
lock
adc
mov
push
loope
insb
lcall
jmp
push
mov
sbb
sarl
icebp
lea
test
test
jns
ss
mov
sbb
shl
fidivl
aas
ret
xchg
jle
ret
cmpw
imul
call
lcall
inc
pusha
popa
jbe
lods
out
push
insl
add
aad
mov
mov
adc
adc
int
dec
mov
lock
mov
sets
or
popf
push
jnp
in
inc
test
sbb
outsb
leave
push
add
out
and
aam
or
fwait
dec
imul
daa
or
test
dec
add
sarl
ffreep
test
in
shrl
mov
sbb
and
std
or
pop
arpl
popf
lock
in
push
inc
cmp
fldenv
mov
cltd
xchg
push
aaa
xor
decl
xchg
and
sub
test
data16
xor
jmp
dec
jo
pop
sub
mov
xchg
xchg
dec
mov
cld
push
adc
ficoml
ja
repz
aam
out
inc
mov
mov
sbb
mov
imul
ss
stos
std
push
cmp
nop
xor
xchg
js
mov
dec
sub
call
xchg
mov
push
mov
fnstsw
mov
divb
adc
xchg
das
test
inc
cltd
imul
cwtd
cmp
pop
inc
adc
mov
mov
mov
xchg
insl
and
adcl
aas
adc
cmp
mov
dec
push
in
xor
mov
clc
jae
jl
loopne
pop
cwtl
aam
dec
fwait
jbe,pt
shlb
movsb
adc
data16
sarl
add
cmpsb
scas
sbb
pop
sub
push
sub
inc
call
outsl
imul
mov
sbb
shrb
and
leave
pop
bound
fisubl
and
aad
mov
mov
cmpsl
xchg
ljmp
inc
subl
mov
pop
dec
dec
in
xchg
and
sbb
and
mov
addl
or
divl
inc
imul
xchg
or
xlat
mov
pop
scas
paddb
lock
orl
push
xchg
push
mov
cmp
or
jno
addr16
lock
push
nop
pushf
call
mov
daa
lods
sahf
or
leave
adc
imul
aam
fwait
ljmp
adc
hlt
mov
xlat
leave
fdivrl
push
xacquire
ss
jae
xchg
gs
sub
mov
inc
jecxz
push
jo
add
dec
jo
push
movsb
push
stos
add
out
push
inc
add
inc
dec
pop
lea
jmp
mov
pop
xchg
xor
aaa
xor
jo
mov
mov
aad
mov
ss
aad
mov
cmp
mov
mov
adc
xchg
insl
into
push
mov
sbb
cli
lcall
aam
cld
push
cmp
movswl
rclb
iret
jne
les
or
push
andb
je
jecxz
xor
lret
jno
bound
cmp
enter
loope
repnz
push
iret
rolb
cmp
lock
inc
pushf
mov
jnp
fs
lds
or
lret
shll
and
mov
clc
fwait
shlb
dec
add
aas
cmp
push
sti
cmp
cs
leave
shl
xchg
in
sbb
fscale
ret
jno
aaa
nop
dec
popf
insb
push
stos
aas
pop
pop
shll
mov
enter
push
and
adc
push
and
in
xor
jae
push
lds
cmp
xchg
cmp
xor
clc
or
lahf
cmp
imul
test
dec
xchg
in
and
mov
cltd
scas
ljmp
shlb
aad
lea
movsl
aam
mov
dec
inc
inc
adc
lock
pop
clc
icebp
sub
test
mov
lea
fsubrs
mov
int3
pushf
sbb
sarb
outsb
ret
jae
mov
xchg
dec
sbb
mov
jne
mov
das
xor
sub
gs
outsb
mov
sub
and
fldz
push
mov
jbe
cmp
inc
pop
imul
rep
ret
sbb
clc
mov
xor
into
in
xor
inc
mov
test
out
das
std
fldl
add
aas
mov
push
fists
xchg
popa
repnz
fistl
push
push
out
mov
mov
pushf
push
fcompl
flds
scas
sub
push
stos
dec
add
adc
loop
lods
loop
insb
xchg
dec
popa
adc
sub
repnz
add
lret
mov
out
mov
xor
adc
jp
jp
cmpsb
aaa
test
fld
stos
jo
push
shlb
imulb
mov
je
push
xchg
int
outsl
sbb
and
into
hlt
push
insl
or
sub
lds
dec
jp
xlat
dec
lea
push
xchg
mull
mov
js
cmp
out
cli
fldl
loop
inc
lret
cmp
adc
xchg
movsb
and
jge
pop
or
mov
dec
mov
pop
movsb
cmpsb
adcl
sbb
add
mov
mov
popa
sarb
mov
xchg
sahf
sbb
int
jne
sub
push
jb
je
pop
jns
xchg
push
ljmp
adc
cmc
ret
in
add
or
sbb
rol
pop
mov
scas
fldl
add
stos
notl
add
nop
push
sbb
push
and
js
sbb
mov
lea
fbstp
cld
rcrl
xchg
out
pop
bound
add
lea
xchg
pop
xor
data16
jmp
loop
imul
mov
sub
pop
push
adc
sub
jae
inc
mov
adc
lret
inc
inc
inc
lcall
xchg
pop
scas
rolb
pusha
or
fs
adc
pop
lds
mov
or
fnsave
lret
popa
sub
aaa
dec
lock
or
sub
jecxz
jg
sub
xor
adc
cmp
push
shrb
jle
std
mov
mov
out
push
or
popa
mov
mov
sub
and
pop
bound
hlt
je
add
xchg
jae
pushf
adc
cld
popf
and
mov
fidivrl
lds
push
hlt
lods
dec
add
imul
xor
stos
inc
add
int
arpl
mov
mov
mov
idivl
cmp
inc
ljmp
fists
xor
cs
mov
xchg
mov
cli
add
fiaddl
lods
add
cmp
fstpl
or
inc
lea
ljmp
js
adc
cmp
mov
out
stos
mov
not
cmp
or
jnp
inc
test
lds
out
dec
lea
and
popf
cmp
and
cs
sahf
rcrb
sub
mov
adc
push
es
mov
mov
jmp
pop
pop
add
inc
xchg
int3
and
cmp
lret
fdivrs
lea
xor
xchg
adc
std
dec
outsl
jbe
xor
inc
rorl
mov
cli
cmp
ss
into
popf
jns
mov
dec
mov
dec
mov
inc
adc
and
inc
add
test
mov
cwtl
sbb
cmc
arpl
xchg
push
aad
js
push
and
sbb
inc
or
rcll
lcall
jnp
mov
xor
adc
jle
mov
mov
out
repnz
dec
dec
mov
shll
je
adc
lahf
repnz
inc
cmpsb
andl
cld
loope
cltd
iret
lea
sbb
sub
aaa
decb
push
cmp
inc
dec
outsl
pop
out
inc
sub
inc
test
dec
insl
push
ret
in
push
mov
imul
cwtl
mov
mov
rol
loop
repnz
aam
xor
std
add
arpl
aas
sarl
cld
cmp
imul
repz
cltd
std
pusha
lcall
cltd
and
adc
pop
or
rcr
dec
pop
adc
jl
cmc
pop
test
mov
mov
sbb
pop
add
sub
ss
aam
std
jbe
mov
mov
daa
xor
cs
inc
and
pop
into
inc
xor
fists
push
pop
or
ja
push
adcl
cmpl
push
pushw
and
adc
andb
sub
sub
test
scas
xor
inc
push
mov
scas
ja
push
jne
ljmp
xor
int
xlat
sub
xchg
adcl
sbb
xor
je
pop
push
imul
mov
cmp
push
lods
push
dec
lds
jne
icebp
xor
aad
outsl
enter
mov
add
ja
test
scas
sub
sbb
mov
lahf
jecxz
jns
sbb
call
and
or
js
test
inc
pop
inc
loop
lea
mov
movsb
fidivl
repnz
cwtl
call
jno
ficomps
loope
fwait
call
dec
jecxz
mov
scas
pop
cmc
and
std
pop
std
adc
or
mov
xchg
clc
lea
xlat
adc
negl
clc
fistps
stc
mov
mov
xor
mov
es
cmp
loopne
repz
in
aad
out
xchg
lods
cmpsl
lahf
xorb
fisubrs
test
cmpsl
push
or
cmp
int
es
jl
lods
mov
lock
cmp
cld
xor
ja
mov
addl
in
mov
push
into
xchg
jge
mov
in
sahf
repz
inc
scas
sti
and
mov
sti
jae
cwtl
in
cmpsb
xor
and
mov
das
icebp
mov
sbb
adc
jl
pop
movsl
sub
xchg
sbb
jae
shl
mov
mull
loope
jmp
outsb
fidivs
add
adc
in
mov
out
icebp
push
sahf
inc
pop
inc
lret
jle
ja
adc
js
push
xlat
xor
mov
push
mov
pop
scas
ja
std
mov
aas
out
sbb
xchg
ljmp
add
dec
xor
div
call
fucomp
es
inc
lds
dec
fiaddl
xor
loope
shl
mov
bnd
xlat
gs
cltd
loopne
lods
cmp
xchg
fistps
cmp
out
jle
out
sub
scas
pop
push
clc
ret
cli
shl
int3
jae
jbe
inc
hlt
and
imul
inc
dec
inc
add
enter
clc
pop
sbb
addr16
lods
xor
test
lcall
shlb
jle
push
jb
dec
or
movsb
cmpsb
std
xchg
inc
mov
pop
call
push
jne
out
insb
aas
fwait
jg
rorb
movsl
pop
inc
test
shlb
jmp
adc
or
shrw
ss
inc
jns
sub
fwait
bound
shrl
sub
add
mov
pop
pop
push
add
out
mov
repnz
or
movsb
jecxz
daa
push
inc
cmp
int3
jnp
in
adc
dec
jae
or
cwtl
call
cmp
mov
and
cmp
dec
aad
ret
dec
dec
in
pop
aad
jmp
mov
mov
popf
fmuls
fstps
enter
movsb
rcr
dec
out
cmp
iret
rcrb
or
jo
mov
xchg
adc
lock
pop
mov
stos
outsl
jg
add
jns
and
fistps
inc
rcll
popa
in
lea
rorl
aad
stc
stc
pusha
xchg
lds
mov
sub
popa
adc
stc
adc
jne
pushl
mov
and
add
popf
mov
je
fs
inc
pushf
jne
jno
jbe
jmp
and
adc
pop
or
inc
sbb
push
gs
insb
sub
inc
adc
nop
popa
outsl
aas
loopne
enter
xchg
outsl
imul
out
lds
xchg
jnp
mov
pcmpgtb
add
enter
pop
jmp
sub
jne
jno
xchg
jb
out
jb
xlat
fisubs
ret
xchg
xchg
mov
icebp
cmp
bound
push
xor
sub
sti
je
mov
sbb
xor
xor
insl
push
jl
or
cmp
insl
sbb
ss
sbb
cmp
jl
mov
xchg
add
push
xor
daa
sub
aad
cmpl
cltd
outsb
xor
sti
sbb
lock
repz
cs
out
mov
adc
cmc
out
xor
fdivrs
test
adc
pop
icebp
mov
fnstenv
insl
mov
std
or
xchg
mov
jle
sahf
sbb
mov
ret
mov
in
adc
mov
adc
mov
mov
iret
xchg
es
sub
mov
int3
or
inc
fsubl
mov
scas
into
jb
sbb
pop
push
fisubrl
inc
jns
scas
add
clc
aaa
popf
or
int3
insl
lds
push
fildll
insb
testb
jnp
leave
ret
cltd
push
add
push
cltd
out
and
fildl
jns
mov
out
sti
add
std
fcompl
enter
jne
stos
or
sub
sarl
jns
lret
test
mov
or
mov
inc
outsl
cld
nop
sbb
mov
jae
nop
adc
push
movsl
outsb
popa
outsl
jne
scas
imul
or
lea
push
mov
test
imul
js
dec
sub
dec
popl
xor
dec
sbb
mov
mov
es
cwtl
adc
or
sub
jmp
bnd
mov
mov
hlt
push
and
jbe
sbb
mov
or
lods
clc
inc
inc
jmp
lods
lea
pop
in
das
add
add
fldt
mov
xor
loope
inc
movsl
fcmovne
leave
and
fistl
mov
pop
das
add
dec
sbb
pop
push
into
xchg
or
aad
adc
arpl
lods
sbb
aas
data16
push
pop
inc
ds
adc
cmp
lahf
mov
sar
into
mov
push
mov
dec
mov
jo
daa
js
test
xchg
mov
dec
pop
rcl
sbb
xchg
lcall
mov
xchg
cltd
add
clc
or
add
out
repnz
aaa
lea
push
and
imul
notl
sub
aad
lcall
sub
mov
push
cmp
in
lcall
test
sbb
push
push
mov
add
pop
and
int3
mov
ret
cwtl
mov
out
inc
test
jnp
mov
outsb
jmp
add
sbb
xchg
mov
pop
aad
or
mov
icebp
fucomi
sbb
mov
cmc
xor
dec
mov
data16
fisttps
sub
pop
add
pop
dec
fisubrs
mov
inc
cmp
or
mov
cmp
lahf
xor
jbe
in
pop
inc
stc
or
mov
movsl
repz
imul
divl
in
lods
pop
sub
dec
addr16
inc
enter
xor
cwtl
jge
push
pop
ja
or
adc
lret
mov
call
jl
ja
jo
les
jns
aam
mov
add
lods
push
int3
cmc
nop
popf
dec
xlat
and
cmp
insb
mov
dec
pusha
pop
mov
xor
aam
jbe
ljmp
pop
imul
sub
jnp
les
mov
enter
movups
dec
dec
fdiv
or
stos
imul
fistps
jmp
pop
xor
lret
lcall
pop
rcll
jge
insl
ljmp
das
int3
ja
test
jno,pn
arpl
push
xchg
popa
push
shr
jbe
rcl
cmpb
xchg
fcompl
loopne
mov
jge
sbb
inc
test
mov
aam
popl
inc
mov
sub
mov
mov
in
jmp
mov
lret
xchg
js
or
xchg
dec
rcrl
rcl
call
ret
shlb
fsin
fnstcw
jbe
mov
push
cmp
aaa
pop
jp
outsl
mov
or
outsb
push
das
insb
mov
bound
aaa
mov
mov
stos
mov
push
xor
das
mov
or
jge
test
or
mov
ret
flds
cmc
xlat
mov
and
ja
dec
xor
roll
std
sub
repz
adcb
jae
mov
mov
adc
or
nop
xor
scas
cmpsb
mov
pusha
lods
fdivrs
dec
adc
in
lods
in
test
push
out
mov
in
loope
jnp
pop
hlt
fwait
pop
popf
mov
test
mov
sysret
fsubrp
ret
push
lret
mov
data16
cmpsl
push
icebp
lret
mov
sahf
mov
pop
mov
out
imul
and
pushf
mov
xor
jo
push
xchg
lock
xchg
push
mov
sbb
repnz
ret
xchg
sti
sub
mov
fistps
jb
jecxz
in
lea
mov
xchg
and
mov
movsb
ljmp
mov
xchg
pop
mov
dec
adc
es
add
or
jnp
and
jbe
push
xchg
stc
sahf
jle
sub
inc
fidivs
addr16
rcrb
inc
xchg
push
and
push
cmp
push
nop
and
lods
ret
fcmovnu
push
cmpsb
add
nop
xor
popf
mov
push
sub
and
ds
test
fmull
push
hlt
lret
js
lcall
and
inc
xor
test
fsubl
sbb
sti
ret
xor
or
xor
jno
lds
or
push
xor
xchg
jb
rcrl
mov
inc
sbbb
xor
iret
js
nop
mov
xlat
popa
out
jo
outsb
fs
cmp
cmp
mov
or
arpl
and
pop
sub
ret
movsl
lods
pusha
and
bswap
orl
mov
push
inc
fstpl
or
fisttps
loopne
es
fs
into
ljmp
pop
std
pushf
jg
js
icebp
cltd
inc
fistpll
jae
pop
daa
or
in
dec
cmp
rcl
mov
xchg
push
sbb
xor
lret
jnp
dec
sbb
xor
mov
fcmovb
xchg
cmp
loope
daa
outsb
jae
mov
mov
aaa
mov
push
mulb
pusha
rol
test
inc
xchg
and
cmp
xchg
rcll
inc
mov
cmpsb
sbb
outsb
int3
call
ja
insl
fidivrl
mov
add
out
aam
cli
out
mov
fistl
xchg
jae
dec
aaa
xchg
lcall
mov
mov
movsl
arpl
fmuls
aaa
mov
inc
ds
mov
cmp
insl
dec
xlat
aam
and
sbb
sbb
push
mov
adc
xchg
inc
push
xor
lret
loope
dec
mov
pop
out
popf
insl
fdiv
add
inc
cmp
cli
bound
add
mov
mov
enter
fbld
adcb
adc
push
cs
sub
push
imul
and
and
cmp
or
fidivrl
sarb
loop
push
in
inc
mov
test
dec
fmuls
xchg
cmp
cmc
pop
in
mov
ja
sbb
mov
jle
outsb
cld
xchg
mov
mov
inc
sbb
jg
xor
jns
addl
nop
in
sub
movsb
sub
aas
out
in
xlat
dec
cmp
into
jbe
icebp
mov
push
prefetch
das
pop
dec
mov
xchg
mov
adc
xlat
push
repz
inc
in
dec
adc
loopne
jge
mov
add
jl
push
je
sahf
aas
int3
push
inc
xchg
mov
push
jle
and
in
aam
daa
jae
inc
xchg
xchg
jns
test
cmc
push
push
in
xsaves
dec
pusha
sub
in
ret
sub
popf
dec
outsb
mov
hlt
pop
adc
xchg
test
lods
mov
xchg
inc
push
dec
mov
xchg
mov
jecxz
pop
fdivrl
add
pop
loop
pop
sahf
jo
mov
adc
push
lret
clc
sub
xchg
jle
loopne
pop
mov
or
mov
jo
push
icebp
pop
popl
js
xchg
mov
mov
dec
fidivrs
mov
dec
arpl
in
jno
add
nop
in
adc
cwtl
adc
jl
into
int
into
fs
fwait
in
inc
clc
sub
les
data16
mov
jp
sbb
lock
mov
iret
std
cmp
shlb
dec
imulb
sub
lret
notl
aas
or
rol
pop
outsb
in
add
stos
int
in
imul
mov
add
out
roll
push
and
ss
je
jecxz
daa
pop
xor
jl
inc
lahf
arpl
push
fsubs
loop
push
mov
mov
and
dec
push
push
insl
rcll
es
mov
dec
push
pop
mov
sahf
and
std
xorl
dec
shll
data16
sbb
insl
addb
jmp
pop
sbb
cmpsb
insb
movsl
mov
dec
adc
popa
add
xchg
fcompl
mov
gs
nop
int
jecxz
or
adc
mov
cs
jbe
lea
ds
data16
xor
inc
std
loopne
sub
repnz
push
test
test
ljmp
pusha
mov
push
test
xchg
push
imul
dec
ss
push
movl
sbb
in
push
ljmp
xchg
addb
pop
pop
stos
js
inc
xchg
subb
jge
push
lcall
out
and
xchg
movsb
sbb
dec
push
stos
in
andb
fsubrl
dec
and
push
lcall
inc
test
test
cmp
and
push
lea
add
adc
call
sub
aad
in
mov
cmp
push
dec
mov
and
dec
mov
aaa
inc
cmp
nop
or
ret
pop
cmpsl
mov
adcb
inc
xchg
enter
mov
leave
pop
mov
mov
adc
lret
stc
and
fnstsw
add
fisttpl
lcall
pop
ss
mov
add
outsb
inc
lret
mov
in
push
lods
push
xchg
js
outsl
cmp
stos
es
jle
pop
jne
and
push
fnstcw
inc
adc
add
pop
pop
cmp
lret
ss
xor
ret
and
in
outsb
pop
dec
test
imul
pushf
or
mov
lods
lret
aas
xchg
jns
jmp
loop
icebp
test
pop
push
add
jbe
pop
xchg
cmp
cmp
jbe
ret
mov
lret
test
jg
neg
aas
sbb
xor
and
mov
push
add
mov
xor
mov
aad
mov
fiadds
jbe
out
jle
push
test
stos
mov
sahf
lods
shl
test
xchg
test
pushf
inc
mov
push
push
je
and
adc
call
out
test
xchg
mov
mov
xchg
mov
mov
pop
std
and
dec
iret
add
and
jne
or
mov
dec
cld
out
adc
cli
xchg
inc
pop
xor
or
sub
pop
je
and
les
inc
les
lods
sti
dec
xor
in
dec
jle
jo
aaa
rclb
xor
fdivrl
dec
or
icebp
xor
sbbl
jno
cmp
inc
jnp
xchg
pop
xor
shlb
sbb
mov
test
cwtl
nop
sbb
dec
mov
mov
loope
xor
cmp
cmpl
mov
xchg
lret
cmpsb
jno
pop
out
jb
insl
cwtl
sub
loopne
sbb
jl
push
cmp
sbb
mov
xchg
sbb
jb
jne
xor
fcomip
test
ret
aam
xor
test
iret
stos
iret
stos
mov
insl
push
mov
hlt
xchg
pushf
in
cs
mov
lret
dec
push
jmp
fcoms
mov
int
add
adc
iret
aaa
stos
sarb
imul
test
shl
scas
inc
stos
lds
repnz
nop
nop
mov
cmp
dec
dec
aaa
adc
jmp
mov
mov
cmc
sti
push
mov
or
xchg
std
loopne
xchg
insl
sbbl
mov
cltd
jnp
jmp
xchg
push
int3
iret
fnsave
outsl
push
push
inc
addr16
in
mov
insb
jp
in
mov
adc
into
data16
cli
jmp
inc
pop
js
sbb
or
xchg
dec
cmp
arpl
xchg
fsubrs
rcrb
mov
shr
aam
pushf
sub
xor
shl
jecxz
push
daa
pusha
jmp
mull
and
inc
and
lcall
jns
cmc
fcomp
fldenv
or
sbb
add
jecxz
test
cltd
sub
insb
in
ret
cltd
es
adc
test
cmp
imul
fiaddl
xorb
lds
das
add
inc
cltd
popf
jmp
lret
pop
push
mov
mov
loopne
cmc
fbstp
in
rcll
jg
cmp
ficompl
fildl
test
clc
test
out
mov
loopne
mov
shll
mov
inc
jp
lock
out
outsl
mov
adc
pop
sub
sarb
mov
xchg
mov
fldenv
sbb
nop
inc
push
int
lret
or
icebp
cmp
std
sbb
repnz
xor
mov
jecxz
pop
add
dec
inc
loop
push
stos
cld
sbb
sub
ret
lock
fs
aas
and
dec
les
fisubrl
pop
out
and
or
jle
sbbl
enter
or
mov
push
movsl
scas
xor
sub
push
jae
fistps
test
xchg
push
outsl
push
test
loop
ss
mov
or
out
loop
push
inc
fcomps
lret
pop
cs
insl
xchg
sbb
cmp
dec
int
test
mov
call
call
xlat
int3
rolb
or
dec
andl
mov
cld
addr16
scas
mov
cld
mov
and
dec
outsb
xchg
sub
add
jbe
enter
inc
xchg
dec
xor
xchg
fcmovnb
push
stc
cltd
sarl
repz
or
clc
pop
push
test
fbld
test
mov
cmp
jb
lahf
add
xchg
mov
dec
adc
in
lds
and
lea
inc
push
or
imul
sbb
arpl
or
mov
dec
xor
aad
xchg
xchg
lods
adc
mov
addl
mov
hlt
and
out
cs
scas
clc
orl
repnz
mov
push
cs
mov
int
fisubl
mov
cmpsb
cmp
or
imul
ret
cs
mov
dec
xor
fmull
lock
jmp
scas
int
popl
les
in
lock
loop
push
lret
es
mov
mov
test
ror
xchg
jmp
cmp
jo
cltd
or
and
pusha
call
arpl
inc
jb
test
mov
test
cld
add
push
mov
aaa
mov
dec
jno
cwtl
inc
jno
xchg
add
imul
or
lods
jo
jl
inc
xchg
pop
cmpps
lds
and
jbe
lods
jp
sub
xchg
add
out
jecxz
and
in
iret
fisubrl
mov
in
sar
into
xor
sti
dec
aas
mov
pusha
sbb
mov
iret
js
cmp
and
mov
std
lret
xchg
xchg
ds
pop
outsl
fs
lods
xlat
in
cld
aad
and
stos
sbb
jl
push
mov
icebp
in
push
rcrb
sbb
aaa
lds
and
pop
cmp
cs
jno
mov
jne
pop
aaa
xor
sbb
movsb
cmpsl
cmpsb
lock
iret
xor
jb
xchg
ds
dec
mov
sbb
mov
fldl
outsl
push
stc
sbb
outsb
xchg
movsl
out
and
dec
fnstsw
cld
xorl
cld
pusha
xchg
inc
pop
arpl
inc
scas
stos
xchg
mov
loope
jns
sahf
cmpsb
dec
xchg
push
insl
cmp
adc
sub
jnp
clc
popf
add
cmp
cmp
das
xchg
sub
jns
mov
sub
imul
mov
cmpsb
adc
mov
in
pop
scas
pop
pop
xor
cwtl
mov
adc
lods
xchg
inc
fsubrl
jnp
imul
push
jg
cmp
bound
xor
out
inc
sahf
stos
fwait
aas
scas
cmc
push
loop
add
xchg
lcall
mov
mov
sbbb
shll
cmp
xchg
stos
mov
jae,pt
add
add
jp
into
loopne
push
in
cmc
jg
push
ror
mov
cwtl
mov
sarb
sbb
enter
test
bound
cmp
mov
mov
mov
pcmpgtb
xlat
int
nop
adc
jns
push
sbb
push
movsb
pop
es
push
lds
cwtl
sbb
adc
das
cmp
aas
or
cmpsb
jbe
lock
mov
push
mov
adc
jmp
mov
aas
jp
inc
sub
mov
xchg
sbb
xchg
or
bound
daa
and
mov
test
insb
in
rcll
push
in
cmpsl
xchg
dec
dec
repnz
movsl
lds
pop
sti
jp
mov
add
inc
and
mov
jb
out
inc
test
push
into
pop
mov
jecxz
shl
inc
and
jecxz
hlt
inc
cmpsl
mov
or
addr16
ret
mov
push
call
jle
aam
jg
sub
sub
dec
pop
pop
mov
stos
xchg
int
jnp
mov
sub
add
in
jmp
sub
movb
in
jbe
jle
bound
fs
pop
pop
mov
push
aam
sub
ror
movsl
jl
lea
mov
cmc
iret
inc
cmp
shll
leave
sbb
sub
and
fbld
lret
sub
inc
movsbl
xor
pop
int3
mov
stos
aam
out
leave
decb
mov
pushf
pop
sub
outsb
and
and
ret
or
adc
inc
mov
xchg
sub
cltd
mov
xchg
mov
xor
mov
enter
push
jno
aas
shl
xor
insb
mov
add
push
imul
into
lods
fwait
dec
icebp
and
jp
sarl
inc
lds
leave
add
jge
push
xlat
jg
les
jae
add
rclb
loop
sbb
and
test
pop
pop
test
sbb
loopne
push
cltd
cmp
push
fldenv
test
adc
mov
mov
push
cmp
cmp
inc
cs
jge
cmp
ds
jnp
movsl
aas
cmp
and
and
int
cs
pop
test
jmp
inc
inc
sub
jnp
ljmp
mov
sub
mov
rcll
popf
cmc
lock
cltd
addr16
adc
sub
adc
aaa
jo,pt
stos
das
jb
idiv
addb
ds
int
leave
mov
rep
inc
mov
outsb
and
cli
mov
fisubs
jmp
jecxz
jl
cmp
push
jecxz
adc
js
repz
xchg
xor
fs
cmp
and
dec
js
jecxz
stos
jbe
rcl
in
and
andl
sbb
ja
add
jmp
pop
push
push
mov
fbstp
jmp
ja
cmp
push
or
pusha
nop
hlt
xchg
adc
mov
loope
cld
out
push
jns
xlat
jmp
push
stc
adcl
in
xchg
je
imulb
das
add
insl
lods
sub
inc
xor
fistl
fadds
stc
clc
dec
ljmp
test
adc
pusha
pop
cltd
cmp
gs
and
pop
dec
lea
addr16
std
jae
jg
jbe
lret
div
mov
stos
or
xor
push
or
mov
dec
add
inc
mov
add
sbb
xor
stos
add
frstor
popl
mov
pop
dec
or
in
leave
div
ss
test
adc
daa
fnstsw
aad
in
xor
ja
or
cmpsb
scas
scas
adc
pop
push
out
vprotd
test
xchg
mov
aaa
andb
ret
rorb
jecxz
lret
mov
inc
push
andb
adc
mov
scas
dec
push
pop
lods
mov
xor
and
in
jecxz
xchg
push
jg
in
mov
loop
outsb
adc
pop
xor
push
pop
sub
xchg
lds
inc
rcll
bound
adc
mov
push
mov
ret
outsb
test
lds
jne
pop
ds
lods
loopne
int3
mov
loopne
test
gs
pop
dec
add
aad
movsb
in
jno
repz
dec
dec
das
outsl
add
neg
pop
sub
je
push
push
mov
add
repnz
or
xor
sbb
mov
ret
icebp
stc
xchg
sarl
mov
mov
xchg
push
fwait
push
push
insl
add
dec
lea
mov
fbstp
sbb
add
imul
enter
cmp
shll
add
lods
add
loope
loop
pusha
jne
mov
mov
sbb
aas
adcb
aad
xor
xor
cld
pop
fsubl
rclb
lods
add
push
lgs
repnz
mov
push
adc
dec
imul
push
or
cs
xorb
movsl
pop
xor
inc
iret
pushl
test
fs
jg
xor
xchg
mov
fxch
out
pop
inc
mov
dec
ss
mov
stos
mov
xorb
pop
xchg
mov
and
mov
xor
cmp
stc
negl
nop
cmp
xchg
pop
sub
mov
xchg
cld
stc
cmp
std
pop
or
fidivs
jle
cmpl
stc
mov
add
jae
xor
push
sbb
sub
ja
push
pushf
test
stc
push
mov
dec
mov
or
call
icebp
add
clc
icebp
bound
int
shll
subl
stos
dec
stc
inc
mov
sbb
mov
addps
sarl
sbb
adc
pop
and
jbe
lcall
int
movsb
push
cmp
rcll
repz
lods
std
addr16
in
es
jmp
ja
jecxz
cmp
mov
mull
fidivl
or
adc
in
or
out
imul
mov
les
xchg
push
and
and
jmp
fcomps
repnz
enter
imul
xor
xchg
negb
sahf
xorl
adc
and
xor
cmp
sub
xorb
popa
jle
xchg
mov
faddl
xchg
mov
ja
out
jp
jge
loop
sbb
leave
pop
sbb
lock
xlat
repz
jg
mov
adc
ljmp
xchg
cmp
xchg
test
fisubs
pusha
negl
fs
ret
fcompl
mov
dec
mov
lret
cmp
pop
data16
cld
in
or
xor
movsb
mov
loop
xor
pop
mov
inc
mov
loope
std
cmpsl
xchg
cmp
std
test
je
sub
fadd
adc
call
xchg
push
pop
loope
scas
inc
jmp
add
dec
jge
jmp
mov
dec
data16
or
sbb
lret
push
or
addr16
mov
pop
xchg
inc
mov
jns
and
cmp
fisubs
dec
cmpb
sbb
fmuls
and
pop
repz
cmc
out
sbb
xor
mov
mov
popa
sahf
cwtl
int3
inc
cmpsb
stc
ljmp
mov
fdivrl
jo
ja
jecxz
add
bound
inc
cmc
aaa
xlat
pushf
jmp
loope
enter
insb
jbe
mov
data16
sahf
fstl
jne
in
lea
cli
in
std
push
iret
pop
add
add
dec
mov
out
xchg
jmp
jbe
mov
mov
add
out
in
ret
jg
push
sbbl
lret
in
xor
lahf
insl
ljmp
cmp
jmp
adc
clc
inc
scas
add
sahf
mov
mov
sbb
pop
push
mov
mov
stos
ret
add
mov
fs
xor
mov
jg
gs
xchg
xlat
andb
out
stos
jge
popl
mov
jbe
repz
or
and
out
aam
cmp
xor
movsl
incl
and
push
addr16
push
sti
xor
sahf
xor
mov
scas
push
movb
xchg
or
dec
shlb
mov
mov
pop
jp
xor
lret
sub
test
out
add
push
sub
adc
movsl
xchg
vpminub
nop
pop
mov
mov
xlat
mov
and
or
aaa
dec
daa
adc
xchg
pop
aad
pop
sub
ret
arpl
shll
data16
or
inc
test
sbb
lods
lret
cmc
call
push
mov
adc
pop
test
push
dec
and
push
in
test
xlat
fsubrs
push
mov
insb
push
test
int
push
imul
push
es
test
xchg
hlt
loop
push
out
cmp
cltd
cmpsb
jg
inc
out
cmpsl
mov
sub
rorl
xchg
scas
xlat
out
cmp
fcomps
push
in
jg
test
lcall
or
rorl
push
shlb
shl
add
jl
fdivs
rolb
mov
pop
rcrl
ret
push
in
lock
jnp
sti
mov
ss
rcl
mov
xchg
repnz
test
lahf
dec
mov
and
inc
outsl
idivl
scas
xchg
jbe
mov
inc
cmpsb
adc
sbb
sbb
inc
test
out
out
cmpsl
into
dec
jnp
imul
xchg
mov
adc
and
and
and
test
test
push
scas
sbb
mov
mov
ss
and
cmp
addr16
add
push
and
mov
dec
sub
icebp
fldcw
aaa
add
leave
fiaddl
sbb
ds
jmp
pusha
or
xchg
mov
mov
and
inc
jge
or
stos
dec
lret
lock
into
xchg
into
push
add
sub
shrl
inc
shll
cli
into
daa
ljmp
cmpsl
imul
fistpl
aaa
sbb
cmpb
jns
pop
adc
mov
adc
cmp
insl
out
push
cmpsl
xchg
aas
rolb
jmp
leave
stos
mov
xchg
xchg
dec
adcb
popf
dec
pusha
fdivl
aam
pop
scas
std
dec
mov
int3
scas
add
aam
dec
fadds
gs
iret
shll
and
sbb
cs
fcoml
inc
pop
jmp
push
sbb
and
and
mov
lods
nop
lea
and
mov
ss
jb
iret
dec
mov
test
xchg
jmp
cs
hlt
sub
jg
stc
xchg
repz
in
insb
cmpsl
sbb
adc
cmp
fnstcw
inc
xorb
ljmp
mov
repz
fcompl
pushf
cmpsl
mov
cwtl
sub
fcoms
ljmp
movsb
cmp
outsb
stos
fnstenv
outsl
xchg
jecxz
jmp
inc
push
leave
pusha
leave
add
and
adc
pop
aad
icebp
insb
cmp
add
xchg
mov
xchg
pushf
fisttpll
sbb
mov
push
das
imul
scas
inc
movsl
jns
cwtl
movsl
mov
sbb
pushf
cltd
sbb
out
ror
vcmpps
add
adc
xor
jnp
rorl
lret
jbe
popa
mov
stos
mov
push
aam
gs
dec
notl
push
movsb
movsb
jmp
fs
mov
pop
imul
sahf
enter
dec
stc
xchg
enter
enter
cmpsb
dec
leave
int3
cmp
pushl
inc
cmpsb
aas
add
and
stos
loop
push
negl
sbb
sbbb
dec
xor
shlb
pop
test
add
xchg
sbb
fnsave
bnd
test
mov
sub
ljmp
adc
movsl
mov
xor
pop
mov
push
cmc
xor
fs
inc
or
incb
icebp
xor
jge
mov
addl
aaa
jmp
lock
or
ds
sbb
aaa
mov
int3
std
ret
sbb
jne
ret
mov
sbb
and
or
in
mov
ret
pushf
shrl
imul
pop
mov
mov
cld
in
push
shrl
jmp
lret
lods
xchg
ds
jg
xor
or
pusha
push
inc
sub
xchg
ljmp
push
sub
js
das
or
js
jnp
pop
in
push
jbe
xor
daa
iret
scas
inc
cmpl
ds
mov
enter
mov
adc
sbb
test
data16
mov
jbe
insl
or
fildl
adc
pop
out
mov
fwait
mov
sbb
hlt
lea
jb
fs
testb
jo
repz
mov
jbe
adc
push
inc
or
add
repnz
inc
icebp
in
daa
sti
rcrb
xchg
aad
jl
adc
push
xchg
outsb
jge
sahf
or
mov
fnstcw
mov
dec
int
pop
aas
fdivl
repz
add
cld
jae
push
jg
mov
ljmp
mov
ljmp
loope
sub
lahf
pop
imul
mov
cwtl
call
pop
or
sub
xchg
xor
xchg
popf
andb
das
inc
pop
or
fst
xchg
outsl
mov
leave
call
jp
lods
shrl
pop
xor
push
or
shl
mov
sahf
mov
loop
das
ja
cld
ljmp
add
adc
fdivrs
mov
stc
sbb
or
sbb
cmp
pop
incl
mov
mov
mov
inc
arpl
pop
cmpsl
jne
shll
imulb
and
outsl
or
das
push
popf
je
ror
jae
ds
imul
scas
nop
xchg
nop
or
xchg
cli
mov
and
or
jg
out
add
cli
insl
out
pop
xor
push
fadds
cmc
and
add
inc
jl
int3
adc
test
mov
pop
shlb
cmp
test
call
mov
cltd
jae
inc
imul
movsl
add
das
int3
mov
cmc
movsl
xchg
mov
inc
jnp
ror
jnp
xchg
movswl
arpl
in
hlt
sub
aam
loopne,pn
inc
jg
mov
in
add
mov
inc
xor
cmpsl
aaa
int3
fistpl
fmul
pop
mov
sti
clc
push
and
std
dec
out
xchg
push
mov
mov
and
les
mov
xor
das
inc
add
jnp
jno
xchg
mov
into
xchg
push
inc
add
and
js
sub
dec
addr16
aad
cmp
lock
jnp
std
cmpsl
jb
dec
in
mov
shl
shlb
clc
xchg
sub
into
iret
dec
xlat
ret
rcrl
adc
arpl
movsb
dec
mov
or
in
adc
addl
push
xor
mov
jle
adc
mov
test
sub
xor
mov
pushf
xor
inc
ret
inc
pushf
mov
push
andl
std
ljmp
fistpll
mov
add
mov
xchg
jne
addl
jg
mov
sub
mov
loopne
gs
adcb
mov
pop
out
lock
pop
pusha
cmp
inc
xlat
pop
cmpsb
mov
ljmp
push
cmpsl
mov
adc
clc
scas
ror
xor
aaa
fwait
imull
jb
mov
xchg
inc
add
mov
add
mov
inc
push
decl
jmp
add
pop
hlt
into
mov
lds
mov
sbb
jl
aaa
mov
or
xchg
mov
gs
xchg
lcall
nop
clc
xor
ficoml
lret
xchg
fwait
adc
or
ss
jmp
push
pop
out
ds
mov
xor
ret
cmpsb
pop
daa
fwait
lret
call
adc
ljmp
ret
popa
or
fwait
inc
leave
out
cmp
push
mov
pop
jp
pop
xor
dec
inc
push
dec
sbb
inc
dec
lock
enter
ljmp
mov
dec
out
aad
xchg
xchg
test
push
mov
stc
pop
sarl
pushf
icebp
aad
das
dec
sub
enter
jns
sub
sub
or
adc
data16
enter
xor
sub
repnz
mov
lcall
fisttps
lahf
xlat
mov
xor
insl
sub
push
ljmp
arpl
mull
jmp
xchg
mul
sar
lods
pop
lcall
lret
add
mov
pop
push
iret
inc
repz
jno
push
sbb
out
adc
xor
cmp
mov
icebp
pop
scas
scas
popa
or
outsb
out
jg
push
dec
orb
sub
lcall
repz
pop
popa
in
or
mov
xorb
push
or
jmp
inc
ret
dec
inc
pop
gs
insl
and
push
gs
mov
or
in
mov
pop
xchg
push
repz
xlat
push
add
push
in
mov
sub
test
mov
lcall
nop
imul
mov
ja
pop
cs
ficoms
popf
fstpt
pop
push
push
or
cld
add
inc
and
jge
mov
adc
les
ljmp
or
insl
in
jge
and
pop
lea
insl
mov
push
int3
mov
mov
movsl
ss
push
pop
mov
xor
aas
out
sbb
imul
pop
or
pusha
pop
push
dec
push
fdivs
jg
stc
fisubs
mov
dec
push
jmp
xchg
jo
mov
push
adc
push
add
lea
aaa
into
xor
dec
repnz
rcrb
ret
sub
jnp
push
mov
ljmp
adcl
addr16
mov
leave
mov
inc
test
mov
fwait
or
enter
lcall
call
sbb
stos
push
and
leave
lret
inc
push
fcompl
mov
pmaddwd
gs
pusha
ja
adc
nop
sub
popf
xor
xchg
arpl
push
ljmp
push
pop
shll
outsl
popa
mov
lcall
pop
xor
das
cmp
test
cmp
xorl
dec
or
or
int3
jnp
add
dec
and
xor
jl
or
aad
xor
jno
adc
mov
adc
jbe
add
mov
aaa
iret
xchg
adc
push
mov
mov
xchg
aam
cmp
push
pop
std
mov
outsb
add
cltd
xor
cmp
lods
ja
add
divb
lods
pop
jne
pop
push
pushf
ljmp
adcl
aas
push
sbb
sbb
or
xchg
jge
mov
repnz
rcll
mov
jmp
or
mov
mov
push
lods
jge
enter
aam
adc
push
sbb
call
mov
jmp
movsl
push
sar
into
or
iret
jo
sahf
mov
push
scas
pop
xor
test
stos
pop
hlt
loop
cmp
mov
fwait
and
scas
fnstsw
xchg
xor
mov
in
pushf
cmp
sti
mov
push
push
or
cmp
inc
insb
das
out
mov
pop
and
pop
mov
pop
and
pop
add
xor
das
shlb
cmc
jg
test
xor
and
imul
lret
jno
sti
xchg
push
sub
pop
dec
cwtl
xchg
fisttps
xor
lea
mov
repz
aam
stc
cmp
xchg
mov
jb
adc
ror
iret
lret
aam
cltd
cmp
dec
mov
adc
pop
loope
sub
fisubrs
mov
mov
rcrl
mov
les
into
stos
adc
cmp
call
nop
ja
push
sub
jmp
push
inc
fcompl
xlat
aas
imul
push
dec
in
daa
mov
shll
pop
xor
jbe
dec
jne
out
cmp
sbb
movsb
push
lods
stc
xor
stos
mov
xchg
in
mov
loope
mov
jmp
inc
loopne
stos
std
out
ja
or
mov
popf
pusha
dec
out
in
loopne
in
mov
jmp
pop
push
mov
cmpsb
cmpsb
fstps
mov
or
and
lds
mov
faddl
adc
lcall
jbe
inc
jge
ljmp
dec
jnp
rorb
push
test
xlat
inc
dec
std
and
int
jno
mov
scas
stc
or
xchg
inc
and
xor
cli
mov
cli
pop
push
frstor
jno
sahf
xor
cmp
in
and
push
jne
icebp
cmp
bound
scas
test
mov
jl
test
xlat
inc
ret
movsb
fidivrl
sub
out
jo
xchg
mov
mov
decl
cmp
mov
pusha
cmp
sub
and
mov
and
xlat
das
cmp
out
jecxz
xor
jl
mov
movsb
outsb
lret
clc
loop
test
mov
pushf
xchg
adc
jecxz
xchg
jmp
adc
hlt
subl
mov
cld
loope
or
cmp
lcall
ss
ficompl
mov
push
jo
bound
jb
jecxz
jo
xor
jmp
lock
add
pop
pop
movsl
and
mov
lret
xchg
pushf
lods
xchg
mov
cmc
cmp
cmpsb
mov
sbb
loop
js
jns
scas
inc
fisubrl
sbb
jno
pop
gs
stos
sbb
mulb
leave
and
adc
test
cmp
xchg
mov
inc
shr
and
fidivs
addr16
xlat
xor
mov
out
fimuls
rclb
loopne
ret
push
push
aaa
add
xor
data16
and
push
lahf
mov
mov
or
jnp
xchg
jns
xchg
addl
sbb
dec
aam
sub
je
pop
jo
push
xor
scas
gs
dec
inc
dec
arpl
mov
scas
adc
cmp
in
imul
add
sbb
dec
fdivrs
mov
dec
push
inc
pop
xor
jb
bound
jl
fcoml
lret
adc
xor
pop
fwait
int3
test
or
adcl
xchg
repz
dec
hlt
push
push
sub
adc
mov
test
xor
cmp
dec
movsb
sbb
iret
and
inc
xor
xchg
cld
loope
das
std
in
inc
popa
and
xchg
pop
aas
cltd
data16
push
xor
mov
lods
rcl
pop
div
push
loopne
pushf
pop
cmpsl
je
testb
fsubr
rolb
ret
insl
dec
add
lods
pop
stos
jp
sbb
pop
pushf
xorb
push
pushf
xchg
vzeroall
pop
shlb
out
pop
je
mov
xchg
notb
rcll
loop
das
lock
push
xor
fisttpll
stos
push
cmp
into
pop
mov
add
cmpl
lds
xchg
addl
imul
outsb
testl
iret
imul
rcrb
orb
add
iret
sarl
pop
aas
cmpsl
es
xchg
js
mov
das
add
xor
pop
sub
movsl
ret
mov
push
add
js
mov
push
or
rol
fdivs
outsl
or
addr16
xlat
xchg
lahf
or
xchg
sub
movsb
in
aad
stos
mov
stc
xlat
stc
push
inc
pop
dec
cmp
push
fsubr
xchg
inc
cmp
mov
xor
or
out
lahf
shll
sbb
jns
mull
mov
shll
dec
insl
add
sub
jnp
xchg
jno
daa
ret
outsb
push
add
push
jae
mov
les
jno
pop
lahf
mov
pop
mov
mov
outsb
stos
add
pop
or
stos
and
xchg
sub
mov
outsb
xor
dec
pop
hlt
ljmp
pop
mov
sbb
push
ret
ja
push
sahf
adc
pop
es
mov
jmp
and
mov
int3
repnz
test
imul
dec
stc
mov
sbb
sahf
lods
nop
aad
cs
repnz
sbb
adc
dec
ljmp
inc
dec
pop
push
add
es
scas
jns
push
addr16
mov
ja
xchg
cmp
mov
and
sti
gs
cld
je
pop
jge
jo
and
stos
inc
in
test
fcomps
loopne
mov
pop
xor
mov
test
lcall
aas
pop
mov
scas
stos
das
adc
daa
icebp
stos
fadds
loope
mov
outsl
pop
push
out
int
mov
adc
in
xor
pop
aas
inc
sub
fs
inc
and
mov
push
adc
loop
and
test
inc
lods
popf
ja
jmp
dec
test
mov
jmp
dec
pop
cltd
cmp
mov
lret
fst
cmpsl
or
icebp
outsb
loopne
cltd
pop
xor
cmp
out
fs
inc
xor
or
mov
or
jbe
outsl
mov
push
aaa
dec
cmpsl
outsl
inc
cltd
or
push
push
xor
mov
mov
jbe
movsl
push
adc
lea
popa
or
sub
lret
stos
ds
pop
cmp
jnp
and
jmp
jae
aam
mov
jae
in
xchg
pop
cs
push
stc
rcr
dec
daa
cwtl
xchg
sbb
and
and
adc
mov
mov
lock
push
push
xchg
mov
sbb
xchg
and
inc
add
incl
mov
xor
call
dec
vmread
or
adc
orb
stos
in
jbe
sub
in
lods
addr16
sbb
mov
imul
imul
sbb
jecxz
and
daa
mov
mov
sub
out
cmp
js
mov
mov
pop
test
push
cmc
rolb
jg
jge
mov
clc
bound
jecxz
fadd
pop
ficoml
mov
sbb
lret
lock
ret
pop
fiaddl
stos
out
out
leave
loope
cwtl
pop
mov
mov
lahf
out
adc
iret
cmp
scas
out
pop
mov
les
push
popf
test
nop
mov
insl
stos
jo
xchg
mov
sbb
imul
pop
sarl
popa
mov
and
jecxz
fwait
int3
pop
sbb
fisttpll
out
mov
mov
jge
xchg
xchg
lds
into
jae
pop
fs
imul
pop
arpl
push
jg
mov
lock
inc
imul
ficomps
sub
imul
gs
lods
rol
rclb
add
xor
leave
inc
jbe
xor
xchg
push
test
and
int3
pop
inc
cmp
jecxz
sub
test
popf
fdivrl
mov
jecxz
bound
aaa
mov
pop
xlat
mov
adc
mov
or
inc
mov
inc
in
jo
xchg
loope
inc
out
or
add
ljmp
lahf
repnz
sbb
mov
jp
aam
dec
dec
add
cmp
fwait
mov
mov
out
cmp
aam
push
sub
mov
std
mov
out
push
and
push
sbb
idiv
nop/reserved
in
lock
inc
cmpsl
push
adc
jne
pushf
fisttpl
add
xchg
and
rcll
dec
mov
mov
out
mov
pop
xchg
loopne
ret
or
imul
lea
mov
jp
pop
pop
movsl
imul
mov
test
xchg
roll
mov
and
pop
dec
add
scas
mov
dec
orb
xchg
add
add
pusha
or
scas
mov
mov
sub
and
jno
hlt
mov
mov
clc
push
roll
mov
popa
adc
aaa
mov
int
sti
xor
sbb
sbb
mov
icebp
jne
mov
lock
mov
xor
jge
out
cld
in
aaa
push
jge
movsb
cld
popf
mov
insl
pop
inc
bound
jmp
jbe
fstpl
test
lret
mov
pop
ret
mov
push
mov
test
or
rolb
aam
dec
adc
jge
add
pop
idiv
jl
shrb
jbe
add
cmova
sti
and
and
inc
ret
adc
outsb
jne
loop
or
das
test
dec
and
or
push
aas
rol
or
test
cmp
test
les
pop
mov
inc
mov
cmp
test
pop
xor
mov
ja
fsubr
into
push
shrb
psllq
pop
push
sbb
xlat
cmp
mov
int
fsts
xchg
jno
mov
loopne
cs
ficomps
push
call
cmp
lcall
mov
push
cmp
push
fisubrs
mov
pusha
ss
cs
sti
je
inc
into
and
add
add
pop
jmp
sti
pop
pop
cmp
cli
in
scas
xchg
ds
adc
push
int
cli
in
sub
adc
mov
xchg
cmp
loop
xchg
jle
movsl
mov
cmc
mov
ss
xlat
mov
cmovnp
ret
jnp
mov
cs
imul
push
inc
mov
lret
jle
in
add
outsb
pop
pop
ret
dec
daa
icebp
mull
lea
test
cld
cwtl
or
repz
test
repnz
movsl
stc
orl
inc
addr16
scas
or
adc
and
cli
jno
fwait
jl
jmp
add
shrl
pop
ljmp
push
hlt
mov
adc
inc
push
ss
into
gs
gs
and
mov
xchg
mov
dec
inc
push
sbb
cltd
nop
jle
aas
in
vrcpps
fnstsw
outsb
and
xor
xchg
cmp
mov
cmp
ret
xchg
mov
mov
inc
in
add
inc
mov
mov
out
pop
jb
sub
or
icebp
cmp
pop
adc
push
fnstcw
inc
cmp
lods
push
inc
shlb
add
out
js
sbb
nop
test
sbb
cltd
addr16
or
adc
insl
lcall
sub
dec
ret
mov
jns
mov
jae
stos
push
dec
clc
mov
push
dec
xchg
sub
jbe
movsb
or
xchg
fwait
pop
stos
mov
leave
sbb
cmp
add
insb
test
cmp
and
inc
sub
or
aam
test
sub
out
es
ja
outsb
pop
push
cmpsl
in
xor
dec
in
jb
push
jns
cli
jnp
andb
lret
inc
push
addr16
dec
xor
div
xchg
xchg
jg
sbb
sub
test
in
xchg
andl
mov
sbb
push
add
inc
outsl
pop
sahf
mov
pop
pop
pop
mov
mov
rorl
jbe
test
fdivp
andb
mov
push
filds
adc
in
jmp
pop
in
inc
ret
pop
xchg
insb
popf
test
cld
je
pop
push
pop
je
add
or
iret
shll
xlat
push
notl
mov
sbb
lods
lcall
adc
fiadds
mov
dec
mov
lcall
aad
rcr
add
pushf
lahf
or
mov
repz
int3
sbb
xchg
out
mov
mov
out
dec
hlt
mov
jmp
cmpsb
lods
fsub
jmp
mov
mov
fadds
negl
add
adc
orl
jns
clc
enter
inc
andb
inc
or
outsl
xlat
imull
adc
xchg
loop
adc
push
pop
pushf
lods
int3
xchg
jae
out
je
imul
add
in
movsb
or
out
decb
dec
xchg
lock
pop
fs
andb
mov
lods
pop
pushf
sub
pop
pop
push
pushf
jns
push
mov
inc
fucomi
jbe
lret
mov
dec
inc
adc
movsl
xchg
fstp
mov
pop
sub
mov
int3
in
sti
push
mov
mov
fidivl
and
outsl
dec
and
mov
mov
add
imul
mov
mov
xchg
sbb
cld
and
fldcw
repz
popf
xchg
push
sahf
fstps
sub
push
cli
jbe
xlat
popa
mov
dec
lock
sbb
sahf
ljmp
lea
addr16
inc
cmp
dec
sahf
fwait
sub
imul
repnz
sub
jns,pn
js
jle
add
and
lea
sub
mov
sti
test
sbb
jg
and
stc
add
movsl
or
frstor
jl
xchg
sub
inc
mov
xchg
inc
jb
push
pushf
mov
xor
stos
adc
test
pop
cld
push
fcmove
ss
pushf
hlt
mov
pop
ret
std
daa
cmp
pop
pop
adc
inc
pop
sti
jae
jnp
cmp
mov
sub
jecxz
add
mov
je
fpatan
mov
jmp
add
sub
mov
mov
dec
ljmp
mov
test
jns
mull
sbb
cmpsb
fnstsw
mov
loop
mov
rcr
sbb
aas
push
dec
jl
mov
shr
dec
mov
xor
jnp
sbb
or
inc
xchg
int3
movsb
add
dec
nop
stc
add
jb
pop
dec
cwtl
fildl
rorl
clc
aaa
pop
xchg
dec
cwtl
xchg
aas
pop
in
adc
loopne
push
xor
cltd
cmpsl
in
jmp
shlb
sti
mov
mov
stc
ds
in
sbb
in
popf
mov
lods
jl
test
hlt
arpl
xchg
adc
jnp
scas
add
mov
cmpsl
or
dec
icebp
pop
jle
add
or
pop
adc
xlat
rorb
outsl
pop
mov
scas
or
aaa
shlb
jmp
push
pop
pop
pop
or
mov
mov
ret
test
and
and
inc
gs
adc
dec
mov
mov
aaa
sti
jle
push
into
js
sbb
cli
cmpl
lock
pushf
pop
jne
mov
ret
ss
cmp
into
xchg
jmp
outsb
imul
sbb
adc
in
inc
add
jbe
pop
in
pop
dec
mov
inc
jl
push
movsb
push
lret
mov
sub
adc
mov
mov
and
leave
je
scas
push
fdivrp
sbb
or
inc
push
ja
pop
push
sub
mov
push
mov
adc
gs
xchg
jle
sbb
sti
shr
fucomip
xchg
push
push
outsl
mov
mov
call
xchg
sbbb
int
fstpt
fmul
mov
or
adc
movsb
dec
pop
pop
dec
mov
icebp
cmc
es
ficoms
jnp
outsb
test
mov
cmpsl
push
push
clc
imul
lret
sbb
xor
outsb
je
inc
mov
adc
in
mulb
xchg
test
pop
lcall
xor
scas
lret
push
pop
cmpl
pop
movsl
push
jmp
popl
into
icebp
jle
lods
sbb
in
adc
inc
lcall
push
inc
pop
loop
popf
cltd
cmpsb
imull
sbbl
sub
mov
mov
arpl
fcoms
or
lret
mov
adc
adc
sbb
cmc
add
fs
daa
fs
xchg
fildl
or
dec
jns
out
pusha
mov
fiadds
push
std
shlb
lcall
push
ficoml
dec
clc
sub
jbe
ljmp
aad
pop
dec
push
incl
mov
icebp
sub
ds
push
xchg
sub
lock
xchg
incb
sub
lods
addr16
jp
mov
jns
aas
cmpsb
dec
mov
fcmovb
push
aad
sub
xchg
out
jecxz
add
insb
pop
dec
mov
push
jp
lahf
adc
iret
lret
sub
outsb
rorb
imul
inc
in
xorl
dec
push
fisttpl
ja
insl
mov
popf
fcmovne
jecxz
cmpsl
cli
js
ret
mov
sbb
pop
dec
jae
loope
lds
negb
popf
lret
cmpsl
sub
mov
pop
iret
jns
es
inc
sbb
insl
cmp
stos
movsl
sahf
ss
mov
cli
repnz
push
sarl
and
fidivrs
or
add
pop
sbb
xchg
mov
mov
movsb
cmp
cli
add
scas
lods
int
loopne
lret
mov
push
aam
in
popf
lock
jae
sub
outsl
push
xor
dec
add
jne
dec
ds
testl
test
mov
insl
adcb
lock
aad
xlat
add
rcl
jns
sarb
jge
and
mov
xchg
xchg
inc
mov
mov
shl
pop
dec
xor
cltd
push
adc
mov
es
cli
pushf
or
xchg
fcmovbe
jns
mov
mov
pop
push
in
mov
dec
inc
cmc
outsl
in
push
jl
inc
mov
sbb
cmp
arpl
mov
mov
outsb
pop
pop
or
out
cmpsl
and
dec
out
lcall
xor
daa
push
je
test
jg
inc
xchg
pushf
xor
iret
pop
fcoml
pop
add
pop
jb
push
jb
clc
jne
loopne
inc
push
push
popa
insb
cltd
cmp
and
mov
imul
cltd
dec
sub
out
les
cmp
test
cwtl
jae
outsl
test
xor
call
push
aam
orl
popf
or
mov
lret
and
push
rcll
in
and
filds
mov
jb
inc
lods
repnz
int3
and
pop
sbb
dec
add
add
push
rcrl
aas
inc
cmp
int
outsb
lret
pusha
lret
outsb
push
shrl
iret
outsb
inc
ss
sarb
mov
pop
jle
adc
stc
cmp
ja
mov
sbb
cmp
jne
sub
xchg
lds
pop
jae
xor
mov
mov
jno
xor
xlat
or
cmp
rcrl
sbb
cmp
cwtl
mov
aaa
into
jg
mov
scas
imul
mov
icebp
insl
sub
negl
cwtl
iret
mov
dec
sbb
cmc
shll
test
repz
sahf
mov
dec
std
inc
inc
inc
sbb
sahf
xor
into
mov
das
xor
sub
add
mov
aaa
mov
fldl
and
fldpi
sub
daa
push
add
adc
xor
pop
and
jbe
mov
into
xchg
pop
aas
dec
and
pop
movsl
sub
sbb
lret
int
jnp
movsl
stos
dec
mov
mov
pop
shl
arpl
ja
in
xchg
out
icebp
xor
mov
out
pusha
cmp
insb
sarl
out
xor
cmp
rorb
roll
lds
jge
mov
mov
push
lret
sbb
xchg
inc
inc
movlps
addr16
jg
xorl
movsl
mov
mov
outsl
xor
mov
mov
mov
inc
sti
cmp
loope
pop
adc
inc
movsl
popf
out
jle
or
or
enter
ficoms
or
mov
push
xchg
cmpsb
test
incl
mov
inc
dec
xor
adc
popa
popa
outsb
je
add
aaa
sub
and
int3
daa
cmp
pusha
sbb
mov
iret
jno
xchg
sahf
push
and
repnz
ja
or
icebp
dec
pop
push
mov
dec
pop
inc
test
mov
push
inc
test
xor
xor
inc
push
sbb
fisttps
mov
shlb
data16
ror
sbb
cmp
int3
daa
push
or
sbb
cmp
push
es
xor
sbb
dec
add
xchg
jl
bound
sbb
xlat
lods
loopne
sbb
mov
shlb
mov
shll
stos
fsubs
inc
popa
xchg
inc
jp
jae
xor
dec
dec
sbb
pop
mov
push
mov
lret
mov
imull
pushf
mov
mov
in
out
mov
inc
pop
test
pop
dec
mov
mov
into
and
mov
mov
mov
cld
xor
mov
push
xchg
in
jno
aas
sarl
and
imul
daa
rcl
jecxz
je
jle
insl
aam
nop
iret
jae
mov
aas
jle
lcall
daa
pushf
xchg
xchg
xor
mov
in
lcall
sbb
lret
adc
test
pushf
pop
int3
test
xor
sahf
in
jnp
sbb
je
lret
outsl
daa
ja
in
je
ljmp
arpl
icebp
mov
pop
movsl
out
sarb
cmp
dec
xchg
mov
test
mov
inc
int
call
data16
or
xchg
fimull
rcrb
les
cwtl
fwait
push
lods
dec
std
cli
in
shlb
int3
insl
push
xor
mov
push
data16
enter
mov
sysexit
mov
daa
movsl
mov
mov
imulb
lock
cli
outsl
fisubrs
test
xchg
mov
mov
sub
rcrl
adc
dec
mov
test
inc
adc
jnp
enter
leave
sar
push
push
imul
pop
fiadds
or
cld
push
pop
push
or
add
inc
inc
cmp
leave
into
inc
fistpll
out
add
sti
xor
test
or
sti
mov
mov
mov
push
add
mov
or
add
jmp
ror
iret
repnz
daa
cmp
pop
ret
push
jmp
inc
jno
out
mov
inc
pop
dec
push
inc
or
data16
fsts
adc
jmp
mul
dec
mov
call
ljmp
orl
adc
repnz
pop
cli
ljmp
aad
push
out
push
mov
rolb
adc
sti
mov
nop
sti
push
clc
pop
fsubr
ds
call
lahf
cmp
dec
lcall
sbb
and
movsl
clc
cmp
lret
fnstcw
pop
scas
gs
xchg
mov
movsb
xchg
push
pop
jmp
dec
push
popf
insb
ljmp
mov
inc
jge
xor
mov
shl
sbb
test
mov
jle
push
stos
jecxz
and
inc
fistps
pop
cmp
ss
sub
cs
pop
xor
xlat
loop
in
popa
xchg
mov
cmpsb
inc
jge
enter
and
movsl
mov
repnz
orl
loop
adc
decb
inc
fcomps
jge
mov
jns
sub
cwtl
fisubs
popf
mov
xchg
xor
loope
dec
sub
int3
or
decl
mov
cwtl
pusha
pop
push
scas
fstps
pop
in
pop
pop
xchg
popa
jmp
xchg
sbb
dec
pop
into
jp
xchg
push
xchg
cmpsb
aad
into
add
pop
pusha
mov
dec
jbe
pop
adc
xlat
mov
mov
ss
lcall
pop
dec
jbe
lea
sbb
rclb
aam
ret
daa
sbb
aaa
mov
ss
ret
xchg
mov
lods
addb
pop
or
pop
pop
cwtl
sub
or
add
fcomp
and
imul
xchg
stos
xchg
pop
sbb
or
xchg
dec
add
jl
pushl
adc
dec
fs
sub
mov
cli
je
add
push
inc
mov
ja
push
test
or
add
xchg
push
sub
push
aam
inc
cmpsl
js
dec
mov
jns
jo
jae
clc
enter
xor
subl
fstl
loop
addr16
mulb
fs
dec
ret
int3
in
cmp
clc
mov
dec
cmp
icebp
in
dec
icebp
cmpsb
movsl
push
sti
jmp
mov
jbe
cwtl
jp
lods
pop
cltd
add
pop
sbb
std
adc
mov
call
in
xor
xchg
mov
dec
arpl
pop
mov
push
fsubrs
outsb
or
inc
loop
jae
push
xchg
inc
mov
mov
lret
sub
xchg
fmul
or
outsl
test
rorl
add
lds
addl
repnz
inc
inc
sbb
push
cmp
mov
jno
in
shl
cmp
mov
mov
imul
pop
js
test
out
jbe
into
cmp
mov
xchg
sub
repnz
sbb
pop
sbb
pusha
in
sbb
xchg
sbb
push
mov
ja
or
sbbl
outsb
pop
push
test
mov
jns
jb
scas
lods
test
outsl
jb
daa
test
add
pusha
mov
fisttps
frstor
test
sub
leave
mov
shll
mov
jnp
in
push
test
or
mov
test
push
mov
addr16
sbb
cmp
cmpb
std
and
divl
mov
mov
outsl
mov
push
mov
test
test
dec
mov
jge
int3
ret
xlat
cmp
int3
icebp
iret
xchg
and
shll
gs
rorl
fs
jmp
sti
dec
and
std
or
imul
mov
mov
data16
in
or
insl
push
je
popa
stc
mov
sbb
and
lds
sbb
mov
insl
cmp
jae
subb
aad
sub
xor
jnp
in
repnz
mov
jl
sub
insb
insl
movsl
mov
cld
icebp
jge
cmc
loope
push
int3
jno
insb
inc
lcall
jl
cmp
scas
inc
add
mov
and
stc
inc
scas
mov
fldt
pop
xchg
xchg
sbb
call
lret
jo
and
cmp
mov
pop
daa
out
insb
test
push
push
icebp
mov
loopne
pop
psrlw
xor
into
fs
lahf
inc
call
cmp
pop
cmp
inc
cmp
pop
ja
push
js
xchg
test
div
mov
push
jnp
mov
cmpsl
loop
lahf
in
dec
arpl
cmp
dec
or
xchg
inc
mov
pop
repz
add
test
xchg
push
and
cmp
lds
push
cld
and
je
xchg
pushf
adc
and
lds
enter
inc
inc
add
outsb
stos
ret
fisttpl
fs
test
adc
cmpsb
sbb
pusha
sbb
mov
xchg
adc
gs
xchg
lahf
mov
or
cmp
xor
xor
pop
add
ret
arpl
pop
adc
mov
inc
test
adc
pop
fldenv
pushf
mov
jno,pn
fmuls
cli
sub
lea
or
push
cld
sub
scas
popa
adc
sub
mov
cmp
cmpsb
and
loope
aam
scas
frstor
pop
test
mov
jns
lahf
daa
xchg
push
push
pop
loopne
dec
sbb
gs
flds
clc
inc
data16
jbe
mov
cmpsb
xor
xchg
pop
test
lock
add
xorb
and
out
insl
or
adc
cmp
xchg
fnsave
dec
adc
int3
jl
cmpsb
stos
data16
xchg
xchg
add
or
adc
pop
in
xor
cmp
loope
clc
cmp
ss
cmc
xor
in
test
sub
test
add
jne
stos
or
push
stc
call
lcall
aas
jne
aam
insb
cli
in
cmpb
or
sbb
ss
sbb
xchg
mov
add
xchg
loope
inc
hlt
icebp
insb
addr16
adc
jae
pop
hlt
adc
cmpsb
jbe
ja
je
pop
xchg
sub
pop
sbb
mov
rclb
cwtl
pop
dec
push
push
mov
or
lret
and
pop
xor
xor
cs
test
add
push
test
into
int3
decl
std
mov
push
push
jnp
bound
icebp
jo
add
adc
mov
outsl
les
dec
in
pusha
mov
stos
xor
add
mov
rcrb
into
and
ja
or
mov
push
dec
into
and
insb
aaa
adc
aas
push
cmp
jg
xor
push
test
sti
sub
outsb
xor
pop
jg
jle
push
ret
and
pop
pop
mov
arpl
dec
cli
inc
push
andb
or
mov
xchg
and
leave
mov
loopne
add
sbb
jns
add
ja
popa
nop
xchg
insl
daa
xchg
testb
jo
sub
jae
xor
stos
sar
pop
pop
jge
enter
loop
push
pop
xlat
xchg
xor
cld
pop
mov
mov
mov
cli
sub
sbb
cli
pop
in
inc
inc
adc
mov
inc
sbb
shlb
inc
ja
jp
jnp
scas
rcrb
cwtl
lock
sub
aad
or
xorl
jne
dec
int
arpl
pop
loopne
mov
cmp
adc
test
in
jl
mov
inc
mov
test
pop
in
cmp
mov
repnz
xor
dec
bound
imul
cmp
rol
jae
xor
xchg
xchg
enter
add
sbb
jecxz
xchg
sub
fwait
push
mov
push
repz
loope
cld
and
daa
into
mov
xor
inc
ret
jb
push
jle
int
lret
mov
cltd
iret
xor
stc
aam
loopne
ds
dec
push
push
in
lahf
sub
stc
mov
add
das
add
jnp
sub
leave
add
das
sub
fistl
push
in
shll
mov
push
jl
mov
leave
aad
mov
and
adc
push
das
mov
mov
lods
sbb
icebp
pop
and
test
stos
and
mov
pop
dec
frstor
xor
in
rcrb
sub
inc
adc
lcall
jbe
sti
sub
cs
push
add
push
lahf
add
rcrb
pop
add
cmpsl
out
fnstenv
or
movsl
jae
sbb
xchg
xlat
fists
and
cs
cmc
dec
pop
sub
sub
fs
dec
pop
inc
scas
fdiv
nop
js
adc
sbb
xchg
in
sbb
adc
lods
pop
xchg
idiv
cmc
push
or
out
dec
or
mov
add
faddl
mov
out
pop
insl
jae
push
es
dec
leave
movsb
icebp
dec
lcall
mov
cmp
add
nop
stos
or
inc
lods
int3
mov
ds
push
jmp
xor
ds
mov
push
fildll
fs
test
pop
aam
popf
inc
jno
pop
cwtl
ret
jb
adc
pop
cmp
enter
pop
add
xchg
fcoml
lds
xor
mov
mov
data16
mov
and
pop
jo
fdivs
pop
cwtl
movsb
in
leave
mov
daa
nop
orb
mov
lcall
call
jne
dec
arpl
sub
jbe
jp
insb
adc
test
jle
cmp
mov
cli
push
fsts
and
push
adc
jns
xchg
pop
cmpsb
int
and
or
in
mov
jne
sub
es
imul
in
push
push
mov
nop
adc
xlat
mov
loop
es
daa
cwtl
test
sub
jne
push
lock
popf
and
xor
sbb
dec
movsl
inc
clc
rol
xchg
test
add
ret
inc
sbb
out
mov
xchg
sbb
pop
mov
dec
sub
aam
popf
and
aad
pop
pop
aam
cmc
fidivs
scas
inc
lock
jge
push
sahf
add
enter
push
or
fiaddl
push
mov
lods
cwtl
push
daa
subl
and
dec
xor
mov
add
push
bound
or
lahf
cmc
cs
in
add
xor
movsl
icebp
repz
add
aaa
test
push
daa
aaa
mov
mov
lds
outsb
int
fmull
iret
and
adc
cmp
outsl
mov
shl
xor
push
mov
xchg
and
aas
jbe
push
clc
xor
cmpsb
push
push
in
sahf
notb
repnz
jge
lods
sbb
jb
out
cmp
in
mov
dec
test
inc
scas
jns
mov
xchg
sbb
mov
stos
cmp
jbe
loopne
scas
cmpsb
cmp
lods
mov
xchg
push
mov
rcrb
ljmp
inc
inc
pop
addb
sub
and
mov
push
adc
push
jbe
add
insl
mov
das
inc
or
aaa
jl
or
pushf
nop
xor
outsb
pop
push
pushf
fldenv
mov
dec
adc
arpl
sbb
daa
cmp
gs
push
das
aas
mov
outsl
hlt
in
cmp
loope
repz
or
xchg
or
mov
pop
xchg
cli
push
outsl
dec
lds
fwait
bnd
imulb
pop
dec
xchg
les
ja
jmp
jmp
movsl
rcll
fildl
movsl
inc
mov
and
cmc
jl
cld
sub
lock
jp
ret
pop
cwtl
std
pop
dec
mov
inc
cmp
dec
mov
lahf
or
out
pop
pop
clc
sub
shll
sahf
fisttpl
sbbl
cmp
rcll
pusha
ffree
pop
dec
add
daa
pop
inc
stc
insl
sbb
test
insb
arpl
pop
dec
adc
jmp
shll
mov
adc
lock
negl
lahf
ret
mov
nop
xor
popf
sub
inc
and
push
xorl
es
sbb
in
scas
imul
dec
mulb
imul
imul
test
sti
xor
dec
clc
imul
dec
shlb
ret
sub
out
out
or
jle
stc
xor
pop
rcl
jle
std
data16
std
repz
es
dec
in
addr16
popf
jmp
cmpsb
xchg
pusha
push
sbb
pushf
dec
adc
xor
mov
test
insl
test
dec
add
out
or
scas
add
stos
jo
pop
and
adc
push
push
adc
sub
pop
adc
leave
int
shrl
sub
lods
xchg
xchg
jb
push
push
lea
loopne
add
pop
mov
sbb
inc
mov
ljmp
sarb
into
xor
push
add
in
jecxz
mov
or
xchg
or
sbb
mov
mov
mov
mov
mov
cmovo
mov
xchg
xor
push
lea
repz
inc
xor
or
inc
cwtl
aam
enter
shrb
in
outsl
arpl
sub
jmp
test
mov
pop
xchg
or
cld
leave
ljmp
pop
jmp
sbb
mov
jge
xor
arpl
sbb
test
jge
sbb
or
adc
inc
lock
pop
stc
adc
jns
arpl
int
aas
xchg
mov
shlb
scas
pop
pushf
negl
push
push
or
inc
jo
cltd
xor
cltd
stos
cmp
and
int3
fbld
adcl
push
push
in
or
xchg
roll
push
mov
call
roll
jg
push
fidivs
out
icebp
adc
scas
xchg
scas
ret
insl
fs
push
sub
aam
mov
sub
repnz
pop
pop
add
pushf
dec
jmp
subl
loopne
cld
aaa
fldcw
scas
adc
lcall
or
lahf
sub
sub
lret
xchg
cmpsb
pop
and
dec
jns
fiaddl
push
ret
dec
cmpsl
out
sahf
lds
xor
test
pop
imul
mov
in
int3
xchg
popa
test
jmp
push
sub
adc
pop
cmp
mov
lods
shrb
popa
arpl
getsec
ficompl
les
lds
fdivl
add
call
arpl
iret
std
pop
mov
into
adc
sbb
xor
leave
xchg
jmp
test
jnp
fwait
mov
cmp
iret
inc
js
inc
push
jno
scas
mov
xchg
inc
add
scas
jp
daa
std
push
insl
jae
xor
lcall
int
lcall
xchg
mov
or
push
dec
aaa
or
cmc
scas
icebp
adc
pop
adcl
mov
xchg
mov
mov
jp,pn
lods
cmp
out
popa
fists
xor
push
cmp
inc
outsl
in
and
and
mov
loop
cmp
mov
cs
outsl
mov
test
jge
mov
aas
in
mov
cmp
xchg
sub
mov
or
movsb
dec
mov
dec
mov
ljmp
add
fnstenv
mov
cmp
push
jcxz
mov
and
dec
fldt
out
std
outsl
call
dec
inc
cwtl
mov
pop
inc
test
sbb
loopne
mov
inc
mov
push
sbb
mov
pop
adcb
or
jl
insb
inc
dec
fsincos
call
or
sbb
xchg
adc
xchg
jmp
mov
dec
xchg
loopne
or
pop
and
pop
sub
daa
adc
sub
daa
inc
aad
mov
jg
movsb
mov
cmpsb
loopne
or
cmpsl
loop
push
repnz
scas
adc
xor
mov
inc
mov
pop
pushf
push
jbe
in
sti
dec
or
cmp
lret
int3
add
cs
adc
hlt
xor
or
xchg
js
movsb
sahf
outsb
mov
adc
xor
mov
xchg
sbb
test
int
adc
cmp
leave
pop
ret
dec
dec
jmp
adc
in
popf
inc
lret
inc
and
scas
mov
sbb
dec
jg
add
mov
push
cwtl
sub
adcl
add
leave
fwait
fs
mov
enter
fwait
outsl
cmpsb
icebp
and
add
shl
fdivrl
call
or
mov
mov
sbb
sub
sarl
sub
sbb
mov
jns
add
mov
or
xor
rcr
jo
leave
dec
xchg
pop
sbb
or
jb
jnp
inc
xchg
mov
sbb
lcall
jb
ss
cmp
or
iret
add
repnz
mov
dec
in
mov
or
lcall
pop
idiv
and
sbb
mov
mov
jne
icebp
push
test
notl
mov
aam
cmp
adc
cmp
mov
mov
ds
mov
dec
enter
outsl
inc
push
xor
add
fisttps
mov
fxch
mov
mov
movsl
jb
mov
dec
cwtl
add
rcrb
push
aam
jne
or
test
jp
in
fs
out
dec
pushl
jge
jg
add
or
or
cli
mov
inc
movsl
and
pop
pop
in
lret
repnz
jno
add
adc
and
js
lds
mov
iret
dec
cmpsb
movsl
jns
aaa
imul
ja
mov
sti
inc
or
repnz
fadds
call
pop
mov
inc
push
imul
lock
or
pop
aas
arpl
xchg
or
dec
out
and
iret
jbe
sbb
mov
test
mov
jle
aam
and
movsb
push
dec
and
mov
movsb
cmp
lock
and
test
pop
dec
sub
xor
sti
sahf
int3
jmp
ja
dec
add
test
inc
fstpt
out
push
inc
sar
std
sub
pop
mov
sbb
mov
and
cmp
push
fwait
xchg
fcompl
call
out
int
fsubr
dec
mov
dec
hlt
gs
shlb
cltd
dec
loope
cli
push
push
into
nop
shll
ds
mov
adc
jo
ret
mov
les
push
or
sub
repz
aam
fsubl
adc
es
mov
xor
in
xor
repz
data16
and
stc
repnz
mov
lahf
and
push
jge
movsl
js
rcrb
ds
cmpsb
xor
mov
dec
xchg
xlat
cltd
inc
inc
mov
mov
push
ds
mov
subb
in
fucom
sti
mov
cmp
incl
jns
fmuls
lret
mov
es
aas
not
lret
jle
jae
push
fwait
jne
cmp
push
sub
cmp
in
cmp
mov
cwtl
ror
mov
fwait
inc
xchg
ds
xor
push
jnp
cmp
jne
xchg
pop
loopne
cmp
mov
xor
jno
pushf
in
test
sti
imul
xchg
inc
push
in
dec
in
sub
dec
addb
mov
cmpsl
inc
bound
or
mov
std
adc
push
test
cmp
mov
pop
adc
xchg
sti
sub
mov
jnp
pusha
stos
and
loop
sub
push
or
out
stos
aaa
pop
dec
pop
mov
jae
push
pop
out
add
add
mov
int
jnp
in
lods
adc
idiv
popa
outsl
stc
and
pop
pmuludq
mov
inc
xchg
xor
iret
add
and
add
das
daa
scas
jge
xchg
inc
xchg
pop
xadd
shll
jo
loopne
sbb
xchg
cmp
mov
int3
out
movsb
push
pop
pop
jae
push
sub
adc
jbe
xor
sub
lcall
jb
loope
mov
wbinvd
push
pusha
mov
insb
cli
adc
push
mov
lret
mov
gs
lahf
repz
xor
add
flds
lods
dec
fcoml
inc
nop
cmp
decb
aam
loope
push
pusha
xor
or
stos
popl
inc
add
lret
jns
dec
sti
jno
loopne
mov
idivl
clc
std
fwait
add
clc
pop
xor
mov
jp
data16
jle
inc
mov
jmp
jo
insl
sub
add
mov
in
bound
mov
xor
dec
pop
cli
cli
ret
repz
xor
sub
shrl
jne
fildll
out
xor
aad
inc
push
cmp
sti
insl
sti
add
subl
adc
aas
icebp
xchg
push
xchg
xor
pop
cwtl
sub
jecxz
cmp
mov
hlt
cmp
inc
repnz
lea
and
iret
xchg
and
cld
adc
push
cmp
inc
inc
sarb
jg
pushl
jl
adc
inc
mov
lret
insl
dec
fidivs
lock
das
mov
nop
mov
jo
mov
imul
dec
ret
stos
shrb
jo
pusha
mov
adc
dec
and
mov
cwtl
testb
sbb
es
cmp
leave
cs
xchg
andb
test
movb
cmpsb
push
in
cmp
xor
scas
js
xchg
and
cmp
mov
stos
fcompl
sub
shrl
loop
sahf
mov
push
mov
cld
movsl
inc
repnz
cmp
out
lret
popa
xchg
and
or
into
mov
je
cmp
adc
jnp
popf
xor
popa
lds
or
outsl
xor
pop
jbe
jl
scas
inc
sub
push
mov
ret
cmp
inc
fwait
pop
dec
stc
fldl
mov
outsl
sub
leave
xadd
dec
push
jnp
ja
adc
pop
scas
jle
add
push
es
gs
ret
cmpsb
sbbl
xchg
push
mov
jae
xor
iret
gs
cmc
repz
pop
ljmp
xchg
fld
scas
rcrb
push
movsl
push
and
and
mov
call
mov
pop
lea
imul
loop
je
mov
mov
adc
cmpsb
loop
lahf
enter
dec
popa
aaa
out
loopne
mov
xchg
es
popl
mov
pop
fsubs
sbb
sub
mov
loope
mov
sahf
cmp
pop
push
ljmp
jae
pop
pop
or
incb
add
add
jl
mov
mov
inc
mov
xlat
jo
inc
repnz
lock
push
push
lret
xor
nop
lcall
js
rorl
jne
mov
jg
inc
or
adc
sbb
int3
out
inc
insb
sub
insb
mov
push
out
mov
or
lods
shl
push
mov
jg
jl
mov
xchg
mov
pop
mov
jmp
adc
jmp
dec
sbb
cltd
icebp
aas
loope
cmp
pusha
and
lods
mov
les
aas
cmpsl
bound
and
and
jbe
lret
jp
movsb
arpl
mov
jno
push
push
mov
cmp
aaa
dec
xor
fistps
mov
call
push
into
leave
mov
inc
mov
sub
daa
dec
pop
adc
jge
pop
popf
mulb
dec
dec
jns
sti
inc
testb
jnp
add
sbb
sbb
mov
cmp
sarl
scas
jbe
jns
inc
std
or
jnp
faddl
loop
sbb
push
bound
cmpb
pop
xchg
cli
rcl
movsl
ret
push
stos
addr16
iret
mov
in
js
inc
mov
and
dec
add
mov
stos
pop
lock
xchg
les
adc
popa
out
out
mov
and
negb
lods
rcll
pop
ljmp
push
sahf
stos
adc
mov
sub
mov
xorl
pushw
rolb
mov
aam
cmpsb
shr
and
ljmp
sub
iret
sarb
jne
xchg
inc
xchg
adc
jb
inc
and
out
mov
pop
stos
mull
sbb
jae
jae
sub
inc
mov
jb
imul
sub
movsb
mov
icebp
imul
cli
andnps
push
xlat
pop
add
mov
jno
mov
mov
jecxz
data16
cltd
xchg
rcl
fstpl
popf
mov
sbb
xor
inc
sub
fsubrp
test
aas
xor
mov
pop
adc
roll
shrb
lret
jle
fldt
outsb
loopne
mov
mov
lret
pop
mov
sub
dec
xchg
stos
int
pop
test
addl
jl
in
sbb
xor
inc
in
or
test
cld
mov
out
dec
mov
fstl
add
mov
gs
sub
mov
pop
push
xor
ret
push
stos
sbbb
cwtl
insb
push
leave
cmc
call
movsb
test
sbb
mov
cltd
cmp
jae
pop
pop
push
test
fadds
addl
int3
and
fs
mov
shr
pop
lahf
cmpsb
sti
cmp
cli
pop
lahf
add
xor
push
int3
mov
cmpsl
xchg
sbb
mov
pushf
das
add
mov
mov
outsl
adcb
loopne
test
mov
jb
push
call
mov
xchg
push
popa
gs
jecxz
sbb
pop
jno
aad
dec
xchg
roll
enter
sahf
adc
imul
fisubs
sbb
and
pop
cmp
dec
lret
test
jo
cmp
or
xor
outsl
add
nop
adc
pop
fadds
insb
dec
jp
imul
data16
scas
out
shll
mov
pop
lret
mov
cmp
cs
sbb
cmp
js
adc
cli
push
aaa
and
in
je
adc
in
mov
xchg
inc
ss
xchg
pushf
mov
mov
fiadds
test
xorl
ret
cmp
dec
cltd
mov
in
sbb
fcmovne
cmp
jne
sbb
mov
sub
das
or
pop
mov
loop
push
and
test
test
scas
push
inc
xor
xchg
outsl
mov
xchg
mov
add
in
sbb
inc
add
scas
stos
push
loop
and
data16
popa
push
mov
or
xchg
sbb
scas
dec
ja
stc
push
push
pusha
addr16
xchg
shlb
call
rcl
sti
lea
mov
push
or
add
push
std
jl
fdivs
xor
inc
leave
push
jg
jecxz
int3
movsb
rcl
and
test
enter
cmpsl
or
xor
xor
sub
pop
insl
and
pop
xchg
ds
xor
and
fidivl
pushf
mov
lods
test
add
shlb
and
mov
frstor
jnp
mov
call
and
mov
lret
sbb
or
inc
daa
leave
ljmp
inc
hlt
or
jnp
push
xlat
adc
push
push
cmpsl
bound
dec
loop
test
mov
push
in
pop
push
aad
std
imul
fcmovnbe
sarl
mov
lcall
sbbb
stos
addr16
es
mov
stc
sub
fs
ljmp
xchg
xchg
or
mov
sub
jmp
cmpsb
movsl
and
scas
jnp
ss
ljmp
testl
das
pop
cli
mov
fcompl
cmc
xchg
popa
and
pop
clc
repz
push
rcll
inc
sub
nop
out
outsb
std
cmp
je
mov
jmp
mov
fnstcw
es
and
adc
mov
in
or
je
pop
int
xchg
bound
mov
sbb
sbb
ffree
fs
repz
clc
mov
pop
es
mov
jnp
sub
sub
or
in
scas
pop
mov
cmp
outsb
adc
xor
xchg
xor
dec
dec
jmp
jl
dec
hlt
dec
clc
sbb
mov
loopne
scas
dec
movsb
xchg
xchg
add
dec
subl
test
sbb
add
aam
add
mov
dec
xchg
hlt
mov
sub
pop
sbb
fadds
sar
adc
push
push
ja
inc
mov
loop
inc
sbb
adc
imul
cmp
mov
clc
adc
jge,pn
mov
test
jmp
inc
mov
add
push
add
in
sbbl
dec
mov
jbe
lds
sub
shll
inc
cltd
into
jbe
dec
push
push
loop
xor
cmp
pop
fsts
xchg
shlb
ja
in
push
mov
lock
lods
or
inc
and
xchg
and
add
into
lahf
addr16
pusha
or
scas
and
dec
lds
xchg
pop
cs
popa
xchg
sbb
enter
cmp
dec
add
loope
cmc
dec
inc
dec
sbb
sbbl
xor
adc
mov
or
in
and
mov
outsl
cpuid
int3
inc
lahf
push
in
fstpt
push
bnd
js
stc
sub
in
out
sbb
loope
mov
xchg
pop
cltd
mov
hlt
adc
sub
pop
xchg
cmp
inc
cs
xchg
pop
outsl
nop
push
mov
bound
pop
mov
fcompl
xor
jbe
ds
mov
imulb
push
popf
push
shlw
dec
ds
out
pushf
out
aaa
jp
cs
mov
pop
sbb
cmp
mov
sub
popf
aad
mov
test
mov
pop
jns
outsl
imul
lock
fistpll
push
out
insb
sbb
xor
push
jno
loope
ds
lret
popf
mov
sarw
shrb
adc
lock
inc
sahf
outsb
loope
xchg
imul
or
shrl
clc
dec
pop
cmp
fimull
and
xlat
jbe
mov
sbb
xchg
mov
mov
inc
sbb
lret
test
push
adc
jecxz
out
push
xlat
lcall
pop
test
orl
das
lcall
push
and
xchg
push
sbbl
mov
mov
ds
gs
pop
sub
xchg
cmc
add
inc
pop
jp
insl
cli
mov
out
stos
insb
leave
or
jp
mov
and
dec
jmp
xchg
shlb
fwait
bound
daa
mov
xor
ljmp
jl
push
pop
jmp
test
lods
mov
push
sub
test
fstpl
in
xchg
shrl
xchg
mov
fdivrs
inc
daa
and
dec
aaa
inc
mov
loope
mov
jne
xor
movsb
mov
push
jo
in
adc
fwait
dec
das
scas
jle
arpl
jle
cmp
adc
mov
pop
bound
xchg
arpl
roll
ljmp
push
lods
push
rolb
pop
push
adc
test
data16
mov
mov
cmc
push
sub
pop
insb
mov
add
add
lret
loopne
cmp
bound
cs
aad
push
mov
cs
pop
enter
das
push
and
or
shll
cmpl
xchg
fistl
lahf
or
bound
sti
cmp
scas
cs
popa
push
fs
call
pop
push
mov
mov
gs
sbb
cmpsb
jmp
cmpsb
adc
data16
movsl
out
sub
jp
or
int
inc
je
rcr
pop
jle
jg
xchg
jg
inc
out
and
out
popf
jmp
push
aam
aad
sarl
mov
loope
ja
push
pop
aaa
int
call
fidivrl
sub
cltd
xchg
ficoml
daa
das
xchg
loop
mov
mov
adc
adc
in
aad
lock
loop
cltd
or
popa
adc
xchg
xor
pusha
mov
shlb
pop
imul
sahf
jbe
cmp
ret
jle
loop
mov
or
jnp
rclb
loope
lret
outsb
add
dec
mov
test
push
clc
scas
inc
in
je
std
xor
or
wbinvd
pop
add
leave
jl
lea
mov
dec
jne
mov
int3
daa
mov
mov
lahf
pusha
shlb
push
jo
add
mov
loope
or
sbb
xchg
insb
into
inc
shrl
or
jl
pop
push
scas
hlt
je
add
mov
movsl
cmc
stc
add
rorb
mov
cmp
or
pop
sbb
jns
sar
les
add
bound
loop
enter
mov
xor
lret
leave
dec
stc
pusha
push
out
mov
ljmp
push
mov
data16
fadd
mov
ss
shufps
pop
push
xor
out
pop
cmc
inc
ret
cmp
cwtl
adc
inc
or
xor
into
mov
xchg
push
push
inc
xchg
adc
insl
add
lea
shrl
xchg
shlb
pop
fbstp
cmpsb
push
outsb
imul
icebp
cmovg
mov
add
inc
dec
shll
cli
mov
mov
sub
daa
and
cmp
je
fdivp
aaa
fnstsw
push
outsb
mov
and
xor
push
inc
int3
push
xlat
shl
mov
mov
adcb
sub
fdivrl
push
pop
mov
dec
sub
dec
int
enter
jno
sbb
mov
mov
ret
jl
mov
clc
fiadds
pop
cwtl
push
fisubrl
aam
mov
mov
movsb
aas
pop
adc
fidivrl
pop
mov
sbb
jp
mov
ss
push
outsb
or
xchg
pop
sub
fmull
mov
or
popf
adc
push
cmp
stos
icebp
mov
dec
dec
mov
adc
cwtl
je
jnp
out
or
cmp
cmpsb
pop
dec
dec
mov
jns
cltd
stc
jp
fstpt
jnp
and
or
sub
movsl
movsl
das
adc
push
mov
push
enter
xchg
lock
out
xchg
xchg
push
sub
mov
sub
push
in
dec
loope
out
mov
cmpsb
cmp
aaa
aaa
sbb
mov
out
insl
xchg
lock
ret
inc
popf
cs
sbb
adc
test
inc
jl
lret
into
lcall
mov
shll
xchg
push
rcrl
xchg
testl
pop
lock
sub
lret
sbb
cwtl
mov
mov
inc
pop
xchg
xor
rcr
js
and
adc
adc
in
test
mov
cmp
int
mov
pop
and
jbe
inc
mov
dec
int
push
rcrb
shl
cmc
push
popf
loope
fdivrs
test
pop
sbb
loope
jno
js
lods
test
cmp
bnd
inc
je
nop
movsl
dec
mov
arpl
data16
stc
imul
add
mov
test
pushf
or
les
inc
sbb
pop
mov
andb
adcb
stos
ret
aam
xchg
xchg
jae
add
mov
mov
lea
ljmp
cmp
out
mov
pushf
mov
jb
cld
rcl
mov
lcall
sarl
mov
fstl
sbb
out
jp
scas
add
and
mov
pop
shlb
mov
jle
test
add
add
cmc
roll
xor
xlat
fisttpl
mov
loop
test
daa
shll
in
popa
mov
sub
jmp
outsl
jg
cmp
inc
arpl
mov
mov
push
pop
outsl
push
pop
jecxz
jge
add
cwtd
test
fmull
dec
cmc
adc
jmp
push
fxam
bound
jmp
jae
repnz
int
push
leave
pop
hlt
inc
jge
inc
je
jae
cwtl
and
mov
adc
fistps
loope
outsl
imul
inc
jmp
inc
popf
pop
movsb
aam
mov
int
pop
pop
pop
mov
movsb
call
adc
movsl
jp
in
in
aam
lret
add
sub
jb
scas
cmpsb
cmp
mov
nop
les
pop
pop
mov
push
popf
ds
data16
loop
popa
sbb
cltd
xor
sbb
push
cmp
or
lcall
outsb
jne
ljmp
jl
rol
push
in
adc
imull
fnstenv
jbe
shrl
mov
popf
ja
push
cmpsl
ret
lods
mov
test
lea
add
cld
mov
mov
cmp
out
movsl
cmpsl
fucomip
xchg
pusha
enter
and
pop
add
push
test
jp
dec
out
xchg
dec
sti
jns
jnp
pop
or
sub
jp
fs
dec
push
loopne
xchg
loopne
or
inc
xor
dec
mov
test
add
mov
stos
shrl
vdivps
popf
fdivr
jnp
sbb
cmpl
mov
add
cli
sahf
sub
mov
jg
push
adc
xchg
mov
orl
mov
mov
mov
cmp
stos
scas
mov
lahf
es
mov
stos
pop
xor
or
nop
push
aam
out
inc
jp
lods
add
es
cld
xchg
push
or
leave
xchg
stos
int3
sbb
inc
push
jp
jl
sub
fcomp
scas
fdivr
rolb
add
test
jno
xor
push
sub
arpl
dec
outsl
dec
dec
sub
imul
test
popa
xchg
scas
jle
fwait
inc
js
mov
gs
lock
scas
outsb
add
sub
ds
sub
jg
mov
flds
mov
jp
jbe
push
add
cs
enter
addr16
psubsb
stos
and
and
adc
xchg
and
xchg
jno
sarl
aad
mov
loope
jnp
insb
cltd
stos
pop
adc
cmp
mov
inc
movsl
pop
cmp
mov
in
test
add
sarl
mov
pop
lock
in
into
mov
cmp
push
iret
xchg
lea
sub
mov
lds
roll
sub
jb
icebp
in
push
daa
cmp
dec
arpl
jne
pop
push
pusha
sub
inc
outsl
lret
data16
aaa
mov
mov
out
aaa
xor
iret
out
das
dec
sub
dec
gs
test
cmp
mov
cmp
inc
dec
add
dec
addb
mov
push
popf
ljmp
pop
jg
push
push
and
or
stos
jmp
idiv
or
ret
addb
call
fwait
pop
repz
pop
iret
out
sbb
sarl
das
push
push
mov
mov
loope
iret
xchg
lret
loopne
aad
xchg
jg
stos
dec
cmp
mov
and
subb
xchg
movsb
lret
call
loopne
in
aad
sbb
mov
and
and
mov
loopne
mov
aam
inc
arpl
pop
aad
or
jmp
aaa
stos
in
mov
js
and
ljmp
push
fwait
mov
movsb
jp
mov
pop
mov
or
sti
push
bound
inc
mov
nop
stos
icebp
pop
call
xchg
jnp
pop
mov
lock
cs
fadd
pop
xchg
mov
inc
xchg
push
push
xchg
jge
sbb
scas
hlt
psadbw
fcompl
push
or
pop
cld
inc
dec
das
jl
insb
sarb
out
push
jo
test
or
paddsb
movsl
stos
and
cmpsb
in
addr16
jp
mov
pusha
pop
out
shlb
lahf
xchg
call
mov
cmp
push
testb
add
lea
fmul
xchg
cmp
jmp
movsl
push
mov
xchg
sub
mov
add
jae
add
mov
inc
das
lods
fdiv
cld
dec
enter
pop
adc
je
cmp
xchg
or
push
rclb
loopne
loop
mov
in
jle
jmp
xchg
cld
ror
push
jge
pop
mov
ret
pop
cwtl
xlat
clc
mov
inc
dec
cli
xor
out
sub
xor
pop
sti
test
or
jmp
mov
jl
push
hlt
mov
repnz
fadds
sbb
in
data16
in
pop
sbb
idivl
int3
cwtl
mov
push
lahf
leave
rcll
nopl
sbbl
loope
or
jl,pn
jmp
xchg
ja
std
xchg
xchg
out
mov
sbb
jl
jle
test
or
in
mov
ljmp
cmp
inc
adc
fstpl
sar
pop
push
popa
lods
xor
jmp
xor
jo
add
pop
int
loop
lcall
js
sti
cli
dec
shr
sti
push
or
sbb
sti
push
daa
jbe
mov
cmc
in
lret
inc
dec
inc
test
sbb
ds
lcall
and
or
dec
jne
in
ret
mov
pop
ljmp
pop
xor
xlat
inc
push
rep
cmc
rcl
xchg
jge
cmp
add
imull
mov
sub
fs
adc
add
les
sbb
popa
scas
les
sub
add
fs
ds
mov
in
dec
aaa
loopne
sbb
jge
mov
and
orl
sub
in
push
dec
adc
movsb
int
cwtl
sub
addl
andl
lret
pop
mov
mov
pop
mov
ljmp
xor
lcall
inc
mov
mov
inc
out
sub
jmp
enter
mov
sub
pop
je
jnp
jno
dec
negl
jae
cmc
mov
adc
push
jbe
mov
es
push
popf
mov
shl
dec
jb
and
mov
adc
leave
adc
add
xor
in
aaa
ss
xchg
jno
push
subl
pop
xchg
jns
mov
dec
rorb
test
lock
and
adc
add
rcrb
sbb
scas
sahf
paddw
cmp
fdivs
mov
sub
mov
pop
fucomip
in
cli
mov
sbb
pop
or
xchg
mov
dec
sub
xor
or
idivl
and
aas
mov
test
pushf
call
ja
add
je
xchg
aaa
cmc
sub
or
adc
inc
add
lods
movsl
mov
xchg
test
sti
cs
add
test
addr16
fdivr
in
inc
sub
cwtl
aam
xrelease
sbb
xchg
xor
iret
int
sub
and
pushf
adcb
jo
mov
gs
pusha
add
mov
mov
and
dec
xchg
ljmp
xchg
mov
xor
fdivrs
push
or
jle
jns
jp
push
or
or
cld
pop
data16
pop
fldcw
cmp
loop
xchg
inc
cmpl
popa
int3
in
fiaddl
test
cmp
sbbl
and
pop
pop
push
jmp
fstps
imul
js
pop
daa
out
xchg
or
and
sbb
mov
cmpsl
jns
dec
pusha
jb
push
cmpsb
xor
loopne
movsb
mov
out
pop
adc
cmp
pop
loopne
mov
sahf
fcmovne
pop
test
pop
xor
xchg
jnp
orl
mov
pop
pop
aas
lods
loopne
js
lahf
adc
cmp
mov
mov
xor
stos
leave
les
imul
xchg
xlat
arpl
pop
cmp
xchg
aad
es
scas
shrb
aas
or
in
dec
into
push
fucomi
xchg
mov
scas
and
in
cmpsl
mov
adc
loopne
addl
cmc
dec
outsb
ficoms
inc
lret
jnp
and
movsl
shl
addr16
int
fimuls
mov
daa
dec
cmp
jle
push
lcall
pop
in
fdiv
mov
and
mov
orb
cmpsb
sub
xor
mov
pop
mov
and
xor
jb
sbb
mov
pop
je
cld
jecxz
test
sub
orb
sahf
cmpsl
jbe
adc
inc
mov
push
mov
push
pop
cmpsb
add
outsb
or
jae
jne
xchg
ret
or
arpl
mov
xlat
xor
fbstp
std
sub
std
mov
adc
xor
pop
push
sti
fldt
cmp
pop
in
loope
rorb
xor
bound
mov
dec
jl
fwait
lock
fbld
pop
xor
sahf
or
inc
in
outsl
aas
es
testb
dec
mov
cmp
dec
xchg
sbb
test
or
scas
psubusw
push
cld
dec
rcrb
test
adc
xchg
mov
addr16
scas
cld
sbb
lret
adcl
mov
out
mov
push
xlat
jne
in
rclb
push
movsl
inc
sub
xchg
orb
fsubr
pop
ja
scas
sbb
mov
fwait
outsl
jnp
push
cmp
or
fwait
pop
scas
cmp
xor
outsl
dec
jbe
addb
jnp
xchg
adc
jne
out
insb
out
adc
int
sbb
push
mov
and
inc
xor
xchg
into
ret
cmp
mov
push
cmpsb
jae
or
mov
push
rolb
jl
cmp
rorb
stos
pop
and
in
cld
or
out
push
cmp
ljmp
hlt
and
cmpsl
out
out
repz
xchg
outsb
data16
jns
mov
mov
push
orl
movl
push
mov
push
xor
aam
inc
outsb
push
cs
lret
lret
lods
sti
push
push
pop
mov
jbe
jp
push
pop
divb
xor
inc
lret
inc
in
pushf
inc
in
gs
xchg
sub
xor
mov
mov
mov
outsb
cmp
js
fcoml
and
cmp
lahf
xrelease
push
mov
stos
dec
xor
pop
rolb
xor
push
pop
and
pop
pop
push
fcoml
stos
sub
push
push
or
call
pop
jbe
fstpt
inc
inc
fs
dec
jge
xor
in
mov
gs
daa
pop
cld
mov
mov
fsubl
fs
dec
mov
popa
cmp
js
mov
adcl
cmpsl
out
ret
pop
lcall
or
cmp
push
xor
outsl
sar
or
mov
ret
ss
loopne
test
push
push
mov
push
mov
cmp
mov
jne
mov
shr
dec
fidivl
push
dec
push
push
daa
data16
hlt
dec
popf
imul
push
jnp
das
push
mov
mull
ja
push
cmp
rolb
shlb
jge
cmp
jae
std
test
jo
push
cmp
adcb
ret
jecxz
arpl
jae
ja
cltd
xchg
jg
sub
outsl
pop
add
popf
es
mov
fstps
pop
xlat
inc
sahf
orps
movsb
sub
jae
test
lret
add
inc
test
dec
jecxz
xor
pop
mov
pop
push
sahf
mov
sub
ljmp
into
pop
fmulp
test
rclb
or
rcl
fs
pop
mov
loop
and
cld
jle
inc
jnp,pn
adc
push
in
mov
ljmp
pop
cmp
ror
adc
cmp
xor
pop
aam
int3
aas
mov
xlat
insl
in
mov
xchg
loopne
xchg
mov
push
cmp
lret
lods
cmpsl
test
loope
pushf
and
int
lds
in
in
mov
adc
mov
fidivl
les
push
add
or
sub
push
jbe
push
add
fisubrs
lock
cs
cmp
push
adc
inc
push
mov
mov
xchg
pop
mul
sub
das
xor
fcmove
add
push
mov
xchg
sahf
out
mov
iret
sarb
sti
sbb
xchg
sbb
aas
push
xor
dec
cmp
out
push
jb
mov
push
xchg
sbb
xor
mov
or
inc
sub
add
fisubs
mov
arpl
push
push
pop
cwtl
popa
out
test
jmp
test
or
cwtl
data16
cmp
out
ret
mov
lods
inc
testl
bound
dec
mov
xchg
mulb
aas
jle
jb
push
dec
sub
imul
scas
dec
dec
sub
jg
jbe
push
fcomps
cmp
and
mov
pop
adc
sub
bound
in
das
fisubrl
jbe
and
int3
push
cmpsb
in
dec
add
xchg
into
push
out
mov
adc
cmp
stos
mov
stos
xor
mov
leave
adc
movsb
jno
xlat
pop
jl
in
sub
jne
xor
and
xchg
nop
out
lcall
pusha
pusha
add
mov
fwait
xlat
lock
jg
out
imul
push
lret
or
xchg
cmpsl
jecxz
iret
mov
and
xor
inc
mov
or
sahf
mov
leave
sub
push
js
ucomiss
mov
add
sbb
mov
stos
out
pop
les
aaa
push
sbb
inc
xor
push
inc
mov
xor
sub
arpl
cmpsb
jecxz
jp
dec
jge
push
cmp
sti
in
push
adc
iret
mov
cmp
repnz
fs
stos
mov
and
shlb
sub
imul
xchg
jl
pop
ds
and
xorl
lcall
clc
sub
push
stc
mov
cmp
sbbl
mov
cld
pop
cli
cmc
pop
adc
aas
mov
in
int
std
hlt
stos
addl
out
roll
loopne
cmc
pop
sbb
push
mov
jno
arpl
daa
inc
test
pop
lods
mov
rorl
mov
xlat
sub
gs
push
inc
sbb
clc
lods
andb
mov
lods
cmp
cwtl
in
mov
fisttps
loope
jnp
sub
bound
sub
mov
mov
into
add
aaa
mov
loope
outsb
out
mov
aaa
pop
cmpsb
cmpsb
dec
dec
pop
shll
hlt
and
rcrl
and
aad
and
andl
mov
xchg
cmp
imul
pop
arpl
pop
pop
movsl
xor
rclb
push
ss
pop
sahf
cmp
or
fcoml
sub
sti
push
jge
xchg
inc
loope
inc
adc
xchg
aam
pop
aad
iret
outsb
push
sar
aad
adc
test
sbb
test
xchg
sub
pushl
rcll
addr16
mov
fcomp
outsb
xchg
mov
aas
mov
movsl
imul
jge
inc
inc
mov
loope
jmp
dec
in
shrl
das
adc
adc
insl
xchg
loopne
sbb
dec
scas
js
fcomp
outsb
jle
inc
cmp
push
subl
add
cmc
sarb
nop
ret
jbe
inc
fadd
sarl
pop
and
cmp
ret
mov
idivb
ss
dec
pop
jp
cmp
mov
jnp
xchg
enter
lods
gs
xor
add
and
push
xchg
push
add
movsbl
outsb
daa
pop
decl
push
das
mov
imul
pop
pusha
pop
and
xchg
fmull
dec
sub
das
mov
adc
sub
shl
mov
sbb
loope
shrb
pushf
pop
jle
push
in
sbb
rorb
xchg
xor
mov
mov
jb
sbb
push
cld
hlt
in
retw
mov
icebp
dec
push
fildll
in
pop
loopne
mov
mov
out
arpl
add
sarl
dec
xchg
inc
or
xchg
push
sub
cmpsl
mov
mov
mov
js
flds
lret
insl
adc
pop
aam
in
stos
sarl
mov
out
ficompl
in
and
insl
sbb
jp
insb
jecxz
ss
shrl
into
jle
push
aad
imul
popf
and
mov
or
xchg
pop
cmp
inc
into
pushf
ret
test
lock
fwait
das
shrl
jne
ljmp
pusha
stc
enter
mov
or
cltd
sbb
cli
mov
aad
scas
pop
call
jae
sbb
test
mov
sub
bound
bound
aas
test
push
into
ss
ret
jmp
and
addr16
insl
addr16
dec
notb
mov
movsb
pop
inc
rep
and
pushf
xchg
in
xchg
adc
cs
jne
stos
xchg
jge
test
push
lahf
push
pop
pop
or
cld
mov
ret
or
and
xchg
sbb
scas
in
pop
ror
xchg
pusha
out
xorb
outsb
imul
sub
or
dec
xor
mov
out
fsubrl
movnti
stc
fistpll
xor
jns
std
arpl
cmpsl
and
lea
mov
cwtl
push
fiaddl
pop
mov
jp
aas
push
les
add
and
jp
mov
lods
xorb
jb
mov
dec
mov
mov
rol
call
sti
jo
fs
rcrb
loop
stc
jno
js
bound
lcall
jp
mov
mov
and
lret
sbb
xor
dec
fstl
fists
lods
add
insb
push
or
adc
int3
cmp
addr16
lods
cld
inc
pop
lahf
adc
fstl
mov
or
push
dec
dec
enter
outsl
sub
adc
lock
aad
push
dec
lea
pop
repnz
pop
out
dec
jns
xchg
pop
in
xchg
inc
pop
mov
jl
push
lcall
daa
and
lahf
mov
scas
cmp
repz
jae
fdivs
imul
sbb
shl
incl
outsb
xor
xchg
pop
xor
inc
add
dec
and
test
and
jb
addb
adc
mov
xchg
testb
jb
jmp
and
stos
cwtl
imul
or
or
pop
mov
mov
pop
push
pop
or
xchg
jno
jb
mov
out
std
outsb
sub
add
call
jnp
decb
and
and
sub
stc
jge
mov
sub
push
xor
xor
jecxz
ja
mov
dec
pop
add
outsb
xchg
xchg
jne
jnp
push
jge
mov
or
mov
rdpmc
xchg
xchg
xchg
ja
rorl
dec
popa
mov
movsl
push
push
xchg
mov
push
mov
jnp
stos
xchg
xchg
xchg
fs
sub
sahf
imul
loop
imul
movsb
mov
and
sub
rorl
sub
or
cld
xor
cmpl
push
bound
fyl2x
xor
stc
or
xchg
aas
aaa
push
in
gs
sbb
cltd
mov
rcll
mov
and
lret
sub
mov
imul
aas
imul
ret
sbb
sbb
lds
xchg
dec
sbbb
std
fnstenv
stos
cld
add
and
mov
fmul
dec
jl
fistpll
push
movsl
das
push
loope
in
xorl
sbbl
sub
mov
adc
call
out
xchg
and
js
sarl
mov
mov
shlb
inc
push
push
xchg
add
std
mov
mov
xchg
dec
sbb
lds
xchg
lods
test
cwtl
xchg
or
leave
inc
and
jl
je
adc
test
mov
push
mov
sbb
sbb
jecxz
cmc
sub
add
or
and
xchg
adc
xchg
mov
and
pop
or
stc
pop
imul
orb
rcr
dec
jnp
add
movl
cmp
add
inc
lea
and
xor
push
cs
jb
gs
push
inc
cmpsl
push
aas
movsb
mov
aad
mov
cmp
pop
outsb
add
pop
hlt
adc
in
xor
fadds
aad
std
cld
pop
and
ud1
testb
mov
mov
lahf
call
xchg
stos
cmpb
xlat
adc
pop
mov
imulb
fidivrs
lods
faddl
push
push
xchg
sub
scas
mov
bound
mov
shrb
mov
imul
mov
pop
lds
jmp
cmpsl
into
mov
das
jae
push
cmc
xor
jbe
adc
mov
arpl
leave
fnstcw
xor
xor
xor
inc
fiadds
insl
inc
bnd
int3
xor
je
add
pop
fdiv
jns
fmul
xor
lcall
bound
and
das
cltd
pusha
cmpsl
pushf
lcall
dec
sub
stos
pop
arpl
addb
and
or
adc
je
dec
idivl
bound
cmc
cmpsb
fisttpl
mov
in
mov
mov
in
ljmp
fbld
cmp
mov
lods
sbb
loop
aam
mov
push
aam
pop
lcall
outsl
dec
fwait
jbe
mov
xor
arpl
aam
xchg
lods
test
mov
mov
fwait
sbb
mov
lods
xchg
cltd
repnz
stos
movsl
pushf
bound
mov
cmpsb
adc
leave
sti
xor
or
loope
out
push
cld
ljmp
lret
mov
push
js
mov
shrb
sahf
bound
dec
popa
adc
dec
imul
sub
and
add
sub
push
add
pop
ljmpw
xor
outsl
fdiv
or
mov
fs
fdivl
or
andb
sub
push
push
shll
mov
sub
rol
dec
int3
dec
ret
jl
fdivrl
je
and
mov
out
repz
xchg
lods
stc
add
je
bound
sub
pop
jge
ds
adc
mov
fwait
into
sub
leave
cmp
dec
and
sti
or
adc
in
pop
jns
cmp
mov
loop
or
dec
add
mov
xchg
mov
andb
iret
pop
xchg
mov
imull
pop
xor
or
stos
divl
dec
jne
jge
and
ret
dec
cmpsl
inc
jnp
adc
mov
rol
jmp
push
adc
mov
fdivrs
pop
cmp
sbb
mov
lahf
cmpsl
jne
imul
cmpsl
jmp
test
sub
push
cld
mov
mov
nop
jmp
xorl
fdivs
lock
dec
sbb
xlat
orl
sbb
adc
add
mov
scas
pop
test
sub
jp
lods
push
imul
fdivrl
fildll
lock
jbe
test
pusha
mov
aas
dec
fistps
or
xchg
dec
or
jmp
sub
sbb
inc
in
incb
cli
test
mov
or
cwtl
xchg
shrb
fnstenv
mov
stc
fwait
sub
cmp
loope
sbb
shrb
adc
pop
sbb
sbb
addr16
leave
insb
enter
add
push
iret
outsb
scas
cmp
cli
adc
push
sub
jge
cmp
jnp
pop
dec
cwtl
add
in
cwtl
out
mov
in
add
sub
adc
sbb
push
idiv
add
jns
mov
dec
arpl
pop
std
divb
mov
out
pop
movsl
sti
dec
test
loope
dec
mov
and
decb
rol
push
sub
xor
cmp
xchg
ljmp
mov
neg
xchg
shl
push
fisubrl
inc
cmpsb
dec
loope
pop
repz
sub
xchg
mov
scas
push
cmp
push
popa
jae
loopne
xchg
push
imul
popf
sarb
popf
cmpsl
popa
push
arpl
daa
insb
mov
outsl
mov
fimull
jge
jae
and
pop
aas
loope
and
dec
sbb
add
mov
addl
data16
mov
xchg
lret
push
js
jns
cmp
dec
and
jne
xor
xchg
cmp
xlat
jne
adc
mov
pop
test
mov
jb
jmp
lret
add
adc
lods
dec
loope
adcl
xchg
mov
jl
add
and
xchg
jnp
and
shrb
inc
das
lret
lds
xor
dec
add
xor
roll
in
sub
adc
dec
xchg
dec
push
sbb
cmpsl
bnd
dec
adcb
ja
inc
call
pushf
or
xor
xchg
mov
test
into
sub
ljmp
test
sub
iret
icebp
mov
lcall
mov
cs
js
push
mov
js
scas
test
jmp
xor
fidivrs
mov
push
push
sbb
test
or
add
mov
orb
or
xor
inc
ljmp
pop
cmpsb
clc
dec
cmc
gs
pop
push
xlat
scas
lods
outsl
sbb
or
fwait
xchg
push
lcall
inc
ret
pop
es
jecxz
mov
xchg
cmpsb
add
push
loope
xor
dec
xchg
sahf
mov
std
mov
mov
cld
mov
out
sbb
pop
mov
jb
insb
inc
add
sbb
sbb
scas
mov
adc
loope
pop
sbb
and
or
inc
adc
push
jno
cmp
mov
fdivrl
xor
and
loop
in
jno
pop
mov
fdivrs
pop
rclb
xchg
xchg
outsl
stos
mov
rcr
mov
dec
loopne
pushf
test
ljmp
pop
ja
sub
into
fidivrs
cmp
scas
xchg
pusha
inc
inc
hlt
add
cmc
leave
daa
das
fcoms
data16
inc
push
les
lea
sub
xor
sti
mov
xor
jno
xchg
sbb
ss
push
mov
aas
aas
pop
push
into
mov
xchg
movsl
cli
ljmp
pop
leave
jl
pop
nop
dec
mov
fs
bound
sbb
or
inc
or
fs
rcrl
dec
mov
pop
mov
adc
and
cmc
mov
int3
mov
cmp
or
sbb
subl
add
roll
push
jbe
arpl
jmp
mov
push
ror
and
xlat
pop
xchg
xlat
adc
xor
addr16
sbb
out
in
xor
sbb
clc
push
ret
inc
mov
sbb
clc
jno
mov
pop
adc
test
repnz
inc
ja
daa
mov
push
in
cli
mov
mov
insl
dec
insb
clc
ficoml
std
sbb
sub
roll
arpl
les
mov
pushf
lds
add
fildl
mov
popa
idivl
out
in
dec
cmp
mov
fstpt
ds
jns
fwait
and
or
push
cli
addr16
sub
sub
jecxz
aad
jecxz
cmp
arpl
lcall
iret
stos
jbe
shlb
repnz
pop
clc
cmp
add
xchg
xchg
test
jnp
aaa
sub
mov
lahf
inc
jnp
movsb
repnz
pop
ret
mov
mov
outsl
pop
adc
mov
cld
cwtl
cli
into
mov
stc
pop
dec
cs
movsb
out
jmp
mov
xorl
pop
bound
add
push
xchg
mov
dec
popa
subl
inc
in
sbb
cmpsl
mov
xor
add
mov
imul
jne
jo
cmpsb
inc
mov
shlb
lret
or
lea
cmpb
inc
cmp
xchg
push
bound
cmp
stc
jns
dec
mov
inc
pop
jp
sbb
and
sbb
push
aaa
or
add
jecxz
xchg
fdivp
pusha
or
ja
arpl
insl
jae
push
stc
add
pop
loopne
mov
mov
sar
lcall
mov
sub
dec
mov
xchg
dec
add
orl
fistpl
push
add
inc
adc
pop
ss
sub
pusha
xchg
sbb
inc
dec
outsb
in
push
jle
add
std
gs
std
fadd
iret
bound
jmp
std
sbbl
jmp
stos
mov
movsb
test
pop
inc
xchg
repnz
xor
stos
roll
movsb
jno
jne
or
jnp
pop
lods
jne
jo
lret
dec
push
movsl
inc
mov
cmp
push
fwait
xchg
sbb
fwait
adc
lock
loope
fwait
rorl
ds
lahf
mov
dec
sub
adc
cmp
outsb
out
ret
jmp
or
fcoml
cmp
and
enter
cwtl
push
push
enter
adc
movsl
sbb
repz
stos
cmp
pop
xchg
cmp
cmp
lahf
xchg
call
and
lods
mov
mov
push
jmp
mov
jb
sti
or
sbb
pop
shl
pop
repz
mov
mov
faddl
pop
dec
sub
arpl
movsl
cwtl
push
sub
inc
jae
sub
mov
jnp
fdivs
pushf
gs
push
mov
adc
adc
pop
inc
dec
fcomps
and
test
loopne
xchg
sub
xchg
push
repz
movsl
sbb
adcl
jnp
mov
test
dec
jnp
jno
es
xor
push
lcall
push
repz
mov
cmpsb
jne
mov
sbb
ja
cs
sbb
jmp
dec
icebp
adc
scas
cmpsl
or
icebp
xchg
rcr
adc
xchg
inc
rcrb
clc
xchg
jmp
and
iret
mov
jb
inc
jo
sahf
aaa
sbb
mov
inc
inc
fs
lahf
daa
es
in
filds
pushf
mov
out
jbe
outsl
in
addb
pop
pop
pop
scas
mov
push
rcr
xlat
call
dec
lds
and
and
out
rorl
jne
adc
mov
neg
jnp
mov
shlb
idivb
mov
and
ljmp
std
xchg
jnp
hlt
movsb
pop
mov
dec
and
sbbl
inc
pop
mov
int3
das
xchg
xchg
inc
test
xchg
pop
mov
xchg
push
or
popf
push
and
loope
ret
cmp
xor
xlat
sti
out
in
outsb
pop
pop
movb
xchg
test
sbb
ds
mov
sbb
dec
xchg
inc
add
adc
mov
scas
push
shlb
sbb
mov
push
and
mov
insl
sub
fsubrl
daa
lret
fdivr
mov
aaa
jp
push
and
ret
xor
sub
fwait
adc
pushf
fnstsw
imul
ja
cmp
outsb
cmp
sub
gs
push
inc
ljmp
pop
cs
jne
ss
scas
jge
sub
sbb
dec
dec
std
in
cmpsb
xchg
sbb
jge
adc
inc
movsl
testl
pop
fbld
ljmp
insl
fwait
jb
daa
jns
arpl
mov
mov
loope
and
lea
push
sahf
push
repz
cmpsl
adc
sub
and
dec
out
sahf
or
or
lahf
adc
push
fsub
dec
lcall
js
adc
scas
addr16
sub
pushf
outsl
sbb
dec
pop
cmc
daa
stc
into
les
cmp
mov
stos
addl
mov
in
popf
dec
insl
addb
ds
xor
stos
popa
imul
push
loop
mov
shr
outsb
xor
addr16
jge
inc
jmp
mov
daa
lcall
or
and
pop
push
xchg
mov
xchg
add
adc
add
insl
fisubl
mov
dec
test
add
decl
push
aad
cltd
sahf
negl
es
cld
loopne
rcr
fdivrl
subb
test
test
test
ficoms
adc
enter
cwtl
fwait
or
pop
aaa
das
and
sti
stc
adc
fdivp
jp
repz
dec
data16
or
scas
cmp
jns
cmp
icebp
cwtl
mov
push
std
es
and
cltd
mov
xchg
adc
and
mov
mov
les
mov
and
hlt
xchg
inc
ss
ds
cmp
orl
inc
sbb
sti
add
and
lea
and
adc
sub
shll
add
push
in
fdiv
sbb
sbb
imul
inc
test
push
das
mov
xchg
data16
mov
add
dec
insl
sbb
outsb
or
stos
sbb
and
pop
sbb
cmp
rcll
into
out
ds
mov
sub
stos
mov
sub
pop
ffree
sahf
lcall
fcmovnbe
and
shrl
iret
out
fstpt
add
xorl
add
pop
xchg
pop
scas
out
loop
push
int
cmp
sub
arpl
ss
outsl
mov
mov
rolb
mov
push
add
or
cmc
inc
daa
push
sub
insb
push
cmp
or
cli
cld
out
inc
pop
adc
cmp
jno
cmp
in
inc
mov
lods
aaa
jbe
test
xchg
lock
mov
ret
les
and
xchg
sub
jo
jle
rcr
sub
sub
repnz
fucom
and
cmp
cmp
mov
cld
jl
xor
aad
and
aad
mov
mov
aam
jo
icebp
inc
dec
dec
filds
emms
xor
xchg
mov
pop
subb
test
std
mov
dec
push
pop
loope
js
mov
ljmp
push
fistpl
xchg
cmp
mov
mov
add
sub
push
sub
jmp
aad
pop
mov
cmp
andb
cwtl
cld
fisttpll
pop
fcoml
mov
add
mov
pop
sub
ret
fldl
mov
jae
mov
add
mov
push
inc
sarl
rol
addr16
lret
out
cmpsl
dec
push
jmp
loop
aas
fstpl
cmp
lret
scas
cmp
inc
mov
or
mov
subb
lret
stos
pop
lcall
push
add
cltd
loopne
jo
lret
pop
cmp
push
xchg
jo
mov
in
outsb
cwtl
ret
mov
dec
loope
fsts
sub
jecxz
sbb
and
lcall
mov
sub
sub
out
jno
mov
pop
daa
loopne
in
xor
cmc
dec
movsl
or
fbld
imul
cltd
mov
jmp
push
inc
lret
fwait
pushl
shr
push
mov
and
enter
call
lahf
mov
sub
jne
mov
pop
scas
push
push
mov
bound
pop
repnz
mov
orb
push
in
mov
pop
push
xchg
lcall
and
mov
adc
shll
mov
xchg
cmp
and
scas
inc
jbe
mov
or
stos
into
lds
mov
dec
into
jbe
cli
cmp
shll
xchg
out
rorb
and
imul
inc
fs
sbb
jp
loopne
push
mov
or
enter
or
insl
sub
loop
fwait
mov
jnp
aaa
loop
in
cli
mov
xchg
arpl
xchg
add
sub
sbb
mov
mov
shr
lock
outsb
jle
mov
lds
cmpsb
fsts
scas
cmpsb
mov
sbb
inc
scas
aad
stos
mov
idivb
imul
hlt
std
push
out
mov
xor
sub
pop
push
dec
lret
push
push
adc
xchg
arpl
or
adc
xor
adc
in
xlat
pop
xor
fists
cltd
push
hlt
xchg
repz
out
add
mov
pop
fsubrp
filds
adc
imul
pop
mov
test
loopne
lock
inc
call
fistpll
mov
imul
mov
fwait
insl
shll
loop
jnp
mov
xchg
xlat
mov
lea
rcrb
jp
shll
arpl
push
mov
xchg
add
push
push
xchg
sbb
cmp
lods
push
push
cmc
fdivl
mov
push
shlb
in
push
jbe
xor
test
call
add
push
loop
lods
mov
mov
aaa
and
pop
in
and
testb
ret
or
out
cmp
mov
call
dec
fdivs
and
sti
das
insb
push
stc
mov
xor
dec
mov
mov
fldenv
lods
out
add
pop
push
data16
pop
ds
cmc
ljmp
lahf
call
inc
fldenv
dec
arpl
push
mov
mov
divps
leave
add
mov
das
inc
or
int
icebp
in
call
cmpsl
pusha
mov
mov
out
pop
popa
pop
jo
int3
xchg
mov
mov
lahf
fistpll
adc
scas
loop
adc
aam
cs
and
inc
add
scas
mov
add
sbb
cmpsb
mov
and
mov
jo
cmc
jl
lds
fwait
add
aas
push
jnp
sahf
cmp
mov
push
ss
jmp
add
stc
jmp
popa
sbb
xchg
iret
ljmp
scas
and
xor
sub
leave
push
jnp
insb
sub
lahf
mov
pop
test
jb
scas
jae
fmuls
pop
hlt
sub
sbb
mov
cmc
jne
adc
jl
scas
mov
mov
sbb
xchg
test
sub
fcoms
pop
ret
adc
scas
out
sub
mov
adc
bound
aaa
mov
movsl
push
ss
lds
cmpl
mov
cmp
mov
mov
in
popf
push
stos
and
sbbb
aaa
shll
cmp
data16
ret
mov
movsb
push
sti
test
sbb
stos
lods
out
lea
divl
or
pop
mov
pop
test
sub
mov
addr16
fucomi
mov
push
push
cltd
inc
pop
repz
sbb
mov
and
arpl
xor
jb
xor
push
push
insl
mov
or
jae
scas
xor
xlat
outsb
xorl
rcr
cmp
rorb
negb
or
int3
xchg
sub
xor
xchg
cmpsl
icebp
mov
mov
cmp
pop
nop
mov
ds
and
je
scas
movsb
scas
ja
pop
jb
xor
or
lahf
pop
xchg
imul
and
dec
into
bound
sti
cmp
jl
ljmp
sub
dec
cmp
insb
push
xor
mov
mov
adc
mov
mov
and
adc
shrl
dec
jno
arpl
add
test
pop
push
lods
mov
and
mov
int3
pop
das
jp
sub
in
popa
and
fsubrl
mov
scas
js
cld
fwait
pop
or
xchg
push
je
out
adc
test
inc
mov
mov
in
xor
mov
je
push
test
sbb
sbb
push
pop
and
dec
mov
imul
mov
xchg
dec
xor
shr
or
daa
mov
idiv
loop
xchg
xchg
fldcw
js
add
imul
or
das
xchg
mov
mov
push
ficomps
test
out
push
insb
mov
scas
push
sub
add
data16
es
cmp
in
xchg
push
sbb
loop
jge
and
add
lahf
mov
adc
jno
push
mov
and
inc
cli
mov
push
jmp
xchg
hlt
xlat
sbb
sahf
sahf
lods
mov
lret
in
lods
js
mov
lods
js
jge
fisttpl
cmp
popf
jne
push
add
ret
and
in
or
and
mov
stos
aad
inc
lret
dec
dec
sti
xchg
aad
fidivrs
dec
arpl
sub
addl
outsl
pushf
and
fcomps
pop
jnp
popf
decl
dec
lahf
sub
sarb
xchg
adc
push
loopne
pusha
push
insb
mov
adc
xor
std
std
push
or
cmp
mov
cmpsl
stos
pop
xchg
ret
or
sbb
cmp
loop
stos
jbe
push
pop
adc
sbb
hlt
sbb
jg
bound
jnp
addb
dec
and
cmp
lods
stos
lock
cli
pushf
jmp
or
or
mov
out
push
mov
push
in
fstps
bound
lods
aaa
ficoml
loope
push
adc
mov
icebp
in
mov
cmpsb
inc
jg
popa
push
in
fstl
push
je
dec
jge
lcall
test
mov
filds
pushf
inc
push
sbb
cmp
and
stos
add
stc
scas
adc
pop
mov
mov
and
outsb
std
inc
movsl
and
adc
rolb
in
jo
jmpw
orb
cmp
jmp
je
call
adc
movsb
sbb
push
cli
and
mov
subl
add
mov
inc
jp
mov
shll
inc
aaa
pushl
mov
push
pop
iret
es
int
stos
rolb
cmpsb
pop
addr16
das
nop
mov
test
jg
jno
sub
fisttpll
push
imul
xchg
imul
outsl
xchg
jge
dec
push
jmp
inc
sbb
xchg
or
sbb
sbb
jle
in
test
push
out
jge
out
popf
cmp
rcll
into
push
pop
adc
lods
in
into
and
xchg
mov
xor
sub
pushf
xor
sbb
ss
pop
or
xor
je
xorb
sbb
pushf
adc
cmp
iret
int3
fnstenv
push
aaa
add
mov
sub
inc
mov
pop
add
gs
mov
inc
and
xchg
insb
testb
cltd
rcrl
rcr
data16
inc
mov
push
insl
push
out
sti
mov
lock
mov
insb
add
xorl
and
xlat
popf
sub
add
clc
push
mov
adc
fcoms
je
fldenv
movsl
mov
xor
lret
into
xor
arpl
xlat
mov
fdivrp
fstpt
xlat
outsb
add
sbb
pop
cmpsb
and
inc
fiadds
jl
jb
pop
or
jnp
lds
mov
mov
jle
cmp
sbb
stc
lea
sub
lods
mov
fs
cmp
mov
sub
aas
out
mov
imul
sbb
jnp
xchg
subl
fcmovbe
test
mov
dec
mov
ja
jb
mov
fwait
inc
jmp
xor
pop
jb
sub
jmp
adc
push
jecxz
in
cmp
adc
and
lds
sub
out
lods
cmpsb
cmc
mov
loopne
push
repz
repnz
dec
aas
add
mov
mov
sub
pop
cs
rcl
mov
push
ret
sub
and
pop
pop
jbe
lcall
sbb
in
push
push
and
aam
mov
pop
mov
mov
ja
stos
mov
loopne
adc
push
iret
adc
sub
dec
outsb
fnstsw
mov
sub
shlb
lret
movsb
nop
mov
iret
cli
xchg
data16
sbb
imul
cmc
push
or
popa
iret
fistps
dec
jnp
sbb
xchg
sti
popf
cmp
dec
insl
ljmp
lret
jns
dec
mov
sbb
pop
pop
insl
rolb
repz
ret
mov
out
das
fnstcw
xchg
sbb
pushf
add
ljmp
leave
fbstp
push
xchg
inc
cmpsb
jg
inc
rorl
lcall
popf
push
aaa
or
inc
bound
ds
push
inc
jecxz
cmpb
movsb
mov
mov
insb
push
in
das
fs
xchg
daa
adc
mov
cmc
jmp
fsub
scas
pop
mov
lcall
hlt
sub
test
sub
clc
test
je
data16
sub
imul
pop
lcall
rclb
mov
jmp
shlb
ljmp
testl
push
xchg
pop
cmc
outsl
jnp
test
fucom
test
push
xchg
jg
mov
push
repz
push
es
lcall
push
or
mov
movsl
out
subl
adc
pop
mov
jb
idivb
jp
test
test
and
ljmp
mov
stc
imul
sub
cmp
sbbb
push
notl
shrl
cmc
mov
adc
movsb
jl
lret
inc
mov
jmp
loope
push
jb
mov
dec
fucom
cs
mov
lret
ljmp
cmp
add
mov
fildl
xor
sahf
into
gs
adc
and
sub
in
arpl
inc
xchg
rcrb
xchg
add
fldcw
push
flds
fwait
pushf
andb
add
cmp
jmp
mov
sbb
inc
xchg
xchg
popf
loopne
or
mov
popa
in
icebp
add
xchg
popf
daa
inc
fistps
mov
outsl
insb
mov
rol
pop
mov
in
lahf
push
bound
addr16
int3
pop
leave
gs
pusha
idivb
addl
gs
fsubrs
inc
nop
mov
mov
mov
xchg
and
dec
test
dec
fstps
mov
xchg
pop
mov
jmp
test
xlat
or
mov
add
daa
iret
cmp
mov
pop
outsl
push
sbbb
test
fneni(8087
inc
cwtl
fcomip
jns
mov
insl
add
mov
shll
mov
pop
mov
xchg
aam
adc
add
movsb
inc
xor
sar
lahf
fists
add
add
ficoms
shll
mov
jnp
sbb
bound
fnsave
jne
insl
loope
cmp
lret
out
and
ret
lods
cld
lods
inc
inc
jns
xchg
mov
mov
je
ljmp
lock
aaa
insl
ds
mov
jns
test
mov
ss
xlat
mov
ja
inc
aas
push
push
mov
imul
fsubl
push
dec
adc
out
add
stos
lcall
sbb
mov
stos
jle
into
fldt
frstor
dec
pop
iret
loope
inc
lahf
nop
pop
mov
push
sbb
movsb
dec
cltd
stos
clc
add
add
test
std
jp
jp
dec
xchg
cs
loopne
push
mov
sub
ret
pop
push
xchg
or
or
movsb
out
dec
mov
or
mov
sub
test
imulb
out
mov
xchg
jbe
in
cmp
adc
negb
lock
adc
orb
jb
je
jns
mov
ss
jl
cld
mov
adc
xchg
pop
mov
repz
cmp
hlt
fsubrp
stc
mov
add
inc
sti
ljmp
dec
aaa
mov
lods
mov
into
in
push
mov
fs
loop
dec
cltd
xor
out
arpl
jno
pop
out
test
xchg
stc
xchg
pop
clc
andb
js
subl
mov
shrb
mov
outsl
aas
add
push
xorb
jo
ffree
ljmp
add
push
sti
test
addr16
push
imul
dec
enter
push
movsl
ffree
jo
and
dec
hlt
aad
jge
pop
mov
xchg
push
lock
movsl
cmp
mov
dec
inc
outsb
push
fwait
jne
dec
push
sarl
lock
ss
or
mov
dec
inc
push
lods
clc
out
imul
push
mov
out
or
pop
out
enter
out
or
cmp
pop
stos
push
shll
test
faddl
dec
aaa
subl
mov
insl
int3
ret
stc
shlb
shrb
nop
sbb
sbb
pop
imul
in
nop
popa
pop
movsb
sbb
cmp
lea
xor
arpl
cmpsl
xchg
clc
add
jns
mov
ja
jne
fidivl
pop
ljmp
insl
insb
inc
adc
add
pop
or
jbe
or
dec
inc
ds
mov
stos
rcrb
scas
sub
bound
pop
xchg
xor
adcl
sub
popa
mov
and
enter
outsl
stc
pusha
insb
jecxz
xchg
cmc
jle
and
fldl
jbe
cltd
xor
aam
mov
inc
mov
outsb
adc
movsb
mov
hlt
subl
jae
aaa
je
aaa
outsl
test
xor
sbb
sbb
std
xchg
xchg
and
fldl
lods
mov
out
push
idivl
pop
sahf
dec
in
test
lcall
notl
or
pop
aaa
loopne
inc
cmp
insl
xchg
mov
nop
lock
outsb
xor
fwait
adc
insb
mov
data16
dec
jb
rcrb
int
cmpsb
stc
out
xchg
mov
or
push
jl
jmp
lret
mov
gs
or
jns
rolb
je
mov
pop
add
stos
inc
push
jg
test
dec
or
lcall
mov
push
mov
pop
mov
sar
push
mov
cmp
test
loopne
lods
mov
gs
aam
clc
out
cli
mov
rclb
mov
xor
ja
or
jl
divl
clc
int
xchg
test
mov
cld
mov
dec
in
add
mov
push
andl
daa
jbe
sbb
jp
mov
add
or
push
push
outsb
into
fisubrs
add
stc
push
shlb
lahf
push
in
sub
sbb
xchg
cmp
adc
clc
or
jle
dec
subl
cmc
mov
add
and
adc
std
adc
mov
test
popf
xchg
mov
daa
orl
setp
add
enter
push
mov
test
pop
add
call
repnz
sahf
ljmp
push
fucompp
aam
in
fldcw
cltd
outsl
and
mov
add
jb
dec
lds
add
push
into
xor
mov
loope
cli
push
push
pop
lods
jbe
lods
maxps
push
jmp
mov
add
movsb
push
jo
fnsave
test
mov
fwait
push
jnp
jecxz
popf
insl
daa
mov
or
dec
iret
xchg
mov
lahf
jne
push
ja
outsl
insb
icebp
jns
adc
and
mov
add
mov
pop
dec
int
mov
cmp
or
imul
dec
insl
and
aas
dec
ret
inc
lcall
stos
sarb
lods
sub
aas
leave
imul
mov
adc
mov
mov
lea
sub
jbe
lods
xor
or
sub
mov
mov
sarb
sub
jbe
sub
dec
fsubr
cmc
inc
xor
sahf
inc
push
js
stos
jp
mov
sub
push
scas
mov
out
pop
out
adcb
subl
pushf
dec
xchg
dec
jecxz
repz
paddusb
leave
imul
mov
stc
aaa
popf
mov
lods
xor
insb
ljmp
or
or
and
and
jbe
cmpsb
sbb
mov
pop
mov
lret
adc
xchg
fnstsw
sbb
popf
or
shll
sub
bound
ret
or
add
inc
adc
jno
in
dec
xchg
mov
out
cli
xor
std
ja
cmp
je
dec
or
jbe
inc
orb
inc
arpl
xor
adc
lcallw
addr16
scas
iret
popl
loop
xchg
xchg
es
out
jae
ror
scas
inc
std
std
ljmp
int3
lcall
jno
lods
fmul
ret
jmp
and
lods
idivl
or
xchg
xor
testb
lods
mov
ret
jb
xchg
cmpsl
pop
out
nop
loope
mov
int
add
xorb
stos
adc
fwait
pop
dec
lret
mov
outsb
and
mov
inc
push
outsl
repnz
mov
lds
mov
mov
dec
mov
mov
sub
ud0
cli
aaa
iret
repnz
push
cmc
mov
and
cmpb
push
orl
inc
sub
cwtl
rcrl
add
mov
fs
cmp
std
aaa
cmp
push
cmp
stc
mov
adc
dec
mov
xchg
cmc
clc
jne
es
test
imul
test
xlat
push
rolb
mov
add
adc
pop
and
xlat
pop
mov
fiaddl
sbb
jle
adc
in
cmpsb
cltd
jl
dec
sbbb
test
or
das
lds
sbb
jnp
jg
xor
mov
mov
jge
es
sub
cwtl
scas
ja
cmp
arpl
imul
inc
adc
jp
pop
flds
mov
dec
and
or
or
pushf
or
jg
jno
aaa
push
mov
or
add
aas
mov
and
cmp
std
add
push
dec
sub
and
push
xchg
xor
loope
dec
clc
test
push
repz
dec
dec
sti
and
arpl
mov
lret
rolb
dec
mov
xchg
fwait
inc
xorb
pop
pop
ljmp
xchg
movsl
dec
shrb
add
xlat
out
out
mov
jae
clc
pop
leave
repz
inc
pop
out
shll
cs
xchg
mov
adc
inc
pop
in
pop
pop
inc
subl
add
imul
sbb
jmp
addr16
and
das
stos
jle
jge
out
loopne
stos
repz
jle
je
loop
enter
and
int
and
jo
xchg
fisubl
mov
jp
jae
xchg
push
shlb
and
xchg
inc
mov
sub
fmulp
and
jl
out
pop
inc
rcl
das
or
push
scas
push
into
movsl
add
mov
aad
dec
gs
dec
add
roll
xlat
mov
add
or
adc
xchg
sbb
xchg
movsl
jl
popf
dec
xor
xchg
aam
and
jnp
xor
dec
icebp
cli
lds
mov
adc
mov
lock
cmpsb
cmc
pop
int3
je
leave
pop
and
add
das
aam
mov
shrb
cld
jge
fildll
rcrb
xor
loope
push
inc
xchg
adcl
lock
ret
cltd
jp
cmp
push
stos
add
mov
push
mov
imul
negl
lret
mov
mov
nop
inc
mov
dec
dec
xor
sbb
inc
lods
shr
fidivl
push
in
mov
xor
outsl
push
push
push
xor
sub
rorb
xor
sbb
adc
xchg
dec
out
mov
fwait
aam
mov
add
xchg
orb
push
lds
push
cltd
mov
cmp
loop
jne
pop
lret
std
lret
push
sbb
das
sbb
sub
pop
push
inc
adc
mov
incl
sbb
and
sub
js
xchg
rcr
popf
mov
cmp
or
hlt
test
je
mov
mov
add
mov
test
popf
xor
mov
and
jae
sbb
cmpsb
aas
out
fisttpll
mov
outsl
call
xorl
cmpsl
cli
rcl
gs
lret
jmp
pop
nop
rclb
mov
ret
dec
mov
das
push
cmc
aaa
xchg
movsb
cwtl
xchg
dec
fstps
mov
sub
fcomps
je
mov
xchg
or
je
dec
xchg
out
adc
xor
mov
xor
dec
lcall
xor
imul
add
sbb
jp
push
push
push
fwait
shll
imul
sbb
jg
inc
or
mov
loopne
dec
rolb
and
push
jecxz
inc
and
repnz
cmc
jo
fwait
lcall
adc
jge
jl
mov
push
jp
test
jno
jb
insl
add
in
mov
out
gs
mov
outsb
inc
shrl
aam
pop
pop
imul
loop
lcall
roll
pop
and
int
out
mov
add
sbb
xchg
sbb
mov
cmp
out
push
and
pop
or
mov
out
xchg
mov
movsb
into
js
or
out
jl
into
adc
rorl
mov
lds
mov
push
fcom
std
fs
mov
lret
orb
xor
mov
shll
push
mov
jecxz
ret
jl
dec
call
mov
imul
mov
shrw
stc
jge
insl
mov
test
shlb
stos
adc
or
inc
test
pop
ja
filds
xchg
xor
push
je
clc
jnp
std
bnd
or
mov
in
sahf
xlat
ret
aaa
jl
cld
jnp
fwait
test
mov
adc
insb
cli
mov
in
in
push
shll
outsl
testb
push
call
ret
cs
and
pop
sbb
xlat
sti
shrb
xchg
inc
sar
test
push
das
jmp
xor
mov
jge
pop
jp
sbb
sub
into
nop
jmp
cmc
pop
mov
inc
jmp
int
and
stos
sahf
jecxz
ss
push
aad
and
ss
sbb
sbb
cmc
add
int
stc
cmp
cmp
outsb
and
mov
jmp
out
jb
mov
mov
pop
hlt
and
not
bound
push
sahf
mov
add
mov
sub
rclb
dec
into
sub
sti
and
inc
scas
call
jge
les
cmp
aam
push
jnp
lahf
sti
push
xor
ficoml
sbb
jns
sbb
int
mov
inc
and
test
ja
testl
aaa
cmp
pop
jp
add
cmp
sti
pop
fnstenv
ds
fisttps
lods
xor
sub
push
sub
jb
mov
lret
stos
jl
pop
pop
js
mov
pop
jae
push
movsl
xor
data16
sub
mov
popf
outsb
push
ja
xchg
pushf
test
mov
in
in
and
insl
negb
adc
jne
outsl
loope
mov
popa
sarb
repnz
cmp
stos
jge
repnz
ffreep
ret
cmc
dec
pushf
lods
xlat
jno
cmp
push
mov
lock
and
dec
lods
movsb
loop
and
scas
mov
cli
mov
test
aaa
lock
pop
pushf
jno
dec
rcrl
or
xor
mov
out
out
lahf
insb
jae
repz
adc
cmp
xchg
lods
stos
mov
ret
shrl
xor
out
std
mov
cmp
sti
push
jle
push
out
filds
sti
inc
clc
push
sahf
push
insl
jnp
push
sbb
iret
ficoml
dec
lret
repnz
mov
adc
loope
xchg
andl
mov
lret
sub
cltd
lods
out
push
retw
popf
push
mov
or
xlat
inc
cwtl
adc
mov
in
pop
inc
cmpsl
dec
add
adc
jno
push
clc
into
enter
insb
cmpsb
jns
mov
loop
cmp
sbbb
gs
mov
add
ret
add
add
sbb
pop
pop
cld
movsl
insb
pop
push
mov
mov
cmp
scas
cmp
jns
push
stos
push
pop
cmp
mov
int3
repz
dec
dec
pop
aad
ds
jecxz
scas
sub
fldenv
mov
jne
dec
bound
mov
loop
test
aam
adc
inc
sub
mov
idivb
or
inc
sub
push
add
cmp
ss
push
repnz
in
fcoml
jg
movd
loop
and
jmp
arpl
daa
and
mov
sbb
mov
xor
pop
pop
ficompl
int3
mov
pop
mov
sub
push
xchg
xorl
scas
push
mov
dec
popa
fnclex
decl
xor
repz
int3
int
adc
add
and
divb
push
sarb
jg
push
and
cmpsb
lds
cmp
insb
push
cmp
jle
push
sub
sbb
jg
mov
push
and
cmp
into
mov
ficompl
jmp
sbb
cmp
fimuls
int
int3
outsl
je
popa
add
sbb
xchg
xchg
sub
dec
or
cs
sahf
mov
test
rorb
test
and
and
nop
mov
divb
ljmp
pop
aad
imul
xchg
pop
call
push
cmpb
mov
in
and
mov
inc
push
mov
ret
cmp
stos
xlat
ds
or
int
lret
mov
and
and
cmp
xor
inc
push
movsb
ja
xor
pop
or
sbb
sub
push
xlat
out
in
sbb
cld
repz
hlt
jae
cmpsb
inc
sub
inc
adc
push
adc
mov
pop
mov
imul
mov
mov
cmp
mov
in
daa
das
mov
inc
fcomps
mov
xchg
lret
mov
insb
sub
les
ds
and
jg
cmp
jge
icebp
shr
roll
jns
adc
mov
in
sub
mov
leave
fdivl
xor
pusha
imul
movsb
pop
icebp
cmp
jbe
fs
dec
sbbl
cmp
pop
out
add
call
xchg
sub
mov
or
xchg
jle
bnd
jecxz
dec
hlt
arpl
cmc
into
sub
popl
cli
sbb
es
pop
inc
mov
ljmp
jge
pop
dec
addps
call
mov
fs
addr16
jo
in
sbb
arpl
push
ljmp
push
clc
js
arpl
xor
outsl
clc
cmpsb
out
sub
mov
or
imull
pop
fisubs
stos
push
icebp
cmp
jl
lahf
inc
dec
test
inc
in
into
insb
sub
mov
xchg
aaa
shl
cmp
psubd
call
roll
lcall
pop
fstpl
je
cs
xchg
stos
pop
xchg
or
cmpsl
push
and
pop
mov
mov
fdiv
and
into
icebp
push
xor
in
push
test
or
add
shlb
mov
loopne
cmp
mov
jge
fnstcw
pop
outsb
mov
push
push
sti
adc
andb
lds
int3
call
test
pop
lea
or
scas
xchg
cli
loopne
jmp
xor
push
stos
mov
aad
cmc
lds
xchg
nop
and
mov
les
sarl
lods
jle
xor
and
mov
inc
add
outsb
in
jbe
gs
sub
or
pushf
mov
cmp
into
dec
in
mov
jnp
ja
xchg
into
push
or
dec
sar
mov
cmp
divb
cmp
inc
repnz
jb
mov
js
je
cmp
mov
mov
jmp
and
xor
psrlq
mov
ds
js
adc
cmpsb
sub
aaa
pop
insb
or
aad
lcall
pop
in
stos
loopne
jnp
inc
push
pusha
cli
xchg
pop
test
push
iret
inc
mov
shll
xor
cmp
add
push
push
cmp
data16
jbe
out
enter
lahf
stc
sahf
scas
in
fwait
sbbl
mov
inc
mov
adc
aad
xor
in
out
cwtl
jg
loope
lcall
xor
das
incb
or
mov
pop
xchg
adc
push
fcoms
mov
int3
sbb
xorb
mov
push
sbb
pop
inc
xor
xchg
sarb
out
push
xor
and
mov
fs
pop
popf
outsl
mov
cmp
or
mov
repz
outsl
jno
mov
push
nop
xchg
fldcw
and
imul
jbe
inc
mov
pusha
in
add
fcompl
imul
int
out
repnz
xchg
mov
test
imul
mov
mov
lds
or
add
inc
aas
mov
add
add
sub
sar
sarb
out
fnstsw
cmp
lahf
clc
in
decb
mov
or
lods
scas
insb
pop
xor
in
int
cs
mov
loope
leave
cld
mov
dec
jg
aam
sub
add
pop
sbb
ja
icebp
or
pop
testl
jle
pop
push
push
push
dec
xchg
dec
mov
cmpsl
adc
clc
mov
repnz
scas
push
push
xchg
aaa
iret
mov
pop
addl
jb
test
dec
pop
pop
bound
sbb
push
push
push
xchg
inc
repnz
lret
mov
data16
bound
stc
mov
inc
inc
sbb
aam
out
sub
cmpsl
jle
jae
fbstp
xchg
pushf
and
dec
sub
jg
das
outsl
fs
outsb
mov
fimuls
mov
or
movb
xor
sbb
pop
xor
out
popa
add
fisubl
jecxz
sub
fstpl
stc
pusha
add
iret
adc
inc
scas
mov
fsubrs
loope
push
aaa
imul
or
dec
aas
push
jp
dec
mov
dec
dec
test
or
add
dec
xor
loop
push
jl
mov
inc
fldenv
adc
xor
mov
sub
mov
jo
inc
sti
sbb
mov
xchg
push
mov
or
pop
mov
es
dec
and
mov
arpl
add
inc
and
and
incl
pop
or
sbb
xchg
lcall
shlb
cs
and
sbb
jle
cmp
sti
mov
xchg
inc
movsl
fisttpll
xlat
cmp
fwait
sub
pushf
shll
repnz
ljmp
shlb
in
mov
lock
push
cs
inc
cmp
adc
es
out
add
pop
repnz
bound
mov
mov
leave
dec
cwtl
mov
cld
dec
int
out
cmp
jo
movsb
pop
cmc
imul
cld
cs
dec
push
lods
scas
dec
dec
fbstp
cld
sti
xchg
lret
lret
movsl
xchg
mov
ljmp
enter
jae
push
push
xchg
mov
shrl
mov
push
jae
jecxz
loope
fsubrl
inc
cmp
testl
pop
ret
adc
int
cld
and
and
dec
pop
sbb
sub
nop
cmp
dec
lea
outsb
pusha
cmp
xor
mov
sti
stc
pop
push
js
fs
mov
ds
subb
push
test
adc
insb
sub
mov
pop
scas
inc
push
mov
pop
cli
int
pop
mov
clc
mov
add
popa
in
rcrb
cs
sbb
dec
imul
hlt
push
shrl
dec
loopne
call
dec
or
fmulp
mov
enter
in
repz
cld
or
mov
aas
xchg
in
adc
dec
mov
stc
lock
cmp
imul
insl
mov
add
shl
mov
gs
mov
jp
mov
std
andb
cmp
shrl
mov
ror
mov
mov
mov
int3
mov
mov
jae
jl
jp
lahf
call
insb
sub
lret
push
mov
or
into
insb
imul
push
rcrl
aad
lret
sbb
nop
inc
or
push
mov
scas
xchg
cltd
jno
sbb
rol
fldt
cmp
test
in
dec
mov
mov
ret
mov
push
jp
mov
inc
cmpsb
mov
fnsave
shrl
mov
cmp
arpl
add
stc
dec
inc
mov
adc
sarl
sbb
xor
lahf
cs
sbb
push
push
fisubs
into
mov
jp
sub
sub
push
testb
lcall
push
push
mov
inc
ret
or
push
daa
push
add
shr
insl
cltd
add
jae
lahf
sub
dec
in
insb
rcrl
mov
push
xor
call
sub
cwtl
pop
in
jle
pop
out
in
add
ljmp
xchg
pop
ret
dec
cli
or
shrl
ret
add
addr16
push
pop
fsub
xchg
mov
mov
xchg
or
aad
stos
mov
loopne
dec
lret
movl
jmp
sti
lock
mov
jg
mov
cmp
popf
adc
push
addl
inc
into
sub
jnp
add
out
and
pushf
jge
xor
mov
in
cmpsl
popf
fidivl
cltd
cmp
xchg
popf
sub
jmp
or
in
jb
mov
int3
push
cld
lock
scas
push
cmpsl
gs
stos
inc
push
mov
out
mov
xor
adc
jo
cltd
sub
out
movsl
push
imul
add
fisttpl
jbe
addr16
les
push
dec
push
lea
stc
cwtl
hlt
push
int
aad
aam
es
gs
sub
and
jb
dec
and
mov
mov
xchg
in
sbb
in
cmp
sbb
pop
add
xchg
sbb
adc
out
xor
fisttpl
dec
adc
jo
dec
int
cli
lock
dec
loope
fistl
nop
fsubr
dec
enter
std
or
outsl
jp
rorb
jg
es
ljmp
nop
mov
cmc
xchg
shll
xor
mov
ja
repnz
pushf
sub
push
test
push
fcmove
pop
gs
mov
fildll
push
dec
adc
inc
lret
addr16
xor
push
outsl
xchg
unpckhps
sub
pop
fdivrs
mov
or
dec
xchg
dec
mov
push
ss
stc
std
sbb
cld
xor
and
idivl
xchg
sbb
pusha
sub
jne
xchg
lcall
inc
fwait
inc
push
pop
loop
mov
test
dec
mov
cmpsb
cmp
and
std
fs
aas
fs
leave
mov
pop
push
xchg
dec
add
or
sbb
sti
gs
dec
mov
fidivrs
sti
insb
xlat
xor
mov
cmpsl
add
push
push
xor
xchg
ja
enter
out
daa
je
stos
lods
mov
mov
jecxz
mov
popa
dec
mov
in
jge
dec
cli
xor
sbb
add
or
enter
adc
push
xchg
repnz
leave
test
lret
push
test
js
mov
cmp
adc
daa
movsl
mov
sti
xor
cmp
sbb
cmp
sbb
sub
jge
push
inc
ss
jge
scas
aas
call
repnz
xchg
stc
stos
cmp
and
out
push
call
pop
daa
adc
add
and
mov
inc
movsb
jecxz
cltd
daa
in
add
outsb
pusha
es
jge
insl
adc
mov
add
add
adc
aam
inc
ljmp
int3
je
adc
xor
xchg
test
inc
sbb
jae
mov
lods
std
pop
inc
jge
pop
adcl
sub
icebp
mov
cwtl
mov
jmp
xchg
jae
mov
pop
cmp
fcmove
insb
dec
test
ret
inc
loope
das
mov
fldl
xchg
stos
dec
xchg
sbb
add
test
mov
mov
divb
loop
mov
mov
pop
xchg
lahf
and
or
stos
aad
xchg
js
add
rclb
or
push
inc
push
fimuls
and
cwtl
aam
iret
xor
xor
xchg
pop
jmp
push
hlt
sub
push
and
pop
inc
jnp
xchg
push
dec
popa
dec
xchg
pop
lea
flds
mov
test
inc
push
and
out
inc
je
xchg
adc
pop
pop
fmuls
sarl
nop
or
fdivr
xor
xchg
jbe
push
enter
cld
popf
jae
pop
nop
outsb
push
pop
loope
jne
dec
xor
cmpsb
mov
in
in
nop
push
adc
test
inc
aas
or
aaa
and
fbstp
fadds
nop
jge
jo
out
cltd
xor
xor
push
cltd
int
lcall
add
push
rclb
out
pop
lods
test
mov
jne
push
mov
jnp
test
xlat
imul
into
add
and
push
jae
movsl
xchg
xor
mov
nop
cmp
push
cmp
or
and
std
sbb
fidivrs
xor
sbb
dec
fiadds
outsl
mov
pop
stos
adc
icebp
adc
fwait
jmp
lret
pusha
jae
movsb
add
popf
fistl
xor
mov
adc
mov
fs
adc
jae
in
pop
and
cmp
pushf
in
lret
and
loop
dec
dec
out
fyl2x
pop
jp
fidivrs
loopne
leave
xchg
lahf
push
out
and
sub
mov
sbb
mov
js
scas
sarl
mov
jae
jo
add
cwtl
stos
sbb
mov
bound
sub
pop
shl
cld
add
pushf
call
or
lods
cmpsb
imul
pop
mov
lret
adc
push
mov
mov
jbe
insb
int3
xchg
sub
sbb
jecxz
xor
xchg
testl
jo
arpl
subb
inc
and
rcr
lock
push
mov
xor
xor
xor
adc
fnstcw
fnstsw
adc
pop
shrb
idiv
test
sub
cli
clc
cs
mov
cmpsl
mov
sbbl
test
aam
scas
in
shlb
hlt
hlt
insb
jbe
loop
scas
or
imul
js
jae
cmpsl
mov
and
sbb
aam
pop
movsb
jbe
dec
jp
mov
les
test
test
pop
sarl
cmp
pop
jle,pt
cmpsb
push
xchg
call
cltd
imul
cltd
shl
push
sub
xor
jnp,pt
div
dec
addr16
push
out
andb
push
sub
cli
cwtl
iret
and
mov
pop
out
pop
repnz
adc
mov
insb
stos
cmp
push
jo
leave
call
mov
imul
dec
scas
aam
cmp
dec
push
std
add
adc
hlt
xchg
shrb
xlat
and
cmp
push
lret
or
sbb
mov
aaa
xor
xchg
push
and
ffree
cwtl
xchg
rclb
mov
int3
cltd
cmc
sbb
dec
add
pop
push
stc
mov
fs
imul
test
cltd
popa
inc
in
mov
mov
jno
xchg
and
mov
cmpsb
and
lods
inc
lret
dec
jge
in
loopne
or
push
mov
and
lock
stc
mov
fcompl
sbb
fnstsw
in
inc
mov
pop
stc
movl
and
shl
shll
sub
xor
loopne
push
pop
outsb
in
clc
ret
js
test
push
aam
mov
aaa
jnp
mov
mov
xchg
mov
push
insl
bswap
fwait
cmp
dec
idivl
dec
loopne
nop
lods
xor
popa
imul
jp
cli
pop
cmp
jg
push
jl
cmp
inc
jo
test
add
lahf
mov
ss
stos
mov
mov
sarb
mov
or
mov
gs
ds
add
imul
mov
mov
add
cli
pop
ja
subl
push
popa
push
cltd
addl
xchg
aad
js
in
adc
pop
inc
xor
pusha
pop
pop
sbb
push
sub
jne
shll
jecxz
repz
jnp
insb
in
sub
jae
repz
mov
lret
es
xchg
push
push
dec
jb
movsb
cmp
stos
jp
aad
jae
dec
mov
mov
push
jne
add
xchg
fdivrl
je
cmpsb
inc
repz
jmp
rorb
iret
fwait
sub
pop
std
push
cmpsl
and
out
sub
pop
call
sbb
mov
cmc
les
mov
test
in
dec
dec
movsl
mov
push
fisubrs
cli
ret
mov
xchg
int
leave
ljmp
mov
adc
rcrb
dec
xor
inc
out
cmpl
push
lahf
test
pop
mov
stc
mov
js
jg
fidivrl
adc
mov
mov
inc
out
les
inc
bound
push
movsb
bound
andl
jl
cmc
andl
orl
lock
scas
in
loope
mov
ja
cmpl
stos
push
pandn
mov
xor
pusha
xchg
loope
dec
and
and
rolb
icebp
push
pushf
leave
dec
rcrl
or
mov
mov
xor
popf
cs
dec
jb
cmp
xchg
add
xchg
inc
mov
mov
das
test
cltd
std
ljmp
stos
mov
dec
add
xor
pop
xlat
inc
xchg
and
cmp
fidivrl
loopne
xchg
ja
orl
pop
push
inc
subb
add
add
jg
push
test
jle
lcall
fistl
fwait
pop
lock
inc
aas
dec
xchg
cmc
xor
les
or
mov
sub
repz
xor
mov
push
ja
and
nop
clc
cmp
es
sbb
int3
cmpsl
nop
pandn
pushf
pop
add
clc
fstl
lods
in
fdivr
clc
jmp
pop
stc
dec
mov
mov
xchg
lret
out
adc
pop
jg
cmpsb
pop
mov
xor
jne
aad
xchg
add
aas
in
pop
in
clc
inc
int3
jnp
xchg
stos
sub
cli
xor
rcll
sti
pushf
sbb
xchg
adc
cli
negb
add
ljmp
pop
mov
cli
fs
fidivs
loope
ja
pop
addb
out
stc
aam
sbb
pusha
jnp
mov
shlb
mov
xor
cli
mov
sbb
cmp
xchg
sbb
and
sbb
dec
push
or
jne
add
cmp
in
xlat
jnp
fcmovnbe
fildl
xchg
fdivrs
fisubrl
loope
xlat
pop
push
pop
repz
ljmp
movlps
shlb
in
jg
xor
mov
loopne
sahf
hlt
mov
decl
sbb
inc
mov
dec
mov
leave
push
xor
lock
cmp
or
popa
dec
out
and
inc
movsb
fnstcw
into
int
mov
mov
sub
fwait
leave
mulb
int
xor
lea
push
clc
addr16
mov
mov
in
outsb
shll
jmp
js
je
aas
daa
stos
add
adc
jp
mov
pop
shr
jae
clc
mov
fucom
mov
js
test
fdivr
das
aaa
jae
jo
fisubs
daa
outsl
and
ret
bound
mov
fildll
xchg
cmp
jns
or
lahf
insb
fs
adc
mov
mov
jg
leave
mov
insb
jno,pn
dec
or
int
adc
xchg
sbb
and
mov
loop
lods
loope
es
pop
stc
sbb
jbe
mov
jge
xchg
pop
movsb
lods
mov
add
mov
sbb
jmp
push
movl
leave
add
lea
movsb
jge
add
xchg
lock
subb
popf
add
pop
add
into
jge
push
jecxz
jo
sbb
mov
jne
dec
jb
scas
adc
push
dec
rolb
ret
mov
out
in
mov
add
or
dec
sti
test
lahf
std
cmpl
ss
mov
fwait
dec
push
shrb
inc
ret
fdivs
pop
hlt
mov
mov
dec
aam
loopne
push
jae
imul
cmp
divb
xor
jae
call
add
pop
mov
inc
sub
and
jbe
cmp
outsb
pop
xlat
popa
std
incb
mov
icebp
mov
das
mov
jo
pop
adc
imul
and
mov
in
outsl
jne
jl
xchg
sbb
lahf
inc
aam
xor
lahf
xor
data16
adc
mov
jns
bound
or
or
lea
hlt
cmp
inc
or
out
sahf
shrb
shl
and
mov
aas
clc
in
dec
call
aas
test
in
loopne
and
mov
mov
cmc
call
aas
bound
xlat
push
push
addr16
xchg
jns
xchg
icebp
xchg
pop
add
daa
shlb
lret
or
ss
dec
mov
mov
adc
adc
pusha
cwtl
mov
xlat
les
pusha
or
cmpsb
pop
clc
js
push
mov
pop
cmpsl
mov
or
sbb
push
mov
sarb
inc
push
fldl
cs
test
aas
imul
push
mov
xor
out
mov
cmpsb
jmp
sbb
scas
gs
xlat
mov
lds
andl
lods
mov
std
mov
cmpsl
xor
nop
into
cltd
in
jbe
pop
hlt
push
cwtl
mov
lds
fwait
push
xchg
hlt
rcrl
xchg
mov
jbe
call
or
jle
add
insl
bound
mov
xor
das
lret
test
fidivrs
xor
dec
inc
add
out
jo
inc
je
sbb
aad
inc
movsb
popa
jne
fildll
inc
hlt
rep
fs
lret
pop
mov
mov
lds
mov
mov
jae
lods
fcmovnb
push
addl
loopne
mov
test
jle
les
push
lock
es
add
sbb
cmp
in
mov
out
data16
ljmp
jno
mov
xor
imul
lock
test
into
mov
push
jmp
sbb
dec
pop
dec
mov
stc
jb
mov
das
imul
mov
das
js
jne
pop
and
mov
cld
les
outsl
inc
pop
xor
mov
or
jb
xchg
mov
stos
jl
jp
fildll
out
push
xchg
fisubs
dec
aad
fcomps
fnstenv
xor
sbb
inc
xchg
jle
jecxz
cmpsb
mov
ret
dec
jge
sub
data16
hlt
f2xm1
sbb
inc
inc
cltd
cmp
pop
addr16
xor
adc
lret
and
cli
push
ret
out
sbb
adc
inc
pop
adc
cmp
les
out
push
xor
mov
sub
inc
xlat
push
std
mov
arpl
maxps
aaa
mov
adc
push
mov
sar
push
lds
out
jb
jnp,pn
sbb
xchg
stc
mov
es
int
dec
shrb
cmp
stos
fs
jnp
popa
arpl
jge
js
js
fwait
lret
movl
inc
insb
movsb
mov
or
es
mov
pop
sub
inc
jg
out
fcompl
lret
in
jecxz
js
jecxz
sbb
nop
lahf
mov
push
sbb
shll
sub
mov
mov
push
pop
xor
or
pop
adc
aam
lock
lret
jo
mov
xchg
cmp
insb
add
enter
fcmovnu
fldenv
cmpsb
aam
add
cmc
nop
mov
lret
or
std
jae
inc
lods
and
mov
mov
dec
dec
cli
adc
movsb
test
idivl
pop
mov
sub
aaa
push
push
pushf
cs
adc
pusha
ja,pt
lock
and
lods
push
pop
lods
movsl
mov
pop
xchg
pop
loopne
add
mov
imul
dec
add
hlt
cmp
mov
mov
fisttpll
out
jae
pop
lret
jae
mov
lret
or
rclb
es
dec
jnp
push
fdivr
iret
addr16
mov
daa
cmovns
add
pop
xor
mov
stos
lcall
add
mov
push
rorl
mov
mov
and
or
hlt
cmpsb
lea
lret
out
mov
jg
loop
pop
xor
cs
sub
or
jecxz
pop
xor
pop
mov
sar
sbb
outsb
stos
lcall
sbb
shl
or
and
xlat
mov
cli
add
adc
imul
xchg
pop
cmc
sbb
mov
push
test
daa
hlt
xchg
xor
inc
mov
jns
inc
ljmp
mov
or
test
je
fisttps
xchg
dec
pushf
inc
mov
xchg
mov
popa
scas
inc
hlt
int3
lret
insb
xchg
dec
lahf
outsl
out
sub
jnp
dec
dec
push
mov
loope
out
push
jge
divb
lea
inc
jno
es
out
test
in
mov
mov
mull
les
int
test
clc
sbb
ljmp
push
in
jno
or
pusha
ljmp
mov
jne
xor
fstp
call
std
mov
nop
cmovns
cmp
and
test
push
test
push
sub
lcall
mov
jo
cld
jge
test
iret
cmp
movsb
stos
imul
add
mov
jnp
add
add
cmp
icebp
add
xchg
pop
test
pop
sub
sub
ljmp
or
in
arpl
xchg
jnp
mov
and
cli
sbb
sub
fucom
mov
call
push
imul
mov
rol
mov
jl
mov
pop
movsb
mov
mov
daa
lret
je
arpl
cmc
stc
xchg
pop
into
scas
cwtl
xchg
mov
xchg
cmp
aam
add
sti
jbe
dec
dec
lods
mov
les
lods
or
inc
mov
iret
adc
mov
sub
jbe
sbb
dec
jbe
mov
leave
das
adc
inc
and
jno
dec
out
adc
fs
push
dec
xchg
and
mov
jo
outsl
cmp
xchg
pop
mov
mov
adc
andl
mov
jns
push
xchg
mov
mov
mov
mov
lds
rolb
fwait
test
push
adc
adc
movsl
ret
mov
mov
sbb
and
and
movsl
imul
add
lods
cld
leave
aam
jne
lods
je
and
repz
jge
inc
or
pop
cmc
fs
aas
imulb
push
mov
insl
mov
ss
push
cmp
aas
mov
adc
test
cld
mov
add
dec
push
xchg
xor
adc
aaa
sahf
or
xchg
call
lds
xorl
lea
sbb
sbb
mov
dec
push
es
xor
out
fdivr
mov
stos
pop
repnz
lods
test
negl
repz
jle
lock
cltd
sub
xchg
cmpsl
aad
out
call
inc
fdivrs
outsb
push
daa
sbb
cmp
nop
movsb
jle
fsubl
jmp
mov
xor
mov
pop
ss
mov
sub
das
push
cwtl
inc
and
repz
mov
pushf
mov
mov
pcmpeqb
mov
in
pop
mov
pop
out
sub
aas
pop
data16
lcall
inc
jno
or
enter
sbb
cmp
adc
xchg
dec
mov
add
pop
and
and
arpl
aas
aam
insb
das
lea
lret
inc
mov
stos
sub
test
sub
mov
data16
sti
jmp
scas
call
dec
shrw
sub
or
idivb
mul
and
sbb
and
jl
not
test
jae
and
inc
iret
hlt
push
test
arpl
bnd
mov
fwait
mov
cld
cwtl
inc
mov
inc
shll
jge
adc
sub
adc
sbb
xor
scas
pop
push
dec
stos
or
adc
sarl
pop
xchg
xor
dec
ja
jmp
hlt
pop
cli
stc
popf
mov
push
mov
add
pop
fmull
mov
sbb
and
and
daa
hlt
xchg
stos
rol
imul
or
push
fiaddl
arpl
das
adc
inc
cmpsb
mov
jns
add
pop
cli
cmc
pop
xor
int3
cmpsl
fimuls
adc
dec
and
cmpsl
mov
repz
dec
movups
inc
mulb
cmp
sahf
call
pop
dec
std
scas
dec
fcmovnbe
xchg
cmp
adc
inc
push
jg
int
inc
mov
and
inc
mov
mov
imul
mov
push
pop
mov
sbb
repnz
and
negb
push
jns
inc
test
push
rcrl
or
add
xchg
inc
and
cs
jne
fcmovu
pop
sub
mov
pop
push
mov
rol
int3
xchg
jbe
stc
or
mov
fwait
push
int3
xchg
mov
dec
push
ror
movl
sbb
lock
out
xchg
loopne
in
xor
fstp
mov
out
push
add
in
xor
adc
mov
xchg
cwtl
adc
scas
into
fsubrp
inc
and
xorl
jns
and
imul
push
cld
mov
push
cwtl
int
insl
mov
fdivr
cs
mov
sbb
andb
mov
mov
loopne
cld
push
and
insl
mov
addr16
mov
daa
aaa
xchg
adc
icebp
out
xor
sbb
cli
xor
adc
jne
loopne
cwtl
xchg
mov
imul
in
sub
in
inc
fcmovne
pop
or
push
xchg
mov
shll
mov
out
adc
or
movsb
in
mov
mov
or
mov
push
dec
mov
sbb
fsubs
push
cltd
add
div
sti
pusha
sbb
pop
cmc
fsts
xor
ljmp
mov
shufps
loop
mov
shrl
mov
sarb
test
jbe
inc
jge
sub
dec
pop
rclb
ljmp
cmpsb
int3
nop
outsb
out
leave
push
mull
inc
imul
not
push
rorl
rcrb
cmp
daa
xor
add
push
out
cmp
cmpsl
mov
add
inc
int
repz
loope
sub
adc
lods
xor
jns
mov
push
push
or
sbb
push
push
ret
in
scas
rcrb
hlt
pop
jmp
sbb
inc
cwtl
mov
sub
cmpsb
mov
daa
cmp
pop
sub
add
sbb
push
xor
ficomps
roll
sbbl
rorb
add
dec
pop
pop
divb
jge
sbb
das
inc
lock
push
sbb
jae
test
xchg
mov
ret
loopne
lahf
inc
cmp
jb
adcb
pop
int3
out
repnz
repnz
les
out
inc
add
dec
scas
leave
sub
jnp
les
cmp
sbb
push
sub
jbe
fs
test
movsb
sbb
cmp
dec
lock
xlat
push
cmpsb
out
dec
adc
imulb
dec
lret
push
xor
and
pop
or
cmp
call
fcomp
jecxz
repnz
mov
sub
and
lret
imul
lret
or
repz
ret
cmpsb
outsl
clc
add
jmp
adc
mov
ljmp
or
lret
push
mov
in
test
mov
sarb
jns
shrl
jnp
shrd
inc
cmpb
or
pop
subb
jnp
jne
mov
loop
mov
inc
xchg
stos
xchg
mov
aas
ret
int
add
test
sbb
add
imul
lret
jae
scas
fs
shrb
xchg
jno
dec
ror
cmp
cs
mov
pop
dec
mov
or
pusha
in
orb
loope
aam
jno
cmp
jb
stc
or
push
iret
mov
lea
inc
ret
sbbb
loope
or
jns
cwtl
inc
sub
rclb
fs
cmc
and
sbb
les
mov
or
mov
xor
ja
push
out
out
add
mov
pslld
mov
sbb
fnstcw
xchg
jp
dec
pop
jle
jg
jb
adc
imul
mov
cmpl
loopne
fbstp
jo
xor
movb
jp
loop
jns
cmpsb
cs
mov
xorl
push
dec
and
daa
inc
cli
faddl
pusha
jp
in
mov
jle
stos
push
cmp
aas
iret
inc
lds
iret
xchg
and
stc
xchg
outsb
test
out
out
pop
rcll
add
sub
addr16
lods
js
callw
dec
les
test
sbb
cld
jnp
mov
sbb
jp
movsl
jno
lods
add
test
mov
jnp
js
icebp
sbb
sbb
add
je
and
mov
pop
jnp
xchg
scas
ret
and
or
jp
cs
lods
jecxz
jmp
ror
push
pop
jo
sti
dec
in
mov
cli
pop
or
gs
lds
cmp
lea
stc
rolb
test
call
test
lret
xor
adc
rorb
out
mov
push
push
push
xchg
sub
scas
mov
and
into
pushf
pop
fwait
test
or
repnz
sbb
ret
js
call
scas
sbb
jg
sahf
jo
int3
or
std
xchg
dec
lahf
stos
jns
cmpb
jg
icebp
mov
rcrl
cmpsl
jnp
popa
adc
push
xor
and
push
add
add
roll
fucomi
std
xchg
or
daa
xchg
dec
xchg
inc
xchg
mov
or
popa
sti
dec
mov
das
lods
nop
xor
ss
and
jns
xchg
test
pminub
ficoml
jge
cli
jle
push
dec
xchg
das
inc
sub
mov
or
pop
cmp
pusha
call
push
and
gs
cmp
push
sti
push
stos
push
dec
mov
add
or
ret
dec
cmpsl
ds
and
test
mov
fwait
aam
arpl
xor
dec
movsl
pop
or
cmp
loopnew
clc
xchg
frstor
pusha
pushf
sbb
xchg
ss
test
jnp
shl
mov
imul
lahf
lret
fimull
shlb
mov
jl
add
les
sbb
aas
rcrb
lock
cmpb
ja
mov
pop
push
sarb
pop
cwtl
stos
mov
out
pop
or
ds
inc
shll
outsl
mov
ss
pushf
jns
or
mov
push
lods
sbb
xchg
inc
into
jmp
scas
jge
and
sub
lock
js
fdivs
adc
mov
adc
push
adc
jmp
xchg
or
xor
xchg
stc
es
cld
pop
test
add
dec
add
leave
int
aaa
push
mov
out
mov
and
sub
pop
fs
aaa
arpl
adc
push
dec
imul
clc
mov
xor
pop
push
fimull
mov
sti
push
xor
add
test
inc
out
add
sub
pop
jge
flds
repnz
out
dec
lret
sbb
mov
or
icebp
xchg
mov
push
lcall
andb
enter
scas
pop
sub
add
mov
adc
pop
add
push
lret
sub
mov
repz
iret
out
mov
mov
xor
cmc
jmp
add
jo
popf
mov
cmp
imul
fcmovnbe
cli
ret
cmp
es
pop
fwait
aaa
mov
call
imul
insl
mov
es
pop
and
and
das
rol
push
std
add
dec
xchg
adc
stc
stc
cs
xor
mov
ja
push
movsl
push
lds
inc
and
jne
into
sbb
mov
pop
cmp
cmp
lahf
adc
push
pop
mov
adc
in
ret
pusha
cmp
and
or
sbb
lea
lds
sub
xchg
sub
lahf
or
bound
xchg
pop
mov
xor
sub
sahf
lahf
push
adcb
inc
rorb
pop
xchg
out
stos
pop
das
pop
add
or
setne
sbb
fisubs
push
adc
sbbl
pop
xchg
lahf
fidivrs
fimuls
xchg
cmpsb
movmskps
dec
dec
ret
or
loope
sbbb
mov
adc
mov
ja
mov
xor
push
call
test
dec
mov
push
outsb
pop
inc
pushf
in
xchg
ss
jecxz
push
dec
imul
test
xor
cmp
jbe
jns
jge
outsl
dec
dec
xchg
xor
dec
fnsave
lea
fwait
lods
adc
dec
mov
divb
fucomi
es
scas
pop
jno
je
cmpl
xor
and
aas
nop
mov
push
loope
jne
dec
fmull
loopne
cmp
fidivs
and
test
pop
imul
loope
fcoml
dec
push
fwait
push
push
pop
push
loopne
int
jp
pop
adc
int
in
and
cmp
mov
and
push
negl
dec
ret
cli
sub
lods
dec
ficompl
loop
pop
imulb
outsl
push
sbb
fs
out
push
jbe
mov
or
mov
sub
mov
jmp
mov
scas
mov
stc
rcrl
xor
nop/reserved
testl
ror
jl
adc
add
test
xor
ss
and
stos
into
inc
pop
lods
mov
rcl
aaa
shrl
and
lods
or
push
std
cs
inc
add
mov
in
rcrl
psrld
fnsave
push
cld
sbb
jmp
push
jle
testl
sub
xor
das
mov
out
dec
out
jmp
int3
test
lahf
out
add
lea
sub
lcall
pushf
dec
lea
aam
shld
xchg
ret
jns
icebp
int
in
xchg
daa
lds
loope
cmp
aas
mov
into
dec
test
cltd
jnp
pop
stc
test
je
jl
mov
jmp
lret
ds
sbb
or
fbld
push
hlt
or
hlt
in
or
stos
cmp
popa
ret
andb
dec
add
pushf
mov
pushf
repz
pop
mov
sub
sbb
sbb
mov
inc
sub
push
fcompl
inc
mov
aam
ljmp
cmp
fwait
pop
jmp
mov
inc
outsb
or
fimull
dec
add
pop
and
xchg
dec
inc
pusha
cli
mov
cmp
pop
data16
sbb
pop
pushf
fsubr
xlat
inc
xchg
mov
jp
cmp
push
push
jl
loopne
dec
adc
sahf
push
xor
pusha
addr16
and
imul
dec
pop
push
xor
sti
repz
test
call
popf
loope
ret
or
leave
mov
daa
cmp
nop
fisubrl
pop
rol
jp
and
fistpll
mov
icebp
testb
in
jmp
cmc
mov
pop
mov
cmp
mov
xor
sub
inc
jb
cmp
arpl
cmp
rolb
shrl
push
jmp
jnp
jge
adc
jmp
mov
ja
pop
faddl
rcr
dec
dec
movsl
cs
pop
imul
sub
xor
cs
jae
xchg
stos
pusha
add
mov
mov
push
shl
push
sbb
stos
adc
inc
adcl
pop
sbb
icebp
add
mov
and
and
jb
dec
jg
dec
mov
xchg
idivb
in
popf
fists
mov
out
mov
add
sbb
adc
scas
mov
repz
push
mov
in
test
sbbl
mov
and
xchg
lods
inc
nop
fbstp
mov
movsl
aas
pushf
adc
add
or
sub
adc
add
lret
xchg
jae
lret
add
rolb
mov
adc
add
mov
push
stc
nop
fistl
rcrl
mov
ss
lock
subl
mov
scas
jbe
inc
loopne
div
and
testb
mov
jo
push
lock
cwtl
add
sub
and
xlat
sub
add
ficompl
pusha
lods
mov
out
sbb
inc
imul
sub
pop
out
mov
lea
ret
mov
sbb
xor
aas
pusha
or
cmpsl
cltd
ret
add
fs
ja
add
aam
add
jo
mov
add
sub
push
inc
stc
shl
call
out
stos
jmp
xor
lcall
lods
lock
xor
push
xor
ljmp
lods
add
lret
mov
cmp
ret
fisttpll
rolb
cmp
xor
mov
enter
ljmp
sbb
pop
ja
loope
adc
mov
sbb
rolb
push
inc
sub
les
scas
iret
decl
sti
or
mov
pop
push
xchg
mov
inc
push
mov
mov
insl
popa
or
andb
js
enter
mov
clc
mov
jge
lret
push
sub
mov
jb
cwtl
sub
pop
jnp
loop
imul
inc
cmpsb
sub
imul
lods
mov
imul
andb
out
aam
rclb
xchg
pop
jne
xor
iret
push
mov
xor
cmp
test
fcmovb
scas
rclb
jle
loop
std
les
xchg
or
add
jo
test
sub
mov
jge
leave
in
fstpt
gs
js
cwtl
scas
mov
loope
fiaddl
xchg
sahf
sbb
pop
sbb
jmp
mov
jb
jecxz
add
or
or
adc
xor
aaa
sub
rorl
cmp
cmp
mull
mov
jge
leave
sti
enter
xchg
sub
push
jne
pop
in
push
jae
push
stos
sbb
bound
xor
xor
icebp
sub
mov
or
fsubl
lock
aad
dec
jae
je
add
jno
rcrl
addr16
mov
or
das
iret
fdivrl
pushf
jno
jno
imul
ljmp
cmp
cmp
cmp
loop
push
shll
inc
inc
in
xchg
sbb
sbb
cld
mov
xlat
xchg
inc
add
lods
and
rcrb
cmpsl
mov
xchg
lock
sbb
cs
rcrl
or
lea
jl
fwait
imul
mov
ret
mov
pop
arpl
in
xlat
mov
test
add
jno
xchg
shl
rolb
pop
cmp
and
pop
add
and
stos
sarb
lock
repz
adcl
or
push
in
add
cld
test
mov
data16
ret
iret
sub
jo
pop
jg
adcb
dec
les
cmp
decl
cmpsb
push
cmp
dec
icebp
aad
xchg
push
adc
pop
pop
and
addr16
out
lahf
ja
dec
and
xchg
or
test
dec
sub
sbb
jbe
dec
and
dec
or
push
and
dec
iret
imul
inc
icebp
int3
mov
mov
js
xchg
imul
fucomip
jne
stos
imul
push
mov
push
inc
pusha
into
mov
ljmp
stc
xlat
in
jns
inc
stos
cmpsb
jns
cmp
movsb
in
lods
shl
cmpl
jnp
xchg
jl
add
xchg
lods
push
push
test
xchg
lahf
ret
fisubrs
push
fcmovnb
push
jecxz
fmuls
jge
outsl
pusha
in
or
ljmp
adc
pop
pop
icebp
mov
movb
imull
je
jno
cld
outsl
dec
ljmp
mov
mov
sbb
testl
arpl
push
sbb
sahf
xchg
out
cmp
hlt
push
or
icebp
movsb
or
es
rcrb
sbb
lret
mov
cli
es
add
mov
inc
jl
pop
mov
arpl
mov
shlb
lahf
jbe
outsb
adc
loop
cs
jge
and
outsl
ljmp
inc
push
scas
sahf
push
loop
mov
dec
out
inc
mov
aam
or
push
lock
adc
popf
push
mov
push
rep
mov
pop
lret
icebp
jecxz
dec
adc
pop
push
add
mov
lret
loope
fistpll
push
arpl
insl
add
arpl
cmp
cmp
mov
dec
mov
and
imul
pop
jg
xchg
in
lcall
popa
leave
sbb
pop
fwait
out
pop
cmc
fs
movsl
mov
cmp
aad
mov
add
ror
mov
imul
movsl
lcall
add
test
ljmp
mov
fcomps
in
movsl
dec
adc
push
int3
jl
jo
push
mov
cld
mov
rcl
inc
and
jne
jnp
sbb
test
xchg
dec
jg
mov
ret
stc
inc
cltd
popf
pop
movsb
xchg
aas
inc
and
pushf
push
not
cmp
sbbb
mov
push
loop
lcall
xor
mov
sub
mov
fldenv
cli
sbb
and
gs
sbb
fbstp
scas
xchg
xchg
lahf
in
mov
mov
sti
stc
mov
pusha
shll
inc
lret
sbb
mov
push
pop
push
loop
xor
adc
cwtl
ret
test
mov
dec
push
in
mov
mov
mov
lods
cmc
push
push
add
ds
test
add
and
lock
sub
xchg
xchg
andl
mov
out
test
jg
outsb
movsb
pop
dec
in
in
lods
mov
cmpsl
rcr
icebp
xchg
cs
mov
fld
repnz
nop
aam
jnp
mov
or
sub
rcr
scas
cld
xchg
xor
insb
xor
filds
aas
test
fimull
inc
adc
inc
data16
sahf
ret
lcall
sub
pop
cmpsl
je
mov
pop
push
clc
outsl
shll
imull
add
imulb
sub
lds
add
mov
mov
cs
jbe
rcll
fisubs
push
or
xchg
test
mov
fs
push
lret
xor
cmp
pop
dec
shll
adc
jecxz
push
or
out
ss
lds
push
je
or
das
add
and
clc
in
xor
mov
jp
mov
data16
outsl
inc
sub
adc
push
cmp
jecxz
cmp
repnz
mov
mov
stos
sub
fwait
ss
push
pushf
mov
cmp
add
movl
loopne
mov
test
xor
lcall
decb
inc
add
adc
mov
sti
std
out
xchg
sbb
mov
mov
lret
jno
add
mov
mov
andb
incb
stos
add
andl
or
adc
testb
call
fdiv
lods
scas
mov
cmpsb
sub
rolb
cmp
xchg
jl
in
sbb
lods
xor
inc
out
and
lods
popa
fdivrs
cmpb
popf
pop
mov
xchg
test
sbb
mov
inc
sub
lds
aas
std
push
aas
repnz
ljmp
mov
jmp
loop,pn
ret
es
lds
daa
shrb
dec
out
and
movsb
pop
arpl
or
and
imul
xchg
or
push
sub
cmp
mov
fadd
push
add
fildll
sbb
mov
aam
mov
push
adc
inc
testb
je
out
insl
xchg
fwait
mov
mov
outsl
ret
scas
test
movsb
cmp
xchg
cmp
mov
or
test
sbbb
cmpsb
sub
xchg
xchg
loope,pt
popf
or
pop
cs
jl
cmp
cld
xchg
arpl
fbld
sbb
lock
sbb
sbb
das
ficomps
fs
dec
cld
outsb
cwtl
and
xor
std
pop
fwait
rorb
int3
xor
inc
cltd
data16
das
xchg
xorl
jmp
mov
out
inc
cmp
inc
fnstsw
subb
rcl
fs
adc
faddl
xor
jg
fidivs
loope
mov
stos
iret
in
add
sahf
xchg
xchg
jmp
dec
rcll
lea
xor
lret
das
lods
sbb
jge
js
mov
inc
fisttps
inc
out
int
cld
cld
add
movsl
inc
mov
daa
in
xor
jns
mov
adc
dec
xchg
mov
ljmp
dec
push
mov
inc
test
sti
out
iret
cmp
add
addb
mov
test
sub
sbb
push
test
fisubrs
push
sub
pop
push
aad
cwtl
and
push
cmp
icebp
mov
les
inc
adc
lock
dec
xchg
test
jne
jns
loop
ss
and
adc
mov
fstpt
mov
mov
pop
test
negl
or
lret
mov
nop
cmp
xor
fbld
jb
ss
je
int3
and
insb
nop
loop
rolb
mov
in
xchg
out
movsb
cmpsb
or
das
cmpsl
jnp
js
add
lods
les
lock
lods
pop
mov
or
add
inc
ret
pop
call
push
pop
sub
ljmp
and
mov
mov
insb
loop
sar
cmpsb
scas
push
push
xor
inc
jp
call
nop
sub
movsl
mov
xor
ss
test
or
std
inc
push
xchg
clc
push
xor
shlb
and
shl
loopne
dec
and
test
jg
push
test
pusha
pop
xchg
mov
sub
int
mov
add
cmp
pop
or
jge
jp
sub
xchg
push
mov
pop
movsl
push
mov
dec
fsubl
pushf
lock
sahf
stos
std
or
adc
int3
in
inc
mov
sbb
in
packsswb
ljmp
shrl
mov
call
fistpll
mov
lods
dec
mov
pop
cmp
mov
sbb
dec
push
fcoml
cmp
data16
nop
and
jge
dec
jge
rcll
push
mov
icebp
mov
aas
test
outsb
cmp
mov
mov
shlb
cs
lods
jo
dec
iret
hlt
mov
in
vmovups
cmp
aaa
pusha
pop
out
and
inc
stos
filds
dec
mulb
sub
ds
cmc
cmp
and
mov
pop
gs
push
inc
repz
sar
adc
test
loope
and
adc
js
test
cmpsb
cld
out
pop
sbb
std
aas
mov
ljmp
dec
pop
sub
sub
stos
out
test
leave
jge
mov
gs
rcll
rorb
cmp
pop
jle
loop
enter
sub
inc
push
jmp
ljmp
push
loope
lcall
jo
mov
leave
adc
cli
in
shl
inc
ja
stc
mov
fimull
js
jbe
lds
mov
add
clc
js
sbb
lock
fbstp
cmp
and
sub
in
je
xchg
data16
inc
mov
mov
push
mov
out
arpl
fisttpl
add
test
stos
push
sahf
sub
sub
mov
push
jne
in
fs
jmp
jecxz
shl
mov
mov
adc
inc
cmp
out
cmp
bound
adc
mov
push
lcall
ret
stos
iret
clc
outsl
mov
xor
xor
int
mov
mov
dec
push
inc
pop
mov
fdivr
adc
sarb
lea
mov
lahf
fisubs
arpl
cmp
out
jle
clc
mov
clc
loopne
testb
pop
enter
ret
and
sahf
xchg
rol
jge
fcomps
push
lods
in
adc
and
mov
lds
inc
addb
pop
jecxz
fcmovnbe
adc
scas
notb
dec
and
jnp
push
push
lds
jecxz
test
xchg
popa
inc
lret
iret
xchg
sub
cli
repnz
in
in
mov
sub
lahf
jb
mov
fwait
stos
pop
test
enter
cltd
or
cmp
and
dec
push
es
pop
imul
xor
mov
mov
lea
jae
add
in
xor
jmp
add
xchg
mov
fcomps
or
sub
inc
mov
ret
aas
inc
in
mov
lods
les
repz
dec
dec
and
stos
test
insb
xchg
mov
adc
dec
adc
mov
cmpsl
jne
clc
gs
mov
outsb
pop
imul
or
xchg
push
dec
ss
or
pop
bound
subl
sbb
loopne
das
hlt
mov
repz
divl
mov
mov
mov
in
in
mov
loop
repnz
inc
jle
repz
jp
cs
jmp
std
repz
xchg
pop
sahf
jne
insl
adc
inc
push
xchg
movsb
sarb
and
aad
push
int3
mov
into
faddl
bnd
pop
inc
ret
sarl
jmp
mov
sbb
sti
mov
cmpb
test
add
mov
push
pop
imul
add
enter
mov
mov
testb
add
lock
xor
js
loope
shrl
dec
and
mov
xchg
sarb
in
push
aas
sbb
and
je
imul
mov
test
dec
dec
jno
jle
shrl
mov
cmp
test
add
cld
xor
push
cmp
jl
push
mov
jae
mov
xchg
dec
lahf
lods
and
lods
or
cmp
or
add
std
lcall
lods
inc
dec
ret
mov
out
subl
or
jmp
addr16
dec
mov
push
test
cltd
or
and
lods
xchg
loopne
into
push
jle
and
in
dec
in
cmp
leave
sub
popf
jae
mov
inc
pop
cmp
loop
lret
jo
idivl
mov
pusha
add
xchg
push
aad
out
cmpsb
add
lret
loope
xchg
push
rcr
mov
jb
jmp
stos
mov
arpl
movsl
jmp
add
into
push
loope
cmp
dec
xchg
xlat
jmp
das
cmp
cltd
in
cli
int
in
or
aas
ret
or
add
outsl
jae
in
sbb
sub
xor
rorb
jle
leave
cmp
cmp
roll
and
inc
lret
scas
sbb
out
out
xor
incl
mov
push
ss
sbb
push
aaa
push
lods
enter
add
lret
mov
sbb
xchg
jno
push
test
sbb
loop
ja
sub
or
mov
test
lods
bound
xchg
dec
pop
insb
in
sbb
insb
add
pop
js
leave
out
jp
cmp
rcll
test
adc
xchg
dec
movsl
cmc
in
xchg
imul
add
lahf
int3
sub
sbb
mov
push
pop
cmp
mov
add
jbe
mov
ret
dec
cmpsl
shr
jo
daa
sbb
push
inc
dec
dec
lcall
mov
nop
mov
fists
ja
pop
int3
cs
shll
inc
mov
inc
mov
je
add
sbb
adc
add
pop
push
push
dec
adc
and
xor
int3
xor
in
jne
jo
pusha
sub
sarl
loopne
orl
xor
adc
into
push
cmpsl
in
sub
sbb
sbb
fistps
adc
sbb
loopne
repz
lret
pop
outsl
mov
in
test
ds
nop
enter
jmp
inc
mov
sbb
lahf
cmpl
lret
jl
shlb
jp
push
ljmp
cmp
jb
adc
jge
jnp
push
paddw
cmp
gs
es
or
xchg
fsubrl
xchg
out
pop
and
cmp
les
jno
clc
das
add
xor
outsl
jle
int3
ja
arpl
popf
xchg
repz
js
insl
push
popa
sti
mov
es
inc
sbb
or
ret
or
push
or
stos
pop
shrl
xchg
fdivrs
call
adc
lahf
xor
dec
or
sub
int3
add
mov
stos
in
mov
and
or
pop
dec
xchg
ss
xor
sbbl
and
das
cmp
insl
sub
lcall
dec
stc
imul
int
imulb
fnstsw
icebp
orb
insb
mov
into
add
xchg
inc
inc
lock
shl
cmp
xchg
rclb
jmp
call
dec
out
xorb
dec
or
adc
push
mov
decl
dec
push
sub
mov
mov
mov
das
jb
add
push
mov
js
pop
stc
push
mov
aam
test
add
jle
pop
push
pop
adc
nop
pop
pop
icebp
push
jae
outsb
jmp
mov
xor
add
and
int
pop
outsl
pushf
cmp
gs
adc
jecxz
stos
and
dec
pop
enter
xchg
fcoml
mov
cmp
jmp
fisubrs
jl
push
dec
cli
test
cmp
aad
and
insb
jo
and
mov
mov
sub
inc
and
jmp
mov
pop
push
or
loope
mov
xor
lock
int
stc
fimull
xor
mov
pusha
shll
sbb
and
sbb
lds
jmp
jno
test
aas
jae
push
fidivrs
fs
jae
dec
inc
scas
hlt
pop
pop
sbb
adc
cli
xchg
push
xchg
adcb
mov
push
xor
xchg
sbb
loope
dec
xchg
jecxz
in
sub
push
or
rep
xchg
dec
or
adc
subl
xchg
in
adc
push
scas
pop
dec
sbb
leave
imul
mov
inc
icebp
int3
shlb
pop
insl
out
add
cli
mov
mov
jl
mov
lret
lock
inc
lcall
push
sbb
mov
add
or
or
das
jecxz
scas
xchg
in
imul
push
jecxz
jbe
sub
int3
push
pop
pop
jbe
sbb
mov
mov
jecxz
xlat
and
pop
loop
ret
fidivrl
dec
int
xor
cmp
cmp
mov
icebp
pusha
movl
mov
jns
xlat
sarl
push
mov
ret
sbb
arpl
test
bound
mov
sub
mov
fnstenv
sub
es
mov
xor
mov
adc
cltd
mov
test
aam
es
iret
lret
lods
pop
sub
sub
xchg
cmp
iret
mov
test
xor
loope
scas
add
bound
xlat
xchg
push
inc
or
xor
lret
cwtl
lret
mov
add
mov
lods
mov
stc
cmpsl
out
jg
popf
cltd
add
lret
scas
nop
add
inc
andl
add
jb
add
add
js
int
test
and
inc
in
jno
xor
roll
xor
pop
xchg
pop
cmp
aam
in
xchg
mov
jge
push
xchg
sti
adc
jp
cmp
or
fs
stos
mov
repnz
and
xchg
and
push
adc
mov
and
sarb
xchg
mov
push
xor
ret
sti
push
int
cmp
aad
aas
sub
xchg
js
ljmp
mov
pop
insl
mov
xor
fs
mov
lods
js
pop
mov
jp
and
addr16
stos
mov
stos
pop
in
testb
jo
pop
dec
xrelease
pop
add
fisttpll
aas
mov
arpl
or
loope
hlt
sahf
cmpsb
sbb
add
pop
in
out
loop
dec
mov
sbb
inc
ret
mov
mov
xor
adc
jl
jle
in
lret
jg
xchg
push
lds
leave
cmp
adc
orb
daa
jae
pop
lret
sub
ljmp
mov
lahf
mov
sub
test
mov
mov
adc
pop
lret
xchg
jle
int
fbstp
adc
lods
push
mov
jle
mov
inc
js
pop
inc
mov
pushf
mov
sub
or
out
cmp
fbld
lods
or
push
xchg
sbb
xor
rorl
imul
roll
mov
loopne
jmp
sbb
dec
dec
inc
fldl
sub
enter
aad
call
clc
das
shll
mov
dec
rcll
or
clc
inc
xor
mov
hlt
jecxz
mov
adc
loopne
pop
daa
pop
orb
daa
cwtl
sub
adc
popf
add
dec
mov
imul
sbb
je
cltd
xor
xchg
adc
adc
xchg
arpl
xchg
aam
mov
aas
mov
cmp
mov
cmp
sub
xlat
daa
mov
and
flds
jmp
mov
pop
mov
call
xchg
jb
xchg
jbe
cmpl
into
mov
dec
andb
dec
or
fldl
xchg
pop
and
repz
mov
and
add
js
sarl
dec
push
hlt
stos
or
std
out
pop
insb
iret
mov
adc
popf
or
and
loopne
xor
and
gs
gs
mov
xchg
icebp
testb
or
insb
pop
and
repz
mov
hlt
push
stos
repz
cmp
arpl
inc
int
jnp
xchg
add
push
call
jno
mov
daa
dec
scas
mov
in
movsl
and
sahf
cmc
andl
data16
fbstp
shll
pop
push
xchg
outsb
shll
rolb
mov
jns
call
sbb
pop
sub
jno
xchg
in
pop
ret
mov
iret
push
lock
jecxz
push
mov
loop
dec
pop
popf
lods
xor
adc
das
lods
adc
mov
cltd
or
iret
fsubrs
out
jl
movsl
sub
push
mov
or
mov
ljmp
adc
lds
push
sbbb
pop
sbbl
sbb
push
lret
jg
scas
adc
xchg
sbb
js
movsl
dec
ljmp
int3
popf
lods
fs
aaa
loopne
jb
fsubrs
xchg
data16
pop
add
pop
add
xor
aad
pop
cld
negl
popl
sahf
lahf
fisubrl
repz
js
or
aas
jbe
loop
mov
cltd
ret
rclb
and
mov
fisttpl
pop
adc
hlt
mov
and
arpl
daa
test
sbb
lds
mov
xchg
cmp
in
pop
mov
insb
mov
bound
jo
test
add
jb
jg
or
imul
push
add
and
mov
pop
fisubs
js
jle
cli
out
loopne
sbb
mov
enter
or
push
int3
dec
dec
pop
es
popf
jecxz
mov
cmp
xchg
mov
inc
jge,pt
stos
in
adc
es
scas
mov
cmpsl
lods
xor
rcr
mov
mov
cli
popf
push
mov
and
fmull
lods
sub
cmp
fiaddl
arpl
into
pop
test
or
rclb
push
stos
sbb
cs
mov
mov
out
xchg
jl
or
xor
add
fistl
mov
outsl
jl
iret
out
pop
add
sub
jmp
sbb
arpl
loope
mov
cmpsb
ffree
out
and
mov
lcall
mov
xchg
and
add
pop
sub
fiadds
pop
loopne
lcall
dec
dec
in
mov
jg
lret
fst
test
jnp
jmp
fmull
push
out
fwait
ret
push
addb
and
out
out
adc
lahf
lcall
mov
ds
mov
adc
xchg
or
aaa
xchg
fists
mov
jmp
test
jl
or
shlb
int3
mov
fsubs
sub
in
stos
push
ja
pusha
cwtl
into
mov
mov
sub
xor
scas
inc
xor
pmaddwd
pop
test
add
push
clc
xchg
out
cmp
sahf
or
xor
mov
ja
and
mov
adc
in
and
sbb
dec
out
jae
adcl
lds
push
sub
dec
dec
das
sub
icebp
mov
push
ljmp
bound
adc
in
pop
movsl
jmp
inc
cmp
imul
cli
pusha
sbb
sub
inc
pusha
jae
ffree
jp
push
iret
stos
stc
or
bound
lds
xchg
in
cmp
mov
jae
push
jbe
ljmp
cli
hlt
mov
jnp
push
rcll
xor
out
call
cmp
lret
xor
xchg
out
call
repnz
mov
movsb
inc
into
mov
add
xchg
data16
jbe
ret
mov
sbb
add
and
out
push
mov
or
call
lods
lods
mov
bound
sbb
push
iret
cli
mov
mov
mov
loop
mov
addl
outsl
mov
mov
js
les
ret
inc
es
jae
lahf
pop
or
lods
mov
pop
aad
adc
xor
sahf
mov
jno
test
lods
sti
lds
incb
mov
mov
popf
mov
xchg
push
test
xchg
in
lret
int3
xchg
inc
jno
sbb
lcall
jbe
scas
mov
push
in
mov
les
sbb
add
jb
push
jmp
jl
aam
xor
mov
ret
jmp
mov
call
sbb
or
jmp
lock
or
pop
cmp
das
or
inc
aad
push
ss
sbb
stos
fwait
sub
icebp
lods
or
adc
sub
lods
fldenv
cwtl
mov
les
je
lock
cltd
lret
sbb
sub
jmp
xor
lcall
jmp
dec
loop
pop
lods
or
outsl
insl
lea
jbe
lds
scas
xchg
or
mov
das
fucom
dec
fcomps
inc
lcall
push
dec
stc
imul
loop
fldt
xchg
pusha
jmp
pop
dec
out
dec
fs
mov
sub
mov
sbb
lret
mov
jns
push
mov
pusha
cmpsb
xor
sbb
loopne
pop
mov
pop
addl
mov
push
add
leave
xor
inc
aad
mov
call
es
cmp
xchg
adc
std
and
scas
push
dec
cmc
mov
push
and
int3
sbb
divb
mov
add
rorb
std
lea
cmp
out
es
inc
jge
ror
sbb
mov
pop
or
mov
jmp
xchg
cli
lock
scas
sbbl
int
pop
mov
leave
popf
fnstsw
enter
data16
pop
push
stc
jbe
mov
xchg
pop
xchg
filds
div
push
add
cmp
push
mov
push
cmp
jp
scas
jmp
pop
adc
and
cmpl
xchg
nop
mov
push
add
into
cmc
mov
popf
push
mov
jecxz
xchg
mov
stc
test
lret
xor
out
fsubrl
xchg
inc
nopl
decb
dec
lcall
js
xchg
mov
cmpsl
mov
add
mov
adc
fisubs
sub
jmp
pop
mov
sti
shll
dec
subl
and
daa
insb
popa
mov
sbb
adc
jo
fcmovnb
xor
push
cmc
jle
xchg
mov
ss
sub
push
out
and
add
or
dec
lds
jle,pn
mov
pop
mov
push
pusha
and
aaa
imul
inc
loopne
dec
inc
cld
xor
xor
arpl
pop
sbb
xchg
mov
lods
roll
stos
fdiv
rorb
adc
pushf
cld
jbe
dec
outsl
xchg
lods
mov
xlat
mov
iret
xor
iret
xchg
ror
cmp
and
dec
sahf
scas
scas
lret
test
repz
loope
insb
add
push
and
test
imul
cmp
push
bound
pusha
test
dec
sbb
pushf
ret
test
mov
pop
adc
jmp
cld
es
popa
insl
out
or
das
daa
daa
inc
mov
loopne
fwait
and
push
outsl
jl
xor
jle
nop
jle
pop
add
jl
mov
call
push
sub
fbstp
jecxz
mov
ret
cmp
addl
ss
inc
out
mov
loopne
pop
lods
mov
sub
inc
iret
mov
fucomip
and
push
inc
xchg
das
shll
dec
inc
push
cwtl
es
in
fwait
mov
push
adc
test
cmp
out
mov
mov
jb
aam
mov
mov
jge
orb
repnz
xchg
test
cld
and
es
dec
mov
stc
aad
mov
dec
bnd
filds
cmp
enter
divl
test
loope
mov
movsl
inc
dec
cmovle
imul
mull
and
pop
xchg
xor
pusha
dec
mov
xor
and
arpl
push
nop
sbb
out
jle
lods
push
dec
stos
push
pop
push
das
call
mov
andl
ficomps
je
xchg
sbbl
pop
aad
notl
or
test
adc
cwtl
sub
call
and
jle
xor
cmpsb
mov
jl
js
xor
repnz
mov
adc
fbstp
int3
mov
out
cmpb
jecxz
loope
cmc
cltd
sti
pop
cmp
fcomp
insb
fwait
pushl
nop
cwtl
mov
inc
push
scas
mov
mov
push
cs
mov
pusha
das
sub
retw
jecxz
test
jg
in
push
out
bound
sti
insl
xchg
jecxz
iretw
pop
xchg
cmp
fimuls
in
dec
push
pop
stc
mov
add
clc
in
lcall
lock
mov
mov
test
sub
mov
dec
inc
adc
mov
fmuls
sub
gs
frstor
iret
aas
sti
inc
jmp
sti
xor
aas
lods
adc
mov
mov
mov
adc
stos
fwait
inc
inc
jns
fisttpll
mov
je
dec
mov
mov
or
scas
jns
pop
das
inc
mov
inc
loop
movl
fidivrs
mov
inc
daa
sbb
sbb
int
mov
pop
mov
and
lahf
push
mov
jnp
pcmpeqb
je
iret
fwait
mov
and
lea
out
fsubl
pusha
mov
stos
and
or
mov
movsl
push
ror
popf
sbb
incb
loop
fstpl
insb
in
clc
push
xor
out
test
pushl
stc
repz
repnz
jp
daa
mov
out
shl
sub
out
xor
scas
push
sbb
xchg
or
jae
insl
lods
cmp
xchg
popa
inc
xchg
lods
shl
scas
insb
ret
lret
mov
inc
in
jg
scas
fstps
mov
jbe
imul
into
mov
or
push
mov
insl
cli
pusha
dec
dec
xchg
test
pop
loope
xor
call
jge
pop
mov
icebp
lods
xlat
mulb
jb
movsb
sbb
inc
mov
mov
ss
std
movsb
add
nopl
adcb
cli
sahf
sahf
test
mov
lahf
mov
add
shrl
jbe
insb
les
scas
outsb
orb
push
dec
xor
or
scas
pop
sbb
sbb
pop
mov
mov
inc
jmp
loope
jns
mov
movsl
sub
imul
dec
enter
lea
pop
xchg
inc
and
cmp
mov
lret
adc
jns
dec
inc
jl
cwtl
and
pop
fs
pop
je
mov
xor
dec
add
adc
out
fs
lfs
cmp
pop
push
or
inc
and
add
pop
ljmp
aad
shufps
lds
sbb
mov
arpl
mov
shrb
mov
push
sub
icebp
add
lret
test
movsb
inc
dec
mov
sub
jp
mov
add
out
shlb
inc
xchg
outsb
aad
sbb
sbb
cmpsb
jno
or
leave
je
inc
stc
das
mov
packuswb
add
test
out
dec
iret
mov
lds
adc
divb
sbb
dec
dec
iret
or
ret
dec
pop
icebp
add
xchg
aas
sahf
sar
pop
pop
dec
dec
stos
sar
dec
shl
pop
out
mov
sbb
and
or
ret
in
cmp
jb
sbb
je
mov
push
div
ss
and
mov
xchg
cmp
jbe
imul
sti
add
shll
out
cmpsb
rorl
push
in
ds
fbld
lods
and
pop
ja
sbbb
stc
xor
pushf
adc
pop
xor
ficoml
push
pushf
sub
fidivrl
or
pop
mov
mov
push
ret
jo
xlat
vmulss
xor
inc
cwtl
and
or
ljmp
stos
xorb
in
filds
sub
loope
in
pop
repz
imul
mov
and
sub
fs
mov
xor
ja
scas
cmp
jb
xor
add
xchg
iret
push
sbb
sarb
mov
fstpt
cmp
or
push
daa
shll
lcall
in
test
icebp
hlt
push
adc
mov
xor
pushf
jae
add
lcall
inc
mov
int3
cmp
cld
movsl
adc
lret
push
fsub
cmp
and
or
lahf
leave
ret
jg
lahf
js
sbb
cmc
pop
test
lods
test
mov
fdivl
ret
int3
mov
mov
push
jmp
aam
adc
cmpsb
lock
mov
sub
jne
mov
jecxz
out
aas
jns
sbb
xor
stos
push
fisttpl
pop
in
imul
jge
jmp
pop
into
jge
fimull
loop
cwtl
mov
mov
mov
dec
int
adc
fwait
adc
in
push
fs
fidivrl
jns
fdivs
aam
mov
lcall
movsl
cmpb
adc
dec
sub
push
cmpsb
xchg
scas
fbld
dec
popf
sub
ret
xchg
rorb
cld
dec
sbb
data16
pusha
hlt
lahf
xchg
hlt
mov
pop
push
inc
cld
fmull
xor
pop
jle
inc
xchg
les
jmp
or
adc
adc
fsubrs
dec
out
in
mov
incb
cmp
fsqrt
jl
or
and
and
mov
call
mov
push
inc
in
lahf
sub
adc
pop
adc
pushf
or
int3
test
pop
mov
xor
or
xchg
dec
inc
jae
push
pop
and
int3
push
ds
inc
fstpt
mov
dec
sti
repz
adc
out
addr16
sub
or
or
mov
mov
dec
in
cld
stc
dec
out
adc
mov
cmp
jecxz
movsb
inc
push
mov
aaa
xor
lock
pop
icebp
sbb
loopne
imul
mov
sbb
jbe
out
jo
mov
dec
lret
jo
cld
pop
test
or
pop
sbb
fs
aad
outsb
mov
lock
mov
xorb
outsb
cmpsb
adc
jb
rcrl
outsb
mov
or
cmp
enter
insb
or
jmp
loop
fs
insl
js
cs
xor
dec
jbe
fwait
aad
das
iret
rclb
mov
add
wrmsr
jne
xor
pop
jge
outsb
lret
loope
push
fimull
push
xor
enter
test
lock
cmp
cmpb
pop
xchg
sbb
pop
fisttpll
inc
cmpsb
cs
outsb
stos
push
jno
sbb
xor
adc
jb
jb
iret
pop
mov
filds
mov
insl
test
lea
jno
lahf
icebp
ret
pop
aam
lret
mov
jg
mov
dec
jmp
inc
movsl
cmp
sti
outsb
repnz
pushf
or
das
xchg
pop
mov
jge
icebp
xorb
or
int3
pop
xchg
movl
pop
pop
rcrb
loope
and
gs
out
cmpsl
cltd
sti
xor
push
loop
mov
mov
cs
lret
jg
cltd
outsl
mov
xlat
lock
sbbb
cmp
push
rol
pop
xchg
xchg
mov
push
and
xchg
jg
loopne
dec
arpl
fsts
andb
push
mov
push
clc
pushf
pop
inc
mov
sbb
hlt
popl
stos
aas
or
shl
cmp
push
dec
es
mov
fadds
jmp
loope
test
cli
cmp
icebp
cmp
aad
shll
inc
outsb
mov
imul
mov
xor
mov
mov
mov
mov
shrl
sbb
test
fdivs
push
ror
pop
sub
push
repnz
mul
inc
sbb
pusha
push
add
push
shl
sbb
or
dec
cmp
out
lods
jmp
out
sub
jno
clc
mov
shll
xlat
xchg
cwtl
push
push
cmp
dec
adc
aas
clc
sub
test
push
mov
cwtl
fstpl
add
notl
xchg
mov
push
in
jp
sub
dec
test
aaa
and
mov
jno
pushf
out
in
mov
mov
sti
js
mov
rorl
rcr
test
pop
xlat
push
lahf
jmp
xchg
stc
sbb
int3
jmp
icebp
repz
aaa
test
rcrb
imul
add
xor
scas
fdivrl
jmp
push
xor
and
pop
fisubl
mov
xor
sbb
dec
stos
pop
imul
jbe
lds
cwtl
push
out
adc
adc
stos
add
dec
jo
arpl
mov
mov
inc
xlat
clc
jnp
cmc
stos
into
jg
test
sub
pop
mov
lock
jecxz
fnsave
cld
jl
or
pop
andb
movsb
mov
js
pop
dec
pushf
adc
sub
mov
jmp
and
push
popw
icebp
sub
jmp
lret
cmp
aaa
pop
sbb
daa
pusha
das
add
dec
jnp
jne
dec
test
xchg
pop
aam
dec
lret
pop
ret
xchg
in
fsubs
jmp
shlb
push
das
xlat
push
nop
out
adc
mov
in
repnz
out
mov
icebp
cwtl
pop
xor
arpl
and
mov
stos
push
nop
push
fwait
loope
push
fwait
xor
dec
pop
test
mov
dec
bound
es
adc
jl
cltd
mull
xchg
and
je
stc
dec
int3
xchg
push
pop
fucomi
push
xchg
test
dec
push
daa
sbb
jb
std
arpl
push
loope
jns
je
jge
sub
push
ja
sbb
inc
call
jecxz
cwtl
cmpsb
and
loop
inc
shl
je
xchg
or
popa
fwait
std
pop
jp
cltd
pusha
dec
and
popa
test
lret
jb
sbbb
dec
push
adc
mov
popf
sbb
pop
movl
mov
les
push
and
sbb
add
add
inc
lods
insl
adc
xchg
sbb
pop
or
cmpsb
dec
sub
xor
imul
xchg
sub
ja
fmull
mov
jmp
mov
dec
push
ljmp
xor
out
cmpsb
outsb
pusha
bnd
jns
adc
aad
add
add
add
or
rorl
aas
loope
dec
imul
scas
push
sub
sarb
insb
xchg
int3
jnp
pop
or
je
xacquire
imull
insb
cmpsb
aam
sahf
outsb
mov
cli
mov
mov
out
out
in
and
push
mov
cld
xor
jno
add
pop
xchg
mov
call
sti
cmp
andb
ret
pop
lahf
add
pop
push
jo
jbe
push
mov
mov
inc
sub
sbb
and
pop
fcoml
add
mov
mov
add
push
jmp
dec
inc
fwait
mov
in
sub
pushf
push
aaa
mov
idiv
cwtl
sub
adc
add
loop
ja
mov
xlat
iretw
gs
notl
jno
and
movsb
or
lea
push
jge
repz
dec
test
andl
or
mov
mov
push
popf
je
mov
dec
ljmp
pop
adc
dec
or
lods
mov
xchg
hlt
popf
lret
push
std
xchg
iret
jg
inc
ljmp
in
addl
lds
std
mov
push
mov
jnp
or
inc
test
jecxz
pop
dec
mov
outsb
outsl
into
test
testb
sahf
push
push
rolb
in
dec
xor
lret
mov
setge
scas
les
aam
cbtw
arpl
mov
mov
jecxz
test
scas
imul
xchg
xchg
and
stos
or
inc
dec
out
or
mov
mov
pop
jns
lods
add
sub
lret
xchg
imul
push
add
js
cltd
ja
int
arpl
clc
xchg
mov
or
push
lret
clc
lcall
sahf
stos
int3
and
sbb
inc
jno
and
shr
xor
xchg
je
mov
pop
or
out
or
scas
cmp
movsl
lea
or
data16
das
inc
mov
sub
loope
iret
test
loopne
jmp
and
in
or
xchg
lods
inc
jb
mov
test
fld
sbb
insl
imul
push
jb
mov
mov
or
js
sub
or
hlt
mov
inc
jo
leave
pop
dec
jno
adc
xchg
jae
pop
or
inc
rcrb
add
push
es
js
subb
jg
cmp
mov
push
sbb
imul
sbb
inc
mov
rcl
out
imul
mov
std
or
ds
pop
jecxz
rcr
stc
inc
int3
xchg
xchg
xchg
jl
popf
xchg
rorl
sub
sbb
cli
aad
out
fstpl
repnz
addr16
jb
push
stc
push
popf
and
mov
adc
sbb
out
jmp
add
xchg
jg
add
call
xor
into
ljmp
fstpl
pop
test
imul
loopne
mov
popf
dec
pop
outsl
movsl
jbe
movsl
nop
push
jmp
jno
scas
add
cmp
leave
pusha
pop
dec
fnstsw
push
sub
add
sub
dec
add
cmpsl
pop
add
ficoml
jae
cwtl
pushf
icebp
dec
fsubr
dec
dec
in
les
ret
rcrl
and
xchg
mov
dec
mov
cmp
movsl
cmpl
inc
addr16
clc
mov
push
push
rclb
jp
push
outsl
pop
push
clc
test
out
ret
sti
call
sbb
loop
xor
mov
adc
andb
fistpll
fwait
iret
nop
xor
popa
idivl
icebp
call
scas
push
mov
mov
lds
inc
jbe
xchg
inc
push
aaa
stos
lret
and
sbb
jmp
mov
fnstcw
mov
nop
push
sub
jae
cli
xchg
das
jg
addr16
xor
jne
mov
lea
nop
mov
repnz
jne
cmp
rolb
pop
push
jno
les
xchg
cmp
not
jb
fs
ljmp
jne
jne
xor
jmp
pop
lcall
out
xor
fisttpll
iret
and
xchg
jae
dec
dec
call
cli
rcll
xor
dec
mov
ret
inc
mov
and
pop
sti
mov
daa
in
xchg
sbb
lods
sahf
aaa
ficompl
ds
pop
enter
mov
sub
and
into
pop
mov
push
in
sbb
outsl
mov
hlt
inc
daa
mov
popa
js
mov
lret
bound
insb
xlat
imul
dec
sbb
push
pop
jno
inc
aaa
xor
xor
mov
repnz
aas
cmp
xor
or
je
and
rcl
or
mov
cmp
jg
and
iret
nop
push
push
add
sub
push
xchg
fsubrp
add
cmc
pop
ficompl
mov
rcl
sti
sub
jle
ljmp
jbe
add
jmp
mov
aad
pop
push
imul
shll
or
jbe
outsl
dec
add
mov
cld
add
leave
and
das
test
dec
mov
dec
pop
adc
mov
fwait
xchg
aas
add
popa
mov
sbb
sahf
push
cld
jg
inc
movsb
lods
mov
mov
es
xor
imul
repnz
orl
push
push
cmp
adcb
xor
lret
hlt
fcmovb
sarl
mov
insb
sub
sub
loop
ss
repnz
xor
shrl
stos
outsb
or
aas
push
jae
and
dec
ja
inc
inc
hlt
xchg
gs
push
mov
or
adc
cld
rcl
sbb
pop
es
nop
test
fwait
gs
mov
lock
imul
push
in
lock
lods
pushf
dec
lea
ds
push
push
or
mov
xor
cli
pop
enter
das
sbb
cmp
lods
cmpsb
inc
jmp
cltd
mov
xchg
jp
filds
cmp
cmp
xor
leave
pusha
es
lea
aad
cmp
test
in
jne
push
jp
mov
shrb
mov
push
xor
jb
enter
loopne
sbbl
add
xchg
or
mov
dec
mov
iret
jle
pusha
or
popf
test
mov
insb
dec
insl
jo
ret
popa
lret
les
fsubrl
add
dec
shlb
mov
sbbl
cmp
dec
lahf
hlt
sbb
or
enter
test
insb
cmp
mov
insl
daa
ret
lret
pushf
cmpsb
idivl
xor
and
sbb
daa
cmp
loop
fisubs
enter
xor
int3
insl
rorl
insb
out
xor
sbb
lcall
in
jecxz
fistpll
sbbb
out
mov
xchg
jbe
outsb
fcompl
jmp
adc
aad
xor
divb
push
mov
cmp
jp
add
push
stc
aam
pop
adc
add
push
sub
mov
jne
test
ljmp
push
in
jp
das
ja
and
jno
cmp
bound
mov
or
jo
push
sbb
xor
shlb
pop
xchg
dec
stos
int3
mov
out
enter
clc
ss
mov
sub
lock
jle
mov
setbe
jo
push
inc
movsl
cld
sub
jecxz
mov
je
mov
rorb
push
out
cmp
movb
sbb
sbb
fisubl
add
cmpb
sbb
repnz
jno
xchg
push
mov
sbb
push
push
js
or
push
xlat
and
dec
mov
sbb
adc
fldcw
mov
outsb
jo
or
cltd
pop
lods
stos
pop
aad
repz
mov
nop
cmp
cmc
cmp
popf
mov
xor
add
push
leave
stos
scas
push
mov
cmp
nop
arpl
xor
jno
jecxz
mov
push
popf
mov
fimuls
mov
sub
scas
enter
push
test
mov
push
fmull
xchg
popf
cli
jle
int3
dec
fimuls
inc
pop
mov
pop
adcl
cli
and
and
es
and
xor
jns
mov
aas
mov
mov
mov
ret
movsl
loope
add
push
sub
xorl
push
cmp
adc
testl
out
imul
add
stos
sbb
xor
jne
adc
mov
xor
ja
or
and
imul
ljmp
or
lea
xor
imul
call
lds
imul
imul
out
sub
mov
ret
mov
popl
push
mov
pop
pop
inc
mov
mov
test
jge
mov
and
fiadds
out
out
jp
cltd
xchg
mov
movb
xchg
inc
clc
stos
cltd
mov
sti
rorb
shl
test
mov
sbb
xchg
jmp
mov
in
les
mov
sti
in
inc
mov
int
sub
rcrl
adc
call
std
daa
ret
mov
mov
andb
cmc
jnp
daa
out
xchg
dec
sbb
mov
lret
push
data16
jg
mov
xchg
fdivrl
sbb
cld
xchg
mov
push
xchg
addr16
add
xor
cli
test
adc
mov
add
mov
mov
ret
mov
mov
cmp
es
loope
sbb
loopne
cli
and
dec
sub
add
pop
cmp
xchg
xchg
lods
inc
test
icebp
xchg
into
inc
dec
jecxz
lahf
lcall
test
pop
fs
fists
rol
cltd
inc
fdiv
rolb
mov
xor
pop
mov
mov
pop
stos
les
jnp
inc
inc
imul
int
out
sar
fs
fwait
je
jnp
sahf
mov
fnstsw
mov
imul
mov
les
sub
mov
and
cmp
sahf
xlat
mov
sub
or
out
repnz
push
mov
jno
mov
xchg
adc
insb
mov
leave
lds
pop
pop
loope
js
popf
rorl
clc
cmpsl
jl
mov
dec
mov
inc
xchg
insb
faddp
push
mov
aam
movsb
je
arpl
xor
mov
out
pop
cmp
pushf
pop
sbb
and
push
push
or
popa
sub
rcrl
pop
mov
stc
movsl
mov
xor
add
mov
ljmp
les
jno
dec
es
mov
out
ss
jno
in
cmpsb
mov
lahf
xor
hlt
add
shrb
xor
mov
fstpt
out
loope
sbb
into
movsb
dec
arpl
push
call
shrb
shll
xchg
dec
in
scas
push
mov
jecxz
xor
jnp
mov
jl
sbb
mov
mov
or
add
icebp
rcrb
out
jae
adc
in
into
fwait
adc
xlat
fisubs
sti
into
fistps
or
sbb
loop
xchg
jb
ja
subb
push
add
out
xchg
fs
xchg
mov
cmpb
jne
jmp
movsb
movsb
fmuls
add
hlt
in
adc
mov
jo
test
add
push
mov
punpckhdq
or
dec
push
lret
lret
in
pop
int3
pop
xchg
fstpl
popa
add
fsubrl
xlat
mov
dec
insl
lahf
in
cs
cmpsb
push
mov
clc
test
cmp
and
xor
mov
push
jae
ss
mov
lods
and
jmp
out
xchg
cmc
mov
or
outsb
sbb
add
flds
jbe
test
xor
sbb
mov
add
cs
and
scas
push
insb
jns
pop
push
insl
xlat
or
xchg
stos
mov
std
loopne
into
push
xor
shrl
sbb
push
cmp
mov
or
and
cwtl
xchg
xor
inc
pop
call
sub
push
push
adcb
test
in
and
sub
aad
jbe
pop
push
jbe
add
cmp
jmp
lods
jecxz
inc
and
lahf
scas
jle
int
insl
inc
xor
inc
or
iret
aad
xchg
pop
xor
sub
aad
ja
dec
push
sbb
cmp
rorb
adc
inc
sbb
stos
mov
mov
jmp
cmp
sti
jbe
pop
gs
je
jecxz
cs
sbb
shl
cltd
ja
pop
aas
aas
lock
jecxz
sbb
sahf
out
dec
bound
pop
stos
pushl
add
or
push
in
and
dec
aad
lret
lret
and
rclb
stos
dec
ljmp
pop
sarl
sub
mov
fsubrs
in
sub
fcmovne
and
inc
xchg
loop
icebp
shlb
inc
or
std
and
subb
ss
fistpl
push
mov
ret
sub
pop
pop
sahf
mov
or
sub
dec
shrl
xchg
pop
sbb
or
xchg
xchg
mov
leave
lods
xorl
cmp
lret
aam
or
sub
pusha
mov
daa
pop
stc
or
cmpsl
stos
lret
pop
inc
loope
popf
daa
mov
nop
incl
mov
xchg
jecxz
jbe
mov
lock
xor
jb
xchg
repz
xchg
xchg
cmp
push
mov
mov
in
lea
sbb
cs
cmpsl
and
xchg
dec
dec
pop
xor
das
xchg
xor
scas
mov
push
push
adc
rcrl
pop
xchg
xlat
in
scas
adc
sub
mov
rolb
leave
fs
add
mov
mov
or
push
rclb
jbe
lods
icebp
jg
and
adc
shll
pop
or
int
outsb
leave
push
sbb
testl
adcb
and
mov
jmp
enter
out
ds
shll
jb
sahf
jmp
cs
or
stos
mov
ficoml
out
call
lret
or
sbb
pop
pusha
xchg
xlat
loop
cld
movsl
icebp
xchg
push
arpl
fbstp
outsl
stos
xor
mov
and
push
les
addr16
cmp
mov
subb
cwtl
adc
jnp
loop
push
jns
pop
cmp
adc
mov
int
xor
cmp
push
xchg
and
ds
pop
shrb
or
stc
push
or
fs
aaa
in
lea
cmpsb
cs
lret
ret
addl
fcoms
or
sub
sti
inc
testb
leave
sbb
loopne
xor
fcompl
mov
push
int3
push
pop
leave
pop
je
mov
sbb
popa
add
shr
add
ja
pop
outsb
ja
push
pop
mov
jle
mov
xchg
mov
push
pop
pop
mov
inc
push
pop
pop
enter
hlt
imul
sub
cmp
and
out
or
mov
pop
gs
jg,pt
mov
aaa
jne
mov
cmp
fldl
dec
push
stos
rcrb
fdivl
cwtl
sahf
pop
inc
mov
bound
inc
repz
aas
cwtl
sti
or
xchg
cmpsb
cmp
push
inc
sbb
imul
xor
xchg
pop
enter
in
cmpsb
addb
push
pop
mov
imul
xor
stc
loopne
jmp
sbb
cltd
cmp
or
addr16
push
jg
test
or
jne
adc
push
test
push
out
jmp
dec
repnz
push
daa
int3
xabort
jp
cmp
jno
fisubrs
pop
iret
mov
lods
jmp
adc
mov
loop
or
jge
idivl
call
sub
xchg
inc
mov
or
cwtl
add
test
ds
xor
repz
xor
and
mov
dec
shll
mov
ret
push
clc
sbbb
cmp
orb
jecxz
pop
out
xchg
and
dec
push
in
or
lcall
les
adc
test
aaa
mov
cltd
pop
out
repnz
sbb
rcrb
cmpsb
jb
push
lret
jecxz
inc
sub
loop
push
int3
dec
sbb
or
push
ret
push
imul
insl
dec
je
orb
in
adc
jmp
jb
js
imull
push
push
out
inc
pop
js
dec
pop
stos
jle
push
sub
mov
orl
into
stc
add
es
adc
int3
sub
ja
sbb
jl
shrb
xor
add
cmpsl
ret
cmp
pop
mov
inc
cmp
pop
shl
insb
sub
cmp
xor
mov
jle
xor
xor
xor
int3
push
jb
dec
jmp
adc
imul
cmp
adc
inc
cmp
sbb
ss
ljmp
aad
push
xchg
cmp
pop
lret
sbb
xor
out
dec
ret
mov
out
push
xor
cmp
je
mov
pop
mov
shll
sbb
ljmp
or
dec
in
cli
out
sub
rorl
push
pop
lea
push
cmp
stos
aam
fwait
mov
xchg
popf
sub
inc
mov
mov
xor
mov
sbb
push
xor
push
push
das
pushf
push
daa
cmpsb
fwait
and
push
sbb
aaa
loop
movsl
add
pop
jns
xchg
das
ss
lcall
imul
mov
push
out
pop
ret
loope
lret
out
jbe
sbb
add
das
in
in
push
loope
shl
sbb
popf
shll
push
jmp
cmp
or
adc
mov
lea
movsb
or
jne
mov
push
out
mov
cmp
xor
and
cmp
scas
jl
adc
jmp
xor
scas
push
daa
scas
nop
nop
ja
scas
je
nop
int
pop
in
loop
bswap
xchg
and
dec
loop
test
bound
aaa
leave
sub
mov
lods
mov
inc
sub
add
scas
daa
inc
jle
push
movb
push
fstps
popf
popf
jns
jbe
out
ja
push
in
sub
ds
in
push
movsl
mov
sti
inc
or
loop
psubsb
out
addr16
add
lods
adc
dec
xor
mov
and
pusha
pop
mov
lret
dec
or
push
out
cmp
repz
push
hlt
jge
repnz
dec
stc
pcmpgtb
mov
cmpsl
leave
mov
jno
js
xchg
and
movsb
repz
mov
dec
fwait
dec
mov
popf
cltd
jne
mov
jne
lahf
push
loop
ret
pop
push
adc
sarb
or
pusha
jo
pop
mov
cmpsl
loop
loopne
mov
push
iret
test
lret
fpatan
fs
lcall
mov
adc
mov
adc
lret
lods
sahf
jb
sbb
jle
inc
ret
or
dec
fxam
rorl
lcall
cmp
mov
mov
adc
in
insb
mov
xchg
gs
jmp
lods
and
fstp
icebp
je
bound
test
xchg
jae
out
push
add
push
jno
in
mov
mov
xor
inc
sub
sbb
popf
mov
sub
add
add
das
mov
or
insl
test
xchg
dec
test
int3
popf
fsubrs
dec
add
adc
sbb
xorl
out
sbb
push
dec
pop
cmc
call
xchg
add
sbb
pop
mov
stos
push
int3
adc
fidivs
and
sub
fs
and
or
test
repz
lahf
outsb
mov
repnz
sub
lods
sarl
adc
lods
in
shl
sub
fildll
xchg
xor
mov
jno
or
mov
sbb
sahf
mov
push
xchg
cwtl
sbb
push
xlat
cmp
leave
inc
cmpsl
mov
loopne
push
loope
fdivrs
and
xchg
mov
ficoml
mov
popf
nop
pusha
cmp
fisubrs
mull
jbe
jb
jecxz
cwtl
pushf
sbb
imul
mov
lods
int3
xor
pop
ret
mov
dec
rolb
mov
nop
xorl
jo
mov
cmp
fidivrs
xchg
loope
lahf
flds
pop
xor
sti
mov
enter
pop
mov
mov
je
testb
dec
pop
mov
cmp
dec
inc
jg
and
add
cld
cmp
ljmp
jge
inc
outsb
push
mov
add
int3
mov
lret
add
add
bound
or
popa
mov
xchg
sub
je
cwtl
and
fdivl
cmp
dec
add
inc
cmpsl
pop
mov
pop
lds
dec
push
setle
push
adc
mov
setge
sti
cmp
sbb
int
inc
cmp
lock
bnd
mov
scas
cltd
ljmp
mov
mov
cmp
imul
mov
insb
cmc
nop
mov
pop
imul
xchg
jmp
daa
gs
std
dec
pop
popf
fmuls
in
testb
shrb
daa
rorb
push
push
iret
movsb
pop
jge
mov
lcall
inc
adc
or
lcall
mov
cmpsl
ljmp
out
mov
xor
mov
and
pop
ret
test
pop
cmp
jecxz
push
out
stos
cltd
lds
dec
ds
mov
sub
dec
out
add
cltd
add
push
add
js
je
xchg
jns
sub
ret
mov
mov
bnd
outsb
jp
push
nop
fidivs
mov
out
pushl
sbb
adc
sbb
fimuls
jbe
call
sub
in
sub
or
sbbb
inc
jbe
scas
pop
lcall
ror
mov
call
mov
or
sub
iret
dec
in
aam
lea
mov
movsb
insb
stc
cmc
pop
mov
push
cmp
testl
sub
mov
dec
and
loope
and
fiadds
mov
pop
ljmp
jle
mov
cmpsb
mov
mov
ret
arpl
lods
xchg
movsb
push
jae
sbb
mov
dec
popa
xor
jb
pop
insb
lret
jmp
aam
scas
jp
jmp
cmp
cli
cmp
in
rclb
dec
or
dec
xchg
cltd
inc
call
cmp
into
adc
or
jo
xor
pop
mov
xchg
cltd
dec
shlb
mov
daa
inc
mull
mov
and
imul
adc
mov
pop
cmp
sbb
push
stos
out
and
cmp
sahf
mov
jmp
mov
push
jns
cmp
xchg
adc
aaa
inc
or
outsl
mov
movsl
repnz
inc
jo
out
mov
xchg
imul
and
repz
insl
rorb
mov
sbb
or
mov
lret
mov
faddl
in
sub
sbb
out
xchg
inc
add
bound
sti
push
or
int
xchg
xchg
stos
xor
rolb
and
push
adc
adc
fldl
xchg
mov
hlt
pop
push
xchg
push
fcomi
movsl
dec
push
xchg
mov
jge
in
jne
inc
mov
add
shrl
jno
mov
lret
fstl
xor
cmc
hlt
scas
add
xor
adc
sbb
push
ret
into
mov
lock
fs
and
in
jecxz
sub
pop
cmp
icebp
adc
and
sbb
loop
fisubl
out
mov
xchg
leave
xchg
mov
lahf
jmp
jmp
dec
mov
testl
data16
mov
dec
sbb
push
popa
mov
add
push
fsts
fiaddl
shr
dec
andl
push
inc
test
add
mov
icebp
xor
adc
in
aas
sar
imul
add
lcall
and
cwtl
mov
push
dec
sti
push
xor
mov
es
cs
int
movsb
daa
push
xchg
dec
lds
in
xchg
fiadds
sahf
mov
lock
dec
dec
xchg
jb
jae
arpl
fcomi
movsl
ljmp
lods
pop
push
enter
notl
es
inc
pusha
and
outsb
pop
and
cmc
xorb
bound
out
sbb
push
jb
imul
ja
arpl
pop
xchg
enter
mov
subb
insb
ds
fnstsw
stos
push
jge
sub
sbb
mov
in
dec
mov
pop
stos
repnz
add
push
xchg
outsb
mov
mov
inc
dec
adc
mov
loopne
imul
dec
hlt
push
and
mov
mov
addr16
fbld
xchg
stos
sbb
pop
fdivl
and
sub
and
rcrb
mov
inc
sahf
sti
mov
push
aad
sbb
imul
jbe
adc
in
or
in
leave
sbb
jl
pop
adc
fistps
imul
jmp
pop
les
add
and
test
xchg
shrb
or
hlt
xor
dec
call
cmp
stos
int3
fld
insl
pop
pop
fs
xlat
add
xor
jae
jns
lock
cmpsl
fidivrs
out
fdiv
hlt
and
hlt
add
lds
xchg
sub
clc
jl
xor
jge
in
cmc
xchg
inc
and
cld
cmp
shll
imul
pop
xor
fwait
and
jnp
mov
or
sbb
push
xchg
push
xchg
mov
inc
push
gs
mov
dec
rep
dec
lret
adc
cmpsb
sbb
das
imul
cld
mov
sbb
movsl
jmp
lods
dec
cmp
stos
aaa
aam
pop
lds
add
mov
mov
mov
adc
lea
hlt
xchg
aam
andl
jg
jo
cmp
imul
lea
mov
sub
popw
pop
push
stos
insb
adc
inc
nop
lock
lods
or
js
fadd
or
cmpsl
sti
shrb
imul
sbb
ret
xor
pop
push
das
mov
out
sub
movsb
adc
add
xchg
adc
jno
jg
xor
add
stos
dec
lea
xchg
cmp
int3
pop
and
mov
lret
je
push
and
test
or
movsl
mulb
and
dec
mov
mov
pop
pop
enter
xchg
push
jbe
inc
inc
push
jns
add
dec
aaa
out
jns
mov
mov
add
push
cmp
mov
cmp
mov
jle
cmp
pop
jno
xor
stos
mov
jo
jle
das
aaa
pop
in
in
jmp
mov
inc
les
sub
pop
xchg
push
push
and
jl
iret
push
mov
cs
inc
push
add
pop
fstpt
leave
aam
lahf
rep
dec
push
adc
loop
inc
cmp
dec
imul
adc
bound
js
fwait
shll
xchg
in
fiadds
mov
push
in
inc
mov
mov
xor
mov
stos
push
xlat
mov
lock
mov
test
dec
adcl
cmp
sub
stos
mov
cli
xor
addr16
jecxz
lods
lea
inc
test
jne
inc
inc
xchg
push
push
test
lret
sbb
cmp
shrb
xor
push
into
cmp
xchg
jne
jp
xchg
cmp
push
roll
cmp
popa
pushf
or
push
pushf
shll
push
jl
lds
bound
xchg
and
into
xchg
test
fidivrl
or
pop
aam
fsubrp
add
subb
fiaddl
stc
and
test
sbb
movsl
pop
add
xor
std
and
int3
sub
or
inc
mov
adc
cmp
pop
in
mov
sub
mov
dec
push
pop
mov
adc
dec
cmpl
imul
ljmp
scas
sub
or
sub
rclb
cmp
cmp
sbbl
jae
pop
in
fnsave
je
rcrb
jno
mov
lret
insb
ret
ret
push
push
mov
pop
adc
shl
sub
inc
mov
pop
inc
lahf
movsb
aad
sbb
popa
sub
pusha
pusha
or
inc
jecxz
pop
mov
mov
xchg
lret
cs
jle
fs
out
dec
mov
addr16
ja
lcall
inc
mov
int
orb
clc
ja
repz
out
xchg
fdivr
js
test
push
pushf
and
cmpsl
jno
imul
jg
add
rclw
mov
cmp
mov
and
jecxz
mov
lock
pop
rcrl
cmp
xchg
iret
in
adc
pop
sub
push
dec
pop
mov
inc
mov
cvtpi2ps
out
lahf
addl
pushf
sub
dec
movb
pop
push
push
pop
movsl
jle
mov
fdivr
roll
sbb
xor
les
push
inc
popa
scas
mov
rcrb
insl
in
mov
xor
xor
dec
fwait
bound
sbb
loopne
add
xor
cs
in
adcb
in
cli
dec
cmp
jbe
scas
loope
lcall
add
mov
cli
push
push
mov
popa
xor
ljmp
outsl
imul
xor
imul
das
mov
add
and
mov
jbe
jb
popa
jno
pusha
pop
mov
lcall
cltd
pop
imul
fs
and
push
push
push
aad
push
mov
xor
subb
faddp
hlt
add
pop
xchg
lahf
xchg
jge
int3
mov
fsubrl
inc
popa
out
add
cmp
cli
xchg
jnp
add
clc
xchg
cli
xor
push
mov
fwait
push
data16
sub
inc
aam
mov
jnp
punpckhwd
adc
xchg
xor
jno,pn
or
icebp
nop
dec
test
sub
imul
pop
mov
xchg
mov
outsl
push
jae
push
rorl
mov
push
roll
mov
jecxz
inc
add
stos
push
aaa
ret
in
mov
sub
aaa
lea
cs
repz
dec
push
mov
mov
mov
xor
jle
mov
jbe
inc
mov
testb
mov
orl
jge
adc
mull
add
imul
sbb
bound
popf
imul
arpl
sbb
lods
int
mov
jmp
push
ret
fdivl
imul
js
xor
or
in
mov
out
je
lret
dec
mov
insl
cltd
push
rcll
pop
dec
nop
pop
cmpsl
lret
mov
loopne
cwtl
mov
push
lcall
dec
lret
or
icebp
loop
shlb
test
lea
fldenv
cwtl
out
loope
arpl
inc
jecxz
fsubrs
and
jo
mov
rclb
xor
xchg
cmpsb
xchg
add
mov
or
sahf
adc
inc
sub
add
outsl
stos
and
mov
lea
imul
jne
loope
mov
cmovp
xlat
mov
add
jnp
in
mov
push
call
pushf
or
inc
arpl
pop
mov
mov
mov
shrl
sar
pop
imulb
cmp
or
or
nop
scas
push
jecxz
cwtl
xor
into
out
push
cmp
fst
es
ljmp
cmp
mov
sub
neg
data16
jb
or
lock
inc
lret
mov
mov
mov
push
gs
xlat
dec
arpl
lock
popa
push
and
xchg
add
push
sub
cmp
aaa
xchg
out
mov
xchg
sti
xor
mov
cmp
inc
aad
mov
sub
cwtl
test
jle
xchg
xchg
lret
cmpsl
addr16
push
lret
loopne
mov
cmp
mov
or
mov
test
add
jne
mov
gs
add
loop
inc
adc
daa
inc
or
pop
xor
cld
dec
pop
cli
dec
mov
xor
fadd
push
stos
lahf
hlt
sub
pop
mov
in
mov
mov
les
mov
ds
sub
xor
add
int3
ret
cmp
frstor
fsubr
cltd
push
jb
in
xchg
push
jo
add
dec
lods
mov
in
insl
aam
nop
sub
jl
and
push
ja
imul
aaa
pushf
jge
ret
dec
call
dec
out
or
mov
lret
mov
and
inc
xchg
xchg
pop
imul
inc
scas
push
xchg
sbb
cltd
inc
popa
jg
out
and
jge
lock
shrb
xorl
mov
push
addr16
push
or
add
test
xchg
dec
or
xor
add
push
cmp
addb
jb
repnz
lods
lcall
and
jmp
jle
mov
dec
mov
movsl
xchg
sub
int
or
xor
cmp
in
inc
pusha
jmp
lods
sub
mov
add
negl
sbb
aaa
pop
fs
stos
adc
sub
fnsave
add
sub
jae
jb
pop
cmc
inc
jge
cmp
inc
adc
and
cmc
and
xchg
xlat
mov
int3
inc
fnstenv
mov
sub
xchg
bound
xchg
imul
jb
adc
add
or
xor
shlb
shlb
jl
mov
test
scas
dec
jnp
hlt
outsb
xchg
lret
push
mov
sbb
push
cmp
lcall
sub
sbbb
sbb
push
lret
aaa
and
mov
mov
push
push
and
mov
inc
sub
push
pusha
jg
pop
dec
fdivp
ret
jbe
mov
inc
das
iret
jl
push
mov
xor
sbb
fcomps
outsb
fstps
push
cwtl
fs
jmp
loopne
jge
repz
dec
popf
jb
psrlq
test
es
jno
rol
mov
pop
popa
aaa
mov
cmp
cmpsl
pop
nop
daa
xor
in
nop
sbb
and
shlb
dec
jns
cmp
scas
mov
jo
add
sub
push
add
mov
fmull
mov
and
sbb
inc
push
out
in
and
cmpb
cwtl
push
in
push
das
das
ja
push
stc
bound
mov
mov
cwtl
mov
pop
mov
fbstp
mov
sub
mov
out
leave
into
cltd
lahf
jp
testl
popf
rcrb
xchg
mov
mov
mov
cltd
out
mov
mov
dec
sub
or
stc
das
outsl
sub
aad
div
jne
fistl
popa
pop
pop
in
cmp
and
fisttps
test
xchg
inc
hlt
mov
mov
and
sarb
inc
dec
les
xchg
pusha
mov
out
sarl
movsb
cmp
pop
xor
mov
in
call
fadds
lods
ja
add
jp
sbb
dec
or
pop
mov
push
stos
push
jo
aaa
push
movb
mov
iret
mov
push
int3
inc
mov
mov
pop
cmp
aaa
enter
repnz
push
inc
add
daa
cmp
js
xchg
sbb
inc
sub
inc
push
fcoml
test
sub
or
data16
jmp
adc
pop
mov
dec
cs
dec
xor
jg
cmpl
lret
test
pop
mov
sub
ret
leave
lea
and
adc
test
call
mov
xorb
xor
and
xchg
test
shll
and
cmp
push
adc
mov
in
add
mov
jne
orl
jmp
nop
xchg
sbb
mov
data16
pop
ss
inc
sbb
xchg
mov
dec
daa
cmp
inc
in
jmp
mov
inc
cmp
dec
sub
arpl
push
fdivrs
loop
insb
cmp
mov
test
les
in
sub
es
xchg
adc
push
movsl
in
mov
dec
shrb
adc
fidivl
in
pop
es
rol
jae
fsubl
jecxz
xor
dec
jae
push
out
or
stc
jno
popl
cmovs
sbb
add
sub
push
bound
in
cmpsb
push
loopw
ret
or
je
sbb
mov
dec
and
daa
pop
lahf
xor
jl
fwait
dec
push
clc
lods
cmc
sub
cmc
imul
cmp
mov
not
std
dec
or
push
xor
movsl
or
mov
lods
xchg
push
mov
pop
popf
ret
dec
repnz
xchg
add
repz
sbb
cmp
cmpsl
push
loopne
aas
dec
sub
shl
adc
lcall
scas
xchg
push
sbb
hlt
mov
jne
dec
dec
lcall
jo
cmpsw
mov
inc
cmp
mov
mov
jmp
push
lret
test
mov
mov
xchg
dec
mov
sbb
sub
shlb
insb
sub
in
fs
adc
jl
inc
cmp
arpl
loop
jae
dec
shr
mov
or
xor
shlb
adc
xchg
jg,pt
adc
jmp
loop
fstpt
hlt
mov
jns
pop
mov
xor
in
adc
push
sbb
movsl
jne
xchg
xor
jmp
or
repz
popf
sbb
pop
out
mov
adc
push
adc
inc
cs
inc
repz
stos
cmpsb
notb
sbb
movsl
push
sbb
cwtl
jmp
outsb
lret
loopw
or
pop
pushf
ljmp
adc
pop
xlat
jg
fs
rcll
sbb
and
dec
clc
and
and
je,pn
xor
outsl
jg
fisubrl
outsb
push
in
jne
or
sti
pop
xchg
jp
and
xchg
out
add
fisubs
push
mov
cmp
pop
push
push
lret
dec
out
add
jg
popa
lods
or
scas
mov
xchg
idiv
mov
mov
fs
fcomi
inc
dec
push
out
loop
scas
outsl
insl
test
xchg
loope
test
pop
inc
xchg
xor
cmp
addl
sub
cld
push
mov
mov
push
xchg
xchg
pushf
ss
jl
cmp
out
xchg
cmp
dec
pop
fsts
mov
loop
js
mov
mov
xchg
in
call
xchg
and
cmp
lock
xor
leave
mov
ret
dec
daa
xchg
pop
xor
ljmp
aaa
rclb
cs
mov
mov
mov
mov
ss
sti
bnd
or
aaa
mov
and
lahf
rorl
cmp
mov
leave
cmp
mov
xchg
mov
and
mov
jae
fistpl
jae
int
insl
push
jne
mov
mov
add
loop
add
ss
xor
cmc
jne
add
movsl
rol
inc
inc
jp
jbe
dec
cwtl
stc
imul
sub
jbe
mov
lret
in
adc
or
jne
loopne
into
or
mov
add
cmp
dec
xor
push
cmp
call
add
and
out
in
mov
mov
loopne
ljmp
sbb
pop
push
loope
hlt
inc
mov
mov
test
out
in
pop
cli
pop
sub
sbb
icebp
notl
adcb
adc
rol
getsec
mov
daa
loope
pop
sbbl
stos
or
out
stos
mov
or
popa
flds
jp
lahf
lods
les
inc
or
sbb
test
jp
mov
dec
and
rorb
int
xchg
test
pop
insb
test
xchg
aad
add
push
das
sub
jns
sub
jmp
xchg
ret
stc
pause
loop
fsubs
sub
test
cmp
out
inc
jne
pop
inc
stos
inc
push
cmp
fbld
in
je
cmc
mov
mov
fwait
pushf
mov
mov
and
mov
jle
sti
add
cwtl
jmp
inc
xchg
loope
mov
outsl
add
push
ja
out
lods
mulb
aas
pop
lahf
mov
clc
pop
dec
sbb
sub
incl
sti
in
lods
sbb
rclb
dec
pop
lods
inc
inc
xchg
push
push
out
mov
inc
mov
movsl
into
fs
out
or
add
jp
cmpsl
or
bound
leave
mov
jp
das
cmpl
adc
or
gs
mov
dec
sbb
sbb
mov
test
pop
sbb
jbe
adc
mov
popf
lock
shrl
and
mov
stos
xor
clc
clc
outsl
out
cmp
lea
jne
lret
inc
xor
pop
cmp
mov
in
pop
add
pop
mov
sar
jb
mov
pusha
adc
shll
das
idivb
cmp
lret
and
dec
cli
movb
inc
lret
dec
push
in
movsb
aas
out
mov
or
insl
xor
daa
int
push
ret
mov
sahf
ret
mov
leave
dec
adc
mov
and
out
jne
mov
cmc
jg
xchg
add
mov
mov
mov
xchg
nop
movsb
sub
jl
and
mov
lret
jmp
repnz
pop
xchg
stos
mov
aas
imul
pop
out
pop
ja
inc
test
adc
cmp
mov
stc
bound
xchg
xchg
add
add
mov
mov
fistpl
inc
jmp
pop
mov
jbe
sub
sbb
out
xor
xor
repnz
mov
stos
pop
push
cmp
xchg
xor
stos
xchg
xor
sbb
gs
cmpsb
xor
jg
adc
add
push
adc
lods
jbe
lret
lahf
sub
jae
pop
sbb
ljmp
inc
push
into
lock
inc
cmp
mov
subb
jmp
jecxz
sub
dec
scas
cmpsl
pop
fdivrs
cmp
stos
ja
jg
add
lds
loopne
data16
notb
lcall
jns
pop
jae
call
fdivl
int
jbe
test
jecxz
bound
sub
ss
xchg
stos
adc
push
mov
jmp
jbe
xchg
outsl
cmc
faddl
pop
fnsave
jno
scas
mov
mov
xchg
outsb
insb
xchg
or
frstor
pop
adc
dec
movsl
add
push
xabort
mov
shr
enter
xor
mov
inc
rorb
std
sub
xchg
test
nop
push
and
repnz
xchg
aas
test
and
repnz
add
jb
stos
xchg
jmp
cmp
scas
stc
push
push
aad
in
mov
push
jno
pusha
loopne
xchg
sbb
inc
mov
sub
sub
mov
das
add
loope
sub
dec
push
add
or
sub
cmpps
out
call
ficoms
cmpsl
sbb
mov
mov
push
dec
cld
iret
das
mov
jecxz
adc
or
mov
xchg
push
pop
lods
cmp
cs
je,pt
pushf
add
or
arpl
inc
mov
sbb
cmpsl
hlt
lods
comiss
lret
jge
adc
jmp
outsb
mov
xor
arpl
es
popa
push
xlat
int3
adc
fsubrs
aam
pop
pop
mov
dec
mov
sub
mov
insb
lcall
ret
cld
inc
test
or
sub
sbb
imul
jbe
mov
shlb
fistpl
fstpt
cs
push
call
jae
add
adc
les
std
mov
push
pop
dec
fcompl
cmpsb
mov
jns
nop
test
cli
shrl
aad
push
pop
and
push
fsubrl
gs
mov
call
cmp
call
and
and
popa
ret
sbb
push
fstpl
cmc
push
mov
xlat
pop
mov
out
sbbb
out
mov
jns
movsb
outsl
push
aaa
jmp
std
dec
rdmsr
lds
bound
pop
pop
mov
addr16
imul
and
cmp
stc
pop
sub
rcrl
cvtps2pi
jb
jge
out
int
and
sbb
push
insl
dec
jmp
inc
cmpsb
mov
sub
add
dec
cmp
dec
je
movsb
add
out
mov
inc
dec
add
lahf
jns
mov
adc
fnstsw
add
sbb
jbe
imul
dec
aam
xchg
mov
mov
fsubrl
mov
mov
test
out
jns
add
or
shll
adc
xchg
gs
pop
or
sbbb
dec
scas
in
loop
or
sbb
jnp
and
pop
adc
push
fstpt
inc
inc
push
push
ja
scas
add
jno
mov
popa
xchg
in
int
pop
xchg
loope
daa
sahf
insb
clc
mov
vmovups
test
or
and
iret
pop
or
jge
sarb
pop
addb
insb
jmp
inc
dec
aad
out
sub
imul
clc
and
je
xor
push
jne
jmp
fs
pop
sbb
dec
ret
mov
mov
loope
es
add
in
outsb
push
nop
lcall
cmp
xor
xor
pop
jmp
shlb
into
dec
scas
stos
pop
pop
dec
add
sub
popa
or
clc
push
scas
jnp
jb
clc
xorl
mov
pop
hlt
call
xor
add
ret
gs
mov
dec
cltd
and
jae
js
addb
lcall
adc
outsb
mov
cmp
sub
push
xchg
sub
or
imul
inc
mov
jnp
dec
sbb
lds
or
int
stos
int
xchg
stos
rorb
out
sbb
sub
aaa
pusha
or
or
in
fs
dec
into
clc
dec
push
call
loop
mov
hlt
push
jne
xor
test
mov
aaa
dec
add
xlat
cmp
lcall
push
fidivrs
test
iret
mov
fnsave
xchg
adc
dec
xchg
test
inc
ror
fildl
adcb
dec
sbb
dec
hlt
adc
pop
adcl
pop
jns
push
iret
mov
mov
jp
iret
dec
movsb
test
pusha
mov
pop
mov
loop
out
mov
and
lahf
addr16
xor
clc
aas
inc
adc
movsl
sar
inc
in
pushf
pop
stos
into
rcr
daa
bound
int
xchg
int
roll
cmpsl
dec
pop
inc
push
mov
xchg
xor
in
mov
adcl
jno
xor
jg
mov
jnp
jae
lods
les
and
andb
sub
fstpl
push
dec
add
mov
xor
cmp
stos
dec
mov
mov
test
push
testl
push
ret
mov
dec
imul
call
hlt
lcall
sbb
mov
xchg
cmc
cmpsb
aam
imull
imul
testl
add
scas
sbb
leave
je
cmc
aaa
or
pop
in
popa
sbb
out
divl
mov
sbb
pushf
push
mov
mov
mov
sbb
in
in
movsl
cmp
sahf
out
insl
scas
jb
pop
out
xor
leave
pop
scas
or
pop
pushf
push
fildl
and
inc
sub
mov
push
push
sti
arpl
cld
mov
dec
ljmp
setns
xorl
inc
xchg
scas
xchg
mov
xchg
sub
pusha
jg
cs
xchg
dec
lret
sbb
arpl
cmp
xor
inc
mov
xchg
in
inc
push
shll
add
dec
sbb
cltd
mov
shlb
and
sar
jne
pushf
jae
dec
loopne
leave
sbb
xchg
sub
subb
rcl
sub
jns
dec
mov
fsts
jns
inc
out
push
jp
das
daa
pushf
incl
pop
testl
dec
pop
stos
decl
ds
cs
sub
sti
sbb
cmp
push
scas
movsl
popf
adcb
inc
cmp
mov
pusha
or
jp
xchg
jp
cmp
imul
cltd
mov
cmp
cmp
xchg
mov
bound
les
mov
jp
pop
dec
sub
aaa
jnp
pushf
cs
call
rcrb
mov
jbe
lcall
dec
lock
adc
dec
push
push
loop
in
into
push
sbb
xchg
xor
mov
dec
jb
and
adc
sti
mov
out
mov
push
ds
loop
je
xor
xlat
into
fabs
out
sbb
and
dec
or
inc
mov
repz
ret
dec
cmpsl
adc
jmp
pop
cs
mov
daa
xchg
std
push
push
filds
sub
pop
sbb
push
lcall
into
pushf
sti
adc
inc
stos
mov
jo
mov
fucom
testb
sub
or
dec
cwtl
nop
and
and
stos
push
inc
dec
add
mov
nop
sbb
rcr
outsb
dec
push
lret
cli
sub
jp
xchg
push
arpl
push
into
sbb
scas
pusha
inc
mov
mov
mov
call
inc
cmp
cmp
inc
fdivr
jmp
pop
ror
mov
and
int3
in
pop
push
fidivrl
push
add
decl
test
icebp
lods
pop
mov
loopne
push
test
pusha
out
das
ja
lahf
pop
push
push
mov
push
test
or
add
add
loop
pop
jge
inc
xchg
xchg
addb
sarl
and
xor
orb
add
lcall
mov
cmp
or
out
inc
jne
dec
xchg
jecxz
mov
jle
std
out
cld
or
stos
pop
mov
and
mov
inc
adc
pusha
ret
adc
pusha
iret
push
fs
lods
repnz
jbe
push
repnz
cs
dec
push
nop
jb
unpckhps
jb
out
cmc
cmpsb
fnstcw
mov
push
sti
add
and
cld
push
adc
inc
jbe
popa
mov
adc
adc
gs
dec
daa
xlat
popa
shlb
lahf
daa
cmp
aad
ror
xchg
ret
rorb
cmp
inc
movsl
push
xchg
jecxz
push
call
ljmp
je
mov
push
ret
daa
mov
insl
in
or
dec
and
dec
xchg
fwait
push
push
add
insb
sbb
pop
notb
sub
shll
js
jecxz
xlat
outsb
sub
lcall
sub
pusha
jb
push
insb
rcrb
dec
cltd
nop
add
ficoms
stos
xorl
xor
adc
jo
adcl
enter
dec
aaa
popf
test
cmpsb
iret
bound
adc
ja
add
push
in
xor
andl
mov
fldcw
adc
lods
negb
inc
test
pop
fs
lret
push
or
add
xor
mov
jecxz
js
imul
add
out
sbb
mov
in
shrl
stc
mov
cltd
mov
add
pop
das
or
push
mov
out
pushf
aas
cmp
and
cmpl
jae
adc
sbbl
or
mov
lret
push
mov
sbb
fcomip
std
inc
cld
shlb
rclb
ljmp
gs
sti
sbb
and
mov
in
xchg
mov
sub
xor
call
cltd
jecxz
xor
test
or
popl
adc
mov
hlt
in
ret
cmpb
xchg
fidivl
cltd
nop
push
dec
stos
pop
xchg
andb
jnp
sbb
arpl
lahf
mov
fistpll
test
ds
and
cmpsl
shrb
test
ret
pusha
mov
adc
xchg
add
pop
mov
stc
xor
dec
shlb
fisubl
lcall
int3
xor
outsb
mov
aam
out
js
das
sbb
pop
mov
in
pop
jnp
mov
imul
jg
push
in
inc
xchg
lret
pop
test
mov
lea
mov
cmp
testb
cmp
pop
pop
loope
dec
push
sbb
sbb
data16
std
and
scas
sbb
lods
inc
les
popa
out
mov
mov
cmp
ffreep
pop
icebp
stos
in
sbb
xor
ds
add
xchg
daa
xchg
pusha
repz
lods
jmp
popa
sbb
cmpsb
out
adc
sub
aam
outsl
mov
mov
add
out
fistpl
repnz
jbe
outsl
mov
jmp
push
jg
jmp
fucomi
sbb
sbb
in
int
mov
in
mov
mov
in
xchg
subb
push
in
mov
cmp
xchg
aam
test
movsl
push
testb
lds
mov
bound
pop
lods
inc
lds
incb
das
sub
sahf
and
pop
jg
cmp
mov
sti
arpl
fistpll
adc
xchg
cltd
inc
bound
dec
into
push
loopne
xlat
pop
cmp
push
lea
cli
jne
add
jne
sbb
adc
mov
negl
les
test
addb
aam
add
scas
hlt
daa
cmp
cmp
in
or
icebp
outsb
in
shll
xchg
std
fdivp
and
sbb
call
push
outsl
jp
lods
pop
addr16
cmp
xor
xchg
movsb
sbb
cmp
jmp
mov
mov
aaa
adc
aad
gs
out
mov
lds
lds
dec
sub
dec
push
ret
jno
lret
movsb
shl
sbb
stos
repz
movsb
mov
or
lds
adc
jb
push
lea
add
iret
fimuls
std
out
or
push
hlt
mov
add
in
in
popa
pop
inc
popf
ljmp
addr16
sbbb
lock
mov
mov
fld
cwtl
fbld
sub
pop
movsb
mov
mov
roll
iret
jno
in
fld
movsb
sub
push
inc
gs
pop
mov
outsl
cmp
sbb
and
xchg
cmp
insl
ds
mov
xor
xchg
mov
mov
jo
push
iret
mov
std
inc
sub
outsb
cld
aas
add
bound
add
popa
xor
filds
movsl
mov
mov
test
push
mov
cmpsb
sub
pop
call
sbb
test
mov
out
mov
jmp
mov
sub
push
cmpsl
std
loope
pop
out
out
mov
jecxz
fstpt
insl
lods
or
out
adc
adc
cli
scas
ss
leave
int3
jb
pushf
cmp
fdivrs
ficompl
jle
inc
mov
lods
pop
mov
pop
movsb
adc
jns
insl
cld
add
ficompl
repz
and
cmp
nop
jnp
and
lret
or
sub
imul
ds
rolb
xchg
dec
fwait
jp
adc
push
dec
cmp
enter
add
inc
mov
ds
popa
mov
cmp
push
adc
pop
xlat
push
shll
test
mov
fdivl
jl
lahf
xor
pusha
cld
fmull
addr16
aaa
in
aas
dec
ljmp
imul
js
and
mov
push
and
mov
mov
sub
fs
jnp
dec
push
sbb
add
popa
inc
scas
sub
sub
push
dec
fidivl
lds
xchg
mov
rolb
cmpl
mov
push
cmpsb
arpl
or
lods
dec
or
dec
pop
sub
dec
fwait
add
mov
cmc
inc
or
cmc
rcl
and
dec
jns
rorb
jp
fdivr
movsb
test
rorb
and
pop
cmp
rol
movsl
mov
int3
movsl
push
js
cmp
mov
loop
in
outsl
push
aad
xor
cmp
and
cmpb
mov
leave
hlt
lret
enter
out
arpl
sbb
mov
cmpl
adc
lcall
shll
andb
call
push
ret
pop
fs
loope
inc
mov
imul
inc
call
ja
js
cmp
xchg
subl
popf
popa
xchg
pop
inc
cwtl
jmp
xor
push
push
call
push
xor
push
xchg
jge
add
fadds
int3
dec
fsub
imul
es
inc
mov
faddl
hlt
cmp
pop
dec
push
test
xlat
stos
jne
movsb
in
loopne
pop
cmp
repnz
sbb
xchg
sub
cmpxchg
rorb
jbe
movsl
sbb
pop
add
inc
adc
in
movsb
lret
notl
inc
jns
jp
push
shrl
sub
int
bound
movsl
mov
mov
inc
mov
inc
pop
cltd
mov
jmp
pop
cmp
mov
or
add
dec
add
and
outsl
jl
iret
and
adc
and
stos
scas
frstor
les
xor
xor
jp
fdivs
cmc
cld
sub
adc
hlt
push
in
ja
clc
adcl
in
adc
cmp
idivl
xlat
jmp
pop
adc
add
adc
or
lea
mov
jne
frstor
shlb
fnstenv
adc
aas
into
xchg
cmc
loopne
scas
loopne
insb
mov
sbb
test
in
aaa
jl
hlt
daa
and
data16
jp
adc
enter
add
shlb
jmp
sahf
sbb
cli
int3
mov
add
xchg
es
cwtl
sbb
fistpl
jno
inc
push
stc
fidivs
sub
pop
pop
in
push
fdivrp
xor
inc
xchg
xchg
and
dec
movsl
mov
lret
repnz
hlt
test
clc
jecxz
outsl
fbstp
test
les
test
jbe
sti
stos
push
fsubp
xchg
sahf
xor
scas
rcr
sar
xor
mov
mov
xor
xlat
mov
adcb
jno
xchg
pop
stc
lahf
out
mov
push
jnp
enter
xchg
xorl
xlat
sub
or
add
jno
jae
mov
inc
xchg
mov
dec
xchg
test
pop
or
notb
mov
and
add
cmp
mov
cmp
xlat
push
pusha
mov
jae
loop
sbb
out
pushf
cmpsl
cwtl
cmp
cs
test
js
xor
sub
mov
mov
xchg
pop
in
pop
mov
push
mov
mov
fcoms
mov
out
add
mov
xchg
xchg
cmp
inc
pop
ljmp
lods
lahf
pop
fdivr
add
stos
mov
xchg
push
or
mov
sbb
loope
repnz
sbb
lret
pop
lds
fldt
cwtl
push
xor
scas
xor
in
push
pop
mov
push
popa
scas
jge
gs
push
sbb
mov
sbb
mov
aas
daa
je
add
mov
pop
fcomps
sub
cwtl
mov
mov
cld
sbb
out
xor
cli
mov
and
or
push
jmp
dec
mov
xchg
jnp
aas
or
movb
loope
adc
rorb
int3
inc
jg
inc
stc
inc
sbb
aam
mov
jbe
cmp
fisubrs
bound
testb
divl
push
sub
pop
mov
cs
lods
insl
xor
push
pushf
cmp
hlt
mov
bound
pop
out
adc
push
and
mulb
outsb
dec
jp
loope
inc
push
jbe
das
pusha
and
ss
mov
mov
mov
pop
jg
rcll
mov
sahf
push
dec
movl
roll
pop
sub
dec
inc
push
mov
or
cmpsl
xchg
in
les
cmpsb
adc
mov
insb
xor
adc
add
and
inc
and
and
jp
lds
sbb
cmpsl
pop
add
jecxz
int3
inc
mov
shl
jae
icebp
ljmp
je
mov
out
insb
test
jb
call
jmp
pop
or
sahf
push
fimull
sahf
sub
or
out
jo
fcom
jno
cmp
cmp
mov
andb
repnz
cli
dec
xorl
add
or
pusha
mov
stos
xchg
cmp
outsb
movsb
sub
cmpb
sub
arpl
or
ja
add
stc
aam
mov
call
add
and
js
push
cmc
je
test
jae
xor
dec
sub
jns
lcall
dec
and
jbe
push
and
mov
pop
cs
cmc
cmp
add
in
sub
dec
mov
pop
pop
xchg
rolb
hlt
pop
fwait
adc
push
scas
imul
add
pop
mov
xor
cmp
std
mov
push
inc
fimuls
int3
push
mov
fisubl
push
inc
outsl
rcrl
lods
mov
cmc
jno
jl
adc
outsl
int
add
pop
jmp
addl
sbb
pop
mov
push
or
mov
mov
sub
stos
ss
stos
outsl
xchg
insb
lock
rclb
pushf
sub
into
negb
mov
push
sbb
xchg
inc
aam
or
fs
hlt
test
jp
dec
mov
fldl
xchg
dec
xchg
dec
iret
lret
or
xor
iret
jne
mov
int3
andl
aaa
std
cld
jo
mov
push
push
js
add
sub
outsl
xor
into
in
idiv
mov
js
mov
andb
fcoms
mov
and
jl
in
sarl
test
and
and
imul
es
lret
or
pop
je
or
xchg
or
popf
outsb
daa
dec
rclb
jne
sbb
cmp
mov
adc
pop
repnz
shlb
sbb
gs
out
nop
mov
add
lock
adcb
popa
sub
xor
outsb
jo
xchg
jno
cmpl
cvtps2pi
pop
sbb
sub
outsb
icebp
inc
cmp
xor
mov
or
clc
cld
test
bound
cld
sub
cwtl
jecxz
js,pt
mov
je
mov
push
fistl
je
clc
aaa
jmp
xchg
adc
and
nop
or
mov
loopne
xor
lock
jnp
mov
jb
aas
pop
mov
cmp
cmp
insl
es
les
hlt
mov
and
sti
pop
insl
pop
or
mov
movsl
mov
xorb
pop
lret
cmp
lret
inc
out
jmp
int3
int
into
fwait
les
scas
or
jmp
leave
push
xchg
les
mov
lock
pop
mov
add
xorl
mov
data16
push
out
and
pop
mov
sbb
mov
cmp
insl
xor
fcmovnu
jg
jecxz
cld
pop
jbe
xor
pop
sbb
out
add
lahf
lods
in
xchg
inc
loopne
aad
mov
sti
call
gs
cs
pop
lods
stc
hlt
pop
shll
pop
and
sub
insl
hlt
sub
cli
call
sub
jp
fs
in
dec
fdivrp
mov
scas
xor
push
pop
xchg
sub
loope
aaa
mov
shl
sub
dec
adc
cmp
or
jne
and
and
and
xchg
aaa
cmovbe
sbb
jbe
scas
mov
mov
sub
jb
loopne
dec
lret
pop
or
ja
push
mov
aas
push
fidivrs
and
je
out
aam
sbb
sbb
sbb
movsb
les
gs
mov
pop
scas
sub
aaa
lds
sub
dec
mov
jge
xor
mov
scas
sbb
movsb
mov
xchg
sub
push
iret
sarl
xchg
nop
jae
sub
and
mov
out
leave
cs
mov
daa
lods
lcall
shll
sub
repz
je
pop
xchg
push
ficompl
clc
ror
setne
stc
pop
daa
sub
sub
adc
out
or
push
mov
mov
xlat
push
mov
sbb
inc
or
int
lods
xchg
lcall
in
test
dec
mov
pop
push
iret
insb
mov
ds
pushf
push
popa
xor
jns
mov
lcall
push
ss
inc
jo
mov
dec
addr16
adc
cmp
shll
mov
dec
movsb
in
and
jno
inc
popa
xor
fsubl
or
lahf
leave
mov
adc
sti
inc
movb
sbb
pusha
lea
or
ret
pop
adc
mov
adc
dec
inc
data16
int3
lods
fwait
push
xor
push
and
xchg
in
pop
insl
hlt
into
pop
and
mov
into
xchg
sub
fcoms
bound
scas
cmp
and
jg
jle
imul
filds
jmp
jno
jl
push
fs
lds
mov
call
insl
mov
negb
aas
jno
or
aam
movsl
push
sbb
jae
lahf
push
aas
stc
mov
je
sub
add
jmp
hlt
or
pop
xchg
icebp
loopne
out
adc
cmp
in
jo
js
xorl
das
pop
clc
cli
lahf
movsl
pop
loopne
mov
scas
cld
pop
jb
adc
mov
push
jmp
aad
xor
or
pop
stos
mov
add
push
les
int
cmp
fstps
aam
clc
mov
xor
xor
push
add
xlat
mov
pop
dec
cld
cltd
mov
add
push
pop
daa
std
push
sub
dec
repnz
mov
xor
xchg
cmp
imul
sub
jno
rcr
mov
jo
pushf
lret
cwtl
nop
pushf
repnz
fists
insl
jmp
xchg
pop
add
xchg
or
dec
push
jae
notb
stos
xlat
hlt
inc
jp,pt
mov
pop
mov
push
das
ss
loop
inc
ret
hlt
clc
sbb
or
push
mov
add
pop
mov
add
fimuls
mov
test
das
fucomip
ret
out
sub
les
jmp
iret
scas
cli
pop
cmpsl
scas
movsb
xchg
cmp
cld
test
lea
pop
in
sbb
mov
fcmove
xchg
iret
xor
cli
sub
dec
lods
hlt
cwtl
iret
or
pusha
mov
sbb
cmpsl
pop
rcll
and
scas
pop
mov
xchg
rclb
into
xor
ds
push
insl
out
cwtl
lahf
mov
nop
adc
mov
xchg
test
in
call
push
scas
stc
inc
iret
dec
mov
lret
shlb
add
pop
dec
pop
cmpsb
lcall
pop
stc
xor
jg
orb
sbb
test
sub
mov
ficompl
mov
jno
mov
clc
add
ljmp
add
xor
sarb
sbb
out
icebp
jae
in
push
or
imul
xor
bound
mov
loope
jl
fsubs
loope
rcll
lea
xchg
xor
or
dec
mov
fldcw
xchg
repnz
mov
imul
push
dec
loop
shl
mov
inc
insb
or
dec
dec
dec
dec
adc
inc
jl
jmp
dec
and
pop
and
fwait
dec
loopne
push
or
push
xor
xchg
add
dec
cmp
or
int3
mov
aas
mov
test
xchg
rcrb
dec
xor
aaa
jl
dec
and
lock
rclb
imulb
cmp
cmp
add
aaa
sbb
pop
pop
or
mov
cli
out
imul
mov
sub
push
jge
cmp
mov
stc
cmp
push
inc
xchg
pop
mov
adc
add
push
pusha
sub
xor
mov
pusha
jno
or
dec
and
pop
pop
xor
inc
pop
sarl
add
into
or
dec
jb
inc
inc
xchg
sub
adc
cwtl
inc
and
sub
mov
adc
sub
cmp
loopne
push
mov
mov
inc
and
inc
push
mov
jne
cmp
xchg
lods
mov
adc
push
mov
call
mov
in
and
ficoml
mov
jne
mov
jbe
je
add
fistl
pop
mov
mov
push
shlb
and
adc
inc
jg
shlb
mov
or
lock
aam
ret
jo
in
call
inc
sub
adc
gs
mov
sbb
add
nop
and
mov
iret
lds
or
je
inc
pop
cs
push
lods
adc
sbb
jmp
adc
xor
ljmp
sarl
xor
addr16
cmp
push
mov
inc
push
cmp
leave
fisttpl
andb
mov
stos
lret
test
fucom
and
rorb
jecxz
xchg
daa
and
jnp
loop
jle
inc
andl
int
ret
inc
adc
lods
jecxz
inc
ljmp
arpl
aaa
or
mov
insb
lods
mov
rorl
pop
sbbl
dec
enter
ret
dec
arpl
or
jns
and
mov
fstpt
push
fwait
or
sub
mov
dec
insb
ror
xchg
stos
cmp
push
out
mov
mov
mov
cmpb
and
inc
push
mov
mov
and
out
add
pusha
xchg
into
fildl
decb
inc
xor
adc
or
mov
lds
jle
scas
cmp
cltd
outsl
sarb
leave
mov
shll
adc
jge
cltd
mov
inc
fwait
and
fcoms
pushf
stc
sub
adc
jns
dec
lds
lcall
imul
push
je
mov
push
mov
repnz
lods
sbb
cmp
gs
mov
adc
das
arpl
push
movl
fsubl
rorb
movsl
add
pop
or
jno
dec
dec
mov
fimull
sbb
ss
sub
push
ret
sbb
enter
dec
shll
lcall
or
mov
ja
jae
and
xchg
out
cld
mov
cli
jge
jecxz
hlt
dec
sub
prefetcht1
lahf
vfrczsd
mov
stos
cmpsl
mov
pop
adc
add
mov
ljmp
xlat
mov
iret
mov
pop
lea
pop
ljmp
cltd
or
or
xor
les
int
mov
bound
mov
arpl
test
pop
lahf
inc
or
jae
call
lock
and
jge
or
sbb
mov
inc
mov
mov
cmp
mov
mov
jne
hlt
lcall
adc
add
repz
fcomp
mov
lods
cltd
pop
jmp
cmpsl
xchg
iret
sbb
shlb
test
sbb
div
ds
repz
fidivs
cltd
xchg
pop
add
mov
sub
cwtl
mov
pop
js
mov
int3
adc
subb
faddl
ja
in
jmp
xor
sarb
bt
ss
into
pop
adcb
shll
mov
adc
fdivrs
mov
mov
add
mov
mov
push
or
call
and
jmp
mov
cld
jne
adc
aas
sti
addr16
jp
or
xlat
cmp
aam
pushf
jecxz
xor
shl
aas
jle
xchg
xchg
mov
mov
aas
icebp
test
jno
sub
dec
movsb
sbb
cmp
in
mov
test
mov
mov
loopne
inc
sub
cmp
lret
mov
dec
mov
ds
cld
je
fstps
push
push
lahf
iret
aas
enter
insb
xorl
adc
decl
pop
and
aad
lcall
and
or
mov
add
shll
jge
je
dec
and
and
fimull
jno
jb
mov
lcall
aad
int
rorl
dec
jg
imulb
dec
sbb
mov
dec
mov
mov
loope
repnz
mov
adc
inc
pushf
sbb
aam
lahf
add
mov
out
jle
mov
cmp
addr16
or
cmp
imul
push
push
sbbl
inc
mov
test
je
int3
inc
and
push
out
fs
outsb
int
dec
mov
dec
dec
data16
xchg
imul
ffree
dec
test
fiadds
xchg
fldt
icebp
std
jecxz
or
repnz
add
jne
pop
ja
arpl
aaa
push
movsb
dec
pop
ret
ljmp
and
add
adc
or
in
ljmp
leave
cmp
push
iret
pusha
push
outsb
insb
inc
bound
pop
faddl
cltd
fisubl
push
xorl
inc
mov
cld
daa
in
sbb
jbe
dec
sahf
dec
fldlg2
cmpsl
xchg
addr16
adc
cld
idiv
cmc
xchg
adc
push
pop
andb
jg
imul
add
dec
xor
test
jle
sahf
xchg
pop
push
je
cld
jno
mov
fnstsw
add
icebp
mov
push
adcb
pop
sbbb
mov
xchg
sbb
cmpsb
sub
sub
clc
sbb
mov
jnp
mov
movsb
ret
jno
iret
pop
pushf
pusha
mov
push
or
or
icebp
cld
dec
adc
fs
xor
dec
mov
xchg
dec
stos
outsl
incb
adc
xchg
rorl
stos
js
out
scas
gs
lea
sub
mov
pop
pushl
in
pop
inc
lret
or
ficoml
movsl
movsb
arpl
stos
xlat
and
call
pushf
cld
xchg
sahf
add
fidivs
scas
inc
insl
mov
inc
into
jg
aad
xchg
adc
pop
and
out
mov
push
dec
into
jno
xor
dec
mov
cmp
jbe
jns
or
popf
movlps
mov
test
push
and
xchg
jge
push
les
and
add
and
jne
mov
push
out
cmpsl
dec
cmpsb
dec
or
lock
ljmp
addr16
lret
inc
inc
cmp
into
pop
pop
mov
inc
rclb
pop
in
lret
iret
aaa
xchg
test
push
shrb
xchg
or
rolb
int3
iret
adc
jno
and
lahf
xchg
jnp
push
dec
inc
lret
sbb
je
notl
out
popa
cmp
mov
xor
js
jne
fnsave
sbb
push
fcmovnb
jnp
pusha
mov
pop
rcrb
mov
xor
aaa
jmp
ret
sbb
insl
or
idivl
pushf
mov
pop
jle
push
add
lods
in
mov
sahf
cmp
push
xor
mov
bound
sahf
ret
inc
mov
fs
mov
lods
pusha
inc
scas
outsl
and
pop
inc
or
mov
insb
fisttps
cli
push
xchg
std
mov
sub
ror
insl
sbb
fisttpl
xlat
mov
fwait
sub
xor
aam
icebp
and
push
cmp
or
adc
push
mov
inc
mov
sbb
ret
mov
fbstp
loope
cli
outsb
mov
mov
mov
test
loope
popa
inc
shl
add
mov
ja
lods
or
add
adc
xor
pop
sbb
mov
pop
push
lret
xor
push
aaa
mov
fsubl
xor
mov
adc
push
fidivl
idivb
loope
cmc
outsl
or
mov
adc
push
mov
mov
mov
gs
xchg
mov
jne
push
rol
cmpsl
call
mov
repnz
je
sbb
mov
jp
pop
add
add
jg
mov
xor
jae
add
push
mov
xchg
fisttpl
cmp
sub
jbe
lcall
xor
xor
rcl
pop
sub
sti
leave
push
lret
lods
xor
lret
adc
cmp
xchg
outsl
xchg
lds
push
xor
or
repz
decb
int3
and
insb
jecxz
inc
clc
cmc
jb
out
push
mov
in
adc
adc
mov
sbb
and
fisttps
mov
jne
subb
fisttpll
jb
or
cli
sbb
and
cmpsb
movsl
sbb
jne
mov
out
fs
clc
cmp
dec
sbb
sbb
clc
aad
mov
jns
push
dec
sub
dec
adc
stos
das
jo
add
sub
mov
sbb
xchg
mov
lcall
js
sub
dec
popl
lret
xchg
fsubrs
insl
inc
div
lods
or
shl
mov
ss
fwait
daa
out
lret
nop
mov
loopne
pop
lock
repz
adc
dec
pop
jg
sbb
mov
add
mov
sahf
out
pop
mov
addb
push
pop
jp
xor
pop
mov
addr16
je
cmp
jp
arpl
adc
out
push
lea
scas
leave
jecxz
cwtl
jno
mov
adc
stc
dec
cltd
imul
push
sub
cmc
dec
idivb
loope
push
lea
dec
lods
xchg
hlt
stos
in
out
inc
adc
inc
add
dec
outsl
and
out
jp
fwait
daa
loope
push
bound
lods
jne
int3
push
xor
sbb
sti
rcll
movsb
cmp
inc
sub
pop
loopne
fwait
stos
mov
out
dec
movsb
push
pushf
ret
fstps
cli
jmp
sub
add
inc
fwait
jne
lods
and
mov
pop
cmp
popf
inc
lret
push
xor
aaa
mov
pop
mov
loope
fists
xor
push
xchg
notl
pushf
mov
mov
sbb
mov
adc
cld
or
test
or
out
and
out
jns
adc
out
mov
aam
adc
mov
imul
das
stos
dec
lea
xchg
icebp
test
stos
cmp
mov
adc
leave
xchg
jns
jmp
add
jnp
jecxz
cmp
push
imul
push
sub
lds
andl
jbe
add
mov
add
test
sub
jge
popl
call
mov
xlat
xchg
outsb
leave
sub
pusha
sub
mov
test
enter
pop
push
pop
loop
mov
cltd
sbb
jg,pn
jle
dec
mov
jecxz
leave
push
push
sbb
pop
lods
repz
xor
pop
movsl
movsb
inc
dec
and
mov
xor
adc
js
addr16
xchg
addb
pop
das
sub
std
leave
mov
loop
mov
in
or
pop
xlat
sbb
inc
jnp
jno
mov
jno
test
or
mov
pop
mov
dec
in
nop
xor
xor
les
dec
das
jo
repnz
cmp
xchg
jne
sbb
and
lret
lret
pushf
mov
mov
rcll
sbb
icebp
je
xor
int
jmp
stc
cld
nop
mov
cmpsb
mov
sbb
jecxz
btr
pop
push
nop
push
or
push
enter
sub
jbe
inc
adc
cli
push
pop
xchg
imul
mov
jecxz
in
js
or
and
adc
xchg
es
sub
mov
push
inc
out
sbb
push
xchg
shlb
xchg
iret
out
pushf
push
enter
mov
iret
adc
mov
in
adc
jl
dec
cmp
popa
cmp
in
fcomps
rcrl
rorl
inc
testb
cmp
jge
cmp
not
add
shlb
or
lock
les
jecxz
xor
mov
push
das
mov
orb
mov
inc
lock
sarl
ljmp
mov
mov
outsb
pop
inc
out
jp
jno
fistpl
jp
imul
test
icebp
dec
mov
sbb
add
inc
cmp
stc
and
dec
sub
imull
add
subl
dec
and
xchg
imul
std
dec
popa
or
gs
ljmp
js
and
mov
mov
cmpsb
mov
push
mov
xor
inc
int
ret
pop
pop
in
nop
jno
lret
test
lret
cmp
jge
or
jnp
into
sbb
inc
jle
cld
rorb
dec
xchg
daa
repnz
pop
faddl
bound
je
loopne
cmp
or
out
test
mov
out
in
xchg
inc
cmc
mov
outsb
repz
leave
mov
mov
mov
or
sti
cmp
push
mov
mov
hlt
fdivrp
mov
out
iret
hlt
xchg
dec
ds
lahf
jbe
dec
fdivr
fstpt
data16
popa
ret
push
inc
gs
xor
subb
jns
cmpsl
movsl
mov
ret
cld
subb
incb
ss
fmull
sub
movsb
mov
pushf
rcr
xchg
cmp
cmp
pop
jmp
jmp
jne
xor
or
sub
mov
fildl
imul
inc
icebp
mov
test
loop
arpl
xchg
adc
sub
cmpsl
push
outsb
push
mov
outsl
xchg
inc
jns
lods
loopne
fwait
cld
pop
insl
pop
push
pop
arpl
ret
sbb
stos
fcompl
pop
iret
outsl
sub
mov
dec
or
mov
out
fwait
std
lcall
cmp
mov
mov
pusha
daa
test
inc
aaa
sbb
adc
or
aas
jecxz
add
dec
std
jns
cli
hlt
cs
or
inc
sbb
lret
cwtl
lea
sub
sbb
repz
cltd
lret
pop
and
sub
add
outsb
hlt
rol
mov
xor
xchg
test
ss
and
jg
and
push
ljmp
inc
add
aaa
jmp
adcb
cmp
lods
pop
inc
imul
hlt
cmc
jg
ret
daa
fisubl
mov
sti
push
and
ret
or
ffreep
xchg
sub
sbb
dec
cs
sbb
pop
mov
adc
jae
sarb
aam
mov
push
pop
pop
jo
divb
jae
add
mov
addb
push
lret
sub
pop
sbb
sar
pop
mov
sahf
stos
adc
inc
shlb
popa
xor
pop
add
outsb
es
loop
dec
rcl
pop
insb
dec
mov
je
jae
mov
xchg
xchg
jo
mov
pop
test
jg
outsb
lret
sub
pop
pop
mov
lahf
mov
cmpb
aaa
mov
jb
mov
es
mov
sub
mov
gs
lds
cmc
push
test
sti
arpl
popa
cmp
pusha
xchg
sbb
das
push
xchg
xchg
iret
fnstenv
dec
mov
xchg
cmp
cld
pop
mov
and
loopne
and
push
add
mov
or
cltd
push
or
mov
xchg
cmp
add
inc
mov
test
pop
rclb
divl
ljmp
ficoml
fisubs
jecxz
insl
mov
mov
add
mov
jne
push
adc
arpl
rcr
aad
in
insl
cltd
mov
xchg
xchg
shrb
sub
mov
dec
mov
jo
clc
xor
or
push
xchg
in
xor
scas
addb
push
test
sbb
decb
pop
test
insl
ret
pop
and
dec
cli
mov
xchg
in
ds
add
mov
jbe
mov
loope
xor
mov
cmc
mov
cmp
add
xorl
push
and
ds
pop
inc
int
outsl
idivl
cmpsl
xor
fsubrs
or
cmp
mov
inc
adc
popa
jne
into
xor
fistl
pop
dec
xchg
mov
jg
xor
cs
dec
mov
mov
negb
pop
jne
xor
arpl
fsubrl
in
push
jne
inc
mov
pop
jg
jmp
inc
adc
shll
sahf
adc
xchg
jae
ja
lahf
sub
lock
mov
fisttps
sahf
testb
clc
lea
dec
ja
in
lds
mov
fsubrl
push
mov
sub
inc
jl
lods
int3
push
je
xchg
fwait
jae
test
loope
adcb
test
xchg
jp
into
mov
dec
lret
push
cmpsb
pop
dec
inc
out
pusha
adc
pop
xor
in
leave
mov
pop
push
inc
fabs
pop
add
xor
mov
jne
mov
outsb
jne
cltd
cs
xchg
ds
jg
dec
cmp
rolb
jbe
mov
jo
sbb
mov
punpckhdq
addr16
mov
aaa
fcomps
out
test
lahf
nop
jns
stos
jecxz
jle
les
sbb
popa
xlat
lahf
pusha
aam
inc
mov
push
mov
lods
loope
cmp
jb
inc
pop
mov
adc
lret
lods
loope
or
mov
pop
int3
and
les
xor
cmp
dec
movsl
jno
loope
popa
and
std
or
push
xor
test
stos
popf
and
push
repz
xchg
sahf
cmp
dec
mov
fimuls
mov
mov
lcall
push
shl
out
jo
imul
mov
cmp
fdivrs
testb
mov
push
push
es
adc
push
ret
dec
das
pop
stos
jns
xor
shr
inc
cmc
push
push
lea
je
and
sti
sub
add
jge
push
add
imul
fstl
pop
cli
cmpsl
mov
lea
sbb
out
cmp
inc
and
cmc
jbe
xchg
cmp
xor
pop
adc
inc
mov
pop
and
sub
loope
iret
push
mov
sbb
rolb
ljmp
ljmp
es
xchg
lahf
and
add
xchg
adc
aam
jbe
nop
ljmp
test
and
mov
int
es
mov
enter
std
lcall
or
jecxz
rcr
pop
fstpt
in
leave
add
sbb
pop
lods
mov
and
pusha
lahf
hlt
push
mov
mov
pop
shrb
repnz
stos
or
stc
lahf
aam
add
cmp
xor
pop
cmpsl
pop
in
leave
dec
cs
sub
imul
or
iret
adcl
adcb
mov
mov
and
ret
icebp
mov
imul
inc
mov
adc
dec
outsb
mov
test
ss
add
sbb
xor
mov
add
into
sbb
testl
in
or
call
test
iret
sub
sti
xor
cmp
push
cli
lds
das
scas
adc
gs
jp
mov
inc
js
test
cmpsb
call
aam
movb
ss
aas
bound
dec
xor
mov
loope
sub
inc
cmp
mov
lods
fisttpll
in
call
push
out
movsb
out
leave
lods
sub
adc
lock
cltd
sarl
push
aaa
sbb
movl
stc
stc
cmp
add
dec
add
push
jmp
push
add
pop
inc
aaa
mov
fisubrl
jle
and
jns
arpl
sub
sbb
sub
mov
xchg
inc
notb
jnp
xchg
sbb
adc
sub
or
es
loopne
iret
inc
test
push
je
dec
filds
pop
cli
loope
test
push
mov
xchg
out
or
inc
lahf
shll
jecxz
push
mov
add
pop
into
mov
cmpsb
imul
or
sub
xchg
sbb
sub
mov
testb
pop
or
mov
lea
out
push
repnz
jne
jge
mov
jae
pop
and
jp
pop
aad
bound
movsb
pop
popa
gs
fucomip
cmpl
cmp
add
fstpl
jns
adc
jno
adc
fidivs
pop
je
jbe
jmp
shlb
sbb
dec
leave
aas
movsb
xchg
scas
jcxz
mov
jp
lret
xor
fwait
ljmp
shlb
xchg
and
in
pop
enter
xchg
jno
jo
punpckhwd
mov
mov
push
and
bound
pop
sbb
shl
sbb
jg
pop
inc
fisttpll
cmpsb
xor
xor
adc
add
adc
and
inc
rcrb
jg
lods
test
push
mov
mov
cmpb
aas
mov
jg
sub
mov
cmp
xor
out
scas
sahf
xchg
adc
sub
push
pop
filds
std
pop
aaa
and
movsb
pop
fimuls
int3
ret
pop
mov
cmp
lcall
es
sbb
pusha
insl
adc
inc
add
xor
pop
lods
add
dec
fwait
mov
std
jecxz
ret
lods
call
jnp
icebp
inc
mov
enter
push
mov
shrb
cmp
sbb
lret
in
gs
xchg
gs
sbb
sub
leave
test
orb
scas
or
daa
sbb
insb
test
inc
pop
xchg
repz
bound
pusha
adc
jecxz
push
push
add
mov
xor
push
aas
lret
adc
push
fstpl
jne
push
mov
mov
xor
daa
add
mov
das
les
movsl
inc
sub
add
shrb
into
jbe
pop
pop
jmp
sbb
jg
mov
mov
xchg
gs
cmpw
shl
repz
mov
out
pop
scas
or
pop
adcb
xor
xor
mov
dec
dec
xorb
sti
sub
aad
mov
pop
popa
mov
fs
xor
dec
mov
xchg
sub
cmp
mov
out
mov
push
cmp
push
cmp
jns
dec
leave
adc
imul
sbb
sub
jns
fimull
test
cld
mov
hlt
inc
insb
stos
mov
ljmp
fadd
stos
lods
mov
mov
movl
inc
call
out
mov
and
inc
mov
pop
pop
jns
into
xor
inc
ja
das
adc
sahf
es
jnp
aad
mov
jno
lds
xchg
in
mov
xchg
cli
jge
pop
pop
ds
push
std
xchg
je
aaa
mov
dec
adc
or
ficoml
lahf
idivb
repnz
add
inc
mov
testl
int3
add
or
ss
inc
mov
adcb
and
mov
sbb
fmull
pusha
sub
aaa
push
in
lret
addr16
outsb
pusha
ret
out
or
or
ja
push
rcrb
add
push
into
arpl
add
lds
push
or
adc
test
xchg
and
push
pop
cs
xchg
xchg
arpl
lret
int
test
mov
fwait
dec
jg
out
and
sarb
imul
cs
pusha
idivl
jp
testl
xor
roll
or
scas
sarb
subl
push
loope
mov
rolb
xchg
lds
pop
and
adc
out
mulb
imul
rorb
and
cmp
pop
mov
inc
leave
jae
repz
dec
xchg
xchg
mov
rclb
aam
xchg
mov
jge
repnz
decb
into
push
jecxz
bnd
loop
push
push
xor
aas
dec
in
insl
cmpsb
bound
in
sbb
cmc
in
xchg
int3
push
lock
jmp
mov
jge
cli
add
movsl
mov
jl
into
and
jb
movl
lea
sub
xlat
and
push
cmc
shrb
pop
cmp
lods
push
mov
adc
aam
enter
cmp
pop
xor
push
rep
clc
subb
fiaddl
in
mov
mov
addr16
aas
xchg
lret
sub
out
call
ja
scas
call
int3
popf
addl
fcmovbe
repnz
cmp
mov
jne
loope
push
cmp
xchg
aaa
lret
or
stc
inc
cmp
and
or
loopne
not
insl
enter
sahf
int3
out
adc
pop
push
lods
les
or
mov
push
push
in
jmp
xchg
leave
rclb
test
imul
std
cwtl
pop
sbb
or
stos
pop
addr16
iret
sbb
adc
imul
mov
mov
or
repnz
loope
sub
out
stos
push
mov
and
addr16
stos
cld
xor
cli
push
in
shrb
in
pop
negl
or
xor
xor
cmpsb
push
dec
pusha
xchg
pop
leave
cltd
push
mov
xchg
icebp
pop
add
xor
push
mov
sbb
fwait
or
add
jmp
jp
fdivrp
fimull
icebp
nop
jmp
or
push
push
xchg
das
adcl
mov
sbb
ds
pushf
dec
das
sbb
pop
pop
cmc
lret
push
test
xchg
or
enter
push
dec
inc
sub
stos
je
sub
mov
or
dec
and
mulb
out
fs
push
loopne
push
addr16
mov
mul
and
sbb
iret
jmp
or
dec
mov
arpl
test
mov
in
loopne
pop
mov
push
mov
addr16
mov
xor
scas
mov
add
and
jmp
aaa
ret
mov
xchg
xorb
in
pop
movsb
pushf
jge
scas
xor
mov
jg
dec
cmp
popa
xchg
jecxz
xor
arpl
lea
sub
jle
mov
mov
add
jae
hlt
mov
cltd
mov
shrb
int
aas
dec
data16
sbb
aas
fcoml
cmp
ret
sbb
dec
scas
add
es
add
xlat
dec
mov
aaa
mov
cmp
or
adc
cli
mov
jb
jmp
ficoml
loope
mov
xor
xlat
es
loopne
fbstp
push
jmp
mov
push
dec
mov
mov
xor
popa
push
sbb
mov
push
sub
stos
sub
loope
cmp
xchg
lahf
jmp
int
adcl
push
xchg
insl
sti
arpl
mov
mov
xchg
pop
add
sub
lcall
sub
insl
xchg
xor
mov
dec
adc
adc
fldenv
aad
sub
out
add
xor
in
aas
mov
int3
fwait
int3
push
call
outsb
inc
sbb
and
clc
mov
fldcw
xor
pop
dec
movsb
aas
mov
out
dec
mov
lahf
cwtl
dec
push
cmp
movsb
adc
rclb
test
iret
or
cli
adc
cmp
rcrl
movsb
pop
test
push
loopne
ret
fsubrs
and
mov
inc
mov
add
dec
adc
js
mov
jg
mov
push
mov
xor
cmp
pop
xor
es
sbb
mov
fcompl
pop
scas
imul
test
sbb
add
in
mov
dec
sbb
xchg
xor
lods
les
les
imul
sub
xor
xor
xor
cmp
adc
mov
mov
dec
mov
pop
enter
jae
mov
test
das
mov
fiaddl
iret
in
and
dec
mov
mov
movsl
movsl
clc
cmp
mov
mov
fs
test
pop
jmp
mov
jae
mov
cmp
sti
add
sub
pop
pop
inc
je
xchg
cmpb
mov
sub
pop
jbe
push
shrl
inc
mov
dec
or
cld
decb
xlat
dec
mov
je
test
frstor
in
pop
rcrb
arpl
jo
test
cmp
repnz
shrb
or
jg
lods
mov
xchg
or
jmp
fs
push
aas
test
movsb
test
lea
pop
and
pusha
cs
mov
and
dec
cmc
fmuls
ror
roll
out
sub
fdivr
dec
add
lods
dec
lods
fs
int3
dec
pushf
inc
pop
int3
daa
push
fxch
jo
cmc
push
sbb
pop
adc
pop
cmp
imul
and
rorb
fs
fwait
cli
cmp
xchg
sbb
imul
mov
pusha
mov
les
mov
gs
cwtl
mov
xchg
jmp
movsb
and
inc
popa
mov
sarl
insb
mov
ss
ds
dec
mov
test
dec
stos
push
icebp
adc
xor
push
pop
out
push
pop
jae
or
push
pop
jns
xchg
and
or
ss
das
xor
ret
sarb
xchg
shl
lds
adc
movsb
idivl
fiadds
popa
pop
in
jnp
pop
jg
pop
into
cmc
insl
sub
sbb
test
cmp
xchg
mov
xor
jecxz
cwtl
les
data16
adc
add
push
cmp
cmc
mov
jecxz
dec
dec
outsl
jp
xchg
mov
jmp
dec
fwait
inc
fstl
hlt
subb
bound
rolb
aaa
sub
sbb
and
xchg
or
jp
jmp
iret
push
mov
xchg
in
daa
adc
sbb
add
lcall
loope
pop
mov
xchg
js
xchg
push
arpl
lcall
stos
or
repnz
pop
xchg
and
push
push
jmp
xor
ss
pop
pop
add
sub
popf
sbb
cs
xchg
mov
aaa
pop
pop
mov
dec
imul
inc
pop
shll
xor
cmp
xor
inc
cwtl
mov
in
adc
pop
jmp
int3
loop
pushf
pushf
pushf
fiaddl
xchg
arpl
std
lret
popa
mov
sbb
enter
adc
jge
xchg
mull
outsl
ja
sahf
push
arpl
fbld
lea
add
push
outsb
out
inc
shr
clc
mov
cmp
or
sub
mov
push
out
xchg
test
loopne
jne
cmp
xchg
xchg
in
insb
sbbl
addb
das
pop
lahf
cmpsl
mov
rclb
insb
out
je
jle
adc
ljmp
add
and
je
test
fldl
loope
sbb
scas
xor
out
add
lock
and
add
dec
pop
jbe
insl
loope
sub
lret
mov
into
xchg
outsb
ret
std
jg
or
addr16
insl
mov
sahf
and
cmpsl
inc
or
jmp
aam
sahf
ficoml
loopne
adc
cmpsl
lret
xchg
cmp
mov
in
lret
dec
xchg
cwtl
pop
jecxz
in
mov
adc
lock
sbb
cld
lds
es
add
and
sahf
push
cld
xchg
jnp
sti
repz
xchg
pusha
aaa
lods
out
pop
nop
xor
icebp
xchg
cmp
gs
mov
jp
dec
cmp
addr16
mov
cmp
das
pop
cmc
dec
arpl
or
mov
data16
popf
sbb
out
push
in
ret
pushf
xor
mov
push
mov
or
in
ss
cmpl
rcll
mov
in
push
orb
rorl
divb
sub
cmp
inc
push
adc
sbb
push
mov
fcmovne
dec
iret
push
lret
loope
pop
in
in
jae
scas
jp
pop
or
fcmove
cltd
cmpsb
jb
and
add
scas
add
pushf
fdivs
popa
stos
les
adc
aaa
mov
mov
lods
jecxz,pt
loop
es
ljmp
dec
fists
mov
pop
imul
cwtl
mov
ficomps
iret
inc
movsb
in
xor
in
inc
mov
inc
cs
repz
sbb
enter
arpl
ds
stc
ret
push
mov
fisttpl
push
dec
into
call
jge
jp
clc
cltd
mov
xor
gs
fnstenv
and
cmp
mov
in
sub
mov
aas
dec
outsl
add
pop
icebp
adc
adcb
nop
inc
in
arpl
cld
ror
bound
aam
outsl
jo
dec
jo
out
adcl
pop
pushf
es
mov
lret
mov
shrb
push
cmp
pop
fmuls
popf
pusha
aam
mov
dec
mov
lret
xor
inc
popf
lods
addr16
fs
jne
pushf
xchg
push
add
and
idivl
mov
pop
mov
fisttpll
bound
popa
cmpsb
aam
loope
sbb
push
addb
jo
das
pop
jbe
mov
repnz
scas
lods
movsl
jo
lret
ja
add
xchg
repz
cwtl
xchg
add
cmp
addr16
lock
cmp
cli
jl
add
vmwrite
cmpsl
testb
push
nop
mov
les
fiaddl
or
loopne
pop
jle
add
pop
movsb
pusha
pop
daa
or
push
ljmp
push
push
outsb
leave
popf
inc
dec
lods
sar
insl
jbe
mov
xlat
subl
mov
cmpsl
leave
sbb
xor
stc
or
add
aaa
inc
adc
xor
out
dec
icebp
insl
aaa
out
pusha
sbb
es
in
shll
xlat
xchg
push
cld
inc
lcall
fcomip
xchg
cs
adc
mov
mov
xor
outsb
out
xlat
xor
sti
mov
jmp
pop
inc
and
insl
int
cmc
shrl
pop
les
mov
lcall
repnz
ja
pop
push
gs
push
and
out
mov
and
fwait
adc
imul
sub
adc
mov
daa
cli
mov
dec
das
pop
xchg
loopne
lods
sub
ds
pop
adcb
cld
inc
cmp
dec
xrelease
lods
lret
mov
loop
sbb
sahf
push
push
xchg
or
fsubp
mov
mov
rcll
xchg
add
das
rcl
and
jl
gs
pop
sbb
pop
je
push
push
sbb
lret
loope
pop
test
lds
dec
es
icebp
push
xorb
jae
jne
movsl
or
add
add
imul
fisubl
orb
xchg
jb
jns
in
mov
adc
xchg
arpl
inc
out
in
dec
imul
jecxz
arpl
mulb
xchg
cvtpi2ps
inc
xor
ds
jp
cmpsl
shrl
xor
push
jl
mov
dec
xlat
das
aad
icebp
icebp
fdiv
loope
mov
insb
and
mov
out
and
cld
lods
dec
jg
daa
out
mov
sbb
fcompl
shl
ds
xor
rclb
lea
adc
push
jns
outsl
inc
sub
inc
movsl
lcall
adc
shlb
pop
gs
or
out
pop
adc
dec
jmp
pop
or
adc
dec
inc
cli
movsl
fdivp
mov
xchg
lds
push
mov
idivb
xchg
out
push
adc
iret
xchg
int
out
hlt
dec
lahf
jmp
mov
pop
movsb
or
test
sbb
leave
in
xchg
loopne
push
xlat
push
jnp
push
push
sbb
in
cmp
push
xchg
push
push
in
stc
push
movsb
int
dec
rcrl
dec
ljmp
repz
and
outsl
cmp
push
lahf
mov
xor
sub
cmpsl
aaa
cltd
cwtl
push
xchg
scas
jb
jl
call
fadds
scas
add
push
negb
hlt
adc
cmp
and
jge
ret
orb
fcomps
popf
lea
jo
mov
fwait
inc
lods
dec
cmp
sbb
inc
or
sub
pop
or
je
lret
push
jbe
mov
xchg
icebp
cli
repnz
mov
mov
xor
push
popf
mov
in
push
out
lods
repz
add
jmp
adc
stos
xchg
mov
cmpsl
push
scas
xchg
psadbw
mov
mov
lcall
cmp
mov
mov
scas
mov
mov
inc
aas
lret
mov
lods
cli
sub
mov
push
into
cmp
xchg
pop
xchg
cltd
std
les
fmull
ss
mov
fcomps
add
test
test
lahf
pusha
cli
popl
pop
mov
scas
push
adc
xchg
std
test
xchg
nop
jecxz
aam
sarb
xor
xchg
divl
jns
nop
mov
outsl
loopne
or
aaa
lret
sub
cmc
insb
mov
dec
xlat
pop
in
insl
cmp
mov
outsl
in
lods
xlat
call
loopne
cmp
adc
jns
cmp
dec
xchg
into
les
das
cmp
ret
jle
out
mov
fnstsw
repnz
xchg
inc
adc
out
cwtl
imulb
negl
neg
fisubs
lods
sub
and
iret
ret
lds
out
in
jmp
movsb
test
lret
repnz
or
in
sub
cld
aam
int3
data16
and
fmul
cld
out
popf
insb
cld
pop
sub
pop
inc
lock
jnp
xor
xor
mov
inc
mov
add
fcomps
popf
je
mov
push
out
rclb
mov
sti
jbe
icebp
sbb
mov
mov
and
mov
shll
or
out
outsb
jno
and
cmp
sub
or
mov
ficoml
ret
shrl
je
lahf
scas
out
adc
xor
xor
xchg
jmp
mov
push
shrb
inc
xchg
fnstenv
sbb
xchg
pop
mov
popf
mov
jns
cmp
dec
inc
pop
stos
ja
jns
leave
cli
ja
jns
add
mov
icebp
xor
inc
or
jns
push
in
mov
adc
out
or
les
jle
mov
push
loopne,pn
xor
cmp
dec
or
mov
repnz
js
push
cmp
popf
xchg
movsb
adc
jle
add
mov
les
fsubrl
sbb
adc
mov
sbb
and
jno
pop
jnp
out
cmp
cmp
xorl
shl
repz
movsb
mov
rcll
rdmsr
sub
outsb
lret
cltd
jge
int
mov
inc
mov
std
mov
movsb
js
pop
repz
pushf
xchg
loop
ja
mov
cmp
sar
lods
cli
xchg
dec
test
sti
mov
cli
in
xor
outsl
push
sti
add
ja
clc
jg
je
shrb
fdivs
popf
scas
fwait
adc
movsl
outsl
mov
mov
pushf
and
fidivl
and
aam
add
lret
mov
dec
jmp
fdivrp
mov
ss
sahf
stc
xchg
dec
arpl
cld
jecxz
and
sub
xchg
xor
mov
xorb
icebp
daa
xchg
cmc
mov
xchg
ja
jnp
cmp
mov
or
push
pop
outsl
into
sahf
in
mov
ret
push
fsts
jo
cs
jne
sub
cmpsb
jno
jbe
add
pop
adc
mov
decl
add
pushl
dec
outsb
cmp
idivb
adc
inc
and
call
cli
mov
xchg
pop
into
pop
mov
xchg
dec
adc
push
xor
cmpb
fs
sub
sub
xchg
lar
sbb
pop
xor
repnz
mov
cmpsb
jno
mov
in
inc
mov
lock
mov
cmpsl
mov
out
into
insb
adc
or
shl
add
mov
pop
bound
mov
icebp
xchg
push
and
pop
sub
cmp
loopne
stos
outsb
mov
cmp
insl
xlat
int
movsl
xlat
add
and
cwtl
movb
dec
add
mov
out
xchg
lock
pop
call
mov
xor
xchg
fwait
xchg
inc
inc
sbb
adc
lods
adc
ss
test
lds
sub
adc
lret
lahf
add
cmp
and
cmp
jecxz
lock
xor
ja
xchg
bound
leave
and
sub
icebp
sub
add
adc
sahf
leave
nop
lret
pop
jae
adc
add
ret
daa
jb
xor
xchg
in
push
cmp
adc
stc
add
mov
dec
xor
imul
jnp
in
cld
rcrb
mov
mov
cmp
sub
mov
out
mov
leave
mov
xchg
pop
rcl
xchg
jb
inc
fs
cld
lcall
sub
push
call
inc
fiadds
sbb
sub
sti
aaa
push
or
imul
dec
pop
push
pushl
in
mov
bound
int3
insl
in
xchg
shrb
test
jg
aas
pop
lods
mov
cs
sbb
les
adc
sahf
test
jo
je
mov
test
mov
enter
cmc
mov
in
pop
test
sbb
mov
shll
add
shl
out
mov
fnstenv
clc
fbstp
loop
cmp
pop
outsl
cmp
mov
xchg
fistpl
xchg
mov
xor
daa
rclb
repz
xor
mov
mov
cmp
aaa
xchg
push
in
daa
popf
inc
mov
iret
es
ljmp
pop
push
lahf
pop
pushf
testl
jne
jns
repz
adc
jge
sub
adc
and
inc
lcall
or
dec
test
add
mov
loopne
mov
inc
jno
inc
pop
xchg
popa
popa
hlt
cmp
xchg
cltd
imul
popa
add
popf
fcoms
sub
jo
lods
jle
out
adc
mov
cltd
mov
imul
cmp
scas
mov
iret
pop
testl
fistpll
or
movsb
adc
daa
dec
and
inc
out
adc
xor
sub
mov
fdivrl
jge
pop
mov
jmp
pop
mov
mov
add
xchg
stc
ds
lds
aaa
leave
and
xchg
gs
insl
aad
push
jl
inc
fs
or
clc
and
mov
scas
sub
and
lock
lret
jns
cmpsl
incb
add
daa
insb
addr16
js
pop
das
movsl
push
lods
or
jmp
xchg
pushf
test
shrb
sbb
and
adc
leave
ss
push
cmp
dec
js
cmp
push
lea
adc
xchg
iret
xor
fsubrp
ja
mov
xchg
sub
cs
cmc
imul
and
lods
aas
jnp
mov
pop
cmpsl
sub
mov
pop
sub
adc
pop
add
repnz
cmp
test
inc
jno
incl
xor
mov
sub
jg
sti
add
mov
xor
lret
xchg
sbb
push
fdivs
or
insb
pop
in
mov
sahf
mov
out
cmpsb
jns
clc
xchg
aaa
adc
sub
push
test
fldenv
js
mov
fnstsw
jp
sbb
mov
push
jecxz
shl
ljmp
ss
mov
lea
pop
pop
lret
fdivp
outsl
in
fwait
rcrl
aad
xabort
pop
push
push
call
push
jmp
xor
add
sar
sub
mov
loop
int
leave
jns
mov
pop
sarl
mov
inc
je
dec
rcl
adcb
fidivrs
add
adc
or
mov
pop
nop
mov
mov
jbe
mov
mov
xchg
and
pop
xor
jae
enter
push
insl
cmp
fldcw
fsub
andb
ljmp
jb
pop
loope
loopne
dec
adc
imul
dec
cmp
hlt
aaa
lahf
nop
ja
into
rorl
fbld
mov
lods
adc
mov
and
and
cld
lret
and
inc
sub
aam
pushf
sub
mov
fistps
mov
cmp
rcl
sbb
push
fidivrs
xor
lea
cld
cmp
sahf
leave
and
sub
aad
pusha
cmp
cwtl
add
sub
or
or
in
and
inc
pop
push
xor
pop
adcb
cltd
ret
shld
dec
jno
mov
hlt
xorl
in
out
dec
sub
cmpb
pop
sbb
inc
rcrl
inc
add
dec
xchg
or
roll
lret
lods
sahf
sub
mov
das
push
leave
xor
adc
adc
stos
cmpsb
sti
bnd
jmp
adc
movsl
lock
jnp
jmp
shll
icebp
in
xchg
hlt
test
ret
or
sbb
lea
test
loop
cmpsl
add
inc
stc
rorl
test
scas
ljmp
sti
push
pop
mov
pop
jnp
subl
into
cmpsl
mov
jae
shrb
sahf
mov
xchg
jmp
xchg
or
sbb
jecxz
cmp
sub
popa
and
push
rcrb
ss
push
and
jae
popa
addr16
mov
aaa
push
movsb
popf
mov
lea
pop
pop
sbb
aas
and
adc
xor
mov
mov
loope
fildll
fists
sub
roll
out
mov
aas
push
setnp
xchg
lret
dec
pop
je
xchg
daa
outsb
rcll
shlb
pop
dec
add
dec
mov
jae
sub
repz
push
add
aaa
clc
loopne
mov
pop
mov
push
jbe
sub
lods
lea
ja
fwait
test
out
lds
mov
outsl
imul
orb
dec
test
int3
and
enter
ss
dec
sub
xchg
sub
dec
rdtsc
inc
add
adc
and
mov
jns
cwtl
adc
mov
sbb
xor
sub
movsl
mov
sbb
dec
lahf
mov
out
int3
or
sahf
repnz
dec
movsl
or
movsl
test
das
sbb
mov
lds
fwait
mov
and
shlb
aad
mov
mov
cmp
pushf
lcall
push
cmpsb
mov
scas
mov
rol
add
hlt
in
lcall
or
dec
inc
clc
and
movsb
xchg
xchg
fnstenv
sbb
lock
mov
outsl
les
daa
test
adc
sub
popa
jl
push
jbe
sbbl
inc
lea
rcll
xchg
jo
js
and
fld
dec
stos
cmp
scas
cmp
adc
testl
mov
mov
ljmp
je
scas
ds
lock
shlb
xor
movsb
daa
outsl
mov
add
lock
nop
arpl
lret
cmp
call
jmp
xor
dec
int3
sub
push
cmp
sbb
fsubl
movsl
cmp
inc
cmp
fstps
fimull
inc
mov
rclb
inc
test
movsl
cmc
or
inc
dec
jmp
mov
jmp
rep
xchg
andl
stos
push
scas
xchg
mov
rcl
idivl
inc
inc
call
in
sbb
xchg
xor
mov
inc
jg
into
inc
andl
in
popa
cli
push
or
push
sbb
xchg
clc
jae
or
dec
call
mov
sub
sub
jge
shr
add
xor
lea
int3
pop
sbb
ljmp
sarb
cmp
mov
cwtl
sbb
and
and
mov
cli
into
jp
nop
inc
add
fisttpl
pop
cs
das
popf
ds
xlat
pop
insl
cmc
dec
ja
inc
xor
ljmp
xchg
cli
mov
or
mov
repz
mov
inc
and
inc
ret
mov
and
leave
aaa
jnp
int3
pop
add
int3
cmp
es
mov
cli
dec
mov
inc
sbb
shrb
es
nop
pop
xchg
test
jno
cmpsb
lret
xlat
pop
inc
pop
mov
fsubrl
loopne
movsl
hlt
mov
cmpsb
inc
pop
cli
jle
jmp
imul
bound
add
loop
sarb
jno
mov
mov
push
outsl
ds
and
fists
mov
sbb
insb
stos
mov
jbe
xchg
jmp
addr16
jge
jmp
push
lcall
sbb
sarl
loope
pop
aas
loopne
pop
ficoml
hlt
pop
xor
xor
sub
mov
push
cmp
mov
mov
mov
xchg
shl
xchg
mov
mov
xorl
loop
cltd
fwait
mov
clc
stos
dec
repnz
sbb
rclb
inc
enter
test
cmp
push
pop
dec
lret
cmp
out
out
insb
stos
mov
lret
inc
add
fdivr
push
test
or
ret
stos
add
and
xor
xor
add
outsb
mov
js
xchg
orl
mov
adc
ror
mov
xchg
push
push
ds
and
test
fadds
cmpl
ret
xchg
push
scas
lods
sahf
jb
mov
mov
addr16
dec
xchg
jbe
les
mov
xor
rcr
pop
mov
or
xchg
sbb
mov
jmp
repz
ja
sub
ss
cmp
subps
mov
mov
xor
imulb
lret
mov
nop
data16
dec
dec
pop
inc
cmc
adc
rorl
fsubrl
movsl
or
fists
mov
inc
mov
or
push
inc
into
adc
fimull
pop
cwtl
pusha
mov
push
lds
les
dec
inc
outsl
add
in
lea
ffree
mov
sti
insl
cwtl
push
daa
mov
push
push
aas
in
mov
insb
add
and
sub
or
cmc
pop
popa
mov
call
sahf
lcall
js
jecxz
pop
fldenv
sbb
shlb
mov
fstpt
push
push
outsl
jno
loope
div
jbe
xchg
cltd
push
insl
es
push
cld
je
mov
ljmp
sbb
aaa
ret
out
sbb
outsl
ret
inc
mov
ret
push
mull
ljmp
or
mov
jae
xor
inc
inc
push
jne
mov
jne
jns
test
push
xchg
push
adc
xor
aad
pop
in
popf
ud0
cmp
fbld
fmul
add
repz
lahf
rcr
jno
or
roll
adcb
std
mov
pop
adcb
inc
je
pop
push
push
adc
push
into
or
repz
std
mov
dec
rorb
int3
dec
pop
pop
xchg
adc
jge
jns
adc
cmp
cli
mov
cmc
ret
shrl
sub
mov
pop
stos
test
scas
lahf
scas
cmp
outsb
adc
or
in
push
pop
pop
push
sbb
dec
jge
push
lea
mov
mov
aam
test
sub
inc
jne
out
out
add
mov
pop
adc
mov
pop
and
repnz
sub
insl
dec
outsl
add
icebp
push
fldl
scas
adc
pop
mov
dec
or
test
lahf
mov
pop
jmp
cmpsb
xor
add
sti
xlat
rolb
xor
jno
hlt
dec
sbb
jnp
mov
add
lods
stos
stc
mov
inc
xchg
xor
popa
jo
outsb
lahf
cmp
add
outsl
sahf
sub
fwait
xor
scas
mov
cmp
pop
mov
loope
stos
aas
jns
adc
cmc
repnz
xor
pop
repz
lcall
xchg
mov
int3
adc
pop
cld
out
pop
adc
dec
sbb
push
inc
pop
and
lods
adc
movb
mov
adc
gs
mov
aaa
das
enter
sub
test
cmpsb
adc
iret
dec
rcrl
sbb
sarb
ret
fildl
mov
lods
dec
jb
enter
fucomi
pcmpgtd
out
or
lea
imul
jnp
out
mov
aas
mov
dec
aaa
mov
pop
mov
lret
sbb
cmpsb
adc
out
shrl
inc
mov
mov
add
iret
adc
mov
push
daa
mov
pop
vsqrtpd
xchg
inc
lahf
data16
xchg
movsl
out
in
lea
loope
push
insb
lret
cmpsb
ret
push
or
and
xchg
leave
shrb
pop
mulb
mov
mov
and
fcomps
mov
jmp
push
arpl
jns
ficomps
cmp
ja
mov
push
sbb
fdivs
pop
xor
sbb
jae
scas
subb
call
or
mov
xchg
les
xor
std
cwtl
aaa
add
cli
jecxz
cs
xchg
sbb
pusha
xor
insb
mov
pop
fbld
bnd
out
sbb
push
mov
outsb
int
xchg
push
pop
dec
shl
popa
pop
rorl
jecxz
dec
push
sub
mov
inc
ljmp
push
je
cs
in
pop
imul
dec
mov
pop
jmp
out
jg
sub
pop
gs
cld
dec
xchg
sarl
and
ja
aad
xchg
xlat
adc
int3
push
push
data16
cltd
in
jae
mov
cmp
xchg
jl
mov
and
pop
out
fiaddl
sub
sub
sbb
xchg
sub
pop
jae
sbb
cwtl
adc
push
mov
loop
push
mov
nop
sbb
cmpsl
push
jne
imul
mov
fs
jo
push
testl
mov
js
call
mov
mov
push
jb
shll
dec
and
sahf
enter
dec
mov
add
out
imul
xchg
mov
aaa
ss
scas
and
cmp
push
jnp
pushf
pop
jmp
scas
inc
and
test
cwtl
cs
pop
gs
loope
lret
and
mulb
test
pop
popf
aaa
push
imul
xlat
dec
dec
add
mov
icebp
aaa
movsb
lock
ljmp
dec
out
stc
sub
xor
ss
jecxz
out
cli
movhps
rcll
nop
jmp
dec
imul
inc
jmp
cld
outsl
adc
jne
iret
xchg
inc
jnp
in
scas
adc
inc
stos
adc
adc
insb
sub
mov
imul
sarb
fdiv
enter
das
xchg
xchg
or
mov
pop
shlb
cld
inc
push
je
popf
cld
aad
cmpl
aad
adc
cmp
mov
mov
fimull
loope
lahf
mov
mov
std
push
pop
test
outsb
inc
outsb
sbb
dec
fimull
add
dec
fs
movsl
pop
cwtl
add
add
dec
push
pop
inc
xor
jle
lods
rcl
xchg
sbb
push
adc
add
jno
pop
fs
fistps
push
orb
inc
adc
imul
mov
dec
mov
jns
add
ret
iret
xchg
sti
fildll
lahf
adc
cmp
dec
or
test
loopne
mov
sbb
jmp
fsubrl
xchg
pushf
sbb
bound
ret
imul
out
lea
push
cs
das
xchg
sbb
in
jnp
dec
lret
outsb
das
inc
andl
sub
pop
lahf
adc
ret
mov
adc
mov
scas
cmpsb
inc
mov
andb
xchg
mov
mov
lahf
out
inc
lahf
dec
js
ljmp
push
mov
outsb
repz
movsbl
xor
test
int
mov
cmc
fistpll
adc
dec
leave
out
aaa
out
mov
sarb
cld
ljmp
negl
jne
lods
mov
xor
dec
bound
scas
cmp
popa
sbb
je
shll
jecxz
mov
stc
dec
data16
dec
mov
cmp
pop
insb
or
fidivrl
xor
push
mov
in
fsub
ret
push
test
push
mov
mov
inc
or
lcall
sub
sbb
cmp
jg
fldl
or
iret
adc
ljmp
xchg
ljmp
sub
and
sbb
pop
mov
inc
xlat
jo
xchg
inc
sub
shlb
lret
jns
imul
cmp
xchg
lret
add
push
mov
icebp
xchg
xor
mov
push
ds
xchg
pop
mov
mov
and
adc
lret
pop
adc
sbb
push
pop
cmp
jg
ds
push
jg
imul
adc
push
int
into
in
sub
mov
dec
sub
push
loop
and
xor
jnp,pt
jp
jb
mov
sbb
mov
out
dec
mov
loope
sub
cmp
jnp
jle
xchg
sub
push
and
dec
xchg
js
jno
mov
cld
mov
clc
lahf
xchg
dec
mov
jb
cmp
sti
jno
add
shlb
scas
int3
and
xchg
daa
stos
call
cltd
mov
cmp
ret
arpl
or
jp
xchg
jmp
les
sbb
out
sub
out
jo
cld
xor
pop
lahf
scas
psllq
mov
sub
mov
adc
mull
ja
mov
repz
pop
addb
ss
imull
push
dec
cmp
or
xor
stc
clc
mov
sbb
adc
dec
ds
dec
and
fdivl
inc
jp
bound
dec
pop
into
mov
pop
and
leave
sbb
scas
xor
xchg
push
mov
push
jg
leave
nop
icebp
das
jecxz
js
sarl
fimuls
rol
cli
mov
sbb
or
cmpsl
pop
mov
mov
and
scas
mov
mov
add
cmpsl
xor
mov
push
lods
testb
sub
arpl
mov
jl
mov
sbbb
test
mov
dec
ret
mov
fstpl
popa
negl
mov
pop
cltd
sbb
lock
sahf
jl
out
lods
cltd
pop
scas
stc
sub
pop
add
pop
cmpsl
outsl
stc
sbb
testb
mov
ret
popf
sahf
push
jo
test
lods
cltd
xor
pop
mov
sbb
xor
pop
movl
mov
mov
rorb
sbb
cmpsb
enter
iret
xchg
sub
lods
push
popa
jo
sti
movsb
mov
ret
sbb
test
int
xchg
pop
push
shlb
and
dec
jbe
mov
mov
rclb
inc
mov
out
loope
sub
cmp
lds
outsl
jecxz
insb
pop
les
xor
jbe
sahf
fwait
aas
cmp
lods
pop
push
cmp
cld
jge
dec
out
add
sahf
lds
pop
dec
jp
pushf
push
fwait
sub
test
int3
xor
dec
push
push
mov
xor
aas
lea
pusha
pop
jbe
jae
mov
in
fists
mov
push
push
imul
push
ljmp
sti
divl
fidivrs
cli
mov
aas
xchg
nop
sub
ja
xor
ret
mov
loope
or
xchg
ja
ljmp
or
test
je
adc
test
in
mov
mov
icebp
fldenv
mov
xchg
mov
mov
jp
fstpt
dec
int3
mov
pop
js
inc
idivb
or
sbb
orb
xlat
les
add
leave
add
in
push
add
pop
mulb
xorl
fabs
mov
orb
pop
outsb
xchg
xchg
sub
out
pop
push
mov
inc
shrb
enter
add
lret
clc
jp
cmp
imul
adc
je
xchg
xchg
adc
outsb
fimuls
aad
in
xor
into
insl
bound
mov
loop
rcrl
pop
ds
push
mov
push
pop
add
mov
or
orl
push
imul
outsl
mov
xchg
movsl
subl
aad
dec
mov
fadds
push
mov
cmpsb
rcr
jns
pop
cwtl
es
pusha
pop
mov
das
sub
lea
push
xor
and
mov
into
jbe
out
lahf
mov
sbb
leave
int
mov
dec
test
into
out
add
pop
mov
sbb
adc
mov
adc
clc
mov
fists
sbb
push
push
dec
adc
adc
ljmp
les
lds
in
dec
dec
dec
pop
jnp
inc
jmp
add
add
mov
pop
lcall
sub
dec
cltd
cld
out
adc
jo
ret
outsb
mov
xchg
xlat
push
sub
or
add
icebp
push
imul
push
mov
mov
dec
repz
cmp
mov
pop
sahf
mov
fbld
mov
xlat
pop
sbb
dec
cltd
repz
or
loop
or
xor
mov
add
push
push
push
xorb
scas
outsb
repz
mov
shrb
mov
cld
cmp
jb
sbb
pop
pop
sub
mov
loope
jge
ret
and
cli
je
scas
and
jbe
int3
mov
add
arpl
mov
cmp
dec
shlb
lds
push
push
mov
cmp
lds
lods
jg
and
data16
xlat
add
testl
insb
aad
push
mov
clc
movsb
push
fldenv
clc
imul
push
scas
fiaddl
lds
sbb
data16
call
dec
les
daa
xor
push
imul
ljmp
mov
in
shl
mov
sub
stos
fwait
mov
sbb
sub
add
jne
or
in
pop
jae
push
lods
xchg
iret
js
sub
jl
adc
in
mov
lcall
dec
pop
fbstp
mov
cmp
inc
out
xor
stc
xor
xchg
jno
in
mulb
subb
sbb
nop
pusha
aam
xor
mov
dec
inc
ficomps
sbb
stos
stc
mov
xchg
xor
out
adc
pop
mov
into
out
inc
adcb
adc
mov
inc
add
sbb
add
xor
mov
push
xchg
push
cmc
lahf
mov
ja
xor
test
jp
dec
push
out
fdivrl
ljmp
push
mov
pop
sbb
lcall
sub
or
sbb
mov
dec
xlat
loope
popw
cs
andb
mov
lcall
add
sbbl
jp
cmc
iret
aaa
scas
mov
pop
add
frndint
push
outsl
cmp
inc
in
cwtl
xchg
push
xchg
rol
aas
inc
adc
xor
dec
dec
push
jmp
lds
test
loope
andb
mov
inc
jo
cwtl
mov
adc
in
mov
repnz
or
pop
mov
adc
pop
cmpb
adc
inc
lret
pop
lds
mov
adc
mov
fsts
push
clc
ja
shlb
sahf
decl
adc
inc
mov
jmp
jo
pop
push
testl
movsb
hlt
and
cs
push
sahf
mov
pop
jg
imul
sbbl
mov
pushf
inc
pop
and
aas
jnp
xchg
xor
dec
test
inc
mov
sbb
xor
sbb
out
stos
add
fdivrs
scas
mov
fsubrl
pop
imul
mov
mov
mov
mov
insb
push
sbb
ja
push
mov
jl
or
loopne
in
push
inc
test
fiaddl
in
inc
test
pop
pop
mov
sub
popf
or
std
scas
push
shl
adc
out
sbb
adc
pushf
enter
dec
test
xchg
inc
add
cmp
sarl
sbb
movsb
data16
mov
adc
push
lcall
jno
jnp
mov
shll
bound
mov
fsubrp
aas
add
insl
inc
inc
mov
loop
lret
faddl
lcall
mov
add
dec
push
sbbl
cmp
push
shll
mov
jo
xchg
aad
imul
scas
dec
scas
mov
cmp
or
cmp
jno
mov
inc
scas
jne
loop
mov
fldcw
mov
addr16
stc
rcl
loopne
call
outsl
xchg
sahf
lret
inc
mov
mov
lock
push
lahf
mov
xchg
stc
out
mov
sbbl
sub
inc
sub
adc
xor
pop
cmpsl
jge
hlt
mov
cmpsl
mov
xchg
popa
arpl
mov
mov
xor
xchg
push
cld
mov
mov
repnz
sub
adc
rolb
stc
pushf
dec
xchg
stos
cmpsl
push
or
cmp
pop
mov
add
fcom
lret
pop
int3
stc
fs
mov
xor
inc
mov
dec
loopne
dec
mov
sub
adc
dec
push
add
sub
arpl
add
push
daa
jnp
nop
pop
es
xchg
mov
dec
jmp
xchg
sbb
scas
cs
ftst
out
add
sbb
mov
std
jg
adc
push
push
cwtl
push
xor
pop
jbe
sahf
std
andb
lods
xlat
outsb
mov
test
les
loope
xchg
jno
das
arpl
mov
mov
imul
dec
lahf
ds
loop
inc
cli
inc
and
cmpsl
movsl
mov
xor
jle
mov
push
mov
cmp
push
in
jmp
inc
cmp
imul
fldl
cmc
imul
push
lds
jmp
pop
mov
aad
aaa
mov
jne
cmp
xchg
mov
lock
and
filds
inc
ret
shlb
clc
pop
subb
xchg
dec
add
cmpb
and
pop
rolb
cmpsl
cld
jge
push
subb
out
xor
nop
stc
jecxz
movl
xchg
pop
sahf
rcrb
cmp
dec
movsl
mov
dec
andl
dec
or
xchg
sub
std
sahf
mov
pop
stos
xchg
lods
inc
rcll
sub
and
lcall
cmp
fstpl
push
test
aad
add
sbbb
scas
or
je
out
jge
add
mov
lahf
lret
mov
dec
push
pop
xor
jns
pop
lea
mov
jne,pt
enter
stc
rorb
adc
sti
xchg
scas
xor
mov
add
rclb
xor
adcl
jp
xorb
jae
inc
mov
jmp
sbb
mov
daa
and
mov
pop
add
repz
mov
mov
push
loop
and
xor
cmp
mov
jns
push
jo
jns
fwait
rcrb
lret
push
scas
inc
sub
in
add
icebp
fistpll
cmpsl
repz
out
or
add
cmc
push
add
repz
push
sbb
lcall
icebp
xor
repz
fistpll
and
pop
adc
dec
push
int
add
adc
adc
and
mov
adc
inc
xchg
add
clc
and
mov
pop
outsl
xchg
mov
mov
rorb
sahf
mov
sbb
fsubrp
flds
nop
jns
das
mov
cmc
mov
push
arpl
cltd
add
lea
xchg
icebp
push
shrw
sub
or
jb
fisubrl
or
arpl
add
sub
lret
rcrl
or
push
jne
inc
stos
adc
cltd
push
mov
imul
icebp
lods
outsb
mov
jecxz
inc
sbb
notb
and
and
orl
pop
sub
xchg
outsb
jo
sti
data16
jno
test
loopne
popf
mov
shl
fistpll
fsubp
bound
mov
cmp
sub
std
es
mov
dec
jmp
pop
rcl
jmp
test
notl
test
or
jmp
xchg
mul
ja
push
mov
lods
jge
imul
lods
cli
stos
rcrl
cmpsl
lahf
pop
loop
das
scas
fcmovnbe
cmp
mov
out
pushf
pop
or
addr16
xlat
pop
ret
subl
mov
out
in
movsb
inc
xor
inc
loopne
cmpsl
lcall
decb
cmc
pop
jns
mov
jbe
jbe
cmpsl
aaa
ret
mov
fstpl
fwait
mov
ja
leave
loope
movsl
add
pop
push
ret
ficomps
mov
adc
sub
pop
pop
adc
adc
mov
pop
aas
inc
in
pop
pop
inc
ffreep
lcall
adc
sti
xor
xor
cwtl
sub
adc
mov
filds
fnstcw
and
xor
mov
callw
inc
sub
add
fs
aaa
out
jmp
aaa
outsl
adc
aaa
stc
sbb
mov
psubusw
dec
enter
or
mov
lock
xchg
dec
test
inc
ror
xchg
sub
cli
xor
jae
push
bound
in
ss
mov
pop
push
loope
inc
rcll
outsl
outsb
mov
or
dec
pop
shrl
adc
imul
fs
sub
mov
mov
cli
and
into
push
jnp
mov
test
push
fcmove
xchg
jo
mov
aas
cli
xchg
pop
dec
mov
mov
adc
sbb
andl
add
and
and
lock
lret
dec
daa
sahf
xchg
bound
pop
rcll
out
dec
xor
pop
cmp
lret
xlat
push
test
fcmovnbe
push
repnz
test
in
loop
sarb
push
vcvtss2si
add
mov
cmpsl
nop
add
adc
add
mov
xchg
sti
xchg
xor
push
cwtl
filds
outsb
dec
out
lahf
aaa
xchg
add
mov
and
fidivrs
push
pop
fwait
out
sahf
fwait
lret
xor
pop
fnstenv
cmp
push
jl
dec
es
idiv
xchg
jo
mov
lcall
clc
loopne
subb
push
roll
jl
fidivs
pop
int
inc
ret
push
sti
sub
xor
fldl
push
scas
out
mov
aaa
add
iret
push
shl
adc
daa
in
lods
insl
cmpsb
xor
fs
xchg
push
mov
sbb
mov
mov
pop
mov
jp
dec
cwtl
sti
sbb
jne
pop
cmc
xchg
mov
cmpsb
mov
sarl
lahf
xchg
lock
xor
pop
push
out
push
cmpsb
rcll
pop
sub
std
orl
fcoms
mov
jnp
scas
pushf
out
mov
pop
push
enter
jno
in
lods
sub
mov
and
pop
aas
aam
pop
outsl
popf
or
shrl
aam
repnz
imul
shlb
cmpsl
xor
in
push
lret
in
inc
mov
jb
loopne
ljmp
popf
xor
nop
or
push
xchg
in
ret
adc
sbb
imul
aam
push
push
lahf
movsl
rcrl
loope
pop
and
dec
mov
ds
push
popf
pop
movsl
xor
sbb
aam
dec
push
cmp
jb
mov
lret
fimuls
sbb
xchg
icebp
cmp
imul
in
cmp
xor
scas
mov
ds
inc
mov
fcoml
or
sub
nop
divps
mov
inc
jne
sub
out
sti
dec
addb
pop
out
mov
icebp
lods
xchg
nop
scas
push
jl
cld
push
adc
pop
ss
imul
mov
jp
jp
mov
subb
fucomp
jle
cltd
testl
xlat
in
loop
or
insb
mov
enter
mov
jge
inc
cmpsl
ret
aad
jns
test
roll
rorb
push
filds
fucomip
fdivs
add
add
je
std
mov
push
mov
ss
add
xchg
fidivrs
inc
movsb
movsl
test
xchg
pop
inc
xchg
push
cmpsb
dec
out
push
dec
dec
mov
push
stos
jae
cmp
imul
inc
jp
js
sub
push
scas
xchg
add
test
int3
ds
fnstenv
sbb
arpl
jmp
dec
push
in
mov
pusha
sarl
subl
sbb
mov
mov
inc
test
xor
fcmovnbe
lcall
xchg
outsl
lock
xchg
sbbb
and
xor
mov
addr16
push
bound
push
cmp
loopne
shlb
adc
pop
testb
fimull
insb
dec
shlb
xchg
popa
iret
xor
mov
push
andl
cli
movsl
mov
mov
fs
mov
and
test
xchg
mov
enter
es
ret
mov
mov
jle
adcb
cmp
and
cwtl
movsl
fisubl
dec
cli
dec
jecxz
loopne
call
xor
inc
lock
aaa
mov
scas
lahf
mov
nop
leave
ja
mov
sub
add
vpcmpgtb
popa
and
fisubrs
je
movsb
xor
xor
pop
mov
scas
cltd
jp
data16
out
and
or
mov
out
xchg
or
push
test
cwtl
adc
sub
loop
test
push
xor
pop
inc
jo
test
int
sbbl
mov
cltd
rolb
mov
inc
xchg
outsl
and
outsb
addb
orl
rorb
call
repz
pop
shll
mov
lods
xor
xchg
mov
and
in
inc
mov
xor
xor
xlat
imul
lea
jo
insl
and
push
jl
add
ds
pop
cwtl
and
nop
mov
pop
movsl
ja
and
sahf
jno
imul
andl
xchg
out
pushf
rol
mov
out
jl
jns
mov
mov
rcrl
cmc
xchg
adc
fcoms
test
divb
mov
ss
adc
cmp
roll
jle
shll
aas
sbb
add
xor
sbb
inc
xor
mov
repnz
aad
dec
or
xchg
push
aaa
sub
cmp
in
in
mov
sub
dec
cld
mov
dec
movsl
pop
dec
in
mov
xchg
fsubrs
scas
xor
iret
cmp
fiaddl
outsl
cmp
jae
mov
mov
sbb
xchg
cmp
bound
stos
jno
repz
mov
ja
xchg
aas
out
mov
cmp
adcb
lcall
sbb
ds
mov
or
cmp
sahf
or
jge
sti
sbb
mov
lret
subl
fcompl
fisubs
mov
mov
shlb
dec
pop
push
cld
stos
mov
sbb
shrl
or
xchg
jl
movsl
fdivl
jns
cmp
rol
addr16
arpl
das
pop
adc
scas
jae
mov
stos
cwtl
sub
xchg
out
out
call
jl
fidivrl
mov
adc
imul
cmp
es
shlb
jg
fadds
test
test
dec
jb
push
xchg
lods
or
and
push
or
and
gs
inc
repz
aas
lahf
pop
inc
dec
sbb
mov
and
fxch
inc
push
mov
mov
or
cmp
pop
iret
mov
and
stos
movsl
das
fs
mov
icebp
cmp
jmp
xor
sbb
mov
in
dec
aas
divb
cmpsb
sti
jnp
pop
push
stc
addl
dec
add
cmpsl
lods
movsb
rcrl
data16
mov
mov
add
push
pop
add
push
rclb
push
sbb
popf
mov
outsb
dec
bound
cwtl
vorps
mov
es
dec
or
jbe
cs
lods
mov
jns
leave
aas
pop
adc
je
sub
addr16
stos
out
jo
repz
cld
stc
int3
stc
data16
test
fwait
scas
inc
lcall
ret
dec
fucomi
cmp
in
aad
xor
jo
test
cmp
cmp
pusha
js
je
mov
jp
fsubs
out
add
jne
sub
dec
insl
mov
add
mov
jmp
sub
inc
out
inc
cmp
loope
cmp
stos
pusha
pop
adc
inc
les
aad
in
push
mov
dec
mov
icebp
scas
push
jae
out
pop
jecxz
addl
mov
in
sub
xchg
dec
push
shrb
sub
in
cmp
xchg
test
addr16
mov
aam
push
pushf
adc
loope
mov
jb
mov
je
es
lods
xor
aaa
les
mov
sbb
scas
dec
inc
dec
out
fbstp
sbb
dec
pop
cli
mov
imul
cmpsl
sahf
das
fadd
jle
pop
scas
dec
je
xchg
jae
pop
idivl
subb
mov
lea
cmp
and
scas
jnp
in
and
xchg
push
jno
sbb
jae
sub
repz
data16
adc
add
mov
mov
inc
pop
xorb
subl
popa
push
jo
or
loopne
repnz
cmpsb
and
out
bound
incb
jo
inc
jmp
aaa
add
outsl
sti
cmpsb
repz
test
pop
loop
aad
pop
pop
cld
dec
adc
test
dec
push
push
jns
dec
imul
jb
mov
inc
add
add
outsb
push
out
mov
out
loopne
jo
fsts
push
pop
imul
call
jp
and
adc
outsl
or
gs
inc
xor
mov
inc
mov
js
shrl
dec
mov
cwtl
out
jno
cmc
loope
mov
insb
pop
xor
test
in
shll
outsb
xchg
jns
xchg
notl
loopne
push
lahf
mov
xor
xchg
push
and
ja
push
mov
sub
cli
arpl
pop
pop
push
mov
dec
popf
sbb
iret
leave
xchg
aas
dec
inc
pop
cmpsb
mov
xorb
inc
psubq
mov
push
lods
shll
and
addr16
mov
scas
push
xor
mov
insb
adc
mov
xchg
push
sub
jecxz
adc
daa
xchg
insb
sbb
lcall
cmpsb
fstl
jg
imul
daa
sbb
sbb
cmc
inc
jg
sub
out
rdmsr
lock
test
call
xor
push
icebp
cmp
jmp
scas
fdivs
fsubrl
movsl
in
cmc
pushf
mov
gs
dec
adc
addb
or
out
mov
in
hlt
jnp
xor
cmpsb
shll
outsl
hlt
xor
sbb
std
xchg
je
into
dec
inc
pop
test
stc
and
jmp
out
ret
sub
insl
adc
sub
sbb
and
dec
pop
cs
lret
sbb
xor
or
movsl
sbb
push
sbb
jmp
cltd
out
into
dec
pop
and
clc
push
or
mov
jmp
faddp
mov
and
push
push
cmp
repnz
inc
mov
test
imul
out
retw
mov
cmp
hlt
push
out
in
adc
hlt
arpl
pop
test
cmp
push
into
xor
out
add
mov
cs
and
mov
roll
xchg
fs
stc
push
xor
add
gs
test
pop
ss
idiv
sbb
in
scas
cmp
mov
fistpll
jns
mov
repz
sub
cmc
jns
out
push
mov
or
in
das
pusha
push
cld
xor
cmp
jns
mov
pop
or
jbe
sbb
enter
jecxz
sub
ret
mov
cmp
ret
adc
adc
push
mov
fsubrl
xor
negb
xor
add
repz
in
inc
stos
adc
pop
xor
popf
inc
out
cmp
pop
test
or
je
pop
jg
adc
mov
hlt
aas
fists
pusha
into
into
aam
sub
fs
push
aam
mov
test
xchg
or
add
je
loop
mov
repnz
cld
mov
pop
mov
jge
pop
out
fcomps
in
sub
jmp
dec
int3
std
in
repnz
imull
inc
xor
mov
mov
jg
cmp
mov
push
add
sbb
xchg
loopne
dec
cld
add
ja
xchg
cltd
aaa
add
push
std
and
lods
add
in
aad
mov
or
cmp
hlt
jg
scas
xchg
mov
pop
rol
hlt
loope
testb
jle
pop
js
push
dec
lea
ja
movl
aam
mov
pop
inc
imull
lret
cwtl
or
pop
sbb
pusha
fidivs
pop
fisttpl
push
popa
pop
fildll
jo
gs
push
or
mov
xor
fxch
scas
xor
inc
lcall
dec
cmp
xor
inc
push
and
xchg
cld
jnp
rcll
and
loope
push
mov
mov
test
mov
dec
xor
push
loope
add
push
shll
sbb
arpl
sbb
or
lods
mov
sbb
imul
test
leave
and
adc
cmpsb
jmp
cmp
es
popa
aaa
xchg
out
rcr
dec
fidivl
sub
int
fldcw
mov
push
ja
aad
daa
es
jne
or
pop
dec
repnz
sub
inc
out
mov
loopne
bound
notl
jecxz
hlt
add
sub
pop
jo
pop
loop
add
adc
and
sar
push
xchg
incl
leave
add
cmp
rorb
stos
daa
dec
repz
enter
xor
std
jecxz
inc
cmpb
dec
mov
push
push
sub
jg
or
xor
jns
data16
mov
and
inc
and
test
dec
inc
nop
jne
push
ffreep
cmc
pop
sub
cli
mov
movsb
outsl
andb
adc
out
xorb
fcoms
stos
jmp
inc
mov
scas
loopne
add
frstpm(287
fldenv
push
pop
js
mov
shrb
xlat
cmpl
movl
int3
sub
pop
mov
stc
jge
dec
ficomps
mov
inc
adc
xchg
insb
xchg
lcall
push
pop
mov
add
ret
sar
addr16
loopne
repnz
outsl
pop
test
pop
lret
insl
lock
or
notrack
xchg
out
push
nop
into
xchg
shr
mov
out
xor
loop
jns
xchg
sub
aad
cs
dec
fdivl
mov
insb
inc
mov
fs
or
sbb
lret
cmpl
mov
xchg
bound
mov
dec
add
jo
lret
pop
in
fcompl
jge
push
loopne
xchg
pop
cmp
rorl
arpl
xor
bound
mov
pop
and
push
mov
dec
xor
dec
dec
and
lcall
xchg
jnp
add
and
popf
adc
lret
shr
cmpsl
inc
add
and
inc
mov
add
mov
xor
das
sahf
xchg
mov
aad
sub
fidivl
aad
mov
mov
loop
xchg
inc
cmovs
or
jno
fwait
mov
xor
cli
push
enter
mov
dec
xor
out
test
inc
lahf
movsl
dec
pop
and
dec
cmc
jo
add
mov
pop
dec
jge
pop
js
jmp
mov
inc
call
pushf
mov
pop
scas
mov
mov
loop
lea
sub
ljmp
loopne
push
push
sti
sub
rorb
cmp
sbb
pop
jo
jge
loope
cmp
sbb
mov
and
or
jge
lret
xor
cmp
adc
daa
outsl
lahf
insl
clc
dec
jl
movsb
jp
imul
adc
int
push
addr16
int
js
loopne
movsl
xchg
xor
stc
cmp
nop
mov
cld
rclb
out
loopne
adc
add
ret
lcall
sbb
xchg
sar
sub
lds
pop
mov
shrl
mov
sbb
mov
ja
or
fadds
pop
cmpsb
out
xor
sbb
flds
push
lock
jg
cs
sub
inc
fisubs
fdivp
scas
scas
mov
pop
out
jbe,pt
jo
insb
jno
test
js
repnz
int
pop
scas
hlt
aas
cmp
sbb
sbb
fcoml
out
inc
andb
addr16
mov
fwait
sub
fstl
xchg
out
adc
es
flds
sub
or
dec
sti
fmulp
fwait
lods
and
and
mov
andl
cs
orb
mov
fidivrs
daa
fbld
jp
xchg
enter
pop
mov
sbb
jmp
dec
outsl
iret
lods
or
cs
icebp
mov
xor
es
mov
inc
icebp
adc
test
pop
adc
in
mov
pop
ret
lods
mov
repz
and
cmp
cmp
inc
jl
mov
mov
popa
pop
stos
popa
add
cltd
pop
outsl
dec
and
fnstenv
sbb
lods
mov
cmpsb
xchg
mov
mov
cmpsb
pushf
lods
aad
into
adc
test
xlat
imul
inc
cli
xchg
adc
mov
push
or
lahf
dec
xchg
jne
pop
dec
pop
rclb
xchg
jns
jno
adc
sbb
dec
sbb
mov
test
jb
xchg
clc
in
pop
inc
pop
iret
je
loopne
notb
pop
cltd
notl
cs
push
push
sub
adc
pop
sbb
mov
cli
cmp
fsubl
xchg
and
pop
and
inc
cmp
inc
sbb
repnz
repz
movsb
xchg
mov
push
popa
lods
xor
sbb
sbb
adc
loopne
push
dec
lods
add
loope
into
sub
xchg
pushf
jb
es
dec
push
xor
negl
int3
or
mov
jle
xchg
adc
testl
cmp
pusha
mov
data16
stc
lock
cmp
mov
outsl
gs
js
mov
cmc
dec
sub
shr
jae
cld
int3
jl
rorl
xchg
or
ficomps
mov
or
je
mov
fnstcw
test
jg
pop
nop
or
into
mov
adc
call
les
dec
cmp
imul
xor
stos
mov
hlt
add
push
mov
int3
insb
push
or
inc
stos
jo
push
jecxz
xor
xchg
sbb
stos
loope
aam
pushf
lods
aaa
mov
cmp
lcall
mov
data16
jae
sbb
fsub
and
push
loop
outsb
ret
mov
fcomip
insb
arpl
mov
cmp
gs
out
lods
int3
out
xor
aad
jmp
and
sarb
inc
jmp
outsb
lea
mov
xchg
dec
loop
mov
lret
hlt
addr16
test
cmp
dec
mov
cmp
or
testl
fstps
push
lret
inc
lods
cmp
dec
notl
cli
les
xor
jae
xchg
ss
incb
lcall
push
or
pop
fdivp
std
mov
pop
stos
cmc
adc
xor
add
xchg
incl
jecxz
jo
out
adc
and
shrl
sub
es
add
sti
movsb
movsl
sub
jae
dec
aam
mov
mov
cs
scas
mov
sbb
cmp
pop
add
shlb
movsb
and
push
push
icebp
xor
insb
es
sbb
push
jns
mov
stc
int3
jns
in
add
andb
movsb
mov
js
lret
icebp
xchg
icebp
les
and
jb
daa
sbb
xchg
sbb
sub
cwtl
jmp
inc
mov
inc
daa
sbb
lahf
mov
or
mov
xor
and
shlb
inc
sbb
mov
jmp
gs
insb
mov
mov
cmc
loope
sub
push
fiadds
lret
jne
xchg
cmp
ljmp
mov
or
je
push
pop
fsubrl
mov
shrb
mov
pop
pop
js
push
aaa
addr16
push
and
loopne
lret
aas
mov
imul
add
mov
inc
loopne
ljmp
mov
xor
dec
xchg
push
cmpsb
fdivr
jb
in
pushl
fdivr
and
std
sbb
movsl
mov
adc
fyl2x
inc
sub
scas
xchg
enter
adc
jg
cltd
or
add
nop
adc
js
pop
jae
ficoml
aas
repnz
cmp
xchg
es
xchg
ret
imulb
repnz
outsb
rep
ljmp
jmp
call
jmp
or
xor
gs
sub
sbb
xor
mov
and
ja
push
insl
adc
aam
shlb
cld
inc
loopne
sbbb
push
outsl
mov
inc
ss
xchg
add
mov
std
cmpsb
enter
and
and
sub
sub
lcall
pop
fdivrl
rcll
mov
lea
movsb
xorl
jmp
shll
jmp
adc
cmc
test
add
test
add
cmpsb
mov
aaa
scas
cs
outsl
ds
sub
or
mov
roll
xchg
cmp
pop
fwait
mov
cmp
mov
orps
fcomi
testl
roll
jp
cmpsb
fldenv
in
rcll
aas
and
or
dec
jl
iret
inc
add
push
cmp
leave
repz
sbb
jbe
ja
dec
sbb
loopne
insb
ret
pop
pop
mov
inc
jle
push
mov
jno
pop
orl
inc
stc
das
jo
dec
enter
psrlq
jp
ja
sbb
addb
jbe
std
repz
test
mov
sbb
andb
jb
pop
fcoml
pop
add
or
mov
pop
adc
jmp
sti
mov
pop
repnz
and
or
or
push
enter
mov
mov
cmp
pop
adc
mov
out
sahf
sahf
push
hlt
out
jle
cld
ret
or
lcall
xchg
repz
in
iret
and
or
in
cmp
and
pop
out
shll
push
xor
or
int
jecxz
in
idivl
pop
xor
stos
shl
data16
mov
pop
jbe
pop
dec
xchg
rcll
cmp
adc
out
fsts
test
fcomip
push
dec
push
pop
push
cmp
out
push
mov
jnp
add
addl
jns
cmp
adc
mov
les
test
sti
add
test
sub
out
lret
and
or
in
and
fstl
add
test
pop
xchg
inc
or
push
lods
scas
inc
dec
pop
idivb
cmpsl
mov
mov
cmc
iret
add
xor
or
jno
mov
dec
or
pop
aam
bound
stos
push
mov
and
jno
nop
je
add
ljmp
jb
int3
xlat
or
dec
int3
add
and
or
addr16
cmpsb
scas
fisttpl
xchg
in
mov
push
cmp
mov
mov
mov
xor
xor
sub
fwait
in
jns
push
mov
fnstenv
ret
jbe
xchg
mov
aas
sub
stc
addr16
bound
loopne
mov
rolb
jmp
in
push
sbb
pop
lret
and
pusha
jp
and
sbb
fwait
lds
xor
out
dec
mov
push
mov
adc
jbe
clc
std
jns
add
pop
xchg
fsubs
stc
outsl
imul
lahf
cmp
ficompl
adc
xor
nop
das
gs
mov
shrl
ljmp
push
fs
sub
in
pushf
adc
movsb
inc
daa
aam
ss
inc
rcll
lret
pushf
ss
xor
sbb
xorl
mov
in
jmp
test
cmp
das
xchg
xor
and
imul
in
pop
xchg
pop
mov
adc
scas
jg
mov
xor
and
xor
leave
sti
and
xchg
sbb
and
lods
sahf
push
jp
xor
cmp
xor
fbld
cld
xor
cwtl
pop
xor
imul
mov
rcr
and
sub
testb
mov
sti
aaa
jo
and
rorl
stc
sti
push
hlt
stos
pop
jg
and
sub
mov
xor
fdivrs
xchg
jno
cwtl
pop
je
cmpsb
pusha
cmp
shrb
mov
inc
outsb
popf
lret
mov
lods
adc
icebp
cmp
ss
test
cld
xor
inc
sub
add
aas
fildll
jbe
lock
ja
add
add
std
mov
out
add
arpl
adc
and
dec
xor
cmp
gs
mov
and
repz
sahf
mov
out
xor
dec
xorb
push
ret
mov
and
cli
inc
add
mov
outsl
mov
jle
call
enter
add
jp
mov
out
mov
repnz
dec
mov
pusha
jle
lret
ret
or
stos
vmwrite
pop
mov
clc
shl
and
cmp
imul
dec
ret
cltd
rcrb
mov
lret
addr16
clc
adc
int3
xor
pusha
mov
sbb
adcl
cmpl
pop
mov
push
jb
repz
jne
adc
adc
lahf
mov
or
jbe
jns
add
fsubrl
test
push
es
lcall
fwait
xor
jne
ljmp
gs
sub
inc
fsubrl
es
addl
sbb
out
lret
fcoml
loope
icebp
mov
mov
or
movsl
sub
or
and
and
jns
mov
mov
adc
bound
test
xchg
inc
orl
jne
arpl
push
push
ror
add
or
or
int3
aad
fidivrs
sahf
mov
push
jg
loopne
dec
adc
in
dec
jno
imul
into
jle
lahf
fabs
push
and
mov
cwtl
lahf
ret
and
das
adc
setnp
and
lds
mov
pop
test
pop
mov
pop
xchg
jno
sbb
int3
loope
pop
pop
lret
hlt
dec
push
jle
es
jle
popa
data16
shrb
sub
xchg
add
lret
imul
push
in
mov
xor
sbb
andl
push
xchg
mov
push
in
int3
pop
test
bound
sub
adc
cmp
imull
jl
adc
sahf
lods
sbbl
and
sbbl
jg
sub
or
adc
sub
adc
icebp
fsubr
mov
inc
xor
repnz
push
inc
ljmp
lock
jne
jo
mov
test
ficoml
mov
js
scas
fnstenv
bound
not
test
out
nop
push
imul
dec
push
divb
or
jge
xor
test
outsl
idiv
add
mov
outsb
inc
testl
jmp
dec
cltd
dec
sub
adc
fidivrl
imul
inc
cmp
or
inc
rcll
gs
repz
fistps
outsb
or
add
iret
dec
orl
cmp
ds
out
push
mov
cmp
div
or
sub
jb
loop
adc
sarl
mov
lds
stos
push
xchg
loope
cld
lods
xchg
sti
fnstsw
push
push
jge
and
and
rcrl
ret
dec
dec
popa
out
mov
in
ss
push
insl
in
xor
mov
xchg
pop
in
push
ljmp
and
lds
add
les
lret
sbb
mov
loopne
aas
sbb
ljmp
cwtl
lret
sbbl
sbb
jg
lahf
lret
mov
insb
adc
fsubs
sbb
adc
and
cli
or
mov
arpl
movsb
fcoms
in
xor
jmp
jle
mov
jmp
xchg
mov
loope
sahf
dec
jl
add
pop
popf
push
pop
push
shlb
cmpl
sbb
imul
lods
sbb
dec
mov
pop
fisttpll
je
and
mov
arpl
mov
test
popf
adc
add
add
mov
pushf
xlat
das
loopne
xor
dec
imul
mov
cwtl
sbb
jmp
dec
sub
stos
fdiv
push
push
jp
dec
jno
lock
pop
xor
or
pop
cmp
ja
lcall
nop
dec
add
jb
lock
loopne
in
adc
fdivs
mov
lds
cli
pop
adc
shll
fsubrl
leave
mov
sti
icebp
sti
stc
test
out
mov
sub
inc
mov
xchg
js
cmc
into
clc
rorb
adc
jl
arpl
pop
pushf
loope
jne
jb
mov
mov
cmp
jo
ss
ret
and
or
push
push
lods
jne
sbb
sbb
shrb
lret
or
lock
repnz
pop
mov
cmp
xchg
dec
mov
loope
insl
rorl
je
xchg
sbb
and
jge
cmp
roll
adcb
mov
mov
push
cltd
xor
xor
jge
idivb
mov
xchg
and
rol
nop
shl
mov
hlt
in
push
scas
inc
pop
ljmp
pushf
das
mov
and
lcall
enter
mov
insl
sbb
rol
sti
xor
or
scas
std
fucomp
into
sub
push
add
add
push
lods
inc
cmp
cmp
dec
fmull
xchg
push
stos
test
jb
inc
stos
sbb
and
jge
or
imul
jo
mov
in
add
xor
xor
add
pop
ds
mov
cmp
or
fwait
mov
outsl
push
and
iret
inc
and
jge
mov
add
je
fmuls
ja
cmpl
in
addb
sub
mov
or
push
mov
lds
xor
sub
rcll
sbbl
test
dec
subb
rcll
neg
cmpsl
in
mov
push
add
pop
gs
sahf
or
dec
mov
inc
adc
or
lar
cmp
push
inc
test
cld
adc
aaa
xor
push
jnp
cmp
mov
mov
mov
pop
dec
jle
and
sbb
jbe
imul
imul
adc
icebp
jmp
stos
bound
mov
gs
sbb
mov
jecxz
es
pop
mov
xchg
pop
adc
fisttpll
jnp
push
test
fiadds
mov
sbb
mov
rolb
lock
mov
loopne
cltd
out
adc
jno
shl
insb
xor
mov
pop
dec
push
popa
sub
cmpsb
mov
mov
push
out
mov
jnp
push
fs
aad
imul
filds
and
pop
mov
sbb
mov
jle
aaa
icebp
negb
sub
adc
stc
sub
sbb
or
push
rolb
insl
icebp
pop
aam
cmp
jnp
mov
pop
jae
lds
mov
adc
out
bound
fcoml
mov
jg
xchg
sbb
xchg
mov
sbb
fildll
xchg
sahf
or
fsub
xor
mov
and
aaa
and
outsl
push
cmp
clc
jo
cmp
test
inc
rorb
jle
add
mov
jle
daa
out
mov
push
mov
or
test
adc
ret
adc
sar
lahf
fs
aaa
iret
lds
in
icebp
or
mov
add
cmpsl
cltd
mov
out
cmp
mov
push
and
int3
jmp
mov
and
imul
mov
call
jbe
mov
pop
cli
mov
xchg
mov
xchg
add
xchg
sub
fidivrl
pop
inc
adc
or
add
bound
push
repz
jle
int
lds
inc
movsl
jae,pn
cltd
addr16
pop
and
into
leave
mov
add
sahf
movsb
gs
les
cmp
and
popl
iret
cmp
adc
arpl
pop
mov
jno
lea
test
and
out
shll
out
inc
and
ret
mov
arpl
xchg
fwait
jp
fdivrl
out
push
out
aam
imulb
cmp
int3
dec
cli
shr
dec
cli
mov
jnp
ret
mov
ret
popa
adc
pop
add
loopne
push
sbb
fiadds
in
xor
xor
out
jbe
insl
lahf
jo
add
mov
lret
popl
adc
stc
test
dec
xchg
out
add
scas
cmp
xor
mov
mov
inc
in
and
mov
cmp
jne
jno
xchg
popa
cmp
pop
xchg
movsl
mov
and
imull
inc
xor
xchg
jg
lock
mov
scas
adc
mov
das
fwait
das
stos
mov
dec
fcmovnbe
jmp
mov
add
mov
pop
cmp
xchg
out
stos
xor
xchg
mov
sub
cmp
fsubrp
sub
js
loopne
das
sbb
sub
xor
push
std
mov
int3
js
inc
inc
sub
xor
inc
sub
mov
scas
es
cmp
shrb
add
pusha
push
mov
shrb
xchg
mov
pop
cli
push
repnz
orl
shlb
fadd
sub
insl
inc
dec
movsb
lcall
sub
testb
xchg
mov
stos
test
scas
movsb
cmpsb
negl
sub
sbb
loopne
andl
out
sbb
fwait
mov
sub
add
xchg
dec
xchg
mov
xchg
fsubs
jge
jo
push
fmulp
inc
daa
out
xor
ret
xchg
xchg
xlat
repnz
fs
jbe
fdivrp
sbb
mov
sarb
lods
sub
lods
jbe
shrl
sbb
xchg
mov
insl
xchg
jns
inc
aaa
dec
inc
out
testb
mov
clc
mov
pushf
mov
xor
sub
jae
insb
inc
negl
iret
adc
int
inc
jb
fmul
mov
incb
mov
rcrb
sbb
sub
adc
mov
test
divl
pop
imul
dec
repz
pop
mov
mov
aaa
leave
jae
rorl
lea
ficompl
and
add
loop
dec
sub
push
lock
mov
pop
push
jae
mov
cmp
ret
bnd
or
int3
lret
xchg
push
js
sbb
mull
mov
or
add
push
mov
loope
pop
cmp
nop
push
js
icebp
lock
sub
ret
jne
leave
repnz
mov
repnz
repz
and
sbb
pop
aas
fisttps
xor
adc
imul
or
push
mov
pop
dec
loop
mov
out
nop
imul
loopne
call
icebp
insb
leave
sub
pop
je
hlt
sub
call
shl
mov
fdivr
mov
cmp
sbb
insl
aam
mov
push
std
sub
fisubl
pop
add
mov
ljmp
and
movsb
sub
sahf
push
jecxz
xor
stc
dec
shrl
add
and
xor
pop
cld
and
jle
test
sub
inc
jne
fwait
aaa
mov
mov
jmp
movsl
xor
into
cld
xor
repnz
sub
mov
add
leave
mov
add
fisttpll
movsl
xorl
push
loope
fsts
cmp
lret
popf
push
inc
jae
dec
cmp
je
iret
push
sti
cmp
repz
mov
sbb
fwait
mov
test
js
aam
enter
cwtl
pop
sub
rorb
push
push
inc
xchg
add
pusha
rorb
jno
cmc
ret
inc
xlat
jno
jl
shll
cmc
sti
gs
fstl
sub
mov
mov
mov
cmpsb
xor
out
fldt
and
sbb
mov
fsubrl
aam
jb
int3
cs
cmpsl
mov
cs
stc
adc
xchg
repz
mov
inc
enter
push
rorl
add
in
inc
sbb
push
rcr
imul
mov
repnz
scas
lds
stos
gs
imul
add
sahf
andl
xor
xchg
aas
cli
and
lcall
inc
pop
ljmp
sbb
aad
test
cli
sub
sub
cmpsl
bound
mov
adc
and
in
in
sub
add
adc
dec
mov
mov
or
test
and
xor
sub
jecxz
icebp
je
loop
add
xchg
mov
or
sub
pop
into
mov
mov
pop
je
js
jne
add
adc
adc
rep
fwait
xchg
fldcw
push
ljmp
in
mov
hlt
adc
aas
sub
add
push
jnp
or
sarb
sub
jb
cmp
xor
sahf
sbb
decb
and
xchg
inc
ss
xor
mov
into
cs
mov
lret
pop
xchg
es
or
pop
test
adc
cmpsl
insl
stos
bound
sub
addb
xchg
cmp
test
push
test
stc
clc
inc
mov
mov
push
mov
dec
mov
cmp
add
mov
mov
subb
inc
hlt
push
mov
lock
or
add
sbb
adc
or
mov
addr16
aaa
jp
mov
dec
hlt
and
test
dec
pop
inc
jecxz
mov
int3
inc
push
and
dec
out
cmpsl
jb
test
adc
cmpsb
or
sub
pushf
call
sbb
sbb
push
dec
add
pushf
jmp
adc
jp
fdivs
stos
add
in
imul
arpl
ss
lcall
loope
xchg
jnp
xor
xlat
rcll
inc
pusha
cmpl
jo
jle
sbb
jg
dec
mov
in
jbe
negl
ret
pushf
mov
andb
fwait
cmp
sbb
out
jmp
sub
push
cmp
lret
js
add
into
and
into
mov
repnz
pop
repz
movsl
mov
cli
scas
test
dec
arpl
jmp
mov
xchg
jmp
sub
cmp
mov
mov
aam
imul
movd
mov
cmpl
xor
cmp
mov
push
mov
jecxz
jmp
mov
shlb
xlat
test
rcrb
inc
dec
outsl
push
jmp
push
ffreep
xlat
xor
insb
mov
mov
jo
jne
jno
or
xor
xchg
bound
sarb
jle
and
lods
sub
popa
lds
pop
imul
cmp
outsb
sahf
pop
test
mov
push
and
jge
les
jl
lcall
sbb
inc
push
lcall
arpl
jg
cltd
mov
lock
lret
jo
cwtl
js
rclb
scas
in
loope
jne,pn
push
cmpsb
pop
xor
pop
mov
dec
mov
add
leave
loope
sub
mov
xchg
xlat
sti
pusha
pop
dec
les
sbb
lret
adc
lret
pop
mov
rcll
cmp
adc
pop
stc
dec
inc
std
rclb
idivl
sub
gs
sti
insb
movsb
hlt
cmp
jae
jmp
xor
cmp
test
mov
jns
int3
mov
std
test
add
cmp
cvtps2pi
mov
sahf
mov
cs
push
jg
cmp
xor
in
mov
ret
shrl
sbb
mov
xchg
and
add
mov
xor
lret
fwait
adc
repnz
lret
out
int3
stos
and
addl
movsb
mov
shlb
out
and
push
mov
xor
repz
pop
and
push
in
mov
insl
int
das
iret
adc
std
jmp
imul
pusha
lods
sub
push
lret
dec
xor
fidivl
mov
outsb
jecxz
cli
cmp
out
fimuls
xchg
add
roll
cld
dec
sbb
arpl
lock
jnp
sbb
jge
jns
add
xlat
push
sub
and
fdivl
subl
aas
mov
movl
sbb
xchg
iret
test
mov
mov
movsb
daa
sti
arpl
mov
mov
rol
push
stos
jo
out
cmp
scas
ret
outsl
jl
mov
fimuls
adc
push
int
in
xor
ret
mov
rolb
aam
cs
jmp
pop
loopne
je
inc
cltd
les
aas
mov
mov
ret
insb
adc
outsl
aam
sub
mov
xor
lods
inc
adcl
jns
xor
imul
mov
pop
in
test
jnp
adc
in
mov
and
jle
mov
sbb
outsb
lds
test
je
loopne
push
cltd
roll
sub
insl
aad
ret
mov
jmp
jo
cmp
cmp
ret
sbb
cwtl
or
insb
add
or
cmp
sahf
shr
aam
mov
cltd
inc
inc
sub
and
js
mov
pop
mov
sub
add
or
xchg
je
cmp
frstor
sbb
dec
pushf
cs
sahf
xor
outsb
adc
and
cmp
cmp
imul
jmp
mov
pop
and
out
fadd
out
lods
hlt
dec
in
stos
cs
push
mov
out
mov
push
xchg
sub
adc
jbe
and
jecxz
daa
pop
ret
lret
sub
push
mov
testl
and
sub
jns
stos
loop
add
das
pushl
mov
cmp
cs
out
insl
pop
push
sub
sbb
push
dec
jp
adc
dec
xchg
pushf
js
stc
shll
sub
out
iret
popa
mov
mov
sub
xor
push
push
cmpsb
or
es
aas
push
pusha
roll
test
push
movsl
js
pushf
and
lret
rcll
and
pop
push
add
lock
ds
int3
ret
pop
or
push
int
jle
inc
cmp
enter
and
daa
les
fnstsw
cwtl
sub
shll
mov
loop
leave
sbb
dec
and
les
mov
stos
pop
cmp
aaa
jbe
jmp
mov
xchg
daa
sbb
push
stos
mov
and
pop
mov
xchg
inc
jg
insb
fidivs
ret
mov
sub
fisttpl
adc
push
loopne
mov
jl
add
mov
mov
fdivrs
adc
dec
test
data16
mov
push
adc
sub
sbb
add
cwtl
shl
mov
mov
idiv
stc
and
repnz
pop
adc
jnp
lods
xor
add
jo
dec
pop
in
mov
in
clc
or
jbe
xchg
jns
ljmp
mov
lods
sbb
jl
sbb
xlat
mov
fcmovbe
outsb
push
mov
cwtl
add
cltd
add
ret
cld
lahf
sbb
cli
jnp
push
in
dec
movsb
ss
mov
adc
fmull
loopne
fsubrl
lods
xlat
mov
jae
add
arpl
stos
mov
es
jl
cmp
adc
outsb
popf
hlt
dec
inc
int3
dec
inc
aam
outsl
mov
int
in
push
in
pop
adc
push
mov
jo
mov
sub
dec
loopne
iret
aaa
shr
xchg
pop
lock
sbb
ror
sub
popf
adc
ja
sub
pop
jbe
outsl
out
jge
aas
out
pop
out
push
add
push
sbb
mov
insb
inc
in
arpl
xor
mov
gs
in
pop
pop
rcr
push
loop
push
pop
mov
dec
imul
adc
jae
mov
or
xchg
xchg
fists
lcall
xchg
fcmovbe
shll
fbld
ret
or
and
rol
adc
cmp
dec
call
jns
push
daa
in
jg
inc
cmp
pop
rcrb
in
ret
push
arpl
stos
lcall
lahf
cmp
adc
daa
adc
aam
stos
pop
out
dec
xor
sub
iret
mov
daa
mov
inc
inc
push
sarl
xchg
divl
cmp
and
sbbb
pop
leave
mov
xchg
call
and
cltd
push
repnz
sub
mov
pushf
push
data16
aaa
mov
dec
je
ffree
fdivrs
push
cs
xchg
nop
mov
push
jecxz
cwtl
jg
and
ss
mov
sbb
jmp
loop
dec
dec
sbb
jle
adc
xchg
jae
popa
pop
dec
pop
or
xchg
cmp
rcrl
dec
and
mov
outsl
and
scas
jle
cld
adc
dec
mov
insl
mov
mov
std
pop
sub
dec
ss
dec
daa
jle
aas
mov
pop
daa
rorl
sub
icebp
int
xchg
xor
jb
test
pop
mov
mov
xchg
sahf
xor
jl
inc
cmp
ja
lds
or
cli
sbb
xchg
sbb
jmp
fnstcw
sbb
inc
mov
out
push
fsubp
or
std
cmp
cli
lcall
sbb
icebp
adc
push
dec
sahf
dec
mov
jne
mov
mov
notb
jmp
sahf
mov
inc
sub
xor
test
pusha
xchg
lods
xchg
cmp
sub
xor
xchg
fisubrs
rcrb
leave
out
jg
add
jns
jmp
int3
movsb
out
add
add
inc
shr
xchg
and
insb
mov
sti
adc
ficoms
pop
cmp
adc
data16
outsb
loop
sbb
punpckldq
mov
lret
das
rorb
mov
mov
das
imul
scas
jge
es
jae
adc
push
adc
jnp
push
out
mov
mov
jmp
add
pop
inc
cmp
je
lret
xchg
iret
add
mov
mov
aaa
xchg
xchg
add
in
ljmp
cs
btr
sub
jnp
mov
pop
ljmp
dec
je
das
dec
test
push
cmc
cwtl
sub
les
sti
inc
popa
xor
cmp
iret
aam
or
xchg
xchg
in
cmpsb
add
mov
lods
mov
and
in
outsl
mov
in
pop
sbb
cmpsl
adc
push
dec
je
shlb
call
push
cmpl
push
in
je
fcompl
test
jle
xor
jg
inc
test
js
dec
enter
push
jo
cmpsl
ret
mov
add
das
mov
pop
inc
cld
cld
cmpsb
sub
sti
mov
outsb
mov
xchg
cmpsb
and
sbb
xor
scas
int3
clc
mov
dec
fld
pop
cmpsb
lods
ret
mov
fs
push
jge
push
jno
cmp
dec
stos
inc
retw
scas
ret
add
movups
insb
hlt
das
mov
ds
and
jge
xlat
jno
and
mov
shll
or
sub
arpl
and
sbb
sbb
adc
loop
jl
cmpsb
int3
or
adc
jmp
call
vpsrad
jmp
loope
imul
in
fwait
mov
xchg
add
push
imul
jns
shlb
sub
mov
and
cmpsb
pop
in
fildl
ret
iret
lea
dec
fildl
fldcw
or
in
sbb
ret
sbb
mov
push
popf
out
dec
mov
repz
fstpt
pushw
sub
rcrl
mov
divl
dec
push
jns
mov
fldl
mov
pop
hlt
fs
push
push
sub
push
rorl
dec
xchg
iret
jmp
pop
scas
test
test
mov
repnz
fistps
lea
xor
je
loope
fs
int3
jmp
int
mov
add
mov
mov
pop
sbb
xor
inc
and
xor
shrb
cmc
cltd
jo
jne
xlat
inc
jl
jbe
jnp
frstor
cwtl
mov
mov
add
aam
add
inc
adc
push
test
int
lock
sub
jge
jl
mov
xchg
pop
push
sbb
rorl
xor
leave
push
xlat
pop
call
or
dec
push
jecxz
shlb
fbstp
inc
int3
sbb
scas
push
je
testb
xor
je
inc
rclb
js
fxch
shrb
push
and
aaa
hlt
rcl
jns
xchg
in
pop
inc
mov
push
add
js
aad
dec
pop
push
ss
add
mov
dec
inc
xor
push
bound
mov
adc
jle
fdivrs
cmc
rcl
addb
shlb
les
sub
clc
xchg
and
hlt
mov
mov
adc
lds
cld
or
sarb
imul
mov
out
les
ret
enter
dec
mov
bound
fwait
dec
pusha
cltd
xchg
cmp
fcomps
cmpxchg
pop
imul
insl
outsb
iret
jmp
aas
add
inc
insl
in
aas
sub
out
in
xchg
mov
xor
jns
sbb
xchg
mov
pop
sbb
movsl
mov
push
aas
sbb
repnz
enter
outsb
das
xchg
cmp
mov
sbb
test
inc
lahf
lock
pushf
mov
sbb
arpl
jns
sub
cmp
int3
jecxz
ret
push
xor
iret
iret
push
mov
popf
xchg
mov
sub
inc
roll
movsl
cmc
popa
mov
out
mov
pop
pop
mov
call
xor
lods
xchg
movsl
ljmp
stc
out
int3
mov
adc
fistpl
or
xchg
pusha
popa
mov
insb
and
adc
loope
adc
aaa
jo
loope
cmp
sbb
xor
lret
das
cld
arpl
mov
lret
out
sub
add
dec
mov
push
dec
mov
jbe
daa
mov
imul
into
lcall
mov
push
xchg
cmpsb
js
inc
jno
or
mov
mov
lods
in
mov
fnsave
xchg
mov
fbstp
mov
movsl
add
sbb
jge
pop
mov
sub
adc
icebp
mov
insb
aaa
sahf
outsl
add
sub
js
js
jg
push
scas
insl
ds
mov
push
xchg
add
xor
and
pop
jg
cltd
stos
mov
fmull
fidivl
orb
mov
xchg
repz
add
movsbl
pop
clc
mov
mov
push
inc
das
imul
and
outsl
clc
movlps
mov
sbb
repnz
sbb
or
iret
inc
pop
and
adc
shlb
mov
mov
cmc
test
iret
adc
mov
movsb
ss
and
pop
aad
ljmp
andb
inc
cltd
add
xlat
sbb
fmulp
lods
dec
out
mov
inc
push
jbe
loop
lcall
dec
xchg
aas
xchg
lea
sub
hlt
push
or
pop
mov
bound
add
cmp
scas
add
cmp
and
xor
cmp
or
rolb
add
pop
in
mov
pop
adc
mov
and
sbb
arpl
inc
in
scas
in
adcb
pop
clc
gs
mov
xchg
rorl
cmp
jle
fildll
xor
and
adc
dec
shrb
out
mov
mov
nop
addr16
pop
test
repnz
push
xor
sbb
dec
cmpsb
lea
pop
adc
in
call
and
ror
and
xor
sti
test
mov
sbb
fnstcw
adc
push
jge
or
pop
into
pop
rcrb
pushf
sbb
cmp
pop
insl
cmp
pop
test
sahf
stos
adc
fcmovne
mov
outsl
push
mov
mov
xor
push
cmp
jl
jo
adc
xchg
xchg
mov
jbe
outsb
ret
pop
in
loop
mov
push
adc
ds
cmp
shl
rcll
in
imul
lahf
or
out
jns
push
xchg
stc
or
rcrl
enter
sub
cmp
fadds
and
and
mov
shlb
les
pop
aaa
mov
mov
or
mov
pop
cmpsb
xor
in
sti
sub
cmp
pop
pushf
push
xor
addr16
xchg
xchg
in
test
pop
ss
and
cmp
cmp
jmp
pop
pop
nop
and
shll
cmp
nop
mov
xor
xor
add
cwtl
jne,pt
sti
push
pop
jns
lahf
testb
dec
pop
jnp
add
adc
pop
jb
popa
pop
insl
mov
jo
nop
pop
test
ja
popa
decl
into
aam
pop
in
insl
std
inc
lahf
xchg
iret
dec
inc
bnd
insb
popa
cmp
call
js
adc
inc
push
lahf
mov
or
out
ljmp
icebp
push
jns
and
roll
inc
clc
repnz
pop
fimuls
aas
es
xchg
sahf
stos
inc
or
pop
enter
push
into
and
push
out
mov
lea
ljmp
and
mov
inc
mov
push
sbbb
pop
push
jmp
out
pop
or
adc
mov
add
sbb
bound
jno
cmc
dec
ret
nop
mov
add
or
sub
mov
lock
dec
xchg
iret
and
pushf
imul
fldl
push
cld
lret
dec
imul
cltd
mov
mov
xor
push
fsubl
pop
push
and
mov
movsb
fstl
sti
mov
sbb
and
add
jns
lret
testb
mov
xchg
xor
mov
rolb
ljmp
mov
sub
adc
ja
pop
mov
or
inc
ret
gs
mov
stc
mov
mov
mov
and
out
push
fldt
dec
into
fnsave
dec
cmp
jmp
dec
out
jmp
xor
push
jecxz
clc
fs
jp
out
mov
or
inc
xchg
fwait
ret
and
negl
jnp
jns
sbb
into
mov
push
mov
out
aam
push
fistpl
aad
ret
and
mov
add
jle
imul
ret
push
loopne
test
in
fisttps
imul
or
lds
xchg
adc
shrb
inc
shr
into
inc
and
mov
mov
push
or
loop
xchg
sbb
cmpsl
or
dec
sbbl
ret
aas
jne
es
push
ret
add
xchg
outsl
mov
arpl
cwtl
sbb
insb
shlb
fcmovne
cs
lock
sub
sbbl
pusha
arpl
push
imul
insb
pop
sbb
fucomi
lcall
or
mov
add
imul
aas
roll
shr
sbb
pop
pop
xor
mov
xor
cs
xchg
aam
in
sub
js
or
stos
and
mov
fdivrs
mov
fwait
xor
call
mov
jne
push
test
or
test
sbb
scas
pusha
shl
mov
adcb
arpl
cld
jns
push
in
repnz
cltd
mov
loop
daa
sbb
lcall
or
xor
fstpt
inc
data16
scas
fidivrs
stos
add
mov
push
test
test
roll
adc
in
dec
sbb
cli
xchg
lods
insl
mov
xor
out
add
hlt
imul
inc
je
dec
mov
pop
jnp
push
ds
arpl
xchg
sbb
inc
movsl
pusha
ret
xchg
pop
cltd
sub
mov
xlat
mov
mov
inc
adc
add
dec
push
dec
fisubl
in
cmp
insb
hlt
pop
or
or
frstor
or
inc
sub
xor
lsl
stos
imul
mov
lcall
xchg
pop
mov
loopne
fwait
mov
fs
inc
mov
xor
or
aam
or
cmp
mov
pop
lahf
mov
sti
fwait
lret
and
shlb
xchg
flds
imul
arpl
fmull
cmp
adc
sbb
inc
xchg
ja
sahf
sub
xor
cmp
mov
cmp
mov
sbb
movl
dec
lea
xchg
xchg
iret
stos
test
and
popf
jo
inc
cmp
cmpsb
cmp
mov
out
pop
cmpsb
sbb
lret
outsb
pmaxub
mov
jecxz
movsb
lds
call
jnp
sbb
cli
mov
js
cmp
sbb
or
divb
and
and
clc
xor
iret
inc
dec
daa
dec
pop
jns
outsl
cmpsl
js
iret
add
sbb
xchg
jo
xlat
jo
ficomps
sub
or
fwait
xor
cmp
push
and
and
jl
sbb
adc
add
cmovae
sti
jg
mov
xchg
xor
push
movsl
lahf
push
cwtl
xchg
xchg
jecxz
test
cmp
xor
add
push
push
xchg
jmp
cli
sub
xor
inc
sub
std
mov
insl
push
aaa
ret
xchg
xchg
test
hlt
xor
sub
mov
lock
fldcw
push
cmc
pop
mov
rorl
xor
or
lret
jbe
movsb
divb
fsubrs
push
cmp
sub
inc
movsb
int
clc
add
orb
xchg
ja
add
fimuls
cli
pop
dec
cli
sbb
mov
insl
scas
mov
xchg
push
cmp
int3
pop
add
pop
or
xor
mov
push
jmp
sbb
int
adc
xchg
xchg
jle
data16
leave
mov
sbb
dec
out
jg
add
sbb
mov
bts
mov
inc
push
sub
shlb
rolb
add
pop
into
add
and
lock
test
and
lods
std
stos
inc
push
jge
es
cmp
in
sbb
cmpsl
lahf
dec
mov
xlat
ret
inc
push
mov
and
cmp
cmp
cmp
mov
dec
sbb
ljmp
sbb
andb
jp
out
nop
fwait
cmp
loopne
xchg
dec
out
push
or
mov
inc
lret
mov
mov
sahf
add
out
ljmp
and
int3
inc
les
sub
mov
or
pop
xchg
hlt
subl
mov
pop
dec
mov
cli
add
push
mov
ror
mov
stos
pusha
in
es
shrb
xchg
lods
loop
mov
adc
xchg
roll
jle
movsl
dec
data16
and
inc
in
mov
and
cmp
rclb
adc
loope
xlat
dec
fs
out
xor
xchg
test
jnp
fldcw
das
pushf
ret
je
fsubr
and
aas
push
mov
jp
push
jne
sbb
jmp
pop
xchg
and
mov
mov
in
dec
and
loope
out
jmp
shrb
lock
xor
jmp
leave
clc
inc
pop
mov
xchg
mov
jecxz
out
mov
dec
lock
or
das
pop
les
and
jge
fs
push
push
mov
sbb
push
scas
dec
inc
jae
outsl
mov
cli
pop
fmuls
test
jns
jle
in
data16
add
aad
push
scas
xchg
xor
aad
rcll
insb
imul
xor
push
mov
mov
aas
inc
sbb
xchg
ds
sub
sti
pop
pop
enter
call
push
pop
shrb
mov
jno
rcrb
mov
jno
jns
outsl
xor
sbbl
xor
pop
out
pop
xchg
adc
mov
sub
int
loopne
popa
pop
leave
mov
test
cwtl
aam
sub
sbb
jmp
imull
mov
dec
ds
loope
rcll
andl
dec
mov
scas
je
aas
fst
pop
mov
iret
aas
dec
cmc
sbb
cmpsl
js
mov
jbe
rcrl
cmp
mov
jecxz
ret
loop
cltd
add
daa
push
xchg
sbb
mov
xor
mov
rcrb
rorb
mov
cmp
or
stos
sbb
dec
shrl
shlb
lahf
repz
aaa
sub
mov
in
inc
inc
cli
adc
dec
inc
xor
sub
fcoms
push
mov
fdivrl
mov
xor
mov
mov
jp
mov
mov
inc
sahf
data16
into
inc
ja
shrl
rorb
sbb
int
xchg
push
xor
pop
lods
loopne
fcompl
and
push
jmp
clc
and
sub
xchg
mov
aam
pop
fadd
cmp
orl
jecxz
push
mov
sbbb
push
mov
and
sbb
outsb
xchg
dec
daa
xchg
inc
jnp
rol
mov
push
push
clc
daa
daa
gs
testb
or
dec
cmc
jb
jl
mov
ror
inc
adc
jmp
testl
movsb
inc
cmpsb
and
imul
in
adc
fiaddl
out
aam
rolb
dec
jae
mov
testb
adc
int3
cmp
sahf
fnstsw
ja
push
or
stc
or
mov
bound
cmp
push
scas
jg
lock
mov
mov
je
mov
or
push
mov
fcompl
push
mov
xchg
int3
lcall
xchg
addl
cmp
jbe
or
mov
popf
shlb
pop
int
inc
adc
dec
fbld
inc
mov
push
mov
sub
jmp
pusha
movsl
outsl
sbb
sub
sbb
ljmp
or
pop
movsb
push
and
mov
jmp
js
inc
or
xchg
sbb
enter
dec
in
jnp
gs
mov
ss
adc
mov
inc
inc
sbb
cmpl
adc
scas
push
das
adc
je
xorb
adc
jmp
or
jns
jle
hlt
pop
xor
in
push
aas
adc
jmp
mov
das
test
push
pop
xor
push
adc
test
sbb
cmp
push
cwtl
jle
mov
outsb
lret
fs
xor
aas
mov
mov
andb
add
in
lret
push
dec
cwtl
sub
cltd
sub
rolb
xchg
push
inc
cmp
popf
mul
pop
ret
subl
and
add
aam
xor
cmp
dec
jmp
jmp
adc
push
xor
mov
inc
cmc
jle
sbb
lret
xchg
lods
ss
push
jmp
daa
neg
js
or
xor
inc
xchg
pmaxub
xchg
push
dec
enter
idivb
pop
fldt
or
test
sub
cmpsl
lods
pop
mov
fisttpl
daa
in
sarl
shr
inc
push
in
sbb
out
sbb
pop
xor
lods
push
popa
sub
shl
push
enter
mov
pop
jne
jle
mov
inc
sub
sub
and
jbe
inc
push
and
adc
jno
push
jmp
repnz
and
icebp
cmp
xchg
ret
mov
pop
lods
addl
xor
pop
inc
adc
repnz
mov
and
push
jle
std
and
mov
popf
scas
stos
xor
pop
fnsave
test
sub
push
mov
into
mov
sub
std
mov
in
inc
icebp
imul
adc
cli
dec
pop
cmp
movl
shrl
bound
lahf
sub
adc
pop
mov
xchg
pop
jmp
fstpt
mov
or
shl
mov
pop
fdivs
cmp
dec
inc
push
mov
ljmp
lods
inc
push
mov
jge
adc
jne
pop
mov
and
aad
adc
sbb
lods
sahf
test
mov
push
push
xchg
fcompl
sub
add
xlat
mov
pop
mov
mov
sbb
mov
imull
orb
mov
lea
jecxz
mov
outsl
xor
call
mov
jbe
enter
jmp
mov
sbb
insl
idivb
cld
cmp
cmc
pushf
cmpsb
cmpsl
imul
repz
ljmp
or
sbb
xor
inc
rorl
cmc
adc
sbb
xor
mov
into
aam
or
in
xor
dec
imul
cli
lret
je
rorl
in
mov
sbb
stos
jb
push
out
add
mov
mov
cltd
pop
sbb
out
aaa
inc
insl
mov
pop
lods
cld
sub
ljmp
adc
dec
push
out
push
loope
in
sbb
iret
mov
xchg
sbb
mov
dec
imul
mov
xlat
push
pushf
adcb
divb
jle
jnp
pop
fs
cmp
push
loope
mov
add
fdivp
mov
push
xchg
repnz
movsl
fsubr
test
call
cmp
adc
dec
mov
gs
fwait
push
push
push
xchg
fisttpll
int
sbb
loope
sar
std
xchg
xor
cmpsb
adc
gs
arpl
dec
jle
mov
rcrb
xchg
sti
ljmp
out
jb
mov
lahf
fiadds
cmp
pop
inc
sbb
inc
adc
cltd
or
dec
inc
or
pop
movsl
lcall
sahf
inc
int
insb
mov
imul
add
sahf
inc
imul
dec
paddsw
loop
sbb
xchg
test
arpl
out
mov
lea
jo
rolb
xchg
adc
arpl
pop
adcb
cmp
adc
inc
shrb
shlb
loopne
pop
mov
mov
and
enter
mov
lea
pop
cwtl
lock
pop
mov
xchg
les
into
movsb
ss
pop
and
fstl
int3
dec
enter
leave
inc
pop
xchg
mov
test
xchg
daa
aam
std
jp
adc
jns
popa
mov
jle
inc
daa
loopne
ss
scas
in
and
adc
cmp
mov
fimull
js
idivl
cs
aad
data16
shl
pop
cmpsl
push
sub
pop
jp
out
cmp
roll
test
dec
scas
xor
in
pop
les
int
cmpl
cmp
jbe
push
and
jb
jae
mov
pushf
aas
mov
jno
lock
orb
adc
fidivrs
or
mov
jecxz
pop
and
dec
or
lock
cmp
push
xor
mov
jl
inc
mov
or
std
sahf
push
xrelease
and
stos
repz
inc
ljmp
rol
inc
push
or
call
sbb
ljmp
aaa
push
mov
mov
fstl
dec
fwait
xchg
and
adc
mov
aam
jp
mov
and
repz
sbb
push
sub
cmp
in
adc
adcl
jp
testl
and
inc
test
imul
xor
int3
addr16
int
stc
xor
je
addl
add
mov
sbb
lret
dec
int3
movsb
fmuls
jmp
stos
sub
lds
jbe
push
pop
pop
inc
jp
push
xor
outsl
call
cmp
or
je
pop
scas
cmp
xor
aam
mov
into
in
mov
jbe
scas
xorl
sub
mov
pop
lock
jge
dec
adc
jge
xorl
xor
lcall
aad
mov
js
dec
fs
xor
xchg
adc
push
idivb
jg,pn
enter
insl
pop
mov
cmp
cmp
mov
cmp
push
repnz
sub
xchg
movsb
xor
inc
pop
and
int3
dec
mov
add
test
fsts
or
push
mov
testl
mov
fldenv
push
je
and
rcrl
lret
jb
daa
mov
pushf
ljmp
pop
icebp
or
dec
add
imul
and
out
addr16
mov
xchg
mov
xchg
inc
sub
jo
cli
jge
inc
les
stc
decl
loope
xchg
pusha
shrb
inc
pusha
pop
inc
movsl
mov
sub
adc
cli
imul
imul
sarb
jmp
and
adc
out
mov
jg
stos
mov
xchg
fistpll
out
and
lret
daa
push
rol
test
jg
adc
cmp
jo
lahf
pop
mov
lcall
insl
mov
in
nop
inc
dec
sub
rorb
les
dec
mov
mov
cld
mov
rep
popa
scas
scas
pop
push
mov
and
mov
xchg
ljmp
negb
aas
shlb
adc
loop
int3
mov
shrb
data16
nop
jge
aas
xchg
sub
pusha
push
pop
mov
push
jbe
mov
lea
or
mov
lds
fnsave
add
mov
xlat
inc
inc
popa
jnp
cltd
add
adc
fcmovbe
push
inc
or
inc
push
aam
scas
fcomp
mov
bound
pop
mov
roll
pushf
jle
bnd
shll
mov
nop
movb
cli
pop
adc
push
andb
stos
rorb
rcl
pop
mov
xlat
cli
jo
xor
cwtl
mov
imul
icebp
pop
inc
pop
popa
push
xchg
adc
lods
ja
fisubrl
xchg
mov
fidivl
jle
inc
sbb
mov
in
xchg
xchg
mov
fs
subb
mov
push
fwait
lret
dec
dec
fbstp
outsb
inc
add
pushf
add
xchg
lea
mov
enter
jge
mov
test
pop
jecxz
push
rclb
call
leave
mov
aas
dec
fists
fnstenv
pop
push
adc
mov
push
inc
mov
test
flds
in
jb
jno
or
push
sub
cmovge
ds
out
fs
pop
adc
add
and
lahf
xchg
jmp
mov
mov
dec
jbe
aam
push
movsl
popa
fsubrs
fisubs
jno
sbbl
jbe
lcall
add
pop
push
negb
pop
jb
daa
sti
rcrb
adc
pusha
sbb
or
or
and
or
out
insb
jnp
js
sbbl
pop
roll
cmp
cld
sbb
mov
push
adc
stc
sbbb
movl
into
jne
cmp
push
xor
insl
imul
test
push
xlat
in
pusha
jo
je
int3
fwait
cltd
push
hlt
cs
pop
add
add
shlb
sarb
xor
mov
jne
push
lret
or
sbb
or
pop
sub
pop
cmp
enter
jns
and
fists
add
adc
mov
in
mov
xor
mov
outsl
and
add
sub
adc
and
lcall
pop
or
je
mov
packssdw
push
aam
add
lretw
push
int
sub
xor
aam
bound
data16
inc
aas
mov
enter
popf
movsl
ret
call
lret
inc
pop
lods
inc
lock
lock
pop
fistpll
push
call
cs
lret
cmp
or
and
rol
xor
jmp
pop
leave
adc
cmpl
pop
add
in
mov
cmp
mov
int
ficomps
cwtl
imul
ds
and
dec
mov
push
inc
pop
in
cli
notb
jne
mov
jecxz
test
sub
adc
push
lock
push
in
arpl
push
xchg
rorl
sbb
cwtl
jl
in
pop
add
mov
adc
dec
loopne
lods
sub
shlb
imul
iret
sar
pop
xor
push
fisttpll
mov
aad
imul
ljmp
jno
and
jbe
div
mov
faddp
dec
push
dec
cmpl
jp
pop
mov
or
mov
mov
add
and
rolb
adc
adc
dec
xor
cmpsl
inc
lret
mov
jnp
push
dec
mov
mov
xchg
mov
sub
push
pop
addb
ljmp
sbb
cmp
je
shl
stos
dec
cmpb
push
je
xchg
push
sti
push
or
leave
and
iret
inc
xchg
hlt
addb
dec
mov
sahf
mov
xchg
cld
jnp
mov
jbe
call
mov
pop
scas
es
pushf
mov
jg
xchg
pop
jg
mov
xchg
lret
xor
inc
into
cltd
pushf
in
mov
cltd
outsl
adc
sbb
pop
add
inc
in
mov
mov
mov
jnp
jp
out
mov
xchg
nop
popf
out
in
out
testl
mov
mov
or
ss
pop
jnp
xchg
outsl
xchg
test
cmc
sbb
in
adc
arpl
std
cmpsl
and
fyl2x
or
repnz
mov
push
mov
and
out
cmpsl
daa
push
les
stc
pop
and
pusha
mov
mov
into
jl
add
repz
fsub
sbb
rcrl
jo
jb
sub
pushf
pop
or
in
stos
bnd
inc
mov
das
xchg
and
les
andb
mov
out
psubsw
sbbb
xchg
nop
popf
cwtl
pop
jl
je
mov
mov
repnz
inc
adcb
popa
and
aam
leave
sub
ljmp
lret
lahf
push
mov
dec
mov
dec
ja
xlat
pop
mov
mov
cwtl
adc
cli
mov
inc
ret
sarb
jo
pop
xor
push
imul
mov
mov
dec
lret
aad
adc
out
inc
lods
push
jo
pop
and
push
push
or
dec
in
ja
insl
xor
clc
sub
pop
cmpl
repnz
add
sub
out
add
pusha
out
mov
call
addl
loope
xchg
xor
pop
or
int3
adc
int
and
jne
shrb
jo
mov
push
sti
pop
scas
notb
shlb
sub
xor
add
mov
xlat
rcr
imul
mov
add
push
xlat
jne
rcr
mov
jns
shlb
dec
xchg
mov
push
mov
out
fimull
pop
jns
lods
pop
jmp
jns
xchg
fcoms
decl
test
dec
sub
andb
xchg
into
xor
mov
out
lahf
push
inc
shlb
ljmp
and
lock
and
iret
stos
popa
in
sbb
push
out
popa
inc
mov
addb
dec
ret
mov
cmp
adc
hlt
sbb
dec
fistps
ss
std
in
xchg
cmp
add
cltd
cmc
or
jbe
rcll
jb
aad
xchg
jns,pt
xchg
andb
dec
sbb
cmpsb
movups
scas
call
push
pop
aaa
push
or
ficomps
cmpsl
iret
mov
clc
and
imul
jbe
insl
cwtl
xor
dec
dec
scas
add
sbb
sbb
aaa
mov
mov
es
call
sub
add
arpl
dec
andl
movsb
mov
inc
jge
cs
xchg
add
push
cmpsb
imul
in
aas
aaa
cmpsb
loop
stc
outsb
fisubs
push
imul
fidivrl
ss
mov
test
jmp
cmp
or
fwait
jmp
shr
loopne
fdivp
and
cs
jl
push
push
cmp
adc
add
jae
pop
or
jmp
test
inc
repnz
dec
sub
add
int3
pop
hlt
popf
popf
mov
fwait
cmp
push
or
pop
mov
xchg
icebp
cmp
and
xor
mov
inc
mov
sub
xchg
xchg
cltd
test
lods
pop
and
push
out
repz
pop
enter
and
mov
outsl
adc
icebp
dec
test
xchg
testl
repz
pminsw
dec
or
daa
jns
mov
or
adc
push
loopne
frstor
es
mov
sub
and
outsl
sbb
mov
add
sbb
test
xor
dec
sbb
clc
nop
mov
in
mov
mov
and
mov
push
test
dec
je
ja
fnsave
mov
inc
aas
iret
push
xchg
dec
fistpl
icebp
xor
in
aaa
movsl
out
pop
aam
mov
pop
mov
scas
mov
jo
dec
movsb
sub
shlb
lods
push
jnp
es
enter
mov
pop
out
xchg
jne
les
dec
jp
enter
mov
out
outsl
sub
cli
sbbb
fcmovnb
push
sub
xchg
push
xchg
sarl
in
neg
stos
pop
std
sub
shlb
sti
jg
ljmp
cmp
mov
dec
in
cli
or
xchg
inc
in
add
sbb
orl
mov
ljmp
call
lret
dec
xor
xchg
and
push
push
cmp
popf
add
sub
rolb
or
rorl
stc
jo
lock
int3
addr16
lds
mov
and
cmp
rclb
pusha
cld
mov
repz
dec
mov
nop
dec
jmp
cld
loopne
aam
xchg
xor
inc
jecxz
push
xor
in
lret
sbbb
sbb
ljmp
inc
stc
ljmp
rcrl
inc
cmp
mov
ror
aam
mov
pop
mov
subb
or
mov
fdivl
mov
mov
cltd
xchg
repz
jo
cwtl
mov
lock
cmc
lock
or
pop
pop
outsb
xchg
ret
push
inc
cmc
pop
orb
xor
mov
das
js
pop
es
icebp
andl
aad
js
inc
fidivrs
xchg
mov
out
int3
test
test
daa
test
inc
loope
xchg
jmp
rol
int
or
je
inc
push
sbb
and
and
mov
or
das
popa
dec
sbb
jl
dec
pop
insb
bound
cli
repnz
popf
shlb
pop
jmp
rolb
popf
and
or
cmc
hlt
inc
out
cmpsb
pop
pop
inc
xor
jmp
fisttpl
xlat
push
movb
push
loope
dec
mov
dec
mov
push
inc
mov
xchg
cli
mov
negb
scas
test
fwait
std
xchg
jne
test
js
popa
adc
jecxz
std
mov
pop
outsb
ret
shll
mov
xor
pop
xor
lahf
in
mov
and
movsb
cld
std
pushf
in
jbe
add
pop
push
out
and
gs
faddl
sahf
repnz
inc
jo
gs
xor
or
mov
sti
xchg
or
jl
inc
dec
notl
test
mov
test
mov
inc
push
cmpsl
pusha
cli
or
xchg
lcall
rorl
das
jmp
adc
lods
pop
add
aad
es
xchg
or
push
mov
fs
sbb
lahf
ljmp
out
xchg
ja
ljmp
imul
pop
fiaddl
pop
inc
xor
dec
ss
loope
mov
enter
leave
push
mov
cmp
cmp
push
sbb
mov
jp
add
into
xchg
adc
cmp
iret
scas
xchg
sub
or
inc
dec
in
lahf
push
test
decb
push
out
sahf
insl
lods
addb
ds
cmp
test
sub
sbb
popa
xchg
cmpsb
cmp
inc
xor
call
jl
push
push
mov
es
add
or
das
je
mov
cld
lods
test
icebp
fs
mul
in
pop
inc
fisubs
popf
aas
xchg
mov
hlt
ss
fidivrs
push
sbb
mov
addr16
add
inc
cmp
push
mov
imul
push
les
sbb
inc
push
stos
int
int
cmp
pop
jmp
cmc
push
inc
fsubs
inc
icebp
orb
push
jo
pusha
enter
test
jbe
mov
or
sbb
mov
push
fs
and
in
jae
mov
or
fsts
xor
xorb
dec
ja
jb
pop
fstps
lods
mov
sub
push
mov
cmp
outsl
sbb
cmpsl
popf
pushf
outsl
xor
push
and
add
subb
into
adc
lock
xchg
cmp
cmc
xchg
pop
das
ficoms
or
fcmovu
sbb
mov
mov
mov
push
rorb
dec
das
push
mov
jbe
add
sub
jecxz
popf
daa
fnstcw
dec
loop
or
pusha
mov
push
jno
jnp
sub
xchg
jg
stos
movsl
and
movsb
sbbb
mov
outsl
imul
inc
xor
jb
xchg
out
mov
popa
cmp
mov
sbb
rcrb
dec
pop
icebp
jne
inc
mov
cwtl
hlt
enter
int3
mul
sbbb
ret
shr
add
lods
push
jmp
ds
je
lods
mov
into
jnp
adc
dec
cmp
iret
mov
add
loop
mov
mov
mov
pop
inc
je
xor
xchg
cmpsb
test
sbb
fcmove
in
xchg
dec
test
das
or
aas
mov
jg
aas
xchg
int
insb
push
jecxz
sbb
mov
stos
xchg
out
xchg
jne
xor
pop
mov
shl
fidivs
das
out
inc
sub
add
cmp
mov
xor
scas
iret
mov
pop
int3
jp
xor
imul
rcl
lds
xor
mov
lock
in
jecxz
les
popf
jp
in
dec
cmpsl
lock
push
cmpsl
jo,pn
aad
les
push
cmp
lret
dec
push
js
fstpt
add
sub
cli
bound
out
mov
outsl
and
fnstenv
fdivrs
cmp
dec
in
push
jns
jo
outsb
or
aam
fwait
imul
fisttpll
je
repnz
xchg
cltd
mov
nop
adc
sub
dec
mov
xor
movsl
test
xor
mov
xchg
adc
inc
mov
inc
imul
psllw
sti
movsb
call
cltd
addb
js
enter
jmp
jbe
lock
lret
mov
push
imul
out
add
mov
mov
neg
lock
ret
push
ret
cmp
push
hlt
add
lods
hlt
mov
sbb
je
nop
lods
shl
jno
int3
fldl
xor
pop
or
mov
cmp
cmp
gs
lds
adc
and
inc
lea
dec
insb
rcll
not
lods
std
mov
stos
jo
cmp
add
cltd
jno
pusha
push
inc
jecxz
aam
fimuls
and
add
push
fnstenv
sbb
dec
mov
rcrb
fimuls
lret
addr16
aad
sbb
ret
adc
cmpsb
pop
cmp
and
mov
out
jb
sbb
fstpt
and
mov
mov
lahf
xchg
push
rcl
mov
sbb
data16
xchg
mov
mov
pop
xchg
shll
adc
mov
cmpsb
lcall
mov
cmpsb
imull
fwait
je
sub
and
push
pop
xlat
aad
cli
mov
rorb
sub
xlat
push
lods
repz
sub
aad
or
sbb
dec
jb
inc
inc
jno
sti
out
inc
push
cltd
xchg
daa
sub
sarl
aad
popf
adc
push
mov
and
xor
pop
leave
outsb
fwait
sti
iret
inc
js
mov
xor
sub
jne
fstps
insl
rep
adc
in
call
or
and
and
lahf
in
jge
adc
add
or
adcb
pusha
push
loope
mov
and
mov
sti
xor
jmp
xchg
out
push
movsb
mov
pop
clc
mov
mov
addr16
jg
push
inc
mov
xchg
negb
cwtl
aaa
xor
test
jge,pt
popf
mov
bound
cli
fistps
pop
pop
push
testl
jp
fwait
xchg
lea
stc
xrelease
xchg
loope
jmp
fdivs
jmp
pusha
push
and
jle
jl
dec
inc
mov
mov
fidivrs
test
out
mov
xchg
cmpsb
stos
inc
inc
mov
adcb
and
jmp
lret
fidivrs
insl
bound
jne
push
or
sbb
ja
and
bound
sub
cmc
xlat
icebp
xor
mov
add
mov
in
imul
dec
nop
sub
cmc
lock
inc
aam
xor
les
push
push
cmpsl
sahf
mov
enter
scas
or
shlb
or
mov
cmp
jo
orl
jo
cwtl
lret
mov
jp
pop
jl
or
idivb
fs
mov
xor
mov
or
popf
imul
jmp
popl
sub
in
pop
sub
or
or
jae
push
jp
xchg
pushf
add
aaa
add
or
ljmp
or
push
cld
arpl
repnz
pop
fwait
inc
out
cmpsl
jns
fwait
mov
adc
movsl
mov
pop
lods
push
adc
popf
loopne
out
inc
out
mov
mov
push
inc
cmp
push
pop
mov
lret
sub
mov
xchg
dec
sub
inc
mov
adc
sahf
arpl
adc
xor
cmp
and
lahf
out
test
cs
aam
push
or
loope
in
mov
les
add
jmp
mov
std
inc
gs
cltd
push
ret
cld
jns
lret
jl
stos
jns
inc
mov
pop
sbb
fbstp
push
gs
cmp
lcall
push
sahf
or
adc
cmc
pop
mov
push
cmp
pop
push
dec
loop
cmp
shlb
inc
mov
cmp
or
cmp
imul
xlat
aaa
or
jmp
mov
jecxz
popf
mul
repnz
ret
repz
popa
inc
rol
inc
repz
mov
icebp
scas
movsb
lods
pop
adc
aas
sbb
lret
pop
dec
inc
lea
popf
xchg
adc
cwtl
aam
inc
mov
lcall
pop
int
sub
fildl
cmp
fidivrl
fwait
jne
lcall
xor
and
fistps
cli
sbb
jmp
xor
push
pop
scas
aaa
and
scas
pop
push
and
jecxz
rcrl
cwtl
fisttpl
push
xchg
test
and
movsb
push
inc
xor
xchg
push
jbe
pop
xor
and
and
lock
xchg
out
or
bound
iret
into
std
pop
in
dec
jno
call
push
nop
test
adc
mov
dec
rcr
jg
push
xchg
add
outsl
dec
nop
movsl
cmp
addr16
mov
xchg
jno
lea
stc
push
adc
dec
inc
les
mov
gs
pop
lret
jmp
dec
cmp
aam
enter
pushf
int3
cmp
pop
jbe
adc
inc
rcr
movsb
pushf
loop
addr16
imul
pushf
xchg
push
xchg
add
cmp
jge
jnp
adc
sub
inc
pop
ret
cmp
pop
or
rclb
jnp
clc
popa
cmpsl
in
mov
push
dec
mov
pop
mov
cmp
iret
orl
xchg
mov
sbb
mov
sbb
sub
xchg
push
pop
jb
cmc
sahf
and
cmpsb
lahf
insl
insb
movsl
pop
int
mov
lahf
inc
add
cwtl
push
pop
sbb
ficoml
lea
cmp
rorb
cwtl
mov
jo
lock
xchg
faddl
popf
xor
dec
and
mov
xchg
inc
adc
std
fwait
jnp
imul
mov
sbb
imul
jge
push
add
test
add
mov
shll
jns
mov
outsb
fnstenv
arpl
aas
jmp
inc
mov
ja
dec
xchg
cltd
notb
imul
ss
add
dec
cmp
lret
decl
mov
mov
dec
mov
lahf
scas
pop
repnz
sbb
mov
cmp
sbb
imul
clc
dec
scas
fwait
cmp
dec
xlat
jnp
out
mov
adc
xchg
inc
or
cmp
push
pop
fs
les
shr
stos
leave
push
xchg
pushfw
aad
lock
fs
sub
sub
cmc
add
jmp
and
add
lret
mov
mov
leave
ja
jg
sarb
mov
addl
pop
cwtl
jmp
mov
in
jecxz
stc
enter
idivb
adc
dec
and
adcb
mov
enter
add
cld
mov
xor
pushf
std
inc
mov
or
xchg
ss
fmul
and
andl
testb
lds
call
mov
push
loopne
xchg
pop
adc
mov
outsb
jge
dec
enter
int3
pop
dec
sbb
repnz
lret
add
xchg
stos
xor
push
mov
and
add
pop
lret
xchg
cmp
mov
mov
cmp
in
cwtl
and
cmpsl
sti
std
cmp
jo
mov
mov
push
push
xlat
mov
in
sub
daa
inc
inc
jl
mov
out
mov
or
xchg
mov
xor
es
and
and
and
inc
pop
lcall
popl
sbb
data16
jecxz
push
mov
pop
xchg
imul
int
mov
test
stos
sbb
or
cmp
adc
sbb
jne
js
shl
test
in
frstor
lret
ret
xlat
sbb
mov
inc
out
aas
cltd
cmp
dec
bound
mov
sbb
or
in
shll
inc
mov
arpl
push
cmp
inc
and
adc
inc
shl
pushf
cmp
add
jle
test
fcompl
clc
emms
mov
cmp
fisubs
mov
or
lahf
cld
movsb
jmp
test
mov
sub
std
movsb
pop
call
and
fildl
faddl
outsl
ficompl
sti
aam
aam
mov
ret
xor
push
loopne
loopne
pop
sub
in
daa
and
and
pop
stos
mov
out
testl
or
xchg
and
shrd
and
int3
xchg
sub
aad
xchg
sub
loope
xlat
push
test
push
cltd
adc
or
mov
or
mov
roll
test
add
call
in
gs
cmp
mov
pop
and
or
shll
out
dec
stc
inc
dec
push
incb
or
jmp
loop
adcb
xchg
shrb
icebp
xchg
jl
fwait
sub
fisttps
rorb
ficoms
push
ss
mov
inc
dec
xor
test
test
xor
xor
repz
or
cld
mov
fsubrs
sub
push
inc
clc
test
cmp
adc
out
ljmp
adc
js
and
xor
pushl
push
cmc
or
aaa
repz
adc
add
or
and
dec
push
or
push
or
mov
xor
xor
pop
andb
cltd
sub
ror
add
cmp
fsubrl
ret
shll
cli
sarl
inc
push
cmc
addl
and
adc
cmpsl
jle
push
push
sbb
cmp
lds
clc
lcall
imul
jnp
out
data16
mov
add
ja
adc
ja
jnp
mov
dec
in
pop
ds
clc
inc
dec
add
aaa
xlat
icebp
pop
gs
pop
data16
push
stc
xchg
push
dec
push
sub
ljmp
pop
ret
or
mov
sbb
aam
cwtl
cli
sub
imul
lods
xchg
sbb
scas
repz
clc
mov
das
mov
and
adc
jae
dec
lahf
jle
cmpsb
rcll
xor
sub
push
xchg
rcrl
popa
add
jne
sahf
pop
or
mov
mov
inc
loope
bswap
sbb
xchg
inc
inc
add
pushf
addb
rorb
dec
xchg
push
lret
lds
cmp
repz
ss
fnsave
push
pop
subl
push
insb
cmp
and
cwtl
push
jg
cmp
pop
lds
pop
add
push
aaa
shr
push
lods
or
out
jns
stc
mov
std
mov
jge
cmpsb
sahf
and
mov
out
and
in
lods
mov
paddsb
cmpsl
imul
movsl
ds
xchg
push
sub
lock
add
js
push
push
and
mov
adc
in
xchg
sbb
cmpsl
stos
mov
add
and
incl
push
sbb
mov
test
fwait
inc
hlt
daa
daa
inc
adc
cmp
pop
xor
add
rcrl
mov
repnz
mov
in
sti
xchg
sbb
out
subl
daa
in
mov
xorb
xor
cmc
pop
icebp
jae
andb
dec
jnp
aad
sub
xchg
dec
pop
subb
cli
lahf
test
ds
test
lret
push
stos
std
shl
mov
outsb
jne
mov
xor
inc
call
pop
int
push
clc
movsb
repz
adc
sub
jne
inc
ret
and
in
push
push
pop
mov
dec
pop
call
xor
iret
push
inc
imul
mov
int
sub
out
les
loop
fistpll
xor
cmp
and
mov
test
add
cmp
hlt
scas
movsb
mov
inc
xor
add
jle
out
pop
iret
mov
or
mov
les
xor
andl
add
cmpsb
and
scas
cmp
xchg
mov
sbb
push
lds
movswl
fsub
mov
mov
push
xlat
inc
mov
and
sbb
push
out
add
dec
push
mov
popf
and
leave
inc
push
out
fwait
lret
inc
xchg
aad
sbb
xor
sub
aam
gs
std
jge
fldl
adc
in
into
pop
sub
adc
push
jmp
lret
lret
std
jae
in
adc
rcrl
and
sbb
cmp
mov
xor
adc
mov
push
mov
loope
adc
std
jb
icebp
sar
add
rorl
xchg
mulb
inc
daa
addr16
lods
enter
popa
out
sub
lods
jne
mov
insl
and
pop
hlt
test
cmpsl
scas
fstps
test
mov
cmp
fs
xchg
push
xor
test
mov
aas
push
and
cmp
mov
xlat
scas
movsb
jl
roll
lods
test
js
xchg
test
cmp
cmc
mov
aas
mov
pop
stos
or
inc
xchg
pop
stos
or
stos
rcrb
out
sarl
es
push
or
jp
frstor
xchg
cmp
dec
mov
xor
push
adc
sub
ljmp
adc
enter
sahf
jne
add
daa
sahf
dec
adc
jecxz
pop
xchg
fs
pop
jno
mov
xchg
mov
push
daa
fdivs
sub
fdivs
cltd
into
out
sbb
or
mov
es
cmpsb
leave
or
sahf
aad
insb
jnp
repz
imul
movsb
cmp
loop
jbe
push
dec
lods
out
les
imulb
and
add
aam
stos
in
or
movsl
mov
cmp
dec
fwait
dec
arpl
mov
scas
cs
inc
and
scas
aas
sub
sub
sub
pause
decl
cwtl
popa
jb
shl
cmpsl
or
in
sahf
lret
jae
cwtl
enter
cmp
fcoms
cmp
sbb
mov
fnstenv
inc
loopne
inc
cs
mov
shll
push
int
mov
nop
test
or
cwtl
and
rcr
cmpsb
inc
sbb
xchg
insl
and
daa
pop
mov
notb
jb
sbb
push
lret
mov
jp
add
bound
stc
dec
ja
xchg
mov
mov
inc
rolb
sub
or
in
push
aad
mov
and
rcll
mov
out
aas
cltd
test
jo
pop
cmpsl
sbb
movsb
fidivrl
rcrl
xchg
icebp
out
outsl
aam
cmpsl
or
outsl
inc
and
dec
test
xor
mov
jl
fisubrs
jb
jns
call
xchg
in
push
jo
xchg
xchg
add
bound
rorb
mov
lea
and
mov
push
mov
stos
inc
lret
sbb
xor
pop
pop
test
adc
aaa
cmpsb
nop
hlt
mov
mov
push
sub
enter
mov
sti
cmp
sbb
clc
dec
push
mov
iret
scas
xchg
aaa
test
fs
inc
mov
or
mov
lea
or
or
andl
lods
jbe
xor
mov
push
push
sbb
js
rol
inc
push
fs
or
sub
and
lds
iret
push
or
bound
push
aaa
imul
sub
dec
testl
andb
out
lcall
mov
mov
xchg
jp
out
lods
jnp
xchg
jmp
ds
jmp
inc
lret
imul
sbb
aam
xor
push
clc
stc
mov
jg
clc
inc
subb
and
xchg
inc
mov
jge
adc
jecxz
cmp
or
xchg
and
push
into
inc
into
arpl
inc
shlb
sti
clc
bound
sbb
in
xor
jo
or
pop
dec
xchg
pop
jecxz
sbb
pop
sub
inc
dec
aaa
popf
dec
xchg
std
pop
pushw
push
mov
xlat
and
mov
sti
jnp
sub
cwtl
lods
sub
test
rclb
scas
push
stos
adc
repz
repnz
fnsave
dec
lret
inc
les
xor
jmp
fcomip
fidivl
sub
or
loopne
jp
or
ja
mov
cmp
add
out
repz
sub
dec
movsb
ds
add
fdivrs
mov
clc
inc
add
sahf
popa
ljmp
xchg
loop
mov
repz
mov
jno
loope
mov
push
inc
mov
mov
cmp
mov
mov
loop
repnz
inc
mov
aad
cmpsl
inc
faddl
add
jl
sub
pop
sub
fwait
and
inc
ficoml
inc
loope
andb
testb
popa
icebp
mov
ret
pop
inc
inc
mov
fldt
jmp
mov
mov
xchg
cmp
push
and
jl
out
lods
lock
mov
xor
lret
jae
mov
in
jp
bound
push
test
daa
cmp
cmp
dec
jno
das
mov
rcrl
push
cwtl
ss
add
jne
pop
testl
sub
or
pop
outsl
sub
inc
or
or
push
and
loop
jecxz
cmp
xor
xorl
mov
jl
popa
adc
mov
dec
or
xchg
popa
jo
shll
mov
cmpsb
arpl
dec
cld
cmc
or
mov
jge
pusha
sahf
mov
lret
dec
mov
out
xchg
imul
dec
push
jb
jecxz
dec
testl
imul
sub
fstpt
or
cwtl
mov
leave
divb
xchg
pop
pusha
mov
fnstcw
in
or
aaa
enter
sahf
pop
flds
add
out
and
hlt
pop
jle
cltd
jo
push
mov
adc
repz
ficomps
and
fstpl
clc
cwtl
xor
lcall
fwait
jns
lods
clc
cmp
xchg
sub
inc
sbb
inc
mov
push
mov
mov
test
adc
sti
int
bound
das
out
mov
dec
inc
jnp
mov
das
loop
sbb
or
arpl
mov
cld
inc
mov
mov
out
popa
jb
mov
xor
out
push
iret
sti
hlt
fcoml
lea
popa
stos
xor
pop
out
pop
sub
fldcw
jecxz
pop
int3
inc
mov
das
rcrl
pop
inc
shll
or
push
xor
dec
xor
mov
addr16
mov
fcompl
loop
sub
sbb
mov
ljmp
add
push
sub
mov
and
test
lret
ljmp
mov
je
cmp
out
ret
push
or
sbb
pop
mov
or
xchg
stos
cmc
pop
idivb
roll
mov
xchg
mov
stc
mov
inc
or
in
push
cmc
dec
lea
fimuls
rolb
mov
jecxz
xchg
xor
jp
pushf
out
scas
xchg
xchg
sub
ret
cwtl
movsb
test
sarb
aaa
inc
cltd
ss
movsl
push
sub
into
push
leave
jnp
ljmp
mov
enter
cli
push
dec
ja
mov
in
repz
jecxz
mov
and
gs
sahf
int3
cmp
pushf
push
inc
lds
scas
sub
out
jbe
jmp
lods
cmp
lods
std
das
pop
pop
pop
cli
pop
dec
mov
mov
inc
cmpsb
jb
ret
push
dec
fcompl
sbb
out
call
das
fdivr
imul
push
dec
inc
cmp
sbb
in
sub
jmp
push
es
lods
push
loopne
js
add
rorl
xchg
jmp
lret
lods
leave
in
je
jno
mov
or
inc
pop
jbe
xchg
push
in
mov
pop
add
mov
jne
call
dec
int
xor
ret
insb
xchg
mov
add
popf
test
add
push
test
andb
in
jnp
inc
cmc
flds
mov
les
or
scas
ds
add
out
bound
enter
xchg
fisubs
sub
call
push
xor
mov
and
xchg
push
inc
mov
lods
enter
jp
sarb
jae
dec
mov
push
mov
ret
pop
divl
xchg
and
fidivl
pop
xor
test
es
fldpi
lahf
lahf
xor
scas
in
scas
cmpsl
es
and
inc
arpl
mov
inc
pop
cmp
xchg
add
daa
scas
push
enter
sbb
jge
call
pop
arpl
push
sbb
shl
decl
dec
jbe
inc
lahf
iret
pop
mov
std
inc
xchg
int
xor
sbb
shlb
sbb
pop
push
sarl
cmp
xor
sub
push
xor
xchg
cmp
push
jno
cmc
cli
leave
shlb
and
and
lock
mov
roll
mov
mov
mov
lahf
movsl
xchg
adcl
icebp
xchg
mov
fs
pop
xlat
ljmp
jnp
popf
lret
testl
movsl
gs
test
mov
sbb
lods
adc
dec
mov
insl
xor
cmp
out
insb
push
mov
shr
in
lods
pop
cmpsb
xlat
cltd
hlt
sbb
jnp
jmp
xor
cmp
hlt
xor
ret
pop
push
cmpb
cmpsl
mov
rolb
test
mov
xchg
lock
mov
ljmp
push
lcall
imul
push
dec
push
in
pop
mov
jnp
mov
rorb
pop
cmc
mov
repz
ss
xchg
jmp
mov
sub
inc
lea
shlb
mov
jo
xor
aam
mov
jo
push
push
fistl
mov
or
daa
xchg
adc
popl
fcoml
mov
sub
sbb
xor
loopne
add
mov
out
mov
in
fs
sbb
lea
sub
sub
dec
stos
roll
shr
out
cmp
inc
push
aaa
pop
movsb
xor
pop
fisubl
or
xchg
or
int
fsubr
mov
shrl
sub
test
adc
aas
fnstsw
aaa
in
push
xchg
or
negb
jmp
xchg
jp
mov
or
je
add
sarb
in
sti
jg
lcall
nop
f2xm1
dec
mov
mov
or
insb
mov
adc
leave
in
in
rorb
jmp
xor
outsb
ja
insb
sub
jno
ja
fs
adc
pop
add
scas
out
xchg
mov
mov
jne
inc
dec
jle
aaa
in
ret
cmp
hlt
inc
and
and
sbb
stc
cld
cmpsl
pop
fcompl
push
bound
pop
sti
arpl
pop
imul
inc
lret
ss
push
jp
dec
sub
xlat
ficoms
lds
mov
sqrtps
cmp
jns
cltd
or
mov
cmpsb
jnp
lods
sbb
cmc
imul
xor
jmp
shll
push
daa
jne
mov
jp
popa
dec
inc
notb
ss
nop
movsl
pop
in
out
negb
cli
mov
mov
cmp
repz
rcrb
xor
ljmp
sbb
jl
enter
xlat
shl
adc
cmp
cmpsl
cmp
xor
in
int
insl
xchg
jg
add
out
mov
in
jp
aad
loop
xchg
jae
pop
pop
repz
and
jo
repz
mov
scas
test
xchg
jmp
icebp
dec
cmc
jle
jbe
adc
push
jo
or
xor
mov
int3
ljmp
stos
xlat
push
repz
jle
hlt
sbb
scas
fwait
sbb
sbb
scas
dec
nop
sub
test
cli
sbb
ja
adc
mov
into
jg
into
or
pop
pushf
xchg
gs
mov
arpl
shl
lret
xchg
mov
lret
lret
mov
jp
out
frstor
loopne
fcmovnbe
imul
or
cmpsl
enter
or
push
push
int3
roll
rcl
add
and
out
xor
aad
ja
dec
call
test
into
dec
inc
enter
jno
popa
jg
mov
sarl
jmp
cmp
mov
aam
arpl
mov
std
data16
or
bound
cmc
repz
adc
xor
aas
imul
add
lods
sub
icebp
cmpsl
mov
sbb
icebp
popa
add
inc
nop
push
mov
cmp
mov
arpl
sahf
pop
jecxz
xchg
hlt
dec
push
decl
mov
out
pop
and
stos
sar
sbb
pop
test
sub
jo
stos
das
test
sbb
mov
pop
das
and
test
xor
jne
jecxz
mov
lods
jmp
pop
cmp
mov
pushf
mov
pushf
lret
and
xorb
jmp
repz
outsl
xor
cmp
xchg
mov
xchg
mov
pop
push
jmp
insl
xchg
mov
or
aaa
std
cmp
push
in
ret
out
notl
lahf
cmp
xor
cmp
lret
imul
ffree
push
div
inc
jg
gs
call
add
lods
cld
add
or
cmpb
dec
mov
pop
or
cli
cmp
mov
aam
das
xchg
pop
fcomps
call
mov
jo
sbb
arpl
or
push
xor
push
repz
push
sbb
pop
outsb
outsb
adc
dec
lret
movsb
lret
push
aaa
jge
xchg
xchg
pop
in
lds
dec
xor
repz
mov
outsb
jecxz
push
inc
pop
or
push
mov
inc
cmp
jne
sub
or
mov
insb
outsl
outsb
std
push
int3
sub
mov
shlb
sbb
add
and
das
jns
or
mov
mov
subb
in
addr16
ljmp
aam
rcrl
lcall
add
in
pop
cmc
ds
scas
das
xchg
xchg
sbb
pushf
mov
and
sub
mov
mov
lods
dec
mov
faddp
adc
js
xor
pusha
packssdw
shlb
sub
xor
outsb
dec
mov
jns
jb
int3
lahf
push
sub
mov
ds
and
stc
cmp
out
shrl
add
and
rolb
dec
fldenv
or
fnstenv
cmpsl
pop
jne
mov
popf
aam
cwtl
mov
cwtl
jle
lcall
data16
pushf
xor
aam
movsb
test
mov
cmpsl
fadds
out
imul
push
cmpsl
fildl
mov
fwait
mov
jge
stc
and
bound
cs
test
or
jbe
ret
loopne
or
out
jl
pop
cwtl
mov
test
jecxz
cwtl
je
push
outsb
sarl
ja
lock
mov
mov
add
push
int
imul
shlb
jge
aas
xchg
jno
or
mov
mov
movsb
inc
test
xor
adc
mov
lods
xchg
in
fsubrl
sub
adc
imul
sarb
popf
mov
addb
jnp
sbb
xor
scas
das
dec
out
test
inc
in
sahf
mov
and
stc
aaa
movsb
jae
sub
inc
lcall
jp
cld
jmp
cmp
pushf
sbb
add
leave
clc
out
repz
fwait
arpl
int
fists
rol
add
lret
mov
dec
sub
cmp
pop
in
aam
jae
pop
add
inc
daa
insb
jle
cmp
inc
pop
mov
repz
in
clc
sahf
mov
mov
call
push
push
or
call
adc
lds
cmpsb
cmp
jl
outsl
and
adc
daa
pop
jecxz
aas
adc
lret
mov
mov
cs
shrb
xchg
sbb
or
add
sub
aaa
into
lea
mov
or
cmp
or
mov
orb
jbe
xor
pop
aas
adc
mov
pop
ss
sub
add
cmc
pop
and
cmp
inc
lds
jno
clc
clc
push
rcl
cmp
push
fwait
inc
jle
aad
int
loop
int3
decb
push
sbb
inc
arpl
imul
ljmp
lcall
xor
xchg
dec
inc
es
hlt
out
popa
std
jmp
cmc
push
outsb
inc
int3
and
inc
lea
cmp
sbb
sbb
dec
test
sbb
dec
sbb
sbb
xchg
and
jmp
or
sub
dec
and
pop
dec
pop
pusha
mov
testl
rcrl
nop
pop
dec
popf
mov
xor
int3
mov
pop
dec
add
daa
xchg
xchg
pop
idivb
sbb
addr16
lea
notb
and
div
mov
mov
push
pop
xchg
icebp
lret
int3
pop
in
mov
add
jbe
mov
jb
push
inc
mov
rclb
push
cmpsb
sub
icebp
out
call
lds
dec
lock
iret
mov
mov
lods
fstps
les
pop
pop
adc
cld
jnp
mov
pusha
xorb
lock
fcompl
fbld
or
setno
adc
stos
ret
add
add
out
push
xchg
push
ja
rcrb
xor
xlat
xchg
dec
push
mov
xchg
out
add
inc
fnsave
mov
cwtl
in
pop
add
jle
mov
popa
ja
pop
push
lcall
push
push
test
lock
stc
outsb
in
or
push
xchg
mov
sahf
adc
sbb
ret
loopne
push
jo
add
inc
xchg
mov
mov
cmp
fimull
hlt
aad
xchg
je
mov
int
add
sbb
jbe
popf
jb
pushf
xchg
pop
in
cmp
stos
movsb
sahf
push
sub
cmp
clc
cmp
pop
xor
sbb
or
stc
ret
pop
jp
jmp
enter
or
and
mov
mov
mov
test
andb
ds
pop
ret
test
xor
and
insl
xor
jecxz
mov
mov
gs
mov
inc
mov
push
loope
inc
push
ret
je
sub
push
cmc
mov
push
lret
bound
sbb
and
push
and
push
cmpsb
in
sti
xchg
lret
push
incb
daa
and
stos
mov
cmp
ret
and
jbe
stc
mov
lea
pushl
jmp
cmp
xor
or
fs
and
xchg
stc
popf
mov
pop
add
adc
jnp
and
adc
jnp
test
mov
mov
pop
pusha
int3
lods
gs
adc
rorl
push
cmc
lods
cmovno
dec
clc
mov
push
outsb
cli
rolb
xchg
sbb
iret
adc
jge
out
inc
ljmp
ja
xlat
pop
push
jmp
jbe
push
imul
cmp
arpl
mov
fwait
clc
adc
scas
fs
mov
cmp
shrl
jg
mov
sbb
sbb
jge
shll
sbb
je
cmp
cmp
icebp
daa
out
mov
pop
xor
and
sbb
pop
stos
dec
mov
cmovp
into
sbb
pop
pop
dec
and
cmp
xchg
fs
insl
movsb
in
cltd
inc
sahf
pop
mov
xor
and
push
jno
sub
pop
push
dec
enter
xor
test
mov
sub
test
cmp
push
fbstp
fisttps
jl
and
mov
es
mov
out
adc
or
jns
or
lret
jle
scas
cwtl
cmpsb
dec
nop
stos
pop
cwtl
out
imul
rolb
cmp
pusha
add
lret
in
imul
sbb
push
sub
stc
and
mov
mov
popf
mov
and
or
xchg
loope
xchg
cld
test
rorb
jmp
pop
mov
adc
mov
add
mov
or
stos
sbb
pop
jns
push
cmp
mov
mov
ret
mov
jns
lods
cltd
mov
cmpsb
jno
cltd
push
push
ss
xor
push
jae,pn
pop
aad
addr16
jo
fs
es
into
xchg
js
push
inc
stos
pop
mov
sbb
mov
scas
sbb
push
sbb
mov
out
jmp
shll
out
mov
cwtl
cmpsb
xlat
movsl
sub
add
aam
jnp
cmpb
mov
dec
loope
sub
and
dec
sarl
in
sub
jbe
fimull
rorb
dec
imul
fcom
mov
movsb
push
call
jno
pop
pop
aad
nop
aas
stos
out
jne
cld
mov
mov
push
mov
lret
push
scas
xor
scas
mov
cwtl
xor
ret
fidivrl
mov
cmp
jg
sahf
mov
jae
xchg
lods
jb
push
pop
insl
pop
ret
gs
addr16
out
out
sahf
jo
int3
sbbl
mov
xchg
xchg
and
xchg
cli
aad
adc
rcl
sbb
clc
arpl
iret
mov
cmp
mov
pop
mov
push
pop
adc
add
outsb
mov
lods
in
rcrb
cmpsb
push
daa
inc
testb
pop
mov
lahf
shrb
jp
mov
pop
fstp
aad
aas
ss
sbbb
aas
mov
dec
clc
inc
pusha
inc
mov
mov
add
or
adc
adc
in
aas
mov
mov
mov
xor
cltd
push
xor
jnp
add
mov
shlb
div
lret
dec
mov
inc
lcall
mov
cld
int3
out
nop
in
push
dec
or
pop
lret
out
loop
mov
cwtl
pop
subl
int3
and
test
lods
dec
gs
sub
fdiv
inc
xchg
fisubrs
mov
xor
outsb
jmp
js
ret
lods
push
sub
push
in
and
test
dec
imul
fidivrs
pop
mov
out
fildl
insl
clc
aad
pop
jmp
jecxz
dec
xchg
mov
ret
cwtl
mov
dec
cmp
icebp
dec
push
stc
dec
fsubr
js
adcl
pop
popa
pushf
push
gs
por
shlb
in
or
loop
cmpsl
negb
push
popa
dec
in
xlat
xor
in
cmp
rorl
pop
mov
insb
xchg
sbbb
push
movsb
outsl
fdivs
jl
in
lret
out
mov
rcl
sbb
sbb
adc
out
push
enter
sub
adc
leave
mov
push
inc
data16
and
mov
sbbb
dec
sub
cltd
inc
and
out
call
mov
wbinvd
movsl
mov
inc
lcall
fmul
mov
pop
sahf
inc
test
and
sbb
mov
iret
orb
mov
cli
std
jnp
jbe
fiadds
adcb
sub
push
shrl
mov
out
sbb
mov
xchg
ds
sbb
sub
add
lahf
clc
fisubrs
inc
add
and
and
adc
sbb
mov
sbb
out
and
std
mov
xor
cmp
jns
shrl
sarl
pop
jmp
insb
mov
xchg
mov
jae
sbb
test
inc
stc
or
cld
sbb
sbbl
cltd
cmp
stc
dec
mov
xor
ret
ds
bound
mov
push
fsts
push
adc
xor
lret
std
fs
out
push
xchg
mov
test
mov
mov
cs
or
cld
daa
ja
xchg
popa
movsl
in
mov
xchg
sahf
jae
dec
imul
test
xlat
lock
mov
pop
rolb
sbb
movsl
push
mov
mov
push
out
cld
stc
xchg
scas
loopne
cmpl
popf
sti
xor
adc
ljmp
jmp
int
mov
pop
in
sub
lret
dec
and
dec
fdivl
xor
sbb
xor
sub
mov
js
xor
in
jl
arpl
mov
and
test
jae
int3
jl
dec
rorb
aam
stc
je
cltd
fdiv
adc
and
into
outsl
dec
stos
fs
cmc
jnp
lcall
xchg
mov
cwtl
add
cmp
push
push
xchg
rorb
out
mov
push
lret
mov
pop
jnp
and
pop
es
int3
sahf
jns
push
rcrb
outsl
jp
sub
adc
xor
xlat
lcall
and
cmc
cli
dec
or
xor
and
hlt
outsl
pop
aam
sbb
cmp
loop
es
ret
inc
leave
imul
and
mov
in
das
mov
xchg
push
sbb
les
out
sbb
lods
or
icebp
popa
xchg
push
mov
ss
dec
in
mov
rcl
dec
cmp
inc
aaa
fcmovbe
aam
dec
xor
loopne
dec
icebp
cmpsl
or
cmpsb
sub
mov
test
addl
push
insb
sbb
push
push
and
addr16
dec
icebp
mov
outsb
jmp
adc
fsubrs
pop
fs
cwtl
test
mov
adc
jno
dec
mov
cmp
gs
imul
in
into
stos
xlat
and
out
mov
fwait
xor
push
and
ficompl
mov
jns
fidivrl
out
mov
out
push
mov
jecxz
mov
and
mov
fmuls
loope
repz
movsb
rorl
xchg
repz
insl
add
and
mov
test
leave
mov
mov
jmp
scas
or
gs
dec
out
xchg
insb
repz
in
xchg
mov
sbb
push
inc
outsb
cmpsl
or
js
mov
dec
inc
push
xchg
pop
test
jb
xor
jo
movlps
call
dec
push
outsl
ss
mov
frstor
mov
push
cmpsl
or
movsl
adc
shll
je
mov
adc
out
xchg
ja,pn
mov
cli
mov
sub
mov
sub
inc
sbb
mull
idivb
cwtl
fdiv
push
fdivl
xor
mov
jl
inc
xor
xlat
xchg
lahf
movsl
sti
jge
mov
arpl
lds
je
or
fwait
mov
add
inc
sbb
or
shlb
dec
and
cmpsl
pop
mov
jnp
mov
movl
dec
add
arpl
adc
test
pop
mov
pop
sub
cli
addb
into
cmp
fisubrs
aas
pop
mov
xchg
inc
out
push
testb
cmp
dec
pop
mov
cs
sub
fisubs
loope
jae
test
sti
pop
aas
jb
into
sbb
inc
pop
das
jecxz
ds
lds
push
imul
xor
leave
imul
pop
jae
jmp
in
pop
or
testb
dec
arpl
pop
shlb
lods
xor
jne
cmc
mov
test
imul
jnp
js
lock
into
negb
rcrb
dec
xchg
push
leave
cmpsl
jmp
sbb
adc
jg
cmpb
test
push
fidivrl
fcomip
rcr
cmp
nop
rorl
fs
lods
icebp
pop
shl
add
mov
scas
and
or
popa
jle
pop
mov
xchg
and
push
mov
aad
mov
cld
dec
sub
icebp
push
and
inc
cmp
int
pop
jp
add
add
hlt
xor
lods
in
sbb
add
xor
lret
cmpsb
insb
outsb
jno
jns
push
cli
insb
pop
shlb
add
sbb
stc
sub
sub
mov
out
dec
mov
xchg
jne
imul
push
xor
adc
cmp
dec
mov
mov
xchg
cmp
pop
addr16
and
push
lret
or
pop
aaa
js
mov
and
dec
gs
sti
or
movb
inc
adc
jno
jo
stos
pusha
pop
test
xor
sub
cmp
mov
inc
gs
cmp
dec
pop
and
sbb
in
inc
jnp
loop
cmpsl
scas
aaa
ret
lret
mov
xor
mov
call
outsl
mov
push
pop
jp
lock
pop
xchg
dec
hlt
dec
mov
fs
cmpsb
bound
jb
jnp
xor
mov
sbb
aam
mov
jge
add
inc
cs
out
jl
repz
cmpsb
sub
arpl
mov
popl
ss
mov
xor
cmp
inc
adc
mov
rcl
xlat
mov
pop
sub
insb
in
jp
mov
adc
imul
dec
ja
fcomps
sub
leave
repnz
or
int
xchg
adc
scas
sub
movsl
outsb
mov
faddl
dec
sub
lahf
or
xchg
fnstsw
pop
data16
arpl
fdivs
jp
push
xor
test
stc
pop
add
sahf
sbb
stos
xor
sarb
lcall
xor
mov
aam
add
jns
ret
xlat
stc
pop
fsubl
or
addr16
add
outsb
sbb
push
xchg
push
js
lahf
xchg
icebp
mov
mov
cmp
pop
sub
push
sbb
aad
push
movsl
fists
mov
pushf
push
mov
or
mov
pop
fildl
pop
sbb
dec
and
mov
mov
ljmp
xchg
sub
or
pop
xchg
mov
xor
ss
pop
stos
or
push
outsb
push
sub
sbb
std
fwait
mov
icebp
mov
sbb
pop
sbb
int
push
xchg
lret
inc
sub
adc
popf
ljmp
push
cwtl
push
push
lods
cmp
ljmp
mov
ljmp
push
pop
scas
mov
or
jp
test
pop
sub
mov
mov
mov
repnz
sub
fs
sbb
hlt
mov
test
jl
cmp
leave
xor
and
mov
nop
ja
test
and
fsubrp
scas
cmp
movsb
sbb
jne
ret
add
in
gs
or
or
push
rclb
pop
mov
xchg
insl
std
sub
loopne
pushf
bound
rolb
into
add
loop
leave
sub
push
mov
xlat
and
jns
int3
mov
inc
push
adc
in
inc
and
addr16
cmp
in
or
jg
sbb
les
test
jmp
mov
mov
fs
inc
lods
inc
inc
addr16
jbe
cli
sub
jae
adcl
jo
sbb
push
jmp
lods
aad
cmp
xchg
xchg
cmpsb
into
add
pop
cmp
hlt
xor
and
xor
pop
push
xor
movsb
popf
fsubs
jge
mov
inc
xor
imul
or
lea
aad
pop
in
imul
in
call
aam
mov
ja
cmp
test
je
lea
pop
cltd
mov
lds
repz
into
dec
rolb
mov
cmpsl
out
enter
repnz
je
inc
mov
stos
mov
mov
rcrb
sub
sub
or
mov
scas
add
push
popf
orl
xlat
fmul
or
dec
jne
call
int
es
ret
mov
cmp
sub
mov
push
jg
cmpsl
fcoms
lahf
dec
mov
sub
ret
orl
pop
mov
xlat
dec
ret
and
xchg
sub
push
jae
mov
fildl
xchg
aaa
xchg
dec
in
cmc
dec
and
sbb
imul
inc
jecxz
mov
xchg
out
sub
inc
xor
lahf
fdivp
cmp
dec
loope
push
pop
hlt
mov
mov
mov
mov
je
arpl
add
loop
mov
movsb
cmp
mov
xor
mov
pop
inc
out
cmp
push
inc
pop
ficoms
mov
movsl
iret
faddp
push
jae
psubq
cmp
xchg
sbb
pop
lods
mov
movsl
call
jge
lret
add
add
mov
inc
jle
fbstp
cld
adc
push
icebp
add
insb
xor
mov
ss
pushf
fsin
pop
popa
test
shrb
pop
mov
stos
std
xor
adc
in
leave
out
pop
int
sahf
sub
mov
inc
scas
bound
mov
add
cmp
jmp
pop
pop
je
push
outsb
add
or
and
fidivl
xchg
ds
xchg
mov
push
inc
es
xchg
imul
bound
mov
repnz
cmp
sub
fldz
popa
xchg
dec
mov
in
pop
out
popa
xchg
mov
shlb
sbb
int
ljmp
insb
cmc
jge
xchg
pop
push
imul
or
lods
and
sbb
in
add
fwait
mov
jo
fisubl
dec
push
mov
dec
inc
cmp
mov
pop
addr16
roll
stos
and
repz
cli
mov
xor
jns
mov
sub
cmp
xchg
divb
mov
adc
iret
sub
adc
and
js
nop
rcrb
add
mov
test
mov
or
and
pop
scas
push
imul
pop
loopne
test
pop
leave
dec
xchg
les
test
adc
nop
sbb
test
rorb
jecxz
fdecstp
dec
lret
sti
cmp
mov
sbb
and
cld
sub
mov
out
ds
daa
or
pop
jmp
orb
pop
aaa
sub
dec
fbld
cmp
pushf
or
roll
jnp
test
hlt
stos
push
inc
sbb
in
push
insb
dec
sub
in
xchg
sbbl
stos
int3
inc
jp
pop
movnti
xchg
push
shl
lcall
mov
and
das
out
or
enter
jne
std
inc
mov
dec
outsb
pop
sub
aad
fsubl
fnsave
movb
dec
out
inc
call
dec
pop
ds
jle
scas
mov
xchg
xor
arpl
xchg
pop
sub
jle
rol
sub
xchg
shlb
fbld
cmp
test
xchg
call
mov
add
or
jmp
mov
xchg
push
fidivl
mov
imul
xor
push
sti
xlat
inc
and
ds
into
xor
hlt
out
xor
fsubl
cmp
or
sub
mov
sbb
or
or
fnstsw
hlt
in
adc
sar
sbb
mov
dec
outsb
jecxz
add
ss
pop
shlb
xor
out
mov
xor
xlat
adcl
adc
lock
mull
aam
ret
push
test
push
repz
adc
xor
in
cmp
jmp
pushf
stc
ljmp
stc
push
js
cmp
je
adcl
testb
cmp
xor
popa
popa
ja
sbb
call
imul
cmp
lret
jns
in
arpl
pop
mov
pop
jb
pop
mov
xchg
xchg
adc
mov
push
andl
xchg
mov
sbb
sbb
mov
cltd
mov
arpl
leave
icebp
out
inc
pop
sahf
add
repz
dec
sub
mov
push
pop
dec
fdivrl
and
jg
pop
add
mov
andb
push
ss
mov
hlt
mov
or
and
insb
or
add
das
outsb
or
lock
jge
std
mov
fisttpl
outsb
jns
or
sbb
cmp
aas
jmp
push
int
sub
inc
dec
stc
cmp
roll
scas
ja
push
mov
fimull
fcoml
adc
dec
icebp
sbb
imul
lock
filds
sbb
out
loope
ss
aad
lcall
xor
sub
push
sub
movsl
lret
adc
jp
sub
mov
add
dec
push
ret
cmp
stos
test
lods
push
arpl
xor
and
leave
adc
iret
pop
dec
andl
fs
cmp
orb
cs
rcr
inc
mov
and
and
sahf
or
jnp
pop
in
push
adc
mov
or
jle
mov
inc
mov
sub
imul
mov
jo
lods
inc
cmp
rclb
fisttpll
push
sbb
or
rcll
mov
and
add
icebp
es
pop
and
in
inc
out
hlt
mov
dec
adc
test
add
add
pop
in
xchg
sub
insl
daa
out
repz
pop
cmc
and
fstps
bound
sub
add
dec
mov
jo
pushf
sub
cmc
xchg
cli
jb
fildl
ffree
inc
in
rorb
aas
push
add
imul
lcall
push
dec
cmp
cmc
push
lods
or
cwtl
movsb
jge
xchg
sbb
mov
inc
orl
pop
or
pop
stc
mov
pop
cld
add
jmp
sbb
sbb
push
sarl
xorl
dec
insb
adc
idiv
xor
out
mov
ja
dec
stos
pop
ss
ds
mov
or
cmpsb
enter
out
xchg
jb
int3
adc
aad
and
push
mov
xchg
mov
push
repz
mov
xorb
dec
pop
or
leave
push
sbb
cs
inc
add
mull
lahf
jno
cld
pop
sbb
in
fnstenv
ret
out
testb
mov
jge
pusha
mov
and
jecxz
xor
fwait
mov
stos
sub
fistps
or
xchg
int3
and
jp
xor
dec
jmp
xchg
sub
jecxz
movsb
mov
inc
cld
mov
pusha
mov
push
shlb
xor
jnp
push
repnz
cltd
inc
rorl
pop
dec
push
imulb
outsl
add
call
lea
cltd
sahf
scas
adc
push
test
adc
icebp
xchg
jo
xor
pushf
push
dec
test
mov
cltd
mov
cld
push
xchg
int3
add
popa
mov
push
mov
out
pop
cld
dec
lods
nop
or
xchg
aad
shlb
lcall
je
jecxz
insw
je,pt
aas
mov
in
out
xor
sti
pop
addr16
push
cli
pop
pop
gs
jle
push
sbb
pop
fcompl
xor
or
push
dec
jmp
les
push
cmpsl
xchg
in
mov
mov
or
cltd
jne
sub
test
cmpsb
mov
std
sbb
mov
repnz
data16
icebp
iret
sbb
adcb
push
or
lds
idiv
pop
add
or
out
sahf
repnz
push
dec
mov
xor
dec
stc
jae
out
je
sahf
or
dec
xchg
mov
jl
std
sbbb
push
mov
or
rcrl
xchg
aam
mov
lods
out
cmc
lds
mov
roll
lcall
andl
cmp
lock
or
sub
out
xor
in
mov
push
lods
out
incb
scas
push
push
push
push
cld
pop
int
cltd
std
add
push
cli
adc
popa
dec
movsb
dec
push
lods
push
loopne
sbb
sub
jno
push
imul
mov
pop
or
jnp
rol
aas
test
pop
fistpll
pop
xchg
sbb
pop
sbb
lretw
pop
xor
pop
imul
and
nop
cmc
pop
xchg
test
leave
sub
add
lds
adc
les
fwait
and
ficoms
or
gs
jnp
mov
jns
sub
hlt
mov
ljmp
fwait
jl
sbbl
rolb
mov
movsb
jno
cmc
ljmp
mov
push
enter
inc
cld
mov
aaa
fst
cmc
popf
ficoms
cmc
fsub
aad
xchg
std
dec
insl
xchg
and
mov
pop
jae
in
push
mov
pushf
adc
jge
fnop
int
pop
mov
or
out
repz
aaa
lret
add
into
pop
shll
or
or
subl
push
add
fwait
fwait
dec
sbb
ljmp
xchg
jmp
movsb
inc
add
out
dec
rcl
gs
es
push
jnp
stc
out
push
cs
xchg
pop
subl
inc
jo
sub
xchg
inc
mov
dec
shlb
cmp
imul
jle
fsubrs
ret
roll
repz
in
lods
test
mov
loopne
in
sub
pushf
clc
mov
push
leave
les
and
jno
adc
or
ljmp
xchg
mov
jecxz
push
in
inc
push
sub
push
jo
out
mov
sbb
jp
test
ret
adc
movsb
inc
sbbb
fcmovbe
fwait
add
or
sahf
xchg
or
cs
repnz
and
jae
movsb
out
lahf
or
fstpt
insb
dec
pop
lret
push
mov
xchg
es
mov
jne
push
aas
xor
cmpsb
fchs
mov
push
and
mov
and
mov
jg
insl
xchg
jge
fwait
popl
jmp
mov
loope
xchg
mov
cmp
sbb
xor
jge
inc
adc
inc
adc
test
jp
dec
cmpsl
clc
adc
rorb
fsubs
xchg
fmuls
dec
jge
pusha
adc
in
mov
push
into
les
xlat
aas
dec
xor
jl
cmp
inc
cmp
push
mov
out
idiv
lods
loop
sbb
pop
and
test
or
fsubl
inc
imul
push
orb
repz
sbb
and
int3
or
loop
mov
andl
or
fwait
push
adc
scas
pop
add
dec
outsl
lea
pop
scas
in
inc
lahf
out
mov
cmpl
xchg
les
dec
inc
dec
or
sub
roll
sbb
insb
cs
mov
push
movsb
xchg
jge
leave
dec
xlat
fs
js
mov
or
out
push
iret
lods
xchg
or
fstps
ss
clc
ret
je
fnsave
hlt
push
mov
or
mov
adc
jmp
int3
insl
adc
dec
inc
aas
lahf
xchg
mov
cmp
cmp
mov
mov
shrl
sti
fstpl
lret
imul
sarl
bound
fs
cmp
divb
xlat
pushl
sub
out
aaa
add
jge
sarl
lret
inc
jne
shr
pushl
std
lea
jae
xchg
inc
rcl
inc
fwait
xor
mov
dec
push
loope
out
arpl
sub
out
cmp
mov
repz
test
add
iret
call
pop
push
jle
loope
mov
sbb
ljmp
in
mov
bound
imull
leave
js
test
mov
ret
dec
addr16
add
shrb
xchg
hlt
mov
adc
xor
rcll
dec
stc
push
ljmp
pop
pop
sub
int3
pop
mov
sub
mov
fiadds
xor
and
divb
fildll
jne
cli
push
lcall
stc
movsb
pop
jge
shl
rcl
jnp
sub
ror
mov
int
mov
mov
sarl
out
sahf
arpl
mov
icebp
add
push
nop
pop
mov
repnz
and
hlt
aad
sbb
ret
stos
loope
xchg
or
xchg
adc
adc
jg
push
dec
inc
or
jb
outsb
rclb
push
test
push
aas
xor
mov
push
pop
xor
sbb
movsl
pop
mov
mov
icebp
cmc
sub
adc
jnp
movsb
mov
out
sahf
mov
enter
out
mov
pushf
sbb
xlat
daa
sbb
fs
lcall
pushf
test
adc
jnp
lock
out
std
roll
addb
xor
inc
mov
divl
xor
int
adc
cmp
outsb
inc
pop
inc
push
push
mov
jo
inc
and
xor
and
ljmp
mov
dec
sti
dec
pusha
ja
fidivrs
iret
or
cmp
sarl
add
and
xor
dec
nop
sub
xor
cmp
das
xor
std
add
push
fpatan
sbb
aas
push
cmp
mov
mov
test
shrb
or
test
jl
xchg
test
std
imul
cli
mov
sub
in
lcall
loop
lea
ficoml
mov
sahf
jb
cli
pop
mov
lret
les
adc
test
je
adc
loop
into
xorb
or
leave
mov
mov
fsubrp
enter
fldpi
ljmp
out
and
inc
arpl
xchg
push
fs
in
mov
pop
out
nop
shlb
xchg
sub
scas
les
mov
jno
adc
ljmp
es
add
mov
cld
push
pushf
lea
mov
jno
mov
and
mov
repnz
sub
lods
pusha
push
mov
adcl
das
inc
and
dec
pop
cmp
pusha
imul
stos
decb
jae
or
das
arpl
imul
leave
cmp
and
clc
mov
xchg
sti
repz
js
loope
lret
xchg
push
jg
xchg
xor
js
ret
jne
and
add
dec
push
dec
insl
popa
loope
dec
xor
push
inc
and
push
js
mull
xor
sub
mov
push
jnp
mov
cmp
add
push
pop
dec
iret
scas
add
out
pop
subb
js
mov
pop
inc
fnstenv
push
jmp
mov
add
xlat
inc
loopne
sbb
pop
cli
nop
stos
add
bound
and
packssdw
imul
xchg
jb
jne
mov
out
pop
push
mov
stc
fld
fdivrp
push
mov
sbb
test
ljmp
mov
xor
mov
lret
daa
lock
adc
fiadds
call
test
mov
pop
push
jae
mull
mov
negl
fbstp
mov
and
cmp
fstl
jmp
test
jns
xchg
mov
out
sti
jmp
push
xchg
hlt
je
and
jae
jge
fwait
loop
adc
push
inc
int
jb
outsl
imul
ds
imul
inc
lahf
pop
pop
into
add
sbb
push
mov
stos
das
imulb
out
push
push
aas
dec
aam
jp
push
aad
or
xor
jne
imul
xchg
leave
adc
cmpsb
mov
mov
xlat
scas
mov
jge
and
dec
popf
mov
inc
das
test
out
repnz
mov
xchg
cmc
lea
or
xchg
shll
mov
addr16
or
sub
sbb
jle
or
arpl
sbb
imul
test
cmp
pop
orb
push
insb
mov
pusha
imul
repz
scas
cmp
inc
sub
push
pop
push
mov
stos
sbb
movb
hlt
in
loop
xchg
in
add
dec
mov
pop
cld
rclb
jbe
xor
sti
xchg
mov
mov
insb
dec
test
mov
lcall
xlat
push
xchg
cmp
stos
jne
xchg
inc
pop
js
xchg
xor
xor
pop
sbb
iret
enter
mov
xor
xor
mov
or
loopne
mov
sub
sub
and
icebp
decl
or
out
add
sbb
xor
insb
dec
dec
inc
pop
iret
sahf
lahf
aaa
mov
jns
xchg
test
pop
adc
pop
inc
sbb
jo
sarb
and
out
jecxz
addr16
or
pop
fldcw
fs
scas
inc
out
sahf
push
mov
mov
andl
pop
mov
shll
out
je
sbb
dec
pop
ljmp
dec
mov
lock
inc
fdivs
inc
cmp
in
mov
fldenv
lret
sbbb
add
roll
out
jbe
xor
shrb
mov
pop
cmpsl
fistl
or
mov
ret
adc
xor
lds
pop
sub
push
xchg
enter
pop
inc
xor
xchg
pusha
and
or
cmp
insl
popa
nop
jae
mov
fisubrs
out
inc
inc
subl
pop
push
and
in
add
pusha
test
dec
lahf
call
imul
and
add
xor
add
ljmp
outsl
or
mov
fbstp
ja
pop
mov
fnstenv
cmpsb
mov
aam
shrb
cmpsl
xchg
repz
or
adc
xchg
cwtl
sub
les
js
cmp
stos
into
out
test
mov
outsl
and
xchg
sbbl
push
jo
rclb
nop
orl
cmpsb
mov
push
jb
xchg
ret
rolb
adc
ja
cltd
adc
xchg
scas
mov
push
or
sti
ret
push
push
dec
xlat
bound
cmpsl
data16
hlt
ret
lcall
inc
lahf
in
or
pop
inc
lret
imul
jbe
fwait
push
rcrl
sub
sub
test
std
fistpll
inc
mov
fimull
xchg
stos
es
lcall
out
xor
xlat
mov
lods
les
dec
aas
int
xchg
sbb
push
bound
not
sub
xor
and
movsb
pop
push
push
add
sbb
xor
fmul
sub
xchg
xchg
clc
inc
aam
mov
jb
and
imul
adc
inc
loope
out
add
loopne
ret
sbb
jl
and
xchg
add
movsl
and
icebp
mov
test
pop
loopne
push
outsl
pop
lds
jns
lcall
cmp
lret
add
std
imul
fisttpll
cmp
fsubrl
mov
lret
mov
xor
in
mov
mov
cmc
mov
cmp
jno
or
sub
push
push
ficompl
or
jo
pop
pop
sbb
sbb
jne
dec
mov
mov
lcall
and
dec
mov
add
jle
jl
jmp
aaa
xchg
and
test
and
ljmp
mov
jp
mov
aam
add
sbb
push
ret
rep
xchg
sub
pop
ret
and
or
shlb
pop
cmp
enter
vhsubps
add
mov
xor
jnp
mov
xor
shlb
lcall
mov
shll
daa
jmp
out
add
sbb
ss
je
in
int3
in
fwait
push
test
and
shlb
xor
les
dec
fwait
mov
push
jg
mov
cmp
pop
lahf
mov
lcall
xor
xchg
and
mov
cmpl
test
roll
sub
lret
rcll
xor
lea
cltd
dec
sti
pop
ljmp
shll
sbb
adc
xor
push
dec
push
adc
outsl
add
fsubrp
inc
sub
adc
push
ficoml
fidivs
jns
pop
fstps
mov
mov
in
in
ss
sub
arpl
inc
adc
pop
sub
mov
xchg
test
add
test
inc
cmp
mov
jnp
out
jno
cmpsb
xor
call
fdivs
adc
movsl
or
in
xor
call
pop
xchg
xchg
pop
out
cmp
fists
xor
push
in
sbb
into
aaa
jo
sbb
sbb
jae
cmpsb
cltd
dec
xchg
fnstenv
int
sbb
mov
xchg
std
repz
ret
rol
jg
int3
adc
xor
fdivrs
int
negb
and
jne
outsl
ja
aam
out
mov
push
push
bound
jbe
xchg
rclb
mov
xor
mov
fs
mov
xchg
std
push
in
xchg
inc
fisttpll
jne
repz
mov
insl
dec
sar
mov
ss
pop
sbb
fwait
push
lds
xlat
push
xchg
mov
adc
or
adc
lcall
aam
mov
mov
sub
pop
pop
jne
lods
jp
pop
std
sub
cmp
sub
test
mov
inc
std
out
cmp
push
mov
hlt
dec
push
stos
adc
and
repz
and
cmpsb
jns
iret
icebp
scas
dec
sub
pop
push
cmpsb
in
cld
push
fwait
lock
test
cmpsb
in
fs
js
pop
xor
lods
xor
mov
mov
mov
sahf
scas
push
es
pop
mov
fwait
sbb
jg
mov
das
xchg
repz
sub
hlt
push
je
lds
shl
push
pop
in
fwait
add
pop
loop
pop
rcll
fldenv
lea
or
testl
imull
movsl
sub
adc
loope
rol
xchg
push
bound
xchg
fs
mov
pushf
shll
nop
push
push
lahf
stos
lods
into
fnstcw
cmp
addr16
dec
daa
jp
dec
cld
clc
jno
adc
jnp
enter
fld
arpl
jns
test
arpl
cs
xor
div
not
xor
xor
push
in
out
sti
call
call
aam
adc
pop
adc
outsb
loope
imul
mov
add
xchg
push
inc
mov
dec
xor
jne
or
stc
lods
sub
addr16
mov
cmpsb
push
add
rorl
enter
mov
jl
pop
mov
lcall
ljmp
adc
mov
push
add
cld
sub
mov
xchg
inc
pop
fidivrl
mov
mov
mov
cld
fistl
sbb
and
test
dec
cmc
lea
ret
outsb
sbb
cmp
add
dec
outsl
push
or
adc
in
cli
lods
inc
out
jmp
loopne
mov
inc
cmpsb
daa
lret
cmp
push
aad
insb
or
fstpl
mov
xor
pop
pop
and
push
cmpsl
aad
dec
insl
sub
fnstcw
out
arpl
pop
loopne
mov
cmp
push
pop
hlt
cwtl
loop
imul
mov
hlt
pop
fcoml
int
mov
mov
pushf
call
jne
sbb
push
mov
loopne
cmp
dec
mov
shrl
call
arpl
push
push
stc
test
xor
mov
add
jmp
sbb
jb
test
cmp
imul
mov
push
negl
push
outsl
aad
fwait
or
out
mov
xchg
cs
clc
adc
in
scas
pop
in
mov
push
leave
dec
inc
jnp
inc
lds
adc
ret
push
pop
jae
cli
data16
aaa
add
push
arpl
xchg
mov
add
mov
sub
push
add
daa
sbb
fsubs
add
gs
xor
lret
jae
dec
jp
add
ret
fnstsw
les
clc
sbb
jecxz
sbb
inc
mov
dec
jmp
mov
mov
andb
push
and
pop
and
out
cmpsl
fnstcw
xchg
jge
repnz
mov
pusha
aad
or
push
jle
ficoml
jp
sahf
sbb
push
cmpsl
sub
lcall
xor
aam
subb
and
inc
rcrb
loop
push
jg
push
insb
insb
mov
mov
or
ret
ror
xor
scas
fsubrs
add
out
xor
push
loopne
jnp
dec
mov
out
jmp
and
and
inc
push
mov
je
repnz
jle
pop
dec
mov
movsl
mov
pop
mov
sbb
cmpsb
stos
aam
mov
push
das
cmp
addr16
mov
sbb
push
stc
pusha
mov
mov
loopne
mov
fbld
jecxz
repnz
mov
adc
xchg
mov
push
xchg
into
bound
cmp
cmp
orl
jo
int3
xchg
mov
pop
cmp
sub
push
mov
lds
repnz
nop
lret
cmp
popa
lcall
icebp
stos
push
ret
sub
cmp
fucomi
inc
xchg
adc
popa
jo
pop
mov
ds
adc
movsl
in
popw
addb
sbb
pxor
pusha
pop
push
pop
loop
int3
leave
mov
push
addl
dec
push
cmp
cmpsl
cmp
and
mov
jbe
jb
mov
clc
or
sbb
sbb
jg
inc
hlt
push
imul
int
repnz
in
stc
xor
es
mov
loopw
stos
rclb
xchg
out
icebp
shl
stc
push
jp
adc
cmp
sbb
dec
jle
push
push
lret
shlb
pop
push
imul
xor
mov
adc
dec
int
aaa
mov
sbb
mov
aas
lea
cmp
scas
je
sahf
subl
repnz
mov
pop
js
test
and
add
sbb
cmpb
mov
push
jmp
loope
aad
out
imul
imul
cmp
iret
js
int3
out
jge
sub
and
sbb
xchg
fs
in
pop
inc
frstor
bound
je
movsb
jl
sbb
fsubrp
repz
fistps
push
inc
xchg
pop
int3
mov
sub
jp
and
lock
ja
lock
jne
fstpt
jne
jmp
push
aas
mov
jnp
mov
jo
and
scas
dec
popf
mov
and
cli
sbb
flds
adc
mov
jbe
mov
imul
pop
pop
cmpsb
aad
push
xlat
jbe
bnd
push
outsb
push
rclb
test
mov
adc
fistpl
fiadds
pop
mov
and
push
sbb
add
jge
push
data16
scas
add
add
incb
mov
scas
mov
cmpsl
mov
push
repnz
nop
lahf
pop
xor
loope
pop
mov
inc
flds
notl
movsb
cwtl
mov
inc
pop
inc
mov
adc
repnz
or
outsb
add
fisubs
xchg
adc
clc
es
lods
loop
and
push
iret
xor
cmpsb
aas
xchg
xchg
or
ds
aaa
mov
dec
mov
mov
mov
popa
pop
mov
pop
popf
mov
loopne
clts
lea
int
or
cmpsb
lcall
add
scas
stos
sub
imul
das
lret
jno
popa
xor
hlt
xchg
std
and
iret
stc
aad
xchg
fisubrs
pushf
jnp
mov
xlat
jp
fidivs
push
jmp
stos
and
xchg
adc
adc
pushf
loopne
dec
jp
imul
pushl
sbb
ljmp
in
incl
cwtl
push
xor
cmp
or
xchg
push
jnp
test
aad
dec
and
cwtl
ret
mov
notb
pop
imul
lret
outsb
pop
shll
xchg
pop
mov
sbb
or
in
jb
rolb
sub
out
ss
and
and
pop
incl
scas
pop
ljmp
in
cmc
xchg
mov
ret
test
xor
mov
insl
std
clc
push
in
mov
jge
daa
mov
jbe
adc
lock
cmc
dec
and
xchg
xchg
jp
data16
jle
sahf
ljmp
ja
and
cmp
cmpsb
test
cld
or
add
aam
addl
mov
jecxz
pop
adc
mov
fwait
cmp
pop
iret
loop
xorl
sbb
movsb
add
push
mov
inc
outsb
add
mov
test
sub
xorb
scas
dec
imul
shlb
mov
fildl
add
xchg
jl
pop
das
scas
and
stos
sub
cmc
xor
lcall
inc
xor
mov
pop
int3
pop
in
mov
or
cwtl
xchg
or
pop
cmpsl
jge
outsb
or
cmp
out
enter
dec
push
xor
aas
arpl
xchg
cmp
mov
xchg
xor
xor
xor
les
pusha
cmpl
add
mov
fbld
int
mov
sub
mov
in
iret
movsb
mov
sub
and
cmp
jge
jmp
push
nop
jbe
sbb
mov
lods
sar
add
loop
jns
stc
pop
mov
mov
mov
pop
sbb
or
xor
ror
fs
cs
jge
jecxz
pop
and
call
loop
jmp
mov
rcl
loopne
or
rorl
fstps
out
nop
movsb
push
daa
dec
bound
mov
jmp
jb
adc
push
gs
jbe
out
pop
pop
cmp
cli
pminub
imul
sbb
xchg
test
pop
xor
and
int
or
or
fwait
outsl
or
and
xor
pop
add
jge
cmp
lret
mov
sub
ds
daa
sub
fnsave
stos
inc
test
or
lret
xor
repz
pop
sbb
call
mov
jmp
jo
seta
push
insb
dec
xorb
ret
pop
fs
shll
xchg
bound
mov
iret
stos
dec
bts
dec
js
jecxz
gs
imul
fidivrl
mov
lock
into
push
inc
mov
and
cmc
xor
dec
and
enter
test
cmc
pop
push
insb
cmp
js
pop
jno
xchg
mov
clc
adc
sub
out
sbb
gs
add
adc
nop
aad
push
or
sbb
xchg
iret
jecxz
push
jns
loope
pop
js
pop
and
lret
outsb
sbb
inc
pop
mov
mov
cmp
ljmp
mov
clc
xchg
pop
fldl
push
xchg
filds
divl
aad
sub
xchg
xchg
lods
inc
dec
push
les
pushf
mov
outsb
aaa
leave
pop
repz
decl
push
addr16
insl
test
push
mov
sub
xor
andl
idivb
jp
ficompl
fnstenv
imul
mov
dec
cmp
movsb
aad
loopne
pop
scas
ret
mov
repnz
dec
testb
mov
cmp
rolb
mov
pop
fstps
hlt
sub
inc
xchg
jne
adc
dec
mov
test
movsl
es
out
xor
or
mov
rcrb
sbb
mov
add
in
push
add
xor
push
in
push
jne
leave
mov
inc
call
jns
push
sbb
cmp
xchg
dec
in
mov
pop
inc
sbb
ret
fwait
inc
nop
enter
into
add
imul
leave
jmp
mov
mov
add
lcall
fwait
test
sti
dec
add
pushf
and
jmp
fnstcw
dec
sbb
cltd
pop
inc
rol
adc
in
dec
test
push
mov
sbb
pop
lcall
or
xchg
jbe
sti
sarl
mov
inc
dec
sbb
add
xchg
pop
xchg
xchg
inc
imul
data16
sti
cs
inc
pop
push
cmp
insb
shrl
push
stos
inc
sbb
sbb
test
icebp
sub
fimuls
call
xor
cmpsb
notb
lods
or
bound
push
adc
adc
pop
add
mov
arpl
mov
jmp
sbb
mov
icebp
ja
jb
cmpsl
movsb
loopne
jecxz
mov
mov
cld
xchg
sbb
inc
mov
sbb
push
cmc
xchg
xor
test
lods
mov
aam
push
mov
daa
jg
add
push
gs
or
jnp
mov
scas
jmp
adc
pushf
data16
xor
in
jge
inc
or
push
pop
test
stc
outsl
ljmp
outsl
loope
rcll
sbb
test
test
jb
out
subl
push
hlt
ret
mov
mov
pop
add
fld
popf
pusha
test
or
or
add
sub
scas
movsl
cli
in
ljmp
push
and
adc
push
std
dec
test
xor
fs
mov
mov
inc
push
lods
aaa
outsb
or
add
jae
xor
pop
hlt
xchg
mov
sti
add
imul
add
mov
mov
xchg
adc
push
sbb
ds
sar
inc
inc
inc
or
rcrl
push
fidivs
mov
or
inc
fs
xor
jecxz
mov
jae
cli
movsl
subb
push
push
or
fdivl
mov
test
je
incb
subl
mov
mov
in
dec
mov
mov
jg
mov
loop
pop
mov
lods
data16
fcmove
mov
lock
inc
sub
ret
testb
shll
and
loopne
iret
bound
or
stc
dec
cmp
test
jmp
jne
jns
cld
or
imulb
push
pop
mov
scas
es
sbb
stos
xor
jmp
and
es
insl
jg
jl
fistpll
pusha
cltd
sub
cmp
stc
loope
aas
sbb
sub
std
push
in
xchg
inc
xchg
push
xor
fisttpl
loopne
cmpb
ss
inc
sub
or
push
cwtl
sub
push
xor
jle
pop
xchg
push
rolb
xchg
in
and
mov
lock
sbb
cmp
add
ss
mov
push
jb
jle
outsb
cmp
or
stos
xchg
add
lret
push
lods
jb
fwait
sbb
dec
adc
notb
lods
js
loopne
push
lock
xor
les
jns
mov
sbbb
test
cmpb
sbb
cmp
test
cmp
pop
outsl
rcrl
mov
jo
jns
push
cmp
mov
jl
pushf
out
mov
mov
divb
jae
add
sbb
cmc
mov
into
dec
xchg
popf
sbb
pop
pop
hlt
and
das
pop
addr16
mov
mov
filds
jl
lea
jg
bound
xor
sub
ror
lcall
jecxz
adc
push
iret
adc
rolb
or
loop
add
mov
add
mov
and
jecxz
cmpsb
mov
cmpsb
dec
enter
fwait
xor
sub
push
adc
adc
stc
lcall
sbb
or
xchg
and
sahf
push
jle
clc
sub
imul
mov
bound
sub
sbb
das
xchg
dec
push
popf
loopne
adc
jae
mov
mov
popa
xor
pop
jo
outsl
nop
mov
iret
adc
mov
fs
pop
js
sbb
fistpl
test
lret
mov
das
outsl
into
js
cmpsb
xchg
pop
mov
push
jge
xchg
jmp
or
pop
int
push
adc
div
mov
enter
push
push
daa
dec
mov
ret
sbbl
testb
dec
xchg
shll
aas
shlb
lcall
sbb
in
inc
adc
jecxz
pop
fists
je
push
xor
xchg
jle
sahf
in
lea
out
js
mov
fwait
xchg
mov
pop
cmp
dec
clc
xor
test
push
jle
adcl
test
sub
fld
clc
inc
pop
lcall
cmp
lock
js
mov
outsb
ja
xor
mov
sub
fdivrl
dec
jge
pop
mov
test
aas
arpl
aam
div
push
hlt
xchg
sbb
das
or
jg
xchg
add
pop
mov
imul
mov
inc
cli
and
scas
popa
mov
push
and
jne
daa
xchg
fadds
pusha
pop
push
stos
xchg
movsl
aad
pop
add
pop
push
gs
adc
xor
xor
xchg
dec
sbb
add
insl
adc
pop
rcll
mov
aad
test
mov
ljmp
pop
aam
add
jle
cmpsb
add
shl
pop
and
int3
lcall
jmp
push
in
and
scas
mov
or
lahf
js
js
std
lock
mov
mov
icebp
add
sahf
or
dec
shrb
push
mov
xor
imul
cmp
pop
xchg
add
push
ja
mov
jmp
jb
andl
sbb
hlt
adc
mov
cltd
hlt
inc
mov
jmp
enter
mov
jae
jmp
jmp
cmpsl
lret
push
flds
aas
aam
sub
dec
les
jno
push
icebp
add
insb
cltd
inc
sbb
insb
xorb
cmp
mov
les
and
inc
repnz
cmp
or
jg
adcb
test
in
imulb
mov
push
mov
mov
enter
push
pop
sbbb
push
adc
mov
jge
push
idivb
stc
adc
pop
rol
and
xchg
cmp
loop
std
xor
pop
dec
test
mov
aad
dec
sub
cmp
push
addr16
add
jecxz
cmp
jl
ds
cmp
lahf
mov
pusha
roll
and
call
mov
jo
inc
lret
in
imul
fsub
cmp
imul
jmp
mov
sub
lock
dec
xchg
push
sub
sahf
push
insb
stc
mov
hlt
mov
push
and
std
mov
sarb
rcrb
movsb
jmp
inc
pop
mov
insb
sbb
popa
insl
fisttpll
das
in
not
mov
in
inc
scas
ss
mov
aad
inc
mov
sahf
mov
fldenv
push
shrb
pop
lret
loop
repz
sbb
jmp
shlb
imul
movsl
outsb
in
daa
mov
xchg
into
mov
lods
pop
mov
push
test
push
and
push
pop
or
xchg
arpl
jns
cmc
adc
hlt
inc
cmp
enter
xor
jmp
testl
int3
cmp
jmp
add
dec
inc
sbb
mov
stc
sbb
enter
orl
sub
cmp
fwait
jl
sbb
loopne
xchg
sbb
and
fstpl
cltd
cmp
adc
xchg
cmp
cld
cmp
dec
insb
inc
les
or
xchg
and
xchg
jo
pop
cltd
push
inc
mov
sub
outsl
dec
scas
push
rorb
mov
in
xor
cltd
add
adc
out
loop
add
test
sarl
hlt
or
pop
jl
or
jo
mov
pop
cwtl
inc
dec
test
push
or
hlt
inc
out
mov
cmp
lock
das
pusha
mov
pusha
inc
add
outsb
ds
mov
xchg
cmp
xlat
or
mov
sub
jecxz
les
jg
mov
cld
fs
cmp
pop
adc
and
cmc
xor
push
rorb
mov
lock
movsl
lret
loopne
inc
mov
in
pop
stos
pop
and
jmp
lods
lods
jbe
sahf
cltd
push
mov
ret
fbstp
dec
cmc
inc
and
fildl
and
inc
jmp
add
pushf
inc
add
cwtl
shlb
ss
sub
xchg
dec
add
das
in
add
xor
adc
mov
shrb
in
sbb
flds
jge
loop
mov
dec
outsl
sbb
int3
sbb
adc
mov
pop
test
sbb
loop
gs
repnz
xchg
das
add
jg
mov
xchg
ret
hlt
mov
ret
bnd
setae
lea
test
adc
shll
push
les
es
fwait
fwait
sahf
int
loop
jns
jl
in
xchg
jne
pusha
imul
add
mov
inc
fdivrl
das
xor
enter
mov
jne
xchg
jb
jne
inc
mov
hlt
stos
daa
push
fs
out
pop
cs
xchg
cmp
insb
and
or
pop
xchg
aam
mov
mov
inc
dec
aam
scas
cmpsl
xchg
addr16
fcompl
inc
mov
xlat
bswap
rorl
imul
in
icebp
xchg
mov
stos
pushf
les
and
cmpsl
mov
fwait
or
sbb
mov
out
jnp
je
mov
in
hlt
or
cmpsb
xor
mov
fistpll
jmp
dec
cmc
sbbb
rorb
jae
aad
stos
or
push
notb
int3
aaa
and
and
jns
dec
out
cltd
jb
subl
sti
lea
jb
pop
sbb
xchg
push
or
out
xchg
sbb
sbb
stos
test
push
add
or
je
jns
push
leave
aam
pop
mov
cwtl
mov
xor
pop
lds
popf
aad
add
inc
pop
into
fdivr
negl
mov
mov
sbb
orl
jp
aas
test
mov
push
js
std
xchg
cmpsl
repnz
out
pop
insl
jmp
jo
xor
mov
addr16
popf
daa
cmp
mov
or
dec
mov
daa
lret
loop
js
cmc
inc
mov
aad
mov
in
faddl
test
lea
dec
push
mov
aaa
popa
test
fnstcw
pop
ret
test
loope
dec
push
scas
out
xchg
fldl
imul
and
jmp
cmp
mov
inc
ret
adc
dec
push
xor
rolb
mov
sbb
inc
pop
rcll
clc
nop
pandn
ds
inc
mov
iret
adc
cmp
add
mov
mov
mov
adc
sti
mov
sub
dec
enter
lret
pop
stos
or
and
sbb
adc
adc
lret
xor
jecxz
cs
imul
pop
sub
inc
aaa
push
mov
call
sbb
clc
cmp
xor
in
inc
rcrl
sub
les
into
ret
cmpsl
aaa
insb
adc
sub
mov
xchg
ljmp
lods
xchg
push
inc
lods
in
cmp
repnz
pop
negl
leave
jg
or
jns
loop
lret
cmc
js
mov
add
cmc
mov
mov
ss
loop
jns
ss
adcb
and
or
fwait
bound
cmpl
mov
stos
in
idivb
out
mov
sbb
iret
or
imul
push
fwait
xor
lret
stc
and
adcb
out
dec
outsb
pop
imul
push
stos
pusha
lods
aam
add
and
cmp
lock
mov
mov
or
mov
pop
adc
add
out
in
xchg
fyl2x
je
popf
dec
popf
je
inc
cmpsb
loope
loope
mov
les
add
addb
jae
push
shlb
xor
stc
or
jns
xchg
stos
xchg
addr16
cmp
sub
je
fiadds
xor
adc
ret
pop
popa
and
inc
pop
inc
in
pop
jne
imul
mov
movsl
int3
in
jnp
fstpl
lret
das
push
hlt
in
enter
mov
sub
or
adcl
sub
pop
fisubrs
repz
mov
pushf
lds
addr16
scas
scas
movsl
cmpsb
xor
jp
sub
mov
xchg
xchg
or
mov
adc
jb
or
daa
sbb
decb
mov
mov
or
cmp
cmp
test
add
cmp
pop
test
xchg
xor
jns
pop
imul
bound
dec
mov
jle
fdivrp
mov
ret
or
add
out
sar
or
addr16
mov
clc
cs
mov
lds
push
xor
cmpsl
das
sbb
jne
lea
ja
mov
jle
mov
pop
ljmp
into
add
xor
aas
add
jae
lods
cmp
jae
jle
xor
insb
stos
cmp
test
cmp
pop
pop
dec
stc
and
sub
jle
jl
loope
mov
mov
and
frstor
pop
inc
lods
add
jae
arpl
push
pop
sar
or
lahf
xchg
sahf
mov
pusha
iret
in
fisubs
clc
mov
lret
das
movsl
pop
adc
mov
in
fistps
push
cmp
outsb
mov
jne
hlt
movsb
test
xor
leave
filds
and
add
lcall
rolb
cmp
mov
aam
cmp
xchg
jmp
aas
stos
stos
jo
jecxz
addps
jecxz
cs
arpl
cmp
test
jp
add
lds
movsl
push
pop
insl
test
mov
push
ss
inc
fiaddl
iret
cmp
shlb
cld
add
loop
aaa
cmc
add
jg
mov
cmc
loopne
mov
cmp
xor
movb
xchg
pop
lds
or
aaa
in
dec
cmp
adc
outsl
push
dec
mov
iret
das
insb
push
add
adc
fs
loopne
icebp
mov
and
test
or
cmp
shrl
pop
ss
dec
shrb
sbb
add
ficompl
push
and
arpl
cmp
cli
pop
jns
push
stc
std
cmp
mov
sub
cwtl
push
pop
int
mov
popa
cli
jg
hlt
pop
inc
xor
pop
movsb
xchg
pop
mov
jns
and
pop
push
xadd
out
das
popa
mov
cli
pusha
mov
lods
xor
orl
mov
xchg
outsl
inc
mov
sti
push
std
je
mov
and
sub
rcrb
lahf
jb
fadds
fmuls
push
fmul
lods
jp
mov
mov
add
dec
push
jge
mov
dec
ds
sbb
loopne
shll
push
push
inc
in
jecxz
jo
and
leave
shrb
xchg
push
in
jmp
data16
insl
jnp
inc
les
cmp
cmpsb
fstps
pop
pop
dec
mov
and
add
inc
mov
icebp
xor
cmp
fldl
out
dec
cld
sbb
fwait
inc
ret
inc
mov
xorl
jmp
std
pop
pop
pop
lea
push
jne
mov
shll
out
cmpsl
into
je
fmuls
fiadds
mov
and
add
fiaddl
cmpb
fisubl
inc
adc
mov
icebp
mov
jecxz
xchg
pop
push
adc
pushf
sahf
pop
cltd
ljmp
push
mov
mov
add
ljmp
sti
in
add
aam
in
popa
mov
cld
mov
adc
into
and
ret
pop
or
push
scas
loope
cmpb
testb
in
push
fsubrs
mov
xchg
test
and
js
hlt
push
shrl
push
sbb
add
les
imul
inc
leave
repz
adc
sbb
pop
sbb
dec
sub
scas
dec
add
out
cmp
mov
fcomp
fnop
sub
addr16
movsb
push
out
hlt
adc
push
je
add
mov
mov
cmc
jns
sbb
push
test
js
pop
daa
sar
fbld
sbb
add
cmp
xor
icebp
mov
mov
fsubrp
imul
test
data16
repnz
daa
pop
mov
jne
test
or
mov
lcall
mul
sti
shrb
mov
cltd
or
repz
cmp
outsb
pop
inc
push
mov
inc
and
sub
lahf
ss
dec
test
cmova
dec
jne
fs
jno
mov
fistl
or
ja
daa
mov
scas
inc
xchg
dec
inc
fs
adc
or
adc
ret
pushl
mov
addr16
jle
pop
jmp
fldl
push
call
imulb
jg
pushf
push
push
enter
btc
icebp
call
dec
out
cmpsb
mov
insl
sub
inc
test
jnp
push
pop
cmpsl
mov
pop
fcomps
shlb
inc
push
xchg
loopne
mov
adcb
fsubr
mov
dec
mov
inc
xchg
cwtl
sbb
ret
ljmpw
fucom
xchg
ljmp
xor
cmp
add
lods
dec
cwtl
jo
jecxz
dec
sbb
pop
nop
cmp
jae
and
idiv
dec
std
sbb
ja
aam
jmp
mov
pop
mov
aam
mov
ss
movsb
or
outsb
dec
mov
fcoml
mov
lea
push
ss
sub
pop
jp
fwait
rorl
imul
jns
leave
sub
icebp
jecxz
cli
insl
sbbl
lcall
pop
or
adc
movsl
arpl
rorl
or
int3
sub
test
insb
fildll
aas
sub
cld
xchg
fmull
sahf
shll
cmp
mov
mov
jmp
sbb
dec
stos
insl
fsts
cmc
mov
push
out
jbe
addl
or
jne
loopne
jle
pop
inc
jle
xchg
ds
pop
lret
out
push
shl
outsb
mov
lock
cmp
inc
mov
fstl
sahf
sbb
pop
mov
scas
dec
xchg
lret
lret
pop
cltd
ret
repz
xchg
xchg
xchg
add
fsubr
jns
xchg
sub
mov
inc
pop
je
sub
mov
cmp
xor
mov
les
inc
test
mov
push
pop
push
sub
cltd
sbbw
sub
fdivl
shr
add
cld
inc
ret
jl
jg
int3
lods
xor
pop
fists
out
bound
pop
jg
cmpsb
xor
stc
rcrb
mov
imul
cmp
leave
push
mov
lock
shll
stos
dec
aam
add
xchg
ret
gs
out
and
loop
add
addr16
mov
cmp
out
pop
push
les
aas
inc
cmpsb
cmp
xchg
aas
lds
stos
call
aad
popf
int3
push
pop
xchg
inc
sub
sbb
jl
nop
push
sub
add
repnz
adc
inc
pushf
int
cli
or
flds
xchg
fisubs
iret
inc
pop
pop
dec
and
push
in
inc
fdivs
fimull
arpl
cs
int3
mov
int3
test
cmp
sbb
movsb
scas
sbb
pop
pop
sbb
pop
fcompl
xchg
dec
mov
outsb
push
fs
sbb
rolb
sbb
dec
dec
int3
test
pop
xlat
mov
js
push
jecxz
lods
xchg
iret
scas
mov
pop
insl
jg
adc
xor
dec
syscall
sarb
adcb
inc
pop
xor
mov
pop
iret
dec
adc
pusha
pop
lods
lock
incl
dec
fnstenv
test
aad
push
sbb
jae
pop
sti
in
pop
outsl
dec
in
jb
cmp
loopne
stos
aaa
jno
mov
xchg
jle
test
jns
mov
xor
jmp
jge
nop
lods
int3
ret
adc
repz
lret
adc
cltd
repz
scas
stos
test
rcrl
mov
sub
shll
mov
push
pop
in
or
jns
movsb
subl
mov
lahf
call
or
mov
shll
iret
les
mov
xchg
dec
out
mov
push
dec
jl
adc
out
das
xlat
out
aad
subb
aad
popa
je
add
pop
and
inc
sub
insb
scas
adc
xor
sbb
or
clc
out
jmp
sbb
outsl
icebp
fldl
repnz
pop
aam
sub
push
bound
je
adc
hlt
loopne
sub
and
inc
push
enter
mov
cmc
and
in
lock
jae
xorb
iret
pop
pop
mov
xor
and
jp
bound
and
mov
xchg
xor
std
adc
fisttpll
movsb
out
ret
std
mov
adc
xchg
addr16
mov
pop
clc
and
out
int3
jo
mov
imull
sbb
aad
repnz
popf
cmp
push
lahf
mov
add
cmp
fs
call
cmp
xchg
or
sbb
or
shl
push
jno
add
dec
dec
xor
int
scas
mov
loop
sbb
dec
adc
icebp
jmp
xchg
add
es
pop
bound
loope
push
jae
fiaddl
fidivl
sub
stos
es
mov
sbbl
nop
mov
mov
mov
jmp
outsb
push
fs
jle
jbe
rcrb
rcll
cmpsb
adc
mov
pop
pop
and
add
mov
sub
dec
roll
xchg
xchg
jno
fsubs
popa
pusha
rorl
xor
mov
xor
xchg
mov
adc
xor
add
ja
adc
pop
lds
clc
cld
mov
xchg
adc
mov
pop
jle
call
aam
sbb
jb
and
xor
xlat
sbb
roll
sbb
pop
cld
ret
pop
xchg
lock
outsb
sub
jo
hlt
mov
lahf
int3
jl
push
dec
lock
js
push
loop
sbb
or
inc
or
cld
ret
adc
sub
xlat
fadd
inc
push
enter
in
adc
inc
in
pop
lods
jge
pop
js
mov
test
stc
ljmp
sub
pushf
stc
cmp
and
daa
movsl
and
je
out
mov
imul
popf
testb
movsb
hlt
je
lods
sbb
push
and
lea
or
sub
cmpsb
std
fstl
andb
dec
out
push
push
xor
mov
ljmp
out
inc
cmpsb
push
jle
cli
jge
push
jge
jmp
push
in
pop
mov
cmp
push
stos
dec
pop
sbb
push
xor
clc
fsts
inc
jae
sub
out
sbb
clc
jbe
pop
xlat
roll
xchg
and
pop
inc
lcall
mov
fldcw
fs
pop
push
sahf
jl
pop
push
les
cltd
bound
mov
or
jno
dec
mov
addr16
or
xor
movsb
and
ret
and
fistpl
lock
jmp
or
movb
pusha
mov
jl
mov
and
lret
int3
ror
mov
cltd
hlt
mov
mov
adc
lea
jne
sbbl
dec
mov
mov
mov
loopne
sub
inc
xchg
mov
enter
sti
add
decl
xchg
sbb
jae
sub
icebp
sahf
sbb
stos
testl
int
fisttpl
jl
push
xor
push
pushf
dec
or
xor
add
and
jmp
mov
lret
sbb
xchg
mov
jge
in
sbb
xchg
mov
addr16
es
or
pop
cld
cmp
loopne
lcall
mov
out
out
cwtl
bound
jno
pusha
sub
adc
xor
test
iret
inc
scas
pop
fnstsw
lret
jle
enter
insl
jo
adc
sub
and
je
das
and
inc
fldl
andl
jae
jnp
inc
inc
jnp
and
stos
pop
cmp
pop
jl
bound
out
jge
stc
arpl
add
loope
aam
jo
insb
and
xchg
or
dec
sub
loop
mov
stos
adc
cmp
mov
mov
test
loop
test
imul
mov
xor
jmp
in
out
daa
jnp
aad
hlt
lea
aam
sti
clc
stos
mov
das
inc
les
nop
test
cld
add
daa
xchg
rcl
inc
cmp
or
inc
popa
sub
cmp
xchg
mov
add
jae
mov
movsl
add
aaa
sbb
aas
inc
std
sub
shll
mov
imul
sub
jmp
cmpsl
jbe
jl
dec
shlb
sub
inc
js
repz
fwait
movsb
push
rorb
or
push
pop
sahf
push
pushl
cmp
dec
call
mov
xlat
add
push
xor
jecxz
xor
jnp
push
cmpsb
ljmp
ficompl
add
cs
stos
mov
xchg
insl
and
and
adc
xchg
cli
inc
adc
test
jbe
sub
cmp
je
and
arpl
pop
aaa
cmp
insb
mov
hlt
mov
aas
push
sub
jmp
pop
jnp
sbb
jle
sahf
mov
jbe
mov
in
mov
mov
jl
xor
imul
mov
xchg
xchg
sbb
push
addb
sbb
roll
cmpsl
int
jb
xchg
push
mov
or
loopne
xchg
or
sbb
adc
adc
jbe
cmp
gs
mov
cmc
sbb
test
dec
mov
mov
pop
jmp
sbb
and
pop
mov
adc
movsb
mul
mov
lock
or
mov
fcomps
adc
or
jle
rcl
fbld
mov
dec
jb
jae
aas
mov
jno
leave
jns
inc
sub
ret
jmp
in
fcmove
out
or
inc
call
into
fnstenv
rcr
into
xchg
xor
fs
repz
into
xchg
mov
mov
mov
dec
sti
jmp
dec
test
movl
add
push
sub
sub
push
adc
and
inc
in
inc
xor
dec
push
push
sahf
mov
mov
leave
hlt
sub
jg
push
xorl
push
adc
nop
cmp
cmp
adc
add
mov
adc
rorb
push
in
stos
jae
cmp
mov
scas
mov
in
out
sahf
sub
sub
xor
negb
mov
fists
and
push
pop
pop
int
mul
loope
ljmp
ror
stos
aam
adc
cmp
loopne
add
xor
dec
ficoms
int3
cli
test
jmp
scas
jae
clc
jl
mov
popa
or
mov
inc
xor
fnsave
dec
pop
pop
jnp
push
mov
xchg
inc
stc
ljmp
out
sub
push
psadbw
pop
push
test
push
stos
mov
mov
movsl
test
cmovb
aas
cltd
xor
or
fldl
cmpsl
scas
sbb
lcall
movsl
adc
pop
push
inc
push
fsub
imul
cmp
mov
dec
clc
fldcw
mov
lods
pop
fbld
out
hlt
popf
and
fisttpll
adc
sti
xor
inc
lcall
sub
mov
mov
fstpl
rolb
clc
mov
es
or
cmp
sub
mov
imull
movl
sbb
aas
jnp
push
hlt
mov
adc
repz
test
jnp
mov
mov
je
stos
clc
xor
imul
insl
dec
add
inc
aam
mov
aas
adc
push
add
xchg
push
jmp
test
mov
inc
push
lret
push
pop
mov
adcl
es
mov
mov
cmp
mov
jge
test
xchg
in
test
mov
adc
imul
xchg
insl
lods
jno
pop
jmp
xchg
cmpsl
jae
mov
xor
ja
clc
out
inc
cmp
lock
addr16
or
imull
lods
pushf
xorb
loop
and
leave
push
stos
and
in
punpckhwd
and
pop
sub
inc
push
xor
dec
jns
and
bound
dec
je
push
loop
sub
lds
outsb
movq
sub
fsubl
mov
fdivrl
and
inc
push
into
xchg
mov
or
jg
inc
das
test
orl
jo
mov
into
or
rclb
jae
jne
sbb
cld
jecxz
leave
xor
idivb
sbb
in
mov
in
mov
sbb
jl
stos
cmpsb
push
mov
aas
imul
push
cli
fwait
shrb
ret
mov
add
adc
dec
push
mov
es
cmpsb
jl
mov
sub
sub
movsb
lret
lret
jp
sbb
add
aad
cmp
xor
push
xchg
xor
xchg
insl
pop
int3
sub
mov
inc
loop
jne
pop
movsl
testl
orb
out
mov
idivb
jbe
mov
and
mov
sbb
mov
stos
mov
test
xor
cld
orl
ja
icebp
rorl
movb
int3
jecxz
mov
shr
adcb
pushl
imull
xchg
or
adc
fisubs
dec
mov
pop
lret
sbb
and
lret
push
rcrb
shrb
push
add
push
jmp
sahf
js
out
and
cli
shlb
insb
pop
stos
popf
pop
mov
xor
in
inc
push
clc
test
icebp
fstpl
sbbb
xchg
stc
pushf
sahf
jmp
mov
sub
loopne
pop
loop
fisttps
push
dec
mov
mov
add
fwait
fs
loop
fwait
mov
repz
sub
xor
dec
lret
xchg
add
mov
sbb
test
je
gs
std
pop
mov
test
call
inc
mov
inc
and
out
xchg
mov
mov
cmp
mov
inc
test
dec
aam
xor
cltd
inc
xor
mov
sbb
pop
pop
and
xchg
cmp
pop
adc
stos
and
adc
mov
adc
cmpsl
mov
sub
scas
mov
adc
loope
dec
in
xchg
pop
lret
jle
sahf
xor
mov
or
mov
or
pop
scas
fdivrs
lahf
or
aad
fs
adc
dec
inc
aam
add
out
das
and
mov
sub
pop
fstl
enter
icebp
or
lods
lods
loope
stc
mov
jg
jl
push
shll
inc
dec
mov
xorl
fcoms
mov
and
pop
xchg
scas
popf
pop
lods
or
cld
mov
mov
push
popa
cmp
sbb
movsl
sbb
push
pop
icebp
daa
scas
js
push
mov
sub
test
fdivl
bnd
and
mov
pop
inc
xchg
xor
jecxz
dec
cmpsl
sbb
sbb
nop
outsb
shrb
add
and
jg
and
pop
inc
mov
insl
loop
sbb
sbb
pop
stc
and
or
adc
adc
popa
push
push
pop
movsl
push
out
push
pop
or
cmp
ss
push
adc
stc
nop
enter
pop
jmp
test
sub
push
stos
xlat
cmp
and
movsl
out
pop
pop
mov
jae
sbb
shlb
xor
jmp
into
pop
push
xor
mov
adc
mov
xor
xor
mov
push
sbb
dec
inc
cmp
pop
push
sahf
stos
pop
shll
xor
push
pop
sahf
insl
sub
pop
hlt
mov
int
sahf
fsts
addr16
pop
cmp
or
lret
lahf
fildl
in
cld
mov
push
ds
cmp
pop
rcll
mov
mov
ljmp
outsb
les
mov
jb
xchg
xor
pusha
adc
les
push
enter
pop
xchg
incb
xor
xor
fsubrl
jae
jb
jge
movsb
fcoml
jle
loopne
out
enter
and
fmul
sub
xchg
cltd
mov
mov
mov
push
pop
subl
sti
std
je
shl
sbb
in
lods
mov
cmp
inc
and
jmp
fisubrl
ret
push
fisubs
sahf
cltd
or
mov
into
testl
add
dec
xchg
sub
adc
sbb
int3
cmp
inc
or
push
pop
push
cmp
xor
mov
loopne
or
jecxz
lcall
mov
pop
cmp
jnp
sub
pop
movsl
test
mov
pop
enter
jmp
or
and
rcl
xchg
fildll
push
mov
add
lret
adc
mov
push
hlt
dec
xchg
sbb
sbb
sar
sarb
in
push
or
push
xor
add
fidivrs
imul
pusha
into
xchg
pop
iret
or
or
cmp
mov
pop
lods
or
pop
shlb
cmpsb
ljmp
push
sub
add
jb
sbb
adc
inc
lret
xor
movsl
jmp
std
and
jle
pop
insb
push
xlat
pushf
ljmp
daa
mov
xchg
jne
mov
divb
clc
push
fistps
jmp
cmp
or
lahf
or
das
dec
mov
arpl
mov
iret
insb
aam
mov
or
aad
jge
and
shl
or
sub
xor
shll
or
scas
mov
add
mov
push
cmp
frstor
push
test
int3
dec
and
push
xchg
icebp
aas
dec
dec
js
mov
ljmp
mov
into
stos
lea
int
and
out
inc
add
mov
sbb
xor
shll
jns
inc
int3
fists
sub
leave
insl
loop
decl
insb
out
jne
dec
ret
pop
xor
inc
mov
inc
shlb
outsl
stos
fisttps
repnz
xor
loope
xchg
mov
or
pusha
pop
pusha
mov
xor
xor
sub
fsubrl
fsubl
and
xchg
les
insb
or
movsb
scas
jp
test
and
addr16
dec
sahf
jae
dec
fsubrl
sub
xlat
lds
idiv
mov
icebp
ja
jnp
jno
mov
ficompl
aam
ss
mov
push
in
out
or
icebp
test
sub
jmp
imul
push
sbb
dec
mov
roll
lds
inc
cmp
adc
outsl
add
dec
sub
mov
jno
call
pxor
push
add
clc
push
in
jo
mov
sub
push
adc
jb
shrb
inc
bound
sbb
adc
inc
pop
es
sub
in
mov
in
dec
jns
popa
scas
sbb
mov
mov
xchg
mov
mov
pop
lods
xrelease
in
pushf
repnz
test
mov
ds
and
adc
sahf
lea
mov
arpl
cmpsl
jp
dec
clc
mov
cltd
push
fidivrl
cmc
outsl
sub
mov
jecxz
mov
mov
xchg
mov
in
jecxz
pusha
pop
dec
dec
ficoml
icebp
add
loope
and
mov
repz
add
adc
in
xor
xchg
pop
rcll
xchg
lret
shlb
cs
aaa
enter
cmpb
push
rcrl
dec
lock
test
in
aaa
rcrb
and
sub
mov
out
lcall
mov
cmpsb
mov
dec
mov
sbb
divl
jne
in
mov
imul
sub
xchg
sti
dec
into
adc
enter
sbb
sbb
sbb
adc
cmp
pop
out
xchg
outsl
daa
into
xchg
mov
insb
mov
scas
jns
stc
fisttps
test
mov
jg
inc
in
imul
aad
cli
pusha
dec
jb
int
gs
addr16
hlt
jae
add
jmp
jae
jns
sub
scas
aam
rol
add
jmp
sub
cmp
xor
cmp
adc
loope
dec
inc
insl
movsl
in
pop
in
imul
dec
clc
fldenv
push
scas
loop
and
or
mov
int
push
ja
int3
push
test
mov
mov
jle
sub
push
negl
mov
cmc
out
push
dec
sub
sbb
popa
cmpsl
shll
bound
addb
mov
xchg
arpl
sub
sbb
aaa
or
jle
push
dec
popa
sarl
sub
insl
xchg
stos
xor
or
push
ret
cmp
jns
in
jle
jecxz
adc
fnstcw
mov
cmpsb
lds
or
mov
test
fnstsw
int
pop
pop
stos
data16
ljmp
data16
jl
sti
push
es
test
scas
arpl
sahf
sbbl
in
dec
mov
mov
xchg
scas
sbb
jnp
clc
or
loop
jecxz
xchg
outsl
in
jge
ljmp
or
fbld
cld
fcoml
jg
out
mov
mov
insb
dec
adc
imul
std
jge
pop
je
inc
mov
cmp
rclb
xchg
mov
sub
fimull
mov
pusha
sti
cmp
pop
cmp
xor
movsb
fdecstp
push
nop
pop
sbb
adc
notl
or
int3
pop
inc
push
xchg
cmpsb
add
sti
out
adc
mov
out
sub
mov
jb
xchg
jb
aad
rclb
push
sub
aaa
es
cmp
sub
pusha
sub
jno
stc
xor
outsl
xor
push
int3
cmp
repz
jle
add
dec
add
mov
push
cwtl
hlt
xor
in
scas
shll
mov
lahf
xchg
add
mov
push
dec
mov
jae
jae
insb
xlat
pop
pop
rcrb
add
adcb
cmc
lds
lods
xchg
adc
test
cld
jnp
bound
ljmp
fs
mov
in
xchg
fs
fisubs
fsub
push
inc
enter
out
or
shrb
dec
xor
adc
mov
xchg
add
test
in
adc
das
imul
xchg
xchg
mov
aad
cmp
stos
xor
not
ss
test
fistpll
aam
inc
and
jae
mov
inc
ja
add
in
mov
add
shll
jbe
and
mov
adc
xor
mov
lret
xchg
mulb
sbb
xor
out
insl
repz
push
xchg
cli
xor
cmc
inc
fwait
stos
inc
xor
pop
in
mov
dec
testl
sarl
jno
sbb
and
lea
pop
push
inc
add
push
addr16
cmp
inc
and
test
inc
mov
cwtl
xor
mov
push
xlat
out
xor
jle
mov
stos
outsb
mov
mov
shr
and
sbb
inc
outsb
std
ja
mov
hlt
popf
inc
xchg
pop
cmp
rcrl
add
movsl
fstl
fldt
add
jle
dec
es
pop
sbb
push
loopne
xchg
cmp
cmp
inc
inc
pop
push
mov
inc
pop
addl
add
cmp
add
into
push
or
shl
or
and
mov
sarl
mov
dec
test
xlat
inc
adc
pop
outsl
push
enter
sti
lock
in
jge
test
push
add
mov
test
repnz
loop
pop
mov
mov
ljmp
and
and
push
rcr
jp
push
push
les
jno
xor
lret
jbe
xchg
push
pop
push
mov
mov
vmovlps
sarl
xor
or
mov
lods
ret
scas
cld
xchg
adc
xor
lea
mov
sub
jecxz
add
aad
insb
js
test
xlat
cmp
inc
add
sub
repnz
pushl
jmp
in
cmp
push
push
stc
repz
xlat
mov
add
jl
scas
push
cmp
sahf
daa
jne
sub
xchg
mov
ja
clc
sub
out
jge
es
xchg
ret
aam
out
pop
sub
mov
adc
pop
fimuls
imul
in
std
jl
cld
mov
div
mov
inc
scas
out
mov
les
fbld
into
push
xor
sub
inc
lock
adc
insb
or
cmpsb
add
outsl
mov
aam
in
scas
xchg
into
sti
jecxz
repnz
mov
adc
fnstsw
hlt
xor
push
or
ss
jg
mov
pop
sub
xor
mov
or
mov
adc
cmp
movsl
out
loope
sub
or
add
test
xor
xchg
or
or
adc
xor
scas
dec
jle
enter
mov
ljmp
dec
push
xor
sub
popa
pop
pop
xor
push
jl
aaa
stc
sbb
clc
pushl
inc
xor
sbb
call
insb
xor
dec
adc
inc
push
sbb
sahf
addr16
stc
xchg
mov
add
pop
add
fadds
dec
sbb
fnstenv
sbb
loope
fisubrl
push
jo
push
or
test
xlat
sti
sub
pusha
sbb
lahf
cmc
mov
push
sbb
xor
divb
adc
outsb
test
jmp
lahf
sub
loope
sub
xchg
push
test
sti
repz
dec
lods
aam
cmp
adc
arpl
xchg
mov
xchg
inc
sub
pop
push
mov
mov
inc
popa
pop
jp
push
sub
xchg
out
xchg
pop
js
mov
lods
leave
lods
jmp
loopne
shll
xchg
xor
dec
push
mov
or
xchg
test
jo
cmpsl
push
loop
iret
jns
pop
pop
out
push
dec
dec
out
mov
hlt
shlb
lock
dec
cmc
mov
daa
lahf
movsb
add
xchg
cmp
cwtl
popa
jb
pop
push
push
out
sbb
mov
cli
sbb
lahf
push
aam
das
mov
add
hlt
mov
shlb
xor
dec
movsb
cltd
mov
pop
jnp
cmp
cmpl
add
mov
ljmp
adc
cltd
adc
xchg
mov
scas
aad
cmpsl
daa
push
fsubs
add
mov
push
stos
mov
scas
das
pop
dec
loope
xchg
pop
push
mov
cmpsb
xor
jno
mov
out
fdivrs
addr16
dec
mov
pop
pusha
mov
lock
push
bound
stos
pushf
pop
xor
mov
jo
nop
add
and
test
sbb
pop
into
in
jl
xor
push
lret
cmp
xor
or
daa
fcomps
shll
inc
imul
out
mov
lock
sub
lods
jp
lods
pop
dec
cmc
jg
jl
arpl
jno
in
dec
and
movsl
mov
test
add
jmp
ss
outsl
ret
xor
into
xchg
es
imul
int3
xor
outsl
mov
sbb
inc
inc
adc
scas
aaa
sarl
xchg
insl
xor
mov
add
test
cmpsl
dec
mov
adc
add
out
out
data16
dec
push
mov
and
fcomi
sbbl
sub
cwtl
enter
xor
jo
xchg
mov
movsb
jnp
aaa
roll
lret
inc
std
pusha
mov
xchg
insl
mov
mov
gs
sub
repnz
inc
lods
lods
je
outsl
mov
sub
jmp
pop
or
lret
repnz
addr16
push
pop
push
lahf
icebp
sahf
jle
xor
jae
rolb
subl
jb
mov
aas
gs
cmp
sub
pop
pop
arpl
jecxz
les
push
fistl
fsub
mov
popf
cmpsl
xchg
and
pusha
jb
shlb
adc
out
test
jle
push
xor
jge
adc
xor
xchg
jno
sub
push
aam
fisubrs
loopne
bound
xorl
movsl
out
ret
mov
push
loop
pusha
mov
xchg
fistl
movsl
cmp
int
mov
out
fcompl
sbb
or
push
sub
movsl
pushf
xchg
inc
fs
daa
dec
sbb
out
mov
inc
mov
lret
iret
inc
mov
movsb
int
xchg
add
in
and
cld
arpl
mov
and
adc
push
clc
shlb
ret
pop
in
pop
mov
aaa
sbb
orps
fnsave
push
push
dec
movsb
pushf
icebp
shrl
sub
add
cwtl
add
mov
cld
jecxz
xchg
pop
mov
cmp
jg
xchg
sub
sub
push
or
enter
jno
and
je
enter
xchg
call
or
mov
xchg
mov
cmc
nop
pusha
in
push
insb
mov
cmp
dec
scas
mov
icebp
sub
pop
ljmp
jnp
dec
ret
sarl
pop
stc
cli
jbe
sub
add
xchg
loope
push
xchg
add
adc
cmp
stos
push
dec
adc
sbb
dec
add
jns
test
xor
movsb
sbbl
das
insb
data16
adc
mov
pop
inc
jbe
cmpsb
mov
cmpsl
cmp
ss
and
scas
jae
push
pop
sahf
fs
xor
sub
ficoms
je
sub
leave
cltd
pmovmskb
int
clc
out
dec
adc
pop
inc
mov
sbb
mov
scas
lods
push
inc
jg
insl
daa
jbe
xchg
shr
adc
xor
scas
lock
xchg
je
imull
and
pop
sub
pop
pop
sbb
push
or
push
adc
stos
divl
cmpsb
jecxz
arpl
cmp
pop
pop
test
mov
xor
xor
test
sbb
dec
test
mov
adc
clc
ror
xchg
rolb
mov
jmp
pop
push
xchg
sub
ror
repz
mov
pop
and
pop
nop
out
dec
aas
ds
int
rcl
cwtl
pushf
into
fidivl
cwtl
mov
subb
cld
dec
cli
sbb
jmp
jge
sbb
addl
adc
and
cmc
mov
push
outsb
cmpsb
and
es
mov
mov
inc
and
xor
outsb
shlb
and
jp
xlat
fwait
sti
stc
mov
jg
loopne
xchg
aam
xchg
push
push
add
cmpsl
xor
bound
xlat
aas
mov
pushf
jns
inc
js
pop
pop
mov
ljmp
cmp
mov
rorl
add
adc
sub
xorb
jno
aad
mov
stos
push
movsl
std
adc
dec
inc
aam
xor
ret
jmp
cmp
sbb
fmuls
shr
inc
or
push
scas
aas
fyl2x
mov
sub
cmpsb
bound
inc
mov
push
inc
je
and
push
pushl
gs
cs
sbb
shr
mov
imul
mov
push
pop
cs
xor
stc
push
pop
mov
push
cmp
jb
xchg
ss
inc
sti
inc
out
push
out
jo
xor
push
cmpsb
shlb
mov
imul
jg
cmp
ret
adc
pop
mov
in
ret
lods
in
xor
iret
mov
lahf
jnp
fistpll
les
movsl
mov
fdivs
out
rolb
inc
test
out
jge
fcomp
pop
xchg
jo
mov
pop
pop
xchg
mov
jg
les
stos
inc
sub
iret
and
ss
bound
add
cltd
into
int
mov
inc
ja
adc
cmp
mov
mov
popa
bound
fistps
shll
mov
movsl
dec
outsl
cmp
pop
xchg
sbb
aad
ror
orb
imul
into
jb
mov
and
flds
xor
adc
pushf
sub
mov
add
dec
adc
jg
aas
test
xchg
out
scas
pop
int
fsubrs
ja
sbb
xor
in
insl
in
nop
bswap
mov
mov
and
jne
or
mov
inc
js
out
cmp
sbb
addr16
movsl
std
iret
xchg
shll
push
js
jnp
movsb
loope
pop
sub
imul
int3
adc
lret
or
cmpsb
fwait
or
movsl
jo
in
rcrb
lahf
scas
adc
sbb
leave
inc
leave
xchg
out
jl
jge
das
sbb
js
jp
pop
lods
add
push
popa
aas
xchg
add
push
dec
rcrl
jo
xor
movsl
jbe
pop
mov
inc
sbb
add
fisubs
insb
mov
loop
into
inc
cmp
lret
mov
negb
sbb
adc
bound
cmp
outsl
leave
shll
adc
xchg
push
sbb
mov
mov
mov
xor
push
push
xchg
lahf
push
add
and
addr16
jl
jmp
mov
lea
es
popa
xchg
pop
sbb
add
dec
jb
stc
push
adc
call
in
daa
jle
mov
cmc
jne
stos
pop
and
imul
push
inc
cmpl
lods
push
jmp
jle
cli
pop
and
cmpb
inc
jge
insl
dec
fcomps
arpl
leave
addb
in
xor
hlt
pop
loop
icebp
or
inc
push
jp
inc
sbb
lea
pushf
adc
rcr
lock
jns
divb
mov
or
jo
mov
push
mov
mov
shrl
scas
rdpmc
fistpll
adc
iret
xchg
xor
dec
mov
in
xchg
movsb
push
in
dec
dec
bound
mov
and
xor
hlt
test
imul
jae
cltd
jnp
mov
loope
xor
jno
mov
decl
fdiv
rolb
mov
and
mov
int
jbe
pop
xchg
bound
push
mov
inc
cmp
sub
pusha
jecxz
les
jnp
sub
cmp
add
sub
sbbl
test
pop
xchg
xlat
inc
add
into
mov
scas
rcl
mov
push
pop
cmc
sbb
std
xorl
subl
int
push
mov
adc
mov
in
jbe
in
ret
sbb
loopne
mov
addb
and
and
mov
inc
sub
insl
repz
and
push
dec
shrl
cld
shr
out
jge
int3
inc
sub
mov
xor
aam
mov
loope
dec
sbb
iret
test
fwait
push
mov
inc
jo
pushf
adc
jne
lahf
or
xchg
jb
pop
ret
sbb
jl
add
or
je
loopne
mov
pop
sub
jg
lcall
popa
aad
sub
push
cs
dec
cmp
xor
xor
add
mov
aas
inc
pop
inc
dec
xor
rep
ret
push
dec
cmpsl
ljmp
lods
push
cmc
xchg
sbb
scas
mov
in
imul
push
add
je
adcb
xchg
rcrb
dec
add
jle
call
imul
stc
imul
fistpll
xchg
cmp
popf
or
mov
sub
push
stos
pusha
imul
lret
jns
add
push
adc
pop
push
adc
or
aas
add
sub
popf
test
test
jg
adc
jge
andl
pop
cld
xor
mov
xchg
or
lret
jbe
sbb
test
sbb
cltd
pop
and
cs
cmc
test
cld
mov
mov
test
out
ffreep
push
dec
fdivrl
mov
push
mov
pop
sub
or
test
add
push
jg
loopne
imul
push
aas
ret
pop
fsubs
cmp
xor
in
or
in
imul
jmp
loopne
jnp
push
sbb
jae
rclb
adc
outsl
cmp
lods
leave
dec
movq
jp
mov
popf
sti
mov
or
lea
jp
inc
stc
or
pop
sub
adc
ror
js
aam
inc
jp
push
subl
xchg
aam
mov
fisubrs
adc
add
jb
rcrl
stos
mov
outsb
popa
lcall
jns
rcll
sarb
fucomip
cli
ljmp
mov
jle
iret
enter
and
mov
cld
mov
mov
and
jo
hlt
push
cs
cld
jo
cli
and
aas
xchg
jecxz
push
shlb
addr16
sbb
add
adc
dec
and
lock
jl
rcl
pop
sbb
or
lea
outsb
and
mov
fisubrl
shlb
xor
inc
xor
pop
fucomip
jge
fcmove
fsubrs
mov
or
add
dec
jno
hlt
ja
movl
test
stos
pop
das
mov
ds
arpl
enter
jmpw
push
std
enter
inc
dec
jmp
ret
inc
mov
jmp
insb
scas
sbb
inc
xchg
push
jmp
leave
je
jno
jmp
sahf
ss
out
shr
cld
lret
mov
xchg
xchg
rorl
add
jg
les
cmpsb
push
xlat
aam
test
push
pop
test
bound
sbb
jae
ret
ret
sub
cld
ds
add
in
rcll
xor
lds
fidivl
jmp
call
loop
lods
mov
inc
fcoms
aam
jg
lock
cmpb
cs
cmpsb
sbb
int3
jno
push
sbb
subl
cmp
lock
lahf
push
mov
push
cmpl
mov
or
push
push
fiaddl
mov
test
xchg
addb
mov
pop
add
mov
nop
imull
fiaddl
int
push
orb
pop
arpl
mov
lcall
lds
out
loop
xchg
scas
ja
in
hlt
and
mov
sub
ja
loopne
repz
scas
pop
pop
mov
inc
sbb
aam
lea
fistl
or
inc
pop
pop
push
mov
pop
bnd
xlat
cmp
jne
sbb
rol
stos
mov
dec
stos
call
insl
enter
hlt
jo
pop
les
inc
jp
shl
xor
adc
ja
add
and
shlb
adc
dec
sti
inc
mov
clc
pop
clc
popa
push
pop
cltd
push
movsl
imul
adc
fstl
add
decb
xchg
or
sbb
dec
lds
dec
mov
dec
mov
lcall
gs
icebp
add
in
icebp
jmp
std
loopne
jns
push
mov
fisttps
xchg
push
orb
fsubr
jo
ret
or
scas
outsl
mov
push
out
pop
rorb
push
mov
push
rcl
cmp
xor
imul
inc
xor
add
aaa
hlt
and
dec
clc
sahf
sub
push
outsl
inc
inc
test
fistpl
push
xor
jo
xor
leave
shlb
add
sub
fidivl
push
popl
and
pop
std
xchg
adc
sbb
inc
xchg
aaa
in
test
mov
lcall
rcr
cli
adc
sbb
cmp
sarl
or
mov
push
or
pop
data16
inc
mov
add
push
iret
sbb
sti
loop
fimull
aaa
sbb
or
call
into
sub
test
adc
leave
leave
and
mov
sub
jg
imul
pop
cmp
movsb
mov
std
mov
push
dec
jo
shr
ds
xchg
or
mov
jmp
outsb
loop
int3
xchg
faddl
movsl
jb
mov
adc
lea
sub
push
test
and
fmuls
push
mov
pop
flds
sub
lahf
pop
into
cmpsb
sar
fnsave
xchg
mov
sub
mov
mov
xchg
cmp
loopne
and
mov
fimuls
sub
loopne
cwtl
xchg
lods
je
rolb
pop
mov
cli
jb
lds
test
daa
push
xor
mov
jg
cmpsl
mov
imul
insl
xchg
or
imul
jno
inc
stos
cwtl
xchg
push
push
mov
ds
fists
test
add
frstor
pop
jne
addr16
into
fcmovnu
shlb
dec
fnstsw
test
loop
mov
mov
cld
idiv
add
ss
xchg
aad
dec
and
sti
sub
ss
je
push
add
mulb
xor
xchg
xchg
cmp
repnz
andb
negb
mov
out
add
hlt
js
mov
std
dec
incl
or
adc
push
mov
push
adcb
xchg
das
xchg
push
outsb
leave
insb
inc
lock
imull
adc
xor
addr16
and
jmp
cld
jb
cmc
ljmp
iret
fsubrl
repnz
leave
in
sbb
bound
shll
call
push
out
push
jg
sbb
pop
add
mov
jp
sahf
add
mov
ss
add
idivb
lods
push
arpl
out
ret
rcrl
jecxz
cmp
inc
leave
mov
fs
dec
mov
sarb
mov
sub
inc
test
sub
nop
add
add
fwait
jg
out
jl
test
mov
jecxz
jbe
sahf
xchg
jo
lods
jl
push
mul
mov
xchg
mov
and
add
adc
ficompl
xlat
cmp
adc
loop
outsb
xchg
or
pusha
iret
xchg
cmp
mov
aad
sub
jl
inc
aaa
jb
nop
sti
mov
fstl
cmp
and
jbe
pushf
mov
addr16
in
aad
cmp
jp,pn
out
mov
adc
test
lcall
in
sbb
pop
pop
mov
inc
or
sbb
pusha
fdivr
sbb
sub
icebp
jge
lcall
call
js
inc
jp
and
mov
iret
rcll
dec
out
mull
jmp
das
loop
adc
jmp
pushf
rcrb
push
push
xor
aaa
add
cmp
out
fnstsw
push
dec
cli
dec
js
data16
shl
inc
push
cwtl
pop
add
or
int3
testb
gs
cmc
xchg
enter
ljmp
jno
xchg
cld
jecxz
and
xchg
inc
sub
add
xchg
data16
test
lods
jle
xor
cmc
pop
dec
jo
fwait
ret
sub
mov
lret
test
pop
mov
movsl
cmc
adc
xlat
xchg
push
jge
movsb
in
mov
lock
es
fsubr
out
call
dec
das
es
inc
int3
jge
push
push
push
push
pusha
cld
aam
call
push
dec
pop
shlb
jno
and
jmp
lcall
fdivl
and
out
sti
adcb
out
cmc
insl
movsb
addr16
repz
sub
rcll
xchg
or
push
cli
jp
inc
sti
add
jp
sbb
pop
mov
gs
pushf
pushf
leave
mov
mov
fists
sub
add
adc
dec
adc
scas
call
jp
xchg
inc
les
dec
mov
pop
mov
enter
lret
pop
ja
cmp
mov
adc
ljmp
sbb
insb
push
movsl
xchg
adc
xlat
xchg
mov
cld
dec
push
push
jbe
rcll
cmp
imul
fldcw
or
ljmp
jne
dec
mov
add
out
push
rcr
gs
insl
or
push
in
push
into
enter
sbb
mov
cmp
jmp
in
sbb
dec
fs
pop
mov
xor
mov
icebp
fwait
rclb
mov
sbb
ja
imul
inc
cs
jg
ret
jb
scas
mov
mov
sbb
mov
pop
aam
lock
negl
shlb
fsubp
mov
mov
pop
lcall
pop
jp
pop
nop
movsl
mov
imul
insb
mov
mov
cld
ret
nop
idivb
inc
sahf
faddl
mov
iret
scas
imul
and
cmp
fdivl
xchg
adc
mov
loopne
cli
push
test
inc
mov
xchg
sbb
push
dec
fistl
xchg
lret
fwait
lcall
icebp
push
inc
push
cmp
xchg
and
jle
popaw
into
dec
lcall
xchg
fwait
js
jae
fsts
jnp
jns
pop
fcmovne
or
pop
cmp
mov
cmpsl
fucom
jo
pause
jg
inc
push
out
mov
push
popf
out
or
xlat
sbb
add
push
xlat
cmp
fdivr
adc
daa
mov
aam
mov
sbb
jb
mov
pop
aad
cs
sbb
lods
rcrb
add
add
icebp
jbe
repnz
rcrb
mov
push
cmc
mov
push
pushf
push
aam
or
arpl
push
stos
fidivrl
inc
pop
aaa
sarl
pop
fildl
push
jne
ljmp
xchg
cmp
mov
sub
adc
mov
cwtl
add
mov
and
mov
mov
jns
sbb
mov
addr16
ja
sub
fdivrs
push
or
cmp
aas
imul
loope
imul
inc
xchg
loop
cli
imul
frstor
sub
aam
xor
and
mov
dec
xchg
cmp
decl
lret
cmpb
shl
sahf
or
pop
adc
push
jae
mov
add
sub
and
outsl
out
fsts
pop
add
cltd
daa
push
push
pmuludq
adc
test
shl
lds
xor
inc
xchg
adc
jecxz
imul
mov
xlat
xor
adc
repz
arpl
je
idiv
test
cmp
inc
mov
lock
aaa
loope
pop
sahf
imul
push
xor
hlt
push
inc
adc
adc
adc
jl,pt
sbb
mulb
jbe
or
outsl
adc
ljmp
leave
stos
gs
xor
adc
mov
jp
xchg
ljmp
out
or
insl
pop
xchg
pop
pop
sub
mov
dec
mov
sub
pusha
loopne
dec
loope
idivl
xor
pop
icebp
adcb
xchg
dec
adc
or
nopl
mov
in
sbb
out
imul
into
lock
pop
rcrl
fstps
mov
inc
ret
mov
dec
mov
fildl
loop
clc
call
rcll
xchg
pop
and
sahf
jg,pt
lock
enter
lods
lods
mov
add
mov
sub
cmp
lret
xchg
es
stc
mov
xchg
in
mov
mov
les
xchg
mov
dec
mov
psubw
sbb
jge
mov
js
test
pop
addb
repz
leave
jg
mov
sub
into
dec
mov
cmpsl
xor
mov
push
cmc
sub
sahf
mov
mov
jp
stos
pop
int3
ja
mov
adc
cmp
pusha
shr
out
ds
sub
nop
cmp
xchg
mov
hlt
jmp
imul
jns
mov
idivl
mov
lahf
and
cmp
sub
call
jbe
es
out
andl
adc
cmp
mov
mov
ja
add
repnz
lahf
fadds
movsb
call
aas
lahf
aam
mov
push
stc
cs
ficompl
sahf
scas
push
dec
or
jb
or
bound
in
push
pop
add
imul
mov
xor
pop
fs
subb
pop
cmp
sbb
scas
mov
jmp
fwait
inc
xchg
ds
sub
xchg
enterw
int
lock
jno
add
xor
push
jns
cld
xchg
lock
addr16
mov
pop
xor
and
cmp
mov
cmp
movsb
jb
into
rcrb
test
sbb
in
fstp
xor
lcall
call
mov
aam
and
sub
movsl
aas
add
hlt
and
outsb
mov
rcll
lret
ja
rcr
cmpsl
out
pop
or
pusha
sbb
les
pop
ljmp
mov
out
jne
push
inc
xor
lcall
out
dec
movsb
test
jmp
mov
out
adc
clc
leave
mov
pop
int3
or
or
mov
aad
xor
jge
dec
inc
push
ljmp
pop
xlat
cmp
jmp
test
dec
pop
mov
push
xchg
push
inc
in
call
les
lahf
int3
std
jecxz
cmp
repz
out
fbstp
adc
jne
or
mov
cld
out
leave
ret
fstpt
sarb
adc
inc
dec
inc
add
fsubrl
push
loope
pop
je
lea
gs
loop
stos
mov
add
adcl
lock
inc
sub
jno
pop
popf
cmp
mov
inc
pop
popl
test
cwtl
mov
outsl
shlb
scas
or
dec
jg
mov
test
hlt
fnsave
in
pop
cli
clc
loope
mov
popf
mov
mov
add
outsb
testl
dec
dec
and
pop
test
stc
pop
mov
dec
pop
pop
cmc
pop
shrl
clc
in
pushf
repz
call
jecxz
jmp
inc
mov
xchg
sub
xchg
xchg
leave
add
sbb
out
jmp
xchg
and
js
js
lcall
xchg
mov
cmpsb
sub
repz
adc
sub
jp
push
out
xchg
push
fnsave
mov
shl
loopne
shll
mov
cmpsl
pusha
lds
mov
shr
mov
cmp
lret
ds
mov
pop
xchg
orl
xchg
sub
call
lds
in
jp
repz
xlat
and
ljmp
adc
sbb
mov
xchg
aas
or
std
push
ret
test
and
xchg
fmull
fcomi
popa
pop
jmp
pop
jle
xor
imul
jecxz
cmp
sub
sub
sti
rorb
fs
mov
insb
dec
out
pop
jns
push
cmpsl
sub
or
ljmp
ljmp
jecxz
in
lcall
fs
dec
shl
dec
sbb
loopne
pop
inc
cmpsl
xor
mov
adc
or
xchg
mov
xor
jno
sub
in
jns
and
cmp
subb
mov
imul
xor
sub
scas
insl
popa
lds
test
mov
xor
xor
fwait
cmpsb
add
adc
imul
cld
inc
jb
divb
and
ret
inc
inc
sbb
push
inc
add
jl
pop
and
adc
or
loop
inc
mov
and
or
stc
and
mov
mov
out
push
loop
xor
nop
fstl
mov
push
mov
dec
push
jo
outsl
out
aas
dec
fstl
pop
not
mov
cmpl
cmp
push
push
xchg
insb
jne
or
movsl
push
xor
push
xor
testb
icebp
push
xchg
cmc
xchg
dec
push
add
cmp
mov
xchg
enter
push
in
stc
push
sbb
outsl
cmp
pusha
scas
or
mov
mov
scas
popf
shll
repz
adc
les
push
push
dec
pop
adc
lock
out
das
in
xor
imul
and
mov
ljmp
or
ss
mov
or
xor
shll
add
or
sahf
idiv
sbb
js
lret
mov
push
insl
cmp
fidivrl
mov
pop
lods
dec
popf
fnsave
scas
and
cld
es
repz
pop
icebp
mov
cmc
dec
enter
xchg
dec
and
into
and
push
push
mov
aam
inc
push
mov
cmpsl
stc
inc
jnp
sub
cmp
sub
pop
mov
mov
les
sti
sahf
in
pop
mov
gs
popa
ja
adc
loopne
adc
push
orb
call
push
and
cmp
mov
jg
or
ficoml
clc
pop
dec
ja
fnstenv
imul
ljmp
sub
sbb
dec
scas
gs
cmp
movsb
add
mov
xor
clc
aaa
xchg
inc
add
icebp
sti
loopne
xchg
jg
adc
leave
xchg
and
xchg
xchg
sub
hlt
aas
jl
dec
cmpsl
jecxz
pop
in
mov
aad
test
cwtl
xor
add
mov
mov
pusha
add
lock
push
lea
push
cmovbe
cmpsb
mov
push
xor
aad
push
repnz
sub
jg
jo
and
xor
cmp
and
sbb
stos
das
lret
mov
inc
jmp
jl
dec
pop
loopne
insl
sahf
daa
or
or
ret
cmpsl
int
push
mov
push
adc
push
inc
adc
mov
mov
imul
jge
les
adcb
enter
aaa
movsl
mov
mov
adc
pusha
mov
repz
fwait
sbb
repnz
stos
push
jg
in
mov
cmp
es
int3
aad
sub
fcmovbe
or
bound
dec
or
out
out
into
inc
insb
repz
movsb
xor
sub
imul
and
out
adc
jmp
mov
aad
lock
pop
dec
movsb
push
sti
inc
and
dec
lods
ss
sub
popl
jge
ss
mov
pushf
fdivr
nop
fs
loopne
out
imul
adcl
jp
sti
cmp
mov
cmp
inc
jb
cmp
outsb
jle
ljmp
jecxz
ljmp
xchg
outsb
add
cmp
add
scas
add
xchg
sbb
dec
call
lret
bound
fsts
push
cwtl
or
ret
xor
jns
imul
ret
js
int3
out
out
cmp
cmpxchg
pop
imul
pushf
cmpsl
int3
xchg
insl
sti
shl
adc
out
cmp
mov
and
test
rorb
push
cmp
pushf
nop
cmc
sbb
push
sbb
ljmp
sub
xlat
test
mov
into
test
sub
cmp
and
and
fdivr
int
repz
ss
fwait
mov
ds
inc
roll
cmc
out
xchg
mov
and
into
dec
mov
cmpsb
push
lret
add
cmp
xor
xchg
addr16
mov
ds
out
fnstenv
mov
lahf
sub
test
dec
push
dec
sub
std
jo
je
inc
push
popf
add
dec
arpl
and
jl,pt
aaa
sub
adc
dec
adc
lret
pop
jecxz
lods
push
scas
imul
adc
mov
out
out
xor
ss
lcall
push
shl
mov
add
cmp
insl
inc
xchg
sti
aam
push
pop
xlat
xchg
cmpsb
test
stos
pop
mov
cwtl
mov
mov
mov
xchg
sub
sbb
pop
jno
sbb
dec
rcr
or
or
fbstp
cmpsb
mov
add
or
mov
and
or
fdivs
cmp
and
mov
sbb
and
test
push
daa
stos
clc
sbbl
loopne
sbb
scas
cmpsb
shrl
cltd
sub
and
lret
jb
inc
shlb
mov
jno
pop
push
stos
jns
dec
mov
sbb
mov
in
inc
pop
imul
int
lods
sub
xchg
and
dec
or
ds
arpl
pop
cmpsb
scas
sbbb
sahf
xchg
xchg
pop
and
mov
jne
xlat
in
adc
dec
pop
xor
mov
jbe
clc
xor
jae
dec
push
cltd
mov
cmc
je
push
push
inc
roll
inc
into
outsb
dec
inc
in
xchg
cmp
out
and
pop
outsl
fwait
mov
fadds
pop
mov
cmpsb
mov
mov
mov
jo
nop
mov
mov
data16
arpl
jns
sti
inc
stos
mov
daa
mov
rcrl
and
hlt
push
mov
ss
jecxz
jne
or
cmpsb
xlat
rcrb
push
shll
sub
fwait
sub
rorb
mov
mov
bnd
test
push
sar
stos
xor
sbb
icebp
sub
ret
int
jnp
mov
inc
mov
outsb
ret
sarb
sub
or
push
out
cltd
shll
jp
cmc
sti
push
pop
arpl
dec
push
hlt
outsb
dec
adc
xchg
ja
sbb
add
setbe
ret
jo
pop
mov
imul
nop
push
adc
or
xchg
xchg
in
aad
sbbb
es
insb
cmp
add
sti
test
dec
dec
mov
cli
cltd
loop
push
stos
jne
ds
mov
out
push
adc
or
cmc
sbb
add
sbb
pop
sbb
cmp
pushf
mov
in
out
bound
cmp
mov
sub
cmp
ficoms
mov
std
xchg
imul
jl
fsubrp
into
mov
iret
and
popf
stc
outsl
call
imul
sarl
inc
cwtl
popa
xchg
outsl
cmc
call
hlt
shrl
pop
xor
xorb
je
and
sbb
sub
inc
test
out
inc
push
mov
xor
adc
mov
inc
ret
adc
cmp
jne
jg
dec
inc
hlt
dec
and
icebp
stos
outsb
adc
xor
jno
jno
or
cwtl
push
testl
mov
and
mov
add
jl
jge
out
adc
xchg
lea
test
sub
pushf
adc
into
add
inc
jl
xchg
push
pushf
mov
in
push
lea
adc
mov
adc
mov
mov
dec
jns
mov
push
sbb
pop
pushf
pop
adc
imul
sub
ficomps
mov
push
in
mov
sti
loope
xlat
sbbb
pop
roll
les
mov
push
or
sub
sub
jno
ljmp
add
outsl
cmp
inc
movsb
push
or
sbb
add
inc
push
popf
add
cltd
and
inc
push
loop
xchg
ror
andb
mov
mov
loope,pn
roll
push
mov
jb
jmp
mov
sub
cmp
jp
gs
ds
xchg
out
sahf
jnp
loop
jp
xchg
jo
das
pop
sub
fidivs
cwtl
dec
inc
in
jmp
stos
adc
xchg
cmc
mov
sub
hlt
popa
iret
ds
pop
loop
sbb
jg
daa
gs
jb
pusha
leave
test
and
mov
gs
xor
cmp
sbb
arpl
adc
mov
mov
mov
add
or
in
cmp
fdivrl
pop
jecxz
mov
sub
je
scas
ret
cmp
jb
dec
cmpl
push
or
lret
cmp
nop
fiadds
add
mov
scas
xchg
adcl
pop
outsl
or
add
dec
mov
add
or
sbb
inc
leave
and
mov
or
enter
stos
mov
inc
out
jl
lcall
jb
hlt
sub
sbb
or
mov
cwtl
rcll
hlt
movsl
lds
prefetcht1
retw
inc
pop
icebp
inc
dec
sub
adc
cld
cmp
lret
push
and
decl
jmp
sub
fcompl
push
mov
lds
or
sti
aas
xor
adcl
pop
stos
push
jle
inc
daa
les
add
xchg
add
das
or
or
test
adc
sub
lock
sub
adc
pop
fs
push
lahf
mov
outsl
pop
loope
push
repnz
cmp
fsubl
movsb
hlt
jae
andb
out
cmpxchg
sbb
sub
jb
jle
leave
pop
fldl
xor
xchg
adc
rcrb
stc
sub
mov
lds
xchg
lea
pop
cmp
pop
mov
test
or
movsl
adc
test
push
mov
push
jns
ret
xor
rcll
in
outsl
jno
iret
lods
jle
inc
pop
and
xchg
cmpsl
xchg
sub
into
ljmp
in
movsl
cmc
xchg
repnz
push
or
int
mov
pop
pop
add
pop
int
and
add
je
mov
adc
std
test
push
lods
push
xchg
bound
add
xchg
inc
push
dec
dec
push
and
mov
into
rcrl
or
push
or
mov
daa
add
jae
insb
mov
into
inc
lahf
mov
add
leave
pop
sub
sub
mov
je
pop
add
and
xchg
xchg
mov
sbb
das
xor
js
sbb
out
adc
addr16
movl
push
inc
jno
push
xor
pop
imul
xchg
ret
stc
daa
pop
negb
pop
mov
dec
mov
jecxz
outsl
insl
jb
or
out
jbe
jmp
shll
mov
je
loope
mov
pop
mov
add
out
and
ljmp
clc
sbb
mov
fldt
mov
mov
cmp
loopne
clc
sbb
iret
sub
or
ret
mov
gs
adc
je
push
cld
mov
mov
into
cmp
cs
xorb
cmp
push
aad
cmpb
test
inc
xchg
sub
jecxz
xor
sti
mov
daa
xchg
push
addl
ljmp
mov
sub
mov
cmp
pop
pop
jl
leave
call
fists
shlb
mov
push
mov
shl
cmp
push
and
xlat
and
pop
or
jecxz
mov
out
and
stos
sbb
sub
pop
lods
and
adc
adc
or
lcall
sub
dec
popf
cmp
test
in
xor
push
lods
add
mov
adc
pop
pop
repz
orl
inc
popa
mov
andb
repnz
and
stos
mov
jp
adc
pop
into
loop
or
jl
cld
mov
jne
mov
push
rcll
push
cs
shr
sbb
mov
mov
nop
loop
sbb
outsl
ficoml
cmp
enter
and
pop
scas
push
dec
jmp
xor
pusha
xchg
adc
mov
out
xchg
mov
cmp
pop
xor
adc
mov
add
mov
xchg
js
cli
xor
mov
add
push
shr
cmp
mov
push
mov
xchg
jg
dec
shlb
mov
xchg
jbe
mov
or
push
addr16
insb
fcoms
push
jle
test
jmp
les
lods
inc
inc
xchg
fdivrs
mov
pop
lock
push
cmpsl
test
pusha
ljmp
adc
leave
jecxz
scas
inc
jmp
add
lods
push
dec
sbb
fcom
addl
in
push
movsb
outsl
ficoml
push
es
shrb
push
jle
sbb
mov
add
fldenv
adc
xchg
ss
das
jns
inc
js
int
mov
roll
pop
out
push
xor
lods
fadds
ljmp
adc
sbb
mov
xor
and
pop
dec
pop
mov
mov
dec
inc
and
xchg
or
fisubrs
fldl
loope
add
in
jle
mov
inc
enter
aaa
mov
ja
inc
lock
mov
push
adc
sti
je
arpl
imul
pusha
repz
xchg
shrb
mov
inc
repnz
cmp
add
mov
xor
in
popf
scas
push
fdivs
test
sub
cli
add
sub
cmp
movsl
sub
ror
outsb
adc
fimull
mov
add
inc
cmpsl
sub
fdivrl
add
out
in
mov
mov
ret
out
adc
int3
outsl
lret
cwtl
push
adc
xchg
push
movsl
lcall
dec
stos
out
nop
outsl
lods
neg
jns
adc
xchg
cmp
and
push
push
fisttps
pop
cmp
pop
cmc
scas
dec
adc
push
jp
jne
pop
aaa
xchg
nop
mov
addr16
adc
lcall
cld
out
inc
inc
mov
pop
jbe
out
rclb
cltd
stos
jb
mov
lock
lods
cmp
loopne
mov
jnp
or
out
pop
cmp
in
cmp
push
out
roll
pusha
pop
pushf
arpl
lods
sub
loop
adc
cs
sti
mov
rclb
mov
cmovle
test
imul
sbb
add
jle
fistpl
cltd
sahf
sub
sbb
push
push
push
xchg
call
je
iret
adc
add
loopne
insl
dec
sbb
pop
insb
adc
mov
jl
scas
jb
push
out
inc
dec
lods
mov
and
fstps
adc
adc
std
ss
sbb
sarb
loop
cmovp
mov
lods
lcall
sub
push
daa
xchg
inc
add
sbb
jb
jmp
cli
fwait
or
push
add
cmp
adc
in
xchg
dec
cltd
push
test
pushf
xor
lcall
mov
je
jne
push
mov
in
and
into
mov
test
divb
fidivrs
mov
lahf
jns
xchg
or
pop
sub
xchg
clc
lret
push
gs
aaa
adc
loop
imul
ja
cwtl
mov
popf
jo
inc
sbb
call
jecxz
inc
mov
or
inc
jge
aaa
dec
andb
jmp
jl
xor
out
cmpsb
pop
mov
in
faddl
mov
in
inc
movsl
mov
in
inc
mov
sbb
or
idivb
and
push
pop
iret
popa
jo
mov
xchg
movsl
in
push
pusha
or
shl
mov
outsl
xchg
int3
into
pop
mov
and
inc
or
in
bound
int
ds
lods
jle
fldenv
sub
mov
out
in
cmpsl
fwait
push
outsb
or
cmp
outsl
stc
and
insl
fildl
or
divb
sub
jae
repnz
pop
adc
loopne
push
das
clc
xor
mov
cld
jnp
mov
scas
and
add
in
xor
xchg
lret
shlb
aad
fstl
add
push
pop
js
shrl
imul
in
push
sahf
pop
and
cmc
fidivs
mov
jbe
mov
inc
mov
xor
loopne
cli
fs
lods
inc
sbb
lock
jns
fucomp
notl
pusha
out
lcall
call
fisubrs
xor
mov
mov
test
mov
mov
test
jecxz
lds
push
loop
imul
stc
mov
pop
insb
jecxz
jle
into
sub
pop
addr16
adc
jl
ljmp
xor
push
add
inc
pusha
testb
and
xchg
or
adc
mov
imul
bound
imul
add
fistpll
add
xchg
fwait
adc
cmp
sub
movsb
push
cli
or
jle
call
idiv
pushf
test
jp
cmp
xor
pop
ja
mov
ret
dec
mov
add
gs
je
inc
outsl
outsb
je
outsb
imul
add
cmp
mov
cmp
mov
test
test
pushl
pushf
lea
je
pusha
clc
bt
cmp
add
lea
pushf
call
lods
pushf
cmc
cmc
movb
ror
pusha
mov
stc
pushf
add
bt
neg
pushf
cmc
call
add
push
je
push
outsb
ja
outsb
add
add
sbb
add
pushl
popl
pushf
mov
pushl
ret
add
inc
jb
gs
gs
jne
arpl
add
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
push
add
imul
add
icebp
add
mov
lea
shr
add
lahf
movzbl
cwtl
movzbl
setb
mov
not
lea
pushf
pusha
call
mov
lea
jne
shrd
adc
rol
shl
mov
stc
sub
movzbw
bt
mov
pusha
pusha
sub
push
jmp
add
inc
gs
gs
popa
insl
gs
gs
push
add
cwtl
inc
add
pusha
push
push
mov
lea
jne
not
jmp
call
add
inc
jb
popa
je
push
imul
push
add
pcmpgtd
out
btc
add
movzbw
lea
bswap
mov
pushf
movw
pushf
push
mov
not
lods
cmc
pushf
jmp
add
dec
jae
imul
shlb
and
jne
bt
btc
stc
mov
pushf
lea
jge
or
jmp
cwtl
or
repz
loopne
mov
sbb
pop
mov
jecxz
push
movsb
jmp
imul
mov
popa
roll
mov
push
cmp
fdivrp
fisubl
mov
dec
test
mov
std
aam
fxch
popf
popa
addb
mov
das
sbb
in
ljmp
loopne
xor
lock
add
cmc
dec
sbbb
cli
inc
hlt
jae
dec
dec
fxch
inc
mov
popf
rdtsc
outsl
aad
sbb
xor
cmp
cld
cmp
std
rorb
jae
ljmp
inc
inc
dec
mov
test
push
mov
mov
shll
in
xorl
loopne
outsb
or
push
movsl
add
nop
cltd
rcrl
cmp
orl
xlat
adcb
sub
scas
rolb
clc
cs
mov
adc
sbb
mov
push
pop
test
movsl
and
sub
bound
ja
jmp
mov
add
jns
inc
outsb
push
out
push
enter
and
jns
or
mov
movsl
fstpt
repnz
adc
push
jg
loope
and
xchg
or
fsub
xchg
xchg
in
mov
mov
rcrb
inc
sbb
in
push
or
xor
aad
mov
lods
add
inc
outsl
dec
outsb
je
jb
gs
jb
popa
je
push
arpl
imul
gs
jmp
add
push
je
imul
inc
dec
push
dec
inc
add
inc
and
jb
stos
pushf
pushf
lea
jmp
call
adc
push
pushf
jmp
pusha
movl
call
add
dec
outsb
jae
jb
dec
outsb
jne
add
xor
jmp
clc
or
movb
push
pusha
lea
je
pushf
jmp
add
push
gs
imul
outsl
jb
movsbw
mov
pushf
mov
push
setae
movsbw
mov
movsbw
mov
pushl
rep
xchg
pop
mov
movsbl
pushf
lods
call
pushf
pusha
jmp
filds
aas
lock
loopne
push
sub
adc
mov
and
adc
or
into
ror
aaa
in
sbb
lds
inc
stos
inc
sbb
ljmp
test
push
das
xchg
mov
push
fists
dec
arpl
popf
push
pushf
sub
std
lahf
pop
test
idivb
xchg
mov
cmc
loopne
fisttps
inc
call
ds
fprem
add
addb
push
xchg
stos
fisttpll
ret
shl
hlt
pop
inc
xchg
aam
inc
orb
hlt
mov
cld
push
jno
add
inc
jb
ja
outsl
arpl
push
arpl
movsbl
lea
push
jmp
dec
shl
stc
stc
mov
test
bt
bt
cmpb
jno
jne
and
sub
stc
mov
xor
rol
rol
bt
add
not
clc
shl
cmc
mov
push
call
pushf
jmp
add
push
gs
jb
popa
je
dec
gs
js
add
mov
xor
dec
mov
and
jno
movsb
add
or
call
sub
not
lea
pusha
call
add
inc
fs
jae
push
imul
arpl
add
cmp
mov
push
lea
ja
pusha
imul
call
les
loopne
pop
lds
stc
jmp
mov
xchg
cmp
add
xchg
aam
in
dec
shl
testb
xchg
add
lahf
jns
inc
lea
dec
cmp
cld
inc
sbb
pop
das
daa
sahf
push
sahf
lods
mov
sbb
jo
cltd
repnz
sbb
test
pop
sub
out
jno
mov
dec
xor
imul
fnstcw
fsub
out
ljmp
loopne
aas
push
out
int
popf
pop
test
in
adc
pop
sub
xchg
mov
push
icebp
xor
push
mull
sbb
xchg
ds
push
jno
sbb
daa
inc
or
and
xchg
int3
dec
mov
stc
add
and
ljmp
add
jmp
dec
ljmp
loopne
dec
inc
arpl
adc
stos
mov
jne
aad
loopne
jno
popf
lret
popa
out
stc
repz
mov
sub
popa
jnp
xchg
xor
insl
addr16
jae
sub
out
call
push
lcall
mov
cmp
fcmovnb
mov
scas
fwait
imul
mov
fidivl
imul
nop
mov
inc
loope
cmp
mov
fistps
sub
add
fldl2t
popf
or
lea
and
pop
in
leave
xor
mov
sub
arpl
push
das
sbb
and
addl
add
mov
movzbw
shl
xor
xchg
mov
movzbl
mov
clc
xor
clc
test
cmp
jmp
add
dec
outsl
popa
fs
jne
jae
jb
add
loopne
jl
and
mov
int3
ret
cmp
inc
jle,pt
ficoms
addr16
push
xchg
ret
aaa
fsts
adc
popa
inc
xor
loope
gs
push
and
lahf
gs
aam
enter
inc
or
cmp
pop
xor
and
xchg
cmp
rolb
popa
and
pop
adc
cld
insb
push
inc
mov
lcall
sub
jmp
fs
sub
push
lea
movb
pusha
xchg
not
movl
movsbw
setl
movsbw
jmp
pushl
popl
push
movw
pushl
ret
test
bt
add
stc
mov
rol
inc
rcr
bsr
mov
call
not
mov
jmp
add
bt
pushf
pushf
movzwl
push
shr
shld
neg
mov
call
add
dec
insb
gs
gs
outsb
jne
gs
jb
jo
outsl
jb
add
dec
insb
gs
outsb
imul
imul
arpl
xor
fs
insb
add
movl
call
lea
jne
shr
and
mov
inc
or
lea
stc
sub
shld
jmp
add
inc
jb
insl
gs
arpl
mov
pushf
push
push
lea
jmp
add
inc
popa
insb
insb
push
imul
outsl
arpl
pusha
cmp
movb
call
add
inc
outsb
jne
inc
insb
imul
inc
outsl
jb
popa
je
add
add
je
je
gs
push
outsl
fs
aas
pop
test
lea
pop
stc
push
clc
cmp
pusha
call
call
jmp
lea
push
movb
pusha
call
add
push
outsb
jb
popa
insb
imul
arpl
je
adc
movw
mov
mov
pushf
lea
jmp
add
inc
gs
arpl
dec
outsb
outsw
add
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
cmp
loopne
jnp
daa
lds
ja
jmp
dec
add
in
cmpsl
inc
loopne
cmpsb
fsub
loope
fcomi
adc
divl
dec
test
mov
dec
insl
lods
neg
jmp
xchg
adc
push
push
xchg
outsl
dec
and
inc
dec
jns
flds
cltd
pop
adc
popa
popf
sbb
mov
lcall
inc
loop
ret
ret
loope
test
add
dec
cld
mov
pushf
lea
jae
jbe
bt
clc
test
add
call
add
inc
gs
imul
outsb
addr16
add
enter
loopne
shll
popa
cmpsl
adc
and
jno
sub
mov
dec
fdivs
out
mov
xor
pop
sub
dec
mov
test
push
cs
imul
aam
xor
dec
mov
pop
insb
lcall
outsl
outsl
lahf
popw
subl
sbb
adc
in
rcr
xchg
adc
loopne
and
push
cwtl
lods
pop
and
xchg
xor
push
pop
subl
nop
xchg
xor
push
sbb
movsl
mul
xor
adc
aam
inc
mov
or
xor
jge
push
jno
stos
fnstsw
je
pop
scas
iret
lret
data16
cmp
out
pop
and
nop
testl
pop
bound
mov
jns
out
or
sbb
add
push
lret
sbb
mov
cmp
outsl
in
mov
lahf
jno
fs
ja
pushf
bt
imul
cmc
pusha
stc
pushl
add
mov
mov
pushl
push
lea
jmp
mov
pushf
jmp
add
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
lea
mov
jmp
mov
mov
setae
push
bswap
lahf
lea
lea
call
add
push
gs
imul
js
push
add
fsubr
pop
leave
add
add
inc
gs
jne
jae
jb
add
inc
jb
popa
je
push
push
add
pushf
clc
pusha
or
pushl
lea
jne
sub
mov
cmp
pusha
call
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
gs
outsl
jb
inc
inc
add
loopne
xor
mov
daa
adc
icebp
pusha
push
sub
rorb
push
xor
and
and
cmpsb
lock
mov
mov
nop
and
push
xchg
mov
adc
aaa
inc
popf
mov
out
mov
ljmp
push
xchg
xchg
in
cmp
jecxz
mov
inc
imul
fwait
xchg
repz
mov
in
incl
add
je
imul
outsb
addr16
add
int3
and
add
add
gs
mov
not
pop
pusha
mov
bswap
lea
mov
not
movsbw
jmp
add
push
popa
gs
jb
popa
jns
gs
inc
outsl
jne
fs
or
add
gs
je
dec
outsb
jne
add
inc
jb
gs
imul
push
lea
jb
aam
aad
movsbw
mov
stc
cmp
cmc
pushf
sub
pushf
mov
setb
mov
call
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
add
ja
arpl
add
aad
dec
add
fiadds
mov
or
not
neg
xor
pushl
and
add
call
add
imul
outsl
popa
add
mov
pushf
pushf
pushf
push
lea
jmp
lea
call
push
pushf
call
not
jmp
pushl
lea
je
push
lea
movsbw
mov
mov
call
stc
or
pusha
push
lea
je
push
pusha
lea
xchg
pop
lea
mov
movzwl
bswap
mov
pop
lea
pushf
push
not
push
mov
pushf
lea
call
jmp
dec
bt
mov
lea
sar
add
lea
setb
pop
jmp
add
push
gs
imul
popa
arpl
outsb
je
lea
mov
jmp
push
lea
je
setbe
pushf
lea
xchg
lea
lea
jmp
pushf
lea
jne
mov
mov
pushf
movw
mov
movb
lea
jmp
stc
jmp
lea
call
lea
jne
pushf
movb
pushf
movb
mov
mov
mov
push
lea
call
jb
pusha
push
pushf
mov
pusha
pushf
push
push
lea
jmp
add
inc
push
jo
jb
jne
inc
add
loopne
jno
or
fldz
nop
bound
int3
loop
inc
push
shrb
outsb
and
sub
jecxz
jmp
xlat
jns
pop
popf
pop
sbb
leave
cmp
std
push
cmp
in
cmp
add
push
adc
cmp
lahf
aad
es
imul
jns
xchg
mov
or
ljmp
ljmp
in
cmp
pop
in
loopne
sub
negl
dec
push
fsubr
int3
lea
jbe
and
sub
jns
imul
mov
jp
outsb
sbb
push
dec
pop
outsl
mov
stos
adcl
and
and
mov
xor
iret
sbb
std
ror
jecxz
mov
aam
add
incl
dec
cld
pop
push
xor
ss
aaa
cwtl
out
add
xor
outsb
add
cmc
jmp
pop
push
loop
add
outsb
fs
gs
popa
addr16
add
jb
loopne
push
test
cmp
fmuls
cmp
cmp
and
in
mov
mov
out
pop
rcr
popw
ljmp
push
fnstsw
mov
cmp
je
outsl
int
mov
adcl
adc
jle
mov
aaa
ds
aas
or
stc
mov
fimull
xchg
add
jno
jecxz
orl
stos
pusha
push
lea
jmp
add
push
gs
insb
imul
inc
popa
je
add
add
fsubrl
movb
lea
jmp
lahf
mov
mov
pop
lea
call
pushl
pushl
popl
pusha
movb
pushf
pushl
ret
lea
push
movw
push
pushl
lea
jmp
push
pushf
mov
push
movl
pusha
lea
jmp
call
add
inc
outsl
push
outsb
imul
imul
and
movl
call
jmp
jmp
xor
add
mov
in
std
mov
mov
test
inc
sub
lods
push
push
jb
sub
pop
pop
in
fwait
xor
imul
push
sub
gs
xor
jg
or
movl
pushf
lea
jmp
pushf
movl
pusha
movl
pushf
lea
jmp
add
inc
gs
imul
outsl
arpl
mov
shl
lea
call
pop
ret
add
dec
outsb
je
jb
arpl
imul
lea
ret
add
push
gs
arpl
insb
insb
push
outsl
jae
mov
call
add
inc
insb
outsl
jae
inc
outsb
push
inc
imul
loopne
not
out
push
jl
lock
nop
push
je
ficoml
imull
xchg
pusha
loope
push
repnz
hlt
lcall
icebp
sarl
xor
or
cltd
add
test
les
pop
hlt
pop
stc
push
ss
out
popa
mov
leave
ret
mov
inc
mov
mov
and
xlat
test
pushl
popl
movsbl
setne
mov
push
setne
mov
movl
call
pushf
cmc
or
lea
js
pusha
push
lea
jne
pushf
bsf
and
not
mov
pushf
call
pushf
pushl
popl
pusha
push
movb
pushl
ret
pushf
pushl
pusha
lea
jne
bts
mov
jmp
call
sbb
rol
clc
pop
seta
pop
inc
cwtl
lahf
mov
adc
inc
lahf
rol
cmp
pusha
cwtl
pop
mov
jmp
add
inc
gs
jne
jae
jb
outsl
jae
cmp
shl
pushl
pusha
jmp
pusha
mov
push
mov
mov
xchg
call
clc
xor
jmp
lea
je
push
mov
pushf
lea
jns
push
cwtl
push
movzbw
lea
pusha
pushl
movl
call
stc
clc
ror
jmp
add
inc
gs
arpl
insb
insb
push
outsl
jae
add
inc
push
jo
jb
add
push
loopne
loopne
fcmovnu
mov
test
adc
jb
inc
xlat
mov
aam
cmp
and
cmp
scas
pop
push
pop
cmp
and
xchg
mov
rcl
pop
or
mov
icebp
in
aas
or
popa
scas
outsl
or
lea
xchg
push
enter
add
cld
or
or
in
test
dec
divb
loopne
jle
lcall
stos
andl
iret
mov
or
pop
lock
lea
leave
pop
movsl
pop
mov
xchg
fnsave
mov
loop
cmp
aaa
xchg
pusha
inc
mov
sbb
lret
sbb
dec
lcall
inc
into
add
or
in
loop
sbb
into
inc
pop
in
dec
setbe
inc
jns
push
in
xlat
jnp
call
mov
loopne
inc
cld
fidivl
sbb
rolb
xchg
xchg
cwtl
xchg
pop
mov
nop
aas
or
jo
and
int3
xlat
out
adc
paddw
and
fdivrs
mul
jg
popf
push
stc
xchg
inc
xor
in
mov
out
push
shrl
and
cmp
ret
inc
mov
in
fcomp
sbb
and
cli
cmp
std
loop
enter
in
clc
pusha
and
rcr
pop
add
lahf
sub
sub
mov
pop
pop
lods
add
jmp
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
or
movl
mov
movl
push
mov
lea
jmp
fistpll
cli
cs
xchg
dec
popa
movsl
incl
push
pop
inc
inc
dec
and
std
aam
in
mov
sahf
insb
pop
fs
add
xor
xor
cmpsl
cmp
fisttpll
mov
mov
push
pushf
icebp
popf
dec
inc
sbb
mov
xchg
jecxz
scas
xchg
mov
gs
faddl
ror
rorl
add
les
push
xchg
fdivrp
loopne
push
push
pop
incb
insl
jp
repnz
call
xchg
adc
jno
adc
gs
push
lret
cltd
imul
sbb
mov
mov
pop
dec
out
sbb
gs
aas
xorb
js
jle
icebp
std
in
sub
rcrb
mov
push
mov
out
xchg
mov
or
push
rolb
dec
mov
lds
and
xor
xchg
cli
into
test
add
mov
stc
cs
dec
shll
xlat
mov
add
mov
aad
add
nop
add
push
mov
stos
shrl
dec
sub
repz
mov
cmpsb
cmc
lods
mov
cmp
mov
fldcw
add
test
test
mov
out
sub
sub
or
mov
lret
xor
inc
out
out
insl
imul
push
movaps
rcr
lds
adc
call
imul
outsl
dec
jne
je
inc
jns
add
push
rolb
add
setnp
mov
lea
mov
lea
cwtl
not
pushf
lea
push
lea
call
bt
test
cmp
pusha
jmp
call
call
add
dec
jae
jno
popa
insb
inc
push
dec
inc
add
add
arpl
gs
insb
imul
lea
jmp
add
inc
jb
popa
je
inc
imul
cmp
add
jecxz
add
shl
test
rcr
adc
add
rcr
pop
shl
rol
pop
test
cmp
cmp
pushf
cmp
pushf
push
lea
jns
sbb
call
call
add
dec
outsb
je
jb
arpl
arpl
fs
ja
push
call
pushf
lea
call
call
add
push
gs
imul
inc
gs
outsl
jo
imul
divb
loopne
fadds
hlt
or
cmp
and
stos
arpl
inc
add
inc
fcompl
mov
or
mov
push
xchg
mov
ds
js
stc
sbb
jge
insl
testl
and
test
lds
std
aam
ret
repz
shll
in
and
xchg
jecxz
fildll
lcall
sub
sbb
outsl
dec
inc
xchg
iret
mov
leave
stos
test
rorb
int3
jne
push
push
push
jae
les
loopne
fildl
cwtl
call
ret
mov
adc
cs
and
in
push
jle
shr
idivb
sub
or
mov
mov
lods
dec
dec
xchg
inc
and
mov
jmp
add
stos
jmp
dec
and
std
aam
ljmp
loopne
add
cmp
cli
int3
mov
adc
cmc
add
pop
cld
rclb
shll
stos
cmpsb
lret
lods
pop
jno
loop
lret
scas
std
adc
xchg
push
xlat
push
inc
push
push
or
xor
ljmp
jle
mov
ss
test
iret
mov
sbbl
xchg
and
scas
insl
push
in
idivb
lods
add
push
rcr
mov
sub
fidivrl
loop
xchg
mov
add
jo
inc
imul
sar
pushf
add
sub
btc
and
mov
jmp
pushl
pushl
movl
push
lea
jmp
pushf
mov
mov
mov
movb
movzbw
call
fs
cs
cli
xor
pop
jnp
push
mov
daa
sarb
inc
cmp
insl
ss
orb
roll
repnz
mov
fdivs
lods
push
adc
push
dec
daa
insl
lret
popf
fistpll
addr16
adc
sahf
and
add
adc
cmp
daa
mov
test
add
mov
inc
cmpsb
mov
shll
dec
xlat
adc
iret
adc
enter
ret
dec
call
adc
pop
subl
sbb
int
add
sub
push
or
mov
stos
pop
fsubrl
popa
jno
into
stos
ror
dec
jmp
add
popa
insb
inc
insb
insb
outsl
arpl
cmp
call
lea
mov
jmp
dec
sbb
loopne
subb
pop
dec
bound
ds
out
fsubl
add
sbb
popf
or
lock
inc
and
mov
adc
loope
pop
add
int3
xchg
pop
ret
mov
mov
xchg
push
and
push
sbb
sti
sub
push
push
not
jmp
pushf
lea
jne
pusha
not
add
mov
neg
pushf
sub
inc
lea
pusha
mov
sub
jmp
call
shrd
mov
cmp
pushf
cmc
cmp
pushf
lea
jb
call
add
dec
popa
jo
imul
gs
add
out
mov
stc
pusha
test
jmp
pushf
pushf
inc
pusha
push
mov
lea
jmp
pusha
movl
movw
movw
call
mov
lea
jne
pushf
mov
seta
mov
call
imul
jmp
sub
sub
loopne
cmpsb
jo
sbb
sub
push
pushf
or
pop
pop
cmp
lods
lret
pop
ret
cmpsb
add
aas
jbe
jge,pn
rcr
and
rcll
xchg
pop
fwait
jne
mov
repnz
lods
mov
lds
and
adc
adc
pushf
ljmp
push
lcall
add
sub
xor
mov
xchg
cltd
fimuls
add
je
outsl
jae
bound
popa
insl
add
pop
xadd
das
pop
bt
jmp
sbb
cmc
pushf
lea
add
clc
stc
call
add
inc
imul
jne
arpl
add
pusha
cmp
pusha
cmp
add
call
push
pushf
jmp
sub
stc
cmp
pusha
call
lea
pushf
lea
call
call
add
inc
gs
je
imul
inc
js
add
add
insb
inc
imul
fiadds
shl
decb
mov
pushf
shl
bswap
aaa
add
pusha
not
setb
movzbw
pushf
lea
pushf
lea
call
jmp
clc
test
add
pushf
lea
jmp
mov
loopne
lret
jo
rclb
mov
dec
jo
sbb
ja
insb
stos
sti
lea
arpl
sbb
movsl
xor
xchg
call
ficompl
mov
ss
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
add
je
gs
jo
popa
je
inc
add
jmp
jbe
push
loopne
jo
sub
add
pop
and
out
jbe
pop
add
cmp
daa
fists
cmpsb
std
imul
dec
push
aas
inc
xor
jmp
sbb
into
sbb
jle
ret
cld
cs
xchg
mov
hlt
test
dec
or
in
xlat
in
fwait
push
add
loopne
jmp
fsts
sbb
lods
insb
jle
jle
lock
mov
adc
xor
xor
loope
inc
cmp
and
dec
xchg
aas
jb
xor
cmp
sub
jp
jo
bnd
dec
pop
outsl
lods
mov
popf
xchg
add
or
mov
jns
gs
sub
cmpsb
lods
outsb
mov
cmp
test
out
pop
test
jno
xchg
outsl
aas
push
mov
fmull
fwait
scas
sbb
sbb
adc
jb
xlat
das
in
test
in
mov
xor
sbb
mov
xorb
jecxz
in
pop
xchg
xchg
jnp
insl
xchg
or
imul
mov
mov
lock
outsb
mov
adc
xor
int
xor
xchg
inc
lods
hlt
out
mov
notb
or
mov
jae
in
mov
test
das
std
ret
pop
mov
xchg
push
jecxz
pop
jns
arpl
imul
push
lea
jmp
bswap
sets
call
jmp
pusha
mov
call
jne
aam
loopne
cmc
fwait
gs
hlt
lea
loop
insb
fstpl
or
cld
lret
jmp
push
into
xor
fcompl
enter
gs
cmpsl
shl
mov
loope
mov
adc
xor
scas
dec
movsb
ret
pop
mov
dec
mov
xor
dec
inc
sub
psrad
rcrl
mov
add
mov
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
inc
and
add
call
push
lock
std
std
mov
outsl
lret
ret
je
inc
aad
shr
sub
pushf
mov
pop
cmp
xor
xchg
cmp
jge
imul
into
and
aam
pop
rolb
test
sub
fwait
push
shrl
add
loop
in
xchg
push
imulb
push
or
inc
enter
filds
fs
jne
movsbw
call
add
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
jae
adc
loopne
inc
inc
jb
stos
mov
lcall
cmp
sbb
mov
add
test
mov
movsb
in
cmp
cmp
xlat
loope
sub
cmp
in
movsl
mov
out
arpl
and
fisubl
lret
repnz
adc
sub
mov
jge
xorb
rolb
adcl
clc
pop
and
ret
jmp
jecxz
ds
push
jns
and
call
divl
aaa
cwtl
and
cvtdq2ps
loopne
mov
mov
iret
push
xchg
aad
popf
sbb
jg
imul
dec
out
jl
test
pop
cmp
loop
sarl
imul
negb
mov
jp
jb
jle
into
jns
add
add
nop
dec
add
dec
add
movsb
add
lods
add
add
add
add
je
imul
js
inc
add
add
je
jb
arpl
fs
jae
add
add
outsb
inc
imul
outsb
addr16
add
inc
and
in
inc
and
lea
inc
jae
cwtl
call
add
inc
insb
outsl
bound
dec
popa
outsb
fs
add
lea
or
push
lea
call
pushf
lea
jo
jb
sbb
aas
aaa
movzbl
shl
shr
stc
imul
call
add
push
gs
jb
jo
add
mov
add
nop
add
loopne
sbb
mov
adc
scas
push
jcxz
rorl
or
shll
cmp
sahf
fs
roll
lcall
lret
cmpsb
aad
mov
sbb
xchg
aas
popa
fnstenv
int3
add
loope
sub
pop
pusha
inc
rolb
push
xor
call
dec
mov
stos
pop
push
movsl
lcall
pop
sarb
jge
ljmp
sarb
shll
js
stos
push
push
pop
les
push
ds
and
stos
jne
lahf
jge
pushl
lea
call
sub
xadd
not
cmp
xor
lea
mov
push
mov
lea
sets
pushf
lods
pushf
mov
ror
jmp
lahf
das
mov
add
adc
mov
bsf
sub
aam
shl
push
shl
push
bsf
add
push
push
mov
mov
test
pushf
lea
jae
jmp
add
inc
imul
outsl
ja
add
mov
push
jo
and
mov
xchg
pop
fsts
movsb
xchg
fisttpl
cmp
jno
mov
cmpsl
mov
test
xor
pop
cmp
mov
fsubl
mov
xchg
pop
mov
xlat
push
xor
cld
sbb
inc
aam
jo
mov
xchg
xchg
jmp
clc
xlat
in
xchg
fcmovnb
fcmove
loopne
mov
outsb
mov
push
ret
cli
xlat
push
orb
inc
mov
and
and
jno
sbb
int
xchg
xchg
sbb
add
ss
cmpsb
mov
xor
push
aad
inc
loop
repnz
ljmp
inc
pushf
dec
sbb
or
test
xlat
dec
cltd
inc
das
les
xor
aaa
jno
xchg
insl
das
or
cmpsl
pop
jne
sbb
pop
cmc
leave
cs
arpl
pusha
pushf
call
call
xchg
push
jle
loopne
ret
mov
jle
ljmp
test
xchg
cld
pushf
out
in
mov
cmpsb
mov
push
scas
mov
cmpsl
mov
and
mov
jmp
imul
pop
sbb
cld
test
xchg
pop
and
pop
add
int3
stc
cmp
es
mov
dec
divb
shll
pop
movsb
mov
fcoml
std
pop
pop
xchg
mov
mov
ljmp
js
lods
dec
xor
or
and
enter
movsb
ret
push
jge
sub
lea
or
inc
loopne
bt
push
cmp
pushf
call
add
dec
insl
popa
addr16
imul
imul
shl
cmp
pusha
pushf
pushl
setg
sbb
not
movsbw
lea
lea
call
add
insb
jae
jb
jo
inc
add
add
je
popa
jae
inc
jb
outsl
jb
add
push
insb
popa
jns
outsb
push
inc
imul
outsl
ja
ja
gs
outsl
jo
jo
add
gs
xor
fs
insb
add
add
inc
gs
outsb
push
inc
imul
je
inc
outsb
je
imul
and
xchg
jmp
stc
test
shr
push
cmp
pushf
lea
je
call
pusha
pusha
lea
je
cmp
add
clc
mov
cmp
push
push
cmp
add
clc
mov
adc
mov
test
cmp
jmp
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
pusha
mov
mov
lea
jbe
rol
test
stc
adc
mov
test
call
add
dec
insb
gs
jb
ja
bt
push
sub
bt
pusha
jmp
pusha
mov
lea
je
jmp
add
inc
insb
outsl
bound
dec
outsl
arpl
repz
jge
push
push
movl
call
pusha
mov
call
movzbw
pushf
pop
lea
mov
movsbw
bswap
cwtl
mov
push
mov
pushl
movsbw
movsbw
push
mov
call
add
dec
outsb
jbe
insb
imul
je
sub
pusha
mov
rol
rcl
mov
rcr
test
add
rcr
bsr
ror
shr
bsr
pusha
rcr
jmp
add
dec
gs
push
outsl
inc
push
pushf
pushl
popl
movb
pushl
movb
pushl
ret
add
dec
jne
jo
je
bound
push
je
imul
push
lret
loopne
daa
gs
add
sahf
mov
xchg
and
push
pop
shlb
xchg
shlb
shll
add
movsl
mov
push
add
jl
xchg
mov
xchg
pushf
sub
xor
sbb
sbbb
inc
lods
cmp
jle,pt
mov
int
imul
dec
mov
cmc
xlat
in
jge
loope
lcall
jp
data16
mov
out
sub
cmp
inc
pusha
daa
out
int
mov
ljmp
mov
popa
inc
hlt
cmp
mov
push
mov
push
cmpsb
pusha
fisubl
jno
test
stos
push
cmc
je
adc
mov
je
push
and
daa
scas
cwtl
mov
mov
ljmp
mov
pop
pushf
xchg
call
fbstp
jbe
lods
push
dec
or
loopne
dec
xor
ret
adc
xchg
out
cmp
mov
stos
cmp
insb
aas
imul
xchg
in
cmp
addb
pop
adc
mov
sarb
jnp
jl
sbb
hlt
add
push
cmovbe
cmp
inc
loope
ljmp
hlt
pop
mov
cmp
rcrb
sbb
and
pop
scas
add
push
mov
lcall
ljmp
sub
and
repz
icebp
mov
or
icebp
pop
push
stos
pushf
push
mov
push
pushf
movb
mov
lea
jmp
add
dec
gs
imul
lahf
lea
mov
jmp
pushf
call
movl
jmp
pop
aaa
jne
loopne
loope
lea
xor
rcl
pop
mov
add
inc
loopne
insb
lock
arpl
int3
inc
jae
sub
sti
jns
and
das
sar
in
std
stos
inc
xchg
jg
hlt
xlat
in
or
push
gs
dec
push
xor
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
cld
cmc
add
add
add
clc
xchg
bt
sbb
clc
push
bt
shl
call
add
inc
outsl
insl
jo
jb
push
je
imul
push
mov
call
jmp
mov
pushf
call
leave
jae
leave
loopne
mov
pop
mov
adc
mov
pop
dec
pop
or
mov
inc
lds
shl
stos
cli
pop
lock
dec
mov
push
or
push
pop
bound
mov
icebp
cld
ficoms
sti
push
dec
gs
mov
sub
mov
or
ret
sbb
popa
bound
outsb
jne
je
insl
add
push
mov
lea
pusha
mov
not
lahf
setno
pushl
popl
seto
setp
setp
mov
movzbl
pushf
movsbw
lahf
movl
pushl
cwtl
pushf
lahf
lea
movl
mov
pusha
movl
pushl
pushl
popl
pushf
push
pushl
ret
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
add
inc
jb
popa
je
inc
outsb
push
inc
imul
movsl
dec
lea
je
lea
lea
push
pushf
movzbw
push
movzwl
call
pushf
movw
xchg
lea
lahf
movsbw
movw
movl
movzbl
movzbw
pop
lea
pusha
push
call
popf
rdtsc
nop
push
push
movl
push
pushf
lea
jb
push
pushf
pusha
pushf
mov
lea
jmp
add
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
inc
jb
popa
je
inc
dec
inc
imul
add
add
mov
or
mov
lea
jne
pushf
inc
neg
mov
movb
pushf
mov
bt
or
pusha
jmp
add
push
imul
pusha
mov
push
push
lea
jmp
call
add
push
gs
imul
outsl
arpl
jae
add
inc
js
je
jb
arpl
jae
test
sets
pusha
mov
push
mov
jmp
movw
pushf
lea
jb
bts
add
cmc
aam
cmp
bswap
lahf
mov
pushf
call
pushf
jmp
mov
pushl
popl
push
pushl
ret
pusha
jmp
jmp
setge
mov
movw
lea
je
lea
lea
call
lea
je
pusha
mov
call
push
lea
je
pushf
lea
mov
lahf
movsbw
lea
pusha
mov
xchg
movzbw
jmp
shld
mov
shld
sete
mov
clc
shl
pusha
lea
call
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
lea
ja
jge
pusha
pusha
pushl
lea
jb
jmp
jmp
add
push
outsl
jae
dec
gs
popa
addr16
add
mov
test
jmp
add
mov
call
add
pop
ret
movzwl
bswap
call
add
inc
gs
imul
cmp
test
movzbl
add
lea
mov
push
call
cmc
or
pusha
pushf
movb
mov
lea
jne
rcr
mov
xor
mov
push
stc
or
pushf
pushf
pushl
pusha
lea
je
pushf
lea
lea
pushf
movw
jmp
outsl
insb
xor
cs
insb
add
add
push
and
sub
call
add
push
jb
outsb
jae
popa
je
dec
inc
dec
push
jns
inc
arpl
insb
add
mov
jno
shl
push
jmp
push
mov
loopne
adc
inc
int
or
sahf
inc
sub
cs
addr16
sub
cmpsb
iret
aaa
cmpsb
cmc
and
mov
dec
xor
in
into
jno
or
xchg
dec
push
inc
sub
mov
inc
xchg
jmp
shl
xor
dec
mov
mov
cs
inc
into
repnz
out
lea
or
in
pop
enter
jl
sbb
adc
mov
push
jmp
mov
scas
inc
or
rolb
or
xchg
popa
rcrl
inc
dec
adc
loop
lock
jae
movsl
xchg
xchg
cmp
sbb
mov
sarl
mov
pop
call
imul
mov
pop
iret
push
sbb
cmp
insl
xchg
adc
hlt
in
jmp
out
mov
aam
adc
mov
in
repnz
mov
clc
inc
sbbb
add
adc
push
in
hlt
fs
inc
mov
jecxz
test
mov
lock
push
pop
xchg
test
icebp
dec
shll
ret
and
mov
pop
xor
std
dec
daa
lcall
add
add
push
in
xlat
in
dec
xor
int3
lcall
cwtl
mov
mov
inc
data16
dec
mov
inc
and
into
jl
movsb
mov
shrb
repnz
hlt
xchg
mov
push
iret
rorl
or
stc
fists
and
out
push
jno
cmp
push
out
inc
iret
in
lea
call
adc
data16
into
test
fsubs
dec
rcl
pushf
mov
sub
add
add
xor
dec
in
in
fldenv
xchg
fwait
outsb
and
insb
ret
adcb
xchg
bound
dec
jmp
je
test
dec
enter
stc
xchg
pop
cmp
lds
ret
scas
push
xchg
movsl
and
xchg
lret
add
push
or
fiadds
outsl
xchg
loop
sbb
cmc
ror
insb
mov
test
std
stos
add
lock
test
or
pop
loopne
push
dec
xor
bound
cwtl
out
xchg
dec
cli
mov
push
es
in
fldcw
daa
movsl
fwait
out
call
lods
cmp
jmp
lahf
not
lahf
mov
lea
pushf
movsbw
movsbw
mov
push
bswap
xchg
mov
call
movl
movb
push
pushl
popl
pusha
pushl
ret
add
inc
insb
imul
arpl
outsb
add
movsb
mov
add
clc
test
bt
sub
push
setle
call
lea
jb
bsr
pushf
das
mov
clc
movb
sub
call
pushf
mov
inc
cmc
jmp
add
inc
gs
popa
jo
jne
add
jmp
push
and
test
jmp
loope
mov
adc
clc
mov
stc
jmp
movb
lea
jne
pushf
pushf
jmp
add
inc
gs
jne
dec
outsb
jne
cmpb
jne
shll
shll
push
lods
ror
add
neg
sub
not
mov
pop
ret
mov
loopne
dec
sbb
mov
paddsw
and
and
inc
addr16
sbb
or
add
cld
into
adc
mulb
xchg
xor
rorb
xchg
fwait
cmpsl
aaa
and
dec
xor
xchg
scas
push
pushf
sub
lods
insl
data16
xchg
xor
push
rcrl
mov
gs
mov
leave
xchg
jne
sbbb
xor
sbb
addr16
cmc
aas
cmp
cmp
insb
push
mov
push
push
ljmp
orb
jmp
mov
add
je
push
dec
outsb
outsw
add
call
lea
movzbw
pop
jmp
call
cmp
shl
sub
cmp
or
mov
dec
xadd
mov
mov
add
add
adc
shr
call
lea
jb
rol
bsr
mov
seta
jmp
pop
das
cs
inc
xor
lock
cld
lcall
add
mov
call
adc
fildll
add
mov
push
scas
and
inc
into
iret
and
pusha
fisttpll
divps
mov
xchg
or
cmp
xlat
in
cmc
fisttps
sti
cmp
add
xchg
or
adc
imul
xchg
pop
stc
mov
test
jnp
mov
mov
cmp
jnp
cmp
sbb
addb
inc
repz
dec
xorb
xor
or
jp
cld
imulb
xchg
sub
mov
sbb
stos
idiv
pop
add
cmpsl
jns
inc
cli
aaa
push
push
lahf
scas
inc
test
push
xor
outsb
insl
lret
sub
push
sub
or
je
xor
dec
and
jl
or
pusha
lea
jle
jb
shrd
cmp
call
pushf
call
movsbw
not
lea
mov
push
lea
call
pusha
push
pushl
push
lea
jne
sets
movsbw
pushf
lahf
mov
pushf
lea
jmp
xor
sbb
dec
mov
imul
jae
mov
scas
add
fcoms
jp
inc
push
pop
cmp
add
cld
hlt
mov
cld
mov
lds
movsl
out
push
fcmovnb
sbb
movsb
or
dec
dec
sti
sub
divb
lock
sarb
scas
jne
pop
cli
cmp
add
out
in
js
mov
loopne
push
lods
ficoms
es
test
pop
push
sub
xor
jns
test
andl
or
lret
clc
mov
pop
enter
faddp
insb
push
sub
jcxz
fadds
in
xorl
rcll
and
outsb
sbb
jge
repz
mov
imul
aad
xor
shll
out
cmp
xor
pop
mov
jb
cli
pop
imul
dec
push
ret
stc
sub
sahf
xchg
pusha
out
jns
adc
jecxz
adc
jl
inc
mov
pop
add
push
fdivrs
sbb
imul
pop
sub
pushf
sub
xor
test
mov
clc
mov
adcb
nop
rorb
pushf
ds
btr
mov
and
dec
faddl
rclb
movsb
or
lods
icebp
mov
gs
jb
pop
scas
sbb
mov
xorb
or
add
dec
jae
outsl
outsl
insl
gs
mov
in
push
mov
mov
stos
pop
mov
push
adc
inc
dec
int3
sub
dec
or
mov
push
cs
out
push
mov
jg
cwtl
sbb
adc
ficompl
mov
jge
dec
movsl
add
jge
mov
xlat
in
testb
push
cli
and
out
xor
fistpll
shrl
outsl
jnp
xlat
or
inc
test
lret
loop
push
int3
jbe
push
in
fcmovu
push
jge
jle
xchg
stos
loop
and
xchg
stos
mov
mov
xchg
xchg
adc
xchg
cs
add
adc
push
out
add
das
mov
insb
cmp
in
inc
out
push
cld
cmp
loope
inc
inc
add
lret
iret
flds
pop
int
jmp
push
pop
or
iret
mov
incl
test
test
and
inc
jg
jne
popl
movzbw
push
lea
lea
push
not
lahf
push
lahf
lea
call
add
dec
insl
popa
addr16
imul
fs
xor
shl
cmp
movb
add
jmp
jmp
jmp
pushf
pushl
stc
shr
pusha
jmp
movw
xchg
movzbw
jmp
movl
pusha
pushf
push
pushf
lea
jmp
jae
gs
insb
xor
cs
insb
add
fs
je
jb
mov
jp
aas
add
cmp
movzbl
lea
not
setbe
mov
push
movl
pusha
jmp
pushf
pusha
pusha
mov
push
lahf
jmp
cmp
pushl
add
add
rcr
mov
mov
bt
add
rol
mov
rcr
stc
movl
cmp
mov
lea
cmc
jp
cmc
cmp
call
pushl
popl
pusha
pushl
ret
add
inc
js
push
gs
dec
jne
inc
add
add
je
outsb
jne
je
imul
and
sub
lea
setne
lea
pushf
push
call
add
dec
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
inc
iret
pop
add
add
add
add
add
add
add
dec
add
add
add
mov
add
sub
leave
rcll
jbe
cmp
mov
cmpsb
fwait
mov
bound
fstps
ficoms
xlat
es
inc
and
cmc
js
out
bound
xor
iret
sar
repnz
push
pop
ja
lret
stos
jo
mov
imul
cmp
ds
daa
jmp
sbb
testb
adcl
mov
and
xor
and
xchg
sbb
jae
cmp
jae
mov
jle
mov
xchg
out
out
shll
pop
enter
cmpsb
lock
aas
fistl
popa
push
sti
jmp
mov
hlt
xchg
push
inc
pop
leave
sbb
popa
mov
mov
push
xchg
jge
xchg
pop
jge
and
xchg
mov
testl
xlat
xor
rcrb
xor
stos
out
sar
and
adc
mov
movsl
pop
and
mov
dec
int3
pop
fwait
insb
mov
dec
cs
out
orl
mov
cmp
push
sub
test
ljmp
pop
cmpsl
mov
int3
shlb
repnz
fs
rcrb
in
jecxz
or
movl
mov
push
repnz
gs
out
xor
loope
pmulhuw
data16
xchg
fiadds
pop
dec
paddb
xlat
jo
or
mov
xchg
gs
jno
nop
mov
out
repz
scas
and
xlat
loopne
add
adc
stos
xchg
ret
popa
mov
adc
out
add
xor
pop
test
or
dec
push
je
fimuls
iret
addl
xchg
ds
cmp
add
call
movsb
push
loop
cmp
or
imul
inc
mov
xchg
pop
mov
sub
sbb
xor
adc
and
jne
sub
xlat
fisubl
imul
add
sahf
cmp
inc
ljmp
mov
call
mov
bnd
outsb
std
and
aas
inc
and
xor
lret
mov
xchg
fimuls
movsl
jnp
fidivrl
aam
pop
add
lods
xchg
insl
roll
push
pop
and
xchg
adc
push
and
fiaddl
aad
xchg
sub
jns
shll
xlat
pop
push
jg
xchg
pop
clc
and
mov
mov
and
jle
xchg
jg
inc
mov
xchg
jnp
mov
and
movsl
xchg
stos
push
clc
test
push
loope
ds
or
fs
shr
enter
inc
add
stos
or
push
cmpsl
or
sbb
xchg
jns
loopne
cmp
imul
jmp
fsubrl
pop
and
inc
xchg
push
push
xchg
decb
enter
pop
addr16
movsb
je
inc
mov
test
nop
repnz
test
mul
enter
sbb
cmpsb
push
outsb
lods
push
mov
adc
test
push
aad
mov
int
lds
and
pop
mov
psrlq
fildll
jecxz
pop
pop
inc
mov
xor
xor
fiadds
or
push
cmpsl
aad
push
mov
inc
xchg
js
call
lods
mov
cmp
shr
pusha
inc
xchg
mov
popa
clc
out
enter
shlb
mov
dec
xchg
adc
aaa
dec
mov
bound
rclb
jae
aas
push
cmp
xchg
jmp
arpl
in
mov
subb
shlb
sbb
inc
outsl
jo
mov
push
jno
sub
jno
and
decb
inc
mov
cmp
pop
cmp
cmp
sub
cmp
jns
jns
leave
pushf
push
xor
mov
jae
es
clc
add
cmp
mov
jmp
add
dec
mov
jge
sti
lea
outsb
shrl
add
clc
push
test
hlt
sub
add
xor
mov
mov
loop
inc
out
aad
sti
inc
xchg
hlt
sub
mov
shrl
push
clc
inc
ja
in
sub
fnstcw
add
nop
mov
movsb
xor
call
xor
inc
inc
clc
push
jae
ds
and
into
add
insb
pop
fisubs
mov
sub
nop
or
push
sub
iret
loopne
jle
testl
push
in
fs
dec
adc
pushl
dec
fs
rcrl
add
dec
mull
aaa
xchg
hlt
push
xchg
and
aaa
jbe
out
cmpsb
cld
incb
out
insl
in
or
push
icebp
fs
push
rcll
adc
pop
incl
and
xor
cmp
shll
out
test
mov
mov
addr16
sbbl
sbb
adc
lds
pop
test
js
leave
js
sahf
cmc
sub
popa
jne
in
dec
rcr
fmull
das
mov
ret
pushl
or
das
int3
push
data16
shrb
fwait
pushf
sbb
cmp
sub
repnz
es
addr16
jg
aad
xchg
and
pop
js
ljmp
stos
pop
cltd
dec
xchg
add
jae
pop
push
jae
cmpsl
loop
jo
test
cld
lds
push
roll
inc
cld
dec
pop
and
jo
das
scas
inc
mov
stos
cwtl
ss
scas
cld
aad
test
rclb
xchg
jge
arpl
xlat
sahf
or
in
outsl
adc
fmull
xor
aam
ljmp
xor
movsb
jnp
mov
scas
push
mov
push
movsb
xchg
es
cli
rcr
test
pop
repnz
cld
push
movsb
scas
jns
push
sub
dec
mov
add
scas
lea
iret
call
shrl
aam
insb
rorb
lea
xor
cmp
cmp
push
cltd
mov
jne
pop
cmp
jnp
and
or
test
cmpsb
out
nop
inc
and
stos
in
xchg
ret
fnstcw
sub
mov
pop
aam
mov
mov
or
out
mov
popf
rcll
mov
mov
and
jecxz
push
sbb
cmp
xor
and
aad
fpatan
testl
adc
rcl
pop
ret
stos
clc
mov
mov
dec
cs
adc
sbb
pop
xchg
shlb
pop
adc
jnp
xor
mov
xchg
mov
sub
dec
xchg
sti
push
jns
mov
adc
inc
repz
imul
xchg
scas
jae
cmp
cmc
jo
cli
xor
fs
jl
popa
or
and
data16
push
pushf
pusha
jle
ret
test
or
fisttps
arpl
mov
ficoms
cs
mov
out
fdivrl
in
cmp
call
pop
cmp
mov
mov
add
loope
daa
xlat
aam
dec
and
cltd
test
push
jmp
mov
add
ljmp
or
mov
push
ret
aad
call
mov
sbb
cmp
mov
inc
inc
aam
mov
cltd
das
lods
test
xchg
push
bound
xor
and
mov
inc
mov
sbb
lds
bound
or
or
addr16
push
lods
clc
mov
mov
aaa
sarl
je
pop
dec
jnp
pop
and
cli
adc
shll
add
dec
sbbb
faddl
mov
cmc
orb
push
pop
pop
repz
imul
push
fsub
sub
clc
add
mov
push
mov
pop
rcr
or
push
mov
mov
sbb
fstl
add
jl
imul
pop
in
iret
sti
enter
add
movsb
repnz
fnstcw
ja
outsb
dec
jecxz
and
xchg
adc
and
mov
cld
stos
sub
pop
subb
dec
mov
testl
add
or
pop
mov
mov
cmpsl
inc
ret
xchg
daa
movsb
pop
mov
xchg
xchg
inc
push
cwtl
or
lret
cltd
repz
dec
bound
mov
mov
or
pop
lods
push
cwtl
sbb
rcrl
cs
xor
into
mov
pop
cmp
nop
out
test
loop
jmp
lods
push
xchg
adcl
pop
pop
mov
xchg
mov
mov
pop
ljmp
sbb
outsb
add
pop
out
add
mov
jmp
std
cmpsl
sub
roll
in
sub
push
push
pusha
ret
xchg
pop
movsb
jp
test
stc
cld
adc
ss
pop
into
sub
pusha
sbb
jae
shrb
jg
movsl
adc
mov
mov
jg
and
mov
xor
jl
add
xor
cwtl
mov
sbb
rcr
insb
lds
clc
jg
ss
fiadds
mov
out
jmp
stos
dec
adc
cld
cltd
mov
dec
add
in
mov
hlt
inc
movsb
mov
scas
addl
idivl
rolb
sbb
mov
lea
push
ljmp
iret
cli
or
pusha
pop
pushf
mov
xchg
iret
ds
push
dec
sbb
lods
dec
or
aad
mov
sub
daa
sub
mov
das
scas
loopne
scas
mov
roll
jne
bound
inc
add
and
adc
sub
push
rcrl
int3
dec
add
out
cmp
test
call
into
fucom
push
push
push
mov
cmp
lahf
add
call
jnp
imul
jle
mov
mov
cmp
pop
jno
jae
mov
pop
mov
mov
pop
or
pop
jns
mov
sub
inc
cli
mov
je
ja
movl
cli
insb
jns
ret
dec
pop
xor
pop
push
nop
roll
test
cmp
in
adc
or
movsl
xchg
jno
xchg
daa
cmpsl
sbb
or
lds
sub
fistl
je
out
idivl
and
sarb
dec
add
mov
test
mov
stos
and
lret
sbb
and
incl
lea
push
xor
sub
out
mov
stos
jge
into
jecxz
imul
pop
ss
lahf
xorl
mov
mov
clc
jbe
rorl
mov
out
in
call
push
add
mov
call
pushf
movw
movb
lea
jb
push
pop
daa
xor
cmp
push
call
push
lea
je
clc
shld
setbe
mov
call
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
incl
add
push
imul
popa
bound
add
add
push
lea
jb
test
xor
cmp
test
pushf
call
add
inc
gs
imul
js
inc
add
add
imul
jae
addr16
add
add
je
jns
je
insl
dec
outsb
outsw
add
dec
dec
dec
dec
cs
dec
dec
add
jne
popl
lea
jbe
push
bswap
push
call
add
lea
mov
clc
clc
cmpb
call
call
pushf
sbb
jmp
add
push
push
inc
inc
insb
gs
outsb
jne
add
mov
jg
pop
or
daa
or
mov
jno
je
subb
ds
int
lock
cmp
aam
test
cs
enter
ret
push
mov
rcrb
xor
stc
fadds
inc
xchg
sbb
filds
jp
cli
les
push
adc
push
xchg
and
movb
lea
ja
shl
sub
dec
rcl
bts
sub
add
rcr
sub
rcl
pushf
mov
or
ror
call
add
dec
outsl
popa
fs
gs
jne
arpl
add
inc
gs
imul
popa
arpl
outsb
je
pushf
movl
pushl
lea
jmp
clc
mov
test
cmc
pushf
bt
add
clc
test
pushf
movl
jmp
lea
ja
push
mov
call
add
inc
imul
add
out
movb
pusha
pusha
lea
jmp
call
pop
out
stos
loopne
dec
sti
addl
and
cli
inc
stos
xchg
push
fcmovne
cmp
or
shlb
sub
pushf
dec
pusha
push
cmpb
pop
nop
jnp
xor
push
aas
xchg
mov
push
jno
push
mov
fldcw
popf
arpl
inc
mov
jb
pop
call
inc
std
addr16
hlt
rolb
xchg
aam
in
popa
xchg
sti
mov
loopne
adc
aam
sbb
and
sarb
loope
inc
std
cmc
mov
add
pop
xchg
adc
add
inc
les
push
sbb
cld
inc
jne
pop
mov
xchg
ret
das
icebp
testl
movsl
adc
jb
cmpsl
out
inc
pop
ljmp
mov
mov
popl
int
mov
lock
dec
shll
xchg
and
xor
lods
dec
jge
and
inc
jb
pop
inc
std
repz
inc
testb
push
fsubp
pusha
bound
push
out
shll
gs
inc
iret
or
mov
cmp
or
mov
add
cwtl
jge
outsl
imul
sbb
lret
xor
ret
rcrl
cld
incb
addr16
scas
and
and
out
adc
jae
movsl
add
pop
sub
jecxz
fnstsw
jge
xchg
out
push
bound
dec
aas
jb
es
stos
pusha
pushf
mov
lea
jmp
add
push
outsl
insb
jns
imul
cld
jmp
movw
lea
ja
pusha
call
sub
stos
loopne
stos
dec
das
leave
xchg
int3
mov
mov
jge
add
dec
pop
sbb
in
lcall
jbe
aam
imul
cmpsl
icebp
adc
pop
pop
and
sub
mov
loopne
cli
dec
and
or
ds
push
push
in
sbb
repz
and
jmp
add
int3
and
mov
loope
jg
setno
push
inc
arpl
das
jle
mov
vsubps
adc
in
enter
ret
xor
rcr
pop
clc
js
xchg
push
popf
setge
pushl
popl
lahf
mov
not
movl
movsbw
lea
push
pusha
movl
mov
push
pushf
pushf
pushl
popl
pushf
pushl
mov
pushl
ret
add
push
gs
imul
gs
inc
pop
or
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
lea
ja
setns
clc
sub
add
clc
bswap
add
jmp
add
push
popa
imul
insb
gs
bound
arpl
add
je
jb
jbe
je
push
jb
imul
imul
lea
jne
in
test
mov
push
xchg
and
sbb
movsl
mov
lock
jnp
in
push
push
es
pushf
fiadds
bound
pop
adc
in
mov
aam
rolb
out
movb
inc
cmc
cmc
not
call
add
inc
push
imul
outsl
insl
push
outsl
imul
gs
outsl
fs
gs
imul
add
rcrb
add
je
jns
inc
outsl
insb
outsl
jb
add
inc
gs
jns
je
insl
dec
outsb
jne
call
push
push
mov
lea
jmp
add
inc
gs
gs
arpl
popa
jo
add
rclb
fs
jne
neg
stc
mov
test
cmc
or
push
pusha
lea
je
not
movsbw
lea
movzbw
push
movzbl
movzwl
pushf
pop
call
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
insb
hlt
push
jmp
fs
imul
popa
scas
orb
mov
mov
jg
mov
mov
jo
pop
pop
jg
lret
adc
or
loope
repz
push
xchg
movsb
lock
xor
mov
fs
arpl
push
daa
xor
popf
in
inc
push
in
xor
mov
loope
arpl
hlt
js
in
repnz
inc
cmp
jo
push
scas
dec
sub
cmp
sub
dec
xor
pop
xchg
jb
mov
xchg
push
dec
cwtl
jo
adc
sar
jns
sub
mov
les
jno
xchg
jg
xchg
ret
mov
cld
notl
sbb
push
mov
mov
into
aad
adc
pop
and
sub
push
dec
lret
mov
sub
jl
mov
sbb
into
push
fwait
test
popa
fadd
lods
sub
clc
inc
daa
adc
out
add
sbb
cld
jge
cld
fldt
jge
mov
or
adc
xor
negb
add
cli
ja
sbb
out
pop
into
std
sahf
inc
test
xor
idivl
mulb
mov
ret
jg
cmp
sti
std
mov
fs
fsts
out
je
testl
flds
lds
sbb
mov
or
dec
sbb
stos
pop
sahf
pop
adcl
cmp
or
mov
lods
add
jno
outsb
adc
sub
roll
jno
cmp
lods
outsl
repnz
ds
push
iret
push
sarb
xor
jmp
jmp
fcomps
int3
sbb
mov
push
lods
cmp
mov
cmpsb
lahf
xchg
cmp
je
int3
xchg
xchg
jp
pop
lock
test
mov
add
push
jno
data16
mov
dec
cmp
cmc
test
fwait
dec
into
adc
sarb
ret
lds
dec
and
jbe
push
mov
and
rcrb
shll
push
jb
cmp
sub
aam
test
pop
jge
cmp
xchg
adc
mov
inc
lret
out
mov
popa
mov
arpl
jmp
jne
inc
push
into
jmp
add
and
mov
mov
mov
or
sbb
mulb
or
adc
and
adcl
xchg
sbb
hlt
insb
hlt
inc
push
add
pop
call
fsubs
addb
dec
dec
push
aam
pop
cmpsl
fisttpll
or
dec
test
xchg
test
orb
cmp
popf
mov
xchg
mov
mov
out
xor
dec
stc
mov
lds
pop
notl
jnp
dec
rorl
cmc
insl
inc
sbb
movsl
push
shrl
sar
test
jl
inc
mov
cltd
scas
shll
fwait
lods
pop
push
lock
fmulp
lcall
mov
pop
imul
lret
add
xchg
cs
stc
pop
daa
sub
jle
mov
cmp
out
scas
lcall
out
js
jp
jl
or
lret
add
xor
mov
and
jge
mov
xchg
xor
in
pop
je
push
or
stc
fwait
pop
cmp
push
jecxz,pn
jae
and
pushf
pop
hlt
jge
cltd
lods
push
dec
push
adc
xchg
shr
inc
and
enter
sbb
in
loopne
mov
sub
shrl
inc
mov
jge
and
or
mov
mov
fiadds
lahf
adc
jecxz
inc
sahf
test
jge
stos
inc
jmp
pop
inc
out
add
movsl
or
fdivrs
xor
jnp
out
sbb
mov
mov
lret
in
adc
repz
andl
rcr
cli
aad
jb
jmp
push
scas
mov
or
and
push
ja
jae
push
mov
dec
adc
loope
orl
mov
dec
push
imul
and
lods
rolb
stos
movsb
lret
jnp
out
dec
fs
out
std
popf
scas
mov
push
mov
inc
xlat
popa
hlt
sub
lods
cmpsl
xlat
jo
jb
popf
sub
push
add
daa
add
cli
xor
or
dec
sahf
or
inc
mov
jmp
ljmp
inc
stos
mov
mov
bound
jg
sbb
inc
cmc
imul
sbb
mov
and
loope
test
fwait
cmp
push
jbe
add
sar
adc
lods
arpl
enter
sub
jle
dec
mov
out
pop
add
push
mov
iret
sbb
jge
cmp
orl
cmp
jae
push
mov
adc
jo
jge
int3
mov
and
xchg
daa
dec
daa
jge
inc
push
adc
pop
in
iret
xchg
push
fsubr
adc
and
xor
push
dec
stos
lds
lds
insb
adc
and
mov
sbb
icebp
pushf
sbb
jl
lret
insb
jb
stc
xchg
sub
xchg
daa
fiaddl
lcall
icebp
sbb
test
pushf
cmp
imul
stc
outsl
adc
sub
mov
outsl
inc
sahf
dec
lods
jle
je
xchg
dec
nop
out
bound
enter
pop
add
inc
inc
dec
dec
fmulp
sub
jnp
adc
push
cltd
xchg
stc
mov
xchg
and
and
pop
inc
dec
fsubs
fisttpl
dec
mov
pushf
xor
jp
cltd
iret
lods
mov
lds
mov
xchg
loopne
out
xchg
mov
push
ret
repz
repz
loopne
shrl
sub
add
filds
inc
adc
xchg
daa
fwait
mov
or
jmp
es
mov
xor
and
xlat
cltd
jnp
imul
ds
jg
add
stos
das
mov
gs
xor
enter
push
insb
push
cmove
test
fstpl
in
jmp
sahf
iret
lds
call
adc
sbb
stos
push
scas
lods
sub
into
xor
cmpsl
cmp
fwait
nop
mov
dec
movsb
fstpt
push
aad
stc
sbb
outsb
pop
cwtl
mov
xchg
rcrb
inc
popf
pop
dec
push
cmp
pop
call
mov
out
inc
rorb
or
dec
inc
ja,pt
leave
push
dec
inc
push
out
mov
push
in
lock
cs
jns
jmp
aam
sub
stos
xor
lods
ret
xor
loope
dec
pop
ss
pop
mov
loop
sub
movlps
in
loopne
dec
cmpsb
faddp
dec
mov
pop
inc
fbld
cmp
cmp
sti
ljmp
arpl
call
dec
test
fldl
xor
mov
iret
aad
outsb
daa
sub
cmp
mov
sbb
pop
xchg
pop
ljmp
bound
iret
js
les
and
mov
mov
cmp
sbb
or
int3
jb
sbb
aas
mov
pop
fs
xchg
inc
push
mov
pop
mov
in
mov
and
pop
gs
add
mov
jp
mov
sbb
push
push
cmp
in
lock
ret
lock
mov
adc
xchg
into
fiaddl
fwait
adc
in
xchg
dec
adc
iret
add
into
jns
jge
imul
inc
mov
cmpsl
mov
cmpb
addl
std
or
movsb
aad
data16
mov
cli
jmp
mov
add
cltd
sbb
lea
int
jns
push
mov
lods
adc
add
or
pmulhw
dec
jp
dec
push
rol
sub
iret
icebp
test
lret
push
mov
sbbl
mov
jb
mov
shl
mov
outsl
loop
fxam
xorl
mov
nop
notl
bt
ds
js
aas
dec
and
or
stc
push
or
and
xlat
test
push
pop
mov
cmc
test
int
das
aad
pop
mov
into
syscall
aad
mov
es
adc
rolb
jg
cmp
test
std
fwait
rcrb
jnp
popa
aaa
aaa
xchg
filds
xlat
repnz
sub
jno
roll
inc
push
and
jnp
push
int3
mov
fdivrl
adc
dec
mov
dec
in
cmp
mov
cmp
jg
popf
sbb
je
sub
fists
mov
imul
ds
sbb
mov
cmpsl
mov
pop
jb
jecxz
cmpsb
push
mov
and
movsb
jo
jmp
test
xchg
imul
sahf
fists
ret
in
or
shl
in
pusha
push
mov
adc
push
test
or
aam
xor
mov
mov
adc
push
add
cmp
cmpsb
les
mov
xlat
fwait
sub
and
neg
mov
lcall
jge
lea
fsubs
add
fsts
imul
setne
pop
into
das
call
sbb
imul
leave
repnz
pop
ret
jbe
shrl
sub
std
call
and
mov
shll
out
mov
and
or
and
enter
sub
xor
data16
outsb
out
pop
push
cmp
jo
add
addr16
inc
xchg
push
bound
jl
mov
push
sub
mov
jle
jno
sub
repz
xlat
stos
gs
dec
push
mov
mov
jbe
inc
call
pop
push
mov
mov
gs
movsb
mov
test
mov
or
cmp
mov
shlb
pushf
loop
push
mov
jno
lea
insb
int
jmp
aam
push
mov
push
xor
fsubs
mov
sbb
adc
aas
xchg
jg
andl
lcall
out
out
ret
jmp
cwtl
push
out
jp
scas
call
add
mov
scas
pop
push
cltd
ljmp
xchg
imul
push
inc
daa
add
adc
mov
mov
cmp
repnz
movsl
insb
adc
pop
mov
jmp
jns
cmpsl
xor
dec
or
push
pop
add
pop
shrl
ret
xor
add
cmp
and
pushf
mov
mov
dec
repz
mov
into
ret
pop
cmp
dec
add
int
iret
iret
idivb
adc
loopne
sub
adc
mov
out
orb
sbb
out
ficoms
add
jns
add
test
add
xor
or
and
repnz
loope
sarb
add
adc
adc
jl
add
dec
enter
jle
inc
add
fbld
pop
lea
xchg
pop
mov
mov
enter
cmp
daa
cmc
and
jl
mov
inc
jae
imul
mov
push
leave
add
push
data16
std
arpl
test
inc
pop
pop
mov
push
sbb
icebp
adc
pop
scas
mov
xchg
loope
lret
sbb
or
mov
rclb
cmp
inc
jge
cmp
lret
adc
mov
repz
data16
sar
int
fistps
ds
ja
inc
movsl
mov
outsl
addr16
cli
ja
rorl
and
std
pop
xor
inc
fs
popa
loope
and
cmpb
sub
ret
xorb
lods
sarb
mov
cmp
fnstenv
shll
xor
call
mov
mov
clc
dec
popa
mov
pop
and
inc
sbb
or
rcll
xchg
and
add
clc
and
pop
add
or
sub
clc
and
clc
inc
sub
addl
push
pop
mov
call
sub
sbb
adc
lods
dec
lcall
lret
mov
and
imul
mov
mov
jmp
xchg
or
ds
jne
inc
movsb
fs
lods
cmc
add
cli
xchg
xchg
or
xchg
sub
cwtl
cmc
movsb
jle
ficomps
sub
xor
stos
and
jb
jp
ret
xor
ljmp
or
insl
inc
and
shll
lds
jmp
lea
les
loop
pushl
sub
mov
lods
jmp
sahf
xor
les
add
ret
stos
xor
or
rcrb
mov
sti
into
push
push
insb
jae
mov
popl
or
data16
in
sub
sbb
mov
mov
xor
std
jecxz
fadds
mov
in
incl
dec
in
inc
jmp
jnp
lock
adcb
imul
mov
test
jbe
fildl
jle
outsb
and
adc
aad
or
out
lock
cmp
leave
mov
dec
xchg
fcoms
fisttpll
inc
fwait
add
ss
jb
mov
push
loopne
movsl
fwait
adc
mov
xchg
lret
adc
testb
fwait
jns
stc
push
sub
jno
xor
xchg
sub
mov
add
push
add
push
mulb
cmpsl
fcmove
push
cld
mov
mov
and
popa
loopne
into
push
fisubs
cld
vpandd
lds
mov
xchg
xor
shll
cwtl
fimuls
ficomps
pop
test
adc
add
push
fstpt
mov
test
pop
je
xchg
ret
cmp
nop
add
push
mov
inc
mov
cwtl
pop
shl
dec
jle
aad
push
push
xor
and
inc
aam
testl
cmp
or
and
call
pop
mov
out
lret
icebp
inc
pop
std
iret
mov
push
lods
add
xor
mov
fucomi
loope
inc
xchg
mov
inc
cli
dec
pushf
mov
insb
jo
jp
mov
mov
or
out
sub
jmp
lods
mov
mov
in
mov
push
mov
jnp
sbb
test
inc
out
jp
out
fcompl
ja
mov
pop
lret
out
push
push
sbb
push
ror
sbb
dec
cmpsb
jl,pt
xchg
in
sbb
push
jae
leave
push
mov
fwait
push
pusha
addb
pop
fisttps
jg
in
test
bound
mov
add
xor
out
sub
sbb
je
fmull
sub
jle
sbb
cmpsb
shr
sahf
out
shrl
sahf
sub
push
mov
sbb
sub
push
jae
and
out
pushf
sub
cld
std
nop
lret
add
cmpsb
decl
adc
xchg
incl
arpl
jecxz
sbb
pop
outsb
mov
daa
push
fimull
cmp
push
jmp
cmpsl
mov
cmpsb
pop
int
notl
roll
test
int
leave
jmp
pop
sbb
in
std
fldt
mov
or
das
jnp
ret
nop
push
data16
sbb
jmp
pop
inc
cmp
push
mov
out
out
hlt
pop
mov
loopne
in
adc
inc
cs
dec
mov
negl
in
mov
adc
push
sti
mov
rolb
lahf
loopne
and
push
into
iret
adc
mov
pop
add
rol
jae
and
clc
pop
test
cmp
push
pop
daa
fwait
dec
mov
fs
xchg
and
aam
dec
sbb
dec
mov
ret
and
push
push
ficoml
push
popf
stos
fwait
rorl
mov
lret
mov
push
xorl
push
cli
xor
xor
stos
pusha
xchg
mov
or
aam
shr
push
mov
push
xchg
pop
outsl
add
in
mov
sub
std
test
in
adc
sbb
sub
addr16
inc
sti
loope
cs
cmpsb
test
inc
test
shr
and
in
les
insb
xor
pop
jne
imul
ficoml
adc
add
inc
pop
aaa
mov
add
xor
out
rclb
nop
jmp
push
imull
enter
addl
mov
pop
mov
bound
xor
pop
fwait
out
add
inc
jnp
inc
mov
in
jg
sbb
fsts
sub
psrlq
xchg
aad
mov
adc
les
std
fbld
nop
sbb
add
mov
dec
mov
xor
xchg
push
out
inc
jge
adc
lcall
out
xchg
repz
mov
in
push
mov
out
mov
jge
sub
push
and
popa
add
gs
rorb
sbb
mov
pop
repz
inc
push
xor
int3
sahf
ret
ja
pop
das
mov
mov
pop
fdivs
lcall
cmp
adc
sbb
hlt
xlat
cmp
dec
daa
mov
dec
cmpsb
les
mov
je
sub
and
cvtdq2ps
lds
arpl
insb
add
mov
and
pop
xchg
jmp
or
jae
rcrb
dec
or
push
jmp
push
insl
mov
insl
fildll
stos
or
aad
push
push
pushf
add
cwtl
push
jp
adc
test
icebp
pushf
jns
stc
fmull
or
loope
ljmp
inc
fwait
mov
fmuls
fisttpll
add
lods
lahf
or
loopne
out
fisubrl
inc
push
addb
shlb
mov
mov
xor
loop
int3
std
xchg
test
subb
jmp
lcall
mov
xchg
call
and
aas
sbb
clc
sbb
shrb
pusha
fs
cmp
xchg
out
push
aam
das
hlt
cmp
fcomps
mov
push
lods
push
xor
lds
mov
mov
jge
cwtl
adc
push
cmc
outsl
cwtl
outsb
adc
xor
inc
nop
mov
stc
fidivl
jbe
imulb
jns
cld
mov
add
mov
adc
fcomps
fbld
adc
add
test
inc
pop
in
mov
or
cmp
push
xchg
jnp
lods
outsl
dec
or
mov
shlb
aam
insb
cmp
ror
mov
jmp
ficompl
pop
sub
ds
std
idivb
pop
push
lods
mov
insl
mov
outsl
movsb
repz
dec
lahf
sub
lret
jns
std
jb
cli
push
and
test
jp,pt
jne
adc
lret
sub
jnp
jmp
lretw
mov
adc
mov
repz
xchg
mov
test
xor
add
add
imul
adc
inc
xor
cs
outsl
in
sub
or
mov
push
shlb
arpl
pop
inc
icebp
loopne
iret
bound
jecxz
aaa
adc
int
icebp
pop
push
mov
out
pop
shrl
cmp
rcrl
or
jecxz
xor
cwtl
shrl
or
dec
insb
mov
shrl
ja
scas
ljmp
dec
rcll
pop
cmp
addb
sbbb
sarb
jge
add
fcomp
and
sarl
call
cltd
or
sub
push
rcll
mov
sbbb
orb
sbb
mov
push
cmp
rcrl
pop
xor
jne
push
test
fisubrl
xchg
aaa
into
and
lods
fisttpl
cmp
and
mov
in
shl
push
lds
adc
loope
decb
cld
outsl
jae
jp
xchg
xchg
add
arpl
icebp
jno
int
test
addr16
add
pop
jp
pop
loop
jne
dec
xlat
xchg
add
pop
cltd
sbb
add
mov
enter
pop
stc
and
jb
mov
stos
pop
loope
xchg
aaa
pushf
out
mov
xchg
ret
cmp
dec
pop
pop
jge
lret
sbb
shl
movsl
test
test
loop
call
enter
in
xor
push
stos
mov
dec
xor
xchg
adc
lods
mov
std
das
pusha
js
and
mov
lcall
push
inc
shr
jb
outsb
or
inc
cs
cmp
inc
sbb
sub
pop
push
or
jbe
jbe
js
pop
repnz
call
repnz
shlb
out
push
cmp
repnz
inc
dec
pop
xsha256
cmpsb
push
fiadds
ljmp
lock
insb
test
push
dec
and
push
divl
mov
cli
or
add
pop
xor
mov
jecxz
mov
aas
test
add
shlb
sbb
lcall
push
mov
add
sub
int
adc
popf
adc
xchg
pop
mov
rcl
mov
adc
stc
test
xchg
or
rolb
sbb
loop
lock
mov
lea
gs
scas
adc
enter
mov
xor
cmp
or
sahf
inc
jb
scas
addb
ja
sbb
gs
cltd
ds
adc
pop
stos
jae
add
es
cmc
pop
nop
or
mov
sbb
push
fldt
cmpsl
je
mov
or
push
movsb
into
outsb
pop
pop
inc
push
dec
cwtl
jp
hlt
hlt
inc
or
inc
sub
gs
xchg
ficomps
cmp
js
sar
jecxz
xchg
mov
jbe
adc
imul
push
inc
cltd
fiaddl
and
mulb
mov
inc
ja
cmp
push
mov
and
sahf
lret
or
mov
xchg
push
sub
popf
lods
test
adc
cli
push
stos
das
test
icebp
jb
cmpsl
push
jmp
mov
sub
dec
jge
xor
pusha
push
mov
mov
cmp
inc
ret
xchg
or
mov
cli
add
push
cmp
imul
xor
int
test
addr16
pop
dec
icebp
out
push
xchg
dec
jne
push
mov
pop
stc
shrb
and
cmp
popa
cld
iretw
add
lock
sub
and
mov
and
cmpb
fldcw
fnstsw
popa
sbb
loop
mov
xchg
sub
or
cld
push
xor
ds
fpatan
xchg
jno
push
mov
cmp
mov
fistps
testl
mov
shlb
in
clc
inc
add
cmpsl
repz
ds
jle
mov
loope
inc
mov
mulb
xchg
repz
fdivs
push
sub
add
inc
repz
cmc
jle
jb
fisttps
push
xor
mov
mov
int
mov
imul
or
mov
xor
mov
cmp
test
xchg
testb
jle
movsb
outsb
pop
inc
pminsw
pop
jne
cmp
mov
loop
push
cwtl
xor
popf
or
pop
je
pop
add
lret
das
add
mov
test
ss
jne
dec
popf
cli
jo
pop
jo
lods
push
or
dec
adc
cmpl
jns
jb
xchg
cs
call
movsb
test
icebp
ficoms
add
gs
sbb
cli
or
cmp
mov
push
xor
fimuls
lods
test
xchg
push
push
adc
or
or
test
inc
aaa
push
push
xchg
mov
hlt
push
inc
jge
int
loope
loop
and
sub
pop
jecxz
or
xchg
jg
fists
in
or
push
sub
sbb
mov
bound
ja
imul
cmc
jg
mov
push
movb
pusha
mov
lret
jg,pn
add
xor
jb
mov
pop
sub
add
pop
add
mov
cmp
and
sbb
stc
push
dec
sub
mov
push
lret
ror
cmp
cmp
jge
dec
sub
xor
dec
pop
data16
xchg
ja
inc
add
add
add
sbb
mov
mov
mov
es
mov
xor
loope
mov
cmp
and
jmp
iret
fneni(8087
or
cmp
subl
push
lods
pop
jno
push
es
das
adc
ljmp
add
adc
mov
mov
cld
iret
js
xor
stos
std
call
adc
push
ja
popf
and
loope
iret
xchg
int3
push
arpl
mov
addr16
add
popf
in
mov
ljmp
add
fldenv
cmpsb
jecxz
xchg
dec
rorb
in
jge
dec
add
ss
xor
bound
test
pushf
mov
cmp
imul
cmp
into
shrl
sahf
scas
sub
cmp
inc
repnz
adc
xor
fmuls
int
les
jae
daa
dec
inc
fsubl
mov
push
pop
lock
sub
fwait
test
jecxz
out
or
movsb
lods
xor
pusha
mov
jl
es
jp
pop
inc
pushf
inc
in
push
sub
jmp
fucomi
dec
pop
mov
sti
repz
jmp
pop
push
push
dec
dec
popf
ss
hlt
inc
mov
cmp
std
push
add
mov
mov
add
jg
xchg
xchg
mov
sub
lret
cmp
test
test
fdivr
jle
cmp
mov
inc
test
xor
lods
dec
std
arpl
js
rep
inc
mov
pushl
test
loopne
test
or
icebp
mov
add
mov
or
mov
addr16
call
or
stos
cmp
push
leave
fcomps
xchg
pop
dec
test
jno
inc
sbb
cli
mov
dec
lock
mov
pop
adc
inc
push
cmpsl
dec
in
movsl
or
sti
xor
ret
cmp
mov
aaa
ret
call
aaa
ja
sti
mov
adc
or
xchg
add
bound
mov
movsl
sub
cmp
xchg
adc
das
lret
addr16
imul
subl
mov
sbb
adc
pop
test
push
push
adc
enter
pusha
filds
je
negb
std
xor
mov
mov
aad
cmpl
cmc
and
add
xchg
push
or
inc
dec
sbb
fwait
xchg
popf
pop
stos
cs
clc
es
dec
es
sub
or
int
out
push
xchg
mov
in
sub
cmp
pop
fldcw
and
sub
outsb
addr16
mov
inc
push
sub
add
inc
pavgb
cmc
mov
add
jns
sub
movsb
aam
jae
aaa
bound
push
fisttpl
jecxz
fwait
scas
jg
push
loop
movsl
push
rorl
jo
sbb
xchg
pop
inc
xor
mov
sbb
jp
insb
push
in
push
in
mov
addr16
sbb
dec
mov
fnsave
mov
add
sahf
push
out
in
bnd
sarb
out
leave
clc
lods
xchg
sbb
inc
aaa
insb
pop
and
mov
xchg
xchg
adc
insl
insl
jmp
and
mov
cmp
cmp
int
sub
lcall
test
jmp
and
or
lcall
daa
lods
and
lock
sub
into
cmc
gs
adc
sub
sbb
mov
les
bswap
stc
adc
movsb
mov
inc
push
sbb
and
cmp
in
xchg
jbe
mov
push
imul
rclb
or
inc
push
mov
inc
mov
xor
repnz
and
inc
and
cmp
test
mov
dec
push
call
xchg
addl
inc
pushl
push
jns
inc
and
addr16
cs
into
xor
sub
adc
ds
lock
fiadds
mov
pop
cs
mov
mov
loope
push
cmp
popf
jle
cmc
adc
test
repz
inc
je
jg
or
push
push
push
icebp
loope
ja
leave
mov
stos
pop
sahf
loop
inc
mov
imul
or
dec
pop
adcb
xchg
repnz
cmpsl
adc
pop
icebp
addl
fmull
out
idiv
aaa
pop
or
add
xchg
jle
out
pop
inc
cmpsl
bound
test
sbb
fdivrl
lods
mov
pop
repnz
into
shr
cmp
mov
push
loopne
adcb
mov
mov
adc
sbb
aas
mov
cmpb
loop
add
iret
and
fsubl
dec
mov
mov
mov
ss
shrb
imul
cs
push
mov
ret
into
and
xor
insb
cmpb
pop
and
sbb
aam
ja
mov
adc
push
mov
pop
test
mov
pop
in
insl
out
or
fimull
sub
or
jns
jbe
pop
nop
enter
jno
adc
js,pt
fdiv
push
push
mov
mov
imul
pusha
ficomps
mov
fidivl
mov
rorb
sub
add
in
dec
and
cmp
mov
lret
repnz
lahf
push
daa
cmc
std
push
orb
dec
xchg
push
push
in
adc
cli
scas
std
jecxz
sbb
jnp
sahf
cmp
lahf
fildll
jmp
and
icebp
push
mov
outsb
insb
dec
in
gs
scas
jmp
jecxz
pop
mov
int
pop
mov
sbb
jno
sbb
pop
xchg
sarb
repz
jne
stc
fldt
lods
cmp
sti
out
inc
mov
push
adc
outsl
cltd
testb
cltd
mov
pushf
adc
jb
jns
ret
mov
sarb
adc
loope
lret
pop
mov
adc
aam
push
cltd
and
inc
jbe
arpl
xchg
and
mov
sbb
or
lock
add
jecxz
out
mov
sub
pop
loope
xor
xchg
xor
cmp
mov
push
cmp
adc
sbb
dec
mov
add
popa
or
aad
in
cltd
pop
test
stc
mov
nop
addb
cs
adc
movsb
insl
aam
outsl
jmp
int
sbb
aad
push
pop
xor
imul
jb
mov
out
cwtl
mov
fimull
push
ret
lret
lret
test
jno
sarl
jp
push
fiaddl
fidivl
cmpsl
pop
pushf
cmp
std
insl
jmp
das
xchg
sti
xlat
mov
lahf
addr16
sub
outsl
lods
inc
test
and
mov
inc
cmp
sub
pop
or
jmp
je
fwait
xchg
js
xchg
add
test
dec
mov
rcl
int
mov
arpl
jp
in
dec
xor
xchg
mov
ret
inc
repz
cmpb
xlat
xchg
icebp
cmp
cmp
cmp
idivb
mov
cwtl
mov
mov
fs
cs
jle
jo
lea
mov
mov
xor
mov
insl
sbb
xlat
mov
ret
mov
push
fistps
jg
and
cmp
rcll
mov
xchg
mov
lret
mov
cwtl
cltd
lds
mov
mov
adc
test
dec
xorl
cwtl
iret
movsl
mov
test
dec
in
mov
sub
outsl
into
push
cmp
nop
insb
jmp
dec
xchg
xchg
jl
push
lods
mov
dec
xchg
pop
adc
inc
push
adc
cmp
add
or
dec
repnz
stos
mov
jecxz
mov
into
imul
or
jo
inc
and
jno
mov
out
inc
dec
sahf
cmp
stc
test
sub
pop
jmp
mul
loope
mov
xchg
xchg
jmp
arpl
lock
or
sbb
sub
loopne
mov
test
out
pushf
mov
adc
loope
aad
out
scas
cmp
dec
add
cwtl
sbb
cmp
lods
test
lock
jo
adc
push
fucomip
dec
mov
mov
popf
mov
addr16
cmp
ret
int3
movsb
int3
xchg
arpl
mov
dec
out
mov
addr16
repz
add
push
cld
popf
lea
daa
jp
frstor
lock
in
sbb
data16
arpl
rcr
cmp
jbe
js
jo
inc
xchg
clc
addl
push
lods
ss
pop
les
arpl
pop
sub
xor
jge
push
cmpsb
mov
mov
ljmp
xor
fnstcw
pop
push
add
jg
rol
add
add
out
adc
jb
or
lock
ljmp
pop
push
sbb
inc
inc
pushf
out
out
inc
and
outsl
xor
mov
add
cmp
rcrl
imull
or
movsb
xchg
fcoml
xchg
cwtl
cmp
dec
gs
push
pop
nop
dec
mov
outsb
mov
mov
sub
xlat
or
arpl
add
sbb
loop
les
sar
jns
into
fs
sub
sbb
push
adc
jb
inc
push
jl
xor
push
lds
jle
je
jecxz
mov
mov
ret
js
mov
bound
outsb
aad
rcrb
add
mov
dec
pop
enter
aam
and
adc
ds
ja
inc
ret
pop
cmp
icebp
adc
xchg
xchg
xor
fwait
and
mov
sbb
lock
cli
cmpb
inc
les
shl
shll
in
or
mov
or
call
lret
mov
rorb
sbb
mov
pop
xor
xor
mov
jecxz
call
scas
jbe
sbb
lock
stos
stc
jecxz
lret
pop
sbb
pop
xor
cmp
inc
mov
std
cmpb
mov
add
jg
jl
mov
pop
push
xchg
sbb
xor
push
pop
pop
sbb
les
cwtl
repz
out
xchg
xchg
fwait
push
pop
xor
xor
push
mov
fld
sti
out
inc
ljmp
jg
mov
xor
inc
dec
mov
pop
insb
jno
sub
sbb
nop
movsb
stc
rorb
jecxz
aad
movsl
xchg
push
xchg
test
sbb
add
ret
pushf
push
scas
rorl
out
mov
sahf
lret
stos
xlat
push
test
shrl
aad
mov
outsl
scas
gs
mov
push
je
inc
fdivrl
push
popa
and
xor
out
inc
mov
dec
nop
insb
arpl
jge
jbe
lods
xor
out
fisubrs
ret
inc
test
gs
pop
or
in
push
push
imul
adc
mov
inc
or
add
inc
leave
xchg
inc
out
pop
lea
subb
stc
aam
mov
xor
mov
cmpsb
mov
mov
iret
insb
jnp
je
xor
shl
popf
add
jo
pop
lds
pop
cmpsb
add
into
mov
or
push
inc
nop
orl
in
enter
daa
dec
sub
out
sub
sbb
icebp
addb
ljmp
push
add
mov
lahf
das
adc
mov
filds
mov
pop
cmp
test
xchg
xchg
fwait
sub
push
xor
jns
out
inc
and
test
rcrl
mov
stos
mov
xor
jo
ljmp
fsubrl
mov
mov
cmc
and
xor
xor
and
jae
add
cmp
push
dec
lock
mov
adc
add
and
loopne
loopne
sbb
pop
rcr
nop
sub
jb
dec
mov
xchg
xor
hlt
mov
jp
jmp
fildll
adc
clc
and
lods
sbb
je
mov
ss
adc
mov
and
adc
lahf
sbb
adc
imul
lds
sbb
pop
repz
adc
jecxz
jb
mov
popf
enter
not
push
fidivrl
push
lods
push
jns
adc
shrb
das
add
test
lahf
or
mov
xor
adc
xor
push
leave
and
imul
loop
dec
dec
ror
inc
push
add
jl
add
pop
inc
repz
add
jge
or
jmp
fildll
rolb
mov
jb
rolb
adc
inc
add
push
xchg
cmpsl
int
aaa
xlat
pushf
mov
pop
addr16
or
scas
or
data16
adc
jmp
mov
les
mov
fwait
and
lea
and
daa
aam
adcl
push
xor
stos
fwait
imul
push
mov
fndisi(8087
daa
adc
inc
test
push
push
icebp
arpl
push
rcl
jb
adc
imul
out
insb
jecxz
xor
mov
mov
pop
and
aaa
fistpl
sti
pop
xchg
test
jge
pop
mov
loopne
and
pop
add
or
int
pop
pop
or
cmp
or
nop
mulb
cmpsb
ficoms
cmpsl
sbb
divb
in
dec
je
divb
dec
cli
or
mov
jns
sub
push
mov
push
xlat
out
jmp
sub
hlt
push
repnz
jb
push
emms
xorb
xor
push
cwtl
cltd
fcomip
jg
insl
loop
pop
sub
mov
cwtl
push
scas
ljmp
sbb
outsl
xchg
pop
stc
dec
fdivrl
xchg
fbstp
fimuls
and
je
push
dec
outsl
pop
xor
mov
mov
jecxz
jb
orl
mov
adc
push
stc
lcall
sbb
das
push
jecxz
sbb
test
push
fidivl
add
inc
mov
arpl
mov
sbb
test
sub
in
mov
mov
inc
or
fildl
mov
std
pop
or
notb
test
cs
pusha
jo
sub
aad
fistl
repz
icebp
sbb
push
fwait
inc
daa
inc
ljmp
mov
jmp
push
cmpsl
or
dec
addb
ret
fwait
xchg
add
addb
adc
pushf
clc
inc
loope
add
inc
lds
lret
pop
repnz
xchg
mov
lret
push
mov
lret
xor
jle
int3
ret
xor
jle
inc
rclb
and
mov
and
pop
gs
push
xor
mov
xchg
outsl
in
fimuls
ss
shll
xor
cld
rcrl
popf
xor
mov
adc
fists
xor
sub
call
gs
xchg
jnp
xchg
push
sub
jno
push
daa
leave
icebp
push
aas
inc
negb
push
cmpsl
dec
cmpsw
pushf
imul
fwait
test
es
lret
cld
loop
aad
xor
push
fcmovne
les
jg
inc
int3
movsl
jge
cs
sbb
icebp
rorl
pop
fsubs
push
sahf
pushf
and
je
mov
test
lock
movsb
les
arpl
adc
repz
sahf
cld
xor
stos
add
push
sub
push
jns
cmpsl
push
and
imul
jbe
pop
shll
adcb
jo
inc
cltd
arpl
fbld
rolb
cltd
and
cmp
xor
or
sbb
notb
loope
pop
popf
imul
xchg
lret
inc
scas
dec
jecxz
push
xchg
or
mov
xchg
shrb
mov
mov
inc
push
rclb
push
mov
xchg
ljmp
jno
std
cmp
push
fidivrl
mov
adc
sbb
and
enter
subl
inc
sti
inc
sarb
adc
cli
mov
ja
je
icebp
cwtl
aas
outsl
push
or
in
imul
ret
inc
ss
addb
rcll
adc
inc
movsl
nop
mov
iret
sbb
test
or
jbe
push
out
inc
jnp
mov
cltd
mov
ret
movsl
setb
notl
enter
jb
mov
inc
jp
cli
aaa
push
pop
push
mov
xlat
std
push
or
cwtl
arpl
sti
ss
or
insb
add
add
pop
xchg
fsubrl
hlt
int
sub
loopne
adc
scas
mov
add
ds
xor
push
repz
fwait
jnp
fdiv
inc
bound
int3
out
push
gs
push
or
xchg
popa
pop
sti
iret
adc
add
mov
mov
scas
pop
fisubl
mov
push
xchg
mov
jbe
xor
pop
gs
stos
shlb
jae
cwtl
mov
rcr
call
imul
jne
or
push
jno
fwait
in
hlt
aam
cmp
dec
sub
mull
cmp
out
mov
mov
ss
mov
mov
jp
jbe
fisttpl
sub
mov
mov
mov
mov
push
push
or
rcrl
shrl
outsl
mov
cmp
ret
jmp
or
jmp
and
fdivr
loop
test
out
cli
pusha
push
mov
or
shl
out
paddusb
cmp
or
rcrl
lds
in
xchg
and
cmp
push
leave
jne
mov
test
xor
in
xor
add
mov
inc
and
mov
lods
sub
outsb
push
push
fadds
out
fcomip
adc
pop
mov
sbb
imul
arpl
jle
aam
imul
sub
xor
mov
lret
inc
imul
ret
test
cld
pop
je
test
repz
mov
pop
push
shr
sub
bound
cmp
insl
dec
test
mov
fildl
in
mov
icebp
jns
scas
dec
or
call
lods
subl
jle
xor
icebp
mov
xor
xchg
insb
in
jnp
cmp
cmp
enter
hlt
test
xor
dec
stos
sbb
mov
fcmovnbe
or
jmp
sub
cmp
jecxz
addb
out
mov
pop
pop
int3
push
hlt
sbb
sbb
add
sbb
shrb
add
das
std
adc
xor
mov
scas
out
pop
add
xchg
sbb
or
dec
ret
xchg
xchg
sbbb
inc
mov
push
mov
jne
xchg
sahf
sub
fidivrl
jmp
cwtl
sar
fimuls
aaa
sbb
subb
andb
fisubl
ljmp
cmp
xor
mov
jp
inc
jns
scas
stos
sub
push
cli
mov
fwait
or
jg
hlt
adc
add
and
jnp
push
add
dec
push
pop
pop
das
ljmp
mov
xor
out
sub
sbb
or
movsl
mov
lcall
ret
sbb
mov
sub
fmuls
mov
adc
sbb
orb
cmc
adc
jmp
dec
mov
repnz
aam
xor
sbb
push
dec
stos
ljmp
movsl
sahf
pop
push
dec
inc
js
outsb
mov
and
std
lret
clc
pop
jbe
imul
out
lret
fwait
xchg
nop
into
stos
xchg
xchg
lcall
cmc
aad
or
clc
outsb
adc
shlb
push
sub
scas
jle
ret
jl
rolb
popf
in
movsl
sub
hlt
adc
in
inc
dec
cmp
aaa
and
into
xchg
xchg
push
jae
das
adc
sti
mov
inc
mov
add
mov
lock
arpl
mov
cmp
cmp
cwtl
mov
lods
add
es
mov
pop
xchg
das
jbe
inc
xchg
dec
fsubrl
jo,pt
ja
xor
mov
mov
inc
xchg
dec
push
mov
mov
xor
inc
lods
push
and
pushf
sub
xchg
dec
jae
and
cmc
test
sub
rorb
sarl
lods
jmp
xchg
push
int
es
cmp
pop
fadd
lret
cmpsl
sbb
pop
scas
xor
push
and
sbb
in
js
adc
out
into
cmp
cmc
push
push
test
adc
mov
add
lcall
xchg
mov
push
jecxz
stos
es
je
xchg
pop
dec
movb
xchg
sub
inc
jnp
scas
stos
mov
scas
mov
addr16
leave
jnp
imul
in
push
add
jmp
mov
and
out
pop
loopne
mov
test
and
fdivrs
mov
inc
std
fstl
popf
xchg
or
scas
movsl
cltd
in
or
das
push
and
inc
inc
imul
mov
dec
ljmp
shrb
mov
mov
xchg
icebp
inc
mov
mov
and
pushf
or
add
call
pop
enter
lods
lret
aad
pop
cmp
fnstsw
jl
lods
jp
int3
negb
inc
sbb
data16
and
cmpsl
rcrb
pop
inc
add
mov
loop
es
mov
shr
xchg
cmp
test
divb
mov
or
mov
mov
shlb
dec
xchg
push
and
add
jge
insl
ljmp
xor
sub
das
out
je
and
inc
adcl
push
cli
mov
addb
xorb
inc
and
sbb
dec
cmp
xor
fnstcw
fidivrs
lds
cs
imul
cmp
orl
dec
dec
sarw
jbe
cmpl
inc
jmp
fs
sub
add
and
mov
cmp
loopne
aad
in
mov
jge
rcll
mov
xor
cmpl
inc
push
loopne
adc
fcmovnb
dec
jle
mov
cmp
push
ret
adc
adc
xor
das
xor
jp
xor
or
xor
in
cli
cmp
add
xorl
xor
inc
stc
ret
jg
add
push
pop
in
out
jmp
adc
inc
sbb
xchg
dec
add
xor
jp
push
push
lcall
lahf
mov
push
bound
repnz
sbb
jo
push
jle
xchg
pop
imul
xchg
or
inc
mov
or
shll
das
jne
call
pop
or
mov
mov
dec
lahf
fwait
ret
dec
lods
and
adc
notb
pop
fdiv
mov
aas
adc
cmp
ds
xor
cwtl
das
jnp
bound
out
mov
js
cmp
push
popa
add
cmp
repnz
inc
rcrb
into
jmp
scas
push
jo
stos
out
enter
rolb
imul
jne
xchg
in
xchg
push
inc
inc
jp
push
inc
push
xor
cmp
loop
jmp
bound
sbb
mov
cmp
cmp
lods
xor
cmp
push
dec
cmp
pop
stos
movsb
dec
cmpsb
jnp
pop
in
popa
pop
push
in
jae
bound
mov
jp
mov
aas
jl
je
inc
aas
inc
jg
xchg
test
repz
pop
pushf
push
and
arpl
inc
push
sbb
mov
jo
jo
imul
sub
mov
repz
mov
xor
stos
push
out
loopne
pop
scas
push
in
xchg
pop
sub
xor
jo
pop
jle
or
ficompl
shll
pop
sbb
mov
shl
in
or
mov
sub
std
outsl
aad
mov
dec
mov
dec
inc
lgs
and
xchg
jne
icebp
adc
xchg
jle
xchg
pusha
mov
inc
inc
rclb
pop
in
pop
push
jns
mov
sahf
testb
add
movsb
adc
sbb
mov
add
stos
mov
dec
or
xor
sbb
adc
pusha
jge
mov
push
or
pushf
sub
inc
mov
fdivr
dec
aam
or
repnz
sbb
notl
subb
repz
adc
inc
cmp
jecxz
ret
icebp
test
add
adc
mov
ret
idiv
stos
pushf
data16
scas
test
mov
js
negl
scas
and
mov
mov
addr16
xchg
es
imul
shll
pop
mov
lods
dec
sub
push
and
fisubrs
mov
inc
dec
fnstsw
in
sbb
sbb
ljmp
push
push
dec
add
mov
push
cli
movsb
in
dec
xor
imul
shll
loop
jle
sbbb
fcoms
and
or
pop
bound
fsubrp
les
jp
pop
push
test
mov
aaa
push
push
mov
lock
jl
sbb
shrb
jg
push
and
ret
stos
or
mov
xor
sub
xor
sbb
cmp
jg
mov
scas
adc
mov
push
aam
aad
stc
push
rclb
ret
mov
mov
xchg
adc
pop
insb
ja
scas
push
sbb
inc
push
inc
inc
fs
sbb
faddl
fwait
shrl
stos
scas
sahf
lock
push
and
inc
mov
sub
movsb
aas
pop
pop
shll
iret
and
sbb
sbb
dec
mov
pushl
fbld
in
sbb
mov
pop
lea
stos
insl
mov
mov
jne
ds
mov
js
mov
daa
fdivrs
jb
pop
xchg
xorl
in
mov
or
faddl
pop
sti
mov
mov
addr16
mov
sbb
rcll
pop
js
outsb
enter
jecxz
fildl
add
mov
push
repnz
sarl
cmp
mov
jg
mov
and
fdivrl
jg
lahf
xor
sbb
push
rolb
addr16
pop
mov
jecxz
sbb
jmp
cld
andb
mov
lods
fdivrs
imul
mov
insl
xchg
scas
push
pop
ret
popf
daa
jb
dec
push
and
shl
icebp
jle
pop
xchg
fstp
mov
xchg
std
xchg
mov
aad
xchg
stc
ret
sub
push
adc
shrb
lret
lret
xchg
inc
mov
mov
mov
sbb
adc
cmp
add
xlat
sti
xor
push
pop
fmull
mov
fisttpll
cwtl
mov
in
dec
fwait
arpl
insl
inc
lret
aam
pop
popf
dec
stc
daa
add
gs
inc
ret
and
stc
jbe
shrb
cmp
loopne
mov
pop
int
sarl
lock
insl
xor
dec
sub
test
notb
inc
out
and
lods
fucomip
jno
and
sti
add
push
lods
test
pusha
mov
ret
sahf
lret
scas
int3
cld
and
repnz
int3
adc
sbb
sub
in
inc
ret
xor
and
les
cmp
xchg
inc
fbld
jns
sbbb
cmpsb
lcall
mov
push
loope,pn
sbbb
movsl
sbb
cld
mov
movsb
out
sbb
or
and
cmp
sahf
xchg
aad
aam
sub
in
out
push
sbb
push
jb
mov
cmp
mulb
xchg
pop
fstl
ss
das
sbb
popa
jae
sbb
or
cmpsl
xchg
testb
inc
add
cmp
cmc
fstps
jae
push
jg
mov
aas
xchg
add
and
and
jmp
rol
out
and
sub
cmpsl
clc
shrb
push
xchg
inc
and
mov
loop
mov
repz
or
adc
push
or
ja
pop
add
es
fstps
sbb
and
sti
sbb
ret
sub
mov
cmp
addr16
cli
rcr
popa
imul
out
fdivrs
in
pop
sbbl
scas
ss
xor
daa
decb
jb
lods
mov
jle
mov
setae
jne
gs
inc
cmp
andb
call
add
bound
jne
ffreep
jbe
mov
jae
mov
dec
subl
mov
or
xchg
insl
cmpsl
cmp
cld
mov
jae
cmpsb
jg
xchg
dec
pushf
pop
stos
les
lret
fucomp
lods
std
mov
xor
ljmp
lods
adc
dec
scas
jae
rclb
sbb
dec
jmp
inc
cmc
add
stc
xchg
lret
cs
fstl
mov
ds
add
lret
mov
or
clc
aas
sbb
add
sub
inc
loope
fsub
lcall
push
loop
inc
dec
mov
in
add
setp
mov
jl
pop
adc
mov
std
int3
movsl
movsb
push
adc
test
aad
jnp
adc
cmp
cmp
push
cmp
repnz
cmpsl
lods
mov
xchg
fstl
mov
inc
out
xchg
outsb
testl
gs
scas
cmp
jecxz
mov
aam
adc
xchg
mov
out
ret
xchg
push
icebp
loop
les
xor
scas
push
push
pop
lods
mov
ss
ror
imul
cmp
adcb
xor
into
hlt
cmp
dec
aas
fadds
rcll
rorb
pop
jl,pn
push
out
outsl
xchg
push
aaa
jnp
insl
adc
inc
cs
pop
enter
imul
call
mov
lcall
or
arpl
sub
popa
xlat
fcoms
popf
test
test
aad
lahf
push
jno
sahf
inc
adc
andb
xor
jmp
adcl
jge
lcall
xchg
mov
push
outsb
dec
gs
stc
adc
outsl
mov
pop
adc
js
dec
mov
mov
flds
pop
add
addr16
mov
dec
pop
jns
neg
sbb
fildl
cmc
ja
hlt
mov
scas
push
mov
ja
pushf
xchg
ja
into
mov
insb
mov
sbb
and
xchg
mov
jecxz
push
and
or
xor
add
mov
imul
xor
inc
sbbl
mov
jb
in
xchg
mov
sar
jmp
shll
fidivrl
fucomip
mov
xchg
cmp
mov
sub
rclb
mov
call
pop
xchg
mov
push
push
add
jl
mov
roll
add
in
cmc
es
pop
xor
outsb
clc
out
loop
insb
imul
jbe
inc
scas
xchg
insb
inc
xchg
sbb
xchg
dec
push
in
sti
setge
lock
repz
or
push
int3
jmp
repnz
sub
in
dec
cmpb
sahf
ja
ljmp
popf
icebp
add
jne
jo
loope
addl
mov
cmpsl
clc
mov
mov
gs
xchg
subb
lods
jl
sub
shl
xchg
ret
loopne
and
imul
pusha
add
push
ljmp
loop
ss
cmp
pop
xchg
lods
adc
push
mov
jbe
and
sub
jo
movsl
data16
imul
mov
pop
lret
dec
aam
fisubrs
xor
jns
pusha
push
dec
movsb
out
cmp
xor
mov
sbb
dec
sarl
fs
mov
sub
test
inc
psubw
mov
pop
shl
sub
nop
icebp
dec
dec
xchg
pop
sahf
or
xchg
dec
sbb
jl
fs
push
mov
pop
add
and
jmp
js
ja
outsl
sub
sbb
xor
stos
xchg
mov
dec
ffree
std
mov
xor
out
jmp
push
je
dec
fwait
addb
xchg
sbbl
or
or
jb
push
xor
sub
jge
xchg
and
mov
loop
mov
inc
adc
int3
pop
mov
nop
lds
dec
ss
iret
gs
jo
jo
insl
mov
adc
loop
xor
jl
movsl
push
shll
fcomps
or
sbb
in
pop
fcoml
in
and
mov
jo
cmp
mov
ret
jne
pushf
mov
push
and
iret
scas
or
scas
jmp
xor
shl
in
icebp
fxch
mov
sti
enter
imul
push
shrb
mov
insb
mov
xchg
in
daa
lea
sub
jmp
dec
test
aaa
add
cmp
jno
xchg
sbb
frstor
aad
call
fldt
into
cs
and
dec
mov
ss
js
sar
pusha
mov
mov
out
inc
mov
jno
rorl
cmpsb
in
xor
aas
lds
leave
jg
pop
adc
jae
pop
mov
mov
inc
mov
pop
dec
mov
inc
loop
shll
sbb
dec
loope
pop
adc
xchg
xchg
jo
lock
sbb
out
mov
jp
pop
xorb
sbb
lods
fcmovne
adc
push
fcmovu
icebp
es
dec
lret
int3
scas
mov
pop
stos
add
jp
imul
in
fistps
scas
mov
sbb
mov
dec
inc
pusha
sub
pushf
test
inc
fstl
mov
and
or
or
lret
sub
mov
clc
rclb
hlt
out
scas
sub
lock
out
xor
mov
add
sti
cmc
bound
adc
roll
mov
mov
xchg
mov
in
popf
dec
stc
push
xlat
out
leave
push
lds
cmpsl
xchg
cld
out
gs
xchg
and
lods
or
out
gs
or
loope
mov
and
cmpsb
repz
ds
out
mov
addb
or
in
or
pop
aad
add
cli
loop
inc
arpl
pop
add
push
push
sub
arpl
repz
lret
jp
push
out
xor
fstps
pop
sbb
mov
jmp
push
adc
jp
xor
lcall
addr16
cmpsb
pushf
js
shlb
je
dec
xor
mov
test
mov
or
jbe
jecxz
mov
push
ja
outsl
shl
in
sbb
cmp
mov
mov
cld
add
cmp
je
push
aam
xor
xor
ja
or
mov
dec
sar
shl
daa
mov
sub
xchg
inc
push
aad
subl
xlat
das
scas
and
mov
sbb
insb
push
aam
aas
pop
lds
repnz
adc
fstsw
int3
inc
xchg
ret
or
dec
mov
push
dec
loope
xor
ss
jge
adc
cmpsl
loop
jbe
xor
popa
jnp
int3
cmp
fidivrl
movsl
out
loope
adc
mov
and
mov
dec
push
xchg
mov
mov
fwait
and
imul
mov
pop
test
lea
lret
push
sub
test
mov
or
xor
dec
adc
add
pushf
jb
sahf
xor
out
cltd
cltd
icebp
mov
pop
mov
add
loope
add
mov
outsl
ss
jns
pop
pop
sar
insb
sahf
pop
inc
cmpsl
mov
mov
add
in
mov
in
sub
adc
js
adc
sub
cmp
test
cld
jnp
push
iret
push
sbb
push
xchg
inc
fsubl
mov
sub
inc
and
and
fcompl
sbbb
pop
or
xchg
mov
aas
test
xchg
jns
or
inc
add
mov
dec
dec
adc
or
inc
pop
or
jl
test
ds
pop
call
add
adc
xlat
fcmovu
push
push
aaa
xchg
and
jg
jae
sub
dec
mov
dec
xchg
push
mov
add
sbb
std
rcrl
and
ja
js
fbstp
hlt
mov
mov
mov
fimull
aam
pop
idivb
and
nop
cmp
fdivrp
jae
jo
cmp
inc
hlt
pop
mov
pop
or
xor
imul
adc
cmp
insb
loope
mov
ficomps
xchg
data16
lods
dec
or
adc
jmp
test
lret
fstpt
dec
dec
aas
loope
and
fs
popf
push
inc
outsl
pop
sbb
ja
dec
mov
repz
jl
and
jp
push
test
dec
dec
pop
and
loopne
sbb
stos
and
lods
cmp
xchg
lret
out
cmpsb
jns
jns
sahf
push
sub
outsl
decb
sbb
in
cmpsl
mov
add
les
xor
pop
in
push
jl
or
sub
mov
sbb
cmp
dec
cld
xchg
mov
jbe
std
into
gs
mov
pop
push
dec
shll
xchg
xchg
addl
lcall
mov
in
fsubrl
and
negl
ja
inc
fcomi
in
stos
loop
push
xchg
fsubrl
icebp
aad
mov
inc
jmp
mov
mov
jmp
orb
addr16
outsb
sti
mov
or
pop
adc
imul
inc
cmp
jmp
mov
cmp
xchg
and
fdivl
cmpb
mov
cmp
shrl
mov
hlt
cld
mov
xor
out
lods
adc
push
gs
dec
pop
add
push
mov
movsl
xlat
scas
cmpsl
mov
and
outsl
cmp
dec
push
mov
test
sarl
push
or
fcmovnbe
or
std
lods
xchg
aaa
pop
mov
lcall
scas
xor
sarl
xchg
xchg
add
fimull
and
popl
xchg
hlt
sahf
inc
and
lahf
jbe
int
dec
pop
fwait
js
ljmp
divb
sub
mov
subb
daa
mov
out
and
jo
adc
lods
cld
push
int3
xchg
sti
xor
push
sti
mov
lahf
mov
aad
sti
and
dec
lret
sbb
mov
in
stos
mov
mov
inc
test
and
pop
aad
scas
xorb
push
mov
stos
or
mov
fs
jl
jbe
mov
mov
gs
int3
push
push
sub
pop
cmp
pop
and
imul
jecxz
into
les
cmp
cli
lock
daa
dec
push
hlt
cmpb
or
lahf
imul
fsts
sbb
repz
xchg
andl
imul
test
dec
cld
jp
add
jmp
push
push
and
imul
fistpl
imul
ds
out
pop
inc
inc
jge
out
mov
push
mov
in
pop
cmp
pusha
dec
out
add
out
add
xchg
lret
mov
jecxz
xor
jge,pn
cmpsb
enter
loop
or
cmc
xlat
dec
jg
pop
pushl
pop
hlt
push
mov
xchg
vorpd
in
or
mov
repz
push
jne
rolb
add
push
pop
scas
sub
rcrl
add
xchg
test
data16
xor
movsb
add
insl
notl
add
test
mov
lock
jo
and
fstpt
adc
add
mov
out
cmpsl
jae
sub
jl
xor
cmp
ret
sbb
push
and
push
inc
or
sbb
outsl
cmpsb
sbb
and
icebp
hlt
inc
fdivr
mov
out
mov
insb
jae
xchg
jnp
add
ljmp
sar
call
sbb
xor
inc
sub
cmp
daa
jne
daa
out
mov
pop
mov
imul
push
dec
sbb
pop
int3
push
inc
call
pop
iret
out
adc
push
push
ror
and
xor
and
bound
iret
mov
mov
or
or
ret
out
lods
decb
pop
dec
ja
sub
ljmp
ja
dec
mov
xchg
and
and
jl
adc
mov
adc
push
subb
inc
loopne
lcall
loop
xchg
cwtl
jno
enter
shll
pop
push
xchg
push
pop
xchg
sub
popf
and
scas
push
push
rolb
std
push
add
jecxz
push
outsb
dec
inc
outsb
lea
xchg
lcall
push
nop
xlat
xchg
pop
insb
fnsave
insb
es
sbb
loop
loopne
and
cld
lds
dec
inc
mov
imul
sbb
loopne
das
push
pop
push
sahf
push
jle
add
ret
es
cwtl
mov
out
cmpsb
and
stc
cmp
cmpsb
fwait
lahf
in
mov
mov
addb
pop
mov
aaa
sbb
test
rclb
scas
xchg
cld
mov
push
cmpsl
add
xlat
test
int3
add
xor
add
insl
jbe
mov
cli
pop
fists
mov
jbe
jmp
sub
je
test
add
test
int3
inc
push
addl
clc
test
adc
jecxz
push
xchg
jne
popf
in
push
movsl
daa
inc
xor
scas
and
mov
in
mov
scas
enter
dec
rorl
adc
lock
xchg
adc
inc
mov
fwait
mov
shl
cmp
pop
sbb
add
les
xchg
in
inc
loope
xchg
ss
les
int3
pusha
push
inc
shll
add
xchg
mov
aad
pop
daa
repnz
add
mov
jns
lea
or
or
jg
jecxz
lret
push
fidivrl
adc
push
mov
movsb
loop
and
mov
add
mov
int
sub
inc
push
repnz
testb
imul
outsb
or
popf
int3
rol
lock
push
sbb
shrl
sbbb
adc
dec
xlat
push
loopne
stc
hlt
int3
cs
mov
mov
data16
repz
push
mov
dec
fstps
ret
push
rcl
pusha
fwait
push
outsb
call
cmc
sbb
fmuls
and
hlt
mov
out
stos
sahf
mov
pop
xchg
ret
xorl
add
xor
sti
stos
xchg
push
std
ds
mov
push
out
jecxz
xchg
stos
lahf
negb
sbb
jbe
aaa
inc
push
xor
daa
or
and
nop
mov
cmc
pop
and
sti
mov
jmp
call
arpl
pop
idivb
lret
ds
mov
testb
push
es
dec
inc
sbb
push
repz
cvtps2pd
dec
mov
out
dec
dec
insb
push
mov
push
jmp
scas
xor
push
loop
xor
movswl
out
lods
jp
xor
pop
outsl
add
mov
push
adc
mov
mov
sub
push
add
sub
scas
adc
shr
sbbl
and
repnz
mov
shrb
mov
js
rcl
and
xchg
mov
jae
sarl
fisttpl
idivb
leave
mov
jle
popl
and
orl
xchg
add
adc
or
mov
add
mov
xchg
addr16
aam
daa
sarb
test
pop
mov
pop
gs
or
loope
cwtl
into
cmp
mov
mov
test
mov
in
adc
and
mov
sbb
mov
and
mov
xlat
rcrb
in
sub
aas
imul
stc
pop
pop
pop
adc
push
aaa
adc
repz
jnp
mov
cli
mov
push
leave
ljmp
or
mov
dec
adcl
push
jbe
sub
dec
cwtl
in
and
rcrl
mov
dec
cmp
adc
shrb
or
xchg
and
pop
int
out
pop
loopnew
xor
lcall
and
mov
test
stos
or
pop
in
sbb
imul
cli
sub
dec
out
test
and
mov
pushf
mov
jge
sub
xchg
out
jg
sarl
or
out
aad
out
pop
repz
sub
push
ret
ret
jmp
enter
fwait
or
push
jo
and
test
insb
mov
fwait
in
or
ret
addl
imul
movsb
mov
push
sbb
mov
and
mov
imul
data16
sti
in
mov
cmp
daa
xchg
mov
xchg
loope
mov
insb
mov
popa
mov
mov
cmp
aam
push
cmp
in
inc
cmp
jecxz
pop
mov
jo
jge
mov
inc
mov
sbb
loop
sbb
add
jne
stos
mov
test
mov
xchg
jge
mov
popa
inc
pop
mov
adc
pop
or
and
xor
mov
xor
fsubr
cmp
mov
lret
xor
push
jg
sbb
inc
add
mov
cmp
adc
arpl
mov
lods
jo
or
xchg
aaa
cli
std
je
jg
mov
sar
rcll
xchg
adc
inc
pop
xchg
mov
into
dec
adc
mov
adc
jae
xchg
ret
stc
icebp
lods
inc
xor
mov
push
icebp
out
jb
out
cmp
push
movsl
out
je
stos
or
dec
sub
pop
cmp
aad
orb
or
mov
jle
lahf
mulb
mov
jns
addr16
mov
dec
or
mov
cli
or
inc
lahf
inc
ljmp
pop
fld
add
sub
test
je
dec
pop
jge
jg
push
arpl
ss
std
mov
adc
enter
mov
aam
lds
inc
xchg
enter
xor
hlt
pushf
jne
insl
and
jb
nop
or
sti
and
ds
sbb
sub
lods
mov
movsl
add
not
jp
cmovae
cltd
ret
aam
fsubrl
test
popf
insl
adc
data16
ds
mov
push
pop
scas
mov
stc
mov
loope
jbe
push
leave
aas
not
add
inc
test
sbb
adc
pop
dec
cmp
adc
enter
in
andb
mov
dec
push
inc
or
test
movsl
aam
mov
outsb
orl
jmp
add
sub
cmp
cmp
mov
mov
and
adc
in
dec
dec
xlat
and
out
lock
fnstenv
repz
and
inc
into
cmp
and
mov
fistl
int
add
cmp
repz
movsl
jns
imul
loop
clc
das
test
cmpsb
add
xor
hlt
push
pop
push
adc
scas
nop
sbb
dec
push
lds
jns
mov
and
jnp
ret
jbe
mov
dec
push
bound
cmpb
jmp
mov
mov
out
iret
out
cmp
lock
jl
popf
push
pop
mov
fnstcw
mov
sbb
fwait
or
lret
retw
and
pop
jecxz
or
sahf
outsl
shlb
mov
jl
addr16
mov
push
inc
add
imul
es
mov
dec
xchg
ror
sub
out
adc
pop
mov
ja
xchg
sbb
iret
dec
sub
fdivrl
lods
lahf
mov
fiaddl
sub
pop
jno
jl
mov
es
cmp
outsb
inc
je
loop
int3
push
fmuls
xlat
add
or
mov
aas
imull
cltd
xchg
and
cmp
lcall
jl
aam
xchg
icebp
jmp
pusha
popa
loopne
les
add
xchg
sbb
lahf
popa
repz
jae
push
mov
cmpsb
mov
push
sbb
sbb
add
jb
pop
mov
mov
outsb
pop
and
cmpsb
cmp
mov
shlb
and
fcoml
adc
mov
stos
aaa
and
and
ret
je
add
inc
mov
add
push
in
cmp
push
repz
je
add
push
pop
jmp
mov
jnp
push
jl
add
pop
xchg
mov
out
movsl
xor
jb,pt
pop
ds
inc
xchg
cmpsl
pop
icebp
fstpl
enter
pop
xchg
cmp
fadds
inc
std
xor
or
imul
xor
cmp
lds
adc
inc
lea
mov
lods
insb
fs
int3
xor
repnz
loop
sbb
push
icebp
push
inc
mov
ljmp
outsl
pop
dec
pop
add
daa
imul
mov
cmp
rclb
hlt
sbb
lods
mov
jbe
mov
xchg
push
ljmp
xor
lods
xor
jge
and
sti
mov
mov
inc
js
ret
pusha
pextrw
add
cltd
or
pop
and
sti
inc
in
dec
cld
push
push
std
sbb
lret
sub
ret
imul
push
popf
daa
mov
fistps
cltd
outsb
jb
pop
inc
scas
out
push
inc
ret
aaa
xchg
arpl
or
int
outsb
aam
cmp
dec
js
mov
mov
cmp
data16
inc
pusha
cmp
add
and
popf
sbb
cmp
inc
pop
fcmovnbe
pop
push
xchg
xchg
pop
dec
jl
or
aaa
roll
test
stos
inc
int3
lret
lret
inc
push
aaa
stos
mov
out
movsl
mov
sti
fimuls
mov
std
xchg
xchg
es
popa
in
cmp
xor
ret
icebp
lcall
push
jnp
xchg
lea
jbe
ret
pop
mov
adc
rcll
cmp
movsb
lcall
mov
popa
push
inc
add
movsb
int3
mov
mov
push
inc
pop
les
fists
mov
repz
inc
dec
int3
daa
dec
xlat
mov
loope
and
jbe
aas
sbb
cmp
popa
inc
push
in
jae
jg
in
add
sub
stos
sub
stc
pop
jae
cld
mov
aam
cmc
adc
add
mov
ds
mov
dec
push
adc
lahf
lock
sbb
cmp
inc
mov
rol
insl
pushf
xchg
jo
call
rol
aam
iret
pop
cmpsb
push
dec
nop
scas
or
mov
pushf
cld
mov
mov
cmpsb
cmp
test
imul
pop
addr16
dec
push
xchg
jp
test
stc
inc
mov
jae
xor
mov
in
inc
xchg
mov
mov
xlat
mov
imul
adcb
fsubr
mov
mov
mov
icebp
push
sbb
or
cld
out
mov
fcoml
je
bound
mov
in
dec
scas
or
sub
in
lea
fsubrs
xchg
xlat
enter
int
mov
lock
shll
push
or
push
jbe
inc
mov
out
sbb
popa
loopne
je
sti
or
xorb
push
subb
fcoml
add
xor
adc
add
mov
filds
test
mov
inc
out
dec
cmp
cmpsb
mov
cmc
fidivrs
pop
ret
fnsave
xchg
gs
mov
xchg
clc
shrl
push
incl
dec
mov
jecxz
mov
mov
fistl
xor
dec
jo
fwait
sub
cmp
out
jle
xlat
in
push
mov
dec
test
xor
sbbb
popf
test
callw
mov
repz
xchg
insl
popa
sub
sahf
cs
sarl
gs
in
aaa
inc
gs
lods
mov
scas
shlb
orl
xor
sub
int3
nop
inc
pop
imul
xor
ss
fwait
mov
leave
lret
sub
or
add
dec
pop
call
push
pop
push
arpl
jle
repz
mov
stos
test
xor
or
sbb
es
or
and
mov
dec
jb
mov
cltd
sahf
xlat
xor
and
arpl
aam
fildll
sbb
int3
lret
push
int
in
mov
pop
sbb
test
jge
jecxz
into
jb
icebp
adc
stc
mov
fdivrs
or
fistpl
pop
test
lods
and
jle
pop
bound
jo
in
xchg
clc
jne
ret
add
imul
ret
sub
cmpsb
mov
pop
dec
or
sub
and
adcl
mov
jmp
stos
mov
stos
sub
bound
jmp
dec
pop
out
pop
mov
js
ja
jns
pop
dec
add
outsb
dec
sub
je
mov
out
iret
sub
pop
mov
in
js
popf
into
mov
shrb
insl
out
xchg
mov
mov
xchg
pop
subl
inc
sbb
imulb
push
pop
out
sub
and
mov
sbbl
jbe
cmpsb
into
test
jne
pop
stos
rorb
loop
push
dec
pusha
add
add
ret
pop
inc
xor
cmp
std
mov
mov
sahf
xor
mov
add
jle
stc
pop
ss
loop
xchg
popf
loopne,pt
out
xchg
push
xchg
scas
xchg
rcrl
out
pop
jo
pushf
cmc
outsl
xlat
mov
mov
lcall
cmp
jne
outsl
cs
adc
das
jne
push
jbe
jb
sub
mov
cs
push
sbb
and
mov
repz
sub
dec
iret
pop
stc
pushf
aam
loopne
cmpsl
dec
cmp
xchg
ja
movsb
out
fiadds
pop
jnp
notb
xchg
xor
push
aam
sbb
pop
repnz
gs
ret
sahf
in
lahf
xlat
add
cld
adc
jmp
das
adc
pop
jl
add
out
shrb
mov
aas
add
mov
jle
jl
sahf
ret
int3
inc
mov
imul
push
sub
adc
lods
mov
or
sbb
movsb
rol
icebp
cmp
leave
dec
hlt
shrl
mov
sub
pusha
into
mov
xchg
outsb
bound
addl
jno
inc
cmp
sarb
loopne
mov
xlat
repnz
mov
mov
sbb
adc
in
into
or
pop
movsl
ja
mov
aaa
jge
xor
scas
sar
add
jnp
test
mov
std
sbb
pop
call
mov
or
push
mov
lods
mov
push
sub
pop
inc
shlb
cmp
mov
pop
push
add
testb
sahf
in
mov
sarl
in
jno
repz
add
enter
outsl
mov
inc
push
adc
adc
lahf
push
jg
subl
in
cltd
mov
inc
aam
test
pop
ds
inc
fcmovbe
push
add
push
and
repz
ljmp
jbe
movl
xchg
sbb
lcall
ja
fildl
lret
mov
out
sub
flds
sbb
pop
jnp
testl
out
sahf
dec
adcb
aaa
das
pop
in
inc
push
loopne
dec
aad
mov
addr16
inc
mov
mov
sti
outsb
aam
fsubrl
jne
adc
outsb
push
mov
mov
shrl
outsb
faddp
xchg
sub
pop
and
mov
enter
adc
add
mov
lcall
call
xchg
enter
add
adcb
std
inc
or
mov
cmpsl
mov
mov
in
icebp
push
mov
cli
sub
arpl
insb
pop
outsb
std
shll
sti
pop
adc
pop
adc
and
mov
pop
test
cmp
aam
mov
insl
subb
add
dec
pop
xlat
jp
dec
lret
mov
inc
and
movsb
sbb
lahf
jbe
jecxz
push
lret
mov
fistpl
sbb
loop
jmp
xor
cmp
data16
jge
push
push
fldl
sbb
push
out
je
cmpsl
leave
gs
bound
addr16
cmp
out
push
pop
sub
ds
test
lret
jp
push
jbe
pushf
mov
popf
stc
inc
scas
ljmp
pop
adc
or
or
jmp
jecxz
adc
clc
sar
lret
sbb
pusha
pusha
adc
sbb
insl
ret
outsl
and
lea
or
add
and
jecxz
sbb
push
ret
test
into
mov
rorl
retw
clc
sbb
or
adcb
push
sbb
xor
mov
cmpsl
pop
cmpsl
jbe
lcall
xchg
and
and
or
filds
inc
jne
gs
push
std
movsl
int
push
sbb
inc
pusha
jecxz
fwait
mov
gs
insl
dec
dec
jg
push
scas
pushf
movsl
outsl
mov
inc
lock
stos
insb
addr16
mov
sahf
stos
xchg
stos
mov
popa
xchg
enter
push
mov
mov
add
nop
ljmp
test
push
dec
dec
out
into
out
cmpsb
cmp
xlat
jns
mov
out
leave
mov
pop
sbb
or
insl
inc
shlb
data16
lcall
loope
rolb
xor
das
out
and
repnz
push
fiaddl
xchg
adc
and
pushf
jno
xor
cmpsb
call
add
dec
or
cmp
adc
pop
sbb
aaa
pop
inc
xchg
insb
jl
fstpl
xchg
inc
icebp
add
push
in
cmpsl
xchg
mov
mov
aam
leave
or
sahf
sub
mov
pop
test
ror
cmc
pop
call
fists
inc
mov
mov
into
push
das
stc
test
mov
cmpsl
cmp
add
sbb
scas
adc
fcomi
mov
popf
xchg
sbb
fisubl
pop
or
inc
std
test
xchg
lret
cltd
push
xor
add
je
inc
das
shr
mov
mov
popa
dec
popa
scas
ficoms
fwait
outsb
or
stc
and
inc
sub
mov
scas
stos
shlb
in
sahf
ret
sahf
jno
jb
and
hlt
adc
aas
or
xchg
mov
int
mov
push
sub
lret
fs
dec
inc
cli
mov
inc
pop
and
je
add
sbbl
add
lcall
xor
les
xchg
mov
dec
mov
or
jg
stos
or
inc
fsubrs
xchg
mov
xchg
push
and
daa
sub
push
pop
sub
cmc
inc
lods
out
or
xchg
mov
push
jnp
imul
push
jbe
outsb
sti
mov
sub
pusha
inc
dec
pop
ss
les
push
pop
mov
dec
sub
adc
jge
lcall
test
loop
jnp
push
cmp
and
cmp
cld
ljmp
push
jae
repnz
or
xorl
insl
stc
mov
jg
pop
cmp
pop
adc
mov
iret
xchg
inc
jo
mov
outsb
loop
mov
mov
xchg
add
ret
arpl
lret
test
jns
mov
jo
or
sub
mov
jecxz
orl
test
xor
mov
outsb
pop
sub
pusha
outsl
iret
enter
dec
push
cwtl
mull
dec
jmp
pop
pop
jbe
daa
sub
enter
out
pop
sbb
sbb
adc
mull
fmull
cwtl
cmp
in
jns
mov
cmp
mov
push
ret
aaa
ss
out
fs
pop
pop
movsb
sbb
mov
movsb
clc
ljmp
aas
jb
add
pusha
mov
mov
xchg
jmp
subb
fidivrs
pusha
sbbb
data16
fisubrs
aam
stc
stos
ret
add
mov
jp,pn
push
xor
leave
lods
mov
fs
hlt
xchg
xchg
mov
mov
lcall
gs
stos
pop
rorb
jge
negb
xchg
xchg
mov
js
je
insb
fwait
xor
rcrb
filds
dec
into
lahf
mov
mov
aam
xchg
cs
mov
ret
comiss
in
repz
out
movsl
cli
push
jg
test
mov
shrb
xchg
inc
clc
add
repz
cmp
icebp
lcall
sub
jmp
fnstenv
cwtl
ror
fucomi
xchg
out
adc
fisubrs
popa
std
dec
in
xor
pop
pop
jae,pn
dec
xchg
mov
ret
jns
mov
shrl
dec
xor
push
pushf
mov
lahf
push
sbb
push
nop
rcll
das
jl
cmp
push
ret
ret
lea
or
popf
adcl
jnp
enter
cmpsl
dec
rol
dec
dec
cmc
xchg
gs
aam
add
cmp
iret
ficoms
xchg
dec
fisttpll
mov
pop
sub
inc
or
decl
mov
ret
jb
out
push
shll
je
lea
stos
pop
sub
add
ret
sahf
aam
sbb
adc
inc
inc
pop
shll
fdivrs
push
inc
js
push
jo
sub
das
clc
push
cmp
outsl
shrb
inc
adc
push
cltd
sbb
bound
sbb
and
shrb
repnz
hlt
add
sbb
arpl
arpl
inc
mov
pop
cwtl
fwait
inc
rorl
fldenv
mov
inc
in
int3
mov
dec
ljmp
adc
lea
fistl
sub
mov
mov
jae
lcall
pop
and
imul
inc
mov
lods
subl
mov
jb
cmc
clc
push
ds
xchg
mov
push
test
in
test
into
inc
push
pushf
dec
xchg
push
cmc
adc
adc
sbb
lea
loope
data16
js
mov
dec
aaa
mov
jnp
stos
rclb
inc
push
lock
push
inc
push
into
inc
adc
pop
hlt
and
fs
push
rorb
inc
xor
shl
out
andb
es
inc
xor
jle
fwait
mov
mov
lret
jo
adc
mov
jge
mov
js
movsb
test
dec
mov
andb
or
adc
mov
shr
mov
jmp
adc
jo
popf
pop
cmp
mov
and
bound
dec
inc
mov
xchg
cmp
cmpsl
bound
fimuls
push
inc
lea
dec
stos
mov
mov
push
xchg
ret
sbb
push
and
hlt
hlt
fcmovbe
mov
sub
dec
scas
loope
mov
and
adc
adc
jg
jecxz
fwait
in
dec
mov
jne
or
mov
sub
dec
outsb
lock
jecxz
or
dec
ds
fidivrs
push
pop
push
dec
jae
ljmp
sbb
lods
pop
push
aam
inc
or
xchg
lahf
add
cvtps2pi
add
mov
sarl
arpl
popa
and
test
pop
sbb
rolb
dec
add
aad
cltd
loop
repz
pushf
out
jmp
mov
cmp
sub
cmp
lods
mov
aas
mov
jno
pop
outsb
inc
xchg
xrelease
jno
add
push
inc
int
sbb
dec
cmp
ret
lods
and
scas
dec
ljmp
cs
sti
push
cmc
mov
sbb
dec
lret
mov
mov
dec
dec
aaa
out
mov
lea
or
insb
inc
test
mov
mov
xor
lods
into
jp
dec
scas
lods
mov
shl
mov
nop
jbe
imul
mov
test
dec
push
xchg
imul
mov
movsb
mov
cld
pop
adcl
add
dec
out
stos
pushf
repnz
in
sbb
sbb
jmp
and
les
stos
lea
and
pop
add
rol
fisttpl
cltd
js
lahf
in
inc
shlb
mov
mov
dec
xor
push
xorl
jo
dec
int3
icebp
dec
dec
popf
out
jae
push
jnp
adc
pop
frstor
lods
push
cli
lods
rclb
adc
dec
lret
icebp
enter
sti
inc
push
and
pop
jbe
pop
cmpsb
pusha
adcb
imul
test
stc
ret
xchg
dec
push
enter
inc
jae
lret
mov
pop
pusha
mov
clc
inc
mov
sbb
adc
or
pop
mov
inc
cmpb
add
out
pop
cmp
and
xchg
pop
jno
fidivrs
add
rcrl
mov
push
mov
cmpsb
pushf
sbb
cmp
xchg
push
lret
xor
mov
adc
cltd
inc
jecxz
out
xor
xor
subl
decb
xor
stc
or
xchg
aad
mov
adc
test
cs
add
imul
insb
jb
pop
sub
cmp
cmpsl
jno
mov
in
sti
lds
sbb
push
and
cmp
or
hlt
add
sub
ficompl
mov
inc
mov
pop
sbb
dec
xchg
cwtl
adc
addb
popa
out
in
mov
cmp
aad
js
mov
pop
mov
or
lods
fwait
push
bound
inc
inc
sbb
push
pusha
lcall
ja
sbb
jge
aam
lret
pop
and
out
cmc
push
xor
pop
mov
add
scas
sub
flds
pop
cmp
ficomps
pop
mov
ret
out
scas
lods
lret
cmp
sub
push
xlat
jcxz
rcrl
sarl
imul
outsb
mov
in
test
mov
lods
cmp
xor
call
push
jnp
push
mov
test
rcl
push
xor
mov
sbb
jmp
inc
and
jle
loopne
sub
cmp
data16
sbb
mov
icebp
pop
xlat
xchg
clc
fists
in
pop
lcall
not
fisttpll
sub
sbb
sbb
cmc
dec
and
mov
call
lcall
mov
and
sbb
push
les
ret
pop
sub
pop
xchg
push
sub
cmpsb
ss
nop
and
lea
push
in
jno
dec
and
std
jae
dec
pop
jecxz
jne
inc
aas
and
or
or
xchg
enter
mov
xor
cmp
dec
sub
push
gs
adc
and
dec
scas
cmp
jb
testl
cmp
sub
xor
cltd
ds
cmp
xchg
jl
add
imul
or
popa
fisttpl
in
call
push
stos
loopne
add
and
sub
inc
or
in
and
js
iret
fisttpll
mov
jne
pop
mov
hlt
in
jno
jb
int
mov
call
or
push
mov
gs
pop
dec
scas
addr16
pusha
sub
jnp
add
jne
lock
pop
insb
xchg
xchg
inc
daa
jp
and
cmpsl
jmp
pusha
js
push
cltd
divb
push
dec
sbb
inc
gs
out
adc
inc
pop
nop
das
imul
ljmp
push
sbb
call
sub
xor
rorb
repz
jae
out
insb
sub
adc
jg
inc
mov
and
pop
xchg
cmpsb
pop
sub
dec
xchg
xlat
stos
jne
xor
aam
aaa
insb
repz
jl
and
or
xor
cmp
lahf
mov
stos
js
mov
shl
repnz
ret
cli
xlat
jmp
in
lds
dec
sarl
cs
jo
aad
pop
sti
xchg
push
test
dec
mov
outsb
pop
rolb
add
add
push
sbb
push
add
xchg
test
mov
outsb
xchg
push
js
sub
sbb
push
hlt
xor
pop
inc
arpl
ljmp
inc
imul
mov
xchg
nop
into
in
mov
and
in
insl
push
roll
stos
outsl
pop
adc
and
inc
insb
inc
pop
mov
jge
mov
fistpl
hlt
popa
jnp
aaa
cwtl
jmp
leave
test
cmpsb
pushf
mov
popa
cmpsb
push
iret
std
xchg
or
out
call
sti
add
cli
aas
pop
sahf
imul
inc
push
imul
iret
aad
jbe
mov
loope
xchg
adcl
sub
xchg
les
xor
mov
xchg
clc
inc
sub
in
shl
mov
lcall
out
mov
mov
inc
and
adc
movsb
jns
icebp
sbb
and
sub
lock
mov
mov
sarb
or
and
mov
lret
ljmp
adcb
or
in
stos
scas
lods
loopne
cmpsl
hlt
rorb
mov
ficompl
ljmp
xor
and
in
outsb
push
addb
push
ffree
pop
test
mov
pushf
add
push
or
jmp
js
inc
mov
sbb
jb
aaa
sbb
rorb
inc
sbb
enter
fidivrl
jo
mov
not
xor
int3
xor
sbb
aas
js
sub
sub
repnz
jecxz
lret
iret
mov
inc
inc
jecxz
sub
pop
fbstp
push
pop
insb
mov
out
dec
lds
aaa
pop
clc
adc
inc
enter
pop
mov
fwait
add
pushf
pop
fldln2
and
xor
mov
repnz
insb
orb
inc
mov
mov
jmp
mov
pop
mov
enter
xchg
into
mov
mov
out
push
in
out
add
mov
dec
andb
mov
int
loope
out
fdiv
scas
icebp
insb
dec
cmp
insb
shl
adc
xor
cmp
arpl
aad
out
mov
int3
mov
mov
loop
pop
cli
shrb
loopne
popf
add
adc
out
bound
shrb
dec
add
imulb
cmpsb
xlat
das
mov
dec
add
pop
pop
lds
pop
inc
add
inc
cmp
and
cmp
movsl
fs
loop
mov
je
push
jg
mov
es
fdivrl
adc
push
jl
ret
pushf
inc
cmpsb
sub
sub
sub
bnd
pushf
repz
or
mov
add
dec
sub
icebp
jbe
aam
test
mov
fdivrl
adc
bound
mov
ffree
out
push
sar
cwtl
lods
sub
inc
push
cmpsb
cltd
and
xor
or
mov
cwtl
jns
in
leave
and
test
mov
mov
push
cwtl
xor
and
add
add
mov
test
decl
add
push
les
mov
aas
movsb
aad
xchg
out
push
pusha
push
out
fbstp
sbb
repz
dec
mov
mov
adc
mov
popf
jns
shrb
dec
repnz
lea
in
mov
jp
popf
pop
xlat
xchg
fsubrl
cld
push
pusha
xchg
in
imul
or
loop
in
icebp
aad
xchg
into
mov
lcall
and
inc
mov
sbb
pushf
jno
cmpb
test
jnp
aas
add
mov
cmp
ljmp
push
pop
add
ljmp
mov
into
or
push
inc
outsl
xchg
adc
outsb
rcl
xor
mov
push
or
insl
incb
jmp
push
or
fcmovb
lret
xor
icebp
out
cmp
sub
enter
aam
test
sub
mov
mov
rcll
jle
dec
mov
fdiv
pop
jge
orl
or
cmp
mov
and
int
adc
imul
ss
cmp
sbb
sahf
push
mov
sbb
int3
or
pop
xchg
lds
jne
in
sub
cmp
dec
aad
mov
jg
mov
jae
pop
pop
rcrb
mov
xchg
jne
outsl
in
out
push
sbb
sub
adc
jge
je
inc
mov
xor
pop
call
sbb
xor
xchg
jg
ret
jecxz
xchg
cltd
pop
fnstsw
sub
fldenv
and
lahf
aad
xchg
inc
loope
inc
jnp
popf
xor
pop
mov
pusha
push
sbb
test
sbb
mov
jbe
xor
mov
push
cmp
aas
popf
dec
rcll
pop
gs
or
lds
and
repz
cli
out
jb
adc
addr16
popl
mull
sub
mov
xor
cmp
dec
push
sub
in
leave
lods
test
jo
insl
cmp
mov
and
stos
mov
cmpsb
cwtl
push
aad
pop
pop
dec
mov
dec
and
in
daa
subb
movsl
pop
adcl
pop
inc
sbb
push
or
sbb
xor
xlat
xchg
jl
or
pop
inc
jne
leave
test
jecxz
aam
cmpl
pop
aaa
pop
lock
mov
push
ljmp
imul
add
loop
mov
pop
mov
dec
cmp
or
pop
mov
fsubs
test
je
adc
sbb
fcomps
xlat
adcb
jmp
mov
add
cmp
jmp
push
sbb
adc
mov
pop
dec
push
jg
pop
cli
test
aam
aaa
test
movsw
xchg
jns
jbe
mov
xor
hlt
inc
mov
xchg
fisttpl
addr16
aad
js,pt
je
push
push
pop
int
sbb
push
pushf
imul
push
add
sbb
add
jge
mov
fcoms
es
pop
mov
inc
or
arpl
ficomps
int
jle
out
lods
or
imul
popa
ljmp
xlat
mov
imulb
add
test
fs
push
or
push
inc
mov
xchg
cs
les
cs
dec
out
sbb
mov
or
adc
pop
xor
jmp
sbb
leave
in
and
xorb
push
cli
out
dec
adc
stc
andl
adc
cmp
js
adc
sbb
sbb
lds
add
mov
fisttpl
pop
inc
nop
xchg
shll
mov
outsb
in
xchg
and
mov
and
push
or
les
mov
cmp
cmp
xchg
adc
ss
cmp
cmp
insl
push
test
adc
loope
xchg
outsl
xor
mov
sub
dec
mov
sub
pop
icebp
push
std
lahf
jnp
nop
les
push
sub
faddp
mov
nop
sbb
jo
pop
cmp
pushf
faddl
sub
mov
dec
sub
cmpsl
cmpb
fldl
std
push
dec
jno
or
xchg
fsubs
pop
call
inc
iret
divb
xlat
push
ret
dec
push
mov
push
push
cmpsl
mov
jns
jnp
add
enter
out
add
call
cwtl
push
push
pop
popa
cmp
fcomps
sub
outsb
iret
jns
outsb
adc
or
mov
call
nop
ror
mov
addr16
int
lret
pop
aas
ret
icebp
in
ret
jle
fdivl
or
sbb
je
mov
js
cmp
inc
popa
shll
or
pop
dec
xor
das
inc
aam
fsubl
sbb
pusha
test
mov
jg
or
jge
test
in
fucom
cmp
std
sarl
fwait
cltd
jno
int3
sbb
lods
sbb
sub
iret
mov
add
lock
and
inc
lahf
cmp
adc
gs
and
cmp
dec
dec
sarb
rclb
jnp
imul
dec
fwait
xchg
popa
pop
mov
les
inc
jle
mov
dec
enter
fs
push
adc
clc
ss
jmp
xchg
xor
int3
ljmp
xchg
leave
repnz
or
shlb
or
dec
add
aas
test
xor
jb
add
inc
sti
jne
mov
mov
jmp
lods
ret
test
ljmp
test
fsubrs
in
dec
cmpl
loope
sub
xor
jge
or
popf
sbb
cli
cmp
cmpl
sahf
aaa
hlt
repnz
mov
dec
sahf
xor
inc
adc
sub
pop
xchg
mov
clc
add
jnp
cmpsl
xchg
es
cltd
mov
sub
add
mov
inc
outsl
les
inc
leave
rcrl
mov
sbb
lcall
or
xlat
stos
xchg
adc
mov
pushl
sbbb
lock
in
push
shrb
add
adc
xchg
pop
imul
or
push
fcoms
js
mov
aad
in
xchg
int3
or
cmp
roll
sbb
mov
pop
mov
jmp
add
out
imul
clc
push
stc
inc
shll
sub
cmpb
push
pop
push
inc
dec
push
arpl
mov
dec
scas
out
sti
push
add
sar
adc
mov
movsb
fisubrs
jp
mov
pop
bound
pop
mov
push
out
push
xchg
push
or
sub
push
add
popf
mov
pop
jecxz
jo
addl
cli
mov
subl
mov
addl
and
ja
xchg
movsl
fs
or
adc
pop
hlt
leave
aad
fs
ficoms
leave
ja
or
dec
loopne
nop
push
pop
sbb
sub
outsl
stos
ja
xchg
pushf
nop
aam
dec
jle
stos
gs
inc
pop
in
mov
and
arpl
add
jmp
lock
addr16
xchg
dec
sub
add
adc
in
jae
stos
daa
pop
ds
outsl
push
adc
cmp
loopne
mov
adc
mov
fstpl
aad
cmp
test
add
or
jae
jo
jns
sub
insl
and
cmc
mov
and
jb
enter
rcrl
jp
mov
dec
fistl
lret
mov
mov
push
adc
lahf
rcr
sub
lret
jp
cmp
dec
loope
push
insb
mov
mov
mov
jle
mov
mov
sahf
shll
insl
or
rcll
int3
das
fwait
sbb
dec
les
cmpb
jno
xchg
leave
mov
test
mov
repz
adc
ret
data16
adc
xchg
or
mov
leave
xchg
pop
out
out
repnz
aad
push
mov
lods
enter
jns
cltd
out
es
aas
cmp
dec
scas
fcmovbe
xlat
jbe
push
xor
test
adc
outsl
jp
push
jge
cs
fists
movsb
jmp
sbb
inc
add
ljmp
js
and
push
xchg
and
aam
pusha
jmp
loopne
aaa
imul
rolb
jmp
xchg
or
jg
push
stos
es
mov
xchg
daa
out
and
jbe
movsb
fbstp
sub
aaa
test
mov
mov
in
fsubrp
cltd
xor
aad
xchg
aas
pop
aad
push
mov
mov
sub
xchg
lods
add
sub
iret
sub
inc
lds
mov
cmp
ret
sti
add
pop
cmp
mov
repnz
pop
xchg
cld
rorl
pop
enter
mov
inc
or
clc
cmp
loop
and
mov
lds
inc
repz
mov
sahf
jb
adc
push
fsts
pop
dec
dec
push
xchg
xchg
dec
sub
cwtl
shll
bound
fdivrs
cmc
mov
add
xor
sbb
adc
hlt
cmp
jecxz
pop
cmp
xchg
inc
jne
shlb
adc
sbb
loope
in
adc
enter
outsl
mov
scas
sbb
insb
bound
mov
push
test
xor
imul
ss
jg
adc
and
mov
or
cmp
cltd
daa
dec
cmc
ds
add
in
out
cmp
fucom
inc
enter
cmp
mov
les
fimull
sub
jbe
dec
sti
push
sub
push
sub
ss
pop
je
pusha
lret
push
xrelease
js
movsl
enter
test
xor
add
mov
xchg
xor
xor
push
sbb
mov
add
xor
cmpsl
jns
pop
pop
test
cs
mov
pop
adc
pop
dec
loop
fimull
mov
lock
mov
ret
pop
cmp
popl
dec
mov
xor
in
shlb
pop
arpl
push
bswap
js
jbe
jb
mov
notb
mov
rep
in
jle
push
jecxz
and
cs
arpl
roll
sbb
or
lods
subl
xor
xchg
cli
stos
dec
lret
repz
cwtl
pop
xchg
ja
out
es
pop
insb
mov
and
mov
mov
dec
daa
xchg
test
xchg
jne
out
jno
imulb
stc
mov
cwtl
push
lods
xor
sbb
mov
mov
adc
mov
fimull
or
aaa
test
xchg
mov
xor
pop
sbbl
cmpsl
fadd
dec
aaa
mov
adc
xchg
sub
sub
clc
xchg
lret
loope
jae
mov
test
pop
mov
ss
fisubs
nop
mov
fcmovne
pop
ret
cmpl
cmpb
pop
shl
decb
mov
outsb
xchg
in
movsb
sbb
cmp
xor
stos
mov
sbb
js
xorl
pusha
mov
imul
dec
es
and
shll
add
mov
pop
push
adc
add
stc
dec
test
fisubrs
cmp
lea
pop
xorb
clc
fs
scas
jnp
mov
inc
out
pop
lods
iret
andb
cld
xchg
pcmpeqw
push
loopne
ja
pop
mov
movsb
mov
and
cmpl
mov
aad
jne
faddl
loopne
fwait
shll
dec
insl
push
movsb
sti
iret
lahf
in
jle
popf
jo
push
or
jno
xchg
jecxz
sbbl
pop
pop
ficoml
mov
repnz
mov
fcom
mov
sar
in
std
iret
insl
add
mov
adc
adc
jae
or
push
or
push
repnz
pop
shlb
inc
into
sub
mov
test
xchg
mov
cmp
stc
push
or
in
sub
arpl
dec
sbb
inc
lcall
lret
jmp
mov
stos
int3
mov
lds
mov
xchg
pop
sub
popaw
bound
scas
cmp
subb
fldcw
mov
push
or
pop
fldcw
xchg
sub
xchg
mov
mov
sub
mov
mov
cmp
mov
mov
push
vmovsldup
cmc
das
mov
subl
cmp
or
xchg
orl
lds
or
pop
lret
shlb
je
pushf
insb
idivb
shll
sbb
mov
loopne
jnp
mov
sbb
and
mov
dec
sub
or
aad
bound
xchg
jp
inc
in
ja
xlat
jae
xchg
dec
inc
in
jg
lcall
pop
lret
xor
or
test
xchg
addr16
in
pop
jp
jle
add
xor
js
imul
gs
cmp
lods
xor
add
push
lds
lret
push
lds
mov
add
pusha
test
fdiv
cmp
hlt
mov
ss
fsubrs
popa
aas
inc
mov
jp
mov
gs
push
and
test
js
sub
mov
mov
test
mov
fildl
sub
jns
dec
mov
mov
sbb
jno
xor
cmp
dec
pop
push
sub
lcall
imul
pop
inc
stos
mov
addr16
stos
sub
andl
shrl
test
aad
add
movb
inc
scas
sbb
rclb
sub
push
pop
repz
jle
xor
xor
xchg
inc
shlb
test
cmc
iret
cmp
push
adc
dec
adc
xor
in
fidivrs
aaa
ljmp
inc
insl
data16
pop
pop
popf
adc
out
mov
repnz
xor
sbb
daa
adc
fwait
test
dec
loop
xchg
mov
ljmp
xor
out
or
shl
fildl
sarl
cmp
jg
push
fistl
int3
and
push
pop
jo
jl
aas
inc
push
pop
scas
fstps
sbb
add
test
jb
mov
or
in
shrb
rorb
cmpsl
mov
add
lahf
fistps
xchg
pop
and
insl
inc
bound
mov
in
pop
ss
sub
rorb
pop
in
in
or
negb
mov
mov
clc
ljmp
pusha
inc
xor
je
pop
push
push
mov
mov
je
test
mov
popa
sub
xchg
xchg
lret
jne
mov
inc
lcall
out
mov
fmul
mov
push
dec
mov
jg
mov
jl
fwait
pop
pop
outsb
mov
push
jecxz
outsb
pop
movsb
rclb
sbb
and
divb
stos
cli
test
mov
loope
loope
mov
jl
scas
das
push
psubusw
flds
imul
into
xor
sub
roll
mov
int
sub
int3
dec
call
or
xchg
cmpsb
pop
jne
xchg
out
jb
leave
mov
jge
or
push
gs
out
jmp
or
loopne
xchg
mov
pop
mov
mov
mov
pop
jns
push
repz
in
lds
in
sti
jmp
dec
bound
push
push
sub
pop
push
dec
jo
mov
mov
dec
pop
xlat
test
in
sbb
sub
pop
cmp
ds
popa
rolb
sbb
inc
pop
pop
aam
movsb
inc
cmp
dec
pop
nop
test
pop
jne
int3
cli
jno
or
push
xor
mov
jl
add
test
pop
mov
dec
insb
pop
sub
in
mov
inc
inc
iret
arpl
push
rcl
jmp
sub
mov
sbb
mov
pop
sahf
lea
mov
out
mov
mov
movsl
es
sub
push
jge
xchg
imul
scas
push
repz
mov
les
or
sub
cmp
adc
pop
xlat
pop
dec
sbb
insb
pop
inc
adcl
mov
xor
dec
ds
mov
jnp
mov
sbb
pusha
xchg
adc
mov
add
out
or
aad
jl
cmp
out
or
gs
in
aaa
fists
in
jns
mov
xchg
imul
orl
mov
push
mov
sbb
outsl
in
sarl
pop
mov
adc
jb
and
das
xchg
cltd
mov
out
stos
leave
std
mov
jp
loope
jno
je
jns
xor
mov
lds
xchg
iret
mov
jne
cmpsb
sbb
dec
xchg
cmpb
sbb
dec
pop
cs
lcall
imul
js
mov
enter
outsl
cmp
jns
push
daa
outsb
nop
lret
push
mov
test
jnp
cmc
loop
ffree
mov
out
xchg
jp
inc
cltd
out
dec
pop
mov
lcall
movsb
push
orl
out
repz
fsts
push
daa
icebp
gs
xor
pop
hlt
pop
pop
pushf
pop
inc
cmp
sub
pushf
or
popa
sbb
add
pop
push
push
mov
imul
adc
in
xlat
rolb
out
cmc
out
xchg
xchg
nopl
shrl
call
jp
push
fisubrs
inc
push
je
xchg
sub
stos
fdivs
mov
int
adc
outsl
pop
mov
add
addr16
jg
sbb
adc
fiaddl
xchg
lods
gs
sbb
mov
jns
test
lock
ljmp
xchg
xchg
jo
rorb
inc
in
enter
mov
insl
fldt
mov
pop
mov
movd
mov
hlt
sbb
call
flds
push
je
sbb
push
shlb
or
sbb
data16
pushf
lret
and
pop
jb
mov
mov
sarb
imul
pusha
mov
shrb
push
fwait
push
xlat
stc
fisttps
insl
sbb
jnp
aaa
ljmp
and
mov
jmp
ror
sub
test
out
stos
int3
inc
test
push
mov
insl
add
fidivrs
push
aas
cmp
je
ficompl
jl
or
push
mov
xchg
lods
adc
mov
jecxz
enter
push
mov
dec
mov
inc
adc
jl
js
or
pop
cmc
pop
gs
ret
test
orl
pop
jo
jno
jge
es
xchg
andl
push
dec
jmp
mov
push
jo
pop
jnp
mov
push
movsb
add
test
add
outsl
jecxz
cmpsb
jl
pushf
mov
cwtl
or
pop
dec
sbb
fstpl
and
mov
jmp
mov
into
addb
add
adc
inc
inc
shll
aas
pop
je
dec
call
stos
push
popa
stos
push
ss
rcll
nop
jae
jp
dec
sub
mov
int
inc
mov
push
mov
add
andl
pop
inc
push
cmpsl
in
jecxz
pop
sbb
sbb
push
xchg
sbb
push
in
orl
xor
and
popf
dec
mov
and
insl
mov
mov
jecxz
xchg
xorb
and
or
jb
in
insl
cmp
jb
pop
dec
rcll
push
dec
pop
lds
fbstp
adc
mov
pop
sbb
mov
mov
and
push
aad
fsubrs
mov
loopne
adc
fwait
xor
insb
dec
mov
mov
out
cmpb
stc
xchg
inc
add
fldt
ja
adc
adc
jo
push
dec
jo
inc
jmp
inc
sahf
pushl
jg
ljmp
pop
ret
mov
mov
pop
sbb
out
xchg
pop
or
mov
cli
push
fdivl
mov
push
arpl
jno
push
mov
mov
xchg
lret
aad
into
sbb
add
fcoml
movsl
in
sbb
sahf
push
pop
pop
repz
inc
fldl
or
xchg
or
mov
sub
fs
insl
and
jp
repz
sbb
addl
pop
rcrb
pop
in
loop
pop
lods
inc
and
gs
and
shll
sbb
les
stc
and
inc
mov
aad
push
fwait
and
cmp
es
cmp
xchg
mov
jl
fcom
sub
mov
cmp
outsl
mov
fstps
push
mov
push
bound
or
add
pop
test
outsb
andl
add
mov
nop
insb
movsb
cli
adcl
and
adc
xor
adc
add
daa
sbb
loopne
jns
scas
pop
mov
cmpsl
mov
rorl
aas
lea
dec
mov
stc
aas
andb
int3
inc
std
fmulp
and
dec
mov
shrl
shrl
dec
aad
push
dec
gs
adc
jb
shll
mov
pop
lock
stos
cmp
jle
xchg
test
pop
movb
popfw
scas
xor
push
push
ljmp
cmovb
es
aad
xor
fstpt
out
push
adc
jb
cmpsl
ret
xchg
inc
in
arpl
lret
repnz
or
insb
jg
ja
dec
inc
repz
mov
lea
inc
mov
adc
ds
cmp
js
mov
repnz
inc
loopne
iret
jno
data16
adc
fcmove
cmp
cld
sub
and
cli
dec
bound
inc
pop
mov
lds
jmp
ret
cmp
xlat
ljmp
jb
cmpsl
pop
and
push
lret
test
or
fidivl
xchg
and
insl
sub
sbb
sub
or
inc
mov
shrl
push
es
movsl
push
push
cld
sarb
adcb
push
jae
dec
pop
mov
add
ficompl
jo
sbb
jno
adc
and
repnz
push
cmp
pop
stos
sbbl
aam
scas
pushf
loope
mov
and
xchg
dec
in
out
xchg
jns
lods
mov
lret
inc
pop
mov
inc
pushf
jne
ljmp
les
jae
push
adc
jle
nop
stos
mov
shrb
adc
push
jnp
sub
lods
jl
imul
xor
cmp
push
xlat
sub
or
pop
imull
test
testl
arpl
dec
in
divl
xchg
pop
xlat
lock
jae
jb
mov
shrb
xchg
mov
ficoml
jg
fadds
outsl
fs
dec
mov
pop
into
shlb
sbb
mov
mov
xchg
mov
movsl
sbb
mov
mov
aam
pop
fidivl
cmp
fsubrs
adc
push
mov
aam
outsb
or
fimull
jl
lret
call
mov
sub
xor
adc
loop
cltd
or
popa
scas
jns
popa
loop
and
in
outsb
mov
push
adc
jge
xchg
inc
les
pop
pop
mov
int
aam
popa
in
mov
mov
xor
mov
rcr
test
pop
hlt
mov
pushf
lahf
push
aad
aam
mov
xchg
mov
xor
notl
lahf
in
cmp
push
jp
cmp
mov
sub
scas
sub
cmpb
fimuls
and
mov
jne
xor
xchg
mov
fldenv
pusha
sub
inc
cmp
imul
fdivr
adc
or
sbb
mov
sbb
and
out
bound
enter
out
cld
icebp
and
loopne
mov
pushl
xchg
xor
jp
jae
clc
mov
ja
popf
mov
icebp
fstpl
xchg
mov
inc
out
fs
mov
cmc
nop
lcall
dec
inc
andl
mov
aaa
mov
imul
mov
sub
cli
jo
mov
sbb
sbb
sub
fistps
mov
mov
mov
inc
push
push
dec
movsl
popa
push
rclb
xor
xor
cwtl
mov
out
fistl
mov
mov
iret
mul
hlt
sub
xchg
dec
dec
sbb
push
mov
lods
xor
lahf
or
clc
rcrl
and
loope
mov
stc
jmp
mov
adc
clc
lcall
bound
mov
xor
popa
aaa
sub
loopne
dec
adc
stos
xchg
xor
adc
sbb
jecxz
shll
fs
int3
fcompl
sub
lret
or
pop
pop
scas
pushf
in
filds
mov
adc
in
das
cs
scas
daa
repnz
cmpsl
mov
jg
pop
or
xor
sbb
xchg
jmp
pop
aam
xor
insb
call
lret
lahf
fidivrs
add
fsincos
sub
cli
jbe
insl
test
inc
orl
sbb
push
pop
ficoms
fwait
jo
or
test
cmpsl
dec
dec
test
push
pop
push
leave
insl
insb
xchg
xor
cmp
ret
mov
inc
mov
popa
jp
outsl
push
mov
dec
insl
adc
scas
ss
adc
dec
mov
and
les
mov
in
mov
mov
dec
aad
stos
test
stc
int
into
repnz
jb
out
and
cmp
mov
shrl
inc
mov
repnz
sbbb
jle
bswap
jp
imulb
gs
ret
pop
fdivp
je
mov
adc
jno
xor
and
stos
add
fimuls
pop
push
ss
gs
int
inc
rolb
fsubs
mov
adc
inc
in
push
sub
cld
cltd
loope
add
fimull
push
cs
xchg
and
mov
shr
loop
sub
stos
inc
sub
stc
sub
push
pop
rcr
mov
ds
faddl
clc
in
or
enter
mov
dec
stos
or
mov
xor
mov
movsb
sbbb
mov
insb
lds
jns
lock
rcrb
add
xchg
mov
mov
shll
call
xor
and
inc
hlt
lret
jb
add
jecxz
es
mov
or
xchg
dec
lret
cmp
inc
lods
cmpl
iret
inc
shr
mov
sub
sbb
repz
mov
jmp
inc
out
cmpsl
fdivrl
dec
mov
bound
mov
lret
cmp
nop
push
test
jns
iret
fiaddl
sbb
jns
mov
scas
jle
sarl
dec
xor
xchg
jnp
sarb
daa
pop
push
mov
adc
leave
out
cmpsl
cmpsl
sbb
mov
push
aad
jne
pop
outsl
jbe
add
frstor
xor
enter
jp
push
pop
dec
pop
mov
andb
popa
sub
dec
jno
sub
mov
sub
sbb
lret
xor
pushf
data16
sub
mov
xor
cmp
inc
repnz
fwait
dec
mov
imul
mov
shr
add
cmp
push
pop
pop
js
or
push
push
dec
dec
xchg
adc
popf
sbb
dec
sub
add
outsb
out
adc
mov
and
loop
add
loope
aam
pop
loope
and
mov
out
test
cltd
xor
dec
rolb
enter
push
cmp
aaa
mov
mov
cmp
adc
ja
ficomps
cmc
jecxz
aad
push
out
cmp
inc
sarl
push
mov
or
pop
imul
inc
pop
aad
inc
and
fcompl
lcall
jmp
mov
testb
push
add
cmc
push
outsl
jmp
fsts
pop
sub
pop
cmc
xor
and
jmp
inc
test
clc
pop
test
dec
push
cli
roll
pop
sub
inc
push
pusha
and
dec
jge
lret
insb
add
in
xor
mov
or
loope
add
movl
xchg
imul
subb
cmp
dec
jno
lea
jb
or
fstps
lods
pop
mov
testl
mov
mov
add
push
cmp
and
inc
scas
inc
jnp
xchg
pop
jg
push
out
std
fists
fisttpll
je
sub
out
or
cwtl
je
or
ljmp
jno
cwtl
mov
or
int3
das
lea
add
sub
into
jne
mov
inc
lods
push
xor
ret
mov
popf
fwait
gs
imul
stos
ds
rorl
daa
movsb
in
icebp
stc
or
inc
and
xlat
sub
mov
popf
push
dec
aam
xlat
stos
mov
shlb
mov
mov
dec
xchg
leave
mov
jns
fdivrs
cmpsl
das
and
mov
mov
fcomip
das
sbbb
int
das
cmpsl
in
stos
dec
insl
mov
jp
push
ret
hlt
stos
sbb
inc
inc
jo
lds
and
fmul
add
and
xor
roll
dec
stos
scas
imul
mov
mov
sub
inc
sbbb
dec
loope
out
pusha
lea
fidivl
or
push
movsl
rcll
add
jne
dec
loopne
cwtl
cmp
mov
roll
pop
fwait
sti
ljmp
cli
mov
add
sub
mov
mov
lret
out
pop
xchg
mov
arpl
sub
or
out
test
outsb
imul
repz
imul
dec
pop
lahf
aaa
iret
fimuls
inc
movsl
or
or
mov
mov
repz
fistpll
or
adc
iret
mov
add
push
dec
mov
test
push
lret
arpl
lret
mov
popf
cld
es
cld
push
dec
sub
mov
je
ret
and
cmpl
or
jecxz
mov
out
inc
je
subl
jle
loope
lods
pop
xor
push
je
popf
mov
dec
push
and
rolb
imul
dec
scas
outsb
and
mov
xchg
clc
xchg
jmp
push
mov
jbe
sbb
or
jg
hlt
xor
es
xor
sub
popf
test
xor
mov
loop
and
fadds
mov
stc
mov
sbb
jle
jmp
movsl
xchg
imulb
outsb
push
adc
test
aam
sahf
pusha
shlb
jmp
ret
inc
je
arpl
jge
or
mov
in
call
mov
mov
mov
sti
lods
roll
jno
dec
cmp
mov
jnp
sub
mov
stos
cld
popa
pop
inc
push
inc
jo
and
xor
sbb
xchg
ja
and
call
pop
sub
xchg
pop
push
pop
jo
pop
push
popa
xchg
dec
fcoml
out
cmp
movsl
out
push
and
mov
xor
xor
lahf
daa
mov
adc
stos
push
jecxz
jbe
sbb
push
ret
cmp
in
pop
mov
lea
out
push
mov
mov
dec
mov
push
mov
add
sub
sbb
inc
cmp
hlt
push
jl
push
inc
cmp
or
push
pop
xor
xor
pop
push
andl
in
andl
outsb
outsb
sub
fwait
in
sbb
xor
sbb
or
subb
sbb
scas
mov
jns
ret
xacquire
pop
mov
mov
fsts
in
imul
repz
sub
fwait
dec
stos
sub
lret
xor
leave
inc
test
in
and
lcall
xor
outsb
or
xchg
or
rolb
loope
pop
les
insb
cmc
jne
scas
dec
push
clc
add
sbbl
out
xchg
mov
mov
pop
or
xchg
and
insb
mov
in
outsb
outsl
add
pop
xchg
repnz
leave
outsb
das
iret
pop
adc
or
int3
inc
lock
pop
cmpsb
aaa
les
mov
mov
lcall
cs
or
and
or
mov
mov
or
mov
popa
dec
aad
sub
xchg
add
jmp
dec
jns
lods
add
mov
mov
push
sarb
pushf
xchg
pusha
imul
push
in
pop
mov
leave
loopne
icebp
shll
lods
mov
dec
xchg
add
lods
bound
inc
jae
inc
cmp
daa
js
enter
loopne
fmuls
icebp
imul
xor
std
lods
in
jnp
xchg
mov
or
inc
dec
add
shll
pop
sahf
scas
int
cltd
ja
stos
mov
test
sub
hlt
mov
cmp
rol
mov
jo
repz
jae
pop
cmpl
in
repnz
mov
int
jbe
int
sbb
fwait
xchg
cmpsb
ret
ds
mov
jbe
repz
pop
jns
xchg
mov
lcall
les
in
scas
cld
sti
out
mov
rclb
fcomi
ss
fsubrs
testb
xchg
bound
repnz
cltd
clc
push
cmp
enter
enter
movsb
jbe
jl
loopne
xor
push
movb
cltd
push
mov
out
adc
and
repz
lods
rcll
mov
shll
test
outsb
cwtl
loopne
sahf
xchg
sub
repnz
fs
push
cmp
or
mov
cmp
adc
sarl
mov
pushf
sub
iret
stc
sub
insl
sbb
nop
ret
stos
sbb
pop
fs
cmp
and
aad
rcll
ret
jl
shl
in
cmp
mov
icebp
xor
lahf
push
xchg
xchg
les
mov
fnstenv
lret
repnz
push
mov
sbb
cmp
adc
lret
loopne
jg
aad
inc
sti
mov
jg
imul
mov
loop
or
ds
loop
gs
divl
mov
xor
jb
xbegin
sti
sbb
lods
rcrb
movsb
xchg
xchg
and
sbb
testb
cmpsb
pop
int3
insb
mov
mov
test
daa
pusha
pop
pushf
sbbb
inc
xchg
mov
nop
sahf
xchg
adc
js
jmp
jbe
jecxz
xchg
push
sbb
or
xchg
dec
or
push
push
into
cmp
cld
js
or
mov
xor
jg
cld
dec
mov
lock
stos
sahf
sbb
lret
cmp
sti
or
sti
and
movsl
pushf
sub
rclb
mov
popa
pushf
pop
das
sub
mov
jae
cmp
inc
mov
andl
jb
cmc
rolb
sub
xchg
in
jmp
pop
fmull
push
movsl
pushf
and
add
lds
test
jno
adc
test
add
jb
or
fsubl
test
pop
push
fisttps
or
adc
mov
adc
stc
bound
repnz
adc
or
out
in
mov
lret
add
xchg
paddb
gs
dec
adc
dec
sbb
shrl
ret
mov
imul
push
add
fisubrl
cmpl
cmp
cli
in
cmp
lret
ljmp
or
push
or
push
xchg
adc
push
xorl
mov
dec
xor
mov
div
jmp
daa
pop
sbb
mov
je
mov
adc
jg
jge
flds
cmp
cmp
jbe
adc
pop
lods
dec
out
mov
lret
aas
ds
out
xchg
mov
in
push
cmp
fcomip
pop
cwtl
fldl
xchg
std
loope
fcomps
dec
dec
fisttpll
sub
sahf
test
dec
inc
movsl
adc
pushf
or
stos
repnz
xchg
hlt
arpl
cmpsb
xchg
idiv
mov
cmpsl
and
test
cmp
dec
cmp
iret
push
sub
shr
xor
gs
js
fisttpl
cwtl
push
xor
add
pop
lock
test
nop
fmull
cmpsl
jmp
lret
ret
mov
mov
aas
test
mov
push
jae
mov
xlat
pop
push
sub
mov
mov
shlb
aad
out
sbb
or
inc
inc
xor
sub
push
hlt
imul
pxor
dec
call
lock
shrb
imul
push
xchg
sub
jbe
dec
hlt
jmp
faddl
inc
ret
mov
push
or
jo
cwtl
adc
push
mov
arpl
mov
xchg
xor
add
push
lds
dec
addr16
jmp
test
repz
in
in
mov
dec
push
orb
iret
aad
mov
roll
repz
addr16
add
aaa
push
mov
or
lock
xchg
sbb
loop
cs
pop
jge
or
ljmp
xlat
mov
das
mov
mov
cmp
test
roll
or
push
adc
jecxz
sbb
push
inc
daa
pusha
push
nop
sbb
pusha
pop
leave
xchg
mov
lcall
cmp
sti
dec
cmp
jmp
cmp
adc
call
cwtl
jnp
and
push
int3
push
sbb
adc
mov
movsl
jae
imul
mov
ds
xor
stc
mov
out
lret
mulb
mov
fnsave
gs
push
gs
stos
push
cmpsb
fldpi
and
and
cmp
subl
daa
dec
ja
mov
mov
pushf
adc
loope
fldl2t
inc
hlt
inc
shl
mov
push
add
cltd
pusha
mov
cmp
or
xchg
dec
lahf
test
and
addr16
pusha
repnz
mov
lcall
xor
ds
pop
mov
jne
scas
aad
xor
push
mov
and
out
push
push
jmp
push
aad
out
push
fwait
sub
push
or
pop
push
xchg
hlt
jae
and
addr16
fs
das
cmc
frstor
sub
test
bound
jmp
adc
leave
sbb
and
pop
xlat
les
out
or
xor
or
jo
adc
je
mov
clc
adc
pop
int3
adc
fdivs
xor
pusha
mov
mov
rclb
inc
scas
loopne
xchg
loope
pop
fwait
or
jae
or
xor
stos
mov
pop
add
ja
fstps
push
or
imul
aam
cmpsl
push
push
dec
cmp
pusha
call
push
int
aaa
pop
int3
pop
fisubrl
cld
das
call
push
xor
push
mov
arpl
add
enter
xchg
out
mov
adc
dec
xchg
mov
pop
fisttps
xchg
fsts
and
xchg
push
and
mov
adc
mov
sub
jne
nop
negl
int3
aad
fnstsw
bound
dec
mov
xchg
mov
mov
jg
dec
xor
mov
mov
mov
mov
push
adc
sub
adc
ja
dec
jbe
pusha
or
push
jmp
xor
int
loop
fs
popa
dec
cmp
data16
add
test
scas
pop
lea
pop
or
dec
xor
xor
xor
adc
lods
push
xlat
fbstp
push
pop
cmc
jg
add
testb
test
out
incb
mov
inc
imul
sub
cmp
and
out
pop
movsb
pop
dec
mov
imul
mov
jns
jmp
and
or
jnp
pop
pop
movsl
jbe
fldcw
sbb
and
lea
roll
jge
imul
cmpsl
cmp
push
push
daa
es
fisttpl
jg
sbb
clc
out
pop
sbb
add
fs
imul
daa
shrl
or
adc
jge
popa
int
push
push
add
popf
rclb
mov
cwtl
pop
sbb
pop
addb
icebp
sub
insb
jo
xorb
iret
lods
popa
fsts
sar
ds
mov
into
dec
pop
jnp
mov
or
pop
arpl
in
mov
sbb
push
push
push
mov
sti
cmp
nop
inc
cmp
dec
mov
add
inc
sub
stc
mov
out
std
cmp
clc
popa
adc
mov
mov
pop
xchg
cli
gs
movsb
cmpsb
cmp
pop
cmpsb
mov
sbb
sub
xchg
and
stos
ljmp
sub
add
clc
pop
inc
push
fs
xor
dec
and
sub
xchg
xchg
adc
pushf
std
xor
sub
sub
cmp
loopne
daa
adc
aas
out
aad
dec
inc
push
ds
testl
push
cli
imul
dec
lds
push
in
popf
xchg
out
sbb
sbb
lret
testb
xchg
cmp
mov
into
out
lods
rorl
lea
mov
jo
int3
mov
es
pop
pushl
adc
js
add
cmp
mov
lret
xor
andb
push
jae
das
out
mov
sbb
xchg
int
imul
ret
inc
add
adc
mov
mov
cmc
pop
or
mov
fiaddl
pmullw
nop
lahf
mov
rorl
jno
xchg
les
inc
pop
in
sub
add
inc
mov
add
fnsave
sbb
outsb
aaa
mov
ret
xor
cmpsl
es
xchg
test
int3
loope
inc
inc
fdivr
cmpsl
ret
or
daa
push
inc
mov
xchg
add
pop
js
sub
xor
push
jle
push
mov
testl
ret
sub
cld
cltd
xchg
movsl
push
sbb
movsl
mov
gs
mov
sub
pop
cmp
push
aaa
sbb
loopne
xchg
lcall
popa
dec
hlt
lods
cmp
pop
xchg
imul
sub
hlt
in
jb
or
adc
ds
test
jo
or
mov
mov
push
adc
mov
call
repz
mov
pop
cmpsl
addb
pop
scas
xchg
int3
adc
inc
call
lcall
insb
lret
or
lea
test
test
aad
aad
sub
aam
ljmp
mov
add
sti
or
fstps
into
mov
inc
push
mov
outsb
aaa
mov
scas
std
xor
out
jo
jle
sub
fisubs
adc
js
add
jno
incb
or
js
in
stos
push
mov
dec
repnz
push
jno
or
test
xor
and
fiaddl
xlat
push
test
push
lods
add
sbb
stos
inc
stos
mov
xor
adc
mov
xor
push
enter
cmp
es
or
pop
jecxz
bound
fisubrs
inc
popf
mov
and
push
ss
and
test
repnz
add
sbb
jbe
inc
or
popf
pop
das
sub
sub
or
lahf
adc
xor
mov
jge
add
and
jb
cmp
xchg
push
sub
rclb
mov
push
sbbl
cmp
dec
int
or
stos
lods
jnp
cltd
scas
aas
push
shll
fsubp
dec
push
sbb
pushf
out
repnz
push
xlat
cmp
add
adc
mov
ja
jmp
loope
lret
enter
scas
dec
jp
or
out
in
data16
das
gs
stos
jge
mov
sbb
and
or
pop
mov
xor
mov
outsb
lods
cmp
xchg
or
pop
mov
cmp
mov
enter
mov
push
and
inc
mov
lret
leave
mov
fcompl
test
push
jb
sbb
xchg
in
test
rcrb
subl
mov
in
aad
mov
push
les
jo
cli
xor
stos
loop
xorb
cmp
xor
out
cmp
push
push
pusha
in
out
sub
loop
adc
and
popa
test
fs
out
mov
test
in
jbe
mov
cmp
rorl
xor
sbb
leave
out
clc
js
bnd
add
cmpsb
cmpsb
inc
cmc
subl
or
ret
xchg
stos
pusha
nop
cmp
xchg
scas
fistl
hlt
jo
nop
sub
out
xchg
or
int3
adc
pop
push
sbb
jp
jle
pop
in
mov
mov
lock
aas
jmp
xchg
mov
ds
jmp
pop
add
add
sub
es
shrb
mov
mov
lods
mov
adc
fimuls
and
xlat
or
push
jns
int3
cwtl
test
sub
and
stos
nop
iret
jp
mov
pop
roll
pusha
ss
ljmp
add
add
fnstsw
lahf
jg
sub
mov
mov
mov
nop
dec
insb
mov
push
xor
psrlq
add
jmp
js
loop
movsb
cmp
and
push
dec
inc
cmp
push
ficomps
clc
xchg
andl
lock
outsb
fucom
push
cmp
xor
call
enter
ja
mov
xor
rolb
fcoms
enter
jbe
jp
mov
incl
frstor
dec
sbb
clc
mov
out
push
and
lahf
lahf
mov
mov
scas
mov
mov
cld
push
jl
xchg
push
sbb
jecxz
add
shll
rcr
shll
adc
mov
xchg
mov
dec
jnp
aad
xor
cmp
and
ss
lret
sub
fistpll
outsb
push
xlat
ret
not
add
les
xor
dec
lahf
mov
sbb
aad
jg
cltd
sbb
cmpsl
push
imul
lds
xchg
rolb
xor
loope
repz
cmpl
dec
movsl
out
icebp
andb
xchg
fwait
cmpsb
ljmp
push
adc
push
rcrb
and
xchg
jo
test
cltd
sub
test
push
cmpsb
add
shl
and
mov
push
jbe
ret
es
pop
arpl
xlat
push
enter
roll
jns
dec
enter
pop
fcompl
mov
mov
jl
or
lcall
add
sbb
out
pop
aas
mov
clc
jnp
jge
cmp
push
ja
popf
clc
and
cmp
sub
fcoms
clc
xor
pushl
lret
add
pop
jle
sahf
adc
mov
std
popf
push
xor
ljmp
punpcklwd
xor
push
add
push
int
test
cltd
mov
push
dec
add
repnz
push
inc
mov
jge
inc
popa
adc
orb
xchg
jge
popa
repz
xorb
cmc
ret
test
mov
adc
sarl
sbb
movsb
adc
ret
test
push
sar
mov
sbb
scas
ret
pushf
call
shll
insl
ja
int
adc
jmp
lods
stos
cli
inc
divb
sbb
inc
out
jno
repz
rcl
dec
and
jno
movaps
ret
xchg
hlt
cmp
pusha
dec
bound
sub
lods
movsb
xor
or
inc
inc
dec
xchg
push
jmp
inc
stos
cmp
cmpb
aaa
push
mov
clc
mov
mov
pop
mov
mov
jns
out
mov
loope
repnz
dec
icebp
xor
or
mov
sub
leave
add
sub
ljmp
aad
mov
inc
ja
or
insb
ds
icebp
pop
in
push
pop
into
xchg
xchg
inc
push
cmpsb
sti
mov
lods
adc
div
js
clc
cltd
and
imul
mov
pop
mov
outsb
inc
xor
push
dec
xchg
enter
js
mov
pop
repz
aaa
insl
adc
subl
adc
jmp
sarb
pop
jno
test
xchg
repz
push
es
dec
stos
adc
imul
or
aam
les
inc
pop
ror
push
push
inc
movsb
or
jb
inc
es
in
popf
fstpt
in
cld
pushf
pop
stos
mov
push
cld
sbb
adc
ja
cmpsb
xchg
iret
scas
mov
xor
pop
and
out
ret
xor
hlt
push
xchg
xchg
add
cli
test
xor
icebp
and
mov
mul
xchg
call
xchg
lcall
xchg
lret
sub
jo
pop
aam
or
inc
in
inc
and
addl
mov
lods
out
das
or
xchg
ds
add
pop
add
mov
cltd
pop
jo
mov
pushf
das
or
inc
cmp
xor
xchg
cltd
xchg
out
and
dec
in
mov
add
adc
mov
ret
add
ljmp
fsubl
cmp
xor
add
sub
dec
ror
pop
clc
cmc
sub
cld
ljmp
mov
push
mov
mov
jno
jbe
mov
push
jge
fisubl
adc
gs
add
sub
jp
xchg
pushf
inc
movntq
mov
fucom
nop
adc
cmpsl
mov
lret
mov
cmp
mul
hlt
sub
pop
xor
testl
shr
push
mov
cmp
inc
mov
fstps
add
jno
cmp
dec
or
xor
scas
sbb
jmp
or
movsl
mov
popf
lds
test
push
aad
cmc
divb
mov
cmp
xor
fcoml
loopne
pop
dec
rcrl
je
xchg
sbb
cmp
lcall
push
and
dec
sub
mov
mov
in
add
mov
mov
imul
add
mov
mov
jecxz
jle
sbb
aad
iret
nop
or
add
mov
stc
pop
inc
adc
dec
xchg
imul
loop
lods
mov
mov
or
or
pop
mov
leave
test
idiv
and
lds
es
cli
dec
adc
xchg
cmp
sahf
mov
adc
insl
or
add
hlt
enter
pop
lahf
loop
pop
hlt
ljmp
push
fbld
xchg
mov
sub
stos
and
cmp
into
icebp
sbb
push
add
push
stos
cwtl
sbb
stos
fbstp
mov
jl
xor
dec
pop
push
lahf
ljmp
call
mov
sub
dec
call
ss
cmpsl
mov
push
or
dec
sub
icebp
pop
fst
ss
mov
fcomi
sub
adc
push
cli
dec
pop
xor
sti
and
outsl
add
sub
aam
lods
jg
and
dec
cmp
add
mov
mov
call
iret
negl
pop
insb
mov
mov
cmc
mov
dec
add
out
popf
inc
pushf
popf
das
out
pushf
lcall
popf
repz
xchg
jmp
push
jbe
jl
sub
sub
adc
pushf
lcall
out
cli
pop
add
pop
push
mov
ss
inc
xor
movsl
mov
je
sbb
sbb
test
jl
push
daa
int3
insl
mov
pop
or
mov
mov
lds
rcrl
xchg
xchg
cmpb
push
push
adc
inc
scas
jp
movsb
inc
pusha
mov
setnp
push
pop
push
dec
test
pop
inc
push
outsb
xchg
jns
sahf
lods
jae
dec
or
xor
sub
or
mov
adc
mov
jno
aam
int3
pop
mov
fistps
dec
xchg
pop
adc
in
and
mov
jno
cmpsb
insl
imul
je
xor
push
push
xchg
mov
xlat
hlt
xchg
fisttpll
lods
add
test
repz
ret
jb
cmp
ljmp
insb
sub
cmpsb
ja
ja
mov
stc
leave
negl
ljmp
rorb
rol
loop
xor
sub
sub
dec
std
or
test
mov
sbb
add
stc
fneni(8087
cwtl
or
sbb
iret
clc
xor
sub
orb
rorl
iret
push
and
mov
and
xorl
loop
popf
xchg
jg
gs
jmp
lret
insl
test
mov
test
std
gs
pop
clc
or
dec
and
pop
lea
sbb
cwtl
adc
in
addr16
xor
dec
add
ret
out
add
dec
jae
and
push
mov
sub
and
stos
cmpsb
imul
stos
mov
sub
cmp
push
push
shll
mov
out
aaa
adc
xor
push
repz
aam
cmp
jecxz
mov
dec
popa
ds
push
lahf
dec
adc
fidivl
lcall
ret
lret
adc
outsl
mov
call
negb
dec
dec
jne
jne
rclb
shlb
push
dec
dec
shrl
rclb
pop
sbb
pop
mov
pusha
in
sub
or
sub
ror
aad
jge,pt
iret
mov
push
mov
cmp
or
adc
mov
lods
mov
mov
es
ds
mov
xor
mov
and
mov
push
xchg
test
add
verw
push
lods
sbb
pop
push
cwtl
add
outsb
inc
mov
dec
ljmp
and
xlat
aam
fsts
arpl
xchg
shrl
add
lcall
jp
cwtl
jno
imul
insb
ja
lock
es
or
fwait
xchg
aas
addb
test
outsb
fidivs
and
cmpsl
pop
sbb
mov
adc
mov
lods
pop
mov
ffreep
sbb
es
ss
js
sahf
test
mov
stc
cli
cmp
xor
mov
lret
mov
out
push
xchg
fisubrl
pop
repnz
lret
in
bound
nop
xchg
inc
js
mov
int
inc
add
pop
mov
xor
mov
xchg
adc
xchg
lods
lahf
movsb
mov
mov
sbb
sbb
movsl
movsb
pusha
xchg
push
push
aam
dec
sub
push
add
push
cs
sbb
pop
imul
loop
pop
jg
imul
mov
pop
lock
inc
xchg
lea
pop
adc
leave
pop
sbb
les
sbb
xlat
aad
call
sbb
sub
fidivs
xor
inc
out
push
lret
sub
shrb
testb
xor
mov
aaa
pop
mov
xchg
inc
cmc
movsb
or
mov
mov
inc
sub
and
loop
sbb
add
hlt
sbb
jle
mov
loop
push
jb
and
inc
cmp
or
or
mov
xor
fdiv
sbb
repnz
sub
mov
dec
dec
jnp
inc
stos
jge
lret
test
add
mov
sub
sbb
mov
cli
fimuls
mov
adc
cmp
in
insl
jno
es
sub
fs
sbb
lods
jecxz
and
xchg
inc
aas
insb
mov
pusha
mov
fists
pop
push
clc
add
nop
mov
js
mov
std
shrb
orl
into
or
xlat
jge
stos
jns
push
xor
cwtl
leave
clc
fmull
inc
loope
cmpsl
dec
xchg
xrstors
mov
xchg
mov
outsb
add
stos
jns
in
je
push
push
add
xchg
pop
cmpsb
call
in
xor
inc
lock
out
adc
dec
repz
cmp
pop
jge
xchg
xor
repz
in
pop
adc
sbb
mov
mov
mov
jmp
xchg
dec
stos
adc
and
or
sbb
xchg
sbb
inc
lret
xor
and
inc
shrl
adc
sbb
push
movsl
out
adcb
ja
and
jae
adc
dec
repz
das
stc
scas
push
inc
pop
fisttps
dec
loope
negl
dec
out
stos
inc
push
mov
mov
repnz
loopne
sub
mov
enter
addr16
aam
cmpsl
lods
bound
add
mov
pushf
mov
mov
xchg
mov
xor
push
test
lahf
mov
std
lret
add
add
xorb
test
loope
loopne
lcall
pop
jb
sbb
into
dec
inc
daa
aam
enter
inc
pop
dec
dec
cmp
outsl
sbb
dec
pop
jbe
or
and
sbbl
movsl
inc
mov
xor
adc
cmpsl
test
cmp
shrb
push
lock
mov
test
inc
cmp
das
mov
sub
jmp
inc
dec
inc
or
pop
or
xchg
xor
lret
mov
xchg
xor
adc
dec
push
mov
fdivrs
push
shlb
ds
enter
xchg
jmp
inc
xchg
pop
pop
std
out
push
adc
icebp
push
in
lahf
mov
lods
xchg
jne
mov
pop
data16
xor
mov
jae
add
adc
rcrb
mov
testb
ss
sbb
out
bound
add
lcall
sahf
jle
shlb
cs
xlat
mov
push
inc
sub
testl
add
sar
cwtd
adc
je
shl
stc
insb
adc
popa
imul
ret
push
movsl
push
mov
dec
and
add
shll
pop
fstpl
mov
ret
mov
dec
jle
out
in
leave
xor
cmp
or
add
les
cwtl
xor
mov
bound
jb
push
adc
aad
jle
jp
int
mov
or
shl
inc
jne
negb
adc
out
mov
sahf
leave
mov
movsl
mov
dec
addr16
xor
mov
add
ja
jecxz
aam
repz
sbb
inc
mov
call
jns
lret
int
cmpsb
or
push
mov
fcomps
adc
add
xchg
cmp
mov
test
mov
push
or
adc
ror
int
push
inc
jecxz
arpl
js
aaa
imul
xchg
pop
mov
jo
add
into
jg
push
pushl
pop
mov
jmp
outsb
ljmp
inc
ficomps
inc
and
sbb
lds
cmc
in
fnstenv
sub
loope
mov
xchg
push
les
dec
cmp
enter
lret
xchg
insb
mov
or
sti
xchg
mov
and
aam
test
or
jns
subb
dec
inc
sarl
xchg
add
shl
push
mov
mov
enter
bound
fsubr
fiadds
js
fsts
adc
jns
jg
cmpb
cwtl
xchg
test
xchg
sbb
push
mov
mov
adcb
and
xchg
mov
push
add
push
and
dec
fdivs
gs
adc
aaa
xor
xor
add
inc
and
jl
test
add
ds
out
mov
insb
cmpsb
xor
in
test
dec
test
scas
js
mov
jg
adc
inc
mov
ds
rcrb
fdivs
push
leave
dec
stos
insb
inc
repz
sub
xor
cmpb
jmp
cmp
dec
push
mov
repz
xchg
fdivrl
sahf
out
xchg
cmp
push
out
dec
scas
lods
push
push
fnstcw
in
cmp
orl
outsb
lret
mov
cmp
mov
xchg
xchg
xchg
cmp
dec
popa
sub
pushf
out
mov
scas
es
orb
lods
pusha
fwait
insb
lock
add
cmpsl
or
add
fcmovnu
aaa
xor
lods
test
jae
test
sbbl
add
mov
fmul
cmp
int3
sahf
inc
and
push
sub
fdivr
aad
test
fstpt
xor
xor
loope
add
inc
lret
adc
mov
sbb
mov
mov
negl
xchg
lods
std
sbb
in
in
insl
in
fstps
lock
add
and
jbe
inc
xchg
sub
pop
into
jns
sub
repz
fstpl
bound
jns
or
pop
cli
xor
pusha
xchg
adc
repnz
push
lret
push
xor
push
icebp
push
jns
adc
jmp
mov
bound
jmp
and
cmp
and
xchg
mov
fnstsw
in
jmp
dec
addr16
pop
mov
in
test
cli
in
sbb
inc
arpl
sbb
xchg
rcrb
xchg
jno
pop
mov
mov
sbb
mov
mov
cmp
aaa
fistl
xchg
mov
push
xlat
pop
push
inc
push
sbb
scas
test
sbb
jne
lock
inc
mov
mov
aas
xchg
hlt
jmp
lods
icebp
mov
in
lea
inc
and
shr
sbb
popf
push
inc
mov
stos
inc
pop
jne
dec
and
aas
lods
push
xor
das
in
xchg
push
es
rol
sti
or
add
or
lahf
lret
xlat
in
lock
adc
sub
mov
xchg
fmul
jle
dec
cmpsl
lods
ljmp
cmp
xor
and
pop
sub
xchg
mov
leave
enter
pop
push
push
imulb
subb
sbb
lahf
inc
aaa
repz
lock
mov
aad
dec
inc
jmp
fsubl
ja
sub
out
mov
jo
sbb
jo
lret
inc
add
rclb
lock
jmp
loop
ret
mov
push
mov
dec
hlt
jnp
test
pop
or
jle
call
mov
stos
aam
jnp
pop
cs
les
xorl
mov
adc
aam
out
push
outsl
xchg
test
in
popa
cmp
out
mov
jg
test
push
fimull
and
outsl
mov
test
lock
lock
dec
push
packsswb
sub
inc
or
mov
data16
in
dec
add
fldenv
adc
pop
icebp
dec
mov
inc
pop
out
xchg
out
push
sbb
int
mov
push
sub
jge
mov
lahf
faddl
or
ficomps
scas
mov
movsw
adc
and
frstor
xchg
mov
cmp
in
xchg
pop
lret
push
aad
cmp
sbb
push
xchg
fisttps
jae
or
xchg
and
nop
mov
push
mov
fsubrs
aad
jmp
mov
pop
or
cmpsl
loop
cmpsl
dec
nop
insl
push
push
xchg
mov
adcb
push
bound
data16
jno
cltd
xchg
push
dec
stos
inc
inc
in
and
jnp
add
addr16
mov
jmp
fs
cmovno
mov
fwait
xor
push
mov
sub
ds
in
aaa
mov
sbb
xchg
sahf
std
clc
mov
icebp
pop
leave
cld
movl
push
daa
add
pop
push
inc
xor
daa
push
lret
imul
inc
jne
sbb
mov
arpl
mov
js
insb
dec
ds
outsb
cmpsl
pop
pop
sti
pop
pop
test
pushf
jp
sbb
push
loopne
dec
or
mov
cld
xchg
insl
lret
add
stos
int3
icebp
pusha
pop
movsb
cltd
inc
mov
movsl
sub
aad
and
ljmp
jmp
movb
mov
int3
mov
xchg
aaa
loopne
test
add
scas
xchg
test
fstpl
pop
mov
mov
out
push
xor
mov
pusha
cmp
lock
mov
sub
adc
fsubrs
and
xor
sub
inc
hlt
sub
jge
mov
adc
dec
inc
test
jbe
fdivr
aad
mov
jns
outsb
std
and
jb
push
inc
sbb
std
negl
leave
mov
mov
arpl
sbb
inc
xchg
pop
cwtl
mov
jg
into
mov
sbb
shlb
dec
mov
cmp
push
das
test
fsub
mov
push
rcl
inc
lret
mov
cltd
das
lds
in
sbb
sbb
add
data16
add
sti
pop
mov
pop
int3
pop
shlb
popf
sbb
push
inc
adc
cmpl
pop
and
add
adc
out
lret
test
sub
stos
lods
jno
mov
clc
insl
push
push
pop
or
xchg
inc
dec
les
mov
stc
out
das
pop
in
cmp
jmp
mov
lahf
adc
mov
adc
stc
into
repz
mov
cmp
mov
xlat
cmp
adc
aam
lds
push
ret
mov
cwtl
xor
cmpsb
pop
mov
pop
fdivr
mov
into
fldl
pop
mov
push
or
mov
in
movsl
lock
sbb
mov
add
push
mov
ja
push
cmc
popa
arpl
cwtl
pop
in
lock
inc
dec
out
cmpsl
mov
push
das
in
cmc
faddp
pushf
or
mov
inc
cltd
xchg
jecxz
pop
rorl
dec
pop
inc
cmp
mov
lock
mov
or
or
xchg
pop
dec
jmp
xor
xchg
mov
inc
jne
mov
in
jno
adc
jnp
lcall
int
sub
sub
add
aad
popf
enter
scas
pop
and
push
cmp
jbe
pop
lret
sbb
sub
fs
mov
lret
dec
add
mov
and
pop
jmp
mov
inc
fwait
pop
push
cmc
push
mov
mov
and
xor
lret
cltd
ret
xor
xor
mov
mov
push
aaa
out
cwtl
add
dec
outsl
xlat
pop
cmpsl
int3
test
sbb
push
mov
clc
jmp
inc
lock
fisttpl
mov
pop
popf
add
adc
or
arpl
rcl
stos
pop
and
pop
adc
clc
push
inc
scas
gs
mov
lods
cmpsb
in
idiv
pop
inc
and
xchg
mov
xlat
mov
rorb
out
sub
inc
fdivr
dec
mov
aas
lahf
movsb
sbb
loopne
and
pop
adc
sbb
cmp
ret
inc
cmp
scas
xor
inc
lret
adc
std
push
arpl
andb
stos
loope
cmp
outsb
sub
inc
add
jae
unpcklps
sti
in
cmp
xchg
jb
sarb
and
movsl
fwait
ss
or
cmp
pop
xchg
icebp
push
in
scas
insl
and
out
dec
pop
xor
add
push
out
mov
push
inc
repz
sub
pop
and
jge
cmp
nop
add
inc
loope
pop
loop
dec
out
xchg
xchg
fsubl
jnp
mov
repz
fdivrs
inc
xchg
sarl
mov
fs
xchg
pop
pop
sarl
xor
iret
repz
adcb
ss
jp
int
outsl
mov
and
cmpl
xchg
cmc
popf
bnd
mov
xchg
lret
int
jae
faddp
mov
mov
fs
pop
fdivrs
inc
dec
push
cmp
mov
movb
pop
mov
inc
arpl
jp
sub
cmp
int3
dec
dec
mov
jbe
xchg
dec
ret
hlt
xchg
mov
xlat
popa
mov
add
ret
xchg
mov
fs
push
cmp
push
xchg
xor
out
mov
add
lods
test
in
aas
push
push
imul
or
sub
test
je
daa
mov
pop
xchg
addb
mov
pop
not
sbb
jg
lods
xlat
xor
add
sbb
popa
daa
ja
fnstsw
subl
fs
cmp
lds
or
repnz
lods
add
lods
mov
insb
jecxz
cmp
mov
sbb
push
mov
rcr
cli
inc
sbb
inc
xchg
aas
jle
adc
popf
arpl
cltd
mov
lock
scas
addr16
jle
mov
leave
cmpsl
push
test
xchg
cmp
fwait
sbb
jle
daa
lea
sarb
or
add
xor
dec
out
mov
int
jl
mov
daa
push
jmp
mov
aaa
xchg
mov
dec
out
xchg
xchg
and
test
mov
scas
mov
sti
inc
inc
xchg
mov
push
and
or
or
daa
fsubrl
mov
les
mov
jp
lahf
cmp
xlat
and
pushf
or
int
pop
scas
shlb
jnp
cmc
fwait
mov
lret
mov
ljmp
dec
cmp
pop
daa
sub
push
xlat
daa
loop
jo
adc
mov
mov
imul
pop
or
adc
xchg
inc
repnz
mov
lcall
mov
lods
mov
adc
jb
mov
scas
cmp
dec
inc
loope
out
adc
out
push
xchg
inc
mov
test
dec
imulb
xor
mov
cs
xchg
adc
xchg
cmp
fiaddl
or
gs
scas
inc
lcall
nop
dec
adc
mov
andb
jns
ljmp
adc
fwait
jmp
hlt
popf
std
loopne
call
pop
in
push
inc
push
mov
pop
or
dec
lods
cmc
enter
mov
fiaddl
adc
imul
push
les
icebp
jns
jge
dec
pcmpgtw
and
and
ds
and
rcrl
cmp
xor
sbb
or
xor
ds
stos
pop
xchg
out
jecxz
aam
xlat
test
xor
imulb
mov
mov
fisubrs
out
loope
dec
rcr
in
inc
or
out
push
imul
and
out
ret
mov
xchg
int
and
and
rcrb
je
dec
mov
lahf
cmp
movsl
and
out
les
js
inc
lock
not
push
dec
pop
mov
xchg
shrl
inc
icebp
fcoms
dec
call
out
imul
jmp
mov
insl
mov
add
xlat
out
dec
and
adc
inc
inc
mov
clc
sbb
jecxz
push
push
iret
cmp
push
in
cld
add
jae
dec
sahf
out
mov
sbb
loopne
inc
popf
lods
cli
loopne
call
pop
dec
mov
idivl
addr16
cmpsl
in
cmpsb
lcall
rcl
push
out
lcall
lret
adcb
push
iret
lds
je
xor
lret
adc
orb
lds
and
dec
fisubl
mov
sbb
out
shll
pushf
mov
leave
daa
subb
shrb
and
jno
bound
dec
sub
movsb
jo
sbb
cmc
lahf
les
add
push
mov
adc
arpl
rolb
out
movsb
cld
adc
in
push
fsubs
cwtl
in
xchg
sub
xchg
mul
dec
nop
out
fiadds
or
popa
sub
outsb
ljmp
push
mov
scas
orb
ljmp
mov
roll
push
jbe
cmp
fwait
and
les
sub
dec
push
mov
sbb
test
clc
leave
sub
ret
stc
in
das
pop
mov
rol
rorb
pop
lret
push
into
lret
ds
aas
cmp
jb
cmc
xor
jbe
mov
ja
push
stos
inc
sub
cmpsl
imul
push
aas
pop
cmp
xchg
mov
sbb
faddl
rclb
fcomip
stos
mov
into
mov
pop
in
mov
out
push
repnz
cmpsl
daa
je
jg
addb
nop
jmp
clc
sarb
js
iret
cwtl
cltd
mov
loope
adc
or
sahf
dec
add
xchg
jns
std
dec
xchg
cmp
sbb
xchg
cmp
cltd
pop
es
imul
jp
in
dec
push
mov
and
mov
lret
or
push
push
adc
and
lret
int3
push
stos
movsl
pop
movsl
mov
bound
inc
adc
jl
dec
leave
and
adc
mov
jne
gs
fsubp
adc
jnp
ret
enter
jle
mov
jo
mov
xlat
pop
pop
mov
push
mov
sbb
xor
jge
insl
stc
pop
jg
xor
jle
test
add
out
sbb
push
out
or
or
int3
xor
sbb
mov
fstpl
scas
push
inc
xlat
sbb
cmp
dec
cmp
lock
aas
mov
sub
in
xor
out
out
imul
lret
sahf
inc
cmp
mov
cld
or
and
fwait
aas
dec
enter
std
pusha
mov
stc
sub
push
sahf
mov
inc
and
clc
imul
ds
shl
int3
out
shl
shlb
cmp
cltd
and
jecxz
fisubrs
xchg
hlt
sbb
imul
pop
push
gs
lcall
repz
rep
jne
adc
mov
pop
cmpb
pop
adc
icebp
xchg
push
lods
xchg
add
mov
loop
push
xor
popa
adc
daa
cld
test
pop
jle
inc
movsw
insb
jo
mov
popa
and
out
or
jno
int3
out
or
mov
mov
stos
imul
jg
jbe
cmc
xchg
jle
fcmovb
fstp
inc
clc
mov
sub
and
sub
fldcw
pop
mov
and
jl
jl
jbe
push
inc
inc
xor
clc
stos
xchg
push
ss
sbb
ss
lcall
adcl
dec
adc
cld
addr16
push
ja
cmp
jnp
out
sbb
rolb
mov
ja
data16
xchg
or
out
pop
test
sub
inc
and
test
out
jmp
sbb
sub
mov
repz
jge
adc
xchg
scas
xor
adc
hlt
int
out
add
orb
push
and
ja
pop
aam
sbb
mov
mov
out
outsl
mov
mov
mov
aas
fs
inc
cltd
lock
sbb
cmp
enter
mov
jns
cld
push
data16
push
pop
mov
and
mov
mov
xchg
in
es
cmpsl
mov
icebp
imul
cmpsb
push
push
push
jne
movsb
jmp
push
aaa
cmp
adc
fcomps
mov
pusha
push
inc
pop
test
in
adc
cmp
mov
adc
xor
ror
sub
xchg
cwtl
loopne
cmc
dec
loope
dec
inc
and
shrb
mov
loop
mov
xchg
push
pop
sti
mov
outsb
push
xchg
mov
out
push
iret
dec
and
lods
jp
mov
cmp
mov
mov
rcll
cmp
inc
pop
cmp
adc
outsl
idiv
shll
adc
repz
mov
cwtl
mov
lret
push
roll
pop
pop
add
into
inc
dec
dec
adcl
jmp
push
mov
xchg
cmp
inc
inc
mov
scas
pop
sti
repz
outsb
jle
int3
sbbb
rorl
mov
dec
sbb
std
jg
or
dec
and
lock
ds
add
xchg
jbe
gs
lods
stos
daa
mov
push
fdivr
xchg
mov
mov
data16
xor
pop
and
roll
lods
inc
add
outsb
negb
adc
movsb
loop
mov
ss
imul
cwtl
xlat
sbb
dec
out
dec
add
cmove
fcomps
mov
js
stc
mov
fsubs
xchg
ljmp
std
shll
ss
or
push
fucomp
lea
dec
fisttps
xor
push
or
dec
mov
cmpsb
enter
push
adc
stc
scas
andl
js
icebp
mov
cmp
push
adc
ret
mov
stc
dec
xchg
or
sub
add
test
pop
pop
pushf
sub
rorl
pop
imul
mov
sub
pushfw
in
cmp
aas
push
add
enter
bound
mov
inc
int3
sub
dec
cmpl
fdivs
jns
lahf
and
and
ja
jno
dec
xchg
xor
sbb
repnz
je
mov
mov
fbstp
jbe
xchg
mov
mov
mov
out
inc
xor
jnp
push
bound
mov
pushf
inc
pop
xchg
mov
mov
arpl
loope
loop
xchg
ds
pushf
adc
push
cmp
pushf
and
dec
sub
clc
aaa
roll
add
sbb
andb
insb
push
test
lods
pop
xchg
fisubrs
inc
fidivl
xchg
inc
inc
mov
inc
cld
test
mov
aaa
stc
add
sbb
sub
imul
mov
lds
mov
mov
jbe
push
lods
or
xchg
jge
das
mov
adc
inc
je
lcall
jl
sbb
pop
pop
in
ficoml
or
out
lret
movaps
roll
pop
movsb
pop
rolb
sub
sbb
sub
fs
pop
scas
or
mov
pmaxub
push
imul
xor
mov
sbb
adcl
shll
xor
sub
imul
lret
dec
sbb
pushf
adc
dec
mov
inc
inc
pop
fisubl
fldt
mov
sub
mov
dec
cmc
mov
in
cwtl
test
out
sub
fcompl
lret
arpl
mov
add
fldt
inc
cli
pop
outsl
or
mov
adc
push
daa
sbb
and
and
es
dec
add
ret
pop
popf
cmp
mov
jecxz
push
rcll
push
pop
imul
mull
mov
mov
adc
lods
icebp
cmpsb
es
cmpsb
xor
adc
xor
pop
sbb
push
adc
mov
ja
das
iret
lahf
pop
lods
in
mov
or
or
js
sahf
and
or
xchg
arpl
data16
xor
jae
insl
pushf
adc
or
ljmp
mov
push
movsb
fs
inc
jbe
jp
test
and
lea
decb
inc
repz
stc
push
cmp
pop
pop
cmpsb
and
xor
xchg
ret
jae
pop
in
loop
call
bound
aam
jmp
aas
lret
dec
inc
jnp
flds
mov
pop
inc
fisubs
test
inc
pop
std
mov
popf
push
idivl
sbb
jmp
pop
testb
jo
cmpsl
sub
pop
data16
and
stos
and
jl
xchg
ja
and
mov
xchg
add
pop
xlat
scas
ja
push
das
add
push
add
jns
mov
and
or
cld
out
mov
jp
cwtl
ror
push
bound
pop
int
out
push
nop
mov
adc
sub
or
cmp
push
sub
int
pusha
cmc
cmpsl
neg
jmp
adc
enter
push
rolb
mov
test
push
mov
mov
leave
mov
test
push
push
push
lods
cmpsb
push
adc
jp
add
cltd
fisubl
push
push
gs
enter
jmp
iret
push
adc
leave
aas
vpsubsw
adc
jge
cmp
jmp
jbe
cli
mov
jnp
jne
push
imul
aam
cli
lock
cmp
push
jmp
lds
jl
out
call
pop
cmp
or
movsb
mov
fistps
lret
xor
cmc
lods
rclb
shll
loopne
mov
add
nop
loopne
scas
pop
cmp
sahf
loope
js
xor
shrl
jecxz
stos
shl
jno
dec
fwait
in
lods
in
cmc
loope
or
dec
cmp
mov
mov
es
jg
push
enter
xchg
jae
adc
mov
cmpsb
int
stos
sarb
sub
les
js
es
insb
inc
ljmp
xor
lock
cmc
ja
xor
jo,pt
sub
imul
mov
aas
lret
popa
push
jbe
stos
lret
popa
sub
pushf
jbe
adc
adc
xor
aaa
xchg
sbb
and
push
clc
fwait
scas
imulb
pushf
inc
jl
mov
cmp
jmp
in
popf
repnz
fistpl
les
dec
pop
pop
aad
pop
ret
lods
rolb
mov
pop
call
mov
add
cmp
push
pop
mov
stos
pop
push
sbb
or
xchg
pop
push
xor
dec
sub
cltd
push
movsb
or
sti
pop
xchg
jns
shrl
mov
cs
inc
jo
cltd
or
ljmp
pushf
push
pop
aad
in
push
ror
ss
add
fwait
adc
ret
cmp
inc
mov
daa
sbb
ljmp
fstpt
push
aad
add
mov
mov
xchg
jno
not
xchg
mov
out
push
and
pop
mov
inc
fbstp
add
sub
ret
in
cmpsl
addb
inc
je
dec
push
lahf
cltd
sahf
pop
lea
sbb
jo
jmp
push
lds
out
push
lods
lcall
jne
cltd
sbb
sub
jno
push
or
fistps
dec
mov
subl
rcl
pusha
inc
cmc
ret
push
lea
ss
mov
clc
ret
inc
or
inc
or
jmp
push
test
mov
push
jno
scas
insl
ss
and
add
xchg
mov
jae
ja
fwait
push
jno
sub
rcl
jle
das
sbb
xlat
ljmp
ret
sub
shll
cld
xchg
ds
cld
dec
and
mov
mov
roll
imul
nop
test
dec
jbe
lret
mov
mov
out
idiv
js
fwait
mov
mov
negb
stc
jo
repz
mov
or
mov
and
andb
pop
xchg
push
inc
mov
divl
sub
cmp
jp
scas
movsb
jns
lret
or
test
inc
and
add
sub
xor
add
daa
subb
add
pusha
in
add
insb
jnp
testl
lret
xor
pop
popf
and
jae
add
int3
xchg
mov
cmp
push
adc
in
test
xchg
jnp
xchg
or
movsl
sub
jno
push
fpatan
sbb
call
xchg
mov
sbb
out
lahf
adc
and
xchg
jb
or
jp
cwtl
xchg
sbb
pusha
sbb
mov
sub
xor
loopne
xchg
cmp
jge
push
jecxz
rcll
and
int3
jl
sub
fidivl
call
mov
add
jb
push
ja
movl
push
cmpsb
cs
cmpsl
mov
scas
idivb
xchg
push
ss
adcb
test
test
int
mov
imul
imul
psubusb
mov
dec
mov
lods
rcl
push
pop
sub
mov
repnz
or
add
loope
jge
sub
movsl
xchg
and
mov
insb
mull
fbstp
ja
jge
or
call
in
repz
xchg
dec
xor
fdivrl
xchg
or
aam
pop
aam
scas
les
fidivrl
dec
adc
mov
mov
lds
mov
out
cmp
adc
out
popf
mov
xor
lods
mov
in
ss
xchg
add
mov
insl
sbb
pop
enter
rolb
and
sbb
push
in
push
mov
lods
sub
fsts
das
or
jne
push
push
lods
jns
in
pop
push
int3
inc
cmp
mov
flds
cmp
xchg
pop
inc
test
lret
andl
lock
ret
or
push
cmpsl
cmc
sub
mov
jge
jo
lret
jl
inc
scas
xchg
jo
cmp
sbb
dec
enter
scas
outsb
cmpb
mov
sbb
xor
movsb
pop
aad
jmp
mov
sbb
test
sarl
fsubl
out
cmpl
sbb
jmp
aam
adc
ret
lcall
adc
hlt
jnp
insl
lea
cld
add
ds
xor
cmc
push
pop
fmull
mov
cmpsb
push
lret
adc
ja
push
sub
inc
sahf
jae
cs
xchg
aaa
mov
std
mov
in
outsb
sti
std
push
inc
shlb
fcoms
dec
dec
mov
cltd
cmp
add
das
xor
inc
cmc
mov
inc
jge
movsl
inc
push
xor
leave
loop
pop
stos
les
xor
add
adc
sbb
mov
add
add
cmpsb
movsb
xchg
lcall
insb
fcmovb
mov
xchg
daa
xor
push
loopne
aas
push
cmp
lea
pop
arpl
push
pushf
bound
fcomps
push
dec
inc
cmpsb
push
inc
ds
mov
pop
pop
inc
mov
shl
push
imul
scas
inc
aaa
in
mov
xchg
fldl2t
aad
dec
mov
mov
push
and
fimull
jl
loopne
ja
sbb
and
iret
cmp
pusha
jae
shlb
push
lds
loopne
adc
ret
ret
cli
xchg
leave
test
mov
imul
xchg
ret
sti
int
add
inc
mov
cmp
gs
dec
repz
sub
repnz
andb
sub
xor
or
jnp
lahf
add
sbb
imul
fwait
jns
sub
jns
int
sarb
sbb
adc
scas
pop
jmp
xchg
shl
cs
mov
hlt
add
pop
or
daa
stos
jb
and
enter
pop
and
mov
aas
outsl
push
cmpsb
jbe
jmp
xchg
outsb
adc
repnz
fistpl
call
mov
dec
jbe
pusha
jnp
xchg
mov
popa
mov
mov
stos
loope
pusha
xchg
ds
inc
pop
adc
mov
xlat
sub
insb
fistpl
cli
cmp
repnz
pop
and
orl
mov
enter
stc
adc
mov
lds
icebp
popa
es
and
aam
inc
mov
imul
cwtl
add
cmp
jno
sub
pop
filds
jbe
mov
jns
hlt
push
inc
and
sub
push
mov
fsubrl
inc
jle
imul
xor
adc
push
lods
add
push
cmpsb
ret
das
push
xor
hlt
inc
mov
cmp
fmull
xchg
mov
cmp
mov
dec
push
sbb
mov
mov
mov
mov
enter
mov
pop
push
xor
xor
sahf
lods
dec
jo
incl
mov
in
lea
xor
sbb
in
push
cld
fwait
je
adcb
or
loopne
mov
icebp
adc
ljmp
inc
out
push
xor
and
fnstenv
int3
or
and
adc
divl
and
out
jo
out
ret
cli
cmp
out
dec
faddl
jb
mov
xchg
add
adc
cld
push
sbb
lock
out
outsb
and
shr
cmc
icebp
inc
xchg
xor
xchg
xor
sbb
xchg
adc
loop
push
enter
int3
adc
fsubrl
fidivl
stos
mov
pushf
adc
mov
pop
shrl
lret
and
xchg
or
pop
xor
xchg
push
jecxz
outsb
fdivs
out
lret
ror
xor
adc
bound
loop
adc
nop
push
sbb
xlat
mov
xchg
fisttps
sub
add
lods
out
in
push
repz
je
mov
call
cmp
sbb
pop
iret
lret
jno
aad
rclb
cmc
cmp
push
test
sbb
mov
std
mov
popf
cmp
inc
and
ljmp
es
xor
test
mov
add
nop
mov
bound
scas
dec
or
stos
imul
lahf
out
mov
inc
mov
cmp
test
mov
add
adc
fwait
jbe
mov
popa
xchg
mov
xor
or
out
popf
cmp
cmc
out
inc
call
pop
xlat
cli
jp
jbe
or
inc
pop
decb
add
mov
js
cmc
push
jno
test
fs
movsl
fiadds
bound
lock
sbb
test
xor
clc
call
mov
fiaddl
pop
mov
mov
cmpl
ds
mov
xchg
dec
push
lods
ljmp
scas
aas
dec
out
fsts
xchg
mov
pop
je
xchg
mov
cli
cmp
jnp
cmpsb
bound
xchg
cli
or
dec
jge
shll
adcl
adc
fwait
cmpsb
sub
add
fs
pusha
lods
test
cli
in
pop
ds
notb
push
dec
pop
pop
js
lret
shrb
in
mov
cmp
in
inc
gs
or
loop
dec
or
jns
mov
add
dec
mov
fdivl
push
xor
mov
mov
popf
jns
lcall
cmp
add
xchg
pop
sbb
mov
sbb
shll
pop
xchg
and
push
cmp
xchg
cmp
push
nop
shr
dec
pop
xchg
pusha
loop
push
int3
push
repnz
sub
rcl
mov
sub
sub
roll
sub
loopne
or
and
xor
cmp
pop
jo
mov
and
xchg
or
jae
push
mov
pop
push
jne
dec
int3
js
pop
and
movsl
mov
lcall
das
hlt
xlat
xchg
leave
or
dec
xchg
lods
out
je
inc
in
inc
stos
or
stos
inc
sbb
jge
jg
loope
mov
cmp
sti
inc
cmp
fistpl
push
les
pop
sbb
push
rcrl
leave
cmp
enter
sbb
das
clc
sub
mov
cmpsl
adc
outsb
sti
es
mov
leave
call
inc
pusha
sbb
popa
inc
frstor
lea
cmp
xor
cmpsb
push
and
ss
test
lods
inc
lahf
lods
mov
frstor
call
push
mov
pop
sbb
bound
cmp
lret
rclb
lret
or
push
mov
cmc
mov
popf
xor
inc
lea
jmp
xor
jl
dec
lods
shrl
push
sbb
outsl
int
cmpsb
leave
pop
gs
scas
or
sbb
rolb
add
inc
adc
lods
sarb
ljmp
jbe
xorl
js
xor
aaa
mov
enter
mov
inc
shlb
scas
add
cmp
lods
inc
adc
dec
sub
sahf
dec
pusha
outsl
sbb
insl
dec
rcll
fucomip
aad
repnz
adc
int
icebp
movsl
cmp
lods
cmc
inc
je
mov
mov
jnp
dec
dec
add
sahf
dec
jecxz
pop
fs
fisubs
push
push
jno
andl
pop
es
inc
stc
pushf
xor
lds
loope
push
sbb
push
pop
sub
xlat
and
outsl
outsl
adc
jecxz
ljmp
mov
adc
sbb
lods
push
ja
push
mov
mov
popa
std
into
cmpsl
je
test
xlat
and
mov
lds
aas
xchg
sbb
mov
mov
xor
jecxz
and
shl
test
test
lcall
gs
xor
sbb
shrb
icebp
push
xor
out
mov
mov
mov
adc
pop
cmpb
lods
repz
add
loope
push
sub
mov
test
pop
sub
jae
push
shll
movsb
mov
out
movsl
cld
ss
add
adc
mov
call
iret
fidivrl
mov
xlat
sub
or
mov
stos
push
jo
jno
pop
das
lods
fildll
add
aaa
adc
push
sub
xchg
rorl
xchg
sbb
push
jbe
mov
push
sahf
lock
mov
cwtl
test
cltd
push
lret
call
xor
xchg
jp
xor
decl
cs
scas
fs
mov
mov
push
repz
jb
ljmp
ret
dec
inc
cmpb
jns
mov
fisubrs
or
ret
aad
and
mov
fs
add
pop
fistpll
cmp
or
inc
add
and
push
xchg
mov
daa
lds
inc
dec
subb
cmc
sbb
imul
pusha
or
sbb
jmp
fists
test
insl
mov
mov
and
push
shll
popa
pop
sub
pusha
es
push
sbb
rcr
adc
add
in
sarb
shll
xchg
jnp
in
dec
clc
sub
xlat
mov
int
adc
popa
adc
inc
jmp
mov
push
mov
push
jno
push
inc
adc
mov
push
sub
mov
sub
adc
push
popl
mov
les
pop
cld
mov
mov
add
ljmp
lahf
jmp
nop
dec
popa
imul
push
pop
and
xor
inc
push
jo
cmp
aas
sub
cmpsb
je
orb
leave
mov
call
popf
xlat
fists
adc
mov
xor
mov
leave
add
ret
popa
pusha
push
je
rolb
loope
lret
insb
addr16
xor
push
push
add
test
xchg
xchg
pusha
iret
fisubs
jns
bound
adc
iret
push
jp
rorl
jo
xchg
pushf
pushf
mov
sbb
cld
dec
pop
cmp
popf
loop
pop
push
push
push
dec
xchg
push
pusha
int3
inc
outsl
out
pop
iret
outsl
dec
cld
push
pop
rorl
mov
jb
dec
add
je
lods
sub
and
iret
dec
gs
in
mov
cs
pop
dec
mov
jmp
hlt
mov
cmpsb
out
dec
test
arpl
js
hlt
cli
mov
mov
daa
jb
pop
mov
xorb
cmp
or
mov
mov
or
test
hlt
mov
cli
cmpsl
lds
scas
dec
add
add
scas
inc
ja
fwait
fs
fdivr
fbstp
add
xor
push
stos
leave
inc
iret
jo
mov
sub
imul
mov
neg
jg
push
push
ljmp
and
mov
cwtl
inc
loope
sbb
das
push
dec
insl
test
or
or
xor
pop
ss
mov
sbb
loope
add
inc
mov
imul
jle
movsl
into
sbb
ljmp
jmp
mov
pop
imul
lcall
push
or
lock
or
popa
ficoms
push
lcall
ja
std
xchg
in
ds
sbb
das
sub
mov
stc
dec
je
outsb
push
rcll
into
sub
mov
fsubs
add
cs
sbb
mov
pop
loop
xlat
xchg
sahf
add
insl
xor
mov
pop
xchg
nop
cmp
loope
js
mov
cmpsb
mov
stos
sbb
nop
adc
mov
xor
arpl
shl
aas
sub
mov
dec
push
mov
mov
mov
mov
cltd
movb
out
pop
addr16
insl
lahf
xchg
push
ljmp
push
stos
into
mov
sbb
and
jno
lods
and
in
repz
sub
insl
mov
test
mov
icebp
sarb
cmp
or
sub
leave
mov
fcmovne
fistps
pop
xchg
and
cmc
sub
stos
adcb
or
int3
xchg
mov
icebp
xchg
jno
cld
insb
xchg
negb
sub
and
test
das
push
cld
cmp
xchg
popf
dec
in
pop
pop
xor
nop
jle
insl
add
mov
sti
push
in
test
out
fmuls
lahf
lods
test
andl
aas
cmp
jbe
and
pushf
mov
mov
dec
inc
jne
cmp
or
adc
jbe
test
fs
and
sbb
jl
inc
mov
loope
mov
cmp
nop
pop
cmp
call
out
mov
mov
cmp
pop
add
cmpsb
pop
add
pop
ljmp
jp
dec
and
dec
out
cs
cmp
lret
int
inc
outsl
sub
cwtl
cmp
xor
fiadds
lock
imul
fildll
xor
repz
bound
sahf
scas
jo
dec
fidivl
insl
or
mov
int3
lods
jae
ljmp
in
cmp
icebp
pop
xchg
in
pusha
sub
aaa
sbb
ret
shll
or
test
cmp
aad
dec
std
ss
data16
mov
outsb
xor
or
mov
scas
cmp
test
pop
sbb
pop
cmp
mov
mov
or
popa
mov
sti
lahf
repnz
or
into
push
mov
mov
xchg
aad
pushf
push
fwait
sahf
push
mov
in
dec
idivb
test
icebp
jle
pop
outsl
adc
aam
aam
sbb
xchg
sahf
rcl
int
jno
push
pushf
out
adc
xor
arpl
hlt
das
js
jne
shlb
xor
rcrl
mov
popa
ja
mov
xchg
mull
pop
aad
fsubrs
jmp
mov
jmp
loopne
js
lret
scas
xchg
hlt
leave
data16
pop
jp
mov
hlt
dec
add
xor
or
scas
stc
std
pop
rcr
test
mov
jge
cmpsl
lcall
popa
clc
cli
out
mov
jb
sbb
sti
jne
xchg
imul
sbb
mov
jecxz
icebp
dec
mov
jbe
push
pop
addr16
add
pop
orb
je
je
sbb
add
sbb
adcl
cs
add
icebp
dec
loop
dec
dec
mov
loope
or
imul
outsb
add
inc
ss
iret
push
fwait
push
int
jbe
inc
loop
bound
sarb
stc
sbbb
ljmp
push
shll
js
cmp
inc
mov
popa
cmp
fmuls
or
xchg
sahf
ret
lea
or
lahf
dec
fwait
pop
mov
idiv
les
cli
mov
popf
cmp
repnz
push
sti
sub
mov
pop
inc
cld
inc
je
jnp
arpl
aas
daa
stc
push
rolb
dec
push
fdivl
add
add
push
imul
cli
lds
mov
and
xchg
inc
cmpsl
mov
dec
scas
push
mov
jmp
inc
cs
cli
jge
insl
test
sbb
in
mov
jecxz
pop
jecxz
push
pop
jmp
jns
into
movsl
mov
aad
fidivrl
jnp
mov
mov
fcoml
in
or
dec
mov
idivl
lcall
cwtl
dec
clc
cmpsl
jns
shlb
into
in
jbe
in
jge
fimull
xor
test
es
fisttps
mov
ret
pop
or
pusha
jecxz
subb
lret
ds
push
push
pop
fldcw
ss
je
xor
in
test
xchg
cwtl
pushf
cmpsl
ljmp
aam
push
xchg
mov
sbb
dec
push
mov
cmp
xchg
arpl
pop
cs
xchg
adc
icebp
negl
pop
mov
out
subl
shrl
mov
out
popf
shlb
in
repz
cmp
nop
inc
mov
call
jno
ret
inc
fisttpl
jae
add
shll
cltd
mov
pop
cmc
adc
stc
jg
sarb
xor
lods
les
std
dec
outsl
and
and
aam
jno
out
in
xchg
jbe
mov
jge
mov
scas
scas
test
insb
xorb
or
cs
repz
popa
pop
adc
rcl
and
enter
mov
arpl
arpl
adc
jmp
mov
mov
stc
lret
in
push
int
dec
or
mov
mov
out
mov
xchg
mov
mov
sub
inc
xchg
stos
push
jle
fisubrs
sub
mov
or
push
subb
out
mov
jl
push
jge
sub
xor
aad
or
jb
fs
iret
mov
mov
in
dec
mov
xchg
ljmp
cltd
aas
ret
shl
aas
rorb
test
inc
inc
sarl
pop
push
test
add
clc
xchg
movsl
cltd
cmp
outsl
outsl
negl
nop
lods
aad
push
push
fstps
mov
int
fidivs
mov
loope
ljmp
xchg
add
jge
and
daa
icebp
cwtl
xchg
cmpsb
lds
and
in
pop
mov
xchg
imul
cmpsb
xor
or
and
out
mov
and
jno
fwait
xlat
fnstenv
mov
sbb
scas
jno
cmp
or
sub
out
adc
je
add
inc
jnp
mov
fs
cmpsb
fisubrs
cmp
rol
xlat
stos
sbb
add
cld
fcomps
cmp
jns
cmpsl
jecxz
or
or
and
sbb
dec
add
push
out
jle
mov
shrb
inc
push
rolb
jmp
xor
cwtl
pop
cld
cli
add
pop
stos
out
call
lcall
push
mov
movsb
xor
call
add
sbb
xor
sub
les
sub
cmc
arpl
inc
loopne
xchg
xchg
ljmp
inc
pop
xor
xchg
js
or
xchg
add
pop
sti
jl
dec
xlat
jg
dec
movsb
aam
add
aam
push
xor
xchg
xchg
fdivs
or
dec
mov
cmpl
adc
data16
sbb
gs
xor
pusha
iret
maxps
aaa
stos
sub
mov
mov
arpl
mov
arpl
sub
ja
push
pushf
pcmpeqw
addr16
xor
leave
dec
aad
sarb
push
movsb
mov
dec
mov
stc
add
jb
fdivrs
leave
cmp
repz
pop
mov
icebp
rcr
pusha
sub
sahf
xor
lret
decb
loope
jl
pop
gs
lods
aas
pushf
stos
pop
jnp
into
gs
imul
je
mov
xchg
nop
jle
inc
stos
movsb
shrb
pop
mov
js
js
jmp
add
mov
mov
cmpsb
xor
ja
pop
roll
xor
xor
pop
test
dec
pushf
leave
insl
lret
add
dec
pop
js
or
add
or
test
repz
and
jg
jp
mov
mov
dec
push
cmp
and
adc
mov
sbbl
adc
lret
insb
add
dec
cmp
repnz
out
data16
xchg
lret
pop
imul
mov
jp
shlb
pusha
in
inc
or
or
xor
xchg
cmp
jnp
mov
or
mov
dec
daa
shl
cwtl
popa
pushf
repz
jl
and
push
lcall
jb
lock
lea
mov
mov
in
push
iret
loope
pop
fstpl
jno
mov
lea
test
std
mov
cmp
jl
aas
or
enter
divl
lret
and
aas
lock
fwait
adc
ficoms
pop
lods
cmp
mov
push
adc
jmp
fdivs
jge
ret
cmpsl
xchg
lahf
repnz
pop
dec
cmp
dec
inc
mov
hlt
fimull
call
mov
jmp
push
cmp
mov
ret
inc
test
xorl
and
shll
fildl
lret
out
int3
jp
pop
xchg
cltd
testl
ficomps
lods
iret
mov
inc
out
push
cmp
cmp
add
cmpsl
enter
mov
jno
lret
sbb
dec
inc
xchg
into
xor
add
or
mov
mov
or
mov
add
and
jmp
xor
imul
movsl
jns
push
std
or
aas
dec
lahf
insl
push
lock
ret
pop
jg
data16
push
bound
xlat
loopne
aaa
gs
push
lea
bound
cmp
xor
bnd
pop
sbb
negl
icebp
push
enter
shrl
jge
call
pop
sbb
cmpl
inc
loope
mov
adc
add
cmpb
mov
xor
lock
mov
int3
clc
loopne
sub
mov
xchg
movsl
hlt
rcll
iret
pop
mov
mov
pop
push
gs
sbb
push
inc
call
outsl
mov
cmpsl
gs
cmp
xchg
and
in
or
pop
ror
pop
rol
xlat
dec
pop
jne
xchg
sbb
iret
sbb
push
dec
fs
sahf
xchg
sbb
jno
daa
or
cs
cmp
mov
dec
ja
mov
pop
popf
fnstcw
dec
cmpsb
fildl
mov
daa
int3
cmp
jbe
mov
mov
lods
vpmulhw
push
xchg
xchg
xchg
fdivrs
jo
mov
nop
std
jne
js
pushf
jns
push
movsl
mov
xchg
pop
push
or
push
lds
push
jmp
inc
je
out
adc
push
dec
jg
xchg
jl
or
lret
test
adc
pop
lahf
inc
loopne
dec
jno
and
loop
imul
cli
mov
out
jb
data16
inc
mov
add
ret
ss
jb
cmp
or
mov
jno
pop
add
xchg
je
mov
into
dec
push
daa
xchg
mov
fsubs
fildl
ret
mov
sbb
xchg
gs
xchg
std
mov
mov
add
je
jl
adc
sbb
lods
and
sub
fisubs
dec
popf
cmpsb
cmp
push
xor
sub
pop
out
pushf
pop
mov
lcall
add
out
leave
dec
xchg
imul
adc
fldcw
push
push
js
mov
outsl
jg
test
rol
aaa
scas
jnp
insb
jb
xor
addr16
dec
adc
inc
or
frstor
and
xchg
in
jnp
loop
sub
popa
stos
mov
xchg
icebp
nop
jae
lcall
inc
cld
xor
lock
cld
idiv
inc
out
xchg
and
xchg
icebp
stc
pop
mull
outsl
push
xchg
cltd
daa
fmuls
sahf
lcall
into
ficoms
pop
lea
repnz
insl
pop
xor
add
enter
adc
fsubs
int
ss
call
xor
adc
xor
notl
lret
outsl
loope
lock
and
stos
imul
std
lea
dec
std
push
xchg
rolb
stos
fbld
push
adc
adc
hlt
in
rcr
pushf
sti
mov
xchg
fdivrl
stc
dec
pop
iret
adc
pop
push
inc
mov
push
xchg
xor
pop
notl
ljmp
ss
outsb
sub
clc
mov
mov
std
rcl
or
pop
and
push
fwait
xchg
movsl
cli
pusha
test
xor
mov
add
add
mov
ja,pn
roll
sbb
mov
adc
push
push
mov
jecxz
orb
xchg
jb
test
aaa
popf
out
cmp
cld
pop
filds
out
cltd
ss
fs
mov
shll
cmp
sbb
movsl
push
out
cmpsl
rcll
mov
movsb
data16
and
shrb
sub
int
mov
imul
xchg
adc
out
cmpsl
pop
inc
adc
inc
jne
adc
ficoms
mov
mov
pop
addb
sti
xchg
daa
jp
jb
jnp
clc
pop
stos
sar
pop
push
popa
outsl
mov
movl
jle
xor
lds
je
icebp
add
lods
sbbb
gs
int
jp
les
adc
push
and
cmovl
fnsave
rclb
out
pop
xor
xchg
xor
sbb
sti
mov
ficompl
jecxz
cmpsl
mov
pop
xchg
sbb
lret
jno
stc
pop
inc
inc
and
or
and
mov
pop
iretw
pop
loopne
lock
mov
jae
xor
dec
and
movsl
xor
rcr
mov
movsl
ficomps
aas
adc
loope
and
push
iret
les
mov
cmp
pop
pop
jbe
std
add
std
pop
mov
pop
push
add
js
nop
dec
ds
call
xchg
fcomps
xchg
ds
lcall
pinsrw
mov
jbe
stos
movsl
lods
clc
xchg
mov
mov
outsb
push
or
sbb
sbb
lret
push
mov
repnz
in
push
aaa
sarb
sub
data16
pusha
xor
pop
into
std
sbb
xchg
rcr
mov
in
jb
loope
pop
jbe
dec
xor
mov
or
pop
push
jle
mov
pusha
gs
mov
mov
fs
sbb
ffreep
hlt
cs
dec
cmp
divb
dec
or
xchg
push
jp
fsubrs
cmpb
jbe
add
enter
cmpsb
jno
and
int
mov
aam
decb
dec
mov
cmpsb
popf
jge
dec
cmpsb
or
fsubl
lods
std
inc
sub
jmp
jns
lea
inc
jne
jle
iret
shll
call
pop
call
dec
or
jmp
add
push
mov
mov
fimuls
sub
mov
out
test
scas
inc
jns
nop
mov
aad
or
roll
push
dec
xchg
push
jb
scas
jl
sahf
dec
hlt
outsb
add
fldl
mov
lea
add
fstpl
pop
inc
rorb
ret
push
sbb
aaa
cmp
int3
in
cmc
dec
dec
add
mov
test
mov
sbb
cs
mov
aas
pushl
dec
add
sbb
jmp
rolb
pop
adc
push
adc
cmp
sarl
mov
mov
scas
mov
inc
and
clc
adcl
orb
roll
dec
loopne
mov
push
int
js
xor
push
mov
decb
scas
jmp
sbb
push
xchg
xor
pop
rolb
push
xor
mov
jl
and
mov
xor
push
sub
imul
stos
mov
cmc
or
pop
outsl
jl
mov
shlb
jl
sarl
imull
or
jle
jbe
out
hlt
aas
loopne
push
ljmp
or
test
test
cmp
out
inc
xor
daa
and
lret
in
call
sbb
icebp
test
cmp
aad
mov
std
jo
pop
cmp
push
adc
nop
pop
add
push
add
fwait
int3
adc
gs
mov
cmp
adcb
dec
xchg
pusha
dec
xor
mov
pop
sub
jnp
pop
mov
add
loop
sbb
lret
sbb
sbb
sub
jne
pop
add
pushw
jle
loope
sub
or
inc
cmp
sarl
and
inc
out
push
scas
es
jle
mov
ret
das
inc
push
leave
subl
sub
cmp
push
ret
loop
in
int
push
adc
xchg
shlb
cmp
cmpsb
in
or
idivl
and
mov
insl
jmp
mulb
ljmp
imul
in
rcrl
mov
xlat
and
jno
sbb
push
mov
test
arpl
fimull
loopne
jcxz
insb
popa
xchg
pusha
mov
pop
pop
in
or
ret
scas
data16
aas
insl
jmp
mov
dec
or
popa
fs
mov
icebp
rcrl
in
add
out
xchg
jmp
test
jno
mov
mov
push
mov
aad
jno
fs
cwtl
jp
mov
punpckhbw
sbb
mov
subb
sbb
stc
mov
pop
roll
jne
in
out
add
pop
jne
movsl
and
int3
mov
xchg
xor
call
add
and
rcrl
or
push
push
sub
or
mov
test
mov
fmul
aas
add
xor
aad
mov
fwait
jae
pushf
aaa
es
filds
shll
ja
js
inc
mov
outsl
jge
dec
adc
cltd
fs
lcall
shr
jmp
xchg
ret
add
push
nop
and
jmp
mov
sub
xchg
loop
pop
dec
das
int3
gs
hlt
xchg
mov
test
movsl
testl
inc
push
sbbb
insb
insb
rol
add
xor
add
xchg
js
push
mov
ret
int3
cld
icebp
adcl
inc
aaa
push
rcr
clc
dec
cmpsb
std
aaa
pusha
pop
in
or
and
shl
add
insl
imul
test
lods
fld
les
jp
mov
movl
or
and
sti
lods
test
xchg
jae
data16
sahf
xchg
aad
lods
adc
jecxz
adc
mov
lea
add
xchg
mov
out
mov
flds
xor
orb
into
push
push
xchg
pop
jg
bound
mov
jo
arpl
add
arpl
hlt
movsl
or
or
test
popw
out
pop
cmpsl
cmp
fsubrp
mov
sahf
movb
sub
mov
hlt
es
in
mov
mov
fisttpll
dec
call
addr16
aam
cmp
jmp
inc
loopne
mov
mov
movb
cmp
jns
stos
cwtl
cmp
xchg
fmuls
int3
xlat
adc
sbb
lock
pop
adc
scas
adc
neg
xchg
loope
and
jge
dec
mov
sbb
std
lret
out
xchg
loop
push
sub
pop
sub
not
xor
test
movsl
movsl
mov
jns
lcall
jae
xchg
jnp
mov
imul
stos
and
es
movsl
fistps
mov
xor
gs
stos
sbb
dec
push
out
int
clc
add
xchg
ret
xor
pop
rcr
push
jg
shrb
stc
lahf
pop
inc
jo
mov
pop
mov
jge
xor
pop
outsb
dec
ret
inc
sub
outsl
push
cmpsl
cltd
push
and
mov
cmp
or
iret
pop
or
jae
mov
sti
adc
push
push
loop
lret
push
adc
xor
pop
lods
mov
int3
lods
imul
sub
push
mov
test
push
mulb
jae
sub
cld
aam
mov
inc
mov
jnp
mov
std
nop
lock
sub
int3
imul
rol
and
jge
stos
jmp
out
mov
mov
sbb
mov
cmp
inc
aas
ja
adc
and
hlt
cmpsl
aam
jo
dec
xchg
push
test
movsl
inc
inc
cmc
sbb
xor
adc
ljmp
call
xor
pushw
das
icebp
bndldx
sbb
push
pushf
xchg
std
popf
jle
inc
inc
xchg
adc
jno
push
arpl
mov
jbe
inc
mov
or
push
sbb
call
sarb
inc
subb
add
inc
jnp
adc
fneni(8087
lret
adc
in
xor
stos
cld
pop
xor
fsubr
inc
sti
roll
jle
sbb
and
mov
test
pushf
cs
add
sti
testl
adc
dec
out
jno
cmp
rcll
imul
mov
rcl
bound
cmpsl
int
mov
scas
lock
and
pop
jp
pop
mov
aaa
cs
in
cltd
mov
pop
xor
fstpt
dec
rcrb
or
lods
cmp
mov
popa
iret
pusha
lret
mov
mov
ds
mov
ret
adc
pop
sbb
mov
push
mov
test
test
adc
dec
shlb
pop
test
pop
cmp
shll
jne
sbb
ret
out
scas
ja
call
nop
in
aaa
popa
test
push
or
add
stos
mov
leave
jp
sahf
jmp
dec
xchg
fsts
cmpb
mov
loop
add
push
adc
bound
push
lret
ret
fimull
loopne
adc
rorb
mov
and
dec
mov
xor
andb
adc
mov
push
lahf
sets
pop
int
aaa
mov
xor
orb
inc
icebp
cwtl
mov
and
sbb
dec
into
push
ror
repz
mov
mov
ror
cld
push
mov
lret
jnp
xor
dec
cmpsl
out
pop
cmp
jnp
sbb
mov
mov
jns
clc
jmp
adc
cmp
or
mov
jbe
xor
leave
xchg
xchg
fstpl
lods
cli
ljmp
sub
mul
cmpb
rol
inc
xchg
lcall
xor
faddl
xchg
mov
aad
mov
mov
sub
in
jl
ljmp
loope
dec
cmp
popf
push
outsl
push
shlb
mov
dec
mov
xchg
imull
hlt
pop
pop
dec
mov
add
icebp
inc
xchg
shl
inc
adc
jae
pop
ljmp
push
push
mov
sbb
adc
push
or
imul
push
loop
mov
bound
movsl
dec
rep
aad
in
inc
test
jl
dec
test
sahf
jg
and
std
arpl
xchg
hlt
adc
aas
pop
leave
sub
inc
enter
outsl
cmp
lods
imul
jmp
stos
enter
push
nop
es
jne
push
xor
mov
jge
js
push
cmp
rcll
fwait
lock
call
pop
ret
cmp
sub
insl
sbb
or
inc
add
insb
repz
jmp
fsubrl
jo
clc
test
xor
imul
dec
aam
aad
sti
or
pop
and
push
loope
jae
call
in
mov
les
aam
adc
mov
je
cmp
pushl
push
push
xchg
lcall
test
inc
sbb
mov
int3
es
ficomps
je
movsb
ds
mov
mov
lea
inc
xor
lahf
ljmp
imul
xor
movsl
pop
mov
call
xor
std
lods
push
lds
pop
nop
lods
lods
jp
push
test
out
and
mov
or
dec
mov
in
and
lcall
mov
clc
jnp
cmp
sub
enter
dec
cld
cwtl
jl
push
pop
shr
lcall
push
inc
mov
xchg
sub
popa
inc
push
cmp
cmp
lret
int
inc
mov
xchg
mov
insb
dec
movb
and
aad
mov
sbb
mov
imul
imul
pop
mov
loop
into
push
pop
add
pop
xor
outsb
addr16
xorl
adc
test
arpl
mov
out
mov
add
pushf
xlat
test
sarb
and
fildl
mov
cld
lret
imul
mov
cld
or
fsubrp
in
push
enter
mull
mov
push
sbb
lock
mov
dec
sbb
aad
repnz
cmp
mov
adc
imul
push
jmp
pop
jmp
lret
push
in
out
je
aad
cmp
sbb
push
call
or
insb
aaa
jne
mov
adc
cmp
and
xor
bt
cmpsl
lret
jmp
push
lret
adc
test
push
xlat
sbb
iret
mov
ss
jno
ljmp
xchg
and
push
jg
mov
cmp
pop
adc
test
mov
popa
xchg
pop
outsl
jb
sbb
popa
adc
and
push
test
mov
pop
xchg
jae
xchg
xor
jmp
imul
lahf
out
mov
outsl
fdivr
cmp
xchg
fwait
outsb
dec
aad
enter
ret
xlat
cmp
xor
data16
push
mov
mov
xchg
adc
movsb
push
fsub
popf
lock
and
test
push
bound
pop
dec
sbb
in
dec
test
jo
xchg
mov
cld
adc
mov
add
push
hlt
sbb
insl
sub
inc
jbe
js
mov
hlt
and
arpl
adc
hlt
xor
push
sub
test
or
sub
inc
outsb
in
mov
out
mov
jecxz
mov
sub
pop
or
call
mov
xor
std
fwait
lods
sub
cmp
test
ret
sbb
dec
sbb
loope
add
movq
pop
repnz
hlt
lret
adcl
mov
lods
out
lods
mov
add
xchg
imulb
inc
jl
iret
sub
cmpb
cmp
push
hlt
loop
cmc
push
pop
or
xor
bnd
sbb
repz
lret
dec
pop
mov
mov
sar
stc
jae
mov
syscall
lcall
mov
inc
iret
cmp
inc
adc
sbb
push
shll
cmc
push
mov
push
inc
rorb
pusha
int3
mov
inc
pusha
or
sbb
jb
imul
xchg
push
mov
dec
ja
sbb
rol
mov
jmp
adc
aas
mov
aad
lods
scas
popa
adc
push
xchg
das
nop
jp
push
aas
cmp
jbe
xor
mov
push
cmp
sub
aas
ficoms
fdivs
pop
xchg
cmpsb
jp
mov
cmp
les
inc
fdivs
clc
and
test
xor
imul
cmpsl
stc
and
dec
lea
mov
mov
nop
sub
add
mov
inc
int
inc
pop
adc
int3
dec
mov
mov
test
gs
cmp
mov
push
xor
repz
lcall
add
aad
xchg
mov
pop
in
scas
push
insl
js
dec
je
or
lret
jg
inc
xchg
add
fnsave
call
dec
mov
push
stos
and
lea
jae
pop
arpl
lea
fs
and
movsl
mov
aam
or
mov
gs
mov
fwait
sbb
aam
imul
push
fwait
and
vpmacsdql
push
addr16
xor
gs
inc
arpl
int
mov
jnp
loop
push
add
movsl
jns
std
inc
push
ret
or
mov
call
sub
sti
mov
pop
xor
enter
je
add
bound
fld
test
pop
mov
lods
or
push
dec
jo
cwtl
roll
push
inc
mov
stc
sub
lock
xchg
je
aam
cmp
mov
or
jge
mov
in
adcb
lods
les
out
lds
mov
pop
aam
sbb
dec
ficompl
lods
addr16
movsl
add
lods
aaa
lret
mov
addb
popa
add
mull
fcomi
into
xchg
xor
dec
cmpsb
adc
rorl
dec
popa
jge
lcall
sub
jo
push
mov
int
mov
out
test
xor
aaa
pop
lods
arpl
ret
cmp
or
jp
push
stos
jge
push
and
call
stc
fidivs
les
fbld
xor
mov
mov
fbld
jecxz
inc
outsl
dec
lods
mov
pusha
or
imul
dec
gs
cmpsl
inc
repz
inc
jle
jmp
ret
mov
sbb
inc
mov
mov
push
cmp
call
inc
adc
cmp
add
and
adc
inc
mov
out
xchg
jns
sub
mov
aad
fwait
lods
push
loope
cmc
lea
push
pusha
mov
push
or
sahf
stos
xor
xor
sub
mov
scas
pop
cmpsl
in
push
xor
scas
add
pop
jmp
and
dec
insl
add
scas
inc
out
sub
sti
inc
lret
std
xchg
sub
push
xchg
adc
xchg
xchg
jbe
je
inc
dec
pop
sub
int3
dec
cmp
jne
shrb
adc
mov
pusha
stc
push
es
mov
dec
fwait
push
xlat
or
js
in
das
dec
data16
mov
jle
fldcw
fcmovbe
movl
ret
dec
cmp
or
xor
cltd
jge
lods
fs
imull
jb
jle
dec
arpl
xor
sub
idivl
push
mov
xorl
call
cmp
lds
jle
fiaddl
mov
cs
xor
pop
ror
mov
ss
push
push
cmpsl
inc
mov
subl
mov
push
ja
dec
loopne
push
lods
mov
cmp
and
jb
dec
fisttps
fstps
jnp
ljmp
and
fmuls
imul
adc
out
mov
cmpsb
push
cs
test
add
gs
movsb
push
pop
push
gs
push
sub
lcall
lock
loope
xchg
insl
fwait
dec
out
call
xchg
ds
xor
jle
dec
sbb
mov
test
push
out
stos
movswl
hlt
mov
inc
in
jmp
xchg
shll
std
mov
pushf
fbstp
jb
inc
loop
lods
xchg
sbb
inc
dec
outsb
inc
jbe
aad
shufps
in
scas
sub
jbe
pop
es
inc
mov
divb
iret
inc
push
mov
adc
call
into
jp
pushf
or
rclb
lret
inc
sbb
ja
sarb
ja
data16
ss
mov
sbb
movsl
jo
ret
popf
adc
jmp
mov
push
test
aaa
lret
inc
out
pop
icebp
mov
or
iret
push
pushf
xor
loope
fwait
sub
xor
fldl
fwait
icebp
shll
jge
mov
cmp
out
sbb
out
or
jne
fldl
hlt
adc
jp
int3
ja
push
insl
jns
iret
xchg
mov
dec
dec
mov
rolb
cmpsl
sub
addr16
add
sbb
lret
jne
popa
daa
andb
xchg
jp
jo
popf
aad
imul
jg
xor
push
inc
into
in
xchg
sub
outsb
arpl
mov
sub
fidivrs
fs
mov
mov
mov
mov
inc
ja
jns
add
lahf
mov
adc
xchg
sbb
xor
mov
and
nop
mov
inc
stc
jecxz
xchg
push
pop
mov
movsl
out
fwait
and
and
cltd
push
mov
lods
add
imul
sub
push
shrl
push
jmp
jae
les
adc
out
xor
ret
adc
cmp
movsl
push
into
shlb
rol
or
or
pop
test
xor
daa
les
mov
dec
out
pushf
jle
lret
add
mov
sbb
test
add
xor
cmovbe
icebp
inc
jge
adc
push
mov
jle
mov
cmpsb
call
lret
addb
mov
pusha
test
and
add
ret
sub
fcompl
mov
fimuls
add
mov
jmp
adc
pop
test
movsb
mov
jno
mov
push
ret
ja
bound
push
adc
jmp
in
jmp
outsl
mov
xchg
push
cmpsl
push
inc
push
leave
sub
mov
xorl
add
hlt
stos
mov
push
cmpb
lret
mov
cwtl
das
cltd
xchg
mov
aad
loope
jnp
into
jae
xchg
xor
iret
shlb
lret
mov
or
xorl
aam
popa
ss
push
xchg
sarb
pusha
inc
cs
inc
xchg
aam
rcll
jmp
pop
adc
jno
sub
out
xchg
push
add
add
mulb
repnz
push
shrb
sub
cmp
dec
push
mov
xorl
lret
outsl
dec
repnz
lahf
arpl
xchg
pop
jno
push
adc
shl
lcall
and
xchg
and
inc
inc
inc
stos
xor
lcall
xchg
dec
out
ss
xchg
scas
mov
arpl
jg
ja
mov
rcrb
dec
cmp
and
mov
mov
pop
push
ds
out
push
daa
popl
cmpsl
shll
sub
mov
mov
ja
cmp
mov
cmp
sub
pop
lret
sbb
popa
inc
pop
xchg
jbe
cmpsl
push
adc
fidivs
jmp
mov
dec
shl
stc
neg
fst
fmuls
adc
push
sbbl
mov
test
add
aam
dec
bnd
mov
aas
shl
ror
fldt
add
rcrl
test
cld
dec
push
sub
mov
je
and
out
daa
or
sbbb
pop
cmp
xchg
sub
jo
aaa
ds
xor
out
xchg
sarb
mov
insb
into
ret
repz
mov
sub
mov
dec
std
aam
scas
pop
push
xchg
out
push
pop
add
xchg
sub
inc
jecxz
addr16
push
xchg
push
dec
out
outsb
es
in
jl
mov
or
sub
push
in
sahf
imul
fs
orb
das
ljmp
add
ret
push
push
popa
sub
sub
mov
and
pushw
push
rorl
out
dec
or
cmc
xchg
adc
loopne
mov
and
or
jge
inc
push
out
xlat
enter
into
cli
adcl
lods
and
cmp
ret
enter
loope
inc
addb
outsl
mov
add
lret
pop
or
stos
add
push
add
add
jnp
test
shl
jnp
aas
test
fcomip
fdivr
popa
add
sub
cmc
jmp
sub
outsl
jmp
pop
hlt
orb
call
stc
push
pop
xchg
cld
int3
pop
xchg
repnz
jp
lcall
inc
sbb
lahf
arpl
movsl
sbb
jg
adc
dec
dec
adc
xchg
and
lods
int
mov
imul
lods
repnz
jns
and
dec
sbb
mov
popa
sub
mov
lods
arpl
jl
xchg
xlat
pop
mov
inc
sbb
test
mov
push
addr16
push
idivb
es
loopne
cmc
jns
push
mov
inc
fistpll
les
xchg
lods
push
add
cmp
or
cmp
jle
inc
outsl
jbe,pt
scas
repnz
lcall
xchg
sarb
sub
sti
xchg
mov
push
repz
jb
orl
inc
cmp
inc
pop
mov
dec
inc
jnp
pop
cmc
pop
sbb
je
test
push
je
sbb
or
mov
mov
leave
xor
dec
cltd
xor
mov
jne
jbe
scas
mov
rcl
push
pusha
mov
mov
hlt
stos
into
out
or
rep
aam
mov
insl
aam
imul
sbb
test
subl
mov
inc
loop
orl
push
push
dec
xchg
mov
push
push
jp
ret
daa
jg
xchg
mov
mov
sti
and
cmpsb
pop
lods
sbb
loope
sub
aaa
hlt
cwtl
jns
add
stos
scas
and
cmpsl
pushf
xchg
stos
sbb
mov
jbe,pn
sub
fldenv
adc
mov
inc
lahf
sub
jmp
loopne
lds
sti
pop
data16
sbb
mov
ljmp
and
and
jae
aad
mov
mov
fnsave
test
imul
pop
and
adc
mov
mov
cmp
lods
aam
aam
arpl
mov
xor
ljmp
push
cmp
dec
leave
or
inc
pop
or
test
cmp
lret
insb
sub
pop
dec
sarb
mov
push
testb
lret
mov
out
jno
insb
jg
mov
leave
lret
sub
or
mov
adc
imull
fdivl
addr16
sbb
clc
adc
lret
xchg
cmpsb
in
cltd
sbbl
mov
jno
sbb
sbb
lahf
cmpsb
xchg
out
orl
insl
sub
cld
dec
cmpsl
lret
xchg
mov
imulb
idivl
imul
aaa
or
aad
into
idiv
popa
mov
adc
out
inc
test
jb
lret
and
fldt
ret
es
mov
out
xor
inc
incl
shr
jnp
les
ret
ret
in
mov
cmp
leave
insb
sub
push
pop
pop
cmp
pop
adc
adc
jmp
jmp
jl
into
pop
inc
ja
imul
lret
dec
lock
in
push
hlt
and
mov
dec
sbb
in
inc
xchg
icebp
lea
mov
push
push
dec
pop
mov
mov
mov
scas
mov
bound
in
lret
mov
in
mov
mov
into
adc
int3
out
mov
add
adcl
xchg
mov
add
sahf
mov
fimuls
roll
test
cmp
sbb
pop
push
push
dec
xlat
int3
add
loope
cmpsb
test
mov
bound
fimull
push
xor
sahf
ret
test
pop
je
jo
repnz
pop
pop
into
in
jg
mov
fdivl
popa
scas
cltd
inc
cld
fucomp
mov
loopne
xchg
icebp
inc
xor
testb
sbb
into
test
pop
es
or
sti
pusha
mov
xor
in
fsincos
pop
pop
mov
loopne
cmpl
enter
mov
add
adcb
dec
add
aad
adc
js
aam
out
adc
ret
adcl
outsl
fnsave
inc
mov
iret
mov
push
mov
pop
pushf
repz
push
mov
mov
xchg
jbe
push
add
or
lock
jg
jbe
fnstcw
jo
cmp
pop
mov
in
inc
cmp
push
ficomps
repz
imul
pop
test
fisttpll
in
cltd
xchg
cmp
cmp
cmc
ja
rcll
cli
or
cmpsl
mov
addr16
inc
out
ffreep
or
pop
test
sbb
ds
xchg
aas
pop
dec
cmpsb
lea
dec
pusha
mov
js
mov
push
movsb
and
insb
fdivrl
out
push
shl
xchg
movsb
ds
push
sub
mov
test
out
and
mov
or
movsl
clc
pop
sbb
sub
pop
inc
sbb
ds
push
adc
lcall
push
mov
icebp
mov
or
mov
or
push
jnp
and
and
xor
push
pop
lcall
sub
andl
jmp
stc
mov
imul
jmp
or
fs
xchg
or
xor
push
sub
call
inc
and
in
inc
sbb
and
dec
inc
cmpsl
xor
pop
and
aas
adc
jb
or
push
je
sbb
mov
cmp
dec
mov
jae
add
pushf
dec
ret
mov
jg
inc
leave
mov
cs
xchg
decb
jg
outsl
sub
gs
xchg
dec
and
mov
test
in
or
fistpll
fmull
lret
std
cmp
loope
lods
andl
xchg
push
notl
js
pop
xor
movsb
fisubs
mov
pushf
test
mov
dec
stc
push
push
mov
jge
dec
out
scas
stos
fsts
loopne
jae
mov
lret
lret
sub
sbb
or
adc
cmp
jl
ror
add
subl
xor
cmpsl
sti
ffree
and
pop
mov
or
push
jb
mov
cmp
xchg
and
stos
dec
into
popa
add
in
xor
dec
into
fisubs
cmpsb
loopne
adc
rorl
inc
and
stc
in
cmp
xor
adc
je
aad
fcomi
test
loopne
fldl
pusha
fs
pop
lret
mov
mov
mov
jne
data16
adc
out
mov
pop
decb
popf
mov
jle
popa
lds
das
cmpsb
and
pop
adc
pop
ljmp
cld
push
jp
xchg
or
adc
scas
insl
cli
mov
dec
push
repnz
push
push
stos
mov
loop
pushf
add
pop
mov
mov
or
mov
xchg
fnsave
pop
pop
mov
sbb
lock
aam
pushf
mov
jae
and
imul
add
adc
xchg
jmp
pop
xor
jbe
xor
ficomps
lods
rol
inc
add
xor
add
inc
dec
lods
test
mov
and
sub
int
bound
cmc
push
push
clc
stos
pop
repz
das
ja
dec
test
idiv
stos
mov
inc
in
cli
roll
jg
leave
mov
pop
xchg
into
out
mov
mov
adc
or
sub
mov
insb
cmp
dec
push
push
cmc
jle
mov
idivl
arpl
inc
sub
pop
push
pop
insb
inc
jb
idivb
push
sub
popf
dec
push
or
das
sbb
mul
popl
dec
jns
stc
imul
bound
add
lret
fsubl
dec
mov
mov
mov
iret
shr
icebp
into
jp
and
sbb
dec
sbb
adc
inc
movb
shlb
roll
mov
out
arpl
cmp
mov
popa
dec
inc
testb
and
icebp
mov
aaa
or
dec
pop
lock
aas
out
xchg
pusha
lcall
clc
out
sbb
lret
movsb
inc
mov
pop
inc
and
inc
pushf
push
mov
mov
es
pop
lods
out
or
inc
mov
push
sbb
pop
sbb
add
lea
push
stos
push
mov
pop
das
jo
adcl
xorb
dec
dec
ret
rcrl
and
fnstsw
xor
arpl
xchg
cmp
icebp
and
adc
jbe
pop
loope
lea
fisttps
push
out
fs
jne
sbb
cmpsl
add
fisttpll
mov
dec
xor
loope
cmp
loopne
sub
mov
mov
jmp
stc
xor
cmpsb
je
out
fadd
xchg
mov
jns
fcompl
add
pop
mov
or
in
movl
int
pop
fwait
nop
inc
movsb
rcrb
repz
push
negl
pushf
dec
jno
add
sbb
insl
dec
imul
filds
shl
movsl
mov
mov
cmpsl
sti
rcrb
cmpsb
mov
inc
push
xchg
gs
add
es
inc
push
loopne
xor
lock
pop
jl
mov
test
sub
icebp
cmc
inc
mov
aad
xchg
repz
dec
push
repz
testb
pop
mov
or
mov
pop
into
fstl
aad
sub
jecxz,pn
jecxz
or
hlt
lods
xor
sbb
mov
movsl
inc
dec
mov
mov
out
hlt
mov
and
lret
daa
sbbl
das
mov
lea
stos
or
sub
xlat
std
cmp
nop
sbb
pop
je
sbb
cmp
xchg
cld
xorl
dec
sub
sub
stos
hlt
lods
mov
xchg
dec
push
bound
popa
jg
decb
fisttpl
sarb
pop
xor
dec
push
add
cltd
add
mov
inc
inc
jns
je
jmp
push
stos
decl
imul
and
inc
arpl
mov
mov
xchg
dec
inc
sub
ret
negl
push
test
mov
nop
cmp
pusha
adc
push
int
jmp
pop
aaa
stc
xor
fs
or
adc
enter
insl
fs
push
xchg
rcr
cmp
shlb
jo
inc
nop
mov
lods
lock
sbb
fstpl
xor
repz
push
in
adc
repz
icebp
pushf
das
cmp
test
addl
shrl
lods
xchg
jg
lahf
lods
adcl
mov
dec
sbb
xor
mov
mov
mov
out
stos
loopne
popf
out
lret
add
ljmp
inc
mov
stos
dec
addr16
add
xchg
mov
jae
inc
cmp
jo
icebp
mov
out
cmpsl
aad
dec
lds
xchg
mov
or
popf
fwait
dec
xor
in
in
pop
lods
cmp
push
dec
pop
mov
xchg
je
mov
addr16
xchg
repz
pop
insl
cmp
mov
jns
ficomps
or
or
lock
les
mov
fisubrl
enter
imul
sbb
push
pop
pop
bound
pop
add
cmp
mov
out
jnp
cltd
flds
ret
cmc
mov
pop
xchg
adc
jb
inc
sti
mov
push
xchg
fsubp
add
jp
clc
fs
repnz
int
stc
sbb
fisubl
shlb
inc
lods
xchg
xor
jae
push
pusha
fisubl
jg
mov
test
sbb
int3
sub
out
sub
fmuls
mov
das
mov
inc
jge
jg
cltd
pusha
and
divb
mov
movsl
out
cwtl
sbbl
aaa
and
repnz
push
fs
push
aaa
or
adc
dec
sub
mov
ja
fmul
mov
sti
xchg
bswap
push
rorl
mov
push
push
sub
movsl
push
jo
sub
xchg
loop
fadds
outsl
gs
icebp
rclb
dec
sub
or
mov
shl
mov
jecxz
sub
or
mov
int3
aaa
dec
out
or
daa
dec
pusha
dec
pop
xchg
in
testb
inc
mov
push
ret
adc
dec
repnz
xor
sbb
sbb
cwtl
mov
js
loope
je
push
xchg
inc
push
decb
cli
add
add
add
and
mov
ficomps
pop
mov
ret
movsl
adc
aad
pop
xlat
push
les
hlt
pop
arpl
sbbb
adc
imul
mov
sbb
nop
mov
fstps
popa
pushw
sub
sahf
aad
cmp
nop
jp
fidivs
xlat
aad
out
mov
incl
dec
fwait
inc
fnsave
popf
mov
mov
pop
mov
cmp
int
outsb
das
xor
jae
repz
or
xchg
or
nop
and
jmp
pop
mov
add
cs
pop
cmp
cmp
nop
mov
xchg
xchg
pushf
ret
fucomi
nop
ret
shll
aad
test
xlat
ss
jl
dec
in
push
mov
mov
add
out
add
mov
lret
and
fnstenv
nop
xchg
add
rcrb
dec
in
or
pop
loopne
add
jb
and
xchg
scas
hlt
pop
mov
sbb
aam
pop
fimull
cmp
jo
fldt
fldl2e
cmc
pop
gs
xorl
mov
xchg
adc
sub
mov
popf
jmp
mov
in
in
movsl
sub
sub
mov
push
sahf
int
cmc
outsb
mov
xor
push
xchg
or
inc
adcb
pop
int
test
cs
popa
xchg
xchg
fs
or
pop
ror
int
xlat
repz
outsl
or
rclb
lea
dec
mov
ror
mov
mulb
mov
and
mov
out
dec
dec
aaa
jl
hlt
lea
out
jbe,pn
sub
arpl
sub
pop
adc
pop
js
nop
testb
rcr
les
outsl
cmp
ret
jmp
mov
ds
out
cmp
outsl
push
enter
sbb
cmc
movnti
adc
or
mov
cmp
repnz
push
mov
mov
xor
out
dec
std
orl
xlat
cld
mov
mov
test
adcl
scas
jmp
clc
lods
adc
data16
fisubs
sarb
sbb
ja
and
xor
scas
dec
out
xchg
sub
insb
sub
xor
fbstp
cld
enter
hlt
push
ljmp
out
or
cmp
iret
lret
lock
xchg
repnz
inc
pop
xchg
test
aaa
scas
xchg
adc
and
sub
enter
add
ja
jle
push
xchg
push
mov
hlt
sub
inc
xor
mov
or
sub
jns
push
push
ljmp
xor
lea
inc
inc
xor
outsb
sbb
mov
push
psrlq
push
cmp
mov
aam
inc
inc
push
adc
cld
mov
ss
mov
rclb
mov
push
nopl
inc
dec
inc
dec
mov
push
mov
in
inc
dec
sti
pop
imul
ljmp
jecxz
inc
movsl
repnz
inc
repz
push
inc
adc
lahf
pop
jl
jl
pop
jl
test
mov
sahf
daa
cmpsb
push
xor
fistl
push
push
mov
into
es
adcl
fiadds
cmpsl
in
ljmp
ss
xchg
arpl
lods
sub
mov
jo
mov
push
jmp
dec
fcoml
aad
shll
adcb
xchg
sbb
lds
stos
add
inc
loopne
pop
rorl
xor
inc
cwtl
lods
lret
xchg
push
scas
and
sub
jecxz
mov
lods
or
push
cmp
mov
movsl
es
lods
repnz
leave
pop
jns
fsubs
xchg
loopne
sahf
mov
xchg
xchg
repnz
subb
mulb
pop
js
pop
arpl
xor
roll
sti
jno
lock
push
cwtl
in
dec
out
jno
xchg
jbe
xor
or
enter
arpl
dec
sarl
pop
lcall
daa
lret
push
push
into
or
mov
or
rcrb
pop
lcall
addr16
lods
sub
fwait
xchg
sarl
cmpsl
and
mov
or
mov
loopne
sub
in
mov
icebp
xor
test
mov
push
cmc
pop
dec
or
shll
cwtl
sub
mov
cmpsb
repz
add
ljmp
rcr
jmp
cmp
cltd
lret
add
sahf
nop
dec
jno
pop
imul
in
cmp
sahf
push
adc
sub
cmpsl
pusha
jae
lahf
bound
cmp
pusha
lock
popf
pop
mov
fucomi
dec
dec
mov
push
les
fnstenv
int3
push
ds
xor
scas
insb
test
leave
mov
out
lea
testb
cmp
sbb
jne
xchg
cltd
pusha
push
bound
push
filds
xsavec
out
mov
and
adc
sub
cmp
ret
in
push
clc
loopne
in
bound
lods
mov
ja
xchg
pop
cmpsl
das
or
rolb
adc
sbb
loope
ljmp
sbb
sub
pop
nop
movb
sbb
jl
js
xor
gs
lods
push
jae
add
decl
mov
loope
pop
ja
imul
or
mov
fldcw
mov
into
xchg
aaa
xchg
sbb
pop
stos
pop
sbb
add
in
mov
pop
pop
test
enter
pop
scas
sub
fldenv
push
or
mov
cmp
jne
mov
das
addr16
mov
je
cmp
pop
cmpsb
cld
xchg
aam
and
sub
repz
xor
pop
pop
sbb
mov
les
aam
adc
xchg
cs
clc
test
mov
shrb
pop
dec
jbe
outsl
gs
dec
inc
adc
and
gs
and
cmp
fadd
in
pop
sbb
pop
std
sarl
adc
xchg
mov
scas
dec
dec
in
pushf
push
add
scas
push
pop
je
mov
sbb
sbb
inc
stc
push
loop
icebp
out
sbbb
pop
pop
andb
inc
inc
dec
jle
adc
and
sti
cmp
jo
cli
dec
xor
sbb
ficompl
popf
xchg
push
outsl
and
inc
mov
pop
cmp
and
dec
sahf
adc
xchg
std
jmp
pop
rcr
mov
hlt
push
loopne
setp
sbb
cmp
test
pop
push
mov
outsl
sub
or
xchg
aam
imul
mov
push
call
add
jmp
mov
addr16
lret
jb
scas
aam
adc
mov
movb
jno
gs
or
jmp
or
mov
mov
ss
call
cmp
jl
dec
push
cmp
mov
xlat
inc
dec
repz
pop
adc
cmp
and
sbb
shlb
mov
test
mov
pop
inc
int
repnz
jge
and
jge
xchg
jae
subb
inc
imul
sub
push
sub
les
popa
or
jle
in
sti
xor
das
movsl
jle
mov
rolb
gs
and
sub
out
xchg
mov
addl
ret
mov
jbe
inc
sahf
insl
mov
inc
sub
jnp
call
loop
xchg
cmpsb
cmp
jmp
xchg
test
mov
ja
ljmp
jno
cmp
mov
xor
dec
je
mov
aad
aad
or
dec
inc
shrb
pop
sub
movl
in
pop
pushf
and
pusha
jne
pusha
push
scas
jl
outsb
lock
sahf
or
lods
xchg
scas
js
push
fisttps
out
adc
sarl
arpl
mov
int3
add
movsl
or
aad
mov
and
lods
jmp
clc
fwait
inc
jbe
xor
lret
repnz
stos
or
sbb
dec
xor
mov
pop
lret
shll
mov
test
cmpsb
or
sub
xchg
testl
ret
cmp
pop
sbb
ljmp
add
lcall
sbb
dec
arpl
dec
cmp
jp
rolb
fstpt
outsl
outsl
into
orl
pop
lcall
cmp
rolb
jp
lea
inc
or
push
stc
xchg
adc
inc
mov
inc
lret
or
test
daa
xchg
jae
shr
fiadds
xor
mov
and
add
and
ret
ret
adc
xor
jmp
sbb
std
mov
mov
cmc
cmp
xchg
xchg
mov
mov
adc
dec
and
insl
jg
fdivs
iret
dec
ror
mov
jl
int
loopne
ss
cmp
push
es
int
pop
pop
mov
scas
inc
dec
pop
inc
or
test
notl
iret
rcr
sahf
aam
push
rorb
in
cli
mov
daa
add
imul
sub
data16
subl
int3
lds
cmp
into
jmp
in
es
or
ret
xor
mov
movsb
decl
or
popl
mov
pusha
jmp
pop
or
xchg
jmp
xchg
ret
mov
imul
popf
orl
out
sub
sahf
xor
lret
fadds
mov
sahf
fstps
jb
aaa
cmc
jmp
jmp
cltd
insb
dec
jge
mov
pop
insl
push
or
inc
mov
imulb
fiaddl
add
in
mov
popf
loope
pushw
cmp
fmull
dec
jno
or
dec
xor
xchg
xor
sub
or
lods
mov
dec
out
test
fists
fucomi
or
and
arpl
test
and
out
inc
pushf
daa
adc
imul
fs
push
sbb
mov
add
call
pop
dec
xor
xchg
jo
add
sahf
aaa
jg
std
and
and
pop
inc
jg
fcomps
aad
gs
push
mov
ja
ds
jl
lcall
movsb
ficompl
inc
add
adc
into
and
dec
pop
jnp
pushf
ds
imul
add
push
add
xchg
repz
sbb
clc
out
mov
movl
mov
lods
xor
xor
and
jno
pop
scas
add
cmp
mov
inc
les
out
adc
pop
mov
sbb
xor
insl
rorb
fldt
jae
jmp
cmp
es
clc
daa
add
stos
adc
inc
insb
repz
jo
rcrb
stos
fnsave
ficoml
in
and
popf
sarl
int
shrl
pop
lods
sub
or
add
dec
pop
xchg
out
dec
and
and
mov
mov
pop
add
push
sahf
jns
and
lock
xchg
lret
loopne
ret
loope
stos
insb
lock
outsb
xor
cmc
mov
jecxz
mov
fsubl
mov
xchg
aas
pop
outsb
mov
dec
sub
loopne
movsb
mov
add
popa
and
mov
xchg
daa
fidivl
mov
cwtl
daa
movsb
sti
test
cmp
lods
dec
cmp
imul
mov
pop
cmpb
dec
imul
fndisi(8087
int
rorl
add
pop
dec
imul
xchg
ss
andl
cmp
or
mov
call
cmc
xor
mov
in
cld
mov
add
ret
lods
pop
imul
xchg
and
popf
jb
call
fidivrs
cmp
xchg
pop
jmp
fcompl
jb
mov
mov
push
subb
sbb
inc
cli
cmpsb
mov
repz
mov
imul
or
je
mov
xchg
cmp
mov
cltd
call
fsubrs
rcrl
push
jp,pt
stc
pop
push
dec
mov
xorl
push
mov
test
cwtl
adc
xchg
fst
xchg
jae
cld
pop
fimull
adc
aad
pop
orb
jmp
mov
icebp
pop
and
push
sbb
popa
rclb
repnz
sbb
adc
out
test
mov
mov
je
fldl
in
inc
out
in
sbb
or
mov
addb
pop
mov
loop
fstps
fcomps
push
outsl
dec
and
mov
xchg
dec
out
mov
pop
shrb
shll
movsb
pop
push
pop
add
aam
sub
scas
mov
fs
imul
adc
sub
mov
scas
aaa
mov
es
pop
add
or
cmpsb
push
test
push
shrb
icebp
cltd
jmp
cld
in
mov
xor
test
jmp
lcall
test
clc
lds
jnp
aas
inc
sbb
loopne
jecxz
mov
or
enter
cld
push
popf
lods
mov
enter
fistpl
lods
insl
icebp
xorl
cmp
hlt
mov
decl
rcll
pop
pop
dec
and
lcall
addr16
cmp
dec
pusha
push
sbb
sahf
adc
shrb
jns
dec
jg
cmpsl
inc
repnz
imul
repnz
inc
sbb
mov
push
mov
xor
lret
sub
mov
call
bnd
jnp
or
xchg
out
jne
xchg
add
adc
std
mov
test
std
push
xchg
nop
mov
nop
loop
mov
cli
xchg
insb
lea
jne
cmp
lret
addr16
lret
sub
inc
add
push
pushf
jp
lods
and
dec
mov
pop
loopne
xor
or
mov
pop
mov
test
jbe
mov
sub
fs
in
into
mov
sub
add
rorl
push
push
loopne
lock
push
mov
cwtl
cmp
and
mov
cli
xchg
dec
and
sub
je
dec
in
jg
xchg
sbb
inc
pop
lret
jns
sahf
lret
outsl
inc
mov
imul
fwait
subl
and
ror
cmp
aas
push
sub
cmc
test
sub
push
adc
mov
push
pop
mov
insl
cmc
mov
dec
add
dec
out
adc
push
dec
mov
xor
jbe
push
add
popf
dec
es
dec
mov
push
test
mov
inc
aam
popl
aad
sbb
in
push
subb
je
in
mov
sahf
hlt
in
fcoml
mov
inc
daa
or
push
mov
dec
jno
cmp
mov
movsl
mov
push
std
xlat
xchg
fistpl
and
dec
lcall
inc
ss
inc
sub
mov
clc
xor
sbb
or
or
pushf
sbb
cmp
xchg
stc
adc
cld
dec
outsb
jmp
mov
inc
inc
dec
call
dec
add
mov
jle
cwtl
mov
popf
sbb
lea
inc
push
dec
inc
std
jne
cmp
add
sbb
add
pop
ret
xchg
out
mov
mov
dec
das
out
mov
and
lock
sbb
mov
push
movsl
mov
test
frstor
sbb
cmp
jmp
mov
mov
je
in
mov
sbb
mov
pop
sbb
into
push
xorl
testl
aam
cwtl
lds
xchg
aas
mov
mov
or
xchg
mov
and
pop
ret
popf
outsb
bound
movsl
aad
psubw
xchg
sbb
aam
cltd
mov
xor
fs
push
xchg
outsb
fsubp
in
mov
loopne
dec
sbb
imul
mov
ljmp
outsl
sahf
out
out
cmp
add
sti
jo
push
sub
jle
scas
lock
push
jl
dec
xor
dec
leave
imul
cmp
test
and
xor
cs
jne
daa
pop
dec
push
sbb
xorb
dec
roll
mov
xor
and
adc
repnz
cmp
lret
inc
pop
or
adc
insl
pop
fnstenv
push
pop
clc
iret
out
adc
pop
ds
lds
arpl
jp
into
scas
jbe
inc
out
xchg
push
or
jl
out
test
cwtl
push
lcall
and
adc
in
sbb
jo
lcall
pop
sub
add
dec
add
push
jecxz
jle
data16
test
xchg
jb
dec
aas
jp
shrb
das
adc
rcrb
out
inc
aas
cmp
pop
int3
clc
cmp
xor
imul
or
loop
push
and
sti
jl
daa
mov
and
cmp
or
xlat
in
inc
or
inc
and
and
adc
pop
sub
aas
jecxz
mov
hlt
aaa
int3
mov
or
fstp
mov
test
sub
push
adc
mov
cmpl
bound
jo
cwtl
gs
loop
jecxz
cltd
pop
ljmp
mov
call
arpl
ss
lret
clc
rorl
pop
mov
xor
roll
jp
iret
scas
ss
jbe
xor
nop
dec
pop
and
ja
mov
lea
stos
dec
xchg
scas
sbb
dec
mov
stos
repnz
leave
out
aas
xchg
lods
pop
jns
mov
fld
fadds
or
pop
cs
mov
mov
fwait
xchg
jo
lea
into
jp
lods
sbb
cli
inc
sahf
lock
movsb
rorb
jmp
mov
repz
call
add
leave
pop
or
pop
test
aas
mov
push
inc
mov
dec
mov
or
filds
sub
fsts
mov
pop
hlt
xor
mov
mull
jle
out
and
mov
shlb
inc
jle
inc
out
scas
or
stos
aad
sahf
jge
dec
test
mov
repnz
in
jmp
out
nop
pop
mov
jp
data16
push
sbb
pop
sbb
dec
adc
jg
mov
mov
and
inc
jo
lret
cmp
push
mov
or
cmp
mov
shll
ss
cmpsl
loope
or
mov
push
jl
mov
mov
sbb
push
sahf
jbe
dec
lds
daa
or
add
mov
inc
jae
sahf
hlt
imul
rcrb
mov
fidivrl
cmp
push
cltd
xchg
inc
mov
icebp
and
inc
scas
push
outsb
imul
movsb
frstor
jb
ret
push
cmp
lods
lods
ret
inc
pop
fldt
mov
add
adc
cmc
mov
out
sub
and
add
enter
ret
fsubs
inc
mov
cmp
or
mov
loope
push
inc
popf
int
mov
xchg
cmp
int3
in
ja
fmuls
dec
imul
and
mov
jge
add
mov
mov
dec
fsin
repz
push
rorb
or
insb
mov
sub
fistps
and
sbb
and
mov
lds
aas
sti
clc
iret
test
rcrl
jl
jbe
lret
adc
jp
ja
push
mov
xchg
cs
mov
jbe
push
lods
sahf
inc
jmp
lea
jge
push
lret
add
je
mov
mov
sbb
cwtl
cld
xchg
fnstsw
inc
adc
sbb
pop
mov
mov
inc
add
jge
push
mov
pop
out
xchg
sbb
pop
mov
test
aad
mov
jns
lret
gs
iret
enter
loopne
call
xor
ljmp
outsl
cmpsb
ds
ljmp
cmp
pop
enter
std
pop
mov
clc
stos
imul
pusha
add
inc
test
sbb
sub
lods
push
lcall
into
outsl
and
mov
mov
push
sahf
mov
jecxz
cmpsb
rcr
sub
pop
je
mov
xchg
adc
sub
mov
cmp
outsb
mov
push
subb
ljmp
inc
ds
and
jbe
cld
gs
mov
cmp
cmpsl
xchg
push
loop
test
jbe
inc
mov
and
stos
repz
pusha
push
sar
mov
jp
sub
mov
into
shl
in
imul
mov
cs
mov
mov
int
xchg
lds
dec
aad
cmp
movmskps
popf
nop
arpl
cmp
mov
xor
out
mov
leave
call
shl
dec
sub
mov
xchg
in
mov
sbb
shl
mov
into
push
push
and
lods
pop
adc
push
and
adc
pop
andb
bnd
cs
push
sti
fimuls
xchg
inc
inc
aas
ss
jnp
daa
xor
jp
mov
arpl
inc
sub
sbb
adc
insl
out
add
out
mov
jg
daa
sbb
mov
push
aad
dec
fwait
mov
fsubp
push
add
pop
cwtl
pop
in
mov
adc
xchg
stos
addl
cld
arpl
movsl
cmp
push
jns
mov
xchg
or
sbb
out
sbb
mov
jecxz
mov
leave
push
xchg
jle
pop
in
mov
repz
xlat
or
xor
jns
cmp
sub
shrb
pop
in
push
addr16
xor
add
popa
push
cmpsb
jae
sub
stos
add
sbb
call
inc
mov
dec
adc
mov
sub
lea
rcrb
es
xchg
pop
xor
lock
pop
cmc
xchg
into
adc
pushf
and
mov
cmp
and
repz
int
xchg
jbe
lds
adc
add
or
call
and
movsb
cli
popa
les
imul
mov
test
dec
mov
push
add
push
and
jns
cmp
data16
repnz
outsb
popa
or
rcll
lods
stos
add
jae
mull
or
out
repnz
sbbl
daa
lret
decl
dec
ljmp
jl
loope
or
cmp
push
mov
pop
pop
fs
lds
push
push
sbb
mov
mov
mov
dec
scas
jge
mov
test
dec
jge
je
enter
ror
les
add
mov
mov
aas
or
ljmp
nop
mov
iret
fldcw
add
movsl
jno
or
shl
pop
dec
es
sbb
pop
out
xor
xchg
jl
lret
les
pop
pop
sub
daa
jp
inc
adc
movl
aam
test
jge
fdivr
and
or
add
mov
jecxz
sub
js
roll
pop
mov
dec
mov
mov
insb
test
shr
pop
in
mov
sti
cld
add
cmp
pop
sarl
sub
inc
add
cmc
cmp
mov
or
daa
sbb
pusha
bound
mov
jae
dec
lret
jae
sub
in
mov
jle
dec
mov
mov
mov
add
or
ja
pop
sahf
in
mov
sbb
ja
dec
out
jno
sub
es
sub
outsb
cli
xor
jbe
mov
test
push
pop
pop
pop
mov
mov
sbb
ret
aam
js
fs
pop
sub
hlt
and
dec
cmp
popf
lock
inc
cs
out
jp
push
repnz
inc
mov
outsb
fs
jp
mov
mov
in
jmp
mov
mov
das
in
inc
lcall
mov
idivb
out
leave
or
cmp
es
inc
lret
mov
jbe
repz
cltd
sub
andb
outsl
fldenv
sbb
cmp
in
push
inc
loopne
ss
xchg
xchg
pusha
ret
push
scas
leave
mul
and
loop
lods
int3
mov
fs
inc
xor
rcll
lahf
test
pusha
dec
jle
shrb
leave
ljmp
jmp
data16
loope
stos
shrb
movsl
aad
scas
sub
and
push
cltd
out
adc
fdivl
stos
mov
pop
aaa
jp
in
or
cmp
dec
jno
sub
testl
xchg
sbb
and
push
push
pop
dec
cwtl
sbb
movb
jp
cmc
adc
mov
jnp
int
sti
cmp
xlat
aas
movsb
push
sub
mov
iret
mov
pop
jns
imul
or
mov
bound
xchg
sbb
lret
and
xchg
jle
mov
jge
lcall
mov
mov
shlb
pop
cmc
push
xchg
pop
ja
mov
lcall
add
sahf
lds
je
xor
repz
pop
decl
mov
lret
popf
fstpl
push
in
xchg
lea
pop
mov
lcall
data16
jo
push
mov
fidivl
cmp
repz
fists
push
mov
fisubrl
xor
stos
xlat
xor
push
mov
sub
leave
mov
in
sub
imul
jnp
pop
push
in
pop
dec
pop
testb
dec
pushf
inc
cmpsl
fdivs
sub
add
sub
lret
jecxz
adc
xchg
fwait
enter
inc
sbb
mov
mov
adcb
ds
pop
cmp
ljmp
jmp
mov
and
aad
mov
jge
ss
cld
push
out
mov
aas
icebp
andb
popf
cmpsl
pop
pushf
jle
mov
xor
dec
cli
mov
shrb
outsb
pop
arpl
pusha
mov
cmp
pusha
aaa
jle
sub
jno
shrl
shrb
in
test
and
add
adc
xor
mov
rcrb
cmp
lods
pusha
pop
ficompl
xor
jecxz
dec
inc
cmpb
popl
icebp
inc
lock
mov
inc
jle
out
sbb
js
loop
add
and
mov
mov
mov
mov
sub
cmp
outsb
aas
add
and
in
xchg
push
or
imul
divb
xchg
mov
hlt
sbb
xor
into
test
cli
dec
lods
int
pop
lods
fisttps
jp
imul
loopne
out
loope
cmp
gs
mov
lret
mov
or
fists
inc
repnz
xchg
mov
aad
cmpsb
mov
cmc
mov
sub
ror
sub
adc
inc
add
lods
mov
out
call
pop
and
pop
add
jbe
mov
sbb
loopne
mov
fildll
mov
movsb
stc
or
mov
cld
mov
mov
and
jg
fs
dec
jmp
or
bound
cmp
ljmp
pushf
in
mov
cmove
push
adc
jo
aas
and
lcall
inc
jg
xchg
mov
sub
lcall
and
mov
test
sbb
mov
xor
jno
cmpsl
pop
sub
outsl
loopne
rcrb
ds
dec
addr16
out
imul
mov
or
mov
out
or
xor
gs
mov
pusha
sbbb
sub
scas
dec
test
orl
push
aam
xchg
add
and
shrl
xchg
roll
jb
pop
pusha
push
dec
mov
fnstenv
dec
ret
faddl
in
aaa
shrl
test
mov
arpl
call
mov
mov
iret
inc
push
pop
cs
nop
mov
adc
or
lahf
xchg
inc
lea
pop
and
dec
cmc
inc
dec
daa
add
cmp
or
pop
test
or
mov
jbe
std
aaa
fbld
sbb
add
adc
lahf
pop
in
jmp
jno
iret
int3
or
je
adc
stos
and
test
sub
ret
jp
es
fs
push
fistpll
mov
lahf
cld
cmp
push
call
cld
inc
sbb
incb
xchg
pop
and
fwait
mov
inc
out
push
imul
mov
out
js
pop
jnp
jmp
rcr
fwait
adc
push
loope
add
mov
iret
std
rclb
fmuls
xchg
xchg
rorb
cmp
or
sti
imul
mov
rcrb
sub
aam
je
std
ret
xor
or
dec
add
aaa
enter
xchg
mov
insb
lret
mov
cli
adc
mov
push
in
push
jnp
cwtl
or
xor
movsb
fsubs
pop
push
rorl
and
inc
xor
xchg
icebp
pop
call
nop
adc
lock
pop
xlat
sbb
push
cmc
stos
in
popw
repnz
jle
cmc
or
mov
shrl
dec
lods
mov
rcl
pop
idiv
mov
xor
inc
jno
outsb
jae
lret
mov
jns
rclb
sub
mov
cmp
sub
cmp
inc
push
mov
mov
aas
xor
insl
cmpsl
lea
mov
aaa
aad
jbe
and
shr
add
movsl
loope
ror
int3
inc
pop
pop
int
popf
xor
movsl
in
jne
add
mov
lods
mov
push
mov
out
push
mov
nop
cmpsb
sahf
mov
fwait
pop
cmc
push
push
insb
cmp
mov
inc
int3
fisttps
daa
adc
imul
fst
dec
add
mov
cs
or
sbb
nop
daa
mov
cmp
insl
addb
int
mov
xor
add
fsts
and
dec
push
xchg
dec
fildll
jl
sbb
dec
adc
loope
jmp
in
sub
ja
ss
add
mov
in
inc
xchg
out
jg
sbb
ds
push
int
push
adc
xchg
mov
movsl
mov
xlat
and
imul
push
pop
mov
movsl
pop
fldt
popf
or
lret
clc
shrb
popf
cmpsb
sub
xlat
mov
outsb
inc
cs
stos
jno
jmp
aad
jecxz
cld
add
push
mov
adc
mov
or
xchg
or
popf
aam
fisubrl
or
test
lret
fmulp
xor
dec
scas
stos
data16
fbstp
xor
mov
or
rcrl
sbb
push
adc
add
jbe
push
insb
test
bound
mov
mov
pop
sbb
scas
inc
bound
mov
lods
mov
lods
pop
and
jle
xor
shlb
test
into
shll
add
mull
das
xor
mov
jne
das
das
cs
xor
icebp
cmpsl
call
jbe
mov
mov
pop
js
add
or
dec
jge
jle
push
daa
movsb
lock
sarl
insb
push
jne
add
stos
fsubrs
int
jge
sub
rolb
add
call
lds
les
insb
out
push
xchg
nop
inc
flds
pop
add
push
fldl
movsl
aaa
mov
jns
push
or
jb
or
jns
push
adc
fbstp
jle
fcoms
ficoml
insl
data16
sub
fimull
add
xchg
cwtl
pop
add
in
mov
loopne
and
fnstsw
in
dec
push
insl
xchg
popa
sbb
jbe
ret
in
imul
fwait
lods
call
imul
lock
rclb
leave
ds
lock
std
ret
stc
add
lret
mov
mov
lods
ljmp
mov
mov
into
sub
dec
push
pop
mov
mov
ljmp
push
and
xchg
data16
or
and
testl
add
cmpsl
hlt
clc
lret
cmp
and
fnstcw
push
mov
repz
stos
sbb
lods
gs
and
aaa
jo
add
ss
jb
int
xchg
lahf
jno
jns
fwait
test
xor
inc
fidivs
fdivrl
movb
pusha
inc
adc
dec
cli
jecxz
and
div
push
and
adc
adc
cli
imul
jnp
lcall
inc
in
xchg
in
cwtl
push
sbb
sub
mov
jp
xchg
test
cli
testl
ss
and
jae
add
xchg
push
mov
subb
rclb
jbe
inc
xor
dec
aad
aad
scas
inc
scas
movsl
aad
sbb
sbb
mov
or
push
cmp
inc
mov
cmp
jl
cmc
decb
dec
out
nop
push
push
xchg
iret
aam
sbbb
rcrl
loope
lret
fsubl
mov
adc
fldt
mov
mov
int3
mov
fwait
mov
jle
shlb
mov
lahf
mov
jle
arpl
and
mov
sbb
imul
lds
ret
movsl
xchg
in
shll
jne
push
xor
leave
jmp
hlt
fistps
int3
sub
dec
aad
repz
popa
fnsave
fimuls
jmp
cmp
pusha
leave
add
dec
shlb
sarb
neg
lods
mov
cmpsb
mov
mov
cmp
lahf
int3
aad
xor
xchg
jp
and
or
inc
notl
xorb
jge
xchg
inc
cmp
push
lea
and
and
out
mov
and
popa
or
dec
xchg
pop
bound
mov
or
out
sti
insb
mov
push
dec
pop
mov
insb
mulb
xor
mov
clc
cmp
rorl
data16
iret
sahf
enter
in
sti
push
sti
xchg
adc
repnz
in
daa
mov
lods
stos
das
std
sbb
pop
ficoms
xor
push
dec
push
stos
dec
push
or
shrb
dec
xchg
test
push
dec
sub
cli
inc
lret
mov
cmpsb
popa
ds
pop
iret
icebp
int3
lret
jmp
js
repnz
xchg
mov
push
pop
mov
pop
add
fwait
aaa
mov
inc
push
sub
inc
mov
pminub
sbb
mov
ret
jmp
inc
xchg
mov
ffree
subl
lods
jmp
mov
xor
fsubl
pop
fwait
in
cmp
nop
aaa
xor
loopne
in
push
or
movsb
shrl
ss
pop
xchg
xchg
enter
add
inc
adc
jne
das
fmull
add
movsb
scas
mov
push
mov
xchg
pop
subl
test
iret
cwtl
or
mov
xchg
enter
or
jg
or
sub
test
pop
lret
sub
sahf
repnz
in
divb
lock
shll
mov
mov
pop
loopne
lods
addr16
pop
dec
hlt
pop
dec
mov
into
sbb
inc
adc
sbb
add
and
lret
insl
sbbl
push
test
call
rolb
dec
in
cmp
or
dec
popf
add
push
fwait
cmpsl
xor
jp
int
mov
movsl
aam
or
inc
call
pop
cmp
shl
sbb
mov
jo
stc
xchg
sbbb
and
rolb
and
lods
inc
pop
inc
mov
ret
in
cltd
outsl
hlt
mov
cs
fstl
inc
sbb
cs
push
subl
xchg
popf
adc
arpl
sub
sub
mov
enter
and
test
xchg
lock
sub
inc
cmp
xor
mov
fists
movsb
push
test
imul
adc
jns
insl
test
movsl
or
lds
les
and
add
mov
jge
mov
dec
cmp
sarb
out
call
sub
sub
sub
data16
pusha
fld
cmp
push
stos
aaa
stos
push
pop
aad
int3
pop
sbb
push
push
lods
adc
xlat
jbe
inc
fadds
sarb
pop
repz
daa
push
mov
aad
flds
daa
xor
pop
jb
sarl
push
loop
mov
adc
xor
mov
push
or
aad
add
xchg
push
cwtl
jg
jmp
add
jg
and
jmp
dec
cmp
shr
hlt
test
add
inc
jne
xchg
int3
sarb
cmp
xor
test
mov
or
adc
sub
push
sbb
mov
or
add
xchg
xchg
fdivrs
push
xor
add
add
fcoms
sbb
test
icebp
mov
imul
icebp
outsl
push
push
aam
and
mov
int
pop
cs
lea
mov
cltd
sub
or
lds
out
in
mov
loopne
sahf
push
inc
push
cwtl
lods
push
sbb
cltd
add
jg
adc
jbe
xchg
xor
inc
push
es
fsincos
fcom
divl
push
and
clc
shll
inc
es
or
pop
sarl
movsb
inc
mov
inc
rcrl
outsl
sbb
mov
dec
in
inc
or
pop
jo
push
lret
sbb
andps
mov
pop
sbb
les
addr16
xchg
adc
and
jne
pushf
dec
daa
push
negl
jne
adc
stc
pop
shl
pop
fstpt
and
cmpsl
sub
mov
and
push
push
mov
mov
popa
xchg
jo
sub
or
xchg
mov
jns
pop
mov
addr16
les
outsb
mov
mov
and
jmp
pusha
cld
jns
test
aas
andb
lret
shlb
add
roll
push
and
shr
aaa
js
jecxz
sub
in
xchg
lods
push
repnz
add
add
shlb
sarl
mov
out
adc
test
imul
inc
inc
sbb
shrl
ret
iret
daa
cli
push
and
inc
int
mov
push
loope
pop
popa
and
pop
cli
lods
jnp
adc
inc
pop
icebp
sahf
test
out
ret
xor
mov
mov
aas
or
pusha
testb
filds
loopne
or
ljmp
mov
push
and
lods
in
out
jb
outsb
fildll
dec
fdivr
dec
repz
push
in
jb
gs
nop
xor
out
push
mov
inc
inc
ja
cmp
push
adc
mov
push
cmpsb
jecxz
jne
ret
dec
xor
dec
popf
dec
adc
or
call
loop
jge
add
mov
test
gs
aas
daa
cmp
push
adc
xor
mov
fstpl
leave
cmc
cmp
rcrl
sarl
push
mov
pop
push
jg
xor
and
jmp
xorl
out
and
insb
push
jb
jae
sbb
iret
test
test
popa
add
sub
or
sub
and
and
jb
negl
and
arpl
mov
xor
xor
jb
neg
push
shrb
test
pop
mov
jmp
push
fisttpll
repnz
cmp
xor
pop
mov
cmp
popf
jne
jg
push
jno
cpuid
inc
adc
call
js
sub
mov
add
push
test
icebp
test
out
subb
dec
sub
inc
popa
mov
dec
mov
test
stos
xor
push
and
pop
sahf
leave
enter
scas
or
ja
cmpsl
mov
xlat
add
jge
add
sub
mov
dec
mov
dec
js
cmp
decb
fdivrs
mov
dec
jns
popf
lahf
mov
fmul
insb
sbb
in
push
push
xor
xchg
decl
out
pop
pop
fisttpl
jno
push
cmpsl
add
xor
push
mov
clc
jno
lahf
jecxz
mov
je
xor
and
popa
push
dec
and
sti
icebp
sub
add
push
insl
inc
addb
fcompl
pop
lfs
sub
out
rcll
or
lcall
xlat
mov
mov
and
xor
sbb
cmpsb
xor
dec
outsl
subl
je
out
scas
inc
fsubrs
cmc
inc
icebp
fxch
movsb
shrl
cld
dec
stos
adc
add
dec
xor
mov
mov
adc
ficoms
icebp
pop
wbinvd
dec
repnz
outsb
loop
enter
push
adc
je
cmc
out
fwait
mov
sti
cmc
es
imul
loope
xlat
pop
sub
mov
pusha
dec
dec
loope
xchg
mov
addl
dec
scas
ret
js
add
push
in
pop
mov
or
shrl
push
mov
push
sbb
fld
fmull
inc
lods
repnz
clc
fsubr
mov
cld
in
mov
dec
mov
lds
ljmp
push
insb
jge
inc
sbb
xchg
cwtl
mov
leave
pop
repnz
test
inc
mov
movsl
xchg
aas
mov
jne
fcmove
outsl
loope
sub
dec
adc
sbb
sti
mov
jae
and
outsb
mov
adc
xchg
sarb
xchg
or
int
dec
es
jo
out
and
rorl
push
mov
inc
jmp
lahf
mov
push
fistpl
aam
out
iret
cmp
sarl
lds
fsts
repnz
bound
xchg
pop
movsl
out
jmp
xchg
arpl
test
not
jle
mov
mov
test
sub
outsb
pop
stc
pop
out
push
aad
jns
add
adc
decb
movsl
out
movsl
lods
in
add
fists
cld
push
shlb
fwait
pop
dec
loope
in
fs
xchg
mov
testl
cmc
xchg
lods
sbb
pop
cmpsb
test
xorb
mov
ja
inc
stos
lods
leave
fildl
in
jb
adc
aam
mov
push
inc
sbb
dec
push
xlat
inc
ja
ja
or
rol
cmpsl
lods
insl
inc
mov
xor
mov
into
add
int
mov
cli
test
or
stc
push
jecxz
shll
push
sub
pop
fildll
js
imul
add
vphaddbq
shll
movsl
push
adc
sti
bnd
push
cmp
lods
addr16
xor
cld
lcall
inc
rcrb
jl
inc
mov
jmp
add
movsb
mov
popa
sbb
xchg
icebp
push
pop
in
push
pop
test
dec
bound
cmpl
fists
pop
dec
dec
outsl
gs
sarl
aam
and
sahf
scas
rcr
sub
aas
sub
nop
or
shl
xor
stc
mov
mov
aam
ret
dec
xchg
xor
ja
or
lea
xor
mov
sbb
in
daa
add
jbe
call
sti
cltd
outsl
jg
pop
inc
int
outsb
rclb
add
xor
lods
push
or
jge
cmovp
cmp
shll
test
mov
clc
dec
mov
add
sub
aam
test
test
fs
test
mov
lock
fistpl
jle
arpl
movsl
insb
adc
adc
lret
mov
cmpsb
adc
pop
pop
jl
lcall
mov
stos
lea
pop
test
sbb
cmpb
divl
flds
ret
popf
cmpsb
jbe
fidivl
jl
jmp
shl
sub
movsl
pop
push
xlat
cmp
jbe
sbb
sbb
shrb
cmpsl
fwait
pusha
pop
fisubl
pop
mov
popa
xor
jns
iret
cmpsb
push
fstp
adc
inc
fildl
int
xor
lds
xchg
sbb
push
test
inc
sbbb
mov
loop
aaa
add
jecxz
inc
inc
sub
mov
ljmp
and
pop
aas
pushl
aas
stc
fisubrl
mov
loopne
in
xchg
sarl
fs
data16
iret
and
test
addr16
subb
cmp
jae
push
imul
adc
scas
push
adc
xor
scas
push
out
insb
push
outsl
push
stc
jecxz
mov
mov
in
adcl
xor
mov
ss
in
dec
mov
stc
pop
dec
lcall
dec
sub
sub
out
xchg
data16
xchg
adc
popa
fcoms
pop
test
xor
lds
aas
xchg
sub
std
mov
mov
mov
sbb
jmp
mov
dec
out
pop
add
xbegin
pop
negl
mov
pop
pop
stc
aad
aad
mov
repnz
int
popa
int
scas
inc
orb
adc
ljmp
lods
xchg
js
inc
pushf
in
push
sub
push
adc
in
lds
mov
pop
push
in
leave
cmpsb
cmc
mov
ljmp
lret
push
xor
xor
in
stc
pop
xlat
pushl
addb
jae
xor
mov
jo
cmp
cmpsl
adc
sbb
fsts
dec
adc
test
push
outsb
outsb
ljmp
movsb
ljmp
test
jo
jecxz
loop
mov
sub
sti
sbb
and
fiadds
push
popf
pusha
dec
outsl
lahf
daa
xchg
data16
pop
pushf
adc
inc
jecxz
mov
xchg
push
test
pop
push
bound
dec
or
sub
jp
out
mov
addl
mov
mov
mov
sub
cmp
int3
clc
cmp
fwait
push
sub
mov
imul
sub
push
les
mov
pushf
inc
aad
das
adcl
adc
arpl
mov
inc
sbb
pusha
ficoml
pop
inc
rcll
dec
gs
or
das
cmpsb
psrld
lret
xor
sahf
mov
mov
icebp
xchg
outsb
rolb
scas
out
cltd
cmp
iret
mov
mov
jecxz
inc
repnz
mov
mov
adc
out
imul
jns
jp
clc
out
shll
add
pop
jne
xchg
int3
push
jmp
ljmp
xor
jns
decb
pusha
inc
sub
sub
out
cwtl
add
into
out
iret
cmp
jns
fadds
push
aaa
imul
sub
ds
mov
sbb
sahf
lods
jb
push
mov
je
insb
js,pn
lods
sarb
roll
xchg
jae
hlt
push
inc
mov
xchg
or
mov
xchg
loope
je
jg
lods
sub
js
dec
inc
inc
test
mov
into
in
xor
push
es
leave
or
test
xchg
lcall
shlb
ss
cli
lods
push
ret
je
aaa
dec
aad
js
jge
in
ret
mov
dec
mov
push
and
and
dec
sub
and
inc
and
push
adc
push
sub
jmp
sub
cmc
jne
lret
cmp
fwait
mov
mov
mov
aad
pop
test
pushf
push
loop
loop
push
scas
and
sbb
orb
fdivrs
add
in
add
cli
add
and
fidivl
andl
lahf
and
pop
pop
mov
popf
sbb
scas
aaa
aaa
js
or
push
repz
cmp
push
into
stc
pop
or
jo
aas
or
xor
shlb
xor
scas
jb
icebp
pop
cmp
pop
test
test
add
fwait
jnp
add
js
dec
mov
mov
mov
dec
inc
xchg
inc
pop
mov
loope
pop
cmp
cmp
or
fstpl
push
xor
push
inc
mov
movsl
pop
lcall
push
xor
dec
jge
mov
lea
fisttpll
xor
leave
ficoml
mov
outsl
jbe
bnd
push
arpl
data16
push
mov
inc
loope
test
ret
testb
movsl
mov
push
mov
inc
out
and
movsl
iret
repz
push
adc
jbe
mov
mov
pop
lret
push
xor
jns
jo
cmp
push
mov
loope
lods
mov
nop
push
sahf
idivl
outsb
adc
sbb
sahf
lock
cmp
push
mov
add
stos
adc
jecxz
add
stos
pop
sub
test
popa
out
cmc
in
lret
jnp
xor
adc
pop
inc
jb
sub
sub
xchg
dec
test
fsub
loop
shlb
xchg
gs
xor
xor
xor
cmp
das
out
adc
stc
jmp
rolb
adcb
mov
and
inc
dec
fwait
out
push
or
push
xchg
sbbb
test
test
faddl
jle
out
mov
std
push
sub
bound
sahf
daa
mov
pusha
mov
out
push
pop
clc
lahf
ljmp
addr16
shlb
pop
or
fs
ficomps
mov
fs
sbb
dec
data16
mov
mov
mov
mov
jbe
jle
cmp
mov
out
mov
fdivrp
add
jns
movsl
aad
mov
stos
hlt
mov
repnz
or
testb
mov
mov
aam
add
xor
mov
mov
cmp
mov
xchg
shlb
lcall
insb
push
mov
cmp
xor
jg
push
mov
subb
scas
movsb
movsb
insb
les
sbb
stos
fs
insl
and
jo
insb
lret
test
mov
pop
lret
mov
insl
das
pop
stc
insb
dec
bound
in
sbb
and
rclb
cld
pushf
mov
push
and
hlt
xchg
andb
mov
xchg
bsf
pusha
add
ss
je
xchg
inc
ss
jge
cs
mov
mov
inc
or
push
pop
fs
jne
test
fwait
fs
out
out
mov
mov
inc
push
bound
loopne
js
pop
adc
ret
in
push
mov
iret
cmp
xchg
sub
mov
adc
cmp
mov
or
push
or
xor
push
stos
pop
jns
mov
repnz
mov
xchg
pop
rcr
out
aam
mul
pop
lret
lock
jbe
inc
push
arpl
xlat
jp
or
push
ss
movsl
push
and
fdivl
invd
rcll
mov
or
push
and
mov
cmp
push
push
pop
lds
and
dec
rep
ficompl
add
shll
dec
jmp
push
cmp
and
push
flds
dec
imul
outsb
js
in
sub
push
xor
add
mov
lret
pop
loope
hlt
jb
inc
pop
dec
mov
xchg
idiv
js
dec
mov
bound
and
push
imul
adc
inc
pop
xor
mov
nop
mov
int
sub
xor
lahf
cmp
fiaddl
dec
add
mov
dec
mov
cmp
test
and
pop
push
out
push
fadd
xor
je
pop
mov
movl
notl
push
mov
sbb
pop
hlt
daa
xor
ljmp
sahf
js
icebp
sahf
fdivrl
loopne
xchg
sub
jo
dec
xlat
push
data16
jp
stc
sbb
loop
jmp
cmpsb
stos
xchg
and
cld
inc
ss
mov
inc
call
dec
push
xchg
mov
jb
and
test
imull
xchg
nop
daa
fistl
out
cmp
sti
ret
pushf
movsb
or
scas
cs
jnp
call
scas
mov
cmp
leave
loopne
adc
push
pop
out
dec
out
fidivs
nop
aaa
stos
inc
stos
sahf
xlat
push
sti
cs
sub
mov
sbbb
jmp
pop
inc
adcl
push
shll
push
mov
push
xor
dec
scas
xchg
xchg
adc
pop
dec
imul
sbb
jb
stos
scas
pop
mov
xchg
jb
out
lods
xor
sub
into
mov
mov
fldl2e
lea
fsubl
sub
jle
sbb
hlt
ret
enter
leave
pop
cs
inc
enter
sysexit
inc
lret
mov
je
sub
jb
jl
xchg
mov
fcomps
stos
ret
cwtl
push
repnz
push
add
dec
in
mov
test
std
push
lret
inc
shr
ficomps
sbb
rorl
sbb
pop
gs
lods
dec
loope
add
lock
cmp
shrl
or
sub
add
xor
mov
iret
jmp
sti
fistpl
push
xchg
ret
xor
xor
imul
call
popf
aas
sahf
pusha
jbe
pop
rclb
sub
arpl
fidivl
outsl
jmp
loope
pushf
jg
hlt
dec
mov
push
mov
push
inc
jb
out
imul
and
sahf
popf
into
sub
sbb
or
mov
pushf
pop
mov
mov
arpl
int
arpl
jne
ja
jns
adc
pop
out
push
xlat
aam
cmpsb
imulb
stos
adc
dec
or
mov
and
mov
cltd
push
adc
and
push
leave
ret
dec
xor
sahf
mov
lahf
sbb
iret
dec
cwtl
pop
or
inc
testl
and
fistpll
and
mov
repz
out
jb
add
pop
mov
push
rclb
jecxz
aaa
lret
adc
pop
scas
ljmp
mov
decb
jg
xlat
jmp
xchg
sub
sub
hlt
in
sbb
filds
mov
sti
je
stos
negl
or
inc
mov
hlt
test
outsb
push
xchg
in
mov
cld
push
mov
jns
sub
mov
les
cmp
movsb
cld
inc
lcall
subb
mov
jne
cli
jnp
xor
lahf
mov
sub
xor
dec
sub
add
insb
cltd
jg
jle
inc
mov
and
xchg
mov
in
stc
push
lret
mov
out
push
je
push
cltd
xchg
push
insb
pop
adc
or
fistps
movsb
mov
cwtl
cld
xor
cmp
xor
cwtl
stos
xor
mov
mov
add
sub
rdtsc
addr16
sahf
int3
adc
sub
sbb
int3
cs
push
scas
cmp
repnz
cmpsl
push
mov
jp
mov
data16
mov
or
mov
cmpsb
push
scas
and
pop
imul
add
jp
sahf
inc
xchg
jmp
call
lcall
add
xor
dec
mov
mov
jns
inc
bound
fistps
push
jle
or
test
cmpsl
sbb
dec
dec
mov
pop
xchg
sub
dec
ret
aam
sbbb
cmpsl
mov
sbb
rcll
add
fs
jno,pt
mov
sub
nop
mov
fstpl
jnp
mov
adcl
imul
sub
cwtl
mov
jb
pop
dec
and
and
dec
and
cltd
pop
inc
divb
shrl
sub
pop
scas
loop
jl
int
mov
xchg
test
jns
cmc
jb
mov
jle
clc
enter
jbe
adc
jge
fists
xchg
cmp
shrb
das
scas
add
jp
mov
cmpsb
sbb
fucomip
mov
and
xchg
or
aas
pop
js
or
sbb
outsl
or
out
jg
or
jbe
imul
ss
ret
jne
out
xor
mov
idivl
mov
xor
mov
in
mov
jnp
xchg
inc
out
pop
push
movsl
pop
xchg
and
shr
add
loopne
aam
mov
adc
loopne
inc
sub
jmp
cmp
gs
cmp
fbstp
scas
scas
pop
push
and
xlat
and
mov
xchg
and
push
mov
jp
cmp
and
cmp
sbb
adc
xchg
mov
das
mov
idivb
add
mov
int
test
mov
scas
ja
and
call
popa
mov
mov
lret
fdivrs
in
mov
shrl
jmp
pop
mov
xchg
loop
pushf
test
hlt
loopne
pop
lea
lock
adc
xor
ljmp
xor
jb
and
pushf
in
stos
and
jbe
jbe
jecxz,pn
xchg
xchg
sbb
enter
add
xor
adc
xchg
sub
sub
repnz
gs
loop
in
inc
inc
sar
js
sub
add
sub
lret
xlat
push
jl
jmp
push
sarb
movsl
adc
sbb
and
xchg
repnz
sbb
mov
jns
addr16
aaa
lahf
cwtl
mov
sub
adcl
inc
xchg
pop
xor
testl
divl
inc
cmc
sbb
fiaddl
gs
dec
scas
xchg
xchg
xchg
jne
sub
adc
mov
xchg
sbb
dec
mov
and
sbb
and
add
and
pop
dec
or
or
shl
rcrb
aad
pop
dec
jno
aam
mov
mov
or
push
leave
in
pushf
adc
imul
imulb
mov
mov
pop
into
lods
jb
pop
xchg
jle
push
and
in
jge
loopne
or
inc
sub
loopne
dec
dec
insl
cmp
jns
sbb
pop
pop
lret
fs
xchg
or
push
movsl
in
mov
pop
sub
mov
pop
int3
mov
stc
sahf
dec
xor
sub
mov
bound
mov
xchg
xchg
ja
movsb
addr16
mov
cltd
jl
rcl
sbb
dec
dec
sbb
jnp
mov
push
fistpll
sarw
xchg
movsl
mov
cmp
popa
ds
in
mov
inc
lcall
xor
xchg
mov
mov
lods
and
jns
pop
fdivrs
stos
lret
dec
jge
add
int
cmp
push
adc
lahf
out
push
insl
jl
push
mov
pop
fisttpll
sub
ds
mov
sar
fsubr
mov
cmp
push
and
and
lahf
inc
jl
jl
jne
lds
out
enter
roll
popa
inc
xor
fcmovnu
pop
testb
outsb
inc
and
int
dec
and
imulb
imul
mov
add
mov
inc
cli
cmp
xchg
cmp
fs
pop
lret
push
and
mov
or
decl
add
stos
add
cmc
imul
sbb
rdseed
cwtl
sbb
dec
sbb
or
adc
adc
cmp
std
xor
sbb
int3
sbb
pop
je
ja
inc
mov
xor
sahf
insl
outsl
xchg
cmp
dec
sub
incb
in
lahf
loopne
or
into
scas
dec
das
dec
shll
daa
pushf
sbb
or
fcom
imul
fwait
sbb
aad
rorb
xchg
cwtl
pop
int3
sarl
xchg
pop
mov
mov
xor
jmp
sub
shr
mov
stos
fdivl
out
mov
mov
popf
and
lret
sbbl
notb
xchg
sub
add
js
xchg
jo
cmp
sub
sbb
pop
aad
dec
inc
or
push
cwtl
aad
dec
outsl
jg
inc
lods
popf
push
push
jb
jno
dec
outsl
sub
in
out
jecxz
fadd
inc
popa
sbb
call
cli
push
and
adc
aam
mov
dec
cmp
or
in
add
and
gs
movsl
dec
test
push
insl
sarl
or
jg
push
xlat
lods
pop
out
pop
call
loopne
pop
imul
cmpsb
movsb
mov
jae
enter
or
pop
in
aam
sarb
shlb
fcomi
inc
push
push
mov
lahf
dec
scas
test
fcomp
xchg
cld
addb
cmp
mov
pop
pop
sahf
sbb
lods
push
xchg
test
mov
mov
and
pop
mov
and
out
and
mov
cmp
daa
pop
test
movsb
lds
add
dec
pusha
cmp
lock
push
jnp
or
mov
push
into
jb
jmp
mov
aam
fnsave
int3
jbe
aaa
inc
jle
pushaw
std
loop
dec
icebp
inc
sbb
out
and
cmc
mov
sarb
rolb
lret
push
xchg
div
cmpsb
adc
mov
incl
iret
in
add
fisubs
repnz
sub
out
mov
mov
mov
lahf
cs
stos
inc
push
das
lods
sahf
mov
in
sub
xchg
call
pop
sbb
fildll
add
pop
shl
and
push
sbb
lock
fcompl
mov
mov
xchg
cs
in
movsl
into
mov
pop
arpl
stc
sub
push
xchg
xchg
dec
xchg
iret
repz
inc
stc
sarl
aas
cmpsb
jnp
fnstcw
sub
int3
test
mov
adc
roll
aaa
mov
add
ret
xchg
out
bound
ljmp
jb
or
inc
lods
xchg
mov
dec
je
dec
inc
js
dec
imul
stc
add
bsr
mov
cmc
pushf
sub
push
xchg
lahf
setb
push
setl
not
push
mov
js
push
pushf
cwtl
cwtl
mov
push
cwtl
mov
jmp
add
push
push
js
arpl
gs
add
add
add
lea
jb
jmp
pushl
pushl
lea
jne
lea
pusha
sets
movb
jmp
jmp
add
inc
gs
outsb
jne
je
imul
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
dec
outsl
popa
fs
imul
add
cmpb
push
cmpb
pushf
lea
jne
call
not
push
lahf
movsbw
lahf
lahf
lea
pushf
lea
call
pusha
movzbw
mov
mov
call
push
movw
sub
call
add
dec
outsl
popa
fs
imul
js
add
xor
pushf
movl
pusha
pushl
ret
bt
shl
call
pushf
lea
call
call
cmp
cmc
pushf
cmp
pushl
pusha
lea
jae
btr
mov
sar
mov
bsr
shr
mov
bt
sub
bt
pushf
movb
repnz
pushl
jmp
lea
jne
jmp
cmc
call
bswap
movsbw
pop
lea
push
lea
bswap
mov
pushf
pusha
lea
call
pusha
pushf
lea
jne
mov
lea
lahf
mov
push
mov
push
lea
jmp
cmp
bt
cmp
mov
lahf
lea
cwtl
setns
movzbw
sets
mov
mov
call
add
inc
gs
gs
outsl
popa
jb
push
je
je
add
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
adcb
decl
enter
jmp
movzbl
cmc
call
add
inc
gs
gs
imul
pushl
test
xor
cmp
bt
cmc
test
setl
jmp
movsb
hlt
orl
repz
jno
mov
cmp
push
xchg
dec
or
inc
pusha
cmp
mov
cmp
int3
mov
xor
enter
js
and
fistps
and
rorb
shll
mov
scas
fwait
cmpsl
test
pop
mov
mov
sti
push
icebp
aas
jns
in
bound
dec
cmc
mov
xorl
leave
mov
mov
out
cmp
fs
lahf
and
push
popf
and
adc
test
dec
push
lods
inc
insl
ret
sub
mov
add
dec
inc
dec
inc
push
jb
arpl
add
push
gs
jb
jae
dec
jb
inc
js
jmp
sbb
xchg
dec
std
loopne
xchg
lcall
shr
nop
xchg
lret
cmpsb
mov
nop
sbb
sbb
mov
pop
inc
mov
cmpsl
sbb
out
dec
loopne
adc
mov
and
in
pushf
add
test
xlat
jp
cmp
push
nop
cmp
cmp
pop
xchg
insl
mov
pop
xchg
pop
shll
cmpb
aas
jge
outsl
dec
insb
push
lret
dec
jp
adcb
rcrl
add
xlat
int3
in
inc
pop
jo
cld
jae
jmp
add
inc
gs
jb
outsl
jb
outsb
outsw
add
bt
call
add
push
jb
je
inc
imul
bt
mov
call
pushl
movb
pushl
popl
mov
push
pushl
pushl
ret
lahf
movl
sete
call
add
inc
gs
jb
jo
add
add
insb
je
inc
jns
gs
outsl
push
imul
add
dec
jo
outsb
inc
insb
imul
add
pop
aaa
mov
lea
jne
rcl
rcl
inc
mov
cmc
clc
bt
stc
add
pushf
pusha
test
jmp
push
movsbw
xor
push
lahf
test
pushf
xor
not
lea
lea
movb
mov
movb
mov
lea
jne
pushf
push
pushf
mov
cwtl
movsbw
bswap
mov
movzbw
lea
call
add
push
outsb
fs
gs
popa
addr16
add
add
je
imul
add
inc
gs
gs
popa
addr16
imul
gs
arpl
insb
insb
dec
outsb
outsw
add
add
ja
outsb
jne
popa
jb
lea
jb
pusha
jmp
add
inc
gs
imul
outsb
addr16
add
add
push
gs
popa
jae
inc
jb
outsl
jb
stc
test
or
pushf
call
add
push
mov
call
movsbw
setb
mov
push
pushl
pushf
pusha
lea
jmp
add
push
imul
jne
jb
add
inc
and
pushf
not
setae
sets
lods
cmc
mov
test
add
push
jmp
jge
inc
dec
std
loopne
xor
lea
imul
frstor
arpl
sti
jae
in
push
into
aaa
mov
out
icebp
cmp
sbb
movsb
sbb
cmp
xchg
lcall
loopne
shrl
mov
pop
paddusw
sub
ret
push
test
mov
shlb
outsl
and
jge
idiv
popf
or
lret
lds
mov
sub
pop
xorb
popa
pop
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
lea
jne
pushf
lea
jmp
movl
movb
pushf
movb
lea
jmp
jmp
or
call
pushf
and
std
loopne
stos
add
xchg
stos
lods
sbbb
mov
cmp
push
xchg
mov
push
push
shrb
fdivs
push
lahf
xor
lret
pop
jecxz
stos
and
not
test
adc
fxch
das
jnp
das
lods
out
cwtl
inc
jecxz
mov
mov
mov
mov
mov
loope
test
ja
mov
and
outsl
pop
gs
add
adcl
and
inc
jmp
add
popf
adc
arpl
sbb
out
rorl
lret
jno
adcb
int
dec
jmp
pushf
pusha
movb
sbb
mov
mov
lea
jnp
pusha
lea
mov
lea
jmp
add
add
gs
add
push
push
push
add
insb
add
push
push
add
rsqrtps
xchg
out
data16
xor
rep
add
out
insb
add
insb
add
fildll
shlb
sub
add
gs
mull
mov
insb
add
mov
insl
add
rep
add
cmp
loopne
add
ret
insb
add
cmp
mov
add
out
add
inc
add
and
mov
insb
add
jmp
add
adc
data16
sbb
jbe
insl
add
shlb
sub
insb
add
add
add
insb
add
data16
sbb
sbb
insb
add
add
add
add
es
add
ret
inc
into
add
add
add
data16
insb
add
xor
loopne
add
add
add
sbb
mov
add
add
addr16
imull
sbb
insb
add
insb
add
add
adc
add
loopne
add
insl
add
insb
add
add
sub
add
popa
fs
shlb
rep
add
rsqrtps
int3
inc
add
data16
or
jno
insb
add
jmp
add
fisubrl
stc
data16
fisubrl
out
add
clc
data16
cmp
insb
add
cmp
mov
add
jmp
add
pop
add
add
inc
shrl
insb
add
push
push
add
push
add
add
cmp
insb
add
add
insb
add
add
mov
insb
add
push
add
and
in
add
xor
and
adc
add
add
popa
fs
ret
insb
add
out
add
cmp
pop
push
add
in
data16
and
fucom
add
mov
insb
add
add
mov
add
add
adc
insb
add
data16
and
les
xor
shrl
out
add
pop
add
int
add
push
push
add
shrl
lret
add
add
data16
insb
add
add
push
add
add
add
add
inc
add
aam
add
add
add
int
add
insb
add
insb
add
jmp
add
add
inc
fs
ljmp
mov
pop
push
add
gs
pusha
fs
sbb
push
push
add
insb
add
and
insb
add
insb
add
fs
cmp
or
jae
addr16
enter
push
push
add
daa
add
push
add
insb
add
insb
add
cmp
add
pusha
fs
in
add
add
add
add
xchg
ljmp
das
cmp
add
data16
into
insb
add
add
insb
add
ss
mull
or
add
insb
add
adc
xchg
or
add
add
ljmp
in
push
add
push
add
lock
add
adc
add
inc
add
data16
fs
sbb
push
std
data16
data16
push
add
addr16
daa
fs
add
add
add
pop
push
add
cli
data16
iret
insb
add
add
test
insb
add
push
add
or
jmp
push
add
inc
add
out
insb
add
insb
add
push
add
cmp
add
push
add
pop
push
add
hlt
data16
and
cmp
or
loopne
add
and
cs
mov
add
daa
add
add
cmp
cld
data16
adc
add
jmp
add
push
push
add
in
insb
add
add
pusha
es
push
add
add
data16
shlb
in
add
out
insb
add
in
insb
add
push
add
rep
add
enter
ret
insb
add
pop
add
insb
add
data16
push
add
push
add
inc
add
pop
add
add
xlat
cmp
data16
sbb
jge
insb
add
int
add
xor
cli
data16
push
push
add
add
imulb
sbb
add
push
add
dec
add
cli
data16
insb
add
add
pop
push
add
ret
insb
add
adc
nop
cmp
add
add
sbb
rsqrtps
xchg
in
data16
stc
data16
push
push
add
add
insb
add
pop
add
add
cs
popa
add
popa
add
in
insb
add
adc
add
inc
add
shlb
adc
add
mov
add
push
add
cld
data16
mov
insb
add
lock
add
mov
push
add
mov
add
insb
add
add
push
fs
fildll
imulb
add
test
insb
add
sub
and
leave
insb
add
and
or
sbb
push
add
add
dec
dec
fs
out
insb
add
add
insb
add
cmp
mov
insb
add
clc
data16
or
inc
push
add
push
add
insb
add
inc
fs
out
add
insb
add
shlb
sbb
fsubl
add
add
sbb
fldcw
fildll
push
push
add
adc
insb
add
fsubrl
rep
add
mov
push
add
cld
data16
add
data16
sbb
repz
add
adc
pop
or
test
data16
push
add
insb
add
pop
add
insb
add
push
add
shrl
and
add
push
add
lret
insb
add
add
add
add
add
add
add
add
and
ljmp
loopne
push
add
in
data16
lock
add
add
ljmp
stc
cmp
add
adc
std
add
cmpsl
sbb
add
gs
sti
data16
or
jg
add
push
add
push
add
es
push
add
add
add
add
mov
gs
ret
add
add
adc
insb
add
push
add
in
data16
dec
add
cmc
insb
add
rsqrtps
fcomip
data16
push
add
insb
add
cmp
lock
add
jmp
push
add
ss
and
dec
rep
add
add
ret
add
add
add
aaa
mov
add
popf
adc
mov
insl
add
data16
add
jmp
add
stc
data16
add
add
push
add
add
add
add
pop
add
adc
cmpsb
xor
and
add
add
aas
add
add
add
mov
add
ret
insb
add
inc
add
add
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
jecxz
lea
jmp
add
dec
outsb
je
jb
gs
outsl
outsb
outsb
arpl
mov
aad
std
loopne
ud1
mul
jg
ret
movsl
stos
in
fcompl
cmpsl
jno
pusha
pop
jnp
cmp
mov
lea
dec
pop
sub
lds
lcall
leave
mov
xchg
xor
jmp
mov
add
std
loopne
pop
push
js
call
lret
lods
out
dec
inc
add
inc
addr16
jb
pop
pop
into
aaa
sbb
xor
je
lock
int3
xchg
std
cmp
mov
sahf
ret
ror
adc
dec
loopne
pushf
cmpsb
fsubrp
jmp
out
ds
push
or
sarl
iret
aaa
or
mov
adc
xchg
ds
push
fdivs
lret
add
sbb
ficompl
lcall
loope
loop
xchg
insb
jecxz
mov
sbb
movsl
movsl
sub
mov
out
jl
add
xchg
push
out
iret
out
stos
ss
pop
bound
push
imul
jns
sub
cltd
lahf
jmp
jl
in
push
out
loope
mov
push
leave
cmovg
fidivrl
loop
sub
push
dec
rclb
es
and
call
imul
and
push
int3
ljmp
fldcw
fcoml
daa
jg
jp
or
push
pop
and
lahf
pop
dec
push
popa
or
aad
std
adc
xchg
adc
sub
in
rol
enter
pop
add
fs
pop
rclb
inc
in
cld
jno
aaa
pop
sbb
or
and
push
jb
jg
arpl
scas
gs
in
mov
adc
std
loopne
push
mov
in
repz
cmpsb
inc
repnz
lods
ljmp
pop
aad
adc
sarl
xlat
test
leave
fs
js
cmp
das
cmp
jo
add
in
dec
adc
and
jecxz
in
imul
push
stc
cmc
or
pushf
push
jmp
imul
gs
xor
cs
insb
add
add
outsl
bound
inc
imul
inc
add
inc
and
pushf
bswap
movl
lea
pop
movzbw
lea
push
movl
pusha
jmp
addr16
pusha
cmp
loopne
push
sub
xor
dec
xchg
adc
in
js
mov
nop
jl
xlat
cltd
mov
cmpsb
sbb
xor
fsubp
add
inc
repz
or
mov
pushf
push
lcall
mov
cmp
jg
cmpsl
and
bound
out
add
jae
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
cmp
jmp
fs
sub
movsl
dec
aas
ss
push
arpl
mov
sbb
xor
aam
out
cli
in
mov
lret
push
jp
dec
xor
add
pop
adc
scas
popa
popf
popf
mov
aad
xchg
xor
mov
daa
jbe
jg
push
in
jmp
jle
dec
sahf
test
in
and
fsubr
inc
and
mov
popf
lcall
dec
pop
ret
sub
mov
out
hlt
xchg
fstps
jg
push
add
lods
mov
pop
pop
lods
mov
and
daa
pop
inc
gs
cld
cmp
cmp
dec
sahf
inc
lods
into
out
jecxz
mov
out
push
cmp
push
mov
dec
lret
adc
dec
out
jae
cmp
scas
enter
repnz
cli
or
or
mov
out
push
stc
adc
sub
push
xlat
loopne
dec
or
add
adc
jg
aaa
scas
aad
add
cs
and
ljmp
ror
and
das
xlat
sub
pusha
outsl
cli
jae
loop
cmp
mov
xchg
dec
adc
enter
mov
mov
cmp
dec
dec
cmp
mov
xchg
stos
push
fstps
jecxz
mov
and
std
loopne
mov
cmp
push
test
dec
inc
insl
mov
out
add
add
movsb
sub
lods
pushf
div
jno
rclb
mov
insl
add
cmpsb
mov
sbb
ret
iret
lcall
mov
dec
iret
and
mov
xchg
pop
lea
aas
hlt
nop
xor
out
jp
mov
iret
ja
mov
icebp
mov
jo
ret
mov
cltd
fistps
sarb
sub
pusha
das
mov
iret
cmp
rclb
jae
stc
rorl
mov
pusha
or
inc
scas
fistpl
test
dec
pop
sbb
inc
or
add
lock
sahf
jno
and
popa
mov
xorb
inc
mov
inc
xor
lods
inc
popf
dec
add
iret
adc
mov
cli
sub
cmp
push
test
out
ljmp
mov
imul
loopne
cwtl
and
imul
fistl
lahf
mov
je
mov
xchg
jle
mov
lods
sub
pop
jns
loope
inc
mov
lahf
dec
and
in
mov
fists
xchg
rol
in
mov
insl
mov
xor
data16
push
cmpsb
mov
mov
push
pop
jecxz
shll
jle
js
fisubrs
clc
add
sbb
shrb
hlt
fs
sub
sarb
cmp
ljmp
dec
adc
jnp
popa
cmp
imul
jo
out
or
nop
push
mov
mov
inc
lret
fnstenv
jbe
jge
outsl
push
stos
daa
sarb
sbb
sub
or
clc
arpl
fisubs
lods
mov
sbb
inc
add
cltd
popa
js
pand
xchg
adc
xchg
jle
dec
or
ja
aas
fidivs
stos
incl
mov
add
sub
push
test
cmc
rolb
xchg
lret
cmp
out
pusha
lret
jne
je
std
mov
jecxz
clc
mov
xchg
sbb
or
icebp
aad
push
inc
pop
ret
mov
clc
inc
xchg
jle
lds
adc
lahf
push
or
iret
lret
sti
and
insl
scas
push
call
aaa
stos
xor
pop
xchg
rcrl
mov
inc
xchg
jne
loop,pn
xchg
push
mov
push
xlat
enter
pop
xor
fdivrs
xchg
popa
stos
int
push
std
sbbl
clc
hlt
inc
cld
gs
xchg
pop
inc
add
addr16
jge
add
mov
and
out
sub
adc
adcl
out
cmc
dec
mov
pusha
or
es
cmp
and
daa
lret
dec
mov
iret
xor
in
lds
dec
mulb
stc
cmp
lods
movsl
scas
jecxz
aaa
jge
and
test
jl
scas
jl
push
lret
enter
jbe
mov
mov
sub
imul
lret
cmp
ja
jno
mov
test
dec
loope
dec
xchg
sbb
push
movsb
push
cs
sbb
outsl
or
dec
xchg
iret
cmc
mov
mov
subl
add
cmc
jmp
loope
jmp
add
icebp
aam
lea
out
add
outsl
stos
lcall
push
stos
sbbb
dec
fucomp
push
je
out
jnp
inc
test
clc
fildl
pop
sbb
lods
xor
push
aam
in
jecxz
xor
xlat
or
xor
ret
addr16
sbb
enter
repz
fstpt
out
js
bound
push
ss
ret
stc
jne
pop
pop
fsubl
or
out
xlat
mov
outsb
jb
lret
dec
outsb
adc
add
xchg
sbb
mov
fiadds
movsl
fldcw
movl
adc
cmp
insl
pop
loopne
fbstp
or
out
leave
mov
jb
sub
movsb
or
jmp
and
in
mov
pextrw
nop
xor
xchg
sbb
and
clc
mov
inc
mov
fdivl
mov
filds
cld
lods
negl
xor
mov
jp
mov
nop
dec
xchg
inc
xor
inc
push
mov
jp
lods
sub
add
or
clc
loope
fiadds
jnp
stc
jnp
mov
out
dec
xchg
test
and
enter
mov
cmp
mov
test
jl
cmp
cwtl
jg
cmp
pop
in
jno
das
roll
jl
fisubs
dec
pushf
adc
jnp
lods
mov
cmp
sbb
das
sbb
aam
push
in
pop
ja
cmpsl
add
dec
sti
add
push
push
lahf
mov
jae
push
pop
nop
xchg
push
int3
and
sbb
mov
mov
call
in
movsb
and
push
mov
push
jmp
xchg
mov
cmpb
stos
test
pushf
imul
addr16
out
xchg
jmp
xchg
xchg
mov
inc
mov
bound
mov
int3
ds
cmpsl
fistl
pop
push
int
jecxz
notb
push
das
jp
ds
fldenv
inc
jecxz
xchg
inc
rorb
loop
xchg
mov
inc
in
jecxz
imul
jns
in
lea
into
fstl
icebp
and
xchg
sar
outsl
sbb
lret
cwtl
outsb
fstps
adc
lods
mov
shr
data16
cld
sub
cmpsb
outsb
cmc
loopne
fwait
mov
imul
pop
sub
out
add
mov
movsb
and
jbe
ja
out
insl
pop
jg
jbe
xchg
jecxz
inc
and
outsl
xor
cmp
ljmp
test
outsl
inc
mov
cld
enter
dec
and
mov
sbb
pop
and
lds
int
lea
mov
push
dec
pop
fnstsw
add
mov
pop
sub
out
adc
call
daa
push
es
add
in
pop
repz
push
jb
fisubrs
pushf
cmc
add
lret
add
test
cmp
or
pop
inc
out
xchg
pop
xchg
pushf
add
pop
xlat
iret
sub
cld
popf
adc
push
mov
popf
xchg
nop
dec
inc
dec
fcoml
ret
lahf
in
fistpll
xchg
outsb
adc
push
sub
xchg
xchg
outsl
mov
movsl
call
sbb
and
imul
icebp
stos
mov
cmp
mov
repnz
sub
sbb
jmp
stos
add
jmp
ds
mov
xchg
inc
jp
shll
ss
test
cli
idivl
clc
fisubs
mov
sub
lods
and
push
lret
mov
cmova
inc
lods
cmpsb
hlt
test
jp
sbb
cmp
fisubl
popa
shl
push
cmp
pushf
enter
jmp
dec
jl
sbbl
lcall
or
fldcw
popf
rcrb
mov
lock
in
and
sub
cmpsb
adc
loop
daa
and
mov
out
das
negb
jg
mov
and
ret
xor
cmpl
xrelease
cmpsl
pop
aas
and
sbb
cmp
cmp
push
inc
sub
shrl
mov
xor
cmpl
fadd
ds
arpl
mov
shrl
dec
es
jno
repnz
mov
jbe
and
stc
sub
push
je
jbe
mov
repz
ret
xor
mov
push
fwait
ret
pushf
icebp
sub
xor
enter
or
paddusb
cltd
fnstsw
jg
xchg
mov
cmpsb
pop
or
repz
push
sbb
and
shll
add
mov
jo
mov
sarb
movsb
mov
mov
movsb
int
xor
dec
push
sbb
jmp
pop
sub
cmp
xor
mov
fnstcw
cmovno
fadd
push
leave
pop
adc
and
loope
in
push
sbb
dec
ljmp
out
insb
dec
cmpsl
mov
lods
test
mov
cmpb
sbb
cmp
daa
shlb
fwait
lret
mov
cmc
pusha
push
xchg
jg
sub
fistl
test
cmp
inc
lods
adc
lock
fsubrl
mov
inc
mov
pop
pop
stos
sub
jbe
decl
lahf
and
dec
pop
test
int3
add
addl
outsb
xor
dec
xor
mov
jge
cmp
mov
dec
pop
xor
ds
fwait
cmp
data16
sbb
pop
jno
mov
xor
ficompl
inc
sub
mov
aaa
decl
nop
push
jp
push
leave
enter
shl
xor
xchg
out
outsl
popa
out
sbb
mov
pop
nop
call
xchg
or
jnp
icebp
mov
cmp
add
pop
insb
sub
and
sahf
aas
adc
adc
jle
mov
dec
cs
cmp
pop
mov
pop
aam
mov
into
xchg
adc
ja
fldt
lods
pop
pop
add
push
mov
dec
xchg
mov
bound
mov
stos
inc
or
mov
test
or
inc
mov
hlt
push
rcrl
aad
es
mov
jecxz
repz
aaa
call
movsb
leave
popf
test
into
mov
in
pop
fisttps
sahf
loope
jg
jmp
insb
mov
rcll
xchg
jecxz
lret
inc
cli
sbb
loope
push
bound
fsubrs
xchg
or
mov
mov
in
in
fildl
das
add
sarl
jp
aam
xor
mov
cmc
lea
pop
gs
pop
mov
add
add
mov
test
orl
enter
jns
mov
pushf
lods
pop
loope
push
ret
jnp
push
pop
mov
jmp
lea
test
movsl
inc
inc
xlat
popa
add
xchg
adc
outsb
shlb
test
push
sti
mov
add
push
pop
xchg
into
es
stos
bound
add
pop
inc
lahf
daa
push
push
xchg
scas
jge
mov
jo
mov
inc
into
movsb
fsubrs
rcr
xchg
jmp
ds
sub
repz
lret
push
in
dec
out
jl
aam
adc
aam
add
cltd
jae
mov
cmp
jge
inc
push
aam
push
mov
push
jge
repz
fisttpl
dec
aad
pop
out
cwtl
dec
ret
sbb
test
loop
jg
std
pop
sbb
daa
mov
icebp
nop
adc
sub
sbb
mov
dec
push
mov
shrb
test
mov
test
or
mov
dec
sub
jbe
jecxz
adc
icebp
dec
and
mov
gs
lahf
mov
cmpsl
pop
in
fidivrl
xorw
mov
lcall
and
xchg
adc
add
add
jge
mov
fdivrp
xchg
int
push
xchg
aaa
and
dec
push
popa
push
cli
in
mov
mov
sub
add
in
jbe
sbb
and
push
cmp
jg
inc
pushf
or
adc
pop
cmp
or
mov
pop
jnp
lock
cld
call
and
iret
mov
fistpl
push
and
dec
jp
in
imul
imul
mov
dec
and
mov
movsb
aam
lds
frstor
rcl
lahf
cmp
add
inc
std
mov
out
xchg
xchg
idivb
dec
mov
cmp
scas
out
lods
or
stc
dec
add
popa
push
ret
push
jo
mov
push
ffreep
in
js
push
shrb
mov
test
cmp
inc
mov
jg
js
add
stc
and
adc
shll
outsl
cmp
jns
inc
inc
push
jg
add
sahf
xor
jns
and
mov
xchg
lret
mov
mov
cs
sub
inc
ret
ret
xchg
mov
cmp
js
pop
inc
mov
aam
test
push
inc
and
clc
and
mov
xor
out
pop
or
push
fs
push
scas
sbb
push
hlt
cld
aam
mov
add
sub
pushf
jnp
out
dec
jge
lods
xor
dec
shll
dec
scas
cs
push
in
or
push
jl
pop
js,pn
xlat
sub
sarl
mov
push
loopne
fs
es
test
jo
mov
fnsave
int
xchg
loopne
test
outsl
mov
jnp
cmp
jg
pop
in
mov
repz
popf
enter
stc
pop
mov
aaa
sub
xchg
mov
sbb
jae
mov
std
out
jle
fs
push
ss
push
pop
pop
xor
cmpsb
cmpps
mov
scas
mov
mov
add
das
pusha
jecxz
clc
out
xor
enter
push
push
jecxz
mov
lods
mov
xor
or
push
sti
int
sahf
cmp
jecxz
push
pop
es
jp
enter
sbb
mov
outsb
xor
out
jb
sbb
dec
mov
jo
push
orb
mov
imul
popf
xor
and
mov
cmp
jl
or
xchg
and
fdivrs
sub
mov
lahf
ds
aad
out
addr16
gs
idivl
mov
dec
xlat
xchg
and
pop
aam
mov
in
enter
stc
cs
mov
push
je
ljmp
mov
dec
push
jg
sar
outsl
cmp
cmp
inc
scas
xor
out
sti
mov
je
xlat
aaa
sub
mov
dec
aas
sbb
mov
lds
mov
xor
xchg
xchg
mov
mov
jb
call
push
cmp
jg
xor
push
sbb
ljmp
xor
je
mov
fisubrl
mov
lret
call
loope
mov
and
pusha
lret
imul
dec
repnz
clc
jmp
xor
push
push
cmc
fisubl
sahf
inc
cmc
aas
mov
mov
push
imul
jo
push
in
mov
mov
xchg
dec
jne
jbe
stos
arpl
repnz
mov
arpl
mov
test
repz
push
nop
mov
insb
push
cmpsl
xor
mov
mov
push
dec
mov
mov
push
xor
sbb
mov
sbb
sbb
push
std
inc
popa
mov
push
xchg
outsl
xchg
mov
add
pop
mov
clc
aas
sub
out
sub
inc
xor
lcall
scas
out
push
nop
xchg
sub
pop
add
xchg
xchg
sub
call
xchg
pop
jp
pop
inc
insb
and
repz
adc
push
and
int
pop
mov
cwtl
cmp
or
out
push
out
or
jecxz
cmp
rcl
pop
or
cmp
test
lret
imul
mov
push
rorb
adc
lahf
inc
icebp
and
sbb
adc
and
orl
cli
lret
aas
add
frstor
out
lret
out
pop
stos
ds
test
pop
mov
es
or
push
stc
insb
sbb
cmp
cld
fabs
jno
push
in
repz
dec
daa
lret
mov
pushf
fcomps
ss
pop
mov
fimull
dec
jp
dec
mov
movsl
adc
inc
cli
out
addb
sti
ss
movlps
and
loop
std
iret
mov
or
push
sub
loop
out
cmp
lret
rcrl
mov
mov
jns
das
aam
bound
xor
test
and
fsubl
add
sbb
sarb
pop
out
or
cmc
cmp
mov
in
rorb
jl
mov
pop
divl
xor
xor
mov
xchg
inc
add
adc
int3
xor
adc
iret
mov
push
stos
fstl
loope
pusha
pop
outsl
lods
jecxz
cmc
inc
je
enter
jb
nop
jns
imul
mov
cmc
movsl
xor
aam
jb
rol
inc
sub
fildll
sub
push
dec
adc
rcr
xchg
push
pop
movsl
pushf
jge
out
push
call
adc
shrl
jbe
mov
dec
jg
push
inc
cmp
scas
push
test
lcall
enter
mov
mov
fsubrl
aas
int
jl
fsubrs
iret
mov
pop
push
mov
pop
call
faddp
xor
test
out
fnstenv
pop
pushf
insl
bound
loop
xor
cmpsb
data16
bound
fnsave
insb
cltd
push
int
pushw
adc
fucomip
jne
dec
and
loope
sahf
xor
mov
pop
cmp
mov
jns
jae
call
inc
fists
repz
adc
adc
cmp
lret
aam
dec
lret
rcrb
mov
fldt
outsl
std
lret
dec
jecxz
jnp
mov
mov
pop
sub
pushw
cmp
and
and
jl
addl
js
clc
mov
jbe
and
mov
int3
mov
andb
stos
xchg
cmpsb
xchg
out
and
mov
mov
or
leave
outsb
push
ljmp
or
into
lock
mov
inc
inc
mov
pop
dec
loope
xor
int3
and
adc
pop
pop
or
mov
shll
jns
jg
cmp
rcl
xchg
jae
inc
xchg
cmpsb
add
mov
imul
jmp
dec
scas
in
push
jmp
shlb
mov
out
sbbb
dec
adc
sub
add
mov
add
sub
push
leave
push
shl
jecxz
lcall
cmp
cmp
fldt
adcb
sub
mov
arpl
sahf
cmp
cmc
rorb
iret
insb
sbb
mov
add
mov
fdiv
daa
std
xchg
push
xchg
add
push
inc
mov
lret
stos
jl
clc
add
lods
shld
test
das
out
outsl
adc
sbb
es
js
cwtl
js
push
xor
lahf
pop
sbb
scas
lods
and
or
movsb
cmp
add
mov
fistps
in
inc
test
pop
jb
cmc
inc
inc
bound
incb
dec
inc
out
jmp
xchg
fmull
cmpsb
xor
lret
ljmp
out
push
mov
dec
cmp
push
mov
ret
aad
inc
mov
ss
fnsetpm(287
ret
lahf
cmpsb
shr
push
clc
or
fs
dec
dec
setae
stos
jnp
push
add
xchg
push
push
imul
mul
test
enter
outsl
cmpsl
loop
push
xchg
sbb
enter
dec
xor
xor
cli
sub
push
or
cmp
inc
pop
jae
jp
mov
lcall
jge
jecxz
ja
add
jecxz
push
jl
add
into
add
out
sbb
pop
xchg
dec
inc
cmp
jp
mov
ss
sbb
popf
bound
ret
add
daa
adc
outsb
loopne
jl
cmp
stos
xchg
cmp
mov
sbb
inc
adcb
sbb
or
mov
jmp
pusha
movzwl
call
pushf
pushf
movl
push
pusha
call
mov
movsbl
pop
lea
lea
jmp
add
inc
gs
imul
push
jo
arpl
add
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
loopne
test
out
mov
pop
inc
jl
imul
fwait
cmp
jb
and
int
ljmp
stos
jo
pushf
xor
ficoms
test
imul
push
push
imul
xor
jecxz
dec
in
or
mov
xor
push
mov
mov
call
cmp
pop
sub
pop
scas
cmp
pushl
cmp
cmp
popf
pop
add
cmp
xchg
push
faddl
or
imul
push
push
inc
jns
sub
shl
mov
add
loopne
lea
ljmp
js
xchg
mov
imul
and
cmpsb
iret
movsl
mov
sahf
aas
roll
add
inc
insl
jo
jns
insb
imul
add
loopne
push
jno
sbbl
addb
cmp
or
popf
lret
pop
das
and
clc
mov
pop
cmp
sahf
sub
mov
cmpsb
imul
sbb
xchg
icebp
rorb
cld
dec
jl
lock
sbb
dec
jno
and
xchg
xorb
cld
repnz
dec
in
loop
das
sub
popf
and
loopne
jge
xor
adc
cmc
movsb
xor
xor
mov
mov
jb
es
testb
int3
jmp
cmpsl
leave
icebp
mov
mov
scas
cmp
jp
imul
pop
xor
xchg
mov
out
mov
hlt
loopne
cwtl
out
push
xchg
jmp
dec
rcll
and
pop
out
inc
mov
and
loopne
dec
xchg
inc
sahf
mov
pop
or
je
enter
sbb
ja
and
cli
stos
bound
mov
es
inc
push
lret
xchg
arpl
sbb
scas
es
pop
out
jmp
push
imul
adc
jne
lea
cmpsb
test
xlat
mov
or
pop
decb
mov
fsub
xchg
dec
aad
and
call
pushl
mov
pop
sub
in
cwtl
cmpsl
out
nop
scas
mov
and
mov
adc
js
inc
stc
ja
out
fs
call
stc
bt
push
stc
pushf
mov
call
pushf
cmp
jmp
out
lahf
and
loopne
sti
in
mov
xor
lods
adc
addr16
rorb
into
cld
add
aaa
stc
cltd
lock
jp
mov
cmpsl
push
sub
pop
repz
sub
pop
xchg
nop
idivl
mov
hlt
xchg
adc
sbb
lea
sbb
jg
mov
out
rcrl
pop
cwtl
sub
shr
pop
push
sub
sub
dec
loop
sbb
cmp
lock
cmp
cmpsb
shr
jl
add
pop
pop
data16
sbb
hlt
mov
xchg
lret
jne
cmc
mov
cmp
test
call
pushf
pusha
lea
jne
pushf
mov
mov
push
lea
jmp
add
dec
push
je
inc
push
add
add
in
addr16
pushf
push
lea
call
jp
jb
sbb
movzbl
rcl
shr
push
lea
imul
btr
lea
rol
cmc
sar
stc
mov
cmc
lea
movsbw
push
ror
bswap
shrd
mov
adc
sar
mov
push
cmp
push
push
jmp
and
push
pop
std
loopne
andl
in
xor
roll
mov
addr16
test
adc
into
aaa
lock
cmp
scas
and
or
das
mov
ret
pop
inc
dec
in
jg
sbb
movb
jmp
push
shr
push
movb
pushf
pusha
lea
jmp
add
push
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
add
gs
inc
outsb
push
inc
imul
gs
je
inc
inc
inc
add
add
je
arpl
gs
bound
arpl
xchg
pushf
mov
cwtl
push
lahf
call
mov
push
pushl
pushf
pushl
ret
add
inc
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
test
inc
jmp
add
fs
add
pushf
movl
jmp
add
dec
popa
jo
imul
insb
add
add
je
outsb
jne
je
insl
dec
outsb
outsw
inc
add
adc
pop
add
cmpb
sldt
add
shl
test
sub
bsr
ror
add
shl
adc
add
mov
pusha
mov
inc
add
mov
bt
pushf
pushf
repnz
pushl
call
add
push
gs
gs
inc
outsl
insb
outsl
jb
lea
jb
test
push
bsr
push
mov
rcl
adc
mov
lea
jp
bt
shr
pushf
adc
bt
sub
pushl
shl
cmp
cmc
mov
test
cmp
pusha
test
cmp
mov
jmp
jbe
dec
push
std
loopne
push
push
lret
xchg
movl
pop
lret
lea
inc
rcll
inc
mov
mov
push
xchg
sbb
mov
loope
jecxz
pushf
push
xor
jmp
insb
in
int
iret
dec
pop
pop
lret
leave
inc
mov
decb
out
pusha
pop
cmpsl
cmp
or
inc
mov
sbb
loopne
dec
jo
in
bound
mov
dec
stos
pop
push
stos
out
inc
in
fildll
jmp
addl
mov
xor
cmp
scas
ljmp
mov
cmp
and
xchg
sub
imul
sti
popf
cli
push
cmp
addl
imul
and
insb
sbb
in
in
inc
in
jae
out
outsl
cwtl
sbb
pop
outsb
int3
cs
xor
into
inc
sbb
in
cmp
in
jle
mov
jg
xor
xchg
movsl
cmpsl
stc
sbb
pop
jns
add
xchg
mov
je
mov
arpl
and
push
loop
and
fmuls
incl
push
push
mov
push
jne
and
dec
scas
sbb
sbb
leave
ljmp
hlt
dec
push
sub
cmc
xor
in
ret
or
arpl
out
mov
cmp
and
sub
inc
enter
sub
dec
inc
push
adc
ds
jbe
jns
notl
sbb
nop
mov
cs
and
rcrl
in
jns
mov
xchg
mov
je
adc
pop
pop
xchg
call
or
aam
sub
cltd
repnz
popa
bound
mov
cmp
cmp
or
lock
subb
cmc
dec
push
sti
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
sbb
loopne
bswap
notl
insl
mov
hlt
sub
call
sub
lgs
sbb
or
std
jge
xor
fdivs
sbb
jb
scas
mov
inc
sbb
subb
and
dec
repnz
jns
xchg
dec
mov
jle
cli
pop
pop
pushf
xor
inc
in
mov
sbb
loopne
adc
jl
and
loopne
mov
pop
mov
pop
hlt
aad
ret
cmp
and
inc
cmp
cmp
or
mov
and
sub
outsb
sahf
ret
xor
xchg
sbb
sub
mov
dec
cmp
sbb
cmpsl
push
fnsave
mov
clc
push
sbb
jl
arpl
scas
js
mov
and
dec
into
dec
into
rcrb
push
aaa
sub
jle
mov
pop
sbb
loopne
jmp
jg
add
gs
pushf
mov
cmpsb
loope
cmp
test
inc
nopl
pusha
xor
xchg
xchg
add
adc
imul
movsl
lds
ja
push
cmp
into
mov
mov
push
mov
pop
roll
stc
mov
std
rolb
or
pop
push
xchg
in
out
fcmovnb
clc
push
and
hlt
jle
arpl
imul
cltd
mov
fildll
pushf
add
mov
dec
test
dec
jmp
fadds
add
loopne
out
mov
cmp
leave
cmc
pop
or
inc
leavew
cmp
into
sub
add
mov
dec
rclb
adc
popf
adcb
pop
xor
or
dec
setns
test
jl
push
xchg
pop
testl
ficoms
mov
or
dec
nop
jle
inc
or
lcall
test
dec
jmp
les
sbb
loopne
adc
mov
jp
sahf
push
cmc
inc
adc
addl
stc
int
fdivs
jecxz
lea
or
inc
ret
jl
jne
dec
sub
pop
inc
push
mov
push
iret
sbb
dec
and
xor
fstl
add
dec
in
movsb
rorl
add
int3
mov
setno
call
add
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
fs
call
pushf
jmp
movl
jmp
jmp
fs
je
jae
in
cmp
jle
arpl
lahf
push
mov
out
sbb
rolb
daa
data16
iret
xlat
xor
nop
std
in
sbb
jnp
fbstp
lahf
mov
adc
stc
out
pop
cwtl
dec
test
icebp
addr16
cld
sub
mov
cwtl
test
push
ror
xor
jp
bound
jne
pusha
and
xorb
ja
call
movsl
aas
stos
cli
imul
pop
jmp
roll
or
push
pop
adc
nop
mov
add
fiadds
push
fs
add
inc
leave
inc
push
sbbb
jmp
cmpsl
pop
gs
in
push
cmp
push
mov
pop
shll
or
sub
aaa
add
lcall
lods
mov
clc
ret
mov
push
mov
popa
xchg
lret
mov
fmull
cmc
leave
les
loop
lcall
stos
clc
adc
add
data16
fwait
mov
xor
push
sbb
int
movsl
dec
stos
mov
inc
sbb
inc
sbb
sub
add
cmp
pop
ja,pn
dec
lock
mov
addr16
test
push
add
xchg
or
loope
dec
sub
iret
mov
clc
mov
dec
xchg
xchg
sub
xor
cmp
out
mov
addps
mov
jno
xchg
dec
jnp
jmp
movsb
xor
xchg
out
xor
faddl
mov
out
jmp
das
js
mov
inc
in
adc
and
mov
fbld
stos
mov
scas
cwtl
repz
addb
fstps
cld
pop
push
jecxz
jo
cmp
adc
pop
subl
push
in
inc
mov
push
pushf
add
cli
xchg
sub
js
mov
aam
mov
js
push
jle
jg
sbb
pop
bound
mov
cld
jnp
out
cmp
test
enter
lods
xchg
adc
and
imul
lea
lcall
xchg
and
pop
mov
xchg
cmp
int
cbtw
xor
imul
jnp
test
out
xchg
mov
and
loope
into
inc
mov
repz
cmp
test
jbe
or
dec
push
ja
pop
stos
rcll
or
cmpsl
xchg
dec
ss
mov
xchg
insb
adc
and
movsb
andb
xchg
mov
sar
xor
mov
bound
mov
stos
cmpsl
fisubrs
lret
imul
cmp
sub
jmp
lock
cmp
adc
dec
mov
add
xlat
mov
repnz
xchg
fimull
lret
nop
sub
jns
or
xor
imul
and
loope
mov
pop
mov
sub
mov
cmpsl
shlb
add
out
scas
sub
jne
xlat
pop
push
push
test
pop
gs
xchg
popa
in
inc
lds
xchg
mov
mov
test
movsl
stos
insl
adc
jp
and
add
dec
sti
int
dec
and
stos
push
ret
inc
je,pn
xor
cmc
test
std
cmp
mov
mov
icebp
sub
sub
aam
rcll
hlt
loop
fwait
sub
loope
xchg
mov
mov
adc
cld
pop
rorl
dec
mov
ss
orb
mov
xchg
sub
ret
sti
aas
adc
push
jno
mov
sub
xchg
pop
mov
test
dec
test
shll
pop
mov
push
xorb
cmc
imul
js
xor
jb
mov
mov
add
and
push
add
xor
aas
pop
scas
or
pusha
inc
mov
jmp
push
jmp
out
mov
xchg
mov
std
movsl
push
pushf
inc
mov
in
sub
out
or
nop
test
mov
popa
popa
pop
pop
or
fwait
sbb
xor
repnz
loopne
insl
adc
jecxz
test
or
mov
adc
xor
and
cmp
xor
clc
movsb
mov
cmp
add
inc
or
and
add
or
pusha
iret
movsb
jmp
mov
dec
ljmp
mov
adc
cli
paddd
xor
mov
jecxz
repz
xchg
fbstp
arpl
movl
ja
jmp
mov
mov
ret
imul
loopne
inc
mov
jae
enter
loopne
or
and
sub
fidivrl
xor
push
pop
dec
mov
insl
dec
ss
repz
jno
sub
or
cmp
scas
cmpl
loopne
xchg
inc
xor
into
das
sub
dec
outsb
dec
mov
mov
sub
cmpsl
stos
jle
ljmp
mov
inc
mov
mov
sbb
ret
inc
cmp
cmp
hlt
inc
int
stc
pop
addl
loop
ss
mov
or
out
dec
or
es
or
mov
mov
pop
mov
test
and
mov
inc
arpl
xor
insb
adc
mov
and
mov
repz
push
mov
mov
mov
sbb
xchg
stc
jnp
das
jne
and
fildll
mov
push
push
inc
mov
loop
mov
gs
mov
push
popf
cmp
test
outsl
fs
test
outsl
ljmp
or
lock
jb
iret
cmpsl
and
movsb
mov
vminpd
sbb
ss
inc
mov
mov
jb
adc
movsl
cmc
pop
call
or
or
jmp
pop
push
mov
jnp
mov
int
enter
rorb
cmpsb
into
mov
pushf
inc
movsl
push
and
mov
lea
rcrb
sub
stos
jb
cmp
scas
jne
mov
ss
aas
insb
call
int
inc
lcall
into
dec
stc
fucom
jnp
or
dec
inc
hlt
adc
mov
jg
add
or
jo
push
movsb
mov
mov
stos
mov
jno,pn
jp
dec
push
xor
mov
out
or
add
sbb
dec
pop
cmp
push
jbe
ss
jl
test
sahf
xor
in
popa
movsb
sub
mov
pop
sti
add
sub
add
mov
adc
jle
lcall
shlb
pop
imull
or
test
cmpb
sbb
mov
push
dec
leave
cmp
gs
dec
stc
xchg
clc
xor
add
stc
in
sbb
arpl
fcomi
pop
adc
or
clc
mov
popf
jno
xor
fimuls
in
ss
xor
cld
cmpsb
pop
aad
test
lods
cmp
in
adc
cmp
jmp
xor
mov
mov
lret
ret
lods
add
push
clc
xchg
xchg
cmp
leave
shlb
fistpl
push
rorb
insl
xchg
push
rcrl
js
xorb
pusha
mov
inc
mov
notb
test
mov
xchg
sbb
pushf
lcall
jg
fcompl
jmp
push
sbb
sub
cmp
xor
pusha
enter
jnp
push
lcall
adc
popa
lret
subl
das
les
adc
mov
push
dec
pavgb
sbb
imul
sub
sbb
sub
xlat
cmpsl
aam
mov
inc
dec
sbb
sub
enter
jg
test
mov
push
ds
jmp
add
mov
fsub
pusha
lcall
mov
js
out
inc
fucomip
fiadds
gs
int
nop
inc
ret
faddl
pop
adc
into
cmp
insb
jg
pop
mov
aam
imul
ljmp
dec
dec
jg
sbb
pushf
inc
popf
sbb
sub
iret
fiadds
scas
shrl
js
inc
dec
and
sbb
testl
in
out
xchg
insb
push
lea
ljmp
je
lahf
push
lret
mov
loop
testb
mov
pop
bnd
test
icebp
jg
clc
or
xchg
std
mov
add
and
mov
idivb
cmp
inc
jnp
inc
test
rorl
aad
sub
mov
xlat
lods
dec
bound
lcall
lock
add
mov
push
in
fists
push
xchg
out
lea
movsb
ffreep
cli
arpl
scas
and
insl
ret
gs
into
jl
fscale
cs
cmpsb
jge
arpl
sub
fwait
sub
shl
mov
xor
add
test
jne
or
ficompl
ss
push
bound
sarb
fimull
nop
fistpll
sbb
add
push
add
mov
jmp
mov
icebp
or
mov
sub
movsb
lahf
pop
jno
mov
test
shl
scas
insl
mov
adcb
outsl
js
and
pop
fcomps
add
imul
les
jmp
fbld
cltd
inc
mov
jle
dec
cli
push
std
shrb
out
test
sbb
pushf
clc
addr16
lret
lock
out
outsl
mov
pop
xchg
mov
push
cld
sbb
lds
vunpcklpd
jle
lcall
bound
stc
into
movsb
mov
flds
mov
push
arpl
clc
sbb
pop
pusha
pop
xor
sbb
daa
sub
dec
dec
dec
mov
add
pop
pop
mov
pop
dec
jno
enter
or
out
jne
icebp
sub
add
mov
ds
hlt
dec
cmovae
pop
fwait
sbb
xchg
loop
aas
mov
stos
cmp
and
mov
jle
ljmp
push
ja
adc
std
pop
aam
sub
aas
outsl
sub
in
add
sub
jecxz
loop
jno
stc
out
mov
xlat
push
sti
cmp
add
push
andl
lret
cmp
xchg
movsl
outsl
add
and
push
cmp
or
outsl
fmulp
xor
repz
aaa
scas
push
cmc
push
inc
rcrl
jo
test
dec
cwtl
mov
movsb
mov
nop
dec
mov
adc
test
adc
test
and
aaa
add
or
lahf
pop
pop
xor
sbb
scas
mov
and
xor
psrlq
xchg
sub
movsl
push
repz
jnp
pop
push
inc
in
cmp
push
jecxz
sbb
aas
pop
lahf
push
push
inc
testb
fs
ret
movsl
jb
dec
and
sbbl
mov
out
cmp
es
mov
pop
jge
je
xchg
neg
cmp
sbb
lock
jbe
jne
bound
push
inc
movsb
xlat
cmp
jbe
inc
cmp
lret
or
jge
popf
adc
sbb
jno
stos
loop
pop
inc
push
hlt
lock
pop
cld
pop
cmpb
push
sbb
mov
stos
jge
dec
xchg
movq
mov
add
das
cmpsb
adc
xchg
jge
test
mov
push
cmpsb
push
insb
xchg
arpl
decl
arpl
sub
out
sti
into
jg
jbe
shrl
imul
imul
lea
cmp
pop
jl
xor
lods
shrb
pop
sbb
sahf
jge
imul
cmpsb
jl
mov
xchg
rorl
adc
xor
sbb
sti
or
pop
adc
xor
incb
cmpsb
in
loopne
and
inc
sbb
sub
lahf
int
mov
cwtl
lods
push
ret
jne
xor
movb
mov
jb
shrl
xchg
test
fxch
addr16
xor
add
push
push
aam
xor
out
mov
inc
out
sti
cmpl
xchg
scas
mov
jno
je
dec
div
inc
or
jg
xor
mov
cmp
enter
push
mov
adc
xchg
push
hlt
push
xor
jl
repz
or
adc
xor
ljmp
in
xchg
cmpsl
add
shll
insb
fists
icebp
sahf
ljmp
mov
ficomps
subl
dec
sbb
and
jl
pop
pop
mov
int3
and
mov
mov
lahf
inc
mov
adc
cld
lahf
dec
call
push
push
int3
pop
and
daa
mov
dec
cmp
xor
pusha
jnp
into
jmp
pop
mov
test
xchg
sub
pop
adc
mov
stos
sbb
test
ja
into
les
aas
movsl
insb
adcl
fsubp
lods
and
sarb
lret
dec
sub
cs
jp
adc
int3
jbe
push
movsl
in
inc
test
aam
mov
dec
jo
lea
das
loopne
mov
jnp
mov
in
subb
sub
lock
cmp
repnz
and
cwtl
adc
mov
call
sub
and
pop
insl
mov
sbb
jbe
xor
pop
inc
and
arpl
add
xor
aas
xor
call
push
jmp
mov
inc
cltd
ror
insb
jnp
mov
fdivrl
adc
cmp
xchg
ljmp
mov
adc
push
mov
mov
push
mov
xchg
movsl
mov
outsb
hlt
lods
cmp
sub
mov
and
mov
adcb
les
stos
xor
add
mov
or
movsb
mov
pushf
adc
les
fdivp
ret
mov
jl
in
mov
out
jle
sbb
lock
mov
mov
sbb
cmp
jecxz
mov
ret
ja
outsb
imul
mov
mov
mov
bound
or
and
xchg
sahf
pop
inc
sbb
das
in
jno
aaa
mov
mov
repz
push
rorl
lret
mov
pop
jne
xchg
ret
adc
in
imul
pop
cs
inc
ficoml
add
xchg
adc
sub
inc
and
add
leave
movb
imul
mov
lret
fldenv
pop
fnsave
fstps
pop
add
out
pop
sub
mov
mov
cmp
adc
popa
lret
adc
xor
fldl2t
mov
and
sub
pop
imulb
mov
dec
sub
out
scas
rorb
xor
jmp
outsl
mov
stos
int
jne
mov
popa
testl
aad
cld
push
jnp
jns
sti
std
jge
and
out
add
sbb
fs
sarl
out
ficoms
mov
stos
mov
pusha
pop
adc
mov
dec
jge
test
pusha
fcoms
adc
shll
lahf
sbb
and
and
xchg
or
je
loope
ljmp
outsb
bound
cli
ljmp
push
hlt
fdivl
fldt
jge
mov
pop
mov
bound
push
sbb
int3
iret
push
adc
push
push
or
mov
sub
dec
lods
dec
sbb
mov
mull
pop
mov
dec
ret
aaa
data16
sbb
movzwl
hlt
adc
inc
test
mov
inc
fdivrl
pop
jecxz
adc
rcr
mov
rclb
rcll
in
fildl
int3
add
jns
decb
sub
jo
outsl
sbb
lahf
mov
hlt
add
jge
xchg
jb
shrb
loope
loop
cwtl
bnd
jo
dec
mov
shlb
push
mov
push
out
aad
je
pop
inc
and
ja
std
int3
test
mov
lcall
lds
andl
push
jmp
dec
push
xor
mov
push
mov
fwait
jmp
mov
cmpsb
ds
adc
and
enter
and
mov
mov
mov
mov
mov
inc
or
mov
js
sub
outsb
and
xchg
inc
sahf
xchg
es
dec
testl
sbb
mov
decl
notb
cli
push
and
popf
int3
xchg
push
mov
std
sbb
jne
xor
fnop
imul
push
mov
imul
and
sti
fmull
rclb
jae
pop
push
mov
flds
pop
jae
cltd
push
jo
scas
std
pop
imul
fdivr
ljmp
xor
add
jl
loop
xor
imul
mov
in
test
mov
rorl
push
stos
pop
lcall
xchg
int3
pop
gs
imul
fstp
rorl
es
mov
rorb
out
out
push
insl
mov
mov
cmp
hlt
addr16
xcrypt-ctr
cmpsl
cwtl
bnd
sahf
mov
xchg
push
loop
jo
outsb
pop
leave
jl
or
cli
fcoml
pushf
mov
xor
iret
ret
sti
mov
push
or
iret
adc
mov
sbb
mov
loopne
aad
fs
mov
mov
pop
mov
cld
jb
cli
ds
jge
dec
mov
dec
push
or
inc
pop
sbb
ds
test
in
clc
pusha
push
xlat
mov
jb
push
sti
push
mov
sub
in
dec
mov
jne
xchg
movsl
lock
adc
pop
lea
orb
fs
mov
out
outsb
dec
xchg
insl
and
sub
push
mov
cmp
inc
sbb
ljmp
popf
push
add
scas
mov
in
dec
or
inc
sbb
repz
mov
jbe
pop
sarb
push
or
push
clc
loope
bound
inc
lock
pop
cmp
test
mov
int3
outsb
nop
frstor
xchg
movsl
mov
inc
mov
cltd
fdivr
daa
pushf
dec
sbb
jo
roll
push
sub
inc
adc
std
push
add
and
leave
inc
outsb
ss
gs
sahf
dec
aas
mov
sar
pushf
fwait
in
movb
loope
mov
push
jae
mov
mov
jnp
cmp
lods
sbb
adc
jns
jbe
scas
add
pushf
aam
cmp
xlat
movsb
mov
mov
dec
loop
fistpl
sub
fnstcw
adcb
sbb
adc
adc
lret
inc
or
lret
movsl
pop
xor
pushf
ret
pop
fldenv
les
dec
pop
lahf
repz
sbb
push
cwtl
int3
sbb
insb
xor
pop
fs
leave
jmp
rcl
or
into
in
push
sub
cmp
mov
mov
movsl
xchg
dec
and
out
mov
call
pop
sbbl
dec
jno
bound
push
fwait
stc
lret
stos
inc
adc
leave
loop
push
cmc
jne
jmp
push
insl
negl
add
mov
push
popa
jg
out
xchg
movsl
mov
fwait
mov
inc
lods
sbb
xchg
lock
scas
sar
sbbb
and
sbb
mov
sbb
add
adc
ss
sarb
dec
mov
xorl
enter
adc
mov
pop
les
add
pusha
bound
lret
lcall
jb
sub
mov
sub
and
cmpsl
jae
push
mov
ja
adc
stos
xor
mov
sbb
inc
mov
ljmp
jns
test
out
adc
push
movsl
sbb
pop
push
test
call
imul
out
dec
adc
mov
cmp
ljmp
mov
cmc
jnp
xchg
sub
fs
xchg
fidivrs
mov
cmp
loope
out
scas
push
fcoms
pop
sbbl
jg
pop
testl
ss
lea
int
repnz
add
pop
icebp
push
leave
xor
xor
xchg
mov
mov
sbb
xchg
jne
repnz
inc
xor
leave
push
push
push
add
xor
aad
push
icebp
addr16
push
in
cmp
stos
pop
dec
cmp
dec
int
mov
cmovg
shrb
jb
jnp
adc
sahf
jmp
jecxz
pop
imul
mov
dec
insb
mov
scas
dec
cld
and
outsb
inc
lock
jge
jmp
int
adc
incl
jbe
or
cwtl
jl
or
cmp
or
imul
loopne
sbb
stos
repnz
dec
shll
lahf
mov
shl
popf
repnz
in
and
mov
sahf
std
pop
jge
lret
repnz
jne
outsl
inc
arpl
ret
mov
pop
xchg
jecxz
daa
jge
test
scas
data16
icebp
inc
xchg
mov
loopne
pop
movsb
outsl
scas
inc
xor
and
push
subb
xchg
jo
dec
cltd
jmp
mov
push
push
enter
cmp
inc
adc
mov
rcrb
mov
jno
xchg
xchg
notb
je
jge
sarl
cmp
add
sbb
sbb
popf
iret
call
xchg
pusha
int
loop
adc
dec
xor
fsubr
nop
lock
fldl
push
repz
rolb
shlb
cwtl
cli
push
imul
inc
andb
mov
push
jnp
clc
filds
scas
mov
mov
lret
xchg
insl
cwtl
cmp
fadds
jmp
ljmp
pop
test
lret
jmp
and
ja
rorb
rcrl
cmpsb
aad
push
xor
pop
push
mov
out
jae
lret
in
push
push
cwtl
sub
imul
jne
scas
aas
jae
push
filds
push
mov
dec
jg
std
mov
stos
pushl
xor
shll
sub
adc
lret
outsl
and
xor
dec
pop
or
jecxz,pn
sbb
sub
in
sbb
outsb
das
cmp
iret
or
xchg
push
outsb
mov
popa
push
shrb
xchg
sbb
repz
cmp
stc
push
popf
dec
xor
cmp
mov
lret
out
mov
into
jo
jecxz
loope
rcll
pusha
data16
mov
daa
lods
push
mov
jo
pop
cmpsl
rolb
rep
pushf
out
mov
xor
pop
cmc
jle
and
jge
push
dec
mov
dec
dec
inc
sub
xchg
dec
cmp
icebp
sbb
je
jo
test
or
les
push
xchg
or
cmp
fiaddl
and
lret
pop
xchg
mov
pop
aaa
inc
call
popf
push
int3
movsb
push
sti
cmp
add
lcall
ret
mov
jle
sub
xchg
rclb
ret
mov
mov
sbb
mov
lds
sub
in
in
xchg
mov
add
ss
aad
iret
mov
sub
popf
pop
or
xor
jmp
add
int
ss
mov
call
push
pop
out
loope
sbb
add
mov
stos
adc
jae
adc
shl
ljmp
cs
fsubrs
push
adc
xchg
enter
inc
and
insb
cmp
pusha
jo
dec
loope
push
scas
fldt
xchg
out
inc
imul
sub
test
ss
cmp
push
popa
adc
sub
das
dec
xlat
cmp
inc
dec
fld
jl,pt
inc
dec
bound
adc
cmpsl
inc
dec
mov
xchg
add
cmp
test
mov
fadds
scas
movsl
jmp
xchg
push
inc
add
cmp
push
xchg
lret
sub
push
fidivrl
adc
fdivrl
pop
dec
mov
mov
movsb
jl
nop
adc
sub
xchg
cli
sbb
xchg
add
add
mov
ljmp
xchg
or
fwait
lcall
fnsave
mov
sahf
divb
and
xchg
fsts
rcl
das
jmp
cmp
nop
fs
cmpsl
test
repz
jge
fwait
xor
psrad
fcoml
sahf
pop
pop
scas
push
or
mov
mov
jb
clc
xchg
mov
scas
sbb
and
pusha
xor
movsl
test
pop
jbe
aam
pop
inc
pushl
xor
incb
push
mov
xor
int3
imul
add
std
adc
flds
out
scas
addr16
rcrl
adc
ja
sbb
inc
xor
cli
sbb
push
cltd
add
jns
je
xchg
dec
add
or
pop
stc
sbb
ret
test
add
adc
jmp
lea
mov
rcrl
loope
aaa
inc
push
push
imul
mov
xor
push
fisttpl
test
rcrl
xchg
insb
aaa
mov
sub
mov
inc
aam
insb
insb
cmpsb
jb
repnz
and
pop
push
in
pushf
aad
lods
lcallw
xlat
loope
xchg
inc
add
cmp
xchg
iret
mov
dec
cltd
sbb
or
xlat
scas
dec
push
add
orb
hlt
imul
or
xor
mov
in
scas
sahf
mov
push
xchg
sub
imul
push
jb
imul
fmull
aas
cld
in
push
mov
iret
sub
sub
lcall
cld
rol
pushf
or
in
pop
test
xchg
in
testb
out
sbb
push
mov
or
mov
mov
in
xor
push
cmpl
lea
std
and
cs
pusha
shrl
inc
in
xor
or
mov
add
jp,pt
sahf
popf
push
fwait
push
cmp
push
cwtl
add
hlt
adc
mov
pop
or
sub
jo
and
rolb
cwtl
and
loop
adcb
sub
loopne
or
mov
lock
repz
lds
es
js
mov
cmp
stc
fs
push
call
fldt
lcall
push
xorl
push
lret
cmpsl
fimull
inc
test
pop
xor
fidivrl
xor
add
sub
inc
shr
add
pop
dec
jb
gs
mov
inc
cmp
inc
sbb
push
sbb
mov
rcrb
pusha
das
and
adcb
mov
push
xor
or
or
pop
outsl
test
jp
mov
sar
sbb
adc
dec
sbb
popf
mov
jae
lcall
into
mov
or
mov
or
jg
adc
xor
test
insl
es
pushf
push
fists
je
ret
push
sub
or
negb
cmp
xor
xor
inc
pop
mov
xchg
mull
jb
lahf
dec
stos
jo
push
sub
popf
sbb
fildll
fdivrs
sti
pushf
fistpl
movsb
mov
arpl
call
leave
or
cmp
fnstcw
pop
or
ret
xchg
lea
mov
or
stos
sub
pop
adc
jmp
outsb
cmp
test
dec
push
loop
mov
jo
jge
and
xchg
jg
outsl
mov
popf
xchg
or
pop
xchg
dec
and
dec
in
mov
xchg
lcall
loopne
aam
or
addr16
dec
sub
dec
repz
xchg
cmpsl
xchg
call
fwait
shll
sti
mov
aam
mov
scas
pusha
cmp
mov
pop
fsubr
sub
nop
pop
and
pop
in
es
mov
inc
out
adc
adc
in
jmp
sbb
test
pop
cmp
mov
push
sub
mov
cmpsb
stos
fisttpl
lret
mov
mov
push
cmp
jmp
dec
fwait
cmp
cmp
sub
jg
and
mov
iret
jnp
hlt
out
lcall
push
gs
pop
and
dec
jb
mov
mov
dec
aaa
mov
xor
and
xchg
hlt
mov
push
dec
xor
jnp
std
lret
mov
pusha
or
or
rcll
test
mov
ljmp
jbe
clc
dec
mov
movsl
fmuls
sub
popf
ret
pop
test
scas
frstor
sub
mov
cmpsb
pop
mov
movsl
add
into
ljmp
movsb
idiv
jp
inc
lock
stos
loop
loope
out
jmp
sub
test
jl
push
adc
or
fbld
jns
call
mov
adc
fstp
sub
mov
dec
aad
jne
mov
iret
xor
cltd
stos
hlt
sahf
mov
lods
or
cmp
mov
les
jge
lock
out
xor
rcrl
sub
mov
sahf
daa
mov
decb
lret
icebp
jmp
test
push
js
lret
std
popa
fs
mov
inc
xor
in
sbb
or
or
in
test
in
fwait
xlat
mov
aaa
push
sbb
roll
test
xchg
lods
rcrb
dec
pop
pushf
lods
pop
push
lcall
mov
dec
ret
out
inc
inc
jno
cmp
xchg
sbb
jb
loop
push
loope
jecxz
push
pushf
and
cmpsl
das
insb
xchg
sub
insl
xor
repnz
xchg
inc
sti
pop
jl
shll
insl
xchg
pop
lods
mov
or
inc
aad
in
mov
iret
out
push
pop
sar
xor
fcoms
fs
add
mov
lods
push
cmp
lock
xchg
daa
mov
popfw
jno
dec
fisttps
inc
ljmp
jl
sbb
test
fadds
lret
das
inc
ss
cmpsb
cmc
repz
push
and
xchg
or
add
sub
or
sbb
xor
aas
cld
push
inc
mov
lock
pop
sub
xchg
and
lock
mov
sbb
dec
inc
push
fistl
ds
call
out
jb
pop
lea
lcall
sbb
leave
shll
lret
push
mov
hlt
scas
mov
mov
cs
popw
out
movsb
sub
or
in
jne
aam
pusha
fists
xchg
movsl
mov
cmp
dec
mov
inc
daa
lahf
adc
and
mov
mov
rorl
inc
lret
adc
call
call
daa
pop
pop
inc
lret
xchg
mov
jg
fwait
mov
fcoml
fs
lock
cld
sbb
push
pop
jl
dec
jns
pop
test
add
or
push
or
icebp
iret
stos
popf
inc
cmc
scas
ret
jge
sub
xchg
xchg
mov
fsub
jmp
pusha
sub
ljmpw
aaa
cmpsb
xlat
imul
add
adc
hlt
pop
mov
xchg
cltd
test
dec
sahf
subb
or
test
fs
rorl
fimull
fsubrl
sbbb
xor
test
addr16
out
push
cmpsl
cmp
pop
decb
pop
dec
repnz
jb
jmp
lds
lret
cld
lds
aaa
mov
mov
fs
int3
cmp
lock
lcall
cld
fcomp
rorl
inc
mov
adc
xor
je
mov
and
mov
movsb
push
pop
mov
push
dec
out
dec
sub
xor
or
fmull
mov
inc
sbb
jae
pop
mov
inc
pmaddwd
cwtl
add
cltd
pop
push
in
mov
pop
test
lods
adc
xchg
push
int3
popf
xor
lfs
dec
popf
mov
sarb
data16
mov
arpl
fsubrs
xchg
mov
sbb
call
lea
xchg
bound
pop
xor
pop
adc
notb
fsubrs
or
sub
out
xchg
jp
lcall
cld
jnp
mov
pop
stos
fistpll
xchg
loope
adc
cltd
jg
dec
les
ret
les
add
mov
in
or
mov
mov
addr16
aad
inc
mov
xchg
into
inc
mov
push
imul
cs
iret
shrb
negl
or
data16
inc
adc
clts
out
pop
jl
xchg
pop
xchg
xchg
adc
test
xchg
clc
fucomi
lods
and
pop
mov
fldl
aaa
icebp
pushw
loope
ja
inc
sbb
cmc
inc
jae
inc
add
cmp
push
shll
arpl
icebp
xchg
lods
and
dec
push
lret
in
adc
jb
js
adc
subl
mov
sbb
mov
sbb
adc
fdiv
cmpsb
push
mov
mov
ds
push
sbb
lds
and
mov
test
cmpsb
or
dec
outsl
shl
mov
add
ret
sbb
push
or
jg
pop
fidivs
mov
adc
outsl
into
rcl
insl
aaa
mov
fidivs
push
movsb
loope
lods
fistps
lret
pop
mov
mov
rcr
mov
loope
xlat
push
cli
gs
mov
mov
movsb
dec
add
and
pushf
fstl
push
loope
push
or
xchg
mov
ljmp
adc
divl
iret
je
xchg
mov
cltd
sarl
jle
lret
sahf
mov
jmp
out
or
jmp
cmpsb
or
or
pushf
push
pop
stc
gs
test
inc
adc
orb
push
mov
sbb
and
ret
outsl
lcall
inc
xor
add
out
test
out
shll
mov
leave
inc
out
cmp
xor
adc
xchg
sbb
jns
mov
cld
repz
and
push
es
mov
xchg
ja
dec
test
push
in
adc
mov
and
cmpsb
mov
adc
ljmp
fcompl
jecxz
sub
mov
filds
fisttpl
jp
mov
cmp
mov
test
adc
in
mov
jecxz
lret
aas
sti
clc
mov
or
sahf
gs
fmull
cmc
repnz
iret
mov
repz
repz
pop
jl
cwtl
and
clc
cmp
jb
inc
je
mulps
imul
mov
jl
fwait
xor
inc
test
xchg
pop
adc
lcall
cs
fstl
cli
aam
jbe
jns
dec
xchg
sbb
testb
and
push
mov
mov
pop
or
push
mul
add
cmp
cmpl
jae
outsl
stmxcsr
cmp
pop
jbe
fcoms
lods
les
mov
data16
dec
xlat
cmc
insb
lahf
fadds
and
cmp
jbe
fs
adc
popf
shr
adc
mov
cmpsl
pop
cltd
xorb
movsl
inc
sub
mov
jl
jl
jbe
ja
out
sbb
clc
inc
mov
cld
mov
inc
push
shll
in
ljmp
xchg
mov
icebp
out
mov
ss
jle
inc
lods
xor
enter
dec
lds
xchg
fadd
bound
cli
pop
out
mov
incb
repnz
inc
jl
sbb
pop
ja
push
dec
cs
inc
aad
adc
inc
pop
stos
ljmp
sbb
lods
fnstsw
ljmp
mov
sti
dec
ret
out
lcall
sub
popf
mov
adcb
movl
sub
cmp
push
js
add
or
mov
not
pushf
xchg
in
jp
ss
cmc
jle
mov
aas
notl
ja
cmovl
push
jns
dec
mov
mov
xor
and
stos
pop
inc
gs
xchg
aad
pop
bound
loop
inc
test
fisubs
inc
jmp
xlat
js
mov
mov
movsb
hlt
mov
adc
lcall
sub
test
xchg
orl
xchg
in
mov
or
ficoml
pushf
arpl
pop
stc
mov
cmp
sub
mov
int3
jbe
pop
push
jnp
aas
gs
aaa
or
mov
mov
cli
test
cmpb
push
inc
test
data16
jle
mov
xchg
mov
shll
sti
lea
pop
xchg
pop
out
jge
add
lock
adc
loopne
dec
cmp
mov
ja
ret
arpl
dec
push
dec
lea
sbb
xchg
add
data16
fsts
into
cmc
into
lock
mov
add
cs
lret
jmp
cmp
int
xchg
xor
sbb
shrb
outsb
js
rcll
or
and
or
stos
dec
mov
sbb
inc
adc
fbstp
test
cmpsl
cmc
ljmp
sbb
les
rcr
add
test
lock
daa
vorps
sbb
test
and
jle
cli
shl
mov
imul
push
inc
mov
iret
sub
adc
adc
enter
pushf
jo
stos
sbb
insb
lds
dec
popf
dec
fimull
dec
inc
test
pusha
sbb
xor
jb
mov
adc
push
repz
fwait
dec
aas
sub
lds
mov
xchg
or
xchg
out
sub
inc
xchg
shlb
jmp
stc
cmc
adc
xchg
inc
xchg
stc
mov
arpl
ss
in
mov
sbbb
test
sarl
jmp
or
mov
arpl
into
pop
xor
mov
cmp
lret
fisubrl
mov
mov
rcl
out
xor
jne
mov
mov
cmp
inc
xchg
outsl
push
sarb
inc
fs
rclb
dec
jne
loopne
daa
orl
mov
insb
push
adc
mov
mov
cs
add
xchg
inc
subb
inc
mov
push
adc
rol
loop
pop
dec
jmp
mov
push
adc
mov
in
xor
adc
movsl
rclb
mov
pop
pop
jbe
inc
aad
stos
scas
push
jl
xchg
inc
jle
cmp
fisubrl
mov
push
stc
cmp
pop
xchg
sbb
pop
mov
push
push
mov
cmpl
jecxz
jmp
pop
cwtl
mov
lcall
or
fcomp
insl
sar
mov
cwtl
mov
jnp
push
aaa
sbb
mov
mov
dec
xlat
mov
fmul
pop
cmc
int
xchg
imul
push
jle
fdivl
call
adc
cld
push
ret
jmp
xor
adc
lcall
mov
jecxz
rcrb
inc
aad
sub
dec
mov
ret
pop
in
cmc
push
aas
dec
ss
mov
mov
push
or
lcall
into
xor
push
bnd
push
lock
rol
out
shll
or
push
mov
popf
mov
scas
fcomps
adc
pop
mov
adc
popf
in
xchg
cmp
mov
lea
jo
aaa
lea
cmp
shl
ds
lods
int3
lahf
push
inc
fnstsw
enter
sbb
dec
les
mov
adc
push
lret
jecxz
sysenter
ret
sbb
mov
repnz
mov
dec
mov
mov
repnz
add
add
mov
js
lods
mov
aad
adc
ret
xchg
ljmp
cld
jbe
call
and
mov
fidivs
add
leave
ja
mov
xchg
jo
mov
lock
adc
inc
hlt
bnd
iret
movsb
ds
imul
test
sbb
xor
cld
iret
stc
cmp
lods
lods
fnstcw
out
lcall
xchg
jno
leave
rol
int3
std
fsubs
in
and
sbbl
jno
jne
sbb
subl
push
leave
inc
fisubrl
movsb
pop
cltd
and
xor
push
cmc
in
xchg
aam
cltd
jno
push
mov
adc
add
in
sti
xchg
push
pushl
addr16
fisttps
pop
in
cmp
loopne
je
cmc
imul
js
xor
roll
xchg
push
push
mov
int3
cmc
adc
mov
xor
sbb
inc
xor
dec
ja
stos
mov
mov
addr16
push
pop
xlat
leave
faddl
xchg
dec
stos
fwait
push
in
int
jo
dec
cmpsl
iret
mov
mov
mov
jae
pushf
cs
cmp
add
imul
lcall
pop
rolb
imul
pop
xchg
dec
mov
les
pop
das
ss
inc
outsl
bound
and
push
push
jmp
lret
push
ret
mov
sbb
adc
mov
stc
or
mov
mov
sub
shlb
mov
cltd
lock
pop
add
mov
cld
sub
in
cld
mov
pop
push
pop
mov
cmpsb
sar
push
fistps
lock
sti
fincstp
dec
ret
inc
std
pop
jae
test
jp
or
mov
loopne
and
pop
sub
and
std
pop
pushf
mov
pop
jo
xchg
scas
int3
jo
mov
inc
stos
call
fucomip
adc
push
dec
sbb
and
testb
mov
inc
push
addb
adc
mov
or
xor
inc
and
loope
or
cmp
lret
aas
into
test
jg
add
pusha
lahf
outsb
aas
out
into
cltd
es
clc
xor
out
sub
rorl
pop
sbb
cmpl
mov
aas
xor
dec
aad
add
lock
mov
ds
stos
js
aam
xchg
and
jle
dec
sbb
sbb
sahf
outsl
mov
lods
insb
mov
dec
dec
sbb
mov
out
jecxz
hlt
int
xchg
pop
pop
pop
push
fimull
int3
mov
or
push
ss
lods
jae
mov
scas
jae
int
mov
insb
mov
jae
pushl
inc
xchg
or
cmp
mov
inc
mov
shr
pushl
cmpsl
fistpll
dec
sub
and
add
shlb
out
xor
dec
invd
or
push
mov
outsb
data16
mov
mov
mov
in
xorl
mov
or
ficoml
pop
dec
or
xchg
inc
push
cmpl
dec
daa
xor
std
pushf
jmp
or
pusha
push
mov
pop
nop
mov
das
jge
pop
aaa
je
loopne
test
dec
mov
lahf
jecxz
filds
mov
lods
dec
pop
lret
insb
xor
sahf
mov
popf
fistps
in
jg
test
aam
inc
subl
nop
shlb
ss
inc
push
cmp
adc
stos
data16
mov
push
push
pop
jbe
adc
out
outsb
mov
sub
inc
jne
push
and
push
inc
cld
pop
push
popf
jle
lods
sbb
or
ret
imul
mov
or
fdivl
fcoms
and
repz
iret
iret
mov
daa
sbb
sbb
add
pop
call
xor
xchg
sbbb
inc
jns
inc
pop
xor
loope
scas
sahf
jmp
mov
int
cli
pop
mulb
mov
mov
hlt
inc
sbb
jbe
cmp
or
cmp
fwait
jns
ss
mov
xchg
lcall
loope
cli
mov
incb
js
mov
stos
andl
dec
sbb
mov
out
adc
push
dec
loop
mov
add
fiaddl
mov
mov
or
out
out
nop
lret
cmp
mov
mov
jae
xchg
inc
aam
psrlw
jb
mov
repz
or
in
push
push
mov
les
arpl
cmp
jae
je
insl
xor
jecxz
sbb
dec
lcall
jp
arpl
fwait
sub
mov
fistl
and
mov
cmc
pop
pop
mov
int3
pushf
test
aaa
rolb
pop
jae
lods
pop
and
mov
jp
or
sbb
mov
lods
arpl
push
push
fsincos
cmp
inc
lds
inc
leave
sbb
cmp
cmp
in
test
inc
sub
mov
cld
xor
sub
ret
jg
movsl
or
jae
push
roll
adc
and
xor
cmp
jg
mov
dec
std
mov
fiaddl
fdivl
mov
jo
cmp
das
test
mov
outsl
adc
sub
sbb
jmp
jge
and
xor
loope
mov
cltd
sbbl
lret
sub
or
ljmp
ljmp
in
mov
cmp
xor
mov
pop
outsl
sar
xor
lret
inc
aam
clc
jmp
stc
pop
mov
pop
je
sbb
dec
pop
sbb
sar
pop
or
cmpsl
push
mov
icebp
pop
stc
mov
cltd
js
and
orl
xor
inc
jb
sbb
ds
stos
in
aaa
mov
xchg
fsts
addr16
xchg
inc
ret
xchg
sbb
sbbb
push
outsl
inc
cmp
cltd
add
mov
jno
sub
fisttpll
sub
lock
lcall
lods
movsb
test
lret
ret
pop
pop
imul
pop
xchg
push
into
movsb
adc
int
xchg
lock
jbe
mov
test
jecxz
orb
cmp
mov
out
mov
mov
mov
test
std
lret
bnd
cmpsb
mov
in
cmp
mov
out
les
xlat
push
addr16
enterw
jb
sti
lahf
and
jb
cli
rol
cmc
pop
cmp
daa
add
push
in
add
xor
hlt
or
adc
and
rcrl
leave
mov
xchg
or
pop
xor
xor
ret
mov
fcoml
into
ret
xchg
cli
testb
rorl
inc
lds
xchg
out
mov
inc
pop
adc
dec
add
das
jmp
add
lods
aaa
push
xor
xchg
mov
insb
rcrb
cmpsb
ljmp
pop
sbbl
pop
mov
insb
cmc
sbb
ja
mov
inc
jnp
lret
push
cmp
pop
mov
inc
mov
xchg
in
push
popf
adc
iret
push
mov
test
cmp
addr16
jmp
addb
pop
jmp
adc
xchg
pop
pusha
inc
jge
mov
insl
addr16
push
cltd
mov
ffreep
mov
xchg
jle
xchg
add
out
pop
call
lds
pop
xchg
mov
or
cmc
push
mov
jae
lods
jecxz
mov
cld
mov
cmp
shll
mov
and
jle
je
sbb
iret
jecxz
add
cmc
mov
popf
push
jecxz
mov
fstpl
push
sbb
cmp
ja
mov
jecxz
mov
push
mov
mov
cwtl
mov
add
push
lods
push
cmp
sahf
je
negb
in
scas
out
sti
subl
insb
enter
hlt
dec
mov
insb
das
sbb
xor
mov
jmp
rcrb
lods
sub
or
leave
loop
shrl
lods
xlat
cmp
pop
adc
sbb
ss
pop
push
adc
pop
xchg
and
cmp
jmp
popa
push
mov
add
ficoms
sbb
jo
fiadds
xor
test
sar
sub
shrl
lahf
insl
push
int
sbb
orb
or
fildl
jge
jp
jnp
gs
mov
mov
out
fstp
pop
jmp
pop
fscale
movsl
dec
push
dec
jnp
repnz
and
and
aaa
dec
xor
pop
js
cli
lds
inc
or
lret
ja
and
fwait
and
pop
pushf
add
nop
mov
adc
xchg
push
jecxz
xlat
insb
sbb
leave
mov
adc
sbb
xchg
mov
aas
ror
rcr
js
add
stos
and
xor
mov
jo
scas
stos
cltd
xchg
scas
dec
iret
outsb
pop
cmp
xchg
arpl
or
push
xchg
adc
xchg
dec
xchg
test
mov
out
push
pop
mov
jae
inc
mov
sbb
mov
into
and
add
mov
and
push
dec
mov
inc
rclb
adc
dec
arpl
popf
shrd
pushf
hlt
mov
lcall
scas
pop
cld
in
in
push
cli
out
movsl
insb
xchg
and
daa
jl
mov
addr16
mov
in
sbb
out
dec
push
rcr
inc
add
movsl
ja
or
cmp
mov
inc
mov
in
fdivrs
cmp
icebp
mov
and
xchg
and
dec
pushf
sub
push
adc
mov
cli
icebp
pop
test
js
sbb
mov
pop
cld
pop
pop
add
outsl
cmc
lret
nop
insl
fimull
push
pop
jle
nop
xchg
adc
ret
les
jp
pop
icebp
xor
jnp
out
pop
stos
xlat
dec
mov
mov
sti
mov
jg
scas
xchg
clc
sub
push
xchg
mov
jecxz
shrb
or
mov
aaa
cmp
cmp
gs
adc
aam
pop
jb
sbbb
dec
xor
sbb
add
lods
jb
ret
loopne
jo
jb
into
jp
cmp
lock
xor
imul
mov
nop
jle
xor
push
mov
pushf
pushf
hlt
adc
leave
ja
in
scas
sahf
div
mov
inc
clc
and
dec
pop
cmp
fstpt
cltd
ljmp
std
dec
cs
dec
push
mov
cmp
inc
mov
mov
pop
pop
fldcw
iret
loop
lret
jbe
ret
pop
mov
repz
cmp
or
and
ficoms
ja
sub
push
andl
adc
outsb
das
fbld
sub
daa
pop
mov
cli
enter
xor
jnp
jg
clc
adc
sub
inc
dec
sbb
mov
imul
js
int
and
aaa
fcmove
add
jno
sub
mov
mov
iret
sbbl
clc
ss
out
pop
in
sahf
and
lods
scas
call
jb
xlat
push
xor
push
jge
loopne
dec
xchg
fdivr
pushf
fimuls
jne
inc
push
dec
xor
pop
push
pop
in
idivb
cmpsb
mov
loope
movsl
je
data16
outsb
hlt
inc
inc
int
push
insl
jne
nop
sub
fists
loopne
adc
add
mov
mov
mov
cmpb
movsb
cmc
or
jle
pop
fldt
ds
sub
icebp
pop
fs
enter
fsubs
repnz
push
sub
rorl
sub
mov
aas
add
mov
mov
pusha
into
cs
cmp
and
data16
or
imul
jbe
mov
push
out
cmpsl
jmp
pop
cs
js
xor
loopne
or
sub
aam
std
xorb
outsl
xor
test
out
cs
add
cld
push
in
push
test
jo
mov
cmp
aam
jnp
pop
adc
fwait
pop
shrb
bound
mov
push
lods
cmp
add
dec
mov
fldl
clc
push
push
or
lahf
in
fs
arpl
jae
xor
out
ja
and
ljmp
mov
cmp
pusha
add
and
arpl
push
lds
sub
lret
xor
std
xor
mov
lock
cmc
cmpsb
push
bnd
mov
mov
mov
xchg
pop
loopne
jecxz
testb
pop
stos
fst
cld
jae
aad
cmp
dec
addr16
insb
jne
cmp
dec
jmp
lock
mov
leave
jne
cmp
mul
js
dec
jg
and
jne
and
imul
push
pop
pop
je
mov
dec
jl
outsl
mov
jg
add
insl
sbb
faddl
in
sbb
movsl
aad
loopne
cmp
fadd
mov
mov
push
lea
xor
jg
fcoms
dec
dec
push
sbb
pusha
mov
nop
test
gs
rclb
scas
push
fbstp
lret
les
and
stc
and
ljmp
cmp
das
ja
mov
loop
mov
out
repnz
xchg
sub
popf
ficoms
jnp
stc
push
adc
jl
xlat
daa
jo
shrl
and
sub
cmc
shlb
pop
dec
mov
bound
clc
mov
push
ret
inc
mov
std
lods
jp
loop
xlat
aas
and
addl
or
cmp
shll
out
jns
cmp
cmp
cmp
bound
add
mov
enter
outsb
push
stos
mov
ret
mov
xchg
push
mov
xorl
dec
imul
mov
sti
fisubs
cmc
xchg
xor
lock
add
cmpsb
ja
das
daa
add
mov
cli
pop
fiadds
adc
adc
mov
popf
push
out
cwtl
fstl
jb
mov
or
fldt
xor
push
push
adc
neg
sbb
in
fdivrl
or
adc
idivb
sbb
add
sbb
mov
out
fnstsw
sbb
and
mov
dec
call
in
addb
ja
pop
sahf
mov
out
pop
aam
dec
and
ds
adc
or
icebp
pop
es
jle
push
mov
nop
xchg
fdivl
push
repz
loop
les
mov
mov
mov
pop
and
push
mov
movsb
cmp
sub
insb
inc
lock
call
hlt
push
iret
mov
icebp
shrb
iret
fldenv
push
cmpsl
repnz
mov
adcb
jns
push
call
ret
lods
dec
in
push
in
and
xor
daa
icebp
enter
lcall
movsb
xlat
lods
xor
push
lock
jns
mov
or
es
pop
push
pop
or
add
je
cmp
jbe
repnz
dec
jo
popa
negb
rcll
xchg
push
cmc
or
mov
loop
xchg
mov
xorl
or
push
stos
les
call
gs
pop
scas
aam
push
mov
in
loopne
sahf
pushf
fstpt
push
pop
addr16
mov
xchg
mov
call
ret
sbbl
pop
push
subb
add
fcomi
xor
adc
pop
add
jge
sarb
jnp
fistl
aad
or
jmp
outsl
in
or
xor
jae
sahf
cs
lods
ja
and
mov
repnz
add
scas
ja
mov
adc
lds
jge
xor
adc
or
dec
dec
mov
mov
and
push
jl
ljmp
daa
jae
aaa
and
jns
push
fisubrs
dec
dec
das
and
mov
pop
and
sub
jge
pop
mov
jne
loopne
cmp
imul
hlt
cmpb
push
sub
inc
mov
sbb
mov
bound
es
ja
inc
push
movsb
ds
jle
push
xchg
mov
bswap
push
inc
cs
mov
out
mov
movsl
mov
inc
cmp
mov
push
sub
xor
or
loope
pop
adc
xor
mov
jmp
sbb
es
stos
inc
mov
inc
sbb
mov
lcall
inc
inc
out
or
cltd
push
add
jmp
jo
or
add
lock
add
stos
inc
and
into
xor
push
push
xchg
int3
jle
scas
movsl
lret
mov
ss
add
and
gs
xor
xlat
add
out
insb
lods
mov
rcrl
sub
or
in
cmpsb
jae
pop
outsl
aas
std
mov
lea
pusha
js
gs
xchg
lods
rclb
inc
shrb
pusha
pusha
rorb
into
pop
dec
int
loopne
or
lahf
push
out
push
dec
int3
andl
ds
jp
adc
sbbb
and
adc
or
pop
and
shll
dec
loop
sbb
inc
add
push
out
sbb
or
jecxz
cmpsl
add
cli
cmp
xchg
subl
inc
clc
ret
popf
in
push
fistl
idivl
xchg
imul
jo
ficoml
lret
xor
test
inc
xchg
je
rep
ja
notb
sub
or
mov
orl
shl
enter
les
mov
and
push
mov
inc
sti
dec
inc
scas
cltd
gs
sub
aam
mov
inc
mov
out
shll
push
mov
jno
jecxz
sbb
ret
adc
push
pop
add
out
hlt
roll
xchg
jne
in
stos
sbb
mov
cmpsl
fiadds
mov
xor
and
ds
add
lea
outsb
xchg
pop
inc
stc
mov
pop
leave
bound
cmp
sub
pop
ljmp
push
sbb
fsubrs
adc
cmpsl
push
mov
or
mov
add
jge
adc
sub
sbb
fidivrs
lods
and
cwtl
loope
push
jo
cmp
xor
mov
mov
test
and
enter
xchg
xchg
jns
imul
mov
pushf
xchg
inc
push
std
insb
dec
adcb
sbb
push
sbb
out
cmp
push
shlb
xor
int3
or
js
icebp
jmp
xchg
xor
int3
js
gs
push
shrb
sahf
aam
aam
arpl
sub
lret
add
mov
mov
ljmp
out
rolb
xor
adc
lahf
popf
fmull
cmc
mov
push
mov
call
mov
mov
jo
mov
sbb
and
xor
je
inc
mov
push
mov
insl
pop
sub
imul
xchg
nop
push
mov
mov
mov
into
mov
aam
xchg
in
sub
mulb
mov
xchg
icebp
fidivrl
jne
sub
add
test
push
cltd
pop
mov
clc
mov
push
add
xchg
xchg
lods
stc
call
ja
xchg
push
movsb
lds
lock
xor
pushf
lahf
inc
lcall
cli
sbb
je
lds
xchg
push
mov
and
fdivs
test
adc
cmp
mov
mov
push
push
sbb
imul
in
adc
jnp
or
adcb
daa
loopne
ret
cmp
dec
inc
dec
mov
xchg
jne
cmpsl
cmp
mov
ret
sbb
shr
push
data16
lret
xor
xor
icebp
jb
lret
std
mov
mov
mov
mov
mov
ljmp
fwait
push
inc
test
sbb
mov
lock
lods
fucom
test
xor
lret
imul
imul
out
or
push
add
jae
mov
adc
hlt
loop
aas
cmp
push
adc
leave
xlat
fwait
arpl
and
mov
add
or
stos
pop
mov
xchg
and
and
in
rcrb
adc
sub
lock
dec
adc
sub
pop
ficomps
pop
pop
lahf
and
jbe
xchg
mov
das
mov
jge
sub
out
jnp
adc
adc
cwtl
xorb
cld
push
push
int3
dec
xchg
lcall
loope
pop
mov
or
shrl
shrl
je
pop
xchg
pushf
pop
push
xor
pushf
and
sub
dec
out
push
inc
in
cli
sub
xchg
out
or
test
mov
repnz
fwait
adc
inc
imul
adc
cwtl
inc
push
adc
ljmp
xchg
add
xlat
or
int
xchg
cmp
js
jle
popa
jbe
dec
cwtl
jg
push
jbe
daa
add
inc
and
lock
cli
push
pop
and
cmpsb
inc
mov
sarl
rcrl
pop
lret
test
dec
mov
stos
push
rcr
xor
and
in
es
push
xchg
rolb
lea
rcll
pop
loope
and
ja
inc
stos
xchg
cs
loop
in
mov
test
das
xor
cli
push
push
stos
mov
out
out
mov
int3
lea
cmp
scas
dec
pop
cmp
mov
repnz
mov
lds
into
ret
inc
push
mov
repz
mov
and
stos
add
push
jp
pusha
loop
fimuls
push
or
sbb
shr
inc
dec
xchg
js
dec
stos
dec
sbb
and
daa
xchg
push
push
mov
pop
inc
clc
inc
sbb
inc
cli
cmp
insl
push
pop
jo
mov
cli
fildl
int
dec
aas
cwtl
add
fidivrs
xchg
pop
cmp
mov
das
das
pusha
and
and
mov
xchg
inc
out
pusha
mov
pop
add
sub
cmp
xchg
add
mov
pop
fs
xchg
dec
add
lea
cmp
or
adc
nop
pop
ja
sbb
inc
in
mov
ret
insb
mov
in
xchg
test
subl
push
add
mov
imul
aas
push
add
imul
pop
js
fistps
adc
in
jge
sbb
cmpb
out
out
fcmovnb
sbb
mov
xchg
cmp
rcr
push
jp
jo
jg
bound
inc
fwait
cmp
add
sub
pop
std
fisttpl
or
shlb
sbb
ret
aaa
cli
mov
lock
xchg
push
movsb
popf
mov
int3
xor
stos
dec
enter
lds
xchg
mov
stos
bound
clc
test
scas
cmc
lcall
xchg
call
adcb
jo
dec
xchg
fnop
cmp
in
das
mov
and
push
jbe
les
out
dec
push
adc
leave
ss
mov
inc
clc
inc
adc
incl
aad
and
into
pop
xor
cmp
sbb
test
lock
call
dec
lock
test
dec
arpl
lret
movsb
popa
or
test
mov
loopne
cmp
lock
cmpsl
push
jns
sub
mov
mov
sbb
out
in
xor
insb
inc
xchg
std
bt
mov
movsb
hlt
out
inc
pop
into
mov
lock
xor
inc
daa
out
loopne
mov
aad
sub
and
pop
call
or
scas
xchg
fwait
lock
adc
test
stc
sub
sbbl
lret
aaa
xor
dec
fildl
or
xorb
xor
fisubl
scas
shrb
adc
fcmovnbe
in
lds
dec
jne
push
decb
mov
dec
adc
mov
sti
or
rclb
cli
pop
inc
mov
loope
imulb
decl
inc
and
in
dec
jno
mov
xchg
mov
or
adc
icebp
inc
jns
mov
xchg
pop
pop
imull
push
loope
push
push
sub
xchg
mov
aad
jle
mov
dec
mov
fcoms
ss
adc
les
ret
pop
stc
cmp
xchg
cld
les
call
stc
repz
sti
sbb
outsl
ljmp
fdivr
mov
mov
add
mov
jbe
pop
scas
pop
jl
xchg
pop
loope
inc
gs
jae
or
in
xlat
jno
int3
cld
lods
outsb
inc
mov
adc
mul
out
adc
imul
pushf
in
aad
std
cmpb
pop
enter
xchg
cmp
push
mov
inc
shll
dec
hlt
dec
mov
testl
mov
stc
in
decl
jecxz
or
popf
push
adc
push
stc
sub
mov
aas
sarb
mov
sti
or
incb
or
enter
pop
loop
push
rcll
mov
fisttpll
xchg
hlt
mov
xor
mov
mov
jecxz
xchg
test
add
lret
js
sbb
sbb
jp
xor
mov
imul
fidivrs
dec
sbb
inc
push
imul
inc
pop
pop
mov
les
ja
dec
lret
mov
mov
or
mov
aam
add
xlat
std
or
shll
iret
shll
mov
mov
sti
outsl
push
dec
cmp
popf
inc
push
outsl
lcall
sub
fadds
in
dec
add
or
mov
test
mov
fimull
imul
ss
test
mov
cmpsl
mov
add
scas
cmp
adcb
stos
repnz
movl
popa
pop
shrl
mov
test
or
ret
inc
rcl
xchg
jb
fdivrs
sbb
mov
mov
or
pop
sbb
fwait
adc
test
sub
inc
sbb
iret
mov
loop
sbb
sbb
test
mov
mov
rcr
mov
dec
sub
mov
cmpsl
inc
push
sbb
or
std
add
loope
bound
push
cmovns
loopne
shlb
repz
clc
pusha
pop
or
scas
jo
roll
addr16
adc
out
sub
loopne
add
in
add
roll
add
test
pop
xlat
or
cmp
mov
mov
jns
cmp
aam
lahf
adc
mov
adc
rcrl
mov
lods
jbe
mov
and
jne
std
scas
cmp
mov
stos
lcall
test
lret
xchg
jl
mov
cli
popa
sbb
lret
sti
out
fildll
movsb
cmpsb
push
lods
sahf
cmp
xchg
stos
movb
push
int3
negb
push
mov
imul
dec
xlat
cmp
es
cmp
or
rcr
mov
mov
pop
lea
jbe
in
xor
mov
push
lcall
in
mov
lahf
mov
jno
dec
movsb
pop
or
jno
xor
sub
lock
in
nop
inc
jl
sbb
ss
out
test
dec
mov
into
mov
sbb
add
mov
xor
mov
mov
add
mov
jbe
ja
cmc
mov
fstps
mov
ret
ds
aam
cmpsb
adc
pop
shl
or
incb
sub
adc
ja
cltd
andl
or
shll
into
pop
xchg
lret
shll
rcrb
xor
scas
in
xor
xchg
push
pop
sbb
sbb
mov
mov
pop
movsl
add
mov
push
cs
mov
sub
push
out
aam
adc
sub
xchg
inc
push
fdivrp
pop
mov
xor
rorl
pop
mov
mov
daa
shrl
mov
add
jns
pop
scas
mov
sar
mov
cmp
popa
jae
inc
fwait
add
out
lahf
popa
xchg
pusha
and
pop
jecxz
rolb
daa
or
je
pushl
dec
popa
jbe
push
out
leave
xor
inc
push
ja
aad
fs
lock
xchg
sahf
sarb
lret
shr
xor
mov
jb
outsl
fwait
movsl
xchg
clc
popf
push
insl
mov
or
repnz
inc
cmp
dec
adc
nop
push
add
lea
shl
inc
dec
addr16
jecxz
dec
xchg
shl
lcall
mov
xchg
stos
daa
inc
and
cmp
cmp
and
ret
pop
sbb
fwait
or
cmp
iret
jae
jge
scas
test
pop
movsb
adc
lea
xchg
push
fwait
sub
dec
jo
jb
adc
add
push
ljmp
and
adc
adc
test
lahf
and
xor
push
lods
sahf
adc
je
push
fldl
sbb
in
loop
enter
lock
stos
out
wrmsr
mov
notb
jg
into
aaa
jns
insl
sub
lahf
and
inc
sub
xor
mov
mov
xchg
dec
out
in
clc
adc
jnp
lahf
mov
sbb
movsl
out
xor
and
add
push
inc
sub
nop
into
push
cmp
fabs
das
sub
lock
jg
sahf
in
subl
loope
or
or
aas
mov
mov
test
jns
lret
fadd
sub
jno
inc
test
fwait
mull
addb
out
or
or
pop
popf
xor
or
and
and
dec
mov
cli
pushf
push
test
imul
jb
or
repz
imul
sub
adc
xchg
xor
mov
mov
mov
jge
mov
test
push
sub
in
lcall
stc
gs
scas
lods
adc
adc
inc
mov
jmp
sti
sub
sbb
fs
dec
pop
mov
cmp
inc
mov
xchg
push
xchg
into
dec
mov
lret
dec
mov
enter
loopne
not
rclb
mov
arpl
jns
cli
mov
push
nop
add
or
addr16
sbb
test
add
daa
insl
and
aad
sub
mov
fsubs
arpl
cmp
shrl
je
xchg
push
movsl
testl
imul
mov
mov
pop
mov
mov
popa
xor
test
cmpsb
add
xor
test
sub
cli
adc
jbe
xchg
fldln2
xchg
sahf
test
and
addl
mov
dec
sbb
hlt
outsb
js
jmp
mov
jns
mov
lahf
mulb
insb
adc
mov
stos
dec
lcall
dec
mov
rolb
test
mov
xor
in
pop
adc
cmpsb
jno
mov
ja
sub
dec
pop
fdivr
sbb
out
sbb
push
fdivrp
or
mov
jne
jbe
cli
cld
adc
push
shll
cmpsl
orl
sbb
ret
testl
shrb
lahf
jb
pop
sti
fnstsw
fstps
jns
jnp
sti
mov
clc
or
inc
out
xchg
aam
xor
call
jbe
mov
xor
in
inc
fs
mov
and
add
mov
or
dec
sbb
shrb
aad
fbld
mov
test
sub
pop
dec
movsl
dec
cwtl
int
test
pop
aas
push
xchg
std
int3
mov
mov
jne
lods
push
mov
ss
cmp
daa
mov
insl
leave
iret
cmpsl
cli
pop
hlt
pop
dec
fnstenv
xchg
roll
sub
adc
inc
int3
xchg
mov
cmp
mov
test
nop
ljmp
cmp
inc
iret
cmpsl
stos
add
push
incb
fwait
add
push
addb
adc
dec
ret
sbb
pop
mov
adc
movsb
sti
scas
sbb
push
jne
xchg
cmpsl
cld
fidivs
data16
mov
loope
mov
out
aas
xchg
sbb
and
jno
loop
mov
jb
pop
mov
add
push
loop
iret
inc
int
leave
xor
sub
sub
pop
push
inc
mov
jp
lret
shl
cli
mov
mov
fistpll
test
push
cmp
cmp
out
imulb
shrl
hlt
test
out
out
mov
mov
inc
pop
pusha
aam
stos
lret
xor
or
mov
pop
push
out
mov
adc
push
stos
xor
push
mov
das
adc
jo
arpl
shl
ss
and
add
dec
and
jb
adc
lods
push
stos
push
repnz
lahf
adc
jg
hlt
inc
pop
je
popf
les
jno
fidivs
cwtl
aas
jg
aaa
add
xchg
pushf
test
or
in
add
or
lods
push
xlat
jge
and
loope
xchg
jb
sbbl
sub
fs
pop
int3
stc
pop
xor
divl
push
andl
ja
xchg
out
jb
add
xchg
pop
xor
in
fsubrl
pop
aas
mov
add
push
push
mov
pop
inc
pop
cmp
test
gs
ds
bound
leave
ficoms
rcrl
nopl
int3
mov
add
sbb
scas
adc
jnp
incl
mov
je
dec
pop
pop
sub
jp
jecxz
lods
fcomi
inc
fisubl
xor
inc
rcl
sahf
mov
ds
ljmp
sub
ljmp
push
mov
cwtl
mov
cmp
sbb
in
imul
cli
int3
inc
shll
or
movb
ljmp
mov
out
mov
adc
loopne
addr16
sbb
pop
sbb
mov
mov
xor
xor
push
les
gs
icebp
std
inc
mov
sbb
sbb
sub
xor
hlt
cltd
pop
inc
xchg
inc
hlt
or
dec
inc
leave
das
in
xchg
mov
or
and
int3
rcrl
es
xchg
stc
notl
sbb
lahf
lock
out
mov
std
je
mov
popf
jle
sub
and
inc
xchg
cli
scas
mov
push
cs
jbe
iret
xchg
pop
xor
dec
push
jl
mov
out
xor
mov
int
jmp
das
jbe
mov
or
adc
sub
jo
je
xchg
pop
jecxz
adcl
adc
add
rcll
out
or
jae
mov
jns
cmpsb
aaa
outsl
jbe
push
sub
sarl
dec
adc
pop
jmp
sbb
push
jp
jno
push
push
stos
test
pop
jp
aam
out
aaa
pop
sbb
in
inc
std
inc
jae
std
dec
mov
pop
loopne
push
addb
orb
mov
cmc
mov
adc
push
cmp
inc
push
lea
mov
fadds
subl
pop
cwtl
mov
mov
shlb
xchg
sub
jge
inc
or
inc
aas
adc
push
xchg
xchg
push
cld
js
negb
out
dec
icebp
sbb
mov
movsl
add
inc
jbe
mov
les
xchg
leave
stos
jge
push
mov
outsb
lea
out
mov
mul
adc
mov
push
shrl
xchg
push
or
xchg
add
sub
lret
and
cld
and
mov
jb
mov
iret
cld
filds
jecxz
push
jno
add
adc
mov
les
cld
xlat
js
jmp
daa
xor
pop
dec
adc
test
out
test
pop
std
dec
adc
pop
add
test
shlb
inc
fsubl
cmpsb
add
adc
adc
adcl
and
mov
inc
jns
enter
xor
xlat
jnp
push
inc
xor
sub
cmp
rol
cmp
lcall
mov
pop
push
stos
popf
pushf
and
dec
fsubs
xor
outsl
and
scas
xchg
popa
stos
cmp
add
orl
fistl
es
pop
jle
dec
mov
aas
mov
push
je
sbb
jne
pop
jnp
int
incl
outsl
or
js
mov
jmp
mov
outsb
mov
jle
adc
sub
sbb
adc
lea
fucom
dec
add
or
cs
mov
sub
adc
icebp
dec
mov
xor
movsb
xor
aad
xor
pop
xor
leave
pop
addl
je
jb
push
or
cmp
jmp
out
jl
cmp
pop
stos
hlt
mov
arpl
in
mov
dec
lds
sarb
push
scas
sbb
inc
les
ljmp
sbb
add
mov
aad
movsl
pop
fs
or
mov
inc
dec
sbb
xchg
mov
and
pushf
push
mov
sahf
lret
dec
andb
xchg
adc
inc
push
stc
mov
out
stos
cmpb
cmp
bound
mov
jb
aaa
les
bound
or
movsl
stc
mov
inc
mov
enter
dec
std
fdivr
sbb
cmp
or
sbb
inc
mov
lret
in
out
stos
or
stos
mov
adc
mov
test
repnz
popa
shr
jno
imul
popf
outsl
push
repnz
push
jge
adc
sbb
mov
insb
in
je
xchg
mov
lcall
sbb
ljmp
in
and
inc
sbb
jns
and
push
sbb
inc
mov
testb
jl
xchg
xchg
adc
jge
pop
sub
lret
les
lahf
xlat
xchg
jmp
add
test
divb
je
dec
pusha
pop
subb
test
push
sbb
fisubl
in
mov
ret
mov
jle
daa
scas
jmp
popa
pop
negb
adc
sbb
xchg
add
in
add
dec
xchg
cmp
ljmp
int
icebp
push
pushf
push
xchg
push
clc
jnp
adc
cmp
mov
add
out
das
mov
xchg
cmc
lret
inc
cmpsl
add
mov
xchg
mov
aam
dec
adc
fstpt
dec
dec
int3
xlat
push
mov
sub
mov
in
jecxz
mov
stos
daa
xor
sti
mov
inc
addr16
fdiv
jmp
rcr
scas
into
movsl
sub
fldt
pop
xor
ljmp
jae
adc
ficoml
clc
and
xchg
jno
lret
shll
sbb
add
js
loope
xor
adc
sub
cmp
inc
jg
sub
lea
mov
push
mov
xchg
mov
jns
ret
inc
nop
popa
mov
movsb
dec
pop
and
lds
iret
mov
test
sub
rcl
pop
flds
ja
rcrl
xor
adc
lods
pop
in
or
mov
adc
loope
mov
shrb
cltd
push
mov
mov
xchg
push
ds
dec
inc
pop
jl
loop
jb
adc
push
rcr
lods
and
push
dec
push
lock
push
adc
jg
out
mov
shll
bnd
jge
push
pop
lock
iret
and
push
jecxz
pop
jnp
inc
add
leave
fistps
out
jo
mov
push
and
or
data16
dec
fisttpll
sub
stc
into
hlt
add
aaa
and
cwtl
pop
sub
mov
in
or
lds
mov
push
pusha
push
fildll
frstor
mov
outsb
and
push
and
dec
cwtl
cmp
mov
ret
jae
outsb
pop
or
les
add
mov
les
jns
shll
xchg
cmp
jg,pn
cmc
inc
int3
push
int3
adc
jnp
sub
out
es
jp
jge
aas
daa
pop
xor
mov
fisubs
out
aas
dec
jmp
fwait
pop
add
pop
or
jl
push
add
dec
xchg
outsl
mov
test
sbb
jno
imul
cmp
loop
das
dec
inc
jo
sbb
aaa
jnp
jg
dec
lods
xchg
inc
pop
stc
cli
cmpsl
push
outsl
sbb
fs
adc
stos
inc
out
mov
inc
mov
lds
test
cmp
fstpt
cmpsb
cltd
pop
and
sbb
enter
test
insl
and
sbb
mov
and
or
dec
sub
cli
jb
mov
mov
xor
dec
cmpsb
mov
iret
and
jae
pop
es
sbb
scas
ja
jmp
rolb
push
outsl
enter
cmpsb
sbb
roll
ljmp
dec
ret
in
adc
aas
sub
push
test
mov
cs
push
push
lea
notl
push
mov
pop
lcall
sbb
jae
and
fsts
mov
cmpsb
mov
pop
int3
test
out
add
cli
stos
adc
xor
mov
inc
call
bound
pop
xor
push
push
cmc
leave
std
inc
sub
mov
mov
pop
jl
fistpll
xchg
mov
cmpsl
std
repnz
ss
data16
rcrb
shlb
pop
sbb
lret
clc
push
imul
test
pop
adc
das
inc
xor
cmp
pop
mov
and
jmp
mov
xchg
inc
ret
mov
add
out
or
shll
int3
pusha
shlb
add
push
sub
sbb
cmp
inc
cmpsl
cwtl
enter
lret
adc
rorl
or
and
fistps
sub
shrb
inc
jbe
and
xchg
test
mov
jmp
ss
xor
inc
sub
xchg
xchg
fsts
push
mov
push
pop
cmp
ja
dec
and
jge
xor
adc
inc
and
popf
mov
imulb
mov
scas
xchg
add
mov
ds
ss
popa
mov
xchg
insb
aam
outsl
mov
adc
mov
out
cwtl
pop
fs
shll
lds
mov
push
or
push
ret
xor
pop
mov
pop
push
lahf
fidivrl
dec
push
aaa
sub
pop
sub
in
ret
xor
in
lret
ds
enter
sahf
lcall
sahf
out
movsb
or
nop
mov
aad
dec
loope
outsl
pop
and
jbe
xor
cs
ret
push
sbb
orl
jno
shll
test
mov
scas
fst
or
push
rol
js
dec
mov
std
pusha
mov
adc
outsb
clc
add
pop
arpl
cmpsl
mov
pop
mov
sub
mov
ja
jmp
jo
pop
out
push
daa
sub
xlat
jae
cltd
sti
lea
sbb
pop
pop
inc
sbb
xchg
stc
insb
cmp
inc
jo
pop
dec
fsts
loope
dec
negl
mov
out
lcall
cltd
jae
adc
adc
cli
and
in
dec
arpl
inc
mov
stos
filds
cmpb
movsb
inc
xor
out
repnz
mov
call
jge
dec
test
stos
insb
dec
jnp
lcall
cltd
cmp
push
xor
pop
clc
mov
sarl
test
pop
mov
inc
and
dec
daa
out
xchg
jnp
fsubrp
out
scas
aas
out
mov
push
je
push
mov
mov
sub
sub
pop
fucomip
and
fisubrl
int
pop
aaa
mov
xlat
icebp
inc
push
fld
xor
nop
mov
xchg
notl
xchg
outsb
jmp
mov
xor
mov
es
xchg
add
jno
sti
cmp
push
pop
decb
in
sub
xchg
ljmp
sbb
sarl
xlat
movsb
hlt
dec
adc
push
push
cmp
xor
push
dec
push
lds
rcrl
ds
test
push
in
ret
push
lahf
lds
jecxz
xor
mov
out
icebp
pushf
ds
or
or
cmpsb
inc
pop
arpl
and
jmp
xchg
dec
stos
fnstenv
data16
inc
and
lcall
stc
sbb
adc
jo
jecxz
adc
inc
push
mov
mov
cmp
xorb
or
mov
lret
jmp
mov
mov
mov
mov
call
pusha
inc
dec
sbb
xchg
adc
jl
mov
fldenv
pop
lods
loopne
push
scas
in
and
test
add
and
aam
pushw
inc
xchg
pop
adc
fdivs
xorb
fsubs
fiadds
hlt
out
mov
in
mov
adc
push
and
push
push
roll
pop
jno
add
sarl
cmp
push
scas
pop
jae
scas
push
jg
sbb
fwait
add
pop
negl
aaa
cmp
cmc
sbb
mov
inc
inc
lods
test
push
or
popf
in
jne
pop
stos
jo
push
imul
sbb
cmp
push
jg
mov
xor
scas
stos
inc
fs
add
addr16
ss
mov
leave
leave
xor
out
cmp
pop
lea
rcrb
pop
or
inc
dec
test
mov
lods
or
push
sub
lods
out
fimuls
out
into
out
dec
pop
xor
fcomps
rolb
push
dec
sahf
scas
pop
or
les
mov
jle
imul
xor
jge
mov
inc
mov
adc
and
push
pop
insb
nop
ret
and
fbld
sti
les
xor
rorl
adc
inc
dec
push
xorb
push
or
aaa
adc
imul
lahf
mov
adc
jae
int3
enter
inc
jb
aam
cmc
xor
adc
add
sub
sub
aaa
sbb
js
push
fisubs
pop
fnsave
mov
mov
and
insb
adc
imul
mov
mov
jle
fstl
fs
xor
and
add
testl
les
hlt
cmp
xbegin
push
push
xor
scas
gs
and
push
in
dec
push
enter
push
aaa
sub
add
mov
pop
fadds
xor
push
cmp
pop
xchg
or
inc
repz
jmp
into
out
leave
xor
lds
mov
mov
mov
arpl
loope
lds
jg
das
mov
fildl
and
shl
jae
out
in
mov
lods
arpl
pop
scas
call
lret
sub
mov
aad
jnp
lahf
adc
or
pop
add
aaa
rcl
mov
lds
jmp
test
in
ret
jecxz
xor
insb
mov
mov
lods
cld
dec
das
cli
scas
cmc
push
sub
ja
xchg
xor
pop
dec
data16
out
sahf
int3
call
mov
cld
and
sub
aaa
sub
mov
dec
jg
mov
adc
jle
sbb
xchg
je
sbb
imull
icebp
and
jns
das
popf
pop
jno
push
xchg
nop
mov
and
lea
test
cltd
aas
out
mov
inc
movsl
lods
fs
pop
cmp
push
mov
and
sti
roll
rcrl
dec
mov
mov
insl
movsb
xor
int3
add
leave
inc
repz
xchg
lcall
inc
xchg
arpl
sti
inc
fcompl
ljmp
stc
mov
rcrl
arpl
and
add
xchg
push
fisttpl
mov
leave
out
push
jle
mov
mov
testl
cmp
lret
inc
shrb
nop
fldt
inc
push
inc
pop
mov
jne
lds
xlat
mov
ficompl
stos
xlat
mov
lds
mov
jecxz
jle
inc
xor
ret
outsl
adc
inc
int3
jae
jns
gs
mov
mov
mov
adcb
mov
mov
mov
rolb
jmp
shlb
repnz
clc
cltd
lods
stc
in
sti
jnp
je
pop
adc
rorl
xchg
rcrb
sub
mov
jg
iret
sub
scas
xor
sub
sbbb
lods
xor
adc
inc
gs
mov
sub
and
cmp
jnp
jmp
jo
andl
in
cmc
jb
ret
cmp
push
aaa
push
lock
stos
fmulp
pop
aad
adc
int3
cwtl
add
xor
xchg
jnp
into
test
cmpsb
arpl
adc
push
mov
xchg
mov
aam
enter
xchg
adcl
inc
movb
adc
lods
sarb
jl
lods
sbb
cli
xlat
loopne
in
pop
cltd
mov
pop
repnz
nop
push
movb
mov
push
dec
cmp
stc
push
jne
aam
xchg
jbe
pop
sbb
scas
sbb
or
pop
js
pushf
xchg
jae
pop
push
jne
jp
and
imul
mov
jns
popa
jns
pop
mov
pop
test
ljmp
ss
jp
or
fisubrs
sbb
std
jg
lret
dec
lods
stos
roll
fmull
push
dec
andl
call
adc
adc
int
popf
sbb
mov
out
dec
loop
scas
mov
and
jo
push
mov
dec
xor
cli
nop
test
stos
lods
orl
mov
or
or
mov
outsl
dec
lods
sbb
jo
ss
mov
sbb
sub
out
inc
sarb
pusha
scas
repz
or
or
add
jno
repz
push
push
test
popa
cld
mov
push
rclb
cs
scas
mov
sub
arpl
pop
xor
icebp
and
sub
jbe
add
cmpsl
mov
out
bndstx
jmp
adc
lcall
cmpsl
cltd
mov
ret
ss
cli
gs
mov
jae
repnz
mov
push
jecxz
test
das
fcoms
mov
data16
imul
dec
inc
movsl
dec
sti
scas
data16
shl
jmp
mov
sub
aaa
daa
test
adc
fsts
ror
sub
jns
imul
call
jae
pop
ljmp
sbb
ds
and
out
pop
loope
mov
shrl
fcoms
outsl
cwtl
adc
jne
cmc
fstpl
sbbl
and
sub
jno
and
sbb
dec
jmp
mov
movsb
xchg
mov
test
cmpb
push
fidivrl
sbb
call
clc
jnp
or
push
stc
aam
xor
fs
mov
or
repnz
ror
test
inc
movsb
jl
sbb
lret
test
cmc
and
int
movsb
ljmp
sub
int
cmp
mov
inc
pop
scas
and
shrb
movsb
sbb
sub
insl
iret
stc
cs
into
jmp
jmp
arpl
fmull
test
test
or
movsl
cmpsl
push
bound
movsl
add
addb
xchg
or
mov
hlt
arpl
pop
inc
jae
out
loop
mov
xor
aas
subl
sub
insl
add
and
mov
mov
push
add
jmp
mov
mov
rcrb
addb
mov
pop
add
lock
or
mov
outsb
jnp
sbb
sbb
adc
xor
add
jnp
lea
outsl
shlb
out
movsl
ret
jnp
lahf
pop
std
mov
jbe
sbb
mov
push
shll
adc
mov
adc
sbbl
push
shrb
and
mov
dec
lock
mov
sub
cmp
pop
andl
aaa
sar
sbb
xchg
and
sub
mov
nop
push
mov
xchg
xchg
repnz
dec
xor
rclb
sbbb
or
lahf
pop
test
fstpl
int3
stos
push
pop
popa
test
into
add
scas
gs
in
mov
rcrl
out
shll
int
jmp
sub
loope
scas
test
ss
cmpsb
mov
leave
into
aas
fsts
sbb
push
pop
stc
shl
xor
dec
ret
xchg
sbb
cli
sub
inc
ret
add
xor
adc
xchg
jge
stc
sbb
cwtl
add
dec
sub
pop
add
jno
incb
repnz
and
xor
clc
or
or
pop
scas
lock
cmp
jecxz
jo
pop
push
jb
call
xor
into
cmp
test
xor
and
xchg
or
fs
and
mov
jne
push
mov
lea
xchg
push
sub
ja
xor
inc
lock
stc
jle
loop
mov
leave
push
pop
mov
test
jmp
f2xm1
inc
arpl
aam
sub
repnz
gs
arpl
jnp
dec
xchg
mov
push
das
pop
js
out
push
push
adc
shlb
fadds
cmpsb
sbb
jne
int3
test
xor
xchg
icebp
xchg
jge
add
hlt
add
inc
js
jp
aam
mov
pop
mov
jns
cmp
push
mov
push
or
outsl
sub
in
mov
ljmp
dec
les
adc
jae
cmp
mov
mov
pop
fldenv
in
notl
jno
in
xor
lret
lock
sbb
cmp
or
stc
sbb
into
nop
aas
pushf
mov
mov
xor
mov
inc
push
mov
sub
fistps
iret
adc
aas
out
xor
xor
mov
fadds
cmp
jmp
iret
xchg
int3
xchg
xor
clc
es
loop
ret
mov
add
call
mov
popa
rcrb
outsl
jecxz
jb
xor
mov
mov
sbb
rcrb
xchg
es
adc
es
and
ret
and
inc
lahf
call
in
add
pop
or
shr
xor
cmp
aad
fisubrs
mov
cmp
adc
cld
ret
icebp
jmp
push
mov
push
clc
sbb
jae
or
push
jmp
lcall
in
scas
or
xchg
sbb
test
pop
pop
imul
arpl
ret
xlat
aad
cmpsl
fdivrl
cmp
leave
mov
jnp
push
out
loopne
jns
ss
xchg
test
sub
mov
dec
jg
inc
jno
int
sbb
mov
xchg
vpmaddwd
and
pop
cmp
sub
mov
pop
xor
add
mull
cmp
and
arpl
adc
ret
sbb
andw
dec
in
xor
xchg
addb
ja
xor
fidivrs
clc
icebp
add
jecxz
rcl
fcoml
es
aaa
push
aad
sbb
and
xor
rcr
lahf
xor
mov
inc
adc
inc
mov
out
pop
cs
pop
mov
and
dec
cmp
jno
mov
push
jp
sbb
fdivrl
push
pusha
jnp
inc
inc
push
sbb
mov
pop
rorl
out
loop
sbb
dec
in
sahf
mov
push
loop
out
dec
pop
aam
fisttps
mov
inc
fwait
sbb
ret
imul
inc
lds
je
push
xor
xor
int3
sbb
push
adc
inc
paddusw
lds
cld
imul
push
test
scas
ljmp
mov
jl
or
cmc
xor
ds
popa
pop
jecxz
movsl
loop
ljmp
mov
push
pop
inc
mov
rcrb
aaa
dec
jp
jmp
in
pop
mov
dec
out
andb
ljmp
dec
test
xor
bound
pop
sti
xchg
push
testl
mov
adc
pop
aad
push
inc
jmp
xchg
aad
and
hlt
inc
cmp
fmul
jmp
xchg
sbb
and
or
mov
xchg
notl
push
xchg
xor
loopne
jo
push
push
mov
cmc
sbb
or
cmp
xchg
scas
xor
int
pop
jo
dec
ds
das
mov
and
lret
dec
mov
mov
js
mov
push
pop
or
sti
adc
push
pop
sti
aad
in
push
ds
rcrb
cmp
sbb
adc
loopne
pop
xchg
lea
mov
dec
dec
dec
out
xor
lea
jmp
xor
mov
insb
pop
out
shrb
and
dec
mov
lds
and
addr16
mov
in
aas
int
daa
and
or
stos
jb
sub
push
dec
adc
xchg
cmpsl
fdivs
mov
mov
fwait
std
imul
push
dec
xor
adc
pop
sub
subb
ret
lcall
xchg
popf
mov
mov
insl
and
dec
push
or
roll
push
lock
loopne
mov
jo
enter
mov
xchg
cwtl
inc
idivl
aam
loop
shll
fcmovnbe
add
js
inc
xor
or
pop
jnp
cs
ficomps
inc
addr16
test
clc
fidivrl
xchg
cwtl
cmp
mov
xor
enter
mov
and
sub
xor
add
fsubl
mov
xchg
fs
push
xchg
jmp
lret
outsb
cmp
xor
lret
xchg
mov
add
xchg
les
es
sbb
mov
pop
mov
jno
lock
xchg
mov
sub
sub
outsb
mov
aam
jae
or
repnz
sti
push
inc
jns
cwtl
push
or
and
cmpb
push
xor
subb
pop
daa
ffree
pop
xchg
pop
bound
sub
mov
imul
std
cmp
xor
cmpsb
in
dec
ljmp
pop
aas
or
cltd
inc
mov
nop
or
stos
cwtl
adc
inc
inc
mov
xor
sbb
hlt
sub
stos
mov
fimull
cmpsb
js
mov
jno
jbe
xlat
mov
sub
imul
cmp
push
in
mov
push
xlat
pop
and
movsl
arpl
sub
pop
ficompl
test
fistl
push
loop
pop
imulb
xchg
xchg
adc
and
xchg
dec
inc
fwait
rcrb
mov
mov
pop
or
sub
sub
add
xchg
in
incl
xchg
jae
lcall
lret
mov
ljmp
lret
xchg
out
add
push
cld
sub
fwait
jmp
add
sub
ds
add
into
movswl
pop
pushf
pop
cld
cmp
push
inc
mov
sub
jb
shl
popa
xor
in
ret
mov
in
push
ret
icebp
out
dec
xchg
jl
faddl
cs
and
out
call
icebp
push
stos
adc
les
scas
jbe
repnz
sub
dec
pop
cmp
cltd
push
sahf
jnp
inc
mov
movsb
fisttps
daa
fisttpll
add
mov
fwait
xchg
ss
cld
xchg
data16
iret
cld
pop
pop
xchg
cmpsl
aas
and
dec
pop
sbb
pop
mov
cmp
xchg
adc
push
ret
insl
mov
pop
mov
xor
mov
mov
push
xorb
ret
mov
divb
movsb
add
mov
cmc
ljmp
mov
pop
pop
cmc
cli
and
mov
rcrl
xor
js
mov
sbb
stos
ds
neg
and
fisttpl
fmulp
sub
stos
pop
cmp
clc
mov
jg
sbb
mov
jg
inc
clc
out
and
adc
jl
test
out
rorl
mov
mov
mov
dec
mov
inc
es
push
mov
sub
mov
sub
outsl
mov
cmpsb
jbe
pop
cmp
inc
nop
and
test
xchg
push
and
or
bound
mov
in
jmp
push
mov
adc
std
or
adc
push
mov
shrb
das
hlt
hlt
mov
push
js
test
out
cmpsb
cwtl
outsb
xor
leave
stos
push
cmpsl
inc
mov
aaa
push
loopne
sbb
inc
test
sub
daa
mov
sbb
push
mov
pushf
pushf
bound
insb
sbb
ja
lret
xchg
in
sub
bound
jb
rolb
fisubrs
jmp
xor
inc
xchg
negb
lock
add
ds
jns
divl
pop
mov
popl
icebp
leave
xchg
xchg
xor
lret
fistpll
pop
hlt
add
test
inc
scas
arpl
in
mov
jg
mov
adc
or
insl
das
das
pop
sbb
push
xchg
or
lods
in
xchg
cltd
in
and
or
cmp
cmp
pop
mov
icebp
lea
jl
adc
ljmp
mov
pop
pop
xchg
mov
negl
xchg
inc
jno
push
or
mov
mov
push
aam
mov
adc
mov
mov
or
push
stos
jl
mov
arpl
movsb
mov
mov
mov
je
xchg
icebp
js
dec
pusha
loopne
xchg
or
int
or
les
add
sbb
fistps
or
lcall
adc
xor
mov
aam
repz
insb
mov
inc
mov
fisttpl
cmpl
xchg
mov
pop
popf
mov
push
pusha
call
jne
jp
push
jo
aaa
loopne
clc
test
push
adc
fsts
cmp
xor
xchg
xchg
fistl
push
xchg
shrl
dec
xor
and
inc
mov
daa
xchg
out
push
xlat
es
in
jl
shrl
cmp
mov
addr16
jmp
aad
mov
out
scas
jne
pop
xchg
xor
test
sbbl
sub
fsts
mov
or
pop
pop
mov
in
xor
shll
xchg
mov
or
lahf
mov
push
cmpsl
insb
int3
in
dec
in
out
mov
jno
rclb
aad
mov
fadds
outsl
in
xorl
fisubrs
adc
icebp
mov
bnd
or
subl
rorl
lds
gs
pushf
fisubs
dec
int
jbe
data16
push
fnstcw
cltd
aaa
in
sub
addl
xchg
mov
imulb
ds
and
cmp
cmp
mov
mov
mov
mov
push
mov
xchg
adc
sbb
sbb
mov
jg
into
imul
int3
adc
inc
out
incb
out
lea
rol
inc
icebp
stos
das
mov
xchg
or
leave
adc
mov
je
shll
adc
clc
shlb
in
dec
int
ljmp
pop
daa
cmp
aaa
xor
add
loop
dec
and
es
cmpsb
daa
push
js
cwtl
stos
mov
adc
lret
mov
mov
mov
mov
loopne
and
or
pop
fucomip
fisubl
adc
cmc
cltd
pop
and
xchg
je
jns
xchg
and
or
jbe
ds
sub
hlt
xor
xchg
adc
push
aad
xor
inc
mov
insb
movsl
xor
and
mov
jae
adc
jl
out
mov
add
out
adc
popf
je
ret
inc
std
movsb
sbb
or
movsb
or
ss
push
push
test
inc
jnp
mov
popa
pusha
mov
scas
rolb
pop
xor
pop
adc
sti
xor
movsb
adc
pop
in
sbb
data16
test
xor
out
cmpsb
xor
jecxz
ficoml
daa
sub
jae
push
filds
mov
xor
push
rorl
adc
mov
xor
add
sti
dec
cmp
add
mov
push
roll
adc
mov
outsb
lds
in
test
repz
mov
addb
call
xor
data16
mov
add
add
xchg
xor
push
lret
std
inc
jecxz
cmp
xchg
add
xlat
in
push
jg
incb
lret
mov
mov
in
mov
mov
pop
test
lahf
fmulp
ret
xchg
mov
dec
shll
add
js
or
inc
push
jmp
clc
adc
insb
mov
bound
add
push
loopne
mov
mov
xor
mov
cmp
in
inc
rcrl
lcall
pushl
fdivs
mov
mov
fildl
aaa
andb
sbb
js
ret
mov
sti
adc
icebp
cmp
add
in
inc
jno
roll
cld
loopne
or
xor
cmc
dec
cmp
pop
ret
iret
imul
jb
test
xchg
cmpb
xchg
fnstsw
std
mov
mov
into
and
bndstx
sub
insl
loop
sbb
bound
leave
arpl
cmp
idivl
adc
mov
data16
sub
jno
cmp
jb
fimuls
ds
push
cmp
outsl
mov
clc
inc
or
sbb
xchg
jl
and
mov
test
in
sub
dec
gs
pop
stos
and
push
mov
sub
xlat
sbb
jno
jb
lods
loop
pop
outsb
adc
adc
pushf
jp
inc
mov
sbb
ljmp
cltd
sbb
push
les
daa
cmp
inc
stos
jno
mov
xchg
cli
lret
inc
mov
in
out
mov
aam
scas
lods
and
or
cmc
daa
mov
fsts
mov
lods
mov
fwait
shlb
ds
jecxz
xchg
subl
pop
or
sbb
mov
jle
sbb
in
gs
gs
loope
mov
inc
faddp
lcall
pop
rolb
dec
negl
test
mov
arpl
cmpsb
lcall
pop
in
sbb
das
insb
add
xor
push
or
mov
stc
pop
xor
mov
cwtl
inc
sub
loop
dec
lods
stc
pop
push
out
xor
add
and
adc
and
loop
or
pop
push
lcall
lock
xor
in
mov
add
inc
and
sub
mov
bnd
je
mov
lds
and
dec
mov
inc
lret
adc
cmp
adc
sbb
mov
jnp
sub
sub
lods
xor
in
jle
and
fdivl
addr16
sub
push
cmp
add
lret
stos
adc
filds
jnp
icebp
pop
mov
nop
repnz
or
loop
shrb
mov
xchg
or
loop
ret
lea
stos
pop
sub
inc
jae
in
inc
rcrb
loop
cmp
test
in
xchg
ja
xor
jo
insl
daa
jne
bound
test
jmp
cmp
js
push
and
cmpsb
adc
into
sub
int
or
scas
inc
rorl
imul
push
mov
add
pushf
dec
sub
out
or
xchg
loop,pn
cmp
std
std
out
mov
or
adc
mov
dec
xor
sub
test
xchg
ja
in
mov
sbb
rcr
add
dec
mov
xchg
cmp
cltd
cmp
aad
ret
repz
cwtl
stos
push
mov
cmp
adcb
cwtl
jnp
sbb
in
ret
sbb
sbb
repz
jg
lock
push
jle
cmc
call
daa
mov
rorl
mov
inc
faddp
in
out
lcall
hlt
cmp
push
fsubr
mov
mov
jmp
adc
jmp
push
outsl
scas
push
rcrl
loop
rorl
mov
std
sahf
push
std
pop
or
and
sahf
jae
and
mov
mov
or
test
insl
push
inc
js
xchg
or
fildll
scas
mov
xor
cmp
dec
cmp
add
mov
lahf
xor
pushf
int
imul
add
and
mov
mov
push
jl
psrlw
add
sahf
mulb
cmp
filds
inc
mov
jnp
iret
mov
jb
inc
xchg
ja
sti
or
leave
or
sub
push
leave
add
xor
lods
pushf
sbb
popa
in
pop
or
push
push
cmp
inc
loop
cmp
pushf
pop
inc
push
jae
sub
pop
add
jne
pop
cmp
popa
mov
mov
pop
inc
mov
fucomip
jg
cld
cs
push
out
cmp
add
xor
cmp
imul
outsb
lahf
clc
add
inc
cmp
mov
nop
fcmovb
jae
leave
xchg
cmp
push
push
repnz
xor
cmpsb
ja
xchg
mov
add
mov
scas
add
adc
lods
push
xchg
and
imul
add
pop
bts
fwait
sbb
dec
mov
push
popa
sbb
je
dec
xorb
out
stos
mov
in
gs
outsl
push
push
sbb
xchg
mov
lcall
cltd
out
setb
cmp
lea
lcall
cltd
inc
das
dec
sub
and
outsb
fcomps
out
push
sbb
insb
jl
jne
mov
leave
or
sbb
outsb
fnstsw
out
add
inc
pop
inc
inc
popa
adc
ret
loope
sub
aaa
pop
inc
mov
stos
cs
ds
addr16
jb
pop
cmpsl
mov
test
pop
or
js
fsts
pushf
subl
sub
pushf
sub
shlb
popf
rcrb
sbb
shrl
mov
fwait
shrl
leave
in
in
sti
mov
ds
lds
sbb
inc
xchg
jns
and
adc
shl
add
stos
cltd
dec
loop
cmp
repnz
mov
dec
lods
mov
aas
jg
pop
and
fstp
sub
adc
loopne
test
jl
imul
sbb
cs
dec
mov
adc
mov
jecxz
mov
push
arpl
shll
and
loopne
xlat
addr16
rcrl
in
xchg
mov
loopne
xor
adc
clc
aaa
sub
push
cmp
cltd
xor
push
fcom
add
sarb
xor
sub
pop
xchg
scas
cmp
add
mov
mov
push
sub
jge
out
xchg
sub
xlat
jno
adc
inc
cmpsb
sar
pop
jle
and
ficoml
mov
int
or
xchg
xchg
jbe
sbb
outsl
fadd
mov
inc
popa
jo
scas
mov
dec
repnz
pop
pop
lahf
cmp
mov
mov
xor
dec
lret
negb
sub
push
push
stc
lock
add
push
inc
shlb
push
xchg
add
scas
movl
nop
xor
lcall
arpl
std
fwait
mov
inc
shl
in
jmp
xchg
fs
jp
nop
loope
insb
or
daa
lahf
repz
cmc
cmp
fistpl
mov
dec
inc
lods
enter
repnz
inc
movsb
push
xchg
inc
aaa
inc
test
dec
addr16
and
and
inc
and
out
xchg
xchg
sub
mov
cltd
mov
stc
mov
and
dec
jle
mov
mov
in
pop
shl
mov
vpacksswb
mov
imul
aad
xchg
jecxz
imul
pop
cmpsb
cmp
clc
nop
cmp
seta
enter
xchg
push
mov
xchg
cli
andb
adcb
adc
out
inc
push
clc
popa
and
pop
push
or
mov
mov
sbb
dec
cmp
jnp
sub
xchg
popf
add
and
mov
or
pop
push
cmc
mov
mov
ss
mov
cwtl
mov
icebp
mov
je
out
ret
call
jg
inc
push
std
sbb
in
jle
add
add
stos
icebp
jle
js
scas
xchg
popf
jmp
ret
mov
lock
xchg
cld
fdivrs
lret
jmp
pusha
xchg
aam
inc
jmp
mov
es
fstpl
ja
out
repz
sub
jge
stos
cmp
or
pop
xchg
in
dec
aaa
out
push
lock
mov
mov
fs
dec
dec
push
dec
insl
dec
sbb
add
pop
cli
divl
cmpsb
cld
pop
jbe
es
daa
xchg
sti
cs
mov
ret
xlat
mov
adc
xlat
push
lds
mov
inc
clc
popa
dec
push
gs
jp
lods
sub
not
push
iret
cltd
loop
jns
stos
iret
mov
sub
jbe
movsl
fwait
xor
std
insl
outsb
add
jns
cmc
adc
hlt
clc
xchg
mov
jae
out
lahf
cmpsl
xor
cs
stc
shlb
jge
fwait
aam
jnp
pop
imul
mov
inc
outsl
push
jmp
jbe
sub
adc
push
stos
out
jecxz
frstor
cmpsb
cmp
pusha
lret
test
jmp
dec
jl
movsb
mov
sbbb
cmp
shll
xor
inc
mov
mov
mov
fadd
addr16
daa
sbb
pop
enter
sarl
inc
test
out
fimuls
or
loope
push
inc
xor
adc
out
push
test
jle
mov
add
xchg
or
dec
ljmp
xchg
pop
cmpsl
xchg
out
pop
mov
cmpsb
jmp
les
imul
xchg
ret
mov
jg
into
imul
stos
sbb
adc
adc
aam
add
nop
aam
adc
rcrb
and
call
fnstenv
lods
fstps
push
jno
pop
dec
mov
push
mov
cmp
add
into
sbbl
ss
xchg
or
pop
dec
push
or
cld
pop
sub
xchg
rcl
in
addr16
adc
aad
push
sbb
in
lahf
cmp
outsb
add
cmp
and
and
xchg
mov
inc
outsl
sti
insb
jno
inc
aam
jno
fnsave
insl
andl
pusha
andl
push
cmpb
pop
add
mov
pushf
or
xchg
lock
iret
mov
push
mov
push
lcall
push
mov
lock
adc
xor
sub
mulb
and
mov
xchg
xchg
repz
xchg
mov
or
std
sbb
mov
push
cmp
out
mov
sub
xchg
jns
push
dec
cli
stc
mov
jb
aaa
xor
test
push
lahf
in
mov
jge
jae
dec
popf
inc
mov
inc
fiaddl
cmp
stc
mov
inc
movsl
dec
nop
add
xchg
jbe
pop
mov
pushfw
add
std
xlat
adc
cmp
sbb
std
pop
adc
dec
movsl
add
mov
or
pop
shll
lahf
push
pop
out
and
nop
pop
out
mov
sub
pushf
adc
mov
sub
mov
xchg
or
lcall
gs
gs
xchg
rcrb
or
loopne
addr16
sbbl
out
int
jns
inc
inc
mov
mov
out
jnp
push
sub
cld
les
lcall
mov
shlb
inc
ret
mov
adc
mov
inc
xor
and
incb
or
push
stos
push
jecxz
ficompl
pop
cmp
push
jb
stc
cwtl
sbb
xchg
mov
mov
inc
data16
xchg
sub
hlt
psrlw
fdivs
push
push
sahf
sti
jne
xchg
push
cmpsb
aad
ja
hlt
fucomi
lahf
fdivrs
xlat
sbb
hlt
loopne
sub
sbb
loop
mov
sbb
jnp
js
stos
push
sub
dec
call
pop
pop
lahf
cmp
lret
jecxz
testl
lret
dec
clc
sub
inc
fidivrl
ret
push
lahf
mov
sub
inc
dec
and
ljmp
leave
add
lret
aaa
and
xor
push
sti
jle
gs
push
xchg
sub
or
stos
or
test
inc
jne
or
mov
xlat
push
scas
cmpsl
jmp
insb
jmp
cmpsl
dec
bound
mov
andb
outsw
xor
imul
daa
xchg
int
add
sar
mov
mov
jo
cmpsb
int3
jns
idivl
push
xor
cmovle
in
adc
arpl
or
jno
xchg
pop
or
xchg
test
sbb
aaa
ja
pop
iret
add
cmc
insb
xor
shlb
push
sub
jge
xchg
jns
add
xchg
insl
sub
add
xor
sub
jnp
inc
jg
pushf
out
mov
dec
outsl
adc
pop
and
push
out
scas
mov
test
xor
xchg
mov
inc
stos
or
dec
imul
aaa
inc
pop
lea
ljmp
pushf
mov
jge
insl
bound
jno
insb
roll
add
shlb
sub
push
femms
pop
les
pop
cwtl
negl
mov
mov
scas
mov
mov
mov
cmpsl
inc
xchg
popl
inc
cmpsl
iret
sarb
add
cs
adc
outsb
dec
mov
repz
adc
inc
pusha
stos
shlb
stos
jno
cmp
into
inc
in
xor
pop
adc
ds
pop
jbe
jge
into
mov
pop
add
mov
push
mov
pop
clc
mov
imul
xchg
pusha
insl
push
xchg
test
hlt
adc
jecxz
imul
mov
or
movsb
mov
cmp
outsl
outsb
std
cltd
cmp
scas
out
sbb
movsl
mov
es
push
sahf
fwait
jp
ret
adc
out
pop
push
loopne
mov
sbb
mov
psubw
jp
push
stos
adc
add
les
pop
daa
cmp
sbb
xchg
xor
std
testl
cmc
mov
fisttps
add
fwait
mov
cmpsb
push
into
xchg
repnz
movsb
add
xchg
imul
push
cmpsb
inc
loope
addr16
fmuls
mov
or
jnp
mov
popf
ljmp
xchg
adc
cmpsl
mov
adc
and
dec
hlt
cmp
shl
mov
sahf
inc
ljmp
es
daa
jno
testb
int3
inc
pop
jl
dec
pop
jb
das
stos
add
hlt
dec
adc
sub
xor
push
and
fmul
out
xor
cwtl
fs
subl
scas
mov
int3
adc
xor
jecxz
adcb
ds
xor
xchg
pop
scas
xchg
clc
aaa
cld
dec
mov
or
in
aad
das
fnstenv
jb
ds
push
rcll
sbb
inc
jb
mov
shlb
inc
xchg
add
dec
add
ja
sbb
pop
inc
and
sbb
jge
lahf
xchg
adc
push
cmpsl
sbb
insb
mov
jp
push
repz
stc
fdiv
insl
jge
cmpsb
inc
loopne
push
cwtl
pop
add
jbe
das
push
cmp
xorb
shlb
fs
shr
fnstenv
iret
jge
scas
test
cwtl
bound
stc
loopne
hlt
popa
iret
sub
imul
mov
inc
push
js
rorb
mov
iret
test
scas
test
push
and
enter
imul
into
clc
testb
cwtl
mov
mov
int
fdivrs
insb
push
xor
sti
sub
in
mov
dec
leave
or
imul
jge
push
xchg
dec
shll
cmp
gs
and
cmp
imul
pop
ficompl
push
xchg
hlt
pop
sti
movsb
outsb
mov
mov
pushf
es
adc
enter
mov
enter
inc
dec
sbb
jl
iret
adc
mov
sbb
insb
rcrl
jmp
loope
aad
jo
and
xchg
sarb
xor
out
push
scas
popf
or
mov
ret
xchg
xor
mov
mov
and
ja
sbb
push
mov
maskmovq
divl
lcall
ret
push
jp
icebp
add
mov
lods
and
repnz
push
inc
shll
jl
inc
std
ds
add
testb
out
xchg
xbegin
lea
fidivl
scas
jmp
xor
lahf
mov
mov
lea
mov
add
sub
mov
jne
int3
int
mov
cld
xchg
sbbl
xor
push
pusha
xchg
mov
xor
jns
adc
sbb
adc
pop
cs
mov
cmp
cld
js
cmp
and
lods
cltd
and
and
scas
jb
lret
insl
aas
leave
dec
jg
dec
adc
pop
xchg
jle
js
mov
jb
pop
or
cmp
mov
fsubrl
fsubrl
pop
loopne
daa
sbb
hlt
xchg
jge
mov
fs
mov
sub
and
dec
sbb
popa
and
pop
cli
and
bound
mov
cmc
pushw
adc
pop
icebp
jecxz
mov
test
mov
xorb
pop
fdivl
lahf
std
push
int3
fisubrl
xor
icebp
sub
inc
in
fadds
sub
fisttpll
cmp
out
aas
push
les
mov
pop
inc
pop
xor
pop
cmp
sub
fs
lds
iret
mov
push
mov
loop
push
lcall
dec
test
jl
cs
mov
inc
scas
mov
outsb
das
adc
in
out
mov
sti
fisttpll
fiaddl
mov
xlat
jo
addr16
dec
outsb
adc
mov
adc
sahf
xor
fstpt
stos
mov
les
sub
xchg
lcall
cmc
mov
aas
sarb
outsl
mov
sahf
aaa
and
js
cmp
mov
pop
sbb
js
aad
add
into
xor
pop
ds
jb
popa
adc
jle
imul
push
mov
xor
dec
mov
sbb
cwtl
cmp
dec
xchg
repnz
push
out
leave
das
movl
push
cmp
sti
call
hlt
jne
xor
out
cmp
xor
cmp
fcoml
mov
adc
out
es
mov
into
push
cmp
test
cld
insl
jmp
jmp
sub
test
lods
mov
repnz
daa
pop
sti
jbe
xorl
hlt
push
mov
xchg
pop
sbb
push
fimull
std
movsb
adc
push
popa
insl
mov
push
add
adc
shll
cmc
inc
xchg
nop
adc
aaa
aam
inc
ret
inc
cmpsl
je
push
and
inc
dec
addr16
icebp
cmpsb
push
test
dec
pop
push
mov
mov
out
add
out
cmp
xchg
push
mov
pop
and
xor
pushf
sub
push
push
xchg
mov
xor
dec
mov
jmp
imul
call
pop
inc
test
mov
jmp
jnp
aad
push
jecxz
lods
xchg
sbb
test
subb
xchg
addr16
push
rolb
push
sbb
mov
out
inc
outsb
js
mov
js
push
outsb
call
cld
mov
jp
mov
mov
jle
pop
pusha
repz
repz
mov
cli
rclb
shll
push
adc
inc
ds
daa
out
sahf
pop
lret
insl
clc
shlb
mov
outsb
fwait
mov
cmc
daa
jmp
ret
dec
inc
mov
or
and
sbb
movaps
mov
push
popa
mov
and
cmp
xor
scas
lahf
icebp
mov
mov
out
push
popa
add
clc
stos
sbb
sbb
pop
xchg
es
das
out
test
enter
push
sbb
sbb
imul
pop
pop
adc
out
cmp
sti
loope
cwtl
fisttps
jbe
push
sahf
xchg
fsubs
ljmp
sarb
jecxz
jne
fnstsw
ret
lds
dec
pop
or
jns
add
negb
cmp
push
ficomps
std
stos
mov
mov
mov
int
mov
mov
int
or
stos
test
mov
test
sbb
loop
jle
pop
mov
in
nop
out
sub
ss
fsubrl
dec
es
lock
jbe
dec
test
mov
shll
les
ret
negb
imul
stos
lds
xchg
mov
pop
lret
xor
xor
sub
out
pop
in
orb
or
cmp
lock
movsl
jno
xchg
adc
cmp
sahf
fisttpll
ret
imul
fwait
out
ret
sub
push
sub
adc
xchg
cwtl
push
mov
and
add
aad
rcll
jmp
aas
push
fisttps
adc
ljmp
xrelease
shrb
mov
dec
mov
jo
in
pop
jne
gs
mov
lcall
clc
int
cmpsl
inc
mov
iret
xchg
neg
mov
xchg
ljmp
push
int3
aas
ret
enter
test
mov
popa
hlt
pusha
add
and
mov
shll
jne
sbbb
sub
pusha
xchg
sub
cmp
stos
mov
cmpl
lret
mov
cmp
int
out
or
pop
bound
shll
jo
xchg
or
xchg
cmp
inc
out
sti
sbb
mov
mov
add
cmp
roll
insl
mov
mov
pop
hlt
adc
call
jle
bound
mov
test
and
test
fidivrl
pop
cmpsl
add
cmp
rolb
inc
mov
xor
sbb
cmc
outsl
mov
cmp
pop
inc
imul
sbb
es
out
mov
push
xchg
cmpsb
in
ja
cmc
adc
jae
sub
cs
lds
sub
fidivl
and
into
mov
je
in
test
cmc
addr16
jae
test
pop
cs
lret
xor
pusha
lock
push
and
fcompl
jl
data16
push
sub
das
adc
cmp
fbld
xor
xchg
icebp
adc
jbe
add
push
fisttpl
in
test
mov
dec
imul
mov
add
test
or
inc
add
xor
inc
sub
cmp
jne
adc
jle
dec
je
xor
stos
push
adc
push
scas
xlat
movsb
jecxz
aad
xor
fwait
notl
cmpsb
sbb
jne
sarb
push
or
out
dec
faddl
xor
sub
shlb
pusha
mov
jp
test
jnp
in
mov
test
addb
mov
fiaddl
fsubs
push
xor
fs
in
ljmp
call
add
lds
int
adc
out
mov
mov
mov
cmp
inc
push
push
mov
movsl
stc
outsl
pop
pop
mov
pop
cli
call
xchg
das
jmp
minps
mov
jns
test
push
mov
mov
push
mov
pop
movsl
cmpsb
incl
jecxz
je
leave
clc
enter
arpl
sbbl
mov
arpl
sbb
lods
push
scas
jae
jecxz
jae
pop
dec
push
push
xchg
sbb
fsubl
mov
aam
push
shrl
mov
lret
adc
in
out
inc
je
les
mov
shrl
dec
dec
xchg
push
test
andl
scas
xchg
ret
ss
repz
into
fcmovb
dec
pop
imul
movsb
outsl
and
mov
sub
jnp
xchg
adc
outsl
sub
fstpl
ds
aam
or
sub
inc
idivl
jne
add
jge
jbe
and
inc
and
fldcw
mov
sub
leave
push
mov
mov
jl
imul
fsubr
jno
jmp
adc
sbb
stc
jb
jo
sbb
test
ret
aad
mov
fldenv
pop
mov
ret
test
cli
cmpsb
in
push
jno
mov
inc
jp
adc
sub
mov
adc
pop
xor
xor
lret
lock
les
cwtl
sub
stos
sarl
jl
stos
push
add
out
inc
xchg
sbb
cmp
sahf
movsl
cmp
adc
add
xor
push
cld
mov
cmpsl
jecxz
dec
jle
aaa
lcall
add
stos
or
cmp
or
or
cmp
fsubl
mov
pop
push
xorb
push
ret
dec
pop
dec
clc
push
hlt
cmp
adc
shl
sub
xorl
imul
test
icebp
mov
mov
fsubs
cmp
daa
jnp
lret
insb
scas
aad
stos
push
inc
mov
fadd
mov
sub
nop
push
xchg
push
mov
xor
mov
xor
cli
fsubs
pop
test
or
nop
dec
push
sbb
adc
cmp
repz
cmpb
add
loop
pop
loope
js
jne
ds
xchg
ds
lods
cmpsl
je
outsl
out
dec
mov
imul
push
arpl
pop
imul
adc
push
dec
mov
sbb
cmp
jle
jns
mov
pop
sahf
adc
inc
jae
mov
lret
in
dec
mov
mov
pop
xor
nop
shlb
pop
fistpl
xchg
pop
pop
pop
jp
or
rol
xor
mov
or
mov
std
jb
xchg
mov
stos
ret
jno
std
pop
mov
mov
mov
cwtl
cs
cwtl
sub
lock
lahf
mov
inc
nop
and
loopne
mov
sbb
int
rcll
mov
rcr
pop
jo
sbb
iret
mov
mov
jae
orb
adc
jge
jns
pushf
aam
inc
mov
or
movsb
bound
push
add
roll
mov
imul
icebp
jbe
dec
xor
push
pop
push
inc
das
push
add
shl
cmpsb
in
in
cmp
jne
jmp
push
fisttpll
mov
sub
movsl
dec
lcall
mov
and
mov
scas
xor
cmp
adc
cli
push
xchg
add
xlat
fistpll
nop
push
icebp
and
jg
xchg
mov
adc
adc
fwait
push
sub
mov
dec
inc
popa
lea
loopne
push
adc
inc
xchg
adc
sbb
repnz
xor
mov
test
std
pop
lods
and
cmp
clc
push
push
bswap
cld
popa
add
and
decl
inc
or
data16
icebp
cmpsl
jae
cmp
hlt
movsb
fstps
jb
ljmp
lret
add
mov
inc
dec
jb
or
repz
in
cmp
std
mov
or
fldl
jge
mov
push
leave
ljmp
out
ja
xor
fnsave
push
mov
cld
mov
loopne
cld
scas
push
cmp
aad
rcll
mov
loop
cmp
lret
add
mov
adc
iret
push
fsqrt
js
dec
and
in
ds
loopne
outsl
stc
test
mov
repnz
lahf
inc
hlt
inc
ret
sub
xor
pop
in
das
outsb
dec
faddl
nop
sub
lds
inc
sub
mov
rol
loope
inc
lock
movsb
sar
stc
pop
push
inc
push
adc
jns
add
frstor
imul
stos
sub
repnz
stos
mov
push
sbb
pushf
cmp
inc
loope
adc
out
scas
xor
ret
jnp
sbb
sbb
lods
cmp
testb
testb
inc
jns
pop
ds
sti
xor
popa
lret
jae
cli
loop
add
ret
add
mov
add
cltd
push
lcall
lret
xor
imul
jae
data16
pop
ret
push
or
xor
xchg
rcrl
das
in
fisttpl
dec
inc
sbb
sbb
insl
test
scas
sub
xor
dec
pop
fbstp
popf
sbb
js
sub
sti
jae
call
xor
mov
hlt
and
sbb
and
fbstp
rol
cmpl
inc
mov
mov
or
cmp
cmp
and
fdivrs
pop
aad
mov
mov
push
mov
inc
js
stos
xorb
int3
xacquire
push
cmp
cld
mov
in
jno
dec
dec
fildll
xor
pop
and
in
adcb
or
pop
push
cmp
mov
mov
jo
dec
lea
mov
pop
push
dec
data16
lods
cmp
dec
std
out
hlt
les
sub
icebp
and
sbb
mov
or
mov
cwtl
or
sbbb
sub
int
lret
xchg
mov
ret
mulps
int
inc
mov
imul
aam
jge
jp
shl
cs
repnz
add
mov
push
fcoml
push
mov
or
call
cmpsl
jp
popf
stos
jnp
jne
xchg
inc
mov
hlt
addb
jbe
add
aad
mov
pop
hlt
movsb
call
jg
in
xchg
push
jnp
sub
loop
pop
aam
test
and
push
incb
jne
mov
push
push
int
lock
mov
and
cmp
andl
cld
leave
pop
jp
cmp
aaa
add
movsl
cmpsl
xchg
sbb
or
mov
inc
int3
mov
push
rcll
enter
cmpsb
cmp
pop
maskmovq
imull
xor
jecxz
add
push
testb
aas
pop
fisubrl
jecxz
scas
push
jp
and
cmc
scas
or
ja
shrl
mov
push
lret
fsubr
ret
call
fs
inc
aas
fs
lods
call
lret
ljmp
inc
arpl
push
jge
xchg
lock
mov
cs
sbb
gs
jmp
filds
xchg
fs
dec
lds
fcompl
pop
sub
mov
stos
jecxz
std
pop
andb
cmpsl
cmp
scas
out
mov
out
lcall
add
inc
enter
addr16
and
sbb
fldcw
shll
imul
sub
cmp
iret
mov
scas
sbb
clc
in
xchg
imul
pop
aam
movsb
clc
sbb
sub
out
aad
sub
stos
bnd
inc
enter
lret
ss
add
icebp
cmp
sarl
push
sbb
loopne
push
pop
and
outsl
mov
sbb
ret
pop
enter
jno
cmp
std
xor
mov
insb
mov
roll
mov
mov
js
out
jle
addb
pop
fsubs
mov
mov
sub
lock
or
outsb
rorb
jg
cli
cmpb
or
loope
movsb
jne
mov
xchg
jno
stc
sbb
jecxz
in
jns
fstps
jb
mov
inc
sbb
and
add
mov
sub
shr
fsubp
lret
sbb
lods
mov
pop
jo
dec
inc
rcr
sbb
xchg
sbb
cmp
mov
popl
pop
mov
sahf
lret
sbb
adc
pop
dec
xchg
mov
or
jge
mov
call
daa
daa
mov
pushf
pop
aam
popa
shr
sub
mov
add
test
pop
push
mov
jle,pn
pop
insl
jb
mov
mov
aam
cltd
loop
push
aas
out
cmpxchg
push
or
jnp
jns
inc
jne
inc
mov
push
dec
int3
fsubr
mov
jl
jbe
in
fnstcw
clc
jno
loope
mov
dec
sbb
cmpsl
dec
xchg
pop
push
mov
mov
sub
or
pop
xchg
jb
jb
out
clc
in
sarl
sub
jae,pn
jecxz
jbe
cmc
or
xor
fcomps
mov
test
xchg
mov
pusha
scas
add
or
subb
xorb
outsb
mov
je
jae
sbb
into
or
outsb
inc
pop
mov
adc
popa
inc
mov
or
mov
test
outsb
pop
sbb
push
mov
aad
stos
ret
out
push
push
lock
into
sub
xlat
mov
xor
pop
xchg
jl
mov
jmp
push
mov
into
sub
push
push
sub
sub
inc
ret
xchg
mov
cmp
jnp
jg
fcmovnb
bound
in
cmpsl
xchg
jno
or
pop
sub
xchg
jmp
ret
sub
daa
sahf
cmc
lea
bound
and
xchg
mov
das
and
loope
sbb
in
adc
int3
enter
enter
je
pop
xchg
addr16
std
mov
fstpl
sbb
dec
pop
mov
hlt
xlat
sbb
adc
lret
xchg
outsl
sbb
scas
lds
push
stos
xchg
pop
not
stos
rolb
mov
arpl
jns
xchg
mov
mov
xor
or
test
add
push
rcr
movsb
hlt
cltd
insl
dec
ret
and
adc
test
push
sub
jbe
inc
mov
cli
shlb
call
test
mov
shlb
sahf
inc
mov
add
loopne
cmp
pusha
aas
dec
pop
into
jae
ja
or
cmp
mov
xchg
cs
pop
push
lock
test
cmpsb
hlt
mov
jno
and
mov
in
cmpsl
xor
sbb
loopne
inc
mov
jo
lods
add
sarb
out
inc
lods
cwtl
dec
repz
ja
sub
std
je
mov
mov
clc
sahf
aam
adc
xchg
xchg
paddusb
sbb
lret
inc
aaa
xor
mov
add
add
inc
ljmp
sti
mov
stc
mov
je
jecxz
loop
sub
pop
mov
int
mov
or
cli
xchg
mov
and
adc
decl
lods
sti
push
or
ret
ret
sub
push
je
aam
dec
js
sbb
imul
or
sub
outsl
jbe
popf
std
push
and
out
inc
out
lea
and
dec
pop
repz
inc
jbe
shrb
outsb
ret
outsb
sub
pop
jno
pop
dec
adc
ret
mov
and
pop
cmpsb
cwtl
cmp
das
add
sahf
jbe
or
mov
stc
and
addl
data16
mov
addr16
cmp
sbb
push
and
rol
incl
add
add
push
sub
enter
into
xchg
testb
decl
cwtl
add
cmp
pop
clc
fisttpl
lea
adc
inc
shrb
aaa
mov
pop
lret
push
or
insl
gs
push
dec
cmc
lret
dec
mov
add
xchg
jl
cmpsl
dec
test
jg
add
jae
mov
stos
mov
adc
pop
mov
test
and
loop
adc
and
push
imul
add
dec
enter
xor
fwait
cmpsl
push
jo
loop
push
movsl
pusha
pop
sub
xchg
popa
inc
inc
xor
popf
jno
outsl
jae
add
jnp
dec
jnp
pusha
inc
gs
jge
call
adc
mov
cmpsb
stc
ds
sub
aad
inc
imul
call
bound
lea
cwtl
out
push
xor
test
jne
fwait
mov
mov
inc
xchg
in
daa
lods
mov
jo
repz
insl
repnz
push
frstor
sub
push
imul
or
ja
mov
in
pop
gs
adc
pop
cmp
xor
hlt
arpl
sub
jne
push
ja
mov
out
sbb
mov
push
cmp
ds
jo
out
ret
adc
add
outsl
dec
clc
inc
add
jle
pusha
clc
scas
cs
sub
shll
test
mov
and
into
pop
adc
dec
fmuls
jb
jns
mov
jge
xchg
stos
xchg
in
add
jge
cli
xchg
sub
pop
iret
loop
fcmovb
add
cmp
nop
xchg
pop
add
xor
shl
bound
cli
cmc
push
nop
mov
popf
imul
pushf
sahf
push
shlb
add
xchg
testb
push
dec
and
leave
dec
add
imul
popa
pop
push
mov
les
fcoml
dec
scas
cld
mov
dec
in
lahf
sbb
adc
jae
mov
sbb
outsl
inc
add
push
mov
cmc
cli
cmp
sub
mov
and
sub
mov
ljmp
push
shr
mov
std
icebp
lret
sbb
xor
outsb
scas
adc
dec
jbe
jmp
ret
dec
dec
xchg
pop
addr16
push
xchg
inc
sbb
stos
jbe
mov
pop
xchg
dec
mov
neg
push
sbb
add
insb
and
fwait
push
jmp
lock
nop
jne
jne
jl
cli
xchg
mov
dec
imul
sti
push
testl
xchg
clc
aad
lcall
dec
cmp
fisubl
dec
mov
sahf
aas
addb
dec
jbe
lods
out
fcoml
jecxz
sub
movsb
lods
movsb
call
movsb
jl
mov
sub
sahf
rcrl
push
lods
aam
call
jge
inc
gs
shl
mov
jae
push
push
inc
sub
fcom
out
out
jbe
mov
aad
mov
shll
gs
or
mov
scas
imul
mov
test
xchg
push
mov
out
xchg
push
outsl
sub
dec
call
aas
mov
push
cmp
cmpsb
and
incb
pushf
movsl
movl
sub
test
xor
cmp
loop
mov
mov
loope
test
mov
jns
les
and
xchg
lcall
stos
scas
adc
lea
pop
jmp
insl
cmp
push
ficoml
adc
inc
inc
test
adc
push
cwtl
sub
adc
mov
sub
cli
scas
pop
push
out
mov
sti
adc
pushf
add
dec
fwait
dec
mov
xchg
dec
and
in
in
popa
mov
ds
js
pop
adc
fldl
stc
pop
jno
add
jo
mov
shrb
scas
pop
add
subb
mov
dec
jge
mov
outsb
jo
aaa
int3
jb
mov
ret
jecxz
sbb
add
xor
cwtl
stc
cld
sub
out
adcb
inc
xchg
pop
xchg
imul
test
cmovge
bnd
stos
popa
add
add
aaa
sti
fadds
sbb
bound
cmc
fcmovnu
dec
push
mov
ja
sbb
or
cmpsl
or
mov
and
cmpl
mov
lods
scas
dec
xchg
mov
push
mov
icebp
dec
jbe
jne
les
scas
cmp
and
into
mov
out
xchg
icebp
fcomps
jge
out
and
fisubrl
push
sahf
popf
scas
and
imul
mov
into
jo
arpl
popa
mov
inc
outsl
add
lret
adc
push
mov
add
dec
jp
mov
clc
scas
dec
out
mov
or
dec
or
mov
xchg
icebp
or
dec
push
int3
ljmp
loope
inc
pop
test
inc
jnp
enter
dec
orb
sarl
lahf
fisubs
notb
stc
pop
ficoml
mov
popf
jl
mov
fisttpl
pop
mov
or
out
jge
cmc
cmpsb
scas
fldt
hlt
dec
adc
int
add
xchg
stc
mov
sbb
out
aad
push
dec
dec
mov
movsl
in
scas
mov
int3
jle
out
fnstenv
bound
ds
jnp
test
ds
mov
mov
jb
inc
mov
dec
movsl
mov
add
hlt
pop
lret
sbb
and
cmpsb
imul
imul
scas
es
jecxz
fimuls
push
mov
rcl
arpl
dec
ss
cmpsl
stos
clc
imul
scas
enter
faddl
mov
and
shlb
jbe
mov
xor
fisttps
lock
cmpsb
mov
int
add
dec
inc
mov
mov
xlat
fimuls
xchg
mov
popf
pop
pop
scas
stos
sti
clc
cmc
dec
rcll
insl
movsl
pusha
xor
repnz
arpl
out
jae
lds
stc
inc
hlt
stc
cmpsb
adc
jae
cld
jmp
inc
cmp
push
notl
inc
hlt
repz
mov
xor
xchg
add
mov
xchg
mov
xchg
dec
sbbl
out
in
xchg
xor
pop
mov
dec
cmpsb
sub
lret
or
out
mov
adc
mov
iret
test
xchg
mov
adc
stc
pop
loop
fadds
xor
pop
jne
cmc
int3
or
stos
mov
jb
add
insb
std
hlt
inc
cmp
jns
or
lahf
mov
pop
mov
mov
and
dec
fiadds
cmc
and
mov
repz
sar
dec
and
fistpl
leave
add
mov
mov
insl
out
lock
sarl
ljmp
add
pop
push
inc
mov
mov
mov
jecxz
mov
pop
cmc
jmp
arpl
ss
dec
sub
push
cmp
mov
imul
xor
das
push
inc
pop
xchg
cmc
daa
mov
out
out
in
addr16
lahf
xor
imul
mov
and
jno
pop
mov
cmc
cmpl
push
xor
push
push
inc
pop
cmp
xor
pop
mov
pop
sbb
sub
dec
and
sbb
unpckhps
mov
push
stos
pop
xlat
mov
daa
xor
ja
test
jmp
mov
mov
sub
jmp
stos
push
imul
jb
data16
mov
inc
mov
iret
popw
rorb
push
push
js
aam
adcl
push
int
cltd
dec
orb
repz
sarb
in
test
aaa
movsb
push
in
xor
js
push
push
xor
jg
stos
xchg
xor
sbb
shrl
lds
mov
inc
sbbb
icebp
dec
pop
and
repnz
stos
pop
xlat
xchg
cmc
hlt
add
int
popf
push
lcall
orb
pop
add
pop
out
dec
adc
mov
mov
sbb
sbb
pop
mov
mov
mov
in
ss
loope
xor
inc
cld
js
outsb
loopne
shl
xor
les
test
nop
mov
dec
jecxz
mov
xor
jg
outsb
add
mov
xchg
hlt
add
pop
or
jne
in
cmp
bound
scas
push
aas
aad
sub
testl
andl
inc
adc
pushf
sub
ja,pn
inc
xor
je
cld
push
pop
sbb
rcrb
dec
inc
push
xor
mov
xor
lret
xchg
mov
or
aad
mov
and
xor
add
xchg
dec
mov
sbb
out
popa
mov
std
jbe
je
push
fsubs
lods
push
leave
sahf
cmp
pop
test
mov
mov
in
imul
ds
sar
mov
add
loop
xchg
dec
out
mov
shrl
jns
or
mov
pop
inc
or
dec
mov
leave
mov
ret
sbb
lds
and
sbb
xchg
mov
rcrb
inc
sub
ja
jne
leave
enter
and
xor
sarl
pop
in
scas
xchg
dec
jmp
mov
repz
cmp
mov
pushf
xchg
mov
ss
jne
push
xor
push
or
mov
cld
lret
sbb
cmpsl
lock
xchg
jmp
dec
xchg
jge
inc
arpl
mov
xchg
sbbb
in
pop
adc
and
jmp
cld
lods
icebp
push
cmp
sti
pop
pop
fwait
jo
jnp
out
or
popa
outsb
xchg
adc
add
xor
mov
ficoml
mov
jo
push
arpl
mov
fldenv
jne
dec
xchg
cmpsb
sti
inc
add
dec
xor
lret
dec
fbstp
mov
cmpsb
pop
sub
xchg
sbb
adc
and
cmp
or
rcl
repz
adc
xor
stos
insb
push
lret
stc
jbe
gs
dec
mov
xchg
push
inc
cs
and
repnz
aaa
inc
or
into
int
inc
lds
bnd
pop
jge
adc
popa
jg
xlat
test
rclb
leave
xchg
mov
out
lods
pop
vmovsd
mov
lea
pop
push
enter
outsb
cmp
push
stc
adc
dec
inc
mov
inc
jg
sti
jbe
sbb
int3
or
jl
lcall
clc
jg
enter
or
xor
push
ljmp
outsb
jns
out
push
loope
add
sahf
sub
jecxz
cltd
iret
movsb
ljmp
inc
bound
daa
and
xlat
data16
ds
in
ljmp
or
pop
pop
mov
bnd
sbb
ljmp
cmp
loop
inc
xor
push
mov
sarl
lcall
add
ret
push
sub
movsl
mov
mov
pusha
adc
mov
ljmp
lahf
test
xor
rcll
or
cmp
mov
jo
in
and
outsb
in
xchg
getsec
aam
data16
loop
mov
jp
cmpsb
or
sahf
ss
pop
fsubrs
lcall
out
pop
bound
push
sub
jno
test
pushl
hlt
xor
or
or
mov
int
lahf
inc
add
jge
adc
jno
sbb
dec
jns
cmp
push
xlat
mov
out
pop
pop
or
iret
scas
std
adcb
outsb
xchg
fcompl
add
pop
loopne
add
push
mov
ret
jle
jmp
inc
and
mov
mov
fildll
pusha
lahf
push
test
stc
pop
int3
xor
or
stos
or
or
lock
loopne
popf
and
shl
cmc
cs
jb
sub
sahf
sbb
out
fcoml
aaa
test
cwtl
popf
add
dec
inc
test
push
testl
sbb
xor
push
pextrw
xorb
aam
push
xor
mov
xchg
dec
std
inc
inc
cmc
aas
icebp
sub
cli
fldz
std
or
add
xchg
jecxz
dec
fwait
pop
push
arpl
sbb
shr
scas
inc
je
sbb
ret
dec
xchg
idivl
mov
cmp
aad
fwait
or
shl
jl
insb
or
dec
iret
ja
sahf
in
sarl
or
div
or
add
jnp
xor
and
xlat
and
lret
sbb
xor
sahf
xlat
movsb
icebp
ret
sbb
sahf
arpl
lods
insb
sub
inc
pop
dec
cmp
cmp
cld
jbe
ja
outsl
add
dec
cmp
adc
cmpsl
push
jmp
pop
add
andb
cmp
cmp
rcrb
lret
xchg
pushf
enter
xchg
xchg
fildl
pop
lahf
push
shll
mov
jae
shll
jbe
cmp
pop
mov
lods
dec
adc
push
pushf
nop
or
test
push
jnp
cwtl
and
cmp
popf
test
insl
ljmp
xchg
mov
and
dec
or
mov
cltd
jo
xchg
iret
mov
cmpsb
mov
fisubs
subb
fistl
xchg
xor
and
rclb
out
or
pusha
jp
addr16
pop
fisubl
push
xchg
addr16
push
or
ret
jp
ror
xchg
dec
fidivrl
and
lret
dec
movsl
imull
mov
jo
jge
add
jmp
push
outsl
movsb
inc
jns
hlt
and
push
cmc
out
das
loope
pushf
or
jns
mov
mov
outsl
rolb
push
mov
pop
or
inc
cli
sbb
popa
inc
int3
add
addl
inc
enter
ljmp
add
xor
popa
shlb
pushl
push
cs
adc
push
cwtl
jo
jecxz
outsb
negl
aad
sub
mov
je
icebp
mov
repz
mov
jnp
mov
aam
sbb
in
dec
out
arpl
xchg
fbstp
loopne
cmp
enter
adc
jnp
xchg
aas
divl
into
inc
imul
pop
jno
and
ret
lea
mov
repz
cmpsl
pushf
repnz
xchg
inc
mov
enter
aas
notl
test
scas
mov
pop
sub
mov
xlat
adc
stc
fsubrs
shrl
cmp
decb
add
push
adc
and
cs
aam
push
cli
int
icebp
push
or
and
gs
mov
insb
jg
push
xor
inc
xlat
dec
sbb
mov
jmp
pushf
jecxz
rclb
sub
adc
add
mov
mov
and
jb,pt
mov
or
push
je
ja
xlat
mov
push
pop
mov
int
movsl
dec
call
fldt
rcll
addr16
lods
push
lahf
pop
sbb
sub
xchg
mov
in
dec
xchg
sbb
dec
or
int
xchg
xchg
int
pushf
int3
dec
adc
cmpsb
xor
push
pop
push
push
test
cmp
push
mov
lods
ret
push
jb
xchg
std
push
xor
pop
in
pushf
je
les
xchg
sub
mov
dec
out
int3
cmc
mov
ss
test
lods
outsl
xor
mov
sbb
and
jl
sarb
divb
sub
mov
inc
nop
mov
decb
dec
xchg
pop
xchg
je
add
int
data16
jmp
cmp
and
jge
ss
lret
ret
fs
mov
loope
lahf
push
nop
cmpsl
test
pop
adc
hlt
push
test
xchg
aam
cmp
sti
push
mov
pop
js
call
push
cmc
addb
jge
iret
pushf
aad
ficoms
es
test
cmp
loop
cmpsl
adc
pop
xchg
aam
xor
outsb
adc
das
xor
mov
mov
addb
sub
test
mov
mov
add
sub
push
test
in
arpl
out
jne
lods
ret
and
jb
pop
mov
cltd
add
xchg
jle
mov
fcompl
and
icebp
lods
sbb
xchg
cmpsb
sbb
and
cltd
out
xchg
int
les
loopne
add
push
jg
rcr
sbb
bound
adc
mov
dec
inc
dec
dec
mov
les
cwtl
and
mov
pop
xor
out
loope
mov
jle
cwtl
addb
in
add
loope
test
std
lods
cmp
xchg
adc
jle
xor
mov
push
sbb
cmp
push
sbbl
stc
fstpl
mov
mov
lods
aas
add
and
pop
push
mov
dec
and
pop
movsb
lret
int3
into
jle
add
imul
fldenv
push
sbb
xor
sub
mov
pop
dec
out
push
mov
mov
xchg
std
mov
fldt
lods
std
andl
xor
jno
pop
add
fsubl
lret
call
cwtl
mov
mov
movsb
jmp
mov
rcrb
or
xchg
xor
iret
call
push
int3
cmp
push
movsl
mov
aas
outsl
nop
mov
cmpsl
out
cld
jg
ret
xchg
mov
fwait
and
inc
cmp
xor
inc
sarb
jecxz
jno
xor
mov
or
jno
je
adc
or
outsl
in
int3
push
stos
add
cmpsl
add
push
add
cmp
pushl
and
outsl
shll
mov
imul
dec
mov
sbb
inc
imull
orl
add
mov
mov
lods
repz
je
sbb
icebp
and
push
or
lock
shll
idivl
rclb
or
sbb
xlat
arpl
std
ret
sbb
repnz
fwait
pop
mov
loope
mov
test
and
bound
dec
and
mov
xorl
clc
cwtl
movsl
dec
es
push
and
in
rcll
pop
stos
ret
std
jg
xlat
inc
mov
shl
mov
jne
mov
jbe
sub
jne
xor
in
pop
cs
jae
in
mov
in
out
jbe
xchg
outsl
or
aas
out
les
or
iret
xchg
cmc
sub
test
mov
mov
jge
popa
testl
clc
inc
push
adc
bnd
or
aad
adc
out
mov
or
shrb
lds
mov
daa
shrb
mov
test
mov
inc
adcb
in
repnz
shlb
mov
jge,pn
xchg
faddl
cld
mov
dec
mov
dec
add
jp
dec
lods
popf
inc
inc
push
and
sbb
sub
xor
in
xchg
aad
xor
lcall
inc
mov
mov
adc
outsl
sub
aaa
add
test
dec
or
fldcw
fsubr
fcoms
repz
push
mov
mov
fisubs
gs
jmp
addr16
push
jns
loopne,pt
jge
outsl
decb
fwait
mov
mov
mov
xor
or
sbb
lret
in
add
xchg
movsl
pop
mov
mov
int3
adc
xchg
ja
repnz
adc
cmc
into
stos
lret
je
pop
lock
fcomps
xlat
rdmsr
pop
roll
rolb
aad
mov
xchg
jmp
jne
inc
jge
aad
sbb
cmp
pop
push
mov
ret
divb
add
or
loopne
mov
xor
fsts
loop
pop
xchg
pop
push
pop
pushf
cmpsl
and
lcall
dec
mov
popa
stos
fimuls
rcrb
prefetcht0
push
mov
in
mov
jb
cmp
jge
push
and
popf
mov
rcr
mov
sub
testb
loope
cmp
xor
xchg
jecxz
xchg
xor
jecxz
cmpsb
and
and
xchg
cmp
dec
pop
rcll
inc
repz
les
push
push
dec
pusha
xor
movsl
bound
movsb
fiadds
mov
or
lock
mov
stc
pushf
fstps
jp
dec
fwait
andl
jecxz
fstpl
fstpt
imul
arpl
mov
push
dec
fwait
insb
lahf
xchg
dec
lea
xchg
jp
loopne
pushf
push
rcr
cli
push
jbe
add
jmp
adc
cs
dec
sub
add
xchg
lock
enter
jle
mov
ja
push
mov
mov
push
jmp
idivl
scas
dec
xor
and
add
cmp
fs
or
loopne
adc
mov
sbb
test
lock
jae
xchg
or
repnz
nop
lret
add
sub
outsl
pushl
test
cmpsb
movsb
xchg
xchg
cli
fwait
nop
mov
lcall
cli
fnstsw
sbb
or
jg
mov
sahf
adc
scas
out
mov
test
enter
insl
mov
les
or
sti
loop
and
jecxz
addl
or
add
insl
nop
inc
lea
addb
sbb
mov
push
dec
push
mov
push
xchg
lcall
scas
std
in
mov
movsb
pop
popf
lea
push
xor
xchg
add
aam
mov
aaa
sbb
adc
leave
mov
sbb
pop
and
out
test
jo
or
mov
jmp
ljmp
sub
ret
xchg
imul
ret
add
sti
push
jno
sti
cld
call
cmp
lds
cmp
ret
jo
pushf
adc
lret
sbb
mov
icebp
cltd
mov
pushf
mov
pop
push
xor
adc
mov
lds
jns
inc
and
push
aaa
mov
sbbb
cld
adc
ret
fs
push
add
xor
push
hlt
mov
add
jo
mov
xchg
fisttpll
fwait
lea
popa
inc
mov
ret
xchg
out
outsb
js
aam
lock
ds
clc
adc
call
jns
testl
leave
rclb
add
pop
add
lock
and
insb
movl
mov
mov
nop
xor
stos
mov
xchg
movzwl
das
cli
decb
dec
pop
pop
movsl
mov
sbb
xchg
imul
add
aas
out
pop
xchg
testb
cmp
fstpl
push
mov
shll
sbb
sbb
xor
in
adc
push
outsb
jb
xchg
fldcw
mov
arpl
or
pushf
daa
jp
into
inc
or
inc
dec
and
pop
jno
cmovge
mov
push
xchg
jp
lods
add
xchg
xchg
lds
push
popa
scas
push
arpl
adc
xor
inc
sarl
mov
xchg
cmp
test
cmp
jl
pop
jg
gs
fdivrs
imul
ja
sbb
scas
sub
test
xor
out
mov
add
mov
pop
fisttps
push
lahf
fisttpl
outsb
pop
lcall
pop
xor
aaa
mov
sar
mov
daa
scas
orl
jnp
insb
cmp
rcrl
rolb
aas
lods
fisubl
and
mov
or
xchg
cmp
dec
cwtl
pop
ljmp
push
cld
out
pop
jg
add
orb
add
ret
lahf
fst
lret
cmp
cmpsl
int3
xchg
lret
shrl
faddl
pop
imul
ja
mov
push
pop
xor
lea
aas
int
repnz
add
sbb
cmpsb
in
sahf
out
cmp
fs
cli
loop
and
popf
mov
push
and
inc
popf
push
xchg
in
jmp
fdivrs
sbb
adc
jge
shrb
loope
pop
ds
movsl
pop
jecxz
bound
pusha
push
sub
andl
enter
lcall
adcb
push
sbb
mov
lods
fcmovnbe
lahf
adc
test
nop
out
mov
xchg
inc
mov
fwait
pusha
xor
int
push
das
dec
outsb
leave
ret
cmc
inc
inc
pop
das
loope
push
lahf
dec
ss
bnd
nop
sub
pop
push
pop
dec
fcomps
adc
shrb
jb
aam
and
clc
xchg
icebp
dec
jg
nop
loopne
test
mov
scas
inc
sub
xor
clc
sti
push
rcl
inc
pop
push
pushf
mov
jnp
sahf
ss
fidivrs
mov
in
and
rcrl
xor
lahf
mov
and
loope
sub
mov
cmc
add
push
xor
fwait
mov
and
pusha
hlt
adc
and
test
repnz
mov
stc
out
out
iret
enter
jne
xchg
pop
cmpsb
jns
repz
adc
data16
xlat
jb
stos
scas
std
in
jg
lcall
das
enter
in
cmpsl
push
push
adc
jmp
or
jp
rorl
in
cld
dec
idivb
push
daa
enter
adc
pushf
mov
xchg
mov
adc
adc
mov
add
adc
pusha
mov
nop
mov
dec
and
aaa
pop
cltd
sbb
fimull
dec
jmp
adc
loopne
out
push
mov
sub
jmp
lahf
lods
outsb
mov
andb
mov
inc
sbb
jp
cmp
xor
outsb
sti
cmp
mov
enter
ja
pop
mov
mov
and
sbb
sbb
xor
scas
mov
fistl
rcr
sar
ljmp
in
xor
sbb
or
pop
adc
sub
or
insl
xor
inc
movsb
pop
inc
call
push
fnop
imul
push
cmp
aam
loop
mov
push
add
dec
jg
les
inc
mov
dec
mov
push
push
push
pop
adc
pop
imul
xor
dec
jnp
dec
mov
xor
sub
int
loope
mov
mov
adc
lret
mov
inc
insl
mov
in
stos
js
mov
or
inc
or
loop
sbbb
cmc
into
mov
stc
or
stc
enter
fs
mov
pop
test
dec
outsb
cwtl
xchg
cltd
sub
out
adc
dec
mov
jg
dec
mov
xchg
mov
lahf
daa
mov
loop
cld
cmp
jno
add
mov
add
mov
mov
sub
sti
xchg
and
mov
cmp
loop
mov
mov
fwait
mov
fiadds
sub
push
stos
xor
adc
push
test
add
mov
xorl
xchg
sbb
mov
push
lcall
mov
sbb
repz
sub
test
bound
jo
push
std
outsl
bound
sub
sbb
dec
decb
aad
ds
adc
xchg
pop
jl
mov
push
sub
mov
ficompl
adc
test
out
push
cmp
in
lock
rcll
xchg
mov
mov
rcrb
loop
adc
and
out
adc
pop
shlb
out
add
jnp
push
cmpsb
mov
scas
push
fdivp
popf
nop
sbb
enter
pop
cmp
in
and
data16
int3
xchg
mull
and
fs
mov
dec
fs
shrb
and
bound
jbe
jae
cmpsl
add
or
dec
sbb
cmp
out
stos
pop
pop
inc
movsb
hlt
and
std
xchg
loop
movsb
mov
xchg
cwtl
test
and
mov
adc
orl
test
push
es
repz
stc
pop
bound
mov
xchg
hlt
push
jl
xor
lock
lahf
lea
jns
aam
in
ss
leave
pop
cmp
pop
nop
outsb
inc
inc
sbb
xchg
movsb
ret
dec
push
fnstsw
inc
push
mov
jle
inc
fisubrs
inc
jg
enter
jecxz
xor
xchg
loope
testl
inc
cmp
push
das
lock
movsb
jecxz
jb
fcomi
shll
ja
xor
and
pop
jnp
mov
test
pop
pop
sarb
add
pop
lcall
test
push
mov
jmp
pop
or
lret
out
test
and
fdivl
ret
cld
add
call
jmp
notl
xor
mov
jbe
popf
adc
mov
loopw
mov
pop
mov
xchg
push
call
push
or
nop
incb
fs
cmp
push
sbb
fidivs
pop
dec
inc
push
fidivrl
outsl
jnp
push
imul
jmp
mov
push
xchg
push
xor
cli
mov
fldl
or
aaa
in
xor
adc
inc
jno
cmp
idivb
shll
push
mov
jl
or
bound
cwtl
jmp
jecxz
sbb
pop
dec
lds
xchg
cli
lea
push
pop
sarb
cmp
test
mov
mov
mov
pop
rcr
sub
pusha
inc
pop
mov
mov
mov
mov
sub
adc
test
jecxz
test
lcall
fwait
and
addr16
or
xchg
jnp
dec
jl
push
cld
icebp
daa
test
popl
lret
aas
xchg
adc
lcall
stos
sub
stc
andl
loope
jle
lea
adc
pop
iret
mov
fwait
in
shlb
pushf
push
adc
cmp
push
push
leave
aas
test
mov
mov
push
xchg
popa
push
in
invd
aad
xor
mov
push
mov
in
push
sbb
sbb
jno
mov
push
ds
and
push
sbb
xor
add
gs
adc
or
push
jg
fdivr
out
icebp
sbb
sbb
test
push
jo
out
enter
mov
in
rcrl
fwait
push
cmp
not
mov
insl
push
xchg
xchg
jo
fsubl
call
mov
sub
seta
mov
movsb
mov
aam
xchg
push
mov
les
xchg
sbb
nop
daa
inc
in
mov
sbb
mov
sbb
add
fists
lcall
icebp
fwait
scas
shl
bswap
mov
dec
add
mov
or
xor
scas
aas
test
mov
push
std
outsl
jns
imul
mov
xor
imul
adc
push
pop
xlat
shl
mov
dec
and
pop
scas
cld
mov
test
std
and
fisubl
cmpb
mov
out
xchg
push
dec
xchg
ret
mov
jmp
mov
pop
in
mov
inc
imul
lret
push
jns
jne
mov
dec
clc
sub
jecxz
inc
gs
jno
rcrb
lret
and
loope
lret
xchg
popa
std
in
ret
scas
xchg
and
push
cmp
mov
lret
mov
push
cmp
mov
xorb
in
xchg
repnz
outsl
add
vmovddup
stos
sub
cmpsl
push
jns
mov
and
call
xor
leave
addr16
jp
dec
ss
push
fs
mov
dec
fidivrs
test
mov
add
sbb
cmpsb
inc
test
xchg
mov
sbb
xchg
cmp
sbb
adc
pop
xor
inc
mov
ds
imul
push
cmp
clc
push
mov
jecxz
enter
or
pushf
mov
sub
xchg
cmpl
mov
or
lea
cmp
mov
xchg
pop
ds
adc
sub
aad
cli
sbb
sub
popf
jno
push
imul
cwtl
insb
push
pop
cmp
mov
fwait
sbbl
loop
mov
dec
out
int
leave
lcall
and
and
fs
dec
rcl
xor
in
xor
mov
mov
outsl
dec
mov
or
inc
pop
pusha
dec
push
out
mov
sub
es
cmp
xor
push
jp
loope
arpl
mov
cmp
push
outsl
test
jno
and
xchg
fistpl
imul
ljmp
push
cmpsl
mov
adc
cltd
jge
jb
cmc
jmp
aaa
js
lahf
repnz
xor
pop
fidivrs
out
push
lds
in
movsb
insl
pop
sarb
stos
shrb
mov
xor
mov
std
cmp
push
adc
ds
loope
push
adc
dec
test
shrb
sbb
scas
and
je
adc
mov
sub
imul
mov
xchg
pop
sbb
mov
shlb
adc
movsb
mov
mov
sub
adc
arpl
icebp
popf
arpl
push
seto
popa
sub
in
aad
dec
adc
shl
mov
jae
mov
outsb
mov
in
jmp
jmp
data16
cmp
iret
jns
xor
lcall
push
dec
and
sbb
je
pop
jb
aas
add
mov
inc
insl
xor
pop
sub
push
and
xchg
jg
clc
push
mov
push
pusha
enter
je
xor
cs
sbb
outsl
mov
mov
stos
xor
push
jns
loope
sahf
add
in
push
outsb
jmp
out
jo
or
icebp
xor
repnz
imul
and
pushf
nop
xchg
lea
pop
ret
sbb
and
mov
xlat
loope
out
adc
sbb
dec
enter
inc
push
dec
jns
pop
inc
rcrb
loope
lret
dec
push
or
mov
mov
movsb
push
lcall
insb
jecxz
jl
cmp
inc
inc
lds
aad
rclb
jp
sarb
imul
dec
push
cmp
mov
xor
testl
fidivrs
push
clc
mov
stc
ds
out
fs
sahf
rorl
ja
xchg
adc
jbe
incl
xchg
clc
loope
addl
cs
repz
push
adc
sbb
and
jne
xor
dec
cwtl
push
dec
out
les
test
dec
out
push
mov
es
push
pusha
or
xor
jb
pop
in
sbb
and
movsb
fcompl
lea
sti
jle
repz
and
push
lret
jns
add
stos
mov
aaa
sub
cmp
iret
jo
jae
lahf
push
sbb
mov
add
and
jecxz
add
aam
adc
lahf
pop
add
aaa
les
adc
mov
fs
xchg
dec
mov
aad
mov
adc
pop
mov
rcrl
repz
fldenv
outsl
dec
in
insb
nop
flds
loop
scas
stos
cmp
or
or
inc
add
aam
xor
jecxz
sbb
or
loope
insl
imul
adc
push
shll
imul
das
xchg
adc
popf
mov
jmp
sbb
insl
test
subb
pop
cld
adc
adc
xor
mov
call
adc
fsubl
pop
jb
fwait
xchg
test
mov
imul
jg
pop
jg
sub
lea
sub
movsb
lods
stos
sbb
mov
cld
ficoml
jne
mov
xchg
push
adc
add
test
je
mov
push
std
cmp
or
push
into
inc
jno
je
inc
adc
cli
testl
inc
fwait
xchg
sbb
jns
push
ljmp
pop
pop
pop
ret
cmpsb
aad
insb
xchg
orb
cmpsl
cld
mov
ret
xchg
fisubl
enter
mov
pop
out
xchg
test
outsb
jbe
insb
iret
cmpsb
inc
inc
sub
movsl
mov
and
xlat
fadd
mov
inc
test
outsb
jno
mov
push
mov
mov
imul
jmp
leave
repz
inc
jo
cwtl
or
test
cmp
in
roll
je
dec
test
iret
in
dec
stos
movb
movsb
push
push
addr16
adc
cmc
ja
mov
sub
pop
lods
daa
dec
jmp
fimull
sti
sbb
fs
and
mov
push
jae
pop
jo
add
or
int
fstl
push
mov
xor
inc
lea
mov
xor
cltd
out
jmp
push
mov
dec
data16
push
aad
call
and
in
mov
inc
orb
cli
neg
out
imul
push
jo
inc
inc
inc
push
pushf
xchg
pop
fmuls
push
scas
xlat
out
leave
cmpsb
mov
out
enter
sub
xchg
sub
mov
sub
xchg
sbb
or
enter
add
cld
data16
inc
es
push
jp
jp
lods
insb
imul
pop
ljmp
and
xchg
xchg
sbb
jno
aaa
jbe
nop
inc
lock
cmpsl
jae
cmpl
hlt
mov
adc
mov
push
rclb
xchg
pop
repnz
push
push
cmp
adc
dec
push
lcall
push
movsb
test
negb
dec
jp
jno
pop
loope
shlb
cwtl
jae
into
popa
int
mov
sub
clc
or
mov
push
xchg
es
fidivs
fs
cld
icebp
adc
jae
imul
pop
jmp
adc
inc
data16
imul
dec
pop
int3
sub
test
cli
inc
or
mov
xor
fidivrs
icebp
enter
push
mov
aad
push
stos
push
adc
mov
ja
pop
mov
out
push
and
loope
mov
and
sbb
jmp
jmp
add
inc
cld
inc
xlat
imul
jno
jge
push
stos
or
push
jo
or
push
shll
add
sbb
ljmp
fidivrs
popf
dec
addr16
mov
inc
xor
push
pop
mov
addr16
test
xlat
insl
pop
cmp
outsb
jg
or
dec
out
or
add
pop
clc
scas
inc
mov
out
pop
fstpl
push
xor
add
ror
js
push
adc
dec
or
jl
aas
rcr
cmpsl
xchg
push
mov
cmp
cwtl
mov
add
insl
aaa
pop
push
pop
dec
popa
cld
pop
dec
cwtl
xchg
lcall
xchg
or
sbb
iret
cmp
or
divb
bound
data16
push
cmp
lods
scas
mov
loop
jb
pop
inc
push
adc
imul
xchg
popf
fcoml
or
gs
inc
sahf
jmp
xor
dec
or
or
cmp
es
mov
bound
sarb
mov
dec
ret
mov
add
jle
hlt
dec
lret
shll
jge
dec
cli
adc
sbb
mov
xor
adc
addr16
cmp
fs
or
xor
push
and
or
or
xor
in
rolb
adc
lahf
sbb
stc
repnz
int
insb
int
shll
mov
dec
lcall
or
int3
push
xchg
loop
sarb
cmp
mov
stc
imul
xchg
push
stc
loopne
nop
shrb
outsb
cli
insl
or
enter
sbb
int3
ljmp
pop
or
test
nop
leave
popf
and
dec
repnz
or
ljmp
mov
repz
xchg
and
sbbl
push
jl
and
mov
dec
js
aad
fcmovb
adc
mov
mov
pop
pop
push
sbb
in
clc
cmp
adc
lcall
mov
mov
dec
lret
rorl
scas
pop
xor
cmc
movsl
aaa
sbb
mov
mov
aas
daa
xchg
in
xchg
sahf
xchg
hlt
jne
clc
addr16
std
push
test
lea
imul
mov
sub
xchg
adc
jle
fs
in
in
aas
syscall
or
cmp
fst
iret
icebp
sbb
add
ss
leave
aad
adc
or
in
cmp
inc
nop
xor
sti
fistpl
test
sbb
repnz
pop
sub
outsb
inc
inc
sub
imul
clc
mov
in
test
daa
cli
shlb
rorl
add
data16
jno
les
shrl
roll
je
xor
les
test
mov
sub
adc
inc
out
pop
js
or
repnz
out
shrl
pop
movsb
lret
inc
lods
sub
or
mov
ffree
lock
loope
sub
cltd
mov
sub
cmpsl
fwait
loop
dec
leave
call
arpl
and
ds
outsb
lret
outsl
cmp
test
add
push
jle
cmc
test
mov
xchg
sbb
pop
shrb
xlat
outsb
popa
inc
scas
imul
shlb
adc
ret
cmp
icebp
daa
dec
mov
stos
inc
rcr
mov
test
es
jg
dec
dec
cli
cli
dec
dec
test
jo
or
int
fs
lock
loop
je
das
mov
out
sbb
dec
or
outsb
pushf
inc
aam
sti
stos
pop
and
cmc
adc
fs
and
mov
push
sbb
dec
jo
xlat
xor
into
lods
inc
jl
mov
mov
test
loope
outsl
test
fstp
imul
xor
pop
mov
dec
lahf
shrl
sbb
daa
repnz
mov
xor
jae
and
clc
mov
mov
ss
lcall
jne
inc
add
xadd
mov
jae
aad
inc
sbb
xor
add
pop
sbb
call
mov
or
sub
bound
push
jmp
add
mov
add
push
pop
fs
and
lds
insb
mov
out
xorl
cltd
adcb
adc
jne
cltd
adc
mov
xchg
sti
adc
mov
loope
popa
add
out
pop
mov
int
and
fistpll
jp
std
sub
jnp
fwait
jl
adc
test
out
subb
cwtl
sbb
pop
pusha
inc
sahf
inc
mov
imul
sub
sub
adc
jmp
mov
movsl
mov
std
movsl
dec
movsl
pusha
mov
add
and
shrb
fsubrs
sub
imul
ljmp
inc
sub
movsl
push
bound
loop
ret
sub
sbb
mov
movsl
cld
stc
and
fiaddl
add
mov
shr
or
cmp
out
mov
cld
sub
inc
cmpsb
mov
nop
xor
aam
imul
fistps
mov
das
rcr
inc
sub
ljmp
mov
push
aad
fdivrs
cmp
in
rcr
loopne
sbb
jmp
gs
shrl
mov
sub
push
inc
rorb
mulb
cmpsl
lods
jg
enter
pop
fs
sbb
sbb
jg
pusha
mov
and
cld
stos
sbb
xor
mov
das
stos
shll
xor
pushl
adc
or
cmp
push
mov
out
pushf
add
lods
fstpt
mov
inc
pushf
xor
sbb
out
jbe
aas
push
inc
and
adc
filds
shl
push
xchg
cmovb
ljmp
hlt
jecxz
fsubs
fs
scas
lods
jmp
dec
mov
into
sub
shll
ret
aaa
push
mov
push
gs
mov
movsb
lret
mov
ret
mov
lcall
std
and
sub
push
sti
ret
je
in
push
pop
mov
inc
loop
jecxz
sub
mov
mov
repnz
mov
sub
in
xchg
jb
push
or
gs
sub
jmp
inc
sub
cmpsb
dec
sahf
dec
ficoms
and
rolb
mov
ss
xchg
push
adc
pop
xchg
xor
and
or
inc
fiaddl
scas
sti
outsl
push
roll
jo
inc
cltd
subl
jle
aam
aad
pop
arpl
and
rcrl
push
fldl
sub
mov
cltd
xchg
inc
and
test
pop
adc
adc
xor
adc
or
mov
inc
push
push
pop
xlat
pop
adc
or
je
andl
inc
pushf
dec
and
lds
bsr
in
mov
sbb
mov
movsl
xchg
dec
jge
pop
push
pushf
add
sub
insl
jae
mov
subl
cmp
mov
scas
cmpsl
cmp
mov
dec
adcb
xor
scas
cld
enter
jbe
cmp
inc
fsubrl
mov
out
shrl
xor
mov
adc
int
or
pusha
mov
int3
jmp
in
sub
daa
subb
std
dec
std
mov
aad
sub
pop
sbb
cltd
add
sahf
das
mov
mov
or
cmp
adc
xor
xchg
jle
sub
inc
jp
mov
mov
adc
mov
xchg
mov
out
ss
jp
sti
jg
subb
int3
cmp
dec
into
rcrl
mov
in
cmp
bnd
insb
sbb
inc
repz
push
or
fst
xchg
sub
jg
insb
out
xchg
hlt
pop
add
in
push
lret
xchg
and
fnstsw
mov
adc
jno
xor
and
mov
cmp
fwait
jno
jb
push
aas
movsb
test
jo
jl
mov
push
subb
add
iret
jnp
or
stos
loop
jnp
sbb
sar
push
add
pusha
push
push
sarb
jno
xchg
ret
mov
decb
clc
pop
pop
xchg
xor
pop
mov
add
mov
mov
mov
clc
sahf
or
pop
sbb
ljmp
add
dec
pop
jno
xor
ljmp
xchg
mov
inc
push
mov
mov
xchg
sbb
loop
cmp
dec
ret
lret
cmp
mov
fisubrs
rep
sbb
xchg
insb
cmc
shr
lea
jns
cld
mov
mov
dec
fsts
pop
and
cmpsl
jge
push
pop
imul
xchg
inc
fsubrl
push
outsl
push
dec
rorl
add
or
es
jle
bound
or
xor
popa
push
sub
cmc
data16
inc
rorb
ficoml
and
xchg
pop
out
lds
leave
leave
jmp
sarl
mov
inc
ss
fnsave
scas
arpl
mov
push
insl
xor
pop
divl
cmc
jg
popa
and
adc
or
jp
bound
sub
jbe
dec
outsb
insb
mov
xchg
mov
scas
pop
cmpsl
pop
ljmp
scas
icebp
xor
mov
mov
dec
daa
out
adc
aam
sub
sub
pop
inc
inc
mov
in
or
pop
lret
jno
hlt
xlat
and
push
mov
cmp
popf
mov
sbbl
or
imul
pop
cmp
pop
pop
pop
gs
add
xor
dec
lahf
cmpb
xchg
lret
mov
pop
fstpl
pushf
fidivrl
jge
sti
add
mov
add
pusha
negb
stos
jp
cltd
jb
jbe
inc
jecxz
iret
ret
xchg
sbb
jbe
cmp
cmp
out
xor
add
mov
stc
mov
and
add
ret
adc
bound
jb
sbb
dec
popa
loopne
insb
call
cmp
add
xchg
imul
jns
cmpsl
inc
mov
or
adc
faddl
inc
xchg
xor
adc
pop
imul
adc
imul
and
pusha
or
jb
gs
ret
adc
stc
clc
test
fs
pop
ljmp
les
testl
jns
insl
sub
sarl
in
ret
imul
dec
inc
inc
jecxz
fcmovnu
daa
inc
xchg
fildl
lds
aaa
divl
divl
cs
pop
or
loope
shr
sbb
mov
xchg
fwait
mov
ds
iret
xchg
in
pop
and
pusha
jae
xchg
scas
imulb
ja
jmp
cmp
add
dec
sahf
sbb
jb
ret
sahf
pop
sbb
add
fsubl
out
push
mov
and
mov
data16
inc
ja
lea
loope
adc
sub
xorl
sub
fs
rcl
sar
outsb
inc
repz
lret
adc
xchg
adc
mov
add
and
dec
lahf
xor
add
mov
xor
cmpsb
sub
int3
fadd
test
mov
int3
jl
mov
xor
ret
mov
push
es
adc
adc
or
jae
testb
ret
jne
or
arpl
fstpl
cwtl
std
mov
sbb
lea
aas
adc
popf
inc
rorb
mov
das
mov
ss
pop
cs
pop
out
sub
and
and
test
push
jne
nop
pop
or
fwait
iret
aas
mov
pop
mov
dec
loop
test
xchg
inc
cmp
xchg
add
lret
push
in
jns
repnz
aas
negb
es
pop
ficoms
insl
sbbl
push
ret
mov
cltd
fldcw
xchg
aaa
xchg
pop
leave
call
xor
cmpsb
repz
xor
nop
jecxz
mov
scas
cmpsl
shl
cmp
loopne
stos
push
das
popf
stos
add
lds
or
cmp
insb
lret
push
adc
add
nop
add
orl
push
xor
mov
insl
lock
movsb
call
xchg
imul
pushf
mov
iret
les
es
push
rorl
push
add
loop
out
xor
js
sbb
pop
push
xchg
into
cmp
ret
dec
std
or
add
and
shl
bound
sbb
lds
jae
fistpl
jmp
ss
push
cmp
in
scas
enter
add
mov
pop
ds
jb
mov
gs
mov
xor
add
jne
mov
sub
in
enter
and
in
imull
xchg
add
sbb
cmp
test
or
cmp
mov
in
in
push
push
xor
mov
out
lods
stos
jl
scas
mov
jecxz
dec
push
mov
push
out
ret
xchg
js
inc
outsl
xor
stc
mov
jmp
repnz
stos
pop
inc
pop
sahf
mov
lea
popa
clc
pusha
cli
pop
jmp
pop
push
push
xor
movl
test
inc
dec
xchg
jge
pusha
scas
jne
roll
aad
and
push
pop
pandn
mov
movsl
push
jns
dec
xlat
jo
mov
shrb
frstor
hlt
sbb
cmp
sarl
inc
jge
mov
sarl
sub
pop
dec
aaa
jge
mov
rclb
xor
push
es
bound
cmpsb
les
mov
lods
mov
in
rcrl
mov
dec
jns
aas
movsl
pusha
push
cmp
xchg
jp
mov
add
or
push
lret
popf
popf
movsl
icebp
mov
mov
push
test
mov
xor
lcall
daa
ret
aaa
push
scas
ljmp
mov
xlat
xor
mov
sub
sbb
ror
cld
pop
or
into
xchg
sbb
sbb
repnz
gs
mov
push
sbb
jb
and
gs
notl
sub
dec
fdivrs
inc
push
repz
sbb
xchg
mov
and
pop
push
and
dec
cmpb
loope
mov
sarl
jne
xor
repnz
ds
add
mov
lret
fbstp
mov
xlat
lods
imul
push
push
ret
negl
dec
jmp
dec
ds
fcmovnu
sbb
jae
incl
ljmp
cmp
mov
out
in
pop
insl
inc
dec
aas
loopne
adc
mov
mov
pop
mov
dec
xor
mov
je
mov
mov
out
ljmp
out
add
jbe
jmp
xor
pushf
les
lds
mov
xchg
bound
xor
sbb
push
jns
sub
movl
outsl
dec
test
and
push
inc
mov
xchg
aaa
pop
jle
int3
dec
mov
push
xchg
pop
xor
aad
and
outsl
nop
lods
inc
pop
test
stos
pop
push
xor
lock
mov
mov
cwtl
mov
mov
rol
shll
jle
xchg
adc
jno
jbe
fistpll
fisubrs
push
fs
addb
add
dec
xor
int3
ret
dec
in
mov
jno
xor
push
cmp
aad
mov
cmp
out
icebp
xchg
pop
arpl
pop
and
jae
test
call
cmc
mov
mov
dec
sbb
xor
sbb
add
dec
bound
inc
dec
adc
into
xlat
test
dec
arpl
xchg
bound
loop
cmpsb
lock
out
rcr
push
lcall
cmp
xor
test
pop
lahf
fldl
sub
and
and
and
pop
or
outsl
jbe
inc
hlt
cmp
rcll
sub
xlat
lret
mov
insl
daa
das
and
out
cmpsb
ljmp
add
inc
fadds
dec
imul
outsb
or
mov
mov
lcall
les
adc
mov
cmc
mov
xor
xor
and
mov
icebp
lcall
mov
xchg
pusha
les
shlb
ds
lods
outsb
pusha
push
mov
int3
jecxz
xchg
pusha
pop
cmc
push
push
notb
aam
out
inc
pusha
or
daa
outsl
mov
loop
out
addr16
inc
rcrb
icebp
push
jnp
scas
out
sub
nop
mov
in
jecxz
sub
in
sub
imul
sarl
add
outsb
shll
dec
mov
xor
mov
push
mov
add
pop
mov
xor
xor
cmp
and
jmp
bnd
sti
xchg
cmp
inc
insb
sub
aas
mov
inc
cmc
and
push
stos
xchg
stos
mov
xor
adcb
loope
adc
xchg
dec
bound
lret
jmp
ficoms
mov
incl
mov
dec
sbb
mov
scas
test
fiadds
xor
add
and
and
call
aad
xor
aad
das
cmp
test
lods
leavew
arpl
fcomps
jp
repz
in
data16
adc
and
mov
cmp
or
add
xor
and
push
bndldx
aas
push
jne
movb
mov
jmp
insl
mov
mov
not
and
mov
cwtl
add
pop
sub
ret
sub
out
insb
and
mov
or
adc
adc
icebp
sub
mov
movaps
subb
or
je
fisttpll
push
in
dec
sbb
jl
pop
or
push
outsb
jp
fwait
mov
inc
shrb
fucomp
fnstsw
fldcw
pop
hlt
mov
sub
mov
fwait
pop
xor
sbb
inc
fwait
mov
pop
lret
mov
fstps
out
lahf
cmp
cmpsl
pop
in
shr
sbb
rol
into
or
jae
cmc
imul
xchg
cmpsb
enter
pand
dec
jle
frstor
imul
jnp
jmp
ss
stc
aas
or
pop
xchg
addr16
cmpsl
aas
jo
shll
mov
pop
enter
add
cwtl
xor
shrl
xchg
xlat
imul
push
je,pn
xchg
andl
and
mov
mov
lahf
push
mov
mov
cmp
lods
inc
movsb
jae
mov
jl
or
das
pop
es
dec
stos
inc
mov
dec
sub
dec
adc
inc
adc
sbb
cmp
or
daa
inc
fdivs
stos
or
jg
cmp
push
cmp
mov
test
push
iret
ds
adc
imul
jbe
aaa
push
in
js
push
iret
jno
mov
push
fidivl
aas
mov
lds
or
add
pop
jg
shll
sbb
call
mov
mov
movsl
in
in
sub
sbbb
cmp
mov
sbb
das
xorb
push
lret
pop
jno
jnp
call
mov
stos
jle
lds
xor
fwait
dec
xchg
and
mov
stos
or
or
mov
shll
into
aaa
push
fwait
xlat
sbb
jno
cltd
mov
js
andb
xorl
cmpsb
imul
cmp
ja
or
add
cmpsb
inc
inc
nop
cmp
test
push
push
xchg
mov
int3
repnz
addr16
lret
push
mov
sbb
pop
imul
xchg
xor
adc
mov
inc
pop
or
negb
sti
sbb
adc
add
pop
sub
pop
push
dec
inc
cli
inc
cwtl
add
jo
sub
jne
inc
test
insl
xchg
arpl
in
sbb
gs
popf
push
add
xor
movsb
ret
mov
lcall
std
es
pop
bound
jae
cld
xchg
shlb
nop
gs
imull
xor
cmp
xor
pop
fcmovnu
add
mov
inc
push
inc
and
lahf
push
pop
mov
jnp
pop
mov
and
es
inc
push
stos
test
pusha
loope
pop
mov
inc
fsub
jmp
pop
and
out
push
xor
repnz
sbb
jl
leave
int3
mov
pop
sti
mov
inc
jmp
sub
add
push
xchg
in
adc
xchg
imul
push
dec
push
pushf
add
imul
sub
outsl
js
or
bound
xor
je
paddusb
or
nop
jmp
inc
fsubrs
les
pop
sbb
add
fdivs
push
or
sarb
addr16
out
or
mov
andb
dec
mov
xchg
sub
pop
out
decl
les
in
mov
xor
adc
test
sub
xchg
mov
mov
jmp
insl
mov
adc
adc
xchg
sub
adc
scas
rcr
push
sar
insb
nop
xchg
pop
cld
enter
rcrb
mul
cld
xchg
ja
ret
aaa
in
add
add
rcr
jne
mov
mov
and
pop
punpckhbw
roll
push
cmp
fsubr
aaa
ret
mov
mov
imul
cmp
cli
cmp
xor
pop
jo
mov
mov
cmp
mov
call
ret
loopne
or
mov
addl
pop
adc
mov
push
sti
xor
lea
pop
jno
mov
je
jmp
subl
and
clc
cmpsl
aad
xchg
les
mov
adc
cmp
pop
test
cmp
or
mov
jl
xor
xor
mov
or
xor
enter
mov
rcrl
mov
jecxz
xchg
leave
outsl
fcomps
mov
adc
adcb
sbb
mov
push
xchg
arpl
mov
or
inc
popf
xchg
adc
and
mov
in
pusha
xchg
mov
rcrb
dec
mov
mov
jns
repnz
pop
sti
and
dec
fcmovb
daa
pusha
xor
jae
sar
enter
icebp
jne
adc
jbe
mov
in
mov
daa
aad
not
fidivrs
jb
sub
dec
loop
stos
into
imul
mov
mov
jp
and
jno
mov
jg
sub
and
pop
movsb
add
fnstsw
inc
push
inc
movsl
sub
pop
int
pop
popf
mov
mov
push
xor
fmul
sub
icebp
sahf
daa
mov
pop
add
pushw
je
push
shrl
icebp
cld
push
inc
adc
or
in
mov
adc
test
add
push
xchg
cli
push
mov
mov
xchg
xchg
pop
fs
pop
mov
xlat
xor
pop
cmc
aas
mov
push
mov
cmp
push
sub
xor
and
enter
cmp
push
mov
push
add
xor
std
por
ss
rcrl
xor
jp
aam
push
int
jge
stos
loope
push
xchg
ret
cmp
aaa
xor
mov
sahf
lret
cmp
fldcw
xchg
cmp
lock
in
jb
ja
mov
inc
fdivs
add
outsb
mov
fisttpll
mov
nop
or
mov
xor
ret
xorl
in
jo
dec
pop
rorl
outsb
mov
push
ficoms
pop
push
pop
js
adc
dec
lods
mov
aam
jne
or
out
or
jl
jo
daa
insl
jmp
mov
test
and
cmp
jno
test
pop
xor
lret
lea
nop
mov
loopne
das
adc
mov
or
repnz
orb
cltd
mov
and
sub
stc
lret
add
loope
adc
xlat
test
lahf
sub
std
mov
push
stos
imul
xor
jae
inc
icebp
loopne
xor
scas
mov
sti
pop
jge
pop
push
adc
mov
dec
arpl
mov
lret
bound
pop
and
cmp
std
dec
sub
aas
fdivs
insl
xchg
and
mov
cs
adc
addr16
sbb
inc
mov
shr
popf
jbe
popa
cmovle
inc
jns
xchg
adc
cmp
dec
inc
rcr
pop
sbb
push
mov
cmc
pop
not
mov
mov
xor
add
test
sub
push
cs
sub
popf
push
lea
and
jmp
mov
out
flds
lds
dec
movsl
fs
jle
mov
lods
cmpsb
mov
add
faddl
pop
clc
dec
call
shrb
or
push
ret
in
mov
std
inc
mov
mov
nop
cmc
mov
adc
in
push
push
fwait
pop
cmp
in
popa
sub
jp
jnp
xchg
add
sub
xor
or
int3
addps
xor
outsl
sub
lahf
dec
dec
in
xor
mov
mov
mov
movsl
gs
sbb
xchg
outsl
mov
cwtl
je
mov
pop
pusha
xchg
cmp
hlt
jne
sub
int3
lcall
mov
dec
jge
rol
mov
leave
ss
repz
push
inc
add
in
fmull
or
xor
cmp
mov
dec
fstpl
cs
xor
pop
cmp
push
adc
stos
repnz
pop
fidivrs
nop
daa
cwtl
shl
jg
cmp
xchg
clc
mov
scas
popf
inc
pop
lds
lods
cmpsl
adc
ret
mov
pop
ljmp
pop
add
fidivl
aas
cmp
divb
jno
sub
inc
add
add
mov
push
std
out
pop
into
pop
mov
xchg
les
sbb
sti
js
movsl
push
pop
into
mov
int
fldl
popl
rol
jbe
loope
add
xor
adc
sub
dec
daa
mov
sbb
adc
daa
cmp
fs
out
xchg
insl
inc
out
xchg
push
and
pop
cmp
enter
fstp
insl
enter
pop
and
fisttpll
dec
mov
dec
push
cltd
pop
cld
jle
fmulp
inc
ds
cmp
ljmp
add
jae
lea
mov
dec
lahf
cmpl
iret
jp
add
dec
add
jno
push
xchg
mov
lcall
dec
push
push
mov
add
cmpsl
fcmovne
repz
into
xor
test
mov
test
lods
aas
pop
push
jp
dec
adc
test
sbb
xlat
adc
xchg
pop
adc
sbb
jo
movsl
mov
inc
pop
inc
jle
push
cmp
arpl
sti
cmp
inc
ss
mov
sahf
dec
in
push
adc
movsb
lds
add
pop
sbb
sti
xlat
ss
push
pushf
add
int3
inc
xor
xchg
mov
outsb
inc
std
adc
mov
cmp
fsubl
ss
mov
and
cmp
inc
scas
jge
pop
lret
or
pop
jge
cld
adc
popf
sub
mov
ss
lcall
js
xchg
xchg
sub
repnz
and
sbb
adc
mov
push
fildl
cmp
push
adc
pop
and
insl
data16
bound
cli
sbb
sub
divb
push
mov
ja
stos
mov
or
cwtl
mov
inc
mov
xchg
xchg
mov
clc
arpl
call
pop
das
xor
mov
add
into
ret
pop
mov
xchg
insl
test
and
dec
sarb
jge
and
push
and
pop
cli
mull
cmp
hlt
xchg
cltd
or
push
add
bound
fwait
cmpsb
pop
rclb
mov
sbb
inc
dec
stos
and
adc
push
dec
in
mov
popl
jno
jbe
dec
xor
fsubs
ljmp
jmp
frstor
mov
je
mov
movsb
jnp
clc
jg
or
jo
jne
ja
ret
cmpl
lret
orb
sub
mov
cmp
push
dec
jmp
js
xor
out
outsl
and
mov
or
mov
lea
push
jecxz
dec
in
nop
subl
aad
cltd
imul
pop
dec
mov
out
fstpt
pop
jg
cmp
adc
mov
pop
in
xor
iret
lcall
dec
xor
inc
cmp
and
stos
call
call
cld
mov
cli
fstps
jmp
int3
popa
out
mov
std
pop
scas
push
cmp
hlt
xor
stc
or
lahf
mov
or
xor
lcall
loope
cmp
mov
or
ss
sub
shlb
insl
dec
xchg
jecxz
pop
cld
fisubs
dec
pop
xchg
ret
hlt
je
movsb
cwtl
pushl
xlat
fstpl
sbb
adc
arpl
mov
cmc
dec
test
sub
dec
dec
xor
mov
sub
xchg
pop
fistps
push
sub
xor
imul
jae
lods
fcoml
lock
sbb
call
data16
pop
fsubrl
movb
mov
stc
imul
rcrb
and
call
cmp
mov
mov
xor
push
and
js
sbb
fs
rcrl
in
scas
shrl
bound
pop
mov
mov
sbb
cmp
lret
mov
mov
jmp
stos
fiadds
in
lods
hlt
loop
addr16
and
in
stc
aam
jns
mov
out
sub
adc
test
push
add
aaa
pop
repnz
or
ffree
and
push
pop
mov
hlt
mov
repz
mov
cmp
negb
cltd
sub
ja
pushf
inc
bound
pushf
inc
mov
cmpl
sub
icebp
or
rclb
pop
add
into
stos
mov
xlat
cmp
jnp
add
cmp
sub
cmp
mov
out
push
push
imul
flds
sbb
pop
lret
push
mov
and
sti
cli
push
das
adc
mov
mov
sahf
xor
pop
cli
imul
xchg
aad
cmp
xlat
or
cld
repz
sbb
push
sahf
insl
test
cmp
outsb
adc
jne
xor
mov
out
xchg
dec
ss
call
repnz
pushf
popa
je
pop
repz
ss
push
pop
aas
xchg
nop
ja
hlt
dec
fstl
cmpsl
push
mov
pop
clc
xor
or
dec
das
insb
gs
pop
xor
adc
dec
fisttps
adc
inc
test
push
and
faddp
inc
xor
cld
dec
pop
mov
lods
call
lods
fcomp
mull
cmp
pop
sub
ret
push
xchg
cmp
cmpsl
ret
and
adc
adc
daa
incb
dec
insw
sbb
ret
or
and
pusha
adc
or
mov
add
sub
les
push
sbb
std
xchg
add
dec
or
test
les
adc
and
in
jne
ret
mov
xor
sub
inc
cwtl
test
daa
dec
push
mov
rorb
jns
cld
cld
adc
adc
jb
inc
std
inc
jns
testb
into
mov
ja
dec
inc
loope
push
out
or
fwait
popa
into
hlt
add
adc
rcr
cmp
orb
sbbl
pop
lods
mov
xchg
adc
xchg
or
sbb
dec
rorb
jecxz
cwtl
sahf
mov
and
fwait
cmp
mov
popa
ja
dec
jb
and
out
js
xchg
pop
xrelease
data16
xor
neg
mov
fdivrl
mov
add
mov
mov
sbb
push
or
pusha
fdivr
lcall
ljmp
dec
sahf
xor
lcall
adc
cmp
fstp
out
out
sti
les
jbe
hlt
test
fbstp
insl
inc
enter
cmpsl
into
jb
xchg
and
cmp
jae
push
inc
mov
mov
into
dec
mov
popf
bound
movb
repnz
xchg
call
incb
aas
bswap
jle
cmp
xor
sbb
aad
push
mov
ret
int
or
loope
mov
pop
sub
push
xchg
sub
or
fdivrs
adc
bound
sbb
jmp
xor
xchg
mov
dec
imul
cmpsb
cmp
push
fstl
jmp
xor
jmp
addb
jbe
gs
aaa
add
xor
mov
int
pop
mov
in
mov
lcallw
daa
repz
je
fbstp
cld
enter
shll
and
jne
pushf
shlb
les
insl
sub
xchg
jns
movsl
inc
lret
push
xor
lods
xchg
ss
and
or
or
ret
lret
movsb
lods
insb
stc
insb
xchg
add
bndstx
test
rcl
adc
in
add
cmpsb
ja
xchg
mul
sbb
jae
lea
or
popa
xor
pop
xor
jecxz,pt
test
repz
jne
push
stos
mov
sub
loop
fisubs
xor
lods
sbb
add
cmp
and
jo
popf
sbb
jne
cltd
xlat
rcrl
cmp
mov
insb
ljmp
cld
cmpsl
jb
daa
mov
mov
mov
test
fistpl
aaa
add
leave
negl
fdivl
das
fucompp
mov
jb
rcrb
aaa
gs
test
js
xchg
stc
pop
or
in
leave
ljmp
cld
stc
sahf
jl
in
sub
repz
into
test
cmp
aaa
push
filds
mov
mov
adc
pop
cmpsb
xchg
lods
in
add
fnstcw
sbb
jl
mov
fs
bound
idivl
orb
pushf
xchg
test
sub
stc
sub
mov
aas
xlat
lods
fmuls
cwtl
fsubrs
or
mov
outsb
lea
mov
std
cltd
jmp
das
mov
leave
adc
dec
pop
lods
cmovle
out
mov
cmp
loop
dec
pop
cli
test
and
cmc
les
mov
mov
cmp
mov
sbbl
inc
cmp
lds
stos
jne
add
jbe
add
movsl
stos
sub
or
in
fnsave
pop
mov
outsb
sub
mov
xor
outsb
dec
and
lods
lret
push
adc
addr16
leave
sahf
sbb
mov
pop
loope
mov
hlt
out
jns
jl
jecxz
notb
mov
push
mov
mov
pop
xor
loope
add
aam
cltd
pusha
mov
adc
orl
dec
jnp
mov
and
mov
jecxz
ljmp
test
inc
leave
loopne
mov
cmp
orb
nop
push
fldcw
and
test
or
dec
dec
ljmp
add
iret
test
push
xchg
incb
cmpsl
rcll
ret
ljmp
ds
mov
ljmp
ret
insb
mov
push
mov
cmp
add
mov
fmull
pop
xchg
cmp
loope
sbb
pusha
fwait
mov
xchg
sar
push
icebp
mov
push
aas
cmp
negb
pop
fldenv
jmp
inc
je
test
es
inc
test
mov
arpl
popf
and
stos
xor
dec
push
addr16
cwtl
iret
pop
jno
mov
hlt
fmuls
xchg
push
adc
lods
cmpsl
scas
jmp
int
pop
cmp
cli
cmp
arpl
cli
clc
jns
jle
pop
xchg
and
cmpsl
xlat
add
bnd
add
test
rorb
cwtl
or
out
lods
push
mov
in
movsb
pop
out
mov
arpl
test
sbb
je
orb
or
int
jp
inc
lret
jno
add
xlat
lods
in
sqrtps
cmp
or
mov
mov
ret
lret
xchg
fidivl
sti
dec
pop
push
test
mov
xor
cmpsb
mov
not
mov
pop
push
lahf
rcrb
dec
adc
cmp
nop
ds
mov
gs
leave
scas
cmpsb
cmpsl
and
insb
push
mov
sub
ja
imul
stos
jp
cmc
mov
mov
popf
pushf
lahf
cli
mov
jmp
or
inc
mov
lcall
or
ret
mov
fcmovnb
outsb
push
loop
xor
mov
out
movsb
in
pushf
enter
lock
pushf
xchg
sarl
and
jae
repz
mov
sarb
mov
scas
fildll
popa
add
cmc
sbb
loope
pop
mov
int
dec
punpckhdq
xor
les
sahf
or
aad
dec
pusha
out
stos
pop
and
sub
cwtl
fwait
out
outsb
cmp
stos
xor
xor
jmp
inc
xchg
mov
dec
jnp
lds
fwait
repz
add
push
gs
je
jbe
outsb
je
jmp
js
fsubs
cld
loopne
mov
mov
push
pop
cmpsb
add
mov
call
aaa
lods
xchg
mov
ret
lock
add
sub
jle
pop
inc
sub
cmp
imul
insl
jbe
push
int
push
sbb
lret
jmp
xlat
add
sbb
subl
das
filds
cmp
inc
jnp
scas
lods
in
cmp
shll
xchg
fisttpl
push
xchg
mov
mov
test
inc
jbe
mov
inc
xchg
or
push
push
xor
pushf
jmp
add
inc
imul
gs
je
or
inc
movsb
add
popl
pushf
pushl
ret
movw
mov
pushl
popl
pusha
pushf
pushl
pushl
ret
cmp
mov
push
pusha
call
add
inc
gs
outsl
arpl
push
imul
and
or
fs
jmp
pushf
lea
je
push
mov
call
lea
jb
shrd
and
shl
mov
stc
bt
sub
setbe
mov
jmp
jmp
jmp
push
call
add
loope
add
ret
mov
add
add
add
add
cmp
add
add
loope
add
mulb
mov
gs
loope
add
add
cwtl
ret
gs
loope
add
ret
add
loop
add
mulb
mov
loop
add
ret
gs
jecxz
add
fildll
lds
shl
insb
add
push
add
in
add
cmp
add
add
call
add
add
add
jmp
leave
add
insb
add
leave
add
insb
add
add
add
add
insb
add
inc
add
lret
mov
add
add
add
add
add
jo
gs
call
add
add
add
mov
lret
cs
add
add
add
ja
fs
lret
ss
add
add
add
sbb
insb
add
lret
push
jmp
add
add
add
mov
lret
add
insb
add
lret
add
insb
add
lret
add
add
add
add
add
lret
add
add
dec
and
loopne
repz
aaa
add
inc
mov
out
xchg
adc
in
mov
and
cmpsl
dec
and
push
mov
xchg
cld
stos
inc
sbb
int
fimuls
add
cmp
lds
aaa
xchg
jbe
xor
xor
stos
bound
aaa
adc
cmp
inc
mov
sahf
mov
cmp
daa
inc
sti
fnstsw
jg
lret
iret
sbbl
ret
adc
jb
popa
je
dec
jne
gs
add
add
popa
jb
jo
gs
add
add
je
popa
insb
gs
gs
outsb
je
imul
mov
call
pushf
pushf
inc
cmc
stc
jmp
pusha
movl
pusha
mov
pushf
mov
pushf
push
pushf
pushf
pushl
ret
add
push
gs
imul
mov
cld
loopne
rclb
sar
xchg
mov
push
adc
mov
loopne
jge
addb
aaa
mov
ds
je
mov
jp
aaa
dec
movsl
test
scas
cwtl
ljmp
and
adc
add
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
and
cwtl
mov
jae
push
push
pushf
lea
jmp
jmp
mov
bt
cmc
pushf
sub
test
pusha
pushl
popl
movb
cmp
pusha
jmp
pusha
test
pushf
shl
jmp
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
push
sete
pusha
lea
push
pushl
pushf
movl
jmp
stos
xor
loopne
pop
sbb
and
insb
push
hlt
decb
mov
cmp
xchg
cmp
jno
pop
pop
mov
int
and
mov
stc
mov
lea
shrl
and
and
jle
lret
inc
shr
mov
aad
push
call
nop
push
mov
mov
mov
inc
dec
cmpsb
data16
mov
mov
or
mov
sbb
repz
lods
xor
push
rcll
and
in
push
daa
shrl
in
inc
in
cmc
loope
jge
push
lea
jb
clc
stc
bt
call
add
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
loopne
loop
jb
ljmp
or
xchg
scas
push
out
stc
dec
aaa
out
or
sbb
mov
mov
aaa
mov
repz
clc
jae
jl
and
shl
ss
xchg
or
rorl
aam
cmc
mov
sub
fcoml
cmp
out
imul
int3
jg
push
lahf
or
adc
xor
mov
mov
mov
push
or
int
mov
jl
add
pusha
pushl
pushf
push
lea
jmp
bswap
pushf
lea
xor
inc
sub
sub
neg
movzbw
xor
push
aad
push
sub
push
rcr
das
sub
jmp
call
push
pushl
popl
push
pushl
ret
add
inc
gs
imul
bound
gs
add
add
jb
popa
outsb
je
outsl
jo
add
pushl
popl
not
call
add
dec
insl
popa
addr16
imul
je
add
mov
lock
lea
jae
shl
shld
mov
btr
xor
mov
shl
clc
mov
pusha
bt
stc
sub
clc
test
clc
repnz
movw
push
lea
jne
xchg
mov
sub
sub
clc
bts
mov
bt
push
sub
test
cmp
pushl
popl
pushf
cmp
stc
stc
cmp
movb
pusha
lea
ja
call
lea
jne
bswap
rol
mov
jmp
add
dec
outsl
arpl
inc
jb
gs
ret
daa
jmp
lea
jne
jmp
add
inc
insb
outsl
jae
inc
insb
imul
add
test
cmp
aas
jno
lods
pop
test
das
pop
push
es
and
push
out
push
nop
jbe
push
sub
mov
out
adc
fistl
dec
push
push
into
mov
loope
sub
lcall
mov
jns
sub
sbb
inc
mov
mov
adc
adc
push
test
imul
add
push
push
lahf
mov
cmpb
inc
xchg
iret
in
out
adc
xor
jge
xchg
cmpsb
loop
fimuls
fdivr
push
mov
or
xor
cmp
pop
shl
adc
movsl
lock
cs
lea
ja
pushf
jmp
add
inc
jb
popa
je
inc
imul
jns
add
or
pushf
lea
jb
ror
movzbl
bt
shr
not
imul
rcl
lea
dec
rcr
bsf
ror
push
cmc
sub
rcl
movsbl
push
bts
shl
mov
rcr
shl
mov
cmc
cmp
cmp
jmp
add
push
popa
jb
popa
outsb
je
insb
gs
jb
add
inc
gs
outsb
jne
add
push
imul
popa
jae
push
add
rorb
cmp
call
pusha
lea
call
pushf
pushl
push
pusha
lea
jne
call
pusha
pushf
movl
pushf
pushf
pushl
lea
jmp
add
push
imul
outsl
insl
push
outsl
imul
std
incl
and
std
incl
add
popa
addr16
imul
ja
js
add
dec
insl
popa
addr16
imul
outsl
jbe
add
dec
xor
xorb
jmp
clc
cmp
bt
xor
test
test
push
seto
pushf
mov
call
aaa
xor
mov
lahf
jns
jnp
push
bndstx
stos
cli
imul
mov
int3
push
lock
fldcw
cmp
pop
fnsave
lock
dec
clc
adc
aaa
gs
cmpsb
push
sub
mov
lds
ficomps
jb
enter
negl
ss
icebp
lret
sbb
arpl
pop
lea
enter
push
test
loop
jl
mov
jp
jbe
pop
data16
addb
xor
test
mov
lret
and
ret
dec
movsbl
mov
clc
call
not
add
sbb
sar
mov
push
mov
pushl
call
jne
movzbw
lahf
bswap
mov
push
mov
lea
jmp
bsf
mov
pusha
add
jmp
not
stc
setne
shrd
mov
pushf
pushl
and
test
test
movb
cmc
add
lea
cmp
bt
call
add
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
pusha
pushf
lea
jb
pushf
xor
pushf
clc
cmp
test
pusha
call
add
push
gs
arpl
gs
imul
movsb
pop
pushf
mov
pushf
setge
mov
mov
not
jmp
add
inc
gs
imul
js
dec
outsb
addr16
push
add
fimuls
aam
or
push
lahf
push
in
or
loopne
mov
in
and
jle
and
aad
jne
in
mov
aaa
dec
add
pushf
sbb
mov
sbb
inc
divl
inc
sbb
push
nop
inc
jo
sub
repnz
add
aad
notb
cmc
das
vunpckhps
movsl
outsb
inc
aad
mov
inc
push
cld
loopne
fistps
sub
sbb
or
sub
cmp
sub
aad
sub
lds
pop
xchg
outsl
popa
aaa
adc
mov
sub
loop
lods
pop
movsl
mov
sub
lea
fcmovnbe
fwait
loope
and
dec
jge
mov
cmp
outsl
mov
cmp
sti
push
setg
mov
jo
pushf
sahf
mov
dec
loop
or
push
inc
ret
push
cld
loopne
neg
ficompl
fadds
repz
cmp
sti
aad
inc
sahf
or
pop
scas
mov
ffreep
sahf
stc
cltd
adc
dec
lret
cld
std
inc
mov
pop
jecxz
stos
in
adc
mov
adcl
jmp
in
orl
popf
jmp
pop
dec
cld
xor
jno
jns
ret
mov
cmpb
outsl
cmp
inc
leave
sti
loope
push
lahf
scas
pushf
sub
lcall
push
push
les
xchg
ret
mov
pusha
movl
pushf
call
lea
jbe
lea
jmp
add
inc
jb
popa
je
dec
arpl
add
add
push
gs
popa
insb
jne
add
mov
movzbw
mov
pushf
jmp
call
test
bt
cmc
or
pusha
push
lea
je
jge
pushf
bswap
movzbl
mov
lahf
mov
mov
pushf
mov
bswap
lea
movb
call
add
dec
insl
popa
addr16
imul
inc
jb
addr16
jne
jae
jb
insl
popa
add
add
je
imul
outsl
outsl
imul
add
insl
adc
add
add
push
pusha
pusha
lea
call
pushf
call
lea
je
clc
call
dec
aam
adc
loopne
stc
cmpsl
icebp
mov
gs
dec
repz
cmpsb
sub
xchg
xor
and
insl
pop
pop
jecxz
mov
sbb
mov
dec
pushf
mov
rcll
push
adc
shlb
dec
cmp
xor
repnz
ja
hlt
jmp
gs
jmp
ds
adcl
adc
loopne
loope
or
pop
mov
adc
pop
cli
cmp
fucompp
and
sbb
scas
pop
adcb
pop
pop
pop
lahf
loope
pushf
mov
cld
mov
or
or
jge
push
pop
sub
stc
pop
dec
imul
cmpsl
aas
fiadds
xor
test
rcrl
mov
xchg
arpl
dec
cltd
xchg
cltd
sti
les
mov
imul
adc
loopne
lds
aaa
shrl
mov
xchg
sub
jp
enter
and
scas
sub
push
in
pop
jl
ds
adc
cmpsl
imul
push
je
mov
shll
and
shr
mov
push
mov
mov
pusha
mov
mov
pusha
fmuls
pop
data16
sub
ljmp
filds
mov
rcrl
inc
shrb
xchg
and
mov
testb
scas
in
mov
aaa
pop
or
mov
cld
out
stos
popa
fs
jo
xor
cs
insb
add
add
push
lea
jg
pushf
movl
pushf
call
data16
cld
loopne
push
je
aam
dec
bound
and
adc
dec
mov
adc
jne
adc
mov
pusha
cmp
sub
movsl
popl
fdivp
sbb
test
pop
xlat
rcrl
add
daa
in
xchg
por
lods
sub
imul
xor
mov
ud1
arpl
pop
xchg
icebp
int
add
imul
scas
rep
mov
ficomps
frstor
cmc
pushf
jmp
push
popa
push
dec
mov
call
add
inc
gs
jne
jb
outsb
je
outsl
jae
je
outsl
outsb
inc
js
call
clc
pushf
add
movb
pushl
lea
jmp
add
inc
gs
outsb
push
inc
imul
imul
add
add
sub
call
pushf
push
jmp
add
insb
jae
jb
outsb
inc
add
add
jne
push
imul
add
push
gs
fs
imul
cld
loopne
add
xor
pop
ror
insl
test
popf
in
mov
subb
repnz
aaa
lea
dec
or
or
xor
lods
aaa
mov
mov
out
push
xor
jns
rcrb
push
or
jmp
cmpsl
pop
fnsave
adc
aas
pop
sub
lahf
push
pop
scas
adc
jp
insl
and
adc
adc
dec
jecxz
sub
dec
pop
push
jo
hlt
adc
movsl
cmovg
fistpll
imul
pushf
sbb
shr
cmp
not
jmp
sets
setle
mov
push
movl
lea
lea
pusha
lea
jle
pushf
pusha
movl
movb
call
lea
je
movsbw
mov
lea
pusha
push
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
xor
inc
and
pusha
push
pushl
pushl
ret
pushf
movl
pushf
movb
lea
jmp
bt
cmp
pushf
jmp
pusha
lea
jge
push
movl
jmp
lea
call
add
push
gs
jb
outsl
jb
outsl
fs
add
je
imul
js
dec
outsb
addr16
inc
add
xlat
mov
push
pushl
call
add
dec
je
jo
jne
jb
dec
outsb
outsw
inc
add
add
gs
je
push
imul
inc
add
add
push
imul
jae
bound
add
dec
outsl
popa
fs
je
imul
cmp
cld
loopne
sub
adcl
dec
xor
adc
nop
jecxz
ljmp
scas
and
xchg
sbbb
fmull
pop
cmpsb
lods
mov
daa
adc
xchg
push
stos
sub
aaa
popf
cmp
xchg
lds
adc
popf
jmp
fildl
add
addr16
popa
imul
je
jo
gs
bound
arpl
mov
loopne
subb
or
add
hlt
or
pop
pushl
add
adc
stos
rorl
cmp
fs
pop
fcoml
shll
adcb
sbb
cmpb
mov
push
sbb
cmp
stc
push
jle
xor
pop
bound
jp
popa
sbb
in
add
push
into
inc
shr
ljmp
ficoms
fdivrs
jbe
decb
insb
xchg
std
sbb
fs
arpl
out
imul
and
cld
loopne
lahf
jns
test
mov
clc
das
sahf
in
jb
ljmp
mov
out
arpl
sub
adc
add
cmpsb
test
aaa
dec
es
jno
into
mov
es
inc
lds
sub
sub
xchg
mov
cmpsb
fiaddl
or
xchg
sbb
loope
cltd
clc
xchg
pop
sbb
cwtl
mov
pusha
and
mov
inc
jne
das
xor
es
daa
in
pop
pop
sbb
outsl
aad
loope
and
popa
cmp
cwtl
jmp
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
call
add
push
gs
popa
jb
outsb
je
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
inc
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
movsl
out
sar
mov
call
lea
je
movsbl
push
pushf
mov
cwtl
lea
pusha
jmp
add
inc
jb
popa
je
inc
imul
and
jns
je
push
cmp
call
pusha
pushl
popl
movb
pushl
ret
add
inc
gs
gs
popa
insl
gs
gs
inc
add
fs
add
test
sbb
decl
xchg
sub
call
lea
je
movzbw
pusha
pop
mov
bswap
movzbw
lea
pushf
movb
push
push
xchg
cwtl
not
call
mov
movb
lea
call
push
adc
pushl
push
mov
lea
jae
xadd
shr
pop
inc
shl
pop
bts
movzbw
mov
rol
aam
jmp
add
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
js
add
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
add
je
imul
outsl
outsl
imul
add
fs
jne
not
cwtl
mov
sete
mov
pushf
movb
lea
jmp
cmpsl
shll
cld
loopne
mov
test
loopne
pushf
mov
xchg
cmpsl
fcomip
cmc
into
je
addr16
out
loope
in
int3
aaa
jg
sub
inc
enter
idiv
or
push
in
mov
cmp
jp
cmp
das
aam
call
jbe
pop
jg
enter
xchg
jne
jb
and
call
shl
nop
jae
dec
int
and
pop
adc
xchg
icebp
push
jo
xchg
push
hlt
iret
adc
fsubrs
push
xor
insl
sldt
dec
outsb
je
jb
gs
jo
outsb
push
jb
inc
add
rclb
jle
fs
je
bsf
ror
test
add
bsr
test
sub
cmc
cmc
rcl
shr
or
btr
mov
movzbw
call
add
inc
outsb
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
imul
or
loopne
sbb
scas
jge
jge
rcll
enter
cmp
addr16
cmpxchg
clc
aas
int
xchg
sarl
aad
mov
ret
xor
xchg
or
fdivrp
adc
mov
push
popf
lock
or
ljmp
or
adc
cli
mov
cli
mov
or
lds
push
enter
adc
xor
inc
and
mov
andl
push
ss
jle
loop
bound
lret
fdivs
in
inc
push
je
bswap
jmp
clc
push
push
jmp
call
push
bswap
bswap
pushf
movl
lea
call
adc
pusha
lea
jae
shrd
shld
xadd
pop
pusha
dec
mov
shl
setne
btc
mov
btr
btr
cmp
cmp
bswap
pop
not
mov
movb
jmp
push
pop
xchg
cld
loopne
lcall
call
ss
mov
out
mov
ret
or
or
cmp
testb
in
adc
iret
xor
jmp
lock
cs
xchg
ja
sub
shlb
mov
cli
enter
mov
push
jl
int
mov
js
mov
jle
pop
inc
adc
xor
or
movsb
add
inc
outsl
insl
bound
gs
outsb
add
add
addr16
jo
outsb
dec
gs
js
add
add
je
jne
jae
jb
pushf
pushf
lea
ja
push
pusha
mov
sub
clc
pushf
movw
sub
add
pusha
pushf
push
movw
lea
jmp
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
movzwl
btr
cmc
clc
cmp
mov
clc
pushf
call
push
lea
jne
adc
xor
clc
not
mov
bt
stc
call
inc
xchg
or
loopne
dec
dec
jnp
imul
cmpsl
pusha
jo
int3
lods
lcall
ljmp
out
ja
out
xor
push
jno
xor
in
inc
ja
lret
sub
add
movb
push
pushf
pushf
lea
call
pusha
lea
jb
bt
call
stc
cmc
pusha
movzwl
call
add
inc
gs
jb
jns
imul
pusha
movl
pusha
movl
call
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
pushl
clc
cmp
mov
cmp
cmp
test
movw
pushf
call
add
inc
gs
insb
imul
lea
pushf
push
movb
call
outsl
insb
gs
jne
xor
cs
insb
add
or
in
ret
std
inc
pop
jae
mov
imul
inc
popa
cbtw
mov
lret
mov
push
sbb
mov
jns
std
add
jne
add
mov
adc
lahf
xchg
inc
pushf
push
push
lahf
orb
cmpsl
push
xor
pop
cld
ffreep
sub
popf
repnz
mov
test
cld
int
adc
cmp
mov
pop
fisttpl
lret
and
shrb
les
pop
lods
adc
hlt
cltd
dec
cli
fdivrl
push
sbb
adc
adc
mov
add
popa
mov
inc
scas
decb
shl
inc
xlat
fstpt
int
mov
xlat
popf
push
faddp
mov
xchg
mov
aam
mov
repnz
and
sbb
jmp
adc
andb
lret
loop
das
dec
inc
pop
sbb
fsubrs
sbb
xlat
dec
pop
f2xm1
jo
push
sahf
arpl
push
and
fwait
into
and
adcb
enter
cmp
adc
mov
rcrl
add
iret
les
imul
dec
loop
iret
ja
add
jbe
dec
cmp
sbb
movsb
pushl
push
jno
aam
scas
xor
mov
add
fistpll
test
pop
enter
lret
xor
jecxz
stc
clc
popf
and
push
inc
call
mov
loopne
adc
dec
adc
ja
inc
cmp
mov
daa
push
icebp
lcall
sub
nop
dec
lods
bound
adc
inc
lods
mov
push
aad
scas
pop
xor
les
lock
repz
mov
mov
push
jbe
test
xor
insb
testb
xor
test
push
or
and
or
movl
mov
pushf
movw
lea
jmp
pushl
popl
movb
pushl
ret
pusha
lea
je
pusha
pop
lea
xchg
lea
mov
movzwl
pusha
lea
movzbw
pop
push
call
call
ret
add
loopne
push
xor
les
jl
adc
daa
xor
out
push
jbe
movsb
testb
xchg
not
fisttps
arpl
cmp
xlat
adc
ret
stos
cwtl
adc
jae
cmp
rorl
jbe
sub
jnp
lea
xor
push
add
dec
notb
aad
mov
into
sarl
inc
aaa
jne
cld
loopne
pop
pop
pop
jmp
addl
xlat
rcll
js
xchg
je
xlat
push
add
pusha
nop
andnps
imul
lds
dec
fstl
mov
pop
iret
add
sbb
clc
mov
cmpb
and
arpl
out
nop
dec
aad
jne
or
push
dec
pop
movsl
in
jno
push
stos
dec
outsb
xor
jle
or
pusha
shrl
movl
pushf
pusha
lea
jb
call
push
mov
movl
mov
lea
jmp
pushf
jmp
lea
jne
call
mov
jmp
push
push
mov
movb
mov
movsbl
movsbl
push
mov
pushf
mov
pushf
movb
pushl
ret
lea
pushf
pushf
jmp
lea
jb
shrd
aaa
mov
jmp
mov
lea
je
bswap
cwtl
lea
pushf
lea
call
push
mov
call
push
shl
push
mov
jmp
pusha
push
mov
pushf
movl
pushf
movw
pushl
pushf
lea
jmp
sbb
jmp
insl
sti
mov
inc
sbb
stos
push
fisttpl
js
xor
shl
jbe
popf
dec
or
inc
jg
stc
add
imul
lds
in
pop
push
fs
mov
xchg
out
orb
sbb
or
jbe
or
pop
ljmp
mov
sub
mov
pusha
mov
cld
loopne
std
sti
mov
arpl
jmp
sbb
adc
rorb
push
add
jg
mov
lar
inc
dec
es
adcl
pushf
sarb
cmp
push
int3
xor
and
pop
mov
adc
xchg
cwtl
pushf
sbb
and
jmp
in
sbb
and
inc
cmp
dec
out
mov
or
inc
in
adc
sub
enter
inc
jbe
ret
cmp
sbb
add
mov
mov
insb
mov
call
adc
inc
pusha
sbb
imul
adc
push
mov
leave
inc
insl
shlb
and
popa
fsubs
dec
mov
frstor
lahf
mov
ss
jmp
inc
dec
and
addb
clc
cs
xor
movsb
fcmovb
jp
add
insb
gs
imul
arpl
inc
imul
mov
pushf
lea
jge
stos
pushf
lea
jmp
lea
jb
aaa
das
sete
mov
pushf
not
clc
jmp
add
dec
insb
gs
outsb
imul
add
add
popa
jb
jo
gs
jne
push
add
bt
add
cwtl
lea
pushl
movw
jmp
test
test
mov
pushl
popl
clc
cmp
call
pushf
stos
movb
movl
mov
mov
lea
jmp
add
push
outsb
jb
imul
popa
jae
inc
add
add
jne
push
push
push
imul
jno
jno
cld
loopne
int
jge
popa
and
sbb
stc
sub
xchg
dec
sbb
xchg
enter
xchg
sub
pop
sub
int
loope
xorl
mov
mov
dec
std
mov
adc
les
inc
pusha
imul
out
xor
jge
jmp
fbld
jno
fnsave
push
sbb
aad
test
xor
cmpsb
movsl
add
loopne
test
mov
ror
push
fbld
mov
inc
stos
lea
mov
lods
loope
push
inc
pop
int3
pop
loope
or
adc
insl
hlt
leavew
sbb
scas
dec
jecxz
cmp
sbb
lock
xor
push
imul
mov
in
lods
xor
add
inc
xlat
movsl
jnp
pop
and
cmpsl
mov
js
addb
loopne
lods
ds
or
lods
leave
inc
xor
jne
mov
inc
jge
and
inc
and
and
sbb
lret
call
xor
cli
xchg
insb
sarb
add
sub
jp
push
lods
loope
fwait
adc
mov
mov
scas
mov
gs
push
pop
dec
and
ficoml
push
test
mov
push
addl
cli
jg
xchg
push
rcrl
out
leave
pop
leave
inc
inc
stos
jno
mov
fnsave
cmpsl
mov
dec
ret
fsubr
jae
std
incl
fs
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
cs
xor
incl
add
outsl
addr16
inc
inc
jb
insl
inc
dec
push
dec
inc
add
xchg
incl
dec
movsbw
mov
call
call
add
inc
gs
outsb
jne
je
je
add
aad
sti
loopne
inc
cmp
sbb
xchg
lds
sbb
fldl
push
gs
inc
jnp
mov
push
inc
std
mov
in
sub
aas
mov
mov
jb
popf
cmpsb
push
mov
lock
cltd
jle
jo
and
jo
mov
pop
das
xor
movsl
inc
xchg
sbb
xchg
add
jbe
push
imul
add
imul
outsl
jne
arpl
push
mov
sti
loopne
cmp
stos
push
xchg
fnsave
or
nop
out
loopne
aaa
dec
pop
cs
test
rcl
sbb
dec
mov
clc
nop
stc
in
arpl
repz
fldcw
inc
mov
mov
inc
mov
dec
mov
inc
mov
xchg
test
lret
inc
js
outsb
es
loope
insl
push
mov
xchg
add
mov
scas
test
and
mov
hlt
cmpsl
pusha
sub
roll
rcrb
add
cmp
pusha
add
movl
pusha
jmp
pushf
movl
pushf
pusha
mov
pushf
lea
jmp
add
dec
outsl
jbe
push
outsl
inc
js
notb
push
pusha
push
mov
bound
mov
mov
ljmp
inc
add
jno
insl
movsl
xchg
push
int3
aaa
dec
daa
dec
inc
adc
inc
mov
sbb
lcall
sbb
push
mov
dec
mov
mov
mov
stos
mov
xor
push
mov
popf
data16
aad
mov
std
sti
loopne
cmp
push
imul
push
stos
and
sub
lret
mov
pop
and
es
inc
ss
mov
mov
in
fbstp
call
fbld
push
sbb
and
or
jne
jecxz
jae
dec
sti
xor
adcl
mov
nop
mov
sub
test
addr16
stos
mov
add
sti
loopne
in
enter
pop
cmp
add
mov
mov
cmpsl
stc
stc
inc
aad
lods
pop
sbb
and
inc
cwtl
inc
pop
push
cmp
outsl
imul
sub
xlat
fcmovu
mov
inc
and
subl
mov
or
jae
sti
cld
inc
insb
dec
cmc
jb
push
add
in
in
adc
int
sub
jmp
push
les
into
mov
enter
arpl
sti
mov
test
addr16
jb
outsb
jae
popa
je
dec
gs
popa
add
and
or
aas
das
rol
stc
mov
push
test
jmp
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
call
out
push
sti
sti
loopne
ret
mov
pop
xlat
aad
lea
cmpsb
xchg
mov
ljmp
fstcw
shll
mov
push
in
shll
xlat
and
mov
sub
lcall
dec
cmp
xor
pusha
dec
pop
mov
and
cs
pop
mov
hlt
and
fstpt
dec
outsl
pop
cmp
jle
out
push
jl
push
aad
iret
jo
test
push
rcr
inc
mov
add
mov
cld
cli
sbb
jne
pushf
or
pusha
jbe
sbbb
inc
mov
out
jno
sub
hlt
mov
mov
movsb
in
jae
dec
and
sahf
push
inc
shll
and
xchg
add
pop
jmp
adc
sbb
sub
xor
aaa
loope
fisubrs
es
jmp
jmp
pushf
pop
inc
jno
rcrb
mov
or
pop
in
scas
mov
nop
mov
jmp
mov
dec
int
pop
mov
dec
jo
mov
fsubs
lret
pop
in
sbb
and
mov
xchg
into
push
aas
jo
aam
jbe
pop
mov
idivl
aas
inc
pusha
push
cmpsb
enter
cld
rclb
in
or
cmc
sbb
aas
outsb
pushf
scas
mov
mov
imul
dec
repz
rclb
xchg
rolb
ja
ret
cmp
sbb
mov
hlt
cmpsl
or
inc
push
jle
addr16
ds
rcll
jae
pusha
in
dec
xor
outsl
push
int3
aam
ss
jmp
loopne
add
push
aaa
enter
jg
or
insb
and
movsl
xlat
cmc
mov
xchg
mov
js
lods
pushf
xchg
mulps
je
loope
subb
fistpll
popa
add
jae
and
cmpsl
jle
add
scas
stos
nop
pop
push
sbb
sarl
mov
and
xor
std
or
rorb
and
sbb
mov
cmc
cs
addr16
je
mov
inc
xchg
mov
inc
test
cwtl
inc
sbb
loopne
jo
dec
out
jns
shll
and
push
pop
arpl
lock
xlat
mov
jmp
clc
lods
add
mov
cmpsl
lcall
xor
add
jb
adc
sahf
popf
pop
or
popa
lods
pop
mov
sbb
pop
push
incl
dec
jg
cmpsl
negb
xchg
imul
movsl
jecxz
jns
sub
push
clc
out
jo
shr
roll
cmp
push
cmp
fs
or
mov
push
dec
bound
shll
cltd
xchg
movsb
mov
ror
addr16
push
dec
mov
push
pop
and
dec
cs
push
shlb
mov
popa
adc
push
xchg
loop
mov
outsl
dec
push
and
addr16
inc
into
dec
adc
push
mov
xchg
out
dec
aaa
icebp
decl
lods
pop
scas
and
idiv
or
inc
clc
rcl
cltd
mulb
fucomip
xchg
or
jo
arpl
loopne
cmovle
cwtl
sti
pop
pop
mov
pop
inc
xlat
stc
aad
cmp
cs
and
jg
into
or
jno
int3
test
mov
pop
arpl
add
pushf
mov
mov
loop
fsts
or
xor
mov
push
dec
test
add
xchg
lea
in
call
jbe
xchg
sub
inc
lock
out
sahf
xor
push
push
data16
aaa
jbe
shl
imul
dec
ds
push
into
adc
scas
aam
sarb
or
push
lret
sbb
scas
jl
mov
andb
scas
xchg
hlt
aad
cmpb
addb
mov
fcoml
add
xchg
sub
daa
sbb
fwait
push
movsl
jns
xor
pop
xor
cmovb
pop
ss
adc
jp
push
pushf
sub
addl
xchg
stos
mov
adc
enter
inc
mov
decb
adc
jge
popa
mov
jge
outsl
lret
jg
pop
mov
jo
mov
cmpb
fadds
mov
sbb
js
pop
js
xchg
sub
pop
push
das
mov
push
jmp
mov
fwait
cmpl
movsb
hlt
lds
push
mov
daa
and
or
adc
mov
dec
mulb
pop
sub
xchg
fisttpl
push
and
jne
lahf
xorl
scas
mov
daa
inc
xchg
int
insl
std
mov
jnp
jmp
and
inc
sti
jne
lret
lahf
addr16
adc
lds
cmp
lahf
hlt
add
aad
jo
out
dec
cmp
push
mov
retw
aam
and
rorl
lret
cwtl
insb
lds
shrb
ficoms
pop
outsl
data16
push
mov
jge
xchg
mov
popf
add
mov
or
jmp
test
pop
jae
out
add
mov
jno
mov
mov
pop
out
sub
lret
pushf
push
mov
pop
sar
sbb
fiaddl
arpl
mov
mov
cmpsl
clc
ljmp
push
sbb
dec
notl
pop
jae
into
xchg
pop
jp
mov
es
icebp
inc
test
add
cmc
inc
pop
cmp
jle
sbbl
xor
test
leave
xchg
out
push
adc
and
enter
mov
inc
mov
syscall
int3
std
outsb
int3
mov
frstor
stc
shrl
aam
iret
dec
jl
lock
into
or
cmpsb
inc
dec
mov
push
cmp
rolb
in
adc
mov
push
mov
pop
inc
xchg
scas
xlat
mov
fistps
cmpsb
mov
jp
sbb
idivl
jne
xorl
xor
arpl
gs
dec
lock
push
adc
loopne
inc
repnz
insb
push
dec
sub
in
in
sbb
mov
add
mov
xchg
rcr
lea
pop
mov
adc
fldenv
sbb
sub
stos
aam
jecxz
adc
xchg
xchg
jae
mov
test
lea
push
outsl
inc
inc
cltd
mov
inc
jns
mov
scas
shlb
push
lret
sahf
rcrl
outsl
aam
pop
xchg
ja
test
shl
inc
sarl
dec
or
push
add
test
ret
adc
hlt
into
mov
pop
sarb
fisubs
insl
rolb
add
ljmp
repnz
cs
movsl
and
dec
and
dec
mov
xchg
adcb
punpckhdq
addr16
cmc
jl
or
xchg
push
jbe
aas
xor
pop
loopne
dec
push
lcall
pushf
out
mov
push
scas
test
xor
ret
stc
inc
sub
lds
pop
aas
push
and
add
pop
sub
mov
dec
shlb
ljmp
sarb
and
mov
aas
and
ret
insl
rcl
mov
push
sbb
cmpsl
les
pusha
jecxz
stos
xchg
loope
cmc
and
xor
cwtl
cmpb
mov
popf
js
add
inc
mov
adc
andb
stc
or
shll
out
pop
rol
inc
fimull
out
xor
push
xchg
repz
push
push
mov
sbb
fsubs
push
aas
dec
or
jg
sar
pop
sbb
add
or
lds
jns
lahf
fnstsw
adc
mov
xchg
mov
lods
sti
xchg
out
xor
xor
cmp
cmp
loopne
ret
add
pop
subl
mov
movsb
xchg
loop
jge
dec
jge
xchg
xor
fsubr
sti
test
and
cmpsl
orb
mov
insl
and
fyl2xp1
mov
out
shll
lock
out
shrl
sub
mov
cmp
lods
dec
sbb
xor
inc
fsubrl
push
dec
pop
adc
sbb
aas
neg
je
in
inc
ss
iret
daa
mov
outsb
and
mov
cmp
xor
in
hlt
push
mov
xchg
insl
jne
lods
mov
or
mov
cmp
stos
cli
lods
push
mov
addr16
sbb
push
lods
mov
cltd
push
push
jl
pushf
adc
mov
mov
cmp
pop
jl
dec
mov
mov
mov
lea
in
out
add
jnp
cmpsb
mov
pushf
mov
loop
jbe
lahf
and
jge
pop
push
dec
test
sbb
sbb
lcall
adc
leave
nop
inc
adc
scas
push
dec
jp
repz
inc
inc
mov
mov
inc
mov
xor
inc
and
mov
in
xchg
fs
cld
outsb
shll
jg
out
lcall
mov
mov
aaa
idivb
lret
lcall
arpl
sbb
test
lds
data16
dec
jecxz
lret
cwtl
fsubl
mov
xchg
adc
sti
cli
jno
loopne
jg
jp
mov
xchg
outsb
add
int
adc
cli
push
push
dec
and
dec
idivb
push
sarl
sub
and
mov
push
and
cmp
outsl
dec
and
movsb
lea
in
adc
push
sbb
inc
and
scas
jbe
pop
cmpb
sbb
and
int3
push
mov
push
test
inc
adc
push
xchg
cmp
in
sarl
xchg
stos
adc
sbb
cmp
sbb
fstl
sbb
lahf
mov
in
mov
fnstsw
jo
sub
unpckhps
xchg
enter
mov
gs
and
push
xchg
sub
shrl
std
xlat
in
push
cli
xorl
les
sbbb
mov
cmpsl
es
hlt
std
sbb
test
hlt
in
adc
mov
mov
arpl
jg
xchg
pop
and
push
cmp
daa
cmpsl
mov
push
fstpl
sbb
push
sahf
mov
mov
ja
fidivrs
xchg
xchg
pop
pop
pop
and
jne
xchg
out
mov
insl
sub
mov
xchg
int
xorb
add
stc
pusha
pop
in
shlb
dec
lock
call
xchg
adc
push
add
das
lahf
cmp
adc
into
int
lods
mov
call
arpl
mov
mov
pop
mov
leave
pop
cmp
movsb
test
sub
mov
jge
lret
mov
es
lods
rcll
into
push
gs
pop
mov
pop
enter
test
cs
ljmp
pop
mov
cmp
cli
mov
mov
sbb
push
into
xlat
lret
scas
jge
mov
jae
mov
test
inc
into
xchg
xor
xor
pushf
insl
jmp
xchg
pop
cmp
mov
cld
dec
ds
sbb
sub
push
cmpsb
notl
fcmovbe
dec
push
sahf
xchg
push
cmp
xchg
push
adcb
inc
repnz
shll
out
mov
ss
mov
inc
test
pop
testb
in
das
hlt
popf
adc
jb
test
leave
dec
pop
jl
pop
in
and
int3
add
in
lcall
divl
cmp
addr16
jb
ret
fadds
stos
lods
and
dec
fsubs
mov
and
dec
mov
testb
arpl
lret
pop
inc
hlt
leave
push
mov
adc
mov
cmp
sub
insl
sti
jne
out
int3
outsl
sub
xchg
cmp
in
call
stos
add
xchg
pop
jbe
pop
mov
push
fdivs
out
lods
mov
insl
popa
movsb
inc
cmp
insl
mov
mov
loope
mov
xchg
jb
daa
jno
or
xchg
lcall
ficoml
jge
lock
push
out
add
pop
and
bnd
push
outsl
adc
pushl
mov
pop
in
xchg
dec
ret
inc
xchg
adc
cltd
push
xchg
std
sbb
std
mov
or
inc
push
or
scas
dec
xor
xor
pop
xor
enter
mov
fwait
pusha
adc
loope,pn
mulb
imul
int3
sub
ret
repnz
cli
lods
mov
arpl
xor
mov
and
dec
xchg
sub
add
sub
mov
mov
fisttpll
test
test
ds
jnp
sbb
cmp
or
out
mov
inc
cld
mov
mov
xchg
les
push
mov
push
shll
clc
enter
outsl
lock
fidivrl
cmp
insb
repnz
pop
xchg
inc
push
dec
push
push
fcom
repnz
or
mov
js
dec
or
mov
mov
insl
sbbl
clc
sbb
arpl
call
jecxz
xor
or
add
sub
cli
sbb
test
nop
or
mov
int3
push
sbb
leave
ffree
cmpsb
gs
sbb
pop
ljmp
adc
idiv
movsl
std
nop
sarl
orl
movsl
addr16
pop
push
xor
mov
cwtl
sub
mov
in
adc
pop
lock
repz
rcll
sbb
mov
filds
pop
dec
out
pushf
and
pop
mov
sub
test
mov
push
rcrb
pop
mov
dec
sbb
movsb
sti
insb
push
cmpsb
or
xchg
insl
test
mov
mov
jg
push
hlt
push
addr16
loopne
push
fadd
push
fadd
pop
dec
dec
loop
out
mov
xor
and
jnp
and
jae
xchg
inc
dec
rcrl
subl
add
sub
dec
cs
in
sti
ret
inc
lret
jp
adc
scas
and
subl
adc
mul
pop
mov
mov
sbb
jmp
and
mov
std
xchg
fs
cmp
sub
xor
fcoml
mov
mov
inc
cld
pop
mov
adc
mov
or
mov
outsl
dec
sub
movsb
mov
xchg
cmc
fistps
lods
cld
or
sti
lds
out
sub
push
mov
cmc
pop
daa
pop
stc
inc
arpl
lds
stc
push
ret
jns
leave
mov
fs
ret
cltd
arpl
in
xchg
daa
repz
leave
dec
cmp
fwait
negb
and
jg
dec
inc
clc
mov
jo
in
jbe
call
add
hlt
xchg
or
and
daa
pop
lds
sub
pop
mov
xchg
lcall
ljmp
xchg
add
mov
in
mov
addl
mov
lods
sbb
pop
xor
das
push
adc
jb
inc
or
jbe
rclb
add
mov
add
jne
sbb
ss
aad
pop
sbb
push
movsb
pop
and
lock
sarl
adc
cmp
pop
aad
dec
pop
in
mov
in
cmp
cwtl
inc
pop
incb
push
in
repnz
arpl
ss
mov
mov
adc
mov
pop
adc
and
jmp
push
test
aam
sub
aas
lahf
pop
popf
push
shl
xchg
inc
scas
xlat
pop
cwtl
push
clc
int3
jg
xor
arpl
xor
fildl
pop
mov
in
loope
or
sbb
xor
sbb
lock
fwait
pusha
pop
lds
aas
loope
fcompl
or
xor
fmull
js
sub
xchg
sub
pop
pop
fwait
lods
adc
shlb
ljmp
scas
adc
bnd
call
xor
mov
inc
mov
lods
xor
out
rcll
mov
fsubl
dec
dec
inc
and
fsubr
movsb
aam
push
xor
rcr
sbb
mov
call
mov
jg
jg
jl
pop
push
lods
lock
std
movups
xor
mov
jle
sub
jnp
sbb
addb
fdivr
mov
xor
dec
jnp
mov
lds
adc
or
mov
inc
mov
jecxz
mov
push
sub
aas
mov
incl
push
add
aad
stc
xchg
out
andb
xor
add
cmpl
sbb
xchg
mov
dec
xchg
inc
xchg
pusha
push
subl
aad
and
dec
and
pusha
fisubrs
xor
jge
scas
push
jns
or
outsb
test
mov
add
cs
and
in
cli
fs
mov
pushl
je
leave
mov
mov
sti
nop
or
in
inc
pop
xor
insb
arpl
movsl
cld
fninit
ret
or
push
mov
fwait
push
int3
rcrb
imul
les
mov
add
mov
nop
xor
mov
and
lds
mov
enter
xor
mov
aad
dec
mov
es
adcl
sub
sahf
sarl
dec
and
rcrb
xchg
xchg
rcrb
adc
mov
push
movsb
jecxz
mov
dec
add
mov
push
xchg
loop
pop
or
or
pop
mov
pop
jmp
push
clc
imul
xchg
int
xor
addr16
xchg
subl
outsb
iret
dec
add
xchg
ret
repnz
cmp
dec
xlat
push
push
leave
push
mov
inc
mov
movsl
or
testl
add
inc
xorb
push
cmpsb
xor
cmp
leave
es
pop
lock
mov
repnz
and
xor
sbb
mov
xchg
fdivl
scas
mov
mov
ja
pop
mov
or
push
or
into
cmp
shll
ficoml
jge
pop
or
ljmp
test
fwait
jle
popa
sbb
mov
sub
leave
sub
add
ss
mov
xchg
lahf
xchg
push
ret
leave
scas
pop
push
loopne
flds
pop
out
out
popf
cltd
push
add
mov
xlat
jo
dec
mov
push
pop
mov
dec
andl
jl
pop
jo
jnp
xchg
xchg
inc
shll
and
xor
jae
adc
ds
int3
je
in
loope
cltd
cmpsl
in
into
push
fistps
addr16
sub
lret
lret
nop
arpl
cmp
ja
andb
cmp
test
jnp
add
cmp
js
in
jae
out
enter
jbe,pn
jnp
test
xor
and
jle
vandnps
ljmp
xchg
es
lods
mov
js
cld
fidivrl
fsubrs
les
inc
jb
inc
cmp
mov
out
stos
push
sub
rclb
lret
testb
mov
es
hlt
cmpsb
ja
mov
pushfw
xor
stos
aad
pushf
loopne
lods
jo
and
inc
and
xorb
cmc
cmc
push
xchg
dec
inc
inc
push
mov
cwtl
lret
loope
xchg
inc
cmp
pop
popf
add
testb
sub
pop
mov
jl
jle
or
sub
sub
xchg
jge
or
cltd
jns
cmpsb
hlt
mov
pop
sub
push
sub
fstpl
cmp
into
xchg
mov
lds
andl
push
in
fsubr
repnz
imul
pop
out
inc
jne
mov
fsubs
adc
push
push
repnz
das
xchg
or
dec
mov
inc
jns
xchg
sub
fscale
sbb
icebp
fcompl
addr16
js
mov
jl
arpl
in
idiv
lods
aam
jae
push
add
aas
insl
cltd
dec
out
loop
xor
shll
push
repnz
xor
lcall
aad
call
push
pop
out
pop
adc
fwait
push
sub
stc
aas
sub
add
repnz
jnp
inc
ljmp
push
repnz
jl
rol
inc
push
popa
enter
and
mov
mov
mov
xor
lds
jne
fidivrl
lods
mov
inc
mov
cli
xchg
adc
xor
jnp
inc
movsl
stos
mov
rcr
cs
out
push
or
scas
test
xchg
mov
adc
outsl
pop
loop
js
cmp
cwtl
ret
sbb
cmp
sbb
aaa
mov
in
push
bound
cmpsl
xlat
mov
jmp
inc
mov
call
add
and
xchg
les
xchg
clc
jb
xor
negl
push
imul
pop
add
pop
loope
lret
add
sbb
sbb
cli
stos
mov
sar
jbe
testl
stos
dec
aas
and
adc
leave
testl
inc
andb
adc
popf
cwtl
jmp
sbb
xchg
out
jmp
addr16
ret
shll
das
add
out
lret
or
aaa
push
imull
std
mov
mov
sub
ds
xchg
bound
ret
pop
in
ljmp
mov
setno
movb
inc
pop
dec
jp
mov
push
mov
lods
sbb
and
jnp
mov
repz
and
push
xchg
adc
insb
adc
lcall
divl
pop
lahf
add
loopne
push
push
shl
jmp
jle
lcall
test
cmp
ret
jae,pt
inc
push
push
sbb
pop
enter
sbb
popf
push
inc
stos
adcl
ja
add
adc
out
sub
jnp
inc
push
cld
lds
dec
bound
shrb
aam
push
out
sbb
jge
ss
mov
cmpsb
ret
sub
dec
fimuls
ja
lock
lock
and
cltd
pop
mov
popa
mov
es
dec
repnz
jle
push
add
stc
push
ret
jbe
xor
cmpsb
aas
sti
mov
in
push
mov
xchg
mov
sarb
inc
mov
jp
mov
cmpsl
xchg
sbb
stc
mov
aam
outsl
xor
and
outsl
jbe
add
cli
call
jb
fs
push
add
clc
sldt
jl
xchg
inc
and
jmp
or
sub
out
fwait
in
dec
mov
sti
pop
mov
mov
adc
or
sti
jne
dec
mov
setl
lock
stos
cmpsb
idiv
cmpsb
testl
aaa
mov
lret
mov
mov
add
lcall
sbb
xlat
lcall
fistpl
or
mov
mov
inc
pop
lods
test
in
fwait
idivl
mov
pop
adc
mov
push
fistl
pop
cmp
test
das
push
stc
mov
jae
mov
jmp
sub
mov
bound
add
xor
sbb
incl
or
cmp
fisubrl
jb
and
add
jnp
lret
lret
insb
inc
push
and
and
ljmp
jmp
int3
sahf
repnz
sbb
loop
dec
mov
lds
push
sub
nop
adc
xchg
mov
jp
xor
adc
inc
mov
addr16
jo
out
mov
ret
push
popa
xor
loop
mov
mov
aam
stc
or
push
push
mov
cmp
sub
inc
loope
stos
shrl
lret
test
int3
xchg
and
jns
movsb
cmp
adc
lahf
and
push
push
and
pop
gs
cmp
repz
imul
aam
mov
addl
fstps
push
addr16
jno
repz
dec
into
les
jge
push
gs
lea
out
jo
mulb
lds
sahf
lret
cltd
mov
insb
xchg
popf
add
jp
aaa
xchg
sarb
dec
aaa
push
movsb
pop
jge
addr16
push
adc
dec
mov
mov
dec
xor
cmpsl
lcall
jle
fisttpll
mov
dec
in
aaa
mov
adc
mov
adc
clc
adc
jecxz
fcomp
out
mov
pop
mov
std
fisubl
jmp
daa
mov
cmp
jne
dec
dec
cli
cmp
push
insl
adcl
loopne
xor
mov
mov
stc
xchg
and
or
aad
movsl
xor
dec
data16
xor
inc
idivb
cwtl
js
adc
adcb
sub
pop
jb
into
inc
daa
stc
and
cmpsb
mov
mov
iret
and
not
pop
jl
mov
jmp
outsl
add
sbb
mov
and
shl
mov
faddp
lcall
xor
xchg
fmuls
test
mov
out
sbb
dec
int
mov
mov
push
dec
jo
mov
test
data16
fcmovnb
fsubl
xor
push
mov
pop
mov
inc
rorl
jnp
int3
xor
mov
or
push
shrb
add
fnstenv
in
add
sahf
inc
insl
push
cmc
rclb
out
lret
je
sub
sub
mov
jb
cmp
repz
push
ret
mov
shr
pop
pop
sbb
sub
push
add
mov
mov
push
mov
cld
fnsave
xchg
push
inc
inc
mov
jae
add
cmp
out
cmp
setge
sbb
daa
mov
subl
xor
int
sarb
and
insl
cmp
fadds
push
jno
push
popa
pusha
pushf
mov
mov
mov
mov
mov
movsl
mov
pop
scas
mov
mov
jecxz
jle
sbb
jmp
xlat
test
movsl
fisubrs
jg
cmp
mov
xchg
sbbl
sbb
aam
outsl
test
xchg
sbb
sbb
push
cmp
pop
jno
inc
cmpsl
negl
cs
push
pavgw
push
jb
icebp
jg
imul
dec
jecxz
add
arpl
jno
int
inc
inc
adc
shll
rolb
xlat
lods
repz
mov
mov
rol
adc
mov
adc
test
subl
inc
add
adc
inc
xorl
mov
loop
mov
mov
repnz
or
in
lea
cmpsb
xchg
mov
jne
fisttps
ja
or
push
push
jno
fnsave
jmp
add
mov
incb
dec
mov
lcall
mov
dec
xor
mov
cld
or
in
cmc
fcomip
xor
mull
xor
pop
jg
add
in
out
inc
lret
aam
lret
add
ljmp
fdivrs
test
loop
pop
dec
xchg
xchg
popf
sbb
mov
pop
enter
shll
and
cld
sahf
shlb
out
jne
xchg
scas
in
fbld
lods
daa
add
sbb
faddl
mov
push
pop
cmp
sbb
dec
sub
ds
jmp
mov
shrl
inc
imul
push
lods
push
js
loope
jno
fldenv
push
mov
popa
jo
icebp
inc
stos
jae
mov
cmpsb
cmpsb
xor
or
push
dec
insl
jecxz
in
popa
aaa
es
lea
or
fwait
lds
xchg
pop
test
cld
jne
lret
lds
mov
int3
push
in
pop
in
pop
xor
idivl
mov
or
or
out
sbb
sahf
jecxz
mov
mov
lcall
pop
int
insl
int3
jmp
mov
mov
mov
popf
adc
ffreep
cmp
pop
xchg
cli
dec
jmp
cltd
sbb
lods
add
dec
mov
and
popf
xchg
or
push
sub
ret
cmp
cmp
pop
and
rorl
roll
int3
loop
stos
int
lods
mov
lret
stos
push
aaa
lock
sub
cs
lret
pop
pop
out
ss
mov
rolb
cli
fdivl
pop
das
jb
je
ljmp
jp
xor
arpl
std
in
xor
in
mov
fiaddl
push
push
jns
mov
adc
aaa
and
sub
shrb
mov
cmp
mov
mov
adc
mov
lds
add
inc
pop
popa
enter
jmp
xchg
xchg
mov
or
or
sbb
test
insl
popf
and
in
mov
dec
cmp
outsb
mov
call
mov
push
leave
pop
out
push
repnz
mov
ret
jl
sbb
jmp
adc
push
adc
lods
fs
sub
dec
leave
shl
pop
xchg
jo
fs
push
xchg
add
xor
aaa
inc
pop
into
push
or
push
push
jbe
xor
negb
mov
orl
xor
mov
cmc
jecxz
xchg
push
inc
inc
push
dec
repnz
cltd
loope
mov
adc
xlat
xor
sub
mov
enter
cmp
nop
jo
add
mov
hlt
add
gs
pop
jno
cs
aam
jg
pop
loope
adc
xchg
dec
fdiv
sbb
push
addr16
adc
flds
aam
or
or
push
test
out
popf
test
fs
and
pand
or
fdivs
add
imul
fsubs
and
jae
xor
adc
jp
xchg
push
loopne
int3
icebp
dec
fs
mov
loop
lods
jbe
stos
push
and
adc
sbb
fpatan
iret
pop
mov
je
push
cmc
push
das
fs
inc
fwait
neg
jg
popa
ret
mov
and
and
push
roll
pop
movsb
adc
or
insb
test
lods
dec
bound
data16
or
push
xchg
lods
mov
je
call
shll
mov
pop
fstpt
and
pop
inc
enter
pushf
rcl
sub
and
jecxz
pop
dec
jae
pushf
fsubs
mov
mov
adc
mov
lock
sbb
lret
mov
jp
js
out
fimuls
xchg
sub
test
jecxz
jne
idiv
mov
push
pushf
dec
mov
add
lock
or
xchg
addr16
adc
push
cmp
in
decl
or
xorl
ror
addr16
mov
cltd
lds
daa
jbe
test
mov
aad
xor
xchg
jnp
push
sbb
inc
test
mov
jp
outsb
shll
or
dec
movsl
xchg
imul
js
fcmovnu
in
cmp
into
in
mov
xor
imul
mov
and
das
scas
mov
sub
cmp
orb
adcl
cmp
push
cmp
outsl
add
loope
icebp
insl
bound
jecxz
push
dec
nop
add
shrb
out
push
mov
cmp
rcl
dec
sub
jl
jp
out
cmp
add
insb
call
rcr
out
outsl
jne
inc
test
pop
into
sbb
aam
xor
iret
cmc
mov
rcll
push
push
mov
test
inc
cmp
or
cmp
inc
hlt
sti
cld
test
es
cwtl
xrelease
in
insb
pop
cmp
daa
sbb
data16
inc
cwtl
ljmp
jb
aaa
ljmp
sbb
mov
cli
les
fs
mov
cmp
fidivrs
ja
nop
test
sbb
icebp
test
lea
shrl
inc
xor
cmc
unpcklps
les
jle
pop
add
dec
mov
inc
xchg
test
lea
xchg
mov
mov
jb
mov
pop
aad
pop
into
mov
xor
jbe
stos
in
push
xlat
test
scas
mov
or
ret
cmpsb
sub
das
sbb
ljmp
imul
pop
pop
fdivs
fwait
pushf
xorb
cmc
cwtl
shl
je
mov
sbb
pop
sub
cmp
test
cmp
insl
push
xor
add
sbb
add
and
scas
sub
xor
mov
xchg
xchg
or
cmpsb
cld
sbb
out
bound
fdivrl
sbb
mov
rolb
icebp
addr16
jg
negb
mull
cld
push
inc
sub
push
inc
mov
cltd
push
jbe
test
adc
ss
imul
sbb
xlat
push
adc
in
rcr
imul
xor
hlt
lods
faddl
loopne
imul
inc
std
sub
lahf
loop
nop
jbe
mov
jge
in
mov
leave
popf
test
pop
and
aas
sbb
mov
repz
cmp
arpl
push
cld
pushf
mov
cmc
add
les
clc
adc
adc
test
push
ss
mulb
fisttpl
cmp
push
push
jbe
jae
and
js
jb
dec
mov
mov
in
jno
jns
mov
aaa
mov
pop
or
outsb
fisubl
sub
cmpsl
mov
mov
enter
adc
pop
cwtl
adc
jbe
push
test
sbbb
sbb
cmp
imul
jbe
sbb
fwait
mov
cmp
out
jg
pushf
add
jmp
add
push
je
xor
in
mov
sbb
rorl
shl
inc
imul
bound
clc
cmp
es
pusha
addb
mov
mov
mov
dec
in
push
inc
ret
sbb
out
je
xor
mov
cmpsl
mov
cmp
mov
fdivs
jns
jp
test
das
mov
jg
stos
xchg
movsb
daa
out
mov
dec
imul
pusha
inc
pop
addr16
ja
pop
decl
into
out
fwait
xor
outsl
xor
loop
aas
shlb
xor
das
lods
mov
fiaddl
and
sbb
xor
es
sbb
xchg
test
mov
mov
adc
clc
push
add
arpl
outsl
cmpsb
add
pop
cltd
js
int
out
in
aam
add
mov
lds
and
addr16
pusha
push
cmpsl
jmp
xor
mov
sarb
xchg
stc
pop
fmull
jp
repnz
cwtl
jo
cmp
lods
cmp
ret
mov
imul
mov
push
mov
sub
pop
test
sarl
jl
adc
or
and
jnp
ret
cwtl
stc
dec
nop
jnp
dec
pusha
pop
pop
inc
push
sahf
js
rcrl
xchg
and
cltd
int
mov
lret
sub
cmp
adc
and
into
scas
mov
dec
in
jge
jb
cmpsl
xlat
icebp
sar
push
adc
fs
adc
daa
xchg
int3
mov
sub
repz
lret
sub
ret
ljmp
and
cmpsb
cmc
sti
xor
adc
push
ret
dec
fbld
and
arpl
push
dec
scas
push
add
cwtl
js
dec
les
sub
adc
test
or
cli
sbb
movsb
cmp
imul
jl
sarl
ja
loopne
out
xchg
lea
stos
in
adc
push
bound
jl
scas
cmc
cmc
movsb
faddp
jecxz
jmp
push
aaa
add
push
das
pop
adc
xchg
and
test
in
ljmp
filds
aas
inc
mov
push
cmpsb
push
xchg
xchg
and
inc
cltd
hlt
push
mov
dec
fdecstp
subb
enter
push
xchg
out
out
sub
shlb
das
loop
jge
cmp
stos
mov
lret
lock
xor
or
stos
jb
cwtl
cli
loope
sarb
inc
je
sub
or
xor
xchg
mov
popa
insl
in
int3
in
daa
mov
out
clc
bound
mov
cmp
arpl
aas
ds
adc
loopne
ficomps
xchg
cmpsl
sub
fdivp
fidivrl
stos
sub
sbb
sub
xchg
sub
pop
clc
xor
sbb
inc
sub
fs
lds
mov
shr
shll
jg
sub
jle
mov
push
mov
daa
lret
adc
adc
int3
mov
xchg
mov
stc
mov
cmp
fmuls
add
pop
out
int3
mov
cld
xor
mov
cld
js
push
mov
push
mov
sub
sub
cmpsb
aaa
jbe
cmp
fwait
imul
popf
fwait
enter
fs
jo
lock
enter
pushl
mov
orl
xchg
popf
dec
mov
mov
mov
and
outsb
ret
lcall
inc
cmpsb
andb
mov
push
rcl
lods
dec
push
mov
mov
lods
jmp
push
xor
sbb
mov
mov
inc
cltd
cmp
pop
or
dec
xor
mov
jne
into
mov
sahf
shrb
aam
sbb
jg
subb
pop
jge
pop
mov
dec
enter
ret
xchg
adc
jbe
cmp
mov
fstps
mov
cmp
cmpsl
push
push
in
xchg
daa
dec
das
inc
mov
and
mov
fildll
jge
push
pop
in
fcoms
cmp
push
cmp
sbb
add
mov
add
iret
mov
in
outsl
stos
cld
lods
or
dec
pop
loop
lcall
test
cmpsb
inc
roll
dec
and
ds
pop
sti
xchg
in
adc
fcoml
aas
lcall
or
out
mov
cmpsl
cwtl
fimull
cmp
inc
sub
mov
pop
inc
push
inc
jb
adc
sub
int
dec
dec
sub
xchg
xchg
jbe
call
in
xor
cmpsb
stc
lds
movsl
xchg
push
xchg
xor
ret
add
test
imul
jnp
ja
lahf
push
xor
jns
pop
imul
cmp
pushf
fstpl
cmc
scas
pop
xchg
stos
inc
icebp
mov
ds
and
aas
push
dec
xor
cmp
fisubl
loope
xor
inc
xor
jge
out
sub
pop
sub
rolb
fcoms
pop
cmp
add
mov
mov
pop
scas
scas
pop
adc
mov
pushf
rclb
ja
mov
and
and
leave
hlt
imul
test
sti
xchg
dec
and
es
in
or
and
inc
fs
adc
pop
or
adc
addl
rcll
jbe
xlat
push
data16
push
mov
adc
rcr
sbb
mov
orb
repnz
mov
mov
out
dec
pop
in
in
insb
scas
in
sbb
imul
inc
xchg
mov
pop
pop
inc
vmovntps
mov
test
inc
addr16
dec
aad
cltd
push
fistl
pop
cmp
pop
push
xor
pop
arpl
or
enter
inc
jp
filds
loope
movsb
jno
and
ljmp
xchg
mov
jb
pusha
mov
pop
dec
cmp
mov
loop
add
repnz
imul
add
pop
mov
in
mov
xor
fsts
sarb
les
out
inc
sub
cmpsb
sub
add
idivl
cmp
cmp
xor
pop
sub
ja
push
jae
imul
es
push
mov
push
dec
push
inc
dec
imul
add
jmp
ficoms
jno
pop
pushl
or
cmp
push
lock
cwtl
push
bound
add
mov
insl
icebp
jbe
push
mov
mov
mov
testl
push
dec
add
jmp
add
in
mov
call
inc
mov
lret
call
or
loop
xchg
xor
filds
sahf
sub
pop
sbb
add
mov
xchg
adc
mov
cwtl
sub
addl
lods
test
push
adc
idiv
mov
mov
sbb
mov
xor
call
pop
cwtl
ljmp
clc
pop
xchg
lds
pop
aad
arpl
out
cld
dec
adc
in
scas
fstl
fdivr
inc
and
mov
inc
xor
daa
jno
imul
or
pop
orl
push
stos
movsb
fstp
adc
push
enter
jmp
ret
fldenv
cmpsl
lods
jae
jnp
jne
adc
mov
push
sbb
and
mov
push
mov
xchg
repz
test
add
add
xchg
push
out
sar
aaa
sbb
lods
pop
mov
lahf
lds
mov
dec
subl
pop
aas
sub
sub
clc
cmpsl
insb
loop
jno
cmp
push
clc
insb
xchg
imul
adc
inc
jle
into
mov
mov
int3
and
outsb
icebp
mov
lret
call
insb
sbb
jge,pn
pop
or
add
pop
fcoml
repz
popa
in
and
and
pop
arpl
and
rol
dec
sub
cmpsl
push
jbe
xor
xchg
xchg
jl
movsb
outsb
mov
test
leave
or
cmpl
or
es
cmp
arpl
mov
shlb
out
loop
call
push
push
dec
in
push
mov
sbb
repnz
imul
sub
jbe
and
push
add
test
or
into
add
mov
mov
pop
adc
movsl
test
pop
jle
ljmp
cs
fdivrl
cmp
notb
cmpsl
push
adc
cmp
xor
pop
hlt
pop
and
loope
adc
stos
mov
jae
loop
ret
xor
das
into
jmp
xchg
mov
or
rorb
dec
mov
pop
push
push
int
lret
enter
dec
and
sub
addr16
cli
sar
cmpsb
add
dec
pop
in
sub
sbb
mov
inc
pop
lds
sub
xor
sbb
xchg
nop
testl
dec
xor
fstp
cmc
jbe
dec
stos
sub
scas
jne
mov
repnz
ss
in
out
loopne
rclb
push
notl
xchg
and
sbb
xor
enter
sbb
leave
inc
or
dec
lret
mov
dec
xchg
movsb
cmp
ret
outsb
nop
sub
ss
sub
stos
popa
mov
adc
xor
xor
scas
adc
mov
cwtl
inc
push
mov
lcall
cmp
ret
repnz
push
and
sub
mov
pusha
mov
or
pushf
adc
or
mov
cld
mov
lds
jae
ljmp
sbb
sub
sub
jp
cmpsb
inc
nop
ret
addr16
pop
cmpsb
iret
test
sub
jb
xorl
inc
out
je
inc
mov
adc
mov
mov
aam
shll
fimull
xchg
dec
movsb
adc
push
jl
or
loopnew
shl
jmp
dec
pop
xor
mov
jl
push
xchg
out
bound
jmp
mov
xor
xchg
ficompl
push
xor
xchg
jge
add
push
sub
or
scas
dec
fstpl
das
nop
dec
xor
push
xchg
sub
xchg
push
add
aam
pop
jae
jo
sub
pop
ja
or
sbbl
adc
loope
sbb
cmp
mov
into
sarl
push
test
pmuludq
pushl
add
cmpsb
mov
mov
jmp
cmp
jle
add
sahf
in
ljmp
sbb
inc
cmc
or
addr16
mov
in
mov
mov
jno
das
jle
cltd
cmp
inc
repz
add
stos
fdivs
mov
gs
call
add
jne
sub
aam
jg
cwtl
aas
push
pop
inc
es
ret
mov
sub
inc
hlt
aam
jg
insb
add
int3
aam
sbb
mov
out
xchg
incl
and
fsubl
rcl
outsb
and
xor
ret
mov
jmp
imul
popf
mov
xchg
sbb
mov
clc
mov
mov
xor
outsb
repz
lret
enter
xor
pop
push
stos
mov
add
add
lcall
outsl
mov
cmp
fildll
dec
pop
stos
out
push
mov
lret
fimuls
push
mov
mov
dec
psadbw
jp
jb
in
pusha
xchg
scas
addl
jnp
cmp
adc
xor
scas
push
stos
cmp
sbb
orb
add
and
pop
adc
popf
lea
push
sub
repnz
shrb
push
outsb
test
std
inc
and
mov
fsubrl
jmp
push
push
mov
dec
sbb
imul
sbb
nop
mov
lea
cmpsb
add
xchg
icebp
sub
push
pop
testb
mov
mov
jae
dec
imul
cmpsb
adc
and
inc
pop
std
xor
add
insl
lret
jl
insl
call
pop
xor
inc
and
jbe
push
pop
dec
ret
sbb
notl
mov
or
xor
orb
lds
xchg
addr16
pop
xor
inc
inc
aas
add
mov
ds
xor
notb
fs
pushf
jbe
dec
into
aam
cmpsb
push
in
xchg
clc
les
loope
arpl
push
jmp
sub
or
shrl
cmpl
out
ljmp
and
jns
in
adc
int3
clc
adc
cmp
imul
and
aam
or
frstpm(287
addr16
jecxz
pop
push
sub
enter
shll
pop
jle
pop
pop
sub
loope
mov
lods
xchg
lea
pushf
ret
mov
out
and
and
fcmovne
fwait
push
addr16
xchg
test
xor
pop
mov
push
xor
push
cmp
mov
jnp
adc
jge
xor
and
jae
cs
aam
pop
xchg
sub
cmpsb
add
in
mov
inc
mov
int3
outsb
fiadds
push
scas
lods
xor
push
mov
or
cwtl
lret
lret
jns
arpl
or
pop
orb
cmp
lret
les
xor
imul
addr16
insl
sub
scas
fwait
xor
cltd
mov
jo
jno
shlb
lret
push
dec
test
sbb
add
jae
or
mov
sti
xchg
inc
xchg
jns
fcmovne
xchg
push
cmpsb
lcall
inc
pop
jbe
stc
data16
jle
mulb
int3
sahf
fwait
pushl
sbb
add
fiaddl
sub
and
dec
stos
std
xor
ret
or
jns
push
dec
xchg
pusha
iret
int3
stos
out
cs
mov
nop
pusha
in
inc
adc
test
adc
jmp
filds
data16
bound
scas
pop
fwait
sbb
mov
pop
in
cs
mov
inc
pop
fcmovbe
mov
leave
std
cmp
add
cmpsl
out
push
andb
mov
sub
add
dec
rolb
sub
repnz
inc
push
icebp
ja
cmc
fimuls
adc
mov
aaa
daa
js
mov
call
test
mov
jo
add
aad
inc
mov
mov
imul
jge
call
lahf
add
stos
pushf
and
jmp
xor
add
lods
sub
outsb
xor
das
lahf
test
roll
nop
dec
jo,pn
insl
xor
xor
insb
push
mov
rorb
push
pop
orb
insl
fidivl
jae
mul
lods
in
xchg
pop
jp
loopne
das
lods
mov
sub
enter
xor
cmp
cwtl
pop
xchg
fistl
movsl
or
pusha
and
imul
sbb
insb
movsb
int
sahf
jle
xchg
cmp
repnz
or
jb
stc
out
push
add
jo
frstor
std
mov
jmp
stc
dec
adc
gs
int
mov
lcall
cmp
sub
pusha
sub
push
mov
ljmp
cmc
pop
nop
popf
ret
sub
cli
pusha
pop
imul
push
loope
icebp
push
negb
push
dec
xchg
inc
cmp
gs
enter
dec
sub
flds
sbb
pshufw
xor
jg
vmovntpd
lret
sahf
cmpsl
insb
xchg
sti
xchg
push
dec
mov
and
push
jmp
in
nop
aad
std
movsb
inc
into
inc
repnz
bound
pop
jg
add
ret
imul
mov
jnp
xchg
lea
stc
lea
fs
aas
loop
testb
cld
jl
push
and
cmc
jbe
fidivl
repz
insl
jl
js
xchg
stos
decb
popa
addr16
test
aaa
inc
data16
je
loope
jbe
adcb
out
add
xchg
sbb
leave
sbb
incb
xlat
inc
or
sub
in
mov
mov
or
mov
pop
stos
clc
push
push
fcoml
addb
sbb
arpl
cmp
adc
leave
movsl
sub
mov
shrl
sub
push
sbb
mov
ljmp
dec
outsl
jno
mov
cmp
cmp
leave
pop
xlat
stos
xorl
mov
imul
movntq
int3
mov
scas
lea
mov
dec
mov
call
aad
test
add
xchg
sbb
sbb
mov
arpl
hlt
cmp
dec
dec
push
sbb
inc
mov
mov
fstl
jecxz
stos
rcr
adc
pusha
xorb
enter
xchg
out
int3
xor
in
xchg
ja
xchg
gs
sbb
dec
sahf
pop
mov
and
pop
xchg
out
shrb
testl
aas
pop
or
insb
popa
jbe
lods
imul
add
xor
cmp
inc
mov
and
mov
add
xor
iret
mov
sub
aas
mov
mov
jnp
pushf
cld
push
pop
pop
push
stc
mov
paddq
negl
lock
and
jl
xchg
mov
xchg
sbb
xor
mov
ds
fs
lahf
pop
movl
data16
jb
lret
xchg
lret
lock
sarb
lret
sbb
jmp
sbb
pop
cld
out
mov
mov
cli
jle
or
xor
inc
in
and
ljmp
insl
mov
dec
add
pop
lcall
cwtl
iret
cld
je
sbb
mov
scas
cmpsl
jne
adc
insl
je
mov
std
mov
repz
jp
lret
dec
mov
mov
push
mov
ljmp
cmp
or
and
ja
mov
adc
xor
mov
sbbl
ljmp
aad
int3
jne
lret
inc
lods
insl
sbb
faddl
xor
mov
sbbl
jo
movb
test
adc
sbb
fcoml
jg
mov
inc
add
popf
xor
jmp
and
test
lahf
jne
int
mov
inc
sbb
push
loope
iret
mov
pop
dec
icebp
popf
and
je
int
and
daa
sahf
push
pop
push
adc
push
mov
icebp
shr
mov
mov
jo
pop
adc
in
jb
outsb
sbb
lahf
jo
pop
add
xor
xchg
jae
pop
pusha
lahf
ds
int3
xchg
dec
cld
mov
movsl
sbb
arpl
and
aas
into
in
outsb
mov
or
pop
jle
mov
xchg
int
mov
or
fdivl
popf
aam
adc
mov
sbb
std
js
mov
js
mov
inc
pop
cmp
push
or
loopne
shl
popl
shll
dec
fwait
mov
lods
dec
xchg
adc
clc
mov
popa
sbb
imul
test
xchg
push
and
mov
sub
sahf
pushf
lock
push
stc
in
push
mov
push
cmp
insb
jne
mov
inc
jo
int3
in
nop
test
lret
arpl
mov
loopne
shr
push
xchg
pop
xor
stc
int3
pop
mov
enter
outsb
xor
sbb
mov
cmpsb
push
mov
fsts
push
roll
sbb
xchg
jno
xlat
push
sbb
stos
mov
xchg
sbb
data16
adc
fsts
xor
outsl
dec
inc
dec
stc
mov
repnz
int
nop
cmp
subb
dec
xchg
shl
pop
sub
ret
lret
ret
add
pop
push
orb
fdivrs
ljmp
sbb
bound
les
mov
push
pusha
cmp
hlt
xor
inc
dec
cmp
adc
std
push
in
jb
mov
loopne
int3
jp
icebp
insl
jno
pop
mov
push
movsb
fsubs
and
pop
dec
xorb
jo
roll
jbe
cli
jne
in
aam
jmp
mov
insl
sbb
jge
add
cs
hlt
fimull
popf
nop
das
ss
xchg
xchg
out
sbb
mov
cmpsl
adc
xlat
mov
cmpsb
ss
inc
lds
push
addl
leave
into
stos
in
decl
lret
popa
clc
jns
jl
loope
adc
insb
nop
popa
repnz
mov
ja
jle
das
fs
cmc
mov
sti
sti
inc
pop
xchg
dec
aaa
xchg
mov
mov
sub
cmp
push
rorb
notl
xor
imul
and
pusha
push
or
lods
cmp
clc
cs
push
push
pop
cmp
mov
mov
in
mov
sub
jne
das
lds
sbb
cmpsb
out
adc
sub
ds
jle
bound
test
and
mov
dec
adc
fistpl
jbe
inc
imul
inc
inc
ret
jne
jbe
pop
mov
xchg
in
mov
cmp
out
fisttps
jae
jb
sub
outsb
add
and
adc
jae
adc
pop
fadds
hlt
sbb
jle
stc
repz
fidivs
sbb
imul
mov
cltd
cld
movsb
sbb
sti
or
addr16
push
test
push
pushf
loope
pop
sti
lahf
clc
imul
idivl
push
pop
movsb
rcl
testl
jo
and
cwtl
dec
js
pop
cmp
in
pop
mov
adc
loopne
jno
scas
mov
sub
mov
bound
rorl
cwtl
ljmp
repnz
insb
jno
je
cmc
loop
repnz
mov
das
push
mov
sub
mov
std
jno
mov
mov
push
pushf
mov
dec
cmc
test
fbld
mov
rcrb
mov
push
repnz
fldln2
add
jo
mov
pop
cwtl
xchg
lret
lods
xchg
int
jne
cli
jbe
mov
mov
movsb
xor
out
out
add
inc
add
mov
jmp
call
arpl
mov
imull
pop
push
je
in
mov
push
mov
clc
push
or
or
lods
xor
pop
hlt
fistpl
fdivl
cmp
dec
ret
pop
outsl
frstor
inc
push
jno
outsl
ret
outsl
sarb
incl
mov
pop
stc
dec
cmp
hlt
xor
jge
mov
fidivrl
inc
xor
mov
ret
test
add
loop
outsl
es
jns
movsl
and
out
call
lret
xchg
bound
xchg
dec
pop
cmpsl
jecxz
mov
push
fadds
sub
push
push
adc
mov
sub
or
sbb
mov
mov
test
mov
or
clc
add
insb
and
push
popf
adc
sub
wrssd
outsb
scas
daa
lret
xlat
xchg
ror
fidivs
sbb
mov
aam
stc
pop
mov
add
cltd
scas
push
dec
cmp
push
jbe
mov
fs
loop
rorl
xchg
or
mov
sbb
adc
cvttps2pi
popa
cmp
sti
cmpsb
negl
mov
pop
lods
mov
sbb
test
add
xchg
nop
stos
out
lret
mov
xchg
sahf
xchg
mov
xchg
add
jecxz
es
in
jl
aaa
outsl
push
in
pop
cwtl
jmp
ficoml
mov
push
imul
fistps
cmpsb
mov
jecxz
mov
mov
int3
xchg
mov
sbb
roll
ret
xor
shufps
addb
xchg
cmp
enter
in
outsl
repz
jb
adc
ficomps
or
fsubl
icebp
nop
mov
inc
nop
jbe
pop
and
repz
in
cltd
inc
shr
call
lods
outsb
lea
inc
inc
or
jmp
cmc
xchg
popa
xor
cmp
add
xchg
stc
mov
jl
divl
scas
call
movsb
out
inc
rcl
xor
jbe
mov
sbb
dec
fdivp
pop
shlb
cs
jmp
ljmp
mov
or
and
push
or
das
push
inc
shl
mov
adc
test
dec
fs
hlt
add
pop
sbb
inc
lock
std
outsl
cmp
out
ljmp
fcmovu
and
adc
add
xor
jnp
iret
movsl
sbb
movsb
data16
es
xlat
mov
dec
sbb
jp
jo
push
mov
and
and
movsl
and
inc
test
inc
ret
pop
roll
xchg
xlat
push
nop
fsubl
lret
ret
jp
addr16
mov
bound
cmpsl
cs
sub
test
lds
lret
test
popf
out
xchg
add
dec
int3
push
add
sti
ss
xor
mov
jmp
rcr
mov
mov
das
mov
or
bnd
jecxz
mov
adc
into
test
xchg
cli
dec
aad
xchg
push
mov
nop
cld
sub
gs
rcr
dec
ror
sahf
adc
xchg
jne
cmp
cmp
cmpl
adc
push
xor
ja
cmp
pop
pop
bnd
insb
in
push
mov
jge
adc
inc
jle
pop
xchg
add
out
lret
in
imul
cli
add
movsl
push
ss
stos
daa
dec
inc
inc
ljmp
mov
imul
push
jg
adc
pop
mov
data16
mov
insl
pop
xchg
sbb
mov
mov
aas
pop
lods
out
out
sahf
add
or
les
scas
roll
sti
inc
ret
inc
or
out
dec
out
outsl
icebp
std
pop
popf
xchg
sbb
xchg
sbb
xor
inc
mov
cs
fistl
dec
decb
sub
lcall
sub
mov
loope
into
subl
xchg
pop
test
daa
lret
dec
inc
iret
mov
ret
or
inc
icebp
clc
pop
and
aad
popf
mov
popf
jmp
xchg
call
iret
pop
pop
cmpsl
out
aas
mov
je
xchg
adc
mov
pop
adc
aaa
jg
ljmp
gs
push
sbb
push
adc
jecxz
ljmp
dec
adc
dec
ftst
out
in
dec
dec
mov
xchg
push
imul
sti
pop
cmpsl
repnz
adc
jb
cmp
incb
jp
out
dec
int3
in
or
outsl
in
adc
fs
pusha
mov
push
cmp
imul
inc
or
fsubs
scas
and
mov
shrb
sub
lods
addr16
clc
add
fs
pop
dec
mov
or
jns
xchg
mov
aas
popa
fsubrs
mov
stos
mov
sub
dec
dec
hlt
iret
mov
sub
mov
push
in
fadd
sub
aas
rcrb
mov
push
jl
hlt
cmpsb
jmp
clc
es
cmp
xor
fnsave
dec
lds
and
adc
and
shl
dec
mov
rclb
pop
mov
adc
mov
jl
movb
lcall
mov
push
nop
xchg
sete
cmp
mov
jle
xchg
or
outsl
or
pop
mov
jle
loope
adc
paddq
mov
add
bound
adc
mov
mov
xchg
push
push
std
lock
jb
in
dec
imul
push
dec
push
push
cltd
sbb
cli
xchg
fnstenv
divb
adc
adcl
loope
dec
jg
cmp
mov
sarb
les
lods
xor
js
inc
in
mov
pop
into
out
fisubl
stc
out
in
sub
mov
ret
xor
mov
in
sub
imul
xchg
pop
insl
test
movsb
cmp
leave
xchg
stos
xchg
lahf
mov
or
aad
movsb
sbb
stos
cmp
bound
push
les
bound
or
lock
xchg
sub
call
mov
xor
test
test
mov
lcall
xchg
jl
addr16
lahf
dec
dec
sbb
inc
outsl
mov
or
or
jno
sti
jmp
mov
cmpsl
rorl
mov
aaa
jp
cltd
cmp
mov
dec
into
push
sar
push
popa
sahf
negb
or
mov
adc
repz
xchg
leave
insb
push
jnp
ljmp
mov
sbb
jge
ss
push
mov
shll
fs
jp
aas
xor
adc
cmp
jmp
pop
aad
mov
stc
mov
imul
jb
adc
dec
mov
pop
lods
push
sub
ffree
dec
aas
inc
test
imul
leave
cmpsl
jno
mov
repz
pop
add
dec
and
cmp
push
push
nop
fdivrs
negb
int3
daa
je
jecxz
loop
clc
aam
movsb
in
push
repnz
imul
outsb
mov
mov
call
daa
xor
push
jmp
adc
iret
mov
push
adc
jnp
pop
xor
ja
bound
arpl
pop
cli
or
xor
cmp
in
xchg
out
mov
push
insl
jnp
mov
jne
fistpll
fcmovu
pop
fdivrp
inc
add
dec
bnd
push
xchg
das
jge
hlt
adc
insl
push
xor
or
popf
div
punpcklbw
int3
leave
xor
pop
jns
nop
push
mov
outsb
int
mov
adc
bound
mov
arpl
jle
push
pop
add
push
xchg
or
mov
iret
mov
xor
jp
push
dec
lods
push
loope
in
pop
sub
mov
pushf
aas
mov
loope
push
jge
sub
add
andb
daa
loopne
xor
iret
stc
jl
outsb
add
sbb
es
fs
out
pop
mov
xchg
cmpsb
push
movl
cld
shlb
repnz
sbb
or
scas
sub
in
or
outsl
mov
push
inc
test
fimuls
gs
add
sub
pop
and
dec
lahf
sbb
push
mov
add
stos
leave
and
bound
pmullw
pusha
imul
dec
sahf
push
mov
mov
fwait
sbb
pop
jmp
mov
mov
data16
mov
pop
lcall
out
cmp
aad
xchg
insb
leave
xchg
int3
bsf
push
or
and
push
fbld
lods
cwtl
outsl
mov
adc
clc
scas
add
sarb
jne
and
adc
dec
repz
movsb
icebp
mov
pop
push
mov
ja
mov
push
fmuls
xchg
dec
push
push
outsl
out
cmp
add
imul
imul
cmpsb
outsb
fsubrl
cs
push
repz
out
les
cmc
fsubrs
repz
imul
in
adc
jmp
ja
sbb
ds
int3
mov
pop
insl
push
mov
movsl
cmpsl
jbe
xchg
jge
iret
cmpsb
jns
jmp
xchg
das
outsl
scas
adc
out
and
push
sbb
push
fld
push
xchg
aam
mov
pop
out
dec
lea
jbe
sub
push
rcll
cmp
cmp
hlt
sub
loopne
jns
xor
or
jo
ret
xorl
pop
adc
push
sub
cmp
inc
lret
mov
and
dec
mov
test
test
xor
dec
mov
push
outsb
loope
stos
xor
mov
adc
mov
mov
xor
mov
add
sbb
push
das
popf
or
cmp
push
mov
repz
add
arpl
xor
imul
cltd
xchg
mov
gs
test
fistpl
xorb
dec
jge
fidivl
not
lods
movb
adc
sub
adc
fidivrl
xchg
and
lret
sub
in
lods
ja
push
sbb
mov
or
out
sub
xchg
std
xor
les
jecxz
pusha
aad
add
push
insb
mov
divb
arpl
xor
lds
push
xor
cltd
ja
aad
sbb
or
or
xchg
lret
fsubr
insb
fnstcw
adc
mov
clc
add
jmp
cmc
adc
sarl
ror
push
mov
xchg
aam
ret
fisttps
push
js
pop
sub
scas
js
pop
jp
add
fists
lahf
mov
fwait
cwtl
ljmpw
cltd
and
lahf
adc
push
sbb
cmp
aad
push
sub
clc
std
push
sub
add
int
in
ret
jbe
add
in
fsubr
out
insl
enter
ljmp
push
out
sub
jno
pop
sub
and
bound
ret
xchg
pop
pop
sti
hlt
xchg
xor
cmpsb
addr16
pop
pop
jb
insl
pop
lret
ja
cmc
mov
mov
aam
cmpsl
push
mov
ret
movsl
jne
add
xchg
pop
push
xchg
negl
hlt
adcl
rcr
insl
in
sub
xchg
mov
inc
mov
jbe
jo
ds
lods
jmp
pop
add
mov
nop
ja
shll
push
outsb
jne
xchg
mov
jnp
mov
sub
jne
sbb
dec
test
or
pop
jns
push
add
enter
lahf
out
int
lock
pop
insb
aaa
sub
xor
rorb
push
into
shll
fistl
pop
pop
leave
stos
and
push
addr16
cmp
or
decl
inc
stos
sub
push
shrl
jge
cmp
bound
jp
dec
and
nop
lret
cmp
add
mov
pop
jns
push
lret
stos
out
and
push
mov
xchg
call
ret
push
add
int3
and
loope
call
out
jb
movsl
and
jp
lds
sbb
icebp
pop
push
mov
pop
fidivrl
dec
xlat
push
sub
aaa
loop
fdivs
mov
or
or
pop
cmc
incl
sub
lods
xchg
hlt
cwtl
std
mov
cmp
roll
cmc
xor
ret
je
imul
inc
pop
xor
sub
inc
fcmovnu
pop
sbb
xor
cld
ljmp
mov
or
ret
cwtl
jle
lahf
repnz
xor
pop
mov
adc
das
add
sub
adc
or
mov
push
fs
mov
pop
inc
pop
arpl
sbb
loope
adc
loop
jb
inc
xor
sub
cmpsb
out
cmpb
mov
sbb
sahf
push
ret
push
scas
fimull
add
insl
ja
jnp
xchg
jmp
out
pop
pop
xchg
out
mov
sbb
add
mov
test
add
iret
in
lcall
lret
fdivl
adc
es
xchg
loop
cli
std
pop
and
cwtl
rcrl
fs
repz
cwtl
into
pop
sbb
or
fwait
jno
mov
ss
mov
push
xchg
sbb
mov
dec
cmpsb
jge
add
sbb
xor
mulb
jb
mov
repnz
fistpll
push
arpl
and
xchg
or
inc
mov
and
movsb
mov
les
idivb
inc
mov
and
and
call
mov
scas
in
cmp
jge
scas
xchg
sub
imul
sahf
das
sbb
push
xor
and
inc
mov
add
into
push
jo
jnp
scas
test
cmp
pusha
negl
sbb
fs
mov
icebp
cmp
push
movsb
shrb
jg
adc
xchg
and
popf
aad
mov
xchg
inc
pop
mov
jno
test
mov
push
inc
dec
add
andb
fs
adc
push
jg
es
loope
lods
pop
or
pop
fimuls
inc
and
xor
addr16
loopne
dec
fnstenv
mov
clc
mov
xchg
fbld
xchg
jl
sbb
out
insl
pop
out
mov
fidivrs
mov
lock
sahf
out
lret
or
mov
popf
or
fs
push
cmp
ret
in
js
notb
pop
push
outsl
das
inc
fsubl
xor
inc
or
and
sub
dec
cmc
fadds
push
das
es
add
xor
cmp
xchg
push
pop
loope
popl
test
mov
pushl
sub
orb
cmpl
flds
sbb
imul
jbe
std
pop
mov
push
adc
ss
sub
mov
cmp
push
mov
dec
nop
dec
pop
pop
fsts
push
sub
xchg
std
inc
xchg
sbbl
cmp
ret
push
loopne
inc
les
or
mov
nop
int
jne
or
test
orb
mov
push
sub
call
out
cmp
std
inc
je
sub
ret
pop
push
cli
mov
mov
adc
inc
clc
in
xchg
or
iret
orl
in
shll
mov
jb
mov
mov
dec
or
push
xor
fmul
rcrb
sbb
mov
and
adc
dec
fldt
daa
ficoms
clc
xchg
loope
xchg
test
sbb
dec
fbstp
popa
xor
jo
mov
fisubs
pop
outsb
push
test
sbb
jae
sbb
jmp
pop
js
aam
dec
jmp
scas
movsb
adc
jg
push
jne
xchg
movsb
jle
arpl
outsb
scas
test
push
negl
int3
dec
sbbl
adc
outsl
rclb
out
or
pop
ss
loope
sbb
dec
pushf
mov
xchg
mov
cmp
loop
lahf
pop
jno
std
adc
inc
loopne
stos
cmp
lret
dec
jae
les
jmp
call
or
push
test
jns
adc
leave
xor
jns
loope
out
ret
add
push
jae
ds
mov
les
frstor
xchg
adc
dec
adc
cmp
arpl
mov
repnz
rcrl
push
inc
inc
test
xchg
leave
jp
int3
out
or
or
call
mov
divl
sbb
sbb
xchg
mov
imul
lods
movsl
ret
cmp
xor
mov
xor
xor
sbb
sub
push
inc
xor
jmp
clc
ret
fucom
out
cld
ret
push
in
sub
and
mov
fcoms
jns
and
jp
cmc
dec
mov
or
fsubs
out
xor
xchg
loop
arpl
repz
cmp
ret
push
cli
add
sub
inc
mov
pop
cmp
shl
movsb
bound
mov
mov
mov
pop
and
lahf
jb
ljmp
add
xor
jle
incl
jmp
in
sub
cld
push
bound
and
cli
ficompl
nop
mov
mov
pop
fstpt
pop
cmc
and
jno
sahf
jne
cmpsb
push
mov
std
jbe
mov
sub
scas
shlb
mov
and
xchg
cmc
push
add
add
jle
scas
lea
jne
pop
xor
mov
cmp
mov
push
push
pop
bswap
xlat
nop
incb
daa
insl
xchg
push
cli
sub
cld
ljmp
cmp
aad
incl
mov
and
push
aad
jmp
fstpt
test
in
cmp
adc
or
shlb
push
cs
mov
dec
lods
mov
pop
or
jbe
dec
aad
mov
inc
icebp
and
or
pop
cs
imul
push
sbb
test
push
adcb
rcr
mov
mov
mov
mov
inc
ja
pop
and
testl
movsl
and
mov
mov
push
cs
push
xor
jne
sub
pop
add
sbbl
sub
cs
ljmp
fdivr
ss
out
sub
sbb
test
aad
xchg
pop
sbb
or
mov
jo
fs
mov
dec
sbb
dec
xor
mov
fsubl
pop
addr16
insb
shll
aam
rorb
pop
cwtl
test
notl
ja
xchg
sub
lret
xor
insb
add
inc
pop
sub
mov
xchg
pop
loope
cli
pop
pushf
jle
iret
aaa
sbb
xchg
fucomp
test
mov
add
aad
imul
pop
popa
push
xor
mov
adc
outsl
jb
jb
xor
or
push
lods
inc
repz
scas
xchg
mov
rol
pop
clc
inc
and
hlt
jge
int3
jle
cmp
mov
xchg
add
test
pop
aad
lock
push
int
add
scas
in
mov
xchg
xchg
sub
mov
adc
dec
dec
cli
mov
inc
sbb
aas
pop
std
jbe
jge
push
jbe
clc
xchg
loopne
hlt
aas
inc
push
pop
leave
movsb
jmp
mov
loope
mov
mov
pop
out
mov
ror
push
xchg
jl
xchg
test
cmp
push
adc
push
adc
push
nop
mov
loope
dec
pop
jb
add
mov
outsb
jmp
popa
xchg
out
jo
hlt
insb
outsl
pusha
dec
fstpl
sbb
jl
adcl
cmp
cmp
mov
xchg
push
lret
es
dec
test
bound
int
push
xor
es
sbb
push
dec
mov
and
and
pushf
fwait
sbb
rclb
mov
lcall
scas
insl
mov
addr16
subl
push
or
or
arpl
pop
daa
cmpsl
pop
inc
nop
push
std
gs
insb
cmp
mov
inc
and
and
dec
cmp
out
out
mov
mov
repnz
push
push
imul
adc
mov
jbe
xchg
rcrl
hlt
test
adc
jnp
and
fidivrs
sbb
sbb
jb
cmp
pop
pop
aam
pop
cltd
lods
iret
adc
cmp
dec
adc
add
jnp
mov
xchg
or
sbb
cwtl
and
and
adc
ret
xor
daa
aam
lcall
or
add
ja
bnd
inc
mov
xlat
and
push
divl
push
add
outsl
jae
inc
sbb
int3
scas
pop
fstpl
gs
fdivl
orl
cmp
jae
cld
mov
mov
push
sub
adc
jne
cwtl
or
adc
add
fdivl
and
jge
test
or
in
xchg
sbb
push
into
jg
icebp
call
dec
and
imul
mov
daa
push
cmpsl
ja
push
nop
sub
mov
cld
cmp
push
inc
das
mov
int3
in
das
cvtps2pd
adcl
cltd
sbb
js
aas
lahf
jge
xor
inc
dec
cmpsb
push
add
imul
test
add
cmp
popl
mov
pop
sbbl
mov
pusha
cmp
xor
repnz
loope
test
xchg
add
push
subb
bnd
jl
mov
lock
dec
loope
dec
xor
and
addr16
sbb
inc
in
jmp
enter
aas
popa
push
and
loopne
dec
mov
push
test
push
in
imul
das
mov
inc
pop
aas
and
js
in
daa
stos
sub
enter
popf
jnp
or
adc
leave
arpl
cmp
mov
cmp
jg
aas
dec
xor
dec
addb
and
ret
xor
sbb
outsb
mov
out
mov
fisubrs
test
xor
xlat
insl
stos
imul
pushf
ret
gs
sbb
sub
out
je
mov
mov
aaa
jl
ds
aaa
subl
xchg
out
mov
xchg
sti
das
mov
adc
fnstenv
xor
ljmp
cwtl
out
cs
push
cltd
push
shl
sahf
test
jg
xchg
jge
call
mov
pusha
and
iret
ss
and
add
dec
pop
out
clc
aaa
bnd
cld
pop
sub
dec
push
add
xchg
mov
pop
xchg
cmp
ds
lds
rcl
inc
inc
lret
inc
jns
mov
gs
jle
fisubl
or
push
cld
fs
loop
rorb
lret
fistpl
clc
test
or
repz
test
icebp
in
add
xchg
mov
sbb
jge
lahf
pop
sbb
xor
cmp
mov
ljmp
or
sbb
jnp
pusha
sbb
sbb
or
mov
stos
sub
push
mov
pop
lock
cltd
jne
push
cli
in
or
mov
int3
outsb
shr
dec
lret
inc
xchg
and
add
xchg
ja
pop
jo
mov
push
mov
int3
push
add
mov
rorb
cli
into
jecxz
adc
mov
out
sbb
and
push
cmpsb
mov
adc
or
fstpt
and
sub
pop
fs
xchg
out
mov
cwtl
test
mov
mov
mov
xchg
or
int
lret
inc
sbb
mov
cmp
or
mov
aad
add
push
rorb
jmp
pop
in
mov
stos
jge
es
lret
dec
cmp
sbb
mov
test
lahf
cmp
push
xchg
mov
aas
mov
fwait
push
sahf
lods
xchg
das
xchg
out
pusha
sub
mov
jo
add
pusha
out
leave
push
dec
out
inc
and
scas
ret
pop
sub
fildll
jl
sti
mov
cld
push
fsubr
and
adc
clc
mov
mov
ds
xchg
shll
pop
ret
jge
in
int3
cmpsl
pop
jle
outsl
sub
xchg
lods
ja
aam
jle
ret
pop
fmull
adc
arpl
imul
xchg
jp
xor
ret
ljmp
push
xchg
rorl
push
insb
repnz
rcll
notl
arpl
imul
mov
arpl
in
fcoml
je
mov
addb
fwait
cmpsb
les
imul
push
jne
adc
cmp
cltd
cmpb
hlt
dec
scas
rorb
lea
fldenv
shlb
lds
xor
repnz
mov
fsubl
repnz
mov
mov
and
in
cmp
mul
lahf
flds
sahf
jne
cmp
popa
pop
add
ret
ss
lahf
aad
out
and
jg
ficoms
out
jne
das
les
adc
jns
mov
mov
fmull
int3
add
sti
jne
scas
mov
out
xor
and
jno
pop
aaa
ret
test
xchg
or
sahf
sti
icebp
das
in
es
mov
ret
mov
popa
movsb
dec
scas
cmp
int3
iret
std
push
imul
ret
lods
mov
jo
dec
push
and
push
mov
jle
xor
int
adc
adc
leave
out
movsb
xchg
pop
sbb
sub
mul
mov
scas
outsl
aad
sub
push
stos
lahf
call
lahf
pusha
push
cmp
dec
jmp
jb
not
idivb
xchg
xor
push
lret
arpl
movsl
jp
cmpsl
mov
test
jns
dec
sub
mov
sub
xchg
mov
aam
in
push
lods
push
vmovups
sub
mov
daa
es
inc
jp
mov
insl
stos
das
test
mov
imul
shlb
jp
sti
in
xchg
push
addb
rcll
cmp
cs
jb
pop
ret
cmp
adcl
push
cmp
lret
cmp
jnp
imul
fdiv
jle
fs
ret
lcall
ss
jbe
cltd
dec
lds
xor
xorb
mov
loope
lods
sbbl
rclb
add
sub
mov
adc
mov
mov
das
jns
xchg
inc
mov
popa
ret
dec
fcoml
dec
sahf
daa
scas
test
sub
in
xor
inc
subl
fld
mov
mov
push
sbb
cmpsb
out
mov
jb
mov
push
mov
sbb
rcl
xchg
popf
mov
test
jb
gs
test
add
lcall
jae
repnz
fucom
xchg
ret
hlt
push
test
and
scas
jp
and
cmp
xchg
rcrb
jns
out
jle
mov
repnz
or
sar
or
jb
sbb
xor
jno
mov
xchg
mov
sub
loope
push
repnz
jnp
adc
mov
in
jmp
add
mov
cmp
xchg
xor
mov
push
in
pop
push
sbb
js
xlat
fwait
inc
push
sub
movsb
mov
mov
push
xor
mov
pop
test
arpl
cmp
pop
ss
cmp
lods
fbld
mov
xchg
addr16
es
or
popf
mov
leave
mov
in
scas
out
jmp
xor
aaa
cwtl
cmp
inc
ja
jp
add
in
dec
push
adc
sbb
xor
push
add
jno
mov
and
inc
lret
jp
test
jbe
fcoms
push
jp
cmp
arpl
ss
inc
imul
jo
push
xorb
cmp
pushf
gs
and
lods
xor
cmp
cmp
gs
mov
jb
xor
push
sub
pusha
xorl
jo
push
repnz
aaa
and
mov
imul
dec
pop
inc
adc
les
dec
xor
inc
movsb
lahf
loop
adc
mov
mov
push
scas
mov
inc
test
mov
mov
jg
int
les
dec
into
jne
pop
mov
nopl
fcoml
call
pop
cmp
cmc
out
out
jmp
inc
xchg
cmpl
fldt
xor
xchg
mov
cmp
mov
call
inc
adc
fs
les
dec
out
aaa
dec
cmpsl
roll
push
sbb
xor
inc
fistl
xchg
clc
jmp
or
test
lret
xchg
mov
sub
pop
mov
jg
adc
jl
dec
dec
mov
insb
movsb
or
xchg
jle
jno
in
loop
ret
sbb
cmp
movsl
test
enter
xor
ret
insl
cmpsl
ror
scas
sub
insl
clc
dec
cmpb
inc
test
das
pusha
fs
popf
cmp
test
adc
ret
and
dec
lcall
test
fistpl
scas
mov
ja
dec
int3
insb
out
dec
loop
pusha
ficompl
gs
es
sbb
sar
arpl
hlt
mov
aam
xor
sbb
fisttps
rcrl
scas
pop
out
adc
pop
aad
fs
es
es
jbe
sbb
sub
push
dec
ret
ret
loope
and
ret
mov
loop
inc
sbb
mov
inc
hlt
mov
dec
pop
ret
imul
pop
movsl
stos
mov
mov
scas
inc
shlb
cld
loopne
or
and
fistps
aam
daa
scas
icebp
mov
stc
pop
frstor
inc
xor
inc
daa
mov
mov
hlt
sub
jle
mov
loop
bound
in
dec
leave
bound
je
and
or
xchg
jb
add
add
nop
jp
jo
leave
rcrb
xor
dec
dec
in
or
adc
mov
lods
add
aas
pop
inc
rorb
mov
xchg
adc
insl
mov
mov
mov
shlb
dec
sub
sti
scas
movsl
sahf
lods
mov
jp
add
loope
xor
cmp
rcl
adc
dec
mov
cmp
or
mov
adcb
pop
and
daa
pop
in
mov
mov
push
sub
ss
inc
jg
cwtl
clc
mov
push
ret
push
lret
jl
add
xchg
pop
sub
and
xchg
in
cli
add
pop
mov
and
in
sub
aaa
hlt
jo
jns
ss
dec
and
xchg
or
pop
aad
inc
adc
mov
orl
lds
add
or
cmp
fdivrl
mov
mov
push
push
jle
seto
out
adc
aas
xor
inc
or
add
mov
push
cmp
xor
sahf
sti
cmpb
cwtl
sub
dec
imul
xchg
into
fists
in
dec
popl
xlat
js
into
das
je
jge
pop
add
mov
inc
sub
mov
add
mov
mov
sbb
ljmp
pop
lea
lods
and
mov
mov
xchg
addl
push
iret
rclb
test
dec
shr
pop
and
mov
sbb
lcall
or
lods
mov
mov
mov
push
adcb
xor
cmp
sti
rcll
mov
jg
sub
xlat
push
in
sub
jo
jp
add
retw
in
xchg
sarb
mov
sahf
adc
or
scas
xchg
push
push
mov
pop
dec
sbb
adc
mov
ret
test
push
mov
xchg
lcall
call
sub
mov
xchg
call
mov
and
lret
xor
in
pop
push
mov
xchg
lret
xchg
in
in
fwait
jecxz
in
ds
fidivrs
add
jge
int
mov
ror
aas
mov
push
lds
push
jo
and
mov
cltd
and
dec
cli
int
mov
insl
cmp
mov
lock
les
jne
dec
mov
rcrl
xor
inc
popf
sete
inc
xor
je
sub
jnp
mov
mov
and
data16
out
sbb
sbb
jecxz
jmp
je
divl
scas
je
lar
pop
out
adc
stos
sub
adc
jle
lea
mov
loope
test
int
rcrl
aad
mov
xchg
jg
xchg
lea
frstor
clc
and
and
xlat
das
test
pop
ljmp
jns
mov
pop
cmp
loopne
adc
test
faddl
dec
les
pop
int3
pop
mov
rcr
rcr
out
into
and
adc
loope
sarl
test
cld
add
fstl
sub
aaa
cmp
lds
and
cmpsb
pop
lret
test
test
cmp
sbb
mov
mov
es
ret
or
jns
xor
cs
sbb
bound
cld
pop
mov
dec
testl
push
stc
dec
pop
mov
jns
lret
or
bound
xchg
xchg
jo
mov
sbb
imul
inc
cmp
popf
xor
cwtl
jp
inc
push
pop
jl
out
je
xor
or
add
or
push
mov
jo
add
std
pop
push
sbb
xlat
adc
xor
ljmp
mov
dec
jl
popa
sub
fcom
pop
push
sub
inc
xchg
jb
pop
ret
data16
jecxz
sbb
repz
out
scas
inc
push
sub
xchg
insl
jno
mov
jbe
push
das
push
add
stos
push
add
loopne
mov
mov
out
sub
xchg
inc
dec
call
xor
xrelease
fsub
add
pop
cltd
cmpsb
pop
mov
mov
add
mov
aam
rorl
push
pop
and
xor
cmp
mov
mov
or
shlb
ljmp
xor
or
sub
je
sbb
nop
and
adc
sarl
mov
cmp
je
mov
sbbl
dec
and
or
js
fwait
testl
in
push
ss
imul
dec
sahf
cmpsl
adc
stos
cwtl
lods
pop
nop
push
mov
popa
push
jecxz
jle
jecxz
xchg
sub
pop
aas
xor
sub
test
sar
mov
add
mov
pop
mov
inc
jmp
outsb
xor
add
in
fwait
clc
stos
lock
jae
xor
mov
push
clc
into
std
sbb
fisubl
jno
pop
sbb
pop
pop
rorl
das
jno
iret
in
adc
das
mov
mov
inc
mov
lods
cmp
aaa
inc
xchg
fwait
cltd
mov
cmp
jbe
aaa
movntps
pop
movsl
out
ret
sbb
leave
movnti
inc
mov
add
out
mov
aad
cmp
jo
movaps
insl
in
pop
adc
sahf
out
mov
movl
inc
pop
ljmp
mov
dec
inc
mov
ds
push
xchg
push
sbb
inc
push
or
data16
sbb
adc
arpl
xor
jne
es
int3
mov
sub
leave
adc
mov
outsb
loopne
sub
jmp
shll
sub
out
mov
mov
popa
mov
aaa
outsb
out
fcom
loop
sub
lds
aad
repnz
lcall
dec
out
scas
mov
jb
jmp
and
cmp
dec
add
bound
out
aas
mov
adc
jecxz
mov
adcb
scas
push
and
ret
sub
in
in
jno
imul
popa
test
cld
imull
sub
sarb
adc
aaa
aas
pop
lcall
push
lahf
dec
cmpsl
inc
fstps
push
call
int
mov
jmp
push
in
pop
clc
int
popf
shll
rcll
jge
popf
clc
xchg
sub
mov
mov
cmp
add
test
adc
cmc
jno
vfrczpd
push
lret
out
dec
gs
call
xchg
pop
ja
sti
jp
stos
lds
iret
into
outsl
ja
cmpsl
outsb
rcr
aam
add
jg
iret
imul
jge
mov
imul
mov
lret
imul
add
pusha
ficomps
push
xor
fimuls
lea
xchg
jb
rcr
mov
or
fwait
sbb
cmp
les
enter
push
pushf
and
nop
cmp
sbb
in
cli
sbb
sarl
stc
shrl
mov
icebp
push
and
enter
cli
inc
rcll
data16
stos
rclb
test
xchg
test
cwtl
dec
push
scas
xchg
cmp
ja
lods
shlb
lcall
out
dec
cmp
add
mov
shl
push
and
mov
mov
popf
in
cs
pop
arpl
jo
mov
sti
jmp
xorl
rcrl
test
scas
mov
sbb
pop
sahf
dec
and
jae
jo
jecxz
jno
xchg
dec
sahf
mov
pusha
sub
int
lods
mov
outsl
pop
xor
test
jmp
lcall
or
orl
pop
mov
sub
pop
cld
leave
test
inc
xchg
pusha
enter
and
push
mov
xchg
lods
adc
dec
pop
test
jl
cs
nop
lret
loopne
or
ficomps
inc
fcmove
fisubrs
and
test
xchg
dec
movsl
mov
stos
in
lret
push
ret
test
cmpsb
push
test
leave
clc
xchg
mov
mov
inc
pusha
jge
shll
stc
add
sub
js
cli
outsl
std
fidivl
fidivs
mov
add
int3
int3
out
add
push
adc
inc
mov
ljmp
nop
pushf
fwait
into
fnstcw
xchg
subb
sbb
lods
idiv
rclb
fsubs
or
lahf
pop
gs
jns
mov
out
decl
mov
rcrl
pop
mov
mov
js
movsb
daa
std
push
lahf
fwait
outsl
sbb
into
mov
jae
push
mov
push
dec
mov
mov
cmovo
adc
xor
xor
jb
adc
loopne
pop
ret
aam
push
xchg
mov
incb
cmpl
and
mov
or
dec
adc
sbb
lret
cmp
loop
mov
sbb
pop
jp
dec
mov
fidivs
or
pop
lds
adc
jge
call
jns
mov
xor
fwait
in
addb
xchg
cmp
adc
or
add
movsl
sub
popf
jo
jg
pop
cltd
mov
lcall
mov
push
inc
jle
mov
je
imul
ret
inc
loop
stos
aas
inc
jo
xlat
jno
movsl
inc
mov
cmp
pop
cmp
js
in
push
push
mov
dec
pop
sub
cmc
subl
adc
inc
pushf
xchg
jnp
xorb
in
in
adc
scas
pop
jb
sbb
rorb
cmp
fnstenv
inc
das
xchg
popf
insl
add
mov
sti
cltd
sub
mov
fmul
add
push
add
lods
mov
roll
pushf
ja
inc
adcb
mov
add
jl
inc
cmc
sbb
jg
push
rcrb
cli
sub
outsb
dec
push
in
sub
and
loopne
mov
popa
sub
xchg
and
pop
imul
cmp
xor
aaa
push
sahf
mov
sub
cmp
roll
jae
push
pop
or
pushl
nop
cmpsl
cwtl
push
les
mov
add
add
mov
lods
push
or
fs
dec
test
xchg
negl
inc
lea
xor
rcrb
cmpsb
xchg
and
lods
adc
inc
adc
scas
adc
mov
hlt
pop
push
push
clc
cltd
adc
leave
mov
fsubl
cld
out
cmc
push
clc
sub
aaa
leave
or
fdivl
adc
rclb
les
sbb
lods
fcoms
push
and
cld
or
in
push
adc
cmpsl
fwait
mov
pop
js
jecxz
add
into
andb
mov
test
in
int3
mov
push
ret
fisttpll
imul
mov
cmpsb
and
pop
jae
mov
jne
cmpsb
xchg
jno
sub
fsubl
mov
negl
cwtl
aam
movsb
pop
jp
shlb
jbe
and
xor
sbb
fwait
or
dec
lds
xor
push
or
in
xchg
enter
and
inc
pusha
push
rorl
xchg
push
ret
push
std
mov
or
sarl
movsl
stos
mov
fsubrs
fs
orl
inc
xor
pop
push
lea
ds
jmp
movsb
sbb
aas
sti
hlt
lock
xchg
repz
sbbl
sbb
cmp
js
and
xor
incb
idivl
orl
ret
lock
testl
sub
mov
subl
outsl
dec
adc
fcmovnbe
mov
sahf
add
inc
icebp
iret
lock
jae
dec
jo
shl
push
out
push
scas
in
ljmp
addr16
mov
ja
sti
shrl
pop
scas
sub
mov
fimuls
sbb
pop
les
test
js
adc
rcrb
rcl
pop
adcl
xchg
xor
mov
pop
insl
shrb
push
jne
dec
sub
pop
ret
sub
ss
cmp
adc
scas
push
notl
mov
xor
push
dec
vmread
mov
mov
aam
inc
and
das
cmp
aaa
inc
sub
add
sbb
jl
jg
in
add
xor
scas
sbb
sbb
mov
xorl
dec
or
scas
gs
fsubrl
jo
inc
test
scas
ret
add
jne
mov
mov
mov
mov
pop
jnp
or
sub
stos
sub
jno
mov
xchg
adc
aaa
or
mov
jo
jo
mov
fisubrl
inc
jno
into
cmp
ljmp
dec
lcall
repz
js
aad
and
adc
out
dec
cmp
xchg
inc
add
mov
and
mov
jecxz
lods
push
dec
xchg
or
scas
or
jbe
shrl
clc
xor
ljmp
add
inc
icebp
lret
xchg
rolb
popl
cwtl
jno
xchg
and
dec
pop
pop
inc
aas
mov
aam
lret
rolb
das
call
push
xchg
push
dec
lds
je
lret
dec
cmp
out
push
dec
inc
aad
repz
adc
ja
mov
dec
fsts
adc
movsl
add
mov
jg
push
jg
sub
sbb
adc
xchg
mov
fists
nop
push
dec
scas
or
and
fbstp
pop
lods
rcll
dec
pop
lods
adc
mov
cmp
adc
clc
push
outsl
lea
and
into
inc
data16
jb
outsl
ja
cmp
mov
ffreep
pop
push
out
gs
cmp
addr16
jo
loope
jl
call
mov
bound
adc
fwait
adc
pusha
mov
enter
pop
jl
dec
mov
roll
xchg
divb
lret
loope
gs
jp
and
mov
cmpsl
test
mov
fwait
adc
in
push
cmp
imul
xchg
sbb
jno
out
cmp
out
pop
xchg
mov
inc
or
mov
sbb
fsts
movsb
mov
xor
in
imulb
outsl
dec
mov
into
mov
push
cmpb
jno
inc
testl
jmp
into
out
xor
jle
ja
rorb
push
pop
sub
mov
sbb
or
dec
lods
lods
jnp
mov
dec
add
stos
jno
xchg
rcll
cmp
mov
mov
mov
cmp
adc
sbb
cmp
pop
and
dec
inc
xchg
mov
xlat
pop
adc
sub
xchg
iret
cmp
test
jae
xchg
push
add
mov
pop
inc
jl
push
cwtl
jg
xchg
xchg
jle
iret
adc
mov
pop
insl
pop
data16
inc
mov
dec
inc
inc
cmc
cmp
xchg
mov
lcall
clc
pop
bound
popa
mov
fldl2t
push
pop
gs
insl
and
enter
pop
loopne
add
sub
pop
sub
xor
jo
mov
rcll
jbe
cltd
in
dec
or
shl
mov
jbe
testb
push
or
les
cs
fsubr
jo
rcll
cld
inc
jmp
jp
mov
sar
iret
dec
stc
mov
push
or
std
pop
sub
data16
or
js
xchg
call
sub
les
dec
movl
call
cmpl
add
call
pop
adc
rcll
cmc
sbb
push
inc
cld
in
pop
aas
mov
inc
xchg
pop
jno
cli
adc
sub
lret
xlat
lods
out
xlat
mov
insl
imul
daa
fninit
ds
andl
mov
mov
cld
inc
mov
mov
int3
out
fiaddl
outsl
mov
add
sarb
shll
out
adc
lods
stos
jge
cld
andl
dec
test
or
mov
cmp
loop
cmpsl
test
subb
lret
dec
mov
loope
out
daa
sub
xor
pop
adc
stos
pushf
vpshlw
icebp
mov
scas
and
ret
cltd
xchg
pop
xchg
xchg
push
dec
mov
dec
in
dec
sub
test
ret
negb
jb
decl
dec
push
mov
mov
jge
ds
push
mov
adc
mov
in
in
sysret
push
loope
mov
and
mov
mov
push
push
pop
push
xor
push
gs
aam
outsb
lock
inc
inc
jnp
sub
sti
pushf
sub
popf
xchg
push
sbb
mov
stc
sub
bnd
mov
xor
or
xlat
mov
nop
movsb
mov
xor
push
pop
mov
loop
push
push
in
testl
frstor
jne
mov
push
bound
push
fldt
jo
clc
xchg
pop
push
hlt
sbb
fcmovnu
mov
add
mov
pop
jle
sbb
ror
jbe
andb
shll
inc
jmp
sbb
push
enter
arpl
jmp
out
sub
lahf
clc
imul
inc
cli
and
xor
push
or
aam
fistpll
mov
pop
into
cmp
jbe
pop
pusha
shll
mov
repnz
sub
arpl
dec
mov
pushf
lock
cltd
inc
daa
lcall
aas
pop
jmp
dec
lahf
inc
aas
xchg
mov
in
mov
and
popa
dec
fisttpll
jne
cmp
gs
inc
pop
sub
inc
mov
enter
xlat
xlat
or
xchg
push
pop
inc
mov
mov
sbb
lret
lea
mov
out
in
je
dec
mov
push
or
push
jp
xchg
mov
enter
das
push
sbb
inc
movsb
mov
mov
jno
aad
sbb
inc
ljmp
mov
mov
stos
push
dec
shlb
mov
pushf
jb
push
sub
xlat
insb
fnstsw
je
push
jbe
xor
repz
pop
sbb
pop
xor
inc
cmp
mov
mov
daa
mov
ficompl
xchg
push
mov
ljmp
jbe
stos
andb
dec
aad
mov
adc
pushf
mov
jne
sbb
jo
and
arpl
mov
push
pop
jns
enter
rclb
lock
sbb
or
inc
aas
adc
std
daa
mov
int3
or
sbbl
mov
les
loopne
daa
lods
sbb
imul
sub
in
xchg
pop
movsb
and
hlt
push
xor
add
nop
add
xor
call
popa
mov
fsubrs
std
xchg
cwtl
outsb
jae
mov
xchg
jl
aad
test
rolb
stc
mov
test
cmpl
scas
popa
adc
mov
xchg
or
mov
lret
cmp
xchg
lret
stos
test
ss
lret
fildll
push
mov
clc
pop
popf
popf
fwait
xchg
pop
dec
cmp
or
sahf
in
mov
int3
xchg
inc
shll
rol
inc
jbe
dec
sub
rcrb
cmp
adc
addr16
cmp
aad
and
or
mov
into
mov
jle
test
shll
sbb
jecxz
movb
jge
jne
mov
add
mov
jmp
mov
and
cmpsb
jmp
mov
cwtl
inc
imul
mull
roll
movsl
jl
shl
outsb
mov
pop
aaa
lods
sahf
and
pop
popf
mov
fldl
popf
ret
decb
scas
sub
dec
out
add
pop
test
test
bound
cmp
add
push
aam
cmp
cmp
sub
jb
outsl
rclb
cwtl
lret
mov
cld
mov
fs
dec
sbb
mov
test
ss
stos
sub
inc
icebp
adc
insb
mov
sbbb
mov
cmpsl
add
pop
lret
sub
ficoml
movsb
cmp
adc
pop
mov
jmp
bound
bound
mov
sahf
push
popl
sbb
mov
lret
add
inc
mov
aaa
adc
into
aam
inc
fdivl
test
mov
frstor
repz
sbb
sarb
xchg
xchg
in
cmp
cmc
repnz
pushf
pop
ret
jp
jl
loope
sbb
jb
and
repnz
mov
push
pop
hlt
movl
mov
push
add
loop
popa
fcmovnu
fldpi
test
int
pop
mov
das
jmp
lods
push
xchg
dec
pop
rclb
mov
jb
mov
loope
adc
and
inc
mov
popa
aad
push
jnp
and
or
inc
mov
mov
sbb
adcb
in
and
pop
xor
jge
out
dec
lret
cmc
mov
mov
cmc
test
push
ss
pushf
mov
cs
adc
add
jno
sahf
test
jge
xor
imull
or
rclb
jnp
std
sub
push
sbb
add
or
fisubs
cmpsb
jle
xor
sub
mov
sbb
mov
std
loope
sarl
mov
xor
stos
cmp
cmc
into
push
pop
inc
jno
pop
and
and
cmpsb
jle
mov
xchg
sub
out
xor
mov
xchg
pop
jo
adc
orl
subb
xchg
das
dec
stos
inc
cmc
fcomi
xor
into
fisubl
addr16
adc
sub
inc
es
fadd
mov
and
out
and
sarb
add
mov
fldenv
fmuls
push
pop
or
mov
ret
enter
adc
cmp
inc
mov
xlat
out
loope
aaa
xchg
imul
mov
addr16
jle
pop
push
add
mov
sub
jl
cs
add
les
xchg
stos
push
addr16
pusha
mov
xor
jo
cmc
mov
add
aad
sbb
cli
lock
mov
cmp
out
addl
ret
pusha
mov
in
int3
sub
ss
out
jb
xor
stc
lret
stos
dec
les
jne
test
imull
pop
sub
jo
aad
dec
into
inc
movswl
fstps
push
in
iret
pop
cld
out
repz
out
ljmp
mov
cwtl
adc
shll
sub
inc
or
and
mov
mov
and
add
mov
das
sub
leave
mov
fwait
pop
push
scas
push
stos
jmp
popa
fistpll
push
lock
fdivrs
mov
mov
xchg
cmp
add
pusha
das
cltd
pop
xchg
fucomp
movsl
iret
nop
sbb
cmp
xor
mov
sbb
dec
mov
or
mov
decl
shr
mov
popf
dec
pop
shlb
jge
dec
mov
xchg
ja
pop
sbb
sub
sub
add
xor
enter
sub
scas
mov
inc
push
test
sahf
sub
in
gs
mov
fsubl
sub
jno
cld
divl
lcall
aaa
sub
inc
inc
les
mulb
outsl
xor
test
adc
push
les
pop
add
scas
dec
mov
push
cmp
ret
lret
fildll
cs
mov
jp
out
xor
call
fisttpl
sub
aaa
sub
orl
and
lcall
pop
dec
test
jb
out
inc
pop
jmp
jg
out
pop
adc
inc
shrl
xchg
mov
add
jle
ds
scas
push
xor
push
jecxz
xchg
lret
and
test
mov
ds
cmp
insl
or
fsubrs
sti
mov
mov
mov
mov
jp
ret
mov
insb
repnz
repnz
sub
repnz
rcrl
push
ljmp
fwait
push
mov
std
jge
sbbl
aas
push
cld
popf
pop
nop
cmpsb
push
test
push
xor
add
dec
inc
sarb
mov
insb
pop
cmp
data16
or
add
mov
lds
adc
insb
xchg
fucomi
xchg
imul
aam
insl
icebp
mov
insl
and
cmp
imul
scas
stc
push
add
inc
shr
loop
data16
lahf
xchg
loopne
scas
in
fdiv
jbe
sbb
xor
mov
xchg
mov
sbb
rol
adc
jb
jg
insl
pop
sbb
lahf
ljmp
cli
aaa
inc
and
dec
leave
xchg
cmp
add
fldlg2
mov
push
das
test
insl
jg
cli
out
mov
sahf
cmp
and
pushf
inc
rolb
clc
cli
xchg
jge
adc
sub
test
in
push
lret
sub
out
sbb
add
out
mov
std
fistpll
data16
stc
add
mov
aaa
jo
and
rorl
xor
adc
mov
mov
mov
mov
inc
outsb
mov
sbbl
loopne
sub
jp
fadds
stc
pushl
int3
aad
fbstp
mov
aaa
add
movsb
xor
movsl
inc
inc
insb
in
mov
out
push
loop
cmp
rcrl
add
inc
outsb
xchg
iret
fmull
or
icebp
xchg
mov
orb
fsubs
xor
mov
out
filds
or
roll
xor
xor
packsswb
push
rsqrtps
clc
jmp
fldcw
aam
sbb
push
mov
mov
movb
fstpt
aad
cltd
pop
paddsw
fcoms
and
mov
jp
lock
rol
shl
rorl
stos
push
inc
cmp
or
push
cmpsl
enter
jb
cmp
jns
and
ja
imul
out
mov
pop
cld
test
mov
imul
mov
lock
and
loopne
movl
sahf
pop
pop
daa
cmc
lea
arpl
bound
insl
mov
adc
cmp
int
adc
outsl
pusha
dec
push
test
sub
repz
sbb
dec
in
xchg
push
cmc
xor
fcompl
push
jbe
gs
mov
movsl
stos
xchg
jnp
or
mov
arpl
scas
or
xchg
sbb
push
add
push
adc
orb
negb
mov
sub
outsb
ret
push
cmp
xor
fidivs
cmp
jbe
lods
movsb
rolb
dec
jne
sub
mov
fdiv
inc
cltd
aas
test
iret
inc
lea
jle
mov
mov
jle
or
lea
scas
lods
jmp
inc
stos
xor
inc
mov
ret
inc
push
int3
fadd
fidivrl
add
dec
cld
xchg
adc
test
lods
std
in
xchg
rcl
pop
xor
stc
hlt
mov
pop
adc
int
cltd
sahf
pushf
sub
xchg
leave
jl
xor
xor
push
add
sub
sbb
orl
jns
mov
ljmp
mov
fsubs
xchg
pushf
xchg
jbe
pop
mov
fldl
push
push
push
inc
sub
je
push
inc
into
cmp
sub
mov
ret
ljmp
adc
loope
rclb
sbb
jecxz
fdivrs
lret
push
pop
inc
lcall
loop
ror
push
jl
jle
cmpsb
dec
add
pop
mov
adc
or
bound
push
push
push
subb
in
es
lock
add
in
iret
mov
repnz
mov
arpl
push
cmp
pop
mov
pop
mov
nop
nop
add
in
cmp
inc
sar
rcll
data16
cmp
lea
lret
sub
lcall
xchg
mov
add
cmp
addb
enter
push
xchg
xorb
pop
mov
mov
rcrl
jo
ret
fisttpl
push
jmp
bound
lods
sbb
popf
iret
movsl
loopne
shlb
add
jmp
adc
jl
adc
test
sub
outsl
lret
shl
sahf
push
or
jne
fcoml
xchg
movhps
fwait
adc
outsb
jmp
pop
xchg
add
test
pop
hlt
pop
fs
xor
test
test
pop
push
mov
sub
xor
faddl
push
scas
lret
pop
mov
inc
pusha
mov
pop
inc
adc
fistps
push
in
enter
test
jg
jb
cli
fs
inc
fisttpll
cmp
movsl
ljmp
pop
inc
mov
adc
enter
push
ficomps
movsl
mov
sbb
scas
in
push
mov
out
loope
clc
cld
aam
add
push
or
repz
in
out
imul
xchg
std
xchg
aam
and
mov
dec
sub
int
mov
adcl
dec
aad
mov
frstor
adc
or
dec
cltd
adc
xchg
and
mov
hlt
rep
jl
leave
fsub
mov
mov
or
inc
mov
sub
cs
xchg
lods
pop
mov
dec
rol
sbb
loopne
lret
stc
push
jb
sub
dec
testl
jle
add
repz
jmp
pusha
ds
movsl
cs
fs
mov
mov
mov
imul
loope
mov
ljmp
jae
jg
mov
insb
and
xor
addb
in
fnstsw
jbe
mov
popf
and
jnp
pop
subl
mov
xchg
mov
addr16
xchg
out
adc
pop
jns
lcall
cmc
and
mov
xor
dec
mov
push
into
loop
cmp
js
clc
pusha
sub
fwait
nop
ja
sub
adcb
fcmovnb
loopne
shl
mov
sbb
pop
rcll
sbb
aas
push
mov
cmp
jp
inc
icebp
scas
add
push
mov
shlb
sbb
inc
outsl
pop
push
gs
jns
fisubs
in
repnz
sub
iret
lods
les
sbb
xor
and
inc
inc
and
dec
ret
add
sahf
push
pop
rcr
pop
sub
pop
dec
cmp
cmp
pop
faddp
add
jmp
jmp
mov
and
orb
shrb
jge
loop
sahf
repnz
out
mov
or
dec
imul
xchg
jge
add
and
xor
movsb
pop
sub
pop
cmp
or
std
lods
into
dec
in
mov
pop
lret
xchg
lock
dec
popa
jle
call
js
cmp
sbb
jle
and
insw
mov
xchg
xor
fadds
lahf
jecxz
sub
in
push
jp
dec
mov
push
add
lods
mov
inc
in
push
icebp
arpl
loop
adc
fstpl
bound
pop
dec
stos
sbb
fcmovu
repnz
push
cmp
aaa
or
fs
inc
xchg
lods
shlb
jg
adc
addr16
fidivs
or
aam
cmp
push
mov
aam
repz
lret
mov
add
adc
xor
lcall
or
pop
mov
cmp
fdivrs
scas
jbe
push
pop
mov
mov
nop
xchg
push
or
and
in
dec
mov
int3
hlt
filds
enter
dec
dec
or
jmp
setb
mov
mov
dec
nop
mov
lret
push
insb
pop
mov
hlt
adc
add
mov
movl
shlb
jns
cmpsb
sbb
adc
pushf
les
into
xlat
leave
inc
in
aad
adc
popf
push
mov
inc
pop
loopne
inc
push
sbb
outsb
xorl
fs
jnp
popf
jle
aad
xlat
sbb
scas
adc
movq
lret
js
dec
sub
push
jnp
fnstenv
xchg
cmp
jmp
mov
mov
xor
xor
jne
iret
and
js
shll
cs
test
hlt
cmpb
repnz
sub
loope
das
jno
pop
leave
and
fstpt
jne
push
mov
adc
jl
cmp
sbb
clc
sbb
es
fwait
jl
push
sub
lods
jno
sub
out
out
adc
jns
xor
push
std
sahf
sbb
scas
mov
rcll
imul
shl
cs
in
fstl
loopne
sub
aam
cs
mov
jecxz
xchg
cli
push
mov
mulb
pop
jne
pop
out
pop
sbb
mov
adc
add
mov
jle
ret
lods
push
sbbb
in
int3
xor
push
mov
daa
js
shlb
scas
test
fsub
ds
dec
cwtl
shl
out
loope
mov
jmp
lret
faddl
sub
and
cwtl
jb
jmp
dec
xchg
dec
xchg
add
sub
jle
jle
xor
arpl
sub
js
ret
out
xchg
push
adc
adc
jne
in
or
int3
lods
mov
out
cmp
clc
cli
xor
mov
add
lret
and
test
add
pop
and
mov
mov
adc
cmpsl
movsl
ret
rcr
jecxz
mov
pusha
cmpsl
leave
lcall
sbb
aas
inc
push
cmp
cmp
loop
test
mov
fistpl
test
push
jae
ljmp
js
fldcw
inc
mov
decl
cltd
xor
sbb
shl
fsubrs
mov
movsb
rcll
and
jl
or
mov
sahf
data16
jecxz
daa
and
pop
data16
leave
xchg
test
std
pop
fdivs
xor
imulb
rcrl
xor
dec
mov
hlt
and
jno
and
add
xor
jle
fs
cwtl
gs
cmc
shl
mov
movsb
lret
jp
mov
jg
sbb
or
test
push
sub
insb
out
adc
jnp
jge
lods
jp
sub
ljmp
mov
shl
cmpsl
sti
rorb
ds
dec
es
out
cmp
arpl
mov
push
pusha
dec
push
pop
cmc
lcall
cmp
es
dec
pop
xchg
out
rcll
addb
lock
test
aad
aam
sbbl
test
push
inc
cwtl
and
into
xchg
sub
push
sbb
pop
pop
ss
xchg
int3
sub
mov
lret
and
dec
adc
push
lock
icebp
or
cmp
mov
aam
sbb
dec
jbe
xchg
sbb
fnstenv
loopne
or
enter
es
fldcw
repz
les
shll
fidivrl
adc
add
add
test
call
jecxz
or
mov
push
cmpsb
add
movsb
shrb
cld
fs
into
jb
out
mov
cmp
cmc
adc
xchg
mov
insl
ret
inc
shlb
push
sete
and
mov
hlt
int
lods
push
push
ss
and
push
mov
push
xor
cmpsl
add
xchg
and
mov
inc
test
rorb
je
test
frstor
insl
mov
aas
dec
push
stos
or
ljmp
add
pop
and
nop
lods
cli
imul
lret
jmp
dec
xlat
movsl
mov
xor
push
fisubl
arpl
jl
or
sub
mov
dec
push
ss
or
mov
xlat
sbb
and
mov
dec
jg
out
inc
mov
mov
pop
cmp
xchg
das
add
shrb
jp
popf
adc
jmp
adc
xor
xchg
imul
or
sbbb
leave
sarb
cmp
jnp
stc
decb
xchg
imul
add
jmp
add
test
cs
sub
aam
pop
add
pop
inc
mov
sbb
out
rcl
and
fwait
lahf
xchg
out
cmpsl
xchg
inc
mov
push
mov
push
cwtl
and
imull
inc
fs
xchg
sarb
jl
mov
jnp
pop
push
imul
jg
stos
stos
loopne
fcomip
adc
xor
ljmp
cmpsl
fdivl
mov
add
popa
filds
aas
inc
sahf
jns
xchg
out
dec
mov
aaa
jae
sahf
adc
xor
inc
insl
dec
idivb
or
mov
or
imul
shlb
add
mov
jnp
popf
into
push
adc
inc
xorl
sbb
cmp
pop
mov
xchg
test
add
ljmp
ss
push
outsb
test
popf
mov
and
adc
es
test
sub
xchg
aaa
push
cld
pop
sbb
jl
lods
sub
enter
stos
and
push
push
xchg
mov
inc
inc
sub
jmp
mov
and
cltd
jnp
xchg
push
std
sar
fs
or
mov
les
in
daa
or
pop
sahf
out
iret
inc
xor
xchg
sbb
dec
mov
push
lock
loop
xchg
mov
divl
call
cmp
inc
xchg
push
add
mov
lds
scas
push
mov
pxor
xchg
add
xor
sbb
pop
test
orb
add
xchg
mov
pop
and
insb
imull
or
xor
test
push
xchg
out
lea
scas
mov
lahf
dec
pop
fidivrl
mov
mov
pop
or
fnsetpm(287
add
lock
lock
cwtl
out
add
cmp
or
jmp
sub
ja
imul
add
jmp
repz
rcr
andb
loopne
fstl
scas
lret
jb
add
clc
push
add
ljmp
in
fwait
ljmp
adc
popa
outsb
dec
lret
rcrb
jb
in
out
and
pop
out
xchg
sbb
stc
js
pop
push
ljmp
lock
test
addr16
imul
or
cmpsl
movsl
ja
mov
adc
shl
mov
xchg
sti
icebp
jge
loopnew
push
ficoms
lods
pop
fdivs
cmpsl
push
mov
cmp
stos
pushf
add
mov
jne
push
ds
jmp
lods
lret
dec
cmp
sbb
mov
fimuls
xor
push
lcall
jmp
outsl
mov
js
je
cmpsb
xchg
lahf
mov
pop
inc
mov
stos
stc
int
outsb
add
mov
test
movsl
imul
adc
mov
fistps
adc
pop
pop
test
lods
out
iret
iret
lods
pop
add
lods
cmp
int
subb
jmp
jmp
rorb
or
gs
lea
fadd
pop
sub
add
je
stos
jecxz
bound
dec
mov
cmp
fbld
das
push
mov
sub
scas
inc
das
inc
pop
push
lds
sbb
xchg
and
cmp
cmp
mov
shrl
hlt
std
je
js
push
xchg
adc
mov
push
or
inc
jne
add
dec
out
dec
xchg
add
mov
decb
mov
in
push
mov
jne
mov
stos
je
popf
test
inc
insb
push
xor
daa
ja
test
mov
ds
out
inc
xchg
leave
shlb
push
movsb
gs
out
aaa
and
jne
pop
and
in
nop
arpl
leave
mov
sub
fnstcw
in
into
lahf
fstpl
push
pop
xor
inc
jnp
add
jb
pop
pusha
pushf
cwtl
jl
sbb
sub
cmp
insb
pushf
add
and
mov
xchg
cmp
push
mov
enter
in
icebp
and
push
call
nop
sub
mov
clc
outsl
fcomip
sti
sub
or
sbb
insl
xchg
cmpsb
in
xor
or
scas
add
roll
add
adc
lods
mov
mov
jb
stos
sub
xchg
icebp
mov
lods
mov
orb
dec
imul
mov
cld
fbstp
test
cmp
push
arpl
shll
cwtl
ficompl
js
cmpsl
xchg
mov
cmp
stos
push
lret
pop
mov
fstpl
repz
sbb
or
divps
add
cmc
pop
repz
stc
test
push
mov
sbb
jmp
and
ret
jg
mov
xor
div
out
iret
negb
and
pushf
stos
insl
adc
je
push
dec
pop
add
mov
pushf
sbb
pop
adc
inc
mov
sub
pop
adc
ds
cmpsl
push
stos
addr16
rorb
adc
clc
sub
das
or
fadd
retw
fs
xor
push
xchg
pop
push
mov
mov
push
cmp
sbb
mov
js
mov
imul
cmpsb
dec
xor
add
pusha
cmp
xor
sbb
mov
fbld
jmp
sbb
iret
xchg
sub
pop
push
sub
lahf
aaa
push
jb
loope
cli
test
lcall
add
pop
dec
mov
inc
mov
and
add
jne
mov
xor
push
popf
loope
dec
scas
mov
pop
fucomi
sub
iret
cmp
push
fisttpll
adc
push
push
popf
pop
inc
cmp
dec
movsb
dec
jb
xchg
mov
insl
mov
jmp
insb
shrl
adc
out
mov
enter
push
dec
cmp
or
xchg
adc
fcmovbe
call
repz
mov
pusha
rcrl
lret
sti
dec
mov
sub
cs
outsb
xor
pop
cli
mov
sbb
pop
fdiv
roll
outsb
xor
pusha
sbb
inc
aam
push
or
enter
xchg
jnp
insb
sahf
js
mov
dec
in
add
int3
pop
testl
mov
jecxz
stos
popa
mov
scas
push
push
subl
cwtl
das
sub
xor
out
outsb
mov
mov
incl
fistps
inc
mov
add
push
xor
call
pop
jne
pusha
je
push
js
lods
shlb
imul
loope
outsb
fidivs
sti
loopne
aam
xchg
mov
hlt
shrl
jp
popa
xchg
cli
adc
push
scas
sbb
cmp
add
les
es
sub
jp
mov
ret
test
imul
ljmp
push
enter
jge
dec
cmp
cwtl
mov
fdivl
iret
pop
inc
fwait
xchg
xchg
loop
hlt
clc
add
push
cmpl
aaa
add
push
lret
dec
jbe
std
subb
cld
lcall
nop
pushl
mov
scas
mov
xlat
sbb
inc
mov
loope
insb
cs
or
loop
mov
or
cmpl
mov
jg
mov
lods
std
sbb
mov
and
xchg
or
xor
jb
test
shl
in
test
fstpt
ret
dec
loopne
and
jp
cmc
mov
les
lods
pop
or
rol
dec
sbb
jb
xchg
jne
mov
pop
ja
fs
cmp
hlt
sub
in
cmpsl
ret
mov
jo
sbb
lahf
lds
shl
out
push
xchg
in
fsub
inc
icebp
into
cmc
or
mov
mov
iret
dec
mov
lcall
pop
fisttpll
aad
out
lods
and
pop
mov
dec
pop
iret
les
in
inc
pop
push
sub
jne
scas
xchg
and
scas
pop
inc
dec
imul
pop
push
push
dec
adcl
cmp
cs
stc
add
dec
dec
fs
nop
inc
aad
idiv
adc
imul
fstps
lret
cmp
push
cli
and
jp
dec
int3
or
xchg
stc
sbb
xchg
xchg
mov
inc
and
das
jle
sbb
imul
test
dec
sub
cltd
xor
jl
sbb
dec
pop
push
or
dec
popa
loopne
loope
inc
rolb
jl
int3
pop
mov
flds
iret
push
pop
arpl
in
mov
cli
adc
daa
mov
scas
xor
iret
es
adc
call
lret
or
pusha
mov
mov
nop
sub
adc
movsl
idivl
xor
loop
dec
mov
sarl
and
mov
ficoml
inc
icebp
mov
in
xor
test
xchg
or
inc
or
inc
aas
daa
sub
je
cmp
sbb
push
sbb
loopne
not
aaa
stos
push
pop
orb
mov
adc
outsl
rclb
movsb
pop
dec
lods
aaa
push
ret
stos
lahf
dec
or
mov
ljmp
popf
daa
pop
push
xor
jo
cmpsl
pop
mov
gs
test
add
mov
jecxz
sbb
test
pop
push
dec
dec
fadds
add
shll
sbb
sub
inc
push
lret
lea
test
loopne
fnstcw
or
mov
fcmovnu
repnz
and
cli
mov
incl
inc
mov
loope
sbb
jnp
push
mov
addr16
mov
ljmp
cld
insw
out
leave
push
inc
test
mov
enter
dec
data16
clc
rclb
out
int3
inc
cmp
pop
aaa
xchg
divb
mov
jb
cld
push
js
adc
cld
push
and
pop
jle
pop
cltd
inc
pop
js
sbb
cwtl
xor
pop
jmp
fisubrl
jnp
aas
das
sub
icebp
xchg
daa
cmpsl
cli
and
sahf
out
loopne
lret
xchg
mov
mov
dec
enter
push
in
call
fwait
cmp
mov
mov
pop
adc
pop
sub
adc
sub
adc
mov
xor
int
insb
fcompl
xchg
ficomps
cmp
shrb
or
fs
inc
mov
push
pushf
dec
push
gs
mov
inc
jae
xchg
push
adc
stos
shlb
xchg
cmpb
or
add
mov
lock
push
insb
or
pushf
aam
xchg
inc
cmp
ljmp
sbb
xor
mov
mov
mov
pop
out
xchg
lahf
push
cmp
insl
mov
inc
mov
sbb
jge
push
das
mov
test
cltd
inc
inc
pop
mov
pop
ja
fcmovb
push
pop
cmp
adc
stc
sub
cmpsb
inc
sub
xor
flds
xchg
xchg
lcall
add
adc
sbb
dec
jne
mov
add
cmp
mov
stc
in
adc
inc
loope
fdivs
jnp
xchg
rcl
fisubrs
pop
arpl
int
mov
lods
mov
fidivrl
cmp
loopne
sub
mov
xor
int3
hlt
pop
and
fildll
pop
lahf
fisttpll
push
cld
lret
xchg
or
fdivr
divl
loop
pop
mov
jb
dec
mov
push
fwait
dec
outsb
loop
mov
jl
push
xor
loop
data16
stos
add
lahf
mov
mov
andl
mov
add
dec
inc
jle
outsb
fs
cwtl
sbb
andb
ret
add
scas
adc
add
aaa
test
inc
sub
dec
lcall
imul
adc
cld
jae
push
pop
aad
in
test
inc
sub
nop
jnp
mov
outsb
aas
repnz
lret
add
jbe
clc
out
push
dec
imul
loopne
push
mov
jbe
xor
mov
adc
jp
lcall
enter
push
inc
push
shl
sbb
pop
cmc
mov
and
test
leave
jp
fistl
jmp
sbb
imul
mov
sti
frstor
bnd
push
std
int
mov
adc
rorb
dec
pop
in
inc
in
xchg
xor
sbb
push
bound
add
test
adc
test
or
adc
or
arpl
cmp
jb
xchg
and
aaa
idiv
fidivs
movsb
in
add
mov
inc
sub
ljmp
jge
xchg
push
adc
cltd
mov
repz
mov
or
fs
inc
test
lods
push
rol
out
lea
mov
push
das
rcrb
push
or
mov
dec
mov
loop
pop
divb
aaa
movlps
add
cli
mov
jns
jle
es
inc
sbb
push
jnp
sub
lock
fmull
dec
push
xchg
aam
mov
popf
popa
xchg
addr16
jle
cwtl
cmp
call
sbb
and
dec
jnp
xlat
hlt
pop
cwtl
mov
leave
cmp
mov
loopne
in
sti
cs
clc
int3
jecxz
jns
ljmp
jns
cmp
int
and
sarl
adc
loope
dec
jge
push
fisubl
test
push
stos
inc
cli
lods
or
imul
inc
imul
cmpsl
and
repz
inc
insb
and
pop
and
push
in
repz
jmp
sub
mull
push
xlat
pop
or
fcompl
jo
push
push
fmuls
out
popf
cmc
and
enter
bound
dec
pop
int
bound
fdivs
mov
jl
out
xor
pop
js
jp
clc
fisttpl
mov
pop
pop
jl
sub
fldl
iret
adcl
push
adc
jmp
jle
stos
add
cmp
xor
jg
sbb
jns
insl
lret
jne
push
jmp
dec
and
pop
jmp
push
xchg
mov
in
cli
mov
in
fneni(8087
vhaddpd
imul
or
in
lahf
adc
int3
cwtl
ds
inc
mov
push
cltd
cltd
and
roll
sbb
xchg
dec
leave
push
inc
sub
push
mov
adc
inc
jp
out
cmp
pop
enter
jecxz
aam
arpl
sbb
frstor
xchg
es
mov
jp
mov
jbe
in
jno
mov
or
insb
jle
mov
jne
push
scas
lahf
shll
jmp
push
call
and
ss
mov
es
bound
insb
cmp
cltd
mov
sahf
repz
sahf
or
mov
orl
test
sbb
cmpsl
jnp
sub
jp
lahf
jp
aam
sub
dec
ret
pop
jno
out
xchg
loopne
lods
lods
inc
xchg
sub
scas
pop
icebp
pop
or
pop
mov
ljmp
ficoms
les
mov
inc
inc
movsl
ffree
jnp
mov
jl
mov
mov
cwtl
das
mov
stc
nop
fisttpl
andb
cmpsl
sbb
dec
jecxz
push
add
xchg
call
xchg
mov
mov
fisttpll
or
pop
cs
jmp
inc
std
out
stos
fcmove
jbe
movd
sub
mov
leave
js
adc
push
jns
bound
lret
mov
push
inc
sbb
gs
ljmp
inc
pop
lea
cmp
sahf
insb
xchg
rorl
pop
mov
mov
leave
testb
jg
subb
and
sbb
sbb
inc
testl
cmp
call
fcoms
mov
cwtl
xchg
data16
xlat
sbb
mov
lods
add
jg
int3
and
mov
xchg
insb
fsub
push
ret
outsl
outsl
mov
in
stc
imulb
or
mov
test
or
push
jns
mov
cwtl
out
loop
lahf
pop
jno
pusha
rcl
mov
mov
xchg
in
inc
rcl
jno,pn
in
lods
rolb
popa
mov
inc
sbb
in
sub
jge
dec
out
cli
jl
push
sti
sbb
push
jne
fcomps
sub
adc
test
mov
lahf
test
lret
push
push
loop
in
adc
inc
and
xchg
mov
dec
mov
add
clc
inc
scas
jno
xchg
and
push
cmp
push
mov
std
fdivs
push
xchg
into
int3
dec
jg
movl
pop
sub
stc
jne
test
xchg
push
aam
out
lahf
test
test
shlb
xchg
cmpsl
sbb
pusha
dec
out
push
out
lcall
jae
outsb
adc
push
add
mov
pushf
mov
es
adc
push
aaa
jg
loope
bound
or
dec
add
mov
outsb
dec
push
add
out
inc
inc
in
fsubl
jno
test
mov
in
mov
icebp
mov
dec
jg
pop
and
loope
dec
jns
add
cmp
mov
pop
jle
adc
loopne
loop
test
xor
dec
testl
addr16
adc
imul
jnp
test
ret
xchg
cwtl
call
and
push
cmp
cmpsl
pop
aaa
xchg
bound
bound
xor
xor
repz
mov
push
cmc
xchg
lods
clc
lods
pop
repz
mov
bound
pop
lcall
mov
lock
repnz
out
fsubrl
mov
popf
loope
xchg
rclb
jp
pop
dec
inc
push
mov
adcb
jp
push
daa
mov
pop
mov
rolb
ret
ljmp
jae
lock
daa
lea
push
repnz
rorl
and
and
scas
adc
mov
mov
es
rcr
std
mov
int
outsb
imul
cmpsl
mov
cltd
icebp
cmc
mov
dec
roll
jg
fisubl
pushf
push
scas
pop
or
xchg
stos
adc
lret
or
lock
lret
jnp
xor
sub
push
cmc
mov
cmp
sbb
enter
mov
imul
sbb
mov
mov
insl
in
jae
jb
data16
lock
and
dec
jne
or
mov
mov
and
xor
mov
dec
cli
xchg
pop
mov
sub
lock
std
fsubp
ljmp
inc
aaa
aad
outsl
inc
in
xor
sub
dec
stos
adc
push
lret
stos
loop
data16
inc
mov
push
jne
pop
mov
cmp
stos
aad
jle
jae
pushf
and
adc
hlt
pop
xchg
arpl
mov
fs
xor
iret
pop
lahf
jb
call
sub
xchg
xor
cmp
add
mov
lret
xor
imul
add
hlt
imul
xchg
xchg
aad
jne
mov
add
mov
pop
aaa
cmpsl
push
hlt
and
mov
xor
sub
aad
cli
or
in
pop
jge
dec
pop
jmp
cs
xlat
push
movsl
movsl
mov
jnp
loop
dec
xchg
test
jmp
mov
add
lods
mov
sarb
fdivl
xchg
and
outsb
or
or
xchg
popa
xchg
push
popf
xor
std
stos
aam
bound
loop
jl
in
leave
scas
popaw
xor
gs
jno
push
xor
aas
sahf
xchg
mov
push
popf
jg
fsubrp
in
sbb
enter
ds
scas
or
pop
jmp
ljmp
nop
cmpsb
lret
xchg
jge
push
testb
daa
aaa
and
inc
into
ss
cwtl
jne
xor
mov
lods
insb
sbb
lock
loop
aad
ret
mulb
es
popa
adc
inc
testl
and
or
arpl
jb
push
push
lahf
dec
cli
xchg
dec
cmc
mov
and
and
adc
push
sub
pusha
in
adc
and
jmp
dec
pusha
push
add
inc
in
jl
inc
std
stos
jne
mov
pop
pop
inc
dec
pop
sub
ja
xlat
sbb
pushl
fimull
xchg
les
inc
negl
icebp
xchg
mov
mov
notl
mov
iret
sub
ret
dec
xor
cmp
pusha
testl
lahf
movsl
inc
cmp
jne
mov
fs
bnd
pushf
adc
out
call
in
add
stos
xchg
xchg
sbb
mov
jecxz
fsubrs
test
rcrb
push
clc
stos
push
lret
mov
js
test
mov
mov
sub
mov
push
mov
sbb
shll
mov
jle
push
or
mov
lods
push
pop
fwait
daa
jnp
jmp
pop
push
dec
aas
jecxz
les
or
mov
lods
xchg
mov
push
cmpsb
jb
cltd
sbb
cld
popf
pmulhw
xor
hlt
cwtl
or
das
push
lods
mov
pusha
xchg
jnp
outsl
sub
test
xor
jmp
mov
adc
fwait
loope
sahf
shl
fs
add
sarl
xor
shlb
aam
mov
mov
lock
xchg
push
fisubrl
xor
pcmpgtb
add
and
js
add
adc
mov
mov
repz
in
fcmovu
or
fwait
inc
push
jge
inc
stos
stos
mov
aas
or
or
cmp
xor
iret
or
adc
adc
jl
repz
jno
mov
dec
int3
jge
leave
add
lahf
xor
and
dec
fisttpll
xor
cltd
cltd
inc
or
dec
jae
cmp
repnz
jle
nopl
cwtl
pusha
sbb
clc
sbb
cmp
insb
lds
ret
add
fwait
pop
push
push
repnz
fdivrp
dec
sarl
lock
mov
mov
cmp
push
nop
mov
add
lock
xchg
pop
mov
dec
pop
cld
dec
stos
mov
jle
lods
rcl
ret
inc
or
popa
sbb
lods
sub
jge
push
xchg
xchg
pop
xor
xchg
sbb
pushl
sbb
mov
mov
cmp
out
lret
lret
lahf
out
push
mov
dec
popa
cmpsb
popa
jl
ret
into
popa
push
shlb
dec
and
imul
xchg
adc
lahf
fs
pop
or
sti
xor
adc
dec
cmc
pop
outsb
outsb
jp
cmp
jle
mov
pusha
mov
int3
cmp
xor
repz
cmp
pop
push
lret
jbe
fistl
lret
or
mov
mov
nop
pop
mov
rclb
xchg
imul
push
dec
dec
jbe
roll
or
repz
dec
inc
push
fidivrl
adc
les
scas
or
fstp
jae
shr
add
sti
fisubrs
cmp
dec
xchg
pop
xor
cmp
lds
add
jno
sub
xchg
lock
out
inc
shll
mov
test
push
jmp
jl
cmp
fcompl
cmpsb
pusha
mov
or
jne
dec
es
xor
cmp
jno
adc
dec
add
dec
inc
jge
and
insl
inc
movsl
sbb
dec
mov
mov
add
mov
push
lahf
cmpsb
inc
stos
in
mov
pop
imul
hlt
inc
cmp
xchg
cmp
hlt
pop
jbe
sbb
cmpb
or
jp
adc
and
xor
mov
sub
je
popa
outsb
push
xchg
sub
aaa
jge
clc
sub
lret
loop
push
push
iret
inc
pushf
outsl
jno
pop
jge
lret
and
pop
fsubrl
adc
jbe
lret
mov
xor
je
fbstp
rorb
jbe
or
xchg
sbb
and
mov
jnp
movsl
add
xchg
sub
pop
fldenv
addr16
add
push
popf
fs
inc
and
int
nop
mov
ficompl
push
fstpl
bound
dec
xlat
aad
addl
test
fwait
inc
cld
adc
movsb
flds
sub
jmp
ss
out
adc
or
xorl
dec
xchg
pop
jbe
or
pop
pushf
lea
and
mov
loope
movsl
movsb
jp
pop
xchg
jecxz
cmp
fimuls
mov
and
xor
inc
sbbl
and
push
push
add
fildl
mov
xchg
outsb
in
mov
add
test
popf
cs
xchg
dec
ljmp
mov
loope
fldt
dec
mov
and
or
outsb
jno
addl
test
inc
push
or
mov
adc
mov
adc
pusha
movsl
lahf
dec
stos
jle
push
into
jecxz
es
setbe
fldenv
dec
cmc
enter
jae
les
sub
mov
cwtl
nop
mov
pop
lea
push
add
ror
jno
add
aad
data16
xor
mov
or
insl
mov
pop
bound
push
outsb
mov
sbb
mov
popa
mov
push
dec
roll
xor
sti
jbe
sbb
sbb
fsubs
cmpsl
dec
repnz
cmp
xor
pop
mov
imul
gs
rclb
cmpsb
push
sbb
pop
inc
inc
sti
or
sub
or
fisttps
pop
sti
dec
ljmp
icebp
jge
lods
or
adc
and
and
imul
je
cmp
mov
sti
jmp
sub
cmpsl
cltd
aad
fsts
icebp
add
mov
sbb
xor
fcomp
xor
push
and
out
outsl
dec
jns
inc
add
rsqrtps
adc
and
inc
xchg
or
sub
outsb
xchg
mov
xchg
mov
lret
cmpsl
leave
pop
std
push
jge
rorl
sbb
dec
jbe
mov
mov
fmuls
sub
inc
pop
fcomps
fwait
sub
cmp
jmp
mov
add
decl
sbb
sub
rolb
das
movsl
sbb
add
xlat
or
scas
hlt
mov
clc
jmp
out
sub
push
add
mov
or
sbb
out
pminub
jge
mov
jo
mov
icebp
cmp
mov
mov
push
push
dec
pusha
and
and
adc
mov
jbe
lret
and
adc
es
xor
xchg
cmp
mov
pusha
cwtl
stos
lods
cmp
mov
leave
add
cli
jecxz
pop
cmpsb
in
mov
mov
fdivl
and
and
sub
jl
mov
aam
adc
fcmovu
jne
das
lcall
adc
cmp
cld
jae
fisttpll
xchg
xchg
cmp
sub
fisubrl
rorb
adc
outsb
movsl
jge
inc
shl
inc
inc
hlt
ljmp
in
dec
jmp
jb
addl
push
pop
loopne
mov
add
enter
add
push
lahf
loope
mov
loop
and
rolb
in
add
pop
add
dec
pop
faddl
jo
dec
mov
std
mov
or
lret
out
andl
lret
divb
mov
mov
xchg
dec
or
jb
adc
in
inc
decl
jmp
xor
cltd
fwait
inc
xchg
push
xchg
sbb
sub
or
das
mov
stc
jl
insl
pop
rcll
inc
dec
fistl
jl
add
sub
test
mov
push
push
jecxz
jmp
add
pop
push
jg
mov
xlat
lea
test
in
aas
test
xchg
pop
popl
stc
pushf
je
add
adcl
mov
xchg
jb
data16
xchg
bound
movsl
sbbl
lods
ret
inc
sbb
enter
sbb
loopne
xor
push
inc
es
fwait
in
cmp
cmp
mov
je
imul
ds
lret
inc
mov
or
popf
ss
inc
dec
sahf
faddl
xor
mov
dec
pop
mov
cmpb
out
out
sub
fs
xchg
jecxz
dec
pop
dec
ret
jle
popa
sub
call
cmpsl
out
mov
xchg
fsts
jns
mov
mov
push
inc
jno
imul
lods
addr16
icebp
mov
data16
push
xchg
adc
adc
lret
sahf
mov
orb
or
mov
out
std
xchg
jnp
adcb
test
and
jnp
aad
in
mov
cld
bound
or
or
outsb
jne
or
scas
fldl
jle
mov
pushf
mov
push
gs
mov
xchg
push
mov
or
loope
fdivp
xor
insb
fidivrs
nop
rcrb
add
sbb
mov
mov
les
test
mov
mov
xchg
push
pop
cs
inc
lds
sub
js
xchg
mov
dec
in
pop
and
mov
jbe
jbe
pop
jmp
mov
test
inc
and
inc
dec
out
or
cmp
adc
mov
out
jg
mov
sti
out
xor
fisubrl
popf
push
sbb
ljmp
add
xchg
jl
fists
lahf
mov
lods
clc
xor
or
push
mov
xor
mov
aad
aam
cwtl
add
dec
add
lret
fisttpl
push
or
pop
mov
mov
pusha
pusha
mov
outsl
fsubs
jl
xchg
mov
into
add
xchg
enter
add
cld
cltd
mov
cmp
mov
clc
inc
lods
ljmp
iret
sub
aam
adc
and
mov
sarb
push
fs
adc
roll
nop
sbb
nop
sbb
ss
mov
mov
fcoms
testl
out
fsubrs
jl
andl
add
pusha
shr
inc
cmpsb
std
adc
cmp
ds
popa
es
cmp
jg
push
cmpsb
jb
or
adc
ret
xor
sub
mov
or
jb
adc
cmp
iret
les
mov
dec
sbb
push
gs
fisubrs
lret
scas
test
rorl
add
cld
pop
dec
adc
sbb
popf
movsl
add
je
jb
int
lock
pushl
cmp
nop
mov
popf
clc
add
sub
push
gs
movl
adc
pop
dec
in
xchg
cli
inc
call
cmp
daa
mov
das
mov
repnz
inc
testl
sbb
mov
mov
aas
xor
test
push
les
or
sarl
xlat
inc
sahf
ja
push
mov
in
adc
cmp
add
sub
arpl
fs
out
cmpsl
stc
xchg
adc
mov
cmpsb
lods
jo
ss
rcll
and
push
test
clc
xchg
xor
push
pop
dec
push
xor
mov
xor
jo
or
push
lods
mov
shll
or
imul
push
jbe
mov
fcomi
xchg
mov
pop
adc
popf
mov
in
adc
in
iret
fnstcw
jne
shll
mov
xchg
cmp
popf
cltd
add
inc
out
inc
dec
sahf
repz
cmp
add
mov
rorl
iret
int
mov
data16
das
cvtpi2ps
incb
iret
mov
xchg
or
sti
aaa
lods
shrl
push
int
fcomi
sbb
sbb
fcompl
out
push
jns
or
pushf
rolb
mov
mov
pusha
aas
out
jno
sub
mov
out
mov
jg
fwait
jge
outsl
dec
mov
jg
sbb
call
loopne
mov
cmp
mov
adc
scas
mov
mov
push
lock
mov
xchg
sub
xchg
fstp
dec
mov
insb
test
in
dec
jge
in
test
fimuls
outsl
jb
scas
mov
leave
mov
sti
mov
cld
arpl
lret
pop
loopnew
ja
aad
les
or
shll
dec
inc
pop
leave
imul
stos
rcr
dec
adc
imulb
or
scas
pop
mov
xchg
pop
dec
or
gs
icebp
add
je
scas
adc
xchg
cmp
xchg
cmp
mov
mov
out
leave
outsb
stc
ja
mov
pop
test
jne
adc
adc
fwait
push
fdivrl
add
push
jae
cmpb
xor
negl
fisubrl
cld
xchg
test
rcl
jmp
mov
mov
imul
pop
xchg
xor
xchg
es
test
insb
and
popf
and
push
imul
or
mov
mov
fldcw
in
add
and
imull
jae
shrl
pop
lret
push
pushw
push
fdivrs
inc
lcall
aas
data16
js
add
les
xchg
pop
fistpl
sub
adc
xchg
or
jo
push
pop
orl
shrl
jmp
mov
imul
sbb
jae
mov
xchg
or
jg
pop
loop
loop
and
subl
xchg
jg
movsb
in
xor
push
fiaddl
push
push
mov
sbb
sbb
repnz
aas
inc
xor
adc
les
sbb
add
cmp
pushf
jb
test
inc
in
rclb
loopne
cmp
cmpsb
aad
pop
lcall
xchg
jl
aam
fwait
out
push
sahf
jl
inc
inc
arpl
mov
add
lahf
dec
test
into
mov
jg
stos
xchg
xor
clc
lods
inc
fistpl
push
into
jae
ja
add
jo
mov
push
clc
jne
jmp
stos
popf
push
mov
push
mov
in
or
insl
lret
jb
xchg
jb
jne
jns
test
and
pushf
mov
pop
daa
xchg
in
cld
jle
sub
in
xchg
shlb
test
in
and
js
mov
sbb
jnp
pop
mov
aaa
in
mov
sahf
repnz
adc
out
repz
mov
arpl
mov
out
pop
notl
in
gs
xchg
in
rcr
rorl
adc
xchg
mov
pop
sbb
pop
jp
aaa
vbroadcasti64x2
pop
bnd
enter
mov
inc
lock
xor
or
stos
int
push
mov
dec
repnz
test
cmp
ds
adc
mov
stc
aas
cwtl
cmpsb
xchg
inc
or
ror
out
lret
sub
add
or
cmp
xor
xor
lcall
insl
jmp
test
add
mov
jbe
jns
fs
in
jecxz
fiaddl
inc
cli
adc
lret
mov
add
fs
scas
jnp
inc
pop
or
enter
rolb
cmp
mov
jmp
and
cmp
pop
mov
jb
loope
pop
jge
xchg
or
mov
add
add
bnd
dec
ss
outsb
fiaddl
cmp
in
mov
mov
xor
add
inc
test
sub
aas
cli
dec
movsl
arpl
sub
test
sbb
outsb
inc
shrl
add
mov
in
in
xor
faddl
rcrl
add
cld
adc
and
jmp
dec
stc
in
dec
dec
ss
bound
test
or
mov
cmpl
xor
jecxz
sbb
dec
or
push
sbb
je
sbb
fwait
inc
aaa
xor
sbb
cmp
xchg
sub
cmp
orb
arpl
mov
xor
mov
jae
xor
sub
fcompl
inc
mov
pop
push
in
les
sub
jge
adc
inc
add
repz
xlat
fldenv
jge
and
out
or
pop
orb
sbb
mov
dec
push
fdivrs
mov
outsl
imul
dec
fldt
sub
lcall
dec
sbb
les
mov
movsb
dec
mov
sub
sbb
xor
lret
xor
fwait
pop
lock
mov
les
out
aam
inc
mov
sub
mov
mov
mov
stos
mov
xor
sbb
out
in
or
mov
jg
sbb
lret
push
jno
mov
cmp
push
cmpsb
loop
stos
sub
stc
shll
loopne
scas
push
rorb
je
sub
push
push
das
in
mov
aas
jns
clc
ret
mov
mov
pop
rcrl
addb
mov
fld
ffree
fnstsw
and
fcom
pop
mov
pop
pushf
push
pop
bsr
int3
or
pop
cmp
jecxz
hlt
cs
repnz
adc
jne
test
aad
fdivl
mov
jge
fadds
int3
pop
adc
add
and
bound
dec
inc
shl
cli
add
jmp
rclb
mov
arpl
in
and
push
bound
ljmp
out
and
and
out
ljmp
pop
insb
es
add
mov
ret
pop
xchg
mov
negb
mov
test
mov
inc
test
jno
mov
outsb
shrb
mov
jo
ror
cmp
mov
mov
cmp
sbb
mov
jno
pushl
xor
or
pop
iret
sbb
xchg
fstpl
lock
lcall
sbb
push
xor
sbb
pop
imul
xchg
ret
sub
sub
lret
fnstenv
cli
sbb
stos
das
sbb
and
jbe
sbb
stos
in
imul
mov
and
daa
inc
ror
rolb
loopne
out
inc
xor
inc
adc
and
cmp
clc
push
ret
mov
cmp
push
mov
inc
push
dec
xchg
jle
les
paddb
popl
mov
jb
sub
mov
jg
test
adc
cld
inc
orb
cmp
sarb
in
cmp
pop
jmp
popf
hlt
add
mov
daa
push
repnz
xchg
test
cmp
pop
sbbl
cmc
mov
cmpsl
les
cmp
inc
dec
and
add
mov
stos
fstl
imul
cmp
xor
fucomp
xor
push
rcrl
sbb
shl
jecxz
ss
cwtl
fdivrs
mov
fidivl
testb
cli
and
jnp
mov
push
int3
addl
add
in
mov
test
lcall
mov
dec
and
xor
jb
and
mov
addr16
cmpsl
jns
jnp
cs
fidivrs
pop
adc
into
lock
in
ljmp
in
dec
add
pop
mov
sbb
push
mov
adc
inc
loope
push
jecxz
ret
pop
test
sarl
cmp
or
or
std
outsl
mov
aaa
mov
js
mov
mov
pop
rcr
in
pop
or
sub
pushf
hlt
cli
ret
jecxz
add
adc
out
idiv
movb
adc
adc
add
js
adc
leave
mov
mov
sbb
data16
gs
xor
mov
sub
es
pushf
test
cmp
cmp
addr16
mov
sbb
sbb
push
push
outsb
lods
aas
popa
adc
jbe
inc
mov
ja
and
mov
xchg
out
jns
xor
mov
lds
aas
xorl
in
mulb
dec
loopne
mov
testb
orb
xchg
clc
or
iret
push
and
jge
movsl
stos
clc
jge
lods
out
outsl
mov
into
jbe
scas
cmp
sbb
pop
adcl
fsubl
andl
or
mov
mov
adc
xor
shrb
fcomps
jg
or
jno
incl
cmpsb
clc
adc
sahf
push
popf
lret
jl
xlat
mov
clc
pusha
adc
rol
sub
icebp
sub
test
cmp
fsubrl
dec
fnstsw
mov
andl
jg
push
dec
imul
and
adcb
xchg
jl
jo
cmp
call
xor
xor
rcrb
dec
push
push
sub
push
push
xlat
xor
jge
iret
ret
push
sub
leave
inc
xchg
jl
and
sub
xor
or
rorb
mov
or
fucomip
mov
xchg
sbb
xor
jno
pop
aas
add
je
xor
pushf
sub
ss
sbb
mov
lea
push
and
pop
sti
mov
jae
pop
dec
mov
orb
movsb
inc
sub
mov
std
dec
push
addl
jo
into
jge
pop
sahf
and
rol
repnz
cmp
lcall
mov
nop
lahf
mov
arpl
imul
cld
imul
fdivrs
pop
adc
pop
mov
test
adc
adc
jmp
xor
cmpsb
icebp
pop
jmp
push
fisubs
lcall
sbb
xlat
push
or
push
cmp
push
cmpsb
ss
mov
shlb
mov
and
outsl
push
movsb
fistpll
dec
add
pop
sbb
shll
sub
mov
fstpt
lock
push
lahf
sub
push
cmp
mov
or
sti
inc
into
push
lods
cld
test
out
or
mov
push
lret
and
sbb
adc
and
xor
xchg
or
cwtl
push
adc
call
push
and
xlat
jg
mov
fcompl
aam
add
mov
or
jae
cmpsb
sub
in
adc
xchg
adc
nop
rolb
mov
pop
int3
xchg
push
pop
les
xor
fmulp
inc
inc
adc
xchg
es
push
jae
push
testb
mov
cmc
call
cmp
shll
lds
js
rolb
bound
add
cmp
sbb
lods
jae
pop
push
movsb
outsl
movsl
test
xchg
out
daa
cltd
xchg
fnop
loopne
outsb
sarb
fwait
movsl
jle
adcl
push
mov
scas
js
test
out
repz
shlb
mov
push
and
push
ss
jle
dec
repnz
in
movsb
push
enter
jnp
ljmp
cmpsl
movsl
xchg
xlat
in
sbb
adc
jb
jae
push
sub
out
xchg
sub
xchg
loop
ret
sub
dec
mov
les
fldenv
cmc
aaa
mov
xor
dec
insl
xor
push
add
test
xchg
mov
scas
mov
outsl
in
call
xor
mov
mov
adc
std
imul
sarl
jecxz
mov
outsb
mov
pop
xor
add
aad
mov
jecxz
js
sub
mov
jge
pop
arpl
sub
mov
xchg
mov
aam
mov
mov
xchg
aaa
shr
push
mov
leave
push
fcom
adc
jbe
fmull
sti
add
shrb
imul
pop
fsubp
icebp
jno
cmp
mov
add
xor
rorb
mov
push
stos
ret
push
mov
sub
dec
das
int
mov
and
jp
pop
cmp
repnz
loopne
movsb
jp
push
cs
call
cmp
or
scas
lret
fmuls
pop
out
add
fcomps
popf
jp
push
rcrl
push
pusha
aas
add
fnclex
sarl
pop
add
jmp
inc
idivb
lods
cmpsl
cli
and
inc
std
sar
mov
dec
jae
enter
cmp
sub
aas
xor
mov
mov
add
fisttps
aas
stos
mov
inc
pop
inc
push
stos
shl
jnp
add
add
mov
test
rcrl
ret
mov
cwtl
cmp
sub
fs
insb
push
roll
fsubs
pop
nop
cltd
inc
ret
lods
cli
mov
and
lds
mov
push
cmp
xchg
cmpl
arpl
sub
aad
pop
sub
cwtl
mov
dec
push
dec
fisubl
mov
popa
out
sub
movsb
das
xor
adc
ljmp
gs
lret
adc
into
incb
lahf
xchg
mov
stos
enter
and
and
stos
jp
sti
mov
push
je
mov
mov
rcl
movl
addr16
pop
jle
sbb
movsb
imul
cmp
sbb
xchg
imul
cmp
push
rorl
hlt
cmpsl
jnp
mov
clc
push
popa
and
inc
mov
mov
ja
lods
or
movsl
xor
bound
and
movsb
xchg
lahf
pop
cli
es
das
ret
pop
adc
mov
mov
jg
ss
xor
repz
jae
sahf
xchg
inc
das
cmp
popf
jne
inc
outsb
dec
lahf
mov
inc
cmp
mov
cltd
sub
mov
pop
and
mov
inc
inc
aas
jle
mov
xchg
sub
notl
push
push
incl
lods
dec
jns
or
mov
pop
inc
inc
out
mov
ds
push
sbb
and
dec
push
push
mov
pop
add
jb
inc
icebp
fwait
mov
add
sub
ficompl
jle
cs
fs
pop
mov
cmc
mov
out
xchg
jae
xchg
mov
into
push
dec
xchg
xchg
aam
mov
pop
out
imul
dec
push
icebp
test
or
jns
es
or
dec
xchg
dec
and
xchg
insl
cwtl
mov
inc
push
xor
xor
cs
movsl
clc
test
sub
insb
jae
fstpt
push
js
cmc
hlt
mov
inc
popf
addr16
sub
sbb
sub
pop
leave
jbe
adc
push
pop
test
or
mov
mov
push
dec
inc
adc
dec
cwtl
inc
mov
adc
pop
and
insb
popa
or
cli
push
seta
push
mov
dec
sub
fisttpll
pop
and
pop
xchg
push
cli
xor
insl
aam
pop
dec
mov
inc
in
arpl
int3
xchg
popf
jns
lretw
mov
and
dec
iret
push
in
fabs
xchg
test
lea
xchg
or
ja
and
pop
xor
test
jmp
dec
movsl
add
and
imul
aas
js
mov
popa
mov
mov
inc
imul
std
mov
mov
sti
cld
inc
test
rcll
pop
les
rorl
sub
xor
xor
and
mov
imul
jne
push
xchg
pop
je
stos
pop
data16
imul
les
xlat
push
outsb
sbb
mov
xchg
popf
fmul
mov
movsb
mov
xor
sub
inc
shr
push
xchg
push
pop
sbb
dec
push
pusha
out
aad
jmp
inc
xchg
shrb
call
add
dec
repz
shlb
jecxz
pop
mov
mov
lods
pop
addr16
lds
std
inc
add
leave
adc
mov
cs
push
loop
rcll
push
fistps
inc
jnp
mov
xchg
out
pop
cmp
test
rcrl
mov
mov
lock
pop
insb
lds
fnstenv
mov
adc
jo
insl
dec
jo
inc
dec
adc
out
add
inc
xor
subb
inc
sbb
scas
mov
or
inc
cs
jns
pop
dec
fisttpl
sbb
mov
or
xchg
std
jge
stc
das
sub
repnz
test
adc
sbb
pop
sbb
ret
mov
insl
repnz
fimuls
add
pop
mov
loopne
or
pop
mov
cs
daa
divl
mov
jae
dec
lea
inc
lret
push
xchg
lea
sbb
jb
adc
dec
in
jbe
rcrb
rcl
sti
loop
sbb
and
pop
jge
std
cmp
dec
or
adc
sti
aad
pop
inc
mov
xor
sub
pop
mov
out
mov
jae
sbb
cmp
pop
sarl
cmc
les
iret
mov
mov
xor
sbb
pop
pop
into
out
rorl
int3
test
mov
mov
xor
xchg
call
stos
repz
es
mov
mov
jecxz
pop
scas
mov
jns
lret
pop
aaa
lret
iret
cmp
loope
bound
scas
or
xor
sbb
call
jb
adc
insl
jecxz
inc
or
or
dec
push
imul
clc
out
push
sbb
data16
ror
pop
adc
push
aam
sub
loope
fnstcw
out
sbb
sub
or
bound
ds
push
lret
imul
das
repnz
movsb
loop
or
outsb
ret
sbb
out
ss
cwtl
mov
lods
dec
push
loop
cmpl
jmp
roll
sub
jge
les
sub
test
outsb
scas
jne
and
inc
jmp
out
bound
mov
cltd
hlt
test
adc
js
inc
adc
add
adc
cmc
jp
push
sahf
jmp
jle
aas
mov
imul
fimull
icebp
xor
shrl
and
and
sub
out
push
ret
xor
test
adc
scas
pop
pop
dec
fdivrp
hlt
les
xlat
push
cmp
cmp
sub
gs
daa
movsl
ja
in
mov
cltd
sub
adc
cmpsl
repz
sub
cs
lds
rclb
adcb
push
enter
nop
cmp
mov
insb
das
les
xchg
outsl
jle
pop
sub
xchg
jecxz
xchg
pushf
outsl
js
xchg
sbb
pusha
out
jl
jb
imul
test
lret
je
lods
sahf
cmpsb
sbb
push
fnsave
das
sbb
out
cmp
cmp
cmp
sbb
cmpsb
rclb
jecxz
sub
add
xchg
lods
movsl
ja
mov
or
clc
mov
rorb
addr16
mov
std
mov
or
lret
jae
pop
cmpsl
xchg
testb
push
jno
out
and
fmulp
push
imul
cmp
or
cmp
inc
dec
popa
cmc
push
cmp
in
pop
call
bsr
lds
ss
inc
dec
jecxz
inc
xchg
lret
rolb
popa
repz
adc
daa
aaa
mov
cmp
add
loop
inc
adcb
dec
icebp
add
test
nop
ds
cmp
sbb
gs
outsb
or
jno
dec
enter
ds
xchg
icebp
mov
daa
sub
es
cmp
js
push
adc
data16
fcompl
xchg
push
ja
cli
fdivs
je
aas
lret
push
inc
inc
in
push
nop
out
outsb
loope
dec
cmp
movb
jo
xchg
xor
cmp
inc
mov
xor
and
jo
ret
bound
popa
out
sub
xchg
js
test
pop
mov
fistl
pop
and
jo
mov
and
out
jno
mov
arpl
mov
jns
jg
lock
inc
addr16
call
sbb
mov
xchg
mov
cmpsl
bound
enter
pop
mov
mov
repnz
xchg
rorl
cli
xchg
dec
shr
jns
adc
dec
mov
stos
jg
cmp
sub
repnz
out
mov
repnz
xor
cld
jp
jp
sar
mov
rcrl
push
lcallw
mov
data16
pop
jae
xchg
ret
push
fbstp
jne
sub
mov
cmp
prefetch
pop
loopne
jmp
shr
es
sbb
stc
inc
jno
mov
cwtl
pop
push
adc
cwtl
jns
mov
lret
iret
jle
mov
cmp
adcl
or
lea
xchg
jp
repz
add
add
test
push
roll
adc
xchg
mov
and
es
insb
rol
aad
out
popf
add
dec
sahf
mov
mov
jbe
xor
subl
and
aam
inc
push
mov
out
movsl
out
cmc
clc
aad
test
aad
mov
insl
jne
sbb
jne
sti
roll
cmp
test
cmp
pop
or
lret
mov
add
push
and
ljmp
cmp
inc
adc
movsb
ja
jmp
cwtl
sub
and
xor
mov
mov
pushf
sub
sti
scas
push
push
fucom
sti
jg
mov
pop
jne
in
dec
mov
xlat
ret
je
mov
mov
mov
test
jecxz
xchg
ljmp
aad
ds
or
movsb
std
pop
int
cmpb
adc
jo
inc
or
lcall
inc
lods
mov
out
outsl
out
fwait
push
adc
repz
outsb
push
xchg
mov
dec
es
sbb
bound
xchg
xchg
sahf
mov
push
mov
pop
insb
stc
cmp
mov
xchg
xchg
jge
jecxz
fistl
sub
sbb
push
vmovdqu
repz
cmp
dec
pop
cli
adc
xor
syscall
dec
out
out
push
mov
js
decl
sub
icebp
sub
pop
cmp
out
push
add
add
and
stc
sub
mov
lret
push
push
xchg
mov
cmp
pop
cltd
add
adc
es
mov
mov
ret
jbe
mov
jnp
test
mov
jmp
dec
jp
bound
das
or
inc
xchg
enter
sbb
shrl
movsb
jns
and
adc
sahf
mov
sar
or
lahf
popa
and
add
xchg
push
pop
into
popf
and
adc
push
in
lods
push
push
out
xor
jnp
add
dec
xchg
subl
repz
das
cmpsl
jb
cltd
xchg
sub
repz
ljmp
stos
lret
jne
leave
pop
sub
fsubrl
jl
xchg
pop
aas
or
xchg
imul
push
insb
cmc
or
pop
inc
sbbl
sub
testl
cmpsb
scas
sub
jo
xlat
add
jle
enter
sub
dec
subl
fcomps
sbb
xchg
iret
ds
jnp
mov
adcb
adc
mov
fimuls
mov
rorl
cmp
aam
pop
push
adc
or
mov
jg
fdivrs
in
xor
int3
loope
cltd
js
testb
ja
adc
inc
pop
jecxz
dec
dec
pop
pop
js
idivb
sbb
cmp
stos
cld
out
lret
push
lcall
data16
inc
cmp
dec
rorl
mov
lret
movsb
cmp
dec
pop
add
add
xchg
clc
push
pusha
pop
mov
lret
adcb
lret
push
popa
push
popa
dec
sub
je
xor
inc
inc
sbb
push
divl
mov
shr
fistl
mov
or
inc
stc
push
adc
shr
mov
and
fwait
iret
aad
mov
cs
jl
arpl
dec
or
xchg
hlt
or
xor
xlat
mov
and
in
cwtl
mov
int
xchg
add
cmp
lock
pusha
pop
test
inc
mov
cmpl
pop
push
push
pop
jo
and
jo
fldcw
mov
add
cli
or
adc
repz
jno
cmp
jecxz
xchg
ds
jle
push
call
bound
and
dec
in
cmp
adc
outsl
and
xor
sub
lds
fbld
or
lock
xchg
dec
out
push
int3
or
dec
stos
jecxz
addl
jle
in
add
loopne
fldt
cli
fstpt
xchg
xchg
jne
cmp
stos
aas
or
ret
push
test
in
lcall
xorb
ficomps
push
ficomps
mov
xchg
sub
shlb
sub
movsl
push
dec
scas
loopne
pusha
repnz
xchg
xor
xchg
xor
and
outsb
jg
mov
push
cwtl
icebp
mov
out
mov
xor
jp
lret
or
inc
lea
into
repnz
or
add
adc
sbb
push
inc
mov
jb
fmuls
sbb
ss
or
outsb
ss
dec
cmp
xor
add
lcall
scas
sbb
xchg
or
xchg
test
rcrb
out
test
icebp
in
or
loop
pop
sbb
loop
mov
loopne
mov
ja
mov
pop
pop
jmp
rolb
push
jmp
icebp
dec
sbb
jle
or
enter
mov
jecxz
push
clc
testb
repnz
cmp
xchg
mov
mov
jg
mov
dec
fisubrs
dec
daa
test
bound
stc
mov
data16
pusha
leave
les
pop
ja
inc
pop
outsl
movsl
imul
inc
fwait
scas
inc
push
mov
jae
lods
orb
inc
pop
push
popf
fisttpll
lods
mov
push
adc
ljmp
fldcw
or
jno
cmp
loopne
ss
call
pop
pop
pop
or
xor
mov
lock
mov
push
push
or
clc
stc
mov
add
push
ja
lods
es
inc
jne
and
ljmp
outsl
add
pop
in
jp
pop
push
adc
jp
nop
daa
lret
and
mov
xchg
leave
xor
test
jge
mov
iret
in
xchg
lea
bound
cs
outsb
push
xchg
pop
out
dec
leave
mov
psubusb
stos
scas
mov
xor
and
scas
and
jecxz
xchg
mov
rcrb
in
dec
adc
insl
dec
jecxz
dec
je
adc
mov
stos
lahf
ret
loope
out
lcall
lahf
mov
in
sti
jmp
inc
sahf
addr16
out
gs
sahf
add
or
adc
ret
inc
xor
cs
out
int3
mov
loopne
push
and
xor
ds
sub
mov
adc
or
cmp
mov
ss
xchg
fildl
push
je
and
lock
sahf
pushf
sbb
ret
inc
sub
adc
dec
inc
xbegin
loopne
in
cmpsl
mov
nop
out
arpl
add
cmp
mov
xchg
rorl
out
call
mov
cmpsb
out
mov
mov
and
push
jmp
pusha
inc
jae
jns
jge
xorl
cli
hlt
imul
fdivrs
jb
fldt
les
and
sub
jl
lods
inc
lods
sbb
or
jno
cwtl
inc
dec
jne
arpl
sbb
adc
gs
subl
rcll
lahf
mov
pop
and
fwait
hlt
push
dec
dec
pop
cli
mov
dec
dec
into
and
dec
stos
cltd
adc
dec
or
add
iret
inc
xchg
push
xchg
push
mov
push
scas
mov
shr
in
xchg
int
ret
lods
or
jb
fcmovnb
push
jp
adc
xorb
push
addb
sub
dec
dec
and
push
sti
mov
jb
jl
push
push
sub
jno
jbe
mov
mov
xchg
ja
inc
inc
push
add
pop
xor
or
lea
adc
into
xchg
jae
in
lret
push
out
jecxz
cltd
adc
scas
xlat
push
push
add
fistl
xchg
lret
das
pop
and
xchg
aad
test
jg
pop
jne
add
jl
and
hlt
ficoms
call
icebp
enter
stos
movsl
lret
adcb
push
sbb
jg
xchg
das
out
inc
mov
jg
dec
xchg
mov
stos
stos
inc
ret
loop
sub
in
xor
fimull
or
lods
mov
scas
dec
repnz
in
pop
cltd
out
adc
popf
mov
je
movb
testl
out
aaa
adc
shlb
mov
roll
inc
jge
pop
xor
sbb
loopne
fs
xchg
repnz
addb
jne
mov
mov
in
sbb
mov
push
cvtps2pd
cmp
mov
cmc
adc
cmp
aad
shl
xor
or
lahf
push
cmpsb
xchg
pop
adc
jnp
bound
cmc
jo
or
out
mov
push
fldt
jbe
int3
push
jl
add
jns
inc
repz
ss
sub
pop
dec
bound
xchg
jnp
fwait
adcl
mov
mov
sub
cwtl
leave
sbbb
jg
dec
jecxz
pop
je
shll
add
xor
push
jnp
xor
or
icebp
adc
jp
std
or
stos
mov
hlt
cwtl
fwait
nop
mov
push
rol
xchg
fldl
fdivp
xchg
loop
fs
rcll
scas
imul
xlat
push
push
cmp
lret
mov
fnstcw
xchg
adc
cli
loopne
mov
fwait
bound
mov
mov
xchg
movsl
shlb
imul
jnp
dec
push
fimuls
jle
outsb
jle
idivl
dec
outsl
cmp
pop
mov
fwait
ret
adc
fwait
adcb
ss
lods
js
dec
adc
mov
inc
mov
mov
cli
push
xor
shrb
pop
movsb
pop
stos
repz
push
in
fnstcw
repnz
push
jl
fisttpl
lock
cltd
pop
insb
mov
push
js
jae
sbb
push
cmp
xchg
std
outsb
push
jmp
inc
adc
shll
pop
mov
pop
mov
adc
mov
sti
roll
call
cmpsl
testb
jae
sub
adc
pop
mov
imul
adc
mov
jecxz
jg
fnstenv
mov
lds
out
cltd
stc
xchg
xor
ret
jle
cmp
and
in
out
adcb
dec
or
out
lret
and
mov
movsb
mov
mov
and
fs
or
push
lock
sbb
jle
cwtl
movsb
rcrl
lea
call
jbe
dec
dec
sti
fldl
scas
test
out
mov
sbbl
mov
sbb
lods
dec
mov
add
js
enter
xchg
xchg
adc
inc
dec
push
fnstsw
in
aam
lcall
xor
or
push
stc
push
mull
jns
aam
popa
aas
jns
ds
push
into
xchg
inc
cmc
pop
mov
icebp
pushf
addr16
movsl
clc
fwait
pop
sub
push
xchg
pop
xor
pop
jecxz
jbe
lods
jl
add
lahf
insb
xchg
fcmovnu
enter
rolb
popf
jae
lcall
sub
xchg
xor
sub
dec
jns
push
xchg
mov
stc
cmp
adc
daa
pop
inc
lds
cmpsl
fldenv
pop
ficomps
jecxz
stc
push
mov
lods
in
inc
subb
xor
adc
data16
xlat
fnstcw
add
inc
dec
xchg
xchg
jl
std
mov
xchg
push
pop
outsb
sub
jb
rcrl
in
mov
pop
test
rol
andl
fstps
jg
mov
idiv
leave
adc
jecxz
int3
test
imul
jo
adc
jp
adc
sbb
aas
andb
adc
sub
sub
adcl
pop
adc
cmpsl
inc
js
repnz
imul
out
lret
mov
dec
jnp
movsl
mov
xchg
arpl
xchg
mov
adc
add
push
mov
aas
roll
sahf
inc
mov
arpl
fmuls
adc
lcall
jb
xchg
pushf
pop
add
jg
mov
in
in
fs
shrb
addr16
sbb
inc
jnp
stos
loopne
shll
cld
or
sub
ljmp
sbb
push
dec
pinsrw
dec
lock
mov
jecxz
pop
push
ficomps
pop
sbb
jns
std
adcb
pop
femms
mov
lahf
lahf
xchg
add
rcrb
push
fiadds
pop
jp
test
add
cwtl
push
cld
mov
in
enter
idivb
sub
loop
jl
ds
dec
cmp
xor
push
jmp
push
mov
sub
cmp
mov
lcall
and
mov
iret
hlt
aas
test
outsb
mov
ror
mov
mov
mov
aad
mov
adc
scas
lods
repz
mov
sbb
and
lret
push
outsb
xchg
mov
xor
loope
adc
sarl
into
sarb
sub
mov
in
inc
fwait
jg
test
in
pop
in
pop
jecxz
mov
clc
shlb
pusha
dec
add
cli
jns
push
imul
ret
mov
in
sbb
inc
out
push
add
pop
add
add
jno
rclb
jp
push
fldl
std
dec
xchg
pop
jb
add
insb
stos
push
outsl
and
and
cmpsb
clc
in
adc
xchg
dec
outsb
inc
lock
pop
sbb
jb
lds
jecxz
jecxz
cmp
dec
sub
fdivs
add
sti
xor
mov
mov
popa
and
jbe
adc
pusha
xchg
inc
jge
pop
xchg
pop
mov
insl
xorb
cmp
sbb
mov
xor
aaa
xor
icebp
ret
jge
insl
cmpsl
push
mov
sti
fisttpll
fisubrs
shlb
inc
inc
mulb
xchg
cmp
push
shll
push
jp
cmp
repz
xchg
pop
add
push
sbb
mov
pop
or
hlt
into
cmp
push
adc
inc
pop
lea
insl
push
dec
inc
pop
cs
movsl
das
xlat
adc
int3
xor
pavgb
jne
mov
cmp
xchg
xor
xor
repz
fdivrl
les
xor
pop
pop
xor
outsb
adc
xchg
sbb
add
sbb
popf
mov
cmp
xchg
push
mov
ja
lret
jl
and
decb
or
mov
sbb
xor
loop
stos
push
rcrl
mov
iret
push
addr16
cmp
enter
xor
test
aas
cwtl
and
hlt
mov
les
xor
std
into
pop
mov
xor
ja
std
repz
mov
ljmp
inc
and
jmp
xlat
std
rcrb
dec
dec
lret
pop
aad
rcll
push
rcrb
pop
std
int3
aam
dec
xchg
inc
inc
lds
mov
filds
jmp
sub
lea
xlat
mov
or
cmp
insl
sub
or
in
push
clc
mov
pop
das
or
mov
fadds
xor
mul
mov
subb
pop
sbb
jb
push
xchg
icebp
cs
jnp
sub
out
dec
pop
pushf
fcmove
push
mov
dec
jo
insl
icebp
cmove
pop
xor
adc
sbb
push
fisttpl
sbb
mov
push
repz
lahf
jo
or
cmpsl
mov
cmc
in
mov
icebp
adc
push
dec
and
mov
dec
in
sub
mov
in
push
push
push
sbb
fsubr
mov
sarb
add
mov
xchg
sub
in
mov
jecxz
add
xlat
outsl
out
xchg
outsl
cmp
imul
adc
sub
stos
mov
xchg
pop
loop
mov
cmp
out
in
dec
dec
es
je
mov
pop
mov
xor
adc
sbb
cli
adc
jno
push
fisubs
fst
mov
mov
pop
lret
xchg
or
addl
sbb
add
pop
jno
mov
call
outsb
pop
cmp
ljmp
stc
mov
jge
dec
add
xlat
mov
ljmp
mov
and
jmp
fdiv
pop
nop
nop
sti
xor
mov
bound
stc
loope
repz
push
les
push
out
push
mov
icebp
mov
mov
add
or
fldcw
outsl
inc
in
js
scas
adcl
inc
xchg
fcoms
fistl
adc
add
jbe
mov
fisttpll
mov
inc
or
inc
movsb
xchg
lret
pop
lock
popa
mov
push
inc
fldcw
push
test
sti
push
repnz
mov
andl
sub
cmp
scas
jmp
loope
sub
push
add
xor
mov
push
jl
mov
mov
push
jg
movsb
ss
add
mov
pop
fldl
cmp
mov
lea
jnp
jno
sbb
popf
scas
je
cmc
pop
fisttps
and
dec
subl
lret
out
in
iret
adc
pushf
push
pop
pop
test
xchg
pusha
or
mov
jecxz
mov
ret
mov
mov
cmpsl
in
jae
xorl
jl
jmp
popf
sbb
test
ret
cltd
fs
loopne
sahf
stos
push
repnz
jns
scas
mov
cld
ret
lods
mov
cmp
pop
mov
pop
jl
xor
or
imul
dec
loopne
sbb
pop
or
dec
into
stos
xchg
lea
jbe
movsb
movsl
lret
xchg
dec
mov
xchg
repnz
lock
push
js,pt
adc
adc
cmp
jl
imul
add
and
inc
fwait
xchg
outsl
or
pushf
inc
movsl
lfs
dec
jnp
cmc
jecxz
or
cli
cmc
jl
test
jge
out
jle,pn
les
andb
aaa
xchg
pop
mov
addr16
icebp
add
push
sub
hlt
xlat
cs
and
es
test
add
dec
or
jnp
mov
in
cs
mov
push
std
pmulhw
stos
lahf
push
sub
hlt
ljmp
aad
loope
test
and
mov
mov
adc
lret
loope
add
lcall
xlat
hlt
leave
push
in
orl
xchg
mov
jo
sahf
jbe,pn
cmp
in
add
out
jmp
sub
outsb
cmp
stos
inc
test
out
sbb
cltd
dec
stos
ror
mov
push
cmp
mulb
movsl
xor
int3
mov
mov
ficompl
arpl
mov
xchg
cld
movsb
pop
sbb
adc
mov
incb
xorl
rolb
jle
cmp
push
js
inc
and
inc
push
adc
xchg
xchg
movsl
arpl
xor
push
xchg
enter
push
push
cltd
mov
add
dec
fistpll
pop
fisubl
movsl
jmp
shr
shll
xor
fdivrs
mov
push
cmp
push
xor
stc
lea
aas
dec
jo
mov
cmpsb
mov
inc
xchg
adc
xchg
mov
in
dec
idiv
mov
rcrb
dec
es
inc
lcall
dec
das
xchg
mov
pop
call
nop
bound
imul
jb
pushf
push
lret
fcmove
jl
pop
add
cs
and
xor
mov
sub
and
neg
popa
mov
pop
inc
sub
mov
mov
dec
in
repz
and
imul
test
or
add
xchg
aaa
loop
pop
xor
pop
add
adc
cmc
or
int3
mov
or
pop
repz
jae
movsl
cld
mov
orl
fnstcw
and
mov
pop
jns
mov
cmc
ja
push
jecxz
sub
jae
jae
out
ja
aad
mov
adc
mov
push
or
xlat
pop
sbb
bound
lds
insb
ja
in
repnz
pop
mov
out
xor
decl
out
mov
out
hlt
rolb
xchg
push
mov
mov
ficoml
fisubrl
mov
cld
xor
test
mov
or
int3
adc
mov
gs
pop
jp
aad
or
sbb
pop
mov
xchg
imul
jae
add
mov
fsub
cmp
stc
aad
adc
test
out
dec
mov
lret
test
pushf
push
push
add
sti
arpl
rorb
stc
push
add
lcall
ror
outsl
dec
cmp
outsl
push
sub
ds
xchg
sub
fwait
xchg
mov
sub
jae
xlat
aad
arpl
push
aad
push
fadds
lods
jb
movsb
rolb
popf
ja
xlat
push
jl
and
in
aaa
jb
xchg
or
lds
and
ja
push
mov
jp
in
sub
arpl
jb
sub
mov
jns
mov
out
aam
pusha
fstpl
hlt
add
mov
mov
loope
ret
fnstcw
mov
xchg
jp
mov
fsubs
movsb
jno
inc
fnstsw
push
aad
sub
cmp
neg
in
testb
and
test
push
pusha
and
jne
shl
frstor
outsl
inc
inc
add
pushf
pop
cmp
fisubrs
mov
inc
std
das
inc
mov
loope
pushf
sub
and
xchg
xchg
inc
leave
mov
imulb
leave
mov
cld
aad
and
pop
out
int3
gs
lods
jne
dec
xor
push
push
mov
inc
or
iret
xchg
sti
inc
outsl
and
ja
push
gs
xchg
mov
sbb
outsb
rcl
dec
jp
pusha
pop
sub
and
inc
jmp
cmpsb
pop
pop
sub
push
aas
push
mov
xchg
cmp
jmp
out
scas
fdivrs
push
loope
ja
add
mov
pop
dec
andl
jno
outsl
lahf
sbb
iret
pop
jmp
std
pop
or
push
mov
ficompl
mov
jo
pop
dec
pop
mov
push
add
into
jp
ja
adc
pop
inc
inc
loop
cmp
dec
movq
fwait
stos
push
xor
out
cmpsl
mov
out
fdivl
xchg
xchg
popa
daa
imul
icebp
mov
sbb
fcomip
subl
lods
mov
cmp
fistps
leave
rorl
pop
xor
insl
and
jbe
es
xor
test
jp
push
sub
inc
lcall
xchg
xor
sub
subl
in
and
repz
out
dec
cmp
and
mov
movsl
mov
ja
sbb
cli
fiaddl
iret
inc
or
pop
ljmp
div
loopne
sbb
nop
or
loopne
lcall
lret
sub
or
call
cld
adc
mov
dec
push
int
xor
scas
sbb
inc
cmc
xchg
movsb
rcl
mov
xchg
mov
incl
icebp
inc
dec
mov
mov
test
or
add
dec
rorb
in
jp
inc
lds
dec
mov
shl
inc
sbb
ss
pushf
clc
pop
mov
jnp,pn
out
push
cwtl
iretw
fs
bnd
adc
sub
adc
pop
dec
into
inc
inc
push
lcall
sub
lahf
lahf
lcall
pop
jae
sub
fimull
ds
sbb
mov
mov
icebp
fsubr
clc
ds
pop
addr16
stc
dec
pushl
mov
dec
push
and
xor
cmp
jns
movsb
mov
dec
xorl
fldl
push
clc
push
jno
andps
je
outsl
cmpsl
xchg
in
push
fs
fwait
mov
inc
add
clc
pop
jl
imul
push
xchg
rorb
test
cwtl
fstps
or
ss
pop
stos
leave
push
leave
out
divb
sbbl
dec
push
dec
insb
jl
add
cmp
and
lcall
xchg
cmp
jl
jns
lcall
sub
subb
stc
movsl
sbb
leave
addl
aad
ss
lcall
ret
cmp
xor
lods
inc
inc
aad
xchg
push
in
sarb
popl
xor
cwtl
mov
pop
mov
jnp
xor
adc
inc
cmp
int
sbb
icebp
add
sub
dec
adc
mov
adc
jae
or
jg
imul
push
adc
jno
scas
aas
enter
sbb
push
nop
sub
movl
int3
popa
testb
pushf
pop
mov
shll
ds
jl
insl
out
cltd
not
test
int3
inc
les
std
fimuls
push
xchg
xchg
cwtl
dec
cmp
fimull
insb
push
das
xchg
sbb
sub
je
shr
adcb
cmp
mov
icebp
and
inc
push
sub
pop
sub
lret
daa
inc
clc
cmp
jb
fs
outsb
pop
pop
sbb
sub
iret
out
pop
fistpll
sbb
out
repnz
sub
cmpsb
mov
add
cmc
mov
notb
lds
mov
cwtl
imulb
xchg
fstpt
jne
inc
jmp
test
mul
ret
in
jge
call
xchg
mov
mov
loopne
push
ljmp
sbb
inc
mov
inc
sub
test
leave
test
outsb
leave
scas
inc
mov
mov
inc
sub
sahf
hlt
out
enter
cmpsb
and
lret
leave
into
outsb
fildl
inc
aad
add
leave
mov
adc
push
inc
push
xlat
inc
pop
outsl
push
sbb
icebp
mov
jmp
mov
aad
movsl
sbb
lret
stos
out
xor
jg
add
ficoms
and
or
in
mov
inc
adc
adc
jae
aad
cmpsb
mov
xchg
movsb
rcrb
and
adc
xchg
push
cwtl
nop
arpl
adc
or
and
aad
inc
inc
jle
mov
xchg
xor
nop
aad
mov
mov
or
push
daa
mov
flds
addr16
dec
xor
popa
and
mov
sub
cltd
and
and
inc
adc
sub
pushf
in
addr16
sub
jmp
mov
xchg
xchg
xchg
sbb
lret
fisttpll
jmp
sahf
mov
pushf
lcall
js
and
lahf
cmp
iret
insb
ljmp
sahf
jmp
add
jno
dec
fldl2e
pop
push
ss
out
cmp
btc
jge
mov
push
out
aad
fs
loopne
jbe
xchg
dec
pop
das
sti
dec
sbbl
sbb
insl
adc
adc
clc
pop
add
cltd
mov
and
inc
jge
and
and
ret
in
out
or
mov
mov
in
imul
inc
dec
jle
nop
mov
sub
test
or
push
dec
into
dec
addr16
pop
pushf
mov
xor
or
inc
add
inc
cmp
sbb
sub
add
push
pop
pop
mov
pop
in
cmp
cwtl
push
jbe
inc
adc
push
imul
fadds
jg
mov
lahf
jne
rorl
scas
pop
aas
inc
cli
add
lret
leave
divl
push
sbb
push
shll
fs
or
loope
mov
and
xchg
arpl
mov
lods
mov
rcrb
xorb
popf
or
stos
xor
fs
and
or
or
sub
cltd
or
add
cmc
jle
sahf
push
outsl
pop
rorb
insl
cmp
jmp
scas
cmp
pop
lods
es
mov
inc
add
loope
imul
fiadds
mov
cwtl
jl
adc
loope
movsb
sbb
out
out
sub
fisttpl
push
mov
push
add
test
jns
hlt
insl
add
and
adc
rolb
push
mov
pushf
inc
arpl
and
outsb
rclb
pop
rcrl
popa
arpl
push
jae
or
sub
and
test
dec
push
cltd
mov
outsl
in
mov
and
out
sbb
aas
mov
mov
cltd
mov
test
or
pop
lea
xor
fcmovnu
jne
jg
add
shll
pop
cs
adc
sbb
fsubr
fnstsw
fstpl
or
pusha
mov
sbb
bound
and
jge
and
push
mov
cmp
sub
imul
clc
mov
pcmpeqd
in
stos
jb
xchg
repnz
test
lret
jo
xlat
stos
push
ljmp
rcll
jnp
arpl
inc
fmull
out
sbb
pop
repz
arpl
pop
mov
xchg
sub
inc
mov
pop
testl
loop
gs
and
fnstenv
fs
aaa
mov
add
cmp
cmc
nop
stc
jmp
bound
push
jmp
add
and
pop
xchg
scas
js
xchg
and
sbb
pop
sbb
neg
hlt
ja
dec
fs
jb
out
mov
in
push
mov
popf
js
jg
or
jo
jns
adc
and
repnz
loope
sbb
cmpsb
out
mov
ljmp
mov
mov
fldln2
lret
xor
movsl
pop
aaa
add
or
push
out
and
repz
das
imul
pop
cmp
add
lds
add
andl
xchg
inc
lods
es
bound
sbb
dec
imul
dec
sub
fsubr
cli
imull
cmp
push
cmp
stos
repnz
jp
inc
int3
test
cld
add
mov
fndisi(8087
and
dec
gs
pop
jmp
shl
fcomps
or
in
gs
xlat
hlt
mov
ds
mov
sub
cmpsb
dec
aad
xor
adc
lock
jl
pop
and
fldenv
adc
shlb
xor
mov
mov
sub
jmp
dec
add
call
lcall
jge
ret
stos
lret
cmc
jl
imul
aad
cmp
xor
dec
add
repz
xor
inc
dec
cwtl
jp
stos
xor
mov
iret
loopne
clc
jge
add
sbb
lods
mov
xchg
mov
mov
jne
jg
xchg
cmp
stc
gs
sub
and
jo
ljmp
lds
leave
pop
sbb
push
lret
lcall
add
mov
sub
sbb
repnz
idiv
adc
sbbb
test
push
or
inc
sub
push
jl
mov
dec
into
xor
scas
sbb
adc
mov
xor
cwtl
icebp
pop
int
xchg
add
and
sub
push
lock
pop
xchg
sbb
and
adc
in
mov
jle
xlat
xchg
adc
andl
add
aad
clc
movsb
stc
add
and
xor
xchg
xchg
int
dec
pusha
xor
adc
inc
mov
std
mov
push
fwait
test
imul
pusha
roll
dec
xchg
clc
in
addb
inc
ljmp
mov
jge
data16
ss
test
lcall
jmp
pop
inc
stos
lea
stos
jae
push
sub
mov
mov
mov
adc
dec
lods
and
jl
or
insl
mov
in
jmp
push
xchg
cltd
cmp
adc
or
adc
orl
loope
pop
into
xor
inc
pop
andl
fwait
in
sub
sbb
rorb
push
repz
test
fld1
cmp
lods
mov
cltd
sbb
sbbb
sbb
idivl
sub
in
mov
repnz
fidivs
das
and
mov
push
call
repnz
mov
mov
loopne
fmull
sub
jo
cmp
sbb
inc
xchg
frstor
mov
stc
scas
subb
jecxz
daa
dec
in
sub
sbb
and
sar
popf
fxam
iret
loope
imul
dec
stc
push
dec
lods
jae
pop
ds
cltd
popf
sub
dec
int
jae
test
je
in
scas
jo
test
or
stos
scas
pop
xlat
stos
sub
xor
pop
jb
pop
ss
daa
and
adc
mov
push
push
jb
or
xor
hlt
xor
popa
jbe
stos
pop
es
aam
and
xchg
inc
cld
push
add
sub
mov
leave
outsb
lret
imul
add
jg
ljmp
and
or
loopne
orb
xlat
dec
cmp
das
adc
enter
push
xchg
test
orb
ja
jecxz
adc
fs
pushf
add
push
or
pop
in
sub
fwait
mov
sahf
cmpsl
xlat
pop
cmpsb
shl
test
mov
dec
stos
int
xchg
or
movsl
or
pusha
movsl
lcall
mov
je
cmp
lods
lds
pop
cmp
or
mov
jno
jb
push
loop
xlat
sbb
ljmp
lods
frstor
clc
pop
sub
jae
loope
nop
adc
rorb
mov
test
inc
dec
insl
pop
push
push
add
imul
leave
pop
dec
cld
and
xchg
adc
xor
rolb
loope
pop
shll
in
push
sbb
jl
mov
jecxz
push
push
pop
scas
dec
inc
aas
shr
mov
sti
stc
xchg
add
lock
aam
and
fwait
mov
jnp
and
imul
jno
sub
rcrb
fldcw
sbb
sbb
add
cmp
int3
lret
xchg
or
inc
inc
xor
add
fcoml
jnp
mov
pop
fistl
add
cwtl
lcall
mov
mov
xor
les
dec
lcall
push
inc
xorb
jno
stos
leave
clc
gs
mov
mov
mov
and
jbe
xchg
mov
and
cmp
jne
jmp
mov
mov
test
xchg
stos
mov
mov
negl
out
pop
sarb
cmp
xor
jne
lock
adc
mov
div
enter
sub
sahf
mov
mov
or
sbb
pushf
mov
andps
xchg
stos
pop
div
mov
pop
pop
out
mov
sub
loop
jno
aad
insl
jne
js
pop
out
add
push
inc
lcall
leave
rcll
push
inc
daa
int
and
out
xor
xor
pop
push
mov
add
fimuls
mov
mov
popa
aad
xor
in
pop
insl
sub
mov
repnz
push
popf
or
inc
dec
push
call
ss
cmp
std
jle
push
and
pop
sbb
addb
repz
pop
jb
jg
inc
xchg
cmpsb
sbbb
push
lea
inc
xor
dec
cld
mov
mov
fwait
cmp
scas
popf
jno
gs
mov
mov
adc
inc
rcrl
sbb
stc
faddp
add
clc
mov
in
inc
iret
xor
dec
data16
ljmp
jno
imul
jns
js
adcl
xor
push
push
ffree
call
mov
loope
clc
and
outsl
xor
ret
adc
cmp
rcrb
iret
jb
dec
mov
imul
fldl
in
inc
daa
fwait
pop
fcmovbe
adc
imul
jmp
lahf
shll
jae
pop
addl
push
pop
in
sti
push
sbb
cmp
sbbb
xchg
or
in
sub
sub
stos
cltd
std
call
xchg
push
fcomps
cmp
inc
lock
pop
stc
adc
dec
mov
or
sub
mov
pusha
xchg
dec
repnz
dec
int
jae
lds
popa
loop
and
mov
cmc
lods
mov
scas
imul
lock
test
jo
popf
in
movsb
push
mov
lds
adc
or
sti
lea
jns
pushw
cmp
jge
or
xlat
out
lcall
sub
xor
es
sub
mov
shlb
popf
add
xor
mov
or
mov
adc
lcall
sbb
xchg
mov
mov
xchg
test
jbe
sub
xchg
aam
mov
cmpsb
jne
pop
push
and
dec
aam
push
cmpsb
les
pop
add
inc
out
jno
sub
push
sbb
bound
out
and
testb
daa
xor
xor
push
mov
mov
push
bound
sub
faddl
add
sbb
pop
ss
out
cs
ss
aaa
cmp
mov
sub
add
ret
jge
adc
xchg
and
sbb
pop
jl
and
jle
cmpsb
jecxz
mov
pusha
xchg
js
filds
dec
push
mov
data16
mov
jecxz
mov
adc
xchg
cmc
pop
xchg
pop
imul
lock
inc
repnz
aam
cmpl
cs
xchg
cmpsl
cmc
push
aas
push
aam
stos
pop
sbb
mov
xchg
shll
leave
popf
sub
imull
in
xchg
call
add
xor
xchg
jmp
ljmp
test
xchg
enter
int3
stc
mov
stc
push
negb
pop
icebp
mov
lahf
mov
jge
jbe
out
xchg
data16
pop
xor
iret
sbbb
push
sar
cwtl
push
call
push
push
cltd
test
push
mov
test
jno
loop
sub
pop
or
sbb
sub
mov
leave
or
pop
or
jbe
mov
mov
cmpsb
lods
sub
fdivr
jb
ja
hlt
push
sbb
and
dec
not
sbb
dec
pop
add
xor
in
loopne
adc
int
les
mov
or
dec
in
jo
dec
ss
in
cmp
ja
inc
adc
or
movsb
or
daa
cmp
mov
fidivl
out
loope
arpl
test
cld
push
mov
or
pushf
lods
cwtl
ret
lret
addr16
cmp
xchg
push
inc
mov
sbb
vsqrtpd
adc
jae
in
jl
pop
inc
mov
lret
sbb
sub
lods
or
and
sub
sub
cmp
sti
pop
push
addl
enter
iret
push
fbld
das
push
loopne
sub
mov
and
mov
sub
ljmp
lcall
negl
push
sti
mov
sub
inc
idiv
and
adc
push
cmp
adc
cli
loopne,pt
dec
cmp
mov
adc
js
push
add
and
xor
rcll
ja
mov
into
bswap
push
imul
dec
jmp
mov
push
pop
push
mov
inc
cmp
mov
stc
pop
sub
inc
inc
lods
or
aas
ret
stos
mov
mov
xchg
cmc
scas
repnz
in
icebp
dec
and
jg
jne
out
sahf
movsb
or
movb
sub
cmp
push
sbb
enter
stos
cld
int
sub
lcall
ljmp
mov
fildll
test
lahf
data16
cmp
mov
or
jo
adc
mov
lcall
and
mov
movsb
pop
movsb
mov
lock
test
pop
enter
aad
popa
add
test
ds
shl
push
test
iret
cltd
clc
out
std
or
das
cmp
testb
jo
push
dec
popf
mov
xlat
cwtl
das
aam
jae
inc
fnclex
vmovapd
loope
aaa
ret
mov
dec
call
cwtl
outsb
push
popf
jo
jmp
in
sbb
sub
xchg
test
add
mov
sub
les
shrl
pop
pop
jnp
rolb
mov
cmp
jecxz
xchg
xlat
addb
mov
pusha
pop
sbb
insb
nop
cli
cmpsl
testl
or
inc
insb
fidivl
pop
sbb
xchg
sub
jo
push
xchg
pop
lds
cmc
repnz
xchg
push
jle
adc
pop
cmp
stos
xchg
repnz
jl
sti
cmpsl
jae
push
or
inc
or
cmp
jo
mov
aam
aas
or
pop
popf
test
lret
icebp
add
xchg
fcmovb
sub
mov
fs
mov
mov
mov
les
fwait
jg
test
cs
data16
dec
sbb
jle
sbb
in
add
sbb
mov
pushf
pop
xor
test
xor
lds
xchg
mov
jnp
jo
jle
mov
lahf
in
hlt
cmp
xlat
xchg
lods
mov
ss
cltd
scas
out
mov
dec
push
xor
xchg
and
sub
js
test
out
int3
push
pop
xor
or
icebp
test
xchg
push
fdivl
insb
pop
aaa
or
or
xchg
scas
in
addr16
leave
dec
cmp
call
cmc
mov
fwait
xlat
lods
out
or
and
jnp
xor
sub
and
outsb
in
jbe
xor
dec
jns
xchg
cmp
mov
fdivrp
xor
sub
mov
out
test
mov
jmp
cmp
inc
inc
jo
mov
mov
xor
movsl
orb
dec
bnd
cmp
or
xchg
mov
mov
stos
lock
xchg
dec
lea
in
out
dec
bound
mov
jae
fwait
push
dec
frstor
xor
adc
push
xchg
lret
mov
stc
sbb
ja
and
nop
negb
lgs
push
ja
jb
xchg
iret
loop
mov
pmulhuw
xchg
mov
cltd
adc
sub
push
jg
outsl
xchg
test
movsb
adc
adc
inc
cmp
lret
mov
std
dec
pusha
cld
lahf
data16
popa
aas
dec
xor
sub
ja
fs
mulb
ret
inc
es
cmp
push
dec
out
adc
sub
dec
adc
cmpsl
pop
mov
ja
into
ret
call
pop
ljmp
pop
mov
stos
and
jne
lret
fsubs
pop
xchg
xor
addr16
or
fldt
push
add
ds
shl
lods
repnz
addr16
rclb
into
push
mov
jae
sbb
pop
or
mov
add
enter
inc
cmpsb
repnz
movsb
push
sub
dec
rcl
jne
imul
sbb
or
rorb
rclb
ss
lock
inc
movsl
adc
dec
sbb
es
adcb
inc
inc
mov
repnz
xchg
call
push
cwtl
push
or
test
dec
aas
dec
repz
jnp
mov
ret
mov
ficomps
faddl
rep
repz
cmp
push
dec
inc
fmul
into
xor
scas
and
push
fs
xor
scas
xlat
cmp
adc
and
sub
cltd
xor
jnp
bound
jnp
pop
mov
lahf
test
enter
push
mov
cltd
pop
xor
xchg
xor
mov
fs
imul
call
sahf
je
jno
jmp
addr16
jle
repz
cmp
jg
pop
jnp
jo
inc
arpl
lcall
pop
add
icebp
inc
pop
cmp
stc
lock
ja
add
pop
inc
mov
in
jmp
mov
and
imulb
push
int3
cmp
jmp
push
xor
jmp
mov
sbb
fs
pop
add
stos
inc
pop
jl
ja
cs
std
in
shl
push
push
xor
push
xor
aaa
pop
xor
pusha
fistpll
rcrl
in
rorb
aad
pop
movsl
push
lret
pushf
popa
sub
vmovapd
push
das
push
sbb
andl
ss
dec
pop
add
ds
or
push
into
out
xchg
jnp
inc
push
push
jmp
mov
repnz
dec
cmp
fucomi
adc
sbb
out
sub
shrb
mov
mov
mov
or
repz
add
jg
jg
adc
or
popf
jmp
push
out
ja
testb
js
pushf
mov
mov
rcl
push
dec
in
sbb
sar
pop
imul
cmpsb
xchg
adc
mov
cmp
xchg
mov
pop
and
sbb
add
ja
mov
dec
mov
jecxz
pushf
push
xor
xor
jmp
into
mov
movsb
sbb
icebp
repz
sbb
stos
cwtl
movsl
cmp
xlat
jb
push
cmp
push
imul
sbb
cli
mov
inc
or
adc
mov
sti
rorb
push
push
enter
xorb
cmpsl
mov
mov
cltd
push
mov
sub
shufpd
roll
cltd
jbe
xor
cwtl
outsb
std
andb
test
sbb
dec
jge
pop
xorl
fistl
cmp
cmp
jbe
cmpsl
mov
inc
xchg
loopne
or
sub
scas
movsb
mov
cmp
push
mov
in
shrl
cmp
jl
insb
fdivl
ljmp
imul
aas
push
or
or
adc
and
adc
movsb
pop
nop
adc
mov
or
lods
hlt
xchg
add
mov
adc
movb
dec
in
faddl
arpl
inc
aam
dec
jne
mov
hlt
adc
xchg
pushf
out
incb
out
inc
sub
inc
gs
movsb
aam
jl
push
sbb
icebp
cmp
lods
push
add
shll
pop
cmp
mov
pop
mov
out
xor
lret
dec
mov
sub
or
and
mov
push
mov
in
insl
dec
jae
inc
cs
push
addr16
cmp
adc
iret
loope
cs
pop
add
inc
out
stos
dec
clc
mov
lock
pop
scas
lds
jo
stos
xchg
adc
not
inc
and
js
push
jp
rcrl
push
dec
mov
lahf
cld
jecxz
cld
fldt
dec
push
dec
scas
std
jle
dec
out
rcrb
pop
cmp
mov
fldcw
fimull
ja
notl
cmc
and
or
mov
out
push
mov
sbb
inc
cmp
dec
enter
and
add
js
sub
scas
inc
sbb
xor
push
push
ret
mov
je
lahf
leave
push
mov
xor
push
cld
xor
inc
push
adc
scas
shll
sahf
imulb
push
add
or
pop
or
mov
shr
add
xchg
jl
fsubrl
rcr
cltd
inc
pop
jbe
xor
adc
inc
xchg
jns
sub
int
mov
subb
push
je
je
or
testb
stos
loope
inc
jno
test
cli
lret
outsl
loop
insl
imul
add
inc
cs
lods
jl
push
cmp
into
and
pop
fstps
jnp
xor
sbb
loopne
roll
mov
aaa
orb
je
in
jnp
insb
ljmp
sub
mov
fmuls
jge
add
sbbl
loop
enter
imul
int3
aad
call
pop
push
nop
outsl
mov
xor
outsl
sahf
push
loop
lret
xchg
pop
lahf
incb
xchg
sbb
cmc
in
adc
adc
test
fistl
out
jl
and
or
and
test
sub
dec
ror
orb
xor
xchg
mov
and
sbb
dec
pop
icebp
jne,pt
push
pop
subl
mov
sti
repz
insb
lea
lds
aam
sub
and
add
jne
lea
movsb
aam
movsl
arpl
mov
dec
fldenv
repz
imul
jae
sti
inc
in
sbb
cmp
out
mov
int
loopne
pop
int
andl
adc
rolb
mov
rcrl
lahf
aaa
push
mov
adc
insl
lret
ja
xor
mov
and
pop
jb
inc
shr
push
imul
adc
rorb
lret
inc
pushf
aam
push
inc
lods
mov
or
es
or
loopne
cmpsl
lret
pop
pop
push
cmp
shlb
lock
dec
into
popa
dec
push
push
in
cmp
push
mov
imul
lods
mov
stc
int3
lods
add
lods
lds
imul
and
add
jle
outsb
fiadds
call
ffreep
arpl
movsl
stos
ret
fs
inc
mov
cli
push
pop
outsb
sahf
xor
in
hlt
and
cmc
mov
das
lods
fwait
mov
ret
imul
xor
and
bound
or
dec
push
call
pop
js
push
add
sub
sahf
out
cmpsl
mov
in
sbbb
mov
imul
fs
movsb
jg
in
test
imull
ljmp
xchg
mov
ror
out
pop
cli
jb
mov
pusha
push
loope
xchg
add
das
ret
and
divb
call
outsl
jnp
jb
iret
pop
jle
push
mov
jle
sub
mov
sbb
arpl
call
fldl
test
sbb
sub
loop
test
mov
inc
sahf
mov
int
adc
divl
xor
pop
leave
lock
jl
jmp
cmp
inc
dec
mov
and
jae
insl
xor
sbb
sub
dec
adc
mov
mov
lahf
imul
ljmp
jg
pop
xchg
es
idivb
dec
movsb
xchg
mov
push
or
pushf
mov
hlt
cmp
jae
in
frstor
loope
mov
xor
cmc
sbb
jecxz
inc
das
sbb
xor
and
add
das
mov
test
push
ja
ds
add
scas
mov
jp
nop
lock
cmp
cmc
inc
cli
leave
pop
icebp
dec
sbb
test
jl
les
xchg
les
sub
out
fcmovbe
nop
test
add
fisubl
xchg
pusha
jns
or
inc
mov
inc
lcall
cmp
adc
mov
mov
daa
xchg
je
pop
push
mov
ljmp
jge
push
inc
fsubr
pop
fsubr
sti
psubsb
loop
push
cmp
jmp
and
sahf
or
jae
js
mov
orb
inc
sbb
jne
or
sbb
testl
in
mov
adc
add
sbb
xlat
das
pop
xchg
jg
rcrl
in
mov
js
xor
mov
decl
addr16
jmp
pop
cmp
adc
lods
stc
test
xchg
xchg
pop
pop
pop
insl
xchg
mov
cli
or
cltd
jge
push
adc
enter
int
addr16
popw
int
dec
cmpsb
pop
int3
adc
movsl
imulb
sbb
xchg
fidivrl
or
xchg
push
or
mov
mov
pushf
pop
or
push
and
sti
jne
insb
aaa
and
roll
mov
inc
mov
fwait
sti
ja
push
push
xlat
cmp
out
ret
jne
call
movsl
cs
shr
ret
lahf
outsb
cmpsl
xchg
movsb
leave
add
rcrb
push
shrb
in
mov
xchg
sub
mov
testl
arpl
or
push
jbe
fisubrl
movsb
and
mov
clc
lods
xor
test
mov
mov
js
jne
in
jp
aaa
mov
aas
pop
mov
jge
mov
icebp
lretw
mov
lret
outsb
add
xor
dec
xor
xchg
sti
outsl
sub
cmp
and
popa
jmp
dec
in
ja
movlps
xchg
gs
xchg
mov
repnz
cmp
jns
cld
mov
enter
and
sbb
lods
scas
push
repz
aam
adc
fdivl
mov
out
loopne
cmp
push
mov
or
add
sbb
rcrl
test
and
bswap
popa
xor
lds
push
arpl
cmp
imul
fbld
je
sub
pop
and
rclb
push
pushf
or
sub
pop
cwtl
cmp
mov
inc
loopne
mov
or
arpl
jl
push
ficompl
and
mov
dec
rcll
roll
mov
std
adc
mov
mov
and
xorb
dec
cmp
mov
mov
adc
mov
cmp
clc
cmc
out
frstor
sub
enter
idivl
and
call
push
lahf
or
or
push
mov
sti
std
movsl
sub
add
shr
divb
inc
cmpsl
push
enter
lods
mov
stc
xor
push
inc
mov
out
das
fs
stos
dec
and
ljmp
cmp
mov
scas
mov
xlat
jg
fs
dec
xchg
cmp
int
dec
jb
and
xor
jns
cmp
ss
ret
into
inc
mov
pop
adc
rorl
add
je
pop
push
lcall
cli
out
nop
addr16
jecxz
mov
xchg
dec
add
and
jle
fdivrl
cmp
dec
push
out
sub
aad
out
bound
and
outsl
ja
jo
xchg
adc
lretw
or
push
lods
aad
push
jl
cwtl
sahf
adc
out
and
mov
sub
dec
mov
test
lods
loopne
filds
cmp
jne
out
jbe
enter
sbb
and
or
bound
loop
or
mov
dec
out
xor
sub
xor
rclb
xor
js
mov
jecxz
cmp
jns
pop
add
pop
lock
jl
pop
std
push
cld
jno
sbb
xor
xchg
aas
sub
mov
push
aam
lret
addl
xchg
and
mov
push
add
push
jmp
jo
fildl
das
jno
sub
inc
xor
cmpsb
xchg
xor
xorb
sub
dec
pop
fstpl
lods
jno
jge
gs
mov
pop
adc
xchg
mov
sub
scas
fsts
ret
lahf
out
add
inc
dec
inc
fldz
or
jb
adc
dec
mov
loop
adc
imul
adcb
out
xor
push
imul
inc
aam
repnz
fstpt
dec
rorb
outsl
cwtl
or
inc
arpl
scas
das
push
aad
into
jecxz
cmc
mov
je
fs
sub
pop
hlt
nop
mov
mov
les
xchg
jns
nop
test
lret
xlat
push
jg
lea
daa
mov
xor
jp
push
pop
sahf
daa
out
xor
push
mov
fists
mov
pop
lds
add
dec
sub
mov
mov
add
outsb
sub
dec
or
sbb
jbe
xor
icebp
or
sbb
push
data16
cli
push
add
icebp
sbb
xor
shlb
adc
leave
adc
jbe
pop
or
or
inc
push
xlat
mov
orl
hlt
fdivs
out
cli
mov
mov
cmp
test
pusha
mov
mov
into
insb
or
arpl
movsl
mov
stc
or
sub
sbbb
pop
or
add
and
std
add
mov
nop
jo
test
repz
xchg
xchg
outsb
cmp
xchg
or
adcl
cwtl
cmp
adc
sub
enter
pop
shrl
inc
jne
fcomip
stc
and
lret
stos
push
out
sahf
fst
in
bound
aas
mov
or
lea
fldl
mov
loopne
mov
pop
or
sbb
sahf
rol
cli
adc
sahf
mov
fidivs
clc
repz
outsb
xlat
int3
jne
sub
out
jle
das
and
fdivrl
or
out
in
push
repz
imul
aaa
xchg
adc
cmp
orl
push
lret
shll
pop
sbb
lods
lods
pop
xchg
or
aaa
in
and
pop
mov
mov
mov
je
repz
imul
je
mov
xor
mov
xor
and
sbb
outsb
push
xor
clc
jge
mov
fs
cmp
cwtl
jp
add
dec
leave
push
dec
leave
imul
jmp
andb
or
testb
push
sub
sub
mov
fdivr
bound
addb
and
shlb
mov
orl
add
jns
movsb
cmc
mov
push
dec
call
mov
mov
mov
mov
addr16
mov
cmp
dec
dec
mov
jge
cld
jno
dec
push
pop
sti
mov
lahf
and
mov
dec
xchg
mov
ret
jne
mov
lock
out
jecxz
cmp
jnp
in
jp
lock
mov
mov
inc
add
xor
or
test
mov
fmuls
loop
out
sub
xchg
fwait
aad
mov
sub
inc
lret
jg
cli
jbe
sbb
or
cmp
fldl
div
int3
daa
add
in
push
hlt
daa
pop
jb
lret
imul
sarb
imul
mov
test
cld
xchg
aam
lcall
xlat
lret
cmovl
mov
movsl
subb
lret
jo
test
jge
pop
sarl
xor
or
xchg
sahf
pop
push
mov
arpl
ficoms
mov
mov
loope
xchg
add
std
add
cmovle
fiadds
jl
mov
mov
dec
jo
jmp
pop
jns
jo
pop
xchg
movsb
jae
jne
fisttps
hlt
sahf
push
xor
out
sub
dec
mov
shlb
das
cld
xchg
ljmp
hlt
cld
repz
fs
xor
mov
loopne
clc
std
fldcw
lcall
mov
int3
jbe
notl
adc
rcrl
xor
mov
outsl
xor
movsl
sbb
dec
push
mov
rcrl
cmp
ret
call
cmp
clc
add
into
dec
cmpb
arpl
sub
out
iret
jp
pop
sub
outsl
dec
popa
fcoml
shr
mov
dec
push
inc
jmp
push
movsl
loopne
inc
les
cli
out
pop
xchg
mov
jae,pn
inc
out
cmp
fdivl
les
mov
and
xor
rolb
lahf
and
mov
arpl
movsl
outsb
or
mov
ss
sbb
and
mov
movl
dec
add
push
dec
das
call
stos
inc
dec
jp
jb
sti
add
aaa
stos
cltd
mov
test
xor
icebp
dec
in
xor
adc
add
dec
add
xor
and
mov
cmpsb
and
pop
push
pop
out
icebp
mov
nop
lret
divb
aas
dec
shlb
in
addb
rolb
sub
mov
sti
rcl
jecxz
mov
ss
das
adc
dec
insl
sbb
jne
sbb
ljmp
jecxz
sub
icebp
faddl
in
mov
loop
or
cmp
add
or
sub
push
std
repz
pop
lahf
leave
mov
cmpsb
into
xchg
mov
inc
cltd
bound
push
xchg
xchg
xchg
movsb
aas
push
sbbb
cmp
push
cs
in
mov
sbb
add
test
mov
pusha
ljmp
xchg
sub
xlat
sub
adc
lahf
adc
inc
idivl
jns
push
sub
enter
add
sbb
movl
shll
out
xchg
das
jns
cmp
incb
xchg
or
add
pop
popa
dec
mov
pop
inc
push
daa
lret
push
add
add
out
aad
shlb
sub
cli
dec
ret
inc
pop
or
jns
mov
pop
or
loopne
out
mov
mov
mov
xchg
mov
cli
mov
inc
xchg
lret
shr
pop
dec
mov
xchg
push
jb
and
fstpl
in
pop
cli
sti
loopne
mov
sub
arpl
xchg
cmp
jmp
jne
adc
mov
icebp
rorb
out
push
adc
aaa
cmp
nop
dec
mov
inc
sbb
sbb
in
dec
shrl
push
fiadds
and
adc
pop
repnz
bound
test
cli
outsl
add
adc
jecxz
mov
out
clc
data16
adc
inc
cmp
movsl
sbbl
rorb
stc
mov
int3
sbb
jno
test
mov
stc
pusha
nop
lret
mov
pop
mov
outsl
jge
sub
mov
roll
scas
xchg
mov
loopne
push
and
stos
xor
push
sbb
jmp
jmp
pop
push
je
pushf
fmull
outsl
inc
xlat
lea
or
movsl
pop
sub
cmc
subl
pop
and
pop
pop
jmp
lret
adc
les
sbb
fs
ja
dec
push
addr16
push
sbb
inc
inc
sub
mov
xor
ss
push
sbb
push
inc
inc
adc
sbb
xchg
cli
loopew
push
inc
cltd
fsave
sbb
movsl
and
enter
cmpsl
pop
aad
xchg
pop
xlat
aam
insl
jo
stos
mov
pop
repnz
add
jno
lcall
adc
ja
call
in
dec
hlt
mov
loopne
cltd
sahf
sub
mov
xchg
and
jecxz
push
xchg
or
loope
jae
lods
xchg
je
pushf
sbb
mov
or
popf
pop
out
jle
clc
in
fdiv
adc
jmp
jae
push
clc
mov
xor
fwait
add
mov
mov
push
fs
in
imul
add
mov
pop
adc
lods
scas
mov
jb
add
xchg
cmpsb
and
insb
mov
clc
add
addb
jb
mov
mov
jg
cmp
std
mov
sbb
dec
mov
or
fdivs
bound
push
fcoms
adc
aas
idivl
push
inc
shr
sub
jl
add
adc
push
aad
in
push
sbb
push
int3
cmpsb
ffree
aam
mov
sbb
adc
addr16
cmp
cmp
dec
pop
ret
loopne
in
sbb
fs
cmp
xor
push
add
push
mov
int
test
cmp
ret
and
fs
sub
xchg
mov
cmpsl
xor
lret
inc
and
data16
adc
int
pop
fstpt
dec
push
hlt
ljmp
and
fimuls
lock
inc
dec
jne
dec
hlt
addr16
dec
cmpsl
stc
insb
mov
push
dec
inc
js
loop
lret
jno
dec
pop
int3
shrb
or
jo
and
scas
sub
incl
leave
sub
jnp
je
fadds
out
jecxz
movsl
in
add
pop
xchg
fstl
mov
dec
into
mov
test
cwtl
inc
das
loopne
stos
outsb
jne
das
cld
xchg
loope
xchg
mov
pop
mov
jmp
jecxz
jg
cs
neg
insb
fwait
cmp
or
sub
dec
fldcw
scas
mov
stc
push
fisttpll
pop
xor
cltd
vcvtpd2dq
cmp
addb
fs
scas
mov
and
pop
sti
fidivs
mov
push
mov
push
push
mov
mov
test
test
imul
ljmp
dec
mov
mov
cmpsl
jb
in
nop
ljmp
push
sar
sahf
pop
pop
stos
inc
test
sbb
cmp
dec
jle
inc
inc
mov
scas
lret
mov
jo
xor
pop
sub
mov
int
sbb
xchg
jae
pushf
and
rorl
dec
shr
or
std
add
sub
out
out
lds
test
lret
lods
sbb
repz
xchg
nop
mov
push
mov
fisttpl
hlt
les
xor
adc
jge
xlat
test
mov
xchg
pop
jne
scas
repnz
dec
sub
testl
push
mov
xchg
jp
inc
mov
ljmp
aam
push
sub
iret
pop
dec
inc
and
mov
sbb
test
inc
xchg
jo
and
int
xchg
call
cld
cmp
lret
scas
inc
out
dec
lret
push
jns
xchg
fistl
sti
sub
loope
mov
sbb
ret
push
call
icebp
bnd
imul
pop
push
adc
test
push
pop
mov
test
adc
enter
or
subl
pusha
inc
lods
push
xor
in
andb
inc
cmpsl
xchg
push
mov
lret
pop
pusha
in
pop
rcrb
rclb
stos
mov
lds
mov
fwait
or
xchg
pop
and
in
sub
adc
dec
fwait
call
xor
sub
jns
sub
xchg
repz
sub
xchg
enter
cmpsb
enter
mov
divl
call
inc
cmp
sub
adc
dec
flds
xchg
jno
and
sub
stos
xchg
jge
mov
xlat
push
hlt
inc
adc
inc
in
jp
mov
mov
adc
mov
jb
push
ja
subb
and
fcoms
cli
fucom
push
mull
inc
adc
out
cmp
aad
push
cmp
cmp
sub
add
xor
jmp
mov
mov
pop
fcomp
insl
insl
mov
and
sarb
cld
mov
cmp
add
cmp
lret
fs
inc
xchg
aad
inc
ss
int
mov
cmp
out
repz
test
push
cwtl
dec
repnz
sbb
out
cmp
pop
pop
loope
jmp
and
test
outsl
lcall
jb
fs
loop
shl
add
dec
or
je
mov
push
inc
filds
push
imul
mov
add
test
and
roll
xchg
mov
shlb
scas
test
test
or
xor
arpl
das
ds
adc
mov
insl
mov
cli
jg
add
iret
pusha
sbb
mov
mov
inc
fs
or
pop
inc
mov
repz
insb
daa
push
jle
xchg
sbbl
lea
lahf
stos
dec
lret
xlat
aaa
sub
icebp
jp
adc
aas
jmp
rolb
ret
cmp
popa
jecxz
push
sub
push
xor
mov
nop
jle
xor
mov
or
and
push
jl
stc
pop
fisttps
addl
repz
jnp
dec
sub
arpl
je
sbb
in
xchg
outsb
mov
incl
jmp
sarb
mov
pop
jb
pop
jnp
mov
push
sub
or
shl
hlt
or
pop
or
data16
inc
sub
je
jmp
add
cmpsl
or
movsl
popa
insl
dec
xor
and
dec
mov
test
push
daa
fisubs
out
js
aam
pop
cmpsl
push
sub
or
imul
outsb
in
mov
mov
cmp
or
ss
ret
xlat
loope
pop
stc
pop
rorl
xor
pop
loop
adc
or
nop
jp
aam
pop
test
xchg
push
jno
fucom
das
push
pushf
adc
fwait
loopne
sub
sar
xchg
mov
mov
inc
pop
fidivl
cmp
xor
test
xor
mov
in
xor
mov
mov
cmp
add
jle
pop
push
repnz
shll
es
inc
aas
nop
xlat
jne
icebp
imulb
fucom
adc
movsb
subb
iret
and
out
and
ret
lds
int3
loop
mov
mov
cltd
mov
mov
icebp
adcl
sub
mov
fisubrs
and
jnp
add
lret
and
pop
sub
insl
push
insl
adc
adc
add
pop
sbb
pop
jecxz
mov
push
movl
test
jns
pop
rcl
inc
xchg
sbb
into
clc
ret
and
xchg
xchg
and
fmuls
mov
hlt
inc
test
push
adc
jl
fs
int3
popf
or
mov
pinsrw
mov
sub
imul
cs
mov
mov
movsl
test
or
arpl
cmp
jo
roll
or
or
xchg
out
pop
pop
iret
jle
and
out
inc
xor
add
lea
mov
mov
dec
aas
jno
mov
lods
fs
mov
cmp
imul
cmp
xor
or
xchg
lcall
inc
pop
cmp
out
and
add
and
scas
mov
int3
aas
push
ret
push
daa
pusha
push
lea
sub
xchg
sub
add
icebp
cmp
scas
jb
inc
imulb
inc
dec
sub
and
push
popa
out
sbb
sbb
xchg
enter
push
jae
jp
push
xchg
mov
fisubrs
movl
mov
sbb
imul
cmp
or
pop
push
mov
mov
xor
fdivs
in
sbb
mov
sub
jnp
sbb
int
inc
add
and
mov
ss
jae
lock
mov
into
ds
std
pop
les
int3
add
add
mov
mov
dec
nop
inc
xor
jno
nop
and
pushf
xor
lcall
insb
shlb
cmpsl
inc
sarb
add
sub
push
xor
addb
repnz
es
out
jne
pop
push
mov
push
and
pop
cwtl
enter
jb
or
push
fsts
add
ljmp
mov
loopne
xchg
push
jecxz
jb
mov
stc
pop
mov
push
je
loopne
cmp
adc
mov
movsb
pusha
mov
in
jne
test
xchg
jl
fidivl
add
mov
pop
and
out
push
inc
lock
and
into
movsb
ljmp
dec
jecxz
into
daa
mov
adc
cmp
cmp
push
push
in
cld
lods
cmp
ja
xor
ljmp
xor
xor
mov
arpl
jne
xchg
xor
sti
jmp
mov
clc
mov
inc
sbbb
shlb
sahf
xchg
roll
stc
pop
or
adc
pop
addr16
pusha
inc
cli
enter
fidivrs
jl
ret
adc
or
rorl
scas
bound
out
inc
bound
pop
adc
cli
push
mov
inc
cmp
arpl
sahf
aad
sarb
mov
lea
mov
fnstcw
hlt
scas
push
addl
jmp
adcb
or
mov
dec
fisubrs
bound
jb
add
xchg
mov
mov
xor
xchg
fsubr
fwait
cmpsb
cmp
pop
ficompl
int
clc
xchg
jmp
addr16
dec
imul
or
push
mov
test
in
daa
pop
cmp
rol
imul
js
pop
dec
pop
jbe
frstor
jge
and
mov
fwait
xchg
gs
xchg
mov
xor
lret
aad
rcl
addr16
push
inc
push
rcll
jno
ret
and
adc
hlt
lock
dec
inc
cmp
test
pusha
sub
or
or
lahf
add
or
lods
or
js
std
jmp
cwtl
xlat
sub
sbb
xor
es
mov
xor
sub
aam
ds
pop
fwait
inc
inc
aad
fdivs
ret
dec
cmp
popa
cltd
mov
sbb
mov
jbe
add
push
fbstp
movsl
pop
mov
jecxz
mov
fstpl
movsb
shl
push
push
sbb
gs
inc
sub
iret
test
inc
lds
cmpsl
es
adc
xchg
cmpxchg8b
pop
enter
or
mov
aam
outsb
leave
loop
and
call
aam
and
add
mov
cmp
outsb
pop
pop
test
ljmp
mov
mov
mov
into
in
inc
pop
or
imul
pop
mov
insb
out
xchg
cmpsl
cli
mov
add
mov
mov
pop
mov
imul
aad
jg
adc
mov
xor
sarb
jo
add
imul
and
cli
call
jp
sbb
insl
daa
mov
movsl
test
xchg
mov
jg
int
pop
inc
sub
orl
sbb
adc
mov
push
aam
cmp
je
leave
sbb
push
cmp
adc
in
mov
mov
sbb
aam
lock
cli
mov
push
andb
fcmovnu
inc
cmp
enter
pop
sbbl
stos
stc
gs
sbb
sahf
dec
pushf
lods
inc
push
xlat
arpl
outsb
or
dec
ss
scas
dec
in
popa
rclb
jne
pop
imul
fwait
gs
hlt
outsl
ds
ljmp
pop
ret
xchg
or
add
or
data16
jns
les
xor
mov
jg
in
sub
jecxz
xlat
aas
bnd
repz
cmp
sbb
leave
out
push
dec
jne
jl
xchg
fnstsw
push
sbb
add
popa
cmp
gs
js
bound
dec
pop
jo
jg
adc
or
jo
push
insl
mov
push
mov
add
sahf
add
sarl
ljmp
cmp
cmp
test
dec
stos
mov
mov
lods
gs
das
push
lret
insb
inc
xchg
and
push
jmp
inc
rorw
push
stos
fwait
jo
fdivs
sub
inc
test
stc
sbb
lret
lgs
lock
sub
mov
xchg
or
fsubrs
fisttpl
jle
or
jp
cmpxchg
push
out
sbb
movsb
cwtl
cmpsl
adc
or
int3
out
jmp
xor
sub
test
mov
pop
xchg
xlat
mov
pop
setl
cmc
mov
shrb
xchg
and
dec
add
jae
mov
jp
dec
mov
loop
loopne
rorw
mov
inc
mov
outsb
test
pop
cltd
leave
sbb
mov
scas
or
cld
jae
loopne
sbb
mov
add
sbbl
mov
imul
outsb
scas
jg
lods
push
fistpl
test
leave
lret
rcll
or
push
mov
ljmp
repz
mov
dec
push
clc
push
loopne
enter
or
daa
imul
xor
fisttpl
jb
adc
inc
std
pop
jno
inc
enter
das
stos
repz
aaa
iret
xchg
out
xor
lcall
sub
dec
insb
aam
ret
pop
lea
cli
mov
xchg
mov
icebp
push
lds
stos
add
insl
jmp
sbb
jmp
adc
ds
jge
cmp
pop
cs
mov
cmc
mov
pusha
lock
mov
enter
movsb
pop
gs
and
movsb
sti
std
xor
sub
or
push
jnp
ja
mov
mov
sbb
cmp
lret
sbb
lcall
loope
xor
mov
hlt
bound
ja
scas
out
mov
repnz
addr16
popa
sbb
xlat
fisttps
ss
push
mov
outsl
outsl
pushf
mov
cltd
ss
js
add
fidivrl
cs
fstl
and
cld
or
iret
lret
aaa
xchg
add
xchg
add
lahf
hlt
push
ret
mov
mov
aaa
dec
fwait
push
dec
mov
cwtl
mov
fsubs
inc
sub
cltd
xchg
lods
mov
pop
xchg
sarl
lods
or
jmp
lods
or
cmp
pop
ss
inc
pop
aaa
or
jo
mov
fdivrl
pop
push
sbb
cld
jg
jne
mov
sti
outsl
mov
aaa
mov
jb
pusha
and
jo
mov
push
pop
lds
sbb
test
insl
mov
lea
cmpsl
and
fcomi
push
mov
setb
popa
cmp
adc
popf
or
fldcw
scas
icebp
dec
ret
lahf
sbb
sbb
or
mov
jp
into
rorb
and
loope
shlb
lods
add
lcall
jb
fnstsw
in
inc
insb
adc
jecxz
jecxz
dec
fadd
lods
out
ds
pop
lods
mov
jb
or
xor
mov
cmpsl
enter
scas
adc
push
ret
push
adc
sub
mov
xor
out
lcall
rorl
rcll
cmp
dec
sbb
dec
add
jp
jns
and
ja
push
jne
mov
jp
jae
pop
pop
ret
mov
cwtl
push
dec
iret
jg
jne
and
sub
test
mov
jp
pop
jns
jp
mov
sbb
sbb
pop
dec
dec
shll
jno
push
and
push
cmp
cmpsl
pop
gs
movsl
lahf
and
pop
inc
mov
jmp
cmp
stos
pop
mov
inc
dec
std
and
mov
sbb
aaa
mov
jmp
xchg
out
fidivrs
jmp
jae
loop
inc
into
cmpsb
xchg
or
pushf
fwait
les
pop
addb
mov
sbb
inc
fisubrs
and
or
cmp
shlb
xor
gs
repnz
lret
add
push
mov
pop
and
cmp
mov
leave
and
xchg
push
and
nop
rorb
sti
pop
push
shll
arpl
adc
dec
nop
js
fcmovb
xchg
cwtl
bound
push
jecxz
jmp
imul
aad
stc
mov
xchg
fcmovne
addb
mov
push
icebp
sbb
movl
and
jp
ret
jg
je
push
sbb
cmp
subb
xchg
mov
int3
jb
jg
in
out
cs
mov
dec
push
push
shlb
xchg
inc
nop
push
iret
data16
scas
adc
sbb
test
and
inc
inc
test
adc
mov
xchg
icebp
out
adc
sbb
adc
or
and
mov
lcall
dec
ja
xchg
nop
xchg
aas
lret
mov
fldt
call
clc
out
pop
fstl
or
or
mov
and
pop
add
xlat
andl
fbstp
ljmp
push
into
jle
addb
cwtl
dec
aas
in
inc
das
stos
jl
sub
sti
cmc
cltd
xor
adc
nop
mov
xor
add
movsb
shrb
lods
addr16
pop
mov
scas
xchg
inc
xchg
fisubrl
mov
pop
js
mov
ss
daa
iret
xorb
and
mov
jmp
shl
loopne
icebp
test
nop
xchg
outsb
daa
xor
push
shll
add
mov
cli
cmp
les
or
mov
test
testb
imul
in
xor
push
iret
fnstsw
pop
mov
movsb
fbstp
mov
jnp
inc
mov
sbb
sbb
cmpsl
inc
dec
shrb
cld
stos
lods
jmp
mov
call
cmp
mov
dec
dec
dec
inc
adc
push
std
gs
cs
xchg
inc
test
out
test
jecxz
inc
call
out
cld
jb
inc
lret
lret
or
and
mov
adc
imul
jecxz
in
scas
xchg
sti
shlb
loopne
enter
pop
fsubrp
int
inc
arpl
and
pop
or
pop
and
inc
repnz
out
pushf
or
nop
int
movl
sub
test
int
push
mov
aas
pop
in
sbb
pop
shrl
hlt
push
int
cmpb
push
jbe
test
lods
xlat
in
out
xchg
inc
jbe
movsb
test
dec
mov
or
or
xor
nop
and
bound
dec
xchg
pop
cmp
roll
add
addr16
pop
xor
outsl
insl
pop
jo
and
fisubrl
push
and
subl
mov
mov
xchg
in
scas
fistps
mov
xchg
lahf
and
outsb
mov
shl
cmp
inc
inc
dec
imul
add
iret
sub
xchg
rolb
scas
mov
or
xchg
call
xchg
jbe
pusha
cmp
xchg
imul
arpl
aad
fwait
mov
rcrb
or
jmp
rcrl
mov
lock
inc
out
push
mov
in
addr16
in
cmpsb
mov
lds
cmc
fldcw
mov
add
add
mov
add
cmp
xor
sbb
out
cmp
xchg
sbb
and
lret
or
int3
insb
push
imul
push
movsb
cmp
jae
jne
jge
pop
push
pop
int
push
mov
mov
mov
or
sub
or
xor
xor
or
mov
out
xor
pusha
mov
mov
cwtl
cmc
cmp
xor
sti
sbb
hlt
jmp
addl
inc
lcall
fs
addr16
and
outsl
cmpsb
test
and
push
mov
sbb
mov
jo
call
inc
add
fstps
adc
mov
popf
pop
int
mov
cli
out
sub
mov
cmp
adc
add
jl
mov
mov
shll
imul
jo
shll
ret
dec
mov
ret
jns
mov
nop
stos
mov
adc
or
insl
xchg
xor
pop
mov
sub
jge
pop
mov
mov
sub
icebp
into
ds
andb
push
push
jae
xor
xor
and
xor
orb
in
scas
lds
xor
sbb
in
movl
cmp
roll
loope
cmpsl
pop
adc
stos
mov
fsubrl
movsb
sbb
push
sbb
aam
jbe
xchg
clc
xor
xchg
fcoml
clc
jle
push
adc
mov
fcoml
stos
cmpsl
xchg
jbe
adc
das
push
insb
mov
jne
cmp
add
xchg
or
decb
push
jo
xchg
mov
loop
jbe
dec
adc
mov
sbb
out
test
ljmp
sbb
add
adc
adc
inc
out
rclb
test
mov
add
mov
mov
adc
icebp
push
test
mov
pop
outsl
call
jnp
inc
jnp
les
dec
mov
loopne
rcl
fwait
pop
mul
pusha
and
mov
lahf
jl
test
mov
or
jmp
and
je
add
notl
movsb
aad
enter
aas
push
sub
cli
pushf
push
call
dec
pop
and
mov
mov
mov
test
popa
lds
aas
fs
jecxz
rcll
add
adc
sahf
inc
out
test
pop
pop
ja
nop
iret
ss
sub
arpl
mov
sub
mov
loope
and
inc
adc
ret
xchg
pop
call
cmp
dec
dec
in
lock
dec
test
cmpsl
xchg
add
insl
pop
lods
push
cmp
add
loopne
fs
cmp
mov
sub
pop
lock
jnp
xchg
aam
lahf
add
int3
scas
add
aas
mov
nop
pusha
jns
shll
inc
rolb
rolb
inc
shrb
cli
in
lods
xlat
lret
les
and
repz
out
inc
push
adc
push
fimull
xchg
sub
lret
pop
and
fldcw
fs
pop
outsb
push
pushf
mov
mov
data16
pop
scas
sub
shll
adc
or
pop
movsb
and
sub
add
sub
out
sbb
pop
mov
scas
scas
sub
mov
pop
ja
out
mov
out
sbb
das
mov
xor
mov
jmp
stos
mov
cltd
outsb
loop
cmp
dec
mov
lods
pminsw
jle
icebp
inc
cmc
mov
repnz
mov
push
pop
dec
and
mov
movsl
push
mov
push
pop
cmp
push
aaa
adc
jp
pushf
fldenv
push
imul
xor
out
push
pushf
iret
cmpsl
and
push
out
idivb
test
rcrb
test
cltd
rclb
lds
popf
cmpsb
push
xchg
nop
add
daa
rol
pop
push
das
pop
cs
or
lret
dec
test
adc
dec
jb
cmp
js
pop
adc
shlb
outsl
add
pop
inc
stc
sub
sbb
pop
icebp
popa
arpl
fbld
iret
sbb
fxam
pop
mov
out
clc
roll
ja
xchg
mov
push
mov
test
jae
mov
movsb
sbb
push
xor
inc
in
sbbb
testb
push
imulb
popa
xlat
outsb
inc
dec
lahf
push
add
ret
mov
pop
add
pop
test
js
aam
push
out
cld
stos
cmp
xor
aas
pop
test
inc
das
mov
adc
insb
lds
push
jo
adc
ret
dec
imul
mov
push
std
xrstor
out
repz
pop
movsl
xor
xchg
jnp
sbb
fidivrl
push
fdivl
fcmovb
jp
adc
pop
lret
mov
loop
icebp
psubusw
iret
mov
sub
jmp
adc
iret
adc
adc
mov
dec
xchg
out
scas
push
shll
mov
shrl
inc
cmpsb
pop
cmp
pop
int
sahf
scas
mov
lret
sub
jg
sub
dec
mov
push
lahf
out
adc
rolb
jmp
mov
fwait
or
push
jge
mov
das
and
mov
jle
jmp
adc
cmpsb
xchg
ret
inc
sahf
push
or
mov
je
sbb
cmp
mov
enter
negl
cmc
out
mov
into
or
fistpl
mov
fiadds
cmp
lods
jo
add
cmp
cmp
shl
jo
shrb
sbb
imul
sub
sub
sbb
pminsw
scas
add
fmull
sahf
pop
mov
iret
jle
push
push
lods
out
jnp
mov
shll
or
and
push
push
push
cmp
test
jle,pn
jo
mov
shll
ds
stc
mov
add
fs
jmp
ss
add
xlat
cmpsl
pop
pop
xchg
push
cmp
push
xchg
sbb
push
or
lcall
mov
test
push
inc
out
jo
jnp
dec
mov
xor
test
cmp
arpl
xchg
dec
int3
dec
push
fwait
push
mov
ljmp
outsb
nop
adc
mov
stc
aam
add
cli
fcmovne
fxch
xchg
movsb
icebp
mov
mov
mov
mov
nop
ret
push
gs
jge
pop
dec
jno
pop
push
divb
aaa
adc
aas
pop
loopne
jo
and
nop
sbb
xor
xor
xlat
inc
mov
imul
iret
aam
fbld
cli
jge
test
mov
repnz
lods
jle
sub
sub
push
aad
add
and
mov
mov
and
outsb
inc
aad
xor
imul
popf
push
icebp
adc
stc
adc
jg
int3
inc
xor
push
or
cmp
push
dec
mov
hlt
scas
dec
fidivrl
xchg
imul
adc
mov
add
aam
and
pop
or
mov
rcll
mov
xchg
es
adc
adc
clc
scas
std
or
insb
jae
in
jle
lea
push
push
push
dec
mov
movsb
adc
pop
rorl
pusha
clc
adc
xchg
repz
sahf
je
or
push
mov
sbb
fstl
lock
std
filds
mov
out
jecxz
push
push
repz
xchg
cmp
or
mov
out
lahf
sbbl
ret
cmpsb
lret
movsl
and
shlb
loope
mov
shrl
mov
or
hlt
cmc
in
dec
and
cmp
dec
lods
aaa
popa
dec
out
sub
iret
cmp
or
add
jl
sbb
lods
xchg
and
shrl
and
das
and
pop
inc
scas
jecxz
cld
aas
cmpsb
push
push
cmpsl
sbb
cli
lahf
dec
xchg
push
add
sahf
xchg
or
in
fcoms
stos
adc
scas
push
sbb
pusha
add
into
js
mov
mov
jmp
js
inc
dec
xor
push
mov
bnd
dec
call
js
mov
lods
ret
mov
into
push
xchg
xor
and
nop
mov
mov
cmp
ds
and
ficompl
sub
adcl
test
clc
xor
loopne
or
les
dec
fadd
push
mov
in
cmp
pop
sbb
sub
dec
mov
lea
pushf
into
repnz
xchg
add
jns
inc
xchg
rcll
and
cltd
pop
xchg
stos
mov
inc
lret
fistl
adc
dec
adc
movsb
inc
jg
test
push
insl
sahf
adc
push
popa
rclb
bound
mov
jle
mov
mov
mov
out
add
aam
mov
inc
cmp
sbb
jg
and
mov
pushf
mov
sbb
clc
lds
and
and
inc
push
push
into
cmpsl
sbb
loopne
jbe
lock
fucomp
push
stos
mov
pop
in
add
sub
cmp
ljmp
cmpsb
jmp
fsts
adc
inc
rcrl
dec
xchg
fwait
jp
or
jge
adc
sbb
adc
sbb
push
sub
xchg
jecxz
dec
arpl
out
faddl
fstpl
mov
jg
add
in
dec
pop
cmp
loope
rcrb
lods
ja
cmpsb
jmp
fnstsw
jp
jbe
sbb
out
cvtpi2ps
lret
popa
jmp
inc
sbb
mov
nop
lcall
cmpl
aaa
imull
lds
and
adc
xchg
sbb
jp
sti
xchg
jl
xor
addb
orb
js
or
ret
jnp
mov
aas
repz
xor
mov
fisubrl
push
fcompl
push
mov
iret
xchg
icebp
mov
or
or
je
pop
dec
and
pop
dec
imul
lret
shrl
and
jle
fcmovbe
dec
sub
incb
jo
adc
inc
hlt
imul
loope
xlat
sarb
std
inc
jo
dec
data16
movb
push
xchg
add
sbb
shr
fcmovne
aad
push
in
dec
cmpsl
mov
arpl
lock
mov
adc
scas
int
lret
xchg
jb
or
cli
push
in
addl
cmp
inc
arpl
mov
icebp
nop
mov
push
pop
mov
lock
pop
inc
fwait
aam
cltd
add
xchg
hlt
clc
adc
popa
xchg
scas
daa
rorl
xor
orl
xor
dec
test
cvtdq2ps
xchg
test
or
pop
xor
test
mov
lret
and
je
xor
xchg
pop
add
mov
enter
lods
xor
xor
sahf
push
lret
cli
rcll
and
test
mov
and
imul
mov
mov
mov
adc
adc
dec
pop
xchg
je
es
inc
adc
mov
inc
inc
fsts
in
sbb
add
pop
fsubl
bswap
push
inc
mov
cmp
testl
sbb
mov
pop
scas
pop
xchg
std
notl
cltd
movsl
loopne
jnp
add
adc
cmp
std
add
popa
xchg
fs
push
pop
mov
popf
movsb
push
mov
push
std
mov
rep
cmc
cld
dec
in
push
inc
lahf
sub
push
xor
lcall
pop
inc
and
dec
adc
pop
mov
jp
outsl
mov
adc
imul
or
lods
sub
jns
cmpsl
fldcw
jb
jl
xlat
mov
andb
sbb
fcoms
fildl
sbb
inc
and
test
ficompl
fxch
mov
push
mov
add
dec
and
xor
push
add
push
mov
out
mov
les
scas
jp
subl
inc
in
add
test
mov
stc
dec
aaa
adc
cld
xor
add
shll
pop
or
cmp
idivl
es
loope
pop
xchg
pop
push
cli
xor
jbe
shlb
pushf
push
lock
loopne
pop
pushf
and
outsl
sbb
stc
jbe
leave
loop
mov
test
leave
in
inc
std
adc
xchg
jle
rorl
inc
insb
xor
roll
loop
jge
loopne
push
or
iret
repnz
mov
cmpsb
js
mov
add
cmpsb
inc
inc
out
jnp
mov
imul
xor
rclb
dec
mov
dec
pop
cmp
jp
jge
sbb
dec
aad
dec
fs
push
jp
sarb
jge
addl
push
aaa
xchg
xchg
fmul
xchg
sub
rorl
pushf
cld
inc
out
inc
int
loope
dec
pop
cmp
dec
fs
out
fistps
addb
inc
add
loopne
jmp
repz
insl
fwait
cmpsb
jo
out
pushf
push
sub
sbb
xchg
pop
mov
aas
xor
mov
pop
in
or
mov
mov
cmp
call
xchg
pop
cmpsb
mov
xchg
mov
sahf
hlt
jmp
pop
in
mov
loop
add
xchg
add
ja
jb
push
movsb
and
lret
daa
scas
xor
in
xor
fldcw
cs
in
out
or
ret
test
fcmovb
test
stos
mov
jns
jp
xor
fs
cmpsl
mov
adc
xchg
dec
xchg
aas
movsb
push
xchg
popa
test
das
icebp
testl
jnp
mov
shl
add
cli
adc
in
sarb
mov
int
int3
mov
and
xor
mov
and
lds
shlb
lea
nop
pop
pop
push
nop
sbb
mov
and
ja
xchg
pushl
mov
add
fwait
pop
aaa
pushf
sub
enter
sub
clc
inc
inc
push
out
mov
int
push
add
mov
and
test
mov
popf
lods
mov
mov
pop
sbb
fbstp
insb
pop
inc
lea
fildll
ds
addr16
xchg
test
and
lods
xchg
lock
repz
pop
ss
inc
inc
xor
pop
cmc
adc
cmp
jl
hlt
shrl
inc
or
add
sbb
push
cmpsl
ljmp
sbb
and
cld
lahf
sub
or
cmp
sub
dec
or
pop
cltd
aas
or
es
cmpl
push
incb
imul
pop
stc
xchg
mov
ret
mov
inc
out
xchg
stc
or
ja
aaa
jl
cmp
or
push
mov
mov
or
pop
shrb
jae
in
xchg
mov
inc
xor
lds
and
dec
xchg
sbb
into
cli
pop
or
mov
fidivrs
adc
negl
jbe
cwtl
fadd
push
ljmp
xchg
pop
dec
aad
xor
int
mov
jg
mov
lahf
int3
repnz
xor
cltd
sbb
ficoml
cmp
fimuls
cmp
cmp
aam
pop
pop
push
paddw
mov
test
fbld
popf
jns
inc
sub
in
imul
xchg
cs
jbe
imul
ret
cmp
loopne
int3
mov
inc
stos
inc
ljmp
pop
ret
sbb
xchg
dec
push
mov
pop
cmp
push
je
inc
int3
adc
xchg
cld
xchg
xor
xchg
pop
cs
add
je
scas
inc
or
jge
aam
mov
in
pop
jg
and
sti
pop
jno
lret
test
fsts
or
inc
xlat
mov
mov
subb
or
sbb
sbb
daa
cmp
pop
and
mov
mov
or
add
and
xor
imul
fnstcw
loope
cmpsl
testb
sahf
xor
lock
lret
cmpsb
sbb
movsb
in
push
add
inc
mov
test
int
in
mov
dec
mov
and
or
push
sbb
stos
adc
in
fidivs
cmp
ljmp
cli
push
rcrb
add
je
sub
mov
movsb
ret
add
imul
sub
inc
fpatan
repz
push
leave
into
jno
in
imul
dec
push
sub
lods
cltd
mov
ds
scas
adc
xor
sub
das
xchg
push
pop
mov
push
or
jo
jle
mov
sbb
dec
dec
mov
popf
rorb
sub
je
int3
popa
pop
mov
pop
out
addl
mov
sbb
xchg
adc
inc
adc
nop
push
testb
fildll
mov
xor
in
sbb
jnp
mov
roll
jp
pop
mov
pop
inc
push
mov
push
sub
adc
cmp
pusha
bndstx
xor
movsb
adc
repnz
inc
shl
ret
and
dec
or
jp
push
ss
push
in
push
jecxz
adc
jge
and
push
icebp
lret
pop
scas
movsb
lahf
sub
cmpsl
push
jnp
adc
push
fucomip
inc
int
sbb
jne
rcl
pop
sbb
scas
movsb
roll
shl
cmpsb
incb
xchg
roll
xchg
sar
cmp
dec
xorl
jge
fwait
sbbl
push
adc
jbe
addl
arpl
lret
or
inc
je
pop
xchg
loope
mov
scas
ret
pop
test
mov
sub
test
mov
pop
sahf
lea
icebp
ljmp
and
sbb
cmpsb
push
pop
fldcw
or
test
mov
in
stos
mov
ret
imull
enter
lea
add
pop
mov
pop
cli
fsubp
out
jo
aad
jae
arpl
and
movsl
imul
add
adc
sub
cmpl
and
jns
xor
cmp
xchg
scas
js
data16
mov
pop
xchg
aad
lcall
jle
cmpsl
push
sti
dec
push
ret
sub
shll
mov
jmp
jge
test
inc
mov
ljmp
sbb
mov
insl
stos
xchg
outsl
sub
cs
arpl
ret
fstl
addr16
out
into
adc
push
add
rcl
xor
push
add
data16
shll
mov
and
xchg
mov
cmp
in
inc
out
cmp
shr
dec
push
mov
push
add
imul
sub
ret
ds
and
outsb
pop
cmp
lahf
xor
hlt
push
cmp
rcr
mov
xchg
fs
inc
in
fwait
jg
hlt
jnp
dec
sub
push
mov
dec
sub
clc
aaa
or
dec
mov
popa
push
cmc
push
mov
clc
jecxz
cs
icebp
cmpsb
enter
into
orb
enter
icebp
stc
sbb
shll
add
arpl
leave
subl
dec
jg
sahf
mov
insl
inc
jb
movl
sub
sbb
push
arpl
scas
mov
xor
mov
push
inc
mov
and
and
arpl
jno
and
sub
cld
xchg
sbb
adc
mov
cwtl
call
ja
inc
push
mov
and
pusha
mov
scas
pusha
pop
pusha
pusha
xchg
jmp
adc
arpl
cld
stos
es
fcmovnb
mov
addr16
jl
inc
inc
or
sar
scas
dec
cwtl
dec
xor
loop
nop
push
add
inc
and
je
mov
mov
mov
jp
sub
out
jmp
lods
xchg
js
cmp
add
and
test
lahf
pop
pop
or
rclb
mov
movsb
pop
dec
test
pop
pop
stos
sub
jo
popf
adc
jg
sub
mov
jo
and
cwtl
sub
loop
pop
xor
aad
subl
nop
ret
shll
jb
jg
bound
sti
jp
cli
jo
dec
mov
xchg
loope
mov
push
jns
orb
cmpsl
hlt
push
mov
sub
das
dec
dec
iret
fildll
jo
stc
dec
sarb
mov
test
dec
movsb
lock
ret
and
lods
pop
pop
int
sub
xchg
imul
insl
icebp
push
fwait
mov
lahf
pop
cmp
jle
push
int3
mov
pop
sbb
pop
or
xchg
mov
push
xchg
aad
fdiv
push
mov
cmpsb
fstl
pop
push
in
mov
push
popa
arpl
lea
mov
push
dec
out
xchg
gs
dec
aad
push
jno
inc
xor
cmp
pop
fwait
cli
xor
in
mov
jmp
cltd
cmp
xchg
cmpsl
sub
inc
jo
icebp
pop
ret
scas
sub
jmp
mov
mov
mov
dec
xchg
fdivrs
hlt
jg
pop
rcrl
cmpsb
imul
sbb
push
sbb
imul
push
inc
mov
arpl
xor
jle
pop
nop
add
mov
add
mov
aas
xchg
pop
pop
out
mov
mov
xchg
repz
mov
dec
clc
test
fnstcw
push
mov
jns
add
sbb
out
or
fimull
push
stos
mov
push
subb
xchg
jb
cmp
xchg
sbb
inc
addr16
inc
ljmp
jecxz
cmp
repz
inc
and
xor
add
cmp
mov
xchg
mov
dec
mov
enter
and
stos
faddl
fildll
gs
fcoml
js
leave
mov
lods
jle
push
mov
xchg
push
adc
xchg
subl
cs
imul
aas
xor
adc
scas
sbb
adc
sub
out
sub
lcall
pop
adc
sub
mov
ret
daa
je
add
movsl
ss
adc
out
lret
jmp
xchg
or
mov
sub
xchg
aad
enter
aaa
lock
subl
or
cmpsb
sub
addr16
push
test
daa
lret
in
pop
ss
sub
test
divl
fucomp
int
repnz
icebp
movsb
call
and
out
aas
lods
loopne
push
sub
inc
dec
outsl
lods
mov
decb
push
sbb
int
ficoms
mov
lcall
add
stos
clc
stos
std
jno
mov
sub
mov
mov
jg
pop
xchg
xor
lret
jmp
ss
xor
icebp
inc
rcr
sub
test
sub
arpl
dec
cmpsb
sub
out
mov
and
cs
pop
ss
adc
pop
shl
into
ja
pop
lcall
dec
pop
cmp
and
dec
push
and
ficoml
nop
jg
js
pop
xchg
sbb
mov
add
inc
and
mov
push
sub
scas
int3
sub
push
sahf
jle
dec
sub
mov
adc
sub
mov
pop
insb
add
out
shlb
repz
push
jecxz
test
outsl
push
jl
inc
xacquire
ljmp
test
aaa
mov
mov
push
sbb
test
push
inc
xchg
push
icebp
push
push
inc
inc
in
mov
out
mov
rolb
je
movsl
push
int
jmp
stc
in
lret
jge
fsubrs
cld
aad
jo
push
push
arpl
jmp
jecxz
dec
mov
mov
vsubsd
fiadds
subb
or
mov
outsl
inc
xor
fs
add
push
lods
inc
cmp
pop
imul
mov
pop
pop
sbb
or
jg
js
pusha
out
sbb
lret
sbb
shrb
adc
outsb
iret
pop
mov
jo
mov
test
ss
subb
and
sbb
sarb
dec
mov
adc
bound
call
add
sbb
outsb
idivb
lock
faddl
adc
or
lret
out
xor
mov
adc
mov
jbe
imul
mov
cmp
adcb
lods
mov
sbb
jle
sbb
adc
loop
push
dec
xchg
leave
pop
adc
mov
mov
jb
popf
lds
or
aad
sarl
dec
pop
add
mov
sub
mov
fsubs
jmp
cmp
lods
cld
jmp
dec
fwait
xchg
lock
jno
testl
sub
arpl
jg
sub
loope
sub
dec
add
orb
adc
fbld
iret
or
mov
dec
lock
roll
cs
in
stc
add
int
out
es
jno
mov
das
lret
call
adc
int
fucom
cmp
inc
js
stos
hlt
mov
arpl
mov
icebp
int3
cmp
lret
addb
inc
repnz
sbb
add
cmpsb
leave
aaa
inc
pop
out
out
jb
in
bnd
out
rcll
cmp
in
mov
push
xchg
testb
xchg
xchg
repnz
fcompl
pop
jle
xchg
lret
mov
stos
inc
sub
mov
or
sub
xchg
clc
inc
add
and
rcll
ds
out
add
js
movsl
in
loope
push
rcrl
sbb
je
scas
jb
das
push
sub
and
jg
and
jl
hlt
lcall
inc
aas
mov
rolb
dec
jl
cmp
std
fcomi
jo
xor
dec
mov
push
out
stc
outsl
xchg
lcall
rcrb
cld
scas
push
pop
int
lea
fldcw
insl
xor
aas
pop
push
mov
loope
push
sbb
adc
push
pop
mov
push
or
fcoml
mov
test
iret
sbb
cmp
mov
push
push
xchg
fwait
mov
xchg
iret
mov
cmp
inc
inc
mov
push
lds
xchg
dec
pop
pop
mov
lds
stc
push
mov
enter
mov
popa
push
inc
hlt
fldl2e
fnstenv
or
mov
push
in
je
cld
push
in
sub
inc
and
sub
adc
in
cmp
fisttpl
add
or
sarl
call
xchg
jge
div
scas
call
add
shlb
jae,pn
or
ret
xor
aam
mov
out
sub
cltd
sbb
sub
test
dec
mov
dec
lahf
mov
aaa
popa
fnstsw
fs
iret
mov
jae
das
popf
and
or
scas
int
scas
jg
xchg
hlt
jge
outsb
sbb
sub
jecxz
ret
sub
xchg
fstpl
sub
scas
sub
xchg
fdivs
mov
mov
xor
push
pop
mov
in
push
js
and
pop
or
orl
aam
scas
add
dec
jbe
fcoml
mov
cld
fisubs
push
fcmovnu
pop
jmp
mov
aad
push
pop
xchg
adcb
or
fisubl
adc
jp
adcb
aad
mov
and
cwtl
jo
std
ret
rcll
dec
pushf
lret
jmp
imul
mov
fwait
cwtl
push
adc
mov
jne
lcall
mov
xorb
push
xchg
daa
xor
loop
lods
or
or
arpl
jno
lcall
jge
cmp
sbb
adc
inc
daa
jp
cmpb
enter
sub
mov
int3
inc
push
sub
inc
jne
inc
xor
and
pop
lea
mov
mov
loop
mov
loopne
sbb
cmp
jne
add
cmp
into
lret
jae
adc
mov
cmpsb
movsl
jp
dec
cmp
and
mov
mov
jno
dec
pusha
cmp
pop
nop
shrb
lds
es
push
pop
mov
and
jb
or
pop
mov
mov
mov
xor
addr16
imul
jge
cmpsb
cmpsl
sti
mulb
add
inc
sahf
cwtl
lea
in
or
mov
aaa
adc
pop
repnz
lret
data16
push
sub
inc
pop
sbb
outsl
in
add
loopne
adc
test
movsb
test
imul
mov
stos
lods
je
push
dec
mov
pusha
jo
inc
xchg
data16
push
cmp
push
mov
adc
add
jp
mov
mov
jbe
test
jmp
int
les
lret
and
sbb
cmp
mov
xor
fistpl
int3
and
adc
lcall
push
and
cmp
dec
jl
lock
repz
icebp
leave
inc
mov
push
adc
aas
xchg
dec
arpl
push
inc
lods
stos
push
scas
sub
sbbb
aaa
popf
push
mov
xorb
adcl
iret
mov
insb
dec
stos
addl
xchg
sub
lret
lret
pop
clc
sbbl
out
ret
test
and
aaa
adc
loopne
xor
insb
in
inc
addb
mov
dec
pop
enter
es
pop
lods
cmp
xor
movhps
mov
pusha
sbb
insb
clc
cltd
and
push
and
sbb
mov
in
popa
xor
or
mov
push
mov
lock
push
push
xchg
push
pusha
xchg
bound
mov
ja
aaa
mov
cmp
das
psrlq
aad
fcoms
jecxz
int3
leave
lds
movsb
pop
mov
in
inc
push
and
push
sub
pop
gs
push
leave
dec
dec
mov
clc
ret
inc
gs
loopne
push
mov
inc
adc
push
ja
movsb
and
leave
mov
call
sbbl
cli
std
fidivrl
add
in
fscale
gs
outsb
std
outsb
in
jnp
push
cmp
mov
popa
neg
dec
aam
xor
xlat
andl
mov
movsl
rcrl
or
xlat
mov
xchg
pop
faddl
repz
xor
sti
pop
sbb
and
out
and
xchg
or
jp
repnz
aaa
div
sbb
mov
aaa
hlt
pop
jmp
js
jle
xchg
dec
sahf
lea
cmpsb
scas
mov
aad
mov
xchg
aas
dec
cmp
icebp
ds
xchg
xor
sub
xchg
subl
dec
rorb
cltd
movzwl
rcl
into
or
and
jns
out
loop
mov
arpl
xchg
out
mov
cmp
orb
mov
mov
daa
pop
mov
fs
push
iret
into
sbbl
call
sti
cs
orb
push
jp
push
imul
out
pop
xor
fbstp
push
jecxz
xchg
out
mov
stos
aas
or
icebp
popf
lret
push
test
fwait
cmpsb
mov
das
pusha
jle
inc
add
or
add
or
pop
std
mov
xchg
fdiv
inc
lock
adc
adc
popf
das
or
sub
scas
rorl
or
xchg
dec
cmpsb
clc
xor
lods
sub
mov
cs
leave
pusha
mov
rol
or
pop
mov
ja
mov
jle
cli
movl
adcl
adc
push
outsl
aad
adc
cmpb
add
and
jecxz
leave
stc
mov
mov
mov
test
lahf
mov
cwtl
movsl
adc
dec
addl
mov
ret
add
pop
pop
loopne
mov
jne
dec
out
add
ja
xor
jo
jmp
cmp
pop
addr16
jecxz
pop
inc
sub
sbb
nop
jne
and
xor
fs
data16
clc
or
jo
nop
cmc
jecxz
mov
or
sub
js
test
fsubrs
imul
dec
out
mov
mov
fwait
addb
orb
mov
push
xchg
lods
movsb
outsb
jmp
lds
call
xor
lret
and
push
dec
pop
or
idivl
and
sub
lahf
xchg
andl
nop
aad
push
xor
jle
pop
stos
adc
inc
mov
mov
xchg
or
push
mov
loopne
xor
ljmp
xchg
test
lods
adc
push
or
scas
mov
scas
fldenv
popa
xor
mov
inc
imull
cmp
or
xchg
sub
mov
pop
lds
sbb
and
aaa
js
pop
mov
popf
aas
call
pop
mov
out
icebp
jmp
ret
inc
imul
and
mov
fcomps
in
cmp
mov
int
jle
ret
call
outsl
test
xchg
mov
shll
mov
push
mov
pop
mov
je
or
inc
mov
mov
dec
scas
push
mov
sub
adc
sub
popa
pop
orb
dec
sub
cs
sub
mov
and
jo
nop
shr
addr16
outsb
sbb
lret
dec
idivb
push
mov
out
call
in
jno
rcr
add
fwait
test
sti
or
sub
cmp
or
sbb
cltd
into
adc
mov
sti
nop
daa
jae
pop
fcmovnbe
xor
xchg
jl
nop
xchg
or
pop
shll
pop
cmpb
fs
in
sbb
adc
sti
shll
out
mov
and
add
xchg
sub
movsb
mov
and
dec
outsl
insl
sub
jne
lods
lods
add
stc
jnp
out
inc
lods
or
push
fnstsw
dec
push
sub
jge
mov
push
pop
adc
test
pop
daa
sub
dec
pusha
pop
mov
and
fldl
psubsw
sahf
bound
test
push
sbb
rcrb
add
jo
and
stos
pop
in
push
mov
aad
pop
in
and
test
pop
xor
xor
push
imul
cltd
mov
loope
arpl
lcall
lds
js
pop
addr16
scas
ret
xor
xchg
add
add
mov
jle
into
lea
pop
inc
jbe
and
inc
ljmp
push
iret
push
pop
adc
mov
icebp
pop
aas
pop
ficomps
pop
or
xchg
retw
mov
push
inc
dec
test
mov
dec
inc
jo
cmp
inc
cli
push
and
sub
int3
xor
jbe
movsb
sub
push
jnp
mov
popa
in
rol
push
push
loopne
ret
cmp
out
ss
pop
sbb
pop
dec
cmp
nop
mov
jb
cmp
push
inc
push
testb
ja
mov
add
call
sbb
sbb
inc
xchg
lds
data16
or
or
jnp
xorb
lods
pop
push
pop
adc
fistpl
call
negl
ja
jae
push
out
std
out
inc
lock
cmp
or
push
and
push
addb
lds
jo
adc
dec
fadds
imul
dec
jno
inc
add
xchg
lea
or
loopne
in
or
mov
or
jl
mov
repz
outsb
and
aad
cltd
mov
aas
sarb
dec
mov
out
test
popf
jmp
loop
mov
jmp
cmc
mov
cld
mov
mov
sub
cld
mov
cld
inc
adc
cli
mov
in
cmovle
cmp
movsl
outsb
pop
rolb
test
outsl
mov
out
mov
xchg
es
loope
and
push
inc
pusha
mov
xor
jne
clc
outsl
mov
push
fcoms
andb
in
jl,pn
cmp
mov
adc
or
pop
fmuls
dec
hlt
jmp
mov
mov
repz
push
loop
icebp
and
jge
mov
mov
push
cmpsb
rclb
push
pop
mov
out
fcomip
pushf
lods
mov
jl
vpaddw
mov
add
stc
jbe
lods
lock
pop
push
sbb
cld
xor
fsubrl
imul
push
lock
inc
mov
rcrb
lock
out
ss
cmc
in
fildll
or
ret
addb
or
inc
sbb
adc
test
jp
or
decb
insb
pop
xchg
sbb
adc
pop
addr16
mov
fimull
jno
mov
aas
push
add
out
sti
aaa
mov
adc
daa
sub
xchg
inc
and
xorb
pop
push
cmpsl
test
fucomp
mov
and
inc
jp
adc
cs
rol
xchg
rorl
xor
mov
out
fcoms
push
mov
mov
fs
outsb
outsb
scas
arpl
shr
daa
test
mov
adc
je
mov
dec
ret
addr16
insb
cmp
arpl
outsl
movsl
dec
xor
out
push
loope
push
cmp
mov
mov
aaa
or
mov
filds
xor
loopne
out
add
and
sbb
mov
dec
out
addr16
hlt
pop
jno
lods
and
enter
push
mov
loopne
pop
push
enter
jno
add
push
es
mov
pop
pop
aam
cmp
aad
sub
call
mov
sti
aaa
out
subb
insl
insl
pop
popa
jmp
push
xchg
xchg
stos
xchg
adc
mov
test
es
das
scas
mov
xor
outsb
jg
cmp
sub
cmp
ficompl
xchg
sub
lcall
add
sbb
jecxz
stc
sub
and
mov
lret
sub
sub
fidivl
jg
cmc
pop
out
and
movsl
adc
jo
jg
and
cwtl
sbb
mov
mov
out
xchg
in
xchg
in
jmp
jno
cmc
or
sbb
inc
mov
cltd
loope
fcoml
lret
jbe
dec
into
or
icebp
dec
js
push
jo
mov
enter
mov
push
sub
inc
fwait
add
cmp
push
mov
inc
bndldx
add
push
pop
adc
pop
xor
dec
call
call
push
lret
jp
cmpsb
inc
pop
xchg
test
into
sub
faddl
mov
push
xchg
lods
fsubrl
or
aaa
add
add
icebp
jmp
arpl
ret
fmul
or
mov
popf
lret
cmp
or
ficoms
dec
pop
out
lods
mov
mov
xchg
push
xchg
sbb
jae
lds
insl
das
mov
lret
into
cmc
xchg
push
stos
adc
mov
xchg
pop
xor
sidtl
fwait
inc
daa
or
jae
les
mov
popf
cld
jmp
test
and
aad
fwait
push
xor
lds
sub
push
push
addr16
and
mov
pop
rol
repz
sbb
cmp
cmp
cmp
dec
cmc
jge
call
pop
test
ljmp
jmp
sub
xor
push
and
xor
push
outsb
and
pop
xchg
test
lea
cmp
popa
xor
sahf
xchg
mov
outsl
xchg
mov
in
pop
xor
addl
fsubrp
sub
das
lds
dec
xchg
andl
sarl
bound
mov
out
add
mov
mov
stos
cmc
cwtl
bound
sbb
inc
pop
pushf
in
out
leave
stos
adc
push
or
add
pop
in
pop
adc
pop
test
mov
adc
in
push
mov
mov
push
pop
push
xchg
dec
test
dec
adc
jne
arpl
mov
pop
jg
fwait
imul
dec
push
mov
cltd
repnz
sub
dec
xchg
ljmp
or
scas
negl
test
les
mov
movsb
mov
xor
lahf
push
sarl
push
arpl
jl
sbb
out
stos
in
jne
js
adc
movsb
insb
sbb
pop
aad
xor
push
fwait
add
pop
mov
int
cmp
cld
nop
loop
xchg
call
mov
scas
fstpl
cmpl
xor
divl
stos
icebp
mov
les
ss
sahf
adc
je
pop
int
stos
jb
add
add
call
lock
add
mov
jae
cmp
jp
cmpsl
mov
mov
or
int3
sbb
xchg
int
sbb
rol
cs
testl
lcall
in
inc
psubw
iret
push
dec
nop
cmpl
arpl
dec
test
and
jle
lds
add
or
mov
fisubrl
inc
out
in
pop
rcrb
ret
incb
or
and
jno
ret
or
movsl
cmp
jmp
jl
mov
jns
je
data16
sub
inc
push
lcall
push
add
sbb
and
mov
inc
mov
hlt
mov
and
cmp
xchg
xor
push
fstl
loop
dec
dec
mov
push
mov
or
xchg
pop
popf
or
jnp
cmp
adc
test
xchg
jle
or
xchg
mov
or
push
mov
push
loopne
jo
xchg
xchg
mov
inc
adc
outsl
dec
add
rolb
stc
add
sbb
int3
jmp
repz
pop
cmp
or
call
ljmp
shlb
or
pop
cli
sbb
in
jmp
push
loopne
test
out
add
mov
mov
addr16
fcomp
je
shrb
xor
lret
mov
imul
inc
rcrl
les
mov
out
mov
nop
xor
push
sahf
mov
push
and
outsb
rcrl
popa
cli
jo
jg
lret
into
lret
stos
add
mov
mov
lods
in
and
imul
add
push
rolb
jno
xchg
mov
mov
xor
push
jle
jp
and
call
int
push
test
cmp
xchg
add
sub
pop
xor
sub
xchg
xchg
push
jnp
lock
lds
std
dec
mov
cmp
push
xor
roll
push
cmpsb
imul
ds
mov
or
xchg
movsl
int3
push
es
inc
push
movsl
mov
xchg
mov
insb
mov
das
test
sbb
scas
mov
mov
repz
in
and
addl
cmp
mov
icebp
mov
add
hlt
xchg
gs
fisubs
add
mov
adc
cmp
inc
icebp
pusha
add
dec
lock
dec
lret
enter
loop
imul
or
jno
movsb
xor
cs
mov
jbe
and
and
dec
and
add
fldl
mov
adc
test
add
jns
lods
cld
push
inc
sbb
outsl
stc
push
jl
int3
add
mov
cld
dec
mov
inc
sub
jno
jne
adc
adc
sub
pop
icebp
xor
fists
shll
push
shl
push
sbb
pop
mov
shl
das
cmpsb
adc
and
mov
outsl
js
fcoms
adc
xor
insl
stos
dec
mov
mov
out
fiadds
gs
xchg
xchg
jbe
inc
push
imul
push
popa
or
sbb
inc
mov
inc
mov
cmp
dec
xor
outsb
mov
sbb
daa
cmp
mov
xor
sbb
dec
addr16
push
xor
and
aam
dec
jecxz
sub
loope
add
data16
gs
nop
jp
pop
stos
or
xchg
xchg
cmpb
push
adcl
lcall
fistpl
cmpsb
mov
js
mov
shr
aaa
add
jnp
cmpsl
dec
pop
xchg
xor
dec
aam
add
pusha
dec
outsb
cli
pop
pop
pinsrw
mov
movsb
push
push
add
les
fsubrs
sbb
test
pop
lds
adc
jo
lcall
cvtpi2ps
scas
daa
fcmovne
jmp
aas
mov
in
mov
scas
clc
je
pop
mov
pop
jne
stc
outsl
inc
pushf
push
inc
add
push
fcoms
mov
inc
xchg
fsubr
fmuls
pop
ret
sub
jg
loop
pop
mov
mov
or
push
push
pop
addr16
rorl
adc
inc
mov
cwtl
arpl
dec
sahf
lret
xchg
cmp
out
mov
hlt
shll
pop
insb
sub
xor
jmp
ja
movsb
and
pop
in
adc
xchg
neg
cmpsl
push
pusha
jg
add
scas
mov
cmp
int
mov
adc
lret
mov
fstpt
jp
stc
jle
jl
pop
and
push
cmp
or
cmpsl
bound
mov
inc
dec
addr16
shlb
jecxz
inc
addb
pop
or
cmp
mov
gs
lcall
loope
sub
jmp
mov
sub
adc
mov
fstpt
xor
adc
arpl
mov
fsubrp
xchg
mov
pop
lret
jp
dec
enter
icebp
mov
dec
or
bound
pop
mov
mov
jg
dec
mov
aam
cld
enter
enter
pop
loope
lret
fs
popa
mov
mov
add
mov
push
inc
push
pop
lds
gs
cmp
js
shlb
jg
testl
stos
mov
cld
jmp
lret
push
out
fiadds
in
jle
nop
je
ljmp
pop
lret
shl
cmpb
pop
pop
and
scas
cmp
xchg
mov
jb
aas
rcr
xorl
mov
xor
sbb
xchg
call
in
aaa
mov
test
fnstcw
ret
cwtl
stos
fcomp
inc
pop
sbb
jle
jle
push
mov
jno
les
in
inc
scas
lret
arpl
jp
jmp
pushf
sub
push
and
sbb
push
out
xlat
xchg
addb
xchg
xlat
pop
test
cli
in
lret
cmpb
outsb
outsl
mov
mov
xlat
inc
loopne
push
inc
sub
pop
sbb
xor
movsb
imul
mov
lods
sub
movsl
shr
sbbl
sub
pushf
jbe
inc
or
push
dec
mov
xchg
stos
iret
sbb
inc
roll
jno
rorl
sub
cli
test
repnz
pusha
leave
cwtl
push
adc
std
sbb
add
and
hlt
sub
outsl
js
dec
stos
ja
cmpsb
push
pop
lahf
cmp
mov
inc
mov
xor
jp
push
inc
test
ja
cmp
int3
les
mov
xchg
fldt
popa
xchg
pop
in
in
xchg
aas
popf
pop
insb
loope
inc
movsl
popf
and
cmp
imul
fcoml
orb
xchg
loop
jge
in
mov
or
jge
jge
jno
inc
out
fldt
sbb
mov
aad
inc
dec
jno
insl
dec
or
mov
cmc
fmuls
lea
sub
push
int
ret
mov
imul
jne
icebp
cmp
lret
dec
and
roll
inc
xchg
sbb
repnz
movsb
push
mov
sub
xor
sbb
push
popf
and
mov
movsb
lret
mov
dec
cmp
into
or
inc
mov
jmp
add
xor
imul
inc
std
mov
xchg
scas
xchg
lret
xchg
mov
rorb
and
push
adc
in
pop
clc
xchg
sbb
xor
push
mov
scas
mov
rcrl
fmuls
mov
fbld
add
sub
cmpsl
sahf
push
cmp
push
bound
repz
rorl
cltd
stos
push
enter
stos
sub
push
int
mov
test
out
std
inc
cmpsl
xchg
pop
cwtl
mov
pushf
sbb
popf
jns
icebp
insl
out
sti
adc
mov
shl
ficoml
adc
mov
test
mov
dec
hlt
mov
pop
pop
cli
je
dec
shrl
sub
cmpb
push
inc
leave
mov
mov
jmp
cs
xor
mov
xor
lret
jbe
xor
xlat
pop
hlt
stos
mov
imul
loop
scas
sarb
cmc
push
outsl
in
enter
adc
cwtl
mov
pop
pop
mov
insb
adc
in
xorb
test
imul
repz
shll
push
push
mov
repnz
mov
pop
ret
inc
and
jno
or
test
in
rorl
jmp
popf
add
cmp
std
cmp
test
push
out
cli
nop
fs
ficompl
pop
mov
mov
repnz
mov
into
popf
popf
push
fsub
repnz
mov
pop
dec
dec
cld
in
mov
mov
dec
push
xchg
cmp
les
sbb
test
imul
clc
xchg
push
push
push
out
adc
mov
cwtl
mov
out
lret
movsl
sub
xlat
push
leave
xchg
cmp
dec
aad
clc
xor
test
imul
je
mov
test
dec
lahf
arpl
sbb
fidivs
dec
pop
jae
gs
sub
test
sub
add
xchg
ret
pop
or
mov
lods
cmpsl
and
ljmp
or
pop
mov
sub
pop
in
jo
sub
das
aad
les
or
fbstp
cmpsl
popa
icebp
inc
ret
leave
pop
add
jmp
idiv
je
les
lea
adcl
pop
in
ds
pop
or
mov
jl
fs
pop
cmpsl
cmp
jp
shll
jns
in
sub
sbb
mov
sysenter
pop
fcom
mov
popa
fstl
imulb
mov
mov
dec
loop
dec
ja
mov
jmp
add
ret
dec
cmp
mov
rorb
fists
dec
jbe
gs
test
mov
divps
push
orl
je
jmp
mov
xchg
inc
arpl
inc
add
inc
mov
inc
adc
nop
aaa
test
lahf
cli
sub
fidivrs
adc
jecxz
rcrl
mov
pusha
fwait
fs
cmp
pop
mov
es
or
subb
fisubrs
inc
stos
dec
outsl
dec
xchg
add
mov
test
andl
test
test
subb
or
inc
pop
sbb
and
xor
hlt
xchg
jecxz
add
mov
xor
ret
xor
notb
js
in
and
aad
lahf
lret
stos
push
lahf
mov
cmp
ss
ficoms
mov
mov
mov
mov
ss
and
insb
mov
repz
cmp
popf
jne
mov
adc
push
adc
out
repnz
cmpsl
ja
jnp
cwtl
das
imul
cmpsl
inc
mov
insl
and
lret
popa
mov
pusha
int3
xchg
push
push
fisttps
arpl
fucomi
imul
ljmp
and
sti
add
fwait
push
es
in
daa
mov
add
adc
repnz
movsb
inc
pop
clc
xchg
faddl
push
pusha
sub
xor
cs
pop
pop
hlt
pop
jns
cwtl
pop
xchg
call
mov
cmpsb
push
ljmp
lcall
pop
in
xor
push
lods
in
and
pop
cld
aaa
inc
lods
mov
mov
scas
insb
js
mov
pop
or
enterw
xchg
fwait
mov
popa
jge
xor
mov
xchg
pop
rorb
xchg
xchg
pop
xchg
mov
push
les
aaa
jbe
pop
xchg
pop
push
aaa
in
push
adc
add
mov
fstps
shlb
lcall
psadbw
mov
fistpll
mov
pop
movsb
push
jle
ljmp
mov
aas
sti
jns
andl
cmp
imul
fnstenv
and
jle
loope
xchg
lea
dec
mov
repz
mov
out
scas
stos
pop
repnz
dec
cmp
cmp
imul
and
movsb
sbb
cmp
mov
pop
xchg
sub
inc
jno
fst
out
scas
out
rol
data16
jp
adc
repz
lods
jp
int
adc
push
xchg
jbe
jns
sub
lret
xchg
xchg
stos
addr16
push
add
rolb
push
cwtl
dec
mov
dec
movsb
mov
mov
lahf
pop
outsb
imul
jbe
fistps
cmc
add
dec
mov
push
add
dec
jge
sbb
lods
cmp
fdivr
imul
ficomps
sbb
call
xor
cwtl
outsb
add
dec
dec
pop
cld
lock
jmp
ret
cmp
jo
cs
cld
jae
sub
xor
and
xchg
jb
pop
mov
out
sub
in
xchg
iret
cmp
jno
and
cmp
cmp
pushf
sub
jle
adc
ret
mov
call
mov
mov
xor
pop
popf
bound
sub
mov
cld
inc
inc
js
jbe
jnp
pushaw
dec
shrd
sar
aaa
push
nop
jb
lcall
inc
scas
arpl
sbb
pop
cmp
mov
insl
xor
loop
pusha
data16
test
push
push
test
sub
loopne
out
mov
into
fldcw
cmp
cwtl
enter
push
ss
int3
enter
sbb
lea
int3
push
sub
mov
xchg
out
adc
add
pop
mov
mov
shll
sub
xchg
insl
adc
popa
je
pop
bound
adc
push
sysexit
dec
sub
fistpl
cli
nop
sbb
ja
scas
sbb
push
jnp
push
loope
in
movsb
imul
mov
rcpps
lcall
push
shrb
pop
or
cltd
push
adc
xor
repnz
loop
or
jno
ds
cmp
cmp
das
lret
push
pmullw
mov
sahf
pop
into
pushf
adc
ja
lret
popf
and
sub
xchg
jmp
jge
cli
hlt
jl
mov
fisttpll
mov
jl
jae
xchg
les
in
jno
dec
jno
inc
repnz
fstpl
loop
int3
in
xorl
int
fnstsw
push
leave
popa
enter
sbb
cltd
jo
inc
lds
stc
mov
cwtl
or
pop
push
push
rolb
jl
fisttpll
xchg
std
inc
scas
fsubrl
mov
jns
jae
mov
push
repz
adc
and
sbb
pop
lods
movsl
out
and
fadd
adc
stos
jmp
or
or
pop
icebp
adc
or
aaa
mov
rcrl
inc
inc
outsb
adc
mov
in
pop
jns
sbb
repnz
cli
jg
call
gs
inc
xchg
pop
or
loopne
cli
shrb
jns
movb
scas
jno
dec
mov
adc
adc
daa
sub
mov
mov
je
jp
fisubs
adc
lret
lds
inc
popf
cli
ja
push
cmp
pop
je
mov
in
sub
and
mov
repz
scas
fiadds
push
sub
fadd
mov
push
and
imul
jp
push
ficomps
jmp
jno
xlat
mov
xor
fwait
or
aaa
mov
dec
je
cmp
xlat
fldenv
in
mov
data16
mov
mov
test
sahf
enter
jl
lahf
adc
jns
inc
mov
lea
cmp
rcll
cltd
cld
add
push
sub
sbb
fwait
in
pop
enter
mov
dec
arpl
mov
jmp
push
in
out
lea
aad
and
cmp
jmp
mov
xor
or
sub
mov
jbe
adc
sti
pusha
dec
icebp
sub
ss
movsb
mov
pop
jp
mov
jns
loope
jb
or
pop
hlt
cltd
xor
dec
mov
or
push
pusha
lret
push
ja
clc
inc
mov
mov
cwtl
pushf
cmp
mov
jmp
dec
jge
iret
lret
inc
mov
fidivrl
shlb
jge
mul
inc
lret
mov
xchg
std
adc
les
jae
movsb
sbb
mov
outsb
cwtl
mov
arpl
arpl
or
test
sbb
loopne
out
ja
cmpsb
dec
jl
xchg
iret
insb
test
dec
fs
cmpsb
enter
lock
xor
mov
ret
pop
adc
les
bnd
jmp
push
cwtl
sbb
and
jns
sbb
jns
cmp
jae
sbb
lods
cmp
xor
div
jno
clc
adc
dec
out
into
jle
mov
sbb
dec
sub
push
outsl
xlat
add
push
loop
loop
lods
rcrl
cmp
inc
stc
mov
xchg
and
sahf
cs
lcall
nop
jne
sub
fstpt
push
cld
push
lea
xor
lahf
adc
call
repz
std
lret
fstl
loop
mov
loopne
imul
insb
cmp
mov
jg
lret
outsb
rcrb
mov
icebp
push
lock
js
pop
jp
pushf
sbb
adc
cmp
lahf
xchg
xlat
fbld
sbb
sub
xor
sub
pop
roll
mov
stc
fisubs
mov
push
fadd
loope
cmp
mov
aam
mov
arpl
in
mov
aam
jmp
movl
outsl
rclb
sub
mov
testl
sub
lahf
jp
dec
call
hlt
jp,pt
mov
pop
xchg
add
pop
lret
sbb
adc
cmp
aam
push
popa
inc
repnz
lcall
pop
jmp
xchg
outsb
push
cmp
inc
adc
lods
dec
out
fstpt
cltd
sub
pusha
shll
movb
repnz
cwtl
daa
nop
adc
imul
xchg
bound
cmpsl
fnstcw
outsl
jne
outsl
andb
xor
ret
call
xchg
frstor
lahf
or
insl
sub
sub
add
stc
rclb
data16
fstpt
in
dec
outsl
je
or
or
enter
bound
sarl
mov
insl
mov
xchg
fcom
dec
mov
pop
push
fwait
es
movsb
or
cmp
call
cli
and
sub
mov
push
test
test
jecxz
xor
lret
dec
fcmove
int
dec
mov
mov
pop
mov
mov
loop
xchg
pop
cmp
cmp
push
jns
fcomps
add
inc
jo
mov
push
repz
cmpsl
mov
or
xchg
clc
mov
mov
sub
push
mov
sub
pop
insb
pop
cli
dec
out
or
test
adc
add
xchg
repz
mov
call
imul
push
cltd
sub
jmp
xor
cmp
sbb
arpl
lods
jne
pop
or
movsl
inc
sbb
push
pusha
jge
and
test
or
or
sbb
out
sbb
jnp
aad
push
data16
fstp
push
adc
push
dec
push
dec
pop
xor
dec
aas
push
outsl
mov
dec
push
push
sbb
std
mov
loopne
dec
jb
data16
or
jecxz
dec
xor
push
jp
pop
inc
adc
pop
xchg
ljmp
and
sub
xor
mov
lcall
push
call
ret
into
xchg
roll
push
fisttpll
mov
mov
dec
lea
cmp
ss
and
gs
int3
in
daa
out
push
les
and
fsubl
xchg
scas
jnp
and
inc
mov
cli
mov
insl
xlat
fs
xorl
sbb
pop
jp
mov
inc
jae
jmp
dec
adc
clc
rcll
jo
add
fisubl
nop
insl
inc
je
jns
je
xlat
leave
in
insl
cmc
in
push
push
sub
adc
sbb
test
mov
fdivrs
mov
xchg
cld
sbb
stos
in
mov
adc
and
bound
or
jae
scas
dec
jbe
mov
cmpb
mov
mov
imul
fildl
mov
xor
cs
pop
xchg
push
lret
out
std
xchg
test
jmp
xchg
xchg
mov
cwtl
sbb
xlat
ds
sbb
pop
jmp
mov
jb
jae
out
dec
lock
scas
and
fcomps
out
jns
or
cmc
lea
ret
in
es
je
repz
in
scas
loope
fs
loopne
xchg
lcall
xchg
popf
mov
test
mov
lods
push
jle
ret
add
or
sahf
sub
push
clc
andl
ret
rorb
mov
xchg
call
mov
jmp
adc
arpl
lods
pop
push
fcoms
pop
stos
lds
dec
xor
int
add
test
cmp
pusha
push
fisttpll
sub
mov
rorw
dec
sbb
mov
mov
xchg
sarl
mov
pop
adc
mov
mov
adc
jg
out
and
sub
out
js
and
jns
in
inc
mov
inc
sub
hlt
mov
jb
add
adc
cmp
movzbl
add
dec
xlat
jae
mov
subb
inc
pop
dec
hlt
ja
mov
pop
es
or
sub
pop
pop
sbb
add
pusha
cmp
jge
hlt
mov
sahf
fstl
mov
jns
push
daa
rol
xchg
push
mov
mov
mov
jbe
xchg
jmp
stos
pop
outsl
jmp
jns
icebp
insb
inc
andl
sbb
lret
and
call
or
pop
aam
push
icebp
sbb
mov
cmpsl
pop
sbb
bound
aam
xor
es
pop
sbb
adc
or
pop
aas
xor
jmp
stos
mov
or
lea
pop
mov
icebp
out
arpl
inc
popf
into
push
ret
xchg
lods
push
les
jnp
sbb
insb
add
xor
fnstenv
add
mov
inc
movsb
loope
add
pop
sub
out
jmp
arpl
stc
scas
lcall
les
fsubs
les
clc
push
int
dec
jmp
in
fcmovu
dec
dec
mov
cmpsb
jp
jno
push
or
cltd
mov
or
add
pop
cmp
jmp
lods
push
sub
and
xor
loopne
scas
xor
insl
loop
push
inc
adc
mov
push
dec
add
xchg
mov
inc
jp
push
movsb
mov
daa
popf
mov
dec
adc
jle
insl
or
push
inc
hlt
ret
cmp
dec
cmp
fists
pop
fs
lahf
fstpl
out
mov
fadds
dec
orb
xchg
jge
test
scas
mov
mov
inc
pop
jl
jmp
mov
bound
sarl
rclb
jns
idiv
arpl
rcrl
out
movsl
imul
dec
sub
mov
lcall
mov
add
test
adc
sarl
stos
loope
xor
scas
xlat
lret
pop
push
dec
idivl
push
pushf
daa
sti
lea
inc
jmp
add
addps
out
jl
out
or
lret
arpl
in
cmpsb
sbb
sysret
lock
push
sbb
popf
mov
sbb
mov
loopne
test
jno
xor
std
aam
hlt
mov
sahf
push
out
inc
lcall
in
loopne
push
aam
in
sub
ljmp
add
sub
mov
push
or
mov
cmpsl
cmp
pushf
movb
push
adc
cltd
mov
or
xlat
mov
imul
adc
int
movsb
jl
inc
xchg
push
xor
std
nop
mov
lds
push
les
adc
inc
push
in
xor
loopne
or
loop
daa
repz
cmpsb
negb
fs
sarl
and
mov
mov
jb
iret
cmpb
jle
and
xlat
xchg
sub
es
ja
jns
jmp
mov
fs
mov
std
push
out
loopne
out
jg
and
cld
or
jmp
es
cli
lahf
push
sub
mov
lock
clc
into
jp
jecxz
insb
leave
mov
pop
arpl
icebp
cltd
or
shlb
js
aad
jmp
xchg
mov
cmp
adc
je
cmp
aad
int
jbe
pop
movsl
or
cmp
or
cmp
xchg
lahf
imul
push
cmpsl
mov
xchg
test
ret
mov
shrb
insb
daa
or
and
and
scas
outsl
cmp
mov
fadds
mov
mov
sti
je
sahf
add
arpl
mov
jg
adc
mov
mov
iret
xchg
arpl
stos
pop
mov
test
mov
mov
adc
gs
js
sub
jns
cltd
jg
xchg
xchg
clc
xor
dec
dec
or
sti
sahf
dec
adc
rorl
mov
pop
addr16
dec
inc
les
pop
mov
call
xchg
daa
cld
dec
add
pop
xor
mov
cmp
add
into
hlt
push
pusha
cmp
and
lock
adc
push
popl
cmp
dec
lods
call
aam
mov
jecxz
or
inc
test
negl
cld
mov
fs
sbb
mov
xor
int
xor
mov
addr16
dec
dec
push
mov
mov
out
popf
sub
add
dec
mov
dec
stos
jnp
negb
dec
test
fsubrl
ss
jle
jbe
cmp
clc
jp
outsb
xor
loop
mov
sbbl
mov
xchg
push
fdiv
mov
adc
out
cmpsb
stos
aam
prefetch
or
lret
cmc
and
or
daa
adc
pop
sbb
sub
jo
clc
inc
jmp
add
jecxz
dec
bound
xchg
mov
mov
push
fsub
ss
ret
adc
imul
xchg
das
movsl
in
js
bound
test
sbb
fs
pushl
lret
clc
fildl
nop
jp
pop
fwait
mov
pop
mov
stos
in
daa
icebp
or
adc
sbb
loop
pop
mov
push
ds
fcmovnb
arpl
out
dec
push
gs
lret
add
adc
pop
mov
jg
fwait
enter
pop
mov
lock
xor
pop
jl
in
xchg
sbb
dec
insb
xor
mov
mov
mov
mov
nop
add
cmpsb
lods
scas
or
addl
enter
mov
mov
mov
mov
repz
arpl
sarb
bound
lcall
sbb
sub
xor
jns
ret
lret
ja
scas
lock
sub
inc
mov
test
in
dec
sbb
ffreep
mov
test
sbb
adc
mov
leave
xor
sbb
imul
int
or
xor
dec
xor
adcb
mov
dec
int3
test
aam
push
and
orb
xchg
nop
xchg
dec
adc
xor
inc
iret
dec
sub
out
stc
cli
xor
mov
rcrb
sub
fidivrl
xchg
push
and
sbb
out
ja
movsb
roll
push
jecxz
cmpb
jb
call
sbb
jp
inc
aam
sti
roll
jno
push
outsb
or
pop
sub
int
pushf
mov
into
xor
mov
ljmp
lret
mov
into
inc
mov
cmpsb
and
xchg
jge
repz
test
dec
popf
cltd
lods
cmp
pusha
cltd
xor
dec
pop
out
inc
aad
sbb
scas
inc
lret
add
cmp
movsb
mov
push
shll
movsb
clc
or
int3
ljmp
mov
cmp
and
mov
js
into
add
call
aaa
test
sbb
out
fsubrl
sar
subb
rcrl
pop
pop
inc
stc
xchg
dec
cltd
test
stc
repnz
mov
insb
sub
xor
mov
inc
push
cmc
inc
sbb
aas
nop
xchg
popa
push
dec
mov
cld
mov
pusha
xlat
fsubp
int3
cwtl
pop
cld
or
sub
push
push
ja
out
xchg
adc
ds
js
loop
mov
jg
fsubs
cs
pop
lret
out
sub
out
cmp
sub
push
fldcw
lret
je
xor
inc
xor
pusha
push
lock
dec
movsb
lock
mov
dec
push
mov
scas
sbb
fxch
or
ss
sbb
imul
loope
repz
pop
cmp
cs
xchg
rcl
adc
lcall
movsb
fstpl
lret
lds
adc
xor
ret
into
out
scas
sbb
cld
add
repz
jo
mov
aas
test
icebp
cmp
rcr
xchg
pop
call
enter
sbb
xor
into
shl
clc
mov
test
sarb
insb
jl
and
adc
lods
and
sbb
pushf
mov
ss
xchg
dec
daa
es
xchg
lock
ja
call
add
adc
adc
push
ret
stc
out
lcall
xlat
repnz
mov
mov
bound
xor
fs
fisubrl
pusha
push
jne
lret
dec
and
add
insl
add
iret
push
iret
or
push
inc
adc
test
jbe
pop
fs
push
pop
or
stos
mov
movsl
xor
les
mov
jo
pop
mov
sahf
lods
insb
dec
data16
and
pop
mov
adc
jmp
aad
mov
jb
iret
sub
mov
xchg
aas
jne
outsl
lcall
sub
nop
xor
add
jp
or
rclb
cli
and
repz
test
cmp
movsb
inc
leave
outsb
and
adc
into
fstpl
mov
cwtl
or
xor
fstpl
rolb
nop
cmc
data16
xchg
fwait
addl
cli
popf
das
sbb
lods
mov
fcmovnbe
push
aaa
mov
leave
fsubs
mov
xchg
insb
sub
les
dec
arpl
pop
mov
mov
or
push
fwait
dec
lret
lahf
push
iret
sbb
add
popa
push
popa
test
mov
jl
in
sti
push
sub
stos
mov
sbb
mov
dec
and
test
out
mov
mulb
cli
inc
add
idiv
das
jmp
mov
aas
pop
int
xlat
stos
push
mov
in
cmp
xchg
push
and
cli
mov
xor
adc
cmp
lret
mov
add
fwait
mov
xor
cmp
aad
test
enter
cld
jbe
fcom
sbb
push
xor
jnp
stc
xchg
mov
and
push
add
adc
fsubp
xchg
icebp
pop
pushl
cwtl
das
ja
ficoml
out
mov
bound
pop
sti
pop
lret
rcrl
mov
push
jle
scas
scas
movsb
or
hlt
jp
dec
ljmp
mov
jl
mov
cmp
andb
mov
mov
inc
jl
jle
adc
pop
repnz
pop
ja
sarl
inc
mov
sbb
mov
iret
xor
out
jnp
arpl
fs
fcmovnbe
lret
xor
cmp
cs
leave
xor
pop
dec
addl
xor
insb
and
fstl
cld
testl
out
push
sub
lods
xor
mov
mov
sbb
jp
pop
adc
roll
xor
loopne
sbb
testl
aad
mov
ret
adc
mov
mov
adc
or
mov
sti
cmpsl
mov
shl
gs
cmc
jnp
in
jg
push
repnz
push
and
sub
loop
lds
out
int3
dec
ret
or
sti
xchg
std
xchg
cmp
and
sbb
out
shlb
leave
rcrl
inc
bound
ret
xchg
inc
loope
pop
adc
mov
movsl
fiadds
enter
xor
bound
call
cmpl
mov
loopne
jns
call
push
mov
test
jg
popa
push
orb
xor
dec
inc
push
insl
xor
jbe
mov
jnp,pt
push
scas
lcall
adc
and
dec
sbb
pop
xchg
inc
arpl
jne
dec
ret
pop
outsb
ljmp
test
ret
aad
mov
cmp
ljmp
pop
push
gs
jecxz
call
sahf
lret
popf
adc
xchg
pop
mov
pop
fdivl
sub
leave
cmc
test
jne
push
jle
loope
pusha
and
and
add
int3
outsb
mov
inc
mov
jp
push
or
xchg
imul
jns
sub
repz
movsl
hlt
pop
mov
repnz
jb
mov
daa
sbb
xchg
clc
mov
sub
aad
ss
aad
movb
adc
pop
push
mov
dec
cmp
std
lea
ret
jmp
mov
mov
push
cmpsb
daa
mov
cltd
jecxz
cmp
dec
sub
inc
adc
add
addb
inc
and
jg
in
fistpll
les
jle
insb
mov
cwtl
mov
mov
cmc
test
nop
repnz
call
aad
repz
adc
iret
push
push
outsb
push
adc
stos
dec
sub
mov
pop
cli
xchg
lret
sub
xor
cmp
sbbl
sub
lret
das
bound
fcomp
mov
or
pop
movsl
addr16
fnsave
dec
call
xor
xchg
lret
aas
and
arpl
push
out
cmp
xor
addb
mov
aam
push
pop
and
in
jo
cmp
rorb
sbb
adc
lock
push
popf
jg
stc
dec
jmp
ds
mov
adc
and
sbb
outsl
in
lahf
lret
insl
dec
gs
lret
mov
call
xchg
sahf
dec
mov
xchg
insb
fcom
ja
test
loopne
int3
jae
mov
push
lods
bound
int
fdivs
push
push
std
int
xchg
xchg
adc
cmp
out
scas
adc
in
mov
iret
scas
dec
dec
adc
mov
inc
xlat
lock
repnz
daa
adc
ret
daa
add
scas
jp
rcr
daa
or
jae
mov
aaa
dec
sbb
cwtl
rolb
out
loope
rcl
cmp
clc
movsl
jp
movsb
pop
mov
cli
push
jno
cli
mov
inc
clc
inc
dec
jbe
das
out
xor
xor
xchg
pushl
rclb
or
lods
inc
out
call
dec
inc
popa
adc
push
inc
loopne
movsb
lods
or
jg
and
push
pop
imul
repz
cwtl
je
mov
insl
jbe
iret
sbb
ret
jge
out
insb
jecxz
xlat
pop
jmp
ror
push
leave
fsubr
mov
mov
jp
mov
sub
or
imul
pop
bound
iret
loopne
mulb
mov
mov
add
stos
fs
insb
sub
in
fbld
in
inc
xchg
int3
sahf
pop
jg
scas
shll
btc
mov
lahf
loope,pn
std
mov
xor
or
add
ficompl
ss
jecxz
sub
jne,pn
inc
mov
or
shll
mov
push
xchg
arpl
xor
aad
aas
xchg
jb
mov
js
data16
daa
push
push
fmul
sbb
and
sub
sbb
sbb
inc
popa
mov
jb
mov
inc
xchg
loopne
sti
mov
xacquire
test
push
in
jae
in
and
out
pop
xor
cmovp
push
test
into
add
mov
pushf
lret
cmp
sub
sti
jbe
sti
shll
pop
cmp
push
and
fcoms
sbb
ficoms
daa
fisttpll
pop
sbb
dec
sbb
data16
bound
mov
incb
insl
pop
mov
daa
lret
les
and
add
pop
mov
xchg
ds
add
pop
jmp
pop
cmpsl
sbb
aad
jmp
xchg
mov
sub
adc
inc
sbb
daa
test
stos
cmovle
repnz
mov
dec
mov
icebp
pop
repz
stos
xchg
lods
jae
lods
add
dec
data16
sti
push
cmp
pop
sbb
sub
arpl
fwait
scas
pop
ljmp
and
outsb
push
daa
sbb
push
inc
push
shll
dec
pop
icebp
sbb
xlat
fwait
mov
sub
adc
in
cmpsl
xchg
aaa
pop
jae
push
push
fldln2
sbb
and
mov
jns
mov
pop
mov
notb
int
sub
insb
es
daa
cmp
push
nop
mov
push
and
jb
js
lods
sar
dec
jl
cwtl
jge
in
cmp
gs
cmp
xchg
loop
enter
or
push
imul
aas
jl
mov
adc
movsl
dec
and
mov
test
or
sub
das
inc
outsl
jge
test
inc
scas
and
jmp
ror
jecxz
mov
arpl
sub
or
jo
js
in
jge
inc
aas
jmp
in
push
jle
jge
js
xor
xchg
jecxz
sbb
pushf
and
cld
push
adc
addr16
dec
in
mov
lock
pop
jmp
jmp
mov
xlat
pop
jbe
pop
iret
dec
pop
or
add
in
mov
pop
ds
cmp
iret
mov
sbb
mov
or
mov
xchg
inc
mov
cmpsb
inc
test
ds
pop
adc
pop
jae
loopne
loope
fldenv
cmpsl
or
sar
insb
mov
adc
aaa
stos
roll
lcall
pop
subl
repnz
dec
xchg
pop
xorb
mov
cltd
sbbb
nop
dec
mov
push
mov
mov
hlt
insb
subb
xchg
addl
jp
scas
jmp
dec
inc
sub
xlat
or
dec
lods
clc
out
imul
std
into
aad
and
mov
call
cs
mov
push
lods
pop
fldl
scas
sahf
pop
rcr
dec
stc
cmp
adc
jmp
mov
lcall
xchg
push
scas
jge
test
mov
int
rorl
sbb
addr16
addr16
cmpsl
fucomi
jb
jo
push
arpl
hlt
fidivrl
outsl
addr16
ds
sub
cwtl
in
cmpsl
cmp
push
popl
mov
mov
mov
mov
sub
xchg
jmp
mov
scas
jge
dec
sbb
pop
sbb
les
xchg
xor
push
out
adc
cli
lods
dec
mov
insl
mov
addr16
cmpsb
clc
dec
lcall
test
jbe
mov
in
jno
es
mov
mov
push
sub
inc
ja
push
push
push
sub
loop
jno
push
out
mov
arpl
fmull
fcomps
xorps
inc
call
add
imul
in
aas
cmp
xchg
push
hlt
cli
sbb
ds
or
aad
mov
xor
xor
pop
insb
out
pop
scas
rorb
mov
pop
out
sbb
jnp
fldt
cmpsl
aas
jns
call
push
loop
les
cmp
jb
hlt
shlb
or
cwtl
push
scas
out
shlb
mov
test
push
cmp
jecxz
jle
test
cmpsl
fcomip
cmp
inc
out
sub
pop
mov
cmp
lcall
inc
insl
dec
in
mov
cmp
inc
mov
lea
jno
ja
mov
test
shlb
lea
inc
jbe
lret
cmp
jae
mov
nop
cli
inc
mov
mov
pop
xchg
and
sub
or
jnp
or
arpl
mov
int
xor
mov
fistpl
cmp
mov
dec
xor
aad
jno
xchg
jle
inc
movsb
aaa
xor
mov
xor
mov
jns
cli
mov
stos
popa
cmp
mov
cwtl
je
jo
ret
mov
adc
insb
cmc
sbb
test
int3
add
xchg
rcll
or
in
mov
jmp
int3
cmpsb
rcl
jle
sahf
push
dec
mov
or
into
call
stos
or
sub
adc
rorb
dec
clc
jo
or
pop
scas
imul
pop
in
add
push
aam
ret
xchg
or
xchg
lods
and
add
imul
push
lock
sbb
loopne
fdivl
or
into
xchg
fs
jge
outsl
add
xchg
sub
sti
iret
cwtl
jns
sahf
push
ljmp
das
sub
mov
mov
xor
shrl
cmp
movsb
push
mov
fimuls
xlat
ret
lcall
pop
mov
push
adc
pushf
inc
inc
aad
loopne
aaa
sub
stos
rcl
out
negb
cmp
into
xchg
and
daa
fcoms
jmp
mov
js
ficoms
addr16
stc
adc
push
pop
scas
enter
pop
fs
lret
jge
mov
sub
imul
loope
popa
std
icebp
int3
out
out
xor
dec
mov
ret
ficomps
stos
or
shl
clc
shlb
idiv
in
lods
mov
sub
lods
iret
scas
sub
inc
add
adc
aad
dec
mov
push
mulb
xchg
mov
pop
test
jp
push
mov
insl
inc
mov
mov
xchg
push
xor
fsts
pop
mov
ss
out
lods
adc
aad
mov
in
daa
mov
pop
call
push
add
test
inc
inc
outsl
and
cs
sbb
push
push
lret
push
xlat
scas
ss
cltd
lds
mov
and
es
adc
mov
mov
push
mov
cmp
jbe
cmpsl
ss
jno
sub
jle
stos
xor
push
shl
sub
push
push
js
lods
insl
stc
and
pop
adc
out
fnstenv
push
xchg
enter
dec
sti
xchg
cltd
push
cmp
lods
and
aaa
subb
addr16
mov
fdivrp
and
movsb
repz
std
adc
sub
xchg
adc
ljmp
repnz
jns
xor
push
test
inc
jp
inc
mov
test
lcall
imul
add
outsl
in
in
cmc
out
stos
mov
cmp
lret
scas
and
stc
lcall
xchg
pop
jp
clc
push
cmp
dec
pop
dec
into
mov
jno
add
jge
stc
mov
sahf
cmp
mov
aaa
jae
dec
push
aaa
loope
popa
sbbb
lret
inc
xchg
adc
shrb
xchg
adcb
fldenv
pop
xlat
xchg
js
repnz
in
pop
fdecstp
das
add
test
dec
fcomi
xchg
dec
lods
and
imul
sub
add
ds
loope
mov
cmc
or
stos
sub
mov
add
movsl
dec
decb
enter
rorl
adc
pop
push
cmpsl
into
inc
dec
xchg
js
mov
adc
in
arpl
test
push
mov
jmp
fwait
mov
addr16
stc
rol
jae
push
inc
int3
mov
push
test
icebp
cmp
cld
test
xor
or
sub
fistl
mov
daa
xchg
scas
mov
mov
dec
and
std
popa
mov
jnp
xor
fbld
sbb
inc
jns
lea
in
aam
mov
in
lahf
jl
out
scas
inc
fs
loope
scas
dec
out
xlat
push
jecxz
and
mov
jge
inc
dec
push
dec
ljmp
ja
aas
push
push
imulb
clc
pop
or
mov
ja
call
and
mov
daa
sub
sbb
enter
je
stc
adc
lods
aaa
mov
mov
or
pop
inc
adc
in
scas
cmp
pop
adc
dec
dec
sti
cmp
scas
xchg
lcall
jb
dec
js
in
mov
cltd
mov
test
or
pop
jb
cltd
jbe
xchg
jg
dec
xor
cmp
sahf
out
out
cmp
mov
lret
jb
cwtl
adc
outsl
jo
cmp
ret
hlt
or
xchg
xchg
push
jmp
arpl
xchg
jg
mov
and
loope
nop
or
mov
add
subl
mov
xchg
lcall
and
stc
lahf
push
adc
ljmp
jae
das
xchg
je
or
push
jge
inc
lea
ficomps
ljmp
lea
out
mov
out
int3
push
cmp
stos
and
cmpsb
mov
add
ficompl
push
sub
repz
dec
repnz
and
out
mov
dec
mull
dec
adc
leave
pop
sub
int3
add
xlat
pop
scas
mov
aas
inc
std
or
adc
mov
orl
sahf
fstl
or
jl
sbbl
push
and
mov
out
xor
divb
pop
ret
jb
inc
ljmp
add
adc
jg
dec
ss
adc
cmp
test
add
fwait
test
cmp
notl
inc
cld
sub
jecxz
cmc
xchg
jns
push
inc
shrb
mov
fmuls
pop
mov
dec
test
cmp
pop
mov
in
cmp
sbb
jg
sbb
mov
loopne
jnp
mov
and
sbb
std
in
cmpsb
fsubrs
push
stc
out
das
bnd
mov
fiaddl
xchg
pop
xor
xchg
int3
xor
pop
repnz
push
push
outsl
fsts
aas
push
sti
mov
lods
sub
lret
mov
xchg
in
add
jno
adc
pop
scas
add
decl
insl
sbb
inc
lods
inc
dec
pop
fsubr
sub
jbe
jge
xor
movsl
ss
push
mov
sub
mov
popf
sbb
sbb
cmpsl
addr16
jl
xchg
call
mov
scas
outsb
dec
stc
lahf
clc
mov
fdivl
inc
fsubrs
repz
loope
out
sbb
cmp
mov
stos
ds
lea
xlat
xchg
jo
imul
mov
add
int3
mov
adc
outsb
mov
faddl
stc
clc
sbb
hlt
mov
sub
and
bound
inc
scas
js
xor
mov
jmp
lock
dec
push
mov
out
popf
push
ljmp
mov
xor
scas
pop
int3
jge
jmp
sub
lea
push
sbb
bound
call
lds
push
jo
push
pop
xchg
push
jbe
xor
loope
inc
or
add
sub
leave
adcb
test
xchg
mov
cmpsb
add
mov
scas
pop
jp
cld
test
or
popa
sub
and
shrl
and
jne
inc
push
push
mov
mov
es
dec
in
dec
pusha
movsl
push
cmp
fbld
out
stos
in
dec
clc
ds
popf
pusha
and
loopne
jmp
jnp
add
xor
xchg
das
aas
sub
xchg
dec
icebp
fs
cli
cmp
sub
dec
jecxz
lret
lds
out
xchg
daa
mov
lds
push
or
jnp
mov
out
mov
imul
popf
inc
mov
ljmp
sbb
push
push
push
iret
sbb
loopne
sbb
jmp
sbbb
mov
add
stos
loopne
mov
aad
dec
xor
mov
sub
rcrl
ss
push
jns
inc
sbb
push
jno
int
xlat
insb
cmpb
fidivl
xchg
xchg
xchg
sbb
jns
lock
cmpsb
ret
test
push
orb
fistps
cmp
push
inc
iret
das
jg
mov
fadd
popf
sbb
adc
jne
in
scas
outsb
jnp
and
cmp
and
add
cmpsb
popa
mov
bswap
fistps
daa
rorb
popa
pop
in
adc
push
mov
cmp
xchg
jmp
push
push
adc
nop
inc
mov
in
mov
pusha
push
int3
daa
dec
pop
insl
fwait
xor
pop
jnp
mov
push
cmp
xor
add
shr
call
pop
jp
cli
es
inc
jle
cmp
jecxz
lret
orl
cmp
xlat
outsl
and
cmc
lock
ljmp
dec
dec
ret
mov
or
mov
xor
leave
add
jmp
add
cmp
jns
int
ret
and
pop
stos
cli
test
xor
test
out
xchg
pop
rolb
mov
sarb
and
mov
scas
mov
notb
mov
push
sbb
insl
add
lods
dec
cmp
add
or
into
mov
sub
mov
outsb
neg
xchg
cmp
or
scas
mov
daa
lds
push
lds
lcall
and
and
add
movsl
lcall
scas
mov
inc
dec
sarl
adcb
ficomps
lock
xor
and
push
sbb
push
xchg
int
daa
xlat
adc
adc
lret
mov
lret
jmp
lock
sub
add
xchg
rcrb
int3
or
dec
lret
jl
in
adc
and
or
bnd
inc
and
inc
cmpsb
mov
xchg
or
xorb
push
pushf
dec
mov
adc
jbe
inc
cwtl
sbb
dec
or
pusha
dec
lcall
sbb
add
int3
mov
push
xchg
xchg
cmp
fildl
inc
imul
cwtl
jo
clc
aam
imul
iret
shlb
lds
add
pushl
fmuls
pop
dec
xor
sbb
dec
lahf
repz
cmpsb
dec
adc
sub
jmp
sub
div
test
lds
add
xchg
or
cs
aad
pop
inc
mov
shlb
mov
sub
xor
fcmovnb
add
inc
mov
or
imul
sti
inc
mov
mov
xor
mov
inc
pusha
mov
fs
jp
testb
xlat
pushf
fs
pop
jp
sbb
dec
add
test
sub
cli
stos
add
pop
dec
pusha
mov
mov
add
loopne
xchg
push
test
in
fs
aad
inc
in
das
insl
movsl
gs
enter
adc
mov
lahf
pop
jle
ret
mov
inc
mov
outsb
movsb
imul
iret
je
pop
jbe
or
and
rol
mov
sub
jb
mov
pop
cmp
jno
and
data16
push
int
xchg
ret
fsts
pop
cld
fidivrl
push
sti
push
ja
and
or
hlt
mov
test
and
andb
sbb
ret
popf
push
mov
push
hlt
aad
jl
jle
xor
sub
shrl
dec
sar
push
xor
ds
loopne
mov
inc
cmp
loopne
movsb
pusha
sbb
inc
pop
testl
lea
les
not
mov
lock
add
sbb
cmp
repnz
dec
jns
popf
fistps
and
mov
je
inc
and
insb
or
dec
adc
xchg
sub
xchg
fisubrs
xor
or
in
in
lcall
adcl
js
push
and
pop
sbb
mov
mov
shrl
mov
pop
jb
push
xlat
sbb
add
ret
mov
inc
or
push
wbinvd
cmp
sub
sbb
fucomip
mov
jne
lret
jp
adc
inc
insb
sub
hlt
lods
sub
imul
mov
push
xor
dec
push
add
mov
and
cld
lds
test
daa
push
inc
repnz
movsl
cltd
pop
pop
ret
adc
pop
dec
rcrl
shrb
cmp
push
jp
jp
xchg
sahf
push
fisubrs
aad
jge
and
out
je
adc
mov
cld
mov
mov
fdivr
aaa
push
dec
arpl
sti
test
dec
xchg
in
rcll
mov
inc
cmpsb
ss
icebp
mov
gs
inc
pop
in
adc
sub
add
pushf
jl
push
ss
je
mov
mov
or
jl
ds
lea
mov
mov
push
jno
mov
test
dec
inc
shl
jo
popf
not
lret
insb
mov
mov
push
xor
insl
movsl
aaa
bound
sbb
mov
mov
jnp
cmp
jno
cmp
ucomiss
enter
mov
cwtl
push
movsl
orl
xchg
inc
out
mov
mull
lods
and
fs
jmp
push
cmp
loopne
iret
data16
and
add
outsl
cltd
enter
aad
les
jnp
icebp
dec
xchg
jne
inc
jl
addr16
xchg
push
and
notb
pop
pop
cs
lods
jl
push
mov
aaa
cli
mov
call
sbb
arpl
outsb
cmp
test
lahf
scas
int3
lret
inc
iret
and
dec
lahf
adc
sub
xlat
loop
dec
out
lahf
cmp
sti
push
aad
and
mov
xchg
out
inc
rclb
push
push
lds
movsl
or
mov
leave
lods
clc
rcl
cmpsb
xor
mov
mov
jne
enter
notl
cmpb
fs
mov
push
sub
call
cmp
mov
mov
outsl
dec
sti
cmpsl
in
add
or
aas
xchg
mov
dec
mov
adc
push
mov
xor
sub
movsl
in
adcb
in
sbb
xchg
mov
mov
movsb
pop
jecxz
and
int
pop
cmpps
les
test
inc
xchg
pop
ret
adc
dec
sub
cmp
aam
test
inc
jg
rol
mov
cmc
push
dec
stos
aam
sub
jne
mov
out
jg
call
pusha
sub
outsb
ljmp
in
aas
dec
stc
pop
sub
sbb
xchg
xor
adc
sbb
jp
sub
add
ja
sbb
loop
call
pop
mov
sub
aam
int3
jne
or
insb
add
inc
xor
nop
jecxz
adc
sti
clc
repz
lahf
mov
xor
or
jl
push
jnp
jno
mov
jg
xchg
or
sub
shrl
test
pop
lahf
out
dec
pusha
add
dec
shrb
std
mov
add
mov
test
and
das
ficompl
inc
aam
out
push
sbb
repz
dec
addr16
push
or
push
in
mov
mov
insw
sbb
dec
notb
jne
xlat
leave
mov
inc
push
out
cmp
push
fsubl
inc
xchg
popf
inc
out
ljmp
jle
push
adc
jbe
ficomps
xor
push
sahf
dec
cmp
or
inc
jne
cli
mov
cmovbe
cmpsb
sbb
test
dec
xchg
ret
mov
sbb
mov
and
jo
lds
mov
sarl
pop
push
ja
push
repnz
std
dec
jnp
fs
push
mov
call
scas
xor
fadds
sbb
test
pushf
scas
mov
out
adc
xchg
repz
xchg
cli
rorb
cmp
shl
mov
adc
lea
addr16
pop
dec
leave
add
cmpsl
dec
pushf
repz
and
sti
sub
add
shlb
loopne
mov
in
push
shl
sbb
xor
push
test
sub
push
js
push
adc
mov
cmpl
push
mov
in
jle
lods
sub
push
ret
mov
sbb
sbb
mov
ds
jecxz
jo
outsb
inc
xor
mov
or
je
fwait
xor
sbb
xor
lods
mov
xor
mov
dec
cmp
cmpb
pop
enter
imulb
sbb
adc
pop
add
cmp
dec
pop
sub
adc
sahf
stos
xchg
or
xor
xor
mov
jo
add
xchg
mov
lods
dec
mov
pop
mov
loop
mov
dec
ja
test
add
pop
dec
cmp
int3
sbb
jle
sbb
lret
jbe
scas
int3
into
arpl
xlat
ret
mov
xchg
jecxz
and
aad
ja
add
sbb
data16
add
jne
ljmp
insl
arpl
push
testl
leave
jb
fwait
dec
inc
jle
iret
je
inc
fwait
pop
out
xor
inc
inc
xchg
or
sbb
ljmp
inc
jl
mov
pop
bound
xchg
pop
mov
lahf
fmuls
in
adc
mov
mov
in
sar
leave
and
mov
or
sbb
inc
adc
xchg
inc
xchg
push
xor
and
enter
or
outsl
iret
insb
mov
repnz
ds
aam
test
fsub
int3
inc
addr16
mov
ret
mov
cwtl
adc
jmp
jg
add
ss
dec
sahf
in
ljmp
icebp
gs
decl
pusha
and
orl
lret
mov
push
xchg
or
push
pop
pop
push
ss
lds
pop
inc
lret
ljmp
and
aaa
int3
sbb
inc
icebp
ss
sub
decl
mov
dec
lock
stos
fbld
xchg
stos
dec
pop
fwait
sub
cmp
add
scas
sub
hlt
jb
sti
jne
mov
jne
pop
inc
pop
sbb
inc
xor
xchg
and
std
pop
adc
add
in
cmp
sub
movups
xchg
lods
popf
adc
jp
js
pop
stos
sbb
or
cmp
ljmp
xchg
out
jecxz
mov
inc
xor
popl
jl
xchg
sbb
sub
gs
es
add
mov
adc
add
rol
test
mov
aaa
icebp
leave
test
or
sbb
repz
roll
ds
xor
dec
ficompl
and
xor
push
cmpl
icebp
push
cmp
and
out
inc
lret
and
push
mov
xor
fcmovnu
jmp
daa
aas
inc
pop
out
sbb
addr16
adc
cli
push
sbb
pop
dec
xchg
out
pop
xchg
jno
jle
sub
adc
inc
subb
leave
cmp
mov
loop
jne
int3
cmp
pop
out
mov
lcall
jg
cmpsl
dec
ficoms
push
mov
int
lea
cmp
sub
lods
testl
mov
cmp
mov
jno
sub
mov
xor
jbe
adc
fidivs
mov
xchg
aas
dec
or
fcoml
enter
insb
xor
or
lds
dec
pop
jbe
scas
pushl
pop
xor
dec
xor
stc
scas
mov
mov
jmp
add
imul
imul
stos
out
mov
out
mov
add
jbe
ljmp
pushl
divl
int
mov
push
adc
jecxz
and
jmp
xchg
cmp
jb
movsl
dec
and
aad
pusha
pop
dec
jnp
movsb
aaa
pop
pop
and
lods
sbb
pop
jp,pt
xchg
movsl
fiaddl
addr16
inc
iret
in
js
sub
inc
mov
lods
or
mov
and
shlb
shl
cld
repz
dec
mov
lahf
mov
add
push
mov
je
aas
jl
dec
jbe
add
xchg
mov
mov
pop
and
pop
mov
daa
jno
fists
fsubr
loope
cltd
ljmp
mov
pop
jo
jl
push
inc
push
es
repnz
es
mov
ds
test
out
inc
sbb
and
pop
sub
or
adc
mov
cmc
push
out
mov
in
insl
jne
je
lea
inc
cmpsl
ret
cmpsl
lret
jo
cltd
filds
cmc
lods
mov
add
lds
mov
sub
sbb
push
addr16
xchg
push
pop
dec
mov
push
dec
xor
dec
ja
decl
dec
xchg
insb
pop
add
push
data16
cwtl
jmp
jae
add
fwait
jb
cld
mov
pop
push
mov
mov
and
das
pop
inc
cld
and
xchg
out
sub
cmp
sub
lods
shl
push
in
fidivs
push
cwtl
popa
mov
insb
loope
or
push
mov
mov
rcrl
jle
push
call
les
shrb
mov
test
sub
js
cmp
daa
shrb
xchg
and
out
mov
pop
xor
and
adc
push
mov
lahf
das
ljmp
outsb
pop
jb
add
add
mov
pushf
and
out
lret
push
dec
sbb
stc
shl
out
push
pop
icebp
mov
out
iret
xor
in
inc
cmp
jo
into
sarb
sahf
fisubrs
lcall
add
cmp
inc
push
je
data16
pop
adc
testl
add
imul
push
sbb
mov
into
leave
imul
das
xor
es
mov
out
jg
mov
lea
sbb
pop
loope
imul
jne
lea
cmp
mov
fisubrs
dec
adc
mov
jno
mov
or
popf
mov
insb
cmp
test
rol
fsubs
lods
in
mov
mov
xchg
jg
xchg
cmpsb
push
fnstcw
aad
ljmp
pop
push
dec
ss
cmp
fildl
icebp
xchg
xchg
mov
jae
fsts
xchg
xchg
mov
dec
cld
cmp
test
loope
xchg
dec
dec
dec
movsb
sub
push
shrl
lods
dec
pop
test
int3
movsl
mov
lahf
ja
jbe
out
std
pop
jnp
mov
daa
or
lds
pop
test
loopne
sar
lds
inc
mov
sti
insl
dec
jne
dec
das
xor
jns
adc
rclb
adc
repnz
ret
sbb
jns
dec
test
sahf
rcl
xor
adc
std
stos
mov
loop
fmull
and
cmpsb
arpl
push
cli
repnz
mov
in
fidivs
adc
mov
adc
mov
xlat
and
add
adc
inc
inc
mov
loope
inc
pop
test
push
out
nop
cmp
sub
xchg
mov
ja
and
movsl
out
popf
icebp
or
test
pusha
lock
dec
insl
mov
dec
mov
inc
cmp
div
or
jle
stos
mov
dec
pushf
insb
mov
loope
fistpl
lds
shrl
jae
gs
xorl
push
jns
rcrl
test
sub
jb
cmp
fs
push
or
jle
sete
mov
or
sub
adc
icebp
sbb
sub
add
xor
gs
xor
andl
mov
mov
cmp
jae
xchg
aam
push
push
jge
test
ds
out
or
sbb
sbb
inc
lahf
enter
and
cmp
imul
out
inc
mov
ja
pushf
ftst
add
vunpcklpd
dec
sti
bound
pop
fisubs
mov
es
cmpsl
mov
dec
pop
aas
movsl
push
idiv
push
sbb
scas
mov
mov
mov
xor
inc
push
jg
push
jns
push
adc
je
ja
flds
inc
pop
insl
rclb
lods
sub
call
outsl
mov
pop
mov
fdivrs
jmp
xor
ret
pop
cld
and
scas
pop
jmp
rorl
in
and
or
sub
ds
adc
je
cmc
movsl
fstl
sub
jbe
loope
test
sbb
or
je
mov
jbe
add
inc
push
mov
aas
push
inc
add
sub
int
ljmp
push
loopnew
or
mov
inc
popa
pop
les
push
pop
adc
vhsubps
pop
rclb
inc
int3
test
repnz
sub
int3
loop
clc
cmp
les
mov
xor
into
jno
inc
jnp
std
xchg
jmp
adc
stos
jge
adc
shlb
xchg
jge
and
test
out
cmp
add
call
pop
and
imul
jmp
ljmp
push
pushf
sbb
dec
rorb
add
nop
add
imul
leave
mov
xor
jno
sbb
mov
in
adc
imul
mov
push
aas
lcall
adc
add
je
scas
jecxz
fwait
add
ss
xor
or
in
imul
pop
mov
fwait
ret
popf
or
popf
and
and
clc
jno
jno
test
push
cli
fistl
pop
cmp
rorl
cs
xorl
fcoml
jnp
jl
dec
outsl
rcll
inc
hlt
jg
jae
pushf
out
fsubs
in
xor
fnstsw
xlat
addr16
sub
outsl
dec
jb
add
mov
movsl
mov
js
popa
cwtl
cwtl
imul
inc
lahf
lods
int
std
xor
cs
xchg
scas
decl
nop
add
adc
stc
jge
les
cmp
mov
jge
les
leave
aam
adc
xchg
dec
orl
outsl
iret
div
cmp
cmp
bound
loopne
cmc
push
pop
jno
cmp
mov
bound
jl
mov
pushf
add
and
lea
xchg
test
insb
icebp
and
ss
jb
pop
mov
or
hlt
fcomps
sahf
repnz
ss
roll
imul
or
in
inc
les
adc
push
or
cmpsl
mov
in
xchg
lret
jb
jo
adcl
call
push
cmp
sar
clc
fsubs
daa
cmp
mov
mov
iret
or
sti
sbb
jg
inc
cmpsb
sahf
es
sbb
and
or
enter
popa
stc
push
ja
out
shll
test
xchg
insl
push
cmp
test
rol
inc
jnp
rcr
push
std
or
jp
xor
pop
jmp
das
sub
adc
into
std
or
in
icebp
inc
pop
adc
cmovae
popf
fmul
outsl
lret
jb
mov
add
push
into
test
rorb
push
lea
xlat
pop
pushf
mov
lea
data16
in
add
inc
dec
dec
bound
cmp
and
lcall
int
lcall
mov
mov
icebp
mov
and
std
adc
inc
jp
nop
shll
inc
out
mov
adc
inc
jmp
out
push
scas
aas
into
sbb
insl
out
cmpsl
xor
into
mov
jecxz
xor
pop
outsl
cmp
pop
enter
mov
test
add
repnz
mov
mull
hlt
sbb
jnp
inc
mov
jecxz
ljmp
fld
sub
sbb
jl
movaps
xchg
sahf
adc
mov
cltd
inc
mov
ret
push
fildl
xor
jno
cmp
mov
add
les
popa
rcrl
call
inc
mov
loopne
imulb
mov
xor
loope
out
mov
adc
mov
sub
inc
sbbb
mov
add
insb
clc
gs
bound
fidivrl
pushf
outsl
dec
xchg
fs
out
cld
add
inc
adc
int
xchg
dec
ja
sbb
mov
add
mov
jge
dec
cmpsl
sub
jae
outsb
insl
push
fstps
cmp
inc
add
push
mov
xor
fcmove
mov
and
and
sbb
out
dec
test
mov
lods
sub
and
repz
xor
push
mov
repnz
test
test
cmp
cmp
inc
insb
lea
dec
xchg
lods
outsb
adc
int3
sub
xchg
leave
rorl
mov
out
fsub
xchg
jns
or
pop
fldl
jp
adc
int
pushf
stos
inc
jb
xor
mov
shrb
jbe
hlt
cmpsl
into
movsb
addr16
loopne
test
xchg
mov
insl
adc
scas
fdivl
cmovns
lea
and
xchg
out
push
jmp
sbb
lods
mov
div
xor
sbb
fs
into
leave
scas
fwait
inc
lahf
mov
jae
adc
add
mov
test
les
sub
stos
or
or
rclb
cmpsl
or
mov
xchg
lret
nop
out
cmp
mov
sub
ljmp
sahf
hlt
outsl
mov
mov
add
mov
and
xlat
mov
lahf
mov
les
shlb
shrb
mov
mov
mov
call
and
cmpl
mov
fiadds
test
jp
mov
aas
es
mov
mov
popa
mov
sti
jns
mov
jns
sbb
lock
pusha
adc
pusha
mov
movsl
mov
call
sarb
popa
mov
pop
clc
ret
push
fwait
je
adc
xor
repnz
addb
out
incl
mov
add
dec
inc
sub
ficomps
insb
and
adc
nop
add
mov
adc
cli
fsubr
push
and
subb
pop
sub
xchg
cmp
fdivs
pop
jle
cmc
pusha
int3
addr16
repz
push
test
repnz
inc
sub
repz
int
adc
mov
add
lcall
mov
adcl
cwtl
fcom
mov
test
sbb
lods
mov
mov
mov
mov
and
dec
sbb
out
pop
and
push
xchg
mov
adc
push
std
mov
arpl
insl
fildl
jae
js
imul
nop
xchg
out
pop
scas
jp
mov
pop
pop
aam
mov
mov
adc
pop
xchg
adc
scas
adc
iret
shll
dec
pop
push
sahf
adc
orb
shlb
scas
sub
xchg
scas
xchg
pop
pop
sub
shrl
sub
ja
mov
mov
enter
xor
xor
dec
lcall
adc
or
inc
inc
cmp
shlb
sbb
add
enter
clc
jo
subb
jns
out
fsubl
je
idiv
sub
mov
mov
sarl
mov
mov
sbb
cld
cmc
leave
dec
dec
jne
sbb
cmpb
fwait
mov
xchg
cmc
pop
nop
cmpsl
ret
loope
imul
mov
pop
neg
cwtl
inc
fisubrl
popa
pop
push
rolb
repz
shrl
xor
pop
shr
and
push
pop
mov
dec
jbe
xchg
jp
stos
and
test
inc
mov
sbb
sbb
std
rcrl
sahf
pop
lahf
sti
arpl
push
xchg
mov
clc
loopne
inc
shlb
mov
ss
inc
lret
and
imul
ljmp
jne
cld
dec
pusha
test
push
addr16
pop
adc
cmp
adc
unpckhps
test
icebp
adc
push
cmpsb
loopne
xchg
cmp
mov
lret
cwtl
xor
rorb
cmp
jo
mov
or
mov
dec
xchg
daa
fmull
jae
fadd
lock
lea
bound
jae
sbb
incb
mov
cmp
jmp
es
idiv
lds
lock
jo
push
lea
dec
nop
loopne
mov
iret
fld
jns
add
nop
and
jge
clc
cmp
sub
sahf
ffreep
mov
jp
mov
bound
or
fbld
sbb
jecxz
mov
negb
jge
sub
je
add
push
mov
pop
lcall
cmp
insb
test
push
lods
xchg
xor
cmp
push
fdivl
inc
mov
pop
mov
mov
lock
add
or
imul
xor
dec
jp
fisttpll
popa
jne
aas
movswl
mov
mov
xlat
ljmp
jecxz
xor
jo
or
mov
dec
mov
add
sti
lahf
dec
mov
mov
xchg
loop
jnp
mov
into
jmp
inc
sti
ja
nop
adcl
cmovs
jnp
pop
rcl
xchg
push
and
das
lea
jmp
sahf
sbb
out
adc
cmpsb
daa
inc
push
jbe
mov
incl
jecxz
or
rcll
stos
xchg
repz
in
addr16
popa
daa
shlb
add
sbb
jnp,pn
jl
pop
in
scas
and
or
push
mov
or
jne
daa
jl
movsb
sbb
jle
push
and
incl
andl
dec
xlat
scas
pop
inc
jmp
mov
push
mov
lods
dec
sbb
decl
sub
pop
mov
push
xor
mov
lock
sub
aam
ds
mov
xor
stos
xor
scas
popa
fs
sbb
inc
push
ret
pop
cmpsb
add
je
push
stos
jbe
in
mov
mov
lret
ss
cwtl
cmp
int
int3
lret
popf
xchg
enter
js,pt
cmp
movsl
pop
pop
sti
outsb
dec
mov
mov
mov
mov
mov
xchg
mov
fwait
ljmp
nop
mov
into
aaa
fisubs
out
push
xor
inc
sub
cltd
or
out
fnsave
push
sbb
stos
js
inc
push
int3
jo
lahf
cmc
cmp
imull
lock
mov
stc
mov
xchg
cmp
je
aaa
mov
addl
sbb
jg
pop
push
imul
mov
add
rcrb
push
stc
jne
mov
mov
add
in
push
adc
inc
shll
xor
enter
inc
call
cmp
es
daa
xor
fsubrl
jmp
xchg
mull
push
scas
outsb
jmp
popa
mov
xchg
inc
sbb
xchg
add
pusha
and
aaa
jno
and
lret
xor
das
push
push
mov
add
mov
sbb
and
mov
fdivr
psubusw
push
and
psrlw
inc
cmp
jb
jno
inc
xchg
add
je
insb
push
loope
add
jecxz
rcrl
loopne
dec
xchg
jae
cltd
dec
adc
or
enter
inc
pop
inc
clc
inc
fnstcw
lea
push
jl
jo
add
mov
or
jo
scas
scas
enter
je
xor
in
xor
jge
add
lahf
lret
cmp
cmp
adc
pop
ret
mov
jne
repz
rclb
or
adc
xlat
jno
pop
xor
xchg
push
jecxz
xor
rorb
dec
aas
push
pop
mov
loope
jo
push
dec
jne
call
fmuls
and
pop
loop
jbe
and
mov
scas
pop
dec
jns
sub
sti
sbb
shll
dec
stos
ja
cmp
sti
xchg
icebp
push
dec
out
xchg
cmpsl
cwtl
cmp
mov
dec
dec
mov
adc
push
psubsw
xchg
fists
out
mov
imul
popa
jns
rolb
xchg
js
sarl
sub
push
jge
push
fld
jl
lahf
icebp
nop
or
and
push
gs
add
stos
inc
sbb
xlat
push
mov
sbb
mov
cmp
cmpsb
mov
mov
sub
bound
cmp
sar
lcall
mov
add
cmpsb
sub
mov
movsb
inc
xor
pop
mov
aas
jg
mov
jnp
insb
sti
jbe
popf
dec
cmp
js
sub
xor
mov
push
movsb
imul
or
xchg
fmuls
xchg
and
std
rcrl
movsb
mov
mov
aad
call
cld
insl
lods
std
pop
int3
rcr
mov
cmp
mov
insb
mov
adc
jne
popf
stc
outsl
out
daa
push
mov
push
dec
movsl
inc
xchg
shrl
cmp
sbb
cmp
mov
fisubrs
frstor
push
mov
xor
in
push
mov
push
pop
pushf
xor
movsb
and
shll
push
jae
push
mulb
testl
outsb
push
inc
aas
mov
xchg
pop
xor
push
pop
lret
xor
push
shll
sbb
cmp
test
mov
dec
sbb
rolb
test
or
xchg
in
roll
push
cmc
lahf
jp
cmp
jno
pop
ljmp
cs
lret
push
fnstenv
inc
cwtl
out
popf
lahf
aad
sbbl
fnsave
fistpl
enter
shr
mov
lods
xor
xlat
and
adc
pop
pavgb
lods
repnz
and
imul
and
fnstenv
jno
je
and
jbe
mov
ffree
test
out
push
pusha
call
das
xor
data16
cmp
mov
pop
or
inc
imul
aad
aas
dec
xor
imul
fcmovnu
imul
push
int3
mov
and
push
ja
sub
and
mov
sub
das
fadds
adc
cmpsb
out
fnstsw
mov
xor
js
aam
mov
mov
sub
sub
adc
or
and
inc
mov
adc
push
pop
lods
les
insb
jmp
loopne
sub
xchg
mov
leave
mov
lret
and
dec
pusha
adc
sbb
add
ljmp
xor
pop
enter
call
testb
enter
lret
and
lock
std
pop
mov
pop
inc
push
mov
rcrl
push
sahf
popa
xor
das
insb
dec
pusha
shll
add
pop
mov
lea
imul
and
loop
ljmp
jmp
push
xchg
adc
iret
popa
inc
jmp
arpl
and
fistl
jg
mov
iret
xor
pop
and
push
mov
and
and
inc
sub
std
and
mov
leave
sbb
ja
jecxz
repz
shr
fidivrs
cmp
mov
cmp
aaa
in
xlat
mov
mov
in
pop
inc
mov
idivb
jo
loop
pusha
jne
or
jmp
bound
push
nop
daa
inc
dec
insl
mov
loope
dec
movsb
fisttpll
mov
pop
leave
adc
inc
adc
insl
adc
outsl
mov
popf
xchg
inc
ficoms
cmp
ja
cmp
out
dec
ja
xchg
adc
sbb
sahf
inc
cmpsl
mov
loopne
popa
sti
or
xchg
cmp
xchg
xor
or
aad
mov
cmp
inc
push
in
scas
xchg
and
pop
fidivrl
jp
lea
fldenv
inc
xchg
bound
pop
out
cmp
pop
cmpsl
pop
fsubl
add
push
ljmp
ja
jge
adc
adc
push
clc
sbb
out
push
lods
or
sub
mov
xchg
mov
dec
lds
fldenv
pop
add
sbb
push
inc
mov
mov
xchg
nop
test
cwtl
add
cmp
mov
pop
aas
int
mov
adc
adc
jnp
add
fxch
mov
or
or
fistpll
sub
mov
dec
jp
icebp
js
add
mov
into
je
pop
es
in
lahf
adc
push
dec
loopne
insl
stos
sbb
mov
rcrb
push
cmc
and
xchg
cmp
mov
mov
insl
imul
mov
test
pop
mov
mov
xchg
adcl
insb
jno
dec
negb
xchg
mov
mov
stos
push
orl
and
out
stos
ds
dec
mov
adc
shlb
jg
inc
push
sub
jle
cmp
mov
fsubl
mov
xchg
data16
bswap
fisubrl
dec
leave
jg
sbb
add
jbe
dec
dec
push
xchg
xlat
push
or
mov
sar
pop
cld
mov
push
std
mov
mov
jo
lock
jns
mov
adc
push
push
push
mull
movsl
bound
test
push
mov
stos
inc
pop
je
pop
int3
cld
mov
stc
xchg
adc
in
push
inc
and
or
movsl
int
xchg
xchg
pop
add
aad
jnp
or
xchg
dec
xor
push
cmc
cmp
jo
shr
mov
sahf
test
push
std
xor
fistps
inc
xlat
lods
push
stc
xchg
and
xlat
adc
pop
scas
xchg
lret
adc
stos
addr16
inc
push
inc
mov
add
push
adc
lcall
mov
cmpsl
and
in
das
jge
mov
jae
mov
jp
cltd
jno
fidivl
filds
xchg
lods
adc
pop
mov
fs
mov
sub
aaa
stos
shrb
rcll
mov
mov
popf
sbb
pop
dec
jge
leave
jnp
popf
cld
adc
pop
xor
out
jns
push
cmpsl
jb
pop
xor
ljmp
ror
sbbl
push
mov
xchg
push
xor
ss
xor
insl
sti
mov
inc
les
loope
add
or
shrb
xor
xor
sub
adc
mov
fwait
test
push
sbb
popf
das
and
inc
xchg
jne
movsl
sbb
int3
enter
pop
imul
jg
notb
jl
popf
mov
push
jp
pop
les
fimuls
push
adc
mov
les
nop
or
shl
adc
imul
int3
jb
xchg
add
ret
add
sahf
adc
ficoml
mov
rolb
imul
movsl
lods
andb
or
adc
mov
test
sub
jecxz,pn
aam
gs
cltd
push
out
lods
sbb
pop
mov
fbstp
addr16
sbb
xchg
mov
jns
movsl
jge
shll
pushl
xlat
jns
out
sub
andb
add
insb
or
mov
xchg
cmp
mov
and
fwait
push
mov
and
fadds
inc
in
pop
arpl
pop
lcall
inc
pop
testb
sub
fsubrl
cwtl
pushf
in
aaa
or
jae
jg
and
mov
pop
dec
cld
push
mov
dec
cmp
imul
mov
or
mov
and
pop
mov
clc
inc
into
add
xor
push
lods
add
imul
and
jae
or
lds
and
adc
lret
mov
cli
out
enter
or
xor
outsl
cltd
out
cmp
outsb
pop
fidivs
mov
push
mov
adc
pop
inc
and
in
xor
lods
xchg
rolb
jne
fisubl
cmp
pop
ja
sbb
lret
sub
add
arpl
inc
test
fisubs
mov
xlat
xchg
bound
bound
cli
xlat
jmp
es
cwtl
dec
push
fnstenv
sbb
push
repz
pop
add
xor
and
mov
jp
cmpsb
mov
and
aas
mov
fdivl
loop
rorb
mov
cmp
jb
orb
jg
pop
das
outsb
xlat
add
mov
dec
mov
jmp
mov
orb
push
dec
movsl
jo
dec
in
dec
pop
ret
movsl
test
scas
dec
rol
or
push
jo
xchg
sti
and
insb
addb
psubsb
push
repnz
in
inc
mov
jl
sub
inc
xchg
fsubrl
and
xchg
push
jns,pt
mov
rcl
ffree
cmp
add
pop
jp
mov
movsb
sarb
test
jecxz
cmp
ljmp
jns
mov
cltd
ljmp
insb
and
xchg
dec
dec
add
jo
adc
or
dec
cmp
xchg
push
push
mov
xor
call
push
push
and
cmp
fcompl
mov
adcb
pushf
sub
mov
stos
jno
xor
mov
mov
adc
mov
iret
or
lret
addr16
inc
sub
call
out
and
xchg
adc
lock
enter
daa
pop
jns
push
jge
je
and
ljmp
flds
push
in
imul
pop
inc
cmpl
adc
sub
mov
movzbl
je
jbe
adc
movsl
inc
mov
repnz
add
loop
cmpsl
mov
and
imul
add
push
scas
sbb
loope
mov
add
loope
pop
mov
jae
repz
ds
lret
lret
loop
imul
aas
lcall
fdivrl
xlat
xchg
sub
push
xor
cltd
cmpsl
push
push
push
pop
or
hlt
out
jae
xor
sti
faddp
insb
lds
sub
jo
xor
cmp
jno
repz
repz
leave
push
mov
in
inc
scas
icebp
jmp
push
dec
xchg
out
lods
divb
cmp
aam
xchg
repnz
test
xorl
mov
sub
cli
jp
loopne
sbb
pop
sbb
push
fcmovbe
dec
mov
fwait
jge
inc
pushf
sbb
mov
cmp
inc
push
iret
arpl
and
aas
fidivrl
ret
or
pop
mov
mov
inc
mov
cmpb
cmp
push
or
mov
iret
sbb
addl
pusha
mov
icebp
xlat
out
aad
orb
jecxz
in
mov
sti
add
add
sarl
mov
mov
and
adc
jns
jg
sub
addr16
lock
mov
not
or
fucom
sub
push
inc
cmp
jb
fwait
dec
lret
iret
icebp
dec
lea
inc
rcll
add
mov
jno
xchg
adc
push
sbb
movsl
repz
push
leave
jno
rcrl
jmp
das
in
sarb
mov
sub
jo
rcll
dec
aas
xchg
xchg
cs
and
int
and
push
dec
jp
inc
add
sbb
mov
int3
sub
inc
call
fcomi
push
jnp
mov
lods
inc
push
in
jecxz
jg
inc
jne
fimuls
push
adc
xchg
mov
add
lods
mov
fidivrl
or
inc
inc
or
scas
sahf
outsb
sbb
mov
out
rcrb
dec
inc
out
xor
lret
ret
lds
ds
mov
xchg
subb
lcall
repnz
pop
rorl
enter
loope
ret
jmp
sbb
je
dec
sub
xlat
xor
addr16
push
add
xor
movsl
les
push
mov
push
arpl
ss
jecxz
addr16
pop
cmp
not
xchg
pop
mov
jns
cmp
adc
cli
bound
fnsave
or
jno
pop
adc
sbb
imul
mov
dec
lods
sbb
xchg
lods
jno
je
cltd
push
cmp
inc
xor
jecxz
insl
rol
inc
xor
test
sbb
out
negb
jl
arpl
jmp
aaa
mov
xchg
je
in
int
mov
lods
xor
pop
rorl
mov
inc
mov
fwait
pop
pop
insb
lds
roll
sbb
jnp
xor
mov
cmpsl
jmp
push
inc
jmp
shrb
add
int
mov
push
xor
sti
jmp
mov
or
mov
jp
decl
xchg
cs
and
int
call
in
js
xor
pop
inc
mov
mov
sbbl
sbb
jne
jo
into
mov
mov
out
cmp
mov
push
push
xor
inc
push
sub
test
cmp
pushf
hlt
xchg
pop
xorl
adc
push
push
sbb
test
repz
pop
clc
lea
rorl
adc
mov
insl
ss
gs
sbb
push
test
ret
pop
push
fs
lea
xchg
pop
mov
in
outsb
xor
repz
sub
gs
or
and
mov
jo
cwtl
pushl
je
adc
shll
in
sub
cmpsl
xchg
cmp
xchg
dec
sub
in
repnz
dec
mov
outsb
and
cld
testl
fldenv
rcrl
dec
dec
xchg
xchg
sbb
or
add
inc
adc
mov
mov
les
xor
lods
jp
int3
pop
leave
push
lret
leave
push
adc
push
lret
lds
dec
outsb
shrb
jle
push
xchg
ja
mov
cmpsb
or
mov
cmp
sub
pop
jp
inc
ror
psrlw
mov
popa
mov
and
jecxz
sub
stos
leave
mov
test
jns
or
aam
mov
and
sahf
xchg
mov
cmp
push
mov
cwtl
jp
lods
inc
dec
xor
loope
mov
mov
cli
loopne
arpl
test
pop
mov
fcmovnu
and
or
pop
xor
xchg
pop
repnz
mov
stos
cmp
mov
mov
sub
stos
lods
xlat
or
ss
xchg
mov
or
and
shlb
sbb
ds
jecxz
lret
mov
push
cld
shl
or
pushf
jge
mov
icebp
sub
les
lea
cmp
sahf
insb
repz
pop
push
ljmp
out
sub
push
and
sbb
cmpsb
fld
mov
jle
sarl
lds
and
out
outsb
std
popf
jp
adc
jb
mov
push
mov
ficoms
sbb
cmp
das
jmp
cmpsb
in
je
push
xor
in
xchg
sub
and
add
int
pop
or
pop
scas
pop
and
iret
xchg
in
dec
mov
cmp
cli
das
aaa
stos
jp
push
mov
ret
ret
fadds
icebp
push
push
ja
inc
adc
sti
ja
and
lret
pop
pop
xor
das
outsl
cmp
sbb
movsb
inc
insl
xchg
aam
xchg
fdiv
push
mov
faddl
sub
pop
push
sbb
inc
inc
and
push
add
sub
mov
dec
lahf
push
mov
decl
shll
inc
pop
mov
test
jp
mov
sbb
mov
dec
xor
mov
ljmp
fdivr
xor
jg
dec
int
jae
das
enter
call
andl
pop
in
cmp
insl
and
and
leave
add
ljmp
or
test
xchg
dec
mov
repz
cmp
mov
xchg
cmp
pop
cld
push
dec
loopne
mov
and
aas
lods
sahf
rcrl
movsb
jne
lcall
jbe
aam
shrb
aas
pushf
mov
mov
cmp
popa
sti
pop
insl
pop
cmp
push
mov
xlat
jl
dec
lods
pushf
fcmovne
hlt
loop
push
negb
or
cmp
inc
pop
std
insb
loopne
xchg
adc
inc
mov
or
sbb
and
test
mov
aaa
rol
mov
sbb
pop
insb
call
adc
pop
mov
mov
mov
adc
insb
add
in
pop
cmp
jns
push
ror
fistpll
fistpll
pushf
arpl
imul
lock
inc
scas
dec
cmp
rcrb
adc
icebp
mov
jl
dec
movsl
dec
shrl
pop
jl
stos
sub
and
jbe
sarl
sti
jle
iret
mov
fdivs
mov
and
xchg
enter
inc
call
push
mov
fld
inc
int
sub
in
push
ficoml
xchg
ljmp
xorl
ret
enter
cltd
or
scas
push
ljmp
sub
sarl
sbb
mov
add
mov
mov
in
insb
aad
mov
add
bound
loop
lock
mov
mov
or
jmp
pop
out
xlat
mov
sbb
or
filds
cmpsb
pop
fiaddl
fimull
dec
sub
pop
push
dec
dec
ret
js
ss
push
xor
sub
xchg
add
testl
stc
dec
mov
adc
jg
movsb
jns
shll
sahf
cmp
or
daa
pop
sub
push
fdivl
push
loop
push
sbb
lcall
in
push
popa
xchg
je
rep
outsl
and
loopne
es
xchg
xchg
pop
ret
iret
scas
lcall
sbb
ficoms
outsb
into
aaa
sahf
andb
lret
lahf
nop
out
mov
in
cld
popf
insl
test
cwtl
cmp
pop
push
cmp
enter
pop
mov
data16
xchg
addr16
mov
aad
test
sub
in
adc
xchg
hlt
xor
js
push
sbb
ss
pop
dec
push
jns
je
cmp
dec
xchg
or
insb
mov
fwait
outsb
or
inc
repnz
mov
xchg
inc
cmpsb
insb
dec
push
cmp
mov
mov
arpl
sub
shrb
jns
pushf
push
mov
aaa
imul
sub
push
sbb
push
in
xchg
mov
movsl
addb
test
or
pop
gs
inc
ret
push
adc
cmpl
mov
int3
shlb
mov
outsl
xor
scas
mov
pop
add
cmp
cmp
imul
mov
adc
add
movsl
rol
outsb
popf
outsb
into
pop
dec
jbe
push
cmpsl
ljmp
fildll
cld
or
into
and
aas
les
adc
xchg
lods
movsb
int
mov
in
adc
inc
rolb
out
leave
or
mov
inc
movsb
or
fsubrl
jecxz
sub
and
push
ja
xchg
cmp
pop
mov
mov
aas
dec
insb
lret
mov
jecxz
push
mov
roll
test
mov
jmp
out
push
mov
or
adc
mov
test
and
add
aaa
fistpll
jbe
cmc
mov
adc
jg
pop
and
jne
xor
ja
std
adc
int
dec
jge
push
mov
xor
js
lods
fisubs
sahf
jp
dec
xor
clc
sti
inc
outsb
test
add
xchg
cmp
pushf
push
mov
fnsave
and
inc
cmp
cmp
out
pop
es
call
inc
adc
bound
jge
or
pusha
js
mov
jecxz
sahf
lea
jge
inc
push
mov
inc
sarl
jecxz
and
rol
lods
lock
movb
bound
cld
inc
adc
das
divl
stos
test
mov
shlb
or
in
inc
adc
pushf
es
daa
scas
lret
pop
ja
push
cmpsl
push
adc
fmuls
pop
jg
push
in
lahf
xchg
mov
lea
cli
or
push
fwait
xchg
jl
pop
roll
pusha
mulb
pushf
daa
dec
lahf
inc
adc
push
jmp
sbb
and
pusha
jb
mov
xchg
adc
sub
fcompl
add
jae
push
call
data16
es
xorl
loope
pop
dec
nop
push
inc
sti
or
mov
ja
scas
nop
sbb
cmp
subb
stos
fsubl
jmp
xchg
cs
jb
lock
xlat
test
jl
and
jo
imul
or
jl
mov
cmp
push
lahf
push
cmp
jmp
std
fldcw
mov
cmp
sbb
fidivrs
dec
icebp
mov
sbb
arpl
outsl
rcpps
cld
imul
or
in
repz
ret
mov
xor
fdivr
add
mov
and
inc
xor
xor
shrb
call
pusha
sti
orl
fs
lock
xchg
sar
stos
cmpsb
push
and
xlat
repz
mov
inc
mov
ljmp
or
jne
int3
or
push
cltd
mov
mov
xlat
pusha
adc
xchg
test
cmp
mov
and
jmp
inc
mov
rcrl
cmp
jge
das
ret
inc
sbb
test
fistpl
stos
repz
or
fidivrl
in
call
neg
add
xchg
mov
gs
stc
mov
adc
imul
lret
xor
outsb
shll
bsr
pusha
test
push
and
movsb
fimull
ds
outsl
cs
cld
fildl
pop
or
mov
jo
imul
std
push
es
movsb
loope
mov
lock
sahf
xlat
cmp
pop
jmp
mov
icebp
mov
lock
mov
pop
fwait
mov
jno
test
cmc
pop
out
pop
jno
xchg
loopne
push
add
xor
ljmp
rcll
pop
test
or
addr16
fldl
fwait
mov
mov
addr16
es
pushf
inc
inc
ljmp
sub
push
loopne
cwtl
ficomps
and
ret
cmpsl
aam
adc
jmp
xchg
lahf
shrb
fs
dec
lods
xchg
adc
clc
addr16
jb
push
xchg
pop
mov
add
jae
xchg
xor
sub
mov
adc
cld
rorb
xor
add
mov
cmc
sahf
xorb
dec
push
fidivrs
fcmovne
aad
mov
inc
mov
jns
jae
pop
outsb
mov
shll
shl
xchg
inc
call
icebp
in
in
out
testb
and
rcrb
aaa
pusha
cmpsb
scas
mov
dec
add
repnz
fdivl
add
jo
jmp
pop
xchg
xchg
jns
pop
adc
jg
pop
into
push
push
aad
hlt
sub
cmp
mov
ds
insb
je
pmulhw
je
sub
icebp
pop
stc
cmpl
sbb
mov
jns
call
lahf
loopne
pop
sub
test
inc
xchg
mov
push
inc
cmp
sbb
sbb
or
sbb
mov
lea
and
arpl
mov
mov
dec
cmp
push
mov
mov
jp
clc
xor
cld
xchg
addr16
ss
jne
or
movsl
call
sub
cli
or
rolb
cwtl
loopne
pusha
push
mov
sub
ret
std
mov
popf
insb
jae
imull
in
ljmp
xchg
xchg
and
icebp
pushf
add
dec
jo
stc
lods
xor
dec
call
lock
sub
sbb
pop
testb
rcl
jb
mov
adc
fstl
dec
lea
ljmp
ror
test
je
fisttpl
mov
call
cs
push
hlt
es
dec
ds
pop
stos
or
or
outsb
mov
cld
inc
insl
cmp
jg
fsubl
jmp
pop
adc
adc
sahf
rcrb
xchg
mov
cmpsl
inc
pop
jp
ret
adc
mov
pop
push
mov
rorb
adc
les
and
mul
pop
mov
mov
pushf
pop
ja
xchg
ret
xchg
mov
lret
xlat
lds
xchg
in
push
imul
test
inc
cmpsb
lods
loope
pop
fidivl
mov
adc
xor
pop
pop
xor
add
xchg
aam
mov
adc
je
inc
inc
aad
fidivrs
roll
jnp
mov
mov
dec
inc
bound
lock
ljmp
dec
jo
cmpsl
xor
lcall
adc
xchg
xchg
xchg
repnz
arpl
jnp
xchg
jmp
repz
lret
popa
inc
lcallw
fisttps
xor
les
or
xchg
jl
insl
leave
and
push
jne
clc
dec
cmp
push
cltd
xor
shrl
imul
pop
or
jb
dec
lret
mov
test
daa
add
ljmp
icebp
daa
mov
push
xchg
sub
dec
xchg
dec
mov
fadds
dec
and
lods
insl
push
loop
mov
hlt
push
mov
or
js
into
das
xor
into
mov
jge
jge
and
dec
clc
jl
loopne
and
xchg
out
roll
sub
push
xlat
fs
clc
enter
sub
and
scas
test
sub
shlb
fildl
or
fsub
push
pop
or
pop
jl
push
jmp
aas
inc
xchg
and
xchg
jp
inc
imulb
cltd
cmc
or
iret
ret
and
test
push
stos
out
imul
daa
dec
add
dec
push
ss
out
mov
mov
or
xchg
arpl
clc
and
mov
sub
inc
xchg
cwtl
shrl
lods
popa
push
mov
scas
jg
iret
cmp
push
psllw
jl
hlt
jp
pop
xor
jge
pop
sub
mov
jbe
xchg
daa
mov
mov
dec
mov
add
adc
xchg
add
scas
ja
pusha
mov
stos
fst
sbb
push
add
jo
sahf
and
test
mov
out
dec
cmc
int
arpl
adc
insl
xor
mov
ljmp
test
shrl
xchg
cld
lds
adc
das
cmp
push
mov
frstor
fnstsw
repnz
cmpsb
push
sbb
inc
push
loope
cmp
push
aas
movsl
les
loop
es
mov
and
stos
xchg
dec
or
push
inc
mov
bound
sub
or
xor
mov
xchg
push
es
jns
push
outsl
push
iret
sbb
push
push
lds
pop
cmpsb
push
dec
add
cli
jbe
mov
repz
jno
subl
pop
test
and
mov
pop
xor
rclb
mov
xchg
push
lret
in
mov
gs
stos
and
push
xchg
repz
or
dec
add
fldt
pop
in
aad
stos
xchg
inc
pop
jmp
xchg
popf
jl
scas
ret
adc
dec
in
mov
adc
xor
addr16
jae
std
inc
jne
ss
mov
push
mov
mov
xchg
or
es
dec
ja
xor
out
or
pop
xchg
shll
sti
adc
loopne
dec
pop
push
jmp
dec
or
or
sbb
jecxz
xchg
test
jg
fs
dec
push
dec
pop
adc
aaa
lea
scas
rolb
shl
or
and
fnsave
cmp
lds
or
pop
pop
es
jns
pop
pop
push
cld
push
cmpsl
sbb
addr16
adc
insl
aas
mov
add
push
push
cmp
pop
lahf
lret
mov
imul
syscall
xor
cmp
xchg
pusha
add
dec
mov
ret
inc
push
mov
stos
pop
push
popf
mov
popf
shrb
mov
fcoml
push
bound
clc
insl
add
jmp
mov
jbe
daa
xchg
jg
push
testl
mov
jmp
xchg
jmp
ljmp
mov
loope
ljmp
inc
gs
add
push
mov
jl
cmpb
xor
in
ss
adc
insb
cmp
std
xor
iret
mov
sub
jbe
stos
repz
dec
adcb
lret
test
xchg
sub
out
sbb
jg
rcll
loop
jne
push
jg
loop
push
pop
pop
pop
jne
test
push
lea
imul
test
lret
sbb
push
pushf
lcall
test
shlb
std
xor
cmp
or
inc
dec
ljmp
pop
jo
xor
sbb
sarb
mov
pop
mov
dec
int
add
adc
mov
inc
jb
cmpsl
push
clc
enter
xchg
pop
mov
sub
jnp
pop
fidivs
xchg
loopne
sti
mov
pop
es
std
out
enter
rolb
incl
sub
popf
xor
xor
fidivs
call
repnz
sub
shl
fdiv
pop
arpl
cmc
push
and
sbb
arpl
cmp
fmuls
mov
fnstcw
xor
inc
lcall
mov
out
or
mov
inc
arpl
jns
fidivrs
dec
loopne
hlt
add
call
xor
push
scas
ljmpw
cmp
or
sti
pop
sub
inc
dec
pusha
add
jecxz
in
sti
mov
xchg
push
jl
mov
movsl
fsubr
test
fwait
enter
mov
out
hlt
cmp
test
sbb
fbld
mov
mov
xchg
jecxz
aad
stos
pop
sahf
fs
mov
pop
lock
cmc
pop
xchg
mov
cli
test
ja
sbb
mov
and
imul
pushf
dec
cltd
loope
rcll
jl
push
pop
jb
adc
pop
icebp
stos
dec
adcl
roll
loopne
xchg
jno
add
repnz
xchg
testl
jp
lretw
push
sbb
cmp
pop
adc
jmp
sbbb
in
orl
jle
and
or
and
cmp
push
test
mov
mov
and
les
jge
in
xchg
xchg
mov
xor
loop
out
lret
and
jle
test
dec
jl
xor
cwtl
add
cmp
inc
add
push
call
int3
adc
push
cmp
mov
mov
pushf
stos
orl
shl
in
or
testb
aad
clc
aad
inc
push
xchg
ret
mov
popf
dec
xchg
and
ja
jmp
out
cwtl
xor
pop
aad
ds
xchg
cmp
and
ret
xchg
sti
arpl
mov
in
data16
and
lcall
fstp
mov
jns
dec
xchg
int
pcmpeqb
mov
test
lock
pop
pushf
xchg
fwait
sub
push
in
xor
inc
rcll
push
push
mov
xchg
aad
fdivl
jge
push
mov
jmp
push
push
out
ds
fldl
sbb
std
xchg
in
mov
mov
inc
mov
adc
xchg
jnp
lea
ds
jle
les
enter
push
xor
push
and
cli
leave
jbe
lret
fcoms
adc
or
roll
jg
and
fistl
push
movsb
mov
lods
or
bound
mov
xor
gs
loopne
aaa
lahf
decl
in
loop
repnz
lods
pusha
inc
in
or
xchg
add
sti
in
add
and
cmp
cmpb
or
pop
cmp
cmp
cwtl
inc
insb
loop
jne
jbe
in
sub
sbb
add
ret
fists
rorb
adc
leave
arpl
lods
lds
mov
jnp
cmp
push
and
cmp
push
dec
xchg
mov
es
xor
push
jg
pop
jae
std
popa
scas
sub
jl
sub
popf
mov
dec
adc
adc
add
repnz
mov
fiadds
shr
push
imulb
incl
andb
jge
inc
fsts
notb
cmp
pop
stos
adc
cmp
mov
iret
adc
xchg
inc
sub
jle
jbe
pop
xchg
arpl
adc
push
sbb
fsub
mov
push
int3
cmp
xlat
popa
cmpsl
xor
jb
pop
mov
xor
xchg
inc
pop
push
jno
sub
mov
mov
dec
pushf
jo
clc
aam
lret
dec
inc
and
in
int
mov
je
bound
jne
stos
or
mov
adc
mov
sbb
popl
cmp
pushf
jo
adc
test
inc
cmp
adc
sbb
mov
sub
push
imul
xor
lods
in
data16
cmpb
xchg
mov
adc
fistpll
out
std
sbb
sbb
dec
dec
mov
out
les
loop
mov
or
xchg
adc
ret
mov
mov
sub
outsb
inc
dec
jae
mov
movsb
sub
sahf
jae
push
lds
unpcklps
mov
sbb
jg
mov
js
fidivl
insl
fstps
add
into
lods
push
into
mov
xchg
loope
pop
mov
adc
lock
divb
std
adc
notl
jmp
repnz
in
es
and
in
jb
stos
in
pop
cmpsb
sbb
daa
call
mov
sbb
xchg
sti
jae
xor
int3
js
mov
push
in
or
mov
jb
lods
pop
mov
cmp
xchg
sub
aam
orl
js
int
inc
push
push
add
adc
cmpb
out
jbe
adc
loop
movsb
jge
jle
leave
mov
pop
xchg
cmp
movb
adc
jb
nop
mov
cld
aaa
cmpsb
inc
cmc
sbb
mov
pop
and
cmp
stos
mov
and
mov
mov
scas
icebp
xor
aam
lods
push
cmp
out
push
cmpsl
inc
jecxz
mov
jecxz
or
orb
add
jo
pop
inc
dec
fidivs
and
pop
xchg
orl
orl
xchg
xor
stc
sbb
and
jmp
push
cmp
lods
mov
sbb
push
dec
gs
popa
imul
push
and
in
xchg
dec
mov
pop
xor
xor
mov
push
sub
cwtl
xchg
cmp
and
sarl
adc
jns
cli
pop
mov
pop
gs
fcomps
fcomip
and
inc
lock
mov
push
ss
in
fs
mov
mov
xchg
ss
lcall
dec
aas
add
dec
shll
or
sbb
adc
pushf
add
loopne
or
ljmp
cmp
aas
int3
andl
les
mov
or
test
adc
ja
loopne
xchg
iret
jbe
shll
jns
fdivrs
adc
lods
in
loop
out
sub
jae
or
pop
jno
add
mov
jge
push
into
fwait
out
outsl
push
lret
xchg
push
inc
pop
jo
fs
jne
fidivrl
in
or
pop
bound
fxtract
and
cmp
push
les
cmpsb
stos
movsb
add
loop
loopne
dec
icebp
mov
lea
fistl
popf
mov
push
lods
push
xor
stc
and
ja
out
add
adc
cld
adc
arpl
lock
cmp
inc
nop
nop
mov
xor
lock
stos
in
sbb
cmp
enter
js
sbb
push
dec
mov
inc
nop
inc
push
stos
shll
dec
pop
aad
test
mov
call
flds
xchg
jmp
xlat
cli
lret
sbb
push
dec
fsubrs
push
adc
ljmp
xor
xor
inc
shlb
dec
push
inc
in
jp
mov
imul
xor
test
and
sbb
mov
jle
cmp
or
loope
cs
jae
popf
jb
sub
pop
cs
xlat
insb
adc
mov
arpl
mov
add
cli
xor
inc
jge
aam
sub
mov
xchg
sub
mov
popa
xchg
lahf
int
loope
jge
test
repz
dec
mov
add
fs
es
pop
lret
add
int
inc
movsb
adc
push
and
cmpb
sahf
lcall
stos
dec
mov
je
call
pop
push
sbb
lock
xchg
gs
les
add
lret
cmp
incl
sub
jecxz
rclb
jge
shll
jns
jno
pushl
ss
insb
cmp
jns
lret
xlat
jmp
into
loope
fisttpll
xor
insl
scas
fidivs
push
xchg
aaa
inc
pop
ds
mov
dec
sbb
jl
mov
sub
rolb
lret
flds
cwtl
scas
dec
xchg
sbb
dec
xchg
nop
fsub
sahf
stc
call
fwait
sub
fwait
lods
mov
jnp
sub
ljmp
shl
add
dec
scas
lahf
cld
gs
pop
adc
je
sub
ljmp
xor
push
mov
in
cmp
push
fstpl
cmp
in
or
xorb
lret
jle
mov
sarl
xor
inc
push
push
jae
lret
in
cmp
adc
inc
orb
push
xchg
repz
rorb
idivb
or
lods
or
push
mov
mov
insb
and
sbb
sbb
pop
jne
enter
pop
jecxz
push
dec
in
divl
push
push
outsl
mov
imul
dec
mov
mov
loop,pn
fimull
sbb
lock
push
and
dec
xchg
inc
or
pushf
cmpsl
ret
aaa
cmpsb
push
cmc
adc
stos
cmp
adc
insb
adc
mov
ja
push
xor
aad
lcall
adc
adc
cmp
add
fisubrl
repz
cltd
mov
inc
rolb
test
das
xor
sbb
out
out
pop
and
xchg
subb
out
sti
inc
cmp
gs
mov
jecxz
dec
pop
in
and
stos
mov
ljmp
rclb
push
test
pop
push
cmp
pop
icebp
nop
lret
push
mov
imul
test
adc
gs
cli
orb
and
je
jle
std
sub
push
pop
test
adc
cmp
push
lret
pop
dec
xchg
push
mov
push
xchg
test
ret
mov
cld
add
in
mov
in
cld
mov
adc
ds
idivb
push
cmc
iret
xor
mov
jge
ja
fsts
jbe
fwait
dec
xchg
add
mov
je
or
xor
jno
fs
loopne
or
adc
and
pop
xor
and
pop
cmc
push
jmp
sub
mov
orb
jle
sahf
or
adcl
or
push
in
xchg
rcrb
aam
cmc
cltd
bnd
inc
pop
mov
xchg
push
inc
xor
leave
pop
and
add
push
pop
sti
jle
and
sbb
aam
mov
fldl
stos
int
sbb
in
mov
rclb
pop
xchg
lahf
js,pt
sub
pop
jne
icebp
mov
stc
or
dec
les
je
adc
cmp
pop
inc
sub
push
stos
push
dec
add
lea
xor
fisttpl
icebp
mov
or
mov
insb
pop
or
jl
lds
mov
pop
jb
jne
nop
fstpl
xchg
dec
in
sarb
jge
pop
btr
add
lret
dec
pop
and
xchg
inc
ret
mov
mov
xchg
cmp
into
mov
leave
das
mov
sub
fs
test
mov
dec
and
mov
loopne
mov
lcall
add
repz
dec
inc
inc
icebp
in
out
iret
jb
lret
iret
icebp
pop
jmp
int
jp
xchg
subb
js
rorl
mov
shll
pop
xchg
outsb
or
jno
ss
leave
push
daa
jl
pop
pop
out
gs
add
test
mov
jmp
jg
imul
or
mov
mov
fimull
dec
mov
shl
call
and
xchg
jo
dec
cmp
cmp
neg
mov
sub
jg
js
notl
pop
scas
outsb
in
sbb
ficompl
in
push
sub
mov
outsl
xor
outsl
dec
dec
fistl
xor
addr16
lds
cmp
rorl
cmc
shrl
jle
add
sbb
pop
or
sub
lahf
xchg
or
mov
pop
or
pushf
lcall
push
loop
pop
and
stos
xlat
jg
adc
insb
push
sub
mov
and
js
rorb
dec
std
jae
xchg
sub
adc
mov
les
rcll
jge
inc
rorl
mov
push
aaa
mov
push
fwait
push
jnp
or
push
lcall
xchg
dec
push
aas
mov
xchg
in
xor
stos
xchg
and
jp
cmp
hlt
in
jle
adc
rclb
push
cmp
jg
test
iret
xor
xor
jg
jo,pn
adc
jmp
sub
pop
cli
rolb
mov
int
jle
sti
in
gs
repnz
pop
iret
test
add
out
es
xor
or
xorb
adc
andl
pop
shlb
call
push
cmpsb
mov
ds
mov
mov
std
mov
fimuls
push
cmp
ja
rorl
sahf
push
pop
pop
mov
cmp
and
jbe
mov
cmp
lret
lock
hlt
sub
adcb
pop
pusha
inc
fildll
sbb
add
insb
movsl
cld
adc
jbe
push
mov
out
adc
int3
mov
jne
out
inc
xor
cmp
mov
or
je
mov
jno
pop
arpl
movsb
cli
mov
aaa
sub
subl
lret
or
pop
mov
adc
fstl
lock
gs
cld
loope
cmp
xor
sub
xor
cltd
dec
int3
js
add
xorb
dec
sbbl
fbld
fs
sbb
push
ss
lods
addr16
xchg
xlat
jns
sbb
lahf
scas
xchg
aad
mov
lret
xchg
cmp
mov
test
jg
mov
sbb
je
adc
mov
jl
repnz
leave
xor
icebp
mov
cmp
mov
lret
lret
fidivrs
mov
push
or
in
scas
loop
stos
mov
inc
mov
cld
ds
cwtl
out
lret
pop
in
xchg
sbb
dec
loope
scas
sbb
pop
cli
sub
xlat
aas
lahf
push
push
int3
not
mov
insb
cmp
inc
push
loop
xchg
xor
sub
pop
adc
insl
push
add
bound
stos
clc
mov
adc
mov
ret
mov
xor
in
leave
lods
movsl
xor
in
lret
lret
fisubrl
and
aaa
je
dec
out
jae
mov
sbb
movsl
movb
lcall
xchg
add
xor
psllq
ds
daa
mov
fiaddl
jne
pop
sbb
sbb
pushl
mov
test
inc
sahf
and
xor
cmpsl
rcrl
out
mov
inc
call
add
adc
or
pop
dec
and
les
mov
mov
and
push
pop
lock
cmp
xchg
cs
fwait
insb
outsl
or
andb
repz
xor
cmp
mov
sbb
in
clc
push
scas
rcrw
xor
lea
lahf
dec
inc
pop
jo
shlb
rcr
shll
decb
sar
cmc
xchg
dec
mov
mov
mov
mov
or
pop
adc
pop
xchg
inc
adc
test
push
mov
xor
push
mov
and
adc
in
cli
dec
sbb
push
or
xchg
mov
adcl
mov
jge
wbinvd
rcll
adc
cmp
jmp
sub
scas
pushf
and
cltd
stc
lret
lods
cmp
mov
jnp
push
lcall
nop
or
into
or
lcall
dec
loope
push
fimull
jne
mov
pop
xor
sbb
lods
cmp
mov
mov
sub
lods
mov
add
fildl
cli
dec
lcall
push
in
xor
adc
pop
jmp
decb
in
dec
ja
orl
jp
nop
iret
or
gs
lea
mov
in
pop
cmp
int
add
insl
xchg
test
in
or
nop
in
sbb
or
mov
fildl
sbb
sub
loope
inc
dec
xor
mov
push
mov
sub
scas
leave
fldenv
cmp
lret
dec
adc
popf
xor
mov
fsub
jg
dec
xor
inc
cmpl
mov
mov
popa
add
loopne
pmulhuw
sub
jne
mov
imul
push
call
into
int3
dec
xchg
pop
call
mov
mov
and
repnz
cld
sub
sub
fcomps
test
sbb
sti
sahf
mov
dec
in
xchg
or
inc
adc
sbb
xchg
lret
pushf
xor
fmull
out
push
and
aas
mov
add
insb
mov
stos
lea
push
shrb
mov
sbb
insb
insl
xchg
scas
sarb
pop
lods
repnz
fstpl
repnz
hlt
push
movsb
imul
icebp
dec
sahf
mov
add
test
dec
aad
out
out
jle
push
test
outsl
dec
or
movsb
xchg
or
sbb
mov
into
out
mov
out
mov
add
pop
add
lea
test
repz
add
xchg
out
sub
add
and
push
out
lea
mov
out
rcrl
es
loop
mov
sub
loope
add
orl
repnz
and
lods
sbb
xor
sbb
jo
sub
sub
mov
or
pmullw
dec
inc
cmp
inc
popf
aam
outsb
sub
in
mov
sbb
outsl
sbb
mov
xor
or
inc
xchg
jmp
out
pop
xlat
icebp
or
test
fs
pop
mov
dec
xor
cmp
cmpsb
mov
adc
roll
add
negl
push
mov
push
repnz
add
push
xchg
rorb
cmp
xor
cmp
add
xchg
xchg
xchg
jmp
test
pushf
insl
lds
push
sub
hlt
insb
push
mov
je
aaa
call
add
dec
outsl
jge
jno
xor
mov
cli
imull
lea
andl
imul
jl
dec
repnz
or
iret
lods
pop
lret
add
movl
rorb
loope
mov
jno
xor
gs
aaa
out
ds
movsb
xor
and
fadd
adcb
sub
int
ret
les
popf
pop
into
mov
out
xchg
inc
or
or
popa
out
mov
pop
decb
dec
out
aad
rcrb
cmpsl
push
lock
js
mov
pop
push
cmp
sarl
mov
cltd
sbb
cmp
xor
fs
aas
ss
jmp
sub
fisubrs
mov
adc
add
in
test
rclb
mov
mov
mov
repz
bound
movsb
push
int3
cmp
add
jb
mov
push
mov
andl
dec
ljmp
lods
cmp
test
jns
fsts
jge
popa
jnp
sub
fisubrs
gs
dec
sub
xor
and
daa
xchg
dec
dec
sub
bound
inc
push
cmp
rorl
jnp
inc
scas
push
mov
mov
das
stos
cwtl
lods
mov
pop
lods
pop
nop
fbld
push
fisttpl
mov
aaa
mov
or
and
add
rcrl
push
xor
pop
jb
insb
icebp
mov
push
mov
sbb
aad
repz
push
pop
jecxz
cmp
cmc
rclb
dec
inc
negl
in
push
aas
sub
mov
xor
out
pop
jo
sub
mov
pop
addr16
sbb
iret
push
xor
jg
mov
cmp
subl
mov
das
dec
shll
mov
movsb
das
lcall
push
popa
and
mov
mov
jbe
jne
jmp
js
pop
jmp
das
int
mov
xchg
hlt
pop
adc
cmc
xchg
adc
fdiv
addr16
bnd
stc
mov
jp
movsb
out
inc
dec
dec
inc
push
pushf
sub
add
push
imul
mov
inc
insb
loope
push
jecxz
data16
bsr
icebp
imul
inc
dec
or
add
jns
sqrtps
push
adc
cmpsb
ds
insl
punpckhwd
mov
mov
into
into
jbe
int3
xorl
sti
out
mov
jo
or
call
jg
cmpsb
mov
mov
and
movsb
cmp
dec
outsb
jb
mov
sarb
xor
test
mov
xchg
lods
ljmp
sbb
pop
aaa
repnz
scas
mov
xchg
jo
aad
cwtl
iret
jmp
ja
in
in
jge
mov
in
add
dec
je
pop
ficomps
es
jp
add
add
sbb
jecxz
push
inc
cs
fwait
sbb
sub
movsb
shlb
dec
out
movsl
fnstsw
push
scas
pop
cs
in
in
mov
xor
push
mov
cmp
add
cwtl
fdivs
loope
dec
add
xchg
rcll
andb
movsb
or
mov
pop
addr16
out
sub
pop
xor
mov
shrl
lcall
out
insb
sahf
pushf
inc
push
js
push
popa
pop
ja
gs
cwtl
and
mov
jl
mov
mov
mov
sub
leave
popf
stos
mov
mov
pop
icebp
in
repz
outsl
idivl
jb
pop
nop
movsl
mov
jae
loope
mov
mov
ja
andnps
testl
push
mov
aaa
fcmovnbe
out
mov
adc
push
addr16
pop
lret
jnp
out
movsl
out
imull
xor
in
push
aaa
clts
mov
add
movsl
lret
mov
aas
cmp
mov
fadd
pop
or
out
and
clc
pop
xchg
fs
or
aaa
movl
int
fsubrl
bound
fsubrs
adc
cmp
dec
negb
aam
mov
push
sbb
xor
pop
inc
push
ret
mov
inc
xchg
out
jge
dec
sub
jg
sub
cs
jp
xor
xchg
out
mov
rcll
adc
cwtl
sbb
push
pop
shll
pop
test
ret
sti
mov
out
out
shrl
repnz
js
push
dec
iret
jmp
ret
fcmovbe
xchg
or
cmc
aas
pop
inc
pop
xchg
xchg
dec
mov
cmp
sbb
cmpsl
and
icebp
mov
xchg
cmpsb
fistps
and
push
fs
insb
les
mov
movsl
ss
test
inc
push
lds
lock
stc
pop
clc
mov
scas
sti
lods
sub
mov
pop
js
rorb
test
add
in
lea
cmp
jle
add
mov
jns
js
jp
jno
test
les
jecxz
or
mov
inc
fstps
fucom
xchg
insl
sbb
in
jo
adc
xchg
cmp
ss
add
dec
in
jnp
pop
repnz
jmp
mov
mov
mov
push
ja
ja
enter
sbbb
mov
ret
xchg
in
mov
loop
fs
mov
pop
out
outsl
js
cmpsl
xchg
insb
fdivr
pop
sahf
pushf
sahf
lods
pop
jp
divl
fisttpll
and
leave
dec
jge
aaa
in
push
shrb
cmp
mov
xor
js
pop
in
fldt
inc
and
mov
adc
jle
xor
dec
scas
sbb
mov
in
imul
sub
dec
xchg
int
enter
or
orps
push
xor
xor
jne
jp
or
mov
or
out
stc
mov
pop
inc
pop
fisttpl
and
pop
mov
test
dec
or
call
movsl
out
nop
mov
out
outsb
leave
mov
xor
mov
mov
pop
dec
out
push
push
shll
test
xchg
negl
push
jmp
int3
dec
imul
stos
insb
jmp
test
jae
mov
in
cmp
movsb
mov
dec
and
jne
xchg
cmp
xor
push
test
inc
pop
repz
int
or
call
lods
mov
je
jo
inc
repz
mov
js
xor
and
imul
jg
fmuls
andl
jae
cs
jmp
jb
dec
scas
cld
mov
push
imul
jae
call
cmp
pop
adc
idivl
xchg
jns
push
add
push
cltd
shrb
loope
outsl
fldl
xchg
cltd
lret
mov
add
cmp
and
dec
addr16
pop
adc
daa
lods
js
xchg
xchg
lock
mov
push
jecxz
push
cmc
sub
sub
pop
inc
xor
idivl
lahf
push
jne
inc
inc
jne
ljmp
js
imul
sbb
jecxz
push
xchg
xor
mov
shl
and
movsl
aad
adc
ds
pushf
mov
loopne
idivl
xor
lcall
stc
jns
push
aad
pop
jnp
shl
mov
rcll
into
shll
jp
jle
mov
mov
mov
jl
ja
aam
out
jle
stos
adc
mov
out
sbb
add
fcmovnbe
fisttpl
push
dec
and
imul
xchg
lahf
pop
add
jle
dec
xor
scas
repz
jle
popf
js
mov
add
lods
sbb
fwait
adc
mov
fadd
push
push
jge
adc
xchg
add
mov
lods
sbb
rcrb
xchg
mov
mov
nop
push
ficoml
std
test
jb
xchg
jae
cmp
xor
call
push
inc
pop
pop
adc
mov
sbb
pop
das
dec
add
or
bound
ret
add
test
mov
rclb
sub
adc
mov
or
or
mov
aad
test
xchg
jbe
aad
cwtl
lret
mov
pop
push
push
lods
call
mov
leave
lcall
lea
repz
in
rolb
gs
dec
jecxz
bound
sbb
std
push
popf
or
dec
dec
fimuls
sub
jp
mov
dec
jae
sbbb
loop
push
and
adc
xchg
in
push
out
xchg
mov
and
jecxz
in
iret
call
or
imul
add
test
xlat
pop
xor
cmpsl
adc
movsl
add
cmpsl
fstpt
sub
loopne
xor
sahf
add
jb
mov
jns
mov
ret
and
push
sti
add
hlt
ret
ss
bound
scas
fistpl
nop
shlb
test
neg
jne
pop
data16
xor
rcll
pop
mov
aad
aad
mov
cwtl
inc
loop
dec
test
dec
mov
pop
jmp
into
jb
and
or
xor
mov
mov
in
jb
outsb
pop
in
insl
es
add
aad
mov
push
cmpsb
pop
rcrb
inc
test
pop
lahf
daa
mov
mov
xchg
test
jno
out
lea
les
push
jns
adc
lock
fldl
or
iret
inc
push
mov
jecxz
filds
sub
ret
or
push
int3
imul
xchg
in
and
or
test
pop
push
mov
cmp
xchg
out
mov
mov
and
xchg
push
adc
dec
xorl
aad
lret
js
loop
test
lret
out
sti
mov
insl
sub
pop
aad
adc
imul
jo
inc
and
test
or
out
aaa
es
dec
mov
cmp
or
adc
stos
pusha
push
pop
jns
repz
stos
inc
cli
cmc
mov
ljmp
loope
fwait
xor
out
sbb
lret
jns
aad
lret
lcall
pop
arpl
jb
jae
add
ret
icebp
sahf
jnp
fidivrl
cld
lcall
push
mov
aaa
shr
fwait
popl
mov
mov
add
cld
repnz
mov
cmp
push
dec
bound
shl
fwait
lret
xor
ss
inc
cmp
sub
dec
nop
sti
notl
sub
bnd
mov
adc
cmp
inc
sub
push
les
jno
fdivrp
mov
movsb
aas
movsb
fsubr
mov
jle
dec
rclb
data16
cmp
pop
mov
add
lret
and
pop
imul
imul
scas
add
insl
adcl
pushf
push
xor
push
lahf
fcmovne
test
cwtl
in
test
mov
out
or
dec
sti
push
mov
pop
ljmp
pop
sub
js
outsl
int3
movsb
adc
mov
add
add
aam
pop
and
or
push
ficomps
fs
clc
pop
int3
push
mov
fdivl
icebp
xor
enter
sub
and
add
sub
jns
adc
jbe
dec
into
cltd
daa
fisubl
mov
dec
int3
aas
inc
fs
jo
push
fidivs
push
flds
int
cs
nop
pop
pop
repz
mov
inc
jae
jge
cmc
adc
inc
jbe
pop
pop
add
shl
and
sbb
imul
pop
push
xor
xor
xor
int3
and
sub
loop
push
jno
out
add
mov
loop
mov
test
pop
or
movsl
mov
push
ss
push
jge
sub
div
or
mov
jge
lds
cli
ror
mov
movsb
jno
enter
js
cmp
mull
enter
mov
je
cs
decb
jae,pt
fmulp
push
xor
addb
cmp
jle
xor
add
outsl
or
pop
xor
dec
xchg
jb
cld
popa
lods
xor
negl
sti
mov
outsb
imul
popa
pop
adc
jnp
xor
cmc
push
sbb
and
mov
dec
mov
cmp
sbb
xchg
int3
lcall
lods
cmp
aaa
pop
or
rorb
xchg
or
xor
adc
pop
jle
xchg
ljmp
out
rcl
push
rol
enter
xchg
inc
iret
idivb
add
pop
cmp
jo
add
rcrb
push
fidivs
outsl
mov
inc
mov
pop
mov
ret
fisubrl
dec
jne
mov
movsl
dec
sarl
fstps
add
fldl
loope
cmp
orl
test
mov
ds
lock
js
adc
dec
ljmp
shlb
and
xchg
xchg
daa
add
jecxz
clc
sbb
in
arpl
mov
loope
mov
fisubrs
jae,pn
js
popf
inc
mov
cwtl
cld
add
push
dec
fidivs
bound
cmp
rcll
icebp
push
or
ss
xchg
loope
lea
pop
mov
add
cmp
stos
cmp
jnp
ret
jno
sbb
cld
mov
add
add
scas
movsb
xchg
not
cmp
or
pop
loope
adc
pop
inc
jnp
sub
push
or
dec
inc
outsb
stos
mov
aaa
daa
cltd
shrl
sub
stos
add
inc
inc
es
push
or
out
cmp
loopne
imul
jb
cmpsl
push
lock
adc
divb
in
sahf
mov
or
xchg
out
ficoml
js
push
test
into
cmp
sub
dec
or
loopne
ss
mov
in
add
fucomip
adc
lods
int
scas
fdivrs
push
add
sbb
outsb
pop
stc
or
cmpb
push
dec
popa
lods
sti
xor
loop
xorb
popa
dec
and
bound
inc
push
stos
test
push
addr16
add
enter
enter
cmp
push
add
cmp
repz
je
or
sub
orl
sub
mov
aad
and
jae
cmp
add
dec
adc
lea
into
sbb
push
or
fdiv
sti
repnz
cmp
add
rdtsc
loope
int
xchg
cmp
sub
loope
fdivr
cmp
stos
pusha
std
lods
arpl
jne
in
cmpsl
test
mov
nop
cmp
add
sbb
popa
leave
xchg
cltd
mov
jmp
movsl
pop
lds
lods
cmc
adc
push
sub
out
cmp
sub
iret
or
rclb
or
xchg
fnstenv
lods
dec
inc
aas
pop
ds
sub
mov
inc
push
cs
inc
sub
mov
sbb
cld
fdivs
xchg
cmp
inc
inc
insl
movsl
push
xor
sbb
lfs
mov
or
mov
sub
aad
sarl
aaa
inc
jbe
and
ficomps
out
imul
jno
cmp
aaa
jge
mov
js
add
into
cmp
loop
and
cmp
pop
in
and
stos
xchg
in
pop
in
jne
inc
add
mov
jo
enter
icebp
push
test
in
xchg
test
inc
and
aam
lock
lock
xchg
ja
sub
cmc
jp
push
sub
push
xor
pop
jae
loop
push
xor
and
jns
or
icebp
sbb
js
sbb
xchg
pop
icebp
sub
mull
testl
push
jle
cmc
insl
mov
jo
arpl
sbb
out
inc
cmp
fidivs
pop
scas
ljmp
xor
cld
ds
ja
rcr
xor
jg
pushf
xor
push
dec
sub
jb
aas
push
add
outsl
sbb
decb
lock
jl
orb
jbe
addr16
dec
sbb
mov
add
insb
insb
mov
loop
call
mov
call
adc
sub
sar
xchg
and
out
fnstcw
pop
adc
pop
in
jecxz
mov
jmp
mov
out
jae
dec
repnz
arpl
push
jg
mov
cli
scas
or
lds
nop
cli
or
xchg
out
sarl
xor
mov
outsl
pcmpgtd
fmul
adc
cwtl
mov
xor
imull
in
jne
inc
addl
dec
mul
xchg
adc
push
in
movsb
popa
stc
add
xor
leave
mov
pop
ds
dec
pop
fsub
pop
test
sbb
andb
loope
push
adc
fimuls
daa
adc
stos
mov
out
push
test
jmp
out
sub
nop
je,pt
add
mov
gs
iret
imul
out
and
cmp
jmp
add
out
lock
cmp
mov
out
or
pop
pop
add
adc
loop
or
rol
inc
jno
pop
sahf
xor
push
pop
shl
sbb
into
mov
adc
das
inc
cmp
xchg
mov
inc
insb
jp
adc
mov
jb
addb
popf
aam
pushf
clc
addl
orb
pop
insb
ds
xchg
out
fidivrl
dec
mov
jae
mov
pop
movsl
dec
dec
call
out
mov
push
mov
cs
push
fimuls
jno
scas
push
pop
and
pop
push
loopne
sub
or
dec
ljmp
jmp
dec
int3
and
inc
xchg
pop
pop
mov
rorb
xor
pavgw
jmp
lds
mov
sub
test
cwtl
out
test
cwtl
inc
test
xchg
dec
clc
ss
sbb
out
inc
popa
cltd
inc
fucomip
je
hlt
orb
nop
dec
xchg
dec
sub
cmp
mov
jnp
mov
cmp
xchg
mov
mov
mov
lea
add
inc
icebp
subb
mov
icebp
lea
mov
andb
loope
ret
aaa
and
in
or
inc
incb
sub
sti
xchg
mov
mov
mov
pop
leave
add
ss
das
push
adc
in
jne
xchg
arpl
fsubs
or
loopne
fbld
nop
push
add
shlb
fs
out
imul
divb
mov
xor
sbb
cmp
sti
push
aad
xchg
in
insl
roll
rolb
or
xchg
ljmp
outsl
repz
pop
popf
mov
dec
int3
or
subl
mov
and
jecxz
jo
push
ret
mov
dec
inc
int
adc
adc
vhaddpd
dec
sbb
cmp
rolb
bound
or
mov
jno
mov
orl
dec
and
cmp
pop
setno
inc
mov
push
shl
cmpsl
xor
jnp
das
sbb
retw
jbe
fidivrl
pop
add
jmp
pusha
or
imul
std
rcl
icebp
jne
xchg
iret
rclb
or
popa
xor
andl
mov
inc
cmpsb
addr16
xchg
cs
imulb
ret
mov
cltd
shr
int3
fistpl
xlat
lret
mov
mov
clc
push
stos
int
das
shlb
inc
adc
pop
mov
mov
or
lea
inc
call
dec
ds
jmp
inc
jns
mov
adc
insb
pop
push
in
scas
aas
outsl
push
sub
dec
mov
sbb
pop
outsb
xchg
xchg
dec
aaa
dec
stos
cmp
or
xlat
xor
cld
adc
dec
mov
aam
call
sbb
dec
test
and
xchg
stos
jmp
jno
jnp
jl
int
jbe
mov
cmpsb
pop
xor
sbbb
add
mov
xor
xchg
fistpll
xlat
lds
push
dec
xchg
jo
sub
lahf
test
jno
cmp
ljmp
and
test
mov
pop
jle
add
cmc
sbbl
scas
int
pop
outsl
add
pop
add
jo
scas
cwtl
add
es
sti
xlat
lea
sub
lods
ljmp
jge
loopne
or
clc
pop
jmp
sahf
mov
in
clc
add
fmulp
push
sub
push
test
iret
pop
flds
jne
fdivl
ljmp
pop
sub
dec
cltd
mov
or
je
cli
mov
pop
adc
scas
pop
jbe
xchg
jle
xchg
inc
cmp
mov
pop
scas
inc
out
arpl
mov
cltd
fnstenv
divl
push
pop
sbb
scas
test
push
push
aas
les
sub
ds
xor
mov
movsb
or
ret
dec
or
add
hlt
pop
ljmp
cli
mov
adc
cmp
pop
div
cmp
mov
movsb
ljmp
mov
pop
out
jl
pop
icebp
or
push
scas
fwait
push
cs
sti
sarl
mov
pop
mov
jp
and
sahf
mov
or
shlb
or
and
or
and
mov
stc
loop
xchg
arpl
and
mov
adc
pop
cmp
cltd
fldl
incl
cli
or
mov
hlt
xlat
mov
cmp
xorl
popf
sahf
shl
icebp
das
lea
pop
push
pop
sub
and
and
jge
mov
lcall
mov
jbe
sbb
add
jo
jno
cltd
lcall
xor
cld
std
xchg
arpl
cmp
xchg
leave
jl
jne
das
mov
sarl
push
adc
iret
mov
mov
jmp
popf
jae
arpl
rorl
in
mov
shll
cmp
aam
leave
xlat
cwtl
shlb
lds
lret
dec
stc
repz
mov
jns
fistpll
ljmp
mov
ss
xchg
jmp
jbe
icebp
jb
aam
nop
jmp
jge
or
fistl
jge
iret
xchg
gs
int3
call
inc
mov
xchg
stos
sub
mov
push
sti
and
in
push
dec
cmpsl
out
pop
in
mov
or
xchg
adc
mov
jb
adc
cmp
add
shrl
jo
dec
mov
add
cld
cmc
pop
popa
pop
sbb
insb
scas
sbb
mov
pop
fistl
inc
out
fisttps
popf
loopne
ficomps
les
inc
xchg
adc
jg
pop
jo
mov
into
cmp
int
enter
cmc
pop
push
cld
shlb
dec
mov
mov
test
les
mov
sbb
push
adcb
pop
bound
int3
adc
loopne
adc
pop
stos
cmpsl
jne
push
or
cmp
pusha
addl
jmp
arpl
jg
pop
dec
add
dec
sub
pop
into
push
movl
mov
lcall
jb
insb
push
les
sbb
push
dec
xchg
nop
stc
mov
test
xor
sub
mov
or
js
xchg
xchg
rorl
sub
mov
fwait
jae
je
or
inc
gs
lock
pop
test
or
sbb
jge
add
lds
dec
icebp
adc
int
loop
hlt
mov
popa
shr
mov
lods
notl
mov
aam
lock
fs
int3
adc
add
jo
outsl
lea
je
sub
fisttps
pop
jne
mov
in
add
leave
sub
pushf
loopne
or
jecxz
push
push
mov
cmpsb
loop
fidivrl
cmp
cltd
add
fcomps
fisttpl
stc
aas
xor
ret
dec
stc
cmp
lret
out
ja
inc
mov
mov
push
add
mov
scas
imul
std
outsl
lock
int
push
dec
gs
rclb
cli
push
rolb
xchg
ja
les
fs
aad
mov
mov
sub
mov
ljmp
xor
out
fdivl
xor
push
repnz
outsl
mov
cli
cmp
cmp
push
ret
xchg
add
jle
mov
xchg
insl
pop
aas
xchg
or
test
lods
or
jecxz
subl
dec
mov
sub
add
jns
cld
sub
add
jg
xor
add
sub
sbb
cmp
xor
inc
pushf
dec
aad
cmp
inc
aad
dec
push
cmc
fcoml
pushf
subb
dec
and
das
sbb
jge
and
jb
xor
or
cmpl
incb
pop
stos
in
aad
jb
jno,pt
mov
addl
aaa
cmp
pusha
adc
dec
test
lret
xchg
mov
inc
rcrb
repnz
push
add
adc
call
gs
loopne
scas
jp
ljmp
ficoml
imul
out
in
mov
adc
call
jns
bound
adc
mov
fwait
jno
mov
pushf
outsb
sub
or
mov
jb
sahf
sub
mov
sbb
in
rcrb
int3
mov
xchg
jmp
pop
subl
sub
add
inc
subb
jg
pop
icebp
jl
pop
es
or
and
fwait
in
ds
mov
inc
dec
int3
mov
xchg
lcall
insl
das
sub
daa
push
cmp
fwait
scas
lods
imul
dec
negb
mov
movsb
cs
pop
lret
cmp
pop
andb
xlat
mov
into
dec
sbb
shlb
aas
push
pop
out
push
mov
adc
dec
fldt
jae
js
les
pop
ljmp
loopne
push
std
arpl
inc
or
aam
cld
leave
outsb
mov
mov
pop
xor
jmp
pop
aaa
ficomps
gs
push
push
insl
leave
flds
ret
shrb
es
mov
inc
cs
cmp
push
mov
xor
push
out
ja
mov
popa
jp
inc
ret
xor
in
add
dec
insb
shll
aad
std
xor
pop
push
dec
pusha
mov
push
sub
repz
lcall
jl
imul
hlt
ret
insb
add
fisubl
and
xchg
dec
lods
outsl
and
sbb
adc
sbb
lret
rcl
scas
mov
push
stos
or
jb
xchg
xor
or
sahf
mov
pop
notl
lcall
aad
sub
cmp
lcall
xchg
mov
push
sbb
push
mov
cwtl
mov
pop
popf
add
dec
je
movsb
ficomps
movsb
ljmp
cmp
sub
xlat
shll
rclb
frstor
sub
sub
cli
stos
or
and
cmp
incb
cmpl
int3
mov
cmp
scas
sbb
inc
out
imul
jae
or
movsl
out
pushf
clc
xchg
adc
pop
cltd
jg
pop
cmpsb
xor
xor
mov
or
stos
push
cs
add
enter
cltd
xchg
aam
stos
jnp
pop
clc
cmp
dec
pushf
and
nop
push
and
ja
ds
leave
inc
lea
mulb
rcll
mov
lcall
jmp
loop
jmp
call
lcall
lods
cmpb
pop
or
mov
xbegin
jl
adc
mov
mov
es
fimull
xor
aas
popa
jnp
push
fs
mov
lods
inc
push
add
sub
shll
xchg
pop
or
dec
shrb
int
pop
ret
push
out
iret
add
test
dec
or
mov
xchg
xchg
sbb
mov
xor
out
outsb
bsf
cmc
dec
mov
push
lock
bound
push
cwtl
xor
std
lock
mov
inc
add
pop
add
popa
push
in
arpl
mov
mov
mov
xchg
dec
sahf
in
dec
jno
or
or
sbb
push
push
adc
int
idivb
scas
cs
add
pop
sub
lea
insl
loope
sbb
scas
add
sbb
outsl
push
cmpsb
pop
and
insl
xor
aad
popa
lcall
ss
mov
int
aas
fbstp
test
scas
imulb
inc
mov
dec
or
mov
xor
out
stos
cld
dec
cmovle
je
cmpsl
in
dec
or
pop
movsb
cmp
pusha
insl
add
pop
sub
mov
push
adc
push
loope
nop
mov
das
inc
in
mov
dec
mov
int3
mov
icebp
out
mov
jmp
call
cld
or
pop
roll
std
xchg
mov
insl
sbb
arpl
xchg
inc
mov
imul
in
adc
out
lretw
out
in
ret
pop
aas
fs
cmp
fbstp
push
xchg
mov
push
fwait
pop
push
xchg
das
fiaddl
in
and
mov
inc
nop
bound
lret
divl
bound
sti
mov
inc
xchg
aam
xor
pusha
decl
jns
mov
fnstsw
pop
jp
arpl
xor
and
xor
test
or
fistl
out
jb
push
jg
rcl
jge
sbb
inc
clc
dec
das
xchg
pop
cmp
jae
cmp
jecxz
aaa
jnp
mov
fwait
cmp
popa
pop
out
jle
outsl
cmp
stos
shl
xchg
clc
push
insb
jne
jo
loopne
insl
bound
scas
and
add
faddl
test
add
pop
xchg
xchg
push
or
rcrb
adc
or
aas
mov
shl
je
cmp
loop
cli
fstpl
pop
ja
add
flds
cmp
xchg
mov
cli
fiadds
loope
mov
mov
ss
test
adc
push
cmpsb
mov
xchg
mov
push
pop
subl
or
dec
jo
inc
xchg
inc
arpl
jae
mov
jnp
fstpl
clc
mov
repnz
cmp
insl
sbb
out
ficompl
push
xor
std
sub
inc
mov
inc
push
mov
or
scas
cmp
roll
jmp
cmp
push
cmpsl
inc
and
jo
mov
mov
scas
xchg
xlat
test
pop
out
in
sbb
sbb
fsubs
cmp
scas
sbb
pop
cmp
pandn
out
lahf
lcall
mov
jb
outsl
roll
nop
data16
adc
pop
shlb
push
cmc
inc
lock
mov
sbb
test
dec
cli
mov
repnz
inc
mov
sbb
mov
stos
dec
cld
pushf
daa
adc
mov
sarb
out
pop
dec
mov
jns
push
fs
push
jbe
iret
das
ljmp
pop
out
lock
subps
test
cwtl
dec
divl
lahf
sbb
sbb
popf
cmp
inc
pop
in
mov
and
xchg
lea
fidivl
cltd
pop
mov
xor
ss
inc
ja
nop
or
mov
pop
cmpsb
xchg
pop
fst
enter
cld
test
jmp
das
in
out
outsb
sbb
test
adc
movsl
push
inc
jne
scas
mov
pusha
dec
lods
inc
mov
fs
mov
push
xchg
dec
mov
xor
jle
jge
inc
inc
xor
test
imul
mov
cwtl
iret
lahf
inc
pop
mov
ljmp
add
sbb
dec
pop
adc
pop
sbb
pop
fcom
xor
mov
inc
lret
clc
sbb
in
js
outsl
out
enter
jg
push
push
fisubl
inc
int3
rolb
int3
mov
mov
mov
inc
int
and
push
fnstcw
inc
pop
cmp
rcrl
js
dec
test
dec
xchg
lret
fidivl
push
jp
shl
fnsave
loop
sbb
std
push
or
movsb
mov
test
and
jns
sub
lahf
lods
pop
sbbl
setne
int3
cmp
sub
or
adc
push
push
daa
jae
leave
enter
mov
or
fdivr
or
inc
xchg
pop
out
loopne
rclb
xchg
dec
pop
or
add
adc
jp
jp
xor
add
mov
mulb
rcrl
in
mov
out
dec
pop
push
push
mov
sbbb
gs
bound
dec
scas
lods
lods
lret
fsub
cwtl
push
cwtl
fcompl
mov
out
sub
or
mov
test
xchg
fistps
lret
push
sbb
std
scas
cmp
pushw
ljmp
xor
aam
xchg
nop
mov
mov
and
xchg
fwait
movsb
mov
mov
inc
jno
sub
or
jnp
je
xor
jmp
je
adc
loop
mov
and
push
enter
inc
sbb
icebp
and
lret
pushf
xchg
xor
sbb
pop
mov
sbb
adc
inc
stos
push
stc
shl
dec
dec
jmp
aam
dec
in
icebp
shlb
repnz
mov
lcall
ret
push
xchg
hlt
xor
imul
test
enter
arpl
adcb
jl
jl
mov
add
out
mov
xchg
movsb
mov
leave
daa
cltd
mov
scas
pop
sub
pop
test
outsl
pop
dec
mov
in
rcll
mov
inc
jbe
jno
push
lock
stos
cmp
xchg
pop
mov
fistps
cmp
enter
dec
xor
jno
int
dec
stos
cltd
push
xor
lods
icebp
xor
lret
sbb
mov
cmp
xchg
fildl
push
add
push
fdivr
xchg
pushf
sarl
xor
push
or
int3
fcmovbe
clc
sub
and
ret
lcall
mov
arpl
mov
cwtl
ja
sarb
jp
iret
fildll
or
out
xor
xor
mov
xlat
test
pusha
imul
inc
pop
xlat
pop
rclb
sbb
idivl
aas
hlt
rolb
and
scas
shrl
adc
std
popa
sbb
cs
aad
loopne
inc
mov
cmpsl
or
jg
cmpsl
sbb
add
les
fildl
cld
idiv
xchg
icebp
xlat
sahf
jns
ret
in
jns
es
inc
lds
xor
rol
bound
inc
outsb
mov
adc
data16
test
dec
out
sub
in
lcall
mov
pop
mov
jne
jb
loope
or
push
mov
lods
sbb
das
jmp
cmpsl
pop
lods
xchg
or
jbe
add
mov
adc
repz
pusha
inc
xor
cmp
xchg
fwait
push
int
fsubs
out
out
and
mov
cwtl
or
jg
jne
ret
ficomps
sti
lret
adc
add
mov
or
lea
add
push
pop
xchg
inc
lcall
mov
loop
das
add
cmpsb
out
cld
sub
sbb
pushf
ljmp
int
sub
sahf
sub
add
es
ror
insl
pushf
ja
loopne
sub
pop
add
mov
sahf
pop
mov
mov
rcrb
xor
lea
repnz
push
sbb
aad
cld
sbb
dec
lods
lock
inc
and
sbb
cmpsl
adc
stc
js
dec
pop
inc
add
pop
call
stos
jle
jns
xchg
jno
mov
xchg
mov
ret
into
pop
push
jae
jmp
cmc
test
mov
sbb
ljmp
mov
das
inc
dec
jno
cli
cwtl
add
push
or
add
and
cmp
cmp
adc
pop
movsl
lods
lea
cwtl
adc
inc
pop
ret
lock
push
lret
sub
adc
in
cmp
and
inc
pop
push
dec
mov
xchg
outsl
call
and
cmpsl
pop
jb
movsl
add
jno
pause
push
cmp
out
cmp
inc
insb
push
xor
mov
movsb
int
icebp
out
xchg
cmc
mov
lcall
lods
sti
fldcw
andb
jns
mov
lods
insb
or
adc
jge
jle
movsl
loopne
movsb
mov
cs
pop
ret
or
inc
mov
push
adc
sbb
mov
pop
and
adc
sahf
dec
jno
add
test
cmp
repnz
leave
lahf
jmp
add
not
add
ret
inc
pop
imul
jge
sub
and
decb
pushf
or
neg
shl
pop
add
adc
mov
adc
mov
idiv
mov
mov
mov
les
jo
pop
aam
leave
movsl
ror
jne
or
jne
scas
jl
or
aam
int3
inc
cmp
cmc
out
testb
mov
jmp
cmp
fcoms
fs
rcl
aam
xor
or
push
mov
adcb
sub
pop
ret
mov
adc
dec
add
mov
movsl
push
lret
and
dec
and
xchg
movsb
mov
xor
cwtl
iret
out
sbb
cmp
add
mov
loop
adc
mov
mov
xor
adc
inc
addr16
adc
pushl
jecxz
outsb
int3
in
dec
sbb
push
push
mov
or
gs
in
push
push
xchg
dec
aam
xor
repnz
rclb
xchg
xchg
insb
icebp
pop
out
mov
push
lahf
adc
and
jp
iret
or
in
fs
hlt
stos
xor
inc
movsb
pop
fld
je
cmp
hlt
sub
scas
into
add
sti
xor
adc
stos
loopne
fsubl
pop
sahf
je
pop
subl
scas
xchg
xor
daa
stos
scas
aas
lahf
into
jmp
in
neg
cmp
ret
or
out
insl
jnp
mov
mov
mov
sub
nop
ret
outsb
jno
insl
stos
inc
je
push
mov
pusha
iret
adc
data16
mov
cmpsb
jns
mov
dec
cmp
mov
gs
cmc
lods
xor
jb
cwtl
fs
dec
dec
mov
sub
out
dec
mov
pop
int3
push
adc
jecxz
gs
nop
int3
and
sarl
sub
addl
adc
repz
push
pop
jg
push
movsb
cmp
je
or
je
das
scas
pop
inc
imul
mov
jnp
mov
aam
xor
cmp
pop
mov
pop
xchg
scas
sti
push
adc
ds
xor
inc
mov
adc
pop
data16
fcoml
ret
lret
xchg
imul
mov
jp
cmp
rorl
sbb
fidivl
shll
dec
push
out
dec
mov
repz
push
hlt
push
sbb
in
push
jne
ret
pop
adc
scas
outsl
scas
shlb
lods
aaa
mov
xchg
icebp
mov
into
push
and
imul
xchg
lods
inc
and
mov
xchg
adc
repnz
add
xor
loopne
jp
mov
inc
sub
adc
bound
addr16
pop
sub
sbb
lods
lret
inc
aam
fidivrl
mov
dec
sub
jge
jae
jl
xor
xor
sub
xchg
ficomps
fcompp
jle
pusha
test
andb
sub
xchg
jno
stos
cs
pusha
push
rcll
sub
jge
fidivl
hlt
mov
or
pop
lret
pusha
mov
cmp
loopne
cmp
push
mov
jecxz
xchg
or
mov
decl
mov
push
push
and
push
adc
pushf
sbb
in
cmp
aad
add
hlt
fwait
hlt
int3
add
xchg
add
leavew
cmpsl
icebp
push
popf
jb
cmp
inc
aaa
adc
cmp
mov
mov
pop
repz
ret
mov
xchg
aaa
js
lods
mov
dec
inc
lds
arpl
xchg
mov
lds
ljmp
cmp
rcrb
xor
pop
pop
xchg
mov
pusha
cmp
movsl
sbb
mov
iret
xor
and
in
dec
inc
xor
pop
xor
pop
aaa
out
outsl
and
ret
sub
pop
add
and
imull
mov
imul
es
retw
xor
enter
cli
mov
inc
ljmp
lret
neg
jl
and
mov
jns
push
sahf
inc
aam
imul
pop
dec
jmp
loope
and
mov
dec
shlb
pop
movsb
dec
out
test
psrld
movsl
dec
jb
push
lahf
aam
or
sub
fbld
repnz
sti
repz
cli
rorl
mov
movsl
subb
fnstcw
aad
jns
mov
mov
call
inc
clc
mov
or
daa
clc
lods
add
mulb
inc
mov
push
and
test
sahf
daa
addr16
mov
cmpb
test
aam
cld
test
in
push
dec
je
enter
sbb
addb
or
test
add
mov
xchg
and
repz
lods
sub
jecxz
arpl
cli
jne
insb
lods
jge
mov
daa
cs
add
clc
aas
inc
out
jl
jg
jns
test
nop
shll
jns
stos
add
pop
inc
jg
int
mov
sbb
adc
scas
call
or
out
cli
jmp
addr16
add
pop
in
sarl
inc
inc
sub
xor
call
cli
outsb
pop
cld
jmp
mov
xchg
loope
insb
adc
ret
negb
inc
jb
mov
lcall
dec
add
imul
das
xor
fmull
push
cmp
mov
pop
ds
sti
push
sbb
push
mov
scas
aam
jbe
adcb
jp
out
mov
lds
loop
or
push
push
xor
inc
test
scas
cwtl
mov
inc
cmp
lret
sub
push
inc
mov
mov
sahf
push
jmp
pop
and
dec
add
xor
aad
or
les
movsl
inc
push
mov
mov
or
adc
mov
cltd
inc
into
in
mov
repz
inc
loopne
cmpsb
dec
xchg
sub
sub
lcall
lds
pusha
xor
nop
int3
fwait
subl
pop
aas
and
mov
push
add
dec
nopl
lahf
jne
inc
popa
inc
addr16
mov
scas
and
out
inc
xchg
shll
adc
adc
adc
fdivl
repnz
ss
sahf
sbb
je
lock
cld
sub
lods
cmp
sbb
repnz
fiaddl
xor
jl
inc
daa
movsl
aam
icebp
in
inc
cmpsl
pop
or
dec
insb
mov
loopne
pop
add
push
int
ror
adc
lahf
lcall
xor
and
sub
jno
clc
addr16
adc
xor
lods
sahf
mov
jo
sahf
ret
imul
jg
push
jns
mov
int
fists
xchg
mov
and
xchg
int3
cmpsb
fadds
adc
xchg
jae
xor
xor
and
mov
inc
dec
call
xor
jno
arpl
mov
loopne
leave
sbb
add
jg
cmp
jb
test
sbb
pop
and
stc
mov
or
dec
mov
or
enter
je
xor
sahf
cli
add
daa
fimull
fldl
out
ja
movsl
mov
mov
out
or
add
xchg
xchg
gs
dec
adc
sub
inc
notl
jae
push
xorl
mov
pop
ret
out
cwtl
rcll
popa
divb
push
push
adc
and
sbb
fucomi
or
pop
jne
pop
cmpsl
mov
jecxz
mov
mov
ss
mov
push
xchg
lods
mull
jb
mov
inc
xchg
das
xor
ja,pt
movsl
fistps
mov
mov
sahf
mov
std
fisttpll
push
popf
mov
out
or
sub
mov
dec
into
or
xor
push
insl
push
repz
or
add
push
push
cmpl
int
sbb
aas
outsb
shr
and
cs
xor
dec
fisubs
mov
ljmp
imul
sbb
mov
notb
cmc
ds
dec
sbb
push
adc
mov
aaa
mov
fiaddl
repnz
data16
mov
movsb
sbb
or
cmp
jmp
pusha
leave
fdivrs
in
aad
pop
and
xchg
mov
js
xor
xlat
sub
imul
in
xchg
or
rorl
loop
das
mov
out
lahf
inc
sbb
cmp
cwtl
ss
push
es
subl
xchg
fisttpl
aas
leave
scas
data16
andb
mov
and
rclb
mov
adc
daa
sub
xor
mov
jl
lahf
inc
notl
dec
movsl
xchg
jb
pop
or
ja
sbb
ret
sbb
jecxz
inc
decl
jg
push
sub
mov
mov
rcr
push
out
pop
cmp
xor
mov
sub
sbb
pop
push
lret
lret
cmp
insl
sub
mov
lods
cmp
sbb
mov
cmc
sahf
pop
lods
icebp
popf
cltd
out
xor
mov
dec
dec
out
and
jmp
stos
add
cmp
imul
adcl
outsb
xor
push
cmp
aaa
jns
dec
jb
jp
pop
jne
mov
dec
js
jbe
mov
mov
mov
addr16
dec
das
das
jg
jmp
xlat
jo
fstpt
lock
mov
jno
fwait
xchg
insb
push
xlat
sbbl
jl
sbb
xchg
xchg
jp
xchg
sbb
lahf
xchg
in
test
xor
andl
jmp
and
inc
dec
cli
inc
and
or
fistpll
insb
dec
and
cmp
cmp
sub
dec
rorl
mull
push
rorb
scas
xor
rcl
mov
jae
das
mov
adc
out
jne
fcmovbe
cmp
scas
rolb
lds
xchg
xor
sub
cmpl
dec
lds
adc
aam
mov
mov
shlb
jp
js
addl
add
lods
iret
sbb
repz
stos
jo
mov
les
int
inc
or
dec
jmp
push
imul
movsb
addl
popa
cmp
sarb
jb
loopne
cli
clc
cmp
jg
out
int
shr
cmp
test
add
stos
adc
sbbl
pop
adc
nop
sub
mov
popa
insl
shrb
lock
outsl
mov
test
push
sbb
jno
cmp
lods
mov
push
push
subl
add
pop
xchg
mov
movsl
push
jbe
mov
bound
sarb
addr16
cmp
jg
pop
push
scas
jb
add
or
mov
fcmove
jne
push
cmp
inc
or
stos
adc
inc
cmpsl
adc
call
sbb
arpl
daa
pop
test
loop
cld
out
ss
push
icebp
mov
fcmovne
pop
shrl
adc
arpl
mov
addr16
leave
mov
mov
inc
shrb
pushf
das
adc
outsb
int
cmc
add
xorl
inc
pusha
sub
mov
xchg
push
mov
cmp
sub
testb
int3
mov
outsb
push
lret
js
jmp
lods
outsb
loope
imul
mov
aam
in
mov
std
and
push
popa
repz
jecxz
inc
or
cwtl
jle
pop
fiadds
push
cs
ss
sbb
int
xchg
mov
mov
filds
pop
aam
adc
cmp
mov
movsl
outsb
stos
inc
jle
sub
ljmp
inc
les
push
xchg
out
and
push
xchg
ret
jg
pusha
pop
sti
mov
push
fldt
push
sbb
or
push
push
add
lds
addr16
mov
and
jl
insb
push
ljmp
mov
loope
lea
inc
pop
push
dec
lds
mov
pop
scas
xchg
imul
incl
xor
cmp
cmp
sarl
addr16
loop
or
add
rclb
insb
cmc
stos
mulb
cmp
addr16
xor
or
inc
mov
sbb
cltd
add
lret
inc
test
cmp
pop
cltd
inc
push
dec
shr
mov
into
mov
iret
test
loop
gs
push
xchg
lock
pop
lret
adc
pop
fnsave
repz
or
mov
xchg
jne
out
fsincos
outsb
add
xchg
inc
rcll
xchg
adc
test
xor
sbb
mov
push
scas
fs
mov
outsb
mov
cmc
mov
in
movntq
out
jmp
xor
dec
pop
adc
lods
pop
push
rdtsc
push
sub
cmp
cltd
fwait
sbb
lret
sbb
loopne
lds
dec
repz
jae
call
negb
imul
jmp
or
jge
mov
push
lods
adc
scas
sahf
xchg
es
std
les
sbb
or
into
pop
repz
repz
mov
out
ja
pop
cld
hlt
add
fldt
mov
cmp
sbbb
fs
cmovp
inc
sub
dec
idivl
and
xor
inc
or
data16
mov
bound
inc
sub
add
int
mov
jns
and
and
adc
push
fbstp
stos
or
add
cmp
int
clc
inc
cwtl
loopne
xchg
jae
movsl
out
or
outsb
rcll
xchg
adcb
inc
out
mov
insb
je
mov
outsb
mov
lods
inc
fnsave
or
xchg
outsl
xchg
sbb
jmp
scas
add
popa
jno
pop
std
jmp
mov
mov
pop
rcll
xor
mov
into
pop
sub
jno
mov
enter
mov
cmpsb
push
and
filds
dec
mov
xchg
loope
js
cwtl
sbb
fucomi
pop
or
xchg
les
mov
dec
popf
pop
pop
add
mov
movsl
rorl
mov
dec
jge
leave
xor
in
pop
dec
mov
lods
sbb
cmp
mov
int3
jnp
sbb
mov
int
xor
leave
jnp
mov
js
and
adcb
ret
push
dec
pop
and
lahf
xor
pop
out
scas
out
dec
shll
push
xchg
fdivrl
call
es
stos
xor
insl
sbb
fbstp
in
es
sbb
in
xor
sbb
xlat
sbb
test
mov
in
pop
xor
and
cmp
pop
xchg
mov
fwait
jmp
xchg
mov
fisttpl
dec
mov
dec
sbb
jecxz
or
sbb
xchg
ja
mov
in
or
sti
cli
pop
mov
push
push
aam
pop
cli
mov
cmpsb
mov
cmpsl
push
mov
add
enter
mov
inc
cld
movsb
jno
adc
push
arpl
jecxz
mov
ret
stc
add
add
adc
sbbb
push
faddl
fidivrs
jns
in
call
xor
scas
sahf
or
ss
aas
jno
sub
pop
mov
jle
jae
mov
mov
mov
cmp
xor
inc
push
aad
fisttps
jl
xchg
in
insb
loop
shll
dec
stc
int3
push
ds
fidivs
fs
sahf
xor
inc
inc
pushl
repz
or
sar
xlat
pop
int3
or
and
dec
inc
xchg
xchg
cld
das
int3
inc
push
movsb
imul
sbb
cmp
or
push
push
pusha
loop
mov
mov
xor
insb
sbb
cmp
je
js
sbb
in
mov
dec
mov
push
ret
add
mov
inc
mov
xor
popf
cmpsl
push
pop
inc
push
fimuls
xchg
dec
lahf
adc
cmp
sarb
dec
push
aas
dec
xor
stos
int
jl
rcrl
jnp
cmpsl
fwait
mov
xchg
not
or
cmp
jae
fnstsw
push
cli
les
ds
lret
std
stos
test
mov
lret
cmp
lcall
testb
lock
shrl
pusha
and
cltd
mov
aam
adc
xchg
push
cwtl
cmp
jne
out
mov
ds
jge
gs
push
pop
stc
subl
dec
pushf
fs
sub
pop
xchg
roll
jg
or
mov
sub
pop
pop
fildl
sub
xchg
nop
mov
test
cltd
cmpsl
sbb
in
ds
jnp
movsl
add
sub
or
adc
inc
jno
ljmp
stc
add
imulb
js
xor
adc
lock
pop
testl
call
scas
dec
mov
add
das
sbb
fs
mov
lret
pop
test
aad
loope
imul
xor
fadds
addr16
lods
repnz
push
ja
pusha
rolb
int
inc
sbb
orb
pop
add
xchg
mov
jp
stos
loopne
mov
push
imul
iret
push
jmp
aam
out
in
lds
loop
cwtl
test
aaa
pop
add
in
std
push
popa
outsl
sbb
in
mov
mov
cs
pop
sbb
mov
jne
jle
inc
test
inc
aam
inc
loope
lds
dec
aaa
and
sar
inc
insb
sub
insb
lds
fnstsw
pushf
mov
cld
mov
push
mov
fxch
xor
clc
orb
scas
pop
sub
mov
and
pop
nop
inc
ret
repnz
adc
cmpsl
out
dec
jns
and
push
dec
or
into
mov
enter
or
stos
enter
cmp
inc
jnp
ds
sbb
pop
xchg
shrb
cld
fmul
je
cmp
fwait
push
sti
adc
jne
test
in
iret
mov
fneni(8087
mov
sbb
mov
rol
jecxz
add
shlb
lea
scas
jmp
sbb
lcall
pushf
sub
xchg
adc
and
or
lahf
clc
xor
pop
lods
iret
rcrl
mov
mov
mov
fs
jae
hlt
iret
mov
sbb
in
nop
je
int
jmp
sbb
sub
loope
fsts
cwtl
cltd
imul
lods
xor
imul
add
push
push
push
push
jmp
dec
lds
fstp
out
ds
jge
int
mov
andb
xchg
add
xor
add
sub
dec
lods
pushf
test
dec
push
inc
adc
testb
fdivl
not
inc
xchg
orb
or
xchg
inc
pop
loope
mov
jo
mov
pop
fwait
jbe
sti
mov
dec
test
sahf
push
cmp
sbb
mov
pop
dec
cmp
rolb
sbb
jecxz
adc
dec
lods
psubb
or
icebp
pop
xchg
cs
ret
into
mov
sbb
add
subl
addl
jo
push
in
xchg
add
or
mov
stos
mov
push
bnd
call
xchg
xchg
xor
pop
and
adc
push
ret
fsub
pop
clc
jns
cmp
xchg
or
cmp
cmp
push
cwtl
nop
shlb
arpl
pop
push
insl
outsl
mov
mov
je
stos
and
xchg
pop
xchg
sbb
std
fists
push
not
xlat
pop
mov
lods
pop
mov
cmp
xchg
dec
push
adc
call
mov
mov
out
hlt
and
gs
mov
mov
pusha
lds
fwait
mov
sub
adc
mov
pop
lods
into
pop
sarl
cmp
jne
sbb
inc
add
cwtl
mov
imul
pusha
enter
scas
jecxz
test
std
out
cmp
in
imul
pop
xor
cld
cmp
rorb
adc
lcall
sbb
mov
stos
adc
push
testb
cs
xchg
gs
test
int
sbb
mov
jae
stc
and
shl
dec
and
lahf
addr16
js
out
test
and
popf
cwtl
out
xchg
dec
aam
add
mov
cmp
cmp
mov
outsl
jg
int3
popa
pop
or
cmp
aaa
pop
test
lods
adc
icebp
jae
shrb
aam
sarb
jae
ret
loope
xchg
lods
cmpsb
xor
dec
sub
incb
xor
mov
les
xchg
cwtl
popf
orl
pop
lock
cmp
jb
and
sar
stos
push
subb
dec
pop
pop
imul
inc
lret
mov
enter
movl
aad
lds
xor
mov
push
lods
cmc
mov
mov
push
pop
cmpsb
pop
cmc
add
repz
subb
xchg
adc
xchg
adc
adc
in
add
cwtl
dec
mov
mov
rcrl
in
sbb
cli
filds
pop
std
pop
arpl
pop
fistl
fstpt
xor
jbe
fisubrs
les
push
inc
pop
or
dec
sub
cld
cmp
xlat
out
or
pop
mov
stc
sbb
dec
push
mov
jb
movsb
push
in
xchg
stc
rcrl
enter
test
pop
insl
loop
mov
jl
loope
or
fcmovne
notrack
ljmp
mov
jp
pop
push
sub
sub
insb
outsl
testl
lods
mov
sbb
mov
out
idivl
ret
inc
dec
pop
testb
loop
lret
adc
cmp
mov
adc
ja
mov
sub
jae
xor
ljmp
in
out
mov
or
jns
adc
adc
je
dec
iret
jmp
ja
lods
sbb
add
mov
js
or
jecxz
jb
fsubrs
adc
inc
inc
mov
mov
cmp
sbb
into
and
sbb
loopne
xchg
int
test
mov
mov
in
aas
ds
mov
pop
insl
insl
test
addr16
mul
dec
push
lods
mov
and
mov
fstpl
insl
dec
adc
pop
fcomps
push
xchg
adc
pop
cmovnp
inc
and
push
sub
addr16
dec
jecxz
jo
test
pop
lahf
xchg
add
sub
loop
sti
leave
sub
push
mov
outsl
push
stos
mov
cmp
cpuid
icebp
jl
sub
xchg
arpl
mov
sub
jo
shrl
xor
pushf
mov
push
or
adc
rcrb
stc
xchg
in
out
jns
lea
and
mov
sub
inc
jge
sbb
test
mov
xchg
movsb
in
adc
loope
pusha
jne
mov
aaa
rolb
and
into
lahf
dec
mov
push
xorb
outsl
pop
mov
sbb
cmp
fidivrs
rcrl
mov
jg
pop
mov
imul
pushf
ret
aad
cmp
cltd
daa
cmpsl
stos
sbb
or
popf
inc
popa
fadds
jle
push
pop
mov
mov
fwait
jmp
cli
pop
lds
cmp
dec
lret
xlat
in
cvtpi2ps
roll
ljmp
les
fs
xor
pop
lods
xchg
ficoml
data16
dec
pop
pop
mov
mov
pop
xchg
inc
ret
mov
dec
outsl
insl
xor
in
xor
into
xchg
sub
insl
jg
xchg
test
stc
pop
jne
xchg
sbb
dec
pop
sbb
or
dec
clc
sbb
lcall
and
repnz
test
arpl
jp
imul
sub
mov
inc
inc
pop
jl
jl
inc
cmp
mov
sub
out
shrl
test
add
adc
dec
inc
sub
notl
push
cmp
sub
int
mov
cmpsb
cld
ret
mov
sub
ficoml
out
scas
sahf
fildll
fwait
and
mov
push
inc
xchg
sbb
cli
out
dec
or
mov
ud1
and
movsb
jge
push
jg
mov
ret
pop
and
or
mov
pop
xchg
and
adc
push
or
mov
mov
mov
cmp
fstps
add
jns
outsb
push
inc
mov
sub
aad
mov
into
pop
inc
sub
xor
cltd
out
mov
stos
pop
in
jmp
scas
and
out
test
sbb
pop
dec
adc
movl
aaa
sbb
mov
add
push
or
pop
test
hlt
nop
mov
lret
repz
mov
mov
es
std
cli
xor
cmpsl
adcl
fscale
cmc
shll
bound
xor
mov
mov
or
xor
push
push
pop
in
push
and
nopl
scas
loope
sbb
or
sbb
jno
movsb
mov
decb
and
pop
int3
mov
into
and
lock
arpl
xor
pop
mov
mov
add
ret
adc
sub
test
cld
push
popf
and
scas
dec
loop
mov
mov
dec
in
ret
mov
mov
lret
fs
or
mov
push
insl
or
mov
cmp
add
xor
and
fisubrl
aas
adc
mov
jo
stos
testl
and
stos
adc
in
sub
xchg
jp
ds
pop
pop
cmp
dec
pushf
add
rcrb
rorl
push
sbb
cmpsb
fsubp
or
jmp
shrb
mov
push
dec
jbe
jb
adc
and
jae
aad
lret
stos
fidivrl
pop
jmp
fs
cmp
mov
sarb
xorb
mov
mov
arpl
rcrl
lret
addr16
out
jecxz
xor
mov
daa
out
push
mov
ss
or
push
adc
inc
push
pop
scas
arpl
shrl
push
out
adc
maskmovq
outsb
jno
push
dec
lret
int
push
jg
pop
cmp
xor
jb
push
test
mov
push
xor
or
sti
pop
mov
sub
mov
cld
sub
jns
aad
fadds
lret
movsb
jp
and
les
xchg
call
or
fisubl
test
rorb
mov
aad
lcall
aas
ret
and
and
test
in
mov
and
cli
mov
dec
xchg
pop
mov
or
fwait
test
je
xor
addr16
pop
sub
jp
outsl
in
inc
sbb
jge
pop
push
sbb
push
cmp
ss
inc
ret
xchg
cs
xor
dec
rol
push
mov
or
lods
or
sbbl
int
push
push
mov
or
push
sbb
xorl
out
mov
dec
pusha
push
pop
add
stos
cmp
fwait
dec
icebp
stos
ret
mov
push
cmp
push
in
mov
into
and
lods
int
test
mov
push
mov
xchg
sbb
and
into
sbb
push
push
lahf
and
jo
lahf
out
mov
shrb
adc
mov
pop
lahf
les
scas
jmp
add
in
mov
lcall
xor
mov
test
lea
jp
sub
dec
inc
cmp
cmp
cld
rorb
inc
mov
jne
mov
ss
adc
cltd
adc
insl
fdivrl
inc
jp
mov
ljmp
sub
push
jae
cltd
ds
push
and
xchg
in
sub
subl
add
dec
lock
add
add
push
pushf
adc
je
push
mov
xor
adc
push
pop
jle
rorb
loope
mov
clc
out
incl
imul
pop
stos
cld
xchg
adc
mov
xor
je
je
cmpsl
pop
lcall
or
cmpsl
adc
cmp
daa
xchg
fldcw
enter
and
xor
cmc
jno
icebp
mov
jno
jno
sbb
mov
mov
out
xor
add
mov
or
or
jns
std
dec
mov
lret
cmpl
ja
push
adc
inc
jle
or
clc
xor
sbb
xchg
inc
cltd
sub
xchg
movsb
jo
cli
ret
imul
cmpsb
movsl
xor
or
das
jb
outsb
push
mov
sub
icebp
jne
lods
jecxz
dec
mov
std
test
mov
adc
or
lcall
jbe
and
dec
add
mov
lahf
cmp
add
es
jge
sub
pop
jb
dec
ljmp
cmp
fisubl
pop
enter
scas
pop
pop
cwtl
icebp
xor
add
push
sbb
std
faddp
daa
jmp
push
lcall
mov
mov
xchg
movsb
aas
sbb
push
movsl
jp
inc
jb
testl
sar
push
pop
mov
jo
lret
xchg
movsb
imul
and
ficompl
xchg
testb
pop
or
jecxz
dec
mov
sub
lcall
fbstp
inc
push
dec
fisubs
sub
mov
mov
popa
mov
sub
dec
and
test
xchg
xchg
push
fcom
clc
sub
cmp
mov
xor
iret
jle
mov
roll
vcvttsd2si
mov
mov
xchg
popf
ret
lods
xchg
std
push
dec
or
test
cmp
adc
leave
pop
adc
mov
rorb
or
mov
dec
sahf
test
sti
sub
aam
sbb
jmp
push
xchg
and
mov
jae
xchg
test
sahf
mov
xchg
in
pop
mov
push
imul
enter
jb
lods
sub
out
sub
add
and
jbe
loopne
pushf
fimuls
mov
cli
add
mov
in
jns
jecxz
adc
mov
dec
test
popf
sub
mov
jae
test
mov
mov
aad
cld
cmp
pop
add
fisubrs
ficoml
icebp
sbb
jno
sub
pop
sub
pusha
cmp
cmp
movsl
xor
aas
adc
roll
cmpsl
xchg
mov
inc
cs
in
push
sbbb
push
sub
cmp
pop
repnz
scas
aad
jbe
jle
pop
test
rol
testb
or
es
or
cmp
mov
cmp
sti
mov
and
adc
pop
lcall
lods
in
sub
daa
push
movsb
ds
outsl
push
jb
add
jmp
lcall
sub
ja
push
fcomi
push
or
subb
int
stos
jo
inc
mov
push
nop
or
ret
out
pop
adc
cmp
xchg
cmc
aad
das
enter
sub
cmp
xchg
mov
mov
inc
jb
push
bound
roll
mov
push
pop
pop
out
fnstcw
shrb
dec
mov
jno
mov
add
loop
xor
int
icebp
leave
mov
and
clc
xchg
pop
cmpsl
push
mov
iret
cli
xor
sbb
cmpsl
icebp
fadds
sub
mov
cmc
loop
out
jb
outsl
dec
push
push
add
leave
push
in
gs
jne
test
leave
cli
lods
pop
rol
or
out
imul
push
rclb
insb
jb
adc
xchg
cmpsb
mov
in
xchg
jecxz
jo
mov
lods
inc
and
sub
test
inc
jb
or
dec
clc
pusha
cmp
cmp
cltd
inc
ds
dec
rcll
xor
aam
loopne
sub
std
xchg
jp
test
lods
push
mov
xchg
pop
cmp
or
xchg
sahf
ret
ljmp
fidivrl
aam
adc
fidivrl
out
push
rcrb
fiaddl
dec
popa
mulb
mov
subl
mov
sub
mov
mov
cmp
jbe
and
out
and
les
or
cmp
add
mov
cmp
notb
sbb
je
adc
sbb
aas
icebp
jl
jg
sbb
xchg
add
push
xchg
fmul
fmull
cmc
dec
dec
lock
push
jmp
cmc
arpl
icebp
push
bnd
xor
mov
loopne
ret
mov
movsb
data16
sti
insb
pop
sub
js
lret
fstl
and
jp
outsb
stc
pop
jae
lret
pop
ret
rcrb
sti
adc
and
aam
push
mov
pop
sub
cs
sub
rol
in
jecxz
and
fwait
xor
clc
ss
and
dec
xor
cli
cld
arpl
cli
nop
fsub
or
xchg
sti
cmpsb
jb
lods
pusha
mov
sahf
mov
push
addr16
int3
xor
sarl
xchg
pop
mov
or
cmp
scas
repnz
xor
cltd
aam
sbb
lret
inc
fcoms
fs
aam
mov
popa
push
loope
cmp
out
neg
testb
mov
mov
ja
jns
xor
xorb
mov
or
mov
inc
pminsw
fs
push
inc
push
int3
mov
xor
xchg
lahf
push
mov
sub
dec
xchg
adc
call
hlt
sbb
leave
and
pusha
divb
mov
mov
gs
add
push
inc
fcmovnu
in
or
jb
movzbl
je
and
cmp
dec
jp
or
test
pop
icebp
movsb
inc
hlt
cwtl
mov
or
loope
inc
aam
cmpsb
lock
ret
lcall
movsl
adc
cmpsl
sbb
rolb
ret
in
or
cld
lds
and
popf
sbb
ja
jge
lret
icebp
jb
mov
xchg
dec
rcrl
mov
jns
dec
cmpsb
cmp
test
xchg
sahf
das
insb
mov
xchg
or
add
lcall
or
dec
gs
mov
movsb
sub
ficoms
cmp
data16
sub
add
out
push
popa
outsb
out
cmp
push
lea
xor
ret
jg
jmp
daa
push
aam
neg
lcall
fstl
mov
outsb
ljmp
add
mov
pop
adc
int
loopne
sbb
iret
ficoml
ret
andl
push
aam
dec
stos
jno
mov
inc
popa
sti
lea
int
sahf
js
jge
mov
jg
ret
rorb
test
or
in
ja
mov
daa
popf
popa
jne
push
ret
andb
pop
cld
dec
inc
cltd
bound
adc
out
pushf
pop
rcll
adcl
out
or
xor
jne
out
pop
dec
sbb
mov
mov
jnp
in
ss
and
mov
out
and
ret
ds
in
sti
pop
enter
jae
rol
daa
dec
clc
jmp
dec
fwait
inc
pop
pop
mov
add
cmp
xor
sti
mov
fstl
xchg
mov
mov
pop
jecxz
ud0
pop
jo
enter
loope
je
sub
push
lcall
std
mov
mov
mov
insl
push
mov
xchg
inc
clc
ja
fimuls
dec
packsswb
sub
or
adc
lcall
mov
lret
je
and
adc
jg
push
pop
push
cmp
add
jmp
imul
nop
push
or
xor
mov
and
call
push
push
in
mov
jnp
fwait
scas
mov
arpl
fcmovbe
faddp
stos
inc
cwtl
aas
adcb
das
push
aas
jne
scas
push
or
adc
mov
roll
xchg
adc
jnp
addr16
in
xchg
icebp
pop
testl
or
push
sbb
imul
sub
outsl
pusha
mov
inc
sub
in
and
xorb
push
adc
jecxz
nop
jg
fildl
jno
and
mov
sti
push
lea
fistpll
sub
cld
dec
fwait
mov
je
mov
enter
xchg
inc
mov
popf
add
sub
les
mov
xchg
shlb
pop
xchg
inc
cmpsb
repnz
ljmp
stc
clc
xchg
arpl
mov
orl
mov
repnz
dec
adc
pop
cmp
lret
inc
out
xor
cmp
and
xchg
adc
movsb
inc
ret
push
fistl
test
cmp
pop
pop
adc
sahf
insb
xchg
mov
aad
xchg
in
push
mov
ljmp
jno
add
sbb
mov
jo
pusha
ljmp
dec
hlt
lret
outsb
dec
bound
pop
icebp
int
jge
outsl
fcomps
stos
inc
dec
lahf
jecxz
push
push
mov
sub
or
xchg
movsl
loop
mov
test
test
dec
out
inc
jg
mov
sub
sub
mov
rorb
inc
out
xchg
or
jg
and
mov
push
adc
adc
fwait
into
mov
push
repnz
jle
mov
mov
inc
jns
outsb
mov
xchg
mov
in
call
mov
jg
inc
sub
push
cwtl
mov
or
je
mov
cmp
std
pushf
adc
mov
or
pop
push
or
add
aas
outsl
sub
inc
call
push
or
sub
push
gs
dec
xor
pop
ds
lahf
rolb
addb
and
push
out
sahf
add
enter
pop
inc
inc
push
sub
push
imul
jne
int3
and
adc
jbe
mov
sub
mov
or
adc
mov
and
stos
test
pop
cwtl
jp
gs
es
sbb
icebp
inc
sbb
test
mov
adc
cmpsb
mov
aam
or
pop
xchg
fiaddl
jne
sub
dec
lods
sub
or
adc
cltd
dec
pop
jg
or
cmp
btc
cltd
fimuls
add
out
ljmp
hlt
jp
mov
cs
sub
fucom
fcmovnb
xchg
pop
enter
repz
imul
sub
fcoml
xor
push
xor
push
stc
mov
jle
sub
lcall
and
sub
je
cltd
mov
dec
je
sbb
sbb
and
add
data16
xchg
pop
icebp
adc
xlat
loop
push
sbb
into
inc
dec
loope
push
pusha
xor
xor
xorl
adc
mov
jae
jmp
lret
pop
test
int3
inc
aam
ds
fsts
idivb
test
dec
lds
sti
shl
je
dec
fisttpl
loop
popf
or
inc
cmp
xchg
aaa
dec
mov
dec
mov
stos
fs
inc
xorl
dec
imul
lret
and
cld
pop
in
outsl
and
xor
fistps
addr16
sub
sahf
mov
negl
xchg
xor
add
push
out
fidivrl
sbb
and
shll
xchg
ret
out
dec
mov
outsb
jp
jge
add
mov
lock
stos
ror
and
es
xchg
lret
pop
inc
outsb
sbbb
xchg
mov
inc
pop
mov
mov
mov
xor
cmpsl
fwait
sbb
jl
jne
mov
adc
jge
inc
cmp
enter
mov
xchg
pop
outsb
sbb
mov
xlat
dec
testl
in
lods
mov
or
jg
xlat
xor
inc
cwtl
or
mov
popa
cmp
aaa
das
ljmp
dec
xchg
fadds
pop
insb
out
dec
xchg
pop
inc
fadd
inc
rcrb
mov
ljmp
cmpsb
push
xchg
sbb
sub
icebp
mov
cmp
lahf
leave
sbb
lcall
in
adc
mov
xchg
in
imul
pop
jo
inc
out
fisubrs
pop
outsb
pop
or
jbe
hlt
cmpsb
push
fwait
ja
xor
mov
or
fs
push
cs
jo
clc
in
push
jle
cmp
mov
jmp
test
xchg
imul
push
sub
cld
push
test
cmp
dec
mov
jo
or
cmp
adc
ret
pop
adc
sti
imul
test
repz
and
test
pop
gs
cld
mov
add
ss
mov
shrl
insl
xchg
enter
xor
hlt
mov
rclb
mov
push
clc
fs
cli
out
jne
push
out
adcl
sub
jns
hlt
pop
and
cmpsl
lahf
fs
add
frstor
inc
iret
xor
pushw
aam
filds
mov
movsl
insb
fsubl
jp
cmp
and
add
jl
and
cmp
inc
adc
cmp
test
mov
xchg
daa
rorl
lret
inc
and
test
xor
jecxz
sbb
int
shlb
mov
std
push
lret
ljmp
lret
sbb
fmulp
jmp
out
dec
imul
test
mov
jae
popa
popf
jle
jp
cmp
add
ret
jl
mov
and
stc
push
insb
xor
mov
cmpsb
dec
dec
ds
testl
cmpsl
aam
sbb
mov
ljmp
add
aas
or
or
cmp
cmpb
lret
daa
out
xor
xlat
pop
stc
or
loopne
andb
lock
sahf
adc
incl
mov
mov
std
shl
mov
push
movsl
cltd
jle
sahf
adc
mov
ja
xor
xor
cmp
and
cmp
fbstp
dec
rclb
dec
or
scas
incb
ds
out
or
insb
sub
xchg
sti
mov
pop
ljmp
cmpsb
xor
mov
ja
sub
xchg
push
aam
vprotb
cmp
iret
or
mov
jae
test
xchg
pop
repz
test
mov
inc
rcl
hlt
add
insl
mov
sbb
inc
ret
jbe
arpl
push
xchg
or
xor
test
sub
and
or
mov
dec
fcmovb
xchg
sbb
xchg
inc
pop
xchg
inc
mov
xchg
fcmove
not
dec
xor
mov
inc
cmp
mov
lds
pusha
clc
pop
dec
mov
mov
jbe
sub
cld
sub
in
push
les
ret
push
and
das
idivl
jle
sarl
sub
mov
icebp
stos
fstps
nop
sahf
push
popl
ss
lds
dec
jo
or
cmp
icebp
or
out
xchg
jae
push
es
addr16
fcmovne
push
out
icebp
push
aad
ss
mov
xchg
or
sbb
cli
jmp
sbb
pop
fldlg2
and
fwait
pop
stc
xchg
repz
pop
mov
jns
dec
jmp
cmp
paddb
inc
lcall
jb
fidivs
adc
and
js
xchg
cmpsl
xlat
mov
popf
mov
rcr
std
int3
mov
clc
sbb
mov
test
and
scas
out
out
or
dec
push
add
int3
out
in
imulb
sbb
push
stos
or
cli
mov
imul
addl
std
inc
cmp
sub
cmpsb
push
psrld
cmc
adc
or
mov
dec
leave
imul
test
jne
adc
pop
adc
jmp
stc
das
pop
and
mov
popw
loopne
push
mov
pop
arpl
xor
add
movsb
addr16
pop
call
flds
xor
outsb
testl
dec
xlat
dec
xor
mov
jmp
mov
in
shll
iret
or
out
std
or
or
movl
jge
jp
or
jge
push
pop
pop
pop
sub
mov
pop
icebp
xor
dec
decb
fcomi
out
shll
adc
xchg
push
sub
movsb
cwtl
inc
inc
jbe
mov
imul
adcl
cmp
cmp
popa
sub
test
fstl
loopne
mov
sub
cli
outsb
jo
jmp
cmpsb
mov
inc
popa
xor
mov
xchg
xor
cmp
jmp
sti
sti
push
push
cmc
outsb
xchg
mov
popf
push
pop
dec
mov
inc
fstpl
lock
sub
cmp
add
mov
clc
mov
aas
adc
arpl
mov
push
shrb
sbb
cwtl
xchg
pop
es
fadd
push
stos
pop
pop
sub
adc
pop
lcall
jl
xor
xor
pushf
in
jno
jns
out
loope
call
pop
jno
in
mov
push
dec
dec
scas
xchg
js
mov
and
push
repnz
repz
loope
or
divl
insl
fisubrl
nop
adc
fldcw
mov
inc
dec
fisubl
mov
lret
jle
fadds
lods
fwait
arpl
lret
mov
clc
ja
int
or
mov
test
std
sahf
xchg
stos
rcrb
mov
nop
pushl
inc
mov
or
mov
insl
cmp
addr16
aaa
neg
gs
mov
dec
adc
fwait
lea
mov
addr16
lds
pop
push
push
and
cmp
fwait
sub
aam
and
leave
insb
pop
lock
aas
cmp
xchg
adc
jae
insl
mov
xlat
jecxz
nop
jns
inc
xor
mov
fbld
out
and
add
xchg
popf
and
loop
xchg
mov
js
mov
gs
dec
fcompl
sbb
pop
inc
cmpsl
fs
or
std
jbe
mov
sahf
lahf
inc
mov
addr16
flds
into
sub
xchg
jb
test
iret
pop
mov
lahf
or
stos
test
and
sti
or
inc
xor
and
scas
sub
in
mov
in
jg
in
aas
push
push
call
xchg
xchg
aas
xlat
mov
cmpsl
sub
push
xor
add
sub
cmpsb
into
pop
shl
outsb
inc
mov
adc
nop
pop
arpl
scas
test
jl
imul
dec
mov
push
andb
gs
sbb
enter
popf
sub
jp
xchg
inc
int3
jne
dec
or
shll
pop
and
stc
ret
in
jge
adc
adc
pop
popa
ja
nop/reserved
jns
les
xchg
divl
movsb
push
arpl
or
std
xchg
push
jae
dec
xchg
push
mov
les
sub
xchg
hlt
sub
xchg
mov
movsl
add
jns
dec
jae
push
mov
imul
movsb
cwtl
fsubs
clc
orb
cmc
push
mull
inc
dec
insb
mov
dec
or
pop
das
adc
ljmp
inc
loope
std
xchg
mov
addw
adc
xor
jl
pop
or
mov
cld
rcr
xchg
out
sub
js
dec
aam
add
mov
dec
cltd
mov
loopne,pt
jl
cmpsl
out
adc
jge
sub
xlat
stos
outsl
pop
mov
sbb
call
jnp
mov
or
sti
cmp
enter
xchg
mov
jle
sub
lds
xor
imul
aam
adc
dec
mov
andb
pusha
pop
sbb
lcall
shl
push
and
push
jle
sti
cli
loope
fisttps
pop
jg
sub
xlat
mov
fdivs
or
adc
mov
mov
jg
pop
or
ja
push
rol
mov
stos
out
cmp
jae
outsl
shlb
cmp
bound
aad
hlt
sbb
pop
jp
lret
nop
lds
cmp
adc
dec
out
ja
or
jp
mov
add
int
dec
dec
lods
imul
and
out
dec
call
lods
and
mov
xor
push
or
bound
mov
add
out
stos
adc
jae
inc
call
mov
cmp
cmpsl
mov
scas
pop
fcoml
mov
jecxz
cmpl
or
jb
fisubl
cmc
int3
rorb
in
jmp
xchg
std
mov
and
mov
ljmp
popf
push
mov
loop
mov
push
mov
movl
mov
xor
out
or
ljmp
rep
xchg
movsb
pop
adc
cwtl
out
push
out
cmp
enter
pusha
fildll
cmp
sbb
adc
movsl
lock
imul
rolb
out
ljmp
popf
clc
sahf
mov
mov
mov
mov
and
pop
mov
xor
in
das
std
xchg
iret
pop
int
jecxz
and
mov
dec
lret
imulb
stos
scas
mov
mov
xor
aaa
bswap
notb
mov
xchg
es
hlt
ror
push
movb
mov
xor
pushf
push
inc
mov
stos
data16
push
call
jns
pusha
int3
nop
sbb
clc
jecxz
mov
xchg
push
leave
xchg
xchg
dec
cmp
jg
xor
inc
xor
divb
cld
lret
cmpsb
add
inc
stc
pushf
mov
jbe
clc
push
dec
idiv
adcb
ret
sarb
inc
pop
mov
cmpsl
xchg
jmp
pop
popf
mov
insl
adc
outsl
insl
xchg
mov
xor
cmp
xchg
cmp
xchg
mov
inc
daa
inc
repnz
daa
add
lods
popa
adc
cs
or
pusha
cmp
jp
cmp
fdivl
add
xchg
out
lods
push
push
mov
sub
inc
or
inc
cs
xor
dec
jle
jge
add
jp
push
loop
popa
lret
repnz
mov
data16
lods
into
popf
cmp
jo
dec
push
ja
cmpsl
xor
iret
mov
push
inc
inc
mov
ljmp
mov
xor
add
inc
test
cmp
cmp
dec
jo
fistpll
cmp
lret
in
xchg
xor
fistpl
mov
push
inc
fcomps
push
lods
lcall
jnp
out
stc
lret
pusha
loope
and
loope
in
xchg
pop
ss
lea
movsl
adc
addr16
jbe
inc
int3
sbb
jmp
xchg
xchg
imul
lods
rclb
push
dec
bound
dec
std
adc
inc
loope
pop
loopne
mov
rcll
adc
cmp
loopne
mov
sbb
xchg
mov
jno
jbe
hlt
stos
or
xchg
gs
inc
out
push
push
enter
orb
pop
fnstenv
pushf
cmpsl
push
xorb
movsb
sahf
push
mov
in
fcom
jg
add
arpl
insl
sarb
or
inc
sbb
push
cmp
xchg
and
inc
jb
std
add
rclb
int
pusha
push
js
aaa
mov
inc
and
in
jp
fdivrs
cmp
fnstsw
iret
mov
or
jl
jnp
jle
cwtl
insb
add
shll
loope
and
xlat
mov
loop
add
negb
add
les
jb
or
push
jns
or
or
into
enter
int
je
int
mov
cmp
and
rorb
jmp
popf
sbb
mov
imul
mov
xchg
jne
and
repz
mov
sub
sbb
mov
call
lods
pop
mov
int
push
xor
jns
lcall
jnp
push
imul
filds
cli
ja
stos
add
xor
es
cmp
enter
stc
es
or
push
fdivrs
cmp
sbb
mov
outsl
jecxz
mov
stc
lods
adc
push
daa
cli
sbb
pop
sbbb
mov
ret
loopne
xor
mov
cmpsb
fs
push
js
mov
mov
add
push
cmc
loope
or
jmp
sahf
inc
dec
cmp
mov
mov
and
add
fwait
jbe
push
cmp
or
lret
sbb
add
popa
mov
repz
test
pop
addr16
clc
mov
jp
dec
scas
insl
adc
pop
nop
subb
cmp
jecxz
cmp
cltd
js
add
or
xchg
mov
adc
rorb
pop
or
jns
pop
push
jmp
xchg
mov
mov
jae
insb
mov
or
push
test
cmp
add
jl
or
mov
pop
sbb
lret
inc
int3
fiaddl
or
paddusb
jns
sub
add
xchg
rcrb
shlb
mov
push
aaa
repz
outsb
fidivs
nop
test
jl
or
jp
in
cmp
cmp
jb
pop
jp
stos
pop
orl
js
and
divb
lods
addr16
jle
lret
mov
lock
outsl
or
and
jmp
mov
imulb
push
jg
xor
subb
gs
mov
loope
sub
push
mov
lods
mov
pusha
push
mov
push
ret
push
push
adc
jecxz
push
cli
or
pop
push
push
pop
movsb
adc
jp
jb
mov
pop
dec
in
shlb
in
fdivrl
sub
sub
jecxz
popf
ja
ss
lods
gs
mov
mov
sbb
xor
sub
xor
lret
inc
ja
cltd
jb
fcoml
sbbb
cmp
or
test
dec
outsl
scas
cmp
in
nop
push
dec
pop
das
adc
sbb
das
xchg
and
ljmp
push
fstl
and
inc
stc
jecxz
sub
cmc
push
ret
inc
and
add
aad
mov
cltd
dec
scas
and
stos
insb
das
arpl
popf
jg
xor
lds
sarl
popa
xor
push
xchg
sbb
inc
sbbl
test
sub
push
outsl
inc
jnp
divb
fistpll
test
push
test
repz
bound
adc
dec
mov
push
hlt
dec
push
aaa
sarl
in
pop
push
int3
pushl
pop
or
ja
nop
mov
pop
mov
dec
and
lret
sbb
rcrl
jnp
and
pop
aad
cmc
fistpll
jge
sahf
jnp
popf
or
icebp
int3
ret
cmp
stos
shl
mov
iret
push
test
loop
push
movsb
in
mov
jp
lret
aas
iret
loope
add
arpl
push
outsl
iret
jno
jge
xorl
ret
mov
jl
sub
lea
inc
pop
stos
mov
xor
cmp
jle
lahf
mov
or
push
jae
inc
adc
pop
in
bound
mov
cld
fcoml
xor
test
sub
imul
scas
push
add
or
stc
call
jge
push
fsubrl
mov
adc
push
fisubl
popa
lods
fadd
in
fcoml
std
inc
into
jae
scas
mov
pushf
sub
roll
xor
mov
xor
je
cwtl
pop
lds
es
or
cmp
test
call
dec
nop
jb
add
or
mov
aad
add
roll
dec
sti
xlat
mov
fisttps
sub
dec
push
ja
loopne
xchg
cmc
inc
int
pop
popa
out
mov
pop
adc
cld
mov
mov
cmpb
fwait
adcb
into
xchg
or
jge
cmp
dec
test
movsl
scas
push
push
jae
xchg
cld
mulb
stos
cli
fisubl
or
sbb
cmc
adc
push
jno
fdivl
and
mov
insl
mov
pushl
jp
lods
shll
shlb
push
pusha
aaa
mov
push
mov
or
and
rcrl
cs
stos
ss
rorl
or
push
movsl
stos
inc
iret
out
popa
cmp
shll
jle
fldl
jno
jbe
sbbl
jl
testl
fnstenv
ret
mov
or
mov
push
inc
dec
jle
lcall
adc
ficomps
xchg
inc
insl
or
clc
call
loope
xchg
sahf
xchg
rclb
mov
push
pop
push
xchg
cmp
mov
aam
int3
and
in
mov
inc
add
inc
insl
lods
and
mov
add
push
aas
jmp
or
insb
shlb
sbb
in
sbb
outsl
sub
jne
sub
out
sbb
pop
fildl
fistpll
lret
sbbb
xchg
pop
cli
mov
arpl
mov
fists
push
lret
aas
cmc
clc
mov
cli
add
mov
pop
imul
xor
arpl
cmpsl
notb
xchg
outsb
std
adc
jne
fwait
iret
mov
pop
inc
lods
mov
icebp
repz
idivb
pop
dec
inc
cmp
mov
scas
cmc
jmp
lahf
cs
adc
add
xor
xchg
jle
xor
out
cltd
dec
stos
sub
adc
std
notl
sbb
sub
sarl
shlb
test
mov
inc
cwtl
add
mov
mov
xor
movsl
daa
and
cmp
push
out
push
repz
out
sub
daa
jle
lahf
jge
jmp
xchg
fs
cmp
xchg
test
dec
pop
call
mov
mov
sub
jo
mov
mov
jmp
daa
insb
mov
test
cmp
adc
pop
les
pop
fs
dec
loop
or
jbe
js
mov
out
scas
stos
mov
jb
in
xor
xor
jle
and
pushf
pop
stos
pop
lahf
xchg
jmp
or
sub
jno
mov
movsb
or
cltd
lret
push
push
in
xchg
xchg
jle
mov
aas
lcall
sbbl
sub
sahf
dec
ret
scas
lock
mov
mov
leave
add
pop
pop
jne
cmpsb
and
adc
or
sbb
cltd
or
lock
sarl
andl
js
cs
ja
sbb
sti
call
dec
cli
jns
and
adc
xchg
xor
imul
mov
sub
fldenv
mov
scas
ret
lock
test
scas
xchg
arpl
add
cmpsl
cwtl
xor
pushf
inc
fwait
shrl
sub
push
mov
scas
pushf
icebp
cmpsb
push
sarl
add
dec
and
popa
scas
ret
test
cwtl
mov
mov
lahf
test
aam
mov
xchg
insl
jnp
pusha
lds
or
dec
aam
sbb
sub
aam
and
loopne
sahf
jecxz
imul
mov
mov
dec
sub
mov
cmpsb
or
mov
inc
adc
fs
lret
or
inc
sub
data16
push
adc
mov
fisttpl
std
les
rcrb
mov
lods
xchg
stos
outsl
cmc
dec
cs
xor
xor
pop
inc
das
inc
mov
cmp
xor
mov
sbb
add
adc
add
test
xchg
cld
sub
add
mov
mov
or
andl
lret
aaa
cmp
mov
or
popa
cmp
scas
xor
dec
popa
out
imul
ja
cltd
and
mov
mov
push
or
sar
jo
lahf
adc
scas
inc
add
xchg
push
iret
fistpl
cmpsb
pop
adc
mov
inc
xchg
adc
js
adcb
inc
jmp
outsl
shlb
les
arpl
fxch
mov
sub
push
xor
add
cmp
lds
jnp
fcmovb
dec
mov
ss
mov
jmp
mov
mov
inc
cmpsb
mov
mov
or
push
insb
fmull
or
jbe
ret
pusha
dec
cmp
pop
and
jle
shlb
xor
mov
mov
ret
int3
mov
mov
xor
fdiv
lahf
incl
ds
add
stc
popf
fwait
lods
xchg
ret
sti
mov
fidivl
push
mov
shrl
adc
dec
and
pop
stos
push
fidivrs
repnz
out
pop
out
push
mov
pop
je
ret
or
cwtl
cmp
lods
in
mov
jmp
out
lret
xchg
mov
cmpsb
dec
hlt
xchg
ret
lea
jmp
sbb
loop
adc
mov
dec
adc
iret
xchg
test
adc
clc
mov
adc
cmp
out
push
inc
mov
xchg
xchg
repnz
jge
mov
hlt
push
push
outsl
lcall
lcall
xor
enter
xchg
xchg
sub
int
inc
mov
xchg
aad
push
or
stos
xchg
scas
in
inc
xchg
sbb
sub
xchg
jno
xchg
call
ret
sub
cmp
icebp
gs
dec
sub
mov
scas
scas
loope
dec
fnstsw
lcall
data16
inc
stos
pop
jnp
movsl
push
aas
mov
stc
xchg
iret
mov
and
int
ja
js
adc
cli
mov
mul
punpckldq
ror
sub
int
shl
xor
dec
hlt
xchg
xchg
push
or
lahf
mulb
inc
lret
shll
and
das
in
sbbl
jl
lock
cwtl
jp
clc
mov
shlb
mov
sbb
cld
inc
out
fisubrl
in
in
aam
arpl
xor
pop
cld
clc
add
jmp
cli
imulb
aad
dec
adc
shll
xor
fmuls
adc
fadd
xchg
and
test
or
sbb
xchg
xchg
cmc
jne
xlat
loopne
jo
jle
popa
into
cmc
fbld
pop
ss
adc
jle
adc
push
and
cmp
jns
ficompl
fwait
and
sub
cmc
or
jo
sbb
and
std
xchg
cld
xorb
jnp
adcl
mov
mov
xchg
shll
lret
lds
and
pop
sbb
scas
jmp
divb
mov
cmp
cmp
pop
mov
xor
jecxz
daa
sub
repz
dec
orl
ret
inc
lock
push
pop
sarl
xorl
inc
jecxz
in
push
sbb
pop
xchg
fsubp
mov
or
movsl
pop
mov
lea
fmul
sar
dec
mov
mov
loope
stos
arpl
push
scas
inc
adc
test
push
cltd
dec
icebp
pop
shlb
push
sar
jle
dec
out
inc
in
mov
and
scas
adc
mov
add
push
or
dec
int
and
imull
mov
sub
dec
push
lods
rcrb
adc
mov
rorb
push
or
jmp
jno
subb
push
push
sbb
xor
mov
xchg
pop
mov
pop
movsl
mov
mov
imul
das
aam
inc
je
xor
stc
movsl
dec
iret
rorb
inc
aaa
movsb
aam
out
inc
pop
mov
sub
enter
jb
pop
pop
outsl
xchg
fldt
dec
or
insb
sbb
xlat
xor
inc
jp
adc
ret
and
mov
sbb
test
ror
repnz
mov
cmp
hlt
xor
jbe
xlat
pop
xchg
mov
lahf
dec
xorl
mov
inc
add
ficomps
cmpsl
push
inc
icebp
in
loop
mov
shrl
notl
cs
mov
xor
pop
jnp
push
cmpsl
and
adc
imul
or
push
stos
push
and
insb
out
jle
pop
rcrl
jae
stos
icebp
jns
pushf
imul
outsb
dec
iret
cmp
mov
jne
xor
push
mov
jmp
pushf
cltd
insb
add
fwait
arpl
les
inc
test
xor
hlt
pop
dec
je
inc
xor
cmp
outsb
jmp
lds
jno
hlt
rclb
fldl
mov
lcall
mov
jne
mov
push
fwait
or
add
xchg
pop
aas
xor
sbb
test
rcll
cmpsb
xor
push
pop
loopne
pusha
fs
int
xor
aas
inc
ret
push
push
loop
push
sub
pop
stos
arpl
mov
mov
and
aas
enter
lcall
fucomi
inc
dec
filds
xchg
pop
jle
fwait
add
push
and
pop
ret
inc
out
mov
mov
clc
mov
jg,pt
inc
into
jecxz
xchg
out
sub
loopne
cmc
jns
out
int3
xor
push
mov
dec
jp
sahf
mov
inc
in
pop
pop
les
jb
jbe
imul
out
insb
scas
out
jmp
daa
fidivrl
fstl
xor
fnclex
push
add
lods
insl
push
sbbb
jmp
or
adc
inc
cmp
js
mov
mov
fwait
xchg
fs
outsb
int3
fst
test
cmp
pop
leave
lret
sub
int
mov
xchg
adc
push
inc
add
inc
mov
in
jne
sub
in
inc
adc
in
mov
stc
outsl
xor
das
push
cmc
mov
das
mov
mov
mov
adc
dec
sub
mov
sub
inc
ja
jnp
add
addr16
cld
fs
adc
movsl
cmp
xchg
cmp
lock
std
stos
sbb
fcomps
or
loop
or
push
daa
ss
xchg
out
rclb
lods
or
movsl
jns
inc
popf
mov
into
xchg
fwait
mov
fistpl
push
shlb
shrl
mov
push
add
daa
mov
nop
movsl
fbstp
fisttpll
mov
cmp
cli
inc
or
aaa
adcl
jmp
inc
inc
movq
cmp
xor
dec
add
cltd
sbb
mull
and
movsb
inc
pop
mov
rclb
cmp
push
enter
sub
popf
push
mov
fs
aas
filds
in
repz
stos
mov
nop
cmpb
int
je
push
addr16
mov
jg
xor
hlt
pushf
push
add
in
gs
or
enter
call
daa
and
xlat
leave
cmpsl
pop
cltd
ret
bnd
cmp
dec
mov
mov
inc
daa
cwtl
add
or
or
jecxz
iret
mov
ret
push
mov
bound
cmpsl
clc
mov
xchg
push
or
out
adc
inc
insb
add
push
ds
jo
fdivs
arpl
ret
scas
and
incb
adc
adc
push
mov
push
daa
pop
mov
jecxz
lods
jnp
push
and
cmp
stc
push
adc
mov
push
orl
in
mov
mov
mov
dec
movsl
cmp
popa
fucomip
xchg
and
dec
pop
jb
fldenv
add
in
pop
fcmovb
ja
push
popf
fistpl
dec
jg
mov
enter
movsb
mov
sbb
sbbl
xor
mov
sbb
fsubrs
jg
cmp
sub
sbb
loop
cmp
adc
sbb
add
int
mov
dec
cs
jno
gs
cmp
stos
mov
jae
cmp
das
xor
xor
and
sub
mov
out
jb
aaa
jmp
lds
mov
push
xor
sbb
jnp
aam
sbb
dec
sbb
pop
jae
xor
add
imull
jb
and
jle
jmp
sti
into
jmp
push
arpl
lds
xchg
insb
insb
jl
and
cmpsl
push
fiaddl
cld
sbb
fbld
out
lock
stos
imul
sti
hlt
jecxz
in
jne
push
push
cmpsl
mulb
pop
shl
out
into
cmp
adc
mov
or
mov
dec
add
fsubl
ret
inc
fwait
xor
fstps
mov
stos
int
lea
bound
fcmovb
cmp
pop
inc
cwtl
pop
jae
dec
shrb
lock
or
outsb
aaa
sub
test
push
les
or
roll
mov
arpl
jnp
int
std
adc
aam
inc
or
cmp
mov
sbb
fdivl
imul
push
push
xchg
ljmp
cltd
xchg
fildll
pop
aas
leave
mov
test
aam
jmp
push
pop
in
xchg
or
cmp
mov
std
test
pop
hlt
cmp
inc
mov
movsb
mov
fldt
popa
scas
pop
inc
mov
movsl
aas
dec
ret
cli
cmp
stc
sbb
fiadds
adc
jnp
xchg
mov
add
aas
lret
mov
jge
xchg
pop
loope
arpl
xor
pop
jnp
in
aaa
int3
into
mov
ja
fsts
loope
imul
mov
lods
iret
jo
loopne
orl
mov
lahf
dec
es
inc
bound
pop
fs
movsb
repz
sub
adc
sbb
aaa
stos
jnp
inc
and
pop
jnp
sub
lret
sub
aaa
or
jbe
xchg
frstor
dec
or
es
and
or
mov
pop
movsb
sub
scas
in
pop
ljmp
pop
and
call
es
jp
subl
adc
pop
jge
fnstsw
cmp
test
xchg
xchg
cwtl
or
mov
xor
inc
mov
inc
movb
push
scas
jge
bound
jmp
sub
push
data16
sbb
xor
fiadds
data16
sub
mov
popf
inc
push
jns
in
dec
cmpsl
mov
cmc
imul
outsb
jl
jbe
sbb
add
jo
imul
loop
jns
jno
or
jle
orl
ret
stc
out
dec
inc
jns
dec
mov
jo
cmp
jbe
in
jo
clc
mov
sbb
bound
cmpsl
lea
lret
inc
sub
or
test
imul
mov
adc
into
lds
jl
sbb
sbb
cmc
adc
aam
das
sbb
xchg
mov
mov
pop
test
fsubrp
xchg
push
mov
mov
shll
jl
test
pop
pop
and
fisubrl
scas
or
je
lcall
out
cltd
push
push
divb
test
push
clc
fidivl
and
xorb
add
jl
mov
fimuls
lret
jecxz
dec
aaa
test
mov
daa
jp
lahf
push
movsl
lds
in
dec
jns
xchg
xchg
mov
jg
leave
cmp
mov
repnz
inc
mov
add
jo
std
xchg
loop
nop
jb
cli
push
imul
icebp
inc
fbstp
subl
jnp
setl
lea
or
call
pusha
or
push
mov
outsb
rcrb
add
sbb
jb
adc
sahf
loopne
pop
adcl
lret
mov
dec
loopne
sbb
and
jmp
insb
fdivrp
cs
std
cmpsl
insl
rclb
jne
add
cli
add
shll
test
setno
adc
out
outsb
mov
jge
fs
push
jle
repnz
arpl
imul
paddd
and
jb
cli
icebp
add
shrb
lods
push
ficoml
sahf
mov
test
dec
pusha
das
xchg
out
rcll
dec
idivb
and
imul
test
mov
adc
inc
add
in
dec
aas
mov
xchg
lock
pop
xchg
add
inc
pop
push
ss
popf
xor
pop
cli
mov
test
sti
int3
push
rorl
insl
dec
mov
clc
gs
lods
push
sahf
std
mov
jne
idivl
push
inc
mov
pop
inc
dec
pop
lods
jmp
sbb
fldz
push
shll
push
stos
adc
pushf
adc
xchg
mov
xor
add
test
into
ljmp
mov
ret
push
mov
test
mov
cltd
pusha
popf
leave
pop
mulb
mov
fldt
lods
or
mov
orl
adc
xchg
pop
jp
cli
mov
cmp
sbb
aam
and
xor
sbb
jae
fisttps
lcall
loop
xchg
movsb
jmp
aaa
jl
into
lods
jbe
xor
mov
cs
das
inc
xor
fstpt
daa
adc
lahf
mov
dec
in
jecxz
jae
xor
lods
jp
xor
int
in
sbb
inc
imul
pushl
insb
aaa
sbb
ret
add
inc
pop
add
dec
sbb
rorb
fnstcw
lods
add
mov
dec
mov
sub
es
popf
std
inc
cmp
add
fcoms
test
gs
sub
sub
test
jle
insb
rcr
out
out
adc
push
ret
xchg
jb
adc
mov
mov
lds
sub
insb
mov
pop
add
imul
sahf
pop
imul
and
xchg
xchg
pop
jne
jae
xor
jmp
sub
fdiv
repnz
fstl
mov
mov
add
add
add
cld
inc
xor
lea
fdivrs
sub
icebp
fimuls
sarb
pushf
pop
inc
divb
pop
push
sbb
fsubrs
mov
push
lods
mov
inc
mov
xor
mov
jnp
add
push
xchg
push
jns
push
jno
push
outsl
jmp
xor
stc
fnsave
sub
xor
pop
test
jp
outsb
bound
mov
mov
sbb
pop
mov
pushf
mov
jl
lock
rol
fwait
insb
ljmp
push
and
shrl
adc
jne
mov
pusha
add
je
jl
pop
dec
movsl
cmovle
pop
stos
mov
lcall
std
in
inc
aad
sti
ljmp
cwtl
inc
popa
lea
fisttpl
ja
cmp
xlat
jge
xchg
mov
or
sti
je
sub
lahf
lods
loope
xchg
jae
sub
pop
or
dec
pushf
lods
imul
mov
cmp
jl
cli
dec
lea
ret
cmp
cmpsl
dec
lret
mov
fstl
push
jecxz
aaa
negl
jle
icebp
lods
sub
mov
pop
mov
and
mov
addr16
jge
stos
in
sahf
leave
lret
iret
je
clc
in
pop
mov
sbb
and
aaa
cmp
loop
mov
repz
das
cmp
cmpsb
lock
xorb
dec
xor
int
out
nop
mov
mov
push
cmp
mov
and
xor
stos
adc
inc
loopne
adc
inc
mov
cmp
inc
pop
popa
clc
or
pop
sub
ss
lret
sub
and
aam
test
sub
sub
scas
mov
xchg
jno
sub
lgs
mov
notb
cmp
insl
and
mov
pusha
cmp
cmp
mov
pusha
cmp
xor
add
lret
ficoms
push
mov
and
push
add
leave
jbe
mov
and
popl
insl
or
pop
addr16
lea
add
sti
and
mov
add
pop
mov
xor
and
and
int
test
pop
je
add
sub
outsl
out
jmp
cmp
mov
js
or
xlat
nop
ss
push
hlt
xchg
test
flds
or
push
loop
xor
movsb
add
ss
xchg
scas
xor
stc
push
mov
mov
jge
add
mov
scas
jo
ds
cmp
loop
cmpsl
push
push
ret
jmp
lret
stc
clc
push
xor
lret
jns
inc
mov
dec
push
fbld
mov
mov
mov
inc
rol
xorb
rcl
pop
sbb
inc
lcall
mov
dec
xchg
and
int
pop
ret
mov
xchg
std
stos
add
out
mov
pop
ja
sub
xchg
mov
pop
out
pop
mov
pop
jecxz
or
xor
lret
testb
out
inc
scas
and
mov
jmp
in
aam
cmpsl
stos
mov
pushf
push
mov
cmp
nop
xor
inc
mov
scas
repnz
adcl
add
loope
test
call
cli
sbb
fstl
add
xor
adc
out
fs
clc
hlt
jecxz
pop
sub
sub
sbb
push
sub
sub
xor
xchg
andl
outsl
sbb
and
out
add
std
callw
bound
movsl
xchg
out
or
icebp
mov
inc
repnz
mov
mov
mov
call
jbe
jl
out
lcall
mov
movsb
pop
insl
in
cmpsl
cmp
into
scas
jo
cltd
bound
std
xor
or
fwait
mov
jbe
jno
gs
mov
xor
pop
jns
idiv
pop
inc
sbb
shr
shlb
push
or
idiv
sbb
daa
mov
push
ds
sub
clc
data16
push
clc
enter
movsl
sub
jne
xchg
add
mov
movsb
mov
lret
jle
clc
push
mov
sbb
adc
ret
aaa
jnp
mov
movsl
lret
mov
loopne
sarb
dec
pop
pop
add
adc
stos
mov
fs
jmp
sub
sub
aad
popa
pop
js
and
js
dec
cltd
and
lock
lods
or
into
adc
sbb
shl
sbb
leave
or
and
lea
iret
stos
std
scas
mov
sub
lret
mov
jl
ret
mov
pop
arpl
mov
sarb
seto
xchg
lahf
xchg
adc
in
hlt
das
and
movb
sbb
adc
dec
add
jmp
push
mov
dec
cltd
push
cmp
pop
call
stos
pushf
xorl
lods
xor
add
add
add
rcrb
inc
xor
fdivp
gs
pushf
popf
or
mov
mov
mov
jo
in
in
sbb
fidivrs
shr
cmp
jb
ret
jl
dec
movsb
mov
enter
scas
mov
rcrl
add
jge
sbb
mulb
mov
adc
mov
push
xor
adc
test
jbe
in
xchg
mov
data16
push
mov
mov
loopne
or
mov
push
push
mov
pop
or
scas
leave
frstor
push
ret
sub
adc
mov
adc
lods
ss
jp
loopne
fisttpll
cld
push
cmpsl
mov
jns
pop
fidivrs
sub
out
add
mov
cld
pop
sahf
sbb
push
mov
insl
pop
add
inc
lret
jge
dec
mov
popf
mov
pop
add
and
aam
push
sub
sbb
xor
jns
push
mov
xorl
adc
mov
jg
lea
popa
lret
cmp
jge
scas
mov
cli
add
cli
xchg
mov
mov
loope
jae
add
mov
xchg
out
into
sub
add
sub
arpl
pop
out
pop
in
outsl
xchg
movsl
pop
imul
lock
xchg
pop
and
xchg
dec
ja
scas
add
mov
add
mov
inc
notl
pop
jl
fisubrl
push
or
xchg
mov
dec
sbbl
mov
dec
xor
popf
imul
enter
rcr
push
insb
push
inc
xchg
call
inc
ret
fwait
add
idiv
ror
fmulp
lret
and
jecxz
mulb
xchg
addb
cmpsl
pop
inc
xor
les
adc
sbb
add
lock
jg
mov
fsubr
arpl
inc
mov
je
xlat
cmpsb
dec
and
arpl
lcall
in
inc
jecxz
mov
dec
and
and
add
sbb
arpl
loope
xchg
mov
mov
imul
cmp
das
lods
push
pop
pop
in
cmp
leave
les
pushf
into
xor
mov
mov
cmpsb
fisttpl
adc
pop
or
je
rorl
pop
adc
mov
mov
shrb
cmc
movsl
or
sub
int
add
lret
bnd
or
lds
in
in
fs
sub
jmp
and
bound
js
add
push
jae
shlb
pop
cmpsl
aad
xchg
popf
pop
mov
push
mov
or
popf
enter
sub
xchg
mov
add
loope
mov
les
in
sub
jnp
mov
pop
cmp
xor
jg
in
cmp
sub
add
mov
or
pop
jae
ret
sub
int3
ss
mov
mov
lcall
mov
cs
pop
shll
push
jns
adc
loope
ja
pop
hlt
push
aam
jo
nop
dec
jecxz
dec
cli
push
int
dec
clc
idivl
daa
mov
or
push
leave
in
test
arpl
lock
in
mov
cmc
lea
or
xchg
imul
xchg
addb
sbb
loop
imul
outsl
and
cmp
mov
mov
in
push
int
cmp
inc
sbb
mov
add
shr
xchg
mov
clc
rol
xlat
mov
xchg
and
inc
in
mov
sbb
inc
call
push
lock
mov
jecxz
inc
jb
loopne
push
popf
mov
xor
sub
mov
mov
movsb
jg
xorps
pop
ret
inc
icebp
xor
jae
pop
popa
sarl
jnp
push
loop
adc
mov
push
test
jnp
xchg
mov
sbb
loop
xchg
sbb
pop
lret
mov
and
xlat
andl
inc
in
jnp
outsl
inc
aas
dec
sarl
ss
lahf
mov
mov
sbb
add
push
mov
push
outsl
pop
and
aad
cmp
das
out
flds
pop
aam
lcall
popa
lcall
fisttpl
xor
aas
xchg
add
loope
xchg
mov
or
movsl
xchg
ss
scas
ret
xchg
pop
nop
sub
imul
jge
out
nop
xchg
icebp
push
sub
das
jmp
xchg
mov
mov
xor
sbb
popa
sahf
jmp
popa
xchg
loop
arpl
loopne
fimull
add
dec
cmpsb
push
and
dec
imull
popf
into
movsl
andl
lods
mov
std
addr16
or
pop
sbbb
int3
scas
add
dec
pop
inc
pusha
ficomps
stc
mov
xchg
in
push
cmp
mov
sbb
fstpl
stos
jmp
lfs
add
xlat
fnstsw
std
aam
loopne
dec
inc
in
stos
dec
lcall
aas
lock
mov
es
inc
mov
rep
loop
jl
call
inc
shll
adc
repz
mov
push
out
outsl
inc
inc
bound
adc
sbb
dec
sub
sub
fsubl
push
add
push
jl
mov
ja
add
sbb
mov
xor
push
cld
xor
jns
sbb
pop
mov
daa
outsl
push
xor
add
fwait
xor
pushf
jno
imul
adc
jge
cmp
sub
or
cmp
mov
lock
dec
negb
sti
lods
xchg
xor
bound
add
fwait
cwtl
mov
je
mov
xchg
outsb
sbb
xchg
jns
mov
mov
es
nop
xor
pop
mov
xlat
push
dec
aas
jae
out
pop
push
add
inc
pop
jg
cwtl
xchg
test
fnstenv
add
cmpsb
xor
sub
popf
movsb
mov
das
mov
bound
sahf
xor
xchg
loope
jae
and
or
scas
das
out
leave
jecxz
scas
push
mov
rclb
fs
test
xor
mov
out
cld
pop
mov
dec
or
mov
movb
pop
cmpl
in
xlat
cmpsb
popa
or
inc
loope
jp
jb
cmp
cmp
sub
or
xor
dec
or
xchg
push
ret
mov
push
mov
ds
pop
jp
cmp
sarb
dec
xor
cld
sarb
mov
pop
mov
mov
mov
cld
xchg
push
xchg
sub
les
dec
dec
jle
lahf
test
jo
stc
fdivl
lcall
std
in
pusha
enter
xchg
mov
pop
push
outsl
mov
shlb
testl
loope
pushf
pop
bound
mov
add
sbb
int
push
in
outsl
cli
pextrw
cmp
mov
pop
dec
or
dec
dec
repz
xor
iret
cmpsb
ljmp
cmp
repnz
adc
int3
pusha
test
js
and
sub
sub
mov
or
mov
cmp
test
insl
jae
pop
push
dec
pusha
sbb
push
filds
push
inc
fwait
adc
rcrb
xchg
stos
cmp
jns
test
mov
pop
mov
sub
sbb
testb
out
sub
pop
mov
sbb
fs
adc
les
xchg
push
xor
mov
jne
scas
or
jnp
popf
xor
jbe
iret
rcrl
xchg
daa
loop
and
xor
subl
repz
lea
mov
loope
ss
xchg
test
stos
int3
insb
pop
or
mull
add
in
push
dec
notl
jmp
out
jns
dec
lds
dec
or
sub
mov
loop
popa
sub
int
mov
mov
outsb
mov
or
popa
movsb
data16
idivl
addr16
push
inc
dec
mov
and
iret
rorb
test
mov
xchg
inc
pop
mov
out
jo
js
das
mov
lock
mov
int
lock
mov
inc
dec
fidivrl
add
test
sbb
adcl
mov
and
rol
addr16
jg
dec
push
mov
xor
inc
mov
push
pop
or
into
lods
das
popa
or
fidivrl
add
out
inc
sbbl
inc
pop
in
leave
jle
mov
aaa
push
mov
stc
aas
mov
rclb
jle
addl
dec
mov
jo
ja
scas
into
stos
bound
and
cmc
test
dec
inc
test
ljmp
adc
test
sbb
scas
inc
xchg
jae
push
push
lds
xchg
int3
sub
call
mov
sbb
or
dec
sti
shlb
or
push
shll
daa
pusha
cmp
sbb
push
cmpsb
mov
push
add
rcrb
dec
mov
scas
out
sub
and
shll
add
fildl
cmp
push
adc
sbb
xor
pop
int3
imul
add
dec
sub
sub
jo
enter
cmp
dec
and
cmp
pusha
mov
jb
fadds
or
mov
xor
pop
jle
xchg
sbb
dec
cmp
ljmp
adc
popf
cwtl
ss
mov
lock
mov
xchg
fmul
pop
push
clc
hlt
imul
push
cmp
cli
inc
data16
or
loop
cmc
adc
call
sub
scas
mov
pop
mov
fcmovu
cmp
lods
xchg
cmp
add
adc
les
pop
jns
sub
out
push
mov
add
or
push
jl
in
addr16
xchg
dec
orb
xor
mov
pop
push
mov
mov
imul
call
add
dec
loope
sbb
sbb
out
fstpl
cmpsl
sbb
mov
ljmp
cmpsb
repnz
cltd
pop
jb
outsb
add
rcrb
jg
jb
jo
fidivrl
push
ret
adc
pop
test
clc
xchg
inc
out
fbstp
std
shlb
call
push
pusha
loopne
push
mov
inc
mov
fcompl
in
mov
xchg
outsl
leave
xor
nop
sar
ljmp
fcmovnb
rcl
cmpsb
es
idivl
test
scas
fidivrl
icebp
xchg
inc
hlt
loopne
push
dec
cmp
ds
xchg
loopne
xor
inc
and
mov
mov
dec
testb
test
or
or
sub
push
jb
jnp
popf
jge
dec
je
push
jl
add
xor
aas
sub
ret
sub
jmp
jb
push
cld
inc
in
lahf
sbb
push
cmpb
mov
add
sub
cmp
jp
mov
add
addr16
xor
cld
aas
cmp
xchg
xlat
mov
shrl
std
sub
mov
out
es
inc
jnp
adc
lcall
mov
add
jns
sbb
enter
lret
push
aam
xchg
mov
arpl
div
shrb
push
jnp
mov
sahf
push
mov
sub
movb
sub
pop
push
nop
mov
ss
cmp
sub
hlt
mov
les
imul
jecxz
pop
sub
out
or
push
xor
cwtl
pop
mov
shrb
das
or
xor
mov
push
cmp
cmp
inc
imul
push
rorl
pop
jno
push
cwtl
fwait
fimuls
mov
mov
cmp
and
add
sahf
push
dec
lea
pop
aas
aaa
or
dec
xlat
dec
adc
mov
dec
jnp
sbbl
es
in
xchg
jbe
test
clc
mov
pusha
sbb
lea
ss
cwtl
subl
add
pop
or
out
pop
imul
clc
cmp
notb
push
push
jcxz
iret
mov
push
jg
ss
outsb
cld
std
sbb
rclb
push
fisttpll
jb
add
xchg
push
cmp
and
test
dec
pushf
jno
xor
fldt
repz
push
push
sbb
mov
push
cmpsl
mov
mov
pop
cmp
out
mov
adc
repz
ret
hlt
scas
out
xor
dec
dec
lcall
std
push
popa
aas
add
cltd
dec
fwait
pop
out
enter
jo
sub
jecxz
lret
mov
cltd
bnd
pop
mov
jne
rorb
adc
lods
sbb
cs
jae
call
movsb
mov
iret
scas
pushf
xchg
inc
mulb
mov
insb
push
lcall
sub
mov
repz
leave
xchg
cmp
stos
ja
jns
scas
push
out
sbb
dec
xor
dec
adc
js
and
imul
pushf
or
jl
jge
fs
cmp
inc
push
push
jg
cmp
jg
out
pop
sti
clc
mov
cs
ja
lahf
mov
pop
lea
pop
adc
lods
or
cmc
stc
sahf
or
popa
add
cmp
call
shrl
das
jbe
add
bound
mov
lahf
xchg
pop
shlb
xchg
dec
mov
inc
test
test
adc
lret
sub
scas
mov
dec
insb
or
cwtl
cli
pop
in
repnz
jecxz
cmp
push
js
shlb
cmc
insb
or
mov
pusha
xorb
in
mov
mov
mov
push
sbb
gs
sbb
icebp
das
cmp
xchg
adc
xchg
movsl
inc
push
addr16
xchg
hlt
push
rcrl
mov
lea
sahf
aas
add
pop
insb
lahf
das
push
inc
inc
addr16
inc
insl
enter
outsb
jbe
in
mov
jmp
ret
push
or
scas
arpl
xor
pop
outsl
outsb
or
mov
dec
popa
rorb
inc
int
ror
mov
and
clc
fprem
jns
or
shll
cmp
pop
imul
pop
or
andb
xor
popf
sbb
in
push
fbld
gs
adc
scas
les
inc
push
xor
test
adc
hlt
sbbb
adc
pop
pop
shll
ja
cmp
sbb
add
out
xor
xchg
push
lret
data16
cmpb
jp
out
inc
mov
mov
flds
fstps
loopne
and
outsb
adc
ja
mov
stc
lds
repnz
jo
dec
push
mov
roll
fistpl
adc
jb
jg
sub
jbe
jmp
and
mov
jle
pop
dec
sbb
cmp
lods
xor
push
loopne
or
ss
mov
mov
adc
pop
or
cwtl
dec
daa
inc
pop
pop
xchg
andb
add
jmp
push
xor
xor
stc
adc
scas
in
ljmp
movsl
fimuls
mov
incl
in
push
cmp
lds
add
adc
mov
cmp
or
lock
mov
adc
mov
cmp
mov
mov
sbb
test
sub
jmp
push
fistpll
fadd
dec
jl
scas
sub
mov
sub
enter
hlt
pop
test
lcall
mov
pop
rcll
xor
stos
push
jnp
or
jns
add
aaa
je
lods
jle
or
adc
xchg
cli
xchg
imul
loop
jge
xor
addl
or
jb
ret
dec
lret
outsl
xchg
dec
sub
dec
inc
icebp
and
in
sub
jecxz
xor
pop
pop
jo
imul
gs
push
adc
fdiv
dec
mov
jge
cs
movsl
test
add
fiadds
or
or
mov
aaa
int3
adc
dec
pushf
jns
ficoml
sbb
pop
adc
fnstenv
xchg
xchg
add
dec
cli
lea
movsb
push
in
xor
mov
cmc
pushf
fwait
shll
dec
dec
test
in
lret
jno
mov
cltd
repnz
ja
mov
mov
outsb
pop
dec
or
leave
pop
add
shll
sbbl
out
out
mov
repnz
ret
and
pop
loope
mov
es
dec
scas
fsin
xorb
lea
push
lret
hlt
cmp
data16
push
jg
and
adc
movsl
es
mov
rorl
and
stc
iret
xor
lret
aam
sbb
call
xor
arpl
movsl
into
imul
stos
xor
dec
out
mov
mov
push
jnp
in
jg
insl
mov
test
and
xchg
or
push
loop
shll
push
xor
sbb
mov
adc
push
dec
sbb
or
andb
cli
dec
cmp
out
scas
push
sub
fdivl
outsb
xor
mov
jp
outsb
or
ljmp
test
and
test
andl
loope
add
pop
ljmp
jno
lea
push
push
adc
add
popf
push
cmp
jns
mov
inc
jg
xchg
stc
mov
lock
lahf
mov
sbb
pusha
mov
mov
mov
or
es
adc
xchg
and
inc
and
and
xor
movsl
arpl
rorb
ljmp
jp
les
inc
nop
mov
dec
mov
xor
xor
scas
lods
bound
push
mov
or
or
enter
dec
repz
stc
repz
out
sbb
daa
movsb
and
adc
imul
sbb
add
mov
lea
xor
xchg
add
dec
mov
jp
scas
mov
testl
jp
push
xchg
jecxz
in
bound
adc
and
sti
test
mov
push
add
xchg
push
into
inc
adc
cmp
data16
stos
aas
ljmp
jns
idiv
outsb
sbb
jo
inc
imul
flds
mov
or
cmp
xchg
cltd
insb
mov
adc
push
movq
rolb
enter
aas
mov
hlt
adc
and
sub
gs
lock
imul
xchg
xor
cs
mov
pop
and
jl
inc
repnz
std
xchg
movsl
mov
mov
mov
jbe
dec
xor
imul
gs
dec
inc
jp
jecxz
fadd
ret
sbb
outsl
add
mov
fbstp
icebp
or
cmpsl
into
xchg
std
mov
xlat
pop
fwait
int3
fidivrs
pop
cwtl
call
pop
push
ljmp
data16
data16
clc
or
mov
rcrb
inc
rorl
add
int3
xchg
imul
jle
cld
pop
add
into
lods
fldenv
jl
movb
push
in
outsb
fistl
inc
xlat
jae
ja
aad
cld
and
or
fisttpll
aad
cmc
mov
es
aad
add
jge
sbb
fadds
leave
jl
cmp
outsl
mov
enter
pushf
pop
adc
xchg
cmpsb
mov
mov
outsl
lea
stos
cmc
into
mov
fstl
mov
out
out
push
inc
movsl
imul
ss
jecxz
fistps
aas
pop
and
xchg
jmp
adc
rol
test
xchg
xor
jne
mov
sub
test
movsl
sbb
mov
icebp
jbe
mov
mov
push
fisttps
ds
inc
scas
fistps
ljmp
mov
inc
mov
sbb
sbb
or
pop
or
adc
mov
cmp
into
ljmp
lods
movsl
or
sbb
jbe
addb
adc
aaa
popa
pop
inc
add
pop
cmpsb
insb
lahf
push
xor
loop
popf
imul
orl
sub
call
in
lret
shll
insl
in
ret
jo
arpl
int3
xor
arpl
sbb
dec
scas
pusha
jmp
cmpsb
out
sub
pusha
dec
jb
shrl
cld
sub
xchg
mov
mov
jo
fcom
add
xchg
sbb
cmp
insl
loope
mov
pushf
mov
push
les
sahf
mov
imul
insb
push
js
aad
sub
jb
in
pop
push
xor
push
inc
xchg
ret
adc
xor
stos
mov
xor
push
inc
add
add
dec
or
pop
enter
adc
sbb
aam
cmp
lret
mov
mov
outsl
jb
lahf
xor
dec
in
shrl
mov
in
pop
mov
sbb
sub
ljmp
into
mov
jl
js
pushf
shrl
sbb
xor
aaa
mov
imul
add
test
shll
inc
dec
mov
add
xchg
pop
cmp
mov
pop
xor
std
aam
clc
imul
not
fs
xchg
mov
gs
xchg
fcomps
inc
lods
add
mov
test
push
lock
jp
iret
bound
xchg
dec
xchg
pop
jl
mov
dec
fwait
pop
adc
or
lahf
cmp
mov
repnz
pop
push
mov
sbb
sbb
jae
cmp
clc
stc
mov
jp
xlat
or
fildl
jle
sub
fdivr
jae
movsl
cmpsl
int3
lock
pop
sahf
mov
dec
les
pop
sbb
fdivs
dec
and
pusha
push
adc
ds
mov
loop
cmpsl
ret
adc
mov
inc
sbb
sahf
test
mov
fimuls
mov
cmc
pusha
cmp
push
stos
push
sub
jl
movsl
test
arpl
pop
jge
add
pop
mov
fildl
mov
adc
fisubrl
inc
jne
dec
ret
mov
mov
enter
loop
dec
push
mov
pop
add
push
ss
out
pop
cmp
cwtl
xchg
cwtl
pop
sbb
enter
jle
sbb
mov
xchg
pusha
lret
dec
cmp
xor
sub
sub
or
jb
xchg
xor
or
mov
fs
test
loopne
jne
popf
sar
mov
pop
xchg
sbb
xchg
jle
pop
xor
loopne
stos
notl
push
pop
add
mov
cmp
outsb
pop
pushf
add
or
inc
xchg
insl
loopne
push
push
push
push
aas
out
sub
out
pop
push
xor
test
mov
cwtl
xor
test
xchg
add
mov
push
scas
mov
ret
js
inc
jmp
cmp
or
divb
cmpsb
cmp
cmp
test
adc
sbb
xchg
jg
dec
xchg
fwait
ret
sub
fists
pop
adc
adc
lock
fwait
sbb
xchg
sti
dec
or
jl
mov
xchg
sub
xor
stos
push
cmpsl
insl
mov
out
and
mov
add
push
jle
outsl
outsb
push
dec
ja
mov
push
dec
lret
daa
insb
sub
xchg
and
pop
shll
dec
or
sub
std
out
inc
sbb
je
push
mov
sub
aad
int
aad
mov
dec
lret
add
out
addr16
or
mov
mov
ret
cld
or
sbb
lret
xor
push
xchg
xchg
sbb
cmp
bound
test
leave
sub
fistpll
push
call
xor
out
out
orl
ljmp
and
mov
test
xor
inc
pop
shlb
cmp
dec
sbb
in
xor
mov
dec
addr16
jbe
cmp
repz
aad
gs
sub
pop
cwtl
js
daa
push
roll
push
push
jecxz
adc
rcrl
xchg
adc
lret
in
mov
bound
jge
dec
jno
lcall
loopne
sub
cmp
lods
sub
inc
dec
xor
or
fists
or
repnz
jg
in
subl
lahf
sub
cmpl
nop
adcb
pusha
sarb
pop
push
rclb
cmpsb
sbb
stos
jge
inc
mov
xor
in
xor
fdivl
mov
dec
jmp
pop
adc
pop
cwtl
les
xchg
gs
ret
daa
pushf
stos
jne
lods
lret
xchg
in
ss
scas
movsl
cld
sbb
pop
cmp
push
sbb
addb
mov
xlat
and
xchg
adc
rcll
mov
xor
adc
call
leave
fiadds
cmpsb
push
lods
xchg
add
dec
adc
sti
movsl
push
adc
jbe
clc
lods
inc
daa
xor
pop
push
push
sub
fimuls
push
in
filds
divb
sahf
nop
mov
nop
adc
pop
or
lods
test
cmp
loopne
loopne
lods
outsb
jno
lcall
adc
mov
sti
popa
jl
pop
mov
inc
pushl
xor
pop
push
and
sub
xchg
daa
jmp
xor
lods
out
mov
sar
mov
aam
or
shrl
loopne
insb
lret
pop
push
addr16
clc
cmp
pusha
nop
lods
push
leave
mov
addr16
push
jecxz
in
mov
imul
xchg
and
sub
clc
xchg
imul
nop
shll
cmp
push
leave
cs
or
stc
xchg
testb
gs
adc
pop
pandn
mov
cltd
or
fisubl
imul
fldenv
pop
addl
out
fiadds
inc
push
aas
out
adcl
mov
add
mov
std
cltd
cmp
gs
cmc
add
xchg
xor
imul
pop
cmp
popf
dec
push
icebp
cmpsl
xchg
xchg
sub
mov
jbe
rorb
sbb
mov
jp
test
and
sbb
cwtl
or
xchg
mov
loop
push
in
lret
inc
mov
jge
je
sub
mov
lret
in
sub
inc
ret
mov
dec
test
cld
or
inc
repnz
or
nop
inc
pushf
dec
push
cld
ret
popf
inc
add
or
mov
aaa
add
shll
lods
roll
xchg
ret
jl
rcrl
mov
and
pushf
pushf
adc
mov
push
cltd
loope
not
mov
push
in
cmpsb
add
xchg
sub
pusha
loopne
inc
int
int
inc
test
mov
jl
jl
les
sub
outsl
scas
pop
adc
fcmovnb
adc
ss
in
sbb
test
cwtl
fbld
sti
sub
lock
test
lods
sar
in
fisttpl
lret
add
rcll
mov
push
ficomps
es
movb
jecxz
and
int
ljmp
or
sub
mov
mov
sub
adc
jb
repz
fwait
jp
dec
std
out
dec
movb
loop
cmpsb
fstpt
rcrl
sbb
mov
sub
cld
scas
lods
ss
xchg
pop
sarb
sub
inc
sbb
repnz
aaa
xor
pushf
outsl
xor
data16
fnstenv
out
mov
fists
int
test
mov
in
jmp
insb
add
les
cmp
push
xlat
movsl
xor
mov
ficoms
popa
mov
mov
insl
pop
ja
dec
ret
jb
push
adc
jno
jns
inc
sbb
jmp
pushf
clc
insb
stc
push
cwtl
inc
jbe
lcall
adc
sbb
aam
in
dec
decb
aad
mov
jbe
repnz
jne
inc
pusha
mov
popa
push
dec
push
add
in
jmp
popf
cli
or
mov
xchg
add
jmp
jne
int3
push
pop
popf
push
push
lock
adc
imull
push
fldl2e
scas
mov
sahf
or
mov
inc
or
dec
in
popa
xlat
mov
jo
test
sti
sbb
and
bound
in
cld
ljmp
jecxz,pn
aam
jbe
out
outsl
jge
mov
lods
dec
pushf
lcall
test
cltd
out
sbb
pop
repnz
fnstsw
lods
adc
sbb
xchg
add
push
mov
add
xchg
in
or
insl
jp
in
xor
shll
sbb
shlb
std
pop
push
xchg
repnz
adc
rcll
hlt
fldcw
je
adc
cli
dec
fdivs
sbbb
jne
nop
daa
cmpsb
dec
and
repnz
push
push
mov
fcmovu
adc
sbb
dec
repnz
ljmp
cmp
into
test
mov
jg
scas
or
bound
ret
jp
xchg
out
out
cmp
ljmp
sub
sahf
xchg
jmp
push
and
pop
mov
jne
loop
add
sub
stos
je
icebp
mov
into
push
bound
lret
or
dec
push
lahf
xor
push
jnp
mov
leave
xor
inc
xlat
cmpb
rol
insb
jno
inc
inc
bound
sub
jns
push
ja
mov
popl
add
fstps
cmp
shll
add
dec
fnsave
push
movsl
xchg
cmp
dec
adc
cmp
jo
jno
mov
jns
popa
or
sub
imul
jle
cmp
aad
shl
test
je
stc
xchg
push
loope
dec
cmpsb
bound
pop
and
mov
into
sub
or
call
push
incl
lea
jb
movsb
jp
push
xchg
test
or
push
inc
or
shrl
xchg
ljmp
ret
loop
inc
fld
das
push
fucomi
jo
mov
ficompl
sbb
lret
sbb
push
cmp
pop
and
push
shrb
sub
jne
idivl
sbb
mov
cmp
push
lds
cmp
pop
or
rolb
out
push
out
leave
or
outsl
xchg
xchg
mov
outsb
fdivrs
arpl
lods
adc
sbb
sub
divl
popf
shlb
push
les
xor
adc
xchg
and
scas
insl
sbb
cmp
xchg
mov
or
fldenv
adc
stc
int3
xchg
enter
mov
inc
movl
xor
push
cmc
bound
add
xchg
je
cmc
popa
frstor
sbb
push
insl
data16
dec
jb
jns
xchg
inc
push
dec
inc
xor
pop
sub
sarb
roll
loop
push
adc
popf
movsl
dec
lret
sbb
jl
sahf
jp
xchg
sub
inc
out
xchg
insb
and
xor
pop
and
lods
ds
inc
cmp
in
rol
daa
add
nop
inc
mov
dec
jo
addr16
jecxz
call
mov
lods
xor
pop
cmc
addl
stos
scas
ret
and
sbb
jne
pop
popf
cs
insl
push
imul
imul
or
dec
pop
add
xlat
fbld
aad
js
add
incl
frstor
std
sub
xchg
push
xor
jge
pushf
out
mov
das
std
push
inc
cmc
adc
popf
xchg
cmp
and
bound
cmp
pushf
stos
loope
push
adc
cmc
lods
mov
bswap
dec
dec
or
ljmp
mov
aas
push
jmp
push
testb
push
add
push
inc
pop
rorb
push
jl
jno
pop
mov
mov
rorl
pop
or
mov
fstpt
rolb
test
mov
test
sahf
mov
and
cmc
pop
daa
cli
push
adc
fstpl
mov
cmp
dec
pop
or
outsl
fstl
push
dec
add
mov
inc
loop
jno
mov
int3
pop
rep
pop
mov
iret
adc
rcll
dec
je
cmpsl
mov
cwtl
dec
lods
push
fldt
dec
add
div
xchg
roll
sub
jg
inc
sbb
rcll
xor
jle
btc
js
jb
jbe
clc
shrb
shll
xlat
or
rorl
fucomip
lock
jmp
push
lahf
pop
fcomip
pop
add
push
xchg
cmp
mov
xchg
push
sub
xchg
enter
jae,pn
stos
mov
adc
xor
mov
rcrl
rcll
dec
jne
sub
sbb
fistpl
and
dec
scas
es
dec
lahf
pop
or
outsb
iret
mov
cmp
dec
ja
enter
mov
repnz
je
inc
push
nop
popa
imul
es
push
arpl
adc
insl
shll
jge
das
out
test
out
xor
sub
test
and
insb
xor
adc
data16
push
lods
cmp
mov
loope
jae
mov
jg
jg
xor
dec
inc
and
jle
dec
out
sub
aad
mov
pushf
ljmp
bound
jae
pop
stos
add
sub
xor
inc
pop
cld
xor
out
pop
std
xor
fiaddl
push
je
xlat
mov
sub
imul
adc
mov
mov
in
xor
rcl
es
lods
hlt
add
mov
push
lock
mov
xor
cmp
xor
incl
jmp
dec
rcrb
lea
sbbb
fisubrs
xchg
rorb
stos
leave
mov
popa
lds
mov
mov
jb
jle
push
inc
scas
inc
add
sub
call
xchg
mov
jp
lea
sbb
pop
gs
mov
sbb
cmp
cs
roll
js
fstp
push
add
sti
cmc
je
popl
jne
shlb
popa
inc
mov
add
rol
nop
pushf
mov
out
insb
xor
xor
push
pop
push
mov
leave
mov
add
xbegin
sbb
sbb
jnp
cmp
mov
cmc
mov
lret
or
dec
sub
push
jp
cmp
or
call
ljmp
mov
sbb
add
cmp
mov
stos
inc
int3
out
loope
loopne
ret
loop
jae
jmp
stos
shl
lahf
pop
dec
enter
shrd
jnp
scas
int3
lret
sbb
insb
fmul
push
inc
out
and
fisttps
out
nop
xchg
mov
add
aas
mov
fwait
testl
ret
cmpsl
add
lock
es
shl
xor
in
inc
mov
in
or
jle
add
mov
mov
fmul
in
in
and
shl
sub
dec
insb
pop
iret
add
scas
adc
pop
sub
push
mov
in
mov
loop
jecxz
notb
cmpb
stos
icebp
push
inc
pop
inc
lcall
jmp
jbe
mov
pop
mov
pop
inc
pop
xor
or
aad
and
mov
das
ss
rcr
push
jmp
sarl
xor
mov
js
sti
xchg
ret
das
cmpsl
mov
outsl
lcall
ficompl
jg
dec
sbb
mov
addb
test
stos
lods
lock
lods
ds
xor
inc
clc
dec
dec
xlat
jle
ja
push
cmp
sub
fmull
imul
andl
loopne
fucomip
pop
mov
inc
mov
mov
pop
sti
sbb
jne
push
lods
int3
mov
xchg
cmpsb
iret
fsubrs
xchg
inc
push
sbb
lock
push
jge
pop
inc
xchg
xchg
loope
jg
jnp
icebp
xchg
inc
mov
pop
cmpsl
fnop
dec
pushf
aam
jbe
mov
adc
test
fdivl
jl
mov
inc
xor
mov
out
out
cmpl
dec
out
ficoms
leave
push
test
clc
imul
lods
add
jecxz
gs
sbb
or
mov
jmp
xchg
arpl
dec
sub
mov
push
pop
xchg
nop
outsl
dec
sub
add
cli
or
xor
sbb
iret
and
add
fdivrl
clc
jge
js
int
mov
cld
pop
cmp
pop
sbb
das
shrb
push
ja
rorl
out
daa
movaps
jg
jne
push
aam
pop
inc
cmpsl
inc
cwtl
sbb
push
mov
repz
test
xchg
lods
jle
xchg
nop
shlb
addl
orl
mov
data16
movsl
sti
enter
clc
pop
jae
in
push
ror
pop
mov
sub
popa
push
ja
cmp
out
ret
aad
sbb
cmp
and
data16
dec
in
dec
addr16
fistps
ljmp
stos
call
ret
adc
mov
ja
lret
push
pop
adc
push
in
mov
icebp
test
xor
xor
nop
sar
lods
sub
mov
and
mov
push
in
and
mov
js
es
jns
jl
aaa
mov
dec
pushf
sbb
out
pop
adc
out
int3
vmwrite
cmp
loop
push
lcall
imul
dec
add
loope
imul
dec
jns
jnp
icebp
jo
sbb
enter
filds
movsl
lea
subb
jmp
sub
stos
into
movsl
mov
int3
dec
xor
push
xchg
sub
and
test
daa
rcr
add
popf
add
inc
sbb
pop
cmp
add
push
pop
mov
jmp
out
mov
xchg
or
dec
mov
mov
cmp
nop
sti
lret
dec
or
sub
in
pop
test
sarb
mov
xchg
test
mov
adcb
ds
int3
icebp
sbb
scas
lahf
movsb
scas
or
push
leave
addl
clc
imul
fdivp
dec
cmp
bound
xor
rorl
cmpsb
mov
pop
shrl
jmp
inc
mov
cmp
mov
mov
lahf
or
jb
std
jp
dec
lods
push
pop
int
cmp
into
jbe
mov
gs
pop
dec
inc
sbb
daa
fstl
xor
pusha
mov
iret
mov
faddp
xchg
sbb
mov
jg
and
adc
sbb
into
in
or
mov
fs
mov
aad
inc
lods
inc
sub
lods
mov
jl
clc
lcall
cwtl
sarl
pop
cmp
movsl
pop
cmpsl
nop
out
ffreep
adc
adc
fs
int
push
das
adc
inc
mov
mov
test
das
lcall
es
dec
inc
ljmp
sbb
mov
cwtl
in
push
sbb
gs
adc
xor
mov
pop
sub
add
push
into
lea
xchg
fbstp
push
loop
cmpsl
mov
or
data16
aas
hlt
mov
cmc
and
ds
sahf
push
js
aas
add
mov
inc
int3
das
sbb
scas
inc
orl
mov
push
lock
pop
js
push
ret
mov
and
movsl
jo
xlat
adc
xor
loope
push
mov
push
mov
adc
aaa
ffreep
es
loop
pop
push
mov
jp
mov
push
mov
leave
clc
nop
lock
mov
imul
leave
sahf
jecxz
pop
xchg
out
cli
and
jnp
xor
into
sbb
dec
adc
xchg
add
lea
and
lds
mov
outsl
push
rolb
sbb
sub
cmp
lar
sbb
dec
xchg
and
mov
je
jle
jb
pop
xchg
cmpsb
hlt
push
mov
loopne
dec
jp
pop
push
mov
sti
mov
call
lcall
mov
call
sub
jnp
mov
or
jp
add
sbb
sbb
inc
or
dec
std
or
xchg
sbb
push
lret
daa
mov
dec
aam
xchg
mov
add
push
sbb
mov
push
ficoml
lds
or
test
mov
mov
ret
int
mov
jnp
push
enter
mulb
jne
inc
faddl
inc
cmp
movsb
clc
leave
loopne
add
imul
test
in
fdivp
pop
xorl
adcb
inc
cmp
test
pop
cmpsl
rcrb
mov
bound
gs
aas
or
cwtl
and
stos
sub
stos
shlb
xor
adc
sbb
imul
test
in
scas
adc
cmpsb
mov
mov
pushf
mov
cs
xorl
push
enter
xor
popa
mov
in
jl
add
pop
xor
ret
shrl
jle
fstl
test
and
cmc
scas
cmp
cmc
cmc
test
mov
mov
adc
movsl
ljmp
gs
dec
dec
xor
iret
or
inc
cwtl
in
cmp
fistps
sbb
cwtl
hlt
cmp
in
mov
std
and
adc
jne
ret
outsb
clc
cmp
out
mov
mov
adc
dec
movsb
mov
mov
ss
jg
test
enter
fnstenv
inc
jl
daa
ror
inc
add
xchg
mov
fidivrl
addr16
dec
into
jnp
hlt
sub
push
inc
popf
mov
pop
xchg
aam
faddl
xor
sub
cmpsb
cld
into
or
aas
xchg
mov
add
jb
mov
push
es
andb
adc
nop
jo
popa
out
mov
fs
leave
imul
pop
push
cmp
sub
xor
out
idivl
jnp
inc
jle
cmp
xchg
cmp
push
mov
out
dec
into
mov
or
ljmp
rcrl
aaa
sbb
jne
sbb
pop
cli
rorl
pop
test
mov
rcrb
pop
mov
test
lods
xor
gs
jecxz
adc
add
push
in
add
adcl
add
icebp
and
inc
ror
data16
enter
sbb
cmp
les
sub
lea
call
or
xchg
je
pop
mov
mov
loop
mov
adc
aas
aas
dec
jl
add
dec
jnp
pop
nop
shl
jl
in
repnz
test
jae
in
lcall
imul
push
lret
pushf
dec
clc
fnstsw
push
inc
mov
and
dec
incl
add
mov
pop
in
pop
and
roll
aaa
cmpsb
or
mov
jg
push
insb
xchg
xlat
xor
pop
leave
lret
popf
cmpsb
ljmp
aad
and
mov
test
mov
lock
jno
and
xchg
pop
xor
rorl
addb
jmp
add
fyl2x
xchg
test
xor
aas
enter
in
mov
ja
shll
in
and
mov
test
pop
pop
rcrl
clc
and
cli
shl
lock
cmp
jmp
mov
and
cmpb
jbe
push
popf
add
cmp
mov
dec
pop
mov
xchg
mov
xor
cmp
iret
jnp
inc
inc
pop
jbe
repnz
mov
and
movsl
outsl
mov
movsb
inc
and
add
rcrb
xor
stc
stos
hlt
sub
jbe
outsb
jle
pop
scas
fs
fmull
bound
add
flds
mov
add
stos
fmulp
mov
push
sbbl
pop
es
fsts
add
push
pop
int3
pop
or
pop
ss
push
scas
loopne
and
fadds
push
jecxz
fbld
std
in
xchg
aam
aas
or
inc
loope
mov
outsb
scas
jo
fists
mov
ds
xchg
or
mov
dec
push
rorb
mov
push
and
pop
adc
pop
rclb
repz
mov
push
cli
mov
shll
xchg
sbb
dec
repz
jns
in
je
jnp
jb
xchg
popa
inc
insl
or
xor
add
fldcw
out
cltd
sar
xchg
jns
out
adc
xchg
sub
ljmp
mov
arpl
ljmp
jne
bound
jge
fisttpl
push
cmc
dec
loopne
sub
pop
leave
sbb
mov
push
dec
xchg
mov
cmp
xchg
sbb
sar
testb
jge
and
mov
inc
daa
test
clc
jmp
sub
cmp
xchg
cmp
test
clc
lock
fdiv
int
imul
gs
pop
movsb
stc
sub
or
adc
push
jae
sbb
jno
fistpl
scas
pop
add
pushf
in
mov
inc
sbbb
popf
xor
jb
push
mov
cmpsl
rclb
notb
icebp
into
stos
and
push
or
cltd
adc
aam
and
out
iret
xlat
mov
scas
cmp
mov
inc
dec
mov
loope
cmp
popa
jo
vshufps
xor
xchg
adc
out
mov
es
mov
outsl
stos
int3
test
call
pushf
inc
mov
fnop
xchg
aam
rcrb
sar
inc
mov
push
xor
mov
movsb
inc
cmp
add
jge
xor
dec
ljmp
push
pop
mov
mov
lods
pause
xchg
push
in
adc
cmp
in
sti
or
sarb
pusha
dec
insl
arpl
xchg
adc
lret
pop
pop
mov
shll
lcall
ja
adc
adc
loopne
sbb
jmp
jno
fdivrl
andb
sahf
xchg
fdivl
inc
outsb
out
nop
cmp
mov
pop
pusha
out
mov
mov
mov
dec
dec
fisubrs
outsl
decl
push
jmp
adc
push
push
lds
or
mov
loope
jge
cli
push
dec
into
sbb
push
jmp
test
push
out
dec
lods
pop
aaa
ja
popa
stc
arpl
outsb
fbld
in
push
pop
dec
cmp
ljmp
or
fcmovbe
int3
imull
mov
pusha
mov
mov
or
fmull
mov
pop
popf
pop
add
jp
addb
inc
loope
push
adc
pop
movsb
or
jne
xor
pop
hlt
lahf
pop
or
sub
mov
cmc
sbb
add
jp
sub
jecxz
or
ret
popf
cwtl
cmc
not
pop
mov
xchg
mov
out
sub
pushl
repz
cwtl
dec
or
adc
mov
pusha
mov
clc
xor
jns
hlt
pushf
mov
xor
dec
jo
inc
pop
xor
jnp
sbb
xchg
cmpsl
jp
pusha
dec
cs
xchg
xchg
xchg
sbb
sbb
shrl
sahf
out
nop
mov
mov
stos
xorb
mov
push
mov
dec
sub
sarb
push
test
mov
lahf
sbb
lret
imul
pop
jb
movsb
outsl
lahf
push
fs
jbe
jb
inc
lret
push
push
lea
popf
call
adc
cmc
dec
insb
push
sub
repz
mov
push
mov
adcl
adc
loop
or
imul
mov
in
sbb
push
adc
cmp
lods
popf
push
enter
lea
inc
pop
dec
mov
cmpb
jb
pop
sub
nop
out
add
fmuls
pop
std
nop
add
sub
pop
test
and
stos
in
dec
xchg
into
int
ljmp
mov
pusha
nop
test
inc
push
fdivrp
lods
in
cwtl
or
fmuls
pusha
pop
test
lahf
ljmp
sbb
in
xchg
sbb
movsb
movsl
inc
pop
mov
jmp
push
jge
xchg
xor
cmp
push
aas
xchg
jns
test
imul
orb
fistpll
cmp
pushf
in
fcmovnbe
sbb
sub
leave
nop
mov
aad
fwait
in
scas
in
jo
mov
mov
ds
jp
mov
inc
les
flds
rclb
decb
inc
xchg
mov
xchg
lods
test
cmpsl
xchg
sub
ret
jbe
mov
call
repnz
fisttpll
int
nop
mov
sti
jno
dec
push
loop
ljmp
std
movsl
mov
mov
in
in
jmp
test
lock
mov
jbe
mov
and
mov
pop
bound
and
mov
jge
mov
stos
stos
inc
das
out
cmp
das
call
push
into
push
mov
sbb
out
jbe
sbb
jae
or
leave
test
ds
sbb
scas
test
xor
mov
shlb
in
dec
sub
dec
movsl
fwait
int3
push
inc
into
imul
mov
lea
mov
sbb
cld
fcoml
cmp
std
shrb
pop
mov
push
cmp
inc
xor
icebp
ds
aaa
mov
pop
mov
clc
jle
cmp
push
jmp
sbb
lahf
push
cmp
mov
loope
jmp
jge
jnp
push
lret
mov
mov
sahf
cwtl
cmc
inc
ret
int
pop
sub
pop
movl
sbb
mov
fcmovnu
mov
xchg
push
fcmovb
mov
data16
cli
or
dec
sub
xchg
xlat
and
outsl
inc
add
out
sti
pop
push
out
bound
mov
and
in
outsl
mov
jnp
mov
les
dec
mov
sbb
mov
jnp
mov
sub
rclb
xorl
fidivs
loope
sbb
xchg
jmp
inc
fistps
out
mov
mov
cs
sub
icebp
je
ret
ret
cmpsl
sbb
das
cmp
test
xor
jb
test
sub
es
pop
cld
mov
int3
xchg
sub
pop
cli
dec
test
cli
push
xchg
add
dec
popl
imul
pushf
lcall
mov
int
in
fstpl
pusha
fcmovne
adc
push
je
and
dec
pop
jmp
mov
mov
sbb
icebp
loopne
arpl
jo
sbb
jmp
mov
out
stos
orl
push
hlt
pop
adc
jge
aas
or
xchg
push
add
scas
mov
call
inc
inc
pusha
pop
cltd
cmp
inc
pop
fs
pop
or
lahf
mov
popf
lods
push
lds
sub
and
cltd
add
xlat
repnz
incl
inc
js
lret
push
push
or
xchg
adc
push
add
pop
std
dec
dec
add
mov
pop
pop
shrl
pop
inc
jns
dec
push
ret
movzbl
bound
pop
sahf
and
and
test
push
and
fbstp
movsl
lret
cli
lret
sub
jp
testb
ljmp
ss
adc
jnp
adc
movsl
scas
cltd
gs
mov
out
fmuls
rorb
cld
jbe
sub
ds
stos
lods
loope
sarl
aam
loop
aaa
rol
out
ljmp
scas
pop
daa
addr16
mov
pushf
inc
inc
xor
fistps
iret
in
dec
stc
les
push
sbb
mov
jno
cmpsl
cmp
in
and
xor
divb
jp
lods
test
insl
in
das
adc
inc
cs
lods
movsl
pop
fnstenv
pop
arpl
ljmp
mov
lods
repz
sbb
aas
jbe
cmp
div
flds
mov
loopne
call
test
sbb
lea
xor
xor
je
sarl
sbb
cli
lret
xor
js
mov
jbe
hlt
cltd
ret
loope
aaa
ds
dec
push
adc
xchg
xor
test
add
mov
mov
add
hlt
addr16
dec
mov
xchg
dec
inc
ss
pop
sub
ficoml
jmp
rol
or
or
loopne
mov
sbb
jae
jmp
mov
lcall
pop
mov
ss
sbb
pop
mov
andl
lret
out
stos
ja
inc
repz
or
adc
jl
pop
jle
ljmp
jge
inc
xorl
clc
imul
loopne
and
mov
je
loop
or
mov
mov
mov
leave
test
push
in
lea
mov
scas
outsb
pop
into
cmp
mov
push
addl
cmp
pop
push
out
push
push
sbb
fnstcw
insb
aaa
sahf
xchg
mov
mov
leave
sub
mov
or
lahf
mov
mov
sub
pop
add
dec
jmp
pop
cmpsb
cmp
ret
aam
mov
scas
mov
arpl
cmp
adc
repnz
add
cmp
stc
mov
jb
push
push
pop
adc
ds
ss
or
or
leave
and
mov
mov
in
pop
sbb
xor
adc
ja
or
adc
fwait
sbb
mov
sub
sbb
cmc
dec
push
sbb
sub
aas
int3
ja
faddp
ficoms
or
or
push
mov
fld
mov
jecxz
aad
cmp
jno
mull
or
ret
fdivrs
subb
pop
sti
imul
cld
sbb
insl
cli
and
mov
ljmp
out
fildl
in
and
sbb
adc
pop
stc
lret
lea
mov
mov
xchg
pushf
or
into
aaa
push
sbb
add
repz
pop
mov
test
jecxz
sub
or
xchg
js
add
dec
sbb
loop
pop
pop
push
dec
and
add
adc
in
lahf
mov
jmp
mov
in
data16
xor
push
mov
cmpsb
xlat
dec
clc
sub
into
dec
ret
push
shll
dec
ret
xor
dec
mov
adc
cmpsb
cltd
jb
ret
mov
rcrb
ds
out
nop
out
inc
push
push
lcall
stos
cmp
pop
pop
sub
mov
ljmp
mov
mov
xor
or
test
inc
mov
repz
mov
dec
iret
les
jge
aad
loope
inc
inc
mov
push
cmp
call
lods
pop
pop
dec
repz
idivl
add
es
cmp
push
jns
scas
push
repz
mov
lahf
cmp
push
into
dec
loope
add
cmpsl
cmove
movl
and
imul
adc
sbb
and
mov
sub
xor
sub
or
aam
jno
sbb
push
jno
xlat
pop
and
fistps
mov
xchg
std
std
cmpsl
mov
inc
fdiv
pop
addr16
int
insb
sbb
subl
or
adc
cmp
orb
dec
mov
cmp
pop
mov
outsl
call
cld
pop
or
fimull
das
push
decl
and
xchg
scas
mov
jg
push
es
shlb
jl
pusha
xchg
cmp
es
and
loopne
push
aas
cmc
fisttps
sarl
lods
dec
mov
and
mov
pop
repnz
outsb
mov
jne
lret
scas
rcrb
fnstsw
adc
leave
dec
xchg
das
cmpsb
pop
or
push
stos
dec
xchg
pop
add
xchg
pusha
sbb
dec
mov
or
inc
leave
and
icebp
sbb
xor
push
dec
inc
cld
jl
mov
mov
adc
sub
adc
dec
scas
ljmp
add
push
push
push
push
mov
outsl
or
xorb
or
enter
movsl
inc
pop
scas
and
std
mov
rcrb
adc
iret
outsb
test
and
push
mov
mov
aaa
xchg
dec
icebp
sbb
decl
jnp
das
adc
mov
shl
popl
cmp
xor
loope
aam
push
push
enter
add
out
xchg
jl
aaa
pushf
jnp
inc
bound
inc
xchg
inc
jg
imul
inc
mov
mov
xor
and
cmp
xchg
jmp
jne
inc
shrl
jns
add
sbb
mov
mov
or
aam
iret
pop
inc
fimull
in
mov
lahf
insl
xchg
dec
aaa
xchg
dec
pop
mov
push
lret
inc
cmp
sub
test
mov
mov
mov
xor
jbe
and
hlt
mov
fsubrl
inc
imul
or
xchg
sahf
pop
adc
orb
mov
and
aam
add
movsb
rcr
int3
sub
outsb
gs
je
push
push
lods
jecxz
push
out
adc
jge
mov
loopne
jle
xchg
or
les
in
cmp
mov
sahf
xchg
enter
pop
pop
push
add
sahf
push
lock
lods
xchg
adc
push
ficoml
inc
pop
pop
sub
in
xor
mov
adc
mov
mov
sub
out
notl
push
push
lods
xor
popf
jae
or
pop
push
mov
cli
or
mov
mov
dec
in
fsubs
shlb
outsl
cmc
movsb
data16
or
jns
cwtl
sbb
das
dec
imul
add
pop
mov
or
jno
dec
adc
push
fidivrs
stc
mov
int3
mov
mov
into
xchg
imul
stc
popf
xor
inc
cmovbe
fs
dec
and
cltd
inc
push
pop
lahf
idivl
jns
jnp
jb
cmp
mov
mov
mov
test
cld
cld
test
lea
push
mov
inc
loopne
insb
push
pop
jns
pop
and
sub
je
clts
mov
jle
adc
cmpsl
push
imul
movsl
hlt
mov
iret
xor
xor
fwait
movsb
xor
test
xchg
mov
add
mov
fstl
xor
fdivl
lahf
mov
stos
pop
out
adc
sti
imulb
xchg
gs
rol
jnp
sahf
push
insb
loopne
sti
dec
test
jb
inc
fdivp
in
jmp
or
movsb
int3
sbb
dec
pop
pop
and
jno
add
add
xor
cmp
cli
inc
xchg
dec
xlat
int3
push
leave
sbb
jecxz
pusha
cmp
loopne
es
xchg
ljmp
add
xor
test
pop
xor
push
push
mov
inc
or
mov
outsb
push
push
xchg
dec
call
pushf
mov
in
mov
mov
inc
mov
jp
ja
adc
xor
mov
sub
pop
dec
insl
cmp
orb
cld
mov
lea
test
sbb
xor
sbb
mov
ss
xlat
push
jecxz
sub
dec
mov
mov
adc
dec
mov
cmpsl
lret
in
lods
dec
lret
out
dec
push
outsb
mov
orl
cmp
mov
repnz
repz
je
and
fnstenv
aam
icebp
mov
popa
sub
sub
cmp
lods
jno
in
cld
cmpsb
dec
dec
sbb
jg
xor
cmp
test
dec
dec
cmpsb
push
mov
arpl
jle
mul
add
into
outsb
pusha
pushf
arpl
aad
add
jns
dec
rcrl
ljmp
scas
aaa
clc
fldcw
addl
repz
out
add
test
repnz
cwtl
sbb
sub
jns
testb
sbb
inc
hlt
mov
sbb
test
add
inc
jmp
lock
jno
dec
and
jae
int
imul
cwtl
je
loope
mov
ficoml
negl
mov
sarb
fistl
dec
adcb
mov
std
jb
jle
sub
fdivs
xor
jnp
sbb
adc
or
add
dec
mov
imul
mov
aam
test
cmp
xor
mov
and
cli
jbe
xor
fwait
push
push
testb
aam
out
int
lds
test
add
repz
push
out
pop
mov
add
mov
std
stc
mov
xor
and
call
push
adc
ljmp
push
or
jmp
pushf
mov
adc
mov
push
movsb
fsubrl
aam
pop
mov
hlt
loope
fmull
outsb
outsb
insl
and
negb
sub
call
xor
push
pop
scas
push
dec
nop
xchg
mov
leave
loopne
js
loope
add
insl
notl
cmp
jo
sub
ss
out
pop
mov
mov
mov
cmp
out
sti
sub
push
std
clc
lcall
xor
iret
lods
xchg
cld
mov
addl
inc
fs
ljmp
and
test
add
arpl
fldt
std
cs
popf
lock
test
push
pop
lcall
scas
lods
fadds
test
jle
sub
sub
jnp
dec
mov
sbb
mov
decl
cmp
sti
mov
ret
fidivrl
jo
mov
hlt
mov
jb
sub
pop
mov
std
fcoms
cwtl
lock
aad
das
push
pop
test
sbb
test
lret
pushf
mov
or
enter
push
pop
cs
push
xchg
test
outsb
xor
push
int3
dec
or
je
fimuls
jmp
lods
xor
lahf
addb
fisttpll
jns
movsb
inc
test
test
hlt
into
cwtl
in
and
imul
test
mov
rcll
popa
mov
add
pop
or
pop
mov
jb
mov
bound
andb
pop
adc
fldt
sbb
pop
subb
fdivrl
addr16
xchg
jmp
mov
xchg
add
sbb
dec
mov
lods
pop
fs
jns
test
mull
addr16
movq
fcompl
fwait
xor
or
jno
rep
push
pop
mov
sub
out
dec
enter
or
hlt
pop
or
adc
jae
fstpt
xchg
fs
lahf
rcrb
sbb
push
jns
mov
jno
shlb
sbb
push
jecxz
call
rclb
stos
leave
scas
nop
adc
sbb
sub
push
idivl
jbe
test
sbb
inc
in
adc
addb
cmp
int
mov
cmp
enter
std
inc
fildll
pop
daa
sbb
jmp
mov
dec
sub
cmc
or
into
std
lret
push
xchg
gs
iret
and
adc
cltd
sub
add
mov
sub
movsb
sub
test
dec
lods
xlat
xchg
and
mov
ret
outsb
mov
xor
mov
pushl
sub
or
push
fdivrs
mov
scas
lds
sub
hlt
pop
ret
cmp
lods
jg
pushf
mov
cwtl
std
or
repz
out
jecxz
sub
xor
mov
and
inc
testl
shrl
fldenv
jbe
cmpsb
inc
xor
cmp
jae
mul
fcoml
pop
mov
popa
pop
xchg
xlat
inc
shlb
cmpl
cmpsl
pop
mov
loope
mov
or
mov
cmp
aad
pop
push
mov
cmp
les
aam
xchg
push
cmp
push
jp
push
or
fs
in
ljmp
jno
lods
bnd
arpl
out
loope
sahf
and
and
jb
fucomi
sub
inc
shll
repz
jg
arpl
into
adc
cmpsl
std
imul
add
daa
cmc
sbb
inc
outsb
lret
jno
call
cmpsl
daa
ljmp
adc
push
pusha
test
add
push
movb
and
and
xorl
data16
push
sbb
into
cmp
sti
arpl
cmp
sub
pop
rcrb
inc
dec
aad
bnd
mov
pop
add
movsb
xorl
movb
push
inc
mov
scas
push
mov
push
out
mov
rcrl
add
xor
push
std
movsb
ret
test
push
gs
lds
andl
lret
mov
clc
ficompl
adc
adc
xchg
dec
pop
xchg
ds
int3
sarb
add
movsl
pop
cs
repz
mov
xor
xor
push
add
cmpb
inc
repnz
add
lods
mov
sub
mov
mov
xchg
inc
mov
inc
test
jl
lock
hlt
push
cmpb
mov
cmp
in
out
push
push
jl
sbb
inc
mov
lods
jp
jmp
popa
sbb
jb
sbb
aad
sub
add
pop
pusha
test
pop
mov
sar
sub
icebp
cwtl
test
rcl
enter
shrb
jg
cmp
pop
xor
sub
inc
mov
jne
xchg
sahf
pop
loop
mov
in
mov
hlt
pop
jle
iret
insb
jl
roll
rclb
xchg
cmpl
sub
cmp
adc
jno
pusha
pop
jle
mov
jne
mov
xchg
push
rorb
jle
repz
das
jp
repz
push
pop
mov
cmpsl
fcomps
cmp
dec
push
aad
inc
movsb
sub
jb
scas
inc
mov
pop
mov
mov
imul
and
cli
push
lea
dec
pop
pop
mov
shlb
mov
cltd
dec
rcrb
push
cmp
bswap
mov
gs
adc
incl
outsl
jp
fwait
mov
add
xchg
fcoml
std
scas
clc
and
orl
icebp
mov
bound
test
iret
or
jae
imul
lret
aas
pop
cs
sbb
push
insl
add
pop
shrb
pusha
rorb
test
divb
push
adc
fisttps
xchg
in
fistpll
jl
pop
je
test
push
jmp
dec
jb
insl
jb
push
fs
pop
pop
pop
in
mov
inc
aam
dec
mov
lcall
out
imul
jmp
mov
mov
xabort
aaa
fsts
clc
es
dec
mov
jns
push
push
lahf
xor
or
mov
inc
orl
mov
pop
repnz
push
movsb
mov
push
aad
mov
cwtd
cmp
adc
mov
test
jg
in
lcall
mov
sbb
push
or
sbb
mov
mov
and
xor
fcomip
push
ret
jp
pop
pop
push
jecxz
xchg
ds
movsb
xchg
sub
daa
loopne
imul
fcomps
rclb
jl
mov
testl
popa
imul
in
loope
dec
jae
push
stos
jo
jae
jne
jecxz
imul
testl
mov
adc
adc
iret
cld
inc
iret
sub
hlt
mov
fsubr
xchg
int3
add
stos
sub
and
mov
xchg
cmpsl
mov
sbb
push
loope
pop
daa
jle
rclb
idivb
les
pop
mov
repz
rorb
aaa
mov
mulb
add
pop
mov
pop
jb
out
mov
jecxz
jle
pop
inc
data16
ljmp
sti
push
out
mov
pop
jecxz
fisubrs
das
push
ja
sahf
sub
aaa
xchg
or
mov
data16
les
insb
and
dec
inc
jle
ret
or
data16
mov
xor
fprem1
ror
fimull
clc
insb
outsb
fneni(8087
jns
lock
adc
push
mov
jno
mov
xor
mov
popf
inc
xor
pop
and
rolb
mov
iret
or
stos
orb
subb
sbb
pop
push
imul
mov
mov
rcr
push
rclb
dec
jmp
xor
sbb
enter
jb
dec
mov
shll
cmc
shlb
cmpsb
movsl
int
cmp
xchg
cmp
ret
mov
pop
mov
sbb
push
sti
inc
fisttpl
xchg
xchg
fldcw
test
testl
or
jne
and
adc
rcl
rcl
jbe
rcrl
fisubrs
cmc
mov
in
xchg
mov
or
dec
and
xchg
mov
dec
lds
pop
lahf
push
jnp
ret
jo
insl
jb
ret
outsl
jo
repnz
stos
or
dec
jae
cmp
cmp
jnp
insl
push
push
ds
dec
push
fldenv
ljmp
leave
mulb
push
pushf
loopne
add
mov
pop
mov
mov
mov
jp
add
pop
shlb
xchg
push
fsub
mov
pop
xchg
or
fsts
jl
out
icebp
jno
mov
mov
fmuls
push
shll
dec
lock
ret
shrb
pop
xchg
insl
xchg
add
push
or
cmc
pop
adc
inc
aad
push
jecxz
stc
fidivl
outsb
ss
lods
scas
lret
cli
lock
dec
sbb
clc
mov
loop
aas
adc
sbb
arpl
dec
cmp
xchg
aas
adcl
mov
inc
cmpsb
xorb
sbb
mov
pop
add
sahf
add
hlt
mov
pop
insb
int3
mov
stos
add
push
mov
rclb
or
inc
jmp
in
int3
mov
xor
dec
push
add
xchg
stos
dec
mov
mov
push
lcall
mov
sbb
adc
mov
jae
pop
mov
aad
push
nop
xchg
lret
xchg
lds
lea
pop
scas
xchg
popf
xchg
movsl
adcl
xor
fisubl
pop
xor
pop
push
loope
cmpsl
pop
xor
loop
loope
sub
leave
sti
imull
mov
xchg
sub
insb
dec
shrb
and
sahf
outsb
xchg
mov
das
pop
lcall
and
xor
movsb
xchg
scas
fldl
add
sarb
mov
test
ss
jo
mov
lret
popf
mov
xor
mov
ljmp
mov
das
mov
push
add
add
or
jnp
push
fildll
enter
mov
ljmp
adc
cwtl
push
push
push
pop
cltd
shrl
shl
shl
in
outsl
push
cmp
sarb
inc
pop
xor
mov
or
ret
out
jnp
leave
aad
push
or
roll
scas
xchg
cli
mov
fstpt
scas
mov
icebp
out
mov
cmpsl
mov
insb
xchg
lods
fisubrs
xor
popa
mov
in
popa
mov
or
in
fldcw
xchg
dec
cmp
aas
cmp
jae
dec
hlt
out
push
filds
push
xchg
fdivs
adc
xor
lahf
push
repnz
je
and
add
push
push
mov
mov
push
dec
and
aaa
insb
dec
sar
mulb
xchg
pop
aad
jge
pop
cli
stc
loope
rorl
or
mov
xchg
pop
or
mov
jecxz
fldenv
jo
jae
das
dec
dec
into
cld
pop
add
popf
ficomps
or
lds
in
push
push
xor
mov
negb
mov
cmp
out
push
imul
inc
cmp
cmpsl
or
sbb
dec
or
cld
in
test
mov
pop
jmp
pop
hlt
xchg
clc
adc
push
ret
xchg
pop
xorl
aas
roll
dec
sub
scas
xchg
adc
adc
or
jae
inc
mov
fisubs
dec
and
push
xor
data16
inc
out
jo
fdivr
daa
ret
imul
cmc
xchg
push
lds
sbb
pusha
vandnps
push
lock
adc
sub
cmp
sti
imul
in
popa
jl
push
add
dec
add
push
pop
cmpsl
xor
pop
or
adc
add
mov
and
xchg
out
addr16
out
xchg
jle
cmp
sub
pushf
mov
and
aad
dec
rcl
dec
orb
push
sti
lods
pushl
mov
mov
jo
in
add
rol
fucomip
popa
ficoms
decl
xor
add
pop
or
lret
mov
and
out
push
vunpckhpd
jo
loopne
add
mov
adc
fstl
push
cmp
push
in
mov
out
testl
xor
adc
xor
mov
fsubrs
xor
idivb
fcoms
iret
push
sub
aaa
jmp
xchg
arpl
icebp
inc
loope
pusha
cmpsb
xor
mov
data16
pop
dec
hlt
jmp
push
mov
cmp
ret
mov
add
sub
xchg
cmpl
mov
xor
mov
and
into
dec
test
lret
int
leave
sub
cmpsl
movsb
je
loope
cmp
call
pop
sub
sub
out
aaa
xchg
pop
idivl
inc
sub
sbb
inc
jecxz
sbb
xor
add
in
adc
imul
and
add
ds
xor
fwait
iret
cmp
adc
mov
lock
fs
lock
sub
arpl
test
mov
fsts
push
je
ja
lds
repnz
push
adc
push
xor
xchg
mov
ja
jmp
mov
pusha
adc
shl
cmc
sbb
mov
cmpsl
pusha
shrb
jne
sub
pop
mov
cmpsb
mov
or
ss
test
inc
mov
jnp
xchg
push
leave
loopne
lods
push
push
ss
mov
sbb
cs
push
mov
outsl
dec
and
push
ja
fbstp
adc
xor
ret
xchg
hlt
sahf
test
mov
mov
pop
loope
inc
jbe
dec
adc
add
rcrl
fists
into
push
out
pop
jmp
inc
cmp
adc
dec
and
gs
out
mov
jae
cmp
sbb
shl
test
mov
and
pop
mov
rcr
mov
outsl
dec
lds
add
lcall
cmp
sub
push
stos
adc
or
rclb
testl
repnz
imul
and
iret
bound
inc
arpl
xchg
imul
in
mov
cltd
scas
jmp
fldpi
sub
jp
shlb
lods
je
repz
lock
push
or
test
sub
mov
das
sbb
dec
cmp
sub
hlt
enter
pop
enter
inc
pop
aam
outsl
sbbl
push
mov
cmp
inc
xchg
icebp
mov
sbbl
sahf
daa
or
test
cltd
pop
jmp
je
adc
aaa
push
inc
pusha
add
fidivs
ds
mov
jecxz
sbb
pop
and
inc
adc
repnz
cmp
inc
or
or
mov
jb
xor
inc
arpl
xchg
imul
popf
mov
xchg
xor
mov
out
out
and
jnp
ficoml
ja
or
call
dec
mov
inc
sbb
cs
and
and
sub
inc
and
sbb
mov
xchg
inc
fs
or
mov
cmpsl
xchg
push
inc
pop
and
or
sub
rclb
arpl
jmp
shll
in
scas
shll
cld
mov
dec
dec
mov
inc
popa
call
dec
add
fidivl
cmp
push
bound
jno
and
sub
repz
cli
pop
or
add
into
push
push
int
scas
out
outsl
es
mov
setns
das
jo
jnp
cld
rcrl
lahf
push
test
pusha
inc
shl
out
sub
push
enter
push
add
stos
cld
mov
pusha
adc
sahf
dec
pop
push
cmpsb
mov
fwait
pop
xor
mov
jecxz
jmp
lret
and
pop
inc
inc
jno
aam
shl
fistps
cwtl
mov
std
add
pop
pop
push
pop
jns
cltd
sti
popa
adc
leave
add
cli
in
jmp
xor
pop
scas
ficoms
subl
fwait
movsl
stos
pushf
pop
aas
mov
lcall
sarl
adc
insl
mov
fsts
jmp
mov
ljmp
call
jne
test
stos
mov
je
or
fldcw
and
sbb
jb
cwtl
add
inc
lahf
and
les
popf
and
jmp
sub
addr16
shrl
push
and
sbb
adc
jb
and
and
movsl
fcomps
fdivrs
fcoms
fnstsw
add
dec
sbb
fcmove
arpl
stos
in
repnz
loopne
mov
and
adc
hlt
mov
sub
dec
mov
adcb
inc
push
out
aad
pusha
mov
mov
cli
ss
jb
mov
mov
in
sbb
fs
mov
xor
inc
push
inc
jle
lea
loope
neg
or
repz
cmc
bound
popa
pop
xlat
es
push
rorl
ret
pop
xchg
out
add
mov
xchg
xchg
mov
jg
mov
dec
cmpsb
jmp
or
jmp
sub
mov
in
mov
and
sub
aam
push
dec
arpl
in
xchg
rcr
test
mov
add
xor
sub
mov
lds
and
addl
inc
or
je
std
inc
inc
aad
fcmovnb
sbb
pop
out
cmp
adc
fldt
add
insl
repnz
testl
out
test
lcall
push
push
pop
mov
andb
aaa
pop
and
lods
test
mov
cmp
mov
add
fldcw
mov
push
push
push
js
cmpl
push
les
inc
push
inc
subb
mov
aaa
fldcw
xor
xchg
sbb
rcll
mov
jns
inc
jae
xchg
pop
setb
push
pop
lret
scas
in
arpl
and
or
fs
xor
jnp
leave
or
popa
pop
sub
add
cltd
cs
in
int
inc
loopne
jnp
or
pop
mov
out
mov
mov
shll
push
lods
je
push
jb
lahf
daa
loop
jae
jmp
data16
jmp
fstps
pop
aaa
ljmp
test
std
sti
push
sbb
cs
faddl
int3
jle
lock
cmp
adc
lahf
mov
push
mov
movsb
jp
inc
or
stos
mov
out
cld
jo
test
fistps
dec
xor
sbb
xlat
call
fs
pop
push
fcoml
pop
add
dec
sbb
push
inc
test
test
mov
mov
mov
rorb
ficomps
pop
mov
nop
mov
fcoml
call
jbe
fidivs
xchg
subl
cli
jecxz
or
sahf
mov
imul
and
dec
xchg
in
flds
fwait
jmp
lea
test
gs
loope
movsb
movsb
out
out
dec
stc
outsl
in
sub
jge
xor
repz
push
jmp
enter
sub
cli
andb
insl
jno
les
insb
sub
xchg
pop
mov
inc
repnz
mov
push
mov
arpl
pop
fcoms
jae
arpl
push
cmc
pop
shll
inc
in
xchg
dec
cmpl
cmp
aam
push
repnz
pop
push
ds
inc
mov
sub
stc
dec
push
in
mov
aaa
psubd
push
xor
das
pop
and
inc
nop
jne
data16
dec
mov
movsb
sbb
inc
xor
popaw
and
and
hlt
xchg
xor
xchg
xchg
sub
into
push
xchg
lods
or
and
jge
fmulp
enter
or
ja
xor
mov
sti
test
or
stos
push
fwait
aad
mov
cs
mov
dec
and
mov
jo
add
sti
sbb
ljmp
fcomip
lods
mov
xchg
clc
adc
hlt
sbb
in
loope
mov
adc
mov
fcoml
pop
mov
into
fsincos
mov
inc
sarl
and
jg
in
iret
leave
adc
mov
push
rcrb
mov
stos
mov
adc
addr16
pop
add
sbb
cmpsl
scas
pop
loop
push
sub
cld
cmpl
dec
dec
xor
ret
loope
pop
fadd
test
jb
inc
scas
jecxz
test
mov
jl
iret
jg
mov
inc
jge
imul
popa
lret
test
xor
fstps
mov
push
mov
arpl
mov
mov
push
js
jnp
sbb
inc
xchg
or
stos
test
loope
pusha
imulb
lret
and
and
clc
in
in
mov
in
or
cmp
leave
ja
leave
rcrl
scas
cs
lcall
iret
stos
xor
mov
ret
pop
into
loopne
pop
inc
or
lock
adc
inc
out
cltd
in
cwtl
rclb
fdivrs
fs
xor
into
in
mov
push
xchg
ror
mov
xor
insb
xchg
xchg
mov
adc
mov
outsb
lret
sbb
ret
xchg
lret
push
xchg
xchg
mov
scas
rolb
sbb
lret
je
cs
das
fisubs
inc
push
mov
xchg
mov
push
mov
inc
mov
cmc
sub
scas
in
movsb
and
inc
and
jecxz
loopne
add
cwtl
lfs
push
pusha
push
mov
dec
mov
outsl
pop
xchg
lcall
mov
or
bound
mov
pushl
lds
pushf
out
in
adc
int
fld
sti
and
sub
inc
jnp
arpl
mov
hlt
ficoms
adc
in
fs
psubb
gs
mov
add
mov
mov
push
sbb
xor
pop
sbb
jge
lock
iret
out
insb
mov
sbb
test
push
mov
lea
add
out
movb
ret
pop
or
xor
dec
rorl
loopne
add
pushf
mov
mov
push
insb
insl
add
add
imul
cmpsl
gs
clc
out
push
sbb
inc
imul
cltd
mov
mov
mov
ljmp
add
fdivs
dec
inc
push
push
int
arpl
add
aas
fimull
push
es
sub
jmp
jb
mov
pop
mov
adc
jmp
movsb
inc
data16
in
and
mov
add
cmpsb
mov
in
dec
adc
jne
out
mov
push
sbb
shrb
ja
cwtl
or
aas
fmulp
xchg
mov
outsb
xchg
insl
repnz
rorb
gs
pop
adc
cmpsb
je
in
and
stos
test
int3
xchg
mov
scas
pop
gs
in
int
sbb
and
push
movsl
mov
ljmp
and
lods
fstpl
sub
pop
jb
stc
test
pop
push
mov
int
xor
call
inc
stos
test
inc
add
das
add
adc
test
mov
mov
arpl
js
inc
pop
es
les
mov
inc
mov
je
test
mov
jle
mov
mov
and
and
mov
dec
dec
adc
in
data16
inc
jecxz
mov
int3
popf
mov
aam
test
aaa
pop
sbb
test
jae
dec
orb
xchg
inc
nop
push
xchg
flds
mov
out
repz
xchg
sbb
xor
pop
push
lahf
xchg
push
jp
xchg
mov
jg
push
loope
mov
adc
cmp
das
aaa
dec
lods
mov
and
aas
push
sarb
jg
pop
jp
lcall
movsl
addb
xor
outsb
pop
add
cmpsl
adc
scas
das
into
iret
sbb
xchg
add
mov
cmp
cmpsl
pop
sub
iret
test
fcomps
in
lds
mov
hlt
pop
fsub
push
cmp
jle
out
ljmp
push
and
addl
sbb
mov
push
sbb
outsl
pop
push
popf
fcomps
addr16
das
cmp
xor
sbb
rcrl
fcomps
cli
jl
and
data16
adc
pushf
or
add
std
xor
hlt
inc
test
jne
adc
addl
enter
insl
mov
mov
ja
mov
xchg
mov
rcrl
pusha
jmp
push
add
push
dec
sbb
insl
les
jg
sbb
jge
shl
mov
or
test
dec
cmp
cmp
popf
cmp
ret
mov
sub
dec
mov
cmp
imulb
xor
out
sub
and
ret
xchg
add
cmpsb
add
push
imul
dec
ret
test
xor
lret
loope
jmp
rcrl
iret
mov
jno
mov
xor
xchg
test
xchg
mov
pop
jp
sub
pop
ds
sub
xchg
mov
jno
inc
sub
mov
add
push
in
repnz
inc
test
lods
ljmp
in
jmp
cld
orb
dec
push
inc
xchg
push
out
jmp
push
cmp
mov
add
mov
dec
iret
addl
jns
add
sbb
outsb
jns
mov
or
and
cld
add
jne
mov
jmp
mov
cmp
jp
push
dec
cmp
lds
xchg
cmp
add
fistpll
pop
sbb
popf
in
jp
dec
push
fists
cmc
lret
inc
mov
xchg
and
inc
jno
test
jp
cmp
aad
xor
daa
in
lahf
ja
scas
std
int3
repnz
add
out
jo
xor
push
js
daa
scas
dec
test
aad
insl
pop
mov
outsl
add
add
call
xor
into
jp
and
aam
pushf
cli
icebp
add
adcl
mov
jb
frstor
pop
in
mov
repz
xchg
int3
inc
repz
cltd
icebp
leave
xchg
fcompl
fsubrp
pop
mov
or
jmp
dec
mov
and
sarb
cmp
pop
int3
in
sbb
cmp
or
lcall
push
or
arpl
sbb
lret
jno
xchg
pop
popf
dec
xchg
or
daa
adc
inc
fcomp
pop
int3
dec
stos
das
pop
paddq
stos
scas
add
fcom
sti
cmp
jo
mov
inc
mov
fs
into
add
sarb
dec
fwait
cmp
aam
dec
leave
call
mov
aaa
gs
cmp
outsl
stos
in
xchg
dec
movq
and
add
mov
addb
push
aas
or
rorb
mov
and
out
pusha
repnz
inc
push
out
dec
add
lcall
repnz
and
mov
or
dec
mov
stc
int
and
ret
loop
dec
xchg
ds
xchg
push
xor
addl
daa
xchg
out
lret
and
cmp
mov
scas
adc
push
push
mov
cmp
sarb
mov
mov
inc
adc
or
popa
sti
lods
lods
mov
aam
jecxz
mov
mov
xorb
scas
fcom
jl
add
lahf
out
movsl
sub
sub
cmp
fsub
lahf
popf
lret
daa
jecxz
rorl
push
repnz
test
sbb
cmpsl
pop
jo
subl
cld
adc
imul
mov
sbb
cmp
mov
pusha
mulb
ret
sbb
dec
pop
lds
sub
rolb
push
cli
mov
xchg
sti
jmp
push
and
jno
je
dec
into
sahf
call
inc
in
into
out
jbe
ds
in
sbb
jg
push
out
rorl
sar
push
lods
out
xor
ret
push
int3
stc
pop
loopne
enter
imulb
flds
xor
inc
xor
jnp
jo
sbb
loop
rcrb
and
or
lea
jo
outsb
jp
pop
adc
sub
sbb
cwtl
fisttps
out
push
sbb
fnstsw
enter
scas
cmpsl
xchg
pop
int
or
int3
xchg
mov
mov
push
add
shr
dec
xor
into
cmp
or
xchg
fwait
adc
cli
gs
mov
data16
jle
mov
xor
inc
lahf
dec
lret
call
push
daa
mov
bound
sti
dec
adc
push
xor
dec
adc
scas
aaa
and
pop
jo
push
fdivrs
pushf
aam
rolb
sbb
mov
push
xlat
mov
or
dec
ljmp
adc
jno
inc
pushf
std
fcmovbe
pop
cld
jecxz
and
add
test
ljmp
jns
jnp
dec
cmp
lahf
xchg
push
adc
movsb
pusha
jb
leave
dec
nop
cs
or
push
xchg
cmp
mov
sub
incb
push
data16
scas
popa
mov
and
cs
inc
addr16
add
cltd
stc
mov
fisttpl
les
push
out
sbb
iret
gs
imull
jb
xor
mov
hlt
cli
push
call
pop
push
fbstp
add
lar
xor
sub
xor
cmp
movsb
addr16
loopne
adc
cmp
xchg
push
fcomp
int3
jnp
add
push
push
outsb
inc
add
orl
add
mov
push
pop
and
mov
sbb
push
mov
inc
ffree
ret
bound
in
and
test
xchg
xlat
test
cld
adc
outsl
mov
jecxz
cwtl
scas
icebp
mov
or
xchg
mov
or
idivl
push
cmp
mov
xchg
mov
orb
or
pop
jle
testl
sbb
xor
arpl
fadds
mov
sahf
pop
xchg
rolb
push
dec
data16
dec
add
push
mov
stos
sti
xor
mov
sti
mov
jae
ja
cld
out
stc
cmpsl
push
inc
add
sbb
mov
inc
xchg
mov
out
stos
pop
in
pop
in
mov
push
ljmp
lret
loope
clc
lods
cmp
stos
outsl
sub
aas
int3
xlat
frstor
sbb
mov
test
and
and
movsl
mov
sbb
nop
jns
cmp
add
add
xchg
inc
jns
sti
jne
imul
mov
ljmp
jae
adc
and
mov
clc
pop
mov
or
xchg
sub
ficompl
mov
sti
ffree
mov
daa
imulb
insb
push
mov
jp
mov
shrb
sub
scas
push
sub
std
mov
sbb
jns
add
mov
out
xchg
in
mov
xchg
push
inc
inc
and
mov
lret
mov
movsb
out
rorb
ret
pop
repnz
inc
mov
int3
insb
hlt
movsb
cmpb
lock
lahf
pop
call
xchg
dec
add
loop
fs
inc
pop
imul
pop
incb
mov
sbb
inc
lods
and
loopne
add
std
sbb
enter
mov
pop
or
addr16
pusha
loope
in
and
or
sbb
jmp
mov
unpckhps
jae
leave
adc
ret
add
test
inc
imull
adc
stos
jns
rorb
ljmp
lret
pop
js
out
aam
clc
es
push
ja
call
jae
dec
aam
insb
sub
in
in
insl
jo
movsl
xchg
push
dec
repz
push
mov
jmp
add
roll
dec
xchg
sub
cs
arpl
and
mov
add
inc
mov
mov
bound
fxch
cmp
push
sbb
mov
xchg
jb
fistpll
in
aas
scas
pop
jge
outsb
iret
into
ror
mov
mov
hlt
jmp
shrb
mov
lcall
add
fisttpl
iret
ljmp
aam
xchg
outsb
addb
test
jl
fcmovb
push
cltd
pop
int3
sub
xor
adc
call
movsl
roll
inc
and
shlb
push
mov
add
outsl
repnz
leave
ljmp
xchg
mov
fisubl
leave
ljmp
stc
cmpsb
adc
push
stc
insb
dec
xor
adc
cmpsb
xchg
adc
leave
mov
test
jp
pop
jp
inc
in
imul
in
lret
xchg
std
popf
bound
pop
jb
pushf
test
xor
jle
ljmp
in
sub
mov
or
fdivrl
adc
mov
imul
inc
scas
xor
jae
outsb
repnz
inc
sbb
dec
fidivrs
jmp
inc
call
mov
scas
scas
dec
test
xchg
das
and
adc
mov
add
adc
in
stos
and
mov
cmpb
stc
fstpt
jb
test
push
lods
pop
cltd
xorb
lret
xorb
or
sbb
or
pop
imul
cmp
cmpsb
sahf
lret
int
or
mov
push
xor
mov
push
pushf
xchg
jg
jns
pop
push
mov
sbb
ss
test
test
push
mov
fldcw
or
pop
addr16
xchg
pop
aam
jnp
sahf
sbb
lret
idiv
or
lahf
mov
xchg
mov
jo
iret
and
mov
outsb
repz
enter
xchg
test
call
add
popf
aad
inc
gs
scas
pop
mov
adc
inc
pop
int
in
rorb
adc
popfw
mov
mov
xchg
aam
clc
add
ljmp
pop
iretw
fdiv
xchg
addb
inc
cs
cmpsb
fildl
mov
and
inc
imul
jg
or
lahf
decb
aas
pop
lcall
pushf
hlt
sahf
mov
out
jecxz
pop
bound
adc
test
jmp
cwtl
jmp
movsl
addr16
xor
imul
call
xor
dec
mov
fdivrp
imul
jae
push
push
daa
mov
outsl
mov
jno
lock
fabs
out
sub
repz
xchg
popa
pushw
xchg
imul
cli
outsl
ficompl
fcmovbe
fcmovu
sti
or
mov
fwait
andl
adc
push
dec
inc
aam
pop
jnp
fwait
adc
popf
add
pusha
imul
or
or
stos
int
cmp
out
jge
mov
cld
lcall
adc
leave
mov
sub
mov
xchg
inc
push
lods
inc
fists
adc
and
daa
sbbl
dec
mov
lret
mov
add
ds
das
iret
push
scas
mov
lret
lret
and
sbb
adc
pop
mov
fidivrs
scas
xchg
lcall
jge
sbb
cwtl
sbb
mov
xchg
cmp
dec
into
push
mov
jbe
fsubs
ds
xchg
ret
in
mov
dec
scas
push
mov
sti
sti
loop
add
cli
xor
imulb
push
fxch
add
jg
inc
mov
daa
adc
cmp
jp
scas
clc
jp
pop
push
mov
lods
clc
mov
push
fdivrp
mov
sub
and
out
repnz
loopne
sub
subl
arpl
sub
ljmp
adc
pusha
or
loopne
mov
popa
xchg
dec
inc
test
das
jge
cmp
mov
hlt
inc
sub
and
add
push
jo
jb,pn
sbb
jns
xlat
lea
les
sti
mov
stos
add
push
mov
in
popf
mov
push
scas
inc
icebp
leave
imul
std
xchg
push
sub
mov
loop
jne
xchg
and
ljmp
mull
dec
mov
lds
pop
xchg
add
das
mov
cmp
mov
xlat
add
add
test
inc
sub
cmpsb
shlb
loope
gs
jp
aam
test
stos
mov
pop
pop
mov
sbb
jb
mov
nop
popf
xchg
xor
test
loopne
in
or
repz
jg
cmp
popa
xor
hlt
loop
mov
fstp
cmp
lds
data16
adc
pop
xor
push
cmc
out
stos
adc
xlat
jp
out
outsl
and
xchg
mov
push
inc
aam
cmp
stc
cmp
cmpsb
jnp
test
jle
repz
gs
lea
xchg
ss
ret
add
imul
mov
or
xor
popf
lock
xor
iret
out
inc
jnp
pop
call
btc
cli
call
in
lahf
or
mov
lods
jge
shr
xlat
jmp
fbstp
pusha
scas
orl
dec
btr
ret
mov
xchg
sub
in
sub
jb
inc
push
sbb
add
inc
loopne
xchg
sub
out
mov
test
inc
xor
push
push
and
out
pop
jge
mov
mov
mov
jbe
cmp
lds
push
push
pop
pop
call
incb
lea
rcrl
sub
mov
insl
and
add
mov
outsl
call
jno
icebp
mov
pushf
cmc
dec
ja
and
jmp
lret
mov
adc
bnd
gs
push
jnp
lods
icebp
jne
shlb
fldenv
adc
mov
cs
dec
fst
aas
mov
sub
add
push
data16
sub
sbb
or
clc
push
xor
and
jns
cwtl
cmp
push
arpl
pushf
and
mov
or
inc
lret
out
iret
fdivr
out
inc
stc
jge
jne
je
scas
mov
addr16
inc
idivb
lds
inc
dec
sub
scas
add
sbb
sub
mov
sbb
jnp
sub
loope
rorb
loopne
jae
sub
mov
add
xchg
cmp
mov
imul
inc
fisubs
mov
aas
test
add
test
mov
out
ret
fsubs
cmpsb
mov
fistl
cmovo
mov
cmp
pop
xchg
mov
push
out
inc
pop
insl
iret
mov
and
lahf
enter
sbb
add
rclb
into
scas
sub
jae
mov
dec
mov
out
and
clc
push
jg
test
out
mov
es
push
xlat
aam
cmp
fxch
sbb
outsb
sub
fsubr
popl
shrl
jecxz
mov
pushf
pop
push
sbb
xchg
lret
dec
mov
fbstp
or
or
bound
xlat
push
test
ljmp
mov
bound
scas
imul
jmp
inc
sbb
gs
sub
or
cli
mov
das
scas
lods
lcall
sbb
cs
mov
out
lahf
cmp
mov
repnz
in
xor
push
mov
or
rcl
out
push
xchg
mov
es
enter
push
cmp
mov
aam
and
pop
adc
sbb
pop
sarb
out
and
pop
xor
test
push
popa
xor
loop
mov
mov
dec
jg
xchg
push
daa
pushf
cli
jo
mov
xchg
aad
adc
and
enter
xor
sbb
push
inc
mov
movsl
std
xchg
sbb
fsub
pop
imull
inc
rclb
add
fwait
and
dec
sbb
daa
ds
hlt
es
push
and
enter
sbb
jp
dec
cli
dec
pop
mov
cmp
cmp
stos
enter
test
xor
icebp
cli
mov
jg
pop
bnd
std
sub
dec
xlat
push
sbb
cmp
add
add
in
inc
repnz
xchg
movsl
xlat
xchg
push
lock
mov
dec
int
mov
test
xor
imul
adc
cmp
xor
mov
movsl
and
decl
sbb
out
test
xor
roll
hlt
cli
cmp
mov
loopne
push
rolb
pop
mov
mov
out
adc
dec
aas
mov
dec
ss
sahf
push
sbb
mul
inc
and
fsubs
enter
inc
cli
fdivrl
fsts
mov
sub
out
int
push
adc
les
int
es
jns
aas
mov
add
ja
push
sbb
dec
sbb
jae
into
addr16
lods
in
mov
mov
jo
mov
sbb
addl
ret
pop
fisubrs
fisttps
mov
mov
test
jle
enter
std
repnz
sub
dec
cmp
repnz
pop
mov
gs
jge
or
cmp
dec
movsb
mov
sbb
pop
dec
mov
sub
add
xlat
cmpsb
decl
fdiv
adc
sub
mov
or
sub
inc
jg
push
dec
addr16
or
push
cmp
popf
arpl
int3
mov
data16
aas
insl
ret
push
xlat
jae
dec
movsl
push
sub
fcoml
and
div
fucomip
test
add
adc
sub
push
lret
into
xchg
mov
ret
test
or
stos
mov
sub
xor
arpl
pop
jecxz
and
and
fisubl
aam
mov
mov
dec
dec
xchg
push
xchg
sbb
mov
fwait
or
clc
repnz
jne
adc
dec
add
in
sub
and
push
xchg
fnstenv
mov
imull
fisttpll
pop
scas
fldcw
pop
cmp
add
sub
jp
xor
jno
xchg
push
imul
test
inc
out
addr16
stos
rcrl
xorl
pop
test
test
subl
inc
mov
sbb
jl
shr
cmpsb
xchg
mov
int
and
xchg
jg
cmp
push
daa
mov
cmpsl
mov
pop
stos
jb
jmp
dec
push
add
inc
call
imul
aad
mov
sbb
xor
mov
and
lea
push
add
pop
aad
int
xchg
int
mov
imul
ljmp
mov
sbb
fisttpll
mov
inc
and
sbb
sub
push
jge
ja
push
jae
loop
mov
pop
sbb
mov
dec
rol
and
mov
jg
adc
mov
or
add
xor
mov
push
push
lock
outsb
xor
mov
outsb
fisubs
lods
dec
inc
pop
lds
or
lret
cld
pop
jb
insb
inc
or
repnz
adc
mov
mov
inc
dec
mov
clc
lahf
sub
pop
scas
jecxz
adc
mov
aad
mov
mov
stc
out
stos
and
cli
xchg
and
outsl
inc
loope
in
cli
and
cwtl
add
cld
jno
dec
mov
rclb
int3
pop
je
jns
lods
jne
sbb
cli
cmp
mov
jns
int3
roll
mov
mov
xchg
es
outsl
pusha
dec
loope
in
int
sub
dec
rorb
pop
adc
ficoms
mov
mov
jns
enter
lods
mov
mov
push
adc
cmp
shlb
ss
dec
xor
push
ret
stos
in
jno
pop
andl
push
pusha
or
dec
js
int
sarb
push
mov
pop
sub
scas
or
fldl
addr16
ds
push
incl
pop
xchg
push
out
pop
jnp
pushf
jmp
pusha
or
mov
push
sub
jecxz
out
sub
mov
or
mulb
fistpl
mov
hlt
pop
in
sbb
xchg
push
xchg
xchg
cs
push
xchg
bound
and
sub
jbe
aam
sbb
popa
jg
push
xchg
pop
ret
pop
mov
xchg
xchg
mov
shlb
leave
fsubrs
hlt
in
loopne
lods
lcall
lret
sub
subb
pop
push
pushf
sub
push
add
scas
popa
sub
out
xlat
jne
adc
cmpsb
cltd
mov
cmp
vcvtsd2si
leave
repz
imul
sub
scas
jge
sbb
push
jecxz
push
dec
inc
lret
mov
enter
dec
push
incb
inc
stc
outsl
lods
add
add
ds
mov
push
cmp
xor
mov
call
pop
pop
insl
je
imul
shlb
mov
in
inc
and
push
push
in
jl
or
jns
sub
sub
pxor
mov
stos
xor
lcall
shll
enter
mov
out
mov
pop
mov
shl
jne
cmp
and
mov
in
lret
or
mov
jno
fadd
dec
add
sub
pop
add
ljmp
pop
jne
mov
or
out
lret
je
add
cmp
nop
sub
sub
xchg
push
test
pop
call
sti
out
and
mov
dec
lods
add
test
int
xor
mov
pop
dec
adc
push
or
mov
lock
lods
push
lods
outsb
cmpb
arpl
push
sbb
sbb
add
nop
or
lret
test
scas
sbb
addr16
adc
lods
or
add
adc
pop
and
pusha
push
add
scas
mov
lret
and
jns
daa
inc
enter
pop
pusha
lods
inc
pop
xchg
mov
fistpl
shl
xor
mov
dec
jg
add
adcl
data16
jae
leave
arpl
sbbb
add
icebp
out
lea
mov
xchg
in
mov
jbe
ret
sub
cmp
add
cmpsb
adc
adc
imul
mov
gs
jecxz
add
das
push
push
lret
test
or
mov
mov
in
divl
mov
mov
cmc
pop
sti
loope
mov
data16
xchg
sbb
jae
inc
inc
int
jns
scas
in
xchg
mov
ret
xchg
fnstenv
xchg
cmp
imul
rcl
cmpsb
test
mov
loopne
mulb
push
dec
and
sub
outsb
std
cwtl
mov
xlat
push
shlb
cmc
cmp
out
inc
push
dec
outsl
inc
dec
jbe
xchg
out
inc
jg
pop
push
and
and
cwtl
inc
sahf
shr
stos
cs
adc
cwtl
mov
dec
mov
outsl
pop
pop
mov
shrb
out
push
or
add
mov
andl
xor
idiv
pusha
xor
or
lea
mov
add
in
lds
das
dec
pop
and
mov
or
xor
in
ret
sarb
test
fisttps
jmp
inc
push
mov
cmp
add
dec
repnz
sti
roll
mov
sbb
add
push
test
les
inc
jnp
jge
and
mov
divb
xchg
dec
stc
out
xchg
pop
cmpsl
and
push
sub
jle
lods
cmpsb
and
push
xchg
and
fimuls
add
sub
jp
sbbl
mov
out
movntq
movsb
xor
jl
xchg
lcall
pop
push
xchg
sub
jno
jne
rcrl
cmpsb
adcl
aad
imul
mov
gs
cmp
shrl
pop
ljmp
leave
aad
das
test
adc
ret
sub
in
mov
adc
and
push
add
mov
pop
add
xchg
push
fldt
sti
cmp
fwait
sub
icebp
in
test
and
mov
imul
jle
lret
add
pusha
sub
dec
in
sbb
mov
ja
xchg
mov
jp
outsl
out
or
and
repz
bound
lret
mov
loopne
lcall
divl
dec
rcl
leave
rorb
fsubrs
fsubrp
outsb
cmp
cmp
cltd
mov
ret
ret
and
mov
adc
fcmovb
loop
test
popa
or
test
cmp
sub
mov
fcoml
shll
ja
or
rcrl
movsb
flds
cmp
adc
cmp
pop
lcall
leave
and
rcrl
insl
and
aaa
movsb
movsb
mov
and
out
inc
std
cmp
mov
std
pop
cmpsl
jno
or
dec
push
sarb
dec
mov
jp
mov
mov
cmp
je
sub
xlat
push
cmp
sub
add
cltd
ror
jl
hlt
mov
shr
mov
in
mov
add
jmp
pusha
shrb
movsl
cmp
cld
pusha
pushf
push
sub
cltd
or
es
jae
adc
rcll
ljmp
cmp
xchg
jp
fwait
xchg
aam
sbb
cmpsl
dec
bound
xchg
jbe
mov
cmp
dec
lock
sbb
mov
hlt
push
in
cmpsl
lea
mov
jb
imul
fdivrs
scas
mov
dec
lds
xchg
or
adc
or
popa
fxch
sub
jo
stos
decb
lods
call
or
cmpsl
loopne
popf
xor
jno
adc
fcomps
and
arpl
out
mov
push
jo
lret
dec
leave
bound
sahf
inc
jp
inc
push
in
arpl
xor
cs
idivl
shrb
ds
cld
clc
sti
adc
call
jb
pxor
cltd
cli
xor
cmp
pusha
lock
loopne
shll
sti
fcoml
js
mov
insb
lahf
xchg
jg
popa
add
outsb
sbb
popa
fbld
fldcw
sbb
lods
xchg
scas
out
lock
jl
cs
fiaddl
fldl
mov
imul
and
aam
cs
mov
inc
aad
sbb
mov
push
out
fwait
add
int
cmp
jno
sbb
ret
push
push
pop
jle
leave
in
pusha
adc
and
test
aaa
out
mov
cmp
xchg
add
jle
xchg
fimull
add
mov
jo
out
das
loopne
pop
gs
aaa
ljmp
inc
mov
rcrb
jl
aaa
inc
jo
faddl
push
inc
cmpl
fcmovbe
sbb
fsubrl
cmpsl
xor
pushf
mov
pop
in
call
dec
ljmp
movsl
iret
add
xor
inc
xchg
dec
ret
inc
mov
div
je
jge
lret
lods
xor
adc
aas
or
sub
mov
fcomip
mov
inc
ret
push
xchg
iret
cwtl
stos
dec
out
int3
xchg
mov
push
xchg
mov
rorb
add
or
int3
out
lcall
aas
filds
cltd
inc
out
pop
cmpsb
test
js
out
adc
scas
xchg
mov
mov
sub
loopne
rorl
add
pop
pop
mov
shrl
and
xchg
aam
or
cwtl
cmp
or
movq
cmp
mov
mov
rolb
shll
sti
pop
inc
pop
mov
xchg
cld
cmp
clc
mov
cld
sub
dec
xor
jae
sar
leave
les
movsl
imul
mov
sbb
jge
sti
push
lahf
lret
push
outsb
lds
je
loop
pop
inc
xor
push
or
mov
sub
sbb
lret
sub
cli
scas
hlt
xchg
stc
xor
or
lgs
scas
mov
daa
jne
popf
sahf
in
jecxz
mov
cltd
sub
in
mul
scas
test
xlat
shlb
sbb
mov
insl
xchg
pop
sbb
int3
pop
pop
imul
sahf
adc
fs
sbb
push
jb
daa
mov
popf
stos
shlb
jp
lock
jl
pusha
push
iret
pop
pop
jbe
flds
iret
adc
or
pop
sbb
add
cmp
outsl
push
iret
outsb
sub
inc
fisubl
aam
xlat
leave
insb
rcr
into
ljmp
jno
push
push
cmp
movsl
sbbb
mov
or
test
ds
ds
jmp
sub
and
shll
pusha
and
lds
xor
xchg
test
bound
sub
imulb
adc
mov
pop
das
sub
mov
push
clc
push
fwait
lahf
mov
mov
repnz
cmpsb
sbb
int
adc
mov
mov
xor
xlat
inc
test
push
xchg
add
xchg
xchg
aaa
roll
mov
daa
aad
mov
inc
adc
mov
scas
iret
dec
outsl
mov
fs
push
lock
sub
test
sbb
call
push
cmp
movsl
inc
mov
addr16
mov
push
fxam
push
jo
push
ss
push
or
in
push
aaa
or
fwait
call
mov
movsb
xor
movsb
out
jno
dec
dec
shrl
sub
pop
fs
jo,pn
dec
or
cmp
inc
mov
push
test
ficomps
pop
fsqrt
mov
daa
loop
lcall
sahf
cwtl
les
ljmp
sbb
fimull
mov
sbb
lret
daa
in
inc
xchg
pop
orl
test
repz
add
rolb
sub
aam
out
in
jns
fwait
mov
push
je
or
jg
leave
xor
out
or
xor
aam
mov
push
mov
nop
pop
push
inc
xchg
cmp
add
ljmp
xchg
push
push
dec
test
or
arpl
mov
dec
sub
push
lods
mov
inc
dec
jns
outsb
xor
loope
jb
mov
fsubrl
sti
mov
in
daa
aas
mov
pusha
ret
out
cmp
inc
cmpsb
add
loope
mov
pusha
lret
pop
pop
and
popf
shll
xchg
adc
cmp
movsl
pop
add
inc
sub
xchg
mov
lea
or
mov
subb
rol
push
mov
pop
les
add
adc
and
or
out
add
lods
aad
mov
jno
push
movsb
push
jl
and
dec
mov
in
push
jge
or
pop
scas
jno
mov
jno
inc
sbbb
cs
std
call
sub
jmp
push
fnstenv
pop
rcrb
sbb
inc
cli
dec
out
mov
rcrl
cmpsb
xchg
out
lods
xchg
cmp
xchg
mov
jb
mov
gs
add
aaa
test
mov
loope
test
enter
or
push
ljmp
jmp
out
aaa
loopne
push
push
stos
out
ljmp
mov
push
stc
add
jne
mov
jle
jmp
ljmp
fisttpl
xor
mov
pop
fsubs
subps
lods
scas
xor
cmp
fdivrs
xchg
pop
movsb
loop
in
jb
pop
cmpsb
mov
scas
lock
pop
or
clc
enter
adc
dec
push
inc
pop
inc
mov
fbstp
inc
xchg
sarl
in
xchg
nop
insl
cld
mov
pushf
add
testb
push
fs
jb
imul
mov
pop
push
repnz
and
in
shlb
lds
mov
or
cmp
fidivl
cltd
mov
push
int3
imul
fnstcw
popf
mov
shlb
lods
dec
daa
sbb
dec
int
es
in
testb
jae,pt
dec
or
mov
mov
and
mov
xor
mov
das
pop
dec
pop
xorl
pop
cs
invd
lret
jnp
cld
push
pop
pop
sbb
mov
sbb
push
ficoms
insl
enter
xlat
and
call
pop
rcrb
stc
sbbb
jg
sbb
jne
mov
mov
cmp
aam
stos
testl
sar
fidivrs
xchg
fisttps
mov
pop
les
inc
jg
pop
jg
mov
adc
bound
leave
mov
cs
jns
cmp
mov
mov
aam
test
push
jno
lcall
push
orl
push
jp
jo
push
push
fstps
jb
int3
push
int
lods
mov
mov
or
cmpsl
test
push
pushf
or
or
push
test
lock
test
jb
ja
imulb
js
stos
xchg
pop
ljmp
cmp
imulb
arpl
and
lea
je
aaa
mov
movsb
popa
sub
lods
popa
jno
add
xchg
pop
lret
pop
inc
fdivl
and
lret
fwait
ret
and
xchg
imul
push
and
and
inc
cmpsb
roll
hlt
push
xchg
fsubrs
xor
movsl
xor
or
lahf
sub
gs
mov
push
icebp
xchg
push
xchg
test
aad
fldt
push
dec
cmpsb
and
adc
leave
cltd
jecxz
faddl
nop
sub
orl
pop
jmp
movsl
or
cmp
mov
pop
mov
mov
jmp
push
pop
popa
enter
cs
int
push
mov
and
ss
cld
sbb
xchg
inc
scas
and
dec
mov
jns
and
xor
pavgw
pop
ljmp
bound
leave
or
adc
pop
pusha
sub
push
lock
data16
xor
outsl
jne
pop
lcall
push
jecxz
cmpsl
mov
cltd
scas
mov
rcll
sbb
cwtl
loopne
jae
inc
dec
cmp
push
mov
jmp
or
cwtl
fbstp
fst
mov
in
in
hlt
mov
sub
push
sub
fldcw
push
mov
fst
mov
push
popf
inc
mov
testb
push
xchg
pop
iret
cmp
lea
mov
scas
fs
sbb
shlb
cmp
loopne
inc
imul
mov
xchg
iret
gs
xcrypt-cbc
cmpsl
xchg
lock
test
mov
fadds
mov
stos
sbb
jp
scas
rclb
cli
cmc
movsb
mov
sub
call
xor
pushf
fldcw
in
stc
cmp
mov
in
loope
xchg
mov
add
sahf
jno
xlat
lds
popa
and
push
mov
test
pop
stos
aam
xchg
adc
cmpsb
cmp
mov
out
mov
test
pop
pop
xor
int
cmp
stc
adc
and
in
xor
popf
mov
out
mov
xchg
sub
movsb
pop
into
push
pop
test
sbb
inc
sbb
mov
mov
inc
stos
sti
mov
lods
popa
adc
xor
imul
ja
mov
cmp
xchg
push
inc
and
andl
mov
mov
ret
or
mov
and
or
lret
lds
mov
cmp
clc
mov
icebp
lret
scas
adc
xor
sub
jle
sub
popf
push
jl
cmc
jg
xor
andl
pusha
jg
xchg
add
mov
fnstenv
adc
out
pushl
cltd
je
push
stos
in
push
xchg
popf
dec
outsl
mov
push
adc
loopne
adc
pop
mov
in
test
test
nop
lret
out
pop
stos
cwtl
sbb
xor
adc
inc
add
testl
sub
inc
or
nop
stc
pop
jecxz
iret
cmc
aaa
add
js
jecxz
ss
insb
divl
cmp
jo
fucomp
fists
mov
mov
lods
pop
bound
pop
cmp
cld
int3
jno
xchg
pop
fst
adc
lcall
aaa
adcb
pcmpeqw
movsl
dec
xchg
fdivr
mov
sub
jb
std
in
inc
ljmp
cwtl
lcall
outsl
imull
xchg
imul
gs
mov
cwtl
sub
xor
and
add
adc
movsl
jne
inc
fildll
and
mov
adc
pop
dec
or
enter
cmp
test
rclb
imul
inc
adc
push
ljmp
sub
mov
iret
jne
ret
add
xchg
cmp
inc
and
dec
daa
stc
out
mov
jge
mov
pop
outsl
cmpsl
nop
xchg
mov
sbb
lds
sti
dec
pop
jecxz
mov
in
sbb
repnz
test
in
xchg
fsub
add
xchg
addr16
into
and
mov
jno
dec
adc
adc
cmp
dec
mov
cld
mov
pop
out
cwtl
mov
pop
inc
fcmovbe
rcl
dec
cmc
mov
loopne
loope
popa
dec
pop
pushf
loopne
jle
js,pt
int
lods
cld
mov
cltd
std
lcall
iret
aas
arpl
bound
cmp
lock
adc
mov
xor
aam
hlt
jmp
fnstsw
enter
mov
imul
inc
sti
inc
call
jo
mov
test
push
mov
insb
out
cmpsl
fdivrs
pop
sbb
jmp
or
and
or
test
arpl
decl
cmp
rol
into
inc
enter
push
daa
cmc
adc
cmp
inc
sti
ja
scas
inc
mov
hlt
push
xor
sbb
and
mov
push
imul
or
sub
xor
enter
jne
mov
jg
and
cmp
int
lock
enter
pop
xchg
mov
jg
adc
adc
stc
push
push
and
pop
jmp
mov
stos
adc
adc
dec
clc
push
aam
std
or
mov
loope
or
xchg
lock
out
enter
inc
les
mov
fbstp
fisubs
jp
push
cmp
fidivl
push
inc
mov
mov
ss
and
in
and
dec
sbb
xchg
jbe
sub
in
bnd
dec
push
jns
xor
fcoms
mov
push
arpl
out
xchg
lahf
imul
inc
dec
ds
mov
or
jb
mov
movl
pop
mov
mov
mov
testl
jge
dec
inc
lods
int3
and
shlb
or
adc
push
popf
cld
push
icebp
mov
push
jno
inc
test
leave
scas
push
lcall
arpl
div
xor
pop
test
out
jecxz
fbstp
out
pop
cmp
ja
sub
dec
push
es
push
dec
or
sbb
stos
stos
xchg
int
mov
or
pop
and
jns
out
pop
aas
orl
cmp
push
and
mov
mov
ficompl
xchg
inc
and
mov
arpl
addl
sbb
int
fisubl
outsl
xchg
daa
mov
sub
shll
xchg
sti
jl
mov
stos
sub
or
popf
adc
or
cld
pop
testl
pop
push
sub
inc
dec
stc
pop
iret
jnp
out
pushf
fcompl
jne
pop
ljmp
push
dec
push
lods
aaa
popf
out
sub
dec
je
inc
fbld
inc
loop
mov
mov
fsubs
jae
cmp
mov
push
rclb
cld
call
and
mov
repz
ret
or
out
les
add
or
sub
pop
jae
mov
or
push
imul
iret
jbe
dec
popa
cmp
arpl
xchg
sbbb
repnz
sbb
cltd
sarb
sahf
xchg
add
jmp
ja
arpl
pop
mov
int3
or
les
addr16
lahf
xchg
mov
out
push
push
xchg
sub
jmp
push
mov
cmpsb
pop
fisubrl
mov
scas
lret
jl
imul
pop
add
xchg
mov
iret
mov
adc
ja
mov
fadd
jne
std
xchg
inc
imul
cmovbe
lods
sub
push
dec
pop
mov
add
movsl
and
lahf
mov
or
sub
pop
test
sbb
inc
mov
and
cli
loopne
xchg
dec
or
jecxz
lods
or
cmp
mov
mov
pop
bound
jle
fs
shlb
cmc
insl
jecxz
test
add
or
lea
pop
mov
loop
pop
outsb
xchg
cli
cmc
xchg
add
imul
xor
mov
cmp
inc
lahf
add
or
cmp
movsl
cmp
or
lahf
insl
or
sub
sbb
jne
test
int3
or
dec
je
ds
or
jl
aas
dec
imul
les
sbb
orb
cmpsl
fistpll
mov
leave
pop
in
rcl
ja
jp
and
cmp
dec
cmp
cmp
cli
mov
cmpsb
fdivrs
mov
shl
in
hlt
cwtl
in
enter
stos
gs
pop
cmp
addr16
sub
add
inc
push
lahf
cmp
ficoms
xchg
or
pusha
rcrb
fs
stos
adc
insl
out
les
or
loop
add
movsb
mov
rolb
add
mov
int
lods
jb
pop
push
insl
fwait
pop
cmp
in
pop
inc
mov
dec
jns
sbb
lret
je
push
sti
mov
xchg
push
mov
sub
adc
cmp
sub
fwait
cmpsb
data16
fdivl
mov
jle
lock
push
jecxz
cld
jae
inc
adc
cmp
xor
xchg
mov
ret
mov
mov
sub
inc
and
cmc
out
pushf
stc
mov
movsl
movsb
ret
push
out
bound
push
sub
js
push
or
in
xchg
jns
xlat
hlt
int3
cmc
push
xchg
mov
movsb
iret
pop
fimull
mov
mov
aam
lcall
negl
lock
movsbl
insl
sbb
pop
mov
and
mov
or
testb
fmulp
xor
jns
xor
pop
xor
push
scas
xchg
loop
popf
out
push
mov
inc
add
xchg
jnp
mov
insl
pop
jle,pn
out
dec
xorb
es
sub
jns
push
jl
aas
pop
sbb
fnstenv
ret
out
cmp
imul
mul
fsubl
aas
cmp
cmpsl
bndldx
mov
test
add
lods
sti
ret
movsb
mov
xor
jne
mov
out
fs
movsb
dec
fidivl
ficompl
ja
sub
arpl
mov
lret
dec
push
lcall
jb
mov
push
fwait
sbb
or
add
bound
jno
mov
std
rcll
mov
fs
insl
fildll
adc
mov
insb
pop
pop
imul
or
add
mov
js
arpl
pop
mov
push
push
rcl
mov
xchg
pop
push
add
xchg
jmp
jb
pusha
clc
dec
sar
cld
sub
rolb
bound
xor
lcall
adc
xchg
std
dec
mov
imul
popa
inc
neg
insl
sbb
pop
and
divb
adc
xor
cltd
or
push
push
mov
ret
push
jne
mov
adc
cmp
dec
int3
cld
cs
jl
jle
cmc
daa
xchg
push
scas
xchg
rcrb
fwait
sub
and
lahf
scas
jp
sar
push
out
xchg
pop
ljmp
lods
sti
popf
mov
xchg
sbb
push
jl
imulb
xchg
sbb
jbe
mov
add
sub
daa
and
push
fdivrs
fidivs
pop
add
fwait
xchg
sti
mov
and
sbb
fidivl
cmp
adc
mov
sub
cmp
fisttpll
std
mov
pop
xchg
sbb
jae
popa
adc
lahf
adcl
stos
sub
mov
imul
xchg
mov
push
aam
jecxz
lcall
pop
cmc
les
je
mov
cwtl
adc
popf
loop
jle
push
pop
hlt
pop
push
jns
rclb
lea
or
jb
fidivrs
lds
xorb
pusha
mov
cmp
mov
cmp
inc
pop
mov
pop
mov
stos
mov
adc
insb
or
inc
add
push
fcoml
cmp
stos
cmpsl
fstp
and
movsb
pop
int3
fwait
cmp
cmc
fsub
sbb
gs
mull
lods
lret
mov
popf
addl
out
xchg
mov
mov
loopne
pusha
daa
aam
jecxz
dec
dec
mov
loope
arpl
ds
fdivr
das
imul
push
dec
fwait
jne
add
mov
cmp
jecxz
lret
andb
pusha
out
fstps
in
inc
out
sbb
jecxz
addr16
xor
add
sarl
je
insb
jbe
ds
inc
icebp
shll
and
inc
insb
pop
xchg
mov
jae
push
cmp
dec
cmc
jecxz
repnz
or
ret
insl
sub
dec
test
clc
sbb
mov
leave
int3
xchg
add
or
movsb
sbb
push
js
roll
xchg
addr16
je
scas
cmpsl
cmpsb
fwait
loop
fldt
das
mov
int3
lea
fsubp
mov
shl
push
mov
or
in
out
dec
jmp
dec
movsb
mov
adcl
rcrb
mov
ret
pop
test
xchg
add
bound
dec
inc
adc
cmp
fnstsw
inc
fstl
mov
dec
enter
and
xchg
add
fsubrl
loopne
fcoms
add
xlat
popl
mov
inc
stc
mov
mov
cwtl
sbb
pushf
aam
xor
mov
cli
nop
and
xchg
or
into
push
inc
das
jbe
add
outsb
lods
pop
xor
adc
dec
mov
cltd
pushf
mov
sub
push
jge
sbb
cs
movsl
adc
mov
lds
arpl
add
adc
je
js
lret
jge
add
out
xchg
out
inc
sbb
cmp
mov
push
sbb
and
cld
mov
jae
jnp
mov
pop
mov
decb
leave
and
jns
mov
arpl
xchg
mov
inc
int
dec
xchg
xlat
cmp
rcll
cmp
push
cmp
testl
mov
push
jecxz
add
orb
xchg
xor
jp
add
imul
fldl
add
sbb
stos
mull
adc
rcrb
jbe
cld
daa
rcrl
pop
mov
repnz
popf
dec
stos
pop
and
aad
push
mov
aas
xchg
push
in
jecxz
sahf
add
dec
or
mov
jg
out
gs
lods
aam
bound
mov
cli
mov
clc
in
add
push
inc
subl
push
sahf
cmp
jl
add
aas
shll
sbb
mov
and
movsb
subb
daa
pop
daa
rcl
int
xorb
pop
xchg
aad
test
aas
fs
rcrl
out
insl
adc
cld
or
xor
jecxz
jl
testl
jo
popa
inc
adc
jmp
cmpsb
repnz
hlt
ficomps
std
stc
mov
pop
adcb
adc
jl
ds
scas
ljmp
sub
cmp
hlt
push
push
mov
push
jl
imull
pop
pushf
clc
aaa
lret
cld
or
in
out
mov
jg
xorb
xchg
adc
lcall
lods
scas
in
shrl
cltd
in
mov
mov
push
add
cmp
dec
xor
aam
adc
pop
push
pushf
sbb
mov
mov
and
rcrl
mov
loopne
data16
jo
pop
lea
scas
push
les
dec
mov
ljmp
negl
stc
xor
sub
std
in
test
push
xor
xchg
in
hlt
xor
mov
jns
cli
push
jp
movsl
mov
sub
inc
std
hlt
out
inc
into
push
int3
fnstcw
repnz
and
jmp
sbb
lret
adc
mov
xor
push
xchg
mov
mov
pusha
sub
mov
add
xchg
mov
inc
push
rol
loope
jl
jcxz
mov
mov
jp
movsb
and
mov
cs
jno
jb
setns
jle
lea
lock
sub
ret
cltd
fs
mov
mov
mov
dec
push
jmp
push
outsb
stc
int
xchg
inc
mov
inc
push
std
sbb
inc
lcallw
lahf
ficoml
repz
aad
scas
es
add
decl
fwait
ja
imul
push
inc
xlat
jbe
xor
dec
mov
push
dec
cs
imulb
and
stos
sbbb
adc
hlt
cmp
sub
lods
adc
or
add
sbb
cwtl
nop
loopne
clc
ror
adc
out
scas
aaa
orb
jb
inc
daa
iret
xchg
inc
or
cmp
mov
mov
ljmp
and
in
add
lds
inc
xchg
aas
sub
jecxz
shl
inc
sbb
dec
and
daa
xchg
into
addr16
mov
gs
inc
pusha
push
mov
cmpsl
push
mov
divb
jns
mov
inc
add
cmp
and
sahf
add
sahf
dec
cli
sbbl
inc
lea
push
xchg
xchg
enter
xor
andb
rcl
sarl
loopne
cltd
cmc
in
cmp
cltd
call
add
add
fcmovnb
pop
cld
jnp
or
sbb
ljmp
xor
xchg
lea
add
xchg
inc
dec
sub
test
shrb
and
push
xchg
daa
fdivrs
fwait
inc
test
ss
push
push
insb
out
popa
std
test
in
or
mov
push
repnz
lds
fdivrl
sub
push
and
jb
adc
jmp
fcmovnu
xchg
test
add
sti
test
adc
mov
add
mov
adc
cld
lahf
dec
cmp
push
sub
orl
fwait
pop
rorl
iret
add
sub
add
xchg
and
es
lahf
pop
push
popa
or
xor
inc
jno
popa
sbb
fnstsw
jle
xor
push
pop
mov
lahf
test
mov
arpl
dec
shl
outsl
les
mov
add
fisttps
pop
mul
and
add
dec
into
jl
dec
dec
lcall
ficomps
push
mov
sub
push
sete
dec
dec
mov
cmovs
jp
xor
push
and
int
xchg
test
ficoms
sbb
adc
mov
jb
pop
jecxz
pusha
int
lods
pop
roll
mov
dec
xor
inc
es
xor
inc
adcl
repz
jmp
in
push
push
sub
sub
xchg
or
data16
out
pusha
cmpsl
push
repz
mov
or
push
daa
mov
jmp
aaa
sbb
jge
inc
jp
mov
adc
jo
xchg
adcb
inc
mov
int
es
repz
sbb
movsl
sbb
daa
pop
inc
lret
dec
orb
or
inc
xlat
cmpsl
dec
das
jb
insl
mov
das
hlt
mov
imull
loope
int
add
cmpsb
cmpsb
pop
mov
xor
ret
adc
mov
sbb
sub
or
daa
cli
insb
lcall
daa
subl
out
sub
xchg
inc
pop
and
fxch
push
idivl
add
pop
pop
mov
dec
sarb
mov
nop
pop
outsb
int
mov
nop
stc
adc
xor
test
cld
fidivs
inc
jmp
xchg
shl
dec
out
popa
les
or
fisttpll
jle
mov
js
xor
in
cld
add
push
sub
add
test
inc
enter
xor
mov
push
cs
fldl
mov
push
fmull
xchg
leave
mov
dec
ret
idivb
dec
clc
js
loopne
xor
jecxz
sbb
pushf
movsl
mov
mov
push
cmp
jno
adc
cmp
add
push
inc
add
and
mov
inc
out
jb
hlt
ljmp
push
fimull
xchg
and
jbe
push
popa
cmp
test
fnstsw
bound
jno
pop
dec
clc
insb
inc
lods
leave
fsubrs
enter
in
pop
mov
add
push
push
inc
filds
push
das
dec
jl
xlat
sti
pop
call
js
push
pop
mov
fisubrl
jl
pop
cmp
mov
loope
adc
jmp
jle
outsb
ljmp
jmp
xchg
and
sbb
lock
cmp
pop
mulb
aam
addr16
out
cmpsl
btr
in
movsb
push
shll
pop
xor
test
dec
idiv
inc
addr16
pop
aas
out
ss
adc
fcomps
mov
jecxz
aad
and
jle
mov
sub
and
enter
mov
shr
xchg
dec
lods
arpl
sub
push
pop
mov
shrl
enter
cmp
les
icebp
jge
mul
cli
hlt
cmc
enter
adc
les
xor
mov
dec
iret
loope
sub
mov
repnz
pop
aaa
or
dec
cmpsl
xor
mov
xchg
icebp
xor
cmp
mov
xchg
pop
xchg
pop
fisttpl
cmp
cmpsl
xor
insl
inc
push
sbb
jge
push
add
ljmp
xchg
call
jb
mov
mov
cmp
arpl
xor
inc
arpl
lds
mov
inc
bound
mov
xor
fidivrl
bound
push
sub
imul
out
sub
loop
mov
mov
sbb
out
sub
cmpsl
inc
cmpsb
je
les
push
xorl
fistl
cli
mov
imul
inc
and
shrl
cmc
mov
scas
push
adc
movups
pushf
xor
lret
lods
mov
loope
mov
jns
ja
xor
jbe
push
cmp
sub
and
mov
cmp
adc
jmp
imul
pop
sarl
sub
bound
adc
cmp
sbb
push
mov
cmp
shrb
xor
ljmp
imul
insl
jnp
xor
or
test
mov
pop
ja
dec
push
scas
lret
scas
xchg
adc
rcl
cwtl
adc
jl
test
dec
or
aaa
sbb
sbb
cmp
stos
sub
and
icebp
cmpl
nop
jne
mov
add
mov
inc
mov
cmp
add
mov
pop
cld
jp,pn
cltd
push
repz
mov
pop
shl
lahf
dec
jno
adc
mov
cmp
lahf
add
stc
je
fistpl
jmp
mov
orb
pop
adc
add
leavew
cwtl
pop
adc
cs
shlb
hlt
pop
stc
pop
fxch
sub
adc
jae
movsl
fwait
jmp
enter
cli
adc
out
sbb
test
test
sbb
or
cltd
push
jmp
push
movsl
dec
icebp
rolb
mov
adc
mov
hlt
cmp
jnp
fsub
ds
and
inc
or
pop
pop
push
lret
mov
xchg
xor
jo
es
adc
adc
and
cmp
dec
cmp
adc
push
jbe
mov
das
cmpsl
mov
cmp
pop
cmpsb
pop
xchg
jge
or
jno
popf
insb
test
repz
sahf
repz
xor
pop
mov
jge
bound
repz
mov
ljmp
adc
sub
outsl
adc
bound
pop
push
ud0
mov
mov
mov
dec
add
dec
stos
iret
repz
std
sub
mov
loop
jmp
mov
bound
and
std
addr16
pusha
movsl
inc
addl
cmp
pop
bound
mov
add
inc
sbb
enter
dec
in
sub
fisubl
test
push
xor
push
jp
mov
inc
out
push
leave
je
xchg
push
cmp
jmp
sub
mov
mov
fsubrs
mov
pusha
dec
push
mov
mov
loope
jle
xchg
cs
inc
cld
mov
hlt
aam
sbb
fistpll
testb
faddl
daa
jae
xchg
adc
aam
inc
jno
cmp
imul
jmp
mov
cmpsl
mov
mov
sub
mov
jle
nop
rcrb
xchg
test
int3
bound
mov
insb
and
mov
sub
adc
ja
and
daa
mov
loope
mov
add
sub
cmp
out
pop
and
xchg
xchg
xchg
iret
pop
lea
ja
jae
xor
jne
mov
lahf
push
int3
es
sub
mov
xchg
pop
ljmp
mov
int
dec
sbb
mov
inc
jl
out
scas
aas
cmp
aas
in
push
int3
popf
test
test
or
push
or
and
shll
movsb
inc
cwtl
cmpsl
pop
mov
add
dec
fwait
mov
in
fs
lods
xor
xchg
das
leave
lret
lods
hlt
int
and
mov
sub
cmc
mov
mov
jle
call
pop
cld
das
int3
movsl
adc
xchg
scas
dec
cld
aas
filds
xchg
cmp
fnstsw
imul
xor
lret
loop
fwait
add
and
dec
insl
sub
movsb
push
jg
les
mov
jno
jge
test
sbb
shlb
mov
mov
xchg
xor
ja
bound
lcall
adc
jno
adc
testb
pop
jg
jl
clc
insl
mull
pusha
popa
es
popa
call
adc
jnp
mov
int3
xor
outsl
aaa
fsubrs
mov
sar
mov
test
sub
lods
mov
mov
push
xor
out
rclb
and
mov
pop
lahf
pop
dec
xor
pop
push
js
xor
sub
push
int3
mov
mov
sub
cli
rcrb
push
imul
popf
rcrb
push
xchg
or
xor
cmpsb
arpl
or
aam
out
xor
cmpsl
jae
sarb
sub
cmpb
jge
xchg
insb
imul
rclb
popa
cwtl
sub
decl
sub
outsl
loopne
pop
add
mov
iret
add
outsl
push
and
pop
mov
daa
dec
nop
add
das
xor
jae
cmp
xchg
fidivs
imul
out
xor
or
leave
push
call
push
jae
push
lods
js
in
mov
mov
and
add
andb
orl
pop
mov
stos
adc
mov
clc
dec
sub
ja
mov
ret
cmp
fnstsw
mov
sti
test
fstps
mov
insl
out
lods
and
xor
int3
jmp
pop
fwait
les
int3
icebp
cmc
inc
adc
mov
and
cmp
xor
mov
cli
aam
mov
inc
in
mov
lds
push
pop
cld
jno
and
xchg
pop
xor
adc
ret
lret
mov
lret
dec
sub
in
mov
xchg
pop
cltd
lods
xchg
and
fimuls
or
rcr
les
insl
xor
idivb
inc
and
sbb
movsb
sub
sub
in
push
pop
lock
dec
lea
xchg
into
jecxz
xor
aas
lahf
int3
js
je
push
xor
inc
daa
aad
xchg
xchg
mov
sbb
push
leave
fucomi
fmull
lods
stos
mov
sti
xor
pop
lahf
insb
in
idiv
ja
test
ja
jle
les
push
mov
mov
push
ljmp
sbbb
aam
dec
xchg
repz
mulb
aas
addr16
idiv
dec
rcrl
in
adc
mov
cmpsb
pop
mov
lods
xchg
mov
inc
repnz
mov
xchg
jg
pop
sbb
jno
aad
sbb
scas
scas
mov
cmp
mov
and
call
push
mov
and
je
mov
pop
xchg
nop
mov
mov
testb
xor
inc
shll
cmp
scas
sub
mov
mov
push
fsts
movsb
enter
pushf
push
icebp
movsl
or
xchg
adc
aad
inc
push
sub
cmc
mov
shll
imull
pop
push
dec
inc
adc
je
hlt
popf
sbb
or
dec
movsl
es
lcall
stos
loopne
in
pop
sub
and
jnp
pop
shll
xchg
stos
pusha
or
pop
mov
cmp
scas
sbb
push
fldt
shlb
adc
scas
mov
ja
xchg
push
lret
jge
scas
into
std
xor
decb
xor
cmpsb
and
fwait
mov
push
sub
add
ljmp
pushf
adc
cmp
sbb
xor
push
push
push
shrb
fs
xor
cmpl
shl
rorl
xchg
and
je
xchg
xor
dec
ljmp
adc
xchg
mov
xchg
dec
in
xchg
into
push
stos
push
fnstcw
and
mov
and
into
arpl
out
dec
lret
mov
mov
mov
and
sbb
adc
popa
push
sub
outsb
lret
std
movb
out
jb
mov
rol
je
mov
xor
pusha
enter
and
loope
mull
out
mov
jmp
fwait
lea
lods
arpl
sbb
aad
pop
inc
dec
daa
sub
push
push
and
aas
cld
int3
adc
data16
jmp
or
jecxz
cmp
daa
push
xlat
add
flds
sbb
cld
pop
bound
xor
and
sbb
jle
movsl
rorl
xchg
setle
sahf
pusha
sub
rorb
iret
shrl
je
inc
jmp
jbe
vsubss
mov
sub
cmp
add
mov
sub
sbb
inc
jle
insb
pop
adc
dec
adc
es
dec
cmpb
imul
cmpsl
in
lods
subb
dec
dec
cmpsl
sub
loopne
loope
mov
cmp
inc
add
lret
mov
popf
mov
and
or
cmpb
jb,pt
mov
mov
jmp
ljmp
bound
dec
fwait
fwait
dec
addl
pop
pusha
cmpsb
mov
int3
or
add
loopne
bound
cmp
repz
imul
les
push
dec
jae
call
dec
fsubl
cld
mov
jo
mull
or
mov
cmc
ret
sub
push
pop
mov
adc
xlat
cwtl
in
sti
in
or
sbb
add
fs
scas
xor
int
sbb
call
add
inc
mov
xchg
push
xchg
movl
fnstsw
out
test
mov
xchg
int
jge
jl
test
pushf
xchg
xchg
xor
and
cld
add
push
testl
inc
divb
iret
rclb
rolb
jo
or
and
sub
cli
xor
out
outsb
test
cmc
leave
push
mov
test
adc
add
nop
mov
sbb
mov
sub
insl
inc
sub
jecxz
mov
lcall
inc
imul
mov
fdivs
leave
into
xlat
aam
dec
stos
sbb
fistpl
mov
nop
cwtl
jns
push
out
jns
loop
or
push
rcrb
jo
add
fmuls
xchg
mov
popf
mov
pop
addr16
add
scas
xchg
or
in
sbb
xor
test
adc
nop
mov
out
add
push
outsl
cwtl
xchg
dec
inc
je
js
data16
fdivrs
fdiv
out
and
testb
ja
es
in
cmp
pop
sahf
or
adc
arpl
ret
xor
das
mov
icebp
sub
cltd
cld
xor
sarl
lock
sarl
jl
xor
lock
cmp
cmp
mov
les
leave
lahf
pushw
mov
stos
es
mov
in
inc
into
xor
pop
add
fnsave
out
cwtl
pop
popa
scas
leave
mov
lea
iret
nop
imul
mov
leave
jno
call
and
pop
std
mov
jne
sbb
sbb
sub
or
sbb
jbe
fmuls
scas
cwtl
lds
or
xchg
push
push
sbbw
daa
xchg
add
xlat
dec
sbb
adc
mov
int
mov
mov
jns
mov
je
xchg
xchg
push
sub
leave
mov
xchg
mov
pop
mov
jg
mov
push
push
mov
push
inc
out
pop
decb
shrb
push
sahf
insl
loope,pt
inc
rolb
or
jne
cmp
in
les
cmp
iret
leave
js
inc
in
mov
cmc
adc
sub
mov
popf
sahf
sti
hlt
inc
subb
aaa
lds
and
jmp
fstpl
js
pop
add
mov
and
jbe
pushl
aas
clc
xlat
ljmp
lock
and
jne
jae
sub
decl
repnz
inc
inc
add
mov
sbb
fbld
pusha
shrl
inc
pop
or
loop
ja
pop
dec
sub
lahf
push
hlt
clc
cli
loopne
add
pop
fildll
jnp
sub
cmp
push
bound
insl
mov
inc
pop
daa
sub
sbb
adc
lret
loope,pn
icebp
and
push
xchg
fimuls
aad
mov
aam
test
adc
sbb
mov
and
inc
cs
sarl
test
jecxz
movsl
jmp
dec
lods
pop
inc
test
ja
and
mov
and
mov
inc
mov
lahf
inc
aad
jmp
iret
fsubrs
mov
xchg
rcrl
in
jg
inc
rorl
test
mov
rorl
rol
dec
scas
in
stc
dec
mov
imul
cmp
cld
cmpsl
movsb
out
dec
and
or
dec
leave
sub
fmuls
icebp
stos
aas
or
sbb
mov
dec
xorl
inc
sub
lods
jb
loopne
mov
fidivrl
call
pushf
and
add
pop
inc
xchg
pusha
test
cmp
cmpsl
jae
xor
shll
ds
js
insl
sub
sub
sub
xchg
nop
mov
data16
js
pushf
ja
mov
into
ficoms
enter
sbb
pop
or
push
sbb
mov
movsb
add
xorl
xchg
std
and
call
jbe
add
add
loopne
add
out
adc
rcrb
enter
out
cld
add
cmp
ss
pushl
data16
cmc
and
jnp
jmp
das
push
jbe
add
mov
mov
cs
adc
fstp
sbbb
sti
daa
inc
popa
push
dec
loop
pop
add
add
xor
loopne
sti
adc
sbb
ret
loope
out
notb
jl
adc
ss
sbb
inc
addl
jb
xor
fmull
ja
add
dec
jmp
aam
test
push
div
in
or
dec
dec
addr16
cmp
icebp
cmp
in
jns
pop
xchg
hlt
sar
xchg
sub
dec
lahf
dec
shll
test
push
mov
lret
push
mov
dec
mov
xchg
xor
pop
rorb
mov
cld
mov
push
mov
fsubrs
mov
stos
ror
add
xchg
adc
or
sbb
test
addr16
repz
cmpsl
cltd
repnz
push
pusha
or
fwait
lret
clc
mov
out
int3
inc
and
cltd
aad
sub
sub
aad
loope
outsl
fs
add
mov
sbb
and
shrl
hlt
lock
andl
sbb
dec
adc
shlb
ja
mov
xor
lcall
fbstp
pushf
xchg
insb
push
xchg
add
fildl
enter
mov
and
mov
fnstsw
cmp
and
xchg
mov
shrb
test
jns
cmpl
in
sti
jl
addb
in
pop
xchg
out
mov
rorl
movsb
dec
mov
or
jno
sub
aaa
leave
push
fcomi
gs
test
and
adc
sbb
push
xchg
cmpsl
and
add
and
ja
cmp
fsubs
jge
xchg
xchg
pop
push
lahf
shlb
cmp
das
or
cmpsb
pop
fsubs
sub
pop
lock
leave
xor
lds
mov
in
cmp
lcall
pop
shlb
std
jmp
adc
and
pop
fistl
sub
cmpb
mov
outsl
xor
in
dec
imul
mov
out
bound
orb
dec
mov
adc
mov
sbb
outsl
inc
cltd
or
ss
inc
mov
mov
push
loopne
imul
cmp
mov
pop
add
aam
call
adc
adc
sbb
rcl
xchg
push
scas
arpl
mov
dec
in
test
insl
mov
int
jo
push
pop
jbe
mov
inc
jbe
pop
add
pop
divl
pop
mov
xchg
and
lcall
std
cmp
or
pop
or
in
or
and
popf
mov
push
cmp
jo
mull
das
ljmp
adc
xchg
aad
jp
cmp
std
mov
mov
je
mov
movsb
sub
cmc
cmp
inc
lret
popa
pusha
xchg
mov
jnp
out
cmp
or
cltd
jnp
mov
push
push
mov
repz
sti
inc
call
lock
stos
sbb
sbb
push
cmpsb
ret
cs
ss
out
pop
push
xchg
or
popa
push
sub
int
fisttpl
ret
mov
daa
ret
std
fcoms
test
scas
ja
jle
lea
or
mov
cwtl
stos
xchg
hlt
test
orl
pop
or
fnsave
inc
sti
inc
repnz
lcall
ret
mov
outsl
xorb
test
hlt
test
mov
mov
flds
mov
fsubrs
mov
dec
daa
mov
jle
xchg
imul
enter
xor
in
das
jb
xor
imul
repnz
xor
aaa
add
loop
fisubrs
dec
inc
jne
cld
push
mov
adc
pop
orb
lds
or
loopne
xor
outsb
and
dec
das
lahf
pop
data16
push
nop
leave
dec
push
lods
mov
sbb
les
std
popf
xchg
pushf
in
data16
sub
jmp
rorb
or
int
dec
imul
xchg
push
ds
add
cmp
and
and
pushf
stos
movb
sub
mov
loopne
js
mov
aam
shlb
inc
aad
fildl
cmpsb
mov
mov
js
das
add
xchg
mov
stc
lret
jbe
mov
mov
jp
imul
xchg
add
mov
loopne
ljmp
and
sub
orb
push
outsl
sub
repz
fldenv
xchg
push
mov
lods
adc
dec
out
inc
incl
lods
imul
out
sub
icebp
les
fnstenv
adc
js
pop
push
ljmp
mov
inc
and
outsl
fdivr
scas
mov
jnp
les
and
lcall
push
adc
adc
daa
jp
inc
push
xor
push
mov
lret
add
jb
mov
pop
mov
rorl
xor
in
xchg
sbb
push
arpl
ja
pop
jp
loope
adc
or
push
mov
dec
arpl
add
popf
mov
cwtl
cs
adc
xchg
sub
push
shr
in
cmpsl
in
jmp
push
dec
aad
sbbl
xchg
push
lods
out
xor
jnp
jmp
aas
popa
push
and
sbb
sub
pushf
cmpsl
loopne
gs
sub
cli
adc
adc
inc
cmp
xor
ljmp
dec
fwait
pop
ds
insb
je
les
sbbb
or
pop
and
daa
notl
repz
mov
lods
xchg
push
pop
out
in
scas
out
cmpsb
lret
sti
xor
xor
int3
cs
int
cmp
lods
inc
fldl
add
outsl
std
adc
dec
adc
sti
xchg
xor
or
pop
lods
adc
cli
enter
inc
popf
add
fwait
cld
or
daa
cmp
fwait
imul
push
dec
cvttps2pi
jno
and
jg
cltd
in
push
xchg
fisttpl
addb
adc
stos
add
es
pop
sub
lahf
cmp
and
out
fcmovnu
sub
leave
js
outsl
and
cmpsl
cltd
push
repnz
jns
loopne
dec
jnp
insl
nop
ret
dec
sar
ljmp
adc
mov
or
jns
imul
loopne
js
pop
pushf
loope
or
outsb
jg
inc
in
jecxz
cmpsb
shll
mov
mov
lret
mov
movsl
mov
fmull
push
ret
xlat
push
adc
adc
adcl
pop
leave
scas
inc
shll
cmpsb
or
adc
pop
add
imul
mov
mov
pop
movsb
pop
pop
in
mov
jle
das
addr16
mov
pusha
and
add
mov
pop
dec
add
pop
pop
adc
push
mov
test
in
push
pop
xor
imul
flds
sarl
ljmp
out
lea
leave
mov
and
shlb
decb
lea
xlat
in
loopne
test
xchg
inc
cmp
add
sub
mov
lods
scas
mov
mov
iret
adc
rcrl
push
bound
shlb
lods
cmpb
out
test
mov
mov
cs
inc
fcmovbe
or
xchg
mov
ds
stos
jbe
push
loop
xor
and
push
sub
daa
mov
mov
ja
push
repnz
jo
es
gs
push
mov
mov
mov
jg
out
adc
test
pop
jl
lret
sub
or
add
push
jo
in
push
addr16
jmp
repz
xor
mov
push
shr
add
cmp
mov
or
call
fistps
cmp
mov
insb
popf
pushf
loopne
out
and
cs
mov
jg
lods
nop
inc
clc
insb
insl
xchg
xchg
cld
mov
mov
xlat
pop
dec
lret
pop
mov
xor
test
std
jae
mov
mov
add
jmp
sbb
inc
pop
mov
int3
and
mov
xor
fsubr
std
push
inc
mov
lret
mov
test
sahf
int3
sahf
dec
outsl
xchg
mov
mov
cltd
shll
mov
push
mov
lret
imul
scas
dec
push
or
inc
pop
and
ret
scas
cmp
adc
sbb
shll
fwait
lcall
fstpt
xor
shll
sub
jecxz
scas
pop
sarb
adc
add
lret
addl
cmp
mov
inc
lret
xlat
pop
jle
sub
adcb
push
stc
or
lret
mov
mov
icebp
icebp
jle
pop
xchg
mov
push
outsl
gs
sbb
push
jno
mov
cld
fs
or
call
or
cmp
dec
inc
addr16
cmp
andb
cs
sahf
lds
dec
inc
pushf
sarb
out
int3
gs
inc
fsts
aas
push
jns
pop
push
add
addr16
ret
inc
xchg
xor
inc
iret
pop
xchg
fsubrs
mov
fstpl
es
lret
js
popa
mov
push
mov
mov
inc
mov
xor
xor
mov
aam
pop
jnp
jmp
xor
divb
loopne
test
cmpb
pop
xor
xchg
lods
outsb
outsl
mov
cmp
adc
dec
sub
shl
pop
xchg
or
dec
xor
inc
and
lahf
xor
fwait
xor
inc
mov
inc
and
out
cld
push
pop
mov
cs
xchg
mov
mov
nop
pop
lret
lds
pop
push
bound
xchg
loopne
add
push
jne
cmp
mov
jle
jg
dec
lock
loopne
pop
clc
dec
dec
adc
int
scas
mov
sahf
cltd
mov
test
fistps
mov
mov
xchg
and
inc
xor
push
inc
rol
lret
into
and
cmp
add
icebp
testb
push
add
scas
je
dec
jge
orb
in
inc
loope
int
pop
lds
adc
mov
fidivl
lods
ds
add
into
push
push
inc
dec
dec
add
jb
loopne
test
cld
arpl
mov
pushf
lret
and
scas
leave
pop
bound
xchg
dec
stos
inc
rorb
cld
pushf
imul
push
sbb
push
xchg
out
xchg
push
iret
adc
or
nop
inc
add
pop
mov
mov
movsb
test
lret
cwtl
and
cld
cmp
repz
ficoms
xchg
adc
xchg
data16
or
in
cld
pop
daa
mov
sbb
iret
mov
in
mov
pop
sub
sti
adc
or
or
mov
mov
aas
ja
xor
pusha
mov
int3
inc
ret
popa
loope
mov
pop
cli
mov
loop
mov
loope
cmpsl
pop
icebp
movb
fstl
push
or
les
aam
push
add
cmp
cmp
je
fbstp
popf
mov
jnp
std
movsb
push
dec
inc
std
stos
shll
call
shl
fwait
ljmp
call
mov
jnp
pop
inc
in
test
cwtl
xchg
cs
push
insb
out
dec
xchg
hlt
or
sbb
add
jns
xchg
pusha
mov
push
pop
jbe
or
into
test
lcall
and
inc
push
mov
and
ret
std
stos
jbe
xchg
xchg
aad
sti
fwait
push
in
arpl
adc
dec
imul
iret
in
test
fs
sub
aam
sahf
cld
pop
xchg
in
xor
sarb
xchg
repz
mov
pop
testl
and
mov
hlt
adc
loopne
sti
mov
repz
daa
sub
icebp
fsubl
sub
aam
in
pop
out
sbb
xchg
out
adc
rcl
pop
ffreep
jecxz
stos
push
mov
jbe
pop
sub
jbe
in
loop
push
lea
xchg
dec
push
jmp
lcall
jl
and
je
je
rcll
jns
fdiv
xor
mov
out
push
inc
lods
sbb
mov
outsl
sahf
pavgw
mov
mov
mov
xchg
jns
push
out
clc
in
repz
jl
jae
add
out
bnd
pushf
mov
jecxz
sub
ljmp
ja
cmp
fdivp
daa
leave
lock
push
add
das
adc
adc
pop
xchg
cld
mov
jns
fsqrt
aam
sarb
in
jmp
pop
idivl
ror
scas
jae
shl
add
mov
inc
mov
aas
add
or
insl
fs
mov
in
lret
mov
pop
fiaddl
stos
mov
adc
inc
ljmp
mov
arpl
rolb
gs
clc
pop
mov
xchg
adc
in
es
je,pn
jle
test
outsb
int3
sub
push
lods
pop
fists
jecxz
in
adc
out
stc
ds
xor
int
movsb
cli
shrb
stos
outsl
cmp
fmulp
test
dec
sbb
popf
es
xchg
jns
and
jnp
xlat
jecxz
arpl
xchg
pop
test
notl
lret
sub
fsubs
mov
xchg
mov
inc
shrl
lods
xchg
jae
mov
repnz
sub
jp
pop
mov
std
xchg
fistl
pop
cmc
fwait
ror
es
mov
lods
jmp
or
adc
stc
cmp
xchg
sub
mov
movsl
stc
stos
push
lods
lea
je
pushf
and
push
outsl
in
jae
sbb
xchg
je
addr16
sub
fdivl
inc
pop
imul
lcall
repz
jne
mov
adc
add
hlt
push
xlat
inc
cmp
lret
lods
insl
mov
pop
jmp
cld
push
cmpsl
ss
gs
mov
or
mov
mov
stos
icebp
pop
mov
jmp
lods
outsb
jnp
inc
fs
pop
mov
ss
dec
push
hlt
movsl
inc
enter
push
dec
add
in
int
inc
leave
sub
cs
mov
pop
jge
adc
js
pop
inc
movsb
jp
jnp
ret
adc
cmp
inc
lods
hlt
sub
stc
in
dec
push
orl
mov
loopne
adc
push
pop
fcmovnbe
adc
outsb
xchg
hlt
jecxz
dec
and
test
das
jg
xor
hlt
or
stos
lcall
cli
decl
mov
sub
hlt
push
push
jecxz
xor
pop
push
nop
mov
in
loope
rorl
fs
jle
adc
mov
rcrl
or
sbb
mov
shrb
jg
dec
enter
xor
jecxz
sbb
mov
xchg
mov
inc
xor
push
cmpb
cs
mov
in
jbe
lea
add
negl
xor
fstpl
int
xor
mov
sti
jge
mov
int
dec
clc
pop
bound
pop
sahf
cli
xchg
fmuls
mov
jmp
lods
mov
mov
xchg
in
cmc
sub
arpl
ljmp
movsb
adcb
mov
pop
mov
dec
test
insb
cmp
leave
sti
addr16
cmpsb
scas
inc
dec
clc
mov
add
in
adc
jno
pop
mov
jnp
mov
arpl
cmc
and
fisubl
dec
jno
xlat
sti
ss
dec
mov
push
and
sbb
aaa
dec
arpl
and
inc
xchg
and
out
mov
xor
loopne
les
jb
adcb
je
cmp
test
ja
dec
add
adc
int3
sbb
mov
xlat
jl
xchg
outsl
int3
dec
dec
scas
jo
pop
mov
sarb
lock
out
xchg
sub
push
push
sbb
js
jg
lds
lea
not
mov
rcrb
mov
in
fcmovnu
pop
scas
push
not
mov
fsubl
adc
adc
dec
ss
imul
push
push
jae
push
test
lods
pop
icebp
insb
push
xchg
out
inc
or
lret
pop
or
and
ret
jmp
pop
in
pop
add
fsubrs
outsb
mov
mov
add
push
sub
ja
lock
push
std
jmp
cmpsb
dec
idivb
mov
out
pop
nop
in
std
cmp
and
pop
add
fnsave
hlt
gs
add
aas
xor
inc
push
jmp
in
pop
scas
notb
pop
xor
mov
push
into
nop
pop
xchg
enter
xchg
scas
loope
xchg
out
add
lods
adc
pop
xchg
sbb
lods
mov
inc
mov
stos
mov
xchg
mov
jns
pop
fiadds
sub
dec
das
pop
and
test
inc
sub
pop
jle
pop
clc
cmp
xchg
das
in
mov
pop
pop
cmp
jno
dec
inc
mov
loopne
pop
xor
adc
shll
dec
dec
jns
repz
mov
add
jns
xlat
jns
cmc
push
addr16
sarl
jne
jg
push
cmpsb
inc
add
jb
sub
push
cmpsl
mov
inc
xchg
jbe
mov
cld
mov
xchg
fistpll
mov
mov
es
stc
insl
lock
xor
aaa
pushf
mov
dec
push
mov
lods
leave
mov
imul
es
insb
ret
xrelease
or
xchg
dec
lock
xorb
lcall
negl
pop
es
shll
stc
ror
push
sbb
dec
jle
mov
fimull
nop
pop
jno
dec
stos
rcll
add
xchg
int3
lods
mov
js
add
sbb
mov
xor
jmp
xorb
dec
adc
sbb
movsl
pop
cmp
adc
shll
push
cmp
daa
lea
stos
sub
cs
inc
inc
cmpsl
and
jmp
jge
sbb
hlt
fwait
sub
dec
push
adc
lods
cltd
rcl
mov
cld
mov
mov
push
stc
mov
and
push
sub
cmp
push
inc
xor
pusha
xor
imul
aas
sub
xchg
stos
add
pop
push
and
rol
xlat
mov
lcall
adcb
clc
popa
enter
cmc
movsl
inc
jle
jmp
push
xchg
push
adcl
leave
lret
lret
pop
jmp
mov
dec
sti
dec
std
mov
mov
fcomip
pushf
cmp
js
ret
or
pop
mov
lahf
pop
or
mov
mov
push
xorb
inc
lock
bound
push
xorl
in
outsb
inc
testl
fistpl
mov
pop
dec
scas
sbb
jno
arpl
push
push
sub
pop
or
inc
mov
lods
sahf
sbb
inc
cmp
mov
das
stos
and
fidivl
repnz
push
fs
cmp
sub
and
jle
jge
aas
adc
add
test
cwtl
add
stos
in
add
pop
out
cwtl
gs
mov
das
xor
mov
sub
mov
xor
out
pop
fisubs
mov
gs
fists
cmpsl
jmp
mov
inc
add
fwait
addb
pop
push
lea
push
mov
out
push
in
xchg
jae
cmpsb
add
adc
aad
lea
sub
scas
or
es
scas
fs
dec
push
mov
xor
sbb
push
js
xor
subb
push
cmp
fsubs
push
in
inc
out
scas
mov
push
sbb
pop
mov
mov
push
fildl
out
mov
mov
dec
aad
test
push
xchg
fisubl
sub
popa
sub
shlb
adc
xor
loope
fbld
xor
and
lcall
enter
mov
rcrb
cs
add
stos
add
movsb
imul
xor
movsb
sub
pop
xchg
or
xchg
in
sbb
and
scas
inc
jecxz
and
mov
push
jmp
fldenv
jno
xchg
cs
mov
cltd
mov
adc
in
mov
cmc
aad
fcmovu
mov
pop
pop
push
sbb
inc
xor
push
scas
sub
sub
xor
adc
mov
andl
dec
push
loope
push
push
pop
mov
std
inc
inc
dec
adc
mov
push
pop
inc
rorb
xor
xchg
pop
clc
xchg
hlt
lods
and
mov
bound
stos
jge
aaa
rcrb
push
dec
repz
fbld
iret
addb
pop
in
xor
pushl
jo
sub
jmp
clc
outsb
adcb
and
faddl
cmc
cld
jo
test
je
pop
faddl
aas
leave
jge
mov
and
push
fcompl
dec
pop
dec
rorl
mov
mov
mov
push
inc
push
push
shl
sti
xorl
loopne
movsb
mov
enter
mov
mov
dec
ss
jmp
scas
xor
iret
sbb
aas
mov
dec
jae
xchg
mov
mov
je
repnz
add
pop
test
add
pop
and
rol
dec
cltd
into
jl
inc
addr16
xor
lea
loope
rorb
mov
in
fisubs
sahf
outsl
test
cs
testb
arpl
cmpsl
fsubl
mov
push
mov
orl
sahf
fnstenv
sbb
in
cmpsl
adc
sbb
mov
dec
cwtl
jno
xor
pause
mov
push
inc
scas
xchg
sub
sub
pop
cmp
xchg
pop
cmp
scas
push
sub
fs
imul
sbb
sti
iret
pop
inc
lret
iret
mov
addb
lods
popf
sub
rcrb
cmp
call
sub
shrl
or
mov
push
scas
adcl
pushf
mov
dec
lret
cmp
outsb
in
dec
gs
lahf
sbb
mov
ret
mov
mov
clc
test
inc
jbe
and
adc
xor
xchg
add
push
ja
sub
sub
xor
adc
fnstcw
mov
jecxz
les
pop
outsl
call
fadds
xor
xor
cmp
jg
es
xchg
mov
das
pusha
mov
pop
sbb
adc
or
mov
xchg
add
push
jns
jo
dec
aas
jge
mov
arpl
mov
adc
scas
mov
pop
lock
fs
mov
pop
rclw
mov
cmpsb
insb
jnp
imul
mov
jmp
lock
dec
imul
into
aam
das
inc
pop
mov
sti
mov
cli
mov
push
imul
fucomi
adcl
aam
fwait
push
push
jecxz
pop
sbb
ja
adc
fwait
mov
adcb
mov
lock
xlat
or
das
das
test
jns
cwtd
or
jp
lods
imul
lcall
insl
or
lds
and
sbb
lcall
pop
mov
es
int
mov
sbb
add
push
mov
clc
popf
adc
cli
mov
lea
popa
push
jl
test
xchg
cmpsb
aas
movsl
gs
adc
jno
jmp
dec
repz
dec
cs
and
addr16
cmp
gs
sbb
mov
in
dec
in
pushf
jae
inc
or
jecxz
test
mov
jge
jmp
dec
pop
push
pushf
in
jo
lods
jl
fldt
pusha
inc
jb
pop
cmpsl
xor
inc
idivl
inc
test
out
xchg
push
aas
mov
adc
add
cltd
repnz
mov
cli
xchg
jmp
sub
sub
in
pop
pop
dec
je
inc
mov
mov
out
xchg
into
cltd
push
test
add
mov
mov
and
pop
jbe
inc
hlt
out
in
aad
inc
jp
inc
lret
cltd
jb
and
or
and
dec
int
xor
cmp
jle
push
jb
fdivl
lahf
outsl
jecxz
or
inc
xor
mov
or
jle
sbb
shlb
aad
fnstsw
out
std
or
in
push
idiv
mov
rorl
fdivs
test
fs
push
xor
pushl
movb
loopne
dec
lods
xchg
xor
dec
sub
int
pop
test
pop
jb
add
mov
dec
shr
mov
push
push
clc
push
adc
xlat
into
dec
in
inc
xchg
fwait
inc
loope
sbb
imul
cmpsl
lcall
dec
jl
pop
jno
rcrb
roll
popf
xor
in
cltd
stc
rcrb
lret
int
mov
into
push
fwait
in
test
mov
les
ret
add
xor
xor
adc
js
sub
rcrb
dec
push
rcl
adc
in
repz
stos
mov
rcrl
jnp
dec
push
dec
mov
adcl
pop
pop
fsts
mov
fisubl
xor
cmp
loop
pusha
fdivrs
lcall
in
daa
fsubs
hlt
out
sub
mov
pusha
xor
daa
adc
sbb
dec
movsb
lret
xchg
sbb
pop
incb
mov
out
mov
aas
out
pop
cmp
pushf
lods
sahf
pop
push
mov
aam
ss
push
icebp
cmp
adc
mov
jno
dec
sub
arpl
pop
mov
ret
fwait
sbb
dec
sbb
cli
xchg
icebp
jp
xchg
arpl
lahf
or
and
cmpsb
and
cmp
cmp
lods
mov
push
stos
mov
vpinsrw
fnstcw
dec
and
push
lret
fldenv
int3
jg
xchg
das
inc
in
jge
loope
lret
nop
mov
aaa
dec
and
push
jmp
jg
adc
hlt
push
cli
cmp
test
inc
adc
lcall
leave
repz
xchg
cli
cltd
movsb
add
in
imul
and
sti
test
dec
ret
mov
ret
outsl
or
loop
testl
mov
push
sbb
cs
vpunpckhwd
fildl
add
sbb
adc
pop
add
popa
cltd
outsb
orl
dec
cld
lods
and
pop
js
imulb
inc
adc
mov
xchg
dec
mov
pop
loope
mov
fistpll
lods
stos
aaa
cmp
out
dec
cmp
repnz
inc
cs
fisttpll
pop
push
imull
or
mov
stos
mov
shll
sub
jle
adc
or
rcrb
mov
mov
lret
ljmp
ret
and
xchg
int3
cmpsl
mov
mov
fs
dec
imul
clc
sub
lret
es
inc
movl
dec
dec
sub
rcll
shlb
pop
jb
fisubl
push
lods
dec
xor
test
or
icebp
lret
outsb
fdivl
pop
jp
addr16
xlat
jge
fimull
xor
mov
nop
sbb
aad
jp
push
adc
roll
data16
inc
repz
sbb
in
jne
dec
test
sahf
lcall
jnp
cmpsb
repz
outsl
dec
jle
and
rcrl
lret
mov
add
jo
dec
popf
xchg
xor
and
cmpsl
jo
arpl
shrl
mov
add
jns
call
jp
add
dec
lret
popa
fnstcw
adc
mov
adcl
jae
add
or
scas
jno
push
fisubrs
add
add
and
mov
jae
into
cmpsl
mov
aaa
adc
and
lcall
ret
xchg
sbbl
les
pop
cld
std
hlt
loopne
leave
fidivs
les
lock
sub
push
mov
repnz
xor
imul
pusha
in
dec
push
mov
sub
jmp
je
mov
cmp
mov
test
cs
inc
mov
add
std
inc
or
adc
scas
sbb
xchg
cmp
pop
fistpll
cmp
das
xchg
adc
fldcw
mov
call
push
flds
mov
jb
or
dec
cmpsl
repnz
xor
pop
cs
add
inc
stc
and
cmp
gs
add
push
or
cltd
mov
das
xchg
cli
insb
add
sub
sahf
rol
scas
jecxz
xor
addr16
push
insb
clc
in
pop
dec
sbb
pop
jp
ja
add
cli
mov
and
xor
sub
push
jp
inc
xor
jne
push
cmp
ret
popa
ffree
push
jg
cmp
lcall
push
insl
out
xchg
mov
mov
xchg
sahf
jno
decl
test
mov
mov
popa
xor
push
iret
jle
fistpll
shl
imul
aaa
dec
pusha
xchg
scas
ds
xchg
in
loop
mov
arpl
lods
sbb
loopne
mov
sbb
xchg
clc
mov
sub
pop
test
mov
std
adc
addb
inc
pop
stos
ds
and
and
sbb
adc
test
xor
jl
dec
aaa
ljmp
xchg
push
daa
pop
addr16
ret
cmp
sub
push
and
xchg
lcall
int
daa
out
adc
mov
insb
lock
or
mov
fidivs
and
adc
xchg
mov
lret
xchg
je
xor
mov
cmp
xor
aad
stc
fldt
jno
into
je
ret
push
push
movsb
dec
fdivl
call
int3
dec
mov
movb
clc
mov
jnp
push
jns
icebp
push
aas
jbe
xchg
clc
xchg
pop
cmp
dec
test
imul
push
jmp
sbb
sbb
adc
push
test
dec
jne
shll
cmp
imul
cmp
cmpsl
sti
xor
or
pop
movl
fwait
in
push
sub
int3
addr16
dec
fdivs
sub
sbb
pop
jne
fwait
mov
lret
adc
cltd
dec
lea
subb
clc
xor
ret
cli
scas
pop
or
mov
dec
out
cwtl
mov
add
pop
insl
cli
push
and
sbb
and
xor
pop
xchg
xchg
xor
jbe
inc
test
cmp
or
repz
xchg
mov
lods
daa
lea
test
inc
into
pushf
pop
icebp
out
ss
movsl
cltd
inc
shl
rorl
in
ss
pushf
or
pop
lcall
and
aaa
clc
daa
add
dec
sbb
ja
gs
or
pop
xor
dec
sbb
fisubrs
scas
insb
pop
cmp
mov
lret
rorb
push
gs
in
sub
jge
or
test
mov
lret
xchg
dec
clc
xchg
adc
popf
mov
jl
imul
das
lea
add
popf
sub
fwait
or
ficomps
loope
mov
pop
jge
test
ja
shl
fstpl
rcrl
cmp
xor
out
adc
rclb
mov
pop
mov
testb
sub
ss
sub
cmp
mov
lcall
inc
pop
push
hlt
call
sbb
lods
mov
add
push
dec
mov
jnp
add
xor
ss
dec
xchg
mov
test
push
not
fsubrs
push
pop
enter
test
lcall
xor
pop
enter
popf
ret
jns
inc
push
imul
in
sbb
aas
shrb
adcl
xlat
cwtl
stos
cmp
aad
jg
pop
inc
pusha
rcl
and
icebp
push
sbb
jnp
and
mov
dec
dec
cmp
push
and
pusha
mov
fcomps
mov
add
aam
push
or
sbb
xchg
fisubl
mov
cmp
xor
mov
jmp
adc
or
mov
mov
fldl
sub
shll
lea
lock
inc
gs
das
jg,pt
in
xchg
push
dec
push
out
ror
and
stos
lea
mul
push
sub
xor
andl
adc
adc
fiaddl
pop
scas
cmc
pop
icebp
jmp
aam
dec
xlat
pop
out
and
inc
repz
cli
add
test
or
sub
out
jge
cmp
xchg
pop
in
pop
pop
test
or
fldt
in
xor
dec
pop
ror
ljmp
pop
insl
push
andl
mov
mov
test
xchg
je
push
testb
and
leave
shlb
jne
add
or
push
jbe
daa
xchg
and
dec
fisttpll
mov
leave
inc
push
cli
lods
imul
cli
out
xchg
or
mov
push
fldcw
sub
pop
scas
rclb
cmc
jns
cld
push
push
imul
out
push
iret
dec
cmpsl
psubusb
xchg
inc
pushf
dec
hlt
adc
es
xchg
cli
and
push
xchg
mov
lods
sbb
ret
mov
mov
ret
xchg
sbb
adc
mov
pop
cwtl
rorb
jle
movups
xchg
mov
stc
lock
sbb
loopne
sbb
repnz
sub
inc
sub
jmp
jb
and
leave
mov
sub
adc
aaa
jns
aas
rclb
lock
js
lahf
rcll
mov
lret
sub
push
aad
mov
mov
jbe
fwait
dec
imul
stos
scas
and
cmpsb
adc
inc
fcoml
cmpsl
jle
dec
cwtl
jno
add
inc
cmp
push
adcb
jbe
inc
sub
cmpsl
fadds
ss
das
push
pop
lds
dec
xchg
and
push
pop
xchg
out
int3
xchg
cmc
bound
cmpsb
repz
mov
jno
testl
mov
jnp
cltd
dec
jns
test
adc
add
inc
pop
mov
les
js
jae
sbb
fidivrl
xlat
xor
xor
pop
push
dec
mov
in
dec
js
lods
daa
pop
mov
enter
fsubrs
out
push
cltd
sahf
rorb
and
int
faddl
fisttps
inc
mov
sarb
cmp
mov
mov
pop
mov
mov
lahf
add
mov
idiv
je
cmp
push
sub
mov
out
outsb
std
push
mov
fadds
das
outsb
sbb
pop
fisttpl
mov
dec
xor
dec
aad
pop
jb
and
aas
dec
jmp
xchg
cmp
fnstcw
fiadds
in
cmp
stc
lcall
sub
addr16
ret
repnz
and
push
hlt
mull
jbe
inc
mov
cmpsb
add
cmp
js
jl
jbe
mov
or
xchg
movsl
sub
pusha
clc
dec
jb
inc
ljmp
cwtl
ror
es
roll
aas
mov
push
xchg
add
dec
leave
xor
mov
cmpsb
ret
mov
int3
popa
dec
pop
loop
out
in
push
xor
fwait
jae
pop
or
add
in
mov
add
xchg
insb
dec
mov
ss
and
movsl
stc
mov
lret
nop
cmpsb
andl
mov
push
loopne
add
cmp
xor
add
shr
push
xchg
ret
subl
test
add
push
sbb
in
inc
nop
or
push
or
xor
lret
mov
clc
in
pop
mov
inc
jge
stos
jle
mov
push
ljmp
pop
fsubs
jg
aaa
pop
push
inc
xchg
sub
dec
mov
sub
andl
js
or
sub
cmp
push
dec
stos
and
fmuls
fst
pop
sub
lret
fs
pop
test
cmp
push
test
out
imul
mov
orb
push
lea
movsl
or
sbb
adc
or
pop
inc
fimuls
lret
sub
pop
jge
lea
sbb
push
mov
out
jmp
faddl
bound
or
icebp
lea
sbb
xor
and
xor
adc
fwait
cmp
dec
pop
nop
dec
xchg
and
movsl
mov
dec
ret
ja
adc
dec
sbb
es
adc
push
dec
add
mov
in
lret
add
into
icebp
xlat
push
add
pop
fildl
sarb
dec
js
jne
dec
jp
iret
lods
and
subl
pop
int
jnp
pop
mov
mov
jl
and
sbbb
cli
pop
imul
sahf
pushf
mov
orb
pop
push
mov
add
and
fwait
dec
sbb
jbe
pop
mov
std
dec
xor
addb
into
les
insb
mov
pop
in
mov
faddp
divb
mov
mov
lods
mov
mov
mov
mov
mov
or
ja
jae
push
add
cli
dec
jb
mov
mov
xchg
add
add
mov
out
arpl
cltd
add
lea
ret
xchg
push
push
sub
lcall
fstpl
jl
out
loope
arpl
jmp
add
inc
rclb
mov
stos
jns
insb
xor
jnp
ja
xchg
push
lock
xor
aaa
fisubrs
mulb
hlt
pop
pop
out
dec
xchg
xchg
and
cmp
das
addr16
fcomps
stc
xchg
data16
dec
pop
arpl
push
jne
adc
js
data16
inc
in
cltd
loop
xchg
shll
aas
pop
cmp
fistpl
mov
aas
add
dec
xlat
cltd
or
cli
es
xlat
push
in
inc
adc
outsl
xchg
data16
std
outsb
xchg
cmp
nop
negl
shll
fdivl
mov
pusha
mov
xchg
cs
cs
lahf
insb
push
push
xor
or
outsl
ss
gs
testb
outsb
add
adcb
xor
cmp
lret
add
jl
jg
jnp
add
bound
dec
inc
pop
mov
adc
jne
xor
mov
xor
or
mov
push
and
jle,pn
leave
xlat
mov
out
testb
mov
inc
sbb
out
jg
clc
cmpsb
outsb
es
jae
fnstcw
imull
or
clc
or
repz
mov
cmp
aaa
nop
mov
sbb
or
jns
les
int
leave
inc
fadds
mov
mov
int3
add
test
dec
pop
adc
es
and
orb
jl
cs
in
popf
lds
push
xlat
add
lret
pop
or
test
adc
push
mov
jne
push
loope
dec
movsl
xchg
pop
sub
dec
jns
dec
pop
push
test
dec
pop
js
inc
aas
mov
inc
inc
leave
inc
enter
add
fnstcw
pop
or
or
out
xchg
lret
nop
cmp
mov
pop
push
fstl
mov
sahf
jl
sahf
mov
mov
popf
mov
ror
push
fildl
ja
pop
mov
into
psrld
xchg
mov
lds
mov
dec
fildll
ja
jmp
jno
into
in
xchg
sbb
cmpsl
pop
or
jmp
mov
fiaddl
cmc
pop
icebp
jl
push
xor
mov
push
fbld
fidivl
adc
mov
je
or
xor
icebp
dec
ljmp
test
xor
sub
addr16
add
popa
leave
add
xchg
push
stos
mov
jp
ljmp
icebp
and
sar
cltd
aaa
cltd
sbb
pop
xor
cmp
jmp
sbb
ror
jl
pushf
ret
add
and
out
jnp
mov
mov
jp
in
xor
fwait
bound
jno
loopne
leave
sub
adc
sbb
aam
pushf
sub
cs
xchg
jae
pop
mov
outsl
push
mov
pop
mov
cli
push
pushf
mov
mov
jmp
push
xchg
sarb
push
in
cmpsb
jecxz
arpl
jbe
out
mov
sbb
and
icebp
clc
decb
lret
in
and
scas
call
in
push
push
cmpsb
jg
std
jns
inc
pop
lea
mov
and
ret
in
mov
pop
icebp
xchg
xor
jl
add
pop
pop
call
xchg
js
je
popa
cmp
cmp
or
repz
stos
lock
mov
mov
xchg
rorb
cmp
xchg
add
or
lods
in
xor
push
pop
ljmp
jns
arpl
inc
xor
imul
pop
add
and
inc
lock
ret
cmpsb
mov
push
fsubp
fidivrl
sarl
out
mov
dec
xor
or
idivl
adc
inc
xchg
push
sub
insl
cmp
dec
sbb
sub
lea
repnz
or
outsl
mov
jge
cmp
imul
sbb
fs
sbb
stos
pop
pop
fmul
clc
ret
or
mov
xchg
xchg
test
das
mov
cmp
clc
mov
add
mov
and
loopne
pop
daa
insl
pop
pop
mov
push
mov
xor
adc
push
enter
scas
mov
enter
sbb
mov
cmp
mov
into
stc
fsubrl
movsl
jbe
jae
dec
outsl
cmc
gs
push
push
sub
xchg
shll
hlt
or
out
divb
jns
lahf
push
in
pop
loopew
fs
mov
lret
xchg
aam
ror
pop
arpl
pop
movsb
sti
dec
pop
mov
orb
mov
lds
mov
clc
or
mov
ds
mov
imul
test
lahf
or
and
jnp
add
dec
subps
in
mov
test
adc
xchg
roll
jle
lret
roll
aaa
repz
dec
jb
pop
call
cmpsl
pop
or
sbb
cmp
mov
mov
fnstenv
in
dec
lods
pop
out
cmp
stc
xlat
je
mov
test
dec
add
jnp
mov
sub
ljmp
orl
adc
fsubl
inc
jecxz
lods
aam
push
push
out
dec
mov
mov
push
ret
rorl
outsb
stos
nop
mov
mov
xchg
jns
xor
stc
imul
lret
imul
cld
adc
add
push
jmp
cmc
and
in
pop
ror
cmp
mov
pusha
pushf
sbb
adc
int
dec
push
dec
mov
popf
sub
jg
inc
push
mov
mov
fstl
or
ja
push
lock
adcb
or
out
outsb
push
jb
iret
stos
movsl
ja
jns
popa
scas
mov
dec
mov
sbb
es
out
mov
cmpsb
pop
jecxz
popa
jnp
jecxz
cwtl
push
cmp
inc
jg
push
lods
pop
sub
sub
xor
lods
mov
ds
jae
jns
test
test
repnz
add
mov
mov
mov
lret
fldcw
inc
adcl
mov
mov
cwtl
push
lods
std
int3
shlb
mov
aam
push
jbe
mov
push
sbb
mov
out
aaa
aaa
pop
shrl
sahf
push
xchg
loopne
add
enter
mov
dec
dec
push
addr16
stc
fisubl
insl
imul
insb
out
adc
cmp
movq
mov
test
out
mov
sub
hlt
cmp
lea
insl
push
stos
decl
negl
lret
pop
add
jecxz
and
int3
or
pop
popf
mov
mov
jp
cs
and
loop
jp
sahf
xchg
push
test
ss
or
inc
and
test
jp
imul
sti
mov
push
mov
xchg
push
dec
fldenv
pushf
pop
inc
jp,pt
and
mov
xchg
and
inc
or
mov
testb
in
jns
push
iret
das
lcall
sbb
jns
dec
mov
sahf
push
or
xchg
movsb
in
insb
std
sub
stc
xchg
and
aas
mov
in
mov
mov
pop
cmp
insb
mov
rclb
add
mov
dec
mov
jg
call
scas
mov
inc
enter
mov
aad
and
cmpsb
je
testl
mov
ds
lret
inc
mov
push
xchg
jb
dec
push
outsl
in
add
dec
call
jmp
inc
mov
mov
fisubs
test
scas
jne
xchg
mov
jmp
mull
mov
std
or
sbb
xchg
xchg
cmp
in
lds
jl
outsb
mov
and
lods
lock
or
into
stos
xor
xchg
jno
sub
nop
sub
sbb
shrl
pusha
inc
sbb
aas
pop
cmp
mov
push
push
lcall
mov
xor
int3
popa
ss
push
jb
inc
cmp
jle
mov
bound
pusha
inc
mov
repz
pop
pop
ret
xchg
scas
xchg
dec
xor
lods
sbb
js
fidivl
adc
push
and
inc
push
test
ja
inc
inc
jge
enter
jmp
xchg
lds
call
stos
xchg
addl
stos
enter
aam
shlb
stc
repz
in
push
sti
lods
or
adc
mov
jno
pop
mov
pop
and
daa
cwtl
in
lcall
aaa
or
shrb
in
push
sbbl
iret
cwtl
mov
out
loopne
and
mov
push
imul
pusha
add
ret
outsl
jae
test
arpl
add
subl
cmp
sub
fldl
inc
jmp
dec
cmp
mov
fisubrs
cmpsl
stc
scas
test
lods
adc
sub
das
popf
dec
mov
cmp
and
or
incb
mov
sub
lea
add
lahf
jo
jnp
mov
divl
fldenv
cmpsl
mov
cmp
aam
mov
add
jno
or
jns
lods
mov
mov
ret
or
jo
dec
push
or
sbbl
or
out
movsb
in
jp
add
and
popa
push
xchg
lock
jp
mov
test
mulb
aad
movsb
aaa
ds
ds
adc
imul
sub
out
scas
mov
xchg
lods
fistpl
pop
dec
adc
pop
cmp
fistl
mov
cmp
cmp
ficomps
mov
add
adc
pop
or
push
ret
icebp
push
movsl
clc
int
out
adc
movl
sbb
in
jg
clc
fsubrl
adc
sub
adc
mov
cli
fbld
dec
lds
in
dec
mov
xchg
lock
dec
jbe
add
xchg
sbb
sub
pop
adc
jae
push
xor
insb
pop
pop
jbe
out
add
movsb
push
mov
sub
ja
clc
scas
movsb
cltd
mov
fists
inc
jo
imul
imul
enter
ret
pusha
pusha
xor
dec
in
xchg
int3
enter
sbb
incl
cmpsb
hlt
fisttpl
mov
int
mov
fstl
pop
pop
mov
or
jmp
out
pushf
sub
sbb
jnp
and
xor
out
out
pop
mov
in
mov
inc
test
insl
xchg
push
repz
fisttps
mov
int
fmull
sbb
jae
in
dec
adc
cmp
roll
test
ffreep
js
mov
cmpsb
cmp
loop
cmp
inc
outsb
adc
test
jo
jp
scas
adc
xchg
std
or
or
pop
jb
mov
fs
shll
dec
aas
mov
and
jns
imul
dec
xchg
jae
loopne
jmp
daa
add
jae
xchg
dec
mov
mov
fbld
imul
dec
adc
pop
es
sbb
scas
and
xchg
add
push
add
push
adc
cwtl
aaa
push
jecxz
loop
adc
push
aas
pop
add
cli
push
je
xor
mov
pop
xor
mov
movsb
pop
outsb
xor
out
pop
sar
jmp
add
sub
jbe
mov
sub
or
out
fiadds
mov
xchg
pop
mov
clc
call
sbb
cmp
gs
add
and
cmpsb
push
fbld
sbb
xor
mov
sub
sub
repnz
nop
aaa
cmp
stos
outsl
icebp
loope
pop
sub
dec
fldl
push
xorl
mov
ljmp
int3
jg
loop
sbb
ficoms
ret
xchg
repnz
xchg
mov
sub
xchg
mov
je
adc
inc
jecxz
movsb
repz
leave
xchg
adc
pop
cltd
or
pop
enter
cmpsl
mov
xchg
push
les
pusha
xchg
ret
aaa
mov
arpl
jge
adc
mov
mov
sbb
push
sbb
ljmp
cmp
sub
push
lods
popf
xor
mov
dec
push
lret
xchg
sub
int3
mov
adc
sbb
pusha
jne
mov
push
addr16
cmp
pop
adc
push
xor
iret
aad
jg
scas
pop
in
lret
ljmp
pop
cmp
movsl
subl
sbb
xor
fwait
popa
movsb
inc
sub
adcl
inc
cltd
mov
pop
outsb
arpl
fstp
ds
mov
hlt
sub
sub
aaa
lret
int
sub
les
sub
arpl
daa
stos
les
push
mov
negb
into
daa
xchg
stos
fwait
rcll
lods
ljmp
adc
cmc
mov
ffreep
ret
push
dec
cmpsl
adc
in
adc
xchg
dec
cwtl
add
sub
cld
fwait
popa
xchg
sbb
push
sbb
les
cwtl
je
imul
out
or
sub
sbb
inc
lcall
call
sbb
shll
push
dec
aam
out
mov
cmp
xor
pusha
es
int
inc
sahf
hlt
and
imul
mov
notl
pop
test
jge
pusha
jb
rcll
jecxz
loopne
inc
mov
iret
dec
out
dec
xchg
sub
jg
inc
inc
push
outsb
sbb
lock
insb
adc
xor
inc
lods
push
jmp
or
cmp
lods
repnz
sub
arpl
in
rorb
push
inc
or
fisubrl
cmp
int3
mov
push
sbb
aad
or
jl
inc
dec
adc
mov
xor
stc
sti
adc
out
mov
mov
aam
out
pop
mov
clc
inc
inc
cmc
iret
leave
imul
call
rclb
jmp
pop
arpl
out
dec
sbb
cmp
adc
enter
mov
or
movsl
jne
add
or
insl
popa
clc
das
int
mov
std
stos
jnp
lea
pop
int
push
xlat
fs
inc
sbb
cmp
mov
int
fidivs
shll
outsl
rorl
das
jae
push
or
idivb
or
ret
movsl
mov
sub
jno
cmp
mov
or
xchg
ljmp
mov
pop
out
decb
fucomp
dec
push
xor
sub
fimuls
iret
mov
popl
call
push
in
dec
or
fcmovnb
mov
sub
bound
and
ds
add
call
popa
mov
rcrl
test
sbb
and
popa
push
scas
push
pop
sbb
fimull
mov
arpl
add
fimull
faddl
jl
mov
mov
jbe,pt
movsl
add
adc
out
mov
aad
push
inc
jecxz
mov
lods
dec
add
leave
jo
or
mov
cli
mov
or
xor
pop
arpl
movsl
jo
inc
paddq
clc
mov
push
addb
mov
push
adc
sbb
cmp
cmpsb
loop
mov
jnp
xchg
cmp
pop
adc
out
pop
inc
jg
mov
push
jbe
pop
mov
insl
sub
int
and
icebp
inc
mov
xlat
inc
mov
leave
add
cmpps
jmp
jg
mov
leave
add
lods
rcr
iret
push
mov
fists
jnp
lods
sarb
inc
cmp
push
xchg
cmpsb
inc
in
fistl
push
sbb
dec
jbe
push
push
out
sub
jg
sbb
sbb
clc
mov
dec
scas
xor
xlat
icebp
aad
popf
int3
in
out
out
cmp
std
pop
ja
xor
sub
xor
xor
sub
and
insl
xchg
imul
cmp
or
pop
adc
enter
in
dec
or
jge
out
push
sub
cmp
adc
sbb
movsb
xorb
jae
ret
rcrl
lret
xor
jbe
fmulp
push
cltd
imull
stos
sbb
dec
jl
hlt
cmp
stc
jb
pop
outsl
insb
pop
mov
and
adc
mov
arpl
addr16
cli
mov
xorl
mov
fists
and
xchg
sti
adc
inc
push
inc
dec
or
movsl
mov
fisttpll
mov
add
xchg
mov
fwait
mov
xchg
and
inc
js
imul
js
fwait
in
cmp
leave
add
mov
cltd
cld
movsl
fsubl
jo
outsb
rcl
sbbl
pop
or
pusha
xchg
adc
add
pop
or
out
fbstp
lret
test
rcll
fdiv
mov
mov
cmpsl
pop
dec
aaa
in
std
add
sub
mov
sbb
out
mov
aam
es
in
or
pop
es
cmpsb
std
into
mov
sbb
push
repz
xor
int
jmp
dec
out
fsubl
lods
pop
cld
add
add
xchg
push
push
push
call
xchg
or
mov
dec
push
cli
pushf
div
pop
add
pushf
or
ss
jae
leave
out
lcall
insl
jno
add
mov
jecxz
or
mov
adc
lods
xor
jo
cld
add
dec
cmp
jne
ss
xor
sbb
scas
addr16
or
in
or
adcb
imul
stos
cs
pop
cmp
cmp
inc
push
imul
flds
adcl
insl
pop
push
frstor
das
mov
loope
and
sbb
sub
mov
stos
hlt
adc
rclb
adc
popf
or
xchg
push
loop
mov
pop
sbb
and
cli
iret
inc
dec
push
cltd
fisubrs
xchg
aad
ja
jb
cli
sbb
jns
mov
insb
pop
xor
mov
lret
in
jno
mov
in
inc
adc
push
xor
push
cmpl
sub
fildll
rorl
pop
adc
mov
fsub
das
outsl
sub
call
and
mov
or
mov
popf
cmpsl
cmpsl
hlt
push
xchg
stc
pop
in
sbb
add
cmp
push
jp
jo
push
xor
mov
and
lret
sub
push
insl
and
or
sbb
dec
clc
mov
jle
cmpsl
iret
in
push
sub
push
test
cwtl
jmp
scas
pop
aaa
mov
je
jae
sbb
xchg
pushf
mov
inc
inc
xlat
lea
mov
outsl
cmc
mov
pusha
xchg
lock
stc
jecxz
mov
pop
sarb
ret
add
cmp
lods
or
mov
xor
add
sti
fstpt
int3
push
insb
xchg
jle
movb
dec
scas
sub
mov
sub
test
cli
and
outsb
ja
clc
xor
repnz
xchg
js
loop
jo
mov
subb
stc
bound
aam
adc
add
xchg
cmc
xor
int3
push
shrl
pop
inc
cwtl
imul
fisubl
pop
leave
negb
mov
adc
imul
add
xchg
push
pusha
jp
lret
dec
push
pop
hlt
xchg
inc
and
call
and
pop
out
and
dec
mov
xor
dec
arpl
je
movsl
pushf
stos
jae
mov
rcr
lock
or
jbe
jno
pop
inc
push
adc
inc
es
mov
and
mov
xor
mov
mov
mov
dec
enter
jg
sbb
mov
loopne
lret
out
jp
xchg
mov
push
push
andl
push
mov
mov
ret
pop
pop
mov
inc
mov
push
rorl
mov
pop
cmp
popf
std
pushf
mov
es
pusha
pop
insl
sub
outsb
xorl
jnp
ja
movsl
add
int
int
or
test
lcall
int
in
mov
mov
cwtl
jmp
mov
aam
jmp
ficoml
stos
mov
xor
jp
mov
adc
fldenv
sahf
push
call
dec
inc
dec
mov
sbb
cmp
push
cwtl
push
adc
jb
pop
ljmp
pop
sub
adc
sbb
sbb
xchg
adc
in
loop
js
jecxz
leave
pop
xchg
cli
and
idivl
xchg
mov
jbe
bound
js
push
vpcmpeqd
mov
std
mov
test
inc
or
pop
or
push
gs
cltd
test
mov
fwait
xchg
push
pop
andb
rcl
jge
fdiv
insl
sti
mov
inc
fildl
mov
sbb
sbb
rolb
mov
call
dec
stos
add
out
or
dec
loop
xchg
sbb
push
add
loopne
adc
push
vmovntpd
and
dec
and
or
jnp
push
push
fsubrs
dec
add
adc
pop
scas
dec
adc
je
xor
inc
xchg
fdivrs
adc
cmp
lret
jno
ja
aaa
je
mov
push
jne
add
stc
rcrb
dec
sub
pop
sbb
aad
add
and
dec
fistpll
adc
shlb
fisubrl
test
jns
shlb
and
mov
sarb
mov
mov
push
nop
add
popf
fwait
pop
sub
push
mov
mov
outsl
sbb
or
cli
les
scas
xchg
dec
pusha
cmp
adc
stos
xchg
xor
jb
add
orb
sbb
mov
pop
push
cltd
inc
xor
cld
push
popa
in
les
push
push
sbb
aas
hlt
jbe
add
cmpsl
fadds
mov
enter
in
iret
dec
sub
inc
xchg
pop
shlb
cmp
mov
pop
mov
xlat
or
dec
sub
sbb
dec
mov
test
insb
adc
jo
std
das
mov
scas
ret
scas
test
and
pop
mov
pushw
xchg
xor
jl
aas
xchg
and
jge
sbb
push
xchg
negb
add
add
and
daa
dec
jecxz
fstl
shl
dec
call
push
fwait
in
imul
and
in
mov
rorl
sbb
fistps
aaa
ret
fldenv
mov
or
fcmovu
cltd
shlb
leave
sbb
sbb
cmp
mov
and
aam
sub
pop
mov
aad
pmulhw
add
test
xchg
lock
xor
iret
pop
or
int3
jge
ss
pushf
xlat
cli
add
mov
pop
fwait
cmp
inc
mov
jmp
adc
xchg
lret
ljmp
jbe
lds
ds
lds
mov
aaa
xor
lcall
and
insl
jge
imul
xorb
pop
mov
mov
dec
mov
outsb
or
sbb
push
movsb
inc
add
std
xor
pop
xor
push
iret
mov
mov
add
movsl
add
les
add
inc
sub
cmpsl
pop
or
aas
jmp
loop
fwait
pop
jns
xor
and
in
outsl
out
mov
cmpsb
mov
sub
xor
shll
shrd
in
sbb
sub
mov
dec
sbb
les
cli
out
sbb
cli
xor
cmpsb
xor
or
or
sub
fsubs
xor
sbb
push
xorb
lret
dec
je
stos
cld
inc
jle
jae
repz
xchg
sbb
adc
sbb
lock
lret
inc
or
mov
cmp
imul
add
cs
adc
fnstcw
mov
xor
dec
das
ja
aad
int
adc
jno
les
push
xor
fsub
sbb
pop
fldenv
jo
xor
movsl
mov
lret
pop
aam
sbb
pop
jecxz
ljmp
xchg
push
inc
dec
mov
dec
fucomp
loop
push
repnz
or
adc
arpl
mov
xchg
nop
ljmp
insb
pop
push
xchg
fwait
das
cmp
loope
cld
jbe
cmpl
imul
xchg
cmp
inc
outsl
cwtl
mov
fstpt
xchg
jb
push
cmp
xlat
xor
sub
test
mov
stos
cmp
push
push
push
fs
jb
repnz
inc
repnz
or
es
or
push
fs
jg
out
xchg
inc
filds
push
call
lea
lret
popa
ljmp
jo
mov
arpl
fdivr
push
push
jnp
adc
push
cmp
and
popa
repnz
fsubr
push
sahf
aam
cltd
nop
inc
mov
decb
mov
xchg
push
push
pop
jnp
push
outsl
or
iret
cld
pop
mov
ss
mov
inc
sub
popf
cmp
fldcw
sar
je
push
cmp
ss
push
push
pushf
lret
out
rcrl
xchg
jecxz
xchg
loop
repz
push
ljmp
xchg
jle
loope
pop
mov
cs
ja
mov
mov
adc
pop
pop
adc
je
jo
xor
pusha
in
push
les
sbb
xchg
pop
lret
push
ret
jmp
addr16
xchg
scas
sub
sub
pop
sbb
pop
icebp
mov
stos
mov
jo
decb
xchg
adc
mov
inc
jmp
jae
fwait
adc
loopne
sbb
cmpsb
imul
int
jbe
loope
sub
add
dec
popa
out
dec
ja
popl
adc
aas
jl
insb
xor
mov
and
inc
jnp
dec
mov
scas
push
aad
or
cld
hlt
jmp
dec
mov
pop
xor
push
in
mov
jmp
ror
shlb
test
jae
pop
dec
adc
or
nop
dec
dec
fistpll
das
fs
popa
cmp
jae
cmc
cmp
stos
mov
sti
dec
push
test
mov
ljmp
aaa
je
or
add
leave
jne
aam
push
and
sbb
or
push
nop
sbb
cltd
arpl
insl
andb
mov
cltd
fwait
mov
xchg
add
sub
ljmp
dec
cwtl
xor
aad
adc
push
mov
pmovmskb
cmp
nop
or
sbb
push
fmuls
adc
repnz
repnz
inc
mov
pop
adc
pop
aas
xchg
testl
xor
mov
test
js
xor
and
mov
jmp
repz
cmpsl
fwait
ret
enter
xlat
push
inc
sahf
xor
push
pop
mov
test
xor
stos
lods
push
xchg
xor
or
ret
testb
std
test
pusha
daa
out
push
mov
out
inc
fstpl
jae
xchg
testl
lret
add
repz
aad
pushf
bndstx
xchg
out
sub
inc
in
sub
lock
scas
dec
outsb
stc
add
sbb
fidivrs
rol
xchg
out
or
push
xchg
push
je
push
inc
cmpsb
aam
mov
or
or
jns
pop
das
jnp
lods
or
and
cmp
xchg
int3
dec
test
and
ret
adc
xor
daa
sbb
mov
pop
add
cmc
mov
cmp
push
push
not
sbb
call
push
push
or
in
fstps
pop
or
js
hlt
xchg
inc
sbb
inc
enter
jmp
push
jb
push
ret
pop
les
mov
add
push
add
adc
cmp
shr
fs
ja
push
lcall
rcl
add
std
rcrb
adc
in
mov
mov
loopne
insl
loopne
hlt
popa
les
insl
out
mov
out
jmp
adc
mov
sbb
cwtl
mov
jmp
xchg
lods
adc
mov
pop
bnd
in
cmpsl
mov
mov
lcall
mov
nop
pushf
push
lret
mov
mov
mov
or
out
aam
cwtl
mov
mov
mov
int3
repnz
adc
imul
in
add
nop
call
push
scas
push
sub
rcrl
pop
inc
xor
shll
pop
cltd
xorl
cmp
fcompl
imul
std
cmpb
sbb
addr16
push
test
mov
es
hlt
addb
push
lods
leave
rcrl
mov
cmpsb
cmp
fstl
cwtl
xchg
push
nop
or
push
test
pop
into
jl
jmp
cmpsl
pop
les
lods
and
xor
dec
call
xor
sbb
imul
sahf
inc
jp
movsb
shl
xor
lock
iret
fptan
daa
repnz
add
imul
xchg
rorb
stc
push
push
and
dec
popf
pop
icebp
xor
mov
aam
call
ret
inc
repz
ret
cwtl
pop
pop
sbb
mov
mov
xchg
dec
popf
xorl
or
movsb
movsb
dec
push
mov
cmp
adc
xor
divl
jno
mov
lods
divb
lret
adc
and
sbb
xchg
pop
loop
pop
enter
inc
aaa
push
inc
hlt
ret
sbbb
sub
lods
fdivrl
fstps
mov
xor
loop
dec
mov
imull
rorl
mov
mov
pop
cmp
cmpsb
adc
insl
out
movl
add
stc
rolb
mov
stc
jmp
push
mov
iret
cmpsb
mov
jmp
pop
cmp
repz
xor
sbb
sbb
aaa
and
repz
push
test
inc
cwtl
dec
or
lods
insl
or
ja
ror
dec
outsl
push
jl
sahf
fiadds
dec
xchg
je
mov
lods
mov
add
cmc
xchg
not
lahf
insl
pop
xchg
xor
cld
flds
inc
jle
inc
sub
scas
cmp
popa
mov
add
jmp
mov
repnz
pusha
sti
sbb
push
cmp
sbb
imul
mov
xchg
imul
push
stos
stc
lret
sub
aad
addl
pop
xor
in
cmpsl
mov
xchg
lods
mov
fcompl
push
mov
and
dec
mov
adc
repz
call
ds
push
xchg
mov
in
push
mov
mov
int
ret
icebp
movsb
mov
mov
dec
in
inc
jns
mov
mov
ljmp
js
ret
jmp
fwait
in
sub
jns
add
or
lea
mov
ficompl
loop
das
sbb
pusha
cli
movsl
adc
inc
inc
cmpsb
mov
jbe
mov
mov
cmpsl
movsb
scas
das
sub
sbb
movsl
pop
aam
lds
mov
cld
jge
and
insb
xor
adc
cltd
mov
inc
loop
std
inc
inc
cmpsl
push
iret
shl
push
loop
sub
push
pop
rol
push
and
dec
lock
xor
test
scas
lret
xor
lods
mov
pop
rorb
cmp
dec
imul
repz
lret
dec
stos
inc
loopne
mov
clc
repz
cmp
loop
push
packssdw
je
inc
je
mov
in
xchg
ja
fcoms
pop
fwait
test
adc
push
js
add
lret
out
push
sub
inc
je
scas
or
and
dec
fs
sti
pop
fwait
jb
push
pop
inc
enter
in
and
cmp
insl
daa
mov
push
xchg
mov
xchg
push
add
dec
nop
jno
sbb
sbb
sarb
dec
sti
mov
sti
lds
in
ss
mov
sbb
int
loop
out
xchg
lods
sub
andb
ljmp
and
ret
xchg
mov
sbb
inc
add
add
push
mov
popf
lods
fimuls
testb
adc
fsub
or
into
sti
jbe
and
pushf
or
fcmovnbe
in
push
out
and
cwtl
cmp
mov
int
stos
mov
ja
rclb
jnp
in
notb
cmp
cli
mov
out
test
jnp
lahf
cmp
int
iret
pusha
xor
hlt
pop
xchg
into
cld
mov
push
fiadds
test
adc
ja
adc
adc
fimuls
push
gs
mov
mov
xor
mov
jo
mov
fnstenv
dec
sbb
jg
lods
das
aaa
cmp
ret
adc
ret
lea
mov
pop
jbe
mov
dec
mov
push
mov
dec
add
in
stos
xchg
dec
push
inc
pop
leave
int
sub
mov
and
jne
lock
push
fwait
ljmp
fwait
mov
in
push
and
cld
cmc
sub
adc
pop
xor
mov
push
push
pop
mov
cmp
pop
lcall
aad
mov
push
insl
mov
lcall
dec
and
push
out
hlt
outsl
jne
cmp
push
sahf
jg
fwait
mov
adc
nop
push
push
xchg
repnz
nop
sar
pop
loop
cli
ret
mov
add
and
shrl
jge
inc
test
adc
pop
ja
leave
jg
pop
and
or
xchg
ret
and
jg
mov
mov
mov
idiv
jo
je
lea
ljmp
push
mov
dec
add
cltd
movsb
es
dec
sub
out
jns
lods
mov
repnz
xor
and
test
adc
pusha
int
fbld
movsb
xchg
mov
lea
pushf
jle
pop
test
jge
sub
add
lahf
dec
pop
lret
mov
dec
fs
das
cmp
in
sbb
add
jp
lods
mov
mov
sub
negl
and
push
jmp
pop
fbstp
cmpb
push
add
pop
and
les
ss
xlat
jp
xchg
adc
andb
out
push
cwtl
mov
xor
rolb
daa
and
xor
sbb
cmp
push
sbbb
leave
xchg
dec
loop
sti
sarl
rcrl
dec
leave
lods
out
jge
ja
mov
cmpsb
lcall
out
ss
lea
cmp
sub
popf
pushf
addr16
jnp
mov
sbb
or
inc
sub
sub
xchg
sbb
repnz
js
rcll
scas
stos
rcl
xchg
int3
dec
jle
xor
fcoml
mov
iret
and
cmc
cmp
and
das
ljmp
loop
xchg
lods
hlt
clc
inc
mov
pop
cmc
out
and
arpl
sbb
cmpsb
pop
or
scas
lods
inc
inc
lock
xlat
push
jns
jo
add
cmp
xchg
outsl
cld
sbb
aad
lea
and
xchg
jle
inc
sbb
imull
outsl
pop
adc
push
aam
orl
and
mov
sti
outsb
enter
dec
data16
xor
xlat
leave
mov
cmpsb
add
push
sub
pop
push
and
bound
mov
add
iret
xchg
xor
xlat
sti
movsb
cmp
push
fsubl
aam
out
insl
stos
cvtps2pd
negb
cmp
fimull
mov
cmp
stc
hlt
mov
push
dec
repz
mov
push
sub
stos
cmpsl
or
pushf
pop
jo
in
out
and
cld
imull
outsl
loopne
jb
mov
lock
aad
jns
js
mov
mov
lret
fcmovnu
ret
jle
sbb
mov
scas
mov
lods
add
stos
jae
xor
adc
cltd
xor
fistps
fsubl
mov
fisubrs
xchg
jbe
sahf
fnstcw
push
sbb
jle
sbb
and
xchg
push
fcomps
in
and
sub
jo
inc
jle
xor
ret
call
xchg
cltd
stos
sbb
cmpl
adc
ret
push
mov
jno
aam
fidivs
and
js
repz
xlat
loop
ret
cmp
loop
scas
dec
pop
loopne
or
mov
jne
nop
xor
and
xorps
je
dec
in
sti
mov
movsb
mov
pusha
lea
xchg
rorl
mov
pop
icebp
std
jne
push
sarl
andl
cs
sub
mov
fnstenv
and
adc
fstpl
xor
into
movl
jle
lods
add
adc
scas
sub
xor
and
lea
adc
jae
hlt
out
mov
fstp
icebp
in
inc
xor
movsb
nop
mov
loopne
adcb
es
sub
sub
jge
jne
add
js
mov
cli
imul
js
mov
or
cmpb
xchg
not
rorl
push
cmp
xchg
sbb
mov
aaa
loopne
shlb
mov
mov
xor
lret
sub
add
jmp
xlat
xchg
negb
add
sbb
sub
loop
pop
inc
or
cmpsl
xor
adc
jmp
popa
or
mov
cmpsb
jg
jno
addr16
push
mov
inc
pusha
inc
filds
fcompl
push
enter
mov
sbb
and
and
into
mov
iret
lret
icebp
into
fldenv
jmp
cmp
aad
bound
jg
in
jno
push
mov
andl
add
jbe
pop
movd
fsubrl
jge
pop
adc
adc
mov
mov
enter
adc
clc
fsubrl
sbb
lea
enter
repnz
cmpsl
jge
mov
mov
cmp
sbb
ljmp
dec
add
inc
pop
scas
inc
fisttpl
ss
std
adc
push
mov
or
test
jmp
pop
inc
subb
jecxz
stos
lret
data16
scas
or
dec
popa
fcmovne
mov
les
jns
xor
cmpsb
push
jne
or
fsts
cld
dec
inc
sbb
fmull
fdivrl
or
adc
lock
sub
cli
lret
mov
call
movsl
jbe
xchg
imul
dec
jle
xchg
pop
cs
roll
mov
mov
dec
and
xchg
addr16
mov
pop
mov
mov
pop
sarb
xchg
lahf
ds
xlat
scas
loope
mov
aam
jl
adc
or
aas
hlt
sbb
lods
add
cld
mov
lahf
stos
fistps
and
out
mov
addr16
mov
out
mov
sbb
ret
xchg
fildll
cmovl
cmp
repz
decl
jp
cmp
fs
add
arpl
out
stc
mov
adc
and
lods
add
dec
jbe
into
add
and
sbb
jns
sub
icebp
pop
xchg
cmp
sbb
dec
sbbb
pop
jge
dec
mov
dec
mov
mov
and
sub
out
pop
mov
mov
inc
mov
les
inc
mov
es
sbb
jo
flds
shlb
inc
cltd
pop
je
ja
push
xor
hlt
push
andb
test
or
pushf
push
cltd
outsl
lods
inc
call
mov
xor
loopne
or
call
pop
add
xor
cmpsb
cmp
mov
dec
and
mov
xchg
xor
mov
stos
mov
leave
sub
cmp
and
add
and
push
js
jae
aad
push
int3
sahf
xor
aas
cmp
es
push
sti
mov
lds
jg
mov
bound
mov
std
jno
cltd
cmp
mov
repz
insl
mov
int
lret
lods
sbb
mov
ja
pop
sbb
xchg
pop
cltd
movsb
clc
xchg
jne
dec
mov
and
popa
xor
xchg
gs
jo
inc
into
push
call
mov
mov
out
add
mov
frstor
mov
ss
add
lret
jbe
sbb
lcall
aad
sub
sub
pop
aaa
cmpsb
xchg
mov
jle
pop
dec
sub
xor
jge
pusha
fdivrl
or
lds
jne
sbb
fdivs
fs
fs
divl
and
leave
fdivrs
lret
shr
xor
push
mov
xor
lods
sbb
dec
pop
and
roll
pop
mov
dec
dec
out
add
sbb
xchg
es
dec
std
mov
mov
jbe
ret
leave
fistpll
inc
pop
jns
cli
aam
pop
add
data16
into
in
les
into
inc
xchg
sarb
pop
inc
xchg
fldenv
inc
bound
lds
clc
in
sbb
fscale
pop
cmpsl
jae
and
orl
jmp
fdiv
cmp
ljmp
sbb
mov
in
cli
dec
mov
lcall
lea
xchg
psadbw
aaa
push
orl
popf
add
and
sbb
cld
fiaddl
mov
jnp
in
lcall
xchg
mov
and
gs
mov
lahf
cmpsl
mov
cmp
xor
dec
hlt
clc
fdivs
inc
xchg
loope
or
add
sbb
dec
inc
push
xchg
cmpsb
sti
xchg
es
testl
aaa
cmpsl
hlt
mov
into
mov
dec
dec
das
pop
or
aaa
mov
and
or
jle
jle
xor
pop
or
xchg
fdivrl
dec
dec
inc
inc
sub
std
adc
sub
sarw
iret
lahf
xchg
jno
dec
mov
jb
inc
out
add
notb
movsl
repnz
xchg
mov
inc
jo
dec
ret
jg
sar
daa
hlt
cmp
adc
fsub
mov
fists
cmp
shrl
sub
clc
int
cmpsl
sub
push
loope
and
shrb
bound
dec
push
notb
int
sub
adc
inc
cmp
dec
out
mov
cmpb
or
xor
add
jb
mov
mov
std
push
fisubrl
jle
fcomps
inc
push
sub
and
pop
das
sub
sbb
jo
ret
in
cs
jnp
pop
aad
fdivrs
sti
sub
jo
pop
lds
sub
mov
jle
xlat
lret
test
dec
dec
test
test
push
inc
sub
sbb
xor
push
adc
cmpsb
fldcw
addr16
xchg
addr16
xchg
loopne
mov
push
sub
mov
sti
arpl
fwait
mov
fucomp
adc
into
jle
in
jne
xlat
mov
pop
lds
push
mov
sbb
adc
xor
sub
out
sti
mov
or
push
loopne
out
pavgb
fs
sub
dec
xor
dec
sbb
lods
addr16
xorb
mov
ljmp
enter
add
pop
iret
lret
lods
mov
icebp
mov
mov
loopne
jae
fisttpll
mov
enter
xchg
fcomp
mov
mov
pop
sbb
xchg
sub
popf
mov
movsb
pop
jecxz
push
dec
sub
cmp
int3
xorb
sub
mov
push
inc
jb
mov
push
mov
movsl
jmp
jne
push
dec
imul
pushf
in
shlb
pusha
sbb
xchg
aas
jp
popa
das
aaa
ds
fwait
cmp
roll
xchg
and
mov
sbb
jge
or
sub
mov
outsl
jge
clc
sub
notb
inc
fildl
rcl
sahf
sub
and
inc
mov
fsts
or
adc
pop
xchg
insb
cmp
pushf
iret
in
pop
cmp
negl
outsb
cmp
push
add
sub
out
xorb
popa
in
jle
icebp
sbb
ret
add
daa
ret
loop
mov
xchg
cmp
loopne
mov
stc
jno
outsl
addl
sbb
dec
cmp
xchg
js
jmp
inc
mov
aam
jge
sub
mov
push
xchg
mov
sbb
mov
sub
adc
xlat
inc
mov
sub
xchg
pop
insb
sub
daa
or
pop
mov
mov
xor
lds
das
jbe
push
imul
xor
add
jge
cwtl
mov
and
or
iret
inc
sbb
sub
loopne
in
fsubrs
and
shll
add
cmp
inc
mov
xor
outsl
and
pushl
cmp
imul
xor
lock
pusha
mov
out
cmp
test
mov
mov
cld
lods
pop
cmp
movsl
add
mov
out
pushf
test
shlb
cld
cmp
inc
xchg
insb
pop
jle
inc
sbb
lcall
rcrb
cli
sahf
or
or
pusha
inc
aas
ficomps
aam
out
jo
sub
lret
lock
push
rcll
xor
xchg
incb
mov
outsl
insb
loopne
and
xor
mov
mov
sarl
or
enter
add
pop
xor
enter
les
lock
loopne
fwait
mov
jp
adc
rcrl
dec
loop
cli
jae
frstor
ljmp
ja
ds
xchg
aam
fistps
mov
mov
out
add
fsub
pushf
repz
push
outsb
mov
test
dec
jno
xchg
test
xchg
ljmp
push
clc
ret
nop
push
push
dec
ret
jo
sbb
jge
push
xchg
leave
push
or
enter
xchg
in
loopne
jno
sub
cltd
gs
andl
mov
ret
lock
cmp
ds
dec
or
mul
test
ds
aam
or
loopne
test
jmp
test
ljmp
clc
sbb
add
hlt
ss
jns
sbb
jbe
mov
test
popf
dec
fcomps
xchg
cmpsl
cmp
loope
pushf
inc
or
inc
cmpsb
jmp
outsl
push
sbb
sbb
and
push
mov
and
out
das
rcrl
les
jl
fstpt
fstl
cli
jle
xor
aaa
cmp
cmpsl
jle
enter
mov
in
and
jae
jl
into
push
sub
mov
out
insb
push
lret
outsb
les
sahf
mov
pop
or
or
mov
cmpsb
mov
popa
jg
ror
out
adc
je
xchg
aas
out
int
xlat
cmp
sahf
mov
les
loopne
test
cmp
in
dec
leave
out
aas
dec
adc
mov
push
push
je
mov
in
cmp
fstpt
jns
mov
fnsave
mov
dec
fs
insb
lock
jle
out
insl
inc
mov
addb
das
pop
fdivrp
sbb
add
insb
jl
test
adc
subb
out
cmp
repnz
in
cmp
mov
movsb
cmpl
out
mov
sub
inc
iret
mov
sub
andb
xor
sub
or
xchg
jp
xchg
aas
inc
repnz
ljmp
jo
mov
push
insl
cwtl
js
jecxz
jo
push
scas
and
pop
and
xor
jg
sbbb
inc
int3
outsb
xchg
mov
lcall
das
mov
std
xchg
nop
cmp
das
in
cld
dec
inc
int3
pushf
mov
in
jo
sahf
and
popa
adc
sbb
inc
insb
hlt
add
mov
out
sbbl
outsl
and
lods
sbb
add
scas
leave
and
scas
or
xor
daa
or
adc
fbld
lret
roll
inc
or
dec
popl
pop
clc
mov
cmc
rorl
xorb
fwait
jo
gs
mov
fwait
nop
lcallw
or
fiadds
push
sbb
fldt
out
divb
or
and
lods
aad
jns
jmp
mov
xchg
insl
jne
jge
gs
bound
orl
inc
jne
pop
data16
ss
push
cmp
les
pop
aaa
test
jb
outsl
repz
pop
xor
adc
xchg
xchg
lret
adc
pop
xor
mov
xchg
lods
ret
sti
fisubrs
mov
push
jp
jcxz
xor
repnz
aam
mov
push
lods
dec
icebp
mov
pop
aam
add
sbb
insl
jae
imul
jbe
imul
jmp
daa
push
cmpsb
dec
xchg
pop
ret
enter
push
mov
stos
add
push
push
push
outsb
pusha
push
inc
sub
gs
push
leavew
iret
mov
dec
xlat
sub
add
mov
andb
aam
or
fs
sub
mov
mov
mov
in
dec
das
pop
sub
test
sub
dec
pop
lods
gs
add
mov
je
arpl
vmovq
ljmp
mov
inc
or
sbb
test
adc
xchg
mov
lret
out
incl
jnp
mov
pusha
sub
lcall
in
or
cs
sbb
pop
xor
fdivp
push
mov
xor
loopne
hlt
add
pusha
out
pop
xor
out
cmp
iret
inc
sbb
sahf
sbb
push
int3
mov
mov
mov
lret
or
pushf
aaa
rcl
mov
dec
jp
sbb
lret
neg
pop
jp
add
lock
and
or
scas
push
jb
std
mov
mov
cmpsb
add
movsb
inc
js
sub
jno
mov
xchg
xchg
push
rorb
cmpsb
icebp
repz
neg
sti
jbe
cmp
nop
shll
xor
fldcw
add
leave
pop
mov
dec
pop
jb
dec
rorb
idivb
xor
and
clc
test
xchg
fsubrl
mov
cmpl
shrd
mov
jg
in
sub
mov
adc
and
mov
js
loop
sbb
cmpsb
pop
dec
xor
in
clc
xor
mov
push
add
popa
sub
test
repz
sbb
out
mov
sti
mov
push
pop
add
pushf
out
add
mov
out
addr16
pop
mov
adc
mov
test
pop
inc
or
pop
push
add
jmp
sbbb
push
iret
adc
leave
jecxz
xchg
xor
mov
test
pusha
pop
mov
and
sub
jmp
inc
shrd
fwait
aam
pop
sbb
jne
jecxz
ss
movsl
aaa
lahf
test
mov
cmp
in
test
adc
push
jo
lods
jge
dec
jbe
sub
ljmp
xlat
inc
scas
jb
xchg
scas
fdivl
and
aaa
pop
inc
adc
aad
addr16
popa
int
test
aas
mov
and
push
and
cld
out
pop
lods
jns
sbb
sub
mov
pop
jg
mov
loop
cmpsb
and
es
cmp
movsl
lcall
adc
inc
xor
int
mov
insl
inc
stos
popa
pop
sub
pop
jbe
push
sub
jbe
mov
adc
xchg
adc
fnsave
ljmp
ja
xchg
mov
pop
mov
addr16
pop
in
adc
inc
mov
xor
insl
in
xchg
mov
jle
cs
sub
sbb
and
inc
pusha
sbb
lcall
xor
loopne
pop
outsl
shlb
lret
sub
test
jp
dec
pop
subl
insl
mov
mov
mov
mov
nop
outsb
dec
pushf
adc
cmpsb
inc
cmp
aam
lods
scas
jp
lods
lret
sbb
xor
movsl
xchg
out
push
test
jg
adc
jg
mov
hlt
cld
xchg
sbb
mov
xor
jne
mov
adc
pop
add
in
mov
lret
push
lret
fdivrs
xchg
add
or
lds
and
push
jl
rclb
out
sahf
push
push
dec
mov
testb
call
push
cmpsl
and
outsb
cmpsb
mov
fs
mov
mov
repz
and
push
push
mov
leave
pop
pop
repnz
int3
inc
std
xchg
sub
adc
xchg
sub
mov
sbb
fstpl
push
cmpsb
lahf
jnp
jns
and
xor
arpl
insb
enter
sub
jge
in
mov
cli
or
cltd
and
aaa
imul
xchg
aam
cwtl
rol
ss
sub
mov
or
out
cmp
xchg
out
outsl
shlb
or
std
sub
lret
outsb
into
loope
sbb
rcl
fists
pop
dec
jp
loop
lahf
or
arpl
lods
nop
xchg
dec
and
mov
xor
add
push
mov
sbbb
and
mov
testl
cltd
sbbl
mov
imul
sahf
mov
lcall
xchg
sahf
jne
test
imul
outsl
fstl
leave
pop
push
adc
shl
and
in
pop
mov
out
dec
mov
dec
rolb
enter
jge
in
sub
dec
stos
mov
ds
outsl
cltd
mov
adc
sti
cwtl
cmpsb
mov
int3
jae
out
mov
add
pop
mov
pop
stos
jle
gs
adc
or
and
sbb
leave
push
jns
lea
adc
inc
push
ss
push
cmp
lcall
out
pcmpgtb
xchg
sbb
cwtl
push
fdivl
mov
mov
mov
sbb
mov
loope
movl
cmp
hlt
or
int
mov
pushf
inc
pop
sub
dec
dec
pop
push
dec
jb
negb
movaps
hlt
jo
inc
stc
inc
sbb
je
lcall
fyl2x
push
shlb
mov
bound
xor
xchg
xchg
dec
jecxz
js
int3
add
sbb
xchg
iret
cltd
adc
sub
in
leave
push
popa
adc
es
lret
frstor
lahf
inc
pop
sub
sti
testb
je
push
aad
ljmp
push
lods
push
mov
out
inc
cmp
xor
or
add
sbb
insb
mov
fnstenv
sbb
test
adc
outsb
or
nop
push
fwait
pop
loopne
lock
out
xor
fs
xchg
adc
mov
lcall
pop
loop
ds
jecxz
das
lret
lahf
sub
inc
mov
out
cwtl
pop
add
dec
or
cs
adc
ret
mov
jne
mov
repz
test
mov
jae
pop
xor
bnd
jle
sub
sahf
int3
xor
push
out
add
stos
cmp
out
adc
mov
or
pop
pop
push
xchg
fwait
sub
xchg
leave
or
jbe
mov
clc
and
mov
stos
inc
mov
cmp
mov
je
mov
popa
roll
jbe
mov
or
pop
arpl
aas
push
xchg
add
cmpsl
repnz
cs
sub
std
bnd
sub
leave
ret
sbb
es
fcomip
cmc
sbb
jge
incb
mov
jmp
pushf
mov
aas
xchg
notb
dec
ret
xor
pop
xchg
pop
mov
out
sub
cmpsb
mov
aas
sub
fisubl
aam
pop
push
aad
pop
movsb
jecxz
insl
push
xor
lcall
insl
lahf
hlt
mov
psubd
dec
test
outsb
mov
pop
cwtl
ret
lea
mov
xchg
ds
xor
push
adc
ljmp
inc
pop
pop
sbb
push
frstor
adc
cwtl
in
sub
pop
fs
add
out
jnp
movsb
mov
add
inc
sbb
loop
mov
jae
push
jle
outsl
movsl
jns
lods
mov
arpl
and
stc
pop
or
jnp
cmpsl
mov
mov
adc
mov
int3
loopne
lods
lea
mov
into
mov
push
mov
sbb
dec
lock
mov
adc
les
ljmp
ljmp
iret
int
fdivrl
xchg
xchg
repnz
mov
xchg
pop
js
push
pusha
mov
nop
mov
ds
loop
outsl
addr16
pusha
sbb
xor
fisubl
push
mov
xchg
xchg
adc
cwtl
rorl
out
mov
push
ljmp
pop
adc
pop
icebp
out
inc
push
jecxz
sub
push
or
fistl
scas
push
dec
test
stos
xchg
out
pop
mov
in
scas
repnz
hlt
mov
push
xchg
rcrl
xchg
xchg
sti
cmp
and
hlt
mov
xchg
sbbb
adc
pop
hlt
imul
jmp
mov
out
jbe
pop
pop
cli
test
xchg
xchg
lods
call
or
sub
sub
push
inc
gs
cmp
aad
adc
imull
out
ret
fmul
sub
cmp
pcmpgtb
mov
movsl
fdivs
data16
xchg
lret
js
push
push
pop
dec
enter
jmp
jns
jo
mov
sbbl
in
aaa
insb
adcb
jg
xor
negl
xchg
jp
add
cmpsb
push
cwtl
mov
jmp
pop
inc
fildl
dec
mov
shr
stc
dec
pop
sbb
pop
adc
shl
mov
inc
and
cs
push
pop
push
jns
inc
inc
inc
pop
scas
sahf
xchg
clc
and
test
jns
mov
pop
andb
lds
fchs
jns
xor
push
push
call
mov
adc
sub
xchg
sub
push
sub
mov
mov
xchg
sbb
jmp
out
das
popa
cmp
xor
xchg
ret
inc
mov
sbb
xlat
adc
popa
cmc
push
aad
lret
lret
sub
fld
or
xchg
shll
je
lret
fisubrs
xor
cmp
fldt
jecxz
pop
jle
shrl
xor
sbb
mov
sbb
out
scas
pop
or
popaw
add
daa
addr16
cmp
out
nop
xchg
dec
or
xchg
outsl
pop
sub
stos
repnz
in
cltd
pop
mov
mov
cmp
repz
xchg
adc
repz
test
data16
lea
mov
inc
loope
push
inc
jp
fmul
pop
loopne
pop
ffree
sahf
push
xchg
fmuls
cltd
ja
je
adc
hlt
push
dec
mov
fstl
ljmp
add
mov
mov
inc
es
insb
andb
jne
mov
rsqrtps
inc
ljmp
repnz
loope
pop
inc
sub
scas
out
inc
jne
clc
jno
add
mov
and
cwtl
jno
shrb
or
mov
jmp
sub
inc
pop
lea
or
jno
xor
mov
inc
mov
out
or
sti
shl
xor
inc
lcall
in
in
dec
not
out
push
pop
add
xchg
cs
mov
cmp
push
push
mov
dec
rcl
mov
stos
cmc
pop
push
pop
rep
test
and
test
jge
adc
push
jbe
nop
adc
insl
sbb
jmp
mov
jle
and
stc
add
movsl
daa
jge
add
push
mov
push
cwtl
adc
flds
sub
mov
mov
xchg
mov
pop
jp
mov
xchg
sub
xchg
out
mov
xchg
sbb
and
lods
xor
fisttpll
std
loope
insb
mov
mov
incl
mov
test
jle
mov
das
into
fs
push
cltd
aam
pop
xor
leave
fdivr
mov
imul
frstor
mov
incl
xor
out
jmp
roll
out
lock
mov
enter
outsb
scas
sbb
add
popl
fnstsw
adc
cmp
icebp
jge
lods
sbb
std
pusha
call
inc
in
arpl
jb
lret
xchg
push
fildll
in
add
pop
xlat
lret
xor
arpl
xor
and
xor
insl
aad
inc
leave
fs
test
inc
js
xor
jl
jle
cmpsl
pushw
pop
ljmp
insl
xlat
adcl
xchg
push
jmp
cld
pop
sub
clc
out
xor
mov
std
lods
movsb
pop
push
mov
cmp
add
mov
loope
imul
arpl
cs
fimull
mov
lea
sbb
adc
imul
jg
xchg
sbb
mov
cmpsl
fisttpl
test
inc
push
popf
mov
sahf
mov
stc
rcrl
icebp
pop
incl
lods
sahf
cli
in
push
sbb
into
mov
sbb
fbld
cmp
ss
lahf
push
test
or
mov
xchg
or
cmp
xor
jae
pop
push
xor
add
imul
nop
cmp
repnz
xchg
lret
enter
mov
call
loopne
fisttpll
out
in
fdivl
pop
fcomip
jne
mov
inc
aam
mov
neg
arpl
push
pop
sub
add
lock
add
sub
fwait
loopne
adc
lds
push
lock
push
adc
inc
mov
into
iret
cs
outsl
rcr
add
outsl
scas
call
repz
lret
mov
pop
mov
cmp
push
fistl
stc
mov
ret
ss
fists
mov
sub
inc
add
lret
imul
xchg
ljmp
and
add
in
test
jmp
cmp
clc
sti
xchg
cmpsb
mov
loopne
gs
jns
pop
mov
jne
cmpsl
out
xchg
pop
push
cmp
aam
pop
cmpsb
in
rcrl
or
mov
and
ficoms
cmp
hlt
or
or
push
add
pop
and
out
mov
or
dec
mov
lds
or
rep
sbb
inc
das
and
ret
add
imul
jmp
xchg
notl
push
inc
inc
jg
std
arpl
dec
jle
mov
mov
push
out
in
sti
cmp
shrl
cmp
sub
out
sahf
lahf
push
movsb
movsb
pushf
xor
insl
je
inc
xchg
int3
std
jno
scas
loope
dec
xor
lods
dec
jge
stos
jb
xor
xchg
mov
lods
cmpl
xchg
out
mov
push
rolb
mov
jne
fsubr
dec
and
clc
loopne
test
pop
jp
fnstcw
mov
insb
and
inc
sbb
mov
movsb
lret
in
jg
and
fidivrl
sub
adc
xchg
sbb
sar
inc
mov
bound
sub
push
scas
leave
stos
adc
popa
fsubs
inc
sub
lods
add
sub
jl
cmpsb
or
sti
mov
hlt
lcall
test
cwtl
add
adc
mov
sar
lds
push
push
xchg
repnz
jmp
aaa
pop
pop
mov
inc
stos
mov
sub
mov
jl
and
or
dec
insl
shrl
sub
out
ret
testl
and
hlt
add
xchg
pop
lods
jns
addb
mov
bound
jecxz
mov
or
mov
data16
outsl
jns
sub
dec
mov
ret
fcmove
inc
mov
push
xchg
dec
xchg
sbb
jns
xchg
mov
mov
insb
dec
xchg
dec
rclb
lea
mov
xchg
mov
loope
mov
je
jbe
ljmp
int3
and
add
add
int3
stos
mov
into
pop
lcall
add
pop
arpl
clc
ljmp
test
leave
push
push
cld
std
xor
inc
pop
dec
xor
cld
imul
push
ss
in
imul
jge
in
mov
pop
mov
orl
mov
push
pop
lret
dec
jne
jno
xchg
pushf
push
mov
arpl
push
mov
fwait
inc
ret
jecxz
push
fs
and
clc
jl
lds
push
sub
pop
insb
cmp
jno
jecxz
aaa
stos
or
mov
push
scas
iret
jne
stos
push
xchg
push
call
movb
in
fidivrs
pushf
pop
xchg
aam
fisttpll
or
mov
mov
std
or
xchg
jne,pn
jnp
pop
sbb
mov
or
pop
fidivrs
mov
enter
imul
in
shl
rolb
sub
mov
jb
jae
pop
and
adc
pop
adc
out
add
and
test
dec
rorb
movsb
pop
testl
mov
test
dec
jnp
jb
xchg
mov
lods
jno
xor
add
jb
jp
dec
cmpsl
fdivrl
jle
leave
xor
int3
pop
fmuls
sbb
cmpsl
aas
dec
icebp
mov
push
neg
cmp
jle
test
dec
addr16
shlb
mov
pop
lea
sbb
xor
xchg
push
mov
testl
into
scas
mov
cwtl
int3
sub
aad
sbb
and
stos
mov
add
popa
sahf
adc
in
and
setl
dec
or
insb
mov
jb
mov
das
xor
repz
jmp
sbb
jl
es
pop
and
fcoms
stos
push
jmp
mov
or
and
lret
jge
xchg
sti
ds
mov
jo
and
lahf
xor
add
add
enter
into
mov
imul
hlt
out
mov
movsb
xor
mov
popf
ljmp
dec
pop
shlb
xor
push
inc
xor
inc
cmp
add
leave
leave
xchg
stc
cmpsl
int
sbb
jp
cmc
outsb
jno
icebp
sbb
xor
out
sub
das
lods
pop
cmpsl
lret
inc
push
push
adc
sbb
jae
ror
adc
cmpb
lahf
mov
int
add
sub
xorb
test
mov
fs
mov
ret
aad
cmpl
inc
inc
call
das
xchg
pop
aas
or
sbb
loop
jl
sbbl
mov
std
pop
ds
movsl
idivb
inc
cmpxchg8b
rcl
rcl
mov
xor
xor
fnsave
xorb
dec
stos
jae
cmpsb
cmpsb
pushf
sub
pavgw
mov
test
and
shl
mov
stos
xlat
aam
stos
test
push
mov
or
xor
addr16
loop
dec
sbb
mov
adc
js
mov
into
mov
loop
rorl
pusha
fisubrs
xchg
stos
fcoml
test
lods
cmpsb
jno
aad
pusha
push
jmp
popw
xor
cmpsl
scas
test
lods
rcl
repz
imul
js
ljmp
mov
ss
mov
cmp
mov
rorl
in
dec
std
jmp
push
and
or
dec
sbb
mov
mov
mov
aas
sub
adc
or
rclb
dec
sub
aas
ds
sub
lods
out
test
xchg
int3
imul
mov
lret
xchg
add
mov
add
cmpsl
sub
push
add
and
cmp
test
sub
jnp
in
add
shll
int3
adc
inc
sbb
jns
das
popf
jle
scas
adc
sarb
xor
daa
jns
lods
lea
leave
mov
sbb
mov
fstpt
jnp
mov
dec
test
lds
xchg
popf
aas
add
pushf
pusha
imul
in
aas
mov
mov
fdivrp
or
dec
sbb
popa
mov
loope
adcb
inc
mov
ficoml
xor
lcall
mov
jo
in
pop
addr16
xchg
dec
test
or
pusha
mov
arpl
mov
imul
dec
mov
inc
xchg
mov
cmp
sub
mov
cmp
sbb
sbb
adc
shlb
dec
dec
mov
dec
aaa
add
je
dec
cmp
fnsave
je
ja
jle
mov
inc
or
call
or
xor
jl
movsb
push
pop
scas
xchg
test
sti
mov
inc
xor
shll
mov
fidivrs
loopne
inc
cmpsb
scas
add
pop
outsl
jge,pn
pop
lock
std
xlat
fistl
or
inc
cmpsl
sahf
orb
jl
es
arpl
sahf
jno
int
inc
sub
out
xchg
loop
dec
lds
mov
imul
lret
incl
fs
sbb
rclb
jae
sub
push
jmp
mov
mov
xor
lea
jg
push
imul
arpl
cmpsl
inc
insl
test
cmp
gs
fiaddl
pop
adcl
ja
xchg
aas
fs
jge
push
pop
fdivp
movsb
out
jns
das
inc
xchg
test
cmp
arpl
add
sbb
push
std
push
aas
dec
ror
arpl
stc
push
test
outsl
gs
jmp
cmc
inc
dec
xor
rorl
aam
push
and
jns
in
add
outsb
mov
mov
mov
and
inc
test
ja
pusha
test
movsb
or
xorl
sahf
lea
rorb
outsb
call
jne
les
mov
inc
adc
add
xor
mov
aaa
push
out
sub
mov
cwtl
lret
jae
hlt
dec
jl
subl
add
fcmove
jle
and
xchg
insl
je
pop
jo
xor
pusha
inc
ja
inc
pop
mov
jp
xchg
push
lfs
sarl
cmpsl
fwait
popa
pop
cli
out
and
rorb
xchg
mov
jns
fistpll
dec
pop
cwtl
sub
je
mov
das
or
arpl
mov
arpl
push
negl
shl
dec
inc
mov
mov
mov
push
sbb
jl
push
lret
push
mov
jae
cmp
add
ljmp
out
int
jge
jle
into
dec
add
sub
jnp
shrl
aad
push
ficoms
sub
cmpsl
xor
or
adc
push
mov
xor
mov
cmp
adc
inc
repnz
push
negl
cmp
nop
inc
adc
push
pop
cs
ljmp
inc
lock
or
outsl
aaa
push
test
inc
pop
stc
imul
pushf
les
inc
lea
adc
sbb
les
mov
jl
lahf
in
scas
orl
jae
jb
or
scas
aaa
and
fwait
cmp
test
inc
push
popl
leave
push
lret
or
add
push
and
pop
jbe
xchg
jno
and
pop
sub
push
inc
and
xor
lret
mov
xchg
stc
xor
es
addr16
pop
jmp
iret
inc
loop
ljmp
sar
call
push
aad
mul
cmpsb
cltd
cmp
adc
cmp
aaa
push
or
mov
inc
mov
adc
int
push
out
aas
jo
add
data16
mov
xchg
popf
dec
add
or
hlt
pop
leave
jo
add
jbe
xchg
add
cmp
rcrb
adc
pushf
pop
mov
out
dec
xorb
movsb
push
lock
dec
pusha
pop
rorb
xchg
sbb
sti
pusha
cli
adc
testl
pop
loope
orl
push
mov
cmp
xor
inc
cwtl
outsb
je
into
jb
mov
cld
push
or
dec
sbb
addl
cwtl
rolb
xchg
mov
ja
or
xorl
pop
mov
ret
cmp
out
loop
mov
mov
cmp
nop
dec
pop
pop
mov
in
popa
xor
popa
ljmp
fists
outsl
jae
in
mov
add
lods
ljmp
mov
popa
js
mov
scas
stos
sar
mov
sarb
push
add
in
xor
sbb
loope
jns
ficoms
aaa
decb
scas
in
jge
nop
jmp
sub
aaa
cwtl
in
cmp
xchg
fcoml
xlat
fisttpl
inc
cmp
dec
dec
sti
sahf
loop
xorl
xchg
pop
outsl
sbb
dec
aam
mov
push
dec
fldenv
mov
mov
loope
outsb
bound
sahf
xchg
movsl
ja
stos
cmp
push
adc
sbb
cmp
orb
dec
jle
mov
in
enter
dec
jo
add
push
scas
dec
ret
xchg
mov
lret
addr16
nop
mov
mov
insb
fwait
mov
sbb
push
sbb
mov
fwait
mov
or
pop
pop
mov
lret
add
add
pop
add
jmp
addr16
in
dec
adc
pop
out
cld
call
push
icebp
fisubrs
fdivl
push
ret
insb
xchg
ret
push
xor
dec
dec
or
mov
int
or
out
f2xm1
mov
sbbb
lret
stos
shll
sti
loop
cmpsl
in
mov
daa
loop
xchg
fistpll
xchg
and
mov
out
cltd
and
testl
pusha
and
sub
sarl
ds
xor
shlb
mov
mov
dec
hlt
lock
cmp
jp
into
rol
movsl
lds
test
icebp
jge
pop
lods
rcrb
mov
mov
xchg
cmpl
stos
ss
pop
xorb
mov
inc
fwait
and
js
mov
in
cltd
lret
inc
pop
sbb
adc
and
sbb
cmp
cmp
mov
dec
mov
aaa
mov
or
sbb
flds
mov
pop
push
sbb
out
xchg
dec
xor
aaa
lea
adc
fwait
insb
in
adc
into
lock
or
fcom
xor
push
dec
pop
adc
inc
call
and
outsb
je
popa
and
clc
cmpsl
icebp
push
mov
mov
adc
xchg
inc
pushl
jmp
enter
in
gs
fs
outsb
rcrb
inc
adc
dec
pop
pop
and
int
and
sub
roll
pop
mov
inc
stc
mov
dec
sbb
out
rcrl
xchg
mov
push
inc
mov
loope
mov
pop
shll
popa
mov
mov
jl
pop
xchg
orb
pop
ret
scas
mov
out
sub
std
test
sbb
add
ja
loop
pushf
xor
mov
xchg
xor
xorl
sub
dec
cmpsb
mov
ret
and
sbb
mov
addr16
test
mov
cmp
mov
push
ret
inc
pop
push
sub
add
hlt
or
mov
test
out
dec
pop
jbe
and
sub
jle
test
add
mov
xor
cld
arpl
sbb
sbb
in
out
nop
mull
fldt
mov
xor
int3
fisubs
cmp
xor
and
stc
jb
repnz
daa
enter
in
push
out
pop
pop
loopne
push
sbb
sbb
cmp
cmp
push
imul
mov
enter
add
and
int
pop
shrb
pop
mov
in
mov
cld
imul
or
jno
inc
add
lods
fwait
int
dec
mov
cmp
xchg
mov
test
mov
sbb
jge
stos
mov
mov
in
mov
push
arpl
les
sar
out
cmp
imul
push
ja
adc
xchg
shll
dec
sahf
imul
mov
sub
out
test
arpl
push
cmp
cwtl
and
mov
mov
push
fcmovne
std
fstpt
push
or
cli
sbb
lret
cmp
mov
and
ljmp
mov
jg
jnp
xor
roll
cmp
addr16
fs
push
shlb
rcll
popa
ret
pop
jnp
dec
sub
pop
hlt
dec
and
xor
cwtl
cmc
xor
inc
scas
sub
jnp
adc
push
shlb
rclb
pop
cmp
and
xchg
mov
lcall
in
mov
and
adc
xor
dec
mov
xor
lds
push
dec
rclb
movsb
add
jmp
mov
mov
out
js
rcrb
mov
push
loop
movsb
and
push
test
jecxz
repnz
push
add
mov
out
push
jmp
xchg
shll
fs
add
mov
xchg
mov
fsubs
pop
sbb
dec
mov
pop
insb
mov
mov
xchg
leave
scas
inc
ja
imul
scas
sti
xchg
movsl
push
rcrl
sbb
pusha
inc
jge
call
jb
jge
xchg
nop
lds
lcall
mov
std
inc
lret
out
push
sbb
pop
push
js
sbb
dec
add
sahf
jl
sahf
and
ret
ds
inc
xchg
aas
loopne
xor
adc
iret
insl
dec
dec
mov
out
xchg
in
push
cmpsl
xor
sbb
je
jecxz
xor
lcall
mov
inc
movsb
inc
and
push
daa
es
call
push
jle
popa
add
loope
dec
dec
add
jo
jge
and
orb
mov
jnp
adc
es
fwait
cmp
cmp
sahf
and
enter
pop
dec
adc
jp
add
pusha
dec
mov
sub
adc
and
mov
mov
or
ds
adc
cmp
cmp
inc
xchg
aaa
push
xorl
xchg
xor
cli
push
mov
or
fistl
aas
mov
gs
jmp
test
sub
jae
popa
xchg
fs
xor
int3
insl
lret
or
and
add
jge
mov
mov
cmp
iret
sub
lahf
loopne
xchg
push
xchg
xchg
sbb
or
outsb
push
push
mov
movsb
mov
sbb
mov
mov
or
adc
cld
gs
sub
clc
mov
outsb
cmpl
mov
popa
push
daa
or
loop
adcl
sti
ss
and
stc
out
ljmp
lret
sub
xor
in
dec
sbb
push
fnstcw
xor
notb
mov
mov
inc
inc
out
js
repz
fisubrl
repnz
lock
incb
jae
testl
cmc
push
insb
jge
push
cwtl
ret
sbb
dec
inc
clc
stos
mov
cmp
and
movzwl
addr16
mov
push
shr
and
jmp
cmp
sub
push
push
cmp
lods
jnp
pusha
sarb
fwait
sub
jmp
lcall
popf
sbb
lods
cmp
and
call
mov
jne
pop
jmp
ds
leave
push
xchg
idivb
add
pop
mov
sbbb
call
aas
or
sahf
mov
test
pop
hlt
push
dec
and
pop
push
push
pushf
push
jno
inc
scas
lret
inc
outsb
pushf
and
sub
jmp
xchg
clc
call
arpl
bnd
pop
test
aad
mov
sarb
fnstsw
xchg
cmp
dec
ss
pop
or
xor
mov
in
stc
xor
aad
idivl
pop
fs
mov
lods
and
mov
int3
subl
xor
clc
dec
je
outsb
lea
test
mov
cmc
mov
pop
jle
mov
sub
divb
dec
leave
leave
and
jp
cli
xchg
xor
sbb
outsl
arpl
pop
mov
inc
xchg
sub
cmp
int
fldcw
jno
js
xlat
ds
decl
xor
scas
jno
call
fdivrp
mov
dec
xchg
pop
dec
pop
out
xor
jb
ret
mov
jo
dec
xor
pop
mov
pusha
sub
nop
cmp
push
fwait
loope
dec
fucomi
adc
negb
jmp
fwait
push
mov
shl
movb
mov
mov
ret
mov
lock
pop
sub
lds
dec
lods
arpl
mov
add
js
xorl
decl
lahf
adc
iret
dec
popf
xor
cmp
sub
xchg
pop
push
xor
pop
lcall
rclb
frstor
lret
fisttpl
fisubs
lea
push
sbb
mov
jg
cmp
imul
mov
shrl
mov
push
mov
push
xor
mov
daa
fwait
test
inc
inc
mov
add
add
and
ds
into
popa
or
mov
popf
mov
iret
enter
sbb
mov
fiadds
push
rol
xchg
cmp
adc
imul
int3
mov
in
xorb
outsb
cmp
xchg
sbb
testl
out
in
popa
les
or
rolb
inc
movq
inc
shrb
insb
cld
push
faddl
inc
int3
sti
or
jb
push
jno
inc
xchg
xchg
popa
arpl
inc
push
jmp
cmpsl
fadds
data16
sbb
mov
cmp
cmp
es
jbe
repz
lret
sub
cli
cld
loope
pushf
inc
or
rolb
adc
in
gs
clc
adc
sar
inc
lcall
adc
dec
push
sbb
test
push
sar
add
sbb
sbb
stc
xor
mov
add
shlb
scas
inc
dec
lods
ja
sbb
pop
popa
jecxz
icebp
mov
test
popa
loop
and
daa
outsl
jecxz
push
pushf
mov
push
shld
icebp
pop
and
push
imul
sub
sbb
mov
jns
idivl
adc
fisubs
test
xchg
mov
adc
popa
sbb
leave
stc
sub
push
or
push
int3
repnz
pop
mov
ja
xchg
lds
add
inc
inc
jb
popa
xor
stos
aam
mov
jp
cmp
imul
mov
cmp
sbb
in
daa
daa
and
fnstcw
rolb
call
jmp
bound
push
mov
aas
out
push
cmp
stos
data16
push
mov
flds
loop
sub
and
mov
or
dec
xlat
repnz
pop
jno
jg
and
push
fisttpl
std
mov
hlt
enter
xchg
push
add
imul
jmp
mov
mov
les
cmp
pushf
jns
cli
out
xor
imul
outsl
cli
mov
cmpsb
rol
pop
scas
dec
out
or
popa
and
mov
ss
or
pop
insl
xchg
subl
sahf
les
mov
push
sub
xor
enter
jg
lock
pushf
dec
repz
arpl
pop
sarb
leave
jnp
iret
xorb
pop
out
cmp
or
out
cwtl
push
loopne
test
mov
je
fldt
addr16
pushf
je
ja
loopne
pop
jp
inc
fsubrs
push
cmp
adc
mov
fs
jb
jge
push
test
out
jns
lcall
inc
xlat
adc
ljmp
lock
xchg
pop
imul
dec
sbb
pop
daa
ret
in
fwait
inc
push
icebp
mov
mov
mov
inc
decl
and
inc
and
and
dec
fidivrl
mov
cld
add
or
lcall
mov
xlat
arpl
daa
outsb
add
ds
pusha
xchg
jb
mov
aaa
dec
xchg
sti
stc
pop
test
into
dec
mov
fstps
neg
pusha
insb
arpl
outsb
cld
gs
or
lret
inc
pop
bound
jae
dec
xchg
aad
sbb
test
cmp
and
repnz
jp
and
pop
nop
cmpsl
mov
sub
jecxz
test
int
out
ret
inc
sbb
out
ret
mov
cli
pop
pop
mov
icebp
and
ss
scas
inc
push
xchg
ds
xchg
jle
xor
nop
jo
push
loop
add
dec
pop
std
push
in
imul
sarl
jb
mov
out
dec
pop
stos
or
ljmp
data16
leave
push
inc
xchg
mov
repnz
add
sbb
lahf
imul
mov
outsb
xor
xchg
and
sub
sti
add
in
decb
mov
aad
mov
aad
push
dec
ret
sub
outsb
outsl
mov
fnsave
imul
scas
xchg
out
imul
xchg
jecxz
call
inc
add
stc
fisubrl
clc
xchg
imul
je
mov
add
xchg
nop
movsb
or
or
dec
cmpsb
lods
sbb
or
and
ret
pop
and
mov
and
mov
fs
xchg
iret
xor
inc
jo
sub
jl
xchg
call
fistps
in
or
leave
fadds
inc
notl
movsl
xlat
gs
inc
dec
pop
insb
or
int3
stos
lcall
lods
xor
jle
out
push
rcr
mov
loop
cmp
cmp
sbb
fsubr
das
push
dec
ret
jecxz
bnd
adc
sbb
mov
loopne
repnz
daa
inc
jo
out
aas
sub
pop
xchg
push
shlb
insl
movsb
or
notb
lods
mov
xor
xor
jno
xchg
mov
cmp
sbb
sub
in
je
push
dec
test
aad
imul
dec
clc
mov
lahf
pusha
clc
out
mov
pushf
xchg
cmp
clc
push
lds
outsb
xchg
xor
inc
mov
jmp
jle
mov
xor
shrl
mov
mov
and
cld
out
lea
pop
xchg
addr16
dec
jns
jb
push
pop
push
xor
xchg
out
xchg
jmp
and
mov
arpl
lahf
pop
shll
dec
jo
add
jo
mov
push
int3
int3
mov
mov
inc
call
sbb
fimull
lea
shl
mov
and
mov
aas
jecxz
dec
fdivs
gs
add
leave
jecxz
push
test
push
push
add
pop
rcrb
jne
movsl
fwait
rclb
mov
fildl
cmp
cwtl
cmp
and
jecxz
rclb
int3
pop
rcll
out
adc
dec
scas
rcrl
in
movb
aaa
std
leave
das
mov
mov
inc
jb
xor
lahf
push
call
stos
jbe
and
arpl
pop
mov
movsb
jo
fistpll
scas
lods
sub
sbb
pop
sub
mov
lds
pop
mov
dec
cs
mov
in
add
pop
call
push
cmp
dec
mov
test
std
or
lret
adcb
dec
filds
pusha
xchg
sbb
cmp
or
mov
push
pop
in
dec
aam
nop
aam
adc
jge
lea
pop
cmpl
mov
cli
rorl
push
lds
aas
mov
pop
pop
into
mov
jg
mov
jo
insl
mov
enter
and
cmpsb
popf
jbe
pop
jb
gs
out
push
lods
cmp
cmpl
test
sbb
fs
aaa
shlb
rol
jg
add
cmpsl
fwait
jecxz
test
jnp
sub
popf
fsts
enter
cmp
mov
aas
es
fs
inc
aam
into
or
lock
stos
shlb
sub
or
sub
js
dec
cmp
mov
or
xorb
inc
xchg
pop
hlt
jmp
outsb
sbb
mov
insb
jp
sbb
sub
sahf
ljmp
data16
pop
push
adc
test
inc
push
jle
bound
popf
insb
push
rcrb
inc
jns
pop
dec
rolb
test
push
xchg
rcll
das
mov
adc
jb
mov
push
add
jo
std
push
stos
jge
inc
pop
mov
ds
inc
adc
adc
in
xor
mov
cltd
xchg
test
dec
push
call
mov
lahf
push
les
sub
mov
cmp
adc
out
fstl
mov
pop
shll
pop
repz
pop
sbb
lret
outsl
fidivs
push
xchg
inc
mov
cmc
in
sbb
sahf
xchg
leave
push
rcll
pop
enter
push
hlt
dec
adc
js
pop
add
mov
ss
lahf
shll
mov
arpl
sbb
dec
xchg
fsubrs
scas
aaa
xor
sub
dec
in
or
pop
stc
aaa
sbb
cmp
inc
xchg
ja
lcall
outsl
mov
aad
movsl
jb
adc
pop
cs
shlb
xor
xor
xlat
xor
pop
clc
fildll
movsl
aaa
xorb
mov
lret
sti
out
xchg
ret
mov
cwtl
dec
mov
movsl
jne
in
inc
dec
popa
insb
jcxz
lods
subb
dec
inc
scas
imul
mov
pop
cmp
lret
hlt
xchg
dec
adc
sub
lcall
out
lcall
popa
out
mov
hlt
mov
jmp
repz
movsl
mov
xchg
dec
adc
add
and
inc
mov
add
or
fstl
mov
pop
lret
or
fcoms
jb
pop
inc
inc
int
push
cli
and
sarl
je
dec
cmp
popa
cli
popa
fwait
ret
cld
jo
cld
push
mov
jge
xchg
fiadds
mov
mov
mov
inc
pop
js
fmull
fistpll
adc
sbb
test
pop
mov
mov
mov
mov
jb
sub
loop
insb
xchg
loopne
pop
dec
push
cmp
test
cmpsb
cmp
jge,pn
enter
movsb
jns
pop
test
add
xor
sti
push
xor
mov
sti
mov
into
sub
push
imul
lret
add
ss
sub
in
push
fwait
movsl
mov
xor
insb
xor
inc
nop
mov
jle
adc
test
lods
xchg
and
faddl
loope
mov
icebp
mov
cmp
jge
pusha
lret
and
xor
sbb
cs
lods
mov
xchg
ret
inc
push
data16
flds
jg
pop
or
add
jae
jecxz
stos
push
xchg
mov
jno
mov
push
pusha
xor
xor
lahf
into
mov
in
neg
pop
icebp
or
push
cs
dec
cltd
int
pop
mov
or
cwtl
add
push
cs
cmpsb
xor
stos
les
mov
movsb
adc
xchg
push
ds
pop
fildll
arpl
leave
xchg
ret
mov
test
add
mov
mov
mov
add
mov
outsl
inc
jb
pop
push
or
lea
jo
or
and
hlt
jbe
mov
jae
das
push
loope
shl
push
insl
cld
push
ret
jmp
ret
sub
loope
pop
cmp
mov
xor
sbb
sarb
lods
les
cmp
es
xchg
cwtl
fs
popf
push
lds
inc
sub
mov
fstl
inc
imul
popa
loope
cmp
cwtl
and
movsb
mov
pop
jbe
push
fildll
xor
inc
rcll
hlt
jns
mov
sarl
pop
in
adcb
loopne
test
test
push
std
cmp
or
or
and
xlat
mov
mov
mov
inc
jae
sbb
jnp
stc
es
outsb
out
adc
jecxz
and
xor
jle
popf
ss
mov
sub
ret
fldl
add
andb
andb
les
mov
jo
push
sub
mov
push
addr16
mov
jecxz,pn
lret
cli
mov
add
imul
mov
popa
jmp
fistpl
or
ja
stos
stos
adc
mov
or
sbb
in
sarl
mov
push
xchg
cltd
leave
pop
dec
and
push
dec
filds
aaa
icebp
push
scas
dec
movsl
scas
inc
dec
xchg
or
xchg
stc
add
inc
and
idivl
pop
lea
push
sub
sarb
push
inc
mov
xchg
cli
lods
adc
push
cmp
xchg
xchg
int3
fldt
inc
fisttps
xchg
xlat
daa
into
leave
shrb
mov
dec
jae
les
test
add
mov
into
flds
and
add
and
or
out
loopne
xchg
popa
mov
jge
mov
sarl
and
orb
inc
lret
sbb
lods
movsb
xchg
and
sub
push
push
push
jne
adc
inc
fildll
jl
inc
jbe
or
int3
in
inc
sub
lret
lret
sub
fldcw
sbb
mul
mov
cld
push
jne
imul
outsb
addb
cmp
push
es
mov
stos
jl
pop
jmp
cltd
cwtl
aad
and
popa
push
mov
jecxz
movups
in
mov
repnz
inc
lret
cmc
jbe
jmp
mov
add
xor
push
push
out
std
mov
ljmp
movsl
ljmp
in
vpslld
insb
pop
adc
in
inc
icebp
ret
sub
mov
push
lds
and
mov
leave
mov
neg
cltd
in
add
mov
cmpw
rcrb
scas
pop
enter
clc
cwtl
jno
or
dec
sbb
lret
in
repnz
cmp
andl
cmpsl
and
inc
sahf
sub
dec
out
arpl
sbbb
sahf
xor
gs
inc
or
pop
pop
jecxz
inc
or
or
divb
out
out
test
dec
add
lret
and
cmp
das
ret
fidivrl
inc
cmp
lock
mov
sbb
data16
cmp
insb
inc
out
sub
or
dec
lock
jbe
arpl
mov
sub
int3
add
adc
inc
fldenv
adc
mov
loop
in
out
enter
adc
mov
cmp
push
dec
icebp
in
es
cmpsl
pushf
xlat
sbb
ds
dec
and
mov
xchg
push
add
push
cmpsb
cli
rcll
outsl
mov
test
jbe
lret
mov
jl
test
rdpmc
pop
inc
ljmp
jle
popf
push
push
data16
mov
into
sub
fildl
jge
mov
mov
and
adc
aad
cmp
adc
in
dec
adc
adc
push
xchg
lret
dec
incb
push
sbb
aad
in
add
dec
jl
nop
insl
cwtl
pop
sbbb
or
repz
mov
push
insl
loopne
adc
sub
mov
outsl
mov
in
xor
iret
outsb
outsl
mov
sub
pop
inc
mov
test
jecxz
mov
int3
sub
cmp
pop
push
cmpsl
pop
sbb
shrb
add
and
andb
cli
out
push
cli
jge
xchg
inc
xchg
adc
andb
inc
imul
roll
imul
xor
xlat
daa
jbe
sub
maxps
sub
out
test
cli
pop
cmp
xor
sbb
cltd
je
cmp
call
xchg
mov
lret
in
shlb
jl
mov
mov
notl
or
out
shll
lea
imul
push
stos
xor
jno
pusha
mov
inc
stos
lahf
dec
js
fadds
adc
xor
hlt
inc
fmull
movsb
rcrb
dec
out
int
cltd
push
dec
sub
bound
cs
mov
and
ret
mov
sbb
mov
mulb
jp
push
push
pop
lods
rcrl
fcompl
repz
in
shl
sahf
scas
std
ret
dec
adc
mov
out
lea
lcall
out
lcall
cli
ret
push
mov
jnp
push
iret
hlt
es
shlb
bound
xor
out
in
shrb
jb
inc
cmp
and
fsubs
sbb
nop
aad
and
fmuls
sub
fstpt
xchg
sub
pop
pop
push
ficoml
movsl
cmp
mov
pusha
jp
scas
outsb
aaa
jbe
movsb
sti
inc
mov
dec
push
mov
rcl
in
mov
lock
mov
adc
mov
sub
aam
add
dec
push
or
dec
mov
jg
insb
cmc
das
fwait
cmpsl
hlt
test
lods
or
movsl
scas
int
dec
push
fwait
jo
jp
xor
aaa
mul
dec
in
sbb
jnp
ds
data16
mov
lcall
jae
lret
dec
outsb
adc
fadd
iret
cmp
imul
jbe
sub
mov
stos
adc
pop
cmp
iret
inc
dec
sub
sub
ja
jge
cltd
xor
out
xchg
ds
cli
pop
mov
push
xchg
mov
sub
mov
je
mov
mov
inc
jg
mov
xor
inc
ret
dec
pop
int3
pop
mov
enter
cmpsl
call
test
inc
jne
adc
lret
push
inc
cmpsl
sbb
xor
mov
xchg
pop
and
or
out
and
in
popa
and
movsb
or
pop
hlt
add
addb
push
and
mov
dec
sub
mov
cltd
or
sub
inc
jge
mov
std
insb
xor
movsb
nop
and
jb
jae
repnz
xor
push
push
add
imul
inc
dec
test
mov
jmp
daa
imul
jmp
jle
sbb
xlat
dec
andps
cmp
in
xchg
dec
mov
in
jg
lret
scas
or
shr
lret
testb
pop
test
popf
clc
sti
push
xchg
and
std
and
and
fwait
or
inc
push
in
cmpsb
test
movsl
add
push
sbb
incb
enter
xchg
sub
xor
mov
scas
into
inc
imul
sbb
adc
test
add
pop
lock
mov
add
mov
test
xlat
add
sarb
test
jmp
cltd
push
jg
mov
inc
popa
outsl
xchg
push
pop
shrl
dec
call
mov
mov
push
movsb
push
push
mov
lret
fsubrl
nop
xchg
and
xor
out
push
ss
and
push
add
cltd
pop
cmp
mov
mov
fsubrl
fldenv
int3
xor
dec
ljmp
push
push
cmpsl
aaa
adc
rcrb
add
sti
movl
jns
push
xchg
push
xchg
adc
jl
loop
icebp
lea
daa
popl
pop
push
xchg
jnp
cs
mov
fildll
je
mov
lcall
subl
mov
pop
fidivs
or
sub
jb
outsl
push
dec
aaa
jg
jns
daa
ja
es
add
jne
jp
jae
xor
movsb
push
ret
add
jmp
inc
cmp
jg
daa
out
outsl
xchg
mov
js
insb
mov
mov
insb
outsl
repz
rcl
lock
xor
adc
dec
mov
repz
fistpl
jo
or
out
sarl
push
fsubl
fimull
sub
fcoml
int3
scas
js
fs
push
sub
jnp
pusha
adc
imul
mov
loopne
cmpsl
mov
repnz
into
push
cmp
jo
sub
popa
rcpps
add
inc
in
popa
jae
pop
mov
mov
in
push
shlb
xorl
mulb
xor
inc
test
sub
pop
iret
jns
cli
adc
hlt
jp
pop
sbb
fildl
jg
cmp
xor
or
into
adc
scas
scas
push
jl
lret
cmp
roll
inc
dec
fdivr
sbb
inc
push
enter
adc
mov
sti
sbb
mov
sbb
mov
mov
mov
inc
mov
xor
popf
ss
pop
stos
insl
stos
mov
scas
mov
repnz
inc
ds
lods
aam
ljmp
stos
jmp
add
inc
lock
std
xchg
fidivrl
lea
xlat
and
cmp
dec
adc
xchg
es
orl
lods
int3
pusha
lret
hlt
push
xchg
dec
ljmp
xchg
dec
fistps
and
lret
jmp
cs
lret
enter
dec
pop
cld
sbb
shrb
lds
mov
aaa
xor
decb
pmaxub
leave
pop
js
dec
hlt
pop
adc
mov
lahf
jecxz
orb
mov
ljmp
dec
jno
sbb
push
pop
jne
or
fistpll
scas
and
dec
stos
cmp
xor
sub
outsl
lahf
aaa
cmp
scas
and
pop
xor
sub
inc
push
inc
hlt
pop
mov
sbb
cwtl
inc
lcall
js
mov
mov
or
imul
push
push
shll
mov
pop
push
xlat
lods
cmp
iret
out
lods
mov
push
or
push
inc
mov
mov
jns
jo
mov
sarl
mov
scas
insl
in
insb
in
mov
stos
mov
popl
outsl
inc
xchg
push
add
arpl
das
dec
repz
outsb
mov
enter
mov
bound
icebp
dec
cltd
inc
mov
xor
adc
hlt
jle
cmp
mov
neg
pop
inc
add
dec
and
sbb
out
imul
xor
pop
inc
or
pop
pop
sub
push
dec
js
push
sub
lock
and
jle
xchg
shll
push
out
ret
pop
cmpsl
mov
insb
push
negb
inc
mov
je
push
fbld
inc
jecxz
adc
add
call
out
gs
add
pop
add
leave
pop
lcall
xchg
pop
lahf
cmc
cwtl
inc
outsl
shlb
xor
cltd
arpl
es
mov
fwait
cmpsl
mov
or
xor
mov
push
sbbl
cs
sub
mov
addr16
idivl
inc
mov
pop
dec
or
rcrb
sti
or
ljmp
mov
add
rcl
push
fcompl
sbb
cmp
jo
insl
jne
add
pushf
mov
imul
mov
ret
jo
lret
mov
xchg
es
or
xor
in
xchg
lock
cwtl
mov
in
xor
jns
inc
cmp
aad
nop
pop
outsl
adc
cmp
and
and
in
shlb
dec
mov
mov
xlat
adc
sarl
sub
lahf
or
cmp
xor
mov
arpl
int3
xchg
push
push
mov
stos
jmp
nop
push
rorl
cmp
dec
xadd
data16
negl
jns
imul
insl
aaa
mov
scas
cmc
jb
and
xchg
iret
mov
subb
pop
cmpb
inc
cwtl
dec
movsl
clc
es
mov
addb
lret
cmp
cmp
sub
adc
lahf
adc
jle
int3
negl
jbe
aas
repz
sub
pushf
push
in
in
xor
cmp
lahf
repnz
std
jge
scas
sub
jge
jnp
int3
mov
cltd
dec
or
or
xor
and
cwtl
xchg
pop
pop
enter
dec
cmc
and
test
std
xchg
sub
inc
loope
cld
hlt
add
xchg
dec
add
inc
mov
les
jmp
sbb
mov
push
into
jp
jns
test
orb
cmp
std
stos
or
popf
mov
scas
dec
dec
pop
movl
pop
divl
mov
add
xorl
add
adc
fwait
pop
and
lahf
jno
sub
push
pop
mov
ja
and
mov
xchg
ss
rclb
in
cld
cmpsl
xor
std
push
jg
adc
insb
ljmp
sahf
daa
or
jno
push
mov
aad
xor
das
sub
popa
pop
hlt
push
mov
out
sbb
insb
popf
lahf
adc
adc
dec
outsl
pop
movsb
mov
dec
push
ja
mov
mov
loopne
mov
sub
and
adc
in
adc
adc
and
push
std
faddl
movsb
pop
cmp
jmp
ss
mov
push
fimuls
fcoml
jae
mov
mov
add
movsl
hlt
mov
loope
out
call
jbe
mov
add
cmp
outsl
xchg
mov
rcrl
cld
mov
and
test
outsb
sub
aas
adc
jo
add
std
leave
popa
mov
push
push
cli
pop
sbb
mov
add
adc
pop
rclb
jb
mov
mov
gs
adc
shll
or
xchg
aas
shlb
cmp
dec
loopne
xchg
repnz
xchg
pop
sbb
out
add
fistpll
pop
pop
outsl
sub
jnp
std
in
mov
movsb
fwait
adc
jmp
orl
bound
test
leave
test
into
loope
push
push
push
push
clc
pop
leave
or
pop
sti
add
aas
pop
and
jb
out
dec
sbb
call
int
cld
jo
cmpsl
adc
loopne
aas
lock
mov
xor
mov
scas
icebp
jmp
mov
pop
fisttps
dec
fstpl
test
mov
dec
inc
jg
xor
mov
subl
mov
fwait
sar
jns
mov
pop
jge
pop
dec
idivl
or
rcr
push
mov
pop
jb
fiaddl
ljmp
mov
out
and
inc
insb
test
ret
push
xchg
or
mov
flds
mov
adc
cmpsb
sbb
xchg
das
js
stos
mov
pop
push
mov
jnp
lods
dec
xor
popl
xor
push
add
cmp
scas
enter
dec
xchg
jne
inc
aad
pop
dec
ss
push
stos
ret
inc
inc
cmp
dec
pop
push
mov
sbb
shrl
jmp
xor
lret
test
popf
and
inc
lods
int3
mov
sbb
ljmp
lea
popf
push
jg
add
testb
adc
inc
sub
mov
lea
push
xchg
xor
cli
lock
fnstenv
faddp
enter
call
adc
stos
sbb
rclb
icebp
xchg
adc
push
movsl
mov
jecxz
mov
sbb
inc
and
out
xor
insl
enter
inc
in
movsl
out
xchg
sub
ficomps
xor
loop
fisubrs
pop
pop
and
cmp
aam
xlat
repz
mov
daa
xchg
shl
cmp
loopne
dec
jb
add
adcb
popf
stc
xchg
scas
xchg
hlt
or
aas
dec
aam
psubsb
loop
mov
push
jbe
pop
sti
mov
cmp
xchg
ret
dec
fxch
push
popa
inc
shrl
inc
es
test
jne
iret
rclb
sti
call
and
sub
lcall
les
clc
pop
push
xor
or
dec
cmp
fidivl
sub
sbb
sbb
mov
in
add
lods
pop
xor
int3
in
leave
add
pop
lret
ret
cltd
stos
pop
aam
aaa
movsb
cltd
fwait
popa
inc
push
in
cltd
sbb
shll
cs
insl
inc
jle
add
mov
test
jge
dec
in
jg
mov
pop
jmp
stos
xor
mov
cwtl
test
mov
add
sbb
xor
das
cmp
int3
mov
dec
push
call
cwtl
jb
stos
repz
fs
imul
xor
pusha
stos
icebp
dec
jg
sub
dec
mov
lea
imul
adc
aam
push
outsl
ja
xchg
repnz
mov
stos
xlat
sbb
in
inc
sahf
in
inc
out
mov
orb
icebp
cmpsl
dec
sub
mov
xchg
aad
inc
mov
jns
cmpsb
ds
bnd
add
cmovnp
mov
xchg
pop
inc
jg
adc
and
xchg
dec
inc
test
jecxz
shlb
roll
hlt
or
mov
jmp
lock
pop
repnz
sahf
and
mov
xchg
jge
lret
jno
cmp
addr16
movsl
mov
shll
in
pop
into
mov
test
call
inc
jp
clc
out
shlb
add
dec
mov
hlt
movsl
xchg
bound
push
inc
mov
push
jb
xor
sub
lret
sbb
mov
pmaxub
shll
dec
ret
call
shrl
dec
mov
pop
add
ds
pop
sbb
ss
adc
sbb
das
cmp
dec
stos
out
sbb
cmpsb
scas
xchg
cmp
jnp
xor
push
mov
imul
push
movsl
xchg
add
aaa
mov
jb
addl
das
mov
xchg
and
testb
xchg
cmp
inc
fnstenv
xlat
cmpsl
divl
push
dec
sbb
sub
aas
and
mov
loopne
and
push
jmp
or
in
adcb
push
in
mov
adc
cmp
cmp
cmp
pop
jg
fisubrl
push
cs
jbe
cmpb
js
loop
mov
or
rol
cmp
pop
jg
test
sbb
dec
movsl
push
jnp
jl
mov
repnz
sub
and
xchg
cmpsl
sbb
xchg
clc
jbe
daa
mov
clc
inc
jmp
inc
push
scas
add
leave
adc
ss
outsl
xchg
out
movsb
jae
js
mov
daa
icebp
dec
mov
mov
inc
xchg
adc
mov
fists
mov
or
dec
test
enter
mov
jmp
test
roll
push
xor
sahf
jmp
jno
das
or
mov
fisubl
mov
push
or
fmull
arpl
scas
mov
insl
mov
mov
mov
and
rolb
fsubp
lods
shr
cmp
lahf
lds
pop
enter
mov
movl
repnz
xchg
jp
push
xor
mov
cmpsl
imul
ret
xchg
pop
jge
and
orl
ja
mov
mov
sub
fiaddl
je
sub
lods
push
and
lds
add
xchg
add
push
insl
cmp
and
cmp
shlb
lods
aaa
sub
out
push
or
mov
adc
dec
add
sub
and
mov
out
add
clc
mov
jae
cmp
inc
dec
into
adc
test
mov
add
sti
out
pop
out
ret
pop
out
scas
loope
push
int3
je
xchg
lret
in
sub
imul
cmp
mov
cs
adc
and
enter
adc
cmpb
cmp
bound
leave
jno
roll
aad
mov
push
adc
shlw
jb
jg
jp
stc
cli
fmul
cmp
inc
inc
imul
std
insb
sbb
lret
fwait
pop
mov
lods
dec
or
xor
dec
pop
xor
test
inc
pop
pop
dec
dec
adc
jb
inc
push
mov
repnz
mov
inc
add
out
adc
xlat
xorl
cmpsl
jge
cmpsl
mov
or
cmp
pop
aam
sahf
cli
out
outsl
out
mov
dec
mov
xchg
xlat
pop
cwtl
into
dec
adc
lahf
loopne
inc
cli
xchg
andb
jnp
or
jb
jmp
lock
aas
mov
jne
ljmp
cmp
cmpb
or
jl
inc
fisttpl
add
adc
aas
jecxz
xchg
xor
mov
bound
sti
scas
xchg
dec
out
xchg
into
hlt
mov
addr16
inc
pop
lea
cltd
int3
jmp
out
aas
xchg
pop
lds
subb
mov
dec
gs
iret
cli
jge
sbbb
mov
add
orl
mov
cli
and
dec
and
xchg
jmp
lods
sbb
push
into
lock
stc
inc
inc
addr16
fndisi(8087
inc
not
aad
adc
sbb
inc
test
rorb
je
pop
jge
push
xchg
adc
adc
test
lahf
out
and
ss
stos
imul
in
xchg
inc
lods
add
pop
or
cmpsl
adc
dec
inc
jo
jno
pop
add
and
xchg
or
movsb
dec
cmp
jge
fcoms
iret
push
add
mov
in
adc
ljmp
test
mov
push
dec
lret
add
mov
ds
popf
dec
xchg
movsl
mov
mov
leave
push
popf
retw
idivb
loop
xor
mov
sbb
and
add
shl
bound
mov
push
dec
jne
scas
inc
test
inc
push
and
sbb
mov
ret
and
in
repnz
fs
addr16
scas
sti
nop
lret
dec
xor
test
xchg
test
adc
fs
jle
or
test
or
cltd
jno
fs
iret
push
push
cmp
iret
mov
push
cmpsl
jne
pusha
lods
mov
repz
xlat
sub
mov
inc
test
jl
fucom
dec
mov
add
aas
scas
js
or
into
fnstenv
pushf
mov
ret
ret
sub
mov
pop
ss
adcb
repz
adc
pop
xchg
out
adcb
pop
loopne
fmull
std
and
xchg
jecxz
push
adc
xchg
and
and
jae
je
bound
jge
pushf
xlat
or
outsl
fwait
vpshaq
sub
jl
cmp
inc
sahf
ss
mov
pop
cltd
pop
popf
mov
test
je
incl
dec
stos
pop
imul
popf
pop
es
or
xchg
cmp
xor
adc
in
out
clc
add
pop
rcl
pop
ljmp
lods
arpl
mov
pop
out
cmp
rcr
sbb
imul
pop
cmp
cmpsl
push
fists
je
sbb
negb
adc
sub
jp
std
sbb
sbb
call
jmp
or
shll
pop
fimull
push
or
jle
sbb
xchg
sub
iret
pop
mov
jecxz
mov
popa
cli
ret
int3
test
iret
and
inc
lcall
and
lods
xchg
into
xchg
mov
dec
lock
jne
arpl
lods
pop
ret
out
cltd
mov
decb
lahf
lahf
test
popa
push
dec
and
sub
arpl
test
loopne
lcall
in
inc
push
adc
adcl
dec
push
mov
mov
mov
sbb
cmp
ret
sahf
int3
test
add
xchg
fs
dec
in
pop
mov
repz
xchg
mov
shlb
sub
mov
pop
mov
popa
lods
repz
push
shll
out
cmp
aaa
int
negb
andl
fsubrp
add
sub
adc
inc
sbb
inc
xchg
mov
cwtl
out
fwait
ds
pop
data16
enter
adc
incl
test
cmp
add
fmuls
jmp
imul
out
fildl
int3
adc
dec
shrl
add
cli
push
xor
lahf
cs
and
sbb
lret
stos
cmp
int3
mov
insb
and
sahf
pop
lret
jecxz
ss
or
dec
push
cs
js
ret
lock
cmp
fmull
js
out
cmp
fstl
faddp
jmp
pop
mov
das
cmp
sbb
sbb
mov
test
adc
xchg
das
mov
pop
sub
inc
ret
les
pop
lock
lock
mov
dec
clc
adc
icebp
enter
and
xchg
xor
cmp
aas
scas
push
xchg
sarb
dec
mov
repnz
int
cmp
les
lea
testl
inc
data16
xchg
mov
mov
rorl
out
adc
jl
mov
jne
inc
adcb
fildl
sub
mov
sub
jb
shll
mov
jo
sbb
mov
push
sti
and
fsub
test
jle
adc
lds
jno
mov
pop
push
mov
dec
sbb
mov
jg
stos
in
push
sbbl
pop
sbb
leave
in
xchg
mov
leave
xor
shl
or
ljmp
data16
ljmp
int3
jne
aas
aas
cmc
cwtl
add
jno
cmp
sbb
ror
xchg
mov
pop
mov
lahf
bound
lcall
push
sbb
out
jmp
sbb
xor
popa
inc
rcrl
data16
sbb
cmp
sub
lds
mov
jecxz
test
aam
push
rclb
sub
stc
mov
ljmp
mov
movsb
fwait
inc
into
outsb
dec
inc
mov
push
mov
mov
sbb
cmp
inc
inc
push
stos
pop
or
xchg
pusha
pop
scas
es
dec
cmpsl
cmpsl
sbbl
lret
rclb
mov
cmp
sarl
xor
mov
adc
push
inc
cmc
sahf
xchg
sbb
cmpsb
pushw
rdtsc
push
pop
lods
insl
daa
aad
add
dec
lods
mov
aam
sti
and
jge
pop
lcall
pop
sbb
shll
pop
push
sub
xchg
int3
test
inc
dec
dec
pop
and
vmulps
test
adc
push
cmp
add
adc
inc
inc
or
mov
ljmp
push
mov
enter
mov
mov
in
fmul
inc
nop
enter
adc
aaa
push
or
mov
push
cmp
mov
pop
clc
sub
cli
and
lock
cmpsl
mov
or
in
add
fadd
lahf
fidivl
mov
fiaddl
push
add
lods
aas
scas
mov
fwait
push
jno
sarb
incb
enter
xchg
fcomps
jae
sub
lods
insb
arpl
nop
jnp
xor
sub
xchg
lods
adc
ds
inc
imul
ret
cmp
iret
add
cmp
leave
dec
std
push
testb
mov
movsl
scas
dec
aas
push
mov
sub
cli
mov
cli
cmp
dec
rcr
xor
ljmp
ja
sub
call
mov
sub
push
dec
mov
fwait
loop
aad
sbb
jb
mov
shrl
push
jge
inc
mov
mov
outsl
pop
rol
sub
push
popa
jge
shlb
cmp
add
scas
mov
rcr
fmull
dec
mov
call
inc
sub
push
mov
mov
pop
mov
mov
sub
scas
or
aas
movsl
ljmp
out
xorb
sti
mov
dec
pop
outsl
rol
pop
js
adc
xor
fsub
mov
jle
jno
les
stc
cmp
loop
and
in
shl
sbb
and
mov
subb
xchg
in
mov
mov
notl
xlat
imul
fcomi
pop
pop
and
leave
je
cmp
push
xor
icebp
inc
jle
lahf
xchg
notl
pop
mov
pop
mov
fwait
cli
push
shlb
xchg
inc
add
and
mov
faddp
dec
fstpl
mov
movl
adc
cmp
fstl
sahf
icebp
push
ss
mov
pop
out
js
jbe
push
cmpsb
sbb
stos
mov
and
jmp
dec
mov
push
xchg
and
xchg
cmc
aad
in
push
pop
xor
mov
xlat
mov
xchg
fsub
jo
xchg
dec
ret
mov
xor
mov
inc
inc
in
push
divb
dec
push
cmp
scas
out
cmp
test
cmpsb
add
popf
adc
dec
cmpsb
push
test
lcall
jg
mov
push
pop
std
cmc
outsb
mov
std
daa
push
inc
fstps
arpl
cmp
mov
dec
loope
addl
popa
shr
pop
ftst
mov
cmc
dec
lods
inc
xor
movsl
cmp
sbb
arpl
adc
inc
std
jne
pop
mov
out
call
fsubrl
fmulp
sub
cli
cltd
mov
adc
jmp
jge
popf
mov
lret
and
std
sbb
aas
fnsave
aas
lods
jae
lods
cmpsl
push
adcl
inc
ss
shrb
loopne
xchg
cmp
push
fldcw
pop
sti
ret
fmul
pop
cmp
jecxz
lods
push
ljmp
idivb
leave
mov
shlb
out
fdivp
push
int
cmp
lcall
mov
lret
inc
imul
add
dec
stc
cmp
jp
mov
iret
lret
push
out
pushf
into
mov
and
add
push
lods
mov
fisttps
sub
lcall
fstps
xor
mov
add
test
mov
pop
and
movsb
mov
jns
mov
jge
cmpsl
sbb
inc
xlat
rclb
sub
shrl
inc
and
add
jo
inc
fcomps
and
fldenv
lods
or
out
fwait
xchg
xchg
add
rep
int
push
mov
into
xor
pop
sbb
fs
sbb
adc
stos
and
adc
cmpsl
xchg
push
and
pop
ficomps
das
imul
ss
lds
mov
mov
pop
fildl
div
mov
dec
pushf
cmc
ljmp
or
push
arpl
adc
dec
sbb
cld
shrl
add
jmp
loope
jne
out
add
lret
push
jno
xchg
sbbb
out
repz
and
mov
push
cmp
mov
and
add
adc
dec
jae
fwait
hlt
add
sbb
dec
push
int3
das
sarl
pop
xchg
pop
inc
inc
mov
and
xor
mov
aad
jge
fldl
push
rclb
aas
test
into
mov
mov
lods
ror
fwait
imul
inc
mov
aam
jle
repz
cmp
out
cmp
push
addl
add
test
cmp
push
mov
and
adc
or
sbb
js
push
or
testb
std
jg
je
in
xchg
sub
je
lahf
mov
sbb
movsb
gs
int3
fiaddl
dec
inc
hlt
enter
lret
push
push
loop
sub
jns
sbb
inc
mov
cmp
insb
dec
push
int
aam
sbb
sbb
pop
idivb
jnp
xor
and
rcll
divl
push
cld
icebp
jecxz
ds
sbb
bound
xor
in
cli
daa
ds
in
jns
int3
xchg
fwait
mov
ret
pop
add
cmp
hlt
xor
mov
dec
sbb
add
push
xor
into
xor
add
arpl
jae
and
jo
mov
push
ret
sub
push
lock
cmp
xchg
je
fdivrl
jne
cmp
int
mov
call
xor
test
pusha
sub
int
insl
adc
lods
xchg
adc
dec
pop
or
lret
cmp
and
ja
in
push
push
lods
cltd
sub
rolb
ljmp
test
inc
inc
stos
ljmp
sub
lret
xchg
mov
add
add
test
lods
sar
jno
adc
inc
and
sarb
mov
mov
push
out
mov
or
cmp
aam
or
or
add
sbb
sbb
jno
mov
incb
inc
adc
cmp
sbb
test
out
sub
fildl
int
out
lcall
xor
or
dec
lods
cltd
push
sub
jmp
pop
sub
loopne
lds
cmpsl
mov
push
rcrl
push
xor
loop
jg
movsb
shld
xchg
dec
outsb
into
jno
clc
cmp
mov
mov
addb
pop
sub
insb
out
les
cs
and
inc
fisubrl
xchg
inc
jo
sub
fcmovnb
gs
xchg
shrb
out
mov
iret
hlt
test
xor
adc
jp
cmp
mov
out
bound
or
arpl
push
lret
out
dec
mov
mov
out
mov
das
pop
xchg
cli
xor
std
sbb
aad
cmp
mov
inc
push
pop
inc
mov
push
insl
movb
inc
lcall
or
or
cmp
push
icebp
add
call
push
pop
sub
jbe
icebp
dec
jl
mov
loope
aad
leave
in
mov
push
shrl
ret
sbb
sub
out
or
jb
mov
out
lds
mov
fisubl
adc
stos
sbb
adc
sbb
in
fisttps
jmp
pop
clc
sbb
mov
sbb
ret
jno
mov
leave
cli
mov
out
adc
insl
xlat
sub
data16
cmc
pop
mov
cmpsb
xchg
inc
dec
incb
inc
je
out
inc
mov
int3
fdivrs
push
cs
pop
dec
lds
add
addr16
out
scas
mov
popf
mov
jecxz
arpl
mov
and
arpl
aad
cmp
iret
fwait
divl
ljmp
loop
xor
cmc
mov
mov
test
inc
push
cmp
ljmp
jg
cli
ljmp
or
mov
cli
xor
repz
cmp
sti
dec
push
rolb
dec
jp
mov
lcall
loopne
dec
mov
cmpb
test
pop
aaa
orb
in
fistpll
jnp
sti
ret
cmp
aam
test
jne
dec
xor
lods
test
adc
cltd
js
std
outsl
mov
mov
xchg
popf
sub
lods
dec
or
das
push
pop
fpatan
ja
lods
out
jmp
sub
sbb
lcall
repz
ss
adc
stc
xchg
movsl
pop
cmp
nop
cli
mov
jbe
rol
jb
popf
cld
mov
lods
andb
out
in
cmc
cmpsl
out
imul
or
or
mov
shl
sbb
or
sub
jb
jno
test
add
mov
xor
push
sub
aas
leave
rorl
mov
add
insb
xor
js
sti
pop
push
orb
add
lcall
lods
cld
jmp
sbb
sbb
and
sti
loop
push
sub
in
test
mov
mov
test
dec
adc
sbb
dec
fistl
cld
dec
and
test
mov
fisubrs
mov
xor
icebp
xchg
pop
fidivl
sub
mov
add
jb
cli
or
jo
xor
stos
cmp
aad
xchg
rclb
lret
and
cmp
iret
gs
adc
js
lahf
test
popf
xchg
cmc
adc
insl
cs
cwtl
mov
mov
inc
pop
mov
int3
das
shr
iret
inc
aaa
imul
es
pop
sarl
cmp
xorl
sbb
pop
push
cmp
mov
daa
sbb
imul
and
sti
out
jae
xchg
jmp
cmp
mov
incl
mov
notb
push
test
in
es
add
js
push
shll
pop
sub
stos
pop
mov
sbb
out
jge
jno
test
pushf
pop
inc
shll
shr
lret
add
in
push
adc
ds
loop
and
and
aaa
loope
pusha
jae
cs
xor
stos
lea
imul
push
sbb
and
cmp
or
data16
xchg
cmp
pop
clc
in
ds
negb
xor
fs
or
fwait
mov
sbb
dec
sahf
push
push
shll
xor
or
and
insl
inc
mov
mov
mov
inc
mov
jo
lods
jl
out
push
shr
sbb
daa
mov
inc
pop
xchg
in
push
mov
dec
movsl
dec
jl
adc
or
aas
mov
xor
jno
andl
fstpl
dec
ret
lods
repnz
jmp
lods
jg
push
pop
insl
sbb
push
dec
push
test
dec
aad
std
xor
leave
out
into
arpl
add
mov
jecxz
out
ror
cmpsl
add
fmuls
adc
jge
mov
and
mov
sbb
push
fisubs
mov
aam
push
and
stc
and
fadd
mov
js
pop
int3
daa
leave
shr
leave
inc
adc
or
pop
jne
cmpsl
popa
inc
mov
cwtl
cmp
out
sub
cwtl
leave
push
inc
divl
adc
shlb
sti
insb
cltd
int
je
pop
je
fiadds
mov
imul
and
outsl
push
scas
sbb
test
outsb
out
insl
push
pop
push
sbb
outsl
add
xor
push
negl
outsb
jg
rep
jp
lahf
or
jmp
mov
sbb
rorl
push
mov
sbbb
push
mov
mov
inc
pop
sbb
sbb
mov
mov
inc
mov
popa
out
outsb
add
xorl
mov
ret
inc
aaa
lret
mov
popa
out
push
xchg
daa
or
repnz
out
fidivrl
xor
jae
adc
mov
mov
fdivs
cmp
inc
pop
add
pop
xchg
adc
movsl
inc
and
mov
nop
and
pop
fidivs
andl
jbe
mov
mov
hlt
jmp
inc
call
sbb
xlat
xor
sti
sub
cwtl
xor
sub
add
push
cmp
xlat
ror
in
and
jb,pt
popf
pop
pop
add
stos
repnz
lods
mov
or
adc
in
jmp
mov
je
hlt
push
lcall
pop
fbld
bound
scas
jne
and
push
lahf
sahf
ror
or
and
xor
dec
sbb
cld
cmpsl
mov
js
out
sahf
xchg
ds
ficomps
pop
loop
test
pushf
mov
mov
movsb
aad
lahf
rclb
and
mov
insb
inc
ret
insb
jmp
mov
aam
add
lds
mov
lods
test
mov
fstp
mov
ret
xor
sub
arpl
aas
sub
out
sub
fistps
add
mov
mov
lds
cwtl
pop
data16
popl
pop
frstor
enter
in
lret
jmp
or
aad
dec
cltd
mov
sbb
add
test
push
fs
imul
push
mov
push
xchg
incb
arpl
mov
add
ret
mov
int3
fwait
cmp
out
jmp
jnp
es
repnz
dec
mov
cltd
sbb
xlat
lret
les
ficoms
insb
pop
rcll
notb
int3
push
push
cmp
shlb
sar
fisubs
in
hlt
ljmp
stc
fistpll
xorb
sar
das
incl
js
lahf
sbb
and
mov
push
stc
cmp
fsubs
stc
push
rcll
cmp
std
mov
arpl
mov
sbb
stc
or
outsb
sub
mov
call
out
or
mov
push
push
int
push
repnz
scas
push
adc
sbb
inc
pop
push
jnp
test
pushfw
mov
xchg
and
faddp
xor
sbb
cmc
lock
daa
cli
repz
bound
or
loop
jo
dec
cmp
adc
scas
cmp
push
pop
xchg
xor
sbb
cld
shll
xor
jb
fnstenv
pop
or
and
mov
lds
or
lock
jb
in
adc
adc
loopne
push
clc
add
pushf
data16
stos
mov
mov
mov
xor
jbe
pop
ret
dec
dec
das
push
test
lret
addr16
pusha
stc
outsb
dec
cwtl
shrb
and
push
ret
mov
popf
arpl
pop
pop
or
sti
or
sbb
push
ljmp
out
ljmp
xor
add
aaa
pushl
push
and
mov
hlt
or
push
sbb
cmpsb
jmp
pop
jbe
dec
and
ja
or
cs
xchg
inc
in
mov
cs
xor
loop
lea
sub
and
lahf
fbld
aam
add
and
pop
fneni(8087
and
inc
iret
xor
jp
or
dec
test
aam
sbb
jge
out
sub
xchg
rcrl
rorb
lock
cwtl
cld
fcmovbe
mov
add
push
and
pop
jae
adc
sub
mov
das
xorb
add
inc
aad
fsub
xor
xor
in
shll
add
or
movsb
leave
adc
fcompl
dec
hlt
cmpl
mov
inc
sti
cs
test
jb
scas
pop
pusha
ror
out
mov
push
cmp
sbb
ja
cli
push
repz
pop
push
setae
pcmpgtw
pop
rorb
inc
bound
lret
bound
mov
mov
aaa
es
cld
sbb
std
mov
stos
ret
mov
and
jae
aas
push
stos
es
sahf
push
dec
pop
jmp
ret
cmc
das
out
adc
jno
mov
push
push
in
imul
xor
or
notl
inc
sub
wrmsr
aas
push
or
pop
xlat
mov
je
push
bound
in
test
jb
push
out
cmpsl
outsl
jmp
aad
jge
jno
inc
and
testl
call
fs
dec
imul
mov
fstps
ror
push
test
stos
sub
xchg
paddd
lea
sbb
test
pop
test
test
and
push
xchg
dec
push
pop
cltd
mov
in
jle
mov
outsl
and
fcomps
lock
cmp
cmp
cli
fs
imul
gs
push
push
mov
fstpt
adc
adc
cmc
pushf
jae
xchg
or
rcrl
loop
sbb
push
jbe
pop
sbb
jno
lcall
adc
pop
sub
mov
mov
orb
sub
dec
sbb
icebp
call
mov
cmp
add
mov
les
and
aam
nop
orb
mov
mov
jnp
shll
hlt
data16
pop
popf
dec
inc
movb
adcb
outsb
inc
sbb
test
pop
mov
iret
cmc
mov
bound
mov
adc
mov
aam
ret
shl
dec
mov
into
xor
inc
in
mov
dec
divb
sbb
pop
jp
repnz
hlt
lahf
ret
cmp
jnp
in
xor
adc
pop
and
in
add
lods
test
add
fsubrl
sahf
push
scas
adc
cld
subl
push
sbb
push
ss
inc
push
les
push
inc
hlt
pop
addb
fildl
pop
push
stos
daa
inc
inc
mov
mulb
stos
loopne
mov
fsubrs
sbb
in
cmp
aad
cmp
rcl
dec
add
ret
cli
push
popa
push
rol
inc
mov
hlt
lahf
out
mov
push
in
xchg
xchg
jge
jp
imul
cmpsb
arpl
loopne
sbb
cmpsb
insb
test
repz
dec
test
or
or
push
into
pop
rolb
pop
xchg
push
mov
jecxz
cmpsl
and
cmp
add
push
cmp
imul
jecxz
pop
sbb
sbb
cmpsb
imul
mov
test
adc
add
adc
inc
cmp
dec
jae
pop
jl
sti
pop
sti
out
addl
mov
aaa
push
inc
test
popa
mov
mov
adc
jl,pn
mov
or
xor
iret
jp
add
aas
pusha
inc
mov
sub
icebp
inc
cld
aaa
xchg
int3
or
mov
popa
int
out
sti
or
mov
arpl
and
inc
lahf
xchg
xchg
scas
shl
sbb
stc
jns
xchg
orb
jle
imulb
stc
arpl
test
inc
mov
mov
jns
dec
pop
sub
pusha
adc
and
push
js
repz
rcll
mov
xchg
pop
sbb
into
add
xchg
add
push
xchg
or
mov
call
dec
mov
or
sti
add
xor
mov
push
fwait
pop
push
cmc
push
rolb
or
pop
adc
or
je
mov
jmp
pop
rclb
cmp
push
mov
es
nop
fsub
xor
mov
cld
das
aad
mov
jno
cli
push
pop
push
sbb
mov
mov
xlat
cmp
aad
divl
xlat
repz
mulb
dec
loope
or
jo
loop
and
xchg
rcrl
pop
pushf
jns
test
mov
adc
or
sbb
xor
mov
jo
rcll
pop
pop
pushf
jb
pushf
sahf
iret
mov
jne
in
fs
xchg
fucom
sub
fistl
adc
mov
mov
cmp
cs
and
inc
xor
dec
adc
lret
pop
push
inc
loop
insl
adc
cmp
and
dec
mov
sbbl
push
xchg
or
mov
js
add
mov
adc
pop
popa
mov
sbbb
mov
xor
std
lahf
iret
rcrl
or
pop
or
or
and
outsb
stos
mov
xor
mov
pop
idiv
xor
add
jp
xor
push
cmp
push
add
and
push
fisubrl
mov
test
ret
out
sti
dec
lods
sarl
test
jb
addr16
sbb
push
adc
in
mov
mov
or
xchg
subl
sub
leave
cld
pop
push
dec
lds
fs
notl
int3
popf
enter
fwait
jno
mov
xchg
fidivrl
mov
inc
test
lahf
and
mov
and
mov
mov
aam
cld
jae
lods
aam
int3
push
inc
leave
movsl
sarb
add
pop
pop
add
inc
sbb
cmp
cli
lahf
icebp
xorl
add
cmp
idivb
push
xchg
sbb
ds
xchg
xchg
movsb
ja
hlt
aas
icebp
aad
into
adc
pop
cvttps2pi
in
notl
sti
mov
inc
sbb
cmp
mov
push
add
mov
mov
adc
adc
or
andl
scas
lock
adc
lock
ret
xor
nop
sub
fisubrs
stos
push
and
sub
push
icebp
out
rcll
inc
adc
ja
sti
dec
rolb
enter
push
or
inc
ds
pop
imul
mov
push
rcl
mov
jne
mov
lea
dec
mov
adc
push
fs
ret
xor
pop
or
sub
adc
cwtl
or
dec
xor
mov
sti
fnstenv
or
mov
icebp
jne
int
testb
mov
mov
adc
std
inc
mov
jmp
mov
rolb
shrl
inc
push
mov
sarl
ds
sub
into
aaa
cmp
cmp
or
call
and
leave
mov
sbb
into
and
scas
gs
cltd
push
lea
cltd
dec
add
jmp
cmp
andb
sti
and
sti
fcomip
stos
out
or
cmp
inc
sbb
in
mov
aaa
fstpl
mov
cmp
imul
pop
lahf
mov
cmpsl
sbb
shll
mov
shlb
in
push
sub
xchg
dec
test
test
gs
inc
add
jecxz
push
orl
adc
mov
pop
stc
adc
push
mov
fadd
in
stos
ffree
mov
mov
lea
sbb
or
xor
adc
mov
sub
pop
gs
fstl
sub
leave
mov
into
mov
jns
xor
icebp
jle
sub
xchg
ja
inc
jmp
mov
and
and
sbb
mov
lcall
std
je
jl
ja
lcall
pop
pop
mov
xor
jb
test
data16
fcoms
adc
in
daa
xchg
adc
pop
add
negl
sbb
mov
push
sbb
repnz
mov
pop
cmp
and
out
jmp
lret
sbb
push
pop
pop
repnz
hlt
mov
inc
cmp
call
dec
mov
lock
pop
testb
sti
ds
subb
inc
gs
loope
fisttpl
loopne
push
mov
cld
xor
jns
push
push
mov
adc
sbb
adc
cmp
das
pop
hlt
pop
xchg
push
xchg
ds
mov
or
add
jg
lret
and
clc
pop
sub
mov
insb
les
leave
dec
pop
push
lds
movsl
aam
cltd
popf
mov
arpl
hlt
rcr
pop
aam
enter
or
push
push
cmc
xchg
in
scas
xchg
mov
addr16
stos
popa
pop
lods
xchg
sbb
call
enter
sub
pop
scas
xchg
shl
into
and
shll
inc
call
adc
decl
fadd
dec
loop
mov
sti
mov
sbb
test
int3
in
push
jbe
stos
mov
push
fcmovu
cmp
jge
cmpsl
cmpsb
dec
aas
dec
and
pop
pop
adc
js
mov
inc
lock
jno
sbb
je
aad
and
mov
ss
pop
xchg
shlb
rclb
les
inc
lcall
pop
in
and
mov
adc
push
mov
in
mov
dec
addl
sub
pop
into
push
sbb
daa
inc
or
add
shll
nop
pop
push
inc
mov
and
out
xchg
stos
out
push
out
xorl
push
pop
xchg
stc
daa
fcmovnu
gs
cmp
fucomi
arpl
les
adc
stc
test
loope
enter
jne
jg
lods
push
push
inc
and
xor
adc
bound
mov
and
aam
pop
lret
inc
sbb
mov
jb
scas
dec
mov
sub
mov
xchg
hlt
sub
sarb
es
ffreep
xchg
scas
gs
in
mov
scas
dec
cmc
rcrb
push
add
lods
and
arpl
mov
lcall
jl
rol
mov
push
ret
pop
mov
inc
xor
dec
stos
das
je
adc
int3
out
cli
ljmp
jb
and
jnp
test
repnz
mov
add
mov
outsb
in
adc
insb
pop
xor
dec
out
das
mov
mov
lock
jle
fistps
jmp
or
ficomps
cld
push
ds
mov
and
mov
inc
mov
out
mov
inc
stos
push
mov
mov
imul
lock
pop
rolb
lret
mov
imull
push
mov
mov
sti
bound
jnp
mov
out
xor
loop
dec
in
adc
out
and
mov
cmp
sub
push
sub
push
adc
lahf
rol
wbinvd
gs
inc
sahf
mov
jb
stos
data16
cmp
jmp
mov
jbe
or
inc
push
fcomp
jecxz
outsb
int
xchg
fbld
jmp
or
jmp
ret
nop
data16
dec
jne
or
in
add
test
cmp
inc
sub
imul
mov
dec
push
lods
dec
pop
add
nop
jge
ficompl
insl
lret
xchg
daa
movsl
xor
lret
mov
push
inc
shrl
loop
or
and
lods
fidivrs
cmp
pop
pop
sbb
shrl
push
sub
in
fisubl
sti
int
aaa
js
rclb
inc
add
in
ss
repnz
sbb
popa
clc
and
inc
dec
jl
mov
jnp
sbb
aaa
sub
jmp
xchg
add
lret
pop
mov
in
je
mov
jecxz
fsubrp
aam
jp
rolb
movsl
cmp
iret
imul
xchg
int
sub
jp
pusha
pop
cmp
addr16
lods
jno
sar
adc
testb
push
mov
pushf
mov
jbe
add
mov
mov
xor
adc
add
out
adc
xor
subb
push
mov
dec
in
loopne
jp,pn
inc
cmp
add
sbb
iret
push
mov
or
jg
je
or
mov
cmovs
stos
mov
ljmp
push
mov
daa
outsb
repnz
xor
mov
scas
push
repz
testb
dec
adc
or
std
das
dec
lods
jecxz
stos
and
shll
icebp
lret
out
fdiv
movsb
mov
adc
or
pushf
int
or
xor
xchg
mov
xchg
sbb
cltd
cltd
pop
in
pop
scas
rcll
loopne
int3
hlt
mov
sbb
roll
sub
outsb
hlt
xor
mov
add
push
ja
imul
ja
fcomp
sub
sbb
test
ljmp
test
cmp
sub
rcrl
rcl
js
cld
aas
sub
dec
xor
jg
jmp
loop
adc
jg
leave
mov
int
fidivl
das
xchg
jg
call
inc
fs
jp
aad
in
push
xchg
pop
adcl
pop
mov
enter
adc
xor
dec
mov
or
push
mov
jmp
mov
add
aaa
adc
test
cwtl
loop
rcll
and
es
out
pop
out
push
movsb
xor
dec
pop
add
popa
loope
pop
sbb
mov
cmp
outsl
in
mov
cmp
mov
xchg
icebp
dec
iret
out
or
inc
and
push
ljmp
cmp
sbb
int
adc
mov
jne
sub
aam
and
and
js
sub
jo
iret
scas
or
add
out
leave
jl
fidivl
adc
sti
sbb
and
shrl
push
sub
adc
pop
jl
push
mov
mov
cmc
cwtl
jp
xor
inc
mov
mov
bound
popa
sub
mov
jns
das
cmp
mov
mov
jl
inc
rcrl
cmp
test
mov
lods
icebp
sbb
sub
sub
or
mov
testl
test
into
and
shll
mov
push
lret
adc
rcrl
inc
add
test
xchg
jl
sahf
out
pusha
push
shr
push
cwtl
movsl
into
xchg
xlat
mov
mov
mov
cli
les
xchg
out
mov
lock
mov
jp
mov
inc
cmp
jge
inc
inc
or
jle
adc
mov
xor
inc
cmp
lahf
or
sbbb
inc
push
jp
mov
mov
and
adc
xchg
cld
push
ds
pop
pop
cmp
stc
test
push
push
push
lods
pop
mov
cmp
jb
mov
mov
shrb
into
xchg
pop
jb
iret
xor
subl
cld
insl
adc
inc
adcb
insb
inc
jg
adc
jp
into
sub
movsb
push
mov
jnp
pop
cs
test
pop
sbb
in
mov
jmp
mov
mov
cli
sti
cmp
in
insl
mov
mov
les
pop
pop
and
inc
cld
lret
and
add
push
lock
ss
mov
test
cmpsl
or
fnstenv
sti
out
lods
jnp
sbb
jmp
push
xor
dec
pop
jecxz
lds
mov
or
imul
jae
mov
mov
pop
mov
cmp
ret
jmp
fiadds
icebp
movsl
push
mov
aas
push
sbb
cltd
sub
lds
or
std
and
xchg
clc
fdivs
sub
ret
and
or
or
push
leave
je
std
inc
je
es
ret
cmpb
xchg
jbe
enter
ret
std
repz
flds
sub
adc
stos
jle
jmp
cwtl
pop
notb
jbe
lret
ret
lcall
and
xorb
incb
xor
leave
mov
mov
and
jmp
or
rorl
mov
cmc
imul
jo
xor
lahf
mov
test
out
mov
add
sbb
push
adc
imulb
and
out
js
cmp
fcmovne
lcall
sbb
mov
scas
xor
sbb
jns
xor
push
sbb
inc
push
int
outsb
push
jbe
dec
and
sbb
xor
xchg
sbb
xor
pop
popa
sbb
fcmovb
xorl
loopne
push
dec
jmp
cmpsb
clc
arpl
lcall
cmpsb
cltd
inc
jns
mov
les
sbb
cltd
bound
sub
dec
xchg
js
pop
sub
shl
or
int3
or
sbb
push
jmp
mov
mov
scas
popf
mov
push
lret
es
xchg
xor
mov
out
jg
xchg
mov
pop
lock
ljmp
or
jnp
mov
mov
insb
popa
subb
iret
xlat
ss
adc
mov
inc
pop
xor
sbb
ficoms
jmp
in
sbb
jne
mov
inc
in
dec
sahf
and
push
cld
dec
mov
hlt
sbb
ret
add
lcall
cmc
in
in
cmc
fcomi
icebp
jne
pushf
js
inc
push
mov
decl
pop
push
cmc
jo
add
add
dec
rcrb
popa
dec
or
lods
pop
push
lret
jno
xor
scas
lahf
aam
gs
fldl
sub
adc
adc
in
xchg
ret
sarl
std
mov
aas
push
ret
and
jnp
cmp
pop
loope
pop
gs
cltd
dec
sbb
cmp
fsubrl
fildll
out
aas
testb
pop
cmc
hlt
fs
mov
loop
iret
jmp
or
or
call
cmp
rcrb
je
in
roll
lahf
xor
shl
mov
sub
push
mov
roll
sbb
xor
icebp
add
mov
mov
out
in
adc
pop
sub
ret
adc
out
loope
and
scas
imul
dec
imul
xor
xchg
add
pop
xchg
dec
push
rcl
xchg
lahf
jg
cmp
lods
movsl
jne
nop
jb
jmp
pop
dec
rorl
jae
fiaddl
in
icebp
test
lret
pop
repz
jg
dec
jg
nop
and
xor
outsb
cmp
cltd
mov
pushf
xor
cmp
fbld
les
arpl
pushf
adc
addr16
sub
and
jmp
sahf
inc
cld
insb
lds
popa
pop
loop
lods
and
add
imul
out
fmull
mov
pop
or
push
xchg
adc
sub
mov
push
sahf
fadd
loope
jmp
mov
xchg
data16
mov
adcb
fwait
mov
mov
scas
lahf
pop
nop
lahf
bound
fbstp
xchg
imul
rcll
add
push
cmc
test
leave
pop
mov
lods
dec
xchg
mov
testl
jmp
stos
sub
arpl
je
aad
sbb
push
push
in
leave
cmpsl
pop
sbb
pushf
mov
pop
or
jg
cmpsb
test
sahf
ljmp
add
add
bound
fdivrl
cwtl
xor
and
test
jl
jbe
rcll
and
scas
fistpl
jl
sbb
or
and
sbb
insb
int3
imul
mov
fsts
xchg
sahf
lds
fmull
inc
shll
mov
fimull
mov
pop
aad
jb
add
popa
and
lret
push
mov
jge
push
or
frstor
repnz
fsubrl
and
ja
pop
ds
sub
cmp
jne
jge
mov
lcall
jnp
mov
cmpsl
adc
js
cwtl
pop
xchg
push
int
jo
pop
mov
cmpsb
pop
inc
add
inc
pop
shrl
out
incl
lock
mov
lahf
in
aas
mov
mov
hlt
cli
aad
cli
movsb
adc
pusha
sub
data16
pop
call
dec
test
aad
ret
cld
jns
test
je
lcall
ret
pop
mov
movsl
or
arpl
sbb
popf
loop
test
imul
clc
ret
add
mov
dec
mov
mov
xchg
sub
pop
push
mov
lods
js
fildll
cmpsb
xor
xchg
xchg
outsb
sub
mov
cmp
lret
adc
push
push
sub
sbbb
in
cmp
fcos
push
adc
mov
sti
in
dec
mov
outsl
cmp
xchg
ja
popa
test
in
adc
mov
push
xchg
xchg
ss
aas
mov
mov
sub
xor
lods
stos
mov
test
js
cmpsb
mov
push
inc
insb
xchg
cmp
out
inc
loope
outsb
jns
enter
fadd
add
adc
mov
mov
subl
gs
cltd
adcb
cwtl
mov
int
cltd
fsubrl
mov
data16
lds
sbb
cmpl
or
popl
jecxz
bound
out
fs
sub
ret
pusha
push
pop
xor
cmp
sbb
dec
rcrl
out
fisttpl
dec
ds
mov
pop
test
add
cmpsb
or
sub
orl
mov
inc
push
dec
out
sub
lock
cld
fstl
or
rolb
sbb
xor
out
adc
pusha
cmp
jnp
add
and
arpl
or
ret
out
insl
and
or
cmc
loopne
lods
scas
int3
stos
fs
cmc
add
aaa
and
cmpb
push
movsb
jae
clc
lods
mov
dec
test
rcll
scas
in
test
popf
in
sti
xor
data16
imul
inc
jnp
movsb
mov
xlat
mov
aas
cmpsb
xchg
adc
sbb
mov
loop
jne
lcall
adc
fistl
dec
loopne
xchg
xor
pop
xchg
inc
jmp
rorl
push
popa
insl
adc
sbb
push
xchg
test
int
popa
cld
push
ja
nop
ret
loopne
hlt
inc
std
aaa
addl
xchg
xchg
shlb
fcmovbe
mov
xchg
dec
ljmp
or
add
adc
inc
pop
pop
or
scas
mov
ror
in
jmp
push
in
pop
push
or
xchg
rcl
cmc
out
add
inc
mov
inc
addr16
gs
cmp
jnp
add
divl
or
das
xchg
cmpsb
push
je
das
shll
sub
and
sub
add
sub
sbb
sbb
mov
adc
sub
add
shrb
fildll
test
xchg
int
mov
pop
mov
mov
fldcw
sbbb
stos
add
inc
mov
dec
add
xor
pop
xor
sub
in
mov
shrl
mov
add
sarb
and
jecxz
jecxz
mov
pop
sub
test
pop
push
jo
mov
ds
push
jbe
clc
ljmp
sarb
repz
nop
mov
lcall
mov
inc
in
jge
dec
dec
fs
jae
sahf
stos
sub
xchg
das
stos
adc
test
loopne
mov
sbb
jbe
or
clc
mov
shll
mov
aam
jg
hlt
stos
mov
fs
pop
lods
jne
sbb
xor
xor
xchg
cltd
pushf
add
shl
push
cld
sub
ds
and
in
testl
out
enter
cs
jg
mov
or
into
sbb
inc
decl
pop
cmp
jns
out
or
test
dec
push
call
das
fildll
dec
push
lods
cmc
mov
xor
lds
out
pusha
or
imul
dec
fxch
js
les
push
xlat
mov
mov
out
aaa
fcoml
push
push
popf
imul
jbe
sti
pop
sub
add
push
jg
aaa
jge
stos
xlat
stos
in
out
insw
sahf
and
and
push
mov
cmp
lds
pop
and
mov
inc
pop
into
jl
sub
aad
fcoml
stos
subl
xor
std
sub
incl
adc
pusha
and
push
xor
and
sbb
inc
imul
mov
mov
mov
sbb
js
xchg
iret
lock
fisubrl
stos
clc
inc
dec
rcr
lock
mov
stc
pop
ss
stc
cld
je
in
test
adc
inc
ret
loope
add
testb
cmpsl
gs
cmp
inc
push
idivl
ljmp
in
lcall
mov
imul
fdivl
jne
add
pop
rorb
xor
sti
aad
mov
and
ss
lods
dec
popf
sar
pop
lret
and
push
mov
pop
sbb
cmpsl
pop
enter
sbb
xlat
xchg
ljmp
inc
jge
cmc
jne
test
int3
pop
imul
or
mov
fmuls
xchg
mov
push
hlt
in
push
add
jg
cltd
jge
sub
mov
cmp
jecxz
rolb
cmp
arpl
in
icebp
dec
lretw
fs
in
jecxz
cmp
xor
cs
mov
and
xchg
or
add
ds
mov
or
in
fsubr
rorb
jge
dec
pop
test
outsb
or
mov
mov
test
jge
push
fldl
dec
inc
daa
add
mov
sbb
jnp
fldt
dec
aad
mov
mov
stos
xchg
sbb
loopne
add
adc
clc
xchg
in
push
scas
popa
cmp
mov
aad
ret
cmp
test
dec
inc
repnz
stos
mov
jl
or
and
mov
mov
stos
in
add
jb
pop
int
sub
xchg
and
jbe
dec
add
lods
inc
inc
cmp
inc
xchg
out
cmp
fwait
sub
repnz
adc
fdiv
jb
or
or
dec
imul
cmp
jmp
adc
in
xchg
test
js
xor
sti
mov
cmpsl
out
or
inc
cmp
push
sub
ds
xchg
lret
mov
jecxz
inc
jb
enter
rorl
lret
and
jmp
add
fldt
mov
lods
pop
dec
aam
and
ljmp
pop
shl
mov
hlt
fs
or
xchg
mov
sti
pushf
jecxz
cmp
adc
push
lds
inc
jmp
sub
iret
je
cltd
movsl
pushf
aaa
bound
mov
dec
repnz
jae
xor
hlt
xor
fmull
jno
or
mov
icebp
and
outsl
movsb
xor
ret
add
mov
mov
aam
and
cmp
push
fdivs
add
pusha
push
sub
mov
in
jp
mov
stc
outsl
add
stc
jnp
sub
popf
adc
data16
hlt
in
and
xor
int
enter
subb
xchg
push
cmp
mov
inc
sub
loop
outsl
test
dec
mov
sub
and
jns
je
aad
xchg
scas
out
cmpb
or
fsubs
xchg
insl
add
lea
xor
fucomi
insl
lock
lock
loopne
xchg
imul
nop
mov
mov
cmp
xorb
jecxz
lea
out
pop
jb
popf
mov
scas
sub
imul
cmp
mov
in
call
jo
enter
ss
rcrl
mov
xchg
daa
lock
mov
imul
enter
outsb
int
sarb
int
popa
sbb
xlat
cs
int
dec
pop
jle
xchg
mov
pop
imul
or
ja
cmpsl
sub
xchg
fs
ror
loop
cmpsb
call
addl
mov
dec
sbb
clc
xchg
xor
add
stc
nop
push
mov
add
imul
lods
sbb
test
and
sbb
jle
cmc
push
push
add
and
cwtl
repnz
mov
rep
test
sbb
and
dec
add
pop
sub
adc
int3
mov
cmp
sti
cltd
pop
cwtl
mov
sub
ja
out
push
inc
aaa
xchg
js
push
sub
movl
daa
push
lods
fisubl
addr16
pushf
int3
mov
pause
sub
hlt
clc
addr16
sub
lods
lret
fwait
push
sub
out
push
imul
jecxz
pop
add
and
les
or
xlat
sub
test
jae
lcall
mov
jno
jl
xchg
fidivrs
add
lea
fisttpl
aaa
pop
mov
stos
rcrb
fcoml
gs
lods
mov
jp
and
pop
and
cltd
mov
mov
ret
nop
xlat
int
inc
xchg
sahf
sbb
leave
repnz
loopne
and
mov
xchg
and
push
mulb
imul
dec
sbb
aas
or
or
sub
dec
iret
rcll
jne
aas
lods
call
dec
mov
jo
aas
adc
xchg
icebp
rep
push
push
outsb
sahf
das
data16
xchg
test
adc
call
sub
out
lret
add
pop
ja
in
lret
sbb
mov
mov
adc
cmpb
jp
mov
or
notb
mov
or
test
cli
out
mov
xchg
mov
lcall
or
cmpl
cli
push
pop
pop
mov
xor
lock
lods
movsb
popf
fisubrl
fildll
enter
fwait
and
loopne
jns
dec
pop
add
je
ss
out
test
add
icebp
stos
xchg
push
mov
pusha
add
out
sub
bound
pusha
jl
lret
mov
dec
inc
jge
xor
xchg
repz
add
dec
dec
in
mov
pop
into
jl
subb
jg
inc
mov
ljmp
popa
adc
xchg
inc
xor
sarl
or
loopne
out
and
aaa
xchg
insb
mov
pop
sbbl
into
notl
scas
jmp
sub
fsubl
xchg
scas
or
pop
sub
or
push
pushf
shll
cld
inc
bound
push
test
jno
add
pop
add
fsubrs
pop
xor
pop
enter
dec
cmpsl
lock
in
pop
lods
sub
inc
pop
pop
iret
add
lahf
xchg
aaa
pusha
xchg
pushf
jmp
nop
sub
cli
dec
rclb
jmp
movswl
mov
jae
add
mov
inc
nop
rcl
jl
lds
das
inc
jb
data16
adc
jmp
or
dec
into
lock
stos
decb
cmc
cmpsb
jnp
loope
sub
cmpsl
mov
cmc
stc
ss
repz
in
push
fstpt
jle
popw
lret
adc
testl
ljmp
popf
adc
sbb
test
lock
mov
cld
cli
mov
fs
sti
adc
ds
jmp
incb
into
sbb
push
adc
and
call
out
sbb
hlt
or
stos
in
sub
push
xchg
pop
push
xor
pop
pop
ret
mov
addb
das
cmp
sbb
outsl
sti
icebp
cmp
andb
in
and
mov
push
movsl
daa
pushf
addb
fisttpll
mov
push
incl
lds
lock
dec
es
les
dec
mov
jae
xchg
sbbb
mov
pop
mov
mov
sbb
into
jno
pop
mov
sbb
stos
mov
push
jl
ret
mov
fiaddl
push
pop
mov
xchg
rorb
inc
aaa
fs
cmp
daa
mov
pop
in
std
out
mov
addl
push
mov
adc
leave
in
ljmp
adc
add
sbb
jnp
push
jp
cltd
popa
jno
and
cmp
shll
fcmovu
enter
lock
sbb
push
das
lea
cwtl
xchg
pop
lahf
ljmp
outsb
enter
xor
dec
mov
and
stos
std
aad
negb
push
sbb
jecxz
subl
xor
aam
popf
addr16
mov
push
jno
lock
out
pop
push
push
bound
stos
cmpsl
xchg
ja
in
shl
sub
daa
dec
mov
shlb
lret
mov
push
xchg
dec
mov
fwait
adc
std
mov
and
mov
xchg
ds
das
lret
mov
int3
ss
hlt
pop
or
fmuls
mov
sbb
jne
push
jno
or
pusha
shll
lods
mov
or
or
xchg
icebp
mov
in
sub
xchg
and
sub
lds
push
push
out
pop
and
mov
fbld
cltd
leave
sti
shll
inc
mov
pop
adc
bound
mov
in
push
inc
mov
and
xchg
xor
ljmp
jo
sub
data16
mov
xchg
data16
add
cmpsl
or
mov
xor
rorb
and
push
cmp
nop
push
cwtl
inc
xchg
lods
int3
fldcw
jecxz
notb
movsb
cmp
loop
xchg
lock
mov
dec
add
outsl
les
shrl
mov
xchg
or
popa
xchg
sbb
mov
push
mov
push
sbb
adcl
loope
sti
lods
lret
and
dec
iret
iret
cmpsb
jl
cmp
rcrb
pop
or
fldcw
sub
lods
pop
call
mov
popa
fs
and
jp
lret
dec
gs
push
ret
mov
xor
in
mov
incl
inc
ja
mov
in
xor
add
mov
cmc
add
hlt
sub
scas
xchg
push
jmp
xor
cmp
pop
adc
push
push
dec
jecxz
mov
fmuls
popa
in
je
jb
mov
cmp
mov
sar
and
xor
adc
xchg
outsb
push
sub
outsl
and
or
xchg
add
pop
imul
cmp
out
inc
xor
out
push
cwtl
lret
dec
mov
jne
out
mov
fsts
adc
scas
testl
sbb
addr16
cmp
ret
mov
adcb
adc
cwtl
jg
outsl
das
xor
std
xchg
out
ljmp
adc
sahf
jns
imul
mov
xor
xchg
xlat
mov
push
std
lock
pop
stc
sbb
mov
mov
ljmp
mov
pop
arpl
push
std
fcomip
pop
aad
dec
mov
in
xchg
inc
pop
lret
dec
mov
sub
scas
xor
dec
cmpsb
je
loop
fwait
sbbb
fmuls
stos
aas
fldt
and
insl
sub
push
cmpsb
mov
xor
push
icebp
jo
rolb
clc
xchg
inc
mov
shrb
sbb
lock
jne
sub
shl
dec
out
jne
rorb
bnd
insb
mov
js
mov
sarl
mov
fimuls
mov
lret
cltd
sub
cmp
in
mov
xchg
mov
sub
outsb
add
cmp
push
cmc
lret
mov
repz
dec
sti
ret
test
clc
inc
incb
mov
out
dec
xchg
xor
cld
sbb
sub
add
fnstsw
es
inc
enter
or
aas
dec
je
dec
fs
pop
xlat
cmc
dec
das
jmp
loop
mov
sub
add
int
gs
push
aaa
dec
lds
fsubl
or
push
movsb
in
jp
add
pop
mov
xor
daa
fcomps
cltd
imul
and
add
mov
and
andb
imul
inc
or
xchg
cld
jae
int
outsl
jle
xchg
or
hlt
sub
notl
fidivrl
jb
mov
icebp
add
dec
jge
movsb
popf
dec
or
test
or
cmp
test
cld
repz
inc
mov
scas
sti
and
enter
push
outsl
mov
pop
lods
pop
mov
mov
dec
push
inc
ja
mov
and
ds
push
jmp
mov
ret
mov
xchg
sbb
fldcw
dec
aas
mov
xor
inc
jp
fwait
aas
shrl
pop
aad
cmpsl
fwait
pop
es
add
in
shlb
iret
jmp
jnp
mov
loop
mov
movsb
popf
or
pusha
cmp
jae
and
es
and
dec
mov
jns
jno
pushf
sub
mov
mov
iret
rep
lcall
insb
jge
sub
pop
dec
sti
hlt
lahf
sbb
decb
cmp
dec
mov
and
push
das
jecxz
int
push
jno
iret
sub
mov
cmp
out
pop
mov
mov
repz
sbb
roll
aad
sbb
fucomip
pop
pop
inc
and
fdivl
aaa
insb
and
or
addr16
jle
push
mov
add
lds
cli
lds
sbb
fldl2e
mov
iret
aaa
daa
flds
push
cltd
bound
mov
cmp
rol
shrb
jmp
cmp
mov
cltd
in
push
or
sub
shufps
push
loop
test
lcall
hlt
sbbb
mov
jbe
adc
divb
out
add
ret
pop
orl
cmp
mov
pushf
or
add
loopne
lea
mov
xchg
insl
sub
jl
test
xor
jno
negb
imul
mov
mov
cs
inc
loope
lcall
pushf
cltd
les
test
adc
je
or
pop
jno
jp
cmp
mov
mov
iret
xchg
movsl
ret
jbe
jns
movsl
mov
mov
outsb
pop
xchg
hlt
hlt
jmp
push
cmp
push
scas
stos
xchg
cltd
or
iret
sbb
push
pop
or
sbb
orb
int3
adc
add
or
jge
shlb
rcrl
mov
xor
shll
mov
inc
mov
cmc
pop
shrl
sbb
dec
loop
inc
xchg
aaa
movsl
aam
pop
jge
sub
xchg
mov
mov
sub
test
mov
mov
cld
cltd
int
xor
sbb
adc
aaa
out
in
ret
xchg
pop
stc
and
jge
xor
mov
adc
mov
cwtl
mov
sub
clc
dec
mov
add
ret
inc
cmp
adc
in
jle
mov
cld
lret
pushf
sbb
subb
push
mov
sbbl
xlat
fdivrp
xchg
cmp
aam
repnz
iret
lock
push
es
pop
out
xor
addr16
xchg
jecxz
mov
enter
sbb
in
test
dec
add
cmp
push
sti
clc
fs
xor
pop
in
dec
out
sub
xchg
cmp
mov
inc
and
mov
ja
and
mov
xchg
and
cs
and
sub
addr16
movsl
jo
pop
out
fcoms
xchg
push
fstpt
das
cmp
dec
mov
sbb
pop
nop
rolb
aad
sub
jb
sbb
rcll
dec
pop
arpl
jmp
sub
push
in
mov
jg
fiaddl
push
lds
fwait
xor
mov
in
xlat
leave
pop
inc
xor
inc
pop
test
mov
push
or
sbb
xchg
mov
mov
pop
shll
dec
mov
std
sbb
and
mov
add
lods
je
inc
lods
sub
int3
mov
dec
sub
mov
rorb
mov
mov
cmp
sbb
scas
pop
insb
mov
mov
jne
orl
pop
lret
mov
mov
push
outsl
sub
pop
outsl
mov
mov
add
jge
jne
xchg
fstpl
neg
sti
and
push
pop
xchg
cmp
arpl
xchg
sub
lcall
xor
int
out
lds
jne
call
mov
pop
sub
lds
das
sarb
mov
cmpsb
xor
inc
jns
pusha
lods
nop
add
push
dec
push
cmpsl
xorl
or
imul
or
mov
xchg
mov
addr16
mov
cmpsb
mov
add
loope
mov
adc
sub
in
jge
mov
js
in
inc
mov
outsb
and
insb
pop
jns
mov
stc
cmpl
push
int3
cmp
sbb
push
sarl
aad
sbb
xor
leave
xor
cmpsl
sbb
sbb
loop
mov
imul
addl
negb
inc
mov
xchg
mov
sbb
add
fisubs
or
in
xor
sub
cmp
cmc
xor
stos
popf
fildl
xlat
lods
in
push
push
loop
shlb
repnz
jg
inc
ficoms
sbb
fstpl
cmp
lods
mov
mov
fcomp
pop
dec
js
fdivs
shrl
add
not
add
inc
rcrl
outsl
cmp
or
mov
popa
mov
cmpsb
sti
lahf
rorb
rclb
xchg
ret
divl
loop
sahf
mov
xchg
leave
dec
pop
add
jp
add
sahf
outsl
cmpb
xchg
dec
loopne
add
loopne
jmp
ja
or
inc
or
and
cmc
call
idiv
lahf
out
je
xchg
inc
sahf
push
sbb
push
dec
jns
iret
and
xor
xor
enter
push
adc
clc
int
ds
imul
mov
mull
add
pop
lock
xchg
out
out
inc
loopne
ficomps
ret
sbb
lahf
adcb
lret
sbb
jmp
addr16
lock
out
cmp
mov
and
sbb
faddl
xchg
leave
and
jb
xchg
push
sbb
or
mov
outsl
lcall
adc
jp
jge
mov
mov
mov
in
test
cmp
fadd
xchg
aam
cld
movsb
sbb
pop
rorl
push
andb
std
cld
imul
cmp
jne
mov
jno
lods
int3
data16
push
scas
jp
inc
sub
pop
test
into
add
sbb
cmp
leave
iret
fists
sub
xchg
rcrb
out
fdivrl
push
ret
gs
sti
cmp
inc
aaa
movsl
inc
push
in
pop
jno
sbb
adc
xor
mov
push
xchg
in
notl
ds
sbb
and
jle
adc
cli
inc
and
sub
clc
inc
stos
push
push
imul
sbb
mov
jnp
stc
pushf
ss
cmpsl
xchg
pop
ret
push
cmpb
xchg
mov
in
movsb
xchg
add
dec
jbe
sahf
arpl
scas
rdtsc
mov
mov
les
mov
sub
inc
adc
lock
jb
mov
xchg
pushf
xor
push
aad
std
fs
in
movsb
push
ja
push
shl
pop
pushf
mov
add
mov
and
shl
cmp
scas
dec
inc
xchg
loopne
aas
sbb
mov
or
loop
out
xchg
push
and
dec
jo
out
sub
lods
xor
sub
pop
mov
mov
icebp
leave
rcrb
pop
sub
or
aam
sbbl
sbb
inc
in
pop
cmc
mov
and
orb
pushf
dec
pop
daa
cmpsl
and
mov
cmp
inc
les
fwait
mov
sub
mov
pop
or
mov
pop
adc
jg
xchg
movsb
xchg
ds
mov
loop
icebp
aam
shrb
in
cmp
in
lods
xchg
or
and
sbb
inc
pop
neg
mov
xor
cmp
sub
add
pop
pop
rorb
sbb
mov
dec
div
icebp
repnz
fistps
mov
push
shrl
dec
daa
addr16
jno
sbb
xor
push
adc
pop
aas
fdivrl
jg
cmp
shl
iret
inc
out
nop
fwait
mov
jnp
jmp
sbb
dec
lahf
adc
clc
jne
add
jge
mov
pop
inc
inc
add
iret
das
lret
mov
mov
inc
dec
add
mov
mov
jo
ret
fdiv
xor
xor
cli
mov
add
clc
xchg
or
lahf
roll
mov
pop
sbb
scas
loop
add
shrl
cli
sbb
cmpsl
insl
sub
fscale
or
fstps
dec
mov
ret
mov
sub
pusha
in
inc
fldt
hlt
mov
lock
sar
add
dec
xor
pop
dec
pop
mov
add
fnsave
shlb
mul
sahf
jl
cmpsb
lcall
dec
mov
jecxz
jae
jo
scas
lea
in
out
mov
add
pop
xchg
jp
and
movsl
imul
mov
pop
or
dec
fidivs
cmc
xor
je
leave
leave
jae
xlat
dec
fsts
scas
repz
jmp
cmp
je
pop
push
sub
xchg
imul
mov
and
lahf
imul
cmp
sahf
and
xchg
mov
cmp
cmp
inc
leave
push
pop
adc
cli
pop
pop
test
mov
and
fsubrp
sub
nop
cs
shlb
xor
sbb
jecxz
xor
inc
xor
ret
rcr
cltd
les
push
pushf
sub
enter
hlt
stc
cmp
add
out
cmp
ror
and
inc
jmp
out
test
mov
shrb
cli
add
in
outsl
aad
mov
mov
pop
leave
cmp
dec
insb
adc
or
in
adc
fisubs
jecxz
addl
cmp
cmp
cwtl
sahf
addr16
test
in
fnsave
out
mov
int3
test
outsb
pop
mov
mov
mov
mov
pop
sbb
jno
and
push
and
add
mov
cwtl
nop
cld
arpl
cmc
into
mov
fmull
dec
outsl
jb
imul
dec
arpl
push
add
xchg
inc
rcrb
movsl
adc
shrl
push
lea
lea
fistps
loope
dec
lret
xor
mov
xchg
aas
dec
lret
fnsave
sub
rcrl
sub
cmpsb
sbb
xor
lahf
sub
cmpsb
or
inc
xor
add
sbb
push
jp
inc
xchg
pop
push
loopne
xchg
popf
lahf
repnz
loop
mov
dec
cli
cs
sub
push
jno
mov
sbb
cmc
xchg
xchg
stos
rcll
inc
inc
dec
dec
mov
hlt
mov
lods
imul
dec
movsl
dec
adc
pop
testb
pushf
stos
mov
das
dec
imul
in
ss
shll
cli
mov
dec
scas
jb
fnstsw
movsb
and
test
inc
and
in
sub
xchg
out
mov
scas
xor
lock
pop
cwtl
jnp
push
filds
aaa
or
dec
sbb
int
dec
xor
mov
pop
jge
ror
mov
ljmp
ret
movsl
xchg
sbb
cmp
ret
lock
jb
xchg
pop
cmp
lret
add
in
cmp
push
loop
dec
cmp
mov
js
push
jb
in
sbb
sbb
fcoml
shrb
loope
cmp
subl
shlb
pop
pop
cmc
xchg
mov
lock
jae
into
inc
arpl
or
imull
dec
dec
aaa
scas
adc
sets
jmp
sub
loop
dec
push
xchg
loope
sarl
sub
and
flds
mov
cmp
or
cld
push
fcmovnb
loop
arpl
cmp
jne
cmp
imul
sbb
adc
clc
ret
mov
jne
push
fbstp
cmp
jmp
jne
insl
lods
dec
insb
cli
je
xchg
and
xchg
push
sahf
xchg
inc
pusha
lock
aas
aaa
mov
mov
cmp
jnp
pop
push
arpl
sub
mov
into
pushf
pusha
shlb
repnz
or
jp
daa
jb
popf
adcb
mov
jne
cltd
cltd
fwait
sub
sub
jp
es
test
test
jo
call
xchg
pushf
push
roll
push
rcrl
mov
test
sbb
xchg
dec
mov
cmp
and
out
outsb
fdivr
mov
int3
std
inc
mov
xchg
or
mov
mov
cld
and
das
cmpsb
jno
sub
push
mov
mov
repz
jno
test
push
pop
ss
mov
mov
inc
stc
cmc
sahf
and
mov
cli
ds
aam
inc
mov
imul
jbe
imul
push
jb
lea
bound
insb
dec
jno
sbb
pushf
mov
xlat
mov
xchg
out
in
lods
ljmp
sbb
xchg
data16
stos
mov
pop
sbb
loopne
pop
hlt
outsb
rorl
mov
in
outsb
inc
jo
jge
out
mov
ljmp
push
fwait
push
mov
add
xor
mov
cmpsl
lods
add
mov
mov
inc
scas
jge
xor
aad
sbb
ljmp
adc
inc
or
les
arpl
daa
jle
in
iret
sub
movsb
das
inc
insb
aaa
mov
mov
loope
jmp
fldt
inc
sahf
fsubl
call
mov
leave
mov
xchg
and
cmp
sub
adc
pop
and
sbb
insb
mov
jge
pop
lahf
jg
pop
addb
or
test
xchg
mov
das
add
sub
or
dec
ds
mov
xor
xchg
frstor
int3
inc
push
dec
stos
cmp
adc
or
push
das
addl
pushf
sarb
xchg
jns
or
sub
adc
push
jns
out
mov
stc
bound
mov
pop
dec
filds
and
mov
xchg
in
fidivs
and
jp
fwait
or
push
xchg
add
clc
sbb
dec
jmpw
mov
or
outsl
dec
stc
pusha
push
les
inc
lret
push
insb
pop
dec
push
pop
stc
pop
aaa
sbb
addr16
sbb
sub
ds
jne
sub
aas
enter
mov
arpl
adc
pop
dec
out
add
xchg
cmp
add
dec
xor
mov
cmc
xor
sarb
clc
add
movsl
jnp
movsl
js
xchg
mov
popf
lahf
aad
pop
fmull
push
aaa
dec
mov
out
and
inc
stos
mov
add
std
dec
rcrl
adc
jle
xor
dec
test
pop
mov
imul
pop
outsl
jl
mov
lret
adc
add
adc
jl
daa
popa
fbld
dec
and
arpl
js
add
pop
push
inc
clc
movsl
adc
inc
rorb
cmp
sub
daa
adc
in
in
shll
jnp
jmp
lret
cmpsl
inc
fadd
aas
fnstcw
enter
cwtl
xchg
sbb
out
rorl
xor
shlb
mov
sbb
mov
push
int
cmc
cmpsl
jg
dec
sti
aas
jae
outsl
sub
dec
inc
adc
push
add
lahf
mov
mov
mov
test
rorl
loop
and
call
hlt
testb
push
push
arpl
sbb
cwtl
call
faddl
push
pop
cmp
xchg
fnstsw
jmp
add
insb
fwait
adc
xchg
arpl
int3
stc
stc
outsb
dec
sahf
jnp
xchg
mov
push
pop
lahf
jmp
mov
xchg
and
popa
sbb
push
jl
ds
adc
cs
shlb
or
sbb
sbb
sti
push
and
bound
mov
test
xor
test
jne
pop
std
outsb
and
pushf
mov
mov
lcall
xor
stos
cmpsb
push
in
push
leave
mov
in
rolb
mov
push
fwait
add
add
xchg
ret
pusha
push
mov
mov
xchg
jp
adc
mov
mov
out
pop
aam
jge
cmpsl
cmp
mov
jg
scas
mov
mov
mov
jp
lret
decb
out
clc
in
pop
loope
int
cli
fcmovnbe
fadd
mov
out
mov
jbe
mov
inc
dec
je
mov
ficomps
cmp
ret
add
cmc
cli
aas
les
subl
xchg
and
mov
cld
push
push
jg
dec
and
xchg
in
xchg
insb
nop
inc
cs
xor
inc
es
or
lret
rorl
push
rorb
pop
fidivrl
push
pop
mov
loopne
adc
mov
jo
dec
imul
sbb
dec
jle
push
jnp
pop
pop
aad
xchg
popa
xchg
adc
outsb
pop
jb
insl
data16
mov
ss
imul
inc
lret
repz
pop
pop
and
and
pop
add
dec
xor
mov
sub
mov
mov
pop
push
xor
or
sbb
mov
and
fistps
adc
pop
and
and
outsl
adc
leave
adc
adc
test
test
stc
jae
insb
pop
in
je
in
xlat
into
push
hlt
mov
adc
lret
mov
jmp
sub
add
aam
jmp
add
push
xchg
push
push
movsl
cmpl
iret
inc
dec
or
cmpsl
mov
push
das
jo
std
repnz
orl
push
inc
sub
out
loope
imul
daa
add
sub
subl
jnp
fidivs
stos
mov
in
or
jle
push
test
sbbb
aad
mov
xchg
fldcw
not
and
xchg
shrb
leave
lock
repnz
mov
sbbl
dec
mov
and
or
mov
mov
cmpsl
addl
dec
sti
mov
pop
mov
daa
adc
xor
aam
aad
jmp
dec
jbe
fisttpll
sub
and
adcl
test
cmp
add
or
lret
inc
fnstcw
mov
cli
xchg
mov
inc
loopne
cmp
dec
test
mull
hlt
mov
add
xchg
icebp
pop
cmp
push
sub
cmp
cmp
and
or
js
sbb
cmp
add
stos
mov
dec
sub
inc
testl
add
mov
jnp
movsl
mov
das
xor
sub
xchg
daa
jmp
xor
stos
test
movups
mov
repz
insl
add
xor
fisttps
stc
mov
ds
or
mov
mov
fnsave
xor
imul
testb
imul
std
test
cmpsb
or
je
or
xor
insb
jle
inc
cmp
std
leave
mov
cmp
call
xor
jo
insl
call
std
jle
shll
mov
lods
adc
and
clc
push
gs
sbb
out
sbb
pushf
sbb
xor
inc
sbb
imulb
adc
inc
mov
repnz
cwtl
bound
mov
ja
add
push
sahf
sub
push
sbb
xlat
adc
scas
aas
lahf
pusha
mov
dec
xor
inc
icebp
shr
push
dec
mov
xor
lret
mov
jno
bnd
lret
test
clc
xchg
popa
pop
and
adc
mov
and
adc
push
iret
sub
mov
dec
imul
sbb
mov
jne
btc
in
in
jne
in
pop
xor
xchg
sub
es
push
sbb
fisttps
ljmp
sub
or
push
mov
sbb
push
sbb
push
or
in
gs
in
xor
or
sbb
repnz
mov
mov
and
clc
mov
test
dec
mov
push
inc
add
sti
mov
in
hlt
out
cmp
lret
rcrb
cmp
lock
mov
jl
or
cmp
push
sbb
sub
pop
lea
add
std
jp
sbb
out
in
stc
cmp
cmp
out
cmpsb
stos
into
rep
xchg
adc
sahf
test
fdivs
xor
mov
fistl
sub
pop
xchg
in
mov
pushf
addr16
aam
xlat
cmp
mov
or
sbb
mov
data16
jge
mov
sub
push
inc
std
enter
push
mov
dec
dec
and
sti
scas
xchg
add
mov
pop
dec
loop
cs
sub
jg
push
add
add
xchg
add
pop
inc
aaa
cld
outsb
cmp
lock
aas
sub
bound
inc
lret
and
push
and
cmp
sbb
pop
icebp
lret
pop
dec
mov
dec
fwait
sar
cmp
imull
mov
mov
jp
sbb
nop
pop
shl
test
lods
jmp
out
cmpsb
add
push
xchg
cwtl
clc
aas
push
rorl
push
sbb
jle
xchg
out
push
call
cwtl
fidivs
shlb
scas
mov
outsb
push
mov
cmp
dec
icebp
cli
xchg
xor
mov
jl
out
cmp
push
or
cmp
jnp
imulb
dec
push
in
test
or
lcall
aaa
push
int3
add
adc
cld
mov
in
call
icebp
mov
cmc
jo
cmp
xchg
inc
push
mov
pusha
push
rcll
or
pop
push
and
in
cmp
dec
data16
mov
push
ds
cmp
movsl
adc
xchg
xor
or
adcl
dec
mov
adc
or
pop
mov
or
sbb
fstpt
imul
sbb
in
jl
dec
add
pop
cs
inc
jecxz
adc
dec
mov
scas
out
mov
adc
cltd
out
pop
bound
outsl
push
testb
pop
shrb
xchg
dec
jmp
sub
dec
push
insl
ljmp
xchg
add
sahf
rolb
dec
hlt
and
int3
inc
loop
ss
cltd
pop
cmp
mov
pop
lret
mov
les
out
fisttpll
fcmovnb
add
int
inc
fwait
stc
shlb
loope
sbbl
add
adc
xor
dec
mov
leave
xchg
xor
and
sarb
add
xor
cltd
sahf
dec
sub
xor
or
icebp
imul
stos
ds
jge
dec
add
ds
cmp
xchg
popl
dec
enter
mov
dec
jno
sbb
int
leave
and
cmc
enter
mov
or
outsb
das
loope
aas
or
and
mov
subl
mov
lock
dec
xor
test
jecxz
inc
adc
inc
mov
jle
or
addb
and
xchg
outsb
insl
stos
arpl
fiaddl
sub
pop
jmp
mov
xor
fsubr
or
in
jge
mov
dec
mov
add
das
pop
mov
sbb
fucom
aad
sbb
mov
shrl
dec
in
mov
imul
rolb
inc
js
movsb
pop
mov
xchg
imul
popa
dec
mov
hlt
pop
inc
mov
inc
les
jl
ds
cmpl
add
sbb
mov
cld
pusha
inc
fwait
adcl
ss
out
ss
cli
xor
inc
xchg
add
cmp
mov
adc
dec
add
test
and
std
sbb
push
das
adc
cmp
mov
jne
sbb
inc
pop
push
lahf
adc
mov
hlt
dec
xor
inc
scas
insl
adc
xor
lcall
jno
xchg
aaa
andb
callw
or
stos
fs
mov
fisubl
in
mov
pop
cmp
lds
jne
lods
mov
push
mov
inc
xchg
ret
cmp
jae
or
dec
test
inc
aaa
ss
jmp
jnp
mov
jae
dec
lods
sbbb
pushf
je
push
xlat
or
pop
popa
movsb
or
jmp
mov
sbb
mov
lea
xchg
push
jmp
xor
idivl
sti
push
jne
inc
or
mov
mov
or
jns
lods
xchg
aas
jecxz
gs
sbb
xlat
stos
fdivrl
lock
mov
sarb
or
repz
cwtl
jmp
std
fmul
and
cmp
leave
test
inc
jecxz
mov
mov
adc
mov
pop
or
mov
jg
clc
sbb
das
or
fwait
mov
arpl
cmc
add
repnz
ret
cli
rol
or
mov
mov
cmp
sti
jno
sub
push
prefetch
pop
sbb
pushf
test
dec
pusha
cli
lcall
push
add
jnp
add
add
fldenv
sbb
lods
mov
fwait
jb
mov
repnz
cs
jbe
scas
outsl
and
rorl
jbe
or
sub
push
add
adcl
das
in
pop
leave
lret
test
jns
xchg
push
icebp
sbb
leave
jg
adc
movsb
mov
mov
fsubr
stc
cmp
pop
pop
add
stc
push
cmp
int3
nop
es
cmp
add
in
adc
leave
or
xlat
lret
sahf
popf
test
jne
loope
pop
mov
out
lea
inc
repnz
int3
push
shll
and
scas
mov
mov
jb
jo
movq
mov
aad
and
ret
cwtl
jmp
pop
orb
scas
das
popf
push
out
roll
in
sbb
inc
iret
cmp
gs
jg
cmp
mov
mov
xchg
sub
inc
cmp
xchg
stos
sbb
or
lods
cli
aad
push
xor
adc
cmpsl
out
imull
das
sbb
mov
lods
sti
adc
dec
jle
jbe
testl
dec
jbe
mov
pop
iret
and
loopne
xlat
mov
loopne
movb
ljmp
call
push
mov
and
push
stc
pop
cmp
into
mov
or
rcrl
xchg
dec
stos
adc
lock
xchg
aaa
inc
mov
pop
psrlw
and
jb
mov
ja
sub
test
mov
icebp
dec
cld
mov
adc
fldt
mov
or
cmpsb
or
in
adc
inc
adc
sbb
hlt
sub
xchg
cmpsl
bound
outsb
orb
xor
daa
icebp
and
mov
jg
cmovl
pop
add
hlt
out
jle
pop
mov
push
pop
leave
bound
inc
sbb
in
add
rorl
fcompl
inc
inc
int3
shr
mov
jne
jne
push
mov
stc
or
xchg
cmp
or
mov
ljmp
gs
mull
xchg
xor
push
jnp
fistpll
mov
xchg
inc
xchg
xchg
imul
cmpsb
xor
pop
insl
mov
cltd
sbb
mov
xchg
repnz
xor
loop
push
cmc
mov
icebp
in
sti
jbe
mov
cltd
lcall
push
iret
fldt
inc
das
jge
pop
lods
gs
ret
lock
jl
jae
xchg
inc
add
or
das
mov
inc
mov
pop
push
jl
cmp
and
mov
sbb
outsb
lods
xchg
cltd
jne
xchg
pop
or
cmc
test
enter
subl
cltd
mov
scas
jo
inc
pop
pop
pop
mov
lret
pop
jp
mov
loopne
or
scas
push
iret
sbb
aas
rorl
push
cs
xlat
jmp
mov
xchg
popf
mov
sbb
scas
dec
pop
xchg
xchg
sbb
adc
je
test
es
fs
jns
fisttpl
dec
arpl
mov
fdivs
fldenv
sbb
outsl
or
stc
loop
les
fdivrp
xor
lcall
das
xor
enter
adc
shl
pop
dec
add
test
ss
test
clc
aas
test
sub
dec
pop
dec
push
xchg
lret
xor
popf
mov
pushf
pop
jg
jne
call
mov
sbb
lret
push
cmpsb
push
jmp
jp
sbb
je
pop
pushf
imul
stc
mov
sub
cld
mov
pop
jae
test
sbb
sbb
xchg
gs
jg
push
xor
mov
shlb
add
lods
scas
sbb
xchg
xchg
xor
jmp
repnz
mov
jmp
sarl
xor
je
fucomi
loop
js
or
pop
cmp
jae
pop
push
scas
mov
push
cmp
fisubrl
fildl
in
cmp
mov
iret
into
sub
push
pushl
call
sti
xor
push
fcmovne
push
or
out
stc
mov
cmc
ficoml
add
scas
adc
ljmp
cli
jl
mov
fldl2e
int3
xchg
fmulp
iret
xchg
dec
out
lret
sar
fbstp
xor
popa
mov
in
repz
es
and
loopne
fsts
push
and
ljmp
cs
scas
mov
pop
fsubr
xchg
aaa
xor
jo
push
add
add
push
jecxz
pusha
rclb
sub
out
int3
adc
dec
loop
out
add
ret
shrl
sub
ds
sarl
mov
movsb
fwait
std
xchg
pusha
push
cmp
test
loop
push
data16
aaa
in
mov
mov
pop
xor
cld
jl
aad
sub
inc
jns
xor
ds
push
mov
adc
lcall
fs
add
arpl
push
aad
mov
add
xchg
and
pushf
test
mov
xlat
pushf
loope
icebp
sub
xor
lahf
call
insl
test
rol
daa
rcr
int
pop
xchg
jle
xlat
nop
out
add
push
or
leave
lret
iret
insb
adc
jmp
lcall
cs
stos
bound
pop
inc
imul
add
jno
xchg
xchg
aad
jge
and
std
cmc
xchg
mov
push
call
lods
xor
sub
inc
xlat
fdivrs
mov
dec
or
nop
outsl
repz
popf
or
xchg
mov
mov
mov
adc
out
sti
daa
sti
mov
fistps
ficompl
lret
gs
mov
fildl
pop
pop
push
lock
xlat
jnp
or
mov
test
test
dec
sbb
and
js
adc
and
push
push
sub
jae
jno
int
mov
std
jb
fdivl
loop
scas
hlt
jle
int3
mov
call
sub
imulb
sbb
movsb
cmc
pop
mov
mov
lahf
xchg
xchg
sbb
sub
aam
cmp
jns
hlt
int3
rolb
push
mov
imul
cmpb
or
lods
push
mov
ss
aam
sbb
xor
jle
or
jo
ja
push
mov
pop
in
test
inc
xchg
inc
repz
aaa
rol
dec
insb
add
dec
or
clc
push
mov
sub
aas
insl
aam
stos
pushf
cmc
ss
cmp
aaa
je
movsb
pop
push
push
adc
jns
stos
gs
jno
jb
xor
shrl
dec
jmp
add
xchg
out
cmp
inc
sbbb
adc
icebp
mov
ret
pop
xor
lahf
sub
fisubs
ja
mov
xor
lods
sahf
dec
sub
repnz
mov
ds
movmskps
dec
scas
and
pop
pop
jp
packsswb
pop
push
jmp
jb
std
call
push
mov
adc
push
shr
xchg
stc
movsb
push
pop
xchg
aam
xchg
pushf
mov
enter
stos
mov
sbb
push
imul
cltd
aas
mov
into
lret
push
push
xchg
rorl
dec
mov
lods
and
ja
sub
jb
and
insl
mov
xchg
add
inc
mov
jbe
lret
push
xchg
dec
mov
das
and
cmpb
and
mov
xor
cltd
mov
mov
popa
jle
pop
jo
lds
push
add
pop
and
vandnps
jl
cli
mov
fsubp
dec
mov
fprem1
cltd
sub
jp
or
cmp
push
imul
sbb
adc
cs
sub
sub
aas
test
test
movsl
cmp
loopne
lcall
faddl
mov
fidivrs
notl
arpl
sbb
and
pop
ss
test
cli
sub
jge
and
sbb
sbb
aas
out
add
inc
ja
cwtl
inc
scas
test
pop
jge
mov
lds
push
push
das
lret
cld
fisubrl
cmp
rcr
jle
xor
sbb
test
or
xorb
mov
adc
jl
cs
xchg
cmp
pop
pusha
fs
push
sbb
test
xor
int
arpl
sbb
pop
mov
leave
adcl
cmpsl
pop
or
xor
movl
iret
sti
in
add
movsb
rcrl
jmp
mov
mov
inc
shll
adc
addr16
rcrl
ss
lock
imul
ss
cs
imul
movsb
shll
dec
pop
xchg
mov
cmp
push
jg
xor
ror
cmp
cmpsl
ja
push
test
and
xor
cltd
iret
cmp
mov
jbe
and
loope
in
jae
cmpsb
stos
mov
jb
add
shll
pusha
jmp
orl
pop
dec
jecxz
das
inc
or
les
fstpt
clc
cmp
mov
mov
jne
mov
sbb
jle
pusha
sbb
fdivrl
sub
imul
push
sbb
in
addr16
and
pop
test
test
xchg
dec
rcll
popa
dec
das
or
cmpsb
ret
in
sbb
imul
lea
out
inc
cmp
ret
repz
cmpl
mov
scas
cmp
dec
push
jns
insl
cmpsl
shl
sbb
and
andb
xchg
enter
mov
xorl
iret
fadds
push
lret
jp
idivl
xchg
mov
les
addl
sarl
mov
lea
aad
or
add
fists
repz
movsb
or
cmpsl
fs
xlat
popf
sub
and
push
sbb
mov
cmp
les
jbe
mov
dec
les
and
imul
push
mov
sbb
stos
lods
and
mov
and
shr
pop
imul
pop
repz
scas
adc
or
adc
jns
dec
push
xlat
cmp
cld
jbe
int3
mov
push
aad
xorl
xchg
repnz
push
fdivrl
jno
cmp
adc
pushf
push
negl
loopne
fistps
loop
cwtl
or
mov
cmp
mov
pop
cmovo
xor
mov
call
mov
fsubrs
push
lock
xor
int3
imul
in
dec
movsl
sub
pop
popa
mov
imul
and
jecxz
shrb
xor
pusha
inc
mov
es
add
shlb
inc
nop
notb
dec
out
mov
jle
xor
lods
icebp
mov
jp
mov
or
sbb
aaa
test
loopne
push
loope
loope
rcrb
cmp
jb
pusha
or
sar
push
inc
je
xlat
insl
jg
scas
shlb
call
mov
je
adc
ljmp
jne
fidivs
and
lock
scas
mov
dec
xchg
push
jecxz
jae
addl
jecxz
das
or
clc
rolb
out
test
mov
mov
or
dec
sub
jmp
arpl
in
test
jg
fs
ret
loop
insb
out
loopne
mov
push
inc
pop
fldt
sbb
outsb
inc
cmpsl
fistpll
add
pusha
fyl2xp1
pop
jge
cs
adc
rorb
addb
in
fdivl
fsts
add
and
fisubrs
add
out
lods
mov
jle
xchg
jbe
movsb
pop
enter
xchg
push
dec
inc
push
xchg
filds
fnstenv
jle
ret
ret
std
jge
fnstenv
xor
movsl
inc
out
ror
sub
imul
xchg
cmp
or
xchg
or
out
xchg
mov
or
pop
jae
insb
stc
test
inc
lods
inc
outsb
mov
andl
cmp
jecxz
jp
push
dec
mov
mov
dec
cmc
sub
mov
and
sahf
out
loopne
sbb
push
and
sbb
test
sbb
mov
out
cs
sbb
std
xor
mov
es
mov
xor
bound
adc
data16
xor
lock
fistpll
shl
mov
scas
aas
aaa
and
sbb
ss
popf
ret
and
pop
cmp
pushf
daa
jge
add
pop
in
movsb
xchg
add
xchg
mov
test
sub
pop
pushf
cmp
loop
mov
mov
add
xchg
adc
les
out
push
out
xchg
lea
mov
cld
xchg
out
and
jg
push
dec
jbe
incb
lds
test
leave
dec
bound
xchg
jnp
mov
scas
push
lret
or
jnp
xor
mov
sbb
mov
or
mov
or
xchg
popa
xchg
ret
xor
pop
add
adc
mov
mov
xor
push
dec
jecxz
ds
std
adc
mov
icebp
cmp
rolb
sti
or
mov
mov
fimull
shrl
inc
dec
inc
int3
lret
rcl
jge
jo
in
int3
iret
insb
notl
jge
cs
fs
sub
insl
lods
roll
in
gs
ja
xchg
inc
jbe
aam
jnp
stos
push
mov
into
aas
out
mov
and
dec
and
out
clc
cld
enter
je
andl
pusha
or
xor
pushf
xchg
flds
xchg
cmpsb
popa
movsb
sbb
mov
movsl
ss
pop
jbe
adc
mov
dec
jo
outsl
and
adc
mov
cmp
mov
dec
mov
mov
push
adc
or
xor
test
lods
lahf
sbb
push
daa
addr16
insb
mov
lret
push
sub
inc
mov
aad
or
push
scas
js
pushf
insb
and
and
fadd
dec
je
pop
push
adc
mov
push
mov
and
idivl
jae
pop
imul
mov
lds
mov
or
rorb
adc
rcl
scas
arpl
xor
call
xchg
insl
jbe
sarl
jmp
in
gs
in
cmpsb
pop
mov
pushf
imul
jge
dec
or
pop
and
lock
mov
jmp
adc
mov
mov
out
pop
fidivs
cmpsb
ja
dec
mov
mov
xor
les
es
pop
in
outsb
cmpsb
mov
pop
add
mov
das
dec
push
pop
sbb
cmp
add
lcall
push
inc
imul
or
mov
sub
cmpsl
movsl
xlat
icebp
fmuls
in
and
in
sbb
and
push
push
lahf
fsubl
mov
mov
cwtl
jmp
in
in
and
rorb
aam
into
or
mov
es
push
dec
std
push
mov
xchg
inc
pop
ljmp
outsb
push
aaa
rcll
sarl
out
jnp
leave
inc
test
popf
mov
aaa
imulb
lods
js
negb
push
call
add
fldt
and
psllw
pusha
add
jns
sbb
sub
mov
lcall
and
icebp
sub
sub
jb
or
dec
xchg
iret
inc
mov
int3
xchg
cmpl
pop
jg
xchg
aas
pop
rcll
outsl
xchg
xor
pop
jge
inc
sub
rorl
mov
mov
imull
mov
jle
cmpsl
pop
arpl
xchg
dec
jbe
cmpl
repnz
les
shl
roll
shrb
cmpl
negl
aaa
addb
and
jle
push
mov
xchg
jg
and
stc
sahf
cmp
adc
jns
popa
xor
mov
push
sbb
pop
das
sub
aam
xor
add
pop
cltd
test
sbb
mov
and
imul
cmp
mov
stc
jns
popf
fldcw
adc
inc
xor
lret
sbb
sbb
or
jg
rcrb
inc
push
or
xchg
dec
mov
mov
ret
stc
xor
cmpsl
fbstp
sub
and
mull
cmp
out
in
adc
stos
ja
cmp
and
insl
js
fcomps
adc
sbb
mov
mov
aam
or
dec
adc
arpl
das
imul
inc
int
jnp
and
sub
jp
addr16
iret
jb
cmp
push
jecxz
subl
cmp
push
lock
mov
stos
xchg
mov
popa
scas
shlb
cmp
setl
lds
aas
mov
jbe
mov
ljmp
scas
xchg
or
es
pop
mov
mov
arpl
test
imull
mov
or
pop
sbb
or
out
inc
inc
mov
les
jnp
push
nop
push
aad
xchg
jnp
repz
test
fcoms
or
scas
mov
fidivrl
pop
loopne
in
fwait
pop
imull
sub
or
insb
push
lahf
sti
inc
xor
push
xchg
cmpsl
inc
jp
mov
imul
mov
in
mov
jne
adc
test
mov
je
loopne
sub
push
in
lahf
mov
pop
cwtl
ds
and
fistps
jnp
dec
lods
adc
lcall
inc
inc
inc
test
or
test
movsb
mov
xor
xlat
xchg
xor
je
dec
adc
dec
push
sbb
push
loope
movsb
sarb
or
rolb
inc
repz
insl
xor
xchg
psubsb
adc
push
dec
pop
pop
pop
sbb
testl
push
out
neg
insb
stos
and
fildll
sub
outsl
push
push
test
push
jge
sub
xor
out
notb
cmp
dec
sub
mov
imul
push
jecxz
in
imul
inc
jnp
inc
adc
out
inc
pushf
inc
jle
fldenv
out
out
in
call
lock
jg
mov
and
cmp
and
pop
in
out
insb
sub
mov
bound
sbb
stos
mov
and
test
aas
movsb
ss
aaa
cli
dec
dec
aas
jle
sub
sbb
xchg
or
pusha
out
cmp
fisubl
ds
arpl
test
fcom
aaa
mov
addr16
lret
jge
mov
jge
pushf
imul
push
daa
lret
std
js
test
mov
lret
in
sub
dec
leave
daa
scas
push
push
push
outsb
adc
jbe
push
push
fldt
cs
sbb
popa
inc
xchg
add
jo
jle
iret
and
testl
int
cld
mov
pop
mov
out
shlb
cmp
fwait
push
dec
cmp
mov
pop
aam
stos
pop
jp
mov
jge
int
out
inc
sub
addb
pop
sbb
jle
es
int3
push
je
push
mov
in
insb
xor
dec
gs
jecxz
rcrl
jbe
insl
mov
jns
cmp
lret
jle
in
lods
cmp
pusha
sub
pop
pusha
push
daa
add
cmpsl
mov
test
or
shrb
add
push
pushf
sarb
cld
lret
sarb
lea
in
imul
out
fisubrl
add
insl
and
ret
in
loopne
inc
fwait
xchg
mov
inc
push
into
iret
outsb
push
mov
roll
push
pop
lret
push
inc
inc
outsl
or
loope
idivb
rorb
lret
pop
daa
cmp
mov
inc
pushf
cmp
in
cld
lds
push
lahf
push
jo
or
inc
scas
shl
lods
jle
loop
insl
lret
ljmp
div
out
test
cwtl
mov
in
dec
adc
pop
cmp
mov
ret
insb
mov
xchg
dec
repz
add
ss
leave
xor
ljmp
jmp
arpl
xchg
sar
cmp
and
xchg
push
push
enter
xor
xlat
push
xchg
clc
mov
cmc
adc
mov
in
rolb
inc
adc
jmp
jae
shrl
or
cmp
and
pop
mov
sarl
mov
pop
mov
in
push
xchg
lret
add
mov
testl
cld
je
push
std
pop
mov
addl
test
xor
cmp
adc
push
sbb
pushf
test
jg
roll
cmp
call
add
sub
arpl
ficompl
sub
push
cltd
xor
sbb
ja
scas
adc
push
inc
scas
andb
mov
adc
mov
mov
mov
cltd
jbe
mov
xchg
push
and
mov
lret
insl
scas
in
scas
cmpl
sti
mov
insb
and
push
jl,pn
scas
sub
jne
int3
xor
jno
out
rcrl
push
fisubl
xor
rclb
imul
cmpsb
sub
sbb
fisubrs
sbb
fimull
stc
push
ret
mov
loopne
pop
out
clc
orb
add
or
xor
mov
fisubl
lret
loope
jmp
or
push
xchg
mov
enter
pop
lret
inc
inc
gs
cmpsb
jl
insl
sub
cmpb
decb
cmp
lea
ja
mov
mov
arpl
push
push
push
fcomps
sub
popa
push
push
mov
jno
jns
push
mov
jne
dec
adc
sub
sub
and
das
repz
sti
dec
push
mov
in
mov
int
fwait
cmpl
mov
or
jmp
jne
jns
out
movsb
and
jge
pop
das
push
in
inc
jle
stos
scas
call
push
cmp
inc
in
jae
pop
mov
test
push
aad
xor
adc
inc
mov
and
lods
test
cwtl
lret
jne
ss
add
add
inc
lods
aaa
adc
mov
mov
fwait
fwait
xchg
dec
lods
pop
xchg
cmpsl
loop
mov
inc
jo
fmull
fs
fcoms
dec
pop
sub
push
sub
loopne
mov
mov
ret
sbb
inc
or
xor
jne
pop
mov
push
in
mov
and
cmp
mov
jp
roll
inc
repz
add
xchg
arpl
add
and
pop
xchg
movsl
push
jp
rcrl
lods
call
cmc
dec
mov
cmpb
dec
and
mov
pop
jnp
push
jnp
mov
add
adc
inc
cmpsb
push
aad
mov
sbb
gs
out
fcoms
and
jge
in
sbb
or
push
sbb
mov
out
xchg
fadds
sahf
lods
imul
mov
and
movsl
add
push
or
and
sub
icebp
bswap
and
aam
movsl
and
fisubrl
aad
stos
popf
jno
adcb
rep
mov
add
inc
nop
add
repz
fwait
xchg
lods
xor
lock
cmp
sahf
mov
ret
fcmovbe
mov
movsb
imul
add
cmp
sahf
and
pop
cld
out
sub
xchg
test
sub
das
dec
xchg
xor
out
jmp
test
adc
fstps
in
xlat
and
shl
lea
cmp
mov
fadd
sahf
jbe
or
xchg
mov
adc
add
mov
or
jl
je
cmpsb
loop
xor
pop
ret
jg
cmp
cmpsl
mov
xchg
mov
loope
mov
sub
shl
cli
std
fnstsw
sub
or
adc
repnz
movsb
inc
jg
addl
test
mov
adc
jb
scas
sbb
xchg
stc
sahf
leave
inc
int3
inc
in
lods
jae
push
cmpsl
bound
imul
adc
cmp
test
stos
addr16
adcl
lcall
stc
adc
movsl
cmp
lds
test
mov
xor
les
xchg
movsl
lods
mov
imul
cli
js
adc
cmpsl
add
and
mov
ss
in
push
lock
add
sar
loopne
ds
mov
pop
add
addr16
inc
cmpsl
and
add
outsb
push
push
cmp
mov
add
jge
cmp
inc
push
push
push
or
jg
pusha
push
lahf
in
stos
push
add
pop
cld
mov
push
xor
fwait
sahf
cmp
js
mov
adc
sbb
dec
add
push
mov
les
pop
or
cmp
adc
push
mov
push
ficoml
gs
add
xlat
mov
scas
mov
out
push
pusha
cwtl
push
addr16
or
adc
and
and
jbe
scas
pop
dec
sub
outsl
sbb
loope
mov
dec
jg
xlat
lds
push
dec
lods
and
mov
outsb
ja
xor
clc
inc
jo
shll
jo
xchg
fiaddl
jbe
mov
push
call
mov
enter
out
pop
mov
mov
stos
scas
push
out
into
ret
test
push
fdivr
push
mov
dec
scas
xor
repz
dec
clc
mov
push
lcall
inc
ljmp
xor
sub
cltd
andb
gs
xor
jl
dec
push
cltd
lret
das
dec
or
enter
fsts
gs
cmc
fildl
or
pop
inc
bound
pop
in
fcompl
xchg
jo
cmp
and
dec
sahf
clc
xchg
push
adc
fdivl
scas
dec
lods
jbe
jg
sbb
shrl
call
repz
hlt
mov
jb
cmp
mov
cmpsl
sub
lods
out
mov
rolb
adc
pop
insl
jb
insl
nop
sahf
les
add
in
inc
or
rolb
xchg
mov
adc
mov
iret
or
loop
mov
loop
shlb
gs
sbb
mov
scas
mov
cli
mov
pop
cmpsl
cmp
lret
mov
adc
and
add
hlt
jp
sub
pusha
jge
pop
lcall
fcomip
iret
push
and
dec
sub
psraw
int3
add
push
sub
inc
inc
ja
mov
jge
xchg
aaa
outsb
sbb
dec
loopne
dec
daa
cvtpi2ps
stos
jp
movb
cli
add
insl
cmpb
adc
shrl
cli
xchg
out
nop
testl
dec
inc
push
sub
out
into
hlt
addr16
fs
sarl
rol
movsl
dec
cmp
adc
aas
cs
and
js
cmpl
or
dec
dec
sti
xor
push
pop
lahf
adc
push
push
adc
dec
fwait
dec
stos
insb
shll
lods
cmp
jne
add
jbe
mov
cmp
add
pop
adc
push
cmp
out
jae
and
daa
cwtl
and
sub
mov
and
xor
sub
clc
scas
in
sub
sub
mov
jb
aam
arpl
inc
sbb
sbb
jle
into
pushf
in
les
xor
jnp
or
pop
pop
subb
cmp
cmp
xchg
js
inc
scas
xlat
xchg
mov
test
jmp
lahf
orps
inc
test
daa
cmp
call
sub
cmp
popa
cmpb
jb
mov
add
mov
shl
gs
daa
xor
out
push
cmp
movsw
lret
xchg
repnz
xor
push
cltd
into
cmpsb
cmc
cmpsw
sub
mov
movsb
add
dec
imul
in
push
inc
xor
push
gs
and
imul
jp
and
cmp
movsb
fistpll
sub
xchg
imul
outsl
pop
pop
inc
outsl
fucom
outsl
jge
pop
insl
cmp
stos
in
sahf
mov
mov
xchg
pop
fwait
clc
test
mov
scas
push
add
js
fidivrs
xor
dec
dec
test
mov
bound
hlt
mov
inc
dec
pop
adc
xor
aaa
mov
xchg
in
jl
mov
imul
pop
stc
lods
and
sti
dec
in
cmp
add
movsl
out
push
push
and
mov
or
mov
mov
repz
popf
sbb
js
adc
ljmp
in
inc
pop
mov
gs
cld
mov
sbb
arpl
or
push
in
pop
roll
and
loopne
push
mov
pop
push
add
add
mov
aas
mov
mov
pop
mov
mov
mov
jmp
ja
pop
cmpsb
and
xor
adc
inc
jb
mov
dec
repz
sbb
js
mov
cmp
adc
dec
xor
add
mov
mov
mov
out
cmp
xchg
notb
mov
lahf
adc
in
push
sbb
push
inc
ljmp
imul
imul
mov
ret
xchg
xchg
fwait
mov
xchg
sub
lds
mov
icebp
ljmp
lahf
fldcw
in
insl
xchg
repz
or
inc
xchg
rclb
bound
mov
cmp
push
ljmp
hlt
or
rorl
xadd
punpcklwd
sub
dec
loope
out
mov
outsb
xor
push
lret
insl
pop
adc
mov
jb
push
outsb
insb
mov
cmp
insl
mov
jmp
sub
xchg
inc
xor
les
jmp
push
sbbb
jle
ds
jecxz
adc
sarl
add
scas
lcall
mov
in
out
shll
sub
xchg
dec
cmpsl
mov
nop
or
nop
fsubrs
xor
pop
or
pop
outsl
add
fcoml
jne
push
test
loop
into
popf
mov
lods
mov
call
mov
testb
push
daa
inc
cmpsl
mov
mov
fsubs
xor
mov
lock
or
insl
ret
sub
mov
push
out
in
and
pop
xchg
arpl
fs
repnz
add
or
mov
enter
das
mov
out
adc
icebp
flds
sahf
sbb
hlt
mov
pop
aaa
add
call
add
jae
push
fs
pop
pop
mov
xlat
pop
stc
test
and
addr16
pop
outsb
aaa
lcall
imul
jns
pop
popl
out
loope
into
and
or
bound
scas
int
mov
int
xchg
pop
add
push
lret
lock
cmc
sarb
aas
call
insl
mov
pop
ja
les
jecxz
js
leave
cld
popa
nop
es
jnp
out
xchg
jp
adc
es
xor
ss
xchg
ss
aad
mov
add
faddl
ss
dec
dec
lea
cld
negl
sub
mov
out
aas
and
aaa
xchg
cmpsb
mov
fsubrp
lds
dec
in
sub
xor
nop
xor
mov
in
sbb
mov
push
clc
and
xchg
push
xor
xchg
add
shll
and
sbb
sub
setae
stc
xchg
movsb
mov
movsb
mov
inc
fs
roll
fldcw
push
mov
adc
dec
loopne,pt
out
xchg
mov
aas
sbb
add
push
pop
das
cmp
inc
fdivrl
xorb
sbb
pop
stos
sbb
mov
push
pop
pop
sti
cmp
mov
mov
mov
cs
push
adc
push
dec
lds
aam
ret
mov
pop
jns
negl
jp
xor
inc
fwait
push
bound
dec
dec
or
jmp
jp
inc
xor
outsb
js
mov
std
addl
incb
insb
xchg
inc
pop
nop
xchg
into
loopne
pop
pop
inc
nop
cli
jle
lcall
scas
aas
lahf
xchg
and
movsl
stos
push
dec
cli
mov
inc
jb
mov
jmp
jmp
pop
mov
or
mov
movsb
test
ror
lret
cmc
xor
dec
in
push
xchg
in
out
aam
aam
std
insl
shrb
add
ljmp
fisubrl
shll
push
jg
je
std
adc
dec
mov
xchg
orb
scas
or
std
inc
add
sbb
adc
testb
mov
pop
lods
adc
test
push
sahf
fs
sub
ja
pop
movsb
pop
jno
cltd
sbb
sahf
jmp
fcomps
xor
adc
sub
cmp
test
xchg
cmp
push
jne
les
or
popa
repnz
adcb
bound
lsl
test
int
and
xchg
push
dec
pusha
sbb
xchg
mov
mov
xor
mov
sbb
fbld
pop
subb
lahf
xchg
mov
and
pushf
jo
fisttpll
xchg
aam
sub
or
and
nop
shll
mov
sbbb
mov
dec
stc
inc
aaa
cs
add
cld
xchg
inc
xchg
xchg
sbb
into
out
je
idivb
mov
mov
clc
mov
lahf
and
sub
dec
xor
fld
cmp
movsb
mov
mov
inc
pop
xchg
loop
cmpsl
movsl
leave
mov
lret
jae
pop
cld
mov
cmp
xchg
adc
test
loope
push
movsb
aaa
out
jp
inc
push
sbb
lea
jb
mov
xchg
mov
lcall
ljmp
insl
push
inc
jnp
loopne
jno
sbbb
aaa
jbe
aad
jecxz
in
jecxz
pop
pop
pop
cwtl
pop
test
adc
push
fisubrs
xchg
mov
sub
dec
pushl
sub
and
jmp
daa
ja
mov
pop
pop
stos
flds
les
dec
insl
repz
pop
frstor
adc
insb
lahf
imul
dec
jne
xor
call
jnp
xor
pushf
mov
add
jno
push
mov
mov
bound
std
cmp
pop
lret
cmc
dec
sub
jle
cmpsl
stc
pop
jne
mov
pop
jl
in
fidivs
sub
fcmovb
push
dec
inc
and
pop
outsb
adc
xchg
and
movsl
stos
lds
mov
orl
xchg
push
lea
fs
outsl
lret
cmp
xor
fisttpll
dec
imul
add
shr
or
or
loopne
loopne
mov
jg
sub
pop
sub
pop
je
sub
inc
or
mov
andb
mov
dec
dec
addl
jne
mov
imull
inc
push
xchg
je
adc
out
xor
inc
imul
xor
sub
mov
int3
fcmovb
mov
cmc
jmp
dec
rorl
xchg
mov
inc
mov
fnsave
jp
imull
add
cmp
mov
inc
sbb
dec
sub
cmp
xor
fmuls
xchg
es
add
pop
std
std
into
aas
ffreep
dec
rcr
dec
mov
mov
loope,pn
lahf
fdivp
adc
jg
fdivs
loopne
std
in
test
xor
pop
adc
add
cmpl
mov
adcl
rclb
stos
push
mov
leave
imul
jg
getsec
repnz
mov
iret
xchg
pop
ljmp
xlat
div
adcb
cmpsl
jl
push
mov
dec
out
xor
mov
mov
jo
aaa
arpl
js
add
leave
mov
add
stos
ret
movsl
sbb
jns
cmc
xchg
jo
jge
loop
and
push
fucomp
push
adc
jl
adc
das
outsb
cmp
adc
push
sub
aas
jo,pn
sti
fldenv
fstpl
pop
ja
ljmp
inc
cmpl
dec
imul
xor
test
sahf
xorl
dec
inc
aaa
sbb
in
push
sbb
stc
lahf
jo
mov
sbb
mov
imul
aaa
insl
mov
insl
jle
bound
xchg
loop
enter
cmc
cmc
cmpsb
divl
fcmovnb
lock
in
jle
popa
and
rorb
push
test
jns
fcomi
test
data16
pop
dec
adc
and
inc
jmp
divb
daa
xor
call
cwtl
test
add
iret
mov
pop
xlat
xor
xorl
paddsw
clc
into
xchg
js
dec
orl
es
pop
test
rolb
sbb
in
xchg
lock
jle
dec
nop
movntps
mov
fbld
into
lahf
mull
sbb
or
leave
icebp
aad
addr16
jp
js
xor
xor
rcrl
ja
ds
push
scas
xor
lds
adcl
lahf
adc
adc
stos
cmc
sbb
movsb
sbb
icebp
add
inc
repnz
popf
faddp
gs
hlt
jg
test
jnp
or
sbb
imul
pop
mov
mov
ficoms
mov
xor
dec
lods
in
mov
ja
xchg
js
mov
inc
pusha
xchg
push
pop
fiadds
fistpl
pop
aaa
jb
adc
mov
mov
stos
mov
shl
outsl
xor
lea
iret
sub
mov
jb
aaa
aad
lock
jmp
repz
scas
adc
or
ljmp
jne
int
je
lahf
push
xchg
mov
mov
fsub
xor
xchg
test
das
pop
testb
out
mov
xchg
movsb
jecxz
mov
jg
test
jns
push
dec
pop
in
dec
rcr
and
sub
loop
push
adc
mov
push
pop
xchg
jno
stos
jns
stos
xchg
pop
int
das
aaa
xor
xlat
inc
shlb
mov
dec
ficoml
dec
mov
aaa
ss
js
insb
mov
sahf
rcrb
add
mov
xchg
and
jo
inc
inc
add
xor
ret
mov
das
push
or
mov
loopne
mov
dec
dec
cs
outsb
add
sbbl
loop
cmpsl
stc
cld
mov
ja
aas
fistpl
repnz
cmp
mov
mov
add
mov
push
push
xchg
pop
mov
pop
add
jo
dec
mov
ja
push
jl
lods
test
bound
testl
icebp
sahf
jbe
xor
push
jb
rclb
jg
mov
imul
andl
mov
jno
sahf
jp
enter
xor
jo
jg
xor
xor
mov
test
mov
cmp
mov
cmpl
inc
or
adc
xchg
xchg
mov
lcall
pop
lds
xchg
loopne
cmp
adc
cmp
out
xorl
pop
mov
mov
jno
mul
loopne
xchg
rclb
cmp
xor
jmp
pop
out
inc
jo
inc
mov
sahf
xchg
arpl
xchg
mov
imul
iret
and
insl
jl
sub
scas
and
add
in
xor
or
pop
jno
xchg
shlb
mov
or
jbe
add
xlat
in
outsb
pop
cmc
fdivrl
std
add
adc
cmp
pop
movsb
aad
scas
sahf
nop
aaa
jne
pop
push
mov
fs
jns
xchg
jle
into
inc
pusha
pop
pushf
lock
sub
dec
lret
in
stos
push
xor
lret
mov
gs
cwtl
dec
cmpsb
stc
roll
test
pop
jecxz
mov
into
lock
daa
aas
loop
aaa
xchg
lret
xchg
and
mov
test
push
loope
sub
pop
push
lds
mov
xor
xor
into
cmp
lods
mov
xor
xchg
out
mov
mov
cmp
ss
shll
mov
dec
cs
add
mov
and
mov
cs
loop
xchg
orb
jae
push
mov
cwtl
outsl
imul
cmp
data16
lret
xchg
xchg
ja
dec
xor
adc
mov
xor
push
arpl
lea
mov
or
push
xchg
mov
cmpsb
mov
out
push
mov
nop
push
mov
cmp
popf
pop
sub
arpl
xchg
push
popa
jb
mov
add
sarb
gs
sub
push
mov
jp
lock
cmp
repnz
mov
push
push
setb
mov
test
bound
mov
cmpsb
out
dec
add
iret
pop
adc
push
mov
out
push
add
xchg
mov
nop
sbb
mov
adc
xor
arpl
notb
cwtl
out
int3
sar
push
dec
mov
pop
push
sub
data16
lods
repnz
cmpsb
push
adc
xor
pop
or
sbb
push
sti
mov
sbb
adc
xchg
inc
insb
fimuls
pop
mov
shll
dec
insl
mov
orl
mov
sbb
push
xor
hlt
and
cmp
bound
loope
fadds
jge
hlt
scas
jb
cld
rorl
add
push
imul
mov
in
fnstsw
loopne
cli
push
loope
jo
jnp
mov
insl
ss
mov
rorl
mov
rcll
jns
mov
push
sub
xlat
dec
adc
lds
sub
add
inc
test
loop
sar
fwait
hlt
sbb
movsb
jge
mov
imul
loop
pusha
mov
jbe
test
imul
inc
movsb
and
in
je
scas
inc
push
rcrl
lds
gs
stos
jne
movsb
dec
adc
mov
vlddqu
jp
aas
cmp
add
xchg
int3
pushw
mov
cmp
loope
arpl
idivl
mov
mov
or
xchg
add
addr16
jnp
lods
mov
inc
rorb
rcl
sbb
push
mov
mov
mov
adc
push
and
cmp
pop
inc
lods
es
fsubr
mov
push
bound
xlat
push
rcll
pop
xor
sub
sub
jb
test
out
mov
xor
xor
cmp
jbe
jno
out
ljmp
adc
subl
mov
push
in
loope
popf
stos
cmp
xchg
adc
aam
das
dec
subb
pusha
push
mov
pop
leave
and
sbb
lock
cwtl
sub
mov
adc
loopne
insl
pop
push
popa
fidivrl
in
pop
dec
dec
or
cltd
hlt
and
dec
outsb
sbbb
jno
fisttps
cmp
xchg
and
pop
jno
cmpsb
jl
adc
mov
jecxz
cmp
mov
lret
daa
data16
cmpsl
mov
in
xchg
scas
xchg
push
pusha
in
pand
in
mov
push
out
jle
xchg
or
stos
mov
loopne
es
adc
repz
jbe
lock
test
outsl
ficomps
mov
stc
inc
into
inc
or
xchg
xor
in
test
out
and
mov
or
arpl
mov
call
stc
mov
test
sysret
push
loopne
inc
sarb
mov
in
mov
mov
lock
fs
aas
iret
mov
and
ljmp
pusha
xchg
repz
cltd
push
lods
std
adc
mov
cltd
and
stc
rorl
dec
rcrl
repz
icebp
add
mov
je
cmp
sub
in
mov
push
push
setl
mov
dec
enter
imul
push
lcall
test
pusha
jbe
mov
outsl
or
lods
addr16
nop
js
cld
adc
int3
insl
int
out
flds
pop
dec
lods
inc
lret
ficoml
rcl
xor
and
and
add
lods
sti
adc
rclb
cld
mov
xor
imul
sbb
mov
in
and
or
fsubrs
jo
jge
sbb
aaa
sub
sbb
mov
sub
hlt
mov
insb
mov
rorb
pop
push
insb
rolb
lods
cmp
sub
in
mov
pop
jge
mov
test
sti
add
fcmovne
int3
mov
rorl
ds
insl
pop
insb
fcom
cmpl
push
xor
jl
cmpl
js
xchg
mov
stos
nop
push
call
cwtl
test
adc
and
test
stos
inc
aas
cli
scas
cmp
adc
jbe
push
pop
lods
adc
ljmp
je
jge
pop
push
je
test
or
stos
adcb
mov
push
ret
add
inc
lds
inc
enter
mov
mov
repz
push
fidivl
sbbl
lahf
loope
push
cld
cmpsl
push
shr
sbbb
dec
jmp
rol
sahf
fcmovnb
loope
movsb
mov
jb
sbb
out
jg
add
add
jno
icebp
cmpl
mov
mov
inc
sub
inc
pop
push
test
mov
push
ret
outsl
outsl
jge
jp
test
add
aad
lds
ljmp
pop
add
mov
addr16
inc
jmp
hlt
xchg
mov
pushl
add
mov
shl
repnz
push
lahf
sub
inc
movsl
daa
or
mov
fdivp
dec
outsb
add
ret
shr
cs
mov
push
mov
sub
sbbb
iret
sbb
adc
icebp
pop
cmpsb
cmp
fsubrl
push
mov
ret
popa
mov
insl
push
cld
mov
jb
cmpsb
and
in
xchg
nop
sbb
xchg
js
mov
dec
jge
arpl
sti
fsubr
jmp
int
dec
xorb
jecxz
mov
xchg
add
ret
daa
ds
mov
imul
jnp
out
xchg
testb
sub
cmp
push
cmpsl
xchg
outsb
fnstcw
ret
push
add
sahf
pop
mov
imul
xchg
out
add
cmp
nop
cmova
arpl
scas
loopne
mov
pop
adc
fistl
ret
mov
test
jle
and
sbb
pusha
sbb
sbb
fstpt
aam
loope
call
iret
int
in
add
push
mov
jmp
iret
add
xchg
adc
insb
pop
push
push
or
push
add
ja
fidivs
pop
cmp
jp
push
imull
inc
jbe
gs
xchg
push
add
cmp
cmp
popf
out
fiadds
hlt
pop
mov
or
js
or
cmp
call
lahf
sub
jbe
adc
mov
das
mov
pushf
xchg
out
mov
movsl
insb
ja,pt
hlt
sbb
test
je
mov
ja
scas
rorl
mov
aam
lret
and
pop
or
and
jne
and
mov
xlat
and
dec
mov
sub
call
pop
xchg
ret
std
inc
aas
jo
xchg
rclb
cmp
fisubrs
out
inc
ljmp
dec
rcl
mul
imul
jecxz
repnz
outsl
mov
jnp
mov
add
adc
out
shll
cmpsb
xlat
in
fisubrs
cltd
sbbb
data16
push
xor
out
cmp
dec
enter
add
lock
push
push
test
pop
in
adc
add
cld
pop
pop
dec
adc
sub
int3
and
lahf
in
xchg
gs
int
push
fsubrs
je
xchg
push
in
xor
xor
js
loop
mov
loope
mov
sbb
or
jge
les
das
nop
loop
aad
scas
fadds
push
stos
mov
addl
cmp
xchg
fisttpl
adc
sub
push
in
cs
fcomip
or
push
faddl
or
hlt
in
repz
scas
nop
mov
adc
dec
jnp
pcmpeqb
jl
movsb
mov
rcrb
out
les
mov
xor
inc
jo
mov
add
adc
inc
repnz
fiadds
popa
fidivl
mov
mov
outsl
xchg
test
or
aam
mov
aam
push
mov
sub
sub
mov
mov
xor
cmp
insb
mov
mov
mov
cmovbe
and
adcb
outsl
flds
shrb
ss
outsl
adcb
leave
sahf
js
sbb
pop
movsb
dec
lock
es
mov
xchg
mov
loope
or
ror
xor
mov
xlat
cmpsl
fidivs
fwait
xchg
sbb
or
mov
test
shrb
xchg
cltd
fs
mov
add
scas
loop
aad
in
pop
pop
jmp
mov
popf
into
lret
mov
mov
or
mov
xchg
or
repz
fsubl
test
pop
cmp
or
or
aas
mov
cmp
int
xchg
out
cmc
sbb
lahf
icebp
jmp
jecxz
xchg
lcall
inc
jb
adc
rclb
daa
shll
in
cltd
es
xchg
mov
lods
pushf
or
bound
mov
iret
xor
clc
push
in
and
pop
and
addr16
pop
jne
adc
push
rcll
cmpl
fists
push
jo
xor
cmp
int3
sarl
arpl
mov
mov
lret
and
nop
in
outsb
inc
push
daa
jns
lret
jle
and
cmp
xchg
iret
sbb
jo
inc
pop
cmp
imul
ret
sbb
data16
pop
xor
test
mov
xchg
pop
mov
lahf
xchg
mov
jge
addl
dec
inc
mov
lods
pop
into
out
mov
xchg
xchg
fdiv
sbb
in
sbb
loop
dec
stos
psadbw
add
out
imul
add
imul
mov
cmp
mov
sbb
push
jbe
pop
xchg
js
movsl
push
sbb
xchg
mov
mov
cmp
call
rorl
sbb
lahf
and
adc
xchg
pop
sbb
xchg
add
lret
ja
xchg
into
cmp
push
sbb
aam
push
fnsave
ficoml
je
imul
mov
xchg
aas
dec
sub
imul
jne
pop
push
subl
mov
push
pushf
xor
jns
adc
xor
xchg
gs
push
jecxz
repz
mov
imul
mov
shrl
inc
iret
xchg
mov
add
nop
pop
loop
jp,pn
and
dec
idivl
mov
lods
cmp
and
mov
inc
icebp
mov
sti
shr
mov
incl
lock
or
mov
fld
mov
mov
call
test
xchg
sti
pop
or
pop
faddl
xchg
mov
adc
push
aaa
imul
jo
outsb
flds
rol
adc
inc
inc
sbb
repnz
or
push
xchg
sbb
stc
cmp
add
loope
jne
mov
xchg
xor
pop
inc
cld
mov
fisubl
pop
rclb
mov
jo
mov
push
outsb
lock
fdivrs
mov
daa
sub
add
push
in
mov
ljmp
lods
icebp
mov
jl
nop
mov
xor
and
xor
xchg
std
xchg
lret
push
xor
insb
xor
cmpl
sbb
scas
xchg
std
stc
roll
leave
adc
sbb
fmuls
cmp
cmp
jge
push
xchg
cmpsl
clc
jle
mov
mov
or
xor
popa
stos
lds
testl
je
cli
popf
push
arpl
out
fsub
mov
clc
stos
scas
add
push
jo
xor
sbb
stos
xchg
arpl
inc
mov
sub
rorb
and
and
sub
leave
jge
sbb
arpl
outsb
faddl
mov
inc
inc
pop
mov
sub
lds
lods
xor
sub
xorl
push
int3
pop
cld
add
fstl
test
push
inc
addb
aam
pop
popf
sub
daa
jae
or
idivl
jno
mov
ret
les
icebp
mov
jge
adc
mov
jo
jo
in
test
rcrl
call
pop
inc
push
and
sbbb
cli
mov
and
dec
nop
inc
xchg
mov
cs
sub
inc
cld
or
jmp
xchg
ret
mov
jge
scas
or
dec
inc
sbb
jge
test
js
inc
jae
fdivr
jle
arpl
ret
sbb
aas
dec
mov
int3
out
jns
jl
icebp
popf
cmc
dec
adc
icebp
adc
push
daa
ljmp
ret
shr
ficomps
xchg
or
pusha
sbb
loop
jae
in
insl
xor
xchg
xlat
add
jl
mov
dec
orl
sbb
and
ja
gs
out
xchg
out
jb
fildl
adc
or
adc
mov
mov
and
lret
ss
int3
pushf
repz
int3
jbe
sub
sub
iret
sbb
daa
dec
inc
pop
insb
sti
cmpsl
out
adc
jns
mov
arpl
repz
jp
fs
xorl
stos
je
shll
push
dec
adc
in
nop
lret
pop
fadds
fnstenv
lock
pop
or
dec
rorb
and
jo
adcl
adc
lods
mov
push
lods
xchg
push
out
dec
lea
loopne
dec
mov
jmp
rcr
loope
mov
sub
popa
rclb
adc
cmp
mov
sahf
mov
aad
pop
sub
loope
cmp
mov
xlat
test
jl
int3
mov
jp
in
pop
inc
inc
jnp
mov
sub
lds
jl
shlb
push
or
int
mov
inc
sbb
orb
stc
inc
sti
xor
add
sarl
push
push
jno
loope
imul
pop
jle
push
push
pop
imul
and
loope
adc
mov
or
dec
cld
movsl
in
pop
ss
push
push
ret
call
cmp
cwtl
inc
mov
aad
adc
cmc
nop
in
cld
mov
pop
jl
xchg
sbb
aad
arpl
call
nop
rorb
stc
xchg
sbb
xchg
push
pop
int3
add
ja
dec
jnp
sub
in
or
sar
aad
mov
bound
mov
jne
aad
mov
push
icebp
call
scas
aad
cli
mov
cmp
mov
adc
pop
pop
cmp
adc
cwtl
jbe
inc
sub
jbe
xchg
sahf
cltd
lds
xor
inc
adc
add
divb
cltd
dec
stos
aad
mov
push
or
clc
mov
jecxz
xor
xchg
lods
cmpsl
hlt
sbb
idivl
addb
dec
xor
mov
jb
jecxz
popa
xchg
inc
orl
fnstcw
cltd
pop
repnz
testl
sub
inc
or
outsl
imul
divb
cld
pop
out
fiadds
sub
pop
das
loopne
fdiv
push
pop
inc
sbb
enter
gs
insl
push
fstps
pusha
mov
xor
sub
mov
into
outsl
and
incb
pop
xchg
sub
cli
icebp
dec
cmpsb
mov
scas
test
fstl
xor
xor
lods
xorb
out
imul
push
add
movsl
ja
dec
adc
push
xchg
fmulp
pop
mov
dec
inc
popa
pop
scas
mov
mov
cmp
and
jnp
les
andl
les
xchg
fdivrl
push
cmpl
test
and
mov
mov
in
xchg
lahf
or
xchg
dec
mov
pop
out
xchg
xchg
into
int
stc
adc
cld
inc
or
and
push
adc
adc
or
cmp
jl
pop
leave
ds
dec
rorl
add
movsb
push
jg
insb
adc
aas
ja
mov
cmpsl
add
pop
mov
inc
xchg
add
lods
ret
xchg
mov
mov
outsb
test
shl
jg
iret
mov
xlat
cmp
nop
scas
cltd
xchg
or
repz
pushf
mov
setne
fistpll
shrb
adc
insb
push
scas
push
pushf
fsubl
rclb
cltd
repz
dec
popl
aam
sbb
xchg
loopne
mov
outsb
or
sub
ret
add
jb
push
fincstp
mov
lret
testl
fld
int3
xchg
dec
sub
fsubrs
aam
nop
mov
lods
dec
xchg
lea
test
adc
lahf
in
push
pop
mov
inc
inc
lea
repz
fs
add
push
js
test
movsl
push
mov
fdivl
pop
cmp
sbb
je
lds
pop
xchg
push
add
out
lds
pop
je
xchg
ljmp
add
push
test
insl
arpl
es
push
leave
mov
fwait
pop
lahf
and
xchg
or
mov
sub
cmpsl
sub
pop
xor
xlat
mov
into
gs
ja
dec
daa
scas
or
mov
rclb
stc
fcmovnb
out
jmp
add
xor
mov
adcb
pop
jle
movl
jo
movsb
mov
rcrl
lret
int
call
cltd
mov
out
mov
xchg
jp
xchg
movsb
aaa
xor
add
lds
pop
enter
and
pop
mov
sub
sbb
rorb
dec
icebp
cwtl
xor
mov
mov
subl
outsb
cmpsl
lcall
sbb
dec
push
jnp
add
cs
lret
mov
iret
test
leave
and
xchg
js
jo
mov
pop
cmp
imul
jo
into
repz
lahf
nop
jmp
in
loopne
and
shr
lock
mov
adc
repnz
jg
pop
mov
push
sar
testl
js
or
xor
lds
xchg
dec
ljmp
sbbb
into
jnp
mov
xchg
mov
add
mov
push
pop
pop
aaa
adc
loop
lret
xchg
ret
mov
cmp
push
jae
repz
adc
out
xchg
shl
inc
popa
fidivrs
sbb
push
imul
notl
jo
xor
pushf
xchg
push
imul
aad
sbb
push
popf
xor
push
hlt
xchg
mov
int
xor
mov
fcomps
sub
mov
sbb
stos
inc
js
aad
adc
mov
int3
cmc
iret
pop
cs
adc
movsb
ss
xor
xchg
mov
lea
mov
rclb
dec
cs
scas
mov
dec
fstpt
mov
fnsave
sub
and
cmpsl
push
push
inc
jne
xor
lods
adc
adc
pop
ss
xor
fldt
mov
pop
add
mov
cmpl
jnp
dec
fs
fwait
ja
lahf
xor
cmpsb
push
loope
xchg
inc
not
xor
adc
sti
fisubs
hlt
and
lods
adc
xor
mov
jg
sbb
jbe
pop
mov
cmp
push
sbb
sbb
int
jne
xchg
pop
orl
cmc
sbb
dec
dec
sub
in
bound
insl
lret
psrlw
insl
leave
push
push
adc
mov
enter
add
push
gs
jge
cmpsl
add
lahf
mov
scas
enter
sbb
movsl
js
adc
xchg
mov
jbe
sub
mov
sti
cmp
mov
adc
mov
movsb
je
js
into
xor
xor
xor
aad
popa
clc
mov
push
sub
jg
mov
loopne
sub
jg
xor
and
fistpl
push
inc
enter
mov
adc
xor
adc
popf
xchg
pop
fisubrl
pop
daa
out
std
push
idivb
push
roll
negb
mov
cld
cmp
aaa
fld
push
outsb
ds
inc
subl
mull
adc
int
sbb
insl
cmp
daa
mov
adc
loope
lods
mov
ljmp
push
enter
mov
jno
pusha
jbe
mov
test
or
pop
aam
sbb
call
push
fidivs
outsl
xor
out
out
nop
mov
mov
mov
scas
xchg
jno
sti
js
sub
sub
repnz
out
ret
test
pushf
pop
cmp
or
aam
ret
inc
ja
lds
jbe
or
adc
insl
mov
sbb
pop
mov
sub
dec
jg
movsl
inc
jmp
cmp
stos
jecxz
insl
and
ljmp
xchg
mov
inc
into
adc
xlat
test
int
clc
mov
adc
cmp
sub
scas
lret
xchg
cmp
mov
inc
cwtl
or
pusha
xchg
mov
inc
ja
jl
inc
out
adc
jmp
xor
and
sahf
rcr
mov
cmpsl
push
sub
stc
ljmp
arpl
pop
mov
repnz
xchg
pop
xor
lods
mov
xlat
mov
in
xchg
dec
repz
dec
xchg
xchg
popf
pushf
aam
fcompl
pop
jg
ds
sub
das
shlb
xchg
push
mov
xor
inc
sub
imul
test
inc
cmp
frstor
into
enter
sub
mov
test
out
fidivrl
rcrl
add
or
repnz
xlat
add
push
pop
aad
iret
cltd
adc
orl
pop
nop
nop
lods
jnp
sbb
scas
int3
cltd
shlb
sti
mov
call
or
cmc
les
dec
adc
mov
lods
inc
mov
sti
js
test
daa
ja
cmp
inc
ljmp
loopne
dec
cmp
sub
ds
test
xchg
movsb
leave
jle
pop
dec
lahf
pop
and
push
stos
ljmp
push
add
xor
andl
lahf
xor
or
cltd
sbb
inc
leave
mov
pop
stc
mov
pop
mov
data16
dec
stc
add
sub
js
mov
cmp
pusha
pop
sub
in
xchg
xchg
sub
jno
lods
aam
lret
test
in
xor
in
inc
adc
hlt
test
mov
movsl
aam
dec
cld
mov
cld
add
or
push
inc
cmpsb
sahf
xchg
mov
push
neg
out
sbb
xchg
push
aas
outsl
hlt
jmp
adc
frstor
ss
es
push
in
nopl
adc
jnp
sarb
shl
cmpsb
xor
mov
sbb
or
iret
cmp
cld
xchg
repz
mov
ret
lcall
ja
aad
mov
repnz
mov
mov
movhps
test
repz
push
sbb
xchg
insb
xchg
xchg
push
scas
ljmp
insb
mov
mov
xchg
jmp
in
cltd
jb
and
rcrl
scas
in
enter
push
jb
sbb
gs
fisubs
xor
or
pusha
xor
sbb
lahf
scas
sbb
cmp
jle
pop
xchg
pop
jge
es
cli
bound
shlb
aas
mov
add
icebp
cmc
and
pop
fwait
es
push
mov
insb
aad
cmp
sub
add
shrb
stos
xlat
and
xchg
inc
jmp
es
incl
adc
mov
inc
in
mov
sub
and
out
cmpsl
and
jb
ret
add
xchg
xor
adc
jb
rcll
popf
es
cs
mov
xchg
mov
mov
push
int
lea
into
int3
outsb
xchg
xor
pusha
jnp
mov
adcl
mov
jns
fbstp
adc
dec
mov
aam
scas
out
fsubs
stos
aas
dec
call
outsl
xchg
call
mov
arpl
or
aad
in
sub
arpl
lods
add
aam
fs
mov
loope
nop
inc
scas
inc
sbb
mov
mov
pop
aaa
jae
mov
inc
dec
mov
cmp
mov
jg
cs
xchg
loopne
aas
cmp
popa
dec
add
loope
dec
sti
or
negb
pop
rcr
jbe
cmp
mov
sbb
push
dec
gs
adc
rol
pop
sahf
lahf
loop
outsb
cmp
pop
subb
out
fwait
xchg
cmp
push
lcall
dec
sub
insl
jno
xchg
mov
rorb
dec
aaa
lock
std
jl
mov
xor
mov
test
adc
call
xchg
ja
in
mov
push
rclb
dec
ret
inc
pop
cmp
jecxz
dec
cmp
xchg
jg
sbb
hlt
add
cli
xor
pop
push
orb
mov
fildl
mov
sub
out
nop
adc
cmp
xchg
bound
mov
cmpsl
pop
data16
addb
pushf
fwait
cmp
sbb
outsl
pusha
mov
add
dec
cld
mov
push
loopne
ljmp
cmc
lock
imul
pop
adc
fdivrl
ret
xchg
mov
jge
ret
pusha
mov
mov
scas
dec
imul
mov
rolb
outsb
roll
mov
sbb
cltd
sbb
iret
call
pushf
andl
xor
sbb
mov
mov
sub
hlt
scas
push
adcb
fidivrl
shrb
push
test
ljmp
push
repz
jnp
in
cmpsl
or
dec
and
in
cld
dec
xchg
sub
stos
cmpl
shl
ja
insb
repz
mov
ficompl
sub
lods
jmp
cmpb
xor
push
inc
jno
jmp
sbb
out
jb
test
sbb
roll
aam
push
mov
fistl
fistpll
shrl
subl
cmp
icebp
push
cmpl
cmp
xchg
out
hlt
lods
push
xorl
mov
add
inc
mov
ja
ficompl
xchg
aaa
roll
inc
lahf
jnp
stc
dec
push
es
stos
ljmp
inc
xor
sbb
fbstp
outsb
mov
mov
sbb
add
sub
popf
pop
inc
pop
mov
fwait
mov
mov
lds
ljmp
inc
inc
movsb
stos
cmp
xor
mov
andl
ljmp
dec
repz
in
cmp
and
xor
mov
sub
mov
jp
push
outsb
jbe
mov
pop
jnp
mov
loop
loopne
cmpsl
mov
pop
mov
or
mov
data16
inc
fidivrs
dec
data16
inc
jo
sbb
aad
push
sti
les
mov
fnstsw
testl
ret
mov
and
sub
mov
pushf
scas
mov
pop
mov
mov
push
add
push
shl
in
cli
movsb
mov
aad
xchg
jp
push
xor
inc
ss
into
xchg
cmp
leave
incb
nop
and
and
ja
push
daa
clc
dec
in
sbb
es
fdivrl
mov
pop
idivl
lret
mov
mov
xchg
or
jl
sub
push
fsubp
mov
je
mov
dec
add
jecxz
dec
jb
imul
mov
pop
xchg
out
sub
add
dec
test
in
loope
or
add
sub
nop
ret
mov
add
inc
repz
pop
pop
pop
loope
in
jg
test
clc
sbb
push
jbe
mov
and
add
les
scas
cmp
movsb
mov
mov
mov
ss
mov
pop
test
rcrl
add
out
cmp
enter
scas
enter
fwait
adc
jecxz
mov
gs
push
aad
jae,pn
pop
push
pop
fisttpl
sbb
push
dec
lret
subl
xchg
cmp
add
mov
xor
daa
mov
jo
jne
ljmp
fildll
cmp
add
or
mov
cmpsb
lods
in
push
ljmp
das
xchg
mov
stos
loop
outsl
pop
sbb
call
stos
scas
iret
sub
es
div
inc
push
mov
rcr
mov
mov
ret
inc
pop
sub
mov
or
inc
mov
xor
dec
xor
xchg
sbb
leave
sarl
popf
hlt
mov
mov
lahf
lcall
gs
inc
push
fwait
xchg
jb
fdivl
mov
fwait
and
sbb
jecxz
mov
rolb
icebp
in
sbb
cmp
movsl
and
push
mov
xchg
mov
cli
out
ljmp
push
arpl
adc
fistl
xchg
clc
out
cmp
jle
xchg
sub
imul
push
pop
in
jo
outsb
cmp
jmp
std
sbb
loop
std
xchg
movsl
push
jb
push
ret
jg
lret
cmp
mov
aas
jecxz
fnstcw
rolb
cmpsl
jb
mov
cmpsb
or
addr16
inc
cmp
or
sbb
fdivs
adc
jbe
sub
mov
ljmp
pop
jo
daa
sub
jb
daa
xchg
inc
mov
sub
mov
inc
and
xor
jl
loop
push
lahf
sbb
lds
adc
call
les
outsl
lods
ss
inc
mov
rorb
cmp
insl
mov
test
sbb
mov
cmp
pop
adc
in
sbb
sub
pop
mov
sbb
mov
cmp
icebp
enter
adc
xor
addl
decb
inc
lcall
cs
mov
movsl
fisubl
mov
jge
les
add
push
jg
loope
cmp
mov
pop
int
cmpsb
sarb
cmp
sti
das
mov
or
adc
cs
scas
or
aad
push
add
insb
je
popa
adc
stos
push
cmc
loop
mov
shll
sahf
ljmp
push
push
adc
outsb
cmp
lret
dec
mov
loope
sbb
mov
mov
pop
je
add
cmpsl
lds
pop
inc
jg
mov
stc
mov
jge
xor
and
sar
add
mov
fwait
pushf
sub
popf
and
aam
inc
dec
adc
arpl
dec
add
mov
xor
fiaddl
std
iret
movsl
inc
inc
dec
jns
pushaw
aas
insb
gs
push
lcall
or
inc
cwtl
pop
jmp
pushl
push
in
ret
popf
jnp
push
out
mov
clc
dec
outsb
or
mov
rcr
leave
mov
sbb
push
shrl
arpl
mov
loopne
adc
mov
inc
popf
popa
mov
mov
lahf
out
push
jb
hlt
mov
stos
std
stos
les
dec
cmpsl
pushf
and
or
adc
movsl
in
pop
int3
pop
push
es
jp
jno
inc
icebp
cmp
cmpsl
lahf
aad
sbb
leave
arpl
sbb
cs
stc
pop
push
pushf
sbb
inc
inc
test
inc
clc
jo
and
xor
gs
cltd
pushf
pusha
push
mov
jbe
fldl
bnd
test
sub
in
das
int
aam
xor
push
shll
lcall
cli
clc
hlt
inc
sbb
mov
imul
mov
outsb
pop
or
das
mov
out
cli
ss
scas
xor
jle
mov
sbb
rcrl
or
lds
je
pop
sahf
lret
sbb
mov
lret
mov
aam
in
mov
push
shll
mov
outsl
aas
adc
sub
cmp
popf
cmp
jno
sahf
clc
scas
xchg
stc
pop
popf
sbb
pop
into
mov
pop
test
xorb
lock
mov
xor
mov
add
ss
aaa
aam
jbe
ss
movsb
jbe
and
push
push
mov
push
iret
imul
fdivrl
mov
xor
jo
orb
or
mov
xchg
jns
xorl
mov
and
movsl
lds
mov
in
outsl
enter
mov
xor
dec
js
sbb
mov
dec
jecxz
mov
mov
loope
les
hlt
cmp
cmpsb
insl
in
jl
mov
popa
inc
dec
leave
scas
test
adc
push
inc
push
xor
ret
pop
cmp
testb
dec
sbb
mov
add
xor
in
inc
mov
cltd
mov
sbb
fisttps
sbb
push
jnp
addb
popf
push
cmp
mov
xchg
or
lret
stos
shll
leave
and
lahf
or
call
push
fwait
in
mov
cs
enter
mov
adc
fnstcw
mov
or
add
mov
loop
sbb
inc
testl
mov
inc
xlat
loopne
jb
sahf
sub
aaa
mov
enter
cwtl
pop
inc
inc
pop
loope
jl
jno
push
or
sub
gs
or
pop
jnp
sub
jo
popf
inc
jb
lock
sub
data16
jl
mov
mov
in
pop
mov
mov
push
pusha
outsb
or
test
jp
out
fistpl
jge
xchg
mov
xchg
push
clc
mov
iret
movsb
or
mov
inc
imul
mov
adc
xor
andb
push
cmc
mulb
add
push
daa
adc
or
dec
jmp
mov
xchg
xchg
stc
cmc
call
push
jo
mov
xor
js
inc
cltd
scas
shr
or
in
gs
mov
int
sbb
pop
test
jge
push
pop
fsubrs
push
inc
push
shlb
add
pusha
sti
scas
dec
sbb
sbb
jecxz
xor
and
shrl
in
das
pop
in
mov
xor
scas
orl
mov
add
inc
popa
push
mov
les
and
jno
sbbb
sbbb
xchg
fstl
mov
mov
aam
lock
dec
sub
je
cmp
mov
jmp
pop
xlat
jne
cmc
lcall
mov
and
xor
inc
inc
mull
pop
dec
jecxz
mov
sbb
sub
jnp
jae
pop
jge
loop
mov
ljmp
std
xchg
call
mov
sub
sub
jnp
jns
mov
sti
sbb
push
sbb
test
mov
addr16
dec
push
push
xor
mov
imul
push
cld
addr16
repz
add
aad
cmp
add
and
push
mov
std
push
mov
jmp
push
sub
cmp
xchg
js
mov
xor
pop
add
mov
xchg
stc
jnp
sbb
push
inc
lret
sar
inc
inc
mov
mov
sarb
jl
inc
add
aaa
sub
movups
jne,pt
std
inc
inc
fwait
rcll
nop
inc
orl
stos
outsb
add
idivl
cmp
addl
test
fptan
pop
push
jle
fbstp
xchg
pop
daa
dec
and
dec
adc
mov
xor
into
mov
sbb
mov
inc
popf
aam
sbb
mov
pop
pop
add
scas
jp
out
mov
push
out
push
mov
shlb
sub
push
inc
test
jl
xor
in
jge
imul
push
loop
sub
iret
addr16
cmp
rorl
mov
stc
sbb
dec
cmp
cmc
fiadds
and
lods
xchg
lahf
xor
add
or
xchg
sub
mov
fbld
cmpsl
and
mov
xchg
cmpsb
add
int
notb
ss
bound
or
add
pop
or
push
jp
and
imul
arpl
inc
push
dec
aad
insl
addl
into
int
sub
fnstsw
les
pop
xchg
adc
push
pop
fistpll
cmpsb
addr16
out
nop
stos
xor
loopne
das
xchg
lret
pop
mov
cs
sti
mov
or
xchg
push
or
sbb
divl
cmp
xlat
adc
pop
fbstp
xor
mov
mov
add
ds
fsubrl
add
xor
push
mov
cmp
call
test
mov
lret
outsb
cwtl
push
fdivrs
mov
loopne
cwtl
xchg
adc
adc
or
mov
in
mov
sub
vmovntps
js
adc
push
mov
cld
and
pop
sahf
mov
cmpl
jbe
sub
lahf
pop
or
ficoml
ret
push
mov
add
into
sub
fcompl
jnp
inc
sarb
dec
imul
jecxz
cmpsb
lret
or
scas
cltd
xchg
adc
pop
pop
dec
rorb
push
call
leave
mov
pop
fisttps
mul
loope
inc
inc
jge
push
jo
orb
and
jl
mov
cmp
pop
and
in
mov
adc
jmp
dec
xchg
sub
idivb
lods
cltd
in
roll
jns
jg
int
hlt
lahf
dec
jmp
jecxz
pop
movsl
add
inc
add
dec
xchg
ss
dec
inc
add
in
cmp
sub
xchg
shrb
add
ss
stc
xchg
adcl
ss
lods
out
lods
loop
sub
jbe
hlt
inc
lcall
dec
into
xor
sbb
sbb
in
ss
or
push
push
sbb
popf
ds
mov
xchg
sub
insb
mov
xor
icebp
call
idivl
xchg
mov
imul
movsl
orb
and
pop
xchg
jge
scas
adc
stc
jg
mov
es
fistl
add
rol
addb
mov
js
leave
inc
push
stos
cmpl
scas
jge
add
dec
imul
or
ror
add
notb
push
or
dec
cmp
adc
adc
dec
scas
int
jp
ficomps
leave
push
fsubrs
movsl
sarl
in
xchg
mov
adc
daa
lock
adc
jl
xor
sbb
leave
inc
add
ret
enter
jge
jecxz
outsb
nop
sbb
pop
dec
dec
mov
leave
stos
mov
jo
mov
sub
push
aam
sarl
call
mov
mov
sub
in
mov
jns
outsl
mov
add
clc
cmpsl
inc
sti
gs
or
ja
cltd
bnd
test
lret
push
push
enter
call
pusha
push
decl
sbb
scas
mov
pop
mov
push
pushf
fisubrs
mov
shlb
idivb
fnstsw
jle
jmp
or
cli
push
adc
out
sbbb
cmp
sti
jl
push
and
les
sub
pop
cld
les
cmp
shl
and
mov
fisttps
pop
repz
cmc
cmc
jo
test
jmp
sbb
movsl
les
out
lods
icebp
pop
fldpi
insb
cltd
sbb
dec
repnz
dec
imul
sti
ficoms
adc
xchg
dec
xchg
cmc
cmc
lret
rcll
xor
or
add
out
pop
sti
insb
outsl
test
cmp
sti
mov
mov
push
inc
lods
mov
lock
ret
mov
xor
mov
mov
mov
gs
shrl
xchg
imull
push
es
repnz
das
mov
dec
movw
jbe
outsl
cmp
insl
mul
push
push
adc
bswap
dec
fsubs
xchg
shll
ds
je
lea
or
inc
add
xchg
mov
cwtl
push
stos
in
fistpl
mov
insl
push
enter
push
rep
xor
mov
lahf
mov
call
lcall
aad
in
movsl
mov
je
cmpl
cwtl
sbb
sub
nop
and
or
lret
jmp
push
orl
out
je
mov
decb
daa
je
or
arpl
cltd
inc
ret
out
and
test
pop
sahf
dec
jle
fwait
dec
pop
adc
xchg
jg
cld
push
sub
xor
dec
lcall
cmc
xchg
imul
add
loope
dec
jbe
test
adc
leave
jne
pop
mov
dec
inc
call
jbe
call
stos
pop
dec
jle
repz
sbb
lock
mov
loop
ljmp
cmp
cmp
mov
pop
orl
mov
vpmulhuw
fidivl
add
aam
pop
sarl
sbb
imul
adc
and
stos
sbb
enter
loopne
and
sbb
xchg
inc
xor
sti
push
sarl
iret
mov
pop
ljmp
dec
rorb
leave
jmp
jp
cmp
jl
ficomps
pause
into
cltd
out
push
test
test
xchg
dec
push
mov
pushf
adc
out
testl
pop
push
inc
dec
iret
pop
jg
inc
sub
push
dec
in
pop
iret
push
or
mov
mov
mov
inc
push
push
push
mov
xchg
repz
in
cmp
jns
repz
mov
shrb
lods
mov
enter
test
or
ret
fimull
jno
and
cld
into
es
insb
jne
and
popl
addb
cmpsb
dec
arpl
adc
setg
into
cmp
repz
lods
xlat
lods
sub
mov
cli
mov
lds
ja
lds
and
sub
jl
pusha
inc
mov
pop
lods
cmp
out
pushf
and
hlt
adc
adc
icebp
pop
inc
je
test
das
in
sbb
mov
leave
lods
push
or
inc
test
cld
xchg
in
fmul
roll
pusha
inc
jnp
inc
call
sub
pushf
movsb
mov
lahf
je
pushl
or
pop
pop
dec
cmc
test
shld
movsb
dec
popf
dec
jo
mov
and
sar
repnz
ss
xor
push
mov
cmp
mov
in
dec
push
std
mov
dec
mov
pop
jb
ficomps
dec
das
into
push
adc
rep
emms
es
adc
xchg
inc
rorb
inc
je
test
fistl
jnp
xchg
sub
dec
jmp
mov
test
mov
sbb
mov
shl
and
mov
hlt
add
lods
clc
sbb
pop
push
mov
jl
push
add
add
jp
mov
pop
sub
cmpsl
sub
std
int3
sbb
inc
icebp
pop
dec
mov
and
movsb
imul
jne
jns
jg
mov
adc
aaa
in
lock
and
adc
lret
dec
mov
xchg
fwait
or
ja
outsb
and
mov
dec
pop
or
mov
cmp
jns
cld
divl
pop
scas
jle
popf
sub
mov
in
dec
cmp
add
pop
mov
in
sar
or
mov
add
or
aad
push
mov
stos
hlt
out
jge
mov
fisubl
mov
push
jo
push
insl
fdivs
nop
outsl
xchg
mov
jp
fwait
lods
out
mov
add
pop
fdivr
jp
fmulp
stc
ja
test
pushf
mov
pop
insl
fcoml
add
call
sbb
cmp
movsb
jo
frstpm(287
out
pop
add
push
cmp
sti
cmp
rcll
mov
add
sbb
or
adc
or
int
mov
jecxz
cli
inc
gs
push
mov
cld
pop
repz
cmp
or
sub
jbe
movsb
imull
rolb
fdivr
push
xchg
enter
mov
stos
push
xor
mov
sub
inc
inc
inc
sub
pop
inc
out
mov
fcmovb
push
mov
dec
ret
fiadds
and
repnz
adc
push
mov
sub
or
test
repnz
ss
xchg
add
inc
push
out
iret
add
shrl
or
cwtl
insb
mov
cmp
lahf
and
and
mov
cmp
ret
jle
pushf
add
fldt
gs
or
mov
push
pop
nop
push
mov
lret
ret
fisubrs
rclb
lods
ret
sahf
add
out
test
sub
jo
adc
add
dec
and
jns
sbb
mov
push
xchg
dec
fidivs
shl
repz
pop
or
popa
mov
ficoms
repz
insb
pop
mov
dec
mov
sbb
jge
das
inc
push
inc
mov
pop
jge
test
inc
fwait
sbb
or
pop
ss
lahf
scas
dec
sub
push
fmulp
sbb
gs
xchg
out
mov
cld
sbb
outsb
xchg
movl
inc
mov
pop
lret
cmp
xor
je
lahf
shll
outsl
inc
in
adc
sbbl
insl
sbb
jp
dec
cltd
ret
inc
dec
pop
incl
push
dec
xor
add
xchg
roll
mov
scas
pop
sub
mov
mov
aam
mov
or
repnz
jmp
test
dec
dec
mov
sub
jae
sahf
mov
pop
dec
inc
jl
cmp
and
gs
hlt
xchg
data16
mov
and
test
imul
mov
cltd
cld
push
xchg
xchg
xchg
add
xlat
push
mov
mov
push
add
or
shll
mov
lahf
push
push
repz
push
loope
popf
xchg
mov
pop
push
nop
outsb
and
lods
js
minps
out
out
fstpl
das
movsl
orb
sbb
jge
mov
aam
adc
mov
mov
aaa
push
push
push
mov
aaa
cmp
cmpb
sub
inc
sub
dec
daa
xchg
pop
rcr
xor
insb
mov
das
arpl
cmpsb
xchg
pop
xchg
jae
push
in
jnp
shrl
pusha
mov
sbb
mov
imul
push
mov
sbb
xor
sbb
dec
gs
xchg
cmpsb
scas
imulb
inc
insl
push
sub
jl
cmp
xchg
inc
dec
mov
push
icebp
je
test
push
or
push
std
mov
sar
cmpsl
adc
jg
in
test
pop
jo
negb
icebp
xor
andb
jl
xchg
mov
rcr
arpl
inc
das
repz
pop
push
sub
push
ja
dec
fiadds
pop
jecxz
lea
in
lahf
mov
fwait
or
mov
mov
icebp
push
rorb
cli
cmp
jbe
out
nop
dec
orb
mov
xlat
mov
loopne
outsb
loop
sbb
xchg
ret
sbb
pop
fistpl
jp
cltd
xor
push
mov
sub
mov
sub
jmp
mov
idivb
and
arpl
imul
mov
sbb
push
mov
fcmovnu
xchg
jo
mov
cmc
divb
out
shrb
popf
test
and
xorb
aaa
and
lret
push
call
mov
mov
inc
hlt
xchg
loopne
out
lahf
mov
mov
add
shll
gs
xchg
testl
push
push
push
jbe
aas
dec
dec
jnp
inc
shll
les
outsb
xor
sbb
sbb
cli
sub
adc
in
mov
add
outsb
cmpsl
jg
and
and
movsw
add
lds
mov
mov
dec
outsb
fwait
aas
lds
ret
out
xor
lret
push
adc
cmp
xchg
cmpsl
insl
xchg
mov
push
les
fimull
push
ror
jae
cmpsl
popa
fstpt
aad
lret
fildll
cs
dec
ss
ja
or
or
push
mov
add
lahf
lea
fs
jae
fldt
ja
lcall
cs
iret
sbb
push
pop
sar
int
call
mov
mov
mov
adc
sahf
call
pushf
cltd
push
jne
lret
stos
fwait
popa
jle
push
pop
pop
sub
ror
pop
mov
jns
mov
rolb
jge
dec
dec
pop
cmpl
inc
sbb
int3
outsb
jecxz
push
mov
cwtl
dec
aad
lock
cmp
adc
mov
dec
loop
mov
ja
cmc
je
int3
add
adc
sbb
push
loop
cmc
sbb
pop
in
mov
mov
imul
jg
inc
gs
jmp
cmp
adc
daa
test
dec
mov
add
sub
pop
sbb
orb
aam
mov
dec
dec
xlat
push
rol
notb
or
sub
inc
testl
xor
xor
div
in
sbb
cmp
inc
int3
jge
or
sub
aad
pop
push
test
in
outsb
jae
sbb
std
sub
sbb
jbe
enter
pop
xor
mov
int
mov
je
jb
add
xor
out
sbb
pop
insb
mov
scas
cwtl
mov
adc
test
mov
sbb
sub
shrb
iret
jmp
js
mov
pop
in
fdivl
or
adc
loop
jl
sbb
add
lahf
xchg
xorb
call
xor
loope
or
outsl
pop
push
les
cld
out
jo
int
jbe
xchg
jnp
jo
imul
xchg
mov
mov
push
pop
xchg
xor
in
ret
repnz
icebp
or
mov
stos
push
inc
or
mov
gs
xor
cmp
rcr
pop
and
mov
mov
adc
adc
popf
adc
leave
cmp
adc
sub
insb
push
adc
xchg
ljmp
mov
dec
inc
cmp
iret
mov
imul
adc
mov
shl
mov
repnz
cmc
leave
and
inc
xor
mov
cmpl
leave
dec
mov
push
xchg
ret
mov
dec
xor
dec
jg
popf
and
push
add
add
aad
popa
inc
or
push
cmp
adc
xchg
mov
mov
push
bound
jno
jmp
movsb
leave
in
mov
aam
lock
das
lahf
lahf
push
stos
in
nop
scas
sub
jmp
push
mov
outsb
lret
int
sbb
cmovne
xor
jmp
jge
and
das
dec
hlt
or
test
mov
pop
mov
push
sub
out
pop
nop
je
pop
jbe
loop
js
sub
lcall
pop
inc
sar
pop
xor
aas
cli
and
mov
sahf
andl
adcb
outsb
leave
jb
int
lea
xchg
jne
and
inc
mov
out
repz
ljmp
push
inc
jns
or
stos
test
inc
test
bound
shll
xor
aas
adc
sbb
jbe
sub
insb
mov
movb
mov
xchg
pop
xlat
adc
fcmovne
popa
fidivrl
push
pusha
or
inc
pop
movsb
imul
cmpsl
fs
lahf
inc
cli
mov
icebp
js
outsb
mov
jl
sbb
mov
in
insl
orb
jno
inc
adc
sbb
mov
in
ret
test
xchg
neg
adc
notl
cmp
push
pop
arpl
icebp
cmp
out
sub
mov
mov
fmul
push
add
cld
ja
and
cmpb
shufps
and
out
dec
fwait
scas
scas
cmp
dec
loop
jne
nop
pop
out
lods
aas
rcll
xchg
fists
loope
cmp
rcrb
fsub
pop
rep
jg
rorb
and
ljmp
dec
fildl
add
cmpsb
pop
int
pop
jge
pop
push
mov
sub
cmp
cmpsb
push
push
ds
test
imul
roll
cmc
sbb
pop
idiv
and
add
neg
rolb
dec
mov
mov
jno
xchg
sub
imul
mov
setns
leave
push
and
lods
inc
stos
push
and
into
mov
icebp
rorb
jmp
movsb
push
inc
mov
mov
adc
jo
imul
xor
sub
cmpsl
push
dec
subb
mov
test
addl
sbb
add
fisttpll
mov
jno
cmp
jno,pt
imul
xor
push
es
xor
negl
cmp
xchg
sbb
nop
or
and
pop
add
xlat
mov
cli
adc
inc
sahf
fmuls
es
loop
pop
inc
mov
xchg
jbe
ljmp
xlat
scas
mov
ffree
insb
xchg
in
mov
cmp
push
xchg
mov
movsl
adc
mov
andb
inc
shl
adc
ss
mov
jg
mov
mov
pop
scas
sub
xchg
sbb
imul
sar
add
movsb
jmp
loop
xor
add
dec
jno
mov
push
pushf
sub
stc
orb
or
jg
les
jecxz
imul
xor
nop
jmp
addr16
mov
int
out
and
mov
ljmp
sbb
add
ffreep
mov
push
mov
popa
dec
lahf
jns
inc
out
mov
fdivl
lds
hlt
lret
scas
jne
gs
or
and
dec
sbbb
add
or
pop
jecxz
fbld
dec
xchg
cwtl
dec
movsl
adc
enter
jne
rorb
pushf
orb
and
idiv
xchg
sbb
xchg
outsb
cmc
cmpsb
clc
xor
les
imul
inc
ljmp
std
pushf
mov
aas
sub
ret
iret
mov
xchg
shll
cltd
fsubrl
data16
out
or
fwait
pop
outsb
mov
sbb
cmp
inc
inc
out
fisubs
mov
lret
or
aaa
pop
mov
daa
dec
lret
gs
or
sti
rcrb
clc
mov
dec
lods
mov
ds
sub
dec
push
mov
mov
lock
or
sub
sti
ja
rolb
cmp
fisttpl
int3
jb
ret
fistl
sbb
lds
mov
mov
and
loop
lock
or
jle
out
push
jl
and
loopne
fstpt
dec
jle
lret
pop
and
xchg
leave
icebp
cmp
xor
xor
dec
adc
mov
mov
pop
fstpt
adc
jg
cld
mov
cmc
push
ljmp
fsubs
loope
ljmp
xchg
mov
leave
xlat
adc
js
adcl
inc
xchg
test
mov
test
stos
stc
sahf
add
sbb
jno
add
stos
out
leave
pushf
sub
adcb
mov
dec
iret
hlt
pop
fdivrl
mov
xor
stos
xchg
sbb
push
int
je
mov
add
mov
fldl
adc
mov
cmp
xchg
nop
stc
pop
test
dec
loope
popa
pop
js
in
fnstenv
jg
jno
jmp
cmpb
adc
jecxz
fs
and
scas
dec
aaa
outsb
repz
push
mov
sub
adc
outsb
dec
cmpsb
test
fcmovbe
rorl
subb
xor
xor
jmp
repnz
push
inc
pop
ja
ljmp
xor
inc
mov
or
insb
and
xorb
scas
jg
out
push
les
mov
jb
pop
xor
push
mov
je
sbb
aaa
inc
mov
or
mov
pushf
xor
push
mov
ss
movsb
and
fnstsw
out
or
imul
sbb
mov
mov
iret
shll
pusha
leave
clc
pop
mov
cmpsb
push
mov
outsl
xchg
push
pop
stos
push
andb
mov
insl
adc
or
addr16
mov
mov
aad
subl
or
insb
add
push
mov
mov
cli
rcr
jnp
cmp
xchg
stc
mov
cli
xor
mov
jbe
mov
jb
lret
hlt
dec
dec
sbb
mov
shll
xchg
xchg
dec
movsb
ljmp
std
push
rclb
dec
movsb
in
in
xchg
or
inc
cmp
ljmp
push
outsb
shll
jmp
loop
fldt
decb
lock
and
int3
and
jmp
jg
xor
pop
stc
mov
add
lds
loopne
fisubl
mov
push
test
and
cmp
out
cwtl
jb
outsl
insl
in
pop
add
inc
adc
pop
and
outsl
sbb
mov
lahf
xchg
dec
jo
ljmp
pop
cld
loopne
push
aad
mov
pop
repz
dec
lret
insl
sti
test
mov
add
leave
aad
or
ss
pop
dec
jo
jnp
adc
iret
xchg
dec
lret
pop
mov
sbb
mov
ss
repnz
cmp
or
ljmp
sahf
lahf
dec
loopne
adc
sub
inc
sub
jnp
fldt
hlt
mov
test
shll
and
mov
xchg
fucompp
loopne
push
pop
mov
and
bnd
sbb
rolb
mov
xlat
imul
add
dec
pop
clc
xor
and
pop
rep
das
movsl
cmpsb
sub
push
adc
popf
inc
jae
subl
inc
and
push
inc
adc
gs
add
dec
fmuls
outsl
lods
push
sub
adc
lea
sahf
mov
xchg
mov
insb
xor
mov
jne
add
popa
pop
adc
inc
mov
push
mov
fistl
push
add
dec
push
push
fs
mov
ret
shll
mov
mov
mov
in
test
and
mov
mov
ljmp
arpl
test
mov
add
mov
es
and
sub
mov
pop
nop
push
or
les
stos
xorl
sub
dec
icebp
je
sahf
jg
add
xor
test
xchg
insb
adc
xor
adc
inc
push
xor
icebp
stos
mov
jno
pop
repnz
inc
enter
sahf
cld
sub
xchg
mov
out
dec
fimull
shll
mov
add
cmp
xchg
xchg
jae
pop
rorb
add
and
pop
xchg
mov
out
leave
out
hlt
ds
xchg
and
xor
push
and
test
push
orb
cmpl
jecxz
sub
mov
sbb
add
adc
decl
mov
xor
inc
mov
shrl
cmp
ficoml
das
insl
mov
mov
sbb
filds
dec
dec
insb
or
add
std
adc
and
popf
iret
cwtl
pop
inc
jmp
mov
jmp
out
cs
lea
mov
jns
and
enter
popa
in
push
push
lods
je
movsl
nop
xchg
push
mov
pop
stos
in
lods
stos
sub
push
dec
fwait
insb
in
js
dec
popf
sbb
repnz
adc
push
mov
sbb
and
fs
fdivl
sbb
adc
bound
inc
push
sbb
outsb
jmp
sahf
fsubrl
das
cltd
cmp
sub
gs
mov
jnp
inc
insl
pop
in
xchg
inc
cmpsl
cmp
ret
xorl
out
lahf
push
sub
and
movsl
in
pop
icebp
aas
sbb
mov
lcall
cmp
jnp
mov
inc
lds
ljmp
adc
negl
and
orl
jge
ljmp
pop
cmpsb
mov
inc
or
leave
fs
out
xor
sub
pop
test
mov
pop
dec
cwtl
or
test
mov
cmc
jno
lea
fbstp
out
frstor
cmp
pop
pop
inc
xchg
xlat
jl
cmpsl
outsl
cmp
sarl
leave
inc
popa
movsb
adc
mov
in
gs
sub
and
mov
dec
lods
lods
ljmp
sub
mov
push
xor
dec
add
xlat
js
cmp
es
xor
incl
hlt
sbb
fstpl
mov
or
cli
sbbl
mov
decl
jmp
push
fwait
mov
rcrb
fisubl
jecxz
fcmovb
lods
and
ror
dec
sahf
jns
jge
jle
inc
and
inc
adc
push
scas
call
vorps
mov
jo
popl
out
mov
sub
cld
movsb
xor
jl
push
aaa
cmp
cmp
cmpsb
mov
addr16
push
lds
xchg
mov
mov
movsl
cmpsl
mov
inc
popf
fsubrl
xor
fdiv
ret
cmp
and
jnp
jle
mov
icebp
imul
pop
fldcw
in
mov
pop
dec
cmpsl
mov
sbb
pop
mov
push
call
leave
lods
loope
rcl
xor
add
arpl
int
mov
lcall
or
aam
jp
mov
jmp
sub
and
out
pop
out
push
jle
fdivrs
push
jae
cmp
pop
sarl
and
in
pushf
sbb
in
pop
stos
add
gs
pushf
rcrb
mov
cmp
sub
add
test
or
sub
jb
mov
jns
add
das
mov
in
stc
scas
jecxz
xchg
hlt
insl
ja
aas
neg
pop
jbe
mov
mov
std
push
ret
push
mov
cld
testl
mov
xchg
out
jae
out
cmpsl
insl
je
xor
stos
lret
in
inc
fwait
mov
pusha
in
aam
add
pop
mov
cmp
bound
sub
mov
les
rcrl
xchg
cmp
jnp
and
cmp
jae
cltd
mov
sbb
and
xor
cld
or
jne
xchg
or
stc
scas
push
sub
idivb
cmpsb
icebp
xchg
inc
insb
mov
mov
pop
pop
ret
adc
mov
ret
inc
iret
cmp
push
and
push
mov
mov
jmp
xor
sti
or
xor
and
cmp
fdivrp
lods
jecxz
shlb
add
movsb
cmp
cmp
aas
daa
imul
push
cmp
imul
cmp
mov
test
ret
mov
sar
add
and
out
xorb
orb
mov
ja
or
push
xor
mov
cltd
jmp
push
pop
push
outsl
xlat
adc
dec
lret
dec
icebp
lods
movsl
fdivl
pop
ljmp
jb
in
mov
ret
imul
jl
pop
push
adc
inc
fstpl
call
jge
mov
jp
cltd
jne
hlt
mov
shlb
gs
or
repnz
add
out
cmp
dec
mov
cmpsb
aaa
jmp
sbb
int3
mov
aaa
jmp
aam
jl
sub
push
icebp
mov
adc
out
add
and
pop
enter
pop
dec
arpl
add
loopne
pusha
mov
bound
or
mov
add
je
add
add
cmpsb
cmp
inc
in
fldcw
sub
lahf
fst
mov
mov
xor
push
mov
ljmp
in
xor
sti
cmp
xchg
lock
fdivrl
fistl
push
dec
adc
decb
and
scas
imul
faddl
jle
jns
xor
sahf
inc
movsl
bound
pop
mov
mov
add
dec
inc
jnp
ljmp
mov
and
jmp
cmp
and
mov
jle
icebp
int3
pusha
stc
cli
stos
jno
jb
orl
out
sbb
andb
xor
std
andb
les
mov
inc
popf
popf
cmp
mov
iret
addr16
aaa
dec
aaa
popa
jge
inc
lea
daa
push
mov
les
pop
popa
into
loopne
sbb
mov
cmpsb
dec
sub
adc
or
ror
mov
xor
mov
mov
int
daa
lods
inc
dec
aad
sub
fisubrs
dec
shrb
xlat
bound
and
pop
jecxz
sahf
sbb
loope
xchg
push
scas
iret
shrl
jno
fisttps
xchg
pop
push
cmp
pop
iret
movups
test
adc
push
xchg
push
pop
pop
xor
adc
xor
out
mov
dec
imul
nop
and
sbb
loop
shrb
sar
cmpsl
adc
add
repz
rorb
ret
insl
mov
cmp
stos
jbe
pop
je
lods
outsb
pop
jnp
outsb
inc
xor
daa
int3
sub
enter
adc
mov
xlat
or
mov
and
adcl
mulb
add
fptan
and
lahf
nop
int
add
ds
push
movsb
les
in
fnstcw
lret
jl
cs
jl
xor
fwait
dec
pop
cs
pop
lods
notl
inc
sbb
push
or
cmp
call
sbb
mov
mov
fsts
sub
jbe
inc
test
or
or
pop
aam
mov
pop
shll
imul
mov
xor
fistpl
cmp
xchg
push
fsubs
adc
push
inc
int3
or
loopne
jo
jle
and
lahf
dec
mov
pop
xchg
daa
jbe
mov
std
vrsqrtps
xor
cmp
pop
inc
mov
mov
out
mov
clc
stos
add
and
mov
jbe
scas
jl
negb
out
mov
push
lcall
dec
xchg
movsb
add
fcoms
add
cld
cmpb
testl
and
or
jnp
add
out
fsubrl
inc
scas
jmp
gs
xor
lret
sub
add
push
sbb
fwait
ss
imul
jno
xchg
add
or
xchg
mov
jo
lock
outsl
imul
mov
sbb
inc
hlt
adc
in
jmp
out
xor
stos
pop
or
push
and
add
push
dec
jno
or
sbb
lods
andnps
les
xchg
push
cmp
cld
xor
adc
inc
insl
pop
mov
inc
inc
lds
cmp
pop
pop
das
jns
jo
cmc
push
adc
push
in
shl
xchg
fbstp
dec
inc
push
pop
push
aad
jg
push
mov
mov
xor
inc
test
call
xchg
mov
xlat
sbb
lock
idivb
ror
xor
subl
in
inc
adc
mov
sbb
movsb
push
std
inc
aaa
test
dec
dec
inc
popa
lret
xchg
and
jmp
aas
and
xchg
cli
pop
inc
enter
lcall
sti
inc
jno
iret
dec
xchg
sbb
pop
sub
mov
xor
xchg
mov
mov
xchg
mov
xchg
addr16
or
or
and
scas
ficoms
xlat
pop
adc
and
repnz
push
fsubrs
js
ficompl
outsl
jg
nop
xchg
hlt
mov
rcl
das
adc
test
jge
lahf
adc
ja
les
xor
mov
push
and
pop
ljmp
adc
js
jne
xchg
inc
sub
mov
test
dec
iret
and
cli
sub
and
ror
cmpsb
aas
call
fcmovbe
stc
movsb
in
mov
add
xchg
repz
sbb
and
fsubrs
insl
sub
pop
addb
pop
mov
out
xlat
in
or
arpl
cmp
stc
outsb
dec
sub
aas
push
fists
shl
sar
pop
xchg
jmp
cmp
push
scas
pop
out
daa
je
repz
mov
testl
cmpsb
xchg
cmpsb
pop
xchg
mov
cmp
pop
cmc
push
dec
inc
push
clc
in
mov
sbb
insb
inc
or
loope,pn
lds
movsl
fstl
cmp
decb
push
out
pushf
mov
hlt
es
divl
fisubl
xchg
xor
das
xchg
cmp
add
sub
sarl
call
popf
push
ret
mov
xor
rorb
lods
enter
mov
push
jge
sbb
sub
call
out
or
add
lret
dec
lods
pop
mov
jmp
sbb
in
aad
xchg
stc
add
imul
dec
sahf
dec
mov
lea
jecxz
out
push
mov
addb
pop
mov
lods
movsl
shrl
xchg
mov
shrb
fsts
dec
push
adc
and
pusha
add
adc
xchg
sbb
or
mov
mov
movsl
insl
shl
cmp
hlt
rorl
loope
mov
lret
or
adc
mov
jnp
push
xlat
pop
mov
jns
push
test
cltd
push
test
in
fwait
sub
mov
adc
mov
pop
mov
or
adc
mov
sarl
lgs
and
pop
outsl
cltd
fdivrl
jae
in
out
lcall
cmpsb
jge
out
inc
lret
les
mov
inc
lahf
shll
into
or
pop
jge
pop
addb
sbb
add
mov
ja
lret
repnz
test
mov
xchg
fcmovb
lret
or
mov
rorl
push
cli
mov
pop
add
cmc
cmp
rorl
mov
movntps
loop
cld
cmpsb
sti
sbb
pop
jns
mov
push
mov
ljmp
fwait
sarl
scas
lret
loop
jecxz
fwait
or
jl
loope
popa
lods
rol
jno
mov
lret
push
ror
lcall
jmp
lds
add
mov
ja
xlat
mov
scas
cmp
jnp
mov
mov
call
pop
scas
outsb
iret
sbb
xor
xor
cmp
add
xor
or
or
dec
cmpsl
clc
sti
aas
fwait
pop
inc
cmp
lock
cmp
pop
jo
mov
icebp
xor
mov
or
xchg
dec
shrb
aam
push
xchg
add
out
xchg
inc
jl
inc
insb
aas
fyl2xp1
rcll
pop
lcall
test
or
sti
outsb
push
sbb
xor
mov
cmp
mov
cwtl
add
inc
or
mov
jb
call
xor
stc
mov
xchg
push
mov
pop
leave
mov
xchg
mov
in
mov
ja
or
sbb
jne
sbb
jmp
pop
jle
cmpsl
jae
pop
fimull
out
inc
scas
xor
jno
push
lds
aam
mov
icebp
lret
xchg
gs
rclb
sahf
in
cmp
lahf
pushf
mov
insb
call
sbb
or
pop
fs
adc
cmp
add
mov
add
shlb
xor
dec
inc
mov
xchg
out
fiaddl
mov
inc
ljmp
or
push
iret
push
je
push
jge
rcrl
and
fstps
stos
addr16
sbb
dec
fldz
cmp
jns
lahf
mov
push
sub
movsb
adc
sub
xchg
inc
xor
int
cmp
int
aas
push
jo
outsl
les
pop
fbld
dec
out
pop
jno
scas
jnp
or
and
imul
test
lds
sbb
ret
shlb
xchg
jp
mov
add
xchg
push
dec
xchg
neg
jecxz
cmp
sub
cwtl
mov
clc
or
scas
xor
mov
push
mov
dec
pop
addb
xor
jp
and
sub
push
xor
push
xchg
loop
jbe
popf
dec
mov
mov
pop
xchg
fimuls
cmp
inc
movsl
hlt
daa
and
xchg
or
sahf
add
adc
xchg
push
sub
pop
in
add
mov
pop
pop
lock
fimull
lock
xchg
lods
idivb
fwait
xchg
cli
xchg
jnp
data16
jp
aam
ljmp
xchg
inc
daa
aam
ja
and
mov
rolb
mov
ss
sbb
mov
pushf
lret
mov
std
push
out
test
sbb
iret
push
dec
ficompl
ret
sbb
xchg
outsl
push
sub
xor
dec
dec
or
fstps
sub
cmp
insl
cwtl
push
out
or
pop
push
fidivrl
adc
mov
pop
jg
icebp
fmuls
or
jae
jns
cld
pop
jp
nop
shlb
sub
out
and
and
jnp
negb
jmp
mov
insl
pop
repnz
call
dec
fsubrs
dec
loop
inc
pop
lcall
push
add
push
pop
push
int3
test
xor
pop
das
inc
add
jb
daa
push
lidtl
enter
jge
stos
xor
dec
pop
xor
or
sub
jns
movsl
popf
pop
divl
xlat
pusha
xlat
aaa
repz
mov
mov
inc
movsl
dec
xchg
fst
shll
cmp
dec
cs
sarb
push
fisttpl
jle
sahf
or
push
jno
inc
adc
inc
push
dec
and
mov
mov
mov
addr16
inc
pop
lods
ret
sub
or
mov
push
mov
and
or
sti
xlat
mov
fmuls
mov
rorl
out
daa
sti
xor
cmp
in
jno
movsb
in
ret
clc
aas
mov
jb
jmp
push
dec
sti
jns
mov
insb
lea
rcrb
fsubrp
repnz
clc
push
dec
dec
in
sub
sub
add
in
cmpsb
cmc
pusha
dec
jmp
sbb
mov
test
mov
xchg
ljmp
adc
aad
fwait
test
adc
cmp
int3
mov
dec
jae
dec
sub
mov
int3
inc
push
ret
sbb
mov
xchg
pop
repz
cmp
scas
dec
filds
jmp
mov
aas
std
outsl
adc
stc
mov
jl
xor
psubq
adc
loop
push
rcrb
test
fwait
mov
fisttps
cltd
gs
sbb
add
pusha
mov
dec
cwtl
mov
in
gs
nop
mov
xchg
es
cmpsb
add
xchg
mov
xor
bound
cld
sub
mov
and
dec
cmpsb
stos
data16
push
cmc
pop
dec
inc
add
xor
sbb
mov
aas
cwtl
cmp
lods
subb
fs
inc
stos
cmc
data16
aam
cmpsb
mov
stos
in
dec
call
lahf
inc
adc
push
insl
scas
popf
xor
daa
and
sbb
test
mov
in
ss
mov
scas
xchg
nop
cli
mulb
mov
mov
dec
movsb
xchg
lea
cmp
int
dec
fbld
mov
jp
stos
vaddsubps
or
or
or
popf
mov
push
dec
shll
add
in
sahf
sbb
and
xchg
enter
insb
roll
jecxz
shl
dec
call
sub
cmp
jae
inc
adcb
dec
aaa
add
sbb
sbb
cmpsb
push
in
inc
sbb
cmp
and
and
jo
decb
mov
or
movsb
lock
bound
ficompl
mov
lahf
xlat
scas
inc
jmp
mov
data16
iret
test
push
inc
sub
je
lcall
aad
sbb
push
jnp
cmp
cmp
cmpsl
cltd
cmp
rol
adc
inc
out
aam
xchg
rorl
fildl
inc
dec
fldt
sbb
loopne
mov
int
pusha
inc
arpl
add
mov
or
sub
jo
sub
outsb
bnd
sub
daa
pop
test
mov
or
cmpsl
push
xchg
ljmp
mov
ret
mov
push
dec
xchg
leave
imulb
in
mov
pop
fiadds
mov
mov
es
pushf
jmp
mov
sbb
in
sti
punpckldq
loop
sbb
test
push
inc
addr16
xchg
inc
insb
sub
fwait
mul
add
cmp
mov
adc
in
pop
adc
inc
sub
sbb
mov
clc
push
pop
mov
or
in
lods
cmpsb
sbb
push
and
dec
lods
mov
jle
pop
fidivrl
mov
es
sub
mov
xor
add
mov
push
xchg
and
movsb
push
or
addr16
cmpsb
cmp
push
mov
and
cmpsl
jbe
cltd
sub
cli
lea
dec
pop
jecxz
and
cltd
negl
xchg
or
cwtl
jle
adc
out
xor
loop
insb
sub
inc
cmp
fisttps
push
mov
jl
out
push
sarl
adc
mov
sbb
cltd
cmp
push
xchg
add
jns
adc
repz
arpl
shlb
jnp,pt
xchg
pop
aam
enter
cmp
adc
lock
lock
xchg
bound
scas
jae
ja
sbb
xchg
daa
popa
sbb
inc
push
adc
aad
sbb
mov
fists
push
jns
in
lahf
xchg
mov
test
adc
pop
roll
mov
out
loopne
popl
cmp
mov
in
sbb
cli
sub
scas
rorb
fld
mov
cwtl
xlat
mov
cltd
mov
sarb
das
mov
xor
or
aam
arpl
addb
aad
and
das
pushf
in
or
loope
ja
adc
dec
xchg
repnz
aaa
lea
je
push
inc
lds
pop
ljmp
add
dec
mov
loop
ret
fnsave
les
mov
lret
xchg
pop
ret
inc
adc
jle
xchg
jo
adc
arpl
pop
popf
stos
cwtl
dec
adc
sub
mov
gs
shlb
cmpsl
pop
cmpb
mov
loopne
xor
mov
in
fsubs
cmp
sub
subl
sarl
jp
sub
jg
ljmp
push
mov
sub
js
fcmovnu
fimull
push
lods
mov
xor
or
test
pop
mov
fcoms
dec
jle
lea
shlb
xchg
push
nop
daa
jecxz
sub
dec
sahf
lea
adc
mulb
sub
fildll
adc
pop
fistpll
fnsetpm(287
leave
push
lds
sbb
insb
stos
xchg
jbe
add
fcoml
scas
inc
fisttps
mov
mov
leave
jg
int
out
adc
outsl
ljmp
lods
mov
daa
mov
push
mov
xchg
mov
pop
pop
mov
dec
add
popf
lret
add
push
aam
or
testb
jl
lcall
loop
push
xor
jge
mulb
pusha
fwait
pop
in
mov
daa
mov
out
jge
arpl
mov
mov
int3
cmp
sub
mov
nop
xor
add
xor
les
stc
mov
inc
decb
leave
pop
cmp
xor
add
hlt
aad
mov
inc
or
pop
add
clc
xlat
cmp
add
mov
push
mov
test
sbb
stos
jno
mov
xchg
dec
mov
push
mov
mov
inc
mov
mov
daa
leave
sub
lds
dec
xchg
dec
add
test
fidivs
cld
push
outsb
dec
imul
shl
shlb
dec
xchg
sub
repnz
adc
pushf
mov
shlb
mov
cmp
shr
or
pop
fwait
dec
or
popf
xchg
mov
fwait
xchg
xlat
aas
inc
lock
pop
xchg
mov
mov
cmp
mov
inc
push
sbb
hlt
add
lcall
mov
push
enter
cmp
jbe
and
adc
int3
leave
pop
mov
fldt
enter
in
mov
xlat
insl
out
sbb
out
inc
adc
popa
scas
mov
daa
xchg
js
repz
aaa
ret
or
push
leave
mov
xchg
dec
add
mov
add
mov
jnp
lret
fildll
movsl
idivb
cld
push
fidivl
add
push
xor
add
jo
mov
iret
int3
or
add
ljmp
adc
pop
inc
sub
jle
mov
pop
fisubl
pop
jg
aad
imul
sbb
and
mov
lcall
inc
std
pop
sar
in
xor
stos
or
fwait
xchg
clc
in
mulb
push
or
push
into
mov
mov
sti
out
lret
cmp
mov
inc
lds
fwait
insl
push
xchg
jmp
data16
add
cmp
add
int3
loope
sub
or
movsl
cltd
add
add
call
fisubrl
push
bound
mov
xlat
fmulp
add
push
imul
leave
xlat
shll
cmp
test
xor
add
xchg
in
test
aas
ret
cmp
in
in
jo
jecxz
sbb
sub
mov
out
insb
les
jb
jns
or
adc
jo
jge
push
and
mov
std
cmpb
fsubrl
sub
jo
xor
xchg
loope
mov
gs
out
jnp
fmull
xor
orl
inc
shl
cwtl
mov
arpl
dec
xor
xor
imul
pop
dec
lahf
ljmp
loope
push
es
sar
out
clc
je
das
imul
inc
out
mov
ret
es
mov
rorl
lahf
jo
cmp
inc
pusha
xchg
xor
das
test
sbb
xchg
cltd
lds
orl
outsl
test
lea
js
clc
testl
push
xchg
nop
mov
pop
out
jle
xchg
sbb
add
inc
sub
jns
dec
jb
inc
mov
jbe
scas
sbb
cmp
or
rcrb
mov
fbstp
test
stos
cmp
and
push
push
xchg
cld
cmp
clc
jae
pop
adc
xor
jecxz
inc
mov
shrl
inc
in
mov
testb
adc
in
dec
loope
stos
icebp
pop
dec
scas
sbb
in
out
adc
pop
push
push
push
add
test
loope
mov
cmp
jo
iret
push
sahf
dec
jns
mov
aaa
jg
inc
mov
das
cwtl
inc
pusha
fwait
gs
out
mov
xor
fidivrl
ret
inc
nop
jno
or
int
insl
jns
pusha
xorb
call
cmp
push
cmp
xor
ljmp
sarb
roll
stos
xchg
rcl
cmp
ss
shlb
jecxz
pop
pop
loopne
scas
mov
imul
and
jg
xchg
sbb
push
jns
jae
inc
out
add
test
sub
mov
xor
mov
arpl
mov
cmp
push
dec
dec
add
pop
dec
hlt
subl
imul
jb
fiadds
test
mov
inc
ret
rorb
ficomps
stc
rclb
in
orl
jp
jle
lret
call
adc
sahf
iret
ret
lcall
stc
inc
aaa
mov
movsl
lret
je
bound
scas
jge
daa
fimull
push
mov
push
inc
shrb
jle
or
in
inc
cmp
cwtl
xor
push
inc
aam
dec
std
or
pop
xchg
push
fs
mov
mov
and
in
sub
dec
lock
int3
xchg
inc
xchg
stc
mov
je
push
mov
xchg
sbb
push
cmp
loop
mov
push
fldcw
rcrb
dec
sbb
sbb
sub
lods
in
xchg
addr16
out
mov
push
aas
inc
inc
cmc
fisttpll
lret
mov
mov
js
inc
int3
lahf
fnstenv
dec
pop
nop
js
pusha
xor
pusha
pop
push
call
xchg
add
fistl
mov
popf
push
icebp
fwait
dec
sub
jge
and
jno
mov
gs
pop
and
loopne
adc
jecxz
or
and
cmp
push
jae
mov
loop
int3
mov
xor
adc
inc
shll
clc
push
xchg
lods
or
pop
cli
scas
sbb
outsl
call
repz
bound
mov
ret
jno
inc
cmpb
hlt
cmpsl
add
inc
in
ljmp
mov
cmp
push
lds
movsb
inc
int3
pop
and
jecxz
fucom
xor
dec
mov
xor
jbe
imul
mov
in
inc
negl
xchg
pop
incl
inc
fistps
aaa
int
jno
jg
or
xchg
jbe
inc
inc
cmp
push
inc
je
adc
fistl
sub
mov
and
sbbl
adc
arpl
movsl
dec
outsl
daa
xlat
lahf
cmpb
mov
inc
adcl
pop
daa
xchg
push
inc
xor
jb
dec
xor
movsb
mov
popf
jge
adc
das
movsb
bsf
mov
mov
idivb
dec
daa
mov
jl
and
fs
dec
mov
push
clc
mov
push
int
gs
jp
adc
decl
fbld
jno
lahf
orl
movsl
pop
fistps
or
or
rcr
int
pop
cs
negb
hlt
movsl
test
cmc
negb
jbe
lret
xchg
jno
xchg
inc
scas
xor
cmpsb
and
mov
mov
sub
xchg
pop
inc
and
jle
mov
sbb
xchg
lock
hlt
jbe
aaa
fsubl
icebp
lods
mov
or
xchg
pop
mov
int3
pop
xor
mov
lret
jg
clc
mov
dec
cmpb
lods
aas
adc
pusha
add
sbb
and
call
addl
arpl
push
dec
hlt
lcall
sub
in
lds
cmp
ret
popf
ja
pop
out
xchg
addr16
push
pop
pop
dec
mov
mov
int
stos
add
adc
sbb
xchg
bound
sti
adc
stos
inc
stos
popa
xchg
sbb
test
dec
xchg
and
mov
out
roll
inc
xchg
sub
out
loope
dec
fdiv
jmp
je
mov
fs
sbb
loop
scas
jbe
pop
data16
test
ds
loope
jle
cli
mov
jmp
mov
imul
push
es
ljmp
fisttpll
cmpsl
xchg
popa
es
inc
sub
xchg
mov
pushf
cmp
jnp
add
cmp
and
adcb
mov
lods
jecxz
push
mov
cmp
xorb
ds
cltd
mov
add
pop
ss
stc
pop
test
dec
test
cld
push
jae
fstl
add
xchg
or
aas
jg
popf
lret
arpl
pop
decb
clc
imul
cld
andl
ror
popa
es
popf
addb
sub
dec
imul
in
daa
jo
and
fyl2x
jge
dec
mov
mov
cld
inc
lahf
pop
adc
xorl
jmp
and
sahf
add
dec
adc
out
or
rorb
jge
popf
pushf
cmp
mov
mov
in
cmp
xchg
popf
and
leave
xorb
add
adc
or
in
stos
cltd
jo
or
lcall
cmp
lock
dec
pop
push
xlat
jmp
dec
cmp
fimull
mov
outsl
pop
xchg
loop
shl
xchg
ret
addr16
jo
enter
cmpb
popf
adc
sbb
test
jb
sar
push
add
pop
sub
pop
xchg
testb
mov
xchg
xchg
jmp
stos
sub
push
inc
decl
push
xor
int
ja
test
or
sub
repnz
mov
push
cmp
mov
or
push
add
add
xor
push
cmp
or
xor
pop
gs
int
adc
lahf
es
mov
pop
pop
dec
jg
mov
jecxz
adc
jae
test
int3
push
and
and
dec
mov
cmp
xor
mov
inc
dec
jl
ret
fidivl
mov
mov
sbb
addr16
sub
loop
sbb
xchg
cmp
cmp
sbb
push
in
sub
add
dec
pop
ret
je
cmpsl
xchg
popf
mov
popa
pop
jo
mov
inc
lods
out
mov
popa
ss
mov
jb
lret
cmp
cmp
push
dec
push
mov
jp
sub
and
xchg
mov
xlat
enter
inc
ja
lret
sbb
adc
mov
popf
popf
imul
sub
pop
mov
mov
xor
xchg
int
xchg
inc
mov
fiaddl
add
popa
push
jle
inc
leave
sub
hlt
add
in
xorb
loop
int
mov
ja
pop
icebp
push
jmp
and
cmp
mov
cmp
lds
ja
pop
call
dec
or
int3
adc
mov
repz
adc
mov
xchg
xchg
ret
pop
aam
in
xchg
decb
rolb
std
and
cmp
mov
loopne
leave
aas
or
arpl
add
cmc
mov
fistps
mov
add
fsubrl
xchg
inc
iret
or
pop
xlat
push
sub
dec
inc
addl
mov
push
mov
mov
dec
push
add
xor
mov
mov
int
xchg
mov
sbb
subl
push
pop
xlat
fcmovnb
pop
inc
stc
std
lcall
icebp
push
adc
adc
push
mul
adc
test
push
xchg
out
cltd
jns
cmpl
inc
loop
fcmovnbe
adc
push
rclb
xlat
sub
jae
mov
push
mov
dec
adc
or
and
push
jnp
stos
inc
sti
ljmp
mov
mov
nop
stc
jns
push
aad
mov
push
fldenv
mov
pusha
adc
psrld
rolb
mov
mov
adc
mov
or
ret
sub
jno
out
enter
add
adc
cli
movsl
lds
push
outsb
xchg
ja
adc
scas
push
mov
mov
loopne
sbb
imulb
hlt
sbb
xchg
push
or
pop
fwait
jne
mov
cli
or
lods
push
dec
divl
adc
mov
out
std
xchg
faddl
fdivs
add
mov
mov
mov
push
in
cwtl
pop
add
test
adc
loope
dec
out
movsl
xchg
mov
xor
or
je
popa
rorb
and
sbb
sbbb
into
adc
push
lock
sub
in
push
inc
adc
daa
mov
pop
add
push
xor
dec
sub
or
xchg
sbb
test
jo
sarl
repz
adc
jb
pop
mov
testb
lea
jg
out
add
lods
jo
xchg
mov
cmpsl
mov
ljmp
push
cld
les
std
iret
or
stos
jo
adc
repz
cmp
movsb
les
and
mov
out
jns
add
rolb
mov
nop
je
cmc
jp
xlat
enter
cltd
pop
mov
mov
inc
or
and
mov
mulb
mov
popa
mov
enter
add
mov
cmp
test
cld
sub
jo
and
xor
sti
loop
aam
xchg
dec
test
jns
push
shlb
jg
pop
mov
test
fdivr
cld
mov
mov
arpl
dec
cmp
xor
and
or
ja
or
outsl
push
fcoml
sub
push
daa
push
outsl
mov
cmp
ljmp
rol
adc
dec
mov
lahf
dec
out
mov
gs
ss
inc
sub
mov
jecxz
and
iret
jno
ljmp
ss
shr
sub
fists
lret
in
shr
adc
cmp
outsl
and
aam
jmp
sbb
xchg
sbb
movsl
push
mov
or
push
jnp
cli
or
fs
jbe
mov
imul
pop
loopne
and
xor
cmp
pop
adc
insb
inc
jp
addl
push
dec
roll
insb
mov
int3
jns
push
cmp
daa
lock
jbe
xor
mov
je
add
mov
pop
dec
notl
mov
push
jl
inc
xchg
cltd
mov
dec
push
inc
add
test
dec
mov
xchg
mov
inc
ljmp
loope
pop
xor
inc
sti
push
lea
enter
movsl
shll
jne
mov
cmp
mov
daa
push
test
jno
mov
pusha
cwtl
fstps
sbb
cmp
leave
adc
sar
pusha
sub
xor
jne
imul
aas
add
loope
cmp
and
add
lods
inc
into
fbstp
jb
cwtl
sbbl
ret
mov
xlat
push
mov
adc
gs
je
xchg
mov
xchg
fisubrs
jg
loopne
outsl
lahf
fs
push
ficoms
xchg
inc
sbb
inc
mov
ja
pusha
lods
movsb
jno
pop
xchg
cmp
sub
int
cmp
cmp
push
int
lock
jne
sbb
cmp
add
scas
movsl
mov
push
dec
decl
subl
adc
stos
mov
into
imul
test
add
add
enter
jle
rcl
jne
out
rcr
adc
push
rol
inc
mov
dec
cltd
fstpl
inc
jl
out
jle
cmp
loope
dec
call
xchg
andb
adc
js
loopne
and
push
pop
rolb
ficoms
repz
andb
xor
aam
inc
shrl
sbb
movsb
clc
int3
fcmovne
jns
mov
cmpsb
ret
hlt
in
xor
test
call
and
out
cld
inc
loopne
pop
addr16
jp
add
es
jno
repz
testl
push
mov
pushw
mov
outsl
mov
shl
pop
xchg
pusha
add
movsl
cmp
outsb
cmp
gs
add
cmc
dec
popf
call
add
mov
sbb
xchg
mov
adc
xchg
test
mov
or
adc
xchg
movb
ja
out
orl
pop
aas
mov
call
cld
or
jge
adc
xor
imul
xor
stos
mov
leave
or
sbb
les
pop
cmp
adc
push
test
adc
cmpsl
test
ds
cltd
je
aam
mul
pushf
leave
sub
sub
and
adc
pop
xlat
xor
adc
push
mov
cmp
sbb
jl
int
mov
shl
lds
call
push
daa
push
mov
adc
int
fstpt
aas
in
push
jno
aam
fisubs
dec
imul
ret
mov
icebp
mov
popa
test
dec
add
popf
inc
or
mov
push
or
inc
mov
in
adc
into
jne
pushf
popa
inc
jo
movsl
inc
int3
inc
fadds
sbb
pushf
notl
add
cmc
lea
pop
clc
lock
mov
or
pop
xor
testl
fnstenv
imul
xchg
adc
mulb
mov
mov
cltd
es
mov
ss
cmc
and
lahf
out
jl
cmp
mov
adc
es
out
jne
imul
adc
mov
icebp
fwait
mov
lock
ja
add
and
enter
ljmp
popa
pop
push
arpl
cmp
psubsw
push
xorl
inc
sbb
dec
push
in
or
popa
pop
insb
in
cli
mov
or
shlb
mov
sub
mov
add
push
jne
pusha
bnd
add
mov
pushf
insb
inc
aaa
dec
arpl
das
jl
mov
aam
dec
sub
aam
movsl
mov
cwtl
ret
into
xchg
in
cmp
cmp
t1mskc
ret
sahf
xchg
dec
xchg
cmp
mov
insl
jns
sub
cmp
cmpsb
insb
xchg
mov
enter
call
loop
xchg
push
sahf
insb
dec
cwtl
xlat
push
pop
mov
inc
cwtl
stc
cmp
pop
sbb
mov
iret
lock
jo
push
icebp
sbb
ljmp
xlat
lret
emms
inc
lahf
jp
lahf
jns
pop
jnp
mov
mov
pop
loope
out
movsb
leave
push
or
push
repz
push
jno
fcoms
sub
pop
push
ljmp
mov
dec
push
push
aaa
xchg
clc
icebp
mov
xchg
in
out
fiaddl
pop
adc
out
int3
dec
adc
adc
mov
jge
sbb
push
sub
sbb
lret
xchg
and
push
lds
das
pop
mov
ss
sahf
das
push
ljmp
int
push
add
loopne
inc
or
jns
test
aam
lret
leave
mov
and
add
dec
push
pop
sbb
stos
push
or
imul
cmp
mov
pusha
mov
dec
mov
pusha
sbb
movsb
insb
mov
faddl
and
xlat
mov
pop
push
lock
add
xchg
jmp
gs
ficompl
stc
sbb
and
pusha
xor
lahf
stc
cmpsl
push
loope
inc
into
xchg
outsl
cld
loope
sub
stos
stos
je
test
mov
rclb
xor
jno
inc
enter
pop
mov
rcrb
and
xchg
adc
inc
stos
pop
lahf
ret
or
push
and
mov
int3
mov
fadds
jno
mov
icebp
sbb
inc
out
jl
jno
rol
mov
mov
insl
mov
adc
addr16
insb
fs
outsl
imul
mov
adc
jb
shrl
mov
scas
adc
add
test
imul
aas
lcall
jnp
sbb
test
jecxz
fstps
adc
dec
mov
xor
and
mov
clc
mov
jo
arpl
pop
sub
in
cmpsb
lret
cld
inc
inc
ds
cmp
push
or
cmp
add
lods
out
movsb
inc
inc
adc
pop
or
cmp
xchg
ja,pn
push
adc
and
sbb
mov
leave
jbe
loop
inc
dec
lods
es
xlat
add
aad
mov
cmp
std
dec
loopne
fsubrl
xchg
lea
cld
aam
rolb
mov
outsl
rcrb
das
xchg
std
fwait
stos
inc
jo
xchg
fwait
mov
cmpsb
mov
pop
test
stc
xor
push
testl
jno
adc
jbe,pt
or
xchg
adc
sbb
mov
mov
scas
and
and
sub
jmp
dec
int3
push
adc
pop
lret
mov
sbb
or
adc
inc
jbe
xchg
mov
ljmp
mov
sbb
loope
inc
xor
xchg
hlt
mov
loope
lcall
mov
xchg
es
jbe
ljmp
sbb
icebp
shlb
cltd
push
push
pop
gs
xchg
sbb
imul
fwait
lret
cmp
inc
hlt
mov
call
push
test
xchg
fildl
xor
inc
cmpsb
add
adc
xchg
add
mov
and
pop
ret
and
push
mov
mov
xabort
inc
insl
inc
sahf
inc
xchg
sbb
sbb
and
out
loop
test
add
push
jl
xchg
sahf
adc
jp
sub
sti
add
insb
add
mov
dec
dec
int
pop
stc
xlat
stos
dec
insl
mov
jns
sbb
in
out
adc
lcall
fnsetpm(287
or
iretw
nop
mov
mov
out
cs
insl
mov
mov
pop
xor
cmp
adc
in
cmp
movsl
lahf
sub
hlt
inc
lods
inc
testl
movsb
push
aad
imul
cmp
pop
and
xor
xor
lret
xchg
push
std
inc
mov
ljmp
inc
mov
addr16
mov
add
cld
cmp
stc
pop
mov
lock
test
nop
or
mov
jns
lods
vmwrite
cmp
cmp
mov
repz
mov
dec
insb
sub
cmp
fisubl
out
shr
inc
adc
or
inc
xchg
aam
imul
dec
pop
fs
mov
stos
repz
stc
push
imul
into
jg
jg
mov
test
testb
mov
jl
fisubrl
xchg
in
pop
mov
scas
je
arpl
imul
rcrb
pop
int
aam
adc
adc
pop
test
mov
push
mov
pop
mov
xchg
push
in
xor
dec
or
adc
lahf
xchg
popf
lret
shlb
adc
adc
data16
xchg
jge
dec
jg
push
lret
mov
add
fiadds
dec
pop
mov
mov
mov
icebp
lods
xor
js
jns
gs
cmp
outsb
add
dec
jb
sub
jecxz
daa
mov
stc
push
jmp
mov
jp
in
arpl
jae
mov
mov
jecxz
push
ret
push
mov
in
cmp
das
imul
add
aaa
pusha
pop
mov
insb
je
hlt
mov
insb
mov
jns
test
push
lock
mov
cmp
fstps
mov
jae
mov
subl
cwtl
xchg
cli
push
lret
jp
and
cs
imul
fwait
pop
lret
stos
test
and
subl
push
pop
loope
scas
push
shll
jb
jecxz
push
addr16
subb
dec
mov
in
hlt
add
es
cld
cmp
adc
es
aad
cld
xor
adc
lcall
lret
mov
sbbl
cmp
in
xchg
pushf
nop
jecxz
mov
rcr
pand
adc
xor
push
bound
lret
cwtl
dec
subl
or
int
xor
ss
scas
arpl
lock
push
xlat
popf
lahf
and
ds
outsl
fucomi
xor
nop
push
sbb
inc
popa
lret
push
leave
cmpsl
jo
pop
pop
lock
movsb
fimuls
inc
add
add
out
cmc
inc
jb
sbb
push
inc
andb
int3
cltd
fdivr
aad
jg
xor
jne
lcall
addr16
pop
in
add
adcb
pop
movsb
cmp
push
and
pop
sub
shl
inc
ds
dec
xchg
cwtl
std
jae
jl
cmpsb
rorl
pop
sahf
inc
daa
in
or
mov
push
and
mov
xchg
dec
lds
movsb
aas
xchg
es
ret
xchg
lods
shrl
xchg
sbb
mov
aas
std
sub
jge
push
sti
leave
lods
daa
push
push
shll
aam
push
mov
push
es
xorb
mov
adc
sbb
out
cmpsb
test
cmp
mov
jecxz
mov
dec
out
mov
shrl
scas
out
pop
cmp
sbb
mov
lods
cld
push
lret
mov
lods
rolb
mov
out
inc
sub
imul
repz
push
dec
and
push
in
dec
ja
dec
lcall
test
inc
stc
fiadds
lea
nop
inc
int
imul
je
xchg
cwtl
dec
push
xlat
iret
sub
enter
and
ljmp
or
mov
shlb
lret
adc
mov
and
mov
je
inc
xor
cmpsb
mov
addr16
int3
cmp
xor
loop
sub
mov
or
cmp
dec
mulb
adc
outsl
popa
inc
hlt
stos
outsb
cmp
fs
icebp
fs
into
fnsave
test
mov
clc
sar
std
xchg
mov
and
xchg
xor
mov
jp
mov
daa
stos
lods
mov
lea
xor
push
ja
subb
scas
stos
inc
push
cmpsb
jne
nop
das
int3
ja
sub
adc
mov
fst
stos
push
int
push
xchg
mov
sbb
jle
or
xorb
call
cmp
dec
sub
sti
adc
enter
roll
loope
aas
shlb
std
adc
outsb
pop
dec
push
pushf
stc
fs
in
out
and
sub
inc
loop
sub
popf
sarb
notl
add
out
xchg
and
movsb
xchg
add
jae
out
addr16
jbe
in
sub
push
cmp
clc
sbb
aas
adc
and
pushl
or
push
mov
repnz
xor
and
inc
fsubrs
shll
dec
cmpsl
movsb
into
cltd
xchg
sbb
outsb
sub
das
push
push
aam
in
jp
aaa
dec
fnsave
cwtl
sub
outsb
lods
xchg
dec
and
lds
mov
adcb
jecxz
aad
nopl
xlat
add
lock
pop
rsm
mov
and
scas
mov
or
jmp
popa
pushl
clc
cltd
sbb
push
repnz
sarl
pop
xor
test
or
mov
xchg
cld
mov
enter
sbb
stos
inc
pop
push
shl
out
lods
mov
mov
xor
mov
push
cmova
mov
dec
jg
xor
lods
hlt
sbb
jl
jns
mov
lods
dec
pop
test
cmp
loop
mov
sub
hlt
ljmp
pop
jp
jle
test
jmp
adc
rorl
testb
imul
push
mov
aas
lods
fidivl
jl
mov
test
push
add
cmpsl
stos
adc
insl
mov
pushf
inc
divb
seto
adc
xchg
pop
cmp
loopne
or
arpl
cmp
clc
inc
xchg
dec
test
bound
addr16
jns
jmp
sbb
cmp
fstpt
loop
insl
jb
subl
in
outsb
cltd
pushf
push
xor
fdivs
inc
repz
push
test
push
inc
std
or
xchg
push
cmp
and
lcall
cmp
hlt
add
hlt
or
jp
or
pop
fsubrs
xchg
fcoms
adc
out
sub
pushf
cmpsl
das
xchg
clc
cmp
cmpsl
or
lret
xchg
cmpsb
stos
jbe
jmp
imul
inc
inc
adc
movsl
movsb
mov
and
adc
fsubrp
jnp
adc
sti
cmpb
lahf
stos
gs
leave
pop
loop
jb
ficomps
imul
test
mov
push
cmp
cmp
dec
sub
fsts
repnz
shl
inc
cld
aaa
imul
lcall
add
inc
mov
mov
movsb
push
mov
arpl
popf
test
fcompl
lods
mov
push
imul
ds
lods
and
test
jmp
sub
ja
and
inc
jecxz
stos
aad
adc
jnp
xor
test
mov
mov
sub
loopne
jmp
aaa
jne
inc
outsl
pop
sbb
rcll
cmp
jge
fs
das
mov
dec
adc
mov
js
aaa
cli
into
pxor
mov
inc
xchg
stos
push
inc
lods
aam
iret
arpl
push
rcrl
lret
jmp
or
les
mov
xor
and
mov
cmc
into
or
out
mov
loope
sbb
pop
inc
xlat
rorb
sar
pop
sub
fwait
xlat
or
jge
dec
push
lgs
xor
sbb
daa
mov
cltd
rol
movsl
vpcmpgtd
dec
sub
inc
stc
pop
stos
dec
dec
xchg
or
test
rcll
jle
nop
xchg
or
movsl
popw
ret
loop
ljmp
inc
test
xor
and
shlb
jecxz
dec
iret
das
ret
mov
inc
out
or
xor
scas
xchg
or
inc
movsb
mov
arpl
sti
out
das
add
ret
shl
sbb
shr
stc
rcrb
add
jb
insl
xchg
das
sub
and
push
sub
xor
jmp
fs
lods
repz
sub
xchg
sbb
loopne
addl
xor
jbe
mov
jle
pop
scas
out
scas
pop
outsb
lcall
xchg
je
int3
jne,pn
jmp
cmc
jnp
xchg
sbb
mov
arpl
fadd
negb
loopne
lods
adc
mov
jns
add
cmp
ret
aad
mov
es
out
scas
jnp
adcl
jmp
insb
cmp
push
xchg
in
imul
jecxz
aas
movsb
sbb
sub
dec
das
sub
bound
scas
inc
mov
fwait
add
dec
dec
cld
stos
fyl2xp1
lahf
fldt
pop
cmp
pop
cmp
inc
movsb
dec
scas
sbbb
push
jp
call
push
inc
mov
add
imul
iret
jbe
and
add
xor
xor
les
popf
mov
pop
add
adc
rolb
pop
js
mov
in
jbe
imul
pushf
push
inc
insb
push
mov
imul
adc
out
pop
lods
aas
push
daa
pushf
push
and
into
fwait
js
aam
in
out
mov
jecxz
scas
lock
hlt
lcall
shlb
and
rolb
xor
in
jns
int
cmp
int
stos
iret
add
fmuls
and
sub
int3
jp
in
test
xor
movb
push
mov
out
add
repz
mov
jne
xor
pop
xchg
test
out
stos
adc
push
les
add
push
loopne
mov
adc
or
bound
ret
sbb
out
aas
push
stos
xchg
les
adc
mov
jo
in
repz
fadd
mov
xor
nop
mov
mov
push
imul
cltd
pushf
push
mov
and
mov
rclb
iret
mov
sbbb
lcallw
xor
stos
dec
push
fcmovnu
es
sbb
sub
jno
cmp
add
jne
fcomi
fldenv
xchg
mov
or
add
mov
pop
ret
or
xor
pop
pop
ds
dec
cmp
in
cmp
xchg
je
decb
dec
push
call
xchg
dec
cmp
popa
cld
ss
outsb
pop
fwait
je
ds
cmp
out
cmpsb
dec
xor
test
jnp
rol
cmp
fiadds
addr16
mov
mov
out
inc
sbb
xor
jge
cwtl
mov
sub
sub
in
mov
jle
pop
in
push
push
adc
daa
div
mulb
mov
jmp
out
push
jne
bound
or
push
add
push
cmp
hlt
xor
enter
es
loope
enter
jge
shl
gs
inc
daa
dec
sub
cs
pop
fiadds
sbb
cbtw
call
in
xor
dec
insb
cmp
cwtl
sbb
jo
jae
fdiv
lcall
imul
jecxz
repz
shll
add
jp
pop
pusha
push
fdivrs
xor
call
pop
fsubrl
sti
mov
std
lock
push
inc
sub
imul
call
and
aad
sub
shlb
jg
mov
das
cmpsl
fnstenv
and
inc
fucompp
leave
js
mov
js
sar
xchg
test
mov
cmp
sub
jno
int3
xor
xchg
cltd
adc
in
lret
mov
cmpl
adc
or
aam
jb
pop
cmc
mov
push
xor
add
iret
cmc
mov
jmp
shll
add
fwait
or
testl
cmpsl
aad
cmpsl
mov
push
ret
outsb
mov
jae
mov
and
mov
std
ljmp
and
or
cs
add
and
or
inc
adc
mov
jbe
add
sbb
fcom
in
mov
test
hlt
es
xor
in
add
stos
xchg
rcl
mov
lock
repz
ret
inc
cmp
dec
cmp
in
std
and
rcrb
jnp
aad
lcall
leave
cmp
insl
dec
fisttps
xchg
or
cmpsl
movsb
xor
inc
sbb
cwtl
jne
or
adc
test
cmc
sbb
sub
arpl
push
dec
das
pusha
mov
shlb
arpl
lret
push
insl
mov
pusha
and
pushf
pop
popa
inc
icebp
popf
xchg
or
sbb
sbb
pop
cld
dec
lods
stc
mov
jmp
adc
pop
jno
jp
pop
inc
dec
or
pop
push
dec
mov
jb
lcall
inc
xlat
xchg
test
pop
xchg
xchg
mov
jnp
bound
xor
negb
inc
mov
mov
dec
xor
pusha
push
mov
iret
aam
or
test
aas
fimuls
jl
push
pop
in
mov
or
out
cmp
xchg
inc
insl
out
cmp
adc
fdivrp
mov
scas
sbb
shl
sbb
in
daa
mov
sarb
xor
adc
ljmp
fstpl
cmp
mov
add
push
dec
lea
jne
adc
cmp
inc
mov
add
cmpsl
pop
adc
push
mov
xor
iret
or
lods
data16
out
sbb
arpl
test
aaa
subl
aaa
push
unpckhps
daa
jmp
xchg
push
das
xchg
scas
inc
jns
mov
xchg
rclb
ret
ror
out
push
inc
xchg
adc
push
movl
in
push
testb
lods
mov
cmp
xchg
inc
pop
ret
mov
pop
push
dec
call
jecxz
lds
dec
dec
lock
mov
lcall
inc
lret
adc
cmp
ljmp
test
jb
mov
dec
sbb
sbb
insb
stc
sbbl
stc
xchg
mov
push
lods
xlat
mov
mov
fldenv
lcall
sbb
loope
push
into
xchg
nop
lret
jmp
loop
jae
pop
test
jo
icebp
outsl
xor
sub
xlat
sub
bound
stos
gs
rorl
addb
push
xchg
test
enter
jge
or
lds
out
outsl
sbb
aas
jge
pusha
nop
xchg
sbb
lret
mov
sti
leave
jl
notl
xchg
cmp
sub
sahf
je
mov
xor
shl
adc
andb
pusha
cltd
dec
and
mov
adc
pop
mov
clc
sub
lahf
test
sahf
xor
lea
je
xchg
mov
cltd
ja
fnstcw
rorl
cs
mov
iret
cld
lret
shr
add
mov
xchg
jmp
mov
negl
cmpsl
call
repnz
mov
sub
fcoml
xlat
fidivs
mov
sub
and
ds
adc
frstor
or
fldl
sbb
aas
outsb
out
xor
adc
loop
cli
xchg
xor
loope
into
inc
ljmp
sbb
cld
call
adc
leave
ljmp
pusha
je
das
jne
lret
xchg
cmpsl
inc
add
inc
cmp
mov
cltd
sub
hlt
stos
stos
sbb
outsl
pop
mov
in
xor
adc
xchg
or
mov
rorl
adc
cmpsb
mul
sbb
jp
jno
cwtl
push
pop
icebp
popl
mov
test
int3
mov
test
push
outsl
rcr
rorl
add
jo
push
stos
in
out
idiv
jbe
in
shrl
leave
cmp
cmp
ja
stos
inc
inc
or
pushf
imul
ss
fsubl
mov
fbstp
fcoml
loopne
or
mov
mov
cli
js
xchg
xorl
and
cli
and
fidivs
clc
mov
mov
int
js
jns
in
cmpl
adc
popl
push
or
test
dec
loop
xchg
lret
sub
dec
pop
stos
out
movsb
sub
add
jl
stc
inc
inc
repz
push
sbb
repnz
scas
sbb
mov
mov
and
jo
cmp
sbb
stos
add
loope
icebp
mov
xchg
cmc
lret
mov
push
jnp
rorl
mov
sub
dec
add
imul
jno
add
inc
or
loopne
scas
cmp
push
pop
jne
int
pop
in
movsb
aas
les
mov
mov
mov
mov
ja
sub
sub
leave
es
mov
xchg
sbb
push
lahf
xlat
lret
fnsave
xchg
mov
jle
icebp
dec
add
lods
ret
push
leave
sbb
lods
shlb
xlat
jl
addr16
adcb
jno
xchg
sub
loope
fwait
in
mov
roll
cmp
mov
std
pop
test
pusha
jo
pmullw
xchg
or
sbb
rcll
in
je
test
imul
pop
setne
and
outsl
iret
xor
add
sbb
jb
lret
mov
nop
jmp
pop
dec
mov
cmp
ljmp
ret
scas
filds
cltd
dec
movsl
xor
adc
call
out
lea
pop
lea
sbb
gs
stos
jns
in
mov
movsb
fsin
std
jae
out
ds
out
mov
add
stos
std
sub
stc
repnz
xchg
pop
out
xor
aas
popf
lods
in
icebp
idivb
jo
cmp
lods
xchg
std
jp
xchg
das
sahf
das
or
jg
fnstenv
adc
insl
out
outsb
cmp
mov
cmp
addr16
fmul
enter
jl
or
lret
xor
mov
sub
push
push
cmpsb
popa
ss
cmp
dec
push
mov
jne
lds
xor
das
call
mov
in
pushf
inc
push
mov
enter
adc
in
ja
sub
jecxz
mov
inc
or
dec
inc
sahf
dec
push
push
dec
cmp
or
xchg
lret
sub
xor
movsl
arpl
rcrb
cmc
mov
sub
mov
aad
dec
mov
jbe
dec
sar
lods
shr
mov
push
hlt
mov
in
ljmp
mov
push
inc
arpl
and
stc
dec
cmp
push
into
pop
pop
clc
test
xchg
rcr
scas
cmp
sub
jo
pop
xor
or
lret
xor
sahf
loope
aad
call
outsb
sbb
and
xor
fnstenv
out
clc
mov
xor
cltd
data16
pop
addl
pop
enter
movsb
lcall
mov
in
jmp
imul
or
jle
in
shrl
sub
mov
mov
ss
mov
mov
lcall
in
lea
pushf
sbb
fstpt
dec
repz
prefetch
push
ljmp
cmc
or
pop
mul
cmp
lods
addr16
bound
pop
lret
dec
mov
scas
in
cmpsl
aaa
pusha
es
sub
hlt
and
les
hlt
push
xchg
iret
cmp
dec
clc
fstps
mov
sti
ljmp
cmp
pushl
gs
ss
aad
xor
fsubs
fwait
mov
ljmp
push
js
dec
jnp
sub
pop
sbb
mov
hlt
shlb
and
jl
arpl
dec
xchg
sbb
and
dec
shr
dec
inc
imul
xor
mov
fstl
pop
and
mov
leave
out
pop
lcall
and
mov
xchg
cmpsl
test
add
xor
mov
adc
mov
jp
dec
adcb
dec
cmp
in
adc
cmpsb
fs
or
mov
testl
xrelease
dec
das
mov
inc
xchg
lods
aaa
pop
cmpsb
and
adc
dec
cs
mov
out
outsl
out
push
pop
shrl
stos
call
into
sub
insb
je
imul
dec
in
or
mov
sbb
lahf
leave
loopne
ret
sbb
int
xor
sarl
hlt
ret
rclb
lods
in
cmp
and
sbb
sbb
adc
dec
mov
mov
data16
aaa
dec
adc
jno
lock
ss
rol
movsb
sbb
bound
mov
es
xchg
dec
test
cmp
imul
inc
stos
mov
dec
lret
inc
push
adc
movsb
jne
daa
mov
xchg
mov
mov
fs
mov
mov
pop
jae
push
loopne
xchg
cmpsl
jmp
fisttps
loopne
mov
nop
data16
jg
inc
push
out
adc
ja
jbe
mov
jo
test
dec
jbe
sahf
ds
jbe
int
repnz
cmc
xor
push
shl
mov
cmp
out
pop
mov
adc
mov
andl
loopne
mov
rcll
add
fnstcw
pop
sbb
inc
xchg
dec
xlat
std
ret
imul
repz
adc
sub
push
mov
push
ficompl
adcb
insl
push
aam
nop
rorb
and
in
inc
ret
ds
movsl
push
or
iret
fs
fmulp
iret
popf
add
sbb
fucomp
xor
add
nop
pusha
test
jmp
in
mov
fcoms
cltd
sub
stc
sub
je
dec
xor
adc
cmpsb
mov
fs
sub
in
out
push
adc
rorl
fcmovb
in
out
lret
cmp
xorl
hlt
push
loop
out
and
jmp
and
push
pop
jecxz
dec
mov
ja
enter
add
gs
les
push
jnp
cmc
fnstcw
shlb
inc
cwtl
and
fwait
test
lods
out
out
iret
lds
daa
mov
jo
jl
rcll
dec
sub
and
jp
aaa
leave
lret
mov
js
test
mov
rolb
mov
shlb
sub
sub
sub
lds
andnps
push
fdivrs
mov
gs
pop
jae
popa
add
int
sbb
sarl
loope
ljmp
adc
inc
lock
inc
pusha
pusha
mov
xchg
mov
in
cmp
push
mov
pop
adc
and
xchg
jae
mov
xchg
and
lcall
jl
xchg
xchg
mov
jb
stos
insl
add
cmp
test
shlb
ds
lea
out
sbb
lods
mov
loope
fcoms
push
xor
inc
or
adc
fldt
mov
arpl
pop
iret
imul
jecxz
or
or
xor
xlat
sub
jge
test
pop
sar
jnp
sbb
ja
add
loope
in
xchg
rorl
ja
lds
repnz
rolb
cmpsl
push
fistpl
inc
ret
leave
rcll
xchg
pushf
and
jae
subb
sub
outsb
cmp
cwtl
aam
inc
loope
aam
insl
add
scas
ja
push
dec
fldcw
into
test
popf
pop
sti
cmp
sub
lret
push
jle
mov
push
pop
sub
nop
pop
pop
jns
sbb
xchg
add
enter
push
cwtl
mov
mov
push
movsl
std
mov
into
sbb
cwtl
cmp
mov
mov
cmpsb
adc
popf
popf
repnz
push
shr
into
divb
int
lret
mov
dec
pop
ja
xor
inc
mov
scas
and
inc
stos
lret
dec
and
in
pop
shll
imul
pushf
lret
sub
or
xor
mov
cmp
push
pop
push
outsb
scas
push
cmc
enter
mov
lret
stos
fwait
int3
pop
sbb
push
mov
push
jno
sub
scas
cltd
outsb
pushf
xchg
in
push
and
adc
ds
jbe
aaa
or
dec
mov
movsb
push
pop
aam
xchg
sbb
pop
fiaddl
es
jb
arpl
movsb
sub
cltd
cli
cwtl
pop
or
push
inc
popf
xor
or
out
out
xchg
cmp
rclb
stos
xor
jbe
pop
sbb
mov
cmp
mov
dec
adc
and
imul
dec
and
mov
mov
rorb
fwait
cli
adc
add
sbb
out
cmp
sub
mov
cmp
jecxz
loopne
movsl
mov
outsl
jo
mov
sbb
in
test
mov
push
lds
bound
das
outsl
int
dec
fadds
dec
scas
sub
shrl
stc
stc
jecxz,pt
mov
lea
rcrl
push
sarb
insb
in
mov
mov
dec
shrb
add
and
mov
xchg
jno
in
icebp
or
pusha
jbe
sub
ret
out
iret
adc
js
aam
push
jne
xor
mov
cmpl
add
cmpsb
pop
pop
adc
sets
pop
add
repz
cmc
cmp
daa
pop
mov
enter
lods
mov
xchg
jp
mov
insb
jns
rorb
loop
fnsave
add
xchg
mov
sti
bound
and
test
lods
inc
testl
aad
cmp
pushl
mov
xchg
stc
mov
in
ds
dec
stos
repz
cli
mov
fs
mov
push
in
cli
mov
dec
int
das
mov
shll
in
cli
jle
adc
shlb
imul
push
subb
sbb
mov
add
xlat
push
ljmp
jns
mov
mov
push
loopne
popf
rep
pop
mov
shr
mov
jp
mov
mov
sub
sub
push
imul
out
ljmp
fcoms
aad
fwait
arpl
stos
xchg
ljmp
popf
call
mov
mov
xchg
add
xchg
popa
in
pop
pushf
xor
inc
mov
xor
out
int3
push
and
aam
or
addr16
inc
gs
pop
test
ret
out
cs
movsb
test
jecxz
dec
mov
adc
insl
jno
mov
fstpt
gs
fisttpll
push
imul
outsb
inc
cwtl
xor
or
lods
ret
int3
out
mov
push
adc
in
inc
clc
inc
jbe
mov
xor
iret
jge
inc
add
sub
pop
dec
lret
add
icebp
or
aas
adc
push
test
test
push
arpl
fwait
aas
xor
lcall
mov
out
sub
ja
fadd
mov
fsubrs
jl
cmp
stc
mov
paddq
cmc
test
mov
or
nop
xor
lods
cmpsb
xchg
sub
insl
pop
pop
fiaddl
cmc
in
lea
cmpl
pop
pop
jl
scas
jmp
pop
out
xchg
add
aaa
jbe
loopne
sub
mov
jl
push
and
mov
jmp
dec
mov
lcall
or
mov
iret
or
mov
adc
cmp
jecxz
xor
lcall
adc
in
fidivrl
stc
clc
loope
add
daa
mov
inc
cli
enter
orl
jle
bound
enter
mov
loope
xor
cmp
push
inc
sti
inc
add
int3
repnz
loop
iret
mov
dec
or
pop
subb
and
in
push
icebp
adc
and
mov
es
push
call
mov
add
jecxz
arpl
sti
rcll
stos
cmpb
dec
fiadds
out
lcall
cmp
lock
and
test
sti
stos
or
ret
daa
mov
cwtl
pop
or
sub
xchg
mov
mov
aaa
push
sbb
pop
push
andb
ljmp
mov
movsl
and
dec
mov
add
mov
ljmp
and
sbb
jo
or
inc
ja
jge
mov
iret
xchg
rorl
dec
cli
les
or
loop
pop
add
call
add
cmp
sbbb
jl
cmpsb
repz
movsl
jp
sub
pushf
loop
movsb
cwtl
scas
add
cmp
xor
jne
clc
pop
xor
add
lods
sub
lret
repnz
xor
jmp
pop
enter
adc
cmpsl
pop
in
or
cs
popf
loopne
mov
mov
pop
xchg
inc
lret
add
mov
mov
inc
or
cli
das
in
jecxz
jecxz
sbb
sbb
or
lfs
pop
pop
push
mov
ljmp
jle
and
mov
jle
insb
sbb
call
or
std
in
into
sbb
out
lahf
test
adc
lret
pop
imul
mov
or
cmp
adc
out
add
cli
cmpsl
xor
xchg
je
pop
popa
mov
xchg
mov
fwait
mov
filds
daa
jbe
or
popf
mov
fwait
cmp
cltd
push
sbb
sbb
lock
test
sub
shll
fsubp
xor
out
insb
iret
inc
and
stos
pop
adc
add
push
ljmp
into
jnp
rorl
int3
sub
inc
push
repnz
and
xchg
mov
dec
outsl
aaa
mov
mov
fwait
cld
imul
or
lret
out
test
mov
pop
out
movsl
js
inc
cmc
xchg
ljmp
aam
loopne
imul
int3
adc
jno
or
clc
mov
xchg
fwait
sub
arpl
imul
sub
pop
pusha
mov
popf
insb
jno
cmc
cmp
xor
fwait
mov
xor
mov
lea
int
or
adc
xor
mov
mov
push
notl
jno
rcrl
pop
mov
ret
cmp
xlat
rcrb
in
adc
lock
testl
cmp
mov
lahf
nop
adc
inc
ret
imul
dec
xchg
xchg
sub
scas
push
cmp
jae
sbb
fwait
push
dec
lret
inc
mov
and
cmp
dec
jge
inc
arpl
mov
mov
cmp
and
stc
jl
mov
sub
int
and
dec
push
sti
or
fbstp
xchg
test
mov
push
jp
movsl
mov
inc
outsb
inc
jne
sub
das
ret
rcl
or
insb
jl
mov
lds
icebp
inc
mov
in
pop
push
ljmp
adc
imul
sub
xchg
shlb
ret
sbb
sub
dec
pop
push
addr16
loope
orb
int3
cwtl
les
add
std
cs
stos
loope
sbb
or
inc
or
jle
roll
out
xor
pushf
aaa
faddl
pop
cli
insb
into
sub
loope
fldenv
stos
in
aas
mov
outsb
jbe
sbb
push
and
rcrb
scas
mov
sub
push
mov
popa
lods
sbb
inc
ret
cmp
sbb
sbb
outsl
lahf
cmpsb
in
int3
sub
xor
in
insl
dec
lea
pop
lock
pop
outsb
inc
bnd
movsl
pop
es
adc
aad
jmp
ficoml
pop
push
adcb
xor
addr16
in
inc
mov
mov
cli
scas
popa
sub
or
das
idivb
bound
scas
inc
test
fsubrs
ljmp
in
out
add
adc
xor
cmpsb
dec
pusha
aam
int
and
insl
lods
dec
cltd
lods
loope
dec
insb
mov
adc
pop
dec
jno
fisubs
sbb
adc
and
insl
sbb
lds
mov
in
sbb
xor
scas
pop
ljmp
movsb
cmc
jnp
insb
lods
and
loop
fistpll
sbb
sub
mov
shr
jb
fwait
add
fwait
cmp
push
jb
sti
jp
dec
cmp
pusha
cli
mov
inc
stos
movaps
leave
dec
rclb
add
out
inc
scas
inc
and
sahf
sar
mov
add
mov
inc
pop
test
cmp
pop
jb
insl
or
fwait
ds
pusha
loop
js
dec
ja
jecxz
testl
or
and
push
add
or
movsl
jne
mov
lods
js
movsb
sub
push
inc
aad
xchg
jg
pop
test
fcomps
or
shlb
nop
lcall
mov
push
ret
pop
mov
push
adc
jmp
lcall
daa
sbb
jne
fcoms
pop
or
imul
pop
add
add
jmp
adc
jmp
cs
dec
adc
push
mov
add
ret
add
adc
je
add
mov
insb
cwtl
push
pop
and
imul
dec
decl
rorl
cld
or
shlb
test
lock
jmp
cmpsl
movsb
mov
dec
loop
jp
cmc
bound
xor
xor
fsubs
mov
mov
in
jmp
xchg
adc
xor
adc
out
jecxz
scas
sub
mov
jmp
inc
push
xor
fistps
mov
xchg
push
in
push
mov
jg
sbb
aad
xorl
cmp
jmp
inc
dec
mov
out
scas
add
rclb
jmp
push
add
xlat
iret
mov
jmp
xor
cmpb
push
jno
jae
inc
fmul
jb
mov
xlat
iret
xor
outsb
sub
jle
adc
fsubrl
int
lret
mov
stos
loope
lods
adc
adc
cmc
test
cwtl
fwait
mov
sti
jge
mov
mov
js
mov
jb
dec
and
and
out
jp
bound
cmp
pop
sbbb
jnp
sahf
pushf
test
sti
outsb
sub
dec
mov
jmp
dec
inc
xchg
loop
mov
inc
pop
cli
jle
mov
sar
sub
daa
lea
bound
lock
nop
shrl
mov
std
push
xchg
mov
cmp
hlt
into
fidivl
scas
fcomi
xchg
cmpsb
aas
mov
pop
push
ljmp
imul
icebp
mov
or
inc
fcomp
cmp
out
ss
rcll
and
int
out
jl
and
mov
dec
sahf
add
adc
push
test
ss
dec
ss
rorl
push
xchg
dec
add
jo
adc
adc
bndldx
or
shlb
mov
and
cltd
and
sub
imul
jns
push
and
out
mov
leave
subb
sub
fstpl
add
fmull
mov
arpl
out
sarb
jecxz
outsb
movsl
out
or
sti
testl
clc
dec
inc
jecxz
and
aaa
pop
int
pop
in
int
sbb
dec
imul
rcl
sbb
std
xchg
adc
xor
cmp
mov
in
ss
xor
or
cmp
and
scas
push
call
enter
jle
stos
imul
jg
sub
inc
lock
inc
popa
xchg
rcrl
ja
xchg
data16
dec
arpl
and
push
outsb
roll
xor
rorl
leave
mov
scas
lods
cmpsb
fst
jb
arpl
repz
adc
test
shlb
lcall
and
mov
icebp
xchg
xchg
cli
scas
adcb
jg
dec
mov
shlb
mov
out
xchg
xor
jl
dec
fadds
shr
sub
stc
push
mov
es
data16
add
divl
mov
xor
inc
xchg
adc
stc
mov
sub
lock
fld
pop
insl
dec
xor
dec
push
insb
arpl
std
mov
stos
in
lea
dec
inc
gs
std
scas
dec
mov
adc
mov
sbb
add
inc
jle
cmp
ret
cmp
push
lahf
cmp
pop
xchg
mov
outsb
pop
jne
xor
adc
and
bnd
jbe
cld
push
push
decl
std
sbb
cltd
mov
pushf
cmpb
push
sbb
popf
movsb
push
push
mov
xor
das
and
xor
push
mov
jge
mov
mov
stos
popf
ja
cmc
into
adc
add
ja
scas
pop
mov
sub
into
pop
mov
xchg
dec
jmp
fnstenv
es
cmp
sahf
cmpsb
inc
jae
cltd
jmp
sub
xor
and
xchg
cmc
xchg
popaw
pop
and
xor
fildl
inc
jbe
mov
aad
sub
insl
push
cmp
cmpsb
lea
pop
lahf
fiadds
adc
ret
sbbl
pushf
mov
loop
jg
mov
das
call
int
in
adc
mov
jle
loopne
mov
push
or
cli
std
inc
mov
mov
popa
cmpsl
push
adc
xlat
mov
icebp
bound
iret
fidivrs
ret
mov
adc
cs
cld
and
push
sbb
cmp
mov
std
iret
mov
dec
sbb
xor
fisttps
cmp
push
int3
imul
rcll
or
mov
pop
xor
push
pushf
jg
xor
mov
cmp
mov
jecxz
idivb
insl
outsb
daa
dec
xor
push
arpl
xchg
jge
sbb
int
push
mov
mov
mov
pop
fmuls
add
push
mov
loope
das
sub
cmp
int
test
push
or
push
out
mov
cmp
xchg
ljmp
lret
in
mov
notl
dec
mov
fwait
jge
ffreep
or
jbe
movsl
js
es
or
inc
je
add
xchg
and
push
xchg
xor
aaa
enter
shlb
push
mov
cltd
sbb
pop
data16
data16
cmpsb
popa
fcmovb
add
sub
movsl
push
mov
xor
xor
adc
sbb
out
jmp
lret
add
lods
rol
bound
sub
cmpsb
jno
sbb
mov
push
xchg
cmp
xor
jne
jl
sbb
jno
fwait
int
cld
inc
iret
push
mov
mov
xor
sbb
outsb
lods
sti
mov
fisubl
jns
sub
cli
cmp
add
inc
loopne
add
outsb
mov
cmp
xchg
stos
clc
imul
xchg
push
sar
or
test
xchg
xchg
in
add
outsl
mov
cmp
js
pop
inc
mov
lahf
push
mov
insl
ljmp
xchg
or
pop
xlat
lret
sub
or
jno
lret
popa
cmp
mov
test
or
sahf
sti
pop
cmp
stos
or
cmc
repz
pop
dec
pop
das
cld
aaa
adc
add
in
sbb
dec
in
add
dec
imul
xlat
push
push
jecxz
inc
cltd
fisttps
xor
sahf
mov
xor
stc
push
insb
pop
add
lods
xchg
movsl
push
insb
push
mov
mov
push
push
sbb
xor
lret
mov
and
out
inc
add
xor
stos
bound
popa
fdivrs
jne
and
fdiv
sub
adc
sub
push
jle
outsb
pop
dec
mov
sub
cmpsb
jle
sub
add
adc
jmp
adc
pop
dec
jo
int3
push
xchg
push
jle
xchg
jo
test
loopne
mov
mov
cmpsb
mov
fistps
inc
mov
scas
insb
dec
arpl
fsubl
mov
xor
or
sbbw
enter
adc
xor
lods
pop
cltd
pmaddwd
sbb
mov
sbbb
cltd
aad
add
out
adcb
ficompl
and
fistps
pusha
mov
fld
push
shl
sub
sub
popa
dec
je
clc
daa
cmp
pop
mov
pop
imul
call
and
adc
mov
iret
mov
test
xor
ret
data16
push
lods
sub
gs
pushf
jp
adc
and
sbb
mov
lret
outsb
push
xor
ret
jne
mov
cmp
pop
pop
subb
inc
lahf
adc
xorb
dec
cmp
andb
mov
push
dec
into
iret
fstps
and
push
sti
add
mov
xchg
icebp
mov
test
ret
jo
sub
xor
mov
loop
fcomi
scas
sahf
pop
test
stc
sbb
cmp
push
mov
or
icebp
loop
cmp
xchg
mov
mov
add
pop
dec
sub
mov
push
fwait
or
lock
push
pop
fistpll
and
bound
xchg
shlb
iret
inc
iret
dec
and
or
inc
clc
jp
jo
fbstp
add
dec
jne
and
sub
pop
xchg
xor
call
stos
sbb
mov
imul
sbb
scas
adc
and
rep
xchg
pop
jae
popa
js
xchg
cltd
test
xor
aam
mov
stos
jmp
push
pop
fsubp
testb
lahf
mov
int
rorb
aas
cmp
and
dec
fistl
addr16
fdivl
mov
mov
rorl
lock
movsl
xchg
or
call
jne
inc
insl
outsl
dec
push
sbb
pusha
mov
sbb
popf
fidivs
test
and
xchg
inc
sbb
cli
insb
std
push
dec
or
aam
js
xchg
sub
xor
mov
sub
subb
cmp
and
xor
or
add
repz
test
jl
xchg
add
mov
imul
jle
cmp
sub
mov
push
les
ljmp
lea
shll
repz
inc
faddl
fs
pusha
sarl
andb
lods
rcl
fstl
les
sti
lret
adc
repnz
and
ret
out
out
xchg
lea
dec
pop
testb
push
imul
push
jo
add
outsb
sub
into
test
xor
movsb
rolb
adc
inc
sbb
mov
test
dec
cmpb
testl
jle
jl
xlat
mov
xor
mov
push
sete
inc
adc
stos
mov
xor
xchg
loopne
cli
mov
fsincos
add
pop
jae
ret
lock
je
lret
push
stos
lods
sbbb
jecxz
add
cli
xchg
insl
add
mov
jne
mov
movsb
adc
shlb
imul
fnsave
add
scas
jbe
int3
data16
and
pop
xor
xor
fidivrs
pop
dec
dec
pop
popa
and
ljmp
test
pop
sahf
mov
ja
popa
and
mov
cmp
cmp
mov
std
push
mov
scas
ds
aam
and
xchg
cmp
fmuls
xor
fadd
push
or
jp
xchg
orb
jmp
stos
ret
jle
dec
lods
sub
int3
inc
int3
pop
push
call
fcoms
pushw
stc
pop
add
jo
xor
pop
cmpl
push
inc
stc
mov
mov
cmc
and
shll
int3
dec
enter
decb
mov
xchg
xlat
sarl
jg
add
xor
xchg
mov
push
sub
push
scas
jbe
insl
mov
lods
cli
in
dec
mull
xchg
mov
cwtl
adc
or
cmpsb
push
sbb
loope
sbb
or
nop
clc
lcall
sbb
and
mov
pusha
sbb
sbb
das
rcrl
inc
fdiv
or
dec
call
dec
inc
and
icebp
stos
sub
mov
push
adc
in
les
es
aad
mov
subb
dec
rorl
rclb
movsl
sbbb
fmuls
scas
idivb
js
add
pushl
jl
fwait
xor
loop
xchg
mov
ss
daa
fcoml
nop
sbb
pop
mov
sub
out
testb
cmp
sbbl
mov
lea
in
daa
movsl
inc
ja
inc
lods
hlt
ds
or
outsl
je
jbe
repnz
jl
daa
and
mov
and
lds
sub
mov
xchg
push
dec
mov
jecxz
jecxz
pop
stos
jae
sbb
dec
iret
rcrb
in
push
and
aad
xchg
dec
push
rorb
je
pop
lock
sub
add
mov
cld
cmpsl
jb
sahf
or
jp
mov
cltd
mov
ret
sbb
xor
pop
imul
pop
out
add
xchg
ds
xor
pop
mov
lret
push
inc
jp
sahf
or
adc
or
test
mov
out
nop
inc
es
ror
loopne
mov
xor
jecxz
lods
icebp
jle
pusha
cmpsb
bound
addb
lret
mov
cmp
stos
cmpl
loopne
add
inc
out
xchg
xlat
mov
in
stos
inc
fmull
fwait
lods
push
mov
xor
xor
mov
imul
stos
iret
jle
mov
dec
xchg
test
mov
cmpsb
cmp
test
or
shlb
cmpsb
cmp
lea
movsb
pop
jbe
inc
int
in
xchg
push
popf
pop
sub
int
pop
cwtl
fdivl
dec
lcall
cwtl
mov
dec
movsb
mov
sbb
inc
push
inc
mov
insb
mov
jl
mov
shlb
inc
clc
push
dec
cmp
les
idiv
jae
inc
mov
inc
xor
test
shlb
or
adc
mov
fsubrl
push
call
pusha
sub
nop
mov
stc
cmp
or
push
dec
jl
mov
fistl
fnstenv
insl
xchg
dec
xor
cmp
or
mov
stc
mov
arpl
shlb
or
cmpsb
addr16
xchg
cmp
add
adc
sub
movl
ds
sub
scas
ss
sbb
xor
pop
lods
lods
xor
out
xchg
adc
xchg
mov
pusha
popf
xor
shlb
jle
push
inc
dec
mov
lods
inc
and
adc
jecxz
xlat
mov
ficoms
ror
jmp
mov
fdivrs
xchg
loopne
jle
cmp
dec
leave
out
add
mov
loope
jo
clc
push
cmpsb
or
mov
push
xchg
dec
fistl
adc
pop
pop
and
scas
dec
mov
mov
xchg
add
ja
stc
ss
orl
fcompl
aam
mov
and
jne
jecxz
xchg
fldenv
jmp
inc
les
out
fistpll
scas
push
cmc
lods
mov
idivl
imul
fwait
mov
jno
cltd
repz
lods
rclb
mov
movsl
aas
or
push
push
jp
arpl
nop
mov
out
pop
xor
pop
clc
push
rorb
mov
sub
or
shl
imul
inc
push
pop
pusha
mov
negb
inc
sbb
and
fbld
push
js
cwtl
pop
cmp
pop
lcall
jmp
fildl
jmp
imul
xor
repz
jb
int3
mov
repz
mov
arpl
cmp
insl
jae
jg
add
jl
adc
push
mov
mov
add
stos
stos
scas
cli
xchg
call
jmp
adc
mov
jg
push
repnz
jmp
sbb
xor
out
mov
jmp
xchg
leave
mov
iret
js
leave
popa
outsb
lret
xor
jg
jle
daa
mov
repnz
cld
outsl
fisubrl
mov
mov
xchg
jbe
pop
ds
in
mov
mov
addl
cmc
push
push
mov
in
rcr
cmp
mov
movsb
aad
or
fdivp
dec
pop
mov
mov
pushf
popf
aam
loopne
fiadds
push
sbb
fsubr
sub
std
and
or
mov
cmp
adc
lock
dec
loopne
push
xor
push
enter
inc
xchg
int
notl
xchg
xchg
shll
dec
out
in
push
filds
sbb
aaa
and
cmp
xor
push
ljmp
jbe
add
iret
xchg
aad
jae
fwait
loope
adc
inc
out
popl
ja
repnz
adc
out
mov
lock
out
test
push
jge
in
jp
sub
adc
insl
or
and
pop
lods
jp
mov
ret
add
xchg
in
mov
shld
outsl
pop
mov
mov
push
inc
mov
push
inc
xchg
add
div
pop
push
arpl
aas
fisttps
inc
out
push
int3
xchg
scas
pop
scas
cmpl
cmp
faddl
int
cltd
cs
jmp
push
push
enter
pop
xor
dec
test
ljmp
mov
xchg
outsb
fwait
gs
push
out
cmp
and
sub
add
jmp
out
push
stc
or
pop
push
xchg
mov
jae
and
leave
fcoms
or
xor
jnp
test
xor
pop
xchg
lcall
movsl
jns
test
fcmovnu
push
xor
cmpsl
mulb
mov
fwait
gs
mov
adc
aad
int3
repnz
jl
or
xchg
jae
lret
leave
test
cwtl
jo
das
in
adc
aad
jb
adc
insl
mov
dec
cli
scas
inc
aad
sbb
mov
jl
mov
pop
add
mov
clc
arpl
push
aam
add
sbb
jecxz
dec
cmp
ret
or
int3
xor
cmp
popl
bound
and
lock
xor
fists
and
add
arpl
mov
mov
and
add
aaa
orb
xchg
xchg
xchg
xchg
mov
ja
jno
out
jns
xchg
mov
xchg
add
sub
push
sbb
add
jae
cmp
test
into
or
pushf
sub
push
mov
mov
aas
call
adc
and
dec
sbb
mov
mov
mov
mov
sbb
pop
add
les
mov
lcall
cmp
pop
mov
pop
hlt
sub
popl
subb
lock
out
cmp
mov
sbb
dec
cmp
push
and
aas
adc
jno
or
push
push
inc
cmp
lret
js
push
or
dec
insb
push
push
push
mov
mov
outsw
xchg
leave
mov
push
jp
xchg
fs
fldt
mov
lea
inc
mov
mov
fcmovu
mov
push
mov
sbbb
pop
pop
adc
xor
enter
xor
dec
and
push
mov
movsb
cwtl
dec
out
jnp
mov
or
iret
cmpb
cs
cmpb
das
stos
push
incl
scas
xor
jbe
push
ja
test
mov
pop
dec
pop
stc
daa
in
es
add
cltd
or
movl
repnz
push
or
sub
jg
lahf
or
leave
pop
cli
enter
lahf
addb
jnp
cmp
test
push
adc
outsb
push
push
pushw
addr16
popf
push
lahf
xchg
pop
aam
daa
into
aas
mov
fucom
mov
xor
jmp
lods
xchg
pushf
pop
xchg
jle
aas
xchg
nop
imul
repz
fs
pop
inc
sbb
sbb
cld
mov
test
pusha
adc
jb
repnz
out
das
and
inc
mov
sbb
jge
mov
add
cmpsl
pop
cmp
or
dec
rcl
xor
push
push
xor
or
xor
cmp
rol
sbb
dec
xchg
xchg
sbb
lcall
push
std
mov
xor
xor
xchg
xorb
loopne,pt
movsl
lret
shlb
dec
popa
add
in
pop
rcrl
mov
insl
cmp
mov
sahf
adc
jo
cli
lret
and
mov
pop
dec
mov
repz
adc
in
xchg
mov
adc
or
iret
mov
ficoms
repnz
sbb
lods
mov
clc
dec
test
xor
xor
mov
hlt
out
roll
adc
sub
sbbb
std
outsl
in
xor
bound
xchg
xlat
lock
roll
xchg
insb
sbb
sahf
dec
cmpsb
ret
stos
or
stc
jl
fistpll
push
subb
aaa
bound
cmpsb
xchg
mov
jnp
sub
cli
popa
pop
arpl
or
dec
jne
cmp
xchg
dec
rorl
leave
sbb
cpuid
rcl
push
cs
dec
push
cmp
dec
cmpsb
ja
pop
push
sub
xchg
dec
dec
xor
push
imul
mov
fwait
or
dec
aad
inc
mov
cli
sub
shlb
push
test
cmp
out
cmp
cmpsb
loopne
test
movsb
test
pop
xchg
les
pop
ret
or
fcomip
lret
sub
or
dec
leave
scas
lret
jmp
daa
jbe
add
shrl
sub
aas
movsb
push
mov
in
addr16
push
mov
hlt
or
mov
mov
fbstp
ret
rcll
jne
mov
xchg
arpl
sti
add
adc
pop
daa
mov
pushf
ret
xor
cmc
or
mov
jg
xchg
xchg
mov
mov
mov
cmpsb
and
jl
add
les
leave
sub
mov
fnsave
add
pop
inc
inc
adc
ret
jle
testl
xchg
imul
inc
fiaddl
jge
popf
data16
lahf
lods
dec
inc
xor
dec
cltd
mov
repz
int
bound
mov
or
fwait
orb
mov
jecxz
sbbb
jecxz
dec
cmp
add
or
xchg
adcl
clc
iret
daa
or
test
sub
push
xchg
mov
or
adc
iret
ljmp
test
cmp
jmp
arpl
and
xlat
pop
push
xchg
fs
xchg
int3
push
dec
mov
pop
fidivs
cmp
int
sar
push
roll
mov
les
popf
sbb
push
cld
mov
fildl
add
xor
out
fnstcw
ss
mov
idivl
cmp
jno
mov
inc
sarb
je
mov
lock
gs
sub
jo
ficoml
fdivl
rclb
out
mov
sarb
mov
push
lret
dec
dec
adc
icebp
in
mov
nop
sub
ficoms
mov
fmuls
ret
fwait
push
repz
lock
out
and
xchg
push
jns
cmp
repz
cmpsl
outsb
mov
xor
or
xor
add
lcall
cmpsl
std
stos
iret
sub
pop
mov
cld
cmp
leave
mov
in
xchg
dec
mov
add
enter
jl
mov
mov
je
mov
rclb
pop
and
sub
sahf
mov
inc
imul
and
jge
inc
ja
lahf
in
rcrb
mov
movsl
pop
mov
aaa
test
adc
sub
mov
and
sbb
stos
icebp
add
out
out
mov
or
lahf
xor
cmp
jno
hlt
lret
add
mov
das
aam
adc
pop
shlb
out
dec
pusha
iret
jns
or
pop
in
mov
std
movsl
mov
add
lods
cld
ret
mov
add
jl
mov
xor
adc
sar
and
stos
mov
roll
adc
adc
jb
bound
mov
test
addr16
cmp
pop
in
jne
inc
cwtd
adc
dec
mov
mov
mov
mov
jmp
lds
cwtl
int
add
pop
add
rclb
das
es
add
stos
ljmp
out
lret
cmp
in
xchg
ret
rorl
push
das
loopne
sub
mov
xchg
call
fcmovb
aad
bound
push
fcmovne
sbb
sti
repnz
test
pop
pushf
data16
clc
imul
mov
jmp
jns
enter
mov
sub
icebp
lret
xor
adc
mov
icebp
ret
add
cmp
inc
adc
aad
in
sub
movsb
mov
outsb
hlt
inc
stos
mov
lret
inc
add
test
jl
ja
mov
dec
test
sbb
inc
stos
ds
push
clc
js
rclb
dec
mov
push
aaa
jno
jbe
fldenv
cmp
push
out
jb
mov
lret
mov
pop
aas
push
mov
or
icebp
xlat
inc
in
and
loop
mov
xor
iret
aam
push
jae
or
jge
adc
xor
lea
fadd
into
mov
imul
adc
test
jp
hlt
fs
xor
lret
jl
mov
stos
jnp
aas
or
lret
nop
out
roll
inc
cmp
aaa
cmp
or
or
movsb
je
adc
mov
out
in
daa
fs
out
imull
std
cmpsl
cmp
push
and
jne
pop
sub
or
inc
fsubrs
shlb
adc
lods
ret
loop
mov
int
lret
aas
les
ds
xchg
mov
in
xchg
fistpll
mov
push
pop
cli
das
or
cs
add
cmp
ret
aam
sbbb
lods
mov
out
mov
cmp
loop
repz
pop
lcall
pop
jnp
lock
bound
jae
out
popa
cwtl
lahf
cli
rorb
hlt
xchg
jecxz
mov
mov
mov
adc
cmp
add
in
mov
cwtl
push
sar
ja
cmp
in
inc
bound
mov
mov
aaa
shr
xchg
insl
imul
leave
inc
or
outsb
jb
icebp
out
sub
sub
cmc
mov
xchg
gs
xchg
mov
and
cmp
mov
imul
push
adc
fcmovnu
loop
lods
jo
dec
sub
fisubrs
fst
cltd
or
add
pop
add
push
nop
mov
sqrtps
jp
mov
or
lds
push
push
mov
into
in
or
movsb
lret
push
add
sub
dec
shlb
mov
ljmp
inc
or
fisubrs
xchg
out
cmp
jbe
jae
sbb
add
xchg
jle
inc
popa
sub
inc
insb
xchg
xor
mov
mov
or
in
xchg
push
js
test
sub
inc
bound
mov
bound
inc
push
adc
lock
dec
int3
test
mov
aaa
outsl
adc
sbbb
mov
aam
out
jmp
scas
lahf
jp
shrl
clc
mov
and
inc
je
inc
or
lcall
or
test
push
push
xchg
loopne
test
out
xor
insb
arpl
push
mov
ficomps
leave
xchg
aaa
push
icebp
lods
lods
rolb
adcb
hlt
das
std
xchg
sbb
repz
sbb
mov
in
jle
mov
addr16
mov
inc
sbb
inc
jbe
xchg
outsl
mov
shl
push
sbb
popl
push
mov
ljmp
test
arpl
ja
in
mov
jp
pop
push
addl
push
loope
inc
mov
mov
fmul
and
dec
insl
fcom
outsb
cmp
movsl
sbb
cwtl
rcrl
out
inc
mov
sub
add
push
aam
enter
adc
or
mov
jbe
lea
test
adc
add
fs
xor
push
jne
cmp
sbb
jae
faddp
mulb
addr16
gs
aaa
into
mov
stos
adc
dec
xlat
sbb
in
repnz
repz
inc
sub
mov
xor
dec
lret
int3
mov
push
sub
mov
in
icebp
leave
or
mov
icebp
cld
insl
orl
adcl
aas
mov
lods
pop
or
mov
into
mov
xor
inc
dec
sub
cmp
mov
pop
and
sbb
sub
mov
push
add
stos
cmp
out
dec
fldl
iret
call
and
inc
outsl
and
lock
sbb
aaa
cmpb
mov
push
or
mov
pop
jg
pusha
sbb
es
cmp
iret
rcrb
push
xor
lods
mov
pop
xchg
sti
and
imul
ss
lret
aaa
lahf
xchg
mov
jmp
fisttpl
hlt
sub
adc
scas
push
aad
in
enter
push
out
dec
adc
sbb
stos
neg
pop
mov
addr16
push
pop
rorl
sub
ljmp
push
mov
ljmp
popf
scas
cmp
fucomp
fidivrl
fmulp
outsl
mov
xor
pusha
scas
and
mov
mov
cli
or
call
pop
adc
cld
xchg
into
out
rcll
cld
leave
adc
or
iret
push
shll
push
inc
adc
enter
push
lahf
xor
mov
in
and
decl
or
les
pop
out
adc
int3
in
sar
pusha
hlt
shll
test
pop
adc
jbe
xchg
xlat
gs
subl
jle
test
dec
out
hlt
mov
or
in
pop
loope
gs
shrl
mov
push
mov
leave
mov
jecxz
je
inc
je
push
pop
mov
jb
sbbl
in
jo
xchg
les
sub
sbb
scas
and
fcoml
in
lods
dec
mov
adc
test
popf
popf
sahf
nop
int
mov
fistps
loop
lea
mov
adc
jmp
mov
test
lret
mov
lods
jae
cmpsb
xchg
addl
jbe
ja
xchg
js
sbb
jl
das
sub
or
imul
push
inc
mov
sbb
lds
push
xchg
mov
mov
mov
inc
inc
repnz
incb
or
in
adc
and
imul
into
mov
sub
jae
loopne
add
pop
xor
loopne
fisubl
jp
ss
cmp
mov
inc
or
int
fs
dec
sbb
or
inc
push
push
xlat
cld
xor
sub
adc
add
jno
jge
lret
addr16
jo
adc
pop
fcomip
bound
add
ds
mov
or
pop
xor
sbb
xor
pop
movsl
ljmp
orl
pop
pop
and
mov
flds
xor
test
and
and
in
mov
test
pop
je
leave
aam
xchg
lcall
cmp
xor
andl
mov
adc
icebp
ret
cwtl
xchg
dec
outsl
or
pop
jno
push
in
mov
jns
fisttps
stos
lea
adc
sbb
sub
hlt
mov
cli
jns
imul
ret
insl
mov
xor
cmp
inc
pop
clc
ja
xchg
aaa
inc
pop
jns
jbe
inc
aas
ret
sbb
pop
push
sub
xchg
adc
jg
adc
jle
mov
jmp
pop
mov
add
pop
and
ja
jl
imul
es
int
pop
jle
je
adc
adc
sbb
out
xchg
mov
sub
dec
mov
push
mov
pop
xchg
sub
ds
test
xchg
insl
cmp
or
jno
mov
adc
test
sti
shll
mov
imul
jge
mov
maxps
or
test
mov
mov
cs
xchg
jo
and
xlat
fnstenv
mov
pop
dec
stc
pop
mov
test
and
push
xorl
divb
cmp
les
xlat
and
faddl
adc
inc
adc
repz
xlat
mov
lahf
or
ja
pop
mov
int3
mov
icebp
aam
fistps
leave
ret
jnp
pop
nop
cmpsb
jnp
inc
sahf
mov
out
inc
xor
cmp
push
or
cmp
hlt
jne
jns
sub
popa
xchg
pusha
loope
sub
ror
cltd
jne
in
cmp
cmp
cmpsb
mov
adc
fmull
or
jmp
mov
dec
test
fs
push
ret
lods
dec
out
ljmp
aad
pop
adc
pushf
pop
stos
lret
inc
dec
cmp
jle
cmpb
insb
mov
push
inc
push
repnz
sbb
out
test
mov
jge
xchg
cltd
push
sub
jle
mov
daa
adc
insb
adc
jno
push
mull
mov
pop
add
or
fildll
sbb
loop
enter
movsb
sbb
fmull
ja
mov
and
and
pop
adc
scas
pop
mov
and
mov
jne
add
and
inc
ror
imul
mov
lock
pop
adc
or
or
mov
in
ret
lods
jae
popf
sahf
sahf
dec
cli
enter
lret
repz
movsl
fisubrs
mov
push
sti
aas
inc
mov
popf
jecxz
rep
mov
clc
sarb
lods
mov
cli
push
push
imul
in
inc
and
inc
test
jge
out
test
sub
arpl
outsl
pop
sbb
fidivrs
hlt
shl
int
fs
push
cmp
shrb
movsl
adc
mov
and
ficoml
xchg
xor
test
into
add
rcll
cmp
cmp
jb
push
ret
dec
jae
pusha
cwtl
pusha
add
mov
out
bt
cmp
cmp
cld
jp
aad
add
and
test
mov
iret
and
ds
inc
cltd
jecxz
pop
sbb
cld
jbe
shrb
andb
push
test
ficomps
mov
arpl
dec
sub
inc
adc
inc
mov
xor
push
pop
xchg
test
outsl
mov
mov
and
add
or
int3
mov
adc
ss
jne
outsl
jb
shlb
pop
lods
cmp
add
pop
cld
cmpsb
test
in
adc
imul
jecxz
xor
test
inc
les
push
je
sub
pop
add
hlt
mov
sub
sahf
lcall
mov
stos
or
mov
xchg
repz
shlb
pop
lods
out
clc
cmp
dec
cmc
or
push
sahf
lcall
fstpt
sub
jb
loopne
call
in
in
shlb
ljmp
inc
leave
mov
mov
xchg
push
fcmovnbe
inc
and
mov
mov
movsb
xor
aaa
imul
mov
pop
inc
add
into
ffreep
mov
pushf
push
push
aad
iret
jb
adc
dec
sbb
adc
addl
xchg
fimuls
fdivl
mov
sarl
xchg
mov
test
nop
push
jae
jp
cmp
mov
xor
scas
andb
ret
mov
mov
sbb
mov
dec
repnz
push
add
rcr
lock
mov
and
mov
cmpsb
xchg
mov
adc
icebp
imull
push
hlt
cmpsl
iret
pop
je,pn
ss
nop
push
jge
pop
inc
adc
or
int
fiaddl
dec
push
jnp
cmp
mov
jmp
jb
fcoml
cli
rcrb
rep
xchg
hlt
xor
das
jbe
or
repz
out
sti
in
orps
lds
psubusw
fcompl
dec
and
push
and
daa
in
aam
sbb
sbb
das
xor
adc
lret
mov
jg
fsub
sbb
addr16
mov
cmp
or
lret
lods
ljmp
test
mov
add
call
shll
lea
push
icebp
push
popf
jnp
and
cmp
stos
test
test
push
cltd
or
scas
sub
cmp
iret
aas
dec
push
dec
cli
lahf
mov
out
cmp
imul
push
mov
aam
out
mov
cmp
dec
jo
les
add
cli
leave
push
sbb
fwait
ljmp
fcom
xchg
mov
push
popf
or
push
mov
loopne
cwtl
sub
in
repnz
pop
mov
pop
daa
xchg
jmp
in
push
shr
adc
sub
lods
data16
scas
aas
shlb
jmp
lock
add
sub
imull
lret
mov
cmp
push
test
andl
icebp
sub
cmp
or
in
xchg
inc
movsb
push
mov
inc
in
pop
fstpt
push
gs
rorl
sub
test
jne
inc
out
xchg
out
mov
sbb
jp
in
je
inc
popl
adc
inc
arpl
aas
neg
loopne
jg
xchg
sbb
inc
out
lods
pop
sub
lds
xchg
out
leave
xor
shll
lret
movl
mov
test
outsl
lods
fbld
into
lcall
jb
loope
adc
inc
add
mov
pop
andb
pushl
or
pusha
push
dec
std
mov
push
jne
imul
mov
sahf
push
in
and
jl
in
das
cmp
test
into
test
es
arpl
repnz
ret
cmp
insl
adc
jle
iret
subl
lcall
sub
in
xchg
test
lahf
cs
sbb
andl
inc
cmpsl
xor
cmp
sarb
fwait
inc
mov
add
pop
ficoms
or
and
push
sub
add
mov
nop
cs
pop
add
cmpsl
ret
inc
imul
idivl
subb
adc
fwait
rclb
subl
fwait
mov
pop
shll
fistl
mov
inc
mov
push
inc
mov
lods
or
mov
scas
lret
iret
lea
and
mov
mov
std
aam
int3
imul
loope
ja
cmpsl
jg
fistpl
inc
xor
sbbl
xchg
mov
and
cmp
lods
pop
pop
mov
mov
andb
sbb
dec
and
mov
xor
inc
add
bound
push
pushf
fadds
scas
call
cltd
mov
out
jp
xor
int
dec
ja
das
jnp
pop
mov
and
enter
fiadds
inc
xchg
rcrb
scas
lcall
and
je
xor
push
aas
scas
mov
ret
cmp
dec
push
dec
mov
repz
imul
inc
fsub
pop
mov
push
add
ss
cmp
xor
inc
repz
jecxz
mov
xchg
pushf
sbb
add
inc
jl
dec
push
stos
fwait
in
sbb
movsl
mov
je
movsl
sub
jne
mov
inc
cmp
push
cmp
or
sbb
or
sub
int3
les
or
scas
enter
add
sti
pop
xor
cltd
mov
sub
adc
aas
mov
cmp
hlt
cmpsb
in
popf
fmull
mov
insb
rorb
test
popf
faddl
jnp
lea
mov
xchg
add
jns
gs
dec
std
pusha
push
dec
push
mov
loop
adc
iret
add
cmp
xchg
push
push
push
clc
sbb
push
xchg
imul
popa
rolb
lcall
inc
jbe
sarl
adc
imul
push
cli
mov
enter
rclb
shrb
insl
push
addr16
popa
and
push
iret
jno
adc
sbb
adc
jb
cmp
hlt
or
mov
out
pop
add
push
into
dec
xchg
ja
mov
inc
mov
and
xchg
lret
pushf
add
inc
jb
mov
jmp
rcrb
pop
cmpsb
mov
sub
je
xor
popf
cld
ffreep
fdivrl
hlt
cmpsl
xor
mov
xchg
popf
sub
and
out
notb
fmulp
lret
xchg
pushf
fldenv
ja
mov
fs
mov
mov
pop
xchg
mov
push
out
xor
and
jge
data16
sub
loopne
push
pop
xor
jne
ret
mov
imul
lds
xor
pop
dec
outsl
loopne
aas
adc
leave
ret
ficoml
add
cmp
fs
mov
lret
imul
repz
dec
inc
cmp
and
xchg
orb
clc
out
cmpl
or
pop
clc
mov
push
mov
orl
push
xchg
daa
popf
pusha
mov
dec
pop
cli
lcall
jge
das
les
jne
push
lea
sbb
jo
ljmp
out
out
dec
pop
cwtl
or
test
stos
lds
pusha
dec
stc
and
js
shll
sub
out
adc
movsl
xor
out
aaa
adc
adc
stos
xor
or
sarl
xchg
pop
jno
daa
jmp
andb
mov
shll
addb
rol
and
out
add
fmuls
or
mov
addl
and
xor
inc
inc
dec
xor
xor
lock
mov
cltd
cmp
and
cmpsb
cmp
or
mov
mov
popf
stos
or
xchg
test
xchg
pop
jg
add
sti
push
ret
outsb
ljmp
popa
rsm
push
fs
or
jb
ret
inc
inc
mov
push
cli
repnz
leave
inc
cmp
dec
jl
jno
rcr
xor
sahf
mov
xchg
push
sub
iret
test
movl
mov
test
cmp
push
icebp
fcomps
mov
jo
cmp
sub
jo
xchg
imul
xchg
rcrb
fsubrs
dec
mov
jle
fs
inc
ss
inc
in
addr16
pop
rdtsc
jp
sbb
adc
leave
lret
push
push
sub
out
mov
pop
gs
sbb
push
cli
inc
pop
mov
adc
mov
adc
in
das
sbb
lds
icebp
sti
mov
cmp
mov
aaa
and
dec
mov
mov
adc
test
push
cmp
adc
movsl
inc
dec
adc
gs
testl
sbb
scas
mov
add
addr16
pop
xchg
adc
mov
sbb
pop
addr16
inc
dec
sti
cwtl
imul
stos
into
lea
jl
fwait
divb
mov
and
mov
loopne
out
nop
xor
push
repz
push
mov
xchg
xchg
repz
mov
xchg
add
mov
inc
and
inc
ja
mov
cld
pop
aad
xor
sub
mov
xchg
jp
sub
das
mov
popf
mov
or
mov
gs
dec
or
and
test
adc
std
mov
stos
mov
cmp
outsb
dec
stos
fidivl
addb
cmc
dec
test
adc
push
rep
xchg
rcl
dec
cmp
fucomp
dec
addr16
fmul
adc
jne
lods
or
fwait
xchg
pop
fxch
adc
insb
xor
push
popf
loopne
mov
inc
cmc
in
sub
stc
lods
sbb
ror
mov
daa
lock
js
dec
das
lea
and
arpl
inc
gs
xchg
jge
pminsw
add
sarl
dec
ja
cmc
pop
fsubp
pop
stc
test
adc
ret
pop
dec
cmp
sbb
or
mov
xor
mov
hlt
inc
repz
xchg
pop
inc
pop
mov
sbb
aam
xor
inc
jnp
xor
shll
dec
push
call
in
gs
jo
fdivl
mov
stc
pop
mov
idivl
add
sub
insb
adc
insl
lcall
popl
inc
repnz
cmp
pop
mov
or
sub
idivb
dec
push
sbbb
lds
push
push
sub
lahf
xchg
ja
adc
xchg
jle
xor
xchg
add
stc
xor
popa
lret
xchg
adc
mov
aaa
aad
and
inc
stos
imul
loop
mov
loope
inc
aaa
fs
xchg
jmp
xor
mov
mov
mov
outsb
push
push
add
and
insl
arpl
test
push
xor
mul
mov
adc
pop
sahf
cmc
xor
outsb
sbb
fistpll
int3
bound
fsubrs
lods
insb
test
shl
movsl
add
loopne
aaa
mov
sub
outsl
fidivs
push
in
scas
adcl
dec
mov
testb
and
pop
cmp
mov
jno
outsl
out
push
dec
sbb
mov
and
or
and
push
cwtl
lods
jp
outsb
ljmp
mov
out
add
bound
lods
sbb
add
and
sbb
out
mov
repz
mov
and
cmp
iret
sti
das
outsl
bound
loope
xor
out
push
adc
adc
dec
dec
mov
pop
jg
mov
xchg
rclb
inc
lock
dec
push
pop
pop
pop
cs
mov
pusha
mov
movl
sbb
sub
cwtl
xlat
lcall
cmp
adc
adc
jne
loop
adc
jmp
dec
sbb
jno
xchg
cmp
addl
pop
mov
xor
pop
push
cs
dec
imul
sub
push
adc
mov
sub
adc
std
out
push
jne
bound
add
iret
jae
ljmp
xor
or
incl
addr16
cltd
pusha
jns
into
out
ret
inc
jge
cld
mov
clc
adc
xchg
xlat
and
push
inc
jb
or
mov
inc
test
jp
sahf
xchg
mov
into
xchg
cmp
cwtl
fiadds
jbe
idivb
cmp
jge
daa
lock
das
out
or
int3
std
int
dec
ret
mov
cmp
jp
pop
sub
fs
mov
pmaxub
std
dec
sbb
mulb
mov
mov
mov
inc
mov
insb
lods
or
in
jecxz
or
or
mov
jl
outsl
mov
pop
or
jae
sub
icebp
divb
xlat
mov
sub
mov
adc
inc
pop
roll
das
xor
bound
mov
cmp
frstor
sub
add
and
jns
ljmp
je
sbb
inc
jl
in
jp
mov
mov
pop
and
xchg
inc
inc
add
xor
or
addb
pop
test
test
mov
cmp
mov
sti
outsb
rcl
mov
enter
mov
outsb
out
cmpsl
je
lock
adc
mov
sub
mov
scas
xchg
push
mov
adc
inc
cmp
pop
lcall
lds
in
push
adc
shr
mov
pop
stos
or
jnp
mov
mov
jo
aam
je
ret
stc
adc
jne
and
js
movsl
jns
insl
pushf
xchg
jae
popf
pop
pop
fwait
xchg
iret
mov
insb
jae
es
sbb
aaa
loop
call
shlb
clc
shlb
push
or
in
adc
insb
dec
insb
bnd
fcompl
outsl
aad
jae
push
pop
aad
xchg
xchg
je
das
movsb
mov
dec
frstor
cs
and
shll
xchg
mov
dec
aam
rcr
adc
sti
mov
mov
mov
pop
leave
ljmp
cmpsb
lock
orl
cmp
mov
call
push
dec
xor
in
out
mov
popf
call
adc
nop
ds
out
iret
push
js
xchg
xor
aas
xor
repz
sarl
xchg
arpl
in
sti
xchg
insl
sub
jb
imul
movsl
pop
cli
jae
inc
test
xchg
sub
data16
add
les
jb
out
push
pop
shlb
xchg
cld
xchg
dec
cmc
insl
shlb
adc
sahf
ja
outsb
pop
call
adc
fimull
shll
sub
notl
mov
mov
ss
mov
pop
or
stc
mov
cwtl
iret
sbb
sub
cmpsb
adc
add
push
test
mov
outsb
in
imul
aaa
mov
sbb
push
lahf
jno
gs
jge
and
xor
sbb
sub
xchg
add
mov
cmp
xor
sbb
lahf
xchg
call
adc
xor
insl
add
jo
std
xchg
cmp
cmp
inc
stos
stos
test
xor
mov
pop
test
cmp
repnz
nop
sahf
test
popf
adc
cmc
xchg
fidivrs
xchg
enter
jl
add
lds
dec
add
outsl
sti
mov
inc
pop
mov
mov
imul
fisttpll
pand
shl
inc
pop
adc
xor
dec
addr16
dec
gs
rolb
push
mov
add
xchg
mov
jbe
pop
jg
adcb
addr16
sub
sub
push
pop
loope
ss
movq
xor
mov
stc
jbe
cli
testb
ja
mov
cwtl
aam
mov
jmp
cmp
jbe
js
push
loop
vmread
lcall
cwtl
and
loope
aam
jno
sahf
cmp
std
rcl
mov
jbe
leave
inc
shlb
in
and
xchg
cltd
push
sub
xor
int
cwtl
mov
mov
mov
out
aaa
mov
xchg
xchg
cmp
mov
adc
fiadds
imul
sarl
sub
popa
xchg
cmp
incl
iret
loop
dec
mov
bound
dec
mov
loope
icebp
push
sub
adc
out
aaa
jmp
inc
inc
push
or
es
loop
push
ret
mov
in
iret
xchg
dec
add
movsb
into
mov
push
cmp
jle
sub
mov
push
add
mov
xlat
pop
ret
dec
push
pop
sbb
imul
es
mov
mov
push
movsb
jae
ljmp
or
aam
arpl
jne
push
test
stos
cld
or
cs
mov
mov
nop
jmp
arpl
xchg
pop
aas
pop
jp
mov
stos
ds
xchg
add
into
mov
and
dec
lret
and
fcomps
int3
sbb
mov
gs
call
pop
fistpl
jle
sbb
aas
or
inc
xor
cmp
enter
stc
fucomip
enter
xchg
mov
jp
pop
stos
xchg
dec
hlt
xchg
repz
push
scas
cmp
mov
inc
mov
shrb
shrl
jbe
push
dec
push
lret
fs
and
ror
fstpt
shlb
lods
jno
pop
out
xchg
shrl
mov
and
pop
cmp
cmp
insl
pusha
adc
mov
and
or
hlt
mov
mov
fwait
insb
clc
arpl
mov
dec
xchg
and
push
ret
adc
scas
xchg
inc
mov
mov
cmp
lahf
jne
pop
nop
and
xor
addb
cmpsl
pushf
and
lds
clc
inc
lds
addb
jne
and
dec
bound
data16
xlat
mov
lret
jno
cltd
lret
jb
push
sub
push
fnstsw
ds
call
jnp
or
loope
ret
mov
mov
pop
fs
in
xor
psraw
and
aad
imul
lcall
fstps
xchg
rorb
mov
stos
loopne
cmp
mov
push
loope
sbb
add
andl
jl
xchg
call
sub
jb
pop
sub
jnp
pop
dec
jg
pop
xchg
lret
adc
roll
sbbl
jecxz
mov
pushf
in
int
push
and
jae
fucomi
loope
mov
push
addr16
pop
outsb
sbbl
adc
aaa
push
aas
in
sub
jnp
ret
inc
dec
lret
in
add
fdivrl
lock
or
clc
mov
dec
fs
push
mov
insb
pop
adc
mov
mov
repnz
into
mov
and
pop
js
and
mov
lcall
das
into
insb
pop
aam
xor
out
mov
mov
cmpsb
sbb
push
cli
push
mov
jno
inc
loopne
or
andb
jg
sahf
mov
scas
cld
dec
clc
lahf
loop
or
pop
cld
arpl
inc
dec
and
pop
lret
cmp
sbb
lret
jbe
dec
jle
mov
ja
ds
sub
dec
mov
sub
ret
mov
mov
ljmp
pop
add
xchg
sbb
jne
insb
inc
push
sbb
cmp
add
std
ds
data16
lods
ljmp
mov
das
cmpl
or
rcll
int
mov
rcrl
loopne
idivl
loope
mov
xlat
xchg
dec
std
xor
mov
jl
mov
mov
mov
dec
movsb
jg
test
popf
jae
xchg
mov
adc
cli
push
lcall
inc
dec
sub
shr
cmpl
xchg
test
push
int3
jecxz
xchg
push
shrb
cmp
mov
loop
lock
cmpsl
jns
and
addr16
subb
dec
xchg
insb
dec
ss
xchg
movsb
add
movsl
or
icebp
cli
nop
xchg
imul
imul
mov
ljmp
in
push
or
je
mov
in
out
fwait
pop
scas
hlt
push
cmc
gs
mov
jmp
movsl
lock
mov
sub
add
pop
scas
add
sbbl
mov
in
int
sahf
jmp
lcall
out
push
or
sbb
jg
push
mov
sbb
and
or
shl
loop
jb
dec
outsb
dec
adc
xor
arpl
in
inc
pop
pushf
les
sti
out
ss
add
add
ficomps
dec
mov
sbbl
inc
xchg
loopne
cmp
std
cmp
jmp
dec
sub
pop
lock
add
and
out
scas
rorl
lods
add
fimuls
dec
mov
mov
out
sbb
jo
ja
cs
lret
and
rcr
jle
push
mov
stos
rcll
or
popf
add
pop
xor
fwait
mov
sub
ret
clc
mov
popf
adc
xor
movsl
inc
jb
push
shrl
gs
or
movsb
add
push
outsb
adc
int
fstps
jg
dec
fstl
rolb
dec
int
mov
cltd
and
xchg
lret
or
xor
scas
mov
fwait
cmpsl
dec
or
cmp
in
xchg
xor
cmp
inc
xor
shl
lahf
jmp
and
sti
mov
imul
aam
js
mov
or
jb
xchg
lahf
jp
sbb
cwtl
incb
cmp
gs
sub
push
aaa
gs
out
inc
mov
loope
xchg
or
pop
or
mov
lret
stos
cs
or
jmp
repz
hlt
add
xor
or
arpl
clc
into
stc
cli
lods
mov
xor
out
test
xchg
sahf
xor
lret
push
mov
insl
rcrl
and
add
fcmovu
mov
filds
push
scas
jae
jl
mov
testl
mov
fdivl
ss
sub
addl
sbb
push
test
mov
leave
or
dec
adc
mov
pop
sbb
and
test
insl
and
add
add
mov
clc
xor
cmpsb
ja
cmc
lahf
jns
lods
mov
xchg
inc
mov
das
leave
std
add
data16
idivl
mov
jne
lcall
lret
push
and
mov
push
jp
push
sbb
pop
jno
leave
mov
adc
push
cmp
xchg
sbb
inc
fisttpll
in
and
cmp
add
aaa
cwtl
sub
jl
and
cmpb
cs
dec
imul
jmp
addr16
fcoms
loopne
inc
cmpb
das
mov
xor
jp
cmp
es
push
mov
scas
mov
push
jmp
cmpsl
mov
xor
les
loop
xchg
mov
lret
push
mov
scas
loope
add
ret
hlt
int3
push
sub
mov
inc
lret
insb
cmpsb
mov
ret
add
fdivrs
cwtl
fucomip
jb
mov
sbb
rcl
mov
jl
das
dec
pop
xchg
lret
aam
xor
movsb
lock
mov
aam
ss
sbb
xor
cwtl
xchg
jmp
dec
mov
data16
rcrb
loop
lret
les
xchg
sbb
mov
fidivl
adc
jmp
sbbb
int
icebp
jecxz
fs
sbb
pop
mov
sub
scas
shll
add
or
sbb
mov
divl
push
inc
les
and
outsl
nop
icebp
ficompl
test
scas
sbb
iret
add
sbb
adcb
cmp
sbb
and
pop
xor
jmp
jmp
add
jnp
sbb
fnstsw
out
ljmp
pop
test
push
cmp
cld
lock
loopne
lds
scas
cmc
mov
mov
test
data16
js
out
fwait
popa
fcmovbe
mov
inc
pop
or
mov
mov
xchg
and
test
add
push
pop
inc
pop
or
hlt
in
push
ret
xchg
pop
pop
pop
ja
mov
enter
enter
jle
mov
push
fcomi
test
loopne
jmp
sahf
mull
jl
lea
and
sbb
pushf
mov
add
push
ret
mov
add
ss
xchg
xor
sub
shll
fiaddl
ja
enter
xchg
push
mov
shlb
sbb
test
add
xchg
dec
cmp
push
out
xor
dec
pusha
xchg
int
xor
rcrl
inc
stos
jb
lea
cmc
inc
jl
lret
lock
jge
xor
cmpsl
cmp
cld
icebp
adcl
xchg
mov
stc
push
mov
jle
push
pushl
sahf
int3
xor
sub
ja
lock
insb
popf
lds
and
xchg
sbb
pop
shll
int3
xor
popa
pop
push
cli
mov
mov
cmp
inc
sub
bound
ss
xchg
jmp
xor
arpl
loopne
test
repz
mov
pop
ds
add
jmp
dec
sub
mov
jns
jae
lahf
push
jl
adc
lea
int3
sub
ljmp
cli
mov
aam
cmp
shr
inc
scas
test
repz
sbb
sub
mov
aaa
rcrb
push
adc
fstpl
filds
sbb
stos
xchg
push
shr
aas
pop
pop
mov
and
aaa
jl
add
scas
ret
pop
cmpsb
and
pop
sqrtps
jmp
pop
aas
cwtl
push
bound
pop
mov
lds
pop
mov
ret
dec
mov
mov
or
ror
mov
test
mov
ret
movlhps
pushf
xchg
movsl
cmp
inc
fidivrl
jnp
mov
in
lcall
add
fidivrl
ret
fnstenv
out
ret
pusha
adc
mov
dec
pusha
mov
call
inc
adc
shrb
or
jns
cltd
shlb
add
jp
pop
sbb
dec
adc
inc
adc
jp
popf
or
mov
scas
dec
xchg
push
stos
fimuls
fimull
inc
pop
stos
hlt
mov
stc
ret
jbe
in
bound
fsub
adc
repz
sub
or
shll
jg
inc
hlt
or
lret
mov
add
aaa
in
pop
sub
fbld
aam
int3
xor
push
push
jp
pop
rorb
jge
sbb
pushf
push
daa
rcll
adc
mov
sbb
test
jge
and
movb
inc
outsb
gs
mov
jns
shlb
pop
mov
in
insl
adc
les
jns
mov
popa
outsb
and
outsl
jmp
cmp
rorl
pop
sti
movsl
adc
and
call
out
addr16
mov
sub
mov
in
bound
dec
popa
outsl
adc
xchg
or
dec
inc
repnz
jb
das
push
addr16
adc
cmpsb
loop
mov
sub
jb
mov
adc
loopne
pop
add
addr16
xchg
shlb
out
outsl
out
or
xor
pop
jg
stos
lea
leave
xor
out
inc
pop
dec
hlt
cld
jp
dec
pop
imul
sarb
in
xchg
jnp
sub
adc
mov
add
push
testl
jl
dec
mov
or
jb
es
mov
lods
sti
jl
lret
lods
sub
and
dec
pop
mov
sub
and
pusha
mov
je
sti
pop
popf
or
leave
ljmp
sbb
cwtl
mov
jne
push
loopne
nop
pop
mov
loopne
popa
xor
mov
stos
add
jmp
in
test
fisubs
dec
mov
mov
btr
or
lahf
js
in
loop
jno
fscale
out
or
mov
imul
in
pop
jle
xchg
push
jae
ja
lahf
enter
hlt
aad
call
jp
dec
pop
sbb
in
std
xor
in
cmpb
ljmp
into
xchg
std
cmp
pop
out
jae
jg
or
or
add
ljmp
cli
jmp
adc
hlt
aad
repnz
ss
mov
sub
jle
cwtl
cld
jb
xor
addps
cmp
test
dec
and
inc
mov
fistps
push
stos
lds
rclb
mov
out
jns
xor
xchg
push
or
lods
mov
sbb
popa
adc
rclb
pop
or
test
push
fstpt
scas
popf
lret
or
pop
addr16
xor
std
dec
mov
xchg
ficompl
adc
call
stc
jge
les
mov
nop
aad
jecxz
notl
push
dec
mov
movsl
outsb
jno
icebp
cli
test
sbb
cld
xchg
mov
or
mov
mov
ror
nop
mov
shll
mov
add
fldl
xor
lret
adc
mov
push
add
mov
add
ret
mov
sbb
push
shrb
mov
ss
flds
inc
ja
scas
sbb
xor
jno
xchg
bound
mov
or
push
rol
sub
push
pop
or
mov
xlat
in
pop
sbb
xchg
mov
test
jecxz
sub
and
adc
fcompl
push
mov
in
mov
shlb
xchg
jle
pop
and
fdivs
mov
std
shlb
or
inc
out
mov
jbe
sbb
sbb
and
ja
xchg
aaa
in
roll
fdivrl
rclb
jns
or
push
imul
icebp
iret
in
fucomp
mov
cmc
fldt
cmpl
jp
into
lods
sub
ret
push
dec
mov
lods
dec
shl
fldcw
adc
loop
adc
shl
mov
testl
jp
mov
out
cmpl
dec
jne
dec
call
imul
notl
in
fsubrl
inc
or
js
inc
inc
addr16
pop
mov
xlat
add
mov
iret
mov
or
jp
adc
xchg
xchg
fisttps
jmp
dec
xlat
sub
pop
insl
push
jns
sub
pop
aad
cmpsb
xchg
fsts
fnstcw
pop
stc
shrl
mov
jecxz
mov
xor
push
add
fsubrs
mov
aam
mov
das
lods
and
mov
or
in
adcb
dec
dec
mov
ret
and
and
adc
sbb
test
in
jae
out
neg
xchg
out
shlb
jo
xchg
stc
pop
jne
cmp
lcall
mov
movsl
inc
in
mov
clc
sub
popf
dec
aad
cmp
inc
movsl
orl
int
lcall
clc
mov
aaa
add
mov
mov
cltd
jns
push
mov
stos
movsb
push
lods
loopne
arpl
and
mov
sub
add
xor
push
clc
je
mov
stos
fimull
outsb
fwait
rclb
loope
stc
das
jnp
xor
pop
mov
pop
xchg
imul
out
out
mov
jnp
rcrb
movsb
mov
mov
pop
or
shlb
inc
mov
scas
dec
cmp
push
loope
incl
sbb
adc
adc
push
fmuls
dec
fstps
movsl
jl
cmp
or
rol
in
or
xor
cmpsb
or
or
lcall
push
sbb
jns
mov
xor
push
or
jne
loope
push
adc
xor
lods
or
sub
and
mov
dec
int
aaa
pop
je
mov
cmpsb
cmpsb
in
or
pop
xchg
sbb
ret
dec
daa
sub
out
ror
inc
add
out
es
scas
xlat
adc
push
fisubrs
mov
das
pop
enter
les
sub
add
jne
pop
fcoml
lea
repz
jo
dec
pushf
cmpsl
pop
addl
xchg
bound
cmp
jb
dec
jb
std
pop
out
test
ljmp
pop
cmpsl
and
push
shl
dec
outsl
addb
fwait
xchg
hlt
cli
cltd
test
jnp
cmc
imul
out
std
shll
cmc
in
nop
iret
test
into
xchg
shll
xchg
lea
ret
shll
adc
jle
add
cmp
inc
jp
push
fiaddl
sbb
jg
idivl
rol
or
ljmp
adc
setg
adc
fisttps
dec
pop
das
stc
xchg
dec
inc
jp
and
int
push
pop
lret
cmc
loope
xor
std
ljmp
insb
sbb
adc
lock
pop
negw
movsl
insl
xor
jbe
dec
inc
adc
rol
mov
pop
jge
xor
addr16
gs
mov
sbb
pop
daa
mov
pop
cmp
flds
jle
lods
in
loopne
idivl
hlt
sub
aaa
push
pop
mov
pop
call
ret
mov
lret
cli
xor
jmp
fcmovnb
aaa
fnclex
mov
pop
test
push
jae
into
sbb
cmp
sahf
sbb
push
sti
inc
imulb
lock
mov
stos
xchg
dec
aam
jbe
mov
fisubrl
cmc
out
mov
mov
lahf
ret
sbb
sar
adc
pop
aad
pop
int3
adc
mov
lret
je
or
rcr
jge
movsl
cmp
xor
cmp
mov
add
xor
inc
xor
js,pt
xor
imul
mov
push
push
inc
cmp
mov
test
add
add
push
mov
outsl
adc
dec
dec
adc
inc
imul
iret
or
ret
sub
jno
test
popf
push
popf
enter
cmp
and
pop
loopne
cltd
mov
mov
add
pavgw
jmp
mov
sti
push
stos
adc
and
fcmove
push
ds
xor
int
dec
cmpsb
inc
shrb
inc
pop
xchg
out
xchg
pop
xchg
sbb
push
mov
inc
out
mov
push
lods
ds
iret
popf
jg
mov
jb
xchg
mov
daa
add
xchg
push
add
bound
xor
lahf
xchg
add
loop
movsl
cmpsb
jne
sbb
sarb
js
or
lea
mull
inc
sub
dec
inc
jb
adc
jmp
pop
cld
les
cltd
dec
in
out
mov
shr
push
fisubl
test
cmp
pushf
pusha
leave
hlt
popa
inc
aas
out
divl
inc
xchg
add
mov
sbb
dec
push
shrb
out
mov
rcrb
jnp
aam
aas
adc
adc
and
mov
inc
xor
mov
xchg
shll
mov
in
ss
in
push
sbb
and
fbstp
xor
cli
xchg
into
pop
xor
xor
or
rcll
mov
test
jae
xor
insl
in
mov
push
enter
andb
xchg
jecxz
mov
out
cmp
int3
inc
dec
jnp
adc
imul
lahf
or
sub
inc
lret
sub
mov
lods
mov
hlt
sub
rcll
pop
push
adcl
sbb
pop
scas
iret
sbb
jecxz
or
pushf
pop
rcrl
push
xchg
scas
pop
xchg
xchg
inc
push
popf
scas
imul
ret
cmp
daa
jnp
and
dec
enter
mov
mov
into
lret
xor
stc
in
dec
rorb
pop
add
inc
out
push
popf
cmpsl
mov
loopne
jae
adc
jl
cli
bnd
push
mov
or
shl
and
out
lret
sub
mov
addr16
ret
loop
shll
xor
fs
push
gs
pop
push
lock
xor
jg
popf
xlat
mov
sub
push
sub
sbb
xchg
mov
dec
fsubrl
das
inc
xchg
cmp
or
pop
xchg
cmc
jnp
cmc
or
inc
pushf
mov
mov
adc
insl
subl
jno
sarl
or
sub
imul
push
scas
push
inc
mulb
mov
jp
xchg
imul
mov
movsb
push
jg
mov
nop
pushf
inc
cmp
xchg
xor
dec
mov
orb
inc
movsl
push
push
dec
addr16
dec
shrb
movsb
push
cmp
mov
adc
testb
jbe
ja
sbb
loopne
outsl
sarl
cltd
lcall
in
or
adc
or
add
dec
lret
sbb
fucomp
mov
decb
les
cmp
fcmovu
mov
xor
loop
inc
imul
pcmpgtw
shll
andb
arpl
pop
adc
mov
lea
stos
push
sbb
push
out
mov
add
pop
jo
sbb
jbe
cmpsb
pop
inc
ds
jmp
mov
mov
or
inc
sub
and
scas
frstpm(287
cmpsb
cli
lods
jmp
push
dec
and
call
jle
jge
adc
cmp
int3
test
lea
adc
sysret
jg
sub
mov
jg
scas
ficomps
inc
mov
popf
or
add
fwait
push
push
pop
mov
scas
popf
stos
xchg
lret
and
pop
and
scas
outsl
icebp
sub
hlt
add
stc
je
ret
loopne
dec
jno
or
inc
or
add
jle
or
mov
sbb
adc
mov
pop
int
mov
pushf
movsb
out
or
xchg
fisubrl
or
loopne
std
pop
shl
mov
in
int
jp
fldl
jbe
std
mov
arpl
inc
xor
rcrb
xchg
bound
sub
pop
mov
mov
stos
mov
pop
stc
aam
fisttps
std
lret
push
pop
add
adc
out
adc
xchg
push
cmc
jo
cwtl
sarb
aad
xchg
test
shll
add
jge
popf
test
imul
pop
mov
jo
add
xor
adc
inc
repnz
pop
adcb
int3
test
and
decb
test
push
aas
mov
push
mov
push
scas
sbb
ss
mov
js
jge
and
dec
cs
fucom
cmpsl
cmp
clc
imul
lods
inc
fdivl
in
inc
mov
aad
js
and
rorb
inc
div
aam
dec
sub
stc
roll
or
sub
mov
mov
dec
adc
and
rolb
iret
xchg
pop
cmc
sub
outsb
and
scas
xchg
sbbl
cmp
out
sub
rcr
xor
ss
or
mov
or
je
jnp
fst
fisttps
int
icebp
mov
fisttps
aaa
xchg
jne
add
or
loopne
xchg
push
or
loopne
cli
sbb
sbb
pop
sahf
jmp
lea
pop
cmpsl
insb
inc
cwtl
into
sti
cmpb
dec
push
mov
test
dec
mov
popf
pop
enter
fisubl
cwtl
outsl
push
scas
inc
movsl
pop
add
mov
pop
cmp
dec
jnp
test
or
sub
mov
dec
int
xor
sbb
mov
lea
mov
outsb
xchg
add
outsl
adcl
xchg
or
iret
mov
xchg
bound
cs
pop
jle
xchg
or
inc
call
mov
jl
enter
test
ret
adc
ficomps
push
jmp
lcall
lea
cwtl
aaa
or
mov
xor
scas
cmp
fadds
mov
xor
jno
jbe
popf
mov
sub
das
jmp
xchg
push
mov
fadds
mov
cmp
mov
push
or
jecxz
mov
aas
sbb
and
imul
leave
dec
test
xor
mov
lods
add
jno
dec
push
jl
das
cmp
popa
or
mov
ret
sarb
mov
clc
pushl
in
adc
mov
jle
adc
xorb
mov
hlt
dec
loopne
and
mov
out
iret
push
test
and
les
add
pusha
test
imul
add
shll
inc
ljmp
push
outsl
lret
jecxz
sub
xor
rol
imul
sbb
daa
rol
pop
or
repz
lock
cmp
fsubl
test
movsb
adc
push
cmpsb
andl
xchg
add
pop
push
or
int
xchg
dec
xor
shlb
inc
jmp
hlt
aam
fisubl
add
dec
mov
repnz
adc
sbb
adc
daa
fdivp
adc
popa
mov
push
andl
dec
xor
xor
lds
sbb
popa
pop
pop
data16
mov
rep
mov
add
in
push
insb
popa
fcoms
jecxz
mov
xchg
cmp
cwtl
insl
push
adc
add
jle
and
jae
arpl
lods
fmull
sub
add
stos
out
movsl
out
loope
mov
inc
sbb
adc
test
xchg
xor
cmp
fucomi
xchg
stos
bound
push
int3
mov
test
pmaddwd
jb,pt
jg
xchg
cwtl
loop
cmpsb
dec
jl
test
add
push
or
xlat
insb
imul
rcl
mov
jmp
mov
adc
mov
in
jge
adc
rclb
push
add
xchg
jl
add
jl
ljmp
shll
daa
aaa
lea
mov
pop
xsaveopt
test
cmp
mov
shlb
push
in
xchg
mov
popl
cmc
sub
inc
cli
das
jae
dec
xchg
sub
xor
xchg
mov
in
lahf
inc
stos
sbb
out
jmp
jmp
sub
xor
xor
pop
or
repz
push
mov
lods
es
add
and
mov
adc
xchg
iret
into
xchg
add
or
stos
aam
cs
dec
or
ret
insl
pop
lds
mov
stos
fwait
inc
xor
les
outsl
mov
fwait
imul
popa
inc
add
inc
lods
push
jl
and
xlat
cmp
movsb
rcrb
add
pusha
mov
jle
jecxz
stos
adc
adc
fs
stos
pop
sbbl
outsb
xor
mov
pusha
inc
cmp
dec
push
lock
movsb
mov
jle
incb
jae
push
jbe
mov
jne
jno
xchg
cmpsl
test
xor
fndisi(8087
fs
sub
inc
popa
xchg
or
sbb
sbb
jae
ja
mov
cmpb
pop
mov
rcl
test
scas
sti
push
lcall
ret
mov
push
sbb
dec
fcoms
and
dec
sbb
jge
jo
jo
sbb
outsb
mov
lods
jg
lret
adc
cmp
testb
xor
fbld
insb
sub
test
lea
cmp
sub
aad
add
mov
and
jecxz
mov
fidivrl
hlt
rorl
es
mov
jge
std
fcoms
es
dec
xor
aas
cmpsb
rcrb
xchg
push
xor
pushf
or
xchg
movsb
rorl
rcrl
lods
mov
adc
add
dec
mov
sub
inc
mov
scas
aam
mov
gs
mov
mov
cmpsl
pop
jne
scas
insl
sahf
add
subb
mov
jnp
rolb
movsl
pop
push
pop
cmp
or
insl
iret
in
cmp
mov
xlat
sarl
call
pop
pop
xlat
or
inc
or
mov
add
push
dec
stos
mov
fidivs
push
loopne
cmp
xchg
mov
loope
sbb
mov
mov
lds
mov
into
or
add
dec
es
insb
negb
ss
and
and
cmpsb
sbb
fs
loopne
cmp
lahf
mov
test
or
xchg
and
jo
aad
or
inc
pop
pop
enter
notl
fwait
stos
dec
aaa
sbbl
std
push
dec
cmp
cmp
cmpsb
shrb
popf
bound
adc
inc
pop
in
pop
cmpsb
xchg
pop
add
into
in
fstp
loopne
stos
popf
or
xchg
push
and
and
imul
aaa
cltd
adc
test
ret
inc
rcrl
sub
mov
test
hlt
xchg
pop
daa
out
mov
mov
repnz
push
fstpl
aaa
dec
outsb
xchg
daa
push
lea
repnz
cli
sbb
mov
lods
push
int
dec
stc
cmc
pop
xlat
push
sub
xor
scas
addb
out
mov
adc
clc
call
xor
xor
popa
ljmp
int3
inc
or
dec
pop
add
jecxz
sbb
adc
int
lds
adc
mov
addr16
cmpsb
jns
cmp
jne
xor
add
pop
jmp
jmp
push
sbb
js
mov
nop
testl
int3
iret
cli
add
jecxz
pop
in
xor
mov
fwait
pop
repnz
sub
shr
fisttpl
stos
lods
std
pop
aam
clc
push
sbb
or
lds
push
jp
mov
lods
lea
test
loopne
andl
enter
aaa
dec
mov
push
hlt
cmpsl
push
sti
mov
test
adc
push
pop
mov
xorb
mov
xchg
cld
flds
stos
xor
out
mov
jbe
cmp
mov
arpl
lahf
xor
push
push
out
dec
imul
push
divl
aaa
je
aad
mov
xchg
and
std
jno
or
fbstp
cmc
loopne
frstor
dec
dec
jmp
pop
inc
dec
and
loope
pop
mulb
rclb
push
mov
push
bound
outsb
insl
aam
mov
mov
pop
js
or
mov
ljmp
dec
jne
or
push
testb
push
or
jbe
or
test
faddl
cmp
sub
xor
daa
jno
pop
pop
jg
aas
jns
jecxz
and
pop
sbb
xchg
pusha
pop
and
test
ret
xor
ds
dec
sub
pop
inc
outsl
pop
sub
test
add
call
fldt
inc
and
jg
cmpsb
mov
jmp
scas
mov
add
cmc
sahf
inc
shlb
inc
cs
imul
push
lock
popf
sub
jne
or
sbb
mov
fidivrl
push
lahf
aaa
cmp
adc
or
clc
lods
or
jmp
mov
insb
push
loop
mov
jbe
cmc
fstpl
sbb
inc
add
loope
sbb
xor
sti
test
es
and
jae
fnsave
arpl
dec
sbb
movsl
rorb
sbb
jne
or
in
and
fimuls
lds
enter
mov
xlat
lds
xchg
sarl
or
xor
push
jg
lcall
adc
pop
cmpl
sbb
outsl
les
int3
mov
push
xchg
xor
test
movsb
cmp
aad
add
fistpll
pushf
mov
lock
add
out
in
xor
clc
push
pop
xchg
xor
dec
cmpsl
add
sbb
jno
repnz
cwtl
scas
leave
and
pop
fwait
icebp
cmp
test
xlat
ja
loop
sbb
aas
sbb
lea
stos
sti
jge
fs
xchg
pop
mov
icebp
inc
cmp
loop
dec
push
je
addb
xlat
dec
in
jo
sub
mov
leave
lret
pop
and
insb
jno
push
mov
inc
inc
movsb
mov
insl
scas
jmp
lds
push
inc
sbb
or
xchg
shll
xor
pop
cmp
cld
loope
cmp
loopne
sub
sti
pop
mov
cwtl
ficompl
inc
pushf
cmp
mov
bound
pop
sub
aas
jmp
popf
in
imul
fwait
sub
xchg
insb
jne
mov
lea
leave
or
repnz
loope
arpl
sub
jae
mov
push
jl
mov
loopne
push
shlb
or
pusha
or
xor
icebp
test
into
jbe
flds
mov
mov
scas
cmp
and
xor
lahf
xchg
jge
icebp
test
mov
scas
in
or
xchg
negb
icebp
js
mov
sub
fmul
fnsave
inc
jae
mov
movsl
aad
jecxz
xor
std
pop
and
dec
stc
xchg
leave
scas
inc
pusha
mov
fcomps
clc
sub
shll
loop
xchg
jne
in
sarl
xchg
pop
shrl
mov
fcomps
mov
cmp
adc
ds
inc
cmp
fdivp
lds
xchg
test
fs
pop
add
outsb
ljmp
inc
mov
mov
push
cmp
pop
insb
fistl
daa
add
xchg
cs
out
aaa
std
iret
inc
leave
lret
sbb
jle
sbb
nop
mov
add
fcmovnbe
fdiv
and
sub
icebp
inc
mov
call
jp
push
xchg
inc
ffreep
insl
xchg
shlw
mov
pushf
fnsave
enter
popf
insb
or
test
mov
add
rolb
out
mov
mov
jp
mov
popf
pop
icebp
lcall
inc
repz
xchg
fstl
pop
je
fld1
psllw
fwait
sahf
sbb
add
inc
pop
mov
jbe
mov
inc
das
addr16
les
testb
add
lods
pop
divl
popf
aaa
sbb
xchg
adc
shlb
lods
cmp
stc
das
int
jb
imul
mov
jl
loop
adc
or
pushf
insl
sti
mov
push
cmc
xchg
adc
dec
fwait
enter
adc
mov
push
sahf
pop
cmp
aad
lods
push
jmp
mov
test
insl
sub
sub
push
pop
lret
cmp
add
cmp
xlat
data16
push
mov
mov
ret
mov
mov
jecxz
push
sub
pusha
movsb
cmp
or
mov
jno
mov
push
pop
hlt
push
and
loop
std
test
cld
dec
sub
sbb
lcall
ljmp
aad
mov
jae
add
insl
out
das
dec
ds
shrl
outsl
lahf
jge
cmp
fistpl
pusha
mov
pushf
out
data16
mov
jle
sbb
fstl
adc
jnp
fbld
sahf
fnsave
test
test
cwtl
push
lret
data16
sbb
nop
es
rcll
into
sbb
dec
dec
sub
mov
or
push
sbb
mov
ror
ret
sarl
inc
jne
cmp
jg
mov
mov
sarb
lret
fsubp
pushf
cltd
mov
out
mov
pop
outsl
push
addr16
jle
xchg
aaa
mov
hlt
or
es
ss
add
out
sbb
cld
mov
add
or
mov
mov
or
fidivrl
lods
orl
dec
movsb
pop
icebp
scas
dec
mov
pop
ror
xchg
arpl
call
pop
fldt
xchg
add
mov
mov
mov
inc
xor
jno
mov
sbb
and
mov
or
dec
pop
fidivrs
ret
fsubrs
in
inc
pop
daa
add
or
jnp
jbe
pop
cltd
mov
popa
inc
icebp
icebp
mov
in
fwait
mov
lcall
add
outsb
pop
hlt
jle
movsb
loop
mov
stos
mov
scas
mov
xorb
enter
mov
mov
das
push
rclb
mov
xchg
jo
cltd
daa
push
xor
fistpl
pop
xor
mov
dec
cli
pop
mov
cmc
ss
and
dec
add
movsb
mov
pop
insb
sub
inc
arpl
pop
dec
cmc
add
ja
gs
lea
mov
popf
mov
outsb
dec
call
mov
out
lret
cmp
xor
in
pop
popa
lock
inc
adc
stc
xchg
aas
lcall
subl
xchg
push
outsl
dec
test
jno
xchg
iret
xchg
mov
cltd
push
xor
push
int
push
adc
in
cmc
or
or
jmp
dec
ljmp
add
xchg
inc
mov
cmp
inc
loop
faddl
or
shlb
outsl
loope
sti
add
sbb
sbb
das
dec
sub
jp
das
loopne
jb
jecxz
jns
or
jge
seto
push
add
adc
cmc
sbb
sarb
inc
jmp
popf
jecxz
sar
pusha
out
xor
or
mov
call
int
adc
movsl
cmp
dec
ds
and
pushf
mov
data16
sar
pop
sbb
imul
jo
mov
nop
scas
mov
orb
psubq
cmp
push
mov
loop
jl
inc
stos
std
lea
mov
inc
ss
add
lods
pop
ret
mov
fistps
lret
pop
add
add
adc
cmp
jp
xor
pusha
pop
add
cmp
mov
es
lods
xchg
cmp
jg
scas
repz
push
or
pop
and
hlt
push
pop
out
xlat
cli
mov
imul
rcrb
mov
add
pop
stos
inc
jb
cmp
dec
pop
add
xor
sub
push
dec
pop
lods
shlb
sarb
int3
stc
imul
xchg
xor
jge
sub
cs
pusha
dec
sbb
arpl
dec
inc
ss
cltd
pop
insl
cmpsl
sub
call
int3
jne
xchg
pop
movl
and
call
cmp
and
mov
repz
mov
mov
mov
or
jno
xchg
and
or
mov
sub
or
inc
mov
jns
mov
int3
pop
xor
and
aas
and
shlb
pop
clc
loope
je
dec
rcrl
shlb
dec
insb
mov
out
dec
inc
test
dec
add
fadds
outsb
and
ds
inc
add
mov
je
xchg
imul
and
sbb
inc
ficomps
adc
or
mov
movsb
outsb
fsubrs
xchg
mov
sub
add
sub
movsb
movb
cmpl
popf
xchg
bound
pop
mov
sbb
mov
mov
xchg
jle
or
ds
jo
cli
movsb
dec
pop
push
pusha
push
push
mov
ds
mov
lock
xor
pop
loope
leave
movsb
rcrb
inc
sbb
sub
leave
cmp
fcomi
add
jb
jno
jno
inc
iret
push
mov
inc
mov
in
mov
jbe
sbb
inc
mov
adc
inc
sub
mov
mov
adc
out
push
and
rcrl
sub
stos
cli
insb
sub
cmp
aam
jge
test
sarb
push
or
lea
or
in
xchg
aad
adc
xor
sbb
pop
cmp
loop
divb
push
negb
mov
imul
add
add
int3
pop
xor
mov
xchg
scas
add
xor
mov
cmp
cmp
adc
cli
iret
push
rclb
cmpsl
aas
scas
dec
mov
in
movsb
pop
mov
je
aad
repnz
out
jae
repz
dec
cli
adc
je
das
repz
loop
pop
std
ss
pusha
sbb
outsl
aam
in
push
jb
add
cmp
xchg
in
and
or
inc
jecxz
scas
xor
mov
in
nop
hlt
sub
cmp
or
add
jecxz
xchg
stc
jmp
fwait
stc
inc
ja
enter
scas
insb
fadds
jp
sub
aaa
shlb
sbb
xlat
test
ret
test
inc
or
sbb
movntq
out
adc
stos
add
adc
sbb
add
aam
or
insl
shlb
mov
test
add
adc
or
ret
xor
mov
aaa
loope
cmp
pushf
daa
dec
es
shll
arpl
xor
adc
push
fists
inc
out
clc
popf
add
repnz
xor
test
pop
icebp
xchg
jg
ficoml
xor
cmp
mov
jo
push
mov
shll
push
adcl
mov
cmp
mov
dec
push
dec
fldt
push
arpl
aas
aas
je
scas
sarb
fs
cltd
mov
xor
fwait
in
mov
add
lret
test
sbb
subl
lahf
mov
inc
or
loope
or
cmp
fildl
mov
push
dec
imul
mov
add
pop
hlt
enter
mov
lahf
inc
sbb
xlat
or
imul
or
lods
xchg
mov
mov
dec
ja
pop
lods
cli
inc
fwait
and
test
repnz
in
enter
sub
xchg
fstps
test
ljmp
mov
incb
mov
mov
xchg
pop
out
outsl
mov
outsl
mov
stc
fwait
mov
push
inc
aaa
jmp
xchg
cmp
inc
insb
inc
fadds
sbb
push
sub
xor
leave
pop
scas
xor
decb
ret
sub
pop
mov
repz
movsb
mov
fwait
jp
push
sahf
clc
jmp
lret
inc
fs
mov
pushf
mov
ljmp
xchg
inc
andb
sbb
mov
mov
stc
dec
or
into
es
sub
adc
xchg
out
out
jno
xor
sarl
sahf
dec
mov
inc
les
xchg
xchg
lret
or
ljmp
jmp
mov
into
scas
hlt
movsb
adc
or
xor
jno
jbe
shll
pop
sub
push
mov
or
lret
int3
and
into
ret
jecxz
push
loopne
data16
jle
adc
sahf
cwtl
sbb
inc
cmp
fisubrl
sub
insl
test
fmull
mov
adc
cltd
fisttps
lock
fwait
mov
jmp
pop
outsb
cmp
xor
mov
stos
nop
inc
lock
insl
xlat
xchg
es
xor
negl
in
mov
or
aaa
or
mulb
inc
ror
xchg
roll
xchg
and
test
mov
push
in
fdivrs
and
fwait
cmpsb
and
shrl
enter
out
inc
cmp
dec
cmp
scas
or
loope
add
xorb
aad
cmp
xor
sarl
dec
outsb
jg
sbb
mov
and
in
mov
incl
or
outsl
ret
and
daa
iret
pop
dec
push
and
pop
clc
sub
insl
fildll
inc
or
push
mov
push
sbb
cmp
cmpsb
scas
pop
ss
addr16
dec
outsb
test
mov
roll
scas
push
and
dec
aaa
jae
xor
inc
cmpsl
mov
aaa
lahf
cltd
mov
pop
mov
rcrl
cmp
or
negb
cli
in
les
sbb
pop
or
test
out
test
les
jg
push
js
outsb
aaa
and
or
stos
call
in
cmp
lcall
cmpsb
cld
xchg
pushf
sar
lea
in
fcmovne
jmp
decl
popa
xchg
hlt
je
negl
push
xor
scas
imul
sub
cmp
cmp
ds
fsts
dec
sbb
pop
mov
repnz
fsubrs
or
inc
addl
mov
in
inc
or
mov
ljmp
cmc
stos
push
imul
stc
mov
mov
repz
push
push
pop
jno
jg
or
add
test
push
push
inc
orb
xchg
popf
call
dec
movsl
das
jg
cltd
push
clc
dec
xor
hlt
out
out
add
insl
ds
xchg
into
dec
mov
xchg
imul
rclb
sub
cld
mov
push
movsl
jmp
mov
push
negb
ss
mov
mov
dec
jge
sub
divl
iret
adc
dec
js
jmp
push
mov
ljmp
mov
lods
and
xchg
lea
nop
jb
enter
mov
dec
jne
stos
xchg
pop
push
dec
push
in
xchg
sarb
ja
test
shrl
in
push
jecxz
ja
add
aam
sbb
jp
popf
orl
mov
dec
stos
push
addl
fxch
insb
and
jg
call
pop
dec
gs
fnstenv
rcl
addl
sbb
popf
pop
std
negb
pop
ds
sub
aam
les
sub
insl
iret
xor
jb
sbb
xor
loope
in
aam
leave
lock
out
sub
mov
jmp
nop
cmp
imul
xor
popf
and
pop
popf
ret
fstpt
mov
pop
aam
loope
ficoml
mov
fsubrl
sbb
xchg
add
stos
fcmovnb
out
or
inc
pop
sub
dec
imul
popa
mov
flds
js
cmp
arpl
sbb
enter
in
nop
sbb
loop
ret
mov
rorl
sbbb
mov
mov
cli
xor
inc
pushf
lods
sti
mov
clc
xor
jmp
outsl
jp
xchg
mov
cmp
push
lcall
sbb
repz
test
inc
pop
ljmp
out
sbb
das
and
adc
jecxz
ss
imul
daa
inc
add
xchg
sub
jp
sub
cltd
movsb
sti
mov
and
cmp
outsb
data16
test
sub
pop
in
dec
shr
push
out
pop
sbb
xchg
cmc
scas
lret
es
dec
addl
mov
and
je
inc
iret
loope
nop
jp
pop
out
ret
inc
cli
stos
fdivl
lods
repnz
inc
test
enter
ret
clc
adc
mov
outsl
mov
push
lea
or
movl
lret
imul
push
mov
jg
sub
popa
or
xchg
sub
mov
imul
sub
leave
jo
add
pop
cmp
push
pop
fcmovbe
adc
test
mov
dec
jmp
mov
adc
repnz
mov
push
xchg
jb
cmp
push
xchg
adc
sbb
sbb
lods
scas
lods
dec
adc
cmp
sbb
cmc
cmpsb
push
add
pop
insb
add
add
mov
daa
call
lret
insb
cld
pop
jge
dec
cmpsb
or
rep
in
es
sub
xchg
stos
loop
into
push
pop
add
mov
dec
repnz
fsubr
pop
dec
mov
movsb
fs
mov
add
lea
cltd
jle
outsb
pop
out
xchg
jp
lahf
test
mov
xor
jne
rcl
movsl
pop
and
add
out
pop
andl
push
lcall
push
out
dec
jbe
fisubs
jge
iret
jo
fwait
js
loop
mov
jbe
aad
and
iret
out
int3
fldcw
sbb
cli
movsb
jge
out
xchg
pop
ret
mov
and
and
adc
aam
arpl
or
loope
cmc
sti
sarb
or
outsl
mov
sub
das
sbb
insl
mov
jb
lahf
dec
and
fstpl
mov
repnz
popf
outsb
sub
nop
movsb
pop
mov
add
xchg
xchg
xchg
lods
gs
mov
daa
cmp
dec
cmpb
mov
test
mov
mov
cld
mov
push
sub
sub
js
out
sbb
cwtl
lret
je
adc
stc
lods
je
xchg
pop
mov
pop
mov
jns
sbb
mov
cwtl
les
fadd
gs
pop
movsl
ss
sub
adc
add
outsl
push
mov
pusha
mov
std
mov
icebp
pop
ret
mov
lea
fs
popf
xlat
xor
cmc
divl
ss
je
inc
push
mov
fs
decl
mov
inc
xchg
shlb
mov
or
mov
dec
fs
pop
lock
roll
and
lret
cmp
add
push
imul
pop
inc
and
add
nop
nop
and
repz
adc
sti
and
aad
test
int
lds
mov
cmpsl
jne
aad
xchg
xchg
jbe
icebp
int3
sub
jae
or
or
repz
stc
jmp
cld
inc
mov
fnstsw
negb
or
rcr
in
xchg
xchg
movsb
outsl
inc
daa
lahf
mov
mov
or
lea
dec
push
or
or
dec
movsb
inc
iret
in
jb
mov
add
test
or
scas
in
sbb
dec
shr
jecxz
inc
jmp
xchg
fiaddl
inc
clc
mov
test
ss
inc
and
mov
cli
fwait
cmp
in
mov
lahf
pop
add
sub
ret
pushf
add
popa
cmp
mov
push
je
push
fildll
sub
cltd
pop
xlat
mov
aad
mov
add
push
clc
cmp
fwait
and
pop
cltd
orl
imul
js
dec
jmp
mov
in
mov
outsb
pop
jge
xchg
shlb
adc
iret
adc
dec
jo
aas
rol
or
jns
das
mov
jno
cwtl
inc
jb
std
xchg
jge
sub
mov
mov
subb
xchg
mov
repz
mov
adc
push
aam
push
xor
nop
aas
cmp
cmp
pop
push
and
inc
push
pop
outsb
popa
cwtl
inc
push
fisubs
insl
sbb
cmp
call
mov
cmp
jno
and
push
push
scas
cmp
inc
mov
cmp
push
and
js
and
inc
dec
nop
pusha
xchg
or
pop
jle
bound
rorb
std
adc
ret
das
dec
jecxz
mov
roll
jae
mov
fwait
mov
mov
lods
cmp
mov
adc
insl
xchg
xchg
imul
mov
fistpll
aam
out
stc
push
adc
loope
out
stc
addl
out
ja
dec
cltd
outsl
cltd
mov
adc
js
xchg
mov
cmpsl
cmp
push
jmp
or
jno
mov
popa
jle
mov
and
popa
ror
and
xor
mov
sub
imul
jmp
sub
sbb
cmc
gs
mov
fwait
pushf
sbb
lods
scas
mov
stc
push
sbb
pop
lret
add
xor
cltd
sbb
xor
outsl
or
add
pop
dec
jns
xor
dec
shlb
cltd
mov
lret
and
daa
pop
cmc
imul
rcrb
push
shlb
add
pop
mov
sub
pop
stos
addb
lea
test
out
push
cmc
fwait
repz
aaa
mov
repz
scas
aad
jb
sub
mov
sub
inc
test
adc
cmc
sbb
mov
incb
and
das
jae
popa
call
shrl
add
notb
int
iret
xchg
adcl
sti
xor
out
movb
jp
xlat
rorb
mov
mov
inc
popf
mov
push
in
das
cmp
add
fldt
out
cmp
xor
and
dec
inc
inc
dec
inc
mov
in
adc
fistps
fcoml
rcrb
ja
add
mov
xchg
jl
cmpsl
adc
adcl
dec
popa
popf
stc
inc
adc
dec
cld
xchg
out
lret
das
xor
jns
pop
popa
mov
jg
add
inc
lock
sub
movsb
ret
mov
mov
shrl
pushf
pop
jmp
push
repz
popf
fsubs
out
imul
sar
into
jmp
roll
mov
sahf
mov
or
push
jmp
mov
sub
mov
dec
pop
inc
mov
enter
enter
rcrl
add
xlat
adc
cwtl
insb
lds
test
scas
push
aas
xchg
data16
add
cli
popa
cmp
pop
pusha
inc
fsubrs
mov
pop
outsl
fists
punpckhdq
or
xchg
and
and
rorb
push
cmpsl
test
sbbb
rcrl
rolb
iret
and
test
jl
jb
xchg
cmpsl
sub
add
jmp
fadds
bound
jl
daa
mov
cmp
dec
jb
xchg
fstl
mov
cmp
lcall
stos
imul
imul
js
mov
inc
jl
movsb
xchg
dec
mov
sar
mov
test
fnstsw
loopne
ror
push
stos
jns
mov
adc
in
and
mov
sbb
int
or
fnstenv
insl
xchg
xor
xchg
hlt
sbb
call
call
and
je
adc
add
sbb
aaa
push
addl
push
mov
adc
cmpsl
shrb
inc
aas
insl
mov
pop
add
test
pop
inc
pop
sbb
mov
out
lds
pop
mov
pop
dec
dec
push
stc
sti
dec
xor
mov
lods
test
jmp
cmp
sub
es
push
jb
idivl
mov
shlb
mov
pop
cmpsb
adc
test
ljmp
pop
sti
mov
clc
test
lcall
shlb
jne
scas
aad
mov
xor
pop
xor
dec
fdivs
mov
ds
out
dec
and
test
mov
adc
push
mov
add
sbb
test
sub
popa
mov
mov
loope
ja
repz
fwait
dec
cli
int
loop
in
mov
push
adc
bswap
es
xchg
cld
dec
test
sbb
push
push
subl
xchg
dec
sti
mov
fidivrl
sub
push
inc
sub
rolb
cmp
mov
and
imul
insb
pop
dec
jl
and
call
arpl
cmp
or
add
insl
fs
jg
ss
out
fstpl
pop
inc
cmpsl
dec
xlat
sarb
xor
sub
push
stos
rol
and
dec
mov
and
in
jmp
jg
sbbb
and
or
fidivs
adc
mov
sub
jbe
sbb
push
or
dec
pop
hlt
sub
push
mov
mov
test
xor
cs
inc
dec
sub
inc
xor
repnz
pop
xorb
loop
fcom
int3
aad
iret
sarl
or
test
inc
shrb
ret
in
jge
out
mov
dec
lcall
cmc
dec
inc
outsb
js
sub
clc
xchg
fmull
pop
imul
inc
cmp
cld
lock
or
jns
add
cmp
and
in
outsb
aaa
push
jle
imul
pop
mov
int3
push
inc
mov
pushf
jecxz
xchg
adc
mov
ja
imul
pop
lods
mov
test
sub
inc
jl
jmp
loop
dec
test
pop
movsb
sahf
lahf
pop
in
xchg
sbb
cmp
cmp
lcall
cmp
jp
imulb
sbb
xchg
jb
pop
dec
jl
fists
or
fcmovb
inc
je
outsb
mov
lea
dec
and
lods
mov
mov
mov
inc
mov
cmc
sub
ljmp
paddusb
fwait
outsb
push
pop
testb
mov
or
scas
into
sbb
call
ret
iret
mov
inc
fdiv
bound
mov
ret
aaa
ss
jns
sub
call
hlt
mov
test
push
gs
and
std
lods
rorl
mov
jns
ljmp
fsts
stos
or
incb
rcr
dec
cmp
stos
cmp
sub
mov
cmp
mov
inc
lock
out
cmp
adc
sub
sub
mov
or
mov
mov
idiv
fisubl
jmp
mov
xor
lret
mov
jge
push
adc
fsts
mov
sbb
sbb
in
test
adc
popf
out
stos
mov
sti
adc
out
push
scas
xchg
fs
insl
pop
lock
ds
jg
push
inc
sbb
push
inc
aad
adc
adc
and
push
pop
enter
jns
sub
inc
xlat
cmp
insl
adc
inc
fisttps
sub
lods
nop
mov
mov
dec
cld
inc
js
rcrl
or
jp
mov
lcall
je
rorl
ficoml
clc
cmp
cli
xor
cmpl
ds
ja
imul
xchg
in
sbbl
inc
ret
sbb
aad
mov
and
sub
cld
ret
cmp
inc
and
and
cmpsb
cs
shll
pop
js
outsl
sbb
je
inc
jo
clc
inc
jnp
mov
mov
add
aam
add
add
cmp
pushf
add
dec
sub
push
in
sub
xchg
mov
mov
fisttpl
lret
or
xchg
adc
ss
sub
sbb
imul
push
lods
sub
and
mov
or
xor
daa
mov
mov
subb
mov
xor
fbld
jnp
sahf
fistpll
mov
ret
pusha
int
inc
inc
ret
and
dec
inc
xchg
stc
fidivrs
fwait
mov
dec
jl
sbb
adc
push
adcb
xor
enter
repnz
push
pop
or
arpl
ficoms
and
cmp
dec
xchg
cmp
pop
mov
scas
cmp
jmp
js
jne
mov
jmp
adc
push
xchg
add
cmp
sbb
andl
cmpsl
xor
aaa
popf
adc
mov
aas
stos
dec
and
mov
fstl
aad
jae
mov
jo
xchg
lcall
mov
testb
cwtl
cwtl
addr16
mov
pop
inc
sub
lret
sar
stos
or
xchg
insb
xor
xor
xchg
mov
fsubr
and
shl
les
inc
popa
sbb
add
xchg
aaa
mov
ss
mov
test
dec
pop
push
cmp
cltd
jge
xchg
push
cs
dec
outsb
add
outsl
sub
sub
shll
mov
xchg
adc
dec
ret
lods
jae
mov
mov
inc
and
mov
pop
add
adc
or
lods
rolb
jmp
xchg
mov
pop
shll
imul
loop
add
jmp
ja
aam
test
pop
roll
pop
mov
out
sahf
mov
jp
push
sub
test
imul
pop
jg
mov
sbbb
jo
mov
mov
sahf
sarl
sbb
push
int3
add
mov
data16
mov
idiv
xchg
inc
mov
jp
adc
mov
nop
mov
rcrl
stos
pop
jno
enter
dec
pop
dec
jne
or
pop
loop
int3
aam
push
and
push
pushf
ljmp
cmp
cmp
iret
ja
mov
fidivrl
xchg
dec
pop
test
fmuls
dec
xor
fldt
cs
push
or
mov
or
iret
nop
movsl
cmpsb
mov
xor
xchg
cld
in
mov
cld
sub
jge
sbb
loope
and
in
pop
adc
add
jae
cmp
js
cwtl
jl
xchg
pop
in
pop
loop
pop
nop
aam
xor
inc
push
pop
cmp
dec
push
int3
ljmp
leave
lea
fsubrl
into
sbb
lcall
lahf
or
or
cmpsb
and
aad
inc
into
mov
addb
xor
mov
jp
hlt
cmc
jp
hlt
sbb
sbb
subl
push
fnsave
in
and
aaa
int
fs
jns
adc
movsl
adc
ds
repnz
aam
sub
pop
scas
xor
rorb
mov
add
push
mov
mov
mov
pop
loop
xchg
arpl
jb
jp
in
sub
push
mov
pop
mov
stos
pop
sbb
ljmp
sbb
fs
addb
popf
stos
push
adc
inc
rclb
mov
jmp
jbe
gs
mov
sub
ret
inc
xor
adc
inc
inc
mov
aad
stos
das
int
cld
cli
fistpl
add
mov
data16
fcmovne
dec
lea
or
sub
sbb
outsl
add
mov
leave
or
clc
dec
std
mov
popa
ljmp
dec
mov
clc
scas
cmp
xchg
clc
scas
pop
adc
dec
add
icebp
iret
lret
push
push
or
in
daa
sub
add
xchg
pusha
movsb
iret
or
sbb
sbb
lds
adc
mov
icebp
xchg
cwtl
lret
cltd
sub
out
shl
cmp
xchg
enter
xor
mov
cld
clc
push
aam
inc
loopne
xor
das
daa
or
xchg
lock
sbb
test
adc
je
or
sub
popf
cmp
push
data16
and
xlat
mov
cmp
insb
cmp
outsb
push
inc
pusha
test
sbb
xchg
pop
jne
ret
mov
sbb
dec
gs
dec
into
mov
xchg
cmp
cltd
sub
sbb
mov
mov
lock
and
sub
fwait
mov
lock
push
jl
iret
jb
push
push
pop
outsb
ja
call
insb
in
out
cmp
shl
inc
cmp
dec
and
mov
into
sti
sub
imul
les
imul
sub
mov
shr
mov
pop
or
icebp
aad
and
mov
loop
sbb
dec
enter
xor
in
sbb
in
jns
pop
lret
pop
shlb
fisubrs
jmp
dec
fcmovnb
shlb
cli
mov
dec
xchg
cmp
dec
arpl
inc
sub
and
cwtl
inc
xor
sub
cmp
jge
push
push
jae
inc
addl
ror
daa
pop
repz
and
iret
xchg
jmp
pop
pop
mov
jne
movsl
mov
shll
aam
adc
popa
pop
leave
sub
pop
jmp
adc
mov
sub
cmp
pop
cmc
mov
adc
jb
lock
sub
lods
mov
push
repnz
enter
mov
test
je
cli
adc
xchg
pop
cwtl
push
shl
cmp
scas
adc
dec
cmp
or
enter
lret
testl
or
mov
sub
jl
jp
or
fwait
xlat
mov
pop
fistps
fcoms
pusha
std
and
repnz
push
xchg
into
dec
mov
fdivrp
in
adc
fwait
loope
dec
mov
sub
fdivl
repz
xor
adc
int3
cli
popf
cmp
je
jge
xchg
jle
dec
inc
pop
mov
lods
inc
dec
insb
pop
sub
xchg
push
xor
ja
insl
xchg
gs
fdivl
mov
aad
or
and
shr
lock
inc
shl
pop
mov
std
or
push
push
ja
mov
or
inc
pop
or
or
push
mov
and
repz
sbb
dec
mov
lret
ficoml
mov
mov
in
in
aam
mov
aas
jb
imul
xchg
mov
or
push
cmpsl
cmpsl
adc
adc
mov
in
mov
fcomps
sbb
testb
cli
push
pextrw
push
div
xor
xchg
mov
leave
mov
outsl
jmp
movsl
jp
addb
cmp
or
push
cwtl
xor
test
inc
dec
fistl
fidivrs
pop
out
dec
or
add
cli
inc
fld
or
call
pop
lods
xchg
or
or
xor
dec
std
in
lahf
cmpsb
xchg
cmpsl
popa
fcompl
cs
mov
xchg
inc
cmp
push
mov
sbb
fldl
fstps
mov
daa
jne
insb
popf
xor
and
notl
push
add
xchg
test
lahf
movsb
add
or
push
and
pushf
xor
clc
sbb
cmp
and
dec
xor
pop
xor
movsl
pop
cmp
imul
mov
add
fnstcw
das
mov
push
jl
add
xor
mov
jbe
mov
jns
or
sbb
cmp
xlat
lea
mulb
fildl
pop
imul
test
clc
adc
push
lret
decl
xor
cli
jl
mov
or
shlb
outsb
xchg
hlt
mov
or
mov
jp
mov
fldt
ret
push
fs
btr
cwtl
lds
jp
dec
es
ljmp
push
mov
rclb
sbb
icebp
ret
rcrb
cs
cmp
cmpsb
int3
dec
push
pop
in
imul
cmp
mov
into
dec
sti
das
dec
mov
fdiv
call
idiv
sbb
mov
cmp
sti
or
pop
jae
cmpsb
xor
and
cmp
mov
inc
nop
out
and
shlb
scas
out
dec
out
out
push
das
into
sti
scas
inc
gs
sbb
pop
mov
xchg
aad
popa
in
jnp
testl
mov
or
mov
rolb
loope
sbb
push
jmp
mov
into
aas
testb
jnp
adc
xchg
sub
and
jg
pop
mov
fiadds
ret
daa
sub
push
xor
mov
stc
aad
adc
sub
psraw
cmpl
push
in
ljmp
adc
push
pop
pop
sbb
imul
ffree
jle
or
mov
push
mov
ret
std
push
mov
inc
fmull
sbb
inc
lock
add
insl
add
mov
xchg
enter
jbe
sub
mov
sub
inc
pushf
adc
fwait
std
iret
jp,pt
adc
adc
jge
cmp
pop
mov
adcb
mov
lds
int3
mov
fcmovu
les
push
insl
push
inc
jb
gs
cmp
push
cwtl
jo
inc
or
fdivrl
ss
xchg
and
jg
xchg
out
xchg
pop
popf
push
and
pop
pop
jecxz
and
adc
fstpl
mov
or
in
std
push
iret
mov
scas
sub
lret
insb
sbb
mov
lret
add
jmp
loop
mov
sbb
imul
push
mov
pop
call
jg
cs
std
mov
inc
mov
pop
ret
pxor
in
pop
jecxz
sub
in
loop
pop
pop
dec
push
xor
pop
mov
adcl
mov
mov
mov
ljmp
les
stos
or
jecxz
lods
scas
add
jp
push
nop
jno
popa
push
inc
cld
stos
sub
aam
sbb
push
adc
push
test
sarl
cmp
adc
stos
jecxz
rcll
xor
bound
call
hlt
adc
inc
push
into
out
adc
mov
push
cmc
or
out
fnstcw
aam
arpl
push
inc
jle
jle
lret
pop
cmpsl
aad
jmp
jbe
lret
mov
imul
xor
xchg
fldcw
outsb
adc
aas
loope
and
xchg
mov
add
lods
stc
les
lods
aad
fwait
std
pop
sub
inc
mov
loop
cmpsl
cmpl
les
ret
in
mov
and
fs
mov
icebp
mov
push
dec
add
pusha
adc
into
mov
lods
ja
adc
mov
lcall
scas
add
insb
pop
pop
xlat
push
loop
pop
mov
cmpsl
repnz
mov
jbe
stos
aas
stos
sbb
mov
lahf
je
pop
fstps
mov
daa
or
push
mov
cmp
popa
insb
adc
mov
jae
bound
sbb
pop
imul
pop
push
mov
mov
xchg
inc
mov
stc
or
jmp
xchg
inc
push
mov
js
test
adc
or
sbb
popa
in
loope
add
repnz
xchg
push
int3
jns
jb
addr16
loop
rcl
sub
movsl
faddl
int
xchg
jg
jb
incb
pop
push
adc
es
cmp
std
out
mov
xchg
dec
mov
inc
inc
das
mov
divl
gs
loope
or
ficoms
mov
aaa
adc
mov
mov
ljmp
mov
les
fs
test
nop
pop
ljmp
das
and
and
pop
xchg
mov
lods
cmp
aaa
sbb
icebp
cmpl
fldlg2
sahf
arpl
or
test
leave
dec
mov
jle
pop
jl
sub
imul
fistpll
dec
push
cltd
or
and
outsl
out
out
pushf
mov
mov
hlt
and
lock
clc
rolb
cmpl
rolb
xchg
nop
and
xlat
hlt
in
scas
loop
cli
arpl
mov
xor
dec
decb
cmp
or
fnstenv
insl
lret
xchg
int3
sahf
mov
mov
les
pop
sarb
hlt
lret
jae
inc
xchg
push
or
leave
xlat
insl
in
rcl
adc
movsb
add
movsl
jno
fisubrl
in
test
in
xor
int
add
xchg
push
leave
scas
pop
fxch
push
outsl
push
cmp
push
jl
push
push
popf
and
xor
lods
sbb
outsl
addb
push
stc
or
ret
push
ds
cmp
push
mov
xchg
fimuls
jmp
pop
movsl
test
xchg
in
pop
out
push
out
pop
jp
lea
mov
push
dec
iret
insb
add
push
mov
xchg
es
fmul
dec
jnp
mov
jnp
adc
idivl
adc
scas
inc
bound
pushf
inc
or
rorl
enter
mov
imul
cmp
cwtl
mov
xchg
sub
or
and
enter
mov
loop
inc
sti
adc
push
out
loope
rcll
dec
jbe
addb
hlt
mov
lods
push
sub
test
add
incb
push
repnz
mov
mov
sbb
dec
lds
add
jp
mov
adc
divb
movsb
stos
lds
dec
stc
je
pop
mov
call
jl
repnz
fwait
les
or
scas
add
popf
jg
cmpsb
mov
into
jne
mov
sbbb
xor
test
add
jecxz
in
insl
cltd
or
loopne
loopne
jmp
jo
jecxz
andl
xchg
mov
stos
in
insl
ja
setno
dec
push
and
xchg
scas
outsl
cmpsl
inc
push
xchg
in
mov
mov
shrb
int3
push
cmp
xor
ret
lahf
lods
sbb
pop
pusha
or
xlat
icebp
ljmp
mov
mov
or
pop
ds
fisttpl
xor
test
shll
add
test
push
dec
cmp
push
test
pop
jne
dec
mov
ljmp
mov
shl
dec
mull
mov
ficoml
inc
into
loopne
popa
mov
xchg
scas
stos
sub
jb
das
sub
jo
dec
out
lahf
shr
sub
add
mov
insb
inc
dec
mov
jg
inc
bound
xor
test
mov
inc
pop
fsub
inc
movsb
xor
inc
pop
pushf
rcr
add
imul
sbb
out
pop
repz
jae
ret
in
ss
jg
sbb
in
adc
jb
scas
and
mov
call
fidivl
mov
jo
mov
jge
pop
sbb
cmp
pop
inc
push
rorl
adc
mov
pushf
ror
rcrl
mov
fcmovnbe
stos
adc
inc
lahf
icebp
cmp
xor
cmp
jl
scas
lret
cld
ja
pushf
pop
nop
movsl
cmpsl
cmpsb
in
xchg
mov
or
mov
or
add
out
or
stos
cltd
mov
mov
aad
and
lcall
push
scas
sub
dec
cli
aas
pop
lds
stos
add
xchg
icebp
out
out
rcrb
js
cmp
ret
add
push
push
les
pop
dec
xchg
cmpsl
mov
test
out
imul
dec
cmp
outsl
or
sub
fisubrs
lock
leave
test
iret
push
add
dec
out
or
jo
cmc
out
add
sbb
jge
ret
lds
add
cltd
or
iret
adc
cs
xchg
cltd
stos
ja
mov
jmp
mov
push
jl
xchg
jo
push
and
leave
hlt
dec
inc
in
out
dec
insl
cmp
call
test
out
xor
push
das
fdivs
iret
stc
mov
not
push
push
mov
into
mov
sahf
fdivrl
jns
mov
push
jecxz
pop
xchg
mov
cmp
inc
mov
ret
sti
into
lret
insb
out
xor
add
xchg
lret
cld
stc
fs
pushl
or
xlat
arpl
fidivl
je
iret
xchg
cmp
test
in
hlt
push
sbb
mov
push
add
cs
inc
and
inc
jne
pusha
cmpb
cld
add
adc
inc
imul
push
push
pop
pop
mov
data16
xchg
xor
cmpsb
ficoms
and
mov
sbbl
sub
adc
clc
loopne
push
rcrl
jl
pop
inc
pop
mov
movsb
add
sbb
iret
push
int3
jne
xchg
into
stc
sbb
push
clc
aas
adc
push
scas
xor
fldcw
mov
lret
cltd
mov
popl
xlat
mov
mov
mov
mov
scas
out
mov
push
stos
jp
or
add
test
js
sbbb
lods
scas
std
test
pop
subb
and
jbe
xchg
xor
mov
jns
es
dec
or
ja
xor
push
cmp
or
cmc
pop
in
arpl
xor
in
iret
xchg
mov
mov
test
mov
aam
iret
repnz
and
jmp
les
imul
mov
mov
xchg
sub
xchg
pop
roll
in
jno
stos
pop
xchg
jp
fisttps
or
ret
sbb
iret
adc
or
xlat
sbb
cmp
test
fcompl
inc
pop
and
and
mov
pop
clc
push
faddp
jecxz
push
cltd
dec
pushf
inc
cmp
out
push
pushf
mov
pop
jg
sub
in
pop
lods
mov
sbb
xor
xchg
test
xor
stos
jno
in
insb
imul
call
insl
pop
adc
push
dec
pop
xchg
pop
adcb
sbb
mov
sbb
mov
ret
sub
adc
dec
mov
jb
cmpb
sub
dec
ret
sbb
xchg
mov
shrl
lods
cmp
jmp
lahf
loopne
lahf
xchg
jl
mov
cld
stc
xchg
addl
mov
fcmovb
and
jle
pop
sti
es
data16
js
pop
testb
aaa
and
nop
mov
aam
es
inc
jmp
sub
push
jo
scas
push
mov
mov
jp
adc
jns
push
sub
jns
loop
cmp
dec
sahf
std
bound
je
add
and
cmp
and
push
add
je
imull
adc
cmp
jg
and
mov
mov
mov
ret
sarl
jns
jg
adc
add
mov
xchg
dec
xchg
mov
jns
mov
add
bound
scas
pop
cmp
cmp
cmp
add
lea
mov
pop
lret
cmp
jae
in
xor
xchg
movsb
mov
mov
inc
lahf
sbb
adc
js
lock
mulb
inc
popa
adc
push
jle
clc
and
stos
cld
arpl
jne
fucomi
sub
mov
lahf
jl
xchg
mov
dec
mov
iret
jge
push
pop
hlt
cmpsb
add
cli
jecxz
js
stc
cmp
iret
sbb
mov
hlt
pop
push
pop
jnp
xchg
scas
pop
cwtl
cmp
outsl
ss
mov
jle
cwtl
mov
xchg
cld
icebp
sbb
adc
sub
jl
loope
pop
jmp
jge
lea
xchg
adc
dec
sbb
iret
adc
adc
or
inc
or
shll
or
mov
lret
pop
sbb
cmpsl
jp
cmp
xlat
mov
push
cmpl
xor
pop
outsb
fwait
and
pop
pop
xchg
inc
loop
hlt
jg
push
pop
out
cmc
and
jns
xor
sub
sbb
cmp
std
mov
pop
mov
mov
rcr
out
add
cwtl
idivl
mov
adc
shlb
bound
sub
push
and
add
add
imul
sub
lock
scas
cmp
movsl
jns
jb
adc
test
mov
push
stos
out
out
fs
sub
clc
mov
ds
xchg
sbb
mov
iret
add
cmpsb
cli
fidivs
add
icebp
add
popf
jo
jg
repnz
mov
mov
xor
mov
push
pop
data16
jmp
pop
outsl
aam
pop
cmp
mulb
call
icebp
movl
sbb
loop
adc
cmpsb
and
popf
mov
mov
lcall
arpl
imul
mov
ficompl
insl
aad
pop
pop
inc
stos
jns
pusha
mov
jae
movsb
repnz
xchg
aaa
imul
and
xor
loopne
sbb
fidivl
jge
cli
or
jae
stos
iret
sbb
rcrb
stc
mov
mov
lret
and
rcr
push
lds
mov
inc
fistl
repz
inc
pop
shrl
push
sbb
outsl
addr16
xchg
add
or
or
inc
aam
xor
cmp
mov
mov
cld
mov
sbb
scas
repz
hlt
orb
outsl
popf
iret
push
mov
mov
ljmp
mov
mov
aad
loope
pushf
ds
loopne
lahf
dec
xor
push
loop
decl
xor
sbb
test
cmpsb
xor
inc
bound
mov
aam
es
cmc
jne
sub
mov
jo
or
pop
cmc
clc
pushf
lea
push
adcb
ret
and
and
movsl
ror
stos
loopne
ret
inc
shll
mov
sti
push
loope
xor
or
xchg
push
adc
pop
sub
and
cmp
mov
fists
fldlg2
jae
sbb
push
push
jecxz
mov
adc
jmp
adc
sub
or
repz
out
xchg
bnd
insl
imul
shrb
jmp
sti
adc
cmp
sahf
mov
inc
mov
or
imul
inc
dec
shlb
lods
push
das
sbb
gs
into
sub
cli
pop
mov
inc
das
sub
enter
aam
addb
or
pop
push
jo
icebp
cltd
fsqrt
cwtl
inc
pusha
jnp
sti
icebp
hlt
out
jmp
gs
inc
lret
xor
cmp
insl
jmp
push
test
jae
in
fiadds
je
loope
sti
xchg
xlat
dec
sub
inc
out
push
push
jge
fs
jno
cmpsl
sbb
mov
xor
mov
testb
bnd
movsl
pop
nop
ljmp
inc
sub
insb
into
pslld
sbb
out
xor
imul
jp
mov
ljmp
ret
add
addb
xor
sub
add
mov
std
sub
repnz
and
out
ffree
xorl
sub
dec
jne
jle
pop
fwait
push
dec
je
mov
push
cmpl
pop
mov
lret
adc
push
lret
pusha
in
mov
jle
mov
xlat
hlt
fadds
outsl
leave
shrb
je
jmp
xor
fdivrs
adc
cmpl
jmp
jae
loop
out
test
js
pop
fldcw
xchg
lahf
xchg
jb,pt
mov
jmp
and
xorb
repnz
jnp
bound
icebp
in
pop
xor
add
data16
inc
outsb
addl
mov
xchg
mull
js
icebp
insb
mov
add
cwtl
sbb
xlat
mov
or
iret
icebp
or
jecxz
add
push
pop
dec
cmpsb
jle
cmc
inc
cmpsw
adc
cmpb
subb
shrl
jns
movsb
cmpsb
push
mov
inc
add
outsl
and
lcall
fadds
lds
scas
dec
addl
jecxz
loopne
clc
mov
adc
jnp
cmp
mov
push
mov
ljmp
and
cli
mov
aas
add
xchg
out
std
rcr
inc
push
inc
xlat
or
or
xchg
sbb
sahf
and
push
mov
dec
aad
or
push
fimuls
insb
mov
roll
daa
ret
jnp
push
push
inc
fsubrs
pop
pusha
or
mov
inc
sarb
cmp
xchg
add
movsl
or
mov
cmp
fadds
int3
push
lea
cmc
sub
iret
xchg
sbb
leave
push
das
xchg
addr16
push
nop
and
andb
in
pop
leave
fs
jg
pop
mov
inc
pop
rcll
cmc
inc
sbbl
adc
imul
push
xchg
ficompl
pop
sub
and
xchg
lcall
sbb
add
repz
inc
lods
dec
add
cmc
pop
mov
frstpm(287
dec
std
cmpsl
mov
sbb
cmp
test
mov
mov
xor
or
or
jns
push
push
pop
sbbb
jp
popa
loop
sbb
loopne
push
xchg
cmp
stc
inc
mov
scas
cmp
loopne
push
lea
mov
dec
rorb
addr16
lret
lret
insl
jg
xor
mull
in
xor
out
inc
clc
lcall
cmp
xor
imul
movsl
cmc
mov
cld
mov
int3
mov
or
iret
insl
lock
pop
xor
fmull
fwait
out
push
inc
rorl
mov
call
stos
stos
push
sub
cmp
xchg
pushf
xchg
ret
sub
insb
repz
ss
ds
movsl
mov
inc
mov
or
add
in
test
int
xor
mov
and
ret
in
insl
pop
xor
pop
jg
sbb
lahf
shlb
and
lahf
mov
mov
fdivs
sarl
adc
add
pop
push
sbb
push
pop
cmp
dec
mov
pushf
hlt
into
lret
mov
sbb
ljmp
and
pop
cmc
mov
lcall
jno
pusha
mov
pop
xor
xor
scas
andb
outsl
js
jns
ret
ficoms
mov
out
mov
xor
sarl
and
pop
call
mov
loop
dec
js
mov
enter
lock
pop
add
cmp
mov
roll
mov
jecxz
lods
into
mov
mov
sbb
jecxz
dec
jb
ss
cltd
fbld
push
xor
jnp
scas
scas
xchg
loop
inc
repnz
xchg
pop
paddsw
popf
mov
mov
mov
or
fwait
cltd
ljmp
inc
mov
dec
out
xchg
inc
dec
imul
shrl
inc
cmp
dec
sub
repz
and
cs
hlt
add
xor
out
pop
insb
push
repnz
aad
shll
pop
inc
mov
push
xchg
push
pop
inc
mov
pop
mov
push
hlt
add
mov
nop
adc
dec
mov
movsb
es
pop
and
push
lahf
push
nop
push
mov
sub
dec
popf
iret
mov
daa
lock
ret
mov
cs
and
mov
push
fcomip
xlat
cwtl
xor
cltd
pusha
in
xorb
cld
ret
clc
mov
pushf
sbb
test
xchg
dec
inc
hlt
lds
jle
fsubl
adc
pusha
shrl
bound
or
xchg
pop
out
jp
ds
inc
mov
xor
jmp
dec
mov
add
roll
rorl
cmp
jg
hlt
imul
inc
pop
sbb
sub
repz
jge
cltd
shll
test
ss
sbb
popa
inc
popf
adc
xchg
sbb
lcall
push
xor
mov
push
sahf
and
push
stos
rorl
in
add
sti
sbb
push
loop
cmpb
adc
lea
or
js
lds
adc
or
inc
andl
jmp
push
aad
cmp
jae
imul
pop
jo
imulb
mov
sub
sub
jg
mov
sbb
add
xchg
mov
fisttpl
pusha
push
lahf
out
test
adc
in
stos
mov
sub
adc
sahf
xchg
jnp
jg
sbb
out
scas
rolb
sbb
or
cmp
dec
loopne
rolb
stos
push
xchg
pop
cmc
inc
cmp
adc
clc
or
push
lods
push
dec
ret
in
cmp
jl
mov
sub
iret
or
fcoms
xchg
in
nop
lcall
mov
insb
lcallw
pop
cmpsl
adc
js
fldt
in
sub
inc
je
dec
insl
pop
mov
sub
arpl
xor
fstps
pushf
xchg
dec
outsl
in
cmp
aam
mov
and
inc
adc
cltd
ret
adcl
stc
adc
arpl
pushf
and
add
jg
mov
or
mov
add
stos
loopne
int3
jno
xor
dec
mov
ds
jns
mov
xor
jo
cli
sub
push
push
mov
loope
push
call
push
push
cmp
mov
xor
enter
les
popf
push
adc
int3
sub
pop
mov
push
add
inc
outsb
dec
insl
sub
je
cwtl
fwait
cmpsl
push
test
pop
sbb
loop
loopne
nop
mov
rorl
stos
push
dec
nop
leave
push
push
cld
push
add
sbb
cmp
mov
ljmp
mov
mov
cltd
insl
icebp
mov
xchg
add
mov
add
sub
jae
mov
xchg
sub
or
sub
mov
inc
or
pop
cmpsl
ss
int
mov
cld
add
notl
mov
js
sub
sub
adc
pop
ret
mov
and
daa
loop
adc
xchg
daa
into
popf
icebp
ret
scas
fsubl
ret
sub
xchg
leave
jmp
cs
ret
test
es
ret
mov
xchg
inc
int
and
ret
jl
sub
xchg
loope
push
inc
rcrb
fildl
or
outsl
cmp
es
rorl
insl
pushl
add
mov
ds
subl
adcl
outsb
jmp
add
and
movsl
cs
in
add
pop
and
cli
mov
test
mov
inc
stos
insb
jecxz
imulb
mov
imul
pop
rorb
out
mov
cwtl
mov
sahf
out
adc
dec
in
mov
sub
and
std
dec
ljmp
xor
inc
jge
lahf
lods
inc
rcrb
iret
pusha
adc
stos
fwait
or
stos
push
scas
or
adc
pop
imull
push
inc
iret
dec
or
pop
movsl
arpl
inc
xor
dec
fstpl
adc
loop
cltd
in
in
enter
jns
adc
fnstsw
stc
cli
jl
shl
or
insl
call
cmpsl
ret
dec
push
mov
or
pop
sub
dec
je
jnp
mov
pop
jb
or
shlb
xor
imul
jo
faddl
cltd
sub
push
adcb
mov
aad
pop
out
movl
outsl
shrl
es
mov
sub
loop
ret
cld
xlat
jbe
pop
cmp
cmp
nop
ds
stc
outsb
shlb
mov
xor
xchg
cmpl
inc
sbbb
lock
in
add
cli
push
scas
jmp
xchg
lahf
pop
test
xchg
movsb
fnstenv
loope
mov
mov
fwait
push
std
es
lock
or
mov
in
cmp
jne
mov
mov
cmp
adc
gs
push
sarl
in
sahf
repnz
shl
aaa
inc
stos
aaa
icebp
loopne
xor
adc
mov
xor
das
cs
inc
movmskps
xor
js
in
loope
enter
adc
jg
dec
push
xchg
adc
add
add
imul
subl
sub
push
aam
fsubrs
adc
dec
shll
mov
lea
insl
fnstsw
ss
cmp
cmp
into
icebp
dec
xchg
mov
sbb
inc
sub
pop
shl
stos
add
xlat
xorb
mov
jle
mov
mov
xor
test
mov
adcb
jecxz
hlt
push
repz
loopne
add
and
mov
fcomps
mov
fwait
inc
bound
test
les
or
in
roll
mov
popa
icebp
xchg
sbb
sbb
xor
fnsave
push
pop
sub
mov
imul
lods
dec
jns
shrl
clc
mov
xchg
mov
pop
pop
rclb
loopne
push
xchg
sub
add
fwait
out
push
xor
sarb
aaa
js
cmp
in
bound
mov
push
xchg
aaa
lds
lea
pop
in
jno
sbbb
jno
add
ljmp
jb
push
test
mov
std
rolb
test
test
lret
rorl
outsb
pushf
and
fsubl
cld
xchg
sahf
mov
sbb
adc
lods
pop
pop
pop
mov
push
cmpsl
push
ljmp
gs
int3
in
ret
mov
adc
xor
xor
mov
je
std
clc
or
mov
xchg
dec
jecxz
add
cmp
out
lret
movsl
sub
xlat
mov
mov
in
mov
popa
cs
lret
sbb
lret
pushf
dec
pop
repz
inc
loope
jmp
xchg
mov
es
xor
clc
push
fwait
or
xlat
or
scas
sbb
in
pusha
aaa
test
xchg
in
rcpps
andl
sub
jmp
mov
cmp
movsb
jne
nopl
les
adc
pop
pop
dec
lret
les
lock
cltd
iret
aas
xor
pushf
fcmovnb
mov
sub
dec
push
or
mov
cmpsl
xor
dec
mov
xchg
mov
jo
arpl
push
popa
cli
and
arpl
adc
add
inc
aad
jp
push
sub
or
cmp
jge
and
dec
mov
jmp
jb
pop
pop
mov
push
sub
cmp
aam
mov
mov
push
in
fisubrs
incb
cmp
lret
mov
mov
push
into
pop
pushf
loope
dec
sub
call
int3
out
cld
int
pop
dec
xchg
lods
jle
xchg
lods
lcall
rcrl
cs
jmp
dec
add
pop
mov
dec
pop
mov
push
lods
fadds
scas
push
dec
adc
icebp
fidivrs
xchg
popf
insl
or
adc
outsb
cmp
out
repz
rorb
mov
sub
sbb
pop
fdivrp
repz
sbbb
lods
dec
cmpsb
jbe
jo
sbb
enter
mov
mov
inc
daa
out
mov
gs
or
cmp
sbb
popa
adc
lods
xchg
loop
dec
mov
sahf
insl
xchg
adcl
mov
outsl
push
stc
add
cltd
cmp
jbe
mov
js
test
sub
jg
sbb
ss
dec
xchg
ljmp
pop
mov
jnp
cmp
push
mov
js
not
les
pop
fidivrl
cmpsw
mov
int
mov
sbb
and
jge
dec
xchg
jnp
ret
jns
dec
ljmp
dec
sbb
inc
mov
mov
ret
adc
adc
xchg
out
and
mov
jns
inc
jge
cli
test
adc
and
xchg
fwait
mov
push
mov
xchg
inc
mov
adc
arpl
rcr
add
jae
les
gs
aas
fildl
cs
test
xor
fidivrs
jo
dec
dec
outsb
ljmp
idivl
shlb
popa
add
cmpb
addr16
sbb
imul
cld
lock
aas
jle
dec
push
rcrb
mov
mov
pop
jnp
arpl
leave
jne
in
mov
out
xchg
pop
ljmp
rorb
lods
jecxz
aad
jmp
inc
jbe
sub
xchg
jnp
loopne
push
pop
cltd
xorb
jno
test
sbb
lret
pop
jge
add
iret
sub
sahf
add
je
in
pop
push
idiv
and
sbb
rcrb
cmp
xchg
adc
stos
xchg
popf
cmp
mov
rcrb
mov
jno
add
fistpll
clc
sbb
fwait
dec
cmp
ja
daa
ret
inc
jno
lds
ficompl
xchg
mov
in
movsb
xchg
add
push
sbb
inc
mov
fildl
or
je
add
stc
mov
dec
pop
sub
dec
and
call
pop
xchg
call
cs
test
xchg
jl
incl
adc
push
lods
bound
daa
fdivl
mov
mov
adc
lock
adc
incb
jl
xchg
push
mov
mov
jmp
flds
fcomps
mov
add
cltd
shlb
push
imul
cmp
dec
adc
mov
cwtl
lahf
mov
divb
xor
xchg
testl
adc
cwtl
xor
sar
sub
mov
xlat
clc
push
sub
cltd
int
jne
insl
xor
mov
and
jb
jbe
or
jl
pusha
je
in
loope
pop
add
outsb
jle
fidivrs
testb
call
int3
mov
and
mov
loopne
sub
adc
aad
pop
cmp
cmpsb
adc
pop
adc
cwtl
sbb
mov
into
mov
push
mov
xchg
jb
sub
out
mov
dec
lcall
bnd
cmp
in
xor
testl
mov
js
lahf
push
aad
shll
pusha
pop
mov
and
out
fs
pop
mov
daa
xlat
pop
cmpsb
int
cli
or
pop
sub
xor
es
fs
jb
push
mov
mov
pop
cmp
cmpsl
loop
cli
imul
outsb
lret
incb
js
repnz
xor
mov
mov
pop
or
aad
in
jbe
test
jmp
repz
fbld
xlat
cmpsl
and
mov
inc
push
inc
das
jo
or
sub
in
dec
test
add
and
or
adc
fistl
pop
and
cli
and
jge
das
cmpsb
daa
jbe
pop
lods
ja
push
sahf
das
jbe
cltd
sub
cmp
pop
lods
fcomps
xchg
dec
ret
outsb
xchg
push
inc
je
cmp
jnp
xchg
push
enter
out
lds
and
cmp
mov
std
int
outsb
mov
mov
mov
jge
jl
lods
pop
data16
lock
loop
sbb
cmc
dec
aaa
in
lds
xlat
fisttps
inc
mov
mov
jns
or
call
movsb
jo
loopne
lcall
fwait
push
scas
loope
mov
js
ja
das
loope
dec
add
outsb
xchg
mov
sahf
mov
ja
jp
mov
lcall
inc
mov
into
addb
jb
ror
lcall
dec
orl
js
jmp
test
jb
insl
mov
scas
lods
and
adc
imul
push
add
ljmp
adc
fbstp
stos
rcll
sub
dec
addr16
pusha
add
or
xor
inc
cli
mov
lahf
sub
in
sub
out
jmp
mov
inc
dec
cs
jbe
mov
sub
fsub
call
sbb
pop
dec
cld
dec
adc
mov
jnp
sti
sbbb
arpl
push
push
xor
es
ss
jb
ret
hlt
inc
imul
adc
pop
movsl
cs
and
cld
push
loopne
add
rcll
xlat
push
or
jo
insb
cmp
xor
testl
mov
incl
pushf
jbe
inc
je
and
into
out
xor
test
sub
leave
push
sbb
pusha
push
xor
ljmp
subb
sub
arpl
sar
jno
mov
lret
or
imul
sub
dec
stos
mov
xchg
xlat
mov
push
inc
lcall
filds
inc
fwait
mov
adc
insl
pop
mov
js
jge
shl
mov
fldl
ficoml
push
inc
aas
out
icebp
into
cmpsb
test
iret
mov
adc
cs
xchg
ljmp
dec
cs
aad
pop
mov
add
mov
xorb
xor
stc
mov
ret
cmc
cli
in
or
dec
sti
imul
das
pop
call
inc
iret
loopne
mov
add
fstpt
call
repz
test
out
xor
sbb
push
neg
shl
jo
mov
movsb
mov
fcoms
mov
into
jns
arpl
loop
mov
and
xor
adc
addl
stos
and
pushf
push
lret
jl
or
add
imul
ljmp
repnz
lahf
bnd
cmp
shr
jge
jae
mov
notl
push
and
ljmp
arpl
xchg
scas
dec
dec
hlt
dec
push
inc
cmp
mov
push
or
push
stos
mov
in
std
jae
mov
pop
pop
leave
stos
rcrl
iret
sbbl
mov
xchg
clc
jbe
mov
jp
adc
popf
cmp
push
pop
into
push
neg
and
pop
int
lods
pop
inc
iret
outsl
jbe
orb
mov
mov
fmuls
sbb
fdivs
push
addr16
push
mov
out
xchg
push
nopl
aad
jg
fucom
jp
and
jp
cmp
mov
jae
xlat
rcl
pop
out
sub
in
push
mov
dec
lock
les
movsb
frstor
in
ss
mov
sub
mov
lahf
jb
fimuls
jmp
cltd
subb
mov
mov
push
leave
push
inc
adc
lcall
pop
cmp
cmpsb
jnp
call
sbb
call
xchg
in
sub
icebp
cmp
sub
or
mov
lods
lea
daa
and
and
in
mov
jno
lret
push
mov
pushl
test
mov
imul
pop
cmp
push
add
pop
add
lock
add
xor
imul
push
xchg
add
cltd
sbb
jno
or
outsb
ds
stos
pop
cmp
std
jbe
sub
hlt
fldt
jo
pushf
pop
push
ljmp
pop
pop
fsubs
ret
lcall
xchg
xchg
stc
in
xor
mov
mov
mov
xor
pop
pop
jecxz
add
mov
inc
add
js
addl
jmp
mov
xchg
lds
dec
stc
loopne
xchg
sbb
add
ja
into
lea
cwtl
stos
xchg
mov
dec
pop
push
pop
pop
pop
fsts
enter
lods
mov
inc
and
sub
push
orb
xor
in
mov
push
ret
mov
jae
mov
mov
xor
inc
arpl
jno
repz
cwtl
leave
push
add
mov
sbb
dec
cld
addr16
mov
inc
adc
loop
cmp
jge
sub
push
mulb
cwtl
fstpl
jg
push
and
pop
je
xchg
mov
pop
lahf
xchg
mov
pop
scas
inc
sub
fdivrs
fnstcw
push
push
in
mov
std
ja
dec
call
in
pop
jne
pusha
iret
xchg
and
mov
out
xor
aaa
movsb
xor
xchg
je
lods
xor
mov
out
enter
add
mov
jnp
jmp
enter
ljmp
arpl
mov
xchg
pop
pop
insb
mov
aaa
jb
ficompl
arpl
xor
outsl
push
mov
popl
jb
mov
ljmp
scas
scas
movsb
jmp
cltd
shll
pushf
addr16
mov
dec
dec
xchg
pop
mov
cmc
sahf
dec
adc
mov
ret
rcrl
cmc
add
push
push
out
jne
std
shll
dec
daa
rcll
xor
icebp
xor
pop
xor
sbbb
xlat
mov
mov
push
mov
mov
pop
xor
testl
cmp
sahf
in
ja
sub
xchg
mov
or
jle
sub
inc
or
add
jo
rcrb
ja
mov
fiaddl
imul
fcom
jge
aad
push
xchg
jns
and
adc
pop
movsb
cmp
lcall
lret
test
sub
rcrl
push
mov
mov
xlat
arpl
ret
lods
push
sbb
push
movsl
jmp
jg
pop
mov
pop
sti
dec
shlb
dec
addr16
dec
jnp
inc
leave
out
or
fstps
loopne
xorb
push
cld
jmp
iret
mov
in
push
iret
mov
mov
xchg
cld
jl
int
lea
jl
iret
dec
sbb
mov
into
adc
mov
sbb
inc
jmp
das
insb
push
push
scas
inc
cltd
add
push
lcall
lcall
add
scas
mov
sub
inc
mov
xchg
jae
in
adc
js
xchg
faddl
xor
sub
cltd
mov
data16
lods
sbb
sub
insl
jl
test
scas
mov
sub
xchg
sti
jmp
test
push
popf
xor
xor
divl
in
rorb
or
mov
inc
xor
loope
mov
lods
nop
jg
lahf
push
mov
outsb
xor
push
cmp
lret
sbb
xchg
mov
inc
mov
mov
sub
mov
inc
lcall
push
in
repnz
ret
clc
jle
xor
arpl
jo
lret
lahf
cmp
jbe
mov
leave
xchg
or
jmp
jl
adc
int
pop
sub
mov
pop
push
push
cmpsl
int3
std
push
jg
mov
add
in
imul
push
ljmp
jo
ljmp
push
xchg
cmp
cmp
pop
add
sub
into
aaa
inc
cmpl
stos
cmp
xchg
xchg
mov
pop
cmp
and
adc
mov
sbb
mov
idivl
pop
fisttpll
imul
xor
push
out
popa
sbb
pop
mov
cmpsl
fwait
mov
inc
jmp
and
cmp
mov
xlat
rol
icebp
mov
nop
fimuls
cmpb
data16
jae
sbb
cs
lods
pop
mov
gs
sbb
mov
inc
in
loope
test
adc
aas
loopne
inc
cmp
bound
mov
out
scas
repnz
ret
outsl
imul
xor
jns
xor
xchg
pop
mov
movsl
popa
jo
mov
repnz
push
mov
lret
and
cmp
adcl
stos
sarb
in
jb
jo
or
inc
ret
lock
loope
mov
mov
pop
hlt
mov
add
cmp
and
stc
sub
xchg
xor
jae
rdmsr
dec
push
clc
sahf
mov
and
mov
mov
outsb
ret
ficomps
fidivrl
test
shll
push
push
push
pop
add
add
sub
and
cld
mov
inc
dec
les
push
push
sub
roll
cmp
shlb
lock
push
std
pop
mov
fucom
das
lahf
adc
stos
mov
mov
in
leave
mov
inc
push
pop
jmp
push
inc
mov
dec
jge
jno
inc
test
sbb
rorl
or
xor
sbb
push
outsl
push
fsubp
sahf
ss
jg
jp
test
adc
xchg
mov
lock
pop
subb
or
notl
bound
pushf
mov
adc
dec
stos
xor
sub
dec
push
cs
xor
jmp
pop
aaa
rorb
lods
xchg
repz
and
aam
mov
add
and
add
in
inc
insl
sarb
inc
shr
jl
leave
into
lods
lea
or
dec
insb
xchg
sbb
push
fistps
xchg
mov
imul
pushf
jmp
loope
xchg
xchg
aaa
pop
and
imul
jae
adc
fwait
jle
push
imul
jbe
movsl
inc
sub
jo
in
ret
and
pop
push
cltd
lret
test
jmp
add
xchg
push
rcl
fcmovne
icebp
nop
mov
and
cmp
jne
and
lea
in
in
mov
xchg
xchg
xchg
push
or
inc
in
mov
insb
daa
das
pop
cmc
mov
cmp
sub
jp
test
outsb
jno
xchg
out
fwait
sbb
jae
roll
cltd
lods
cmp
inc
out
arpl
mov
push
cmpsb
addr16
lcall
stos
fldl
ljmp
and
dec
mov
sub
or
enter
in
int3
outsl
loopne
add
sbb
stc
adc
clc
stos
mov
adc
loopne
mov
fwait
mov
invd
aam
scas
mov
gs
fmull
outsl
mov
cs
cmp
clc
repnz
mov
dec
push
incb
xchg
xchg
jl
frstor
imul
push
fwait
hlt
movsl
lret
pusha
ret
lds
arpl
stc
xlat
out
punpckldq
mov
pop
dec
xor
lea
daa
je
inc
out
cmp
cmp
mov
dec
rcrb
xorl
or
push
sbb
mov
mov
jecxz
aam
aad
insb
scas
dec
push
push
mov
jle
sahf
outsl
pop
movsl
out
push
pop
jle
xor
or
adc
push
loop
fs
fdivr
add
push
stos
cmp
add
mov
cmp
test
xor
mov
je
xchg
mov
test
icebp
daa
adc
movsl
dec
enter
adc
adcb
and
test
imul
bound
xor
fstpl
adc
cli
pusha
arpl
notl
inc
mov
scas
xor
outsl
xlat
add
ljmp
mov
and
repz
ds
lahf
pop
ljmp
out
mov
inc
inc
dec
roll
push
push
push
push
xchg
sbb
enter
inc
movsb
jbe
pop
pop
lret
es
xor
mov
xor
aaa
lahf
mov
jg
xchg
xor
adcl
andl
scas
add
lahf
adc
sub
mov
jle
or
test
cmp
insb
push
xlat
jl
ljmp
sub
pushf
test
imul
push
outsb
enter
dec
mov
lret
addl
insl
dec
fmuls
iret
mov
cmc
inc
mov
sub
popa
not
pop
cmp
push
lds
sbb
xchg
repnz
js
nop
arpl
push
ret
and
aad
sahf
xor
gs
mov
enterw
les
xchg
mov
mov
andb
mov
fsubl
sti
sbb
sbb
xchg
sbb
cmp
or
xchg
xor
divl
and
and
cmp
sub
ds
stc
add
mov
cltd
les
test
ljmp
xchg
xchg
jnp
in
jl
inc
push
prefetch
insl
imul
cmp
xchg
dec
shrb
lods
sub
repz
js
mov
test
mov
fistpll
sub
les
fwait
xchg
dec
mov
in
mov
push
shlb
inc
and
cmp
test
insl
neg
fcoml
jb
sub
adc
fs
cmc
cmp
jae
lret
fsubrl
lahf
cmp
xor
out
push
pusha
xchg
bound
inc
mov
cmpsl
and
pop
xchg
xor
daa
roll
pop
add
mov
std
loope
push
push
or
js
inc
mov
ficoml
add
push
sbb
and
ret
outsb
fld
mov
pop
testb
mov
rcrl
mov
mov
lret
pushf
leave
sbb
mov
shl
imul
lcall
and
out
jg
imul
mov
pop
xchg
pop
lret
cli
inc
in
cwtl
arpl
subl
adc
enter
fisubl
inc
push
push
or
out
fbld
icebp
outsb
xchg
or
xlat
xchg
out
imul
dec
cwtl
das
outsb
adc
ds
lcall
jle
mov
jge
loopne
outsb
or
inc
fisubrl
xchg
add
mov
cli
push
pop
cwtl
mov
fld
negl
sbb
xlat
and
arpl
cmc
scas
dec
sbb
inc
add
pop
iret
orl
js
fwait
fildl
dec
cltd
dec
add
imul
push
mov
cli
ss
scas
in
out
cmp
fwait
xchg
xchg
push
and
insb
addb
sbb
lret
or
and
sub
fcmovne
sub
test
mov
or
sbb
loopne
inc
cmpsb
or
call
dec
fsub
out
cltd
loop
mov
shrb
add
pop
inc
or
je
cmpsb
jbe
ret
cmp
sti
and
enter
cs
cmp
push
mov
pusha
in
add
dec
imul
mov
cs
clc
dec
sub
mov
les
inc
xlat
js
dec
sti
leave
mov
cwtl
pop
int3
fcmove
push
and
xchg
adc
adc
imul
int
mov
jmp
xor
mov
imul
dec
mov
test
jne
ja
mov
movsb
out
clc
mov
ret
cmc
dec
inc
je
fwait
pop
jbe
stos
adc
sub
shr
nop
fsubs
sbb
mov
cld
mov
popa
push
lds
pop
nop
push
jg
and
cmp
mov
mov
dec
fcmovnb
pop
lcall
aam
fisttpll
xchg
in
mov
push
add
fbstp
sbb
xor
into
xor
fisubrs
add
cs
in
popa
pushf
xor
or
cmp
add
inc
or
nop
push
rdpmc
sbb
sbb
bound
add
adc
dec
xor
fsubl
or
jb
dec
lds
mov
push
mov
xlat
repnz
jnp
daa
lcall
add
popa
hlt
pushf
mov
imul
int3
mov
stc
addr16
dec
in
and
cmp
xchg
inc
shr
shld
call
int3
inc
push
in
mov
dec
sub
lea
cmp
mov
scas
xchg
andl
mov
cltd
mov
inc
int3
adc
mov
or
jle
adc
nop
dec
out
clc
mov
ljmp
shll
scas
jb
dec
xchg
gs
dec
sub
sbb
or
in
adc
rclb
aaa
jecxz
mov
xor
jg
adc
notl
xchg
testb
fs
cmp
mov
clc
mov
mov
inc
mov
lcall
imulb
cmp
leave
push
and
loop
jecxz
mov
aas
pop
testb
ret
push
xor
adc
jae
add
cmp
xor
addb
fldcw
cmp
test
and
fstpt
mov
jo
sahf
fisttpll
sbb
mov
scas
fldl
push
ja
repz
test
mov
jno
sbb
in
pop
int
pop
ss
and
sbb
xchg
cmp
jecxz
xlat
pop
jae
or
fsubl
popa
aad
stos
lds
and
sti
ret
lock
roll
imull
orl
and
xor
dec
adcb
sub
cmc
adc
ret
sahf
jno
xchg
push
add
adc
jp
in
or
hlt
ret
call
roll
push
cld
fidivrl
and
pop
enter
fsubrs
sub
or
addr16
dec
inc
iret
sub
insl
xchg
jnp
insb
das
in
stc
sbb
xchg
mov
inc
mov
sub
and
fimull
clc
or
sub
jae
pop
xor
xchg
sub
dec
outsl
ja
inc
mov
mov
mov
cmp
mov
int3
jmp
or
mov
cmp
ja
push
lcall
xor
add
test
jp
addr16
jecxz
lcall
sub
and
ja
aam
jle
js
xchg
mov
iret
dec
adc
xchg
arpl
fnstsw
cmpsb
rcll
popa
fsubp
mov
out
xor
dec
out
mov
lea
jge
call
ret
inc
fs
lret
sbb
sbb
dec
push
sub
and
hlt
ret
adc
and
stos
mov
les
or
lcall
xor
sbb
fistpll
mov
fisttpl
pop
call
pop
or
int
popa
imul
xchg
mov
insl
mov
test
cmpsb
fists
push
out
ljmp
aad
gs
inc
bound
sub
dec
in
inc
adc
cmp
mov
insl
push
sbb
frstor
cwtl
and
push
pop
pop
scas
mov
sub
mov
js
sub
imul
inc
and
scas
loop
xchg
sub
mov
mov
scas
mov
add
aas
xchg
or
cwtl
sbb
not
sbb
scas
dec
sub
jge
bound
cwtl
lcall
pusha
in
mov
dec
push
and
push
loope
mov
rolb
cmp
mov
movsb
jno
pop
jmp
stos
sub
inc
mov
add
and
sub
add
stos
and
loop
sub
adc
push
cmp
js
jnp
loope
ficomps
mov
in
inc
mov
push
and
jo
fbstp
mov
xchg
les
jo
mov
pop
mov
jp
and
test
out
add
pop
jns
cli
push
xchg
dec
mov
adc
sub
and
pop
comiss
and
sahf
add
mov
je
pop
jecxz
movsb
clc
es
repz
sbb
lahf
in
and
sub
xor
data16
pop
dec
xor
fistpl
orb
mov
leave
xor
daa
adc
xchg
in
repnz
cltd
sub
fdiv
xor
arpl
fldl
in
stos
mov
sbb
int
add
mov
xchg
mov
mov
cld
adc
stc
mov
lret
pop
adc
fbstp
and
bound
subl
aas
pop
stc
in
loop
out
cmc
sbb
dec
loopne
scas
add
aad
scas
pop
pushf
pushf
imul
repz
mov
cmp
mov
xor
xchg
lods
test
pop
jg
iret
popf
addl
ljmp
mov
adc
sub
xchg
out
out
enter
std
rcrb
test
divl
ficompl
bound
adc
add
fs
cmp
lcall
sub
mov
xor
call
pusha
mov
sub
shll
das
dec
int3
jg
xor
dec
mov
cmp
inc
xchg
pop
and
or
dec
pop
test
jae
or
pop
push
dec
ret
mov
push
jp
nop
imul
pop
je
push
arpl
pop
stos
add
callw
adc
imul
ret
cmpsl
in
mov
imul
or
inc
out
popf
cmp
ret
mov
shll
cmp
and
scas
bound
shll
xor
sbb
jns
popa
scas
push
push
dec
aaa
repnz
xor
loope
pop
fs
ljmp
or
and
shlb
push
and
out
cmpsb
lahf
dec
sub
rcrb
lock
cmpb
ds
mov
or
jecxz
divb
repz
mov
ja
mov
dec
jae
test
in
ret
add
aaa
mov
add
jecxz
and
test
inc
cmp
mov
rorl
aaa
loope
loopne
fstpt
pushf
pushf
ror
cmc
cmp
pop
push
lea
bswap
pop
cwtl
mov
movw
lea
ja
pusha
pushf
mov
lea
jb
clc
cmc
push
cmpb
push
pushf
lea
jne
add
shld
mov
call
or
movl
jmp
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
lea
jne
pusha
lahf
mov
push
pushf
lea
jmp
add
movsbw
call
pusha
jmp
pusha
call
add
push
gs
arpl
insb
insb
push
popa
outsb
add
je
or
fs
jmp
mov
pushf
movl
jmp
not
lea
movl
cwtl
lea
lea
push
pushf
jmp
call
loopne
mov
idivb
xchg
popa
fcomps
aaa
sbb
pop
mov
insb
inc
pop
xchg
in
daa
mov
jns
in
addl
xchg
cmp
cmpb
mov
out
fimull
rcl
adc
sahf
aaa
sbb
jmp
icebp
int3
insb
xor
adc
inc
int
push
es
pop
jne
into
push
mul
pop
push
fsub
clc
sahf
sarb
mov
inc
sub
int3
insb
sbb
aaa
aad
jne
xor
add
loopne
dec
ss
rolb
adc
ror
leave
mov
pop
jne
test
shll
xchg
cmp
xlat
lea
pop
mov
mov
pusha
mov
mov
call
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
add
xchg
add
pushf
call
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
xlat
mov
sets
mov
cmc
pushf
stc
test
repnz
mov
push
lea
jne
setge
movb
jmp
add
dec
gs
popa
addr16
gs
add
push
gs
imul
outsb
addr16
add
lock
mul
into
ror
dec
inc
mull
mov
test
fidivl
int3
pop
inc
xchg
and
addb
push
add
rclb
shl
rorl
add
jmp
test
and
subl
cmp
jecxz
jecxz
push
int
jbe
inc
int3
fdivs
dec
pop
xor
in
fs
cmpsl
mov
add
idivl
dec
aad
push
pusha
cmp
mul
lea
data16
inc
pop
xor
je
push
clc
lock
adc
call
es
repnz
icebp
cld
dec
xor
sub
adc
jge
test
sbb
xor
arpl
dec
xor
push
xchg
mov
pop
pusha
hlt
push
into
imul
pop
cmpsb
loop
mov
xor
mov
rolb
scas
std
xchg
cs
clc
sub
pop
pop
in
mov
sbb
sub
jns
pop
jnp
xchg
push
incl
sub
adc
mov
repz
lea
xchg
push
rorb
sub
loopne
dec
sbb
pop
rcrl
in
sbb
test
push
jno
mov
jecxz
push
adc
lods
add
repz
sarl
fwait
lea
sub
nop
bound
jmp
fstps
in
add
iret
in
adc
jle
xor
loopne
nop
push
test
pushf
jle
push
into
ficoms
bound
call
call
inc
std
mul
dec
jae
dec
rcrl
loopne
loopne
mov
test
add
cmpb
or
pop
das
cwtl
push
sbb
jo
popf
xor
pop
lea
lea
add
scas
iret
cmp
mov
mov
repz
ds
lret
repz
inc
in
xor
mov
loope
out
lret
mov
out
mov
xor
or
xchg
push
push
adc
xor
arpl
pop
and
dec
clc
push
orb
fwait
call
jmp
add
jecxz
xor
ret
insl
add
pop
jnp
add
push
mov
xchg
ds
mov
adc
testl
mov
fsubl
mov
pushf
movl
pusha
lea
jne
push
inc
jmp
mov
call
adc
loopne
jns
popa
mov
adcb
dec
jmp
daa
xor
jo
fiaddl
ja
jecxz
mov
jno
loope
add
xchg
mov
cmp
test
daa
jecxz
mov
negl
outsl
cmp
jecxz
xor
imul
jl
test
or
xor
push
add
cmpsb
repnz
add
je
outsl
jns
arpl
add
push
dec
cli
incl
sub
test
dec
in
pusha
stc
sub
jmp
mov
addr16
mul
mov
and
sub
hlt
dec
mov
addr16
enter
mov
sahf
xchg
inc
aam
test
call
scas
mov
in
jns
jbe
mov
push
test
cmpb
sbb
fisubrs
ret
arpl
mov
gs
cmp
dec
fiadds
pop
push
out
pop
cmc
inc
lahf
push
jp
in
mov
push
mul
xor
out
push
mov
xchg
stos
test
outsl
mov
pop
push
cwtl
jle
mov
pushl
push
int
pop
jb
vpshuflw
cmp
sar
cmp
cmp
cltd
aam
jbe
adc
jge
bound
jb
push
mov
sarl
call
push
aad
xor
jmp
in
push
inc
xchg
loope
inc
out
jg
rcll
xor
dec
pop
into
jnp
lahf
push
mul
fldcw
xor
movsl
mov
dec
xor
inc
inc
or
push
pop
ss
jge
inc
sub
xlat
repz
or
cld
es
dec
ja
int
cmp
pushf
sub
out
nop
cmp
cli
mov
stos
shrb
xchg
je
into
sub
out
xchg
xor
sahf
mov
inc
rclb
xchg
pop
mov
aam
pop
xchg
lcall
aad
jmp
outsb
cld
jp
scas
add
out
ljmp
xor
mov
adc
lods
pusha
pushl
lea
jmp
add
push
gs
imul
addr16
js
test
cmp
and
call
pusha
lea
jbe
call
mov
stos
dec
mul
cld
pop
icebp
mov
lahf
xor
xchg
scas
push
mov
or
mov
ds
add
hlt
into
je
jo
scas
jns
in
pop
ja
fs
cmc
sub
xchg
movsb
clc
jge
dec
neg
pusha
mov
mov
and
push
mov
cs
add
outsl
negl
in
int3
mov
and
inc
add
out
scas
mov
sbb
cmpsb
mov
push
or
add
adc
pop
sub
pusha
sarl
push
add
push
xchg
mov
clc
std
mov
sarb
idivl
dec
test
jbe
jns
or
dec
out
xchg
jle
lahf
fsubrs
orb
inc
lret
push
push
dec
shrl
scas
cld
pushaw
push
lea
pusha
lea
jmp
popf
loopne
add
inc
inc
xchg
mov
repnz
mov
inc
adc
dec
mov
es
clc
sbb
cld
stos
gs
lds
stos
insl
mov
mov
pop
arpl
jp
dec
pop
sub
call
int
and
imulb
inc
dec
adcl
stos
pop
lcall
push
or
sahf
pop
call
xchg
pop
movl
lahf
pop
lea
call
inc
jmp
lea
jmp
lea
jae
lea
jmp
out
sbb
mul
push
cld
ljmp
enter
cmp
jl
clc
rclb
sbb
xchg
xor
adc
mov
daa
ja
inc
leave
sti
add
ret
and
pop
xchg
adc
ss
or
cmp
cs
jp
test
xchg
outsb
cmp
cmpsb
dec
mov
shll
stc
pop
dec
fs
lcall
shlb
or
movl
push
pushl
popl
pusha
pushf
push
mov
pushl
ret
or
movb
movb
lea
je
movsbw
sete
jmp
add
inc
gs
outsb
push
inc
imul
jb
xor
sub
inc
adc
sbb
dec
jb
inc
mov
out
cmp
push
loope
pop
xchg
int
jge
pop
push
daa
shr
mov
fbld
push
test
dec
loope
lea
mov
mov
roll
xor
jne
xchg
xor
pop
jg
bound
inc
pop
shrl
addr16
outsl
mov
adc
dec
stos
fwait
ljmp
mov
scas
mov
lea
jne
jmp
xchg
add
mul
sti
loope
cmp
pop
test
xchg
imul
jno
lcall
fdivrl
jno
sbb
inc
push
pop
repnz
and
jb
in
xor
mov
push
add
pop
and
mov
iret
rolb
sarb
lret
cmp
test
mov
daa
jmp
mov
stos
add
mov
sub
clc
add
inc
gs
outsb
jne
je
insl
dec
inc
add
lea
pushf
mov
mov
pushf
lea
call
jmp
push
pushl
popl
pushf
push
mov
pushf
pushl
ret
push
mov
dec
mul
sub
or
adc
pop
std
xchg
ret
cmc
jb
nop
push
std
mov
addr16
sbb
sub
aaa
dec
int
jne
inc
push
jne
out
mov
icebp
mov
dec
jge
lods
xor
stos
das
jbe
cmp
ja
iret
aaa
add
dec
test
stos
pop
lds
movsl
and
test
pop
popf
lret
cmp
adc
sbb
enter
cld
ficomps
dec
fs
pop
adc
pop
xchg
pop
add
inc
gs
jb
jns
jne
jae
jb
push
movl
push
lea
jmp
add
push
arpl
jae
bound
add
inc
gs
popa
je
inc
outsl
jb
popa
je
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
fs
push
call
call
add
push
gs
push
dec
outsl
arpl
add
incl
add
jo
imul
imul
inc
cli
jmp
mov
pusha
neg
call
add
inc
imul
xorl
adc
or
jecxz
sti
mov
jns
data16
addr16
subb
xchg
ret
mov
xor
mov
in
xor
mov
adc
lea
jb
mov
movzbl
sar
clc
adc
shl
shr
movzbw
push
not
bswap
imul
btr
add
lea
push
sbb
movzbw
btr
mov
call
pushf
movb
movl
pushf
movl
pushf
push
pusha
mov
lea
jmp
sub
clc
lea
cmc
cmp
pushf
sub
bt
pushl
popl
bt
stc
clc
pusha
cmp
movw
jmp
add
push
gs
insb
imul
je
add
test
inc
in
pusha
sub
jmp
jge
xchg
dec
mul
mov
jg
inc
loope
mov
pop
movsl
cmpsl
adc
cmp
insl
pop
and
cmc
jae
pop
xor
mov
mov
jne
gs
fadds
xor
sbb
or
push
into
or
xor
mov
ret
pop
scas
inc
testl
js
btc
or
bts
mov
jmp
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
je
push
jb
imul
imul
inc
outsb
popa
bound
arpl
insb
insb
inc
popa
jb
test
stc
bt
or
mov
call
add
inc
jb
ja
gs
inc
add
add
je
imul
dec
jb
inc
js
add
push
gs
outsb
push
inc
imul
push
mul
mov
out
repnz
scas
nop
cs
pop
leave
mov
lock
add
xchg
sbb
daa
mov
adc
int3
xlat
les
push
or
cmpsl
dec
popf
inc
inc
fwait
repz
cs
cmp
lahf
je
xchg
and
mov
mov
xor
and
push
ficomps
adc
mov
test
sub
and
mov
bnd
and
mov
push
lret
stos
fldenv
push
pop
xchg
jo
pop
movsbw
movb
cwtl
lea
jmp
movzwl
jmp
pusha
pushl
popl
mov
pushf
mov
pushl
ret
lea
call
pushf
lea
jne
mov
movsbl
mov
pushf
push
mov
lea
jmp
call
add
push
jns
inc
jb
gs
je
imul
aas
aam
cmp
bswap
movsbw
movzbw
not
mov
jmp
add
push
gs
gs
jae
inc
popa
jo
jne
add
add
inc
imul
jae
popa
addr16
add
add
mul
xchg
lea
std
inc
inc
addr16
ret
lea
sub
add
dec
lret
mov
mov
hlt
sub
or
jecxz
mov
unpckhps
mov
push
popa
push
loop
and
add
push
jmp
add
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
xor
incl
add
gs
je
push
popa
insb
gs
add
outsl
arpl
xor
fs
insb
add
cmp
fs
jb
bswap
cmp
aaa
push
mov
shr
adc
not
rcr
mov
daa
neg
bsr
lea
add
mov
jmp
add
inc
gs
outsl
fs
gs
imul
add
mov
cli
push
add
test
neg
pushl
call
call
add
inc
push
js
inc
add
insl
idiv
decl
xor
xor
xor
mov
inc
add
xor
pushl
movl
shrd
dec
mov
test
cmp
call
movw
lea
jb
jmp
add
push
imul
imul
inc
outsl
jb
popa
je
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
xor
add
cmc
test
cmp
movzwl
sub
bsf
bswap
mov
jmp
cwtl
push
mov
not
jmp
add
push
outsb
push
imul
outsl
outsl
imul
jmp
pusha
mov
inc
mul
das
or
lahf
loope
sub
shrb
inc
pusha
inc
mov
icebp
pop
lret
pop
and
fmuls
scas
jns
cmp
dec
cmp
dec
mov
lock
mov
dec
mov
dec
lds
lret
mov
pushl
lea
movzbw
jmp
add
inc
gs
jb
jae
dec
jb
inc
js
add
push
gs
gs
gs
dec
gs
add
cmpsl
in
mul
ss
inc
test
ja
pop
jge
sub
inc
mov
xor
sahf
pop
and
sbb
insb
rorl
ss
xor
fisttpl
ljmp
mov
insb
mov
push
mov
push
mov
mov
sbb
loopne
mov
test
daa
outsb
fistl
iret
rcll
sbb
inc
sub
sub
in
add
daa
push
dec
pusha
es
cmc
dec
cwtl
cld
mov
movsl
in
inc
aas
cmp
adc
js
idiv
movb
lea
call
call
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
adc
add
bt
stc
cmp
clc
sub
jmp
sbb
loopne
xchg
imul
popa
scas
dec
adc
xchg
xorl
or
repz
stos
xchg
lock
sbb
je
loope
jg
pop
aaa
add
loop
or
add
sub
mov
test
out
pop
scas
popf
rcl
les
test
cwtl
adc
fisubl
mov
pusha
clc
cmp
int3
inc
mov
add
or
test
out
out
int3
push
movsb
and
das
and
rolb
dec
jae
imul
imul
inc
and
mov
push
push
lea
jmp
add
inc
insb
outsl
bound
inc
jb
gs
lahf
cli
clc
incl
add
je
dec
inc
imul
mul
pop
ljmp
fmull
cwtl
and
mov
push
mov
imul
and
out
pop
cmp
mov
imul
test
cmpsb
leave
data16
scas
dec
xlat
xor
cwtl
jmp
in
outsl
roll
mov
gs
jp
ret
cmp
insb
push
push
jmp
or
incl
add
fs
je
push
imul
je
add
add
call
add
inc
gs
gs
je
je
add
ja
bt
test
setg
pushf
add
sub
stc
pushf
xor
mov
test
cmp
push
lea
jnp
jb
pusha
cmp
jmp
adc
jmp
push
mov
inc
mul
xor
popa
das
frstor
dec
rcrl
movsl
pop
arpl
mov
pop
bound
add
cli
clc
mov
mov
mov
or
cltd
mov
aaa
flds
roll
mov
sbb
xchg
add
xor
pushf
sbb
jnp
or
pop
shr
mov
lret
cmp
or
loop
jnp
or
stc
scas
and
aaa
cmpsb
inc
fnsave
dec
mov
repz
ret
leave
mov
dec
push
ss
fsubrs
push
dec
lea
lea
jns
pushf
pushf
movl
mov
push
lea
jmp
pushf
jmp
add
push
gs
gs
jae
inc
inc
add
and
iret
or
dec
popa
jae
inc
insb
je
add
cmp
cmp
pusha
cmp
pushf
push
call
int3
popf
pushf
pusha
movl
call
add
mov
lea
jmp
mov
mov
mov
jmp
cmp
push
pushf
pushf
lea
setbe
mov
mov
pushf
movb
push
jmp
push
jmp
add
inc
gs
insb
imul
inc
popa
je
add
add
je
gs
outsl
popa
jb
push
jns
gs
pushf
lds
mul
push
jno
cltd
jae
lret
sub
jae
andb
xchg
orl
cs
lret
mov
pop
xor
push
aaa
gs
mov
fcmovu
or
sub
in
or
sbb
push
addb
aaa
sbb
jg
je
inc
jb
cmp
shll
pop
jno
iret
in
sbb
pushf
sbb
mul
jnp
repz
xchg
inc
and
push
lods
and
inc
cmpl
push
jg
dec
or
int3
shrl
je
loopne
inc
ficoml
xchg
xchg
fs
push
inc
jae
dec
sbb
cs
out
movsb
je
data16
push
shrl
cmpsb
dec
sbb
pushf
xchg
pusha
inc
jo
mov
mov
mov
dec
rcrl
mov
adc
inc
jge
cwtl
ds
daa
inc
push
je
pusha
cmp
mov
lods
push
jo
cmp
clc
loop
adcb
cmp
call
mov
aaa
movsl
sub
dec
sbb
arpl
cmp
jge
pop
pop
sub
and
int3
lds
xchg
insl
test
fdivrl
aas
lea
push
shrl
xor
mov
cmpb
popa
mov
or
ss
lods
mov
and
loopne
ret
sbb
cmpsb
and
jecxz
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
sub
mul
ds
es
sahf
adc
rcrb
mov
sbb
addr16
sti
mov
gs
mov
add
adc
div
in
fcmovb
xchg
cwtl
sbb
incl
cmp
push
scas
xchg
inc
push
push
adc
out
pop
cmpsl
mov
call
inc
aam
jo
mov
loop
rclb
add
outsl
jae
dec
popa
outsb
fs
add
add
je
gs
inc
js
outsb
je
outsl
imul
push
jb
arpl
outsl
jo
jo
outsb
jne
js
test
ds
stos
int
xor
arpl
mov
and
inc
xlat
out
mov
jnp
lahf
jp
mov
icebp
pusha
or
loope
push
ja
cwtl
icebp
movsb
mov
stc
scas
lea
mov
shll
pushf
mov
pushl
popl
pushf
push
pushf
pushl
ret
pusha
movl
call
movl
movl
push
pushf
pushl
pushl
popl
pushf
mov
pushl
ret
ret
fsts
cmp
mov
jmp
mov
jno
inc
movsb
bound
dec
test
or
es
aam
mov
cmp
push
mov
mov
push
notb
cmp
mov
mov
inc
mov
div
jle
cmp
lahf
or
popf
clc
loope
daa
in
jne
mov
pusha
cmpsb
adc
push
jecxz
loop
cmp
inc
push
mov
lret
push
push
stc
insb
pop
push
sbb
jbe
loop
fs
cmpb
push
outsl
movsb
and
push
mov
adcb
add
push
outsb
push
gs
js
gs
imul
gs
add
push
je
gs
push
add
dec
popa
jo
imul
gs
add
add
insb
gs
imul
jae
popa
je
push
imul
cmp
loopne
pop
test
movsl
mov
fnstcw
xchg
add
lcall
or
sbb
xchg
sbb
in
out
sahf
fwait
in
clc
or
dec
pop
insb
scas
cmp
rolb
jl
das
or
aaa
scas
cmc
dec
xor
orb
aam
pop
jp
mov
fdivl
cmpsl
pop
pop
enter
mov
movsl
mov
mov
mov
mov
roll
cwtl
pop
mov
pop
adc
inc
sar
sbb
hlt
sbb
pop
dec
mov
cmc
mov
mov
sub
cli
inc
inc
and
or
add
mov
mov
movsbl
movzbw
lea
call
popf
cpuid
nop
jmp
jmp
add
inc
gs
outsb
push
inc
imul
cld
iret
into
cmp
loopne
or
mov
ss
mov
data16
jns
imul
loopne
lods
push
cli
lods
xchg
xor
mov
inc
sbb
and
push
mov
jg
notb
push
push
shlb
gs
mov
js
out
pop
ljmp
xor
pop
in
bound
fwait
mov
fsubr
mov
mov
cmc
stc
call
pushl
lea
jne
push
sub
btr
mov
add
neg
add
adc
or
mov
mov
pushf
pusha
test
test
lea
jg
pusha
lea
je
jmp
clc
add
push
xor
add
mov
rcr
cmp
cmc
push
shl
rcr
setbe
push
btc
mov
clc
push
rcl
adc
push
btr
movzbw
xchg
push
xor
xchg
mov
setg
bsr
clc
stc
mov
bsf
movzbw
shl
mov
bt
pusha
or
call
add
push
imul
add
add
outsb
fs
imul
inc
add
shlb
add
out
sbb
cmp
cli
decl
xchg
js
ljmp
repz
imul
cmc
mov
movb
call
add
insb
jae
jb
jo
outsb
inc
add
add
insb
insb
push
imul
jge
mul
xchg
addr16
imul
cmp
push
add
mov
add
mov
adc
pop
dec
and
adc
dec
fs
sub
adc
pop
outsl
stc
push
mov
movb
cli
scas
pop
sub
cli
dec
jl
or
movl
pusha
jmp
call
jmp
lea
push
seta
xchg
mov
lea
pushf
push
pop
lea
mov
push
mov
not
mov
push
pushf
mov
call
clc
cmc
pusha
add
push
pusha
mov
pushl
pushf
lea
jmp
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
dec
arpl
imul
scas
inc
movsb
add
cmp
pusha
pushl
popl
pushf
pushf
push
pushl
ret
pusha
pushf
call
xchg
lea
jne
mov
pushl
not
bswap
lea
movsbw
push
pusha
not
pusha
jmp
push
not
jmp
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
push
ja
jb
add
add
jbe
inc
inc
add
lds
jmp
or
pushf
lea
jne
bswap
test
and
mov
stc
sub
xor
mov
bsr
xor
clc
adc
mov
bts
movzbw
not
mov
xor
movsbw
shl
mov
shr
cmc
mov
cmc
and
setl
mov
push
rol
cmc
pop
mov
lea
shld
call
mov
movl
pusha
pushf
pusha
lea
jmp
pushf
lea
call
bts
xchg
bts
btc
pop
bsr
mov
jmp
xchg
shr
aaa
mul
cmp
test
hlt
mov
insb
jbe
pop
and
jb
lret
mov
mov
fsts
sbb
arpl
jge
xor
popf
add
ds
lds
mov
cmp
imul
cmpsl
popa
mov
sbbl
data16
inc
jg
mov
cmc
orl
push
cmp
fsub
or
pop
inc
sbb
aaa
adc
movb
into
push
rorb
fcmovb
pop
xchg
cltd
push
imul
add
sub
push
mov
clc
mov
lcall
sub
std
popa
insb
repnz
inc
aas
pop
push
jp
nop
sub
arpl
dec
xchg
push
clc
fstpl
loop
sub
push
pop
ja
push
cmp
cmp
clc
dec
mov
lea
adc
pop
sbb
adc
pop
jne
roll
test
sub
aad
pop
ficoms
lcall
xchg
ljmp
adc
push
sti
ss
xlat
addb
inc
mov
xchg
shlb
dec
mov
sub
inc
push
mov
or
cmp
xchg
int3
cli
fsub
add
inc
gs
gs
inc
imul
and
jno
push
push
mov
lea
jne
sbb
shld
setno
bsr
mov
test
cmp
cmp
pushf
pushf
lea
ja
setbe
call
or
pusha
movl
lea
jne
bsr
pushf
mov
call
add
inc
imul
je
imul
ss
in
out
rorb
add
or
aaa
sti
lahf
cmp
xor
in
aaa
mov
insl
mov
push
mov
fbstp
jb
fcomip
add
sub
push
jge
sub
ds
int3
jne
sub
adc
out
test
aad
mov
aam
cltd
aaa
icebp
mov
push
cltd
push
xchg
loop
push
pop
fistps
rcrb
fisubrs
add
cmp
dec
roll
mov
mov
pop
adc
mov
cwtl
sbbb
mov
xor
ret
xor
dec
outsb
jae
jb
dec
outsb
jne
je
insl
inc
add
push
lea
call
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
jae
jb
gs
jne
je
inc
dec
inc
add
popa
xor
and
loope
loope
pop
inc
cs
in
push
sub
dec
cmp
aaa
sub
pop
inc
adc
jecxz
dec
xor
push
loop
das
lcall
jno
jecxz
inc
pop
sbb
push
pop
fldenv
imul
into
adc
xchg
jg
sub
jo
pop
iret
in
cmpl
loopne
out
sub
adc
lods
adc
xor
adcl
jmp
aad
xor
pop
pop
pop
sub
mov
cmpsl
les
add
jne
mov
push
add
in
dec
fwait
or
mov
imul
int3
dec
dec
jae
ss
addr16
ficoms
add
sub
xlat
test
adc
pop
pop
sub
les
mul
adc
bound
lods
adc
and
mov
outsl
jle
sbb
xchg
cmpsl
dec
iret
sub
add
or
mov
push
icebp
inc
pop
sti
daa
test
scas
mov
jno
xchg
fcmove
insb
stc
leave
mov
mov
dec
lahf
xchg
sarb
jns
mov
scas
push
add
fs
jne
mov
adc
daa
xchg
push
and
cmc
sbb
cmp
adc
mov
adc
addl
imul
push
gs
imul
imul
add
inc
gs
jne
jb
outsb
je
push
dec
add
mov
lea
shl
shl
stc
pusha
mov
and
not
shl
rol
xchg
setg
shrd
inc
mov
bswap
bt
jmp
add
inc
gs
imul
imul
jns
add
movb
pushf
pusha
pushl
ret
setge
mov
movb
pushf
mov
bswap
call
add
push
arpl
insb
gs
mov
add
pushf
lea
ja
pusha
movb
test
cmc
add
lea
pushf
pushf
clc
or
movb
lea
je
cmc
cmp
jmp
and
xor
loopne
js
adc
mov
idivb
cmp
clc
pop
mov
pop
xchg
cld
xchg
test
aas
jmp
pop
cmc
add
add
out
nop
pop
sbb
cmp
mov
int
cmp
ljmp
adc
pop
test
xor
loopne
sbb
imul
push
out
jmp
cmc
js
pushf
push
mov
dec
mov
out
xchg
stos
mov
and
mov
mov
jae
outsl
repz
jb
sbb
sti
cmpsl
mov
add
lds
jae
gs
jecxz
pop
fmuls
add
call
outsl
cmp
adc
aam
xchg
loop
dec
push
mov
xor
xchg
push
jne
outsb
aas
xchg
jno
loope
outsb
in
mov
loope
dec
sbb
out
shlb
repz
rclb
sbb
jl
pop
push
call
xchg
sbb
movsbw
mov
rol
mov
clc
cmp
shl
xor
sub
rcr
sbb
clc
mov
stc
bts
mov
bsr
movzbw
dec
stc
mov
bsf
push
mov
btr
add
pop
cmc
mov
not
mov
bswap
bt
sub
btr
inc
mov
jmp
add
push
outsl
jae
dec
gs
popa
addr16
add
jge
call
movw
lea
jne
pusha
mov
lea
jmp
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
enter
add
jmp
test
bt
pusha
cmp
jmp
add
dec
insl
popa
addr16
imul
addr16
outsb
je
jb
jmp
stc
sub
bt
mov
pushf
not
stc
cmc
call
add
inc
jb
ja
fs
dec
adc
popa
test
jmp
stc
pop
aam
rcl
pop
sar
btc
bsr
pop
test
movzbl
pop
not
btc
add
lea
not
mov
pusha
mov
pushf
push
mov
pushf
pushl
ret
add
push
gs
outsb
jne
dec
gs
js
add
add
sub
je
jmp
push
push
pusha
push
movl
mov
pushf
call
add
push
gs
jbe
outsb
je
sub
inc
das
mul
bound
js
or
xchg
dec
dec
loop
mov
into
call
sub
or
aas
daa
inc
jg
adc
leave
mov
or
sbb
bsr
xchg
push
shll
jg
arpl
push
push
lret
add
xchg
les
add
ja
jg
fldt
xchg
cmp
and
jb
test
cmc
cmp
jmp
add
inc
gs
gs
inc
inc
add
fs
inc
inc
and
push
push
cmpsl
add
out
cli
incl
add
jae
insl
gs
push
add
sbb
mov
inc
clc
cmp
call
push
pushf
lea
jb
jmp
jns
pop
das
mul
xchg
jp
jbe
xor
mov
push
xor
leave
lock
loop
lcall
mov
int
outsb
pop
xor
pop
outsl
test
aam
mov
xchg
fnstenv
sbb
jp
xchg
movsb
push
icebp
outsl
push
xchg
cmp
or
lds
loopne
repz
mov
xchg
in
lcall
loopne
repnz
outsb
xchg
test
cld
jg
iret
repz
mov
push
aam
les
ret
cmp
hlt
popa
sahf
dec
push
push
movsb
call
aad
int
push
out
ret
insl
dec
iret
pushl
cmp
mov
out
ljmp
ret
adc
and
sbb
pmaddwd
aam
rcrl
jnp
lret
pop
outsl
cmp
jnp
sar
ss
lret
cs
jg
pop
in
or
adc
dec
xor
push
mov
pop
fnstenv
xor
sbb
mov
in
push
push
pop
mov
andb
decl
mov
sub
jbe
cmpl
nop
jbe
push
into
or
icebp
and
dec
nop
leave
lea
daa
cmpsb
fisubrl
or
dec
ds
shl
je
insb
pop
xchg
cwtl
aaa
test
ret
pop
sti
std
add
sub
sbb
sarb
mov
cmpsl
call
jnp
mov
sbb
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
ljmp
insl
popa
addr16
imul
add
or
cli
incl
add
gs
dec
outsb
jne
call
lea
not
ror
pusha
stc
pushf
bts
add
xchg
shl
neg
call
mov
pop
lea
push
mov
push
movl
pusha
jmp
test
mov
jmp
lea
jmp
clc
call
cwtl
lea
mov
pushf
movl
call
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
sub
sete
movb
pusha
mov
pushf
pushl
pushf
call
cwtl
mov
shl
aad
not
sub
and
clc
aas
or
and
cmp
btr
bswap
adc
mov
jmp
jmp
push
movl
jmp
add
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
pusha
pushf
movb
lea
jbe
pusha
movzbw
add
sub
sub
shrd
movsbw
mov
add
bt
mov
cmc
sar
xor
inc
add
shld
cmp
shr
dec
dec
sar
mov
bts
stc
call
mov
call
jmp
shrb
sbb
insb
dec
pop
mov
xor
pop
daa
sarl
xor
xchg
popf
rolb
scas
jl
bt
push
pushf
or
jmp
lea
jb
aad
cmp
pushf
lahf
bswap
mov
pusha
pusha
push
mov
lea
jb
ror
shl
mov
pusha
mov
cmp
cmc
sub
pushl
movb
mov
movw
jmp
cmp
jmp
pushf
push
jge
mul
lahf
popa
mov
dec
ret
mov
mov
addr16
or
sub
inc
scas
push
cwtl
mov
xor
pop
sub
mov
mov
stos
sbb
inc
xchg
out
mov
testl
xchg
mov
in
xchg
int
adc
and
jg
inc
fwait
push
cli
mov
and
mov
ret
add
in
sub
mov
in
or
xchg
les
xchg
imul
shll
mov
clc
movsl
bound
push
insl
sub
pusha
push
bt
pushf
sub
add
pusha
pushf
push
pushf
lea
jmp
add
push
gs
jne
jb
dec
outsb
outsw
dec
gs
add
clc
incl
add
jo
je
push
popa
addr16
add
add
imul
popa
jae
inc
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
inc
gs
outsl
jb
addr16
jne
fs
imul
gs
imul
add
cmp
in
lea
call
pushf
call
ja
outsb
imul
insb
add
mov
add
pusha
push
adc
mov
lea
jae
stc
btr
bsf
pop
btr
pop
btc
bsr
bts
daa
mov
sbb
setle
cmp
pusha
mov
pushl
call
mov
movsbw
mov
not
movb
mov
mov
lea
bswap
bswap
mov
push
mov
pushf
push
mov
bswap
pop
pusha
pushf
pushf
pushl
ret
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cld
push
mov
test
stc
test
shl
pushf
mov
push
lea
je
push
push
mov
pusha
call
pop
lret
gs
add
push
push
push
add
insb
add
push
push
add
rsqrtps
xchg
out
data16
xor
rep
add
out
insb
add
insb
add
fildll
shlb
sub
add
gs
mull
mov
insb
add
mov
insl
add
rep
add
cmp
loopne
add
ret
insb
add
cmp
mov
add
out
add
inc
add
and
mov
insb
add
jmp
add
adc
data16
sbb
jbe
insl
add
shlb
sub
insb
add
add
add
insb
add
data16
sbb
sbb
insb
add
add
add
add
es
add
ret
inc
into
add
add
add
data16
insb
add
xor
loopne
add
add
add
sbb
mov
add
add
addr16
imull
sbb
insb
add
insb
add
add
adc
add
loopne
add
insl
add
insb
add
add
sub
add
popa
fs
shlb
rep
add
rsqrtps
int3
inc
add
data16
or
jno
insb
add
jmp
add
fisubrl
stc
data16
fisubrl
out
add
clc
data16
cmp
insb
add
cmp
mov
add
jmp
add
pop
add
add
inc
shrl
insb
add
push
push
add
push
add
add
cmp
insb
add
add
insb
add
add
mov
insb
add
push
add
and
in
add
xor
and
adc
add
add
popa
fs
ret
insb
add
out
add
cmp
pop
push
add
in
data16
and
fucom
add
mov
insb
add
add
mov
add
add
adc
insb
add
data16
and
les
xor
shrl
out
add
pop
add
int
add
push
push
add
shrl
lret
add
add
data16
insb
add
add
push
add
add
add
add
inc
add
aam
add
add
add
int
add
insb
add
insb
add
jmp
add
add
inc
fs
ljmp
mov
pop
push
add
gs
pusha
fs
sbb
push
push
add
insb
add
and
insb
add
insb
add
fs
cmp
or
jae
addr16
enter
push
push
add
daa
add
push
add
insb
add
insb
add
cmp
add
pusha
fs
in
add
add
add
add
xchg
ljmp
das
cmp
add
data16
into
insb
add
add
insb
add
ss
mull
or
add
insb
add
adc
xchg
or
add
add
ljmp
in
push
add
push
add
lock
add
adc
add
inc
add
data16
fs
sbb
push
std
data16
data16
push
add
addr16
daa
fs
add
add
add
pop
push
add
cli
data16
iret
insb
add
add
test
insb
add
push
add
or
jmp
push
add
inc
add
out
insb
add
insb
add
push
add
cmp
add
push
add
pop
push
add
hlt
data16
and
cmp
or
loopne
add
and
cs
mov
add
daa
add
add
cmp
cld
data16
adc
add
jmp
add
push
push
add
in
insb
add
add
pusha
es
push
add
add
data16
shlb
in
add
out
insb
add
in
insb
add
push
add
rep
add
enter
ret
insb
add
pop
add
insb
add
data16
push
add
push
add
inc
add
pop
add
add
xlat
cmp
data16
sbb
jge
insb
add
int
add
xor
cli
data16
push
push
add
add
imulb
sbb
add
push
add
dec
add
cli
data16
insb
add
add
pop
push
add
ret
insb
add
adc
nop
cmp
add
add
sbb
rsqrtps
xchg
in
data16
stc
data16
push
push
add
add
insb
add
pop
add
add
cs
popa
add
popa
add
in
insb
add
adc
add
inc
add
shlb
adc
add
mov
add
push
add
cld
data16
mov
insb
add
lock
add
mov
push
add
mov
add
insb
add
add
push
fs
fildll
imulb
add
test
insb
add
sub
and
leave
insb
add
and
or
sbb
push
add
add
dec
dec
fs
out
insb
add
add
insb
add
cmp
mov
insb
add
clc
data16
or
inc
push
add
push
add
insb
add
inc
fs
out
add
insb
add
shlb
sbb
fsubl
add
add
sbb
fldcw
fildll
push
push
add
adc
insb
add
fsubrl
rep
add
mov
push
add
cld
data16
add
data16
sbb
repz
add
adc
pop
or
test
data16
push
add
insb
add
pop
add
insb
add
push
add
shrl
and
add
push
add
lret
insb
add
add
add
add
add
add
add
add
and
ljmp
loopne
push
add
in
data16
lock
add
add
ljmp
stc
cmp
add
adc
std
add
cmpsl
sbb
add
gs
sti
data16
or
jg
add
push
add
push
add
es
push
add
add
add
add
mov
gs
ret
add
add
adc
insb
add
push
add
in
data16
dec
add
cmc
insb
add
rsqrtps
fcomip
data16
push
add
insb
add
cmp
lock
add
jmp
push
add
ss
and
dec
rep
add
add
ret
add
add
add
aaa
mov
add
popf
adc
mov
insl
add
data16
add
jmp
add
stc
data16
add
add
push
add
add
add
add
pop
add
adc
cmpsb
xor
and
add
add
aas
add
add
add
mov
add
ret
insb
add
inc
add
add
add
decb
jp
idiv
lea
call
call
pushf
lea
jb
bsf
bts
mov
clc
sub
jmp
add
inc
jb
popa
je
inc
jbe
outsb
je
add
scas
pop
idiv
inc
cli
adc
mul
gs
mov
add
lods
andps
inc
xchg
add
mov
dec
adc
jg
out
fadds
enter
int
sbb
push
out
ss
inc
roll
fsubrs
sub
fwait
ja
std
aam
movsl
call
imul
jl
andb
push
lcall
adc
addr16
in
and
or
jge
xorl
pushl
popl
pushf
movb
pushf
pushl
ret
add
inc
jno
popa
insb
push
arpl
add
je
insb
addr16
je
insl
push
gs
inc
add
addb
in
add
daa
bswap
movzbl
bsf
shrd
sbb
rol
shr
rcr
imul
call
mov
lea
jne
rol
ror
mov
clc
sub
shr
dec
mov
test
pushf
call
lea
jne
pusha
pusha
mov
pushf
movl
movzbl
cwtl
cwtl
lea
pushl
movl
pushf
pushf
pushf
jmp
add
push
gs
imul
gs
movl
mov
push
lea
jmp
jmp
add
loopne
mov
cmp
hlt
mov
les
pusha
pop
mov
xor
incl
aaa
and
pop
mov
mov
push
loope
mov
mov
mov
or
mov
ret
sub
outsl
lcall
movsl
jmp
adc
inc
dec
orl
jl
cmp
push
mov
mov
dec
jne
fidivl
hlt
cmp
or
pop
pop
in
dec
cmpsb
clc
loop
nop
js
xor
pushf
push
jb
stos
test
mov
fmuls
out
cmp
jmp
jmp
mov
pusha
push
push
mov
lea
jmp
add
inc
gs
arpl
insb
insb
push
popa
outsb
addr16
jo
sbb
loopne
andl
or
sub
in
adc
mov
add
pop
mov
adcl
xchg
das
int
out
clc
insb
leave
and
stos
sbb
and
mov
in
xchg
mov
fdivrl
inc
rcrl
inc
cmp
mov
dec
in
test
or
mov
or
btc
lea
btc
ror
mov
bswap
stc
or
mov
push
bt
movsbw
push
xadd
mov
shld
bsr
bswap
mov
test
movw
pushf
call
add
push
arpl
outsb
push
outsl
inc
insb
imul
out
add
bt
cmc
pushl
popl
bt
pushl
cmp
stc
cmp
pushf
pushf
jmp
jmp
push
lea
jb
shld
cwtl
cmp
cwtl
pusha
mov
pusha
push
call
add
inc
jb
ja
gs
push
add
add
je
outsl
arpl
add
add
je
inc
inc
js
mov
loopne
adc
mov
stos
out
fimull
cwtl
push
xchg
mov
or
inc
xchg
mov
xchg
inc
sbb
popa
and
add
aaa
push
jmp
sub
cmp
nop
popa
xor
pop
mov
add
idivb
push
add
cmpl
push
push
jbe
mov
pop
mov
outsb
xchg
out
cmp
xchg
add
aaa
lret
sub
pop
add
fmuls
and
ja
add
test
rcl
push
sub
pushl
neg
add
add
movzbw
mov
stc
inc
or
mov
test
push
pushf
movb
repnz
call
add
push
jb
arpl
outsl
jo
jo
outsb
jne
add
dec
jo
outsb
push
jb
arpl
jae
push
cmpb
call
mov
loopne
sarb
mov
insb
fdivrp
stos
mov
nop
dec
xchg
test
addr16
ds
inc
aaa
pop
sbb
push
fsubrs
sbb
stos
pop
sub
sub
je
call
cld
imul
in
jl
or
push
adc
cmp
dec
or
jecxz
in
xchg
iret
lods
xchg
mov
cmp
push
in
sbb
push
mov
sbb
cmp
dec
inc
push
xchg
outsb
cmp
test
sbb
dec
cmp
sarb
jb
pop
es
jo
jo
sbb
xorb
add
bt
pusha
pushf
bt
cmp
mov
lea
jae
sar
mov
sar
or
cmp
lea
mov
shrd
mov
ja
cmc
test
sub
pushf
pushf
pusha
push
repnz
pushf
call
or
pusha
jmp
add
push
gs
arpl
push
arpl
add
je
gs
imul
fs
jmp
push
lea
je
rcl
mov
and
clc
add
adc
mov
bt
jmp
add
inc
gs
arpl
gs
imul
add
jb
insb
insb
push
imul
fs
jg
pushf
lea
ja
jmp
add
inc
jb
popa
je
push
outsb
dec
outsb
imul
adc
mul
gs
imul
insl
xor
mov
and
dec
adc
add
sti
aaa
or
fiadds
lods
enter
and
dec
jge
je
jae
movsb
xor
lahf
sahf
sbb
sbb
fcmovbe
ljmp
mov
cmp
or
lahf
sbb
je
enter
addr16
sbb
jns
sbb
mov
fs
adc
gs
movsl
stos
test
loopne
nop
xchg
lock
lods
push
ret
dec
cmp
inc
gs
insb
imul
je
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
dec
push
sub
mul
ds
ljmp
cld
repnz
bound
and
dec
hlt
enter
fdivs
dec
push
iret
add
xchg
insl
ljmp
imul
loope
frstor
sub
inc
sbb
loopne
mov
push
dec
test
bound
or
data16
push
mov
iret
mov
cmp
mov
das
xor
adc
adc
lods
push
gs
iret
in
mov
or
loopne
dec
or
pop
stc
xchg
mov
pop
inc
loope
cmp
mov
inc
loope
cwtl
jp
loopne
pop
cmp
test
mov
jo
outsl
cltd
lret
lret
or
mov
repnz
insb
add
xor
nop
push
dec
outsl
inc
pop
lock
jl
lds
jecxz
adc
std
or
adc
lret
push
xorl
dec
push
mov
jnp
nop
loope
cmc
outsl
fldcw
lea
imul
push
add
push
popa
jb
popa
outsb
je
outsb
imul
and
test
cli
lcall
dec
incl
add
outsl
bound
push
outsb
insb
outsl
arpl
add
push
push
push
pusha
lea
jmp
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
pushf
lea
call
mov
not
mov
movsbw
pusha
call
push
pusha
movl
push
movb
movl
movw
pusha
movl
lea
jmp
lea
je
stc
add
push
pushf
lea
jmp
add
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
movl
pushf
movw
lea
jmp
mov
push
jmp
neg
clc
bt
movl
sub
bt
bt
pushf
clc
not
cmc
shl
cmp
push
push
push
add
jmp
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
popa
addr16
imul
je
outsl
jns
add
inc
gs
imul
outsl
arpl
mov
jmp
add
inc
popa
insb
insb
push
imul
outsl
arpl
lods
mov
cmp
push
add
pushl
clc
bt
neg
pusha
pushf
pushl
inc
jmp
add
inc
gs
imul
je
add
push
imul
jb
je
arpl
not
clc
ror
cmc
cmp
movb
cwtl
lea
not
not
mov
call
add
push
gs
outsl
jbe
dec
outsb
jne
jns
sbb
mul
xor
mov
mov
mov
push
xchg
cmp
xchg
jg
sbb
pusha
clc
aaa
sbb
rcrl
xchg
inc
mov
leave
imul
ret
and
or
xchg
jae
stos
fucom
push
data16
popa
mov
mov
pop
cmpsl
pop
pop
inc
mov
call
adc
fldenv
imul
add
je
gs
dec
gs
imul
and
jg
mov
lea
jne
ror
mov
cmc
cmp
or
jmp
add
inc
gs
inc
add
movb
call
adc
movb
jmp
call
pop
pushf
push
pushf
lea
jo
push
movl
call
lea
je
not
lea
bswap
movzwl
movzbw
lea
call
pushl
lea
jb
stc
xor
clc
cmp
pusha
test
pusha
mov
mov
pushf
call
add
dec
insl
popa
addr16
imul
inc
jb
addr16
insl
popa
addr16
ret
setns
xor
pusha
bswap
jmp
movl
jmp
movl
movb
pushf
lea
jmp
add
inc
gs
imul
arpl
pushf
lea
jne
push
lea
jmp
add
push
outsl
jae
push
jne
je
gs
popa
add
adc
loopne
inc
add
xchg
movsl
pop
mov
dec
int3
lods
sbb
dec
mov
clc
pop
nop
loopne,pn
dec
cli
and
jmp
roll
pushf
sbb
imul
call
pop
and
xlat
into
jnp
mov
add
fs
arpl
inc
add
movl
test
xor
decl
outsb
and
lea
mov
jmp
add
push
insb
jae
gs
popa
insb
jne
add
and
incl
add
je
imul
imul
push
jmp
jmp
add
push
push
jb
insb
insb
inc
popa
jb
add
inc
gs
outsl
arpl
add
fs
jmp
mov
stos
adc
loopne
mov
ds
cmp
cmpsb
mov
fcompl
push
fstl
and
rcrl
jbe
push
cmc
aaa
push
jno
dec
mov
cmpsl
jnp
pop
ret
repnz
mov
pop
pusha
cmp
outsl
js
pop
enter
icebp
data16
cltd
mov
arpl
xlat
dec
movsl
addr16
pop
mov
push
repnz
mov
lcall
adc
pop
sbb
mov
mov
sub
jnp
mov
pushl
cltd
in
cli
push
adc
fs
jae
dec
pushf
xadd
mov
xor
mov
shld
xor
mov
pusha
cmp
movzbl
lahf
push
bswap
mov
mov
mov
lea
jb
movzbl
shrd
adc
cmp
pusha
movsbw
movsbw
mov
pusha
lea
jo
jb
push
mov
pushf
pushf
push
pusha
sub
pushf
not
mov
call
add
push
gs
insb
jne
push
pusha
call
mov
lea
je
pusha
pushf
mov
mov
movw
push
movb
xchg
lea
movl
not
movsbw
lea
jne
lea
pusha
call
pusha
lea
je
test
pushf
or
jmp
fs
enter
mov
test
lods
sti
cmp
dec
mov
xor
cmp
fdivp
mov
pop
dec
inc
and
sbb
mov
add
fldenv
aam
repz
sbb
dec
sbb
sub
push
js
xchg
cli
jae
sub
lods
iret
ret
adc
inc
test
mov
lea
dec
sbbb
add
cli
pop
aaa
inc
icebp
filds
lods
fnsave
dec
outsb
xor
adc
jmp
aaa
lods
mov
or
inc
inc
cld
ret
cmp
scas
xchg
stos
loopne
adc
mov
es
cmpsl
pop
sub
insb
lcall
lea
sbb
sub
push
cs
cmp
or
iret
sbb
mov
mov
mov
es
out
movb
out
and
cli
sarb
icebp
xor
pop
das
add
stos
sbb
jbe
rcrb
sbb
or
in
icebp
or
call
addr16
ss
add
pop
cmp
out
or
shrb
lcall
fnsave
mov
insb
mov
push
push
insb
lcall
add
subl
xchg
inc
fwait
xchg
jg
mov
mov
scas
pop
push
push
add
mov
dec
ja
das
mov
dec
js
jg
ja
jp
sarl
es
test
fcompl
pop
adc
pop
iret
or
iret
jbe
jge
mov
decl
inc
xor
out
and
add
or
jl
dec
sub
sahf
inc
and
jnp
ss
pop
mov
push
sub
cmp
xchg
sub
cltd
and
or
outsb
lock
clc
xchg
addb
bound
or
sbb
rorl
neg
rsm
pop
in
cmp
jge
dec
cltd
mov
test
fdecstp
add
cmp
cld
loope
repz
cld
aas
imul
fdivrp
ffreep
int
mov
jl
cmp
cmpsl
add
lret
jle
scas
jl
jp
sarb
jecxz
mov
gs
into
sbb
addl
movsb
cs
adcl
add
into
and
cmpsb
loop
xor
cmpl
jns
sbb
imul
pop
inc
cwtl
cwtl
cwtl
popa
popf
mov
jge
inc
mov
jnp
pop
xchg
push
out
daa
in
jbe
fcompl
push
mov
dec
and
xchg
pusha
add
outsl
xchg
mov
shrb
movsl
orb
jbe
adc
push
insl
mov
fwait
push
mov
and
inc
and
pop
mov
or
xor
push
out
push
jae
jno
mov
aad
pop
clc
movsb
mov
aas
insb
or
xchg
mov
sub
test
inc
mov
lret
sub
lods
sbb
jl
cmpsl
mov
jg
jmp
loope
adc
sbb
imul
sbb
roll
jnp
mov
adc
add
cmc
ret
popf
out
dec
or
mov
adc
iret
jns
fcompl
test
jns
aas
out
sbb
loop
push
jo
fs
aam
daa
xchg
dec
imul
into
int
roll
xor
test
into
pop
jmp
and
cmp
or
test
fcmove
inc
fs
sbb
test
push
jecxz
iret
xlat
pop
ja
cmpsl
icebp
mov
lcall
adc
mov
jne
clc
fisttps
pop
and
and
cmp
inc
sti
fldt
popf
jmp
xor
sahf
pop
mov
jmp
dec
cld
pop
pop
into
inc
popf
jo
mov
mov
dec
inc
mov
push
sbbl
repz
push
pop
mov
popf
xor
jge
jns
inc
push
inc
pusha
test
lcall
push
icebp
jg,pn
jns
aad
divl
mov
xchg
shlb
pop
dec
push
cld
jbe
or
insl
cmpsb
fnstcw
pop
lret
bound
pushf
adc
inc
push
call
push
cltd
adc
inc
dec
stc
mov
dec
xor
sub
jge
loope
lods
bound
cmovne
ljmp
in
sub
bound
mov
outsl
and
cmp
stos
test
stos
pop
dec
pop
mov
push
fxch
sbb
test
nop
inc
cwtl
fmull
cmp
sub
adc
mov
xchg
and
sub
push
lret
inc
mov
mov
adc
jg
pop
add
pop
mov
out
imul
insb
adcb
dec
lcall
add
es
pop
test
push
jo
xor
xlat
aas
rcl
pop
xor
imul
jnp
outsb
call
insl
push
sti
sbb
adc
inc
jb
fsubrl
jmp
push
lcall
cs
sbb
cmc
in
mov
or
or
gs
loopne
out
and
adc
movsl
xchg
inc
adc
das
push
pop
loope
inc
insl
sub
sbb
pop
mov
cltd
fldl
mov
or
decb
outsl
sub
outsb
push
cwtl
inc
outsb
mov
outsb
mov
xchg
xchg
add
bnd
jg
xor
add
pop
push
insb
in
call
into
btr
sbb
fisubrs
pushf
push
mov
jo
xchg
in
or
pop
fisttpll
xchg
cltd
mov
ss
cwtl
pop
xchg
ds
or
lret
sub
scas
shlb
mov
test
inc
push
in
loope
inc
pop
jg
les
cli
push
ret
std
dec
jbe
mov
or
outsl
xchg
push
test
loope
cmc
movsb
call
arpl
dec
dec
pushf
fildll
cmpsb
xchg
enter
add
cmp
jge
adc
add
js
into
or
cmpl
fcmovbe
out
xchg
or
into
and
stc
ds
inc
std
pushf
and
stos
test
pop
mov
dec
mov
pusha
cmp
add
outsb
cmpsb
pushf
movsl
lahf
les
sbb
leave
shrb
inc
aad
mov
lods
add
xchg
stos
les
sbb
fisubrs
adc
push
pop
loopne
test
pop
sbb
ds
mov
and
out
ficompl
repz
sub
int3
push
fdivp
or
nop
dec
test
addr16
pushf
test
xor
sub
cli
fsub
aaa
std
repnz
shll
xchg
inc
in
test
push
push
adc
out
cmp
pop
xor
mov
js
xor
inc
jbe
jecxz
sub
dec
ret
push
lods
lcall
fidivs
fwait
push
dec
xchg
mov
in
aad
add
rorl
sbb
dec
pop
mov
daa
push
and
pusha
or
sbb
jp
jns
cwtl
and
sub
pop
add
pop
push
mov
jge
push
je
inc
add
jp
xor
out
call
dec
push
pushl
scas
leave
das
sub
inc
test
loopne
push
push
sbb
popa
ja
or
inc
fcompl
xor
inc
and
fsub
dec
pop
loope
mov
xor
push
jecxz
cltd
push
cmpsl
add
add
mov
pushf
lret
xchg
addr16
jg
add
xchg
testb
fwait
bound
and
nop
inc
lods
lock
aaa
gs
sbb
out
lock
movsb
scas
jbe
dec
adc
sub
fldcw
push
cs
les
lret
pushf
pop
adc
inc
xchg
gs
imul
mov
dec
xor
aas
rolb
lea
add
cmp
imull
insl
je
ljmp
inc
jecxz
shll
daa
mov
in
push
fidivl
jns
enter
cltd
imul
adc
xchg
mov
add
cmp
pop
pusha
imul
bound
rclb
lods
add
push
dec
push
dec
and
dec
mov
mov
dec
mov
enter
negl
mov
ret
cmp
add
xchg
dec
xlat
sti
shlb
push
mov
jno
sub
mov
inc
cld
es
mov
in
mov
test
nop
mov
sbb
cmpsb
sub
mov
add
mov
mov
cmovs
repnz
or
pop
mov
or
pusha
push
xchg
movl
lcall
cld
sbb
fcomp
ficoms
icebp
das
xchg
ss
adc
ret
enter
ljmp
movsb
dec
int
adc
or
movsl
inc
mov
inc
mov
fisttpl
int
push
lcall
and
test
mov
clc
cmp
pop
mov
xor
mov
movsb
stc
mov
daa
fmuls
out
test
popa
adcl
pop
xchg
dec
lock
addr16
xor
push
loop
pop
jne
fcmovbe
out
inc
ds
loopne
mov
lods
cltd
sub
add
pop
sub
insb
or
jo
adc
pop
lock
test
out
sahf
in
rep
add
in
je
ss
movsl
imul
dec
or
rcrb
roll
adc
rclb
push
sub
sub
sub
ja
push
dec
dec
test
shr
xchg
push
sbb
out
fsubl
es
add
daa
dec
pop
shll
arpl
test
stos
lret
inc
shrb
je
mov
mov
imul
mov
pop
sbb
add
fisubs
xchg
inc
add
jge
outsb
push
fiadds
test
sbb
mov
add
and
hlt
push
add
std
xchg
ljmp
sbb
cmp
mov
sub
stc
mov
pop
call
stos
ljmp
sti
lea
pop
mov
subb
xchg
mov
xchg
out
js
pop
shrb
push
jb
sti
fs
ds
test
jb
add
cmpsb
add
jecxz
sub
movsl
sarl
pop
iret
sbb
cmp
lea
repnz
jmp
push
pop
inc
xor
mov
jb,pn
mov
dec
cmpsl
cmc
xchg
fwait
sahf
out
mov
lods
nop
test
adc
pop
xchg
les
push
outsb
scas
ss
mov
mov
popa
and
les
rcr
imul
outsl
addr16
lret
add
cli
in
xor
mov
cwtl
fists
out
dec
out
mov
and
or
aam
mov
jp
lds
lock
fsts
lahf
insb
push
cld
out
out
addr16
jbe
movsb
daa
lods
cmpb
mov
scas
out
inc
je
xor
inc
dec
stos
jle
outsl
sbb
cmp
test
lods
ret
mov
fmulp
das
pop
push
jo
push
insl
mov
sbb
pop
and
xor
jg
popa
mov
addr16
xor
out
push
js
jae
inc
outsl
cld
sbb
lret
xchg
jecxz
pop
je
cld
push
inc
subl
out
stos
in
jge
fwait
das
jbe
push
imul
mov
in
jp
push
xchg
js
dec
mov
lahf
fiadds
mov
xchg
sub
add
mov
dec
fisubl
adc
outsl
push
sahf
dec
mov
xor
inc
and
jg
inc
popf
or
pop
fmulp
xchg
and
adc
insl
idiv
lods
stc
or
cmpsl
or
push
fstps
adc
lods
sbb
mov
les
xor
aam
inc
shll
scas
jge
addb
add
xor
loopne
pop
sbb
cmp
xor
pop
test
in
call
int
shlb
mov
jl
add
sbb
cli
mov
inc
mov
mov
mov
xor
sbb
inc
hlt
das
sahf
pop
push
sbbl
pop
mov
pusha
mov
adc
or
sub
aam
inc
xor
les
aam
loopne
clc
cmp
pop
outsb
mov
add
cmpsl
in
mov
dec
sarl
dec
std
pop
jge
dec
push
pop
mov
inc
ds
push
orb
dec
in
fnstenv
in
int3
mov
dec
add
jo
repz
popf
out
sbb
adc
cmpsb
fiaddl
and
mov
enterw
sarl
subb
and
sub
adc
sti
jmp
iret
nop
and
and
lcall
insb
ss
ja
pop
cmp
pop
fxch
daa
cli
mov
fidivrl
xchg
lea
pop
xchg
sub
out
adc
loop
inc
repnz
pop
movsb
jne
insl
mov
jnp
enter
scas
sub
sbb
push
xchg
push
pop
xchg
cmp
fdivrs
mov
sub
jp
test
mov
sub
gs
and
ficompl
in
jle
ret
sub
xor
xlat
les
jnp
pop
fsubl
in
sub
or
jae
in
mov
cmp
cmpsb
xlat
popa
out
and
mov
push
int3
jp
inc
xchg
inc
fmuls
sub
push
fnstenv
xor
lret
xchg
not
pusha
xchg
data16
out
mov
fwait
test
inc
push
dec
or
rol
in
not
addl
push
xchg
pop
sub
inc
sub
fdivp
test
in
ljmp
mov
stos
or
push
pop
scas
or
pop
xor
shrb
setg
mov
dec
mov
push
out
adc
dec
mov
push
xor
push
lret
jbe
jp
mov
pop
repnz
dec
cltd
and
outsb
aas
shr
movsb
mov
jae
dec
in
stc
inc
jb
pop
sbb
in
cmp
aam
jno
ret
cs
std
fdivl
and
cvtpi2ps
or
sub
cmp
lret
lock
adc
push
ret
pop
shl
mov
or
test
into
pop
imul
sbb
mov
sbb
fsubl
mov
dec
int3
scas
ja
sub
push
xor
xchg
add
jg
movsl
pavgw
mov
popf
shll
iret
mov
into
push
adcl
andl
loop
xor
sbb
push
daa
pop
pushf
cmp
adc
mov
sbb
cmpps
lea
and
lods
pop
inc
int
mov
outsb
mov
pop
insl
icebp
das
push
leave
inc
pop
in
push
push
push
scas
jp
mov
std
xchg
cmp
or
sbb
jne
cmp
xchg
je
loope
rcrb
rclb
lea
and
mov
decb
mov
fwait
mov
or
in
iret
inc
xor
jle
ret
enter
mov
jns
ljmp
les
mov
inc
mov
sbb
aad
mov
xlat
testb
sbb
sbb
mov
nop
leave
std
fs
add
add
lea
mov
mov
cmp
mov
adc
daa
popa
ret
xchg
rcrb
rcrb
ret
and
fidivl
out
test
and
popf
mov
dec
jne
xor
xchg
loope
repnz
jmp
or
out
clc
sub
jge
sbb
mov
and
jle
inc
imul
mov
cmp
mov
js
push
data16
dec
stos
in
fmuls
call
jmp
inc
add
xchg
dec
and
push
pop
mov
inc
xchg
cmp
lds
add
mov
xchg
hlt
icebp
dec
icebp
inc
push
addr16
inc
xor
sub
ljmp
xchg
ss
jmp
jae
mov
mov
cld
jg
xchg
mov
dec
cwtl
inc
adc
mov
inc
sbb
push
push
cs
loope
mov
ret
ss
pop
xchg
dec
lock
sahf
mov
push
imulb
dec
mov
and
lock
cmp
xor
clc
jg
or
clc
add
jge
inc
stos
inc
add
sbb
icebp
lret
pop
arpl
mov
mov
xor
aam
leave
adc
dec
loop
fldl
js
iret
repnz
clc
rcrl
cld
ret
mov
outsl
stos
clc
xor
push
push
lcall
stos
jbe
fistpll
push
inc
adc
rclb
js
jno
movsb
mov
jp
mov
pushl
push
dec
mov
xor
call
xchg
outsb
and
stos
out
addr16
pop
mov
push
jnp
pop
test
outsl
in
mov
fistpll
xchg
pushf
stos
lret
lods
nop
addr16
out
cwtl
pop
insl
ds
ljmp
mov
test
mov
push
sub
sbb
shrb
mov
xor
inc
loopne
pop
jbe
jbe
push
ja
add
jo
cltd
mov
loope
adc
push
call
or
stos
imulb
rcr
es
nop
push
push
xchg
pop
leave
push
fwait
inc
rclb
pop
push
out
test
mov
cmp
sbb
dec
fisubrs
push
rcrb
ss
xor
arpl
daa
or
sbb
mov
pop
les
or
test
repz
cmp
and
mov
scas
popf
jbe
sarl
jmp
inc
stc
fldln2
push
mov
adc
jb
cltd
add
imul
fidivs
mov
leave
or
cmp
mov
mov
les
lret
xor
xchg
jbe
mov
mov
std
in
push
subb
mov
dec
adc
insb
nop
push
andb
movsb
in
pusha
aam
pop
push
xor
jo
inc
pop
fstpt
mov
add
cmp
arpl
outsl
xor
lahf
mov
pop
cmpsl
push
add
inc
ret
mov
jns
inc
aaa
cwtl
mov
jg
scas
scas
xorl
jnp
ljmp
sbb
jne
sbb
scas
jbe
mov
in
out
cli
jmp
pop
popf
push
mov
dec
call
movsb
or
push
and
pop
push
hlt
jne
loope
inc
sub
sub
jo
lods
repz
sbb
mov
jno
aad
cmpsl
mov
lcall
pop
ljmp
xor
in
add
xor
mov
jnp
sub
push
pop
xchg
jo
bound
pop
imul
cmp
aaa
push
pop
scas
sub
das
or
pusha
cwtl
movsb
incl
cmp
fdivl
shll
push
aam
mov
fdivl
push
add
inc
popa
mov
ret
mov
andl
test
pop
shlb
fstps
iret
add
mov
arpl
push
aad
cmp
lods
mov
push
in
shrb
xchg
adc
dec
pop
push
test
jb
dec
cmpb
dec
or
adc
sub
jg
cmp
xor
adc
xchg
pop
add
xchg
or
mov
insl
xchg
push
xor
int
mov
jnp
jl
jnp
pop
xchg
and
mov
dec
pop
arpl
iret
lods
in
dec
rcr
rcrl
pop
ljmp
xchg
mov
jl
shll
add
xchg
jp
cld
xchg
jae
add
ret
dec
out
xor
sub
sbb
out
sub
scas
in
push
sub
xor
and
sub
dec
mov
rclb
sub
aad
cmp
out
sub
sub
sub
fcoms
std
into
cmpsb
leave
mov
inc
addr16
aad
pop
or
cld
rorl
popf
adc
imul
shll
push
push
clc
gs
push
mov
lds
and
js
cmp
push
in
push
sub
adcl
push
add
mov
and
pusha
adc
in
stos
std
int
cmc
pusha
test
and
adc
add
xchg
cmc
aam
cmp
outsl
shl
xor
shl
adcb
repz
xchg
inc
in
jle
add
pop
rclb
dec
mov
flds
cwtl
inc
iret
mov
and
ljmp
xor
add
aam
hlt
sub
jnp
popf
xchg
dec
and
out
or
leave
mov
out
inc
cli
ficoml
dec
cmpsb
mov
into
xchg
mov
cmp
jle
das
push
or
cld
or
lret
pop
in
xchg
cwtl
mul
es
adc
popa
cmpsl
test
fistps
cmp
mov
sarb
shl
jno
std
mov
sub
loopne
cmp
repnz
out
lahf
push
pop
div
mov
sub
out
lock
scas
out
inc
xor
rcll
inc
mov
or
pop
pop
in
les
fwait
mov
sub
sub
mov
dec
rorb
jno
adc
outsl
cmp
mov
pop
jb
cmp
cmp
loopne
or
mov
stc
and
xor
test
jmp
scas
iret
cmpsb
sub
mov
push
sbb
xchg
or
leave
movzbl
sub
sti
push
out
inc
or
mov
inc
in
mov
jmp
mov
lea
sbb
popa
mov
pop
cmp
jmp
mov
popa
dec
out
adcb
mov
clc
or
mov
cmp
mov
int3
sub
sbbb
pop
cld
mov
std
pop
test
incl
mov
dec
cmpsl
icebp
mov
or
mov
push
mov
jns
cmp
outsl
mov
jl
cmovo
fistpll
mov
pop
mov
jmp
lds
fcomip
adc
mov
mov
xchg
test
add
mov
ljmp
fsts
call
clc
xor
mov
lods
sarl
jno
imul
xor
pop
daa
addr16
xchg
sub
cwtl
int3
add
cmpsl
fs
sub
push
jmp
jnp
in
sbb
clc
inc
in
int3
sub
mov
aad
mov
in
fcmove
les
int
imul
rcl
xor
ret
or
fsubr
daa
push
je
data16
gs
xchg
aam
imul
mov
pop
pop
dec
inc
jns
or
sbb
sarl
int3
mov
popf
in
sahf
pop
ljmp
mov
cmp
jp
ficoms
jecxz
aas
fdivr
pusha
adc
imul
dec
mov
mov
sarl
jb
sbb
out
inc
arpl
add
adc
push
testl
outsl
int3
les
xchg
lods
add
imul
push
dec
stos
sub
sub
push
sub
jg
cmp
xor
orb
sub
ret
sbb
das
mov
push
aaa
in
test
push
xchg
push
cmp
cmp
cld
inc
stos
test
ds
mov
pop
int
ja
add
pop
adc
xchg
xchg
cmp
fstpl
mov
xor
jmp
sbb
repnz
div
out
mov
int3
cmp
sbb
mov
repz
mov
lock
push
xorl
dec
and
addr16
test
in
cmp
mov
cld
and
jmp
add
leave
xchg
stos
imul
das
fwait
xchg
shr
and
cmpsb
lds
arpl
cmp
xchg
jp
punpckldq
push
hlt
mov
repz
into
xchg
add
shlb
dec
pop
outsb
enter
jle
outsl
push
cmp
test
mov
out
adc
pop
mov
repnz
push
bound
fmull
stc
das
sbb
xor
jl
scas
or
mov
scas
fldl
leave
mov
clc
out
mov
mov
mov
mulb
jns
repz
and
pop
jp
push
out
cmp
lret
xor
pop
outsb
scas
loopne
fwait
loopne
aad
imul
inc
push
pop
sub
mul
sbb
orl
out
xor
adc
push
dec
hlt
cmp
lods
mov
xchg
aaa
insl
jae
es
pop
pop
adc
cmp
repnz
imul
daa
and
cwtl
pop
push
mov
xchg
adc
xchg
outsb
xchg
add
outsl
ret
popa
gs
mov
outsl
inc
pusha
int3
in
adc
lods
mov
jns
hlt
push
mov
sbb
fwait
in
test
pop
push
lcall
add
das
outsb
popf
out
xor
jecxz
aam
push
call
decb
stos
je
sahf
aas
loopne
dec
jb
add
pop
xchg
jg
hlt
pop
adc
scas
testb
jecxz
add
inc
xchg
lret
test
xchg
dec
xor
lock
push
leave
ret
into
lea
xchg
adc
push
pop
rclb
les
stos
loope
push
testl
jno
sti
in
sub
nop
movsl
jns
cmpsl
push
lcall
inc
add
rolb
lds
or
xchg
cmp
jmp
insb
imul
mov
ja
pop
inc
in
and
subb
ljmp
cmp
or
dec
ret
pop
dec
mov
jge
scas
sub
stos
dec
shrl
pop
mov
xor
push
cli
push
packssdw
clc
and
mov
lea
in
imul
push
cmp
lcall
dec
mov
xor
mov
ret
lret
aam
adc
cmp
xor
aad
dec
push
lahf
mov
icebp
pop
cmp
pushf
jge
mov
rcr
mov
mov
mov
repz
mov
push
mov
push
mov
enterw
imul
sub
pusha
jle
inc
mov
mov
inc
shll
xchg
outsb
in
rcrl
scas
mov
dec
pop
fstpt
lods
testl
mov
movb
fisttps
pop
sub
out
xchg
mul
roll
jle
add
aaa
aad
lock
dec
mov
mov
xor
xorl
out
aas
out
push
add
xchg
sbb
push
ja
scas
jns
call
outsl
fucom
loop
daa
pop
rol
inc
mov
xor
in
jle
pop
rorl
or
mov
and
iret
pop
jecxz
les
in
xchg
sub
inc
fildl
sahf
dec
push
in
sub
ljmp
jge
sub
les
pop
rcrb
mov
mov
loop
and
pop
incb
and
jo
xor
lret
addr16
cmp
cmovp
loopne
xor
pusha
mov
adc
idivl
jg
pop
jns
mov
int
xchg
or
outsl
pop
ss
jmp
lock
xor
or
mov
jo
mov
lds
mov
xor
jp
cmp
sub
or
out
jge
in
add
cmp
es
cmpb
jp
cmp
mov
jecxz
cmpsb
sbb
jo
fists
dec
mov
sarl
popf
repnz
fisubrs
xlat
mov
aad
sub
das
push
push
stc
sbb
int3
mov
cmp
pop
je
ja
pop
je
movsl
mov
jns
mov
push
ret
push
movl
and
push
mov
aam
mov
mov
dec
mov
sbb
pushf
test
jb
test
pop
mov
mov
mov
inc
arpl
divl
mov
jg
mov
add
xchg
jno
shrl
and
push
sub
cli
fwait
adc
or
cmovne
mov
daa
mov
aas
jbe
xlat
push
sarl
nop
inc
leave
fnstenv
incl
stc
clc
into
mov
mov
scas
ljmp
cli
popa
outsl
inc
or
mov
bound
xor
incl
mov
and
jg
orl
xor
aas
std
push
push
and
inc
and
repnz
shll
adc
pop
outsb
inc
pop
cmp
int3
movsl
mov
cmp
pop
lods
add
sbb
leave
mov
mov
inc
inc
ficoml
mov
lcall
inc
xchg
int
stos
sti
ret
xchg
ss
mov
sub
inc
daa
insl
lahf
jo
fstps
arpl
cmpsl
bound
mov
jg
in
ljmp
xchg
arpl
gs
pop
push
xchg
rcr
out
add
pop
dec
sbb
pop
mov
cmp
rorl
cmpsb
into
outsb
std
loopne
out
pop
xchg
aas
fcomps
or
ret
xchg
mov
aam
jo
mov
pop
push
lods
or
push
jl
cltd
and
cmpl
call
aas
fsubrl
push
inc
fwait
and
cld
test
das
sbb
call
xchg
push
shlb
lods
jne
sub
movsb
inc
js
fstpt
and
jae
cmp
and
sahf
xchg
iret
adc
inc
jb
out
ret
push
outsl
add
sti
mov
inc
mov
sub
mov
sbbl
inc
sbb
lods
and
jmp
movsl
sub
lock
mov
fwait
sub
mov
les
ljmp
xchg
mov
push
xlat
dec
fnstsw
aas
rcl
push
sub
mov
loop
xor
pop
outsb
inc
pusha
jecxz
mov
mov
cmp
mov
stos
and
dec
lcall
push
aaa
in
sbb
xchg
jne
sub
xchg
dec
lock
loop
test
adc
adcl
pusha
cmp
jae
subb
or
iret
cmp
sub
add
out
roll
jl
push
mov
or
rorl
inc
out
and
jle
or
mov
sub
mov
out
mov
test
add
mov
mov
test
xorb
jnp
push
scas
ficomps
adc
sbb
dec
add
lcall
mov
dec
xchg
movsl
sbb
ds
mov
dec
loopne
and
adc
into
and
add
inc
pusha
or
cmp
mov
movsb
insl
mov
orb
mov
xchg
add
sti
jnp
fadd
mov
stos
sarb
dec
add
cmp
sti
das
aas
jno
cltd
test
add
dec
jo
push
outsb
xor
pop
xor
mov
aad
mov
pushf
push
icebp
pop
adc
mov
pop
mov
hlt
dec
jbe
dec
ljmp
pop
pop
test
fnstsw
and
adc
ja
jb
jle
adc
movb
arpl
inc
xor
jl
push
xchg
or
xor
loopne
fimull
sarl
sub
fidivrs
cmc
lds
lcall
or
mov
leave
lahf
or
mov
xchg
sbb
or
inc
jns
insb
test
mov
or
iret
lea
int3
pop
lods
push
ja
fs
push
or
adc
in
and
xor
pop
mov
aad
cmp
int
cmpsl
or
pop
aad
add
ret
and
leave
mov
in
add
outsb
lret
dec
data16
inc
push
movsl
pop
jne
fsubs
gs
scas
loopne
sbb
roll
imul
mov
popf
mov
mov
dec
out
adc
cmpl
and
loopne
ret
test
xchg
mov
movsb
lret
cmc
out
add
inc
int
movsl
dec
push
push
push
jle
xchg
enter
je
arpl
mov
test
cmp
cli
mov
xchg
scas
outsb
lahf
xchg
rcll
loop
pushl
add
push
xchg
sbb
push
shlb
fs
dec
lret
push
dec
xor
dec
cmp
mov
and
jae
mov
jl
or
mov
fldl
add
pop
daa
aas
fldenv
je
ret
pop
imull
scas
addr16
cmp
fiaddl
mov
inc
cli
popf
ret
into
push
mov
or
mov
ret
mov
xchg
fdivl
mov
push
jmp
shl
mov
shl
xchg
pop
cmp
jnp
mov
push
call
iret
adc
in
stos
ret
les
sti
fcmovnb
xchg
pusha
test
xor
je
fsubrp
and
dec
sbb
push
lods
xchg
fcompl
cmpsb
cmp
dec
pop
sub
filds
add
inc
scas
cmp
and
cmp
and
add
jmp
xchg
leave
xchg
jge
cmp
or
data16
adc
sbb
inc
pop
scas
jnp
lahf
pushf
jnp
xchg
shll
add
and
and
cmp
push
daa
mov
ss
push
sahf
scas
pop
xchg
pop
pop
jns
or
cmpsb
sbb
mov
popf
cmp
loope
outsb
or
sbb
imul
repnz
xor
sub
cmpsb
add
push
gs
cmp
mov
jnp
jb
scas
jnp,pn
jnp
xchg
mov
dec
jae
je
sbb
or
fs
int
adc
or
fmuls
jno
add
inc
inc
es
test
cld
aam
mov
mov
cwtl
jnp
xor
adcb
es
ret
cltd
mov
jo
gs
inc
adc
inc
mov
arpl
sub
je
push
orl
lret
cli
mov
lods
sbb
adc
adc
fs
mov
mov
mov
sbb
jno
add
dec
iret
repnz
cmpsl
cwtl
xchg
les
rcll
mov
jnp
addr16
loop
dec
sbb
sub
xchg
sub
mov
cmpl
dec
test
push
into
subb
mov
cwtl
and
clc
jo
fstpl
aaa
or
test
fdivrl
incb
mov
data16
pop
pop
iret
push
sub
push
fnstsw
nop
adcl
jne
xchg
dec
in
out
icebp
or
leave
push
sbb
les
jns
rorl
sbb
popl
push
dec
jbe
cld
pop
and
cltd
cmp
pop
cmp
jge
addr16
or
push
fdivl
mov
cmpsb
out
dec
pop
xchg
and
cltd
cwtl
out
test
inc
stos
pop
test
and
fnstcw
pop
out
out
mov
sbb
add
lcall
test
mov
enter
mov
cld
jle
test
dec
test
imul
mov
outsl
cmc
pop
cmp
aam
jl
movsl
sbb
sbb
repz
stos
into
cmp
or
push
mov
cltd
in
and
and
dec
scas
push
popa
loopne
xor
je
ss
fdivs
jp
sarl
jnp
jecxz
mov
sahf
xor
pusha
leave
ljmp
ljmp
data16
lds
mov
xor
xchg
sbb
lods
xchg
mov
mov
popa
imul
test
lcall
shrb
ljmp
fistps
jmp
js
inc
mov
xor
inc
rolb
xorl
sub
dec
in
push
test
aad
jmp
push
inc
andl
call
pushf
sub
mov
repnz
jmp
cmc
sub
bt
cmc
cmp
pushf
mov
pushf
push
lea
jae
pusha
pusha
movl
pushf
lea
jmp
add
inc
gs
js
je
outsl
fs
push
add
call
jle
or
movsb
ss
dec
jg
outsb
mov
pop
scas
daa
push
or
out
push
test
jno
sub
fiadds
jmp
arpl
ficoms
mov
jo
lods
jmp
jo
xchg
lock
sahf
cmp
inc
addb
sub
out
cmp
sbb
mov
out
test
add
jb
insl
jo
add
add
je
push
dec
outsl
arpl
add
test
cltd
cwtl
or
and
lock
mov
mov
movzbw
call
add
inc
gs
gs
dec
bound
arpl
add
je
jb
gs
gs
fs
imul
stc
or
pushf
lea
je
not
movsbw
pushf
pushl
mov
lea
call
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
pushf
mov
call
lea
jne
sub
mov
push
add
test
movzwl
bsf
mov
test
bt
clc
cmp
add
jmp
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
mov
out
loopne
mov
or
mov
jle
xchg
incl
xchg
push
shll
and
aam
jbe
lock
bound
cmp
sub
int3
clc
shld
sub
in
lea
clc
out
or
lds
mov
mov
outsb
cmpsl
cmp
pop
loop
jns
inc
push
xchg
pop
aas
subb
in
inc
out
loopne
or
mov
push
imul
or
xchg
sub
lock
sbb
dec
cmp
fmul
stos
repnz
xchg
aam
adc
icebp
ficomps
rcll
jmp
jb
mov
inc
fst
pop
xchg
mov
push
fs
adc
adc
je
pop
movsb
sbb
decb
mov
or
adc
jo
sbb
mov
mov
rcl
inc
jmp
inc
out
sbb
pop
adc
mov
mov
test
or
cmc
test
xchg
add
je
je
dec
popa
outsb
fs
add
loopne
jle
inc
or
nop
xchg
push
mov
fnstenv
loopne
cmc
sbb
imul
ror
aaa
inc
repz
inc
imul
lods
cmp
cwtl
mov
xor
int3
jbe
sbb
or
pusha
adc
xor
aam
pop
cmp
push
stos
mov
adc
aam
xchg
jne
popf
inc
sbb
insb
push
test
das
jge
je
mov
ss
mov
sub
xor
and
jmp
nop
daa
stc
fwait
adc
rorl
call
jmp
push
pushf
popl
pushf
pushl
popl
mov
lea
jmp
mov
bswap
pushf
push
dec
btr
rol
and
add
shld
bts
add
xchg
lea
shl
or
xor
sub
movsbw
pusha
lea
movl
mov
pushf
lea
jmp
movw
pusha
mov
call
call
pusha
push
not
rol
pushf
ror
inc
shl
add
lea
add
lea
xor
bsf
sub
not
mov
push
push
pushf
lea
jmp
lea
jg
pusha
mov
mov
call
push
push
mov
mov
pusha
jmp
call
push
mov
pusha
push
mov
lea
jmp
btc
mov
mov
push
push
sub
jmp
shl
not
rcr
shl
ror
movsbw
xor
cmp
movsbw
dec
jmp
push
mov
pusha
pusha
mov
jmp
mov
pushf
lea
jmp
jmp
lea
js
pushf
jmp
mov
mov
mov
push
call
mov
movw
lea
jmp
pushf
mov
push
pushf
popl
call
bt
dec
mov
stc
test
call
pushf
popl
pushf
call
call
jmp
push
pushf
popl
pushf
mov
pushl
popl
mov
lea
jmp
pushf
mov
pushf
call
shld
xor
lahf
movzww
push
add
jmp
pusha
call
stc
bt
pusha
sub
pusha
pushf
mov
mov
mov
pushl
mov
movl
movb
lea
jmp
movb
mov
call
call
neg
dec
mov
stc
add
call
sub
bt
jmp
pushf
popl
jmp
mov
pusha
push
lea
cpuid
test
sub
cmc
cmpl
call
clc
neg
pushf
sub
pusha
movw
test
mov
cmc
clc
pushf
sub
mov
pushf
jmp
jmp
test
sub
call
rcl
aam
mov
test
pushf
mov
movw
bt
add
pusha
mov
push
pushf
lea
jmp
pushf
jmp
and
call
movb
mov
mov
lea
ja
pushf
push
push
mov
mov
pushf
push
jmp
push
push
pushl
pusha
movw
mov
jmp
pusha
call
pusha
jmp
not
call
sub
stc
pushf
lea
test
lea
shl
pusha
test
mov
shl
shld
or
add
mov
test
not
mov
neg
shrd
lea
movzbl
cmp
bt
add
cmc
rol
rol
bswap
ror
neg
bsf
sub
rcr
pushl
clc
rol
inc
inc
add
lea
setno
clc
movzbl
jmp
pusha
pushf
popl
push
pushf
movb
pushl
popl
pushf
mov
movb
lea
jmp
mov
movzbw
call
movw
mov
inc
dec
mov
lea
xchg
movzbw
not
mov
movsbw
pushf
xchg
inc
pushl
popl
pushf
dec
pushf
lea
movl
bswap
pop
movsbl
mov
lea
dec
bt
rcr
rol
pushf
add
neg
or
sbb
lea
movsbl
shl
sub
cmc
sub
call
bswap
movsbw
mov
jmp
xor
mov
dec
sub
push
pushf
inc
pusha
shr
push
test
not
shrd
neg
bsr
sub
call
pushf
call
pushf
mov
call
jmp
mov
mov
lea
jmp
setno
pusha
pusha
inc
movzbl
call
call
lea
mov
bswap
not
mov
jmp
cmc
add
push
movw
pushf
mov
push
pushf
pushf
lea
jmp
pushf
mov
push
call
ror
clc
cmp
mov
test
test
cmp
sub
jmp
mov
pushf
pushf
call
xchg
call
pushf
jmp
pushf
movb
mov
mov
pushf
lea
jmp
push
stc
ror
cmc
bt
add
clc
not
cmp
test
bt
bt
xor
pushf
push
pusha
mov
mov
jmp
sub
jne
add
pusha
call
add
push
mov
pusha
call
call
movw
pushf
popl
push
jmp
lea
jne
jmp
jmp
mov
push
pusha
mov
call
jmp
not
bt
pushl
and
push
mov
movb
call
lea
jne
adc
mov
bt
rcr
mov
clc
and
jle
cmp
pushf
mov
mov
push
lea
jne
bt
push
xorb
lea
not
pop
pushf
lea
jmp
dec
bswap
lea
pushf
rol
call
push
push
bt
add
test
add
call
mov
cmc
lea
bt
test
sub
pushl
pushf
jmp
movsbl
rcr
mov
adc
lea
bswap
pushl
add
clc
rol
cmp
cmc
adc
sub
not
btc
rol
stc
add
mov
bswap
bswap
bswap
movzbl
btr
mov
push
bt
ror
push
stc
cmp
bt
add
pushf
mov
pusha
pushf
pushl
ret
pushf
push
mov
push
movl
mov
lea
jmp
xchg
push
mov
pop
lea
pushl
pushf
jmp
movzbl
mov
not
pushf
mov
inc
movsbw
inc
bswap
mov
push
jmp
mov
sub
shld
call
pushl
popl
pushl
pushf
pushf
movb
lea
jmp
mov
lea
push
mov
pushf
lea
jmp
pushf
push
movb
movl
pushf
mov
push
movb
pushl
ret
sub
and
mov
rcl
add
mov
clc
call
mov
pusha
pusha
mov
mov
call
bswap
bswap
mov
push
lea
jmp
jmp
jmp
call
mov
pushf
movb
mov
call
mov
pusha
pusha
pushf
pushf
popl
mov
pushl
popl
movb
lea
jmp
pushf
pushf
push
mov
call
push
mov
push
pushf
mov
mov
mov
jmp
xor
mov
bt
add
call
pushf
inc
call
jmp
aaa
shl
cmc
mov
dec
mov
cmp
push
call
mov
cmp
test
call
dec
dec
cmc
rol
cmp
add
stc
dec
rcl
lea
movsbl
shld
sub
lea
jmp
aad
bsf
sub
aaa
mov
push
add
movb
add
pushf
pushf
dec
call
mov
pusha
mov
call
inc
setns
mov
rol
shl
pusha
mov
test
cmc
jmp
mov
jmp
mov
jmp
mov
mov
pusha
lea
jmp
pushf
popl
movb
pushf
pushf
pushl
popl
movl
lea
jmp
mov
push
push
pushf
popl
mov
xchg
dec
not
mov
mov
mov
pop
movsbw
xchg
movsbw
inc
movw
pushl
popl
lea
mov
not
pusha
movl
lea
mov
jmp
inc
bt
cmc
test
cmp
sub
mov
mov
mov
pushf
pushf
pushl
lea
jmp
shl
btc
mov
cmc
bt
pusha
add
pushf
lea
jmp
push
cmc
clc
cmp
sub
call
pusha
call
bswap
mov
jmp
lea
je
bt
jle
xor
stc
cmc
xchg
cmc
push
bt
test
jmp
mov
pusha
pushf
pusha
add
movb
mov
movw
push
push
push
lea
jmp
pushf
pusha
xchg
jmp
jmp
jmp
mov
push
pushl
mov
lea
jmp
pusha
call
movsbw
pop
movsbl
xchg
lea
mov
call
pushf
popl
movb
jmp
inc
lea
bsf
and
rcr
pop
mov
mov
clc
test
jmp
mov
pushf
movsbw
pushl
mov
pushl
popl
bswap
jmp
push
jmp
mov
pusha
lea
jmp
pusha
push
jmp
sub
shl
bt
mov
bsf
mov
mov
test
push
test
add
call
not
stc
shld
ror
mov
shrd
shr
setns
mov
jl
not
call
mov
jmp
pusha
push
mov
pushl
pushf
lea
jmp
seta
pusha
movsbw
mov
pusha
jmp
jmp
movzbw
push
mov
bswap
call
pushf
shl
push
mov
movw
pushf
popl
movb
pushf
movb
pushl
popl
push
lea
jmp
pushf
mov
pushl
movb
movb
pushf
popl
movl
movb
movb
call
mov
mov
movw
pushl
push
lea
jmp
lea
call
push
mov
push
lea
jmp
movb
mov
call
pushl
popl
pushf
mov
lea
jmp
jmp
call
rcl
mov
stc
pushf
add
jmp
mov
call
add
call
cmp
test
cmp
test
shr
pusha
pushf
pusha
jmp
mov
call
mov
push
pushf
pusha
pushf
lea
jmp
mov
pushl
push
movw
movw
pushl
ret
movl
not
mov
mov
xchg
dec
movsbw
not
not
btc
rol
bsr
ror
xchg
add
or
shld
lea
btc
jmp
lea
jge
pusha
mov
jmp
dec
clc
mov
ror
cmc
jmp
pushf
call
jmp
sub
sub
jle
xor
jmp
cmp
mov
shr
shr
mov
cmp
clc
pushf
test
add
push
jmp
sub
movb
lea
jae
push
mov
push
pushl
lea
jmp
movzbw
sub
mov
and
mov
not
cmc
mov
cmc
cmp
bt
pusha
add
mov
pusha
movl
shrd
pushf
push
call
pusha
pop
call
lea
movsbw
sub
movzbl
mov
push
pushf
lea
jmp
mov
pushf
pushf
jmp
pusha
jmp
not
rcr
clc
movzbl
jmp
xchg
pusha
movsbw
mov
inc
pushl
popl
lea
jmp
pusha
bswap
pushl
stc
cmc
cmc
ror
movb
push
add
pushf
jmp
pushf
popl
call
call
call
neg
test
sub
bsr
shr
lea
or
and
clc
cmc
sub
pusha
pusha
mov
not
pushf
pusha
jmp
cmc
mov
bt
mov
add
sbb
mov
bt
pushf
sub
call
jmp
mov
mov
mov
jmp
call
pushf
popl
movw
movb
call
cmc
clc
mov
rcl
sub
inc
jmp
bswap
pushl
lea
pushf
pushf
lea
jmp
add
jg
xor
bt
neg
jmp
not
cmp
cmp
test
not
clc
test
sub
jb
push
and
pushl
call
dec
ror
xor
sub
pusha
call
mov
pushf
popl
jmp
pusha
sbb
movzbw
or
rdtsc
test
sub
call
pushl
popl
mov
lea
jmp
jmp
call
pusha
lea
ja
rdtsc
mov
btc
lea
sar
add
btr
je
sub
rcl
cwtl
aam
lea
not
rol
shr
and
neg
mov
sbb
rcr
sub
bswap
pusha
pushf
lea
mov
lea
movzbl
pushf
mov
cld
push
jmp
inc
test
shr
mov
or
and
shr
mov
push
pushf
pusha
cmp
sub
bt
lea
js
clc
shr
jmp
movzbl
pushf
popl
lea
js
dec
push
inc
xchg
push
not
inc
push
push
pusha
inc
xchg
pushf
xchg
setbe
xchg
pushl
popl
bswap
seto
inc
movl
pop
movzbw
mov
movzbw
xchg
push
dec
cmc
bts
lea
ror
rol
sar
add
call
pushf
mov
pushf
push
pushl
mov
mov
movb
push
mov
push
jmp
push
movl
pushf
mov
lea
pusha
dec
dec
rol
rol
bt
cmc
add
movsbl
dec
stc
lea
shr
sub
not
mov
bswap
mov
pusha
pusha
lea
jmp
xchg
jmp
pushf
mov
movb
jmp
pushf
mov
pusha
push
push
mov
call
pushf
mov
pusha
call
call
pusha
call
not
pusha
pushf
cmp
cmc
xor
push
mov
pushf
movb
mov
lea
jbe
push
mov
inc
movb
clc
pushf
mov
sub
mov
mov
mov
mov
push
lea
jmp
lea
pushf
pusha
lea
jmp
sub
pushf
jmp
call
add
pop
lea
test
ror
not
sub
movzbw
mov
push
pushf
pushl
push
lea
jmp
jmp
adc
aam
mov
clc
mov
clc
pushf
test
cmp
sub
cmp
test
shl
pushf
mov
push
mov
pusha
call
cwtl
cwtl
push
mov
jmp
cmp
sub
lea
jle
inc
clc
stc
not
jmp
shrd
shld
mov
mov
shl
pusha
bts
cmc
mov
pusha
pushf
call
clc
pusha
pushf
add
pushl
jmp
lea
not
mov
pushf
push
pushl
popl
mov
movsbw
movl
pushf
movsbw
mov
not
lea
jb
dec
rol
rcr
rol
shl
shld
adc
mov
add
dec
mov
shl
neg
sub
sub
sub
movsbw
mov
push
lea
pusha
pusha
lea
jmp
call
pop
jmp
stc
neg
call
call
lea
call
push
jge
pushf
pusha
movsbl
mov
inc
call
pushl
mov
pushf
pusha
lea
jmp
pusha
mov
push
dec
call
pushf
popl
call
pushf
pushl
popl
pushf
lea
jmp
pushf
push
pusha
xchg
push
movl
call
pushf
popl
pushf
mov
mov
pushl
popl
pushf
pushf
lea
jmp
rol
rcr
btc
test
add
rol
ror
and
adc
lea
shl
jmp
pushf
popl
pushl
call
mov
push
lea
jmp
call
pusha
xchg
movl
mov
lea
jge
movsbw
mov
push
pusha
call
lea
xchg
pushf
bswap
jmp
mov
mov
push
jmp
jmp
pusha
pusha
mov
pushl
popl
push
push
push
lea
jmp
pop
mov
push
push
pushf
lea
jmp
call
lea
pop
not
mov
pusha
lea
jmp
inc
dec
mov
jmp
jae
lea
lea
mov
pusha
mov
call
call
mov
movw
mov
pushl
pushf
movb
call
mov
push
lea
jmp
movzbw
mov
pushl
call
call
btc
rol
not
add
clc
bt
rol
lea
and
shld
sub
jmp
mov
lea
jns
stc
sub
pusha
call
cmc
neg
cmp
cmp
add
cmc
cmp
cwtl
pusha
call
lea
jae
xor
clc
jmp
cmp
call
not
lea
lea
movb
push
pusha
mov
lea
jmp
lea
jne
rcr
xorb
not
mov
movzbl
pushf
mov
push
push
lea
jmp
not
bswap
movsbl
pusha
mov
jmp
pop
movsbl
mov
pusha
pushf
mov
not
movsbw
mov
movw
movl
pushl
ret
pusha
jmp
call
pushl
popl
push
pushf
lea
jmp
mov
pushl
call
call
shrd
not
sub
pusha
movzbl
lea
pushf
pusha
push
push
lea
jmp
add
pusha
pusha
call
pushf
pushf
popl
call
pushl
jmp
mov
call
inc
pushf
cwtl
call
pushl
popl
pushl
push
pushl
lea
jmp
mov
pushf
movb
mov
mov
mov
pushl
pushl
mov
call
dec
inc
pushl
popl
not
push
xchg
movl
dec
pushf
mov
lea
bswap
pop
pop
dec
pop
xchg
rol
rol
dec
movsbw
bsf
add
and
xadd
lea
bts
sub
lea
mov
jp
mov
pushf
lea
jmp
call
mov
movb
mov
mov
mov
call
add
jmp
mov
pushl
mov
jmp
shl
shrd
mov
rol
push
add
not
mov
push
pushl
mov
movb
lea
jmp
mov
push
jmp
lea
pushf
pushl
pushf
movb
lea
jmp
mov
jmp
push
jmp
lea
jle
pushf
mov
pushf
mov
lea
jmp
mov
movb
movb
lea
pushl
call
mov
pushf
pushf
mov
jmp
pusha
call
not
mov
bswap
movzbw
mov
push
movsbw
not
pushf
lea
pushl
popl
bswap
push
dec
bswap
mov
mov
xchg
push
pusha
dec
not
pop
btr
bts
rol
not
bswap
neg
bsf
add
rcl
pop
shr
sub
lea
push
rcr
dec
not
sub
call
pushl
popl
mov
lea
jmp
movzbl
dec
btr
setb
ror
bsf
add
setne
bswap
btc
sub
rcr
lea
setle
movzbl
cmc
push
pusha
cmp
mov
cmp
clc
sub
cmp
or
jmp
mov
bswap
jmp
cwtl
btc
mov
call
inc
bswap
call
add
cmc
cwtl
cmc
push
push
sub
mov
call
call
jmp
dec
cmc
ror
cmp
test
add
call
movl
movsbl
pushf
pushf
movsbw
mov
pop
call
call
call
and
pushf
cmp
movb
push
pushf
lea
jne
ror
dec
shr
xorb
lea
pop
push
pushl
pusha
lea
jmp
pushl
popl
xchg
movl
call
lea
rol
lea
add
shl
add
shr
lea
stc
clc
sub
pusha
bswap
lea
pushl
mov
pushl
lea
jmp
mov
jmp
movzbl
call
lea
jnp
pusha
pushf
popl
movw
mov
pushf
mov
lea
jno
lea
dec
inc
push
movzbw
bswap
xchg
movsbw
push
xchg
bswap
call
pushf
popl
pushf
movb
xchg
inc
mov
movzbw
mov
pushf
lea
mov
bswap
xchg
mov
inc
movzbw
lea
pushl
popl
bswap
movl
pusha
mov
bswap
pushf
dec
cmc
rol
sbb
cmp
neg
mov
add
bts
rcr
neg
rcr
lea
rcl
sub
push
call
pusha
call
lea
adc
cmc
mov
and
jmp
pushl
popl
pushf
push
xchg
pushf
movl
pushf
not
mov
movzbw
call
pushl
popl
pusha
dec
movsbw
bswap
movl
not
mov
pop
not
mov
not
dec
bts
stc
call
inc
pushf
mov
bswap
call
xor
pusha
xchg
jmp
pushf
call
push
push
pusha
mov
call
neg
movsbw
and
movzbw
notl
movsbw
sub
mov
cmp
push
stc
sub
test
pushl
push
and
call
bt
mov
ror
xadd
mov
bt
mov
jmp
mov
pusha
pushf
call
pushf
bswap
lea
mov
movw
lea
jmp
inc
clc
cmc
clc
sub
push
movb
mov
pushf
lea
jmp
call
jmp
mov
push
mov
mov
pop
jmp
push
call
call
rol
sub
cmp
add
bsr
xadd
sbb
lea
bt
inc
shld
pushf
sub
movsbw
mov
mov
pushf
pushl
pushf
lea
jmp
jmp
call
lea
push
pushf
pushf
push
lea
jmp
push
cmc
add
pushf
push
pusha
push
mov
push
movb
lea
jmp
bt
sub
jmp
push
lea
mov
movzbw
call
call
call
pop
movl
dec
not
movzbl
mov
xchg
xchg
xchg
dec
cmc
jmp
xor
push
movb
mov
jmp
mov
call
mov
push
mov
call
divl
call
jmp
lea
jnp
push
xchg
jmp
movsbw
movsbw
lea
mov
push
movl
jmp
pusha
push
call
rol
rol
add
rol
pushf
lea
mov
cmc
and
sub
push
jmp
btr
btr
mov
stc
pushf
stc
pushl
ror
pushf
pushf
add
push
mov
push
pushf
mov
push
pushl
ret
shr
mov
call
add
pusha
mov
pusha
pushl
push
pushf
lea
jmp
call
call
mov
movl
pushf
popl
call
stc
call
push
mov
mov
pushf
popl
pusha
xchg
not
mov
bswap
movw
xchg
pop
mov
mov
bswap
movw
xchg
pushl
popl
bswap
inc
movl
xchg
movsbl
mov
push
mov
dec
dec
stc
rol
pushf
mov
add
jmp
not
pop
cwtl
pop
rdtsc
pop
bsr
pushf
xadd
pushl
popf
call
call
push
neg
cmc
jmp
xchg
lea
bswap
pusha
mov
pop
not
mov
call
sub
pusha
mov
push
push
movw
lea
jmp
pushf
popl
movb
pushf
pushl
popl
mov
pushf
lea
jmp
inc
dec
jmp
btc
mov
inc
btc
mov
stc
call
pushl
popl
lea
jmp
lea
inc
sbb
add
or
sub
movzbl
call
mov
pusha
call
pushf
popl
jmp
push
pusha
call
pushf
mov
pushl
mov
jmp
movb
pushf
inc
cmc
sub
pushf
jmp
pushl
pushf
popl
call
add
jmp
call
push
pushf
mov
movb
push
lea
jmp
pusha
bswap
cmc
pushf
push
cmc
ror
push
jmp
sub
jb
push
mov
push
xchg
pusha
movl
pushf
jmp
mov
cmp
test
mov
xor
sub
stc
pushf
xor
clc
movsbw
ror
btc
mov
shld
add
btr
cmc
call
rcl
movzbw
das
mov
cmp
das
aad
daa
pop
lea
dec
pop
pusha
mov
sub
jbe
dec
lahf
pop
call
jmp
mov
pusha
movl
jmp
not
xchg
pushl
call
rol
btc
stc
mov
clc
jmp
push
pushf
cmc
xor
cmp
jmp
pushf
cmp
btc
mov
pushl
bt
add
mov
push
call
pushf
call
sub
call
test
test
xor
stc
pusha
call
pushl
mov
mov
pushf
mov
lea
jmp
mov
mov
mov
movb
pushf
popl
pusha
pusha
push
xchg
movzbw
mov
jmp
push
lea
movsbl
push
xchg
pushf
pushf
pusha
pushl
popl
push
movl
call
push
mov
pushf
movsbw
movzbw
mov
jmp
jmp
sar
neg
shr
mov
bt
push
sub
test
movw
cmc
add
jmp
pushf
popl
pushl
push
xchg
movsbw
inc
not
mov
call
not
xchg
movzbw
lea
movsbw
mov
cld
lea
push
jmp
push
inc
pushf
stc
not
jmp
pushf
pushl
mov
pop
push
inc
jmp
push
mov
jmp
cmc
neg
pushf
sub
cmc
bt
call
jmp
pusha
sub
pushf
pushf
shl
mov
mov
pushf
call
push
mov
setns
dec
bswap
pushl
movsbw
push
pushf
xchg
bswap
mov
movsbl
lea
dec
not
bts
rol
movl
push
bswap
shld
add
lea
btc
neg
lea
shld
call
jmp
movzbw
lea
movzbw
setbe
mov
pushf
mov
movb
call
cld
push
mov
movzbl
push
lea
pushf
jmp
pushf
popl
mov
call
pushl
popl
pushf
pusha
pushl
lea
jmp
pusha
mov
jmp
dec
stc
ror
push
rol
pop
inc
add
btr
lea
test
sub
mov
jmp
test
pusha
pushf
and
movl
mov
pusha
pushf
popl
pushl
pushl
popl
mov
lea
jmp
rol
adc
call
pushf
popl
mov
pushf
pushl
popl
mov
pushl
pushf
pushf
lea
jmp
dec
jmp
call
cld
mov
cld
pushl
mov
rep
bsf
adc
mov
stc
bts
pusha
shr
mov
push
clc
bt
pushl
pushl
popf
push
push
movl
lea
jmp
pusha
pushf
mov
call
push
lea
jne
jmp
lea
jne
stc
bsr
mov
setno
mov
push
jmp
mov
movb
pushf
movb
lea
jmp
pushf
jmp
mov
pusha
pushf
pushf
push
pushl
ret
push
mov
mov
pushl
push
jmp
pushf
mov
pusha
call
ror
mov
neg
setg
mov
test
push
pushf
not
cmc
sub
jg
pusha
pushf
not
stc
cmc
sub
bt
clc
pushf
stc
and
push
mov
jmp
call
call
pusha
jmp
push
xor
clc
mov
push
add
jns
neg
cmp
test
add
pusha
cwtl
cmp
push
pusha
sub
pushf
mov
push
pushf
mov
movb
lea
jmp
shld
jmp
rol
sar
add
bt
call
sub
call
call
pushf
call
call
mov
movw
lea
jmp
pushl
pusha
mov
pushf
lea
jmp
jmp
bswap
dec
bswap
movsbw
jmp
neg
mov
pushf
cmc
pusha
cmc
xor
lea
jno
push
clc
pusha
ror
jmp
mov
sbb
or
mov
jmp
call
call
jmp
dec
rcr
rol
ror
rol
shld
dec
movzbl
add
neg
lea
call
mov
jmp
pushl
popl
pushf
pushl
movb
lea
jmp
push
jmp
clc
cmc
cmp
pusha
cmp
pushf
movw
call
bswap
mov
push
lahf
setge
not
call
dec
pushl
call
jmp
mov
inc
clc
call
pushl
pushf
popl
pushl
mov
pushf
not
inc
mov
inc
mov
xchg
bswap
mov
dec
pop
movl
lea
pushl
popl
pushl
pushf
movl
push
mov
push
xchg
dec
call
pusha
pushf
popl
push
movb
pushl
pushl
popl
pushl
pushf
lea
jmp
mov
jmp
stc
push
not
cmc
sub
pusha
jmp
pushf
popl
push
pushl
popl
pushf
pushf
push
pushf
lea
jmp
push
mov
push
dec
dec
mov
lea
push
movsbw
mov
xchg
not
not
xchg
movsbw
pushl
popl
mov
xchg
movl
mov
mov
inc
bswap
dec
rcl
pop
clc
rol
inc
add
bsr
lea
cmc
sub
pushf
lea
pushf
pushf
lea
jmp
mov
je
mov
and
mov
insb
test
mov
add
mov
and
mov
or
mov
sbb
mov
movsl
mov
ror
add
mov
test
mov
sbb
mov
dec
cli
mov
lock
mov
nop
gs
mov
sbb
add
mov
adc
mov
test
ror
add
sbb
add
int3
mov
adc
mov
adc
mov
int3
cmpsb
mov
test
cmp
mov
dec
cltd
mov
and
mov
test
inc
xchg
mov
je
mov
je
mov
test
and
mov
mov
add
add
sbb
jl
mov
test
mov
movsl
mov
test
mov
test
fmuls
add
mov
mov
test
sbb
mov
insb
test
mov
test
dec
cli
mov
nop
gs
js
mov
test
xor
mov
lock
mov
movsl
mov
test
int3
cmpsb
mov
lods
imul
dec
mov
ror
add
mov
test
dec
cltd
mov
nop
jmp
add
add
pop
mov
fmuls
add
mov
add
mov
call
fnsave
fmuls
add
pop
mov
aam
mov
inc
adc
add
mov
add
pop
mov
loopne
mov
adc
mov
dec
mov
add
pop
mov
mov
mov
call
test
mov
mov
leave
mov
fmuls
mov
call
push
mov
push
mov
mov
adc
mov
clc
sbb
add
pop
mov
int3
cmpsb
mov
and
mov
dec
cli
mov
call
sub
pop
mov
add
pop
mov
mov
add
mov
js
mov
jl
mov
call
pop
mov
pop
mov
add
into
mov
and
mov
call
in
add
sbb
call
add
mov
mov
pop
mov
clc
sbb
add
movsl
mov
and
mov
lock
mov
or
mov
test
mov
mov
xchg
mov
nop
gs
nop
jmp
add
add
mov
clc
sbb
add
mov
push
mov
mov
in
leave
mov
add
mov
dec
cltd
mov
inc
adc
add
mov
add
mov
pop
sbb
or
mov
mov
les
loopne
mov
mov
add
mov
adc
mov
adc
mov
cld
add
mov
pop
sbb
jl
mov
insb
test
mov
int3
cmpsb
mov
clc
sbb
add
cmpsb
mov
mov
mov
add
mov
pop
sbb
push
mov
mov
nop
jmp
add
mov
add
mov
loopne
mov
add
mov
adc
mov
push
mov
mov
adc
mov
insb
test
mov
sub
add
mov
add
mov
cmp
mov
dec
cli
mov
mov
jmp
add
add
mov
pop
sbb
add
mov
sub
add
xchg
mov
sbb
mov
mov
movsl
mov
mov
shlb
mov
cltd
mov
fmuls
mov
insb
test
mov
and
mov
cmp
mov
aam
mov
mov
into
mov
nop
gs
dec
mov
add
movsl
mov
or
mov
and
mov
or
mov
nop
gs
adc
mov
int3
cmpsb
mov
and
mov
xor
mov
add
mov
xor
mov
lock
mov
lock
jmp
mov
jmp
cmp
pusha
test
sub
clc
pushf
cmp
xchg
pusha
movw
test
mov
jmp
movsbw
pushf
mov
xchg
mov
xchg
push
xchg
xchg
pushl
bswap
not
push
jmp
jmp
pushl
pushf
popl
push
pusha
xchg
call
mov
not
cmc
pushl
popf
push
pushl
bswap
lea
mov
bswap
call
mov
push
lea
jmp
jmp
add
add
mov
pushf
push
not
dec
bt
lea
pushf
mov
rol
pusha
add
btc
lea
call
pusha
add
movw
pushf
pusha
call
pushf
push
mov
jmp
mov
push
pushf
lea
jmp
push
mov
pushl
push
mov
pushl
ret
bt
dec
xor
sub
pusha
movzbw
lea
lea
pushf
pushf
pushf
lea
jmp
mov
pushl
push
call
stc
not
or
add
jmp
pushl
popl
dec
lea
bswap
push
pusha
pusha
movsbw
movzbw
mov
movzbl
inc
pushf
dec
lea
jmp
call
pushl
add
pushl
pushl
lea
ja
not
jmp
mov
jmp
mov
jmp
movb
mov
movw
mov
jmp
jmp
test
pushl
popl
clc
push
mov
add
clc
push
pushl
popf
pusha
pushf
lea
jmp
pusha
pushf
mov
mov
call
inc
rcr
not
and
bsr
pushf
xor
mov
pusha
bt
sub
jmp
pusha
std
xchg
bswap
cld
mov
push
cld
call
mov
mov
mov
push
pushf
popl
call
pushf
mov
pushf
jmp
jmp
push
lea
jl
pushf
jmp
call
not
pushl
popl
movsbw
mov
call
pusha
add
pushl
pushf
bt
sub
push
sub
call
pushf
pusha
mov
jmp
stc
clc
lea
jno
sub
pushf
push
mov
call
push
pushl
popl
movb
lea
jmp
call
lea
jmp
cld
mov
mov
pushf
rep
rol
mov
mov
cmp
clc
pushl
mov
std
pushl
popf
movb
lea
jmp
push
jmp
mov
mov
pushl
mov
pusha
lea
jmp
pusha
call
pushf
xchg
jmp
push
not
lea
sets
mov
push
movzbw
pushf
xchg
jmp
call
pushl
popl
movb
mov
lea
jmp
movb
jmp
call
mov
push
pusha
mov
push
lea
jmp
mov
push
jmp
mov
call
jmp
btr
lea
bt
mov
sub
bswap
mov
btc
mov
shld
shrd
sar
add
call
pushf
lea
movb
mov
pushf
mov
lea
jmp
mov
pushf
popl
movb
mov
dec
mov
pushf
bswap
xchg
pushf
call
mov
push
pushf
lea
jmp
pushf
sub
test
push
shr
call
mov
push
movb
push
lea
jmp
mov
mov
pushf
pushf
pushf
lea
jmp
pushl
movb
pushf
popl
jmp
push
pushf
sub
mov
jmp
push
xchg
call
lea
pushf
push
pushf
pushf
lea
jmp
pushf
mov
call
pusha
jmp
pushf
pushf
mov
pushf
movb
lea
jmp
sub
mov
pusha
pushl
jmp
or
push
shl
btr
lea
cmc
cmc
cmp
pushl
pushf
call
mov
call
push
mov
mov
pushl
jmp
pop
push
pushf
not
call
mov
mov
movw
movb
movb
lea
jmp
lea
jns
pushf
mov
pushf
pushf
popl
jmp
jmp
btr
call
mov
pushf
popl
jmp
lea
jg
pushf
push
xchg
call
mov
jmp
sub
push
sub
jnp
bt
pusha
shr
push
push
mov
call
pushf
cbtw
jmp
pushf
pushf
popl
jmp
call
pop
movzbl
lea
mov
movsbw
pushf
lea
dec
bt
call
push
mov
mov
jmp
xchg
pusha
mov
push
pushl
popl
inc
movsbw
movl
jmp
push
push
mov
pushf
call
mov
not
dec
mov
pushf
mov
pushf
pushf
dec
mov
mov
mov
pushf
pushl
popl
movzbw
lea
lea
push
movl
movsbl
dec
mov
dec
dec
btc
push
rol
shld
add
and
mov
bswap
jmp
add
cmp
cmp
cmp
add
test
clc
cmc
pusha
sub
mov
call
mov
mov
mov
movw
movb
jmp
add
add
push
not
inc
movsbw
jmp
pushf
popl
mov
pushf
movw
pushl
popl
mov
lea
jmp
test
add
bt
sub
jmp
mov
pushf
pushf
call
bt
mov
jmp
mov
pushf
lea
jmp
movl
movzbw
movsbl
xchg
dec
mov
inc
dec
ror
pusha
bts
rol
rol
pusha
btc
stc
add
add
shld
inc
pop
jmp
jmp
pop
dec
lea
dec
stc
and
sub
lea
movzbw
not
mov
push
pusha
lea
jmp
mov
pushf
mov
pushf
call
rcl
lea
bt
mov
test
pushf
pushf
add
jmp
call
lea
bsr
shl
sub
push
lea
pushf
pushf
pushf
lea
jmp
cltd
cltd
movsbw
mov
pushf
bswap
pushf
mov
call
call
call
movl
mov
call
mov
mov
lea
jmp
mov
lea
bswap
bswap
push
mov
jmp
mov
pushf
call
mov
pusha
mov
pushl
pushf
lea
jmp
mov
push
jmp
jmp
jmp
mov
movw
pushf
lea
jmp
stc
mov
jmp
dec
push
mov
pushf
jmp
not
inc
bsf
sub
lea
mov
pusha
lea
jmp
xchg
dec
mov
mov
pushf
movsbl
movl
mov
pushf
movzbw
xchg
movzbw
mov
bswap
movzbw
pushl
popl
pop
movl
movzbw
pushf
mov
movzbw
dec
pushf
rol
rol
bts
shld
add
xor
add
lea
cmp
movsbw
stc
bsr
sub
movsbw
lea
mov
push
pushf
pushf
pushf
lea
jmp
lea
jae
pushf
divl
mov
call
