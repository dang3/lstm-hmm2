add
clc
pop
movhlps
xor
push
xchg
pop
cltd
movl
add
jmp
xchg
or
psubusb
push
xchg
pop
sub
xor
jmp
jmp
add
jmp
or
jmp
push
xchg
pop
sbb
push
dec
pop
psllw
movq
sub
inc
movl
or
ja
sbb
imul
sub
push
dec
pop
sbb
pavgw
sbb
jno
sub
jle
mulps
jmp
jmp
jb
inc
add
pop
icebp
inc
add
jmp
push
jns
shr
movd
jle
push
cld
pop
or
jae
add
rcr
js
xor
jnp
movl
or
jae
paddb
sbb
and
adc
psadbw
or
rcr
xor
punpckldq
push
dec
pop
aaa
movb
or
sbb
shr
push
dec
pop
sub
rcl
sbb
ja
and
push
cltd
pop
and
pcmpeqd
and
adc
jmp
shrb
jecxz
movb
push
inc
pop
xor
pmaddwd
push
dec
pop
jnp
push
inc
pop
psubusb
or
add
addps
jmp
outsb
sub
add
pop
xor
or
xchg
movw
jmp
pop
mov
add
xor
add
add
pop
sbb
xor
push
dec
pop
and
jns
push
dec
pop
imul
and
jmp
loope
pop
fucomi
imul
punpcklbw
sbb
push
lahf
pop
sbb
jmp
icebp
test
xchg
pop
movb
pcmpgtb
jge
sbb
jbe
rcr
cvtpi2ps
push
dec
pop
add
xor
shr
push
inc
pop
xor
and
push
cltd
pop
cmpl
jne
adc
push
ret
add
add
jecxz
lock
pop
push
test
negl
sbb
sub
out
es
bswap
or
int
sbb
sbb
in
xor
shl
xor
lcall
out
lock
or
mov
cmpsl
xor
loope
insb
push
repnz
xor
jns
aaa
xchg
out
xor
ljmp
lahf
add
jb
sbb
xor
repnz
push
out
mov
bound
cmp
mov
mov
dec
or
mov
bound
xor
or
call
repnz
ja
xor
repnz
xor
mov
mov
cs
dec
repnz
jb
xor
add
fdiv
repz
enter
shrb
mov
repz
fiaddl
cmp
jb
mov
lock
mov
lock
repnz
xor
bnd
lret
shlb
div
cmpsl
mov
xor
xor
ljmp
sbb
xor
repnz
or
mov
or
mov
cmp
mov
div
add
int3
jnp
sar
sbb
sub
fcomip
call
int
or
sbb
div
lock
and
xor
mov
pop
or
xor
jl
repz
cmpsb
jns
mov
jnp
jl
jae
cmpsl
jns
mov
jl
lcall
mov
cmp
ljmp
jle
clc
push
push
ljmp
jl
cld
mov
jnp
jle
call
sbb
jecxz
push
shlb
bnd
sti
jns
jle,pt
in
push
jl
xchg
xchg
repnz
mov
xlat
bound
bound
bound
bound
bound
addr16
imul
jnp
jl
cmpsb
rcl
into
mov
ds
jnp
icebp
jae
lret
lock
mov
or
js
icebp
andb
aam
or
mov
mov
repz
xor
or
into
aam
jl
aam
sbb
into
mov
jl
aam
jl
jae
lret
jns
xor
divl
div
jnp
je
lock
div
cmp
dec
sti
repnz
stos
cld
xor
mov
jne
sbbl
xor
icebp
and
iret
je
lock
mov
repnz
jl
pop
xor
bnd
call
bswap
div
mov
mov
lock
mov
negb
div
jo
call
bswap
div
mov
mov
lock
imul
and
jae
repz
je
in
mov
lock
jo
jnp
je
int3
mov
aaa
fidivrl
hlt
xor
jmp
jae
repz
mov
into
jnp
hlt
xor
repnz
xor
jns
mov
repnz
hlt
sub
jl
hlt
mov
out
repnz
mov
jle
jns
repz
cmp
xor
jns
push
lahf
inc
out
negl
clc
xor
bnd
lahf
dec
out
mull
lock
lahf
cmp
jb
movsl
sbb
div
lock
lahf
and
jb
movsl
sbb
div
lock
cmpsl
lcall
xor
lock
jae
repz
lock
lock
into
loopne
lock
push
lock
jnp
mov
mulb
pop
xchg
sahf
ret
add
xchg
pushf
pop
mull
pop
mov
xchg
push
mull
pop
mov
pushf
pop
xchg
repnz
pop
xchg
adcb
xchg
xchg
push
xchg
adcb
xchg
sahf
pushf
sbb
sahf
pushf
xor
xchg
andb
jge
mov
lahf
pop
idivl
test
nop
test
xchg
xor
orb
lcall
inc
cwtl
xchg
xchg
inc
test
lock
repnz
repnz
repnz
xacquire
xlat
loopne
mov
sti
adc
xor
add
add
add
add
add
or
add
add
lret
add
lods
fldcw
dec
and
xchg
or
xor
sub
jb
dec
shrl
add
daa
stos
mov
sbb
addl
lds
mov
add
add
add
xor
pop
es
push
lahf
leave
lods
mov
xchg
push
js
xor
fisttps
fidivrl
or
pop
pop
dec
idivb
aas
jne
or
xor
inc
xchg
xchg
cltd
and
pop
mov
adc
mov
jmp
lock
mov
pop
add
roll
add
add
add
mov
xchg
lods
add
jbe
addb
aam
dec
fiaddl
add
or
add
add
add
add
mov
addb
scas
add
add
and
add
add
xchg
add
add
add
add
add
add
add
pop
roll
add
add
add
add
adc
add
add
add
add
add
jb
add
add
add
add
loopne
mov
add
mov
jo
add
add
add
add
add
aaa
mov
add
ds
xor
add
add
scas
roll
add
add
aaa
add
xchg
sti
lods
cmp
add
sub
add
add
inc
add
xchg
add
add
add
add
add
add
add
xor
add
movsl
or
jno
add
aas
lret
xchg
adc
cli
pop
out
pusha
mov
add
add
add
aas
sbb
nop
daa
dec
popf
adc
fstl
xchg
cmc
icebp
call
loope
hlt
adc
adc
mov
push
dec
sub
mov
dec
add
test
xchg
cmp
out
add
cmp
sbb
pusha
xlat
imul
add
repz
loopne
stos
mov
and
pop
mov
sbb
fldt
mov
in
pusha
leave
xlat
jne
pop
jecxz
adc
adc
mov
sahf
ret
imulb
div
pusha
or
push
nop
arpl
pushf
push
out
subl
lret
push
lahf
adcb
cld
or
and
jmp
xor
bound
sti
xchg
stos
cltd
sbb
lret
test
orb
sbb
out
ljmp
inc
sbb
pop
jp
xchg
mov
pop
fildl
sbb
jl
pop
dec
add
pop
xchg
xor
and
mov
dec
pop
cltd
pop
push
scas
mov
inc
test
mov
orl
push
lock
sbb
es
lods
pop
stos
xchg
dec
popf
comiss
in
lret
jp
lock
mov
lods
dec
cmp
pushf
fs
pop
sub
jne
pop
mov
push
inc
popa
pop
or
cmpsb
cmp
cmpl
cmpsb
mov
pushf
test
popf
sahf
mov
das
inc
arpl
mov
mov
push
dec
out
or
jo
adc
aam
push
daa
and
xchg
imul
ljmp
scas
sub
shrb
fstl
pop
mov
fcmovnu
cmp
add
xchg
ret
cmpsl
scas
std
pop
addr16
loopne
lret
push
roll
insb
out
push
gs
gs
sbb
addr16
dec
cld
push
inc
fcoms
xchg
mov
pop
xor
dec
daa
xor
jns
push
cwtl
adc
push
jmp
or
lock
sbb
push
and
popf
fcoms
cmpsb
mov
in
rcrb
daa
and
popa
jmp
bound
subb
add
cmp
dec
arpl
jl
movsb
inc
inc
cmpw
test
movsb
inc
aaa
shl
lock
mov
and
inc
repz
lcall
sbb
pop
push
xlat
cwtl
movsb
enter
add
jb
xor
dec
jecxz
add
adc
sar
jae
mov
mov
pop
cmpsb
inc
pop
add
dec
push
sub
pop
popa
mov
or
gs
xchg
decb
negb
jbe
orb
pop
jne
or
mov
in
shll
loop
imul
mov
dec
fistpl
int
pop
sbb
jl
lcall
lret
rcll
out
add
imul
lea
xchg
push
lret
mov
sub
sub
inc
cwtl
and
xchg
push
push
idivl
sbb
aad
movsb
outsb
sub
js
lahf
lods
lret
adc
fs
cltd
shll
add
push
inc
in
iret
mov
int
xchg
xor
ret
cmp
andb
adc
or
adc
jg
or
fbstp
dec
push
mov
xlat
adc
xor
xchg
sti
mov
mov
and
pop
adc
sahf
push
insl
adc
jb
adc
inc
add
dec
pop
mov
pop
movsb
in
xchg
mov
testb
ret
hlt
xor
adc
ror
jb
ret
or
adc
xchg
mov
outsb
sbb
sbb
sbb
out
inc
push
sarl
mov
mov
or
inc
sub
popf
lret
dec
pop
pop
out
pop
daa
mov
push
push
mov
ret
jb
movsl
mov
loopne
dec
jbe
jne
adc
and
mov
cltd
push
ret
sti
aas
arpl
hlt
and
mov
jl
pop
in
cli
sub
jmp
inc
test
sbb
stos
es
popf
or
loop
jg
hlt
mov
sub
in
mov
push
pop
and
push
cltd
orl
bound
outsl
loop
lock
jge
cli
fstpl
pop
test
sub
push
imul
jge
push
xor
adc
sahf
push
sbb
push
fnsave
mov
inc
jmp
sahf
mov
push
movsb
jge
adc
shl
or
sub
mov
push
rcrl
push
pop
jb
cmc
daa
ret
jo
insb
and
mov
dec
jecxz
mov
inc
mov
enter
iret
test
push
push
jg
fs
hlt
sbb
mov
pop
or
pop
daa
mov
lods
out
addb
add
dec
xor
mov
ljmp
lret
ret
gs
loopne
shll
aaa
mov
pop
and
mov
ficoml
mov
stos
cmp
fs
add
shlb
rolb
xor
std
gs
mov
cmc
jae
and
push
fisubs
lcall
sbb
and
std
addr16
cwtl
out
pop
xchg
cwtl
mov
push
sbb
jno
mov
inc
gs
dec
pop
add
jp
fistps
les
pop
rolb
pushf
shll
popf
mov
insb
out
cmc
ss
fcomi
jle
dec
mov
nop
or
mov
dec
movsl
sbb
cli
ret
and
roll
mov
fimuls
les
rcrb
fmul
sahf
cmpsl
sub
push
cmpxchg
cmpsl
ret
into
cmp
sub
adc
fwait
rep
fcomi
sarl
cmp
adc
sub
icebp
stos
jl
push
test
dec
loopne
pop
cmp
repnz
push
push
mov
add
lea
mov
xchg
in
mov
pop
jge
int
cli
mov
jo
enter
cmpsl
add
xchg
adc
mov
rcl
lea
jae,pn
ja
jp
mov
mov
xor
mov
mov
sbb
mov
andl
add
testl
lods
mov
cld
out
push
mov
pop
outsl
ss
pop
push
iret
mov
lea
xchg
test
ret
fcomip
cmc
subb
pop
mov
inc
pop
insl
push
es
mov
adc
fwait
popf
in
cwtl
xchg
cld
lahf
es
inc
mov
int
cmp
xlat
std
into
dec
loopne
loope
into
popa
xlat
adc
sub
das
das
sub
adc
push
push
fsubrl
cmpsb
jecxz
mov
or
stc
dec
push
jecxz
dec
jno
insl
pop
scas
repz
hlt
call
xchg
add
fisttpl
divl
daa
or
scas
cltd
pop
roll
or
mov
push
jnp
lods
ror
add
sbbb
cmp
ljmp
aaa
jmp
movb
fisttps
fldt
push
jno
add
mov
adc
pop
orb
testl
rcll
gs
aad
pop
push
sub
fcoms
jo
sbb
jecxz
pop
sub
jp
ret
int3
mov
shrb
sbb
in
or
cmp
push
lret
adc
sti
adc
ret
outsb
sub
or
mov
icebp
enter
mov
jae
dec
dec
js
push
xchg
and
xor
push
push
pop
xor
xor
mov
cs
jb
xchg
jb
jp
shl
mov
pop
out
cmp
and
cmp
ret
pop
xor
addr16
leave
inc
sbb
cmp
lods
push
xlat
por
jp
adc
jo
movsl
jbe
insl
sub
popf
xor
je
jbe
lahf
cmp
cmp
outsb
inc
lcall
or
mov
pop
jo
lock
add
or
pop
jb
mov
lret
nop
lds
pop
push
loopne
adcl
in
int
stc
sbb
jno
sbb
sub
pop
adc
ljmp
inc
rcrb
or
jae
pop
mov
pop
outsb
push
mov
lds
sub
insl
ud1
mov
mov
pushf
lahf
xchg
call
pop
outsl
loope
push
scas
sbb
mov
jae
pop
push
fisttpll
inc
pusha
pop
pop
add
pop
bound
adc
mov
das
stos
cltd
jb
mov
dec
xor
sub
jge
outsb
mov
jle
xor
shlb
adc
push
sti
add
push
bound
pop
jb
into
adc
cmp
insb
cmp
mov
or
cld
pop
sbb
mov
pop
and
mov
cmp
enter
stos
add
mov
add
pop
push
lods
sbb
je
dec
and
sub
jle
pop
push
in
cmpb
call
pushw
lds
pop
mov
inc
adc
jb
out
dec
nop
pop
add
cmp
sbb
jno
or
jb
dec
enter
inc
mov
xchg
push
pop
mov
fwait
mov
cwtl
cmp
iret
push
adc
not
or
mov
aaa
leave
dec
orl
mov
dec
ret
pop
jmp
pop
mov
rcl
dec
and
jl
imul
jo
stc
mov
jge
or
iret
jmp
inc
sbb
out
outsb
int3
adcl
push
sub
fdivrp
fnsave
lret
xchg
sub
xor
lock
xchg
and
andb
int3
mov
pop
cli
icebp
adc
inc
sub
xchg
jg
and
xchg
fldcw
xchg
mov
xchg
xor
negb
jno
and
in
xchg
repnz
dec
push
lcall
mov
mov
cmp
roll
lods
sub
fadds
mov
insl
popf
stc
movsb
xchg
push
mov
or
aaa
mov
mov
stc
jmp
mov
dec
xchg
outsl
cwtl
cmp
iret
push
adc
xlat
rorb
lahf
pop
sarl
ja
mov
sbb
pop
lcall
add
adc
push
popl
pop
inc
test
mov
pop
dec
or
inc
xor
mov
out
in
mov
movsb
shl
mov
in
or
jmp
cmpl
or
int
or
mov
mov
icebp
daa
adc
sbb
inc
mov
sub
dec
sti
mov
adc
adc
orl
mov
jg
cs
cmp
xor
sub
add
pop
mov
imull
xchg
mov
jl
lcall
add
or
pop
push
mov
mov
jg
xchg
lods
js,pn
std
mov
ret
sbb
xor
sti
jge
cmc
add
xchg
jg
ret
bound
loopne
lock
sbb
push
mov
xchg
add
and
ss
jl
xchg
sub
mov
sub
add
pusha
pop
jne
call
push
adc
dec
add
push
ficomps
push
jge
mov
pop
mov
addr16
in
lock
add
testl
in
outsb
andl
vpxor
mov
scas
xchg
sbb
faddl
dec
lea
cmp
dec
inc
enter
sti
enter
lods
and
stc
lock
adc
dec
add
mov
int3
andb
pop
ds
and
imul
inc
clc
fs
fnsave
lret
adc
sbb
push
jne
lret
rcrb
in
sub
sub
hlt
fwait
lods
loop
pop
out
sub
or
mov
mov
pop
sbbl
mov
push
sbb
sub
adc
out
fcmovne
in
add
add
mov
icebp
mov
loope
fsubl
mov
js
pop
jmp
cmc
jno
dec
icebp
dec
js
lcall
loopne,pn
pop
or
push
rcrb
pop
ja
pusha
sbb
dec
sbb
jne
jg
mov
cmp
and
add
cmc
fcoml
mov
mov
cmp
mov
xor
repnz
out
or
mov
in
call
ds
fnstcw
add
imul
mov
cmp
push
stc
test
add
das
or
dec
adc
or
mov
repz
sahf
loop
xor
mov
pop
rclb
nop
std
popa
jo
adc
jae
clc
call
cmpsb
lret
data16
jle
mov
xorb
cs
or
js
xchg
pop
fwait
xor
test
xor
mov
pop
pop
ja
std
movl
push
mov
inc
xor
sbb
mov
clc
mov
mov
lock
icebp
cltd
dec
iret
or
adc
mov
dec
pop
lods
mov
push
ret
mov
in
add
push
add
jae
cmp
gs
pop
mull
dec
cmpsb
sbb
xchg
fdivl
call
jnp
mov
sub
hlt
lahf
dec
or
lcall
dec
adc
push
jbe
pushf
out
mov
jae
rol
lods
aas
mov
push
add
or
xchg
jle
cmp
xchg
lods
xchg
js
or
and
jnp
jb
sbb
add
pop
jp
mov
push
dec
cmp
sbb
sarl
xor
sub
cmp
xor
int3
cli
sbb
fdivl
cltd
mov
and
sbbb
mov
cmp
lds
shrb
repnz
sub
push
push
addl
xor
push
bnd
xor
lret
in
pusha
bnd
push
jecxz
in
sbb
pop
xor
sub
add
lock
mov
push
stc
es
sbb
jne
in
outsl
mov
adc
jo
aad
mov
mov
dec
or
and
jl
movb
pop
and
xchg
inc
test
adc
cmpsb
xor
inc
or
mov
outsl
mov
push
sub
push
jg
sub
mov
adc
jbe
je
aaa
xor
iret
sub
test
add
sbb
addr16
or
loope
negl
add
xchg
dec
repz
aaa
lock
movsl
pxor
mov
xor
jecxz
std
push
out
xor
mov
shrl
push
mov
in
xor
insb
outsl
mov
add
jmp
add
pop
dec
sbb
sti
xlat
arpl
sti
fidivrs
push
push
shrb
out
jbe
mov
insl
stos
bound
jle
loop
inc
and
pop
sbb
push
sub
ficoml
mov
fimuls
sti
or
in
in
adc
add
pushf
adc
cmp
cld
stc
push
mov
dec
jb
cmp
pusha
dec
int3
mov
in
pushf
jg
into
out
jae
fstps
outsb
cli
lea
push
jecxz
adc
ja
and
cmc
sbb
jmp
lds
mov
push
gs
sbb
leave
das
insb
sbb
sub
xchg
clc
and
jle
cmp
ret
or
adc
in
cmpsb
hlt
test
aad
dec
sbb
outsb
test
pop
sahf
out
fistpll
or
in
dec
or
adc
icebp
inc
xor
test
ret
jge
xor
jge
xchg
mov
add
sbbb
jecxz
and
ret
adc
nop
xchg
scas
xor
mov
dec
xchg
mov
add
inc
adcb
int
sub
mov
mov
movsb
lods
iret
dec
adc
sar
shrb
int3
mov
xor
fwait
cmp
jne,pn
dec
jl
mov
nop
pop
inc
sub
add
push
iret
daa
je
jnp
mov
cmp
push
fildl
cltd
cmpsb
popf
gs
add
pop
int
lods
or
cmc
lea
push
inc
shlb
cmp
ffreep
add
inc
loope
cwtl
cmp
inc
mov
sbb
icebp
sbb
and
test
adc
ljmp
jg
mov
jmp
xor
pushf
aas
xchg
and
dec
cmc
add
mov
dec
mov
dec
movups
jno
scas
dec
jle
xor
iret
lock
xor
push
add
jno
ljmp
mov
and
cmp
xchg
mov
aaa
xchg
push
enter
jno
and
aas
inc
push
lcall
out
push
add
sar
inc
divl
mov
mov
fnstcw
test
test
inc
mov
shlb
mov
dec
xchg
push
mov
cld
pop
fidivrs
sti
sbb
jo
enter
ds
pop
sbb
push
fidivrs
lock
sbb
icebp
dec
jl
add
outsl
jmp
bound
fcmovbe
mov
fstps
add
push
ds
sub
lahf
test
fsub
lea
notb
test
cli
aas
test
pusha
or
mov
inc
test
jns
int3
dec
aad
movsl
jb
or
shr
inc
cmp
fnstenv
jbe
and
in
xchg
test
lahf
cwtl
or
add
in
add
test
cltd
mov
adc
not
mov
mov
divb
mov
loope
dec
mov
std
cmp
popa
or
repnz
imul
push
mov
ljmp
imul
cmpsb
ljmp
pop
adc
loop
inc
adc
adc
and
add
fdivl
xor
jmp
imul
loop
ffree
in
adc
out
idivb
mov
or
jne
pop
mull
cs
pop
push
xchg
dec
sbbl
arpl
out
pop
mov
dec
mov
jp
repnz
and
fidivl
jmp
jl
mov
outsl
push
xchg
add
jo
sub
ja
outsl
add
mov
mov
scas
jo
lock
push
xor
jnp
mov
movsl
jle
mov
lahf
cmpsb
fcoms
out
aad
out
push
ds
sbb
adc
aas
mov
jo
push
ss
ss
stc
or
call
fs
loope
das
ds
mov
inc
mov
fnstsw
xchg
mov
inc
pop
jp
mov
sbb
rol
loope
jmp
and
mov
fwait
imul
mov
in
push
stos
out
or
and
mov
mov
out
aad
sub
clc
popa
shll
xchg
jp
sbbl
subw
pushf
into
jo
clc
fcompl
outsl
test
adc
in
shrb
pop
xchg
data16
sbb
mov
push
shlb
call
rclb
jbe
enter
mov
jecxz
sub
xor
and
sbb
xchg
push
pop
pop
cmp
test
lret
cmp
popf
mov
popa
mov
mov
shll
jle
ja
mov
leave
iret
sub
fs
out
bound
std
cld
movsb
mov
fisubrl
jge
cmpsb
int
cmp
cmp
repz
loope
out
movsl
inc
scas
jne
mov
push
xor
fcoml
xor
fdiv
scas
pop
and
sbb
inc
jo
mov
stos
jge
ss
out
pop
adc
mov
mov
push
test
mov
jae
pop
in
dec
and
stos
pushf
jne
insl
push
push
pop
in
gs
mov
dec
adc
sub
cmp
xchg
lods
or
fwait
cmpsl
nop
mov
dec
in
aaa
xchg
clc
testl
ds
jmp
push
cli
test
mov
mov
jecxz
xor
sbb
out
out
push
rorl
out
sbb
inc
lret
aaa
addr16
int
adc
in
into
push
dec
xor
mov
lret
aas
jmp
xchg
icebp
scas
cmp
aas
js
jne
push
ljmp
mov
je
add
int3
fsubs
popf
je
push
scas
inc
add
and
ficoml
mov
shrl
pop
testb
cmpsb
divl
xchg
add
mov
clc
mov
adc
fistl
pop
jbe
add
imul
push
std
adcb
outsl
pusha
cmpb
pusha
ret
push
or
aam
xor
insb
push
movsb
mov
pop
xor
xchg
sbb
std
out
or
inc
sbb
sub
pusha
insb
sub
adc
push
insb
mov
xlat
cmp
in
repnz
fstps
lds
add
pop
sarl
jns
sub
inc
jo
fldt
or
pushf
push
pop
fstpt
sub
mov
jl
adc
pushf
jle
push
mov
push
mov
lcall
rorb
and
rorl
nop
or
cmp
outsl
leave
into
lock
mov
lahf
stos
test
sbb
jge
clc
lods
inc
es
insl
ret
pop
dec
data16
xlat
sub
mov
mov
mov
adc
es
call
addr16
cltd
mov
xchg
xlat
adcl
bound
push
addb
sub
pop
ja
pop
loopne
scas
lcall
mov
mov
stc
xchg
insb
sub
lds
xor
and
ja
outsl
stos
adc
popf
icebp
jmp
aaa
cli
mov
sub
pusha
loopne
cltd
sub
xchg
add
fs
cmp
and
xor
fs
pushf
faddl
ja
jmp
mov
and
stc
rorl
xchg
xor
push
xchg
add
ljmp
cmp
mov
test
xchg
insl
shr
aad
adcl
cmc
mov
das
stos
lods
in
cmp
fbld
lock
mov
lret
out
lea
mov
bound
mov
popa
pop
leave
or
sbb
mov
jp
pop
mov
sahf
aas
pusha
shr
clc
adc
stc
xor
outsl
adc
loope
jge
fs
push
adc
int
cmp
dec
and
cltd
add
xor
out
sbb
popa
xlat
jp
sti
push
lea
push
sub
push
cmp
test
lret
rorb
fists
sbb
push
xchg
scas
xchg
cld
jo
call
push
push
das
pop
dec
jnp
les
out
adc
jbe
adc
fadds
movsb
jmp
popf
add
xchg
add
and
sbb
pop
sahf
and
out
das
ja
adc
mov
or
cmp
lods
push
inc
adc
mov
jo
jmp
in
ret
mov
clc
stos
fcompl
test
sbb
not
inc
roll
push
sahf
mov
cmpsb
pusha
xchg
xchg
lds
popa
push
cmpsb
cmpsb
push
push
rorb
js
mov
cltd
pop
and
xor
push
jl
nop
push
lods
out
mov
push
sbb
outsb
es
pushf
pop
adc
inc
lcall
das
adc
das
or
jo
aas
stc
aam
push
lods
test
mov
jg
adc
xchg
movsb
clc
dec
pop
cmp
mov
popf
xor
pop
outsl
cli
scas
pop
jecxz
pusha
aam
mov
mov
into
aad
push
push
cmp
sahf
out
orl
js
xchg
mov
shr
ljmp
je
pop
cmp
jo
sub
das
pop
lahf
clc
int
ds
out
stos
add
es
mov
add
mov
fbstp
xor
ret
test
bnd
dec
push
mov
and
iret
add
add
fstpl
xor
adc
and
mov
push
sub
dec
js
aam
xchg
loop
ja
movd
push
mov
inc
adc
sub
add
push
xor
fmull
xchg
movsl
inc
sbb
mov
mov
dec
sub
clc
mov
pop
std
sar
adc
lcall
jge
fdivl
jle
fildl
aad
cmpsb
aad
sub
jnp
push
and
lahf
or
pop
sub
xchg
sub
nop
pop
or
sub
or
sub
add
jg
scas
inc
dec
jl
cmpsb
nop
cmp
fcmovne
push
push
daa
xor
add
push
push
cmp
cs
push
xor
cmpsb
mov
sbb
inc
rol
psubusb
mov
mov
mov
fidivs
xor
mov
xchg
addb
cmp
pop
out
mov
aas
pop
xor
pushf
push
adc
addr16
mov
sti
push
inc
xchg
or
loop
loopne
pop
mov
push
loope
pop
lock
mov
sub
cmp
and
jge
and
pop
in
push
sbb
push
xchg
inc
pop
cltd
xchg
pop
mov
pop
adc
pop
mov
out
cmc
mov
inc
pop
pop
or
pop
jo,pt
out
popf
pop
popw
inc
push
adc
enter
out
xchg
and
pop
push
inc
sbb
int3
inc
mov
lcall
xchg
pop
add
xchg
out
fsts
push
sub
dec
mov
pop
mov
movsl
std
cli
rcrb
and
pop
data16
je
sub
adc
sbb
ret
rcll
mov
lret
mov
ljmp
and
cmp
int
aam
fs
pop
xor
mov
push
fidivl
data16
sbb
jmp
daa
stc
cld
fldl
xor
xchg
inc
test
inc
notl
dec
add
cmpsb
or
pop
push
sbb
dec
jle
mov
out
push
jns
cli
sarl
fisubs
jbe
xchg
or
push
nop
cmp
rorb
fdivrl
shl
les
mov
int3
sbbb
scas
inc
jbe
and
stos
jbe
sbb
inc
add
sbb
push
xchg
sub
mov
add
fsub
aas
in
repz
lea
inc
icebp
fsubs
mov
packsswb
jne
sbb
cld
popf
lahf
setle
sbb
fstpl
fmul
scas
xchg
jmp
iret
xchg
jo
mov
mov
jb
ret
aam
cltd
jae
xor
icebp
mov
adc
in
push
jge
inc
addr16
xor
adc
inc
rclb
mov
jo
in
pop
aas
sbb
stos
sbb
dec
out
imul
adc
aam
leave
iret
test
sti
movsl
pop
stc
je
loope
or
hlt
xchg
jg
enter
adc
jl
mov
xorl
aas
popf
mov
fstpl
dec
push
mov
bound
rol
mov
jmp
add
in
push
push
mov
lock
push
repnz
inc
pop
dec
arpl
push
ret
mov
mov
dec
jle
or
jg
inc
loope
cmc
pop
pop
xchg
or
out
aaa
xchg
and
lret
pop
sbb
push
cs
add
imul
mov
cmpsb
adcb
aad
xor
icebp
mov
mulb
adc
lret
negb
mov
jno
ljmp
pop
dec
in
shll
ljmp
insb
pop
test
add
jo
adc
imul
xor
sbb
add
ret
sbb
mov
pop
or
sbb
lods
scas
or
je
imul
push
sti
rolb
sahf
mul
inc
pop
sahf
popf
movups
add
cmp
xor
jns
aad
into
xor
mov
shrl
sbb
mov
jno
and
xchg
cmpsb
and
sub
dec
pop
jle
test
push
push
sub
jne
aam
cwtl
push
add
push
ret
data16
je
push
cmp
rcrb
loope
inc
fwait
mov
lret
add
mov
ds
out
mov
adc
cmp
cld
decl
scas
scas
jae
push
cmc
pop
sbb
sbb
leave
mov
lods
mov
js
test
mov
inc
out
pop
dec
je
mov
mov
push
cmp
lds
orb
sub
xchg
repz
pushf
xor
adc
outsb
rol
adc
cli
fidivs
adc
and
dec
mov
xchg
bound
pop
call
sbb
ds
or
mov
in
sets
fwait
jns
leave
sahf
pop
sahf
pop
shrl
sbb
fbld
pop
mov
scas
sbb
je
push
adc
inc
es
mov
sbb
xchg
sub
ljmp
push
sbb
push
fs
inc
inc
xor
xchg
jmp
inc
pushf
xor
into
sahf
out
xlat
ljmp
mov
jb
cmp
lods
int3
push
fbld
lods
mov
leave
mov
push
cwtl
mov
repnz
xlat
fsubp
js
cmc
xchg
add
gs
lahf
loope
mov
cmp
es
test
fisttpll
xchg
mov
dec
loopne
loop
mov
shlb
pop
jle
or
or
stc
and
loope
les
push
mov
lods
push
aam
pop
gs
lcall
xchg
mov
popa
std
jg
daa
out
mov
pop
rcrl
xor
rolb
dec
addb
push
xlat
and
ja
cmpsl
ret
daa
mov
sub
dec
add
jg
pop
in
lret
imul
push
push
das
add
aam
pop
mov
fcoms
push
inc
pushf
xor
mov
jecxz
xlat
ljmp
mov
jb
cmp
ljmp
in
push
pop
xchg
fcmove
xor
pushf
cmp
mov
adc
add
dec
lcall
add
shlb
subb
movsb
inc
xchg
sub
push
fwait
inc
sub
shl
adc
pop
roll
lods
push
and
mov
fsubl
push
mov
cmp
out
push
mov
leave
sti
and
xor
clc
cwtl
xchg
sti
mov
xchg
pop
push
sbb
mov
stos
lea
and
fs
ss
or
ret
enter
sarl
ds
inc
fidivrs
shr
pop
fnsave
push
sbb
push
fs
les
xor
cmp
inc
lret
ljmp
mov
inc
adc
les
mov
and
addl
cmpsb
pop
xchg
stos
pop
xchg
imul
loope
movsb
sbb
jle
pop
jmp
lea
fsub
mov
jp
in
push
sbb
aad
aad
subl
cmpsl
fldl
adcl
sti
mov
es
out
mov
or
jns
pop
sbb
pusha
stc
pop
roll
insl
pushaw
xor
mov
mulb
jecxz
push
inc
test
or
jne
sub
cmp
ret
aas
pop
inc
sbb
jmp
mov
push
cmp
arpl
xor
ljmp
cmp
pop
mov
fdivrl
stc
push
lret
fimuls
fnstenv
sub
test
out
sub
test
mov
fnsetpm(287
lret
outsb
rcl
cwtl
setno
lahf
inc
or
fwait
push
xor
fisttps
jae
fwait
jp
xchg
mov
test
mov
test
stos
loopne
mov
cmpl
sbb
pushf
sub
adc
lock
aam
sbb
sub
mov
jl
aaa
test
adc
and
dec
pop
push
out
mov
pop
xor
scas
aaa
test
repz
ja
cmp
shrl
mov
lret
mov
pop
les
lock
or
add
mov
lock
adc
add
inc
jo
mov
aam
sbb
jmp
ljmp
lods
fxam
push
sbb
push
cltd
jae
fcoml
mov
cmc
orl
xor
lods
call
loopne
jmp
xchg
mov
in
dec
negl
loopne
mov
fists
imul
jns
dec
popa
mov
imul
mov
mov
adc
add
lahf
jecxz
mov
scas
push
push
into
cmp
mov
pop
xchg
and
jg
mov
or
out
pop
outsl
repz
pushf
addl
enter
xor
das
pop
pop
xor
outsl
inc
lods
mov
mov
dec
sbb
xchg
push
push
cmpsl
inc
and
and
cmp
add
movsl
es
add
clc
pop
adc
lret
xor
add
mov
inc
or
cld
xor
insw
jb
out
xchg
test
enter
adc
sbb
es
cmp
rcl
mov
jecxz
and
aas
lcall
mov
mov
fdivrl
cmp
in
mov
shll
xor
mov
add
fdiv
jno
xchg
xchg
imul
jl
xchg
enter
popa
jbe
lock
push
mov
fistpl
xor
jle
lcall
jg
fidivrs
fsubl
jmp
jae
aam
pushf
cwtl
pop
jge
mov
roll
scas
gs
popf
shr
xchg
push
syscall
pop
jb
xchg
fnstcw
out
jno
ss
cltd
jo
bound
movsl
jle
adc
cmp
sub
lcall
ja
inc
sub
and
xor
dec
ss
cld
lds
daa
mov
bound
ret
jo
std
adc
sub
or
and
or
mov
xchg
add
fs
push
sbb
lea
aas
mull
mov
out
or
nop
pop
or
addr16
xor
dec
mov
mov
and
movsl
sti
jne,pn
pushf
pop
mov
push
fdiv
outsb
jecxz
repz
pop
movsb
faddp
lret
mov
xchg
push
sub
int
xchg
rol
int
cmc
pop
mov
rcrl
test
loop
inc
shlb
sub
pushf
or
mov
mov
sbb
or
and
xchg
inc
mov
out
cmpb
dec
ljmp
aaa
xor
rcrb
mov
cmp
stc
adcb
ficompl
sub
lcall
push
jl
pop
dec
adc
addr16
xchg
dec
or
xor
incb
pusha
inc
mov
fadds
mov
sub
cmp
mov
or
push
mov
adc
add
aam
lret
or
and
mov
sub
xor
push
mov
scas
pushf
cmpsl
jle
daa
or
push
sbb
sbb
in
lret
xchg
out
sub
add
jle
ljmp
mov
jbe
cld
lret
fidivl
or
sbb
nop
dec
lods
loope
shll
mov
fidivrs
fcoms
sub
in
jns
jns
pop
sub
mov
shl
dec
xor
cmp
mov
testl
push
ds
mov
cmp
and
stos
ss
xlat
popa
insb
cltd
add
hlt
or
mov
jnp
stos
jnp
xchg
gs
mov
xor
or
mov
idivb
adc
cmp
subl
out
mov
in
cmpsl
popa
add
xlat
push
ja
or
ret
in
cmp
aas
or
popf
pop
into
sbb
mov
loopne
scas
subl
sub
xor
cmp
inc
repz
adc
push
out
testb
pop
sbb
mov
and
test
std
add
add
adc
lret
gs
js
pop
push
sub
xchg
push
add
bound
jbe
dec
cwtl
popa
xor
xor
xlat
das
adcl
into
negb
xchg
mov
dec
xchg
stos
iret
not
xor
xchg
scas
js
test
ds
popa
xlat
loop
scas
test
cmp
into
sbb
cmp
pop
inc
jle
mov
jns
stos
jl
mov
test
lret
xchg
push
fistps
in
cmp
les
cmc
xchg
xor
int
fs
sub
mov
sub
jmp
je
jmp
stos
jle
es
mov
int3
xor
sub
call
inc
xor
mov
inc
sbb
enter
out
push
pop
adc
inc
cmp
pop
fs
or
jmp
outsb
push
clc
ljmp
mov
cmp
cmp
out
xchg
jle
enter
or
pop
pop
or
imul
push
js
dec
lret
lea
sbb
nop
xor
sbb
fld
lock
xchg
push
add
sarb
aad
leave
pop
pop
xchg
mov
and
xchg
aas
nop
jo
mov
or
fldcw
outsl
dec
xchg
test
push
jnp
mov
or
pop
mov
cld
arpl
arpl
cmovge
sub
mov
cmp
jnp
xor
in
cmpsb
and
pusha
cld
aaa
addr16
mov
aaa
jbe
mov
sahf
mov
icebp
pop
je
mov
sub
enter
lret
ret
push
repz
mov
dec
int3
mov
pusha
test
sub
shll
inc
repz
xchg
std
shll
xor
jmp
sar
or
leave
jl
rcll
cmp
inc
insl
das
outsl
mov
lcall
out
adc
mov
int
ljmp
sbb
jae
push
lea
mov
lahf
insb
xchg
movsl
stos
dec
xor
into
sbb
call
sub
mov
push
add
rol
cmp
inc
mov
stos
bound
pop
dec
lret
jl
xor
je
mov
or
sbb
addb
sub
mov
pop
mov
adc
cmp
jg
dec
into
imul
mov
stc
ljmp
and
or
or
fcom
add
fsubs
loopne
fistpl
mov
xchg
push
jo
push
sbb
jecxz
cwtl
sub
xorb
ret
mov
xor
ds
xchg
adc
stc
add
shlb
cmp
sub
or
fisubl
sub
mov
rorl
mov
lcall
aaa
outsb
jle
mov
decl
lret
mov
mov
aam
and
mov
add
fsub
outsl
aaa
stc
xchg
clc
addr16
loop
push
adcb
stos
loop
sub
fidivl
scas
movsb
push
dec
and
push
aad
mov
call
mov
dec
pop
or
dec
pop
pop
mov
gs
repz
cmp
aam
imul
iret
xchg
and
test
adc
stc
push
imul
cmp
mov
jns
push
outsl
xchg
pop
jo
ret
or
lods
in
mov
mov
and
mov
repz
cld
je
xor
cmp
sbb
jecxz
or
mov
lcall
hlt
xchg
std
and
cmp
xor
mov
jge
mov
jg
in
lds
aaa
shl
inc
andb
cmp
mov
pop
sub
mov
mov
jp
in
inc
or
lock
outsb
arpl
sahf
mov
int
pop
add
push
lret
nop
aad
xchg
push
cmp
gs
lods
loop
push
mov
mov
test
int
jge
mov
or
push
dec
pop
lods
test
jnp
cmp
push
cmp
sub
mov
mov
lock
jp
in
jmp
nop
and
xchg
pop
pop
cmp
push
rcrb
mov
xor
popf
mov
repnz
cmp
ds
fidivrl
jo
mov
andb
mov
xor
dec
jae
scas
fdivrs
insb
mov
cmc
and
shlb
mov
push
imul
les
insb
pop
adcl
stos
aam
add
jmp
loopne
inc
aas
mov
out
ja
inc
dec
sbb
sub
rol
or
int3
xor
dec
xor
sti
pop
add
test
sbb
lea
daa
test
mov
fistl
lcall
es
lock
push
cmp
popa
fadds
mov
mov
inc
push
in
sbb
nop
sub
repz
clc
push
mov
add
inc
sub
and
pop
mov
lods
int
scas
lods
lea
stos
lods
xor
fwait
lds
mov
das
mov
xlat
test
push
dec
dec
fcmove
das
push
inc
mov
push
imul
cmp
xchg
aas
mov
jbe
and
cmpb
mov
dec
and
jno
mov
rcrl
sub
pop
mov
sti
adc
jns
cmpsb
fdivrs
in
dec
or
sbb
inc
xlat
adc
dec
inc
popf
mov
sub
hlt
cmp
int3
dec
mov
adc
insl
mov
push
pop
add
add
stc
gs
push
and
or
into
push
sbb
ljmp
push
mov
adc
mov
fxch
cwtl
add
test
dec
pop
sti
mov
mov
and
movsl
mov
ret
dec
test
pop
mov
cmpsl
xchg
inc
cmp
jne
ret
mov
cmc
xchg
push
jge
mov
popf
sbb
sub
cmc
das
push
mov
fisubrs
and
jne
cmpsl
sti
xor
pop
mov
jmp
jmp
sbb
js
dec
jge
nop
add
mov
and
call
orb
stc
out
out
jg
push
push
cltd
stos
lods
mov
adc
insl
adc
xchg
call
mov
dec
push
cli
addl
sub
sub
mov
pop
subb
mov
subl
xchg
cmpl
mov
stc
fimuls
dec
cmc
xchg
xor
pop
mov
mov
enter
test
cmpsb
frstor
into
subb
test
adc
mov
mov
cmpl
ljmp
mov
pop
jne
jecxz
or
jle
test
fisttps
mov
fs
out
xor
lods
addr16
push
mov
xchg
jne
add
cmp
ja
test
inc
mov
mov
je
stos
rorl
push
mov
decb
iret
jns
add
cmpsl
or
mov
jle
jb
stos
cmc
mov
mov
jo
in
sbb
mov
lret
and
das
cmp
cmp
push
in
push
insb
or
js
lahf
push
lcall
movsl
xchg
or
cmp
andl
inc
cmp
ret
sar
ds
cmp
mov
xlat
cmp
push
mov
cwtl
pop
les
inc
adc
divb
jg
fwait
sahf
push
jmp
dec
jl
int
fldt
xor
push
mov
cmpsl
clc
dec
das
inc
dec
sti
aaa
lds
stos
sahf
int
addr16
xor
xchg
inc
add
sub
ljmp
int
pop
mov
adc
inc
mov
xor
mov
push
int3
cmpsb
iret
lods
mov
lods
cmp
mov
fiadds
ja
and
dec
jnp
xor
and
cmp
mov
adc
add
push
cmp
jne
cmp
push
out
adc
and
ljmp
out
lea
das
das
push
jo
arpl
xor
mov
or
test
out
inc
cmp
push
xchg
mov
add
xchg
cmpsb
dec
fstpl
and
imul
repz
cmp
shl
inc
inc
jnp
xor
sbb
cltd
fldcw
dec
ret
add
xor
mov
adc
pop
jb
mov
xor
add
sub
cmpb
lods
lret
dec
mov
inc
inc
mov
cld
leave
les
mov
dec
std
mov
dec
ja
into
push
lahf
lods
xor
sbb
fcomp
mov
iret
in
push
add
scas
jge
aaa
cmp
add
xchg
movsb
das
push
mov
enter
iret
imul
aam
scas
lahf
lods
cmp
inc
and
dec
sub
in
repnz
push
fcmovbe
mov
jge
jno
insl
cmp
xor
ret
lods
sahf
xchg
cmpsl
jnp
into
in
std
das
dec
cmp
cmpsb
fbstp
inc
ret
test
sbbl
mov
sarl
xchg
ret
and
adc
lret
cmpsl
ss
mov
aam
je
mov
test
orl
or
mov
and
or
jecxz
leave
imul
xchg
inc
int
sahf
mov
int
xchg
std
sub
sahf
dec
js
sub
fwait
sbb
xchg
movsl
mov
sbb
mov
insl
dec
dec
mov
sbb
jle
cmpsb
in
cs
sub
or
nop
int3
in
fdivp
divb
adc
ret
imulb
mov
cmp
jns
inc
jbe
stc
outsl
outsb
or
xor
scas
nop
cmp
jge
cmp
sub
mov
xchg
inc
add
sarb
mov
dec
cli
ljmp
push
popf
out
push
jns
daa
lret
pop
stos
stc
mov
mov
test
data16
and
jae
mov
xchg
dec
int
and
xchg
movsl
imul
pop
sahf
xor
sub
xorb
test
add
sbb
push
sbb
jmp
cs
out
jne
movsl
push
call
dec
sahf
mov
jg
and
sub
fisubl
cmpl
enter
ret
inc
mov
or
dec
data16
pop
jo
out
or
pop
fwait
stos
xchg
lret
jmp
scas
jg
syscall
sub
arpl
mov
push
mov
lret
mull
or
mov
aaa
cwtl
cmp
das
mov
cmc
jae
push
pop
mov
mov
dec
cli
les
loopne
mov
push
adc
add
push
stos
xor
mov
pop
mov
addr16
adcw
push
jno
sbb
dec
and
jae
add
cmp
cmp
icebp
xorl
or
lds
cli
push
jecxz
into
icebp
inc
pop
mov
fists
cs
mov
xchg
loop
test
mov
inc
imul
xor
nop
or
fidivrl
add
mov
mov
loopne
loope
fidivl
loopne
mov
popf
pop
int3
xchg
subl
jmp
ss
jle
movsl
and
xchg
ret
add
les
mov
pop
mov
std
sarb
xor
jb
inc
jle
scas
stos
into
push
push
mov
jl
test
int
daa
mov
add
jl
mov
jle
es
sub
popf
out
fiaddl
pop
jmp
jns
xor
aas
dec
pop
sub
outsl
mov
lods
popa
inc
rcl
push
jno
push
inc
and
dec
and
test
mov
cmp
insb
mov
sub
or
sbb
insb
call
or
mov
ret
pop
sub
push
or
mov
and
dec
popf
mov
out
mov
andb
add
stos
jecxz
push
lret
jmp
scas
lock
push
jecxz
or
and
dec
das
imul
xor
and
jbe
cmpsb
cmpsb
mov
xchg
lock
and
sbb
and
cmpsl
stos
adc
sarl
lock
push
arpl
add
fsubr
ja
mov
push
xlat
pop
push
xchg
push
lea
lods
cmp
push
xchg
mov
mov
out
xchg
push
lock
mov
repz
incb
mov
imul
jno
aam
push
cmp
push
xchg
pushf
mov
les
mov
es
inc
xor
stos
sub
lahf
shll
mov
aas
push
cmp
jno
push
lret
sub
adc
push
mov
push
sbb
mov
cltd
add
cmpsl
xorl
sbb
ja
movsb
in
sbb
xchg
das
mov
das
dec
mov
je
daa
test
jae
mov
add
xor
xlat
pushf
mov
popf
sub
and
popa
push
out
stos
jnp
mull
call
xlat
mov
xchg
idiv
add
test
inc
shlb
popf
fcoml
sub
jnp
cmp
lahf
jbe
push
mov
sbb
xor
jp
sub
dec
cmp
jg
xor
mov
fwait
push
sarl
xchg
mov
jb
pop
inc
out
sub
idivb
cs
mov
mov
jne
mov
jmp
dec
and
dec
scas
cmp
and
push
lods
pop
cmc
imul
scas
push
xor
push
xor
sub
xor
arpl
popa
in
push
pop
fnstsw
fadd
gs
add
mov
lods
cli
insb
jnp
push
inc
es
out
ret
scas
rclb
es
cmc
sti
xchg
or
repnz
xor
sbb
push
and
ss
ret
les
mov
aad
and
shlb
pop
add
cwtl
xchg
out
scas
pop
pop
outsl
sti
roll
ljmp
add
xlat
mov
enter
cmpsb
arpl
add
je
fistl
imul
adc
jnp
fbstp
es
shll
add
xorb
or
testb
inc
or
xchg
mov
sub
das
sub
in
enter
and
add
pop
loopne
add
jne
or
mov
sub
mov
rcrl
cld
and
in
cmpsb
mov
xor
cmp
add
pop
sbb
dec
int
shlb
pusha
loop
inc
adc
inc
pop
scas
pop
loopne
lret
xchg
dec
jg
pop
mov
mov
lods
mov
rcrb
adc
mov
cmpsb
add
fldl
and
orb
and
mov
xchg
movsb
mov
shl
sub
insb
add
movsb
notl
xor
xchg
not
dec
pop
cmp
lea
arpl
in
push
cmp
pop
cmpsl
cmpsl
les
add
fcomps
popf
adc
addb
pop
and
scas
pop
loop
inc
aad
push
loopne
mov
outsb
jbe
test
loop
pop
jecxz
aaa
mov
pop
xchg
adc
insb
push
nop
leave
push
xlat
cs
mov
sub
stc
iret
lret
in
in
sub
jne
js
mov
call
adc
and
icebp
rcl
out
add
leave
jp
inc
push
in
rorb
sub
cmpsb
fwait
js
ret
jl
jmp
push
mov
and
test
daa
and
mov
imul
lea
xlat
mov
push
mov
add
ret
push
jmp
ret
jmp
lcall
sti
in
xchg
fisubrl
sub
xchg
cmc
cli
cltd
shlb
enter
int
mov
dec
data16
dec
popa
adc
dec
movsl
imulb
inc
xor
or
mov
xchg
pop
sub
cvtdq2ps
bound
call
lcall
sbb
adc
push
subb
pusha
rcr
cmc
jmp
lods
jmp
push
imul
inc
cmp
mov
inc
dec
in
hlt
adc
sbb
stos
inc
ss
imul
cltd
sti
jle
je
sbb
adc
stos
test
lret
inc
shlb
arpl
inc
pop
test
mov
nop
pop
mov
rcr
popf
xor
roll
adc
insl
cmp
inc
pusha
inc
bound
jmp
lcall
in
xchg
mov
add
daa
sub
divl
lods
jbe
int
jmp
popa
repz
jnp
xchg
shlb
mov
mov
and
and
shll
add
mov
xchg
mov
into
cltd
push
icebp
in
xor
out
icebp
sbb
test
xchg
data16
mov
orl
lahf
sbb
xor
add
xchg
loop
mov
sbb
cmpb
cwtl
lods
rorl
repz
mov
adc
jae
sbb
jg
cmp
in
in
xor
push
push
adc
hlt
xor
jns
mov
and
jg
js
repz
mov
cmp
pop
adc
inc
pop
adc
push
jp
jl
sbb
jnp
movsb
mov
mov
ja
mov
jne
xchg
pushf
sub
test
adc
jl
inc
xor
adc
sbbl
imul
lods
sbb
mov
iret
dec
jno
dec
insl
lods
test
cs
jns
and
mov
cmp
mov
test
jnp
add
cltd
call
sahf
mov
sbb
jnp
push
in
sbb
jae
out
insb
dec
rolb
jmp
mov
insb
gs
inc
pop
cmp
xchg
sbb
xchg
outsb
rolb
mov
es
cmp
pop
hlt
jae
pushf
jmp
dec
add
hlt
add
out
xchg
pop
push
out
lods
fsts
pop
daa
sub
dec
pop
cmpsl
jg
sarb
xchg
and
sub
imul
xchg
mov
jecxz
insl
popa
adc
fsubl
xchg
xor
add
loopne
cld
pop
lea
xchg
sbb
cli
xlat
les
pop
jbe
pop
mov
mov
loop
pushf
jl
pop
subl
jge
ljmp
inc
dec
icebp
pop
xchg
aaa
xchg
fsubrs
mov
xchg
ret
push
push
pusha
xchg
aad
add
lods
or
fisubrl
test
ljmp
dec
push
insl
mov
add
xchg
shl
lcall
inc
lahf
sbb
ja
push
xchg
dec
xchg
test
scas
push
adc
lock
pop
inc
stos
ret
adc
sub
mov
add
push
jecxz
push
sahf
std
idivl
add
push
and
sarl
lcall
fnstenv
pop
dec
mov
mov
xchg
push
fs
shr
mov
sti
xchg
cmpl
hlt
mov
test
xchg
pop
mov
shrb
jg
jg
xchg
imul
adc
sti
insb
test
fnstsw
jmp
and
sbb
rcrl
sbb
push
xchg
enter
std
popa
push
xor
xor
sbb
clc
iret
aad
addr16
loop
pop
mov
or
xchg
cmp
daa
sbb
sti
arpl
je
pop
in
mov
push
notl
popf
jle
fistps
jge
pop
and
test
dec
ds
push
scas
mov
xor
fisttps
int
ja
mov
stc
cli
sbb
cmpsb
inc
cs
xchg
sub
in
mov
pushf
mov
outsb
movsb
inc
pushw
in
cmpsl
adc
dec
lcall
xlat
fs
icebp
je
mov
inc
xchg
cmp
enter
sbb
dec
cmp
mov
stc
pop
sbb
jle
pop
mov
orb
out
pop
mov
push
dec
mov
mov
int
daa
in
adcb
xchg
and
pop
xor
bnd
data16
adc
repnz
mov
mov
fdivrs
xlat
xor
into
pop
sbb
mov
shlb
adc
dec
lods
push
pusha
and
pop
pushf
cmc
aam
loope
mov
add
addr16
xor
mov
lods
js
cli
fmuls
loopne
ret
in
cmp
div
or
sbb
and
inc
pop
sbb
outsl
into
dec
stc
stos
enter
adc
inc
lcall
and
std
mov
arpl
sub
pop
fcoms
lcall
inc
out
sub
insl
ret
dec
pop
pushf
add
loope
mov
mov
push
shr
lods
cmpl
push
cmc
clc
stos
outsb
jmp
fstps
mov
loop
sub
adc
xlat
pop
mov
imul
lds
sbb
and
cmp
xchg
jge
into
xor
int3
inc
bound
mov
mov
sub
fists
xchg
outsl
outsb
xchg
dec
mov
mov
lods
iret
arpl
sub
push
sbb
adc
mov
aam
dec
imul
dec
mov
das
add
jp
daa
in
stos
in
inc
or
xchg
add
jo
js
cli
fmuls
loopne
and
ficoms
mov
or
aas
adc
mov
cltd
add
sbb
push
decw
xlat
xor
sub
jmp
repz
and
pop
xor
sub
lods
dec
loopne
fisttpl
or
out
fninit
and
xchg
add
push
push
cmpsl
call
push
jge
adc
xchg
fs
jmp
or
pop
dec
in
popf
dec
xchg
rorl
and
cmp
xchg
pop
stos
jle
xchg
push
sbb
outsb
in
jne
ret
push
add
gs
repz
sahf
mov
adc
rolb
add
pop
ret
dec
cmpsl
stos
lahf
mov
and
cmpsl
xor
jnp
insl
notb
pop
inc
mov
cmp
adc
lods
push
bound
mov
cmc
add
dec
xor
sbb
fadd
cmp
xor
mov
sbb
sbb
jg
repz
xor
mov
inc
orb
adc
adc
xchg
imul
in
je
xchg
mov
aaa
aad
sub
and
sub
adc
push
out
add
lahf
inc
fwait
sbb
sub
imul
popa
and
pop
xchg
aaa
stos
fnstsw
mov
fists
pop
fs
das
sbb
add
out
imul
push
mov
mov
aas
aad
jmp
mov
mov
add
rcll
jp
adc
pop
int3
mov
or
fcmovnb
out
or
cmp
inc
mov
dec
rorl
jno
push
imul
adcb
out
sub
cwtl
test
test
jmp
loopne
call
push
xchg
inc
cmp
test
mov
sti
adc
data16
adc
push
mov
inc
inc
inc
xlat
mov
xor
stos
dec
imul
cld
cltd
push
fisubl
std
dec
into
ret
fdivrl
cwtd
movsb
pushf
testl
popf
lcall
incb
imulb
cwtl
dec
mov
ja
push
xchg
aad
gs
add
cmc
out
pusha
aaa
andb
ljmp
push
shl
out
notb
fldcw
cld
jecxz
sbb
sbb
cmp
xchg
test
mov
iret
insl
rorl
push
popl
sbb
inc
xchg
pusha
cmp
stos
push
xor
orl
outsb
xchg
jge
loop
jge
arpl
xchg
xchg
in
int3
adc
enter
xchg
rcr
repnz
xchg
cmpsb
push
std
fwait
jno
sbb
xchg
loopne
lret
and
push
mov
rol
inc
pop
hlt
cli
dec
lods
xor
jmp
andb
sbbb
ja
and
and
pop
fisubrs
add
ret
sarb
cmpsl
lret
pop
mull
jl
sub
ret
adc
rcrl
sbb
lret
add
aad
clc
outsl
cmpsl
dec
sub
adc
mov
push
jbe
mov
clc
out
fsubl
push
pop
xchg
dec
cmp
dec
loop
loope
add
fucomi
rcrl
or
mov
out
mov
scas
lea
or
dec
subl
pop
jg
and
je
lahf
pop
xchg
cmc
mov
mov
jle
stc
stos
mov
add
push
loopne
sbb
insl
lods
sbb
mov
pop
lret
pop
adc
sbb
movsl
imul
jb
test
out
js
enter
sub
orb
push
test
xchg
pop
sbb
ret
enter
int
sahf
mov
sub
fs
cld
lds
fxch
fmull
and
movsb
into
and
lret
pop
push
mov
stc
in
add
in
mov
pop
mov
jmp
xor
stos
mov
cmpsb
enter
add
dec
in
gs
cs
sbb
push
adc
cld
aas
push
fimuls
pop
push
in
sahf
sub
rcrl
xchg
lods
stos
cmp
test
cmp
jno
lds
into
or
rcrl
adc
lods
ret
cwtl
or
mov
lret
loopne
gs
pushf
ficoml
aaa
push
mov
popf
gs
mov
popf
inc
jmp
cmc
sbb
mov
jmp
js
adc
call
aaa
sbb
mov
xchg
movsl
lds
push
movsb
mov
mov
into
aad
cwtl
decl
sub
jne
sub
shl
fisttps
inc
mov
sbb
aad
adc
adc
mov
orb
push
cld
xchg
pop
rcrl
dec
add
mov
pushf
push
jl
inc
fmuls
mov
mov
mov
adc
aad
xor
dec
popf
sbb
xor
mov
lea
mov
loop
mov
xor
addr16
fnstcw
mov
inc
addr16
mov
xchg
mov
and
outsb
fucomp
fcoml
inc
sbb
dec
rol
imul
rep
cmpb
enter
sbb
mul
int
ret
shll
int
adc
cwtl
outsb
sub
push
mov
xchg
or
push
lcall
xchg
aaa
pop
mov
pop
adc
sub
or
pshufw
mov
les
sub
shll
dec
add
sbb
imul
push
out
out
out
xor
push
mov
xchg
int3
inc
out
jno
loop
jl
mov
pushf
mov
dec
leave
fstl
pushf
ret
sub
clc
xchg
or
and
adc
data16
ss
mov
dec
cs
sbb
xor
inc
inc
ss
pop
pop
insl
mov
and
test
or
popf
or
xor
into
xor
xchg
andl
enter
inc
pop
pop
jmp
mov
sub
into
pop
add
add
hlt
out
add
xchg
mov
jg
lcall
sub
and
jns
dec
mov
sarb
mov
sbb
sbb
movsl
dec
mov
aam
mov
popf
test
test
mull
es
rol
sub
adc
jge
inc
shl
fstp
div
sub
push
aaa
lcallw
fcmovnb
gs
mov
sub
add
push
dec
sarl
push
adc
popa
rcrl
fiadds
fists
andl
mov
clc
ret
sub
ret
lret
mov
mov
push
cli
stc
xor
mov
pop
mov
andl
adc
movsl
and
aas
xor
fdivr
notb
push
pop
mov
jae
cmp
loop
or
add
insl
and
or
jae
dec
mov
cmp
cmc
test
push
cld
bswap
aam
int
xchg
icebp
in
enter
aaa
lret
xchg
jnp
jae
push
cwtl
inc
sbb
dec
inc
mov
loopne
aaa
std
xorb
daa
add
add
add
shrb
inc
mov
dec
push
sbb
sbb
and
or
xchg
add
sub
dec
pop
lcall
jge
jno
lock
push
shll
lods
jecxz
imul
jl
addb
js
dec
lret
xlat
lret
jmp
xchg
scas
shrb
mov
sarl
adc
jmp
mov
mov
mov
loop
inc
ljmp
js
sar
cs
test
xchg
mov
pop
ljmp
adc
aad
xor
add
push
inc
int
or
xor
lret
mov
pop
mov
fs
out
scas
iret
jge
xor
push
aam
mov
cli
in
mul
dec
frstor
lret
push
fstps
mov
addr16
pop
mov
cmpsl
outsl
testb
in
orb
sbb
fwait
sub
adc
xchg
lret
lret
ret
hlt
ficoms
or
js
inc
sahf
test
cli
dec
fucomip
rorl
inc
rep
rcr
adc
cmp
mov
xor
fdivrp
pop
icebp
pop
pop
andb
mov
gs
cmpsb
shrb
mov
xchg
and
fs
adc
or
imul
mov
in
jbe
and
cmp
or
mov
addr16
fdivrp
mulb
mov
inc
sbb
fildl
xchg
iret
jmp
fcmove
add
rolb
lods
jmp
add
jo
dec
ret
mov
pusha
fidivrs
inc
pop
fldl2e
mov
and
std
fiadds
sti
sbb
icebp
xchg
stc
push
xor
js
std
mov
adc
in
inc
sbbb
xor
jns
add
ficomps
jns
pusha
in
lahf
fisubs
xchg
jbe
imul
xchg
and
jl
sub
push
mov
push
movsb
mov
std
aas
into
aaa
mov
xchg
mov
lea
sbb
push
out
push
adc
mov
lods
ret
ljmp
or
lcall
in
repnz
xor
sti
mov
mov
pop
cmp
addr16
std
push
testl
insl
imul
fs
in
add
mov
push
jmp
ds
mov
lock
push
push
aam
repnz
mov
push
jnp
inc
shll
and
ss
enter
sarb
mov
ljmp
push
or
fs
mov
lret
xchg
outsb
dec
dec
and
cmpl
inc
orl
sbb
or
dec
roll
jne
xor
clc
test
mov
inc
pop
cmp
xor
psubw
dec
setnp
jnp
test
mov
add
pop
js
icebp
dec
xor
lock
jg
or
inc
pop
stos
mov
mov
and
jmp
popf
ds
xor
xor
sbb
mov
inc
iret
push
pusha
jae
fstps
imul
inc
sbb
int
rol
lea
fbld
lret
loopne
xchg
cmp
mov
inc
scas
pop
jb
push
shlb
adc
mov
mov
xor
pop
add
push
mov
sbb
aam
dec
dec
cmp
repz
fisubl
in
sbb
lret
jb
xchg
and
and
notb
mov
pop
mulb
nop
test
mov
ror
pushf
jp
lret
sub
stos
add
imul
xchg
xchg
pop
pop
xchg
pop
loope
ret
inc
jno
sub
test
js
jmp
add
rorl
inc
sub
loopne
ds
movsl
nop
mov
sub
out
mov
jg
xchg
dec
jo
or
out
jo
in
or
xchg
mov
icebp
xchg
mov
imul
inc
xor
aam
push
push
dec
lretw
arpl
dec
aaa
adc
gs
dec
fsts
divl
xor
mov
xchg
add
cmc
js
out
outsb
mov
sub
popf
popa
js
pop
push
lods
mov
inc
or
inc
popf
mov
rorb
lret
lcall
dec
jb
in
dec
and
inc
mov
dec
and
jle
mov
mov
mov
in
cs
pushf
std
cwtl
test
xor
push
aaa
pushf
xor
jb
sbb
shrb
lds
je
aam
push
pop
mov
dec
outsb
movsl
jp
pusha
cmovo
sbb
pop
stc
ror
cmp
lcall
sub
enter
fnstcw
sbb
mov
ffree
je
aam
sbb
or
or
xor
lods
cmc
cmpsl
push
test
or
mov
ss
add
xchg
mov
mov
xor
inc
jle
dec
sahf
add
cmp
xor
je
insl
inc
mov
and
pop
mov
sbb
insb
mov
inc
mov
test
lcall
ss
cli
sbb
insb
pop
dec
push
xor
jg
js
push
add
jle
dec
outsl
mov
cwtl
pop
cli
jmp
mov
stos
mov
inc
shr
arpl
pusha
sti
imul
mov
jecxz
mov
jle
imul
cmpsb
daa
jnp
or
ss
aas
scas
bound
jne
pop
int
movsl
imulb
lds
in
xchg
pop
cmp
push
inc
out
insb
add
cmp
jmp
push
pop
xor
adc
add
cmc
ds
xlat
cli
stos
sahf
push
push
mov
int
ret
fstl
bound
shrl
lea
fcmovne
test
out
popf
xor
fsubs
adc
cli
add
jb
ret
std
lahf
cmp
sub
cmpsl
mov
into
or
mov
flds
sbb
mov
pop
push
adc
add
gs
inc
shll
testb
ljmp
add
or
gs
cmp
mov
mov
cmp
push
pop
and
movsl
popf
sbb
mov
cmp
inc
xchg
fcmovnb
adc
push
divb
push
jae
add
insb
xchg
lods
out
aam
loope
jecxz
mov
lods
dec
rorb
lds
mov
adc
add
ja
gs
inc
out
and
outsb
jge
xchg
adc
mov
pop
loope
push
xchg
sahf
lahf
sub
pop
dec
adc
cmp
dec
fiadds
xor
or
adc
dec
mov
outsl
repnz
cwtl
sahf
bound
xor
pop
push
dec
or
xor
pop
pop
cmp
xchg
mov
leave
popf
dec
outsb
cmp
jo
cmp
jnp
jg
sbb
clc
arpl
cli
popa
adcb
or
lds
sub
mov
dec
sti
into
gs
mov
sti
stos
in
jl
dec
dec
mov
pop
xlat
cmc
or
xor
clc
pop
mov
insb
cmp
sub
push
out
in
addr16
cs
jge
outsl
idivb
shl
mov
mov
adc
pusha
push
cs
loopne
push
pushf
add
or
adc
lcall
ljmp
xlat
mov
xorb
fbld
cmp
lcall
lahf
popf
mov
add
rcrb
jne
fdivrl
or
pusha
mov
dec
mov
in
and
sub
popa
inc
mov
xlat
movsb
lret
dec
push
mov
dec
lods
pop
testl
cmc
xor
pusha
fs
std
xchg
add
sahf
pop
dec
mov
ret
pusha
mov
popa
repnz
ret
push
addr16
std
test
xchg
fs
outsl
and
mov
or
dec
subb
mov
mov
mov
mov
cltd
fwait
xorb
adc
movsb
out
ljmp
xor
pop
jle
in
xchg
in
cltd
scas
add
or
icebp
sarb
pop
repnz
and
xchg
test
repz
push
adc
xchg
je
out
and
mov
in
mov
scas
xchg
ja
and
inc
mov
sub
push
cmpsl
xchg
imul
lcall
push
mov
aas
loop
xor
mov
lds
loop
data16
and
lock
adc
mov
sub
sub
jno
popf
int3
push
and
and
outsb
jbe
adc
jle
pop
mov
into
adcl
mov
and
dec
insb
test
scas
cmp
jle
add
sub
adc
xor
scas
out
or
dec
xchg
push
pop
push
xchg
pop
cwtl
xchg
and
outsb
or
aas
out
cmc
xor
out
inc
cmp
std
cmpsl
fiadds
test
push
lahf
or
leave
fs
aas
mov
dec
jno
or
imul
mov
test
cwtl
or
ficoms
xor
cmp
or
popa
add
insb
imul
test
mov
clc
lea
mov
in
lcall
test
xchg
test
out
std
xchg
adc
dec
shlb
je
sub
out
cmp
mov
push
jmp
ficomps
mov
aaa
mov
mov
mov
and
dec
and
stos
jmp
mov
xor
sbbl
dec
sub
dec
repnz
dec
xchg
mov
ret
xor
cltd
push
pop
aad
add
insl
cmp
xor
xchg
sub
cmp
lods
rcll
icebp
and
sbb
sub
andl
adc
call
push
cmp
std
and
mov
pop
mov
stos
mov
insl
xor
je
fwait
mov
ds
movsb
push
sub
shll
aam
shrl
pop
cmp
jbe
repnz
mov
jbe
cmpl
int3
sub
loope
enter
push
jmp
mov
lret
dec
in
shlb
ljmp
pushf
mov
dec
adc
add
pop
and
add
std
ljmp
inc
xchg
iretw
stos
ficoml
xchg
shrl
jne
sbb
or
adcl
ret
cld
pop
in
inc
lea
jbe
das
pop
aaa
mov
repz
xor
popf
push
lock
sbb
stos
jae
xchg
pop
mov
insl
sub
push
ds
js
mov
mov
push
shll
testb
mov
mov
mov
nop
add
push
cmp
mov
rcrb
mov
mov
ds
cmc
movsb
lds
lea
jecxz
es
call
stos
dec
nop
lds
xchg
xchg
mov
lea
push
sarb
mov
rcl
sbb
mov
jnp
outsl
and
xor
adc
pop
fiadds
imull
fwait
sub
mov
jge
add
inc
in
and
push
imull
out
ljmp
jp
sarb
movsb
pop
aad
int3
mov
jp
xor
loopne
mov
hlt
sub
xchg
stos
inc
outsl
and
test
imul
dec
ret
dec
xor
shl
inc
fstl
xchg
fs
cmp
call
out
mov
adc
clc
imul
cli
and
rclb
out
push
push
lods
xchg
mov
sti
arpl
daa
mov
pusha
push
outsl
inc
mov
sub
or
xchg
lock
jmp
les
aaa
adc
jmp
and
les
xor
data16
sbb
xor
ljmp
xchg
sbb
mov
cmp
pop
sbbl
cmp
test
jns
jle
cmp
cwtl
movsl
repz
ss
mov
mov
mov
call
daa
divb
fs
cmp
xchg
pop
dec
mov
lret
js,pn
out
and
adc
push
ret
mov
jl
in
add
mov
aaa
cmp
pop
cmp
gs
scas
push
xor
daa
xchg
jo
push
jne
es
icebp
sub
pop
mov
inc
in
mov
mov
mov
xchg
xchg
out
mov
leave
push
sti
test
mov
push
xor
ret
sbb
iret
or
sub
mov
lods
mov
test
mov
out
push
jg
jns
push
pop
cli
mov
fstps
or
cli
xor
cmp
adc
cmp
lock
jns
fucomp
divb
test
jb
repz
dec
mov
imul
pop
sets
cmp
or
fdivrs
adc
cmpsl
shrl
cmc
push
adc
mov
xchg
in
mov
and
pop
xchg
pop
and
out
cmp
icebp
into
pop
xor
mov
test
lahf
ljmp
lods
test
arpl
xchg
popa
jmp
xchg
fisttps
subl
and
cmp
rorb
fcomps
in
mov
shrb
mov
push
popa
add
xchg
cmp
and
ljmp
inc
dec
out
push
inc
push
sbb
jle
add
movb
sti
fs
mov
push
xor
aaa
or
fistpl
into
pushf
inc
scas
scas
dec
xchg
shll
pop
out
scas
mov
dec
psrlw
mov
in
adc
loop
cld
xchg
ljmp
cltd
sarb
sti
icebp
sub
add
lret
mov
popf
xor
sbb
pop
jne
aas
push
pop
into
pop
dec
in
addr16
inc
inc
xchg
popa
inc
jge
sbb
dec
inc
fistps
div
fsubrl
pop
in
mov
and
fs
lods
shlb
popf
cmp
adc
xor
orl
jmp
fistpll
sub
cs
inc
or
out
fs
xorb
out
clc
sub
mov
add
out
std
push
test
scas
icebp
xor
xor
cmp
xchg
jl
int3
sbb
cwtl
pop
scas
imul
cmp
scas
sbb
pop
mov
shll
add
adc
push
sbb
mov
sub
scas
jp
xor
out
mov
sbb
rorl
pop
ds
sarb
test
or
mov
jg
std
mov
daa
cli
or
rcrb
int3
xchg
flds
cmp
int3
mov
push
sbb
adc
out
xlat
roll
lcall
mov
push
cmp
in
lds
jmp
mov
jnp
add
push
loopne
imul
jmp
push
mov
lcall
mov
inc
fnstenv
or
sbb
mov
xchg
xchg
inc
stos
roll
adc
scas
into
cs
cmp
sbb
dec
jnp
andl
xchg
sbb
mov
or
mov
out
xchg
arpl
adcl
inc
cmp
lds
mov
mov
push
mov
nop
jmp
push
pushf
mov
iret
xor
ds
test
push
sahf
rorl
sub
in
xchg
pushf
lret
shr
arpl
or
in
lock
sub
sbbb
xor
sbb
pop
dec
xchg
mov
or
cmp
decl
inc
xchg
in
sbb
add
les
movsb
popa
xchg
std
cmp
xchg
or
ds
xlat
push
mov
scas
inc
je
ret
daa
mov
outsl
ret
test
jns
das
inc
in
xchg
fnstsw
cs
out
sti
xchg
xchg
lcall
out
das
xor
pop
xchg
jmp
loopne
fildl
test
jg
incl
daa
pop
push
fidivrl
arpl
or
mov
subb
pop
jae
cmc
push
jg
repnz
push
mov
imul
outsl
pop
and
adc
iret
cmp
jge
mov
cmp
test
fbld
or
pop
testl
js
shrl
lahf
loopew
repnz
in
cmp
hlt
and
stc
imul
adc
test
test
and
and
pop
jbe
add
test
xchg
movsb
icebp
inc
in
test
mov
outsb
xlat
dec
xor
inc
sbb
adc
cs
enter
fisttpll
adc
sahf
xchg
xchg
adc
jmp
cwtl
mov
ret
inc
std
ds
mov
loope
cmp
imul
xchg
in
push
sarl
scas
or
arpl
jne
pop
test
setp
dec
loop
jno
push
pop
cmp
mov
inc
sti
jbe
sub
sbb
mov
inc
mov
adc
add
sub
out
cmp
mov
ja
push
mov
lret
mov
test
mov
cmp
xchg
pop
fldenv
clc
xchg
jo
repz
inc
js
nop
push
jmp
adc
jle
fisttpl
mov
pop
push
stos
icebp
pusha
pop
movsb
call
or
stos
dec
imul
dec
dec
les
movsl
int
outsl
aas
xlat
pop
push
dec
jmp
jp
xchg
emms
inc
loope
sub
pop
notl
mov
addr16
mov
lods
push
lods
hlt
sbb
cli
inc
push
mov
lahf
arpl
jp
cmp
inc
stc
mov
int
mov
cmpsl
mov
mov
aaa
adc
fwait
testb
sub
cmp
scas
arpl
lods
gs
arpl
mov
je
cltd
xor
cmpsl
pop
mov
dec
dec
lcall
loopne
dec
inc
xchg
xchg
movsb
into
push
imul
mov
fucomp
test
mov
adc
lock
ss
sub
sbb
fbstp
inc
scas
mov
adc
pop
adc
or
mov
rclb
mov
and
sub
push
lock
adc
cs
xor
push
pusha
mov
std
push
jge
mov
sahf
fadd
or
bound
mov
jp
sbb
mul
push
iret
adc
bound
adc
push
mov
test
test
jb
stos
or
popa
std
cs
ds
out
jbe
adcl
hlt
loope
mov
jb
ret
dec
xchg
cmp
sahf
lds
cmp
adc
cmpsl
cmpsb
in
and
mov
xor
fs
pop
mov
and
mov
into
xor
sbb
mov
and
out
negl
jecxz
push
int3
aas
jnp
sbb
inc
push
mov
leave
push
arpl
ljmp
movsl
aas
movsl
mov
cmp
sub
jbe
cmp
in
lcall
or
sbb
mov
arpl
dec
cmp
mov
lahf
nop
pop
jl
rorb
jge
xor
fwait
iret
xchg
dec
dec
adc
aas
adc
jns
ljmp
leave
ds
rcpps
jae
push
mov
shrl
cmc
xchg
cli
mov
push
push
into
js
mov
sbb
xor
adc
and
mov
push
repnz
or
inc
pop
or
mov
outsl
jge
push
scas
adc
sti
inc
loope
push
test
pusha
add
lods
aad
xchg
sbb
popa
in
cmp
lret
mov
inc
das
pusha
pop
add
sbb
stc
dec
inc
push
cmpsb
out
fdivrl
js
stos
push
mov
fs
add
jmp
sbb
mov
xchg
push
testb
push
movsl
test
lcall
jae
and
loopne
outsb
add
das
adcl
adc
cmp
insb
or
push
fnsave
cwtl
in
repnz
mov
sbb
sbbb
rol
ja
mov
add
nop
mov
adc
dec
and
in
jge
les
pop
lods
mov
sbb
push
cmp
in
xor
add
les
pop
mov
jb
sub
xchg
aaa
pop
push
repz
int3
mov
dec
dec
daa
cmp
adc
ret
inc
movsl
insl
stos
in
inc
fsubrs
repz
sar
mov
lret
xor
bound
andb
sub
mov
push
xor
mov
test
les
ret
arpl
lea
mov
rcll
mov
inc
stos
adc
mov
aas
jb
jecxz
imulb
mov
in
das
sti
ljmp
aad
rol
and
pop
inc
es
lret
testb
add
insl
imul
js
inc
in
fistpll
sahf
dec
mov
pop
mov
shrb
out
push
pop
pop
xor
fsubrl
pop
aas
sahf
push
mov
nop
cli
pop
push
adc
sub
pop
ret
xor
and
or
sti
ret
sub
adc
cwtl
out
testb
cmp
jg
popf
data16
inc
call
in
movsb
in
sub
xlat
fdivl
mov
fildl
sbb
jle
popf
cmp
push
mov
fisttps
aas
inc
dec
adc
mov
sahf
pop
into
lock
or
sbb
xorl
icebp
jecxz
cmp
cmp
cmc
xor
jno
scas
xor
cmp
adc
pop
cld
dec
sbb
mov
leave
xchg
push
sub
test
out
cmp
pop
aas
push
push
push
cltd
lcall
sahf
js
shll
add
push
jo
mov
call
xchg
loopne
pop
push
into
adc
mov
in
aad
jmp
push
or
clc
fnstsw
sar
neg
hlt
add
enter
adc
xchg
rcrb
and
or
pushf
cli
lds
jmp
aad
aam
jp
and
mov
outsl
mov
ja
pop
ss
scas
pusha
adc
pop
xchg
pop
ret
mov
out
jecxz
mov
sub
inc
sbb
insb
sub
and
jns
sub
mov
push
iret
xchg
int3
rolb
jmp
push
pushf
jl
xchg
xchg
bound
in
push
fstps
lds
cmc
mov
fistpll
adc
clc
mov
mov
sbb
sub
push
imul
adc
loop
pop
pop
xor
sub
adc
inc
es
inc
pop
pushf
cmpsb
cmp
sub
push
sbbb
dec
mov
mov
inc
dec
aaa
shrb
aam
mov
jg
movsbl
in
sti
outsl
shll
jge
pop
lahf
mov
std
cltd
pop
scas
and
fcoml
fwait
mov
pop
fmul
std
push
testb
cwtl
inc
jno
out
out
sub
sbb
js
and
loop
sarl
sbb
push
xchg
loope
adcl
inc
pop
scas
leave
sbb
cmpsl
fldl
sti
in
jns
pop
adc
scas
fdivrl
iret
clc
cld
test
ss
les
cltd
fbstp
popa
push
int3
or
mov
or
cmc
mov
daa
je,pn
aad
shll
mov
push
cltd
lods
or
pop
pop
mov
vorpd
pop
sarl
ficompl
ds
mov
shll
call
scas
shlb
lcall
insb
pop
cmp
pop
in
dec
ljmp
mov
test
add
shrb
test
scas
call
scas
cmp
mov
int3
push
ljmp
sub
pop
xor
sbb
cwtl
pop
xlat
sbb
xchg
test
and
xchg
pop
test
mov
fildl
loopne
fldl2t
and
sub
or
inc
inc
mov
xor
pop
in
sahf
inc
cmp
xlat
jge
sbb
adc
shr
and
jno
fisttps
paddd
cmp
test
and
inc
jno
xchg
stos
sahf
and
push
add
xor
subl
or
cmp
mov
movsb
jns
sub
cmp
dec
out
test
jecxz
aas
mov
add
cmpb
int
pop
mov
dec
movsb
insl
pop
mov
inc
add
jmp
mov
clc
enter
sub
or
mov
sbb
cwtl
ret
jbe
fs
jo
cmp
lods
pushf
ret
cmp
inc
inc
mov
jns
ret
cmpl
ss
sub
xchg
roll
pop
inc
push
add
outsl
jp
loope
jp
push
in
test
jl
pusha
inc
imul
enter
sbb
xchg
push
mov
and
xchg
or
pop
shl
fsubrp
and
daa
inc
inc
xchg
ficoml
mov
rcll
fadd
jmp
inc
sti
and
hlt
bound
xchg
out
mov
dec
pop
sti
sbb
and
adc
and
aam
out
scas
pop
mov
imul
mov
jns
xor
in
xchg
adc
sbb
pop
pop
cmp
push
pop
push
jmp
aas
cmp
push
add
test
int
pop
sbb
loopne
mov
gs
adc
mov
movsl
inc
jnp
fsubl
cmp
fiaddl
xchg
xchg
jg
aad
aaa
and
js
add
push
xchg
add
stos
call
mov
outsl
mov
mov
xor
or
ret
cli
sub
adc
mov
shrl
push
popl
sbb
cmp
int
push
ret
cld
dec
test
pop
cltd
mov
mov
addr16
push
sahf
dec
or
mov
sub
movsb
dec
inc
stos
xchg
rclb
dec
dec
bound
adc
add
into
mov
stos
sbb
insb
sbbb
decl
shl
icebp
or
inc
hlt
xor
cmpb
sub
mov
test
push
push
lds
fcomps
mov
idivb
mov
pop
ret
aaa
pop
fs
sbb
int3
fs
or
pop
leave
aas
dec
aam
pop
lods
jbe
js
cmp
rclb
loop
push
aaa
dec
push
out
dec
jo
push
cmp
in
xchg
push
fstps
sahf
mov
data16
sbb
test
jnp
cltd
stos
push
cmove
cli
fnstenv
std
fisubrs
xor
adc
pushf
sbb
ficoms
clc
xor
or
subl
adc
cwtl
inc
lods
fmul
es
mov
dec
lahf
mov
inc
stos
mov
cmp
xor
rclb
shl
repnz
imul
sbbb
lods
and
pop
je
dec
in
inc
mov
add
adcl
loop
dec
or
lds
mov
dec
in
or
inc
fisubrl
arpl
cmp
jmp
lods
fwait
xchg
mov
push
in
lcall
sbb
or
sbb
sbb
inc
inc
movsb
mov
fdiv
ds
mov
stos
addr16
cmpsl
les
nop
rorl
cmpsb
lods
in
std
xchg
sahf
and
pop
pop
fmull
inc
xor
mov
cwtl
les
pop
stc
getsec
add
imul
xor
sbb
gs
and
cmp
add
ret
push
aad
adc
aaa
mov
enter
mov
mov
push
push
pusha
int3
cmp
xor
fcomps
loop
movsb
fiadds
add
rol
or
into
inc
inc
inc
push
sbb
repnz
mov
and
rcrb
cmp
pop
xchg
pop
pop
or
faddl
inc
and
inc
in
cmpsl
bound
arpl
inc
pop
scas
and
repz
movsl
cli
das
push
pop
test
xchg
add
cwtl
lcall
dec
fstp
insl
or
jbe
rcrb
mov
inc
xchg
ss
adc
movsb
mov
dec
and
push
outsb
lods
lret
cmpsl
into
push
sub
mov
adc
dec
ret
cmp
sub
pop
imul
loope
xor
enter
mov
xor
push
inc
sub
mov
data16
dec
shl
test
imul
jg
jo
mov
add
push
mov
push
xor
or
fimuls
lret
fsubs
xchg
pop
adc
ret
call
pop
clc
xor
popf
sarl
mov
aam
mov
lods
pop
fst
das
jmp
outsl
sbb
jmp
enter
sbbl
fwait
in
mov
cmpsb
add
lret
lret
insl
ljmp
outsb
fwait
jnp
lods
mov
shlb
packuswb
orb
scas
cmp
and
cmp
add
or
jb
pop
mov
jl
pop
xor
pusha
scas
aad
mov
fs
dec
cmpsl
and
std
push
std
stos
shrb
or
jecxz
outsb
test
jp
dec
fs
add
mov
hlt
or
adc
leave
loop
loop
into
gs
pusha
mov
dec
mov
sbb
outsl
add
sub
clc
rcll
mov
jecxz
fcoms
lcall
call
hlt
adc
dec
pop
fldcw
fcoml
fistl
pop
daa
mov
dec
dec
sub
adc
imul
xchg
loope
sbb
push
inc
fimuls
dec
mov
dec
aaa
clc
mov
dec
sti
in
push
imul
movsb
lds
pop
js
lahf
mov
jb
add
push
call
fstl
sub
or
addb
into
or
sub
dec
dec
pop
fildll
rorl
and
imul
adc
repz
push
mov
cmp
lahf
inc
lahf
sbb
fmul
out
dec
mov
or
sbb
pop
lahf
in
bound
sahf
pop
dec
enter
mov
sub
fwait
ja
loop
scas
push
cld
pushf
push
cmp
mov
jbe
not
fists
fldt
mov
pop
dec
arpl
pusha
or
sub
and
out
or
sahf
sub
int3
jb
mov
stos
mov
sub
mov
xor
sub
aas
cmp
adc
add
pop
popa
jo
push
pop
sub
mov
cmp
daa
aam
xor
inc
icebp
cmp
imul
addr16
push
inc
mov
add
ret
jecxz
inc
push
add
scas
sahf
jp
xchg
xor
add
mov
or
mov
adc
xchg
fmuls
dec
cmp
out
aam
sub
inc
inc
call
out
mov
movsb
jno
jg
sub
pop
xchg
push
mov
pop
test
cmc
movsl
sbb
cmp
fwait
fwait
cmpsl
mov
call
fistpl
cmpsl
fs
lods
scas
mov
jno
and
fmuls
je
and
or
push
sahf
lret
lods
inc
push
jmp
out
popa
shr
xor
scas
sbb
mov
mov
cmpsl
roll
enter
mov
sbb
les
jecxz
ds
outsb
push
fldcw
in
arpl
mov
mov
sub
repz
loopne
sbb
jecxz
stc
jb
fildll
push
fistl
mov
xlat
aad
adc
add
sarb
and
push
mov
xor
dec
cmpsl
inc
fmull
lods
mov
lahf
sub
clc
inc
orl
dec
in
sahf
scas
sub
lret
out
jae
jp
inc
inc
xchg
leave
pop
cmp
adc
test
dec
fistps
sti
adc
adc
dec
lcall
mov
xor
inc
ds
mov
fdivrp
lods
add
dec
shl
mov
sbbb
or
ror
add
sbb
adc
and
mov
inc
fisttpl
jo
outsl
or
inc
lcall
push
fnstcw
cmp
out
adc
or
jne
pop
jb
lods
dec
xchg
lea
call
add
xchg
cmpsl
fs
dec
pop
jecxz
sbb
sbb
imul
push
sub
dec
rcrb
in
aaa
mul
sahf
or
pop
inc
and
xlat
pop
dec
loope
and
xor
das
pop
mov
mov
loope
sbb
cltd
cmp
or
aam
pop
mov
lret
cs
int
mov
xchg
adc
mov
jo
ja
cmp
and
inc
fistl
cmp
inc
rclb
xchg
fabs
ds
insl
and
dec
rcr
leave
loope
pop
and
in
xchg
cmp
or
dec
popf
jbe
mov
mov
mov
mov
add
mov
dec
popa
mulb
dec
pop
dec
inc
scas
out
xchg
mov
xchg
sub
fistpl
nop
lods
inc
cmp
jmp
mov
pop
inc
pop
xor
pop
dec
ret
xchg
cli
lds
push
int3
shrl
pop
xor
mov
inc
push
xor
mov
outsb
push
aaa
xchg
cmc
adc
gs
cmp
out
xchg
cmpsb
ret
shlb
sysenter
cmpsb
xchg
and
lret
enter
push
mov
cmp
xcrypt-cbc
cmpsl
shlb
xor
and
cmpl
mov
pop
inc
and
iret
fcoms
test
leave
pop
lods
sbb
sar
dec
mov
or
ret
jo
ds
out
or
xor
imul
test
outsl
in
inc
fistpl
ss
cmc
xor
push
xor
lods
cmp
dec
lea
in
add
mov
add
hlt
pop
cmpsb
mov
cmp
es
ja
ljmp
shlb
xchg
out
jmp
dec
pop
sub
xchg
jecxz
xchg
jge
cwtl
lcall
mov
lret
pop
insl
inc
inc
inc
mov
fimuls
out
pop
dec
inc
cmp
inc
jno
jno
lea
mov
jb
xchg
mov
test
or
jns
dec
jo
repnz
setnp
or
jb
fdivrl
push
dec
inc
sub
adc
jl
fcom
mov
cmp
je
inc
cmp
std
call
push
xor
dec
jno
scas
mov
dec
jmp
push
lahf
mov
pop
int
mov
ret
negl
in
sbb
and
jns
push
xor
cmpsl
jmp
cli
pop
xchg
mov
popa
inc
mov
fcomip
xor
and
int
bound
add
mov
mov
inc
pop
fldenv
in
mov
cli
adc
mov
mov
xchg
arpl
test
out
fwait
rcll
cs
jae
movsl
xlat
mov
push
mov
popa
das
out
cmp
inc
repnz
rcll
mov
int
sbb
lods
mov
clc
cmp
add
lods
and
add
into
pop
jp
or
xchg
test
dec
jno
push
adc
jmp
or
mov
test
sarb
jl
cmp
and
js
lcall
jno
mov
mov
rolb
sbb
test
dec
mov
jp
imul
or
nop
push
and
sbb
jg
xor
cmp
cmpsl
mov
cld
pop
xchg
mov
mov
sbb
lea
adc
aas
leave
fcmovnb
mov
es
mov
jo
mov
add
stos
outsl
lret
mov
jno
adc
js
mov
pusha
xchg
lcall
xlat
int3
add
add
mov
cmp
insl
pop
popa
push
insb
add
imul
ret
mov
ja
ja
addr16
jo
stos
add
mov
out
mov
gs
jp
cmp
repz
fdivrs
add
mull
mov
and
mov
sbb
mov
aaa
xor
mov
push
mov
xor
test
jecxz
xlat
stos
mov
pop
fwait
stc
cmp
and
bound
pop
mov
push
xor
and
loop
inc
mov
mov
aad
push
fs
andb
inc
in
cmp
jl
sarl
jl
inc
xor
jnp
roll
lds
repz
add
adc
jb
lcall
xor
sar
xor
jp,pt
aaa
addr16
ja
or
ss
push
mov
and
sub
addr16
and
mov
jo
js
cmpsb
enter
sub
lret
dec
xchg
hlt
and
lods
shrl
jo
ds
add
sbbl
cmp
jmp
push
jle
repz
lahf
gs
mov
aam
xchg
pop
and
inc
mov
es
fs
sbb
jg
out
shrl
inc
jno
fisubrs
std
fsubrs
sbb
jmp
push
pop
add
inc
push
sub
cvtdq2ps
int
aas
lret
mov
pushf
repz
jle
es
movsb
mov
xchg
xchg
shll
call
mov
add
jecxz
cmp
pusha
ja,pn
or
rclb
adc
sub
push
cmpsl
or
lock
mov
xchg
jp
lcall
sub
lds
aam
out
ret
and
push
rcll
stc
and
fistps
mov
xor
fisubrl
aam
fs
test
ret
out
inc
jl
les
loope
lahf
mov
xor
sarl
loope
xor
pop
mov
lods
fildll
frndint
adc
add
jae
ficomps
mov
add
aad
sub
mov
lods
js
add
and
push
ret
lret
sti
dec
fwait
push
sub
outsb
insl
fs
es
dec
inc
mov
sub
cmp
ja
js
dec
pop
les
in
shlb
sarb
mov
mov
shr
adc
mov
jl
inc
jmp
and
xor
cmp
ja
sub
xor
fisubrs
mov
or
sbb
pop
insl
into
movsb
push
sahf
aas
lods
xchg
xor
sti
sub
dec
stc
dec
push
jl
sarl
cmp
add
jg
insl
popf
xchg
add
sbb
sub
push
xchg
shrl
outsl
xor
outsl
add
jno
dec
add
cmpsb
or
sbb
daa
das
mov
mov
add
push
xchg
sar
jmp
xchg
cmp
leave
gs
dec
dec
rorl
lods
mov
xlat
pop
pop
push
out
sahf
jecxz
jecxz
sbb
bnd
in
cmp
es
and
sbbb
inc
and
mov
add
insb
fwait
jle
pop
jg
pop
mov
pop
jnp
sbb
mov
les
ret
dec
or
xlat
aaa
pop
in
xor
jns
sub
xchg
push
pop
xlat
sub
and
xchg
shl
loope
xchg
je
mov
push
daa
les
subl
mov
cmp
sub
rcll
dec
and
stc
inc
jg
sub
pop
push
leave
adc
repz
jge
movsb
mov
dec
mov
cmpsl
adc
dec
dec
push
hlt
mov
shlb
mov
adc
rol
xor
stc
mov
xor
aaa
or
in
mov
lcall
push
cs
dec
test
or
jl
or
das
sti
push
push
aas
dec
test
push
leave
call
pop
sbb
mov
test
mov
dec
push
add
call
scas
aam
lods
cmp
lret
test
mov
and
test
push
pop
lret
push
je
mov
sub
sub
jb
mov
shrb
add
stc
and
icebp
push
jo
fucomip
and
mov
mov
out
mov
and
jge
mov
sbb
add
pop
in
shlb
das
outsl
cmc
lods
stc
int3
jl
xchg
adc
mov
mov
bound
negl
or
stos
xchg
cmpsb
out
fdivrl
stos
ffreep
jo
mov
stos
cmp
incb
ja
inc
ret
je
lock
cwtl
sub
cmpl
sbb
call
adcb
push
les
mov
rolb
xchg
sub
in
add
fidivrs
int3
jmp
dec
into
fadds
adc
bound
adc
pop
popf
inc
rcr
push
js
push
popa
movsb
push
scas
aaa
pusha
mov
sbb
mov
lods
xchg
cmp
push
push
cmpsl
or
call
hlt
js
inc
mov
jae
lds
cs
mov
shll
push
sar
or
sub
sub
lea
test
stos
int3
add
fwait
icebp
adc
sub
dec
sbb
add
inc
sbb
int3
out
pop
mov
push
cmovg
and
scas
dec
jnp
ljmp
or
movsl
xchg
test
shl
jnp
idivl
loope
fidivrs
push
test
cmp
je
push
push
add
lods
jp
push
scas
nop
inc
rorb
mov
dec
jns
lods
mov
or
test
jno
mov
lds
or
jmp
cmc
cmp
aam
cli
push
bound
pop
int3
nop
inc
aad
push
jge,pn
sahf
or
fnstenv
sub
insl
jl
mov
cmp
push
out
dec
push
or
xchg
push
jnp
out
out
scas
shrl
sahf
sti
ljmp
add
xchg
ljmp
data16
push
clc
ret
lock
sub
adc
je
fsubrl
in
sahf
xchg
mov
bound
xlat
lea
fcmovne
sbbb
mov
out
nop
mov
mov
in
jae
xor
or
cltd
lods
cwtl
jae
testl
test
data16
je
fcmovnbe
mov
dec
ret
addl
xlat
mov
fildl
mov
popa
jmp
and
jge
fs
cli
and
sub
sbb
push
negl
mov
sub
sbb
sub
into
dec
roll
inc
sarb
in
in
loop
sbb
aas
enter
fstpl
lea
pop
lcall
mov
cltd
xor
inc
insl
scas
push
test
stos
jg
test
push
mov
sub
lahf
cmp
mov
fnstcw
shlb
stc
dec
in
xor
ja
xor
cmpsl
pop
stos
outsl
inc
shl
sbb
adc
daa
ss
cld
into
push
adc
loope
mov
push
jo
sbb
gs
and
das
in
inc
mov
ss
sbb
mov
xchg
in
jecxz
adc
clc
data16
loope
sub
insb
xlat
and
push
mov
or
inc
daa
push
mov
in
sub
add
xchg
das
push
ret
lds
xor
aad
jl
or
sub
and
das
ret
aas
ret
outsl
xlat
dec
icebp
in
daa
je
out
cmp
and
bound
std
ret
or
add
fidivrl
xchg
data16
repnz
or
fidivl
add
loope
aaa
nop
add
fs
xor
imul
lcall
jle
ljmp
inc
and
push
mov
adcl
push
adc
mov
pop
add
pushf
sarl
loope
jmp
inc
dec
ficomps
xchg
int
cltd
pop
sbb
jl
inc
in
lds
outsl
pop
in
leave
inc
loopne
inc
sub
sub
je
or
test
jmp
mov
xor
add
sbb
cmpsl
push
das
cmp
jb
inc
aam
jecxz
ficoms
clc
jbe
pushf
push
xor
mov
jmp
push
pop
aad
imul
frstor
sub
mov
dec
test
add
jnp
ljmp
mov
and
pusha
loop
xchg
sbb
add
sub
insb
into
inc
and
ret
mov
pop
and
mov
or
adcb
mov
mov
xchg
or
pop
insb
arpl
dec
jg
sahf
push
mov
stos
rclb
push
xchg
push
dec
adc
pop
lds
ljmp
mov
dec
push
cmp
push
testl
xchg
hlt
enter
push
aas
sahf
adc
ret
jmp
movsl
out
cmpsl
cmpsl
sub
call
xchg
adc
rorl
fwait
cmp
cli
sbb
aad
rclb
mov
lret
jmp
mov
mov
mov
jns
add
in
jb
sbb
test
jle
jl
xchg
popa
loopne
lcall
loopne
xor
pop
stos
call
jmp
scas
push
jb
dec
aam
adc
mov
stos
lods
dec
dec
inc
loope
imul
and
dec
pop
mov
data16
inc
icebp
aam
sub
pusha
xchg
mov
loope
cwtl
fwait
cs
cmp
adc
add
loop
mov
dec
dec
in
sub
adc
inc
jno
cmpsb
push
sbb
xor
je
ficoms
jp
xchg
cmpsb
xorl
es
test
dec
ljmp
and
stc
fidivrs
or
fimull
jmp
lods
sub
sbb
outsb
cmp
mov
fisttpll
arpl
aam
shrb
xchg
pushf
mov
adc
cmp
roll
fcoml
clc
divl
movsl
dec
je
leave
mov
pusha
gs
shll
pushl
test
lds
popw
push
jl
jmp
shl
fs
aam
cmp
mov
pusha
bound
fs
inc
push
test
push
push
ljmp
mov
test
ja
rorb
pop
inc
out
pop
gs
pop
icebp
jl
pop
ja
pop
or
mov
or
mov
aas
call
mov
aaa
adc
mov
and
bound
clc
mov
ss
mov
mov
in
je
add
and
dec
mov
scas
idivb
pop
pop
iret
lcall
rep
push
pop
jnp
cwtl
sbb
leave
push
loop
movsl
xchg
lods
mov
inc
ret
mov
xchg
jl
adcb
lea
sbb
push
push
inc
fstps
lcall
scas
out
inc
mov
lret
testl
mov
imul
jle
cmp
jg
in
call
loopne
lea
pop
jno
call
pop
mov
xlat
jge
dec
addb
sbb
xchg
adc
ss
jg
pop
mov
enter
pop
stos
mov
sbb
sub
or
jnp
les
inc
cli
fbld
dec
add
sub
jl
add
mov
out
mov
ja
pop
scas
mov
in
add
mov
inc
sbbl
std
and
push
cmp
or
sbb
iret
xorl
insb
fisubl
dec
mov
adc
pop
btr
mov
xchg
frstor
push
mov
inc
push
jge
sbb
xchg
stos
adc
mov
fnstcw
bound
push
pop
dec
ss
test
out
lods
iret
xlat
and
cmc
outsl
mov
clc
pushl
xchg
lods
pushf
jae
jmp
push
jp
push
lock
jmp
jmp
scas
mov
cmpsb
out
inc
negl
js
inc
jmp
gs
loope
jmp
add
mov
xor
mov
dec
pushf
jne
call
jle
outsl
ds
xchg
mov
setne
movsl
push
sahf
pusha
xor
test
push
add
enter
sub
mov
in
adc
xlat
lods
loop
mov
ljmp
push
sbb
mov
enter
mov
pop
sub
cli
andb
cli
call
clc
cmp
sti
popa
fdivs
or
inc
dec
or
mov
mov
push
loope
push
lret
mov
pop
xchg
loope
or
pop
stc
outsb
mov
mov
mov
lock
outsl
sbb
mov
push
fcomps
adc
mov
int
ss
sub
or
xchg
lods
pushf
push
or
mov
jno
mov
in
sub
xorl
out
dec
xchg
popf
inc
jecxz
xor
jbe
push
push
sbb
adc
gs
aad
add
fistps
shlb
sub
jmp
cmp
and
add
icebp
xor
mov
mov
enter
test
or
inc
and
sbb
ret
mov
jnp
addr16
loopne
dec
jg
jecxz
movaps
out
rep
aam
addr16
mov
lods
cmp
sbb
inc
les
adc
mov
dec
flds
popf
jb
pop
cmpsb
adc
xor
cmp
cmp
test
aad
in
sub
rcrb
or
mov
pop
pushf
fiadds
test
mov
xlat
inc
push
mov
push
push
cmp
mov
pop
cltd
xor
xor
mov
or
pop
mov
fs
outsb
add
dec
lcall
rcr
adc
sarl
out
dec
sarl
ficoms
sub
hlt
xor
bound
rol
sahf
adc
sub
xor
fwait
mov
push
inc
insb
jl
and
fcomp
xor
call
mov
shrl
fimuls
sti
jp
push
mov
xor
lock
sub
dec
xchg
fcmovnb
popa
test
xor
cmp
leave
enter
imul
sbb
iret
dec
and
cld
fbld
xchg
popf
or
lret
xchg
pop
jb
and
into
jmp
out
arpl
aam
xchg
loop
sbb
cwtl
cmp
cli
fwait
ret
adc
jnp
iret
mov
adc
mov
cltd
xchg
out
movsb
add
push
aad
pop
push
hlt
inc
adc
or
jg
xchg
dec
shlb
js
rolb
jo
movsb
nop
pop
jns
ret
xorb
js
stos
xor
shrl
xchg
addr16
add
imul
movsl
fcmovnu
mov
stc
arpl
push
push
xchg
or
pop
jo
mov
gs
cmp
cmp
cmp
mov
movsl
fisttps
push
mov
sub
out
cltd
ficomps
cmp
jmp
pop
fsub
mov
jge
sbb
call
shr
inc
shrb
jnp
xchg
dec
filds
mov
mov
stos
into
xor
jmp
xor
popf
test
lahf
adc
orl
rorl
push
sub
je
ret
fisubrs
fistpl
xlat
push
push
fimuls
in
mov
jg
sti
mov
add
dec
and
push
add
xchg
data16
out
leave
xchg
fnstenv
adcl
sbb
outsl
mov
pusha
xchg
push
add
push
adc
mov
xchg
pop
jle
dec
xchg
inc
xlat
cmpsb
or
adc
rcll
fsubs
roll
decl
inc
ret
cs
mov
es
mov
dec
out
sbb
mov
lods
out
hlt
mov
scas
test
out
mov
dec
add
test
mov
sub
shlb
sub
xchg
mov
mov
or
sahf
pop
mov
xorb
incl
or
fsubs
rcl
xor
cmpsl
lds
dec
gs
mov
fwait
mov
mov
mov
or
jno
xor
or
data16
stos
xchg
mov
out
lret
test
lock
or
inc
imul
cmpsb
push
pop
push
aad
not
mov
pop
inc
sbb
nop
lcall
and
sbbl
pop
imul
shlb
add
push
rcrb
dec
and
fisttpl
jge
pop
dec
adc
adc
inc
das
rorl
pop
mov
sub
jge
dec
push
dec
nop
and
cmp
notl
movsl
mov
jmp
xchg
or
outsb
mov
add
in
out
dec
and
mov
adc
stc
arpl
add
inc
jmp
ret
addr16
mov
rorb
xchg
sarl
out
jne
jbe
dec
std
lcall
mov
inc
mov
mov
rclb
push
sub
arpl
add
test
jbe
clc
repnz
in
sub
data16
dec
or
fwait
adc
mov
mov
mov
mov
cmp
or
test
rcrl
sbb
inc
test
testb
sub
mov
pop
out
js
and
dec
add
popf
push
xchg
mov
mov
imul
and
sarb
in
jne
pop
fstpl
mov
jecxz
xor
movsl
xchg
xchg
pop
xor
fimull
dec
add
loopne
les
pop
pop
pusha
or
pop
add
mov
push
mov
pop
pusha
mov
int
loope
ljmp
mov
lods
jno
push
push
cmp
mov
fistl
add
dec
mov
cmp
shll
aam
call
enter
test
xchg
jg
test
fldt
movsb
loope
aaa
mov
sti
out
leave
je
sub
movl
popa
or
iret
cli
jg
test
js
xchg
jp
in
out
lret
xchg
loope
cmc
cmp
and
push
sbb
call
adc
sti
jecxz
lds
out
cmpb
cmpsl
xchg
push
and
lock
into
push
addr16
mov
mov
mov
cli
xchg
pop
lret
shlb
mov
addr16
cmc
lods
pushf
xor
fidivl
js
mov
data16
inc
sar
aas
in
pop
mov
pop
push
jbe
out
mov
xor
xor
in
das
or
pop
push
insl
mov
cltd
ja
test
out
push
sbb
mov
push
aas
fwait
or
iret
push
iret
pop
int
sub
jmp
clc
andl
and
cs
loopne
adc
mov
popf
loop
jnp
std
mov
sbb
jnp
pop
lods
test
movsb
add
adc
adc
daa
clc
loop
into
into
mov
and
jg
dec
inc
insl
dec
sbb
sbb
stos
arpl
cmpl
js
mov
cld
imul
data16
push
push
mov
xor
push
add
orb
mov
cmc
jo
dec
adc
ja
fs
mov
in
xor
lods
lret
lcall
jbe
int3
jecxz
sub
gs
xchg
jmp
icebp
cmp
adc
jecxz
out
cld
xor
mov
mov
xchg
repz
push
into
adc
arpl
lret
enter
sbb
mov
or
pushf
adc
movsb
sti
lret
insb
lret
push
jno
ja
push
repz
cmp
mov
sbb
mov
lahf
pushf
jecxz
xor
bound
mov
rorl
lea
cld
push
jl
sbb
mov
jae
xchg
jo
test
je
mov
inc
aas
imul
scas
or
and
out
mov
pop
pop
call
push
jmp
and
sub
push
int
in
mov
pop
push
les
js
pop
mov
xchg
inc
sahf
icebp
jno
aas
pop
leave
fstpt
bound
gs
sbb
stos
xchg
rclb
cs
pop
dec
add
fsubrs
popf
inc
push
cwtl
jg
add
ja
out
and
testl
mov
loop
dec
andl
pop
jl
ret
les
cli
fisubs
call
ror
sub
jne
dec
icebp
jne
rol
stos
lea
lret
daa
rcrb
xchg
stos
lods
mov
rcr
xchg
jp
mov
outsl
loop
sbb
inc
sar
mov
add
sbb
jne
or
jns
lods
xor
push
sub
jle
push
mov
stc
lcall
jecxz
std
loop
je
mov
jmp
repz
jge
sbb
and
popf
gs
and
push
repnz
pop
pop
mov
repnz
mov
dec
test
xchg
sbbl
cs
or
out
lret
test
push
mov
cld
mov
add
push
xor
sub
push
js
mov
push
push
push
cwtl
int
add
sbb
in
repz
nop
push
jno
jmp
dec
cmp
and
hlt
insb
push
shlb
es
out
dec
adc
push
xchg
test
dec
test
and
lods
cmp
sub
push
jbe
dec
and
lcall
fldenv
mov
jle
ret
xor
out
int3
push
jns
pop
inc
xchg
jae
cmp
sbb
lret
and
jge
loope
mov
mov
inc
add
cmpl
mov
mov
add
xchg
dec
sbb
pop
pop
push
xchg
push
push
lahf
add
aad
negb
mov
jge
lahf
pop
mov
int3
pushf
loop
roll
lock
mov
add
ljmp
sbb
xchg
movsb
aas
sub
lds
mov
push
pop
cld
add
jae
cli
fwait
sbb
in
icebp
push
mov
cwtl
and
add
jb
mov
out
push
mov
ret
fstpt
pop
aad
adc
inc
dec
adc
xchg
in
mov
sbb
add
clc
xlat
jb
into
out
outsb
and
sbb
ficoml
shll
mov
cld
add
rcll
stos
int3
fisubl
push
andb
mov
repz
icebp
insl
or
push
push
scas
pop
cmpl
xor
dec
hlt
je
cmovae
aaa
xchg
xor
add
sti
push
mov
sbb
jl
sub
cmp
sti
ret
xchg
sti
jb
jmp
jge
sub
scas
dec
dec
cmc
cwtl
orl
insl
cmp
pushf
sbb
lcall
repnz
jg
outsb
push
repnz
dec
lods
fstpl
mov
movsl
mov
or
jne
int
bound
xor
inc
sbbb
sti
sti
mov
xchg
push
inc
push
pop
hlt
mov
push
lea
inc
and
adc
inc
mov
loopne
shrl
cli
mulb
push
call
mov
xor
imul
pop
mov
mov
mov
ja
dec
sub
dec
inc
mov
lret
mov
pop
loopne
stos
sub
jl
adc
or
test
fnstenv
cs
das
jae
out
xor
xchg
mov
clc
aad
repnz
sub
mov
mov
scas
lahf
dec
lret
gs
or
sbb
test
adc
shrl
pop
add
dec
cmp
adc
xor
std
push
arpl
pop
xchg
cmp
adc
add
mov
loope
orb
push
mov
das
das
shll
sub
mov
mov
sti
ljmp
inc
mov
jb
inc
push
inc
fstpt
fs
mov
lcall
fisttpll
mov
sbb
dec
push
shl
mov
fistl
in
scas
outsb
jp
popf
sbb
nop
adc
stc
test
push
loope
lock
repnz
ret
sbb
sub
mov
jg
fstpt
mov
out
movsl
popa
push
call
pop
adc
dec
daa
or
dec
and
popa
xor
mov
sub
xchg
out
and
dec
dec
stos
mov
fisttpll
cli
into
push
adc
bound
int
add
out
orb
aad
and
les
mov
je
inc
in
pop
popa
arpl
lcall
int3
hlt
sahf
hlt
loope
pop
adc
loop
scas
add
sbb
nop
or
int
pushl
mov
lret
sub
add
test
xchg
xchg
pop
aas
enter
pop
pop
add
loop
dec
outsl
dec
cmp
xor
xor
imul
cltd
das
fs
mov
pop
out
jae
out
pop
push
cvtps2pi
hlt
xlat
push
out
movsb
xchg
xor
sub
fwait
mov
mov
xor
mov
adc
fsub
divb
bound
dec
out
arpl
aas
imul
xorl
or
ret
mov
fs
ret
pop
xorb
lock
fs
pushf
dec
dec
nop
sub
iret
test
mov
in
pop
insl
sti
scas
push
aaa
lods
dec
pop
cmpsb
xchg
push
es
pop
add
push
adc
bnd
sbb
adc
je
loop
adc
or
dec
les
dec
xlat
mov
loope
repnz
or
ja
sbb
test
cmpsl
cmp
insb
sbb
inc
orl
int
add
jnp
test
movsl
repz
push
sub
enter
xchg
sbb
cmp
jmp
and
sub
inc
jecxz
pop
xchg
cmpsl
rorl
xlat
mov
push
incl
xchg
ds
cmp
lret
ror
punpcklwd
call
adc
xor
pandn
add
mov
mov
pop
out
xor
lds
jae
in
cmp
xor
mov
push
lock
out
or
pusha
ds
inc
mov
push
adc
and
and
shl
lret
fmuls
cmp
jo
cld
sbb
stos
mov
or
call
jb
or
and
repnz
add
ror
ficomps
xlat
stc
cmpsl
scas
mov
sub
stc
jmp
shl
pusha
js
mov
sub
dec
xchg
in
ds
or
mul
mov
xor
or
and
test
lret
icebp
fisubrl
mov
jecxz
xchg
mov
cmp
push
add
mov
cmc
das
jmp
in
gs
lahf
repnz
lods
sahf
insb
dec
mov
xor
aas
ret
cmp
out
les
cmp
aas
imul
push
ss
mov
xchg
jecxz
in
in
aad
mul
add
test
sbb
negb
loope
roll
fstp
in
popf
repz
loope
cltd
ds
mov
or
or
mov
dec
aaa
repnz
adc
cs
and
jl
outsl
les
xor
idivb
outsb
repnz
and
pop
dec
pop
add
adc
stos
xlat
insb
call
pop
xchg
mov
lea
pushf
mov
cld
cmpsl
mov
int3
loopne
pop
add
mov
testl
imulb
inc
aad
xchg
jb
sti
ds
sub
jns
jno
jecxz
jbe
pushf
add
movsb
pop
jge
repz
mov
or
push
fsub
std
sahf
adc
ja
sub
sbb
mov
dec
pop
cs
xchg
cmp
dec
cmp
lods
je
fidivl
pop
clc
into
movsl
jle,pt
jo
repz
or
cmc
in
push
scas
arpl
xor
xchg
xor
xor
fisubrs
pop
pop
test
mov
push
mov
neg
cmpsb
fcomip
jne
mov
call
frstor
add
fs
testb
adc
insl
cltd
adc
pop
cmpsb
outsb
rcll
loope
lods
lcall
xchg
mov
xchg
jl
cmp
lret
inc
ret
mov
inc
ret
std
jecxz
fidivrl
pop
loop
push
pop
jg
add
xchg
sub
jns
cmpsb
test
ss
repnz
cmp
or
repnz
and
or
mov
cld
jae
lret
clc
cltd
push
gs
cmpsl
fcmovu
scas
dec
mov
fwait
mov
aaa
pop
in
mov
xor
mov
pop
repz
mov
sub
mov
jecxz
sar
mov
outsb
mov
movsb
les
enter
add
cmp
int
add
mov
fsubs
mov
out
pop
push
std
pop
loop
mov
ret
pop
sti
leave
mov
fdivp
or
int
ret
push
loopne
mov
mov
test
or
test
mov
ss
or
dec
and
pop
sbb
int3
xchg
cli
into
loop
mov
fs
std
mov
insl
mov
dec
loopne
rcll
or
pop
jns
stc
data16
test
or
add
cmc
pop
int
jg
pusha
xchg
mov
mov
repnz
ja
inc
mov
mov
jmp
iret
mov
dec
popa
out
inc
fdivs
mov
in
sbb
loopne
loope
test
xor
inc
pop
sub
mov
adc
mov
push
loopne
test
push
cmp
add
xchg
cmp
pop
and
hlt
push
xor
or
outsb
cwtl
mov
popa
std
xchg
daa
test
xchg
pop
imul
scas
cli
jbe
pop
mov
hlt
int3
and
jbe
lcall
add
pop
loop
mov
fisubrl
inc
and
mov
xchg
addr16
xchg
out
daa
xor
adc
xor
lods
shrb
mov
cltd
push
ljmp
mov
sub
jnp
aam
stc
mov
push
imul
jmp
rorb
adc
mov
mov
dec
stos
mov
push
dec
push
idivl
dec
in
add
mov
dec
stos
mov
inc
insl
add
and
cli
cmpsb
icebp
mov
mov
sbb
test
insb
int
ss
xchg
roll
out
mov
leave
repnz
sub
jnp
cmp
mov
adc
popf
inc
imul
mov
or
sub
xchg
push
fucomi
xchg
mov
lea
les
inc
pop
loope
sub
add
jmp
stos
ret
cmp
scas
repz
rcrl
enter
and
daa
adc
sub
into
imul
mov
xlat
ret
mov
bound
dec
add
mov
jge
push
ljmp
loopne
les
pop
cltd
adc
in
cwtl
adc
inc
sbb
sbb
sub
or
mov
xchg
cmp
out
and
add
ret
lahf
cli
adc
push
cltd
stos
add
out
repnz
sub
push
outsl
loopne
mov
out
rcll
fstps
dec
or
jl
xchg
or
stos
icebp
je
dec
adc
cmp
xchg
xor
sbb
stos
aad
ss
rorl
add
cld
icebp
pop
daa
popa
fs
or
mov
aaa
out
and
mov
ds
push
stos
xchg
xchg
jns
mov
push
mov
mov
out
inc
inc
cs
movsb
xor
xor
inc
out
dec
ds
fsubrs
push
push
mov
into
iret
sbb
leave
stos
pop
cmp
pop
lea
sbb
fwait
in
and
mov
filds
iret
mov
int
pop
out
adc
xor
dec
stc
in
jb
fsubrs
pop
push
add
push
jae
and
mov
imul
leave
aad
mov
xchg
push
push
inc
adc
push
cltd
cwtl
mov
and
aaa
repnz
inc
aaa
scas
fists
and
jle
push
fistpl
push
out
cwtl
mov
test
idiv
pusha
rorl
mov
imul
jg
or
mov
pop
sbb
out
popa
clc
and
add
sub
mov
test
test
lahf
aas
sub
jge
in
push
adc
or
mov
or
jecxz
aad
dec
inc
sub
mov
jecxz
and
and
jp
xor
mov
iret
iret
xchg
sub
xchg
pop
adc
aam
clc
lcall
int
push
test
movsb
mov
lret
outsb
xor
popf
dec
and
aaa
xor
loope
pop
aad
or
or
or
test
mov
mov
arpl
pop
mov
mov
cmp
aas
add
mov
enter
lret
hlt
js
push
xchg
add
jns
int3
or
call
fistps
push
cmp
push
sbb
mov
test
cmpsb
out
aad
xchg
xchg
mov
jae
dec
insl
sbb
jbe
lahf
sbb
aaa
fmull
sub
add
sub
mov
stos
ja
enter
sti
pop
ss
outsb
outsl
xchg
lods
je
mov
jmp
cmpl
pushf
aas
mov
sar
add
cs
in
daa
dec
not
pop
inc
dec
jge
pop
cmp
out
and
pop
or
jp
in
outsl
test
popf
test
rcrl
fnstsw
pop
cwtl
xor
shl
sbb
push
arpl
lock
mov
jp
rcll
popl
mov
jecxz
in
xchg
sbb
mov
push
pushf
leave
inc
pop
int3
fdivrs
cld
cmp
pop
sub
mov
fcos
xchg
inc
xor
fdivp
in
outsl
sbbl
cmp
fcmovnb
push
aam
mov
por
push
daa
icebp
push
mov
lret
mov
lret
ret
xchg
icebp
movsl
add
xchg
outsl
shll
xchg
addb
or
cmpb
gs
push
jnp
pop
xor
in
sbb
dec
aaa
or
outsl
data16
sarb
stos
pop
and
leave
jmp
das
xor
pop
pop
stos
dec
mov
mov
ljmp
pop
push
decb
mov
xchg
cmpsb
pop
pop
fldl
or
jbe
and
xlat
popa
xor
and
lahf
jnp
cld
out
mov
push
hlt
popf
push
cmc
add
add
out
mov
push
pushf
dec
das
mov
pop
add
icebp
out
repnz
fistl
andl
cmp
out
and
mov
ljmp
negl
push
daa
pop
sbb
lds
or
and
andb
add
xor
je
arpl
inc
add
sti
test
sbb
aaa
push
mov
ret
adc
loop
rorl
pop
test
add
and
sbb
mov
repnz
aad
fisttpll
adc
adc
add
sbb
cwtl
sbb
pusha
add
dec
jge
lret
std
mov
test
push
inc
inc
sbb
dec
lret
pop
stos
test
cmpsb
add
xlat
shrl
int
out
sahf
andl
and
test
lea
xchg
seto
sub
in
aam
pop
push
push
fcoml
push
mov
adc
adc
rclb
loope
sbb
jne
lds
jl
xchg
xor
mov
sahf
push
sbb
push
imul
mov
loope
loope
cmc
setbe
jmp
cmp
dec
pop
cmp
das
adc
movsl
pop
lds
sbb
push
in
inc
aas
outsl
xchg
xor
dec
jle
mov
add
arpl
or
imul
rcll
repnz
sbb
and
cli
pop
sub
mov
mov
call
sbbb
int3
nop
sbb
clc
sar
adc
dec
sbb
xchg
nop
out
xor
stos
mov
jge
or
cmp
and
fildll
aaa
inc
and
dec
mov
or
cmpsl
inc
mov
pop
and
dec
xor
mov
adc
cmc
in
imul
jbe
cmpsl
or
push
mov
jecxz
hlt
adc
xor
mov
jge
cwtl
cmpsl
test
sub
testb
push
mov
jl
call
sahf
mov
sub
inc
push
enter
adc
fistpll
pop
or
jnp
dec
jl
jl
lds
cmp
add
dec
js
dec
mov
mov
das
lret
xchg
or
or
out
mov
inc
and
movsl
mov
jle
push
adc
mov
cmpsb
push
adc
pop
pop
or
cmpsb
lods
inc
and
andl
pop
xchg
jo
mov
and
loope
xorl
mov
pop
cltd
outsl
inc
push
mov
jmp
aas
int
int
scas
adc
and
xchg
dec
pop
mov
xor
in
jae
cmp
pop
xchg
mov
fisubrl
push
int3
stos
push
lods
lcall
cmpl
scas
inc
pop
pushf
xor
push
jns
or
push
out
repnz
sbb
push
sub
aam
mov
sub
inc
sub
enter
or
xchg
xlat
in
push
std
push
insl
xchg
in
xchg
pop
adc
xlat
push
lret
test
int3
or
mov
lea
pop
xchg
pop
mov
fs
cmp
jecxz
push
sub
gs
mov
fcompl
aad
add
clc
push
cmpsb
addb
mov
cld
movsb
movsl
nop
scas
xchg
stc
xchg
and
sti
bound
scas
insb
inc
push
arpl
std
xchg
lret
jae
es
repz
sbb
sbb
in
incl
mov
mov
in
flds
sub
movsb
xchg
xor
jmp
sbb
pop
repnz
js
cmp
or
dec
xchg
jo
pop
rcrl
mov
jb
lock
sbb
cmpsl
push
in
insb
or
push
ss
push
push
sar
stos
fidivrl
xchg
dec
and
addr16
in
add
mov
mov
insb
sbb
int3
fldt
cmpsl
adcl
lret
ss
fidivs
xchg
clc
mov
or
pusha
test
in
jmp
subb
fsubl
jnp
adc
rcrl
jmp
fcoml
lock
xchg
and
sub
divl
cmp
cwtl
cmp
push
mov
mov
dec
loope
jg
xchg
pop
roll
cmp
add
mov
rorl
push
mov
sbb
aad
aaa
repnz
adc
sub
dec
pop
test
hlt
add
and
cmpb
mov
jge
sub
add
lahf
push
xchg
jle
mov
pop
mov
ja
iret
sub
xor
mov
dec
sbb
ds
adc
mov
mov
dec
pop
sub
fcomps
enter
jmp
test
mov
xchg
cwtl
cld
in
push
push
outsl
jmp
cmp
jbe
fwait
mov
jae
arpl
in
faddl
aam
push
mov
jb
ljmp
lods
shrl
xchg
mov
jb
bnd
lret
push
enter
pop
mov
dec
xlat
out
sbb
jle
push
in
pop
aaa
lahf
orl
sarl
xchg
mov
xor
imul
mov
sub
loope
mov
sub
xor
and
xchg
nop
or
cmp
adc
in
call
scas
cs
lods
in
fiaddl
loopne
idivl
inc
adc
xchg
add
mov
hlt
into
scas
inc
inc
sti
std
jae
aam
xchg
call
inc
test
push
mov
or
add
orb
fidivrl
fcom
xchg
pop
sub
jle
xor
adc
leave
and
ljmp
adc
mov
ret
rclb
or
jne
push
sbb
icebp
mov
cmc
xchg
push
mov
jns
int
ss
inc
mov
jl
in
cmp
in
push
dec
mov
imul
jnp
int3
out
push
adc
jge
orb
jg
fisubl
loop
cltd
mov
xchg
push
sub
mov
cmp
cmpb
dec
sahf
cmp
cwtl
and
out
xchg
aad
xchg
sub
cmp
pop
mov
push
icebp
js
out
cwtl
arpl
adc
loope
dec
dec
push
xchg
xor
stos
out
pop
out
decl
add
sub
push
neg
or
xchg
cld
lock
cmp
pop
or
adc
mov
add
inc
adc
insb
xor
or
lahf
addr16
xor
and
shlb
fwait
es
cmpsb
ret
shl
ja
into
ret
inc
hlt
ljmp
mov
in
add
nop
movsb
ja
push
push
xchg
xchg
leave
scas
fldcw
jle
nop
mov
bound
not
xchg
xor
adc
xchg
in
clc
cmp
jo
and
fstp
sbb
fcmovnu
jo
lock
mov
mov
push
xchg
sbb
loope
cmp
loopne
or
lock
and
mov
mov
xchg
mov
and
subb
add
ljmp
popa
movl
add
xlat
adc
dec
ja
imull
lods
xor
dec
adc
jb
out
sbb
lret
pop
imul
or
dec
stos
sub
or
xchg
icebp
repz
into
mov
stc
adc
inc
xchg
out
mov
mov
or
cmc
pop
std
cmpsl
cmp
fiaddl
push
xchg
insb
fdiv
jmp
in
inc
jecxz
ss
aas
pop
dec
push
push
cmpsl
bound
cmp
push
cwtl
mov
sbb
dec
ja
divl
imul
xchg
adc
std
xor
dec
ret
andl
aam
test
sbb
das
ret
dec
mov
sahf
inc
push
cmp
add
mov
pop
lods
dec
pop
fucomi
sbbb
enter
cmc
mov
subb
lea
icebp
mov
mov
sub
icebp
rcl
cmpsl
mov
xchg
repnz
lds
sbb
xchg
icebp
add
xchg
xchg
add
popa
sti
xor
mov
in
xchg
out
xchg
cmp
sbb
or
or
fsts
test
test
ret
outsb
mov
pop
lret
jp
lods
mov
sbb
inc
pusha
add
mov
cmc
fistpll
mov
dec
pop
inc
mov
int3
iret
mov
mov
xchg
pop
mov
lds
mov
inc
mull
ljmp
lcall
repnz
fimuls
push
inc
sbb
jle
mov
shrb
pop
es
adcb
jge
jp
sub
aam
nop
jg
fldl
and
cmp
adc
sbb
and
sbb
sub
hlt
int3
inc
jmp
daa
clc
pop
jb
sbb
or
pop
jmp
push
mov
lret
adc
cmp
hlt
mov
sub
test
jnp
dec
jnp
fdivrl
add
aad
xor
es
mov
test
int
arpl
repz
mov
xor
imul
roll
jns
stc
or
inc
xchg
scas
icebp
xchg
and
std
adc
or
in
mov
ret
insb
pop
sarb
or
pop
push
mov
fmul
dec
sub
mov
sahf
adcb
pushf
insb
arpl
xchg
cli
jg
inc
lds
inc
cltd
lret
mov
jno
data16
sarl
iret
jge
stc
ljmp
std
int3
push
sub
je
lret
leave
pop
and
clc
aad
cwtl
fs
flds
imul
push
std
adc
mov
xlat
ja
mov
push
cltd
mov
adcb
jnp
es
inc
push
stos
pop
pop
and
adc
dec
ret
inc
jo
hlt
into
repnz
mov
aas
jb
data16
xor
pop
cld
pop
pop
pushf
loop
nop
xchg
shll
or
mov
push
xchg
xor
fimuls
mov
dec
jns
aam
insb
cmpsl
imul
jnp
cli
pop
cli
orb
js
lock
mov
push
add
stos
into
leave
sub
xor
fnstenv
iret
frstor
mov
add
or
inc
outsl
mov
ljmp
xor
fisubs
popf
mov
sar
push
mov
fdivl
xor
mov
dec
cmp
gs
mov
jae
sbb
push
inc
mov
in
out
and
pop
mov
sahf
xchg
xchg
inc
jmp
jge
or
xor
jle
mov
pop
cmp
lahf
lds
les
adc
push
pop
jae
sbb
outsb
pop
mov
xor
int
nop
mov
gs
xchg
aas
pop
cs
icebp
cmp
aam
sub
pop
loopne
pop
push
std
clc
sbb
fstpl
mov
mov
popf
mov
insl
sbb
xor
cltd
inc
addb
mov
xchg
jne
inc
movsl
sti
fldenv
clts
insl
into
push
pop
cmp
push
jp
xor
mov
inc
sbb
fstpt
mov
sti
bound
loopne
mov
xor
sub
mov
popf
nop
shrb
shrl
cmp
pop
pop
mov
sbb
out
push
mov
hlt
repnz
scas
push
lret
je
mov
stos
aam
add
out
fchs
cltd
mov
jb
adc
ret
daa
arpl
adc
mov
mov
mov
lret
mov
out
sbb
push
in
pop
xchg
push
cmp
pop
mov
sub
and
cmc
bound
pop
cmp
lcall
mov
lock
xchg
mov
xorb
punpcklwd
sub
xchg
pop
out
push
mov
pop
incb
shlb
fildl
cmp
mov
pop
add
cmp
push
xchg
and
aas
outsl
mov
ljmp
cld
in
inc
out
cmp
jge
mov
or
xor
stos
fisubs
pop
sub
iret
faddl
sub
xchg
lcall
push
aaa
pop
sub
in
add
xor
iret
ja
fisttps
cli
push
mov
sub
cmpsl
jl
orb
iret
push
push
arpl
jnp
sahf
dec
test
push
mov
icebp
scas
or
jmp
fsubrl
cmp
cmp
xchg
inc
imul
inc
sub
jb
lock
xor
pop
mov
cmp
sar
adc
dec
bound
xchg
loopne
mov
mov
pop
nop
mov
daa
ret
push
test
mov
mov
jl
inc
xchg
test
inc
and
fstpt
fs
leave
int
in
clc
mov
xor
bound
add
push
mov
or
jae
push
pop
fnstcw
iret
cwtl
jge
xchg
or
movsb
lahf
shr
fwait
call
mov
addr16
pop
scas
fwait
in
cmpsb
push
clc
push
jns
push
int3
push
imul
add
jno
movsb
not
in
dec
imull
jno
das
cmp
jg
xor
mov
lret
jge
aad
je
sub
ljmp
push
mov
scas
pusha
cmp
aam
sub
pop
aaa
cmp
test
jno
pop
push
push
test
mov
dec
xorl
stc
xchg
inc
sti
jmp
inc
xorb
cmp
cmpsb
in
mov
xlat
out
inc
mov
adcl
jne
test
xor
mov
inc
std
cmc
dec
in
mov
add
mov
and
es
mov
mov
inc
push
imul
xor
dec
inc
xor
outsl
jp
mov
adc
pop
lahf
movsl
xchg
enter
bound
jmp
mov
xor
data16
stc
xchg
jo
pop
sub
xlat
stc
sub
push
iret
leave
push
ja
lock
dec
test
pop
adc
cmp
inc
mov
mov
xchg
dec
stos
push
jns,pt
inc
sbb
jge
in
xor
mov
lret
mov
sbb
leave
rcll
cs
add
jno
or
adc
adc
int
pop
xlat
mov
pop
loope
inc
push
inc
inc
adc
jnp
inc
add
loopne
dec
movsl
adc
cmp
jae
in
or
push
icebp
mov
data16
jle
jge
fldl
mov
cmp
inc
nop
popf
dec
sbb
mov
mov
sbb
ret
stc
lods
or
pop
mov
jne
je
xor
lcall
sub
imul
cmpsl
dec
shl
ljmp
stc
insl
mov
inc
orl
sarl
add
fmul
push
jns
testl
or
stos
lds
inc
jmp
jg
cmp
xor
jbe
add
xor
aas
jl
sub
dec
insb
cwtl
loopne
xchg
xorb
jo
sub
xorb
push
inc
clc
aam
out
sbb
inc
cmp
fdivrs
stos
jmp
test
loopne
cmp
cwtl
xor
cmp
aas
mov
cmp
test
hlt
js
mov
xor
popf
mov
daa
popf
cmc
aas
push
leave
cmp
inc
jmp
jb
or
inc
lods
into
test
push
dec
jne
mov
into
rclb
pop
add
dec
mov
rcr
scas
jl
jg
push
jecxz
dec
pushf
mov
adc
cmp
adc
push
into
cli
stos
mov
pop
mov
leave
jmp
and
js
jmp
js
lock
mov
inc
clc
fnop
add
pusha
mov
jne
test
xor
dec
rorb
inc
adc
ja
push
lea
mov
dec
pushf
es
cmpsb
cmp
js
cmp
lret
add
shr
pushf
jo
cmp
adc
sbb
pop
movl
outsb
dec
imulb
sbb
lods
shrl
and
mov
movsb
pop
sub
mov
inc
ds
fsub
jns
sbb
xchg
clc
push
pop
adc
sub
inc
jg
push
adc
mov
rcrb
mov
add
in
xor
push
int3
sub
movsl
mov
xchg
roll
shrl
xor
clc
jne
ret
daa
mov
pop
xor
lret
sbb
imul
mov
pop
jecxz
fisubrs
mov
es
lods
mov
mov
test
outsl
mov
inc
scas
shll
stos
jp
pop
cmc
lock
fcomps
lock
pop
rcrl
inc
adc
subl
in
xchg
bnd
or
xor
xchg
daa
and
lcall
dec
xchg
pop
add
inc
mov
int3
sub
sbb
das
cli
jbe
jecxz
shll
push
loope
and
mov
js
cmp
add
xor
ja
aas
loop
and
push
cmp
inc
loop
and
mov
push
xchg
adc
inc
mov
lods
int3
jg
push
xchg
dec
push
mov
xor
jbe
imul
sbb
fstps
mov
pusha
ljmp
adc
push
fnstcw
cld
sub
das
outsl
pop
push
xchg
out
mov
ficoml
mov
int3
sbb
jle
in
je
cmp
subl
js
in
push
lret
lret
jmp
rclb
repz
pop
fldl
iret
mov
mul
js
pop
pushl
test
lcall
sbb
push
pushf
in
cmpsb
loop
call
insb
jne
popa
daa
mov
mov
outsl
sbb
and
pop
lods
lock
jns
inc
cltd
adc
sar
out
in
jmp
inc
sub
mov
mov
call
jg
xor
lcall
aad
xor
pop
fwait
jae
cli
cmp
sti
xchg
pop
mov
sarl
jg
fisttps
pop
daa
mov
lock
lahf
sbb
int
insb
loopne
sti
pop
dec
cmc
aad
mov
mov
call
xchg
loope
idivb
aas
sbb
pop
cmp
imul
pop
mov
lock
add
cmp
fisttpl
push
sarb
dec
ss
sub
rcl
jecxz
stos
sbb
je
das
xchg
imul
sub
iret
add
cli
mov
mov
jg
imul
repnz
test
pop
inc
cld
add
out
nop
inc
push
and
lret
dec
mov
xlat
std
dec
xchg
pusha
icebp
lret
out
enter
xor
cmc
pop
xor
in
lret
sub
in
sub
insl
mov
xchg
xor
jmp
jb
mov
dec
std
sti
inc
mov
sub
pop
popa
xchg
add
int
mov
and
js
jns
push
adc
shr
and
insb
mov
mov
sub
and
jg
add
mov
mov
int3
cs
fdivrp
pop
cmp
jb
jle
lock
dec
int
xorps
adc
inc
fs
js
in
dec
pop
bound
clc
push
scas
iret
jne
scas
xchg
sub
js
test
jns
fmull
or
adc
mov
insb
and
and
in
int
in
insb
dec
and
mov
pop
jge
out
mov
jle
jne
sub
rep
out
xchg
push
mov
out
mov
shrb
mov
add
hlt
xchg
insb
lret
enter
jo
fucomi
xchg
je
cld
cmp
push
adc
call
sbb
pop
sub
addr16
push
push
orb
frstor
fld
jg
pop
out
mov
xchg
in
loopne
or
stc
adc
jnp
loopne
pop
mov
push
int
mov
sbb
jbe
adc
push
inc
push
sbb
ucomisd
push
xchg
ljmp
mov
cli
mov
push
push
lods
cmp
adc
out
in
fisubrl
data16
mov
adc
sub
loopne
insl
fdivl
cmpsl
aad
pop
cwtl
int
adc
xor
jmp
cmpsl
dec
lea
jno
lods
dec
sbb
sub
hlt
iret
cmc
fcomp
idivb
loop
pop
clc
pop
mov
xchg
push
mov
in
cmp
inc
in
sub
lds
aam
ret
je
mov
lods
xchg
out
push
pop
sarb
in
ss
dec
xchg
mov
cmp
pusha
mov
pop
inc
or
pop
jnp
insl
adc
xor
shlb
outsl
aaa
or
fisubl
lods
popf
push
pop
xchg
fsubr
loop
fldcw
dec
pop
mov
adc
icebp
lret
ret
pop
mov
push
and
xor
sbb
daa
and
dec
in
dec
xor
int
imull
sub
stc
fmul
adc
mov
fiaddl
pushf
pop
push
pop
jl
les
pop
cltd
add
mov
pop
and
incb
sub
push
sbb
xlat
and
enter
out
add
mov
xor
out
in
dec
mov
repz
loope
cli
sbb
and
inc
sub
jns
push
mov
je
testl
data16
iret
or
xor
js
dec
xor
notl
icebp
lds
sub
test
addr16
in
movsl
aad
push
sbb
insl
dec
xchg
jbe
data16
shr
xchg
inc
mov
pop
sbb
xchg
aaa
xlat
mov
ret
add
pop
mov
aam
test
popa
imul
pop
mov
lock
mov
je
cwtl
cmp
adc
pop
enter
je
lahf
cld
cmp
mov
fdivrs
and
mov
in
pop
jbe
sub
jnp
adc
mov
sub
cmpsl
pop
pushf
add
adc
cltd
xchg
pop
inc
xchg
xchg
in
jle
inc
add
lock
cmp
imul
sub
fwait
inc
adc
lea
and
iret
dec
stc
mov
inc
sbb
xchg
pop
mov
in
mov
lahf
jo
jae
mov
push
cwtl
pop
xor
jmp
aam
adc
xlat
les
mov
xchg
jns
call
aam
jns
jmp
sbb
pushf
inc
xchg
xchg
mov
jb
adc
dec
pushf
fdivs
aad
xchg
sbb
mov
mov
jp
lods
das
pop
adc
sbb
sub
sub
iret
xor
into
inc
popa
pop
pop
jbe
or
sbb
jg
jnp
dec
inc
xor
fildll
enter
xor
or
neg
outsb
movaps
cmpsl
rorl
inc
lds
push
arpl
mov
add
push
push
and
cltd
lahf
jno
xchg
jp
sbb
stos
sbbb
or
cmp
cmp
mov
add
mov
in
push
pop
and
ficompl
nop
mov
cld
xchg
mov
xlat
cmpsl
jle
sub
jecxz
mov
leave
std
popaw
insb
fisttpl
dec
xor
xor
jmp
xor
dec
rcll
and
mov
repz
lahf
ljmp
ret
cld
subl
mov
xchg
push
adc
cmp
movsl
decb
pop
push
iret
arpl
lods
mov
in
mov
mov
addr16
imul
hlt
lret
sbb
mov
adc
mov
fdivl
fadds
loope
push
sbb
cmp
int3
inc
lods
push
sub
adc
jmp
lods
pushf
jo
in
or
cli
and
push
add
adc
xchg
and
add
les
loope
mov
rolb
icebp
loopne
imul
es
and
lods
inc
enter
xor
or
cmpsb
loope
daa
dec
outsb
arpl
and
xor
in
out
pop
xlat
dec
rolb
emms
call
or
std
xlat
fwait
in
and
add
xor
gs
lock
test
dec
sub
xchg
xor
lahf
lahf
scas
inc
movsl
sbb
sbb
xchg
cmp
jle
das
jb
push
enter
jp
xchg
and
lcall
push
adc
daa
dec
mov
lds
aaa
ud0
mov
scas
lret
jp
repz
cs
testl
pop
cmp
ret
mov
xor
push
sbb
push
daa
sbb
test
iret
xchg
inc
jg
mov
lcall
mov
sub
ljmp
sub
xchg
dec
ret
fnsave
push
sub
sbbl
insl
sbb
sbb
decb
lahf
cli
dec
scas
and
popf
mov
lcall
dec
jecxz
popa
and
loope
fcoml
leave
mov
fs
mov
cli
negl
outsl
fidivrl
fnstenv
jae
loop
pop
add
jecxz
test
les
sbb
std
pop
lea
dec
push
fwait
adc
orb
sub
rol
jg
stos
xor
mov
sbb
xchg
sub
fisubrs
movsl
inc
push
subl
shrl
rorb
or
mov
mov
movsl
cmpb
fbstp
add
jo
call
mov
scas
jmp
push
sub
lret
mov
arpl
sbbb
pop
fwait
dec
push
or
push
adc
in
in
sub
in
sub
jne
sbb
sub
loop
sahf
or
xchg
push
mov
sbb
sbb
nop
mov
push
jecxz
push
xor
jnp
xchg
pusha
cmpsl
imul
push
and
mov
cwtl
dec
out
ret
and
inc
cmpsb
int3
cmp
pushf
cmc
mov
rcrl
or
inc
std
dec
jl
pop
dec
insl
out
test
push
in
adc
xchg
cmc
pop
in
mov
sub
add
pop
mov
add
jno
cmp
mov
rcr
cmp
adc
repnz
fs
ret
dec
outsl
push
mov
mov
rcr
out
roll
adc
das
lds
js
sub
cwtl
xchg
ds
in
int
dec
leave
xor
rolb
jmp
fsts
pop
pop
or
sub
imul
and
add
std
adc
and
sub
xor
add
mov
jbe
push
push
movsl
mov
stos
dec
lds
sub
xchg
fimuls
insl
inc
mov
gs
cwtl
inc
cmp
sub
insl
or
pushf
pop
fcoml
les
add
add
pop
and
and
nop
loop
rcll
xchg
pop
loope
add
dec
iret
icebp
dec
xor
push
lock
fdivl
push
popf
adc
xor
popa
dec
jns
mov
ror
push
test
aad
jl
fistl
jns
ret
movl
dec
iret
outsl
roll
test
lock
cld
jge
cmp
lea
aad
adcl
inc
lods
ret
ret
jmp
cmp
push
negb
jl
xchg
and
fsubl
fimuls
out
push
dec
imul
das
sub
addr16
ret
fwait
ret
mov
push
or
xor
jnp
sbb
cld
sbb
out
jmp
es
sarb
push
imul
data16
jecxz
les
ja
mov
fimuls
cli
ret
les
lods
lods
and
sub
mov
mov
fisubs
movsl
add
out
jb
adc
jg
popf
add
add
jne
popf
outsb
jmp
jno
dec
sub
mov
add
jne
test
push
sub
testl
xlat
add
fmull
stos
test
mov
mov
xor
fisubl
divb
xchg
mov
ret
iret
xorl
jmp
aam
call
je
rorb
sbb
mov
out
cmp
nop
mov
sub
sti
sub
xchg
mov
adc
inc
add
cltd
jecxz
and
ror
inc
xchg
std
mov
jl
fdiv
cwtl
ja
inc
add
sbb
pusha
cmp
out
adc
sbb
sub
sbb
sbb
inc
inc
std
mov
out
rolb
aas
mov
mov
sbb
dec
iret
sub
fnstsw
adc
stc
int
repz
mov
notb
inc
xchg
xor
test
cmpsb
inc
lahf
maxps
test
popa
inc
xchg
or
stc
jmp
push
enter
jns
daa
dec
mov
or
hlt
or
or
jmp
test
adc
hlt
test
jle
cmp
fcmovnbe
inc
stos
lds
cmc
daa
nop
ds
and
mov
mov
jmp
jns
mov
mov
adc
or
call
adc
push
loop
mov
aad
daa
cltd
sub
jae
xchg
push
add
testb
negl
mov
or
cmpsb
mov
js
fs
rcr
cmpsb
lahf
imul
pop
loopne
test
sbb
adc
arpl
popf
cmp
xor
leave
mov
ror
sbb
ljmp
test
jl
aam
xchg
xchg
jae
push
or
pop
sbb
loopne
subb
push
and
pop
paddusw
inc
fidivl
orb
aad
mov
push
cmp
mov
pop
hlt
or
or
sahf
out
mov
out
and
inc
lods
mov
add
mov
or
fmul
mov
clc
jmp
in
pop
imul
jnp
adc
incb
out
ret
xchg
rclb
fdivrp
adc
inc
pop
lock
add
xchg
enter
and
adc
and
pop
int3
int3
sub
sub
cmp
jmp
inc
fidivl
xor
push
xchg
adc
xchg
lock
xchg
out
cmpsl
push
adcb
jns
sbb
dec
mov
and
leave
stos
mov
push
out
mov
lea
xlat
xchg
jl
sbb
pushf
repnz
loope
js
loop
sub
fabs
lcall
dec
pushl
xor
or
call
cmp
xor
enter
decl
lret
addl
jno
mov
push
aas
int
into
jmp
cmpsb
ret
xlat
inc
or
shl
mov
xchg
addr16
jl
inc
rorb
sti
or
lret
loope
xchg
hlt
loop
bswap
inc
in
adc
movsl
mov
cmpsl
fisttps
faddp
outsl
sbb
push
jg
xchg
adc
add
mov
shrl
sahf
in
jbe
xor
enter
xchg
adc
adc
hlt
xor
ficomps
int
rorb
fnstenv
hlt
repz
mov
push
popf
nop
cli
shr
push
imul
stos
inc
sub
pop
popa
addr16
aad
jno
pop
mov
jno
push
jecxz
add
stos
cs
pop
pop
lret
pop
xchg
in
push
pop
sub
or
leave
nop
cmp
pop
lret
ret
cmc
test
ret
lea
cmp
mov
mov
movl
int3
dec
xchg
sbb
jno
mov
loope
sub
inc
jae
adc
out
test
mov
jl
insb
jecxz
adc
sub
sub
or
int3
cltd
sbb
mov
and
or
mov
jnp
fsubrs
arpl
scas
fcoms
imul
cmp
repnz
mov
push
adc
pop
ss
outsb
int
rcrl
lds
mov
js
pop
or
sahf
mov
xchg
lods
inc
push
dec
rcll
xchg
addr16
mov
sbb
movsl
cmp
imul
jl
gs
xor
pop
or
and
sbb
xchg
mov
dec
pop
int3
dec
or
test
out
fadds
lret
fcoms
or
rcll
or
xchg
adc
xchg
test
shrl
pop
inc
or
jp
add
jae
add
jle
jl
xchg
mov
bound
sbbb
or
pop
insb
fwait
cmpsl
repz
in
push
cmc
data16
cmpsb
fistpll
arpl
aad
pop
cmp
aaa
lods
xchg
movsl
jno
int3
and
inc
pusha
add
fdivrs
shl
cwtl
or
push
add
or
cmp
mov
mov
inc
push
add
orl
int3
negb
int
jbe
pop
jb
les
rorl
lds
pop
sbbb
and
xchg
xchg
adc
testl
mov
out
out
or
mov
je
adc
movsl
cmpl
push
stc
push
sbbb
rcr
or
popf
cmc
out
imulb
lret
icebp
movsb
pop
repz
clc
and
ljmp
xchg
mov
in
shlb
xor
aad
pop
gs
jge
adc
xchg
mov
andb
aaa
lock
scas
fs
rorb
add
insl
and
cmc
push
andb
push
cli
movsb
or
adc
out
lahf
jb
outsb
out
fdiv
pop
cmpsb
push
cmp
fiaddl
roll
insl
dec
inc
dec
sub
pop
jle
mov
shrl
sahf
or
loopne
fnstenv
test
ret
sbb
add
rcrb
fildl
pop
enter
in
jecxz
pop
out
add
addl
rclb
fcompl
arpl
pop
add
inc
insb
mov
popf
in
push
scas
sarb
pop
push
xchg
mov
adc
dec
fwait
pop
xor
dec
mul
rcl
fsubl
jae
jae
push
and
push
arpl
pushf
mov
pop
inc
mov
fwait
adc
sarl
xor
jecxz
sahf
sahf
fsubp
dec
xchg
xor
in
inc
xor
fwait
div
inc
jbe
sub
xlat
jae
shll
jge
test
jbe
imul
cld
out
je
sbb
pop
add
gs
xor
cmp
test
clc
pop
dec
dec
xchg
sbb
sbb
xchg
mov
jns
aaa
cld
adc
test
cmp
inc
cmpsb
mov
cmp
inc
clc
cwtl
pop
xor
fnstsw
add
xor
mov
pushf
push
xchg
cmp
pop
ret
dec
loop
fs
imul
faddl
mov
popf
test
test
lahf
sub
neg
pop
mov
cs
and
xchg
out
aas
movsl
cmp
add
popa
fwait
adc
stos
pop
lret
fildl
mov
add
dec
mov
ljmp
jno
out
mov
mov
mov
add
mov
mov
mov
cli
xor
in
adc
fsub
xchg
sub
sbb
icebp
sbb
mov
mov
gs
cmpsb
add
jae
xchg
fs
adc
daa
ss
imul
fidivl
std
stos
mov
ja
and
inc
fidivl
fnstsw
cmc
data16
mov
or
adc
popa
xor
xlat
imul
fisttpll
or
push
add
add
imul
outsb
imul
sub
call
push
mov
inc
iret
pop
add
pop
sysenter
dec
cltd
aad
rcll
lock
dec
push
cmp
jp
or
idivb
dec
inc
mov
rcl
data16
or
sub
lock
inc
adc
cmp
inc
lret
mov
shlb
jnp
loopne
popf
xor
mov
std
sahf
roll
pop
lods
pop
shlb
xchg
xchg
cmp
xor
adc
xor
nop
and
insl
outsb
ljmp
outsb
mov
leave
jge
xor
dec
add
lcall
inc
mov
scas
jo
cmp
mov
mov
xchg
cmpb
add
movsl
mov
inc
lods
popf
xor
mov
shrb
imul
nop
inc
adc
inc
adc
std
sbb
test
or
add
cs
add
dec
incl
push
shrb
and
jp
mov
xchg
mov
stos
dec
scas
repz
imul
pop
out
js
xchg
dec
imul
xchg
std
xchg
jmp
jae
clc
jle
mov
cmpsb
jo
insb
dec
cld
and
cmp
fsubl
cltd
xchg
mov
cmpb
push
dec
cld
data16
push
mov
movsb
jmp
aad
pop
lods
pop
rcrb
cmpsb
cwtl
adcb
scas
xchg
std
cs
inc
mov
jle
or
mov
jbe
cmp
imul
jae
jns
mov
or
mov
insb
xchg
fwait
xor
lea
std
rcll
je
mov
add
mov
jg
in
or
sub
and
or
cltd
jl
xchg
xchg
loopne
out
mov
loopne
leave
mov
xor
jnp
push
pop
add
scas
into
inc
aad
ret
add
shlb
leave
mov
dec
es
jae
pop
loopne
arpl
sbb
loope
fidivrs
cmp
dec
repz
xchg
mov
popa
inc
add
jne
popf
sarl
pop
notb
pop
inc
mov
jle
pop
loope
adcb
ret
test
inc
mov
mov
mov
mov
push
lds
sub
mov
fldt
scas
pop
rcrl
cs
out
adcb
push
imul
fcmovnb
jecxz
call
mov
xchg
or
mov
rol
testl
and
mov
mov
repnz
cmp
or
jle
movsl
and
push
mov
aaa
or
or
cmc
sti
in
sbb
jne
or
jns
leave
or
setl
jbe
or
out
or
push
adc
imul
sbb
mov
mov
jg
loopne
sti
cmpsb
cli
mov
test
pop
mov
cmp
es
dec
xor
aam
in
in
adc
jns
mov
nop
scas
push
enter
xchg
lods
movsbl
mov
xchg
repnz
pop
push
pop
cmp
or
aas
ret
int
adc
dec
stos
sub
adc
std
sub
fldt
pop
aaa
hlt
sub
pop
mov
lods
jle
imul
movsb
aad
adc
ret
jnp
mov
lock
int
inc
add
je
pushf
in
inc
neg
push
std
mov
pop
ljmp
or
lcall
arpl
test
sub
jne
fwait
xchg
and
push
shll
sti
setne
mov
xorb
pop
fbld
or
cwtl
mov
push
add
in
adcl
mov
incl
sub
std
sub
je
mov
xchg
or
pop
ja
or
pop
sub
cmpsb
lcall
jg
push
push
int
cmpsl
js
push
fwait
and
pop
repnz
testb
or
cmc
jle
aad
movsl
cmpl
in
adc
xchg
call
inc
mov
mov
stos
scas
add
xchg
jb
xor
cmc
xchg
in
cmpsb
push
sub
enter
outsl
sbb
sbb
ljmp
js
fcmovne
out
sbb
arpl
xor
outsl
xchg
add
xchg
lret
add
jo,pn
jno
adc
add
in
xchg
loope
mov
cmpl
in
cmc
add
xchg
push
jnp
xor
jge
sti
lret
mov
aas
push
sbb
fcompl
mov
xchg
cwtl
cwtl
push
sbb
lahf
loop
fdivs
addl
imul
out
jge
js
hlt
mov
std
pop
jbe
out
hlt
and
and
xor
aad
add
aas
ret
scas
fdivs
in
adc
ret
testb
ljmp
jae
fmul
lods
adc
cmp
cmc
and
sahf
testb
mov
dec
rcpps
add
jae
jle
or
inc
mov
lds
adc
out
mov
inc
xchg
xlat
fistpl
jb
insb
pop
stos
cmpsl
dec
std
imul
ss
jmp
or
jl
lahf
jo
out
js
mov
cmpb
xchg
pop
cld
pop
jo
outsl
or
out
adc
test
push
lea
jae
push
sub
cwtl
cmp
aad
adc
jecxz
and
int3
loop
add
jbe
or
shl
aas
mov
out
pushf
aad
lret
cmc
cmp
xchg
xchg
movsb
push
push
mov
inc
arpl
dec
pop
leave
iret
mov
das
scas
repnz
inc
icebp
mov
jmp
outsb
cmp
out
jb
mov
mov
test
gs
xchg
sbb
inc
xchg
fs
int
lret
push
out
sbb
xchg
lods
pop
out
push
mov
fstpl
mov
and
jl
repnz
lret
cmpsl
mov
cli
stc
pop
pmaxsw
cmp
test
pop
push
sub
adc
rorb
movsl
daa
std
or
mov
lds
cmp
movb
jecxz
push
in
out
or
sub
into
stos
aad
sbb
pop
aaa
call
aas
nop
inc
mov
dec
pop
outsl
insb
jae
add
rorb
bnd
clc
cli
mov
fldenv
push
adc
jmp
lods
sbb
pop
adc
ret
cmp
push
inc
loop
cmc
pop
and
adc
ds
movb
ds
int
movsb
pop
mov
insb
xor
test
jge
sbb
push
cmp
cmp
jae
jb
daa
icebp
nop
outsb
dec
push
outsb
test
and
sub
mov
push
push
stc
mov
sbb
imull
roll
test
fwait
push
ret
das
sbb
mov
test
mov
mov
dec
pusha
sti
inc
push
push
push
data16
fists
push
aad
cmc
fwait
xchg
add
clc
add
imul
adc
imul
adc
hlt
cltd
mov
fwait
lret
shrl
mov
in
mov
mov
pop
xor
int
mov
fsubrl
imul
pop
pusha
les
push
dec
mov
xor
push
bound
jo
popa
shr
mov
jmp
xchg
leave
shlb
stc
test
sbb
inc
inc
inc
js
or
popa
test
out
pushf
adc
jp
outsl
add
adc
jbe
push
shlb
mov
mov
or
mov
adc
jge
pusha
lds
xchg
ror
and
insl
je
scas
int
adc
jmp
sbb
out
out
sub
jbe
pop
test
int3
rorl
hlt
aam
add
xchg
fadd
popf
pop
mov
iret
in
inc
sti
repz
fsubl
lahf
and
dec
sbb
cmp
mov
sub
pop
push
xchg
insb
inc
fnstsw
sarb
icebp
or
imul
fldt
call
jno
lods
sub
add
or
mov
cmp
pop
inc
mov
jo
out
lds
add
das
or
outsb
push
data16
sbb
push
xlat
xor
pusha
aam
test
test
mov
adc
jo
cmp
adc
xchg
fldl
push
dec
in
ss
es
add
enter
mov
leave
cmp
lret
dec
pushf
insl
movsb
into
out
into
addr16
inc
push
cltd
call
fidivrs
pop
jge
inc
sbb
in
sarb
push
fldt
adc
pop
mov
nop
outsb
lock
xchg
fadd
pusha
xlat
cmp
mov
in
sbbb
push
loop
sub
dec
sub
imul
popa
dec
roll
mov
cmp
push
shll
adc
mov
mov
orl
insl
sub
sub
jnp
cmpsb
sbb
sbb
push
pop
cmp
adc
enter
ljmp
or
cmp
xor
mov
adc
adc
int
lods
insb
imul
aad
xchg
orl
dec
inc
nop
dec
inc
and
jno
jno
and
lds
in
daa
scas
jp
test
dec
insb
xchg
sub
pop
fsts
mulb
jb
xchg
emms
fucomip
je
sub
into
popf
test
xchg
cmp
aaa
add
mov
sub
aad
repz
test
call
cmp
mov
pop
sub
outsb
bound
jbe
sub
out
shrd
iret
dec
shll
push
mov
out
aaa
shrl
mov
out
fidivrl
push
scas
sub
addb
add
cmp
jp
pop
adc
rcr
ljmp
add
push
jne
clc
mov
push
xor
cmpsb
or
cli
mov
inc
pop
jno
or
cmp
mov
sti
mov
aaa
bound
cmp
cmp
push
cmp
arpl
sub
or
rcl
and
shrb
xor
mov
sbb
inc
scas
movsl
sub
inc
mov
dec
adc
sahf
inc
push
sub
shrl
orl
cwtl
xchg
aaa
ljmp
sub
ds
lahf
aam
mov
jns
scas
incb
sahf
stc
adc
pop
or
mov
mov
mov
sub
shl
cmpsb
imul
test
aas
pop
mov
add
jmp
scas
aad
cs
outsb
call
bound
popf
es
add
sbb
mov
xor
xor
mov
das
rol
mov
and
mov
mov
pop
fsts
ret
in
mov
sub
push
mov
cltd
mov
call
std
cmc
cmc
imul
ss
push
dec
shrb
call
fucom
lock
mov
mov
sti
mov
inc
daa
lret
lahf
dec
rcrl
adc
cltd
nop
jle
mov
imul
cmp
ds
mov
bound
pop
hlt
movsb
cli
fildll
outsl
xor
mov
sbb
jnp
add
nop
mov
pop
adc
inc
sub
pop
out
cli
mov
dec
fnstcw
int3
aam
out
xchg
or
popf
cs
out
gs
test
imul
add
movsb
pop
pop
mov
dec
mov
daa
fdivp
sarl
lods
jo
pop
in
lcall
xchg
repnz
ret
cmp
mov
cmpsb
mov
jmp
pusha
pop
push
daa
push
adc
sbb
jne
jge
or
jns
jo
jne
cmc
lods
push
adc
xor
inc
sub
push
rorl
jno
lcall
add
jp
push
aas
in
das
enter
lods
clc
pop
xchg
outsl
sarl
adc
pop
xor
mov
sub
movl
cmp
rcll
insl
sti
arpl
mov
or
cmp
fldl
push
sbb
jmp
clc
movsl
sub
cli
adc
ljmp
out
add
add
mov
out
or
xor
mov
adc
ficoml
inc
sbb
dec
sti
shrb
iret
imull
sub
in
pop
test
inc
imul
mov
lahf
jno
dec
sbb
gs
sub
cmp
daa
mov
jg
push
iret
xchg
int
les
cmp
push
mull
sub
popa
outsl
leave
mov
jmp
icebp
and
out
leave
adc
out
jns
inc
sub
add
adc
out
adc
sub
mov
js
push
hlt
xchg
addb
scas
call
jb
mov
and
mov
lock
and
adc
push
je
pop
xchg
hlt
leave
cmp
ljmp
cmp
divl
push
mov
pusha
cwtl
mov
sub
pop
test
dec
jae
dec
shll
push
inc
into
push
fbstp
ljmp
inc
jmp
pop
jns
repz
fiadds
xchg
fstpt
and
jp
mov
je
pop
mov
lret
cwtl
xchg
pop
mov
xor
add
out
addl
fistps
sti
mov
aad
repnz
dec
or
dec
enter
cld
push
movsb
std
rcll
add
push
mov
push
int3
or
cltd
xchg
dec
and
icebp
cmpsb
daa
es
sbb
sbb
nop
pop
xchg
cwtl
jge
fs
mov
mov
push
out
and
lret
cmpsl
mov
sub
sub
outsl
sti
lahf
jb
repnz
xchg
mov
push
xor
dec
leave
push
mov
push
cltd
dec
aam
aaa
cwtl
out
push
or
imul
and
imul
adc
fisubrs
sbb
lea
sub
cli
pop
lds
mov
aad
cld
pusha
pop
and
lret
lret
cmp
pop
outsb
sbbl
rcll
inc
cld
icebp
pop
in
rcrb
cmpsl
icebp
fidivs
insl
push
cmpsb
insl
xchg
test
mov
pop
iret
push
push
mov
or
xlat
mov
pop
outsl
loop
outsb
stos
fs
mov
jmp
inc
push
mov
inc
mov
mov
icebp
jns
and
ret
cmp
xor
push
int
push
rcr
mov
push
sbb
pop
mov
mov
notl
ljmp
sbb
push
inc
daa
lods
xchg
inc
push
andl
popa
or
fisubl
adc
or
fdivl
cmp
pop
rorl
fidivl
cwtl
aaa
ss
sbb
xlat
push
icebp
jns
jl
adc
insl
aam
push
clc
stc
pusha
lahf
mov
sub
and
loopne
add
mov
test
mov
jle
cmpsl
rol
adc
je
inc
jne
test
les
pop
jecxz
mov
dec
jnp
je
adc
pusha
xor
mov
and
es
addr16
adc
lret
les
push
shrl
jg
pop
in
pop
pop
lds
push
and
sub
pusha
jbe
push
into
ja
jecxz
addb
iret
mov
xor
jp
daa
mov
call
fsubrl
out
or
mov
sti
dec
or
ljmp
pop
xchg
sahf
inc
cmp
pop
push
xor
das
mov
sbb
xchg
push
dec
lock
enter
shlb
mov
sbb
sbb
out
adc
mov
add
in
mov
pop
dec
jns
adc
inc
sti
pop
in
pushf
mov
xor
mov
and
out
sti
dec
decl
or
data16
mov
sub
icebp
in
repz
dec
shrb
or
sbb
fcompl
pop
nop
mov
testl
or
add
scas
scas
push
stos
sahf
sub
imul
aad
stos
xchg
adc
mov
pop
mov
notb
xchg
add
cld
roll
inc
dec
mov
cli
mov
push
mov
inc
jae
mov
repz
fcmovbe
lds
push
adc
or
cmp
jno
or
and
sub
mov
push
hlt
icebp
cltd
stc
insl
outsl
mov
es
scas
push
mov
sbb
xor
xchg
fisttpll
mov
push
clc
mov
divl
shlb
xchg
pop
lret
ror
mov
cmpsb
fs
pop
dec
in
xchg
pop
inc
mov
push
das
add
mov
mov
inc
data16
mov
pusha
ljmp
aam
orl
setl
mov
inc
push
jmp
adc
sbb
push
jb
ret
add
ss
imul
jae
hlt
jne
pop
fsubp
pusha
out
lods
pop
cwtl
push
inc
inc
pop
sub
mov
pop
fnstcw
and
int3
fnstsw
std
push
call
pusha
cmc
push
stos
inc
xchg
sahf
mov
fimuls
xlat
out
cmpsb
fiaddl
push
orb
sbb
cmp
ja
ficoms
add
orl
daa
add
jnp
cmpsb
and
es
dec
jge
out
xchg
insb
cmpsl
lcall
xchg
daa
scas
in
fstps
or
fisubl
stos
xchg
jg
mov
jl
enter
push
mov
bound
leave
repz
gs
je
push
pop
sahf
daa
fistpl
mov
popf
ror
in
add
cmp
sub
daa
mov
imul
popf
push
push
rorb
test
sub
jecxz
fdivl
jns
or
sbb
xchg
rolb
push
sub
xchg
int3
push
stc
pop
test
push
mov
out
xor
inc
aad
pop
or
movl
stos
mov
push
adc
push
loop
sbb
sahf
ret
aam
sarl
das
dec
imul
xor
inc
daa
mov
aas
shlb
faddp
shlb
pushf
inc
and
sbb
and
scas
mov
push
sub
lock
push
adc
lcall
in
movsb
div
pop
pop
fs
icebp
add
cmpl
xchg
sub
in
pop
dec
lret
ljmp
fs
bound
ja
rcr
pop
loope
fdivrs
or
cwtl
dec
mov
in
stos
jne
adc
orb
fcomip
and
ret
ljmp
adc
lock
addr16
movsb
fiaddl
sbb
dec
fsub
iret
adc
leave
icebp
sub
sub
outsl
out
aaa
inc
pop
push
aad
ret
icebp
mov
jo
inc
dec
jbe
hlt
sub
stos
shrb
out
mov
jbe
pop
xor
push
inc
sarb
adc
dec
push
push
push
aas
test
jg
icebp
pushf
movsb
xchg
or
push
fimuls
add
inc
adc
les
outsb
stos
repz
add
sub
sbbb
xchg
insl
popf
ret
movsb
mov
lods
les
in
bound
gs
lahf
sbb
lods
add
sti
dec
bound
inc
cmp
mov
xchg
cld
xchg
mov
pop
sub
and
cmpsb
inc
mov
adc
jo
jp
dec
mov
fcom
xlat
mov
in
cmpsl
inc
loop
icebp
test
shl
push
mov
sub
sbb
fwait
add
shrl
mov
repz
mov
imul
pop
lock
sub
pop
jne
xor
sbbl
loop
dec
mov
lods
icebp
shr
cmp
cmp
inc
iret
lret
cltd
push
inc
inc
mov
xorl
lret
ficomps
imul
cmp
pop
mov
addr16
sub
jb
push
icebp
stos
insb
push
insl
pushf
dec
sbbb
xor
or
mov
push
in
pop
xchg
lret
add
sub
mov
divb
mov
jl
fisttpl
xor
shlb
shrb
inc
out
int3
xlat
mov
in
daa
shll
stc
cmp
xchg
arpl
mov
lahf
adc
sbb
mov
pop
cmp
push
iret
ja
sub
inc
jge
add
add
sub
push
jl
in
pop
cwtl
lret
push
jno
add
inc
lock
in
inc
mov
das
sbb
in
adc
cld
lahf
cmp
mulb
adc
mov
and
test
repz
push
arpl
pop
jb
cli
fcompl
repnz
std
into
adc
lret
bound
lea
and
pop
pop
pop
insb
xchg
mov
shlb
adc
sub
inc
sti
fcmovne
dec
dec
orl
mov
fstl
mov
inc
call
push
hlt
fistpl
pop
jp
call
mov
push
lea
bound
scas
lds
bound
pop
pop
movsl
lock
test
test
iret
rep
inc
adc
xchg
push
in
mov
inc
jecxz
add
mov
pop
hlt
stc
outsl
ja
data16
out
shl
mov
mov
sbb
loopne
mov
pushf
inc
ret
subb
push
cmp
jl
xor
into
push
mov
sahf
inc
push
sbb
test
dec
push
and
mov
mov
sub
fidivs
push
sub
or
dec
aad
fstpt
xor
xor
cmc
or
or
push
fildll
lahf
cwtl
jge
leave
sub
or
scas
leave
pop
or
call
push
fwait
dec
xchg
nop
mov
cs
ss
add
repz
jb
add
rcrb
out
fidivrs
mov
jecxz
inc
daa
sub
add
fldt
arpl
xchg
push
clc
pop
shl
outsb
push
test
mov
jae
outsb
mov
sbb
mov
adc
cltd
push
sbb
lret
gs
xchg
add
cmp
out
jns
fdivrs
xor
fnstcw
stos
sti
out
add
push
push
or
pushf
mov
mov
inc
mov
mov
aas
jbe
inc
fidivl
or
xor
addr16
scas
fdivrl
stc
pop
sub
shr
or
cmp
or
mov
adc
jp
popf
dec
les
xchg
in
mov
stos
sbb
jle
adc
dec
dec
arpl
mov
insl
call
sbb
inc
pop
lea
mov
icebp
mov
add
mov
push
and
mov
call
lock
popf
stos
push
sub
cmp
jl
lret
fs
das
clc
test
inc
mov
ja
and
add
inc
fsubrp
pop
andb
or
aam
push
fdivrs
cmp
lods
ds
std
jae
sbb
sub
xchg
out
arpl
inc
imul
mov
mov
jg
fbstp
sahf
push
pop
dec
mov
call
xor
inc
push
movsl
push
fcmovnb
or
pop
inc
test
jb
ja
and
cmp
jmp
outsl
and
loopne
push
inc
js
mov
xor
gs
mov
gs
data16
xchg
por
jno,pt
sbb
xlat
or
jne
or
inc
ljmp
sahf
int3
ret
add
push
rcl
shll
aaa
in
mov
pop
outsb
sbb
inc
pop
xchg
inc
fyl2xp1
mov
out
xor
mov
jne
xchg
pusha
and
and
push
shll
inc
mov
push
fsubrl
pop
mov
mov
cmp
inc
hlt
decl
outsb
mov
fisubrs
cmpsl
inc
sub
jns
sbb
add
rorl
jo
cmpsl
sbb
mov
xor
ret
adc
cwtl
pop
arpl
jge
sbb
mov
std
cmp
into
push
cmp
andb
or
mov
xchg
call
addr16
out
dec
ds
inc
and
dec
mov
jecxz
cmp
int
push
vhsubps
aad
mov
mov
popf
sub
push
cmp
dec
inc
lcall
mov
jns
or
push
cmp
hlt
add
and
outsl
popa
jnp
cmp
jge
push
sbb
xchg
xor
push
push
mov
xchg
outsb
test
xchg
xchg
sbb
jbe
aaa
es
orb
lods
add
cmp
adc
cmovb
movsl
push
sub
stos
inc
aas
dec
rclb
leave
cmpsb
push
cmpsb
pop
sub
xchg
xchg
pop
iret
jge
subb
jns,pn
test
daa
jbe
inc
mov
imul
push
xor
out
lret
dec
mov
mov
cs
add
outsl
fldt
cld
imul
leave
mov
jmp
xor
popf
mov
cmpsl
xchg
test
mov
sbb
adc
jle
jo
pop
pop
test
xchg
xchg
scas
aaa
addl
hlt
jae
data16
sub
lods
dec
in
mov
outsb
adc
and
repz
rorl
imul
sub
hlt
jge
test
xchg
mov
sbb
adc
inc
aam
fmuls
nop
int3
pop
pop
jnp
lcall
mov
adc
outsl
int3
add
sahf
mov
mov
repnz
pop
xor
pop
movsb
mov
add
mov
jnp
inc
and
mov
sub
lea
in
inc
sahf
xor
mov
xor
popf
push
inc
mov
arpl
adc
loopne
jae
jge
xchg
add
push
push
repz
push
cmp
push
lods
mov
test
xlat
pop
add
inc
je
sbb
push
lods
aaa
stos
enter
repnz
fbstp
xor
inc
xor
mov
jne
and
cmpsl
and
inc
or
inc
mov
sbb
jecxz
fs
mov
pusha
xchg
push
jecxz
fwait
pop
and
shrb
jo
nop
call
push
aaa
xor
inc
xlat
sbb
sarb
or
pop
inc
aas
sti
sbb
jle
cli
mov
mov
lods
and
cmp
pop
jne
hlt
pop
jge
or
push
push
ret
or
ret
jmp
or
adc
mov
out
repz
daa
inc
sub
into
rol
xor
out
adc
mov
loopne
ss
rcl
fidivrs
imulb
xchg
insb
pop
cmp
mov
sbb
icebp
addr16
ljmp
enter
int
fs
xchg
cmpsb
cld
sbbl
and
mov
mov
jl
lcall
ror
cmp
fstl
mov
loop
leave
hlt
scas
jae
gs
sar
inc
aam
cmp
or
sbb
out
xchg
xchg
lahf
icebp
testl
add
adc
sti
les
cmp
loop
dec
pop
ljmp
dec
lret
stos
jnp
shrl
mov
add
lods
sbb
and
and
popa
mov
roll
push
cwtl
out
gs
ret
dec
add
frstor
mov
mov
sbb
mov
incb
adc
jae
pop
xchg
or
cmp
out
add
jmp
add
cmpl
mov
push
mov
std
xchg
dec
mov
xor
cltd
adc
add
mov
shlb
dec
cmp
fcmovne
fcoml
mov
inc
negl
call
ror
dec
push
xor
fbld
jno
int
enter
stos
cli
xchg
repnz
lret
sub
lret
inc
cs
jle
cmc
cmp
mov
ja
sbb
aad
adc
out
dec
push
mov
data16
push
orl
jbe
jns
flds
mov
iret
or
adc
push
lds
jnp
push
fwait
mov
dec
xchg
mov
and
out
movsl
xchg
xchg
imul
loop
inc
les
cs
jl
jbe
roll
adc
xchg
jmp
ljmp
outsb
aaa
jb
dec
fpatan
call
inc
adc
xchg
inc
mov
push
out
pop
xchg
negb
and
jbe
data16
push
and
cmp
mov
mov
mov
or
push
mov
movsl
std
pop
cmp
mov
scas
jp
mov
add
cmp
stc
fldt
in
mov
into
add
mov
inc
sub
mov
or
pusha
jno
add
mov
jnp
adc
std
bound
mov
jl
dec
addr16
fsubrl
mov
sbb
fwait
and
mov
xor
imul
and
fstl
ret
in
cmc
jmp
cltd
mov
mov
mull
inc
push
cmp
push
and
add
mov
aas
push
into
mov
or
adc
mov
addr16
adc
sub
xchg
sti
popf
aaa
cmp
mov
fmulp
gs
mov
int
cmc
cmc
lock
push
sbb
mov
sbb
pusha
stos
into
and
stc
dec
push
jmp
gs
sub
enter
sbb
push
cmc
clc
jns
xor
dec
jecxz
or
sub
and
cmpsb
cmp
dec
cmp
mov
add
mov
inc
es
push
mov
dec
inc
cmp
dec
cmp
and
cmpsl
and
xchg
jnp
fstps
add
sbb
sub
loopne
fnstcw
aas
mov
or
imul
add
in
lahf
mov
xor
jno
andb
mov
add
lret
add
sti
mov
iret
dec
test
call
pushf
enter
jb
loopne
pushf
push
repz
xchg
out
pop
jmp
xchg
clc
clc
outsl
orb
sub
sti
cmpsb
cmpsb
sti
add
das
dec
add
jae
test
cs
xor
rcrl
pop
cmp
adcl
fdivr
setns
repnz
mov
adc
out
loop
lods
fildll
jg
daa
xor
jg
psubd
lods
subl
sti
popa
sti
or
ss
dec
xchg
out
sub
mov
sub
test
out
or
mov
push
test
dec
daa
jle
pusha
jmp
pusha
lea
xor
leave
cmpsl
shr
xchg
or
pop
fcompl
xchg
aas
addr16
cmp
cmc
out
loopne
adc
xor
repz
shrl
jo
push
mov
sub
or
imul
mov
loop
gs
fdivs
nop
mov
jo
mov
shlb
out
add
sbb
test
push
sub
hlt
mov
jnp
push
mov
xchg
loop
pop
inc
je
lods
mov
dec
pop
xor
ss
dec
fisubrl
jo
dec
je
cmpsb
and
sub
pop
cmp
push
dec
lret
jne
mov
sub
adc
outsb
pop
xlat
sub
xchg
inc
fdivr
aas
test
push
sub
mov
stos
inc
cmp
daa
pop
mov
mov
sbbb
cmp
jno
xlat
std
adc
cmp
mov
jne
or
sbb
xor
sbb
jge
out
das
xchg
push
jae
cmp
ret
aas
loopne
shlb
sub
jp
fdivrp
repz
clc
mov
shll
and
sti
xor
sub
loope
cmp
jnp
ja
andl
fs
sub
mov
ljmp
lea
jne
cmp
push
jg
lods
and
jl
icebp
push
outsl
lahf
xchg
and
pop
cmp
shll
outsl
cwtl
js
dec
repnz
sbb
push
int
sbb
sbb
shr
daa
bswap
dec
fstpt
inc
lock
mov
in
sub
sub
lcall
sbb
and
sub
fucomi
mov
sbb
mov
and
cmp
sub
ret
jnp
adc
sbb
mov
popf
jp
js
jo
mov
xchg
dec
mov
repnz
das
inc
cmp
mov
cmpsb
xchg
icebp
pop
fucomi
cs
fldt
mov
js
rcrb
mov
outsl
ds
jg
dec
push
lret
xor
bound
mov
sub
call
mov
js
cmp
mov
cmpsl
mov
mov
pop
cwtl
dec
hlt
ffree
in
fwait
rcrb
mov
mov
pop
xchg
bnd
pop
xchg
or
cwtl
scas
xchg
loop
lods
fisubrs
push
cmpl
cltd
js
clc
cld
jo
loope
xchg
sub
repnz
cmpsl
push
fcoml
push
clc
inc
aam
inc
or
inc
sar
arpl
push
mov
outsb
jo
enter
lea
cwtl
and
out
and
aas
call
in
ret
fldcw
popf
and
nop
xlat
sub
loop
xchg
jmp
or
jge
pop
jns
lret
leave
and
cmp
add
ror
adc
sahf
mov
inc
push
out
shl
testb
xor
cmc
clc
adc
fs
push
lods
shlb
movb
rcrb
adc
xor
push
and
xor
subb
pop
fs
push
aas
xchg
push
call
negl
lret
aad
popa
popf
ror
cwtl
rcr
scas
or
jge
es
cmp
ljmp
stc
in
cmpb
xchg
jbe
cltd
popa
sbb
xchg
xchg
dec
lea
aam
push
call
stos
and
repnz
cwtl
filds
into
and
mov
je
movsb
jo
xor
popa
cli
and
mov
ja
adc
mov
and
mov
les
or
in
xchg
jp
cmpsb
int
push
cwtl
inc
das
jbe
ja
and
jne
jecxz
mov
sub
flds
js
mov
jns
clc
jmp
fistpll
push
stos
enter
cmp
leave
cs
out
dec
mov
sub
pushf
jp
jmp
fldl
and
adc
xor
shrb
pop
push
test
mov
sbb
mov
or
imul
fsubs
sub
inc
lock
jns
pop
mov
push
lea
fadds
stos
push
inc
arpl
pop
data16
dec
cld
adc
or
push
or
sahf
dec
xchg
cmpsl
lods
or
dec
dec
push
stos
adc
pop
stos
push
jmp
xor
jo
les
enter
or
leave
lcall
lods
je
out
mov
sbb
lods
mov
jge
sub
sbb
mov
aam
push
les
rcrb
cs
and
add
loop
mov
mov
sub
movb
xor
dec
sub
xlat
insl
imul
sbb
hlt
dec
push
or
cmpsb
jne
dec
dec
xlat
fs
notb
rcll
outsl
pushf
mov
sub
cmp
js
es
xchg
cltd
add
mov
dec
call
jb
and
fstpt
pusha
mov
lret
add
add
in
xor
rorl
scas
out
in
and
push
rorl
in
cmp
push
daa
and
es
in
push
stos
xor
adc
push
jp
sbb
es
or
xchg
ret
jo
das
lret
je
outsl
dec
fists
lods
stos
push
fsubs
lds
mov
mov
cltd
out
mov
cs
add
lret
xor
xlat
mov
scas
inc
fisttpl
inc
sub
imul
adc
xchg
pop
dec
or
jge
shlb
jl
stc
mov
test
and
jne
je
mov
out
xor
xchg
jp
and
adc
imul
fcoms
daa
push
cs
dec
adc
ja
and
daa
or
and
in
in
xor
mov
jnp
add
aam
aam
xchg
sub
jmp
xor
pop
inc
pop
inc
jb
mov
xor
js
data16
push
jp
lds
ljmp
lcall
fnstsw
scas
scas
sub
dec
fists
xor
push
test
test
and
scas
cmp
or
imul
sub
cmc
jae
inc
test
data16
loope
lret
pop
and
sahf
mov
in
loopne
mov
mov
xor
inc
xchg
call
jl
incl
pop
add
mov
std
aam
test
idivb
pop
mov
add
std
cmc
dec
stos
sub
push
push
je
xor
inc
lock
jns
sahf
cmp
and
adc
dec
das
fdivrp
jno
mov
nop
xor
push
xchg
or
aaa
popf
outsb
push
ja
popf
rcrb
and
sub
push
dec
in
popf
add
sbb
cmp
lods
pop
adc
in
test
and
dec
push
lods
mov
inc
cmpsb
add
dec
inc
pop
scas
mov
jnp
sub
mov
loop
repz
in
ds
push
xlat
dec
mov
xchg
jnp
imul
in
jb
or
test
das
inc
rcrb
and
adc
add
sbb
int
sub
xor
dec
inc
mov
fdivrl
shll
or
jg
push
shll
ja
jbe
dec
shr
xor
mov
cmp
outsb
jle
in
les
outsb
pop
test
fsubl
inc
cmc
mov
loopne
mov
jns
test
fsubrs
add
xchg
std
test
jns
sub
ljmp
loopne
test
add
sub
shlb
aas
add
and
jp
std
jae
cmp
and
and
sbb
call
xchg
inc
sahf
jp
in
xchg
sub
sub
aad
inc
pop
pop
test
mov
ds
js
cmp
push
lret
ljmp
inc
psllq
sub
xchg
sub
push
out
dec
inc
mov
popf
or
push
fistpll
xor
bound
xchg
mov
das
or
loopne
fisubs
loope
dec
shll
popf
movsb
xchg
or
stos
push
in
out
or
xor
adc
push
stc
imul
movd
sbb
stos
ret
jmp
popf
out
ds
xor
es
inc
or
movsb
popa
push
mov
inc
ret
pop
lahf
out
ds
lcall
pushl
push
xchg
push
notl
push
test
fadd
es
mov
scas
dec
gs
cmc
add
sbb
and
push
pop
sbb
stos
add
xor
and
pop
add
aas
lret
inc
pop
add
xchg
adc
xlat
xor
pop
pop
popa
and
sbb
fwait
out
cld
sbb
rcrb
fucomp
jb
or
stos
gs
roll
out
pop
jo
sub
inc
popa
pop
aas
mov
pop
ljmp
cmpsb
push
repz
out
ds
add
lret
jae
sub
into
imul
mov
pop
jmp
mov
cmp
into
mov
push
lea
cmp
inc
rcrb
push
and
outsl
jae
ja
imul
hlt
out
into
lock
and
mov
in
mov
pop
fs
pop
insb
jns
imul
sub
pop
shlb
mov
pop
sti
lock
mov
loop
xor
jp
jl
test
mov
mov
cmp
shlb
sub
loopne
mov
push
aaa
aam
mov
mov
mov
test
negb
daa
mov
lds
dec
out
mov
cwtl
mov
adc
in
repnz
or
clc
fwait
push
push
ja
mov
js
lret
fwait
sbb
xchg
lahf
outsl
sbb
int
les
int
icebp
add
repz
mov
lods
ds
lock
inc
mov
inc
mov
add
pop
das
addl
jb
lcall
loopne
stc
or
lds
nop
pop
cmpsl
popa
lret
data16
pop
addr16
imul
ss
cld
mov
jne
subb
shrb
out
fimull
rcrl
lret
adc
cmc
in
lds
hlt
scas
std
push
inc
pop
cld
iret
arpl
add
sub
ret
or
shl
pop
rol
fistpl
mov
stos
test
aaa
mov
call
lds
mov
mov
cld
sbbl
jb
flds
sbb
fwait
in
inc
inc
lods
es
outsl
ret
into
cwtl
or
or
pushf
pop
pop
dec
fs
and
into
fistpl
scas
loopne
cwtl
and
popl
mov
xchg
or
into
add
inc
sti
dec
cld
es
inc
inc
loop
iret
cs
mov
fsubr
loope
and
sub
movsl
jmp
pop
sub
push
pusha
pop
inc
xchg
push
mov
and
xor
pushf
enter
jo
pop
mov
repz
lock
nop
jo
jl
pop
out
push
lret
jnp
sbb
push
test
int
mov
jge
xor
push
pusha
inc
loope
fwait
popa
int3
std
push
aad
in
pop
nop
arpl
inc
push
jo
adc
cmp
aas
xor
cmp
xor
lock
pop
je
xchg
cltd
pop
pop
int
es
inc
leave
xor
fcomps
adc
sbb
push
mov
adc
or
and
pushf
out
jl
cltd
sbb
sahf
xchg
mov
lods
fsts
pop
and
stos
negl
ljmp
xor
add
push
mov
xchg
scas
pop
lahf
pop
xchg
popa
sub
push
jmp
lahf
jo
in
lret
push
sbb
dec
bound
ds
pop
mov
xlat
test
loopne
push
push
mov
xor
test
test
repnz
mov
add
pusha
test
or
lock
xchg
or
jge
stos
rcrb
popa
push
cmp
inc
jne
push
sti
repnz
and
push
rol
or
cltd
addr16
popw
enter
xchg
jecxz
add
and
inc
outsl
push
nop
frstor
ds
enter
stos
push
fnstenv
aad
dec
push
adc
and
inc
sbb
and
imull
jle
loop
push
inc
aas
jl
rorl
std
insl
pop
nop
mov
sbb
adc
xchg
rcll
pop
push
inc
push
pop
sub
daa
popa
repz
out
in
sub
aam
aaa
add
rorb
lods
clc
fs
fwait
ljmp
push
jnp
push
mov
out
mov
mov
adc
loop
test
fisubs
mov
inc
aam
add
aad
cltd
jmp
daa
push
and
dec
and
mov
sub
repnz
es
cli
arpl
push
pop
test
leave
cmp
sbb
pop
outsl
and
xchg
add
fstpl
mov
fwait
into
push
hlt
repnz
inc
fcomi
inc
or
lahf
f2xm1
pop
pop
mov
mov
mov
not
inc
outsb
rolb
xchg
in
dec
je
xchg
and
jno
or
popf
xchg
into
test
or
lock
fidivl
hlt
xlat
stos
push
movsl
xor
xchg
decb
lcall
ljmp
fwait
rclb
filds
notb
push
cli
pop
inc
adc
or
mov
and
sub
cmpsb
cmp
sbb
aam
repnz
xchg
stos
adc
clc
xchg
in
xchg
mov
dec
push
mov
pop
sbbl
sbb
xlat
stos
fdivs
fldenv
push
fcmovne
pop
movsl
dec
jl
xor
mov
pop
iret
dec
and
adc
pop
scas
mov
inc
test
orb
push
push
push
pmulhuw
iret
and
mov
sbb
mov
lods
inc
xor
jnp
scas
jno
xchg
sbb
jg
push
sub
sbbb
and
mov
xchg
add
dec
call
xchg
je
or
push
mov
mov
mov
shrb
fstps
sub
rclb
mov
or
cli
cmpl
xchg
or
xchg
fstpl
sub
ret
pop
movb
inc
mov
sti
pop
dec
xchg
div
mov
sarb
aad
and
sbb
scas
jns
addr16
lret
sti
loop
and
sti
adc
and
dec
shrb
mov
mov
xor
fdivrp
stos
sbb
int3
ret
adc
inc
scas
je
inc
imul
mov
xor
mov
add
mov
or
lret
cs
cmp
pushf
xor
jp
pop
ljmp
fstpt
shl
inc
fyl2xp1
mov
pop
scas
xchg
ret
add
fildl
mov
dec
ljmp
sub
aas
inc
movsl
dec
cmpsb
cli
inc
pop
lds
les
mov
clc
fistl
adc
test
xchg
cs
mov
jae
xor
addr16
jne
push
divl
out
outsl
out
gs
jmp
sbb
pop
lahf
xor
orb
and
jmp
mov
mov
shlb
mov
iret
lahf
jl
push
cmp
rorb
scas
gs
xchg
push
sahf
mov
popa
inc
into
xor
xchg
int3
and
dec
mov
into
sub
and
mov
sbb
pop
push
in
rorl
sub
jns
adc
ret
lahf
imul
push
scas
pusha
sub
adc
mov
mov
out
pop
daa
pop
cmp
push
aad
sub
aam
inc
shrl
jl
loopne
pop
fcomps
pop
mov
mov
inc
hlt
adc
xchg
sti
adc
sti
push
jo
xor
addb
add
fwait
cmpsl
int3
ds
jae
enter
gs
push
out
cmp
inc
cmp
and
je
push
lock
ja
xchg
ficomps
jb
stos
jns
les
dec
add
add
in
xchg
lock
mov
dec
daa
jnp
mov
sbb
lcall
cld
ud2
aaa
lcall
adc
cmp
imul
push
rolb
push
or
fstpt
sbbl
push
das
inc
sbb
fcoms
aam
fsubrp
inc
lods
push
fnstcw
push
adc
or
incb
dec
mov
fistl
xchg
out
and
sahf
push
sahf
icebp
aam
xor
push
mov
pop
repnz
xchg
mov
pop
imul
jge
in
lock
adc
aaa
adc
jmp
adc
sub
shlb
shrl
das
dec
les
dec
pop
pop
mov
mov
cmpsb
sarl
lret
aad
dec
push
add
in
xchg
pop
in
out
leave
cmovno
or
add
pop
xor
sbb
push
sbb
iret
mov
outsl
xor
push
lret
fs
dec
cmp
das
aaa
mov
testl
aaa
cmp
popw
push
push
mov
mov
xchg
xchg
sahf
pop
mov
xchg
adc
stos
jo
out
fmuls
ret
out
je
dec
push
int
pop
outsb
mov
sub
enter
mov
cmp
je
xor
mov
psubusb
push
pushf
idivl
iret
add
test
scas
shl
shll
add
mov
in
pop
jo
pop
movsb
mov
loopne
jl
xchg
insl
cmpsl
mov
add
cli
aad
mov
rclb
icebp
fiaddl
dec
repnz
sbb
mov
and
daa
js
dec
call
dec
push
jne
out
shlb
in
xchg
xchg
out
lcall
xchg
outsb
lock
lock
addl
shll
pusha
push
add
adc
xchg
cli
mov
sub
or
cmp
push
dec
cmpsb
jl
mov
push
cld
fstpt
jo
int3
sub
jb
push
pop
lahf
pop
mov
je
into
mov
push
mov
mov
pop
je
ror
mov
mov
daa
and
mov
pop
sahf
out
mov
xor
hlt
insl
mov
jbe
cli
aaa
in
jl
add
sub
mov
mov
sahf
repnz
lods
xchg
xlat
pop
int3
jb
mov
xor
add
xchg
stc
pop
xchg
adc
aad
xchg
pop
jecxz
adc
xor
jp
shl
cmp
mov
xor
add
mov
addr16
clc
pushf
dec
push
mov
xchg
pop
jp
ss
js
pop
sub
iret
add
popl
mov
jb
notl
cmp
repz
pop
hlt
or
sbb
lcall
jbe
mov
sbb
jle
sub
jecxz
jns
dec
in
psllq
imul
mov
setne
or
pop
adc
and
out
mov
fstps
es
adc
inc
mov
inc
or
fnstcw
jno
mov
popa
rep
orl
aas
int
xchg
insl
pop
mov
lahf
stc
repz
ret
and
add
rolb
sub
push
pop
cmc
test
dec
and
into
testl
mov
aaa
add
xor
lock
stc
mov
inc
cmp
mov
shlb
dec
or
pop
sub
jnp
jmp
call
scas
push
lret
xchg
xchg
popa
push
ret
mov
int
mov
jo
push
stc
push
push
imul
cmp
mov
and
mov
negb
lock
cmp
mov
loope
add
add
add
insl
rorb
mov
mov
mov
cs
addl
xchg
jb
in
cwtl
loopne
xchg
adc
push
cs
stos
hlt
xor
inc
dec
adc
xchg
sub
cmpsb
pushf
jmp
jle
mov
pop
jno
mov
stos
jge
fnstcw
sub
loopne
stc
cmp
cld
in
inc
sbb
sbb
push
dec
cmp
clc
icebp
outsl
xor
pop
ss
jne
ret
and
leave
push
dec
mov
xor
jo
xchg
in
test
fstl
ret
mov
jmp
sahf
jecxz
aaa
push
ss
out
out
fadds
call
or
ds
std
sti
adc
hlt
out
out
clc
jecxz
popa
pop
adc
or
cmc
mov
inc
or
jg
cmpsb
inc
sub
out
and
lret
mov
mov
add
sub
xchg
test
mov
or
bswap
jmp
push
dec
jbe
fs
xlat
inc
sbb
cmpsb
push
sbb
stos
mov
fstpl
mov
cmp
push
pop
mov
data16
cltd
jle
mov
hlt
aas
in
in
mov
dec
sbb
push
in
ss
xor
mov
sbb
fdivp
jne
jge
cmp
sbb
adc
cld
push
inc
mov
dec
fstpl
or
rcl
xor
popa
sub
pushl
sub
lahf
call
xlat
mov
test
leave
ficomps
mov
es
stos
notl
mov
mov
push
or
adc
movsl
sub
popa
or
test
sar
fdivs
cld
xor
add
daa
out
jne
ret
lcall
dec
xor
xor
ja
sbb
movsb
movsb
lret
call
and
sar
pop
mov
pushf
push
jne
and
fcompl
add
cwtl
mov
dec
mov
add
ret
sbb
xor
pushf
jge
dec
xchg
inc
test
sub
hlt
dec
test
movl
repnz
jg
shlb
out
and
and
add
in
xor
xor
adcb
push
rorl
sbb
ss
inc
or
mov
int3
and
mov
xchg
flds
pop
mov
sub
cli
xchg
sti
in
mov
and
mov
sbb
sahf
jb
jo
adc
inc
pop
repz
out
xor
fs
hlt
ret
ficoms
jo
xor
icebp
xor
mov
jnp
repz
adc
popa
xchg
dec
sti
dec
add
push
scas
bound
stc
sub
cld
addl
dec
and
rcl
nop
cld
les
fidivl
movsl
or
sub
rorl
dec
insb
dec
inc
mov
jg
sarb
out
je
dec
pop
aas
push
into
push
mov
ljmp
pop
ss
jb
iret
and
fcompl
push
popf
and
in
fwait
add
xorb
and
xor
xor
xrelease
fstpl
or
loopne
fiadds
enter
push
pop
movsb
push
ret
cli
sub
nop
aas
shlb
inc
rol
stos
cmp
and
insb
enter
jl
fisttpl
push
fdivs
std
lahf
cmpl
cltd
pop
add
out
pop
mov
cmp
push
ret
add
cmpl
or
int
cmp
movsl
mov
pushf
jo
cli
jno
or
mov
stc
jg
mov
mov
sub
testl
jmp
call
inc
inc
add
push
sahf
mov
inc
cmp
xchg
rcrb
test
jle
cs
imul
loopne
jno
cmc
push
cmp
push
popf
lds
sbb
testl
imul
scas
mov
adc
or
inc
out
mov
xor
add
ficoml
push
dec
icebp
sub
shlb
jle
dec
lret
jle
cmp
std
gs
lods
cmp
mov
sahf
xchg
and
shlb
pop
pop
and
pop
sub
aaa
mov
icebp
pop
fs
test
scas
pop
out
sti
and
popf
hlt
xchg
sbb
movq
jbe
xor
movsb
hlt
add
sub
out
mov
lea
and
xor
cmp
cli
sbb
sahf
mov
lcall
inc
scas
or
dec
or
lea
rclb
sbb
test
lods
popl
icebp
test
xorb
nop
mov
enter
dec
jle
sbb
clc
nop
shlb
es
adc
or
mov
xor
popf
cmc
mov
sub
cmc
push
in
sub
mov
mov
mov
aaa
mov
stos
mov
jno
in
and
push
mov
dec
pushf
movsl
out
ret
add
cmpsb
test
repz
iret
ffreep
scas
cmp
push
jge
sbb
push
lock
pop
add
movsl
mov
bound
cmp
dec
sahf
push
dec
xchg
xlat
adc
sbb
xor
loop
add
pop
xchg
fsub
loop
pop
addr16
das
pop
mov
pop
mov
ss
inc
push
xchg
cld
xor
jp
and
aad
adcl
dec
xchg
call
adc
sar
xchg
shrb
push
push
cmp
sbb
xchg
mov
in
test
and
pop
out
inc
cmc
sti
jo
icebp
in
iret
clc
dec
adc
cmp
push
mov
aad
mov
shr
icebp
faddl
bound
das
cli
clc
jbe
cwtl
cli
and
mov
mov
cmp
push
test
xchg
adc
mul
xor
adc
repz
iret
sub
sub
aam
daa
mov
ljmp
out
outsb
sbb
pop
cli
pop
fwait
das
jb
sarl
popa
jl
aaa
stos
dec
push
inc
outsl
push
jne
lahf
push
imul
cmp
or
sbb
jnp
mov
add
inc
shr
add
out
je
sub
dec
mov
cmp
mov
bound
inc
push
test
push
mov
inc
push
mov
iret
fwait
idivb
xchg
mov
xor
ds
sbb
leave
inc
push
push
mov
or
test
inc
call
mov
lock
cmpsb
test
fimull
cli
pop
adc
push
mov
movsb
lret
jge
mov
fnstcw
jne
test
not
sbb
mov
in
sub
popf
ja
adc
jp
scas
pusha
mov
jno
dec
aam
push
rol
call
dec
dec
stc
xchg
test
add
pop
dec
push
and
xor
jmp
adc
arpl
cwtl
xchg
imul
cmp
jg
cmp
fucomip
pop
mov
jb
ss
cmp
xchg
fldt
jne
mov
or
shr
jmp
mov
adc
hlt
xchg
sub
xor
cli
dec
mov
cmpsb
rdpmc
xor
inc
lcall
inc
fs
insl
mov
int
icebp
enter
movsl
mov
or
xor
adc
mov
fnstcw
aas
fmull
pop
negb
hlt
dec
ja
ljmp
cmp
lods
stos
mov
lea
push
std
mov
dec
or
inc
sti
mov
sub
cmc
xlat
dec
xchg
jle
mov
jg
cmp
test
mov
test
jl
clc
xchg
in
mov
and
sub
std
imul
es
andb
sbb
sbb
sbb
sbbl
ret
outsl
add
outsl
mov
stos
xor
in
in
aas
in
mov
xchg
jne
out
rcrl
test
gs
stos
imul
gs
filds
xchg
pop
leave
xor
mov
sub
into
mov
xor
lods
adc
add
add
jmp
mov
scas
push
jmp
or
jecxz
sbb
xor
inc
jl
mov
jae
das
jo
dec
xlat
shlb
dec
je
push
hlt
test
flds
xchg
mov
cwtl
shrb
jg
out
xlat
push
xchg
jle
cmp
mov
and
push
xor
pop
rclb
notb
xchg
fs
sub
aam
call
rcrb
out
arpl
in
or
fs
leave
jnp
insl
mov
mov
imul
xlat
push
insl
push
mov
in
add
outsb
and
pop
inc
adc
fs
jne
and
add
stos
dec
or
cmpsb
mov
xor
aaa
inc
rcr
cmp
mov
sub
fildl
js
jne
int
pop
push
sbb
mov
int3
pop
jle
xchg
loop
mov
test
xorl
stos
lret
jg
je
cmpsl
mov
mov
arpl
sarl
lcall
xchg
stc
pop
stos
lret
rcrb
pop
dec
sahf
dec
xor
xor
bound
mov
xorb
jns
in
in
adc
ss
not
stc
sbb
je
mov
int3
and
sub
into
mov
faddl
gs
cmp
popa
hlt
mov
ja
mov
stc
movsb
dec
cmpl
xor
flds
push
mov
cmp
enter
add
and
into
mov
inc
lahf
xor
or
popl
test
or
add
int
out
push
pop
inc
mov
adc
std
mov
sub
sub
xchg
aam
pinsrw
data16
repnz
mov
sbb
mov
out
testb
insl
jmp
push
cmp
mov
jno
popf
lret
pop
push
test
in
out
inc
es
inc
and
add
lds
popf
and
jnp
push
mov
pop
cmp
cmp
and
push
add
push
or
push
sub
inc
push
push
xor
gs
ss
pop
ljmp
xor
ja
in
xor
dec
shrl
xchg
push
and
xchg
mov
or
pop
clc
add
lahf
or
push
sbbb
push
shrb
jnp
mov
nop
bound
popa
jge
in
nop
sar
fcomps
adc
jne
repz
push
cmpsl
movsl
dec
mov
cmp
or
addr16
dec
test
int3
pop
in
mov
mov
mov
lea
clc
pop
scas
jmp
insb
ret
dec
xchg
cmp
cs
jne,pt
cmp
lret
aas
or
xchg
push
in
add
das
cld
arpl
jnp
loopne
iret
loope
addr16
inc
xchg
mov
ja
or
xor
mov
scas
out
jbe
push
fisubs
loope
shrl
jl
pop
jmp
xor
mov
out
push
pop
std
add
lret
in
std
xchg
lahf
push
adc
inc
int3
sbb
inc
loop
xor
inc
jmp
mov
or
mov
cmp
dec
lods
jae
adc
sbb
in
call
mov
jge
sub
push
cli
mov
and
sub
cmp
out
lcall
adc
fbstp
roll
pop
in
outsb
and
push
pusha
mov
or
mov
jae
mov
mov
jbe
loop
mov
add
push
mov
iret
das
rorl
lock
mov
and
and
ss
or
xchg
or
and
mov
je
or
dec
cmpb
mov
rclb
fnstcw
cmpsl
aas
icebp
adc
pop
mov
fdivl
adc
cltd
mov
scas
push
loopne
push
mov
push
push
jmp
test
adc
pop
mov
test
ljmp
pop
cmpsb
ret
insb
mov
enter
mov
xor
mov
push
scas
fsubr
shrb
jmpw
push
in
mov
jns
pusha
repz
xchg
loop
loope
addr16
inc
sti
movsb
push
imul
rcr
ja
cmpsl
lods
stc
push
stos
sub
or
jecxz
push
insb
les
repnz
sbb
call
inc
mov
out
pop
jnp
test
mov
add
mov
out
jmp
shll
and
test
sub
pop
negb
lret
les
pop
adc
cmpsb
mov
dec
mov
pop
pop
lods
and
addr16
enter
mov
cmpl
aad
in
xchg
test
xchg
push
jns
adc
in
mov
adcl
dec
mov
arpl
push
mov
pushf
lcall
shrl
pop
inc
daa
jg
jae
divl
jne
push
aaa
lods
ficoms
scas
mov
pop
pop
fcmovb
sub
mov
add
pop
or
xlat
mov
jle
mov
in
or
mov
fisttps
add
xchg
xor
rcl
bound
jbe
mov
jge
call
fwait
das
cmp
rcl
aas
add
or
pushf
mov
hlt
aad
sarl
xchg
shlb
test
int3
cmp
or
js
or
rolb
cmpsb
pop
push
sbb
fstpl
fimuls
adc
mov
inc
aad
adc
repz
jae
lcall
loope
lds
inc
jne
dec
or
push
stos
out
outsb
out
imul
rcl
lahf
lods
lret
in
push
xchg
mov
scas
mov
cmp
sbb
jmp
pop
and
ljmp
jae
push
jne
popa
xor
push
inc
outsb
rol
sub
add
and
xor
daa
dec
pop
lcall
lahf
rorl
sarl
xchg
cmp
jb
push
mov
cmp
rorl
out
add
add
daa
and
sub
mov
adc
lahf
sub
jmp
mov
dec
cltd
nopl
sbb
das
dec
ja
mov
cmpsb
loop
and
ret
roll
ljmp
sub
dec
pop
xor
adc
adc
sub
ja
sbb
push
iret
addr16
mov
or
pop
push
xchg
pop
fs
test
sbb
std
out
mov
add
pop
popa
pop
insb
out
das
imul
sbb
add
adc
out
xlat
ljmp
in
or
jge
arpl
xchg
pop
aad
fidivs
mov
idiv
xchg
inc
cmp
adc
sti
ljmp
mov
mov
vmread
xchg
shll
rcr
or
inc
jp
test
jb
jg
mov
repz
and
and
or
repnz
and
mov
adc
xchg
cmpsl
mov
or
adc
add
push
div
mov
push
or
stc
dec
jecxz,pt
lods
cmp
and
stos
xchg
call
aaa
dec
and
loop
add
dec
xchg
xor
adc
sahf
inc
sbb
push
fisttpl
enter
shl
icebp
mov
scas
mov
test
lods
out
andl
icebp
loop
pop
mov
jne
ret
cmpsl
add
xorl
sti
jae
dec
pop
out
stc
scas
pop
stc
shrb
aaa
loopne
pop
bound
pop
testl
adc
aaa
arpl
arpl
xor
cmp
mov
pop
xchg
xor
enter
xchg
mov
std
adc
sbb
lea
dec
xor
clc
test
enter
mov
xorl
in
and
add
scas
xchg
imul
mov
popf
lods
popa
lods
addr16
das
rcll
je
insl
loop
movsb
or
std
pop
dec
out
mov
out
mov
int
scas
adc
in
js
jl
aaa
dec
xchg
mov
aas
stos
and
enter
xor
xchg
pop
xchg
dec
aaa
outsl
and
sub
jne
data16
cmp
lea
xchg
push
test
adc
icebp
lods
jb
andl
lock
sahf
repnz
fisubrl
cmp
or
pushf
inc
idivb
repnz
push
addr16
xchg
pop
ja
sub
xor
mov
pusha
lret
sti
jo
dec
mov
mov
adc
or
and
push
roll
add
sbb
jae
xchg
and
fiadds
or
xor
pop
in
movsb
push
fucompp
or
mov
fiaddl
jl
dec
ss
pushf
mov
and
mov
fnstcw
jp
movsb
js
int
andb
je
mov
sbb
sbb
xchg
lods
cltd
movsl
arpl
push
in
inc
mov
int3
and
and
jb
inc
mov
jg
cld
xlat
mov
jne
xor
adc
sbbl
dec
in
mov
mov
push
sub
shrb
inc
push
iret
sbb
movsl
rclb
sbb
imul
mov
push
inc
sti
cwtl
rcrl
jb
ret
loopne
or
jp
xchg
jb
dec
rcrl
push
ss
or
jl
iret
fstpl
out
shlb
fisttps
xlat
hlt
mov
jns
shll
neg
outsl
mov
mull
ds
cwtl
fiaddl
mov
push
movl
xor
rcrl
pop
jle
movl
push
mov
cmp
test
movsb
scas
loop
mov
add
imul
adc
mov
mov
mov
cmp
aaa
dec
rcrl
and
mov
pop
aas
xchg
jmp
sti
push
mov
and
jb
and
mov
lods
xchg
xor
sbbl
int3
xchg
sub
lods
mov
dec
xor
out
dec
jp
push
movl
add
mov
out
call
jne
mov
pushf
test
popf
jg
psrlq
adcl
sti
fidivrs
or
in
or
pop
stos
out
into
xor
sar
xchg
add
out
mov
dec
sub
rorl
mov
mov
outsl
cwtl
out
push
push
outsb
xchg
jp
out
mov
js
inc
les
jl
jb
loop
jns
daa
out
aas
add
outsb
and
mov
add
sbb
mov
andl
movsl
mov
test
sbb
lret
frstor
jb
jne
mov
popf
pusha
sbb
mov
xor
in
loop
inc
aad
fucomp
and
and
or
xchg
sub
cmc
lds
aam
sbb
mov
pop
fisttpl
push
push
xor
mov
fiadds
cs
sub
dec
add
jp
xor
push
push
hlt
adc
mov
ret
cmp
inc
pop
pushf
orl
and
faddl
and
jle
or
sbb
pop
test
sub
rorl
xlat
pop
mov
xchg
adc
in
mov
adc
je
fdivrl
push
push
lahf
fidivl
stos
xlat
ljmp
popa
add
dec
jp
mov
pop
or
out
flds
sub
cmp
xor
stos
mov
or
mov
pop
mulb
or
adc
pop
fwait
push
add
outsl
mul
fnstenv
xchg
xor
sub
push
out
leave
inc
push
fisttps
sti
push
xor
fs
imul
inc
bound
stos
mov
fiaddl
aaa
imul
mov
scas
sub
adc
les
push
sub
aad
inc
repz
pusha
push
mov
cs
xor
ret
sahf
orl
adc
fidivrl
pop
cmc
fidivl
mov
sbb
insb
mov
in
and
bound
sub
or
jmp
lcall
adc
popf
fildl
out
test
icebp
xchg
in
repnz
gs
aaa
mov
mov
mov
aas
movsl
sbb
aaa
jae
mov
lahf
ja
flds
xchg
push
jl
ret
mov
inc
mov
xor
loope
aam
loop
push
es
das
push
rol
fldl
mov
jg
add
fnstenv
jg
mov
adc
addl
adc
jo
faddl
xchg
fldenv
xor
jmp
mov
add
sbb
loope
int3
test
imul
arpl
movsb
out
iret
stc
xchg
loop
les
fistpl
and
mov
iret
test
cmpsb
outsb
dec
sbb
sbb
mov
dec
mov
sti
pop
pop
mov
sbb
fstl
inc
adc
orb
push
add
enter
xor
xchg
in
in
lds
pop
xchg
aad
pop
sbb
inc
cmp
test
xchg
jnp
sub
and
popf
fbld
movb
adc
mov
and
adc
xchg
hlt
fildll
pop
loop
adc
or
adc
test
pushl
inc
inc
das
cli
push
popf
dec
mov
aad
sti
sub
xchg
pop
shll
xchg
jmp
mov
adc
daa
scas
inc
movsb
push
int
scas
sbb
call
cmp
fwait
rorb
jae
xor
jecxz
cli
cltd
dec
push
add
lcall
and
jne
aam
and
xor
xchg
aam
sti
xlat
out
mov
int3
adc
jbe
pop
sub
in
mov
nop
loop
xchg
jbe
mov
cltd
push
test
push
addr16
pop
mov
jl
pop
pop
repz
xchg
or
xchg
fldl
fnstsw
jmp
dec
sbb
mov
and
fbld
push
sbb
push
adcl
dec
push
or
cmp
div
packssdw
in
xchg
xor
popa
ficoml
imul
jmp
inc
inc
mov
or
inc
das
dec
and
push
dec
mov
xchg
rclb
inc
jge
pop
jg
lods
mov
dec
imul
je
and
lret
cmp
or
testl
xchg
popa
mov
lock
lcall
or
popa
pop
mov
mov
rcr
jnp
pop
lret
mov
xchg
push
scas
jae
leave
test
pop
sbb
push
sbb
test
shll
sbb
push
das
testb
pop
push
enter
inc
mov
in
mov
lahf
or
jmp
xchg
in
mov
cmp
xor
push
das
push
xchg
subb
test
stos
sbb
add
das
arpl
or
in
nop
lret
enter
mov
dec
and
lcall
subb
ja
xchg
frstor
mov
rorl
mov
cltd
dec
out
out
mov
and
in
jg
sbbb
cmp
addr16
pop
stc
pop
sub
sub
add
cld
enter
mov
cltd
shrb
push
ja
testb
push
adc
bnd
fiaddl
cwtl
or
mov
xchg
mov
push
incb
leave
xor
adc
in
pop
mov
cmpsb
cwtl
icebp
mov
cltd
mov
and
jbe
out
loopne
fsub
jns
stos
jle
dec
push
cmp
rolb
mov
and
pop
xor
int3
pop
fs
and
sbb
push
aaa
xor
in
cmp
inc
fcomps
jo
fidivrs
jno
ret
rcrb
ljmp
mov
pop
insb
nop
sbb
xchg
sar
pop
pop
mov
dec
mov
push
or
frstor
xor
inc
mov
jbe
inc
sub
mov
nop
and
fistpll
xchg
push
jne
xor
push
clc
mov
loope
sub
cs
cltd
data16
mov
int
fadd
ja
pushf
or
fadd
add
push
out
outsb
adc
test
popa
mov
add
or
add
stos
sarb
cmp
dec
push
pop
je
movb
daa
outsb
or
mov
testb
fwait
ret
cmc
push
mov
das
loop
rcrb
imull
in
orb
nop
adc
pop
aas
push
insb
and
pop
mov
mov
fsubl
jmp
sbb
cs
mov
pop
mov
dec
or
insl
or
xchg
lret
mov
xlat
sbb
cltd
inc
outsb
xchg
cmp
mov
mov
add
rorl
inc
cli
fldenv
bound
sarl
aaa
xor
jne
jp
stos
mov
pop
hlt
mov
movsb
loop
add
orb
aam
push
movsb
mov
pop
push
inc
loopne
and
lret
xor
iret
aam
pushf
inc
mov
ret
pushf
in
add
iret
loope
lock
adcl
cmp
xor
insl
test
fstpl
jo
sahf
mov
mov
enter
pop
inc
or
pop
push
movsb
scas
add
std
pop
ret
jg
xchg
pop
fs
add
and
lahf
xchg
cld
push
arpl
mov
loopne
adc
gs
cmc
testb
sarl
mov
mov
xchg
movsb
xchg
lahf
int3
int3
js
ss
test
jp
fisttpl
divl
arpl
ret
push
pop
std
and
xchg
outsb
shlb
or
adc
mov
push
mov
jmp
adcl
push
sub
neg
and
cmpsl
cmp
xor
mov
mov
xor
movsb
mov
sub
dec
sti
orl
fcomip
lahf
outsl
cltd
mov
filds
int
pop
jnp
xor
pushf
inc
or
mov
arpl
cmp
mov
sub
mov
jmp
outsl
mov
cmp
or
cmp
ljmp
dec
lds
or
jecxz
cmp
dec
mov
leave
or
jg
push
fstps
sbb
lea
ret
cld
push
scas
int3
sub
add
fiadds
add
lret
aam
add
bound
add
sahf
add
add
add
fucomip
jne
pop
mov
add
sub
daa
sub
movsb
sub
pop
lret
jo
fidivrl
add
mov
add
push
xor
ret
data16
jg
pop
je
add
dec
stc
jne
add
dec
js
sub
out
push
das
cli
mov
add
outsl
jmp
cmp
add
shll
push
mov
xor
mov
dec
arpl
add
sub
movsb
aad
inc
jb
mov
jg
add
addr16
xor
rcrb
fiaddl
add
mov
add
jne
mov
sbb
push
pusha
add
scas
es
add
add
mov
sub
adc
es
je
add
enter
add
jno
sarb
call
scas
push
adc
add
sub
test
add
dec
mov
incl
add
push
mov
mov
jg
cmp
and
dec
movsl
gs
add
push
ljmp
insb
dec
cmpl
add
dec
addb
aaa
in
lahf
xorl
pushf
sub
sbb
xor
insb
push
jmp
in
adc
jg
add
test
loop
add
sbb
faddl
add
pop
ficomps
jno
lods
lret
enter
fucomip
ret
je
enter
shl
rclb
sub
add
test
dec
pop
enter
mov
adc
push
fucomi
add
xchg
into
nop
ja
mov
cmpsb
inc
cwtl
lods
push
jb
mov
xor
mov
fists
push
jne
mov
push
lods
lret
mov
sahf
push
cmpsb
add
mov
add
mov
mov
add
loopne
push
insb
add
lock
mov
xchg
jno
lahf
popf
add
int3
test
push
jno
fldt
scas
pop
cwtl
push
xchg
jecxz
push
mov
inc
clc
loop
cmc
add
iret
lret
jge
adc
add
push
in
add
add
dec
xor
inc
loopne
cltd
inc
jg
addl
add
andl
adc
mov
testb
add
push
pop
insl
jp
mov
scas
pop
add
sahf
icebp
fsts
dec
xlat
scas
imul
push
fistpll
mov
adc
dec
add
jnp
add
or
loop
or
xchg
shl
or
push
or
bound
mov
ja
fmul
repnz
das
addl
pop
sbb
std
adc
pop
andb
mov
cwtl
test
cld
lahf
clc
leave
int
lods
int
int3
add
fsubs
add
das
push
jae
xor
and
testb
or
jp
mov
loope
or
sbb
scas
cmp
divl
ds
add
pop
loop
add
adc
add
ret
aam
out
add
ror
sbb
add
into
xchg
scas
cwtl
sldt
aam
icebp
test
push
add
dec
call
mov
dec
xchg
rcrb
push
pop
add
sahf
cmp
add
push
repz
add
jg
out
jge
add
inc
push
push
add
add
add
testb
scas
adc
sbb
test
add
push
mov
add
mov
aad
adc
mov
fisubs
add
sbbl
mov
arpl
xor
inc
stc
ljmp
shlb
sbb
mov
add
fmul
dec
ja
add
lock
int
sahf
stos
cli
cmp
add
sbb
add
sti
mov
mov
mov
test
cmc
rcrb
das
shr
stc
xor
in
jnp
xlat
dec
in
inc
cmpsl
icebp
pusha
out
add
xor
add
hlt
adc
je
adc
cwtl
and
pop
xchg
sbb
out
lret
scas
or
jno
popl
add
js
repz
xchg
outsl
fimull
mov
inc
scas
add
pusha
and
test
cmp
add
jnp
sbb
repz
dec
dec
add
pushl
pop
std
loopne
xchg
add
cmp
ljmp
sub
and
xlat
lahf
int3
loopne
imul
sarb
jge
bound
add
add
sub
loope
loope
xchg
mov
add
dec
xlat
scas
mov
imul
adc
add
roll
les
add
pop
les
add
or
add
fmuls
hlt
pop
add
mov
add
jle
add
aam
xchg
sub
add
inc
sub
test
dec
add
test
xchg
ja
daa
lret
mov
mov
mov
dec
movsl
push
mov
pop
dec
jl
jne
cmp
lahf
scas
xor
sarb
mov
clc
rolb
push
imul
test
into
bnd
mov
add
cmp
loope
add
mov
add
in
fadds
add
or
add
mov
ret
add
cmp
test
add
stos
pop
add
add
add
imul
sbb
pop
add
push
jl
ljmp
mov
pop
push
add
xor
add
in
inc
pushf
aaa
add
and
pop
add
mov
add
fcoms
outsb
popa
stos
add
xor
test
cmp
shlb
push
fs
add
fmull
movsb
es
int
dec
add
push
mov
pop
xlat
test
mov
stos
sub
dec
xchg
lods
repnz
add
adc
pop
xlat
add
cmc
or
mov
mov
mov
add
fsts
pop
das
mov
js
push
dec
add
ss
push
add
mov
lds
addr16
jne
test
mov
ja
popa
xlat
dec
sbb
mov
push
fnsave
loopne
mov
fidivs
icebp
and
mov
lods
lods
add
sub
test
outsb
cltd
in
jmp
or
mov
pop
jp
aam
inc
rorb
mov
dec
cltd
cmpsl
push
rolb
push
pop
add
mov
xlat
jge
int
sbb
movsl
jbe
add
cmp
adc
add
out
adc
jbe
add
imul
push
mov
add
jmp
add
rcrl
add
add
xlat
or
loope
das
movsl
jg
mov
rolb
add
mov
popf
or
add
pop
pop
or
add
call
std
jmp
arpl
jae
mov
mov
push
fwait
inc
pop
or
data16
mov
imul
in
ret
xchg
test
dec
add
push
sbb
clc
jnp
add
mov
stos
xor
cmpb
rolb
add
lods
xor
add
inc
push
lds
mov
jo
mov
jo
fildl
add
jmp
add
loopne
out
cld
mov
mov
daa
inc
mov
movsl
push
bound
sub
push
inc
add
cmp
add
cmp
arpl
xor
sbb
jnp
xor
add
gs
pop
jns
add
xchg
mov
clc
jg
add
add
bswap
xchg
add
dec
pop
cltd
cmp
xchg
neg
push
add
xor
jle
or
adc
and
add
push
fidivrl
add
add
call
cs
test
ja
mov
add
jmp
aam
xor
add
add
test
pop
add
xor
sbb
xor
lahf
add
add
inc
popl
cli
arpl
iret
daa
imul
shl
add
rcrl
icebp
or
pushf
xor
xchg
jle
pop
loope
jb
test
nop
add
sbbl
add
mov
add
mov
cmpsb
adc
pop
aam
aaa
sbb
ret
cs
jno
ja
scas
das
popf
and
rorb
testb
ja
add
lds
fidivl
push
pcmpeqb
addr16
scas
imul
xchg
sahf
repz
push
addr16
push
leave
add
fisubrs
fs
push
xlat
sub
sahf
test
sbb
add
mov
sub
inc
mov
add
mov
push
cli
mov
enter
mov
xor
xor
and
jne
mov
xchg
adc
stc
add
or
inc
into
test
ljmp
rolb
add
pop
cmpsl
nop
cmp
push
es
add
xchg
cmc
cld
std
cmpl
aam
insb
test
pop
sahf
fstpl
loopne
fldenv
jne
xchg
lret
push
xchg
faddl
xlat
add
xchg
add
add
lcall
inc
add
add
add
fisttpl
fwait
mov
push
add
xchg
jne
add
cmp
ds
dec
ret
mov
push
xor
xchg
lds
in
dec
mov
add
aad
in
adc
pop
and
add
fmul
jmp
pushf
xchg
test
cwtl
scas
cld
dec
sbb
stos
push
add
ret
icebp
loope
jae
jecxz
mov
sbb
scas
xchg
imul
insb
aam
pop
stos
pusha
ljmp
add
inc
mov
inc
push
loope
pop
jge
test
cmpsb
sti
and
or
in
jne
decb
inc
test
insb
fwait
arpl
xchg
in
lods
loopne
mov
add
lret
add
or
add
add
std
fcmove
test
jp
popf
outsb
add
dec
jg
add
xor
sti
add
sbb
pusha
lds
ud2
push
sub
int3
fnsave
dec
dec
stc
jns
test
aad
addr16
jmp
xchg
xchg
add
xchg
pushf
adc
inc
loopne
cmp
add
loope
xor
push
xlat
arpl
mov
pop
push
gs
shl
les
aad
mov
dec
js
mull
add
dec
sub
mov
sub
mov
stc
movsb
adc
add
adc
insb
loope
jb
outsl
dec
fbstp
loope
xor
inc
ds
addr16
ja
push
loop
sbb
add
fistpll
inc
adc
dec
and
in
mov
ja
out
mov
movsb
push
es
mov
add
adc
xor
mov
mov
mov
add
lds
add
nop
out
add
pop
jle
mov
ret
and
push
lret
add
inc
rcrb
add
dec
adc
add
add
stc
push
mov
inc
cld
popf
das
shlb
sti
push
jb
fwait
cmpsl
jl
xlat
sahf
insb
jmp
lret
or
adc
jmp
mov
inc
mov
in
rorb
ja
add
cmp
jge
mov
xchg
xor
ret
imul
sub
sbb
adc
fidivl
mov
add
sub
subl
cmc
fs
loope
popf
imul
mov
dec
xor
or
jmp
fmuls
add
jno
dec
push
mov
add
enter
cmp
call
in
fildl
push
sbb
and
bnd
add
add
sub
cmp
cmc
inc
roll
add
andb
pop
in
dec
cmp
insl
test
xchg
jae
shl
pusha
aam
and
push
jge
fmulp
test
sahf
clc
loopne
jp
out
adc
add
cs
gs
mov
add
push
cmpsb
pop
cmp
sub
xor
inc
or
outsb
test
push
std
loope
add
xchg
adc
ret
testb
add
aaa
mov
and
rorb
add
mov
push
cwtl
scas
push
js
inc
mov
xchg
ljmp
or
pusha
add
push
mov
mov
add
lahf
ret
add
shl
xchg
pop
mov
jbe
add
sbb
adc
test
mov
insb
xchg
stc
add
imul
push
dec
into
nop
je
int
mov
add
out
insb
jecxz
jb
int
jns
cmp
repz
cmp
sarb
add
sub
and
or
add
js
xor
add
add
loop
es
repz
cli
aas
xchg
mov
add
mov
mov
enter
add
xchg
roll
adc
jb
lahf
add
enter
mov
or
xor
add
in
int3
div
nop
movsl
add
add
lahf
mov
inc
mov
mov
dec
cwtl
imul
jl
add
add
jg
pop
testb
adc
push
jge
jg
xor
ds
push
sbb
pop
repnz
add
jnp
mov
stos
pop
iret
aas
daa
push
pusha
in
inc
add
mov
xchg
not
shll
add
into
aad
rolb
cmp
inc
pop
ret
out
mov
add
addl
add
xchg
and
mov
mov
cmp
mov
cmpsb
and
std
das
mov
add
movsb
cltd
in
xbegin
mov
jl
xchg
add
dec
cmp
jg
pop
add
clc
sub
add
add
and
xor
lret
add
scas
cmp
lea
or
rcl
sbb
decb
lea
jle
mov
int
jae
mov
adc
push
xchg
xor
xchg
jne
inc
testb
pushf
jp
out
lods
addr16
xchg
lods
sbb
mov
loop
cs
xor
imul
out
nop
adc
and
aam
sub
test
andl
cmp
add
add
loop
adcb
inc
std
out
outsb
outsb
es
repz
xchg
lds
add
dec
lods
push
pop
ja
frstor
ret
pop
aam
ljmp
hlt
sbbl
cmpsl
imul
inc
jno
bound
add
mov
or
or
jp
mov
inc
add
add
pushf
sub
loopne
add
sbb
ja
fbstp
sbb
insl
sub
loop
icebp
scas
lock
mov
sbbb
test
add
mov
add
adc
push
jecxz
ss
out
xor
mov
loop
cmpsl
mov
jnp
and
inc
and
add
add
pop
addr16
scas
add
pop
ret
dec
push
add
mov
xorb
lock
cmc
add
repnz
or
add
outsb
pusha
scas
fs
dec
sub
adc
push
jge
insb
mov
incl
rcrb
adc
fimull
rcr
ret
mov
add
push
aas
xchg
jl
fnstcw
test
and
fs
add
add
test
dec
cs
cld
pushf
ret
add
shrb
sub
mov
pop
mov
add
fiadds
fs
add
jno
or
loop
popf
dec
push
push
pop
xor
add
push
push
xor
mov
movsb
inc
clc
jae
adc
das
scas
ss
popf
pop
test
in
sbb
add
add
add
push
inc
jp
aaa
and
mov
ljmp
cs
adc
sbb
mov
rcl
inc
aam
mov
push
fisttpl
aaa
outsl
mov
addr16
popf
sarb
mov
add
lret
cmc
ret
ljmp
xchg
push
sub
es
xlat
push
cmp
push
es
adc
push
add
push
add
pop
fimull
xorl
add
mov
xchg
jae
aad
test
les
dec
ja
aad
pushl
shll
insb
icebp
lock
pop
cltd
or
orb
icebp
es
test
mov
add
fcmovb
jne
add
cld
mov
pop
hlt
out
push
xchg
filds
add
mov
add
cmp
add
jb
gs
cltd
mov
ja
rolb
add
pusha
in
in
add
test
and
and
movsl
repz
int3
aad
add
int
mov
shr
loope
enter
pop
faddl
sbb
push
adc
add
ret
loop
add
lahf
mov
add
fnsave
add
lret
sahf
outsl
leave
aam
push
push
add
lods
in
js
incb
add
cmpsl
push
cmpsb
fstl
add
or
push
pop
push
or
jecxz
imul
pop
pop
in
add
push
neg
jae
add
ror
mov
mov
aaa
shl
bound
mov
je,pn
add
push
lds
repnz
icebp
mov
int
ficoml
xorl
inc
int
dec
add
mov
shrl
test
and
btc
cmp
and
into
fldenv
cs
cld
mov
sbb
fadds
test
imul
add
mov
add
add
push
pop
ret
push
popa
dec
push
sub
add
xorl
inc
or
js
mov
xor
testl
sbb
add
stos
and
add
xchg
or
sub
or
cltd
jae
add
ss
roll
inc
insl
and
add
sub
inc
mov
add
nop
dec
cmp
add
dec
add
lods
insl
add
std
add
mov
insl
mov
push
add
jne
mov
dec
outsl
cwtl
jb
repz
xchg
sbb
mov
add
dec
rorl
call
inc
add
add
xor
or
add
das
aad
add
jg
jb
mov
mov
add
push
add
es
lahf
test
fists
add
imul
shlb
push
sub
add
scas
mov
cmp
add
inc
mov
mov
mov
pop
mov
mov
cmp
fldl
add
pop
and
pushf
jno
mov
push
add
add
imull
inc
stc
jo
jge
xchg
and
add
add
out
dec
add
mov
out
filds
mov
mov
mov
sti
pop
xor
adc
sbb
dec
sub
add
push
out
sti
sbb
outsl
lret
iret
mov
data16
add
lock
xchg
cld
sub
add
jo
add
dec
rcrb
add
dec
into
push
lahf
push
shrb
jne
mov
and
push
jno
std
add
mov
add
push
push
add
cmpsb
mov
arpl
add
push
add
add
sub
push
add
push
repz
xor
add
fucom
movsl
ret
pop
push
test
push
add
xor
push
loope
fidivrs
sub
sbb
xchg
sahf
or
add
jge
or
cmp
scas
sti
int
push
dec
and
lret
sub
in
fidivrl
vpsrlw
add
mov
add
adcb
mov
pop
rol
fldcw
sub
jl
jmp
add
push
daa
or
dec
xchg
add
js
lds
add
fwait
loope
push
pop
data16
or
jp
aas
add
add
int
imull
mov
repnz
test
or
jne
es
jbe
es
add
out
lods
in
xchg
mov
inc
inc
leave
lret
imul
mov
sarb
cmp
dec
mov
inc
shll
loop
sub
add
lods
add
imull
jp
dec
cmc
fstps
push
mov
pop
pop
pop
add
hlt
popf
cmp
adc
add
add
or
ret
stc
push
mov
cmp
cwtl
clc
adc
fiadds
and
call
mov
int3
cmp
ret
repz
je
add
mov
loopne
sub
nop
mov
add
lods
ret
mov
and
lods
jne
aad
pop
pop
subb
jnp
push
xchg
mov
push
int
insb
and
ss
jnp
dec
add
adc
add
sub
mov
mov
or
xlat
sbb
pop
sub
add
insb
jmp
inc
imul
sbb
xchg
sarl
loope
push
repz
enter
js
lock
fcmovb
sub
mov
pusha
xchg
xlat
popf
mov
add
stc
cmpsb
out
xor
int
add
lods
scas
pop
repnz
js
data16
dec
jmp
mov
out
insl
mov
dec
add
mov
sub
lds
aad
push
hlt
xchg
add
nop
int3
cmp
mov
test
add
add
sub
mov
dec
ficoml
add
pop
and
lahf
jb
jo
stos
mov
xchg
mov
shll
lahf
cwtl
pop
push
add
in
jb
dec
jg
push
dec
ja
ljmp
pop
fcompl
incl
add
cld
fldenv
adc
cld
mov
add
sbb
xchg
add
sbb
insl
jle,pt
pop
pop
mov
push
inc
ja
jne
add
mov
pop
negl
in
punpcklbw
mov
push
mov
adc
add
stos
out
jg
jge
lea
add
subl
data16
fdivrp
and
add
push
sahf
pusha
int
popa
mov
cld
jne
adc
mov
pop
dec
add
mov
fistps
push
add
mov
inc
or
test
add
ret
mov
stos
addb
xlat
add
cltd
cwtl
mov
add
dec
movsl
add
cmpsl
adc
testl
idiv
sub
inc
fstpt
and
xlat
dec
je
insb
xor
dec
icebp
and
cli
mov
enter
lods
ljmp
aam
xchg
cmp
out
mov
add
cltd
xchg
or
ljmp
insl
pop
push
icebp
cmc
add
push
and
xchg
loop
fiaddl
test
add
jns
jmp
jb
add
movsl
mov
pop
pop
daa
inc
mov
clc
movsb
add
sbb
xchg
addr16
xor
clc
jle
add
cmc
add
lods
pop
xchg
and
add
push
mov
push
cmp
mov
push
fidivrs
stos
jmp
add
andl
jnp
add
fimuls
sbb
leave
jb
scas
push
add
lock
jns
out
fildl
add
add
or
lret
push
pop
mov
lahf
dec
sbb
add
nop
pmulhuw
lods
in
aas
mov
or
or
mov
and
add
popa
xchg
adc
mov
fiadds
in
cld
dec
clc
pop
add
pop
test
add
movsl
sysret
and
icebp
jmp
add
jl
adc
cwtl
cmpb
ljmp
mov
int
and
mov
sub
mov
frndint
dec
xchg
dec
cmp
fstpl
mov
lds
add
add
movsb
lods
jo
add
add
lret
stos
das
xor
or
add
aam
adc
cltd
cmp
rolb
add
out
xchg
add
sbb
xor
add
subl
idivl
inc
push
mov
jp
cmp
int3
mov
pusha
fcmovbe
add
add
psubq
adc
mov
fstpt
dec
ja
movsb
fsubrs
add
mov
push
dec
xchg
test
inc
push
int3
sbbb
cmc
fwait
mov
pop
cmpsl
cmc
ficompl
add
fadds
aaa
mov
mov
test
add
bound
in
add
sub
add
sahf
cmc
sub
push
dec
add
cltd
rcrl
adc
enter
xchg
jbe
jb
pop
cwtl
xor
ja
adc
lret
adc
imul
lahf
xor
mov
imul
sbb
mov
outsl
shr
fiaddl
xor
cltd
jns
inc
loopne
movsl
mov
out
xchg
xlat
adc
daa
call
cmpsl
fstpl
call
movsl
imul
out
or
sbb
pop
xchg
mov
add
rcr
pop
fmul
lock
mov
pusha
mov
hlt
or
dec
fbld
inc
add
adc
jbe
add
jmp
outsl
loop
adc
cmpl
add
adc
and
add
xchg
add
jg,pt
in
test
mov
add
cmp
or
add
adc
mov
pop
mov
mov
add
push
icebp
scas
rcr
repnz
imul
lahf
in
xchg
lcall
cmpsb
dec
mov
push
cwtl
repz
in
fbstp
jg
push
adc
pop
sub
xchg
ret
pop
sub
pop
movsb
lcall
xchg
scas
sub
mov
ljmp
cmp
cmp
lret
jno
nop
cmp
mov
aaa
ljmp
adc
mov
or
imul
int3
ret
add
jnp
jg
jge
sbb
dec
add
scas
jno
test
sub
outsl
and
lds
sbb
add
mov
push
bnd
mov
or
mov
nop
add
int3
adc
rcrb
sub
sbb
scas
jnp
mov
rolb
jp
add
adcb
test
cltd
cmp
xor
add
inc
push
in
lods
aad
or
leave
sbb
mov
add
mov
jge
insl
mov
sbb
inc
out
fs
dec
dec
add
test
repnz
test
movsb
fstpl
jb
stos
adc
out
jne
push
out
lret
aas
sbb
out
add
in
mov
push
xchg
xchg
mov
into
mov
or
fldl
test
cs
add
and
xchg
cltd
pop
mov
sub
add
add
lret
push
lods
andl
in
adc
or
inc
lcall
cmc
into
xchg
popf
cwtl
gs
cltd
push
jns
loopne
xchg
jg
adc
ja
push
inc
divb
cld
jne
cmp
inc
outsb
ja
cli
int3
mov
mov
popa
mov
shrb
popa
daa
icebp
test
adc
add
or
leave
scas
cmpsb
movl
mov
push
xchg
dec
xor
add
push
xchg
push
adc
sbb
stos
jge
dec
sti
popf
cmp
inc
loope
aaa
xor
jle
insl
sub
jg
add
out
in
inc
out
adc
stos
sbb
adc
push
pop
add
cli
adc
or
in
fmull
cmp
leave
lock
stc
icebp
sbb
pop
lds
out
xor
inc
jno
add
les
add
add
pop
cmp
icebp
enter
popa
das
sahf
jge
lods
xchg
mov
ja
add
add
pushl
nop
and
add
add
add
add
iret
jno
lods
ret
dec
pop
adc
cwtl
js
insl
sbb
add
add
add
rolb
outsl
cmc
into
xchg
jmp
xor
notl
jg
sbb
or
stos
sbb
outsb
add
add
cmp
sbb
pusha
loop
jmp
leave
and
and
add
sub
fwait
add
cmovg
imul
outsb
add
mov
repz
add
push
mov
sbb
xchg
mulb
in
ljmp
mov
inc
add
pop
ret
pop
clc
add
adc
xchg
pop
cmp
add
scas
mov
cltd
sub
cmp
xor
testb
inc
jle
mov
mov
add
push
or
add
push
int
cmp
cmp
mov
mov
rorl
xchg
dec
sub
sub
fisubrl
or
cmp
jb
cmpsl
cmp
fcomi
push
jns
cmpsl
pushf
cld
es
rcr
insb
repz
mov
adc
jecxz
add
scas
add
test
jle
loope
xchg
sbb
sbb
into
pop
test
cli
into
cmp
addr16
push
pop
pusha
pusha
pop
or
bound
sub
stos
scas
mov
sbb
jecxz
std
add
add
or
mov
push
aas
dec
outsl
mov
shlb
cld
add
mov
cwtl
add
dec
mov
jnp
int3
jle
add
out
arpl
add
jo
add
and
fadds
add
mov
pop
dec
in
mov
in
adc
add
add
mov
add
stc
scas
or
ljmp
cmp
mov
je
mov
incl
mov
lea
jmp
inc
mov
out
push
xchg
mov
popa
xchg
pop
fxch
pushf
jmp
pop
add
add
fimull
repnz
add
cs
ret
xchg
add
add
test
leave
or
mov
imul
cmp
or
adc
aas
or
add
sub
mov
jb
lods
mov
add
xchg
pop
and
in
jge
data16
loope
dec
cmc
cmp
ret
add
sub
cmpsb
lret
icebp
mov
push
push
cld
dec
push
mov
daa
int
ficoml
sbb
enter
pop
push
test
mov
lcall
cld
jle
add
jmp
movsl
mov
mov
sub
inc
dec
or
fidivl
mov
test
add
push
js
add
mov
pusha
push
dec
push
sub
iret
stos
icebp
ds
mov
jl
mov
lds
add
jns
dec
jb
aaa
jp
lret
negl
cmc
jecxz
add
sahf
popa
cwtl
xchg
sub
mov
test
jle
in
sub
neg
inc
imul
inc
inc
dec
sti
pop
repnz
pusha
lock
jmp
adc
jns
mov
mov
add
fidivl
cld
sub
pop
xchg
mov
xchg
inc
sbb
das
cmpsb
jge
fwait
std
add
xchg
ret
mov
roll
add
push
jnp
add
mov
add
add
iret
stos
fwait
add
sub
shld
dec
arpl
add
add
pusha
jae
add
lahf
jnp
loope
adc
dec
add
fldl
test
and
cltd
adc
cmp
int
inc
arpl
add
add
push
or
xchg
push
insl
inc
add
mov
daa
mov
push
sub
push
out
push
dec
int3
add
pop
xchg
add
stos
adc
aam
jge
dec
add
cltd
dec
mov
adc
into
lret
add
int
cltd
ljmp
insb
cmp
inc
ljmp
out
cmp
adc
and
push
pop
jno
orb
adc
arpl
jnp
cmp
cmpsb
jne
and
add
add
add
mov
add
aam
in
jmp
iret
sbb
cmp
imul
push
pushf
scas
lret
add
inc
jns
test
stos
aad
push
mov
push
xchg
mov
push
ja
popa
enter
sbb
out
ret
std
repz
out
add
aaa
frstor
insb
jecxz
and
ss
push
inc
rcrl
ret
mov
sub
jmp
sub
push
in
ja
push
aam
movsl
in
dec
rcr
cmp
out
jae
push
insl
mov
scas
test
dec
fimuls
divb
adc
xchg
xor
sbb
testb
add
sbb
or
xor
push
je
das
out
sbb
pop
xor
mov
repz
das
int
jmp
xchg
cmpsb
pushf
cmp
in
push
jbe
cmpsl
xchg
adc
lret
xchg
mov
fsts
xchg
das
fisttpl
pop
stos
sbb
in
pop
inc
mov
inc
cmpsl
xchg
push
rolb
adc
cmp
adc
push
push
or
rcll
mov
pop
cmp
call
data16
mov
cld
sub
shll
loopne
push
mov
inc
pop
clc
scas
xor
inc
mov
test
mov
fwait
incb
lds
cli
pop
jb
lahf
mov
pop
in
or
subb
dec
lock
cmp
inc
loope
aaa
xor
or
ret
push
je
add
ljmp
jo
pusha
xor
ret
add
add
in
lret
add
cwtl
sub
mov
into
adcl
aas
mov
dec
std
popa
add
lock
push
sahf
in
push
or
xor
mov
add
inc
mov
dec
scas
jle
mov
mov
sahf
cmp
push
cmp
popf
cltd
sbbb
inc
dec
fs
pop
ds
pop
cld
xchg
fmuls
lret
lock
scas
jmp
out
jg
xchg
into
push
mulps
cmp
xchg
in
fdivrl
mov
adc
or
jmp
mov
mov
jne
out
xchg
jnp
adc
addr16
outsl
loop
scas
cmc
xor
lods
pop
loopw
into
pop
sbb
and
hlt
int
xlat
scas
aas
out
mov
mov
mov
pop
lock
popf
mov
mov
bound
push
enter
push
xchg
add
xor
xorl
mov
stos
int
inc
push
std
mov
sarl
push
add
inc
addr16
aaa
jge
push
test
or
rcl
sbb
outsl
and
int
xchg
inc
ret
cs
add
dec
inc
idivb
add
cmp
and
add
mov
mov
and
add
jne
xchg
mulb
adc
dec
cmpsl
pop
inc
push
pop
sbb
or
cwtl
or
push
andb
add
xchg
adc
inc
into
shrb
mov
sahf
pusha
int
sub
mov
dec
sti
out
jg
pop
outsb
cmc
repz
ss
ljmp
add
out
xchg
pop
outsl
enter
dec
cltd
inc
lods
push
movsb
mov
xchg
mov
ret
das
jmp
movsl
mov
pop
test
add
adc
mov
or
or
add
inc
test
mov
fisubl
mov
jp
inc
push
in
cs
aaa
jbe
mov
add
pop
add
sub
dec
add
sub
add
jnp
imul
add
lret
cwtl
xorl
push
ljmp
fnstsw
bound
notb
test
aaa
jo
adc
xor
aas
mov
incl
adc
test
push
and
add
aam
jno
sahf
enter
dec
xor
add
data16
fidivrl
pop
mov
mov
push
call
mov
loopne
add
sbb
add
mov
jle
movsl
xchg
stc
jp
jge
and
into
jg
sarb
add
add
add
les
add
add
popf
popa
int
dec
bound
jns
mov
dec
mov
in
mov
std
inc
mov
test
xlat
inc
stos
out
daa
add
and
stos
push
add
loopne
leave
repz
cmc
fld
arpl
sahf
adc
in
enter
fldenv
jle
mov
lcall
jle
ret
push
jns
push
dec
push
dec
in
mov
haddpd
movsb
fdivrs
or
add
clc
mov
lahf
syscall
xor
push
dec
jae
jmp
or
adc
mov
add
sbb
fidivl
add
adc
fldl
jns
outsl
xchg
test
sahf
sbb
xor
pushf
jnp
push
xchg
inc
jmp
sbb
jnp
lds
jg
lods
sub
adc
aam
add
pushf
cmpsb
jecxz
loopne
add
adc
sub
stc
mov
add
add
mov
mov
into
mov
rolb
xchg
das
fildl
add
jo
xchg
sub
stos
push
addr16
arpl
jmp
and
jns
dec
mov
pop
sub
lods
repz
sub
add
out
gs
push
addb
popf
inc
popa
sub
leave
xchg
lahf
mov
fucom
div
sahf
pop
cwtl
push
inc
or
mov
or
in
jnp
in
add
icebp
dec
xchg
repnz
cmc
hlt
sub
xor
xchg
test
cmc
fs
add
lahf
sub
dec
daa
addb
add
aad
jl
or
cmp
add
adc
mov
and
int
dec
movsl
lahf
nop
add
push
lock
ret
xlat
or
mov
pxor
pop
imul
pop
inc
mov
and
inc
xchg
inc
js
xlat
scas
fdivr
add
add
icebp
repnz
shrl
adcb
cmc
fst
mov
shrb
mov
add
outsb
and
imulb
pushf
aas
add
add
aad
out
out
sbb
jl
sub
mov
out
push
arpl
mov
add
add
adc
jmp
and
pushf
fcoms
sbb
xchg
or
imul
add
add
loope
mov
mov
imul
mov
mov
add
sbb
stc
or
nop
fistpll
pop
jle
xchg
lahf
pop
sbb
xor
hlt
push
sbb
xchg
jbe
in
xchg
xchg
sbb
push
dec
push
movl
es
sub
clc
mov
add
add
pop
fdivrs
cmp
loop
add
clc
push
dec
or
jecxz
add
push
adc
add
add
xchg
add
mov
jne
inc
pop
add
adc
add
xchg
nop
addr16
out
add
sbb
mov
or
pop
sub
add
mov
jmp
push
or
in
xchg
sbb
add
add
mov
sub
add
pop
push
adc
jecxz
inc
add
add
cmpsb
push
jg
mov
add
push
or
add
out
pop
sub
ret
add
fdivrl
bnd
sti
jl
ljmp
add
loopne
jo
hlt
out
xor
xchg
sub
pushf
jb
pop
rcl
adc
int3
add
sub
xchg
in
push
mov
mov
or
mov
sub
jae
shlb
cmp
xchg
stc
xor
add
add
mov
addr16
inc
sub
add
jg
out
aad
ret
ficoms
mov
lret
aam
into
jg
pop
and
daa
aaa
mov
jl
mov
add
push
ljmp
sub
add
push
cmpsb
sbb
xor
imulb
ret
imul
ficomps
xchg
xor
adc
adcb
fwait
push
mov
push
push
sbb
imul
jl
inc
mov
add
ljmp
jge
pop
jb
into
adcb
mov
jnp
ljmp
mov
in
or
insl
xor
in
add
loopne
mov
add
in
movsl
add
cs
cli
push
adc
dec
add
xor
add
add
cli
adc
cmp
stc
push
shll
inc
or
jne
lcall
or
add
mov
jmp
loop
je
add
outsb
xchg
mov
sahf
roll
pushl
add
imul
pop
add
xchg
cld
sbb
add
add
ret
js
scas
add
xchg
in
add
add
jmp
jae
or
jbe
mov
mov
sahf
mov
dec
add
push
daa
push
inc
mov
gs
lds
lahf
xlat
sbb
lea
out
and
sub
test
pop
repz
push
add
test
jmp
leave
mov
adc
jo
mov
out
or
add
and
pop
lret
add
jl
xlat
mov
add
push
sbb
imul
mov
fs
scas
mov
lahf
add
ljmp
scas
inc
add
add
fisubrs
fwait
ja
sub
in
and
int3
and
add
add
and
pushf
popf
out
test
lods
pusha
jo
sahf
xchg
fwait
dec
icebp
pusha
add
add
add
push
addr16
cmpsb
ds
add
add
lock
push
mov
cmp
and
or
loop
xor
sahf
scas
push
loope
pop
incl
sbb
add
mov
xchg
lahf
or
movsl
xor
add
jb
inc
sbb
repnz
mov
mov
int
lock
divl
add
jo
add
cmp
jne
xchg
lcall
lea
add
fisttpll
add
add
push
add
jecxz
fistpl
push
jnp
mov
int
pop
outsb
add
mov
dec
and
xchg
nop
mov
fisubs
adc
cmp
xchg
mov
xchg
mov
movsl
repnz
fldcw
mov
adc
jno
pop
test
inc
add
pop
ljmp
test
roll
test
pop
into
jg
sarb
add
lods
test
mov
jle
iret
test
sbb
cmp
ret
aad
and
popf
jecxz
add
mov
rolb
push
aaa
sub
jne
js
cmpsb
mov
push
mov
jno
cltd
add
mov
push
dec
std
add
xor
adc
mov
in
xchg
je
sbb
xor
or
mov
sbb
scas
mov
dec
sbb
movsl
sub
lods
dec
push
mov
loope
inc
sahf
leave
int3
add
cmpsb
cmc
sub
mov
aam
add
pop
or
into
lret
add
test
in
or
loop
ret
mov
insl
inc
das
fiadds
sahf
test
xor
xor
cmpsb
jmp
push
add
push
fwait
add
add
into
ds
add
push
jmp
adc
cmpsl
rorb
mov
popf
inc
add
aad
lea
add
xchg
inc
andl
and
jae
jge
dec
cmp
cli
loope
les
add
mov
mov
sbb
filds
sbb
popf
loop
inc
add
movsl
pop
aas
sti
aaa
testl
add
jno
add
and
add
sbb
lret
lods
xor
jp
xchg
dec
mov
or
jb
mov
stc
dec
lahf
addr16
sahf
je
and
sub
jl
sbb
push
jge
scas
push
stc
jnp
cmpl
iret
xorb
cmp
adc
fs
jle
xchg
jnp
nop
das
test
adc
ret
pop
jmp
test
sti
pop
add
mov
sbb
pop
add
and
add
mov
mov
push
adc
add
xchg
xchg
test
jbe
push
sbb
out
inc
repz
xchg
push
stos
adc
xchg
in
xchg
or
insb
faddp
jo
fistps
xchg
mov
jmp
xchg
push
call
es
lea
push
mov
mov
add
roll
aam
add
imul
lret
cmp
push
sahf
repnz
test
or
insl
adc
add
jle
mov
pop
div
jmp
sub
mov
stos
enter
pop
dec
pop
ljmp
stc
loop
push
xchg
push
mov
add
and
add
add
mov
ss
loop
adc
and
sbb
inc
aas
pop
xchg
push
mov
mov
dec
add
outsb
shr
cmpsl
add
add
mov
dec
add
add
push
lods
cwtl
pop
or
xchg
dec
nop
sub
mov
jo
pusha
mov
test
jge
jb
andnps
add
loop
fs
sbb
nop
cli
out
imul
int
cmc
sbb
add
dec
push
daa
jecxz
stc
xchg
jmp
lods
pop
pop
adc
lea
sub
xchg
add
sbb
add
xor
pop
lahf
adc
xchg
fisttpll
loopne
test
outsl
ret
subl
cmc
into
xchg
xchg
mov
mov
lock
mov
or
add
inc
mov
xchg
add
sub
add
xor
leave
add
stos
imull
xor
mov
xlat
mov
cmc
dec
dec
sub
mov
out
sbb
push
mov
and
out
push
addr16
clc
mov
mov
repz
mov
sldt
add
xor
idiv
jno
add
or
nop
mov
sub
add
add
adc
jg
cmpsl
in
enter
arpl
push
push
cmp
mov
sahf
sbb
jo
paddb
idivb
sub
cmp
aaa
movsl
popa
das
icebp
adc
xchg
and
cmpsb
mov
sbb
xchg
xchg
adcb
fdivl
call
std
test
imul
shr
jle
fists
adc
loope
incb
add
je
outsb
fisttpll
dec
mov
add
add
sbb
dec
sbb
sti
repnz
adc
shlb
or
push
add
add
inc
jge
pop
or
lcall
add
add
pop
jle
add
imul
pusha
movsl
or
sti
jne
ret
add
add
cwtl
dec
mov
in
add
shlb
xchg
pop
push
sbb
fwait
mov
add
mov
in
repnz
jno
add
adc
sub
lahf
adc
dec
push
jb
add
aad
mov
aaa
lret
add
add
cmp
sbb
xor
add
cmp
out
ficompl
or
enter
addl
mov
jns
out
or
pop
push
loope
add
add
cmp
sbb
loope
cmp
repz
arpl
jo
aaa
lods
enter
je
mov
shrb
fistl
hlt
fisubrl
inc
sub
adc
negb
inc
inc
call
xor
icebp
mov
out
test
xchg
mov
mov
sbb
cltd
cwtl
les
add
add
icebp
xlat
andb
jg
add
add
push
test
or
add
add
rcrb
lcall
push
stos
cmp
into
mov
outsl
dec
push
add
add
dec
add
ljmp
out
and
jbe
jne,pn
and
xchg
push
dec
push
sbb
mov
add
add
jb
push
lahf
aaa
aaa
fs
rorb
and
add
lods
pop
addr16
sub
add
roll
add
jb
nop
mov
mov
add
add
cli
rolb
push
or
pop
test
push
dec
add
add
dec
inc
jle
inc
andl
add
outsl
outsb
jne
mov
xor
cs
test
imul
sbb
lret
xor
mov
add
mov
lret
ret
insl
fidivrs
pushf
sbb
dec
ja
loope
pushf
adc
ss
xlat
scas
imul
add
jl
insb
add
lds
add
and
mov
mov
mov
sarl
sub
lahf
add
sbb
xchg
xchg
test
cltd
aad
fadd
push
xor
adc
add
sti
jne
pmaxub
xchg
ret
dec
xchg
pop
cs
stos
add
mov
ds
daa
shrl
repnz
push
cmp
pop
ja
or
lret
or
add
mov
mov
push
out
pop
in
outsb
fiaddl
scas
jae
or
jecxz
or
cmp
pop
fbld
lahf
fmul
pop
push
add
xchg
dec
add
lock
in
loopne
lcall
and
pusha
clc
bound
fxam
fcoms
fldpi
jbe
rorb
add
sbb
add
repz
call
push
and
push
sub
xlat
add
xor
cwtl
loopne
xchg
cmp
mov
sahf
lds
or
shrl
dec
loop
jg
rcr
push
xlat
data16
stos
add
add
mov
loop
out
jl
fstl
enter
sub
adc
jne
add
pop
push
jge
xchg
mov
fistl
add
add
cmp
sbb
fisubs
nop
imul
push
lcall
fsubrl
lods
add
mov
test
mov
leave
in
rclb
push
pop
jo
hlt
jge
add
add
insl
mov
dec
cmp
add
pop
mov
icebp
adc
ljmp
adc
int3
out
push
shr
ret
mov
cmc
inc
test
and
dec
add
add
ret
sbb
notl
xchg
out
rclb
mov
test
cmp
roll
adc
add
pushf
sub
cmp
adc
lds
hlt
xchg
lret
lcall
pop
shrl
pop
scas
pop
lret
clc
push
jg
addr16
stos
insl
in
cmc
pop
mov
add
add
xchg
mov
sub
gs
ficoms
xchg
sbbb
or
jmp
in
jmp
fs
xor
mov
add
add
subl
add
add
cmp
mov
insb
out
adc
dec
ret
lea
mov
fiaddl
add
ja
getsec
mov
fdivrl
add
cmp
add
out
xlat
jnp
mov
dec
mov
push
mov
add
mov
sbb
add
sbb
leave
add
add
add
add
int
sbb
add
add
mov
sub
push
add
xlat
add
add
xchg
ja
fbstp
mov
adcl
pop
roll
loopne
or
add
ss
pop
add
rcrb
rorb
add
pop
jmp
sbbb
shrl
mov
cld
sub
sbb
lret
pushf
int3
add
shlb
jg
notb
lcall
push
add
inc
mov
add
cli
shrl
pushf
inc
cmpsb
sbb
add
sarl
mov
loopne
add
add
out
aas
stos
and
fildl
xor
or
sbb
cs
addb
das
scas
push
xor
add
pop
adc
add
gs
sbb
and
adc
in
add
int3
sub
jmp
mov
scas
sbb
or
xorb
clc
sbb
and
jg
add
dec
pop
push
push
add
test
mov
popa
lret
jecxz
lret
jge
nop
mov
sbb
jl
mov
loope
into
notb
jae
push
xor
jge
test
add
add
add
inc
shlb
pop
aas
cmc
imulb
sbbb
pop
add
xor
pop
lahf
mov
cmp
cwtl
push
cli
xchg
add
mov
fsts
lea
mov
pop
lret
int3
push
movl
imul
popf
mov
adcl
cs
add
fidivl
add
aaa
mov
lcall
or
das
mov
addr16
add
dec
add
daa
xchg
stos
pop
add
add
cli
mov
add
inc
test
loope
add
add
xor
imul
mov
jae
cld
and
mov
testl
dec
sbb
xchg
adc
mov
insb
or
add
push
mov
add
xchg
inc
add
fdivr
mulb
add
mov
adc
cmp
xor
negl
xchg
xor
and
inc
dec
outsl
fiaddl
add
test
lret
sub
xor
xchg
sahf
es
out
aad
rcl
add
add
pop
pop
fidivrl
cwtl
call
adc
jae
push
mov
pushf
mov
icebp
cmp
data16
inc
cmp
int
pusha
pop
push
adc
push
ficoml
jmp
mov
add
leave
pop
add
sbb
aam
divl
mov
int
jne
xor
sbb
sub
add
lret
xor
fidivl
add
flds
jnp
jns
add
xorl
dec
mov
popf
mov
insb
mov
repz
cmp
add
add
xchg
xchg
mov
in
push
addb
pop
andl
sbb
adc
and
fdivrl
fisubl
add
add
mov
push
cmp
push
pop
jg
stos
cmp
notl
in
dec
pop
dec
insb
test
idivb
xchg
daa
rolb
jmp
std
outsl
jbe
test
xor
daa
cmp
pop
vpunpckhbw
xchg
dec
das
outsl
and
movsl
cs
adc
pop
push
push
lea
xor
ds
xchg
dec
and
fucomp
cmp
jg
jl
arpl
daa
jne
mov
xor
or
add
test
add
stos
push
pop
pushf
sbb
mov
dec
in
adc
out
mov
stc
stos
fdivrl
outsl
jge
mov
movsl
add
add
jge
and
add
arpl
jmp
fists
lcall
add
add
pop
pushf
arpl
pop
sub
iret
push
xor
push
imul
xchg
jge
lods
push
add
inc
shl
add
and
mov
inc
in
jmp
push
push
nop
jl
ss
loopne
jg
pop
or
stc
mov
xchg
xchg
mov
call
testl
stos
push
jae
push
ja
nop
lds
insb
jge
sbb
add
jo
ret
xlat
inc
out
xchg
out
adc
js
push
jge
jmp
js
ss
jecxz
jmp
enter
ja
pop
sub
shr
sahf
repnz
cli
cmp
mov
xchg
mov
adc
call
mov
push
pop
loope
pop
dec
mov
or
sub
pop
ja
loopne
pop
dec
fcmovbe
push
mov
subl
test
push
mov
inc
adc
pop
inc
lock
add
repz
shl
mov
fiaddl
mov
mov
add
or
scas
cmpsb
scas
jle
and
mov
sbb
cmpsl
lods
sub
addb
dec
dec
and
cmp
hlt
mov
add
add
mov
push
add
add
nop
sbb
fdivrs
jle
cld
inc
lds
cmp
add
pusha
insl
lods
inc
push
adc
add
roll
push
cltd
push
push
pusha
cs
add
push
in
repnz
mov
in
mov
jae
sbb
fptan
pop
mov
cmc
pop
jb
and
jb
ret
cmc
lods
ljmp
sub
mov
pop
mov
xlat
pop
xor
lret
fwait
mov
dec
je
pop
inc
pop
push
and
ss
and
adc
fucomi
in
add
jne
test
add
push
pop
push
sbb
or
clc
add
outsl
push
mov
pop
sbb
add
inc
lcall
ret
shl
add
aas
cli
jae
add
imul
pop
mov
hlt
mov
or
adc
cmp
jns
and
cltd
pop
add
pop
gs
inc
jb
pop
rorb
jmp
mov
xchg
cmpsb
and
addr16
movsl
dec
iret
push
outsl
sbb
add
add
mov
pop
mov
test
in
jnp
jge
xor
add
add
xor
ds
lcall
fidivrl
js
add
add
xchg
push
fs
negl
add
mov
and
jle
test
fcoml
pusha
out
addr16
add
add
sti
arpl
pushf
test
mov
bound
fucomip
and
leave
sub
test
pop
push
or
push
add
add
daa
mov
aaa
dec
add
add
and
push
mov
in
movsb
ffreep
xor
dec
or
push
jnp
ds
pop
lret
xor
lods
enter
rcrb
adc
dec
add
add
pop
jnp
dec
insb
jmp
stos
cwtl
subl
pusha
ljmp
sbb
push
roll
xor
push
outsb
les
xchg
daa
repz
push
das
add
add
sbb
dec
add
add
repnz
pop
jle
mov
lea
js
jl
mov
outsl
lods
xchg
sbb
lret
pop
mov
add
call
sbb
jnp
addb
add
adc
test
stc
mov
test
scas
cmp
je
add
mov
sbb
in
divl
int
cmp
lret
in
loope
inc
sti
mov
mov
pop
pop
xchg
xchg
pop
xrelease
and
jl
fistpl
xchg
lds
arpl
lods
or
sbb
push
testl
cltd
sub
or
add
jae
xor
jp
leave
push
bound
inc
jnp
icebp
movsl
jns
add
push
push
mov
inc
jge
and
jmp
mov
jne
iret
testl
insb
add
add
xor
cmc
int3
add
leave
or
addb
add
ss
mov
push
xchg
cmc
jp
scas
push
lock
mov
outsl
sahf
mov
adc
fstp
dec
adcb
mov
cmpsb
fwait
jb
out
add
loop
mov
std
jbe
add
adc
add
dec
iret
add
add
lahf
sbb
add
add
leave
jmp
add
add
push
jl
fistl
lods
jge
popa
add
add
mov
xchg
imul
sbb
adc
or
ljmp
imul
mov
mov
call
cli
testb
daa
inc
push
add
add
aaa
ljmp
and
push
dec
xchg
pop
cmpsw
jmp
adc
test
lock
bsr
pusha
fwait
mov
sarb
dec
dec
ficoms
sbb
sti
mov
gs
add
sbb
add
xchg
mov
jp
pushf
add
cs
xchg
inc
add
jmp
cld
mov
clc
jae
inc
push
mov
add
lcall
jmp
and
repnz
addl
adc
add
arpl
adc
pop
add
inc
or
repz
scas
or
out
or
sbb
test
or
push
sahf
or
add
add
jno
push
dec
push
cmp
out
into
jns
jmp
mov
test
fidivs
aaa
xchg
jge
fisttpl
test
arpl
lock
fistps
mov
imul
mov
push
or
push
sub
cmpsb
sub
or
sub
mov
lcall
in
xor
push
add
xor
or
push
inc
cmpsb
dec
mov
fs
jb
sbb
jp
inc
push
unpckhps
ret
cmc
into
jmp
add
test
int
add
sbb
add
push
jg
loopne
movsl
cmpb
dec
dec
mov
mov
add
repnz
push
mov
aam
in
add
mov
imul
sbb
cwtl
add
or
cmp
sbb
and
mov
pop
ss
or
std
orl
jp
add
add
repz
cli
js
add
ljmp
dec
fisttpl
ret
push
imul
ds
cltd
ss
cmp
fsin
popa
lods
mov
cmpsb
in
jle
dec
jb
or
sbb
push
sub
add
call
push
jle
and
mov
stos
push
mov
dec
xor
xchg
add
mov
mov
imul
imulb
sbb
daa
call
add
mov
mov
mov
mov
outsl
in
ret
inc
xchg
mov
fisttpll
pop
outsb
adcb
dec
pop
jo
movsb
stc
int
cmp
ja
movsl
and
sbb
clc
or
inc
data16
pop
dec
popa
pop
pop
mov
add
pusha
in
std
cmp
in
sbb
cmp
add
pop
lds
xchg
add
fbld
sahf
or
mov
les
push
test
test
and
jle
pusha
dec
mov
jecxz
mov
in
lds
add
rcl
jns
xor
inc
leave
fnsave
int
cmp
add
sub
mov
mov
int3
add
add
test
add
jge
lea
pop
add
ds
add
adc
pop
nop
add
in
cmp
adc
inc
loope
pop
push
les
idivl
adc
sbb
mov
ss
dec
test
xchg
push
gs
roll
jp
sarl
push
test
add
ret
test
cli
js
add
adc
mov
iret
jp
xchg
sub
mov
xlat
loope
in
rorl
fldl
inc
xchg
outsb
or
cld
add
in
loopne
lock
cli
or
outsl
cwtl
inc
orb
add
or
cld
loopne
add
jmp
add
jnp
test
cmpsb
mov
xor
jle
add
dec
adc
mov
scas
imul
xor
rclb
add
out
inc
add
dec
jecxz
mov
cmp
les
cmp
jo
add
add
add
push
sarl
sub
mov
pop
push
aad
add
add
mov
xchg
add
pop
inc
mov
scas
add
add
in
pop
lds
add
sahf
icebp
int
repz
scas
inc
or
cmp
int3
push
add
add
lods
popf
jge
out
pop
lods
shll
jecxz
jns
leave
push
pushf
das
add
add
pop
xchg
rclb
mov
aaa
cmpsb
cmpsb
add
ret
mov
fld
daa
add
outsl
inc
lret
inc
inc
cmpsb
add
add
pop
pop
jmp
loopne
icebp
aaa
jl
mov
and
sbb
rclb
jnp
fmuls
dec
dec
lea
scas
sub
clc
xor
mov
xor
cmp
pop
test
adc
movsl
in
add
pop
inc
or
jge
movsl
sbb
jo
sbb
push
mov
enter
cmpsb
test
adc
cmp
out
push
loope
xor
pop
mov
adc
mov
cmp
add
test
decb
add
xor
adc
add
jo
data16
add
add
arpl
adc
repz
inc
add
xchg
fwait
aaa
aad
push
inc
mov
xchg
add
cs
pop
iret
das
out
adc
sti
sub
in
add
stos
out
pop
out
adc
out
lcall
xchg
inc
test
dec
add
pop
out
xlat
div
xlat
push
dec
ret
add
add
aam
popa
andb
jmp
jp
add
mov
or
int
gs
cmp
orl
fnsave
xor
jo
adc
arpl
pushf
loop
test
add
mov
mov
es
lds
cltd
inc
mov
mov
call
out
dec
lds
fld
sbb
push
cld
cmp
test
in
fidivrl
cld
push
clc
pop
add
mov
lds
in
ret
pop
xchg
loop
cmp
popa
inc
sbb
push
xchg
or
jo
insl
mov
xor
mov
sbb
ret
sub
sbbl
movsl
sbb
xchg
adc
mov
jl
dec
sub
and
lret
push
lods
ret
dec
jp
outsl
adc
pop
test
repnz
pop
cld
or
push
mov
out
cmp
xchg
in
mov
lods
cmp
fwait
bswap
jmp
negl
fimuls
icebp
mov
shlb
fcoml
inc
add
sbb
cmp
mov
xchg
jg
sub
mov
rcrb
adc
mov
mov
movb
add
pusha
jnp
add
jne
sbb
add
adc
jecxz
jmp
mov
xor
pop
add
div
xchg
les
std
xchg
pusha
sbbl
out
mov
repnz
lds
add
fmull
adc
jns
aam
iret
add
inc
xchg
mov
add
add
add
loop
push
mov
stos
icebp
jo
jae
add
popf
xlat
sub
adc
loopne
add
fsubrs
sahf
scas
xchg
in
inc
stos
dec
jl
inc
sub
stos
sbb
inc
mov
adc
xlat
add
or
es
loop
nop
xchg
mov
mov
and
inc
inc
ljmp
or
scas
sbb
push
hlt
mov
and
std
cmp
andb
cmp
mov
mov
xchg
arpl
lock
lods
push
fistl
add
push
mov
js
add
mov
jecxz
xchg
lods
or
pop
jge
pop
or
rolb
or
xor
xchg
and
mov
jb
inc
lret
lods
les
push
xchg
jnp
into
cmp
mov
gs
fnop
call
or
adc
adc
jns
sbb
mov
shrl
sub
sub
add
inc
adc
add
aad
pop
fnstsw
movsl
lahf
test
mov
adc
fsub
stos
scas
xchg
in
stos
add
mov
addr16
xor
fucomi
adc
sbb
shlb
and
sarb
cltd
push
fs
shl
andb
add
cmp
pop
loopne
jge
ja
sahf
pusha
imul
sbb
fwait
sbb
dec
subl
add
add
jnp
add
pop
sbb
mov
xchg
xor
out
mov
xlat
xchg
pop
aad
add
add
popa
xor
test
sub
push
or
int3
mov
aaa
cltd
mov
ljmp
out
fst
outsl
add
inc
int3
lock
push
loopne
fmul
nop
sahf
push
sti
mov
xchg
sub
add
ds
mov
xor
scas
xor
cmp
mov
lea
mov
jno
push
std
adc
or
ljmp
out
jecxz
adcb
les
loop
call
add
add
mov
mov
and
jno
adc
add
sub
mov
out
hlt
stos
sbb
xor
adc
inc
add
add
inc
inc
xlat
pop
aad
pop
out
cmc
into
jmp
ret
xchg
add
add
ljmp
pop
push
into
and
adcl
push
mov
movsb
rcl
in
enter
jecxz
addb
pop
int
inc
inc
leave
xor
fmull
sti
adc
bnd
es
add
add
mov
sti
and
jbe
sbb
dec
inc
cmp
out
scas
sarl
add
daa
subl
pusha
shrl
cmp
jl
addl
cld
in
pop
cwtl
push
repz
loope
xor
xor
outsl
cmp
mov
loope
sub
or
inc
leave
mov
and
mov
add
add
ljmp
xchg
pop
jmp
add
mov
cli
sub
jno
or
pop
loopnew
je
sbb
push
data16
imul
jmp
add
mov
and
add
loop
rcl
sbb
add
jp
sbb
inc
movsl
sub
pop
dec
adc
outsl
or
mov
xor
push
add
add
jns
dec
std
add
xor
xchg
cmp
outsb
push
push
push
sbb
mov
xor
pop
add
mov
les
cmpsb
cmp
decl
mulb
inc
inc
push
jle
fidivrs
mov
xchg
pop
sbb
mov
test
movsb
adc
or
xlat
icebp
call
out
idivb
lret
mov
mov
fsqrt
mul
ljmp
push
sub
loope
jnp
add
xor
xchg
pushf
icebp
out
fistpll
rcrl
iret
add
negb
fmull
cmpsl
call
test
push
clc
jp
xlat
scas
iret
adc
add
rcll
xchg
cmp
in
divb
adc
adc
xchg
adc
mov
add
data16
push
sbb
imul
mov
cli
xchg
test
pushf
push
bound
pop
outsb
adcb
aad
xchg
mov
pop
mov
add
add
incb
inc
push
loope
jne
es
mov
ja
pusha
mov
pop
mov
mov
mov
xchg
sub
add
mov
mov
xchg
in
xchg
sub
add
add
lods
sbb
xor
add
add
add
fstpl
mov
pushf
add
ss
adc
or
dec
mov
jge
hlt
out
ffreep
cmp
ss
jns
mov
lods
dec
outsl
mov
repz
or
scas
ja
jb
push
iret
cmp
sbb
add
imul
in
dec
adc
cmp
loope
or
sbb
je
pop
push
ljmp
pop
add
sti
mov
adcl
inc
push
repnz
lods
test
movsb
mov
int
fstpt
cmpsb
mov
add
add
jl
pop
push
mov
mov
in
shrb
addl
jmp
mov
std
adc
lcall
not
inc
push
add
dec
cmp
inc
cmp
jle
sub
dec
stos
clc
in
divl
xchg
or
xor
shll
xchg
add
add
adc
add
add
xor
jno
mov
push
sub
push
mov
js
jb
sahf
sub
mov
jnp
inc
jo
sub
dec
cmp
je
dec
scas
fimull
js
in
mov
int
jnp
jl
cmp
clc
or
int3
push
mov
jnp
pop
inc
fiadds
xlat
cmc
ret
cmp
sarl
in
inc
sahf
xchg
inc
lea
and
daa
push
cmp
cmpsl
jo
dec
test
sub
cmp
mov
cwtl
mov
mov
or
xor
adc
pop
rorb
in
sbb
ja
xor
xor
pop
fists
or
push
sahf
cwtl
cltd
test
mov
mov
mov
lret
inc
and
fldl
into
push
jmp
add
js
xlat
cltd
adc
push
add
push
mov
stc
dec
add
add
aaa
enter
dec
add
add
addr16
mov
sbb
or
xchg
popa
jne
add
es
cld
leave
push
in
sahf
jl
in
loop
inc
in
mov
scas
jl
lret
and
xor
pop
or
cmp
add
popl
jecxz
outsl
lds
cmp
dec
push
xchg
jns
leave
jle
pop
popf
jno
cld
into
adc
add
test
mov
cmp
add
out
sbb
push
ljmp
pop
cmpsb
shll
imul
pushf
xchg
es
push
out
add
scas
pop
add
aaa
shld
clc
add
cwtl
outsb
mov
inc
pop
cmp
add
or
test
jno
lods
ss
mov
into
adc
jge
add
push
sarl
and
fldenv
sbb
xchg
in
pop
fmul
movaps
lock
pusha
movsb
sub
jne
push
pop
iret
mov
iret
pusha
xorb
mov
dec
loop
jb
mov
test
xchg
xchg
shll
xor
xchg
pop
add
aas
sub
aaa
mov
pop
notb
mov
xchg
pusha
or
hlt
jae
pushf
outsl
lea
cmp
jecxz
jbe
mov
loop
movsb
es
outsl
push
and
imul
decl
cwtl
xrelease
stc
sub
loope
jbe
mov
lret
test
cmp
jb
pop
int
or
int3
lds
in
and
outsl
pushf
push
icebp
daa
mov
push
cmpb
lret
cli
pop
rorl
sub
add
pop
into
lods
sub
add
call
and
movsl
xchg
insl
add
add
mov
add
add
pop
xlat
out
out
ss
add
add
add
incb
add
test
pushf
aad
test
aas
add
add
lahf
mov
add
add
fiaddl
ja
inc
push
add
add
sbb
adc
add
scas
gs
sbb
fistpl
add
add
ficoml
shrb
jb
shrb
das
arpl
inc
sti
lret
addb
mov
mov
test
or
dec
cwtl
add
pop
enter
clc
and
rolb
loope
sbb
iret
rcr
fisttpl
fwait
and
sarl
insb
xor
gs
subl
add
out
cwtl
push
std
push
lcall
push
jno
std
imul
adc
stos
pop
xchg
adcb
adc
test
mov
je
test
mov
int
pop
divps
icebp
add
adc
les
jmp
inc
sbb
add
clc
lds
mov
aad
data16
push
lret
push
fmul
sbb
cmp
mov
popa
divl
repnz
shrl
adc
adcl
jmp
sbb
insl
add
jbe
stos
dec
loope
cltd
sahf
mov
das
out
and
mov
into
sbb
xor
sbb
cmpl
or
add
adc
push
out
test
sarl
repnz
cmc
movsb
daa
das
loopne
ss
cmp
dec
imul
jo
pop
push
insb
dec
or
lcall
aas
lds
adc
sarb
popf
loope
pop
adc
shrb
repz
adc
jb
data16
add
mov
into
adc
mov
movsl
push
in
ret
cli
arpl
jmp
jl
pushf
cld
lods
in
mov
lods
dec
shll
test
xchg
add
call
aas
push
enter
sbb
lock
jmp
cs
sub
cli
int3
adc
test
addr16
jb
ficomps
dec
hlt
iret
imul
int3
cmp
and
dec
cwtl
mov
add
in
dec
add
pushl
addb
sbb
sub
pop
sub
lret
gs
cld
mov
pinsrw
scas
add
add
mov
cmc
cmp
push
mov
andl
repz
add
sahf
lcall
cmp
mov
mov
int
dec
cmp
xor
add
test
ds
mov
add
pop
jae
jl
xchg
gs
push
cmc
mov
push
jmp
jecxz
lcall
int
sub
add
jb
aam
mov
out
push
mov
rcll
mov
test
add
add
loopne
test
outsl
aam
pop
cwtl
loop
lock
add
mov
aas
add
sub
ja
cltd
jb
add
filds
sub
push
add
mov
cmp
add
pusha
jecxz
mov
scas
mov
pop
ret
clc
add
cs
and
add
dec
nop
sub
subl
add
add
ss
sbb
sahf
rorl
mov
xor
add
jl
add
cwtl
rolb
mov
pop
fstp
xchg
add
icebp
in
pop
xor
cltd
out
dec
outsl
int3
test
add
xor
xlat
jne
jb
test
int3
clc
inc
mov
xchg
gs
push
idivb
sbb
add
in
mov
add
fildl
jl
lds
pop
jb
rcrb
jno
xlat
je
cltd
sbb
add
das
add
mov
add
add
push
cmp
sbb
sahf
iret
add
ja
cmp
sub
add
imul
jae
add
cwtl
cmp
loopne
sub
cmpb
icebp
cmp
shll
jg
sbb
test
inc
add
adc
cmc
hlt
pusha
inc
addr16
stos
mov
sub
call
xchg
sahf
mov
or
cmp
iret
pop
inc
mov
pop
ja
lods
test
je
out
call
xor
repnz
mov
addr16
cmc
cmp
std
or
outsl
add
push
jb
sbb
aam
and
pop
add
icebp
pop
add
popl
fcmovne
add
mov
push
add
insl
jo
push
jbe
add
or
js
jnp
xor
xchg
addr16
jb
mov
jmp
mov
les
ljmp
pop
pop
ret
dec
fisttps
xor
ds
add
add
popa
cltd
jnp
sub
int3
imul
adc
mov
sbbb
dec
adc
pop
xchg
rorb
sbb
xchg
shlb
cmpsb
push
lret
enter
and
lcall
jns
mov
dec
je
sahf
repnz
test
dec
jmp
xor
loope
push
idivl
mov
cmp
data16
add
push
pop
arpl
add
repnz
sbb
sbb
loopne
in
add
add
ja
pusha
jmp
sbb
jns
mov
out
add
and
and
in
add
jl
add
add
jp
pop
jbe
aaa
jns
push
lock
popf
je
or
jg
mov
or
fst
add
test
ljmp
andl
enter
mov
test
idiv
add
sbb
cmp
mov
push
add
dec
adc
add
sbb
lock
sub
pop
inc
xchg
add
in
sbb
popa
sub
mov
push
mov
inc
outsl
pushf
xchg
nop
push
daa
out
add
lret
add
jnp
in
add
pop
mov
enter
pop
fs
add
add
cld
mov
sbb
cmp
add
ret
add
add
lahf
ret
add
repz
mov
adc
sub
aas
adc
or
loopne
inc
add
cmp
insb
adcl
ds
add
add
mov
add
xor
add
mov
stos
mov
outsl
loop
push
les
cmp
add
test
scas
xor
xchg
sub
inc
add
add
push
sub
inc
sahf
xchg
gs
add
rolb
add
cmpsb
jbe
roll
enter
std
ret
add
add
cld
fisubrl
sbb
adc
dec
push
loop
mov
adc
add
lahf
push
jno
sub
ret
mov
add
push
adc
add
mov
popf
add
add
mov
add
mov
pop
push
imul
add
add
cmp
filds
add
add
xchg
add
jno
xorb
icebp
adc
add
add
mov
add
inc
add
outsb
roll
nop
fwait
xchg
xlat
jns
dec
fsts
lret
sbb
add
loope
aas
lret
xchg
movb
pop
test
jno
jg
mov
or
sti
jle
scas
add
add
lret
sbb
rorb
iret
repz
sub
imul
lret
addb
or
cli
lret
cmpsb
mov
add
jae
add
xor
test
xor
fldcw
negl
call
daa
nop
jp
stos
fdivrp
or
enter
mov
push
cmp
fldenv
loope
fnstcw
ljmp
mov
mov
rdpmc
add
sub
jg
pop
lcall
push
in
push
cmpsl
test
push
subb
into
dec
arpl
jecxz
aas
cmp
ficoml
mov
out
add
scas
mov
imul
outsb
lds
cld
ja
fdivp
fldcw
xchg
ja
push
movsl
push
cmc
add
in
addr16
movsl
push
adc
cmc
lahf
push
jp
mov
add
inc
jb
and
or
test
xor
sarb
fdivr
push
icebp
add
pop
rcr
mov
dec
xchg
cli
mov
mov
test
mov
dec
xlat
stos
push
int
cmc
and
xchg
test
mov
sbb
gs
mov
and
adc
jae
cmpsb
aad
jnp
icebp
inc
aad
sbb
mov
adc
mov
add
mov
mov
xchg
sbb
std
cmp
icebp
cmp
xor
xchg
lock
shlb
ffree
fistpll
popf
ret
aam
cld
loopne
stos
jne
xchg
add
lcall
jno
clc
dec
rclb
cwtl
psllq
push
les
add
jp
cmp
push
repnz
cmpsl
call
cmp
arpl
add
loopne
jl
sahf
inc
xchg
add
adc
out
add
add
dec
addr16
jle
sti
jmp
outsl
pop
cld
or
stos
push
loopne
mov
add
repz
into
and
mov
enter
cmp
add
add
add
sub
sbb
mov
mov
incl
rolb
out
cvtps2pi
add
dec
xor
daa
pop
inc
jecxz
jnp
cwtl
rorb
dec
mov
push
jbe
data16
mov
mov
add
mov
pop
outsb
clc
lds
sbb
push
shlb
push
sbb
into
jge
jp
leave
sbb
add
add
in
jne
inc
xor
fsts
mov
add
movsl
arpl
pop
xlat
lahf
int3
fucom
sahf
pop
xor
jns
add
add
insl
pusha
pop
push
sub
pop
adc
mov
adc
xor
mov
sbb
pop
add
fnstcw
cld
movsl
mov
xor
adc
inc
adc
cmc
pop
jge
pop
jle
loope
mov
pop
pop
push
push
test
mov
sbb
xlat
sbb
jae
jo
shll
push
mov
cmp
add
aaa
cli
adc
test
push
leave
addl
fsubs
shlb
push
jne
lcall
push
cli
in
test
insl
and
pop
or
lds
xor
jecxz
test
and
scas
dec
loop
ja
xchg
pop
gs
insl
pushf
push
xor
lods
mov
adc
cmp
movsb
xchg
iret
cmc
mov
mov
ljmp
push
mov
add
pop
mov
ret
adc
add
adc
and
mov
test
push
and
add
mov
add
int
lock
inc
std
sahf
sbb
adc
cmp
adc
outsb
rorl
inc
xor
inc
or
xor
loop
mov
push
jp
jmp
add
pop
mov
mov
sbb
sbb
call
pushf
jmp
out
mov
bound
sbb
adc
sub
xchg
cmp
add
inc
push
mov
mov
mov
jecxz
add
cmc
inc
ret
or
add
int
mov
ret
jo
lcall
ljmp
xor
xor
add
add
fldenv
idivb
nop
movsl
sub
out
into
jnp
shll
decl
imul
int3
mov
sub
cmpsb
popa
icebp
mov
push
insl
andl
fwait
js
ds
sub
les
sarb
roll
add
xchg
arpl
add
jl
mov
mov
add
aad
mov
xchg
push
cmp
pop
xchg
cmp
add
mov
mov
in
dec
movsb
inc
dec
add
add
push
push
clc
cmp
and
adc
insl
jl
xor
jge
inc
mov
mov
add
int
popa
sbb
ret
adc
outsb
clc
mov
mov
hlt
mov
push
dec
add
stc
popf
ss
sti
mov
in
xchg
mov
fimull
sub
mov
adc
pop
clc
add
gs
adc
xchg
cmpsb
aad
mov
mov
movb
add
js
add
xchg
and
imul
dec
std
lds
push
jbe
addl
iret
or
lret
lahf
pop
mov
add
out
std
mov
sbb
movsl
mov
inc
push
inc
and
push
add
add
add
outsl
mov
mov
sbb
and
pop
clc
xchg
xor
pop
cmpsb
das
jle
cmp
in
fmulp
shrb
jg
sub
movsb
scas
stos
xchg
rcl
add
imulb
cltd
and
xchg
push
jp
mov
sbb
or
fs
sub
fidivrs
iret
int
mov
mov
or
add
mov
sbb
and
push
mov
popl
jo
mov
or
lcall
jmp
cltd
scas
jp
lcall
in
ds
mov
in
mov
adc
notb
pop
xor
cli
jnp
addb
jmp
fisubl
repnz
insb
les
mov
lds
adc
rolb
xor
cmpl
jmp
ret
pop
adc
cmp
mov
daa
movsl
ds
sbb
fldcw
sub
icebp
or
fimull
xchg
xor
sbb
pushf
popa
fcompl
xchg
ljmp
inc
mov
add
dec
push
test
in
mov
push
test
test
cmp
in
cld
or
pop
cs
arpl
mov
xor
cmp
push
inc
push
xchg
inc
aad
cmpsl
lods
sbb
pop
mov
ficoms
int3
and
lock
insb
pop
cwtl
adcl
daa
outsl
push
mov
stc
jg
add
adc
inc
testb
sub
aam
ret
std
daa
push
sub
clc
sarb
add
jo
mov
jecxz
xchg
scas
adc
cld
push
daa
xchg
insl
mov
fbld
flds
mov
mov
add
xlat
pop
faddl
push
int3
cld
push
scas
icebp
fwait
jg
ffreep
jle
inc
sarb
add
call
xor
stos
int
popf
test
add
add
mov
xor
inc
push
push
mov
bnd
pop
jl
inc
sbb
jmp
in
popa
adc
adc
add
add
push
stc
stos
add
push
sar
mov
adc
sub
and
xor
fmul
test
repnz
mov
shl
ror
or
jl
enter
sbb
mov
and
dec
mov
ret
or
aaa
arpl
push
sbb
aam
jecxz
shl
jg
iret
xchg
sahf
aaa
test
pop
orb
push
jnp
mov
mov
add
in
add
mov
fadds
in
mov
add
add
mov
cli
add
inc
addb
inc
movb
xor
sbb
push
add
sub
loopne
iret
add
xchg
add
cmp
add
popa
imul
mov
cmp
in
cwtl
incb
es
add
mov
cmc
add
into
adc
insb
popf
ljmp
ds
add
or
add
mov
add
cmp
xor
leave
pop
xchg
add
push
scas
add
push
add
lret
pusha
add
add
sub
mov
clc
add
in
add
mov
add
jb
add
jg
add
and
test
add
ljmp
dec
outsl
ret
add
jns
add
jle
dec
pop
sbb
cmp
xor
cmp
push
inc
add
adc
jnp
push
add
add
add
add
hlt
add
add
add
popf
jo
aaa
sbb
lahf
test
add
addb
jo
call
push
sub
outsl
inc
xchg
add
push
ret
cmp
movsb
push
sbb
iret
cmpsl
lahf
add
add
inc
xchg
cmpb
int
pop
out
add
add
add
jne
or
cmp
test
jp
pop
ds
daa
out
jecxz
xchg
and
cmpsb
sahf
mov
ljmp
andb
xor
xor
arpl
adc
adc
lcall
or
mov
repz
pop
mov
cmp
inc
out
xlat
repz
mov
fs
mov
mov
fsub
fisttpll
ss
mov
add
je
pop
and
mov
add
add
add
mov
ja
push
cwtl
pop
out
pusha
mov
dec
outsl
adc
cmp
xor
xor
inc
push
adc
or
inc
cli
call
push
adc
fsubs
int
cmp
popf
ret
ret
jns
jae
stc
vpsraw
and
mov
fstpl
mov
fwait
jns
add
dec
scas
adc
cwtl
lods
xchg
pushf
xchg
into
imul
xor
fsubrs
sar
sbb
cmp
in
xor
call
sbb
ja
xchg
imul
xchg
jae
pop
xchg
inc
inc
and
fwait
pushf
outsb
dec
sbb
jno
sbb
std
mov
pusha
lret
or
mov
fs
adc
or
loopne
aam
mov
xor
mov
aas
pop
fldenv
cmp
sub
es
xor
cmp
add
in
ljmp
push
cmp
ljmp
dec
xor
jge
cld
mov
imul
sub
and
cmp
dec
pop
pop
add
add
add
push
scas
add
xchg
jmp
jo
aaa
shufps
addr16
mov
dec
mov
push
sbb
bound
cmc
cmp
loopne
sub
mov
mov
cwtl
fbld
xchg
mov
and
jp
add
sahf
in
inc
and
data16
pop
cld
xchg
fwait
xor
mov
add
jnp
mov
out
in
loope
shl
jl
out
sub
cltd
jo
xchg
cmp
insb
or
pop
add
mov
push
adc
pop
test
fwait
std
mov
pop
mov
leave
fcoms
add
add
pop
in
cmp
cmp
movsl
stos
fld
cmpsl
jns
add
add
mov
hlt
nop
inc
aas
inc
nop
or
or
cmp
mov
mov
lcall
push
insb
adc
mov
xor
data16
dec
in
inc
gs
das
icebp
loopne
pop
outsl
adc
and
pop
adc
or
mov
jle
stc
add
add
push
mov
push
xchg
in
add
into
add
jns
push
loop
jns
or
add
add
xor
std
leave
cld
movsb
cmpsl
sbb
orb
xchg
push
call
add
mov
je
push
sub
orb
stc
adc
add
mov
adcb
mov
loop
push
sahf
sub
pop
mov
pop
fadds
imul
add
add
cmpsb
adc
pop
fsts
movsb
repz
rcll
fdivl
jbe,pt
mov
add
add
cmpsb
push
pop
mov
mov
inc
andb
add
lds
lea
and
pop
sub
jne
pop
jb
mov
aad
add
add
adc
mov
xor
data16
dec
in
inc
gs
das
icebp
loopne
pop
outsl
adc
xor
push
ret
add
jl
inc
imul
cmp
xchg
xorl
rcll
or
sub
loopne
sti
add
ret
enter
hlt
cmp
fisttps
aaa
mov
pop
ret
cli
daa
lods
stos
pushf
in
mov
adcb
pop
cmpsb
adc
cmpb
lods
cmp
pop
cmc
fistpl
movsb
test
lock
insl
cmp
lods
into
pushf
icebp
xor
out
xor
sarb
xchg
pop
fbstp
dec
fmuls
arpl
stos
nop
cmpsb
xchg
sahf
insb
dec
pop
adc
lds
add
into
loop
sahf
sub
cmp
inc
xlat
mov
data16
pop
mov
loopne
rol
mov
aas
cmpsl
or
repnz
leave
push
push
xchg
jne
adc
mov
cmc
lods
jae
inc
subb
out
cltd
inc
out
bound
shlb
pusha
inc
pusha
sbb
inc
and
pop
leave
inc
push
or
and
xchg
out
adc
in
pop
fimuls
shlb
mov
add
dec
mov
sbb
ret
jns
je
clc
int
lods
cmp
dec
cmp
rcr
cld
push
out
mov
int3
clc
pop
mov
add
add
test
add
and
dec
add
dec
cmpsl
push
fidivrs
inc
cltd
mov
jne
pop
subb
add
xchg
mov
and
in
insb
pop
xchg
mov
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
mov
add
add
add
pushf
add
icebp
clc
add
add
add
add
add
add
add
mov
add
add
add
add
add
cld
lock
add
add
add
add
int3
jle
add
add
add
addb
dec
icebp
add
add
add
add
add
add
add
adc
test
xchg
cmpsb
add
add
add
add
ljmp
add
add
add
add
insb
xor
out
decl
push
icebp
stos
lds
add
call
popf
xor
xchg
push
adc
mov
rcl
inc
and
and
jbe
push
add
mov
mov
inc
aas
push
mov
mov
and
orb
inc
gs
jmp
mov
js
inc
aas
sbb
xor
push
pop
addr16
and
negb
filds
add
movsb
in
fs
sbb
or
pop
cmp
clc
add
arpl
sub
je
jmp
push
sub
add
adc
cwtl
out
add
add
add
decl
out
fs
idivb
cmp
adc
lods
in
seta
inc
in
push
xchg
ss
out
mov
mov
mov
xor
loope
andb
push
jg
cs
bswap
dec
jl
jae
push
sbb
mov
inc
cmp
movsb
mov
inc
mov
rorb
mov
fdivl
bound
loope
sbb
mov
insl
pop
test
stos
sbb
add
movsb
add
add
add
add
adc
roll
dec
add
inc
add
outsb
add
faddl
cmp
mov
add
add
add
add
add
add
add
add
add
add
lds
movb
add
push
add
add
add
add
add
add
add
add
add
mov
push
add
pop
add
add
jp
push
add
push
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
mov
bound
arpl
cmpsb
add
std
add
add
add
add
add
add
and
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
sub
fadds
adc
loopne
sbb
add
add
xlat
add
add
add
cmp
mov
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
add
sbb
xchg
add
add
add
push
add
add
xor
mov
pop
mov
adc
pop
and
adc
xor
push
scas
adc
xor
popa
mov
xchg
or
xor
add
xchg
add
add
push
cmpsl
stc
aam
loopne
push
sarb
xor
push
imul
sbb
ficoml
not
fldl
pop
and
jecxz
inc
mov
adc
das
cmpl
adc
adc
adc
xor
xor
mov
add
add
add
add
dec
add
pop
add
or
popa
add
adc
xchg
add
push
add
sub
adc
insb
add
mov
add
add
out
jecxz
adc
lcall
add
jb
cmpsb
add
std
add
add
sti
add
add
add
test
or
add
jp
shrb
mov
into
cld
lock
mov
ret
decl
in
popa
inc
icebp
cmp
xor
sbb
pusha
neg
in
idivl
hlt
push
cmp
loop
mov
jbe
dec
push
xchg
mov
push
test
mov
repnz
adc
push
in
adc
adc
icebp
or
cmp
adc
sbb
je
pop
cmc
aaa
ljmp
lods
adc
xor
popa
mov
xchg
or
add
add
out
add
and
xchg
lcall
adc
sub
into
cmc
out
in
pop
mov
jnp
mov
ljmp
cmp
sub
xchg
scas
roll
inc
push
sbb
int
mov
in
xchg
jne
loop
fsubp
xchg
mov
cmp
out
mov
pop
lods
add
addr16
push
test
out
jno
inc
jb
jp
ret
mov
rol
lock
mov
sbb
js
ljmp
inc
aad
rcrb
jp
sub
shlb
lods
dec
movsl
jno
scas
mov
xor
xchg
idivl
lods
add
cmpb
inc
cmpl
inc
xchg
movsb
cmp
jb
fwait
stos
nop
xchg
js
push
movq
in
movsl
in
popa
roll
shrb
roll
push
in
or
cmp
pop
nop
cwtl
mov
les
hlt
adc
pop
sub
lock
in
jmp
mov
jns
mov
call
in
xor
das
scas
push
xchg
cmp
lret
inc
push
sbb
ret
sti
mov
cli
nop
test
jae
loopne
shr
xchg
mov
add
adc
xchg
pop
mov
adc
sbb
xchg
pop
mov
mov
push
cmp
stc
fiaddl
in
and
inc
jae
sbb
popf
je
fldcw
push
stos
xor
inc
sbb
mov
pushf
std
pop
test
dec
push
xor
push
jg
das
int3
and
call
aaa
or
push
cmp
and
movsl
mov
lds
and
jmp
call
and
push
stc
lret
lahf
mov
sbb
add
gs
loopne
lds
cltd
inc
cs
sub
pop
xchg
les
xor
inc
shll
leave
movsb
pushf
stos
xor
cs
jno
inc
push
fidivrl
cmc
cmp
in
xor
sarb
popa
test
rclb
ret
push
les
xlat
xchg
jbe
jp
daa
push
xor
jnp
add
bnd
and
pop
cmp
mov
inc
int
ss
sub
sti
or
mov
sbb
in
pusha
xor
sub
psubb
inc
ljmp
push
inc
jb
aas
sbb
xchg
jne
fsubrs
stos
or
stos
ret
inc
sbb
mov
fwait
cld
pop
test
pushf
and
push
aaa
push
pop
jle
cs
and
jmp
xor
imul
cmpsb
mov
les
in
fsubr
das
jmp
es
sbb
lret
stc
sbb
add
add
bound
push
lret
inc
sub
mov
faddl
imul
add
pop
or
stos
fwait
mov
xor
incl
std
gs
popf
dec
sub
add
add
add
add
mov
add
push
aaa
mov
add
add
inc
cmp
add
add
icebp
pusha
add
jl
push
add
add
stos
pop
jg
push
add
and
add
pusha
xor
push
add
add
out
inc
adc
add
adc
pop
add
add
cmpl
cmp
movl
mov
add
les
add
enter
sub
add
loope
out
jecxz
cmp
add
lret
out
inc
mov
rolb
pop
mov
rcrb
add
xor
add
jae
adc
add
mov
and
add
sahf
mov
test
icebp
push
out
add
and
jmp
cmpsl
scas
fildl
cmc
in
add
jnp
add
pusha
call
add
cltd
add
xchg
stos
adc
jge
lods
mov
and
pusha
mov
cmpb
call
test
add
xchg
imul
jno
leave
lret
cld
and
popf
jge
imul
add
add
add
add
add
add
add
add
add
add
lds
rorb
add
std
add
jl
lods
add
add
pop
sub
add
or
and
ret
add
adc
mov
lret
insb
add
sqrtps
out
jg
jge
add
add
shl
add
add
xchg
xchg
mov
in
insl
imul
add
add
add
add
add
add
mov
pusha
mov
mov
add
or
jne
add
add
add
add
add
scas
fcmovne
add
adc
mov
add
add
add
fbld
add
xchg
jb
inc
add
add
jae
cmpsb
add
add
test
add
push
add
add
sub
mov
lds
add
add
sub
add
add
hlt
adc
add
pop
add
add
add
sahf
or
add
add
xor
inc
add
add
in
enter
add
or
iret
add
add
add
outsl
add
add
add
aaa
jle
sbb
add
add
punpckhdq
nop
push
pop
add
add
add
loop
add
add
sub
push
dec
add
add
imul
add
stos
push
add
add
add
into
sldt
add
lret
iret
add
add
add
movsl
ret
add
add
xchg
and
add
add
mov
jne
add
add
sbb
push
loope
add
add
mov
add
fldl
add
add
sub
ljmp
sub
inc
sub
mov
add
add
add
add
add
add
pushf
xchg
add
add
jnp
dec
push
add
add
push
dec
push
add
add
add
pop
test
add
add
add
dec
xlat
add
add
sub
add
add
add
add
add
add
add
lods
sub
add
add
adcl
add
add
sub
cld
add
add
mov
sbb
add
add
lods
mov
add
std
push
add
add
add
sarb
add
add
out
jg
add
add
jl
and
add
add
call
add
add
add
mov
add
pop
fmul
xchg
add
add
add
lahf
pusha
int
add
add
dec
sbb
out
add
add
or
jne
add
add
repz
add
add
add
add
ja
ja
add
add
adc
mov
sub
add
add
add
add
add
push
mov
add
pop
add
sbb
add
lock
add
jb
add
lods
in
add
outsb
xor
mov
push
fadds
ficompl
testl
inc
div
add
pop
stc
add
mov
add
lahf
add
mov
scas
add
mov
inc
add
icebp
add
testb
push
adc
add
movsb
ja
mov
pop
lock
mov
xchg
mov
push
add
fwait
xlat
add
adc
add
rolb
push
mov
addb
pop
xchg
add
push
scas
add
push
add
push
push
add
enter
jnp
add
lcall
sub
dec
add
aad
push
jb
add
add
add
popa
mov
mov
cs
insb
add
pop
div
lods
dec
jg
and
adc
add
inc
add
shll
adc
sub
sub
sbbb
pop
pop
les
mov
imul
sub
add
lea
sbb
dec
movsl
cli
iret
loope
stos
mov
dec
cmpsb
cmpsl
roll
add
or
mov
adc
jp
mov
lahf
lret
pop
cmp
push
stos
xchg
in
xchg
add
adc
stc
push
aas
nop
mov
repz
cmpsl
add
pop
mov
xchg
outsl
js
inc
xchg
xor
add
inc
decb
bound
leave
addr16
xchg
inc
scas
pop
test
cmpsb
stc
sarb
mov
and
inc
out
aad
push
in
mov
jns
stos
and
ljmp
pushf
and
or
and
xchg
stos
lods
jb
adc
cwtl
data16
test
xchg
push
xor
xor
in
push
pop
push
jg
lock
cmp
cs
es
add
dec
and
jl
sub
fisttpll
and
int
or
or
rcll
xchg
clc
xchg
add
lret
adc
add
in
das
in
shr
sbb
xchg
mov
stos
mov
add
cmpsb
stos
data16
and
pushf
push
stos
add
xor
xor
lret
jle
mov
add
cmc
sahf
add
loope
xlat
xchg
mov
es
les
xchg
add
jae
mov
data16
push
inc
andb
add
mov
adc
lods
mov
aas
add
add
xchg
out
mov
push
xchg
add
mov
jge
add
push
jp
fnstsw
and
loopne
ret
lret
add
test
inc
dec
mov
mov
fsub
add
sub
push
cwtl
pop
push
sbb
sub
add
decl
push
and
mov
xchg
mov
icebp
pusha
add
inc
jmp
dec
fs
add
shrb
xor
and
sub
das
add
inc
xchg
cli
add
repz
xlat
push
fildll
mov
nop
into
dec
xchg
and
shlb
into
pop
fdivrl
sti
leave
call
sub
out
iret
divb
mov
add
in
cmpsb
cmpsb
loope
arpl
fwait
push
iret
outsl
pusha
push
cltd
add
hlt
loopne
xchg
int3
jbe
pop
xor
cwtl
popf
nop
repnz
adc
adcb
hlt
jecxz
push
and
add
fwait
inc
xchg
call
pop
xchg
xor
xchg
or
pusha
add
pop
sti
addl
mov
clc
fiaddl
in
jle
add
cltd
jo
mov
add
xchg
in
scas
fcmovnb
test
push
push
xchg
and
fdivp
flds
jno
add
sbb
and
outsl
in
inc
add
aad
mov
insl
cmp
add
int3
sbb
add
add
push
pop
pop
push
int
rolb
add
jbe
or
add
and
push
add
or
popa
adc
pop
mov
addb
adc
lcall
push
fisubrl
mov
add
rolb
and
repz
fcoms
add
mov
pushf
xchg
mov
add
bound
test
add
xchg
jb
push
ret
pop
add
call
fldl
aas
xchg
inc
add
xchg
fisttpll
lahf
mov
rcrl
and
hlt
into
jne
xchg
sub
arpl
jb
add
sub
mov
dec
movsb
inc
lea
pop
lods
push
jl
push
add
lret
xchg
test
add
jnp
popa
xchg
sbb
sar
pop
loope
in
xchg
mov
and
add
add
add
add
adc
push
add
add
incl
cwtl
add
add
inc
add
add
add
add
add
add
add
add
add
sub
add
mov
add
sub
add
add
fimull
add
add
add
jo
dec
add
add
inc
cltd
add
add
lock
sahf
add
add
add
add
add
add
xchg
add
add
pop
push
add
add
add
add
add
adc
mov
dec
jle
jb
add
inc
sti
sub
cmp
add
sbb
imul
add
add
mov
add
callw
int
add
or
fiadds
xor
add
fldl
add
out
add
jmp
out
or
addb
movsl
orb
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
inc
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
dec
add
add
add
mov
add
add
add
pop
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
lret
add
add
add
add
add
sbb
add
jecxz
add
bound
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
roll
add
loop
add
dec
add
add
add
add
add
add
add
add
add
add
add
arpl
add
loope
add
jecxz
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
push
mov
add
popf
mov
xchg
dec
aaa
add
jl
add
cmc
xchg
add
push
add
pop
xchg
add
add
lds
pop
ret
test
inc
adc
xchg
scas
xorb
fbld
xor
add
add
cmc
inc
inc
movsb
icebp
popf
cmpsb
nop
or
flds
dec
inc
outsb
outsl
fdivrl
mov
clc
add
jbe
mov
data16
out
cmp
xor
bound
divl
ljmp
lahf
jge
jne
sub
ss
pusha
or
jl
insb
data16
sbb
gs
add
cwtl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
shll
jp
xchg
inc
inc
xchg
addr16
ret
test
lret
xchg
lea
jns
add
enter
xor
cli
ja
mov
dec
mov
add
add
mov
mov
cmpb
sub
xchg
mov
movsb
in
dec
xlat
popa
push
lods
pop
aam
int
mov
mov
les
add
add
add
add
add
dec
add
add
add
sub
add
add
add
shrl
push
add
add
repz
add
mov
lret
pushf
dec
xor
add
add
add
add
add
jno
add
add
add
mov
xchg
and
add
add
add
repnz
add
add
rclb
add
sub
jmp
sti
sbbl
add
add
add
add
add
stos
pop
push
bound
add
add
iret
cli
call
mov
add
add
rorl
mov
adc
test
mov
add
add
hlt
add
add
add
add
add
add
cmpsl
push
add
add
add
add
add
mov
imul
push
add
add
add
add
fstl
add
bound
jae
adc
hlt
push
xchg
add
add
add
jecxz
add
cmpsb
int
and
add
add
out
out
jg
sbb
add
dec
add
add
add
enter
faddl
add
jecxz
add
fisttpl
ss
and
add
mov
add
movsl
lret
add
ret
testl
pop
sub
push
push
ss
or
add
in
int3
add
addb
lret
out
and
aam
lahf
js
add
out
add
fwait
addb
add
add
push
jp
mov
test
add
movsl
add
push
incl
inc
and
add
lret
add
pop
mov
add
push
aam
push
aas
or
dec
xor
add
pslld
addr16
fiadds
sbb
add
movl
add
dec
cld
scas
add
add
add
jo
push
jl
push
in
mov
add
add
into
lret
add
mov
push
ret
sarb
stos
add
jecxz
jmp
insb
and
mov
add
add
add
add
pop
adc
add
add
je
add
add
add
outsl
pushf
add
add
cmp
fwait
add
ljmp
pop
lods
add
xchg
add
add
add
add
add
dec
xlat
scas
iret
push
cwtl
dec
add
add
add
cmp
add
add
add
add
add
add
into
add
add
add
and
add
roll
add
aam
add
cld
movsl
add
add
add
and
add
add
add
add
add
add
add
in
add
add
add
jge
add
add
mov
add
add
ljmp
add
add
add
lock
push
popf
lcall
sbb
mov
cmpsl
and
shll
outsl
dec
test
mov
fldl
ja
mov
fsts
shl
ret
xchg
aas
ds
int
adcl
cmp
cli
adc
sbb
add
inc
idiv
mulb
adc
aaa
lahf
jo
mov
out
out
or
add
popf
sahf
cmpsl
leave
mov
test
pop
push
pop
enter
mov
insb
aaa
pop
enter
mov
and
inc
stos
jge
and
pushf
lret
pusha
notl
cmpsl
jno
roll
aam
push
insl
inc
mov
push
pop
outsb
je
ret
daa
mov
addb
sarl
xchg
mov
movsl
sub
and
or
and
add
out
in
inc
test
sbb
and
sbb
sub
pop
pusha
pop
or
adc
sbb
mov
hlt
mov
mov
mov
pop
mov
mov
leave
data16
xor
ljmp
ret
jecxz
fsubrl
or
repz
pop
test
pop
mov
test
sub
imul
lods
xchg
lret
clc
dec
sub
adc
addr16
popa
dec
jns
cld
adc
fcomps
sbb
cmp
mov
neg
dec
mov
mov
push
lods
lcall
push
enter
cmp
inc
inc
cmpsb
lcall
test
imul
cli
pop
stos
jb
aam
sbb
fadds
inc
mov
jae
shl
sbb
cmp
les
cwtl
xchg
mov
enter
and
fldl
pop
pop
and
xchg
pop
dec
adcl
cmp
xchg
sbb
sub
jne
pop
or
pop
orb
push
and
popa
dec
mov
jmp
sarb
pusha
inc
mov
mov
lods
lret
popa
lods
loopne
sub
or
ficoms
fdivr
out
fldcw
setbe
std
out
enter
lods
stos
int
dec
mov
xchg
aas
jne
sahf
push
push
loop
lea
in
sub
sbb
mov
mov
fxch
aaa
sbb
add
cmp
mov
dec
mov
mov
inc
mov
xlat
icebp
test
ror
ret
test
xor
xor
lcall
fistps
adc
add
push
jp
stc
outsl
push
mov
aad
insl
dec
jg
xchg
inc
dec
sub
in
sahf
add
sub
mov
fpatan
insb
pop
xchg
push
nop
and
pop
or
inc
add
ret
stos
jge
cmp
push
sahf
add
mov
out
or
pop
push
jp
jl
jg
jno
popa
xor
sub
js
shrb
push
lds
sub
ss
sbb
jnp
push
add
daa
inc
ds
jne
ljmp
sbb
out
mov
hlt
inc
mov
push
inc
mov
jnp
jne
bound
mov
adc
and
inc
bound
shll
in
cmp
mov
pop
jle
mov
and
stos
push
jg
push
test
shl
xor
fcoml
mov
cmp
lret
cmc
movsl
mov
cs
aaa
mov
inc
xor
dec
lret
xor
aas
js
mov
fs
popf
jb
dec
push
sub
ljmp
data16
mov
push
pop
jmp
int
rorb
into
ret
and
shrl
mov
shrl
mov
mov
ljmp
inc
jnp
add
loop
jno
inc
jnp
sub
mov
inc
cmpsb
cmpsl
push
fldl
es
shrb
push
cmpps
jl
and
ljmp
sub
aam
into
sti
movsb
xor
mov
push
jl
mov
arpl
outsb
daa
cmp
scas
mov
daa
ds
outsb
fidivrl
jecxz
and
jecxz
jnp
and
pop
and
fldcw
movsb
dec
mov
xor
xor
enter
pop
lods
or
sub
dec
sub
xor
adc
bnd
arpl
push
cmp
mov
test
cmp
loope
out
sti
rcl
in
mov
mov
cmp
imul
jmp
lcall
push
hlt
std
and
aaa
inc
test
jbe
mov
add
out
adc
jbe
add
je
fs
xor
sbb
iret
xor
push
adc
adc
mov
adc
les
inc
xor
fst
decb
sub
add
shr
jp
mov
mov
subl
jnp
dec
mov
fs
jae
popa
sub
sbb
mov
pop
pop
inc
es
inc
gs
aas
fidivl
loop
ds
scas
in
pusha
scas
pop
add
inc
and
xchg
shl
aaa
ret
repz
mov
mov
and
clc
stos
mov
mov
js
dec
jno
inc
fdivs
mov
neg
je
imul
fdivrp
push
rcrl
mov
insl
inc
js
pop
pop
in
cltd
and
iret
or
iret
cld
daa
jns
ret
jno
cmpsl
jno
xor
and
mov
mov
in
ss
push
inc
jg
jl
add
push
loope
jl
inc
jns
sarl
aad
fldl
stos
push
fadds
and
cmpsb
inc
or
cs
aaa
jg
mov
or
fucom
xlat
jmp
pop
dec
jg
lret
inc
mov
loope
dec
pusha
stos
pop
cmpsb
cmp
jle
push
test
lock
movsb
or
sub
push
pop
mov
and
ja
mov
dec
and
sub
dec
push
cltd
cmp
jbe
jge
fucomi
in
sub
and
faddl
cs
ret
cmp
xchg
xlat
or
dec
mov
mov
repz
imul
rcrb
fucomp
imul
shll
xchg
inc
jl
mov
out
lahf
sub
dec
add
mov
lock
and
in
jle
mov
cmp
xor
xor
sub
sbbl
push
pop
clc
in
imul
xor
popa
mov
fildll
scas
test
in
cmp
aam
mov
xchg
dec
mov
sbb
shrb
stc
outsl
aas
fxch
cli
add
sti
pop
push
rol
aad
jle
dec
jns
sub
jne
mov
pop
mov
inc
jg
imul
and
dec
aaa
push
pop
mov
adc
in
in
stc
stos
out
mov
or
dec
and
push
inc
stos
test
xchg
dec
fprem
cmp
icebp
cmp
mov
mov
das
sub
std
test
or
decb
cmp
daa
jns
cmpsb
repz
cmp
xchg
jp
mov
lods
sbb
and
push
sbb
mov
mov
jno
jb
push
push
loopne
pop
cs
int
sti
xor
repz
sub
into
movsl
les
and
sbb
mov
push
dec
jb
das
add
inc
push
and
sbb
data16
sbb
gs
iret
mov
dec
ljmp
and
loope
rorl
jmp
inc
sub
xchg
out
pop
fs
inc
pop
dec
jne
and
mov
mov
repz
gs
pop
lods
xor
inc
jnp
push
sbb
es
mull
daa
cmpsl
cmp
xchg
jne
loope
or
out
sub
mov
mov
outsl
xor
jno
iret
and
add
jecxz
orl
push
adc
lock
xor
fldl
sbb
jns
jno
adc
and
cmc
sub
lods
stc
in
jl
jg
pusha
lods
subb
cmpsb
fcomi
in
jmp
jo
shrb
inc
aas
mov
jecxz
dec
mov
inc
scas
sbb
shl
lock
repz
push
cmp
mov
insb
mov
aam
das
mov
lcall
xor
and
add
cmp
mov
xchg
mov
jmp
cmp
push
add
and
adc
adc
aaa
push
sub
inc
ss
loope
push
and
sub
push
inc
je
and
xor
jle
fisttpl
test
and
mov
mov
dec
dec
xor
out
sub
ljmp
insb
rsqrtps
mov
flds
out
int3
sub
mov
test
push
push
pop
sub
fcompl
fmull
test
jno
addr16
in
out
xchg
inc
or
mov
imul
cmpb
leave
mov
sub
je
les
int
jp
dec
inc
outsl
imul
cmpsb
adc
stc
hlt
sbb
cli
notl
push
data16
pusha
lods
es
pop
mov
xor
ja
cs
sbb
jbe
cs
imul
ret
je
xchg
cmpsl
popa
in
cmp
ljmp
fadd
add
lcall
jecxz
cmp
stc
fiaddl
sbb
lds
out
mov
pop
mov
popf
fs
fldcw
mov
inc
sub
mov
pop
int
test
mov
setno
aas
int3
xor
clc
out
cmp
push
push
cmp
bound
mov
shl
xor
sti
pusha
clc
sub
and
iret
push
stc
sti
xchg
mov
movb
es
ds
inc
outsb
cmc
mov
imul
div
xchg
xor
fdivs
je
movsl
xchg
stos
repz
sub
inc
lods
pop
fisttpll
sbb
cmp
cmp
cli
out
js,pn
sarl
scas
rcll
jge
sub
cltd
pop
dec
jnp
push
or
add
cs
imul
shrl
icebp
mov
pop
testb
jmp
outsl
clc
mov
ja
std
jb
pop
ss
xor
mov
in
and
xlat
sbb
cmp
xchg
dec
pop
ss
jno
int
scas
pop
lock
fildll
push
push
daa
fisubl
xchg
loopne
adc
and
dec
cmp
movl
xchg
jbe,pt
fs
xor
push
sub
mov
loope
idivb
clc
pop
out
lret
mov
imul
cs
xchg
cmc
adc
jnp
bound
dec
enter
cmp
dec
rorb
xorb
mov
bndstx
in
push
fnstsw
popf
out
cmp
adc
inc
jo
inc
push
push
sarb
clc
es
sti
cmc
ss
mov
arpl
push
fildll
add
enter
pop
mov
pop
repz
aas
iret
dec
std
mov
jne
nop
gs
adc
push
lock
into
mov
xchg
add
or
ffree
in
and
mov
pop
jecxz
shll
lea
dec
push
sbb
mov
inc
pop
arpl
mov
psubusw
adc
cltd
nop
pop
fwait
cmp
push
push
dec
dec
cmp
jae
mov
sub
loopne
loop
or
cmp
loop
push
scas
xchg
fyl2xp1
inc
jmp
std
icebp
sub
in
or
das
push
sub
imul
push
xchg
and
sub
dec
sub
stos
inc
cltd
insl
xchg
mov
mov
fistl
add
dec
outsb
cltd
fidivs
add
jno
push
cmpsl
push
movsl
das
dec
lret
xor
loope
and
fdivs
or
adc
mov
add
or
and
or
pop
and
pop
jp
push
jg
adc
push
int
std
jb
xchg
push
cmp
pop
out
inc
sbb
or
dec
aaa
loope
xor
dec
sar
and
adc
dec
das
ljmp
jae
pop
inc
sub
into
fisubl
push
xchg
adc
xchg
les
jmp
sbb
xchg
push
movsl
cmp
dec
loope
dec
cmp
and
xchg
inc
push
push
pop
cmp
and
push
mov
sub
in
out
leave
mov
jno
mov
adc
sbb
jp
hlt
adc
mov
fs
in
mov
aam
mov
and
mov
pusha
add
or
add
pop
fnstsw
mov
cmp
mull
fldcw
inc
push
jb
cmp
call
das
sarl
fistpll
fildll
push
lods
sbb
ss
in
dec
jne
and
aaa
add
push
sti
jg
and
dec
cmp
jbe
lahf
fs
adc
mov
and
push
xchg
out
pop
xor
int
aam
add
rcr
aam
test
outsl
je
jo
push
pop
sub
rcl
gs
imul
push
fbstp
nop
loope
shlb
and
or
cmp
push
fsubr
xor
inc
or
push
ret
cmp
mov
fsubp
int
out
into
xor
mov
and
adc
mov
lock
sbb
out
stos
lds
popf
fcmove
add
push
sub
add
orb
sahf
mov
xor
dec
push
pop
jno
repnz
cmpsl
xchg
dec
adc
pop
push
shrl
mov
jne
imul
xor
jno
fdivrl
sbb
adc
mov
jp
js
cmp
sub
cmp
jno
das
imul
push
cwtl
loope
lods
xchg
imul
push
outsl
mov
sub
adc
xor
enter
pop
loope
or
cmp
bound
sbb
stos
jmp
push
call
dec
jne
insb
push
push
scas
and
dec
in
pop
cmp
jbe
push
lret
sub
lea
add
je
xor
cmp
push
scas
cmp
ja
in
and
arpl
scas
jmp
adc
lock
shll
adc
pop
aas
or
push
jp
add
ljmp
in
inc
cs
xor
mov
jl
mov
mov
fcoms
push
sub
movb
ret
cmp
out
jo
mull
sarl
mov
data16
inc
and
cli
out
cs
push
lret
pusha
out
push
test
aam
sub
pop
pop
mov
mov
and
pop
xor
jbe
or
js
sbb
sbb
notl
les
jl
cwtl
popa
call
sbb
xor
lcall
push
pop
sub
mov
add
xor
push
roll
jmp
sub
add
inc
inc
jb
xor
mov
inc
cmp
dec
insb
lods
push
nop
push
adc
cld
push
jl
test
sub
popf
sub
pushf
sub
pop
inc
mov
sti
jnp
inc
mov
jg
and
sub
bound
out
dec
shrl
sbb
xchg
and
stos
ret
out
pushf
xchg
repz
fsts
cltd
clc
jb
mov
push
push
rcl
inc
shr
shrb
pop
sub
jb
stos
les
cs
dec
hlt
jge
cwtl
lret
lahf
push
lock
pop
loop
jp
sub
int
ret
mov
cmp
in
repnz
test
outsl
std
mov
jno
int
loopne
fwait
jge
ja
adc
or
repnz
inc
sbb
sub
enter
adc
xchg
xchg
imul
pop
fmuls
pop
into
das
imul
dec
cltd
xor
loopne
xlat
mov
hlt
cmp
push
daa
inc
int
das
cs
mov
ja
push
add
add
dec
fdivr
subl
pop
imul
add
sub
mov
ret
inc
pop
cmpsl
pop
and
push
mov
orl
imul
push
lcall
mov
fbld
leave
daa
enter
mov
lcall
pop
lret
add
shl
adc
out
lret
sub
mov
in
dec
sub
movsb
mov
cwtl
cmp
sub
int3
adc
and
xchg
les
adc
add
lea
jmp
xor
aam
jnp
or
pop
rolb
lret
inc
rcrl
lea
mov
xor
xor
js
or
imul
clc
insl
lea
sarb
subl
adc
xchg
cmc
push
push
stos
scas
fsubrp
cltd
xor
rol
sbb
fsts
in
cmp
outsl
cmp
stos
arpl
sbb
jbe
aam
xchg
mov
jp
pop
adc
xor
mov
sub
add
push
mov
mov
pop
xor
xchg
ss
push
add
adc
in
sub
ljmp
out
loopne
adc
lret
fwait
mov
or
fwait
sbb
pusha
stos
push
int3
lret
xlat
lahf
add
nop
negl
xor
fs
movsl
mov
stos
add
stos
ljmp
and
pop
je
shlb
sbb
mov
push
nop
and
cmp
jae
push
ret
pop
enter
inc
jnp
cmp
sbb
ja
sub
adc
icebp
push
mov
inc
xchg
insb
in
das
add
cmp
sub
repz
mov
sub
jmp
push
in
jge
sub
repz
lods
bound
dec
test
nop
daa
and
mov
inc
movsl
dec
ja
pop
repnz
fistpl
pop
sub
adc
or
mov
pop
inc
aam
aas
sbb
gs
pop
mov
cmp
clc
or
fdivrl
push
mov
xor
xor
inc
lds
leave
dec
stos
loope
sahf
and
stc
adc
prefetcht0
cmp
scas
out
sahf
in
ss
cmp
inc
iret
jne
mov
or
in
and
jae
fidivl
test
arpl
cltd
in
vpsubsb
push
jo
mov
insl
pop
int
and
popa
inc
pop
cmp
insl
mov
and
shr
es
lahf
push
bound
mov
push
mov
fwait
popf
ss
repnz
icebp
cltd
outsl
pop
xchg
xlat
lcall
aam
xchg
fwait
sbb
aas
or
fcoml
mov
push
dec
pop
pop
arpl
pop
dec
test
loop
lahf
sub
sbb
adc
je
arpl
pop
repnz
dec
xchg
and
xor
jb
jge
pop
mov
cmpsl
nop
push
pop
fcomps
inc
aas
inc
leave
cmp
rclb
and
mov
lahf
in
or
out
sbb
add
push
rcrb
fwait
and
shlb
push
arpl
nop
sbb
xor
sahf
popf
outsl
js
xlat
mov
cmp
fucomip
dec
jle
adcb
fdiv
pop
pop
inc
jl
pusha
pop
test
imul
in
es
lods
in
xor
mov
iret
adc
jo
inc
lds
ficomps
clc
rcrl
cmp
xlat
insl
lock
insl
sbb
lret
mov
stc
adcb
pop
scas
hlt
ret
pop
in
shll
outsb
je
pushf
push
aas
and
stos
xlat
adc
or
sbb
loope
pop
in
outsl
jbe
or
ds
mov
mov
movsb
insl
xchg
sbb
jbe
jno
adc
inc
dec
sahf
push
sbb
jne
or
movsb
jp
mov
dec
fildl
dec
sub
loope
mov
pop
ljmp
icebp
mov
xchg
imulb
inc
test
or
sbb
and
ljmp
pop
inc
rcrl
xchg
ret
stos
jae
xchg
mov
cmp
inc
repz
sub
or
arpl
je
daa
sbb
jge
loope
jae
jecxz
inc
bound
mov
out
sahf
imul
push
xor
adc
pop
incb
pop
push
inc
sahf
icebp
std
outsb
mov
mov
aad
adc
adc
lock
mov
mov
sbb
decl
shll
cmc
hlt
sub
adc
jb
cmpsl
xor
push
shl
outsl
mov
push
gs
push
xor
inc
test
inc
mov
inc
pop
dec
add
or
cwtl
and
cltd
adc
jg
dec
es
leave
pop
adc
in
sub
aad
das
lods
cmp
das
daa
into
jecxz
fcoml
inc
jo
xchg
loop
or
xchg
or
cmpsl
cmp
adc
mov
data16
sbb
stos
pop
pop
mov
cmp
cmp
cmc
xchg
cmpsl
mov
sbb
push
push
into
fsave
nop
cwtl
mov
pop
outsb
lods
mov
in
mov
push
lea
mov
aas
mov
sbb
sbb
pop
cli
dec
inc
jmp
lock
mov
xchg
and
lock
cmp
scas
fiadds
cwtl
fisttpl
icebp
rcrl
mull
ss
dec
gs
dec
or
outsl
cmp
ds
mov
insb
push
add
or
pop
jmp
sub
inc
inc
xor
aas
sub
sub
push
ret
test
sbb
dec
pop
pop
sbb
push
cli
sbb
fiaddl
xchg
std
mov
jge
stos
repz
lret
mov
xlat
xchg
fsubl
xchg
xor
imul
or
xchg
mov
push
jo
fisubl
mov
enter
mov
jg
mov
jnp
movl
ja
nop
pushf
xchg
lahf
sbb
mov
xlat
pop
mov
gs
dec
aam
in
lock
imul
aaa
and
dec
sbb
inc
rorb
adcb
and
stos
testl
jmp
leave
out
add
lods
push
test
add
dec
jp
jb
stos
bound
insl
pushf
test
push
sub
push
mov
lea
cwtl
lods
sbb
cmpsl
inc
sub
aaa
pop
adc
pop
aad
das
enter
and
adc
or
add
inc
mov
push
mov
mov
leave
cmp
mov
sti
and
vpminub
les
jecxz
xlat
mov
test
jo
ss
or
fmuls
leave
fwait
jl
bound
rclb
out
adc
fmuls
mov
xlat
mov
gs
add
adc
stos
mov
repz
pop
jns
mov
jmp
inc
insb
insl
adc
fidivrl
push
ret
adc
and
mov
lds
loop
adc
xor
loope
mov
xchg
clc
mov
roll
jle
sbb
cmp
sbb
cltd
stos
rcll
scas
or
cli
cld
cmp
aaa
cmp
leave
and
push
add
mov
adc
icebp
addr16
insb
int
sbb
ret
xchg
outsb
int3
dec
int
or
out
xor
stos
push
mov
arpl
ja
xlat
mov
syscall
cmpl
repnz
mov
