add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
or
cmp
lret
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
sbb
and
lods
mov
add
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
jl
jl
jl
jl
shlb
or
adc
push
add
push
jns
cli
add
imul
int3
jnp
pop
sbb
pop
inc
mov
cmp
iret
mov
mov
pusha
xchg
sbb
imul
rcl
jbe,pn
inc
sti
fdivr
sub
jno
add
sub
dec
ret
jp
push
inc
pop
incl
pop
ja
popf
inc
decl
adc
adc
dec
into
xor
mov
stos
loop
xchg
shl
loopne
mov
xchg
notl
adc
mov
inc
jmp
cmp
add
gs
cmp
inc
and
push
push
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
adc
call
jl
jl
lcall
cmp
cmp
ret
lock
sub
loop
ja
imul
adc
inc
repz
pusha
push
jo
sbb
shlb
stc
mov
mov
cltd
dec
push
xor
repnz
xor
shlb
adc
arpl
adc
std
pop
xchg
adc
dec
sbb
ret
sub
test
pop
dec
pop
push
push
adc
dec
xor
mov
lret
mov
mov
out
rcll
adc
adc
push
stc
adc
mov
clts
mov
inc
dec
mov
xchg
and
cmpsb
hlt
adc
je
mov
xchg
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
pop
nop
in
jne
jle
jl
jl
jl
test
js
push
mov
jecxz
pop
js
leave
inc
sbb
and
iret
in
aaa
out
cmc
pushf
push
and
jne
push
mov
shrb
fstpt
std
sahf
mov
movsl
movsb
daa
stos
adc
in
xor
mov
sub
imul
mov
push
rclb
mov
lret
mov
cs
xor
xchg
fadds
outsb
iret
jmp
test
lods
or
sti
jae
mov
push
ljmp
push
daa
inc
dec
jge
sbb
int
movsl
mov
jnp
xor
xchg
xor
lock
push
cwtl
xchg
pushf
mov
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
xchg
mov
jl
jl
jl
mov
dec
mov
aaa
rcrb
aam
push
cld
xchg
sarb
sub
mov
and
cmpsb
dec
nop
dec
cld
or
lret
movsl
and
or
ja
adc
xor
inc
adcb
xor
nop
pop
inc
iret
or
mov
inc
fists
movb
inc
mov
rorb
pop
push
sub
xchg
adc
mov
sti
lods
lcall
inc
push
push
scas
mov
jmp
add
int3
test
out
xchg
sti
cmp
inc
and
jae
int3
xchg
push
and
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
cwtl
mov
jl
jl
jl
xor
mov
and
movsl
mov
mov
dec
test
jecxz
hlt
sbb
dec
iret
mov
cmp
mov
add
pop
or
mov
push
bound
push
decb
movsb
sbb
push
mov
or
jnp
inc
xchg
iret
inc
jne
into
movsl
movsb
inc
dec
inc
aas
push
hlt
dec
movsb
shrb
xor
iret
xor
add
xchg
rorb
push
mov
adcl
pop
adc
pop
data16
loopne
icebp
cmc
repnz
xchg
and
into
int
cwtl
ret
mov
subl
dec
mov
pop
add
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
mov
jo
jl
jl
jl
pusha
pop
addl
mov
mov
outsl
bound
cmpsl
cmpsb
fwait
popf
inc
cmp
cwtl
ja
mov
test
mov
push
bound
push
out
mov
adc
daa
fs
mov
daa
lds
add
pushf
mov
mov
xor
inc
mov
clc
push
jbe
lods
xchg
pop
mul
mov
mov
out
hlt
imul
ds
fs
jnp
push
mov
mov
sbb
xchg
pop
mov
aas
aas
cmpsl
in
imul
mov
imul
aad
xchg
cmpsb
mov
sbb
push
out
cmp
fsubs
pop
mov
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
cmp
jl
jl
jl
mov
lods
mov
data16
outsl
std
and
push
dec
push
cli
push
and
and
ljmp
cs
jg
mov
mov
aam
sarl
fs
pop
loopne
lahf
push
pop
sub
mov
mov
hlt
xor
mov
xor
out
nop
sub
scas
aaa
std
stos
push
test
and
lock
lds
xor
rcr
adc
in
xchg
or
mov
or
xor
test
or
mov
push
dec
cmp
in
std
inc
adcb
fdiv
cmp
xor
jne
pop
aaa
and
jne
call
jmp
cld
mov
mov
dec
mov
aad
loop
lods
jae
jl
jl
jl
sub
sub
push
add
or
xchg
ljmp
inc
push
std
jbe
icebp
pop
lods
test
rorl
and
dec
jle
movsb
test
push
inc
out
fsubs
leave
or
mov
sbb
add
movl
jl
dec
ja
adc
rcrl
mov
movsb
mov
xchg
decb
pop
pop
sub
mov
sub
pop
push
push
adc
mov
jge
xchg
fsubrs
cwtl
ret
insl
add
and
insl
mov
nop
shl
push
or
insb
push
cmp
jl
lods
iret
sub
scas
inc
jbe
cmpsb
inc
mov
cmp
xor
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
or
jl
mov
sub
inc
jle
or
or
xchg
mov
cmp
inc
mov
repnz
mov
adc
xchg
jp
std
fisubrs
cld
dec
je
lea
and
add
cmp
lock
push
dec
loop
loop
pop
or
inc
inc
insb
sub
jno
movsb
add
cmpsb
test
and
rorb
movsb
push
pop
test
mov
in
cwtl
jge
call
les
sub
nop
in
aad
and
jmp
push
cld
sub
push
add
and
lret
add
mov
mov
sbb
pop
stos
iret
call
sbb
stc
push
test
mov
add
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
aaa
hlt
ror
sbb
jl
jl
jl
cmp
cmpl
sbb
jle
and
mov
fs
cld
leave
pusha
adc
sahf
call
mov
in
cld
loop
jg
inc
jmp
mov
out
js
mov
dec
or
push
xchg
cmp
out
lcall
mov
push
jns
xor
pop
cmp
sbb
aaa
cltd
mov
ds
add
sub
jo
clc
mov
imul
xlat
mov
sti
fnstenv
fs
xchg
inc
mov
pop
cmpsl
es
push
repz
sbb
inc
push
repz
fnstsw
out
pop
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
nop
cmc
cld
adc
jl
mov
and
cmp
pusha
adc
add
jb
adc
cmp
iret
xchg
sbb
sbb
pop
dec
xor
std
addl
jecxz
xchg
lea
ljmp
push
sbb
push
idivb
jbe
ficoms
push
negl
xor
fistpll
mov
imul
adc
insl
sarl
movsb
add
std
scas
mov
pop
mov
xlat
sub
sbb
addb
cmpsb
in
jmp
mov
mov
jae
jno
inc
sahf
imul
cmp
or
das
int3
call
add
xchg
mov
mov
add
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
leave
pop
fdivr
hlt
je
jl
jl
jl
push
push
push
jg
push
iret
push
dec
stos
in
sbb
imul
add
push
add
cmp
pop
repz
pop
sarb
xor
stc
sbb
shlb
add
fwait
in
std
test
xsha256
cmpsb
adc
popa
popf
jns
mov
pop
pushf
xchg
xchg
add
push
inc
insb
lcall
xchg
test
out
ret
xchg
aas
lret
lds
inc
dec
daa
call
repnz
ret
add
das
test
call
imul
or
js
arpl
pop
mov
pop
mov
mov
jne
jmp
or
mov
mov
push
int3
xchg
xchg
int
rolb
mov
rclb
dec
mov
lods
mov
and
mov
xor
and
mov
fwait
mov
mov
inc
xchg
int3
xor
stc
cmc
xor
out
mov
dec
cltd
jmp
mov
cmp
jecxz
repz
cwtl
sub
aaa
imul
shll
sbb
push
dec
cmp
jecxz
popa
cmp
sub
xchg
pop
pop
lock
pop
mov
mov
inc
leave
sbb
jne
test
rclb
repnz
aaa
cmp
aas
dec
lods
add
into
mov
loop
scas
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
jmp
ja
jl
jl
jl
inc
call
jle
rorl
push
mov
sti
xlat
cmpsb
mov
andb
je
mov
mov
push
mov
and
jo
push
mov
insl
aam
xor
lds
add
hlt
in
fstpl
jle
cmp
or
test
addr16
push
cmp
leave
lock
imul
out
lret
pop
test
daa
cmp
dec
cltd
inc
scas
in
repnz
int3
jmp
cmc
mov
cmp
inc
cmpsb
jo
cli
call
mov
sbb
popa
int
push
movsl
insl
xchg
call
lea
sbb
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
pop
xor
jl
jl
js
and
jp
pop
into
xchg
insl
push
inc
movsb
xchg
cmp
jno
in
jno
push
orb
lret
dec
dec
iret
mov
outsb
insb
sub
std
add
outsb
sahf
xor
push
fsubrs
and
jecxz
xor
or
jge
xor
mov
push
add
clc
imul
fstpt
jns
pop
test
aad
sahf
iret
mov
jno
out
nop
sub
icebp
mov
mov
jo
dec
mov
jle
lret
push
push
inc
into
pop
int3
sarb
repz
sbb
inc
rclb
ds
xchg
and
xor
clc
push
sub
cwtl
mov
iret
mov
mov
mov
jmp
xchg
sub
cltd
cmp
mov
movsl
inc
inc
fmull
jl
mov
hlt
aam
aas
jmp
test
jae
dec
mov
xchg
lods
stos
mov
mov
rcrl
movsb
sub
xor
add
fnstsw
add
aad
inc
call
cvtdq2ps
sub
ljmp
jg
mov
jg
xchg
in
mov
aaa
cmp
inc
dec
rol
outsl
das
mov
mov
shufps
or
stos
xor
int
aam
test
in
jno
stc
popa
jo,pt
stos
pushf
inc
mov
aam
jecxz
xor
jmp
push
pusha
push
mov
rcrl
push
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
xchg
push
inc
add
jl
mov
mov
loope
jns
cmpsb
cltd
fdecstp
and
jmp
mov
lods
jmp
pop
add
lret
sub
xor
sbb
adc
test
lahf
push
jo
call
dec
jns
or
js
stc
xlat
fxch
mov
sbb
mov
push
dec
cld
fcoml
jle
cmp
xlat
jecxz
or
sub
sbb
jmp
faddp
or
mov
daa
lock
dec
xor
sbb
orb
xchg
rorb
push
mov
jge
and
scas
cmpsb
shrl
call
adc
roll
mov
jmp
and
rep
lods
sti
pop
xorl
lahf
pop
dec
or
jl
jl
dec
push
push
idiv
fmuls
stos
fmul
adc
adc
ror
dec
or
xor
aaa
dec
idiv
mov
test
jl
inc
out
xchg
bound
movsb
out
dec
cmpsl
adc
fisttps
or
arpl
int
lods
cltd
js
and
cwtl
dec
mov
push
mov
push
jg
insl
cmp
dec
cmp
add
inc
inc
sahf
lahf
cltd
out
cld
cmp
call
daa
cmp
xor
cltd
js
dec
pop
push
inc
out
stos
fnstcw
xchg
imul
pop
cmc
dec
push
popa
add
lds
lods
pop
push
insl
sub
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
mov
decb
jl
mov
pop
mov
sti
scas
inc
mov
call
mov
mov
dec
dec
movb
in
pop
inc
fwait
cwtl
mov
in
push
out
dec
add
repnz
roll
daa
sbb
mov
mov
dec
lods
sbbl
pop
or
negb
or
out
sub
ds
mov
pop
cmp
push
cltd
out
inc
add
pushf
push
rclb
xor
add
inc
cmp
lahf
xor
sbb
daa
insb
cltd
xchg
scas
arpl
mov
inc
lret
outsb
pop
xor
and
rcll
lcall
sbb
sti
insb
sbb
out
or
jno
cltd
inc
push
xchg
jg
dec
popf
push
jno
fsubrp
add
sahf
jb
add
or
jmp
fsub
mov
clc
mov
scas
int3
sbb
or
jl
jl
mov
and
cmp
mov
jmp
call
mov
stos
and
mov
add
xchg
cmp
push
loop
test
lret
cwtl
or
jne
das
adc
and
clc
out
fidivl
or
cmp
cmp
sti
aam
and
mov
cmc
addb
insl
in
mov
std
mov
jle
push
push
xlat
repz
in
js
imul
test
out
or
pop
aas
jecxz
pop
push
pushf
mov
les
jmp
xchg
sub
stos
fmul
fstps
cmp
ret
mov
jmp
pop
fimuls
cltd
push
mov
ljmp
jl
jl
sub
insl
xorb
xchg
inc
je
xchg
fdivs
fnstsw
cmpsl
movsb
out
fld
loope
cmp
inc
movsb
adc
and
jmp
sbb
lea
js
adc
lods
or
fidivs
rclb
call
cmp
xor
int
in
mov
add
mov
xor
push
lods
dec
lods
sahf
sub
test
mov
push
lds
cmp
call
xor
fmul
jecxz
data16
dec
movl
nop
xor
fbld
mov
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
addb
sbb
or
jl
out
imul
pop
mov
loopne
fbld
pop
pop
outsl
sbb
mov
hlt
and
sub
and
lcall
out
jge
scas
lock
arpl
shr
andl
nop
pop
mov
push
shll
xchg
sub
hlt
adc
loope
lahf
push
jne
jl
icebp
and
loope
jl
movsl
jno
ret
fidivl
enter
dec
aaa
gs
repnz
sti
jmp
cmc
rclb
add
lret
aas
push
mov
push
xchg
xchg
shld
imul
arpl
dec
mov
out
daa
cmp
cltd
jge
data16
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
add
jl
mov
mov
je
in
push
push
sbb
mov
dec
jns
ret
lcall
orb
pushf
fstpt
lahf
lret
rcrl
mov
xor
roll
mov
dec
imul
in
ret
mov
jecxz
mov
loope
fidivrl
in
push
push
lds
arpl
shll
loopne
push
insl
shlb
icebp
sub
insb
cmp
push
pop
push
xchg
shlb
sbb
cmp
imul
scas
push
fnsave
negb
scas
movsl
add
cmc
jbe
and
or
scas
es
xchg
dec
inc
add
jmp
in
test
sti
mov
sbb
jl
jl
jl
inc
pop
dec
lahf
std
sub
shll
insb
dec
adc
sub
xchg
rolb
add
and
push
dec
bound
adc
xchg
rcl
push
cwtl
lock
into
sub
cmp
jle
mov
sub
dec
gs
lahf
mov
cld
pop
xchg
dec
stc
aad
inc
std
and
and
and
mov
sub
lds
and
xchg
fcoml
push
lods
push
fisubrs
sbb
mov
pop
fsts
test
xor
and
out
scas
jle
out
cmp
mov
xchg
sarl
jge
popa
aam
xor
add
jmp
dec
jge
cmpb
jge
push
loope
ljmp
jl
jl
jl
je
jno
stos
xchg
jae
dec
iret
and
sbb
jns
ja
scas
unpckhps
and
push
es
push
jle
addr16
push
rorb
mov
shr
add
fs
inc
sarl
adc
lea
je
pop
push
out
nop
mov
push
clc
mov
mov
and
ja
jo
sbb
dec
les
sarb
jge
jle
mov
mov
xchg
mov
cld
jmp
roll
lods
push
popa
dec
movsb
sub
and
xor
in
cmp
test
push
in
mov
dec
outsl
xor
hlt
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
aam
mov
push
jl
into
jg
jl
and
fwait
test
sbb
adc
dec
add
or
push
jae
xchg
cs
inc
cmp
movsl
rcll
push
pop
ds
mov
xchg
dec
push
call
push
cmpb
dec
push
lds
clc
lcall
xchg
adc
jge
jmp
xchg
adc
daa
test
pop
jg
xor
idivl
push
sti
mov
mov
scas
in
ficompl
pop
inc
lcall
mov
jne
sub
in
dec
arpl
inc
push
imul
test
sbb
push
sbb
xor
icebp
or
lret
adc
xor
cmp
leave
xchg
lock
sbb
in
lds
xor
scas
push
test
into
lcall
adcl
and
push
loopne
insb
insb
aad
cs
sbb
std
xchg
mov
jb
push
sti
roll
mov
inc
hlt
and
pop
inc
insl
dec
stos
sti
lock
dec
cmc
and
jge
cwtl
in
mov
xchg
scas
dec
mov
test
xor
cmpsb
mov
fs
aaa
sbb
inc
lock
fs
js
sbb
call
push
lcall
add
sahf
jb
add
cld
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
ret
lcall
jl
inc
out
add
sbb
and
stos
jecxz
push
test
dec
mov
push
sbb
pop
pop
aaa
hlt
cli
loopne
adc
cmpsl
pop
lahf
pop
pop
ret
xor
mov
push
push
jmp
sbb
jg
popa
dec
ds
sub
mov
mov
loop
insb
int
adc
add
stos
mov
frstor
cmpsb
stc
fiaddl
icebp
xchg
out
test
inc
insl
test
and
xor
sbb
jg
es
push
pusha
jp
icebp
inc
sbb
ja
jne
add
cmpsl
jb
mov
insl
mov
pop
xchg
cmp
add
pushf
mov
cwtl
cmp
jecxz
pop
dec
int3
push
in
fs
pop
jne
mov
xchg
lods
adc
xor
into
fstpt
das
insb
sahf
enter
push
push
cmp
jnp
loop
xchg
adc
adc
scas
mov
loop
subl
mov
stos
xor
and
mov
repnz
mov
jmp
dec
mov
cld
sub
lds
imul
push
sahf
inc
ret
push
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
mov
hlt
sbb
jl
into
jg
jl
mov
and
daa
sti
insl
or
fucom
sbb
neg
mov
leave
sub
ja
insl
and
push
and
sbb
lods
call
fisubs
push
rcrl
and
adc
fwait
lahf
fistpll
jae
inc
dec
pop
addr16
jl
repnz
not
shll
fistps
popa
push
cmc
pop
or
push
dec
mov
lock
es
test
xchg
repz
inc
lahf
xchg
push
cmp
scas
arpl
mov
sub
xchg
loop
mov
add
inc
sub
xchg
nop
push
cmpsb
mov
sti
push
int
push
lcall
pop
popa
arpl
dec
push
pop
gs
mov
test
shlb
rcrl
lret
sub
sti
loop
popf
pop
mov
je
push
fdiv
lods
adc
cmp
pop
roll
mov
cmp
scas
shr
dec
push
nop
and
jmp
ja
pop
loope
add
cs
cwtl
aam
int3
xchg
cld
xchg
and
sub
push
shrb
gs
push
stos
nop
mov
mov
cmp
pop
mov
inc
sub
clc
jmp
mov
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
mov
add
jl
jl
bnd
dec
and
loop
mov
negb
into
xchg
je
lahf
mov
cs
pop
int3
push
insb
mov
or
push
popf
ds
cs
shll
add
jo
inc
mov
jae
jo
push
ret
out
ret
mov
pop
fs
pop
inc
scas
aam
idivb
fiaddl
cltd
pushf
pop
lret
lods
in
popa
pop
xchg
hlt
icebp
repz
push
adc
and
mov
and
scas
xlat
cmp
icebp
lock
mov
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
mov
jl
hlt
jl
jl
sahf
shll
mov
or
inc
aas
add
mov
jl
cmp
ret
lahf
call
movsb
test
pop
shr
bound
mov
push
mov
adc
jnp
lret
fsubs
jg
daa
add
push
insb
ds
add
mov
cmpsl
or
or
in
ds
sahf
loopne
and
mov
and
mov
and
xor
cmp
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
cs
add
jl
push
jge
js
or
sub
sbb
jg,pn
adc
mov
repz
scas
push
adc
xor
enter
ss
test
inc
xchg
icebp
mov
add
add
rcrl
add
mov
sbb
gs
push
jo
stos
adc
imul
xchg
adc
push
insb
jno
jns
mov
cmp
dec
out
xchg
stc
in
mov
mov
pop
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
push
pop
xchg
jl
xor
jl
movsl
sbb
sbb
xchg
or
fnstsw
gs
test
jnp
gs
inc
sub
jae
out
push
cld
mov
das
cmpsl
loopne
cmpl
push
mov
push
aad
or
inc
pop
push
adc
mov
pop
xor
movsb
js
stos
into
test
and
cs
sbb
mov
pusha
sti
push
fiadds
test
jmp
xchg
outsb
call
pop
mov
fidivs
jle
lahf
inc
xchg
repnz
rorb
lods
xchg
movsl
movsb
fiaddl
mov
push
loop
ljmp
cmp
scas
cmp
cli
add
jne
jne
xchg
xchg
push
out
shll
imul
cmp
add
adc
adc
or
sbb
and
mov
icebp
fwait
cmp
out
imul
inc
dec
pop
test
in
ret
xchg
mov
movsb
pop
mov
and
lret
sbb
leave
leave
adc
sti
bound
jmp
clc
and
ficompl
xorl
xchg
stc
rclb
rcll
mov
xor
mov
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
mov
scas
ror
jl
xor
jl
into
mov
stc
mov
clc
or
flds
popf
cmp
out
push
push
bound
jne
or
pop
sub
and
mov
mov
jbe
hlt
daa
and
inc
push
mov
dec
shr
xchg
jb
out
popf
adc
test
ljmp
xor
pushf
or
jbe
inc
add
jecxz
inc
data16
lret
bound
xchg
std
test
mov
inc
mov
adc
dec
out
in
ja
cmpsl
xor
mov
addr16
sti
mov
sbb
xchg
dec
movsl
dec
insb
loop
daa
outsl
fstps
mov
pushf
shll
negl
aas
sub
and
sbb
dec
ret
test
mov
push
push
sbb
push
into
and
cmpsb
add
sub
sub
push
repnz
dec
mov
insb
fidivl
xor
in
bound
test
rcll
movsb
ret
sub
dec
icebp
push
mov
add
or
inc
mov
out
ja
lea
icebp
inc
jae
cmp
and
out
push
lods
sub
cli
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
pop
xor
push
jl
xor
jl
fistps
cmpsl
mov
nop
sub
xchg
ret
ret
rcrl
and
in
cmp
rorb
xchg
xor
xchg
mov
cs
adc
mov
cmp
mov
mov
xchg
roll
jb
xor
mov
mov
cmp
mov
cmp
cs
xchg
idivb
movsl
sbb
jno
adc
loopne
mov
adc
imul
mov
or
into
or
int
fsubl
mov
aam
clc
mov
sbb
or
add
push
repnz
xchg
adc
fmul
data16
adc
xchg
mov
xlat
cld
testl
andl
pop
mov
mov
call
jmp
adcb
push
mov
filds
sbb
pop
ja
adc
inc
adc
or
out
xchg
sbb
cmpsb
push
push
mov
movsb
call
adc
xchg
shlb
sub
cltd
adc
sub
lcall
pop
wbinvd
std
jl
scas
add
cltd
pop
pop
dec
cwtl
cmpsl
dec
mov
roll
add
add
add
add
sbb
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
lea
int3
jl
sbb
jg
jl
push
or
stos
cltd
adc
andl
adc
sbb
mov
bound
mov
xchg
cmp
jne
inc
stos
push
xor
jne
push
test
and
lods
rclb
popf
stos
movsl
scas
and
lahf
add
lcall
adc
inc
dec
sub
dec
push
sbb
scas
repz
mov
test
adc
sbb
rol
push
test
pop
pop
dec
adc
sbb
xchg
addl
in
add
jecxz
sub
mov
jmp
out
outsl
xor
lds
fidivrs
aam
cmpsl
mov
jb
js
push
aas
xor
movsl
dec
cwtl
lds
pop
push
outsb
jbe
sti
sub
push
jnp
dec
and
push
repnz
dec
mov
cmp
cmp
arpl
cwtl
mov
inc
push
stos
jge
repnz
fwait
imul
popf
lock
aad
sbb
shl
push
shl
xchg
std
mov
out
inc
push
sbbl
sarl
out
jbe
fwait
mulb
inc
sahf
sbb
loop
in
shlb
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
sbb
jg
jl
popf
xchg
loopne
rolb
mov
or
mov
aas
hlt
and
jg
and
out
in
je
test
sbb
jne
nop
rcrl
sti
mov
or
inc
xchg
adc
sbb
dec
pop
mov
sti
dec
bound
dec
mov
xor
jnp
scas
mov
mov
icebp
xchg
adc
cltd
pop
push
xchg
or
jne
sbb
nop
mov
adc
aas
sbb
and
and
xchg
pushl
add
mov
fwait
xor
adc
or
fldt
das
int3
popf
sbb
add
mov
or
pop
das
pop
jg
sbb
cltd
cs
out
pop
push
je
jb
dec
add
sub
pop
sub
fld
push
mov
mov
mov
and
add
and
jg
out
sti
fs
in
xchg
fmul
or
repz
and
mov
xchg
jb
xchg
xchg
adc
cmpsb
inc
push
loope
inc
jl
adc
pop
outsl
xchg
and
cmp
divl
stc
jns
bnd
mov
jmp
mov
mov
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
mov
sbb
jg
jl
icebp
push
ss
cmp
and
lret
sub
add
add
push
clc
ja
rclb
popf
push
inc
add
pop
jle
adc
ja
push
fsts
ficomps
out
or
jno
insb
loop
fdivl
out
cli
outsl
inc
imul
aad
cmc
movb
and
adc
inc
daa
sahf
scas
jne
mov
add
push
loop
in
dec
js
sbb
fwait
rcrl
pop
ds
adc
movq
loope
mov
stos
mov
jo
jge
mov
or
out
fsubs
lods
dec
popf
mov
das
xor
dec
loopne
mov
clc
mov
mov
dec
push
cltd
movsl
lret
lods
mov
cwtl
pop
fnstsw
fcoms
jae
das
jo
inc
cmp
rorl
pop
addr16
aad
imul
xchg
push
ficoms
xlat
or
sbb
loopne
mov
add
arpl
inc
movl
jbe
mov
sbb
inc
ss
das
in
loopne
jbe
inc
mov
fimuls
push
jmp
inc
mov
nop
lgs
pop
frstor
in
rclb
lods
aas
push
pop
jae
stc
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
rorb
jl
jg
jl
jecxz,pn
outsb
je
ljmp
xchg
mov
mov
les
sbb
jno
lret
idivb
cmp
imul
dec
mov
pop
test
fwait
lahf
lea
rorb
mov
rol
addr16
cmp
std
inc
cmp
setle
and
dec
hlt
push
jnp
icebp
movsl
mov
push
xchg
dec
pop
std
jne
cmp
scas
push
mov
dec
sbb
fmul
call
into
ficoms
mov
adc
lods
hlt
or
fisttps
dec
xchg
arpl
mov
xchg
and
pop
rcrl
lcall
lds
lods
sarl
repnz
cmpb
cwtl
rcrl
rolb
mov
xchg
and
andb
dec
jbe
sub
xchg
shrl
cmp
jne
imul
out
shll
and
xchg
mov
cli
es
pop
and
dec
jl
or
dec
pop
dec
mov
test
popa
rcr
iret
inc
mov
inc
xor
cli
imul
add
psraw
out
frstor
mov
pop
jl
xor
jl
leave
or
mov
sub
popf
mov
jnp
jbe
scas
scas
std
adc
cs
xlat
and
dec
dec
dec
push
scas
scas
push
js
jne
lds
sub
mov
add
adc
sbb
jg
jne
push
sub
aas
push
xchg
adc
insb
sahf
fstpt
or
xchg
fidivl
cli
adc
fsubrp
sub
push
add
rcrb
hlt
mov
mov
push
scas
or
leave
cwtl
lods
test
mov
pop
stc
mov
popa
test
lods
mov
jnp
mov
jnp
leave
add
enter
cld
mov
dec
jg
inc
sbb
ficomps
pop
xor
test
adc
sbb
sbb
xorb
in
jecxz
or
xlat
outsl
sbb
sbb
pop
iretw
int
add
xchg
xor
mov
inc
jno
fsubrl
ret
pop
fisubl
sti
das
int
into
aas
mov
out
sub
and
mov
ds
jl
jb
mov
mov
inc
mov
dec
ss
addr16
fcoms
sbb
xor
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
das
add
fbld
fcomps
addr16
andl
pop
sbb
repz
xor
test
jl
ds
pop
push
mov
lea
jge
push
fidivl
inc
mov
mov
fwait
xlat
mov
lret
mov
imul
imul
leave
pop
fucomi
push
jae
mov
xlat
cs
xor
js
xlat
aas
notb
fistl
and
loop
xlat
push
mov
call
scas
mov
or
mov
std
inc
gs
jle
add
adc
push
out
aas
add
hlt
xor
and
and
aam
shrl
ja
icebp
sub
jg
push
sub
lcall
fadd
outsl
aam
mov
mov
jnp
xchg
sar
add
sub
adc
mov
fisubrl
pop
mov
divb
push
cmp
leave
sti
inc
xor
inc
cmp
in
outsb
in
shll
bound
sbb
loop
ss
or
popf
push
mov
mov
das
dec
mov
adc
or
int
and
bound
fwait
sbb
cmp
fimuls
scas
xlat
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
ja
jnp
mov
jl
xor
jl
fs
icebp
fwait
in
or
mov
lock
sbb
inc
in
and
cmp
pop
pushf
stos
or
stos
nop
mov
xchg
test
cmp
mov
xchg
pop
lcall
aaa
cmp
pop
cld
and
inc
push
dec
mov
jno
cmpsl
mov
call
cmpsl
fbld
xchg
sbb
gs
sarl
daa
mov
pusha
add
cwtl
test
sbb
fbstp
icebp
mov
rcl
jns
xchg
in
push
shrl
jns
adc
mov
sub
cmpsl
mov
xchg
test
aad
sahf
add
dec
test
lods
mov
push
mov
in
mov
mov
xor
push
jno
adc
mov
jp
mov
fs
in
lock
adc
dec
cld
or
pop
clc
ja
out
dec
jae
mov
dec
push
stos
xor
sbb
sbb
ljmp
pop
xor
sarb
sub
mov
pop
and
and
stc
xchg
pusha
cmpsl
and
xor
sahf
scas
inc
loope
inc
mov
or
aas
dec
in
je
mov
xchg
jae
adc
stc
and
or
fdivrl
mov
adc
test
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
mov
sbb
rcrl
arpl
mov
das
push
sbb
aas
xlat
sub
jp
and
outsb
dec
push
sub
jp
jg
push
jecxz
dec
mov
lret
pop
pop
int
jmp
repz
jns
sbbb
aas
fisubrs
pusha
orl
leave
outsl
push
stos
adc
jp
and
ljmp
enter
cmc
je
mov
push
adc
sub
mov
fsubr
cwtl
dec
mov
leave
jne
leave
cltd
aas
into
push
in
xchg
es
inc
dec
push
and
pop
jo
sbb
push
push
jbe
xchg
loop
add
dec
xchg
and
push
fistl
jl
bound
mov
cli
bound
aad
filds
icebp
sbb
insb
dec
fsts
cmp
mov
cmp
jne
test
cmc
mov
shll
xchg
leave
les
mov
daa
aas
lahf
jno
lret
cld
andb
cmp
jnp
xchg
sahf
xorl
mov
sbb
mov
psubq
mov
pop
arpl
add
or
mov
cltd
xor
push
shll
lods
out
out
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
jnp
mov
call
jne
shlb
pop
ja
xlat
sub
mov
push
mov
dec
out
fs
in
or
cltd
fbld
fistps
push
xchg
cmp
mov
pop
and
push
push
cmpsb
imul
adc
js
pop
adc
mov
aad
adcl
orb
and
cmpsl
js
call
sub
insl
pop
push
stos
mov
scas
mov
inc
rep
fs
pop
fsubr
dec
cmpsl
in
sub
jns
test
dec
fiaddl
push
jge
lret
adc
push
pop
xchg
sbbb
fldcw
adc
push
scas
xchg
fwait
and
adc
xchg
arpl
jp
jne
inc
jg
add
aaa
and
cmp
cli
push
loop
xor
enter
fmuls
xchg
cltd
loop
pop
xlat
mov
mov
jne
push
sti
shl
mov
std
movq
mov
and
push
or
mov
push
mov
push
push
pop
inc
out
loope
mov
push
hlt
mov
jmp
or
push
cmp
dec
rol
nop
adc
jl
xor
jl
pop
jg
adc
cmp
jle
jmp
mov
fiaddl
inc
shl
cmp
pop
xchg
sub
xchg
and
pop
pop
shr
mov
and
imul
inc
xor
sbb
pop
call
aad
jno
stos
hlt
xlat
ljmp
jnp
lods
inc
dec
inc
dec
mov
xchg
scas
or
xchg
mul
ficoml
mov
popa
mov
adc
mov
pop
jl
sbb
ret
push
xchg
inc
addr16
lret
inc
mov
dec
inc
subl
and
mov
cmpsl
add
lods
cmpsl
cld
scas
jecxz
into
jl
test
rcll
ja
imulb
jp
cwtl
push
fs
cmpsl
scas
pop
and
inc
dec
adc
gs
gs
or
inc
faddl
jo
xchg
dec
adc
js
sar
punpckldq
ljmp
mov
mov
xor
mov
xchg
pushf
imulb
test
in
leave
fs
fcoms
arpl
clc
in
lret
stos
popa
and
mov
fisttps
jle
in
aad
mov
pop
call
mov
sbb
dec
jo
imul
xor
add
imul
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
mov
adc
jl
jg
jl
mov
jb
mov
in
add
push
sub
push
loope
lods
pop
ret
lock
mov
jecxz
hlt
outsb
jg
fcmovu
mov
lods
iret
pop
sahf
roll
and
push
nop
mov
and
aad
lret
xor
mov
repz
aam
mov
jp
jecxz
cmp
xor
mov
mov
js
xchg
icebp
or
sahf
daa
push
push
call
cli
lods
ret
dec
ds
fildll
rcr
dec
pusha
mov
adc
jp
jae
out
in
mov
repnz
dec
mov
dec
add
icebp
inc
in
cmpsb
leave
js
adcl
inc
cli
mov
xchg
lds
loop
mov
lods
test
das
fldcw
lcall
aaa
aad
mov
test
inc
scas
xor
aam
addb
cmp
xor
loopne
jp
jns
lret
pusha
popa
or
push
out
xchg
out
inc
stos
lock
mov
pop
mov
fisttps
adc
aaa
and
push
and
fnstenv
mov
cwtl
out
imul
clc
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
rcl
aam
push
sahf
xor
popf
push
push
and
stos
clc
movsl
jne
adc
mov
shll
push
out
inc
adc
push
sub
and
sbb
les
cmc
gs
scas
popf
push
popf
xor
sbb
rorb
push
jp
dec
movsb
pop
jo
mov
in
call
or
sahf
imul
jl
jl
push
into
jmp
xchg
cmp
insb
movsl
arpl
dec
insl
xor
xchg
add
push
and
pop
test
addr16
xchg
inc
sbb
imul
shrb
rorb
cmp
mov
inc
push
xlat
dec
movsl
outsl
cmp
push
xchg
inc
xor
iret
xor
push
jge
sub
cwtl
cld
mov
mov
lcall
test
adc
lret
in
hlt
ja
into
sub
jnp
push
sbb
add
push
not
fucomip
push
pop
add
in
mov
stos
jb
mov
jmp
mov
mov
notb
inc
cld
roll
fneni(8087
adc
jle
popa
adc
dec
mov
dec
nop
push
repnz
mov
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
cmp
in
cmpsl
sub
jl
jl
outsl
and
and
sbb
paddb
mov
aaa
push
call
mov
and
lret
pop
dec
mov
lds
mov
rclb
pop
imul
xchg
outsl
push
lds
hlt
cld
dec
loopne
stos
sub
push
sar
inc
or
mov
inc
push
and
enter
lds
mov
std
sbb
cmpsl
sub
sub
clc
adc
sub
adc
outsb
and
pop
mov
pop
jl
xchg
call
sbb
cmp
xlat
insb
adc
lods
sbb
jl
cmc
jne
inc
cmp
mov
in
mov
mov
inc
or
xor
mov
push
and
out
andl
or
les
popf
mov
push
adc
push
add
add
icebp
in
fs
jns
adc
jne
xor
jl
bound
in
mov
push
push
arpl
jnp
lcall
or
or
adc
and
push
testl
in
iret
in
jge
inc
dec
sbb
stos
sbb
xor
movsl
cmp
inc
sub
imul
inc
mov
daa
inc
or
loope
mov
add
sub
push
ja
mov
and
aaa
lcall
js,pt
movsl
sub
lock
adc
scas
aas
pop
dec
out
outsl
xchg
repz
js
jmp
add
mov
adc
push
lods
xchg
out
mov
aam
or
xchg
movsb
cli
add
sub
popl
pop
in
testb
movsl
jge
inc
cmpsl
xchg
mov
loope
fcomi
popa
jbe
mov
cmc
mov
aam
push
test
cmp
adc
bound
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
ror
xchg
push
sub
jl
bound
call
dec
int3
lods
sbb
add
jge
and
sahf
push
pop
jae
push
mov
lea
jp
xor
sbb
jno
jp
xchg
inc
push
inc
std
push
inc
fsubrs
clc
imul
in
por
arpl
pop
xorl
mov
pop
clc
or
pushf
push
xchg
jp
sbb
cmpl
leave
sub
loop
xor
adc
mov
add
sub
sub
jg
mov
cmp
cld
fstpl
mov
or
loope
mov
clc
mov
inc
cmp
inc
xor
xor
mov
int3
push
mov
in
jo
rcrb
inc
cs
stc
lods
xchg
jg
xchg
jae
addl
imul
aam
dec
push
sbbl
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
fsts
sub
jg
jl
pusha
xchg
inc
idivb
outsb
sarb
pop
dec
int
push
xor
movsl
xchg
pop
mov
fmull
daa
pop
repz
imul
jmp
jae
sbb
lea
shll
xchg
xchg
sbb
test
mov
jae
inc
add
add
dec
push
scas
fstl
cmc
fildl
aam
cmp
int
mov
pop
add
aad
or
loopne
cmp
js
sti
jmp
iret
lahf
repz
leave
aas
cmpsb
aam
mov
jge
clc
push
test
xchg
out
orw
jnp,pn
jl
push
cmp
adc
rorl
add
push
fildl
cld
cmpsl
int3
mov
and
mov
loope
jb
mov
jmp
aas
push
adc
sbb
inc
xor
xor
mov
hlt
adc
cmpsb
dec
sub
icebp
addl
pushl
hlt
pop
in
mov
stos
rcrb
mov
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
cltd
sbb
jl
cmpsb
jl
scas
imul
or
xor
mov
dec
add
xor
outsb
into
aam
lret
pop
es
xor
pop
stos
lret
scas
and
or
mov
addr16
in
repnz
shlb
pop
faddp
inc
or
lea
xchg
cwtl
push
jecxz
pop
mov
fisttpl
add
nop
movsb
adc
fldl
enter
xchg
sub
or
insl
cmp
stc
pop
mov
or
jbe
mov
add
in
xchg
sub
imul
xchg
mov
loope
inc
add
push
cmp
or
or
ljmp
jno
les
repz
mov
jge
mov
les
pop
subb
and
mov
xchg
fs
lcall
jmp
mov
ss
repz
dec
xor
pop
insb
loope
pop
leave
cmp
dec
jge
mulb
std
sub
popa
mov
out
dec
push
call
push
mov
roll
or
test
add
inc
adc
and
add
add
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
cmp
sbb
jl
scas
mov
shl
xchg
ss
fwait
sti
insl
daa
pop
mov
ret
xchg
shl
aad
dec
or
shrl
mov
aam
adc
jmp
lods
push
orb
mov
imul
popa
mov
mov
out
in
cmp
lret
loop
movsl
mov
cmp
sbb
ja
imul
add
stc
mov
jae
and
in
xor
pop
test
jb
mov
fwait
aad
and
fs
push
jnp
cmpsl
lods
mulb
rolb
es
mov
je
add
cmp
movsb
movsb
daa
clc
aas
jmp
mov
out
pop
xchg
outsb
and
je
ja
gs
xlat
push
pop
xor
pop
mov
cli
xchg
dec
mov
loopne
inc
mov
cmc
sub
or
or
bound
sbb
leave
jb
xor
jns
pop
jecxz
pop
cmp
das
xchg
mov
mov
mov
mov
mov
mov
test
jmp
pop
loope
sbb
lret
mov
xor
cmpsb
sbb
das
jl
sbb
jl
add
loop
aas
mov
sahf
mov
sahf
mov
push
or
xor
pop
push
push
lods
lea
cmp
cmpsb
xlat
test
sub
mov
push
add
fs
mov
fcmovnb
sahf
lock
push
push
adc
jp
les
and
cmpsb
movl
bound
mov
mov
jp
fiadds
jge
fidivl
push
push
fisubrs
cmp
and
or
and
shlb
ja
std
push
mov
mov
sbb
push
adcl
aam
cld
mov
xor
das
testl
sti
sub
test
stos
std
mov
lcall
shlb
jae
inc
mov
jnp
or
xchg
jg
and
xabort
mov
pop
fdivs
mov
pushl
sbb
push
sbb
sti
mov
sub
jbe
or
or
test
add
add
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
hlt
sub
jl
jg
jl
dec
popl
lahf
adc
push
mov
outsb
or
push
push
or
and
xchg
mov
or
aam
fcompl
cmp
mov
addr16
xor
insb
repz
mov
cmp
test
shlb
sbb
pop
add
push
inc
in
push
sub
in
mov
jg
cli
inc
roll
fldl
lock
incl
xchg
mov
and
adc
cmc
daa
dec
mov
mulb
repz
mov
stc
pusha
jbe
xlat
xor
and
mov
mov
sub
cmpsl
or
in
mov
sbbl
push
and
sbb
or
inc
mov
loopne
scas
mov
movsl
out
out
add
movb
cmp
mov
sbb
push
adc
inc
pop
cmp
add
cmp
outsl
xchg
cmp
outsl
adc
mull
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
mov
imull
xchg
and
jg
jl
pop
imull
stos
scas
stc
and
stos
test
dec
cltd
stos
loope
xchg
ss
addr16
xchg
in
loopne
outsb
arpl
jno
xchg
jmp
cli
mov
ffree
sbb
mov
lret
xor
pop
adc
push
out
pop
ret
sub
xor
xchg
les
lea
bound
outsl
sbb
and
xchg
push
xchg
lods
movl
mov
mov
js
stos
adc
sbb
sub
iret
pop
adc
ss
pop
sbb
cli
pop
stos
data16
in
push
std
dec
je
pop
add
mov
push
cmp
pop
jnp
cmp
jo
mov
or
cmp
mov
std
adc
and
in
data16
mov
lahf
pop
leave
sbb
xchg
aas
and
clc
lea
adc
mov
sbbl
enter
subl
push
pop
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
incl
sub
or
imul
cmp
out
ds
jg
mov
push
cld
sub
lret
or
je
mov
add
mov
push
in
jae
push
dec
cmp
jb
add
cmp
inc
dec
mov
cli
leave
ror
xchg
and
xchg
test
nop
and
mov
inc
mov
add
les
mov
stos
add
pop
subb
nop
incb
stos
aaa
out
and
orb
clc
cs
fildl
add
mov
sub
js
negl
test
add
pop
loopne
ret
fsubl
jle
push
outsb
jns
xor
and
cmpl
imul
xor
call
dec
aam
in
in
mov
mov
sbb
jnp
xchg
je
lods
mov
pusha
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
fnstcw
or
pushf
mov
push
xchg
add
out
jne
cmp
inc
cmp
inc
call
scas
inc
pop
adc
and
movsl
in
push
fistpll
and
inc
xor
pusha
je
xlat
outsb
dec
jle
daa
mov
jmp
mov
push
push
cmp
or
push
subl
jo
cmp
div
in
adc
fsts
add
ljmp
sub
fst
pop
xor
mov
in
xchg
cmovbe
es
sahf
mov
insl
push
jno
inc
and
sbb
in
sub
outsl
sarl
add
adc
movsb
mulb
sub
mov
shrl
sti
in
fs
mov
dec
jno
xchg
mov
shll
cmp
cmp
insb
or
ja
xor
push
movsl
sbb
jb
mov
lcall
sbb
sbb
adc
js
imul
mov
add
aam
add
or
inc
inc
inc
add
jne
addl
jmp
push
repz
adc
adc
dec
and
jg
jl
ljmp
pop
bound
lcall
pop
std
out
cmpsw
jl
xchg
cmp
sub
mov
fisubrl
insb
rorb
xchg
fiadds
call
mov
fildl
out
sbb
das
mov
gs
or
inc
sarb
inc
xchg
inc
pushf
gs
xchg
fcoms
and
int
cwtl
mov
jb
adc
js
jne
cmpsl
adc
call
jg
mov
dec
sub
das
cs
cli
lods
sub
push
xor
in
cltd
mov
jp
push
mov
jl
pop
mov
cld
stos
clc
cmp
xor
or
mov
jo
rcrb
imul
mov
clc
mov
pop
or
insl
sub
cs
push
out
out
inc
js
scas
ss
leave
cmp
sarb
mov
cwtl
shlb
and
xor
inc
pushl
jmp
xchg
pop
cmpsl
inc
adc
sub
stos
fs
pop
and
jl
push
xlat
clts
add
pop
pop
push
test
sub
push
cmp
iret
fiadds
sub
test
mov
addl
sbb
adc
leave
jne
lret
jecxz
sbb
cmpb
enter
or
sarl
shlb
push
clc
dec
sbb
out
adc
sti
push
mov
shlb
hlt
outsl
sub
loope
mov
addr16
jnp
fs
test
sahf
fimuls
cmpsl
mov
shr
sbb
inc
jbe
stos
les
aam
add
mov
or
jne
inc
cmpsl
cmp
mov
popa
push
out
mov
mov
repnz
sub
clc
into
jge
insl
into
frstpm(287
rcrl
stc
inc
pusha
push
clc
mov
pushf
and
cmp
xchg
push
int3
fcoms
les
mov
arpl
and
outsb
adc
add
mov
incl
add
add
add
mov
inc
in
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
and
cmp
push
jl
or
or
dec
or
popa
mov
cmp
xchg
push
add
notb
or
dec
or
pop
xor
sbb
jle
sti
add
mov
inc
loope
push
mov
jbe
sarb
fldl
pop
or
mov
test
xchg
clc
push
fdiv
xor
pop
insb
jns
mov
sahf
jmp
sbb
int3
xlat
or
outsb
stos
sub
aad
outsb
stos
mov
cwtl
les
xor
cmp
stc
mov
jae
mov
mov
add
or
das
adc
test
insb
aad
push
call
add
loope
jge
ret
mov
out
sub
and
enter
ds
push
cs
test
mov
mov
insl
sti
movsbl
ret
jmp
lcall
xorl
test
pusha
mov
pop
lea
mov
iret
js
jecxz
push
push
push
cmp
stc
add
clc
add
push
jmp
sub
jge
jge
fnstenv
test
jl
jg
jl
jno
aam
and
dec
pusha
rolb
ficompl
add
ja
sbbl
mov
inc
cli
xor
push
loope
loop
add
mov
data16
pop
daa
loop
mov
fcomp
jnp
add
cli
pop
shl
call
pop
jle
inc
in
cwtd
arpl
push
xor
sahf
xlat
mov
adc
aas
rorb
sub
enter
mov
jb
push
and
mov
loope
adc
xchg
cmp
lret
les
xor
sub
lea
or
sbb
fnstsw
inc
sbb
je
push
xchg
xchg
lret
clc
in
cmp
lods
xchg
and
mov
lods
xchg
aas
aam
adc
jge
daa
push
addr16
out
and
mov
movsl
pop
pop
sbb
inc
dec
int3
and
mov
lret
lahf
xchg
icebp
jo
mov
cli
sahf
adc
or
jecxz
add
mov
mov
jmp
shr
dec
pop
pop
jns
insl
adc
repnz
cmp
or
push
cli
hlt
mov
dec
xor
andb
scas
and
mov
aam
push
fmull
xchg
adc
and
or
and
lahf
imul
xchg
sub
jbe
mov
sbb
mov
test
mov
or
dec
repnz
cmp
rol
xor
xlat
or
fstl
inc
fwait
dec
je
mov
xor
enter
repnz
sub
test
stos
xchg
aas
xlat
pusha
jb
adc
fs
push
lods
sbb
adc
add
faddl
fildll
xor
pusha
xchg
mov
ja
int
cmp
mov
mov
jno
sub
jae
ljmp
xchg
notl
push
imul
push
iret
dec
or
jns
outsl
or
in
lea
hlt
inc
lods
adc
in
loop
mov
addb
or
jmp
push
ljmp
lcall
xor
repz
decl
clc
add
loopne
test
inc
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
fcoml
out
cmp
jg
jl
ret
xchg
test
scas
mov
mov
aas
loope
xchg
popa
imul
add
jecxz
inc
push
mov
cmp
push
adc
pop
out
xchg
sub
jno
loop
adc
pop
je
negb
fmuls
pop
mov
cmp
pop
lds
in
xor
adc
xor
test
scas
xor
sbb
sub
in
jnp
lds
lea
and
pop
shl
mov
push
outsl
push
inc
jbe
adc
rclb
mov
aas
pop
pop
jl
aam
enter
lock
mov
repnz
sbb
lret
push
je
mov
daa
arpl
xchg
sbb
lods
xchg
shlb
mov
push
mov
push
in
jmp
inc
pop
dec
xor
sahf
pop
fwait
mov
bound
daa
mov
mov
add
fsub
mov
loopne
lsl
bound
ja
fsubl
call
mov
xor
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
mov
fcoml
cmp
jg
jl
sub
add
jmp
in
mov
or
sbb
xor
adc
xor
std
stos
mov
sbb
ds
shll
call
stos
pop
lods
pop
loope
fs
cmp
pop
push
xor
cmp
xchg
xchg
in
and
push
push
sbb
fisubl
cmpsb
ljmp
hlt
inc
lahf
outsl
lock
cli
mov
stos
les
test
arpl
mov
sub
lods
xchg
loopne
or
sahf
jb
mov
bound
sub
dec
dec
shlb
xchg
mov
adc
dec
dec
notl
jnp
fldenv
mov
insb
mov
jnp
mov
fnstsw
jp
push
dec
ja
lahf
notl
mov
lret
inc
or
sbb
push
clc
mov
call
add
sbb
stc
cmp
inc
xor
inc
sub
mov
add
jmp
xchg
out
std
push
gs
repz
cmp
jg
jl
xor
cmc
cs
icebp
lea
dec
stos
rcrl
push
cmc
dec
fists
fs
mov
push
xchg
into
pop
jae
hlt
int
jp
xor
nop
pop
cmp
mov
jecxz
inc
jno
daa
lock
cld
pushf
sarb
mov
xchg
fadd
daa
movsb
add
cli
inc
test
scas
cmpsb
xlat
imul
outsl
pop
mov
sbb
insl
xchg
and
xchg
xor
aam
xchg
into
add
aaa
add
aad
mov
fucomi
lods
insb
add
adc
jo
mov
dec
mov
xchg
cmp
and
int
cmpsl
mov
in
push
push
push
and
push
or
int
adc
mov
mov
dec
mov
ret
leave
outsb
leave
jg
int
cmp
out
mov
testl
scas
int3
dec
and
dec
out
sub
sbb
and
cli
dec
popf
push
push
or
cmp
inc
popl
or
loop
inc
clc
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
mov
jl
or
and
mov
mov
xchg
add
dec
xchg
insl
sti
push
jno
dec
push
cmp
cmc
mov
shl
scas
cmp
mov
out
rcrl
lock
fimuls
or
out
lret
das
push
ss
pushl
or
ja
inc
outsl
inc
xor
test
into
cmp
stos
add
xchg
xchg
mov
dec
cmpsb
and
lods
stos
cmpsb
mov
flds
cmpsb
xor
mov
xor
je
mov
sahf
mov
int3
push
hlt
xchg
mov
sub
orl
bound
loopne
cmp
bound
hlt
push
popa
fbstp
fldcw
hlt
int3
cli
addr16
mov
int3
sti
xchg
pop
cmp
inc
loope
and
icebp
dec
in
pop
lret
shl
pop
frstor
xchg
stos
and
lods
dec
lds
sub
inc
fsubrs
pop
pop
pop
popa
dec
mov
sahf
sti
cmp
gs
dec
lret
in
jae
test
enterw
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
jmp
sbb
mov
insl
lods
test
iret
outsb
lds
jl
jg
jl
jmp
cltd
pop
jmp
sti
push
ret
bound
sbb
adc
jnp
pop
lahf
mov
lods
dec
les
jl
lcall
imul
adc
jb
and
mov
scas
fwait
jge
sahf
je
cmp
out
aaa
inc
cltd
xchg
xchg
test
lods
sbb
leave
addr16
or
push
fwait
fwait
jl
mov
jnp
das
sub
mov
negb
cmp
outsb
mov
jb
popa
in
loope
xor
mov
imul
dec
andl
and
andb
loop
dec
cmpsl
push
xchg
and
sbb
cmp
cli
mov
inc
ret
pusha
mov
jg
das
lahf
pop
rclb
leave
xchg
dec
jle
push
mov
pop
mov
ret
mov
loop
cltd
mov
mov
sahf
mov
add
daa
push
lods
mov
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
jge
jbe
sarb
jl
or
add
sbb
dec
pop
xchg
xchg
js
fdivs
mov
in
add
enter
std
es
fwait
xchg
cmpsb
imul
imul
ljmp
push
repnz
fdivs
push
inc
lcall
or
out
pop
or
pop
push
orb
mov
cmp
push
xor
fwait
sbb
mov
clc
pop
gs
jl
ret
push
mov
push
add
pusha
xchg
aam
pop
mov
loopne
aam
ret
mov
sub
cmp
dec
adc
xchg
add
xchg
sbb
cmp
and
mov
add
cld
lds
sbb
push
jno
xor
insl
aad
jne
les
mov
or
scas
push
jo
lret
jmp
shl
mov
mov
adc
ffree
pushl
in
fnstcw
dec
aad
jo
or
lock
adc
insl
cltd
hlt
adc
aad
sbbl
int3
mov
push
add
pop
pop
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
add
inc
sbb
jl,pt
push
jg
jl
enter
jp
add
cwtl
insb
je
std
jbe
cmpsb
stos
mov
imul
cmp
inc
mov
shl
daa
sarb
xor
daa
mull
push
jno
jmp
fwait
jne
cltd
cmp
jnp
push
bnd
cld
pop
hlt
push
adc
and
mov
pushf
sbb
pop
cwtl
adc
xor
sub
testl
mov
sti
mov
jb
ret
notl
push
fistpl
mov
or
ficoml
out
sub
push
fwait
movsl
push
movsb
fsts
push
dec
cmc
insb
adc
inc
push
loop
xor
inc
bound
xchg
xchg
inc
pop
xor
push
dec
jg
and
adc
and
data16
push
push
mov
out
movsl
out
loope
cmp
cltd
ss
pushf
mov
add
es
adc
xlat
mov
push
and
jo
mov
xchg
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
insl
int3
cwtl
fwait
cltd
inc
ljmp
ret
or
shrb
xchg
std
loope
xchg
insl
sbb
cltd
push
sbb
push
fwait
in
jne
push
mov
mov
or
pushf
mov
lods
fstpl
stc
and
lret
das
mov
mov
cld
mov
mov
or
xchg
ss
fnstcw
inc
xor
lea
jns
cli
ss
mov
cmpsl
xor
and
push
stos
mov
sbb
out
jne
cmc
mov
xchg
out
pop
rcl
in
lock
and
out
jp
enter
mov
xchg
xchg
into
or
mov
popa
jp
clc
cmp
xchg
xchg
sub
or
out
es
addl
jle
icebp
adc
jmp
xor
div
mov
aam
movsb
sub
in
push
push
cmp
shlb
xchg
dec
fistpl
rorb
inc
fsubr
xor
add
movsb
flds
xor
jb
xchg
xor
jg
jl
dec
push
call
test
sub
mov
dec
cwtl
mov
and
mov
jl
adc
adc
sti
sbb
jnp
out
movsb
in
add
mov
xchg
outsl
xor
sub
stc
out
clc
nopl
fwait
test
push
push
add
cwtl
inc
lret
jne
cmp
cli
aam
jmp
es
popa
stos
mov
dec
mov
mov
cmp
adc
dec
inc
jbe
jmp
clc
sub
arpl
js
pop
jmp
mov
mov
rol
movsb
es
adc
enter
inc
push
pop
and
ds
pop
add
loope
cmc
sbb
jae
popf
scas
loop
xchg
fs
mov
jbe
mov
and
aaa
int3
enter
push
pop
cs
fadds
std
arpl
mov
sbb
out
inc
jne
push
nop
negb
leave
mov
fisttps
aad
jae
aad
mov
mov
add
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
aas
es
inc
mov
jl
push
jg
jl
lret
call
fst
cli
xchg
mull
jecxz
cmp
mov
cmpsl
loope
dec
sub
and
add
xor
in
pop
sbb
cwtl
sub
pusha
xchg
or
push
fdivs
jne
mov
rep
daa
movups
xor
pop
cmpsl
cmpsl
cmp
xor
mov
es
aaa
mov
cmp
out
sbb
test
mov
push
jb
dec
sbbb
dec
mov
jl
xchg
in
les
push
int
mov
or
mov
and
popl
mov
push
in
ss
repz
lea
mov
mov
out
mov
xor
jl
sub
mov
pop
enter
cwtl
fstp
add
fistpll
mov
ror
fdivl
out
mov
lods
mov
inc
dec
mov
push
dec
mov
mov
mov
into
mov
xor
movl
xor
addl
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
std
push
pop
xor
jg
jl
and
cmp
jecxz
xlat
push
mov
sbb
add
leave
mov
mov
jae
cmpl
mov
das
mov
push
add
xor
xchg
xor
aaa
mov
pop
sarb
jae
pop
mov
sbb
lock
pand
loop
test
xchg
aas
dec
mov
icebp
aad
dec
int3
pop
cli
xor
stc
out
or
iret
daa
mov
xor
out
lcall
jae
jne
popf
ror
aas
lods
mov
push
dec
mov
fisttpl
pop
popa
aaa
and
and
popf
fstpt
add
xchg
fs
push
or
fwait
sbb
sbb
adc
push
lret
out
adc
mov
cltd
call
inc
add
push
xchg
pop
inc
lods
or
mov
cmpl
ret
adc
mov
and
lock
xchg
sahf
sbb
adc
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
lcall
jl
jg
jl
cltd
aaa
pop
lea
inc
pusha
test
xor
mov
jae
jg
push
outsb
stc
and
xchg
mov
xor
and
jne
xchg
js
xor
xor
jbe
je
sbb
pop
in
out
leave
loop
mov
cmp
and
out
nop
xlat
sbb
lret
dec
xor
dec
jge
insb
cmpsb
shl
mov
mov
out
out
mov
ret
aas
xor
pop
in
and
pop
pop
psubb
cli
roll
icebp
xchg
sahf
hlt
sub
pop
cltd
sub
fadds
ret
mov
mov
and
mov
mov
mov
and
and
inc
es
and
jecxz
mov
inc
sbb
cmp
rolb
sub
imulb
xor
out
sub
cmc
int
sub
mov
push
fsubr
popf
adc
dec
test
mov
pop
push
and
xor
dec
leave
jg
cmpb
cmp
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fists
aaa
jl
push
jg
jl
and
and
and
sub
sarl
push
outsl
and
sbb
fstps
add
push
incl
fisubrl
iret
inc
std
in
push
mov
or
pop
sbb
xor
aad
mov
jp
and
pop
adc
loope
inc
insl
add
out
scas
das
stc
sbb
inc
scas
loope
pushf
pushf
jecxz
ficoms
icebp
repz
sub
jbe
movsl
mov
dec
daa
pop
flds
rcll
pop
mov
sbb
mov
sub
jmp
dec
cltd
sub
xor
add
cwtl
cmp
push
sub
push
dec
and
test
movsb
and
je
sub
int3
sub
mov
xchg
cli
sti
faddp
mov
addr16
or
stos
jnp
or
dec
fs
jp
mov
xchg
fwait
in
dec
lret
pushf
xchg
inc
mov
push
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
sbb
call
ja
push
cmpsl
pusha
mov
adc
jmp
inc
pop
or
sub
nop
or
add
add
stos
mov
adc
cmp
pushf
das
fisubl
insb
push
repz
mov
sar
xchg
mov
aad
fsubrl
int3
sbb
lock
and
mov
fimuls
push
ret
cmpb
gs
icebp
in
sbb
xchg
xchg
push
xchg
clc
sub
sbb
mov
push
pop
xchg
pop
pop
jns
push
mov
jae
push
add
jmp
cmp
xchg
cmc
fldt
jb
sbb
sbb
pop
lret
dec
cmc
out
in
lcall
push
es
mov
fiadds
mov
sub
dec
int
data16
ja
adc
frstor
jbe
adc
xchg
and
retw
or
cwtl
mov
mov
dec
shrb
stc
dec
mov
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
or
push
jg
jl
decb
xchg
sbb
call
lret
sarl
sub
ret
mov
insl
cmp
movsb
xor
sbb
cmp
into
dec
mov
fs
add
outsb
push
push
mov
cmpsl
jns
xor
call
xor
bound
mov
in
sbb
xchg
daa
pop
int3
cmp
mov
pop
pushf
inc
mov
popf
popf
scas
negb
xchg
lds
jmp
ja
es
repnz
loopne
push
mov
cmpsl
ss
adc
adc
int
inc
add
cmp
dec
mov
popa
loopne
sarl
add
ljmp
lea
adc
lret
mov
sub
inc
scas
sbb
push
xor
rcr
or
jp
jno
jp
fcmovne
into
xchg
clc
scas
jg
jo
lret
fadds
inc
stos
xor
adc
mov
cmp
xor
adc
shrb
inc
xchg
sbbb
cmpsl
jbe
adc
inc
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
enter
jg
jl
dec
and
jno
xchg
inc
into
and
arpl
mov
inc
sbb
inc
lahf
cltd
inc
dec
jae
cmpsl
outsb
and
adc
xor
fstps
jecxz
cmp
clc
cmc
jo
xchg
jge
rcll
enter
shll
ret
push
dec
push
and
ffreep
dec
jns
mov
and
into
inc
cmp
dec
adc
int
inc
fprem1
stos
aad
pusha
push
addr16
repnz
call
mov
mov
shll
dec
lret
fcmove
pop
in
push
xchg
mov
jecxz
add
dec
mov
rorb
or
xchg
or
aas
mov
push
cmc
stos
ja
data16
and
fisubrs
jecxz
sbb
adcl
pop
fbld
mov
fsubrl
mov
jae
adc
jns
in
xor
sbb
cwtl
jmp
arpl
in
cltd
dec
sbbl
loope
cmp
cmpsl
test
inc
xor
jl
push
inc
js
out
pop
stos
pushf
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
jmp
out
jl
mov
pop
jno
dec
and
jecxz
and
mov
mov
push
xor
repz
add
lahf
rorl
rcl
or
pop
es
lock
pushf
call
mov
jecxz
mov
mov
in
cwtl
call
xchg
mov
sbb
lcall
insb
xchg
sub
loopne
mov
rolb
iret
jns
cli
sub
lret
sub
mov
leave
xor
mov
inc
sarl
xchg
add
imul
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
xor
jl
jl
jl
outsb
popa
ficoml
mov
shrb
pop
push
pusha
push
xor
dec
mov
adcb
mov
sub
sbb
push
das
loop
imul
ret
pop
pushf
jmp
sti
rcr
rorb
sub
pop
cmp
mov
in
push
data16
adc
cwtl
gs
inc
ljmp
push
mov
mov
mov
daa
les
mov
fwait
xor
lock
push
out
pop
aam
hlt
inc
fnstsw
roll
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
in
or
cmp
sub
push
mov
and
push
dec
sbb
mov
out
test
addr16
fs
ret
jo
mov
aas
pop
cmp
sub
sub
pop
aad
and
imull
sbb
sbb
xchg
pop
dec
jnp
test
or
inc
lock
pop
fwait
jmp
repnz
clc
int
inc
xchg
daa
cltd
jne
pop
jb
inc
sub
push
imul
int3
lret
and
push
dec
add
sub
out
stc
dec
adc
scas
mov
jnp
in
adc
add
iret
inc
aad
dec
sti
rorb
mov
scas
adc
dec
lods
fsubl
jg
sub
push
loope
fstl
test
add
cmp
xchg
push
daa
jp
inc
das
daa
add
ja
jb
cli
ljmp
pop
fcoms
pop
fwait
sbb
cmp
popa
daa
mov
jp
ret
jo
sahf
add
ljmp
lcall
aas
add
mov
cmp
aam
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
out
mov
mov
jl
daa
jg
jl
loopne
lret
inc
jno
push
addl
loopne
and
dec
push
hlt
gs
stos
pop
lret
ss
and
xchg
and
fbld
jno
enter
pop
das
jb
sbb
push
imul
out
ja
cmpsb
jp
adc
adc
js
pop
arpl
lahf
lahf
adc
and
push
mov
gs
adc
pop
fmuls
adc
in
sub
test
lcall
subl
cmp
sub
and
shrb
imul
aad
pop
inc
jl
ja
mov
or
jge
and
fadds
lods
add
sbb
movsl
je
mov
icebp
sbb
popf
jl
xlat
mov
and
or
aas
mov
pusha
call
jge
pusha
pop
data16
addr16
aam
cmpsb
mov
mov
mov
inc
jl
mov
push
roll
testl
loop
add
cmp
adc
cli
js
push
cmpsb
adc
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
shll
jl
daa
jg
jl
mov
mov
or
emms
dec
call
cli
xor
dec
aaa
clc
push
cmp
in
sub
mov
addr16
pop
and
and
mov
repz
cmp
pop
xor
sub
jo
mov
add
push
xor
sbb
lds
roll
fldt
jae
and
enter
cmpsl
stos
xchg
call
imul
xor
and
loop
mov
mov
orb
ficoms
fwait
dec
sbb
nop
shlb
sub
mov
sub
insl
add
ja
mov
pop
sub
jne
adc
pop
addr16
inc
cmp
jo
pop
sub
mov
pop
jg
xchg
jns
push
leave
pushf
sbb
pop
ret
or
insl
cmp
aas
lock
xchg
dec
mov
call
pop
ss
cmpsl
out
ret
add
bound
dec
jo
or
sbb
into
clc
cmpsl
jae
xor
cwtl
jge
popa
add
mov
in
or
cmp
mov
mov
add
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
orb
mov
into
jl
daa
jg
jl
psubsb
ljmp
bound
jno
dec
xor
dec
int3
xlat
and
les
push
lret
aam
mov
insl
mov
aas
jg
jae
inc
test
inc
sub
adc
lcall
dec
out
jmp
mov
pop
inc
icebp
dec
out
xchg
adc
ret
pushf
repz
gs
add
mov
fwait
xchg
dec
sbb
lods
cmc
imul
inc
test
push
fcmovbe
pop
scas
xor
rcr
imul
or
stc
das
fimuls
popa
inc
push
jae
xor
jge
and
dec
jmp
jne
jle
adc
dec
leave
out
subl
sbbl
addb
fcompl
dec
mov
dec
mov
int3
pop
push
cmp
je
divl
repnz
lea
mov
vpmadcsswd
adc
push
xor
shl
clc
fs
orb
xchg
pop
inc
mov
insl
dec
xchg
aam
lock
call
mov
cmc
popf
jo
out
inc
jmp
sbb
xor
in
add
mov
dec
lcall
cmpsl
jge
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
sarl
jl
push
inc
mul
stos
pop
mov
cmp
push
inc
in
add
sub
cmp
repz
dec
loope
cmpsl
leave
jecxz
lahf
or
pop
xorb
xchg
mov
adc
lcall
or
shll
xchg
orl
je
shl
jne
jb
test
and
sub
mov
push
mov
xorb
out
xchg
hlt
mov
ret
daa
scas
push
les
sub
xchg
mov
jmp
loope
jle
int3
mov
mov
adc
mov
cmp
daa
out
or
push
lods
push
or
mul
cmp
aad
mov
sub
lods
stos
sbb
fcoml
test
faddl
repnz
mov
pop
ja
ja
pop
mov
cwtl
repnz
sub
mov
popa
push
dec
repnz
adc
push
out
pop
sbb
call
subl
movsb
push
into
xchg
shlb
leave
sbbl
ret
divl
pop
add
sti
push
xor
adc
mov
out
sub
imul
rcll
lcall
adc
loopne
inc
add
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
inc
fwait
jl
adc
sarb
stos
insl
sbb
leave
movsl
fimull
call
out
clc
and
pop
outsb
adc
enter
loope
rorb
jmp
xor
out
das
sbb
sub
popa
cmp
push
in
enter
mov
cmc
fdivl
pusha
mov
sub
jae
xchg
mov
push
leave
nop
ds
xlat
or
jle
jle
ret
dec
loopne
jle
or
push
stos
xchg
add
lcall
pusha
xchg
and
pop
jno
bsr
xchg
fwait
ds
aad
jmp
or
and
pop
test
das
jge
push
outsb
jne
inc
rclb
xlat
movl
mov
dec
xchg
fistpll
add
push
push
jns
xor
cmp
and
mov
sbb
add
rcrb
push
xor
mov
leave
in
jmp
pop
shl
push
test
daa
loop
test
das
jbe
jo
adc
pop
push
xchg
enter
in
pusha
push
adc
ja
test
pushf
pushf
jmp
repz
jecxz
lock
mov
jnp
pop
cmp
in
insl
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
cli
lods
pop
aad
insl
jae
ja
jecxz
xchg
push
lock
dec
cmc
fiadds
insl
push
add
jae
push
imul
scas
mov
inc
out
enter
push
adc
fstp
scas
sub
or
inc
pop
idivl
pusha
push
popf
test
insb
xchg
add
shlb
test
mov
stc
pop
cli
adc
popa
dec
mov
in
das
data16
nop
enter
mov
sahf
ss
fwait
test
and
test
jmp
test
and
scas
inc
cld
aas
pop
inc
shl
rcrl
test
call
dec
pop
repnz
out
fidivrs
pop
and
inc
inc
jge
in
cmp
mov
pusha
jne
call
sbb
loop
inc
xor
jmp
add
jge
inc
and
mov
push
or
imul
pop
test
mov
and
cmp
push
jl
mull
mov
mov
insl
xchg
push
dec
mov
shll
mov
out
imul
add
add
add
add
add
add
bound
add
xchg
jge
ffree
jl
lret
jl
aad
nop
adc
mov
inc
pop
mov
xor
dec
in
or
or
dec
mov
sub
mov
dec
testb
fcmovu
das
sbb
pop
enter
adc
outsl
and
lods
mov
out
cmp
or
xor
je
movsl
push
std
xchg
add
xchg
cmp
stc
add
shrb
cmp
push
pop
mov
sbb
mov
dec
insb
xchg
push
push
iret
and
or
into
bound
xlat
aaa
dec
dec
lcall
cmpsl
lcall
ror
repnz
mov
xchg
in
les
ret
jp
aaa
pop
mov
push
nop
adc
pusha
icebp
outsl
jns
int
out
cmp
out
aad
jbe
and
mov
or
ret
lahf
mov
sti
pop
in
divb
lret
into
nop
or
mov
cwtl
subl
fsubl
or
add
xchg
mov
insb
mov
cmp
xlat
and
sub
fldl
addb
rorl
arpl
jecxz
sbb
dec
call
leave
jne
inc
icebp
out
cmc
fstpl
mov
mov
inc
cld
jmp
aam
rolb
pop
fs
jge
ficoms
les
jg
jl
pop
dec
insl
sti
add
gs
pop
sub
dec
loop
jl
fldt
cmp
lretw
not
hlt
loop
dec
es
shl
lcall
pop
dec
dec
gs
loopne
dec
mov
fimull
sahf
ljmp
movsl
fstpt
outsb
pop
xor
mov
cmc
jno
test
xor
gs
rclb
xchg
and
jle
mov
mov
dec
out
inc
cmp
add
xchg
sub
int
mov
sbb
rcr
fs
mov
je
sbb
sub
push
xchg
adc
adc
xorb
fiadds
sub
lods
mov
xlat
cld
xsha1
cmpsb
dec
ret
stos
adc
xchg
repz
lods
xchg
push
cs
push
jle
and
sbb
gs
std
dec
xchg
iret
stc
xorl
xchg
jb
mull
js
pop
inc
mov
sti
pop
popa
lock
cmc
cmc
out
cmp
icebp
lahf
add
leave
ficompl
xchg
inc
lahf
fsts
stos
test
cmp
cltd
aam
cli
mov
jge
or
cmp
xchg
pop
xor
sbb
pop
adc
lods
icebp
ja
mov
ret
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
or
add
push
pop
add
push
or
nop
adc
jge
pop
dec
dec
das
cmc
fldenv
adc
push
sbb
lret
mov
lea
inc
add
aas
pushf
cld
mov
mov
jns
fld
outsl
push
mov
imull
mov
out
lds
lods
xchg
adcb
out
fistl
and
jno,pt
or
lcall
dec
cmp
mov
jl
sahf
cmp
push
jo
dec
cs
lds
cmp
mov
shrb
mov
insb
ja
add
jne
lret
mov
inc
fidivl
sahf
iret
push
pusha
xor
mov
xor
dec
fimuls
sbb
nop
xchg
pop
aam
fmull
mov
sub
sub
fisubrl
push
dec
xlat
fiadds
in
dec
or
notb
pop
mov
pop
and
jg
test
pop
pop
cmc
pop
adc
test
fsubl
int3
adc
push
xchg
mov
xchg
leave
int
insb
orb
pop
or
sub
and
scas
paddusw
and
repz
fisubl
mov
pop
jg
inc
xchg
xor
testl
adc
loopne
test
push
or
addl
adcb
sbb
xor
jb
sbb
adc
fcompl
adc
push
lret
std
mov
mov
cmpsl
inc
jle
xchg
push
or
inc
mov
popf
fists
sbb
imul
shlb
out
mov
and
rcl
loop
push
leave
push
mov
stc
push
mov
ds
inc
dec
insb
pop
adc
fs
xchg
mov
jno
int3
les
int
mov
clc
cwtl
sbb
mov
adc
mov
dec
mov
repnz
js
jno
jne
outsl
jo
inc
int3
mov
adc
pop
mov
dec
repnz
insl
scas
push
adc
push
push
testl
in
sti
pop
and
inc
sub
sub
sarb
jo
scas
scas
inc
stc
add
pop
in
movsl
fiaddl
jae
push
push
inc
lods
or
in
mov
rorl
mov
xor
dec
mov
or
insb
popf
sub
popf
iret
test
mov
iret
sub
jge
mov
inc
std
inc
mov
pop
pop
xor
int
or
test
push
int
movsb
inc
and
push
xor
xchg
xchg
push
xchg
scas
lods
ljmp
xchg
add
adc
push
popf
mov
xchg
push
sbb
orb
shlb
xchg
fdivrp
xchg
out
insb
jo
push
outsl
rcl
jle
jbe
push
inc
into
sahf
loope
push
cmp
sub
mov
call
imul
repnz
mov
and
add
sti
or
or
pop
jp
adc
cmpsl
lds
and
mov
xor
in
dec
cs
mov
cmc
inc
sahf
dec
dec
clc
dec
pop
loop
cmpsb
sbb
gs
jecxz
shrb
xchg
ja
jg
popf
sbb
inc
xchg
dec
pop
leave
inc
mov
in
mov
mov
daa
hlt
fs
pop
adc
daa
repz
push
mov
jno
cmp
mov
in
mov
adc
xorb
pop
xor
int3
xchg
fxch
sbb
mov
jb
sbb
loopne
mov
cwtl
rolb
cmpl
jge
mov
aad
insb
jb
adc
cld
orb
dec
sahf
push
cmp
pop
enter
cmp
mov
repnz
sub
pop
add
js
push
sbb
xchg
test
lock
jge
das
add
jno
dec
mov
add
xchg
sbb
mov
mov
cmp
leave
push
jl
test
sbb
fcomps
xor
mov
mov
mov
int
fidivrs
sub
jb
jo
jnp
jno
hlt
mov
or
sub
mov
in
es
adc
sbb
inc
xlat
dec
shl
sbb
dec
dec
fstl
pop
xchg
or
imul
jnp
imul
aas
xchg
add
cmp
aad
sbb
pop
or
ret
xchg
out
xor
je
jge
adc
mov
lea
dec
icebp
out
rcrl
push
push
dec
mov
fwait
add
cltd
push
adc
sub
lea
or
dec
push
xor
ret
popl
enter
add
push
or
dec
or
fdivrl
ficoml
xor
inc
fsts
jae
sahf
hlt
iret
ret
jb
cli
subb
adcb
jg
test
jg
lods
push
lods
pop
into
inc
out
mov
popa
ret
iret
popa
dec
add
sub
enter
dec
or
push
mov
mov
dec
cld
lcall
add
jl
jnp
add
and
fsubl
cmc
lock
je
jmp
in
jb
repnz
jae
cld
testb
cld
lret
mov
mov
cli
idivb
popa
pushf
dec
add
mov
xchg
stc
xor
or
inc
or
jp
pop
sbb
xchg
ds
add
out
pop
xchg
mov
lret
mov
mov
mov
repz
jae
out
adc
or
daa
mov
xchg
adcl
insb
out
mov
xor
xlat
sub
jmp
push
lret
xchg
jp
dec
nop
sbb
ret
insl
adc
movsl
or
xor
mov
cmp
stos
push
jbe
xor
push
push
inc
jl
insl
outsl
in
xchg
testb
int3
fcmovnbe
popf
cli
adc
xchg
filds
dec
mov
int
bound
add
loopne
or
sti
and
mov
cmp
push
push
jbe
mov
or
ret
jg
xlat
scas
test
pop
add
mov
sbb
pushf
adc
sub
cs
add
jnp
adc
mov
and
adc
dec
sbb
stos
scas
pop
cli
scas
lea
shrl
adc
mov
mov
xor
and
push
jbe
icebp
or
lods
or
or
insl
mov
sub
sub
xchg
mov
add
add
xchg
mov
sbb
arpl
add
push
pop
add
cli
jb
pop
dec
je
movsl
in
out
fs
or
push
icebp
mov
xchg
xchg
mov
rcl
add
outsl
and
jmp
insl
stc
jae
xor
decl
cmc
cmpsb
xor
sbb
aam
loop
mov
cwtl
xchg
jne
cs
pop
scas
adc
popf
mov
outsb
addb
scas
jl
ljmp
leave
mov
adc
mov
add
push
pop
sti
insl
add
xor
or
sti
pop
inc
or
stos
adc
fstps
pop
dec
adc
push
mov
fcomip
scas
stos
faddp
fistps
roll
inc
lahf
jnp
mov
dec
test
push
cmpb
inc
push
pop
test
dec
ljmp
pop
je
shr
sub
negb
mov
stos
jecxz
insl
push
push
and
out
in
adc
pushf
orb
ret
lahf
mov
jne
mov
and
mov
stos
pop
cmp
jns
in
pushf
repz
fsts
lret
xchg
or
dec
inc
js
test
xor
pushf
cs
iret
push
into
fnsave
cli
mov
or
xchg
cli
sub
mov
xlat
enter
imulb
sbb
fstpt
mov
mov
fsqrt
out
aad
aad
lea
jbe,pn
pop
mov
pop
push
cld
cld
nop
jmp
add
dec
xchg
jecxz
xchg
fstpl
dec
jno
dec
cltd
dec
sbb
pop
rorb
mov
data16
mov
mov
or
adc
addr16
pop
sub
push
dec
xchg
pop
or
std
sbb
sarb
sahf
movl
inc
mov
mov
in
and
imul
cltd
sarb
jo
jp
mov
decl
cmpb
popa
and
or
sbb
push
push
scas
lret
ja
arpl
adc
mov
pop
pusha
sbb
in
es
js
inc
and
popf
xlat
add
fdivrs
xchg
sbb
leave
mov
divl
push
cwtl
mov
rolb
mov
es
dec
mov
lcall
xchg
cmp
sub
daa
mov
out
or
cmpsl
pop
pop
and
mov
imul
mov
loope,pt
push
xor
imul
or
test
pop
mov
shlb
fnstenv
popf
ds
jo
jmp
push
aam
cmc
gs
dec
mov
out
dec
lcall
fwait
js
test
push
sub
cmp
addr16
scas
push
push
pop
out
jbe
fldl
in
testb
pop
out
push
inc
lds
pop
or
xor
inc
cmpsb
xorb
add
sbb
adc
cs
cmp
mov
dec
add
mov
pop
mov
in
sub
incl
mov
or
push
in
sub
bnd
cmp
xor
shrl
adc
lcall
insb
daa
fwait
stos
inc
push
dec
ret
sub
out
push
add
xchg
icebp
loop
shlb
imul
xor
cmp
clc
sbb
ret
mov
xchg
fwait
addr16
pop
ja
adc
test
cld
xchg
and
inc
ja
cmpsl
add
or
dec
sbb
mov
add
pop
lret
cmpsl
xchg
mov
mov
loopne
icebp
inc
sub
pusha
sbb
cmp
rorb
inc
cwtl
jle
hlt
je
sarb
es
adc
shr
jne
daa
repnz
cmp
xor
repz
mov
mov
sub
and
fwait
test
or
cli
les
mov
lods
dec
addr16
mov
gs
mov
lahf
push
bound
pusha
jg
pop
test
sub
or
repnz
popa
xchg
or
in
pop
std
roll
in
mov
lcall
jbe
lea
ret
mov
or
call
test
inc
cmp
xchg
sbb
mov
mov
inc
cmp
lret
xor
popf
or
loopne
leave
lods
pop
lds
in
pop
adc
jp
xor
popf
add
xor
push
pop
mov
or
adc
mov
pusha
xchg
int3
mov
cmp
in
shr
addb
insb
jo
xchg
add
xchg
pop
call
sub
mov
cmc
cmpl
add
ja
movsl
imul
or
test
cmp
cmc
ffreep
lret
loopne
sub
bound
hlt
cwtl
mov
add
fldcw
test
imul
xorl
add
movsl
orb
lods
ret
test
jge
call
int3
ficompl
mov
cmp
mov
ds
out
sar
scas
outsl
repnz
dec
pop
das
push
rcrl
popa
pop
repz
cmp
out
adc
cltd
mov
mov
jae
lret
insl
addl
or
mov
cmpsb
jmp
fiaddl
sub
arpl
jmp
mov
xchg
out
xchg
adc
dec
nop
pop
mov
dec
xor
sub
push
dec
jle
movsl
out
xchg
addr16
push
push
cmp
push
sub
or
push
sub
mov
mov
loopne
pop
xchg
call
and
leave
adc
mov
add
dec
inc
imul
out
repz
mov
adc
sbb
test
sbb
ljmp
add
repnz
xchg
lahf
inc
imul
sub
push
aas
movsl
sub
mov
fisubl
lahf
or
lds
stos
cmpsb
mov
scas
scas
xor
mov
sbb
dec
pop
sbb
fsubrl
push
in
es
xchg
mov
pop
test
mov
sti
stos
xlat
mov
cmpps
push
mov
push
or
bound
xorl
fnsave
fwait
jecxz
rorb
jge
add
in
adc
iret
mov
outsl
jae
icebp
popf
and
mov
insb
jmp
js
out
mov
scas
jle
daa
dec
nop
daa
imul
cmpsl
scas
rdtsc
jae
jp
dec
aaa
mov
lcall
js
mov
add
fs
mov
aam
insl
es
jno
add
push
pop
add
push
loope
lods
push
jb
sarb
insl
aas
or
lret
movsl
adc
testl
add
jl
repnz
test
nop
out
aas
into
lret
mov
cmpsl
mov
push
xor
sub
or
stos
xor
xor
push
push
in
jge
sub
xchg
mov
sbb
outsb
cltd
mov
cltd
sbb
ret
sbb
cmp
fwait
dec
std
dec
pop
shlb
jp
xchg
in
test
mov
or
and
paddd
lret
mov
pop
lahf
outsl
ljmp
sbbl
mov
pop
aas
pop
in
je
pusha
jbe
xor
mov
aad
push
cmpsl
jae
test
push
cli
mov
sub
mov
movsl
lret
shlb
subl
pop
das
cmp
push
mov
sti
or
inc
push
cmpl
and
arpl
xor
inc
outsb
push
imul
jnp
cmc
lea
pop
clc
push
cmp
aam
mov
call
cmovb
add
jns
cld
sti
pop
in
insl
loopne
and
cmova
xor
inc
test
adc
adc
or
mov
jnp
hlt
sbb
lea
cmp
pop
inc
push
cmp
and
ss
jge
testb
ret
pop
repz
popa
cmp
push
inc
mov
test
cmpsb
inc
adc
jne,pt
mov
xchg
les
out
sub
pop
jge
jns
in
bound
out
mov
lods
inc
adc
pushf
mov
xor
or
mov
test
xchg
dec
dec
in
sub
out
sub
mov
or
mov
jbe
push
sbb
inc
nop
xchg
roll
dec
or
sub
clc
inc
call
and
sbb
scas
dec
jle
pop
movb
add
inc
xchg
inc
in
mov
push
add
je
inc
pop
xor
idivb
icebp
mov
fninit
xor
xor
clc
xor
loop
mul
push
fdivrl
cmpb
cmp
mov
daa
or
cli
imul
call
ljmp
out
pusha
loop
add
pop
mov
pop
and
add
push
cs
mov
je
jae
sbb
test
lret
cmpsb
xor
adc
add
ficompl
mull
int3
fisubs
dec
loope
popa
ds
or
insb
cld
jo
cmpsb
nop
push
push
lcall
dec
addr16
mov
testb
dec
pop
pop
fdivrs
scas
mov
lods
rcrl
and
add
sub
or
sub
and
xchg
dec
fistpl
nop
stc
cltd
adc
or
mov
jno
adcb
dec
pop
cmpsl
fwait
add
enter
jbe
push
dec
sub
and
add
jmp
adcb
imulb
mov
sbb
jns
imul
cmp
cmp
inc
insb
cmp
inc
push
xor
test
jo
imul
cmpsb
test
mov
roll
jmp
cmpsb
iret
inc
sbb
xchg
dec
sti
ret
add
popf
loopne
and
aas
xor
dec
inc
int
sub
repnz
cmp
jae
pop
push
mov
in
test
xchg
xor
bound
inc
add
repz
in
out
push
pop
push
mov
sahf
fldz
pushf
or
loopne
add
sub
or
mov
fnsave
cmovle
test
mov
addb
push
ja
pop
iret
dec
je
popa
lods
gs
mov
int
jp
mov
or
lahf
mov
leave
jecxz
xor
mov
lds
fistps
mov
jae
sbb
fidivl
mov
sbb
jns
fcompl
xor
xchg
ljmp
subb
imul
test
inc
lahf
inc
mov
aam
imul
in
in
ljmp
add
into
gs
xchg
lods
sub
or
insb
sub
les
inc
test
jns
stc
out
mov
dec
mov
test
jecxz
sub
leave
cmc
sbb
fmuls
aaa
mov
sahf
sub
inc
dec
pop
rcrl
dec
mov
and
adc
out
arpl
xchg
mov
pop
movsb
add
call
jnp
add
data16
loopne
add
xchg
cmpsl
xchg
daa
cld
scas
and
aam
into
stos
inc
fcoms
xchg
rcrb
pop
and
cmp
lcall
mov
leave
cltd
jb
mull
push
mov
sub
adc
cmp
mov
mov
lret
cmpsl
lahf
jo
sub
scas
inc
lods
sbb
test
aam
pushf
mov
cld
shll
inc
lock
daa
add
add
sbb
mov
cmpsb
std
dec
sbb
outsl
in
jb
orl
xor
mov
test
xor
add
mov
xor
or
jae
push
in
mov
mov
jbe
pop
xchg
in
loopne
int3
push
rorb
jnp
and
data16
sbb
in
pop
mov
test
out
mov
outsl
shll
jmp
scas
mov
sahf
add
mov
adc
inc
mov
movsb
xor
mov
xlat
mov
insb
ss
cmpsl
ret
inc
out
aam
mov
add
cmp
aam
in
ljmp
mov
ds
add
rcl
mov
js
fs
add
mov
inc
out
and
xor
in
hlt
sub
imul
clc
inc
addb
scas
or
push
add
cmc
push
push
add
enter
dec
dec
dec
pop
cmp
or
pop
out
test
sbb
sbb
fnstcw
inc
push
repz
xchg
push
lds
pop
sub
jmp
add
sub
rorl
into
repz
and
dec
mov
or
and
mov
lahf
mov
dec
xor
cmpsb
inc
sti
pushf
stc
negl
jl
mov
ljmp
je
int3
sbb
fildll
jns
xor
into
jecxz
popf
popf
pop
and
lret
mov
xchg
or
imul
dec
ds
cmpsb
pop
and
pop
mov
add
mov
jp
lahf
addr16
in
ss
or
pop
in
testl
cmpsl
loope
testb
push
pop
add
jge
es
les
scas
loope
xor
cmp
sbb
add
sub
xchg
and
cmpsb
mov
movsb
push
mov
xchg
and
ss
les
sbb
jp
fs
mov
loope
insl
xor
gs
mov
and
cmp
dec
pusha
popa
push
mov
loop
jge
pop
and
test
jp
inc
adc
adc
sub
sub
cmp
inc
push
sub
stos
aad
gs
mov
xor
or
jo
jbe
adc
mov
mov
lock
adc
out
xor
pop
jae
pop
outsb
lahf
lahf
fcompl
enter
outsb
js
notl
jge
ds
shrl
pusha
pop
fildll
cltd
js
mov
and
adc
inc
jl
fisubrl
dec
ret
aaa
sbb
mov
add
fnsave
sub
mov
push
sbb
push
fcompl
pop
lea
movsb
and
pop
xchg
add
mov
xchg
and
or
jnp
jbe
push
mov
cld
xlat
mov
mov
shll
inc
add
jno
xchg
jmp
pop
mov
aam
mov
or
ret
push
mov
sbb
pusha
std
push
dec
dec
push
adc
add
repnz
jae
fwait
scas
xchg
mov
or
inc
push
pop
shll
xor
sub
cwtl
in
jnp
inc
sub
fwait
push
dec
xchg
sbb
notl
mov
xchg
or
pop
jo
popf
xchg
lcall
in
in
adc
xor
sbb
loopne
xchg
lods
sub
sub
leave
mov
push
sbb
mov
or
jl
sti
xchg
pop
xor
adc
aas
jmp
inc
push
inc
into
mov
lds
add
loop
cmp
or
adc
jle
js
xchg
nop
xor
pop
gs
dec
out
jle
dec
jae
aas
addb
daa
jnp
decl
in
adc
cmp
add
mov
mov
mov
adc
loop
push
sbb
test
imul
mov
fucomi
imul
inc
arpl
pop
xchg
or
mov
cmp
shll
les
jl
clc
dec
outsb
popa
fstpt
cmp
movsb
cmp
jecxz
addl
ret
cmpsl
fcoml
push
push
and
add
out
xchg
hlt
xchg
mov
leave
add
sti
fisubs
fldcw
lcall
mov
and
xor
fistl
add
ds
sub
adc
cwtl
lcall
in
or
pop
inc
xor
pop
scas
cmpsb
xchg
sbb
inc
test
aas
cwtl
sbb
sbb
push
dec
jl
xor
dec
cs
les
orb
cltd
cmp
nop
sub
dec
lods
addr16
nop
out
fistps
or
scas
shrb
xchg
adc
pop
sbb
in
lds
push
adc
push
xchg
pop
pop
ja
and
jae
loope
fsts
add
xor
fcomps
outsb
fistps
push
mov
int
inc
jno
xor
lods
push
xchg
jl
xchg
jno
and
and
cmpl
sbb
shll
aaa
lret
lods
rol
dec
lods
mov
sbb
cmpsb
cmp
push
aam
scas
rcll
addr16
jl
lds
outsb
cli
dec
fimuls
fs
mov
mov
mov
lahf
push
inc
ds
aas
fsubrs
imul
decb
fstpt
insb
stc
fistpll
adc
pop
inc
sbb
movb
and
imul
pusha
cltd
in
inc
call
mov
pop
jne
sbb
das
nop
sub
mov
jnp
fs
or
movsl
adc
push
jl
dec
insl
imul
xlat
xor
inc
mov
mov
push
cmp
insb
fdivl
std
jno
cmp
add
dec
sbb
mov
xor
push
jae
loope
pcmpeqd
repnz
ds
fld
enter
pop
daa
negl
adc
push
or
jle
sbb
test
jne
lock
in
xchg
in
out
pushf
repz
cld
enter
xor
add
test
in
lds
cld
sub
clc
ja
adc
cmp
cmp
dec
fisubrl
add
into
scas
pop
xlat
ljmp
mov
inc
mov
sbb
out
add
inc
lods
ret
test
mov
sbb
aam
xchg
mov
mov
jne
test
cld
mov
es
cld
dec
cmpsl
add
mov
loope
iret
cmp
sub
xchg
jmp
inc
xchg
jno
decb
sub
jmp
les
cmp
aam
sub
xchg
das
inc
das
jne
sbbl
add
pop
int3
inc
push
sbb
call
mov
in
xchg
scas
and
adc
pop
test
js
insb
push
repnz
aaa
pop
mov
sub
fdivl
or
fwait
sub
leave
lret
subl
cmp
mov
cmp
cmp
cmp
sub
sub
push
fdivrl
ja
sbb
jnp
test
cmp
fldcw
data16
out
dec
in
inc
mov
xor
mov
and
cmp
xor
inc
rolb
push
xor
lods
xchg
jbe
fsts
mov
cwtl
sub
int
mov
repnz
or
or
mov
push
fwait
mov
xlat
jne
and
repz
scas
push
sub
or
or
popa
xchg
push
inc
dec
mov
fildl
mov
ja
movsl
jl
jle
hlt
mov
add
bound
insb
and
push
lds
dec
sub
cwtl
mov
sbb
in
bnd
out
push
loop
mov
in
inc
pop
add
testb
in
cmpl
cmp
sub
cmc
or
outsb
out
dec
cmpsl
dec
daa
fcompl
jecxz
psubd
or
fmulp
lahf
js
add
lods
ss
pop
iret
or
mov
jecxz
push
in
pushf
outsl
sbb
pop
std
repnz
lret
jns
roll
add
movsl
pop
xor
int
ficoms
pop
pop
lods
std
add
push
pop
add
test
adc
mov
and
clc
pop
subl
insb
aas
popf
sahf
inc
and
pop
decl
lcall
je
push
cmp
xchg
fimull
mov
fxch
lcall
mov
cmp
mov
pop
out
fsubl
sbbl
add
lds
dec
sbb
insl
das
mov
lret
sbb
scas
mov
das
mov
ret
jg
in
jmp
dec
xchg
cmpb
add
lcall
loop
mov
sub
push
mov
lea
or
imul
jne
jmp
push
mov
push
nop
ja
jno
xchg
das
aas
dec
mov
jecxz
inc
jmp
in
test
xor
sti
inc
dec
rol
pop
cmpsl
xor
or
ss
add
scas
mov
or
lcall
fwait
xchg
xor
xchg
mov
adc
imull
out
mov
sub
sbb
ja
mov
inc
cmp
adc
into
jns
test
dec
fidivl
mov
and
enter
lea
mov
jmp
mov
out
inc
pop
ss
dec
out
fcomip
xchg
lods
sbb
push
mov
sbb
and
repz
mov
movsl
cmp
dec
mov
repz
mov
mov
push
xchg
dec
jae
sbbb
daa
fdivl
rcrl
add
push
and
mov
mov
stos
jb
mov
or
add
movsl
mov
pop
cli
mov
sbbl
insb
adc
out
cmpb
and
test
or
rorl
js
pop
test
ret
add
enter
and
rcll
add
clc
test
push
sub
or
cmp
aas
jge
das
or
mov
shl
xlat
lahf
jns
daa
sub
push
inc
cmp
arpl
data16
jmp
or
imul
cmp
insl
jae
aad
and
lock
pop
movb
add
sbb
mov
ret
xlat
aam
pop
mov
call
and
mov
xor
cmpsl
stos
push
add
push
adc
lret
jg
leave
insb
fmul
pop
popa
xlat
or
and
aaa
lock
imul
jno
ret
lods
pop
push
pop
or
mov
aas
pop
in
or
add
pop
xor
push
pop
repnz
cmpsl
mov
shll
sub
xchg
push
or
insb
shl
add
jmp
les
aas
inc
push
nop
jo
les
lods
sti
mov
stos
fwait
out
sub
cmpsb
mov
cmp
mov
cltd
outsb
inc
nop
push
mov
scas
and
filds
push
movsl
enter
xchg
pop
icebp
fisttpll
push
sbb
ror
cmp
pop
inc
xchg
shll
mov
popa
fs
sub
mov
js
jbe
loop
popa
dec
fldl
mov
das
rorl
addb
xchg
dec
cmp
inc
or
or
sbb
ja
xor
imul
xchg
enter
dec
sub
loop
push
mov
fs
in
add
ror
add
mov
sahf
sahf
mov
mov
push
out
pop
sub
leave
dec
or
inc
inc
dec
sbb
jge
or
outsb
push
xchg
and
out
push
inc
out
insb
or
fs
pop
aaa
push
shrb
lock
ljmp
cmp
xchg
out
das
sbb
and
mov
aas
xor
jg
inc
and
insb
lods
or
sbb
dec
arpl
and
js
fwait
inc
xchg
pop
mov
fldt
push
inc
movsb
mov
dec
xor
adc
fisttpll
adc
jecxz
rorl
pop
repz
dec
pop
addb
cmp
outsl
ss
js
pop
add
cmp
xchg
shrd
pushf
cmp
pusha
xorl
pop
xchg
out
je
arpl
stos
fcomps
cltd
push
inc
outsb
lock
fsubrs
leave
pop
out
jge
sub
into
insl
adc
ljmp
or
ror
xor
insl
cmp
rol
dec
sub
xlat
arpl
pop
popf
mov
pop
lock
fcmovbe
fisubs
add
inc
les
scas
fistl
push
lods
mov
std
dec
aaa
and
sbb
sub
sbb
es
jo
and
xchg
iret
repz
scas
mov
xor
mov
lds
add
enter
sub
andb
cmp
mov
mov
lahf
mov
ja
xchg
fisttps
imul
les
notl
movsl
insl
fldlg2
pop
out
sub
or
jecxz
add
ss
xor
push
fimull
rcll
dec
add
fidivl
bsr
xchg
add
out
mov
dec
sub
sbb
inc
push
fisttpll
es
mov
push
sub
mov
jle
jecxz
pop
hlt
jp
xlat
ret
cwtl
pushf
mov
cmc
in
and
xchg
mov
jp
mov
adc
cli
jbe
sbb
push
fcmovb
insb
inc
jmp
fwait
insl
fucomi
cmpb
or
xor
push
jne
or
jmp
cwtl
mov
jl
sarl
inc
sarl
or
testl
cli
inc
aad
sti
sub
andl
jp
pop
mov
out
mov
xchg
stos
xorb
adc
btcl
mov
lret
jl
jnp
mov
mov
jle
push
and
mov
scas
ja
ljmp
jp
xor
bnd
insl
test
jo
test
mov
push
push
pushf
icebp
pop
add
xor
xor
aad
popf
loopne
lahf
arpl
xchg
sbb
jne
mov
subb
setb
fucom
sub
mov
popf
mov
pop
out
mov
mov
xor
fisubrl
pushf
sbb
fimull
xchg
fadd
mov
dec
fadds
and
int3
mov
pop
jge
pop
andl
cmp
iret
jl
adc
xor
mov
dec
push
xchg
inc
mov
lds
add
outsl
movsb
daa
jbe
idivl
mov
sbb
stc
lret
add
add
pop
add
adc
sbb
bound
in
loopne
out
pusha
add
js
adcb
jge
fstl
lret
adc
sub
lods
leave
in
cmp
cmpl
cmp
insl
cmpsl
fsubrl
sar
mov
and
testb
int3
inc
pop
mov
das
cmp
jb
cmpsb
add
inc
xchg
movsb
rolb
scas
xchg
push
mov
outsl
daa
xchg
bound
stos
call
in
insl
pop
icebp
rorl
jl
dec
fadd
sub
xlat
movsb
add
or
mov
inc
or
mov
imul
fnsave
shll
loope
mov
sbb
fildl
in
mov
mov
xor
pop
and
jnp
sub
pop
clc
pop
out
stc
pop
dec
inc
clc
sti
adc
scas
mov
pop
add
scas
cmp
daa
icebp
fcoml
push
rcl
cmp
mov
or
mov
inc
scas
xchg
or
add
and
lret
pop
pop
jne
jp
in
pop
scas
loope
sti
xor
cmp
lcall
lret
adc
adc
mov
xor
addr16
ss
adc
movsb
or
push
jp
inc
pmaddwd
repz
lret
in
add
xchg
mov
jl
inc
mov
cmc
stos
rcr
add
cs
loop
mov
outsb
inc
mov
cmp
adc
add
out
sbb
jmp
mov
pop
add
push
stos
insl
dec
aam
ljmp
xchg
pusha
sub
pop
js
jnp
xlat
cltd
data16
mov
mov
xor
xlat
cmc
jno
xor
in
test
mov
stos
popa
sub
cld
dec
ja
in
out
sbbb
enter
scas
adc
xchg
push
jb
ljmp
mov
movb
loop
mov
pusha
ficomps
mov
push
xchg
xor
cli
popa
jg
rclb
jae
sub
dec
adc
mov
enter
shll
cli
mov
inc
roll
mov
fwait
test
mov
loop
fcmovbe
xchg
jmp
fs
pop
mov
testl
cmpsl
xrelease
loope
lock
mov
inc
push
xchg
fsubrs
sub
mov
inc
mov
fs
push
enter
mov
shll
inc
test
cmpb
xor
ljmp
es
and
loope
pusha
inc
sbb
mov
xor
jmp
cmp
je
lods
aas
stos
repnz
mov
jge
jle
mov
lret
addr16
mov
add
inc
sub
out
lcall
and
sahf
mov
xlat
adc
sbb
xchg
add
push
pop
xchg
test
and
movsl
mov
insl
psubd
negb
ss
and
fstpt
nop
stos
jb
mov
xlat
addl
pop
push
inc
pop
out
mov
jecxz
push
icebp
pop
test
lods
nop
lock
jae
into
test
sbb
push
cmpsl
xchg
xlat
xchg
mov
inc
popf
jae
dec
std
divl
dec
sti
lods
sbbb
fldt
loopne
in
add
scas
add
mov
aas
shlb
mov
cmp
inc
mov
pop
inc
mov
sub
int3
push
dec
movsb
leave
insb
adc
rorb
ljmp
arpl
aad
cmp
jne
fiaddl
xchg
in
adc
jnp
sbb
ljmp
mov
mov
dec
cmp
mov
lret
mov
and
and
sbb
bound
cmp
ss
jp
lahf
fdivl
mov
lock
pushf
ret
mov
lret
ss
movsl
jb
inc
push
leave
sysenter
into
out
inc
cmp
fisttps
xchg
inc
xchg
nop
repnz
pop
xchg
mov
mov
sbb
stos
divl
lcall
lock
lret
cld
jg
mov
je
in
push
lret
or
mov
adc
sub
aam
mov
xchg
mov
mov
popf
enter
mov
out
lahf
mov
lahf
mov
mov
stos
mov
sub
leave
hlt
jae
test
or
movsl
fidivs
cmp
ficompl
stc
hlt
mov
mov
mov
movsb
add
dec
sbb
nop
nop
xchg
add
cmp
mov
add
jb
in
mov
jnp
sbb
cmc
js
cmpsb
imul
lahf
push
rcll
dec
dec
in
cld
push
jbe
ss
jno
test
add
fcomps
jne
stos
stos
push
insb
lea
add
xor
pop
jno
mov
cmp
ja
dec
dec
xchg
in
cmp
mov
loope
psrlw
or
push
in
xor
sbb
add
loop
pop
mov
add
loope
jb
mov
sahf
nop
lcall
mov
leave
mov
into
jge
je
ss
insb
gs
xlat
lea
jmp
hlt
sub
mov
in
xor
fsubr
inc
jp
insl
loopne
xor
xor
loop
lea
jo
push
sarb
pop
mov
sahf
push
popa
cmc
adc
mov
lret
cld
push
icebp
push
push
push
test
push
xchg
aad
pushf
pop
cmp
push
fdivrl
insb
xlat
idiv
xchg
xor
pusha
aad
push
aaa
mov
and
sbb
loopne
cmpsb
popa
jae
mov
daa
add
jle
ds
ds
xlat
frstor
mov
jnp
push
ficoml
ljmp
psllq
xor
fistl
mov
out
and
dec
sub
ss
inc
loope
shll
cmp
jmp
enter
enter
and
and
cmpb
repnz
mov
pop
test
movsl
xchg
jg
jne
outsl
push
dec
dec
push
sbb
jbe
push
data16
mov
mov
fs
inc
mov
xchg
pop
push
sub
fstpt
mov
imul
popf
divl
dec
dec
gs
add
pop
and
dec
inc
pop
clc
or
push
push
jg
lahf
sub
xor
pop
or
pop
hlt
push
add
jnp
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
push
add
add
pop
add
cs
add
test
add
rolb
add
add
add
xor
add
pusha
or
adcb
cmpb
subb
adc
add
call
add
sbbb
add
dec
or
addb
add
sbb
add
cmp
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
bound
add
jp
add
mov
add
andl
enter
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
repnz
add
fstpl
add
adc
add
sub
add
add
add
add
add
add
add
push
or
addb
addb
add
add
add
add
add
add
add
dec
or
sbbb
subb
jo
add
mov
add
add
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
nop
or
cmpb
add
mov
add
xor
add
add
orb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
shrb
add
add
add
add
add
add
add
add
xor
add
mov
add
andb
add
test
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
xchg
or
sbb
add
lock
addb
add
add
add
add
add
add
add
int3
or
orb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
ret
add
or
add
add
add
add
add
sbb
add
or
add
add
add
add
add
and
add
in
add
add
add
loopne
add
or
add
in
add
add
add
ljmp
add
add
add
add
add
inc
add
or
add
in
add
add
add
cli
dec
add
or
add
in
add
add
add
add
add
push
or
add
add
add
add
add
pop
add
push
or
add
add
add
add
add
add
push
or
add
add
add
add
add
outsb
add
or
add
in
add
add
add
xor
add
or
add
add
add
add
add
addb
decb
add
in
add
add
add
cmp
add
in
add
add
add
inc
xchg
add
or
add
in
add
add
add
push
fwait
add
or
add
in
add
add
add
pop
movsb
add
and
add
in
add
add
add
jle
add
adc
add
in
add
add
add
nop
lods
add
or
add
in
add
add
add
lcall
add
add
add
add
add
add
in
add
add
add
mov
add
or
add
in
add
add
add
rcl
add
or
add
add
add
add
add
fiaddl
add
or
add
add
add
add
add
jecxz
add
or
add
add
add
add
add
in
add
adc
add
in
add
add
add
call
or
add
add
add
add
add
incb
add
or
add
add
add
add
add
pop
add
push
or
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
pop
add
add
inc
add
inc
add
aaa
add
xor
or
push
add
xor
pop
add
push
add
add
add
add
add
pop
add
add
add
cmp
cmp
push
add
add
or
inc
add
add
xor
add
add
add
add
xor
xor
add
add
add
cmp
inc
add
add
push
add
pop
add
xor
dec
add
cmp
or
push
add
inc
add
xor
add
add
xor
dec
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
add
inc
add
add
push
add
dec
add
pop
add
add
inc
add
or
push
add
add
add
add
push
add
add
or
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
push
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
dec
add
push
add
dec
add
add
pop
add
inc
add
add
add
xor
xor
add
add
add
add
add
add
add
inc
add
add
dec
add
or
dec
add
dec
add
dec
add
xor
pop
add
add
dec
add
add
cmp
xor
pop
add
add
add
add
dec
add
push
add
xor
inc
add
push
add
add
pop
add
xor
inc
add
add
pop
add
pop
add
add
push
add
cmp
xor
add
pop
add
push
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
dec
add
add
push
add
pop
add
inc
add
add
add
push
add
inc
add
dec
add
inc
add
xor
push
add
push
add
pop
add
inc
add
dec
add
pop
add
push
add
dec
add
add
push
add
add
add
add
add
add
push
add
inc
add
cmp
pop
add
pop
add
add
inc
add
pop
add
aaa
add
pop
add
push
add
push
add
add
xor
xor
pop
add
add
add
cmp
push
add
xor
xor
dec
add
cmp
pop
add
add
cmp
add
add
pop
addl
rolb
pop
add
push
pop
add
jmp
sbbl
push
sbb
test
pop
cmp
arpl
xchg
repnz
inc
sahf
jecxz
repnz
stos
xorl
inc
cmp
and
cmpsb
adc
cli
pop
shlb
jnp
movsb
sbb
arpl
mov
mov
adc
push
movsb
lock
aas
adc
sub
add
cmp
xor
sbb
imul
popf
xchg
pop
call
loopne
loope
leave
cmp
push
test
mov
or
addr16
dec
fcmovne
adc
jo
add
aad
fnstcw
sub
xchg
push
adc
cmpsl
pop
pop
cmp
xchg
bnd
mov
mov
jge
xchg
pop
jmp
popf
push
push
push
mov
cwtl
cmp
cltd
jg,pt
fldcw
inc
test
mov
sbb
mov
adc
push
mov
mov
lock
push
lahf
ficompl
test
int
imul
inc
cmp
and
mov
mov
ficompl
int
cmpsl
dec
inc
movb
mov
cmp
cmc
dec
mov
es
mov
ss
mov
pop
sbb
and
mov
ds
test
jbe
stos
das
add
cwtl
clc
sub
cmp
pop
movsb
negb
sub
aaa
mov
mov
adc
cwtl
pop
popf
mov
mov
add
int3
cmpsb
cmp
sub
sub
and
in
inc
pop
xor
jae
mov
into
leave
lret
mov
arpl
mov
push
push
pop
push
sbb
in
inc
jle
cmc
pop
and
lcall
imul
mov
pop
mov
icebp
es
arpl
and
enter
xor
les
into
dec
pop
test
pop
lcall
lock
dec
in
es
pusha
aad
pop
hlt
cmpb
rol
sarb
stc
jge
stos
pop
inc
lahf
inc
enterw
jb
adc
sbb
adc
les
mov
movsl
mov
lea
sub
js
sub
fcompl
test
imul
mov
loop
shl
outsb
mov
fucom
or
add
and
stos
mov
lods
cmpsb
std
test
push
loopne
jb
mov
mov
jmp
inc
mov
jae
gs
dec
sub
repnz
sub
mov
adc
movsl
mov
outsl
mov
pop
jp
insl
lods
jmp
fidivs
xlat
mov
shrb
push
pop
jecxz
outsl
int
aas
add
std
jbe
mov
arpl
sarb
push
sub
mov
cmp
xor
insl
inc
stos
or
sahf
aaa
pop
outsl
fidivrl
bound
xor
idiv
inc
outsb
rorb
mov
push
sbb
fidivl
cmp
sbb
cmc
mov
dec
cmp
lock
pop
call
add
aad
aad
outsl
sub
cwtl
push
out
popa
dec
rcr
cmp
jne
push
leave
shl
push
adc
shlb
mov
jmp
xchg
xchg
jge
cmp
cmp
sub
pop
fwait
sbb
add
push
mov
pop
fadds
jno
push
enter
in
sub
push
mov
scas
popf
xchg
mov
push
je
add
cvtpi2ps
cmc
mov
popa
mov
in
adc
mov
lcall
adc
and
xchg
inc
jno
testb
inc
fildl
shr
dec
pop
movl
and
sbb
into
fs
out
xor
lds
push
mov
cmp
ds
imul
mov
inc
push
cmc
adc
mov
jbe
pop
scas
js
pop
push
into
nop
pop
push
loope
sub
push
test
addr16
xchg
filds
sbb
mov
and
jge
andb
dec
sarl
nop
mov
cmpsl
pop
in
test
sub
inc
movsl
mov
sti
cmc
add
in
or
mov
fdivl
mul
js
je
mov
xchg
shll
lea
popf
xchg
fld
jnp
inc
stos
mov
mov
negb
cmp
xchg
and
cltd
cmp
push
rcll
mov
movsb
stc
mov
jae
jb
lahf
dec
mov
lock
mov
cmpsb
shr
sbb
xchg
push
push
add
cltd
or
pushl
fdivrl
aam
test
fwait
dec
mov
push
push
out
movsb
jge
test
xchg
les
push
les
dec
lods
out
gs
stos
xchg
sub
jne
and
xchg
movsb
lcall
or
js
push
out
std
mov
xchg
ds
adc
test
dec
sbb
test
ror
ja
mov
imull
in
push
insb
loope
sub
cmc
cmc
movsl
add
push
icebp
jecxz
jp
iret
lret
cmp
add
movsl
mov
test
mov
std
lret
mov
sub
cmp
xchg
arpl
aaa
lahf
mov
sub
sbb
mov
xor
mov
jle
or
and
mov
pop
bound
outsb
push
mov
pop
lock
inc
andl
push
mov
dec
xor
dec
shrb
mov
stos
xor
fistpll
enter
aas
dec
xchg
sub
dec
adc
idivl
cmp
xor
dec
push
adc
pop
cmpsb
mov
aaa
pusha
and
mov
pop
cmc
jl
and
jb
cld
in
cwtl
mov
sub
ja
or
mov
data16
outsl
pop
ljmp
aaa
rcr
push
cmc
cmc
pop
mov
or
mov
xor
cmpsb
add
outsb
push
lret
scas
xchg
test
pop
mov
int3
jbe
mov
test
sub
cmp
mov
fcoml
inc
inc
in
in
push
xchg
and
or
lret
mov
shrl
adc
xor
bound
dec
aaa
je
fwait
lock
test
xor
and
mov
pop
sahf
jns
push
movsb
pop
mov
mov
jg
repnz
push
add
mov
inc
fcomi
or
testl
add
add
lahf
arpl
mov
cli
test
inc
add
push
pop
add
movhps
mov
mov
mov
js
cmp
insb
pop
mov
mov
leave
push
testb
mov
outsl
jne
xchg
xor
hlt
push
fsubl
je
int
or
jns
and
inc
cli
push
add
xorl
mov
daa
xor
inc
loopne
sbb
jmp
shrb
sbb
jecxz
lods
inc
add
andl
js
mov
pusha
adc
inc
jne
cmpsb
fnstcw
and
pop
imul
repnz
xor
xchg
nop
lods
mov
movsl
xchg
jle
jg
push
mov
jne
jmp
cld
adc
out
lret
pmaxsw
mov
dec
jbe
cmp
rclb
lea
fwait
mov
fistl
xchg
xchg
cmp
xchg
push
les
pop
pop
pop
mov
inc
imull
and
pop
in
aas
adc
inc
sbb
cmp
fmuls
and
or
out
or
lds
xlat
dec
or
mov
cmc
cs
pop
pop
int
movd
ss
xor
xor
enter
sub
sub
inc
lahf
scas
pop
xchg
nop
xorb
cltd
jne
jecxz
and
xchg
add
in
pusha
lock
ljmp
test
cmp
xchg
out
mov
loope
aad
lds
mov
mov
sub
pop
out
rcll
leave
xlat
xor
cmpsl
sbb
aas
fs
popf
dec
xchg
popf
sub
test
shll
pusha
shlb
pop
ret
sub
sub
hlt
insb
cs
dec
clc
push
xorl
cmp
jecxz
addr16
stos
add
sbb
sub
pop
jg
cltd
loope
sub
inc
add
push
xor
in
fidivs
mov
mov
add
inc
mull
xlat
rorl
pop
inc
mov
ja
lods
or
enter
repz
cmc
jecxz
mov
push
or
add
add
sbb
sbbl
cltd
call
scas
xlat
icebp
xchg
movsl
test
jb
and
push
std
ljmp
ret
cmpsl
add
xor
das
xor
mov
pop
stos
movsb
std
fcompl
sub
xlat
cmp
rcrb
sbb
aas
pop
movsl
fdivrs
test
scas
nop
rcr
lret
dec
adc
dec
mov
jno
shl
in
sub
xor
dec
lds
cmp
jmp
and
rorb
inc
xor
dec
or
dec
pushf
jae
outsl
mov
cmp
mov
testb
sti
adc
fcomp
dec
jns
mov
in
mov
adc
imul
inc
loope
mov
pop
outsl
lcall
adc
mov
dec
insl
jle
adc
xchg
fists
adc
pop
repz
in
cmpsl
lret
push
add
push
push
and
sub
cmc
ret
cmp
scas
iret
ljmp
into
dec
mov
or
sbb
inc
add
ret
or
mov
jns
popa
outsb
pushf
xchg
push
adc
dec
orl
xlat
out
movsl
mov
arpl
cmp
pushl
xor
inc
flds
and
dec
jns
out
sub
sbb
arpl
ret
sarb
pop
icebp
add
mov
in
mov
jmp
xor
es
in
shlb
cmp
cmpsl
dec
rcrb
pop
xchg
mov
fistl
xchg
add
shlb
gs
scas
loope
mov
and
test
adc
je
movsb
call
clc
icebp
bound
xor
shl
scas
mov
das
and
adc
mov
popa
mov
mov
jb
rorl
lcall
mov
cli
cmp
sub
inc
andb
dec
call
sub
or
roll
push
cmpsb
xor
iret
lods
and
xor
scas
mov
and
push
ds
jbe
fstp
shlb
mov
mov
sbb
mov
in
lret
sarl
clc
mov
pop
sbb
jge
add
sti
mov
cmp
mov
or
mov
or
xorb
in
xchg
mull
sub
sub
loope
imulb
movsl
sbb
push
adc
mov
jbe
movsb
fimuls
cwtl
cmp
mov
fildll
pusha
inc
fistl
imul
and
xor
xor
xchg
in
adc
mov
mov
jnp
mov
jle
stos
jp
mov
rorb
push
mov
out
popa
push
add
mov
jnp
pop
out
push
popa
loop
or
aad
xor
dec
popa
je
cs
inc
xchg
mov
mov
sahf
mov
movsb
jbe
cmp
add
jecxz
ss
dec
mov
inc
das
mov
outsl
or
sbb
ds
test
mov
pop
pop
je
push
in
cs
aas
push
or
dec
jae
test
fidivrs
mov
and
mov
xor
push
loope
test
in
push
mov
sahf
add
sbb
popf
sbb
mov
fs
pop
cld
and
in
ja
sub
sub
and
stc
adc
rolb
lcall
mov
setnp
clc
mov
stos
repz
inc
jnp
push
adcb
mov
movsl
sub
dec
clc
les
inc
xchg
sbb
adc
loop
cld
mov
pop
jge
dec
mov
pop
popf
mov
in
aad
push
mov
jns
leave
add
bound
cmc
imulb
jmp
mov
inc
mov
loop
dec
call
lcall
fsubrs
nop
stos
pop
sbb
dec
pop
sbb
pop
add
xlat
loopne
incl
sbbb
sbb
mov
xchg
mov
mov
and
fdivp
mov
jmp
and
add
gs
or
js
fstpt
movl
pop
sahf
inc
fisttpll
dec
rcrl
add
sbb
insl
les
mov
jae
xchg
adc
add
pop
add
test
xor
pop
xor
andl
outsb
push
addr16
fiaddl
dec
or
jae
loope
adc
into
xor
adc
outsb
xor
pop
or
lret
cmpsl
jae
sbb
mov
scas
int
and
pusha
or
cmp
push
nop
fnstenv
xchg
aam
and
lods
test
jb
xchg
cmp
test
sbb
push
push
sti
jmp
xorb
outsb
jmp
add
mov
test
mov
mov
adc
sbb
jne
test
xor
loope
jo
sub
add
sbb
mov
idivl
mov
mov
lds
ds
jmp
je
cmc
push
inc
pop
cmp
and
sub
pop
lcall
inc
jle
stos
mov
pop
mov
imul
push
pop
fisubs
sbb
in
ja
mov
cmp
push
aad
out
sbb
idivl
jae
stc
adc
mov
dec
jg
test
icebp
loopne
js
icebp
xlat
fstps
sub
ret
out
xlat
mov
test
inc
inc
fildll
push
mov
cli
sub
cmpsb
pusha
dec
push
push
and
js
loop
loope
xchg
subl
xchg
mov
xor
push
cli
push
popf
ror
rcrb
jecxz
and
in
arpl
test
outsl
sub
add
arpl
popa
mov
adc
pushf
mov
cmp
and
pop
cmp
mov
push
jo
js
in
in
sub
sbb
loopne
dec
testl
jge
or
cmp
out
push
dec
stos
fiaddl
subl
out
xchg
out
xchg
outsl
fwait
mov
shrl
push
fcoms
jae
aaa
bound
int
pop
mov
lods
mov
jl
mov
repnz
fcompl
xor
xchg
dec
lret
inc
out
jbe
clc
pop
jne,pt
mov
cmc
stos
adc
sbb
xlat
fidivrs
mov
dec
insb
dec
lock
push
jo
lock
xchg
rclb
inc
mov
pusha
jno
inc
mov
neg
stos
xchg
movsl
jns
inc
push
xchg
es
add
pop
sbb
rol
jmp
sub
pop
mov
dec
rolb
push
mov
in
xor
ret
xchg
push
testb
xchg
pop
inc
pop
inc
push
cli
int
push
xchg
xchg
cmp
shrb
cmp
gs
push
fimull
jbe
enter
and
popa
data16
inc
out
jae
into
inc
xchg
cmp
sbb
lods
testb
in
xrelease
rcrl
repnz
mov
or
je
mov
cltd
xor
push
jl
dec
cmp
lahf
xchg
fmuls
mov
mov
cmpsl
sbb
push
testl
mov
mov
cmp
ret
jnp
jae
adc
in
cmc
pop
mov
cmpsl
out
rcr
push
bound
inc
repnz
test
add
je
adc
sub
cmp
xor
or
mov
jne
imul
cmp
outsb
lcall
cs
mov
loopne
mov
dec
addr16
dec
loope
jnp
inc
fidivrl
adc
enter
xor
push
clc
sbb
and
push
arpl
leave
in
test
das
scas
mov
mov
mov
dec
sub
cs
dec
loopne
fs
sbb
js
lods
clc
dec
scas
insl
add
and
cmp
pop
xor
add
dec
xchg
push
push
xchg
in
popa
dec
pop
cmp
mov
or
daa
cmpsb
sbb
test
xchg
jle
jp
jmp
xchg
popf
in
sub
ss
lds
dec
pop
sub
pop
jmp
ret
mov
mov
stos
cmpsb
or
xlat
sub
sahf
mov
push
testl
sbb
mov
dec
arpl
arpl
outsb
loop
dec
repnz
ja
adc
cli
adc
subl
loop
dec
inc
adc
cmc
inc
fucomp
lods
dec
lret
repz
mov
pushf
jecxz
mov
xchg
fcomp
inc
aas
fisttpl
pop
stos
jnp
sti
incb
pop
addr16
mull
stc
mov
xchg
loope
fdiv
or
pop
mov
out
pop
aaa
add
xor
loop
arpl
outsb
dec
push
push
cli
mov
and
inc
inc
aas
rorl
sub
shrl
dec
pop
setbe
jnp
xchg
in
pop
inc
outsl
aas
cmp
and
and
inc
or
inc
add
je
and
or
in
aas
dec
inc
mov
roll
ret
in
imul
xor
or
jb
scas
ds
in
popl
add
stc
pop
jnp
push
push
stos
xchg
and
arpl
lock
push
leave
hlt
test
int3
dec
jns
cwtl
inc
fdivs
mov
mov
dec
and
inc
and
out
enter
pop
std
int
rcr
popf
lcall
xchg
out
and
mov
adc
test
inc
nop
xor
sub
scas
cmp
ja
aad
jp
mov
mov
mov
call
inc
fmulp
pop
sbb
cltd
dec
imul
leave
jecxz
mov
mov
icebp
inc
fdivrp
mov
std
imul
int3
mov
jg
insl
adc
push
test
stos
sbb
pop
js
pop
jns
roll
gs
in
inc
jns
mov
or
lret
mov
mov
scas
iret
int3
shll
pop
inc
lcall
inc
cld
inc
push
testb
test
fnstenv
lret
or
inc
inc
imul
xchg
cmp
out
sbb
add
cmc
imul
lcall
or
sub
inc
jmp
fbstp
xlat
das
cmpb
sub
or
mov
insl
ret
out
xlat
dec
xor
leave
inc
xchg
orb
ficoml
fmul
frstor
repz
fucomip
fwait
out
pop
dec
sbb
xlat
imul
iret
enter
dec
jmp
cmp
inc
sbb
jle
dec
or
mov
ds
push
out
dec
sub
repz
mov
pop
mov
mov
xchg
mov
add
push
pop
add
ret
pop
add
pop
in
hlt
insb
fwait
das
ror
mul
xor
scas
adc
lret
push
mov
dec
jecxz
jl
mov
mov
push
pop
adc
push
push
pusha
lahf
mov
push
hlt
adc
leave
mov
lahf
push
add
or
mov
mov
cmp
xchg
xor
incb
icebp
out
push
sar
push
xorb
jb
lock
cld
mov
int
cwtl
lahf
mov
fwait
adc
dec
and
movsb
arpl
cmp
sub
out
cmc
xor
and
fidivrs
loop
lret
lret
addr16
sti
mov
outsb
lock
out
ret
pop
sub
add
and
test
nop
ret
ret
shll
enter
add
imul
call
cmp
pop
out
aam
xlat
or
mov
add
fnstcw
cmp
lahf
jo
rorb
or
mov
xor
pop
fisttps
loopne
fmull
pusha
pop
xchg
ror
mov
jbe
xor
pop
push
mov
out
mov
inc
iret
inc
test
popf
adc
xchg
adc
push
test
out
sub
cmove
pop
std
les
push
into
xorb
into
les
sub
mov
sbbb
mov
jnp
push
xlat
mov
aas
mov
mov
aaa
mov
xchg
and
and
mov
xor
jns
mov
xchg
in
ret
cmp
jg
add
jg
push
test
icebp
fnsave
lea
je
cmpsb
mov
pop
push
shll
ss
fptan
or
add
mov
adc
mov
sub
pop
xchg
sub
cli
addr16
jle
xchg
cmpl
jmp
and
mov
mov
lret
int
jge
repnz
add
ja
je
jmp
dec
int
orl
fwait
pushf
push
push
loope
insl
les
cmp
sbb
cmp
mov
mov
gs
pop
push
pop
mov
mov
lret
jo
test
nop
push
pusha
jnp
fstps
push
push
andl
fwait
mov
or
cmp
push
pop
lret
push
and
inc
movsl
fstps
lret
sub
lahf
mov
xor
addb
fld
insb
nop
shlb
cwtl
repnz
sbb
jne
hlt
add
mov
mov
fucomi
adc
mov
xor
cmp
clc
cld
movsb
cwtl
popf
mov
add
je
dec
and
cli
jg
in
push
cmpsl
hlt
cwtl
xor
cmpsl
popf
jne
fsubrl
enter
pushf
mov
cmc
out
inc
xchg
popa
insl
cmp
mov
sti
and
addr16
add
sbb
and
shll
out
cmp
dec
andl
mov
jno
mov
mov
scas
push
cltd
daa
xor
sbb
sbb
dec
xchg
scas
divl
mov
cltd
outsb
mov
loope
hlt
xchg
test
std
popf
lods
sbbl
adc
pop
fs
sbb
clc
daa
dec
push
test
insb
add
mov
sahf
jb
dec
loop
and
xchg
add
or
bound
sub
mov
inc
std
xchg
shl
jp
dec
mov
adc
enter
push
das
bt
inc
jg
std
push
stos
ret
dec
orb
stos
lea
xor
push
rcll
in
lea
xchg
mov
data16
sub
ja
xor
jb
sbb
inc
imul
pop
loopne
out
mov
jecxz
fisttpl
dec
xchg
inc
in
inc
cmp
sbb
inc
pop
push
dec
push
aam
adc
adc
add
in
cmp
gs
xchg
xor
jne
lahf
mov
and
rcll
xchg
movsl
sub
into
gs
dec
sahf
jg
sbb
push
pop
fisubrl
mov
sbb
lret
or
mov
lea
clc
fcomps
jl
cmc
add
add
xchg
int
out
or
fbstp
out
and
fdiv
lcall
leave
movsl
ljmp
sarl
cmp
pop
pusha
inc
pushf
divl
and
es
xchg
arpl
jo
lret
pop
rorb
jae
adc
mov
imul
sbb
add
sub
stos
jle
jnp
xchg
lahf
negb
lea
fdivrl
mov
inc
idiv
mov
pusha
pop
lret
adc
ret
inc
cltd
pop
jle
cmpsb
jle
sahf
lods
cmp
jge
cmc
xchg
add
fldenv
jnp
repz
loopne
int3
int
mov
je
sbb
mov
in
dec
inc
inc
testb
mov
outsl
sub
out
mov
cmp
test
and
jae
xor
rcrb
ret
ds
push
lea
mov
or
scas
js
aas
jle
out
imul
je
jg
je
bound
sbb
test
scas
pop
decb
pusha
adc
jbe
roll
icebp
test
and
stc
cmp
cmp
aam
aam
and
lods
mov
pop
lea
push
push
pop
pop
fcomi
sub
cld
adc
pop
mov
call
mov
lock
out
or
or
mov
mov
add
fists
sti
mov
stc
lea
lret
dec
cwtl
and
subb
test
lret
loopne
jge
push
jecxz
cmp
cs
xor
ljmp
imul
fnstenv
or
cmp
ss
out
jno
imul
jne
insb
mov
scas
adc
cmpsl
out
sbb
jecxz
push
pop
mov
and
fsubl
adc
sub
testb
fimull
sti
add
int3
mov
sbb
scas
add
lea
fsts
es
divb
push
jp
aaa
push
clc
pusha
push
lock
add
push
loop
mov
xchg
cmc
out
mov
into
dec
sub
xchg
ret
aaa
pusha
mov
sbb
mov
pop
aad
mov
mov
mov
cmc
adc
add
adc
popa
push
stos
sbb
movsl
push
int
adc
or
push
xchg
jnp
jne
pushf
movsl
mov
jecxz
cmpsb
adc
mov
test
cmpsb
popf
add
push
pop
add
inc
dec
pushf
in
mov
fists
adc
outsl
and
mov
test
idivb
xchg
xchg
mov
lock
dec
jbe
cmp
sbb
outsl
cmp
lods
ljmp
add
push
aam
mov
daa
cmc
mov
ss
stos
sbb
cmp
lret
or
insb
add
mov
lea
pusha
xlat
shlb
int3
je
pop
addr16
xchg
cmp
aad
sbb
cmp
fcomp
shll
cmp
xorl
dec
mov
jnp
das
push
add
adcl
mov
add
arpl
push
add
lds
xor
jmp
mov
mov
fmuls
and
sbb
mov
mov
add
lods
sahf
or
test
push
stos
test
icebp
inc
leave
mov
mov
insl
int
adc
orb
mov
sub
xor
jbe
in
repnz
dec
adc
cltd
aam
mov
sahf
cmc
adc
jmp
imul
fadds
aas
mov
xlat
test
push
inc
divl
mov
rorb
iret
cmc
out
sbb
xor
mov
fucompp
adc
shrb
xor
stos
loope,pt
adcl
js
xor
or
push
stos
into
add
xor
movsl
add
pop
lret
in
imul
cmp
adc
xlat
das
dec
and
dec
sti
lock
mov
addr16
outsb
add
jl
popa
push
adc
pop
gs
dec
iret
iret
imul
pusha
mov
insb
enter
out
cld
cmc
xchg
push
jbe
xchg
jno
mov
mov
add
xor
jo
test
fsts
das
pop
mov
sbb
aas
in
jo
ljmp
xchg
clc
and
pop
mov
fdiv
and
cmp
pop
popa
jae
aam
jb
notl
or
fnstcw
popa
imulb
pusha
push
mov
loopne
enter
sti
xor
jle
xor
push
add
mov
pop
add
scas
lods
xchg
leave
jge
xchg
imul
icebp
dec
test
or
dec
es
imul
gs
shrl
aam
inc
in
rcl
lods
daa
dec
adc
nop
movsl
pop
pop
insl
je
aaa
loop
fs
sub
xchg
mov
cli
int3
mov
out
cmpsb
or
pushl
call
sti
mov
call
push
mov
add
pusha
xchg
lret
out
push
sarb
add
cmp
insl
fisubl
mov
int3
mov
fadds
mov
xchg
jecxz
pop
lcall
lcall
sub
jae
insb
repnz
inc
jo
jno
jae
mov
dec
fnstsw
outsb
jne
sbb
dec
mov
rcll
jno
adc
mov
test
or
cmpsl
inc
xlat
and
xchg
pop
mov
fistps
add
adc
scas
es
xchg
enter
inc
and
decb
call
add
adc
add
stos
cmp
dec
push
cmpsb
fists
push
call
or
pop
fistpll
lret
xor
pop
add
lods
test
arpl
or
sbb
jne
xchg
loop
adc
adc
mov
xor
fcoml
mov
cld
dec
or
cltd
push
push
clc
ljmp
pop
xor
popa
bnd
and
aam
adcb
cld
outsl
xchg
in
movsl
xchg
sub
push
divb
imul
frstor
in
bnd
outsb
pop
out
and
cmp
jbe
sub
cld
adcb
sub
clc
xor
mov
mov
es
mov
sbb
cmc
mov
popf
jne
add
cmp
jne
push
mov
pushl
jmp
inc
jb
push
jg
jno
push
lret
stc
fnsave
fimull
cmp
scas
rorb
cmp
outsb
cmp
jle
lcall
cmp
mov
subl
pop
pop
imul
fldt
fwait
xchg
xlat
lahf
mov
adc
sub
popf
pop
das
jl
mov
subb
push
mov
xchg
mov
or
in
push
movd
cmp
push
mov
test
stos
xlat
ja
test
push
repnz
cmpsb
std
cmc
scas
or
push
pop
cmp
add
pop
stos
mov
lcall
push
mov
ret
jl
es
in
inc
fcoml
push
test
insl
repnz
dec
mov
push
xor
test
xchg
popa
or
stos
xchg
out
and
xchg
sub
inc
lret
jle
sahf
test
pop
bound
xor
cmp
popa
shl
clc
fmuls
iret
std
inc
push
test
or
sbb
in
rcrl
dec
fs
enter
pop
or
int
or
add
das
cmp
mov
cmc
pushf
pop
int3
xor
dec
dec
leave
loopne
rcl
shrl
and
pop
mov
repnz
nop
pop
arpl
or
fs
jne
mov
divl
lahf
add
movsl
xor
pushf
or
lahf
out
in
jns
jbe
inc
enter
mov
jg
inc
in
fidivrl
out
fwait
mov
mov
sbb
testl
cmp
adc
inc
int
imul
cmc
or
popa
in
test
aas
mov
inc
dec
push
cwtl
dec
jg
pusha
outsb
and
out
sbb
and
imul
inc
and
clc
mov
loope
aam
mov
mov
dec
xchg
xor
dec
icebp
xchg
lods
adc
jbe
into
inc
in
mov
push
lret
jecxz
in
jns
sub
lret
mov
loopne
sti
mov
test
mov
test
jmp
imul
mov
sti
imul
xchg
aam
jns
push
repnz
iret
scas
pushf
movsb
pop
mov
xchg
fisubrl
ja
xchg
sarb
hlt
or
leave
leave
dec
push
or
add
inc
add
scas
lahf
es
test
jb
stc
inc
pop
int3
rorl
xchg
fs
push
add
and
xor
jmp
mov
test
fstpt
jns
sahf
jb
test
pop
data16
mov
inc
jmp
sbb
jo
subb
xorl
dec
pop
push
inc
or
pop
cltd
sarl
mov
push
add
push
pop
add
adc
test
cmp
mov
and
inc
mov
xchg
clc
nop
dec
enter
or
sbb
mov
insb
xlat
stc
push
imul
add
mov
dec
lods
icebp
xchg
stc
push
sbb
mov
aaa
orb
ja
ss
stc
loop
sbb
pop
cmpsl
in
xchg
pushf
xor
pop
push
scas
popf
or
or
fmulp
addb
cltd
dec
add
jbe
pusha
xchg
stos
in
push
cli
dec
fcmovb
jge
lcall
add
dec
je
shl
ljmp
daa
insl
cli
lahf
hlt
shl
add
adc
repnz
into
sub
xor
push
fildll
fldl
pop
in
stos
das
mov
lahf
pushf
and
cmp
int
adcl
stc
lret
stos
mov
inc
push
pushf
inc
aam
xchg
jne
sub
sahf
out
sarb
pop
fstpl
mov
lock
adc
mov
push
nop
jae
jp
sub
stc
cmpl
lcall
out
jne,pn
xor
js
jle
out
test
push
imul
icebp
dec
jae
or
fiadds
aam
fs
bound
sub
je
mov
out
lds
rcl
rclb
mov
lock
pop
mov
pop
lods
lock
pop
jno
jmp
sbb
flds
inc
cmc
jns
xorb
ja
and
xor
inc
outsb
fidivrs
arpl
fisttpll
sbb
aas
inc
cmp
pop
xor
mov
mov
or
mov
cmp
adcl
xor
pushf
cmp
push
adc
pop
loopne
ret
mov
ds
in
cmp
hlt
mov
mov
test
mov
mov
pop
or
sub
pop
sbb
add
push
mov
fs
mov
int
push
sbb
ud0
push
mov
inc
popa
imull
rorb
test
and
mov
pop
xor
bound
xor
out
stos
data16
outsl
js
sti
das
call
push
pushf
les
fistpl
pop
push
cmp
fnstcw
mov
cmp
aam
and
cli
xlat
inc
and
out
mov
sub
mov
sbb
push
jecxz
cmp
int
ja
insb
ss
cmpsl
cs
rorb
mov
pop
addb
xor
inc
rcr
popf
mov
push
pop
mov
jns
outsl
xor
cli
testb
sbb
stos
in
fs
mov
mov
mov
push
mov
enter
imul
push
adc
pop
sahf
mov
es
in
mov
sbb
jg
push
sbb
mov
mov
mov
pop
mov
push
inc
leave
mov
pop
and
mov
sahf
push
fiadds
cmp
add
lds
ret
dec
loope
xchg
or
dec
imul
xor
mov
sub
push
test
xor
or
pop
bound
pusha
push
lods
cli
pop
jmp
icebp
jbe
mov
or
xor
xchg
mov
inc
sbb
jg
int3
xchg
jge
fisubrs
mov
pop
enter
push
movsw
iret
adc
mov
imul
dec
leave
mov
shlb
pop
dec
or
outsb
adc
pop
adc
xlat
sbb
push
movsl
loope
or
roll
ror
xor
or
mov
scas
push
movsb
and
iret
push
ret
xor
cmp
adcl
aaa
adc
cmp
lea
cmp
mov
push
sbb
lods
fs
jns
sarl
mul
mov
cld
popa
fwait
xor
lret
into
pop
ret
sbb
xor
loop
push
cmp
roll
cmp
push
fs
stos
popa
in
test
and
adc
cmovns
jae
outsl
or
sub
xor
push
xchg
adc
mov
aad
mov
ljmp
push
inc
add
cmp
cwtl
out
lcall
ret
sub
mov
sub
xchg
orb
cwtl
mov
push
mov
xor
jns
enter
out
sar
mov
test
or
es
mov
lods
pushf
pop
fcmovnu
add
or
or
jbe
sub
popa
nop
cmc
jne
pushf
iret
aaa
call
jnp
sub
and
ds
aam
icebp
mov
mov
dec
fs
inc
shl
pushf
iret
pop
das
xor
pop
push
mov
sub
in
sbb
mov
inc
mov
cmc
out
cld
lock
fucom
das
sub
pop
test
adc
sahf
jg
push
outsl
in
xor
lea
int
jno
xlat
cmp
js
mov
push
mov
cmp
and
je
dec
jb
push
imul
int3
cmp
lea
jbe
dec
dec
jbe
lret
jae
and
cmp
in
fildll
pop
xorl
fisubrl
or
jle
sub
fcmovne
lret
fisttps
mov
sarb
and
adc
push
add
pop
ret
cmp
mov
rep
fucomip
jle
out
and
fcomps
cmp
sub
mov
aas
jecxz
scas
clc
and
popf
shlb
jno
push
nop
nop
repz
fbstp
fs
jae
or
fstpt
mov
je
out
arpl
dec
lahf
or
insb
movsb
adc
pop
shll
mov
add
les
mov
adc
scas
rcll
pop
popa
lods
std
pushf
movsb
or
jo
idivl
xchg
jg
mov
je
test
mov
adc
sub
aad
xor
pusha
push
leave
pop
test
pop
push
mov
stos
rcl
or
mov
scas
ja
daa
mov
xchg
movsl
cmpsl
mov
ret
cltd
xchg
push
adc
imul
insb
jns
push
aam
push
sbb
stos
push
stc
dec
rcrb
pop
jecxz
add
ja
xchg
popf
mov
ja,pn
test
add
pop
add
cmp
xchg
push
stos
xchg
add
jns
inc
ds
push
out
mov
mov
lahf
push
jb
lret
jle
cmpsb
pop
loope
ljmp
nop
call
mov
arpl
in
push
cmp
out
and
leave
stos
sub
test
cli
mov
addb
mov
rorl
hlt
ss
loopne
addr16
xchg
add
cmp
es
push
lds
cmpsl
ret
rclb
dec
mov
imul
scas
or
inc
mov
fidivs
imul
push
pop
push
mov
sub
dec
imul
jne
jne
insb
and
out
in
xchg
jne
insb
mov
mov
shlb
push
out
push
xchg
hlt
out
roll
cltd
mov
pushf
xchg
mov
stc
mov
loope
mov
mov
mov
mov
jecxz
xor
and
push
jnp
mov
shld
out
cld
leave
pop
sub
mov
mov
mov
jb
loope
add
div
int
or
inc
or
pusha
mov
gs
sub
mov
mov
call
dec
mov
pop
xchg
nop
pop
fdivs
sbb
dec
mov
loop
sub
lds
push
js
lahf
pusha
cmc
jg
je
push
sbb
and
jle
xorl
int
fs
xor
ret
adc
aaa
xchg
mov
shl
fs
das
pop
test
mov
add
mov
arpl
add
mov
and
or
or
call
mov
div
into
sbb
xorl
pop
iret
xchg
or
int3
push
jnp
arpl
mov
add
and
mov
shlb
fistpll
jmp
xor
aas
sbb
stc
js
add
xor
lds
jo
jl
inc
popf
push
mov
mov
inc
mov
mov
sub
sub
adc
imul
add
ss
js
push
jb
stc
xchg
popa
pusha
push
aam
lds
cmpsl
jp
pop
repz
jbe
sbb
testl
dec
xchg
push
jb
mov
lds
js
push
cmc
and
lret
fsubl
ss
inc
loopne
mov
mov
loope
xchg
xchg
push
fnstenv
fwait
and
xor
sub
imul
out
loopne
test
xchg
mov
ss
fimull
push
cmp
call
roll
mov
adc
jne
add
subb
arpl
mov
sub
into
jge
fsubrs
insb
dec
cmp
cld
inc
mov
mov
sahf
or
push
shlb
xchg
push
mov
sahf
push
roll
cmp
mov
stc
sbb
mov
push
inc
xchg
pop
pop
mov
or
inc
loop
adc
movzbl
lods
xlat
jp
in
or
inc
pmaxsw
adc
scas
fisubs
out
xor
push
fcoms
add
ja
lock
mov
imul
xchg
inc
pop
testl
sti
push
xchg
jbe
or
jae
mov
add
or
js
pop
mov
mov
call
jl
fsub
push
pop
mov
lcall
pop
lock
jl
push
out
sbb
cmp
loop
imulb
scas
insb
and
ds
iret
test
mov
cld
popa
pop
adc
stos
in
test
mov
stc
push
xchg
jecxz
mov
fiadds
or
lods
ljmp
dec
jecxz
test
cmpl
or
mov
or
adc
cmp
movsb
mov
or
cmp
push
ds
jmp
outsb
scas
add
add
pop
mov
movsb
aam
mov
aam
inc
pop
ret
pop
insw
shlb
mov
rcl
push
mov
sbb
dec
mov
movsb
incl
cmp
xor
mov
pop
es
data16
or
lds
sub
xor
je
mov
jle
pop
arpl
push
inc
mov
movsl
pop
std
je
in
sub
sbb
sbb
hlt
pop
xchg
imul
xchg
stos
add
fsubrs
jo
jecxz
pusha
gs
jo
pop
into
sub
into
add
out
int
add
jo
repz
ret
xlat
mov
adc
push
jns
sti
and
jbe
xorb
sub
adc
sbbl
adc
mul
or
sub
xor
mov
xor
push
dec
push
push
pop
pop
cmc
mov
std
cltd
insl
adc
iret
fwait
jge
xchg
add
cmp
xchg
cmc
mov
add
into
push
popa
aas
add
xchg
insb
cmc
dec
jnp
dec
xor
mov
xchg
mov
loop
pop
dec
cmc
inc
xlat
add
push
xchg
push
dec
cmc
int3
adc
mov
xchg
sti
rcll
inc
jle
xchg
or
orl
call
in
mov
pop
inc
movsb
cltd
xchg
lea
push
mov
push
rcrl
sahf
pop
and
enter
pusha
test
icebp
pop
clc
lds
jbe
jne
les
hlt
out
mov
js
xchg
xor
mov
sbb
mov
jnp
inc
jnp,pn
push
imul
cwtl
pusha
andl
cmpsb
in
cwtl
leave
rcll
out
or
push
dec
fwait
dec
in
ret
xchg
lea
push
das
dec
frstor
out
lret
xchg
inc
mov
xor
pop
shr
shlb
pop
xchg
test
inc
cmpsl
data16
out
fdivrs
and
out
adc
arpl
ret
sub
test
add
fbld
mov
test
std
leave
int3
xor
inc
arpl
dec
mov
test
jo
xchg
add
scas
push
iret
fmull
movsb
in
or
addr16
xor
ljmp
xchg
sbb
push
mov
cwtl
xor
outsb
ja
xchg
mov
cld
imul
dec
iret
in
in
inc
mov
in
mov
lock
pop
mov
ljmp
mov
loopne
add
add
clc
sahf
out
or
sbb
add
pop
add
call
add
push
push
jmp
pop
dec
push
dec
mov
xchg
cli
fsubrs
test
sub
lahf
jmp
cld
mov
sub
or
push
jg
shrl
jo
repnz
sbb
pop
jmp
cmp
in
jb
loop
fidivs
outsb
mov
jl
mov
test
pusha
xor
sub
popf
jp
std
dec
and
cmp
jge
out
pop
push
dec
pop
xchg
std
in
popf
lods
cwtl
stos
test
dec
jge
into
xor
clc
cltd
add
sarl
xchg
sbb
push
jle
loop
jmp
pop
js
sub
jle
mov
xchg
cmp
mov
addr16
push
mov
ss
repz
mov
stos
fidivl
sub
out
ret
mov
mov
scas
inc
rorl
nop
cmpb
ffreep
orl
mov
iret
jmp
jge
push
sbb
adc
inc
and
out
xor
sub
mov
fistpl
inc
insl
dec
rclb
or
jp
dec
imul
addr16
sbbb
mov
sub
insb
xor
mov
int3
jne
fwait
sbb
xor
int
xchg
dec
hlt
mov
and
or
flds
fiaddl
adc
out
out
scas
insb
xlat
push
xor
bound
xchg
sbb
in
mov
cmp
mov
mov
jmp
push
jecxz
or
add
xor
xorl
clc
xchg
xor
repz
xchg
push
push
sahf
lahf
xchg
sti
nop
int3
xor
pop
out
ljmp
add
cmpsl
xor
ss
cmpsb
sbb
leave
sbb
inc
mov
fs
mov
xchg
xorl
fisubs
dec
sarl
mov
cld
repnz
adc
cmpsb
push
ss
jge
push
dec
dec
or
pop
mov
push
movl
daa
sub
dec
popa
sbb
mov
cmp
or
or
jmp
xor
repnz
stc
and
out
mov
adc
nop
leave
adc
sbb
push
xchg
inc
ffree
pop
pop
mov
fistl
fucom
push
sahf
in
icebp
inc
inc
dec
test
rol
adc
and
and
push
mov
dec
jb
xor
aam
je
mov
adc
rcr
add
pushw
mov
push
pop
mov
sub
mov
mov
jmp
cwtl
xor
fstpt
das
movl
arpl
xchg
dec
or
or
notl
mov
jae
mov
addr16
shlb
pop
test
data16
pop
seto
test
in
mov
push
ljmp
xor
sbb
cltd
std
inc
lock
xor
jne
inc
add
leave
or
cmc
and
jge
mov
inc
in
pop
test
std
sbb
sti
loop
sub
inc
sub
fiaddl
jle
gs
mov
push
xor
and
inc
mov
lret
pop
js
pop
mov
clc
jb
lret
add
mov
std
push
test
call
fnstenv
stc
xlat
xor
xlat
divl
ljmp
or
pushf
push
out
icebp
gs
lcall
jbe
sbb
aas
hlt
cmpsb
add
dec
pop
scas
gs
push
jl
js
andb
scas
add
fbstp
inc
mov
fsubl
sarl
idiv
add
cmp
jns
std
popf
ret
push
xor
inc
out
ds
and
daa
lret
outsb
sbb
stos
popf
push
jg
bound
cmp
sbb
scas
mov
and
mov
les
push
shl
pusha
xchg
sub
and
sub
lods
leave
jae
push
cld
jg
sarl
add
xchg
add
xchg
inc
cmpsb
inc
xchg
jo
mov
lea
xor
adc
xor
jnp
pushl
in
xchg
dec
push
mov
mov
loop
or
sub
add
lea
mov
outsl
shrb
pop
loop
vminss
or
into
ret
aaa
xchg
pop
clc
ffree
mov
mov
adc
dec
rcrb
mov
scas
cmpsb
and
inc
push
add
mov
xchg
lret
mov
fst
imul
inc
dec
ret
xor
aas
bound
stc
jl
or
and
lret
xor
jns
sub
lahf
jge
icebp
push
and
cmp
push
cmpsb
arpl
aas
int
fildl
mov
mov
lret
mov
jb
je
in
fs
call
cmp
or
js
ret
inc
sar
repnz
cs
mov
popf
and
jno
or
fsubs
adc
stos
xor
call
mov
push
mov
dec
fwait
ss
mov
xchg
js
mov
jnp
sub
mov
xor
stc
out
adc
andb
dec
cmc
movsl
pop
xlat
dec
jno
in
sbb
dec
rorb
jnp
cmp
lock
int
fsubrl
pop
fldt
mov
data16
fildl
xorb
sub
fnsave
mov
sbb
and
loop
and
inc
jo
xor
sar
push
shll
test
mov
jns
add
or
push
pop
loope
push
fcmovne
rclb
mov
mov
mov
lds
adc
stos
adc
pop
push
push
mov
xor
pop
mov
cmpsl
and
lcall
sti
or
mov
bound
xor
rcrb
fistpll
out
push
lcall
or
lds
fs
lods
call
out
clc
test
jl
addb
jae
call
test
xchg
inc
dec
bound
int3
dec
jae
xchg
cs
jecxz
dec
adc
cld
inc
cli
or
lahf
sbb
int
sub
lock
pop
or
sbb
nop
push
aas
repz
push
push
mov
out
and
jg
sub
add
ret
cmp
mov
cmp
test
xchg
cmp
add
sbb
jmp
mov
fsqrt
int3
inc
lahf
jbe
mov
adc
xchg
rorl
push
clc
jle
in
jle
ret
repz
std
jle
loope
mov
lea
add
pop
add
iret
pop
stos
arpl
aaa
in
cld
mov
cmp
cmp
fdivrs
mov
movsb
push
ficompl
out
add
push
sahf
dec
inc
std
lock
jnp
icebp
xor
mov
add
fisubrs
dec
and
test
scas
cmp
out
xor
dec
je
popa
sarl
cmpsb
jmp
jl
or
imul
mov
push
dec
decl
xlat
fwait
jnp
cmp
fs
rorl
or
lods
shll
sbb
fwait
mov
jno
int
out
xor
addl
loop
push
nop
imul
pop
stc
xchg
lcall
sbb
pop
es
hlt
ss
lahf
ficomps
cld
xchg
xor
and
adc
lret
jnp
pop
xchg
stc
mov
test
lods
cmp
jecxz
pop
shlb
subb
stc
sbb
sub
mov
ret
push
mov
mov
imul
xchg
ret
sar
or
dec
lea
mov
pop
insb
in
sub
pop
ds
xor
and
sub
xchg
push
std
icebp
aam
rcrl
sti
movsb
cs
in
lods
inc
mov
push
cmp
das
mov
hlt
loop
mov
jbe
and
xor
inc
cmpsl
nop
jno
mov
mov
sbb
test
cmp
mov
enter
push
hlt
pop
mov
inc
sbb
pop
mov
pusha
add
mov
add
out
bound
mov
imul
cld
pop
lcall
data16
jmp
ljmp
or
mov
mov
sub
mov
incb
test
jle
out
or
sub
mov
mov
movsb
ljmp
pop
fwait
cmpsb
jmp
ret
ljmp
mov
mov
push
in
fistps
mov
out
icebp
loope
nop
sbb
push
fbstp
adc
dec
mov
mov
lock
jge
enter
inc
outsb
aas
adc
xor
bound
xchg
pop
test
lcall
sub
pop
xchg
test
cltd
mov
fbstp
lahf
cwtl
insl
dec
inc
lcall
loope
fsubl
pop
inc
jno
outsb
cwtl
popf
and
rcll
neg
push
or
or
leave
dec
xor
test
xchg
push
cli
cmpsl
mov
fwait
aaa
xchg
imul
aad
mov
scas
xchg
lea
dec
push
lea
std
or
push
dec
dec
mov
mov
arpl
adc
ljmp
cltd
xor
push
out
mov
xchg
sbb
aas
lret
xor
jno
adc
cmpsb
stos
insl
sbb
imul
push
sub
cmp
and
jg
les
mov
lods
loopne
in
test
sbb
insb
inc
pop
xchg
insl
in
incb
data16
jo
push
xor
fiadds
ret
outsl
mov
sbb
mov
mov
inc
jne
mov
ss
xchg
data16
mov
icebp
pop
add
cmpsb
xlat
push
mov
mov
adc
xor
or
xor
mov
mov
lock
sub
scas
push
mov
bound
fldenv
xchg
imul
insb
cmp
jne
jne
inc
pop
mov
mov
imul
daa
push
aad
cmp
dec
jmp
pusha
test
mov
fnstcw
into
jp
int
stc
push
mov
xor
jmp
dec
pop
or
xor
mov
xlat
and
jmp
jae
sbb
push
int
jge
push
dec
mov
jnp
lea
sub
and
outsl
mov
and
cmp
pop
adc
sbb
lret
sti
adc
xchg
out
mov
pop
ss
push
sub
out
imul
nop
lods
js
add
in
jb
stos
mov
mov
cmpsl
push
mov
in
lods
mov
pop
data16
in
or
test
add
and
xchg
out
mov
sbb
xchg
or
lods
jnp
jns
adc
iret
aad
dec
cmp
adc
dec
scas
jbe
or
fwait
jl
in
push
xlat
cltd
mov
and
pop
mov
out
dec
out
and
in
and
push
into
jne
jae
mov
push
dec
push
out
inc
cmp
mov
sub
push
mov
rorb
jmp
imul
push
stos
xchg
push
dec
pop
add
mov
mov
lea
fisubs
adc
lea
pop
std
inc
lahf
enter
ret
cmp
in
and
inc
or
or
add
shlb
sti
mov
popf
frstor
out
dec
testb
aad
dec
xor
push
call
out
test
repz
lret
shll
mov
push
dec
and
inc
and
ss
xor
dec
int3
xchg
popf
aas
mov
xor
jg
pop
add
pop
scas
jg
xchg
fldt
or
push
dec
in
in
aas
sub
jae
aas
cwtl
test
xorl
xor
mov
inc
outsl
icebp
jnp
imul
int3
jmp
mov
cmp
cwtl
jo
mov
or
pop
and
cmp
pop
scas
jo
lods
and
movsb
cmp
jecxz
daa
push
mov
pusha
cltd
pop
pop
fcom
sub
pop
test
add
xchg
popf
pop
mov
xor
imul
jb
ljmp
jl
jne
ljmp
and
adc
xlat
mov
or
rcrl
addr16
sub
pop
cmp
push
fadds
or
jbe
cltd
outsl
and
cmp
push
jmp
mov
sahf
lods
fbstp
jge
fstl
aam
lahf
leave
outsl
jg
or
mov
adc
or
and
xchg
ret
imul
jns
lahf
add
addr16
pop
lcall
leave
frstor
mov
cwtl
bound
sbb
rcr
rorl
idivb
cmp
jne
pop
xchg
lahf
xor
and
call
idiv
ficoms
inc
and
inc
push
aas
lea
add
pop
add
jmp
int3
leave
cwtl
ret
loop
fwait
out
inc
cli
and
xchg
enter
lret
and
in
les
ja
or
cmp
pop
cltd
int
in
inc
loope
and
sbb
pusha
mov
mov
iret
aaa
or
scas
js
icebp
aad
push
jno
leave
push
call
dec
jge
lahf
xor
sub
xchg
mov
fs
mov
add
das
sub
sbb
xor
xor
andb
fwait
xor
add
inc
inc
adc
adc
mov
inc
add
inc
iret
dec
inc
jle
test
xorl
or
loope
xor
jecxz
and
lret
nop
mov
mov
mulb
lahf
mov
aaa
mov
mov
les
and
out
enter
dec
dec
adc
lret
loopne
fcompl
cmpsb
mov
xor
imul
inc
push
or
rclb
cmp
cmp
mov
inc
insl
sub
insb
lods
cld
aaa
jbe
dec
or
mov
inc
pop
pop
lcall
xor
stos
inc
dec
icebp
mov
lods
mov
cmp
jmp
out
pop
addb
cmp
mov
pop
repz
call
das
pusha
inc
xchg
stc
sarl
cmp
cmp
fwait
andl
inc
clc
xchg
sub
lds
pop
mov
jb
stc
sbb
xchg
insb
mov
push
pop
inc
mov
ljmp
dec
flds
xchg
mov
inc
stos
xchg
data16
out
nop
in
lret
int
iret
push
andb
jge
sbb
rcrl
aam
ret
adc
or
jecxz
xlat
stos
xchg
ds
xor
mov
xchg
leave
stos
mov
fsubs
iret
popa
fwait
push
sbb
add
cs
std
jp
jp
in
mov
pop
xchg
pop
push
sti
mov
or
inc
or
inc
mov
addb
testl
pop
jmp
mov
fnstcw
jne
lea
push
sub
movsl
xlat
dec
adc
cmp
les
mov
mov
cld
test
test
fstpt
and
adcl
mov
imul
add
addl
sub
aam
cmp
jnp
adc
xor
hlt
lock
sahf
and
fs
adc
push
mov
add
bound
sbb
push
icebp
fs
cmpsl
pop
aaa
rcll
incl
push
int
loope
fstl
pop
out
incb
xorb
add
nop
fnstcw
sbb
aam
in
xchg
pop
test
ficoms
xor
xchg
inc
setbe
or
dec
mov
gs
xor
push
xchg
mov
xchg
fbstp
sarl
sub
add
popa
aam
inc
popf
test
adcb
mov
out
push
lahf
push
loopne
test
and
hlt
in
outsb
add
jle
sbb
adc
addb
push
mov
insb
sti
pop
imulb
xor
insl
neg
mov
cmp
or
in
pop
ja
out
scas
dec
filds
cmp
lock
cmp
mov
or
in
sbb
dec
cld
cmpsl
cltd
adc
movsb
movsb
mov
imul
pop
cmp
mov
out
or
xor
test
sbb
sub
dec
into
leave
sar
xchg
xchg
lahf
pop
xor
jg
cltd
mov
es
ds
jb
outsb
lods
or
sub
mov
adc
xchg
or
fadds
push
dec
lds
fs
pop
lcall
test
rcll
rorb
or
xchg
push
add
inc
sbb
pop
xchg
lods
fsts
fldcw
pop
das
mov
fwait
out
popa
fsubs
imul
cmpsl
icebp
jno
lea
scas
cs
inc
sub
adc
sub
in
push
xchg
idivl
mov
pop
jo
sbb
stos
mov
enter
pop
jp
jg
add
lahf
fimull
add
jecxz
dec
fsubp
inc
xchg
adc
aam
adc
xchg
xchg
adc
jns
add
mov
push
aas
es
or
sbb
scas
and
inc
jp
fst
mov
pop
insl
pop
fbstp
in
repnz
sbb
pop
pushf
movsb
jmp
int
cwtl
popa
cli
int
das
lods
fwait
jns
pop
dec
rorb
ja
jp
stos
push
std
inc
cs
sahf
ja
mov
fidivrs
popw
idiv
movsb
sub
andb
sbb
sub
cmp
sub
jb
mov
out
mov
es
cmpl
inc
or
icebp
jle
mov
lea
mull
xor
and
int
mov
inc
lea
pop
and
xor
mov
in
in
movsl
bound
cmp
ficoms
xchg
add
mov
inc
test
mov
out
aas
cmpsl
stos
int
loope
pop
cmpsl
adcb
scas
std
push
lods
movsl
test
sub
xchg
pop
or
lahf
mov
sub
nop
jge
divl
jo
dec
lds
mov
pop
fnstcw
and
dec
pop
pop
jmp
mov
xchg
addr16
pusha
inc
and
cmp
jl
int3
xchg
xor
iret
into
mov
xor
pushf
mov
hlt
cmpsb
bound
fidivl
scas
rolb
insb
pop
in
push
in
xchg
xor
jecxz
fwait
xor
xor
pushf
pushf
pop
and
lahf
inc
push
push
or
incl
push
xlat
or
ror
sub
jle
adc
mov
jb
mov
sti
data16
and
jo
mov
arpl
mov
cmp
in
sub
mov
lods
mov
xor
dec
mov
jnp
jbe
rolb
lods
test
mov
call
jnp
call
or
imul
sahf
and
into
jmp
mov
jmp
jl
jns
lock
mov
dec
or
aam
rolb
pop
rol
xor
pandn
das
insl
mov
in
idiv
jg
and
mov
push
pop
add
out
and
out
pop
or
push
dec
or
lahf
leave
lea
push
insb
pop
xchg
sub
fwait
leave
popf
mov
js
aad
cmp
xlat
mov
outsl
int
aam
jle
cmp
out
lods
sub
gs
push
leave
test
add
addr16
adc
aas
das
adc
movsb
add
scas
adc
adc
mov
jb
adc
sbb
inc
shll
pop
mov
loopne
push
popa
cmc
inc
cmp
or
lret
sbb
int3
jno
add
inc
in
jmp
ficompl
pop
rcrl
mov
cmp
orl
lods
mov
in
nop
fucomp
dec
pop
in
add
es
ljmp
call
sbb
das
dec
fucom
mov
xchg
int3
imul
outsl
iret
cwtl
and
test
shrb
sbbb
in
add
push
cmp
shl
hlt
adc
outsb
xor
add
push
jl
dec
mov
sarb
inc
inc
enter
push
xlat
add
and
ret
xor
lock
pop
xchg
cmp
or
lods
push
xchg
push
andb
jge
or
loope
pop
nop
out
rolb
shrl
xor
pop
shrl
sahf
stc
in
jae
and
cltd
data16
popl
adcl
mov
mov
outsb
das
inc
jle
shlb
arpl
sub
xchg
cmp
stos
push
jl
cli
insb
cmc
mov
in
stos
shrl
ret
push
inc
mov
into
fiadds
aas
inc
cld
popa
mov
movsl
pminsw
test
mov
xchg
or
mov
pop
xor
out
lcall
inc
inc
test
filds
xchg
cli
bound
js
pop
mov
rorb
inc
xchg
add
cwtl
sarl
lea
inc
xchg
mov
and
dec
pop
rorl
pop
outsl
es
mov
xchg
negb
lret
mov
sbb
pop
mov
in
shlb
stos
data16
push
push
lcall
test
xchg
or
lret
repz
enter
lret
je
mov
mov
cwtl
mov
inc
push
sub
leave
ret
sub
fwait
or
adc
pop
and
arpl
ficoml
mov
push
divb
xor
neg
repnz
push
push
sahf
pushf
fsubrs
fidivs
or
les
stc
popa
xlat
cld
in
cltd
shr
rolb
stos
adc
arpl
mov
lods
stc
cmp
scas
dec
mov
in
lods
lahf
imul
dec
or
xor
sti
sub
and
ja
sub
mov
inc
out
je
push
cmpsl
fmuls
cmpl
sar
outsl
aaa
mov
out
dec
pop
push
shll
push
lods
cld
and
inc
rorb
or
inc
xchg
arpl
mov
xor
dec
xchg
jbe
cmp
inc
jl
xchg
aam
xchg
or
addr16
push
cmp
xor
nop
dec
xchg
jg
add
pop
jno
xchg
lea
mov
push
movsl
mov
ret
sbb
jae
in
push
mov
aas
dec
xlat
jnp
clc
mov
movsl
stc
add
mov
repz
mov
push
cmp
call
xchg
icebp
aam
mov
push
push
test
cwtl
push
ja
enter
push
mov
out
xchg
adc
lods
out
mov
cmp
jnp
pop
fs
mov
shll
shll
inc
cmp
dec
test
xor
mov
punpckhdq
fstps
lcall
jne
xchg
test
lcall
fldcw
lcall
and
push
fiaddl
hlt
mov
jle
gs
lock
inc
loope
lcall
sub
and
pop
sub
pop
jl
sbb
fwait
mov
jp
mov
jmp
jge
xchg
arpl
inc
or
pop
and
or
xor
pop
mov
sbb
aas
cwtl
dec
mov
lds
jl
or
jle
out
repnz
cmpsb
loop
xlat
imul
xchg
movsb
pop
and
xor
mov
mov
adc
adc
insl
cmp
imul
mov
push
xchg
stc
jnp
mov
jne
loope
enter
in
sbb
mov
stos
ja
stos
mov
push
arpl
adc
jne
test
movsl
mov
imul
cmp
or
adc
ljmp
enter
jae
fnstenv
cmpsl
mov
cmpsl
jp
mov
mov
addr16
shl
inc
data16
stos
mov
jb
fldenv
bound
or
add
fwait
or
iret
iret
ret
mov
ret
push
push
sub
push
iret
sbb
jo
aas
xchg
insl
push
pop
imul
or
enter
and
shlb
loope
popf
lcall
mov
mov
jbe
arpl
iret
lods
bound
xchg
jle
xchg
push
rcrl
jbe
fsubs
clc
stos
xchg
xchg
cwtl
outsl
push
outsb
adc
arpl
xchg
inc
les
mov
mov
jecxz
or
sbb
test
leave
scas
pop
and
mov
mov
in
cmp
sub
xchg
pop
aam
mov
in
sub
cmp
mov
mov
out
lahf
sbb
arpl
in
ljmp
fstpl
jae
sub
imul
insl
inc
int
std
mov
jne
lock
lods
xchg
ss
pop
iret
int
clc
add
xlat
fstpt
scas
cmp
jecxz
inc
inc
lret
mov
leave
movsb
or
jb
loopne
cmp
mov
movsb
out
popa
jl
jge
xor
adc
inc
in
sub
or
add
or
jne
cs
cmc
and
add
and
shl
mov
pop
pop
test
xchg
add
jmp
xchg
gs
lahf
cmp
iret
pop
xchg
lock
mov
in
leave
and
mov
jp
rclb
push
adcl
push
xchg
ret
xchg
pop
test
or
stos
les
repnz
outsb
xlat
popa
mov
cmp
push
loopne
bound
inc
test
clc
xor
xchg
pop
gs
cmp
shlb
cmp
sbb
xlat
std
xor
arpl
lcall
adc
add
push
pop
add
in
jae
add
mov
loop
pop
mov
mov
mov
sub
addr16
cmp
jmp
gs
jecxz
das
and
inc
test
out
push
cmp
sub
lds
test
pop
in
cld
dec
or
xchg
inc
aam
out
loope
add
out
dec
outsb
rolb
es
dec
and
push
incb
mov
daa
xchg
mov
mov
loope
fildl
or
repnz
icebp
lahf
popa
pop
xchg
insl
pop
lds
iret
mov
mov
add
push
ret
pop
pusha
xchg
mov
inc
pop
icebp
sbb
cli
cmpsl
sub
mov
sbb
ja
sbb
insl
pop
and
lcall
int3
adc
mov
int
out
call
xchg
adc
push
sbb
rcrl
xchg
add
sbb
fldt
inc
int3
push
dec
sub
jnp
add
mov
cmp
out
stos
jl
push
loop
pop
pop
cwtl
leave
mov
dec
mov
cmp
in
pop
lcall
mov
cmp
hlt
iret
aam
fisubl
popf
add
rolb
ret
mov
adc
pop
outsb
dec
mov
lods
adc
les
repz
test
mov
mov
mov
xor
add
dec
test
mov
push
adc
aam
mov
xchg
out
adc
fstl
add
sub
gs
test
xor
arpl
gs
lahf
shll
loop
gs
jne
inc
fwait
jg
jmp
sbb
or
mov
lea
dec
rclb
lock
add
sub
xor
jae
rolb
xor
sbb
scas
scas
nop
inc
and
outsl
jbe
fistpl
lods
add
xchg
pop
fistl
xchg
aaa
fsubs
rcrl
mov
aad
lods
and
mov
xchg
lods
jl
mov
jle,pt
xchg
addr16
ljmp
sub
dec
push
popf
pop
xchg
dec
or
mov
sarb
lret
cmp
movsl
lea
shlb
inc
xchg
test
xor
lret
adc
mov
js
add
cmp
dec
jle
push
push
jo
cwtl
ljmp
pop
mov
push
outsb
cs
mov
hlt
push
sub
jmp
repz
mov
out
test
lds
pop
incb
sbb
sub
aam
sbb
mov
xor
sub
icebp
dec
push
cmpsl
in
loopne
enter
mov
jne
add
or
shr
outsl
push
je
daa
lcall
jb
lds
loopne
outsb
enter
out
push
jb
es
mov
xchg
ja,pt
insl
xchg
outsb
lahf
ss
pop
push
pop
jno
je
std
xchg
inc
daa
push
shll
xchg
push
or
mov
lea
scas
inc
or
adc
adc
or
fnstenv
adc
ret
inc
mov
test
xchg
nop
sarb
dec
mov
ficoms
fcmovb
mov
mov
mov
mov
add
jnp
insl
add
pop
or
cmp
hlt
out
jmp
xchg
fisttpl
mov
dec
leave
mov
xor
cltd
push
es
cld
arpl
mov
pop
jl
scas
fdivrl
xor
xor
mov
xlat
data16
jbe
ret
mov
js
or
inc
sahf
lcall
and
jno
rorb
imul
fildl
movl
js
in
xor
mov
inc
frstor
cmp
pushf
fisubrl
xchg
imul
pusha
push
xchg
scas
ficomps
dec
nop
inc
hlt
das
ret
dec
push
outsb
or
cmp
sahf
add
mov
xor
cmpsb
mov
das
ss
mov
xchg
out
mov
out
movsl
add
push
mov
outsl
movsb
int
dec
stc
mov
mov
test
out
in
arpl
testb
lea
and
pop
idivl
stos
loopne
out
sbb
pop
sbb
popf
cmp
inc
lock
jl
xchg
aam
loopne
pop
sub
xchg
std
ljmp
mov
cmp
outsb
sbb
dec
jb
call
test
push
xchg
loopne
pop
movswl
sub
dec
inc
or
and
test
adc
js
and
sub
jbe
cmp
xlat
stos
mov
jae
icebp
std
mov
inc
lds
sub
ss
lds
idiv
mov
xor
pop
push
cmp
enter
pusha
jmp
and
jns
mov
sti
push
scas
mov
stos
scas
jns
shl
jge
cld
sub
mov
or
xchg
xor
mov
sub
frstor
xchg
dec
mov
xchg
mov
dec
mov
outsb
mov
popf
jno,pn
int3
sar
out
ror
mov
sbb
fimuls
ljmp
add
ljmp
fnstcw
clc
xorl
jne
pop
das
sbbl
test
add
xchg
sti
fdivs
in
lds
pop
aad
ficoms
cli
fldl
movsb
jns
push
or
cmp
int3
inc
cld
sub
xor
mov
cli
dec
scas
lods
shlb
out
push
insb
or
fnstcw
dec
dec
jb
es
idiv
mov
divl
int3
aam
pop
push
add
std
out
dec
cmp
int3
adc
insl
sub
shrb
inc
outsl
jmp
jge
push
push
jbe
sub
cwtl
xlat
jns
and
push
lret
mov
pop
cmc
mov
xchg
mov
dec
test
sahf
test
xlat
push
push
push
push
out
mul
jl
dec
fadd
shr
mov
std
bswap
jbe
call
int
jge
push
jp
add
sub
xchg
fdivrl
jge
push
or
mov
adc
mov
fldt
sub
cwtl
pusha
outsl
adc
lahf
jne
mov
mov
imul
fisubrs
jle
pushf
mov
addr16
add
add
sahf
fidivrl
add
fisubs
add
push
pop
add
jno
xlat
and
adc
ja
sbb
test
add
xchg
imul
dec
ja
fwait
push
ret
cmp
mov
pop
ja
jns
sub
push
fstpl
pop
je
inc
mov
mov
cmp
push
sbb
xchg
mov
or
insl
fimuls
cmp
xchg
arpl
leave
cmp
sub
dec
cmp
xchg
dec
fildll
pop
add
fldt
aas
pop
int
ficoml
testl
add
mov
xor
lock
in
js
scas
mov
push
adc
sbb
xchg
mov
adc
inc
cmp
mov
mov
rcll
loope
cmp
sti
dec
sub
push
sub
mov
sub
inc
mov
fidivs
mov
xchg
rcl
movsb
inc
pop
xchg
jle
std
add
testl
inc
fucomip
push
mov
loope
push
xor
imul
aad
rcl
out
test
pop
adc
dec
xchg
pop
mov
std
out
and
inc
fcmovne
mov
cmc
add
pop
sub
call
movsl
arpl
xor
mov
xor
or
pop
scas
aam
dec
push
mov
xor
sub
stos
jp
test
addr16
ret
lcall
dec
in
leave
movsb
or
jge
add
shrl
in
js
push
jne
scas
and
add
ja
xorl
push
mov
rorb
jmp
xor
sub
mov
es
or
sub
jbe
fwait
cmc
mov
nop
xor
lock
xlat
pop
das
gs
or
dec
inc
stos
inc
add
ljmp
xor
mov
or
mov
mov
loope
sub
xor
mov
loop
loop
in
adc
enter
push
dec
pop
adc
sub
push
cmp
mov
mov
and
push
inc
push
sti
addr16
push
xor
xchg
int
scas
xor
cmp
loope
lret
jno
daa
jae
jg
adc
fwait
repz
popa
cmp
mov
push
loopne
cltd
mov
xchg
and
inc
in
sub
ja
icebp
aas
scas
test
inc
xlat
xor
inc
addl
mov
xor
aaa
sti
pop
adc
cmp
stos
mov
jmp
fdivs
add
push
pop
pushf
out
sub
js
shrl
mov
inc
leave
imul
sbb
inc
popw
push
dec
ret
xorb
jmp
cmp
ret
mov
cltd
push
aam
xchg
cld
pop
repnz
cmp
dec
cmpsl
fldenv
test
or
mov
cmc
jnp
cmp
inc
push
iret
mov
jo
rorb
mov
ds
jecxz
and
push
or
mov
cld
sub
mov
add
xchg
xor
loope,pt
sahf
and
das
pop
rclb
aam
pusha
cli
popa
outsb
subl
lds
cmp
jnp
add
fisttps
or
jns
call
pop
xchg
mov
mov
xchg
dec
or
aam
pop
cmc
cmpsb
or
xor
jns
and
dec
sarl
movsb
mov
jecxz
dec
out
jl
xor
and
jno
loopne
inc
jge
inc
addb
fmul
jmp
in
fnstcw
push
mov
pop
orb
mov
int3
popf
ljmp
fnsetpm(287
lock
bound
sub
mov
leave
mov
scas
push
ja
dec
pop
mov
jl
adc
cmpsl
or
sbb
sub
push
cltd
xor
lcall
daa
cmc
push
dec
mov
pop
mov
shl
pushf
mov
daa
pop
int
aad
into
mov
stos
decb
or
mov
fistpl
jne
scas
jb
arpl
movsb
dec
ds
cmp
pop
mov
out
jne
mov
mov
and
inc
aam
pusha
jno
es
mov
iret
adc
xchg
rdpmc
iret
pop
add
cmpsb
add
and
cltd
addb
andb
inc
add
pop
jne
enter
inc
jle
scas
outsl
das
vxorps
cli
adc
inc
sub
fs
arpl
mov
add
sbb
loope
in
mov
repnz
pop
dec
mov
sub
inc
inc
mov
mov
pop
pop
jns
sbb
add
stos
push
or
div
mov
sahf
andl
cs
push
pop
stos
xchg
dec
sbb
inc
xchg
mov
add
idivl
pop
pop
ret
xorb
or
inc
fstps
cmpsb
push
push
mov
xlat
pop
popa
adc
ss
imul
jmp
rcrl
and
push
scas
cmc
pop
pushf
scas
arpl
std
mov
and
out
sbb
mov
pop
mov
jl
dec
call
mov
jne
out
xor
out
push
pusha
cmp
iret
xor
out
mov
movsl
outsl
pop
jnp
idivl
lea
dec
push
shl
add
jecxz
pop
in
pop
popa
or
xchg
mov
fwait
scas
stos
out
jp
testl
in
mov
into
jge
jb
test
icebp
sarb
sbb
mov
or
jmp
fwait
adc
lret
jecxz
in
imul
jo
pop
push
jo
pop
arpl
adc
scas
sub
xlat
sub
pop
jle
pop
xor
enter
cmp
jno
mov
std
leave
mov
lods
add
pusha
bound
dec
mov
decb
rclb
lret
pop
mov
fidivl
cmp
cmpsb
inc
jmp
cltd
cmp
jae
push
xor
fdivrl
sub
jl
insl
cli
iret
adc
cmp
pop
in
jl
add
popf
mov
dec
xlat
cmp
aaa
mov
pop
lods
movsb
imulb
rcrb
pop
imul
pop
arpl
lock
dec
nop
or
xchg
repnz
pop
das
es
rorl
data16
fucom
pushf
popa
mov
inc
adc
or
xchg
sub
pusha
sbb
loope
pushl
leave
xchg
xchg
std
jo
sub
imul
cmc
adc
mov
adc
arpl
pushf
fcoml
cmc
pop
lds
mov
dec
xacquire
loopne
stc
out
inc
std
fidivrs
movsb
dec
mov
mov
add
bound
pop
ja
jb
cmp
daa
and
out
cmp
lret
fidivrs
cmpsb
mov
jmp
jge
out
push
mov
dec
shll
lret
adc
in
push
xor
add
mov
sbb
lods
daa
dec
fidivrl
sub
insb
test
insl
lahf
pop
mov
insb
icebp
pop
lret
xchg
rclb
and
jmp
xor
cmp
inc
ret
mov
in
add
push
mov
lock
loope
jl
scas
arpl
or
outsb
push
js
test
mov
push
andl
jg
push
cli
dec
pop
hlt
mov
cwtl
loope
js
jecxz
sti
subl
push
xchg
adc
or
adc
test
sub
sbb
mov
shlb
mov
push
ret
or
je
scas
or
mov
or
xchg
or
shrl
lods
adc
sub
push
aam
loop
adcb
jnp
pop
mov
nop
je
xor
imul
sub
mov
or
sbb
inc
add
inc
outsb
in
pop
imulb
js
popa
pop
int
ret
lahf
jmp
fnsave
mov
sbb
sahf
lea
xor
movsb
sub
or
jns
mov
adc
adc
ds
cli
xchg
loope
stos
cmp
pop
lods
cmpsl
inc
rorb
aad
stc
aas
push
adc
pop
int3
add
icebp
sub
and
movsb
stc
fimuls
bound
movsb
ds
dec
movsb
jb
add
scas
or
mov
rclb
pop
out
repnz
fnstcw
pusha
mov
mov
sahf
das
mov
mov
nop
mov
sarb
xchg
lods
loope
inc
ret
pop
in
leave
scas
inc
push
sub
fiadds
shrl
shll
in
mov
call
ret
mov
xor
mov
adc
imulb
dec
xorb
pop
jno
jp
ds
adc
fsubrl
cmp
push
mov
jno
push
xorb
and
ja
ss
out
jl
mov
inc
mul
push
xor
repnz
adc
push
out
or
and
xchg
sbb
adc
std
cmp
arpl
push
pop
icebp
inc
lret
jae
fisubrs
das
jae
addl
xchg
ds
pop
xchg
push
jne
add
mov
xorb
inc
test
leave
add
mov
outsl
div
loop
shrb
lahf
test
pop
popl
xchg
mov
push
das
ds
jp
xor
outsl
loopne
int
fisttpl
jecxz
mov
sti
sbb
jo
sub
mov
add
call
addr16
jno
bound
cmpb
jne
scas
dec
ljmp
push
ret
adc
push
sbb
leave
nop
loop
xor
leave
insb
mov
in
adc
incb
and
xchg
push
push
adc
hlt
mov
divl
push
sbb
hlt
sub
movsl
shlb
daa
sub
jg
sbb
inc
pop
dec
cmp
inc
leave
cltd
in
and
inc
stos
ds
adc
inc
push
cmpl
inc
sti
xor
popf
cmp
pop
sti
iret
dec
aaa
xor
icebp
xor
or
cmp
jecxz
cmp
mov
sbb
add
jg
push
jne
inc
hlt
pop
inc
mov
sub
sbb
jmp
fisubrs
inc
iret
sub
aas
ljmp
fldt
push
into
pop
mov
sti
cld
pop
mov
mov
jo
lds
pop
in
adc
inc
imul
bound
mov
into
push
cmc
bound
sub
add
xor
lahf
push
push
mov
sbb
xchg
mov
jmp
fdivrs
add
jno
fisttpl
jl
or
out
inc
pop
cmp
aaa
push
sub
rclb
rcrl
divl
cs
sbb
in
in
inc
lods
lods
ljmp
sub
dec
out
movl
mov
push
pop
and
mov
cmpsl
rclb
icebp
shrb
and
ja
and
pop
iret
fsubr
outsl
inc
in
mov
adc
cmpsb
cmpsb
lods
imul
aad
movsl
das
push
sbb
mov
ss
push
hlt
hlt
subl
filds
xchg
add
xchg
cmp
mov
rorb
stos
jnp
in
cmpsb
xchg
addr16
popf
into
jge
or
mov
dec
cmp
imul
out
or
fnstsw
dec
jl
inc
psllq
fnstsw
push
stc
sbb
pop
nop
jnp
rcll
jns
jle
cltd
test
push
loope
cld
js
push
clc
out
fimuls
mov
filds
loopne
push
mov
push
daa
or
xor
ficoml
lret
add
mov
loope
js
imul
addr16
sbb
test
xchg
loop
pusha
sbb
dec
mov
xor
loop
cmpsl
js
lock
mov
push
aaa
mov
sub
and
les
int3
pop
mov
repz
dec
pop
jno
movsl
xchg
push
inc
popa
jg
mov
and
sarl
pop
imul
lret
sub
or
gs
push
cmp
xlat
mov
xor
sbb
data16
sbb
mov
cmp
xchg
bound
int3
jge
lcall
mov
cmp
adc
pop
rclb
xor
inc
mov
mov
int
orb
dec
out
fsubl
mov
cmpsb
lea
jp
bound
repnz
jge
out
andl
cld
ret
aam
and
sub
jge
push
xlat
mov
lret
push
or
lods
ljmp
mov
in
sub
int
out
fistl
es
xchg
xor
pop
test
cmp
mov
mov
dec
cmp
cmc
push
int3
jl
add
in
loop
roll
adc
iret
sub
insb
mov
or
jne
out
test
icebp
es
jbe
ret
shlb
imul
cmp
mov
cwtl
shlb
pushf
daa
test
jle
xchg
ret
push
add
add
in
and
aas
fcomip
out
or
sbb
int3
add
push
pop
add
xchg
inc
add
das
push
jp
icebp
fwait
cld
lock
imul
jge
mov
jl
popa
daa
insb
std
mov
insl
test
ljmp
jle
mov
test
mov
popf
mov
mov
dec
xor
cmpsl
jmp
dec
mov
cmc
imul
insb
mov
aaa
js
push
orl
xor
ficomps
adc
mov
jmp
push
lret
ljmp
test
pop
fsubl
lock
jne
mov
mov
jne
shr
mov
push
jle
ret
in
xchg
mov
adc
dec
outsl
mov
jns
cltd
js,pt
xor
lret
cmp
pop
inc
xor
insl
cmp
notrack
sti
push
add
outsb
lods
and
popf
pop
push
out
dec
mov
jnp
inc
adc
je
sahf
push
xor
jne
mov
scas
ja
sbb
cmp
call
adc
pavgw
inc
pop
lods
lods
xor
inc
lcall
repnz
stos
and
rcrl
int
daa
imul
fisubrs
adc
xchg
fxch
movsl
and
push
mov
sub
dec
daa
xchg
call
shl
divb
out
add
sub
cmpsb
pushf
and
push
in
pop
dec
cltd
outsb
jl
dec
push
mov
ret
adc
lret
sarb
loopne
pop
or
pop
mov
movsb
call
ds
mov
jl
add
and
xor
mov
inc
fwait
call
mov
jge
mov
or
pop
sarl
test
cwtl
mov
jbe
cmp
cmp
pusha
push
sub
cmpsb
lahf
and
inc
mov
mov
mov
lods
mov
xchg
sbb
mov
add
iret
sbb
inc
cli
std
scas
fstpl
sbb
jecxz
pop
xor
xchg
stos
outsb
pop
mov
xor
jmp
aas
jp
mov
mov
xchg
fidivl
push
punpckhbw
roll
lret
adc
cli
stos
aas
dec
lods
imul
add
jno
mov
shlb
xchg
xlat
mov
cmp
mov
inc
pop
cmpsb
pop
orb
sbb
add
sbb
popa
xorl
lods
pop
xchg
add
pop
mov
mov
jecxz
jmp
inc
cs
flds
shrb
cli
nop
pop
adc
cld
push
mov
imul
scas
lea
das
push
lret
jmp
dec
adc
sti
out
add
mov
xchg
jp
cmc
xchg
dec
bound
jle
lret
xlat
pushf
push
inc
xchg
pop
ficoml
cli
sbb
adc
mov
sahf
std
out
das
scas
popf
and
push
fcmovbe
shll
sub
mov
jl
pop
ficompl
xor
ret
adcb
jg
push
lods
aas
loope
lahf
push
mov
inc
dec
or
sub
cmp
dec
lock
push
ljmp
push
or
fs
and
flds
loope
xorb
orb
cld
inc
in
pop
aad
and
sarl
inc
je
pop
dec
dec
xor
dec
sub
daa
jo
jb
mov
push
push
and
mov
dec
adc
fwait
and
repnz
cmpsl
inc
bound
gs
cmc
aad
push
cmpsl
xchg
lods
xor
pop
shrl
or
cmp
fwait
lea
push
adc
scas
and
fwait
lods
movzwl
and
mov
testl
mov
xchg
cli
or
cmp
jbe
pop
push
or
bndstx
sub
mov
fidivrl
call
cwtl
into
das
dec
xor
add
pop
cmc
mov
cmp
enter
xor
leave
pop
xchg
add
outsb
mov
pop
cmp
mov
dec
cs
push
dec
adc
daa
mov
fprem
push
xor
ret
rorb
dec
cmpsl
test
xchg
mov
fmulp
sbb
xchg
lods
jle
xchg
das
add
or
gs
cs
mov
cmp
pop
mov
pop
xor
push
adc
add
inc
cmpl
cmc
or
popl
inc
add
push
stc
pop
dec
and
sti
jns
lock
test
xchg
push
movsb
dec
xchg
jecxz
push
sarl
mov
lock
push
mov
fistpl
ret
outsb
repnz
cmpb
jg
push
xor
stos
fadd
ret
clc
jle
int
test
fisubrs
repnz
inc
out
inc
pushf
xchg
sbb
or
inc
and
out
add
push
lods
pop
inc
or
cmp
lods
fbld
xchg
pop
or
aas
mov
insb
mov
faddl
js
sub
inc
push
push
or
aad
push
cmp
xor
js
shl
hlt
xor
xor
test
inc
adc
jl
or
sbb
lret
arpl
movsl
mov
xchg
lret
xor
sbb
shrb
xchg
shr
pop
xchg
sbb
stos
xor
setge
cwtl
dec
jmp
ds
outsb
js
stos
pop
cmp
xchg
adc
mov
andl
cmc
cs
sub
xor
ror
sti
jo
dec
jae
mov
shll
icebp
das
xlat
into
imul
in
aad
dec
push
les
lret
in
pop
dec
icebp
movsb
js
or
jne
push
add
mov
jmp
adc
jb
jmp
push
fidivs
pop
lret
into
mov
adc
mov
daa
jne
and
jbe
jmp
test
jmp
das
clc
jbe
mov
mov
mov
imul
inc
adc
rcrb
icebp
lock
int
arpl
nop
sbb
mov
out
inc
mov
roll
pop
mov
or
movsb
out
inc
push
jne
imul
jp
lcall
idivl
push
cld
fldt
push
push
int3
fdivl
movsl
sahf
lret
or
add
push
cmp
lret
mov
dec
andl
jp
mov
mov
mov
mov
inc
out
test
or
add
out
xchg
icebp
mov
out
aad
adc
out
add
push
pop
add
push
movsb
sub
sbb
mov
jmp
loopne
test
out
lods
jnp
bound
or
stc
dec
clc
scas
stc
add
dec
push
and
push
sub
mov
pop
nop
lods
fimuls
xchg
lret
jnp
cmp
cmp
adcb
sbb
adc
insb
nop
hlt
and
sahf
imul
mov
outsb
loopne,pt
xchg
add
xchg
mov
adc
clc
lods
mov
fisttps
push
pop
jnp
push
adc
sub
xchg
mov
add
shlb
fistpl
jae
adc
popa
pop
repz
jle
dec
lods
aaa
scas
dec
insb
out
scas
jp
fwait
into
loopne
adc
sti
pop
jno
lcall
jle
dec
mov
stos
sub
inc
lret
or
std
sub
sbb
cmp
inc
jbe
lret
add
sbb
or
xor
xor
mov
repnz
pop
mov
dec
into
mov
jae
inc
and
aad
mov
push
sahf
mov
ret
dec
xchg
sub
insl
jne
mov
xchg
pop
xor
lretw
jo
std
xchg
push
lods
fcom
pop
std
test
xor
lock
sbb
mov
in
sub
add
ret
fistpll
popf
push
inc
dec
stc
rorb
jbe
lods
test
xor
enter
inc
sbb
mov
and
hlt
mov
cs
dec
dec
xchg
aam
lds
jne
cmp
insb
repnz
cmp
hlt
loopne
mov
mov
frstpm(287
sub
mov
lahf
call
in
cwtl
movsb
adc
in
xchg
pop
jnp
int3
adc
shr
add
mov
iret
dec
lcall
mov
scas
push
inc
sub
lret
mov
mov
jl
pop
sarl
add
mov
repz
stos
aaa
into
push
pop
cwtl
loop
adc
inc
js
js
jl
push
in
pushw
push
sbbb
lock
fnstsw
jns
xor
inc
sub
inc
mov
rorb
sub
push
mov
dec
jmp
xor
xchg
out
jg
cld
sbb
dec
push
lret
xchg
jo
not
mov
popa
jae
pop
add
jnp
sti
cmpsb
stos
push
mov
jge
jg
iret
sub
ret
mov
or
nop
add
jecxz
notl
arpl
insl
cmp
mov
jp
mov
sub
jo
pusha
sbb
pop
xchg
mov
insb
movsl
jns
xchg
jmp
gs
jnp
mov
nop
push
sbbb
imull
xor
add
mov
subb
cmp
adc
pop
pushf
imul
and
fst
or
dec
aam
dec
xchg
and
lret
in
mov
ja
mov
dec
dec
dec
push
lods
lahf
rorl
adc
mov
hlt
test
pop
bnd
xchg
xor
jmp
enter
or
je
adc
pusha
jp
push
fs
divl
lcall
mov
mov
mov
mov
add
je
cmp
pop
sbb
mov
lods
addb
jne
iret
movsb
jl
insb
add
sbb
mov
divb
inc
bound
mov
fildll
jbe
and
adc
fwait
mov
out
inc
mov
data16
mov
ret
addr16
js
xchg
repz
lcall
cs
sbb
mov
fdivs
andb
arpl
popa
mov
into
pop
cli
in
cmp
add
lahf
xor
cwtl
fsubrp
xor
or
leave
xchg
jnp
adc
lret
push
jl
popa
les
arpl
stc
sbb
aaa
xchg
stos
aad
aaa
mov
lock
ret
subb
pop
ret
out
clc
or
arpl
mov
js
out
bts
jns
push
lret
stos
ficomps
push
ljmp
scas
imul
mov
test
cmp
adc
test
fildl
fs
mov
dec
pushf
insl
inc
out
sbb
sub
inc
gs
push
movsl
jge
mov
add
testb
jb
orl
ror
push
data16
mov
loop
fwait
jge
mov
inc
setae
mov
xchg
mov
dec
bound
paddusw
or
lea
call
lahf
pop
lds
xchg
repnz
inc
addl
add
xchg
jo
mov
sarb
or
sbb
mov
stos
sbb
sub
aad
scas
gs
sbb
outsl
lods
ret
push
inc
inc
movsl
jno
mov
lock
cmp
pop
iret
add
pusha
push
ds
daa
xchg
jle
stc
loop
jne
adc
cmc
pop
popa
xchg
subb
call
inc
pop
js
notl
push
lret
test
cmc
xchg
cmpsl
stos
jmp
bound
and
fsubs
sub
scas
sub
int
xchg
pushl
pop
sub
xchg
xchg
xchg
pushf
sub
daa
out
int
xlat
jp
and
rcr
xorl
loopne
mov
out
mov
mov
add
fisttpll
mov
mov
push
pop
sahf
int3
push
adc
bound
xor
fld
xchg
cmp
and
or
aam
insb
into
out
adc
scas
outsl
fsub
imul
aas
lret
sti
imul
jg
data16
push
out
mov
mov
jbe
fwait
push
add
outsl
jne
fwait
sarl
mov
mov
fwait
aam
xchg
ss
xlat
call
shrb
mov
ds
xchg
add
xchg
out
shl
testb
cli
sbb
nop
daa
in
test
mov
pusha
mov
xchg
test
orl
dec
push
movsl
inc
cmp
push
mov
mov
pop
rorb
hlt
rclb
aad
mov
jmp
addr16
icebp
and
xor
push
stos
cli
dec
dec
xchg
fsts
xchg
or
jae
arpl
adc
jns
loopne
into
lea
sbb
js
pop
adc
movsl
rcrb
jbe
dec
jbe
ja
sub
lret
xor
or
add
sti
add
pusha
in
inc
fistl
scas
into
mov
xlat
mov
rcrb
cmp
testb
push
pop
add
pop
gs
xor
loopne
xor
aam
je
es
bound
ljmp
pop
cmp
les
arpl
sbb
shlb
and
jp
ljmp
aas
cmp
test
cmp
sub
pop
outsb
xchg
fsubp
out
cmp
pop
inc
inc
jecxz
je
lods
imul
push
cmp
faddl
inc
arpl
jecxz
dec
xchg
faddp
addb
jb
stc
test
dec
daa
sub
dec
adc
call
test
enter
jns
std
sub
mov
adc
mov
data16
mov
outsb
in
xchg
dec
xor
shl
sbb
or
data16
cmp
stc
mov
dec
fcoml
lock
arpl
fisttpl
sub
xchg
push
pop
jmp
popf
sarb
scas
ret
and
inc
and
out
xor
or
mov
imul
cmp
fnsave
sbb
add
cmp
lds
dec
add
xor
sub
dec
mov
cmp
or
cmpsb
scas
out
out
dec
and
xlat
cmp
jno
cs
push
push
jecxz
inc
sahf
in
mov
shrl
push
jge
xchg
xor
xor
sub
or
aam
sub
daa
jg
pop
nop
jno
adc
into
adc
xlat
pop
dec
xor
and
out
sub
test
mov
xchg
addr16
pop
adc
adc
inc
or
sar
adc
ja
jne
jnp
cmpsb
sbb
jns
jb
into
bound
jbe
addl
out
ss
jge
dec
popf
in
and
mov
add
js
aas
out
mov
inc
jb
mov
inc
mov
addr16
out
stos
ret
pop
mov
and
jp
lock
lea
xchg
sbb
ret
out
push
in
repnz
call
mov
movsb
push
jb
cmc
ljmp
stos
inc
popa
ret
push
or
inc
nop
mov
mov
call
test
mov
out
psllq
jmp
dec
fbld
mov
mov
cmc
enter
dec
push
dec
cmc
ficomps
sti
inc
xchg
imul
in
fbld
dec
dec
cmp
mov
call
leave
repz
xor
out
pusha
adc
fimuls
pop
mov
sub
test
cmp
mov
lock
dec
test
mov
jbe
jge
mov
insb
jno
pop
aaa
jl
fimuls
mov
lret
mov
adc
jns
fwait
push
inc
push
jbe
pop
jmp
dec
lcall
inc
aaa
push
adc
adc
enter
out
lds
sti
jle
je
dec
es
dec
add
rcl
mov
pop
mov
lods
add
dec
mov
enter
xchg
xchg
nop
push
fldl
inc
dec
jg
cmpsb
jae
out
je
cmc
test
mov
pop
sti
mov
adc
inc
dec
pop
testb
das
es
fldl
dec
pop
rcll
pop
mov
jne
jg
rcll
cmp
mov
pop
xor
pop
pusha
lods
mov
mov
adc
popa
jp
add
imul
imul
dec
test
imul
cmp
in
mov
js
sahf
out
cltd
cs
fistpll
test
dec
mov
dec
test
pop
outsl
popa
lock
push
mov
sti
out
xchg
add
sahf
push
out
add
in
jno
rcrl
xchg
fldt
shlb
dec
inc
bnd
fcoms
inc
cmp
push
jmp
jne
and
inc
and
jno
or
ss
lret
pop
mov
push
mov
fimuls
ret
pop
pop
mov
sub
out
enter
leave
loope
adc
mov
dec
xlat
mov
xor
push
add
bnd
int
test
sarl
popl
je
ss
adc
inc
cmp
shll
mov
in
lock
insl
repz
and
arpl
inc
add
insl
jns
lret
dec
pop
adc
repz
lret
inc
pop
les
add
shlb
mov
das
out
pop
pop
push
stc
xchg
imul
dec
imul
xorb
xor
hlt
jb
mov
inc
lea
sbb
scas
call
pop
jbe
cmpsl
add
orb
aam
subb
xor
fiaddl
lret
push
js
out
xchg
aam
fs
and
idivl
mov
xor
jg
adc
pop
cmpb
xchg
nop
pop
ret
scas
ja
test
mov
andb
xor
clc
cmp
ss
in
jle
add
sub
or
cmp
pop
or
sbb
jns
xor
jge
lcall
push
loop
push
cs
imul
leave
mov
sub
push
call
mov
sub
xchg
imul
int3
add
mov
ja
adc
lds
sbb
enter
addr16
mov
cmpb
mov
stc
pusha
dec
inc
sbb
aam
push
cmp
add
scas
sbb
adcl
fsubrl
dec
fisubrl
xor
mov
pop
into
push
test
adc
gs
lcall
or
sbb
jb
pop
icebp
popa
jb
imul
mov
cmc
jg
dec
aam
push
mov
loope
sbb
adc
jecxz
lcall
lret
jne
push
stos
test
js
cwtl
push
pop
rclb
adc
mov
mov
pop
mov
cmp
sbb
lock
aas
les
push
fsubs
scas
ja
sub
jl
sub
jg
repnz
push
xor
push
out
mov
xorl
push
sbb
adc
mov
inc
xor
pushf
movsb
insl
fwait
loope
jno
sbb
lret
sub
stos
xor
out
fs
sarb
xor
out
sub
pop
loope
cmc
xorb
shl
imul
adc
mov
mov
and
and
mov
push
gs
rcll
adc
and
repz
movsb
adc
movsb
arpl
add
pop
add
stos
stc
push
cltd
aam
repz
iret
xor
pusha
out
lds
in
cli
mov
scas
mov
pop
aam
stos
mov
cmc
cmp
cmpsl
insl
cwtl
push
and
dec
movsl
push
lds
loope
cmp
gs
pop
jmp
adc
xchg
dec
adc
out
insb
and
cmp
lds
push
in
pop
push
dec
sub
add
inc
pop
jecxz
daa
jmp
jecxz
pop
ss
out
idivb
int3
rolb
lret
jno
push
loop
ret
lcall
les
xchg
fisubrs
cmpsb
or
hlt
jge
xchg
out
lds
push
pusha
repz
scas
jns
mov
imul
jne
xor
in
xchg
pop
sahf
std
pusha
mov
shrl
adc
mov
adc
and
loopne
inc
loope
cmp
lds
in
das
adc
hlt
mov
add
push
stos
mov
or
mov
addr16
pop
sahf
aaa
lds
xchg
fdivp
xor
mull
mov
arpl
aam
shlb
mov
aam
fcmovbe
int3
mov
sub
das
mov
fwait
test
or
enter
adc
sbb
inc
jo
jnp
fisttpl
int
jge
mov
loopne
aas
ja
cs
mov
adc
daa
cli
jb
push
xor
push
sub
adc
clc
jnp
std
xor
mov
scas
mov
rsm
mov
mov
cld
mov
and
scas
xchg
sahf
push
mov
in
js
repz
push
loope
mov
sub
jmp
sahf
cmpsb
popf
shr
cmp
sbb
adc
cmp
mov
lret
insb
push
mov
mov
or
mov
or
test
jmp
add
icebp
daa
jb
sub
fbld
ficomps
pop
sub
sbb
push
jnp
sub
ret
sub
mov
add
xchg
xchg
and
or
fwait
pushf
mulb
pop
movsl
mov
mov
dec
in
mov
dec
mov
xchg
mov
inc
lcall
mov
push
push
mov
call
and
shrl
jmp
jg
jns
mov
jl
sub
shlb
cwtl
cmp
push
sub
divl
gs
mov
aad
das
data16
mov
jle
jns
rcl
and
inc
adc
xchg
in
or
sub
xor
leave
test
std
mov
dec
xchg
int
pop
or
daa
jmp
rcl
inc
mov
stos
aam
xchg
cli
jecxz
outsl
out
sbb
inc
pop
inc
fcoms
cmp
into
ds
sub
inc
pop
pop
adc
movsl
jnp
push
jbe
lods
fdiv
and
frstor
decl
and
imul
cmpsb
cmp
sub
add
xor
or
leave
clc
xor
jecxz
push
pop
pop
add
cli
insl
mov
outsb
leave
jo
rol
out
repz
sub
xchg
dec
jmp
aad
imul
shll
int3
shlb
enter
stos
add
adc
popa
outsl
pop
lret
iret
mov
sbb
jl
shrl
mov
lret
pop
and
leave
dec
mov
push
pop
mov
pop
sub
sub
jns
push
fnstenv
dec
adc
outsb
mov
bound
test
lods
sub
xchg
adc
xchg
cmp
cmpsb
hlt
js
cs
or
pop
testl
outsb
add
add
sbb
or
and
jnp
orb
mov
addl
out
fwait
jbe
jl
inc
mov
add
scas
dec
xchg
lahf
bound
aaa
aaa
out
adc
shlb
insl
xor
sbb
bound
xchg
adc
xorb
adc
aad
loope
dec
lods
xlat
cmpsb
mov
ficompl
scas
mov
mov
push
out
mov
push
pushf
sub
popf
popa
dec
rcr
mov
scas
movsl
dec
jb
mov
pop
test
dec
jmp
pop
test
stos
or
test
sbb
dec
sub
adc
or
xchg
lds
xor
dec
jecxz
push
lock
bound
sti
push
inc
cli
pop
push
iret
sbb
mov
cmpsl
jo
push
pop
xchg
adc
test
fldl
xor
nop
test
pop
stos
ljmp
movsl
sahf
ds
push
jmp
xor
pop
xchg
lret
inc
jg
sbb
mov
inc
lahf
cmpsl
rcr
cld
push
jbe
insl
mov
out
shll
outsl
add
inc
inc
lret
test
ds
cli
xchg
rcll
jge
or
add
pushf
adcb
sarb
in
and
jne
dec
mov
xchg
inc
int3
mov
xchg
ds
xor
insb
pushf
push
inc
popf
iret
mov
movsl
sarb
fsts
popf
pop
mov
test
adc
and
or
in
lret
push
push
xor
popa
or
push
sub
adc
mov
adc
jecxz
dec
cmp
pop
fldl2t
out
repz
insb
ret
fwait
mov
mov
or
add
cmc
aam
pop
and
mov
repnz
repz
subb
pop
int3
inc
data16
xlat
dec
push
fisttps
fsubl
pop
pop
xchg
ljmp
or
les
jno
lock
or
mov
out
jnp
mov
xor
fcompl
xchg
fnstcw
jae
mov
fwait
push
stc
loope
orl
fcompl
xchg
xor
leave
mov
arpl
fwait
push
adc
dec
mov
pop
scas
adc
mov
cmp
push
adc
jbe
in
pusha
pop
lret
xor
orb
jecxz
fimuls
mov
daa
mov
cli
and
pop
sub
iret
faddl
outsb
stos
scas
test
aaa
test
call
add
sub
sti
or
bound
stc
test
cmpsl
jne
push
lods
xchg
jnp
stos
pop
ret
out
dec
jno
jo
push
das
jb
inc
inc
and
and
lahf
jl
or
jnp
mov
outsl
inc
jl
jg,pt
sub
jb
jnp
push
insl
ja
sahf
mov
mov
sub
xor
jge
add
add
loopne
mov
aas
stos
in
and
loopne
mov
add
push
pop
add
ds
cmpsb
push
or
xor
and
aas
xchg
xchg
xor
adc
inc
sbb
cltd
lea
jns
leave
push
outsl
sub
mov
insl
push
lahf
mov
sub
or
jecxz
xchg
jl
jmp
daa
push
sti
and
insl
mov
and
pop
add
scas
out
cmp
imul
pop
adc
push
into
fisubrl
shlb
adc
sub
data16
cmp
dec
jns
xchg
jno
iret
enter
inc
mov
push
and
xchg
ja
adc
jnp
ljmp
pop
cli
or
jecxz
arpl
mov
fdivl
scas
jae
out
adc
push
aam
lcall
and
push
icebp
cmp
out
iret
in
iret
jo
in
call
shrb
cmc
sti
mov
into
fdivr
ja
adc
mov
js
lahf
test
xor
xor
sbb
xchg
daa
sbb
mov
fmull
mov
cmp
mov
rclb
inc
sbb
mov
xchg
mov
or
ficoms
mov
mov
jb
sbb
mov
xlat
cwtl
xor
cmp
add
gs
fcoml
test
es
cs
pop
scas
or
inc
jbe
out
push
push
jge
and
sub
and
test
adc
and
repz
or
adc
fstpt
and
adc
dec
addr16
jge
xorl
aas
mov
mov
adc
in
sub
push
pop
lret
jl
xchg
and
sub
in
push
into
popf
mov
sub
leave
lcall
push
sbb
ja
notb
ds
out
mov
fbstp
fs
add
sar
sarb
adc
roll
addl
dec
lds
data16
dec
in
sbb
mov
into
push
mov
dec
fwait
aad
stos
or
lods
ss
fbstp
mov
in
cwtl
ss
jae
mov
add
imul
and
mov
inc
adc
int
enter
sbb
fiadds
dec
jne
pop
fs
xchg
dec
push
shlb
and
decb
inc
or
push
lods
and
ret
add
cmp
pushl
hlt
out
enter
sbb
std
jge
pop
out
aam
push
lahf
js
gs
inc
lret
cld
xchg
addr16
inc
daa
jp
push
iret
pop
lock
push
adc
lock
sub
addr16
mov
hlt
jns
inc
mov
cmp
jecxz
shlb
sbb
push
xor
cmp
test
adc
jbe
in
xchg
and
std
sbb
outsl
fsts
pop
sarb
pop
mov
mov
push
rorb
int
ret
adc
imul
and
lea
and
fiadds
or
xor
mov
aaa
das
sbb
mov
inc
repnz
enter
ljmp
mov
sub
stos
movsb
sti
jmp
popa
scas
fnstsw
ds
inc
pop
xchg
jne
xchg
outsb
lret
push
ja
lods
and
or
aad
dec
sahf
cld
in
push
pop
ja
pop
xchg
lret
xchg
int
outsl
push
mov
adc
sahf
mov
inc
mov
cmp
mov
and
test
push
push
popa
push
sahf
outsb
repz
push
pop
sahf
dec
leave
out
cmp
cmp
jno
rcl
cmp
out
and
push
jecxz
idivl
push
hlt
sbb
jae
mov
andb
in
cltd
test
outsb
mov
incb
int
cmpsb
mov
cltd
add
mov
scas
jo
mov
iret
stos
or
mov
icebp
jo
lcall
rcr
gs
sbb
int3
imul
cmc
xor
pop
imul
push
mov
outsl
subb
cli
pop
loop
jne
lock
dec
dec
lock
add
inc
lods
out
pop
xchg
shlb
inc
pop
dec
enter
div
pushw
xchg
xchg
mov
inc
repnz
daa
xchg
incl
dec
jle
stos
loope
dec
mov
adc
and
xchg
xor
rclb
sar
xor
push
repz
sbb
int
cmp
ja
out
in
int
mov
lret
xchg
clc
cltd
dec
dec
inc
push
xchg
ss
cld
jns
or
lock
insb
inc
mov
adc
ret
xor
sti
mov
jbe
outsb
xor
movsb
fdivl
inc
inc
sub
dec
or
lods
xchg
mov
ss
cmp
hlt
ljmp
stos
pop
or
call
rcll
pop
jo
lods
mov
pop
shrl
pop
cmpsl
into
cmpsl
jno
xchg
mov
scas
sbbl
daa
test
mov
popa
out
daa
lods
movsb
dec
mov
push
cmp
cwtl
xchg
sti
pop
lds
lds
xchg
sbbl
and
out
rorl
aam
or
pop
sub
ret
cwtl
mov
push
call
movsb
push
scas
lods
inc
imul
or
das
xchg
add
xchg
mov
pop
repz
lods
push
xchg
lods
stos
ficomps
ss
mov
jecxz
rorl
js
stc
xchg
cmp
xchg
inc
inc
xchg
mov
scas
jmp
in
dec
adc
in
std
push
sub
ret
inc
and
popa
mov
sub
iret
mov
adc
jno
mov
mov
mov
fnsave
popf
dec
or
loope
adc
mov
mov
outsl
pop
sarl
lcall
jl
sub
mov
sub
and
xlat
movsl
lds
sti
enter
pushf
cld
adc
fsubs
inc
add
adc
add
xchg
jge
push
js
arpl
mov
mov
mov
shrb
lods
aaa
outsb
jg
or
xchg
test
fs
adc
mov
push
movsb
push
imul
sarb
lea
pop
mov
in
dec
jle
orb
mov
ret
testb
xor
xor
icebp
xor
cmp
cmp
mov
pop
jnp
bnd
cmp
xor
jo
hlt
je
xchg
scas
pop
je
in
sub
les
dec
nop
clc
lret
test
adc
adc
mov
cli
cmp
mov
mov
add
jp
mov
rorl
pop
sti
insl
mov
xchg
ret
test
sub
inc
mov
and
stc
imul
xsha256
cmpsb
push
dec
push
push
unpcklps
das
paddsb
inc
dec
ret
inc
sarb
jge
loope
lods
xor
and
shl
repnz
in
add
rclb
in
test
mov
repnz
bound
ret
xchg
mov
xorl
insb
pop
sti
jo
pop
test
ljmp
add
dec
cmc
sbb
in
out
clc
dec
movsb
pusha
push
outsb
inc
pusha
push
push
shrl
fistpl
adc
jg
mov
cmpb
popa
test
popf
mov
ret
push
test
cmp
je
imul
push
roll
icebp
mov
mov
mul
inc
mov
cmp
add
push
mov
cmp
stos
ret
daa
rcrb
out
repz
jnp
dec
push
cld
iret
mov
inc
imul
mov
test
mov
inc
insl
mov
ret
dec
cmpsb
xchg
xchg
imul
dec
or
enter
mov
mov
cld
xchg
pushl
xchg
cs
iret
icebp
je
lods
pop
pop
enter
xchg
jae
cmp
push
xor
adc
ss
scas
inc
jns
test
in
popa
jne
or
and
mov
or
stos
into
rcrl
lret
jmp
sub
scas
add
pop
das
push
enter
loopne
mov
arpl
fsubr
inc
fdivr
fisttpl
push
sahf
clc
xchg
stc
movsb
xchg
push
add
mov
push
mov
push
cmp
outsl
imul
imul
push
aas
mov
dec
or
push
ret
loopne
aas
pop
mull
mov
dec
xor
push
aam
daa
mov
cmp
sub
jle
out
jb
and
sub
mov
test
pop
xor
icebp
mov
int3
jno
rorl
mov
sub
pop
adc
push
or
stc
js
imul
imull
test
sub
push
pop
stos
pop
adc
iret
jo
movsb
sbb
dec
daa
lods
fisttpll
out
add
sub
sub
movsl
push
add
pop
sbb
jae
pop
dec
push
pop
dec
popa
push
pusha
aas
dec
movsb
or
xchg
adc
push
xchg
add
fistl
ret
pop
xor
aad
xor
jle
xor
inc
and
inc
jl
inc
out
lret
sub
push
pushf
adc
js
and
test
cmp
iret
into
inc
or
mov
sbb
push
stos
movsl
inc
pop
cli
mov
dec
jno
cmp
inc
or
push
test
nop
push
movsb
rolb
mov
lcall
sbb
and
pop
cmc
movsl
test
adc
scas
out
or
loop
stc
sarl
pop
sbb
cltd
lret
imul
mov
mov
out
in
add
subl
inc
pop
enter
xchg
adc
lock
imul
dec
lret
shlb
aas
dec
or
jecxz
lret
fsubrl
dec
ret
sbb
out
xor
neg
out
test
shr
loopne
lret
dec
pop
scas
popf
lea
stos
sbb
add
push
xchg
cld
add
call
es
xchg
cmpb
push
hlt
sbb
ljmp
jle
sub
cmp
daa
pop
fdiv
stos
cmpsb
pop
sub
mov
sbb
cmp
outsb
out
bswap
sub
cmp
mov
jl
popa
and
sti
movsb
mov
xor
test
xor
xor
cld
inc
mov
imulb
pop
fwait
iret
nop
cmpsl
lcall
shrl
loope
adc
loope
out
daa
stc
pop
lock
pop
inc
fdivs
ljmp
jmp
xor
movsb
mov
add
pusha
out
imul
mov
dec
xchg
sub
fcoms
in
mov
mov
push
or
lock
movsl
clc
or
imul
cmp
xchg
dec
leave
sub
fbld
arpl
sbb
aas
sub
and
add
sbb
lods
adc
in
les
xchg
sbb
push
jp
pop
or
adc
fbld
xor
mov
cmp
fildl
movsl
pusha
pop
xor
push
cwtl
out
mov
xor
adcb
mov
cltd
divb
inc
xchg
xor
or
out
cmp
pop
data16
sbb
lods
add
incl
je
js
popa
push
inc
hlt
pop
push
fs
outsb
or
pop
pop
jl
sub
lret
stos
enter
enter
pop
mov
sbb
add
lods
mov
xchg
xchg
mov
mov
ja
mov
and
fcmovnu
aas
test
pop
pop
ret
mov
xchg
lcall
mov
es
sub
xchg
insb
in
add
dec
fdivrl
add
lret
jg
jne
lcall
imul
nop
xchg
dec
call
inc
xlat
iret
adc
test
ficomps
adc
sti
and
je
ja
dec
leave
sbb
push
cltd
mov
insb
ss
mov
sbb
mov
sbb
xchg
mov
push
fnstsw
push
rorl
dec
imul
xor
in
jge
xchg
inc
or
adc
jecxz
enter
pop
mov
push
orb
or
out
xchg
pushf
inc
mov
clts
jns
call
aas
cmp
add
addb
mulb
rorl
or
iret
test
insb
popf
push
mov
fldl2e
lcall
fwait
push
xor
mov
sbb
mov
aas
push
push
std
adc
add
jnp
sbb
into
rcrb
and
add
push
mov
jg
out
ljmp
xor
dec
push
ret
pop
cmp
shll
jl
int
xchg
fsubs
cmp
scas
mov
mov
insl
mov
iret
mov
cmpsb
jmp
jno
xchg
and
xchg
push
add
push
add
inc
and
cltd
jb
rcrl
sbb
xor
xor
cli
popf
test
cmpsb
and
push
insl
arpl
jbe
lret
xor
loop
roll
orb
inc
mov
xchg
mov
or
add
scas
xor
or
mov
inc
xor
sbb
dec
dec
pop
and
add
add
aas
pop
push
jb
stc
sbbl
add
pop
add
xor
xor
subb
les
pop
pop
mov
push
xchg
dec
or
aam
xchg
lcall
fiaddl
cltd
inc
arpl
pop
cmp
and
sub
sbb
lea
and
pop
jecxz
movsl
testb
inc
cwtl
aad
test
inc
bound
adc
inc
mov
inc
fxch
cmp
faddl
scas
sbb
test
sub
push
xchg
insb
vmovlpd
cmp
inc
jne
mov
dec
or
call
push
add
movl
adc
ficompl
or
xor
lcall
test
hlt
pop
sbb
stos
sahf
movsl
leave
push
and
dec
and
jns
outsb
mov
add
rorl
mov
add
and
roll
enter
aam
or
popa
aam
in
insl
jne
xor
push
std
out
push
icebp
sbb
in
mov
stos
dec
sti
shll
das
adc
scas
ljmp
scas
in
adc
adc
aaa
lock
lahf
ja
fs
pop
inc
xchg
pop
pop
pop
rcr
sub
fildl
dec
aaa
add
dec
xchg
stc
in
rcl
and
popa
xchg
stos
out
sub
inc
and
push
push
and
or
loop
push
inc
jle
aas
inc
call
gs
sub
mov
inc
push
mov
vcvtss2sd
iret
sbb
cmp
xor
push
fildl
xor
inc
ds
add
in
leave
hlt
push
jo
adc
sub
fwait
aaa
sar
std
test
ljmp
out
in
xchg
hlt
jbe
jmp
in
mov
enter
pop
adc
mov
or
fldt
fwait
je
mov
dec
inc
mov
stos
adc
mov
dec
cmp
repz
mov
out
push
mov
aas
fwait
cmpsl
push
and
mov
ljmp
shlb
and
sar
cmp
imul
lahf
fists
mov
and
dec
fimull
inc
cwtl
lock
jmp
pusha
jns
pop
bndstx
sub
sub
pop
push
in
jae
push
mov
es
inc
bound
push
xchg
inc
pop
xorb
jmp
lods
leave
add
popa
pushf
cli
mov
xor
and
push
push
mov
adc
xlat
sub
scas
in
fisubl
sbb
xchg
mov
dec
xchg
js
adc
adc
loopne
adc
ljmp
sti
das
ret
std
loopne
loope
mov
cmp
js
pushf
lods
sbb
cmpsl
sbb
mov
ljmp
lcall
xchg
imul
push
fwait
mov
arpl
lahf
ss
dec
int3
dec
xor
imul
into
cmp
adc
call
and
test
push
xchg
inc
xchg
push
fildl
xchg
outsl
loopne
outsl
inc
jb
outsl
xchg
shrl
jno
and
pusha
push
xor
mov
push
jbe
sbb
sbb
stos
movsl
sub
repnz
inc
negb
insb
daa
test
xchg
xorb
das
jns
es
lds
iret
repnz
jne
and
mov
adc
dec
sub
js
inc
ljmp
sarl
pop
ja
scas
pusha
repnz
ret
test
xor
adc
into
jb
dec
orb
sahf
xorl
push
sahf
icebp
lds
push
sub
or
mov
push
fcoms
pop
outsl
cli
jns
xor
inc
scas
leave
sahf
pop
addr16
xchg
pop
mov
mov
xor
ja,pn
sub
mov
mov
cmp
popf
or
loope
jns
dec
push
rcrb
push
xchg
ror
movsb
push
adc
dec
adc
clc
out
pushf
sbb
sbb
ljmp
inc
push
int3
out
lds
out
add
add
dec
out
cmp
inc
inc
loope
xlat
sbb
xor
mov
inc
mov
mov
or
push
jmp
inc
es
ret
mov
fdivrl
push
jb
insb
in
sub
cmp
mov
daa
dec
sbb
shrl
lea
and
std
pop
out
cmovg
and
mov
cmc
adc
mov
jns
outsl
cli
xor
pop
les
inc
popl
pop
and
xchg
not
cmp
sbb
jne
mov
mov
mov
jae
or
mov
sbb
inc
arpl
addr16
les
ss
push
clc
rorl
pop
mov
push
in
addl
notl
movsb
or
jo
ljmp
ficoml
push
adcl
dec
cmpsl
lret
lock
inc
adc
imul
mov
mov
mov
lock
cmp
imul
push
ds
fistpll
lahf
call
sub
scas
test
cmp
jmp
mov
mov
sarb
inc
and
jle
jle
aas
aam
hlt
xchg
out
adc
dec
sub
cmp
mov
jo
fwait
push
sbb
xor
jecxz
jmp
jle
mov
popf
mov
pop
mov
das
mov
in
jge
xchg
cli
shrl
jmp
gs
insl
mov
cmp
aas
adc
cli
jmp
lods
xorb
sbb
sub
bound
pop
sti
jg
jns
cmpsl
xchg
fs
mov
mov
inc
stc
aam
dec
jg
pop
push
xchg
or
aam
mov
scas
jge
jp
out
cmpsb
addr16
mov
fldz
loopne
fwait
cmpsl
jae
fisttpll
xchg
lea
and
cmp
bound
fninit
ret
or
call
out
int
or
mov
js
jns
or
push
ret
mov
mov
push
int
leave
sbb
int3
jl
dec
shl
jl
ds
jns
mov
cwtl
inc
loop
xor
push
rsqrtps
add
cli
mov
cli
hlt
xlat
lods
mov
and
lods
pop
movsl
sub
or
mov
add
add
test
mov
jecxz
arpl
test
add
pop
add
push
insb
pop
cmp
mov
xlat
js
xor
iret
mov
adcb
jmp
add
dec
cmpsl
out
test
cmpsb
je
repz
addr16
cmpsb
sarl
pop
jle
xor
cmp
inc
push
ss
repnz
adc
or
fimull
xchg
mov
jno
push
fcomps
pop
xchg
dec
mov
cmp
or
fsubs
jno
or
cld
lret
push
addb
rorl
out
enter
cmp
ror
xchg
xchg
aam
adc
sub
jmp
popa
sub
push
test
ret
adc
inc
xchg
and
pop
sub
cmp
mov
mov
inc
dec
jmp
add
dec
popa
scas
lcall
mov
push
js
pop
movsl
add
or
mov
fwait
push
or
xchg
mov
clc
and
iret
imul
push
imul
inc
add
mov
cmp
fidivrl
sub
adc
mov
mov
add
sahf
test
mov
ljmp
sbb
aaa
mov
push
cld
ror
imul
aam
dec
jmp
mov
cmc
mov
mov
dec
and
into
mov
ret
ret
loop
cmpsb
sub
mov
jmp
sub
out
cmp
je
shlb
ret
mov
lret
xor
or
dec
sbb
pop
xor
pop
repnz
cmp
lret
rsqrtps
push
shlb
loope
inc
arpl
mov
cmc
jb
loope
outsl
pop
sbb
pop
loop
push
add
data16
lret
sub
xor
add
loopne
mov
push
lods
pop
ret
pop
push
aaa
idivl
mov
cmpsl
dec
andl
test
shl
test
xchg
pop
cmp
insl
test
in
cltd
jl
mov
iret
mov
fs
and
stc
or
js
add
loopne
sahf
inc
fisttpl
test
mov
loope
adc
lret
jl
das
mov
jne
lret
pop
idivl
lcall
insl
mov
mov
dec
xor
in
das
enter
or
arpl
adc
push
dec
cwtl
mov
mov
xor
scas
ret
mov
test
cltd
sub
mov
lcall
negl
mov
iret
in
stc
mov
xchg
scas
adc
adc
inc
or
repnz
test
mov
inc
mov
adc
dec
xor
popl
ret
mov
inc
mov
xchg
pop
aas
enter
repnz
fisubl
inc
cli
rclb
lret
sub
mov
test
dec
dec
and
stos
and
scas
or
jmp
shll
cmp
cmp
lahf
mov
and
sbb
out
dec
adc
test
jl
ret
pop
lahf
fst
lahf
sbb
dec
mov
sbb
shrb
xor
xor
int3
push
xor
pop
insb
popf
imul
push
test
xchg
pop
adc
cmpsb
lods
pop
mov
mov
call
outsb
arpl
push
jge
push
cmp
movsl
pop
call
arpl
cmp
pop
sub
movsl
lods
pushf
fildll
push
mov
out
icebp
test
cmpsb
fstl
stc
inc
add
cwtl
or
jo
sbb
inc
imul
fdivrs
ljmp
mov
xorl
cwtl
mov
or
mov
fst
dec
mov
mov
xchg
subl
loopne
sub
testb
push
cs
dec
and
sbb
xor
and
mov
bound
pop
push
mov
push
test
sbbb
push
loop
in
imul
mov
roll
mov
rclb
pop
sub
inc
jmp
punpcklwd
mov
dec
mov
hlt
fiaddl
ss
popf
outsl
mov
mov
lret
gs
stos
out
mov
mov
sub
sarl
sahf
jg
imul
jb
fdivrs
scas
xor
sbb
fstpt
inc
mov
mov
cmpsl
inc
movsb
jb
stos
cmc
xchg
aaa
push
movsl
icebp
insl
mov
xlat
movsb
add
sbb
push
fs
cltd
lea
scas
and
adc
xchg
fisttpll
outsl
push
inc
lahf
cld
addb
cmp
int
push
cmpsl
iret
adc
lahf
inc
mov
push
sub
add
dec
repnz
mov
jmp
mov
jo
sbb
mov
cmp
mov
sub
adc
and
std
sahf
setne
cmp
ljmp
push
and
sahf
ss
daa
xor
mov
mov
or
sbb
push
mov
dec
addb
test
lock
hlt
pop
clc
push
xor
inc
sub
mov
inc
jae
mov
push
xchg
xor
aad
dec
sbb
jnp
faddl
jp
mov
ret
xchg
aaa
sbb
sub
xor
or
lret
pop
jns
inc
xlat
push
fcmovnu
mov
or
fisttpll
or
sub
test
incl
push
loope
adc
repnz
fists
adc
add
mov
sbb
std
cmp
stos
inc
cmpsb
jle
stos
call
sub
lea
xchg
mov
xor
daa
jecxz
jge
jno
xor
xchg
idivb
cmpsb
cmpsl
sarl
inc
jno
rclb
sar
and
mov
fsubs
push
xchg
cmp
or
outsl
adcb
mov
inc
jmp
mov
aaa
pop
hlt
ret
and
sbb
pop
clc
imul
mov
icebp
sbb
subb
les
xor
sbb
inc
jge
push
test
dec
andb
test
into
scas
dec
adc
mov
in
push
xor
push
and
ss
dec
cmc
push
adcl
pop
out
sub
fadds
pop
in
jne
into
nop
and
int
out
rcrb
fdivr
idivl
inc
add
into
push
pop
mov
pop
es
jb
dec
fiaddl
add
pop
add
sar
cmp
inc
xchg
icebp
scas
movsb
popa
js
addr16
sub
jmp
call
hlt
jb
fcoml
dec
aas
fistpl
xchg
shl
lods
mov
hlt
xor
xchg
mov
adc
lods
jg
outsl
test
lret
hlt
jg
adc
sbb
inc
mov
outsb
pop
or
pop
imul
add
movsb
mov
dec
test
loope
sub
mov
push
ljmp
or
popa
fisubrl
das
xor
fwait
pop
shlb
pop
mov
lea
inc
inc
add
mov
push
xlat
imul
sbb
fcmovnb
xor
stos
aad
lret
fbld
pop
mov
in
cltd
xchg
sti
mov
hlt
mov
fwait
pop
mov
test
arpl
pusha
inc
int
stc
lcall
pop
jnp
out
fwait
dec
push
or
scas
clc
imul
stos
lret
jno
imul
sub
ja
mov
cmp
mov
lods
jo
mov
andl
pusha
mov
test
pushfw
lea
int3
pushf
scas
add
fs
pop
and
inc
mov
adc
arpl
sub
pop
fdivrs
scas
mov
jmp
imul
insl
mov
mov
xchg
stos
test
jg
mov
js
int
hlt
imul
popf
das
lods
mov
icebp
sbb
cmp
in
andb
pop
test
xor
in
push
xchg
cld
jne
jle
andb
in
add
pop
movsl
fmulp
icebp
pop
mov
sub
movsl
test
mov
addr16
push
loope
adcb
sub
add
ret
dec
idivl
mov
and
jmp
pop
outsb
lahf
cmp
sete
mov
in
scas
mov
mov
fstp
mov
sub
xor
imul
out
sbb
or
dec
mov
out
addb
movsl
mov
push
fwait
ja
ljmp
in
mov
movsl
inc
and
pop
jne
int3
add
mov
aaa
pop
and
in
push
test
cs
loop
inc
dec
fiaddl
pop
cwtl
in
cmp
pop
inc
mov
lds
sub
les
adc
and
lcall
dec
cmp
les
fldt
lcall
push
call
dec
in
mov
clc
xchg
mov
cld
add
fbstp
popa
fstps
mov
dec
push
or
mov
pop
fnsave
jbe
pop
out
dec
mul
es
outsl
mov
or
xchg
fildll
pusha
pop
adcl
out
rep
test
xor
add
pop
outsb
adcb
add
ljmp
in
pusha
fs
pusha
xchg
les
out
sbb
sub
mov
flds
pop
fcmovne
roll
sahf
sbb
ss
in
and
shl
aam
fcoms
mov
pop
xchg
add
mov
sub
rcrl
and
xor
cli
aam
sbb
fisttpl
cmp
or
sub
push
push
insb
and
push
and
dec
arpl
mov
in
dec
testb
mov
jge
jae
jle
imul
cmp
leave
fists
lods
cmp
into
cmp
pop
cmp
movsb
cld
in
inc
xor
inc
decb
sbbb
cmpsl
mov
scas
stos
jne
push
xchg
mov
mov
mov
add
and
and
mov
arpl
push
insl
xchg
or
add
gs
es
in
leave
fcmovnbe
shlb
cmc
sub
sbb
mov
cmpb
push
fucom
call
sar
mov
mov
mov
pop
or
inc
mov
inc
imul
sbb
sub
clc
cmpsl
jb
mov
adc
mov
stc
dec
shrl
sbb
pop
push
fists
jecxz
add
cmp
test
cmp
add
adc
imul
mov
outsb
movsl
incb
mov
mov
xor
adc
enter
into
ffreep
hlt
mov
outsb
mov
fstpl
mov
arpl
push
add
das
cmc
mov
push
adc
jp
xor
jne
ret
jl
pop
mov
orl
xor
mov
test
call
dec
pop
movsb
icebp
popf
cs
pop
dec
sbbb
std
idivl
cmp
jp,pt
and
ja
ficomps
add
jne
jecxz
xchg
mov
jg
arpl
mov
stc
fidivl
pop
test
shlb
inc
nop
adc
xor
mov
not
es
push
loop
pop
test
insb
divl
add
add
cmp
dec
pushf
dec
dec
jmp
arpl
push
mov
lea
fs
mov
idivl
sub
jg
lret
pop
cmp
repnz
push
cmpsb
pop
xchg
roll
fimull
xor
fsubs
addr16
cmp
sub
adc
in
cs
stc
mov
mov
insb
pusha
push
pop
inc
incl
outsb
in
pop
lahf
jmp
jl
mov
rcrb
cld
jg
aas
ret
shl
jo
iret
inc
adc
or
insb
mov
pop
xchg
jp
inc
mov
clc
xchg
or
out
sbb
dec
mov
mov
fcompl
jb
les
out
jg
mov
xor
mov
and
inc
push
cmp
sahf
mov
repnz
clc
repnz
mov
mov
xchg
sahf
cmpsb
xchg
es
add
dec
test
pop
iret
push
sti
push
push
iret
pop
in
xor
arpl
jae
sbb
icebp
inc
out
outsl
ljmp
fucomp
fists
lret
addr16
insb
shlb
mov
mov
pop
lods
pop
xor
or
jmp
test
stos
push
pusha
pop
xchg
not
mov
mov
in
or
adc
fs
ror
jbe
xor
or
fisubl
test
loopne
into
in
mov
and
mov
push
mov
mov
inc
cmpsl
outsl
push
aas
jl
stc
mov
xchg
cmp
cltd
pop
or
jo
ja
cmc
mov
push
mulb
add
add
pop
mov
cmp
mov
add
push
pop
add
adc
loop
call
ja
push
std
enter
pop
mov
sarb
xor
adc
add
add
lret
in
mov
push
mov
shll
arpl
das
dec
fnstenv
inc
loopne
lret
jnp
lods
mov
push
pushl
push
pop
mov
add
fsubrs
jbe
push
enter
pop
xchg
hlt
sbb
insl
and
jp
ss
mov
ljmp
pop
push
adc
inc
inc
add
push
push
cmp
xor
push
out
rol
in
pop
dec
in
jle,pn
push
sarb
cmpb
mov
jb
or
mov
inc
inc
jae
aad
ret
xchg
sub
mov
dec
or
or
outsl
xor
testb
mov
fxch
xchg
es
sub
arpl
cmpsb
sub
push
hlt
and
lock
jne
lahf
mov
sbb
inc
ds
add
in
test
inc
cmp
xor
pop
cmp
push
and
push
repnz
mov
js
adc
loopne
mov
xchg
push
and
and
xor
cmc
mov
mov
cld
shlb
popf
mov
adcl
enter
int
dec
push
jb
xchg
stos
in
sbb
fidivs
lret
sahf
pop
int
mov
jb
adc
mov
xor
xor
and
cmp
subb
mov
mov
js
and
out
iret
cltd
int
notl
pushf
and
add
sub
repz
xor
icebp
ljmp
inc
dec
scas
rcrl
adc
inc
insl
add
sub
sti
movsl
mov
mov
int3
in
xchg
pop
cmpsl
pop
adc
mov
lods
popa
sub
ret
push
adc
cmp
aaa
ss
sub
roll
lcall
xchg
cmc
jl
stos
aas
add
mov
fstl
sub
movsb
pop
push
mov
mov
pushf
push
jns
ljmp
pop
bound
dec
mov
mov
popf
nop
add
aam
mov
fisubrl
mov
mov
cmp
les
add
fimull
les
mov
out
xchg
popf
das
xchg
in
imul
movsl
xchg
popf
pop
int3
inc
std
xchg
or
pop
mov
lret
mov
mov
stos
enter
xchg
push
pop
dec
pop
mov
xor
notl
loopne
arpl
xchg
scas
aaa
dec
jg
xchg
pop
pop
pop
jge
pop
mov
add
pop
jbe
inc
imul
sub
stos
leave
call
cmp
xor
test
or
jecxz
lock
repnz
inc
flds
rorb
xor
ljmp
jmp
aaa
cltd
xchg
movsl
loop
daa
lea
pop
fwait
icebp
lret
pop
cmp
mov
inc
add
vphaddbd
dec
mov
rcr
push
outsl
cmc
sbb
sub
mov
add
cmpsb
mov
push
and
popf
aam
xor
fsubr
mov
dec
ds
sub
std
lea
out
out
aaa
add
mov
sbb
aam
push
addr16
mov
cmpsl
or
hlt
jle
sbb
rclb
icebp
mov
shrb
lret
in
xchg
test
loope
or
int3
pop
mov
cmp
cwtl
pop
xor
pop
enter
arpl
sbb
dec
mov
gs
xor
js
enter
inc
imul
dec
jge
mov
je
mov
shl
xlat
xor
adc
icebp
cli
dec
push
and
adc
jg
jle
xor
jno
mov
mov
shl
xor
mulb
cli
inc
sar
dec
imul
inc
fiaddl
xor
cmp
mov
scas
repz
das
push
mov
push
lds
lea
xlat
aas
xor
enter
outsb
cmc
outsl
cli
lcall
fwait
bound
xorb
or
push
ljmp
inc
push
jecxz
sub
loop
cmp
jno
in
roll
mov
push
mov
and
pop
jmp
dec
adcl
xchg
xor
jp
iretw
xchg
and
scas
sbb
ror
and
cmp
dec
cmp
push
inc
out
add
daa
ret
push
pushf
leave
lods
fdivp
jnp
ror
aam
push
mov
push
sub
mov
xor
outsb
ret
inc
sbb
mov
ljmp
dec
pop
imul
rcrb
in
aam
inc
pop
adc
mov
repnz
cmpsl
mov
inc
or
out
icebp
enter
pusha
movsl
xor
outsb
popa
adc
sbb
sub
jge
and
lcall
rcl
xchg
pop
pop
mull
and
mov
pop
or
mov
lcall
jge
push
xlat
cs
arpl
jmp
sbb
fistps
andl
mov
ss
fwait
ljmp
cli
aam
popf
jne
and
iret
jg
cmp
cs
loopne
stc
push
ffree
mov
addr16
mov
and
notl
xchg
mov
rorb
mov
xlat
mov
test
mov
shlb
stos
push
mov
out
shl
push
xchg
inc
push
repz
jno
imul
cmp
dec
je
mov
cltd
or
sub
add
xchg
dec
mov
and
test
idivl
mov
mov
in
inc
fs
xlat
scas
and
push
push
xchg
fs
mov
pop
inc
arpl
lods
mov
scas
movsl
and
and
adc
add
adc
xchg
sbb
imul
dec
xlat
je
rolb
jg
cmp
adc
lret
pop
dec
xchg
aaa
fldl
xor
push
add
daa
orb
fwait
or
sbb
cmp
cli
mov
das
dec
jecxz
stos
lock
inc
add
out
xchg
lds
jns
sub
aad
iret
jbe
inc
shlb
movsb
cltd
xchg
push
je
out
jno
addr16
jle
xor
inc
cltd
jmp
mov
aaa
xchg
mov
inc
mov
rclb
xchg
xchg
fmuls
jno
lret
ja
daa
inc
call
jnp
roll
add
pop
add
push
sbb
sbb
adc
rorl
and
jb
pop
jmp
jge
jp
fildll
mov
loopne
pop
rcl
jg
cmp
fisttpl
push
push
pop
int
outsb
or
xor
js
sar
scas
aas
mov
fstpt
popa
fstpl
sbb
arpl
cmp
sbb
sub
pop
test
mov
loopne
and
insl
sub
repz
fsts
add
movb
scas
rolb
jae
call
jp
inc
rcll
mov
sub
xor
jb
push
pop
loope
aam
sti
or
xor
insb
jl
and
and
mov
icebp
cmp
pop
es
sbb
cmp
jbe
std
ja
adc
mov
sbb
cmp
jp
cmpsb
in
fistpl
int
add
cmp
movsb
leave
iret
stc
popf
out
lods
ds
inc
push
jae
jno
flds
inc
fldenv
call
pop
scas
call
mov
xor
outsl
clc
push
adc
add
add
dec
out
inc
or
das
xchg
jl
push
mov
cmp
jecxz
pop
mov
ret
loopne
xor
scas
cs
icebp
out
in
lret
jmp
shll
testl
pop
clc
cmc
arpl
cmp
aas
lds
hlt
pextrw
cmp
and
xchg
push
and
push
out
and
cmp
cmp
outsb
or
pop
out
xchg
mov
mov
lods
mov
out
or
jecxz
nop
shl
and
fwait
mov
jmp
jno
cs
push
insb
push
mov
dec
pop
mov
jge
fs
xchg
fmulp
mov
aad
push
lahf
ficoml
stos
adc
push
je
mov
stos
decl
movsb
mov
in
add
stc
ljmp
out
mul
ljmp
ret
jbe
inc
orb
cmp
insb
sub
adc
popf
adc
aas
adc
in
clc
repz
loop
add
dec
mov
push
dec
es
je
pusha
sbbb
in
add
cmp
ret
push
cmc
adcl
mov
jecxz
fwait
mov
lea
jbe
insb
rorb
int3
mov
xchg
mov
shlb
push
aad
lahf
stos
dec
dec
out
icebp
aad
inc
jne
daa
ror
int3
push
adc
sbb
mov
data16
jecxz
enter
add
pop
push
icebp
outsb
daa
mov
xchg
mov
pop
in
pop
rorb
sbb
add
imul
adc
arpl
fcmove
mov
cmc
enter
mov
not
loopne
mov
in
cmp
xor
xor
mov
arpl
push
cld
push
add
shll
pop
cmpb
mov
jns
sub
into
jns
jbe
les
loopne
shl
xchg
cld
push
shll
mov
bound
cmp
insl
adc
cmpsl
mov
dec
add
jl
stos
pop
fidivl
aaa
dec
punpckhdq
jno
divb
test
xor
inc
addr16
ss
inc
sbb
inc
js
popa
mov
lret
daa
dec
repnz
mov
jp
pop
lods
jg
inc
adc
push
scas
addb
push
xor
in
jnp
mov
test
imul
mov
popa
leave
fisttpl
orw
adc
xor
insl
pop
add
jle
xchg
insl
mov
jl
or
push
jbe
filds
mov
dec
pop
data16
pusha
adc
das
inc
jne
jbe
pop
shll
mov
int
pop
testb
cmp
xor
sub
cmp
stc
decl
mov
push
push
xchg
ds
loope
sbb
sbb
mov
xchg
cmpl
lret
dec
or
lret
push
jne
sar
pop
sbb
icebp
shll
adc
inc
dec
pop
das
scas
stos
cmpsb
push
hlt
outsb
inc
lret
add
cmpsb
xor
ds
xchg
mov
sub
and
cld
and
and
xor
cs
jl
aas
test
das
test
adc
xchg
adc
pop
push
aaa
repz
mov
stc
pop
mov
add
sti
or
lret
or
sub
repnz
jbe
loope
imul
pop
sub
ret
adc
mov
dec
stos
ss
add
fdivrs
push
adc
mov
lods
outsl
push
xchg
aaa
xchg
push
std
add
mov
pushf
or
jo
lret
and
mov
test
sub
xor
dec
pop
and
lds
mov
push
in
or
adc
sbb
sbb
into
mov
pop
loopne
ja
jnp
or
jp
inc
dec
int3
jbe
andl
jbe
xor
pop
jne
sub
jg
add
inc
add
inc
sbb
ja
xchg
xor
dec
mov
jb
mov
push
xor
enter
icebp
push
lock
imull
add
outsl
mov
gs
shlb
and
aas
outsl
and
test
push
push
or
lcall
jb
jecxz
mov
adc
fwait
push
lret
xlat
sub
ja
insb
aaa
sbb
clc
outsb
or
xor
mov
and
rorl
sarb
or
mov
cs
jge
test
sub
mov
movsb
cmpsl
or
sbb
sub
pop
cmp
repz
adc
push
inc
adc
mov
sbb
and
lock
mov
iret
lock
int3
rol
mov
mov
jae
js
mov
jp
lds
push
loop
add
and
jmp
mov
sti
xchg
inc
inc
mov
dec
mov
inc
xchg
shrl
inc
push
aas
out
sbb
sub
cli
mov
bound
addr16
jns
inc
push
out
divl
rcll
dec
xchg
test
mov
mov
mov
jmp
sti
sbb
mov
sbb
cmp
jo
pop
movsl
sti
dec
sub
movb
xchg
xchg
push
mov
in
mov
insl
xchg
jnp
inc
jge
and
push
shrb
lods
int
ss
test
test
or
sarl
cmpsb
cmc
add
push
scas
and
adc
and
mov
mov
push
jo
lds
and
push
mov
dec
xorl
jl
mov
sub
mov
add
sti
mov
ds
ret
xor
lcall
or
scas
xlat
sub
push
mov
lret
lods
jnp
popf
aaa
mov
sub
dec
shrb
fcoml
jne
mov
mov
jo
xor
sbb
out
sbb
adc
jnp
mov
inc
jbe
mov
jmp
push
jg
dec
adc
xchg
sbb
mov
add
mul
ret
xor
imul
adc
cli
sets
sbb
push
cmp
ret
movsb
ret
mov
mov
push
imul
dec
popa
pop
inc
ds
sbb
fcompl
xorl
insb
pushf
dec
adc
push
ljmp
mov
mov
iret
movsb
sarb
cmp
in
movsl
mov
and
dec
in
stos
xor
insl
mov
fst
aam
stos
and
cmp
and
jle
in
cmpb
mov
xchg
add
xor
add
aaa
out
inc
repnz
adc
cmc
sbb
jns
mov
test
shr
adcb
pop
daa
and
inc
sub
mov
dec
adc
and
mov
push
and
cmpsl
outsl
adcb
adc
ficomps
add
push
adc
xchg
mov
out
sahf
mov
push
pushf
dec
mov
xor
outsb
jl
iret
movsb
mov
jbe,pt
out
idivb
push
xchg
rolb
scas
imul
repnz
nop
pop
out
cmpsl
insl
push
dec
ss
xchg
or
mov
aaa
sub
imul
inc
jne
jne
in
push
in
insl
cmp
mov
and
loopne
in
out
pop
cmp
pop
push
aam
mov
fldcw
and
mov
inc
bound
cmp
pop
mov
dec
xchg
sbb
cmp
and
xor
notb
movb
mov
inc
pop
fimull
push
repnz
sahf
shlb
or
mov
and
mov
rdtsc
xor
in
xor
cmp
sub
fisttpl
fcoms
movsb
int3
jne
outsl
pop
mov
jno
imul
lahf
dec
ds
call
push
out
int
dec
and
out
and
xchg
dec
hlt
mul
inc
mov
outsl
adc
int
push
and
xchg
mov
fcompp
dec
nop
and
and
pop
jo
xor
cwtl
xor
jl
pop
loop
adc
push
inc
xchg
sbb
cmp
jp
test
ret
inc
inc
in
jmp
rcll
cmp
add
dec
mov
add
push
aam
out
or
fistl
xchg
mov
jp
mov
add
out
add
mov
test
and
adc
mov
or
cld
scas
add
push
jp
jmp
sbb
jb
insb
add
insb
sbb
fcomps
adc
mov
adcl
clc
mov
shrb
pop
mov
flds
cmpb
and
mov
push
into
icebp
xchg
stos
or
push
jle
xor
ficompl
popf
and
fwait
loop
xchg
hlt
cmp
mov
xchg
push
sbb
inc
stc
aaa
insl
mov
mov
mov
xchg
lods
nop
addl
mov
sbb
fidivl
inc
xchg
dec
mov
ljmp
jg
in
lcall
xchg
sub
in
inc
and
insl
mov
out
sbb
xchg
out
movsb
add
faddl
into
lea
mov
xchg
call
pop
popf
add
sarl
sub
notl
movsl
mov
mov
cmp
sub
mov
lcall
push
popa
das
add
xor
jb
cmpb
xorb
jecxz
mov
lods
adc
inc
push
push
xchg
xchg
jecxz
test
js
jne
pop
pop
pop
jns
pop
pop
mov
mov
pop
int
cmp
cmp
mov
add
lret
lods
add
out
aad
fldl2e
les
add
loopne
loope
mov
xor
gs
popf
pop
dec
push
ficompl
imul
rcrl
iret
insb
sub
call
xchg
adc
mov
xchg
dec
inc
push
mov
int
xor
pop
loop
dec
aas
jmp
dec
cmp
mov
lock
jnp
ret
xor
push
mov
ficompl
xor
lcall
xor
adc
lea
fcomi
into
pop
incb
sti
clc
sub
jbe
rcr
and
test
daa
inc
fistps
fdivs
movsl
xchg
jno
jb
sbb
out
mov
addr16
scas
or
jecxz
cmp
mov
in
or
out
lea
mov
mov
call
add
ret
mov
hlt
jle
repnz
lods
lcall
push
mov
popl
andb
sti
xlat
or
rolb
mov
arpl
xchg
inc
cs
aam
jne
ljmp
cmc
in
insb
dec
adc
push
in
mov
xor
iret
inc
aas
scas
mov
push
lea
and
dec
xor
pop
ds
ljmp
or
mov
std
insb
jbe
in
xchg
imul
pop
outsl
jl
sbb
sub
push
pop
sbb
xchg
aas
imul
dec
insb
test
clc
clc
notb
mov
int3
xor
mov
sub
jo
xchg
shll
out
lods
test
push
add
fwait
mov
sahf
data16
adc
data16
sub
ret
int
adc
jns
addb
in
and
out
mov
incl
ret
or
lods
loope
test
push
push
lahf
sbbb
push
out
cmp
sbb
rorb
push
pushf
aad
xchg
test
pop
mov
inc
push
fdivrs
out
out
pop
push
cwtl
gs
inc
jp
inc
test
leave
cs
aas
mov
adc
movb
cmc
aam
dec
pop
fists
push
nop
in
jae
inc
xchg
sbb
mov
aas
mov
push
push
scas
bound
mov
mov
stc
xlat
or
add
add
and
mov
pusha
mov
aaa
or
pop
add
pop
xor
cmp
inc
mov
sbb
mov
add
or
insl
ja
adc
roll
add
adc
cmp
leave
fwait
sti
jo
stos
pop
mov
daa
jae
cmp
fldcw
lea
adc
ljmp
scas
ret
pop
mov
inc
hlt
pop
fucomip
jl
stc
push
in
lea
dec
pop
mov
in
adc
jl
push
out
xchg
mov
pop
mov
mov
aaa
out
mov
mov
dec
in
es
es
and
jae
mov
in
addr16
cmp
pop
fstpl
push
and
fiadds
in
out
pop
int
jb
lahf
int3
stos
push
adc
sub
mov
mov
hlt
stos
pop
sbb
mov
not
jl
and
popf
sbb
push
cmp
pop
movsb
outsb
subb
and
push
cmp
jbe
test
push
dec
or
mov
popf
push
dec
mov
pop
cli
inc
push
lods
mov
in
mov
fcoms
lret
sbb
gs
push
cmp
sbb
rcrb
mov
insl
push
data16
shrl
xlat
pop
push
rclb
jne
outsl
sub
imul
add
add
int
push
in
jb
dec
dec
icebp
fisubl
fcomps
stc
adcl
fcoms
mov
dec
mov
add
lea
loopne
insb
mov
mov
and
enter
xlat
adc
mov
in
enter
sbb
aaa
sub
adc
and
dec
mov
lcall
push
inc
aam
daa
imul
lret
outsb
clc
cld
or
ljmp
leave
inc
jnp
adc
mov
pop
xchg
jle
stos
in
inc
fs
xor
inc
out
or
gs
enter
sub
ror
xor
jno
pop
je
pop
pop
popf
and
inc
xorl
mov
mov
mov
in
sbb
cmp
mov
push
mov
divl
fs
mov
clc
clc
daa
in
fcmove
into
mov
pop
or
mov
aas
jne
in
js
aaa
shrb
arpl
lret
call
cmp
into
pop
jle
movsb
cs
test
push
enter
mov
sbb
mov
add
add
imul
push
sub
das
iret
and
loopne
lahf
in
sbb
repnz
xchg
mov
dec
xor
or
mov
pop
out
les
into
and
fisubs
cmp
adc
subb
jg
ja
xchg
aas
or
fsubrs
icebp
jl
mov
loop
push
cwtl
adc
or
popa
mov
icebp
push
add
xor
js
pop
mov
mov
cmp
and
pop
push
adc
jmp
sbb
jl
lds
ficoml
fdivp
xchg
andb
mov
adc
mov
aaa
lods
mov
ljmp
push
addb
fildl
and
jmp
sbb
out
mov
dec
or
divb
fs
call
cmp
sub
in
lea
sub
jp
cs
call
add
sub
pusha
popa
dec
xchg
loop
rclb
mov
push
mov
xor
adc
call
arpl
js
lods
jmp
push
clc
add
inc
int3
insl
sub
pop
or
pop
cmpsb
aaa
cmp
mov
std
in
popf
lds
scas
mov
bound
popa
mov
adc
fs
jo
sub
lds
push
jae
les
or
icebp
fdivs
ret
sub
out
inc
mov
cltd
mov
ret
dec
imul
xor
xor
ljmp
jnp
cwtl
sbb
sbb
adc
cmc
inc
loopne
mov
lods
push
adc
dec
or
mov
pop
out
adc
push
std
xor
pop
dec
xor
or
xor
xchg
sub
or
jne
cmpsl
call
cmpsb
gs
cmpb
aas
jo
icebp
or
test
out
jnp
dec
and
pushf
sarl
imull
lret
mov
push
sbb
pop
iret
ds
fidivrl
cmpsb
test
jl
mov
xchg
test
sar
addr16
jo
mov
jne
push
xor
cmp
fs
in
cs
mov
pop
mov
nop
ficoml
filds
das
mov
xchg
or
cmpsb
dec
or
mov
mov
pop
dec
stc
pusha
xor
mov
jecxz
xchg
push
xlat
mov
cmp
add
sbb
mov
sub
or
jae
dec
mov
jne
les
cs
cmp
xchg
mov
ja
leave
pop
in
into
cltd
test
mov
in
mov
pop
jge
jge
xchg
sub
call
push
mov
mov
jp
je
sub
mov
lcall
jnp,pn
shl
mov
and
push
test
xor
loopne
out
inc
inc
mov
stos
inc
ret
imul
mov
and
aad
rcr
sub
jmp
out
mov
add
mov
rcll
dec
pop
mov
sub
cli
mov
dec
xchg
or
pop
jbe
mov
xorl
dec
test
fstl
or
stc
imul
cli
flds
inc
or
push
es
addr16
sbb
imull
test
push
xchg
fs
popf
inc
mov
xor
mov
cmp
xor
dec
ljmp
mov
add
insl
adc
jp
fldenv
push
push
in
push
mov
mov
or
and
das
xchg
sti
gs
out
clc
sub
int
add
and
lock
fs
or
roll
xchg
add
add
jmp
jle
js
aam
data16
leave
jge
add
pop
add
mov
mov
fldenv
xchg
rorl
scas
sbb
dec
arpl
add
push
lods
stos
dec
fisttpl
inc
jae
mov
into
jo
jns
cmp
adc
mov
dec
mov
rcrb
imul
lcall
mov
pop
dec
popa
sar
in
xchg
and
cmp
ja
mov
dec
loopne
cmp
push
push
add
xorl
mov
divl
xor
xchg
popa
aas
scas
mov
or
xchg
mov
inc
out
xchg
cmp
out
or
xor
rcrl
cmp
out
stc
in
mov
enter
and
cmpsb
fcoml
fstps
sti
mov
lds
jmp
inc
add
inc
jne
cmp
insl
jg
int3
inc
mov
call
push
or
pop
test
add
cmpsb
and
fldenv
jle
std
lods
lret
mov
lock
shl
adc
sub
in
xor
mov
and
lret
scas
cmp
dec
ss
push
pop
mov
push
pop
sti
ja
cmpsl
xor
rcrb
aaa
loop
jmp
and
fisubrl
jle
and
sub
push
mov
or
push
bound
test
and
aas
adc
ret
xor
ljmp
mov
es
bound
adc
dec
lods
xor
call
sti
hlt
je
clc
ret
lret
pop
or
dec
orl
adc
dec
mov
inc
call
adc
jb
call
scas
movsb
movsl
xchg
stos
dec
and
mov
mov
xchg
jecxz
scas
clc
or
add
push
rcrl
imul
jp
and
jl
fs
jge
imul
cmp
sub
aad
sub
mov
pop
pop
xlat
xlat
scas
in
lea
roll
stos
clc
rclb
jo
xor
jne
fimull
icebp
fs
mov
xor
test
ja
mov
xor
inc
inc
ds
roll
jae
addr16
je
ret
sub
into
dec
push
mov
add
aad
out
mov
fs
andl
aam
das
aas
sbb
xchg
mov
add
sub
sub
mov
adc
mov
cmp
in
das
clc
loope
or
nop
mov
mov
cmc
xchg
inc
jb
test
inc
insb
icebp
sub
cltd
movsb
das
lods
ret
mov
or
mov
int
push
js
and
jle
and
ds
gs
loopne
mov
insl
jle
pop
imul
cmpsl
fsubl
mov
mov
mov
scas
dec
jmp
insb
outsb
and
xor
push
inc
xchg
mov
sub
xor
dec
movsl
lret
xor
leave
std
stos
add
sbb
loopne
pop
in
add
push
xor
stc
or
sti
movsb
jo
mov
xlat
in
stos
cmpsl
sahf
lahf
jae
ficoms
int
or
xchg
cmp
sahf
int
fcmovnu
adc
call
sbb
idivb
test
fnstsw
sahf
and
add
dec
mov
inc
mov
imul
in
adc
insb
mov
mov
test
test
enter
jecxz
sbb
mov
arpl
fabs
push
push
xchg
cmp
mov
pop
aas
xor
jne
cmpsl
lret
sub
arpl
xor
sarb
xorl
iret
std
mov
cmc
shlb
enter
les
push
cld
xchg
lret
dec
adc
pop
xchg
and
into
mov
adc
lds
push
aad
adc
push
in
hlt
out
push
inc
or
leave
mov
mov
mov
sbb
stos
cmp
and
adc
cld
add
inc
in
and
push
ss
mov
dec
data16
sub
scas
xor
sahf
add
lcall
mov
data16
cmpsl
ss
repnz
push
pop
aas
mov
pop
aam
call
mov
mov
loopne
fbstp
nop
push
sbb
fidivrl
das
xor
int
dec
jnp
pop
xchg
add
sbb
data16
mov
mov
pop
cli
push
jl
mov
jg
std
or
icebp
or
insb
push
loopne
xorl
inc
sbb
adc
cs
pushf
stc
xchg
test
bound
add
mov
or
dec
outsl
aaa
sbb
cmpsb
dec
cmpsl
sahf
negb
fidivrs
stos
dec
ror
popw
pushf
ljmp
inc
or
add
pusha
xlat
es
sub
jmp
fmull
jmp
lahf
imul
adc
dec
mov
push
test
xchg
sub
mov
and
notb
jmp
enter
fsubrp
dec
xchg
ja
inc
dec
repnz
jbe
dec
dec
sbb
or
mov
add
jmp
das
xor
jecxz
mov
repnz
fnstsw
cmp
shr
jmp
cld
or
jmp
jmp
lret
or
push
sarb
xor
push
int
fstp
orb
cmp
xchg
outsb
or
push
mov
sub
push
sub
sbb
shrb
inc
pop
mov
cmp
and
add
daa
adc
push
and
xchg
andl
popa
cmp
adc
lock
dec
leave
imul
into
inc
or
repz
add
mov
sbb
aad
and
fs
cmp
xchg
sub
inc
xchg
xchg
iret
mov
lods
sub
sahf
call
in
rcrb
jecxz
inc
jl
leave
cwtl
cmp
mov
daa
insl
and
inc
mov
mov
fptan
subl
xchg
cmp
add
push
clc
xchg
mov
out
aam
ret
xchg
cs
mov
xor
lock
push
es
pop
mov
cs
cmp
or
lock
imull
xchg
lods
jmp
push
jne
idivb
ret
cmpsb
sub
sub
idiv
fisubl
sbb
pop
test
je
or
jbe
sbb
and
insb
push
lea
into
out
popf
adc
xchg
add
push
pop
add
push
sub
aad
call
mov
outsb
ljmp
inc
push
cmpsl
jbe
mov
mov
jbe
jno
pop
xchg
movsl
nop
mov
xchg
mov
loop
aad
mov
cmp
out
fildl
out
int
add
or
out
in
test
sbb
mov
pop
pop
js
xor
outsb
push
xchg
aad
jno
call
sub
inc
cltd
push
mov
lret
and
add
push
push
xor
lret
aaa
inc
decl
sbb
mov
xor
pop
lea
pushf
leave
xor
pop
sbb
push
push
sub
dec
out
pop
imul
cmp
cld
pop
aad
mov
jb
outsl
inc
sahf
negb
pop
fcomps
ret
sub
mov
xchg
mov
int
or
add
icebp
pop
mov
pop
mov
lret
mov
pop
movsl
mov
hlt
movsb
jne
add
sysret
jbe
pop
or
mov
mov
test
std
insl
ror
xor
add
xor
call
rcll
mov
data16
bswap
cmp
pop
decb
jle
or
aas
or
lods
dec
sub
sub
pop
push
dec
fldcw
fists
test
in
imul
ljmp
xor
adc
sbb
in
pop
sbb
scas
ss
xchg
push
xchg
mov
mov
jno
jle
rorb
dec
mov
inc
mov
jae
pushf
out
or
insb
xchg
jmp
mov
adc
in
imul
cmp
movsb
movsl
test
xor
sbb
cli
xchg
mov
mov
add
push
lock
mov
lret
fistps
mov
notb
ret
xchg
fwait
test
loope
lock
jmp
sti
stos
adc
testl
jne
hlt
xchg
xor
daa
aad
mov
and
dec
test
fcoms
ljmp
test
call
mov
aas
jmp
mov
and
ja
xchg
mov
push
insb
adc
sub
rclb
xchg
or
outsb
jle
pop
inc
outsl
enter
jp
call
pusha
out
sbb
and
fldenv
mov
movsl
pcmpeqw
idivl
aam
js
xor
dec
gs
popf
or
adc
fadds
jbe
popf
ds
jecxz
jge
dec
pop
ret
addr16
sbbl
sub
adcb
cmc
in
lds
lds
mov
push
sub
sbb
sub
mov
into
add
fucom
sbb
movsl
mov
shr
cmp
pop
jmp
xorb
push
mov
jns
add
in
push
xor
xchg
imul
or
adc
dec
inc
jae
jns
dec
mov
shrb
xchg
and
scas
mov
bound
mov
jle
and
divl
xchg
scas
iret
pop
pop
js
cmpsb
shlb
stc
addb
sbb
mov
and
mov
adc
out
sbb
in
das
mov
push
test
push
pop
sub
test
ja
and
sbb
cmp
aas
sti
jbe
push
std
icebp
and
push
pusha
push
xlat
xchg
xchg
fidivs
inc
jns
in
mov
xchg
imul
push
sahf
or
pop
cmp
out
push
and
sbb
push
pusha
fsubrs
leave
pop
sub
mov
in
jmp
out
inc
mov
mov
mov
mov
outsl
mov
adc
aam
ret
mov
aam
dec
cli
aas
int
lcall
movsl
out
push
pusha
outsl
popf
and
xchg
shll
leave
in
jg
int3
pusha
mov
in
or
and
test
cmc
aaa
jbe
push
fnsave
inc
stos
inc
sbb
add
in
in
xor
lds
mov
sbbl
pop
add
mov
stos
shll
outsl
adc
jns
and
add
sub
push
sub
movsb
jns
aaa
pop
idiv
pop
pop
cs
jmp
or
int
inc
jno
mov
sti
inc
adc
add
cmc
call
bound
xchg
mov
inc
lret
inc
out
xor
mov
mov
cs
shl
cmpl
sbb
push
push
pop
cmp
in
adcl
dec
js
call
in
or
in
xor
lret
lret
sti
mov
jns
mov
pop
in
push
call
dec
sub
push
es
dec
pop
dec
jbe
inc
fldcw
mov
xchg
xchg
add
data16
int3
cli
out
cmp
dec
jecxz
add
fisttpl
and
gs
sub
xor
push
iret
stos
dec
inc
rorl
jecxz
fidivrl
mov
lea
test
cmp
xor
xchg
jle
push
xchg
push
inc
add
repz
mov
pop
mov
das
mov
sbb
jecxz
in
icebp
mov
jmp
mov
fsts
pop
fcoms
pop
ljmp
das
mov
lret
negb
jmp
mov
push
mov
xor
mov
lock
xor
icebp
scas
jnp
repz
popa
push
clc
mov
sbb
call
xchg
push
ljmp
call
push
mov
loope
incl
mov
in
fisubl
pop
fiadds
push
jg
sbb
out
ret
jo
mov
and
fcmovb
jg
and
adcl
sti
xchg
inc
sbbl
cmp
jmp
jb
sahf
loop
mov
xor
sbb
cltd
ljmp
nop
jnp
prefetch
lock
cmpsb
cmc
stc
loopne
hlt
scas
jne
movsl
adc
xlat
jp
or
lock
test
decl
mov
sub
xor
jns
in
outsb
xor
add
push
jae
cmp
sub
nop
xor
mov
mov
mov
jb
cld
jmp
ret
scas
xor
mov
imul
xchg
mov
or
push
scas
rolb
ret
idivl
add
dec
or
xor
adc
mov
je
sub
pop
pop
mov
dec
push
and
cmp
int
push
jnp
xchg
push
movsl
adc
addps
add
add
inc
add
inc
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
mov
xlat
lea
leave
int
push
jmp
pop
add
mov
mov
testl
push
fidivs
xchg
ret
xor
jge
sbb
int3
fwait
dec
jmp
fldl
shrl
pop
iret
sbb
sbb
unpckhps
xchg
mov
in
icebp
cli
pop
ja
mov
outsb
sub
and
movsb
add
cmp
sub
fstl
xchg
nop
jge
push
movsb
out
pusha
mov
pusha
mov
pop
xlat
mov
add
lret
fiaddl
xor
int3
adc
cmp
fcmovb
iret
ret
mov
les
aad
pop
out
mov
jbe
xchg
jmp
mov
sar
jne
add
mov
mov
adc
mov
ret
xlat
lahf
mov
lret
icebp
lock
fildl
xchg
aaa
mov
ss
add
movsb
push
inc
das
enter
and
rcr
dec
and
lahf
sub
xchg
and
jns
pop
dec
int3
std
pushf
arpl
arpl
and
scas
mov
xchg
dec
sub
cmp
lcall
outsl
inc
or
xor
lods
jo
lahf
pop
scas
movsl
outsb
xcrypt-ctr
cmpsl
sahf
popa
sub
fwait
rclb
ds
icebp
xchg
add
pop
cmpsb
cmp
xchg
adc
cmp
jne
xchg
jp
adc
lret
icebp
rcll
add
imul
cmp
ret
sbb
push
xchg
sub
incb
cmp
sub
mov
sub
ss
inc
icebp
lahf
jnp
xor
xchg
jg
mov
aas
and
dec
push
ret
inc
dec
sti
clc
out
mov
mov
push
sub
jns
dec
mov
jmp
adc
jg
icebp
inc
outsb
insb
adc
push
xchg
imul
add
adc
dec
sbb
dec
test
movsl
mov
mov
inc
xor
xor
add
add
xchg
jno
push
int
jno
inc
mov
fmull
in
cmp
pop
loop
repz
jne
lret
movsb
xchg
mov
jbe
mov
or
xchg
stc
mov
mov
bound
cmc
in
lret
dec
push
pop
jno
dec
imul
mov
pop
ret
lcall
lret
xchg
in
jo
mov
pop
lret
popa
pop
cld
movsl
loopne
jge
mul
stos
pop
ss
push
scas
std
lret
mov
daa
shrl
nop
movsl
xchg
sub
aam
mov
push
daa
xlat
sbb
sbb
dec
ljmp
xor
dec
push
mov
push
hlt
inc
gs
aad
fisubrs
push
mov
scas
and
pop
inc
pop
cs
and
jnp
mov
sbb
and
scas
dec
dec
enter
jns
mov
sbb
aam
or
dec
and
jl
adc
fbstp
push
arpl
aam
push
mov
mov
mov
pop
jle
sbb
jl
hlt
jl
sub
mov
pusha
cwtl
adcb
jnp
adc
ja
pop
sub
lock
insb
xor
ss
in
dec
push
jb
mov
test
cmpsl
cs
dec
out
jmp
or
frstor
jmp
pop
cwtl
movsl
fs
jmp
ret
mov
jle
adc
push
add
movsl
dec
xchg
pop
leave
mov
sti
xor
outsb
mov
adc
mov
pop
mov
push
mov
push
mov
mov
out
and
icebp
loop
push
mov
cmpsl
mov
int
sbb
cmp
mov
add
cmp
scas
cmc
mov
rcll
pop
jnp
mov
xor
jns
out
mov
mov
in
xchg
xchg
inc
sbb
sbb
mov
int
xor
divb
js
mov
xor
sti
popf
fsubs
push
push
andb
test
ljmp
or
mov
mov
dec
or
pop
popf
adc
sbbl
in
fwait
mov
jmp
std
sub
pusha
mov
or
popf
data16
into
jmp
movsb
pop
xchg
add
dec
fcmovu
movsl
imul
pop
js
inc
fucomi
dec
in
test
add
dec
fnstenv
xchg
pop
loop
mov
jmp
testb
xchg
lea
int
frstor
dec
jno
mov
lahf
push
lea
adc
mov
xchg
or
sbb
xchg
cld
pop
mov
mov
xor
inc
jecxz
jmp
dec
pop
xor
out
inc
mov
sti
cmpsb
sbb
push
inc
lret
stos
cli
pop
mov
dec
pop
mov
pop
sti
jno
adc
hlt
movsb
lahf
push
cmp
les
inc
jle
xchg
xlat
or
inc
jo
push
pop
loopne
cmpsb
and
imul
in
lahf
xchg
jb
mov
mov
xchg
jg
cmp
xchg
repz
adc
push
mov
add
lds
dec
and
les
jo
mov
repnz
add
and
pop
or
loope
clc
lds
add
negl
push
leave
notl
mov
adc
xchg
es
divps
jbe
mulps
xchg
and
cmp
and
jmp
mov
lock
out
das
enter
lret
inc
xor
test
dec
cs
cwtl
lds
loop
xorb
jbe
or
rcrb
add
dec
arpl
add
xor
das
mov
inc
xor
mov
repz
add
test
sub
lcall
loope
push
nop
xor
rcrl
insb
js
cmp
jl
lret
repz
sbb
out
rcll
dec
sar
addr16
inc
xor
pop
leave
test
lret
or
jg
xchg
xor
popf
mov
imul
loopne
mov
inc
mov
btr
repz
movsl
xchg
rcll
nop
dec
lods
xchg
fs
lret
xor
mov
push
or
push
dec
adc
test
jns
pusha
push
out
sub
pop
subl
insb
fs
psrad
dec
shl
jp
aas
pushf
push
cmp
jno
outsb
daa
or
dec
lock
gs
nop
daa
arpl
adcl
or
jge
cli
addb
sub
add
repnz
add
adc
jg
stos
mov
jg
pop
adc
add
pop
add
jg
jle
mov
sbbl
jns
push
scas
adc
shlb
push
fcomps
in
and
rcrb
xchg
cs
lret
es
test
sahf
xchg
mov
cmc
movsb
adc
inc
out
mov
lods
imul
mov
cltd
test
add
mov
jbe
mov
add
cmp
orb
shl
pop
push
cwtl
outsb
cmp
mov
das
fsubrl
lea
and
jnp
or
dec
dec
loop
cltd
test
scas
push
pop
in
push
adc
andl
pop
xchg
adc
and
mov
mov
out
jge,pt
push
pop
jle
and
sti
push
into
fcompl
ss
mov
imul
aad
sub
jno
jne
push
push
enter
xor
repz
out
sub
pop
in
nop
mov
jns
sahf
pop
mov
mov
cmp
mov
xor
imul
lcall
cmp
mov
cltd
push
sbb
ret
ja
inc
imul
and
push
scas
cmp
into
and
sub
outsb
inc
mov
adc
lret
incb
call
imul
lock
mov
scas
push
lods
test
add
pop
push
loope
arpl
mov
add
sbb
mov
or
pop
mov
jmp
dec
add
jb
mov
imul
push
inc
dec
stos
dec
xchg
idivl
inc
fsubl
sbb
lods
jns
notl
imulb
jnp
xchg
out
adc
es
jne
ss
sti
jle
repz
inc
push
ret
sub
lcall
out
and
sbb
push
push
xlat
jg
je
and
push
sub
mov
hlt
sub
movsl
ss
mov
subl
and
rcrb
adc
ljmp
shl
cmp
mov
notb
subb
pop
inc
pop
push
mov
in
jo
cmp
xchg
pop
xor
lock
stos
cwtl
insb
cwtl
adc
cs
fldcw
mov
adcl
and
or
cs
mov
jb
sbb
test
adc
xor
mov
jns
and
mov
inc
push
loope
push
aam
add
popa
jge
fists
push
pushf
testb
out
mov
or
jns
aas
aas
scas
lcall
lret
rorl
lea
and
push
jmp
or
xchg
push
lret
stos
mov
dec
shr
call
inc
pop
cld
inc
nop
mov
xor
mov
cs
popa
icebp
sub
add
jb
push
loopne
or
xor
mov
and
push
gs
imul
xor
xor
ljmp
dec
pop
fists
jb
mov
iret
scas
push
mov
test
adc
test
lcall
inc
shrb
add
cmp
scas
imul
jne
mov
ret
js
add
push
movsl
addr16
inc
stc
sub
test
lds
les
rorl
xchg
sahf
jo
roll
scas
jo
lock
xor
jmp
hlt
mov
pop
das
mov
xlat
les
int
pop
pop
dec
and
add
push
mov
pusha
mov
loopne
or
hlt
imul
or
ds
repnz
rclb
fiadds
call
mov
push
into
push
dec
popa
popf
stos
sub
add
sarw
out
lret
lock
inc
fdivrl
sub
lea
scas
inc
inc
inc
or
sti
xchg
mov
jge
lahf
jp
adc
loope
std
pop
outsb
cwtd
hlt
testl
ljmp
repnz
xlat
daa
movsl
pop
rorl
movb
sbb
pop
jp
or
mov
push
lods
adc
add
fidivl
push
cwtl
mov
insb
imul
mov
add
hlt
sub
mov
rcrb
pop
xor
adc
lods
punpckldq
movsb
mov
fcomip
aaa
stos
cmp
jo
fs
mov
lea
popf
jl
roll
jno
lock
mov
jecxz
push
cmpsl
sub
pop
arpl
mov
and
xchg
xchg
add
sbb
jg
jp
jnp
scas
xchg
push
repnz
sub
pop
jg
fadd
sbb
mov
fisubrl
mov
aam
mov
sub
in
lahf
and
cltd
mov
scas
stc
arpl
xorb
push
imul
daa
scas
xchg
addr16
push
push
pop
insb
cmp
fcoms
fsubs
xchg
shrl
lock
outsb
push
lods
arpl
mov
and
fldl
stc
pop
jmp
sti
inc
cmp
cmp
lret
xchg
int3
sbb
jb
mov
insl
mov
cmp
enter
dec
sti
sub
and
mov
jo
mov
popa
xor
push
xchg
mov
in
clc
pop
cmp
mov
mov
aas
jl
add
dec
leave
nop
jnp
jbe
xchg
sahf
pop
or
fmull
divl
cld
dec
movsb
and
xlat
imul
test
cmp
jecxz
mov
rcll
sbb
das
dec
hlt
mov
push
test
push
or
out
and
sbb
nop
jecxz
dec
cltd
inc
pop
lea
pushf
sub
movsl
add
nop
xchg
pop
test
mov
mov
add
push
mov
pop
leave
dec
stc
sub
mov
push
sub
in
mov
push
mov
jo
in
ret
inc
das
dec
lret
xor
test
shlb
addr16
sahf
cmp
inc
les
in
jl
imul
and
int
inc
and
bnd
enter
and
cmp
shl
jle
adc
pop
je
pop
push
mov
rorb
lock
jmp
in
cmpsb
jno
out
into
int
je
int3
sbb
stos
jle
scas
imul
mov
daa
inc
inc
fistl
movsl
out
sbb
lods
xchg
testb
in
mov
mov
adc
pusha
es
fiaddl
or
sub
push
add
jne
mov
sbb
out
cmp
repnz
mov
adc
sbb
add
pop
add
jge
in
in
add
push
or
mov
mov
iret
jle
in
inc
int3
shlb
fidivrs
mov
dec
mov
mov
xchg
iret
clc
popa
dec
sbb
sub
or
mov
out
dec
js,pt
fstps
push
test
lea
jnp
mov
out
test
cltd
ja
aam
fistps
insb
adc
in
xchg
out
lret
data16
pop
xchg
dec
inc
mov
cmpsl
enter
or
mov
cmpb
lods
xor
cmp
push
lret
adc
add
scas
gs
repnz
pop
inc
loope
sbb
jb
mov
lea
rolb
sbb
xlat
testl
sbb
inc
insb
dec
xor
cmpb
add
xchg
and
and
imul
arpl
sbb
out
sub
adc
test
pop
jbe
mov
ret
fidivs
mov
into
mov
sbb
daa
jmp
lds
mov
out
inc
sbb
xor
and
adc
incb
adc
inc
data16
leave
push
ss
jg
dec
repnz
repz
fisttpll
xchg
mov
mov
sbb
nop
lock
add
test
jbe
cld
dec
mov
dec
sbb
mov
sbb
sub
jecxz
dec
movsb
jo
cmpsb
mov
sbb
je
scas
pop
add
out
xchg
push
xor
pop
imul
add
enter
je
adc
stos
inc
sar
jp
fidivl
cmp
ret
js
mov
arpl
int3
fidivs
inc
pop
adc
les
sbb
xchg
into
sub
jl
das
stos
add
mov
roll
mov
mov
xlat
subl
gs
cmpsb
mov
mov
mov
push
push
out
pop
cmp
push
sbb
jg
xlat
insb
mov
mov
dec
ficomps
inc
dec
inc
mov
in
dec
dec
mov
addb
in
add
mov
call
push
xor
mov
int3
mov
ficoml
notb
iret
js
inc
jecxz
sub
xor
mov
mov
mov
sar
aam
pop
cmp
mov
sub
xor
cltd
push
rclb
sbb
outsl
leave
ret
xchg
pushf
mov
mov
inc
unpckhps
imul
addb
inc
or
sbb
inc
push
pop
or
inc
mov
xchg
push
jg
in
sub
or
daa
addr16
xchg
fcmovne
aaa
and
xchg
mov
pop
test
xor
push
inc
loop
jbe
or
xchg
es
aas
mov
push
ficompl
in
adc
dec
pushf
andl
mov
xchg
add
push
mov
out
into
fstpt
repnz
pushf
inc
pop
xchg
inc
repnz
sbb
dec
and
int
in
push
xchg
sbb
rorl
stos
out
cs
in
fsubrl
push
adc
test
lret
pop
adc
dec
pop
aaa
adc
repnz
mov
lret
xchg
int3
loop
jbe
fucomp
xor
xor
add
movb
mov
sbb
leave
sub
movsl
popf
aad
fisttps
and
add
lcall
jmp
popa
mov
scas
popa
fdivrl
xchg
push
sbb
out
jbe
pop
sub
lcall
sub
neg
jmp
insb
cmp
ja
dec
and
dec
ja
scas
cmp
pushf
sub
xchg
sub
adc
sar
mov
or
cmp
ss
pop
or
jbe
sub
and
xlat
adc
mov
mov
ss
mov
dec
loope
xchg
mov
dec
notb
mov
dec
movsb
xchg
inc
neg
cwtl
lret
xchg
mov
adc
test
mov
mov
insb
xor
mov
or
push
cs
daa
call
icebp
mov
mov
ret
dec
test
pop
add
sub
dec
pop
mov
adc
push
sahf
outsl
pop
scas
cltd
push
pop
add
lahf
push
call
sbb
adc
xchg
inc
or
in
sahf
or
mov
adc
jmp
push
into
cltd
stos
pop
or
xchg
push
clc
je
bound
jae
mov
add
xor
xchg
out
test
mov
or
stc
pop
adc
mov
ret
sbb
lds
mov
fldcw
stc
xlat
xor
gs
adc
fldl
int
data16
lret
lods
mov
in
jmp
pop
push
dec
popa
jno
mov
outsb
adc
cwtl
inc
jle
add
loope
mov
fnstenv
xchg
out
add
push
loop
push
pop
sub
ja
insb
fmulp
pop
andl
fnstcw
int3
jno
push
les
lahf
or
push
cmp
or
in
shrl
inc
outsb
jb
pop
mov
dec
sbb
into
mov
aas
insb
loopne
scas
jp
inc
sub
or
xchg
jl
mov
cmpsl
dec
cld
mov
sarb
mov
push
rcrl
scas
push
addr16
mov
int
stos
xchg
in
xor
mov
jb
sbb
fmull
sub
sahf
test
push
es
add
incl
int
inc
or
mov
es
fstps
xchg
ljmp
outsl
pusha
jge,pn
pop
and
inc
movsb
mov
popa
sbbb
scas
mov
leave
cwtl
and
jnp
cmpsb
test
call
jno
fisttps
cmp
andb
xchg
outsl
mov
fistpl
scas
mov
shr
xchg
shlb
das
push
mov
inc
inc
push
sub
mov
call
and
cltd
xchg
enter
xchg
pop
pusha
inc
lahf
mov
stc
fnstcw
xchg
lds
sub
lahf
cmpsl
adc
out
xchg
pusha
mov
pop
out
adc
sub
and
xor
push
and
loop
mov
push
pushf
pushf
push
dec
sbb
add
xchg
mov
pop
js
rorb
and
test
adc
jmp
xorl
cmp
jo
movsb
dec
mov
add
aad
pusha
cld
jne
das
adc
and
add
pop
add
cld
or
movsb
pop
mov
lods
movsl
and
add
push
repz
dec
enter
sarl
cmp
cmp
popa
xchg
lahf
mov
mov
out
das
jne
mov
mov
adc
in
lahf
jl
les
fidivl
xorl
mov
jnp
inc
sbb
notb
ss
loope
pop
fimull
dec
mov
daa
sub
inc
flds
arpl
int3
pop
mov
rcl
test
inc
and
pushf
xor
push
aad
lahf
cmpl
lret
mov
orb
loopne
inc
lods
hlt
jnp
repz
mov
adc
pop
ret
sub
out
repnz
addb
sarl
popa
jle
xchg
xchg
imul
add
aas
shlb
stos
cmpsb
mov
pushf
sarl
mov
fldenv
jbe
shl
jns
jg
xchg
in
dec
jecxz
pushf
sbb
push
ljmp
cmp
nop
jl
jecxz
dec
test
mov
out
popa
mov
mov
or
insb
inc
xorl
or
stos
mov
xlat
shrb
imul
inc
and
in
cmp
and
cmpb
adc
push
dec
into
adc
imul
jns
xor
lods
adc
insl
shll
clc
cwtl
xchg
subl
jle
dec
xchg
sarl
jge
xor
in
inc
inc
xchg
inc
mov
push
dec
test
cmc
mov
dec
es
aam
sbb
xchg
push
jo
jo
adc
push
aam
mov
das
jp
mov
pop
inc
xlat
jns
ret
jbe
xchg
jb
sbb
dec
movsl
mov
push
push
mov
insb
push
mov
pusha
nop
out
outsl
out
and
xor
lock
mov
inc
mov
add
jle
insl
xchg
inc
andl
ss
addr16
mov
push
jg
sbb
cmp
mov
mov
mov
mov
mov
repnz
dec
rcrl
mov
add
or
lods
ja
mov
js
ret
pop
or
mov
cli
or
fsubs
push
sub
aad
cmp
cwtl
pop
sbb
mov
insb
pop
mov
sbb
sub
adc
mov
xchg
inc
lods
in
in
push
or
xor
push
fsubp
shr
pop
movsl
loopne
das
das
fsubrl
popf
addr16
out
loope
dec
call
push
shld
orb
sub
push
loope
add
jl
add
outsb
js
xchg
xor
pop
pop
jns
mov
mov
mov
adc
int
fsubrl
aam
cmc
mov
mov
insl
pop
mov
push
pop
add
insl
leave
add
dec
xchg
iret
push
ret
or
shrb
repz
jp
daa
and
sbb
xchg
cmp
sub
daa
pop
push
xor
call
adc
call
fs
sarb
mov
nop
aaa
clc
xchg
pop
xchg
pop
xchg
rcrl
imul
push
xchg
aad
pop
sarb
cmp
loope
fdiv
push
add
imul
adc
mov
jmp
rcr
dec
mov
addr16
loope
or
outsb
mov
ret
push
mov
ret
and
xchg
outsl
mov
ret
push
jecxz
or
xchg
nop
mov
xor
sahf
cmp
out
orb
andb
jl
xchg
sub
and
add
icebp
sub
dec
push
sbb
push
add
cld
lcall
dec
xchg
icebp
sbb
out
sbb
or
pushf
aaa
fcomi
mov
sbb
cmp
sar
cmp
imul
cmpsw
addr16
mov
xor
push
mov
inc
adc
cs
xor
jg
dec
or
mov
dec
inc
mov
add
gs
xchg
icebp
xor
and
and
and
cmp
mov
sub
test
sbb
test
mov
out
inc
sub
jb
aam
lock
out
jb
inc
outsl
lock
push
cld
repz
cs
xor
mov
push
or
xorb
mov
cltd
jno
adc
lret
adc
call
fildl
int3
push
fistpll
sahf
mov
and
pusha
sahf
lock
neg
dec
orl
lods
jg
xchg
jg
in
call
movl
mov
mov
sti
mov
cmpsl
je
test
popa
push
enter
xor
insb
pop
les
fcoms
sbb
pop
leave
or
push
push
dec
movsb
push
cltd
pop
push
gs
jae
in
leave
sub
outsl
test
aam
popa
sti
arpl
jmp
insl
fldl
jbe
stos
pop
repnz
movsl
int3
push
jno
lcall
ficomps
pop
inc
jle
into
negb
pop
idiv
fcmovb
jg
vshufps
push
or
add
movlps
jnp
popf
jb
int
movsb
jbe
out
call
in
mov
movsl
sysenter
sub
outsb
pop
pop
sti
daa
jnp
mov
adc
push
jecxz
aaa
jge
movsl
jge
mov
push
fcomp
lods
or
mov
inc
adc
cli
sub
pop
cld
xlat
push
cltd
and
fdivrs
xchg
inc
xchg
lea
add
pushf
sbbb
cmpsb
inc
mov
out
stos
pop
incb
pop
outsb
push
sub
out
push
mov
push
addr16
add
cltd
pop
shlb
je
and
xchg
jns
aam
xchg
shlb
fwait
into
mov
adc
das
call
jmp
pop
xor
aas
pop
rcrb
and
and
and
cmp
in
int3
rol
mov
and
dec
cmp
int3
inc
xchg
shll
mov
out
and
mov
mov
cmp
fsubrl
mov
pop
sub
pop
push
outsb
rorb
rclb
testb
and
push
or
js
and
jbe
cmpsl
and
pop
jmp
notb
pop
pop
or
xchg
add
sbb
cmpsb
call
xchg
adcb
mov
into
das
fimuls
xchg
mov
push
les
arpl
mov
das
add
mov
jg
fists
dec
mov
popa
sub
add
pop
add
sti
fldenv
scas
mov
push
pop
pop
push
and
sbb
xor
arpl
dec
sahf
jp
int3
jmp
lret
inc
sbb
mov
pop
sub
fists
add
out
pop
pop
movb
mov
imul
adc
out
mov
and
pop
or
cmc
lods
or
addl
pop
lret
push
xor
push
pop
or
test
out
subl
mov
stos
pop
xchg
outsb
push
stos
dec
jb
iret
add
lret
sbb
inc
jmp
call
push
addr16
sbb
mov
push
pop
mov
mov
in
mov
ret
sub
lahf
cmp
mov
iret
popa
insl
push
dec
dec
jle
adc
stos
mov
mov
dec
mov
cmpsl
and
out
lret
xlat
arpl
or
sbb
or
cmpsb
inc
dec
negb
jecxz
std
pop
mov
xchg
test
mov
mov
hlt
rolb
xor
loope
jl
xchg
in
shlb
push
leave
xor
mov
popa
xchg
inc
xchg
adc
push
test
out
adc
icebp
stos
push
out
adc
mov
pop
hlt
cld
add
call
mov
pushf
pusha
rorl
ret
jnp
xchg
loop
cmc
js
in
jl
sbb
jbe
jg
stos
and
into
mov
mov
or
sbb
add
popf
int
inc
inc
mov
inc
js
cmpsb
push
cld
int
cmovbe
dec
pop
shl
rsqrtps
xchg
hlt
nop
pop
pop
push
scas
in
hlt
aad
enter
sub
ds
or
xchg
fidivs
int3
sbb
mov
and
jmp
mov
jne
pop
add
pop
int3
insb
xchg
jb
pop
std
fcoms
scas
call
cmp
mov
or
or
pop
fmull
outsl
add
push
into
push
mov
popa
aad
leave
or
adc
sub
cmpsl
jns
scas
lret
inc
out
or
add
nop
ja
pop
lods
push
cmpsl
pop
adc
push
mov
loope
mov
iret
lods
adc
repnz
sbb
daa
out
cmp
movq
inc
rcrb
mov
adc
and
cmp
in
or
stos
xorl
xor
sbb
sbb
sbb
mov
call
popa
mov
cli
push
xor
pop
sti
mov
es
jns
mov
dec
sbb
inc
imul
cs
movsb
mov
rolb
outsb
in
mov
sbb
xchg
test
ss
dec
xchg
roll
rcl
je
pop
or
mov
sahf
lods
lods
fcompl
dec
pusha
fistl
insb
pop
mov
cmp
jns
lds
in
lods
das
lds
lock
adc
dec
int3
mov
sub
mov
stc
xor
push
lret
ss
iret
pushf
data16
lret
ret
push
xor
int
enter
inc
or
outsl
mov
and
xchg
sub
and
lahf
fneni(8087
or
movnti
mov
push
aas
push
add
lds
in
mov
leave
sub
aad
out
and
jae
outsb
pop
les
jl
loop
cld
sub
push
add
in
dec
rcrl
lds
int3
add
jns
xchg
aam
sbb
xor
push
movsb
cmpsl
repz
mov
stos
ja
mov
popf
rcl
and
pop
add
insb
cmp
popa
sbb
push
dec
mov
cltd
sarb
mov
xor
insb
rcr
sbb
pop
or
add
sub
ret
orb
push
rcll
shl
sbb
out
ds
pop
mov
aas
int3
push
fucompp
jnp
push
neg
je
dec
push
jb
cs
rcrl
cltd
ljmp
or
dec
mov
sub
stos
push
fucomp
fwait
push
les
iret
jp
push
in
gs
fs
shlb
mov
dec
sub
push
cwtl
adc
mov
push
dec
mov
fwait
cmp
mov
outsb
dec
std
imul
fisubs
loopne
sbb
xor
xor
inc
cmp
xor
call
xor
lahf
pop
mov
mov
sbb
in
pop
sti
mov
inc
scas
movsl
clc
shll
std
adc
mov
inc
call
pop
outsb
mov
inc
mov
or
inc
loop
outsb
pop
ror
ljmp
leave
pop
mov
in
rorb
shr
mov
mov
push
pop
sahf
and
iret
shll
in
lock
pop
gs
add
cmp
hlt
jge
movsl
cmp
dec
pop
test
dec
xchg
les
inc
cmc
xchg
rcll
cmc
adc
sub
mov
mov
jge
dec
js
dec
in
jmp
scas
mov
negb
pop
fsubs
xor
cmpsl
popf
jne
or
icebp
push
add
insb
inc
popf
jo
and
mov
ss
pop
add
lods
inc
or
arpl
mov
repz
jmp
sub
sbb
adc
sub
xor
mov
shll
jecxz
add
in
push
xchg
mov
sti
enter
add
cmp
xor
into
je
push
fcomip
inc
cmp
or
inc
mov
push
movsl
out
inc
mov
jmp
movsl
dec
into
lret
and
bound
push
sbb
pop
aam
push
into
jae
cmpsl
mov
inc
mov
xchg
and
adc
jg
adc
add
xor
lods
mov
dec
stc
and
outsl
xchg
xchg
test
xchg
cmp
jo
movsb
das
mov
cmpsl
sti
inc
stos
cmp
pop
jb
enter
and
cmc
stos
std
xor
sbb
sbb
or
push
xlat
notb
gs
ja
jmp
into
out
shll
xor
fstps
ljmp
mov
daa
iret
cltd
or
cmp
xchg
nop
xor
pop
lcall
push
aaa
and
sub
dec
inc
dec
push
repz
clc
mov
push
sbb
cmc
ja
nop
xor
lds
sbb
jbe
add
popa
jle
pop
lods
into
fisttpl
push
add
test
add
push
pop
add
nop
aas
xor
es
call
rclb
mov
decb
mov
and
clc
and
leave
pop
imul
in
icebp
lret
pop
rorb
dec
push
out
mov
andl
ds
outsb
jno
xchg
out
mov
aam
push
dec
mov
jle
inc
ljmp
ficompl
test
mov
lret
mov
in
jle
ljmp
jb
mov
popf
and
sbb
push
lea
add
imul
and
mov
jno
ja
subl
fsubrl
mulb
xchg
push
cmp
xchg
jnp
sub
jns
push
outsl
orb
mov
shl
lcall
mov
das
inc
adc
adcl
sub
outsb
push
mov
loopne
xor
shlb
and
imul
or
xlat
outsb
adc
inc
or
adc
mov
adc
cmp
mov
cmp
inc
jmp
insl
fcoms
scas
addb
insl
add
sub
or
xor
and
lret
addl
testl
rcrb
sub
jb
mov
pusha
imul
pop
test
mov
rorl
push
push
sub
dec
cmpsl
push
pushf
fwait
xchg
fdiv
inc
bound
lock
mov
pop
out
arpl
pop
pop
dec
cltd
test
sbb
hlt
pop
out
mov
dec
or
inc
mov
and
add
ret
pusha
jmp
test
xchg
aam
aas
dec
lods
xchg
lods
mov
notl
mov
lret
lret
xchg
xchg
dec
inc
movsb
dec
mov
jmp
or
sti
xor
sahf
lock
mov
call
push
lods
push
das
push
lahf
sub
rcrb
ds
push
sti
arpl
sbb
xchg
adc
and
jle
mov
dec
xchg
pop
cmp
adcb
andl
in
rolb
xchg
adc
loop
pop
outsb
jmp
test
or
push
mov
std
cmp
jmp
sub
stos
push
xchg
iret
xor
inc
xor
sub
addr16
out
icebp
rcll
inc
xchg
mov
out
ret
sbb
daa
icebp
cmpsl
dec
lock
dec
dec
scas
shll
out
inc
fldt
mov
movsl
repz
mov
xchg
adc
dec
or
loope
loop
xchg
aam
dec
cmpsl
insl
and
jle
mov
jmp
push
push
cmpsb
cmpsl
or
mov
scas
mov
inc
stos
sbb
fwait
mov
mov
nop
jg
insb
mov
sbb
pop
or
cmpsb
mov
movsl
adc
sub
scas
and
or
out
dec
mov
mov
dec
out
into
xchg
mov
jp
hlt
xor
xor
not
mov
mov
sete
cmc
pop
out
jmp
or
ficompl
xor
or
xor
in
push
dec
sbb
xchg
cmp
xor
movsb
mov
mov
insl
add
mov
xchg
bound
xchg
xor
lcall
mov
jns
hlt
fists
out
lods
inc
aam
scas
and
call
ret
mov
dec
or
xchg
adc
in
js
scas
mov
add
pop
or
imul
mov
fnstcw
ljmp
lods
fsts
sbb
adc
jle
inc
jg
lock
in
adc
test
bound
cmp
dec
mov
fdivr
inc
lahf
xor
lock
sti
lock
test
mov
fsubrl
inc
pop
add
or
popf
cmp
arpl
xor
std
loopne
cltd
test
andb
inc
mov
jle
insb
in
popf
dec
out
insb
push
dec
subl
lea
push
or
adc
arpl
out
pusha
mov
std
es
xor
cmp
cmp
popf
sbb
xchg
sub
inc
mov
inc
pop
jmp
mov
popf
jmp
sub
lods
xchg
loope
mov
cld
fs
repz
and
push
push
bound
sub
cmp
stc
push
rolb
mov
loopne
inc
cmp
push
inc
sbb
mov
cmp
pop
or
subl
mov
scas
push
cmpsb
add
dec
jg
push
iret
lea
adc
xor
pop
xchg
cmpsl
ds
hlt
mov
mov
daa
pushf
and
inc
pop
xchg
jno
or
inc
pop
call
pop
push
jnp
test
jmp
mov
xlat
pop
fdiv
rclb
dec
out
call
arpl
bound
loope
jo
out
fbld
lds
mov
jo
jo
push
sub
cltd
add
sbb
test
daa
fisttps
loop
push
mov
insl
sbb
and
and
daa
pop
movsl
imulb
fidivl
int3
sub
clc
dec
loop
incb
mov
xchg
ljmp
adc
fimull
hlt
cmp
dec
gs
sub
xchg
mov
cmp
rcrl
test
sbb
dec
mov
push
cli
jg
sbbl
push
outsl
shlb
out
aaa
jg
or
lods
orb
outsl
push
int3
jg
sbb
pusha
mov
and
pop
and
roll
in
add
cmp
sbb
std
fidivs
pop
lods
dec
mov
mov
aaa
xchg
lea
jl
rolb
mov
sbb
scas
cwtl
or
xchg
insb
inc
ja
inc
lock
fwait
hlt
mov
repnz
inc
xor
sub
mov
inc
in
cltd
insl
mov
and
xor
pushf
cmp
addl
int
xchg
fidivs
das
mov
cmpsb
popf
cmp
rclb
std
xchg
mov
sbb
iret
sete
movsl
insb
inc
ja
scas
dec
int3
ficoml
mov
stos
jo
pop
mov
test
out
movsl
sub
lds
aaa
xchg
sbb
add
add
add
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
add
add
add
sbb
sbb
and
and
sub
sub
xor
add
add
add
sbb
sbb
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
jo
add
add
add
mov
cmp
cmp
cmp
mov
add
in
ss
ss
ss
add
add
or
