dec
arpl
out
mov
imul
iret
sub
movsbl
push
add
stos
xchg
cmp
xorb
bound
out
loop
cs
cltd
popf
jb
mov
pop
pop
jge
push
dec
mov
dec
leave
rolb
in
xchg
mov
rorl
ja
scas
xor
fs
daa
sbb
movsl
daa
xor
fidivs
arpl
push
mov
dec
jne
rorl
sti
inc
pop
mov
cld
mov
xorl
insl
call
adc
fs
cltd
xchg
push
xchg
push
xchg
or
pop
add
test
sbb
sub
adc
shrb
and
pop
fcmovnbe
imul
push
dec
movsl
lods
inc
into
xor
inc
rolb
jno
pop
pop
ljmp
popa
insl
or
sbb
out
xchg
adc
inc
or
es
cmp
jnp
mov
cmp
sub
lods
fwait
iret
mov
in
fcmovu
dec
leave
call
pop
lods
jb
push
jp
iret
dec
std
out
sbb
pushf
ret
cmp
js
adc
or
add
out
push
movsl
xchg
sahf
scas
cs
sub
bndstx
fs
mov
daa
inc
cs
pop
movl
divps
and
push
rorl
sub
push
iret
add
clc
inc
nop
cmc
cmc
xor
cmpsb
adc
xchg
icebp
enter
decb
dec
xor
stos
das
mov
jl
xorl
ss
inc
stos
aaa
dec
fsts
shll
incl
test
filds
push
xchg
mov
iret
out
out
push
js
insb
push
cld
mov
adcl
js
arpl
mov
push
xor
xor
adc
mov
mov
stos
sub
fmulp
jge
arpl
fstpt
push
inc
call
iret
fdivrs
inc
jle
lock
cmpsb
push
sub
out
sarb
xor
or
das
add
add
sbb
xor
or
mov
insl
dec
and
jp
mov
pop
daa
loopne
dec
div
lret
sbb
enter
ret
repnz
clc
xchg
xchg
sbb
imul
xchg
or
sub
pop
adc
jecxz
xchg
insl
and
add
cmp
push
jbe
sbb
das
lret
in
mov
mov
rcr
aaa
hlt
dec
jb
dec
lret
lock
inc
sbb
adc
or
imul
push
cmp
xchg
adc
mov
popf
addl
sarl
scas
stos
loope
and
fisubs
popf
aad
push
stos
iret
enter
jg
jle
jnp
jl
out
mov
subl
out
jb
out
mov
dec
jmp
adc
xor
jbe
stos
pop
lods
lods
fxch
dec
shlb
mov
xor
dec
cli
mov
mov
imul
je
push
shlb
leave
enter
in
push
imul
outsl
push
or
add
dec
mov
push
fwait
sub
pop
cmpsl
rsqrtps
add
cmp
push
je
xchg
sub
sub
lock
and
aas
rcl
dec
xor
dec
inc
sub
lds
jp
jbe
jl
push
push
push
dec
sbb
fs
push
jnp
mov
add
pop
mov
arpl
dec
sub
mov
pop
mov
mov
ss
dec
stos
mov
push
xchg
test
std
icebp
mov
jnp
pusha
fidivrs
lcall
leave
insb
lret
mov
inc
lds
je
icebp
add
xor
or
lods
out
adc
cltd
cmp
push
aam
test
into
mov
push
mov
shrb
mov
adc
int3
mov
lock
movsl
clc
imul
lret
out
pop
cmp
loopne
cmp
stc
sbb
test
je
adc
or
pop
cmp
dec
mov
or
xor
xchg
stos
adc
and
pop
mov
fsub
push
pop
imul
xchg
int3
xchg
out
xchg
inc
cmp
mov
enter
sbb
vpsubb
sbb
fwait
sbb
xlat
or
add
aas
fstpt
fidivs
scas
push
aaa
insb
lds
in
adc
lock
iret
dec
jo
inc
dec
call
inc
pop
push
stc
int
jb
test
je
sub
movsb
pop
sbb
cwtl
addr16
cmp
xorb
cs
mov
movsl
add
ja
aas
pop
out
stos
xor
sub
cmpsl
sub
sbb
scas
mov
rcrb
lret
pop
cmp
sti
xor
jmp
jno
cmp
fcomi
mov
push
pop
insb
sbb
into
adc
mov
jb
mov
jne
add
cmp
pop
addr16
in
and
rolb
pop
xchg
mov
mov
dec
push
in
into
fidivrl
int
jno
pop
xlat
imul
into
insl
jmp
inc
loope,pt
loopne
mov
sbb
test
mov
cwtl
add
mov
xchg
test
mov
clc
movsb
cld
pop
lahf
cs
pop
pop
imul
fidivrl
stos
loope
call
inc
je
cli
cmp
sub
jno
sti
insb
imul
out
mov
fwait
loope
out
xor
pusha
xchg
pushf
out
adc
das
aas
adc
pop
or
adc
dec
sub
xor
stos
or
fisubl
pop
cmpsl
fcompl
lcall
lret
or
sub
jle
lock
divl
dec
push
cmc
inc
subb
loop
sbb
in
mov
movsl
mov
pop
push
lods
mov
or
cmp
push
fcmovnu
mov
lock
into
mov
sti
int
pop
adc
sbb
stos
dec
test
popa
push
xchg
enter
ret
mov
jle
cmp
out
das
mov
cmp
mov
jle
push
xor
leave
sub
insb
sub
test
push
xchg
mov
dec
xchg
stos
cmp
inc
add
and
pop
sbb
cmp
dec
loop
sub
lcall
inc
xchg
fbstp
xor
pop
lcall
cmpsb
sbb
lods
xchg
sbb
inc
xchg
shll
or
ds
sarb
inc
dec
pushf
lods
scas
jle
mov
inc
test
or
fwait
push
fistpll
mov
sub
pusha
sub
jnp
and
jmp
rcll
test
mov
sub
dec
sbb
adc
test
call
cmp
aas
jg
mov
shrb
repz
adc
in
scas
aas
push
add
dec
mov
adc
jp
push
pop
lds
ret
inc
adc
mov
insb
push
add
xor
out
call
add
sbb
je
add
mov
adc
dec
mov
mov
mov
scas
jno
popa
and
rcll
add
dec
mov
inc
sbb
mov
push
out
or
sbb
or
jl
hlt
add
adc
in
add
xor
cs
fisubs
mov
push
rcrl
iret
std
fdivr
negb
dec
push
cmp
lret
xor
dec
lods
in
dec
push
inc
ret
imul
or
sbb
pop
xchg
xchg
in
jge
jno
sbb
add
add
sub
sbb
and
or
fimull
sub
and
jae
pop
movsb
adc
add
jl
aad
addr16
jno
inc
int3
out
fs
lcall
xchg
jge
sbb
add
add
in
xor
cmp
aas
adc
stc
and
pop
and
push
cmp
stos
push
inc
lods
inc
sub
iret
repz
fcompl
jnp
pop
mov
cmp
mov
shrb
xchg
outsl
xchg
repz
outsl
cmc
push
add
lcall
or
das
and
xor
mov
cmp
iret
dec
cs
mov
lds
sti
movsl
es
in
aad
popf
in
push
mov
push
sti
inc
mov
add
fmuls
call
stos
sbb
lods
adc
xchg
test
mov
orb
dec
je
cwtl
ret
dec
inc
sarl
enter
add
sub
in
icebp
pop
movlps
dec
in
inc
inc
adc
mov
ljmp
out
in
in
xchg
ds
adcb
loopne
mov
dec
cmpsl
cmp
cmp
imul
and
sahf
pop
lea
loop
lock
add
jnp
dec
jl
sub
sub
stc
pop
pop
fnsave
push
out
push
add
ret
in
sbb
cltd
xchg
jb
lods
jno
jbe
outsl
out
push
add
enter
int3
or
dec
sub
hlt
xor
push
pusha
and
int3
sub
mov
clc
and
repnz
call
xacquire
cmp
cltd
sbb
cwtl
bound
xchg
int3
stos
pop
push
into
dec
xchg
mov
mov
test
aas
in
aas
adc
mov
enter
sbb
and
mov
repz
jle
push
add
xlat
aad
dec
mov
dec
or
loope
mov
cmp
jae
xchg
shl
pop
cmp
aas
mov
push
shlb
cwtl
lods
push
xchg
notb
and
pop
xchg
cmp
mov
pop
mov
pop
dec
rcrb
mov
push
xor
lret
lret
lock
jnp
jl
jae
mov
sub
ds
push
mov
daa
mov
inc
xor
sbbb
cmpsl
or
push
or
mov
mov
xchg
mov
jns
rcrb
popa
push
std
rolb
jno
aas
ljmp
inc
dec
mov
rcr
inc
pushf
mov
aad
repz
jmp
popa
jg
bound
inc
sbb
sub
sub
lahf
xor
repz
or
or
mov
adc
int3
mov
rorl
add
push
lret
inc
stc
enter
pop
aam
lret
outsl
lcall
push
movb
jb
iret
div
inc
cwtl
push
hlt
and
popf
test
out
push
xchg
add
call
mov
sahf
jmp
mov
adc
add
add
push
xor
dec
add
add
add
mov
ds
fsave
push
imul
dec
loopne
sub
movsb
inc
lds
pop
jge
std
shll
je
sbb
sarb
push
adc
sub
xchg
add
or
jnp
xchg
xor
sub
or
and
es
jmp
lret
mov
sbb
sub
rorb
fsubr
xchg
jle
loope
sbb
imul
arpl
fwait
out
mov
jb
adc
and
and
mov
cmp
sarl
mov
push
and
daa
scas
pop
lcall
loopne
adc
push
inc
test
cmpsb
xchg
jle
jle
cmc
jne
orl
gs
mov
dec
scas
adc
or
pop
lea
and
pop
lods
jns
aaa
lock
aaa
pop
and
outsb
pop
fldenv
sti
ret
stc
mov
into
mov
inc
inc
loope,pt
icebp
jb
adc
fs
jl
in
sub
int
adc
mov
cmp
or
fdivrl
notl
jecxz
mov
into
xor
movsl
jnp
fdivrp
mov
jge
loop
inc
fcoml
dec
inc
sti
ret
jl
inc
aam
sti
addr16
jle
xchg
jge
mov
inc
in
fwait
push
popa
insb
lret
fidivl
inc
add
sub
mov
subb
and
scas
lret
fnsave
cmp
adc
mov
sbb
pop
fucomip
jp
jnp
jns
dec
js
movl
sbb
lock
jmp
jo
mov
or
loope
push
push
mov
mov
sub
mov
pop
test
mov
cmpsl
add
cwtl
xchg
cmp
adc
xor
dec
mov
ret
inc
mov
int
and
ljmp
dec
scas
ret
je
dec
inc
lds
loope
div
icebp
cwtl
inc
push
loop
out
mov
adc
xchg
push
sbb
xchg
xchg
fdivl
mov
mov
iret
stos
cltd
inc
cs
mov
pop
push
pop
lahf
not
sub
push
ror
dec
xchg
inc
inc
inc
mov
mov
cld
push
addr16
dec
loopne
cmp
fwait
adc
daa
or
pop
add
aaa
and
and
aas
mov
movsl
loopne
cltd
mov
negl
daa
push
mov
inc
jno
dec
insl
rclb
dec
dec
movb
fs
repnz
inc
out
popf
clc
push
xchg
jge
outsl
push
mov
loopne
gs
pop
nop
lahf
dec
mov
sahf
imul
xchg
mov
mov
sub
push
dec
shll
jbe
cs
add
jle
mov
inc
dec
in
pop
sti
out
jecxz
cld
xchg
cwtl
mov
loopne
mov
lea
add
lea
mov
fstpt
rcr
push
stos
add
lods
push
dec
push
shll
inc
rcrl
jg
jb
test
outsb
jae
inc
jbe
incb
sbb
cltd
cld
push
push
andb
lahf
sub
add
loope
mov
sbb
mov
add
into
jmp
fisubl
sub
mov
repz
mov
or
xchg
clc
daa
adc
mov
shrl
xlat
scas
pusha
sub
sbb
inc
dec
cltd
inc
iret
xchg
xchg
jne
stos
push
hlt
mov
dec
outsl
or
in
xor
pop
push
sub
adc
scas
adc
pop
daa
int3
push
push
and
jns
stos
ja
test
lods
lds
lock
es
jl
or
xlat
in
lret
outsl
dec
data16
shll
sbb
negb
adc
jno
dec
cmc
mov
loop
loope
pop
sub
and
cmp
cmpsb
or
shl
xchg
mov
push
ficoms
jge
sub
cli
and
pop
cmc
cmc
push
je
mov
push
xchg
pusha
adc
cmpsb
lds
cmp
notb
add
jmp
arpl
in
adc
mov
or
mov
cmpsb
lea
push
pusha
fistpll
xchg
mov
leave
xor
jno
cs
mov
cld
fistpl
jno
add
sarb
leave
scas
daa
inc
ficompl
ret
sar
jg
adc
jp
xchg
jg
cmp
xchg
sbb
adc
cltd
and
push
out
test
and
filds
movsl
cmp
iret
sub
pop
mov
jae
xchg
not
call
dec
jmp
inc
mov
jbe
fnstcw
in
call
and
addr16
and
sbb
lods
or
mov
sahf
push
mov
fsubr
scas
stos
aam
cs
les
std
fcomps
lret
inc
jecxz
in
addr16
data16
sbb
cld
test
sub
cmpsb
pop
loop
mov
cli
rolb
xchg
test
subb
push
mov
and
outsl
lret
pop
push
pop
enter
pop
fisubl
xchg
mov
inc
outsb
push
and
gs
sbb
clc
outsl
out
gs
and
fs
bound
cmp
mov
popf
mov
or
and
jbe
call
and
push
mov
sub
or
mov
cmp
xor
lret
pop
popa
dec
int3
lcall
push
jg
fisttpl
or
inc
dec
cmp
mov
outsl
je
mov
cmp
push
fiaddl
and
cmp
pushf
movsb
pusha
mov
mov
inc
sti
cmpsb
jg
xchg
fcomps
ds
or
int
inc
pop
daa
jp
push
pop
pusha
lods
lret
les
scas
mov
jns
fs
fdivl
sbb
fsubl
mov
mov
and
push
mov
mov
das
inc
cs
scas
stc
leave
push
xor
shrl
jb
dec
lods
and
add
stc
rcrl
shr
push
push
aad
out
inc
mov
cmpsb
adc
xchg
adc
sub
mov
xor
add
mov
cmp
lods
dec
fstl
gs
movsl
shlb
or
outsl
jo
dec
cli
nop
inc
dec
xor
inc
and
fidivrl
add
loope
notl
xor
cwtl
out
cmp
inc
mov
in
jecxz
int
std
push
add
sbb
cmp
mov
and
and
mov
xlat
clc
daa
in
push
adc
stos
push
or
ret
cmc
sbb
push
adc
dec
pop
jge
xor
out
push
test
loope
and
sbb
stos
xchg
aam
or
iret
orl
fistpll
aam
add
mov
sub
pop
cltd
push
pop
jns
fucomp
jmp
cltd
outsl
lret
dec
inc
push
jp
stc
sahf
lds
jle
xchg
repnz
dec
ja
or
in
cltd
cmp
lcall
shlb
mov
xor
lea
mov
aam
fcomp
fld
sub
cltd
rclb
clc
mov
fisubl
shrb
aam
cmp
sub
out
and
inc
mov
subl
loop
cmp
dec
xchg
cltd
or
xchg
and
or
inc
and
imul
sbb
mov
mov
scas
pop
subl
sub
pop
fdivrs
jo
add
xor
pop
jg
push
lock
push
ret
daa
lcall
cld
mov
mov
call
xchg
sub
test
xchg
lods
nop
cld
std
jp
cmpsl
add
lret
cmpsb
lea
bound
popa
mov
lret
cli
mov
clc
cmp
inc
ret
outsb
test
lods
inc
ret
mov
add
aad
ljmp
loopne
and
std
adc
push
orl
and
xor
push
mov
xor
sub
rcr
sub
xchg
pop
mov
push
faddl
lret
out
or
jns
ret
mov
call
int3
jb
in
or
push
outsl
xchg
out
add
cwtl
addr16
xor
test
mov
mov
mov
add
push
cmc
movsl
xlat
movsb
mov
test
jmp
notl
mov
clc
xchg
dec
cmc
sbb
lret
out
mov
cmp
loopne
repz
cmp
xchg
adc
loope
mov
mov
nop
pop
and
mov
out
movsl
cmpb
fisubs
aad
xchg
test
aam
xchg
and
lret
call
jmp
push
outsl
lret
dec
cltd
xchg
rcrl
sub
jge
add
jmp
add
loopne
mov
lahf
cmp
xchg
jg
or
lea
sbb
pusha
sarl
iret
sub
add
clc
fdivr
pop
xchg
stc
icebp
out
dec
lret
shlb
dec
or
imul
cwtl
xchg
jb
mov
lahf
mov
insl
xor
loope
mov
jp
xchg
cld
sub
jmp
mov
cmp
push
aam
dec
push
aas
rclb
pop
mov
jnp
addr16
dec
stos
pop
jp
les
push
mov
loopne
int3
ret
repz
jbe
jnp
jecxz
hlt
popf
mov
cmc
leave
sbb
add
xor
in
ss
aas
inc
mov
es
mov
loop
aas
jae
sbb
mov
sub
sub
mov
fildl
push
imul
push
pushf
jecxz
mov
fs
sub
mov
push
hlt
push
xchg
xchg
pop
in
pop
push
mov
into
orl
inc
or
sub
divl
add
out
fstp
sarb
rorb
test
xor
pop
xlat
enter
jmp
aas
fcoml
mov
dec
int
and
cwtl
outsb
xor
sbb
and
mov
in
mov
loope
ds
out
mov
popa
out
int3
fwait
loopne
sub
pop
mov
xorb
les
ficomps
mov
pop
leave
sub
stos
xor
loopne
mov
cltd
sbb
pop
hlt
mov
push
xchg
out
push
je
inc
sahf
jmp
repz
or
mov
orb
les
sub
cmp
mov
dec
sub
push
sarl
pop
stc
dec
add
push
mov
js
aad
loop
dec
nop
js
imul
icebp
outsl
mov
ds
add
jnp
out
xchg
adc
cmp
push
push
sub
cld
and
mov
pop
mov
push
mov
enter
test
and
xchg
movsl
sub
lods
je
ror
cmp
int
dec
fiadds
fwait
sbb
jge
pusha
xchg
cld
xor
aad
or
lret
insb
or
dec
adc
add
mov
mov
xchg
fsubrl
xor
mov
xor
rcrb
cs
push
aad
cmpsb
repnz
je
lock
jnp
leave
push
jne
push
js
arpl
mov
adc
xchg
jecxz
bound
pushf
sbb
cmpl
aas
mov
cmp
test
scas
sti
mov
xchg
rcrb
sub
cmpsb
and
dec
stc
push
fistps
cmp
jnp
cwtl
mov
inc
aam
lds
cltd
lock
fists
add
in
mov
mov
out
ss
mov
mov
imul
jbe
mov
aam
mov
cs
inc
sub
cli
push
movsl
outsb
jae
mov
shlb
dec
jecxz
lret
lahf
popa
dec
mov
cli
inc
out
xor
lods
nop
adc
scas
stos
pop
jmp
outsb
pop
push
aad
icebp
xor
push
xchg
les
loopne
dec
pop
mov
push
push
mov
enter
sub
inc
cli
les
icebp
push
pop
adc
adc
dec
std
sbb
jne
pop
sbb
jge
or
push
dec
push
sub
mov
sub
pop
ss
mov
movsl
xorb
sbb
xor
dec
mov
jnp
and
icebp
pop
movsb
daa
imul
cmc
dec
in
std
sbb
cmp
inc
ret
sbb
inc
push
xchg
jle
xchg
add
mov
mov
mov
ss
pop
js
lock
add
into
jmp
dec
lds
dec
aaa
clc
lock
outsb
sti
arpl
lock
iret
dec
inc
mov
pushf
xchg
inc
sbbb
xchg
js
cmp
aaa
insb
imul
and
mov
fsubrs
lcall
arpl
sbbb
ds
jae
mov
into
xor
outsb
mov
ficompl
fisubs
adc
imul
mov
inc
jmp
jnp
sar
inc
or
sub
push
sub
and
loope
fistps
jo
xchg
fimull
and
pop
jl
dec
xchg
mov
dec
mov
jecxz
dec
in
sub
jg
xchg
mov
mov
push
jp
ds
xor
das
addr16
fs
xor
bts
mov
pop
pop
and
loopne
sarl
xor
adc
pop
repz
ds
arpl
xor
in
retw
inc
mov
mov
lock
cmc
push
outsl
mov
into
lret
mov
incb
lods
or
imul
test
xor
lret
xor
ficoml
or
pop
adcl
xor
lds
mov
sbb
loopne
lahf
fidivs
jb
clc
pop
adc
mov
rcll
or
push
adcb
xchg
cli
loope
aas
gs
jl
mov
cmpsb
js
or
in
pop
push
enter
push
leave
and
stos
xor
xchg
lods
sub
push
pop
daa
das
jge
xor
fisttpll
dec
dec
es
repnz
sti
movb
out
jecxz
repnz
mov
int
imul
arpl
ljmp
sbb
in
shrl
mov
cmp
lods
test
mov
es
xor
jno
inc
scas
cmp
mov
dec
push
fisubl
fbld
pop
movl
xor
adcl
cmc
push
outsb
inc
jl
pusha
aas
test
scas
mov
jns
cli
adc
in
or
testb
pop
xor
in
mov
adc
xor
sarb
mov
std
and
movsb
sub
fiadds
mov
lret
test
movsl
dec
movsl
clc
or
fcomip
test
hlt
xchg
lock
out
add
insl
xor
adc
mov
xchg
adc
cwtl
cmp
movsl
pop
xor
pop
add
xor
xor
or
lods
stos
cli
mov
push
sti
loop
shll
mov
sbb
mov
sti
jp
jmp
cmp
js
xor
dec
lods
nop
sbb
mov
repnz
mov
add
fadds
mov
cli
test
adc
test
icebp
daa
mov
in
push
fcom
xlat
shlb
ret
adc
inc
inc
jle
cs
stc
call
or
arpl
test
and
fldt
adc
pop
jp
push
pop
add
sarl
lret
stos
mov
je
cs
ret
arpl
movsl
jnp
pop
add
push
stc
xchg
mov
jb
inc
inc
mov
cld
add
jge
inc
jecxz
fs
push
adc
adc
movsb
sahf
lcall
dec
or
mov
mov
adc
push
and
and
gs
fwait
mull
adc
dec
scas
jno
dec
cmp
ret
inc
inc
aam
lea
fdivrp
cmp
jmp
mov
or
jns
xor
out
and
adc
xchg
add
mov
movsl
push
cmpsb
mov
pop
mov
inc
sti
es
jl
scas
jno
add
shr
scas
int3
lret
cmp
xor
sarb
jl
hlt
shl
cld
mov
in
imul
push
insl
jns
arpl
hlt
scas
stos
stos
adc
mov
push
ja
mov
mov
add
stos
cmpsb
mov
and
mov
pop
out
fisttps
jne
jmp
fiadds
and
cs
mov
push
shrl
call
and
mov
cltd
xor
loop
push
xchg
xor
add
stos
ds
xchg
sub
pushf
stos
push
xor
and
lods
mov
lds
aad
shrl
shll
cmpsl
loop
push
add
test
out
sub
xchg
pusha
in
xor
mov
xchg
jae
or
out
divb
neg
test
mov
ds
xor
jl
sub
shrb
jg
shl
sbb
sbb
int
pop
inc
in
pop
jge
mov
cld
adc
imul
loop
cmp
fidivl
adc
leave
dec
jno
inc
fiaddl
mov
clc
jo
xor
stos
lods
outsl
push
cmpsl
sub
cmpsl
push
rcrl
nop
aad
cmc
or
cmpsb
arpl
sbb
push
inc
test
jne
repnz
into
and
mov
aas
gs
nop
lahf
lcall
inc
fisttpl
cwtl
xchg
xor
out
test
cs
mov
mov
pop
out
mov
rolb
sbb
clc
int
jge
dec
icebp
pop
mov
out
sub
data16
cwtl
vprotd
or
out
add
lahf
mov
insl
in
adc
mov
cwtl
mov
mov
xor
shll
dec
es
push
in
mov
stc
repnz
out
cmc
add
push
gs
xlat
mov
xchg
aaa
add
or
aaa
cmp
neg
mov
xchg
mov
mov
and
or
push
shlb
sub
xor
int3
xchg
mov
movsl
clc
sbb
push
shl
and
out
cmp
loopne
mov
movsb
xor
imul
insb
sub
es
push
test
fisubrl
icebp
shll
aaa
xor
xor
mov
rcr
fiaddl
sub
ficompl
fnstcw
stos
push
loop
pop
sbb
push
inc
icebp
js
inc
pop
sbb
loope
ljmp
xorl
add
lcall
stos
lahf
fists
pop
test
push
push
aas
in
add
cltd
cmp
dec
xor
ss
das
in
and
dec
xchg
pop
jg
enter
dec
dec
lret
icebp
in
pop
ja
inc
test
stc
mov
negb
push
insl
or
cwtl
lds
sbb
xor
mov
or
pop
xorl
sub
mov
jns
push
cmpsb
sub
int3
add
dec
out
xor
sub
cmc
lods
inc
or
inc
add
jb
cltd
push
je
test
test
fwait
mov
gs
xor
pushf
jmp
xor
mov
loopne
xchg
xlat
xor
mov
scas
xchg
leave
pop
mov
xor
pop
stc
dec
sarb
cmp
xlat
imul
in
sti
mov
jbe
mov
in
jmp
add
loopne
adc
cmp
mov
lea
mov
push
aad
dec
into
mov
into
and
jp
movsl
xor
pop
mov
leave
aam
loop
cmp
icebp
push
inc
hlt
adc
xchg
repz
out
cmc
push
outsb
insl
add
sbb
cmp
pop
or
add
test
push
popf
mov
outsl
add
popa
fidivrs
xchg
mov
mov
rcrl
and
aam
scas
and
sarl
enter
xor
lds
cltd
inc
pop
adc
iret
pop
jge
push
jmp
mov
insb
push
sti
enter
adc
imul
test
add
rclb
sub
aas
adc
subb
mov
pop
pop
shl
hlt
push
adc
ds
mov
leave
addr16
aad
adc
std
clc
mov
in
hlt
loop
pusha
out
sti
std
lcall
nop
lahf
inc
xor
adc
xchg
add
mov
aam
addl
and
sub
movsl
xor
pop
imul
push
sbb
aam
xor
push
out
sbb
dec
lods
js
xchg
cld
fdivrl
testb
in
call
jp
pop
mov
xor
mov
or
jge
rorb
mov
xor
mov
int3
add
scas
inc
mov
mov
subl
enter
inc
xchg
imul
gs
sahf
hlt
bound
jmp
mov
popa
shll
push
notb
or
mov
xchg
mov
frstor
rcll
loope
decl
rcrb
lds
or
ffree
loopne
pushf
mov
insl
nop
jbe
rorl
icebp
sbb
push
outsb
scas
push
dec
pusha
and
mov
enter
or
sub
mov
int3
out
add
movsb
mov
and
push
xor
aaa
dec
ret
mov
cwtl
cmp
or
pop
xor
pop
mov
test
test
sbb
js
or
jb
sub
addl
in
jb
lret
xchg
frstor
orb
test
enter
inc
push
xor
stos
clc
inc
scas
inc
lods
icebp
jno
cmpsb
pusha
cld
pop
sub
jl
dec
push
sub
or
inc
sti
jl
ss
es
jo
into
cmc
movl
xlat
mov
xchg
adc
aam
or
int3
cmp
ljmp
inc
dec
xor
dec
mov
push
mov
rcrb
pop
push
push
cmp
xlat
decl
inc
leave
xchg
or
inc
cmp
xchg
xchg
repnz
ja
push
loop
sbb
out
jge
mov
add
fldl
test
sti
loope
out
mov
dec
cs
dec
pop
jnp
push
inc
push
andl
push
mov
aaa
dec
ret
scas
sub
stc
mov
and
repnz
push
hlt
lahf
iret
dec
push
test
popa
jmp
fwait
popa
stos
push
lea
sub
sbb
mull
bound
mov
push
int3
fiadds
cmp
mov
mov
rolb
dec
dec
and
clc
mov
push
lock
dec
pop
xchg
add
cli
arpl
in
icebp
xor
ljmp
or
pop
cmpsl
sbb
pop
xchg
xlat
xor
inc
clc
xchg
aas
jnp
inc
ss
jo
jne
inc
lret
mov
mov
jmp
sbb
ljmp
jns
xchg
or
ss
stos
lahf
pushl
xchg
jmp
push
lahf
lods
mov
push
push
lea
rcrl
mov
ja
stos
mov
cmp
lds
fwait
sub
filds
addr16
ret
into
in
or
incb
ret
xchg
jb
enter
lea
out
mov
pusha
pop
out
pop
lcall
adc
into
mov
cmpl
dec
cmp
mov
into
xor
aaa
xchg
cs
movsl
and
in
fcomp
jbe
sub
loop
sti
ror
jl
and
cltd
push
test
cld
jbe
xchg
or
lea
and
sbb
adc
mov
or
and
clc
fiadds
lds
jmp
ret
cs
fstps
movsl
jo
adc
shl
iret
iret
lret
dec
int
sub
sahf
lds
repnz
mov
bound
pop
in
icebp
sbb
out
std
cwtl
adc
das
push
or
push
sub
mov
pop
fdivrl
push
xchg
mov
in
adc
scas
insl
inc
or
ficomps
cmp
lret
test
adcl
pop
adcl
mov
mov
adc
xchg
sbb
scas
sbb
dec
movsl
mov
sub
enter
dec
shlb
sbb
xor
int3
imul
xor
dec
sub
xor
mov
repz
ja
add
popw
add
arpl
mov
ss
das
or
and
rcrb
popf
sarb
dec
mov
jle
test
inc
sub
jg
mov
ficomps
push
outsl
fwait
dec
push
mov
inc
xchg
stos
lret
punpckhdq
sub
test
sub
push
aaa
xchg
jle
push
cmp
or
add
mov
lds
enter
test
shrl
mov
popa
rcr
cld
cmc
push
out
dec
dec
adc
into
or
cltd
jmp
cld
popf
mov
push
cmc
fildl
outsb
js
iret
mov
jb
adc
cs
rclb
pop
and
cld
flds
clc
mov
mov
xor
test
popa
js
popf
std
fmuls
xor
ror
adc
jecxz
add
inc
sub
pop
pushf
jnp
adc
jl
imul
mov
call
push
mov
mov
mov
mov
fadds
xchg
mov
dec
mov
push
scas
dec
inc
and
movsb
bnd
mov
nop
dec
push
popf
mov
ret
scas
sbb
clc
adc
enter
bound
xchg
push
sti
iretw
movsl
popf
cwtl
stc
mov
push
stos
xchg
adc
jl
or
xchg
sub
lret
sub
push
sub
arpl
lret
insl
ss
push
or
arpl
cwtl
hlt
pop
cli
outsb
nop
jg
xchg
repz
stos
xchg
or
push
cmp
out
lcall
mov
mov
xor
jo
mov
adc
stos
or
cs
mov
ret
adc
shrb
sti
pusha
dec
pop
in
push
imul
insl
push
jo
push
cmc
adc
fnsave
jecxz
cmp
sub
mov
int3
test
sub
cmpsb
negb
in
pop
mov
dec
xor
mov
ret
xlat
fwait
jl
js
push
je
inc
jno
jl
dec
push
pushf
outsl
lret
dec
add
push
test
stos
or
scas
and
inc
mov
aas
stos
movsb
mov
mov
or
xchg
pusha
ret
les
add
fadds
ss
clc
mull
and
or
daa
std
pop
into
call
fsubrl
dec
mov
lea
inc
xor
push
xchg
or
pop
in
imul
cmpsl
mov
loope
mov
out
mov
cmc
xrelease
add
daa
mov
and
push
ret
inc
sub
or
inc
insb
enter
push
repnz
inc
sub
cli
lret
cmpsl
std
js
or
lods
int3
add
lock
sbb
xor
xorl
jne
or
movsl
and
add
push
mov
movsl
sub
int
loop
mov
ds
shll
inc
or
mov
movsb
sbb
xchg
insb
cs
mov
punpckhdq
sub
test
js
gs
sbb
aaa
xchg
mov
cmp
ds
xchg
shrl
jns
or
ss
mov
inc
sub
inc
xor
fnstcw
lds
lock
bound
out
movsl
fwait
inc
pop
pop
cli
push
sarb
xchg
repz
adc
sbb
pushf
imul
daa
and
jp
cmpsb
filds
ficomps
lret
adc
inc
daa
ret
fadd
lods
gs
nop
and
push
rorl
xlat
shlb
movsl
jbe
lds
cltd
inc
pusha
popf
stc
outsl
scas
data16
push
and
out
mov
sub
scas
or
divl
test
fcoms
stos
jb
mov
clc
inc
mov
sar
loopne
push
in
inc
insl
popa
les
inc
xchg
adc
ljmp
ja
or
in
sbb
sbb
cmpl
scas
adc
cmpsl
add
pop
xchg
ss
fildll
fnstsw
inc
movsl
jmp
sarb
jae
int
pop
jnp
cltd
lahf
cli
insl
mov
jmp
add
mov
xchg
dec
sahf
sysenter
or
test
lea
fiaddl
sarl
enter
sub
jb
mov
push
outsl
push
push
jmp
mov
int
lcall
jle
adc
and
dec
subl
repz
out
mov
arpl
pop
sahf
lods
mov
and
cmpb
mov
sarb
and
jb
mov
sbb
push
fsubr
xlat
enter
ja
inc
outsb
fcmovnb
push
sbb
xor
call
add
icebp
mov
cmp
arpl
out
stos
adc
dec
mov
and
or
mov
fisttpll
repnz
xor
das
mov
and
or
pop
pop
imul
lret
test
into
movsb
fs
fcompl
aam
js
xchg
cld
jmp
jmp
xor
sbb
insw
push
cmp
leave
mov
icebp
mov
push
mov
pop
cmp
dec
lret
xor
xor
fnstcw
and
addr16
xlat
sbb
lods
ret
mov
xchg
push
pusha
xor
mov
sahf
push
or
mov
adc
lret
lods
mov
or
movsl
subb
mov
push
mov
je
mov
ret
fsubs
and
jle
lods
sahf
repz
in
stc
adc
dec
push
sbbb
test
xor
jge
test
out
push
insb
xchg
or
enter
push
dec
xchg
adc
or
add
flds
push
mov
out
test
or
test
sbb
clc
jp
cmpl
ret
add
loop
dec
aam
int
xor
sub
sbb
test
mov
out
inc
pop
xchg
jecxz
adc
jle
mov
xchg
and
or
fidivrl
push
push
enter
sub
sti
fcoms
rolb
aam
insl
dec
je
int
lcall
icebp
cld
loopne
jo
mov
cmp
mov
push
sbb
inc
mov
sub
and
mov
pop
adcb
mov
stos
jb
mov
shl
cmp
outsl
je
dec
pop
push
sar
push
push
out
std
sub
int
jnp
es
xchg
jo
fisttps
aad
cmp
sbb
inc
test
imul
pop
loope
in
ds
aaa
orl
out
sti
es
mov
aas
xor
dec
mov
rorl
cli
push
inc
je
jo
in
adc
pushf
mov
call
or
adc
mov
xor
arpl
or
pop
add
mov
push
mov
cmovle
inc
test
cmp
aaa
push
pop
xor
cmp
lea
ds
and
jge
int3
or
push
add
push
test
cmp
repz
pop
loop
mov
mov
mov
add
dec
jmp
mov
push
mov
ret
scas
rcrb
es
fstps
push
aas
rcrb
imul
adc
jl
sub
outsl
push
sub
add
ja
xor
sub
and
add
xchg
cmp
mov
sbb
mov
ficoms
and
fldenv
cmp
scas
hlt
aad
iret
outsl
iret
dec
pop
loopne
int3
and
cli
push
or
xchg
imul
daa
int3
in
mov
xchg
hlt
stos
xchg
pusha
lods
or
iret
add
fiaddl
jle
aas
dec
icebp
sub
cltd
iret
stos
nop
subb
pusha
fisubl
push
sbb
fildll
xchg
or
arpl
addr16
rolb
jp
and
adc
cmp
bound
xchg
mov
popf
cwtl
adc
adc
dec
push
imul
mov
mov
jne
add
addr16
xchg
xchg
mov
mov
scas
inc
jmp
mov
mov
xlat
scas
ficomps
int3
fs
ret
pushf
pop
jae
pop
adc
or
jmp
ret
addr16
out
sbb
and
xchg
shrb
ret
loopne
lea
pop
mov
pop
xor
and
shrb
neg
inc
imul
aad
push
sub
dec
or
pushf
cli
and
cmpsb
cld
jecxz
jmp
xor
imul
sbb
ja
cltd
in
negl
and
lahf
faddl
mov
jge
xor
pushf
sub
inc
lods
gs
cmpsb
push
xor
push
rclb
loop
mov
pop
jns
inc
aaa
pop
cli
adc
inc
jne
push
mov
or
xchg
in
sbb
mov
in
xchg
pop
pop
add
xchg
daa
lea
cmp
mov
sbb
sub
xchg
dec
push
pop
pusha
push
mov
int3
inc
leave
sti
jae
jnp
les
jb
push
hlt
loope
xchg
data16
popf
cwtl
jmp
sub
mov
cmpsl
add
xchg
fdivrl
adc
mov
iret
sub
scas
lcall
mov
pop
mov
push
iret
dec
ror
icebp
int
lock
cli
sti
adc
jae
jno
push
cmc
cmp
loop
out
in
sahf
adc
dec
mov
jbe
pop
pop
sub
andb
icebp
push
aas
pop
aad
add
mov
and
rcr
mov
iret
push
ss
jno
sti
inc
in
jg
jle
imul
ja
int
sub
xchg
daa
mov
xchg
popf
ljmp
test
jecxz
sahf
push
mov
movsl
stos
mov
pop
sub
jno
scas
add
rolb
iret
jo
sbb
dec
cli
cmp
cld
xor
or
dec
xchg
cltd
repz
push
xchg
push
inc
push
arpl
xor
xchg
xchg
test
push
xor
cmp
hlt
add
rorl
cmpsb
insl
mov
iret
inc
fsubrl
imul
mov
jo
inc
xchg
push
popa
arpl
mov
ret
ficoms
stc
xchg
je
jmp
mov
adc
stos
popf
mov
xchg
mov
lret
cmp
test
mov
fdivr
enter
sub
shrl
adc
mov
lock
cmpsb
pop
ret
adc
insl
rorb
sti
lret
add
repnz
adc
bound
in
and
scas
xchg
and
test
push
loope
gs
mov
or
insl
cmpsl
and
cmp
pushf
xorb
or
clc
adc
test
ljmp
loopne
fmuls
inc
adc
sub
jp
push
xor
xorb
cmp
lret
js,pt
bound
jns
pop
in
jl
xchg
and
repz
int3
xor
ror
add
push
inc
lcall
mov
mov
jae
sarl
repz
daa
cmc
les
xchg
xor
daa
lcall
adc
inc
and
je
adc
imul
pop
sbb
shrb
xchg
andb
mov
pop
aas
sub
inc
test
roll
pop
ret
aaa
lods
inc
mov
lds
and
mov
test
test
ret
aaa
gs
scas
sbbb
jnp
pusha
mov
jbe
setle
scas
hlt
mov
ss
pop
out
lret
rcr
mov
mov
stos
dec
shll
cwtl
and
ljmp
sbb
jo
negb
insb
sbbl
mov
pushf
hlt
mov
sbb
or
ret
push
mov
dec
subb
cmp
mov
outsl
mov
out
jle
das
negb
pop
popf
and
sbb
add
or
xchg
mov
fbstp
test
push
sub
xchg
lods
je
and
stos
fisubrl
push
fs
push
jns
pop
int3
enter
adc
leave
mov
inc
or
movb
mov
adc
scas
mov
mov
sbb
xchg
fldl
push
dec
into
inc
mov
mov
daa
sub
xor
and
hlt
out
out
out
insb
pop
pusha
or
fcompl
rolb
xchg
or
adc
inc
mov
lds
cli
cmp
xor
mov
outsb
stos
sti
out
das
mov
daa
cwtl
cwtl
fadds
les
xor
sub
orl
mull
in
mov
jno
push
sub
movsb
mov
and
lock
pop
cltd
mov
xchg
cld
ret
dec
aad
cmp
pop
mov
shl
ds
sbb
push
movsl
adc
insl
das
adc
cltd
movsb
xor
pop
dec
add
push
or
sub
das
fwait
sbb
jns
repz
idivl
out
outsl
in
pop
loop
fsubs
push
sbb
adc
cmp
sub
or
movl
ss
stos
repnz
xchg
sub
ret
sbb
jae
daa
sbb
fisttps
dec
aaa
mov
test
mov
mov
mov
and
movsb
dec
in
loop
push
sub
fistps
imul
ret
or
sarb
pop
sti
xchg
mov
in
sbb
mov
sbb
incb
pusha
xchg
fisubrs
or
add
aas
jl
testb
wrmsr
jnp
mov
or
insl
xor
fcomps
mov
adcb
xor
fmull
rol
xchg
incl
ret
call
cmp
idivl
sbbb
outsl
mov
xchg
inc
xchg
in
in
pushf
adc
adc
xchg
xchg
push
push
push
shrl
dec
adc
mov
lods
cli
aas
repnz
mov
ljmp
and
dec
fsub
jl
mov
mov
les
jl
iret
xacquire
jle
div
or
fdivp
mov
sbb
arpl
movsb
daa
xchg
sbb
push
call
add
dec
test
sub
cmp
xor
add
daa
nop
es
ljmp
mov
sub
sbb
pusha
mov
add
sub
push
aad
push
cmpsb
test
ret
and
sbb
loopne
inc
js
and
push
mov
daa
add
out
sbb
cltd
pushf
lcall
test
out
les
jns
in
cmp
call
sbb
push
sbb
adc
mov
movsl
xchg
je
cmp
dec
push
cmp
add
mov
jb
lods
ljmp
fcoml
adc
pop
mov
loop
std
in
fwait
sbb
gs
sahf
xchg
into
lock
dec
jle
int
cmpsb
or
testl
mov
rclb
add
mov
nop
add
jp
cmp
inc
mov
in
clc
xor
cs
fcom
cmp
leave
ffree
dec
sub
in
inc
lret
clc
js
jne
push
scas
test
adcl
add
mov
mov
add
sbb
push
mov
movsb
in
xchg
sub
je
xchg
in
loopne
mulb
inc
lods
fwait
mov
mov
mov
inc
sbb
mov
jns
sbb
popf
imul
mov
jbe
ret
scas
out
xchg
in
clc
imul
adc
pop
mov
loopne
add
inc
sub
inc
cmp
jb
add
pop
test
mov
subb
fmull
das
mulb
out
repnz
movsb
lret
jae
dec
dec
mov
mov
out
xchg
repnz
sbb
cltd
imul
adc
push
add
mov
and
scas
and
xor
mov
stc
dec
adc
fsubrs
jge
sbb
jmp
jge
push
push
lret
push
mov
lods
inc
or
aas
push
std
jns
loop
loopne
fnstsw
out
inc
mov
mov
sbb
ljmp
pushf
jbe
jne
ret
add
mov
mov
jno
push
lods
into
xchg
movsb
pop
ret
imul
outsl
aad
lcall
iret
cmpps
jecxz
push
pusha
bound
call
outsl
hlt
push
pushf
nop
or
fcomps
rorb
mov
mov
scas
cmp
movsb
mov
cmc
aad
daa
pop
inc
inc
cli
inc
rcrb
jmp
call
push
imul
jnp
sbb
pop
loopne
ja
sbb
insb
sbb
mov
int3
test
mov
mov
repnz
jp
divb
sub
mov
sub
iret
inc
daa
mov
lret
pop
shlb
es
lret
ja
dec
dec
pop
clc
lds
out
gs
xchg
cmp
out
inc
adc
adc
or
xor
femms
mov
mov
shll
js
out
daa
int3
xor
cmpsb
xor
and
jl
cltd
cmpsl
cmc
int
fwait
sar
cltd
aad
enter
mov
pop
xchg
lds
or
xor
test
in
loope
sbbb
sbb
lahf
test
fwait
and
clc
ret
ret
mov
jno
pop
sub
pop
jbe
lret
lcall
out
rcrl
push
lret
cmp
push
inc
pop
movb
sbb
jno
jne
imul
aas
push
test
and
adc
pop
xor
pop
adc
or
mov
and
stos
and
or
lods
gs
pop
notb
mov
loope
add
pop
rolb
push
xor
call
idivl
adc
shl
aaa
jmp
mov
loope
xchg
pop
sbb
mov
or
lea
cmp
idivl
int3
mov
mov
shrl
and
addr16
jb
fadd
lods
fidivs
dec
inc
loopne
lret
push
lahf
iret
xchg
mov
jge
les
outsl
cld
nop
icebp
addr16
push
jecxz
or
mov
movsb
xchg
movsl
pop
test
cmp
mov
xchg
mov
ds
sub
jne
pop
or
mov
int
mov
inc
scas
or
into
push
fs
cmp
push
jmp
dec
lret
leave
dec
cmc
adc
loop
loope
add
xor
lret
adcb
bound
cmp
or
in
and
cmpsl
fisubl
mov
push
movswl
jecxz
repz
inc
push
aas
mov
js
lock
mov
scas
cmc
pop
sti
pusha
mov
adc
mov
mov
bound
sbb
sbb
xchg
cltd
xchg
and
jbe
adc
subb
aaa
dec
inc
loope
mov
fcmovbe
xor
jno
fidivs
int3
and
mov
lret
mov
push
ja
in
or
ret
out
inc
inc
adc
test
xor
and
xor
iret
sbb
test
sbb
fldl
push
roll
mov
push
movsl
stos
or
jnp
and
cmp
rcll
out
or
divb
inc
inc
insb
js
sub
xor
jge
mov
scas
rcll
xchg
add
pushf
pop
fsubp
add
ds
add
sub
mov
mov
mov
pop
jnp
xor
mov
jge
push
lcall
lock
pop
xchg
in
inc
loope
insl
addr16
out
pop
in
ja
inc
pushf
pop
out
cmp
sbb
pushf
or
xchg
shlb
xchg
inc
dec
mov
mov
int3
inc
cltd
and
add
pop
enter
sarl
dec
cwtl
push
movsb
push
mov
std
rorb
cli
inc
lcall
jge
out
cmp
sbb
scas
or
mov
xchg
mov
push
test
psrlq
lock
sub
scas
lods
lock
lods
ljmp
lock
int3
fildll
pusha
lock
negb
call
jecxz
jb
dec
ja
insl
jge
mov
mov
inc
adcl
adc
cmp
xor
inc
mov
and
push
pop
push
stos
and
pop
and
aaa
ret
pop
jl
inc
adc
sbb
jb
hlt
add
or
jmp
icebp
jge
xchg
jno
push
cmc
push
subb
loop
mov
arpl
xchg
test
mov
push
mov
loope
lds
out
jb
movsb
lods
inc
push
push
loop
sub
int
loopne
inc
inc
fisttpll
jnp
cld
push
push
jo
je
ja
cmc
out
inc
dec
cltd
insl
call
in
ja
push
pushf
push
out
add
push
sbbl
lock
mov
xor
add
pop
icebp
cmp
sub
xor
xor
push
mov
hlt
dec
push
pop
mov
cmp
fstps
jno
icebp
aam
pop
dec
pop
mov
call
clc
call
ds
xor
pop
iret
mov
xor
nop
or
mov
mov
mov
and
xchg
inc
mov
pop
xchg
stos
dec
pop
lods
fwait
inc
jne
loop
aas
ficoms
imul
faddl
enter
xchg
in
mov
inc
mov
ljmp
arpl
pusha
scas
xchg
xchg
mov
cltd
push
adcb
mov
mov
je
mov
bnd
arpl
shrl
sti
cwtl
push
pop
and
lods
jle
push
lods
add
inc
pop
popa
cmp
jno
jbe
pop
adc
in
out
fldenv
push
cwtl
ja
test
mov
push
xchg
gs
sub
xorb
push
or
or
cmp
dec
dec
add
pop
cmp
ds
cmp
jo
jns
jmp
mov
xchg
fstpl
inc
mov
pop
jle
rcll
jmp
into
xchg
ljmp
hlt
mov
mov
and
loopne
icebp
sbb
insb
jno
test
imul
clc
pop
cmp
jb
icebp
jl
inc
dec
fwait
push
daa
in
xchg
lret
push
imul
lret
lcall
cltd
inc
mov
jge
or
pop
out
inc
test
cmp
je
cwtl
arpl
sbb
aad
mov
andb
pop
dec
xor
sbb
insl
dec
mov
ror
aad
xlat
xlat
sbb
lock
mov
fucomip
loop
add
pusha
lcall
push
xchg
adc
mov
jne
add
xor
and
cmp
mov
xchg
sub
jns,pt
cmpsl
fnstenv
sub
je
dec
inc
fdivs
bound
repz
add
jbe
inc
cld
push
jecxz
jb
fcomip
lea
movsl
mov
nop
mov
loop
mov
jge
xorb
mov
mov
mov
xor
mov
pop
stos
pop
imul
mov
pop
sbb
mov
enter
out
lahf
call
jnp
jae
int
std
xchg
xchg
or
push
xor
cltd
push
jne
jp
fsubp
mov
inc
add
ljmp
pop
sub
mov
jmp
out
sub
ret
aaa
cmp
shrb
push
pop
js
fimuls
xor
or
jle,pt
xorb
lds
out
cmc
sbb
sub
sbb
adc
aas
push
ljmp
test
xchg
dec
cmp
mov
or
scas
and
pop
mov
stos
mov
insb
pop
aad
inc
add
fiaddl
insb
leave
mov
ret
and
dec
cld
mov
cmc
sbb
inc
test
sub
es
dec
push
aaa
adc
test
loopne
pop
inc
xor
cmp
push
aas
out
aad
in
xor
ret
inc
sub
jg
lods
lock
cmc
push
xchg
inc
jg
jecxz
jns
inc
je
arpl
xchg
jo
push
cmc
mov
loop
mov
ret
int3
xor
push
lea
mov
jno
xor
mov
in
adc
push
addr16
neg
xchg
imul
outsl
rolb
mov
int3
or
bound
in
enter
hlt
test
xchg
adc
ds
int
mov
stos
adcb
mov
cmp
mov
pop
scas
pop
fstl
mov
inc
ret
inc
clc
rorl
repz
popa
imul
insb
inc
fisubrs
jg
loope
icebp
stos
mov
pop
pushf
adc
insl
adc
or
test
ss
pop
das
mov
push
pop
mov
pop
mov
dec
flds
icebp
mov
std
lds
jle
les
or
sbb
push
adc
lods
xchg
sti
inc
lea
push
mov
popa
adc
in
sahf
jns
mov
fisubrl
faddp
mov
cmp
push
lcall
test
dec
hlt
dec
sub
scas
mov
shlb
push
mov
lret
xchg
insl
sbb
sahf
lds
jle
xchg
repnz
ja
mov
xor
insb
cs
pop
ds
xor
pop
shrl
stos
push
xchg
sub
fmuls
mov
add
push
mov
inc
mov
dec
sub
fcoml
dec
push
pop
es
lahf
inc
rcl
push
dec
lcall
push
out
es
cli
or
cmc
or
insl
mov
mov
adc
lahf
mov
mov
aas
aas
stos
cs
subb
pop
aas
frstor
xor
pop
cmp
iret
push
push
rorl
stc
dec
jbe
repz
push
push
in
jl
dec
ret
inc
cmc
adcb
mov
push
mov
arpl
test
jl
hlt
mov
mov
add
and
sub
jo
stc
mov
lret
sub
je
dec
dec
negb
subb
and
into
insb
jb
imulb
clc
push
mov
adc
imul
mov
sahf
or
pop
xchg
out
inc
stc
pop
mov
cmpsl
xchg
xchg
inc
inc
dec
stos
mov
mov
ljmp
imul
dec
dec
in
inc
dec
fincstp
jle
jns
adc
sbb
or
jmp
sbb
xor
sub
loop
mov
int
xchg
clc
and
mull
and
pusha
push
dec
aaa
dec
repz
aas
mov
insb
pop
das
mov
icebp
shll
adc
fstps
fisubrs
push
cld
inc
ret
xor
mov
cld
mov
in
out
sbb
lret
or
les
repnz
mov
xor
add
inc
mov
mov
fistpl
mov
rcl
sub
push
cmpsb
inc
cmp
cmp
in
xchg
xchg
ljmp
xchg
in
ja
sub
adc
mov
dec
and
xor
fisttps
ret
jg
mov
popf
mov
xor
lods
jae
icebp
sub
lret
pushf
ffree
push
xlat
ljmp
add
jae
xchg
xchg
lods
lcall
cmp
imul
adc
add
jecxz
add
dec
into
test
cmp
aad
xorl
cmp
hlt
out
sti
and
mov
es
and
pop
push
clc
mov
lret
out
outsl
shlb
mov
in
xchg
test
xchg
xor
jae
nop
fimuls
or
into
cmp
and
cmp
push
into
adc
enter
adc
sahf
fmull
cmpl
out
sbb
gs
movb
data16
inc
cmpsb
pop
jns
data16
cmp
sti
loopne
cmp
lods
mov
jne
sahf
popf
leave
mov
mov
or
mov
inc
mov
and
lret
sub
sbb
pop
mov
aad
and
aam
ja
inc
add
lds
mov
imul
insl
jle
add
out
xlat
xchg
sub
mov
aam
xchg
and
jge
xchg
mov
mov
fldenv
mov
pusha
and
cmc
pop
mov
pop
mov
push
aad
into
sarb
mov
inc
jae
sbb
jo
sub
or
xchg
xchg
addr16
rorl
mov
push
sub
stc
sub
lahf
adc
xor
cmp
and
push
ljmp
push
and
push
inc
dec
je
add
movsb
inc
pop
mov
dec
xor
fwait
sub
lods
imul
adc
add
movq
cmp
jnp
jp
leave
xor
and
movsb
cmp
stos
imul
cmpsb
dec
icebp
ja
mov
jnp
rolb
sti
mov
pop
sub
dec
push
imul
sbb
roll
pop
dec
ljmp
push
adc
or
inc
jl
test
into
ljmp
fbstp
dec
push
mov
jmp
xchg
mov
jge
xor
xor
pop
aam
cwtl
push
xchg
into
jmp
add
cmp
dec
jnp
je
xor
xchg
stos
hlt
cmc
jp
insb
out
insl
adc
adc
aaa
sbb
push
push
adc
nop
mov
pop
sub
pop
xor
int3
js
jbe
es
pop
out
push
inc
and
ror
add
int
outsl
lea
adc
mov
cmp
mov
jge
inc
sbb
pusha
ret
cmpsl
test
in
insl
cli
push
xchg
fbstp
ds
movsl
adc
sub
mov
xor
cwtl
adc
mov
mov
in
shll
loopne
sub
xor
mov
sbb
cli
into
xchg
add
cli
in
adc
ds
jo
mov
pop
call
sbb
inc
aad
adc
fldl
addl
add
mov
mov
xchg
stos
imull
sub
inc
and
adc
or
test
jbe
jno
xor
inc
push
bound
mov
out
adc
out
pop
pop
loope
pusha
adc
pusha
pushf
pop
cmpb
adc
mov
aad
xor
and
cs
fiadds
shrb
aaa
testb
cmp
xlat
inc
jb
sbb
jns
shl
jno
lock
test
push
dec
xchg
cltd
or
out
nop
cld
arpl
adc
gs
sbb
cld
adc
loope
pop
pop
imul
out
xchg
or
mov
or
ja
and
mov
shrb
mov
rcl
movsb
cli
mov
ret
cmc
xor
mov
gs
clc
push
lret
adc
or
mov
ficoms
push
adc
incl
mov
mov
xor
shll
std
pop
into
push
insb
lods
shlb
inc
or
stc
insb
iret
jge
xchg
push
ja
jns
adc
je
ja
jmp
test
pop
pusha
xor
or
lea
push
mov
or
xor
cmp
sbb
daa
aam
shl
cmpsb
push
test
sub
fadd
jnp
inc
shll
jle
iret
repnz
loopne
jmp
adc
xorw
sbb
loop
mov
cltd
movq
mov
pop
lea
test
push
ds
call
pop
xor
and
push
dec
push
ja
sti
je
pushf
push
sahf
enter
repz
addr16
imul
repnz
negl
pop
in
adc
sbb
lahf
sbbb
mov
cmp
mov
subl
cmpsb
or
pop
les
fistps
sub
fimull
dec
fbld
inc
adc
cli
jno
jle
std
xchg
push
insb
cmc
nop
sti
imul
icebp
in
ljmp
loopne
push
mov
cltd
or
or
mov
testb
pop
mov
mov
and
movsb
push
stos
pop
mov
mov
fsts
inc
mov
jnp
int
jge
ret
push
jl
in
lods
jecxz
or
sub
jle
mov
out
mov
mov
sub
pop
and
daa
data16
pop
inc
test
mov
ljmp
out
stc
mov
stos
idiv
data16
imul
in
in
out
cmp
notb
out
sbb
or
sahf
mov
mov
cli
mov
xor
mov
sub
int
gs
sub
xor
out
pop
mov
xchg
inc
inc
cmpb
xchg
pop
xor
adc
insb
fmuls
adc
push
inc
in
cmpsb
or
mov
jne
lods
pushf
jno
shr
cmpsb
fwait
xor
add
inc
jo
mov
call
xchg
pop
cmp
sarl
xchg
push
imul
adc
cmpsb
cwtl
xlat
sub
ret
aad
aam
inc
enter
mov
imulb
clc
test
push
std
pop
pusha
sbb
ljmp
xchg
and
out
lea
pop
nop
les
or
ds
andl
aaa
and
pop
test
or
inc
cmp
dec
or
xor
sub
jne
fildl
popf
sbb
adc
or
jnp
ljmp
fwait
je
jmp
push
or
sub
add
idivb
mov
adc
push
dec
mov
mov
cs
lret
repnz
xlat
push
fisubs
test
jno
les
and
push
cld
bound
xchg
or
xchg
cmpsl
cmc
add
adc
xchg
push
sahf
int
out
es
sbb
pop
cmp
push
cs
jecxz
xchg
scas
xchg
mov
fadd
fiaddl
insb
mov
or
cmp
pop
icebp
pushf
stc
nop
repnz
fs
idivb
ja
outsb
push
jmp
clc
out
and
arpl
mov
stos
pop
jl
or
cmpsl
stc
mov
push
fwait
les
mov
jo
mov
jge
lods
mov
add
sub
inc
push
jp
ret
sar
jo
dec
lock
out
pop
cmc
imul
orl
andl
xchg
xchg
mov
or
sub
loope
cmp
insb
fldl
dec
xchg
imul
inc
push
out
iret
xchg
pop
fnstsw
rcrb
ret
inc
and
jp
dec
mov
sbb
data16
push
xor
adc
push
lods
sbb
pop
sbb
sbb
add
xchg
mov
mov
add
cmpsl
repz
es
pop
or
xor
sub
push
xor
jecxz
rclb
xor
xor
push
in
bound
imul
sbb
in
inc
ja
add
mov
sub
jl
in
in
sub
add
fwait
dec
daa
hlt
mov
test
mov
movsl
fcomp
rcll
and
pushf
jae
sub
cld
jbe
inc
std
add
xchg
insb
mov
ja
pop
jo
rcrl
mov
dec
inc
sub
inc
xchg
mov
aaa
xor
adcb
mov
int3
mov
mov
in
test
add
addb
rep
push
fldl
push
and
xor
nop
dec
lock
and
clc
jl
aam
jae
imul
push
rcrl
subl
mov
xchg
dec
lock
add
xor
pop
lds
dec
mov
jno
lods
push
rcr
lds
dec
xchg
aaa
divb
aad
sub
dec
sub
scas
add
fadds
xlat
repnz
outsb
nop
dec
out
loop
lea
shl
sbb
xchg
adc
jp
add
add
add
cmpsb
jp
fisttps
fisubrl
sub
push
push
push
add
mov
cltd
push
and
xchg
sub
mov
lahf
dec
lock
out
pop
mov
jmp
jmp
dec
adc
jo
mov
xorb
xchg
or
test
enter
dec
push
sub
das
leave
pusha
lods
jle
xor
add
mov
dec
loop
ret
incl
inc
adc
icebp
loope
mov
loopne
out
ficompl
mov
sahf
dec
cmp
dec
or
sub
push
mov
call
and
cmp
lret
daa
mov
pop
test
pop
roll
jbe
inc
adc
outsb
rcrl
push
cltd
clc
test
inc
dec
popf
and
into
call
jl
in
lds
pop
sbb
dec
pmulhw
lock
push
push
sub
dec
and
inc
call
pop
loop
mov
jo
and
fsubl
cmp
pop
rolb
iret
ljmp
xchg
dec
cltd
mov
cwtl
ffree
push
mov
and
ret
sbb
arpl
xchg
jnp
orb
cmp
call
adc
mov
cwtl
mov
jge
xchg
shl
dec
iret
out
int
int3
sbb
dec
lds
jle
or
dec
sbb
and
daa
pusha
out
cmp
pusha
push
add
jl
adc
xchg
inc
sti
repz
js
jbe
js
in
in
dec
ret
xor
mov
fbld
lret
xor
jbe
pusha
in
dec
ljmp
lcall
sbb
lock
arpl
add
or
push
kmovb
and
mov
rolb
xor
shlw
ljmp
mov
movsb
cs
je
jp
mov
lcall
pop
cmpb
cmc
xor
testb
imul
lods
push
jl
dec
imul
loop
cmp
into
mov
push
mov
dec
xor
iret
stos
add
cmp
mov
pop
cmpb
push
cmp
lds
in
js
testb
push
jle
pop
jecxz
mov
cmpsl
lcall
popa
movb
cmpsl
adc
cmpl
mov
ss
cmp
pop
out
jne
icebp
mov
aad
sub
cmpsl
pop
push
push
pop
pop
insl
inc
jl
mov
jge
pop
addb
mov
xchg
sub
jecxz
outsl
gs
sbb
mov
or
or
hlt
pop
pop
cmpsb
pop
xor
mov
shl
sbb
shll
jmp
sub
mov
movsb
lret
call
mov
dec
es
inc
mov
shlb
in
sti
loope
aad
mov
in
adc
mov
push
lcall
jb
cmp
xor
sub
and
movsb
mov
xor
push
repnz
mov
enter
adc
xor
mov
jae
imul
dec
lcall
sub
push
xchg
push
out
mov
sub
les
daa
pop
arpl
inc
subb
ficoml
pusha
out
or
into
frstor
push
dec
lret
xor
push
xchg
test
pop
sbb
in
pop
insl
fistps
data16
jge
cmp
sbb
test
mov
or
dec
mov
clc
es
fnstcw
and
push
jb
shll
sub
sbb
jnp
or
or
push
jno
pop
aaa
mov
sub
addb
push
mov
pop
pop
mov
inc
pushf
je
mov
adc
cs
orl
lcall
movl
mov
insl
arpl
cmp
xchg
dec
popf
push
mov
or
adc
clc
inc
dec
add
fs
mov
aaa
xchg
bound
xchg
pop
mov
idivl
sub
jp
xlat
imul
movsl
ret
mov
inc
pop
jns
jl
addr16
lock
jno
ja
gs
insb
sahf
insl
fdiv
in
in
movsl
jge
pop
popf
pop
inc
inc
adc
lcall
xchg
xor
mov
cs
nop
pushf
sub
movsl
cmp
add
rcl
and
ret
sub
xor
and
pop
div
popa
not
fistps
fwait
push
jo
jbe
leave
insb
call
test
cmp
das
mov
fnsave
stos
fsubrl
call
add
cmp
ds
cmc
and
xorb
fimull
scas
mov
cmp
iret
or
shll
cli
adc
les
leave
imulb
adc
jns
fs
adc
fcompl
cli
xchg
mov
stos
push
sbb
data16
pop
pop
or
dec
inc
loopne,pt
sub
and
sub
cmpsb
movsb
imul
pop
rcrb
xchg
inc
dec
sbb
notl
sub
rorl
lock
xchg
jbe
mov
or
invd
or
xor
add
out
cmp
lret
xor
jbe
push
popf
int3
dec
mov
inc
push
jle
push
leave
lret
xchg
lret
int3
mov
jbe
loopne
inc
in
shlb
in
out
push
dec
adc
cld
data16
pop
fsubr
lahf
push
incb
cmp
mov
loopne
xchg
lcall
fsubs
adc
add
fbld
ja
sbb
test
pop
lds
ret
clc
into
cmpsl
jmp
ficoms
loop
into
imul
nop
or
jns
mov
mov
popa
mov
enter
mov
and
test
push
movsl
jbe
sub
adc
popa
movsl
sbb
fsts
neg
add
push
cmp
xor
dec
and
sbbl
push
hlt
xchg
pusha
mov
jne
push
js
cs
xchg
xchg
loopne
pop
add
sahf
rorl
dec
adc
add
adc
subl
pop
mov
mov
mov
sbb
jg
dec
cltd
movsb
mov
fcomp
popf
ret
push
cmp
or
std
inc
add
cmpsb
shr
lahf
repz
in
lahf
push
negb
loopne
adc
fnstsw
or
inc
je
add
pop
fsubrp
aas
sub
add
test
addl
jp
mov
sub
icebp
sub
out
mov
mov
je
dec
push
add
pop
outsb
mov
cmp
loopne
cmpb
mov
lds
mov
ficompl
or
sub
push
mov
cld
xor
shl
mov
incb
push
ficoml
jne
inc
or
cmpl
inc
pusha
cli
repz
push
outsb
jle
insb
scas
pusha
imul
push
push
fwait
outsb
push
popf
sahf
and
lahf
pop
fldcw
cli
in
xchg
and
decb
test
jne
dec
xchg
xor
aaa
adc
pop
jne
sbb
hlt
inc
dec
imul
arpl
fs
fnstsw
mov
sbb
push
pop
jl
cmp
sbb
std
xchg
push
add
repz
adcb
test
popf
mov
aaa
jns
sub
xor
dec
int
pusha
or
xor
ret
jecxz
jb
add
mov
in
jle
xor
test
mov
imulb
push
pop
xor
fidivl
adc
xchg
shrl
sub
or
lds
mov
mov
mov
mov
fsubrl
sub
daa
aaa
aad
lds
mov
aad
adc
std
xor
cmp
jbe
and
mov
cmp
mov
lds
stos
out
lds
mov
pop
mov
repz
mov
shlb
inc
sti
xchg
add
or
int
push
mov
mov
in
ljmp
or
std
loopne
cltd
or
outsb
mov
out
in
xchg
sbb
cmp
mov
fmuls
les
jb
mov
sub
mov
ljmp
bswap
add
in
ret
into
jg
cmpsb
stos
sbb
rcl
ljmp
dec
jle
cmp
out
adc
daa
adc
pop
pushl
jmp
movsb
loop
sbb
enter
es
mov
mov
lods
mov
xchg
shrl
sub
mov
stc
nop
dec
jge
insl
les
aad
jmp
ljmp
jl
bnd
sbb
inc
out
xor
test
sbb
inc
sub
adc
cmpsl
add
scas
aad
ds
mov
clc
xlat
mov
sub
das
push
int
or
shlb
xlat
ljmp
into
inc
fs
jnp
jl
js
jmp
cmpl
sti
push
out
insl
cmp
adc
in
or
xchg
sbb
ja
es
add
dec
fadd
lret
mov
repnz
shlb
cmpsb
ja
pusha
clc
out
sbb
popf
outsl
jno
jb
movsl
pop
outsb
add
inc
pushf
jnp
cmc
mov
add
hlt
jecxz
mov
dec
cmp
sti
std
push
adc
mov
in
xor
mov
xchg
aaa
scas
sub
cmp
mov
imul
inc
sbb
mov
mov
in
inc
fstpt
mov
lahf
js
and
sbb
mov
outsb
sub
mov
add
ss
xchg
push
sbb
lods
inc
or
pop
cmp
into
cwtl
jge
dec
mov
dec
mov
jle
sub
or
dec
aad
mov
fistpl
shrl
push
mov
lret
lahf
cmp
xor
cld
and
loop
outsb
out
loop
mov
push
mov
pop
xor
fnsave
add
mov
fidivrl
lret
stos
jns
jbe,pn
rol
int
fcmovnb
mov
jl
dec
jae
out
push
fs
mov
xchg
lds
or
mov
mov
mov
test
sbb
xchg
add
pop
rorl
add
sub
lods
pop
mov
aam
mov
mov
xor
pop
pop
cld
ret
jns
jbe
repnz
xlat
int3
xchg
pop
pop
sub
cmp
int
mov
and
movsl
and
mov
add
xor
imul
inc
cld
in
stos
mov
mov
es
mov
aam
aad
lods
daa
je
inc
shrb
outsb
ss
ror
push
rcl
push
repz
out
cmp
ret
cltd
inc
mov
mov
sub
cltd
mov
cmc
fwait
shlb
sub
fwait
adc
inc
sbb
mov
pop
pop
lods
fcomps
mov
xchg
in
pop
and
icebp
aam
lret
in
pusha
adc
sbbb
jle
lret
add
imul
movsb
add
adc
js
sbb
xchg
and
pop
test
push
call
addl
or
notl
ret
fwait
pop
pop
lcall
ret
cmpsl
cli
push
add
push
int
lret
rolb
leave
out
arpl
push
repnz
ljmp
pushf
adc
adc
push
enter
mov
xchg
push
xchg
xor
adc
pop
mov
dec
dec
dec
inc
jbe
push
pop
mov
loope
jge
sti
jge
cld
ljmp
pop
xchg
leave
gs
push
push
jns
dec
imul
mov
xor
adc
dec
outsl
mov
jae
movsl
pop
mov
in
cmpb
lahf
adc
icebp
push
jle,pn
in
sti
int
std
iret
pop
lds
jae
out
aam
dec
loop
sahf
fisttps
lret
daa
fsubrl
ret
inc
jae
call
jb
test
xor
aam
test
lret
repnz
pushf
or
xchg
ja
movsb
lcall
adc
xchg
cmp
mov
sub
lret
inc
lods
mov
int
pop
gs
jle
and
inc
outsl
jno
bound
out
pusha
inc
aaa
inc
in
push
gs
cmpb
mov
or
imul
out
sbb
jbe
fstl
mov
fs
adc
shlb
sub
fimull
dec
bound
sub
xchg
mov
push
loop
mov
xchg
ret
mov
cli
imul
push
inc
sbb
xchg
in
xchg
xchg
rcrl
mov
arpl
or
sbb
decl
pop
mov
xor
cmp
jle
dec
sub
aam
or
cltd
insb
insl
fnstcw
lock
xor
xchg
push
dec
jae
add
imul
sub
call
and
jns
lahf
sub
movsb
mov
shll
mov
out
adc
xor
sub
push
rcrb
fbstp
lds
dec
iret
rol
ret
jl
jle
popa
add
jae
mov
in
shll
call
mov
or
cmpsl
mov
sarl
aas
cs
call
or
shlb
jge
xchg
in
mov
mov
mov
jg
loopne
dec
testb
aad
push
cmp
into
ret
sbb
sub
adc
pop
sbb
testb
fistl
sbb
andps
cwtl
add
test
sub
jne
xor
fadd
push
jle
stos
sti
cmpsb
mov
pop
dec
je
js
aam
insl
dec
out
cltd
sbb
into
movsb
add
cmp
mov
inc
mov
lret
sahf
popa
or
cmp
ret
sysexit
add
mov
dec
mov
sub
lods
inc
sub
sbbl
int
pop
mov
dec
pop
jb
push
inc
outsb
dec
imul
cld
or
adc
mov
mov
pop
out
lea
or
lahf
aas
fimuls
mov
xchg
mov
mov
mov
scas
outsb
rol
pop
mov
nop
std
fisubrl
fucomp
test
test
push
icebp
sbb
dec
xor
int3
sub
pusha
nop
lret
in
mov
mov
inc
out
popa
test
lods
gs
inc
lahf
inc
fistl
cwtl
lea
mov
mov
add
lods
sub
mov
aas
mov
fisttpl
push
and
stc
cmp
inc
cltd
push
dec
inc
dec
sbb
repnz
mov
aam
nop
dec
outsb
lcall
out
jns
cmp
loop
inc
mov
rcrl
push
adc
dec
cli
cwtl
ud2
xchg
inc
jecxz
mov
movsl
orb
add
add
fcmovnbe
dec
xor
int
aam
sub
jg
push
push
nop
push
mov
inc
pop
sahf
lds
jle
xchg
bnd
ja
out
js
xchg
adc
data16
mov
adc
or
es
fiaddl
lock
mov
push
mov
enter
test
shrl
mov
ret
inc
jne
jle
aam
bound
out
xchg
fwait
inc
mov
cli
mov
repz
call
cmp
jb
lcall
xchg
lahf
test
aas
and
aas
cmpsl
subb
push
daa
fdivrl
aad
jnp
xor
ret
inc
sub
jg
pop
lock
je
das
jmp
push
data16
dec
testb
cld
in
jo
push
cmc
or
loop
mov
fnsave
lds
in
cmpsb
lea
pop
push
adc
aas
cmp
into
mov
inc
cs
mov
cld
fldt
pop
data16
rclb
leave
mov
mov
dec
adc
repnz
lcall
cwtl
add
sub
adc
cmpsl
add
xchg
cmp
mov
dec
mov
ret
inc
mov
je
sub
fbld
into
rcll
fs
jbe
insl
popf
js
adc
or
xor
fdivrl
mov
loopne
adc
cs
or
mov
mov
test
mov
iret
stos
lds
in
les
std
fadds
rcll
jmp
into
jle
inc
in
sti
ds
jnp
adc
push
xchg
jo
push
cmc
mov
loop
mov
jmp
lahf
out
adc
fcmovnbe
xchg
test
cmp
and
push
sub
and
movsb
push
ror
das
mov
inc
jge
clc
dec
pop
add
pop
sbb
add
in
fsubrp
jo
cs
pushf
pop
imul
and
scas
add
xchg
mov
xor
shrb
dec
xchg
sub
mov
les
mov
push
hlt
scas
mulb
adc
rcr
mov
push
sbb
rorb
jbe
inc
push
push
test
fs
out
sub
push
cltd
pop
xchg
xchg
push
mov
aam
inc
mov
cmpl
cli
mov
insb
fdiv
test
sahf
enter
ret
mov
push
roll
lock
xor
or
xor
push
stc
sub
xor
sbb
out
push
adc
loope
push
and
inc
add
jp
push
cs
test
out
stos
mov
sbb
jb
or
subb
lods
fstpt
shlb
sub
xchg
leave
and
mov
pop
call
test
push
in
icebp
dec
push
mov
inc
adc
in
mov
push
imul
aam
popf
mov
add
mov
cmp
mov
xor
stos
enter
ret
movsl
les
adc
push
lock
dec
ljmp
jns
cmp
jae
mov
imul
insl
pop
loopne
sub
push
xchg
pop
pop
adc
xor
test
cmp
loop
push
movsb
pop
nop
cmpsb
push
mov
fsubs
mov
mov
jb
jbe
lock
inc
shl
in
inc
dec
lcall
insb
fwait
fwait
dec
repnz
test
inc
or
cmp
lods
cmpsb
aas
xor
pop
mov
push
and
mov
pop
aaa
popf
inc
js
push
mov
repz
inc
add
ret
pop
xor
loop
sub
pusha
lcall
inc
aad
adc
mov
jp
add
xor
test
aaa
bt
scas
xchg
sub
and
pop
push
sub
enter
dec
inc
fsubs
into
dec
jle
dec
repz
push
jecxz
cmp
xchg
sbb
imul
nop
mov
or
or
test
xchg
imul
mov
push
dec
xor
lods
cmpsl
aas
pop
jg
pop
mov
je
cs
loopne
dec
cmpsb
jne
iret
rcrl
inc
js
jae
jo
sub
jmp
in
es
jg
ror
sub
sbb
mov
aaa
push
loopne
fcomps
mov
adc
ds
int3
ret
xchg
cmp
shrb
xchg
in
jb
cmp
cmp
insb
inc
pushf
outsl
push
sti
lss
fwait
mov
pop
outsl
pop
or
in
push
sbb
adc
lahf
stc
mov
jge
hlt
xchg
subb
inc
xchg
repz
xorb
push
xchg
cs
lods
cltd
add
push
xchg
and
push
testl
jnp
in
pop
jns
push
sub
push
jle
popl
pop
sahf
cmpl
adc
xor
or
mov
cmp
rcrb
ss
push
add
dec
mov
aaa
fiaddl
or
jo
movsb
inc
into
or
sub
sarl
rolb
jbe
rcr
xlat
loope
loop
dec
jb
in
push
loopne
sbb
push
data16
sbb
fnstsw
insl
mov
mov
in
lret
mov
scas
imul
xor
daa
mov
mov
ljmp
int
and
mov
fs
cld
pop
xchg
jns
nop
lret
add
in
ja
adc
xor
bound
push
loop
adc
sbbl
or
pop
add
loope
cmp
mov
ret
inc
mov
fadds
pop
inc
jb
call
int3
imul
lahf
mov
xchg
jae
mov
outsb
mov
andb
rcrl
or
jb
pop
and
or
mov
test
mov
push
mov
inc
shll
jg
pop
xor
push
ret
xlat
mov
dec
std
insl
add
cmc
ljmp
stos
jbe
in
out
fsts
or
jle
mov
pop
and
pop
mov
xorl
xor
jle
leave
push
cmpsl
movsl
nop
mov
sub
mov
ror
pop
jecxz
mov
aad
test
repz
movsb
cmc
out
inc
ds
insl
ljmp
inc
in
ja
outsl
pushf
cli
jno
fwait
cltd
xchg
enter
ret
add
aas
push
in
sbb
xchg
sub
and
fldcw
push
mov
fidivs
push
mov
push
leave
add
orps
jle
cld
enter
ret
popf
sbb
or
pop
cmc
push
xchg
cwtl
push
lahf
jns
in
in
sbb
fs
xchg
xchg
cmp
mov
and
test
mov
xor
dec
fcoml
pop
dec
sbb
rclb
lds
jle
push
inc
inc
int
inc
ja
outsb
or
jb
and
pusha
and
jl
mov
divl
sbb
add
jb
mov
insb
mov
es
fldenv
mov
pop
lods
or
pop
rcll
push
clc
push
aam
stos
stc
out
cmpsb
outsl
out
inc
rcrb
push
in
mov
in
push
lahf
call
loopne
adc
sbb
pushf
scas
push
add
sbb
mov
mov
mov
mov
push
daa
jae
movsb
dec
outsl
push
dec
xchg
dec
jo
icebp
push
jae
clc
add
ljmp
cmc
cltd
insl
scas
repnz
pop
popa
mov
jecxz
or
sbb
mov
add
and
and
filds
addr16
fsubl
or
enter
shll
sbb
inc
push
std
int3
dec
jno
add
dec
fildl
ffreep
cmc
push
jge
lcall
inc
nop
xchg
testb
add
adc
mov
insb
fidivrl
test
sti
cmpsl
jae
aas
sub
adc
dec
jb
roll
dec
xor
fildll
ret
jmp
jbe
in
out
inc
jmp
lcall
jae
ja
loopne
xchg
add
loopne
ds
sub
push
pop
sub
push
mov
js
add
push
mov
das
cwtl
out
jmp
ret
scas
mov
push
into
dec
pop
dec
push
fst
mov
inc
jns
cmpsl
cld
inc
inc
insb
push
cli
push
jbe
mov
jne
push
insb
sahf
mov
xchg
ja
cmp
add
lods
xchg
test
xor
pop
push
push
inc
ds
movsb
mov
push
aam
pop
iret
je
push
ficoml
in
jge
pop
push
add
adc
movb
pusha
add
jl
jecxz
mov
mov
mov
pop
xchg
push
fwait
popf
mov
xchg
movsb
mov
or
cli
cmp
and
and
jge
cmp
ret
ficoml
sbb
jb
shr
movl
aam
mov
incb
xchg
decb
or
shr
faddl
jecxz
or
inc
mov
pop
aas
stos
sti
adc
mov
lods
shrl
xor
out
xchg
lcall
nop
scas
movsb
pop
test
dec
int3
movsl
fcmove
inc
fistpll
sbb
jne
inc
pop
ljmp
mov
hlt
bound
aad
sbb
sub
inc
sbb
std
out
mov
mov
lods
cmp
icebp
mov
jno
fcmovnu
mov
and
stc
inc
dec
inc
fdivrs
mov
movsb
dec
les
cmp
stc
les
pop
hlt
push
lea
push
in
pop
loop
gs
popa
adc
dec
mov
sub
sub
xor
and
es
pop
xor
sbb
fmul
adc
fs
inc
sti
outsl
testl
imul
out
loope
sbb
xchg
push
mov
xchg
jnp
adc
cmp
cmpsb
popa
lea
mov
ss
jmp
test
xor
push
fbld
enter
in
outsl
aad
les
lcall
mov
sarb
push
lods
enter
sarb
sbb
xchg
shrb
cmpsl
cmp
sbbb
arpl
xor
mov
inc
test
mov
xor
mov
pop
fxch
push
lahf
mov
push
dec
mov
repnz
adc
int
jp
icebp
pop
fcomip
and
dec
outsb
mov
sahf
cwtl
or
push
push
adc
test
xchg
pusha
and
mov
out
adc
repz
rcrl
hlt
mov
sbb
xchg
sub
lds
push
xlat
pop
xchg
dec
jno
sarb
jno
fisubs
scas
push
lds
sub
sti
sti
jmp
rcrb
fs
popf
lcall
sbb
push
push
lds
or
sbb
sub
add
dec
lods
fsubrl
jnp
and
pop
push
pop
movl
dec
pop
sahf
out
lds
adc
jnp
jg
fisttpll
ret
fstps
pop
xorb
cmc
movl
cmp
xchg
mov
mov
mov
or
push
rcr
mov
aad
testb
ret
inc
sub
enter
or
dec
inc
mov
jns
sti
js
adc
or
in
inc
cli
outsl
outsb
jo
jae
out
pop
push
adc
in
cli
push
adc
cmpsb
adc
mov
push
pop
data16
mov
add
xor
lods
pop
jge
pusha
jecxz
insl
sub
push
in
arpl
movsb
fmuls
inc
daa
movl
mov
repz
stc
ret
imul
push
mov
and
mov
and
jbe
or
inc
xchg
lock
mov
adcb
sub
mov
scas
mov
shrb
inc
push
sub
add
dec
inc
pop
jge
jge
dec
stos
ja
ret
sub
jl
sub
xchg
or
iret
out
test
push
outsb
insl
mov
adc
in
adc
mov
mov
test
push
enter
fidivs
mov
push
addr16
inc
das
xor
aad
daa
aas
popf
aam
sub
mov
int3
or
and
sti
rcr
jae
aas
hlt
pop
dec
push
out
push
bound
jp
or
popf
out
pop
push
mov
jb
inc
aam
fldcw
cmp
mov
mov
push
pushf
sub
or
js
pop
mov
dec
jns
dec
mov
xchg
call
pusha
sbb
test
test
imulb
out
cmpsb
popf
mov
xchg
xchg
cmp
fadds
and
cld
mov
and
or
cmpsb
cmpsb
cmp
ret
dec
push
dec
sub
push
add
jp
pop
dec
sub
sarb
in
dec
ret
ds
mov
jle
adc
inc
scas
pushf
pusha
mov
adcl
inc
xchg
push
inc
fimull
push
cmp
jb,pt
mov
push
lods
adc
jl
sub
ficompl
daa
test
shl
xor
nop
dec
inc
or
jl
push
jno
jo
sub
out
in
jnp
cmpsb
pop
pop
lcall
pusha
adc
add
inc
xchg
push
mov
cmovb
cmp
cmpsl
pop
test
and
cmp
dec
dec
pop
lret
sbb
and
stc
in
icebp
push
mov
sbb
push
popf
cltd
sbb
push
int
nop
mov
or
divl
xor
fidivl
in
fmuls
imul
fisubrl
aaa
sbb
push
fnstcw
fsts
mov
inc
dec
xor
lods
into
mov
adc
je
not
inc
push
sbb
js
repz
mov
out
lcall
cmp
push
addl
sbbl
adc
mov
adc
adc
mov
int3
in
stc
lret
mov
push
leave
push
fdivrl
push
out
mov
push
jns
jle
lret
repz
xchg
inc
shr
cmp
xchg
or
addl
rol
pop
in
xor
and
and
fdivs
xor
shlb
sbb
icebp
repz
sti
imul
addr16
sbb
pusha
jmp
adc
inc
icebp
outsl
imul
xchg
hlt
adc
repz
adc
test
shrl
roll
pop
or
frstor
sub
pop
dec
add
fistpll
sbb
inc
loop
push
jge
addr16
xor
data16
repnz
loop
cltd
std
jno
call
adc
sub
ficoml
jno
fisubrs
sbb
lea
xorb
aam
mov
push
mov
xchg
das
filds
push
dec
push
mov
loope
lret
inc
push
fbstp
rcl
jae
mov
out
sahf
lcall
jle
adc
stos
mov
or
dec
cmp
inc
mov
push
pop
xchg
lods
mov
flds
inc
popf
sahf
das
test
and
xchg
out
jmp
push
cltd
enter
xor
inc
icebp
and
js
push
dec
outsb
divl
into
sti
or
adc
xchg
shll
or
in
stc
xchg
push
call
push
pop
mov
mov
mov
mov
dec
add
mov
mov
aaa
sub
pop
aad
bnd
and
cs
jb
sti
iret
push
jb
push
inc
arpl
mov
stc
mov
add
mov
push
xchg
pop
or
fistps
decb
mov
mov
mov
fnsave
xlat
sub
or
sub
sarb
push
std
fidivs
iret
dec
pushf
rcr
inc
out
into
js
jg
int
mull
clc
add
hlt
jo
out
das
jmp
push
imul
or
add
mov
cs
mov
stos
stos
and
mov
pop
dec
dec
movsb
arpl
int
pop
mov
push
fs
dec
iret
or
sbbb
ljmp
jmp
and
fs
push
bound
rorl
dec
cmpl
adc
cmp
and
fdivl
sub
xchg
aad
and
test
fildll
ret
stc
lcall
idivb
hlt
adc
addb
aaa
loop
adc
lcall
push
lea
and
jl
push
mov
int
std
push
aaa
imul
mov
aam
bnd
dec
mov
iret
ret
insb
testb
and
jbe
lahf
je
push
cwtl
lods
in
ficoms
mov
loope
sub
or
mov
add
stos
add
mov
and
mov
test
int3
push
stos
mov
scas
fsubs
xlat
adc
xor
dec
or
scas
push
cmp
pusha
push
jae
fwait
sti
jns
sub
insb
pop
or
jne
inc
jmp
cmp
push
xchg
sub
jp
aas
fwait
cmpsb
test
push
mov
mov
sbb
fdivs
jb
xlat
jno
xor
ljmp
jnp
in
leave
repz
in
bound
jp
imul
int3
dec
ja
subl
add
jb
mov
xor
test
cs
sahf
push
fldl
dec
cmp
sub
push
mov
sub
cmovb
sub
fcomp
dec
xor
sbb
pushl
mov
arpl
addr16
hlt
rcrb
arpl
push
icebp
or
jns
cltd
mov
xchg
loopne
sub
or
mov
xchg
aas
mov
insl
mov
jp
stos
out
hlt
sub
stos
mov
and
aad
sub
and
xchg
jb
xor
popa
pop
inc
inc
pop
aam
xchg
loop
jnp
jne
jbe
xchg
cmc
ja
jge
data16
mov
cltd
mov
sbb
push
push
push
xorb
or
or
sub
fldcw
daa
push
scas
or
push
movsl
push
clc
cltd
ret
jl
mov
cmp
fdiv
ret
packuswb
and
lret
jle
sbb
jnp
stc
insl
jge
loop
push
or
gs
loopne
sbb
aaa
mov
outsb
sub
xor
lock
and
mov
xor
mov
dec
pop
test
fdiv
nop
dec
mov
pushf
jno
push
dec
in
push
movsl
repz
push
cltd
jne
or
loopne
cwtl
into
je
push
orb
dec
mov
sub
mov
imul
test
add
cmp
sarl
mov
inc
cs
mov
cld
fstpt
shlb
out
push
push
leave
dec
addr16
inc
sbb
adcb
sbb
dec
sbb
jns
cmc
mov
out
mov
push
addb
cmp
test
rorl
scas
sub
ficomps
enter
mov
adc
fdivrl
and
aad
stos
faddp
dec
repz
les
leave
push
jl
add
test
push
outsl
or
mov
adc
pusha
out
add
mov
or
mov
mov
xchg
repz
xor
cmpsl
pop
cmc
mov
es
icebp
push
pop
out
dec
jmp
pusha
and
fldl
outsl
pop
jp
jmp
pusha
mov
jmp
sbb
add
in
or
push
push
movsl
test
and
xchg
push
xor
and
fnsetpm(287
push
dec
push
imulb
pop
jp
dec
jne
sti
sti
and
arpl
lcall
imulb
sti
movsb
outsb
mov
lock
loope
ljmp
xchg
fcoml
sbb
mov
push
testb
add
inc
mov
adc
fcmovu
push
dec
or
pop
enter
dec
scas
cmp
xor
or
adc
lods
lds
jle
add
in
hlt
pop
xor
out
shll
or
push
call
and
xor
add
je
xor
sub
push
leave
pop
mov
sub
mov
int3
sbbl
sarb
jmp
cmp
in
xchg
inc
dec
lret
bound
mov
jne
pop
push
mov
pop
call
cmp
nop
mov
dec
mov
loopne
sub
pusha
inc
stc
out
stos
sbb
mov
fidivs
adc
pop
inc
adc
adc
mov
flds
hlt
mov
dec
cld
adc
cwtl
jg
mov
xor
mov
aad
les
sarl
mov
lahf
add
cmp
xorl
pushf
sti
mov
fcoms
pop
daa
sbb
xchg
stos
rcrb
inc
push
loop
mov
jl
stos
iret
jno
sub
add
fdiv
insb
out
mov
xor
lcall
or
and
jne
daa
adc
cmp
aas
mov
in
and
pop
out
stc
cld
imul
pop
push
adc
outsl
adc
push
or
je
pop
jmp
xchg
fcmovbe
leave
jo
dec
cmc
add
das
add
dec
out
sbb
sahf
and
sti
pop
hlt
mov
and
xor
cmp
sbb
sbb
pop
ja
mov
and
imul
sbb
mov
adc
popa
je
and
pop
repz
pushf
pop
out
cwtl
and
pusha
outsb
inc
sbb
xchg
jno
push
sub
fwait
and
outsl
add
mov
and
int3
or
fidivrl
mov
cmp
add
mov
cs
mov
test
in
cltd
lret
mov
jge
loope
icebp
aaa
push
push
jb
outsl
adc
or
sbb
in
adc
fwait
xor
lahf
pop
inc
loopne
into
or
cmp
pop
cmp
mov
mov
pop
icebp
ret
sbb
xlat
nop
fbstp
enter
pushf
ja
es
jp
inc
fstpt
jae
ret
hlt
popf
push
sbb
movsb
push
adc
sbb
or
rclb
add
sub
cmp
ss
jns
jmp
mov
push
aad
mov
mov
pop
adc
test
add
mov
arpl
mov
call
stos
in
data16
leave
mov
pop
jnp
jns
jl
rcll
fs
xor
in
xchg
mov
mov
hlt
inc
cmp
push
xchg
or
or
out
call
xchg
rcrb
dec
cld
adc
mov
pop
jl
loope
inc
lcall
adc
imul
push
or
xchg
aas
push
jne
dec
jbe
or
imul
mov
and
mov
jl
pop
xor
push
fisubl
cltd
test
int3
mov
into
push
cld
lret
xchg
addl
imul
in
addb
aam
adc
out
dec
mov
and
xor
outsl
negb
mov
sbb
in
mov
push
imul
xor
aaa
xchg
in
es
xchg
pop
cld
scas
sarl
lds
and
sbb
int
shl
jp
insb
cli
push
jae
sti
shll
sti
in
or
in
sbb
fwait
mov
nop
stos
adc
mov
adc
mov
popf
rclb
xchg
mov
push
idivl
test
mov
xchg
cmp
cmp
nop
push
out
leave
dec
stc
rol
mov
decl
and
imul
aaa
jno
popl
sub
jl
inc
sbb
aad
pop
sbb
std
xor
iret
cld
fs
bound
sbb
das
add
fs
addr16
sub
inc
test
std
movzwl
rol
lahf
int3
repz
stc
push
insb
add
test
shlb
xor
in
clc
pop
lods
fs
ja
jp
pop
pop
nop
mov
call
enter
jp
xor
xchg
test
mov
das
out
dec
pusha
xor
scas
lahf
outsl
push
cmp
fisttpll
mov
movsb
inc
repnz
es
jbe
arpl
fiaddl
incl
movsl
sbb
xor
rcrl
adc
push
pop
fcmove
sub
inc
jle
mov
je
cmpsl
pop
cmp
mov
shll
push
andb
push
scas
rorl
dec
stc
in
xchg
shl
and
call
stos
xlat
out
das
xchg
pusha
call
adc
mov
jmp
fs
rcll
or
out
mov
daa
xchg
pop
xchg
in
xor
mov
inc
into
lods
xchg
xchg
sub
inc
xor
cmpb
jno
ret
cmp
dec
cmc
add
arpl
dec
out
adc
subb
jo
jb
jne
leave
subb
shrb
pop
test
jae
or
lret
push
ds
lods
add
fwait
xor
sub
jp
ss
xchg
sub
add
stos
cmp
outsl
jne
popf
and
loopne
std
gs
cmpsl
sbb
clc
adc
lcall
push
repz
add
fs
cmp
cmpxchg
or
lods
mov
push
fistpl
inc
jle
cmovs
jg
fimull
pop
xchg
mov
and
jae
in
hlt
sbb
es
adc
addr16
pop
sbb
cmc
sahf
fsts
cmp
popl
add
or
sarl
aaa
mov
xor
fsubr
dec
jge
fldt
inc
stc
inc
insb
push
fwait
movsl
dec
mov
lret
fstpl
stos
fcoms
aam
fnsave
jne
adc
insb
inc
sbb
mov
outsl
sub
cmp
xchg
and
es
or
add
xor
xchg
test
mov
das
out
and
sbb
sub
push
fidivrl
lret
stos
jge
icebp
mov
std
inc
fidivrl
ljmp
cmp
jmp
nop
push
stc
scas
lock
mov
cmp
adc
insb
sbb
fdivrs
movsl
lods
push
dec
aam
adc
jle
std
inc
cli
add
es
cld
nop
test
and
lcall
std
pop
movsb
fwait
sbb
push
pop
dec
push
add
or
mov
sarl
mov
mov
stos
mov
push
sub
add
xor
flds
and
xchg
pop
scas
dec
cmp
push
cmp
inc
add
inc
and
adc
push
icebp
stos
repnz
jmp
mov
fdiv
sbb
cmp
lret
pop
mov
mov
cmp
loopne
inc
pop
pop
or
mull
repnz
fs
dec
pop
mov
lods
outsl
dec
inc
xor
adc
lret
jg
fnstenv
aam
fucomip
into
test
jo
std
sti
adc
inc
in
xchg
fwait
inc
jmp
xor
jmp
jb
inc
ja
arpl
push
nop
cmp
adc
mov
cmp
xchg
add
mov
in
and
stc
xor
mov
and
out
dec
popl
sub
and
add
scas
arpl
repnz
mov
sbb
ret
mov
mov
rolb
outsb
test
pop
dec
xor
scas
pop
push
pop
aaa
push
push
movsl
or
cmp
rcll
enter
mov
jns
sub
sti
cmp
test
inc
gs
imul
adc
out
jbe
jmp
mov
pushf
jbe
lret
push
fdivl
jno
imul
repnz
xchg
lods
cmp
in
das
add
push
xor
repnz
cmpsb
dec
mov
stos
dec
cmovne
std
lods
mov
shll
lods
jnp
xchg
movsb
rcll
dec
fmulp
loope
roll
bound
enter
testb
test
icebp
or
cmpsb
int
fwait
push
mov
outsl
cmpsb
pop
mov
dec
cmp
pop
cmpl
xor
xlat
inc
jg
pop
data16
std
jl
es
rcrl
mulb
inc
insb
mov
dec
sbb
jmp
dec
jmp
jmp
jbe
push
adc
iret
test
cmp
xor
cmp
adc
xchg
push
pop
pop
mov
cltd
push
mov
mov
mov
dec
dec
mov
lret
loope
jno
shll
jo
outsb
test
add
stc
add
pop
hlt
sbb
imul
sub
das
adc
mov
xchg
or
test
cmpsb
push
xlat
lret
int3
into
inc
and
orb
jnp
outsl
lret
cmpl
in
inc
pop
sbb
repnz
in
inc
jl
mov
push
inc
jnp
xor
jl
rorl
sahf
daa
ljmp
sti
dec
mov
adc
and
movsb
mov
pop
mov
push
in
ss
mov
pop
pop
mov
sub
std
mov
outsb
mov
aam
mov
outsl
imul
imul
cs
stos
out
mov
mov
cmp
or
mov
pop
and
jo
xchg
cli
aaa
cs
xor
and
pop
jle
dec
repz
lea
push
imul
outsl
jae
add
xchg
jo
jae
xlat
mov
insl
sub
push
inc
sbbb
stc
xor
xor
fdivp
inc
cmp
aas
test
cmpsb
out
pop
pop
mov
jns
mov
ficoms
dec
in
bnd
cli
nop
jnp
or
dec
data16
insl
add
add
loop
sbb
push
pop
lock
aam
add
outsb
mov
jecxz
mov
test
xor
insl
lods
shrl
std
pop
jno
jmp
pushf
push
push
xor
jmp
sub
sub
and
jae
dec
idivl
push
bound
dec
bound
mov
add
hlt
mov
or
sub
loopne
push
in
add
mov
mov
add
mov
xor
fisubl
inc
pop
inc
mov
movsb
sti
pop
push
sti
mov
jb,pt
dec
mov
in
fs
mov
cmp
loopne
mov
adc
mov
dec
pop
push
popa
cmp
fisttpl
dec
adc
in
shll
in
push
rcrb
adc
push
hlt
xor
sti
outsl
pop
cld
mov
cmp
fisubrl
leave
int3
popa
mov
lcall
test
or
pop
push
nop
fiadds
lcall
nop
xor
das
inc
mov
and
xchg
daa
mov
mov
imul
xchg
dec
call
push
push
jbe
outsl
scas
arpl
repnz
or
std
adc
and
push
addr16
xor
push
mov
stos
push
jecxz
imul
dec
lods
push
mov
pushw
ficomps
daa
movsl
adc
inc
fidivs
cmc
cmp
in
out
jmp
in
in
inc
in
sbb
inc
data16
pop
test
push
cmp
add
cmp
addps
scas
jne
mov
shlb
xchg
ror
lret
mov
iret
jge
cli
cs
clc
mov
dec
ja
inc
or
test
xor
jecxz
adc
ds
fcoml
dec
loopne
mov
sbb
cmp
mov
dec
les
das
mov
mov
pop
dec
nop
test
mov
ret
dec
stos
xbegin
rep
outsl
imul
push
pop
fwait
mov
mov
jp
adc
jp
mov
ret
cmp
add
mov
add
add
mov
test
push
stos
push
nop
sub
insl
mov
push
movsl
ret
enter
dec
or
inc
scas
int
inc
test
leave
repnz
in
or
aam
lret
insl
lods
nop
int
adc
repnz
xor
icebp
xchg
push
mov
sbb
fdivs
stos
lcall
jl
adc
sub
and
pop
mov
std
push
mov
dec
cld
stos
dec
cmovo
gs
std
inc
jle
divb
xchg
dec
imul
jne
aad
dec
xchg
divl
xchg
xchg
jne
enter
xchg
sub
mov
pop
mov
scas
add
and
rcrb
mov
mov
sub
push
add
and
ficoml
jnp
insl
pop
bound
jecxz
push
jne
in
clc
sahf
xchg
pop
and
inc
adc
gs
fmull
and
mov
aas
rolb
pop
cwtl
cmp
mov
subb
fucomip
pop
orb
addr16
mov
shl
test
or
sub
lret
ffree
aaa
call
xchg
clc
addr16
dec
cwtl
adc
les
test
clc
ss
das
or
mov
and
fadds
sarl
mov
inc
cs
daa
das
cld
fistpl
pop
push
mov
out
push
jnp
leave
jbe
inc
insl
fwait
sbb
pop
nop
incl
adc
xor
imul
push
mov
jg
adc
xchg
popa
lods
or
xchg
mov
push
mov
enter
test
shrl
mov
jae
gs
nop
push
mov
shrb
xchg
jb
or
js
imul
bound
xchg
mov
xorl
mov
or
add
flds
mov
iret
stos
mov
test
mov
std
fcomp
negb
inc
dec
cwtl
in
lret
js
dec
ja
shlb
cltd
adc
xchg
xchg
jge
or
mov
out
and
mov
jl
xchg
imul
mov
mov
xchg
daa
test
mov
inc
cs
mov
cld
fistpl
rolb
leave
mov
inc
mov
jnp
nop
inc
adc
mov
mov
jnp
pop
sahf
pop
hlt
les
or
mov
shlb
inc
cmp
lcall
jle
loope
in
rorl
movsb
pop
ret
ficoms
dec
xchg
push
mov
ret
inc
push
out
lds
jo
popa
xchg
push
imul
xchg
loopne
xor
pop
adcl
push
cmp
adc
jecxz
rcr
mov
push
ljmp
lods
shlb
xor
jnp
lret
mov
fnstenv
add
bound
jns
iret
sahf
test
push
test
mov
fs
pop
scas
add
or
xor
push
xchg
xor
lods
dec
add
sub
dec
in
mov
pop
dec
call
arpl
negl
xchg
jg
mov
mulb
sti
fisubrs
mov
mov
loope
push
mov
orb
xchg
dec
test
dec
push
cmc
cmp
mov
cli
cmp
lods
rcll
in
sub
dec
sar
push
les
push
xchg
jbe
lret
sbb
jge
inc
int
adc
imul
mov
mov
and
adc
ficompl
js
cmp
xchg
fs
mov
or
pop
cmp
ret
mov
inc
mov
xor
imull
popf
push
icebp
lods
xor
dec
cmp
sub
cld
call
jmp
cmp
jp
ljmp
icebp
pop
inc
in
cmp
mov
fs
loopne
cmpsl
xchg
fldcw
sbb
test
sti
xchg
xor
pop
aas
mov
and
jbe
adc
pop
out
mov
pop
push
inc
jns
push
push
cli
std
lret
in
sbb
movb
add
dec
sbb
sub
jmp
andl
xchg
sub
add
stos
sbb
mov
cmpb
sub
jb
sub
and
push
lods
mov
ret
lret
insb
xchg
rcll
inc
out
dec
mov
lahf
dec
ret
pop
out
inc
lds
loopne
jo
jecxz
sub
sbb
sbb
es
add
adc
xlat
cltd
and
add
push
pop
mov
xor
jmp
mov
dec
lea
jge
clc
inc
and
push
lock
insb
add
jl
dec
jmp
hlt
fbstp
mov
jp
imul
insl
adc
jbe
in
and
sub
test
adc
xorl
mov
inc
add
stos
das
dec
int3
inc
and
mov
sub
push
mov
je
lods
dec
push
inc
inc
fimull
jne
ret
std
imulb
jle
sbb
jb
sbb
ja
lcall
aas
adc
jae
imul
xchg
xchg
test
mov
ret
daa
mov
push
scas
mov
aad
fdiv
xor
aad
jmp
pop
or
jl
xchg
jle
push
or
rcrl
call
mull
cmp
ret
sbb
imul
insl
cmpsl
adc
or
adcl
xchg
mov
jbe
mov
or
mov
and
iret
mov
and
leave
pusha
movsb
push
mov
xor
rol
roll
rcll
mov
xlat
jp
jmp
pusha
adc
jne
xchg
sub
adc
sbb
xchg
push
mov
setnp
int3
mov
daa
mov
fdivr
movsl
dec
subb
and
rorl
fstpl
aad
inc
hlt
dec
es
outsb
xchg
int
notb
out
mov
mov
inc
push
lods
adc
les
add
int
lods
mov
mov
aaa
pop
add
sub
push
mov
lea
hlt
push
pop
repz
les
popf
rol
jmp
xor
sbb
jnp
jmp
cmp
loopne
call
lds
jle
setae
das
mov
mov
and
pop
ljmp
movsl
decl
cmpsl
push
sub
mov
fsub
and
dec
dec
fildll
rorl
pop
xchg
jmp
cwtl
xchg
kmovw
jge
jge
or
insb
subl
pop
xchg
cmp
add
getsec
mov
lods
int
cs
mov
jle
add
mov
call
loopne
push
sbb
mov
adc
or
ret
sti
test
mov
dec
lock
add
adc
in
call
lea
movsb
nop
outsl
aas
fimuls
or
std
sub
pop
jnp
dec
and
push
hlt
mov
frstors
inc
clc
leave
roll
inc
inc
and
outsl
jecxz
jo
lahf
ds
sbb
or
gs
or
push
adc
mov
cmpb
es
cmp
xor
cmpsb
pop
xchg
fidivl
arpl
sbb
fwait
cli
adc
les
dec
lock
sbb
in
jns
fs
inc
out
ficoms
mov
je
adc
sbb
and
xchg
sbb
mov
dec
scas
dec
cmp
test
jl
sbb
jb
jle
and
shl
daa
fiaddl
and
loope
aad
adc
outsb
push
push
outsb
inc
jo
in
lock
sbb
pusha
das
stos
pushf
mov
in
mov
mov
sub
sub
xchg
pop
scas
daa
fcmove
repnz
inc
sub
and
push
pop
lahf
cld
push
mov
aad
dec
jne
push
loope
inc
negb
sbb
sbb
repnz
ja
or
imul
into
out
mov
xchg
dec
pop
push
pop
test
pop
and
adc
push
addr16
dec
adc
sti
or
roll
fisttpll
jno
bound
dec
inc
icebp
pop
gs
sub
pop
xchg
jo
xchg
xlat
div
or
mov
mov
popa
add
sbb
fistl
das
push
lea
imul
dec
test
iret
out
dec
jp
xchg
lfs
lock
xchg
je
cmp
add
hlt
sbb
cltd
cs
sbb
or
rolb
jl
mov
sbb
mov
jecxz
and
sahf
xchg
sar
nop
mov
adc
iret
jno
jge
cmpl
push
inc
mov
shrl
scas
sub
test
daa
dec
xchg
add
in
lahf
add
sarl
xlat
das
js
push
jae
pop
dec
ja
imul
dec
sbb
int
mov
xchg
push
pop
push
cmpsb
repz
aam
push
imul
sub
lahf
mov
jl
dec
jne
and
add
pop
gs
jae
mov
outsl
or
push
and
mov
fnstenv
xor
fisubrl
cmpsw
ret
daa
sbb
push
js
mov
mov
dec
testl
mov
push
std
sub
adc
mov
and
test
inc
test
jg
leave
adc
shl
scas
jp
in
sub
sub
mov
in
jne
pop
gs
int
stc
lods
sbb
or
push
cs
mov
sub
sub
out
pop
pushf
xor
iret
or
jae
ficoms
push
mov
push
int
test
clc
adc
fsubs
stc
dec
pop
ja
xor
or
test
cwtl
and
sbb
addr16
xchg
and
fcoms
out
out
add
jne
test
cmp
mov
or
pop
pop
xchg
sbb
sub
js
jno
shrb
mov
cli
je
fwait
ss
loop
sbb
sbb
adc
and
or
mov
mov
lods
add
cmp
addr16
dec
jae
lods
dec
mull
jmp
ss
cli
push
icebp
sahf
mov
xchg
jnp
adc
ret
inc
pusha
add
pop
jl
mov
sub
jmp
fisttpl
mov
push
add
jo
xchg
andnps
mov
addr16
xlat
fwait
sbb
dec
sbb
and
pop
cld
ficomps
popf
fbstp
jp
shl
cwtl
sahf
inc
clc
push
sbb
jp
lds
divb
push
xchg
dec
jmp
or
push
lahf
push
adc
jb
mov
aad
sti
push
xchg
insl
xchg
mov
ret
xor
mov
or
mov
lret
push
pop
iret
dec
aas
jg
inc
andb
cld
outsl
rorl
adc
inc
mov
addr16
sbb
mov
lds
push
push
mov
test
add
mov
ret
xor
and
push
insl
mov
popa
sub
cmp
mov
ss
data16
pop
shl
mov
fdivr
imul
nop
dec
out
and
xchg
inc
repz
xor
cmp
push
xor
sbb
cmp
mov
mov
das
push
xor
mov
add
add
push
sub
jp
dec
and
xchg
imul
shlb
in
mov
mov
or
mov
in
adc
jp
push
filds
lods
ret
mov
cli
push
xor
pop
adc
cli
das
cmpsb
ljmp
movsl
push
sub
pushf
push
mov
dec
fdiv
lods
inc
into
cmpsb
sti
ret
pop
cld
inc
shrb
sbb
adc
out
jl
or
jmp
gs
adc
push
data16
mov
add
push
mov
or
shrb
bound
add
ret
sub
lcall
aam
aam
mov
inc
sbb
jp
addr16
inc
jecxz
fcomi
test
addr16
out
call
leave
insb
xchg
ret
in
add
adc
ja
xchg
sbb
outsl
cmp
pusha
xchg
ret
and
xor
bound
pop
jb
and
cwtl
int
pop
xor
ret
jg
rcrb
jp
inc
push
call
dec
lock
in
out
lds
jle
int3
sbb
cmpl
loopne
and
aas
jne
add
mov
mov
cmp
xor
ficoml
stos
mov
fisttps
xchg
cmp
roll
push
or
js
jo
inc
xchg
push
jl
aad
test
nop
fsts
xchg
push
xchg
mov
xor
lds
fisttpll
sbb
xlat
aaa
int3
orl
repnz
pop
sbb
sub
mov
mov
inc
fcomps
aas
push
sub
mov
mov
hlt
mov
stc
mov
pusha
popf
inc
pushf
lret
push
inc
gs
cmp
jno
dec
mov
mov
push
xchg
sub
adc
xor
push
bound
es
mov
lods
iret
loope
ljmp
inc
je
outsl
in
out
int
dec
xor
lret
nop
pop
int
testl
sbb
lahf
mov
pop
out
mov
popl
inc
mov
cs
shll
imul
mov
sub
xchg
loop
dec
push
fadds
sbb
lret
call
std
loope
psubsb
hlt
adc
insb
mov
or
or
loope
mov
scas
mov
pop
sub
push
sub
in
push
xchg
pop
and
mov
dec
sub
and
pop
fisubrl
fsubp
je
xchg
push
test
xor
inc
mov
jle
xchg
bnd
ja
or
xchg
stos
cmp
mov
ret
mov
mov
mov
test
roll
push
mov
mov
shrb
nop
je
add
fistpll
aam
bound
out
dec
fwait
inc
rcrl
jb
loopne
push
subl
loop
lock
push
popf
movsb
mov
push
test
test
xchg
xor
rcrl
filds
aad
ljmp
dec
rol
dec
test
inc
loopne
jecxz
cli
popf
jg
push
lock
push
arpl
pusha
inc
arpl
push
sahf
fmull
mov
ret
sub
inc
subb
sbb
mov
add
mov
pop
adc
fadd
xor
inc
and
stc
movsb
jle
pop
je
fnstsw
push
lret
icebp
in
test
jnp
push
notl
clc
inc
int
bnd
pop
imul
inc
cli
adc
cmp
push
sub
and
pop
xchg
sbb
dec
push
mov
mov
inc
mov
leave
adcb
dec
push
mov
push
jmp
xchg
jecxz
adc
rcrb
jg
mov
mov
mov
sub
cltd
mov
and
pop
daa
add
xchg
xor
std
inc
jle
je
sub
inc
cltd
and
js
cmp
push
cwtl
gs
sbb
xchg
xchg
push
pushf
adc
inc
add
xchg
xchg
nop
push
repz
mov
insb
popa
loop
xchg
push
lahf
mov
pop
or
ret
orb
mov
cld
mov
and
jnp
fisubl
in
jb
outsl
mov
outsl
push
push
ljmp
ret
mov
mov
mov
pcmpgtw
shrb
mov
rclb
xchg
daa
adc
leave
or
mov
lret
mov
fadd
jns
cli
stc
inc
jnp
jno
daa
jl
imul
insl
sbb
in
adc
dec
or
xchg
mov
add
lock
push
mov
push
mov
jo
cmp
or
mov
adc
bswap
mov
and
mov
and
mov
ret
jo
dec
gs
fsubrs
mov
inc
rcll
sbb
or
or
cli
jnp
add
mov
mov
cltd
push
imul
ss
xchg
gs
cmp
pushf
out
xchg
add
cmp
pop
aad
addb
xchg
dec
pop
aas
mov
push
stos
je
jns
fildll
std
pop
outsb
sub
push
sbb
pop
stos
sbb
adc
sahf
adc
test
pop
jle
xchg
icebp
xchg
dec
pop
lahf
incb
or
or
mov
cs
fsubl
push
lea
add
mov
cmp
jne
clc
xor
dec
scas
lock
repnz
movsl
inc
cmc
jmp
popa
aam
dec
jl
pop
lcall
movsl
jno
cmpsl
repz
xchg
cmpsb
sbb
push
cmpb
sbb
scas
or
pop
fildl
sub
sub
cmp
push
aas
pop
shll
movl
push
loopne
stc
push
icebp
flds
inc
outsb
shl
push
mul
push
push
leave
jne
shrb
out
ss
imul
je
push
test
pop
test
cmpsl
mov
mov
scas
mov
xchg
jl
pop
pop
cmp
leave
mov
ljmp
lret
lret
inc
jae
push
jns
dec
jne
dec
sahf
iret
ljmp
adc
mov
fwait
sub
adc
sahf
mov
mov
add
push
xchg
xchg
jae
or
sbb
mov
xchg
xor
sub
mov
test
inc
insl
sub
loope
push
lcall
pop
fucomp
jae
push
ljmp
inc
fs
push
pop
adc
test
movsl
adc
outsl
mov
std
subb
push
fcoml
inc
dec
mov
dec
xchg
aas
fwait
test
and
ret
lods
es
test
mov
dec
dec
decb
int
ja
dec
jns
in
arpl
rorb
dec
jle
mov
ljmp
outsl
pop
push
and
mov
cmpsb
adc
xor
mov
xlat
push
cmpb
js
mov
inc
ret
sub
mov
or
fimull
cmpsb
cli
nop
push
leave
jg
dec
xchg
inc
decb
dec
unpcklps
stc
test
xchg
test
sub
enter
mov
rorb
and
test
stc
std
pop
cs
and
push
and
dec
push
fistpl
dec
fst
inc
ret
xlat
push
insl
sahf
xchg
adc
jp
push
and
cmpsl
out
ljmp
cli
sahf
out
sbb
or
mov
inc
xchg
xor
mov
pop
insl
mov
lds
xor
fcmovnb
sub
js
and
imul
in
pushaw
or
sub
dec
mov
jbe
xlat
dec
loop
jle
cmp
fldl
ret
fwait
sbb
dec
addr16
mov
sbb
out
add
jmp
push
push
mov
mov
ficomps
push
pop
inc
in
inc
test
fiaddl
rcl
dec
jnp
dec
jbe,pn
int
jnp
or
out
push
outsl
pushf
adc
adc
popa
sahf
call
sub
lods
aam
das
dec
and
enter
fistpll
mov
inc
mov
mov
pop
cmpsb
jg
les
dec
mov
cmovs
jp
cld
jo
ret
sub
out
inc
std
jp
rorl
sub
inc
shrl
fwait
out
pop
xchg
popf
loopne
je
sub
mov
xor
mov
and
daa
fbstp
and
pop
pop
sub
cmpsl
insb
xor
dec
dec
fdivp
inc
dec
rclb
and
push
rcll
insb
jae
or
icebp
enter
out
insl
adc
arpl
aad
pusha
mov
test
push
clc
pushl
jae
fxtract
test
lret
dec
jae
mov
sub
test
jbe
adc
out
jae
in
imul
sbb
jnp
push
sbb
push
pop
pop
mov
cmpl
mov
and
mov
cmp
sub
jg
mov
dec
fiaddl
je
dec
cmp
into
lds
xorb
adc
aad
shll
pusha
aaa
mov
js
inc
fwait
xchg
add
add
jno
pusha
jns
repnz
xchg
pop
xchg
fucomi
call
adc
cmp
mov
cmpl
push
dec
push
dec
inc
sar
mov
stos
xor
js
jg
hlt
jno
dec
hlt
adc
cld
sbb
sbb
stc
pushf
enter
into
push
dec
push
cmp
mov
aaa
out
mov
add
scas
scas
lea
lahf
adc
mov
aam
rorl
orl
pop
clc
int3
and
js
int3
mov
je
shrb
lods
pop
std
dec
fs
jl
jl
dec
jb
int3
test
sbb
repz
shl
or
sbb
mov
subb
leave
push
addl
sub
sahf
lea
mov
aaa
stos
lds
jp
adc
pop
inc
outsb
out
fiadds
pop
inc
das
sarb
lret
jno
ret
sahf
mov
cmp
lea
ljmp
insl
mov
repz
lea
cmp
mov
push
and
push
mov
ret
js
jg
jno
xor
add
leave
int
movsl
mov
jp
sar
add
pop
xchg
lcall
lds
jns
mov
xchg
push
mov
mov
int
mov
pop
aas
fmuls
lea
daa
shlb
xor
sarb
shrl
and
jmp
lcall
cmp
dec
cmp
jno
scas
push
sahf
and
xor
out
wrmsr
cmp
lea
sbb
icebp
push
and
cmpsb
mov
xchg
es
mov
cmpsb
aad
pop
ror
stc
out
das
and
shrb
xlat
rcr
movsl
lcall
pop
inc
js
aad
imul
hlt
pushf
cmp
nop
xchg
outsl
pop
std
fwait
dec
jno
sbb
mov
pop
xchg
mov
daa
adc
pop
mov
mov
pop
aam
adcb
cmp
lret
neg
jnp
mov
lods
mov
push
clc
loopne
cltd
push
fwait
inc
sbb
cs
pusha
mov
cwtl
mov
stc
dec
cmp
add
iret
adc
outsl
sbb
cmp
inc
pop
push
mov
pop
fcom
dec
rolb
shlb
dec
enter
je
jo
fcomi
arpl
push
stos
jne
xlat
sbbb
call
adc
mov
lds
loope
mov
popf
or
mov
stos
push
xchg
sti
sub
mov
add
adc
lret
and
xor
xor
cmpsl
mov
sbb
idiv
rorb
push
mov
mov
add
jb
insl
pop
xchg
mov
insl
xor
cmp
adc
mov
mov
lcall
movsb
rcr
push
mov
and
mov
mov
int
nop
xor
pop
roll
dec
mov
les
sti
jb
je
xchg
loopne
pusha
sbb
add
sbb
int
stc
call
test
xchg
ljmp
sahf
gs
and
pop
dec
mov
and
adc
roll
test
and
clc
shll
xchg
je
push
imul
stc
cwtl
insl
popa
sarb
repz
cwtl
hlt
inc
adc
andb
or
adc
divl
mov
push
mov
cmp
inc
nop
and
add
adc
mov
ss
mov
inc
cmp
shrl
inc
fisttps
ljmp
lcall
adc
sahf
pop
addr16
data16
out
shll
jecxz
hlt
adc
xor
mov
sub
movsl
xchg
cmpsl
fistps
roll
adc
repnz
mov
jnp
or
jae
cmp
cmp
out
shlb
loope
jmp
sbb
in
mov
aam
incb
das
cmp
enter
add
test
adc
add
mov
sbb
sbb
xchg
adc
or
xor
push
push
push
outsl
stc
dec
call
xchg
mov
int
stos
movsb
jl
int3
jae
mov
std
out
testl
in
jmp
add
push
xor
ret
stos
ds
mov
dec
xchg
cmpsl
stos
ficomps
jne
or
dec
std
lret
add
jne
shll
scas
pop
cwtl
jle
cmp
cmp
les
add
shl
lahf
lret
lock
or
gs
push
mov
fiadds
daa
jecxz
xor
sub
add
jl
cmp
add
mov
mov
mov
shll
jl
rcl
pop
movsb
jg
cmp
rol
cld
push
cmp
xchg
enter
xchg
mov
push
lds
das
lock
fs
xchg
pop
xchg
push
das
lahf
sbbl
pop
jo
xor
mov
test
push
shl
sub
xor
rclb
fwait
popf
adc
fadd
add
js
js
or
inc
jno
jmp
out
loop
mov
jge
bound
jne
pusha
pushf
sbb
or
xor
cmp
or
out
pop
sub
mov
jl
mov
shl
and
sbb
jg
int3
jp
aam
shr
ljmp
sbb
or
push
push
mov
or
xchg
loope
xchg
mov
xchg
cmpsl
add
push
aas
adc
push
enter
arpl
ret
insl
scas
shlb
and
pop
rcrl
fldlg2
pop
shll
mov
dec
push
lcall
or
in
push
and
sbb
xchg
repz
data16
fwait
test
sbb
adc
push
adc
or
adc
mov
mov
mov
test
inc
sub
dec
lret
out
mov
rclb
into
adc
lds
fs
test
and
push
bound
dec
mov
or
sub
mov
sub
pop
movsl
push
lret
inc
inc
std
jne
sub
mov
call
cmp
dec
push
xlat
sbb
enter
icebp
pop
inc
xchg
divl
clc
mov
jge
scas
icebp
xchg
jmp
jg
cmpsl
pusha
sub
adcl
pop
mov
mov
push
cmp
leave
test
test
dec
fcompl
mov
fsubs
psrlw
stc
push
adc
dec
hlt
inc
dec
or
mov
sbb
jb
push
cmp
test
sub
sahf
or
enter
or
and
mov
cmp
lret
arpl
outsl
stos
test
pop
in
pop
lock
enter
ficoml
or
dec
iret
jl
xchg
icebp
gs
pusha
out
call
push
mov
and
jl
push
sbb
and
mov
and
mov
dec
rol
mov
das
jo
shrl
mov
ret
adc
dec
cmpsl
pusha
sbb
mov
sbb
into
lods
inc
add
lds
insb
call
jecxz
popa
aas
hlt
imul
push
mov
push
lods
mov
xorl
add
xor
xchg
sub
cli
cmpsb
xlat
mov
sub
adc
lret
or
inc
xor
jle
sbb
push
pop
stc
mov
je
lods
out
repnz
repz
jno
cwtl
add
in
out
pop
inc
add
popf
js
adcb
fnsave
pop
sub
xlat
xor
inc
mov
jle
repnz
and
insb
jnp
xchg
stc
jmp
xor
dec
sub
push
dec
xor
out
loopne
lods
addr16
sub
loopnew
sbb
movsb
inc
inc
loopne
xchg
or
stc
mov
xchg
push
mov
pushf
ss
mov
pop
mov
in
inc
fidivrs
fisubrl
pop
sub
frstor
ror
jge
dec
xchg
inc
in
pushf
or
fs
push
mov
push
cwtl
insb
jmp
adc
in
adc
xor
in
mov
sub
mov
dec
add
aas
mov
ss
sub
std
cmpsb
leave
mulb
lret
jmp
enter
ror
les
inc
nop
insb
bnd
xchg
push
test
fwait
lcall
loope
xchg
bndstx
dec
pop
or
and
rcrb
push
cmp
sub
add
lahf
fildl
insl
fisubrl
pop
fsubr
pop
out
test
add
incl
jbe
mov
stos
je
jge
call
in
mov
mov
dec
mov
int
xchg
imulb
jecxz
add
cmp
jno
mov
and
lods
shll
pop
dec
push
inc
f2xm1
push
lcall
ror
jle
sbb
ja
js
adc
pusha
adc
jmp
arpl
mov
and
sub
ffreep
bound
pusha
aad
mov
push
mov
dec
xor
shlb
push
xchg
and
mov
push
out
cld
dec
sbb
inc
fstpl
gs
jae
xchg
adc
xchg
call
jmp
pushf
out
xchg
xor
sub
cmc
daa
leave
xchg
cmp
pop
push
dec
adc
cmp
fs
ret
sub
scas
and
int3
aam
enter
fldenv
iret
jo
inc
mov
sub
ja
inc
and
mov
incl
jmp
ja
adc
in
out
pushf
in
adc
cwtl
flds
subb
push
addb
mov
mov
sahf
xchg
xor
cltd
ss
cmp
jecxz
cmp
push
sbb
and
add
or
adc
cli
adc
xor
cwtl
insb
inc
sar
aaa
dec
imul
insb
inc
or
push
notl
int
fldenv
cmp
or
xor
insb
adc
pop
inc
jnp
clc
inc
movsb
rcll
call
mov
out
cltd
pop
dec
pop
stc
popa
popa
pop
into
sbb
adc
pop
js
xchg
orb
cmp
mov
sub
popf
mov
es
pop
add
movsl
dec
shll
add
inc
mov
aam
iret
cmc
lds
cmovle
and
and
mov
iret
icebp
sbb
dec
jmp
xchg
xchg
lock
mov
das
mov
loopne
or
dec
sub
cwtl
jbe
adc
das
sbb
aam
sub
inc
add
mov
push
push
dec
cmpsb
mov
pop
jne
dec
sub
push
pop
cli
int3
pop
js
out
push
mov
push
cli
iret
jb
call
out
hlt
jns
sub
loop
sahf
pop
mov
xchg
sbb
enter
dec
add
add
cmc
pop
mov
idivb
inc
push
push
aam
jp
lods
out
mov
and
out
sbb
jno
jg
cld
lock
push
jmp
dec
sbb
int
lcall
jle
loope
call
xor
popf
insb
sub
popa
sbb
lahf
roll
xchg
or
xchg
push
pusha
mov
popa
fldenv
push
jne
lcall
insb
pop
xchg
lret
addb
out
mov
mov
sti
outsb
nop
xlat
imul
fdivrs
inc
cmp
movsl
and
push
dec
lods
popf
or
adc
shrb
push
pop
xchg
inc
movsb
xor
dec
push
ss
dec
sub
das
in
xor
pop
and
lock
push
gs
add
lret
pop
aad
push
add
jmp
out
insl
push
mov
xchg
adc
scas
fisttps
mov
pop
cmp
fcomps
subl
addr16
je
imulb
rorl
sbb
jge
dec
loope
inc
dec
in
or
jno
jge
icebp
sub
idivb
push
movsb
add
sbb
cs
or
push
and
mov
push
cmp
jnp
xor
cld
pop
cld
or
hlt
loop
ficompl
fdivl
adc
push
push
in
cmp
lret
imul
xor
cltd
sbb
inc
sbb
nop
adc
cmp
ss
cwtl
sbbw
ds
mov
pop
lea
in
mov
cmpsb
push
mov
shrb
test
lret
cltd
insb
cld
arpl
xchg
xor
or
in
scas
in
or
imul
mov
push
mov
repz
cltd
mov
xchg
and
or
sar
imul
dec
movsl
jp
sti
jmp
lret
pop
out
lods
je
out
nop
daa
imul
jge
roll
jl
into
adc
inc
xchg
or
nop
add
testb
push
and
test
test
lods
add
int3
icebp
jge
mov
jae
or
loope
ljmp
sbb
push
push
dec
adc
rorb
in
or
subb
aam
lods
mov
jle
jge
test
stc
cmp
or
je
lcall
clc
xchg
xchg
das
push
sub
je
adc
shrl
rorl
and
mov
mov
in
cmpsb
ficoml
mov
stos
add
inc
daa
dec
out
addr16
jmp
bound
mov
mov
push
outsl
aad
cmpsb
cmp
fnstsw
in
mov
movsb
fucom
push
mov
das
call
stc
adc
es
and
ja
ret
rol
push
out
cmc
xchg
mov
pop
ja
sbb
mov
mov
sub
xchg
xor
out
les
push
or
pop
jns
mov
pop
inc
enter
int3
adc
les
cli
add
adc
addb
aas
and
jp
mov
adc
mov
sbb
out
or
subb
push
and
dec
pop
lds
lret
out
mov
dec
xor
cld
insb
cmp
mov
xor
pop
sub
or
pop
out
add
stc
mov
out
dec
push
inc
push
inc
js
push
jb
lret
mov
push
mov
mov
fstpl
mov
sahf
lret
nop
into
jmp
ds
aas
into
cs
xor
out
push
lcall
pop
stos
and
inc
dec
pop
mov
push
sub
xchg
ret
sahf
int3
pop
sbb
xchg
add
outsb
xchg
cmp
sbb
mov
ss
ss
xor
add
int3
pop
lods
or
roll
mov
cmp
scas
xchg
cmp
lods
pop
adc
repz
test
ja
in
cmp
dec
dec
add
lret
stc
orl
mov
push
cmp
add
jg
sub
pop
push
mov
xor
ucomiss
inc
test
outsl
popa
mov
dec
stos
repnz
ret
cmc
cmpsl
in
dec
test
fwait
rcll
mov
mov
jne
jg
test
repz
jbe
xor
mov
xchg
pop
or
or
lods
sub
or
mov
clc
inc
add
push
bnd
lds
nop
imul
sub
and
sub
push
pop
jg
dec
aad
dec
aas
sbb
inc
cld
mov
or
push
cmc
ds
mov
imul
lret
add
mov
mov
add
xchg
xor
cltd
stos
ret
xorb
mov
add
mov
xor
pop
nop
sub
in
push
movsb
lret
dec
and
inc
outsl
rol
enter
inc
repnz
jno
dec
es
adc
mov
jl
xchg
add
or
in
scas
and
add
or
and
movsl
sbb
int
dec
xchg
icebp
mov
inc
lahf
shrl
dec
filds
lods
cmpsl
inc
cmc
daa
daa
mov
inc
cmpsl
aam
testl
jge
icebp
sub
jl
div
cwtl
int3
rcl
jb
xchg
add
pop
lods
mov
add
push
dec
xchg
test
mov
pop
dec
cltd
or
push
push
adc
fucomp
test
rorl
dec
addr16
inc
out
sbb
lds
cld
addb
xlat
jb
lock
aam
adc
in
imul
lcall
icebp
mov
cmp
aad
sub
sub
mov
es
mov
stos
rcr
stc
sbb
push
sub
mov
jge
dec
push
cmp
repnz
lcall
shl
sbb
sbb
push
cmp
movb
xchg
test
mov
cmpsb
xor
scas
scas
fsubrl
daa
mov
inc
cltd
gs
mov
jp
popa
in
lcall
lcall
pop
inc
xchg
out
push
jle
addr16
jo
lock
inc
mov
test
or
xor
and
jnp
roll
adc
and
sahf
mov
movsl
mov
sub
push
pop
mov
dec
bound
shlb
inc
mov
cmc
inc
xchg
outsl
jp
jbe
xchg
adc
popf
mov
loope
lods
addr16
pop
or
sahf
push
add
mov
add
mov
mov
cmc
mov
pop
sub
mov
and
push
add
rcl
cmp
dec
leave
sbb
push
sbb
inc
mov
ds
mov
xor
cltd
push
arpl
jmp
xor
add
xor
lret
ja
mov
jg
inc
dec
ds
in
jg
insl
pop
cmpsl
sbb
jo
xchg
out
into
insb
dec
rol
xor
pop
dec
in
test
adc
mov
call
cmp
call
test
loop
mov
in
repnz
test
xchg
sub
or
or
mov
fcmovbe
mov
divb
sub
outsl
daa
sub
pop
pop
hlt
es
aam
or
loop
sbb
sbb
adc
cmp
repnz
in
or
arpl
ds
cmp
adc
jo
int
fiadds
pop
fistpll
enter
das
xlat
fldcw
push
jno
dec
push
pop
push
pop
loop
jne
loope
out
or
movsl
loop
cltd
adc
pop
mov
mov
jecxz
jl
sahf
int3
int3
arpl
mov
ds
or
sti
cmpsl
jge
loopne
std
and
xlat
sbb
enter
ljmp
test
push
cld
clc
jnp
les
stos
sbb
jp
ljmp
into
or
push
sahf
pop
sbb
push
pop
dec
pop
mov
out
lahf
mov
loope
mov
daa
or
push
xchg
push
mov
add
mov
adc
dec
mov
mov
xorb
pop
shl
lods
cs
jae
sbb
je
jmp
push
or
adc
or
pusha
push
lock
jo
add
cmp
sbb
testb
adc
movsl
mov
mov
xor
addr16
sbb
pop
repz
push
imul
push
loope
dec
jb
out
ret
adc
popf
out
inc
jns
ja
pusha
fs
jnp
jge
push
jno
test
jns
xor
sahf
xor
mov
push
popf
fimull
mov
sub
cmp
mov
mov
mov
mov
xor
mov
xor
sbb
mov
cmpsl
cmc
nop
fcmovnu
mov
pop
push
ja
inc
fwait
dec
loop
ret
mov
sub
adc
mov
scas
aas
pushf
jo
das
pusha
sub
add
mov
add
or
push
repz
cwtl
sub
sti
movsb
add
rol
fdivr
daa
jo
push
sbb
jne
mov
jp
ja
mov
fstl
hlt
cmp
sbb
fbstp
sbbb
xchg
mov
mov
push
adc
sbb
sub
fucomp
cs
push
movsb
mov
fmull
je
inc
aaa
sub
add
inc
roll
jmp
sbb
in
add
lods
jmp
cs
xchg
mov
lods
nop
jno
xchg
mov
xor
push
maxps
inc
jg
ja
out
cltd
imul
iret
mov
inc
jno
jl
popf
inc
je
fadds
jbe
lcall
cltd
xchg
in
sbb
aas
sbb
mov
orb
test
xchg
stos
icebp
sub
mov
sub
leave
push
es
adc
into
ffree
dec
xor
jle
leave
shlb
ret
call
arpl
xchg
ret
ljmp
pop
bound
push
ficoml
mov
mov
push
sub
mov
stos
xchg
loopne
xor
fnstenv
sar
movsl
push
pusha
gs
inc
pop
inc
dec
inc
cmp
dec
ret
jo
and
call
pusha
push
mov
cmp
loop
jl
sbb
or
movsb
or
inc
cmp
dec
xor
mov
das
mov
and
repz
imul
outsl
jecxz
dec
int
pop
sub
out
adc
sub
cs
je
idiv
imul
lock
loope
jns
jmp
fcoml
inc
sahf
pop
mov
sub
mov
lahf
xor
or
int
cmc
cmp
mov
out
shl
pop
lods
jne
movsb
clc
arpl
in
ret
lret
push
dec
call
inc
push
or
inc
or
repnz
addr16
lea
cwtl
adcb
push
cmp
pop
mov
out
xlat
int
xchg
inc
and
aam
xchg
dec
pop
loope
jl
jmp
mov
addl
jge
lcall
add
icebp
mov
cmc
add
scas
jg
xchg
lret
out
jns
aas
or
test
incl
mov
fisubs
das
or
cmp
inc
dec
xor
int3
inc
fiadds
pusha
out
push
cld
ljmp
call
ret
lcallw
sbb
out
or
push
loop
insb
lods
xor
xchg
ss
pop
pop
mov
fildl
mov
ret
aam
js
jg
scas
mov
cli
cmp
clc
fwait
xlat
push
pushf
fdivrp
push
enter
jge
int
add
mov
mov
cld
xchg
or
ss
aaa
mov
mov
xor
xor
mov
xchg
fcomp
jns
inc
lcall
fisttpl
push
push
dec
fcmovne
dec
fstpl
cli
mov
sub
ret
ljmp
sti
out
out
adc
push
sbb
jae,pn
stos
sub
mov
mov
pop
or
stos
dec
test
fcoml
popf
ds
clc
cmpsb
insb
lock
fsubrs
pop
push
jle
call
repnz
leave
dec
in
adc
out
xchg
mov
call
aas
xchg
loopne
or
into
shll
cmp
fmull
mov
add
dec
push
dec
xor
xchg
test
push
rcl
xchg
inc
push
movsl
dec
leave
dec
in
xchg
push
push
inc
data16
lcall
hlt
adc
jp
mov
add
or
loop
shll
cmp
or
stos
pop
jmp
pop
cmpsb
dec
movsb
add
stos
xchg
sub
shll
inc
dec
xchg
xor
push
xor
or
dec
and
adc
out
cmp
out
mov
shrl
hlt
gs
push
push
bound
cmpsl
insb
test
sbb
jb
mov
pop
jns
dec
mov
push
push
sbb
and
jb
xchg
push
mov
in
pop
pop
jecxz
je
push
movl
test
add
bound
mov
aaa
in
mov
fiaddl
rorl
dec
lret
dec
inc
sarl
xor
sub
in
adc
in
flds
lret
inc
in
push
lock
dec
adc
jo
cmc
adc
loopne
mov
hlt
or
pop
sbb
out
gs
lods
inc
mov
rorl
push
or
mov
sub
cld
aad
sub
and
popa
clc
in
jno
push
push
jg
scas
pop
lahf
push
call
clc
mov
loopne
cwtl
xchg
pmuludq
out
jb
stos
loope
pminsw
sbb
or
pop
popa
mov
sbb
test
shrd
add
scas
call
mov
pop
or
jmp
xlat
adc
leave
jns
dec
enter
sarl
jle
mov
rcl
lds
mov
lock
push
cmp
mov
out
sbb
or
fbld
or
add
push
pusha
jno
cmp
mov
fmul
jle
loope
lret
dec
loopne
js
dec
cmp
insl
cli
out
sti
jae
sub
mov
jae
addr16
jg
notl
test
icebp
mov
cmp
test
pop
and
add
movsb
xchg
jae
adc
push
add
loope
fmull
ljmp
mov
filds
and
pusha
je
add
pop
dec
mov
jmp
pop
mov
xchg
insb
add
jmp
add
into
cmpsb
scas
and
aas
enter
adc
sbb
mov
push
push
shll
outsb
sub
lcall
and
xchg
push
dec
mov
daa
inc
dec
push
sbb
mov
and
fidivrs
jns
adc
imulb
lahf
pop
out
mov
sub
mov
mov
cmp
or
xor
mov
mov
mov
iret
pop
cld
sub
scas
and
pop
insb
insb
or
int3
mov
popa
dec
mov
fcmovb
push
inc
sbb
jno
pop
outsb
icebp
xchg
mov
stos
xor
pop
cvtdq2ps
xchg
and
imul
xor
dec
dec
sub
cmpsb
mov
cs
mov
shr
out
test
cvtps2pi
dec
in
insl
loope
mov
clc
adc
xchg
addr16
dec
jmp
mov
mov
mov
lret
xchg
adc
int
rolb
xchg
loopne
mov
jmp
sahf
std
jne
and
jo
std
mov
loopne
rcll
mov
inc
dec
fmuls
dec
jae
sbb
inc
or
les
loop
mov
sbb
ds
lods
xchg
pop
xor
adc
icebp
xor
cmpsl
fmuls
cmpsl
adc
mov
sti
fs
add
xchg
mov
cmp
fcomps
lret
insb
mov
pop
data16
push
inc
inc
jmp
push
lret
pop
andb
sbb
add
in
gs
gs
mov
cltd
mov
pop
push
mov
and
fistps
test
es
and
inc
jo
push
shr
out
mov
dec
movsl
arpl
dec
push
sbb
adc
hlt
xchg
push
popf
popf
ss
cmpsb
lcall
sbb
or
out
mov
or
or
mov
ret
mov
repnz
dec
mov
fnsave
pop
pop
jno
mov
push
loopne
into
cltd
fiadds
lret
iret
fnstsw
inc
iret
xchg
sub
inc
call
cltd
hlt
mov
cmp
arpl
xchg
push
adcb
rolb
push
adcl
push
and
mov
inc
addb
aaa
mov
push
xor
rcl
and
inc
je
sti
pop
inc
mov
jns
aaa
imul
sub
rcll
and
test
xchg
xor
ds
stos
pop
inc
imul
lods
mov
fisttpll
cmpsl
lds
jp
mov
incb
aad
into
inc
jno
into
sti
xor
push
out
fwait
leave
in
int3
addr16
jecxz
arpl
dec
xor
jo
and
pop
lahf
out
lcall
push
xchg
add
xor
add
jno
mov
jo
mov
int
jecxz
or
jmp
mov
dec
pop
fistpll
lret
cmp
in
push
xchg
sbb
push
mov
je
imul
insb
insl
adc
sbb
mov
mov
or
xlat
sahf
xchg
and
lds
push
repz
insl
and
cmpsl
pusha
pop
push
aas
into
pop
in
cld
test
xchg
jg
mov
imul
in
and
cmp
repnz
adc
mov
mov
pop
add
popf
dec
test
mov
xor
rcr
mov
adc
inc
mov
pop
sub
scas
xchg
mov
loope
shrb
push
and
iret
fisubrl
inc
ss
inc
lret
je
inc
icebp
mov
xor
jmp
sub
loop
outsb
out
lcall
clc
inc
mov
sub
ds
or
hlt
xchg
jnp
mov
mov
sub
mov
inc
bound
lds
mov
or
fisubl
push
dec
int
cmp
ret
sub
fldt
int3
daa
ja
int
jge
in
call
out
or
mov
lds
test
xchg
mov
gs
movsb
push
ja
orb
mov
xchg
mov
xchg
daa
lcall
xlat
aam
ret
dec
in
into
bound
mov
sub
inc
dec
cmp
imul
shlb
sbb
nop
xchg
xchg
mov
rcrb
xchg
push
mov
add
ss
sub
push
xor
xchg
ffreep
subl
andl
aam
cld
inc
into
push
add
inc
enter
ret
outsl
pop
xchg
loopne
jecxz
shl
jge
outsb
out
cltd
in
sbb
orb
pop
add
das
sub
cmp
mov
pop
xchg
sub
cld
push
daa
shll
loop
imul
es
sub
les
sbbl
or
jmp
sbb
mov
push
jbe
icebp
xor
imul
push
int
dec
mov
mov
test
div
cmc
rcrb
movsb
push
sahf
fs
add
sahf
push
fwait
sub
or
decl
paddb
adc
out
pop
popa
push
or
pop
lds
dec
push
cmpsl
iret
js
push
ror
into
stos
idiv
jp
ror
mov
and
jg
and
push
enter
leave
pushf
flds
pop
rcrl
test
test
add
stc
gs
call
jbe
lahf
fs
jb
mov
adc
fimull
jnp
sub
daa
push
cmp
cmp
adc
or
mov
lods
cli
pop
fcmovb
test
inc
scas
fucomp
inc
and
div
repz
pushf
mov
mov
andb
mov
fs
xchg
push
in
and
or
adc
flds
pop
mov
add
xor
and
loopne
and
or
in
aas
out
mov
dec
inc
fsubp
inc
jge
aas
stc
adc
mov
and
adc
std
mov
sbb
jne
xchg
loopne
and
cld
sbb
negb
cmpsb
mov
enter
insl
test
sub
sub
js
out
and
mov
adc
mov
cmpps
push
jl
icebp
enter
adc
in
push
add
cmp
sbb
fcomip
and
loope
push
pop
sbb
mov
add
sbb
cmp
push
stc
test
ret
sub
xor
xor
pop
pop
in
pop
sub
notl
ret
pop
sarl
test
ret
jne
nop
outsl
rclb
and
aas
mov
sub
mov
nop
cld
je
out
xchg
lahf
adc
xchg
push
adc
add
add
inc
cli
inc
fisubrl
int
adc
push
sub
mov
lds
aaa
popa
nop
sbb
das
jecxz
hlt
stc
inc
jnp
push
rorb
sahf
sbb
mov
aas
sub
popl
fcom
mov
stos
mov
xchg
jae
dec
inc
mov
cmpsb
push
push
scas
push
inc
das
and
sbb
leave
dec
movsl
push
push
shll
lret
dec
mov
icebp
jge
je
movl
jae
addr16
sub
jmp
out
push
aad
xchg
xor
cmp
call
xor
cmp
cmpsb
lods
mov
inc
xor
sub
dec
dec
or
push
std
out
xor
mov
leave
pop
jo
ret
pop
loop
incl
pop
pop
pusha
je
mov
insb
push
push
in
jl
pop
arpl
xchg
mov
adc
xchg
pop
xchg
sub
mov
xchg
aas
in
enter
mov
cmp
push
jne
into
out
jp
mov
xor
cmpsl
inc
add
fnstsw
lret
negb
aas
jae
jg
leave
lock
arpl
in
sahf
push
or
hlt
loope
jo
push
pop
xchg
mov
cmp
das
sub
sub
mov
into
rcr
cmc
fstpl
idivb
into
inc
push
rol
jp
aad
cmc
icebp
rcl
push
clc
mov
jae
out
icebp
popf
cltd
je
xchg
imul
xchg
adc
or
push
aam
test
cmp
fsubl
mov
lret
xor
mov
sbb
pop
jl
and
rorb
leave
xchg
repnz
add
push
jle
loop
cld
and
test
xchg
arpl
mov
fbstp
push
adc
mov
xor
push
mov
filds
rorl
mov
stos
inc
dec
aam
movsl
icebp
pop
push
pop
nop
xor
inc
push
rclb
jbe
int3
inc
or
jp
push
jb
data16
lods
fwait
outsl
jmp
adc
mov
stc
test
mov
inc
cmp
aas
adc
dec
mov
inc
pop
sbb
cwtl
pop
xor
js
test
mov
mov
xlat
xor
dec
test
ds
data16
xlat
fwait
imull
or
jbe
jecxz
sub
and
mov
sti
or
or
xorl
das
mov
into
jl
ret
sbb
sub
dec
movsl
jmp
cwtl
outsb
pop
push
andb
push
jo
inc
ss
pop
call
test
arpl
cmc
xchg
gs
setg
scas
add
sbb
mov
mov
mov
xor
mov
inc
int3
inc
inc
popf
aaa
inc
xchg
push
mov
dec
fbld
fucom
cwtl
cwtl
sbb
mov
lds
jmp
jp
sbb
imul
mov
mov
push
cltd
adc
xchg
push
adc
mov
outsl
pop
push
pop
cs
add
adc
xlat
push
int
pop
push
jecxz
ret
sbb
adc
iret
std
stc
push
cmp
iret
hlt
sahf
sbb
insb
mov
or
ljmp
xchg
aad
leave
outsb
cmp
jecxz
push
cmpsb
xor
stos
pop
into
push
out
rcrb
jg
int
jge
mov
leave
push
jo
ret
or
cmc
out
or
movsl
shrl
fwait
out
xor
xchg
sbb
fcomps
mov
adc
test
sub
mov
mov
fdivrs
jg
stc
icebp
es
fildl
mov
fs
pop
xchg
dec
push
push
mov
fadd
mov
popf
sbb
push
jbe
mov
jo
xor
shl
push
add
popf
dec
add
xchg
push
mov
add
es
dec
mov
daa
sub
into
push
mov
adcl
sarl
jo
call
out
add
movsl
cld
cmp
jno
gs
not
sahf
lcall
pop
push
es
push
mov
mov
push
and
lds
repnz
in
lods
xchg
xor
adc
sarl
push
add
iret
ja
mov
fcoml
outsl
jne
adc
jbe
lea
and
shlb
je
sbb
outsl
sbb
jns
xchg
xchg
rorl
cmp
lret
add
enter
mov
mov
leave
sub
sti
add
popa
mov
iret
adc
rcll
push
jo
dec
xchg
jno
or
lock
xchg
cs
xchg
push
addl
leave
xchg
scas
sti
sub
cwtl
sbb
fsubrl
stos
pop
xor
out
or
push
mov
mov
inc
es
out
ret
sbb
lds
xchg
xchg
pusha
jmp
loopne
lods
push
inc
or
mov
stos
xchg
xor
adc
repz
int3
sub
mov
stos
pop
mov
inc
inc
in
and
push
mov
into
adc
aas
loopne
inc
jns
lret
lret
in
mov
dec
adc
mov
cmp
outsb
mov
mov
inc
push
sub
xor
repz
jecxz
aas
pop
pop
and
aaa
mov
mov
shll
mov
xchg
loop
jne
fdivrs
dec
sarb
dec
push
rol
int3
inc
rol
dec
test
mov
sbb
cmp
aas
leave
dec
push
xor
mov
push
call
test
mov
mov
jbe
mov
lods
lods
loop
cmpsb
pusha
es
pop
cwtl
dec
push
dec
in
dec
jmp
inc
orl
jg
inc
inc
add
mov
push
ja
das
mov
mov
push
or
test
stos
in
dec
outsb
inc
orl
xchg
xchg
jae
inc
and
mov
cmp
in
lret
sbb
ljmp
jb
out
push
popa
stc
xor
dec
inc
push
sti
cmp
jge
call
fidivs
mov
shll
xchg
jp
test
push
adc
push
cmp
cmp
add
add
sub
test
jnp
dec
popa
mov
lret
dec
lds
mov
rorb
shrb
shll
lods
mov
fnsave
xchg
dec
fwait
movsl
clc
mov
mov
lret
sub
mov
fldt
or
leave
jge
jbe
inc
imul
sbb
sbb
fiadds
jge
cmp
cmp
aas
fidivs
sbb
in
hlt
in
hlt
xor
pusha
xchg
cmp
mov
mov
lods
lods
fdivl
add
dec
sub
cmpsb
insl
scas
and
xor
ret
push
cmp
ret
push
mov
bound
fistps
stc
popf
add
cmp
loop
hlt
jle
or
into
pop
pushf
loop
pop
rcrl
mov
lret
or
sarb
pop
cmp
mov
int3
mov
js
jl
clc
jb
fs
xor
push
imul
add
sti
adc
jae
stos
aad
push
stos
loopne
cmpsb
push
mov
int
out
stos
cwtl
mov
test
fnstsw
pop
mov
out
mov
pop
lret
jae
mov
insl
cwtl
adcl
test
fdivrl
sbb
aas
pop
dec
out
xor
rolb
mov
push
add
mov
adc
cld
outsl
adc
adc
lea
cmp
loope
jecxz
inc
fs
xor
add
test
pop
push
mov
ret
add
mov
ret
daa
jp
std
jle
and
fsubrs
insb
dec
ja
push
push
cs
add
repz
push
divl
push
loopne
sti
xchg
loope
loopne
movsb
mov
aas
int3
xchg
xor
fidivrs
push
sbb
xor
or
je
bound
sub
jge
ljmp
adc
and
inc
xchg
xchg
test
jge
pop
jge
or
cmp
and
mov
cltd
lea
pop
push
aad
hlt
jb
pop
or
cmp
or
cmp
and
test
sbb
loopne
loopne
push
imul
fs
rcrl
cld
and
xchg
mov
mov
lds
stc
mov
jae
mov
push
push
aad
pop
xor
push
subb
xchg
pusha
push
arpl
push
cwtd
in
outsb
xor
mov
push
push
loop
leave
scas
xchg
pop
test
pop
lock
addb
inc
dec
jae
mov
pop
inc
stc
gs
cmpsb
sub
out
mov
cmp
cmp
sub
inc
jnp
les
leave
daa
fcmovbe
pop
cmc
arpl
mov
inc
enter
out
push
call
test
ffree
jmp
inc
outsl
mov
jbe
sub
push
add
dec
mov
bound
jne
mov
sbb
cmc
in
shll
aas
ds
cmc
inc
pop
xchg
jae
push
push
in
dec
push
es
mov
jno
pop
pop
test
fcoml
sbb
pop
int
rcrl
popa
or
out
cmp
mov
mov
out
adc
mov
add
mov
sahf
sub
in
push
mov
jb
stc
add
fistl
lock
inc
lret
jge
cli
dec
inc
addr16
inc
pop
lahf
adc
aam
gs
aaa
test
in
insb
loopne
push
push
inc
or
rolb
lods
rorl
add
add
arpl
mov
mov
inc
hlt
pop
mov
push
and
loope
and
cmp
push
aas
jecxz
jle
mov
pop
cmp
xchg
add
lods
inc
add
test
jne
xchg
mov
out
fdivs
mov
xor
xor
or
stos
icebp
mov
out
inc
lahf
mov
cmp
pop
subb
fwait
pushf
scas
data16
out
cmp
ret
aas
mov
cmp
mov
lret
mov
or
jg
cmp
xorb
xchg
cmpsl
fisubrl
enter
add
mov
mov
roll
or
push
pop
cmc
mov
push
mov
fs
aaa
lea
pusha
out
pop
repz
pop
loope
sub
xlat
aad
mov
mov
movsb
xor
push
subb
dec
cmpsb
pop
cld
mov
xor
add
dec
or
inc
jecxz
loop
orb
jb
inc
adc
cmc
call
mov
dec
sub
out
and
insb
lahf
inc
push
and
add
test
test
xchg
in
mov
movsl
iret
mov
sub
iret
test
aad
int3
mov
scas
jge
and
movsb
jmp
dec
lods
dec
mov
test
jb
int3
jmp
jmp
bound
clc
in
aam
pop
icebp
mov
imul
xor
fstpt
cmp
aad
fldenv
cmp
and
inc
test
pop
jbe
js
clc
jg
mov
fnstcw
mov
lea
rcrb
jns
lret
jb
vpmuludq
push
add
in
test
cmc
cmp
pop
cmp
sbb
or
mov
xchg
add
adc
cmp
fstpt
jl
mov
lret
mov
push
xor
inc
add
ret
dec
rolb
fnsave
int3
test
inc
push
cmp
rorl
push
fidivrl
popf
sbb
ja
pop
xor
or
xchg
in
das
je
mov
ficomps
add
lea
inc
lods
dec
cmp
les
mov
aad
ficomps
push
push
lods
push
mov
out
in
push
inc
mov
lcall
adc
stos
popa
cwtl
jmp
xor
subl
or
sbb
dec
xchg
ds
push
xor
mov
bts
mov
fucomip
mov
out
mov
dec
mov
and
icebp
bound
push
fcmovb
xchg
fdivrp
sarl
dec
cld
mov
jo
ret
inc
call
clc
pop
xor
adc
xchg
decl
popa
push
push
or
frstor
mov
or
xor
and
repz
jb
pop
aad
repz
rcr
cmc
repnz
push
jl
cmc
lock
jnp
pop
ljmp
bound
std
cmp
jmp
mov
or
mov
inc
stos
or
aaa
aad
cmp
push
fiaddl
mov
pop
cmp
icebp
sarb
loope
in
jne
xchg
xor
test
adc
stos
fs
jbe
fs
pop
sbb
xchg
popf
mov
in
scas
loopne
or
xchg
popl
dec
cmp
mov
inc
cwtl
repnz
and
pop
in
pop
rcpps
adc
aas
neg
push
loopne
daa
aam
mov
cld
inc
notb
xchg
or
add
fmuls
je
lea
mov
pushf
and
jge
stc
and
and
ficompl
cmpsb
lcall
jl
addr16
sub
insb
enter
or
lcall
test
bound
out
sbb
fisubl
rolb
and
push
shl
out
sbb
andb
add
xchg
test
cmp
clc
cli
lret
push
clc
mov
mov
cmpsb
stos
orl
cmp
push
jo
imul
add
or
std
lahf
mov
sti
xchg
test
nop
bound
cmp
in
push
jo
sub
sbb
jp
fimuls
mov
sub
inc
inc
cltd
xlat
jl
jg
adc
mov
cld
test
inc
js
fnstsw
sub
cs
push
jne
insl
cld
aam
dec
push
fisubrl
pusha
pop
iret
aad
aam
mov
push
shl
lret
pushf
add
pop
arpl
out
jo
xorl
in
mov
jecxz
out
jle
add
lahf
add
test
pop
out
mov
push
push
pop
mov
popf
cmp
sub
dec
fisubs
lods
dec
fsts
push
movsl
jno
cmp
dec
mov
push
sub
movsl
mov
inc
stc
test
inc
or
sarb
imul
fildl
sbb
sub
dec
cmp
push
mov
lock
jne
inc
test
mov
fwait
decb
sbb
lcall
outsb
fstpl
jecxz
xchg
repnz
add
push
or
mov
in
mov
xor
cmp
xor
mov
lods
adc
push
push
push
stos
les
jae
mov
inc
jecxz
jo
shll
push
shrb
add
shll
lret
into
ja
xchg
inc
xchg
cld
pop
imul
add
out
shl
out
sbb
imul
xor
les
cmpsl
aas
sbb
test
bound
pop
mov
mov
fstpt
dec
jnp
std
dec
lock
pusha
dec
push
movsl
cmpsl
filds
dec
mov
fwait
jle
das
leave
ss
je
ret
cmc
xor
lahf
push
aas
adc
lods
outsl
push
call
test
test
lds
mov
cmp
inc
xor
lods
jnp
frndint
mov
cmc
xor
inc
add
mov
inc
dec
sub
dec
addb
shl
push
adc
sar
cli
xor
or
jecxz
cmp
icebp
lcall
add
mov
sub
stos
cmp
sub
fiadds
dec
movl
and
flds
inc
inc
nop
jl
push
dec
es
jns
jmp
push
daa
outsb
push
out
mov
dec
repz
xchg
fdivs
pusha
lea
mov
test
push
adc
mov
mov
pop
fwait
loop
add
push
movsl
mov
add
push
or
stos
in
dec
lods
or
dec
push
sub
push
mov
out
lcall
sub
jle
sti
pop
rcl
aas
fmul
jmp
ret
iret
stc
jmp
dec
lds
out
stc
xchg
jmp
mov
lock
lcall
adc
lea
es
mov
in
mov
mov
into
ret
dec
and
and
cmpsl
fsubrs
mov
out
sub
xchg
dec
mov
xlat
sbb
int3
dec
out
lock
xchg
fadds
bound
daa
and
jne
xchg
shrb
mov
xchg
xor
xchg
out
std
xchg
mov
pop
pop
fbld
push
fs
jg
mov
fnstsw
or
mov
jge
push
inc
jle
dec
inc
shll
repnz
xorb
mov
ds
mov
pushf
mov
sub
cwtl
adc
mov
push
mov
xchg
xor
and
ret
mov
sbb
pop
sbb
cli
push
jg
xchg
mov
test
sbb
jl
cs
shll
sbb
in
cmp
orb
pop
test
aad
jne,pt
jmp
stos
mov
in
shlb
fiaddl
test
cmc
js
jne
clc
movq
mov
dec
bound
inc
loope
mov
xchg
sbb
icebp
xchg
or
cmc
ds
mov
push
mov
hlt
dec
pop
pop
cmp
mov
xlat
out
push
and
jg
ds
daa
nop
jne
pop
jno
hlt
cs
mov
enter
mov
adc
jmp
insb
ljmp
sub
inc
jnp
jno
pop
loop
lock
icebp
or
loop
inc
loope
or
or
push
adcb
pop
pop
cmpl
int3
sub
mov
and
fldt
mov
or
and
lret
jne
xor
nop
push
popf
ret
int3
bound
or
imul
stos
jge
adc
pop
cwtl
loop
dec
loope
cmp
gs
popf
test
fdivrl
mov
xchg
leave
pop
cmp
push
jp
jae
dec
and
xchg
jo
movsl
push
out
cmpsl
lret
pushf
inc
out
inc
jle
icebp
inc
imul
inc
notl
push
stc
inc
clc
lock
les
mov
lea
and
lar
adc
mov
xchg
add
push
ds
push
mov
and
ss
xchg
sub
inc
jae
push
cmpl
dec
ret
xlat
call
jnp
stos
sub
int3
or
inc
jmp
cld
inc
test
sbb
cs
lahf
fnstenv
nop
mov
push
imulb
or
mov
dec
mov
cmp
psubusb
out
aam
mov
inc
fsubl
lret
jp
pop
fwait
dec
lret
lahf
cmp
je
dec
jbe
and
popa
jge,pn
mov
dec
imul
push
add
jmp
fsubs
out
xor
imul
cmp
mov
cmp
mov
cmpsl
and
movsl
stos
daa
pop
push
icebp
inc
push
fst
cmp
pop
rcll
call
mov
leave
js
cld
gs
cwtl
mov
mov
cld
and
jne
lods
inc
ret
and
inc
sub
sar
inc
jno
imul
fdivs
fbstp
out
dec
clc
outsl
sub
notl
push
jmp
mov
idiv
loope
movsb
or
push
sbb
imul
inc
pop
push
shll
fisubrs
into
cmp
mov
inc
inc
mov
aam
pop
inc
xor
rclb
aam
pop
and
movsl
divl
outsb
pop
jae
jbe
push
out
pop
lcall
icebp
aad
jl
add
jno
pop
or
add
or
mov
stos
push
movzwl
push
mov
inc
inc
inc
or
call
clc
push
and
push
int3
clc
imul
dec
call
pop
cmp
ljmp
roll
mov
push
data16
cmp
movsl
pop
cmp
add
add
xor
push
cmp
jae
test
cs
inc
in
es
push
xor
dec
xchg
dec
or
lret
aam
dec
shll
dec
js
cli
add
jmp
and
loope
cmp
out
sbb
xor
pushf
fisttpl
out
lahf
mov
adc
add
pop
test
test
dec
cmpsl
lcall
pop
or
and
ds
xchg
pop
out
push
ret
ds
adc
andb
repz
mov
push
icebp
popf
mov
mov
xor
adc
mov
pop
ds
in
mov
cmp
add
leave
and
mov
into
shlb
ljmp
imul
clc
in
pop
jmp
clc
into
ja
jbe
jns
popa
dec
nop
xchg
add
bound
sbb
xlat
lretw
sub
push
scas
adc
test
add
leave
add
pop
adc
cmp
int
dec
mov
stos
hlt
test
inc
pop
lret
add
push
mov
dec
dec
into
mov
lds
jl
aaa
cmp
jmp
jae
hlt
sub
test
xchg
sub
sub
daa
xchg
push
scas
cmp
add
lods
push
or
dec
xor
es
mov
in
idiv
mov
cmp
jo
sti
shll
fimull
jge
testl
xor
andl
popa
lock
out
fwait
push
xor
test
mov
lret
sbb
fimuls
xchg
mov
lods
mov
push
repz
stc
sbb
xor
imul
out
shlb
out
les
sub
push
jno
ja
dec
scas
xor
mov
and
out
frstor
test
xchg
lret
cmp
xor
add
stos
movsb
pushf
and
fwait
dec
pop
jle
mov
fistpll
xchg
popa
mov
pop
clc
sbb
int3
jbe
mov
jmp
mov
insb
sbb
fwait
call
pusha
xchg
cmpsl
mov
dec
movsb
or
out
inc
pop
mov
test
push
fidivrs
mov
enter
dec
fidivs
or
dec
mov
add
jbe
mul
dec
xchg
jp
push
xchg
sbb
xchg
not
jo
outsb
jp
lock
mov
lret
gs
mov
and
jb
mov
adc
mov
cmpsl
xor
xlat
mov
in
dec
mov
pop
fildl
sub
ret
les
addr16
pop
nop
lock
aad
jecxz
lret
pop
inc
pop
jo
js
or
test
xor
or
mov
xchg
inc
and
nop
sub
fnstenv
and
push
jge
pop
das
dec
dec
fisubs
sbb
pushf
xor
inc
xor
inc
out
imul
data16
push
cltd
pushw
ljmp
lods
xchg
adc
out
xchg
add
sbb
mov
dec
les
inc
dec
aam
inc
pop
stos
cmpsb
insb
ret
ret
push
fmul
pop
inc
mov
int
mov
jns
ss
je
fstpl
das
loopne
mov
roll
sub
adc
xchg
nop
flds
mov
aas
cmp
test
push
mov
dec
mov
and
sub
push
lea
and
into
push
add
push
cmpsb
js
push
mov
repz
lds
add
add
sbb
jecxz
neg
adc
pop
pop
jmp
dec
add
push
lret
pop
xor
test
mov
rcrb
mov
into
pop
jns
mov
cmpsb
xchg
shll
dec
int3
xor
dec
inc
pop
jb
pop
clc
pop
or
push
push
cmpsl
sub
inc
sbb
sub
xchg
xorl
mov
mov
pop
fmul
sbbl
idivb
pop
stos
xor
stc
and
call
xchg
cmp
icebp
repnz
cmp
mov
jle
repz
enter
jle
adc
dec
loopne
movhps
jbe
stos
mov
dec
mov
mov
scas
inc
adc
mov
mov
leave
jns
std
adc
cmp
push
icebp
or
xor
adc
jg
repz
aas
mov
pop
jg
sub
cmpsb
add
fs
mov
jns
push
and
out
mov
inc
leave
adc
mulb
push
stc
imul
jns
jnp
in
mov
in
in
shll
imul
inc
xchg
jl
iret
mov
push
stos
ds
fs
cmp
pop
cmpsb
cmp
lret
ja
push
pushf
ror
xor
or
xorl
and
ss
push
testl
sahf
xor
pop
stc
sbb
mov
aaa
test
ss
xchg
pop
movd
movsb
outsb
inc
pop
std
out
out
flds
cmp
pop
pop
cmpsb
pop
mov
jle
inc
aas
lea
fdivl
mov
add
pop
jmp
mov
dec
and
sbb
rolb
jb
push
push
in
jp
mov
adc
xchg
sub
scas
jmp
mov
in
imul
mov
xor
pop
mov
pop
mov
cmp
lods
ror
pop
mov
push
pop
outsb
iret
repnz
ljmp
jl
or
pop
dec
hlt
cwtl
sub
cmp
out
das
mov
sbb
add
sbb
mov
pushf
or
addb
mov
stc
mov
cmp
shrl
pop
and
lods
fsub
push
push
cmpsb
jp
xchg
mov
dec
inc
sub
dec
cld
into
sarl
cltd
jg
pop
popf
mov
mull
les
xor
adc
mov
ficompl
jnp
test
and
cmp
cmp
and
push
lods
and
std
inc
pop
pop
mov
or
cmc
inc
xchg
adc
inc
adc
nop
jb
mov
imul
inc
repz
pop
loope
jmp
sbb
adc
aam
fldcw
add
mov
mov
mov
cmpsb
mov
mov
lret
es
cli
pop
pop
inc
sub
push
dec
or
mov
xlat
in
stc
add
insl
in
inc
xchg
imull
repnz
in
xchg
aaa
hlt
mov
outsb
sbb
sbb
mov
xor
mov
or
test
aas
mov
sbb
aad
pop
dec
fildll
clc
pop
xlat
lcall
dec
dec
fs
xchg
xlat
loopne
jmp
jne
inc
adc
out
jns
insb
mov
xor
scas
push
or
sbb
adc
aam
fidivrs
mov
jmp
mov
xchg
or
mov
shl
stc
movsl
pop
cli
sub
xlat
roll
jecxz
mov
lret
xchg
leave
repz
outsl
ja
test
out
jle
loopne
jmp
sbb
outsl
cltd
add
jecxz
fwait
inc
fs
or
lea
xchg
add
mov
mov
pusha
pop
ja
mov
jmp
faddl
inc
xor
fstp
clc
js
cmp
shl
dec
sti
into
add
std
icebp
cli
ljmp
push
loopne
pop
xchg
sbb
loopne
mov
mov
lahf
es
subl
add
inc
sub
mov
lods
cmpsl
jp
jns
into
inc
scas
pop
and
iret
ror
imul
jno
push
inc
push
xor
jmp
push
clc
call
ss
jne
in
add
pop
add
adc
ret
add
mov
pop
xor
cmpsl
cmp
sbb
stos
cmp
mov
jo
mov
sub
dec
rclb
fstpl
fs
int
stos
dec
test
ret
imul
popa
lods
out
negb
sbb
mov
pushf
sahf
xchg
cwtl
nop
gs
sahf
cmpsl
sahf
mov
lea
xchg
cmpsl
or
xor
cmp
and
mov
cmpsl
hlt
test
sub
in
jb
push
pop
fdivr
sbb
insb
ret
lret
lds
jg
lods
or
out
outsw
jbe
je
xor
cltd
int
xchg
pop
xchg
loop
xor
clc
ss
addl
fists
aam
mov
daa
dec
icebp
hlt
fsubrs
mov
scas
dec
aam
jb
dec
jno
fsubr
mul
dec
cld
pusha
in
xchg
lock
nop
sti
jnp
jmp
in
push
scas
in
and
out
mov
sbb
mov
cmp
mov
mov
cld
lcall
xor
sub
pop
and
fiadds
push
jnp
push
push
cmp
dec
jl
arpl
jae
fidivs
je
sub
lods
das
aad
xchg
mov
jle
sbb
xchg
sbb
ljmp
sub
add
cmp
xor
and
je
imul
ret
out
jmp
inc
aam
or
jae
jg
ds
ljmp
jmp
push
xchg
adc
xlat
xchg
fstl
adc
sub
push
clc
popf
push
cmp
mov
sbb
scas
jmp
mov
rcl
xchg
fadd
lahf
dec
and
imul
insb
mul
lock
jbe
insl
adc
cmpl
mov
cmp
xchg
dec
repnz
daa
add
leave
push
aam
test
sbbb
dec
lret
insl
leave
cmp
adc
and
rclb
pop
inc
notb
nop
ret
dec
dec
shll
scas
jl
dec
std
cld
repnz
jb
push
dec
loopne
xchg
push
xchg
push
shrl
mov
or
int3
xchg
shrl
fsubp
cmp
mov
mov
dec
mov
dec
and
dec
xchg
int3
stc
fcomps
xor
push
incl
notb
ja
mov
loopne
loop
pop
cmp
cmpsl
lahf
insw
mov
jmp
pop
add
mov
push
sub
sub
pop
xor
arpl
frstor
leave
aad
outsl
addr16
loop
push
mov
ja
sbb
imul
imul
mov
in
jecxz
inc
add
sub
add
test
mov
or
cmp
mov
aam
or
movsb
and
push
es
jle
push
inc
std
call
inc
ficomps
xor
rol
xchg
lcall
sub
leave
adc
xchg
lds
jne
xchg
xor
pop
pop
xchg
ret
adc
add
xor
sbb
mov
dec
cmp
or
pop
pop
dec
mov
or
shr
mov
fdivrs
sbb
lahf
cld
scas
jg
shl
inc
icebp
mov
repnz
in
addl
out
adc
xlat
pushf
subl
xchg
ficoms
sub
sti
int
push
lods
stc
popf
dec
dec
inc
enter
mov
ret
fs
push
jp
fistps
aas
mov
hlt
rol
ret
mov
push
adc
stos
in
data16
outsb
mov
mov
xchg
sub
lret
add
repz
lret
inc
cld
out
push
inc
in
pop
pop
vmovsldup
test
dec
test
dec
fnsave
or
jno
sahf
cld
mov
lds
jno
dec
mov
xlat
shl
in
sbb
push
jg
sbb
ret
loopne
add
lock
push
mov
sahf
xor
call
and
pop
add
rclb
sbb
push
out
jmp
inc
push
dec
in
clc
fldt
int
ret
ret
icebp
and
jb
insb
and
dec
push
mov
mov
stc
sbb
fisubrs
cmovg
je
mov
cmp
mov
pop
sub
dec
outsl
and
frstor
enter
lahf
testb
adc
enter
jo
pop
xchg
jg
comiss
mov
inc
mov
lahf
mov
adc
sbb
rorl
xchg
mov
dec
lock
dec
scas
cmpsl
sub
xchg
fsubs
into
movsl
cli
xchg
in
dec
mov
adc
dec
inc
mov
mov
xchg
mov
cmpsl
jno
jo
lret
xchg
sbb
imul
cmp
movsb
leave
pop
movsl
push
movsl
aas
mov
dec
mov
test
fdivrl
add
cmc
jp
aam
jge
mov
pop
imul
jp
enter
out
into
in
fmul
sti
std
aad
mov
push
repnz
mov
lret
imul
mov
lcall
xor
push
mov
mov
addr16
jb
rcll
sub
iret
and
xor
cli
push
xor
inc
inc
and
jne
sbb
fcoml
clc
outsl
inc
dec
or
gs
push
jl
mov
xchg
pop
jg
fcomip
add
test
insb
cmp
mov
cmp
mov
xchg
ja
pusha
mov
leave
pop
fcoms
dec
push
inc
fldcw
jp
mov
push
insl
jb
add
and
call
pushaw
clc
in
insb
mov
bound
test
sub
or
pop
lea
aaa
xchg
andl
outsl
mov
pushl
fdivrp
scas
mov
mov
push
adc
pushl
sbb
dec
pop
out
mov
jne
loop
outsl
push
jbe
ja
xchg
popf
imul
or
add
or
cmpsl
add
xor
dec
aaa
sub
mov
xchg
dec
icebp
adc
and
jle
ficoms
sub
clc
iret
jno
addr16
lcall
in
stos
pop
out
testb
xchg
inc
loopne
add
mov
ja
stos
inc
ja
insb
or
xor
mov
mov
lods
lock
pop
sahf
mov
out
lods
ret
mov
fdivr
lret
popf
fcmovne
ds
pop
gs
dec
popa
fnstenv
jg
ret
sbb
jnp
out
jge
ret
push
in
mov
clc
push
xor
xchg
mov
push
mov
sub
loope
mov
sub
sub
jg
fisubs
movsl
pop
shrb
imulb
out
aam
xor
fidivrs
and
lret
pushf
jno
stos
and
mov
jle
add
popl
dec
mov
shl
sahf
mov
adc
or
mov
or
sbb
pop
andb
xor
out
in
dec
loop
enter
cmpsl
jbe
shrl
jns
lret
xchg
fistps
loopne
lds
mov
hlt
sub
jnp
jb
push
mov
jmp
stos
mov
sub
push
mov
inc
repz
mov
inc
sub
fistpll
sub
dec
fmuls
cli
es
push
call
xchg
jp
push
dec
out
push
cli
xor
jbe
inc
decl
sahf
jle
pop
adc
ja
out
inc
xchg
lea
test
popf
mov
fmuls
mov
daa
push
add
test
mov
sbb
xchg
jle
out
data16
xlat
fstpl
inc
add
loopne
mov
imul
mov
in
out
sub
repnz
rcll
xchg
or
cmp
dec
aaa
std
ds
xor
mov
int
subb
rolb
js
hlt
notl
aam
add
and
inc
sbb
ja
mov
loope
emms
xchg
sbb
jg
in
in
test
fndisi(8087
sbb
aaa
sbb
shlb
das
or
mov
or
mov
aas
hlt
push
ss
mov
fcoms
clc
ficoml
lock
jecxz
push
adc
jp
popa
orl
int3
lock
les
pop
xor
loop
loope
loop
aas
cmp
mov
xor
or
lock
or
icebp
or
and
add
aad
sbb
fcomps
aaa
sub
sub
pop
nop
cli
lock
pop
pop
fnstenv
jne
dec
jmp
popf
push
loope
std
add
lea
icebp
pusha
cltd
fs
and
das
out
xchg
add
cmp
xor
shrl
roll
mov
ret
sub
inc
fcomip
insb
xchg
js
adc
pop
test
and
and
cltd
inc
into
adc
inc
imul
push
and
adc
loop
cmp
sbb
xor
sub
mov
inc
movsb
fstpt
cmp
jo
aam
scas
cmc
mov
lahf
sub
dec
aam
mov
js
dec
xor
jp
incb
out
xlat
jnp
jp
pusha
fs
ret
lock
push
fimuls
sbb
sahf
xchg
inc
add
cmpsb
comiss
mov
das
dec
das
mov
enter
pop
rcrb
mov
neg
daa
lret
pop
rcl
pop
jle
test
dec
dec
xchg
mov
ret
call
xor
dec
hlt
icebp
sbb
call
cwtl
sahf
fisttpl
xchg
or
das
aas
add
push
ret
scas
dec
xor
dec
cmpsb
sbb
and
push
mov
dec
ljmp
jp
cmp
cmp
jns
dec
into
mov
jle
mov
in
imul
sti
xchg
das
lahf
je
mov
xchg
push
push
sub
rcrb
out
mov
stos
repnz
inc
mov
fincstp
mov
jae
fadds
rol
adc
je
fstpt
jo
ja
inc
pop
repz
pmuludq
aad
fildl
mov
and
mov
test
orl
cmp
rcrb
dec
andb
call
mov
mov
das
lods
jp,pn
pop
jbe
std
pop
ficompl
rclb
dec
push
aaa
add
mov
ret
outsb
jmp
inc
jnp
add
mov
mov
sbb
dec
pushf
in
mov
mov
das
jb
imul
mov
fidivs
adc
mov
xorb
xor
sub
mov
lds
inc
jo
mov
mov
in
hlt
pop
in
push
lock
hlt
cwtl
mov
pop
add
mov
popf
xchg
test
or
add
stc
xchg
mov
cmp
and
mov
hlt
mov
push
mov
addl
xlat
data16
ficomps
pop
xchg
lcall
inc
int3
inc
push
outsb
loop
idiv
loop
js
and
popf
enter
cmp
xor
xor
shlb
mov
scas
cltd
mov
and
sarb
mov
mov
pop
push
pop
lcall
ret
jnp
add
lahf
jp
pop
divb
arpl
cmpl
and
icebp
xchg
mov
push
and
mov
push
mov
aam
mov
push
pop
cld
sub
xchg
fmull
data16
fsubp
ret
stc
fnstsw
or
cmp
jp
jp
fs
jl
repz
repnz
lahf
ja
xchg
adc
adc
fiaddl
rcll
add
jle
mov
add
mov
mov
jmp
jns
jb
std
rcll
outsb
into
sub
dec
mov
jo
inc
jmp
xchg
jmp
repnz
jmp
xchg
ss
add
push
xor
inc
inc
push
xchg
pop
aaa
loop
sub
into
cmp
insb
mov
pop
test
add
das
ret
les
ror
loope
rcrl
adc
roll
adc
int3
sbb
inc
enter
ja
icebp
gs
jmp
fs
loop
sbb
pop
push
sub
movsl
pop
test
test
and
cmp
dec
push
adc
dec
shrb
in
ror
dec
pop
pop
push
cmc
cmc
movsl
arpl
insl
insb
lahf
aas
bound
jb
inc
jne
imul
jmp
notb
stos
cmp
and
mov
ret
sub
dec
lods
and
sahf
inc
jbe
pop
cli
jns
adc
push
push
xchg
rolb
lea
lods
lock
xchg
int3
negb
int3
push
stos
add
daa
fwait
and
xchg
sub
popa
decb
es
mov
xor
push
aam
data16
stc
mov
cmpsl
push
xor
mov
inc
sar
and
xchg
ror
mov
sahf
xchg
jne
mov
daa
or
pushf
ret
xor
jl
sub
aaa
adc
insl
inc
imul
jmp
popl
pop
or
scas
subl
callw
and
scas
mov
mov
aaa
lods
inc
xor
pop
and
mov
lods
jne
mov
rcr
loope
enter
sbb
std
dec
std
adc
jbe
jecxz
lock
ds
dec
or
out
ficoml
xchg
inc
ret
sub
xchg
adc
push
ljmp
mulb
mov
adc
inc
daa
call
fstps
inc
mov
jbe
add
int3
sbbl
jge
add
pushf
fstpl
or
fwait
adc
mov
pop
add
pop
xor
add
jge
cmp
imul
mov
fidivs
jns
dec
mov
pop
lock
ds
insl
ljmp
inc
int
or
jle
xchg
aas
outsb
dec
mov
xchg
mov
xchg
adc
inc
pop
pushf
pop
adc
xor
mov
int
out
jg
and
jle
push
mov
pop
arpl
bnd
push
out
cmpsl
je
lret
inc
inc
dec
sbb
pushf
inc
js
jb
xchg
incb
call
cld
arpl
xor
in
in
test
sbb
aad
add
sub
mov
stc
mov
sub
push
inc
pop
or
and
inc
push
enter
outsl
inc
loopne
cli
dec
enter
lods
test
ljmp
mov
dec
jecxz
cs
xor
mov
xchg
push
daa
out
mov
mov
js
xor
xorb
cmp
jno
stos
mov
fists
dec
fadd
push
fcomi
decl
repnz
jae
jb
dec
push
push
mov
inc
js
add
cmp
outsb
jno
xchg
je
xchg
in
xchg
dec
add
xchg
or
cmp
adc
xchg
mov
ss
movsl
mov
pop
pop
out
push
dec
pop
cwtl
loope
fadds
dec
inc
clc
ljmp
push
push
clc
or
jnp
cwtl
jb
jecxz
ljmp
cltd
sub
ss
adc
dec
push
mov
shrl
pop
cmp
shrb
mov
mov
sti
insl
nop
jns
dec
insl
push
dec
jno
jecxz
jle
into
inc
push
dec
pop
repz
out
xor
push
cli
pop
mov
orb
push
xor
and
jmp
mov
xor
lods
sub
ds
and
pop
xor
and
mov
and
imul
inc
js
addr16
or
jg
js
popf
jno
xchg
mov
outsl
insl
jle
ljmp
jnp
loop
mov
sbb
mov
mov
sbb
test
mov
push
jb
pop
inc
scas
mov
inc
jp
lcall
inc
pop
pop
cwtl
adc
xorb
xchg
mov
mov
call
mov
jb
jb
insl
lods
xchg
imul
mov
fwait
sbb
pop
xor
sub
mov
scas
jmp
pop
cmp
pop
mov
and
clc
pop
fs
rorb
enter
je
sarb
clc
in
lock
loop
icebp
push
ja
adc
push
in
sarl
sbb
popf
add
push
movsl
out
ds
push
fnstenv
adc
aas
adc
cmp
std
jle
stos
jmp
daa
test
shlb
xor
hlt
cli
add
jg
cld
ror
jne
lock
jbe
inc
lock
sahf
xchg
push
loopne
adc
test
imul
or
out
sbb
xchg
mov
push
xchg
cmp
sub
inc
test
fisubrs
push
adc
xlat
data16
loop
inc
test
dec
mov
rep
js
jb
inc
jg
cmp
imul
mov
sbb
xchg
arpl
sbb
cmc
rcrb
push
mov
arpl
rcrl
daa
mov
mov
rol
insl
xor
icebp
xor
sub
mov
inc
and
dec
lret
shll
inc
jne
popf
or
jge
aas
in
clc
out
lcall
imul
push
pushf
or
pop
sar
mov
scas
cmp
clc
ljmp
ss
out
shll
dec
and
decl
enter
sarl
pusha
adc
cmp
inc
xchg
cmp
pop
jbe
cmp
mov
or
jne
push
lahf
lahf
pop
xchg
pop
inc
adc
out
push
stos
sbb
push
test
out
mov
cltd
pop
sti
lods
jg
imull
enter
push
into
rorl
sar
jg
sbb
adc
adc
xor
mov
xchg
mov
out
aas
pushf
lock
or
inc
push
xchg
cmp
add
cmp
std
mov
test
jg
sub
xlat
enter
sbb
out
stos
push
dec
jb
xlat
jge
fcmovnb
lahf
int3
xchg
insl
addl
test
arpl
jae
shrl
mov
dec
mov
cmp
mov
std
test
mov
push
cld
xorl
int
test
shl
mov
pop
cmpsl
sub
shll
je
pusha
pop
xchg
sbb
ss
out
or
xchg
lds
out
pop
out
xchg
aas
mov
lcall
movsb
aaa
xchg
dec
xlat
push
scas
mov
cs
sub
add
repz
decb
sub
add
xchg
std
pop
add
dec
sbb
push
aad
fwait
dec
push
fcoms
sti
call
or
add
lret
mov
sbb
sahf
mov
cwtl
aad
pop
dec
aam
ljmp
jmp
sub
mov
outsb
pop
and
mov
dec
jne
in
inc
push
inc
xchg
jg
mov
loope
repnz
or
sbb
ret
jg
insl
sub
inc
sbb
pop
data16
add
pop
mov
insb
in
das
fsubrl
push
fisttpl
add
add
and
popf
stc
test
mov
jmp
sbb
scas
add
push
leave
fsubr
push
xchg
xchg
in
add
mov
jle
sbbb
mov
mov
mov
cmp
cmp
push
shlb
mov
scas
inc
lock
aam
scas
push
idivb
aam
jmp
sar
cmp
in
cli
mov
dec
out
mov
jge
cmp
bnd
jle
in
dec
mov
and
out
cmpsl
movsl
out
sub
and
movsl
xor
add
iret
adc
test
adc
pop
in
sub
out
fidivs
std
mov
loopne
mov
push
and
cli
aas
mov
push
in
jne
add
call
xor
lcall
cmp
xchg
scas
in
or
mov
addl
test
mov
out
inc
and
and
mov
in
jnp
adc
rolb
bnd
jno
adc
mov
adc
sbb
addr16
into
fisubrs
add
mov
sbb
neg
mov
push
out
pop
fcmovne
flds
push
int3
or
jmp
dec
mov
jae
jae
jno
mov
or
sub
add
push
mov
lea
roll
push
sub
add
frstor
test
sbb
mov
pushf
andl
fsubrs
mov
pop
jmp
dec
in
out
push
js
inc
inc
ja
xchg
jmp
pusha
cld
jg
push
movsl
lahf
cld
in
rcl
push
mov
adc
push
or
int
sub
fdivrl
add
and
icebp
fsubs
mov
and
ficompl
push
xchg
push
dec
xor
in
ret
jns
dec
ret
jbe
in
inc
ds
jb
bound
addb
addr16
or
mov
lahf
fcomps
mov
aas
aaa
cmp
cs
in
imulb
and
movsb
jecxz
dec
pop
outsl
mov
lcall
dec
int3
call
movl
nop
sub
cwtl
xor
pop
push
nop
lcall
nop
lea
dec
push
mov
insl
add
xor
sbb
lcall
inc
out
jne
dec
or
or
xchg
mov
repz
rclb
xchg
popa
jae
jg
xor
pop
mov
xchg
test
ds
xchg
lret
outsl
sbb
lret
dec
les
mull
sub
dec
xchg
inc
cmp
sub
js
mov
mov
icebp
rolb
gs
imul
inc
stc
int
cmc
adc
shlb
cs
lds
fsts
jns
gs
cmp
mov
ss
inc
xor
push
mov
cmc
mov
pop
jle
mov
je
lods
lcall
fistps
aam
xchg
lcall
call
push
idivb
xchg
pop
loopne
xchg
jmp
nop
ds
rorb
add
or
cmp
xchg
hlt
mov
sub
pop
mov
shrl
cld
push
pop
movsl
hlt
iret
ret
push
mov
into
dec
rol
sbb
push
repz
dec
ja
xchg
xor
ljmp
cmp
jnp
mov
mov
pop
mov
dec
fistpll
jmp
pop
xor
popa
ret
lods
dec
mov
test
push
popa
dec
enter
aam
and
mov
outsl
iret
xchg
clc
les
xchg
popa
cwtl
jno
adc
lds
jb
lahf
fwait
out
js
pop
std
std
xchg
mov
and
mov
inc
aad
icebp
xor
pop
adc
push
mov
push
int3
dec
shrb
dec
adc
ljmp
je
je
cmc
or
loopne
cld
push
test
fs
push
adc
leave
test
ret
cmpsl
or
cmp
inc
test
leave
je
lea
js
adc
xor
cwtl
pop
shll
adc
inc
push
inc
ror
arpl
in
imul
mov
cmp
sub
scas
adc
andb
or
fcom
aad
push
xor
ss
jae
gs
jp
movsb
jae
fsubs
dec
cld
test
dec
cmc
sbb
sbb
pushf
jl
pop
les
xchg
lock
int3
pop
adc
cli
pop
loopne
pop
fcomi
hlt
cmp
pop
loop
repz
test
xchg
xchg
xchg
pop
mov
mov
pop
xor
mov
jle
movsl
sbb
in
and
out
dec
mov
clc
jne
push
cltd
lahf
fs
xchg
cli
jne
pusha
jle
in
mov
mov
or
popa
jge
pop
lods
bound
subb
or
adc
jnp
and
nop
push
hlt
js
aaa
mov
in
jg
push
arpl
mov
pop
movsb
iret
push
inc
dec
pop
imul
outsl
add
xchg
out
lds
aas
incl
loopne
pop
sbb
pushf
push
jecxz
pushf
sbb
mov
jb
ljmp
inc
cmp
fsubrl
xchg
mov
das
in
jae
in
sub
cmpsb
stos
pop
inc
xchg
pop
mov
push
mov
jg
mov
lahf
lret
add
sub
dec
adc
cli
add
repnz
xchg
fwait
xchg
cmc
jmp
cmp
sbb
lcall
pop
mov
in
push
cmpsb
or
sbb
repnz
cmp
jne
dec
mov
hlt
xchg
lcall
insl
pop
inc
js
jnp
pop
std
mov
jbe
out
ja
adc
je,pt
icebp
outsb
sbb
or
pop
or
adc
adc
bound
mov
sti
push
lahf
push
ret
xor
sub
dec
das
jnp
mov
sub
fidivl
dec
push
and
outsl
cs
sbb
js
cmpsb
outsb
out
icebp
fidivs
cld
aaa
mov
insl
fnstenv
adc
setne
cmp
push
lea
mov
adc
pusha
jo
loope
repz
fadd
roll
push
ja
pop
loopne
inc
inc
bound
ss
inc
cmc
dec
sbb
cmpsb
pop
rcrb
leave
jne
aam
cld
or
dec
in
sub
pop
mov
mov
mov
addl
mov
movsl
dec
pop
mov
lods
mov
xor
pop
out
push
mov
jb
loopne
ret
or
dec
fisttps
jecxz
jp
jge
mov
clc
push
test
in
sbbl
addl
xchg
test
out
add
mov
inc
fildll
divb
das
push
push
pop
pop
test
push
scas
inc
rolb
inc
repnz
leave
out
and
inc
mov
bound
sub
jnp
fmuls
add
push
or
sbb
mov
call
add
push
and
adc
imul
gs
stos
xor
ljmp
int
jae
icebp
cwtl
in
xchg
call
notl
inc
negb
jno
or
mov
sub
imul
xchg
or
push
jle
ret
xchg
and
fisttpll
mov
movsl
fwait
or
and
es
sub
lods
outsb
push
xchg
int
mov
mov
dec
loopne
rclb
pop
insb
cwtl
cld
ljmp
push
int3
mov
gs
xchg
mov
pop
cmp
mov
push
jb
adc
in
test
cld
ja
adc
scas
pop
js
stc
lock
imul
cli
ror
int
outsl
sbb
sahf
mov
loop
dec
sti
les
decl
lcall
cltd
xchg
sub
addr16
xchg
sub
cmp
popa
mov
inc
push
sub
cmpsb
andb
push
xor
add
pop
fsubrl
into
sub
movsb
pop
fcmovnb
stos
std
jge
icebp
push
lret
or
jns
lret
arpl
sahf
jno
push
push
outsl
pop
mov
mov
sbbb
add
or
fimull
xor
mov
dec
mov
es
daa
xchg
xor
and
fldenv
push
xlat
jge
dec
dec
inc
dec
std
push
add
jne
repnz
imul
or
cwtl
ja
push
xchg
imul
out
pop
or
stos
add
add
fsubs
js
jg
mov
out
stos
adc
mov
loope
ffreep
das
adc
ret
jnp
xchg
jl
arpl
ljmp
push
dec
adc
sbb
mov
mov
lock
cmp
mov
push
push
call
jp
pusha
push
lret
sahf
pop
lea
push
lods
mov
repz
int3
lret
lcall
std
lret
xor
addb
xlat
loop
in
into
fiadds
add
push
sub
xor
sub
mov
mov
jecxz
rcrl
fistpl
jb
repz
jae
add
mov
inc
mov
lea
out
cmp
push
test
movsb
aaa
insb
push
addr16
sub
xchg
sbb
stos
mov
stos
lods
push
pop
add
add
xorb
sub
lods
sub
pop
mov
icebp
lret
popa
mov
addr16
push
data16
dec
dec
fs
xchg
cmc
lods
dec
cmc
imul
sbb
popa
data16
push
jae
jmp
push
or
add
mov
stc
push
push
lods
mov
aaa
sub
pop
dec
je
jecxz
pop
test
arpl
pusha
daa
sbb
pop
lock
sbb
adc
sahf
int
mov
push
or
lods
ljmp
jb
xchg
and
sub
daa
xchg
mov
test
cmp
mov
outsb
pop
mov
mov
ficompl
sub
fcmovb
aad
test
sbb
jmp
mov
call
imul
loopne
iret
sbbb
mov
sti
push
mov
inc
mov
or
pop
mov
push
cmpsb
sub
xor
inc
lret
pop
and
mov
pop
sub
loop
push
lret
aad
adc
jns
xchg
popf
fs
xlat
div
or
call
std
fisubrs
aad
addr16
cmp
outsl
xchg
cmp
pop
aad
mov
push
mov
cmp
ds
btr
test
cmp
insl
push
clc
jp
rclb
bound
add
mov
adc
testb
mov
jo
or
pop
test
dec
enter
mov
inc
daa
das
dec
pop
add
fdivrl
xorl
mov
movsb
inc
mov
sbb
mov
lahf
mov
pop
inc
jnp
leave
push
push
push
jo
jl
dec
inc
jmp
imull
clc
leave
sbb
cli
out
call
stos
imul
into
in
sbb
push
lahf
mov
pop
mov
mov
mov
jbe
inc
xchg
mov
int3
stos
adc
mov
and
sub
fcmovb
outsl
inc
xchg
lret
lret
enter
dec
ja
ret
xchg
int
jg
lock
mov
mov
inc
mov
out
or
add
sbb
rolb
mov
shlb
mov
aad
into
mov
inc
pop
sub
push
dec
xchg
movsb
jno
jbe
sbb
shl
int
fmull
iret
dec
cs
jecxz
es
pop
mov
push
or
and
cmp
mov
adc
mov
xor
fisttpl
sub
dec
sub
mov
xchg
hlt
cli
pop
push
out
pusha
sbb
mov
popa
pop
repz
sbb
adc
je
jp
out
mov
pop
cmp
leave
movsb
or
mov
add
mov
jl
mov
sub
mov
and
and
daa
rol
push
shll
rcrb
pop
dec
and
cmc
xchg
mov
ret
xchg
jnp
jne
insl
cmpb
xchg
ja
gs
mov
test
popa
xchg
or
or
mov
ss
outsb
mov
jecxz
shrl
mov
cmpsb
add
or
mov
xlat
scas
out
fldcw
cltd
rolb
movsl
cli
lock
dec
dec
add
movb
add
jle
or
jae
fnstcw
sub
pusha
xchg
mov
stos
xlat
mov
mov
dec
in
add
incb
iret
addb
shrl
std
dec
lods
jge
in
stc
cmpsb
mov
gs
incl
je
in
shll
loop
dec
int
or
jno
mov
jmp
inc
test
jns
push
scas
xchg
sub
sbb
mov
xchg
mov
cmpxchg
subl
or
cmp
int
xchg
inc
fmulp
inc
mov
mov
inc
into
jbe
and
jbe
lods
ret
icebp
out
fcmovbe
lock
ret
aam
out
cmp
lds
popa
push
das
jae
cmp
sbb
int
mov
mov
outsb
adc
or
loop
or
and
inc
ljmp
mov
test
mov
inc
ror
push
shlb
jno
push
in
push
dec
outsl
dec
lds
mov
adc
jmp
jecxz
push
cmp
jae
idiv
shl
xchg
adc
xchg
sub
adc
xchg
mov
add
cmp
loop
or
mov
and
fdivr
andb
and
push
enter
fmuls
aas
dec
mov
loop
adc
or
pextrw
mov
cmc
mov
shlb
fxch
xor
ss
lds
xchg
or
lea
int
inc
roll
ja
push
scas
sub
adc
pop
out
fcoml
les
sub
mov
add
push
cmp
lcall
cld
loope
imulb
lods
mov
loopne
cs
mov
and
lea
shll
pop
lods
or
and
pusha
int3
add
mov
mov
shlb
rol
xchg
fisubrs
push
fdivp
jmp
popa
push
cwtl
dec
push
imul
int
mov
out
cltd
jl
jecxz
repnz
mov
mov
sbb
ja
pushf
sub
jle
mov
rorb
jmp
int3
xor
shrb
in
inc
outsl
js
and
lret
aad
xchg
cwtl
orb
test
inc
jbe
inc
sbb
pop
push
mov
hlt
loop
call
pushf
lcall
add
repz
mov
xchg
sub
out
rorb
insl
rcl
sub
scas
sub
cli
mov
xlat
stos
rcrb
push
movsl
cltd
in
sbb
and
pushf
and
scas
mov
je
jno
insl
movsl
repz
insl
in
or
sub
addl
in
addr16
scas
data16
jge
mov
sbb
jl
imul
dec
cmp
iret
jg
call
scas
sti
and
push
jno
aad
ljmp
sbb
jne
xor
out
out
adc
fs
out
imul
cmp
in
je
addl
js
pop
or
or
push
clc
push
mov
adc
sub
adc
sub
addr16
nop
int3
in
ja
test
push
dec
jp
jecxz
out
cwtl
xchg
outsb
sbb
dec
jl
add
popa
in
aam
or
xor
or
clc
and
mov
int3
mov
xor
add
add
push
push
in
jmp
pop
ffree
jmp
popf
inc
sbb
inc
in
mov
setb
jmp
push
cmp
data16
in
in
xchg
or
fiadds
ret
int
adc
aaa
cmp
adc
lea
mov
test
cmpsb
inc
fildl
movsb
dec
sti
xchg
cli
adc
mov
lock
lods
pop
int
cli
fmull
adc
in
stos
adc
sahf
pop
data16
call
mov
bound
into
call
mov
lods
fs
test
mov
inc
sub
push
fnsave
iret
inc
pop
aas
inc
rol
repnz
divb
push
push
jecxz
sarl
insl
stc
sub
adc
leave
mov
cmc
mov
and
push
aaa
gs
adc
sbb
hlt
movb
xchg
sub
mov
lea
das
arpl
cmp
xchg
inc
xor
lds
inc
sti
cmp
xor
push
inc
out
and
push
nop
adc
cli
push
inc
mov
popf
cmc
sub
orl
es
adc
mov
pop
mov
lods
sbbb
and
mov
push
xchg
sub
std
je
dec
rcr
adc
in
xor
pop
xchg
jp
mov
and
inc
cmc
push
sbb
jge
inc
pop
add
aas
push
loopne
sbb
or
stos
fs
ljmp
scas
adc
divl
es
stc
test
clc
movsb
xlat
xlat
loopne
jmp
fcomps
ja
jmp
decb
jg
mov
adc
cmp
sbb
xor
iret
adc
loopne
filds
mov
push
aas
or
shrb
pop
mov
test
aam
mov
fstl
cmp
fadd
jg
ficompl
push
mov
jne
inc
aad
pushf
insl
xchg
out
jge
mov
fstpl
xor
lods
pop
adcb
jecxz
push
daa
inc
add
out
cld
fcompp
pop
movsl
mov
mov
push
iret
push
fnstcw
push
add
cmp
mul
inc
pop
inc
xchg
fcomip
test
sub
setns
inc
mov
fs
xchg
bound
mov
mov
mov
gs
inc
dec
jg
mov
scas
popa
es
ret
in
inc
mov
out
pop
call
ficoms
sahf
inc
shrw
jnp
idiv
add
cli
rcll
ss
ljmp
or
jb
mov
mov
movsl
aas
mov
mov
push
mov
mov
fsubl
fnop
gs
push
mov
xlat
push
out
jle
leave
mov
jnp
scas
xchg
adc
adc
inc
ficoms
pop
popa
cld
fsub
insl
lret
outsb
xor
xor
mov
cli
addb
and
xor
data16
or
jb
ss
arpl
pop
xor
xorl
je
add
das
jecxz
movsl
clc
jns
xor
jle
jb
fld1
aaa
jnp
test
subl
movsl
call
lahf
dec
sub
mov
xchg
addr16
jns
add
mov
insl
das
push
nop
mov
mov
daa
imul
lods
sub
int
pop
pusha
push
rol
lahf
push
pop
sti
sti
dec
jb
cmc
jo
xchg
sub
or
leave
add
mov
adc
loop
adc
mov
or
pop
pop
or
mov
clc
bound
mov
scas
add
imul
jecxz
xlat
aad
dec
iret
jnp
fstl
gs
cmp
sti
dec
cmc
jae
stos
shrb
mov
in
cli
daa
pop
jo
sahf
xchg
cmc
sbbb
dec
stos
dec
fsubs
sbb
dec
xor
ficomps
pop
mov
mov
xor
and
rclb
mov
pushf
lahf
dec
mov
lret
jo
repnz
push
js
inc
out
out
bnd
data16
addr16
bndldx
call
xchg
cltd
mov
cmpl
cmc
mov
or
push
scas
insl
mov
outsb
das
pushf
jb
cs
sbb
cwtl
pop
cld
insb
mov
lret
leave
les
cli
jno
or
repz
insl
cmp
mov
leave
xchg
pusha
loopw
and
lock
outsb
or
enter
xor
lock
fiaddl
mov
in
mov
lds
jns
jge
je
aad
and
inc
add
xlat
xor
add
ret
mov
sti
jle
aaa
jns
push
gs
push
jb
mov
dec
push
lea
inc
push
int3
or
ljmp
pusha
sub
mov
aas
mov
movsb
ficomps
push
fs
jbe
mov
and
mov
sti
pop
lds
out
pop
jnp
mov
pop
lcall
popa
adc
xor
dec
mov
and
ss
or
sbb
aaa
jnp
cld
jp
dec
in
ror
test
mov
jg
and
push
inc
push
fldcw
inc
jno
jb
push
inc
scas
sbb
adc
call
jae
dec
stos
mov
mov
rsqrtps
cmp
cmpl
dec
mov
mov
dec
xor
and
stos
es
ficoms
jne
cmpsl
dec
aad
jg
negb
jecxz
inc
and
sahf
mov
cmp
push
psubd
dec
add
sbb
icebp
mov
mov
push
adc
sbb
xor
adc
pop
mov
ja
sbb
xor
pop
loope
lret
and
jl
fldenv
push
cmp
lcall
jns
jo
std
cld
mov
imulb
call
cwtl
jg
in
jno
push
xchg
imul
insl
repnz
mov
xor
add
fmuls
mov
push
inc
mov
xor
in
inc
shr
lods
inc
inc
clc
in
aad
pop
push
fs
sahf
loope
loope
ja
inc
sbb
andl
xchg
jmp
loopne
aas
push
push
adcb
adc
cmp
in
aam
xchg
mov
xchg
inc
mov
test
xchg
lret
mov
jge
bound
jno,pn
jmp
outsb
push
ja
push
inc
jne
ja
inc
inc
stc
sahf
or
lahf
ds
insl
mov
lea
lahf
outsl
sub
test
mov
push
add
sub
mov
pop
icebp
mov
test
mov
sub
divb
out
mov
dec
pop
pop
dec
sub
mov
mov
js
dec
sar
out
inc
cld
in
mov
popf
loope
jmp
inc
lods
in
xor
lea
mov
ret
dec
aad
in
xorl
insb
mov
lods
sub
lods
and
adc
mov
int
vpinsrw
sub
cmp
sub
bound
dec
dec
sub
ljmp
push
mov
add
fmul
loopne
push
ds
nop
xchg
xchg
repnz
push
andl
mov
stos
je
scas
sub
insl
push
sub
fstl
ret
pop
lret
imul
dec
xorl
inc
cld
arpl
lds
pop
je
cmp
je
test
aas
repz
popa
sub
mov
inc
add
sbb
cmpl
mov
movsl
xor
ret
sbb
subl
push
inc
and
dec
into
negl
inc
loop
jne
arpl
xchg
mov
ret
hlt
or
mov
xchg
sbb
xchg
out
push
cltd
nop
lds
adc
out
out
subb
xchg
or
out
movsb
push
push
add
cld
fisttpl
ficompl
lods
ljmp
push
lret
std
std
dec
jno
push
int
jne
insl
sub
jae
inc
daa
pusha
int
sbb
adc
jge
xchg
dec
add
imull
pop
mov
mov
stos
xor
cmp
shl
pop
pop
lcall
adc
je
fwait
pushf
jne
pop
cltd
adc
mov
sub
cmp
push
in
jne
mov
xor
scas
movsb
or
les
aad
je
xor
cltd
push
xor
cli
out
ss
pop
icebp
lods
clc
fstp
lahf
jmp
aam
call
sub
mov
pop
popa
jb
dec
int
in
insb
cmpsl
leave
sbb
pushf
pop
adc
rolb
insl
sub
add
jnp
push
push
mov
add
inc
push
cld
lcall
cld
aas
cld
and
dec
adc
sub
ja
and
ss
sbb
jb
mov
sub
inc
in
inc
or
cmp
or
or
hlt
cmp
gs
xchg
xor
sbb
and
scas
sbb
aas
mov
adc
push
rclb
xlat
add
enter
mov
in
mov
outsb
fldt
lods
inc
jmp
or
aaa
pop
push
je
sbb
cltd
cwtl
adc
mov
inc
shl
mov
scas
in
push
in
scas
jno
mull
addr16
fadd
sbb
mov
and
and
push
push
or
test
pop
pop
out
popa
xor
xor
inc
pcmpgtb
or
cmp
int3
pushf
adc
dec
or
pop
xchg
push
in
cmc
inc
add
arpl
pop
inc
mov
call
pop
inc
push
outsb
mov
cmp
enter
pop
jnp
push
scas
mov
in
fidivrl
cltd
jp
outsl
or
jnp
sti
and
fisubs
pop
lods
inc
fwait
jecxz
rorb
inc
test
pushf
inc
les
lahf
cltd
pop
lea
insl
roll
out
filds
cmp
sub
xchg
cmpsb
or
ficoms
xor
pop
mov
add
and
cltd
and
aaa
out
push
fildl
subb
xchg
jp
xor
ret
ror
into
inc
stos
adc
dec
aaa
inc
sbb
jecxz
lret
and
jae
lcall
mov
sqrtps
add
test
into
xchg
lea
fsts
or
shll
mov
xlat
scas
aam
jmp
lret
addb
dec
aas
lret
shrl
jnp
mov
negl
loope
pop
jmp
jbe
jecxz
jge
pop
pop
mov
gs
mov
or
xchg
and
xor
out
aad
mov
xor
negl
loop
sarl
push
rcrl
xchg
jnp
mov
or
xlat
shlb
jo
sub
sub
adc
jp
xchg
in
cwtl
popa
inc
xchg
das
pop
or
inc
sub
xor
lret
stos
and
mov
mov
lods
lds
test
jbe
mov
dec
dec
add
out
mov
gs
cmp
add
xchg
and
rcrb
push
sti
adc
mov
xchg
ss
flds
nop
xor
xchg
xchg
xor
and
adc
sub
rcl
and
mov
fsubl
inc
iret
cmp
mov
int3
dec
scas
repnz
inc
imul
jle
jb
jbe
xchg
imul
mov
popa
inc
xchg
nop
out
mov
adc
sbb
aad
mov
in
sub
loopne
xor
lods
xor
loopne
into
cmp
andps
jnp
inc
imul
dec
in
loop
push
jge
negl
ljmp
ss
sar
ds
sbb
sub
mov
in
sub
cmp
ss
adcb
mov
sbb
cli
adc
sti
daa
and
imul
loopne
insb
push
rcl
mov
in
js
and
call
jle
loopne
mov
in
xor
xor
pusha
jne
mov
pusha
xchg
setno
mov
inc
mov
repz
clc
mov
aas
inc
push
dec
iret
and
sub
pop
inc
adc
mov
inc
mov
inc
leave
or
adc
sbb
out
cli
jge
arpl
add
jbe
cs
icebp
and
sbb
mov
add
or
add
jo
fmuls
push
ret
les
mov
fwait
pop
lea
fidivrl
adcl
loope
out
mov
mov
lock
jno
aas
out
hlt
mov
jle
int3
insl
ljmp
sbb
dec
nop
mov
and
pop
stos
cli
add
or
orb
ss
cmp
xlat
fsubrs
popf
cld
push
paddusw
push
push
rcl
xchg
push
fstl
xor
dec
jl
aam
jle
fwait
inc
outsb
jne
fidivrl
xor
out
lret
out
xor
in
fwait
xchg
fisttpll
fildl
pop
xchg
mov
push
xorb
cli
mov
mov
mov
cmp
and
mov
ljmp
lahf
bound
movsl
icebp
jo
inc
icebp
pushf
fisubrl
fimuls
in
aas
aaa
imul
mov
neg
and
and
push
rclw
xor
jl
xor
sub
jns
sbb
loop
int
and
push
aam
lret
pusha
inc
les
call
ss
cmp
jp
mov
push
dec
mov
dec
out
and
xor
scas
mov
popf
sub
mov
rol
fildl
pop
dec
jne
and
fstl
outsb
lahf
add
xor
sbb
inc
lcall
jb
cmc
push
roll
jle
popa
outsl
xchg
fisubs
enter
cltd
orl
adc
push
add
inc
sahf
dec
adc
imul
jge
and
adc
sbb
repnz
mov
fcom
in
cmp
sbb
lcall
je
push
or
add
mov
gs
pop
push
or
adc
cmp
test
dec
faddl
pop
test
mov
pop
push
int
iret
aaa
jbe
inc
mov
in
ret
fdiv
mov
das
jmp
stc
xchg
dec
repnz
mov
or
nop
orl
loope
repz
push
arpl
and
push
pop
dec
sub
mov
mov
cmp
and
mov
mov
lods
mov
jno
movsb
outsb
filds
frstor
aas
sbb
adc
popf
inc
cltd
shl
cwtl
lret
adc
pop
lcall
arpl
fs
idiv
sbb
jmp
adc
orb
push
mov
mov
adc
xor
inc
dec
pop
test
stc
cmp
and
dec
pop
stc
inc
iret
push
inc
or
push
hlt
icebp
popa
ret
ljmp
xchg
loopne
sub
or
out
insl
mov
inc
lcall
push
push
mov
loope
jbe
xor
lea
and
fcmove
mov
xchg
outsb
push
das
sbb
pop
jbe
jecxz
repz
rcr
repz
push
cwtl
mov
jbe
mov
sbb
adc
sbb
setp
test
xchg
fimull
cmpsl
or
jnp
mov
jb
dec
es
mov
mov
shr
test
fdivl
rcrb
push
push
push
enter
mov
lods
jp
inc
notl
outsl
sbb
loopne
in
sahf
xor
lahf
in
push
loope
mov
pop
or
push
scas
push
dec
mov
mov
mov
ret
cmp
mov
mov
fldt
pop
int3
add
inc
iret
xlat
pop
add
pop
into
adc
popa
loope
jecxz
repz
lret
mov
imul
sahf
fwait
cmp
in
sbbb
sbb
push
data16
pop
jp
push
sub
mov
add
pop
xor
ret
push
lods
aad
push
xor
inc
jmp
push
js
sub
xor
test
add
sub
jne
mov
pop
jae
xchg
lock
sub
xchg
xchg
or
xchg
popa
outsl
mov
adcl
mov
inc
lods
xor
leave
mov
cmpsb
pop
dec
shrl
push
mov
iret
jge
dec
push
pop
lds
shl
sahf
leave
je
push
dec
stc
insl
mov
sti
out
outsl
jmp
mov
push
mov
cmp
popl
pop
cmpsb
xchg
mov
mov
into
mov
mov
sbb
push
pop
push
into
pop
addr16
push
push
mov
ret
rclb
rolb
xchg
out
aam
push
mul
sbb
inc
pop
ds
or
adc
data16
clc
xchg
adc
adcb
rcrl
pop
push
sbb
loope
xchg
aad
aaa
and
fldcw
or
js
push
sub
cld
daa
repnz
adc
stc
pop
pop
fadds
xor
inc
pop
rolb
mov
mov
loopne
mov
rcrb
sbb
dec
mov
mov
mov
adc
or
add
iret
cmpb
ds
cmpsb
mov
or
jo
ficoms
push
sarl
shl
rcl
xchg
leave
dec
ret
in
cmp
push
push
test
test
pop
in
mov
dec
sti
pop
mov
push
mov
lea
push
inc
fs
pop
pop
xor
lret
xchg
jle
inc
and
pop
fstpt
das
cmpsb
sub
mov
stc
inc
dec
test
lret
jecxz
push
xchg
out
pop
push
cmc
popf
inc
outsb
fiadds
mov
test
xor
mov
cmpsl
dec
pop
add
mov
jo
insb
adc
mov
cmp
fwait
cmpsb
pop
aam
lea
push
push
mov
dec
inc
adc
xchg
dec
mov
hlt
negb
xor
pusha
mov
imul
mov
fwait
fcompl
xor
pop
xchg
into
xor
testl
xor
aaa
aam
sbb
hlt
cmp
nop
mov
addb
out
notl
push
daa
lea
sarb
fwait
addr16
adc
cltd
hlt
imul
sti
je
mov
xor
mov
cs
push
aaa
mov
shlb
add
movups
bsr
mov
sub
cmp
mov
stos
fldt
dec
cld
std
cmpsb
subl
clc
call
gs
js
push
jb
lcall
repnz
fistpll
cmp
sbb
loope
mov
and
push
shll
jb
ljmp
aad
jae
lcall
adc
mov
dec
dec
movsl
rolb
call
xchg
sti
ss
push
ret
jne
inc
stc
out
or
cmpsb
jne
dec
mov
xor
lcall
push
mov
jmp
jns
test
or
cmpsl
mov
add
ds
add
pop
out
cmpsl
daa
cs
sub
lret
fnstenv
add
stos
pushf
and
popa
jge
mov
adc
out
fldcw
jne
mov
or
aas
ja
cltd
ds
mov
xchg
sbb
mov
hlt
lea
push
outsl
xor
sub
and
lcall
jae
call
inc
sbb
nop
xor
clc
xor
jae
cwtl
les
pop
xchg
arpl
xor
push
mov
or
push
sub
and
dec
sub
sub
or
pop
xorl
shlb
dec
push
cmpsl
mov
out
mov
push
sub
xchg
ds
sarl
add
pop
int
cmp
icebp
je
insb
arpl
sbb
pushf
jecxz
lcall
xchg
dec
sbb
jmp
pop
mov
xor
cmp
lods
data16
sti
push
sahf
aam
push
fcom
pop
test
arpl
andl
jge
inc
sahf
out
sbb
clc
popf
xchg
sbb
add
or
mov
sbb
or
in
retw
xchg
popf
sub
mov
rorl
mov
shll
push
lahf
test
ljmp
popf
mulb
inc
xor
into
mov
inc
pop
pextrw
les
sub
std
push
xchg
loopne
leave
mov
dec
fcomps
mov
mov
xchg
popf
xorb
cmpsl
or
dec
lret
add
int3
mov
inc
xor
cmpsb
jl
cmpsb
mov
pop
in
jecxz
out
out
rorb
clc
jmp
sub
clc
inc
or
ja
mov
mov
outsb
push
scas
in
loope
xor
cmpsb
popf
add
dec
inc
fildl
mov
add
jne
scas
shrl
imul
clc
stos
cld
aad
or
add
push
mov
jns
xor
jns
popw
jg
lahf
cmp
ljmp
scas
mov
jecxz
mov
subb
movsl
push
movsb
xlat
mov
pop
xchg
cmpsb
mov
adc
aam
lret
daa
rcll
and
pop
rclb
add
cwtl
xchg
pop
jl
in
lret
divb
int
jne
into
jno
xor
loope
repz
mov
push
fisubrl
notb
adc
in
sbbb
xchg
mov
fisttpll
hlt
and
sub
mov
pop
cmpsb
aam
arpl
dec
mov
enter
push
aaa
lret
ror
arpl
bnd
mov
out
inc
rolb
jle
sbb
mov
jne
xor
push
repnz
cwtl
mov
mov
lahf
mov
mov
out
sub
stos
dec
xor
pop
cmp
jo
push
pop
fsubl
or
scas
jg
jo
sbb
push
fadd
cld
jmp
popf
jmp
lahf
pop
cwtl
lahf
add
sbb
mov
imul
insb
pusha
adc
sbb
add
sti
jne
sti
adc
mov
add
jle
xchg
test
cmp
mov
sti
jbe
inc
cmp
cmpsl
dec
inc
pop
into
jp
inc
jg
jo
js
dec
cld
outsb
ret
inc
cmc
arpl
popa
jmp
sbb
sbb
sbb
imul
fs
fstl
cmp
sarb
daa
push
fistpl
mov
dec
lret
enter
inc
ja
out
nop
inc
jns
dec
lock
int
ds
bnd
mov
pushf
lret
jbe
lret
call
push
pop
loope
mov
sbb
cmp
mov
mov
lea
push
mov
insb
mov
loopne
push
cwtl
and
aas
cltd
push
imul
push
jg
dec
std
add
aad
xchg
mov
jne
mov
nop
cwtl
cld
adc
cwtl
out
lcall
add
mov
or
subb
xchg
shrl
lret
ret
inc
mov
jl
push
fcomip
jne
cmc
jmp
jecxz
int
fwait
inc
sbb
cli
adc
or
push
xchg
cmp
cmp
lcall
das
sub
and
pop
fiaddl
fisubrl
dec
mov
and
ret
sub
pop
shlb
sub
in
pop
les
dec
fs
je
jns
insl
inc
gs
xor
push
add
or
rolb
and
jnp
aas
mov
loopne
jmp
mov
cwtl
sub
es
and
es
subb
insl
dec
fiadds
shll
push
aad
shll
out
inc
loopne
decl
pusha
aas
jae
or
adc
lea
mov
fs
sbb
pop
xchg
inc
jns
mov
adcb
dec
xor
mov
pop
jg
mov
sbb
jne
out
dec
je
mov
int3
cwtl
jle
into
je
inc
xchg
cmc
sahf
inc
out
js
pop
out
jno
jmp
loop
outsl
mov
popa
loop
adcl
sahf
movsl
repnz
cli
cmp
xchg
xchg
sub
xor
movsl
sbb
cmpsb
mov
mov
in
ljmp
pushf
shr
shrl
loopne
incl
lods
or
imul
mov
out
out
mov
sbb
xorb
cmp
xchg
xchg
mov
push
cmpb
pop
sub
cmp
scas
sub
enter
inc
sbb
dec
cld
xlat
jge
xchg
dec
xchg
jno
ret
outsl
push
js
rol
jp
sahf
out
hlt
sbb
pusha
adc
cmpsl
adc
and
aas
movsl
or
xor
or
fsqrt
xor
int3
aaa
pop
test
xor
pop
call
mov
outsb
ret
stc
sub
jle
dec
ja
jp
test
les
in
lock
bound
fwait
add
sbb
fstpt
subb
pop
dec
scas
pop
cmp
pop
lea
jnp
mov
lods
pop
and
push
or
push
inc
inc
popa
push
pop
imul
mov
imul
xor
cwtl
shll
outsl
adc
in
xor
mov
mov
push
mov
xchg
mov
dec
lret
enter
and
mov
fcomps
das
push
sub
mov
shlb
in
mov
clc
add
test
call
lahf
jnp
jl
outsb
sahf
mov
imul
mov
adc
push
pop
push
xchg
add
add
lahf
and
lods
test
bound
lret
je
xor
adc
dec
and
shrl
lods
jb
divb
in
mov
incb
sub
mov
sub
xor
xlat
scas
or
xchg
les
mov
movsb
add
lods
jnp
mov
inc
int
xor
pop
jae
add
out
dec
mov
lds
jbe
test
dec
hlt
and
xchg
jmp
js
lret
arpl
jo
rorb
sbb
out
iret
pop
aaa
roll
xchg
xorl
nop
mov
fimull
enter
movsl
and
and
mov
shrl
mov
sarl
bound
loop
cld
addr16
nopl
movd
nop
jno
add
xchg
or
sub
cmp
adc
cmp
mov
outsl
or
test
jae
add
fisubs
cs
dec
xchg
enter
pop
cli
aaa
cld
movsb
add
call
adc
addr16
in
xor
bound
imul
mov
pop
push
in
add
mov
ds
or
fwait
out
push
xor
pop
mov
loopne
jns
mov
jle
xchg
fdivr
inc
hlt
push
pop
rcll
lret
xchg
cld
adc
aaa
lcall
pushf
stc
jno
or
sbb
mov
popf
xor
jne
sub
push
mov
bound
xor
or
add
das
lret
repz
movzwl
cmp
aam
daa
add
in
sub
mov
sbb
insb
dec
mov
cmc
xor
jecxz
or
out
jbe
roll
jl
sub
and
jns
pop
mov
mov
or
das
sarb
movsb
xchg
mov
adc
fmulp
sub
xchg
inc
cmp
push
js
lret
xchg
decl
dec
mov
stc
lods
add
stos
sarb
je
repz
xor
pop
and
cmp
xchg
xchg
stos
xchg
xor
push
adc
test
add
movsb
pop
ss
mov
jge
add
xchg
xchg
push
sub
fsubl
aam
outsb
cmp
jle
leave
je
dec
jae
ljmp
sbbb
sbb
or
push
insl
push
adc
stos
or
movsb
test
mov
inc
mov
mov
push
lods
fwait
mov
and
cmp
pop
dec
stos
rcr
sub
xor
int
push
js
cld
lods
fcompl
jle
int
int3
jmp
sbb
enter
jecxz
aad
adc
mov
push
subps
jmp
scas
add
sbb
xchg
add
adc
dec
stos
cmpsb
cmp
shrb
inc
cmpsb
lret
or
fldl
das
rcr
dec
jmp
pop
sub
push
rcrb
ja
outsb
adc
sti
out
sbb
jnp
jno
sub
outsb
push
mov
loopne
mov
add
popf
add
xchg
mov
push
xor
or
insb
dec
lods
adc
pop
mov
add
sbb
shlb
popa
shrl
jle
data16
popf
std
or
pop
jne
movsl
clc
jmp
adc
cwtl
fisubrs
adc
adc
push
cwtl
popa
and
fists
or
mov
add
mov
inc
cmp
fmull
scas
lret
push
int3
jno
loope
outsb
push
mov
hlt
and
add
andb
cltd
jmp
cltd
in
mov
insb
popa
adc
in
mov
adc
mov
das
sub
not
out
lods
push
jecxz
xchg
daa
outsb
aad
and
dec
out
jb
cli
stos
xlat
pop
inc
jo
packssdw
adc
popa
fnstsw
jecxz
jb
bndstx
cmc
nop
inc
sbb
out
mov
jg
mov
adc
mov
lret
pop
push
ret
lods
je
sub
sub
aas
mov
push
sti
ret
nop
sbb
ljmp
jne
sti
jbe
inc
sub
repnz
xlat
mov
aam
mov
stos
sahf
iret
lahf
xchg
adc
xchg
mov
lea
sbb
test
scas
cmp
pushf
ss
mov
pop
lods
dec
add
pop
shll
rcrb
fcoms
jl
ret
test
mov
jnp
mov
outsl
sbb
adc
xchg
nop
sub
lea
sbb
lock
sub
lret
aaa
fiaddl
lods
mov
sub
jg
pop
or
lock
cmc
mov
and
iret
or
out
je
jnp
aam
mov
sarl
jmp
add
cmp
pop
xchg
loop
adc
pop
jmp
lea
pop
mov
mov
xor
subl
es
and
xor
or
push
and
mov
into
sbb
mov
cli
add
jae
dec
xchg
lock
mov
jle
in
lahf
jle
push
lock
sbb
bound
sbb
decb
mov
cmp
mov
les
push
stos
pop
add
and
mov
adc
scas
fstl
rorb
sub
repz
ja
cmp
xchg
negb
inc
in
call
loop
jecxz
lcall
insl
je
mov
gs
daa
xorl
jmp
mov
mov
stos
mov
and
xchg
push
cld
xor
pop
sahf
sub
mov
movsb
dec
mov
push
cltd
les
cld
or
in
inc
loop
loopnew
jb
out
cmp
push
in
xchg
insb
cmp
outsb
out
add
push
or
mov
add
lds
pop
xor
jbe
inc
sub
dec
inc
mov
jl
cld
mov
inc
or
cli
push
repnz
jno
sbb
mov
in
insl
adc
and
loope
inc
cmp
je
adc
push
mov
pop
sub
cmpb
stc
sub
test
hlt
mov
iret
mov
inc
das
aad
stc
add
icebp
fidivl
ss
pop
add
andl
lahf
in
xchg
xchg
cmp
cld
in
mov
add
add
pop
or
mov
aas
mov
cmpsl
out
ret
pop
mov
add
add
jl
push
cltd
bound
cmpsb
ret
in
call
jb
cmpsb
cmp
cmp
xchg
out
xorb
or
sub
mov
xor
pop
add
cmpsl
sub
daa
jle
in
aaa
roll
cmc
shrb
fmul
aam
fabs
iret
into
shll
inc
insb
aam
inc
mulb
or
push
pop
decb
movsb
ja
outsl
push
sub
js
push
push
dec
loopne
and
xchg
cmp
cmp
cmp
sub
enter
js
add
xor
push
and
dec
mov
ficomps
jl
add
idivb
inc
insb
jmp
jnp
je
aas
mov
idivb
int3
loop
lcall
wbinvd
add
mov
mov
rolb
lods
jno
jle
out
mov
ja
rcl
mov
call
push
jbe
inc
mov
jno
jmp
cwtl
loope
jno
cmpsb
cmc
push
sbb
xchg
inc
loopne
xchg
push
or
adc
or
lcall
and
xor
fcmovb
jns
neg
iret
das
or
in
es
jo
push
sub
mov
xchg
int3
movsb
jbe
inc
test
insl
shll
mov
test
adc
in
aaa
push
and
push
ds
cmp
pop
dec
pushf
mov
push
mov
stos
rcrl
aad
int3
outsl
mov
adc
cmp
es
mov
xchg
std
insb
lcall
add
xchg
jle
mov
or
jae
nop
push
mov
imul
mov
xlat
xchg
cmp
in
cld
pop
mov
fisttpll
dec
insl
fmuls
sub
std
cmp
mov
inc
xchg
jb
xlat
negl
or
mov
orl
mov
aaa
cmpb
das
imul
add
sub
jle
jge
jo
ja
push
imul
add
rcrb
dec
sbb
sub
xchg
add
pop
lret
cmp
xchg
gs
sbb
xchg
xor
sub
and
pop
pop
pop
pop
push
fstl
push
ret
dec
inc
inc
stc
inc
out
gs
jle
jge
jo
je
imul
loop
popa
adc
push
sahf
push
adc
inc
or
data16
sbbl
shrb
add
mov
xor
stos
mov
loope
in
sbb
adc
push
test
leave
jns
bnd
mov
scas
jp
jns
std
mov
mov
outsb
push
test
pop
cli
xlat
cmc
dec
call
loope
in
sbb
push
sbb
xchg
pop
orl
mov
add
cli
xor
std
xor
sub
imul
pop
lcall
push
adc
int
shrb
push
notb
cmc
mov
cmpsl
out
shl
into
popa
dec
rcrl
nop
js
cld
or
push
xchg
or
cmpb
cmp
cmp
xor
fnsave
jmp
fidivl
push
scas
push
push
dec
cmp
xor
test
cli
dec
jns
jl
lock
ja
push
imul
sbb
popf
addr16
sbb
in
mov
scas
add
cmp
jns,pt
repnz
lcall
fisubs
popa
push
sbb
in
xor
in
repnz
icebp
fs
sbb
lahf
out
adc
jge
mov
sbbb
pushf
xchg
xchg
mov
pop
or
popf
cmp
icebp
cmpb
cmc
add
cmp
xchg
xor
sub
and
pop
dec
fstpl
dec
les
cmc
ljmp
in
icebp
arpl
and
cli
in
arpl
in
sbb
mov
mov
dec
sar
iret
imul
jns
std
cwtl
jo
hlt
xchg
imul
mov
xchg
mov
ja
push
test
scas
fwait
mov
pop
fisttpl
fimuls
push
cli
dec
jne
out
inc
addr16
adc
and
dec
mov
jo
negl
fsubr
dec
insb
iret
arpl
cwtl
ss
cli
adc
cmc
adc
or
test
cmp
cmp
sub
clc
sub
sub
sbb
sahf
es
and
or
push
add
pop
xor
mov
aaa
jp
jns
jl
jae
jbe
jne
push
push
popa
lret
fstps
pop
pop
notl
mov
mov
adcl
cmp
mov
test
das
or
xor
mov
lahf
fcoms
fists
and
dec
jns
icebp
inc
ljmp
lock
cmp
cmp
shrb
pusha
imul
pushf
xor
xlat
adc
or
punpckldq
out
gs
cmp
mov
mov
test
scas
cmp
mov
adc
or
jmp
int
rorb
sub
lods
and
not
ljmp
lahf
out
gs
cwtl
mov
pop
xchg
cmpsb
push
pop
adc
arpl
daa
push
add
mov
ss
test
scas
push
daa
pop
dec
pop
addr16
cwtl
test
test
shlb
jae
ja
outsl
shl
aam
lret
in
mov
sub
lods
stc
and
and
fdiv
fdiv
shrb
insb
dec
arpl
inc
gs
cwtl
jle
std
xchg
notl
bound
out
out
or
mov
xchg
cmp
fsubs
ret
lret
jns
std
int
rcrb
push
cld
xor
mulb
cmc
fsubr
enter
shlb
js
cld
sahf
jae
notl
insb
mov
mov
sub
pop
cmp
xor
cmpsb
xor
dec
and
fildl
fidivrs
fnstsw
lret
sub
scas
ret
and
cmpsb
lds
fcos
push
jno
je
push
and
inc
inc
outsb
push
popf
push
or
sbb
xchg
cmp
xor
arpl
mov
and
dec
push
ret
push
les
jge
lock
je
push
jns
jge
jo
ja
push
inc
outsl
aad
cld
mov
gs
cwtl
leave
lahf
dec
xchg
jge
jno
out
or
push
sbb
cmp
cmp
cmp
mov
stos
in
test
fsubl
shlb
mov
push
test
xor
sub
dec
ret
add
sti
mov
movsl
cmpsb
ret
push
outsb
xlat
insl
out
pusha
bound
lcall
adc
mov
or
clc
cmp
repz
xor
mov
mov
sub
es
pop
cs
lods
push
mov
aaa
leave
dec
int3
inc
ret
xchg
sub
adc
enter
inc
imul
insl
ja
imul
loopne
addr16
fwait
xchg
pop
xchg
xchg
xchg
pop
mov
xchg
mov
push
mov
mov
stos
pop
fisubrs
sbb
fcmovnu
popf
rol
aam
lret
dec
jae
test
mov
jecxz
addr16
sahf
cmc
sbb
arpl
sbb
pop
push
adc
cld
adc
or
add
dec
mov
je
loop
out
mov
mov
mov
and
push
push
dec
push
iret
push
xchg
dec
jl
cmc
inc
pop
js
jg
jae
jbe
jne
jmp
adc
sbb
push
ds
xor
add
cmp
aas
jne
or
test
scas
lret
mov
fistl
aad
in
push
mov
dec
clc
dec
cld
inc
int3
inc
inc
jnp
decl
hlt
and
outsb
fldcw
pusha
shlb
lcall
imul
out
pop
xlat
ret
ja
inc
push
adcl
or
push
or
pop
xor
sub
and
daa
movsl
pop
fstps
pop
rcll
push
enter
ret
dec
inc
inc
cli
inc
jle
std
jnp
jle
dec
push
rcrb
jecxz
out
call
sbb
sub
mov
xchg
in
or
lcall
cmp
ds
cmp
sub
jle
repnz
cmp
das
fsts
lret
aad
enter
inc
and
pop
js
sub
aad
dec
ja
push
imul
negl
insl
xchg
popa
xchg
in
sbb
xchg
xchg
mov
cmp
scas
test
and
pop
fstl
xlat
sub
dec
or
cli
mov
stos
cld
das
jae
jbe
jne
push
push
inc
addr16
lcall
pushf
xchg
adc
or
test
mov
loope
lcall
cmpsl
inc
fimull
add
das
shll
not
push
outsb
iret
jecxz
rcrl
pushf
sti
adc
xchg
std
or
idivl
in
arpl
out
lcall
adc
in
mov
mov
or
pop
mov
mov
mov
stos
lret
pop
adc
jp
fdivrl
cmp
mov
int3
ja
jmp
in
lds
out
sbb
sahf
icebp
movsl
je
imul
dec
insl
pusha
pusha
adc
or
xchg
rorb
dec
add
mov
data16
jecxz
data16
sbb
mov
mov
xchg
push
mov
inc
cli
jns
std
clc
jo
cmc
repnz
lcall
out
sbb
sbb
push
mov
push
add
mov
fidivrs
aad
dec
sub
sub
and
fsts
fcoml
add
int3
rol
push
lret
clc
inc
inc
repnz
icebp
jns
std
jmp
out
jmp
outsl
loopne
out
sbb
adc
cmpsl
js
add
pop
lret
cmp
out
or
stos
test
and
pop
movsl
fstp
fists
into
rorl
ror
into
js
jl
lock
je
jmp
repz
pop
cmc
adc
adc
or
loope
in
sbb
cmc
mov
aaa
or
or
add
ds
sub
test
cs
sub
jl
lock
ja
push
push
aaa
dec
stos
dec
and
inc
fiaddl
js
jg
jb
divb
cmc
cmp
arpl
movsw
fstp
cli
mov
xchg
xchg
adc
mov
sub
sub
cmp
xor
push
xor
leave
and
shlb
aad
dec
push
rorb
clc
dec
jl
repz
ja
imul
inc
jo
ja
push
fistpll
cmpsb
sub
sbb
cwtl
push
lahf
adcb
mov
subb
scas
mov
fidivl
push
test
scas
into
mov
jp
fidivs
jbe
ljmp
int3
fs
nop
xchg
lds
iret
repnz
xor
push
imul
bound
popa
andl
sahf
cmp
xor
test
das
mov
test
mov
popf
or
fwait
and
pop
enter
and
push
jp
push
inc
in
popl
adc
jbe
jne
push
mov
sbb
adc
adc
or
add
cmp
cmp
mov
mov
sub
cs
sub
neg
push
jmp
fs
enter
xchg
cmp
inc
stos
cli
das
stc
mov
negb
push
call
enter
ret
sbb
lahf
jne
call
mov
sbb
push
cmp
ss
sub
cmc
jb
in
orl
and
pop
add
int3
xor
test
scas
push
mov
dec
fcmovnb
faddp
fnstsw
jg
repz
imul
ret
arpl
lds
call
hlt
add
push
out
cmp
mov
jnp
in
stos
sbb
adc
or
push
sub
les
insl
xor
lahf
sub
scas
aas
lods
mov
xor
stos
fisubrl
fldenv
push
iret
aam
dec
rorl
mov
push
jg
jb
icebp
jbe
push
mov
into
xor
or
pop
nop
fsts
sbb
cmp
stos
mov
daa
mov
stos
pop
test
aad
dec
movsl
inc
fadds
jp
call
jae
ja
ljmp
in
cltd
push
arpl
and
pop
testb
scas
loop
out
in
sbb
push
xchg
mov
push
mov
test
mov
and
dec
cmpsb
iret
movsl
add
mov
push
enter
movsl
icebp
sub
xchg
decb
idivl
in
test
in
sbb
xchg
adc
mov
push
add
add
add
cmp
ds
cmp
aad
dec
sub
sub
and
pop
movsl
scas
fsubs
fbld
mov
and
into
arpl
rcrb
xchg
jl
jae
jbe
jne
push
mov
sub
lahf
js
call
ljmp
xchg
mov
fidivs
dec
test
scas
int
xchg
mov
mov
xor
push
stos
push
das
dec
xlat
dec
jle
jae
testb
outsb
jns
jl
jae
jbe
jne
push
push
loope
in
sbb
cli
sbb
testb
or
or
add
push
sbb
adc
push
xor
xor
fistl
pushf
mov
aaa
pop
stos
pop
cs
mov
dec
insb
dec
loopne
gs
sahf
inc
adc
js
jg
jb
jno
je
imul
mov
xor
sub
mov
xchg
fists
lret
orb
test
lds
jb
cmc
stos
push
mov
sahf
fsubrs
pop
jae
ja
loopne
push
dec
cmp
cmp
mov
xor
sub
jg
jb
jno
je
imul
aad
push
loope
in
sbb
push
xchg
sbb
push
or
add
jo
xor
xor
xor
cs
sub
dec
pop
inc
pop
inc
pop
clc
push
jl
jno
hlt
dec
call
inc
fs
sbb
jle
jge
jbe
jne
push
test
in
sbb
aas
sbb
lods
jle
bound
push
fiadds
aad
dec
xor
xor
sub
js,pn
repnz
daa
call
pop
addr16
sbb
push
xchg
dec
adc
mov
inc
add
mov
jo
ja
push
imul
pop
repz
aam
aad
dec
xchg
int3
xchg
data16
xchg
test
mov
mov
mov
stos
push
scas
into
lods
or
fstp
shlb
out
sbb
dec
nop
inc
xchg
inc
push
inc
insl
stc
out
cwtl
repz
notb
cmc
xchg
call
pop
inc
and
iret
pop
repz
adc
or
add
cmp
mov
jbe
push
icebp
sub
and
es
and
adc
sub
push
mov
inc
inc
rol
jp
mov
pop
daa
fldcw
loop
loope
in
sbb
mov
aaa
adc
or
or
add
faddl
mov
adc
xchg
das
and
push
and
and
pop
dec
pop
inc
pop
les
push
jg
repz
jbe
push
out
inc
loop
test
popf
jno
je
imul
push
movsb
sbb
out
sub
mov
sbb
push
test
mov
ret
mov
mov
stos
ljmp
imul
lcall
lret
or
or
add
test
cmp
mov
icebp
sub
scas
jmp
out
and
fneni(8087
pop
out
fwait
std
sahf
loopne
fs
out
lcall
add
aas
push
xor
xor
iret
sub
sub
jge
lock
je
jmp
dec
test
dec
cwtl
inc
pop
inc
xchg
inc
push
jnp
jle
jge
jo
ja
imul
insl
pop
pusha
shlb
lcall
inc
xchg
xchg
jnp
decb
xchg
test
mov
into
mov
mov
stos
inc
scas
clc
lods
jl
repz
scas
sahf
pusha
or
fsubrl
popa
in
repnz
jbe
jmp
outsb
inc
loop
addr16
jle
jge
jo
ja
push
out
paddsw
fs
sbb
push
xchg
xchg
mov
add
xchg
out
lcall
xor
div
push
and
and
fdivrs
push
mov
iret
pop
ret
xor
adcl
cld
dec
repz
cmc
sti
call
jno
cmc
in
sbb
rcll
push
push
cmpsl
adc
jmp
mov
mov
stos
cwtl
cs
and
rorb
ret
xchg
mov
divb
bound
cltd
mov
adc
rolb
into
jno
jecxz
sbb
decb
inc
jge
jo
ja
push
imul
mov
pop
xchg
adc
adc
push
inc
or
xor
sarb
iret
mov
stos
test
jl
lock
hlt
fsubr
fucomip
shlb
fs
and
rclb
cli
cmp
cld
add
cmc
xor
mov
sub
lods
loope
in
sbb
push
pop
sbb
aad
leave
or
or
add
add
imul
shlb
iret
mov
cmpb
lret
out
sbb
pop
adc
xchg
clc
mov
jb
jno
je
push
in
popa
loope
fcomps
push
xchg
dec
mov
mov
jbe
imul
xor
sub
das
or
mov
fcmovnbe
fdivp
fnsave
ljmp
int3
lcall
jns
jl
jae
jbe
jne
push
cmpsb
popa
pop
ficomps
dec
adc
jmp
lea
mov
out
mov
push
xchg
sbb
xchg
sub
daa
and
leave
pop
int
inc
pop
les
push
decl
dec
ss
shlb
push
cld
iret
repz
testb
lock
jne
pusha
loope
in
sbb
adc
or
or
add
push
arpl
or
xor
data16
and
and
pop
xchg
pop
or
push
add
dec
cmp
mov
inc
test
jg
jb
jno
je
imul
insl
inc
pusha
addr16
lcall
out
sub
lcall
ret
xchg
cmp
cmp
xor
sub
das
push
and
pop
mov
stos
pop
mov
xlat
imul
gs
sbb
pushf
lds
clc
mov
repnz
mov
out
xor
mov
sub
sub
cld
call
adc
dec
add
inc
add
cmp
lock
pusha
sub
lods
popf
mov
mov
paddusb
aad
enter
inc
jl
lock
ja
imul
loopne
mov
xor
insl
scas
inc
jle
push
cld
push
cli
sbb
leave
or
mov
repnz
test
outsb
mov
sbb
lods
push
add
mov
sub
das
dec
and
inc
fildl
inc
sarb
jle
jge
jo
ja
movsb
mov
arpl
data16
gs
xchg
addr16
xchg
add
push
and
pop
cmp
shlb
push
xor
iret
sub
sub
jb
mov
push
rcll
dec
adc
dec
or
inc
add
js
push
mov
je
imul
xchg
mov
sbb
adc
push
mov
pandn
push
add
add
mov
or
xorb
add
and
int
pop
jp
jle
repnz
push
lret
int3
add
add
clc
adc
adc
hlt
sub
sub
mov
addr16
lcall
jns
pop
xchg
rorl
stc
push
jge
icebp
cmp
aas
imul
in
cwtl
cs
sub
fisubrl
mov
pop
dec
fisttps
inc
inc
lret
jnp
jle
jge
jo
ja
push
imul
out
sbb
sbb
sbb
adc
or
movl
lret
xor
ret
sub
stc
and
lock
xchg
sbb
popa
push
in
cwtl
dec
stos
int3
faddp
rol
inc
fwait
clc
mov
mov
scas
jbe
jne
push
push
popa
cmp
xor
mov
mov
faddl
dec
mov
mov
mov
push
dec
lcall
fisttpl
rclb
orl
cmp
aaa
inc
test
das
js
jg
jb
jno
je
imul
push
insl
dec
pusha
int
inc
lcall
jbe
ljmp
sbbb
sahf
test
call
subl
xor
stos
pop
das
pop
mov
push
pop
dec
fmull
dec
xlat
inc
lret
inc
dec
jp
jns
jl
jae
hlt
repz
out
ljmp
sbb
sbb
push
xchg
or
out
push
insb
push
cmp
xor
mov
stos
enter
bound
ja
ljmp
shl
xlat
cwtl
lret
xchg
int3
push
ret
mov
or
test
repz
fcomi
pop
call
aad
dec
in
sbb
arpl
shll
or
add
pop
mov
push
cmp
cmp
mov
je
jmp
outsl
pop
pusha
pop
in
cwtl
rcrl
aam
lret
push
into
mov
or
add
cli
lahf
stc
nop
cld
pop
repz
mov
add
add
mov
test
pop
push
mov
add
test
mov
ds
lods
stos
and
fbld
push
rorb
aam
dec
sbb
xchg
dec
pop
inc
mov
sti
add
cmp
dec
ljmp
mov
test
repz
ljmp
mov
pushf
add
add
fdivrs
xchg
mov
mov
pop
mov
push
fsts
dec
rorb
inc
mov
cmp
jns
jl
jae
cmp
mov
test
mov
ret
sub
das
lds
jae
jbe
jne
push
lds
fs
ja
ljmp
mov
mov
xchg
test
mov
xor
inc
sub
cmp
bound
pop
lcall
push
dec
leave
dec
int3
inc
ret
jp
inc
lock
hlt
aas
repnz
jno
je
imul
push
insl
movsl
pusha
push
sbb
push
push
sbb
inc
or
decb
add
add
gs
lahf
cwtl
test
stos
pop
scas
or
test
aas
fnstenv
scas
aad
enter
ret
stos
scas
lds
jb
jno
je
imul
lods
insl
and
addr16
inc
sahf
pop
popf
xchg
nop
xchg
xchg
ret
push
hlt
or
std
gs
mov
cmp
xor
mov
cmp
mov
pop
rcr
ljmp
lret
sbb
popf
ret
xchg
adc
jl
jae
jbe
jne
push
pop
popa
push
fs
je
imul
sub
das
pop
mov
mov
mov
xor
test
cmpsb
fsubs
lret
rol
aam
lret
jb
test
shrb
cli
fs
sbb
sbb
adc
mov
call
in
cwtl
inc
lahf
dec
inc
inc
out
repz
push
lea
adcb
xchg
mov
xorl
test
scas
mov
sub
fcmovu
pop
fstl
rcl
push
lret
push
int
inc
into
inc
call
jl
jae
jbe
jne
push
inc
inc
dec
push
jb
insb
pop
loope
adc
adc
or
push
xchg
or
out
mov
hlt
mov
aaa
pop
sub
and
test
xor
stos
push
das
push
mov
dec
fiadds
inc
sarl
jns
jl
jae
jbe
movsl
es
jge
lock
hlt
fs
popf
fs
sbb
mov
test
mov
mov
mov
stos
pop
scas
dec
lods
ret
cmpsl
aad
dec
pop
negb
push
adc
lret
xor
shlb
xor
enter
jne
push
imul
sahf
sahf
popf
xchg
nop
pop
xchg
mov
test
mov
sub
fidivl
lods
lret
mov
inc
fld
fdivr
sarl
aad
mov
xor
inc
xchg
stc
mov
xor
xor
mov
stos
loop
loope
in
sbb
fstps
imul
inc
add
pop
jnp
cmp
cmp
xor
outsl
mov
test
scas
jo
cmc
mov
ficomps
mov
mov
lret
cmp
inc
push
inc
mov
cld
shl
idiv
cmc
adc
mov
psrad
sbb
adc
pop
das
or
add
push
pop
add
fbstp
inc
test
scas
jns
std
or
xchg
push
cmp
push
cmp
dec
mov
mov
aaa
push
mov
scas
cli
mov
repz
notb
push
call
shl
in
sbb
jb
jbe
in
pop
mov
mov
mov
test
mov
sti
mov
lahf
jae
insb
or
lods
out
mov
push
fucom
shlb
mov
dec
xchg
aas
inc
xor
js
jg
jb
mul
cmc
lods
push
push
popa
mov
sub
scas
pop
and
daa
adc
adc
or
push
jmp
xchg
icebp
repnz
mov
test
sub
and
pop
adc
push
xor
sub
dec
xchg
inc
mov
jp
jns
jl
jae
jbe
jne
push
mov
sbb
push
push
sbb
int3
or
or
mov
cmp
cli
xor
mov
mov
test
scas
xchg
mov
mov
add
xchg
fcmovnbe
fcoml
dec
aam
dec
dec
iret
inc
movb
js
jg
jb
jno
je
imul
xchg
mov
xchg
jb
mov
subl
mov
xor
mov
movsb
rcr
dec
rol
xlat
leave
cld
int3
jae
ja
cmpsb
cli
dec
stc
inc
cld
div
cmc
jmp
loop
loope
xlat
stos
push
movsb
rorb
fmull
dec
or
inc
mov
clc
xor
sub
ljmp
and
ds
pop
push
fsts
xor
mov
sub
scas
and
cmpsb
stc
pop
cld
fpatan
pop
not
cmc
jmp
jne
mov
bndstx
xchg
sbb
or
cmpl
cmp
jge
jno
hlt
stos
push
mov
pop
fcoms
rorl
into
add
cmp
adc
xchg
stc
mov
pop
aas
cmp
cmp
popa
shll
sahf
jg
jae
sub
aas
add
cmp
lods
cmp
pop
stos
fildll
push
cmpsb
leave
movsl
dec
fadd
filds
sti
sarl
repnz
jno
jne
jmp
sub
sbb
cltd
repz
jmp
test
jge
jno
imul
adc
adc
sbb
mov
add
add
mov
sub
mov
das
fsubs
push
push
push
adc
xchg
pop
insl
ret
out
mov
aaa
jns
std
mov
sub
lods
ljmp
shl
mov
scas
pop
pop
xchg
dec
adc
repz
lock
out
cltd
in
sbb
adc
adc
or
push
mov
pop
call
cmp
aas
std
xor
xor
mov
test
scas
loop
out
andl
pop
and
imul
pop
inc
push
jp
jns
jl
jae
jbe
jne
push
cmc
popa
jmp
sahf
fs
sbb
mov
mov
mov
scas
mov
mov
stos
pop
scas
fsubrl
mov
mov
mov
leave
add
push
ret
test
mov
ljmp
je
imul
aam
leave
in
sbb
jp
jg
jo
or
orl
add
xchg
xor
sub
xor
and
pop
lret
frstor
in
sbb
popf
leave
adc
xchg
ret
test
cli
jp
stc
and
fdiv
shl
dec
call
jl
jno
hlt
sbb
out
fwait
mov
flds
aam
dec
mov
adc
mov
imul
or
mov
mov
dec
pop
roll
sti
repz
fwait
std
pop
lock
notl
ljmp
push
mov
cwtl
mov
xor
xchg
daa
mov
mov
or
dec
mov
pushl
push
in
scas
pusha
mov
mov
fisttpll
rorb
into
push
int
roll
jge
icebp
std
jne
out
mull
out
lcall
in
sbb
mov
push
xor
pop
and
fdivrs
fdivrl
xor
ss
xor
lahf
cmp
and
std
pop
jno
cmc
pop
imul
dec
rorb
inc
leave
inc
ret
jns
jl
jae
jbe
jne
push
mov
sub
sbb
lahf
sbb
ret
or
lea
add
cmp
pushf
cwtl
sbb
es
push
and
and
jns
std
pop
jno
jne
loop
dec
lods
iret
es
ljmp
jge
icebp
xchg
hlt
mov
or
sub
loopne
out
sbb
adc
or
rsqrtps
aam
into
imul
cmp
repnz
ljmp
and
xchg
push
xchg
push
mov
test
dec
xor
inc
xor
jl
jae
jbe
jne
push
movsb
data16
cwtl
lret
adc
les
repnz
push
lahf
mov
stos
mov
xor
sub
cs
nop
and
daa
or
pop
add
mov
dec
dec
add
cmp
mov
cs
test
pop
je
imul
insl
mov
lcall
and
cmp
scas
add
add
add
cmp
int
inc
xor
scas
push
lods
andb
fnstcw
sbb
dec
and
fiadds
inc
jnp
jle
jge
jo
ja
push
out
jne
mov
movsl
inc
sbb
sbb
sbb
adc
into
xchg
xchg
push
or
aas
loop
out
sbb
sub
cs
sub
add
fnstcw
xor
sub
mov
inc
jo
hlt
jnp
jle
jge
icebp
ss
outsb
ss
mov
test
cltd
and
fistl
push
mov
addl
jg
repnz
mov
stos
imul
push
daa
xlat
pop
lret
pop
jo
je
push
enter
ret
pop
sub
test
sub
outsb
pop
insl
push
pusha
enter
inc
cltd
inc
pushf
jns
push
push
cld
adc
imul
add
loope
in
test
dec
stos
dec
scas
ret
lods
mov
jno
jne
outsb
shr
loope
gs
adc
pop
les
sti
mov
xchg
add
ljmp
and
fcomps
push
xchg
enter
inc
mov
incl
push
mov
mov
mov
test
lods
push
and
es
and
sbb
sbb
dec
ljmp
inc
lcall
jae
jbe
push
imul
data16
cwtl
sbbl
and
int
inc
xchg
test
mov
push
jmp
lods
mov
sbb
rorl
enter
ret
ffree
cmpsl
js
jg
jb
jno
je
imul
or
sbbb
nop
sbb
nop
mov
or
std
add
push
imul
xor
jge
aam
jno
add
mov
push
jb
jbe
ljmp
inc
in
sbb
jns
jl
jae
jbe
jne
push
mov
fwait
mov
sub
mov
mov
roll
sarb
arpl
xor
sub
jge,pn
jmp
pop
addr16
sbb
push
adc
dec
adc
inc
into
inc
inc
inc
inc
js
jg
jb
jno
je
imul
ja
jmp
outsb
fs
jecxz
data16
adc
mov
lea
loope
int3
pop
cmp
aaa
data16
sub
sub
and
es
xlat
pop
dec
pop
ret
push
fstl
inc
ss
sub
sub
jnp
jg
jae
negb
pop
in
push
mov
dec
orb
cltd
rcrl
sti
insl
jmp
repnz
sbb
pushf
jmp
out
xchg
in
or
out
sbb
adc
or
call
ds
int
shll
sub
sub
sub
and
in
pushf
pop
mov
xlat
test
int3
pop
ret
dec
movb
clc
jge
divl
mulb
sbb
xchg
out
mov
add
ds
sbb
or
jbe
xchg
cld
push
and
and
and
pop
cmpsb
pop
ficompl
push
cmp
xor
dec
stos
inc
scas
inc
lret
jp
cmp
inc
lock
imull
aam
jnp
mov
shrl
repz
jno
je
imul
insl
ljmp
cltd
push
pushf
xchg
xchg
push
xchg
dec
xchg
jnp
push
or
add
mov
mov
stos
int
shrl
pop
popf
mov
mov
dec
add
dec
mov
lds
clc
mov
icebp
push
hlt
lret
jmp
out
inc
in
hlt
loopne
out
fwait
js
lcall
mov
and
pop
or
add
lret
add
xor
jle
repz
cs
add
adc
pop
cwtl
pop
xchg
pop
adc
push
andnps
dec
add
mov
lds
repnz
pop
hlt
push
jmp
out
clc
in
jne
bound
lcall
mov
mov
push
mov
aas
stos
xor
add
shrl
xchg
fiaddl
fnstcw
fsub
push
out
sbb
dec
adc
xchg
ret
mov
add
clc
mov
icebp
sub
and
mov
pusha
push
addr16
lcall
lds
jmp
arpl
repz
adc
mov
stos
xchg
dec
cmpsl
ficompl
mov
sub
dec
push
int3
sub
inc
and
jns
jl
jae
jbe
jne
push
les
fs
negl
fs
sbb
cli
out
xchg
mov
scas
mov
stos
movsb
scas
pop
lods
fsubl
ljmp
push
cmp
dec
scas
dec
sub
inc
inc
js
cld
iret
repz
cmc
callw
push
loop
popa
int3
rcrl
repz
je
mov
loop
xorl
cmp
out
lcall
sub
and
pop
mov
rorb
xlat
cmp
dec
dec
inc
inc
inc
icebp
inc
mov
jg
jb
jno
je
imul
mov
cltd
pop
pushf
adc
add
test
stos
or
mov
sbbl
inc
mov
cmp
das
sub
mov
fstpt
adc
push
mov
xchg
dec
cld
inc
jo
idivl
jns
jl
jae
jbe
jne
mov
jnp
jg
repnz
ljmp
or
or
or
add
cmp
mov
pop
mov
test
scas
xchg
and
and
pop
adc
push
or
or
inc
cmp
jp
sub
scas
jbe
jne
push
pop
popa
shll
lret
popf
sub
ret
or
jb
lcall
mov
mov
test
scas
cmp
ss
mov
and
fcoms
aam
lret
test
test
lods
pop
cli
and
pop
lock
testl
stc
jecxz
out
in
sbb
pop
loopne
adc
adc
or
push
adc
mov
popl
cmpl
cmp
mov
aaa
sub
and
and
imul
aad
push
mov
dec
push
dec
nop
inc
xchg
inc
or
jns
jl
jae
jbe
jne
call
lea
test
stos
xchg
scas
xchg
es
mov
fldl
push
cmp
sbb
stos
scas
sbb
xchg
pop
pop
xchg
in
push
roll
dec
sub
inc
and
inc
pop
jnp
jle
jge
jo
ja
push
imul
xchg
cwtl
ds
mov
mov
sub
lea
lret
mov
mov
sub
cmpl
mov
sbb
fdivrl
aad
enter
ret
cmpsl
les
pop
push
jge
jo
ja
push
imul
stos
sbb
push
mov
pop
pop
or
mov
xchg
ret
mov
clc
gs
imulb
insl
cmpsl
loopne
fstps
fcompl
aad
enter
ret
addl
jb
jno
je
imul
or
lcall
scas
push
popf
mov
mov
mov
push
repz
cmp
xor
ss
stos
mov
mov
sub
fistpl
pop
and
push
fistl
dec
mov
inc
sub
js
jg
jb
jno
je
imul
mov
sbb
mov
inc
cmp
jl
jae
jbe
ljmp
lods
out
sbb
adc
push
lret
adc
inc
add
add
repnz
ds
sub
sub
es
fmull
xor
cmp
inc
ret
std
les
or
jb
jno
je
imul
addr16
bound
cmp
into
mov
add
enter
loope
pop
sub
push
mov
sub
dec
pop
dec
push
inc
dec
inc
into
inc
pop
sti
fdivrp
mov
hlt
pop
jmp
out
dec
in
dec
loopne
out
sbb
jae
imul
sbb
lahf
movlps
xchg
add
mov
enter
fsubrl
cltd
test
and
enter
inc
pop
mov
cs
lret
daa
into
fmul
aam
into
movl
jle
repz
call
fwait
loope
in
sbb
adc
or
push
lret
add
add
out
or
das
jnp
jmp
cltd
and
fisttpl
ret
sar
aam
dec
testl
inc
gs
jns
jl
jae
jbe
jne
push
mov
fwait
sub
mov
xchg
push
mov
mov
dec
insb
and
sbb
mov
std
mov
xor
mov
and
daa
push
pop
push
pop
push
rorb
dec
dec
dec
ret
inc
inc
inc
jns
dec
stc
jmp
ja
push
imul
out
in
sbb
data16
adc
out
inc
addb
cli
mov
jne
jmp
sub
and
es
and
mov
aad
enter
ret
iret
les
jl
cmc
lock
imul
adc
cwtl
fst
mov
testb
andb
xor
sub
jecxz
stos
sbb
xchg
cmpsb
dec
movsl
into
fadds
push
daa
pop
aad
enter
ret
inc
les
repnz
sbb
ja
push
imul
xlat
sbb
into
sbb
lds
jns
cld
or
add
cmp
aas
cmp
es
xor
stos
add
mov
scas
pop
mov
push
pop
dec
xlat
dec
dec
dec
into
inc
inc
inc
roll
clc
jg
repnz
and
lods
mov
int3
out
sbb
push
loope
in
sbb
push
xchg
xor
mov
sub
add
push
movsb
add
push
xor
xor
dec
sub
cs
sub
hlt
pop
call
push
mov
dec
mov
add
add
xchg
xor
mov
sub
and
and
pop
loope
fs
popf
mov
mov
mov
mov
add
std
cmp
cmp
cmp
xor
xor
sub
mov
pop
or
push
add
push
push
dec
dec
cmp
xor
jle
repz
mov
mov
add
add
jecxz
out
in
sbb
adc
fmull
aas
mov
mov
cmp
mov
mov
pop
xchg
pop
xchg
pop
or
cmpsb
dec
pop
dec
pop
inc
push
inc
roll
enter
xor
jne
push
cmpsb
popa
fisubl
fstpl
enter
ret
mov
jnp
incb
jne
call
mov
stos
sbb
out
sbb
pop
jnp
jl
lock
ja
sahf
dec
sbb
inc
dec
dec
bnd
icebp
mov
add
cmp
call
addr16
sbb
pushf
pop
adc
or
into
xchg
aas
pusha
mov
mov
xor
repz
mov
sub
movl
insl
mov
mov
stos
pop
cs
xchg
and
int
ljmp
aam
lret
ss
mov
shlb
mov
cld
push
jae
jbe
jne
push
mov
xorl
inc
insl
cmp
mov
out
inc
addl
repz
in
stos
out
fsubrs
cltd
pop
sbb
xchg
pop
rcl
inc
push
push
lret
adc
mov
stos
inc
jge
lret
jle
jge
jo
ja
push
imul
push
jae
sbb
sbb
adc
or
add
cmp
movsl
cmp
jb
icebp
scas
dec
sub
dec
fadds
inc
sar
shll
cmc
lret
imul
sbb
lahf
cli
adc
or
xor
idivb
test
movsl
shrl
scas
loope
in
fwait
push
adc
xchg
dec
mov
or
add
ja
jmp
xor
mov
mov
cmp
aaa
pop
stos
pop
scas
push
mov
enter
ret
inc
lock
out
pop
not
sub
hlt
cltd
jmp
out
sbb
cld
loope
in
fwait
push
sahf
popf
popf
mov
inc
mov
repnz
push
jmp
mov
mov
mov
sub
sub
and
pop
int
rcl
sar
aam
lret
cmc
into
imul
mov
cld
push
repz
mulb
aam
xchg
in
mov
push
out
in
sbb
pushf
or
pop
mov
mov
test
mov
fsubrl
int3
mov
jnp
lcall
push
mov
xor
mov
sub
scas
clc
and
cmpsb
repnz
jmp
out
aas
in
mov
ss
sbb
call
pop
adc
or
add
add
cmp
mov
mov
mov
stos
lock
jmp
movsl
pushf
fcoms
cmp
into
mov
and
mov
repz
not
cmc
inc
call
pop
out
in
sbb
pop
dec
adc
adc
adc
or
push
jbe
ljmp
cmp
xor
cmc
xchg
jle
arpl
fwait
pop
popf
pop
adc
push
andps
dec
cmp
dec
adc
stos
sti
cs
lods
std
and
movsb
negl
jnp
outsl
in
inc
pusha
sti
addr16
repnz
jmp
push
rcll
add
xor
jecxz
out
pop
push
imul
pop
test
das
fisubs
xlat
push
leave
leave
dec
cld
inc
mov
mov
sub
lods
std
and
cmpsl
negl
fsubrp
pop
in
shl
aad
dec
in
sbb
adc
adc
enter
stos
lea
cmp
incl
xor
sub
jp,pn
jb
cmpsb
movsb
cmpsb
pop
and
rorl
inc
lret
sti
into
popa
int
inc
stos
inc
jp,pn
jp
jle
repnz
jmp
outsb
in
sbb
sbb
adc
push
jbe
cmp
jg
pop
push
jb
cmp
aad
iret
fwait
les
stc
adc
adc
xchg
xor
sbbl
test
mov
mov
mov
stos
mov
sub
pop
fcmovu
fsts
push
roll
jns
outsl
leave
loop
lcall
jle
push
inc
popf
and
outsb
ljmp
out
fwait
sbb
adc
sub
orb
xchg
fistpll
mov
sub
pop
sub
aad
dec
es
and
jae
hlt
push
imul
dec
fs
cwtl
inc
pushf
inc
mov
stos
push
mov
outsb
testl
in
sbb
sahf
inc
popf
cli
nop
jl
cmc
mov
bound
test
mov
xor
stos
cs
sub
ficomps
pop
aad
into
push
ret
push
inc
aad
enter
aas
cmp
les
loope
sbb
nop
icebp
xchg
hlt
js
out
mul
in
sbb
xchg
sahf
mov
mov
decl
imul
sub
sub
inc
mov
jo
push
outsl
shl
cmp
mov
sbb
scas
ret
cmpsl
les
fdivrp
sar
pop
lock
je
imul
cmp
lcall
sub
scas
adc
and
mov
and
mov
test
das
adc
xor
test
mov
pushf
mov
jp
and
dec
mov
es
pop
call
repnz
icebp
ret
hlt
out
imul
ljmp
push
repz
insl
or
or
push
or
add
mov
sub
sub
push
push
fisttpl
shl
xlat
push
dec
aaa
inc
stos
inc
and
std
inc
lock
mull
test
and
pop
data16
cwtl
aam
into
xchg
inc
xchg
inc
xchg
jp
stc
mov
xor
mov
mov
je
sbb
sub
add
pop
mov
push
mov
xor
inc
mov
jns
jl
jo
ja
push
imul
loop
out
fwait
lahf
popf
adc
or
push
lods
or
xchg
fcmovnb
icebp
es
test
scas
inc
mov
pop
fcomp
fists
xlat
rorl
into
lret
dec
into
ror
sar
cld
cli
pop
sar
push
lock
negl
dec
inc
aas
pop
lret
arpl
imul
inc
mov
lock
jmp
lahf
out
in
sbb
and
movq
jno
jo
je
inc
mov
stos
int
sti
lods
jge
jne
imul
lea
lcall
mov
stc
add
mov
jne
jmp
jl
repz
bound
sbb
or
add
mov
in
ss
xor
dec
mov
adc
jmp
lret
push
into
popa
ret
adc
or
incb
std
mov
jmp
out
adc
popa
push
in
sbb
stc
xchg
jb
icebp
xchg
jne
jmp
sbbb
lahf
mov
es
ss
xor
loope
out
cmpsb
loopne
sbb
rcrl
lods
ljmp
inc
xchg
inc
mov
add
jge
jo
ja
jmp
out
mov
fs
fwait
inc
sahf
cli
popf
jns
adc
push
mov
xorl
cmp
cmp
data16
push
jmp
test
scas
lret
mov
pop
pop
pop
push
rcll
push
int3
dec
scas
adc
ljmp
repz
ja
call
jecxz
out
in
sbb
sub
mov
ja
cltd
pop
sbb
mov
out
sbb
or
add
mov
push
inc
push
dec
ror
xlat
int
rorb
jnp
jle
jge
jo
ja
push
imul
jnp
sahf
repnz
jbe
cmc
xchg
imul
dec
cmc
mov
repnz
mov
test
scas
lods
mov
ficomps
pop
cld
pop
jo
xchg
aam
dec
sbb
dec
stos
shrl
jb
idivb
jge
jo
ja
push
imul
cwtl
or
jmp
push
sbb
test
cmp
jecxz
stos
imul
sub
inc
mov
and
inc
sub
jbe
push
fsub
fcompl
aad
leave
das
int
inc
lock
jmp
jge
jo
ja
jmp
and
cmpsl
in
inc
sub
icebp
push
push
cmc
xchg
xchg
or
mov
subl
or
sub
sub
and
es
and
adc
push
cmpsb
aad
dec
mov
cmp
mov
jmp
hlt
mov
loop
loope
fisubl
mov
mov
inc
push
fsubrl
adcl
pop
cmp
jno
xchg
xlat
jne
outsb
mov
movsb
pop
ficomps
aam
lret
push
shlb
popf
stc
lret
jl
icebp
lahf
hlt
adc
or
or
out
sbb
push
sbbb
or
or
push
pop
add
sti
jbe
cwtl
xchg
xor
outsl
mov
fistps
pop
stos
shrl
mov
xor
sub
inc
mov
clc
inc
jg
jb
imulb
jmp
js
cld
sbb
negl
adc
push
insl
adc
mov
add
jnp
inc
ljmp
sub
aad
dec
pop
inc
pop
push
jp
stc
dec
jge
icebp
dec
jne
pop
inc
fidivrs
jns
jl
jae
jbe
jne
push
shl
imul
out
adc
addr16
mov
jmp
mov
xchg
inc
xchg
dec
or
or
shll
aad
data16
sub
movsb
out
fistpl
push
loope
sbb
dec
sahf
inc
adc
or
add
ss
div
ljmp
jo
data16
fwait
lahf
mov
pop
dec
xor
sbb
mov
scas
xor
scas
fwait
and
and
int3
fsub
pop
addr16
js
cld
aad
enter
ret
fdivrl
sbb
adc
xchg
hlt
lods
imul
dec
push
ret
mov
jns,pn
jl
lock
push
out
dec
loop
out
sbb
sbb
xchg
cmc
or
add
push
pusha
mov
xchg
jae
je
outsb
sub
and
fcomps
je
xchg
mov
test
pop
inc
push
jp
jle
std
inc
icebp
hlt
cli
jmp
out
jb
jbe
push
insb
sbb
sbb
xchg
or
mov
xchg
mov
lods
mov
ss
aam
call
pop
les
pop
lahf
cmp
jno
hlt
dec
push
inc
ret
jecxz
or
imul
mov
sbb
sbb
pop
ret
push
inc
cmpb
xor
iret
out
shr
loopne
fs
push
fstl
jns
ljmp
mov
stos
aaa
test
aam
sub
pop
aad
dec
push
int3
lret
mov
fistl
gs
sbb
pushf
std
mov
mov
outsl
andl
sbb
pop
pop
pushl
bound
push
mov
mov
pushf
pop
test
pusha
xor
sub
cs
lods
int3
mov
repnz
push
push
outsl
push
xchg
lret
repnz
fstl
stos
inc
lods
inc
stc
jle
jge
imull
arpl
lcall
pop
adc
outsl
ret
in
push
add
push
inc
icebp
mov
stos
in
popf
lods
lea
dec
mov
sub
sub
and
cmpsl
rcrl
push
fs
sbb
out
lods
or
cmp
ret
and
sub
cmp
dec
cmp
xchg
stos
int3
mov
and
pop
shl
mov
push
jns
loop
test
cli
xchg
push
or
lock
jmp
cmp
jbe
scas
adcl
sti
jno
sbb
pop
mov
lcall
xchg
push
sub
aam
divb
loope
and
jecxz
and
es
and
xor
cmp
imul
int3
jecxz
xchg
leave
popf
jae
lret
ja
dec
jmp
repz
insl
cmp
xor
sbb
push
add
fistpl
sbb
cmpsl
cmp
addb
lcall
in
repz
fstps
popf
decl
adc
lahf
dec
xchg
inc
jns
mull
imul
jno
aam
xchg
jo
xor
ficomps
and
lcall
mov
or
mov
stos
scas
mov
in
lret
stos
push
fs
test
push
pop
jno
cmp
fs
add
adc
adc
inc
xchg
imul
mov
in
adc
int3
sbb
mov
sbb
in
ljmp
add
mov
jg
add
movsb
cwtl
pop
jge
xor
into
xchg
testl
dec
div
das
rorb
out
ljmp
nop
sarl
adc
mov
adc
roll
adc
add
lcall
push
pop
popf
sub
xor
lods
pop
shrl
xchg
sbb
push
mov
iret
pop
test
js
inc
icebp
sbb
push
mov
jge
mov
sbb
cltd
roll
gs
insl
and
inc
std
add
mov
mov
add
xchg
fldt
mov
and
lret
imul
hlt
fwait
leave
cwtl
mov
jno
dec
mov
dec
xchg
inc
ret
cmpxchg8b
mov
sti
push
adc
add
sarb
inc
or
or
out
fisttpl
add
xor
mov
stos
xor
mov
ds
pop
pop
push
sub
into
fcoml
ljmp
cmp
and
rcrb
gs
sahf
sbb
cmp
jmp
xor
pop
mov
mov
outsl
test
xor
pop
add
mov
xor
pop
and
xor
dec
jl
pop
jnp
jmp
jnp
sub
sbb
les
or
into
inc
test
push
or
xor
out
xchg
data16
add
js,pt
lods
cli
mov
jns
dec
ljmp
enter
jle
pop
daa
scas
push
push
leave
mov
adc
imul
adc
adc
je
inc
adc
push
mov
scas
js
arpl
outsb
adc
test
out
data16
outsb
fdivp
ds
adc
and
mov
dec
jmp
mov
pop
inc
cmp
ret
sarl
out
ljmp
mov
loopne
push
mov
inc
hlt
insl
mov
jecxz
jae
adc
xchg
ss
pop
pop
pop
lea
push
xchg
rolb
fdivs
add
mov
scas
cld
xor
dec
fisttpll
dec
dec
pop
fst
jg
in
into
cmp
dec
sarl
xor
incb
testl
inc
data16
out
push
xchg
sbb
xchg
or
adc
lods
pushf
mov
cmp
or
sarl
mov
mov
mov
fmulp
and
je
aam
daa
enter
enter
es
std
dec
int3
jle
mov
xor
pop
in
pop
loop
ja
push
mov
in
data16
les
pop
shll
xlat
test
adc
or
out
add
pop
mov
sub
mov
inc
and
orb
dec
sarl
stc
sti
jnp
inc
fisttpll
mov
stos
insl
cwtl
je
mov
insb
hlt
push
push
xchg
xchg
mov
popf
xchg
xchg
mov
adc
pushf
add
add
and
mulb
cmp
xor
sarb
dec
rcr
ret
xlat
add
sub
int
insl
repz
int
clc
insb
fldt
jno
enter
loope
jmp
jno
sbb
jmp
loope
inc
fldenv
mov
push
cmp
popa
aad
pop
push
and
aas
xlat
xchg
imul
cmpsb
jb
in
pop
imul
and
fcom
inc
js
rclb
out
lret
pop
test
ja
pusha
icebp
out
loop
and
insb
jbe
jno
and
pop
negb
pop
lods
push
and
cmp
mov
or
stos
addr16
movb
adc
sub
dec
mov
daa
popa
daa
mov
roll
ficoml
dec
leave
dec
jecxz
aas
fidivrs
cli
ret
push
iret
jle
repz
idivl
inc
gs
cmp
inc
out
repnz
jmp
push
mov
push
mov
jmp
pop
dec
sub
xchg
ds
xchg
cmp
aaa
pop
push
sbb
inc
fwait
nop
imul
or
hlt
or
gs
ror
out
shll
mov
in
push
jno
pop
sti
jecxz
out
xchg
add
push
loope
sub
lahf
divps
mov
or
adc
sub
and
hlt
movsl
scas
jl
jae
adc
push
in
fcoms
jae
lcall
jecxz
in
sahf
cmp
sbb
lds
out
outsl
lea
in
sahf
out
lahf
xchg
adc
rcrl
dec
aas
pusha
mov
add
mov
pop
cmp
je
outsl
repnz
int
inc
pop
pop
stc
pop
pop
subb
into
pop
fstl
cwtl
xor
shlb
mov
fwait
xchg
sti
popa
jmp
cmp
adc
jmp
push
xor
in
mov
pop
push
xchg
icebp
and
cmc
lea
add
mov
mov
movsb
lahf
mov
jmp
aad
inc
dec
ret
pop
js
std
cmp
push
inc
or
mov
mov
out
out
loope
scas
sub
stos
sub
lods
fcmovu
mov
sub
cmp
add
in
sub
mov
in
mov
sub
pop
aam
daa
movsl
dec
adc
jnp
pusha
ss
outsl
aam
dec
cltd
xchg
int3
inc
sub
pop
je
stc
and
add
add
or
xchg
jmp
call
dec
or
cmp
outsl
pop
mov
cmp
xchg
push
stos
mov
cmp
gs
jbe
jno
jae
test
fiaddl
leave
std
dec
lock
aas
je
dec
cmp
ja
jge
test
mov
cltd
imul
test
bound
mov
cmp
mov
scas
xchg
pop
mov
test
daa
test
ffreep
int3
push
call
test
fcmovnu
fnsave
lcall
nop
cmpsl
int
popa
push
mov
divb
mov
mov
popa
fs
dec
lea
xchg
add
cmp
mov
xor
xor
bound
cmp
test
xchg
jle
xchg
faddl
loopne
ljmp
or
mov
cltd
lds
loope
xor
adc
test
mov
jle
and
jnp
push
scas
shrl
fmull
and
pop
fcompl
addr16
push
jne
mov
iret
int3
inc
int
mov
or
out
jo
and
add
xor
cwtl
xchg
adc
lods
mov
pop
mov
pop
add
dec
test
inc
leave
dec
mov
js
or
pop
lea
pop
outsb
test
shlb
in
lahf
sbb
into
int
dec
cmpsl
fistps
fstpl
cs
pop
test
int
dec
in
std
dec
repnz
js
add
and
fldl
add
in
ror
mov
fsubrl
daa
sub
sbbb
add
push
sub
cwtl
rcr
outsb
std
pusha
inc
pop
int3
mov
jl
stc
jl
dec
push
push
inc
enter
dec
ja
cwtd
jecxz
or
xchg
jl
mov
cmpsl
pop
cmp
call
ss
test
lahf
cmpsb
popa
sub
sub
and
push
fnsave
out
pop
jecxz
dec
dec
mov
push
enter
pop
popf
jmp
insl
mov
jmp
cltd
sbb
sbb
nop
push
movsl
cmpsb
mov
or
or
fs
sbb
pop
cs
xchg
mov
and
jb
outsl
lcall
jg
in
sbb
dec
dec
lret
ss
pop
iret
pop
jns
data16
test
add
arpl
pop
loopne
mov
jbe
aaa
pop
mov
mov
mov
cmp
cmc
mov
mov
sbb
sub
and
clc
daa
dec
jl
pop
push
push
je
mov
jo
gs
notb
jmp
insl
push
jecxz
das
cmp
xchg
push
xor
subb
rclb
sbb
sti
in
mov
xor
movsb
pop
pop
pop
das
addl
adc
aaa
pop
xchg
aam
and
xlat
add
xchg
jbe
fstps
sarl
insl
iret
idivb
or
das
es
mov
cmc
js
ljmp
mov
addr16
xor
inc
adc
mov
or
push
mov
lret
add
call
xor
sarb
insb
scas
mov
pop
sub
fadd
adc
icebp
jmp
add
dec
jmp
movl
jmp
push
out
icebp
insb
push
sbb
push
jp
aam
sarl
pop
push
stos
rcl
pop
push
mov
lret
xlat
push
iret
test
mov
iret
mov
scas
gs
mov
pop
arpl
loope
pushf
stc
push
pop
push
jns
sti
mov
nop
and
mov
dec
enter
sbb
pop
add
xor
lret
das
inc
pop
cmp
addl
mov
scas
sub
pop
test
jae
cmpsl
pop
xchg
lret
int3
mov
push
jae
out
dec
inc
jb
sbb
jb
jo
in
sbb
test
mov
push
xchg
sti
mov
mov
call
jle
test
adc
adc
fsubs
xchg
scas
xlat
pop
imul
inc
or
movb
and
add
loope
icebp
hlt
insb
sbb
xchg
push
loope
outsl
xchg
sbb
addl
push
or
xor
fldcw
xor
fildll
ja
mov
mov
and
ret
inc
sahf
pop
sahf
push
fsubl
dec
dec
popf
mov
inc
xchg
push
inc
mov
jnp
push
cmc
cmp
sub
andb
sbb
push
mov
mov
push
mov
mov
push
xchg
push
xchg
lahf
cltd
or
lods
test
fstp
icebp
sbbl
and
repz
int3
jnp
mov
stc
mov
jge
pop
leave
leave
sbb
in
adc
lcall
jle
arpl
wbinvd
or
pop
push
inc
xchg
loopw
add
jg
mov
dec
push
inc
push
fwait
roll
int3
jne
call
fldl
shlb
dec
enter
adc
pop
in
xor
mov
pop
adc
fs
adc
sbb
dec
cmp
mov
cmp
stos
ss
sbb
adc
sti
and
fstp
xor
stos
xor
fwait
addr16
push
test
inc
mov
cli
xor
adc
mov
push
call
scas
loope
mov
scas
push
mov
pushf
sbb
mov
xchg
or
jmp
arpl
imul
sbb
popa
in
xchg
adc
nop
cmp
lahf
rcrb
call
fsubrp
add
mov
add
pusha
inc
jl
je
clc
frstor
cwtl
imul
outsb
cmpsb
arpl
jno
arpl
cwtl
pop
in
xchg
pop
pop
pop
cmp
add
out
or
cwtl
mov
pop
das
xor
mov
add
push
xchg
mov
hlt
jne
inc
lea
inc
mov
inc
push
iret
inc
out
push
test
push
in
popa
mov
sbb
xor
xor
or
dec
adcl
mov
xlat
test
mov
repz
das
call
mov
mov
push
iret
xor
mov
xor
aad
rcl
fsubs
push
test
ret
js
jo
jg
dec
int
jbe
dec
int
aaa
mov
mov
cmpl
mov
push
aas
aas
pop
andb
rcr
ljmp
push
enter
mov
ret
stc
cmp
aaa
sbb
push
xor
shrl
pushf
sbb
push
call
mov
push
out
in
imul
out
jae
mul
or
xchg
xorb
mov
or
jle
cmp
jg
jmp
adc
sti
lods
cmpsb
and
dec
jmp
arpl
fcoml
lret
loope
cld
mov
inc
mov
cmp
add
cmc
or
mov
dec
push
dec
inc
lcall
xchg
adc
orb
aas
cmp
xor
sahf
loopne
adc
test
sbbb
inc
pusha
outsb
push
sahf
dec
lret
pushf
xchg
add
scas
dec
jns
pop
cld
mov
cmc
imul
push
lret
cmp
sbb
pushf
xchg
cs
loope
cmpsb
mov
addb
mov
ss
popf
mov
pop
sub
dec
imul
push
push
stc
lods
xlat
jns
test
jne
pop
movb
sub
jb
adc
jbe
cmc
mov
sub
lcall
dec
mov
xor
stos
pop
jl
mov
sbb
cli
mov
and
sub
fisubl
mov
ret
rcll
dec
push
dec
movsb
inc
dec
pushf
inc
jbe
jmp
cld
jle
loopne
adc
jb
adc
test
sub
out
mov
cmpb
dec
jg
mov
mov
fcmovb
shrl
push
ss
jp
dec
kandnw
test
or
pusha
pop
xchg
inc
push
in
mov
decl
cli
shrl
std
pusha
mov
cmc
or
mov
sub
xchg
pushf
pop
pop
fnstenv
or
dec
add
cmp
test
cmp
fsubrs
out
ljmp
pop
fldt
test
adc
aad
mov
icebp
cli
movl
jge
mov
insl
imul
enter
add
cmp
mov
and
mov
add
mov
pop
adc
clc
sub
mov
push
xor
addr16
jnp
push
cs
jno
in
out
fisttpl
or
mov
mov
dec
std
dec
jae
divb
jae
or
mov
shlb
pop
dec
addl
fmulp
inc
inc
ljmp
xchg
adcb
rorb
fisubrl
push
ljmp
lock
inc
or
inc
pushf
mov
xorl
cmc
rcll
fs
aad
adc
xchg
push
sbb
cld
xorb
add
add
cmp
inc
repnz
cmpsl
stos
push
lock
push
int
rcrl
inc
or
sahf
pushf
je
sti
insb
stos
push
gs
xor
leave
jp
jae
dec
adc
sbb
xchg
sub
sub
notl
test
xchg
mov
adc
xor
sub
and
jnp
lret
fstps
scas
lock
push
movl
xchg
xchg
or
out
mov
jmp
loopne
inc
xchg
xchg
arpl
inc
subl
dec
sub
push
sub
xor
into
test
std
divb
insl
fcmovbe
sarl
add
filds
jnp
out
sti
jle
push
cltd
cmc
daa
push
movsl
popa
jmp
dec
dec
jnp
jns
loop
icebp
cwtl
lahf
adc
mov
mov
test
mov
jmp
mov
cmpsb
js
push
fdivs
rol
out
jle
jg
and
pop
jnp
mov
pop
and
mov
mov
pcmpeqd
pushf
cmp
popf
lahf
enter
mov
lcall
scas
nop
xchg
call
mov
or
dec
ds
divb
xor
ss
rcl
sub
movsl
and
test
es
ret
lock
sbb
orl
lods
sti
inc
outsl
data16
add
jno
jg
xchg
mov
sub
lcall
adcl
orb
leave
push
dec
leave
mov
or
mov
shrb
cmp
out
aam
push
jno
push
icebp
inc
pushf
jnp
dec
jmp
popa
out
bound
push
pause
pop
sti
sbb
cmp
scas
imul
xorl
loopne
movsl
test
mov
or
sub
int3
jmp
and
fmull
xlat
into
jg
leave
int
cmpsb
sub
fadd
and
jge
enter
iret
pop
in
insl
in
mov
data16
adc
sbb
jnp
je
push
push
aad
pop
xor
filds
mov
stos
enter
mov
jb
sar
inc
movsl
dec
daa
xchg
stos
mov
mov
and
fsubrl
and
mov
cld
enter
imul
inc
inc
fs
ljmp
in
cmc
or
cmp
mov
int3
mov
aaa
jb
adc
enter
sub
sub
inc
xchg
rcll
aam
ret
inc
insb
or
stc
push
lds
arpl
aad
jmp
imul
sub
shlb
inc
aad
add
push
pop
mov
bound
inc
cmpsb
lods
lods
mov
jecxz
xchg
cwtl
lock
gs
cmp
enter
mov
jg
ljmp
imul
arpl
sub
dec
mov
mov
stos
cltd
leave
xchg
test
test
dec
es
cmp
mov
mov
sub
push
shlb
ja
shlb
ljmp
ret
cli
out
aad
cmp
push
nop
mov
jp,pt
inc
adc
cwtl
insl
sti
fs
push
call
jecxz
fucom
in
lcall
jge
and
mov
xorb
and
insb
mov
pop
mov
and
cmpsl
in
imul
xlat
es
mov
inc
cmpsl
jg
leave
jae
div
icebp
pusha
push
mov
xorb
fildl
mov
out
addr16
mov
and
sub
mov
nop
rcll
and
into
in
fidivl
mov
repnz
jl
add
insb
jp
pop
cmp
mov
imul
les
jge
imul
cs
aad
rorb
jno
das
sarl
lods
or
mov
js
sbb
lock
lcall
inc
xor
ds
stos
cs
mov
push
rol
inc
mov
mov
jmp
dec
cwtl
mov
out
ror
aad
shl
dec
shl
push
pop
fists
jne
inc
or
aaa
popf
add
sbb
cmp
adc
dec
mov
push
sub
stc
mov
daa
iret
pushf
fldenv
fnsave
fnstsw
xor
dec
mov
add
mov
mov
call
lods
adc
pop
pusha
inc
daa
add
cmc
out
clc
pop
sbb
aas
scas
bnd
leave
add
inc
mov
xor
lret
pop
loopne
jg
pop
cltd
loopne
dec
imul
mov
mov
inc
add
es
pop
cld
cmp
sbb
out
push
cmp
sbb
mov
xchg
or
lds
ds
jbe
pop
pop
sbb
mov
xchg
sbb
insl
ficomps
cs
pusha
sub
lods
cmpsb
sarb
pop
into
adc
fwait
pushf
xchg
ljmp
testl
outsb
adc
push
fildl
fs
xchg
arpl
icebp
icebp
jle
outsb
sbb
fdivs
repnz
push
sub
pop
popa
sub
and
outsb
xchg
fstps
dec
dec
sbb
popf
cmove
jb
lret
inc
or
sahf
xchg
mov
jl
jne
jne
pushf
jecxz
hlt
insl
xchg
dec
pop
xchg
test
adc
cmp
test
mov
cmpsb
lcall
lods
sub
dec
cli
or
rcl
movsl
test
pop
enter
clc
and
ljmp
jo
or
sahf
aad
xlat
arpl
jmp
ljmp
cbtw
fwait
sar
xor
fcmovbe
mov
inc
or
mov
mov
cmp
in
jle
stos
icebp
sub
jb
jg,pt
mov
pop
insl
mov
mov
outsl
insb
ror
hlt
add
icebp
repnz
push
dec
jno
cmp
insl
jp
in
nop
cwtl
push
sbb
mov
adc
mov
lea
data16
out
mov
and
mull
fldenv
fsubr
push
and
push
cmpsb
movsl
cmp
mov
cli
iret
and
inc
repz
jno
pop
cli
jne
lahf
adc
stc
mov
or
push
je
dec
jno
or
inc
popf
cmp
outsl
mov
pop
orl
lret
clc
xor
test
scas
sbb
movsb
push
jmp
pop
int3
xor
int
clc
mov
int3
rcr
shrl
and
mov
icebp
je
inc
jmp
mov
inc
loope
repnz
sbb
sub
mov
mov
push
lahf
insl
ja
cmpl
pop
sub
add
lea
xor
pop
inc
imul
mov
inc
imulb
inc
jbe
insl
aam
jb
and
inc
dec
dec
jmp
xchg
sbb
test
loopne
arpl
mov
xchg
and
add
add
mov
jp
loopne
cmp
fdivrs
out
cli
pushw
mov
andb
sbb
push
mov
xor
sub
maxps
lock
adc
cmp
outsl
mov
rorb
cmpsl
inc
xchg
lods
cmpsb
push
out
daa
ja
cli
dec
test
or
in
rcrb
iret
cmova
inc
jg
jg
jno
arpl
outsl
mov
int3
aad
inc
les
inc
jmp
int
lahf
cmp
add
cmp
sahf
add
mov
mov
sub
mov
out
stos
adc
js
scas
sub
xchg
fldz
pop
or
rcr
dec
clc
push
popa
aad
rol
das
inc
and
cmp
jb
repz
aad
add
loop
dec
out
inc
loope
mov
jg
int3
sbb
in
movsl
mov
cmp
repnz
daa
mov
scas
push
jb
in
test
fstpt
rorb
add
sar
jle
dec
repnz
push
loope
pop
mov
loope
out
ja
outsb
xchg
jns
fs
leave
cmp
gs
cmp
lret
gs
fs
xchg
popf
sbb
aaa
cmc
and
lods
fsubs
sub
inc
rcll
jge
mov
les
ja
inc
je
in
lea
jmp
test
push
arpl
in
fcoml
xchg
sbbl
or
loop
popa
in
push
mov
jle
mov
mov
shll
dec
shrb
fildl
mov
jl
dec
lret
testl
mov
push
hlt
scas
je
cltd
inc
imul
cwtl
insl
rcrl
xchg
repnz
mov
test
add
xchg
add
xor
subb
dec
fisubs
xchg
pop
push
inc
mov
std
pop
inc
xlat
cmc
into
add
sti
ja
inc
out
jne
cmc
aad
jmp
dec
notb
arpl
loope
mov
sbb
test
inc
aas
dec
cmp
jno
xor
xor
dec
mov
sub
and
jp
and
mov
pop
mov
mov
mov
fsubs
int3
ret
ret
pop
and
rcl
pop
push
fstl
dec
mov
sub
sahf
lahf
push
stc
jbe
hlt
lds
sbb
sbb
cwtl
push
sbb
sbb
mov
xchg
mov
orl
aad
jno
into
int3
arpl
sub
xchg
push
pop
movsl
fcoml
push
dec
pop
sbb
add
pusha
push
jnp
cltd
fwait
and
adc
jb
outsl
sbb
pusha
out
arpl
lcall
mov
out
xchg
adc
adcb
or
push
cmp
scas
push
aam
mov
or
inc
xchg
inc
sbb
or
xchg
outsl
fs
add
arpl
push
out
out
lock
idivb
xchg
jg
inc
or
add
xor
aaa
and
inc
cld
test
add
lock
sub
push
and
mov
jecxz
rclb
adc
sarl
inc
sub
push
jmp
mov
out
addr16
push
mov
adcb
or
stc
sarb
bound
jle
arpl
sub
and
mov
sbb
std
push
pop
dec
fdiv
cli
lret
push
pop
push
push
sarb
jbe
ljmp
mov
lea
pop
pop
loopne
xchg
in
ficompl
insb
movsl
in
pushf
adc
popf
and
sbb
int
adc
inc
test
mov
add
cltd
sub
and
loop
xchg
dec
lods
jo,pn
mov
pop
xor
mov
scas
je
iret
jmp
cli
mov
jl
hlt
xor
lcall
sbb
lcall
push
lea
xor
orl
jp
test
and
jb
mov
dec
stos
pop
movsl
jne
jecxz
aad
push
fxch
filds
sti
adc
lret
xor
xchg
cltd
jecxz
push
xchg
aas
out
mov
or
xchg
sub
notb
ss
fildll
xchg
xchg
adc
pop
daa
shl
sub
mov
or
loope
inc
push
inc
jb
js
aad
mov
mov
clc
ss
hlt
outsl
mull
fs
inc
ret
rolb
ja
mov
jo
adc
cwtl
push
cmpsl
lcall
test
and
mov
pop
das
lds
sub
pusha
sub
mov
and
movsl
jp
pushf
incb
aam
repz
sbb
jp
inc
insl
xor
imul
ret
addr16
arpl
jp
add
or
imul
add
pop
stos
jnp
and
mov
mov
xor
pop
lods
in
insb
and
jmp
movsb
dec
lods
pop
ficomps
jmp
xlat
aam
inc
lods
jl
xchg
rclb
jb
cwtl
loopne
icebp
popa
cmc
xchg
in
xchg
add
sbb
add
adc
repnz
sub
cs
sbb
push
or
dec
aad
icebp
clc
mov
dec
sahf
cld
std
xchg
jno
js
notb
jb,pn
jge
push
xchg
pop
dec
popf
xchg
mov
in
xchg
lds
lods
mov
sub
jecxz
outsl
cmpsl
ja
add
inc
shlb
decb
mov
add
jae
jbe
xor
add
int3
addb
aam
push
pushf
shl
bound
shl
inc
sti
or
jns
divb
or
adc
mov
addr16
dec
loopne
test
popf
xchg
sbb
icebp
imull
mov
cmp
pop
ds
lock
stos
xor
repz
mov
daa
nop
jbe
arpl
fiaddl
cli
fs
enter
aad
inc
out
ret
mov
imul
sbb
mov
jo
testl
enter
addl
xor
xor
push
mov
xor
es
xor
or
xor
test
xor
xlat
nop
dec
pop
xor
mov
mov
mov
mov
fildll
push
jge
int
jne
pop
push
dec
vpsubd
push
adc
xchg
mov
sub
add
xchg
mov
aaa
adc
pop
arpl
push
xor
pop
ret
iret
jnp
fldl
mov
orb
int
and
ljmp
push
outsl
adcb
cmpsb
in
jns
or
jae
sbb
rorb
inc
mov
fmull
pop
mov
pop
fisubrs
sbb
cmpsl
int3
jecxz
push
cli
filds
inc
xlat
les
js
jb
imul
jno
cmp
jae
bound
call
dec
mov
mov
xchg
mov
push
xchg
and
adc
fimull
aad
push
das
cwtl
fsubr
and
enter
inc
jp
scas
aam
jns
inc
jb
call
inc
call
loope
mov
hlt
adc
out
sbb
or
mov
cmp
cmp
adc
movsb
test
mov
sub
orl
mov
cltd
fsubs
inc
cld
les
into
dec
xorb
fildl
in
push
lret
inc
or
aam
lcall
movsb
out
nop
mov
pushf
and
mov
mov
cmpsl
mov
sub
mov
test
movsl
dec
cmp
ja
fcoml
leave
push
dec
sub
ret
loopne
xchg
mov
ror
clc
jecxz
aam
in
dec
and
xlat
inc
and
inc
jae
out
mov
loopne
out
mov
je
shr
push
bound
divl
shll
jne
adc
inc
add
movsb
mov
cmp
sub
mov
pop
and
pop
jge
push
pop
ficompl
jbe
push
gs
add
lret
jb
out
sti
stc
jmp
fsubrp
and
insb
out
pop
aaa
or
push
sub
adc
cltd
dec
xchg
fcoml
shlb
mov
sub
cmp
xlat
aaa
pop
and
and
mov
leave
pop
addr16
inc
jb
dec
popf
test
jno
mov
adc
push
fwait
bound
mov
pop
sbb
out
int3
inc
into
repz
sbbl
sbb
push
pop
fidivl
mov
jo
fildll
xor
stc
into
jbe
repz
lret
sbb
dec
mov
push
std
loop
clc
cmpsb
jg
mov
lret
lds
jmp
push
xchg
imul
fwait
rcrl
rorl
out
mov
mov
xchg
mov
xor
mov
mov
sub
jb
std
loopne
push
mov
pop
push
sti
ret
insl
leave
jnp
repz
sub
out
lock
jg
add
or
xor
lret
cltd
xchg
orb
nop
movsl
mov
and
mov
mov
and
shlb
sti
inc
in
push
aaa
in
std
jle
dec
jmp
fdivrs
out
push
stc
cltd
add
jae
negb
sbb
mov
nop
mov
mov
orl
push
test
daa
mov
das
fcmovnb
inc
cmpsb
fstl
subl
cmp
mov
inc
lret
sarb
call
inc
pushf
jnp
loope
cmc
sahf
or
sbb
jmp
xchg
sbb
loopne
or
mov
cmpb
imul
xchg
test
shll
pop
mov
movsb
jmp
fucomp
les
fcmovnu
push
sbb
inc
popf
push
leave
sti
pop
inc
js
frstor
mov
mov
test
cmp
jmp
push
cmc
loope
jbe
out
aam
in
mov
cmp
call
add
nop
aad
add
mov
arpl
cmp
stos
sub
test
adc
pop
add
iret
dec
mov
jnp
add
dec
push
inc
pusha
cmp
cmp
add
pop
dec
cwtl
pusha
and
inc
mov
pushf
xor
push
xor
jle
mov
adcb
mov
icebp
xor
mov
and
inc
push
push
fsubrl
insb
test
mov
jbe
lds
and
or
fsubs
dec
jbe
push
xlat
xor
xor
adc
std
out
cmp
rcl
cmp
xchg
push
sub
cwtl
pop
leave
adc
fstpt
fisttpll
and
addb
ret
sar
inc
sti
repnz
mov
mov
fsub
data16
mov
mov
mov
scas
cmp
add
mov
sahf
leave
xor
pop
sub
xchg
nop
movsl
in
push
xor
rcl
and
push
aad
xchg
aad
push
test
xor
sbb
outsb
sub
or
sub
insb
out
adc
lret
lea
loope
dec
pop
lea
xchg
xchg
add
xor
mov
xchg
jne
scas
mov
adc
scas
leave
dec
imull
rolb
movl
stc
cld
push
jmp
mov
add
and
cltd
push
in
cmc
sbb
xchg
mov
and
sahf
repnz
nop
por
adc
jno
test
xchg
fdivrp
loope
imul
and
inc
push
mov
sarl
mov
or
mov
ret
stc
ret
push
mov
cld
jae
mul
ja
sub
xor
in
mov
xchg
out
jne
mov
ja
dec
test
add
test
aaa
and
xor
lahf
sub
mov
fadds
rol
lds
insl
lock
insb
inc
sar
inc
ja
adc
jo
pop
push
jmp
or
lea
fwait
pushf
bound
adc
jp
xchg
mov
and
iret
mov
ds
add
les
dec
lock
aaa
pop
mov
loopne
and
rcr
divb
repz
sbb
leave
cli
int3
leave
jbe
push
inc
and
dec
fcoms
push
mov
mov
push
ss
sub
int
fcomip
lret
dec
jp
jmp
push
insb
data16
and
in
inc
cwtl
dec
jns
dec
cld
popf
ret
inc
notb
gs
cltd
mov
xchg
mov
xchg
xor
mov
xor
popf
add
popf
add
or
jb
and
add
js
es
fcomi
xor
std
stos
pop
or
mov
adcb
xlat
lock
imul
xor
mov
sbb
jae
cs
adc
xchg
daa
loopne
movsb
addps
add
sahf
add
adc
or
cmp
xor
loope
shlb
out
test
enter
lahf
xor
cltd
sub
xor
nop
sarl
dec
jl
enter
pusha
xor
sbb
sbb
hlt
adc
imul
lea
fstps
xchg
cmp
xor
jno
xchg
je
push
jmp
push
jmp
punpckhbw
add
test
add
mov
out
cmp
mov
add
dec
ljmp
mov
mov
lret
mov
dec
hlt
popf
sub
sub
clc
xor
jge
repz
dec
jbe
dec
hlt
jmp
in
out
lcall
pushf
inc
adc
cli
ss
imul
int
pop
dec
pop
push
cld
or
mov
shr
call
repnz
sbb
insb
adc
mov
mov
cmp
xor
sub
lods
fdivr
and
jg
aad
pop
leave
sbb
dec
pushf
pop
mov
inc
sbb
and
scas
test
inc
and
jmp
pop
pop
xor
inc
aaa
gs
pop
xor
call
jecxz
cmpsb
jge
pop
mul
pop
cmc
ja
rclb
rclb
or
push
adc
repnz
adc
mov
repnz
and
cmpsl
int3
outsb
cmpsl
dec
in
inc
sbb
pop
hlt
adc
and
movsl
dec
adc
pop
push
outsb
cmpsl
stos
inc
pop
xchg
adc
jae
jle
add
ss
add
sbb
mov
or
pop
push
or
and
das
inc
add
xor
push
add
push
out
adc
mov
jp
test
add
pop
push
dec
xor
xorb
push
std
add
out
jno
xchg
shrb
sub
xchg
and
sub
jp
lret
jg
xor
jnp
std
dec
dec
mov
mov
loope
lahf
push
lcall
scas
adc
sarl
jns
push
incb
subl
add
lcall
scas
lret
or
pop
stc
pop
xchg
jno
push
jle
cmp
lds
cli
push
xchg
rorb
lret
adc
orl
stc
cltd
mov
in
in
je
mov
lods
sub
lock
add
adc
movsb
pusha
push
cmp
daa
mov
mov
dec
cmp
sahf
ret
pop
imul
sarl
lds
pop
mov
or
sbb
add
mov
fisubrs
loop
je
sbb
imul
push
iret
out
xchg
sarl
jmp
scas
dec
xor
xorl
sbb
enter
in
bound
scas
in
subl
push
repnz
add
aam
push
pop
loope
es
mov
xchg
jbe
sub
or
nop
cmpsl
lea
subl
jmp
jb
cli
call
push
shl
inc
and
popf
imulb
out
pop
jp
pop
sbb
loopne
rorl
ds
mov
loope
mov
jmp
lds
lcall
iret
and
fdivl
out
mov
cmp
xchg
cmp
xchg
lahf
xchg
xchg
nop
aaa
sub
sub
jg
and
mov
lds
popf
jmp
lahf
out
adc
inc
xchg
pop
ljmp
add
aas
adc
mov
jecxz
mov
lods
mov
cmpsl
mov
inc
and
pop
xor
shrl
call
into
ror
sub
aad
repnz
pop
ja
pop
push
dec
mov
inc
subb
je
cwtl
lcall
inc
mov
xchg
daa
cmp
xor
js
out
sub
mov
pop
movsl
adcl
push
shlb
lock
mov
lret
cs
dec
fisttpl
xor
dec
mov
jb
je
mov
out
leave
or
inc
sub
popf
imul
or
adcb
cmp
mov
mov
sbb
cmc
dec
push
mov
lds
xchg
xchg
mov
xchg
mov
scas
lods
mov
fcomp
rcl
aam
mov
cli
clc
cld
repnz
ljmp
mov
cwtl
sahf
pushf
xchg
nop
xchg
xchg
mov
xchg
mov
mov
test
lods
mov
fcomp
fiadds
jle
into
int3
ret
cli
clc
cld
repnz
ljmp
in
sbb
sbb
push
leave
or
rol
xor
in
adc
jbe
or
pop
ficomps
or
sub
mov
notb
inc
repz
and
add
out
push
push
inc
sarl
aad
pop
or
and
div
cltd
cmc
mov
push
mov
sbb
mov
data16
fwait
movsl
push
jmp
cmp
outsb
test
xor
pop
mov
dec
push
sub
mov
mov
push
lods
out
in
add
jo
test
fwait
jecxz
push
js
sbbl
shrl
pop
out
add
xchg
lods
xlat
das
popa
xor
or
xor
pop
mov
rorl
mov
nop
das
int3
ja
stc
inc
inc
inc
sarb
cmc
imul
sub
fidivrs
testl
stos
or
fnstenv
test
cmp
mov
dec
mov
daa
scas
mov
pcmpeqw
cld
filds
loop
adc
aas
sbb
scas
into
jl
pushf
lock
xor
call
sub
addr16
push
mov
fidivrl
fcomp
xchg
not
testl
cmp
mov
mov
loope
daa
fwait
and
sub
fsts
and
movsl
int
dec
movb
lret
ja
jns
sub
insl
mov
out
jns
fldt
daa
jbe
shlb
sbb
adc
push
xor
test
mov
call
pop
imul
sbb
dec
fwait
mov
xchg
cmpsl
lds
jb
push
hlt
cmp
cmc
add
insl
xor
bound
sbb
jg
scas
inc
or
je
shr
add
insl
mov
lcall
cmpsb
jb
pop
hlt
mov
jmp
dec
fidivrs
xor
ss
jo
stc
dec
push
dec
movsb
and
and
stos
loopne
inc
into
mov
cmp
mov
cmpsl
sbb
shrl
push
inc
fnstenv
mov
xor
stos
ret
ja
pop
mov
outsb
in
jae
mov
fisttpll
dec
dec
inc
mov
mov
test
push
outsb
movsl
and
sub
dec
push
nop
xchg
xchg
mov
push
pop
flds
mov
mov
inc
inc
ret
cs
rcl
pop
sbb
insl
imul
jae
jge
or
popf
lcall
mov
cmp
mov
in
adc
xor
pop
in
sti
cmp
in
sbb
push
push
pop
xchg
iret
loope
or
cld
jp
pop
mov
mov
add
gs
incb
jae
adc
adc
push
jb
fwait
fwait
nop
lcall
xor
xor
xor
jmp
xor
cmpsl
mov
imulb
inc
dec
push
xchg
mov
test
jge
jnp
jg
push
adc
pop
jl
data16
dec
cmp
push
into
sub
inc
xchg
int
xchg
mov
pop
xor
inc
sub
cmpb
mov
shl
es
sub
push
sbb
jecxz
pop
push
aas
fstps
lret
outsl
iret
sub
jne
sti
inc
ja
xor
int3
repnz
dec
or
push
adc
int3
dec
bound
dec
lods
inc
daa
in
fidivrs
in
push
push
cltd
lret
ja
dec
or
shlb
sbb
jge
das
push
mov
out
pusha
sbb
xor
pushf
dec
mov
testb
cmp
imul
jne
sbb
sbb
xor
cwtl
or
xchg
adc
ret
mov
into
les
push
lret
mov
ja
add
cmp
loope
test
std
xchg
push
pop
sar
jo
xor
sub
lea
push
ljmp
pop
sahf
enter
cmpsb
add
and
or
and
cmp
or
dec
stos
testl
mov
mov
adc
push
out
dec
test
roll
sbb
repz
inc
sbb
mov
push
push
out
adc
hlt
mov
pop
sbb
add
insb
and
xchg
cmpsl
add
mov
ds
cwtl
xchg
mov
pushf
push
das
sbb
adc
cli
std
or
xchg
pop
jae
mov
insb
dec
xor
lods
negl
or
pop
popa
js
loope
push
dec
dec
popf
ds
inc
cmp
shll
ja
cmp
sub
adc
jbe
addr16
mov
in
into
inc
sbb
ret
add
pop
repnz
pop
mov
rolb
adc
cmpsl
in
lahf
aas
fimuls
push
pop
or
cmpsb
pop
xorl
mov
and
int3
jmp
mov
fistpll
push
jbe
and
fldenv
dec
in
ffreep
lahf
test
fadd
add
or
adc
xchg
js
mov
addr16
pushw
addr16
popw
jmp
lods
pop
test
jp
mov
sub
and
and
jecxz
stos
mov
push
xchg
cltd
sar
mov
push
inc
repz
jp
adc
xchg
add
mov
insl
subl
jae
sbb
in
loopne
sub
lods
push
in
nop
cltd
stos
mov
inc
rcll
stos
orl
sub
cs
xor
daa
sub
push
jns
push
xchg
out
rorb
lea
popa
push
lret
push
jge
xchg
jecxz
or
test
rcl
pop
iret
aad
xchg
fisubrs
jb
add
insb
dec
adc
pmulhuw
aad
xchg
inc
shrl
jmp
mov
jne
data16
add
in
pop
mov
pop
into
test
loop
js
dec
ljmp
jmp
adc
cmp
lahf
adc
pusha
mov
in
xchg
stos
or
cmpl
dec
into
mov
xchg
aas
lods
mov
jae
pop
fistpll
pushf
loope
in
test
aad
int
jns
xchg
call
add
lods
pop
cmc
loopne
lea
jnp
out
loop
bound
in
aam
jnp
xchg
mov
fsts
dec
add
scas
mov
adc
scas
cli
fdivs
mov
scas
mov
repz
in
push
into
inc
sti
adc
and
fs
jmp
add
popa
aas
bound
in
xchg
setle
push
pop
adc
pop
push
xchg
mov
inc
roll
pop
xor
test
inc
mov
and
daa
loope
fistl
and
leave
ret
out
ret
int
sbb
mov
inc
repz
les
subl
push
pop
sub
jge
loop
or
cmp
mov
aas
or
cmpsl
add
lret
dec
mov
fnstsw
insb
aad
cmpsl
jle
and
insl
shrb
push
bound
fcoms
push
dec
dec
jnp
push
lret
xor
pop
js
jmp
shl
dec
imul
out
cltd
lock
or
mov
xchg
mov
fisttps
push
mov
jmp
movsl
movsb
movzbl
jbe
dec
daa
scas
mov
dec
pop
pop
sbb
add
mulb
repz
test
push
std
fincstp
bound
xchg
push
pop
imul
fs
test
pop
insb
or
xor
add
loop
adc
sub
lods
stos
ret
pop
aad
push
push
adc
push
fwait
rol
mov
mov
inc
mov
jae
jp
lcall
jno
or
mov
sbb
movsb
dec
loope
jno
lds
xchg
add
pop
mov
or
xor
sti
mov
mov
xchg
xor
cs
fldl
dec
pop
pop
idivl
pop
testb
js
insl
in
mov
and
pop
mov
loopne
mov
push
cmp
out
mov
pusha
add
mov
mov
sbb
xor
sub
and
fisubs
xchg
pop
sbb
fcomps
ret
dec
dec
je
ja
loop
xchg
inc
xchg
ret
or
jb
clc
jo
not
into
sarl
push
loope
xchg
xchg
mov
pusha
popa
lock
mov
jg
cmp
and
lods
mov
pop
and
orb
fisubs
push
push
dec
gs
inc
int
dec
les
jb
roll
pop
and
add
je
jecxz
cmp
aaa
fwait
cltd
mov
mov
push
and
xchg
stos
push
mov
cmp
dec
jbe
mov
aaa
movsb
ss
sahf
nop
push
sub
add
mov
cwtl
stc
xchg
dec
or
or
js
insb
cmp
into
divl
hlt
mov
sub
cmp
sbb
sbb
sbb
sbb
jl
mov
mov
mov
xor
cmp
movsb
je
jbe
dec
adc
cmpsb
xchg
pop
nop
push
dec
sbb
dec
add
xchg
out
pop
push
jge
outsl
ret
add
jbe
cmp
and
outsb
add
stc
pushf
scas
xorl
shlb
loope
xchg
xchg
xorb
fdivs
pop
lock
push
shll
movsl
jno
in
mov
jmp
data16
cmp
int
sub
jmp
xlat
ljmp
punpcklbw
xchg
lea
or
cmpsb
sbb
aad
pushf
xor
mov
shrb
mov
xchg
dec
inc
or
sbbl
aam
jbe
dec
dec
push
mov
cld
jo
mov
icebp
icebp
insb
xchg
cmpsb
push
mov
mov
lods
adc
or
xchg
xor
mov
add
cmp
aaa
xor
ss
ja
cmpsl
daa
dec
mull
int
mov
push
jg
mov
lds
add
inc
aas
adc
loope
inc
sbb
sahf
sbb
add
mov
dec
sbb
adc
push
or
cmp
mov
dec
daa
out
push
lds
jl
scas
sub
cmpsb
xchg
cmpsb
jns
inc
or
daa
pop
dec
jp
rol
sbb
push
inc
notb
std
dec
repnz
fs
int
popa
scas
pushf
in
sbb
fdivl
adc
add
cmc
mov
push
push
inc
mov
xor
mov
cmp
es
addr16
push
mov
sub
inc
push
sahf
push
test
ret
inc
rolb
clc
stc
jnp
jge
icebp
divb
push
out
out
ljmp
fwait
cwtl
loop
sbb
adc
insl
add
out
xchg
mov
popa
mov
gs
pop
aas
inc
fmull
adc
fistl
sarb
adc
hlt
sbb
outsb
adc
stc
cld
cli
orl
and
push
imul
enter
popa
aaa
push
adc
xchg
and
add
push
push
stos
add
cmp
mov
int3
and
sub
xchg
rorb
fcomps
push
xor
fst
rcl
vmovddup
sbb
and
pop
pop
adc
jg
xor
cli
jg
cld
jae
mov
xchg
adc
push
lods
mov
xchg
pop
add
xor
adc
xor
sub
cmpsb
xchg
mov
pop
in
xchg
imul
push
add
pop
inc
jbe
sbb
fcompl
pop
mov
out
jne
jno
sbb
inc
pop
cmp
out
jns
popf
test
jecxz
and
and
in
cmp
imul
sub
push
outsb
sbb
push
inc
mov
cmp
jmp
movsl
imul
rol
cmp
dec
dec
xor
jl
or
mov
aad
js
jg
aaa
dec
movsl
add
popa
push
adc
cmc
movl
out
push
jnp
ljmp
fnclex
in
pop
mov
mov
xchg
lret
sub
insl
cmp
push
inc
je
pop
mov
lock
outsb
loope
xorb
pop
sub
jecxz
ja
jmp
sbb
xchg
lea
fsts
xchg
sub
popf
mov
dec
xchg
js
cmpsb
insb
daa
es
test
mov
insl
pop
mov
mov
mov
lock
pop
jb
xchg
test
jge
jne
pushf
dec
mov
lahf
arpl
xor
pop
xor
xlat
sub
scas
lahf
clc
cmpsl
inc
xor
push
insb
xor
xchg
mov
outsb
rcrb
pushf
push
movsl
testl
ret
mov
test
push
mov
in
in
loopne
push
mov
add
mov
test
popf
imull
mov
add
cmp
jg
inc
adc
aaa
repz
jb
dec
outsb
jne
or
fidivs
add
cwtl
adc
rcll
adc
repz
subl
insb
loopne
test
xor
test
clc
cmc
stos
xor
cmp
xchg
xchg
addr16
or
insb
loop
clc
inc
movsb
lds
lock
lahf
jp
pop
das
xchg
in
sbb
inc
clc
imul
daa
pushf
sbb
popf
fdivrl
in
pop
or
in
pop
hlt
clc
mov
daa
popf
sbb
imul
lea
loopne
mov
jl
les
adc
fwait
inc
jmp
insl
aaa
scas
idiv
sbb
jecxz
xchg
pop
out
data16
pop
popf
lahf
es
add
xor
push
lea
mov
lret
pop
mov
and
jmp
push
xchg
xchg
add
dec
push
imul
addr16
cmp
adc
push
sub
int
add
fdiv
pushf
xchg
lcall
inc
mov
out
xor
outsb
shr
dec
sub
fsubr
mov
pop
mov
fiaddl
andb
mov
loop
sbb
mov
fisubrs
xchg
lcall
jg
cmp
push
jbe
fwait
mov
add
cmp
cmpb
pop
adc
test
mov
daa
and
subb
sub
dec
mov
xor
ds
push
mov
add
xchg
idivl
or
cltd
negb
jo
test
sub
faddl
add
push
bound
jns
push
cmp
stos
mov
test
push
add
mov
push
and
or
testb
das
inc
mov
xor
inc
jnp
push
sub
mov
xchg
push
fcomps
out
add
pop
xor
test
arpl
imul
sub
jp
iret
cwtl
mov
jnp
test
xor
xor
push
mov
das
iret
mov
int
adc
push
mov
xor
pusha
clc
push
jne
lahf
mov
inc
sahf
mov
in
sar
lcall
ret
shrb
adc
aad
xor
jl
notb
and
enter
sbb
jae
push
or
pop
popf
addb
mov
cmp
ja
jb
push
mov
xchg
add
dec
mov
aas
cmp
and
push
sbbl
dec
jns
jle
mov
push
xor
and
and
xor
push
pop
push
lret
lret
into
inc
inc
adc
xchg
cmc
or
push
jno
pop
hlt
fwait
mov
xchg
xor
xchg
mov
mov
lea
add
mov
push
mov
push
mov
mov
inc
mov
js
fdivrl
and
and
push
imul
gs
push
dec
jl
lret
jne
ja
inc
jbe
lock
jne
cmp
sbb
insb
sbb
sbb
mov
add
sarb
mov
add
dec
xchg
sub
rep
pop
cmc
das
fsubrl
push
jecxz
aad
pop
dec
cltd
pop
ret
inc
xchg
pop
int3
xchg
aam
mov
lock
je
idivl
sub
sbb
sbb
adc
mov
add
lret
or
test
xchg
jp
mov
xor
mov
jecxz
movsb
fwait
cmpsl
rcrl
cmpsb
rcll
fmul
or
mov
add
js
leave
cli
mov
cmc
xor
outsb
sub
jmp
imul
jecxz
fucom
adc
xchg
adc
pop
lret
sbb
cmpb
xchg
sub
sub
and
and
adc
dec
push
dec
lds
dec
stc
ds
jge
cli
divl
out
sub
insl
movsl
imul
data16
out
sbb
in
cltd
dec
adc
popf
jns
cmp
mov
adc
out
mov
sbb
and
sub
pop
or
mov
push
mov
mov
std
stos
cli
jno
std
and
cs
std
fsubrs
fisubrs
fbstp
lret
sbb
dec
push
xchg
inc
xchg
push
les
or
mov
or
loope
test
mov
addr16
mov
or
push
and
ds
ret
mov
cli
xor
xor
inc
mov
jmp
ja
pop
jne
fucomp
loopne
std
ljmp
dec
out
inc
fs
jge
addb
imul
mov
fwait
xor
mov
or
push
add
add
add
pop
xor
inc
or
subl
inc
jmp
loop
out
gs
inc
adc
adc
push
inc
in
or
jne
xchg
mov
cmp
sbb
sbb
mov
xor
mov
iret
mov
pop
mov
std
inc
bnd
ja
mov
cld
dec
jp
cmc
imul
out
pop
pushf
loope
in
mov
push
add
test
lods
cmp
cmp
push
cmpsb
popa
cmpsb
lret
mov
add
aam
mov
dec
dec
cmc
jae
ss
xchg
std
call
ret
ja
pusha
clc
inc
pop
and
mov
push
testb
scas
jns
call
int3
popa
clc
stos
fucomip
jae
ret
into
jae
pop
jnp
call
movsb
xlat
insb
mov
cmp
jg
inc
outsb
xchg
inc
pop
scas
cmp
cmp
sub
xchg
enter
sub
xor
aad
jnp
add
dec
push
inc
es
pop
dec
stos
jge
cmpb
xchg
nop
fwait
push
mov
sub
outsb
xchg
ret
jp
push
cwtl
aad
in
aad
or
sbb
lea
and
xchg
mov
adc
cmp
mov
outsb
cmp
xchg
adc
roll
adc
push
lods
ja
pop
ja
in
push
xor
loop
rorb
push
faddl
cmp
idivb
lods
cmp
sarl
int3
mov
popa
push
fnstenv
mov
cld
ret
pop
jge
daa
cld
es
or
jno
push
push
insb
adc
aaa
jns
ja
pop
xor
and
rolb
inc
adc
ret
shll
cli
es
shlb
imul
sub
movsl
cwtl
filds
push
mov
dec
mov
std
push
loopne
imulb
call
dec
xchg
pop
nop
repnz
scas
or
sti
dec
mov
cmp
stos
shr
or
les
jno
lret
mov
or
test
or
cltd
jbe
loopne
xor
or
mov
cmc
jecxz
ja
push
imul
data16
sbb
outsb
das
and
addb
movsl
test
stos
mov
fdivrl
loop
ror
push
sbb
push
push
adc
ss
scas
addb
add
std
mov
dec
inc
ror
testl
mov
stos
imul
push
or
mov
rorb
das
rolb
imul
fldl
ret
adc
mov
dec
sub
stos
mov
xchg
cmpsl
pushf
mov
push
mov
into
int
mov
cwtl
enter
out
push
pop
leave
jnp
mov
inc
divb
pop
jns
xchg
xor
sbb
lods
leave
mov
icebp
out
ja
out
out
out
mov
stc
xchg
or
popf
mov
push
enter
mov
fwait
repnz
mov
sbb
add
pop
mulb
fists
xchg
test
push
pop
dec
ret
aad
push
dec
add
jmp
mov
cmc
mov
inc
or
hlt
test
add
stos
or
sti
mov
mov
push
dec
dec
in
jbe
adc
or
xchg
xor
lods
pop
jmp
clc
sbb
ss
xchg
jb
xor
pop
pop
mov
stos
xorl
mov
repnz
pavgb
mov
rcrl
sbb
inc
lret
fbld
jp
pusha
cmp
lods
inc
sti
pop
mov
or
aas
shl
dec
pminsw
lcall
aam
add
out
mov
mov
cmp
cs
aas
dec
push
jnp
mov
dec
dec
mov
add
cmp
mov
aam
cmp
cltd
sarb
xor
outsl
daa
mov
mov
jb
iret
add
sbb
sarl
pop
lret
mov
and
nop
cs
add
cwtl
loopne
xor
in
test
mov
out
loop
jb
mov
int
fsubl
jp
data16
fisttpl
popa
sub
inc
lods
ret
ss
lahf
push
xchg
jnp
fwait
push
inc
pop
jl
lods
mov
test
in
mov
int
fwait
sub
aaa
push
mov
or
cmp
andb
mov
addr16
fdivs
push
sbb
fstl
lret
movl
aas
rcr
dec
or
fwait
aad
mov
jbe
dec
mov
lods
lock
test
mov
push
adc
adcl
or
out
or
outsb
aad
fcom
aam
dec
inc
add
xlat
xchg
or
out
mov
out
incb
sbb
pop
mov
pop
cs
popa
sub
call
cmp
bound
out
bound
sti
mov
mov
xchg
push
jns
scas
add
adc
pushf
mov
xchg
or
dec
inc
inc
push
dec
sub
loope
loop
fs
xchg
xchg
inc
hlt
lock
in
jg,pt
add
mov
lcall
pop
and
mov
and
push
xor
xor
sub
into
inc
cmp
cmp
and
or
mov
pop
xchg
push
push
scas
lods
cwtl
cmpsl
mov
mov
mov
nop
call
negb
fdivr
dec
dec
sub
bound
and
push
je
and
lahf
cmpsb
shr
add
ret
data16
pop
dec
pop
mov
mov
lock
add
mov
push
pop
imul
jns
fs
lahf
adc
popa
int3
adc
jmp
lahf
cmp
icebp
in
mov
xchg
add
fcomps
jge
int
stos
mov
push
sub
stc
dec
in
into
fistps
fsubrl
arpl
rcrl
cmpsl
mov
bound
xlat
cwtl
icebp
pusha
sbb
not
les
lret
inc
mov
add
jae
pop
push
lahf
arpl
push
xor
ret
sbb
dec
sub
into
jle
loopne
cwtl
xchg
xor
jno
add
mov
and
sub
push
sub
lcall
loope
sub
or
and
mov
notl
lea
lret
jnp
add
cmp
mov
ja
push
xor
leave
dec
jo
jb
xchg
push
es
mov
mov
ss
roll
add
int
scas
aam
cmp
cld
xchg
xor
cmp
ljmp
pop
mov
adc
test
subb
movsb
mov
sub
js
pop
push
iret
sub
push
std
cmpb
in
cli
int3
mov
pop
inc
rcrl
in
jbe
dec
sub
cmp
aad
cld
aam
sbb
cld
pop
lods
add
jmp
lods
xlat
lret
xlat
pop
das
mov
xchg
sub
or
jg
xor
int3
mov
inc
loopne
data16
std
xchg
and
popa
repz
xchg
insl
aam
sub
add
out
inc
and
outsb
xor
js
dec
jbe
or
mov
fdivs
aam
mov
dec
jae
sub
inc
jmp
and
aam
mov
cltd
sub
stos
and
cmc
xchg
dec
dec
jmp
rorb
fidivrl
pop
ds
push
mov
mov
out
iret
in
repz
pop
es
in
ljmp
or
xchg
pusha
add
jnp
out
jge
in
jns
mov
outsl
scas
xchg
add
rcr
fstpl
fbld
repnz
push
sbb
repnz
shrl
sbb
inc
or
push
fisttpll
adc
daa
jo
out
jno
ret
mov
popf
sub
inc
xor
mov
mov
stos
dec
lahf
dec
cmp
mov
jno
das
and
and
in
out
pushf
cmp
inc
nop
push
in
fmuls
out
mov
add
cmp
sarl
in
out
loope
lcall
and
xchg
jbe
cld
jle
es
mov
push
scas
cwtl
popa
dec
enter
test
pop
pop
jmp
push
dec
dec
call
shrb
hlt
pushf
fabs
iret
jo
dec
mov
cmp
xchg
rcrb
movsl
mov
cmpsl
xchg
jmp
jns
jg
inc
xchg
push
loope
mov
sub
mov
pop
push
adc
popa
fnstsw
jns
imull
hlt
mov
pop
call
cmp
mov
cmp
or
ja
push
movsl
push
pop
hlt
pop
cwtl
mov
dec
adc
push
fists
mov
cmp
push
mov
push
repnz
gs
mov
mov
mov
inc
and
sub
cmc
add
push
data16
lds
xchg
adc
dec
pop
sbb
dec
nop
mov
aad
mov
nop
jno
clc
mov
mov
stos
imul
stos
mov
popa
pop
cltd
sbb
mov
xchg
sub
xchg
xor
enter
cmp
jbe
push
push
mov
popa
inc
loope
jns
mov
adc
popa
add
dec
and
or
enter
hlt
popa
divl
shlb
imul
sbb
dec
sbb
dec
fdivrl
push
lcall
jge
les
je
mov
int
push
out
sbb
mov
mov
pop
sub
sti
movsb
hlt
ja
push
adc
cmp
aaa
xor
dec
mov
ret
xor
lods
jbe
adc
lods
in
int
in
inc
lcall
sbb
inc
dec
jg
sar
mov
inc
into
pop
xchg
xor
jo
icebp
mov
lods
mov
pop
ljmp
xchg
leave
mov
jns
mov
or
cmp
outsl
pop
sub
push
bound
cmp
push
mov
aaa
aad
pop
mov
xor
test
test
int
je
xor
jnp
lea
sbb
xchg
hlt
movsl
call
pop
dec
rcrb
mov
sbb
incl
or
dec
leave
mov
lahf
movsl
testb
loop
incl
sbb
negl
cli
repz
push
xchg
adc
mov
dec
jg
add
sbb
push
addr16
shlb
mov
mov
mov
mov
jnp
in
les
cmc
movsl
mov
push
cmp
mov
jns
inc
xor
repnz
and
outsl
movsl
xchg
daa
sbb
lcall
pushf
push
dec
push
lret
mov
add
pop
and
jge
dec
cmp
mov
dec
stos
inc
nop
jecxz
push
loopne
shlb
sbb
dec
in
xchg
cli
push
jbe
call
cwtl
test
in
mov
pop
decl
dec
sbb
pop
movsl
inc
out
xor
push
cs
mov
dec
inc
dec
mov
int3
xchg
cmp
jnp
cmp
lock
cmp
cs
sbb
push
bound
adc
mov
mov
cmp
jnp
idivl
subl
mov
mov
dec
sbb
mov
in
xor
cmp
movsb
adc
push
sub
std
insl
out
mov
pop
xor
into
fidivrs
pusha
sub
sub
data16
ljmp
nop
and
inc
mov
pop
sbb
mov
cmp
jge
xor
les
rclb
outsb
in
sbb
addr16
push
ret
dec
mov
ret
adc
inc
mov
data16
jl
xorl
lods
scas
pop
and
gs
xchg
lret
cmp
rcl
cmp
jge
fdivs
sar
mov
imul
loope
enter
pop
loope
dec
sbb
dec
jmp
dec
in
fstps
jge
pusha
int
cmp
in
sub
pushf
sti
xchg
xchg
xchg
pop
fcomip
adc
rcr
test
icebp
bound
cmp
jp
pushl
jbe
cmc
es
in
jnp
and
cli
lcall
adc
or
std
aaa
movb
cmp
pop
mov
or
add
das
mov
in
push
push
loop
fmuls
in
xlat
popl
jecxz
xchg
add
xor
inc
je
out
mov
adc
jl
mov
push
mov
lahf
xchg
cltd
stos
lret
mov
or
fisubl
shl
bound
xor
inc
mov
adcb
int
add
fildll
dec
rcpps
stos
lret
inc
int3
dec
cmpb
mov
sahf
cld
fdivp
and
jle
int
outsb
lds
into
pop
addr16
ror
cmp
sbb
pop
js
mov
inc
in
mov
sbb
push
je
xchg
lahf
jecxz
adc
adc
xorl
insb
jge
push
in
push
mov
xor
cmc
push
sub
in
and
mov
in
cwtl
dec
mov
es
notl
add
insl
clc
adc
mov
xorl
mov
or
pop
out
sbb
mov
aaa
dec
pop
adc
popa
inc
cmpsb
cmp
es
sub
push
scas
ja
jne
ret
sbb
or
dec
inc
push
cltd
dec
ljmp
xchg
mov
and
jle
imulw
cwtl
loop
fucomi
test
inc
xchg
shrl
inc
in
cli
sahf
xchg
rcll
dec
jae
cwtl
sub
shll
shrb
cld
shr
outsl
in
mov
insl
lret
mov
adc
stc
test
sti
out
cmp
cmp
mov
dec
xchg
pop
repnz
jmp
mov
or
push
aad
jmp
push
push
dec
push
push
scas
sbb
jle
dec
mov
cld
je
jo
mov
push
mov
jmp
lret
aaa
cmp
gs
dec
push
jo
outsb
imul
pop
sub
dec
gs
fldenv
jnp
dec
jns
daa
pop
in
mov
adc
or
inc
inc
imul
push
jo
scas
jbe
adc
push
roll
lcall
in
cmp
push
std
xchg
lea
aad
pop
dec
cmp
pop
xor
pop
popa
mov
mov
mov
fcmovnb
pop
std
imul
sub
pop
inc
je
or
xchg
xor
dec
movsb
mov
fucom
pop
lret
popf
mov
orl
iret
dec
cs
xor
cltd
push
mov
cmc
mov
leave
mov
and
clc
add
pop
std
out
out
jmp
jg
out
or
xor
daa
mov
outsb
xchg
lods
repnz
dec
jbe
add
mov
pop
pop
jle
and
mov
hlt
adc
lods
sub
pop
pop
sub
mov
js
xchg
incb
out
adc
rclb
cwtl
hlt
fidivrs
aaa
mov
mov
push
mov
and
loop
fs
rolb
lahf
pop
xor
xchg
sub
aas
lret
inc
jnp
jbe
hlt
inc
and
aam
out
int3
cmp
pusha
mov
jle
cld
aad
push
ljmp
shl
fidivrs
in
insl
pop
cmpb
sub
and
pop
add
fmull
push
and
mov
jae
push
and
pushf
mov
xchg
add
jp
stc
mov
and
sub
dec
xor
inc
test
push
or
mov
or
inc
outsl
sbb
addr16
jne
sub
movsl
push
rcrl
jle
hlt
mov
ss
mov
insb
push
mov
enter
sub
inc
and
lcall
mov
pop
call
imul
in
cmp
jbe
xchg
icebp
rorb
out
test
test
ds
adc
ss
fldt
loopne
jbe
push
divb
jmp
push
loope
xlat
js
xchg
or
cmpsb
movsb
inc
subb
inc
or
mov
push
in
push
lret
dec
out
std
int
lret
loope
dec
in
rcrl
pop
outsl
adc
jecxz
jnp
mov
add
test
pop
test
cld
mov
mov
adc
cmp
mov
jno
and
inc
push
pop
fsubs
js
movsl
cld
rorl
icebp
add
push
xchg
dec
aad
bound
lcall
xchg
dec
xchg
in
jg
fld1
or
sbb
dec
shll
mov
inc
aaa
jns
or
popf
push
addl
xor
stos
lea
mov
arpl
repnz
jb
movsl
iret
arpl
mov
pop
js
push
push
or
fiadds
cs
adc
xor
sub
and
arpl
jmp
pop
pusha
sub
test
cltd
jne
sbb
popf
adc
cli
clc
or
push
inc
mov
mov
test
std
cld
ss
mov
mov
icebp
jecxz
pop
pop
lret
mov
outsl
push
lea
sub
jg
imul
insl
fisttpl
dec
push
sub
xlat
lods
test
and
mov
inc
mov
jp
jle
sub
pop
mov
push
pushf
jmp
add
pop
mov
add
mov
mov
xchg
ret
push
fstpl
push
data16
mov
xchg
add
mov
neg
inc
icebp
pop
out
shrl
iret
adc
dec
or
lahf
aad
and
mov
iret
mov
mov
les
out
ss
push
pop
push
call
add
jns
je
inc
repz
mov
cli
jmp
fidivl
hlt
insl
insl
rcrl
sbb
daa
int
push
inc
adc
jle
in
jne
pop
adcb
in
add
aad
adc
negb
adc
fimull
jge
adc
or
cmpb
sub
sub
xchg
iret
imul
jb
sarl
cwtl
cmp
out
add
dec
std
clc
iret
icebp
jge
adc
repz
sbb
bound
outsb
pop
mov
es
adc
adc
fmul
nop
iret
push
inc
push
mov
xor
or
jbe
out
mov
fiadds
shll
lret
cmp
inc
and
mov
xlat
dec
jl
fmull
adc
aad
or
loope
push
popa
and
push
push
mov
xchg
xchg
xchg
and
or
inc
push
test
jno
andb
adc
mov
xchg
sub
cmp
adcb
dec
pop
mov
enter
fcompl
sbb
lds
jne
jg
jae
leave
jns
push
gs
in
lods
cmc
imul
fsubs
out
popf
dec
pop
mov
mov
add
aam
aaa
stos
sub
loop
mov
mov
push
sbbl
leave
test
fiaddl
sti
inc
aaa
cmc
dec
stc
or
shrl
jb
fs
push
mov
xor
mov
or
xchg
add
lea
xchg
mov
sub
fs
push
adc
mov
inc
xchg
push
cs
and
in
mov
jg
je
out
xor
xor
pop
sbb
daa
outsb
sub
pusha
mov
bound
xchg
popf
push
xchg
xchg
in
add
ds
sbbb
jne
jge
sub
cmp
inc
es
and
pop
jae
xlat
mov
inc
inc
mov
repz
imul
cmp
out
inc
sbb
xchg
rcr
or
sub
sbb
les
in
inc
or
mov
cmp
jle
int
mov
aam
jle
cmpsb
and
cmpb
mov
pop
stc
and
cmc
xchg
aam
lods
repnz
or
sbb
adc
xchg
mov
mov
ss
popf
adc
xor
push
add
les
addl
mov
sarl
mov
push
inc
rcll
adc
mov
outsl
jo
mov
jno
test
pop
scas
call
lcall
xchg
sbb
cmp
aas
sarb
rcll
push
jo
add
sub
adc
fyl2xp1
pop
ret
je
daa
bound
or
lret
or
xchg
fidivl
push
jo
outsb
mov
cmc
in
add
lods
ljmp
xchg
jo
ss
lea
and
push
cmp
arpl
inc
mov
inc
insb
dec
inc
dec
imul
aad
mov
dec
cli
add
cmp
std
or
fsubr
pop
imul
repnz
dec
jecxz
fists
jne
sbb
cli
dec
cwtl
ret
lcall
fldl
aas
pushf
xor
mov
sbb
inc
out
push
cmp
int3
and
inc
push
pop
pop
test
cmpsb
sar
movsl
inc
push
adc
jae
out
loope,pn
in
xchg
add
outsb
mov
loope
pop
aad
roll
mov
or
xchg
or
orl
and
fwait
out
jle
cmp
cmpsb
and
cmpb
add
or
inc
rcrb
and
add
jnp
fwait
je
cmc
bound
stos
xor
loop
mov
adc
cwtl
xchg
lea
mov
aad
jb,pt
cmp
dec
dec
in
xchg
call
filds
fidivl
add
shll
pop
jg
cmp
xor
jae
pop
xchg
sbb
ja
lcall
adcb
bound
mov
repz
test
imul
lea
icebp
ds
mov
pushf
scas
pop
pusha
fldl
nop
push
int
add
dec
sbb
int3
xchg
cmp
rdtsc
pop
sbb
in
cmp
jae
mov
or
adc
rcll
add
das
jnp
movsb
aad
push
mov
jecxz
inc
xor
mov
mov
jbe
push
stos
mov
iret
les
sbb
dec
lods
xor
pusha
add
or
push
add
in
xlat
jl
mov
push
push
or
fdivrp
stc
and
in
inc
pushf
mov
outsl
popf
xchg
movsl
jmp
pop
mov
pusha
outsb
jmp
jg
jbe
fs
or
dec
call
je
mov
xchg
psllw
call
push
ret
mov
sub
js
pop
into
jecxz
xchg
mov
pop
sbb
mov
jae
mov
roll
jge
and
add
insb
mov
mov
push
mov
lods
les
clc
sub
mov
insl
scas
add
cld
loop
push
ret
mov
sbb
dec
loop
bound
sahf
cli
fcomip
mov
jge
cli
lea
jae
sahf
push
bound
adc
xlat
jg
dec
fldt
pop
jecxz
in
loopne
hlt
into
outsl
popa
or
and
and
clc
scas
orl
xor
ss
in
push
mov
rclb
cmpsl
xchg
cmpsl
mov
sub
not
mov
adc
push
test
push
outsb
mov
aam
push
sbb
imul
in
mov
sbb
and
testb
xchg
and
pop
xor
sub
test
add
js
xor
dec
stos
add
pop
xchg
outsb
idivb
rol
lcall
push
sbb
jno
outsl
mov
dec
data16
sbb
mov
paddsw
xchg
mov
mov
cmp
dec
lea
lods
inc
std
pop
pop
mov
movsl
push
lcall
inc
cld
lret
ret
cmp
aam
test
popa
xchg
mov
sbb
test
sbb
cwtl
or
add
mov
mov
stc
repz
pusha
mov
bound
daa
mov
jmp
and
sbbl
insl
je
cmp
inc
push
les
cmpsb
repnz
lea
in
dec
xchg
jecxz
std
lcall
addr16
xchg
or
pushf
mov
mov
je
mov
shrl
roll
lds
xor
or
scas
loop
pop
insb
mov
push
inc
push
pop
sub
dec
incb
or
jnp,pt
int3
fcomi
mov
jb
fs
insl
test
insb
sbb
in
gs
push
adc
push
mov
mov
popf
cli
daa
inc
lret
mov
stos
xor
lods
lds
popa
jo
mov
push
inc
inc
sbb
jb
testl
mov
in
shlb
sbb
pop
xlat
dec
xchg
inc
add
cmpb
mov
xchg
pop
inc
add
roll
mov
outsl
aaa
dec
sub
sub
push
ficompl
shll
enter
xchg
cmp
mov
mov
frstor
ljmp
insw
ficompl
pop
lahf
lcall
ret
or
lea
jb
add
cmp
bound
adc
lods
sub
and
pop
and
xlat
shlb
into
cmpsb
rol
inc
cli
sar
test
mov
jbe
push
adc
or
jg
fs
sbb
test
scas
mov
lcall
adc
mov
pop
sub
and
iret
cmpsl
cmp
pop
mov
fsubrl
jb
das
je
mov
ret
rcrb
dec
xchg
jno
push
cmc
roll
inc
mov
stc
cs
add
aas
adc
mov
popa
stos
or
mov
xchg
pop
mov
push
mov
push
sub
and
pop
mov
fidivs
repz
sub
xlat
sub
int3
and
lds
jle
or
mov
add
mov
jb
gs
or
cld
lea
aas
or
mov
loopne
and
test
cmpsb
mov
shlb
into
das
xchg
ficomps
clc
fistpl
dec
call
lds
and
std
movsb
jge
pop
jno
jne
sbb
push
pop
popa
sti
sbb
xchg
lahf
xor
adc
mov
enter
xchg
cmp
mov
push
xor
shrb
fidivrl
jno
mov
push
xor
aam
addr16
mov
into
movsl
psubusw
repz
je
jmp
push
pop
in
lret
push
push
std
rorb
jle
xchg
jae
mov
jmp
add
sub
popa
mov
sahf
pop
ss
shrl
push
mov
pop
mov
push
mov
lret
iret
and
fsts
push
cmp
dec
mov
fldcw
pop
loop
shll
dec
sbb
lahf
inc
test
jg
adc
add
fnstsw
mov
pop
mov
das
pop
adc
std
and
ret
sti
fidivs
push
cmpsl
test
fidivs
enter
push
sub
das
div
and
daa
out
in
pop
arpl
in
push
cwtl
cltd
push
sbb
dec
or
int3
mov
xchg
mov
mov
ljmp
daa
ss
pop
adc
pop
ret
dec
lcall
cmp
sbb
adc
mov
test
jno
jno
sbb
add
shrl
incl
clc
mov
xor
sub
lds
and
lahf
lods
jae
fcomp
sbb
rorb
jp
daa
mov
lds
outsl
mov
out
nop
out
in
aam
fldenv
imul
adc
inc
sub
sarb
in
mov
ljmp
inc
mov
addb
jge
adc
inc
xor
jns
or
xor
lds
outsl
mov
rol
loopne
mov
sbb
data16
lds
icebp
imul
jmp
jge
fnstcw
call
fimuls
adc
mov
sahf
test
pop
movsl
das
sub
inc
add
les
divl
rcll
clc
sbb
xor
xchg
push
js
lcall
inc
or
addr16
or
aaa
xlat
nop
lahf
xchg
or
addl
test
adcl
iret
cmp
cmp
xchg
daa
int
fidivl
adc
dec
in
std
js
pop
test
nop
iret
mov
popf
sbb
int3
in
push
scas
repz
lea
nop
and
jmp
sub
mov
jp
mov
mov
mov
stos
push
test
cmp
mov
xchg
fwait
enter
adc
daa
push
mov
jle
mov
icebp
xchg
test
cli
repz
xchg
lods
dec
inc
movsb
and
lods
ret
fcompl
and
mov
xchg
mov
dec
push
sbb
push
repnz
adc
sbbl
push
cmp
mov
insl
or
pop
lahf
jmp
test
xor
inc
fdivrs
adc
push
jno
or
lods
iret
xor
inc
mov
popf
lds
insb
add
dec
shll
in
inc
inc
out
jge
mov
jne
outsl
adc
daa
mov
sub
mov
xor
movsl
int3
sub
mov
out
sbb
inc
lahf
xorl
decl
push
push
loop
add
ret
adc
imul
repz
push
repnz
push
xchg
arpl
adc
or
sbb
aam
and
lret
push
aam
xchg
mov
lret
pop
ret
outsl
sbb
cmp
pop
and
jns
or
es
inc
aas
add
jbe
adc
out
sti
adc
sub
mov
xchg
insb
push
add
jo
jl
cmpb
inc
insb
xor
stos
xor
or
sub
or
jp
pop
test
mov
mov
sub
jp
ret
std
popf
pop
je
push
cmc
mul
sti
outsl
or
dec
pop
add
mov
ss
cmp
sbbb
into
js
mov
jle
dec
out
xchg
lds
adc
or
cwtl
adc
fstpt
sub
inc
mov
dec
fs
pop
mov
cmc
ja
bound
xlat
in
aas
stc
pop
mov
rcll
inc
mov
mov
mov
pop
push
xor
or
mov
in
out
cmpsl
outsb
stos
out
pop
xchg
pop
jg
mov
jp
push
into
popa
mov
add
push
sbb
mov
je
aad
jecxz
ret
ret
sbb
xchg
loope
mov
dec
cs
xchg
loope
in
ja
push
repnz
xor
push
fdiv
shrl
mov
imul
xor
and
sbb
cmp
repz
lret
shl
xchg
imul
xchg
rorl
push
or
inc
mov
pusha
in
mov
cld
aaa
es
and
sub
dec
lock
imul
inc
loope
fistps
sub
push
cld
jle
aam
sub
sub
scas
sbb
dec
xchg
jo
cmpsb
cmp
lahf
mov
mov
icebp
adc
xchg
sti
jb
out
sub
mov
scas
or
push
or
clc
es
into
sbb
fidivl
jae
push
stc
data16
jbe
pop
lock
add
imul
movsl
xchg
loope
adc
add
xor
xchg
fwait
jns
inc
jno
xor
sbb
xlat
push
outsb
sub
out
fmull
lahf
fbld
mov
icebp
xchg
insl
fsubrs
hlt
test
pop
cwtl
push
xor
push
stos
pop
sbb
mov
test
outsl
xlat
ds
ds
xchg
sub
ret
out
outsl
xor
pushf
pop
lret
dec
adc
repnz
pop
or
push
and
jge
aaa
xchg
pop
add
push
movsb
test
xor
add
mov
mov
dec
inc
dec
outsb
imul
xor
std
push
sahf
js
scas
cmp
popl
cld
cld
in
dec
sub
cmp
pusha
or
jg
mov
shl
fcomps
pop
int
je
loope
in
ret
push
mov
and
movsl
ret
and
xor
jne
into
cli
dec
test
cmp
adc
dec
xchg
xchg
or
mov
imul
sbb
mov
sahf
xchg
cmpsl
je
sbb
cmp
clc
test
inc
test
arpl
pop
mov
cs
fcoms
lods
push
sbb
cli
pop
jle
stc
sbb
jle
orb
jle
movsl
out
push
push
std
dec
mov
pop
andb
loope
clc
mov
dec
mov
pushf
xchg
add
xchg
outsb
pop
inc
mov
push
cmp
pop
das
pop
lods
aad
int
popf
mov
push
js
inc
and
or
out
push
repnz
sbb
xchg
jae
jnp
jb
push
pop
ja
mov
fs
shlb
jae
je
inc
dec
cld
fdivl
sbb
cmc
jo
test
mov
xor
sub
shll
push
cmpsb
and
sub
xchg
push
imull
aaa
daa
dec
pop
je
imul
clc
ret
sbb
xchg
out
test
jo
inc
or
xlat
and
out
mov
in
push
xchg
lret
cld
push
xor
jae
pop
jecxz
dec
pop
xor
iret
mov
mov
dec
cmpsb
fwait
jl
add
cld
add
mov
mov
gs
jg
popf
inc
push
in
xchg
pop
inc
or
push
lods
in
jne
xor
adc
adc
pop
out
aas
mov
sbb
out
pop
lods
sub
and
xchg
int3
rcl
and
pop
nop
inc
add
rcl
les
test
cmp
dec
or
mov
insb
imul
xchg
jns
fcomp
push
icebp
out
cmp
sbb
add
adc
push
add
mov
adc
bound
iret
mov
stos
lods
lret
cmp
ror
repz
sub
jno
sahf
imul
inc
mov
imul
shl
sahf
cmp
dec
in
dec
fwait
jbe
test
testl
stos
mov
cmc
sarl
lods
fmul
mov
ds
rclb
mov
pop
jae
hlt
pop
dec
push
push
repz
and
out
inc
int3
mov
or
aad
arpl
or
dec
lcall
cmp
xchg
scas
xor
jnp
aaa
sarl
and
jp
push
pop
xchg
pop
lret
mov
push
add
and
jno
jle
cmc
fldcw
xchg
loope
jp
mov
add
and
in
sahf
data16
nop
cmp
ds
mov
inc
sub
lret
les
jnp
pop
sub
or
mov
inc
and
jle
mov
lret
inc
add
push
mov
sbb
je
pop
repz
cwtl
or
inc
push
or
ret
or
filds
leave
or
xchg
jmp
bound
pop
fistpl
sbb
jg
mov
mov
lea
mov
push
mov
jnp
popa
mov
pop
cmp
stos
pop
push
sahf
xor
daa
leave
cmp
sub
daa
mov
lret
shr
xlat
jnp
dec
out
out
nop
fwait
inc
add
stc
test
hlt
inc
or
and
push
add
pop
mov
xchg
hlt
xchg
test
mov
ss
fiaddl
push
and
fistpl
repz
dec
jbe
xlat
adc
in
je
cmp
jge
insl
imull
out
rcrb
pop
jle
repz
push
push
or
popa
flds
add
test
mov
lfs
mov
fs
out
mov
cmp
int
dec
inc
aad
clc
jns
jge
clc
notl
loop
ljmp
sbb
jne
arpl
sbbl
mov
pop
adc
push
inc
cmp
mov
jae
aam
lods
add
and
pop
inc
pop
cmpsl
cmpsb
or
xor
imul
in
xchg
ret
sbb
popf
sar
push
inc
jno
jmp
xchg
loop
stos
addr16
cwtl
cmp
xchg
and
fs
xchg
dec
sub
mov
xchg
adc
vmovapd
sub
jmp
insw
xchg
fsubl
push
sbb
lahf
mov
mov
mov
xchg
lock
jne
sub
mov
loop
sub
and
fnstenv
enter
jo
stc
in
jb
mov
es
lret
mov
outsl
test
lock
adc
fsubl
in
and
iret
adc
test
stc
cmpsb
sarb
pop
jno
jnp
dec
shrl
and
inc
xor
jns
popf
dec
hlt
sbb
cmp
mov
popa
push
aas
push
stos
add
je
mov
scas
in
xchg
clc
fsubrs
insl
pop
scas
adc
cmp
fisubrl
push
mov
dec
push
inc
imul
lods
xor
ret
loop
cmpsb
mov
pop
ret
and
pop
push
xor
mov
push
insb
addb
testb
loop
xor
testl
outsb
adc
andb
cld
lahf
mov
dec
adc
ret
int
mov
jns
aaa
stos
cld
jle
jo
cmpl
test
sub
bound
sbb
into
sbb
push
pop
fstl
or
lret
cmp
mov
js
cmp
dec
mov
test
mov
stos
in
push
repnz
mov
sbb
lds
mov
xchg
outsb
ss
inc
hlt
sub
cmc
addr16
test
cmpsl
cmpsb
or
or
jl
push
pusha
add
mov
cmc
jle
cli
scas
jne
mov
movsb
outsl
mov
adc
mov
adc
mov
mov
jb
pop
add
std
mov
movsl
loop
mov
pop
cmpsl
sbb
dec
xchg
dec
cld
push
int
mov
psrlw
mov
mov
rcl
mov
insb
ss
jae
stos
xchg
sub
adc
repnz
fs
dec
sbb
sbb
jo
xor
scas
js
sbb
es
ret
aas
push
inc
mov
mov
fwait
jne
fwait
cmpsb
and
mov
fadds
cmpb
inc
sbb
lea
sbb
mov
fmul
jmp
adc
ret
dec
pop
push
adc
or
inc
pop
repz
dec
ja
repz
push
mov
lods
outsb
mov
sbb
adc
or
add
ds
mov
sbb
adc
das
push
xchg
pop
mov
fisubrl
fsts
push
jle
jnp
lret
jo
mul
mov
mov
in
arpl
mov
xchg
push
fmuls
lds
adc
cmp
dec
stos
mov
mov
and
jp
cld
push
pop
or
loopne
addr16
popa
popa
inc
pop
in
movsl
mov
mov
push
xlat
ja
jnp
jle
pusha
mov
in
movsl
mov
inc
test
out
or
mov
push
add
test
inc
xchg
mov
ljmp
lods
push
scas
adcb
add
pop
xor
pop
jo
dec
mov
cmp
jp
jge
xor
jae
mov
sub
jmp
bound
or
dec
cmp
xchg
inc
fidivrs
mov
cmp
sub
lret
mov
shrb
rcll
leave
enter
scas
out
and
cmpl
and
xor
and
cmp
xor
call
sbb
add
lea
rclb
xor
dec
mov
jl
stc
sub
scas
scas
adc
mov
dec
out
push
push
fcompl
sub
lea
xlat
jbe
arpl
imul
lods
adc
cmpsb
and
pop
push
mov
cmp
fbstp
arpl
inc
jp
xor
sub
cs
hlt
jmp
fmuls
pop
jmp
dec
jb
sarl
jns
mov
outsb
push
je
mov
mov
subl
push
adc
fidivrl
mov
jno
enter
pop
sub
sub
dec
fbstp
jmp
leave
in
inc
sahf
mov
xchg
lret
lcall
push
push
push
scas
pop
and
jecxz
call
in
jg
sahf
cmp
outsb
mov
jg
cltd
rorl
ds
cmpsl
push
pop
mov
movsb
test
jge
loopew
sbb
repz
neg
dec
dec
xchg
iret
test
cmp
cwtl
jmp
xchg
ds
dec
out
xor
call
dec
lahf
iret
pop
nop
inc
ret
ss
jge
jno
mov
hlt
xlat
shl
or
pop
dec
les
test
inc
cltd
repnz
fisubl
push
xor
outsl
cmp
push
mov
cli
loopne
fistl
nop
pop
sbb
stc
or
add
push
out
or
add
data16
mov
mov
iret
test
aas
mov
aam
mov
aaa
cmpsb
sub
popf
fsubl
hlt
js
lret
push
outsb
inc
inc
adc
pop
cld
jle
jno
pop
cmc
jne
outsb
out
loop
jecxz
fucom
add
mov
cmc
nop
xchg
dec
sbb
xchg
insl
xchg
push
mov
jne
xor
test
lods
pop
dec
icebp
fisttpl
inc
push
jg
icebp
clc
mov
imull
iret
xchg
cltd
inc
sub
loope
cmc
mov
loop
fsubs
sub
aad
test
cmc
aaa
rorb
jne
xchg
mov
lods
stc
xorb
inc
repz
cmp
dec
push
xchg
cmp
movsb
sub
daa
inc
jns
hlt
sub
cmc
xor
xchg
movsb
ja
mov
add
fcoml
iret
cmpsl
fdivr
adc
je
mov
jle
andw
sbb
scas
push
mov
jnp
cmp
jns
mov
das
cmp
dec
int3
inc
ret
inc
dec
pop
xchg
mov
dec
test
or
mov
scas
lret
jg
movsl
jecxz
pop
test
sahf
adcl
sub
nop
dec
add
add
test
mov
cmpsl
popf
push
pop
fwait
and
sbb
lods
mov
xchg
lock
push
subl
mov
jp
jg
jnp
ret
mov
xchg
inc
sub
jle
out
je
fmull
sahf
in
adc
or
fisttpll
ljmp
mov
imul
arpl
pushf
cmp
outsl
int
cmpb
xchg
pop
mov
ja
in
shl
inc
and
sti
pop
dec
lods
mov
and
cli
jne
mov
js
lahf
aad
lahf
imul
cmp
sub
or
push
adc
pop
mov
fwait
cs
or
fnsave
mov
mov
aad
mov
add
and
int
mov
popa
mov
xchg
iret
xchg
call
addr16
add
adc
mov
push
inc
ds
dec
cmpb
dec
and
jo
cwtl
cmc
stos
adc
mov
pop
leave
orl
in
xchg
roll
shll
pop
xchg
sti
mov
jl
lods
lock
push
int
insb
xor
out
jbe
jle
add
popl
jge
push
cltd
or
push
inc
mov
les
lods
scas
jno
xor
cmpsb
add
push
adc
fbstp
fcmovne
mov
movsb
xchg
push
or
sahf
aam
icebp
ss
dec
xor
xor
jae
int3
cwtl
fldcw
xchg
sbb
jp
insl
or
sbb
sbb
jle
mov
mov
popa
sub
aaa
pop
cmp
mov
std
xor
xlat
test
into
and
int3
xchg
out
dec
pop
loopne
dec
dec
in
add
jno
push
push
pop
out
sbbb
mov
out
pop
adc
mov
jbe
ret
dec
or
stos
int
mov
pushl
pop
leave
add
push
cmpsl
sub
and
aam
mov
pop
insb
dec
push
xchg
into
lret
add
inc
push
js
cld
cld
jecxz
mov
out
and
bound
adc
xchg
jbe
adc
cltd
repz
out
orb
movsl
and
or
jp
xor
mov
aas
xor
mov
cmc
outsb
mov
cli
mov
stc
sub
dec
pop
orb
xlat
and
mov
test
xchg
lret
js
cmc
xchg
rclb
pop
mov
lea
mov
ds
aaa
xor
or
jg
push
and
mov
inc
fisubrl
mov
popf
xchg
sub
mov
and
fmull
xor
pusha
test
cltd
and
push
xchg
inc
fwait
or
test
ds
dec
xor
jo
lock
das
and
popa
push
mov
outsl
fsts
adc
mov
sbb
lods
pop
jb
sahf
lret
mov
push
add
hlt
jmp
mov
out
outsb
sbb
in
cmpsl
xchg
jns
or
cld
je
add
aad
add
mov
cmp
in
push
adc
add
mov
fucomp
cmpsb
push
mov
iret
and
xor
js
int
dec
jno
int
push
inc
loope
fildl
idiv
aad
jge
add
xchg
or
mov
adc
xchg
mov
mov
xchg
push
lea
rclb
mov
add
mov
outsl
push
xchg
jbe
cmpl
shrb
lods
imul
jne
push
push
add
adc
xchg
adc
mov
jp
push
dec
mov
popf
ret
cmpb
pop
shr
fildl
in
mov
pop
ret
gs
jp
mov
xchg
push
inc
insl
das
fldt
insb
pop
mov
sub
lret
cmpsl
pop
add
ret
cli
js
xor
jbe
mov
imul
jne
xchg
notb
aam
lds
pop
js
outsb
addr16
adc
jmp
mov
mov
hlt
jne
inc
imul
test
out
rcl
retw
in
sahf
adcl
test
loope
and
adc
inc
mov
pop
adc
out
pop
mov
push
push
in
xor
bound
pop
clc
cmp
iret
js
ja
movsb
addr16
cwtl
stc
sub
out
dec
ret
and
pop
sbb
cld
arpl
popf
jmp
jmp
cmp
and
jl
fistps
jecxz
lds
lea
and
cmp
and
and
mov
stos
xchg
inc
xchg
inc
fdivl
scas
cmp
pop
std
and
pushf
pop
nop
jae
lods
mov
or
les
lods
out
movups
sbb
push
inc
mov
cmpsb
imul
mov
mov
shll
cbtw
mov
jo
rcrl
add
sub
mov
dec
sub
cmpsl
imul
mov
out
lds
andl
add
loope
lods
cmp
pushf
paddq
mov
or
xor
mov
push
xchg
ret
insl
inc
xchg
and
xor
outsb
jl
shlb
je
sub
icebp
mov
aaa
out
cmp
shlb
decl
lods
cmp
jb
insl
jae
out
cmp
mov
push
inc
mov
sbb
or
out
das
cmp
sbb
push
mov
andl
sbb
lods
and
pshufw
in
dec
fs
mov
cli
rcr
loop
and
and
mov
dec
jle
lods
xor
and
arpl
and
cmp
mov
xchg
movsb
dec
push
xchg
jae
inc
scas
imul
mov
xchg
jmp
in
repnz
push
lret
add
mov
cmc
or
mov
std
out
data16
mov
push
mov
lcall
icebp
cmp
cmp
and
jecxz
dec
push
movsl
lcall
ljmp
in
jecxz
cli
stos
and
fstpt
pushf
imul
lods
mov
dec
mov
mov
rclb
jno
enter
pop
or
ret
mov
sub
push
inc
push
inc
xchg
mov
mov
mov
mov
xchg
push
jbe
mov
call
rorb
dec
fnstenv
jb
pushl
xlat
sbb
icebp
movsb
mov
das
pop
mov
sbb
sbb
or
inc
addb
andl
hlt
sub
add
mov
leave
leave
adc
cwtl
scas
add
dec
lods
inc
pop
cmp
and
lods
mov
fsts
fsts
scas
pusha
aad
stc
mov
bound
hlt
cli
jp
outsl
mov
and
xor
outsl
xchg
adc
ss
das
fisubrs
cmp
in
pop
or
cmpsl
jp
sahf
pop
rcl
lcall
std
daa
and
nop
lret
mov
nop
inc
lock
addl
pcmpeqw
xchg
das
add
insl
push
mov
pop
or
insb
pop
cmp
mov
cwtl
fdivrl
mov
rcl
in
pop
jne
push
and
mov
push
idiv
cwtl
clc
negl
sub
push
lods
adc
inc
mov
jo
std
out
roll
icebp
fmulp
adc
pop
xor
loop
notl
jae
lret
sbb
sub
andb
inc
jno
cltd
mov
out
xor
mov
aas
lcall
sbbb
pop
test
int
push
cltd
mov
rolb
jle
aas
push
lahf
addr16
mov
shlb
movsb
and
push
push
inc
rclb
add
add
mov
lock
add
and
inc
testl
scas
movsb
fnstcw
pop
adc
push
ja
adc
mov
push
xchg
xchg
insb
shll
imull
adc
das
add
cmp
cmp
in
fistl
lds
test
xchg
adc
xchg
jb
test
flds
sbb
xor
and
shrl
jne
add
insb
cmp
mov
ror
in
insb
rcl
movb
sbb
pop
mov
adc
fdivrl
sbb
sub
scas
leave
jmp
aad
mov
subl
cmp
mov
lods
adc
jnp
jb
insb
xor
xchg
in
mov
call
xor
adc
int
mov
inc
xchg
mov
sub
insb
int3
je
ja
push
test
xor
cs
ret
mov
cmp
or
sub
arpl
inc
fscale
aas
rorb
aam
int
aas
cmpsb
cltd
mov
rcrl
shl
or
in
jmp
jae
test
add
outsb
dec
idivl
and
dec
pushf
and
jbe
dec
cmp
xchg
popa
sti
pop
add
mov
mov
les
repnz
test
imul
loopne
xlat
daa
add
inc
jno
cmp
or
in
mov
test
dec
add
pop
pop
nop
sahf
cltd
pusha
jb
out
loopne
shlb
pop
xchg
fldt
xchg
sbb
aaa
out
fistpll
into
pop
jns
jno,pn
imul
fimull
in
and
jbe
fadds
dec
sbb
std
add
aaa
lahf
ja
sbb
dec
dec
mov
popa
in
jno
pop
in
fadd
outsl
loopne
js
enter
loope
pop
add
or
or
rcr
scas
push
call
xor
jge
fdivrs
mov
out
jecxz
std
notb
xor
mov
and
sbb
sub
xchg
inc
lahf
stc
push
ret
rcr
sub
xor
aam
cmpsl
rolb
jne
cmp
lds
das
or
xor
scas
pushf
aas
mov
into
popa
jne
decb
jecxz
dec
pop
cmc
sbb
xor
std
lret
push
popa
outsb
sub
mov
sub
lahf
call
mov
dec
incb
mov
or
in
pop
mov
jle
push
jno
and
lret
adc
inc
data16
mov
add
outsl
sub
lods
and
pop
xor
fmull
sbb
in
and
pop
das
sbb
jns
lods
loop
mov
aas
push
pop
lahf
adc
mov
cmp
fxch
cld
cltd
mov
lods
hlt
mov
lcall
inc
stos
cmp
loope
mov
mov
cmp
ret
and
mov
jle
mov
mov
or
adc
bound
aaa
outsb
test
scas
pop
out
ds
inc
cmp
xlat
mov
repnz
in
adc
cwtd
jae
xchg
mov
aam
jge
cmp
sbb
aas
jnp
adc
dec
inc
jmp
inc
add
outsb
push
push
mov
mov
int3
imul
mov
xchg
int
cli
lret
dec
and
adc
loope
jo
cltd
pop
jbe
pusha
fisubrl
and
adc
loop
cli
add
cmp
das
inc
jb,pt
popl
sbb
stc
xchg
xor
leave
push
and
pop
pop
call
in
sbb
or
mov
inc
xchg
mov
jp
mov
je
out
test
cmp
xchg
das
sbb
inc
es
xor
sub
cmovp
nop
rcl
mov
cltd
leave
xchg
in
lret
ljmp
loopne
inc
inc
in
push
inc
xchg
pop
mov
scas
adc
inc
adc
push
aas
fildl
adc
gs
int
or
shlb
call
aam
adc
in
jp
data16
sbb
pop
jne
nop
outsb
call
dec
adcl
mov
pop
or
and
ljmp
fisubl
add
fisubrl
shll
or
xor
push
clc
ret
inc
leave
ljmp
xor
leave
ret
paddsb
sbb
jp
cmp
jae
sub
dec
sahf
push
jno
iret
dec
inc
cmpsb
scas
movsb
or
pop
cltd
add
lods
adc
or
int3
test
bound
mov
jb
fnsave
mov
lods
es
pop
fs
or
test
mov
jno
fisttpll
addb
xchg
leave
push
mov
je
mov
test
or
cmpsl
sbb
cwtl
andl
scas
pop
sub
lods
movsl
daa
and
shll
lock
cld
push
ret
dec
sub
push
add
test
imul
loop
imul
adc
or
mov
or
ds
and
repz
dec
and
dec
adc
in
sub
rol
js
push
inc
push
ljmp
xorl
rclb
adc
test
add
mov
call
dec
imul
lea
cli
mov
mov
scas
xchg
pop
lds
mov
push
shll
mov
adc
push
inc
cltd
ret
sti
xchg
jl
xchg
je
in
jne
xchg
jmp
stos
loop
or
pop
cmpsl
lahf
shrb
jns
movsl
loope
mov
mov
mov
sub
pop
pop
xor
iret
fistpll
sub
jae
inc
sbb
add
lock
loop
pop
add
repz
je
repz
sbb
sub
test
push
cmpsl
push
pop
pop
fisttpl
test
leave
loopne
inc
imul
sub
sub
pop
and
mov
out
mov
ljmp
inc
add
lds
cmpb
jb
mov
cld
add
cmp
jne
mov
ret
fwait
push
rcrb
or
dec
cmp
lods
mov
test
jno
ds
stos
addr16
stos
fcoml
jg
scas
subb
lret
lea
pusha
sub
fwait
jle
adc
stos
cwtl
xchg
xor
push
in
shlb
sub
pop
jp
or
or
aad
jno
and
mov
shll
lods
outsl
pop
mov
sahf
mov
adc
popf
fs
push
mov
iret
stos
pop
inc
scas
leave
add
or
inc
std
in
xor
pop
fwait
ljmp
popf
add
test
add
add
fadd
imul
mov
xchg
xchg
xchg
inc
mov
xor
adcb
push
out
inc
fdivs
cld
mov
into
xor
fsubl
int
xchg
cmc
je
push
aam
mov
fsubl
ficomps
xorl
pop
sbb
jp
aad
loope
arpl
pushf
xor
mov
xor
sbb
mov
dec
fsubp
mov
sub
ja
jbe
pop
sbb
dec
lret
adc
mov
mov
jecxz
xchg
xchg
cmp
cmp
push
push
jnp
xchg
and
and
outsb
add
inc
loop
pop
in
adc
ljmp
dec
and
out
xor
sbb
cmc
insl
xchg
roll
jge
adcb
pushf
cmp
or
xchg
or
sti
fs
sub
int3
sub
cmp
cmp
and
movsl
push
xchg
pushf
mov
push
inc
xlat
push
and
add
nop
inc
test
cmpsl
scas
fbld
xlat
sarl
mov
dec
ja
inc
push
push
xchg
shld
xchg
cmp
add
cmp
mov
cmp
inc
pop
lods
je
aaa
scas
xchg
cmpsb
in
das
and
repz
orl
out
mov
nop
dec
decb
and
loopne
or
push
mov
cmp
shl
cltd
cltd
ret
lea
pop
xchg
and
or
xchg
rolb
movsb
and
jae
sub
mov
pop
sub
or
repz
hlt
leave
roll
into
fs
gs
xchg
cmpb
mov
xchg
out
aam
and
mov
dec
jnp
pop
fs
mov
fmuls
cmpsl
adc
stos
dec
jmp
outsb
out
insl
loop
loope
in
sbb
mov
loope
sbb
adcl
xor
sahf
mov
lea
lds
ficompl
pusha
hlt
xchg
in
pop
fldcw
mov
mov
in
popa
or
or
xchg
cmp
push
or
fisubrs
sbb
cmp
jl
jle
xchg
jl
dec
push
jbe
call
insl
sbb
aad
push
jl
mov
jne
test
cld
xor
jo
dec
xor
sbb
cld
in
frstpm(287
pop
xlat
adc
sub
fisttps
les
in
mov
sahf
mov
call
jae
arpl
push
fdivl
adc
xchg
inc
test
sub
mov
cmpl
out
and
jnp
scas
das
andb
jo
lret
dec
adc
inc
inc
dec
imul
mov
mov
sub
xchg
fisubs
lret
pop
out
outsl
pop
mov
stc
jne
mov
iret
test
inc
mov
jns
xlat
xchg
jbe
stos
aad
xor
jne
std
scas
lret
sahf
es
repz
pop
push
in
mov
leave
fwait
push
mov
test
push
add
push
popa
cmpsl
mov
mov
pushf
pop
out
xchg
sbb
sub
mov
js
aam
jb
jmp
scas
cmp
mov
push
aaa
insb
insb
dec
mov
ficompl
lahf
sbb
push
cmpsb
or
pop
sub
lock
or
add
jp
stos
stos
jl
cli
je
mov
ja
out
sbbb
xchg
mov
sbb
mov
xor
int3
jnp
jmp
pushf
std
cmc
lret
gs
push
sbb
dec
and
add
push
idivb
fwait
mov
sbb
repz
call
xchg
sub
fadds
fistps
push
xor
call
cwtl
rorb
imul
lcall
mov
or
or
jnp
out
or
cltd
sub
pop
in
sub
or
add
cmp
xor
fiaddl
icebp
jg
int3
lock
in
pusha
popa
fidivl
inc
or
stc
movsb
int
push
or
stos
out
js
sbb
cmp
mov
or
mov
clc
lods
and
sbb
nop
test
clc
mov
imulb
sub
jp
pop
hlt
push
out
movsb
push
jo
ficoml
repz
jo
push
pop
inc
loope
jge
jnp
mov
hlt
pop
popa
lret
jnp
inc
lcall
lock
imul
in
shl
test
in
pop
sbb
and
popa
pop
scas
rorl
add
mov
xchg
mov
add
inc
cltd
out
dec
add
cmp
sbb
adc
fmull
mov
xchg
cmpsb
jle
push
repz
ja
jnp
pop
mov
mov
ja
ds
in
push
nop
mov
xchg
add
daa
js
adc
or
sub
aaa
lds
or
das
ljmp
rcrl
shr
push
out
pop
or
mov
mov
sub
pop
xor
test
daa
icebp
cmpsl
adc
sbb
push
dec
movsb
mov
sarb
decb
repz
aaa
hlt
push
pop
scas
mov
insl
push
movsl
sbb
pop
push
fcompl
adc
out
es
loop,pn
mov
sti
cmp
mov
xchg
test
mov
mov
daa
jmp
mov
pop
sbb
dec
push
pop
mov
sbb
mov
fstpt
inc
data16
test
fldcw
jmp
or
sub
mov
xchg
add
mov
mov
fsubs
sub
popa
loope
xlat
push
pushf
rcr
pop
out
adc
cmpsb
push
jbe
lret
lret
cld
xchg
inc
shlb
lret
ss
pop
call
xchg
icebp
pop
add
xor
aad
fcmove
or
xor
inc
das
inc
jp
or
xchg
mov
mov
scas
call
je
pop
hlt
lcall
fisttpl
out
js
lahf
pop
pop
or
and
mov
jge
pop
jmp
mov
lea
aaa
rcr
sub
imul
daa
xchg
add
mov
lock
cld
jb
icebp
inc
dec
xchg
es
arpl
inc
mov
push
lods
jecxz
xlat
clc
mov
pusha
add
sahf
push
lds
aas
sbb
in
mov
in
test
adc
mov
rcr
pop
push
rcl
leave
xlat
inc
dec
enter
imul
xor
xor
or
pop
cmp
and
outsl
loop
lret
adc
sti
mov
jae
loop
dec
gs
add
jns
cmpl
mov
pop
mov
push
pop
push
ret
mov
stc
lret
inc
repnz
divl
call
pop
sub
test
hlt
and
hlt
es
sub
adc
jbe
mov
sub
dec
ss
xchg
mov
adc
jb
sub
sub
das
loope
cmp
adc
pop
mov
or
ds
jp
cmpsl
loopne
jb
or
mov
jbe
mov
out
pusha
into
aas
lahf
push
movhps
iret
ret
in
into
rcrb
sub
mov
test
lds
mov
inc
push
ja
lret
push
shlb
or
xlat
gs
mov
in
mov
add
sbb
gs
xor
push
sub
test
orl
fstl
ror
mov
data16
jp
and
pop
jne
push
arpl
lret
dec
cltd
jp
xchg
testl
mov
mov
mov
movsb
cmp
popf
mov
push
fdivl
push
pop
loop
pop
sahf
push
or
dec
xchg
mov
aad
jns
outsl
int3
inc
mov
jecxz
js
pop
sbb
sub
dec
xchg
loope
xchg
pop
ret
mov
inc
addl
push
mov
out
scas
or
movsb
sub
push
push
dec
sahf
push
jns
add
jmp
fidivrs
test
dec
lods
in
xor
imul
xchg
sti
fimuls
add
sbb
jae
mov
repz
scas
shl
outsb
dec
xchg
ds
sahf
enter
jmp
leave
xor
jb
inc
insb
dec
pop
sti
mov
mov
leave
cmc
pop
test
inc
jp
iret
pop
pop
lret
mov
jns
mov
dec
scas
out
out
call
inc
fcoms
cmp
xchg
xchg
or
cmp
and
xlat
jbe
scas
enter
leave
dec
inc
loopne
cli
es
add
fisttpll
je
rcrb
fs
or
out
aad
push
fnstcw
inc
xlat
mov
dec
sub
subb
in
in
mov
xchg
pop
cwtl
inc
or
cmp
cmp
std
sub
stos
ss
movsb
les
sub
mov
cltd
push
notb
rcr
xor
roll
xlat
es
xor
xor
lock
outsl
or
loopne
adcl
mov
push
pop
add
mov
mov
mov
mov
inc
jb,pn
inc
pushf
cmpsb
push
divl
pop
bound
push
lcall
add
push
clc
xorb
lock
mov
inc
fsub
sub
repz
and
push
adc
or
lea
dec
xor
mov
pop
pop
int
jb
dec
fs
dec
cmp
bound
sub
jae
insb
aam
jmp
mov
add
ja
cmp
add
out
sub
ss
sbb
adc
mov
mov
mov
sub
dec
xor
push
loop
push
pusha
bound
cwtl
sbb
jne
nop
xchg
xchg
or
or
test
and
cs
test
rolb
fidivs
fcoms
xor
ror
xchg
leave
xchg
enter
push
shl
mov
push
mov
sub
add
mov
pop
nop
mov
ss
sub
subb
lahf
sti
mov
fnstenv
dec
ljmp
jg
test
sbb
enter
xchg
rcrb
orb
shld
call
loopne
inc
mov
cli
cmpsb
adc
addr16
pop
or
pop
xor
add
dec
mov
mov
daa
cmp
aam
mov
fxam
icebp
add
rcll
or
add
es
and
cmp
and
xchg
mov
fildl
stos
sbb
inc
and
into
insl
sbb
pop
add
mov
push
cmp
imul
inc
sub
pop
dec
jne
pop
stc
or
push
cmp
out
mov
lcall
xchg
stc
cmpsl
cmp
or
pop
stos
movb
loope
mov
inc
dec
test
jbe
loopne
or
fs
add
rcl
cmp
or
es
jge
pop
mov
adc
sub
dec
fsubs
add
push
adc
aaa
xchg
jno
xor
imul
imul
mov
ss
sahf
std
push
add
orl
mov
aas
mov
imul
add
push
repnz
aam
mov
cmp
idivb
outsl
pop
repnz
and
jmp
popa
xor
pop
cltd
cmp
pop
aad
roll
test
mov
inc
mov
inc
xor
test
fwait
negl
movsl
lods
icebp
sbb
in
cmpsb
dec
push
sahf
inc
cmp
push
jnp
push
xor
push
xchg
jbe
arpl
out
pop
sub
jecxz
out
push
inc
xchg
test
or
dec
jle
fdivs
cmp
jo
scas
out
out
jle
lds
pop
push
lahf
outsl
icebp
adc
push
ret
scas
mov
inc
ja
xchg
add
jl
mov
in
sub
loop
addr16
mov
and
aam
cmp
lea
xor
cld
test
mov
cmc
sbb
arpl
stc
ret
cmpsb
adc
sub
mov
push
dec
out
mov
je
push
or
ffreep
clc
xchg
js
sbb
cmp
test
mov
cmpsl
sub
pop
movsb
cltd
int3
cmp
push
pop
clc
dec
pop
or
cmpsb
mov
bound
add
cmc
bound
jne
adc
xor
out
insb
mov
pop
add
mov
mov
cmp
lret
cld
mov
loopne
lcall
mov
sbb
rcrl
or
pop
stc
shlb
sub
fs
divl
jecxz
imul
dec
jle
add
inc
pop
iret
repz
stos
mov
mov
jo
mov
lods
stos
fwait
fs
push
mov
lret
cmp
sbb
aam
int
mov
lea
fidivrs
and
mov
jmp
fisubl
dec
or
mov
sub
pushl
push
cmp
in
sarl
lods
ss
xor
inc
ljmp
push
addr16
inc
dec
xchg
shll
or
mov
dec
jg
cmpsb
mov
div
decb
mov
daa
test
adc
inc
sub
movsl
xchg
in
dec
imul
xor
sbb
daa
ficoml
sub
push
dec
negb
rcll
lds
lret
dec
inc
and
lods
fists
in
aaa
jnp
outsb
repz
nop
aam
outsl
adc
sub
fwait
sub
push
je
sbb
rcrb
add
or
test
test
fdivl
pop
into
lret
iret
pop
jnp
stc
jecxz
jl
fists
xchg
sbb
jecxz
dec
inc
cltd
daa
add
xchg
sub
jbe
ja
dec
mov
pushf
add
insb
addr16
mov
stos
jmp
shrl
jecxz
pop
mov
lsl
dec
lcall
scas
mov
icebp
sub
or
repz
and
fistpll
mov
inc
data16
push
dec
mov
xchg
and
or
add
ret
test
cmp
mov
push
out
dec
cmp
pop
loop
cmp
dec
lahf
mov
mov
and
pop
jno
mov
adc
test
out
and
mov
cltd
js
loopne
and
cmp
mov
scas
and
jnp
sub
lods
outsb
mov
sbb
push
fistpll
nop
ret
std
comiss
mov
gs
pop
in
sub
sub
int
fxch
shlb
pop
stos
sbb
incb
int
dec
bound
xor
xor
lahf
loope
lds
inc
cli
lahf
or
mov
shlb
sub
roll
mov
pop
icebp
push
mov
roll
out
les
jne
dec
insb
xchg
cmc
mov
xchg
adc
lcall
add
stos
arpl
sub
xor
pop
adc
sbb
outsb
repnz
fsubrs
enter
das
sbb
test
dec
jg
aaa
jmp
xor
movsl
xchg
imul
fcompl
dec
ds
std
movsb
lock
std
push
in
clc
cmpsl
mov
dec
xchg
jnp
int3
cmp
xor
adc
dec
sub
hlt
scas
subb
add
xchg
fisttpll
lahf
xor
jbe
xor
mov
int3
and
pop
cmp
loope
jb
sub
scas
push
xchg
and
lret
and
rclb
enter
mov
andb
fs
mov
adc
jnp
mov
xchg
dec
sbb
mov
xchg
add
push
and
scas
incb
sub
jne
out
leave
fsubrs
and
add
jle
dec
shlb
aad
jo
xlat
outsl
std
outsb
inc
arpl
loope
add
pusha
push
jbe
call
hlt
or
das
out
popf
jnp
add
and
mov
or
stos
mov
cmpsl
stos
mov
mov
push
fimuls
push
pop
call
ret
int3
lods
and
inc
mov
lock
aad
testl
loope
inc
fwait
cwtl
les
xchg
or
add
aaa
out
mov
out
fstpl
push
sbb
ret
jp
pop
repz
pop
imul
loopne
lret
cwtl
mov
mov
mov
ja
cmpsb
call
fbld
xchg
lcall
jb
xchg
jmp
mov
add
mov
or
lods
sub
mov
push
pop
aam
fisttpll
enter
push
jnp
xor
xchg
hlt
lock
sub
in
outsb
aas
es
sbb
sub
cwtl
movsb
adc
or
inc
dec
cli
add
mov
sbb
or
movsl
pop
mov
fisubrs
rcl
and
push
fmull
push
or
int
jp
jnp
jle
imul
jecxz
cmc
cwtl
sub
insb
arpl
sbb
xchg
scas
push
or
mov
fmull
push
addb
xor
jge
push
test
push
sbb
or
fstl
leave
cs
mov
ret
jnp
test
dec
js
lds
ljmp
mov
or
push
sbbb
subb
add
mov
mov
inc
mov
std
cmc
mov
loop
lcall
add
inc
mov
sti
test
xchg
pop
js
aam
insb
dec
jno
lds
gs
sahf
ljmp
pop
mov
push
add
add
mov
push
mov
int3
jne
inc
test
push
lret
dec
filds
nop
les
jb
int
xor
es
push
mov
dec
call
jge
mov
pop
or
push
mov
dec
xor
scas
mov
mov
mov
pop
ja
xlat
test
dec
insb
dec
les
cmc
faddp
insl
xchg
jns
xlat
jb
mov
or
call
lds
cmp
test
xchg
fsubrp
xchg
push
das
or
loopne
inc
and
cld
sbb
push
xor
mov
scas
mov
and
test
stc
fdivs
mov
and
push
mov
inc
fdivr
jg
jb
shll
or
in
in
popf
filds
add
xor
es
sbb
test
cmp
cltd
xor
cld
xchg
stos
jne
sub
and
fimuls
push
mov
int
outsl
inc
mov
call
fdiv
dec
popf
jne
shrl
mov
hlt
into
out
sbbl
adc
cld
or
xorb
mov
mov
fsubrl
dec
adc
aad
jg
fidivl
in
push
push
gs
aam
aas
leave
mov
dec
add
mov
cld
test
jo
lahf
out
push
shl
into
xchg
addr16
leave
cwtl
decl
in
cmp
xor
xchg
hlt
add
in
mov
and
sub
sub
and
push
fimull
ffreep
dec
push
jle
push
testl
jb
pushf
aaa
jnp
imul
sub
cmp
mov
outsb
sub
jecxz
shl
pop
pop
cwtl
ror
popf
dec
or
rcr
mov
mov
in
mov
in
mov
insl
xor
lcall
pop
mov
rcl
int3
dec
dec
add
ds
div
jns
aaa
jb
jmp
popf
sub
adc
popa
cmp
in
push
push
sub
xchg
mov
or
or
stc
mov
divb
out
stos
mov
out
scas
sbb
and
fdivrs
push
stos
or
iret
iret
fadds
rclb
leave
cmp
std
repnz
xor
jbe
imul
insb
jcxz
pushf
daa
sbb
sahf
lea
adc
push
mov
mov
xchg
cmp
shl
jns
scas
imul
mov
out
lahf
pop
fstl
mov
add
shrb
lds
jb
jg
enter
je
stc
sub
insl
sbb
es
lcallw
xchg
xchg
or
add
mov
pop
mov
cmp
shl
sub
xor
jle
pop
mulb
outsl
fcmovnbe
out
enter
adc
inc
or
pushl
jo
cmp
jmp
hlt
addr16
in
sbb
adc
mov
pop
adc
pop
push
add
or
add
cmp
lods
and
and
sub
shlb
and
outsb
rol
out
sti
lahf
enter
jo
shll
outsb
mov
out
negl
in
adc
or
in
js
xor
add
push
cmp
mov
subb
inc
sub
mov
mov
pop
sub
aam
arpl
lret
movsb
dec
pop
mov
jo
cld
jmp
jne
inc
out
xchg
add
vmread
cmp
mov
push
sub
push
addr16
pop
add
push
mov
xchg
aaa
push
lods
cltd
ffreep
daa
xchg
cmp
or
fcompl
ret
into
and
ret
fisubl
push
sbb
pop
std
inc
adc
clc
dec
imul
jmp
sbb
xchg
mov
test
or
lea
cmp
aas
rcr
mov
and
dec
and
add
cmp
rcll
xor
jne
add
mov
les
jns
fwait
jb
pop
not
nop
jmp
push
insb
ret
mov
dec
in
sahf
jp
xchg
popa
mov
xchg
mov
push
push
mov
xor
pop
fs
and
daa
ret
fdivrs
mov
loope
iret
cltd
ja
push
test
mov
mov
xor
imul
movsl
xlat
loope
mov
lret
inc
adcb
or
repnz
xchg
sub
loopne
xchg
frstor
sub
cmpsl
movsb
dec
fcomps
pop
aad
push
inc
fistpll
dec
js
dec
lock
imul
push
in
jo
and
pmulhw
xchg
cmp
addr16
sbb
xchg
push
orb
add
jb
jo
cmp
imul
sub
mov
xchg
pop
mov
push
sub
xlat
and
dec
dec
fld
or
repz
outsl
jne
and
cltd
fs
pop
mov
push
sbb
mov
aaa
dec
mov
fnstsw
ret
jp
ss
sub
lods
loopne
mov
fcompl
nop
roll
dec
mov
dec
das
push
movsb
sti
sti
pop
aas
jg
lock
mov
cli
imul
data16
sbb
lahf
sbb
xchg
mov
add
mov
mov
push
hlt
stos
int
lods
inc
in
and
mov
jecxz
rcrl
dec
mov
int
int3
mov
jnp
sub
jbe
jo
pop
mov
aad
loopne
lods
in
pushw
jae
xchg
jmp
xchg
or
or
xchg
or
lea
mov
scas
mov
and
and
test
push
insl
fcmovne
mov
repnz
xchg
into
jecxz
ret
cwtl
mov
jns
cmp
mov
scas
mov
daa
jmp
fsubrl
movsl
pop
lds
or
ljmp
mov
nop
inc
mov
test
mov
mov
cmpsl
cs
fsubs
push
aam
lret
iret
lds
ljmp
add
les
cmp
cmp
mov
sahf
scas
adc
jecxz
fbld
mov
int3
pop
push
inc
adc
std
push
mov
inc
xor
clc
mov
icebp
pop
mov
shrl
dec
rclb
test
bnd
div
add
insb
sbb
mov
mov
mov
mov
add
fdivrl
aad
inc
push
sub
ret
pop
mov
cmp
adc
rorb
dec
mov
shrl
cli
cmpsb
pushf
jg
shlb
xchg
hlt
dec
leave
jmp
pop
addr16
mov
sbb
or
cmp
sub
cmp
aam
xlat
or
and
ds
repz
lcall
sub
add
jp
and
test
imul
out
rcrl
add
je
push
mov
pcmpgtw
adcl
test
xor
stos
test
lods
mov
and
inc
rol
cmp
jg
dec
hlt
ss
insb
push
in
sti
popf
arpl
and
sbbb
xchg
bound
dec
addr16
pop
ret
sbb
pop
jle
inc
mov
cld
ja
jne
cmp
insb
aas
sbb
or
sub
cmpsb
mov
fldt
iret
pop
mov
aad
cmp
dec
std
inc
ss
jl
clc
hlt
das
std
insl
jecxz
in
imul
adcl
cmp
mov
adc
inc
pop
mov
lea
add
icebp
cmp
mov
mov
fsubs
shll
push
imul
test
dec
and
inc
frndint
les
stc
into
cmc
jge
sub
loop
ja
in
in
sbb
pop
gs
nop
push
adc
xchg
cmp
mov
lea
jp
mov
aas
shll
sub
negl
outsl
pop
fsub
push
pop
pushf
adc
adc
iret
cmp
mov
inc
sub
mov
jbe
sub
insb
in
inc
and
gs
sahf
out
xchg
adc
adc
mov
mov
rol
cmp
fisubrs
inc
jg
sub
jae
and
jl
rcrl
pop
insb
lcall
sbb
mov
sti
push
nop
sbb
cmpl
xchg
jecxz
mov
insb
jb
test
cwtl
popf
fcomps
xchg
xchg
dec
mov
fisttps
cld
mov
jno
ret
inc
int
std
mov
icebp
lcall
in
jmp
mov
xor
xchg
hlt
sbb
mov
cmpsl
ds
add
mov
testl
mov
hlt
lods
dec
data16
int3
insl
push
push
fists
enter
outsl
lahf
push
adc
adc
clc
sti
fdivrl
cld
add
push
out
sbb
arpl
cltd
xor
mov
and
inc
adc
mov
jne
sub
stos
cld
mov
mov
fbstp
jns
fcompl
aam
mov
repz
jecxz
and
sub
jmp
testb
mov
inc
cmp
mov
sbb
in
mov
sub
nop
daa
mov
ja
enter
test
mov
pusha
mov
sub
mov
and
push
sbbl
ficomps
add
dec
dec
into
adc
inc
stc
mov
mov
jbe
call
cmp
xchg
mov
jno
arpl
xchg
push
adc
add
dec
mov
mov
push
xchg
or
scas
das
in
and
fildll
dec
fcomps
jg
jbe
pop
arpl
inc
jmp
sarb
pushl
std
or
cmpsb
ja
xchg
loope
jp
les
in
xchg
sub
add
adc
ret
test
add
mov
or
dec
inc
push
xor
in
js,pn
jge
jge
out
imul
ljmp
dec
push
inc
cwtl
inc
hlt
push
jp
cmp
sub
std
fs
mov
jno
mov
add
cmp
cmpsb
and
push
fcomps
adcb
repz
add
jmp
test
xor
fldt
shrb
sub
sbb
push
xlat
sub
js
pop
sub
sub
jnp
xor
stc
icebp
movsl
add
imul
out
lcall
pop
test
mov
outsb
insb
mov
xchg
cmp
push
jnp
cld
ljmp
xlat
das
out
mov
sbb
fmulp
inc
add
lret
inc
movsb
cmp
in
bound
xchg
mov
mov
rclb
cld
out
out
idiv
and
jmp
add
sbb
sbb
xchg
push
pop
test
push
ror
inc
xor
arpl
out
fcomip
ss
lods
outsl
mov
or
jg
arpl
or
mov
xor
and
flds
sti
jp
lods
repnz
lock
mov
aam
call
rolb
jmp
bndldx
mov
jp
mov
xor
xor
into
and
ds
sub
mov
inc
lret
sbb
inc
xchg
mov
popf
cld
es
jb
lock
dec
mov
arpl
cwtl
push
xchg
dec
adc
inc
xchg
test
idivb
cmp
sbb
mov
push
fnstcw
ja
dec
push
ss
dec
insl
xchg
xchg
push
pop
or
cmp
fucomi
adc
push
orl
pushf
jno
jg
stos
xchg
lea
push
sbb
test
mov
outsb
fisttpl
into
dec
dec
push
sbb
and
xchg
hlt
insb
bound
inc
jne
shrl
and
or
out
popf
je
sbb
repz
sti
outsb
jmp
inc
leave
cmp
mov
mov
mov
orb
fdivrs
enter
jnp
and
test
and
inc
push
out
cmpsl
inc
lods
rorb
lret
xor
rcrl
or
cmp
fmull
push
push
pop
in
sub
jg
mov
mov
lods
sub
fwait
mov
add
xor
add
mov
inc
subb
shll
test
pop
mov
cld
aam
dec
in
dec
push
fisubrl
sbbl
inc
lods
inc
loopw
jp
pop
dec
adc
push
outsl
push
insb
mov
fwait
sbb
stos
lea
push
mov
or
sub
dec
dec
test
xor
sarl
add
lret
mov
fst
ja
shll
inc
sub
std
addr16
imul
insl
lock
fwait
push
imul
sbb
jl
mov
mov
xor
add
mov
es
cmc
mov
and
lods
fbstp
inc
icebp
insb
mov
xor
cmp
into
lret
je
or
jae
push
jg
stos
sar
xchg
adc
sbb
subl
add
fdivs
or
xchg
fstl
inc
or
push
xor
mov
xor
mov
xchg
xorl
mov
sbb
mov
rorl
mov
lds
adc
add
add
repz
mov
cmp
adc
lcall
sub
cwtl
adc
jg
sbb
push
mov
bound
add
mov
sub
inc
jecxz
je
shrb
rol
and
fnstsw
fstps
rcrl
pop
inc
jmp
out
imul
lret
mov
gs
cltd
jnp
xchg
enter
test
mov
mov
and
add
subl
loopne
in
pop
push
mov
enter
jle
in
cli
xor
cmpsb
aam
mov
sbb
add
out
sub
popf
or
daa
push
and
fnstcw
sbb
pop
xor
inc
jge
test
mov
add
sub
lret
dec
pop
mov
das
test
xchg
adc
icebp
mov
dec
test
ds
clc
call
out
mov
push
bound
cmp
fisttpl
and
addr16
in
insb
fldt
add
adc
and
dec
aaa
dec
xchg
leave
inc
sar
or
inc
inc
inc
jp
cmc
pop
and
ret
out
insb
sub
stc
mov
sbb
mov
cmpsl
pop
lret
xchg
loope
mov
jg
into
mov
fidivl
int
push
shlb
popf
inc
iret
push
dec
out
lret
jge
dec
ja
ret
inc
scas
aaa
mov
popl
and
sarb
jl
dec
push
adc
mov
add
bound
jo
mov
pushl
inc
push
push
std
and
lcall
pusha
test
lods
mov
div
inc
nop
ljmp
lods
mov
popf
inc
insb
jecxz
out
xor
testl
shrl
ss
cmp
push
sub
pop
xor
add
daa
mov
sub
fildll
test
sbb
dec
jmp
iret
insl
pusha
cli
repz
mov
cltd
xchg
mov
or
in
loopne
sbb
push
mov
or
mov
mov
sub
outsl
andl
xor
unpckhps
dec
fisttpll
sub
jecxz
and
mov
cmp
mov
pop
adc
hlt
add
sbb
stos
lcall
xor
mov
test
mov
sbb
xchg
testb
mov
push
cmpsb
mov
shlb
inc
xchg
hlt
fidivs
fidivs
das
stos
inc
dec
lcall
pushf
sbb
push
inc
or
pop
dec
lock
lret
icebp
icebp
jp
mov
xchg
addl
fs
mov
popa
imul
mov
xorl
adcb
es
lcall
dec
adc
dec
dec
cli
xchg
pop
xor
out
or
mov
out
or
xchg
es
xor
push
mov
mov
mov
xchg
mov
ljmp
xlat
lods
fwait
cmp
mov
ror
fists
inc
js
inc
xbegin
insb
nop
xchg
jb
testl
mov
inc
sub
cli
adc
nop
mov
pop
jle
leave
mov
dec
mov
push
xlat
xor
jl
inc
shll
cmp
jnp
push
fs
ljmp
icebp
jbe
xchg
mov
nop
push
icebp
addr16
enter
mov
aaa
cld
cmpsb
mov
mov
or
pop
push
xor
ret
mov
pop
pop
mov
or
fisubs
in
push
and
jg
inc
rorb
pop
shlb
inc
push
lock
vaddsubps
lds
mov
outsl
cwtl
jl
sbb
xchg
lods
or
xchg
cmpsb
dec
mov
test
mov
mov
xchg
frstor
jne
dec
and
pop
movsl
mov
inc
cwtl
cld
dec
dec
xchg
call
sarb
xchg
divl
ret
repnz
push
push
in
scas
sub
cmp
or
adc
rol
movl
cwtl
lods
lds
mov
mov
dec
and
mov
fs
into
neg
inc
cmp
cmp
xor
jmp
mov
out
cltd
mov
enter
mov
test
inc
xchg
jb
mov
aaa
shrb
fstps
rcll
fnstenv
xchg
push
dec
jecxz
incb
mov
pop
cli
mov
push
int3
je
mov
lret
adc
pusha
insb
mov
popa
sbb
dec
and
push
fs
sub
ds
hlt
lods
dec
movsl
outsb
xor
xor
and
cltd
fldl
int
and
rcrb
add
hlt
mov
inc
loop
jne
xchg
ja
adc
or
dec
out
mov
imul
ss
ficomps
ja
jp
mov
cmp
in
xchg
mov
imul
fs
adc
add
test
mov
add
sub
mov
daa
cs
scas
mov
inc
fcmovnbe
add
cmp
sarl
jbe
dec
jns
inc
icebp
sar
test
jp
or
jmp
loope
cmp
adc
xchg
sbb
lods
cmp
or
mov
sub
sub
cmp
fisubrs
xor
dec
lods
fdecstp
jnp
mov
jno
js
mov
inc
repnz
mov
notb
fstps
movsl
mov
mov
mov
lret
mov
sub
outsl
sarb
sub
add
lea
dec
shll
mov
adc
sub
xchg
bound
iret
ror
insb
in
insb
insb
in
inc
bnd
adc
mov
mov
popf
mov
push
aas
push
xchg
mov
pop
insl
xor
jns
inc
movsl
push
mov
scas
lret
addl
int3
int
into
pop
ret
xor
add
jbe
je
push
push
mov
xchg
and
push
clc
push
mov
xor
das
pop
lret
cmp
adc
mov
adc
dec
sub
xchg
cmpsb
sarl
pop
outsb
mov
rcrb
stos
lret
and
stos
mov
inc
insl
imul
movb
loopne
scas
sahf
dec
jecxz
into
leave
ret
das
mov
add
or
add
mov
dec
mov
pop
pop
or
or
add
push
or
inc
jp
xor
jp
cld
sahf
inc
jo
js
and
adc
push
loop
imul
nop
dec
push
fildll
add
sbb
or
ss
sbb
xchg
lret
and
iret
xor
sarb
pop
push
sbb
pop
enter
sarl
shlb
int
inc
repz
lret
movsl
imul
sub
imul
xchg
or
adc
or
imul
mov
jg
mov
push
jecxz
push
ret
inc
push
js
divl
xchg
cld
lcall
add
push
gs
dec
lret
mov
push
dec
scas
fmuls
add
pop
or
mov
xorl
das
iret
xor
rcl
std
fidivrs
enter
push
in
dec
and
loope
jmp
jle
pop
repnz
fadds
je
insb
cli
or
loope
mov
jecxz
inc
lcall
jecxz
sbb
cwtl
inc
push
mov
movsl
pop
test
fcompl
pop
add
jmp
lods
push
inc
add
fistpl
popa
outsb
ficoml
push
pusha
divb
cmc
dec
lds
sbb
pop
jg
in
sbb
xchg
stc
mov
addl
sbb
popa
data16
xchg
cwtl
jge
cmpsl
xchg
ficoml
add
mov
mov
sarl
xor
data16
mov
xlat
cwtl
sti
push
pusha
out
pop
xchg
fdivrl
adc
inc
xor
scas
ljmp
adc
inc
out
mov
dec
cmpb
pop
movsl
xchg
add
in
popf
inc
dec
loope
xchg
cmp
mov
sub
fcmovnbe
popf
in
in
test
lret
inc
add
test
pop
leave
dec
xor
ds
adc
push
jge
jne
ljmp
mov
inc
jg
pushf
adcb
add
cmp
mov
cs
mov
and
pop
xor
jmp
dec
je
xor
pop
dec
sbb
js
jle
into
jne
clc
adc
push
jo
repnz
outsb
movsb
xchg
pop
mov
xchg
out
loop
push
lods
sbb
adc
lret
xlat
int3
mov
sahf
push
xor
dec
push
fs
lods
ljmp
rcrb
rcr
fstp
sub
cmp
pop
ja
int
jae
daa
rorb
push
in
and
in
mov
in
popa
rcrb
sbb
lock
sub
xchg
lock
gs
push
adc
xchg
xor
scas
add
aas
xor
pop
cmp
mov
test
nop
inc
lret
xchg
dec
clc
push
icebp
imul
cmpsl
pop
sbb
loopne
xchg
pop
xor
daa
data16
jmp
ret
push
js
sahf
xchg
or
nop
or
xchg
cmp
bound
cmpb
addr16
stos
sbb
sub
nop
neg
pop
pop
fisubs
rclb
inc
jmp
cmp
leave
mov
stc
inc
push
pop
xchg
insb
stc
dec
mov
jmp
xlat
packsswb
gs
test
cmpsl
in
adc
dec
repz
cmp
jmp
es
jbe
pop
inc
sub
push
inc
push
inc
outsl
enter
sarb
stos
jo
dec
jle
jge
ds
xor
mov
mov
dec
xor
mov
scas
mov
add
stos
xor
daa
dec
sarl
icebp
loopne
inc
stos
pop
stc
rcr
push
int
xchg
mov
movsb
lret
mov
lock
jmp
iret
inc
adc
jbe
mov
nop
aas
lret
loope
push
mov
daa
clc
pop
mov
xchg
movsb
xchg
xor
add
mov
mov
dec
imul
in
sub
jle
jne
mov
aaa
mov
aam
pop
cmp
xchg
je
dec
lcall
dec
sbb
or
roll
arpl
imul
adc
mov
aaa
outsl
insb
mov
lcall
rolb
cmp
cli
and
and
push
iret
fcoms
inc
adc
inc
xchg
mov
popf
inc
and
lahf
insl
imul
insl
jmp
add
addr16
cmp
pop
pop
add
xchg
or
xor
pop
mov
push
loope
das
or
cli
lock
ficompl
fists
int
sub
adc
mov
inc
fisttps
ja
or
popf
mov
pop
sahf
rclb
jno
popa
lahf
sti
jns
mov
lret
test
jno
daa
push
dec
and
bnd
movsb
maskmovq
notl
enter
push
sub
into
daa
mov
pop
jns
inc
sti
pushl
imul
out
jmp
xor
outsb
gs
je
mov
sbb
cmp
mov
and
lea
jnp
int3
dec
inc
sub
mov
pop
adc
cmpsb
das
lock
pop
mov
push
inc
dec
lds
push
push
adc
inc
add
repz
push
sub
cmpsl
push
jle
addr16
inc
loopne
jecxz
and
subb
leave
pop
xchg
mov
add
mov
mov
test
mov
xor
xor
and
pop
rcr
das
fldl
push
popf
lret
ret
sbb
aam
pop
das
dec
test
hlt
hlt
or
xchg
sahf
mov
insl
push
push
xorl
addl
outsl
lock
aas
mov
cmp
out
fsubr
push
lods
xchg
mov
lds
sarb
cmp
out
mov
es
dec
cmc
or
rcrl
insb
mov
inc
into
gs
lods
xchg
adc
shl
dec
in
fdiv
jl
je
cmp
sbb
movsb
enter
pusha
fwait
mov
mov
cmp
push
ds
cmp
mov
mov
xchg
mov
dec
cltd
push
shlb
in
and
out
mov
lret
sbb
push
out
and
cmc
jo
ret
shr
jno
out
xlat
jle
jae
jbe
mov
jge
bound
jmp
cwtl
push
cltd
sub
repz
lods
test
dec
jbe
sub
cmp
iret
cmpsb
inc
rcll
mov
test
jne
mov
add
les
adc
lahf
stc
cmp
push
add
xlat
mov
cmp
insb
fsubs
xchg
fstpt
ljmp
mov
xor
add
xchg
outsb
insb
mov
fwait
aaa
and
lock
mov
pop
lock
movsb
std
add
std
ret
pusha
jle
xorb
cmpsb
lds
lock
outsl
sbb
xchg
clc
adc
in
aad
xchg
aam
or
mov
aaa
sbb
dec
xchg
jbe
add
icebp
xor
sub
ret
pop
mov
pop
jne
lcall
and
fcomi
lock
adc
jnp
pushl
hlt
out
lahf
sub
arpl
mov
mov
or
cmp
in
lea
mov
push
mov
push
mov
fs
daa
mov
jae
or
jbe
arpl
sub
nop
sub
mov
pushf
dec
arpl
ret
aad
aam
adc
adc
mov
subb
xchg
add
test
mov
cs
and
out
cs
cmp
jmp
jne
lea
enter
js
jnp
push
out
outsb
idivb
xor
fs
hlt
jmp
arpl
pusha
push
pop
mov
cmp
push
add
sbb
or
cmpb
test
sbb
mov
ja
sub
mov
mov
push
pop
push
js
push
sarb
push
lret
adc
insb
jbe
mov
jmp
mov
popf
mov
mov
adc
xchg
fucom
mov
iret
jnp
js
ret
imul
push
js
mov
xchg
xchg
mov
outsb
and
cmpsl
and
ficomps
ret
fnstsw
dec
enter
inc
add
jnp
loope
jb
leave
rcrl
dec
add
pusha
movsl
fs
lahf
sbb
xchg
xchg
mov
loop
mov
inc
cmp
dec
push
xor
insb
sub
jmp
leave
sbb
pop
dec
sbb
inc
sbb
adc
clc
sub
adc
out
adc
daa
pusha
mov
mov
push
cwtl
sahf
in
inc
cwtl
hlt
dec
imul
jne
je
insl
ja
jecxz
add
stos
adc
pop
xor
pushf
push
loop
ret
push
pop
ret
lret
cli
add
in
xchg
aaa
sub
lods
js
sahf
xchg
push
fs
clc
inc
add
xchg
cmp
nop
rcll
stos
and
mov
out
push
xchg
cmp
ds
adc
daa
jo
das
push
es
mov
pop
icebp
in
adc
movsl
jo
ret
inc
in
cmp
cmpsb
insb
pop
fs
loope
sbb
pop
add
dec
mov
mov
scas
pushf
xor
sub
ret
test
cli
ljmp
xor
or
push
jbe
xorl
dec
adc
inc
cltd
out
dec
mov
push
and
jns
inc
loopne
repnz
cmc
pop
aaa
fwait
aad
pusha
stos
jnp
outsb
sbb
xchg
nop
pop
frstor
adcl
mov
std
mov
gs
pusha
pop
sbb
lcall
cmc
jge
push
repz
inc
xor
pop
int
and
sbb
cwtl
inc
popa
jl
push
vsubsd
jg
repz
dec
je
lock
outsb
loope
popa
lcall
lea
loopne
mov
add
nop
scas
inc
adc
mov
fnstcw
xchg
in
pop
pop
repnz
pop
pop
mov
add
add
cmp
cld
xchg
push
mov
fcmovu
shl
xchg
dec
ret
jno
jp
push
push
testl
xlat
sbb
mov
or
add
mov
and
aas
scas
sub
fstpt
lret
pop
test
inc
push
movsl
ret
cwtl
jmp
jb
bound
out
mov
out
mov
pop
xchg
pop
ds
push
neg
ret
sbb
mov
cmp
cli
stos
push
xchg
sub
mov
xor
int3
ret
enter
push
push
mov
fbld
enter
int
pop
jp
dec
fidivs
xor
fdivs
fs
or
inc
stos
enter
jo
mov
sbb
pushl
push
adc
mov
xchg
mov
out
dec
xlat
leave
icebp
and
sub
lock
aaa
and
stc
iret
out
in
sahf
xchg
xchg
xchg
sar
mov
inc
add
dec
lods
push
jge
push
shll
cmp
lret
inc
jnp
inc
cmp
cltd
mov
popf
pop
xchg
cmpb
fs
jae
mov
stos
outsl
push
sub
mov
stos
es
mull
sahf
push
gs
push
iret
xchg
xchg
push
jnp
xor
add
faddl
repz
arpl
enter
add
in
cpuid
dec
inc
mov
xchg
loope
or
imul
mov
std
cmp
cwtl
js
call
xor
hlt
xchg
imul
pop
or
lods
add
js
nop
movsb
xchg
adc
add
cmp
mov
push
repnz
flds
cmp
les
divl
in
out
and
cmpsl
es
jle
jmp
push
cmc
mov
mov
adc
dec
cmpl
jl
cmp
xchg
jp
xchg
mov
pop
push
xor
shr
and
fbld
push
xchg
jmp
xchg
jl
add
fidivl
pop
loope
popa
pop
add
xchg
or
test
lret
call
and
mov
dec
mov
sub
fbld
xor
mov
fidivrl
loopne
insl
jno
cmp
sub
pop
test
or
mov
mov
add
xchg
loop
mov
fmull
adc
cs
cs
mov
shll
mov
mov
mov
push
pop
push
mov
jb
ret
rcrl
outsl
mov
cltd
adc
or
or
jmp
fsubrl
fistpl
popa
fildll
bound
xor
adc
push
push
push
lea
inc
lcall
lds
jge
je
pop
les
jp
fbstp
sarl
xor
dec
fwait
dec
repz
adc
xchg
setge
inc
push
out
xchg
cltd
dec
mov
fs
and
mov
leave
and
dec
push
insl
iret
pop
inc
mov
push
dec
ret
test
icebp
mov
je
repz
and
xchg
push
adc
mov
fists
out
xchg
pop
or
loop
adc
pop
xchg
adc
jns
fdivrs
and
jno
imul
fnstsw
lods
dec
cmp
cmpsl
dec
ror
push
testb
insb
pop
dec
sub
gs
inc
mov
out
into
loope
jae
pop
fsin
sbb
sbb
ljmp
inc
mov
mov
xchg
int
lods
sub
pop
push
or
xlat
add
mov
inc
cs
cld
sub
inc
call
faddp
in
sarl
xor
sarl
mov
rol
cld
into
adc
adc
adc
call
or
test
stos
mov
aaa
sbb
mov
mov
and
cmpsl
test
dec
inc
popf
dec
inc
xchg
jp
mov
sub
jae
xor
bound
mov
in
imul
mov
lahf
stc
pushf
or
adc
adcl
incb
dec
fdivrs
cmp
sub
adc
ficompl
push
jae
jecxz
std
sarl
xchg
dec
xor
dec
jnp
add
mov
cmpl
mov
and
out
in
pushf
jle
xor
mov
mov
pop
or
push
dec
inc
mov
add
mov
mov
mov
and
lahf
xor
mulb
fadd
rcrb
push
mov
jg
mov
outsb
mov
mov
jge
testl
xchg
ja
add
test
xor
mov
xchg
das
mov
icebp
stos
inc
push
pop
je
push
leave
mull
add
xor
mov
call
int
rcrb
xor
jg
sbb
insb
mov
data16
out
popa
pop
and
cwtl
mov
inc
adc
push
push
ret
add
ret
xor
xor
leave
or
mov
movsb
jmp
cs
pop
hlt
into
fdivrl
xchg
rcl
into
dec
mov
adc
add
repnz
jl
cmp
cmp
in
nop
mov
lods
iret
jns
es
sbb
fsubs
es
push
mov
xor
push
xchg
loope
push
fbstp
lods
jl
sub
fiaddl
neg
shrb
add
out
lret
xchg
pop
push
lcall
adc
push
xchg
divl
xor
sub
inc
into
sbb
cmc
or
add
dec
pop
jp
add
sub
ficoms
push
sub
js
push
jg
sub
mov
add
dec
mov
dec
and
in
in
xchg
sbb
in
icebp
jo
ljmp
loop
lcall
lahf
add
loop
adcb
pop
mov
inc
xlat
push
scas
out
sub
mov
enter
arpl
dec
cmc
fsubl
push
adc
aad
std
outsb
ret
jno
jns
jl
ja
dec
out
jne
loop
mov
xchg
xchg
icebp
loope
fists
add
or
push
iret
jns
push
xchg
cwtl
add
mov
mov
je
shrl
jge
shrl
call
xor
inc
pop
shr
jnp
dec
adc
repnz
jmp
lds
mov
xchg
jo
mov
in
dec
add
data16
into
jae
mov
adc
out
fs
sti
lret
aad
pop
into
ja
sub
sub
movsl
int3
scas
cmp
dec
cmp
scas
popa
inc
in
gs
ret
addr16
jno
cwtl
cmp
and
lods
je
or
cli
in
xor
adc
or
call
pop
inc
or
or
sub
mov
test
and
aaa
jae
push
out
add
bound
dec
xor
and
cli
ljmp
pushl
sbb
push
outsb
jecxz
push
xchg
xor
xchg
sahf
cltd
sbb
push
arpl
or
add
jbe
and
pop
mov
cs
int
add
fidivrl
fcompl
pop
cli
inc
sahf
dec
mov
jno
dec
push
push
push
jle
es
inc
dec
cmc
std
hlt
sbb
leave
sti
outsl
pop
popa
int
sbb
into
stos
sbb
ss
or
addb
cli
pop
mov
lea
dec
add
and
and
pop
shll
mov
popf
lret
jb
dec
or
inc
gs
repz
popf
stc
jns
pop
icebp
sbb
hlt
lahf
inc
call
loopne
sbb
mov
adc
xchg
add
mov
add
pop
jno
fdivrs
mov
aaa
icebp
xor
scas
push
mov
call
add
pop
les
insb
sbb
pop
jnp
mov
jns
pop
jne
cmpsl
imul
xchg
in
xor
lcall
mov
add
cltd
sub
dec
xor
pop
mov
cmp
mov
dec
popf
fsub
push
mov
xlat
cwtl
xlat
and
inc
icebp
xchg
push
jmp
repz
hlt
imul
icebp
adc
in
sbb
push
adc
shrl
add
test
mov
inc
sub
mov
mov
leave
out
int3
inc
call
fildl
addr16
fcoms
xor
repz
out
outsb
in
imul
out
push
jb
data16
popf
cwtl
es
dec
insb
test
xchg
push
sub
mov
mov
mov
add
int3
sub
inc
popa
cmp
mov
push
cmpsb
neg
pop
jmp
aad
pusha
dec
lea
cs
jnp
mov
pslld
jne
adc
out
xchg
insb
adc
mov
sbb
push
xchg
mov
movaps
aam
imul
xchg
out
mov
sti
cmpb
out
cld
mov
daa
arpl
inc
int
add
incl
pop
or
xchg
out
jecxz
xchg
inc
sub
sbb
in
test
cmpsb
cmpsl
fidivrs
or
fdivs
push
add
test
pop
cmp
stos
jecxz
stos
fwait
inc
cs
les
insb
fsubr
push
ss
push
dec
xchg
and
in
movsb
call
stc
dec
mov
sbb
hlt
adc
sub
adc
lcall
jb
cmp
mov
push
mov
movsl
scas
and
cs
mov
push
das
and
hlt
pop
dec
imul
fs
sbb
adc
pop
vpxor
jle
mov
xor
dec
jmp
sbb
data16
outsl
jne
mov
dec
xchg
jle
push
dec
dec
add
cmpsl
std
mov
mov
fiaddl
mov
enter
adc
push
lods
mov
leave
outsb
pop
inc
cltd
inc
jle
in
enter
jno
ja
int3
call
lea
test
repnz
inc
add
mov
pusha
or
fiaddl
pop
jg
cmc
mov
mov
jns
sub
pop
dec
lods
adc
jbe
mov
call
stos
push
nop
js
lret
loop
int
ret
fdivs
outsb
adc
mov
sbb
mov
cmpxchg
andl
and
sbb
add
cmp
pop
ss
outsl
sub
sub
push
movsl
aam
xor
fcomps
rol
cli
push
push
dec
xor
in
lods
stos
xor
jp
mov
jl
jae
jbe
outsl
dec
pushf
shrl
aam
popa
inc
jb
fimuls
mov
mov
lea
xor
sbb
jae
push
mov
pop
mov
sub
mov
in
fadd
xchg
rcl
rolb
dec
push
inc
jns
scas
cmp
fwait
bound
cld
cwtl
stos
div
push
inc
popf
mov
aaa
loop
fsub
loop
mov
xchg
mov
add
or
ss
jle
xchg
ds
xchg
xor
lock
sbb
mov
fimuls
pop
stc
shll
push
and
andb
cmc
testl
xchg
jbe
cltd
and
xor
or
cmp
pop
pusha
scas
push
test
xchg
icebp
adcb
sahf
lea
xchg
aas
leave
mov
dec
jle
daa
pop
mov
mov
int
pop
inc
xor
xlat
xchg
into
lock
jbe
jp
call
stos
jge
ret
cltd
jmp
leave
sub
das
arpl
ret
cs
adc
test
mov
out
xchg
sub
add
sbb
inc
xchg
xor
fidivrl
fldenv
cmpsl
push
mov
icebp
sub
imull
lea
out
sti
pop
inc
dec
and
mov
in
enter
pop
jno
dec
out
lret
popf
xor
xchg
push
dec
loope
lcall
inc
or
hlt
xchg
daa
out
mov
mov
or
push
push
psubsw
pop
xor
ss
jnp
into
les
std
fdivs
pop
loopne
rcrl
push
lock
icebp
mov
cltd
lds
fistl
lds
lcall
dec
or
jecxz
sbb
mov
mov
mov
test
xor
pop
xchg
aas
into
pop
mov
and
lret
aam
shll
cld
or
lock
movsb
lds
jne
int
xchg
or
popf
adc
mov
xchg
add
std
mov
mov
aaa
mov
mov
cmp
xor
pop
les
inc
jae
jl
rclb
leave
xchg
icebp
aaa
inc
imul
push
mov
adc
sbb
xchg
pop
loope
aas
cwtl
jmp
or
sub
sub
and
sarl
sub
pop
les
pop
pop
ret
inc
shrl
cli
jl
leave
jno
jecxz
cwtl
cmc
cmp
or
out
jae
out
fwait
outsl
addr16
add
cld
sbb
test
xchg
push
lret
insl
pop
push
in
mov
sbb
clc
xchg
cli
dec
mov
jae
scas
pop
in
test
paddw
leave
popf
pop
imul
inc
dec
icebp
pushf
inc
out
jp,pn
jle
lock
sbb
mov
fs
addr16
test
pop
xchg
cli
aas
add
addl
sbb
mov
pop
popa
sub
xorl
in
pop
pop
fisubs
push
in
mov
imul
enter
icebp
lahf
xorl
jl
inc
repz
xchg
xlat
arpl
daa
cltd
lahf
mov
mov
lods
rclb
add
lods
sbb
mov
adc
and
push
shll
pop
inc
or
sbb
xlat
ljmp
sbb
ror
jbe
xchg
paddsw
mov
mov
mov
xchg
cmp
popa
popa
jecxz
mov
xchg
adc
push
cmp
stos
jecxz
mov
mov
inc
mov
int
insb
push
fbld
dec
js
xchg
insl
pop
sar
out
sub
jns
enter
push
or
mov
pop
xor
jecxz,pn
xor
sbb
out
or
xor
mov
das
addb
sub
cmp
movsb
and
pop
fucomp
test
and
movsb
sbb
rolb
push
push
jge
dec
jo
lods
or
xchg
pusha
push
popa
loope
jmp
sbb
fs
mov
sbb
dec
cmp
xchg
lods
mov
cmpsb
pop
mov
sbb
sub
pop
add
pop
xlat
jmp
dec
xchg
push
arpl
inc
add
jg
mov
or
mov
jno
adc
mov
repz
gs
cmp
cmp
loop
mov
adc
mov
pop
mov
subl
btc
add
xor
sarl
iret
mov
iret
adc
inc
add
push
adc
jns
jp
mov
jle
in
add
pusha
data16
andl
ds
femms
sbb
lea
xchg
cmpsb
mov
test
xor
push
mov
mov
shrl
dec
xchg
mov
inc
sti
rcrl
sub
test
int
jno
stc
jne
jbe
push
outsl
data16
mov
into
jmp
mov
pop
sbb
adc
out
mov
scas
xacquire
or
lret
test
pop
mov
mov
scas
mov
jae
sbbl
std
pop
mov
into
push
idivl
lret
fwait
push
xchg
add
jg
arpl
hlt
popa
fwait
sbb
ja
and
pop
sbb
lods
mov
or
adc
aam
add
mov
lea
cmc
sub
fisubrl
insl
mov
inc
cmpsl
repnz
aam
cli
popf
sahf
jns
ret
inc
mov
inc
out
frstor
fs
push
aam
pop
mov
mov
test
aaa
nop
test
mov
xchg
cmp
test
inc
sub
fdivp
and
ret
fst
es
popf
int
scas
cltd
movsl
dec
decl
out
mov
jge
dec
ret
sbb
jge
pusha
popa
outsl
insb
cmc
sbb
out
jmp
mov
stos
loop
arpl
push
pushf
rolb
cmp
or
xor
adc
and
sub
in
push
fs
fstps
inc
iret
push
dec
imul
std
xchg
ret
dec
icebp
daa
inc
lock
push
jmp
loop
gs
sahf
test
stc
mov
cmp
push
popf
rcr
mov
test
lea
mov
imul
add
xlat
xor
sub
shlb
ljmp
addb
push
cwtl
jne
jae
les
and
jbe
in
lds
gs
in
lahf
lea
mov
jmp
or
lahf
push
or
mov
mov
hlt
push
sti
and
hlt
mov
pop
or
fistps
pop
inc
testl
dec
push
rorb
jmp
dec
std
jne
jns
imul
out
repnz
imul
cltd
in
aas
xor
out
push
stos
xchg
cmpsl
lea
jb
aam
mov
mov
nop
mov
mov
test
scas
fldenv
enter
mov
inc
xchg
jge
aam
dec
adc
int
or
outsb
ss
xchg
decl
fwait
jne
adc
adc
jae
add
add
mov
shrl
repz
mov
or
sbbb
scas
and
xchg
ljmp
jae
outsl
jb
xor
push
shl
dec
int
mov
push
adc
outsl
xor
cld
push
decl
aam
lahf
adc
mov
adc
xor
add
push
add
mov
mov
dec
mov
pusha
aaa
xor
fsubrl
mov
inc
add
stc
fimull
ret
sub
pop
scas
jo
add
imul
sbb
lea
jno
mov
add
movsl
add
pop
scas
mov
and
cmpsb
out
fiaddl
leave
andl
or
push
lret
mov
je
pusha
ret
in
xchg
jns
in
ficomps
sbb
loopne
push
gs
push
mov
pusha
or
push
add
mov
in
das
jns
dec
in
sarb
and
xor
sub
and
pop
sub
pop
xchg
add
add
cmp
adc
enter
inc
jge
jae
jecxz
clc
loope
rcrb
mov
int3
mov
loop
popa
ljmp
mov
bound
rorl
mov
test
and
push
xor
ret
lods
out
mov
pop
loop
pop
faddl
pop
dec
icebp
and
out
in
outsl
clc
les
cmp
jno
jb
icebp
in
xchg
fldl
sahf
scas
call
push
stos
cltd
sub
popa
mov
cs
test
mov
stos
mov
es
rcrb
push
push
in
movsl
fs
adc
rorb
lret
ds
dec
mov
shlb
push
cmp
jae
sub
repz
clc
push
sub
stos
xchg
lods
push
stos
xchg
cmp
das
insb
aaa
pusha
or
cmp
jo
mov
xor
and
out
dec
and
scas
repz
mov
int3
addl
pop
aad
ror
cli
rorl
negb
inc
mov
gs
aas
push
stc
cli
push
jmp
xorl
xchg
dec
or
cmp
adc
add
dec
lret
lods
or
lea
fiaddl
lahf
xor
mov
mov
outsb
pop
test
movsb
add
jae
jp
mov
push
xchg
jp
push
adcb
dec
dec
js
dec
es
add
out
cld
mov
dec
sub
dec
repz
sbb
sbb
mov
lds
daa
pop
testl
add
test
stos
or
ret
ljmp
xchg
inc
push
push
inc
jne
enter
call
and
jb
jae
popf
and
cmp
in
add
sub
sbb
les
xchg
or
test
xorl
roll
cmp
gs
inc
test
or
push
cmpsb
es
and
push
subb
in
dec
insl
out
inc
pop
icebp
add
in
jnp
pop
data16
cmc
es
dec
movsb
pop
inc
or
or
lcall
sbb
xchg
mov
btc
addl
xchg
fistpll
stos
mov
push
scas
and
and
rolb
jns
dec
adc
xor
shll
scas
clc
push
arpl
bnd
out
imul
xchg
incb
sbb
sbb
adc
insl
mov
les
scas
mov
mov
lret
lods
push
sub
pop
ss
and
inc
pop
push
mov
push
sub
dec
lret
or
int
jnp
aas
bound
and
data16
out
insb
fiadds
fwait
dec
test
adc
cmp
orl
pop
xor
std
rclb
mov
xor
aad
stos
daa
lahf
ss
push
lods
int
fdivr
cmp
rcl
lret
fmull
fdivr
mov
add
clc
or
sarl
jmp
add
gs
out
lahf
mov
sbb
or
movsb
in
sti
and
ret
cmp
ss
sub
xor
mov
ret
dec
les
jno
int
xchg
inc
jge
fs
pop
inc
jecxz
and
adcb
stos
jbe
ds
sbb
popl
mov
lahf
stos
add
cmpsb
or
pop
pop
dec
fmull
push
dec
and
sub
inc
mov
and
jg
xchg
rcrl
fimuls
cmc
mov
bound
data16
mov
fdivrl
pop
ret
shll
stos
or
outsl
lods
sbb
jo
mov
dec
xor
int
and
mov
push
icebp
nop
jge
in
mov
das
jge
jmp
adc
lods
xchg
lds
jle
xchg
pusha
xor
cmpl
data16
mov
xor
and
std
pushf
pop
orl
int
dec
dec
mov
mov
movsl
ja
and
cmc
inc
cmpsl
rcrl
jb
lcall
aas
inc
out
mov
popf
jg
xchg
repz
or
por
outsb
bound
xor
push
mov
and
or
push
add
cmp
cmp
add
add
mov
test
bound
std
pop
pop
jno
mov
dec
or
sbb
lock
pop
xchg
out
pop
add
sub
add
and
loopne
mov
mov
sbb
daa
inc
mov
mov
xor
negb
sarb
inc
and
mov
pop
js
xor
movsb
ljmp
and
mov
push
imul
popf
ds
lock
addl
mov
scas
cs
in
imul
pop
mov
cmp
push
aam
dec
mov
movsl
or
mov
testl
stos
sub
in
lret
fwait
loope
cvtps2pd
push
sbb
jge
lcall
adc
fs
sbb
push
sub
jmp
or
fiaddl
shll
addr16
xor
enter
sub
shrl
sub
push
test
shlb
push
lods
insb
lret
sub
cltd
add
jne
lds
adc
sub
insl
out
xchg
sbb
jb
xchg
loope
mov
dec
cmpsb
add
pop
push
mov
cmp
int3
mov
inc
mov
lds
xor
push
mov
jg
inc
mov
popa
jge
cmpsl
popa
inc
jo
fwait
cmc
push
sbb
adc
or
cmc
je
popf
rorl
in
and
mov
iret
or
int
jle
lea
sbb
adc
or
lods
jo
push
cmp
xor
push
pop
int3
stos
push
dec
fmul
lret
jns
int3
adc
dec
jl
push
dec
decb
ja
mov
adc
in
xchg
imul
mov
stos
mov
imul
pop
xchg
mov
push
lret
mov
mov
cs
cs
dec
push
mov
icebp
imul
in
sbb
pop
mov
mov
jge
push
add
ds
mov
lods
sahf
lahf
mov
xchg
or
and
push
aad
push
dec
xchg
mov
sarl
lods
dec
iret
sub
mov
sti
xchg
ja
imul
shlb
shrl
ror
push
loopne
lcall
addb
mov
adc
test
and
nop
adc
push
cli
push
cmp
mov
int
sarb
mov
lock
cld
push
in
fstpt
push
js
data16
pop
dec
les
xor
sbb
jbe
dec
mov
or
lods
out
mov
mov
cmp
sub
sub
scas
mov
cmp
lret
mov
dec
int3
inc
inc
dec
das
inc
cli
jp
stos
sti
mov
in
and
ljmp
addr16
popa
pushf
les
adc
in
pop
stos
lds
jb
xor
mov
jmp
xchg
in
sub
test
xchg
mov
or
rorb
xlat
dec
aaa
or
ret
ss
push
inc
mov
dec
stos
repnz
and
jns
pop
enter
bound
push
cmc
jb
fwait
xchg
ret
hlt
add
jnp
xchg
mov
adc
mov
loop
push
jecxz
inc
cltd
and
add
xchg
add
roll
xor
test
mov
inc
or
icebp
scas
sub
aam
les
in
push
out
jno
xchg
dec
lahf
dec
imul
jae
lahf
jp
mov
arpl
jae
cmp
call
mov
cmpsb
add
sub
test
push
rcl
pop
push
dec
cmp
ret
mov
xchg
mov
das
ret
and
std
mov
jno
loopne
sti
pop
shrl
push
dec
faddp
xchg
lahf
ljmp
add
jne
addl
sub
mov
aad
mov
rorl
enter
mov
nop
scas
sti
jb
pop
mov
and
imul
inc
enter
cwtl
in
sahf
pushf
nop
popf
jbe
inc
bound
inc
mov
push
arpl
jge
mov
bound
sbb
mov
mov
pop
cmp
and
and
addr16
dec
push
rol
push
pop
sub
repz
add
lret
out
pop
in
adc
or
xchg
inc
xchg
adc
ret
inc
mov
jno
lret
pop
mov
add
cmp
daa
in
push
gs
xor
ss
pop
and
or
int3
push
add
push
dec
mov
cmpb
mov
and
adc
sbbb
rcrb
call
sub
mov
xchg
icebp
cmp
orl
in
fwait
test
imul
das
jnp
add
fldcw
pop
icebp
lret
mov
shr
and
loop
pop
in
adc
dec
inc
sahf
loop
out
popf
cltd
or
lds
xchg
jmp
and
icebp
pushl
insb
mov
arpl
out
scas
and
iret
pop
mov
sahf
mov
shll
int
outsb
inc
mov
jg
jle
icebp
lods
sti
loope
stc
movsb
out
pusha
roll
rorb
loop
sbb
push
in
popa
jne
sbb
xchg
add
outsb
xchg
add
sbbb
mov
daa
pop
aaa
jecxz
movsl
lods
ffree
inc
cmp
cmp
hlt
push
lds
sub
sub
fwait
lcall
mov
pop
leave
outsl
stc
or
repz
add
mov
loopne
testb
xor
pop
add
push
fs
mov
adc
scas
jo
mov
aam
test
sub
ret
inc
stc
fcmovb
icebp
inc
inc
mov
push
les
out
xlat
sbb
aad
jbe
nop
das
inc
pop
inc
movb
sahf
jecxz
jne
jbe
mov
lock
cmp
dec
aas
sbb
test
aam
sub
sbb
fldenv
cmp
ds
push
mov
push
es
jp
jmp
and
loope
adc
in
leave
jb
jnp
inc
lret
jnp
adc
repnz
xor
sub
sub
rcll
add
push
mov
mov
dec
ret
ret
and
ret
jo
iret
inc
in
pop
imul
std
outsb
repz
in
loopne
leave
dec
jmp
loope
mov
lea
sbb
push
mov
ja
or
loop
cwtl
sub
sbb
adc
mov
cmpsb
movsl
or
and
cmp
ror
sub
xor
pop
stc
das
stc
pop
jmp
pusha
loopne
fistpl
ret
fwait
inc
test
mov
sti
or
in
in
jo
mov
cmp
out
lea
sbb
mov
adc
fs
push
scas
adc
add
iret
dec
xor
push
mov
das
jl
adc
stc
aad
lret
mov
jp
inc
icebp
jne
cmp
addr16
test
push
outsl
pusha
int
into
xor
popf
cwtl
inc
sbb
jne
outsl
xor
add
rorb
adc
fiadds
pop
ljmp
std
ret
lods
sbb
push
xchg
mov
xor
adc
loopne
orb
iret
inc
loopne
push
xor
or
ja
sahf
or
callw
sbb
and
sub
jp
mov
adc
aas
rolb
scas
mov
stos
dec
cmpsb
bnd
aam
daa
lods
xchg
iret
clc
fisubs
addr16
aad
cmp
mov
ret
mov
hlt
push
insb
or
xchg
push
out
cs
xchg
adc
movsl
mov
dec
aam
cmp
sbb
fmuls
stc
cmp
and
jb
das
ret
lock
ret
add
adcl
call
adcb
mov
mov
xchg
loopne
in
dec
imul
push
xchg
gs
outsl
mov
inc
adc
into
iret
fidivrs
ret
jecxz
stos
vcvtps2dq
mov
jg
jo
outsb
daa
xor
fimuls
jbe
repz
or
les
xor
inc
test
and
cmp
popf
xchg
adc
cmc
fwait
stos
mov
cmp
mov
mov
ljmp
scas
scas
mov
fdivs
pop
pop
je
xchg
out
dec
or
movsb
loopne
add
addr16
sahf
pop
std
inc
mov
je
or
imul
out
jbe
xor
sahf
xor
arpl
mov
loop
aaa
mov
mov
icebp
adc
add
push
scas
sti
out
and
fcoms
push
js
mov
pop
push
lcall
adc
std
mov
push
ss
sub
loope
adc
mov
ss
sub
adc
mov
iret
add
imul
icebp
dec
xor
dec
xor
dec
jmp
pop
xchg
xchg
call
aad
push
ret
push
pusha
ret
sub
into
repnz
mov
imul
pop
add
pop
mov
sub
cs
sub
cmp
cmp
inc
mov
jp
inc
or
mov
loope
repz
fucomi
icebp
push
in
dec
rorb
xlat
aam
int
dec
iret
popa
stos
sbb
rcrb
push
std
lock
popf
icebp
popl
das
mov
jmp
jne
mov
pop
xchg
push
push
hlt
sub
mov
or
sbb
mov
mov
mov
cs
pop
and
pop
sub
dec
faddl
rorb
sti
dec
mov
push
mov
push
sti
xchg
repz
sbb
hlt
ret
cld
bound
lret
or
stos
lcall
sub
scas
sbb
sbb
stos
cld
add
lods
fiadds
sub
scas
mov
jnp
xlat
pop
fstp
jno
cwtl
ljmp
into
jno
lods
rcrb
sbb
imul
cwtl
jnp
mov
xlat
cs
lods
mov
fisttps
cmp
xchg
push
mov
pop
in
mov
out
xor
push
jle
movsl
aaa
fstl
cltd
xlat
les
std
daa
dec
lds
out
and
jmp
js
sbb
jmp
mov
repnz
xor
xor
sub
out
mov
sbbb
add
jo
ret
xor
dec
sbb
sbb
jbe
push
push
and
push
dec
dec
xlat
inc
rcll
xchg
cltd
jns
or
movsb
cmc
push
push
out
xor
and
push
lahf
outsb
fldl
adc
pop
inc
mov
sub
or
mov
dec
dec
jp
mov
inc
dec
lods
insl
add
sarl
dec
inc
adcl
pusha
jb
int
and
fdivrp
clc
jnp
fnstenv
shlw
aad
jmp
loope
cwtl
gs
clc
fsubrp
push
sub
xchg
xor
pop
push
fdivrl
test
inc
nop
pusha
daa
ljmp
fs
xchg
jo
negb
repnz
push
fildl
pop
sbb
jecxz
sub
in
xor
xchg
mov
sub
mov
mov
add
or
faddl
pop
sub
mov
inc
inc
das
dec
pop
and
scas
fsubl
movsb
pop
hlt
dec
push
pop
shrb
jb
dec
pop
jge
inc
xchg
ret
adc
inc
jne
cli
jnp
loope
popa
bound
pop
data16
mov
xchg
adcb
mov
sti
xchg
sbb
enter
jge
pushf
inc
dec
fcmovne
pop
jge
xchg
sub
xor
aaa
pop
adc
jmp
pop
and
test
popf
push
enter
dec
xchg
dec
test
orl
cmp
jmp
jle
adc
insb
adc
loope
sub
mov
or
cltd
add
test
sub
mov
and
test
bound
daa
and
pop
mov
fnsave
push
push
mov
loope
iret
repz
rcr
jmp
cmc
sti
or
xorb
shl
cmp
mov
dec
pushf
mov
push
sub
push
ret
lods
outsb
mov
add
adc
dec
jge
js
push
sti
ljmp
aam
fsubs
repnz
mov
push
aad
enter
ljmp
sub
mov
icebp
fs
test
pop
bound
loopne
lahf
mov
mov
or
mov
jmp
or
aas
pop
daa
fidivrl
je
dec
test
das
mov
pop
dec
js
or
shr
aad
imul
into
lcall
js
jge
fdiv
mull
aas
xchg
xor
clc
andb
lods
imul
and
pop
fs
pusha
test
xchg
lods
adc
mov
pop
pop
mov
data16
lock
cld
repz
icebp
je
dec
lret
or
loopne
inc
fiaddl
pop
lahf
sahf
jle
adc
outsb
mov
add
fs
flds
in
or
mov
adcb
andl
pop
mov
jnp
inc
push
pop
and
fldenv
and
movsl
in
setle
push
cld
inc
jg
aaa
fidivrl
stos
cltd
fdivrp
icebp
repz
mov
test
dec
addl
cmp
scas
add
test
jp
fs
stos
into
mov
mov
stos
mov
sub
dec
and
filds
dec
rcr
aad
ret
dec
mov
inc
loopne
jnp
vpinsrw
ljmp
sub
loopne
xchg
sbb
fwait
cwtl
lea
or
or
repnz
sbb
lds
fsubrs
mov
push
jmp
dec
sbb
inc
inc
inc
loop
jg
int3
xor
mov
repz
ret
aas
lcall
in
rolb
cmc
lea
adc
lahf
loop
and
add
neg
add
pop
inc
sar
jnp
sub
mov
inc
and
stc
fisttpl
xchg
mov
jle
dec
add
enter
cmc
push
popa
dec
pop
adc
je
add
sbb
dec
cmp
insb
enter
adc
add
mov
mov
pop
mov
dec
inc
lods
mov
pop
lods
test
and
dec
lret
dec
ret
dec
int3
inc
dec
lret
ret
jl
inc
std
je
cli
std
jbe
out
bnd
out
xchg
push
ret
pushf
loope
in
adc
gs
rorb
pop
xchg
pop
inc
ss
mov
ss
and
test
scas
cmpsb
cmp
pop
daa
pop
rorl
inc
rolb
cld
js
leave
shrb
inc
js
imul
repz
jo
sbb
gs
mov
sbb
lahf
cmp
cmp
xor
sbb
stos
and
sbb
dec
sub
aam
inc
in
fsts
mov
sub
inc
mov
adc
call
aas
or
xor
lahf
fidivrs
out
cmc
hlt
xor
push
nop
lret
mov
test
mov
fnstsw
dec
ds
int
sub
mov
mov
xchg
jo
push
in
int
pop
xchg
rcll
into
jmp
inc
and
jmp
cli
pusha
daa
jle
add
mov
in
add
cwtl
xchg
dec
xchg
or
adc
mov
or
mov
pop
lds
test
push
sub
dec
push
shll
int
pop
jno
lds
ret
stos
in
out
dec
dec
sub
lds
aaa
mov
arpl
fs
nop
test
hlt
or
sbb
popa
or
cmp
test
cmp
lahf
sub
in
dec
push
cmpsl
dec
daa
and
push
ja
shlb
lret
or
xor
inc
mov
jge
ja
push
testl
cmp
mov
arpl
add
push
or
and
mov
outsl
sub
fcomps
mov
and
pop
ret
shlb
sbb
into
out
jmp
popf
out
mov
or
mov
shll
data16
rcll
adc
xchg
lcall
aaa
adc
pusha
sub
mov
call
cli
daa
pop
cmp
insb
lret
push
mov
dec
into
pop
and
into
pop
push
or
pop
push
lds
push
dec
dec
lret
xchg
mov
ljmpw
movsb
outsl
insl
arpl
test
jb
in
xchg
fstpl
in
adcb
aam
mov
cmp
scas
pop
ds
mov
ds
aaa
scas
ja
in
dec
test
fiadds
sarb
xlat
or
push
dec
xchg
ja
inc
idivl
or
inc
repnz
jmp
cwtl
jle
cmp
push
jecxz
mov
lcall
cmp
or
sub
mov
sub
cltd
push
sub
shll
outsb
dec
sahf
ret
push
cli
jb
int3
fdiv
leave
ret
ja
clc
insb
inc
clc
adc
shlb
jg
lcall
imul
xchg
adc
jb
orl
adc
mov
add
int
or
sub
xor
in
jns
leave
inc
jbe
jne
lds
sahf
lret
dec
push
jmp
mov
cmp
mov
std
adc
sahf
push
or
rcrb
es
pop
xor
inc
loop
dec
sub
daa
or
push
data16
aas
mov
ror
add
outsl
lods
out
jns
loopne
mov
fiadds
jl
stc
adc
pop
lods
xor
jne
push
call
mov
ret
pop
aaa
jbe
mov
shlb
movups
add
test
sub
enter
mov
xchg
jle
push
lret
enter
ficomps
push
out
in
mov
dec
leave
out
mov
cmp
jnp
icebp
sahf
jno
pusha
imul
mov
xchg
mov
mov
mov
and
sub
fsubs
cmp
dec
mov
pop
push
dec
mov
inc
fcomps
imul
js
jmp
mov
stc
mov
notb
pop
jne
mov
push
xchg
out
pushf
adc
in
or
cmp
aam
insl
mov
test
push
aad
push
or
aad
ficoms
fs
push
xchg
stos
adc
pusha
popa
push
jns
jmp
pushf
jecxz
sti
pusha
jecxz
mov
outsb
xorl
pushf
jecxz
loop
or
and
nop
jns
adc
cmp
pushl
shlb
shl
imulb
sub
jmp
mov
mov
dec
stc
mov
arpl
mov
sbb
out
in
sahf
hlt
out
adc
sbb
xchg
or
sbbl
pop
add
repz
js
add
mov
jo
andb
hlt
and
call
sub
dec
pop
fcomi
repnz
jmp
ret
out
int3
dec
mov
arpl
jle
adcb
add
add
and
mov
cmp
cmp
lock
subb
rclb
cwtl
aam
call
xor
pop
dec
sub
clc
and
stc
cmp
leave
arpl
inc
mov
sahf
jp
das
sahf
jno
add
adc
lods
jg
jg
push
in
jmp
xchg
xchg
cmp
or
xchg
movsb
hlt
andb
faddl
sarb
lret
in
cltd
or
in
in
test
pop
fcmovbe
cmc
xchg
push
xchg
push
mov
jno
into
mov
jno
jg
roll
jb
sbb
jp
sbb
outsl
ja
adc
out
cwtl
and
sbb
add
inc
or
mov
adc
mov
pop
ljmp
lods
pop
scas
fs
push
dec
outsb
push
xchg
call
mov
jg
repnz
cld
adc
in
pushf
daa
jbe
sub
cwtl
daa
in
fs
sub
sub
xorl
push
iret
mov
xor
pop
aam
inc
sub
insb
mov
aaa
push
loope
pop
cmpsb
push
xchg
sbb
push
xchg
push
movl
cmpsb
fcmove
ret
hlt
jne
out
nop
lds
je
adc
wrmsr
jbe
testl
cwtl
inc
pusha
mov
push
sub
jmp
and
scas
int
lods
mov
and
xchg
daa
mov
shrb
xlat
mov
dec
mov
aad
es
shll
mov
inc
sar
fwait
std
jo
push
stc
stos
lods
addr16
add
mov
pop
push
fucomi
call
test
xchg
fmul
fwait
jbe
sub
add
cli
loope
sub
inc
jns
mulb
pop
pushf
into
cmpsb
or
mov
pop
inc
mov
and
or
insl
inc
cs
icebp
fmuls
dec
loopne
call
dec
out
insb
xchg
and
or
or
aad
scas
test
ljmp
mov
fs
mov
test
sub
lock
jbe
movsl
lret
pop
jmp
mov
push
insl
cwtl
dec
arpl
or
negl
divb
jb
fucomip
shrl
jp
sarl
je
push
aam
or
sbb
popa
js
cmp
lock
xchg
push
dec
cmp
jb
mov
adc
nop
test
inc
push
js
sbb
enter
dec
sub
jmp
inc
inc
out
push
cmp
inc
sub
scas
lock
jno
cltd
sbb
jmp
lods
push
stos
cmp
sbb
lea
mov
sub
test
daa
pop
mov
fisttpll
dec
ds
inc
jns
mov
outsl
lret
and
ja
and
out
jae
fwait
loope
pop
sbb
cmpsl
push
sub
mov
mov
pop
mov
add
insl
sub
and
pop
fstps
fdivl
cmpsb
shll
bound
int3
push
notb
test
jns
lods
cmc
movsl
inc
push
sbb
jo
call
xchg
dec
aas
or
push
loop
test
movl
mov
add
xchg
and
cmp
mov
cs
int3
mov
dec
inc
and
jp
inc
repz
in
out
or
ja
hlt
or
testl
push
imul
push
jmp
pushf
mov
adc
lea
mov
and
iret
cltd
lahf
test
cltd
cmp
pop
enter
pop
mov
inc
pop
push
add
imul
addr16
enter
xchg
jbe
imul
gs
lahf
xor
xchg
call
rcl
shr
lret
dec
mov
mov
or
leave
daa
add
cmp
xor
fdivl
movsl
pop
pop
stc
push
xchg
adc
adc
outsb
out
dec
inc
inc
ret
push
addl
mov
repnz
out
mov
loopne
inc
out
xchg
rclb
pop
add
pop
add
mov
mov
fimull
push
inc
fbld
loopne
jb
jle
std
test
jo
push
push
push
repnz
jb
sub
out
adc
loop
loope
out
out
ja
ficoml
lcall
add
adc
rcl
jnp
mov
add
sub
add
inc
out
test
sub
or
pop
push
bound
or
add
jno
out
sub
loop
popf
cmc
in
xchg
rcrl
or
mov
je
int
outsb
stos
inc
int
pop
aaa
sub
mov
mov
insl
xchg
rclb
jns
adc
fs
je
cmp
ret
cli
clc
mov
ret
jno
push
inc
pop
dec
insb
rcrl
mov
loope
scas
sahf
loop
xlat
enter
nop
pop
mov
ret
cmp
push
inc
xchg
and
aaa
repz
lock
lret
and
or
rorb
mov
into
dec
repnz
cmp
push
cmp
cld
or
pop
call
clc
nop
out
insb
mov
mov
push
sub
add
jnp
pop
push
add
std
mov
jmp
lods
mov
out
pop
into
stos
loope
lods
lds
lret
mov
pop
xchg
rcll
push
inc
ret
aam
jp
dec
cld
out
fadd
sbbl
mulb
pusha
out
and
xchg
push
cmpsb
xchg
in
add
sbb
sbb
xchg
pop
push
adcb
repnz
aaa
aad
push
pop
outsl
xchg
test
jecxz
mov
xor
cli
pop
daa
inc
movl
filds
enter
out
imul
pusha
or
adc
sbb
insb
xlat
xor
mov
cmp
mov
cmp
jne
sbb
xor
enter
sub
inc
and
int
fstps
pop
push
push
pusha
fwait
ret
in
jno
mov
mov
sbb
xchg
js
fdivr
xchg
sub
imul
ja
out
mov
cli
push
inc
loopne
paddd
push
cmpsb
filds
xchg
mov
cli
xor
sub
fidivrs
xor
orl
and
mov
push
repnz
jno
xchg
sbb
dec
inc
inc
push
inc
inc
ret
bound
sbb
xchg
sbb
cmp
bound
xchg
or
mov
dec
add
sbb
xor
scas
mov
mov
outsl
lods
jns
cli
scas
inc
shlb
fxch
and
mov
rcl
cmp
les
xchg
call
lds
cmp
out
test
call
adc
jmp
fimuls
xchg
xor
push
dec
xor
mov
in
and
mov
sub
lret
ja
add
or
xchg
cltd
lret
shl
dec
or
push
xchg
ljmp
js
push
test
repz
loopne
andl
andb
xor
mov
ds
sbb
mov
inc
mov
jg
cmpsl
and
js
movsb
sbb
sti
sbb
mov
cmp
jo
or
cmp
mov
ja
mov
adc
jne
lret
mov
or
out
mov
xor
mov
dec
xor
push
lock
add
and
xchg
int
loope
in
dec
ret
add
call
aad
sbb
push
adc
sbb
sbb
rcrb
sub
mov
loope
mov
out
hlt
aad
and
or
nop
inc
movsl
push
int
cltd
jbe
fmuls
mov
cmpsb
fs
sbb
cmc
outsb
xor
les
cmp
cmp
pop
aaa
loopne
lods
pop
sub
pop
xchg
std
add
mov
pop
leave
sbb
scas
xlat
xchg
xlat
mov
imul
int
test
pop
push
push
or
call
je
enter
push
out
out
xchg
scas
jo
je
push
popf
std
push
insb
inc
aam
sub
and
push
sbb
jmp
in
push
pop
mov
mov
mov
xchg
cmp
jns
mov
lods
call
mov
push
in
dec
movsl
fsts
pop
sbb
adc
ret
aam
jmp
jg
jge
mov
notl
outsl
insl
jecxz
arpl
inc
in
pop
and
nop
cmp
mov
dec
divb
cmp
xor
xor
lods
out
ja
insl
in
mulb
pop
stos
fsubs
mov
int
ljmp
fimull
repnz
aam
jbe
or
or
imul
insb
and
and
js
sbb
stos
push
push
push
add
roll
in
sub
push
fnstcw
and
sub
cmpsb
add
je
inc
jae
outsl
push
cmc
shr
rorl
js
cli
xchg
scas
or
sti
or
jne
jnp
out
pop
fisttps
or
or
mov
cmpsl
loopne
pop
fdivs
mov
xor
jb
aaa
cmpsb
mov
pop
leave
add
pop
lcall
daa
or
inc
js
pop
dec
xchg
xor
push
shrb
jmp
mov
negb
andb
pop
mov
or
iret
mov
mov
add
adc
mov
push
je
add
mov
cs
mov
xor
popf
fld
test
sub
jnp
sbb
fisubs
push
enter
iret
incl
push
or
pushf
jge
jmp
mov
mov
lods
and
pop
adc
mov
cld
mov
add
xor
ljmp
push
adc
repnz
enter
faddl
jno
dec
rcrb
mov
sti
clc
xchg
jg
sbb
mov
lahf
cmp
idivb
sbb
nop
xor
adc
mov
jbe
mov
insb
cmp
fisttpl
and
mov
push
aas
repz
xor
jge
cld
mov
and
stos
sti
cli
push
aam
inc
jl
aam
dec
clc
jg
push
jo
mov
popa
adc
outsl
insl
sub
in
ja
lcall
out
or
insl
or
test
mov
loopne
mov
das
sub
jecxz
push
inc
icebp
lcall
pop
clc
adc
push
ja
sbb
mov
xchg
insl
pop
jge
mov
xchg
jmp
mov
cmp
les
add
mov
jg
ljmp
sarb
sub
out
jno
movsb
push
ja
jns
or
leave
loop
clc
es
sbb
xchg
leave
and
jmp
loope
sub
std
xchg
jmp
pop
cmp
mov
ljmp
cmp
sbb
add
mov
jno
jecxz
jmp
lcall
fstl
popa
and
xchg
push
fldl
push
push
xchg
insl
jl
outsl
pop
jnp
push
lods
dec
sub
je
das
xor
sub
and
cmp
lret
mov
inc
pop
dec
lock
int
mov
jmp
stos
addr16
mov
mov
movsb
bound
loope
add
into
inc
push
adc
adc
je
inc
dec
in
fwait
ljmp
or
fst
push
push
sbb
mov
sti
add
pop
mov
mov
sar
jbe
aas
push
add
aaa
pushf
push
push
and
mov
push
jb
inc
pop
lret
aam
push
sti
inc
or
ja
jmp
mov
push
and
cld
adc
imul
lea
xchg
push
ret
sub
xor
and
dec
cmp
dec
ds
sub
inc
and
fnstsw
push
fcomi
adc
ffree
xlat
jbe
es
push
push
xor
or
dec
cmp
mov
add
or
mov
mov
jae
xor
lcall
cs
mov
fisubl
std
mov
sub
lods
sub
dec
cmpsl
es
or
push
inc
rcll
add
mov
call
adc
mov
ja
xorl
aam
addr16
sbb
pushf
sbb
xchg
adc
aas
or
fildl
push
mov
mov
test
daa
mov
cmp
cmpsb
scas
cmp
aas
pop
jle
rcrb
mov
jmp
mov
clc
leave
cs
push
jecxz
fs
jle
jae
jmp
xchg
xor
pop
xchg
jb
aaa
test
cwtl
xchg
pop
adc
add
mov
dec
test
push
dec
out
fnstenv
clc
adc
mov
mov
push
arpl
call
jg
lds
in
addr16
aad
jo
icebp
sbb
out
dec
sahf
sti
arpl
jo
or
and
je
ret
or
pusha
lods
movsl
or
loop
adc
in
sub
jle
cmp
push
push
push
and
daa
and
filds
push
pop
icebp
aas
jge
jg
sbb
pop
imul
sbb
cmp
pop
and
lock
pop
sti
add
jp
xor
sbb
add
cs
push
push
or
lret
sbb
aad
mov
out
fwait
jnp
imul
insl
or
xlat
outsl
lret
inc
and
xchg
pop
jge
xchg
test
daa
aad
jo
xor
das
shr
cmp
cmp
scas
mov
mov
mov
mov
dec
jns
mov
inc
mov
mov
ljmp
fdivrl
push
add
adc
and
adc
xchg
xlat
rclb
inc
add
or
repnz
adc
loop
repnz
lret
and
or
jecxz
leave
mov
push
divb
test
das
mov
sub
movsl
dec
mov
movsb
mov
fists
jg
dec
fwait
int
xchg
in
dec
dec
and
push
jle
arpl
repz
cmc
orl
pusha
dec
xchg
dec
pop
or
or
push
nop
add
mov
faddl
in
or
lds
jnp
int3
fsub
aam
out
mov
fdivs
or
cmp
test
sub
fsubr
test
mov
aaa
pop
sbb
lods
mov
ret
add
xchg
xor
mov
add
mov
cmp
mov
repnz
stc
mov
add
ficomps
arpl
movsb
inc
leave
jnp
lret
and
pusha
call
nop
add
daa
jne
testb
lock
adc
sahf
jbe
scas
mov
or
sti
add
xchg
jl
stos
fdivs
out
pop
xchg
jg
dec
and
es
rcr
push
inc
adc
out
js
ret
pop
xchg
in
dec
cltd
xchg
adc
and
bound
movl
movl
sub
xor
inc
push
add
movsl
jnp
cmpsb
inc
mov
mov
frstor
out
dec
faddl
fidivrs
push
ffree
addr16
ljmp
jg
cs
out
xchg
loope
hlt
mov
imul
out
and
adc
mov
ds
xchg
cmp
and
push
test
rcrl
mov
shlb
movsw
mov
shrl
out
jns
enter
repz
mov
mov
jbe
std
sbb
mov
andl
stos
xchg
gs
rclb
mov
push
dec
sub
loop
lcall
js
rcrb
push
sub
mov
mov
pushf
or
add
xchg
lock
in
inc
mov
js
cmp
xchg
idivb
mov
xlat
cmp
xchg
sbb
cli
in
dec
sbb
sar
xchg
cwtl
pop
in
mov
xchg
push
outsl
inc
pop
das
dec
hlt
fstp
cmpsb
dec
pop
pop
pop
mov
push
les
push
aad
addr16
fnstenv
inc
lds
mulb
mov
aaa
lock
jmp
mov
popf
jb
into
xchg
inc
adc
cs
push
lea
out
cld
mov
cmc
mov
ret
outsb
dec
sub
jmp
data16
inc
das
jmp
mov
xor
or
insb
mov
xchg
cmpsb
jne
or
sbb
psubusw
inc
xor
sbb
or
cmp
loopne
or
in
add
add
xchg
dec
mov
lods
sub
aad
lcall
xlat
into
jecxz
or
pop
pop
cli
out
test
fs
fld1
popf
mov
and
sbb
mov
add
xchg
or
xor
in
js
mov
or
push
scas
shrb
lret
inc
sti
pop
test
jns
inc
push
iret
inc
inc
lret
cld
xchg
inc
hlt
cli
data16
out
repnz
cltd
data16
les
mov
adc
push
incl
dec
clc
push
psubd
sbb
aad
xor
mov
stos
fs
xor
sub
jl
pop
popa
loop
int
xor
xchg
test
mov
or
ret
inc
lds
jo
ja
jne
inc
jne
imul
adc
sub
push
mov
xor
sbbl
dec
fnstsw
inc
dec
xor
outsl
aaa
stos
mov
andl
fs
sub
sarb
pop
push
fbstp
popf
push
xchg
bnd
aas
test
adc
dec
push
cwtl
cmpsb
ljmp
outsl
adc
or
jge
idivb
scas
xor
lds
loop
ja
pushf
fwait
push
int3
lcall
add
xchg
fdivr
cmp
adc
cld
or
hlt
mov
adc
pop
xchg
cs
and
shll
xchg
pop
lret
add
lcall
inc
sbb
iret
scas
fistpl
lock
out
sub
mov
xchg
jg
dec
lock
dec
movsl
sti
jno
push
inc
sbb
dec
bnd
jmp
or
cmp
jb
mov
mov
loope
mov
mov
cwtl
rclb
mov
inc
in
int
ljmp
mov
cld
xor
out
inc
cwtl
xchg
mov
inc
jl
dec
xor
cwtl
out
push
jp
cli
aas
or
ljmp
imul
mov
pop
cld
mov
sub
pop
or
push
daa
test
jnp
cmp
leave
mov
lods
jo
stos
scas
lahf
mov
jo
xchg
pop
iret
aad
daa
sub
or
iret
push
sarb
xchg
hlt
or
xor
mulb
popa
mov
sbb
mov
mov
fdivs
push
mov
decb
jns
rcl
cmp
jo
dec
mov
pusha
dec
cwtl
sub
xchg
pop
hlt
fldt
inc
dec
les
mov
pop
mov
xor
mov
dec
mov
lcall
sub
push
popa
ret
or
cwtl
jns
or
cmp
cmpb
movsl
cmp
shlb
fsts
jns
insl
test
push
stos
mov
daa
jge
mov
jg
insl
mov
push
mov
in
mov
sub
dec
sbb
adc
inc
push
mov
mov
int
shlb
push
cmp
bnd
jp
xchg
repnz
jne
clc
cld
push
cli
ljmp
cmpsl
cmp
pop
push
pop
dec
cs
pop
loope
cmpsl
scas
xchg
cmp
or
jbe
jmp
pop
insb
pop
je
push
and
or
pushf
xor
mov
mov
shr
cmpsl
cli
fsubrs
repnz
cmp
mov
scas
and
cmp
sub
nop
and
xchg
dec
xor
fdivs
loop
jb
je
jo
data16
gs
pop
sbb
push
pushf
mov
mov
inc
xorb
mov
mov
ss
sub
and
test
int
fsts
push
push
jo
dec
inc
out
xchg
inc
push
inc
scas
adcl
decb
mov
shlb
bound
jns
push
xchg
xchg
icebp
popf
popa
jno
sbb
decl
inc
shll
mov
stc
mov
aaa
cli
dec
stos
sbb
and
and
jmp
jecxz
jne
enter
and
jns
jle
decb
jae
push
testl
out
xchg
into
addr16
pop
stc
sbb
in
add
mov
out
pushf
xor
add
stos
mov
mov
push
push
and
rcrl
and
mov
shll
dec
push
ds
adc
mov
and
inc
fldcw
jbe
inc
dec
mov
int
mov
or
or
jnp
add
cmp
mov
xchg
sub
stos
aas
push
or
addr16
xor
imul
fs
jns
iret
js
xchg
dec
dec
jnp
push
mov
jbe
inc
mov
js
bound
or
sbb
call
out
mov
xchg
stos
sbb
and
adc
jne
aas
or
mov
sbb
shlb
jl
mov
nop
jb
dec
adc
daa
sub
jb
scas
pop
scas
les
cmp
neg
mov
add
roll
shlb
or
scas
fadds
xchg
jo
lods
popa
mov
pop
sub
mov
pop
dec
cmc
pop
rcr
aad
inc
mov
add
jbe
mov
jl
sbb
add
lret
aad
dec
roll
fwait
int3
mov
add
flds
sbb
mov
add
int
mov
and
adc
jmp
and
bound
mov
mov
fmull
xor
mov
hlt
jnp
ljmp
loope
mov
add
jp
xchg
icebp
push
lcall
sub
loopne
mov
outsb
mov
sub
cld
and
xor
pop
xor
pop
cmp
ficoml
mov
leave
xor
movsb
cmc
xchg
dec
lds
sub
mov
xchg
addr16
loop
int3
imul
cmpsl
es
es
sub
mov
push
cs
lods
in
and
in
pop
push
mov
push
mov
aam
jo
in
cmp
jmp
add
push
test
js
and
inc
fyl2x
add
xor
jns
test
jne
in
test
lock
mov
lret
int3
add
mov
aas
mov
jp
cmp
xor
cmc
movsl
pop
sub
fadd
loope
test
inc
daa
fstpt
push
outsl
and
dec
aas
and
loope
cmc
pop
outsb
xchg
js
and
rol
ja
mov
xor
mov
sahf
rclb
push
or
fnsave
or
popa
int3
cmp
fwait
jns
pop
xor
nop
and
rsqrtps
and
dec
lods
es
inc
pop
push
push
push
sbb
imul
out
mov
and
in
xchg
adc
and
or
popl
cmp
leave
iret
xor
xchg
inc
in
fdivs
inc
mov
into
mov
mov
sbb
lods
push
add
jne
outsb
gs
jle
mov
mov
insl
or
jne
mov
add
sbb
inc
sahf
lds
jb
repz
adc
fbstp
xor
mull
pop
xor
push
mov
cmp
and
insl
stos
clc
mov
rorb
push
cmp
out
jge
mov
sbb
pop
xchg
stos
lahf
or
xchg
shufps
jp
xchg
iret
das
shll
mov
and
ss
and
and
dec
fcomps
lock
dec
inc
pop
push
jge
int
insl
fucomi
push
mov
gs
mov
pushf
add
adc
mov
sti
adc
fs
dec
jl
outsl
xchg
enter
repnz
mov
pop
scas
pop
push
mov
push
adc
or
cli
mov
ja
ljmp
int3
fidivrs
sti
push
adc
mov
mov
lods
fstpl
inc
xchg
adc
arpl
jge
push
jns
lret
mov
add
mov
cmpsb
xor
sub
pushf
mov
leave
cmpsl
or
fsubrl
leave
fwait
add
ret
jnp
lret
les
ret
cmp
jl
jmp
jns
ljmp
cs
pop
in
mov
pop
mov
sbb
add
or
ds
add
fs
and
ret
jo
mov
or
adc
inc
int3
inc
cmc
dec
xchg
xor
push
sbb
pop
hlt
int
mov
frstor
cwtd
cld
negl
xchg
mov
xchg
xchg
scas
and
cmp
or
mov
pop
subl
mov
shll
ss
add
push
lret
dec
rcr
iret
iret
js
leave
xor
je
push
and
jmp
jge
lock
popa
cmp
jne
pop
sub
shlb
lcall
iret
subl
sarl
mov
stos
push
ds
test
jnp
aam
and
je
sbb
inc
rcrw
sbb
in
sub
lcall
adc
inc
outsl
cmpsl
mov
add
xchg
fadds
fstpt
push
xorl
xor
push
mov
mov
push
pop
xlat
lcall
out
adc
ljmp
jecxz
bnd
jae
stos
sbb
loopne
jbe
dec
out
lahf
lods
mov
jp
loopne
jl
xchg
sbbl
es
adc
push
sub
push
add
and
movsb
enter
sahf
icebp
push
es
int
dec
inc
mov
icebp
cmc
sti
inc
outsl
or
push
imul
pushf
call
aaa
or
xchg
mov
popf
add
mov
andb
ds
into
mov
pop
aaa
into
xchg
sub
movsl
xchg
jge
xchg
dec
lret
je
push
jmp
or
sbb
or
lods
call
test
xor
lcall
pushf
mov
dec
rorl
sub
popa
jle
icebp
mov
stos
int3
push
push
xor
lret
repnz
jp
call
clc
jg
repnz
stc
in
adc
push
in
imul
arpl
and
jg
mov
sub
mov
les
pop
scas
lock
pop
and
sub
insb
shrb
fsub
dec
pusha
jecxz
imul
pop
and
std
ljmp
adc
xchg
popa
mov
mov
inc
mov
or
sbb
jle
pusha
add
je
mov
mov
xor
sub
or
fsubs
pop
pop
fstl
enter
sbb
js
jmp
icebp
int3
mov
leave
sbbl
jmp
sbb
fwait
sub
nop
mov
add
cmp
mov
stos
lods
mov
mov
and
lods
pop
pop
push
pop
rclb
fxch
int3
lret
inc
lret
shlb
cli
scas
jns
divl
jle
clc
insb
insb
lret
jbe
test
xchg
bound
sbb
inc
xchg
cwtl
add
pop
mov
push
mov
mov
sub
int
sub
rclb
fldt
iret
mov
push
leave
lret
dec
int3
incb
movsb
and
out
adc
xchg
xchg
sbb
arpl
popf
and
mov
pop
adc
xchg
test
add
das
inc
dec
cmpsl
mov
mov
mov
jle
rorb
test
sub
pop
fadd
imul
push
dec
lret
dec
int3
lock
adc
xor
pop
bound
pushw
cmp
mov
adc
sub
add
bound
xchg
adc
outsb
add
xor
sub
xchg
pop
rorl
xchg
mov
shrl
mov
push
iret
rol
dec
adc
rorl
ret
call
icebp
jl
jg
push
xchg
xchg
adc
pop
jge
divb
sub
push
cmp
and
cs
mov
sub
mov
mov
cltd
inc
push
dec
xchg
shll
inc
adc
movsl
ret
inc
shlb
les
dec
adc
leave
mov
adc
cmpsl
loope
enter
fwait
in
xchg
mov
addr16
hlt
pop
cmp
subl
xchg
aaa
in
call
mov
pop
in
cmp
push
scas
cmp
nop
mov
jnp
mov
fstl
push
sbb
adc
lock
aad
imul
push
pusha
inc
es
jl
mov
fbstp
inc
sub
jbe
adc
mov
stos
in
mov
dec
lret
xchg
sbb
inc
push
mov
and
and
into
jmp
scas
cld
xlat
popf
aad
dec
out
push
or
cmp
loopne
jo
mov
dec
ficoml
pop
xchg
inc
mov
dec
loope
cmp
xor
cmp
xor
fwait
jmp
sbb
and
mov
fildl
inc
dec
imul
dec
cmp
and
repnz
mov
movsl
imul
repz
adc
iret
adcb
lahf
mov
jae
scas
negl
out
jmp
arpl
mov
xor
mov
or
fstp
ret
xchg
jnp
dec
xchg
mov
inc
inc
cli
scas
lock
je
jno
outsl
inc
lock
loope
hlt
test
pop
in
jno
inc
mov
pop
adcb
push
inc
jno
fldt
and
mov
adc
insl
pop
xchg
aam
mov
cmpb
mov
add
cmp
outsl
mov
dec
cmpsb
sbb
in
aam
sbb
out
pop
nopl
push
mov
push
lret
jnp
mov
jp
in
mov
stc
and
das
and
das
cmc
jae
pop
fsubrl
cmpsb
xchg
inc
dec
push
stc
inc
int3
dec
push
dec
push
push
repz
jne
imul
inc
insl
pop
pushf
fstps
jmp
xchg
inc
ja
or
xchg
pop
or
pop
jl
jp
xchg
sub
adc
lods
inc
mov
ja
push
mov
insb
push
arpl
mov
xor
clc
dec
icebp
sbb
imulb
jl
mov
xor
xor
mov
and
or
pushf
movsb
scas
loopne
xor
xchg
aas
repnz
cmp
mov
loop
lea
and
pop
lods
dec
popa
lods
push
xor
cld
jnp
inc
mov
push
fistps
incl
sti
repnz
jge
jns
or
loop
jmp
sbb
xchg
arpl
or
lea
into
roll
mov
cmp
xchg
sub
xor
call
stos
dec
push
xor
into
test
xchg
inc
mov
sub
sub
or
insl
push
inc
out
or
lods
sahf
scas
or
sbb
daa
in
xor
xor
nop
mov
push
or
mov
out
xchg
mov
pop
rclb
in
mov
dec
jle
rorb
sbb
inc
repz
cmp
outsb
push
mov
in
mov
xor
sti
pusha
cmpsl
outsb
adc
hlt
test
and
dec
out
or
sbb
stos
daa
lret
lret
mov
or
test
mov
jl
js
push
sti
jne
stos
leave
or
push
cli
ljmp
imul
addr16
sbb
outsb
xlat
repnz
es
fimull
cmp
fiadds
push
aas
int3
lahf
mov
roll
out
adc
sahf
dec
pop
lret
dec
add
dec
std
ds
jnp
xor
xacquire
adc
test
in
mov
push
mov
in
cmpsl
pop
mov
sub
push
or
mov
mov
test
xor
mov
ror
cli
and
mov
sbb
leave
loope
sti
push
adc
loope
repnz
testb
pop
push
fs
push
mov
addb
aas
js
and
mov
mov
das
pop
push
notb
pop
dec
jns
movsb
repnz
js
stos
shr
inc
inc
notb
push
inc
cli
in
or
inc
sbb
div
sbb
pop
sbb
xor
adc
leave
lahf
add
pusha
daa
mov
xchg
xor
jecxz
sub
filds
jp
xor
in
aaa
mov
cmp
sub
pop
loope
sbb
aad
pop
imul
std
outsl
inc
shll
loopne
jnp
cmpsl
ja
jge
push
imul
bound
js
push
ds
mov
xor
sub
cld
sarb
inc
dec
inc
jmp
ret
mov
sarb
dec
icebp
lods
repz
or
jb
mov
std
push
jp
jmp
push
subl
sub
adc
mov
insb
mov
pop
inc
mov
sbb
scas
das
sbb
xor
and
sbbb
test
push
mov
lret
mov
mov
movl
in
cmp
jecxz
jl
sbb
adc
push
sbb
add
fwait
pushf
cmp
or
sti
mov
test
xor
cmpsl
test
js
pushf
fucom
push
xchg
xlat
inc
push
rorb
push
inc
inc
test
xor
movsl
js
arpl
and
shrl
pop
sbb
in
mov
xchg
xorl
adcl
xchg
inc
mov
xor
cmpsl
cmpsb
imulb
xor
lods
mov
pop
loop
cs
sub
mov
pop
sub
dec
clc
mov
push
and
leave
js
sub
idiv
mov
ss
push
xchg
sub
das
sub
mov
xchg
xchg
add
pop
lea
xor
mov
mov
cmpsb
cmpsl
cld
and
push
push
imul
push
dec
jae
jo
inc
shrb
jle
dec
jb
mov
dec
fidivrs
sti
out
xchg
add
jle
adc
gs
adc
out
sbb
and
lods
xor
mov
sub
and
repz
sbb
mov
imul
and
pop
push
mov
adc
xchg
jp
jbe
jecxz
jae
out
std
rcll
push
clc
in
sahf
cwtl
outsl
dec
dec
out
rcrl
xchg
fwait
jp
sbb
data16
dec
or
xchg
cmp
xor
cmpsb
mov
xchg
and
or
sub
flds
mov
test
scas
dec
xor
js
inc
or
cld
add
jmp
dec
push
jbe
adc
mov
gs
loopne
adc
pop
clc
pusha
push
jl
mov
cmp
dec
imul
and
mov
dec
pop
fstl
lds
xorl
lds
inc
fs
cmc
jb
test
fwait
insl
out
popa
popa
in
loopne
lea
push
add
or
sbb
mov
mov
pop
jnp
mov
lret
lea
mov
cmp
fistpl
dec
or
inc
jae
mov
cmp
or
popa
cli
and
popf
pop
adc
scas
fwait
pop
or
mov
or
call
arpl
and
xor
mov
flds
xor
out
xlat
aas
and
enter
shlb
into
mov
cmp
addr16
and
std
daa
in
hlt
sub
arpl
fimuls
adc
unpcklps
sub
sbb
sbb
in
xchg
mov
and
xor
or
rorb
mov
iret
sub
out
mov
cmpsl
push
popa
das
rcll
jecxz
dec
arpl
aad
jae
xlat
inc
jp
movsl
adc
jl
push
add
push
popf
ja
push
int
cmc
add
sti
lahf
mov
or
sub
push
pop
pop
imul
popf
adcl
cld
add
dec
and
xor
imul
sub
movsb
xchg
fsubrl
ret
clc
xor
fistpl
std
outsb
sbb
lcall
sbb
mov
sbb
jae
test
out
mov
mov
mov
mov
lea
add
dec
fnsave
pop
ss
push
scas
dec
rcrl
sub
jne
inc
rol
fwait
jg
lahf
lds
xchg
cmc
leave
dec
addr16
sub
add
sahf
in
add
sbb
add
xchg
adc
loopne
mov
jmp
leave
and
adc
push
ret
enter
int
int3
inc
mov
cmc
dec
lea
repz
lcall
loope
push
imul
sbb
jbe
xchg
lret
lea
ret
xor
das
cs
mov
xor
shll
push
insb
lret
sahf
fcmovne
ret
cli
lds
in
repnz
in
jmp
sbb
nop
arpl
fcmovb
dec
push
pushf
dec
sub
xchg
inc
orb
orb
xor
xor
outsb
fidivrl
xchg
cmp
lods
pop
mov
aam
fcmove
xchg
imul
push
cmp
leave
jp
jge
inc
lock
fcmovnb
jnp
jmp
popf
std
fnstcw
jmp
pusha
sbb
cltd
mov
rclb
adc
pop
xchg
ds
and
cmp
pop
mov
cmp
mov
and
dec
js
or
lcall
in
dec
add
push
fs
pop
xor
nop
jb
negl
dec
leave
jne
repnz
inc
outsb
dec
ljmp
div
inc
lods
jmp
mov
rcrb
or
lods
dec
sbb
test
test
sub
jns
lods
mov
jne
mov
cmp
test
push
sub
iret
adc
test
and
push
dec
lock
jo
mov
sbbb
xchg
jnp
push
ljmp
mov
stos
idiv
sbb
cmpsl
xchg
xchg
xchg
cmp
mov
cmp
ud0
cmp
fstl
mov
xor
shlb
loop
jbe
in
imull
xlat
xchg
pop
bound
mov
scas
jmp
cltd
adc
xchg
cmpsb
mov
test
mov
mov
test
mov
sbb
das
pushf
and
push
push
sub
fimull
pop
andb
inc
adc
rolb
orb
les
add
jl
sbb
jmp
test
shrb
test
lret
je
dec
sbb
jmp
sti
xchg
mov
ss
dec
sub
cmc
xlat
insb
and
fldenv
sbb
in
jmp
popf
pop
inc
mov
inc
cld
sub
inc
jns
cmp
mov
ljmp
imull
fcoml
and
add
push
shll
push
pushf
cmp
xor
sub
ss
jl
das
enter
xchg
call
jp
push
int
rclb
dec
stc
ror
xchg
sub
inc
ja
lds
push
stc
icebp
xchg
jno
jle
cwtl
and
pushf
xchg
fdivrl
scas
adc
cmp
xchg
or
cmc
mov
and
cmp
fstpl
inc
xor
add
lret
xchg
std
loopne
inc
mov
dec
dec
shlb
lcall
mov
push
loope
in
or
andl
sbb
stc
xchg
or
insl
or
in
pop
lcall
push
xchg
mov
es
or
rclb
jp
fdivr
dec
ret
or
lahf
shll
pop
int
outsb
loopne
je
ljmp
xchg
out
ret
clc
out
adc
sarb
subb
xchg
enter
xchg
int3
popa
mov
xor
fdivp
leave
pop
pop
pop
es
shr
lds
mov
dec
cwtl
icebp
xchg
pop
push
pushf
pop
aad
notl
into
jp
add
in
je
vpunpckhqdq
insl
cli
mov
sbb
pop
xchg
mov
push
add
adc
mov
cmc
inc
cmp
xor
or
or
and
fldenv
dec
call
lcall
xadd
jecxz
cmc
mov
and
xchg
mov
fisubs
and
xchg
push
jns
nop
xchg
mov
sbb
fldcw
rorb
and
hlt
pop
dec
jnp
push
push
aad
sbb
mov
inc
aad
notb
cld
loop
cmpb
cwtl
popa
or
test
popa
stos
fwait
push
push
insl
xlat
adc
xchg
pop
push
xchg
push
nop
or
or
mov
xorb
xor
test
test
and
test
and
mov
dec
dec
loopne
ds
dec
xchg
mov
dec
dec
ss
ret
cmp
stc
sti
js
in
bound
jle
add
gs
inc
pop
fstl
fidivrs
stos
push
lret
mov
or
lret
mov
sub
cmp
and
and
aad
push
dec
push
push
clc
sub
shrl
jp
jnp
les
jge
imul
jg
call
ret
loop
clc
addr16
jb
jnp
loop
or
insl
mov
sbb
or
xchg
leave
aaa
sbb
aad
mov
scas
xchg
pop
push
lret
out
clc
rcrl
pop
and
iret
push
fidivl
fstps
jo
imul
push
out
fcomps
addr16
mov
mov
imull
loopne
cmpsl
mov
mov
xor
lods
jae
cmp
inc
pop
faddl
in
mov
fistps
fimull
rcll
outsb
gs
jmp
sub
mov
cs
in
xor
ds
mov
and
or
andb
in
sub
mov
and
scas
inc
das
sub
not
and
and
jns
stos
vorps
int3
adc
outsl
test
jmp
xchg
fwait
mov
push
ds
mov
push
adc
and
sub
or
jo
imul
les
sub
cltd
and
adc
pop
pop
jg
lret
mov
loope
sarb
dec
push
mov
adc
jge
shlb
or
sub
mov
sbb
pusha
xor
or
xor
mov
xor
mov
outsl
out
jle
fildl
nop
xor
mov
dec
out
pop
aam
loope
adc
dec
inc
enter
in
lds
lret
hlt
popa
push
jbe
lock
out
add
call
out
sbb
mov
add
cmp
sub
cmp
out
scas
int3
test
and
sub
pop
mov
xchg
popf
mov
call
out
insb
mov
jb
dec
jge
lea
pop
jno
mov
xchg
sbb
js
adc
xchg
adc
movsb
xor
add
jp
push
test
mov
xor
fisubrl
int3
xor
jmp
sub
inc
aad
mov
cld
arpl
js
data16
ja
inc
loope
push
sahf
jge
xchg
push
cli
xchg
xchg
cld
mov
adc
cmp
push
mov
cmpsl
test
mov
push
jns
mov
dec
push
in
pop
rcl
push
lret
int
sbb
outsb
cld
mov
cmc
cmp
jmp
fdivp
repz
lock
aas
sbb
shlb
push
add
mov
mov
or
push
mov
sbb
cmp
cmp
pop
xchg
std
push
jb
gs
out
adc
ds
in
loop
lcall
mov
test
sbb
dec
sbb
add
jns
adc
ret
addl
xchg
add
xorl
cmp
inc
mov
sub
add
jbe
inc
loopne
and
int3
insl
ficompl
pop
xchg
xchg
xchg
adcl
inc
push
mov
mov
inc
js
adc
test
xorb
mov
ficompl
push
mov
cs
dec
test
xor
lods
scas
jl
lds
hlt
das
loopne
lea
es
pop
mov
cltd
push
inc
mov
inc
jg
in
cmp
loopne
outsl
cmpsl
bnd
mov
loopne
push
arpl
out
and
push
cmp
xchg
nop
aaa
dec
xchg
movsl
or
dec
aaa
aam
shrl
mov
rcrl
fwait
dec
dec
cld
shl
sarb
js
out
int
in
push
cli
insl
out
call
pusha
bound
loope
leave
pusha
adc
ss
cld
mov
cs
or
cmp
flds
push
sub
std
xor
mov
enter
and
sbb
ret
aad
jp
adc
int
adc
ljmp
pop
bound
das
popf
cmp
fstl
mov
jmp
out
dec
mov
or
mov
cs
sbb
aad
xor
sti
movsl
lods
sbb
pop
movsl
dec
pop
pop
pop
out
sbb
lcall
stc
dec
cmc
int3
gs
mov
je
jle
out
mov
adc
in
ja
pop
lcall
mov
dec
mov
cmp
inc
das
and
sub
and
push
popa
and
mov
inc
sub
pop
movsb
je
js
repnz
xlat
push
pop
dec
dec
ffreep
int3
pop
inc
inc
movsb
clc
lds
jge
lods
jbe
cs
xor
sub
mov
pop
roll
adc
sahf
push
mov
cmp
stos
xorl
lods
mov
ja
hlt
and
pop
inc
push
mulb
test
mov
inc
xor
idivl
xor
lret
notl
sbb
out
gs
adc
cwtl
pop
adc
insb
pop
sub
inc
je
fiaddl
and
fisubl
mov
push
mov
push
pop
movsl
pop
dec
iret
rcrb
dec
pushf
icebp
sbb
out
or
jae
sbb
adc
cmp
cmp
mov
mov
mov
jp
orl
cmpsb
test
lods
test
ss
ret
fistpll
pop
push
pop
lds
lret
inc
std
in
movl
js
sub
repz
inc
jne
loopne
adc
lahf
dec
out
scas
push
lods
gs
jnp
dec
out
sbb
mov
ja
cmpsl
clc
pushf
ss
dec
inc
mov
xor
adc
add
mov
test
dec
dec
sub
inc
in
les
lods
cwtl
pop
jg
jae
push
cmp
inc
dec
insb
mov
icebp
inc
adc
mov
jecxz
mov
mov
gs
mov
cmp
pop
mov
fptan
dec
push
les
aam
sub
inc
fs
or
cwtl
cltd
jno
and
jmp
xchg
and
jmp
jecxz
jmp
and
or
call
mov
psubb
xlat
loopne
jl
push
push
mov
call
pop
sub
pop
out
call
lea
mov
jb
jns,pt
das
lea
fs
daa
pusha
sbb
pop
sbb
sbb
fnsave
adc
or
ret
mov
pop
jmp
pop
inc
cwtl
mov
lds
fcmovu
std
fstpl
add
push
pop
leave
shrb
scas
mov
jno
das
push
jae
das
imul
leave
xchg
mov
push
mov
adc
xchg
or
sbb
mov
push
mov
stos
sbb
xor
daa
shll
inc
push
int3
mov
pop
push
cmpsl
adc
iret
push
jb
cmpsl
inc
dec
jne
cli
add
adc
cli
cmp
pop
call
shl
je
inc
fimuls
xlat
push
or
inc
lds
lahf
xchg
cmp
repz
stc
mov
cmp
fisubrs
inc
mov
aam
push
leave
mov
xchg
jecxz
mov
enter
sbb
push
out
pop
adcb
imul
or
mov
mov
add
xchg
mov
push
mov
add
push
jg
sub
dec
dec
adc
ret
flds
push
xor
dec
enter
clc
adc
mov
adc
push
adc
mov
cld
xchg
xchg
ljmp
int3
sbb
jp
inc
xchg
or
cmp
mov
ss
fnstenv
movsb
push
test
mov
mov
stos
push
mov
xlat
and
iret
into
fiaddl
outsb
mov
call
repz
daa
dec
ret
pushf
in
shlb
jno
pop
jmp
nop
loop
ret
jl
and
xor
mov
cmp
xchg
adc
xor
push
and
cs
jb
pop
shll
leave
das
inc
shrl
xor
jb
xlat
shlb
dec
push
cmpsb
stc
outsb
insl
movsb
mov
jnp
fldlg2
mov
mov
mov
gs
jl
out
xchg
adc
je
test
orl
les
mov
test
shlb
popf
xor
mov
pop
push
or
pop
pop
scas
lahf
mov
insl
nop
xchg
loopne
mov
xor
addr16
imul
rorb
call
inc
imul
dec
fs
popa
loop
mov
dec
dec
cmp
cmp
push
xchg
loop
xchg
mov
stos
inc
stc
stc
xor
pop
adc
aas
fstpt
es
fistpll
mov
push
jb
and
xorb
inc
jns
lock
inc
jae
out
pop
js
aaa
out
dec
xorl
jmp
xchg
out
in
xchg
xchg
xchg
xor
jns
stos
jmp
xchg
scas
je
ret
mov
add
test
adc
das
sub
mov
inc
in
int3
inc
jb
inc
enter
jle
nop
shl
inc
fs
jle
loopne
pushf
sbbl
dec
nop
mov
repnz
sahf
xchg
inc
aas
dec
jo
ljmp
ret
pop
sub
lods
aas
push
aad
mov
iret
push
pop
adc
xchg
in
inc
pop
dec
jg
inc
in
test
rcrb
jnp
dec
sub
and
pop
cltd
aaa
inc
mov
out
dec
call
and
mov
mov
xor
sbb
cmp
cmpsl
jb
dec
es
dec
push
shll
int3
adc
fcos
pop
and
dec
inc
sbb
pop
sbb
sti
imul
mov
mov
bound
dec
xor
mov
dec
insb
jae
xchg
adc
bound
sub
enter
pop
pop
push
mov
xchg
mov
or
lret
mov
jo
push
cmp
pop
or
mov
movb
std
ljmp
xchg
popa
fcmovu
sbb
imul
mov
adc
negl
bound
adc
push
mov
mov
mov
mov
loopne
dec
cwtl
out
push
aam
scas
daa
imul
dec
fstpl
cwtl
shrb
shlb
test
test
push
lock
mov
push
pop
stos
push
push
subl
pop
sbb
cmp
mov
rclb
push
into
adc
pop
push
rcrb
in
int3
lret
test
fwait
out
enter
and
test
out
loope
jl
xor
and
addb
mov
and
fldl
jbe
pop
daa
pop
adc
and
sub
les
leave
iret
insb
fnstcw
cli
imull
jg
push
jmp
imul
push
ja
lret
test
test
add
lods
test
scas
push
and
std
xor
pop
mov
gs
cmpsb
leave
jp
cld
pop
mov
les
in
aam
jl
xor
sub
xor
addr16
shr
inc
rolb
jecxz
adc
and
outsb
xlat
mov
cmpsb
and
sbb
js
nop
dec
xor
adc
shlb
lods
dec
pop
push
mov
mov
fwait
imul
jle
movsl
dec
and
push
stc
vmovaps
std
push
aad
sti
ljmp
push
mull
jg
sbb
ds
adc
mov
xchg
mov
mov
mov
sbb
test
fbld
fdivl
das
xchg
dec
cmpsb
dec
rcll
inc
fbstp
inc
jl
test
divb
bound
in
imul
insb
mov
push
aaa
out
stos
imul
pushf
sahf
dec
push
stos
addb
mov
stc
aas
addl
fs
jmp
dec
stos
in
push
jne
fisttpl
stc
fwait
movsl
dec
test
adc
ret
mov
lret
or
inc
stc
ds
clc
xor
insl
mov
sbb
pusha
test
out
ret
jo
cmpsl
adc
mov
cmp
jne
mov
js
jmp
mov
sbb
xchg
aad
fsubs
rcl
adcl
into
lret
mov
jp
lea
pop
aam
stc
dec
movl
and
and
add
adc
shll
lret
sub
loope,pt
mov
sub
das
fstps
fidivl
sub
xchg
sub
nop
decl
daa
cmc
mov
push
bswap
xchg
out
dec
clc
test
adcl
jb
stc
popa
adc
and
xor
adc
js
mov
xchg
dec
or
ret
jne,pn
aaa
sbb
inc
cmp
and
in
fistl
push
mov
cltd
push
movsb
or
imul
insb
sarl
addr16
adc
mov
sahf
test
push
test
clc
inc
mov
pop
sbb
xchg
popf
push
out
push
mov
les
mov
and
mov
push
sub
sar
adc
scas
cmpsb
mov
push
clc
movsb
dec
dec
repnz
sbb
push
mov
cmpsl
loope
rcll
inc
or
pushf
sbb
sarb
xchg
imul
in
adc
mov
mov
lock
push
test
lret
and
sbb
loop
jmp
inc
fcomps
movsl
push
cvttps2pi
ds
inc
in
xchg
push
and
dec
pop
fs
out
sti
lock
ja
mov
jne
add
leave
out
adc
rolb
stc
xchg
mov
xrelease
adc
lcall
sub
push
dec
les
adc
add
movsl
mov
push
and
into
mov
movl
loopne
loop
rcrl
pop
inc
sbb
sub
lret
aad
sub
cmp
sbb
dec
cmp
lea
mov
daa
push
cmpsb
shll
dec
jns
notl
dec
pushf
call
inc
dec
xchg
addl
in
xor
fisubrl
enter
pushw
lcall
adc
js
out
mov
mov
mov
add
xchg
mov
mov
pop
es
inc
vmaxss
lahf
inc
icebp
dec
push
outsl
xor
jae
repnz
xchg
cmp
mov
add
cmc
je
outsb
cmp
in
mov
fcoml
fisttpl
sub
xor
lret
les
mov
push
pop
lods
lcall
push
imul
mov
pushf
ret
push
push
adc
mov
xchg
addr16
jne
popa
imul
sub
mov
inc
pop
mov
xor
fnstcw
cmpsb
fdivr
pop
pop
sub
sbb
or
mov
jmp
fsts
add
xchg
dec
dec
inc
push
icebp
push
inc
cli
popf
enter
and
cmpsl
push
sub
gs
mov
jne
adc
inc
scas
loopne
or
lahf
lcall
test
adc
imul
push
stos
daa
cmp
enter
lret
add
inc
inc
pop
cli
cmp
mov
pop
sub
cmovnp
lret
xchg
insl
std
jmp
jl
inc
push
hlt
xor
ss
fldt
stos
push
sub
push
or
inc
push
add
shrl
mov
cld
jle
inc
ss
insl
and
call
rcll
movsb
fst
jae
mov
rclb
xor
popa
mov
shl
jecxz
jae
rclb
adc
xchg
jns
bound
imul
aas
jo
xchg
imul
aaa
xchg
adc
add
add
testl
mov
scas
mov
pusha
roll
jbe
ffreep
call
jl
lcall
outsb
add
dec
in
cmp
push
mov
mov
sbbl
sub
and
sbb
pop
adc
call
xchg
xchg
mov
loope
and
xlat
dec
iret
cld
xchg
dec
bnd
dec
int
push
dec
iret
mov
out
xchg
hlt
jne
imul
pushf
jmp
jecxz
and
jge
loope
push
mov
das
test
out
verr
jns
xor
mov
push
mov
daa
mov
pop
test
loopne
xchg
out
lods
int
jo
shrl
jle
inc
jns
and
rcll
insl
jmp
inc
xor
xchg
scas
popl
and
adc
mov
loope
sub
aas
dec
xor
shrl
cmp
xorl
sti
pop
push
jbe
push
leave
lret
sbb
addr16
addr16
jp
mov
push
rclb
cmp
pop
in
mov
push
mov
in
cwtl
das
add
jbe
ret
pop
mov
xor
and
add
sbb
sub
pop
into
fcmovnbe
pop
test
dec
sub
leave
xor
data16
dec
xchg
add
cmp
enter
dec
aaa
rcr
sbb
mov
mull
sub
cltd
leave
aas
push
xchg
add
xor
sub
test
movsb
jb
or
ret
pop
and
aam
pop
mov
add
cmp
cmp
mov
mov
inc
jg
add
xchg
aad
outsb
or
xlat
jle
mov
push
sub
notl
in
repnz
loope
pushf
loopne
adc
jg
enter
sbb
fiadds
adc
adcb
or
or
cmpsl
add
pop
xor
mov
sub
add
sub
jnp
mov
cmc
jle
pop
or
xlat
call
dec
test
mov
fdivs
jp
cmc
fwait
push
bound
xchg
push
push
insl
xchg
add
sbb
or
xor
ret
mov
pop
or
dec
arpl
mov
pop
inc
mov
mov
fstl
pop
xlat
adc
and
pop
subb
inc
decw
into
dec
insb
movsl
orb
negb
mov
sub
lods
hlt
adc
imul
data16
and
dec
xchg
sbb
adc
sti
add
and
fsts
imul
lods
pop
pushf
repz
stos
mov
fwait
into
lret
subl
inc
sub
ret
jb
add
loop
push
xor
rcll
pop
mov
pop
rcrl
inc
mov
sbb
or
scas
lods
cltd
pop
pop
add
add
incl
in
and
mov
lret
jb
add
repz
cmpsl
fs
fisubrl
ret
dec
jns
orb
jne
cmpl
fs
xchg
mov
out
cmc
push
xorl
jno
add
lahf
push
daa
adc
add
or
push
mov
or
cmp
test
push
mov
cmp
fwait
pop
sbb
xchg
push
xchg
out
rorb
fwait
rcl
fwait
int
xchg
mov
xorb
cmp
sbb
add
mov
xchg
pop
and
push
fildll
xchg
xchg
adc
mov
inc
aaa
adc
sub
ret
fisubl
hlt
jmp
dec
ficompl
xor
push
push
ds
cli
jb
rcrl
push
imul
outsb
mov
sub
fldcw
xchg
pop
mov
pop
dec
pop
fst
sub
inc
mov
push
pop
sub
call
push
sti
xor
inc
movsb
inc
fisubrl
scas
add
and
inc
in
xor
push
cmp
mov
sub
not
xchg
sti
push
es
ss
xchg
pusha
xor
rcl
pop
dec
dec
inc
int3
int
jns
fcmovnbe
sub
out
mov
ret
js
and
dec
jle
lret
push
sbb
idivb
lret
mov
fs
sbb
mov
xor
jnp
push
pop
fnstsw
sbb
add
fisubl
orl
mov
push
jge
repz
and
shlb
fcmovnu
fisubs
dec
add
loopne
and
inc
cmpsl
cli
mov
scas
mov
and
mov
pusha
xchg
mov
and
add
mov
inc
mov
daa
leave
cmp
cmp
dec
pusha
dec
pop
sub
rorl
sbb
ja
int
inc
fsincos
sub
rcrl
repnz
ret
add
lock
arpl
sbb
sahf
xchg
dec
stos
mov
xlat
mov
jno
cs
aam
pop
fsubrl
jp
and
lock
mov
or
cmpl
dec
ret
ljmp
ret
leave
pop
std
or
and
push
xchg
mov
out
xor
stc
inc
inc
mov
mov
pop
mov
fcompl
stc
inc
dec
mov
test
jno
sar
adc
push
loop
int
xchg
stos
jno
pop
xchg
das
into
cmpsl
scas
lcall
push
sub
imul
fwait
jmp
mov
sbb
and
stos
cmp
mov
pop
cmp
aad
inc
fildll
mov
adc
mov
push
jo
dec
imul
fldl
dec
imul
xchg
inc
jne
jle
cmp
test
cmp
sbb
mov
xor
and
inc
xchg
fbstp
add
and
jp
das
cs
enter
ret
loopne
ret
movsl
rcr
call
pop
push
shlb
mov
add
sbb
jbe
hlt
aas
pop
jno
jmp
mov
sub
int
adc
nop
push
mov
adc
aas
leave
push
add
inc
push
jnp
push
les
and
mov
xor
push
dec
cmp
dec
dec
inc
fldt
lock
gs
jo
fldt
pop
cmp
and
sbb
in
divb
leave
or
sti
push
push
mov
movsb
orl
clc
dec
dec
sbb
stos
dec
loopne
cmpsl
sbb
loope
ret
pop
jnp
fiadds
int3
lret
loope
stc
and
std
addb
shrl
mov
cs
and
cmp
addr16
adc
test
and
jp
rolb
popf
mov
xor
sub
fcmove
push
test
data16
fstl
mov
pop
push
call
xlat
dec
jg
pop
jl
jmp
push
jne
sbb
xchg
lret
loope
jle
arpl
jne
mov
inc
aam
aas
int
inc
mov
dec
mov
addr16
pop
pop
scas
imul
add
test
stos
pop
shll
push
outsb
inc
popa
fxch
xchg
arpl
cli
std
sub
fisubl
fpatan
mov
inc
repnz
ja
xchg
bound
in
xlat
lcall
push
fwait
movsl
outsl
leave
adc
lods
out
cld
xchg
cmp
dec
mov
lahf
incb
test
jmp
dec
pop
mov
fcomps
mov
testl
cmp
lahf
push
movsl
loop
bound
divl
xor
ss
lahf
push
add
or
mov
and
add
pop
add
jp
imul
jmp
pop
push
aad
dec
push
in
xlat
jg
mov
lea
xchg
out
mov
jbe
jb
mov
xchg
arpl
fdivl
lret
pop
and
sbb
push
push
lods
add
dec
push
mov
add
and
rclb
in
fisubrs
jbe
enter
xchg
push
jle
call
pop
jb
inc
dec
bound
andb
cld
cmp
insb
mov
in
pop
pop
mov
in
or
xchg
mov
enter
mov
pushl
in
mov
popf
aam
sub
test
in
jmp
fisubrs
adc
inc
jnp
movl
fiaddl
ja
je
imul
insb
repz
popa
xorl
cmc
cmc
iret
or
flds
mov
cmp
shr
ljmp
jnp
jp
xor
xchg
out
fbld
pop
rcll
shrl
js
push
inc
jl
xor
cmp
xor
in
test
pop
pusha
push
mov
addl
flds
adcl
xor
or
pop
fnstcw
int3
and
push
int3
lods
jne
movsl
add
sahf
fmull
les
and
test
inc
insl
repnz
pop
sbb
sub
je
adc
or
xchg
xchg
xor
adc
hlt
jge
mov
mov
stos
adc
shr
fimull
scas
cld
stos
int
movsb
lods
scas
in
sbb
mov
cmp
add
aas
inc
add
js
inc
outsb
sub
data16
data16
and
jne
pusha
sub
jnp
xchg
push
xor
js
push
xchg
orb
or
out
cwtl
and
lods
dec
shr
push
ja
out
jmp
fsubrs
movsl
ljmp
rolb
aad
mov
pop
mov
jp
repz
sti
xlat
ret
loop
mov
adc
popa
popa
push
loop
adc
ljmp
or
pushf
push
mov
pop
xor
xorb
repz
test
imul
sar
aad
jnp
int3
sbb
imul
and
or
cmp
sbb
imul
lods
cmp
sbb
mov
push
cmpb
dec
leave
bound
xor
stos
jmp
das
movsb
orl
xor
cs
xchg
and
les
pop
and
fcmovnu
push
sti
enter
push
jns
dec
adc
out
dec
imul
lcall
adc
testl
pop
lea
jns
xchg
cld
cmp
jo
xchg
cmp
jae
pop
inc
es
lods
sub
shl
rorl
fistl
pop
aad
rorb
push
enter
dec
icebp
cmp
pop
jp
pusha
mov
insl
das
and
xchg
mov
cmpsb
sbb
adc
or
cmp
scas
cmp
mov
scas
sub
pop
std
test
es
xor
mov
pmullw
aad
and
mov
add
inc
cmc
out
xchg
idiv
arpl
or
sbb
loop
outsl
popf
in
jae
xchg
or
adc
gs
mov
xor
inc
stos
and
daa
mov
dec
xlat
not
enter
dec
mov
and
out
jg
push
ljmp
icebp
pop
repnz
mov
xchg
sbb
mov
mov
pushf
mov
mov
fdivs
mov
pop
and
loope
lea
ds
cmpsl
out
pop
mov
inc
inc
das
adc
and
pop
inc
mov
or
sub
sub
or
pop
arpl
shll
test
inc
insl
mov
mov
push
sub
aad
inc
sub
dec
stos
int3
sbb
int
jle
sbb
dec
mov
loop
push
ret
jp
or
jo
pushf
out
pop
jl
jl
push
imull
jmp
lods
or
adc
or
ret
pop
cmp
incl
repnz
cmp
stos
fcomip
and
dec
bound
xor
js
fisttpll
and
fidivl
into
pop
xchg
mov
push
bound
mov
sub
ret
inc
shr
stc
inc
insl
das
int3
loope
fnsave
push
cltd
movsb
mov
and
lds
enter
int3
out
iret
fs
ror
jo
jbe
fstpl
mov
mov
hlt
rorb
push
cmp
sbb
add
add
inc
mov
adc
arpl
in
data16
dec
xchg
lods
add
out
cltd
xorb
jae
lret
je
sub
xor
inc
fldcw
add
mov
popa
sub
int
pop
hlt
cmp
jge
test
push
insb
lret
add
jno
jp
sti
idivl
adc
imul
mov
popa
add
cmc
pop
push
or
xchg
push
nop
adc
sub
or
mov
pop
cmpsl
xor
sub
je
insb
fadds
aam
data16
inc
pushl
mov
xor
cli
sub
cmc
jbe
sub
pushf
inc
push
cmpsl
mov
push
xor
pop
xchg
ret
adc
lahf
add
std
clc
sub
mov
push
jnp
xchg
push
pop
aas
mov
mov
mov
cmpl
push
dec
int3
pop
iret
stos
inc
xor
pop
inc
sbb
or
jae
push
xchg
cmp
push
mov
sub
cmp
sbb
xchg
and
mov
das
in
mov
ret
adc
std
fstpt
xorb
arpl
cli
mov
outsb
mov
lods
out
inc
fwait
outsl
sti
adc
jg
cmp
cmc
inc
jle
sti
adc
mov
pop
data16
mov
test
pusha
adc
insl
xor
cmp
adc
test
rcrb
jge
dec
cmp
repnz
std
mov
cmpsb
dec
mov
rcr
inc
push
inc
lods
dec
mov
jnp
insb
ja
and
popf
outsb
sbb
orb
in
in
pushf
xchg
pusha
push
shll
xchg
cmpsb
or
add
xchg
cmp
and
xor
imul
and
insl
add
adc
daa
fldl
into
aad
add
xchg
clc
xor
orb
push
fistl
pop
pusha
imul
insl
pusha
sbb
shl
dec
push
imul
dec
mov
xor
adc
xchg
test
sub
xor
pop
mull
jl
out
ret
mov
inc
push
pop
test
dec
inc
jo
ret
and
je
xchg
sbb
gs
addr16
lds
cwtl
jecxz
add
add
mov
jl
add
icebp
sub
lods
aam
mov
add
xchg
xchg
enter
push
dec
testl
ret
lds
jle
int
pop
push
mov
popf
imul
mov
in
in
inc
pushf
xchg
mov
xchg
aaa
push
xchg
outsb
push
add
cmp
aaa
inc
fisttps
sub
xor
jle
shll
fsubrs
pop
je
or
dec
jae
jl
inc
dec
lret
inc
outsl
add
cmp
and
fdivrl
in
sbb
leave
fcoms
or
test
xchg
xchg
in
or
and
mov
iret
insl
mov
xor
and
fidivs
dec
test
push
mov
aad
or
pushl
cwtl
ds
repnz
xor
xor
int
cmc
xchg
stc
fnstsw
pop
cwtl
pop
fmuls
cmp
xchg
sbbl
xchg
adc
cmp
inc
mov
int3
mov
scas
inc
xor
push
push
lds
sbb
sbb
loope
jno
fs
pop
xlat
inc
imul
inc
lock
adc
dec
jae
insl
imul
cmpb
ja
jne
cmp
xchg
adc
cmp
or
push
add
test
mov
pop
mov
push
fimull
jb
lret
xchg
dec
jbe
inc
sub
jmp
fldenv
cmpsb
je
inc
mov
outsl
jno
loop
and
bound
out
sbb
movsb
and
lea
mov
jecxz
xor
pop
sarb
xor
adcl
test
xchg
xor
pushf
sbb
dec
rcll
mulb
push
test
xchg
push
repz
pop
jl
jne
aam
outsl
loope
mov
sbb
lods
sbb
cmpl
adc
mov
movsl
mov
mov
add
mov
mov
jns
jg
cmp
dec
mov
inc
pop
fsts
cltd
jmp
int
jp
adcl
pusha
jne
popw
push
lret
xchg
dec
test
xchg
sub
dec
xchg
push
lahf
pop
pop
inc
clc
loope
dec
bnd
or
jns
ljmp
jmp
insl
outsl
mov
loopne
fs
jmp
pop
push
test
js
mov
testb
or
stc
insb
push
mov
mov
stos
adc
and
adc
arpl
add
mov
jo
cmp
inc
cmp
push
cmp
pop
jnp
mov
movsb
and
pop
aam
outsl
add
inc
sbb
sbb
push
int
es
sahf
sbb
jle
mov
iret
sbb
sub
jmp
xchg
data16
in
aas
or
clc
sub
mov
push
ret
push
xorl
nop
sbb
cmp
sub
dec
fbld
push
adc
push
pushf
or
dec
test
lods
bound
cmpsl
in
fucomip
sub
sbb
inc
cmpsb
xlat
sbb
cwtl
mov
cmp
repz
mov
sub
lods
mov
and
sahf
movsb
xchg
aaa
xchg
scas
push
xlat
mov
dec
dec
mov
lret
dec
imul
mov
dec
mov
inc
movaps
mov
pop
xchg
lcall
out
sbb
testl
out
sub
jg
scas
mov
pop
repnz
fnsave
loopne
popa
jo
dec
dec
or
or
jle
mov
add
jb
ljmp
inc
popa
push
and
jl
das
data16
dec
arpl
aad
or
xor
jae
xchg
mov
sub
jecxz
shl
push
mov
sub
inc
scas
pop
popf
push
adc
movsl
adc
jne
jmp
sub
aaa
inc
std
mov
int
lret
jb
js
cs
mov
mov
or
and
and
das
cmp
pop
push
mov
adc
mov
push
xorb
mov
aaa
fdivr
ret
cmp
movsl
push
je
pop
int
repz
cmp
rorl
pushf
insl
jae
mov
or
push
xchg
imul
in
push
lds
jns
adc
or
xor
mov
sub
push
out
jmp
adc
outsl
inc
gs
push
inc
hlt
dec
movsl
cwtl
add
in
leave
out
inc
jnp
mov
jle
push
mov
mov
enter
add
das
scas
shlb
sbb
mov
mov
rolb
jl
inc
insl
cmp
das
imulb
xor
fcoml
adc
dec
push
dec
jecxz
sarb
sbb
sbb
mov
test
mov
mul
add
add
stos
sbb
or
cmpsl
scas
mov
cmp
mov
mov
sub
mov
and
js
fwait
sub
shlb
loop
es
mov
int3
xchg
test
jge
stc
add
cli
adc
or
push
mov
inc
fwait
jb
mov
pop
adc
adc
mov
dec
or
sub
sti
cmp
mov
cltd
mov
jns
out
pop
push
arpl
cltd
int3
adc
test
pop
and
leave
aaa
xor
test
ja
js
lcall
mov
pop
sub
mov
std
mov
adc
dec
clc
sub
jl
mov
pop
jb
mov
rclb
movsl
push
xorl
and
mov
rol
sub
sahf
sub
imul
cltd
push
ljmp
xchg
ret
jnp
mov
or
or
pop
mov
fldt
pop
data16
mov
movsl
repz
orl
pop
data16
leave
ja
negl
dec
pop
daa
in
adc
add
add
loope
or
jns
mov
mov
test
sbb
push
add
pop
and
sbb
mov
sbb
pop
clc
mov
xor
stos
inc
test
daa
enter
xchg
inc
or
push
test
add
ljmp
xchg
in
sub
loope
push
sub
and
rcrb
rolb
adc
pop
int
push
inc
sub
xor
mov
fildl
xchg
and
ret
dec
andb
jbe
sbb
xchg
cltd
add
mov
pop
inc
jp
call
sbb
incb
addb
sbb
idivb
xchg
jg
mov
imulb
push
shlb
sub
fbld
das
inc
xchg
dec
dec
mov
iret
push
insl
pop
cld
int
xchg
std
fidivs
xchg
imul
xor
leave
loopew
rcrb
loopne
test
enter
imul
scas
sub
lcall
stos
stc
iret
cmp
sub
cmpsl
cmc
daa
sbb
fucomp
fnstsw
push
lcall
test
adc
push
in
jno
push
mulb
loop
outsl
xchg
aaa
xchg
in
scas
lahf
push
sbb
in
pop
jnp
cltd
aas
in
sbb
jae
pushf
rcrb
push
icebp
ja
or
data16
push
pop
mov
shrb
std
movsl
movsb
fstps
shlb
into
push
dec
pushf
jp
add
jae
cmp
cmc
pop
sti
out
jg
arpl
iret
jbe
cmp
sbb
xchg
xchg
jge
out
sbb
or
decl
cmp
jo
lret
jge
test
loop
es
out
push
fsubs
loope
xchg
pop
popf
int3
adc
lock
inc
add
inc
sbb
push
add
mov
inc
imul
dec
sub
fiadds
loopne
lahf
xchg
nop
pop
mov
pusha
jne
adc
jno
cmp
and
xor
cmp
pop
and
cs
jae
fcoml
pop
jle
call
into
cmc
push
and
lahf
mulb
mov
clc
loop
ljmp
enter
loop
ret
loopne
push
xchg
mov
cmp
mov
inc
add
stos
xor
xor
push
pop
fwait
pop
sar
push
movsb
int
inc
das
inc
ret
dec
outsl
push
rorb
clc
inc
enter
and
mov
inc
shl
imul
inc
insb
sbb
mov
pop
adc
mov
add
and
hlt
adc
mov
lret
xchg
mov
pop
xchg
mov
test
xor
push
dec
lret
test
push
adc
jp
rcl
icebp
dec
jg
mov
push
rcll
adc
rcl
and
mov
sub
add
and
scas
enter
daa
push
mov
pop
outsl
or
in
push
push
ret
aad
shll
js
call
jl
addr16
push
jbe
xchg
sbb
adc
test
mov
outsl
adc
mov
mov
mov
mov
lods
pop
push
cmp
cmpsl
movsl
push
scas
and
xor
pop
or
popf
fcoml
pop
cwtl
int3
cli
dec
rol
jge
inc
rcr
jg
ret
rol
sti
inc
call
insb
pop
jl
sbb
jbe
inc
xchg
jno
jnp
pop
out
xchg
sub
daa
jp
iret
adc
xchg
test
nop
cmp
push
shl
sub
and
and
fsts
lcall
fcoms
pop
mov
pop
lret
nop
dec
repz
inc
mov
cli
jmp
jl
nop
test
enter
aaa
push
shlb
or
sbbb
enter
mov
and
cmp
adc
stos
adc
scas
sub
ret
movsb
flds
sti
fisubs
inc
mov
call
xchg
and
jo
adc
add
out
lods
ss
sbb
call
imul
xchg
or
dec
sub
scas
fnstenv
sti
imul
inc
aas
dec
dec
jne
xchg
enter
ret
sar
jge
rcrb
shll
shll
shrl
mov
iret
mov
les
repz
xor
ret
std
cs
das
pusha
lcall
stc
adc
out
aas
mov
mov
mov
xor
and
stos
stos
or
andb
ret
pop
fdivs
sti
rcll
push
push
repz
dec
or
fdivr
cmc
push
jg
insl
div
popa
in
outsb
outsb
mov
push
pop
adc
pushf
mov
xchg
xchg
adc
xor
addl
add
sub
stos
stos
aam
scas
lods
sub
and
faddl
ret
inc
dec
cld
jp
sti
ret
inc
shll
lahf
jo
fdivr
fwait
push
scas
or
or
orl
and
roll
add
add
mov
pop
fbstp
sub
cmpsl
cmpsl
arpl
shlb
fistl
pusha
xor
and
sahf
jae
ret
imul
rcrl
cld
mov
int
mov
sbb
fs
adc
mov
aad
movsl
pop
mov
and
inc
pushf
mov
mull
aad
cmp
sub
lods
push
xchg
mov
and
das
in
xchg
lret
and
in
dec
mov
into
cli
mov
imul
jno
popa
popf
loopne
in
inc
pusha
xchg
js
mov
outsl
ds
xorb
stos
mov
mov
fidivrl
mov
rorb
ret
sub
push
mov
adc
stc
jnp
add
xchg
mov
dec
popf
loopne
lock
lods
mov
arpl
mov
ja
aaa
xchg
arpl
lcall
push
sub
dec
mov
mov
mov
add
mov
loopne
sti
mov
xlat
mov
jle
pop
loope
add
pop
out
xchg
les
inc
int
jbe
shlb
add
ljmp
sub
xchg
mov
mov
iret
adc
into
jae,pt
cmp
cli
mov
stos
out
negb
push
add
sub
cmp
stos
dec
mov
inc
out
cmpsl
sub
stc
ret
xor
inc
push
div
mov
out
jbe
xlat
pusha
adc
add
adc
push
adcb
sbb
push
jge
or
loop
cmc
mov
test
pop
and
movsl
xor
and
sub
jne
stos
xchg
shlb
push
fisubrl
jl
out
fisttpll
fcmovb
dec
sbb
leave
add
sahf
adc
repnz
out
xchg
mov
mov
addr16
insb
in
mov
adc
and
das
sub
cmpsl
mov
adc
divb
and
mov
dec
push
popf
test
cmpsl
lret
cmc
pop
inc
xor
les
loope
inc
sub
ret
mov
push
xchg
push
out
jae
dec
cmc
mov
lcall
jne
mov
fstpt
test
mov
das
orb
sub
cmp
and
or
cld
sub
and
mull
push
es
movsl
dec
iret
inc
bound
push
sbb
stos
xchg
xchg
push
incl
fwait
mov
jge
jo
std
hlt
scas
stos
mov
ljmp
or
push
sbbl
add
dec
fs
scas
cmp
xor
filds
es
lret
cmp
pop
cli
int3
xchg
aaa
inc
push
push
push
inc
dec
push
mov
jmp
inc
jns
mov
xlat
ret
mov
pushf
fwait
imul
mov
push
sub
test
mov
or
test
cmpb
fidivrs
and
mov
fsubrs
movsl
push
adc
pop
lahf
or
cwtl
je
clc
inc
push
movsl
decb
ss
cld
cltd
nop
iret
or
pop
loope
mov
adc
xchg
sbb
cmpxchg
add
ss
mov
out
dec
cmpsb
lods
notb
mov
jle
dec
stos
dec
inc
rcl
lods
jle
dec
xor
xor
js
mov
ret
stc
insb
add
lahf
mov
pop
sbb
xchg
lock
pop
popf
push
mov
hlt
xor
mov
cmpsb
fadd
imul
pushf
jp,pn
pop
fists
stc
and
push
mov
and
lods
jge
or
lret
inc
sti
mov
es
int3
adc
sub
gs
sbb
sbb
pusha
and
sbb
mov
in
sub
xor
push
pop
pop
aas
pop
jae
enter
jp
inc
cmc
aam
dec
repnz
pop
inc
jle
jns
gs
xchg
ja
hlt
imul
test
lahf
adc
adc
mov
int3
fs
in
bound
sbb
aas
cmp
mov
push
and
sbb
sbb
fs
mov
hlt
or
mov
inc
add
test
jp
shll
pop
loope
dec
mov
clc
cmp
iret
push
bound
nop
das
jbe
push
adc
cmpsb
mov
push
lods
ds
call
xor
daa
cmpsl
fcmove
xor
fsubs
xchg
push
icebp
lret
es
xchg
push
sar
dec
lds
inc
ret
cmpsb
push
and
xchg
lahf
or
jecxz
addr16
sbb
or
stos
push
cmp
sysret
pop
out
adc
add
mov
fdivrl
sub
fisttpl
fcoms
testb
add
push
inc
cmc
inc
dec
fwait
sbb
pop
cltd
test
and
sbb
mov
movsb
mov
and
xchg
pop
and
add
fs
cmp
push
lods
mov
in
lock
in
mov
in
shlb
ror
shrl
jmp
push
cmp
mov
push
loop
decl
sub
dec
movsb
rcrb
jns
sub
or
push
bswap
mov
sub
mov
repnz
or
imul
lea
jmp
xchg
pop
es
ret
push
int3
inc
cmpl
fwait
jnp
imul
jg
or
out
dec
mov
je
test
ds
gs
sarb
popa
cmp
lret
mov
flds
into
cmp
lahf
repz
jge
lods
push
sbb
es
mov
xchg
jnp
ds
mov
mov
jae
ret
sti
mov
inc
ja
ljmp
popf
js
stc
adc
loope
fcoms
pop
mov
pushf
push
mov
cmp
fdivrp
pusha
enter
aaa
xor
shrb
decl
lods
jae
sahf
rcr
and
push
stos
pop
push
xlat
fidivs
inc
aad
lods
push
out
pop
js
xor
sub
jbe
out
jno
pop
adc
outsb
out
mov
xchg
adcb
xchg
mov
popl
xlat
pop
mov
jge
cmpsb
clc
sbb
shl
xor
mov
push
pusha
es
pop
sub
jecxz
xchg
fs
pop
leave
jp
add
icebp
std
cltd
mov
jae
repz
jno
sahf
les
nop
and
int
popa
mov
cmc
or
jne
cmp
push
xchg
push
call
test
lret
cmpsb
divl
push
je
rcl
loop
movsb
fstpl
rorl
mov
cmpsl
arpl
repz
cmc
xchg
xor
sbb
mov
daa
adc
mov
and
mov
push
mov
xor
push
and
aaa
pop
movsl
fidivrl
ret
cmpsb
in
dec
rclb
jae
jl
leave
inc
lahf
iret
inc
xor
jle
js
ljmp
mov
fs
add
adc
sti
xchg
inc
ja
das
pop
sbbb
adc
test
xor
adc
mov
sbb
or
jl
rclb
int
or
mov
add
test
fldl
push
loope
mov
repnz
pop
adc
push
fisubrs
inc
loopne
or
shr
mov
add
add
jge
mov
and
push
fsts
fs
ret
mov
ret
lret
sti
xchg
inc
les
bound
shll
dec
popa
dec
jbe
jmp
nop
iret
pop
loope,pn
inc
xchg
cmp
cmp
sub
inc
cli
xchg
adcl
pop
xchg
inc
mov
fdiv
and
sub
pushf
jns
cwtl
mov
int3
push
xchg
jle
or
and
mov
in
cmp
mov
and
outsl
mov
jne
ljmp
and
lods
divl
mov
xor
pop
mov
aaa
test
inc
aaa
and
arpl
push
dec
leave
cmp
mov
push
in
mov
in
gs
roll
add
cld
cmp
push
fwait
out
out
loop
push
add
or
xor
std
hlt
or
jecxz
sbb
sub
mov
int
gs
aam
and
dec
jle
ret
fisubl
or
leave
jno
mov
cld
imul
add
xlat
and
push
xchg
cwtl
cmp
out
ret
arpl
xchg
pusha
fmull
es
dec
xchg
xchg
outsb
enter
cmp
test
cmp
add
cmc
cld
sbb
sbb
push
pushf
adc
and
mov
stc
inc
dec
pop
movb
lock
movsb
adc
out
mov
xchg
mov
ds
lret
sub
add
xchg
jge
leave
stos
or
mov
mov
test
pop
jge
and
mulb
rcl
das
sbbl
pop
enter
or
insl
mov
push
loopne
jo
arpl
mov
inc
fiaddl
or
sub
stos
add
popf
xor
shrb
std
xor
sub
push
mov
mov
dec
out
sub
test
jp
hlt
jnp
les
and
ja
lahf
outsl
mov
insb
out
adc
xchg
or
cmpsb
and
addl
aaa
mov
popa
movl
inc
push
pop
aas
sub
push
das
cmpsl
movsb
loope
jno
and
jae
cltd
adc
adc
addr16
clc
inc
cmpl
jg
imul
gs
mov
sbb
fimuls
or
test
ss
mov
pop
push
inc
fistps
sbb
stos
in
into
test
lea
fdivrl
addr16
lret
repnz
pusha
sbb
loop
cltd
push
cltd
inc
call
pop
popl
or
pop
add
push
lods
mov
aad
adc
lea
pop
add
leave
push
rcl
repnz
xor
jbe
into
sub
outsl
push
push
push
mov
int
sti
sbb
mov
and
cmpsb
adcl
or
fimull
lea
mov
lret
add
and
rorb
cmp
popf
xlat
push
cltd
ss
push
stos
ljmp
rorl
lret
xor
orb
outsb
lret
ret
cli
jg
ret
inc
jle
jmp
sub
out
mov
xchg
pop
popa
sbb
cmpsl
cwtl
popa
mov
and
jno
or
incl
jns
insb
cmp
push
dec
jne
lret
das
xor
in
push
xchg
inc
rcll
fcomps
rcl
les
clc
int3
clc
xchg
std
aad
cmc
sbb
add
jmp
push
imul
repz
add
adc
cmp
jmp
in
shrb
push
lods
jne
icebp
bound
insb
inc
pusha
rcl
push
push
add
stc
mov
push
shll
dec
pop
sti
add
js
gs
cld
and
cmp
sbb
std
in
mul
push
popa
add
aas
repz
jl
test
add
mov
mov
mov
andb
jbe
xchg
xchg
sub
mov
fcoml
ss
pop
cmp
arpl
decb
jnp
jo
hlt
push
xchg
lock
jno
imul
pop
or
mov
push
fnstcw
sub
xchg
test
mov
xor
stos
mov
mov
xor
and
dec
into
and
or
cwtl
lret
and
sti
mov
jb
cs
xor
lahf
pop
cmpsb
and
mov
cmpsl
xchg
adc
aas
xor
add
adc
mov
push
dec
xchg
mov
out
and
psubusw
imul
adc
or
pushf
je
test
pop
adc
dec
mov
andb
loopne
dec
mov
jno
cmp
mov
cmpb
mov
mov
sub
push
push
and
and
mov
fdivrs
sub
int
jge
jnp
adc
xchg
testb
xorb
testl
loope
fistps
adcl
out
or
push
pop
add
enter
xor
rcrb
lret
pop
sbb
push
cmp
pop
mov
ljmp
xor
ret
mov
sbb
push
xchg
ficompl
addr16
popa
adc
out
sbb
xchg
sti
jecxz
cwtl
ja
fmuls
lds
cmp
add
mov
mov
lds
loop
pop
addr16
lret
xchg
fiadds
mov
fwait
out
dec
and
push
loope
add
jle
mov
lods
dec
ds
pop
notl
in
sub
aam
xor
inc
clc
push
jns
inc
push
push
cmpsl
fwait
and
jg
loop
popa
out
fs
push
lods
jae
dec
mov
lds
mov
pextrw
mov
testb
jl
mov
or
cltd
mov
dec
es
stos
loopne
cmp
pop
push
jl
es
les
cmpsb
popa
sbb
inc
enter
cltd
in
jae
dec
xchg
lret
in
adc
pop
ljmp
in
testb
ja
aaa
jb
mov
add
adc
test
mov
mov
and
and
aaa
push
sahf
lods
sub
dec
or
and
mov
pop
repz
lods
push
ja
in
gs
in
sub
shl
jge
push
jns
out
jae
orl
and
adcl
push
xor
lret
push
insb
cmp
pop
and
xchg
pushf
push
rolb
jge
aad
fcoml
xchg
dec
xchg
je
nop
jl
add
xchg
out
clc
add
add
popa
lods
jecxz
pop
adc
mov
cwtl
jnp
popf
movsl
mov
lcall
mov
int3
and
cmpsl
outsl
adc
xor
cmp
fdivs
dec
sbb
es
out
in
mov
fs
into
mov
mov
shlb
fcomps
imul
out
or
iret
lods
in
int
data16
in
adc
cltd
push
and
mov
clc
add
mov
xor
fxch
ljmp
inc
mov
adc
dec
std
dec
dec
dec
mov
jle
icebp
mov
lods
bound
and
cmc
xchg
and
loop
aaa
in
pushf
cltd
xchg
pop
pop
addr16
xchg
sbb
movsb
sbb
stos
dec
pop
mov
mov
stos
sub
xchg
mov
add
subl
fcom
aam
leave
push
enter
scas
xchg
inc
loopne
jp
icebp
inc
dec
and
cmp
cmp
popa
movsb
arpl
out
jae
test
pop
lahf
shll
sub
fnstcw
xchg
mov
mov
test
das
cmp
out
mov
sarb
aas
ljmp
push
loope
inc
dec
gs
add
mov
ljmp
ds
xchg
ret
adc
stc
outsb
lea
das
insb
es
daa
cld
xchg
fsubrl
lock
sahf
ret
mov
or
test
add
lcall
sbb
pop
cmp
mov
ljmp
lret
push
das
dec
inc
int
ja
inc
add
pop
mov
stos
add
jae
cmc
ja
sbb
pop
cmp
cmpb
pop
adc
mov
or
lods
fsubr
adc
add
sub
cmp
ja
mov
sub
dec
inc
lods
dec
call
jp
dec
and
test
mov
jnp
dec
push
out
jno
jnp
aaa
push
and
sbb
cmp
pop
in
insl
push
xor
dec
push
test
mov
push
adc
dec
stos
cmp
push
jge
leave
es
push
ret
pop
test
push
xchg
into
push
xchg
push
in
sbb
addr16
jl
xchg
mov
adc
in
pop
mov
arpl
mov
or
mov
xor
es
test
cmp
xor
fisubrl
stos
push
mov
ds
fistps
jbe
out
inc
pop
lret
outsb
leave
lahf
push
stos
cli
push
fdiv
and
mov
pusha
xor
xchg
fs
inc
pop
pushf
xchg
imul
inc
daa
popf
cmpsb
add
popl
mov
mov
ljmp
mov
iret
pop
jo
pop
lods
pusha
xor
sar
dec
ja
lret
xchg
xchg
and
push
movsl
shll
lds
cli
incb
imul
cltd
lds
cltd
xchg
insl
dec
lcall
pop
pop
jae
add
xchg
pop
fisubrl
pushf
fidivs
lds
dec
scas
mov
or
fsts
dec
rol
sbb
test
outsl
mov
out
dec
fdivp
rcrl
divb
hlt
das
andl
sub
sbb
xor
xor
xor
outsl
ret
or
xor
mov
aas
dec
int
fsubrp
fisttpl
fs
sbb
sahf
inc
dec
sbb
call
or
leave
mov
jo
pop
jae
mov
sbb
data16
aad
imul
push
lcall
ljmp
lret
nop
sbb
sarb
cmc
aas
stos
sub
push
sbb
movsb
gs
fnstsw
sbb
push
fidivrl
mov
outsb
cmp
sub
push
popa
or
call
mov
gs
xor
dec
xchg
das
sbb
dec
int3
pop
add
pop
movsb
sub
fidivrs
insb
mov
addr16
cmp
lret
repz
rcll
inc
mov
mov
cmp
dec
stc
xchg
jmp
outsl
cltd
scas
pop
cmp
sti
sahf
xor
pushf
subb
lea
fs
xor
mov
mov
sbb
dec
and
push
jae
mov
pop
subb
or
mov
dec
inc
jae
stos
incl
popf
rorl
and
inc
add
shrl
and
xor
adc
lahf
ja
push
rolb
pop
aam
jo
add
fnstenv
aas
jmp
xor
push
push
dec
and
mov
arpl
cli
dec
mov
xlat
xchg
sub
enter
repz
out
cli
outsb
mov
mov
lock
mov
cltd
jns
in
subl
popf
xor
mov
rcll
mov
lods
mov
pop
cmp
adc
sub
scas
dec
adc
aam
into
cmpsl
out
adc
inc
insb
arpl
xchg
sub
filds
fs
popl
mov
loop
adc
sbb
sbb
pop
push
andl
sbb
and
or
fdivs
mov
mov
iret
dec
test
sub
imul
fldt
je
data16
in
inc
ss
add
dec
repnz
in
jl
ja
jb
mov
fisubrs
lods
daa
lods
cmpsb
ja
cmpsb
xor
mov
outsl
or
rcll
stos
jle
mov
push
ror
fwait
lcall
dec
stos
in
popf
lret
inc
in
inc
add
jg
lods
xchg
push
es
xor
xorb
jnp
pushf
fistps
pop
data16
mov
push
fnstcw
mov
test
aaa
xor
sahf
aad
push
xchg
daa
rcll
jne
das
lret
add
rcrl
decl
jle
testb
jmp
sbb
stc
bound
xchg
xor
ss
popf
les
lcall
fcomi
xor
cmpsl
fidivs
adcb
int
xchg
jl
inc
cmp
push
and
rcrl
mov
rcrb
push
je
loope
pop
inc
add
mov
popf
pop
jmp
jae
sbb
adc
aas
xchg
xadd
fwait
mov
sti
and
mull
sub
mov
mov
fmuls
push
imul
repnz
push
sub
sub
dec
inc
ljmp
xchg
pop
push
cltd
out
pop
cli
cs
sbb
sbb
movl
movntq
mov
test
insl
sysret
mov
add
sub
cmp
es
add
mov
push
jae
rorl
push
add
jne
jnp
inc
sahf
setg
cli
inc
fmul
inc
popf
adc
jmp
cmove
inc
sbb
xchg
out
ficompl
xchg
out
xor
jns
push
lock
and
mov
enter
test
shrl
ds
fnstsw
jnp
inc
mov
hlt
jmp
cmpsl
jo
mov
jg
enter
sbb
addr16
iret
adc
nop
jmp
push
and
xor
mov
in
or
mov
pop
mov
adc
mov
pop
ja
es
sub
imul
jae
jp
insb
ret
mov
sbb
inc
test
aam
inc
mov
or
add
daa
cmp
add
sbb
mov
mov
fistps
shlb
scas
mov
push
mov
inc
cmpsb
dec
xchg
ret
jbe
jmp
xchg
pop
pusha
cmp
lcall
stos
xor
aam
pop
jae
xor
add
mov
das
xor
out
adc
aaa
mov
lahf
outsl
cmpsb
adc
shll
jge
into
out
ret
lret
fnstsw
enter
movsb
inc
jbe
pop
inc
js
lock
fidivs
outsb
es
mov
add
stc
rcrl
adc
lea
popf
subb
or
xor
mov
mov
cmp
push
and
int
fmul
aad
fs
or
mov
data16
div
pop
jl
mov
or
mov
jle
rorb
cmc
cld
or
pushf
popa
lret
push
add
test
add
inc
jno
icebp
dec
jo
lods
xchg
pcmpgtd
sar
pop
jmp
enter
xor
lods
shlb
mov
dec
xchg
cmp
cld
mov
adc
pop
mov
out
lahf
cwtl
jns
call
test
pop
cmc
loope
fwait
push
sub
mov
in
test
mov
mov
incl
xor
or
imul
cmp
out
aam
add
xchg
jnp
scas
adc
push
xchg
jae
and
xchg
sahf
in
loop
pop
sbb
pushf
into
xchg
jmp
das
std
bound
jecxz
testb
cmp
scas
jecxz
dec
test
mov
test
mov
jle
rorl
inc
mov
mov
into
scas
jge
iret
mov
fs
sbb
xchg
cs
cmp
jmp
jl
sbb
jbe
xchg
insl
sub
adc
xor
push
dec
int3
mov
lods
xor
cmpb
decb
test
dec
inc
lock
cmp
enter
test
ret
xchg
stc
ljmp
push
push
adc
fwait
mul
aaa
jecxz
js
mov
cmp
divl
or
test
pop
mov
cmp
xor
out
les
cs
add
shl
pop
fsubr
movsl
addr16
jmp
and
leave
imul
in
xor
mov
mov
jmp
push
in
js
test
pop
push
loope
test
mov
jbe
test
mov
imul
inc
sub
lahf
push
arpl
out
clc
and
lea
lods
fldt
jg
aam
push
inc
dec
push
mov
jle
mov
scas
bound
das
jo
div
insl
jl
adc
inc
popf
push
adc
int
add
jo
add
push
lods
cmpsb
mov
je
pop
jne
aaa
inc
daa
es
pop
stc
fidivs
imul
pop
into
fs
jle
inc
or
lret
test
int
pusha
sub
mov
mov
add
ror
mov
fldt
outsb
mov
fs
push
repz
sub
cmpsb
pop
iret
fxch
push
arpl
scas
adc
pop
push
test
lahf
mov
jp
leave
roll
mov
push
mov
orl
sbb
jg
dec
or
adc
or
js
sub
sub
mov
jg
pop
pop
dec
sub
push
leave
int
pop
into
sar
push
les
push
dec
popa
adc
inc
jno
adc
xchg
outsb
push
ja
sub
movsb
fs
imul
or
es
ds
or
inc
mov
mov
sub
pop
pop
xchg
fcomps
pop
mov
pop
shl
orl
sbb
arpl
dec
jae
mov
jne
dec
stc
xchg
in
imul
sbb
or
sahf
mov
fnstcw
fcompl
jbe
cmp
cmp
pop
sub
mov
clc
push
daa
fildll
pop
cmpsl
ret
rorb
and
push
lock
push
loopne
pop
imul
in
pusha
sahf
mov
addr16
push
mov
ret
imul
xor
mov
dec
adc
adc
lods
iret
inc
cmp
mov
mov
cmpsl
push
out
in
mov
repnz
das
ret
cli
nop
mov
in
repz
ds
imul
loop
xor
mov
xchg
mov
mov
add
push
add
jge
aas
lret
xchg
pop
sub
dec
stos
dec
sub
test
popa
and
imul
lret
dec
inc
pop
es
movsb
cmp
inc
sahf
outsl
push
std
cmc
idivl
in
testl
sub
pop
outsb
jge
loop
mov
sub
sub
add
jb
mov
push
add
push
add
clc
and
cli
cli
test
mov
insb
jg
jp
pop
sbb
ficomps
xor
jne
movsl
stos
inc
adc
jne
test
repz
jg
dec
movb
or
inc
pushf
cmp
in
test
push
xchg
std
ret
bound
and
xchg
cmp
mov
movsb
pop
pushf
pop
nop
popf
rcll
scas
sbb
popa
rcll
hlt
clc
inc
pop
cmp
push
jnp
sbb
fdivr
popa
mov
loopne
pop
cmovb
adc
ds
xchg
popf
ss
adc
movsb
mov
fdivp
mov
jnp
pop
inc
shlb
movsl
repz
lahf
fisttpll
inc
enter
nop
aad
pop
mov
stc
jmp
shrb
jbe
sbb
mov
push
mov
and
daa
sbbl
push
or
push
adcb
pop
scas
in
data16
mov
add
inc
adc
lret
in
pop
mov
in
inc
outsl
push
sub
inc
fisttps
mov
dec
mov
inc
dec
mov
pop
jb
mov
sbbb
loope
loope
pop
adc
pop
dec
or
iret
adc
sub
and
push
mov
loopne
and
or
cmp
and
lret
in
push
in
cmc
ret
pop
inc
adc
jl
data16
cmp
loope
fs
cmc
lods
popf
stc
add
inc
xor
xchg
test
add
in
cmp
enter
xor
pop
mov
movsb
mov
sub
bound
clc
out
mov
dec
cmpsb
xchg
inc
or
add
add
icebp
jl
sahf
hlt
jno
nop
imul
popf
and
cltd
aad
mov
mov
adc
xchg
pop
and
sbb
loop
jb
xor
cs
das
cmp
aad
inc
aaa
iret
pop
nop
inc
in
lods
inc
mov
dec
and
cwtl
cmc
in
mov
dec
call
cmpsb
popf
pop
pop
push
test
xor
pop
lcall
jae
cmp
jne
cmp
das
pop
lret
mov
fcomp
popf
js
hlt
or
mov
sbb
fmuls
test
sub
shlb
aaa
inc
dec
mov
orl
push
gs
sbb
arpl
insb
mulb
sbb
in
push
pop
loop
pop
fwait
jp
scas
movsl
mov
mov
xor
and
adc
and
jg
sbb
aam
loop
pop
sahf
push
or
jnp
repz
dec
xchg
jbe
outsb
jle
mov
std
jno
xor
or
adc
mov
cwtl
inc
gs
or
mov
fildll
pop
mov
xlat
mov
push
lahf
sub
push
dec
iret
pop
add
lds
push
xchg
mov
cwtl
xor
mov
popa
addr16
loope
adc
sbb
lds
cld
fiadds
push
lahf
std
add
sbb
or
sbb
mov
xlat
cmp
hlt
stc
mov
fs
sub
pop
loopne
fbld
lods
in
rclb
dec
aad
repnz
jge
jno
pop
pop
mov
rcrb
idivb
out
cmp
sbb
and
sub
sub
and
or
mov
cmp
jge
test
push
test
xor
sti
add
insb
dec
outsl
dec
jle
xchg
jle
jl
shll
sahf
test
xchg
cmpsl
fdivrl
in
das
jecxz
or
push
push
jae
lret
cmp
dec
pop
mov
enter
cwtl
sarl
adc
xchg
push
outsl
mov
jnp
mov
pop
aad
mov
nop
loopne
mov
add
jo
aaa
out
pop
cltd
adc
in
jae
daa
daa
add
bound
xchg
mov
je
cmpsb
aad
sub
xchg
movsb
mov
adc
jge
push
jle
pop
bound
cmp
mov
lret
fcompl
inc
int3
inc
call
lahf
fcoms
xor
lea
or
cltd
adc
push
arpl
adc
das
mov
pusha
push
sbb
mov
add
ljmp
push
push
dec
fnstcw
pushf
push
jnp
leave
lret
ret
xchg
push
mov
popa
mov
test
loope
and
insl
movsl
jb
cltd
mov
inc
hlt
mov
xlat
pushf
out
mov
cmp
sub
add
ret
int3
in
popf
sahf
push
mov
test
lods
inc
mov
jb
scas
push
insb
mov
fidivrs
xchg
dec
push
ffreep
cmp
out
cmp
adc
xorb
loope
cs
mov
jo
sbb
mov
add
arpl
sahf
add
movntps
orl
mov
add
loopne
cmp
xchg
cmp
xlat
test
shrl
mov
out
xorl
jnp
sbb
lods
sub
jb
pop
imul
lret
outsb
mov
add
xchg
ret
xchg
in
add
pop
or
mov
pop
xchg
mov
test
rclb
xor
dec
push
in
sub
push
fwait
aad
stos
dec
inc
ret
add
ret
lea
es
cmp
insb
dec
out
xor
ret
aam
jl
push
lcall
dec
rcpps
pop
dec
nop
aad
lea
xor
dec
xor
pop
xor
test
scas
pop
fcmovne
mov
xchg
aad
mov
push
or
rcrl
mov
in
stos
inc
jne
dec
in
lcall
ljmp
pop
sbb
sbb
mov
xchg
mov
fdivs
scas
add
mov
xlat
js
daa
push
lret
mov
jl
in
or
mov
out
mov
or
ret
test
and
data16
out
xchg
mov
add
mov
xchg
sahf
mov
icebp
mov
cmp
and
pop
inc
cmpsl
lret
dec
pop
fsubrl
movsb
fdiv
mov
inc
ret
insb
jmp
jns
inc
inc
fucom
imul
jmp
inc
int
out
xlat
xor
dec
dec
stc
sbb
jl
addb
mov
lahf
bound
pop
mov
mov
ret
sub
adc
mov
or
out
mov
xchg
dec
out
dec
pusha
mov
popf
hlt
mov
loope
idiv
mov
js
in
sbbl
xchg
clc
mov
scas
dec
cmp
subl
test
adc
lcall
sub
hlt
inc
fldt
fcmove
testb
inc
cwtl
sub
repz
ret
cmpsl
imul
fistpl
out
movl
enter
mov
in
mov
js
mov
loopne
xchg
lock
cmp
inc
scas
aad
lahf
mov
fcoms
and
stc
sub
fisttpl
jg
push
mov
sti
mov
or
repnz
xchg
outsb
add
loopne
xor
ficomps
xchg
test
mov
or
fldenv
xor
mov
add
ficompl
dec
scas
andb
dec
fistpll
scas
lds
pop
fstpt
and
notl
repz
ret
mov
ficomps
pop
fidivl
ja
jnp
sbb
repz
mov
sub
rcll
setg
movsl
xor
test
mov
and
aaa
enter
mov
mov
clc
pop
fsubrp
inc
fidivl
dec
outsb
mul
clc
fidivrs
mov
mov
push
cmp
push
pusha
inc
imul
push
lahf
out
or
add
fidivrs
aad
jo
cmp
shlb
pop
jg
rolb
test
xor
rcl
push
dec
fcomp
test
push
lret
imul
jl
jle
pop
outsl
sbb
ds
cmp
popa
add
or
aaa
xchg
dec
sub
nop
sub
lret
out
cmp
lea
fildll
sub
stc
mov
rcrb
dec
dec
fcoml
idivb
js
and
imull
mov
xchg
outsb
push
arpl
lea
and
mov
pop
dec
push
stos
sbb
xor
inc
mov
xchg
lea
fwait
and
mov
stc
test
cmp
dec
jp
xchg
xor
jmp
dec
shll
adc
lea
dec
dec
ret
out
movsl
popa
cwtl
jb
lods
loope
cmp
sub
sbb
or
imul
subb
adc
pop
cmp
test
movsb
push
mov
aam
or
ficoms
jecxz
movsb
lcall
inc
push
shrl
sti
int
cmp
xchg
idivb
mov
popf
sbb
sbb
popa
nop
xchg
push
fldt
je
inc
sub
jo
sbb
lods
cmp
addl
repz
imul
dec
cmpsb
mov
push
inc
push
cli
call
rolb
addl
into
mov
mov
insl
jo
popa
or
pop
push
push
mov
mov
dec
out
sub
push
int3
mov
imull
movsb
sub
arpl
xchg
fsts
xchg
mov
mov
or
mov
jmp
iret
mov
mov
mov
adc
sub
mov
shrl
mov
aam
add
sub
mov
add
add
xchg
pop
leave
insl
mov
sub
ret
shl
xlat
dec
inc
mov
xor
push
vmovdqa
pusha
int
inc
jo
cwtl
jg
sahf
in
xor
mov
ret
jmp
pusha
xlat
add
mov
jo
add
fwait
mov
movsl
popf
cmpsb
xchg
fbstp
int
daa
or
dec
insb
ficoml
aam
mov
stos
div
enter
push
inc
jle
adc
cmpl
dec
xchg
push
jne
mov
popa
pop
int
jg
cmpsb
sbb
push
dec
test
jae
orb
sub
cld
mov
mov
cmp
add
daa
outsb
into
fsubrs
jecxz
cld
push
flds
fcomip
test
cmp
int3
negb
adc
push
jge
add
dec
inc
cmp
jnp
or
adc
or
jle
mov
fbld
cmp
inc
cmp
jae
ljmp
fstl
mov
sub
lret
into
pop
jnp
jnp
pushf
rorb
or
mov
or
sahf
push
cmc
pop
fs
dec
xchg
sbb
adc
cmc
test
pop
mov
movsl
cld
xchg
das
pusha
mov
jno
fidivrl
mov
lods
lods
rcr
sub
inc
pop
push
ffreep
jg
out
jg
adc
iret
mov
jmp
inc
and
addr16
jne
mov
lcall
shll
sahf
push
or
sub
push
hlt
in
push
mov
aaa
xor
xrstor
daa
xchg
mov
pop
std
fists
dec
jne
mov
jo
ret
les
cli
pop
nop
mov
lock
ja
fdiv
dec
loop
add
cmp
mov
pop
aam
loopne
sbbb
fsubs
shll
lods
pop
clc
mov
lods
inc
movsb
and
ljmp
sarb
inc
push
loope
push
iret
xchg
js
xor
insl
jns
sbb
jae
jp
mov
adc
pop
pop
or
adc
or
jmp
fsubrs
mov
scas
sub
xor
subb
pop
lods
mov
xchg
lret
aam
jecxz
js
push
push
pop
stc
lock
xor
jmp
in
ljmp
xchg
cmp
repnz
mov
sbb
test
or
das
js
mov
stos
cmp
mov
ds
cwtl
das
add
int3
aaa
pop
repz
sub
imul
enter
int3
in
xchg
pop
pop
pop
fstpt
leave
notb
jne
call
mov
mov
insl
pushf
aam
add
mov
fadds
add
sbb
adc
ja
sub
sub
fstps
pop
ljmp
shl
pop
stc
movsb
push
pop
std
sbb
push
dec
inc
test
sbb
lds
sbb
or
data16
data16
inc
push
daa
pop
adc
popf
jbe
rcrb
add
add
sbb
add
xchg
mov
test
test
and
jl
test
dec
push
ret
shll
loop
dec
or
filds
adc
jno
jbe
scas
jo
mov
icebp
ja
cltd
push
loop
sbb
les
xchg
push
mov
rclb
mov
cmp
adc
add
lods
les
dec
fildll
fmull
lret
mov
aas
int
aas
aas
jl
jbe
jns
dec
cmpb
lret
fisubrl
insl
jno
loope
dec
xchg
adc
lea
adc
incl
mov
mov
mov
xor
movsb
push
ficomps
fistl
mov
inc
jbe
movb
loopne
jg
shr
sbb
call
mov
cltd
mov
adc
or
add
dec
test
mov
and
mov
push
and
push
lock
dec
jp
int3
enter
dec
inc
jp
jns
mov
fwait
insb
jbe
push
in
call
pop
hlt
jecxz
push
xchg
adc
mov
and
cmp
into
test
in
push
stc
ljmp
into
repz
outsb
insl
movsb
adc
pop
repnz
repz
pop
fisttpll
or
dec
scas
adc
aaa
js
fnstcw
ja
xlat
daa
imul
inc
push
mov
pop
xor
nop
push
addb
fildl
xor
ja
scas
xor
mov
add
test
test
fmulp
fwait
roll
and
mull
or
inc
stc
and
jnp
pop
cltd
adc
insl
sahf
mov
lock
or
sub
sbb
lods
xchg
ss
loopne
gs
jne
mov
rcrb
pushf
cld
dec
es
loop
pop
adc
inc
nop
inc
clc
or
clc
les
popa
jecxz
mov
and
mov
shr
or
jbe
pop
ret
outsb
jne
or
or
test
mov
out
pushl
inc
scas
push
lret
push
stos
les
sub
sbb
imul
cmp
arpl
nopl
xor
enter
cmpsl
sbb
jmp
jecxz
adc
dec
mov
mov
dec
mov
cmp
aam
mov
aad
push
ficompl
push
lods
loope
sbb
cmp
iret
or
xor
dec
negb
jno
loope
push
pop
cmp
loop
ljmp
xchg
addr16
pop
xchg
loop
enter
sbb
adc
mov
add
sub
loopne
mov
and
push
xor
mov
cli
mov
push
fldl
inc
push
cltd
push
lcall
cmpl
push
push
cmp
xchg
dec
loopne
sbb
enter
adc
xor
imul
mov
mov
mov
lods
leave
cmp
mov
pop
movsl
jecxz
inc
sub
sbb
jno
dec
push
pop
iret
adc
mov
add
xor
xchg
mov
popa
dec
jmp
test
xchg
add
mov
jnp
mov
mov
push
fs
cmp
dec
mov
mov
les
lods
aaa
rclb
mov
add
ds
pop
xlat
xor
stc
cmc
cltd
data16
adc
in
fs
sub
add
ret
test
sub
push
and
popf
mov
dec
mov
push
mov
out
movsb
fwait
and
mov
daa
iret
push
cmpsl
and
mov
push
or
jge
jp
push
mov
inc
addl
adc
call
testl
sbb
outsl
add
mov
add
pop
xchg
xor
sub
js
push
lea
push
test
sub
popf
mov
mov
das
mov
pop
movsl
pop
pop
ljmp
mov
inc
int
lcall
arpl
std
lahf
or
outsl
mov
cmp
jp
sub
rcrl
daa
aad
les
stos
or
and
jnp
sub
add
and
and
push
pop
addr16
inc
das
je
push
push
icebp
mov
stc
pop
push
push
incb
dec
mov
inc
ss
data16
xchg
outsl
jecxz
popa
fidivl
or
push
insb
cmp
push
pop
nop
or
lahf
mov
xchg
ret
insl
add
mov
push
mov
addr16
mov
movsb
mov
push
pop
mov
adc
fstl
ret
dec
xlat
or
inc
leave
add
mov
push
or
je
imul
cmc
push
jmp
dec
lock
or
adc
or
pop
push
jbe
xor
sub
dec
stos
out
out
push
aaa
mov
jecxz
leave
imul
shrl
es
das
inc
mov
adc
push
jbe
inc
inc
in
mov
jg
loope
jno
fwait
shrl
pushf
lret
insl
and
adc
xchg
fiaddl
lret
test
in
cmpsb
inc
mov
mov
and
repz
enter
pop
push
into
dec
pop
or
cli
push
popf
mov
adc
int
lahf
mov
cmp
jecxz
outsb
test
xchg
cltd
enter
lcall
push
test
mov
sub
mov
jg
fcoms
cs
add
shrl
lret
push
jo
out
mov
arpl
pop
ficomps
adc
scas
dec
je
fcmovb
push
push
jns
xor
daa
ljmp
pusha
stos
xchg
es
cmpsb
cmp
push
add
xchg
addl
inc
mov
mov
daa
fdivl
inc
shll
sbbl
imul
push
insl
inc
jge
popa
les
fwait
stc
imul
pop
pop
jno
imul
and
mov
cmpl
sub
sub
pop
mov
cmp
push
mov
or
sub
push
push
into
jle
jg
dec
cli
not
jne
shr
aad
ret
ljmp
sbb
jo
loopne
push
in
insb
or
lds
adc
subl
daa
add
lcall
movsb
mov
fstl
mov
roll
aad
fstpt
iret
ret
lret
adc
scas
jle
jmp
mul
arpl
jns
cs
jecxz
xchg
adc
adc
ss
xor
mov
xor
pushf
sti
mov
ret
add
lods
cmova
cmpsl
add
sarb
push
daa
iret
insb
les
fcomp
inc
rcrb
jg
xchg
in
jno
repnz
pushf
in
push
imul
bnd
shll
arpl
xchg
es
xchg
cmpb
mov
mov
mov
sub
pop
push
and
movsb
or
dec
mov
xlat
cld
cli
mov
int3
cs
inc
clc
sub
jae
mov
sbb
outsb
shl
loop
ljmp
sahf
mov
pop
nop
or
pop
or
mov
xorb
mov
scas
test
scas
fisubl
rclb
mov
pop
and
xlat
lret
inc
fimuls
adc
call
jnp
imul
pushf
nop
outsl
pop
iret
mov
push
add
mov
orb
scas
test
scas
mov
cmp
and
pop
pop
pop
sub
cmpsl
stos
scas
popf
frndint
mov
std
cmp
pop
jmp
int3
cld
xor
ss
dec
mov
pop
popa
jo
jg
popf
pop
cmpsb
aas
or
mov
pop
cmp
popf
or
leave
mov
mov
enter
les
mov
mov
adc
clc
and
es
fsubrl
push
in
je
lret
or
icebp
popa
movntq
add
sub
dec
adc
mov
ficompl
mov
aaa
mov
cmp
add
and
es
shrb
nop
out
aad
rcll
clc
aad
daa
js
lret
ror
jbe
popl
pop
outsl
pop
mov
into
gs
imul
xchg
dec
faddl
nop
mov
dec
mov
test
mov
pop
stos
mov
in
sub
push
sbb
aad
pop
mov
adc
stos
sub
mov
mov
jge
jmp
jg
xor
xchg
fsubrp
or
stos
push
push
popa
or
repnz
inc
xchg
call
mov
sti
jae
or
cmpsl
and
mov
fildl
test
dec
mov
mov
in
sbb
sub
xchg
pop
bound
daa
adc
add
push
mov
addl
xchg
stos
or
aad
lret
mov
sub
fcom
sub
imull
push
push
int
inc
xchg
dec
xchg
dec
aas
dec
inc
dec
cmp
jp
fcos
ja
push
imul
push
jmp
int
subb
dec
push
and
add
fnsave
stos
test
gs
sub
adc
rcrb
repz
imul
cmp
out
into
aad
jb
push
add
cmp
out
dec
mov
int
fnsave
out
sbb
push
or
das
adc
int
cld
push
cmp
or
imul
and
push
ja
subb
je
out
jl
jg
xor
mov
mov
into
sub
ja
stc
ljmp
add
lods
xchg
pushf
lahf
push
in
lcall
xchg
ret
adc
pop
adc
or
hlt
test
mov
sarl
and
test
popa
adc
nop
dec
rcll
mov
jmp
stos
ret
cmp
push
fwait
jge
std
sbb
fistpl
scas
enter
add
xchg
add
jns
mov
push
mov
mov
cmp
add
mov
adcl
pushl
xor
cmp
jbe
adc
mov
insb
cltd
insl
arpl
pop
push
sbb
outsl
test
aas
sbb
mov
mov
hlt
and
pop
jmp
leave
sbb
movsb
inc
jmp
leave
jl
inc
cltd
dec
mov
cmpb
repz
cli
call
cld
stos
insl
xor
mov
mov
scas
pusha
shlb
xchg
or
and
mov
out
inc
sub
cmp
jmp
mov
imul
dec
pusha
rolb
push
jg
lock
je
stc
aas
out
scas
jge
js
jno
stos
jbe
or
mov
adc
xchg
lret
jp
cwtl
out
push
dec
add
xlat
xlat
pop
sub
gs
pop
out
aad
push
pop
fldcw
loopne
fld
mov
sbb
pop
sbb
or
orl
lock
out
call
icebp
ljmp
sub
cmp
imul
cld
or
mov
ja
mov
ds
push
test
lahf
call
fisubrl
push
push
es
popa
mov
inc
sarb
xchg
sub
or
sub
jo
shrb
jp
aad
sbb
dec
adc
ret
mov
xchg
insb
jmp
lods
and
bound
stos
cli
pushf
xor
cmp
dec
aaa
cmpsl
push
fsubr
mov
xlat
cmpsw
dec
loope
jg
inc
xchg
cs
xchg
enter
lahf
insb
imull
pop
adc
stc
outsb
loop
nop
ja
sbb
out
addr16
sub
mov
xchg
sub
enter
sub
mov
add
enter
push
sub
int3
mov
out
lods
lret
sbb
dec
sahf
jge
js
push
push
mov
packsswb
add
or
add
jae
xchg
or
pusha
add
mov
test
test
test
sbb
inc
dec
and
flds
pop
jmp
inc
cli
popa
pop
adc
stos
lret
cli
xor
xchg
call
pusha
fwait
in
sbb
pop
push
or
lcall
add
sub
mov
lret
xchg
mov
cs
push
insb
stos
stos
pop
fs
leave
adc
nop
jns
icebp
push
xor
inc
mov
call
inc
dec
mov
imul
jmp
mov
fiaddl
ret
jmp
xchg
push
out
mov
stos
adcl
push
mov
or
test
out
add
xchg
mov
fdivp
inc
fnstenv
xchg
out
push
sbb
test
cld
dec
inc
sub
pusha
loop
cli
ja
decl
repz
hlt
fldt
out
sbb
adc
add
sbb
jb
add
xchg
adc
add
mov
xor
mov
popa
xor
and
ret
push
fisttpl
fisttpll
lock
inc
inc
ljmp
les
inc
call
push
aam
in
pop
adc
out
test
leave
movsb
or
xchg
jns
sub
sbb
rcll
mov
mov
loope
rsqrtps
pop
dec
lds
iret
pop
ljmp
imul
pop
dec
jge
popf
xchg
mov
push
in
jge
cmp
lretw
lock
cmp
orb
popf
mov
clc
cmpsl
cmpb
push
ds
pop
and
das
pop
les
fmuls
lock
faddl
sub
jecxz
inc
in
jg
lret
inc
repz
movl
pop
adc
outsl
fdivrs
insl
push
testl
add
sub
or
es
push
mov
add
add
pop
stos
es
inc
mov
pop
and
push
jmp
filds
dec
adc
sub
dec
xor
jmp
cld
in
arpl
insl
or
push
hlt
jmp
push
mov
in
xor
and
and
sahf
push
cmp
mov
xchg
xor
push
or
add
mov
and
loop
iret
fmull
xlat
nop
rcl
inc
xchg
int3
cmpsl
cmp
lock
push
mov
sbb
into
dec
lock
jns
cwtl
ret
pop
inc
shr
jmp
adc
int
cmp
xchg
xor
or
mov
sub
mov
mov
push
mov
shll
pop
mov
rolb
int3
push
jg
aam
jnp
je
test
mov
mov
ja
jbe
cltd
cmc
insb
dec
out
negl
adc
sbb
cmp
adc
cmp
dec
insb
pusha
push
loopne
mov
ss
cmp
fnsave
xchg
mov
rcl
repnz
cmpsl
dec
ror
ffree
push
enter
scas
xlat
cld
hlt
mov
add
lds
loop
jb
mov
inc
pop
daa
nop
es
mov
rorl
scas
jg
scas
rol
and
ljmp
pop
push
xchg
es
imul
dec
jbe
iret
mov
pop
inc
mov
fwait
sti
test
push
jg
out
mull
sbb
and
push
js
push
xor
or
cltd
mov
mov
test
pop
mov
iret
and
inc
or
cmp
call
inc
fmull
cmp
push
je
outsl
adc
out
aad
mov
lea
sub
inc
imul
popa
insb
or
push
xchg
or
add
mov
test
mov
xlat
xchg
xchg
dec
hlt
fldenv
pop
fists
test
paddusw
aas
repnz
scas
mov
aaa
leave
cld
mov
pusha
jl
int
js
out
lds
jmp
icebp
xchg
mov
loop
xchg
fsubp
fisubl
push
out
push
adc
dec
aam
hlt
mov
add
pop
lds
movsb
cwtl
mov
and
pop
stos
mov
lret
jle
loopne
push
testl
loop
sbb
mul
div
add
test
mov
cmc
mov
arpl
adc
adc
or
sbbl
mov
mov
js
sub
xor
mov
pop
xlat
inc
or
es
ret
incl
loop
enter
shr
mov
jbe
jns
negb
xchg
imul
mov
push
testl
cmp
fs
mov
inc
repnz
add
jecxz
and
sub
and
das
into
adc
pop
sub
pop
aad
movsb
lock
dec
dec
hlt
ret
add
sub
ret
or
pushf
pop
jbe
vpackuswb
call
push
jecxz
jo
adc
xchg
xor
add
or
testl
mov
fistps
rol
outsb
push
push
stc
sarb
push
lret
aad
aas
aaa
jl
out
decl
mov
nop
divl
cs
lods
ret
in
pop
xchg
mov
xor
orb
adc
mov
cmpb
es
frstor
push
or
cmpsl
mov
fcompl
outsb
arpl
inc
inc
rorl
sbb
jb
fs
jle
or
div
mov
jmp
insl
pop
push
lcall
in
xchg
rcr
dec
push
mov
jle
loop
out
repnz
stos
inc
icebp
sub
mov
cld
lret
dec
out
xchg
mov
in
fadd
jbe
jge
into
incl
mov
jb
rorl
out
test
push
das
dec
jno
xchg
sbb
ficoml
or
sbb
cmp
cli
mov
js
xor
lcall
iret
xor
and
adc
push
rol
and
xchg
mov
jns
or
pop
jbe
fnstenv
aas
sub
addr16
fwait
pop
icebp
out
fistps
or
mov
xor
push
popa
sbb
jp
add
cmp
adc
test
sub
lods
fcomp
mov
dec
pop
pop
or
in
inc
lret
vmovhps
mov
out
jno
cmc
inc
loop
bound
or
fildl
push
leave
fiaddl
mov
and
cmp
mov
int
pop
stos
aaa
out
push
inc
stos
leave
and
iret
dec
and
hlt
into
stos
into
iret
xchg
sahf
and
adc
jl
test
jge
jge
sarb
arpl
and
cltd
int3
sub
cltd
popa
cmp
pop
leave
pop
sub
repnz
inc
test
mov
push
cmpsb
cmpsb
xor
sub
les
and
mov
mov
jmp
xor
leave
scas
lret
insl
lahf
inc
sahf
inc
jae
fimull
mov
scas
sbb
mov
jnp
push
loope
pop
cld
test
and
sub
cmp
jae
ss
test
mov
neg
mov
out
out
rcr
xchg
icebp
mov
fcoml
push
inc
idiv
outsb
mov
mov
aad
push
and
jg
mov
std
outsl
es
jmp
jecxz
sahf
sub
fwait
fwait
inc
inc
repnz
mov
or
adcl
xor
add
test
popf
mov
sbb
stos
sub
and
sbb
push
push
mov
dec
dec
outsl
inc
dec
pop
pop
in
ret
ds
fnsave
negl
jp
pop
fwait
out
cmc
jo
pop
in
inc
lcall
dec
pop
push
dec
push
adc
jno
js
mov
aaa
das
hlt
sub
add
enter
rolb
inc
pop
outsb
pop
lret
inc
rcr
push
cli
jl
les
clc
repnz
insb
aas
mov
cld
loope
notl
ja
push
cmp
xchg
test
dec
or
xchg
inc
fbld
xor
pop
cmp
daa
and
fnstenv
inc
xor
jne
add
xchg
push
jge
xchg
dec
pop
lock
jmp
mov
ja
in
xor
out
adc
loopne
sahf
sbb
mov
add
xlat
add
fiaddl
xor
xchg
xlat
test
sub
ds
mov
push
outsl
pop
jo
enter
aam
push
push
aam
inc
gs
clc
jmp
hlt
pushf
lods
fldenv
icebp
hlt
loopne
push
lock
adc
scas
out
fs
dec
inc
mov
xchg
mov
mov
es
sub
imull
stos
mov
mov
jle
push
adcl
dec
dec
dec
int
enter
inc
lods
ljmp
pop
jae
mov
pop
lods
adc
xlat
adc
popa
adc
dec
pop
or
aas
adcb
xchg
xchg
pop
test
jecxz
or
pop
and
mov
add
into
dec
ret
inc
into
mov
enter
cli
mov
stc
out
jns
jl
arpl
fcompl
nop
adc
or
push
fisubrl
sub
sub
sub
fstp
lret
movsb
push
sbb
lcall
push
lock
dec
lcall
ja
in
jge
outsb
stos
sti
mov
mov
stos
pop
sbb
add
inc
int
mov
sbb
add
or
cmp
stos
aas
add
xor
cmp
mov
jle
pop
test
pop
xlat
add
jns
rclb
invd
int
mov
sti
notl
divb
ja
sub
xchg
mov
addl
fadd
ret
jae
cmp
xchg
inc
add
xor
mov
incl
lods
in
xor
push
loope
push
jmp
pop
dec
mov
lret
vpminsw
pop
js
sbb
hlt
in
lret
push
sbb
bound
fwait
push
ja
mov
adc
or
add
push
rolb
icebp
fidivrs
jbe
jl
fsubr
mov
and
lds
adc
push
ja
dec
leave
std
inc
pop
int
adc
inc
or
loop
outsb
sti
or
inc
loop
fs
adc
push
test
pop
or
jae
enter
add
lret
cwtl
mov
sahf
sub
push
cs
cmpsb
mov
mov
or
into
inc
xchg
dec
movl
xor
xor
insb
and
sbb
pop
sbb
shrb
stos
mov
scas
invd
ljmp
xor
xor
cmp
fistpll
leave
pop
jl
cli
push
lock
push
lcall
push
jle
ret
cmp
mov
incb
lahf
in
loop
loopne
xchg
jmpw
sbb
xchg
test
popa
into
out
icebp
insb
mov
in
xor
sbb
inc
out
addl
jne
mov
cmpsb
inc
sbb
scas
loopne
mov
outsl
fstl
out
jecxz
inc
loope
add
or
fildll
push
std
mov
dec
fiadds
addr16
stos
xchg
ss
xchg
pop
sbb
test
stos
cmp
lds
mov
jmp
fcomp
mov
das
jp
outsl
pop
fimull
fcmovnu
or
repnz
inc
cwtl
inc
xchg
xor
jge
pushf
clc
repnz
push
idivl
dec
push
mov
stc
in
and
adc
pop
or
rcr
cmpsb
xor
sub
push
push
mov
loopne
mov
stc
mov
cs
jmp
dec
aam
pop
cmpsl
popa
jo
jg
ffreep
pop
sahf
js
inc
jmp
mov
mov
popa
xor
jae
xchg
in
jae
dec
lahf
sub
adc
inc
lret
pop
add
mov
insl
xor
fdivl
and
jle
mov
dec
lahf
pop
aad
pop
jbe
cmp
lret
bound
xchg
xchg
cli
lods
jmp
fstpl
movsb
mov
mov
insb
out
sub
adc
insb
or
xlat
mov
cmp
xor
cwtl
sti
cmp
fdiv
stos
insb
out
cmpsl
pop
and
push
dec
xlat
add
jg
jo
int3
push
dec
cmovp
sahf
dec
xor
or
pop
repnz
test
insb
je
ret
jne
or
test
sub
mov
jne
loop
or
rcll
push
ds
and
mov
mov
stos
inc
jge
xor
jle
stc
jmp
out
jmp
mov
dec
mov
pusha
orl
lock
insl
jno
jbe
sbb
xor
cmpsl
dec
imul
int3
lea
dec
mov
and
mov
jno
cmpsb
or
lret
and
jge
sbbl
jge
outsb
pop
into
in
cmp
mov
pop
jns
inc
test
fldt
jmp
das
or
and
xchg
push
popf
fimuls
scas
xor
add
rcll
cld
xor
mov
pusha
sub
and
push
sbb
daa
dec
inc
mov
arpl
in
std
inc
test
lds
inc
cmc
jmp
xor
in
add
adc
pop
or
mov
xchg
pop
js
push
insb
and
mov
ds
pop
jno
aaa
mov
mov
pop
mov
rcr
pop
jp
and
mov
inc
pop
iret
enter
push
jo
jns
cld
ror
adc
imul
outsl
mulb
popa
popa
xchg
sahf
sahf
jecxz
lds
in
nop
incl
jmp
xchg
mov
divl
sbb
repz
iret
mov
jne
ljmp
leave
lret
fstp
mov
xchg
clc
movsb
negb
repnz
mov
outsb
mov
loope
in
jmp
push
sbbb
mov
mov
xchg
jbe
xor
sub
inc
shlb
jnp
and
mov
fmull
jbe
aad
mov
or
ret
xchg
push
dec
js
rorl
lds
jb
lock
je
jnp
xchg
ljmp
mov
sbb
loop
pop
pusha
mov
xchg
mov
xchg
mov
push
sub
mov
movsb
or
pop
adc
add
into
lret
test
xchg
xor
cmp
sub
xor
mov
sbb
pop
push
andl
cmpsl
mov
js
and
stos
arpl
fimuls
mov
and
stos
xchg
jno
mov
ljmp
inc
outsl
cltd
and
xchg
and
jg
nop
je
scas
or
lea
hlt
xchg
divb
adc
pop
xor
or
mov
rolb
dec
mov
enter
rolb
sub
stos
xor
lods
daa
arpl
dec
pop
lret
outsl
inc
mov
add
sbbl
mov
movsl
sub
cmp
stos
leave
frstor
mov
adc
data16
xor
mov
into
push
pop
mov
leave
and
mov
add
call
dec
cmpsb
iret
pop
xor
dec
cmp
dec
int
idivb
push
cwtl
mov
in
inc
bound
mov
push
sbb
xchg
sub
loop
inc
add
push
jns
jl
mov
mov
aad
xchg
sub
pop
or
mov
pop
es
push
cltd
sarl
pop
and
inc
dec
push
pop
enter
pop
inc
insl
js
inc
dec
mov
nop
lds
repnz
fwait
xor
or
cmp
dec
test
or
shl
pop
and
mov
shll
movsl
andb
jo
jb
out
dec
dec
sub
stos
int3
and
sub
mov
outsl
repnz
sbb
inc
pop
push
ljmp
lea
sbb
mov
push
dec
xchg
dec
in
add
cmp
mov
cmp
xor
sub
ja
mov
or
add
shlb
bnd
testl
push
jl
inc
out
ja
stc
pop
subb
mov
cmpsl
lods
xor
loope
hlt
add
push
into
cmpsl
xor
jbe
cmp
aas
mov
mov
movsb
daa
fwait
lret
rclb
daa
shll
int
fdivrp
jne
pusha
push
jle
ret
dec
xchg
jne
sarl
test
mov
xorb
xchg
pop
pop
pop
pop
sbb
inc
or
push
flds
inc
aas
fbstp
clc
xor
sti
lcall
imul
daa
lods
in
lods
je
and
inc
aam
adc
jge
dec
gs
jmp
out
push
dec
mov
jne
sbb
adc
pcmpgtd
cmpl
fiadds
mov
test
mov
scas
std
loope
dec
sbb
inc
push
fstpl
into
jno
push
inc
jne
jns
dec
jg
repnz
ret
dec
sahf
sub
sbb
xlat
add
mov
adc
or
xor
xchg
pop
mov
pop
and
sub
and
lret
mov
jbe
scas
sub
cli
push
roll
popf
repnz
js
shll
xor
rep
jbe
jbe
out
test
jg
div
mov
push
fwait
sub
int
fsubl
push
sbb
aad
dec
mov
jns
and
pop
cmp
xchg
sub
sub
jmp
push
fsubr
rorb
mov
dec
dec
mov
lods
jns
cli
pusha
inc
inc
pop
and
out
fs
sets
pushf
popa
pop
xor
xor
int
mov
mov
add
fs
mov
mov
scas
lret
mov
and
sub
xlat
pop
mov
scas
cli
dec
cltd
push
ret
hlt
cmpsl
pop
inc
in
jge
jo
das
or
jp
jge
iret
in
adc
shll
es
xchg
into
sub
pop
add
int
add
mov
loop
test
sub
and
lahf
sbbb
faddl
int3
mov
in
xchg
rorl
jl
or
xchg
xchg
jp
clc
std
jbe
fs
xor
xor
adc
jnp
xchg
rolb
xchg
or
aaa
popa
cmp
imul
pusha
mov
jnp
mov
dec
stos
adc
lods
mov
mov
loope
pop
loope
or
adc
std
adc
inc
negb
pop
out
jo
out
mov
rcr
cwtl
test
pop
leave
and
xchg
jae
push
mov
sbb
movsb
mov
adc
mov
je
pop
es
pop
fdivs
adc
push
sbb
push
or
gs
push
lds
and
push
xor
inc
mov
outsb
fldenv
data16
scas
es
in
out
jno
sub
cmp
lcall
dec
cmp
mov
inc
cmpsb
or
scas
xor
into
push
das
lret
out
int
test
inc
dec
cld
and
shl
mov
jmp
aas
fs
in
pusha
push
jo
into
or
mov
push
inc
lea
cmp
nop
xlat
xor
mov
push
dec
lods
and
and
cs
lret
mov
mov
into
insb
and
push
roll
sub
dec
stc
fldl
add
inc
movsb
loope
jbe
mov
in
mov
and
pop
xchg
mov
stc
and
or
lock
xor
adc
fisubrl
mov
sti
aas
xchg
outsb
test
pop
pusha
orl
inc
popa
and
daa
mov
and
out
aam
out
push
addr16
outsl
mov
sbb
xor
sti
and
push
adc
mov
nop
fdivs
lea
mov
outsl
lods
xchg
shlb
nop
imul
pop
xchg
shrl
inc
das
lods
mov
cmp
push
std
jmp
add
or
or
out
ljmp
mov
inc
mov
xchg
mov
sub
sub
mov
mov
scas
pop
pusha
sbbb
mov
ss
mov
inc
push
btr
jmp
push
inc
cmc
inc
mov
je
xchg
insb
mov
loope
add
mov
xchg
xor
pop
add
xor
inc
iret
loopne
rorl
aas
andb
xor
fisubs
sub
pop
cmp
imul
push
jo
dec
push
pushf
jmp
lretw
je
out
out
mov
mov
jne
mov
adc
sub
sarl
in
mov
fmuls
ficoml
push
cmpsl
and
jns
loope
shlb
push
clc
add
jg
fsubr
jne
xchg
xor
ljmp
push
push
xchg
sbb
xchg
xchg
push
ss
clc
sub
ss
sub
es
mov
es
push
sub
push
dec
pop
pop
addl
cmp
or
dec
loop
xchg
add
sub
sbb
push
loope
rclb
in
icebp
test
fnstenv
push
mov
mov
and
sub
and
and
push
mov
inc
fsubrs
jno
sar
shlb
push
cmpsl
int3
jb
int3
test
cli
out
jecxz
fwait
enter
adc
call
loop
xchg
gs
jbe
xchg
adc
mov
mov
stos
add
addb
xchg
adc
mov
jecxz
scas
push
xor
cmp
loopne
xchg
fcmovnbe
rclb
xlat
inc
add
push
cmp
in
sahf
rcr
std
xchg
jmp
outsl
repz
mov
mov
sub
scas
jno
movsb
pop
fiaddl
pop
mov
push
mov
leave
addr16
mov
xchg
movsb
add
cmc
jno
stos
fidivrl
add
hlt
and
movsl
vdivss
rcr
xchg
sti
or
lods
mov
xor
insb
arpl
jp
xchg
and
movsb
out
mov
paddusw
or
mov
aaa
xchg
xor
daa
test
cmp
and
pop
push
cmpsb
jge
mov
leave
cmc
test
test
ja
in
stos
xor
icebp
xchg
mov
xor
jo
gs
ss
xchg
dec
loop
xor
ds
jle
sub
pop
cmp
mov
popa
scas
lret
jo
dec
adc
jmp
mov
or
repz
sbb
inc
icebp
ss
push
push
insb
push
jne
js
cmc
xor
jns
je
gs
insb
es
mov
lods
stos
inc
test
cltd
sbb
push
aad
mov
mov
enter
decl
mov
call
fisubl
pusha
sbb
add
fcoml
dec
iret
mov
dec
xlat
ret
ljmp
jge
int
mov
sti
insb
sub
loope
icebp
sbb
scas
in
inc
data16
cli
lods
cli
mov
or
mov
outsb
sbb
rcr
fildll
sub
leave
mov
push
clc
leave
shlb
aam
int3
shl
push
int
fldl
test
mov
sub
cmp
popf
jecxz
jl
mov
es
adc
stos
mov
cmp
add
cltd
sbb
fstp
stos
push
mov
push
jns
lret
pop
adc
pop
mov
repz
pop
dec
jge
data16
jmp
push
adc
cwtl
jmp
inc
sbb
jo
ljmp
cmpsl
dec
jg
push
outsl
xor
cmp
nop
add
or
aaa
sarl
scas
les
es
push
lods
stos
mov
shrl
sub
lock
out
outsb
cmp
jo
stc
adc
xchg
test
add
jmp
pusha
pusha
ljmp
popa
dec
xlat
xchg
fcoms
mov
cmp
pushw
pop
mov
js
dec
sti
mov
mov
dec
iret
ja
pop
arpl
pop
je
fwait
jbe
es
inc
rcrb
inc
jnp
hlt
test
xchg
jb
add
xchg
jo
add
subl
mov
jmp
cmp
or
xor
push
push
xchg
movsb
pop
test
jge
cmpsb
mov
adc
dec
sbb
jo
jp
mov
push
lods
in
add
inc
arpl
clc
add
insl
jae
mov
jecxz
xchg
sbb
mov
sbb
cmp
fldl2t
lahf
push
mov
push
xchg
das
dec
and
mov
fnstsw
clc
mov
daa
push
mov
cmp
scas
push
push
decb
and
fcmovnu
test
mov
enter
dec
clc
popa
jbe
jmp
xchg
lock
jb
inc
outsb
loopne
inc
sbb
out
adc
cli
cltd
into
nop
or
cmp
test
mov
js
add
jae
mov
cmp
loope
cmp
mov
loopne
dec
sbb
xchg
hlt
inc
adc
into
repnz
xchg
xor
out
lahf
imul
xchg
jo
or
fisubrs
add
cmpsb
push
faddl
mov
outsb
xor
cmovle
xchg
mov
xlat
sub
jge
ficoms
and
sub
daa
out
pushf
inc
jae
sbb
jmp
popa
call
add
jecxz
xchg
adc
sbb
push
push
adc
loop
mov
iret
add
sarl
xor
daa
and
xchg
cmpsb
addb
rcl
sub
popf
inc
nop
jmp
imul
dec
jecxz
dec
xor
movsb
xchg
mov
jp
or
icebp
mov
add
and
xchg
mov
or
aaa
setb
repnz
add
mov
lea
cmp
xlat
sub
stos
rorl
in
mov
lahf
mov
pushl
sub
mov
outsl
mov
or
jmp
adc
in
int
mov
stos
arpl
sub
adc
call
xorb
or
lret
pop
test
sub
pop
jl
dec
pop
mov
jg
mov
adc
addr16
pop
mul
ljmp
mov
pop
out
ljmp
jle
jg
and
sbb
xor
es
add
nop
fsubp
xor
mov
aaa
ret
inc
xchg
sub
fcompl
fstl
push
push
push
and
push
mov
aas
inc
push
sbb
ret
stc
scas
addr16
xchg
loop
jo
push
cmc
xchg
push
cmpsb
mull
lcall
xchg
inc
orb
or
orb
xor
fidivrl
outsb
fbstp
es
pop
mov
pop
push
into
mov
faddl
cli
inc
adc
inc
jmp
ljmp
xchg
cmc
dec
xchg
cs
mov
cs
pusha
fs
xchg
xor
xor
gs
cs
adc
sub
push
icebp
sub
mov
dec
jno
mov
lods
les
ja
je
push
imul
stos
lahf
enter
stc
in
and
mov
jmp
sbb
mov
sbb
mov
sahf
rcll
xchg
sbb
inc
adc
and
repnz
sub
cwtl
push
fbstp
xor
fsubl
sub
mov
jp
push
push
xchg
daa
inc
mov
sub
jg
jmp
cmc
pop
inc
aad
pop
jle
xor
mov
pop
idivl
xchg
push
mov
mov
xchg
aad
mov
cmp
or
inc
cmp
dec
mov
js
out
pop
sub
fidivs
mov
fcompl
pop
gs
jno
shl
push
insl
jg
ds
jbe
xchg
idiv
push
mov
sub
sub
cltd
hlt
adc
adc
adc
or
dec
mov
cmp
mov
rcrl
mov
cld
aad
pop
rcll
cwtl
les
dec
je
inc
gs
or
or
jp
sahf
in
adcl
out
and
adc
cmp
sbb
orl
xchg
test
push
mov
mov
sub
add
mov
inc
fdivs
push
sub
jmp
gs
insl
daa
xchg
pop
dec
cli
sbb
int
pusha
ror
jl
dec
cld
stos
imul
std
addr16
push
xor
xchg
jae
loop
cltd
jo
mov
push
rcrl
mov
mov
imul
dec
mov
popl
push
cmpsl
mov
scas
or
mov
rcl
into
call
mov
in
jae
pushf
dec
xor
push
inc
stos
je
iret
clc
sub
shl
dec
ljmp
in
mov
hlt
xchg
scas
test
test
aad
nop
push
or
ret
inc
mov
mov
and
lcall
dec
dec
out
jmp
inc
ret
cmc
lea
iret
je
jb
decl
mov
lock
icebp
loopne
push
adc
sbbb
add
scas
test
mov
test
dec
or
std
and
jae
inc
pop
push
mov
push
int3
push
dec
jmp
nop
sti
sbb
out
jle
adc
push
inc
mov
pop
loop
jl
sbb
jno
mov
mov
push
or
int3
or
or
cmp
nop
mov
pop
leave
push
fistpl
pop
cmp
mov
lods
out
es
cmpsb
sub
stos
pop
lods
cmp
stos
cli
ljmp
dec
dec
pop
leave
rcr
rcrb
les
out
stc
sbb
repz
repz
popa
mov
mov
mov
pop
loop
xorl
cltd
movsl
and
ficomps
ficomps
scas
cmp
xlat
lret
mov
or
pop
sbbl
lret
int3
jne
stc
inc
out
ljmp
stos
add
jnp
bound
fisttpll
gs
xor
push
mov
lcall
xchg
xchg
push
sbb
ret
cmp
push
push
mov
repz
call
pop
and
and
popf
dec
loop
aad
sbb
xor
test
adc
mov
mov
and
xchg
movsb
mov
adc
mov
or
movups
add
inc
cmpl
adc
mov
cli
push
negl
ror
add
lret
inc
adcl
mov
inc
scas
aad
or
adc
enter
subl
push
out
or
subb
sub
iret
mov
xchg
xor
push
cmp
sub
mov
lds
xor
jle
cltd
incb
jno
imul
mov
int3
jmp
lds
test
mov
sahf
lods
pusha
pop
cmp
xor
fwait
xchg
pushf
fcmove
ds
pop
std
lahf
add
iret
add
cmp
xchg
dec
cs
shll
inc
shl
es
dec
jle
pop
pop
jecxz
push
ret
lret
dec
data16
ret
ret
dec
fdivrl
out
cmp
or
mulb
jp
in
sbb
cltd
ret
cmp
sbb
jl
cmp
cs
test
push
scas
pop
add
dec
mov
repz
mov
cmpsl
mov
pop
push
inc
enter
lret
mov
jns
imull
mov
loope
sub
out
out
xchg
popa
rcrb
daa
pusha
add
mov
xor
mov
lahf
mov
mov
and
push
in
and
arpl
mov
fs
les
jbe
jo
cld
cmp
cmp
ja
xchg
mov
sbb
add
mov
sub
pmulhuw
test
xchg
rcl
mov
in
in
es
push
insb
jnp
pop
shl
xchg
pushf
aas
std
in
mov
lds
add
lea
nop
jge
punpckhwd
xor
pusha
cs
jl
dec
popf
pop
xchg
xchg
fstl
cltd
aas
test
add
sbbb
mov
fisubrs
xor
addr16
outsl
push
loop
cmpsl
pop
jb
lret
push
loop
pusha
mov
out
in
dec
inc
pop
jge
nop
jbe
xor
sbb
add
xlat
sahf
test
cltd
sahf
pop
data16
inc
mov
loopne
xchg
les
xor
xor
add
sub
or
mov
push
movsb
mov
fcoms
push
shrb
and
aaa
xchg
mov
hlt
lahf
inc
out
add
sbb
fwait
aad
pushf
mov
inc
push
fcoms
sbb
xor
addr16
inc
aaa
and
shrl
pop
adc
pop
sbbl
dec
aad
push
push
mov
xchg
and
je
mov
jge
jns
aam
or
pushf
or
add
sahf
or
hlt
xchg
mov
nop
jb
mov
mov
test
cmc
stc
add
imulb
or
aad
das
sbb
inc
mov
shll
add
and
sti
inc
cmp
addr16
mov
jne
push
bnd
fs
dec
mov
jmp
mov
mov
mov
add
repz
not
subps
mov
mov
hlt
mov
mov
xlat
test
add
cmp
sub
lds
push
add
lea
arpl
mov
push
pop
or
mov
adcb
or
cmp
or
movsl
jp
inc
dec
fldenv
pop
xchg
mov
jp
dec
rclb
dec
mov
imul
cmc
cwtl
inc
hlt
fcompl
dec
push
xchg
jae
aam
in
pop
test
cwtl
fadds
mov
add
scas
pop
aad
sub
add
cli
mov
filds
cltd
lods
sbb
and
divl
fbld
rol
aad
test
enter
out
std
sti
jbe
push
push
or
or
and
xor
sbb
or
lods
lea
popa
xor
and
das
sub
add
leave
pop
or
dec
mov
mov
mov
xor
sti
jae
jg
hlt
loop
fptan
pop
adc
or
jmp
andl
outsb
loop
mov
or
cli
add
outsl
push
call
das
imul
and
das
push
clc
mov
sti
and
push
push
dec
cmc
out
lcall
cld
test
fcomps
lea
inc
jl
add
mov
xchg
inc
mov
mov
and
addb
jl
mov
push
and
xor
das
jp
aad
iret
pop
sub
mov
push
rcll
jp
clc
popf
dec
jnp
sub
sub
xor
test
dec
out
pushf
inc
sbb
nop
jp
adc
jl
rclb
xorb
pop
adc
adc
movsl
or
jae
mov
rcl
sbb
or
add
incb
jns
xchg
enter
add
je
inc
in
mov
in
push
lds
dec
cmp
cs
cmp
outsb
cmp
movsl
mov
mov
popa
fsts
cmc
or
nop
sbb
outsl
cmpsl
pop
adc
sbb
mov
push
or
inc
cmp
mov
std
insb
mov
sub
repz
arpl
jmp
mov
arpl
adc
cmp
pop
sbb
and
sub
fmul
andb
xor
scas
and
xor
in
jo
int3
dec
stc
lret
push
lret
iret
jg
jp
add
je
repz
jle
repnz
nop
jmp
rcrb
mov
cmp
js
sahf
sti
clc
movntps
ss
fdivrs
mov
loopne
push
inc
bound
push
gs
outsb
inc
pop
push
shrl
dec
dec
inc
push
scas
repz
inc
dec
sub
inc
scas
push
pinsrw
imul
sbb
xchg
adc
mov
repz
mov
push
imul
daa
inc
jbe
lods
test
xchg
fsubl
jbe
ficoms
dec
or
mov
inc
idivb
jge,pt
mov
out
dec
sub
or
pop
cmp
adc
les
xchg
mov
orl
insl
mov
cmpsl
xchg
mov
push
mov
rcr
shll
shlb
dec
cld
push
leave
pop
ret
aaa
inc
imul
in
adc
outsb
xchg
cmpsl
out
sbb
lahf
mov
and
mov
and
jge
cltd
lods
mov
cwtl
inc
test
into
pop
xlat
push
push
nop
and
add
mov
in
jge
jno
popa
out
sub
outsb
add
sub
push
call
xchg
movhps
lcall
mov
jbe
subl
mov
sbb
pop
mov
push
lds
repnz
sub
pop
push
vrcpps
push
outsb
iret
icebp
adc
mov
dec
xchg
mov
ret
ret
lcall
hlt
add
and
lret
jbe
out
imul
mov
invd
stc
jbe
xchg
lea
push
pop
pushf
mov
mov
fadds
push
inc
mov
and
int3
pop
scas
cmp
iret
shrl
popa
movsl
cmpsb
fisttpll
stos
repnz
adc
fdivrl
icebp
movsb
and
lahf
mov
push
xor
cs
xchg
and
pop
add
xchg
orl
lea
lods
sub
notb
rcl
adc
xchg
rorb
or
rcl
enter
shl
fmulp
mov
shr
fwait
add
ret
leave
xor
jb
aam
cli
cmp
cltd
fmuls
push
jmp
stc
stc
xchg
mov
adc
repz
xchg
rcr
or
xchg
push
mov
mov
pop
mov
sti
movsb
out
enter
fnstsw
fwait
aad
dec
nop
push
arpl
leave
xchg
or
clc
push
orb
mov
inc
insl
mov
addr16
aas
sub
add
mov
imul
inc
xchg
push
sti
movsl
js
shrl
iret
xchg
rol
jle
div
push
sbb
dec
push
in
mov
addr16
xchg
or
stos
cmp
mov
add
imul
lahf
cmp
mov
lea
xchg
jnp
xor
push
dec
jne
flds
in
pusha
rol
loope
addr16
cltd
jecxz
shrb
call
xor
mov
inc
clc
add
inc
and
iret
cmpsl
outsb
dec
pop
loop
fsubl
push
sbb
aad
and
cmpsb
inc
xchg
and
push
daa
xor
stos
mov
push
mov
mov
out
cmpb
pop
fbld
orl
or
sbb
xchg
mov
push
bound
stos
shl
pop
xchg
adc
pop
mov
lahf
xchg
or
push
lods
xorb
ret
sub
inc
imul
sahf
pushl
dec
adc
call
inc
inc
xchg
fldl
imul
mov
rcll
imul
fsubs
xchg
xchg
fstpt
fwait
xor
dec
dec
or
cmp
xchg
sbbl
stos
pop
xchg
cli
pop
push
jle
push
call
insb
shll
syscall
fisubrs
dec
mov
sub
dec
mov
inc
in
xor
icebp
mov
pop
pop
push
cwtl
unpcklps
out
stos
repz
fwait
aad
mov
or
gs
push
pushf
fwait
lret
add
xchg
sarb
lfs
lea
shlb
sub
push
and
xor
arpl
sbb
gs
mov
push
lret
and
pop
aaa
push
in
xlat
mov
les
lods
dec
ljmp
add
imul
pop
jecxz
ret
addr16
and
pop
sub
pop
out
mov
enter
pop
inc
enter
and
dec
pusha
jns
and
sbb
push
test
or
mov
jo
cmp
inc
jo
lret
jno
sbb
imul
pop
mov
adc
push
or
xchg
mov
shlb
sub
jp
cmp
ss
and
ss
cs
inc
lods
stos
scas
jb
pop
sbb
cmp
pop
loop
lret
push
push
xchg
jge
push
dec
jl
ret
imul
scas
jns
push
int3
add
pop
icebp
das
mov
sarb
inc
xchg
lock
lds
mov
fnstsw
mov
jg
stos
adc
sub
pop
or
test
fidivrs
push
inc
bound
pushf
lret
in
xor
dec
xchg
stos
jae
push
fs
dec
pop
test
xlat
out
call
gs
mov
mov
pop
or
dec
mov
mov
xor
shrb
stos
and
imul
dec
into
adc
dec
dec
mov
nop
pop
cld
pop
or
mov
jnp
jg
cmp
xchg
add
or
inc
or
idivl
add
push
or
mov
sbb
inc
fwait
lahf
xor
xor
stos
inc
sub
mov
pop
clc
inc
push
push
iret
mov
sbb
shrl
adc
jnp
xchg
jge
inc
inc
dec
bound
cmc
push
jp
pushf
xchg
mov
orl
arpl
dec
test
lret
mov
mov
jecxz
scas
mov
xor
dec
cmp
add
fdivrp
xchg
in
iret
and
outsl
out
sub
pusha
insb
repz
jmp
cmc
mov
imul
negb
je
adc
in
test
xor
lcall
add
sbb
test
mov
and
out
jecxz
mov
sub
and
mov
jbe
inc
cmp
shlb
jnp
jmp
imul
loope
xchg
mov
imul
adc
and
lcall
dec
mov
pop
xorb
push
sub
aad
ret
lods
int
cmpsl
mov
and
pop
adc
pop
jl
add
sbb
repz
inc
cltd
jp
jno
xchg
hlt
arpl
aaa
jae
insb
ljmp
movsb
pop
jmp
addr16
test
mov
idiv
mov
add
sub
inc
cmp
stos
push
mov
and
jp
int
shr
cs
xor
dec
shrb
dec
inc
or
dec
in
rclb
push
mov
arpl
lcall
jb
lret
push
jmp
out
nop
mov
adc
xchg
xor
inc
das
mov
xor
mov
jmp
sub
bound
cmpsb
addl
sub
popa
leave
xchg
mov
adc
andps
hlt
stos
cli
test
jbe
data16
add
and
cmp
out
sbb
stc
xchg
shlb
xor
push
in
mov
enter
aam
lods
rcrb
mov
int
dec
jmp
xchg
push
ret
js
fnstsw
jb
js
jno
nop
jnp
push
jecxz
add
pop
sbb
pop
pop
adc
and
push
cmp
mov
mov
and
xor
and
or
arpl
imul
call
jo
cmp
enter
stos
out
repnz
negl
gs
jp
insl
fsubrs
mov
push
or
lea
xchg
mov
stc
mov
add
cmp
cmp
lods
cmpsb
adc
mov
fistpl
movsl
jb
mov
fmulp
push
push
dec
push
jmp
cli
or
ret
ret
pmaddwd
mov
cmp
mov
scas
cmpsl
out
xchg
out
mov
ficoms
xchg
lcall
ss
lcall
sub
dec
pop
movsl
push
es
adc
jbe
inc
shll
or
and
jno
lods
mov
shlb
fs
fwait
push
add
addr16
push
lahf
mov
ja
and
jmp
loopne
shlb
in
into
arpl
push
scas
mov
jmp
jno
fdivrs
fstpl
fadd
jle
ret
pop
fstps
push
xchg
xor
dec
stos
ret
dec
mov
incl
cwtl
outsl
mov
sbbl
ret
cwtl
mov
insb
sbb
xchg
fwait
add
cmp
stos
mov
mov
pop
jmp
mov
aad
push
lret
adc
jmp
call
out
sbb
xchg
jecxz
mull
les
xchg
std
pop
mov
xchg
sbb
or
repnz
lcall
mov
push
stos
sbb
pushf
and
rcll
dec
sti
push
mov
mov
jb
adc
push
dec
jmp
pop
push
clc
test
incb
or
sbb
jns
and
and
enter
or
aad
adc
add
scas
in
mov
lcall
pop
xor
cs
daa
cwtl
push
pop
lods
lods
fdivp
hlt
jge
leave
std
fsub
inc
aad
test
call
dec
xchg
inc
lock
ljmp
jmp
dec
jmp
sbb
stc
ljmp
mov
rclb
xchg
mov
xchg
mov
repnz
cmp
dec
jne
jae
and
mov
scas
and
pop
test
mov
pop
adc
out
adc
in
xor
sti
inc
cmpb
pusha
testl
sahf
sti
inc
dec
test
movsl
in
add
or
and
popf
rol
mov
inc
and
lock
mov
jl
js
jmp
mov
popf
rolb
xorl
mov
ss
lock
loopne
iret
test
aam
and
lahf
fistl
mov
fistpl
mov
mov
outsb
cld
into
mov
mov
fisttpl
add
sbb
adc
fiadds
addr16
mov
shr
bound
sti
mov
push
pop
add
fsubrs
pop
out
loope
imul
je
mov
cmp
add
xchg
test
adcl
pop
lods
mov
data16
and
cmpsl
push
aam
jb
decl
push
or
test
imul
xchg
es
sbb
in
test
daa
outsl
mov
or
popl
mov
adc
mov
out
cmp
mov
in
mov
fcmove
ror
push
aad
push
sahf
inc
std
dec
sahf
jns
ja
fnstsw
insb
jmp
jle
jno
add
imul
ss
lahf
rorb
adc
mov
pop
xchg
lret
loop
pop
mov
pop
das
sub
sub
pusha
es
mov
loope
lea
lock
jb
jmp
cmp
jo
test
icebp
stos
scas
jecxz
in
lds
pushf
xchg
mov
mov
adc
mov
mov
test
or
lcall
pop
gs
inc
jns
pop
xlat
sbb
or
add
cmc
lock
repz
in
push
lret
lahf
mov
lcall
lods
sub
add
fcomps
sub
les
sbb
jge
mov
cmp
in
push
mov
dec
and
xchg
lock
daa
fldt
push
mov
push
fsts
inc
or
test
xor
clc
and
push
xor
in
sbb
sbb
arpl
repnz
pop
mov
mov
xor
add
mov
pop
in
and
fimull
pop
movsl
sbb
std
stc
fsubrs
stc
enter
stc
push
rorl
inc
pop
lds
fs
fs
sbb
xor
repz
and
call
xchg
adc
cmp
int3
cmp
mov
cs
fldl
stc
dec
enter
dec
enter
push
mov
dec
js
dec
inc
sub
jno
outsb
push
fsubr
icebp
add
push
pusha
push
out
pop
cwtl
push
adc
xchg
sahf
cmp
fsts
test
pop
mov
test
add
fwait
mov
lret
mov
lock
and
mov
test
ret
out
insl
jbe
subb
and
jns
fdivs
mov
inc
or
loop
in
push
out
sbb
push
jne
pop
xor
cmp
mov
mov
clc
loope
push
xor
xor
fldenv
push
in
push
pop
sub
inc
pop
sbb
sbb
sti
cld
adc
jg
orb
jo
in
adc
out
cs
mov
add
sub
mov
xchg
das
sarb
mov
and
movsb
xchg
ljmp
xor
pop
xchg
popa
and
and
xchg
cmp
sub
pusha
mov
xorb
test
lcall
xlat
stos
pop
mov
in
int
test
sub
aam
xchg
pop
adc
out
data16
dec
push
push
inc
pop
push
or
add
in
imul
mov
in
loope
cmp
xchg
xchg
popa
add
and
adc
inc
pop
inc
sub
pop
and
xor
mov
mov
mov
xor
gs
out
inc
fcmovnbe
xchg
stos
repnz
sbb
mov
cli
imul
out
sahf
repz
adc
stos
mov
pop
shlb
push
push
dec
gs
nop
cli
push
loope
or
nop
pop
data16
sub
or
mov
push
das
mov
cmp
les
cmp
mov
pop
fists
fnsave
or
fldt
mov
out
dec
or
lcall
push
inc
shrl
ret
out
sub
push
jecxz
sub
cmpsb
push
sub
pusha
test
test
mov
sub
mov
sbb
repz
outsl
and
jae
sti
mov
mov
dec
dec
cmc
dec
pop
das
aam
and
sub
sahf
lods
call
lret
and
outsl
mov
gs
add
fnstcw
out
ret
sub
sar
mov
sbb
dec
mov
sbb
add
add
imul
and
add
xor
push
mov
cltd
js
leave
xorl
inc
xlat
mov
ljmp
addl
ljmp
jmp
test
mov
jecxz
jbe
jns
cwtl
fcmovb
sub
test
aad
and
ret
rcl
aad
dec
jg
leave
jge
push
cwtl
test
push
jmp
sub
imul
lret
jbe
leave
sahf
mov
cmp
sbb
mov
fildl
xchg
pop
pop
mov
adc
xor
cmp
lret
inc
lods
imul
xlat
pop
mov
in
push
int
cld
adc
ret
sahf
adc
jg
sbb
lock
cmp
stc
bound
sbb
adc
and
mov
ss
iret
xor
and
sub
int
mov
xor
fldcw
aam
into
lods
es
sub
nop
push
icebp
repnz
lcall
arpl
popa
sub
pop
adc
pop
mov
add
mov
xor
xchg
xor
dec
fdivrl
ss
fbld
inc
dec
push
fidivs
enter
xlat
push
add
mov
insl
dec
push
out
xor
pusha
push
insl
rorb
out
hlt
xor
out
rclb
add
cli
nop
pushf
ja
mov
inc
mov
mov
and
stos
push
push
aas
mov
fcomps
add
fcmove
mov
dec
into
sbb
out
ja
dec
pusha
dec
clc
les
bound
icebp
push
mov
hlt
jmp
nop
test
xor
fwait
mov
or
stos
pop
mov
xchg
xchg
add
inc
xchg
xchg
pop
cmp
sarb
std
mov
js
and
dec
push
or
rcll
aad
dec
out
in
inc
or
adc
clc
stos
inc
adc
ljmp
lods
pushf
lahf
inc
inc
test
pop
mov
lret
lahf
sub
mov
push
mov
inc
cmpsb
ss
sub
jno
sub
insb
and
scas
and
shlb
sub
lret
in
pushf
jl
mov
shr
divb
mov
insl
sbb
push
call
sbb
xor
or
xorb
daa
cmpsb
cmp
outsb
popf
shlb
pop
aaa
stos
test
mov
and
push
xchg
mov
jo
insl
aad
xchg
iret
sbb
incl
mov
dec
pusha
imul
sahf
xchg
cwtl
pop
int3
aas
cmp
or
cmpsl
cmp
jns
inc
mov
jmp
stos
sbbl
mov
sub
rcrl
fmuls
ss
xor
mov
les
stos
xor
arpl
stos
jbe
lock
in
jmp
lods
push
insb
cltd
inc
sti
sbb
and
adc
out
cltd
incl
mov
pop
xor
sarb
sub
xor
cli
es
push
sarb
loop
dec
mov
cmp
mov
fs
cmp
push
ss
jmp
sub
lahf
pop
outsb
lods
pop
out
aaa
jb
aad
sub
mov
adc
shrl
xchg
jno
xchg
cli
cmp
pusha
sub
pop
pop
jb
jns
or
inc
sub
fwait
in
addb
test
pop
push
nop
jmp
pushf
out
adc
in
je
jg
jns
test
fwait
test
call
sub
jmp
mov
pushf
mov
mov
lods
test
mov
ret
pusha
sub
pop
push
cld
sbb
jnp
popf
push
push
ficoms
jp
in
ja
popa
pushf
icebp
dec
add
lcall
xchg
icebp
enter
sahf
lcall
dec
add
add
flds
mov
adc
sub
repnz
je
sbb
adc
xchg
push
add
mov
xchg
inc
cli
sbb
ja
and
pusha
cmp
jbe
iret
xor
rcll
orl
dec
mov
mov
stos
mov
fisubl
fmuls
lret
inc
mov
xchg
dec
loop
repz
fwait
xor
push
hlt
and
or
scas
jmp
adc
adc
cs
pop
add
adc
cmpsb
fdivrs
sbb
cmpsl
rcr
ljmp
pop
push
cmp
push
pop
imulb
jp
inc
fstpt
les
jl
xchg
mov
push
fcompl
mov
push
mov
adc
push
or
enter
ret
or
sub
push
sbb
scas
cmp
in
push
add
arpl
push
push
cmpsb
in
cmp
xor
dec
inc
sahf
xlat
push
popf
inc
lret
jge
out
into
sub
fbstp
insb
test
ljmp
xchg
lahf
xor
xchg
in
add
pop
scas
adcl
inc
pop
jns
jl
mov
inc
pop
in
push
lods
mov
or
or
jp
lahf
jecxz
mov
inc
inc
test
push
imul
jbe
push
mov
es
subl
dec
sub
aaa
out
dec
test
adc
mov
jmp
jp
push
mov
lods
add
and
ss
fcmove
and
push
mov
cli
daa
rcll
js
dec
mov
addr16
jg
ret
out
dec
std
std
insl
cmp
je
pop
std
jmp
xchg
repz
inc
pop
push
rolb
lock
inc
cmp
popf
pop
xor
xchg
sbb
add
pop
mov
or
add
lea
dec
add
adc
xorb
or
cmp
mov
in
xor
dec
cmpsl
out
xchg
mov
inc
les
or
pushf
jae
clc
and
outsl
mov
mov
filds
movsl
fisubrl
not
scas
shl
dec
and
cmp
sar
out
xchg
popa
cmp
ljmp
aad
pop
jecxz
cltd
mov
or
or
add
sub
test
lods
xchg
cs
dec
or
int3
mov
or
xor
sbb
daa
dec
rcl
dec
iret
out
adc
in
clc
mov
mov
mov
mov
push
xchg
and
call
movsl
fildll
fs
xchg
fs
cltd
xor
adcb
adc
pop
lods
mov
adc
adc
mov
xor
jae
jl
fbld
sbb
inc
fwait
sarl
cmc
negb
clc
pop
sub
nop
outsb
imul
push
lcall
xchg
outsb
or
add
adc
adc
fldenv
pop
push
ss
push
add
imul
inc
pop
dec
aad
clc
rol
xchg
insb
dec
dec
lcall
clc
notl
jg
test
xchg
pop
adc
adc
jns
xchg
xor
aas
dec
mov
mov
add
dec
jg
shlb
xchg
lods
daa
cld
and
dec
stos
and
and
pop
aad
gs
mov
and
jg
mov
ljmp
imull
mov
sbb
add
mov
add
stc
mov
add
mov
repnz
hlt
sub
xchg
pop
icebp
std
xchg
push
xor
xchg
pop
pop
in
mov
pusha
les
mov
jmp
or
cmc
das
lahf
push
imul
mov
jnp
int3
out
mov
sbb
adc
jne
into
sub
punpckhwd
movsl
out
mov
fwait
xor
inc
lods
push
rcrl
addr16
and
lret
push
sub
sub
adc
cmc
stos
inc
ss
jl
pop
jbe
adc
lcall
movsb
sbb
mov
mov
push
add
test
aas
mov
xor
lods
scas
push
aam
pop
jl
add
adc
jg
dec
lret
push
in
cmp
sbb
clc
repz
pop
mul
adcl
mov
outsb
ret
pcmpgtb
mov
xchg
adc
or
add
add
lds
add
and
lods
mov
xor
int3
imul
add
push
imul
imul
negl
jge
pop
jg
pop
xchg
insl
inc
xor
lcall
add
adc
pop
fwait
aas
cs
mov
xor
mov
push
lret
fiaddl
xchg
pop
cmp
and
cmpsl
daa
cs
cmp
pop
dec
popf
sar
push
call
xor
mov
std
fsubl
pop
notl
cltd
lret
push
or
lock
test
push
push
cwtl
sub
adc
je
jae
insb
mov
stos
jp
mov
cmpl
test
adc
xor
xchg
push
mov
lds
rol
cmp
dec
in
inc
popf
dec
jbe
push
sbb
dec
or
hlt
lcall
add
sbb
mov
or
or
push
or
mov
test
dec
clc
mov
xchg
fxch
in
idivl
std
mul
lret
shll
pop
sbb
aam
jo
jne
stc
jb
mov
mov
mov
cmp
cmp
and
push
adc
dec
enter
mov
push
inc
push
mov
es
and
pop
ljmp
popa
out
pop
mov
pusha
cmc
dec
ss
pop
dec
adc
jl
gs
jg
insb
and
addr16
jecxz
add
sub
into
sbb
arpl
nop
lea
mov
in
push
push
shlb
sbb
out
push
test
mov
dec
rol
mov
dec
fbld
push
jle
dec
sub
dec
xchg
clc
adc
out
imul
loopnew
jae
lahf
pop
adc
dec
sub
arpl
pop
mov
dec
push
fcoml
mov
xor
xorb
pop
aad
mov
js
cli
lods
adc
fsubs
pop
sub
lahf
shr
push
mov
push
dec
inc
addl
hlt
lods
pushf
insb
shl
pusha
mov
es
dec
out
ret
fwait
inc
inc
pop
shlb
fbld
outsb
lcall
stc
push
popa
mov
loop
mov
inc
add
xchg
add
aam
or
jge
hlt
inc
and
repnz
jmp
clc
sbb
stos
sahf
mov
nop
cmp
rcll
mov
or
js
xchg
xchg
nop
pop
cmp
xchg
scas
cli
jno,pt
out
movsb
cmpsb
mov
sti
cmp
inc
ficoms
fstpt
cmpb
jge
sub
in
and
lahf
cmp
ljmp
fsubs
inc
in
cmp
push
andb
dec
or
add
rorb
and
add
fwait
xor
sub
stc
insl
or
repz
pusha
enter
aam
pop
hlt
pop
imul
imull
pop
xchg
cltd
cli
insl
into
cmp
jle
pop
ljmp
gs
push
pushf
dec
addr16
repnz
xor
sub
mov
jnp
loope
mov
scas
add
loopne
mov
fldcw
and
cmp
or
inc
in
jle
add
jo
pushf
cmp
push
pop
cmp
lds
xor
aaa
push
lret
mov
push
and
or
cmp
ja
in
cpuid
sahf
loop
imul
js
sar
insl
and
push
unpckhps
dec
das
cld
les
jo
jno
push
adc
jne
mov
test
insl
pop
lret
mov
stos
in
xchg
cltd
sbbl
dec
jmp
inc
mov
mov
and
dec
adc
dec
mov
fwait
clc
hlt
leave
or
lret
push
sbb
bndldx
cmc
dec
sub
andb
pop
sbb
shll
xchg
push
or
push
sbb
leave
pop
adcl
xor
jmp
add
pop
ret
into
inc
out
push
dec
cltd
fstl
ljmp
xlat
fnstsw
and
call
push
repz
jo
cltd
mov
mov
orl
je
xor
movsl
push
fcoml
ljmp
sub
mov
shr
jge
imul
mov
push
jo
aaa
sbb
push
sbb
loop
xchg
and
ss
cwtl
jl
aam
xchg
xchg
xchg
dec
sbb
std
jle
mov
mov
jg
push
lock
movl
pop
arpl
fs
inc
mov
inc
lahf
jno
xchg
aas
dec
outsb
out
push
sub
lods
hlt
and
imul
xor
push
and
sbb
shll
fidivrl
int
jae
pop
mov
leave
int
daa
cmc
movsb
dec
pop
add
inc
push
mov
pop
imul
cmpsb
stc
dec
cmp
imul
jne
sub
das
sahf
jb
mov
adc
ljmp
sub
fldl
testl
adc
test
jp
sub
insb
mov
and
lcall
dec
and
jb
jnp
jbe
sbb
push
pop
or
lea
adc
push
frstor
dec
mov
sbb
mov
icebp
jge
push
mov
mov
scas
sbb
push
sub
sbb
cld
mov
imul
inc
rcrl
ss
pushf
out
adc
mov
jb
sbb
sbb
unpckhps
cwtl
or
fs
ss
jns
rol
pop
xorb
sbbb
insl
mov
shlb
sbb
xor
jg
mov
pop
or
popf
and
push
popaw
push
popf
insl
out
cmp
aad
outsb
lcall
xlat
int
clc
cmpsl
js
movsb
jecxz
jbe
jmp
inc
bound
sbb
ud1
mov
xchg
ret
test
mov
xor
es
and
pop
repz
jo
mov
push
ret
call
jns
mov
ret
inc
mov
repnz
repz
pusha
jmp
call
adc
sbb
sahf
ss
mov
and
jno
lcall
mov
and
in
jg
outsl
pop
loope
and
addr16
ret
sbb
dec
test
lds
xorb
shl
lods
loopne
mov
sbb
push
cld
in
jo
adc
loope
pop
cltd
sbb
mov
rclb
sub
push
xor
daa
icebp
mov
out
jle
in
push
leave
sbbl
cld
int
dec
enter
push
and
push
lret
sub
push
mov
stc
shrw
idiv
loop
jae
mov
in
adc
adc
add
test
xorb
cmp
mov
aaa
push
aaa
inc
pop
fstps
loope
aam
cmc
sbb
iret
ss
les
into
push
jno
inc
cmp
outsl
pop
or
loope
inc
fldcw
push
arpl
test
bound
aad
jnp
cmp
xlat
sbb
cmp
add
aas
inc
popa
mov
sarb
mov
leave
cld
ficoms
in
xchg
push
ret
aad
pop
lea
pop
cmp
lods
inc
cmp
sub
test
mov
or
int3
sahf
mov
push
jae
sti
subb
fdivs
movsl
lret
xor
fcomip
push
mov
dec
and
shl
inc
icebp
pop
lods
ljmp
aad
mov
inc
enter
ljmp
popa
or
cmp
sub
decl
test
mov
aas
xchg
mov
mov
int3
sarl
insb
xor
nop
mov
enter
mov
aam
enter
test
mov
mov
gs
cmp
rolw
sub
out
mov
aad
nop
lahf
xchg
mov
cmc
mov
mov
pop
sbb
ss
subl
ret
sbb
jl
sbb
dec
je
xlat
jge
cli
sti
pop
sti
cwtl
repnz
jg
adc
imul
popf
cwtl
fsubp
xchg
push
sbb
or
sbb
mov
add
int3
add
sarb
repz
mov
aaa
sahf
popf
sub
push
ss
clc
lret
test
mov
push
inc
or
roll
int3
in
insb
pop
mov
inc
jno
je
lock
fistps
sbb
push
mov
jne
and
out
add
lods
lahf
orb
push
mov
enter
inc
stos
pop
stc
pop
dec
sti
mov
push
dec
xlat
mov
decb
testl
or
cld
insb
popa
mov
jne
dec
stos
jbe
loope
dec
imul
lea
test
loope
sbb
out
rorb
mov
sub
dec
or
ret
shl
data16
and
adcb
inc
jmp
icebp
loope
repz
push
sbb
jl
aad
cmc
dec
add
ficoms
xchg
push
mov
add
push
cmpb
mov
push
or
shrl
scas
loopne
movsb
std
dec
dec
and
fucomi
inc
dec
cltd
dec
mov
dec
push
push
push
inc
dec
pusha
dec
testb
hlt
and
or
adc
cmp
out
outsl
jge
cmp
int3
out
out
outsb
xor
add
adc
xchg
test
push
cmp
adc
int
rcr
les
les
sub
out
in
jmp
filds
dec
push
inc
push
mov
movsb
notb
test
idiv
cli
jle
jb
jge
mov
pop
add
adc
add
cmp
test
insl
nop
int3
orl
xor
stos
repnz
lods
fildll
push
sti
push
es
rorb
popa
lret
pop
and
movsl
cmp
pop
ret
lods
jno
push
jnp
clc
sbb
mov
addr16
xchg
stc
bsf
cmp
scas
icebp
fisttpll
xor
stos
neg
jns
add
mov
fists
and
jl
faddl
aaa
push
xor
jp
adc
iret
mov
and
cmc
mov
pop
stc
js
pushf
data16
push
dec
sbb
out
push
xchg
orl
push
xor
mov
cltd
lea
push
cmpsl
jo
xor
mov
js
inc
xor
push
loope
push
dec
fmul
inc
fdivl
ljmp
inc
outsl
mov
test
call
in
nop
inc
add
mov
in
jnp
sbb
fcmovbe
xor
mov
mov
les
subb
in
mov
fidivs
fdivp
inc
stc
rcrl
iret
stc
lock
out
int
ja
les
push
fwait
mov
adc
int
cmp
fstl
xchg
mov
ds
xor
aas
inc
and
and
mov
scas
in
push
mov
push
push
jnp
jbe
push
imul
imul
ds
out
lcall
call
or
inc
pushf
fstl
sbb
js
add
pop
add
test
lods
xlat
cmp
es
fcmovnb
xor
ss
repnz
ja
ret
pop
shrb
ja
movsb
cmpsl
jae
addr16
ja
jnp
xchg
imul
bound
in
lcall
dec
lods
sub
jns
fidivrl
loopne
rcr
mov
cmp
pop
out
nop
pop
xor
lods
mov
shrb
in
popa
and
push
adc
push
jle
insl
ljmp
out
in
xor
addb
and
xor
subb
add
cmp
mov
xor
mov
scas
cmp
movsl
lods
adc
and
dec
aas
push
repz
mov
dec
inc
in
add
je
pop
jns
jns
loopne
mov
mov
xor
sbb
or
mov
mulb
sub
jmp
adc
pop
pop
pusha
push
popf
push
dec
mov
mov
clc
mov
cwtl
call
addb
xor
lcall
mov
in
mov
xchg
xorl
test
cmp
jp
jae
push
xchg
sub
comiss
stos
mov
and
pop
pop
fcmovnb
arpl
in
outsl
arpl
testl
pop
imul
clc
jecxz
icebp
or
xor
adc
pusha
pushf
sbb
ja
or
sbb
or
dec
and
in
mov
fidivl
inc
mov
movsb
mov
rcll
dec
push
jg
lret
inc
inc
fucomi
clc
inc
jnp
repnz
icebp
jne
insb
in
les
push
popf
sub
ds
ljmp
pop
or
int3
cmpsl
mov
movsl
loopne
xchg
shrb
push
pop
sub
mov
sbb
push
ret
push
ret
push
inc
fbld
js
or
jne
inc
clc
ljmp
icebp
ljmp
pop
in
cltd
push
sbb
fisubs
xchg
mov
cmpb
cmp
idiv
das
mov
mov
lods
aaa
shlb
ret
mov
jae
add
cmp
push
arpl
cmc
aam
ja
push
xchg
jbe
sbb
ja
outsb
cmp
mov
pushf
sbb
fwait
xchg
or
adcl
mov
cmp
mov
and
leave
sub
pop
aad
dec
fidivs
les
dec
inc
ret
cmpsl
jbe
inc
jns
call
ljmp
jmp
jmp
mov
push
fisttpll
or
xlat
or
fidivrl
add
mov
mov
mov
fs
pop
test
fcmovu
cmpsl
mov
jbe
out
dec
ror
inc
inc
cs
sub
inc
leave
push
repz
jg
sahf
pushf
je
lcall
addr16
xchg
adc
adc
pop
add
mov
pop
cmp
xchg
cmp
mov
mov
test
pop
or
pop
into
dec
dec
mov
push
inc
test
enter
xchg
inc
jo
fwait
std
arpl
lcall
call
adc
pushf
push
sbb
orb
lea
mov
inc
xor
push
cli
test
mov
leave
lcall
jne
sbb
add
inc
pusha
aam
in
loopne
repz
mov
sbb
or
call
jge
add
cmp
js
or
dec
cmp
mov
dec
movsb
test
ret
pop
and
lds
sbb
push
loopne
inc
bound
aad
sti
and
insb
cmp
jecxz
pop
sub
pop
mov
mov
xchg
pushl
lea
mov
in
mov
inc
test
gs
fcom
sub
xor
lret
and
or
mov
push
fldcw
xchg
mov
decb
jl
inc
int
jne
inc
mov
mov
xor
call
in
icebp
gs
fwait
and
adc
xor
add
push
sub
xchg
movsb
cmp
pop
shlb
mov
and
mov
fsubp
ffree
repnz
inc
push
dec
sbb
inc
int3
adc
ret
out
jmp
sbb
in
inc
call
aas
out
fwait
outsb
mov
sarb
dec
or
cmpsb
inc
shrb
xchg
sub
jbe
cwtl
push
and
pop
mov
popf
dec
fistl
adc
fnstenv
dec
or
xlat
ja
dec
cmove
shl
loope
inc
mov
cmp
imul
pop
mov
push
or
dec
mov
mov
fisttps
rolb
imul
mov
push
push
out
and
jge
sarl
roll
xlat
pop
jns
dec
push
jno
ret
jmp
dec
js
loop
hlt
jl
lcall
sbb
insl
icebp
adc
out
mov
pop
push
dec
mov
push
or
mov
adcb
cmc
mov
xor
push
cmpsl
jle
imul
sbb
inc
out
ror
loope
clc
aad
add
jo
inc
ja
les
rcll
stos
in
xor
sub
adc
out
in
or
cltd
adc
or
or
xor
mov
push
push
stos
mov
repz
add
dec
sub
push
int3
jecxz
decl
inc
push
or
ret
jp
fwait
sti
jne
pop
insl
ja
mov
gs
sub
push
mov
sub
jecxz
mov
sbb
push
sub
sub
mov
sub
mov
jb
ret
aam
inc
xor
push
fucomip
pop
dec
jbe
jbe
loope
jg
jo
xchg
add
inc
enter
cli
add
movl
xchg
out
or
loopew
imul
xchg
fs
cwtl
add
xor
add
mov
aas
insl
sysexit
cmp
lods
cmc
mov
shll
inc
pop
inc
mov
push
daa
push
pop
rolb
lds
jp
es
sub
hlt
gs
or
cld
mov
std
stos
adc
icebp
push
sbb
push
sbb
movsb
adc
cmp
sbb
xor
fnstenv
das
cmpl
gs
ror
pop
push
jnp
push
jb
je
inc
add
fmull
test
inc
int
dec
call
out
add
outsb
adc
in
nop
add
xor
jns
popf
push
dec
cltd
cvtps2pi
fmuls
fwait
cmp
jp
mov
rcl
daa
xchg
mov
mov
sub
nop
pop
and
mov
dec
outsl
dec
pop
scas
push
inc
rorb
aam
push
idiv
popf
std
out
inc
out
test
lcall
xchg
sbb
lret
fs
adc
popf
std
lret
test
sti
mov
xchg
xchg
add
fcoml
pushf
fcomps
movl
mov
je
in
jle
or
or
les
in
out
and
jl
inc
mov
or
arpl
arpl
mov
sahf
xor
dec
aas
cmp
xor
dec
js
jno
jns
jmp
aad
ss
xor
push
pop
call
mov
xchg
out
inc
es
push
rorl
pop
imul
jbe
cmp
aam
sub
inc
push
sbb
xchg
push
jne
pop
sub
andl
jnp
sbb
scas
stos
lods
pushf
cmp
mov
mov
mov
push
pop
inc
lcall
adc
pop
arpl
fldl
pushf
aad
jg
iret
jp
cmp
imul
jb
lcall
outsl
test
sbb
push
mov
and
xchg
andb
add
push
popf
ds
sub
fmuls
mov
xchg
rcr
mov
rcrb
ficompl
shll
insl
es
inc
rcrl
jo
push
gs
inc
into
insl
adc
imul
scas
jmp
push
pop
flds
inc
pop
fldt
dec
imul
call
dec
cld
or
xor
mov
and
adc
incb
out
push
fldenv
sbb
cld
jl
je
div
outsb
sti
ret
int
rcl
sub
lcall
xchg
out
xchg
fwait
add
or
push
dec
and
inc
shll
nop
xchg
push
mov
popf
loope
add
push
cmp
mov
cmp
sub
push
loop
pop
jae
jle
mov
lock
xchg
pop
xlat
arpl
and
push
jae
mov
jno
push
cli
fwait
divl
je
testl
inc
inc
out
leave
orl
push
data16
mov
sbb
test
mov
xor
mov
div
shll
dec
nop
cmc
rorl
pop
or
jge
push
mov
jo
xchg
adc
out
dec
sub
pushf
cmpsb
xchg
nop
cmp
rclb
jge
aam
or
cmovae
inc
cmp
mov
sbb
test
addr16
out
pop
push
cli
push
jmp
pop
or
jmp
sbb
inc
xor
sarl
insl
pop
push
and
xor
and
mov
pushf
xchg
cld
or
mov
sbb
mov
cwtl
ss
lods
bound
and
pop
rcrl
ds
into
and
inc
js
out
lock
mov
ja
repnz
pop
aad
shrl
mov
sub
ss
mov
popf
mov
insb
add
sub
out
mov
out
and
hlt
mov
sahf
dec
mov
lret
xchg
sti
addb
cmp
push
add
adc
sbb
aam
jl
ljmp
pusha
loope
mov
push
mov
xchg
mov
xor
lea
adc
mov
inc
and
sub
or
pop
rorb
xor
inc
xchg
enter
std
push
out
mov
in
jo
push
cmp
fstps
add
or
lds
jno
shr
shrb
cmp
rorb
mov
mov
int
rcr
sub
sub
ficompl
aas
jae
adc
sub
movsb
inc
shl
imul
bound
out
insb
sbb
sbbl
add
popl
add
sub
mov
push
aam
outsb
xlat
ja
push
pop
stos
lea
cmc
enter
jbe
adc
call
hlt
and
data16
inc
sbb
mov
es
pop
and
fcmovnb
clc
pop
dec
or
mov
enter
pop
mov
add
dec
stos
and
sub
repnz
push
pop
or
stc
insb
es
mov
mov
inc
adc
push
inc
stos
xbegin
pop
icebp
jb
add
test
mov
lods
popa
xchg
mov
sub
dec
daa
xchg
into
testl
shlb
rcrl
sbb
scas
push
outsl
es
jge
ret
inc
dec
fistps
adc
cmp
imul
jge
xchg
push
mov
fs
adc
cmp
test
and
mov
daa
lods
fiaddl
shrl
sti
jns
pop
pop
mov
js
movsb
lret
dec
into
adc
inc
ret
lds
dec
popa
pusha
inc
jae
or
out
add
fwait
or
ljmp
imul
push
mov
stos
adc
inc
mov
cwtl
push
hlt
dec
mov
mov
mov
pop
xchg
sub
or
das
in
dec
cld
pop
rolb
lcall
and
inc
not
add
mov
add
xchg
in
cmp
in
add
pop
xor
test
pop
lods
add
test
pushl
jnp
test
xor
push
cs
imul
jmp
scas
enter
add
test
cld
test
mov
popf
cwtl
stos
out
mov
andl
xchg
fwait
or
push
aas
loop
add
lock
mov
mov
in
lods
xor
in
pop
insl
xchg
and
pop
dec
mov
fstp
aad
shll
jb
inc
int3
add
outsb
jl
jge
push
loopne
les
xor
dec
pop
or
xchg
sub
add
push
shll
dec
add
add
mov
sub
pop
lods
xchg
adc
adc
inc
outsb
je
mov
lods
imul
jbe
pop
jmp
sbb
pop
icebp
addr16
sbb
or
into
mov
sbb
ret
das
in
mov
inc
fcoms
push
mov
inc
test
cs
xor
stc
mov
scas
mov
xlat
pop
jb
test
scas
inc
push
xchg
xlat
mov
push
std
js
test
insl
aas
mov
cmpsl
out
or
arpl
cwtl
jecxz
fistps
nop
push
adc
rcrl
inc
out
xchg
mov
xchg
repz
aad
iret
pop
shll
cld
push
shlb
dec
fdivl
xchg
test
adc
mov
jecxz
in
mov
loop
fs
in
mov
imulb
jno
sub
lret
cmpb
cmp
inc
shrl
cmp
enter
imul
mov
pop
insb
pop
xchg
adc
mov
leave
insl
ret
dec
cld
sbb
rcl
sbb
pop
xchg
push
mov
popa
popa
inc
frstor
adc
xchg
push
sti
fidivs
movsl
sarl
fcmovnb
fisubrs
ret
add
je,pt
jmp
push
sub
and
sbb
negl
jg
inc
mov
lret
inc
iret
lahf
outsl
xor
adc
mov
out
daa
sbb
sbb
insb
std
mov
enter
mov
cmp
popf
inc
mov
je
stos
adc
jne
mov
shrb
pop
loopne
dec
and
pop
int
dec
push
roll
test
enter
dec
inc
enter
mov
xor
les
js
popf
cmp
in
add
adc
and
xchg
and
cli
cmp
addr16
cmp
and
sub
jo
and
jnp
mov
jg
inc
jb
mov
pop
inc
xchg
fst
inc
dec
mov
xor
push
lods
fildll
push
mov
pushf
shrb
mov
sahf
popa
loop
inc
outsl
push
cmp
or
xchg
xchg
inc
xchg
ss
fcoml
cwtl
cmp
mov
add
push
jmp
scas
or
push
pushf
int
fmuls
adc
sarb
or
test
ds
dec
xor
outsl
mov
gs
pusha
in
fs
decb
mov
ja
and
pop
stos
in
xor
out
aaa
fildll
and
push
cltd
pop
stc
pop
pop
shll
mov
push
fisttps
jo
inc
push
jnp
int3
xchg
in
lods
std
stc
in
or
push
bound
bound
popf
outsb
stos
mov
loop
loop
mov
pop
add
xchg
push
cmp
mov
stc
test
adc
mov
jne
jmp
mov
movsl
jnp
jns
jmp
aas
aad
xlat
insb
inc
sbb
cmp
adc
shlb
xchg
xor
outsb
popf
mov
addr16
dec
sbb
or
fstpt
test
in
push
sbb
test
mov
push
test
repz
cmpsb
xchg
rcrb
cmp
mov
push
fcom
ficompl
sarb
js
add
iret
dec
push
stc
mov
jmp
jge
jg
hlt
xchg
add
inc
in
push
xor
lcall
mov
fdiv
pop
pop
mov
rcrl
or
jge
inc
cmp
xchg
lods
add
and
jecxz
loopne
mov
dec
lret
imul
dec
jne
lret
je
jns
icebp
dec
test
jnp
mov
fs
in
xlat
in
arpl
in
add
push
inc
mov
repz
xchg
jne
imul
sub
cmp
and
mov
xor
mov
jns
stos
pop
push
pop
sbb
sbb
jnp
xlat
pusha
insl
ret
dec
inc
or
inc
jnp
je
jno
jg
add
pop
addr16
mov
mov
std
mov
hlt
and
data16
mov
mov
sub
sub
sub
insb
fcmove
cmp
cmc
shrl
cmpsb
inc
pop
mov
sbb
jno
mov
imull
in
mov
xchg
pop
fstl
sub
gs
fimull
jb
aaa
mov
test
lods
std
repz
sub
pop
shrb
fdivrl
mov
mov
int3
inc
movsl
push
test
jnp
jl
cld
bound
pop
es
mov
div
adcb
cmp
xchg
subl
mov
mov
add
scas
and
mov
rolb
xor
mov
daa
call
stos
push
into
inc
jle
mov
stc
repnz
pop
xor
cli
sbb
in
xchg
xchg
popa
adc
jge
xchg
cld
cmc
adc
or
test
xchg
or
fnstcw
cmp
or
cs
int3
pop
test
jl
pop
and
lods
lods
mov
fcmovu
inc
sahf
faddl
push
dec
or
pusha
outsb
jle
adc
sbb
jb
add
xchg
fsubl
cs
fwait
lahf
enter
push
inc
cmp
mov
aas
xorl
test
ljmp
fbld
loope
push
clc
shlb
test
clc
loopne
std
push
sbb
jecxz
div
in
shll
sti
cltd
sub
std
xchg
push
test
jns
adcb
add
jecxz
mov
repz
push
ss
push
mov
or
sub
ret
add
mov
cli
repz
iret
jnp
or
roll
xchg
mov
out
cmp
or
lret
pop
sbb
inc
cmp
dec
mov
add
rcll
mov
and
lret
je
cwtl
inc
pop
inc
mov
add
ljmp
jge
sub
sahf
aaa
stos
in
lea
pop
data16
pop
add
adc
jecxz
mov
jg
add
cmp
orl
adc
xor
and
pushf
mov
testl
cmp
iret
fnstsw
popa
leave
jo
je
push
cmc
mov
xor
ja
add
pop
imul
popf
xor
adc
sbb
or
adc
mov
pop
jno
mov
pop
lods
sub
xor
xor
nop
cmp
jge
mov
add
lds
out
cli
sbb
jge
into
out
scas
cmpsl
lcall
insl
fscale
jge
out
in
cltd
sbb
push
call
nop
ds
inc
add
adc
push
sbb
es
mov
cmc
aaa
inc
add
cmp
test
push
mov
insb
pushf
outsl
jmp
stos
sbb
repz
les
dec
jg
cmp
rol
jmp
aas
popa
cwtl
subb
sbb
les
mov
push
pop
inc
push
xor
push
xor
sub
jl
lods
outsl
dec
and
sub
jecxz
dec
ret
ret
mov
incb
imul
pop
cld
push
push
loope
add
dec
cmp
mov
adc
cs
push
sbb
dec
lods
xchg
sub
dec
lds
xor
std
mov
xor
and
daa
and
in
rclb
mov
adc
jle
stos
ficoms
ret
dec
jae
jno
out
push
lds
lcall
xchg
in
sub
call
xchg
popa
andl
add
or
mov
sub
scas
insb
cwtl
cmpsb
ror
cmp
enter
cmp
loopne
lods
mov
jnp
mov
clc
sbb
push
fldenv
in
icebp
shlb
push
dec
mov
adc
or
sbb
test
clc
push
lea
and
and
push
fadd
imul
fisubs
pusha
insb
jg
ljmp
cwtl
inc
stos
pop
mov
or
sbb
test
fs
sbb
fldcw
sbbl
pusha
mov
jle,pn
enter
push
call
sub
pop
inc
sahf
fidivs
adc
xchg
mov
mov
sub
lock
int3
fwait
xor
cmp
cmp
add
popa
adc
mov
add
out
push
mov
inc
mov
int3
cmp
adc
mov
and
push
les
dec
sbb
std
in
leave
rcll
fwait
pushf
pop
insb
gs
or
in
fnstcw
sub
into
jl
jmp
sub
pop
inc
out
xchg
xchg
pop
js
inc
ret
mov
xchg
outsl
or
cmp
mov
stos
repnz
fsubl
ficoml
jl
push
aad
out
cmp
cld
inc
aad
je
jno
outsb
stos
or
gs
fs
xchg
js
imul
ret
cmpl
xor
leave
fistl
fcmovu
scas
xor
test
sub
data16
insl
es
pop
cld
into
xlat
push
mov
push
cld
rcrl
adc
cmp
outsl
xchg
add
sub
lahf
out
push
imul
mov
and
cs
je
dec
jmp
test
mov
sub
jne
hlt
mov
jmp
fstl
into
add
rclb
push
inc
dec
ret
idivl
cmp
jne
mov
inc
nop
fwait
popa
loopne
fbld
xchg
pop
bound
and
imul
ljmp
and
bound
mov
loop
int3
and
pusha
daa
and
iret
js
mulb
std
jg
push
cld
adc
movsl
negl
xor
cld
jae
stc
mov
adc
call
ss
movsb
adc
xchg
lock
cmp
jmp
das
mov
cmp
outsl
inc
cmpsb
std
mov
fs
mov
mov
jge
shrl
jmp
jmp
shrl
in
js
push
dec
sahf
repnz
cld
inc
rorl
pop
adc
call
hlt
fs
adc
or
mov
add
and
das
xor
xor
xor
add
and
dec
xor
fisttps
sub
push
jg
aad
leave
pushf
or
scas
jge
cmc
push
imul
push
cmp
jne
das
and
out
xchg
mov
pushf
or
psraw
mov
xchg
ret
andl
jecxz
cmc
cmp
mov
out
push
dec
ret
and
imul
fiadds
jge
push
adc
dec
fdivs
lcall
adc
sub
add
out
inc
cwtl
adc
mov
addr16
sbb
inc
inc
clc
xor
sbb
add
pop
sti
int
pop
ror
sti
repnz
mov
inc
leave
mov
jmp
mov
shll
sub
test
mul
mov
cs
sbb
das
push
lock
notl
cwtl
gs
add
push
ret
in
and
inc
mov
mov
inc
imul
xchg
leave
dec
pop
sarb
test
ret
cmp
jns
sub
push
icebp
add
pop
imul
jle
imul
fwait
dec
pop
adc
aaa
cmpsb
cmp
mov
popa
xor
dec
cmp
mov
lcall
es
dec
sbb
out
ret
adc
aad
adc
sub
xchg
iret
push
insb
push
jo
jne
jns
mov
imul
lcall
stc
push
iret
mov
adc
and
add
cmp
imul
ss
cltd
jge
mov
pop
mov
jmp
and
lock
cltd
fld
or
mov
loop
jmp
out
mov
in
or
out
jecxz
lcall
adc
add
add
add
ret
cmp
xor
inc
sub
and
adc
inc
lahf
push
xlat
sbb
shll
sbb
fists
ljmp
mov
inc
sahf
clc
cmp
xlat
popa
adc
push
scas
push
sti
push
in
lea
jno
jae
aaa
int
aam
das
jp
cmpsb
pop
adc
dec
repnz
stc
hlt
inc
sub
jecxz
js
mov
pop
inc
loop
fcoml
sbb
sub
hlt
dec
inc
out
inc
js
xor
xchg
scas
lds
add
shrl
nop
in
sbb
xchg
ds
stos
or
mov
cmpl
mov
xor
outsl
cs
and
push
scas
cmpsb
cmpsl
dec
cmpsb
fcom
xchg
inc
out
dec
push
shl
insl
mov
jns
jne
xchg
jae
int
cltd
fs
cmc
xchg
cwtl
js
cltd
mov
sbb
andb
pop
mov
mov
mov
test
and
and
and
fstp
aam
pop
clc
cli
leave
cltd
dec
inc
mov
push
ds
hlt
leave
sar
iret
cli
idivb
jge
std
xchg
out
jmp
fistpl
rorb
xchg
or
adcb
or
cmpxchg
xor
nop
xor
cmp
mov
test
jg
sarb
std
mov
mov
dec
in
fistps
push
inc
addr16
add
std
loope
in
test
imul
xor
xchg
arpl
adc
add
mov
pop
xor
xchg
cmp
or
dec
shll
test
das
push
sub
sti
push
mov
stos
jae
int
jne
or
ja
jg
popa
lock
repnz
pop
daa
add
dec
loop
mov
jmp
mov
mov
sbb
xchg
add
adc
push
push
movb
fnstsw
and
push
mov
roll
dec
pop
and
dec
int
cmpsb
sbb
sbb
fstl
inc
jg
pop
jo
push
adc
sbb
xchg
sbb
mov
test
sahf
outsb
repz
stc
and
loop
adc
mov
pop
out
dec
mov
lods
dec
xchg
pop
decb
cmpsb
sub
mov
jb
push
rcrb
ljmp
popa
int
in
jnp
inc
jo
mov
dec
push
js
inc
xor
xchg
out
lock
adc
aas
sub
in
jg
mov
push
aam
or
add
iret
jo
pop
dec
rcrb
jp
push
lock
out
inc
lahf
jb
call
notl
xorb
jmp
arpl
insb
out
popa
inc
flds
adc
loope
adc
xchg
cmp
mov
aas
mov
push
int3
ds
mov
int
js
pop
cmc
rcrb
jle
push
add
and
pop
pusha
in
sbb
test
sahf
jns
jecxz
data16
jl
sbb
push
xchg
movsl
mov
adc
sbb
sbb
fdivl
pop
sub
icebp
mov
xor
jp
fcom
outsb
ljmp
xchg
push
nop
dec
jmp
pop
cld
adc
outsl
cmpsb
in
mov
add
push
jb
and
insb
insb
jecxz
sbb
lahf
std
lcall
leave
add
pop
push
aaa
adc
movsl
jae
fbld
cmp
dec
pop
es
dec
fsubrs
push
fisubl
into
pop
gs
imul
cmp
xor
jns
xchg
aaa
in
sbb
lcall
out
subb
xor
jbe
test
lea
stc
add
bound
mov
cli
call
push
fmuls
jg
int
repz
mov
ja
aas
push
test
fs
repnz
mov
pop
std
mov
jnp
xchg
rcrl
jnp
fistpll
mov
cmp
data16
addb
cmp
push
xchg
pop
push
fistpl
int
ja
push
mov
mov
pusha
add
inc
jl
or
sbb
cmp
sbb
call
sbb
xor
adc
xorb
push
mov
lods
mov
mov
not
pop
xlat
aas
cmpb
dec
shl
xchg
mov
mov
mov
xor
push
rorb
pop
int
jle
and
outsb
repnz
mov
mov
fdivrl
or
xchg
nop
add
test
subb
mov
pushf
jnp
test
lret
lods
aam
pop
mov
inc
push
outsb
xlat
aad
ficompl
jae
test
sti
ret
aas
inc
cmc
roll
pop
idiv
loope
std
cltd
cmpsb
loopew
pop
lods
repz
call
push
push
inc
push
xor
aaa
rclb
mov
add
imul
inc
mov
push
inc
mov
cmpsb
sbb
lret
inc
adc
into
dec
sti
ds
xchg
in
in
sub
pop
jne
xlat
jl
sub
cs
aaa
push
ret
mov
xor
rcrl
shll
and
mov
push
push
jmp
xor
mov
cltd
fidivrs
mov
cli
scas
ds
push
jmp
jmp
xor
out
ret
jns
dec
dec
ja
sub
jae
mov
cwtl
sahf
hlt
dec
mov
addl
mov
rcrb
test
into
push
mov
adc
jnp
lret
nop
inc
mov
call
dec
les
cli
inc
enter
lcall
fildll
cmc
incl
gs
js
psadbw
or
cmp
rcpps
lea
add
xchg
ja
or
fmul
sub
lods
repz
mov
pop
fistpl
pop
push
movsb
cmpsl
inc
pop
leave
lds
fwait
adc
dec
incb
add
out
shrb
add
repz
push
mov
notl
dec
push
mov
push
jbe
es
into
pop
xor
fstpt
push
inc
shll
add
push
pop
jbe
mov
int
mov
xchg
inc
cmpb
popf
hlt
in
mov
les
sub
mov
jnp
lret
xchg
add
push
mov
push
insl
scas
repz
push
and
jle
movsb
jne
leave
push
pop
dec
pop
int
in
jecxz
xchg
sti
push
add
inc
loope
shrl
jne
cmp
sub
loop
outsl
clc
arpl
mov
or
sbb
inc
xchg
punpckhwd
test
pop
mov
jns
dec
notl
inc
and
jp
push
arpl
sar
inc
les
stc
pop
inc
fpatan
xchg
cwtl
pop
repz
fs
push
outsb
lcall
lahf
push
and
imul
mov
pop
jo
xchg
mov
add
mov
pop
push
push
mov
sbb
hlt
out
fs
mov
push
fisubrs
orb
int
jge
sub
dec
dec
fs
rolb
xor
dec
out
xchg
jg
push
add
xchg
add
cli
sub
mov
fadds
add
and
adc
dec
mov
dec
xchg
pop
movsb
sbb
ret
lods
pop
lret
sbb
push
add
xchg
jbe
movsl
add
bound
dec
sbb
dec
out
pop
insb
pop
xchg
inc
or
add
andl
mov
shll
mov
sbb
sub
pop
lea
pop
pop
xchg
sbbb
in
push
sbb
ret
mov
pop
cs
jae
inc
jg
xchg
lods
mov
push
in
cmc
loope
push
dec
cltd
pop
inc
loopne
add
sbb
lahf
jl
cli
stc
jb
cld
repz
mov
add
push
stos
aaa
cmp
icebp
xchg
rorl
ljmp
leave
add
js
mov
push
pop
out
add
and
pop
sbb
jnp
push
shrb
push
fbld
push
shrb
in
aam
add
sbb
push
and
dec
cmc
pop
cltd
xchg
pushf
mov
push
cs
pushf
sbb
cltd
fwait
dec
inc
mov
dec
js
push
push
add
jl
jge
jg
cmp
and
or
mov
int
out
sahf
mov
adc
in
mov
mov
add
ret
leave
and
pop
dec
into
pop
mov
mov
or
fcoms
jecxz
sti
xlat
iret
aas
jle
jmp
jnp
js
jl
pop
adc
cs
sub
aas
sub
pop
mov
shlb
daa
xchg
cmpsb
and
cmpsb
ffree
pop
push
or
cld
les
jno
stc
int
fld
fidivs
xor
dec
cmp
pop
pop
jb
arpl
out
int3
cmp
mov
xchg
jnp
adc
arpl
ljmp
out
je
mov
or
sbb
int3
addb
cmpsl
pop
pop
push
mov
pop
test
and
xor
cli
fcompl
and
movsl
arpl
scas
cld
in
push
mov
mov
int
fcmovu
sub
push
add
mov
imul
push
popa
inc
xchg
adcl
cmp
adc
mov
mov
repnz
mov
mov
add
fnstcw
cwtl
push
imul
push
roll
sbb
into
scas
stc
inc
dec
and
mov
jmp
sbb
cs
push
sub
pop
shlb
fwait
cmp
cmp
or
add
pop
fdivs
test
mov
movsl
loopne
mov
test
pop
pop
dec
sbb
fisubrl
rolb
stc
loope
repz
stos
std
add
sbb
xor
lcall
mov
push
sarb
adc
daa
cmp
jbe
cmp
sarb
lods
mov
ret
push
fdivl
jnp
jne
aam
or
leave
push
add
lds
lea
outsb
cmp
pusha
cmc
out
jecxz
sbb
icebp
pusha
arpl
push
cmpsb
ja
icebp
and
out
mov
push
into
loopne
shll
cmc
or
loop
mov
and
dec
fsubl
mov
dec
repnz
iret
ja
sub
fwait
xor
hlt
imul
jno
call
arpl
adcl
inc
jmp
imul
cltd
arpl
mov
or
icebp
aaa
sbbl
mov
or
in
push
fisubs
sub
mov
ret
fwait
ret
std
xor
sti
loope
in
jecxz
mov
inc
lock
imul
fnstsw
mov
clc
xor
stos
sarb
add
sub
mov
xor
test
ljmp
pop
xor
pop
imul
fnstsw
icebp
gs
rclb
ret
adc
pop
mov
push
jns
jo
in
jbe
push
addl
int3
cmp
pop
stos
test
xchg
add
testl
scas
cmp
xlat
fidivrs
mov
inc
stc
pop
stos
pop
mov
insb
and
push
cwtl
ret
push
lret
add
je
imul
clc
out
mov
dec
andb
cmpsb
inc
adc
daa
cmp
sbb
xor
lcall
mov
mov
sub
pop
mov
data16
lods
pop
repnz
std
pop
aas
xchg
add
iret
shl
inc
add
inc
je
popa
push
mov
jae
cmp
fbld
jbe
fs
xor
fstpt
fdivrl
jmp
icebp
mov
fldt
lock
sub
lds
repz
pop
cmc
cs
out
test
bnd
inc
sbb
imul
jle
adc
repz
arpl
inc
jg
xor
inc
out
and
cmp
or
orl
inc
cmp
inc
jne
shll
sub
std
add
test
mov
shl
imul
repz
or
push
push
mov
mov
fwait
mov
mov
fistpl
andl
push
mov
mov
jge
ljmp
pop
xchg
adc
stos
mov
cmp
ror
dec
mov
push
orb
into
cmp
mov
sahf
popa
loope
xor
cmp
push
push
nop
xchg
mov
add
add
mov
cmp
stos
jge
and
and
jns
cmc
mov
pop
mov
arpl
addr16
clc
ret
sub
jg
inc
mov
adc
loope
clc
fcomps
lahf
in
mov
adc
mov
mov
adc
sub
add
mov
cs
mov
jne
test
inc
loop
pop
push
and
ja
adc
lret
pop
cmpsb
sahf
push
ret
cmpsl
addr16
cltd
scas
repnz
lds
dec
icebp
loope
imul
mov
jge
and
test
mov
mov
aas
das
jecxz
test
and
xor
push
fbld
sbb
dec
rcrb
movlps
sub
in
incb
call
add
fwait
into
jbe
xchg
aas
ret
jb
and
mov
jg
loop
cmp
lods
sbb
xor
cmpsl
mov
adc
xchg
dec
jmp
inc
mov
cltd
rcll
jbe
inc
xchg
cmpsb
xor
sub
xor
cmp
call
insl
xchg
mov
sub
scas
pop
push
sub
sub
insl
inc
mov
xor
les
push
lock
aas
lret
mov
or
movsb
std
lds
jg
in
xor
pop
div
sbb
fists
shrb
dec
clc
test
cmp
ja
sbbl
xchg
scas
sub
insl
pop
push
mov
push
push
push
lret
aas
sbb
iret
loopne
movl
addr16
add
xchg
and
or
arpl
mov
bound
mov
mov
and
jb
or
jp
mov
cmp
add
mov
insb
pop
jge
xor
arpl
push
push
mov
call
sbb
xchg
clc
jle
cmp
jbe
std
xor
cwtl
repz
mov
xor
mov
sahf
push
push
imul
mov
push
ficoms
pop
repz
jne
add
add
ds
jecxz
leave
inc
jo
in
or
insl
movsb
push
mov
pop
add
fbstp
xlat
adc
mov
push
stos
push
int
mov
inc
inc
pushf
xchg
sub
loop,pt
mov
mov
imul
add
cmp
out
push
push
and
and
hlt
push
enter
inc
sbb
jae
loope
xchg
testb
roll
loopne
jb
mov
cwtl
es
jb
cmpsl
jns
test
cld
push
or
rcrb
xor
test
adc
jns
sbb
mov
shl
and
jbe
dec
or
mov
push
lret
add
mov
sahf
cli
cld
or
jno
call
insb
mov
xchg
push
push
inc
sbb
cld
mov
imul
pop
sub
in
and
jnp
or
movsl
sbb
fimuls
jmp
cli
lret
roll
loopne
out
cmpsl
and
mov
adc
push
pusha
andl
repnz
addr16
mov
push
xchg
ss
roll
add
popl
mov
cmp
aaa
xor
add
leave
stos
dec
fmulp
daa
ffreep
and
push
add
out
mov
jge
hlt
in
ret
pop
outsb
loope
xchg
pop
jle
orl
pop
shr
in
fisttpl
mov
add
xor
test
pop
fnstcw
stos
cmp
and
push
jge
arpl
es
shll
pop
mov
hlt
lret
fimull
frstor
jne
mov
popa
xchg
sbb
xchg
jb
cltd
sub
int3
fsubs
push
xchg
adc
or
outsb
inc
out
or
and
iret
mov
cmp
js
xor
lods
jno
xor
iret
in
sahf
clc
mov
dec
shll
sbbb
and
jle
addr16
shll
add
pop
push
xchg
adc
cmpsb
mov
cmp
mov
aad
ds
notb
stos
sub
sub
rolb
gs
or
out
push
jecxz
fld
jp
out
mov
mov
imul
js
inc
or
loopne
xchg
jo
xchg
mov
adc
les
mov
idivb
mov
inc
ss
inc
mov
jbe
cmp
fnstsw
sar
lea
leave
je
hlt
sahf
imul
lcall
xor
xchg
lret
sbb
in
daa
mov
pop
aas
ret
mov
add
cmpsb
fiadds
mov
sub
inc
dec
dec
adc
imull
dec
dec
and
mov
and
testb
cmp
cld
jmp
pusha
push
mov
jl
out
pop
mov
cmc
push
sbb
lret
mov
pop
adc
ds
mov
shll
push
mov
addl
lock
jo
loopne
nop
outsb
sbb
in
jnp
and
mov
and
mov
push
andl
js
jecxz
imul
mov
test
and
or
fldl
jae
jp
mov
dec
or
lods
jo
dec
mov
pop
pop
xor
sub
negb
lret
je
das
insb
mov
sarl
jne
pop
dec
pusha
pusha
mov
cmp
lds
out
or
cmp
fwait
repz
xor
popf
push
jne
ljmp
or
call
xchg
jbe
mov
cmp
mov
clc
pop
jle
xor
mull
scas
ja
rcr
roll
bound
fmull
sub
cwtl
sarb
mov
scas
popa
pop
adc
arpl
gs
xchg
bound
add
sbb
dec
decl
xor
mov
out
es
stos
sub
mov
ds
xor
into
xor
addb
inc
int
test
pushf
dec
jecxz
in
ljmp
pop
out
insl
mov
xchg
ds
xchg
and
add
inc
mov
mov
in
cmpsl
mov
mulb
mov
sub
aam
lods
or
jb
pop
leave
xor
ret
adc
inc
xchg
scas
clc
ret
ja
imul
push
adcl
xor
push
lods
push
jmp
jae
popf
xchg
or
pop
mov
lcall
ret
pop
enter
js
or
or
xchg
push
pop
fs
jg
fisttpll
dec
pushf
or
add
gs
jge
push
out
fsubrs
insl
arpl
loopne
xor
shrl
jnp
test
xor
and
push
mov
leave
sbb
push
rolb
ficoms
movsl
pop
dec
lret
imul
int
addl
test
repnz
jae
or
imul
shll
and
sbb
sbb
jns
scas
xchg
loope
das
and
mov
mov
aaa
mov
repnz
divl
pop
sub
sub
es
imul
ret
mov
ss
lret
dec
repnz
inc
stc
dec
mov
jp
aas
inc
jp
cmp
sbb
pop
popf
stc
inc
fstl
xor
or
sbb
push
adcb
inc
dec
xchg
jae
cmp
xor
shlb
pop
out
mov
repz
fisttps
or
daa
out
mov
out
stos
dec
adc
cmc
shufps
mov
jle
scas
int3
or
sub
lcall
xchg
mov
mov
movsl
mov
ret
test
movl
in
out
mov
je
pop
testl
loop
shlb
jnp
pop
xchg
cmp
add
push
sbb
sub
cmp
fildl
int
adc
lods
add
pop
ds
mov
scas
loope
mov
xchg
popf
lcall
dec
add
loopne
pop
shl
xchg
ljmp
hlt
repz
hlt
in
mov
sbbb
sbb
mov
data16
cmp
cmpsb
test
jo
and
xor
in
mov
jecxz
dec
push
pushf
outsl
push
jbe
pop
les
dec
mov
ss
enter
fdivrp
xchg
in
cmp
mov
call
lea
mov
scas
mov
cs
add
ret
adc
insb
or
jmp
sub
mulb
and
jns
xchg
rcrb
jns
inc
mov
mov
add
test
shlb
sbb
loope
xchg
xchg
cmp
push
mov
add
xchg
rorl
mov
push
adc
lea
add
cmp
or
movsl
jge
test
loop
fldl
repz
in
js
push
jecxz
add
dec
into
ret
sub
push
inc
sbb
clc
in
cmp
pop
xorb
ja
or
repnz
sbb
in
in
pushf
xor
mov
shrl
add
mov
mov
mov
cmpsl
fnstenv
inc
das
sub
sbb
dec
imul
dec
shll
and
lods
cmp
jle
stc
rorl
jne
dec
mov
insw
pop
jmp
ja
sub
xorl
fbstp
daa
ficoml
mov
les
aas
adc
test
fnsave
test
jno
xor
inc
and
daa
push
sub
fdivrl
loopne
lods
fcmovnu
push
popf
jne
std
repz
lock
or
les
jecxz
jl
xchg
xchg
shrb
aad
ja
dec
mov
rorb
dec
and
sub
inc
sti
jne
adc
scas
test
and
pop
pop
fstp
add
inc
ret
jp
scas
xor
jbe
jns
xchg
xor
imul
popf
clc
adc
shll
je
icebp
push
or
loop
push
lods
push
sub
fs
inc
ficompl
mov
in
scas
mov
cmp
ja
js
aaa
inc
clc
pop
mov
push
sti
mov
push
pushf
dec
mov
sbb
dec
xchg
fdivl
pusha
inc
hlt
pop
mov
sti
loopne
add
cli
scas
mov
adc
push
nop
or
inc
inc
push
mov
inc
mov
mov
lds
xor
mov
push
into
addr16
testb
dec
and
repz
inc
out
subl
xchg
adc
sub
adc
xor
outsb
sbb
or
lods
adc
push
arpl
mov
add
push
int3
aas
into
mov
xchg
jle
cld
sub
outsb
out
xchg
lds
ret
xor
imul
clc
gs
mov
xchg
cltd
arpl
sub
adc
dec
push
adc
pop
mov
and
cs
mov
cld
lea
stos
dec
sub
sbb
es
inc
jno
jno
movsb
or
pop
rcrl
sbb
xchg
int
outsb
popf
js
push
push
xor
mov
lahf
ss
gs
push
adc
sub
push
cmpsl
das
xor
ret
jo
mov
in
aaa
nop
sbb
sub
movsl
sti
adc
inc
rolb
rcl
ret
push
push
scas
push
sbb
pop
call
cltd
adc
sub
imul
sub
dec
xor
lret
mov
call
sub
mov
icebp
or
jne
and
mov
mov
scas
or
movsl
pop
mov
leave
mov
inc
mov
repnz
mov
pop
dec
mov
negl
fildl
lods
aaa
xchg
out
xor
pop
addl
xor
stos
movsb
push
pop
or
cmp
fistl
adc
aaa
pop
pop
inc
ret
pop
pop
fmul
jl
push
dec
inc
mull
xchg
iret
andb
decl
aas
dec
adc
out
leave
xchg
popa
adc
lcall
push
out
mov
stos
jle
mov
movsb
std
int
jno
mov
add
loop
inc
cmpsb
jmp
pop
adc
std
xlat
dec
popa
pop
ret
mov
sub
pop
rcl
test
lds
aaa
jb
or
pop
movsb
fwait
fwait
addb
xchg
es
fs
pop
xchg
adc
jl
xorl
push
cmp
fbstp
sbb
imul
out
std
push
pushf
fsubrl
push
sbb
inc
sub
inc
sub
repnz
popa
mov
sti
and
jae
xor
in
sub
mov
cltd
mov
test
or
call
mov
daa
jb
mov
push
xlat
fists
dec
xor
loopne
aad
std
fmulp
pop
insb
inc
pop
xchg
push
push
jno
xchg
enter
jae
in
jns
mov
dec
mov
mov
mov
adc
test
inc
adc
add
mov
ret
xchg
sbb
mov
test
cmpsl
ret
lods
pop
jns
lods
movsl
outsb
divl
insl
xor
out
jo
mov
push
fsubl
popf
outsb
lret
sbb
push
inc
mov
jp
sub
sahf
call
xchg
pusha
cmp
mov
sbb
sbb
push
orb
ret
or
push
mov
cmp
xor
subb
sbb
scas
popf
movsb
and
pop
mov
push
movsl
or
add
fidivrs
shll
call
call
pop
arpl
fsub
inc
push
cwtl
aad
inc
dec
xchg
int3
pop
add
cmp
add
mov
push
and
das
or
sub
pop
popf
and
adc
mov
pop
xor
shrl
into
lods
mov
adcl
test
fwait
and
cmp
andnps
dec
cmp
cli
sub
and
loop
adc
rcrl
xor
pop
sub
mov
cmpsl
cmpsl
cld
rclb
jae
push
dec
je
xor
loope
cmc
jp
push
and
repz
sarl
aam
dec
lret
les
lea
mov
sbb
push
je
daa
lret
mov
fs
shl
test
mov
push
rcll
das
hlt
ds
xchg
rcr
pop
arpl
das
mov
loope
inc
aam
clc
dec
vmovss
adc
jl
fs
testb
or
and
or
out
dec
mov
xchg
test
ret
repz
vmptrst
xchg
xchg
mov
sub
sub
es
cmpsl
fst
xchg
jne
mov
aam
ret
dec
adc
hlt
dec
xchg
inc
or
jle
je
push
push
ja
inc
mov
or
lret
cmp
aam
xchg
pop
lds
out
test
sub
std
dec
push
mov
mov
int
sbb
shl
cli
sub
sub
pusha
mov
cmp
negl
push
mov
push
das
sbb
xchg
bswap
pop
mov
jle
roll
andl
push
dec
mov
push
cmc
in
ja
push
add
lret
lret
inc
mov
jge
dec
ja
rol
jl
call
out
mul
loopne
out
pushf
inc
xchg
dec
push
or
test
inc
and
xorl
shr
xor
dec
cmpsb
cmpl
sbb
stos
jecxz
sub
stc
push
mov
aam
rep
je
stc
xor
cmp
xchg
cmc
je
loopne
out
pop
jecxz
loope
stos
dec
pop
lea
xchg
adc
xor
inc
mov
xor
insb
scas
stos
push
inc
jmp
xchg
dec
push
lock
xor
cli
les
shr
adc
mov
mov
xor
fsub
dec
xor
lret
bndstx
loopne
testb
rcll
addr16
and
dec
mov
add
add
adc
ja
lret
pop
xor
sbb
aam
mov
sbb
lea
cli
cmpsl
ret
lock
arpl
push
outsb
imul
mov
cmp
mov
xor
nop
cmp
and
imul
mov
mov
and
mov
add
dec
es
fcomps
aaa
jp
push
push
bswap
mov
ret
jbe
dec
sti
mov
lods
int
notb
or
add
mov
pop
nop
or
xchg
psraw
sahf
jae
adcb
or
add
loop
dec
sbb
orb
sahf
outsb
sub
int
jl
sub
push
xor
notb
xor
int
jno
mov
lcall
into
fwait
icebp
xchg
sarb
mov
cwtl
or
or
adc
cltd
test
and
mov
xor
xchg
adc
cmp
loop
push
mov
jnp
lods
aad
stos
pop
xchg
rcll
fstps
dec
mov
inc
dec
or
dec
push
in
shll
dec
mov
lahf
leave
jge
xor
adc
jmp
push
notb
inc
push
xlat
in
cmc
call
in
in
out
and
in
pop
fisttps
lea
stos
imul
pushf
and
insl
and
xchg
or
pop
ficompl
xor
pop
jl
adcb
mov
in
xor
hlt
inc
loop
mov
or
sbb
test
bswap
js
int
mov
inc
xor
cmp
xor
and
cwtl
test
into
or
push
jae
cmp
pop
sti
enter
int
cmovns
adc
sub
jl
popa
pop
in
sarb
out
and
aas
cltd
pop
or
lods
pushf
xchg
lret
adc
cmp
add
jl
cmp
or
pop
fcmovnbe
sub
push
fst
out
cli
or
push
rorb
inc
dec
ret
mov
push
mov
insb
jae
in
cmc
ljmp
cwtl
adc
mov
push
enter
shll
sub
adcl
jns
mov
movsl
mov
add
cmp
xor
adc
mov
jnp
shl
push
inc
jns
cwtl
imul
testb
popf
cmc
dec
addr16
push
pusha
xchg
mov
ja
nop
add
inc
iret
adc
cmp
rclb
mov
mov
mov
push
sub
es
in
xchg
jnp
push
or
xlat
cwtl
mov
inc
dec
xchg
jb
dec
testl
es
pop
and
movsl
xchg
add
push
nop
xchg
xor
mov
sbbb
clc
cmp
test
outsl
lods
mov
or
pop
movsb
leave
fwait
pop
inc
dec
int
inc
test
mov
push
inc
adc
mov
fldenv
pop
jmp
ja
jg
sbb
push
fwait
xor
fsubr
pop
xchg
in
cmp
pop
push
and
add
mov
adc
out
cmp
mov
mov
or
pop
mov
sarl
pop
enter
int3
and
push
inc
jg
add
idivl
mov
call
push
arpl
imul
fs
pop
add
in
pop
xchg
mov
or
js
sbb
add
mov
fimuls
jp
clc
adc
iret
test
push
imul
add
stc
sti
inc
add
outsl
xchg
cwtl
loop
jb
hlt
jle
loop
cwtl
jecxz
orl
xchg
cmp
xor
cmp
sub
movsl
aad
sbb
and
dec
loope
adc
scas
das
fldenv
adc
bound
pop
std
mov
lea
leave
dec
inc
xchg
lds
push
test
repz
mov
pop
pusha
inc
pushf
sbb
adc
or
dec
mov
aas
xor
mov
or
and
push
fbld
push
push
leave
add
inc
lret
push
scas
int
aas
aad
ret
dec
loop
testl
stc
pop
adc
add
mov
sub
push
push
adc
xchg
ret
ss
ja
int3
call
mov
sub
shrl
or
sub
das
add
pop
push
rcr
push
rclb
in
sub
inc
cld
cmpsb
push
inc
xor
insl
push
adc
inc
xchg
add
ljmp
xchg
mov
cmp
add
cmp
xor
aaa
or
out
and
sub
lds
sub
jo,pn
rcll
ret
leave
scas
leave
inc
and
loope
filds
test
lock
and
jecxz
mov
ja
sbb
or
dec
addr16
sbb
mov
ret
xor
or
movl
push
jne
shrb
or
js
mov
int
fnsave
test
shl
jl
into
test
inc
int3
jp
call
data16
jae
push
sbb
lea
adc
mov
fstl
es
ds
mov
add
inc
scas
clc
pop
xor
repnz
mov
push
cltd
xchg
push
push
leave
xchg
and
stos
lock
xchg
mov
enter
jp
dec
jge
jb
xchg
imul
push
loopne
stos
ret
jo
pushf
loop
mov
nop
xchg
sub
xor
add
pop
cmp
out
cmp
xor
jae
nop
enter
xchg
and
and
fcmovb
loop
bound
push
movsb
pop
fistpl
adc
mov
sub
mov
js
jge
lods
push
mov
jmp
add
push
and
mov
ficomps
add
pusha
adc
mulb
cmp
cmp
das
es
dec
cmpsl
fucom
rorl
sahf
ja
push
lds
add
dec
ret
lock
ret
jnp
add
xor
testl
bound
in
jp
mov
sbb
das
push
dec
or
pop
add
ds
or
cmp
xor
scas
lods
adc
dec
pop
lret
into
cltd
push
cmp
add
ret
cmc
inc
ud1
ja
js
lock
mov
cld
jge
jo
and
push
cltd
xchg
addr16
mov
adc
loope
outsl
rolb
rorl
add
inc
xor
mov
hlt
shlb
test
xor
push
adc
dec
xor
adc
pop
inc
cli
aad
shl
add
popa
xorb
call
loope
fwait
pushf
fidivrl
and
xchg
repnz
cmp
sub
ret
mov
inc
bound
cmp
call
fsubp
dec
pop
dec
cmp
mov
sub
push
les
dec
cmc
inc
jp
push
sbb
ret
data16
cwtl
sbb
out
mov
cmp
xor
popa
xchg
and
push
adc
movsl
fldcw
rcll
int3
push
sar
leave
mov
std
ret
test
inc
cld
rol
lds
mov
stc
pop
jne
pusha
push
outsl
mulb
into
out
sbb
mov
push
xchg
add
add
subl
js
mov
mov
ljmp
cltd
cmp
cmpsb
mov
push
fstl
push
into
dec
cs
int3
add
mov
pop
pop
bnd
call
jge
dec
loopne
mov
push
popf
cwtl
cmpsb
or
adc
std
or
pop
addr16
dec
xchg
add
dec
cmp
enter
mov
shll
push
faddl
adc
rcrb
enter
gs
sub
lea
jo
loop
jbe
add
sub
sbb
or
pop
sbb
xchg
xchg
sbb
mov
sub
cmp
aaa
and
pop
mov
aaa
iret
sub
pop
push
into
fistl
rclb
cli
xor
cld
dec
shl
rclb
jp
out
pop
jg
loopne
mov
adc
pop
out
in
scas
or
subl
adc
orl
mov
xor
xchg
and
mov
fcmovnu
mov
push
xchg
sub
jbe
push
dec
call
loop
arpl
test
inc
jo
fs
pop
jge
test
cs
pop
loope
aam
cwtl
jl
sbb
xor
cltd
imul
call
xor
in
fldenv
stos
mov
mov
fbld
cmp
dec
xor
jle
mov
lods
mov
dec
stc
stc
jge
sbb
in
cmc
insb
sbb
mov
sbb
scas
push
mov
cmp
cmp
mov
test
mov
mov
pop
inc
fmul
cmpsb
or
mov
add
xchg
jg
jb
cli
cmp
jae
mov
xlat
cmc
lahf
jnp
mov
pop
mov
and
gs
or
mov
xchg
cmp
fiadds
sahf
sbb
xor
and
negl
stos
adc
sbb
cmpsl
lret
in
pop
xchg
xor
enter
icebp
jmp
xchg
sbb
repz
or
jle
jno
jno
push
sub
dec
outsl
scas
add
outsl
mov
mov
mulb
add
es
hlt
std
pop
fs
cmp
int3
mov
xor
push
sbb
into
outsl
mov
cmpsl
mov
mov
roll
aad
sbb
leave
int
inc
inc
sbb
dec
add
xchg
jmp
stos
sub
adc
sub
pop
aad
or
lods
xchg
jge
pop
rcrl
push
dec
out
push
loopne
ret
int3
lahf
push
cli
xchg
divl
or
mov
push
or
lea
fwait
add
nop
add
fisubl
aas
mov
xor
mov
lret
dec
js
stos
sbb
dec
js
sub
into
scas
jne
in
dec
cmc
imul
push
adc
lret
ret
into
dec
jno
push
cmc
ds
out
or
imul
adc
sti
andb
sub
mov
adc
stc
mov
sub
sub
aas
rcll
js
repnz
fsubrl
push
in
dec
dec
es
std
xchg
ljmp
sahf
out
repnz
pop
xchg
dec
in
jecxz
or
out
add
pop
dec
mov
cmp
pusha
sbb
mov
add
push
cli
and
loope
dec
pop
das
pop
adc
inc
push
adc
push
add
scas
push
inc
cmpsl
aam
shr
jno
push
or
cld
fs
pop
jecxz
mov
arpl
xchg
jg
adc
jno
or
mov
loop
cld
sub
cmpl
xor
and
mov
fs
pop
pop
dec
mov
daa
mov
push
fists
into
out
sub
rcl
int
in
lret
mov
popf
adcb
loop
mov
add
xor
pop
xchg
fistpll
xchg
mov
or
lahf
subl
mov
and
jg
mov
xchg
push
push
dec
cld
cli
dec
sti
mov
js
insb
xchg
jno
pop
divl
out
pop
mov
iret
sub
dec
in
rcrb
xchg
add
mov
add
cmp
shll
test
xor
movsl
shll
sbb
push
sti
dec
xor
jno
cli
mov
mov
fidivs
jmp
arpl
and
adc
cmp
lds
ja
jo
lods
out
dec
sub
push
mov
insb
shrl
pop
out
push
add
or
loopne
fsts
loope
rclb
push
sbb
inc
ret
inc
mov
or
adc
mov
or
jmp
inc
fsub
fwait
mov
das
sahf
sbb
enter
sbb
cli
xor
mov
push
rcr
stos
dec
jns
shrl
loop
pusha
mov
enter
leave
std
pop
enter
lea
mov
jp
inc
inc
jl
sub
bound
mov
mov
xchg
leave
call
xchg
mov
or
mov
ds
jp
hlt
fnstsw
out
push
cmpsl
cmp
add
movsl
pop
inc
rclb
pop
adc
jo
int3
faddl
enter
push
mov
cmpsb
in
or
pop
fsubrs
jle
push
mov
pop
sbb
out
push
or
cwtl
pop
pop
sbb
dec
rolb
jg
repnz
add
and
cmp
cmp
adc
popf
mov
fldl
sub
es
aas
fstps
adc
inc
fsub
dec
jle
in
xlat
jp
cmpl
dec
or
out
sub
out
enter
mov
cmp
cmp
sysenter
aaa
sbb
sub
cmp
xchg
jmp
outsl
mov
subl
and
lds
sbb
fstpl
xchg
cmc
push
rolb
pop
into
inc
pop
jns
in
inc
sbb
ljmp
xchg
inc
outsb
cmc
insb
inc
cwtl
push
add
daa
push
orb
out
xchg
add
xchg
rolb
adc
mov
sub
mov
sarb
jg
repnz
rcrl
ret
or
incl
outsb
sbb
add
stc
loopne
sbb
jne
sbb
cmp
aad
imul
sarb
cwtl
fsubrs
inc
aaa
xor
mov
xlat
pop
in
mov
popf
cs
mov
push
movsl
cmpb
dec
xor
jp
dec
cld
jbe
inc
sub
push
and
jmp
mov
push
add
xchg
adc
jg
mov
or
testl
aas
push
pop
push
inc
movsl
lods
dec
add
fldl
mov
cmp
xor
leave
loope
repnz
icebp
mov
jp
sbb
xchg
sub
sbb
lock
xchg
jmp
xchg
add
sbb
and
fisttpll
or
clc
xor
inc
rcrb
mov
fidivl
inc
mov
jmp
lea
out
jb
sbb
lods
sti
cmc
sar
jle
or
mov
icebp
cwtl
fstps
mov
xor
movsl
and
dec
dec
mov
cmp
das
and
push
dec
xchg
movsb
and
in
cli
dec
enter
pop
push
push
mov
sbb
rcr
gs
loope
mov
jp
lret
ds
xchg
std
mov
clc
popa
lahf
outsb
roll
and
scas
fstpt
xchg
push
mov
pop
pop
mov
enter
and
inc
sub
and
dec
and
jle
jb
bound
mov
jecxz
jb
test
in
repnz
imul
lahf
xchg
inc
jecxz
gs
xchg
or
fsts
xchg
pop
orl
orb
add
push
push
mov
add
rorl
mov
push
dec
lahf
pop
adc
xchg
dec
mov
out
jae
imul
ljmp
shll
sbb
lods
mov
push
push
mov
test
test
aad
mov
xor
fcoml
in
push
sarl
sbb
dec
fcmovb
int3
mov
shl
repnz
ja
or
divl
ljmp
push
xchg
xor
sub
xchg
or
and
pushl
adc
mov
mov
sub
ss
lcall
fcmovnu
push
fcoml
ja
xor
rolb
inc
shr
jecxz
add
mov
or
push
add
add
sbb
or
pop
add
and
stos
push
lods
test
cmp
stos
insl
cmp
fisubl
clc
dec
popf
and
dec
dec
dec
pop
cmpsl
dec
rol
stc
push
scas
clc
jb
jg
dec
stos
fs
fs
popa
mov
mov
mov
pop
pop
push
dec
jo
mov
in
cmp
cmp
add
sub
cmp
and
and
test
xlat
mov
sbb
mov
dec
neg
ror
pop
ja
ljmp
mov
jge
mov
aaa
call
aaa
in
sahf
repz
cltd
push
dec
sbb
xchg
lcall
add
xchg
ds
and
and
ret
xchg
dec
jo
movb
xchg
std
clc
dec
out
jbe
test
adc
movsl
imul
mov
aaa
adc
sbb
std
push
mov
mov
dec
test
ds
bound
dec
lock
and
jmp
notl
mov
mov
lahf
inc
inc
or
jle
mov
cmpsb
jl
cwtl
out
push
imul
ds
cltd
and
ja
sbb
push
mov
mov
sub
and
xorl
jmp
fadds
mov
xchg
and
sub
dec
cmp
hlt
mov
stc
int
inc
jbe
lods
test
mov
icebp
adc
adc
push
les
lea
and
or
adcl
sub
adc
push
or
mov
add
scas
ffreep
aas
push
clc
fisubs
in
les
xchg
sbb
std
arpl
in
cli
daa
xchg
loopne
jno
cmp
hlt
jae
fiadds
dec
cmp
test
inc
sub
push
sbb
nop
cltd
mov
cmpsb
fldcw
lods
dec
repz
or
test
sbb
push
int
cli
xchg
js
loop
dec
sub
je
cmp
jmp
mov
pop
xchg
jl
js
pop
movsl
mov
jp
sub
mov
pop
xchg
rcr
adc
add
push
inc
xchg
dec
addr16
inc
imul
icebp
ljmp
in
xchg
in
pop
int3
call
loopne
jmp
adc
iret
sbb
xchg
jo
mov
shl
mov
clc
mov
jae,pt
loope
mov
cmpsl
pop
arpl
pop
add
pop
jecxz
int
push
call
jl
inc
add
jecxz
sbb
jns
inc
jecxz
xchg
push
and
fwait
loopne
loop
imul
add
ja
test
xchg
scas
sarl
push
fldt
push
jns
and
lods
lods
out
sti
and
outsb
fcoms
iret
repz
inc
call
dec
inc
pusha
jmp
jnp
dec
testb
retw
push
loope
loop
pop
stc
dec
push
or
cmpsb
sbb
test
fdivl
xor
sub
leave
and
inc
jmp
sub
fisubl
add
clc
int3
pusha
fmull
inc
inc
jecxz
fidivs
jae
pop
notb
in
inc
mov
loopne
sbb
popf
sbb
out
nop
xchg
inc
mov
mov
mov
int
addl
pop
mov
lods
pop
dec
in
sub
xor
out
aam
into
inc
rolb
mov
rorb
inc
inc
imul
lret
in
pusha
jbe
xchg
scas
mov
push
in
movsb
mov
cpuid
jb
sub
xchg
sub
mov
shrb
cmp
rolb
movsb
rcll
mov
addr16
push
or
aam
sti
cmc
adc
ljmp
pop
loopne
cmp
in
xor
jecxz
lahf
mov
lea
incl
sbb
or
cmp
sahf
es
xor
mov
and
cmpsl
and
push
and
lds
mov
ret
cmp
inc
sarl
cli
jg
inc
push
and
repnz
leave
dec
cmp
cmp
mov
adc
lods
daa
dec
lret
mov
sub
fs
shll
in
dec
mov
push
push
into
aad
clc
sar
mov
call
jmp
popa
jb
add
or
cmp
xor
adc
arpl
lret
adc
add
into
rol
in
orl
add
dec
in
rcr
dec
lret
and
int
dec
ret
ret
jnp
inc
fs
jnp
xchg
or
jne
jne
add
out
ficomps
pusha
and
xchg
pop
gs
movsl
lahf
fcoml
mov
push
push
xchg
mov
or
cmp
js
mov
push
jp
ljmp
js
jge
icebp
out
aas
je
orb
mov
scas
mul
test
imul
outsl
adc
mov
mov
mov
scas
xor
es
mov
or
fsubs
mov
rcll
xchg
push
cld
mov
cmp
mov
js
sub
push
jb
dec
ret
popa
jae
or
hlt
hlt
or
adc
int
adc
cmp
mov
push
jno
mov
cmp
inc
push
sbb
fildll
dec
addr16
fildll
fs
push
das
cmp
dec
sub
dec
lret
ja
fs
test
mov
scas
in
jmp
add
mov
jns
adc
cmp
mov
xor
xchg
fists
mov
pop
inc
scas
sahf
rol
and
in
lahf
mov
ret
ret
adc
jns
or
fwait
mov
xor
ja
cmpsl
test
jmp
sbb
sbb
or
add
fimuls
mov
and
cmp
inc
xchg
adc
xlat
cs
fistps
shrl
xor
pop
in
and
inc
jge
push
cwtl
cmc
ds
or
enter
adc
mov
mov
or
or
push
mov
xor
xor
push
xor
or
js,pt
fcmove
push
aam
je
mov
pop
dec
jecxz
dec
add
jl
or
jmp
or
cvtdq2ps
fisubs
jle
add
aam
sbb
enter
test
cs
lods
fimull
frstor
push
pusha
xor
pop
mov
icebp
arpl
inc
aad
vpcomw
cltd
loop
mov
jmp
jne
sub
bound
mov
sbb
or
cld
jb
mov
lcall
mov
aad
cs
scas
xor
cmpsb
mov
out
sub
push
lcall
aam
xor
mov
pop
fnstenv
shr
xor
lcall
pop
push
sahf
and
xchg
inc
loope
aas
cmp
dec
outsl
test
adc
or
mov
xor
rorb
lods
pop
dec
cwtl
cmpsb
shl
jge
sub
int
dec
cli
out
dec
jb
into
inc
and
aam
jns
xor
jge
jecxz
cmp
and
cmp
paddd
data16
iret
push
sub
or
ret
ss
mov
daa
inc
add
jp
pop
orb
test
fdivrl
out
lret
stc
dec
aam
sbb
sbb
pop
adc
imul
mov
xor
xchg
shll
sbb
push
mov
mov
mov
and
out
and
mov
mov
rol
mov
mov
das
mov
mov
aad
fcomps
push
cmpsb
lcall
test
or
test
inc
mov
popf
cmp
adc
sub
pop
sbb
mov
mov
cmp
inc
lcall
mov
std
movsl
inc
mov
and
adc
sub
shrl
push
les
cmpsl
mov
das
movsb
jl
sub
ds
pop
nop
and
aam
adc
inc
pop
or
nop
jb
icebp
movsb
dec
xor
mov
nop
mov
test
pop
or
lods
sub
push
repnz
lea
add
pop
xchg
out
push
loop
psubw
or
push
outsb
popf
dec
dec
lods
ret
inc
sahf
mov
imul
sbb
mov
daa
dec
push
shll
or
xchg
shl
mov
cmc
fstl
dec
iret
dec
test
jg
mov
into
in
pop
lods
xchg
add
cli
into
aam
or
gs
imul
xchg
xor
xor
jne
mov
fdivrl
mov
sub
sub
lods
mov
mov
mov
xor
add
cmpsl
and
stc
dec
jno
xchg
repz
xlat
inc
push
notl
jo
mov
mov
push
mov
push
or
sub
lods
xchg
pop
add
scas
sub
mov
sti
aas
icebp
jp
or
push
and
jl
out
sarl
daa
test
sbb
inc
dec
dec
inc
popa
sbb
jb
mov
das
in
jmp
sub
cmpsb
push
pop
sbb
adc
lret
or
push
lret
or
jp
xchg
into
xor
sub
mov
stos
sub
testb
movsl
sub
insb
pop
in
push
push
dec
int3
test
int3
adc
cli
xor
stc
or
sbb
mov
cmp
je
call
sbb
dec
lcall
arpl
xchg
push
jmp
jp
sbbl
jp
stos
cmp
aam
xor
lret
lods
and
test
jne
mov
push
in
pop
and
jmp
and
jns
lcall
cmc
sbb
mov
fadds
sbb
rcrb
hlt
xor
adc
mov
call
gs
out
lret
inc
inc
in
es
data16
xor
scas
daa
mov
mov
aaa
lahf
jl
sbb
pusha
lods
jne
js
fmul
jle
pop
push
je
das
mov
cmp
xchg
jecxz
das
cltd
sbb
push
pusha
xchg
push
mov
xchg
decb
jb
jae
xor
sub
imulb
fisubs
dec
outsb
pop
push
mov
pop
jmp
pusha
mov
mov
clc
aad
and
cmpsb
push
mov
xor
imul
into
mov
xchg
or
inc
add
scas
mov
add
pop
mov
cvtdq2ps
ret
inc
das
int
inc
aam
pop
lds
mov
lret
adc
cwtl
iret
cld
pop
inc
mov
jge
xchg
jo
ss
je
xor
insl
add
call
sbb
xchg
mov
add
int
xor
push
scas
push
aaa
rcl
mov
cmp
sbb
mov
inc
and
sub
int
sar
popf
jae
mov
js
or
lret
inc
lea
icebp
push
xchg
loopne
jo
lock
jmp
add
in
add
pop
jbe
sbb
sub
enter
aam
rorl
in
ljmp
mov
in
aaa
popa
popa
test
in
pusha
sahf
mov
fmul
mov
int3
outsl
sbb
sub
mov
out
sbb
or
test
inc
add
push
mov
xchg
daa
aaa
mov
mov
pop
xchg
repnz
xor
int
sub
sbb
pop
jnp
fwait
dec
xchg
lds
push
repz
loope
mov
icebp
fstps
popl
hlt
mov
in
adc
add
xchg
push
movsb
mov
mov
icebp
addl
jb
jg
ja
mov
scas
inc
add
movsb
popf
outsl
fistpl
lea
loop
adc
iret
lds
cld
mov
mov
mov
pusha
mov
dec
jmp
gs
push
lahf
subb
mov
nop
movsb
push
jns
lods
cmpb
add
mov
hlt
mov
and
pop
push
enter
pop
push
sahf
pop
dec
adc
jbe
lea
out
jbe
xchg
loop
dec
setg
bound
push
imul
aaa
pop
cwtl
es
sbb
aaa
dec
or
arpl
pop
jne
jno
movsl
push
mov
mov
imul
clc
push
adcb
iret
out
dec
sbb
addw
cld
lret
std
ds
fdivs
xor
jg
add
mov
mov
adc
and
dec
int3
cmpsl
or
cmpsl
and
out
pop
sub
incl
dec
add
das
les
and
iret
fnstsw
inc
rcl
mov
jmp
pop
xchg
inc
cltd
or
xor
mov
or
mov
push
in
cmp
lret
cltd
push
and
test
xchg
cmp
sbb
cmp
xchg
pushf
movsl
jl
sub
jbe
fbstp
jg
movsl
js
inc
xchg
lock
stos
inc
dec
sub
shrb
jno
sub
pop
push
das
xchg
out
bound
lahf
xor
sahf
sub
enter
in
sar
lods
in
test
inc
adc
pop
dec
or
dec
js
dec
sub
lds
push
aaa
jnp
loope
cli
push
push
push
xchg
cmp
cmp
jae
xchg
inc
loopne
cmp
sub
pop
or
mov
pop
aam
insb
cmpsb
mov
sub
mov
push
xchg
std
pop
gs
xchg
sti
sbb
insl
fcmovnu
pop
sti
sub
xchg
sbb
inc
cld
rolb
push
lret
mov
cmp
sub
xor
and
add
inc
testl
jb
lods
popa
inc
cltd
cmpl
nop
fisttps
jno
and
add
add
cltd
add
add
mov
shlb
sbb
push
mov
shl
jle
outsl
jg
add
repz
add
pop
jg
or
mov
in
and
xchg
adc
dec
mov
cmpsb
cld
fcoml
cmp
mov
xor
js
add
aad
push
jno
in
inc
jmp
fsubrl
popa
inc
or
outsl
jo
mov
test
mov
adc
sti
mov
inc
xchg
dec
dec
xchg
and
mov
push
mov
push
inc
dec
mov
adc
and
roll
sahf
cltd
pop
imul
gs
or
mov
lds
ja
lods
push
xchg
lock
sbb
outsl
xor
adc
fmuls
lds
mov
add
add
rcll
add
push
les
push
shlb
mov
xchg
push
loopne
mov
js
ficoml
xlat
mov
and
xchg
js
push
call
dec
jno
roll
mov
jb
je
fwait
sbb
scas
loop
adc
sbb
test
and
jnp
add
jns
pusha
lret
stos
jge
shl
hlt
push
es
sub
lds
push
jg
outsb
lock
out
mov
in
inc
push
test
sub
cmp
pop
test
ret
sub
adc
mov
fidivrs
sbb
sub
cltd
cmp
xchg
and
aaa
mov
mov
push
stos
jns
push
pop
inc
jl,pn
data16
push
mov
fdivrl
fadd
fwait
shlb
dec
mov
inc
inc
mov
adc
adc
and
mov
mov
mov
and
push
faddl
jle
mov
sahf
fstps
je
sub
test
imul
or
add
icebp
out
push
in
lret
sbb
imul
lock
and
ljmp
outsl
pop
lock
loope
es
jno
or
cmp
dec
cmc
add
jae
aas
lock
iret
rclb
cs
insb
ret
jae
push
dec
and
sti
movsb
sub
sbb
jg
push
adc
inc
clc
push
add
lock
push
jle
call
cmc
xchg
popa
dec
pusha
mov
insl
push
fildll
mov
jae
mov
fldt
fmulp
pop
daa
ds
fiaddl
pop
rorl
mov
mov
fsubs
mov
add
js
repz
dec
inc
push
dec
dec
sbbb
lcall
adc
jb
fwait
orl
enter
repz
sbb
and
and
push
mov
sub
adc
mov
add
and
add
imul
popf
jno
pop
std
call
or
inc
int3
stos
into
dec
ret
out
mov
out
jo
loope
xchg
subl
popa
push
xchg
repnz
or
sub
push
scas
std
cmp
aaa
push
push
call
xchg
shlb
fst
dec
push
mov
cmp
daa
movsl
pop
into
ret
rcrb
sub
shrl
in
cmp
ss
dec
add
or
push
fwait
mov
pop
pop
xchg
adc
mov
lea
pop
jp
cmp
mov
cmc
ss
cmp
ficoms
xchg
adc
mov
fmul
sarl
and
adc
inc
out
push
inc
xchg
hlt
mov
cmc
insl
push
jmp
xchg
inc
out
out
cmp
mov
push
jne
add
add
fnstcw
pop
xchg
aas
xorb
fdivrs
and
adcb
inc
inc
add
jmp
pop
scas
call
dec
inc
inc
int3
cli
pushf
in
fwait
popa
daa
cmc
mulb
into
stos
fsubl
sahf
mov
leave
push
or
or
fmul
mov
sub
jg
jb
icebp
jbe
lods
rclb
dec
add
lcall
imul
lret
mov
push
inc
inc
xchg
inc
sbb
adc
push
lea
jnp
push
lahf
push
mov
cmp
or
xor
arpl
fdivrl
imul
jmp
ss
xchg
inc
stos
jbe
sub
movsl
ss
cltd
push
out
jle
inc
testb
imul
adc
mov
jl
je
mov
add
shr
xor
lret
sub
push
test
cmpsl
jns
push
test
sbb
repnz
das
and
stos
popa
dec
das
sbb
aad
and
jp
into
rcll
cmpsb
xchg
pop
mov
sti
in
and
sbb
jo
in
push
mov
mul
imul
xchg
cmp
pushf
jge
adc
mov
addl
das
pop
enter
jp
sub
in
dec
sbb
xlat
push
jo
out
pop
jns
fidivl
xlat
dec
mov
loope
xchg
push
popa
pushf
and
xchg
push
ss
insl
sub
ret
mov
xchg
test
clc
sub
and
gs
pop
lret
cmp
mov
push
popa
rorl
iret
sub
pop
mov
adc
in
rolb
ffreep
cmp
xchg
incb
jmp
xchg
fidivs
or
add
adc
pop
pop
mov
dec
fnstcw
cmpsb
mov
sub
sbb
sbb
lahf
xlat
add
mov
imul
pop
mov
push
jl
jge
push
sti
jne
pop
jmp
fildll
das
popa
mov
in
or
and
call
out
add
xor
inc
rcrb
outsl
pop
or
push
sub
subb
jle
xor
dec
adc
jp
jp
repz
aam
jo
nop
xchg
ret
sarl
mov
divl
imul
arpl
sbb
pop
cmp
or
daa
mov
addb
push
sbb
xchg
hlt
and
jno
test
mov
push
imul
sub
in
rorl
sbbb
xchg
outsl
push
cmp
ljmp
and
loopne
gs
mov
arpl
add
or
pop
jnp
and
jl
xor
push
lods
jnp
and
ror
and
mov
es
pop
dec
mov
dec
mov
jg
orl
lcall
popa
cmp
sub
movsb
call
cltd
pusha
in
pop
std
inc
pop
pop
movsl
jns
lds
sti
pop
jnp
shr
lock
push
lret
add
adc
xchg
adc
or
loopne
jg
adc
clc
int3
xchg
cmp
roll
ret
sub
loope
pop
lea
mov
sub
out
lcall
adc
jo
mov
jmp
fdivrs
xor
ja
xchg
pop
test
fildll
jp,pn
add
xor
leave
repnz
call
sti
movsl
outsl
add
rorl
push
fcmovne
jle
dec
lock
adc
or
push
cwtl
push
and
scas
mov
test
pop
movsl
fstl
rcrl
and
gs
test
xchg
mov
clc
imul
iret
and
add
sbb
cltd
mov
mov
xor
jl
or
pop
lahf
out
inc
lds
mov
cmp
mov
pop
stos
repz
cs
push
cmc
sbb
arpl
fs
cltd
cmp
pop
or
sbb
inc
pushf
dec
les
sarl
mov
cmp
or
lods
inc
or
aaa
add
xchg
insb
push
push
xadd
mov
xor
movsb
in
imul
push
fdivrl
mov
push
aam
daa
jge
push
add
push
push
mov
fwait
sub
jo
adc
xor
negl
mov
scas
insb
xchg
cmp
jl
push
xor
dec
cmp
mov
mov
ja
sti
push
push
std
std
ss
aad
movsb
lret
iret
stos
mov
xchg
movsb
mov
dec
jae
mov
xchg
cwtl
inc
enter
popf
arpl
mulb
loopne
sbb
loop
filds
imul
add
jp
lods
adc
popa
and
cmp
enter
xlat
mov
inc
lods
mov
jo
push
fwait
jp
or
int3
or
aas
sbb
ljmp
pusha
lret
jb
mov
mov
sub
xchg
cs
mov
inc
sub
add
mov
inc
mov
mov
jp
add
pop
repz
pop
ja
sbb
sbb
js
ret
repz
jb
hlt
add
or
aas
sub
mov
popf
pushf
or
xchg
lret
mov
inc
addb
xlat
xchg
push
movsl
sub
out
pop
cmp
inc
into
or
adc
inc
inc
inc
pop
inc
sub
inc
or
mov
dec
cmp
and
movsb
sub
mov
xchg
xchg
mov
push
nop
mov
push
add
mov
push
or
in
ljmp
iret
mov
push
lods
push
lcall
adc
add
bound
ficomps
test
mov
xchg
cmp
sbb
push
xchg
sub
scas
or
iret
push
xchg
xchg
jp
jge
jb
sbb
test
imul
jge
scas
pusha
shl
xlat
test
push
sbb
shlb
arpl
adc
xor
shrb
or
out
std
cmpsl
pop
outsb
mov
fisubs
or
and
xor
loopne
xchg
xchg
mov
hlt
sub
out
sub
and
es
and
pop
lahf
leave
lods
mov
fsubl
mov
int
inc
ret
enter
stc
xchg
mov
push
dec
std
inc
sub
or
in
repnz
mov
lods
out
dec
pop
add
test
cmp
andb
sbbl
mov
test
mov
fbld
xor
push
pop
cmpsb
pop
and
ja
mov
sub
fsubrl
inc
cmc
sub
xchg
retw
insb
mov
imul
push
insl
sqrtps
test
addr16
out
jle
jno
pusha
popf
mov
dec
fisubrs
or
dec
add
or
push
aaa
hlt
sub
sbb
push
dec
imul
inc
sub
fwait
scas
xor
inc
jle
add
and
and
pop
push
bound
lcall
push
cmpsl
pop
sub
test
adc
jnp
xchg
loop
xchg
pop
cmp
adc
jno
mov
pop
cs
into
adc
inc
cmp
xlat
cmp
inc
pop
inc
fidivrs
sbb
jae
jl
imul
imul
jl
loope
or
sbb
xor
adc
mov
lahf
faddl
orl
dec
cmp
rclb
xor
arpl
sbb
and
pop
aas
shl
addl
iret
fstl
push
push
or
cs
mov
shr
loopne
xor
jno
jl
je
or
das
sbb
jae
or
lcall
cmp
aaa
xor
dec
adc
lods
mov
pop
mov
inc
cmp
xchg
jbe
mov
inc
int3
stc
into
push
icebp
pop
insb
std
or
lods
jb
add
and
outsl
mov
jae
mov
push
in
sub
popf
lods
pop
pextrw
and
mov
xchg
fldenv
movsb
xchg
sub
mov
and
adc
lcall
inc
push
and
xlat
cli
jle
les
inc
ror
xchg
loop
jae
in
xchg
push
hlt
fucomi
push
mov
xor
lret
arpl
dec
popf
xchg
push
lds
fmuls
add
pop
sub
cmp
push
add
mov
mov
sub
and
mulb
shl
sarb
int3
gs
mov
mov
inc
mov
jno
jae
mov
out
and
xor
fwait
into
cltd
in
lods
adc
sbb
test
add
cmp
ds
orb
shll
and
jmp
arpl
xchg
cli
mov
pop
idivb
jno
aaa
jg
inc
mov
out
add
jne
jne
out
mov
push
gs
ljmp
adc
rorl
sub
shll
and
scas
pushf
lods
scas
jne
adc
out
pop
xchg
sbb
dec
dec
xor
scas
xchg
push
test
mov
jl
lds
dec
ja
pusha
sbb
loop
push
jmp
mov
mov
loopne
add
ds
mov
jo
jae
mov
jp,pn
xor
test
or
and
fldt
push
inc
mov
push
into
jbe
push
xchg
dec
dec
das
push
jge
inc
out
dec
mov
jae
dec
inc
adc
cli
mov
bound
mov
fwait
lods
or
cs
xchg
andb
scas
ds
shrl
outsb
push
adc
mov
fcmovb
ljmp
ljmp
or
mov
jle
jmp
lcall
push
mov
sti
in
pop
pop
ja
cmp
xchg
push
in
outsl
scas
add
mov
sbb
mov
aad
xchg
inc
pop
cmp
sahf
mov
mov
sub
xor
mov
xchg
in
iret
pop
push
adc
xchg
lret
test
mov
mov
push
mov
daa
xchg
jae
pop
pushf
cmc
lahf
adc
pop
repz
ds
and
out
ljmp
test
cmp
pusha
leave
fidivl
and
movsb
and
dec
dec
mov
sbb
sub
in
jns
inc
add
enter
in
sub
out
mov
mov
adc
rorb
xor
mov
xor
incl
imul
mov
lret
lret
rolb
cmpsb
cwtl
aad
dec
or
rcrl
clc
pop
mov
out
mov
lock
out
out
jo
in
lahf
mov
lea
and
push
xchg
test
adc
push
ljmp
mov
stos
adc
pop
xchg
aam
dec
mov
mov
addr16
xor
inc
addr16
lret
jp
mov
shll
jg
cmp
push
mov
cmp
aaa
out
lods
movsl
repnz
sarl
mov
mov
xchg
in
sub
mov
and
fld
int3
cld
std
pop
pop
xchg
movsl
hlt
xorb
icebp
jbe
push
xor
out
mov
pop
sahf
ret
pop
xor
xlat
dec
jle
lret
sbb
mov
xchg
mov
push
cmp
enter
pop
mov
xor
xchg
test
test
pop
mov
ret
pushf
aaa
pop
out
xor
adcl
ds
into
roll
aam
test
int
cld
lahf
jns
shll
cmpsb
outsb
inc
cwtl
lods
cmp
jo
or
out
xchg
xor
and
test
enter
mov
in
mov
loopne
mov
cmp
in
out
push
sarb
push
dec
addr16
rcl
cli
lods
adc
add
mov
lock
shrl
pop
popa
loop
pop
push
pop
xor
mov
xor
aaa
add
jp
pop
pop
mov
pop
mov
xlat
in
jmp
xor
sar
mov
jg
scas
jno
dec
pushf
push
stos
xlat
int3
int
push
sbb
leave
inc
movsb
pop
addr16
inc
jmp
inc
cmp
sbb
and
pop
add
sub
sub
pop
mov
cmp
lcall
inc
inc
sub
rcll
aam
es
stos
iret
data16
or
in
clc
outsl
scas
int3
leave
pop
sahf
inc
jo
push
hlt
mov
mov
addb
sub
inc
sar
adc
push
mov
iret
das
inc
inc
mov
inc
jne
pop
stos
push
daa
mov
movsl
or
xchg
pop
and
xlat
and
shr
repnz
iret
test
clc
sub
jge
add
les
mov
lods
mov
out
xchg
lods
cltd
mov
in
mov
sbb
jp
mov
sbb
std
in
negb
mov
inc
push
lret
mov
shrl
into
jg
int
jg
lods
jmp
adc
ljmp
jbe
push
mov
push
mov
jmp
sub
test
sbb
jnp
aas
push
cmp
and
mov
xchg
add
movsb
inc
scas
jae
add
movsb
inc
cmp
push
jge
ja
les
xlat
gs
divl
hlt
bound
adc
add
addr16
mov
cltd
mov
push
shlb
sti
mov
lock
and
xlat
dec
sub
or
dec
lods
fbld
js
shl
aam
in
mov
mov
nop
int
adc
jns
mov
adc
in
sahf
leave
mov
mov
sarb
lea
lods
xchg
inc
leave
mov
hlt
xor
lods
sub
push
pusha
stc
or
mov
sub
jae
movsb
mov
ds
sub
jb
jo
inc
test
sahf
int3
mov
xchg
js
or
cmp
mov
pushf
sub
mov
notl
xchg
mov
loope
xlat
xchg
movb
cmp
mov
jns
dec
or
xadd
test
dec
jecxz
jl
stos
lock
cld
js
dec
inc
outsb
jae
je
repz
insl
and
adc
jp
inc
sbb
push
mov
insl
or
xor
push
sub
negl
fsubrl
inc
and
aad
lret
je
outsb
inc
iret
inc
pop
iret
stc
sbb
lock
dec
jne
bound
imul
in
jmp
or
mov
sbb
xchg
cmp
mov
pop
repz
jmp
arpl
jge
shr
dec
fstps
dec
aad
std
stos
or
jb
inc
loop
mov
push
cltd
mov
sbb
loope
hlt
xor
pushf
pop
in
sahf
adc
fnsave
jge
adc
mov
lret
scas
inc
mov
xchg
sub
scas
pop
pop
mov
cmc
jmp
lock
repz
inc
and
sub
jbe
jl
jp
js
sahf
sahf
or
mov
adc
pusha
insl
clc
xchg
mov
sahf
and
leave
jnp
lret
mov
and
sahf
movsb
inc
shlb
loope
rcr
dec
shlb
es
cmp
push
jns
sti
xor
add
dec
jne
pop
jb
les
jle
rcrb
pop
sbb
jp
imul
sub
jb
ja
sbb
lret
pusha
das
adc
lcall
xchg
pushf
ja
xchg
orb
dec
dec
jno
enter
outsb
xor
fsubrs
insl
xchg
ficomps
sahf
aad
sbbb
and
sbb
loop
mov
pop
xchg
mov
pop
loop
dec
rcrb
cmp
shr
test
or
or
adc
lods
mov
out
daa
cmp
xlat
mov
outsb
stc
mov
sub
sti
mov
jecxz
fcomps
gs
daa
push
mov
dec
or
and
and
js
out
cmp
xor
out
mov
dec
cmp
loope
mov
and
push
cmpsl
xchg
dec
cmp
cmp
test
mov
lds
imul
nop
jge
fldl
sbb
inc
loopne
pop
or
mov
ficomps
std
or
imul
mov
int3
mov
js
xchg
cmc
sub
cmp
cwtl
and
fsubl
mov
xor
sub
dec
daa
ret
inc
and
das
push
push
pop
mov
jl
add
lcall
dec
out
jns
insb
lods
dec
add
or
xchg
fs
test
mov
mov
icebp
mov
imul
pushf
js
mov
sub
and
dec
aas
ret
xor
or
xor
jge
scas
js
add
lods
clc
sbb
in
loope
icebp
icebp
out
push
lea
fcmovnu
out
out
push
test
into
xchg
jbe
iret
daa
push
clc
xchg
mov
inc
mov
add
mov
xchg
dec
test
mov
insl
aaa
mov
imulb
mov
es
push
inc
xchg
imul
cld
mov
pop
divb
push
aas
cltd
js
adc
jmp
cmp
adc
cmp
subb
test
cmp
xor
call
add
into
mov
dec
notb
sbb
loopne
or
in
push
out
or
pop
xor
out
mov
or
stos
add
mov
and
and
rorb
sub
add
xor
xchg
movsb
loop
mov
out
sbb
mov
aaa
rcll
or
test
addr16
sub
mov
fisubrl
sub
scas
mov
dec
insl
fcompl
sub
pop
xchg
sbb
popl
insb
xchg
push
or
enter
jge
mov
fsubl
or
cmpsb
call
xchg
popa
repz
das
mov
in
jmp
adc
scas
cli
inc
mov
jne
jge
sbb
in
insb
xchg
push
adc
sub
and
sub
push
mov
pushf
xchg
mov
cs
sub
ror
das
mov
je
js
in
jnp
aam
int
aad
test
dec
addr16
jae
jp
dec
xchg
loop
jge
mov
or
push
push
flds
pop
jnp
shll
xchg
and
ss
fcomp
mov
push
mov
aam
into
xor
das
jp
mov
mov
push
inc
stc
mov
push
dec
add
xlat
pop
jb
push
pop
inc
jno
out
testb
jmp
xchg
cmp
movl
enter
xchg
jmp
cltd
or
sbb
rolb
aad
in
int
movsb
and
pop
jecxz
mov
test
cltd
pop
cmpsl
sbb
inc
mov
out
sbb
inc
mov
jbe
nop
idivb
sbb
xor
add
sbb
jno
or
in
lods
push
push
mov
mov
pop
mov
out
push
rolb
cli
pop
lock
pop
hlt
shlb
dec
int
inc
jbe
les
add
jne
in
jae
or
repz
xchg
lock
xor
adc
jecxz
and
adc
cmp
add
xor
mov
shll
rcrb
push
cmpsb
and
mov
lret
cmp
pop
cltd
inc
sbb
ds
test
mov
pop
movsb
ja
add
imul
xlat
mov
cwtl
sbb
blci
lahf
or
dec
stos
test
inc
jp
mov
adcb
or
sub
aad
rorl
jno
and
aam
xor
imul
ja
std
cld
pop
fcompl
xor
int
lods
xchg
sbb
gs
mov
cmpsb
pop
or
or
lret
adc
outsl
imul
repnz
xchg
xchg
cmpsl
inc
or
rcll
decb
daa
pop
jg
push
lods
enter
dec
push
cld
sub
rolb
subb
les
xchg
dec
call
sub
rolb
pop
popf
mov
xchg
pop
add
inc
xor
orb
scas
jle
js
arpl
push
scas
pushf
inc
leave
inc
inc
dec
sub
scas
test
pop
mov
pop
push
lret
loope
sarb
inc
adc
mov
mov
xchg
repz
lea
mov
xchg
dec
cmp
scas
xchg
rorl
fstpl
enter
pusha
pop
or
cs
scas
aam
and
shll
ja
cmc
dec
jmp
lds
cmp
cld
inc
ds
in
adc
cmc
xor
out
jno
xchg
xlat
shlb
mov
adc
pop
pop
cmp
ret
pop
aas
sti
cmp
cmp
scas
inc
xor
xlat
xchg
dec
add
mov
xor
repz
cli
jb
stc
out
dec
pushf
xlat
test
push
out
or
sbb
mov
and
shl
bt
sub
shlb
mov
scas
enter
mov
sub
int
cld
loop
push
push
adc
pop
sbb
mov
xchg
fimuls
jb
lock
hlt
lcall
inc
xchg
popa
incl
or
sbb
fst
pop
sub
mov
gs
pushl
movsb
lods
leave
and
setne
lds
fcom
aad
fwait
das
jne
sub
mov
ffree
push
jp
lock
mov
add
das
imul
out
gs
xor
outsb
or
shll
cmp
ds
fst
dec
mov
test
in
scas
and
jge
jmp
iret
daa
aam
jp
lret
rol
movsl
shrl
or
sub
cli
mov
xchg
or
cmp
or
sub
pop
les
mov
push
mov
jge
mov
sub
add
out
push
lock
push
inc
push
scas
scas
loopne
add
jmp
popa
sbb
hlt
and
add
popa
sub
aas
push
add
jo
cltd
popl
frstor
in
sub
adc
test
jp
int
mov
dec
lret
jne
aam
outsl
sub
cltd
rol
int
jp
sbb
cld
pop
cmc
inc
xchg
mov
test
lock
xchg
push
lcall
gs
pop
pop
pop
push
cs
add
ret
pop
cmp
xor
lock
and
das
rcrb
pop
inc
fistpll
pop
call
pop
mov
xor
jnp
lcall
gs
xchg
pusha
sub
add
test
fnstsw
mov
add
mov
add
inc
mov
pusha
xchg
sub
lret
sub
jo
outsb
xchg
into
and
inc
std
shll
xchg
cmp
int3
shlb
sar
test
adc
lret
in
add
loope
bound
ss
addr16
jnp
cmp
cmpsb
mov
mov
adc
mov
bound
dec
add
xor
hlt
scas
fistl
pushf
inc
jg
cmp
xchg
fadds
andl
cmp
adc
je
fstpl
mov
jno
mov
mov
mov
or
pushf
iret
push
xchg
sub
mov
pop
pop
addl
movsb
daa
mov
pop
lock
push
outsb
daa
fcmovne
pusha
pop
std
or
das
cli
pop
aam
jle
into
repz
jmp
cli
jns
jle
arpl
repz
popf
jmp
push
xor
cmpsb
hlt
movsb
pop
pushf
xchg
jl
sub
or
fsubrs
dec
subl
pusha
inc
sub
fldenv
mov
sub
fcoms
lcall
xchg
xchg
sbb
pop
sbb
adc
nop
inc
fwait
popa
daa
push
push
adc
inc
dec
ret
aas
mov
shll
mov
add
cmp
dec
pusha
int3
cli
mov
fs
sarl
xor
push
sub
mov
push
test
push
in
or
lds
adcb
cs
in
jno
popa
cmp
popa
lock
jb
je
push
xchg
mov
lea
popl
cwtl
cwtl
lods
mov
cmp
mov
sub
xchg
arpl
in
xor
or
pop
mov
xor
sbb
sbb
adc
lock
cmpsl
xchg
jnp
loope
pop
dec
shll
inc
mov
xor
cwtl
shll
xchg
out
adc
inc
xchg
sbb
mov
sbb
dec
add
ds
rcll
shl
sub
fucomp
and
push
cmpsb
add
jnp
adc
mov
imul
fistl
mov
lods
mov
xchg
pop
mov
sti
sahf
scas
jge
out
ja
sbb
mov
mov
test
mov
clc
mov
sub
mov
jg
pusha
icebp
dec
mov
inc
mov
push
stc
bound
push
sahf
push
and
xchg
add
cmpl
std
andl
mov
xchg
sahf
inc
or
idivb
pop
lahf
sub
pop
mov
jge
fildl
adc
test
or
lds
gs
sti
and
push
lcall
hlt
mov
les
add
jge
lret
pop
cmp
out
add
inc
addr16
xor
xor
insl
dec
mov
jg
es
je
pop
es
sub
out
sarl
stc
push
call
mov
jno
test
imul
or
add
adc
mov
dec
and
inc
cmp
leave
jne
aam
subl
andb
xor
jbe
mov
and
xor
loopne
hlt
cld
jecxz
fwait
lahf
pop
outsl
sbb
ljmp
popa
loope
sbb
dec
jo
adcb
jns
xchg
fpatan
and
es
xchg
test
or
push
jns
fisubrs
jmp
sub
in
sti
pop
jne
adc
idivb
jno
enter
lea
pop
out
shrb
or
lea
mov
push
cmc
inc
int
pop
adc
adc
mov
xchg
adc
fcompl
pop
inc
inc
fcmove
leave
jp
outsb
inc
cld
or
mov
pop
fsubr
jo
cmp
imul
fmuls
push
add
mov
or
cli
or
dec
and
mov
mov
sahf
dec
movsb
mov
pusha
movsb
cmp
xchg
ja
movsl
jmp
pop
push
lea
and
adc
data16
daa
iret
cli
popa
inc
mov
nop
push
jmp
jno
addb
cmp
addr16
ret
sbb
and
out
je
mov
xor
cmp
mov
cmc
dec
daa
pop
mov
pushl
pop
pop
popf
imul
jb
lahf
int
jle
fnsave
add
lcall
pushf
stc
testb
cmp
cmp
or
cmp
xchg
push
cmpb
testl
movsl
pop
mov
hlt
addr16
test
xlat
push
push
push
mov
sahf
and
int3
inc
xchg
movsl
mov
cs
jg
push
dec
jno
leave
out
jo
lret
sbb
gs
push
jb
lods
jbe
inc
xchg
sbb
jmp
nop
popf
test
push
xchg
out
adc
xchg
out
or
test
aaa
jle
xor
aas
and
loop
inc
mov
mov
jle
dec
xor
call
loopne
sahf
jge
mov
push
adc
add
adcl
mov
or
pop
pop
lods
mov
shrb
pop
sub
in
test
xchg
adc
lret
or
popa
bswap
insb
add
loop
push
lret
insb
xor
push
sbb
xor
jne
in
sub
cmc
pusha
inc
imul
xor
js
popl
mov
out
mov
jle
les
and
mov
or
push
pop
jl
dec
mov
out
sub
int3
divl
cli
imul
shll
je
or
mov
xor
pop
mov
jl
sbb
arpl
or
movb
imul
aaa
outsl
sub
lret
xor
mov
pop
jo
dec
pop
inc
push
rcr
adcb
inc
addb
rorb
jge
repnz
ss
push
negl
mov
lahf
fildll
jp
jo
add
jmp
xor
pop
or
sub
mov
aam
shlb
iret
mov
and
fcomps
fists
shlb
xor
sbb
mov
jnp
mov
mov
in
jmp
inc
jecxz
and
es
and
inc
xlat
jno
and
fdivl
gs
jp
arpl
in
adcb
ljmp
cmp
pop
sub
lahf
cmc
cmp
andb
adc
mov
cs
stos
in
js
pop
iret
jb
lock
das
push
leave
mov
mov
pop
and
xlat
test
cmpsb
inc
lds
popf
jb
repz
test
nop
jecxz
data16
ficomps
mov
lahf
scas
xchg
jle
mov
scas
dec
mov
or
out
sbb
rorl
ljmp
jb
in
lds
data16
inc
xchg
fdivrp
repnz
movsl
aam
push
inc
in
pop
aad
iret
mov
clc
and
out
not
je
repnz
ja
mov
jle
fisubrl
cmp
mov
mov
inc
or
dec
push
addl
movsb
pop
mov
test
sub
or
daa
mov
sti
test
mov
pop
fldcw
jl
stos
jo
adcb
stos
pusha
cmp
cmp
fistl
pop
xlat
pop
sbb
into
push
dec
rcr
sub
and
icebp
cmp
push
daa
fisubs
sub
and
jge
xor
jmp
movsl
not
or
dec
divb
xchg
popa
outsl
and
sahf
push
pushf
ja
ljmp
subb
mov
pop
or
ljmp
xchg
lods
mov
push
out
test
jns,pn
ret
fwait
orl
adc
mov
or
lock
psllq
jnp
mov
push
push
push
rcrl
push
mov
leave
inc
lret
pusha
jae
cs
addl
inc
sbb
adc
lea
mov
lahf
mov
xchg
xor
cli
add
mov
out
xor
jmp
scas
cmp
mov
clc
dec
fmulp
movsl
movsb
xchg
jne
inc
in
stc
pop
int
repz
ret
repnz
cmp
pusha
outsb
adc
push
mov
cs
jmp
popa
pop
add
add
loope
popf
push
call
sbbb
add
pop
out
les
movsw
sub
or
rclb
add
aad
jno
int3
mov
jl
lds
xor
xchg
fs
popa
push
jle
jno
pop
sub
orl
xor
test
add
sub
ss
cmpsb
data16
mov
and
outsl
jne
inc
into
sti
rcl
rol
repz
and
addl
push
lods
out
xchg
or
jp
loopne
outsl
pop
lahf
cwtl
ret
mov
sbbb
push
push
dec
movsl
sub
dec
iret
in
inc
sub
mov
leave
fldcw
push
cmovs
dec
std
and
insb
mov
lcall
out
shr
xor
mov
push
xchg
test
mov
mov
push
das
test
mov
nop
test
or
shrl
hlt
mov
scas
lret
mov
add
out
out
lret
into
aad
and
jl
aad
xor
adc
loope
call
rcrb
lds
adc
addb
cmpsl
adc
mov
in
jl
or
cmp
enter
ret
mov
pop
cmp
fildll
shrb
lea
jne
pop
push
xchg
pusha
lds
sub
push
xchg
arpl
jl
pusha
shll
out
notb
add
cltd
xchg
mov
xchg
mov
pop
xchg
cmp
push
mov
lods
adc
dec
and
cwtl
dec
cltd
sbb
movsl
pop
cmp
push
cmp
jne
cli
dec
movsl
xchg
sarl
xor
dec
fdivp
test
iret
mov
sbb
pop
mov
or
xchg
xchg
mov
xchg
push
mov
mov
cmp
pop
mov
jp,pn
pop
pop
adc
push
inc
bswap
maxps
mov
push
js
ret
adc
pop
ljmp
repnz
call
loope
pop
mov
cmpsb
fistpll
pop
outsb
push
sarl
movsl
mov
pop
jo
test
cmp
daa
ja
mov
stc
cmp
cmp
sti
jo
rorl
lcall
jae
jne
das
push
out
pop
pop
xchg
push
jno
inc
cmp
push
cli
sbb
mov
popf
insb
daa
lret
xor
stos
sub
mov
push
xor
push
fisttpl
fisttps
mov
fstp
or
push
dec
in
lea
jg
jge
jno
je
imul
sbb
lret
cmpsb
dec
sbb
mov
push
inc
clc
or
or
hlt
mov
and
sub
fucomp
sub
push
das
mov
int
mov
push
inc
lods
cmp
decl
push
ret
cmp
mov
jo
cmp
mov
or
out
icebp
cmpsl
sub
gs
mov
ret
or
jg
aas
adc
cmp
in
lret
ss
insb
xor
mov
inc
mov
and
fdivr
stos
repnz
dec
loop
mov
test
inc
dec
push
lahf
add
loop
xchg
repnz
arpl
pop
in
add
iret
rclb
mov
sahf
xchg
scas
or
out
add
insb
pop
fs
aad
mov
xchg
mov
and
push
jb
movsb
and
inc
dec
rcrb
dec
dec
inc
xor
jbe
ljmp
ss
outsb
lahf
cmpsb
cmp
jl
js
cmpsl
add
insl
les
and
dec
push
mov
adc
lretw
sbb
push
adc
xorl
js
cmp
jmp
xor
fs
xchg
xor
xchg
sarb
lea
pusha
sbb
popl
lret
test
mov
imul
mov
out
pop
jns
test
xchg
push
push
fdivrl
jl
ud2
push
push
sub
inc
int3
mov
dec
inc
push
inc
push
mov
jns
inc
pushl
jecxz
xor
or
sub
test
ficomps
xchg
lea
sbb
adc
int
andl
test
stc
cmp
push
sahf
lods
stc
pop
shll
dec
fistpll
scas
inc
andb
push
push
mov
pop
int
lret
js
movsl
popf
xchg
mov
jmp
push
icebp
loope
popa
jmp
movsl
sbb
pop
data16
test
xor
dec
xor
ds
popl
mov
xlat
push
std
adc
sub
mov
sbb
pop
daa
test
popf
rcrb
sub
shlb
sub
lret
test
xor
mov
stc
push
imul
push
mov
pop
xchg
loopne
imul
add
inc
imul
sub
jmp
popa
xor
mov
xchg
push
push
repz
js
movsb
test
aas
outsl
ja
inc
dec
mov
and
scas
sahf
es
nop
pushf
call
jb
shlb
int
sbb
push
jp
xor
dec
aas
mov
mov
rorb
xor
aas
mov
inc
out
push
jmp
fmul
xor
shrb
int3
pop
outsb
inc
and
movb
xor
inc
adc
adc
mov
dec
out
subb
popf
cmpsb
movsb
mov
cmpsb
aad
xchg
or
mov
pop
cmp
js
mov
mov
and
ljmp
fisttpll
jns
fistps
out
into
cmp
xchg
lret
sub
or
push
pop
sbb
push
sbb
pop
xchg
int3
or
jnp
xor
mov
mov
call
xchg
popf
loopne
mov
jnp
mov
pop
shll
rol
mov
ds
cmc
stos
int3
mov
fldl
mov
lret
pop
arpl
rcl
mov
xlat
jg
out
and
repnz
pop
or
mov
lahf
faddl
in
out
and
sbb
xchg
loop
in
xor
jmp
cmp
les
sub
test
push
xchg
and
push
or
inc
pop
dec
push
cmp
out
nop
ret
jl
mov
push
xchg
out
out
out
idivl
xor
xchg
scas
cmpl
or
push
popl
jns
loop
mov
aam
xor
inc
int3
mov
fwait
mov
jl
scas
cltd
fxch
dec
dec
or
pop
leave
fmuls
popl
lea
fwait
repz
ret
icebp
xor
push
sub
icebp
std
jbe
pop
divb
bound
enter
sahf
jne
push
adc
push
pop
ljmp
add
cmp
rcrl
cmp
adc
jp
sub
jo
sbb
pop
popf
push
jp
pop
or
xchg
and
in
cmpb
fistps
arpl
leave
jp
sahf
cltd
out
sbb
or
out
mov
inc
push
add
and
mov
add
mov
cmp
sub
add
and
popa
stc
xlat
pop
dec
aad
aam
dec
ret
jle
inc
dec
adc
sub
popa
cld
stos
out
sbb
mov
popf
pop
fists
cmpsl
inc
mov
adc
mov
add
jnp
jp
mov
lods
sub
mov
sbb
mov
outsl
repnz
cmc
dec
or
dec
jle
xchg
dec
jge
or
mov
jne
inc
adc
push
pop
je
sub
adc
mov
jmp
add
je
inc
mov
test
mov
shlb
bound
iret
push
lret
dec
mov
rcll
lock
pusha
mov
xor
jecxz
jle
loope
hlt
or
sbb
in
insl
inc
les
add
xchg
out
mov
cwtl
mov
sbb
xor
jbe
fldenv
and
mov
dec
sbb
push
subb
or
aam
adc
out
lods
rcll
push
sub
es
inc
mov
xorb
inc
stc
outsb
xchg
add
lea
push
add
mov
popf
mov
xor
cmpsl
addr16
clc
lret
or
jmp
dec
mov
in
in
mov
mov
xor
push
push
cli
push
loopne
jle
gs
pop
adc
lret
cmp
and
repnz
mov
idivl
fisubl
test
mov
jmp
ret
adc
ja
icebp
fwait
lds
inc
out
outsb
in
inc
xor
dec
stos
sbb
fs
and
fwait
xchg
add
dec
je
mov
or
xor
test
jl
scas
lods
mov
and
shlb
pop
xor
fnstsw
mov
rorl
dec
inc
js
scas
inc
inc
sub
jecxz
inc
fs
sbb
popf
int
cmpsb
pop
jp
fiadds
add
loopne
mov
add
xor
xor
jno
movsl
jp
out
ret
sbb
jb
push
jg
ror
push
or
arpl
cmp
and
std
cltd
xlat
mov
mov
xor
xchg
int
mov
dec
push
lret
jle
push
mov
xchg
pop
cmp
sub
mov
and
mov
leave
das
pop
aam
fistps
inc
test
pushf
sub
adc
int
int
mov
int
inc
mov
div
sub
xchg
push
inc
loop
fsubrs
es
stos
xchg
testb
push
les
xchg
int3
in
mov
mov
cli
and
cld
and
scas
mov
outsl
out
push
adc
push
cmpsl
cs
fmull
sti
sti
out
add
jl
call
fmuls
adc
jae
lret
ja
add
cltd
popl
push
xchg
mov
aam
add
jl
jmp
sti
cmp
movq
fdivl
jns
loop
jae
enter
mov
push
out
and
subb
push
inc
cmp
xchg
cmp
test
inc
push
in
addr16
hlt
mov
adc
loopne
pop
fldl
pusha
or
push
pop
fists
push
cmp
dec
xor
add
sbb
cmp
and
test
out
dec
cmpsl
push
daa
jecxz
mov
jp
cmc
push
dec
shlb
inc
jl
dec
xchg
sub
pop
push
clc
jne
dec
mov
dec
add
cmp
mov
in
in
mov
popf
and
pop
push
pop
inc
fiaddl
jo
into
mov
jge
add
and
lods
cwtl
flds
cmpsl
jl
inc
mov
jg
imul
test
cmp
rorb
testl
sbb
mov
push
mov
pop
sbb
mov
outsb
xchg
cmp
add
xor
iret
cmp
jge
and
jl
jle
cmpsb
inc
push
add
loop
sbb
jl
xchg
inc
in
or
dec
xor
std
repnz
repnz
outsl
test
ds
fxch
or
xchg
jmp
dec
xchg
mov
mov
das
iret
mov
stos
fistps
push
stc
fstl
and
sar
dec
aad
out
loop
bound
test
and
push
jae
dec
sbb
ljmp
in
loopne
popa
in
sbb
in
inc
pop
cmp
pop
mov
filds
imul
lret
mov
sub
daa
push
daa
enter
mov
dec
pop
push
mov
loop
jmp
fmuls
shlb
ds
aas
or
add
xchg
lret
mov
popf
xor
sub
adc
fidivrs
add
or
aaa
pop
add
test
sarl
and
mov
into
fmuls
xchg
dec
sbb
inc
fcmovnb
jmp
lea
rorw
mov
icebp
out
mov
mov
pop
pusha
dec
sub
outsb
xchg
out
push
and
mov
xor
scas
out
add
aad
mov
adc
stos
push
fcom
leave
add
lods
int3
dec
lods
inc
mov
inc
pop
notl
xchg
mov
lods
sti
dec
enter
jmp
push
mov
sbb
in
xor
adc
xchg
inc
mov
fisttpll
daa
pop
xchg
push
mov
pop
add
clc
fbstp
sub
xchg
fsubrl
test
pop
inc
loope
push
pop
jle
and
inc
jne
lret
test
sbb
out
int3
cmp
and
shl
std
sbbb
sub
pop
lret
push
int3
fxch
push
pop
inc
jmp
mov
int3
xor
lods
dec
out
mov
and
pop
scas
jl
sti
pop
iret
push
imul
jg
in
pusha
lods
jnp
cmpb
jbe
push
mov
in
lods
mov
mov
pop
enter
ljmp
mov
sub
xor
aam
xor
adc
popa
ret
addr16
push
dec
mov
mov
lret
pop
add
sahf
addr16
dec
mov
pop
sbb
test
xor
jmp
cltd
arpl
push
push
sbb
cwtl
or
mov
popa
mov
pop
cli
mov
cmp
xchg
daa
lods
jl
or
out
scas
sbbl
jnp
adc
jnp
jmp
call
or
mov
cmp
and
cmc
lods
xchg
sub
add
xchg
je
ffreep
mov
or
push
mov
cmp
mov
pushf
fidivs
cwtl
out
std
add
inc
push
jmp
lea
clc
icebp
add
repz
mov
je
imul
adc
lods
rorb
mov
fidivrl
and
movsb
jnp
iret
sbb
jge
adc
das
jne
rcr
and
fimuls
pop
push
std
mov
xor
repz
scas
imul
adc
imul
out
sbb
adc
pop
outsb
sbb
sbb
pop
push
mov
add
mov
push
addb
iret
jge
lock
push
fsubrl
jge
mov
ficomps
pop
inc
cmpsb
inc
in
stc
or
lds
and
inc
sarb
sti
test
jecxz
imul
testl
jmp
mov
add
ds
jbe
das
int3
mov
cmp
sub
sub
pop
jo
add
es
sarl
xlat
adc
pop
dec
sti
inc
arpl
xchg
inc
rcr
int3
js
xchg
or
imul
jno
cmovle
in
pushf
mov
sbb
cltd
push
aam
mov
adc
fnstsw
sarl
and
jp
dec
cld
jp
jg
add
add
and
repnz
mov
jg
dec
jnp
not
pop
outsb
sbb
mull
jne
sbb
xor
mov
pop
pushf
inc
push
dec
enter
cs
ds
fstps
push
push
fcmovne
push
shrb
and
in
pop
int
ret
stc
stos
push
insl
popf
cmp
cli
out
ljmp
imull
loop
mov
loope
xchg
and
and
mov
dec
or
pop
mov
lret
fldenv
imulb
cmpsb
fbld
push
shlb
and
pop
into
cld
popf
cmp
xor
cmp
xacquire
das
in
pop
neg
cmp
dec
cmpsl
sbb
ja
pop
fs
fstpl
sbb
sbbl
lock
sub
mov
cmpsb
push
mov
mov
shrl
fsubl
sbb
pop
sub
dec
inc
push
push
ret
js
jb
xchg
movsb
lahf
repnz
jmp
jae
cltd
sub
cwtl
popf
pusha
out
out
icebp
jl
xor
ret
mov
inc
or
daa
mov
repnz
push
gs
add
mov
dec
and
cmc
es
pop
insb
pop
dec
leave
test
rol
pop
dec
jns
fs
push
sahf
idiv
jecxz
jmp
ja
jmp
jg
aaa
xchg
outsl
mov
sub
out
mov
das
xchg
cmpl
mov
and
lock
mov
add
pop
add
and
je
sub
imul
mov
jl
cmp
nop
ret
sub
jo
pop
cld
jae
jbe
adcb
out
and
in
push
dec
add
jne
shl
adc
mov
sbb
sbb
mov
loop
and
stos
repnz
and
insb
enter
cli
adc
daa
inc
ret
mov
jecxz
clc
addr16
inc
ja
and
push
lock
negl
mov
pop
inc
rcrb
push
mov
jns,pn
mov
xor
inc
cmp
cmp
mov
clc
stc
out
xor
loopne
icebp
and
clc
add
inc
cmp
inc
fdivr
std
vpslld
insb
jl
inc
xor
ja
mov
insb
in
icebp
leave
pop
cmp
or
mov
push
mov
outsb
test
pop
push
out
jne
xor
and
lret
in
pop
jno
loopne
fs
out
cli
in
cmp
or
cmp
sub
and
lcall
ss
mov
sbbl
sbbb
cmp
sub
lahf
aam
fisubrl
and
ret
pop
adc
in
nop
inc
stos
or
int
jg
scas
sub
sbb
idivb
lock
ja
mov
dec
dec
ds
gs
mov
bound
aas
mov
add
cwtl
mov
push
stos
sub
pushf
xor
inc
and
loopne
xchg
rcrl
add
clc
imul
addr16
jae
cmp
ffree
cmp
adc
es
loope
sbb
ljmp
pop
sub
and
mov
cmp
lea
sti
pusha
gs
cmc
jae
fstpt
add
iret
outsb
push
ja
or
jb
daa
js
dec
outsl
dec
pop
dec
imul
lods
sar
sbb
xor
dec
in
mov
loopne
xchg
add
inc
adc
and
adc
fwait
movsb
jg
sub
hlt
jp
pop
imul
sarl
pushf
adc
dec
enter
mov
scas
mov
aad
xchg
fs
ret
loopne
push
mov
or
xchg
pop
loopne
hlt
sahf
adc
add
lea
cs
dec
xor
sbb
aas
mov
repz
std
jp
cld
jle
shrb
dec
xor
ja
jnp
inc
out
inc
pop
jle
dec
xchg
fdiv
repz
sbb
adc
sbb
pop
cmp
movsb
cltd
ds
enter
sbb
cmc
mov
and
loope
dec
lods
repnz
sub
fsubs
mov
add
hlt
dec
je
dec
icebp
sbb
out
int3
lret
incl
sbb
mov
call
cmc
xchg
pushf
fs
in
and
rcrb
sub
stos
xlat
into
les
xchg
sbb
pop
mov
fdivl
mov
xor
fidivs
ret
pop
push
push
cmp
clc
repnz
xchg
jno
int
mov
into
cltd
gs
xchg
xor
xchg
popf
mov
out
out
popa
pushl
pop
mov
add
push
test
pop
lahf
sbbb
test
sub
scas
or
shlb
push
std
in
out
sbb
shrb
add
out
dec
imul
and
or
je
ss
roll
add
punpckldq
push
pop
rcrl
fisttps
rorb
xchg
call
aaa
xor
loopne
es
add
mov
test
ret
add
addr16
add
test
into
inc
jge
loop
xchg
pusha
imul
shll
jne
jge
mov
mov
push
mov
test
push
ja
inc
and
scas
xor
scas
fidivrl
mov
mov
fdivs
push
mov
add
or
rorl
gs
xchg
idivb
arpl
nop
mov
pop
add
out
sbb
xchg
lds
jno
lods
cmp
pop
out
cs
cmp
jge
add
test
add
pop
jecxz
les
mov
push
das
ljmp
pusha
jo
inc
jb
inc
shrl
xchg
icebp
jno
mov
outsb
pop
jo
stos
loope
jnp
inc
jbe
or
or
xchg
mov
cmpl
xor
dec
and
xlat
test
dec
out
movsl
movsb
fxch
cltd
push
popl
inc
cmp
shrl
jns
mov
in
idiv
xor
insb
pop
mov
addr16
push
sbb
pop
fnstsw
mov
push
mov
and
out
daa
clc
pop
adc
sbb
lock
rorl
adc
and
push
mov
rcl
dec
incb
xchg
inc
push
loope
inc
outsb
mov
ret
sahf
fisttps
inc
movsl
pop
add
in
cmp
outsl
dec
imul
sub
cmp
arpl
mov
dec
xor
es
push
and
inc
aaa
fdivs
ret
jl
fcomi
sbb
push
rcrl
aad
les
mov
ss
push
mov
fisubs
outsb
lcall
aas
and
push
and
fadds
cmp
inc
adc
ds
push
imulb
adc
and
fwait
int3
cs
cmp
dec
iret
jmp
pop
xlat
inc
stos
pop
push
xchg
xlat
fxch
stc
das
jle
push
and
jo
cmp
in
and
stos
push
scas
sub
shlb
xchg
sti
push
das
push
jle
push
sbb
push
cmp
push
jmp
inc
stos
mov
cmc
shlb
xchg
dec
sarb
sarl
adc
pusha
lcall
stos
int
sub
jo
mov
in
jecxz
movsl
sbb
sbb
mov
or
xor
jp
jl
mov
push
push
jp
push
insl
repnz
aam
cmovb
lea
js
mov
mov
mov
inc
jge
cmpsl
imulb
and
popa
orb
scas
add
pop
sub
decb
pop
jb
fidivs
push
or
call
sub
mov
mov
sub
push
fsubr
insl
sbbl
add
cmp
jb
gs
push
lea
sbb
mov
adc
sub
xchg
jmp
lahf
cmpsb
and
pop
add
stos
mov
les
sub
adc
jg
lods
push
xchg
sar
dec
into
fdivs
setge
mov
xor
jo
mov
mov
sbb
imul
adc
inc
lfs
sub
or
imul
movsb
mov
stc
or
movsb
aaa
dec
scas
loope
cld
fsubs
lods
test
push
jle
inc
lea
mov
mov
insb
jl
outsl
into
push
pusha
sub
jo
adc
and
rol
cmp
mov
inc
or
cli
stos
cli
cltd
aaa
push
outsl
rcll
mov
sahf
fisubrs
aas
cmc
sub
inc
cmpsl
mov
mov
dec
les
dec
ja
aam
xchg
insl
cmpsl
jge
notl
les
mov
or
xchg
ret
mov
pop
lcall
inc
int
sub
shr
aam
and
in
dec
stos
pop
pop
dec
int
imul
test
sbb
add
jl
sub
cltd
mov
outsb
jmp
mov
push
loope
sbb
and
pop
scas
sbb
xchg
out
pop
push
in
xchg
pop
orl
test
adc
call
and
xchg
lods
mov
and
dec
sub
dec
lret
mov
ljmp
lea
and
jae
icebp
insb
jne
jmp
cwtl
and
out
inc
cmp
mov
mov
sbb
subb
je
xor
mov
push
lods
loop
xor
addr16
fwait
shlb
ret
fs
fdivrs
sub
jg
rcr
imul
roll
inc
rorb
sbb
out
ss
push
sub
cmp
xchg
cltd
xor
sbbb
pop
hlt
test
gs
sub
mov
mov
clc
stos
mov
push
cwtl
mov
mov
jns
mov
mov
scas
scas
fwait
popf
mov
daa
or
lahf
pop
lea
nop
xor
pushl
mov
lret
insl
dec
test
movsb
sbb
xor
or
stos
fdivr
and
and
call
fincstp
dec
sub
movsb
repz
dec
add
mov
ds
mov
xor
sub
sub
lods
out
rcrl
ss
mov
es
xor
jg
lcall
ds
jns
and
mull
mov
push
push
rorb
pop
dec
adc
js
outsl
push
je
inc
std
push
in
adc
and
xor
jne
mov
mov
out
pop
aad
mov
std
or
dec
cmp
mov
push
fsubl
ja
inc
icebp
dec
test
std
inc
lods
add
ret
fwait
adc
pusha
pop
ja
iret
adc
jl
rcrl
outsl
idiv
iret
int3
call
xchg
imul
add
loopne
jl
hlt
mov
lods
pushf
add
daa
mov
xor
mov
andb
pop
divps
scas
lock
and
fbld
dec
xchg
dec
push
xor
xorb
mov
loope
sbb
lahf
out
iret
adc
xor
xor
cltd
mov
xchg
test
pop
test
cmp
pop
and
fcompl
jmp
push
sbb
popa
pop
jp
jno
jno
cmp
jl
cwtl
pushf
jbe
xlat
xor
adc
mov
cmc
sbb
mov
mov
dec
add
pop
sbb
jl
adc
adc
cld
call
das
js
dec
or
sub
inc
aas
and
jp
aad
push
inc
inc
imul
cmp
imul
popf
jbe
xor
fs
or
rorb
or
xor
fidivrl
xor
cmc
int
int3
call
in
cmp
fs
subl
mov
dec
lds
pop
jle
pusha
sub
stos
push
xrelease
mov
decb
mov
sub
das
adc
cmp
xchg
in
inc
mov
mov
mov
cmp
fabs
xchg
std
ja
lret
mov
jno
inc
push
add
insl
mov
mov
bound
sbb
and
ret
bound
add
daa
adc
pop
lods
out
mov
daa
mov
rcll
push
enter
loop
lods
push
pop
dec
cmpsb
addr16
pop
lcall
rcrb
mov
jp
repz
hlt
lods
fisubrl
arpl
cmc
fwait
or
movsb
in
push
adc
sbb
xchg
or
cli
inc
mov
lahf
mov
or
fstpt
aam
stos
dec
addr16
test
jbe
scas
fbstp
hlt
fisttps
enter
xor
popa
jg
dec
clc
out
mov
mov
jbe
out
xor
hlt
sbb
jb
dec
cltd
xchg
loope
sbb
mov
mov
cmp
test
mov
cmp
mov
and
mov
jmp
xlat
inc
inc
xchg
mov
dec
lea
ljmp
aaa
jg
and
adc
shr
scas
movsb
movhps
out
sbb
subb
fmull
jecxz
lds
inc
and
cmp
shlb
popa
inc
rcrl
jae
insb
js
push
lret
mov
sub
dec
je
ss
aaa
jmp
fbstp
mov
shrl
cwtl
push
aas
xchg
xchg
popf
push
cmp
ds
xor
frstor
lock
mov
mov
in
pusha
mov
int
jg
arpl
dec
or
arpl
jns
xchg
lock
xchg
jp
lods
insb
or
gs
jecxz
ds
in
sbb
popa
sarb
lahf
mov
mov
push
cmp
mov
cmp
test
scas
shl
xlat
jmp
rcrb
out
mov
cmc
and
cmpb
xorb
aaa
cmpsl
test
andl
nop
xchg
dec
mov
sbb
pop
mov
mov
add
add
test
lods
and
push
and
push
es
push
jmp
jb
shr
popf
or
rcll
cmp
xchg
and
rcrb
adc
mov
or
jbe
add
mov
popa
aad
jbe
mov
push
rcrl
push
push
and
cltd
jmp
add
ja
mov
inc
adc
xchg
adc
cmc
je
jno
mov
ret
out
iret
loop
loopne
popa
sahf
xchg
cmp
cmp
xchg
lret
jns
fidivrl
loop
xor
cltd
adc
frstor
fisttpll
enter
fdivs
xchg
or
clc
int3
testb
popa
mov
pop
jne
sub
mov
add
sbb
mov
rcll
xchg
xchg
js
or
stc
cmp
pop
mov
xor
ljmp
adc
movsb
push
or
fimuls
mov
mov
mov
jl
outsl
jle
int3
cmc
pop
outsb
fdivrs
pop
out
add
push
adc
xchg
add
aad
add
test
sbb
movsl
xchg
lods
lods
mov
mov
jge
pop
movsl
daa
dec
push
dec
int3
insb
fists
xor
cld
cwtl
aad
pusha
mov
pop
mov
lods
inc
idivb
xchg
fstpt
xor
add
test
lea
daa
pop
cmp
xchg
test
cmp
cs
dec
scas
std
sahf
and
mov
lcall
int
push
cmp
pop
pop
shlb
jg
shlb
int
out
jb
dec
cli
mov
or
pop
xchg
sbb
pusha
sbb
push
fdivs
hlt
jbe
mov
hlt
xchg
cltd
fsts
out
rorb
pop
adc
cmp
and
and
jbe
fwait
mov
out
loopne
inc
loope
dec
xlat
dec
xchg
insb
xchg
pop
test
mov
mov
testb
aaa
xchg
pusha
outsl
and
movsl
test
shll
dec
mov
lea
lea
adc
int
aas
addr16
idiv
clc
jbe
cmpl
jno
add
out
mov
fsubl
push
inc
sbbb
mov
in
push
fwait
or
add
pushf
mov
xchg
mov
adc
jge
scas
icebp
popf
cwtl
bound
jnp
out
mov
orb
cmp
cmpsl
jge
lea
rcrb
loope
aaa
dec
mov
fnstenv
adc
pop
ret
mov
pushf
jae
push
sub
das
push
mul
fistl
in
andl
addr16
jns
popf
sbb
push
lahf
xor
push
sub
pop
aaa
hlt
pop
dec
sub
mov
dec
sub
icebp
cmpsb
sbb
fadds
pop
mov
push
nop
pop
pusha
push
in
aad
leave
push
cltd
outsl
cmc
sub
mov
jno
hlt
aaa
jmp
sub
sbb
or
or
paddsw
test
gs
cmpsl
loope
sbb
mov
and
and
pop
sbb
ljmp
ljmp
mov
and
in
xor
push
in
push
outsb
lahf
cld
test
push
xchg
hlt
and
pop
add
lret
inc
add
mov
jnp
cmp
xchg
repz
stos
jg
in
jae
sti
aam
and
push
ret
les
imul
bound
stc
sbbl
push
insl
xchg
mov
cmp
or
xchg
adc
cmp
mov
test
jge
lods
pop
enter
movsl
mov
rcr
mov
fstl
enter
jge
jmp
push
push
out
mov
jp
sub
lods
xchg
jae
mov
rolb
xlat
lret
or
xchg
xchg
in
mov
jno
pop
mov
mov
shrb
pop
int3
ja
jg
push
mov
mov
pop
cmp
rorb
jl
nop
lods
jg
das
inc
lea
cmp
scas
sbb
fstl
bound
mov
xchg
loopne
dec
mov
xchg
jg
fiadds
aaa
jb
aaa
notb
mov
mov
jbe
or
and
pushf
push
mov
shl
loope
mov
test
shrl
push
fcomps
xor
int
sbbl
add
mov
shlb
test
sbb
stos
jmp
lods
ss
movsb
into
fdivrl
int3
push
pop
inc
push
iret
fmul
inc
push
push
or
dec
test
jmp
in
cmp
sbbl
ror
cltd
outsl
cmc
cwtl
orl
or
pop
iret
aad
outsb
test
aas
frstor
sbb
sub
subl
xchg
mov
in
sbb
insb
pop
ja
dec
decl
or
add
lds
sub
js
jg
jmp
inc
in
in
es
sbb
sbb
dec
loopne
leave
in
mov
pop
push
loopne
int
cmp
stos
sub
mov
and
fcompl
into
mov
push
std
add
mov
mov
in
mov
test
add
mov
cmp
lock
mov
outsl
or
jne
stos
pop
mov
mov
test
stos
and
lods
xor
lret
sbb
pminub
cwtl
pop
icebp
sbb
xchg
mov
mov
jbe
std
mov
fcmove
out
jmp
stos
mov
pop
aad
mov
sbb
fsubrs
xchg
xlat
movsb
mov
leave
pop
out
fcmovbe
cs
pop
push
lods
outsl
pop
into
dec
dec
and
dec
fsub
sti
push
inc
lret
pushf
cld
pop
pop
jno
mov
in
xchg
dec
ds
jns
out
cld
mov
cmpsb
push
in
outsb
push
in
int
dec
gs
cwtl
pusha
sub
inc
sbb
sahf
clc
orb
mov
cmp
mov
cmpsb
jns
and
mov
fdivs
cmpsl
jmp
or
lods
in
inc
sbb
adc
in
mov
fwait
jnp
sub
lods
imul
nop
mov
sbb
jp
cmp
pop
adc
leave
add
add
and
inc
cwtl
stos
insl
nop
and
fsubrs
imul
pop
mov
or
xor
inc
mov
ret
out
data16
and
mov
repnz
add
mov
subl
cvtpi2ps
fucom
mov
add
cmpsb
cmp
int
and
fnstenv
ss
sub
ficomps
shlb
inc
xchg
inc
clc
fisubs
sbb
out
mov
insl
dec
mov
dec
cmp
ret
cltd
out
cltd
fdivs
cmp
in
orb
stos
cld
test
cmp
xor
ss
lds
pop
test
push
push
mov
mov
xchg
xor
in
jg
loop
mov
xchg
stc
mov
or
into
in
loope
xchg
cmpsl
in
faddp
or
and
fisubrs
mov
xchg
mov
stos
cmp
repz
pop
scas
insl
shlb
xor
jno
push
dec
or
lock
or
push
mov
bnd
hlt
ret
std
pop
adc
aaa
aaa
arpl
sahf
add
mov
ds
sbb
push
mov
aam
push
stos
dec
jo
cmc
and
aad
inc
pop
ret
mov
das
leave
push
ljmp
mov
imul
adc
std
add
push
sar
cmp
jno
out
outsb
aas
in
lahf
out
xlat
int
xchg
push
add
enter
xor
dec
mov
popf
jb
pop
cmp
pop
mov
in
hlt
cs
das
ret
xchg
call
daa
pop
cwtl
jmp
jne
jno
fists
pop
xor
int3
je
jp
pop
aas
cmp
call
push
cmc
mov
inc
sbb
icebp
jmp
mov
xlat
pushf
cmpl
mov
add
ret
mov
fcoms
ficompl
sar
ljmp
fbld
cmc
sbb
data16
div
addr16
ficompl
cmp
je
jge
das
testb
call
bound
int
inc
js
lahf
dec
adc
xchg
lock
or
mov
xchg
imull
icebp
pop
push
aam
lods
push
les
dec
or
cwtl
fldl
cmp
and
ret
mov
sbb
cld
adc
cmc
inc
scas
jmp
lock
subb
mov
sub
xchg
sub
fildl
jb
jmp
neg
fsubrs
push
jo
ljmp
adc
out
inc
or
insb
in
pop
lock
ret
push
in
fbld
pusha
sbb
mov
stos
mov
xlat
or
mov
mov
sub
sub
mov
das
sahf
addr16
and
and
cmp
xchg
pop
scas
dec
lods
pop
mov
hlt
xchg
ret
xor
xor
mov
ret
and
outsb
push
jecxz
or
push
or
jmp
fdivrs
enter
outsl
out
xor
test
pop
in
scas
jle
and
mov
jne
and
out
mov
inc
mov
lret
xchg
and
test
xchg
jnp
xor
movsb
pop
xchg
fwait
lahf
sub
in
repz
fsubrl
adc
mov
push
add
cmp
pop
repz
cs
insl
and
nop
cmpsl
mov
sub
fisubrl
dec
or
dec
xchg
or
rolb
push
cli
fisubrl
lock
cli
xchg
or
and
add
fdivrl
or
enter
or
adc
jbe
adc
push
cli
pop
outsl
mov
scas
mov
lcall
pop
lret
popa
mov
cmpb
add
lcall
inc
jb
clc
cli
mov
cmp
addr16
sbb
outsb
xchg
add
mov
adc
sbb
ret
out
jg
sbb
xor
xchg
jo
adc
mov
cwtl
stc
and
mov
pusha
pop
dec
je
push
cmc
mov
insl
cltd
dec
jge
fildll
inc
stos
iret
sub
mov
mov
or
sbb
fmull
add
xor
xchg
stos
stc
lock
mov
cmc
and
inc
and
not
rolb
push
inc
dec
mov
push
cli
jl,pt
push
lock
int
xchg
mov
mov
push
out
xor
cmp
adc
adc
or
mov
mov
mov
pop
or
int3
shll
cmpsl
mov
lods
fsubs
xchg
fldcw
pop
jg
dec
push
bound
mov
inc
std
mov
jg
fdivp
pusha
divb
jmp
push
xchg
in
cltd
dec
and
push
adc
xchg
orl
mov
test
icebp
test
mov
call
dec
fcmovnbe
and
dec
jns
push
out
sbb
push
test
jmp
int
jl
mov
and
sbb
mov
test
lcall
xchg
sbb
jno
mov
repnz
cmp
xchg
test
mov
hlt
cmp
ja
jbe
aaa
jae
fisttps
out
test
pop
push
std
mov
cmp
push
add
dec
inc
outsb
xor
int3
cmp
jno
scas
in
call
or
sub
mov
cltd
and
jns
mov
pop
xchg
loopne
pop
adc
jge
and
dec
jae
mov
mov
or
mov
sbb
movsb
ja
sbb
repnz
aas
jae
pushf
call
xchg
jecxz
mov
mov
pushf
dec
xchg
cmp
inc
push
ds
add
sahf
aam
sub
lret
xor
mov
dec
dec
into
fisubrl
xorb
push
push
insb
dec
ja
lods
test
mov
test
sbb
cli
jge
pop
std
popa
mov
pop
ja
xchg
pop
imul
sbb
jb
std
pop
pushf
filds
jge
aad
cmp
xchg
and
daa
mov
lods
rcr
pop
mov
xlat
js
push
jmp
inc
repz
leave
jecxz
cli
pusha
cld
mov
cmc
mov
arpl
das
or
and
movsb
xchg
mov
and
or
pop
into
adc
sub
pop
xchg
jns
push
cmpsl
pusha
cmp
sbb
mov
aaa
and
adc
jnp
rcll
sbb
lds
mov
cli
mov
sti
ds
insl
call
and
lods
xchg
leave
test
lahf
sub
psubd
mov
mov
xchg
jnp
push
pop
mov
mov
ljmp
mul
push
mov
leave
and
loopne
leave
or
popf
push
insb
xor
pop
jmp
out
cli
mov
xor
clc
gs
lahf
lret
out
gs
adc
push
and
add
pop
sub
mov
xchg
scas
push
xchg
adc
and
jnp
xor
pop
mov
add
fadd
sub
add
les
mov
adc
lret
mov
outsl
push
xor
mov
shlb
jle
xor
lea
cmp
mov
pop
ds
stos
out
cs
cmp
mov
sarb
mov
enter
iret
loopne
out
clc
mov
jp
mov
lahf
jmp
mov
cmc
cmc
push
and
sbb
pop
xor
xchg
xlat
adc
int3
xchg
and
cmp
xor
xor
pop
push
mov
dec
mov
movsl
popf
inc
insb
out
and
xchg
int
jge
dec
mov
daa
jns
sub
push
pop
inc
push
in
cli
jmp
xchg
jo,pn
push
movsb
pusha
mov
mov
arpl
push
cmp
sbb
xor
dec
jl
aas
mov
repnz
in
mov
dec
pop
and
es
loop
push
adc
cmp
into
js
pop
lods
mov
pop
insl
sub
adc
inc
jmp
out
hlt
push
outsl
adc
in
popa
nop
fisttpl
dec
push
or
mov
mov
leave
xchg
sub
add
push
add
cli
shrb
mov
mov
es
push
jnp
sbb
inc
adc
inc
add
dec
out
ja
ret
dec
sub
jp
pop
xor
mov
cld
push
cmp
and
or
cs
bnd
jbe
pop
hlt
inc
fdivrl
cs
aad
test
lcall
ret
fbstp
lock
xlat
outsl
cmp
out
push
dec
push
dec
mov
repnz
jle
and
jne
xor
xor
popa
sbb
push
add
mov
and
out
pop
fs
out
enter
addl
mov
enter
sub
mov
push
pop
pop
xchg
movl
or
cld
orb
hlt
add
jne
out
in
mov
or
cltd
push
call
dec
adc
add
movb
sub
or
lret
push
dec
mov
mov
mov
mov
inc
lods
and
jmp
push
push
and
jge
test
inc
cmpb
outsb
jg
loopne
clc
test
and
outsl
call
ja
loop
jp
call
pop
mov
lods
add
xor
cmpsl
mov
js
mov
push
and
mov
and
pop
inc
iret
dec
push
xchg
clc
sub
lret
shlb
stos
jbe
call
cmp
subl
ficoml
pop
nop
pop
shll
add
data16
mov
rdpmc
clc
xorb
scas
in
mov
mov
xchg
outsb
rcrl
pop
rorl
adc
pop
inc
and
jb
stc
push
loopne
repz
and
das
int3
loope
out
repnz
xchg
xchg
xchg
pop
mov
add
gs
fdivrl
mov
cmp
pop
push
xchg
rcl
mov
aam
xchg
push
out
xlat
stos
and
negl
clc
icebp
lods
cmp
inc
push
push
and
sti
popf
cs
push
push
std
add
pop
pop
mov
or
sub
cmp
pop
cltd
cmp
mov
xor
stc
push
roll
mov
jecxz
repz
dec
addl
jp
clc
inc
xrelease
or
sti
cmp
xor
cmp
popf
adc
or
mov
imul
rcr
jle
gs
hlt
scas
jg
lret
fcomp
dec
icebp
and
pop
into
cs
sbb
ret
jne
lock
inc
pop
out
xchg
hlt
adc
arpl
movsl
pop
sbbl
fwait
xchg
jmp
lock
adc
xchg
cmp
dec
sub
test
scas
les
inc
jge
cmpsb
je
jae
iret
mov
cmp
jnp
or
rsm
mov
cmpsl
jecxz
jg
loopne
jno
xor
sbb
out
stos
lahf
pop
push
cltd
or
pop
push
cmp
lock
aaa
cs
bound
sub
inc
push
xchg
fucomi
negb
push
loop
pop
xchg
jmp
rorb
rcll
in
and
add
adc
adc
out
dec
jne
inc
mov
inc
pop
add
in
sbb
xchg
lock
mov
sbb
adc
pop
jbe
insl
imull
adc
push
xchg
mov
fmul
sbb
fs
imul
jmp
sub
xchg
jo
stos
icebp
out
in
movsb
push
out
data16
cmp
adc
push
adc
xor
lret
inc
test
mov
aad
cmpsl
test
loope
pop
imul
loop
push
push
cld
mov
xchg
loope
jo
and
aas
imulb
out
cmp
enter
scas
stos
sbb
daa
mov
or
pusha
aam
mov
mov
mov
repnz
sub
loop
pop
aas
lock
fiadds
xchg
inc
inc
inc
mov
int
pushf
lock
repnz
add
imul
adc
ds
adc
mov
clc
xor
jbe
xorb
and
scas
mov
add
jno
enterw
out
lahf
mov
ss
pop
dec
jle
outsl
cmpsb
daa
mov
lock
dec
xor
cmp
sub
aam
pop
xchg
mov
jbe
or
imul
cmp
add
mov
mov
and
fmull
inc
and
sarl
and
and
pop
inc
jnp
int3
fldcw
lea
pop
adc
mov
xor
gs
sbb
lahf
pop
lcall
xchg
xchg
and
mov
repnz
pusha
mov
pop
je
xor
jns,pn
and
call
jbe
cli
rol
push
jl
adc
sahf
xchg
dec
fcmove
lds
or
jp
and
mov
fnstsw
loopne
push
movb
pop
lahf
dec
mov
sub
dec
dec
add
or
popa
call
das
sub
xchg
jo
adcl
jle
scas
xorb
in
les
popa
dec
addr16
repz
cmp
ds
idiv
jmp
arpl
bound
sbb
or
push
xor
add
and
mov
jle
jge
sub
mov
das
add
and
test
nop
inc
insb
les
mov
inc
imul
jmp
jbe
add
es
mov
jo
test
sbb
imul
loop
and
sub
or
rorl
mov
sbb
sbb
hlt
pushf
sub
sub
push
jmp
jl
cmc
rcr
fs
or
pop
lret
jmp
inc
dec
insl
pop
negb
ljmp
mov
sbb
insb
jb
push
jl
clc
or
push
test
cmp
ja
sub
imul
pop
sbb
dec
fldt
xor
xchg
push
leave
push
push
pop
decl
xchg
pop
mov
jecxz
punpckhdq
mov
inc
push
xor
adc
push
pop
and
cmp
add
mov
xor
push
pop
lods
pop
dec
shl
cmpsb
pop
sar
mov
push
inc
jmp
dec
pop
push
loopne
scas
jo
mov
leave
mov
cli
jle
cmp
out
adc
sbb
xor
pop
inc
xchg
jle
push
xchg
es
add
xchg
mov
xor
sub
inc
lds
les
andb
push
ss
bound
mov
int
sbb
in
dec
out
sbb
inc
sbb
push
xchg
mov
icebp
aas
ret
movsb
call
shl
int
pop
cmp
xor
int
adc
outsl
fidivrl
ret
mov
push
lcall
gs
clc
pop
lret
test
insb
push
adc
mov
decb
xor
jge
and
ss
dec
push
movsb
lahf
jg
or
fstl
mov
push
loopne
cmp
mov
lods
jp
mov
dec
lret
cmc
jmp
roll
push
push
leave
aam
test
pusha
xor
xchg
iret
jo
mov
cltd
out
inc
test
jmp
fiaddl
pop
cs
cli
movsl
lock
jmp
lcall
mov
mov
dec
cmpsb
aas
inc
mov
shl
mov
movsb
icebp
jmp
call
in
out
es
fs
aad
daa
or
daa
jmp
dec
mov
cld
jmp
adc
jmp
int3
lds
out
out
inc
xchg
dec
pop
mov
lcall
mov
mov
mov
xchg
es
cmpsb
fs
enter
rorb
clc
dec
test
jns
mov
aam
fwait
pop
inc
aas
push
mov
pop
mov
mov
mov
ret
std
and
pop
or
cmp
pop
xor
aas
xor
outsl
mov
mov
dec
test
push
rcl
out
push
sti
negl
jg
push
push
in
fmuls
cmpsl
jl
ret
insb
popa
push
push
loopne
jno
pop
ljmp
sbb
pop
sbb
cmp
xorl
into
loopne
lret
mov
xor
xchg
cmp
out
mov
jb
adc
push
xor
jge
ret
call
jl
or
out
sbb
mov
call
xchg
or
lcall
cli
fisubl
push
push
je
das
mov
cmp
lds
xor
sub
push
subb
stc
xchg
pop
aas
loopne
dec
pop
lret
add
ss
adc
arpl
dec
pop
inc
roll
mov
sub
jecxz
sub
inc
xchg
mov
add
mov
adc
xor
mov
adc
mov
mov
lods
in
fistps
push
xchg
cmp
lods
jae
test
xlat
adc
mov
outsb
jle
js
jne
fdivrs
imul
pop
sbb
mov
adc
adc
dec
les
mov
cmp
jecxz
cmp
mov
call
jge
pop
push
push
pusha
mov
pop
scas
mov
mov
inc
fcmovu
test
xor
fsubp
mov
xchg
int
xor
xchg
repnz
jae
add
leave
push
mov
pop
cs
xlat
call
test
std
xor
lcall
mov
rclb
cmc
xor
or
add
vcmpsd
repz
addr16
into
popf
mov
adc
adc
jo
mov
scas
xchg
out
jg
pop
mov
add
in
pusha
or
and
fstl
fcoms
pop
rorb
rcll
aam
inc
int3
lods
xchg
repz
mov
je
sbb
jmp
mov
cwtl
int3
add
pop
adc
or
xchg
sahf
andb
es
pop
call
mov
adc
inc
test
test
mov
and
pop
pop
cs
push
push
and
jae
jg
inc
inc
fdiv
jo
jo
adc
movsl
sbb
jmp
lahf
pop
nop
mov
cli
cwtl
mov
sbb
aad
mov
lods
jnp
mov
mov
sbb
mov
mov
mov
cmc
es
cltd
in
cmp
jno
sbb
push
fmull
int
pop
int3
int3
inc
cmp
inc
js
mov
xchg
sbb
lcall
adc
fidivrs
mov
adc
bound
or
shlb
mov
fistpll
adc
jb
sub
and
add
xlat
ss
jmp
inc
sbb
std
xor
dec
sbb
imul
out
in
mov
std
push
movsl
pushf
or
sbb
xchg
add
aad
sub
push
mov
push
mov
daa
bound
scas
hlt
notl
sarl
cwtl
inc
mov
xchg
cli
mov
mov
pop
cmc
inc
push
jne
lock
les
mov
push
add
gs
out
mov
lds
rolb
loope
mov
xor
push
sub
dec
mov
shll
cltd
leave
inc
dec
lods
mov
mov
aad
in
in
inc
push
sti
imul
rcl
sub
xchg
mov
xchg
cwtl
lret
adc
stc
lahf
je
movsl
out
xor
mov
xchg
or
cltd
mov
sbb
sub
bound
add
adc
xchg
inc
or
shll
out
adc
int
cmp
lods
in
sbb
lcall
aad
or
or
testb
call
mov
xor
lahf
pop
fistpll
mov
dec
sbb
push
push
shl
sbb
rol
je
arpl
aad
jmp
mov
inc
in
arpl
or
cmp
cltd
xchg
shll
bound
or
and
pop
push
inc
push
sub
mov
xchg
push
push
aaa
pop
jecxz
and
lods
xlat
call
cmp
inc
xor
call
and
in
lahf
bound
out
cltd
jb
mov
loopne
int
pop
pcmpeqd
cld
add
xchg
add
stos
cmp
jmp
outsb
xchg
adc
rcrb
and
fistl
sub
xor
inc
xor
insl
xor
roll
aam
push
push
pop
push
jmp
fiadds
and
sub
jae
inc
and
out
mov
lcall
mov
aad
cmpsl
repz
inc
pop
pop
cmc
xor
pusha
iret
dec
fdivs
mov
dec
mov
hlt
xchg
lods
cwtl
fs
cwtl
xchg
into
and
mov
pop
mov
test
mov
mov
les
cmp
mov
push
or
int3
sub
mov
mov
xlat
rolb
call
adc
mov
jns
int
clc
cmc
aaa
idivb
xor
pop
ret
cmp
add
cwtl
adc
lret
or
sub
and
mov
cmp
fdivp
jb
pop
mov
push
fcomp
imul
dec
jns
jb
inc
sahf
push
insl
sti
jle
cld
sbb
lods
push
jne
jns
or
rcll
jne
xor
repnz
pushw
xchg
data16
cwtl
lods
fwait
push
dec
sbb
aaa
aas
xchg
test
test
mov
jmp
mov
idiv
mov
sub
xor
jmp
ja
mov
xchg
inc
cld
lds
imul
cld
cmp
fimuls
ret
jecxz
inc
xchg
inc
mov
sahf
cmp
xchg
mov
mov
popl
and
mov
aaa
xor
jmp
cltd
test
pop
mov
ficomps
or
fucom
insl
shlb
rorl
nop
sub
jbe
fwait
sbb
add
pop
xchg
or
rorb
pop
mov
cmp
mov
mov
dec
lods
jle
insl
pop
ljmp
ds
shlb
push
push
test
mov
scas
and
pop
loope
adc
lds
or
movsl
xchg
mov
xchg
jle
and
mov
lcall
mov
jge
cmp
and
fsubrs
sub
ret
imul
enterw
dec
inc
sub
loopne
ljmp
sbb
lock
xchg
ljmp
iret
lea
push
outsb
xchg
call
dec
rcr
lret
sbb
repz
imul
ds
add
pop
ljmp
sub
dec
aad
mov
repz
jp
lods
add
push
sub
stos
clc
xor
fs
lea
xchg
pop
pop
or
sahf
lea
mov
adc
in
mov
mov
aam
sub
sbb
jle
push
lahf
jae
xchg
jp
fmull
in
push
and
inc
dec
xchg
jae
mov
lcall
sub
popa
and
in
movsl
lods
lahf
fstl
and
out
xor
mov
imul
xchg
imul
dec
lods
test
fisttpl
pop
push
mov
lds
fld
mov
lds
inc
dec
div
pop
divl
insl
push
adc
call
sbb
cmp
inc
lods
push
sbb
mov
inc
mov
stos
shlb
add
xor
test
mov
sbb
rcrl
push
jg
in
push
iret
sub
leave
ja
mov
imul
inc
dec
addr16
subb
sub
pop
xchg
cmpb
push
es
ret
xlat
adc
fisubs
lea
and
adc
movsb
daa
push
xchg
push
add
cmpsb
jge
pop
sub
fistl
dec
xchg
mov
dec
dec
es
ret
add
in
sub
aam
in
into
cmp
push
loope,pn
fwait
sub
test
or
mov
sahf
pop
cmp
push
cmpl
ss
fidivs
add
dec
push
fldenv
je
shlb
jecxz
aad
imul
mov
mov
iret
repnz
adc
mov
repz
push
in
push
cwtl
pushf
or
int
xchg
cmpsl
sbb
das
mov
xchg
add
cltd
xchg
xor
sub
xchg
mov
dec
xor
fcompl
outsb
inc
nop
in
lret
push
fsts
xchg
xlat
mov
sbb
mov
repnz
testl
int3
pop
mov
mov
jns
in
cmp
mov
jle
xchg
jecxz
in
dec
cmp
inc
fiaddl
jno
subl
push
mov
dec
loop
in
lret
in
das
or
push
cli
jb
mov
mov
out
and
inc
test
xchg
inc
mov
cmp
dec
pop
pop
or
ss
scas
lds
pop
mov
movsb
sub
pop
out
and
cltd
das
sub
xor
and
cli
das
les
add
inc
ljmp
inc
arpl
insl
inc
cli
lret
jno
cmp
mov
lret
ficomps
lods
in
into
ds
add
arpl
cmp
push
and
add
sub
mov
inc
jl
aaa
and
fmull
and
push
pop
xchg
fbstp
dec
push
jp
adc
test
push
push
adc
lret
adc
in
mov
xchg
cwtl
or
xchg
inc
enter
clc
lret
mov
testl
sbb
fisubl
sbb
xchg
and
dec
mov
mov
mov
xchg
lods
enter
je
mov
mov
imul
adcl
gs
jnp
jp
cmp
push
dec
mov
pop
push
cmp
fldt
jg
fnsave
jbe
cs
and
inc
popa
jg
push
jnp
fs
pop
jmp
inc
xchg
add
icebp
outsl
leave
je
aas
stc
lcall
rcrl
mov
xchg
imul
jp
or
inc
xor
aam
or
std
xchg
cwtl
sbb
scas
jb
cmpsb
fwait
call
cmp
and
cmpsb
pop
ljmp
xchg
stos
leave
aam
mov
jae
lret
push
paddsw
mov
pop
bound
pop
pop
or
mov
or
sbbl
and
add
mov
stos
add
test
stos
push
lret
adc
outsb
test
dec
dec
sbb
dec
in
push
stc
incl
arpl
mov
test
call
push
pop
mov
inc
or
pop
push
cwtl
or
sbb
sbb
cwtl
cmp
add
or
fimuls
sub
dec
xlat
mov
xchg
js
inc
es
inc
sbb
xor
xlat
push
cmc
cmp
push
mov
inc
aad
daa
push
mov
stc
sbb
sbb
int
movsl
xchg
jb
popa
or
test
cld
leave
mov
xor
cmp
dec
hlt
pop
fs
jns
mov
jne
cltd
mov
dec
sub
jl
out
mov
in
fdivrs
jl
jmp
sbb
pop
std
fs
test
pushf
pop
fnsave
popa
and
xchg
pop
inc
and
adc
mov
inc
popa
jo
fistps
mov
lahf
xor
fildl
fisttps
xor
shll
jns
xchg
sarb
and
jno
push
jno
dec
outsb
pop
mov
cmc
pusha
and
leave
test
adc
fs
scas
inc
mov
jmp
leave
jno
inc
mov
xor
xor
sbb
pop
and
test
adc
imul
xchg
or
into
int3
mov
ret
sar
sbb
call
inc
inc
repz
mov
arpl
pop
adc
mov
enter
mov
fucomp
les
add
stos
aaa
cs
sahf
mov
xchg
xlat
js
jo
jbe
rorb
imul
scas
xor
mov
ljmp
ud1
xor
repnz
or
test
addl
xchg
ret
mov
fs
mov
mov
mov
insb
and
mov
movsb
movsl
insl
jecxz
jge
and
mov
or
inc
push
int3
stc
xchg
mov
xlat
mov
push
aaa
jle
test
pop
sub
movsl
mov
and
loope
push
gs
xlat
push
movsl
dec
xchg
pop
int3
pop
fiadds
pop
lds
jns
pop
repnz
jmp
shll
and
cmp
sbb
cwtl
ds
lods
pop
aad
dec
leave
lods
dec
xor
rcrl
add
out
ja
sbb
imul
sbb
adcb
cmp
rol
std
cmp
pop
dec
lret
lods
in
out
cmp
jae
addr16
or
ds
shrb
inc
cltd
inc
js
cmp
and
scas
roll
imul
mov
mov
fnstsw
andb
or
push
adcb
arpl
xor
clc
jl
lods
sub
out
xor
pop
sbbb
loope
cwtl
push
sbb
xchg
mov
mov
dec
push
cs
imul
rolb
cli
jge
call
loope
jo
cwtl
push
push
xchg
dec
insb
push
mov
and
lahf
or
mov
out
add
pop
lock
jae
out
jae
and
cmpsl
lahf
in
neg
negl
push
cwtl
cli
test
repnz
add
nop
push
imul
jae
and
push
inc
adc
xor
lock
clc
mov
cld
test
aad
je
xchg
push
cs
fs
lods
jmp
adcb
push
fildl
mov
shl
inc
lods
or
mov
jle
adc
jo
mov
hlt
jge
xchg
in
mov
jecxz
inc
push
fildl
mov
pop
inc
test
aas
inc
xchg
cmp
adc
jae
jp
pop
hlt
lds
pop
rcr
jno
sbb
lret
int
inc
mov
pop
jno
fstl
push
jne
push
pop
test
mov
dec
mov
adc
out
outsl
sbb
xchg
or
cltd
je
cltd
mov
scas
cmpb
hlt
mov
outsl
stos
jl
orb
fisubrs
lahf
pop
cltd
rcl
mov
dec
mov
mov
cmc
sahf
frstor
jns
fsubr
in
push
in
mov
sbb
arpl
mov
xor
sbb
aad
lahf
cmp
ja
leave
sub
enter
cmpsb
push
mov
dec
pop
sbb
or
jno
mov
push
xchg
jp
adc
loopne
add
adc
or
subb
nop
scas
loopne
push
insl
mov
pop
jb
mov
and
push
pop
mov
xchg
scas
iret
mov
jmp
xchg
push
ds
jo
outsl
mov
jmp
imul
xchg
aam
push
pop
popa
adc
sub
mov
cmp
in
sub
fs
aaa
mov
mov
sub
sbb
inc
scas
rcrb
pop
test
mov
inc
inc
test
stc
idivl
mov
xor
sub
enter
andb
pop
xor
das
sbb
mov
push
aam
mov
inc
lcall
mov
lods
rcrb
mov
out
loopne
push
sub
cli
and
shr
in
call
jecxz
aad
pop
fldcw
out
popf
loopne
pushf
mov
sqrtps
cwtl
cwtl
cs
and
pop
lea
dec
adc
adc
jnp
add
icebp
mov
jbe
lea
bound
fcompl
in
mov
bound
hlt
ds
lea
test
sbb
lcall
test
roll
push
pop
and
pop
add
fwait
jbe
adc
sub
or
jl
paddq
icebp
scas
dec
scas
stos
daa
mov
xchg
mov
pop
adc
mov
pop
pop
adc
sbb
repnz
jno
sbb
loop
jge
mov
sahf
inc
jp
adc
mov
dec
int
test
mov
xor
lcall
lds
int3
mov
rorl
xchg
inc
in
jae
cmp
imul
push
xchg
popf
popa
cmp
call
fs
mov
mov
aam
in
dec
xchg
mov
xchg
add
mov
cmp
xchg
sub
int3
test
scas
mov
hlt
push
add
sahf
fstl
je
or
and
cli
xchg
inc
js
jae
jne
cmc
xor
loopne
pop
ss
sbb
out
pop
jecxz
sbb
aas
pop
mov
xor
mov
imul
fnstsw
xor
enter
iret
lea
mov
loop
cwtl
stc
int3
scas
rolb
lret
repz
mov
lds
icebp
mov
out
outsl
cmp
cltd
popa
mov
bound
mov
sub
rorb
push
pop
dec
stos
stos
xor
mov
cmpsb
test
call
cmp
stos
cmpsl
movsb
mov
jns
loopne
cltd
in
movsl
ffreep
insb
movsb
fs
fldcw
adc
jmp
jne
xchg
xchg
outsb
sub
xchg
ficoms
xchg
add
enter
mov
das
xor
xor
and
std
mov
push
aad
and
out
dec
dec
popf
ffreep
rorl
inc
mov
mov
xchg
jo
test
jmp
popa
pop
adc
jle
or
movsb
jp
addr16
sbb
jno
adc
or
pop
icebp
pop
adc
in
mov
pop
cmp
aaa
mov
sbb
dec
pushf
mov
flds
ret
aad
push
inc
jl
aam
cmp
enter
outsb
cld
cltd
jae
cltd
clc
pop
mov
cmp
addr16
push
test
ret
cmp
mov
jns
pop
add
test
sar
dec
aaa
add
pop
push
mov
fisubrl
das
not
xlat
ss
fistps
push
shrl
dec
dec
fcoms
jb
inc
pop
js
rolb
jns
xchg
jnp
fs
fwait
in
add
or
add
scas
lret
sub
add
es
xor
lods
arpl
push
and
and
fistpll
mov
pusha
jl
iret
test
adc
pop
sbb
daa
ffree
jno
scas
loope
jmp
pusha
ja
popf
test
outsl
pop
pop
sbb
sub
jl
adc
or
mov
lret
out
stos
outsl
and
fcoml
push
imul
pop
inc
inc
dec
leave
pop
stc
testl
clc
ja
dec
or
pop
mov
repnz
in
orb
aaa
push
xchg
pop
or
ds
adcl
sub
shll
imul
and
dec
add
xchg
enter
rorl
xor
jg
dec
mov
das
inc
test
and
lret
fnsave
push
negl
or
in
cmova
cvtpi2ps
cmp
or
jmp
mov
out
mov
stos
sub
pop
iret
in
xchg
stc
sbb
pop
dec
int3
leave
pop
xchg
sub
xlat
adc
dec
inc
jb
dec
add
outsl
cmpl
ja
idivl
push
mov
or
push
or
rolb
mov
add
je
add
stos
into
push
test
xor
push
sahf
and
shr
push
fdivs
sub
push
or
sbb
aaa
stc
scas
jno
loop
es
pusha
js
arpl
orb
sbb
mov
mov
add
cmp
data16
jno
mov
and
jb
xlat
sbb
jge
ss
inc
jns
sahf
stos
sti
icebp
jae
sub
mov
out
in
jno
xchg
jecxz
in
push
xchg
movsl
adcb
cmp
sbb
or
aad
adcl
andl
mov
push
fldenv
shrl
push
jle
adc
lea
leave
cli
clc
lret
inc
in
testl
mov
or
in
nop
sbb
cmc
outsb
data16
pop
push
jns
or
aaa
lea
sub
add
mov
mov
out
mov
push
cmp
mov
sub
and
cmpsb
aam
out
test
cmp
enter
jg
arpl
push
and
adc
arpl
das
jl
cld
je
xor
push
lock
outsb
xlat
mov
cmp
mov
mov
cmp
ja
xor
pop
shr
es
ror
stos
pop
cmovnp
dec
and
and
sbb
jae
loopne
test
and
xchg
xchg
push
fwait
sbbl
xchg
addl
pop
inc
cmp
aam
jle
divb
push
fsubrp
aam
pop
lds
jno
inc
dec
aam
and
sbb
test
cmp
mov
lcall
jnp
aam
or
mov
mov
sub
cmp
mov
aaa
ficoms
out
cld
dec
lods
imull
push
cmp
mov
mov
dec
repnz
cmp
cmpsl
and
jae
outsb
std
cmc
xchg
ss
add
adc
movsl
fsubl
add
rorl
dec
fmul
test
mov
cmp
scas
test
and
lldt
aad
inc
je
int
not
mov
adc
jbe
shl
fs
aam
push
hlt
jo
rclb
das
push
dec
sahf
in
inc
and
adc
je
shlb
cmp
test
mov
stos
std
xchg
sub
aam
pop
sbb
mov
popf
aad
pop
repnz
inc
jns
cld
stos
in
jmp
cwtl
push
jno
xor
insl
jmp
loop
sbb
xchg
push
inc
sbb
sbb
xchg
enter
cmovae
or
mov
mov
lods
sub
pop
cmp
rcll
fldenv
shlb
lret
mov
icebp
inc
add
inc
lds
fwait
jl
shlb
ja
mov
jmp
mov
das
roll
call
test
cmp
xchg
pop
je
or
cmc
mov
or
mov
dec
push
cmp
arpl
add
adc
push
std
jg
cltd
sbb
jo
push
pop
mov
sbb
mov
sbb
push
add
xchg
push
xchg
lcall
test
mov
or
or
push
cli
sub
iret
xor
rcrl
push
stc
xlat
mov
les
arpl
sub
sbb
cwtl
outsl
pop
js
jo
cmpsl
jge
jo
ljmp
pusha
lods
adc
jbe
and
aad
mov
je
fsubs
pushf
mov
test
and
mov
ss
fcmove
sub
xchg
int
repnz
xlat
adc
stos
je
repz
push
mov
daa
shl
into
sar
xchg
loopne
fdiv
hlt
pusha
stos
xor
push
pop
aaa
imul
repnz
push
pop
sbb
mov
mov
mov
aas
roll
push
outsb
jge
and
xchg
xlat
and
out
sub
shrl
sbb
int3
int3
inc
cmp
and
outsl
gs
hlt
mov
or
xor
loopne
or
mov
push
pop
mov
pop
xchg
lea
mov
mov
inc
aaa
mov
daa
rolb
scas
stos
fldenv
mov
cmc
gs
cmpsb
pop
lret
inc
cmp
pushf
or
ret
jns
xchg
add
rorl
jns
sbb
cs
sub
adc
adc
add
xchg
cwtl
fmuls
sub
and
ds
arpl
lock
pop
cmp
dec
cmp
cmp
into
inc
inc
mov
xor
mov
sub
arpl
push
mov
movsb
in
pusha
inc
adc
mov
xchg
adc
leave
inc
jbe
stos
cmc
ror
mov
mov
mov
std
insb
pop
stos
cmpsl
filds
movsb
fsts
arpl
lret
insb
dec
xchg
push
fdivrl
les
iret
or
in
les
or
sbb
dec
imulb
test
loopne
cli
mov
mov
jmp
push
dec
xchg
jnp
dec
inc
stos
push
mov
mov
movsl
fildl
call
cmp
mov
incb
out
out
pop
jecxz
cmp
shrb
rolb
jge
mov
xor
bound
lds
xchg
insl
call
and
ss
aaa
sub
scas
sub
pop
and
ficoml
fstpl
dec
push
stos
test
addr16
push
or
fwait
ljmp
jb
mov
sti
cmpsl
mov
lcall
pop
stos
push
fs
cld
orl
dec
add
cs
push
dec
mov
bound
les
inc
push
jmp
and
insl
daa
rclb
dec
dec
pushf
dec
std
jg
jmp
xor
pusha
inc
repnz
push
out
push
out
iret
mov
lahf
or
sub
sub
testb
ficomps
mov
pop
roll
out
sub
sbb
mov
test
lcall
push
addr16
push
sbb
repnz
mov
mov
xchg
out
xor
insl
loopne
out
add
or
cltd
push
fs
ss
push
lcall
enter
mov
and
mov
cld
sub
lds
ss
mov
xor
movl
int3
repz
int3
add
ljmp
mov
add
mov
jecxz
push
out
or
mov
xchg
lods
cld
push
dec
add
fmul
inc
stos
push
jp
dec
out
sbb
mov
mov
dec
je
dec
pop
add
mov
push
jmp
aam
mov
sub
push
mov
xchg
lret
jp
pop
xchg
adc
add
cmp
mov
add
nop
xlat
lret
pushf
fdivrl
mov
scas
mov
test
dec
mov
enter
fcom
out
xor
cmpsb
out
stc
int
ficompl
rol
jne
or
outsb
lret
inc
ds
cmpsl
lea
daa
jnp
push
repnz
fwait
inc
insb
aam
insb
push
mov
iret
xor
negl
and
mov
sbb
adc
adc
xchg
mov
das
xor
and
adc
inc
test
rol
mov
dec
in
fldl
sbb
je
pusha
mov
cltd
inc
in
in
ss
cwtl
and
roll
dec
sbb
test
inc
cmp
or
jno
mov
aaa
shrb
lock
daa
movsb
cmp
dec
and
inc
pop
lcall
add
int3
in
stc
fstpl
cmp
call
pcmpeqb
jno
xchg
cmp
dec
sbb
insl
out
pop
in
loopne
mov
sub
dec
push
add
fs
scas
gs
aaa
mov
iret
mov
movsb
js
push
std
mov
cmp
fistps
jo
dec
nop
out
fs
rorl
shl
lcall
adc
and
movb
jl
mov
sbb
cltd
out
lret
stos
popf
dec
xchg
mov
mov
pop
xchg
pop
cmp
sub
ret
pop
jle
dec
fdivrs
mov
fisubs
scas
dec
push
and
addb
push
es
jl
cmpl
cmp
out
jae
popf
arpl
push
rorb
in
fadds
jmp
pop
and
xchg
mov
nop
pop
test
sub
mov
mov
rorb
insb
xchg
daa
push
mov
arpl
lret
jo
int
lea
fs
pushf
cmp
lret
in
push
and
mov
mov
xor
mov
xchg
fs
xchg
cmp
sub
dec
scas
inc
mov
and
sub
movsl
stos
mov
enter
mov
sub
ret
jmp
add
pop
dec
shr
or
jle
call
fdivl
sbb
cmp
mov
and
aas
cmp
mov
sub
es
and
and
rcr
cwtl
sahf
mov
jp
inc
iret
dec
sub
sub
hlt
dec
inc
cs
int3
jg
ljmp
cmp
adc
cld
or
xor
daa
scas
clc
mov
fidivl
push
sub
das
mov
xchg
fmul
and
pop
inc
inc
cwtl
rcll
cmp
push
jecxz
mov
hlt
fimuls
push
sbb
jmp
jo
dec
lret
call
jmp
leave
and
pop
mov
nop
ss
adc
xchg
add
sub
cmp
mov
js
enter
jnp
fadds
psrld
adc
inc
or
icebp
mov
fcoms
or
out
insb
pop
ret
lahf
mov
ret
adc
ficompl
gs
adc
inc
lods
adc
inc
mov
scas
inc
sti
add
mov
lods
inc
mov
and
mov
pop
xor
fldt
in
imul
out
pop
push
dec
retw
into
stos
xor
mov
test
dec
test
imul
adc
pop
sub
sbb
and
faddl
inc
xchg
aam
mov
repz
pushf
les
je
jle
xchg
loop
xlat
mov
push
adc
pop
in
cwtl
dec
push
add
adc
mov
fisttps
imul
cwtl
push
lcall
mov
faddl
cmpsl
pop
sub
ret
rcrb
mov
movsl
cld
pop
mov
les
idivb
mov
mov
stos
in
fwait
out
das
adc
cmp
inc
push
mov
inc
mov
and
fwait
rclb
mov
mov
mov
imul
and
pop
flds
test
inc
inc
sub
cwtl
sbb
scas
cmc
jno
in
std
xchg
xor
icebp
mov
loopne
int
jb
sbb
sbb
mov
fdiv
push
mov
test
xchg
cmp
mov
test
jbe
jnp
dec
xchg
das
jnp
dec
pop
data16
repz
test
in
cwtl
lea
imul
jb
mov
popa
bnd
xchg
rclb
xchg
cwtl
mov
xchg
sub
mov
mov
clc
lcall
ljmp
repz
add
sbb
out
pop
add
pop
stos
pop
pusha
cs
sbb
dec
popf
push
iret
adc
inc
jne
inc
lahf
outsb
loop
jg
fimull
inc
popf
clc
inc
push
adc
mov
nop
addb
ds
lods
mov
xchg
mov
sub
movsl
insl
and
enter
int
sub
mov
ret
ljmp
mov
cld
cld
iret
jp
push
xor
loope
adc
pop
jl
pop
rcr
mov
or
sub
lods
lods
adc
cmp
and
daa
lret
sub
inc
leave
fiadds
test
fcomi
jo
jno
pushf
sub
jo
jg
push
and
sub
cmpsl
dec
pop
push
push
das
or
movsl
les
jo
pop
cmp
pop
or
sub
fsubrs
and
popa
push
shll
mov
in
dec
lahf
push
iret
push
enter
les
rep
std
movsb
call
sahf
fsubr
fs
add
adc
pop
lret
bound
mov
cmpsb
or
pop
pop
adc
xchg
popf
mov
fimuls
fdivrs
fstps
mov
into
or
out
in
jnp
ja
aad
mov
imul
cld
push
cwtl
out
xchg
mov
xchg
pop
xchg
fnstcw
test
or
jnp
daa
mov
fbld
data16
daa
call
call
push
adc
push
push
loope
repnz
dec
or
xor
stc
mov
sbbl
lock
sub
fcmovnbe
out
pop
sub
or
inc
mov
xor
cmp
and
cld
push
leave
cmp
test
push
shrb
repz
dec
inc
dec
cld
mov
push
stos
sbb
test
adc
ljmp
or
in
sub
push
add
or
scas
cmp
mov
mov
cmp
lods
jno
cli
xor
push
fimull
imul
pop
inc
dec
jg
into
dec
push
notb
jb
push
jg
dec
xchg
ja
dec
test
js
aaa
mov
push
repnz
mov
xchg
or
sahf
in
and
mov
outsl
fimuls
lret
into
adc
cmp
jmp
push
jle
loop
das
scas
aam
pop
shll
jns
sub
mov
roll
sbb
mov
cmp
fdivrs
in
pop
jl
bnd
int
in
sbb
add
insb
xchg
or
and
jge
jnp
cmp
adc
cmc
es
or
fiaddl
cmp
aaa
mov
mov
push
gs
loop
jnp
sub
jle
fs
mov
imul
push
in
out
push
loopne
inc
lods
shll
addr16
cmp
mov
or
mov
test
inc
cmpl
and
stos
cs
insl
aam
jl
jnp
xchg
pop
enter
aas
inc
inc
push
and
pop
icebp
scas
jg
into
inc
and
loopne
pop
gs
push
sub
ja
and
and
out
push
fdivrl
sub
jbe
or
stos
push
push
pop
leave
adcb
xchg
ja
mov
mov
shll
test
test
xchg
sarl
sbb
stc
test
pusha
xchg
js
or
addr16
addr16
and
inc
and
pushf
xor
xchg
or
add
ss
xchg
ljmp
scas
mov
mov
into
cmp
adc
push
loopne
mov
pop
daa
adc
push
into
ffree
xor
loope
mov
xor
aas
jge
mov
mov
push
push
aas
bound
lcall
push
cwtl
ss
dec
xchg
aas
ret
or
cmp
jb
jae
push
hlt
aas
mov
mov
jecxz
and
in
cmp
push
movsl
out
dec
push
not
pop
push
jge
jle
outsb
hlt
dec
jl
jp
mov
mov
or
lret
xor
jmp
xchg
gs
or
xorb
fldenv
repnz
pop
xor
iret
xchg
insl
xor
lods
cmp
mov
jbe
jae
icebp
dec
fdivl
add
pop
ss
mov
mov
out
dec
movsl
add
outsb
lcall
fistl
dec
add
movsl
sub
mov
into
xor
mov
mov
loope
jg
bound
xchg
pop
movsb
dec
sbb
mov
push
lahf
sub
fisubs
push
insl
clc
lret
lahf
stc
shrl
jo
pop
cmp
popf
ja
data16
call
fidivl
xchg
ljmp
mov
xchg
cs
fdivrs
daa
filds
scas
pop
inc
dec
sub
ficomps
dec
mov
scas
xchg
lret
xchg
inc
sub
jle
icebp
pop
jge
jmp
adc
mov
xchg
fs
loope
fists
fstpt
xchg
jo
xlat
lock
inc
xor
mov
xchg
jl
cmp
xor
sub
mov
push
sarb
sbb
and
es
dec
mov
mov
pushl
ja
shlb
stos
xlat
xor
lcall
adc
xor
pop
push
cmc
orl
icebp
pop
repnz
aaa
cmp
popf
pop
push
call
push
bound
shlb
shll
lds
xor
insl
stos
sub
outsl
xor
pop
bound
in
movsl
pusha
sbb
sbb
mov
cltd
adc
andl
mov
jl
cmp
aaa
mov
mov
and
cmp
push
push
dec
sbb
ds
cwtl
mov
mov
jbe
add
cmc
mov
jl
cltd
mov
lahf
imul
sub
lret
sub
insb
test
lret
jae
mov
mov
mov
sub
jecxz
xchg
and
push
pop
adc
pushf
xlat
add
in
push
xchg
mov
push
enter
stc
inc
cld
lock
imul
xchg
imull
and
leave
stos
fwait
loope
out
mov
mov
add
cltd
imul
xchg
test
sub
jmp
stc
scas
sub
daa
insl
xor
lods
add
stos
adc
push
push
jp
xchg
out
std
iret
sbb
cmc
aaa
aas
cld
mov
repz
pusha
jno
test
add
push
mov
ficoms
push
and
sbb
mov
clts
xchg
test
cmpsb
mov
fbstp
add
mov
ret
cmp
sbb
lret
lods
int3
or
cmpsl
pusha
outsb
fprem
xor
shl
loop
push
pop
into
imul
pop
jae
mov
mov
jp
pop
dec
leave
int
mov
daa
add
test
div
into
cmpsb
je
dec
adc
int3
cmp
fcoms
test
sub
sbb
lods
jnp
sbb
xchg
cmp
cmp
data16
data16
inc
mov
sbb
nop
incb
sbb
mov
or
test
mov
cmpsl
or
xor
and
dec
in
jle
mov
imul
in
sub
inc
ljmp
jge
lea
lcall
test
or
std
add
mov
or
and
test
lods
mov
xor
shl
and
imul
std
push
push
popf
cli
cltd
ljmp
les
ds
mov
repz
outsb
jmp
or
mov
lcall
mov
aaa
push
aam
pop
ds
or
dec
inc
sbbb
in
dec
mov
push
mov
and
out
xlat
frstor
jmp
inc
rcr
shlb
push
dec
jae
inc
es
les
cmpsl
xor
mov
mov
push
sbb
pop
wrmsr
jae
mov
sbb
xor
xchg
mov
ss
repz
fistps
push
cmp
lret
imul
repz
lret
idivb
loop
lock
fwait
mov
or
js
pop
clc
adc
jl
loope
lret
fiaddl
push
iret
mov
ds
enter
cmp
loope
and
repz
enter
shll
outsl
clc
add
inc
inc
push
inc
ljmp
jne
pusha
cmp
inc
inc
sub
mov
fs
xchg
fwait
inc
adc
popa
les
xor
mov
leave
mov
clc
das
and
rcr
pop
mov
pushf
push
fcmove
push
stc
je
cmp
sbb
stos
rolb
popa
mov
out
sbb
loopne
mov
mov
pop
mov
xchg
jae
imul
in
rep
adc
aad
jo
pop
cmpsl
inc
insl
in
lock
and
cli
dec
push
imul
jmp
fnstsw
jle
xor
pop
imul
or
in
into
nop
movsl
aam
xchg
inc
xchg
xor
push
mov
push
ja
test
pop
push
in
cmp
popf
mov
push
scas
lret
dec
jne
xor
sub
pop
and
cmp
shrb
push
aas
sub
jae
insl
jns
cli
jle
mov
loop
push
enter
and
cmpsl
out
push
pop
arpl
fsub
pop
push
cwtl
cmpsl
aad
pop
dec
xchg
fadd
adc
cmp
pop
rclb
dec
imul
pop
pop
clc
pop
xor
jecxz
fists
jns
lret
insl
fiadds
xchg
and
mov
dec
jo
xor
adc
imul
jmp
jge
in
pop
sahf
mov
adc
jb
or
out
push
imul
or
dec
fdivrs
cmp
js
loope
mov
fwait
and
outsl
push
push
lea
sahf
notb
jnp
dec
xchg
inc
ja
adc
and
dec
sub
xor
addb
mov
push
inc
aam
scas
push
or
adc
cmpl
xor
ficoms
mov
int3
xor
insb
and
dec
dec
pop
pop
pop
imul
cmc
in
ljmp
js
in
pusha
jecxz
aaa
pushf
adc
mov
sbb
outsb
push
je
push
enter
mov
out
inc
les
mov
jae
pushf
xlat
daa
sub
sbb
inc
sti
cmp
xor
subl
icebp
ljmp
ja
bound
imul
cmpsb
add
sahf
cmp
cmp
sbb
sub
cmp
adc
nop
mov
mov
rorb
push
sbb
jns
sub
mov
imul
test
in
jbe
lods
jno
lcall
lcall
sbb
lahf
sbb
out
jo
dec
popa
or
stos
sub
mov
enter
sub
fcmovu
mov
xchg
out
int3
or
cmp
mov
imul
es
outsb
dec
pop
divb
out
scas
cmc
in
bound
mov
push
push
stos
add
popf
pop
sub
pop
sub
roll
mov
push
sub
sbb
and
iret
xchg
jns
roll
leave
jns
ljmp
sahf
dec
repnz
sbb
es
cmc
adc
setbe
insl
or
sbb
mov
dec
sbb
push
add
les
mov
mov
stos
sbb
sti
outsb
aad
cs
data16
xchg
jmp
jle
xchg
aas
mov
aaa
scas
in
push
lcall
inc
rclb
les
popa
jg
int
addr16
jle
jecxz
push
cmc
or
es
mov
xchg
nop
loop
pop
pop
mov
sti
sub
sbb
aad
pop
pop
pop
dec
jmp
pop
jb
dec
push
ret
add
leave
imul
jl
adc
testl
addr16
adc
mov
mov
lea
push
movsl
mov
rcl
pop
call
sbbl
arpl
lahf
shlb
pop
jg
inc
jb
lods
inc
idivb
dec
or
iret
loopne
pop
out
pop
lret
xchg
push
mov
pop
mov
pop
sbb
sub
lds
cmpb
cmp
ficoml
cmp
fsubs
mov
fsubrp
pop
jmp
xor
jg
or
icebp
adc
shl
sub
in
stc
lods
call
mov
sahf
aas
out
and
dec
adc
dec
or
out
mov
loope
mov
aas
mov
pop
lds
lods
dec
mov
lret
mov
sub
push
push
mov
push
sbb
pop
jns
mov
pop
xchg
xadd
jb
stc
jb
test
and
mov
je
stos
sub
in
sub
mov
jmp
xchg
in
adc
loope
mov
movsl
loop
out
mov
push
cmpsb
or
sub
bnd
sbb
dec
mov
inc
xchg
dec
pop
push
xor
cmp
cwtl
push
add
add
ja
enter
push
pop
aad
xchg
js
cmpsb
or
lcall
imul
add
mov
xorl
mov
fcmovnb
sbb
push
add
inc
shlb
sti
les
lods
int
jbe
xor
fdivr
orl
in
lahf
insb
je
lock
js
xor
sub
aas
leave
cmp
cwtl
xor
nop
sub
cmp
and
stos
or
pop
test
dec
pop
or
int3
and
pop
outsl
push
mov
jnp
dec
sub
icebp
dec
rolb
clc
mov
and
shr
dec
mov
xchg
stos
adc
call
ds
iret
scas
mov
mov
iret
sbb
xor
sub
mov
movsl
aam
fmulp
cmp
int3
xlat
cmp
xchg
call
les
inc
pop
mov
cmpsb
push
pop
jno
xor
out
cmp
cmc
cltd
add
jae
and
push
nop
mov
jo
mov
mov
cmp
mov
and
ret
loop
pop
cs
push
or
jl
lods
dec
jmp
imul
and
jno
cmpsl
outsl
popa
fnstenv
ret
push
sub
clc
out
push
pushf
mov
mov
bound
shrl
jns,pt
enter
xlat
cmp
shll
mov
pop
mulb
hlt
or
ljmp
dec
shlb
notb
jnp
add
arpl
jo
pusha
ljmp
sub
inc
mov
xchg
insl
sbb
and
or
mov
cmp
fdiv
fldenv
repnz
xchg
std
aam
pop
lahf
lret
loopne
mov
jns
stc
out
pop
fs
idivb
push
xchg
adc
cli
cmp
pushf
cltd
pop
sbb
xchg
pop
in
iret
sbb
xchg
ljmp
mov
fidivrl
stos
pop
dec
mov
lods
jg
xchg
and
adc
add
pop
pop
mov
pushf
fcmove
cld
push
xchg
cmp
lret
push
loopne
iret
imul
loope
call
pop
add
ret
lret
and
mov
mov
mov
mov
fcoms
sub
nop
mov
and
iret
fsubrp
in
cwtl
pop
aas
jns
repnz
outsb
nop
fucomi
adc
jo
push
cld
push
leave
cld
fs
out
repnz
callw
orl
call
pop
pop
fldcw
push
cwtl
and
stos
stos
adcb
dec
mov
mov
xchg
mov
xor
ljmp
clc
pop
and
inc
and
addr16
jmp
iret
jmp
icebp
int3
dec
testl
jne
jl
mov
arpl
pop
xchg
lcall
sub
test
xchg
cli
or
sub
loope
mov
mov
mov
dec
inc
sub
cltd
mov
into
in
in
jae
push
inc
sarb
jp
push
popa
jbe
test
jae
loope
mov
add
sbb
cs
or
mov
mov
dec
push
inc
movsl
ss
pop
jns
sub
or
repz
rcll
push
lahf
xor
dec
in
mov
cmp
inc
iret
pop
push
push
ss
add
jno
xorl
aaa
insl
cwtl
out
and
pop
out
xor
das
cmp
push
xor
xor
dec
imul
mov
cmc
pop
xchg
dec
loop
out
or
jmp
lods
out
push
pop
dec
sbb
jmp
or
je
sbb
sbb
jg
outsl
xchg
mov
jne
xor
mov
mov
lea
adc
fbstp
sbb
repnz
mov
movsb
outsb
pop
jp
insl
pop
push
into
xor
int
mov
add
cmp
jp
inc
stc
mov
jg
jle
test
jo
ja
pusha
push
push
sbb
xor
repnz
xor
dec
add
mov
outsl
jecxz
cmp
pop
rclb
sub
cmpsl
push
ret
mov
pop
adc
sbb
jns
jmp
test
jle
lock
push
adc
mov
std
hlt
gs
pop
push
in
out
pop
lods
pop
xor
dec
daa
mov
jbe
pop
fisttpll
fnstenv
lods
sub
sbb
repz
addr16
pop
dec
sbb
shr
push
xchg
jne
in
lcall
js
lret
mov
or
xor
sub
ds
out
adc
fadds
mov
mov
rcll
or
jle
jno
cmp
push
inc
push
push
jecxz
call
aad
call
cmpsb
loop
dec
fildll
or
push
insl
stc
shll
imul
pop
mov
or
push
or
lret
mov
imul
cwtl
inc
pop
inc
pop
arpl
cmpsl
lock
mov
out
fwait
popa
adc
xor
dec
fldt
std
push
mov
shl
int
mov
or
sbb
xor
xor
xor
add
in
inc
icebp
inc
in
sahf
jae
inc
sbb
cmpsb
jne
cmpsl
popf
add
mov
push
pusha
orl
mov
lods
jo
loopne
arpl
fwait
sbb
lret
push
sbb
adc
mov
hlt
hlt
mov
inc
add
adc
xchg
stc
jl
jo
xchg
aam
arpl
push
int
mov
xor
push
or
test
mov
cmp
inc
into
inc
in
xor
push
mov
pop
ficoml
ret
push
out
dec
subl
iret
lret
pop
neg
cmp
mov
inc
jge
add
and
dec
mov
xorl
adc
mov
push
fdivr
aas
test
in
addr16
dec
movsb
and
fldl
inc
pop
pop
out
mov
push
sub
mov
fsubs
and
fisubrl
add
jmp
sbb
hlt
sbbb
out
cwtl
dec
xor
xchg
xchg
int3
and
adc
loop
mov
push
add
call
sub
push
stos
fsubs
les
bound
pop
pop
cmp
ret
and
fcmovne
stc
rcl
and
adc
dec
divb
mov
mov
ljmp
adc
add
inc
cs
xchg
jnp
add
loopne
cmp
inc
call
js
mov
sarb
aam
repz
push
jg
push
push
sar
shl
xlat
cld
or
mov
pop
jle
imul
adc
adc
jae
sub
subb
pop
ja
push
xor
push
mov
cmp
mov
mov
fdivl
cmp
xchg
cmpsl
outsl
pop
ret
insl
dec
xchg
pop
push
mov
ror
aad
std
bswap
clc
xchg
loopne
sbb
aas
hlt
mov
outsb
cltd
arpl
pop
pop
popf
imul
aam
lahf
fidivrs
lcall
jle
ds
jne
repnz
jbe
inc
pop
aaa
adc
sahf
insl
adc
sbb
les
xchg
jl
fs
pop
mov
mov
add
daa
jl
int
adc
inc
mov
scas
jae
roll
ficoml
sbb
mov
add
fistpl
es
xor
flds
das
mov
sbb
rol
and
jo
xchg
cmp
pop
pop
push
sti
out
pop
lahf
jecxz
jecxz
inc
push
loope
repnz
jo
lds
je
cmp
dec
cmp
mov
lea
adc
xor
add
cmp
xor
sub
mov
jo
mov
outsb
dec
imul
dec
fnstcw
incl
lds
repz
pop
out
fistps
push
push
sti
loope
jo
xchg
and
gs
xchg
sbb
push
cmp
xor
dec
outsb
in
cmpb
cmc
mov
add
and
adc
shrl
pop
xor
mov
cs
push
xchg
pop
outsl
push
and
fbld
dec
jecxz
xor
inc
lea
cld
adc
pusha
in
cltd
data16
xchg
sbb
jecxz
push
jno
pushf
cld
ss
mov
xor
mov
lea
cmp
mov
fwait
mov
pop
scas
mov
test
pop
pop
ss
stos
shl
ret
jns
push
pop
stos
aam
sub
ja
leave
jmp
cltd
outsl
cmp
pop
xchg
xchg
shll
outsl
pushf
aam
call
push
jge
stos
jo
add
push
sysexit
stos
paddsw
movsl
movsl
jecxz
das
aaa
cmp
stos
stos
and
and
inc
xor
xlat
cwtl
mov
push
stc
shlb
inc
add
pop
xchg
inc
inc
into
mov
jns
icebp
repnz
jmp
adc
mov
clc
push
xchg
mov
sbb
push
jg
pop
push
mov
and
mov
pop
pop
insb
stos
mov
fcompl
lock
pop
sti
jle
das
repnz
pop
icebp
lds
inc
jnp
dec
inc
push
sub
mov
adc
push
mov
sbb
adc
into
or
add
ret
cld
andb
add
cltd
and
popf
mov
fidivl
fs
in
mov
imul
jbe
and
pop
cmpsb
jg
pop
repnz
jo
push
stc
cli
test
ret
mov
and
gs
and
insb
adc
add
hlt
or
lahf
jae
sbb
pop
mov
lahf
lea
sub
or
xor
sub
mov
or
pushf
addb
sub
mov
pop
and
stos
push
push
movb
mov
inc
jo
jecxz
jno
mov
bound
or
inc
popf
loop
in
addr16
loopne
nop
xchg
dec
push
dec
mov
pop
sti
pop
mov
sub
fsubl
xor
pop
sub
test
xlat
addb
aas
dec
push
decb
lods
in
lea
mov
cmc
rcll
pusha
out
idiv
lods
das
jmp
loopne
data16
inc
jo
popl
add
cmp
out
test
xor
sub
mov
xlat
inc
sub
mov
pusha
out
nop
loopne
aad
xchg
pop
push
leave
adc
dec
inc
cmpsb
cli
lds
mov
repz
shr
mov
or
or
mov
xchg
sbb
adc
es
sbb
in
mov
xor
mov
and
xchg
add
and
mov
sti
test
inc
int3
push
jbe
sar
movsl
jno
shrl
stc
and
pop
es
inc
dec
lcall
test
adc
clc
fwait
cmp
mov
mov
in
pop
xlat
mov
dec
push
xchg
push
ret
mov
xlat
fcoml
inc
dec
or
loope
cmc
ret
push
out
xor
mov
popa
sarb
xchg
sbb
cmc
jmp
int3
mov
dec
shrb
jne
fcmovb
sahf
mov
ljmp
jno
dec
stos
push
das
mov
movsb
sbb
inc
icebp
push
rcrb
jae
shll
add
popf
into
loopne
addl
test
xchg
adc
or
test
pop
push
mov
or
sub
cli
ficomps
sub
test
add
aas
push
aad
ret
shll
xor
loop
xor
inc
icebp
pop
sbb
divl
sub
push
jns
or
xchg
sbb
fstpl
cli
or
sbbl
xor
mov
push
dec
das
stos
push
jmp
popa
fcompl
sub
rcr
mov
and
shlb
jns
jb
push
ss
xorl
jecxz
jge
mull
subl
cltd
mov
xchg
inc
pop
test
mov
fistpll
pop
data16
mov
aam
daa
sar
cmpsl
inc
lret
popa
pop
sar
xorb
dec
inc
pop
scas
test
imul
lahf
js
imul
mov
in
xchg
sbb
xchg
push
in
xlat
sbb
dec
stos
aaa
and
mov
insb
mov
int3
jge
sub
xor
popa
sub
push
lret
push
lods
cld
cmpl
adc
mov
dec
sbb
lcall
repz
rcl
call
stos
daa
out
scas
cmpsb
push
cmpsl
push
cmp
xchg
into
push
mov
add
inc
xor
jbe
mov
pop
cwtl
es
stc
sub
loopne
inc
fildll
rcl
dec
mov
pop
pop
ror
or
or
mul
xchg
dec
in
lock
adc
pop
outsl
xchg
jg
fidivrl
leave
and
shll
and
int
mov
scas
add
out
in
pop
es
mov
xor
pusha
in
inc
fisttpl
dec
out
gs
dec
sbb
mov
cli
cmp
ja
mov
sbb
lcall
loop
rcrb
dec
or
xchg
adc
xor
repnz
lcall
repnz
test
cmpsb
fsub
loopne
not
ror
push
mov
inc
std
clc
mov
insb
fistps
lods
sub
es
icebp
les
and
mov
pop
or
lahf
mov
addl
mov
xor
cltd
mov
push
xchg
mov
and
ret
pop
sub
push
imul
insl
add
out
jo
jp
mov
xchg
std
lock
repz
xchg
clc
mov
push
nop
jecxz
adc
fwait
xchg
push
xor
sbb
and
dec
xchg
inc
mov
xor
dec
int3
xor
faddl
sbb
jl
pusha
fistpl
pop
popf
pop
push
xlat
push
inc
int3
leave
dec
jge
inc
inc
std
mov
pusha
icebp
test
cwtl
inc
jae
dec
hlt
insl
punpcklbw
popa
or
mov
pop
pop
pop
fildll
cmp
cmc
addl
pop
sbb
cmp
xchg
jo
es
push
rol
push
cmpsb
rcr
incb
dec
or
sti
and
jb
test
mov
jl
out
jecxz
mov
xlat
imul
sub
xchg
fadd
cmpb
xchg
add
mov
out
imul
mov
stos
and
and
dec
dec
ret
clc
popf
and
pushf
mov
sbb
xchg
scas
or
sub
das
call
mov
jl
call
insl
push
mov
bound
or
ljmp
add
push
mov
pop
jne
ja
popa
pop
mov
sub
jp
mov
jne
jp
xchg
cmp
sub
enter
testl
cmp
fs
out
xlat
adc
mov
mov
xchg
mov
pushf
cs
jno
shlb
stc
dec
enter
dec
inc
lret
jmp
push
ret
ja
std
jnp
leave
ja
cmpsb
ficomps
push
outsl
cmpsl
cmp
bndstx
int3
mov
mov
add
shl
xor
mov
lods
pop
cs
icebp
pushf
in
rorb
test
push
rolb
fxch
je
outsl
rorb
push
dec
out
sub
ret
pop
hlt
insl
addr16
negb
ljmp
les
in
adc
xchg
lahf
push
shrb
mov
mov
and
out
sub
sub
icebp
enter
daa
pop
push
push
fisubs
lret
inc
pusha
outsb
lds
aad
in
xor
jbe
mov
imul
imul
repz
mov
add
jl
and
test
xchg
aaa
jae
or
jle
jne
insl
inc
push
push
jecxz
insl
fisubl
adc
scas
sub
push
adc
dec
dec
lods
ffree
daa
icebp
aad
pop
jmp
ja
xchg
shrb
sbb
xor
push
mov
in
out
loop
xchg
pop
and
ljmp
push
mov
xor
aas
cmp
ss
and
data16
add
les
xchg
xchg
and
lret
inc
or
leave
mov
int3
out
pop
add
jno
jbe
js
cmpsl
jmp
mov
mov
adc
adc
push
or
fcmovu
mov
les
mov
sub
aaa
push
jp
cmpsb
fmuls
fcompl
xlat
movsb
fstp
adc
rolb
jecxz
jae
je
inc
cld
mov
notb
mov
fs
add
out
insl
pop
push
push
aaa
fldt
loopne
push
xchg
mov
cmp
movsl
push
pop
movsb
mov
inc
push
test
inc
cmpsl
ljmp
jns
out
aad
sub
daa
stos
xchg
jnp
mov
frstor
iret
add
mov
jl
pushl
frstor
jno
and
imul
out
jb
stos
fwait
sub
add
add
adc
cmpb
mov
mov
testl
cld
lods
jbe
filds
pop
pushl
int3
cli
call
test
in
and
xor
xchg
or
in
push
pop
adc
or
push
enter
cmp
imul
inc
fisttpll
insl
adc
adc
pop
fdivs
iret
add
dec
mov
rcrb
mov
pop
add
and
inc
jo
pop
idivl
imul
imull
mov
mov
or
adcl
and
addr16
cmpl
outsl
mull
sub
dec
or
and
fstpt
subl
ds
ja
mov
enter
data16
inc
sbb
js
out
ret
loopne
jo
add
mov
out
mov
loop
pop
lcall
push
into
xchg
cwtl
mov
pop
popa
mov
pop
pop
ds
rcll
sti
andb
fisttps
jge
fmul
ss
lret
js
inc
and
out
leave
add
jb
adc
adc
sub
push
xchg
test
add
cmp
mov
js
xor
sub
mov
mov
loop
mov
xlat
and
or
and
push
mov
pop
dec
fstpt
push
dec
mov
lods
dec
dec
inc
cmp
push
inc
sbb
loop
cld
arpl
pop
xor
sub
sub
std
sub
jnp
sahf
ds
icebp
and
mov
jno
mov
sbb
pop
mov
xlat
pop
xor
sub
fistpll
ja
out
jno
pop
cmp
pop
and
iret
inc
es
imul
popa
lods
repz
jecxz
imul
inc
push
add
daa
lahf
hlt
and
add
mov
xchg
inc
fstpl
ret
mov
fwait
movsb
mov
cltd
pushf
xor
rcrl
repz
int3
xor
leave
movsl
adc
mov
je
popa
out
insb
pop
insb
and
jmp
xchg
fiaddl
sbb
test
cmp
orb
in
sub
loope
dec
and
jno
push
stos
aad
pop
lock
sbb
push
jb
inc
jg
add
les
aaa
out
pop
cmpsb
loopne
das
add
jb
imul
repnz
jb
into
or
or
mov
xchg
push
into
mov
aas
ja
shlb
ficomps
and
dec
mov
aaa
loope
dec
sbb
jae
addb
iret
adc
push
loope
ss
jecxz
dec
or
mov
xchg
add
shrl
mov
jns
mov
mov
push
cld
icebp
test
push
dec
imul
in
scas
roll
rorb
ror
jl
mov
mov
addl
lcall
lahf
in
mov
dec
adc
ret
inc
or
sti
addb
cmp
imul
in
mov
pusha
sub
in
and
movsl
and
push
or
sub
xor
mov
xchg
jge
scas
testb
xchg
pop
arpl
fucom
popf
push
cwtl
push
dec
sbb
ret
or
mov
clc
add
xchg
icebp
cmp
mov
ss
sub
cmp
sbb
pushf
pop
push
rorb
pop
and
flds
sbb
stos
bound
dec
out
dec
mov
stos
popa
push
repz
arpl
bound
mov
sub
mov
rorl
inc
movsl
add
jmp
push
ss
mov
mov
hlt
xor
push
fcomi
bound
ljmp
xchg
or
shr
shr
dec
mov
push
ja
pop
das
loopne
xchg
push
in
fcoml
adc
pusha
add
or
mov
push
cmp
aaa
xor
incb
fcoms
jmp
ffreep
insl
jg
aaa
lods
fcompl
push
adc
rorb
jle
shl
pop
gs
mov
jecxz
ret
test
subl
cmp
cmpb
loope
xor
sub
movsw
inc
pop
imul
or
in
mov
pop
out
jns
in
cmp
and
jge
jno
lods
rcrb
dec
call
in
sub
sti
out
jae
pop
push
in
add
push
mov
cmp
subb
xor
sti
inc
jl
fnstsw
inc
pop
fdivl
adc
rcr
dec
repnz
dec
push
inc
push
mov
jno
inc
sbb
je
outsl
xchg
xchg
add
outsb
out
cmp
xchg
pop
cld
orb
adc
movsb
or
push
fadds
add
cmc
cmpsb
test
mov
cmp
aaa
movsb
cmpsl
ret
fcomps
fucomip
out
outsl
arpl
adc
inc
into
sbb
into
inc
adc
inc
psubsw
jae
jb
out
xchg
sub
in
imul
jecxz
ret
fwait
lock
or
sahf
rcll
push
clts
push
add
cmpl
push
mov
mov
outsl
sub
fsubs
daa
push
fmuls
adc
xor
cmc
cmp
pushf
in
jecxz
adc
jns
cmp
jmp
xchg
ljmp
data16
insl
lahf
nop
out
adc
hlt
mov
filds
out
test
inc
and
into
or
cmp
inc
add
lret
inc
xor
cli
sti
vmovupd
sahf
jg
cmp
xchg
call
pusha
call
popa
mul
or
push
push
or
and
jl
les
loopne
scas
pop
and
cs
sub
sub
jle
rorb
int
in
push
inc
cltd
inc
cmp
inc
movsb
gs
cld
jne
adc
call
jmp
jmp
in
jecxz
dec
xchg
mov
or
ret
mov
inc
mov
xor
sbb
flds
push
das
inc
pop
lret
fdivrs
push
or
rcll
jp
and
lcall
inc
mov
out
or
pop
lea
mov
adc
xor
aas
or
sub
push
mov
leave
or
in
bound
ss
push
and
int3
pop
cmp
mov
push
ret
jne
push
dec
loopne
or
jb
dec
iret
push
xlat
mull
adc
test
mov
in
push
jecxz
push
mov
mov
or
push
rclb
and
and
mov
enter
int
sub
pop
mov
inc
pop
pop
dec
lods
je
rclb
xlat
push
dec
jne
iret
or
jno,pn
lahf
cmp
cli
in
je
imul
gs
sub
cmpsb
xchg
movsl
daa
adc
mov
stos
aam
xchg
dec
fcompl
xchg
lea
sbb
leave
mov
mov
fs
xor
cltd
ficomps
sbb
enter
stos
xchg
mov
jge
jne
ljmp
repnz
add
nop
xchg
push
rcr
or
xor
cmp
mov
mov
push
mov
les
pop
rorb
shrb
mov
loop
mov
inc
sti
cmp
or
jns
push
pop
test
add
and
stc
jns
sub
push
dec
cltd
mov
jae
xchg
movb
push
shll
add
mov
xor
in
mul
ja
je
idivl
popa
push
pop
inc
inc
stos
sbb
filds
inc
push
inc
ljmp
dec
add
je
stos
mov
andb
add
call
shlb
mov
das
lret
sahf
mov
pop
inc
inc
or
stc
mov
xor
aas
and
jae
sub
stos
lods
les
xchg
and
mov
add
arpl
add
iret
fsubrl
lahf
sub
sti
shrb
ret
mov
and
mov
jp
add
push
mov
xor
stc
arpl
mov
je
das
sbb
and
fsubrs
pop
push
sub
dec
adc
shl
nop
sub
sarb
imulb
adc
pusha
add
mov
xchg
and
or
mov
add
popf
mov
movsl
mov
pop
cmc
ficoms
mov
into
mov
ret
inc
stos
aam
mov
inc
test
out
hlt
sbb
jbe
test
in
cmp
sbb
lcall
cmp
cmp
adc
jb
and
or
in
cmp
mov
sbb
clc
xchg
lods
sbb
cmpb
ret
push
clc
add
out
jg
outsl
jne
jo
and
fildll
push
adc
add
in
test
push
inc
mov
mov
xor
fldl
aam
es
sub
ret
not
dec
dec
aam
push
rcr
loop
jle
gs
leave
ja
xchg
ja
inc
or
pop
push
popa
leave
lea
push
cltd
mov
loop
mov
or
mov
pop
adc
ljmp
sbb
cmp
mov
add
lea
mov
bound
jne
movsl
in
dec
sti
pushf
rorb
inc
int
sbb
or
out
sti
sbb
dec
out
call
inc
out
mov
data16
aas
push
es
cmpb
dec
push
sarb
add
dec
movsl
jmp
es
out
daa
xor
in
loopne
pop
jecxz
pop
sbb
push
mov
cmp
sub
push
jbe
dec
aad
fldl
fwait
roll
fs
rcrl
dec
xchg
sti
mov
das
adc
rorb
lea
dec
pop
add
pusha
cmp
adc
and
dec
scas
imul
jns
test
lret
dec
xchg
cmp
aam
inc
jecxz
movsb
cld
and
xchg
push
jmp
call
xchg
addr16
mov
out
push
iret
lahf
add
add
adc
xorl
loopne
ret
and
sub
int3
sub
cld
out
pop
fwait
xlat
mov
movsb
xlat
pop
push
hlt
mov
push
pop
loop
jle
inc
lcall
mov
nop
popf
inc
in
movsl
and
push
loope
imul
push
dec
icebp
mov
decb
mov
xchg
inc
cmp
cmpsb
add
and
and
mov
ficoml
mov
int3
mov
xor
shlb
je
jp
push
out
inc
std
xchg
lods
in
repz
sbb
sub
sti
call
fidivl
js
push
cmp
faddl
mov
xchg
mov
int3
ds
mov
mov
cmpsb
add
pop
push
inc
and
ror
push
sbb
jb
jg
sbb
inc
adc
mov
xchg
xor
cwtl
push
xlat
add
mov
mull
cmpsl
mov
add
mov
mov
les
xchg
fsubs
add
dec
inc
pop
ficoml
rolb
cli
dec
in
xchg
cmp
xor
imul
mov
jb
cwtl
loopne
sbb
sahf
sti
ljmp
imul
mov
xchg
lret
mov
sub
xor
pop
adc
xchg
mov
sbb
pop
pop
gs
xorb
inc
ljmp
mov
sbb
pop
stos
adc
cltd
out
test
mov
cmp
mov
insl
cmp
mov
mov
ss
lods
fst
repnz
mov
pop
dec
dec
movsb
int3
sbb
inc
aam
jae
into
mov
mov
adc
enter
pop
xor
xchg
add
push
pop
mov
addr16
pop
lock
xchg
mov
int
xlat
dec
xchg
lcall
mov
test
mov
fucom
sub
lret
aaa
pop
dec
inc
dec
pop
faddp
push
pop
rcl
inc
mov
push
mov
jg
mov
cltd
dec
aad
das
cwtl
in
xchg
mov
out
popf
movb
cmp
adc
push
inc
sarb
das
xchg
mov
ficoms
xchg
test
jg
ljmp
pop
pop
jp
sar
dec
lret
sbb
mov
loop
mov
sub
int3
std
or
data16
shlb
adc
sbb
cmpsb
or
inc
mov
in
mov
pop
pop
xor
push
fiaddl
sub
mov
cwtl
dec
push
xchg
push
aad
cmp
fadds
jno
and
sbb
outsl
repz
push
pusha
or
sbb
cmp
mov
pop
cmp
je
cs
push
xor
out
pop
xor
jnp
rolb
lods
pop
pop
ret
inc
loope
addr16
fldpi
iret
shl
clc
ja
jns
enter
ret
call
rep
push
sub
stos
rcr
adcb
cwtl
push
adc
and
push
adc
loope
xor
xchg
cmc
sub
mov
jle
jl
adc
dec
dec
add
adc
add
xlat
lock
std
je
std
insl
fcmovb
lret
loop
mov
jg
mov
scas
cmp
mov
inc
enter
addl
adc
rcr
and
pop
je
fdiv
sub
jo
push
movsl
and
int3
stos
shll
dec
jmp
dec
out
cwtl
dec
inc
xlat
dec
mov
les
ljmp
call
push
arpl
pcmpgtd
pop
popf
pop
xchg
sbb
sahf
idivl
mov
dec
adc
in
mov
mov
aaa
mov
int3
jnp
and
dec
mov
inc
lret
fldcw
int
arpl
adc
popf
ret
cld
movsl
imul
dec
lea
mov
pop
in
adc
das
cmp
leave
add
test
andl
sub
mov
arpl
fisubs
jp
mov
out
stc
out
out
xlat
inc
or
jb
push
xchg
frstor
in
daa
call
lcall
cmp
mov
mov
rorb
jns
cmp
or
push
cmpb
inc
stc
scas
ss
xor
push
sub
call
and
mov
cwtl
dec
popf
std
in
pop
jecxz
in
andb
dec
shr
mov
sbb
sarl
mov
xchg
call
loop
mov
pop
or
aaa
mov
test
cmp
mov
cs
pop
cmp
jbe
scas
mov
push
inc
and
enter
sub
push
ret
push
clc
dec
push
aaa
call
pop
stos
adc
je
push
or
jne
insb
jmp
nop
push
lret
movsb
ficoms
aam
sub
test
xor
add
fstpt
add
xor
addl
mov
sbb
adc
jbe
leave
dec
inc
mov
fistps
imul
mov
aad
xchg
adc
mov
std
sbb
std
sbb
mov
cmp
mov
stc
lds
inc
cmp
test
cltd
mov
testb
imul
xchg
pushf
inc
rolb
add
sbb
ret
imul
stc
mov
ljmp
ret
cmp
repnz
xlat
and
xchg
push
xchg
lea
inc
dec
sbb
call
mov
and
inc
and
bound
fwait
jl
jb
add
in
lock
cmp
clc
loopne
jne
pop
jb
jg
scas
jecxz
in
and
scas
or
push
pusha
xor
sarl
out
cmp
mov
stc
mov
shll
fisubs
jecxz
loopne
push
pop
lcall
push
jge
int
lock
or
nop
jl
jle
jb
testb
push
sbb
pusha
mov
fwait
lcall
jno
aad
mov
xor
scas
mov
inc
and
mov
cs
jne
mov
cmp
out
shrl
jmp
int
inc
xchg
icebp
fbstp
adc
testb
jne
cmp
cmp
outsb
xor
fwait
dec
mov
or
filds
or
cmp
or
mov
push
lods
xor
aad
mov
xor
mov
inc
mov
loope
dec
cld
filds
push
aas
divl
adc
movsb
dec
outsb
fnsave
xchg
pop
cmp
mov
xchg
xor
cmp
fbstp
hlt
dec
mov
jne
push
pushf
inc
pop
pop
call
ffree
into
push
stc
push
enter
inc
jg
hlt
pop
repnz
call
icebp
sbbb
jo
sub
pop
pusha
aam
push
movsl
aam
ds
mov
insl
jl
lret
stos
mov
roll
mov
and
and
aam
scas
xor
lret
in
xor
push
pusha
ja
cmp
and
test
std
dec
fwait
cmp
aad
mov
or
push
and
movsl
inc
pop
pop
cli
scas
addl
test
lods
mov
or
incb
outsb
jb
sub
psubusb
push
popf
push
dec
dec
inc
rcrb
ficomps
xor
cmp
out
sbb
movsl
std
xor
mov
rcrl
sti
or
outsb
out
lcall
dec
jge
sbb
mov
scas
add
stos
or
cli
and
xor
jmp
fldln2
lret
push
pop
jo
jge
loop
dec
sbb
jb
stc
mov
cwtl
ja
insl
cwtl
imul
cltd
hlt
jle
pusha
call
pop
or
mov
aad
sarb
pop
xor
sub
mov
fidivrl
lds
and
out
sub
push
mov
xlat
jp
idivl
adc
jecxz
add
add
imul
cwtl
jg
leave
scas
pop
push
sbb
push
cmpb
or
mov
add
stos
xor
sub
das
mov
add
sub
test
lret
inc
dec
std
fidivrs
addl
repnz
arpl
pushf
sub
or
pop
adc
and
mov
mov
and
scas
push
movsb
pop
xor
pop
push
jp
icebp
sub
or
cmp
outsb
shll
ficoms
jae
cmp
jb
rep
icebp
aaa
andb
jecxz
sbb
inc
sbb
pushf
sub
adc
js
xor
add
movsb
cmp
pop
cmp
inc
jns
ds
xchg
sar
sbb
nop
pop
jl
in
sub
dec
mov
int3
fldcw
dec
mov
add
ljmp
in
data16
mov
stos
adc
mov
xchg
popf
shlb
int
push
sub
cmp
mov
out
fldt
sub
int
adc
sar
aam
fcompl
inc
test
mov
push
or
dec
pop
xchg
and
je
icebp
jmp
add
xchg
sbb
fwait
fwait
adc
in
push
sti
push
mov
jmp
mov
out
xor
cmp
test
mov
fists
scas
fisttpll
fstpl
jne
testb
ret
cwtl
cs
bound
dec
sbb
sti
rep
cmc
sbb
mov
outsb
movsb
adc
pop
sahf
jne
cmp
fwait
bound
mov
lods
or
xchg
lods
subb
adc
fnstenv
cmp
aas
dec
pop
pop
pop
daa
enter
scas
push
ror
and
or
mov
in
cmp
jg
adc
shl
loope
decb
ljmp
out
xor
mov
sbb
inc
aas
adc
cld
sub
mov
imul
stos
lock
int
stos
in
test
push
adc
push
leave
cmpsb
adc
mov
leave
testb
cltd
decl
hlt
jbe
push
dec
fwait
ljmp
cmpsb
loope
pusha
pop
mov
sbb
cmp
inc
pop
pop
aas
fstps
cmp
jb
dec
aad
push
inc
into
outsb
jmp
lds
adc
imul
mov
jmp
sub
add
call
or
pusha
sub
hlt
lcall
adc
cmpsb
pop
sub
mov
xchg
or
mov
cmp
push
mov
adc
das
push
push
hlt
bound
rcll
dec
loope
or
dec
out
jl
cmp
mov
sti
mov
push
jb
outsb
scas
adc
sub
pop
adcb
or
fisttps
jnp
orb
xchg
into
ds
jmp
jbe
fstps
mov
sahf
vxorps
sbb
jle
dec
jp
clc
in
jle
insb
mov
in
jb
icebp
sbb
lret
jmp
loopne
xchg
push
loopne
mov
sbb
adc
mov
xlat
daa
xor
mov
mov
daa
popf
jbe
daa
push
mov
ficompl
push
fidivrs
push
sarb
int3
jle
ja
add
push
mov
mov
pop
jmp
jae
push
mov
or
dec
icebp
xor
pusha
rcll
shll
in
mov
push
mov
aam
and
and
pop
sbb
dec
dec
repnz
or
mov
mov
xor
sbb
xor
sbb
aam
icebp
cltd
sbb
mov
sahf
aas
mov
xchg
roll
mov
jne
push
xor
xchg
mov
test
and
lods
and
push
jmp
aaa
scas
jmp
sub
xlat
jae
dec
ja
xchg
inc
jno
push
jne
out
jb
push
pop
push
xchg
mov
inc
pop
mov
aas
xchg
scas
xchg
or
mov
push
in
cmp
mov
mov
pop
rol
pop
into
xor
cmp
pusha
dec
push
xor
xchg
mov
or
jb
jae
sti
push
stos
mov
cmp
cltd
bound
cmp
fnstsw
or
mov
andl
mov
lods
jecxz
test
mov
mov
stos
sar
loopne
and
lds
push
pop
dec
fwait
mov
dec
push
mov
and
jmp
sbb
xor
inc
jmp
mov
andb
xor
adc
or
mov
cvttps2pi
in
mov
stos
sub
xor
das
jg
je
inc
arpl
cs
imul
clc
jnp
jne
mov
cmpb
cmp
jbe
bound
sub
loopne
push
cmp
pop
popa
iret
adc
add
mov
xor
and
mov
push
aaa
jo
sarb
arpl
and
shlb
cmp
sbb
push
bound
dec
inc
xchg
test
xchg
dec
inc
add
cmp
mov
imul
test
cltd
and
push
adc
arpl
inc
fwait
or
stos
lea
pop
nop
iret
push
add
mov
cmp
stos
ds
mov
pop
sbb
pop
sbb
dec
popa
lahf
ljmp
leave
cmc
mov
cmp
mov
lock
sbb
aad
dec
push
popa
xchg
or
sbb
xchg
stos
lods
scas
adc
sub
mov
push
ds
mov
mov
cmp
movsb
outsl
xchg
mov
push
push
jmp
roll
enter
cmp
inc
cmp
mov
popa
call
xchg
stos
sbb
lods
adc
push
lahf
fisttps
nop
push
call
and
mov
mov
mov
mov
movsb
mov
fdivs
rcl
push
xchg
fs
aad
cltd
rcrl
mov
jns
jle
jg
xor
jmp
lods
mov
lds
sbb
cmp
into
jl
adc
ja
inc
fstpt
and
pop
sub
mov
push
adc
sub
js
mov
fs
pop
jmp
inc
div
xor
imul
cmp
adc
push
mov
push
in
jne
sysenter
daa
popa
jp
imul
mov
leave
mov
subb
sbb
and
pop
mov
push
hlt
mov
dec
dec
std
cmp
les
out
sti
adc
ljmp
jb
cmc
sbb
push
pusha
dec
mov
imul
xchg
pop
sub
adc
ljmp
lret
push
adc
pop
jns
xor
sub
mov
xchg
popf
cltd
jb
fcompl
aad
xor
dec
outsl
es
mov
imul
fstl
pop
push
addr16
fs
out
xor
aas
push
inc
movsl
cmp
mov
inc
jle
fimuls
push
xchg
jmp
push
add
fmuls
cmp
lea
dec
std
test
push
inc
in
repz
hlt
movb
jbe
sub
out
es
and
jmp
push
mov
int
mov
dec
sbb
scas
mov
outsb
xor
mov
xor
xchg
fwait
mov
mov
cmpsl
xchg
and
sbb
cmp
mov
aas
dec
xchg
pop
jmp
ss
inc
mov
or
popf
xorb
or
imul
icebp
mov
xchg
inc
cmpl
mov
inc
out
and
xchg
sbb
popf
movsb
or
pop
xchg
mov
adc
push
popf
or
add
xchg
mov
mov
xchg
insb
negb
out
pop
popf
inc
add
or
filds
shl
test
adc
mov
pop
jnp
repnz
sub
sub
cmp
dec
andb
mov
cmp
lahf
ja
dec
push
mov
xchg
mov
call
jo
or
imul
adc
fbstp
adc
or
add
push
jmp
sbb
mov
or
xor
pop
in
fistpll
ror
adc
aam
roll
dec
inc
pushf
jbe
mov
lcall
lret
outsl
out
jo
scas
or
in
lods
scas
orb
nop
nop
push
and
rorl
mov
xor
mov
sbb
lods
aam
arpl
jae
push
push
out
mov
xchg
add
xor
rol
shll
push
jge
push
dec
push
jne
dec
dec
dec
insb
cld
mov
in
jle
addr16
sbb
push
push
cltd
les
lret
cwtl
mov
jbe
push
rclb
mov
jl
mov
leave
pop
cwtl
pop
fistpl
lods
jg
movsb
clc
jae
es
jne
or
sti
xorb
xchg
push
push
pushf
adc
cmp
in
test
inc
dec
cltd
sbb
in
mov
cwtl
mov
pusha
sbb
insl
mov
adc
iret
sbb
cmp
dec
fsubp
rcrb
sarl
or
pop
xchg
dec
addr16
movsb
adc
mov
or
pop
lahf
mov
inc
sahf
jge
add
adc
sbb
xor
add
lea
pushf
ss
xor
cmp
mov
mov
push
add
mov
into
out
cmp
dec
dec
test
pop
clc
ret
pusha
push
test
or
subb
fisubrl
pusha
fstpl
jecxz
cli
xchg
xchg
add
out
adc
adc
sahf
and
pop
daa
das
cld
mov
arpl
aaa
rcrl
pop
movsb
repz
je
pop
imul
inc
inc
sub
dec
dec
in
outsb
out
xchg
repnz
jge
cmc
stos
xor
call
adc
and
add
mov
fldl
cmp
cwtl
xchg
outsb
add
and
fs
inc
inc
push
aas
cmp
movsb
cltd
aam
push
mov
ror
dec
sti
xchg
mov
ds
jo
in
mov
testl
mov
add
cmp
inc
add
test
mov
and
mov
mov
pop
cmp
arpl
xor
rcrb
ds
dec
ret
push
jp
jp
cli
dec
stc
aam
shll
jnp
fs
add
jae
cltd
ficoml
xchg
cmpl
scas
lret
test
push
test
mov
fadds
jge
and
imul
outsb
mov
sbb
add
sub
push
sub
pusha
sbb
lret
in
js
xchg
decl
or
xchg
sbb
sahf
xor
xchg
xor
aad
ds
xor
fdivr
dec
mov
pop
inc
jbe
loop
mov
inc
dec
xor
add
ljmp
imul
dec
loopne
mov
or
mov
adc
aad
ss
addl
mov
sub
repnz
jmp
dec
and
ret
cmp
dec
repnz
jno
int3
sar
decb
in
cmp
call
bound
outsb
lods
clc
pop
adc
xor
pushf
xor
adc
mov
test
or
test
dec
jns
fmuls
xchg
push
fdiv
aaa
dec
cmp
insl
lds
enter
add
mov
rcrb
sbb
daa
add
sub
ret
cli
ds
mov
xor
sub
lods
cmc
mov
insl
fisubrl
fistps
push
rolb
addr16
sahf
gs
cs
jns
adc
pusha
cld
imulb
ds
mov
in
mov
mov
xor
push
xchg
sub
pop
adc
lods
lea
xchg
cmp
xor
push
lods
pop
mov
xchg
sub
jbe
scas
rcr
cmp
loopne
sahf
ja
movsl
mov
clc
push
lds
adc
imul
ljmp
ljmp
js
loopne
add
dec
adc
mov
mov
pop
cmp
ds
xchg
out
pushl
xor
fstps
push
sarl
jge
sub
iret
enter
cld
mov
sub
addr16
push
out
bound
fwait
xchg
int3
jmp
popa
clc
adc
and
push
addr16
xor
mov
push
mov
sub
fnstcw
test
test
movsl
adc
fisttps
and
xchg
dec
aaa
pop
repnz
jbe
arpl
jle
popa
dec
jo
jmp
mov
adc
add
fcmove
add
push
push
lea
nop
out
test
loopne
xor
mov
jle
icebp
push
es
movsl
pop
jp
mov
push
lods
loopne
iret
mov
outsb
jns
add
jmp
int3
pop
or
andl
outsl
sbb
sarb
push
mov
mov
aaa
add
mov
cwtl
sub
mov
dec
pop
push
cmp
ror
popf
pop
cmp
cmp
mov
push
aaa
dec
push
data16
iret
sub
mov
leave
sbb
addr16
pop
out
addr16
sbb
cwtl
je
stc
or
pop
sbb
cmp
mov
pop
mov
adc
cltd
sub
fsts
sarl
push
ret
push
enter
adc
cwtl
icebp
adc
xchg
cmc
inc
test
mov
cmc
pop
pop
xchg
sahf
lds
imul
jl
cmp
cmc
aas
jg
push
das
mov
je
mov
mov
js
xlat
push
cmp
push
lret
hlt
data16
ret
sub
call
xor
sahf
mov
adcb
fwait
push
mov
mov
iret
add
cmpl
lahf
out
pop
add
outsl
je
scas
pop
loope
push
cmpsl
iret
xor
jg
dec
dec
inc
int
sahf
clc
sub
inc
jae
imul
mov
loop
sbb
in
push
cwtl
adc
or
adc
out
jl
dec
adc
or
adc
jbe
mov
and
cmp
cltd
cs
adc
je
inc
fidivs
rcll
dec
sub
cmp
inc
pop
jae
sbb
sahf
jo
jle
mul
ja
int3
sbb
xchg
mov
sbb
add
xchg
mov
add
xchg
mov
cli
add
aaa
add
shrb
mov
jmp
jmp
pop
aas
sub
inc
and
pop
in
cltd
add
dec
data16
cmp
xor
call
lea
insl
xchg
add
lret
and
jbe
mov
jno
popf
xchg
repz
adc
mov
push
loope
sub
xor
and
gs
add
int3
pop
mov
inc
clc
push
mov
cmp
mov
out
jp
ljmp
sbb
fwait
mov
shrb
mov
in
jl
movsl
pop
mov
pop
ds
mov
pop
or
lock
add
pop
int3
mov
rclb
adc
insb
lea
clc
out
xor
adc
mov
js
mov
shl
push
mov
inc
shl
xor
mov
xchg
cmpsb
adc
es
pushf
xchg
jecxz
outsl
inc
cmpsb
mov
aaa
jmp
fwait
push
shlb
aam
pop
popf
xor
mov
scas
pmulhw
inc
ds
add
clc
push
fwait
stos
jl
icebp
cmc
jmp
fistpl
aad
movsb
lea
add
enter
nop
scas
dec
mov
push
cli
mov
jno
add
lret
mov
pop
cmpsl
mov
sahf
mov
int
dec
jne
mov
fucom
jb
xchg
repz
ljmp
sbb
movsl
fwait
sbb
fistps
and
dec
or
ljmp
outsl
sub
and
dec
mov
bound
movsl
lret
sub
push
xlat
fcoms
cltd
in
pop
out
jb
ja
shrb
dec
lret
dec
mov
icebp
call
idiv
or
shll
pusha
mov
ds
or
orps
cmc
xchg
xor
lds
fldcw
outsb
pusha
sub
mov
push
out
scas
and
push
ret
and
sbb
icebp
adc
mov
jmp
enter
out
jbe
jp
imul
sub
push
je
stos
outsb
push
jae
inc
mov
xchg
cmp
dec
enter
xor
mov
jl
loopne
jecxz
inc
and
fnstsw
or
dec
ret
outsb
dec
popa
fsubrs
jae
call
out
es
in
sbb
xor
xor
pop
push
mov
sarl
fistpl
cld
inc
sbb
jmp
sub
movsl
lods
faddl
fisubs
jae
test
inc
jo
and
adc
out
dec
ss
mov
in
inc
frstor
jmp
nop
mov
stc
adc
leave
cltd
std
xor
cwtl
rclb
or
inc
and
mov
out
js
and
pop
xchg
lods
xchg
insb
movsl
in
daa
jo
pusha
pusha
add
int
and
stc
xor
mov
daa
hlt
dec
icebp
scas
jl
or
icebp
mov
out
data16
loopne
or
data16
into
out
xchg
into
test
mov
lock
push
lahf
xor
mov
xor
loope
sub
in
mov
push
adc
inc
dec
or
cltd
mov
cmp
mov
xchg
in
push
stos
imul
sahf
in
jecxz
scas
negb
sbb
cmp
cmpb
fmulp
push
sub
xor
and
pop
ret
in
pop
dec
dec
mov
sbb
iret
or
dec
sub
ret
ljmp
mov
mov
or
cmp
push
pop
dec
pop
or
imul
push
int
cwtl
in
out
fs
mov
in
xchg
es
jp
adc
mov
sub
xor
es
popa
mov
add
dec
adc
ret
push
adc
cwtl
mov
std
insl
pop
test
fcoml
dec
lods
in
pop
push
addr16
js
sub
push
mov
out
jns
je
enter
push
xorl
jge
shlb
fisubl
jl
call
or
mov
push
push
jns
lods
and
arpl
icebp
call
hlt
idivb
sbb
pop
stos
cmpsl
fs
fstl
add
or
mov
gs
test
sahf
add
out
sbb
inc
fisubl
mull
inc
repnz
xchg
ret
xlat
sbb
int3
jp
inc
arpl
pushf
mov
addb
mov
int3
xchg
sbb
mov
adc
xchg
add
pop
xor
mov
mov
push
push
mov
ret
jmp
in
inc
and
mov
inc
push
retw
sub
xchg
lcall
fwait
xchg
popl
js
mov
test
cltd
push
pop
adc
mov
mov
fsubs
xchg
leave
adc
mov
mov
sub
xchg
nop
stos
loope
das
cmp
and
inc
les
aad
jmp
sub
dec
dec
xchg
mov
jb
push
mov
inc
or
cwtl
cltd
testl
mov
lods
sub
pushf
inc
fdivr
pop
popf
shll
or
dec
nop
orl
and
cmpsl
loop
and
rcrb
mov
insl
jecxz
dec
in
adc
cmp
pusha
inc
inc
jo
outsb
sbb
sti
mov
mov
nop
sbb
push
push
adc
pop
jmp
pop
push
pop
stos
xchg
xchg
cmp
dec
mov
scas
mov
cli
sub
and
xchg
and
pushl
cmp
clc
dec
shlb
pop
clc
addr16
dec
dec
lret
lds
cld
repz
out
mov
in
insl
outsb
xlat
clc
popa
jb
xor
cwtl
jecxz
hlt
push
js
pop
or
mov
sbb
mov
ja
adc
xchg
jnp
cmp
pop
lret
add
sbb
xchg
sbb
and
jl
mov
sbb
pop
jl
xchg
jmp
adcb
cwtl
lcall
lods
cltd
mov
ficoms
popf
lea
pop
sub
data16
stos
jl
sub
dec
subb
call
mov
xorl
xor
test
cmp
sahf
inc
push
push
in
adc
loop
xchg
loope
popa
pop
cltd
sbb
stos
xchg
add
imul
enter
cmp
in
push
ss
xchg
daa
ret
movsb
rcr
mov
nop
cmp
inc
decb
pop
repz
int3
repnz
pop
icebp
pop
fdivs
popa
out
lcall
fcoms
sbb
lcall
aas
xchg
adc
rolb
lret
add
pop
mov
divps
pop
adc
cmp
mov
cmp
cmc
test
inc
or
cmpsl
sbb
pop
cmp
aam
sub
dec
dec
mov
inc
movsl
repz
dec
pop
pop
inc
jge
lret
out
stos
mov
outsl
or
pop
sub
test
popf
adc
fcoms
test
cltd
mov
test
cmpsb
mov
es
insl
push
push
aam
xchg
fst
mov
enter
cmp
and
and
out
jae
sbb
xchg
fisubrl
outsb
int3
adc
adc
outsl
ljmp
in
add
aaa
fldenv
mov
inc
mov
rcrb
push
cwtl
sub
and
and
or
int3
stc
push
call
push
lret
popl
pop
mov
enter
mov
dec
nop
inc
add
sbb
mov
xor
ds
and
popf
xchg
fs
dec
mov
pop
iret
xor
fdiv
sbb
dec
repz
test
cmp
mov
mul
inc
incb
repnz
xor
mov
push
pushf
and
mov
mov
or
fisttps
or
mov
test
fidivl
daa
jmp
mov
test
lods
fistps
dec
mov
jnp
push
push
pop
mov
gs
jle
cltd
incl
outsb
sbb
sbb
sbb
xchg
pushf
std
js
mov
jle
xchg
cmp
add
out
mov
jo
sub
fsts
fisubrs
adc
fdivrs
push
idivl
aam
sbb
mov
jne
gs
das
js
xchg
jge
cmc
mov
xor
and
mov
mov
ja
push
xlat
jbe
cmpsb
adc
jbe
in
add
mov
add
mov
jnp
pop
movsb
bound
dec
frstor
mov
pop
popa
inc
loope
ljmp
and
jne
xchg
arpl
imulb
pop
push
sbb
movb
adc
jae
or
orl
les
mov
leave
inc
mov
mov
loop
cmp
and
ret
fadds
mov
jnp
jge
cmc
data16
mov
fwait
mov
jge
xchg
sbb
test
mov
leave
fisubrl
sub
pop
cmc
cld
mov
mov
dec
mov
scas
and
out
xchg
push
fcmovnb
xor
pop
jp
dec
orps
jle
out
xchg
mov
testb
mov
xlat
sbb
adc
xchg
ret
pop
or
adc
aad
sub
xlat
out
dec
shrb
mov
movsb
mov
push
outsl
adc
shlb
sti
shl
inc
jecxz
mov
cmp
push
pusha
aad
cli
xchg
add
xor
adc
sbb
cmp
ljmp
mov
shrb
cmp
std
dec
push
scas
fldenv
ja
xor
push
sub
push
es
testb
testb
or
out
arpl
aas
into
arpl
sub
pushf
sbb
addb
scas
or
sub
push
sub
cwtl
mov
popa
mov
xchg
loop
and
lea
and
popa
cmpsb
movsl
lcall
sub
clc
mov
add
test
push
stos
cwtl
andl
stos
jmp
loop
pusha
dec
add
pushf
ret
std
addr16
dec
sahf
aas
addr16
clc
sub
sbb
pop
pushf
es
mov
fnstenv
and
dec
movsl
cli
pop
sbb
jle
xchg
or
xlat
lock
cli
bound
jge
adc
loope
adc
std
push
dec
pop
pushf
inc
sbb
cmp
push
outsl
daa
add
rorb
cs
mov
dec
mov
dec
pop
jnp
test
or
lcall
les
orb
push
pop
mov
inc
hlt
inc
inc
xlat
lret
add
inc
ja
les
xchg
mov
hlt
stos
add
inc
lret
lahf
or
sub
adc
adc
add
pushf
add
dec
mov
outsl
push
lods
mov
cmpb
inc
push
xlat
lret
fisttpl
dec
pop
push
xor
push
jp
insb
sarb
push
jmp
adc
xchg
cwtl
popf
push
pushf
push
test
push
adc
testl
add
sbb
xor
jmp
and
sub
xor
lret
jge
movsb
inc
add
pop
pop
sti
mov
test
pop
ljmp
pshufw
hlt
push
loopne
loopne
ljmp
testl
loop
stc
inc
or
dec
out
or
mov
xchg
inc
cmp
jge
xchg
lret
push
lret
movsb
inc
pop
push
dec
and
out
and
fisubs
shl
sub
mov
pushf
fwait
cmp
cmp
les
cmp
push
inc
out
cmpsb
mov
stos
cmp
sub
hlt
pop
sbb
mov
add
sbb
and
imul
xchg
or
pop
jmp
mov
int3
cmovo
push
leave
call
adc
mov
add
out
add
mov
adc
mov
xchg
ja
mov
xor
add
lods
mov
pop
pop
push
or
out
je
push
in
mov
into
int3
sbb
inc
ret
cwtl
jg
jb
icebp
sahf
push
cmc
jle
std
xchg
cmp
xor
data16
imul
int3
and
stos
xchg
sub
xor
push
shlb
cmp
das
mov
xor
arpl
test
shr
mov
jmp
mov
inc
jecxz
aas
sbb
mov
roll
rcrl
dec
push
ljmp
or
sahf
stos
mov
xchg
scas
dec
mov
add
xor
add
fnstcw
fnsave
fsubs
outsb
lods
int3
lahf
ror
xchg
adc
inc
cmp
icebp
fidivl
arpl
add
rorl
and
push
mov
jecxz
xor
cwtl
lock
imul
int
cmpsl
push
shrl
xlat
and
xor
and
sbb
mov
daa
pop
ds
xchg
xchg
cmpsb
cmp
or
in
rolb
scas
leave
movsl
mov
mov
popf
fildl
stc
test
dec
outsl
repz
xchg
mov
sbb
push
add
stos
icebp
cmp
fwait
iret
movsb
cmpsb
mov
shr
push
push
pop
mov
sub
lds
and
sbb
and
push
and
and
sbb
outsb
jle
jle
je
popf
je
adc
loope
add
mov
or
stos
cmpsl
shl
add
mov
pop
into
xchg
mov
mov
les
imul
shrb
jp
out
cmc
or
test
inc
fildll
inc
and
jg
inc
pusha
cmp
mov
mov
pop
das
lods
leave
imul
jp
push
mov
or
push
cmpsb
mov
idivl
pop
stos
cmpsl
rolb
add
notl
fld
test
sahf
std
push
int3
stc
push
ja
outsb
dec
inc
mov
sti
jp
cmpsl
or
push
call
data16
pushf
arpl
addr16
cltd
inc
cli
and
sbb
push
and
dec
js
test
rorb
pusha
dec
add
or
push
fildll
shrb
dec
lock
outsb
inc
jmp
mov
jno
add
xchg
je
jne
mov
orb
add
sbb
bound
movsl
fcmove
sbb
dec
push
insl
inc
jo
push
fildl
jo
pop
cli
and
aaa
jb
out
xchg
jns
in
outsb
fwait
popf
add
into
cmpsl
sub
shll
jle
push
aam
roll
xor
mov
jl
repnz
push
sub
adc
mov
vdivsd
lret
fdivrl
leave
sbb
or
sub
loop
shll
inc
ja
cmp
mov
ja
inc
std
mov
loop
jae
jge
adc
push
out
test
mov
pop
mov
rcrb
add
add
mov
mov
shll
and
push
mov
iret
mov
inc
int3
cmp
push
ja
and
fbstp
inc
lds
repnz
addr16
sbb
push
out
cmc
jae
rcrb
mov
jp
pop
lods
pop
push
movq
or
dec
stos
in
xor
add
fildll
ds
ss
xchg
fcoms
rcr
lds
pushf
lahf
aad
iret
mov
xchg
or
gs
out
push
xchg
mov
pop
pop
leave
xchg
lods
int
pop
inc
test
jae
sbb
mov
push
fnsave
cltd
test
cmp
inc
xor
pop
sub
scas
sbb
daa
lret
xor
cmc
stc
push
mov
or
fstpl
pop
mov
repz
adc
jb
or
out
inc
jae,pt
ss
stc
aaa
fsubrp
cmc
ds
loopne
es
bound
orb
jp
pop
dec
inc
xchg
jae
cmp
jmp
mov
cmp
arpl
add
lods
sbb
outsl
cmpsl
inc
sub
adc
stc
push
std
and
add
aaa
jle
shl
mov
call
jnp
mov
in
jo
jle
sahf
inc
test
pop
jg
sub
jg
or
mov
sub
fdivs
sti
mov
cmpsl
scas
or
xchg
adc
mov
mov
roll
cli
test
jns
dec
jg
sbb
pop
ljmp
in
cmpsb
mov
out
mov
push
xor
adc
int
xchg
lods
xor
adc
lods
pop
or
leave
sub
lods
inc
cmpsb
cmpsl
add
mov
fdivp
rcll
adc
insl
cmp
jns
pusha
ret
jno
mov
mov
iret
sahf
mov
xor
cwtl
or
insl
xchg
imul
fistpll
adc
adc
jg
out
imul
inc
out
mov
mov
mov
dec
xchg
addr16
fcoms
lahf
stos
aas
jbe
xlat
lods
insl
adc
sub
and
add
mov
and
sub
aam
lods
arpl
callw
sub
dec
dec
dec
push
out
inc
dec
and
inc
cld
inc
adc
jnp
mov
ss
and
mov
and
xchg
je
rorb
jg
mov
mov
inc
ja
aas
mov
and
cmpsb
mov
jno
popf
mov
fmul
inc
addr16
mov
sbb
mov
jne,pn
mov
movsb
das
ja
popw
cltd
jmp
jmp
ret
add
dec
insl
cli
push
mov
test
adc
subb
cmpsl
cmpsb
mov
ret
pop
and
lret
jp
pop
shlb
scas
sub
pop
leave
mov
adc
movsb
or
fimuls
leave
ja
adc
inc
lret
iret
push
in
fmuls
sarb
jno
in
xor
mov
mov
cmp
das
cmp
fisubs
mov
adc
scas
push
dec
adc
addl
sbb
mov
or
cs
sub
lock
push
leave
inc
cli
sub
hlt
jl
mov
mov
or
sahf
sarb
mov
int
mov
sbb
pop
ds
mov
in
daa
mov
sub
mov
and
cmp
mov
sbb
xchg
mov
popl
cmpb
mov
or
loope
in
mov
popf
cmc
cmpsl
sub
xor
lea
adc
mov
pop
xor
test
stc
mov
and
or
mov
fwait
pop
jmp
dec
or
into
rcrl
pop
call
icebp
xor
mov
outsl
mov
loopne
adc
xchg
xor
cmpb
xchg
inc
jns
cltd
xor
js
ror
loope
movsl
push
sub
lods
shll
and
outsl
daa
ljmp
ss
dec
into
pop
loope
inc
in
std
les
sbb
sbb
hlt
pmaxub
and
pushf
nop
push
xchg
or
ss
xchg
pop
mov
daa
jle
pop
sbb
fisubs
mov
roll
xchg
cli
ja
dec
push
or
test
jle
js
lock
ja
scas
fs
adc
and
sbb
ja
inc
adc
push
pop
test
test
mov
push
add
daa
mov
xor
das
push
imul
push
jnp
fsts
mov
fisubrs
dec
fdiv
sbb
call
mov
jno
cld
sbb
fwait
mov
jnp
add
xor
and
and
sub
dec
imul
ret
inc
jg
push
inc
lret
pop
inc
outsb
imul
imul
lcall
lcall
loope
int
adc
mov
into
jecxz
aad
add
test
pop
push
test
sub
and
xor
aad
and
sub
in
mov
jle
dec
mov
inc
repz
insl
pop
and
sbb
jecxz
ja
sbb
andb
mov
jecxz
jae
popa
xchg
cltd
mov
mov
fs
and
adc
and
fstl
int
pop
roll
dec
push
xchg
adc
roll
cld
jp
out
lahf
jae
imul
arpl
mulb
gs
pop
xchg
adc
testb
inc
stos
jb
pop
fmull
xchg
mov
inc
mov
je
jns
mov
outsl
fnsave
shrb
movb
dec
jg
int
cmp
sarb
sbb
xor
out
insl
gs
je
in
push
loop
jb
popa
pop
sbb
inc
or
add
xor
cmpb
add
mov
xor
daa
sub
cmp
sub
or
push
faddl
sub
mov
pop
iret
shlb
adc
adc
rcrl
add
popa
xchg
jb
xchg
gs
xor
add
aas
stos
cmp
lret
mov
dec
mov
sub
push
test
rolb
decb
adc
fs
mov
dec
sub
adc
push
hlt
movsl
jmp
cmp
jecxz
cmp
mov
push
pop
adc
scas
sbb
test
orl
mov
mov
mov
add
mov
inc
and
pause
pop
pop
int
or
ffree
roll
dec
aad
jle
inc
cli
ljmp
or
out
push
fwait
push
les
mov
outsb
xor
lret
dec
cmp
lea
sti
scas
in
sarb
jae
and
stos
stos
aas
shll
loopne
jns
pop
and
clc
pop
push
dec
jns
std
repz
xor
popa
sti
pushl
mov
push
jge
sahf
insl
inc
popf
lcall
sbb
xchg
sub
add
mov
ss
shlb
cmp
and
mov
stos
dec
and
pop
sub
icebp
movsb
push
push
jb
dec
adc
push
jb
dec
dec
sti
icebp
data16
sahf
jg
push
in
not
out
push
int3
test
xchg
jge
pop
push
fwait
pop
push
and
xchg
mov
push
scas
aas
xchg
dec
pop
mov
xor
cmp
insl
pop
out
ret
aam
cli
rcr
int
aam
xlat
cli
ljmp
sbb
jle
loop
bound
xchg
jbe
jmp
cmc
mov
push
xchg
std
pop
aad
mov
and
mov
or
lret
xor
sub
fldt
repz
out
jmp
shl
fistpl
incl
cmpsb
inc
test
sbb
aaa
je
or
loop
mov
out
test
dec
mov
or
cmp
push
idivl
jb
push
test
mov
and
shll
pop
rolb
mov
inc
scas
push
push
dec
sbb
lret
lods
clc
push
ja
outsl
cmp
mov
iret
jmp
lea
add
loopne
ds
xchg
mov
xor
mov
scas
iret
aaa
nop
rorb
dec
test
jb
pop
aas
out
shr
mov
push
and
and
test
in
sbb
repnz
imul
out
int3
js
push
jecxz
fistpl
xchg
xorb
dec
scas
mov
mov
mov
xor
push
cmp
dec
dec
int
dec
aam
add
xor
push
jno
and
hlt
not
push
iret
sbb
rcrb
pop
inc
cmp
adc
jns
fwait
sbb
fidivl
pusha
push
xor
outsl
fwait
xchg
pushf
stc
sbb
adc
lret
in
mov
xor
jl
mov
xor
sub
lods
xor
lods
les
and
inc
sahf
rolb
dec
nop
push
stos
fcmove
in
out
cmp
loope
inc
inc
mov
xlat
jno
cwtl
dec
stos
add
mov
add
mov
sub
xor
cmova
xor
sbb
add
mov
jne
push
rol
sub
aas
shlb
jl
jp
pop
adc
popa
lahf
pop
call
sub
inc
aad
lds
jns
jecxz
aam
icebp
push
or
arpl
adc
fisubl
mov
cmp
lret
movsb
ss
sarl
inc
cmpsb
push
lods
ljmp
in
jmp
and
dec
test
les
pop
test
outsl
aad
sub
cmpsl
sub
jb
xlat
inc
rclb
fstps
xor
lret
out
daa
dec
je
lods
repnz
cmp
and
pop
orl
inc
mov
lcall
push
ljmp
les
and
cltd
in
insb
sub
inc
mov
jnp
jle
repnz
jp
stc
dec
pushf
or
mov
jg
pop
pop
addl
or
cwtl
cmp
mov
push
adc
stos
lret
mov
pop
jg
pcmpgtd
adc
std
leave
insb
fldt
jmp
push
inc
add
enter
mov
imul
push
push
cmp
popf
xchg
push
ljmp
stc
xchg
sub
xrelease
mov
addr16
lods
aas
sarb
jl
daa
rcl
shll
mov
and
out
test
add
sbb
arpl
dec
mov
rcr
les
sbb
mov
divb
nop
dec
insl
lods
fucomi
xchg
push
and
mov
mov
mov
pop
mov
sbb
fiaddl
lods
add
daa
in
mov
adc
dec
xchg
and
dec
or
push
xor
shrl
ficoml
add
fisttpll
ja
jmp
lods
outsl
adc
jo
xor
pop
icebp
push
xchg
fwait
data16
hlt
xchg
iret
sub
fdivs
push
jge
ljmp
lods
xchg
jae
push
push
push
push
mov
leave
test
mov
sahf
jns
dec
fcomps
addr16
xchg
loope
and
mov
push
sub
sbb
je
test
xchg
push
in
pop
xor
subl
xchg
pop
mov
add
lea
mov
scas
stos
and
sub
lods
push
cmpsb
jge
pusha
pop
fcoml
xlat
jno
mov
lea
pop
add
and
jo
jecxz
subb
in
mov
add
mov
xor
addb
sbb
xlat
cmp
cmpsl
sbb
xor
xor
fxtract
add
jg
push
jae
imul
ljmp
dec
mov
mov
in
into
jge
dec
out
ja
adc
stos
loope
popa
subb
cmpsb
cmpl
pop
cmp
scas
je
cmp
ljmp
inc
movsb
icebp
sub
cmc
sti
cmpsb
add
dec
push
push
xor
xchg
scas
ljmp
lods
inc
cltd
push
fs
push
jle
cmp
out
das
fwait
xchg
add
push
call
adc
ror
add
sarb
inc
fwait
pop
pop
lret
stos
xchg
daa
xor
inc
mov
push
sbb
push
mov
cmp
ret
pop
data16
insl
rolb
dec
popf
and
add
aaa
in
testl
pop
sbb
sti
adc
add
xor
add
andl
inc
xchg
sub
scas
nop
sbb
dec
xor
inc
jbe
mov
shll
jle
repnz
aam
cltd
dec
clc
in
leave
pushf
pop
mov
imul
popf
jle
xchg
lret
push
inc
cmp
adc
outsb
ja
xlat
in
das
cmp
mov
adc
outsl
or
outsb
mov
jmp
xor
jg
sub
adcl
push
test
stc
popa
and
ja
outsb
aad
into
js
outsl
sub
jno
hlt
dec
xor
jo
jmp
imul
out
pushf
aam
xchg
xor
cmpsb
fistl
and
aas
mov
ss
scas
stos
xchg
lret
stos
aas
lods
adc
ja
test
xor
addr16
pop
mov
sub
mov
jae
mov
push
jo
int3
sbb
sbb
pop
push
scas
push
inc
or
test
aas
inc
mov
pop
pop
test
mov
mov
cmp
fsts
mov
lret
stc
pop
mov
cmp
push
cmp
jge
pop
cmpsl
lds
jb
fwait
adc
in
jp
jae
mov
push
jge
ret
out
or
hlt
std
jo
mov
mov
test
int
add
mov
mov
pop
loopne
jecxz
inc
movsl
cmpsl
or
cmpsl
mov
fists
out
in
ss
mov
incb
int
shlb
ja
xchg
mov
outsl
xchg
shlb
cmpsb
lahf
xchg
pop
psraw
add
pop
test
add
sub
mov
enter
bswap
xor
aam
and
lret
fistpl
mov
inc
add
adc
adc
push
outsb
dec
bound
js
push
stos
cmp
out
imul
ja
push
or
lcall
push
and
jmp
test
ret
lods
push
or
aas
xchg
std
stos
sub
jp
das
push
sbb
dec
out
mov
pushf
push
lret
sbb
icebp
cmp
push
push
sbb
pop
cmp
jne
pusha
and
mov
pop
jl
sub
or
mov
test
mov
mov
sub
mov
mov
pop
leave
sarb
jbe
adcb
inc
mov
push
andl
cmpsb
in
in
std
jae
data16
stos
arpl
jo
mov
das
adc
xor
add
sbb
mov
push
scas
fbstp
mov
repz
push
fcmovne
jle
fisttpl
push
iret
js
lret
jmp
loop
clc
jmp
jnp
mov
leave
out
hlt
pop
or
cmp
cwtl
mov
sbb
xchg
ds
mov
lods
lods
enter
in
mov
fiadds
sub
lret
andl
int3
xchg
fnstsw
dec
insl
dec
mov
or
sbb
cmp
shl
loopne
jae
sbb
in
xchg
test
add
adc
lea
ljmp
das
and
sub
mov
inc
fnsave
lods
loopne
fstpt
push
dec
int3
fcoml
into
jecxz
jns
dec
lock
add
std
jns
inc
ret
dec
jmp
popa
in
jmp
push
sbb
mov
js
add
jbe
xor
int
sub
mov
cmpsl
add
lcall
inc
scas
push
not
je
push
cwtl
mov
je
jmp
out
jmp
daa
outsb
shl
pop
call
arpl
hlt
xorl
or
lahf
lea
lea
push
mov
pushf
mov
cmpsl
dec
xchg
sub
fsubrl
fildll
adc
dec
ret
data16
cld
lods
lret
push
lret
fabs
icebp
cmp
sub
ds
out
mov
hlt
jno
mov
call
test
inc
add
test
pop
add
add
lret
bound
sub
adc
pop
sub
push
adc
ds
addr16
dec
jp
aad
push
jge
shll
inc
lods
icebp
ret
add
cmp
popa
out
lock
sbb
rcrl
cmp
push
mov
xchg
cmp
pop
scas
ljmp
xchg
adc
mov
test
pop
mov
sbb
push
inc
mov
sbb
pop
sub
jle
bnd
or
or
loopne
xchg
jnp
push
or
cmp
lea
stos
movsb
push
cmp
sub
pop
pop
fs
shlb
shl
iret
int3
int
stc
add
lahf
sub
lahf
jo
std
loope
jge
mov
icebp
loopne
jae
push
add
or
addb
sbb
test
mov
test
add
jnp
fld
dec
push
es
shlb
push
dec
mov
pop
cli
repz
iret
jle
iret
in
mov
ljmp
popa
loopne
jbe
sti
pushf
ljmp
adc
push
mov
mov
lods
sbb
mov
test
push
insl
ss
jb
rorb
mov
loope
mov
lds
leave
idivb
jmp
int3
push
push
jge
jmp
push
dec
inc
push
xchg
jnp
jecxz
out
cwtl
out
jae
loop
outsb
xchg
add
test
add
in
daa
push
add
in
jbe
lods
imul
mov
and
inc
daa
jle
ficompl
cmp
push
adc
jg
out
cmp
cs
test
outsb
pop
pop
jecxz
push
sub
addr16
mov
nop
cmpsb
lock
sub
xlat
cmp
fidivs
dec
movsl
les
inc
inc
jle
cmpsb
icebp
push
dec
jae
dec
insb
aam
and
or
in
call
test
fistpll
cmp
cmp
out
mov
mov
mov
fidivrs
into
sbb
jae
inc
push
cmc
cmp
add
repz
xor
adc
movsb
and
jle
call
fmull
loopne
and
dec
into
rolb
sbb
xor
pusha
out
add
sbb
int3
ja
pop
outsb
xor
or
cmpsb
mov
and
mov
test
mov
jg
daa
shlb
inc
sbb
inc
mov
jecxz
push
sbb
lcall
lret
loopne
cmc
into
lods
inc
loope
popa
call
cwtl
jge
mov
test
dec
xorb
rcll
and
mov
push
mov
fs
shrb
sub
std
pop
pop
sbb
lcall
dec
gs
cmc
hlt
lcall
in
mov
nop
sub
cmpsb
xchg
xchg
cmp
xor
cs
adc
fbstp
faddl
and
stos
add
std
mov
jnp
gs
pop
push
call
pop
ret
inc
inc
fsub
dec
je
adc
cmpsb
adc
js
xchg
pusha
repnz
call
bound
jae
mov
mov
pop
cmp
movsl
push
mov
ror
xor
pop
mov
std
xor
stc
add
cmp
xchg
es
cmp
xchg
push
iret
dec
mov
inc
movsl
jae
test
ret
je
pushf
loopne
repz
imul
cmpsb
rorl
sbb
jmp
adc
pop
cli
cmp
lock
scas
hlt
dec
fcomp
or
pop
sub
dec
clc
es
movsb
fcmovne
mov
dec
lret
sbb
imul
or
push
ljmp
popa
or
sbb
sahf
call
xor
and
and
sub
or
popf
jns
push
negl
pop
scas
fsin
inc
push
int
insl
sbb
outsl
sbb
fs
insb
repnz
adc
jnp
lock
xchg
jmp
mov
jb
mov
xor
addb
or
cmpsl
mov
add
xor
aas
or
mov
movsl
orl
pop
arpl
addr16
cmp
mov
jp
iret
jns
cmp
pusha
mov
lds
stc
cmp
adc
imul
popa
ds
sub
mov
mov
sbb
mov
inc
jge
mov
add
jns
add
jae
xor
sub
and
inc
je
jae
mov
lds
inc
or
inc
mov
mov
sbb
mov
cwtl
cmc
cmp
outsl
lods
out
fisttpll
enter
ss
sub
mov
push
icebp
xor
dec
nop
outsb
iret
or
sarb
sahf
xchg
mov
inc
mov
aad
enter
aaa
adc
sbb
hlt
adc
jae
pop
arpl
mov
cld
mov
xor
xorl
add
mov
pushf
fcoms
mov
test
andl
dec
xchg
xor
cmc
lret
fs
mov
int
jae
jl
lock
add
add
push
in
sbb
xor
mov
sahf
adc
nop
adc
xor
loope
sbbb
or
pop
shrb
sub
push
aam
movsb
and
inc
fistps
xor
push
jnp
mov
f2xm1
jp
sti
cmp
stc
popf
sbb
xor
inc
sbb
cmc
int3
popf
jnp
repz
stos
push
lods
or
and
into
mov
pop
aaa
lds
mov
repnz
aam
iret
sub
jmp
sbb
dec
ret
in
mov
dec
jb
in
int3
inc
cmpl
lock
addr16
adc
push
add
pushf
out
ds
aas
xchg
sti
imul
adc
pop
cmp
cltd
add
mov
sbbl
mov
mov
add
xlat
jmp
ret
imul
jmp
sti
dec
xchg
loop
sbb
addr16
fistl
xchg
cmpsb
mov
shrl
aas
sbb
mov
and
je
lret
pop
insb
push
inc
jecxz
jle
dec
lcall
jne
jne
leave
adc
mov
nop
test
popf
mov
movl
xor
cmpsl
imul
xchg
push
lods
es
ljmp
shlb
pop
movsb
cwtl
dec
dec
fiadds
push
adc
nop
jnp
cmovg
dec
cmp
mov
mov
out
mov
loopne
dec
pusha
jo
sub
sbb
stos
mov
xor
xchg
cmc
scas
imul
stos
mov
lret
push
je
or
sahf
les
cld
mov
test
mov
pushw
sbb
xchg
shrl
mov
mov
aaa
je
daa
xor
add
aas
fistpl
daa
pop
jl
jae
and
ljmp
add
iret
sub
lret
insb
std
jle
hlt
mull
rol
sti
jge
sahf
decl
push
stc
sahf
shrb
fwait
jno
mov
cwtl
and
dec
shrb
ret
cmp
mov
mov
dec
jae
test
mov
fucomi
test
pop
jbe
sub
or
subl
out
decb
and
inc
push
push
pop
or
call
int3
pxor
jo
out
mov
mov
mov
movsb
xchg
cmpsl
sub
and
xor
xchg
and
pop
xlat
cltd
dec
xchg
and
call
cmc
fs
aam
push
jbe,pt
ja
mov
insb
jnp
mov
push
xor
or
adc
orb
scas
jbe
fmuls
lods
pop
cmp
or
dec
clc
pop
daa
add
test
fistpl
cltd
dec
push
adc
repnz
movb
cmp
cld
adc
roll
mov
das
jae
cwtl
xchg
mov
mov
popf
push
xor
mov
shlb
loope
add
mov
xchg
or
aas
cmpsb
pop
ror
bound
mov
inc
and
lea
fwait
out
cmp
sbb
jb
in
mov
leave
gs
sbb
jl
mov
mov
xor
test
cmpsl
and
xchg
add
adc
or
xlat
pop
pop
lods
insl
das
xchg
dec
mov
cmp
cs
daa
push
andl
addr16
and
xlat
je
insb
jno
xchg
inc
int
jmp
out
pop
and
int
pop
jno
add
sbb
addr16
or
sbb
mov
adc
mov
lea
pop
fstp
dec
push
push
push
lret
and
dec
lcall
jg,pn
fmull
insl
mov
insl
xor
into
jg
lods
shlb
cmpsl
js
cs
gs
mov
sbb
outsb
cmpsb
and
lcall
push
pushf
mov
add
or
into
adc
add
ds
xor
cmpsl
pop
test
rcr
mov
jb
push
int3
dec
mov
push
cs
xlat
jl
test
jo
xchg
sbb
in
ret
sbb
cli
xor
insb
adcb
aad
mov
fiaddl
test
daa
cs
cmp
ror
add
sti
int3
aam
adc
cmp
stc
xchg
lcall
decb
call
pop
sahf
push
mov
popf
nop
les
mov
push
xchg
std
jno
fidivs
dec
mov
lret
sub
cmp
xlat
pop
ja
mov
les
out
mov
lret
pop
cmp
cltd
js
dec
mov
jg
mov
repnz
sbb
xor
or
pop
xchg
fsub
popf
adc
and
and
and
and
pop
add
mov
out
xchg
dec
out
loopnew
mov
loope
jae
jns
push
dec
push
cmpsl
xor
inc
jae
push
mov
adc
ljmp
in
mov
adc
test
sub
lret
out
pushf
xchg
mov
fadds
pop
inc
and
mov
pop
lea
fstps
sarl
fcompl
stos
int3
jle
outsl
stc
ljmp
outsb
std
mov
mov
mov
inc
xchg
xchg
mov
ljmp
xchg
fdivrl
cmp
push
pop
sub
xor
fnstsw
cmpsl
adc
add
push
sbb
adc
xchg
fimuls
or
mov
or
int3
or
inc
xchg
mov
adc
jle
stos
repnz
sub
hlt
sub
mov
sbb
add
lret
dec
fimull
decl
jo
jae
aas
repz
aaa
icebp
int3
cld
aaa
adc
lods
insb
jae
and
pop
fldt
adc
outsl
rorl
pushf
hlt
lahf
inc
jo
jnp
outsb
bound
repz
add
sub
es
loope
stc
subl
xlat
and
dec
sti
xchg
iret
cmp
divb
mov
xchg
lods
sub
cmp
xor
dec
cmp
inc
cwtl
dec
inc
scas
push
lcall
mov
scas
cmc
sbb
out
ds
push
ret
mov
das
lods
lea
pop
addr16
fcom
mov
or
mov
push
shlb
nop
leave
icebp
pop
adc
sbb
push
ljmp
lds
mov
xor
and
mov
test
and
adc
aaa
stos
xlat
ret
pop
movsl
movsl
cmp
or
or
sbb
mov
adc
in
push
pop
mov
xchg
fsubr
shlb
rorb
int3
cmpl
cmp
and
shl
shlb
aaa
mulb
dec
push
cmp
es
mov
pop
xchg
adc
lea
negb
fsubrs
cmpsb
ds
enter
jge
and
xchg
and
dec
psubusw
int
sarl
pop
jge
lahf
int
and
sub
test
lahf
je
lods
incl
and
gs
iret
addr16
lcall
popf
fimuls
nop
add
mov
add
mov
xor
mov
scas
lock
movsl
jp
out
cltd
hlt
out
jo
cmp
sub
test
into
leave
addr16
clc
and
jp
sbb
and
insl
push
out
call
pushf
xchg
sahf
popf
jno
in
mov
push
push
pop
or
ret
mov
mov
out
jg
clc
clc
out
mov
in
scas
sbbl
das
sbb
fdivrp
pop
add
mov
xor
inc
mov
add
jo
jp
mov
dec
je
mov
push
cmp
loope
add
pop
lods
and
mov
fldt
adc
lret
mov
xor
pop
add
mov
push
inc
aam
jnp
scas
fs
jecxz
jne
push
sub
cld
dec
ljmp
add
ret
mov
out
aaa
jbe
mov
dec
in
loope
sub
cmp
mov
cmp
int3
fnstcw
push
or
jmp
hlt
test
divl
sub
ret
insb
shl
pop
mov
jl
sbb
inc
fs
shr
int3
popa
adc
mov
aad
adc
mov
mov
sbb
fwait
popf
add
pop
pop
mov
xor
mov
mov
mov
and
test
add
pusha
jnp
bt
mov
lods
fisubrs
lahf
inc
mov
push
xor
xchg
xor
std
test
xchg
outsl
repnz
addr16
xchg
das
mov
mov
sbb
mov
adc
inc
adcl
mov
xchg
and
sub
xlat
jb
mov
mov
daa
mov
out
push
pop
or
rcll
shrb
incl
and
jo
mov
add
cmpb
adc
mov
push
cmp
shrb
xchg
cmp
lcall
pop
icebp
adc
and
adc
cmp
insb
out
sbb
inc
cli
inc
data16
jb
test
ja
loopne
repnz
lret
cmp
arpl
mov
and
out
push
mov
rorl
add
popf
add
sub
daa
mov
sbb
jge
fisubrl
push
in
mov
cmp
cmp
stos
xchg
and
lcall
je,pn
aad
hlt
xchg
sarb
pop
xchg
popa
jecxz
fldl
hlt
push
out
pop
pop
fisubrl
adc
addb
ret
xchg
mov
lahf
in
movsb
xlat
sahf
pop
mov
loope
fs
enter
xlat
dec
xor
add
popw
mov
negb
xchg
loop
inc
xchg
popaw
insl
add
mov
bound
sbb
or
imul
subb
xor
mov
push
pop
mov
pop
sub
sub
movsb
scas
rcll
fcmovbe
adcl
popf
push
cmc
iret
add
leave
jmp
inc
inc
push
or
icebp
xor
push
data16
jb
outsl
lcall
out
or
xor
fs
lea
orl
xchg
mov
pop
js
lret
sub
mov
pop
dec
test
aaa
fs
sub
mov
out
jo
cli
xor
mov
cmpsb
cltd
lea
popf
ret
pop
mov
inc
or
vpmullw
pop
xchg
cmp
in
inc
and
sbb
xchg
lahf
cmp
fnstcw
add
cmp
ds
insb
cli
cmp
mov
fisttpl
out
mov
pop
mov
sbb
arpl
dec
arpl
push
jge
xchg
pop
clc
pushf
jb
cltd
out
idivb
addb
sbb
push
mov
adc
lods
add
imul
mov
push
fistpl
scas
xor
sbb
in
ss
xor
cmp
out
cmp
loope
test
jmp
fucomi
push
in
je
mov
mov
add
mov
popa
sbb
inc
daa
scas
ss
test
jecxz
imull
fcmovu
or
dec
fwait
pop
or
jno
dec
and
mov
ret
leave
and
jge
mov
push
jb
shrl
sbb
adc
or
push
adc
add
stos
sub
iret
and
fldcw
pop
and
and
imul
xchg
inc
add
repz
jae
nop
rcll
jne
cmpsb
out
jbe
leave
add
daa
nop
push
arpl
jl
popf
xchg
mov
fists
test
mov
add
inc
add
xor
jmp
push
and
push
adc
cltd
inc
xlat
cli
add
popa
iret
repz
daa
jle
cltd
out
mov
jmp
cmp
into
loopne
sbb
out
arpl
jl
push
add
je
andb
mov
out
sub
hlt
mov
fadd
xorl
cmc
fsubl
and
data16
jmp
lea
or
lea
push
cmp
mov
out
test
mov
hlt
cmp
aaa
xor
mov
mov
dec
mov
mov
das
sub
and
fbld
dec
and
lds
out
xchg
ret
sbb
addr16
jae
jecxz
jne
imul
out
rolb
adc
mov
mov
cmpl
cs
xlat
fsubrl
add
imul
out
outsl
lods
pushl
int3
test
lret
xor
pop
fneni(8087
into
int
pop
and
gs
jg
movsl
imul
cmp
inc
loopne
xchg
in
jecxz
or
adc
leave
cmp
push
test
push
pop
jl
and
orb
xchg
ror
in
fcoms
aaa
and
mov
cld
jl
push
out
ds
call
fwait
aaa
repz
xor
pop
adc
repz
pop
xchg
sub
lret
out
cltd
mov
dec
mov
xorl
clc
pop
pop
mov
adc
push
popf
call
dec
jp
mov
jge
dec
sahf
icebp
stc
xor
nop
imulb
pop
popa
loop
cmp
nop
mov
sub
xchg
xchg
xchg
mov
cmp
xor
mov
mov
push
ret
inc
fisubl
pop
push
jb
fmuls
mov
jmp
sahf
push
out
dec
push
les
outsb
stos
popa
cmp
and
ficompl
pushf
imul
and
xchg
cs
mov
jl
cmp
xor
add
outsl
jle
xor
mov
and
cmp
push
adc
pop
in
loope
push
scas
inc
leave
clc
nop
rcll
imul
jae
jl
sti
in
mov
loop
pop
jae
xor
push
mov
lods
test
mov
lcall
sub
stos
test
andb
pop
push
cmp
jl
adc
xor
jp
movsb
insl
inc
stc
sub
in
call
testb
aas
stc
mov
popa
stos
push
outsl
setl
xchg
dec
repnz
mov
xor
adc
pop
xchg
dec
shlb
cmp
pop
aam
int
leave
in
loopne
out
push
inc
int3
xchg
jo
cmp
sbb
jns
add
test
sbb
outsb
sbb
dec
adc
rolb
lods
inc
mov
mov
xor
test
lea
inc
cmpsb
sub
xor
rcll
aaa
icebp
dec
cmp
fstp
push
incb
lret
add
clc
inc
mov
arpl
fdivs
outsl
sbb
mov
jbe
push
inc
xchg
inc
xchg
lcall
repz
divb
dec
scas
loope
sub
dec
pop
xchg
cmp
cltd
mov
or
call
in
roll
inc
fisttpll
pop
inc
xchg
ret
dec
lahf
jbe
rdmsr
push
cmp
aaa
mov
mov
in
mov
pop
lsl
out
mov
mov
adc
sub
cmp
jge
fiaddl
jl
pop
cmc
ret
outsb
repnz
bound
push
mov
jp
mov
pop
cmc
into
sbb
push
jle
push
mov
mov
cmp
stc
cmpsl
jae
lahf
shll
nop
adc
das
cwtl
ds
inc
loope
inc
cmp
pop
push
add
push
mov
insl
into
adc
cmp
or
into
lods
jge
testb
test
imul
cmp
mov
mov
out
adcb
stc
mov
and
jp
mov
cltd
mov
xchg
adcl
push
sbb
mov
xor
sub
mov
push
data16
and
xchg
jns
add
cmovae
inc
js
hlt
sbb
fwait
sbb
in
ljmp
hlt
popa
or
xchg
js
loop
xchg
stos
testl
call
shll
movsb
xor
loop
xchg
sub
and
jle
movsl
stc
je
js
cld
lret
nop
shrl
pop
mov
fists
call
mov
ljmp
int
pop
push
in
in
sub
fs
pusha
xchg
add
cmp
fldl2e
xor
xlat
xlat
lods
cmp
addr16
push
lret
inc
pop
mov
rorl
nop
mull
jmp
mov
jo
out
loope
sbb
jo
arpl
add
ret
or
loop
mov
dec
cmp
inc
leave
jmp
stc
pop
adc
mov
push
add
mov
ret
jp
and
inc
in
int
lret
ss
dec
repz
jg
pushl
js
adc
xor
adc
stos
data16
bound
xor
inc
pop
arpl
pop
in
sbb
jl
lds
adc
aaa
std
cmp
xor
aas
sub
jb
dec
fildll
push
push
pusha
decl
mov
adc
mov
and
in
ret
cwtl
xor
arpl
mov
or
ret
call
std
add
mov
sub
mov
xor
push
in
mov
enter
jo
xlat
in
ficoms
sbb
std
jg
cwtl
and
arpl
push
and
xchg
xchg
lret
in
stos
cmp
jbe
lea
and
stos
mov
mov
or
push
mov
ret
inc
jp
mov
push
and
xorl
xchg
mov
fstl
jg
cltd
outsl
arpl
hlt
inc
les
mulb
insl
lcall
fldcw
outsl
loop
or
mov
int3
add
xor
fimuls
sub
mov
sbb
fstl
fisttpl
lcall
sub
ret
inc
pop
jge
jg
inc
out
nop
pusha
lods
inc
lcall
repz
xchg
and
rclb
popf
mov
jmp
or
out
es
sub
jmp
jmp
ficompl
sub
clc
gs
xor
sub
jb
mov
ja
leave
in
imul
iret
adc
sbb
out
adc
cmpsl
fstl
imul
stos
sub
inc
aad
cmp
scas
mov
test
repnz
ss
jae
jle
loop
adc
mov
xor
pop
in
cli
das
cmc
imul
lea
scas
jl
sbb
pop
pusha
mov
add
lcall
mov
divb
pop
mov
inc
imul
nop
stos
sub
pusha
fsubs
jnp
push
fwait
daa
aam
cmp
mov
aam
jg
into
inc
or
xor
out
pop
jg
aad
cwtl
cwtl
xlat
cmc
and
test
adc
popf
addb
pop
dec
push
cmpsb
ss
add
xchg
test
xor
cld
cs
jae
hlt
std
mov
test
xchg
push
push
fisubrl
inc
mov
shl
or
jnp
arpl
sbb
rolb
iret
in
xchg
in
mov
fwait
testl
fldcw
push
aas
or
jno
cld
jnp
icebp
dec
cmpsb
ja
movsl
out
dec
fs
mov
adc
rcll
jl
mov
lahf
cmc
fcomps
xchg
cmp
jmp
sarw
out
jge
sub
push
or
out
repnz
add
and
out
pop
or
sub
dec
jg
mov
imul
lock
sbb
and
int3
lcall
and
jbe
mov
ficompl
lcall
daa
sbb
cmp
dec
subl
push
ss
pop
movsb
cs
pop
mov
data16
adc
pop
push
push
xchg
mov
iret
int3
dec
xor
dec
jle
shll
xchg
les
jmp
jae
push
lock
lea
sbb
insl
lds
addr16
jle
hlt
mov
pop
mov
xchg
leave
jae
add
pop
jp
push
fcompl
pop
cmc
sub
cli
ljmp
xlat
sbb
int3
xchg
push
pop
out
xchg
sub
xchg
mov
xchg
insl
mov
xchg
sub
inc
adc
addr16
lcall
adc
and
push
push
push
ret
das
sti
lock
sub
sub
aad
pop
add
dec
inc
in
inc
push
and
jge
lock
rolb
popf
in
fnstenv
pusha
jo
xchg
scas
xchg
sub
lds
cmp
int3
xchg
sbb
push
adc
or
mov
lods
inc
mov
lods
mov
scas
pop
mov
push
int3
aam
repnz
sub
rorb
mov
push
int
popa
inc
cmc
sbb
xchg
or
ljmp
cmp
fs
int3
cli
and
test
xor
push
je
fcmovnbe
xor
jl
inc
outsb
sub
aad
dec
or
dec
sti
jae
bnd
jp
jmp
jno
loope
out
sbb
nop
loopne
or
fwait
xchg
jmp
cltd
mov
nop
ret
scas
or
cs
xor
in
pop
js
movsb
pop
and
push
test
in
lcall
test
inc
fucomp
jns
daa
aas
insb
lret
mov
inc
mov
mov
dec
jl
adc
fidivl
xchg
inc
mov
rolb
dec
xor
rorb
out
adc
sub
fisubs
scas
xchg
inc
je
adc
stc
push
repnz
iret
push
pop
fcomps
popa
pop
push
iret
add
push
inc
sub
int3
sbb
sahf
bound
add
sbb
insl
mov
xchg
xchg
in
sbb
jecxz
mov
xor
push
or
cmp
repnz
xchg
xlat
fxch
lock
fdivrp
aas
push
cmc
lret
sbb
nop
sahf
inc
xchg
hlt
in
ljmp
jbe
sbb
push
lock
in
pop
and
lcall
cmp
int
ss
sbb
cmp
addr16
imulb
push
ds
dec
cmpl
fiadds
es
dec
push
push
add
arpl
inc
loop
pop
dec
mov
shl
rep
xchg
fwait
dec
call
sbb
inc
adc
jecxz
pushf
or
fwait
pop
js
sbb
cs
or
add
mov
mov
ja
adcl
into
loope
xlat
pop
jl
pop
ffreep
cmc
movsl
mov
fs
mov
test
fidivrs
jmp
inc
push
jmp
push
sbb
mov
sbb
mov
cmp
xchg
cmp
leave
adc
cmp
jmp
adc
int3
cmpsl
enter
idiv
adcb
mov
outsl
das
out
notb
xorb
hlt
xchg
jmp
lahf
shr
lcall
pop
mov
adc
punpckhdq
xor
insb
xor
aaa
shl
cmpsb
adc
add
mov
ljmp
cwtl
push
outsb
pop
xor
cli
popf
movsb
out
imul
xor
and
daa
or
push
push
add
or
in
icebp
mov
xor
test
shrl
lret
push
cmpsl
xor
mov
shll
pop
mov
fildll
lret
rcll
cli
lret
inc
pop
mov
jno
into
outsl
out
pop
jbe
daa
pop
jl
add
fwait
add
idivl
ret
lret
das
repnz
outsb
jae
push
xchg
fstpt
daa
dec
push
xor
cmp
out
sub
lods
or
movsl
das
daa
cmp
xchg
push
push
int
mov
xchg
repz
pushf
sbb
xor
out
xchg
xor
push
mov
and
mov
fistpl
lret
int
bts
cmp
inc
rcr
sub
fimuls
popf
mov
daa
mov
sbb
cmpsb
mov
aaa
or
test
and
adc
fwait
xchg
jg
bnd
push
push
test
test
mov
pop
xchg
mov
dec
adc
pop
clc
mov
add
mov
xchg
mov
dec
xor
inc
and
shlb
dec
xchg
inc
jnp
icebp
outsb
leave
lcall
in
popa
jbe
dec
cmpsl
data16
jge
sti
xchg
pop
and
dec
pop
ss
inc
mov
xor
int
cmp
sub
inc
cs
repnz
ljmp
or
fsts
mov
xor
ds
adc
push
loopne
xchg
imul
gs
lock
pop
testl
sub
mov
inc
in
pop
insb
cmpsl
scas
jmp
sub
push
rcr
popa
sarl
loopne
xchg
dec
inc
fsubs
dec
sbb
mov
jne
mov
adc
xor
out
mov
and
mov
push
xchg
mov
push
je
shlb
and
outsl
cmpsl
lret
lcall
mov
xor
push
xor
loop
push
fs
inc
mov
ret
pop
ljmp
lcall
mov
repz
pop
in
or
cwtl
mov
inc
add
sbb
daa
test
cmp
jb
pop
mov
xor
repnz
loopne
cmp
and
rolb
aam
rcrb
cmp
push
mov
into
sarl
in
test
jo
imul
call
pop
jp
insb
mov
push
fcmovbe
push
call
push
orb
jp
push
pusha
push
push
sti
sub
test
dec
xor
push
inc
cmp
jbe
mov
scas
pop
daa
or
mov
push
fnstsw
mov
or
cwtl
fisubrl
jge
xlat
movsl
jne
mov
inc
mov
sahf
lahf
cmp
movsl
and
mov
out
xor
fnstenv
daa
int
push
push
xchg
pop
aam
adc
int
mov
stos
ds
mov
sahf
inc
xchg
mov
jecxz
lods
or
mov
inc
adc
or
adc
orl
icebp
xchg
mov
ja
test
out
cs
dec
or
push
lret
push
cwtl
jno
dec
or
sbb
add
inc
jb
daa
stos
pop
lahf
push
outsb
cmc
bnd
inc
mov
mov
mov
lahf
or
das
adc
popa
pop
dec
sahf
xchg
rorb
mov
mov
xor
push
xchg
dec
mov
nop
xchg
shl
test
dec
cltd
mov
push
jl
dec
push
dec
push
aad
inc
jmp
and
and
cmp
add
mov
in
push
and
mov
mov
add
and
outsb
mov
fnstsw
xor
pop
push
adc
out
push
out
cmp
dec
push
sbb
push
iret
ret
mov
je
ret
icebp
push
push
mov
xor
pop
shll
insl
je
push
lahf
lods
push
gs
nop
lds
adc
notl
adc
aas
or
sahf
clc
je
add
outsb
js
cmp
mov
add
ficompl
sbb
ret
and
cmp
add
daa
cli
shl
jb
scas
leave
mov
push
sub
sub
int3
loope
cmp
mov
and
mov
ret
sub
cmp
aad
add
stos
rcll
sub
pop
loope
test
xchg
dec
jle
sbb
mov
push
aaa
std
mov
xchg
hlt
dec
mov
pop
and
and
scas
js
adc
sub
mov
pop
movsl
pop
movsb
adc
or
lahf
icebp
xchg
and
push
lcall
aad
daa
pop
fs
jnp
pop
rorb
in
leave
fdivs
inc
fdivs
add
push
adc
inc
iret
mov
add
data16
loope
bound
jbe
sbb
arpl
insb
add
test
orb
sub
and
or
shrb
dec
loop
mov
dec
or
mov
inc
sbb
jnp
hlt
subb
fsts
push
add
js
ret
add
mov
lret
cmp
nop
pop
or
or
adc
leave
shlb
xor
sbb
jno
aad
out
inc
lcall
inc
repz
ja
pop
pop
in
mov
mov
or
cmp
inc
mov
mov
push
or
xor
idivb
lahf
and
cmp
pop
in
mov
cmp
cmpsb
xor
dec
pop
fsubrs
mov
pop
cld
or
dec
adc
jge
sti
or
scas
js
xor
jmp
jge
add
cmp
mov
sti
and
sub
cs
inc
or
adc
and
in
iret
roll
outsb
inc
xchg
inc
inc
xor
shlb
jno
or
dec
mov
pop
jo
insl
aas
push
sub
adc
cmp
add
cmp
ds
push
ror
daa
pop
dec
pop
lods
loopne
xchg
and
jno
mov
loope
cs
stc
ss
nop
push
jne
cmpl
arpl
jo
test
out
mov
stc
cmp
jo
mov
cmp
stos
clc
movsl
and
and
imul
dec
add
aam
jno
inc
xlat
pop
aam
lods
add
dec
add
shlb
sbb
faddl
jge
pop
adc
xor
cmp
loope
mov
inc
pop
fists
adc
or
xor
test
xor
xor
loope
cs
cmp
ljmp
fimull
test
out
repnz
xor
mov
dec
lahf
imul
cli
cltd
mov
adc
sti
ja
push
mov
mov
mov
sub
sahf
xchg
push
or
jp
cli
add
sbbb
and
add
mov
sub
adc
fstpt
outsl
iret
sbb
pop
inc
mov
dec
mov
rcl
push
sarb
int3
clc
ja
cmc
xchg
cld
lahf
push
pop
jo
sbb
push
imul
hlt
hlt
pop
xchg
outsb
out
or
and
push
dec
cmp
xchg
mov
mov
fldenv
xchg
adc
addl
lds
setbe
mov
jg
test
loope
cmpsl
lret
loopne
pop
xchg
jmp
in
push
stos
xchg
mov
mov
add
cwtl
test
inc
sub
mov
dec
pop
faddl
mov
hlt
iret
inc
sub
jg
int
stos
xchg
xchg
repz
jbe
rcrl
movsl
cmp
sbb
cmp
push
sbbl
pop
mov
imulb
mov
mov
dec
pop
popl
cmp
int3
aad
mov
ror
mov
lods
adc
jecxz
hlt
dec
xchg
stc
push
clc
insb
je
and
loope
mov
pop
mov
insb
pop
and
push
mov
jecxz
mov
cmp
leave
adc
jmp
mov
js
push
add
or
fldcw
or
mov
inc
mov
adc
dec
je
add
das
xchg
pusha
or
testb
cmc
push
jl
pop
imul
or
cmp
or
js
sbb
lcall
inc
add
inc
rcr
insb
push
gs
dec
xchg
out
jae
mov
inc
mov
jno
xchg
push
aam
pop
in
call
or
xchg
mov
leave
adc
xor
inc
xchg
xlat
lock
fwait
xor
pop
mov
iret
pop
cs
jg
inc
repz
adc
push
addl
cltd
mov
xchg
and
call
jne
push
inc
insl
nop
popf
add
dec
imul
scas
sub
subl
pop
cwtl
pop
cmp
push
cmp
sub
mov
icebp
repz
sbb
pop
push
mov
imul
jmp
adc
xchg
or
jge
iret
out
sbb
mov
aad
outsb
sub
jmp
mov
bound
popf
xchg
xor
andb
loope
sbb
out
xchg
jne
scas
jnp
mov
arpl
xor
call
push
pop
add
repnz
lock
push
stc
outsb
adc
jmp
shlb
jge
adc
xchg
inc
in
xchg
test
mov
mov
lea
stc
mov
lods
jmp
lods
xor
daa
sub
adc
push
inc
into
decl
repz
cmp
cld
insl
loopne
outsl
lcallw
xor
xor
nop
jl
adc
loope
or
dec
pop
sbb
xor
push
repnz
sub
cmpsb
scas
std
jp
rcrb
add
inc
cs
imul
push
xchg
mov
push
in
push
dec
jmp
add
dec
or
jmp
pop
xchg
adc
cmp
sbbl
mov
mov
or
or
cld
dec
mov
or
adc
xchg
dec
je
push
inc
ljmp
out
mov
ss
out
ljmp
push
cs
out
notb
out
insl
sbb
lea
inc
fists
cmpsb
lea
inc
scas
scas
dec
mull
stos
movsb
pusha
and
push
xor
aad
mov
outsb
lods
lret
imul
sbb
mulb
test
or
sbb
pop
out
sub
addl
or
cltd
xor
je
sbb
arpl
das
sub
scas
pop
jno
add
or
lahf
mov
fcmovu
xchg
mov
and
push
inc
repnz
xchg
outsl
incb
cli
lret
xchg
pusha
ljmp
inc
dec
enter
imul
mov
sbb
or
ret
lods
mov
js
fstpt
leave
fbld
cmpsl
out
jmp
pusha
repnz
out
dec
jno
inc
dec
dec
mov
testb
enter
lcall
dec
dec
call
test
mov
lods
je
mov
jp
pop
cmp
scas
jae
stos
xor
sbb
popa
and
or
pop
xchg
cmp
sahf
add
fwait
sti
ja,pn
and
cmpsb
mov
imull
ljmp
dec
sub
sbb
adc
movsl
xchg
aaa
pop
std
mov
add
test
push
mov
xchg
mov
pushf
rep
movsl
je
adc
fisttpl
dec
lret
and
jnp
inc
jnp
push
and
cltd
mov
xor
cmp
push
xor
xor
adc
rcr
xchg
xchg
stos
pop
pop
mov
and
cmp
inc
mov
ss
mov
jmp
out
sub
shll
call
cli
icebp
popf
cmpl
cmp
xchg
cmp
daa
arpl
pop
add
push
xchg
in
dec
scas
add
rcr
push
pop
fisubrl
andl
mov
mov
cmpl
push
dec
stos
shlb
aam
dec
bound
jg
sar
pop
jmp
and
cmp
sbb
les
sbb
xchg
ss
adc
mov
aaa
es
and
out
enter
jnp
inc
stc
inc
sub
lcall
and
or
int
enter
popf
xor
out
call
ss
icebp
pop
out
sub
clc
jecxz
leave
xchg
cmp
adc
shrd
cli
sysret
pop
inc
mov
fwait
mov
inc
xchg
scas
vmwrite
mov
in
or
xchg
les
inc
jecxz
call
imul
cwtl
and
mov
inc
gs
int3
sub
mov
add
out
add
push
popf
jmp
sub
repz
andl
and
jmp
cmpsb
push
mull
lods
faddl
inc
out
mov
std
xchg
dec
pusha
scas
jo
out
sahf
sti
adc
jb
arpl
mov
mov
test
xlat
adc
push
inc
push
lea
mov
inc
jbe
movsl
icebp
add
insl
stc
sbb
lret
jmp
mov
fisttpll
adc
hlt
aad
out
jmp
mov
add
popa
xor
mov
sbb
insl
xchg
out
xchg
fisttps
scas
xchg
xor
mov
dec
add
inc
sub
sub
std
sub
mov
push
loop
add
push
ss
inc
fmuls
pop
stos
rcrb
stc
or
jg
js
mov
fdivrp
dec
bound
jb
mov
sbb
scas
test
shrl
add
jmp
stc
in
jp
mov
mov
mov
ss
imul
cmpsb
call
sarb
jne
shrl
sbb
cmp
mov
xor
loop
mov
arpl
inc
gs
cs
sbb
insl
or
fwait
mov
and
push
sbb
fcomps
mov
outsb
insl
push
cmpsb
xor
stos
outsb
adc
xor
lock
adc
lea
clc
pop
jecxz
ja
jge
imul
ja
cmp
cmp
add
pop
cmpsb
xchg
test
cmp
iret
stos
mov
pop
clc
mov
out
popa
dec
mov
push
xlat
pop
sub
cltd
jle
clc
leave
out
ret
jb
lcall
jmp
cmp
push
mov
imul
fcmovnb
xchg
ja
dec
push
cmp
pop
add
push
sahf
mov
js
mov
adc
shlb
es
scas
popa
fcoml
pop
mov
sub
jmp
pusha
lds
cmpsb
sbb
inc
js
add
fchs
rcll
jns
jae
xor
bound
popf
int
fnstenv
bound
push
push
test
cmpsl
add
out
rdtsc
lcall
jno
test
jmp
add
xchg
cld
mov
mov
dec
jo
xor
vcmpps
xchg
pop
jmp
andb
bound
cli
loope
sbb
push
mov
loop
repz
es
cli
mov
mov
dec
test
xchg
negl
and
adc
in
pop
push
xchg
push
fiadds
insb
leave
dec
lahf
push
fimuls
inc
movsl
gs
add
inc
outsb
lea
inc
pusha
dec
pop
mulb
dec
mov
inc
fwait
or
pop
inc
mov
lods
mov
stos
movsl
sbb
add
xor
es
lods
test
mov
sbb
xchg
or
mov
push
mov
lea
hlt
adc
mov
sub
lods
hlt
sahf
es
cmp
not
sbb
add
cmp
xchg
mov
mov
lret
stos
stos
testb
insl
test
lahf
nop
iret
jg
sbb
xchg
sub
or
jb
pop
cmpsl
xchg
mov
xchg
xchg
clc
notl
xorl
in
push
mov
sub
inc
or
push
loopne
mov
xlat
mov
push
scas
lds
aas
lock
outsl
daa
out
in
cmp
pop
xchg
add
aam
mov
pusha
jle
lock
lea
in
ret
mov
fldcw
mov
xchg
stc
loop
pop
gs
mov
cmp
movsb
sbb
mov
loope
aaa
add
imulb
dec
and
lea
out
push
mov
popf
jo
mov
ret
repz
call
decb
dec
cld
imul
scas
sbb
mov
push
loope
ficoms
orb
cmp
test
movsl
pop
sub
dec
mov
es
in
shrl
lods
sbb
nop
sti
xchg
movsl
xchg
js
cmc
inc
ljmp
in
nop
testb
xchg
pop
imul
lret
fs
fstpt
pop
pusha
mov
or
adc
jge
addl
sub
mov
mov
test
adc
or
bswap
push
cltd
jg
jbe
stc
imul
scas
pop
negb
lahf
sbb
rorb
sbb
cmp
sahf
aad
jg
xlat
lds
icebp
mov
push
leave
fwait
ret
mov
daa
pop
mov
ss
push
sub
push
lret
por
inc
pop
ja
jnp
icebp
cli
jge
lcall
sbb
lahf
divb
imul
jge
inc
ja
mov
lcall
cwtl
push
fiadds
and
mov
cmpb
syscall
lods
out
xor
enter
mov
mov
cltd
push
ror
push
sarb
into
out
inc
nop
stos
sbb
jb
dec
movsb
insl
push
je
or
cmpsb
test
adc
pusha
adc
adc
or
mov
push
jmp
push
xor
les
jne
repnz
ret
aam
jl
push
pop
mov
clc
add
je
jnp
idivl
inc
in
mov
in
loop
xchg
mov
das
mov
mov
stos
mov
or
and
pop
sub
push
and
leave
and
jl
aaa
and
movsb
jbe
inc
pop
mov
sub
mov
and
cmp
nop
push
xlat
push
mov
mov
cld
pop
pop
mov
scas
adc
sub
subb
cmp
xchg
add
lcall
inc
or
push
inc
mov
or
push
or
insb
das
jae
xor
mov
or
in
gs
push
cmp
shrb
enter
testb
push
sarb
sub
jl
pop
imul
or
inc
lahf
push
hlt
xchg
push
dec
xchg
cs
mov
lea
xchg
cld
mov
jbe
mov
lret
sub
and
movsb
adc
push
dec
jp
xor
in
shrb
jne
out
scas
popa
xchg
adc
repnz
sbb
xchg
and
adc
pop
andb
push
add
add
call
roll
mov
sub
mov
ss
out
int
adc
ret
inc
cmp
lret
aad
movsl
pop
je
ret
lds
or
jmp
jnp
and
cmp
hlt
fwait
mov
xchg
sbb
repz
lock
push
xor
xchg
shrb
push
sub
cmpsb
mov
pop
push
sub
sub
daa
push
faddl
iret
fsubs
int
lcall
out
pop
cwtl
add
scas
aaa
xchg
and
mov
mov
mov
or
pop
sbb
pop
adc
in
mov
sbb
aaa
pop
add
fisttpll
ret
sbb
jle
loopne
pusha
sbb
inc
pop
sub
lds
sbb
jl
jg
fs
ljmp
pop
xor
add
xor
and
xchg
mov
xlat
mov
scas
sub
fwait
mov
in
and
fcmovnu
mov
movsl
inc
jo
rclb
push
push
push
ret
pop
pop
lret
cmpsl
dec
mov
jp
cmpl
or
or
sahf
psraw
pop
fs
sbb
sarb
add
cmp
jge
mov
std
sub
dec
daa
mov
xor
shlb
in
fcmovnbe
dec
fiadds
inc
adc
lods
jbe
sti
andb
test
mov
insb
jae
popf
adc
xorb
or
aaa
popf
adc
cs
imul
repz
push
subl
jb
dec
sub
lret
icebp
push
daa
outsl
mov
cmpsl
push
pop
adc
xor
jp
xchg
packuswb
pop
cmp
or
daa
sbb
xchg
push
push
or
xchg
mov
insl
xor
fs
pop
mov
jmp
dec
mov
int3
and
inc
mov
push
outsl
inc
js
test
mov
dec
dec
in
or
push
cmp
sbb
and
daa
das
lret
or
xchg
dec
add
cmp
mov
dec
jae
push
cmc
sbb
mov
pop
popa
ja
psllq
mov
push
inc
rcll
vcmpss
mov
pusha
add
fs
cltd
in
sbb
push
cmp
xchg
mov
mov
mov
testb
adc
fcmovb
dec
pop
pop
das
inc
pop
orps
gs
add
psubd
lahf
push
sbb
lcall
inc
popf
inc
outsl
out
leave
loopne
int
outsl
pop
mov
ss
mov
es
lock
xor
adc
xor
loopne
mov
cmpsb
mov
outsl
jbe
pop
rolb
mov
dec
inc
mov
xor
xor
inc
cmp
cmp
hlt
sbb
cmp
sub
aaa
out
sbb
out
or
fdiv
test
adcb
xchg
daa
xchg
mov
jno
iret
adc
outsl
pop
push
lea
dec
mov
test
mov
adc
xchg
jmp
loop
mov
mov
add
dec
add
xor
mov
pop
jae
add
add
ljmp
pop
gs
imul
or
mov
fwait
dec
repz
mov
xor
xor
lock
leave
loop
es
popf
inc
mov
clc
xchg
dec
dec
sbb
pop
fistl
sub
clc
push
hlt
cmpsl
and
test
mov
daa
stos
xchg
pop
repnz
adc
sub
ds
jns
out
rorl
popa
sub
jbe
mov
imul
int3
mov
jno
jne
inc
fsubrs
inc
lods
sub
fimull
lahf
or
adc
mov
pushf
jl
sbb
cmp
mov
bound
fwait
mov
nop
pop
cld
adc
jns
push
lds
ret
dec
inc
mov
mov
jno
fadd
adc
in
xor
and
sets
enter
cmpsb
adc
stos
mov
sarl
add
push
pop
rcrb
dec
mov
popa
stos
add
int3
test
call
xor
out
xor
mov
repz
mov
cmp
ficoml
popa
arpl
or
pushf
push
mov
or
mov
cmp
or
or
flds
pop
incb
mov
jmp
xor
inc
es
addr16
rcll
mov
in
aam
dec
jnp
popa
icebp
repnz
ret
js
imul
cmpsl
nop
es
push
loope
mov
ds
arpl
xchg
int
cld
add
sub
mov
xor
mov
cltd
fsts
xchg
repnz
ret
jmp
lret
sub
lock
ljmp
cmc
pusha
sahf
out
fbstp
pop
lret
push
add
inc
or
mov
sbb
pop
or
xorl
xor
push
int3
sbb
sub
daa
into
pop
mov
test
iret
pop
loope
stos
ret
lock
addr16
pushf
call
dec
xchg
out
xchg
or
sbb
jecxz
mov
das
fdivs
mov
orl
lock
fimull
sbbl
movsl
push
push
rol
shrb
lock
popl
jbe
loop
in
jns
or
jecxz
mov
pop
mov
adc
xchg
push
icebp
hlt
call
std
xchg
addl
adc
push
shl
mov
mov
mov
push
outsl
paddb
dec
mov
inc
in
lret
daa
fisubs
xchg
push
mov
inc
popl
or
mov
cwtl
mov
shlb
jecxz
jecxz
jns
push
cwtl
and
sbbl
rolb
mov
sub
cmpsl
test
push
or
mov
movsl
leave
neg
xchg
sub
lret
dec
push
mov
push
sbb
bound
xor
call
inc
push
lods
xchg
dec
insb
mov
pop
cltd
fiadds
pop
lcall
roll
push
and
cmp
inc
xor
cwtl
ficomps
adc
lods
fisubl
repz
sbb
imul
adc
adc
cmp
les
leave
ljmp
subl
mov
xchg
jnp
test
jne
mov
call
inc
lods
sbb
lds
fiaddl
lret
and
stc
movsl
outsb
lret
aad
xlat
xor
jl
je
orb
inc
mov
pop
mov
fs
cs
pop
cmp
xorl
pusha
cmp
mov
cmp
nop
es
inc
jmp
loopne
data16
mulb
jl
sbb
sahf
xchg
push
mov
push
xchg
inc
mov
outsb
adc
mov
cwtl
push
cmp
cmpsl
repnz
cs
pop
dec
adc
call
xor
jp
lahf
sub
mov
scas
mov
shlb
ret
lret
ficomps
mov
call
and
pop
call
out
dec
stos
jmp
push
push
pop
fcoms
ret
test
inc
mov
adc
mov
cs
cmp
sbb
mov
mov
xchg
xchg
int3
jmp
lret
lret
ret
out
mov
inc
cli
mov
fsubrl
mov
add
js
pop
jnp
jae
xchg
push
mov
mov
enter
imul
pop
and
insb
and
push
in
loope
pop
shld
shr
lds
jge
test
push
test
arpl
pop
out
push
sbb
mov
fsubs
inc
popf
fisttpll
xchg
addl
test
fiadds
add
xlat
cmp
xor
divl
loopne
lret
lds
push
dec
mov
jmp
ret
push
idivb
jns
je
cmp
push
adc
in
scas
test
sbb
roll
mov
prefetchwt1
cmpsb
xchg
sub
icebp
pop
sbb
cltd
and
add
rcrl
fs
mov
js
ja
repz
call
out
nop
jg
loope
jno
xor
lock
mov
ja
nop
cmp
cmc
push
fiadds
aas
or
cmp
mov
fdivs
and
aas
scas
sub
jmp
divb
iret
nop
fsubrs
jle
stc
ja
mov
cwtl
imul
loope
jmp
dec
jmp
xor
or
gs
mov
hlt
add
fildl
mov
and
fisubs
scas
dec
daa
fnstenv
sub
dec
pop
push
inc
inc
pop
lret
push
pop
or
ret
js
jmp
push
or
out
lods
xor
leave
mov
adc
mov
pop
push
xchg
and
and
popf
sub
addr16
int3
call
sahf
inc
fisttpll
call
cmpsl
ds
iret
xor
jecxz
push
adc
push
adc
jecxz
test
mul
mov
outsb
push
and
outsl
in
in
adc
out
fwait
sbb
or
lods
sti
lret
adc
mov
pop
xor
cmp
mov
and
ss
and
scas
shll
mov
push
mov
and
ja
out
stos
out
sub
std
divb
das
cld
pop
call
mov
add
cmp
iret
call
mov
jge
cmp
pop
or
inc
mov
test
pop
dec
pop
jecxz
or
dec
jmp
adc
je
das
pop
adc
jg
ret
shl
icebp
fdivp
cmc
dec
imul
out
dec
or
pusha
push
daa
inc
jge
add
sub
scas
stos
or
add
mov
and
mov
mov
repnz
jne
jbe
imul
jp
inc
or
bnd
jmp
ret
inc
dec
in
lock
ljmp
popf
out
scas
xchg
sbb
or
and
push
adc
jno
ds
dec
xchg
cmp
jge
jbe
je
out
mov
icebp
ffreep
adc
adc
dec
ret
lds
leave
into
sbb
jno
notl
jp
xchg
test
inc
mov
loopne
inc
and
mov
pop
int3
jecxz
xchg
or
and
inc
xchg
push
jmp
lea
sbb
dec
leave
jae
in
in
pusha
cmp
jle
push
sahf
fbstp
xchg
rolb
daa
push
stos
mov
fidivrs
insb
jp
xor
cmc
cwtl
imul
or
stc
mov
repz
testl
xchg
mov
iret
rcr
rcl
and
cmp
inc
mov
mov
cmp
push
push
sub
dec
dec
sub
mov
outsl
in
repnz
hlt
js
sub
xchg
in
push
sbb
pop
aas
lret
and
xchg
je
daa
or
pushf
movsb
sub
shrl
xchg
stos
pop
mov
shrw
mov
xchg
push
or
fs
pop
das
insb
cld
call
std
std
add
shl
push
sahf
outsb
outsb
mov
not
dec
js
pop
rcr
repz
aam
enter
test
inc
cmp
xor
enter
lret
mulb
xchg
cmp
pop
mov
cltd
dec
test
or
dec
push
iret
push
add
xchg
cmc
mov
pop
sbb
sub
xor
sbb
adcl
mov
adc
dec
or
rol
addr16
in
mov
cltd
sub
ficomps
cmpsl
pop
add
sbb
clc
loopne
adc
or
test
test
xor
xor
in
call
cwtl
lahf
fildll
shll
or
arpl
rclb
ret
movsl
aam
sub
inc
lock
mov
aas
loope
xor
cli
sti
cmpsb
in
sub
enter
jmp
negb
dec
add
mov
lock
cmc
add
inc
out
jmp
addr16
sbb
out
popf
fsub
pop
xchg
scas
adc
mov
pop
sarb
xchg
dec
xor
jns
sub
cmp
sbb
mov
cli
fadds
push
adc
dec
inc
adc
sahf
into
mov
imul
faddl
cld
std
push
mov
inc
jne
pop
lcall
pop
arpl
mov
flds
mov
mov
mov
inc
and
add
jno
cmc
pop
and
pop
movsl
xlat
mov
fwait
ret
int3
dec
ja
push
divl
repnz
lods
jb
out
out
cmp
data16
sahf
ss
out
xchg
add
rcll
xchg
dec
int
fs
mov
bsf
dec
adc
mov
cs
jg
pop
movsl
jno
mov
shrl
fisttpll
sti
jb
lds
lahf
testl
negb
or
xchg
xchg
push
sbb
push
lahf
cmp
enter
mov
popa
test
sbb
push
push
sbb
and
mov
pop
pop
mov
push
dec
push
jl
dec
idiv
jnp
jmp
ljmp
cltd
insl
in
in
adc
xchg
cltd
out
sbb
or
lods
adc
mov
decb
das
sub
scas
xor
xlat
mov
and
dec
inc
faddl
enter
ret
jb
ret
div
jge
pop
out
out
jae
fwait
outsl
jne
sbb
outsl
sub
aaa
loopne
lahf
adc
pop
adc
push
cmpsl
sub
push
and
xor
cmpsl
pop
cmp
fcomp
mov
push
mov
ficoml
mov
dec
inc
movsb
xlat
inc
scas
inc
stc
mov
jp
aad
nop
insb
jl
jecxz
shll
jecxz
addr16
cmp
loop
dec
mov
or
ds
add
pop
push
mov
pop
jo
pop
stc
mov
sub
pop
push
stos
mov
shlb
pop
rcll
push
lret
lret
dec
int3
jb
mov
call
mov
cwtl
sbb
lods
adc
xchg
popa
inc
push
in
sub
mov
aaa
dec
aas
mov
cmp
cmp
shll
xor
rolb
fwait
daa
aad
dec
ret
adc
jns
stc
jbe
cld
leave
dec
sub
add
les
out
ljmp
fcoms
push
and
mov
push
pop
int3
pop
and
cltd
arpl
sbb
stc
mov
jo
test
movsb
iret
xor
popa
cld
es
ss
out
scas
in
test
insb
inc
cli
mov
and
inc
xchg
dec
popf
jbe
shlb
out
jmp
push
inc
cmc
sti
xchg
mov
int
jne
pop
sbb
ds
push
adc
mov
cmp
mov
dec
loope
or
and
cwtl
jne
adc
pop
iret
shl
push
rclb
cltd
nop
add
adc
int3
push
test
out
call
pop
xor
or
cwtl
push
xchg
xchg
jmp
mov
add
xor
dec
orl
dec
int3
mov
sub
test
lods
cmp
pop
es
push
pop
xor
push
push
sub
dec
push
sub
inc
dec
adc
jp
addr16
in
sbb
mov
out
cmc
cs
repz
mov
mov
xchg
mov
ss
dec
in
mov
cmpsl
ja
ljmp
adc
mov
pop
pop
ss
fdivl
push
jle
leave
mov
jno
mov
pop
jmp
pusha
popa
imulb
inc
out
pushf
psrad
jle
sti
mov
push
xchg
mov
test
or
loop
push
mov
scas
jp
mov
push
dec
fidivl
push
mov
or
pop
lea
mov
pop
rcl
inc
inc
fisttpll
and
stos
jb
leave
jp
pop
jge
outsb
cld
pushl
loope
ja
ffree
fs
sbb
lds
or
adc
mov
cmp
mov
pop
cs
or
cmp
and
jp
stc
int3
rorb
jge
push
inc
jnp
int3
mov
rcrl
pushf
ljmp
lods
out
je
es
loope
adc
in
mov
sbb
mov
add
loopne
js
cmp
mov
test
pop
lret
arpl
movsl
pop
test
pop
rcll
test
push
ret
bt
xor
inc
stc
push
outsb
repz
jo
sbb
test
loopne
cmp
fiadds
cmpsb
adcb
nop
lret
dec
fimull
xor
push
and
and
and
mov
push
fisttpll
add
xlat
lds
clc
negb
cmp
mov
jne
sub
mov
inc
imul
xlat
out
mov
mov
push
and
sbb
mov
add
cmp
pop
scas
inc
fcmovnu
mov
fnstcw
scas
pop
dec
enter
fsubr
inc
inc
pop
push
sti
in
enter
push
sbb
pushf
cld
or
mov
bound
mov
jge
sbb
jnp
sub
sub
or
scas
test
fisttpll
daa
fs
dec
mov
pop
sub
sub
fdivrl
iret
and
push
pop
dec
jl
outsb
and
jecxz
je
sbb
jecxz
popf
pusha
push
pushf
xor
inc
or
sbb
push
add
repnz
out
cltd
add
mov
mov
cmp
jbe
test
repz
stos
repz
fldcw
leave
aam
clc
rcrb
push
pop
xchg
ret
inc
fisttps
scas
js
lock
pushf
cld
inc
pop
jns
je
popa
stc
lcall
adc
loop
adc
test
adc
adc
shrl
pop
cmp
es
stos
fimull
sub
lods
loope
ss
mov
enter
add
xchg
inc
nop
mov
jns
enter
cli
jg
popa
jl
jl
jb
rclb
xchg
adc
or
sahf
or
adc
add
xorb
cmp
jl
sub
outsb
ffree
adc
hlt
enter
aam
fadd
aad
dec
mov
jae
jns
outsl
jge
push
out
push
leave
jl
jo
mov
outsb
pop
sbb
xor
sbb
sahf
aam
add
mov
cmp
sti
mov
mov
lods
cld
mov
mov
pop
movsl
jnp
ljmp
cs
inc
call
cli
scas
sarl
rorl
test
push
push
lcall
inc
incl
out
jg
add
sub
push
jbe
ret
mov
outsb
lret
add
cmp
sbb
fists
or
mov
pop
icebp
int
push
shlb
jne
cmpsb
imul
jb
in
mulb
adc
loop
jl
popf
jecxz
fs
pusha
mov
xor
xchg
imul
cmp
add
pop
lods
sub
and
andb
shlb
jo
dec
fcmovb
dec
dec
rol
rorb
mov
jb
cmp
push
ljmp
cwtl
jne
xchg
push
fwait
xchg
in
popa
jg
sbb
pop
aad
xchg
mov
xor
lods
xor
mov
mov
fldcw
jae
and
push
dec
cmc
movsl
into
cmpsb
jecxz
fld
inc
jp
push
push
dec
jg
adc
repnz
inc
divl
stos
push
daa
repnz
push
ret
adc
into
or
xor
push
dec
test
mov
mov
fcoms
push
add
inc
repz
rcll
add
or
popa
pop
inc
lds
mov
jp
fs
popa
insb
push
sti
cltd
xchg
lret
mov
cwtl
pop
lcall
mov
or
enter
outsb
or
ret
xor
add
sub
and
outsl
cmpsl
push
mov
cmpl
dec
jle
dec
pop
push
aas
sbb
jmp
jge
hlt
nop
flds
fs
in
inc
pop
mov
subb
imul
sahf
cmp
xlat
test
push
or
lret
les
add
cmp
push
jo
aas
cmp
dec
mov
incl
xchg
xchg
stc
icebp
inc
jo
ret
xchg
cld
loop
jp
adc
aam
hlt
dec
sbb
test
sbb
sbb
pop
pop
xchg
push
mov
xchg
jae
sbb
lods
insb
ja
mov
addr16
imul
push
jmp
cmpsb
xor
pop
nop
vpsrlq
repnz
aad
jae
iret
mov
imul
outsl
mov
xor
loope
in
adc
pop
add
adc
cmp
push
repz
push
cmp
mov
add
xchg
sub
cltd
cmp
push
aaa
and
mov
repnz
rcrl
icebp
push
pmuludq
inc
xor
inc
push
jl
shll
adc
loopne
mov
mov
sub
mov
xchg
adc
or
mov
dec
int
jnp
sub
lods
and
fsubr
pop
pop
xchg
mulb
dec
push
adc
shll
cmp
es
ja
std
sbb
loopne
in
dec
adc
mov
inc
add
adc
or
lods
rorl
inc
dec
xchg
mov
pop
sub
sbb
or
mov
insb
cmpsb
daa
dec
mov
leave
dec
repnz
sbb
mov
mov
jl
cmp
xor
popf
repz
lret
in
cwtl
xchg
roll
mov
cs
enter
xchg
mov
xor
pusha
loop
and
fldenv
fldenv
push
hlt
call
out
inc
loopne
mov
ret
lahf
icebp
std
inc
cmp
lds
std
hlt
jo
mov
jmp
out
outsl
pusha
popa
pop
sbb
pushf
pop
sbb
push
push
fists
xor
xchg
rcrl
cld
sub
cmp
loopne
pusha
xchg
in
in
movsl
out
sub
mov
stc
fistpl
mov
hlt
pop
jp
dec
jg
roll
jle
push
jl
mov
out
xchg
popa
mov
out
clc
js
insl
jo
sbb
cli
xchg
sub
xor
mov
andl
mov
stos
test
push
xlat
mov
cltd
jl
jne
jmp
push
or
int3
andl
xor
out
jno
test
jb
jge
nop
and
popa
pop
xor
mov
mov
sbb
movsb
cli
aaa
loopne
mov
dec
lret
popa
jo
cmc
pop
loope
mov
int3
lret
int
rol
out
jb
dec
add
sahf
js
mov
insb
cmpl
dec
jne
outsb
jge
xor
and
mov
fcoml
adc
pushf
mov
mov
ds
sahf
icebp
je
mov
pop
int
iret
scas
arpl
cmpsb
xorl
cmc
out
or
sbb
cmp
outsb
xlat
jl
pop
lock
xchg
pop
or
fwait
fwait
or
lahf
xchg
jne
inc
shl
add
cmp
rorl
test
out
scas
cmp
test
scas
pushf
and
jge
inc
int
inc
xorl
mov
cltd
arpl
adc
popa
bound
xchg
mov
pop
subb
mov
cmp
xchg
je
int3
mov
add
in
test
mov
fwait
rclb
inc
xchg
inc
arpl
pushf
push
inc
inc
rorl
je
inc
sub
xor
jo
mov
sbb
or
xchg
xchg
ds
pushf
dec
mov
jp
mov
xor
aas
sti
cmpsb
test
lcall
sub
sub
sub
pushf
mov
dec
push
jo
out
cmp
jl
sarl
jno
pop
cld
stos
adc
std
adc
jp
test
jge
int3
or
in
dec
or
mov
mov
cmp
movsb
mov
sub
cmc
sbb
inc
fmull
mov
adc
pop
cli
ss
fs
iret
xchg
mov
lock
push
cmp
in
jecxz
push
int
cmp
adc
mov
notb
or
pushf
adc
outsb
shl
dec
mov
cmp
cs
mov
sub
ret
into
cmpsb
inc
je
pop
inc
lods
pop
adc
negl
cmpsb
jl
divl
dec
leave
add
xchg
ljmp
popf
xchg
cmp
dec
data16
jnp
sub
add
addb
dec
mov
dec
lahf
mov
push
push
test
flds
or
cmp
cmp
out
call
movsb
mov
pusha
adc
xchg
sbb
mov
xchg
das
sbb
arpl
xchg
xchg
xor
add
cmp
mov
push
mov
dec
mov
ss
outsl
and
fdivl
rcll
pop
dec
push
dec
adc
lret
jl
es
xor
jb
sbb
popa
or
cmp
adc
xlat
or
sbb
lahf
push
aam
add
sub
mov
mov
pop
mov
sub
arpl
pop
sbb
fs
sti
dec
jp
jmp
inc
outsb
je
add
hlt
cwtl
loope,pt
les
jg
or
pushf
fwait
jno
mov
sbb
pushf
bound
imul
add
mov
mov
push
dec
pop
mov
mov
cs
pop
fnstenv
inc
shrb
aam
inc
inc
dec
push
ficoml
push
jge
jl
int
cmc
jb
call
jecxz
repz
pusha
cmc
cmc
popf
lcall
xchg
jbe
or
movsl
or
clc
filds
test
aaa
xchg
fildl
ja
mov
lods
sub
cmp
push
lods
inc
adc
push
inc
mov
lcall
jmp
arpl
mov
sbb
cmp
push
das
xchg
sbb
adc
in
mov
sar
cmp
cmpl
mov
and
xor
mov
loop
mov
push
push
inc
inc
pop
int
dec
push
push
int3
sahf
mov
jbe
inc
inc
push
add
pop
mov
inc
xchg
stos
adc
js
imul
mov
loopne
adc
xchg
gs
cmpb
mov
lcall
pop
sbb
stos
and
enter
pop
xor
movsb
int3
in
cmp
inc
insb
shrb
loop
js
insb
push
jb
call
xor
loope
inc
adc
adc
cmpsl
movb
sbb
test
add
stos
xor
jae
das
test
push
test
out
mov
xchg
fwait
cmp
sbb
dec
leave
jmp
lret
dec
int
jo
and
jg
insl
out
push
cs
adc
or
in
sbb
xlat
dec
es
pop
leave
cmp
cmp
sbb
fldt
push
sub
dec
bound
jecxz
xor
mov
and
rcr
fcoml
push
enter
idiv
cmc
jecxz
jmp
cli
dec
arpl
dec
in
and
jae
fimull
out
inc
xchg
mov
int
pop
rorl
jbe
push
icebp
lret
dec
int3
in
cmp
mov
dec
push
out
and
out
insb
and
ss
xchg
ds
inc
adc
outsl
bound
out
jb
mov
push
inc
lock
repz
out
mov
ds
jnp
scas
nop
jae
es
add
out
insl
cmpsb
mov
shrl
scas
mov
mov
jle
into
xchg
rcll
adc
push
in
rorb
fmul
fwait
xchg
js
mov
negb
push
outsl
faddl
pop
outsb
in
jnp
es
lods
add
mov
add
ret
or
pop
pop
jp
fstpl
mov
mov
jl
fcmove
nop
sub
fistl
mov
adc
xor
dec
pop
pop
rcl
inc
push
js
adc
push
cmc
or
packuswb
pop
push
pop
sbb
mov
hlt
add
mov
xor
jno
mov
aaa
fcomps
fldl
frstor
jg
gs
push
push
fwait
sbb
rcrb
repnz
iret
jmp
pop
out
mov
insl
je
aas
sbb
sub
push
adc
repnz
push
ss
movnti
and
in
xor
sub
je
and
movsb
dec
rorb
int
jg
sbb
jne
xchg
jno
add
xchg
data16
xchg
shrl
loop
call
bound
sbb
fcoms
daa
jne
or
push
andnps
mov
imul
fldt
mov
cmp
addb
lret
testb
cmp
stc
shlb
push
xchg
and
aas
dec
loope
push
loopne
and
fldt
push
int
cmp
in
fs
inc
enter
shl
scas
adc
jns
mov
mov
or
mov
push
sub
dec
dec
pop
dec
gs
pop
hlt
popl
push
cld
mov
jmp
mov
in
lods
sbb
test
fiaddl
mov
lret
ja
ss
movsb
cmp
or
sub
lods
fisubl
xlat
shrb
cmpsl
dec
or
cmp
inc
jge
dec
xchg
xor
mov
pop
jnp
cwtl
in
sbb
mov
in
in
dec
sbb
aas
pop
push
mov
adc
sahf
stos
mov
add
xchg
xchg
and
int3
mov
nop
push
ret
aad
and
iret
cmp
xchg
jmp
push
dec
bound
jg
stc
push
incl
addr16
jge
loopne
sub
sahf
inc
mov
addr16
lcall
add
das
pop
mov
mov
subl
daa
in
into
subb
sub
lahf
insl
push
into
jecxz
or
and
es
out
pop
jge
mov
imul
insl
lea
xchg
mov
push
and
xor
push
mov
adc
or
test
fisttps
inc
xor
cmp
shrb
jno
inc
sti
jg
push
jne
pusha
dec
push
dec
add
outsb
push
jecxz
sub
mov
cltd
out
or
pop
lcall
sbbb
add
lret
out
push
pop
dec
pop
xor
cltd
sbb
insl
ljmp
pop
or
mov
push
pop
cli
add
add
or
lds
push
imul
cmp
add
and
out
mov
or
sub
adc
jns
add
and
cmp
mov
int
ljmp
rorl
cmc
pop
fcmovbe
insl
lock
dec
xchg
out
imul
and
ljmp
sub
cs
lret
dec
inc
sub
mov
sub
push
jno
mov
xchg
je
jp
cmp
fwait
aaa
xor
lods
imul
das
add
adc
lcall
aad
ja
stc
xor
clc
insl
inc
inc
push
loopne
mov
sbb
outsb
inc
insb
cmpsl
outsl
pop
push
call
int
sarl
adc
xor
fisubrl
fwait
add
aaa
pop
inc
add
lods
sbb
aad
shrb
xlat
xchg
arpl
hlt
es
lahf
jl
cmp
aad
lods
xchg
or
pusha
sub
cmp
jp
push
mov
dec
aaa
or
xchg
test
or
sbb
std
pop
xchg
mov
xor
dec
addl
mov
add
mov
lods
jo
out
aam
in
xor
push
mov
fldlg2
mov
int3
stos
dec
shr
ss
jg
dec
rol
fnstcw
push
push
push
nop
insb
idiv
fsubl
pushf
add
mull
pop
or
or
cmp
or
aaa
adc
mov
lods
mov
sbb
or
ret
rcrb
mov
repnz
mov
aad
fisubrs
pop
inc
jge
test
loopne
jbe
test
mov
ftst
push
hlt
sbbb
push
dec
adc
sbb
rcr
arpl
pop
push
xor
lret
push
mov
mov
jecxz
ficoms
gs
dec
iret
js
rol
and
divl
icebp
jbe
and
nop
fistpl
mov
ficomps
js
or
cmp
je
dec
and
ja
call
lods
mov
dec
cmpsl
mov
andb
pop
mov
push
leave
ret
scas
dec
dec
enter
jl
scas
lock
je
outsb
push
jl,pt
loopne
in
movsb
gs
sbb
mov
out
dec
mov
es
xchg
mov
stos
jnp
add
mov
fcmovb
pop
sub
rcr
and
hlt
iret
mov
out
rcll
xchg
xor
pop
lock
ret
iret
mov
insl
mov
jne
xor
push
xchg
lret
inc
cli
mov
and
pop
mov
and
mov
sbb
movsl
lds
fnstenv
mov
lods
fidivrs
xchg
outsb
mov
sarb
lret
sbb
in
notl
cmp
daa
push
aaa
lock
push
xchg
lock
pusha
xchg
pusha
mov
cwtl
add
mov
mov
addb
aam
xchg
mov
pop
call
add
ret
jl
or
jb
fidivs
iret
out
les
push
in
adc
stc
in
xor
lods
add
gs
out
inc
add
lock
ds
sbb
outsb
pop
adc
xor
jns
cmp
adc
jo
push
loopne
jne
jp
movsl
dec
or
les
push
jns
adc
insb
inc
push
es
outsb
jl,pt
in
push
pushf
sub
nop
fsubl
popa
popf
testl
xchg
dec
push
pop
pushf
cmp
inc
dec
inc
cmp
cmp
jb
stc
daa
jp
repz
pop
movsb
dec
mov
enter
stos
rcrb
into
clc
pop
xchg
icebp
inc
sub
js
xlat
and
jo
jmp
cmp
ss
sbb
fstpl
adc
stos
xchg
mov
add
pop
xchg
and
pop
icebp
pop
mov
pushf
dec
rcrb
pop
push
iret
fcmove
push
xchg
outsl
inc
or
inc
iret
shlb
hlt
repnz
clc
cmp
cmc
sbb
jmp
stc
inc
sbb
adc
or
push
mov
mov
and
mov
xlat
cmpsb
lret
mov
sub
push
imul
fs
icebp
dec
sbb
xchg
push
icebp
sbb
cld
jmp
jbe
rorb
pushf
aas
hlt
stos
repnz
popa
pop
mov
les
or
jmp
xchg
or
adc
pushf
lret
fimuls
mov
xor
test
inc
cmpsl
shlb
or
fisttpl
pop
ror
fstpt
cmp
dec
rol
xor
aad
jnp
dec
adc
inc
or
outsb
jns
imul
jmp
ljmp
dec
jp
rorl
xchg
sbb
add
mov
mov
sub
cmp
mov
repz
lahf
pop
js
push
push
xchg
mov
je
jmp
lret
std
push
mov
cmp
pop
or
mov
fnstsw
push
nop
mov
push
dec
in
mov
das
test
xor
sbb
xlat
cmpsl
movsl
aad
dec
call
xchg
jg
push
mov
dec
inc
inc
scas
das
pop
jo
jnp
cmp
adc
pusha
push
jmp
mov
or
shll
mov
js
adc
lahf
xchg
adc
leave
mov
mov
sub
jns
daa
nop
sub
push
add
lods
inc
int
call
dec
leave
xlat
notb
daa
ljmp
and
arpl
sti
je
in
repnz
adc
pushf
test
xchg
pop
gs
fs
mov
sub
fldcw
mov
and
or
pushf
shll
mov
dec
jecxz
xchg
mov
int3
xchg
repnz
inc
sti
clc
movsb
insl
test
fincstp
out
jb
pop
shr
adc
sbb
or
pop
cmp
xchg
in
mov
add
cmp
mov
pop
fistps
mov
filds
inc
inc
jg
inc
dec
fldt
addb
pop
in
jmp
and
fucompp
cmp
gs
sbb
xchg
dec
out
mov
sub
add
imulb
lods
daa
sub
cmpsl
sub
pop
in
test
add
ljmp
cmc
pop
adc
sub
cmpsl
in
mov
std
arpl
loopne
dec
clc
inc
mov
add
xchg
fdivs
movb
and
mov
cmp
daa
aad
pop
pop
iret
cmpsl
push
mov
push
jno
inc
arpl
lds
adc
dec
add
sbb
clc
xchg
in
testl
in
loop
sbb
insl
addl
pushf
xchg
push
mov
mov
mov
subb
sub
cmp
shlb
jmp
push
cmpsl
fisubrl
pop
inc
cmp
lcall
iret
inc
roll
jl
bound
adc
cmp
adc
or
test
add
out
mov
sti
movsb
orb
mov
mov
icebp
mov
shrl
and
xchg
rorb
scas
push
add
or
std
adc
bnd
jmp
imul
adc
arpl
add
sub
push
mov
daa
sti
xchg
xor
mov
shlb
mov
push
cmp
jo
pop
pop
lcall
sub
int3
push
mov
in
mulb
cmp
out
xor
in
popa
adc
cltd
in
pop
xor
in
push
jle
out
inc
jo
xor
adcb
mov
mov
adc
pop
or
mov
push
ss
pop
out
dec
out
mov
shl
sti
xor
inc
cmp
je
add
lds
insb
sbb
hlt
mov
loop
fwait
pop
fs
enter
ret
repz
mov
aas
sarl
adc
jo
cmpsb
sub
and
xor
cmpsb
add
scas
lret
ljmp
std
fdivr
iret
pop
enter
je
cltd
jb
repnz
xor
imul
je
sub
sbb
dec
aas
arpl
lcall
cmp
mov
nop
sub
and
fnstenv
les
cmpsb
jp
or
ja
jmp
jbe
cli
in
fsts
imulb
nop
fdivp
adc
mov
insl
add
loop
xor
popl
push
into
adc
popf
inc
test
or
cmp
test
int
sahf
movsl
lahf
addr16
shll
pushf
daa
mov
pop
aas
and
int
call
mov
notb
test
shll
outsb
mov
xchg
in
ljmp
nop
inc
mov
push
fcoms
lcall
inc
test
cmp
or
outsl
test
or
sub
lea
mov
xor
adc
shlb
dec
jge
int3
sbbb
push
arpl
lret
ss
push
fisttpll
sbb
jecxz
xchg
subb
jne
add
mov
fnsave
loopne
sub
lret
ss
fidivl
cmpsl
push
shl
fmul
aas
fisttpll
dec
push
mov
les
out
jecxz
jno
jmp
push
jecxz
mov
xchg
cs
add
cmp
adc
mov
add
shrb
mov
cmp
push
fists
adc
or
add
pushf
es
rcll
enter
inc
out
enter
sti
dec
mov
xor
ja
repz
popa
adc
mov
ds
xor
xchg
cld
xchg
or
aaa
lds
mov
sbb
loop
mov
sub
mov
and
pop
mov
into
mov
fstpl
scas
mov
jmp
test
jmp
lds
xor
sbb
mov
sbb
jne
popf
aas
rolb
std
repnz
or
mov
idivl
scas
call
xor
add
and
push
rcrb
xchg
jno
inc
jae
insl
inc
inc
jmp
das
rcl
or
loope
rclb
jmp
shlb
sub
cwtl
xchg
imul
jmp
in
pusha
xchg
push
call
xor
sub
pop
and
mov
jns
ficompl
scas
dec
icebp
dec
rcll
xor
jle
jp
jno
in
inc
adc
mov
lods
rorl
gs
or
adc
in
addl
test
loope
in
push
lods
repnz
sarl
pop
mov
sbb
pop
xchg
enter
shlb
insb
enter
enter
push
cld
mov
dec
arpl
test
movsb
inc
bound
pop
data16
mov
pop
je
out
push
in
dec
xor
aam
or
arpl
push
add
or
and
jg
xchg
cld
xor
dec
mov
dec
insb
int3
clc
lds
push
jnp
mov
jnp
sbb
stc
xchg
lea
inc
in
xchg
mov
push
adc
cli
dec
xchg
decl
xor
jne
push
push
stos
cmp
jp
and
jge
add
inc
lock
fimuls
les
ror
xchg
into
in
inc
adc
shll
aaa
inc
cmp
adc
mov
pop
gs
pop
xchg
pushf
in
mov
add
adc
mov
xor
mov
mov
mov
lods
adc
cmpsl
jmp
dec
rcrl
push
pop
mov
sarl
push
mov
lods
jns
cmpsl
add
in
outsl
ljmp
xchg
jnp
jle
sbb
sbb
sbb
dec
pop
imul
push
aas
je
mov
insb
lea
cmpl
sub
dec
push
pop
ret
jnp
mov
les
stc
mov
jbe
dec
repz
ds
inc
scas
mov
mov
popa
sbb
or
add
or
lea
lret
clc
mov
cs
pop
add
push
xchg
inc
lret
rclb
sub
adc
jno
fstpl
sub
cmp
and
sbb
vmovapd
cmpxchg
hlt
sub
push
mov
lret
cs
add
mov
outsl
and
lods
and
xor
int3
lods
frstor
arpl
jge
ret
ret
sahf
imul
sbb
push
mov
test
xor
sbb
mov
lea
pop
or
fisttps
test
negl
outsl
stos
insb
mov
gs
cmp
push
push
jmp
dec
add
push
mov
call
sub
popa
add
add
mov
cltd
xor
push
xchg
loop
adcl
adc
fldcw
sub
mov
sub
xor
push
scas
jno
jle
pusha
cmc
imul
push
fadd
not
filds
push
cwtl
sbb
imul
jmp
jb
sbb
arpl
insb
jmp
add
in
mov
or
cmpsb
adc
aas
add
pop
test
stos
fdivs
pop
mov
inc
test
mov
pop
jnp
xchg
loope
imul
push
inc
inc
fyl2xp1
cli
push
jge
shl
repz
push
shr
call
in
dec
cwtl
gs
sbb
rorb
inc
mov
xchg
mov
jno
mov
out
sbb
bound
addr16
sbb
push
cwtl
push
leave
cmp
adc
jnp
mov
adc
hlt
push
imul
push
lahf
mov
xchg
mov
lea
add
mov
bound
fwait
mov
nop
pop
sbb
mov
or
call
inc
icebp
xor
jb
jg
cld
sub
and
rcr
dec
pop
loope
rcrl
enter
pop
ffreep
mov
or
incb
idivl
insb
mov
mov
and
lods
aas
cltd
and
pop
orl
push
add
mov
mov
cwtl
sub
scas
mulb
push
and
outsb
outsl
pop
lcall
lret
dec
xchg
stc
ret
or
mov
clc
add
xchg
icebp
cmp
jne
push
out
xor
bound
fwait
mov
daa
xchg
rclb
sub
push
mov
leave
xor
inc
mov
jnp
mov
pop
sub
lods
hlt
or
imul
add
enter
xchg
mov
lea
mov
ds
mov
xor
lods
lret
cmp
inc
lcall
enter
shrb
sarb
jle
out
test
add
add
and
dec
les
pop
test
xorb
ds
xchg
inc
adc
or
imul
push
mov
xchg
jno
mov
xchg
pop
pop
pop
pop
shl
inc
je
inc
out
cmc
dec
inc
ret
dec
mov
sbb
insl
les
mov
in
insl
fwait
jmp
test
or
popa
mov
mov
sub
rolb
pop
aas
fldl
xor
cwtl
adc
push
daa
imul
lea
fistl
mov
mov
inc
push
arpl
std
jne
imul
or
sbb
xchg
outsb
bound
stos
push
xchg
out
les
xchg
or
sub
add
mov
andb
lcall
dec
bound
push
rcrl
mov
cmp
or
or
mov
jge
xor
nop
stc
mov
ret
cmp
les
push
jb
sbbl
add
sub
jge
mov
push
and
mov
rcll
dec
ror
call
dec
test
int
jmp
aaa
inc
xchg
inc
divl
ljmp
aad
out
adc
pop
jg
fs
stos
sbb
cs
mov
fisttps
bound
inc
lcall
fidivs
mov
fcompl
dec
cs
jp
fmull
andb
lcall
mov
addr16
sbb
in
nop
dec
popa
mov
adc
out
mov
inc
mov
jp,pn
aaa
aad
jle
sahf
scas
aad
out
lock
pop
pop
movsl
fsts
push
enter
lret
push
in
inc
mov
push
sar
shl
or
cmp
and
stos
in
ja
popa
addb
push
cmc
fistl
bound
or
adc
mov
and
mov
push
cwtl
push
add
mov
push
pop
jb
sbb
int
jl
iret
ret
add
loop
sub
inc
test
add
xor
jg
subb
push
sbb
pushf
movsb
loop
mov
sbb
loop
mov
cld
xor
push
mov
mov
repnz
jo
and
sbb
dec
or
add
or
xor
stos
ja
iret
loop
jbe
jae
xor
int3
hlt
push
sbb
mov
xchg
pop
mov
pop
mov
or
dec
lods
cmpsl
movl
fnstcw
sub
jl
sub
pop
mov
adc
out
jg
adc
push
movb
inc
mov
popf
jo
jle
jns
inc
popf
fbstp
fs
xchg
adc
pop
popa
or
mov
or
mov
ret
or
dec
xor
xor
pop
lcall
sub
movsl
repz
pop
jo
test
xchg
jmp
cltd
cmpl
rcrb
lret
push
pushf
repz
shr
sbb
arpl
mov
push
jae
xchg
lcall
jmp
lods
mov
mov
sub
cs
shlb
dec
dec
mov
aam
sub
div
sub
pop
pop
in
movsl
fsubp
and
inc
insb
pushf
sbb
mov
xchg
sub
popa
or
mov
mov
jg
ret
insl
scas
dec
and
and
fcompp
movsl
inc
push
cmpl
mov
mov
jb
in
jno
incl
in
je
hlt
icebp
pop
dec
jecxz
sahf
arpl
cwtl
lds
xchg
pop
or
add
mov
mov
sub
fldenv
mov
fldcw
and
pusha
jp
push
fists
loopne
pop
pop
out
into
int3
push
pusha
cwtl
sbb
popa
lock
cmp
push
loop
add
cmc
imul
aam
aaa
add
orb
cmp
or
ss
scas
in
cld
xor
loop
jnp
fsubl
and
insl
push
out
push
outsb
mov
jmp
imul
push
stc
call
pusha
sbb
add
push
idivl
or
test
inc
xchg
clc
mov
mov
jne
sub
pop
add
dec
int3
movsl
aaa
fildll
push
inc
adcl
mov
sbb
repnz
mov
aam
lock
pop
int
xchg
std
pushf
sbb
das
pusha
lea
stos
cmpsl
xchg
cmp
les
xor
mov
mov
push
xor
cmpsl
adc
int
push
sub
into
andb
pop
add
insb
xor
mov
adc
ss
ljmp
pusha
ss
cmpsl
sbb
xor
outsl
jp
sub
xchg
inc
adc
cmp
add
cmpsb
sub
test
mov
xor
push
cs
dec
sub
aaa
cwtl
aad
push
dec
add
push
movsb
int
jno
push
inc
push
or
pop
cmc
iret
push
lret
xor
inc
ljmp
in
out
movsb
push
imul
mov
aas
sub
cmp
push
pop
add
dec
inc
int
cmpsb
loop
fadd
add
fmul
pop
aas
aad
inc
sub
xchg
mov
pop
int3
sahf
idivl
insl
and
jb
jb
mov
cmp
mov
adc
test
mov
adcb
je
xor
in
das
xor
fstp
dec
mov
push
sahf
add
movsb
cld
inc
inc
jl
xchg
or
pop
push
jns
outsl
cmc
cmp
ret
sti
adc
popw
jecxz
sbb
adc
gs
pop
mov
stos
addl
fimull
add
cld
xorb
cmpsl
jge
pop
mov
das
ss
fcoms
cmp
dec
pop
adc
je
push
inc
insb
ja
popl
jbe
std
push
inc
xor
or
push
addr16
push
sbb
fs
sbb
mov
pop
sub
lret
xchg
sahf
ds
cmp
outsl
lds
xor
push
xchg
jmp
repz
pop
rcll
mov
mov
push
jmp
mulb
sub
test
mov
mov
cmpsb
or
pop
cmp
dec
sbb
pop
add
mov
mov
sub
cmp
aas
xor
push
mov
and
movsl
shlb
js
dec
repnz
std
std
mov
inc
in
test
adc
gs
jnp
jecxz
test
pusha
cwtl
jo
add
mov
or
test
push
jnp
je
pop
push
mov
jg
icebp
dec
mov
dec
rcrb
dec
bound
xchg
adc
lahf
dec
inc
cli
data16
popf
jns
add
lret
pop
mov
loopne
sbb
sbb
ja
push
mov
sbb
movl
mov
fiaddl
xor
test
mov
pop
imul
ret
cmpsl
rcll
lret
ret
mov
cmc
shl
repz
and
sub
scas
les
mov
loop
sarb
add
and
mov
fdivs
es
mov
ja
rcrb
enter
fcmovbe
dec
rorb
cld
inc
dec
xchg
sti
or
scas
inc
mov
hlt
outsl
imul
xchg
in
mov
or
add
sarb
je
aam
adc
xor
sub
xor
aam
imul
rcl
and
in
mov
cld
cmpsb
enter
dec
fiaddl
mov
sbb
adc
dec
push
out
or
cwtl
cmp
sbb
jae
ss
adc
lret
fistpll
fsubl
mov
cmp
add
filds
js
pop
repz
shl
je
pop
mov
inc
test
cmp
test
ss
in
loop
jo
jle
sbb
decl
cmpsb
push
mov
add
pusha
repnz
mov
jge
adc
mov
cmp
dec
xchg
cmp
xor
mov
pop
ja
call
imul
outsl
and
or
scas
or
adc
inc
std
or
xchg
sti
mov
les
push
xchg
nop
mov
cmp
mov
xchg
or
dec
mov
popf
inc
pushf
test
rcr
or
inc
addr16
fistps
js
int3
cmp
fldenv
push
mov
lret
mov
cmp
fnstenv
sti
rcrl
into
loop
cmpsb
xchg
or
in
pushf
jo
jecxz
addr16
adc
bswap
mov
mov
clc
sub
sub
push
pop
mov
pop
dec
mov
mov
leave
sti
aam
cld
movsl
push
or
jb
and
or
dec
jp
ljmp
jae
xchg
jo
mov
lds
and
cmp
xchg
jae
mov
or
xor
mov
rcrl
add
test
add
daa
lret
xor
pop
int
inc
add
data16
out
pop
adc
aam
ja
push
lret
icebp
orl
mov
xor
xchg
gs
xchg
clc
outsl
pushf
lret
pop
fsts
fwait
jb
xchg
push
int3
pusha
dec
clc
mov
add
jbe
sub
ss
and
and
xor
and
and
fisttpll
test
ss
jecxz
idiv
gs
fisttpl
pushf
inc
arpl
jno
stc
pushf
loopne
repz
or
insl
fs
addr16
push
push
lock
xchg
pop
mov
mov
sub
arpl
mov
push
daa
xor
int
ficompl
insb
cmp
hlt
sbb
fimuls
ss
ds
in
push
leave
jl
cmc
ret
xchg
bound
push
push
cmpsl
cmp
sahf
insb
mov
adc
inc
sub
fwait
notb
pop
xor
xlat
pop
or
lret
lods
lea
xchg
cli
pop
xor
movsl
repnz
mov
pop
jb
sti
frstor
imul
js
std
xlat
in
imul
jmp
cmc
loope
adc
cwtl
js
cld
in
jle
push
xor
cmp
jmp
add
mov
push
adc
mov
jmp
in
sub
mov
movsb
add
scas
pop
mov
push
inc
aad
jno
leave
dec
les
shlb
jae
and
add
jle
ljmp
cmp
sbb
push
lea
mov
loope
out
xor
add
ss
cmp
lds
jbe
aaa
mov
fildll
addl
pop
shlb
mov
xchg
popf
mov
ret
loopne
mov
fnstcw
mov
out
mov
push
gs
arpl
cmp
pop
movsb
ja
adc
enter
sub
push
add
and
sub
mov
xor
rolb
lret
cmp
xor
jle
test
jb
lds
push
push
inc
dec
push
jae
fwait
loopew
stc
inc
loop
xchg
sub
sub
sbb
bound
or
aas
xchg
cmp
sub
adc
cmp
pop
shlb
mov
stos
mov
rolb
leave
push
movsl
ret
int3
pop
imul
mov
jae
clc
iret
jp
arpl
je
sbb
outsb
xchg
loop
pop
xchg
inc
mov
adc
pusha
or
add
scas
test
cmp
mov
cmp
stc
push
loopne
pop
scas
xor
jns
mov
or
shrb
lock
jns
stos
fwait
stc
inc
in
outsl
test
cmpsl
aas
les
pop
cmp
cmc
jb
cwtl
dec
sbb
jmp
cli
pop
popf
xlat
gs
push
mov
sbb
add
add
xor
pop
xor
sub
js
xchg
jnp
push
adc
push
fcmovne
cltd
ret
repz
pusha
shl
imul
and
jb
adc
ljmp
out
addr16
out
lcall
add
test
cmp
dec
shll
xor
sub
std
into
dec
mov
stos
mov
jo
lret
call
into
fisttpll
inc
inc
dec
sbbb
incl
cli
add
adc
scas
or
popf
lock
fs
gs
rsqrtps
sbb
or
scas
or
mov
pop
mov
iret
lea
ret
into
mov
inc
and
mov
pushf
sbb
enter
sarb
and
inc
push
pop
loope
popf
mov
jb
add
insb
jae
loopne
bound
mov
pop
sub
xchg
inc
adc
cmp
enter
shrb
mov
mov
scas
xor
cmpsb
push
repnz
cwtl
insl
adc
scas
rcll
movsb
js
mov
dec
sar
aad
lahf
push
hlt
repnz
mov
data16
call
pop
adc
enter
add
dec
mov
ds
mov
cmpl
pop
inc
adc
push
mov
adc
ror
sbb
jp
pop
mov
rcrl
fisttpll
xorl
hlt
cmp
or
fsts
cmp
mov
adc
xor
mov
xor
lods
add
and
mov
jnp
lret
add
lret
loope
ret
roll
pop
push
ret
fmull
icebp
jns
pop
aad
push
push
movsl
bound
insl
out
je
in
pop
es
repz
push
cmp
ret
mov
mov
jo
scas
int
cmp
test
xor
sub
cltd
lds
inc
inc
aad
pop
dec
push
xchg
inc
adc
imul
sti
fisttps
mov
ret
imul
aas
dec
popf
sub
imul
fmull
test
xchg
sub
and
mov
clc
stos
test
push
scas
lret
popf
stos
hlt
mov
popa
push
or
pop
iret
leave
lret
mov
or
sti
ja
sbb
std
or
inc
pop
or
cmp
lahf
in
mov
sbb
inc
insl
or
sbb
jo
cmp
sub
gs
mov
sub
aaa
rcrl
scas
icebp
mov
add
push
mov
sub
xlat
rcr
ss
iret
aam
xchg
xchg
xor
dec
lret
xchg
iret
cld
pop
iret
mov
lock
pushf
call
loope
add
jle
inc
push
popa
cmpl
test
xor
mov
scas
sub
lods
and
sbb
mov
xor
repnz
cmc
jae
das
pop
pusha
roll
enter
or
dec
sbb
mov
mov
popf
pop
inc
xor
or
sub
popa
fists
mov
daa
push
orl
movsb
mov
je
ss
pop
xlat
push
out
push
aas
inc
jge
fcompl
in
shlb
jb
sar
sar
adc
jno
incl
hlt
out
jns
pop
idivb
sbb
or
or
add
mov
add
mov
mov
imul
data16
loope
dec
inc
into
fsub
xor
ret
pop
mov
faddp
sub
mov
icebp
xchg
mov
xchg
dec
clc
add
pop
je
and
in
mov
stc
data16
push
sub
dec
jmp
xchg
stc
movsl
mov
enter
cmp
andb
pop
lahf
loopne
mov
dec
jg
mov
add
sub
cs
insl
stc
xchg
xchg
in
out
jnp
pop
or
lcall
out
jns
scas
sbb
shlb
inc
mov
std
ss
jno
loopne
call
or
pop
mov
in
ffreep
ss
lods
sti
je
call
lcall
pop
loop
call
add
mov
jecxz
loop
dec
or
movsl
cmp
ror
xchg
push
inc
scas
rorb
jp
jnp
movsb
adc
push
jbe
es
push
mov
jne
jo
xchg
sbb
jecxz
inc
repz
xchg
test
sbb
jo
stos
cmc
sbb
sub
xchg
mov
mov
pop
pushf
xchg
aam
adc
inc
xor
mov
into
subl
fstps
stos
stc
in
loope
sti
xchg
test
daa
movsl
outsb
lods
pop
cmpsl
jb
push
clc
sub
inc
dec
jo
add
jbe
clc
shrl
xor
imul
in
test
push
or
mov
and
push
sub
add
jecxz
stc
test
xchg
lea
xchg
popf
sbb
rcrb
dec
lock
lea
cmp
ret
pop
ret
mov
insb
push
push
and
mov
iret
or
adc
adc
test
out
mov
test
adc
cmp
push
mov
test
mov
add
aam
and
sub
pop
adc
daa
jle
out
pop
inc
mov
adc
or
negb
out
jns
pop
std
loopne
cmp
xor
sub
xor
or
jl
xchg
and
sbb
push
lds
push
cmp
lods
adc
xchg
out
imul
jne
mov
orb
je
cmp
aam
jnp
lret
xor
div
and
icebp
mov
cld
das
fisubrs
negb
cltd
insb
hlt
in
ret
lahf
std
sbb
fbstp
imul
leave
inc
rolb
loope
jge
or
lahf
scas
lock
andl
push
test
leave
push
mov
call
mov
ja
sub
sbb
insb
mov
das
or
and
adc
adc
mov
inc
xor
cmp
mov
cmpsb
xchg
mov
sbb
lcall
sbb
mov
lahf
inc
xor
cltd
mov
dec
pop
aaa
nop
imul
mov
jno
pop
call
mov
or
cmp
dec
cmp
ss
adc
stos
stos
mov
mov
and
add
fstpl
cmp
dec
dec
push
adc
xchg
mov
fs
movl
inc
hlt
jl
jo
clc
ljmp
popa
insl
aaa
mov
hlt
sub
data16
ficoms
pop
lods
lcall
xor
mov
addb
pop
jecxz
mov
push
mov
push
hlt
and
or
jmp
gs
sub
inc
pop
in
mov
pusha
js
jnp
arpl
push
mov
mov
hlt
in
sub
push
fs
adc
pop
dec
and
push
pop
psrlw
leave
inc
outsb
test
bound
sbb
adc
xor
xchg
test
mov
sbb
iret
adcb
dec
fiaddl
sbb
xchg
sub
inc
out
stos
ja
lods
int3
and
movsl
lahf
subb
jecxz
push
pushf
icebp
sub
mov
in
push
loopne
out
sbb
sbb
lds
xor
fcmovnbe
nop
pop
jne
push
mov
dec
iret
icebp
or
jmp
mov
jno
pop
add
fs
popa
add
cld
popf
sahf
push
adc
orb
orl
sub
sbb
call
add
jp
mov
mov
stos
test
mov
insb
and
dec
je
inc
push
sar
jae
add
ret
adc
dec
adc
jnp
in
pushf
mov
mov
sahf
add
mov
pop
int3
sub
adc
add
and
push
push
movsl
sbb
fistps
jo
lret
xor
sbb
dec
movsb
vpsraw
jge
push
inc
dec
out
repz
out
bound
jnp
loope,pt
and
pop
xor
sbb
cmp
scas
pop
mov
xor
stos
cmp
xor
lods
xor
fists
adcl
movsl
jl
lret
sarb
push
push
stc
das
dec
lock
xchg
ja
jbe
jle
loop
jge
movsl
cmc
mov
mov
pop
lds
mov
jno
loop
pop
mov
mov
test
push
ucomiss
loope
lea
add
mov
leave
cmp
nop
adc
inc
stos
xlat
pop
aas
dec
mov
mov
ds
mov
fsubrp
xor
gs
sbb
test
pop
xlat
mov
sbb
pusha
mov
adc
pop
movsl
js
push
outsl
shrl
dec
push
pop
pop
movsl
lock
mov
jl
jp
div
outsb
adc
imul
jae
das
out
sbb
and
pop
fildl
xchg
dec
mov
les
sbb
jge
cmpsb
xchg
sti
cmc
lock
enter
shlb
jne
push
cld
into
fisubrl
jo
lds
jle
stc
lahf
jo
lock
cld
mov
jmp
imul
out
adc
in
xchg
jo
xlat
push
mov
push
mov
mov
xor
push
loopne
out
sbb
rcrb
stc
push
jge
testb
dec
incl
jae
mov
pop
int
xchg
jle
push
ljmp
out
stos
sarb
inc
mov
stc
and
fcompl
std
xchg
push
and
pushf
loop
fstpl
ljmp
push
out
in
sbb
pop
inc
sub
scas
or
and
movsb
sbb
call
inc
dec
push
ljmp
dec
out
imul
daa
adc
lea
mov
mov
jl
test
stos
data16
fs
push
lock
xchg
sub
or
aad
add
sbb
sub
push
das
and
add
es
lods
enter
lret
mov
cmp
stc
sti
pop
add
std
ret
lock
std
and
xchg
xchg
sbb
out
xchg
xchg
stc
push
jecxz
sub
test
push
aas
loope
call
ljmp
subb
push
cmp
mov
arpl
sub
mov
xor
jge
lret
shrb
dec
cli
pop
fisttpll
out
imul
xor
imul
jmp
out
sbb
movsb
out
nop
lcall
add
nop
in
mov
add
outsl
cmp
or
mov
cmp
mov
pop
sub
jle
adc
dec
push
jnp
mov
pop
sbb
adc
xlat
fwait
mov
shrb
std
ljmp
sub
pop
cmpsl
xchg
pop
xor
lods
rcrb
xchg
inc
jge
repnz
pop
jecxz
sub
enter
test
ffree
push
push
mov
push
nop
dec
aam
sbb
mov
lds
je
add
icebp
clc
dec
push
call
cmp
pop
mov
add
test
loopne
fcmove
sbb
xchg
lock
adc
mov
je
add
push
inc
sub
in
mov
cmpsl
and
mov
xchg
pop
lds
cmp
outsl
adc
sub
xor
lret
dec
jbe
mov
jmp
inc
popa
sti
lods
inc
fwait
mull
nop
add
push
and
xchg
pop
dec
scas
orl
dec
mov
jns
add
inc
sub
mov
mov
sub
in
push
mov
nop
push
inc
dec
stos
or
repz
stc
cmp
sbb
pop
sub
negl
outsl
aas
mov
cmc
add
insb
pop
addb
cmp
mov
push
mov
push
and
jmp
leave
fdivr
dec
sub
sahf
test
sbbl
sub
enter
pop
push
stc
adc
push
add
lahf
cmp
imul
lahf
push
insl
inc
pop
mov
or
cltd
shll
mov
inc
and
add
sti
cmp
sbb
movsb
jbe
fsubrp
fldt
leave
xor
fcoml
mov
loopne
mov
xor
clc
call
jecxz
jge
aam
dec
out
pop
fs
faddl
and
cwtl
mov
push
mov
adc
shll
jle
les
mov
ljmp
insl
sbb
aam
push
fcmovnbe
out
mov
xchg
ret
call
repnz
nop
in
fstps
stc
out
popa
mull
cli
add
loope
mov
lcall
xchg
jo
outsl
cmp
or
inc
mov
imul
and
nop
shlb
pushf
out
cld
aas
es
add
mov
js
mov
ret
dec
daa
repz
push
adc
lock
fcomi
add
aad
dec
insl
scas
pop
inc
sub
nop
push
shlb
or
lret
mov
in
and
cmpsl
test
mov
cmp
xor
push
mov
mov
ja
dec
stc
pop
cld
fisttps
adc
inc
mov
lcall
mov
jmp
sub
adcb
sbbb
imul
adc
cs
add
sbbl
and
inc
lods
gs
mov
and
jbe
add
push
mov
push
cmpsl
lret
pop
int3
repz
mov
sbb
jecxz
jge
cwtl
inc
ja
sub
loope
jae
lcall
out
bound
cld
mov
jno
cltd
shrl
jbe
adc
aas
stos
push
cmpsl
cmpsl
jns
lock
leave
fistpl
inc
fs
outsl
outsb
dec
cld
and
movsb
sbb
adc
inc
dec
jnp
dec
out
rcrb
push
cmp
pushf
lahf
ss
push
scas
fs
sbb
sub
shl
mov
pop
cmp
cld
mov
nop
mov
imul
adc
sbb
sbb
test
sub
mov
or
push
movsb
ss
cmpsb
cmp
xor
or
or
jno
mov
fiadds
loope
rclb
int3
mov
sti
icebp
cmpsb
je
adc
mov
or
shrl
inc
push
mov
mov
dec
dec
repz
repz
lods
sahf
clc
test
out
or
dec
jge
jmp
aas
dec
test
fidivrl
mov
scas
movsl
xor
dec
xor
xchg
lea
cmp
pop
movb
or
xor
mov
lods
cld
cmp
jno
jl
shlb
push
push
popf
sbb
enter
sbb
sti
ret
lcall
inc
or
lds
and
dec
mov
jnp
adc
arpl
sub
push
into
shrb
sbb
aam
dec
xor
push
es
ficompl
fsts
sub
dec
std
imul
out
popf
out
sar
in
shl
jge
push
xchg
iret
fs
imul
nop
lahf
std
mov
adc
xchg
mov
pop
push
jecxz
and
sbb
loopne
mov
idivb
mov
push
pop
pop
adc
arpl
inc
das
sti
jnp
jbe
outsb
std
leave
fcmovnb
insb
imul
push
scas
popa
jecxz
pop
jae
rol
test
inc
cmp
cs
mov
sub
frstor
mov
lea
push
cmp
dec
dec
mov
in
inc
inc
and
enter
and
mov
int
dec
jno
bound
jg
sahf
pop
ljmp
mov
mov
adc
mov
adc
add
fsts
daa
mov
cs
push
mov
inc
call
movsl
dec
xorb
pushf
hlt
jl
mov
inc
mov
inc
add
sub
fcoms
popa
ds
mov
ficoml
xor
test
movsb
mov
xchg
cmp
inc
pop
sbb
push
cmp
ss
or
out
jne
js
fdivrs
pop
insb
jle
dec
shlb
fnstenv
ja
ljmp
xchg
mov
std
jmp
out
or
mov
pop
pushf
rcrl
fwait
adc
adc
pushf
mov
jmp
adc
test
fwait
lahf
nop
lret
fildll
pop
or
push
mov
inc
fcom
mov
push
lret
inc
testl
inc
movsb
cli
and
lods
lock
sub
mov
negb
and
push
jno
sub
out
xorl
xor
mov
scas
inc
cli
xor
inc
lcall
jmp
push
push
adc
jo
shll
aam
out
dec
mull
repnz
adc
out
add
xchg
or
mov
lret
cmp
int
cmp
xchg
mov
lods
mov
xor
pop
add
sar
pushf
lods
call
jne
clc
adc
js
push
pushl
fbstp
pop
in
call
lcall
out
xchg
mov
scas
xchg
xlat
or
sbb
bound
sbb
jg
push
cmp
rclb
movsb
pop
or
xchg
fwait
adc
adc
dec
sarl
sti
scas
je
mov
stc
jge
jo
and
add
sbb
add
add
adc
push
insb
fidivl
mov
outsl
add
dec
out
setp
ja
mov
es
push
and
test
mov
mov
rclb
or
dec
jns
dec
sub
jp
cltd
imul
test
ret
mov
jp
popa
lods
fwait
pop
lcall
jmp
cmp
movsl
dec
sbb
das
ffree
lret
sub
add
adc
xchg
sub
pop
fdiv
stos
out
mov
rolb
iret
sahf
stc
inc
iret
pushf
cmpsb
divb
push
lcall
mov
xchg
imul
insl
lcall
add
aaa
add
mov
in
add
mov
nop
cs
movsl
leave
xor
aad
aad
cmpsl
cmpsb
js
pop
pop
dec
hlt
mov
enter
decb
lock
jl
pmulhw
ljmp
xchg
pop
lock
pop
in
testb
ds
imul
cmp
xor
pop
stos
sub
add
aad
add
fiadds
fbld
fsubl
aad
mov
mov
xchg
into
mov
lock
dec
pushw
lahf
pop
cli
sbb
sbb
xor
mov
cmp
mov
mov
sub
mov
imul
mov
hlt
lods
icebp
sub
pop
mov
inc
mov
xchg
aaa
jp
js
les
jge
outsb
cld
mov
scas
or
sahf
fbld
adc
pop
aam
loope
fdivl
mov
cmp
cwtl
stos
sbb
and
and
fldl
aam
popf
int
fsubp
scas
push
fwait
jns
push
dec
std
stos
dec
outsl
std
cli
mov
lea
push
sbb
jne
push
jmp
cltd
pushf
iret
bound
lds
or
test
mov
fwait
add
insl
add
test
subl
push
adc
xor
push
aam
pop
jmp
outsl
sti
xor
dec
repnz
ret
pop
call
xchg
cbtw
neg
mov
ss
fidivrs
in
int3
adc
xchg
push
mov
test
mov
add
dec
mov
inc
mov
xor
arpl
testl
idivb
imul
insb
scas
in
cwtl
stc
inc
dec
add
inc
cld
js
lea
popf
jmp
test
stos
lods
stc
jmp
fisubs
arpl
mov
arpl
xor
add
loope
ss
push
cltd
pop
pusha
stos
mov
aas
and
xchg
pop
outsb
dec
pop
push
push
movsb
lods
push
push
pop
cmpsl
leave
cli
pop
push
dec
sbb
sti
push
push
les
mov
nop
dec
imul
popa
out
fsub
cmpsb
adc
push
cltd
xor
or
mov
push
js
cmpsl
mov
add
or
fisubrl
cmpsl
repnz
and
fcmovnbe
fisttps
fs
mov
pusha
lea
lcall
rclb
in
or
and
loope
cwtl
bound
test
sbb
adc
aas
mov
daa
add
xor
fnsave
mov
repz
and
lds
jnp
push
inc
mov
push
xor
bound
in
addr16
and
popf
dec
mov
scas
nop
aas
outsb
xchg
pop
out
rcrl
imul
adc
sahf
mov
mov
mov
pushf
mov
xor
shl
xor
cwtl
and
mov
decb
shll
push
push
jge
call
jmp
std
arpl
jl
out
push
or
mov
xor
sti
adc
test
test
inc
push
mov
lcall
cmpsb
xchg
xor
xor
enter
mov
dec
sub
sti
or
test
jecxz
aas
shlb
outsb
dec
imul
and
cmpsl
outsb
push
sbb
adc
push
xchg
add
sahf
or
xor
adc
fnstsw
push
mov
lock
das
xchg
stos
mov
push
flds
pop
daa
lret
dec
cmc
push
mov
push
outsl
loop
es
jmp
jae
xor
imul
data16
mov
jge
in
shlb
adc
mov
out
je
mov
mov
sub
scas
xor
or
mov
push
mov
push
fstl
scas
push
scas
dec
ss
inc
fcoms
aas
cmp
sahf
lret
mov
dec
repnz
lret
jle
imul
outsl
out
call
push
popa
dec
mov
mov
ja
jp
mov
push
adcb
sbbl
xor
adc
fsub
sub
adc
pop
pop
sub
rcrl
les
jg
popa
xchg
testb
enter
cld
cmc
ret
cwtl
adc
pusha
sbb
push
xlat
add
mov
out
adc
xor
cmpsb
divl
fidivl
pop
sbb
fucomip
test
andb
and
enter
pop
stos
dec
fst
jg
dec
xchg
adc
jbe
dec
clc
inc
shlb
popw
mul
mov
sbb
push
or
in
decb
fistps
xchg
roll
mov
lods
stos
jae
fwait
divl
sahf
sub
and
test
jge
mov
sti
rol
jnp
aad
iret
jno
out
mov
sti
jmp
shrb
jbe
push
loopne
mov
or
xchg
jmp
jbe
in
imul
push
mov
mov
mov
push
cmpl
sub
fsubs
push
aas
movsl
cld
or
push
xchg
jo
jae,pn
jne
bnd
clc
andl
imul
out
sbb
imul
jmp
adc
push
test
jo
jns
xchg
sub
aad
ds
rcll
cmpsb
sub
movsl
dec
lods
ficoml
aad
push
or
and
ds
jnp
push
cs
jns
jae
ret
pop
pop
frstor
jle
call
enter
mov
xchg
sbb
xchg
push
cmovb
adc
aas
adc
lea
sbb
xlat
ljmp
pop
int3
leave
cmpsl
add
jnp
rcrl
lret
pop
cmp
movsb
push
lods
loop
insb
lock
imul
jns
fcomp
jo
data16
lock
outsl
call
cmp
fwait
in
cli
lahf
js
push
xchg
lcall
dec
mov
and
pop
int3
cs
int
scas
pop
sub
pop
pop
mov
imul
mov
ret
push
dec
inc
ja
pop
mov
inc
mov
adc
xchg
int
or
xlat
and
dec
mov
fldcw
fwait
jno
adc
andps
mov
pop
pop
or
push
mov
lods
or
insb
scas
ret
mov
or
clc
push
push
hlt
enter
out
repz
jno
xchg
cmpl
bound
push
outsl
add
jno
mov
popa
adc
pop
dec
sub
xchg
pop
sub
adc
sub
ret
mov
dec
outsb
out
jg
dec
jle
enter
icebp
lret
jo
orl
aam
imul
ss
and
enter
test
pop
cmc
fucom
add
mov
fistpl
ja
or
shll
js
mov
clc
loop
sub
pop
pop
lcall
xlat
jg
dec
adc
inc
out
ret
into
and
xchg
loop
les
jmp
cld
sbb
insb
aad
and
out
xchg
jl
xor
push
aad
pop
jne
and
add
pop
data16
mov
mov
or
inc
adc
inc
push
adc
aam
jo
push
je
lds
insb
repz
mov
loopne
mov
sbbb
adc
popf
pop
gs
mov
fmul
ds
mov
iret
sbb
scas
and
popf
js
push
mov
sub
out
dec
pop
pop
mov
fmuls
lds
jge
xchg
mov
jns
add
out
sahf
pop
pushf
sub
mov
sbb
add
fdivs
mov
movb
or
pop
xchg
jmp
notb
jg
inc
lret
cmp
call
sbb
jne
push
out
stos
repnz
pop
scas
enter
gs
repz
sbb
mov
cmpsl
xor
ds
lock
push
aaa
ss
ss
xlat
sub
and
push
shll
fs
fidivl
and
push
dec
pusha
push
jp
repz
out
gs
lods
jge
push
cmc
mov
test
in
in
cltd
inc
int
rclb
lea
and
add
push
cltd
cmp
hlt
shrl
movsl
push
out
mov
inc
mov
dec
jp
sub
pop
and
jl
test
xor
out
xor
outsb
in
add
push
adc
loopne
add
ret
pop
add
xorl
bsf
inc
sbbb
xor
jbe
mov
popf
or
iret
xlat
jne
lret
fstps
mov
ror
aad
lds
ret
pop
jle
or
inc
cmp
mov
cmp
sbb
fcoms
std
push
xlat
or
rclb
mov
mov
xchg
rcr
test
and
cld
push
rcrb
sub
ret
pop
leave
out
inc
push
adc
inc
mov
inc
cmp
imul
mull
test
push
pop
adc
fs
sub
daa
or
add
nop
xor
mov
jp
test
mov
pop
dec
test
out
lods
xchg
lods
push
cltd
jb
lea
jno
push
ljmp
imul
test
subb
mov
xchg
scas
pushf
cld
cs
imul
push
sbb
xor
outsl
sbb
inc
mov
in
idivb
repnz
jge
ja
add
data16
les
xor
xchg
into
jns
xchg
test
mov
popl
sbb
inc
dec
sub
dec
cmp
push
hlt
movsl
lods
sbb
mov
pop
test
or
scas
adc
test
xchg
dec
or
pop
outsb
xchg
mov
inc
pop
pop
lahf
rorl
xor
dec
lret
in
mov
dec
fldt
push
out
test
shlb
add
cmp
jbe
sub
stc
fisttpll
and
push
mov
inc
dec
or
inc
arpl
mov
xchg
push
ret
inc
pop
mov
mov
cmp
outsb
jnp
in
pop
cmp
jb
mov
mov
adc
sub
and
sbb
push
ret
push
out
les
leave
pop
repz
mov
xchg
jecxz
mov
add
imul
sbb
or
scas
lret
xor
add
popa
in
ds
sub
shlb
popf
xchg
and
ret
fisttps
push
mov
jnp
cwtl
rorb
inc
jg
jnp
cmp
push
outsb
stos
test
and
dec
loopne
push
sbb
and
cmpsl
movsl
xchg
mov
push
loop
mov
cs
andb
out
jmp
out
jmp
and
ljmp
es
xlat
sahf
pop
add
mov
adc
sbb
lock
inc
loope
nop
add
fmull
xor
cmp
xor
rcr
aaa
cmp
movsl
jmp
pop
loop
lock
jmp
mov
mov
imul
mov
sbb
pop
push
lahf
inc
test
je
push
push
outsl
mov
sbb
push
sub
pop
mov
popf
dec
or
inc
cmp
mov
es
jae
fldl
add
and
sub
cmp
xor
stos
es
push
adc
inc
xor
push
or
add
out
das
call
xchg
fisubl
cmp
sub
lahf
pusha
inc
adc
dec
or
lea
fs
push
shll
leave
push
push
mov
cmp
cmp
push
mov
jne
inc
push
stos
xchg
mov
ljmp
mov
dec
pop
xchg
shl
sbb
test
pushf
push
outsb
push
shr
loop
dec
fdivp
sbbb
mov
jo
movsb
push
add
and
sbb
xchg
push
jp
push
add
add
rcr
hlt
jbe
shlb
jbe
les
in
lcall
sbb
ds
add
mov
xchg
mov
pop
sub
push
add
pop
jmp
out
popa
and
pop
xchg
daa
bound
sbb
shl
int3
inc
ja
dec
add
pop
jne
or
jae
jg
aam
gs
in
sbb
push
push
add
adc
xchg
pop
pushf
or
sub
ret
sbb
outsb
xchg
cmp
xor
xor
inc
mov
sub
out
rolb
pop
sbb
js
sbb
cmpsl
leave
xor
pop
inc
add
out
add
in
notl
leave
out
shrb
pushf
int
mov
mov
jle
jae
aam
lret
bswap
add
clc
sub
cmp
lock
fldt
ljmp
pop
adc
jae
xor
loopne
cmp
in
ja
mov
dec
fnstenv
scas
cmpsb
mov
rcrl
xor
mov
mov
addl
jne
jge
fcomip
xor
mov
in
stos
je
lods
inc
inc
jp
cli
movsl
jns
pop
hlt
rcll
cwtl
enter
insl
adc
mov
jns
mov
test
outsl
adc
adc
mov
mov
xchg
notl
jmp
dec
xchg
xchg
inc
test
sbb
fadds
jne
jb
pop
fcomps
inc
add
faddp
pop
push
ja
xlat
hlt
xchg
pop
sub
jne
mov
repz
mov
outsl
push
addr16
push
loop
dec
sub
loopne
scas
jp
or
sbb
cmp
int
mov
fildll
sub
loop
jmp
pop
pop
lods
push
jge
adc
adc
fidivrl
lret
cmp
inc
dec
push
lcall
outsb
movsl
pop
lcall
xchg
daa
pop
push
push
adc
cmp
flds
aaa
add
push
mov
or
bound
cli
xchg
jnp
push
repz
int3
out
push
inc
sbb
lahf
inc
mov
cld
xchg
lds
ret
push
pushf
jmp
jns
lahf
jne
jne
loope
jp
mov
fstl
pushf
adc
test
or
int3
mov
mov
sbb
inc
scas
stos
push
mov
lods
sbb
das
je
dec
sub
test
out
fwait
push
push
dec
jecxz
add
or
out
push
addr16
push
mov
testb
pop
out
andl
jecxz
ds
hlt
xchg
inc
push
add
add
in
aaa
pop
push
pusha
dec
repnz
mov
stos
sub
pop
cmpsl
mov
cmpsb
ja
inc
adc
decl
and
vdivss
fdiv
call
mov
push
in
out
dec
xchg
test
into
sbb
dec
iret
data16
inc
mov
mov
xchg
int
cmp
mov
push
adc
popf
and
adc
pusha
mov
push
shll
dec
sbb
into
sahf
mov
addr16
jecxz
xchg
in
mov
call
call
icebp
push
mov
inc
out
xor
jecxz
mov
rcrb
xor
sub
jae
enter
clc
dec
xlat
fnstenv
shll
ror
inc
test
out
inc
and
jg
repz
jo
adc
adc
out
mull
sbb
loop
loope
dec
or
push
push
mov
test
xchg
xchg
and
inc
mov
movsl
mov
sahf
scas
popa
and
leave
push
fdiv
dec
jecxz
pop
pop
dec
rcl
and
jae
inc
adc
and
lds
std
pop
ja
pop
cmc
cwtl
mov
shl
pop
cltd
or
sbb
sahf
xor
pushf
cmpsb
rcr
mov
int3
mov
cmpsl
es
sub
ftst
fdivs
and
lret
fnclex
js
leave
loope
popa
stos
sub
in
insl
scas
mul
sub
mov
out
scas
push
xchg
sbb
xchg
stos
sub
les
mov
add
xor
mov
xor
and
lcall
in
fdivrs
sarb
xor
imul
fcompl
dec
mov
arpl
out
inc
and
fistpl
dec
lock
and
out
fsubrl
mov
mov
pop
or
push
mov
mov
push
or
cmp
xchg
int
inc
lcall
mov
inc
push
imul
pop
xor
in
dec
xchg
insl
xchg
fisttps
sti
sbb
in
filds
xchg
cltd
pop
push
xchg
pop
ret
xor
jle
out
insl
push
movsb
movsl
lods
and
pop
fadd
push
and
test
dec
inc
enter
test
js
mov
inc
lea
mov
and
rcrl
lahf
mov
or
test
cmp
icebp
hlt
cmp
fdivrs
jmp
jnp
int
add
hlt
xlat
je
push
aaa
lret
mov
dec
xchg
jge
int
or
push
xor
xor
mov
fdivrl
fs
sbb
and
adc
pop
or
or
xor
xor
mov
push
xor
pop
jo
jecxz
scas
frstor
test
lock
pop
dec
mov
aad
enter
into
icebp
and
mov
nop
mov
loop
sbb
push
imul
mov
push
pusha
stos
jge
dec
adc
push
sub
roll
testl
movsl
push
sarl
push
sbb
cmp
cltd
dec
adc
insl
mov
sar
lret
sbbb
pop
movsb
xchg
icebp
sbb
mov
mov
in
insl
fs
push
mov
or
mov
icebp
mov
lea
ljmp
insb
push
mov
sbb
and
and
dec
mov
jbe
dec
sarl
adc
daa
data16
sti
xchg
cmp
fs
add
and
cmp
or
and
movsb
mov
and
fdivrs
shll
and
mov
movsb
jnp
dec
pop
std
or
dec
lods
pop
adc
leave
out
cld
ficoms
cmp
insb
push
imul
data16
aam
pushf
lea
xchg
mov
sbb
mov
testb
nop
mov
mov
das
add
add
mov
add
mov
push
and
jb
lret
js
fisttpll
aad
pop
not
gs
cltd
jbe
ss
mov
fnstsw
mov
inc
movsl
popa
out
mov
sbb
sahf
jbe
add
cmpsl
push
xor
cmp
loop
jbe
mov
lods
dec
adc
xchg
sub
mov
pop
sahf
dec
in
fcoms
xor
jo
inc
jo
or
rorl
xchg
imul
add
pop
sbb
xchg
add
push
mov
scas
lods
xchg
add
cwtl
mov
pop
pop
xor
subb
sub
dec
sbb
pop
inc
pop
cli
xchg
mov
shll
int
ss
aam
pop
ror
sub
or
xlat
out
jle
and
xchg
fldl
sbb
lock
popf
ss
in
pop
add
shlb
mov
xor
mov
stos
pop
iret
mov
sbb
xor
stc
lret
dec
mov
iret
inc
dec
sub
int3
mov
pop
shlb
aam
pop
je
cmc
dec
inc
lcall
xchg
pop
repz
mov
or
add
xor
mov
stc
cmp
xchg
add
mov
test
int
mov
lret
fs
test
in
sarb
decb
jg
insl
mov
xchg
sbb
test
jecxz
hlt
add
cmpsb
pop
add
cmp
mov
sub
lods
addb
repz
pop
cmpsb
inc
clc
shll
lret
ja
out
adc
dec
cli
add
pop
jo
jp
sbb
ja
je
sarb
cwtl
enter
mov
pop
sbbl
sub
aam
dec
jnp
push
aaa
imul
add
test
pop
fstps
jge
cmc
insb
inc
jle
xchg
out
ret
xchg
les
cli
xchg
fisubrs
jl
sahf
aas
cli
xchg
mov
popf
nop
in
inc
xchg
or
subl
inc
and
inc
push
sbb
rolb
push
mov
iret
mov
cmpsl
mov
adcb
outsb
mov
or
cwtl
lret
loope
push
lea
les
sub
cltd
inc
dec
mov
je
mov
cld
xchg
push
mov
shrd
lret
loop,pt
aad
psubd
cs
mov
xor
call
test
or
mov
fcoms
push
jo
sbb
divb
popa
fsubrl
adc
cmp
into
notb
push
cmpsb
jl
sbb
add
aas
movb
or
mov
jp
jae
and
fcoms
push
lods
push
adc
jbe,pt
push
popa
sbb
int
mov
cmp
mov
ss
icebp
ljmp
inc
test
mov
cmp
mov
add
pop
dec
add
mov
nop
repnz
mov
fiaddl
mov
dec
fmul
pop
jae
dec
xchg
cmp
dec
jg
jle
pop
sbb
jg
push
xorl
aad
sbb
imul
fwait
add
nop
pop
lods
icebp
pop
lret
outsb
cmp
stc
arpl
mov
test
inc
add
mov
xlat
jbe
shll
cmpsb
xor
fwait
addb
into
push
jmp
sbb
mov
inc
out
xor
or
mov
mov
jno
in
loop
sub
cmp
leave
xor
pop
movsl
ja
cmpsl
or
push
jnp
mov
push
pop
cmp
fbstp
jne
adc
inc
adc
push
xor
pop
loop
lods
push
mov
mov
adcb
jmp
or
mov
test
push
xor
push
imul
and
leave
scas
in
mov
popf
fistps
mov
dec
dec
inc
mov
neg
lds
jp
data16
imull
xchg
fwait
add
and
sbb
or
or
xchg
jmp
cmp
add
mov
cmp
cmp
fdivrs
scas
pop
das
leave
push
sub
mov
fisubl
fldcw
lret
loopne
dec
addr16
lcall
inc
cli
in
and
add
cmpl
imul
pop
inc
mov
lahf
insl
adc
sub
pop
mov
dec
sbb
cmp
xor
aaa
and
sub
shlb
sbb
sub
pop
inc
sub
scas
jp
dec
inc
shll
lock
jo
daa
jno
sbb
xlat
repnz
insb
cltd
and
sti
push
in
ret
nop
sub
nop
je
adc
mov
add
or
cmp
outsb
stos
push
loope
cmpsl
aaa
mov
jb
shll
aam
adc
xchg
inc
leave
aam
mov
popa
imul
lahf
push
clc
out
outsb
adcl
xor
imul
or
sbb
data16
jl
adc
xchg
jb
sub
stos
add
data16
sub
push
sbb
fcoms
outsl
rorl
testl
lahf
std
mov
and
fs
mov
and
or
orl
mov
add
mov
dec
cmp
and
cmp
loope
sub
das
lock
rcrl
movsl
dec
jge
dec
mov
dec
jp
push
les
int3
jo
jnp
or
jns
ljmp
pushw
in
in
add
mov
sbb
inc
xor
ljmp
test
mov
push
sub
icebp
cmpsl
xchg
fildl
daa
mov
pop
jle
push
rcll
dec
jns
lret
idivl
mov
jo
sarb
cmp
scas
lahf
pop
xchg
jbe
add
adcb
cwtl
mov
or
or
cmpb
add
xor
fidivs
add
mov
pop
iret
pusha
ror
movsl
iret
mov
adc
mov
or
jp
cmp
imul
mov
mov
jecxz
loopne
mov
mov
call
sarl
test
xor
je
inc
xor
sub
cld
cs
pop
add
cs
adc
push
dec
dec
aam
sbb
dec
out
cli
dec
inc
inc
and
sbb
aaa
xor
or
hlt
scas
cmp
xchg
sbb
lahf
or
xor
inc
fiaddl
cmpsb
les
cmp
dec
mov
in
mov
push
ljmp
jmp
dec
js
push
inc
repnz
aam
jg
js
sub
push
outsb
mov
cmc
insl
ljmp
cltd
outsl
aas
bound
sbb
popf
cmp
inc
mov
push
jnp
push
jmp
push
lods
int3
cmp
rcr
dec
jnp
inc
sti
dec
xor
js
push
inc
std
rcll
js
sbb
jb
inc
jns
adc
mov
addr16
outsb
call
xchg
lahf
es
xchg
add
rclb
fdivrs
pop
push
fwait
mov
shr
cs
adc
rclb
sub
push
leave
xor
inc
clc
mov
js
stos
cli
int3
and
add
fcoml
xor
dec
push
fwait
test
cmpsl
cmp
mov
mov
fdivs
les
or
xor
sub
pushf
xor
mov
or
push
or
lcall
xor
mov
out
lcall
popa
inc
out
dec
in
push
fldl2e
cmp
jecxz
sbb
adc
mov
stc
adc
or
aad
xor
jg
mov
pop
es
fnstcw
test
add
cmpsl
xor
mov
aad
pop
adc
icebp
data16
in
sub
jp
out
jmp
push
sbb
faddl
call
repz
gs
lret
inc
movsl
out
imul
dec
mov
lea
add
sbb
fcmovnu
mov
pop
jnp
xlat
rcr
leave
ja
mov
stc
mov
imul
je
inc
cmp
cmp
sahf
push
outsb
mov
push
xchg
lcall
sbb
xlat
mov
ficomps
cmp
fsubrp
mov
shlb
cmp
jnp
movsb
and
shlb
shrl
dec
push
data16
dec
add
daa
inc
jl
fs
jno
lock
cmp
pusha
das
add
xchg
enter
mov
rcll
mov
add
fsubrs
rorb
adc
and
sbb
mov
cmp
pop
push
ds
mov
add
add
sti
call
test
inc
jae
xchg
cmc
push
out
mov
lods
pusha
cmp
pushf
shll
lret
out
int
jnp
mov
and
lea
xchg
es
xchg
jg
fists
and
xlat
sarl
icebp
dec
lret
ss
xorl
daa
and
or
pop
in
scas
xchg
fsub
xchg
jnp
pop
sbb
fdivl
push
orl
push
mov
jp
fs
mov
stos
mov
repz
inc
fcmovnu
sahf
sbb
push
pop
jne
jg
push
jne
mov
mov
loopne
pop
fs
xchg
push
in
jbe
cmc
jne
cltd
outsb
outsl
jo
cmpsb
and
popa
mov
cmp
or
mov
rcll
stos
sbb
sbb
rcrb
push
lea
sub
cmpsb
scas
lcall
or
sbb
mov
add
inc
test
scas
in
jge
jmp
psubb
addr16
popf
jmp
in
testb
lcall
xchg
xchg
test
mov
cli
jp
out
add
sub
mov
nop
sub
add
pop
dec
ret
pop
pop
outsl
push
leave
push
inc
mov
cmp
jae
xor
inc
cmp
jecxz
jne
ljmp
sahf
jno
jno
mov
jne
pop
pop
idivb
roll
mov
pop
add
int
add
cmp
das
clc
cmpsl
lods
mov
test
sbb
rorl
cmc
int3
rol
add
fs
cmp
mov
sub
int
in
in
jo
push
shlb
lcall
in
scas
aaa
fisttpl
addl
jbe
scas
cmp
std
xor
xorl
jo
movsb
and
fwait
and
incb
movb
push
push
icebp
jecxz
xor
jp
lock
jo
fisubrl
mov
sbb
push
mov
adcb
mov
movsl
jnp
das
imull
rolb
or
movsl
jmp
sub
daa
sbb
rorl
jb
addl
dec
add
cmpsb
mov
movsb
jg
cmpsl
rcrb
gs
and
mov
mov
add
mov
ja
cmp
push
sbb
shll
loop
dec
movsb
ljmp
mov
sarl
pop
faddl
dec
dec
outsl
int
cs
jecxz
push
inc
ss
stc
scas
pop
jb
adc
fmuls
push
cwtl
arpl
psllq
jnp,pn
or
sub
aaa
inc
cs
aam
negl
cmpsb
fldenv
push
mov
xor
gs
push
pop
int3
out
dec
xchg
fdivs
jge
cmp
pop
ja
test
notb
cmpsb
push
adc
std
daa
add
push
xor
add
xchg
dec
mov
cmp
add
mov
test
mov
movsb
gs
push
xlat
dec
loopne
dec
popf
sarb
cwtl
popf
lret
pop
dec
add
mov
cmpsl
in
lcall
fbld
adc
or
push
sbb
cld
xchg
xchg
gs
es
lahf
inc
hlt
mov
dec
sub
xor
push
icebp
stc
and
bound
xor
cmpsl
push
push
sub
dec
insb
cltd
repnz
jl
xchg
in
add
mov
jmp
jns
jae
xor
push
insb
hlt
bound
pop
scas
push
sbb
and
xor
dec
mov
dec
sub
fidivs
fisubs
stos
pop
aaa
es
pop
lock
sti
dec
cmp
pop
jnp
jp
xchg
enter
add
les
divb
decl
imull
mov
adc
ss
mov
mov
cmpb
pop
sbb
and
add
dec
movsb
adc
dec
mov
push
lret
add
mov
dec
dec
xchg
dec
jge
and
icebp
inc
fidivl
jae
and
pop
movsb
or
and
mov
pop
push
push
xorb
outsl
push
das
popf
jg
push
lcall
mov
enter
cmpsb
test
mov
outsl
fistps
sbb
enter
sub
jo
je
jle
je
mov
popa
xor
mov
nopl
out
outsl
inc
es
mov
or
or
ret
icebp
mov
xor
or
movsb
ss
cmc
and
mov
stc
inc
inc
xor
clc
push
pop
adc
cli
xchg
inc
pop
enter
xchg
test
or
rcrb
push
gs
add
xchg
jo
push
dec
cmpl
pop
subl
leave
pop
lods
push
dec
pop
rorl
and
pop
pop
es
sub
std
sbb
leave
notl
mov
pop
jbe
loope
loope
sbb
ljmp
popa
cmc
jmp
addr16
orb
push
scas
push
push
lcall
sub
mov
mov
mov
cmp
test
jp
pop
sahf
bnd
push
jge
jmp
and
nop
std
out
hlt
movsb
adc
fcoml
jmp
mov
dec
stc
xchg
mov
adc
adc
outsl
aas
hlt
or
out
int
stos
out
outsb
scas
movsl
cmpsl
mov
cmpsb
or
int
cltd
dec
leave
inc
stos
ret
push
add
cld
bound
test
sbbb
loopne
dec
or
outsb
aam
test
leave
cs
outsb
cmp
cmp
pop
fwait
in
or
shlb
test
jno
or
mov
movsb
es
xlat
pop
pop
mov
ret
push
push
dec
aas
incl
mov
jmp
lods
test
cmpsb
negl
insl
insb
in
data16
push
adc
lea
mov
adc
pop
mov
orb
shrl
add
aaa
xor
sub
pop
inc
das
filds
jb
pop
iret
dec
icebp
shlb
mov
int3
jp
cwtl
jb
pop
mov
jmp
mov
jae
adc
push
pop
xchg
inc
sbb
stc
adc
ss
sub
xchg
and
add
pop
mov
mov
lock
and
inc
and
push
inc
les
mov
insb
mov
insb
mov
jb
jmp
or
pushf
cwtl
in
mov
jmp
fsubr
adc
mov
sbbl
xor
push
or
xor
xchg
mov
stos
out
push
es
test
and
ret
es
aam
es
repnz
add
ds
inc
mov
or
push
xor
xor
notl
xor
addr16
sbb
popa
adcl
adc
lret
and
in
mov
loopne
pop
shrb
and
adc
sbb
in
int
clc
out
xor
sbb
cmp
inc
imul
add
mov
inc
jnp
call
mov
in
in
and
or
lahf
mov
push
js
popl
mov
mov
fstl
sbb
imul
xchg
in
mov
adc
inc
fwait
js
js
adc
icebp
shr
push
imul
out
stos
xchg
lods
pushf
int3
cltd
out
jne
sbb
mov
xchg
imul
dec
dec
mov
mov
sub
push
fsubs
jg
lret
pop
xor
dec
rcll
shl
enter
stc
sub
repz
test
adc
outsb
outsl
clc
inc
loopne
bnd
fwait
hlt
repz
add
adc
ds
lsl
int
and
mov
xor
mov
lods
fucomip
mov
daa
sahf
das
rcr
rcl
push
testb
inc
les
add
mov
xchg
nop
cmc
cmp
push
cmpsl
insl
sub
loopne
mov
adcb
rclb
wbinvd
bound
pop
jl
xor
inc
dec
or
push
and
scas
shll
and
fisubrs
fbld
jne
mov
rorb
loope
lods
jp
repnz
ja
icebp
insb
cwtl
xchg
mov
jno
in
in
add
push
jge
fsubp
or
mov
mov
mov
or
mov
enter
pop
mov
lds
inc
mov
pop
xchg
mov
scas
dec
dec
sub
xchg
adc
lcall
jb
arpl
in
lahf
cmp
adc
divb
mov
xlat
out
adc
lcall
fldt
aaa
xor
in
sub
mov
das
test
shlb
pop
push
push
xchg
out
push
shll
pusha
push
push
rolb
dec
jl
mov
xor
outsb
and
negb
into
adc
sbb
xor
sbb
xchg
add
addl
cmp
out
push
shrl
mov
scas
shll
mov
fistpll
daa
stc
inc
mov
pusha
jl
ret
popa
inc
jb
xchg
sbb
adc
cmc
lahf
and
jge
add
and
sbb
lea
push
scas
pop
mov
cli
cmp
and
sub
mov
daa
shlb
enter
xchg
push
ljmp
or
fsts
les
js
mov
pop
mov
repz
into
mov
inc
adc
pop
out
add
cmp
mov
xor
jb
mov
movsb
mov
and
fsubrs
mov
cld
dec
int3
xchg
lds
int
cmp
in
jecxz
dec
movsl
push
xchg
cltd
xorb
lea
mov
ret
or
mov
test
inc
add
test
pushf
int3
jl
test
mov
pop
inc
sub
repnz
xchg
in
inc
xor
test
iret
cmpsl
jle
fisttpl
inc
int
clc
ret
mov
inc
jbe
repz
jmp
mov
pop
lahf
enter
dec
or
iret
cmp
or
push
xor
sub
sub
sub
mov
mov
cmp
out
icebp
fcom
aad
push
int3
dec
ret
clc
cli
inc
add
outsb
jg
cmpsb
push
adc
negl
or
sbb
pop
xchg
xchg
jno
mov
insl
lahf
mov
pop
xchg
subb
cmp
mov
xor
lods
cmpsl
push
sub
xchg
repnz
push
xchg
fists
mov
rclb
std
ss
dec
js
scas
xchg
rcrb
not
xor
xchg
adc
les
or
mov
mov
mov
mov
lock
andb
push
jb
mov
add
mov
rorl
jnp
jnp
dec
pop
sbb
jns
rolb
or
xor
stos
out
xor
movsl
pop
and
adc
dec
or
xor
mov
aam
inc
add
xchg
pop
xor
and
mov
xchg
jne
sub
inc
and
stos
fsts
jae
xchg
jmp
mov
inc
icebp
xor
jb
clc
or
outsb
out
cmpsl
adc
mulb
fisttps
mov
mov
cmp
mov
pop
fnstcw
cwtl
jne
cmp
mov
xchg
ss
and
pop
and
rorb
mov
push
add
cmp
add
icebp
or
jle
cmp
popa
aas
scas
idivb
in
call
mov
data16
jecxz
sti
cli
push
std
push
add
mov
outsb
cmpsl
stc
cmpb
fdivs
mov
pop
mov
cwtl
and
andl
cmp
orps
or
add
les
stc
mov
jl
jge
cs
loopne
daa
dec
jne
insb
jmp
loopne
push
gs
sbb
xchg
loope
push
fs
mov
les
cltd
jns
pop
std
add
jbe
adc
cmp
jecxz
mov
sbb
lea
xchg
mov
into
mov
mov
js
xor
sub
cmc
scas
cmpsl
outsb
sub
addr16
sbb
adc
ret
inc
or
sti
adcb
aam
mov
jmp
ret
inc
lcall
pop
clc
adc
jle
push
std
or
idivb
int
mov
imul
bound
loope
call
fsubp
cwtl
push
gs
xlat
push
popf
dec
xchg
adc
xchg
inc
mov
or
jns
push
repnz
jmp
subl
fs
cmp
and
pop
mov
fnsave
orps
dec
scas
mov
mov
jge
scas
icebp
pop
and
cmpsl
out
pop
pop
arpl
fsub
push
push
cwtl
xlat
aad
dec
dec
xchg
enter
inc
mov
sti
add
xchg
lock
mov
bound
cs
pop
es
pop
xor
mov
aam
xchg
cmp
lahf
mov
nop
mov
push
sub
xchg
lods
je
and
mov
insl
or
loope
rcrl
shlb
xor
push
lods
dec
xor
dec
mov
into
pop
sub
xlat
fadds
push
adc
push
popf
push
dec
xlat
popf
xchg
aaa
push
aas
inc
sub
imul
add
jae
bound
jne
and
insb
dec
arpl
xchg
mov
mov
dec
mov
scas
ret
sub
hlt
rcr
xor
sub
pop
dec
out
in
outsl
rcrb
outsb
push
mov
push
mov
pop
jge
idivb
lcall
jae
in
pop
xchg
inc
jns
cwtl
fcomps
push
xor
sbb
sub
add
add
dec
test
xor
pop
push
cs
and
lret
shlb
cltd
push
jmp
popa
enter
sar
lock
mov
repz
add
xor
jno
pop
out
in
and
xor
popf
int3
adc
mov
in
mov
or
les
mov
movsb
mov
mov
add
fst
adc
inc
ljmp
ss
or
adc
add
cmp
insl
push
or
push
adc
in
xchg
push
fistpll
shrd
in
xor
sub
and
mov
mov
pop
push
loop
push
pop
fnstcw
inc
lret
xchg
cmpsl
jns
fs
sbb
xchg
add
xor
xor
adc
pop
cmpsl
pushf
sti
lea
clc
pushf
call
psubd
pusha
mov
nop
and
push
xor
mov
sub
lods
in
jle
addr16
into
lea
faddp
shrl
mov
mov
jmp
mov
mov
sub
ja
adcb
test
cltd
stos
roll
mov
add
dec
jnp
push
fdivrp
lods
out
cmp
stos
pop
jns
bound
cmpsl
sbb
pop
mov
or
push
in
cltd
inc
mov
add
add
gs
pop
loopne
sbb
push
pop
xchg
dec
cmp
dec
mov
rolb
xor
pop
dec
mov
lods
inc
mov
pop
xchg
xor
inc
cs
outsl
femms
dec
icebp
sahf
out
js
mov
fwait
arpl
push
mov
sbb
mov
lea
adc
rorl
data16
and
movsl
and
movntps
sti
sub
xchg
mov
mov
ret
enter
jmp
mov
das
inc
out
rol
lea
jo
dec
out
pop
clc
push
loop
sti
cmc
ret
pusha
xchg
mull
sbb
sub
mov
pushf
bound
testl
and
inc
mov
movsl
xor
inc
stos
adc
push
insb
das
inc
jl
cmp
jnp
out
push
pop
scas
adc
xlat
push
pop
push
std
orb
add
test
lods
ja
repz
push
sbb
mov
popf
pop
dec
xchg
clc
push
xchg
in
nop
xor
xchg
adc
mov
pop
test
jb
push
arpl
mov
pop
pop
shlb
ja
dec
mov
repz
push
icebp
out
jge
rcl
xchg
add
lods
push
jbe
jecxz
jb
stc
adc
and
or
in
add
fs
add
push
sub
mov
xor
cmp
adc
lahf
cmp
rorl
dec
dec
mov
inc
aaa
roll
call
sbb
arpl
mov
adc
aad
fldl
push
dec
cmp
xchg
xchg
mov
mov
push
mov
inc
lock
sub
add
and
dec
add
ret
jg
push
mov
jbe
sbb
outsl
fidivrs
cwtl
cmp
dec
mov
out
insl
cmp
pusha
leave
sbb
push
pushfw
add
mov
dec
mov
lea
daa
adc
fldenv
adc
pop
mov
sub
xor
cltd
jge
loop
pop
in
js
inc
aam
dec
add
mov
inc
stos
jle
jle
repnz
xchg
in
movsb
out
cltd
fwait
in
cmc
aam
cltd
cmp
add
ret
in
add
mov
orl
xchg
mov
ffreep
mov
mov
jecxz
lret
das
out
out
sahf
lds
jl
dec
andl
xchg
lds
xchg
cmc
mov
rcrl
mov
xchg
cmp
leave
sbb
mov
out
cs
mov
dec
jp
jno
je
mov
leave
inc
mov
mov
test
std
fists
leave
popa
pop
addr16
push
dec
xor
or
pop
jns
mov
xchg
imul
notb
mov
sahf
inc
add
push
xchg
mov
jecxz
push
cmp
or
scas
sub
jno
movsb
scas
imulb
fs
jl
fnsave
inc
repnz
dec
ja
xchg
stos
xchg
repnz
data16
or
mov
in
lret
pop
sbb
push
clc
adc
mov
subl
ds
inc
xor
mov
and
add
or
pusha
cmp
and
test
pop
repz
or
mov
scas
sbb
ja
xchg
dec
or
test
dec
mov
xchg
lret
xorb
or
sub
cltd
mov
dec
xor
push
pop
push
or
addr16
push
out
sbb
loopne
jl
inc
jne
sbb
and
fstpt
add
popf
mov
sub
xor
inc
imul
es
sub
es
jp
xchg
dec
pop
std
out
enter
ret
sti
and
jns
jl
or
add
mov
pushf
out
in
or
fsubrs
addl
repnz
pop
cmp
out
mov
daa
dec
or
das
cwtl
push
leave
lods
push
lret
dec
movsb
filds
ret
jle
add
dec
lahf
addr16
cmp
out
repz
ljmp
inc
out
pop
repz
arpl
out
push
pop
adc
mov
fstl
or
add
jae
mov
push
aaa
outsb
bound
fwait
mov
nop
fidivrs
xlat
mov
dec
mov
inc
xor
sub
repnz
out
adc
loope
jo
rcrb
or
sub
cmp
mov
out
xchg
sarl
mov
xor
stos
xlat
mov
push
aad
movsb
dec
int3
mov
mov
into
push
inc
in
xor
mov
xorb
inc
cmp
push
jns
mov
ljmp
subl
mov
mov
out
cmp
cmpsl
push
add
push
push
insb
mov
cmpsb
jp
data16
mov
rcr
int
lahf
stc
and
push
fistpl
pop
lds
jns
jge
push
notl
je
loopne
cltd
cwtl
aad
fwait
call
and
push
mov
xor
rcrl
or
sbbb
pop
cmp
fiaddl
shrb
mov
into
shll
iret
mov
popa
clc
movb
jge
inc
frstor
call
icebp
add
arpl
test
test
adc
mov
mov
or
cmp
outsb
and
mov
mov
mov
adc
push
mov
test
imul
sti
test
ret
gs
jne
insb
push
stos
imul
sub
pusha
test
in
les
movsl
lea
push
add
and
ds
lods
mov
mov
stc
push
ja
lcall
lea
dec
icebp
add
jns
ret
jns
in
jns
adc
cmp
gs
vmwrite
imul
into
push
or
shll
adc
jnp
add
cmp
cmp
push
pop
into
dec
fistl
dec
shll
int
push
int
mov
mov
clc
lds
in
sahf
loop
inc
xchg
loop
mov
sub
pop
test
lea
xchg
insb
add
cmp
lret
mov
cltd
xor
shlb
pop
fs
fbld
xlat
fwait
jae
shlb
cmpsb
xlat
int3
dec
pop
or
fs
pop
sub
jmp
push
aaa
mov
cld
out
mov
push
pop
mov
jge
inc
nop
ja
mov
push
and
mov
pop
and
lret
pop
arpl
data16
addr16
lret
mov
sub
jns
adc
jo
jp
in
popa
inc
imull
lock
jae
repz
sbb
sbb
add
sbb
xchg
or
add
mov
add
test
mov
xor
mov
pusha
sub
daa
dec
mov
mov
mov
push
jb
push
dec
repnz
dec
jno
cmpsb
push
mov
fs
jmp
pushf
out
or
or
sbb
cmpsb
mov
mov
subb
xchg
xlat
mov
fisubl
xchg
push
push
lods
mov
pop
add
pop
das
roll
and
inc
push
in
out
jns
and
fisubl
test
adc
xchg
mov
xchg
cmp
fisttps
out
adc
pop
lds
sub
mov
lcall
or
arpl
leave
rcll
pop
or
ret
xchg
dec
inc
leave
adc
inc
fwait
je
sahf
jmp
cmp
repz
cli
in
mov
lods
shll
out
inc
sbb
inc
pusha
jns
cmp
mov
stos
fs
jae
sbb
int3
sub
sub
je
icebp
push
adc
fdiv
aam
pop
inc
es
jl
jno
inc
clc
test
cmp
adc
and
adc
add
push
add
adc
sub
adc
scas
sbb
sarb
outsb
xor
adc
lock
mov
mov
fs
fstpl
fimull
roll
jle
enter
jb
push
js
inc
jecxz
cmc
repz
divl
bswap
fwait
mov
aaa
fwait
sbb
dec
xchg
fcoms
iret
andl
bswap
xchg
je
jl
shlb
inc
mov
push
lods
mulb
mov
pop
mov
mov
lds
jae
adc
insl
push
imul
sbb
int3
push
xor
out
mov
test
test
flds
xor
sbbl
pushf
cmpsl
push
push
aaa
out
fsubs
iret
xor
push
das
pop
cli
mov
cmp
sarl
shrl
mov
push
inc
xlat
call
icebp
mov
fcomi
shrb
adc
mov
outsl
pmulhw
ljmp
sbb
mov
pushf
test
jbe,pn
xor
mov
push
scas
push
sub
movsl
and
stc
fcompl
push
fs
decl
cmpsl
dec
je
imul
enter
ret
repnz
mov
jle
or
popf
cli
fwait
jp
in
loop
pop
cmp
mov
xchg
push
scas
adc
xor
mov
movl
mov
test
add
mov
scas
hlt
out
lods
sarl
loop
jb
shr
jl
adc
cli
arpl
fsubl
out
or
add
adc
outsl
xchg
loope
rorl
out
adc
jo
sub
pop
or
push
lret
arpl
pop
adc
lcall
ret
dec
push
ret
shll
adcb
ja,pn
mull
adc
jecxz
jg
add
push
cwtl
xor
xchg
scas
add
adc
pusha
mov
xor
daa
adc
fldcw
pop
fists
test
cmp
mov
mov
shl
inc
jb
jnp
lret
int3
pop
leave
into
imul
mov
insl
nop
repz
out
icebp
gs
imul
sbb
xchg
out
add
in
mov
ja
scas
or
mov
xchg
ds
sub
push
stos
sub
das
mov
and
add
sub
sarb
push
push
xor
adc
jno
rorb
xchg
fcomp
shlb
data16
outsl
movq
lock
mov
mov
sbb
add
jg
cmp
push
sub
pop
cwtl
ss
xor
and
push
mov
or
push
pop
xor
jg
inc
hlt
and
jmp
negl
in
aaa
or
ret
or
adc
jb
and
or
lods
insl
cwtl
shlb
inc
and
push
and
out
pop
sbb
cmp
mov
mov
shlb
pop
and
fcomp
notb
imul
out
inc
dec
pusha
into
in
inc
cltd
icebp
sbb
aam
repz
push
xchg
insl
mov
lcall
and
stc
cli
lods
mov
movsb
mov
test
push
push
inc
mov
jbe
inc
call
jns
daa
std
pushf
fdivs
pop
ljmp
test
fs
sbb
adc
push
fcomip
adcl
into
loop
inc
data16
sbb
adc
mov
aaa
int
imul
cltd
jecxz
push
jge
rcl
rorl
shlb
fincstp
ja
outsl
in
inc
sbb
addr16
sbb
pop
xor
daa
pop
ss
jbe
shr
jnp
test
in
cmp
out
in
popa
cltd
mov
adc
xchg
xchg
lods
adc
movsl
push
add
test
xor
push
mov
lret
sub
dec
cmpsb
stos
rcrb
outsl
out
je
ss
xor
fisttpl
and
cmovae
push
mov
ds
aaa
fcoms
clc
or
pop
mov
out
xor
cmc
and
jo
jle
cmpsb
push
jge
dec
dec
jp
dec
shll
inc
aad
sbb
sbb
popl
sbb
popf
sbb
lahf
scas
or
add
fisttps
adc
mov
xor
pop
mov
call
pop
iret
int3
mov
sbb
jg
dec
aas
jno
inc
jle
sbb
jmp
push
ljmp
push
loope
cmpsb
cmpsl
sub
xchg
jne
sub
mov
and
xor
lods
in
sbb
aas
scas
aaa
and
cmp
sub
lret
pop
scas
add
js
sbbl
in
cmc
ror
mov
adc
iret
test
ljmp
inc
jge
nop
cmp
pop
or
xor
gs
push
sub
and
pop
jne
cmp
add
aas
sub
lret
stc
mull
out
sbb
jo
push
lds
sahf
cli
test
jae
jmp
les
lahf
incl
sbb
imul
aaa
popf
cwtl
loop
insl
adc
fwait
sahf
arpl
imul
imul
rcrb
jne
inc
shrl
mov
sbb
xlat
add
mov
jns
push
sub
inc
push
js
fidivrs
icebp
shr
push
and
inc
jecxz
mov
fwait
mov
loope
or
add
rolb
dec
lock
mov
mov
fimull
leave
mov
or
mov
out
push
addr16
push
std
and
lock
jne
je
push
repnz
jnp
call
into
cwtl
xchg
dec
jae
push
add
pop
mov
orb
lea
mov
addb
popa
pusha
sub
xor
call
pop
xchg
or
xchg
push
fwait
jmp
inc
sub
push
scas
or
jae
das
insl
xchg
sti
xchg
repz
ds
jno
mov
nop
add
sbb
xchg
push
pop
or
cltd
imul
cmc
addb
xlat
inc
mov
mov
and
mov
icebp
sub
data16
cmpsl
lods
inc
jg
xchg
loopne
or
mov
js
sbb
xchg
sbb
dec
sub
fldcw
fisubs
fbstp
fiadds
adc
xchg
ret
movsb
sub
stos
mov
cmp
nop
pop
sub
pop
sub
inc
dec
dec
pop
push
pop
mov
or
push
dec
subl
push
pop
in
negl
lods
arpl
pop
int
or
test
sbb
xchg
out
cmp
leave
or
test
mov
adc
and
test
scas
push
pop
lahf
jmp
mov
aam
xor
push
jge
js
ret
adc
cld
xchg
pop
jne
fbstp
jnp
xchg
push
mov
outsl
jo
dec
xchg
out
out
popa
xchg
inc
popf
lahf
adc
adc
adc
ss
xor
sbb
jg
cs
cltd
pop
hlt
and
mov
sarb
out
nop
xlat
xchg
xchg
sub
adc
inc
test
mov
repnz
adc
and
jne
loop
pusha
in
sub
nop
adc
adc
and
lret
mov
psubq
cmp
xor
loopne
and
and
xchg
xchg
pop
and
dec
pop
outsl
pop
icebp
rol
test
sub
jnp
cmp
shll
jg
mul
enter
pop
adc
sub
test
hlt
cmp
add
push
shrl
fnstenv
dec
mov
lods
xchg
inc
xor
in
adc
pop
xchg
xchg
mov
mov
ret
aaa
int
fadds
cmp
fldt
stc
cmp
fwait
jl
sbb
fcomps
mov
xchg
mov
push
jno
adc
repnz
xor
mov
outsb
cmp
into
sub
xor
pop
inc
push
mov
fs
push
mov
lds
xchg
dec
dec
mov
rcll
incb
sbb
out
and
jbe
sub
mov
xor
push
mov
cmpl
ljmp
pop
jo
movsl
push
push
sub
dec
xchg
daa
mov
cmpsl
pop
lcall
inc
dec
dec
mov
mov
push
in
les
lret
out
jmp
lahf
pop
popf
jl
adc
mov
imul
hlt
rcrl
xchg
add
lds
xor
and
pop
jle,pn
mov
inc
in
jl
xlat
push
aam
ret
enter
int
cmc
xor
sub
pushf
popf
outsl
testl
pop
sbb
cmp
sub
cwtl
sbb
mov
mov
stos
adc
mov
rcr
repz
jb
cmpsb
shrb
push
adc
clc
sti
lods
jg
mov
pop
cmc
push
jmp
rcrb
jo
sbb
mov
dec
push
mov
jnp
lds
dec
xor
mov
scas
add
mov
mov
fstps
inc
jb
and
je
fstp
inc
nop
adc
pop
jge
aad
dec
data16
jl
aas
imul
popf
int3
xchg
imulb
mov
sbb
push
cld
scas
mov
mov
mov
jle
and
lea
cmp
mov
les
fidivl
divl
sub
pop
popf
cmpsb
xchg
push
aam
fcomp
leave
into
outsb
jmp
pushf
pop
jg
dec
sbb
mulb
mov
jmp
loope
pop
sbb
loope
bound
movsl
jmp
stos
mov
xchg
pushf
fidivs
pop
cmp
dec
rolb
imull
mov
sbbl
mov
ret
pushf
inc
and
das
push
int
dec
out
lock
ret
stc
push
cwtl
vandnps
sbb
jae
sbb
in
push
xchg
mov
cli
xchg
lahf
add
add
leave
adc
ret
mov
mov
sarb
cld
sub
cmpsb
test
push
loope
add
mov
jg
xchg
dec
push
fsts
repz
jp
pop
inc
cmc
jno
push
clc
fldl
into
hlt
dec
repnz
loop
pusha
xchg
icebp
gs
mov
adc
mov
lock
push
mov
lret
mov
push
mov
xor
mov
lret
js
push
push
leave
fcom
les
dec
inc
ret
dec
les
les
dec
pushf
sbb
inc
loop
jle
pop
repz
repz
push
clc
push
pop
dec
mov
push
adc
sahf
mov
or
and
mov
inc
inc
adc
mov
fnstenv
ljmp
lret
fistl
and
div
faddl
push
cli
inc
leave
xlat
stc
mov
loopne
jnp
cld
out
test
jb
loop
je
test
sbb
imul
lret
rorb
mov
and
and
mov
lret
adc
les
data16
lea
jo
push
loope
sahf
jmp
decl
jb
pushf
push
sbbb
xchg
mulb
inc
js
cltd
add
icebp
jae
das
cwtl
repz
movl
mov
pop
scas
mov
dec
bound
cli
push
jmp
xor
loop
js
mov
ja
repz
insb
push
jge
lcall
cltd
js
adc
inc
aas
aas
add
push
xor
mov
cmpsl
mov
xor
add
cmc
mov
xor
adc
mov
mov
icebp
ret
leave
jb
adc
jns
jae
test
inc
cmp
xlat
xchg
loopne
lods
out
pop
lea
ret
mov
jbe
subb
push
xor
scas
imul
adc
pop
lea
das
xor
movb
xor
sub
sub
and
sub
inc
mov
repz
cmp
ja
dec
ja
lret
out
in
lods
loop
leave
insl
div
jo
sbb
lea
mov
sbb
int
mov
cmp
xchg
sub
in
cmpl
cmp
push
mov
frstor
cmpsl
xlat
or
inc
iret
pop
pop
les
dec
push
jle
idiv
inc
inc
ret
hlt
cmpsb
call
je
pop
add
icebp
adc
xor
adc
hlt
pop
int3
out
loop
add
imul
mov
sbb
and
movsb
and
mov
pop
push
mov
push
cmp
sbb
outsb
or
imul
inc
jnp
jmp
and
mov
jbe
sbb
arpl
xor
sbb
adc
decb
cwtl
xor
adc
stos
mov
cmpb
push
xor
xorb
cmp
pop
aad
dec
rcl
inc
jg
lret
push
sbb
cwtl
imul
jmp
div
fs
sbb
and
loopne
in
in
or
or
xchg
nop
mov
mov
sub
and
test
inc
shrl
es
dec
aaa
fsubrs
jnp
pop
incb
dec
jge
push
xchg
mov
cmc
imul
cmp
sahf
inc
cmc
iret
jae
pop
xchg
test
mov
jnp
imul
and
out
adc
and
and
sbb
test
sarb
add
mov
inc
js
cmpsb
pop
ss
pop
pop
xchg
clc
sbb
insb
pop
sbb
jne
xchg
test
lds
sbbb
mov
mov
les
sbb
cld
or
call
dec
adc
sahf
adc
popf
xchg
adc
dec
jnp
pop
dec
testb
ljmp
lahf
mov
leave
das
std
in
sbb
inc
and
movsb
jl
dec
mov
add
or
je
mov
push
das
insl
mov
fistps
xor
cmp
cmp
push
iret
ss
aaa
inc
inc
xchg
and
sub
dec
cmp
shll
les
movsl
jae
popa
in
adc
shrl
push
jecxz
into
fs
arpl
call
push
scas
cmpsl
dec
dec
adc
stos
add
stos
adc
mov
jp
inc
data16
imul
cmp
imul
negl
sbb
cmp
adc
push
adc
xchg
cli
jns
xchg
cmp
hlt
test
cmp
sub
sub
movsb
sub
movsb
and
push
arpl
inc
ss
lret
push
push
jge
scas
loopne
ljmp
jmp
loop
and
or
xlat
lods
ds
or
xor
mov
add
in
xor
ss
mov
pop
push
fdivrp
mov
fisubrs
pop
mov
loope
mov
das
shrb
jecxz
movb
hlt
push
fcmovnb
jno
add
jl
imul
xchg
dec
gs
fwait
int
negb
rcll
das
cltd
addr16
jle
mov
jno
mov
jno
pop
mov
aam
and
pop
or
add
test
nop
jge
add
das
in
test
mov
sbb
or
mov
sbb
push
sbb
dec
pop
xchg
lock
daa
mov
hlt
je,pn
mov
dec
pop
inc
sub
or
and
sbb
pop
pop
mov
shrl
cmp
lods
mov
daa
xor
cmp
jmp
adc
jl
outsb
not
loop
leave
jcxz
adc
push
nop
sbb
rorb
fidivs
mov
ds
mov
xor
lret
aam
pop
lock
mov
rcr
insb
xchg
leave
dec
push
or
aad
roll
jo
sub
jne
ja
stos
rcrl
pop
in
jne
aad
mov
fsts
xchg
mov
cmp
push
sub
jg
xchg
sub
xlat
ret
fsubs
sub
or
dec
call
jp
sbb
xchg
push
mov
hlt
repnz
call
sahf
inc
and
push
xchg
and
cmp
jo
pop
xchg
jg
jns
stc
cmpsl
inc
mov
mov
rorl
arpl
push
add
jb
shlb
ret
dec
add
insb
pop
in
push
jb
push
loopne
push
add
shrb
push
out
loopne
out
cmp
push
xchg
enter
dec
int
add
adc
mov
lcall
mov
sbb
sub
and
fstps
push
inc
into
aad
push
dec
mov
xor
jns
inc
repz
hlt
ljmp
cwtl
shrb
push
in
xchg
lret
popa
cmovg
xchg
sahf
cmp
stc
xchg
xor
mov
add
xlat
loope
dec
mov
sub
lds
testb
sbb
pop
pop
sbb
xchg
int3
dec
inc
inc
add
je
lea
pusha
pop
out
cmpsl
pusha
xchg
popa
loopne
pop
cltd
repz
sbb
mov
cmp
add
mov
ds
xchg
sub
daa
mov
adc
enter
or
loop
mov
adc
out
sub
das
inc
mov
stc
sub
jb
pop
mulb
add
in
pop
in
nop
clc
push
and
in
fistpl
aas
fs
cmp
xchg
or
jae
ss
sub
sub
xchg
jbe
into
shrb
xchg
dec
sub
inc
and
stc
mov
arpl
push
test
mov
stos
mov
pop
adc
mov
cmp
cld
ss
add
sub
xchg
push
xlat
pop
mov
sub
xchg
inc
dec
dec
mov
lds
jae
hlt
jge
mov
call
add
and
lahf
mov
pop
push
or
fisubl
add
push
lock
sub
dec
imul
sar
and
pop
cli
dec
ja
pop
popf
jl
pop
inc
stos
jle
dec
dec
adc
insb
sbb
popa
in
popa
insb
or
adc
cli
setns
xchg
popf
add
das
xchg
pop
mov
inc
xor
mov
xor
pop
pop
mov
pop
fldcw
fsubl
xchg
fldl
xchg
or
cmp
add
cmp
mov
jno
ja
lahf
loopne
bound
or
mov
test
xchg
xor
or
xor
mov
into
mov
jb
fsin
pop
bound
inc
and
imul
test
popa
add
sbb
mulb
jg
jmp
dec
inc
ljmp
cmp
aam
xor
pop
dec
xchg
lea
xchg
add
cmp
jnp
fcmovbe
sub
in
test
inc
inc
jo
fs
cmp
dec
add
in
adc
div
cld
pop
out
ljmp
or
pop
popf
lahf
jne
sbbb
cltd
mov
mov
xor
mov
mov
insl
cmp
xor
push
shll
and
rcr
and
and
xchg
jge
ret
mov
dec
xchg
addl
iret
add
inc
jae
std
ljmp
out
or
adc
xchg
mov
sub
mov
test
xchg
rol
jno
repz
mov
or
sti
mov
push
mov
shlb
je
addr16
je
loop
xchg
sbb
dec
or
popa
fcomps
jno
or
aad
xchg
cmp
fsts
mov
push
aaa
push
imul
scas
cwtl
bound
rcrl
inc
push
pop
dec
lock
rclb
sbb
rolb
or
sbb
add
mov
rcrl
xor
xor
add
or
xchg
lods
xchg
pushf
test
xchg
subb
cmp
cld
stos
fadds
cld
xchg
and
mov
cld
loope
cmpsb
and
and
mov
in
aam
adc
rolb
jl
gs
fistpl
sub
xchg
test
test
ficompl
fcompl
jmp
enter
aam
adc
cmp
xor
fbstp
xor
xor
jb
rcr
loop
mov
xchg
rorb
mov
ds
repz
xor
ljmp
cwtl
fwait
lahf
outsl
cmp
sti
mov
xchg
xchg
dec
addb
test
add
cli
cmp
loop
jl
mov
push
cmpsl
sbb
mulb
fsubl
and
sbb
dec
faddl
mov
push
inc
loope
push
aad
xor
icebp
sbb
testl
out
ja
sub
testl
or
andb
ds
mov
pop
mov
sub
jno
daa
push
dec
inc
xor
push
pop
pop
fcoms
jle
rcrl
icebp
and
int
jmp
xor
outsb
dec
repnz
vmovapd
jmp
data16
out
icebp
pop
movhlps
loope
arpl
mov
adcb
ds
and
ret
fsubrs
das
mov
cmpsl
and
enter
daa
xor
inc
dec
push
and
lret
pop
xlat
mov
mov
inc
lock
jle
addr16
call
adc
inc
pop
xchg
aas
mov
mov
cmpl
xchg
add
adc
in
lret
dec
sahf
sarb
and
and
out
jns
push
dec
inc
jle
std
int
mov
mov
test
in
subl
jbe
xor
sti
lds
jl
nop
xchg
adc
mov
lock
pop
ds
jle
hlt
das
lcall
xor
and
pop
stc
es
rcrb
sbb
jp
pop
test
jge
dec
leave
je
mov
jg
neg
jle
or
hlt
fwait
mov
xor
out
popa
dec
in
popa
fcoml
jmp
icebp
shll
stos
mov
add
mov
ds
scas
mov
arpl
xor
shl
mov
push
and
inc
mov
test
pop
pop
jmp
dec
cmp
gs
pusha
popa
ljmp
or
adc
mov
mov
push
pop
mov
sbb
and
lods
pop
mov
aaa
mov
add
mov
add
movsl
aad
add
dec
fwait
jnp
rclb
adc
movsl
fyl2xp1
pop
loopne
jae
out
in
aad
out
jb
pop
int
adc
sbb
or
adc
ret
insl
push
insb
or
movsl
jmp
scas
pop
stos
xchg
fldenv
int
rorl
or
cmp
test
rcll
lds
sub
hlt
testl
push
push
adcb
inc
je
test
xchg
xchg
cmp
push
mov
subb
jp
les
lds
test
arpl
pop
mov
mov
orl
dec
mov
dec
jns
std
adc
xchg
cmc
dec
out
movsl
jecxz
loope
icebp
stos
mov
lret
out
push
data16
or
sahf
test
pop
fisttpl
les
scas
or
mov
cmp
loopne
outsb
adc
sub
mov
loope
jl
outsl
pop
add
mov
aad
cld
nop
sti
shrb
push
push
popa
dec
aas
add
sti
insb
xor
and
mov
scas
into
cmp
or
call
cmp
lock
jne
push
scas
sub
or
and
cmp
mov
lock
fsubrl
push
inc
xchg
inc
mov
int
shlb
mov
jge
jge
fcompl
pushf
dec
insl
fstl
nop
lret
dec
push
xchg
or
cmp
add
or
mov
push
das
pop
pop
lods
and
cwtl
movsl
pop
xor
xchg
sahf
lret
push
fcmovb
pop
in
fstps
cwtl
cld
in
ljmp
mov
outsb
js
pusha
pusha
jb
lahf
push
jne
gs
popa
nop
xor
cltd
lret
dec
ds
mov
cli
sub
mov
pop
pop
fcomps
sub
rcl
and
or
adc
pop
rol
lds
loop
jo
in
fiaddl
imull
pop
inc
insb
insl
insl
hlt
xchg
sbb
push
outsl
repnz
push
popa
hlt
add
push
fdivl
mov
repz
lret
or
adc
lret
xor
loopne
scas
adc
into
cmp
mov
pop
icebp
sub
lret
dec
xchg
call
clc
nop
pop
jecxz
pop
add
addr16
adc
leave
sbb
ret
add
push
sbb
add
in
mov
mov
lds
mov
adc
fstl
mov
sub
ret
rol
dec
arpl
or
inc
jg
xor
mov
sti
addr16
push
arpl
push
cmp
in
add
cmp
or
test
xor
inc
adc
dec
stos
sbb
pop
lret
xor
pop
and
mov
into
cmpsb
fnsave
pop
xlat
mov
xchg
jae
sbb
movsb
cmc
loop
out
insl
cmp
mov
inc
fwait
std
icebp
into
cmp
aas
add
xchg
out
add
rorl
fwait
cmp
sub
mov
lret
movsl
mov
lret
push
imul
xor
mov
jmp
jp
sbb
mov
inc
aas
jl
je
ror
xchg
sbb
pop
pusha
push
cmp
mov
mov
stos
aam
cmp
and
stos
adc
in
shr
adc
dec
aad
fildl
pop
push
mov
sub
jb
lds
pop
jb
insb
mov
ss
mov
pop
xchg
cmp
into
es
add
popf
mov
mov
cmp
pushf
mov
xor
movzbl
push
push
push
cmp
int
push
jmp
rcll
jl
push
aas
add
jl
repz
inc
cwtl
mov
mov
inc
movsb
xchg
sahf
mov
xorl
or
sub
xor
fcoml
ret
or
mov
dec
and
jbe
test
mov
addr16
icebp
jg
enter
icebp
xor
xchg
lret
in
pop
jns
mov
das
sahf
xchg
std
mov
push
mov
dec
cmp
aas
mov
jne
movsl
cmp
lock
inc
xor
gs
in
xchg
int
int3
jmp
lea
mov
lock
lock
inc
sti
mov
jg
scas
popa
mov
mov
or
xchg
sbb
cmp
mov
out
scas
sub
add
cmp
mov
pop
adc
rcrb
fsubrs
pop
lods
mov
jae
int
fucomip
jns
rorl
inc
jmp
push
in
lock
xlat
jmp
cmp
gs
dec
into
mov
adc
xorl
aad
mov
mov
es
fnop
and
dec
int
rorl
jb
mov
lret
jge
in
loopne
jb
pop
cmc
hlt
mov
je
ljmp
jecxz
loopne
xchg
adc
sbb
js
cmpsb
mov
call
mov
pushf
stos
cwtl
xchg
nop
aam
lcall
mov
aad
xlat
ret
inc
aaa
inc
les
pop
dec
stc
pop
out
imul
mov
xchg
outsl
loopne
push
lcall
adc
pop
out
lcall
add
cmp
inc
outsb
je
pop
movsb
and
sub
popa
xlat
mov
movsl
test
leave
or
divl
pop
lret
aam
rol
js
cld
in
cmp
je
out
push
xchg
outsl
out
imul
or
sbb
push
iret
int
add
xchg
mov
jmp
test
out
mov
mov
pop
lods
das
mov
addr16
dec
shll
aad
stc
lock
loop
ljmp
lock
jae
push
out
jae
add
sbbl
xchg
mov
lcall
add
xchg
in
andb
pusha
test
xor
ds
cmp
mov
ljmp
dec
lods
aad
rorb
adc
rcr
call
arpl
dec
leave
ja
out
cmc
je
loop
in
cmp
in
sahf
jg
pop
out
jno
adc
ds
mov
xchg
add
xchg
sbb
add
or
sbb
and
dec
xchg
aaa
fnsave
cli
scas
aam
iret
repnz
pop
out
iret
call
pop
stos
lret
push
sbb
mov
das
sti
arpl
sbb
mov
inc
push
mov
cmp
push
icebp
xchg
xchg
pop
mov
cs
dec
mov
mov
and
sbb
call
sub
push
jecxz
dec
pop
xadd
push
ja
dec
in
or
je
aam
test
repnz
cmc
jns
popf
mov
push
popf
mov
mov
sub
cs
in
aas
pop
fistpll
xor
aaa
inc
pop
dec
sub
xlat
jge
push
push
rcrl
jl
mov
cmc
jo
inc
jge
inc
hlt
sub
inc
cld
enter
arpl
adc
in
sbb
pop
adc
cs
push
daa
sub
xchg
outsb
and
das
lods
and
sub
icebp
es
mov
fsubr
mov
int3
mov
dec
mov
je
mov
dec
or
mov
mov
lock
lret
popa
lret
jno
cmp
inc
in
nop
loopne
fs
in
popf
gs
dec
scas
mov
mov
dec
mov
js
imul
int3
cld
add
fisttpll
ja
int
loope
inc
mov
repnz
inc
mov
mov
xchg
adc
pop
dec
addr16
cmp
add
pushf
popa
sbbb
push
mov
mov
lods
call
xor
mov
test
pop
push
and
jmp
mov
inc
pop
imul
sbb
pop
add
out
in
pusha
out
adc
sahf
cld
cli
sub
xlat
adc
add
shlb
pop
in
aaa
ret
cmpsb
push
cs
loopne
stos
dec
addr16
xor
add
jo
dec
push
or
jmp
cli
jb
jae
cmp
xor
fnstcw
sub
push
dec
xchg
cwtl
std
push
les
aam
sub
add
andb
sahf
xor
test
mov
mov
sub
jno
and
pop
lahf
push
pop
adc
push
jmp
rorl
in
jle
je
jo
push
inc
in
pop
imul
js
cmp
in
mov
sbb
rcrl
imul
or
xor
cmp
pop
sarb
ret
stos
inc
pop
and
das
adc
and
dec
pop
mov
inc
push
mov
jns
mov
hlt
les
out
pop
loopnew
push
sbb
ljmp
push
out
lret
jb
xor
ss
stos
test
cmp
mov
sub
dec
fs
pop
xchg
lods
rolb
inc
xchg
push
cmp
or
insb
ret
lds
pusha
mov
and
push
sti
out
pop
popf
sub
mov
jl
ret
adc
add
xor
test
stos
pop
bound
lods
mov
push
mov
cmpb
int3
adc
addr16
inc
addr16
push
imul
mov
push
sub
in
out
xchg
mov
loope
lcall
sub
xchg
mov
jns
or
out
test
cwtl
pop
je
fdivl
popa
or
daa
and
imul
push
loop
mov
fs
rolb
testb
ficoms
decb
in
loopne
cmc
popf
pop
pop
xor
mov
sub
lea
jge
leave
add
jl
jecxz
in
dec
mov
cmpsl
xchg
dec
hlt
pop
mov
scas
push
lds
inc
add
xchg
repz
out
sbb
loopne
insl
cmpsb
lock
das
inc
in
mov
pop
rcrb
jne
xor
cmp
btc
jae
sbbb
mov
loope
stos
mov
sbb
ret
rorb
adc
test
movsl
xchg
in
pop
adc
dec
mov
movl
mov
jb
sbb
xchg
test
lds
push
add
das
inc
mov
add
insb
mov
sub
or
test
pop
scas
push
adc
js
jmp
pop
out
xchg
jmp
push
call
addr16
sahf
dec
sbb
clc
decb
lock
call
fs
les
mov
adc
aaa
mov
mov
enter
sarb
jge
jae
push
hlt
xlat
mov
add
int3
andl
push
fs
xchg
dec
push
sub
aad
jns
inc
imulb
and
loopne
stos
or
fsubl
mov
stc
sbb
cmpsl
sbb
test
add
fldcw
mov
popa
cmp
xchg
dec
and
adc
mov
ret
shll
jle
arpl
test
fucomip
push
cld
sbb
cltd
lods
jno
mov
sub
add
add
pushf
jo
popa
push
xchg
pusha
push
dec
or
pop
into
ret
mov
fildll
daa
addb
scas
outsl
xlat
lds
fsts
cli
loopne
dec
outsb
daa
sbb
inc
cltd
push
cld
mov
imul
cld
loope
xlat
add
cmp
add
int3
mov
cmp
dec
repz
and
mov
push
cmp
mov
dec
mov
ja
xor
sub
mov
mov
arpl
gs
xchg
gs
mov
mov
or
push
sub
cmp
dec
mov
call
sqrtps
pop
dec
dec
pop
push
test
ror
or
and
add
adc
xchg
clc
lock
sbb
repz
pop
lcall
cmp
pop
cmp
and
mov
jg
dec
pop
xorl
dec
scas
enter
ljmp
frstor
test
or
jl
mul
inc
adc
push
outsl
xor
ja
adc
mov
les
pop
mov
add
sbb
mov
dec
or
push
ds
xchg
gs
aaa
push
cmp
lds
xor
in
sub
pusha
test
cltd
mov
xchg
cmpsl
orl
add
fdivrs
fnsave
fsubrl
movsl
cmpsl
das
es
ret
pop
imul
push
cmp
sub
mov
mov
mov
or
das
inc
and
test
dec
ds
jno
inc
xor
insl
mov
ljmp
loope
add
test
pushf
mov
mov
or
pop
mov
rdpmc
mov
lret
ret
push
add
mov
xlat
test
stos
fbld
aas
ror
sbb
stos
sti
and
or
dec
pop
dec
ret
in
outsl
xchg
inc
sub
in
je
cmp
stos
inc
mov
gs
lret
fs
outsl
cmp
lahf
adc
mov
sub
sbb
xor
pop
lock
icebp
pop
sub
es
pop
cmp
hlt
mov
dec
in
shlb
jno
fldenv
or
cmp
loopne
insl
add
pop
sbbl
aad
adc
iret
or
mov
xor
push
or
pop
push
push
jae
sbb
stos
in
insl
imul
sbb
pop
mov
ffree
inc
rcl
or
or
ss
fcomi
cli
outsb
pusha
cld
xor
mov
call
pop
loope
loopne
or
ror
or
jg
cmp
mov
cvtpi2ps
add
cmp
pop
jns
sub
lods
pop
scas
stos
xlat
push
mov
pop
push
scas
or
inc
lret
jle
aad
inc
popl
enter
in
mulb
clc
sbb
repnz
imul
sub
mov
jno
cmp
cmp
test
out
gs
out
mov
add
push
mov
push
lret
pop
push
lret
lret
cmp
loop
rcrb
push
sti
clc
fidivrl
lock
lds
dec
jecxz
repnz
jmp
popf
lcall
jne
sbb
shlb
push
je
add
test
cmp
and
xor
fidivl
shrl
enter
fs
shll
mov
mov
aas
adc
adc
xchg
cmp
movsb
cwtl
test
mov
or
adc
cmp
cmc
mov
cmp
cmp
xor
in
hlt
test
push
jl
ror
inc
ja
jmp
popa
mov
imul
flds
jnp
xchg
rolb
push
mov
push
mov
enter
scas
outsb
int
hlt
sbb
cmp
inc
jns
mov
add
pop
lods
xor
lds
pop
int3
pop
int3
mov
sub
call
inc
inc
inc
pusha
lock
mov
stc
adc
out
lret
in
in
fs
push
lcall
sub
pop
push
lods
xor
add
pop
shlb
jge
aaa
push
xchg
fsubs
jmp
mov
ffree
xchg
adc
jae
ret
cmp
push
leave
in
jnp
in
xchg
imul
jae
dec
in
push
mov
cmpsl
clc
sbb
add
sub
ss
mov
sub
mov
std
push
in
push
cmp
mov
stc
lods
movb
pop
dec
leave
idiv
cwtl
mov
fdivs
sub
aad
shlb
xchg
push
sub
fs
mov
mov
mov
sbb
stos
sbb
pop
pop
repnz
xor
int
dec
or
aad
xlat
adc
dec
push
inc
mov
popa
pop
aas
dec
popa
cmpsb
jbe
jmp
jmp
cld
mov
jne
adc
outsl
dec
sbb
lea
xlat
push
inc
adc
addl
mov
testb
loop
pusha
xor
pop
lcall
nop
dec
pop
daa
mov
iret
ret
add
mov
int3
cmp
mov
jle,pn
out
jo
out
fsubr
and
shr
call
mov
xchg
xchg
mov
stc
or
mov
cmp
push
mov
insb
mov
aaa
outsb
push
push
sub
and
sbb
jp
xlat
or
mov
inc
addr16
stos
jp
jmp
sbb
pop
popf
pop
out
das
pushf
adc
xor
jne
push
xchg
push
outsb
mov
xchg
pop
pop
cmp
mov
cwtl
scas
fbld
repz
adc
outsl
inc
iret
jnp
les
dec
jo
loop
std
inc
ljmp
mov
push
xchg
js
inc
cmpsl
xor
mov
fsubrl
outsl
push
lods
jmp
and
movsl
in
xchg
ljmp
and
pop
or
fst
jns
gs
sbb
into
ret
jle
push
jns
loopne
leave
js
adc
pop
adc
xchg
sar
jae
jmp
dec
mov
sbb
cmp
pop
pop
add
cmp
addl
dec
mov
sbb
jae
or
fstpt
inc
shl
pop
sbb
sbb
popf
inc
pop
les
repz
ljmp
xchg
push
xchg
rclb
dec
xchg
xchg
leave
add
cmp
adcb
add
mov
imul
inc
push
mov
fbstp
xchg
mov
test
inc
addr16
adc
push
repnz
imul
call
mov
js
jecxz
adc
and
hlt
add
xchg
call
or
lea
or
xor
xor
aaa
call
roll
mov
dec
lds
iret
xor
int
jns
arpl
out
fndisi(8087
int3
pop
cwtl
mov
dec
jns
outsl
dec
das
popa
outsb
jo
ljmp
roll
test
add
push
adc
ret
xor
or
fisubrl
pop
cmpsb
test
shlb
inc
dec
stc
movsb
movsb
fidivl
pop
stos
rcl
sub
lods
into
lret
and
mov
inc
scas
cld
stc
sub
aaa
xor
sub
add
adc
lods
sahf
xchg
cmp
mov
mov
das
data16
mov
mov
sub
xor
sti
das
mov
insl
pop
jae
arpl
lret
icebp
repnz
pop
mov
loope
xor
hlt
mov
arpl
loope
dec
sub
xchg
mov
xor
xor
add
lods
lea
push
repnz
fiadds
sub
subb
push
mov
icebp
ficoms
gs
enter
and
xchg
adc
jb
mov
shl
ret
xchg
out
cmp
mov
pusha
pop
in
fs
xchg
lahf
mov
fmuls
add
jg
xchg
sub
lods
clc
movsl
lods
xor
lods
inc
add
rclb
int
enter
sbb
into
push
dec
push
push
lock
lds
mov
and
test
push
pop
out
das
pushf
sbb
popa
fistl
clc
and
mov
jbe
stos
into
subb
fcmovb
xor
fcmovne
inc
pop
xor
test
ror
movsb
pop
mov
hlt
lahf
les
pop
push
or
les
jle
test
iret
cmp
adc
imul
xor
adc
mov
cmp
ficoms
sbb
mov
and
in
int3
aas
and
scas
not
xor
push
fwait
xchg
hlt
inc
push
cli
rclb
leave
jle
hlt
jnp
jae
ds
outsb
ja
or
imul
cwtl
xchg
push
or
adc
inc
mov
push
push
stos
jno
mov
push
and
mov
sub
xlat
cmpsl
movsb
pop
int3
pop
faddp
mov
movsl
push
inc
mov
push
jnp
xor
cmc
negl
loope
jns
in
jo
jno
xchg
inc
jmp
mov
in
hlt
push
nop
mov
cmp
add
sub
cmp
and
mov
and
sub
dec
xor
adc
sub
pop
dec
lret
call
arpl
inc
shl
jp
fildll
std
jae
push
lcall
pop
inc
imul
xchg
pushf
mov
mov
mov
mov
shlb
and
lock
rclb
sub
push
fdivl
xchg
mov
cli
or
fidivs
jns
ljmp
out
into
stc
in
jbe
popa
out
jmp
insl
lea
xchg
popf
push
mov
adc
add
daa
jge
xor
pop
lock
subb
ficoml
dec
leave
xor
inc
into
fisttps
jb
dec
jnp
repnz
divl
lods
mov
jecxz
sub
push
sbb
sub
clc
xchg
subb
jns
jle
add
xchg
jbe
stos
inc
dec
fsub
mulb
fldcw
sahf
daa
dec
mov
push
lret
out
into
jp
jns
inc
int
pop
jmp
xor
xor
pusha
popa
clc
lock
cmpsb
pusha
test
xchg
addr16
add
sbb
mov
mov
xor
aas
ds
fists
and
maskmovq
testl
or
push
cmp
mov
pop
aas
add
xchg
lock
lock
sub
xchg
mov
out
js
cmp
lret
pop
sub
xor
faddl
das
ljmp
mov
mov
pop
add
adc
mov
push
shrl
cmp
ja
in
stc
iret
jge
push
pop
xlat
jmp
test
jne
push
dec
xchg
mov
jne
add
jns
cmp
sahf
sahf
or
push
cmp
js
add
loop
lea
int
jnp
add
push
ljmp
or
inc
ret
xchg
mov
ja
jnp
call
jbe
mov
addr16
sbb
imull
push
xchg
add
xchg
adc
loopne
cmp
mov
mov
aam
std
dec
mov
daa
into
outsl
cli
bt
rclb
add
fadds
mov
into
mov
cli
cwtl
mov
mov
jno
sub
loop
fsubl
push
sbb
adc
or
push
mov
cli
mov
jecxz
cmp
cs
imul
outsb
adc
lahf
jbe
cmc
pop
in
lock
loope
inc
pop
icebp
xchg
icebp
adc
mov
fwait
mov
mov
inc
or
cmp
arpl
repz
cwtl
xor
sbb
pushf
dec
or
mov
jne
mov
lcall
inc
aam
aad
xor
lret
std
incb
stos
icebp
jp
test
imul
fwait
out
addl
incl
cwtl
xchg
cmp
addr16
sub
hlt
and
xor
mov
jge
sub
scas
fldl
shll
notl
xrelease
iret
inc
imul
jae
inc
fcomi
call
pop
cltd
jno
shll
les
xorb
mov
dec
mov
cmp
inc
cmpl
pop
clc
rcl
aaa
call
jge
mov
cli
lods
aad
sahf
push
int
fxch
or
mov
cmpsb
dec
jae
out
addr16
mov
xor
outsl
andl
shl
mov
xchg
xlat
jb
popl
int3
and
sub
repnz
and
push
cmpsb
jbe
jge
mov
push
cmc
xor
call
lret
movsb
or
popa
lock
fisttpll
push
xchg
in
int3
mov
add
iret
and
xchg
and
stos
sbb
pop
mov
dec
fmul
mov
jge
jno
sti
sub
lcall
pushf
mov
movsl
enter
rorb
lret
xchg
cmp
inc
xor
xor
xlat
mov
xchg
fldl
pop
xchg
pop
cld
push
arpl
push
and
xorl
lret
mov
scas
jmp
int3
mov
jle
cs
dec
cmpsl
sub
out
inc
and
jb
add
imull
pop
lock
pop
mov
dec
std
jle
push
xchg
imul
in
in
xchg
lahf
sbb
scas
xor
aaa
xchg
xchg
push
cmp
dec
and
jae
xor
xchg
and
pop
aas
inc
inc
das
mov
dec
mov
add
rorl
pusha
int
sub
jg
lock
arpl
testl
sbb
pop
ds
mov
xchg
sahf
xor
ljmp
ret
pop
stos
jp
cmp
icebp
lretw
daa
cmp
mov
aas
pop
test
enter
in
push
lds
rcll
jo
clc
in
shrl
scas
lahf
cmp
cwtl
mov
add
jbe
pop
pop
push
pop
push
cmpsb
sbb
dec
jle
xor
add
cmp
and
mov
in
imul
mov
xchg
sbbl
adc
popa
decl
scas
leave
mov
xor
stos
repz
ja
fcomi
daa
sahf
pop
jmp
add
adc
add
mov
adc
or
dec
adc
pop
push
out
sub
lods
adc
push
scas
daa
lds
das
sub
dec
push
out
inc
xchg
jb
or
jecxz
repnz
jne
ljmp
xor
iretw
rcrl
iret
sbb
mov
push
push
mov
sbbb
aas
stos
sub
or
fsubrs
push
iret
or
int3
adcl
add
popf
jns
dec
shll
fstpl
lret
imul
adc
jmp
cmp
cld
xchg
cmp
or
sbb
xchg
mov
push
mov
ljmp
mov
ret
outsb
inc
into
pop
gs
fldl
pop
gs
inc
push
or
in
mov
xchg
popf
pop
out
cmp
scas
add
pushf
movsl
pop
stos
sbb
sbb
dec
mov
mov
mov
cmp
mov
add
aaa
fidivl
push
in
fbld
pop
push
inc
inc
outsb
fistps
dec
xor
pop
inc
dec
add
call
push
sbb
pand
dec
cmpsl
fiadds
add
push
scas
nop
cmp
jp,pt
jnp
incl
das
imul
test
ret
mov
fcompl
lods
lret
fnstsw
leave
adc
xchg
stos
lret
mov
outsl
lds
cmc
out
popa
repz
notl
xchg
enter
inc
xchg
ret
and
rclb
add
fwait
data16
jl
mov
vcvttsd2si
add
push
or
xchg
cli
fxch
pop
mov
sbb
add
cmp
in
and
sbb
sub
mov
loopne
popf
rorl
fwait
in
in
jg
adc
mov
mov
xor
sub
ss
scas
jae
mov
test
cmp
jp
orb
clc
dec
sub
in
push
pushf
jmp
push
or
addr16
ret
or
pop
mov
add
lahf
test
outsl
das
sub
mov
sahf
lds
dec
stos
add
mov
cmp
add
sbb
mov
imul
aad
es
rcl
and
enter
push
sahf
sub
bound
pop
sti
ja
dec
loopne
push
out
mov
jecxz
add
out
lods
pop
sbb
or
adc
and
inc
sbb
pusha
add
xor
mov
mov
mov
sub
out
add
cld
fldenv
push
rorb
fmull
xchg
incb
repz
sarl
mov
add
out
test
pop
xchg
fistps
push
adc
xchg
ret
dec
cmp
roll
lods
iret
cmp
pop
scas
mov
es
cmp
cmpsl
lock
inc
push
xchg
fs
jl
push
imul
lods
idivl
outsl
xchg
xor
lahf
in
call
sti
fisubl
add
cmp
or
mov
test
lock
test
pop
outsl
sarl
lods
sub
in
jmp
out
int
xor
jl
jae
lock
call
jbe
loopne
lock
xchg
fsubl
ja
loope
ja
fidivl
out
push
ret
push
pop
mov
mov
xor
sub
aam
cmp
ja,pn
jne
pop
movsl
in
rcrl
clc
roll
ret
loop
inc
leave
enter
or
pop
imul
stos
add
mov
bound
push
cltd
push
movsl
aas
sub
cmp
scas
xchg
jb
push
daa
mov
mov
inc
sub
cmp
and
pop
jno
insl
jp
pop
cmpl
inc
imull
inc
pop
popf
xor
jg
push
hlt
outsb
inc
cmp
loop
std
sub
cwtl
jae
or
aas
cmp
subb
and
push
fistpll
stos
mov
movsb
rcrb
das
add
mov
xchg
sub
adc
cmp
mov
push
rorb
arpl
sar
adc
jno
dec
in
push
push
bound
push
lcall
fsubs
fisubs
push
mov
and
sbb
cmp
out
mov
sub
fstps
pushf
pop
daa
adc
ds
rclb
fistps
jbe
test
mov
out
out
xchg
jo
sub
aas
fnclex
mov
sti
out
aad
jnp
dec
xchg
or
cmp
movsl
push
stc
xorb
xlat
mov
add
pop
fwait
push
adc
mov
lahf
pop
hlt
cmp
data16
sub
cli
dec
fcomip
bnd
ljmp
xchg
call
pop
addb
mov
popf
in
adc
lret
mov
or
scas
inc
sub
jo
shl
cmp
lods
imul
xor
movsb
push
xchg
popf
push
mov
rcrl
sbb
fdivl
outsl
stc
enter
repz
out
lret
insl
jno
jecxz
dec
or
subl
push
mov
cmp
lcall
nop
ljmp
xchg
fstps
mov
shrb
inc
je
aas
push
jle
push
jecxz
pop
in
xchg
ret
sbb
lods
stc
cmpsl
sub
nop
loope
icebp
in
imul
jb
and
jne
lods
test
rclb
and
test
mov
jo
sarl
and
sub
or
cwtl
and
xchg
sub
nop
add
nop
aaa
nop
sbb
ds
fwait
out
xchg
adc
dec
jnp
sbb
sahf
pop
adc
cmp
xchg
jge
pop
test
mov
and
rcll
cmpsl
mov
sub
daa
stc
shlb
cmovle
dec
pop
inc
cli
push
mov
xlat
outsb
fbld
xchg
repz
mov
push
lods
mov
mov
pushf
lret
pushf
push
js
jg
rcrb
aad
in
cwtl
scas
xchg
mov
or
adc
lds
cmpsb
sbb
push
loopne
add
jecxz
pop
ds
sarb
loop
push
mov
dec
push
testl
pusha
sbb
je
in
insl
in
and
in
cmc
pop
push
stos
sahf
push
int3
mov
sahf
test
sarb
xor
dec
jo
cmp
sub
dec
mov
pop
notb
adc
pushf
decl
dec
mov
adc
sti
jb
pop
mov
mov
pop
test
cmp
fwait
dec
daa
sbb
sbbb
cmp
push
push
ds
mov
hlt
clc
mov
and
aaa
insl
ja
fistps
ja
shll
add
xchg
out
push
test
sbb
dec
jb
int
pop
cld
icebp
popf
imul
shlb
call
insl
xchg
jl
xchg
lock
xchg
in
mov
or
fsubr
mov
ret
lock
xchg
mov
aad
cmp
sti
adc
in
test
aas
xlat
ret
aam
and
int
add
cltd
jne
or
lea
add
xchg
pusha
add
pusha
sub
in
inc
cltd
pop
inc
adc
xchg
jbe
and
jns
test
mov
lret
aaa
out
jmp
inc
mov
jb
xchg
cmp
add
or
and
inc
movsb
xchg
cli
pop
adc
jbe
mov
movb
adc
dec
mov
lea
or
add
push
mov
or
shlb
pop
enter
inc
mov
jl
sbb
popf
icebp
dec
test
push
sub
repz
pop
int3
mov
sub
mov
and
jge
mov
push
in
push
push
cmp
sti
xor
notl
or
lods
mov
mov
sub
daa
inc
pushf
xorb
aas
pop
mov
cmp
dec
pop
xor
push
bnd
sub
les
les
stos
adc
jmp
or
insl
xchg
out
or
sub
adc
adc
aam
xor
aas
stc
sbb
hlt
fdivl
and
imul
jge
inc
jae
stos
int3
out
jmp
and
push
out
mov
xchg
jmp
outsb
mov
add
sub
pop
stc
shlb
lahf
mov
pusha
sub
ja
mov
mov
dec
subb
and
cltd
sbb
imul
fs
jg
pop
in
jg
and
fstpl
sub
lock
add
jp
push
push
incl
gs
mov
fistps
mov
pusha
mov
loope
lahf
aad
and
pop
pop
xchg
daa
into
xor
shrl
push
dec
ds
test
inc
or
push
dec
cmpsb
jns
lea
fs
insl
fcomps
or
cmpl
jbe
push
aas
and
jnp
or
hlt
adc
fmul
jae
push
sbb
pop
push
mov
push
adc
iret
sub
out
xor
lock
insl
xchg
or
push
pushf
repz
repz
jne
lcall
out
imul
leave
lea
aam
ss
js
xor
mov
and
test
orl
popf
jle
jb
pop
push
push
push
aad
inc
div
jg
cli
repz
inc
adc
cld
push
insb
fcoms
sbbb
ljmp
xchg
movsb
scas
xchg
pop
cmpl
sub
or
ds
and
imul
fisttps
jb
push
movsl
and
int
push
lret
sar
rcr
push
jb
imul
inc
lahf
stc
xchg
inc
arpl
aad
sbb
fwait
pop
mov
add
add
push
xor
mov
inc
test
movsb
sub
popf
mov
mov
fbstp
xlat
add
or
fistps
cs
mov
iret
inc
add
sub
jns
daa
repz
mov
call
js
pop
push
jle
jecxz
jb
or
xchg
adc
les
xchg
pop
adc
mov
mov
inc
mov
mov
clc
aaa
jge
das
push
movsb
jmp
and
daa
outsl
fdivp
ret
rcl
dec
out
shlb
jmp
xor
xchg
lret
sbb
xor
xchg
iret
sti
adc
or
lock
push
out
xchg
imul
inc
xor
cli
hlt
mov
cld
imulb
mov
pop
fs
lods
adc
adc
or
dec
push
aam
lret
push
jge
mov
inc
fidivl
mov
push
movsb
out
mov
arpl
fucom
mov
sbb
lods
push
add
lea
sbb
std
fldenv
shll
fcmovnbe
jp
xchg
jo
insb
fadd
ja
psubsw
andl
add
adc
stc
loopne
imul
bound
adc
pavgb
fs
fidivl
push
xor
add
cli
stos
sbb
cmp
mov
fnstenv
js
inc
sub
cmp
and
rcll
xor
aam
lods
pusha
stos
lret
jp
test
jne
mov
jg
insl
pop
cmp
sbb
push
mov
popf
orb
mov
mov
push
mov
sbb
push
divb
ret
test
aam
xchg
push
hlt
out
leave
aad
jb
inc
inc
cmp
sti
xchg
pusha
out
addl
xchg
repnz
mov
jle
sbb
test
movsl
pop
fmuls
shll
mov
dec
add
sbb
pop
and
jb
sarl
in
and
pusha
lods
lds
pop
pop
pop
rcll
dec
mov
dec
clc
enter
sbb
and
divb
testb
sbb
jg
xor
mov
movups
pop
test
push
fsubs
mov
add
push
movsl
add
stos
dec
cmpsl
dec
shl
jbe
mov
mov
iret
testb
jo
in
jne
inc
stos
in
out
shrb
sbb
notl
or
jecxz
fs
dec
and
scas
inc
or
mov
ljmp
mov
sbb
scas
sbbb
jge
pusha
fwait
enter
push
jp
xor
iret
cld
sub
jl
mov
test
pusha
push
jnp,pn
fwait
inc
or
xchg
scas
and
scas
fistps
js
jno
jmp
cli
mov
xor
mov
fistpl
insb
cwtl
mov
jecxz
pop
arpl
inc
fsubl
push
dec
clc
jns
inc
mov
rclb
lds
cwtl
push
adc
test
lcall
pop
adc
lods
sbb
dec
sub
mov
fdivl
shll
idiv
sbb
in
scas
pop
ja
shlb
pop
cmp
push
push
out
xor
push
jnp
push
dec
clc
mov
inc
inc
mov
and
fsubp
pop
cmp
lods
adc
xchg
mov
mov
or
mov
fidivrs
fidivs
jle
ret
mov
mov
sub
in
mov
dec
dec
xchg
mov
lds
repnz
jno
adcl
loop
shlb
test
sarl
cmp
mov
ljmp
xor
jno
cld
pop
mov
imul
jae
xchg
lock
jge
dec
addr16
int3
xchg
xchg
sbb
mov
into
inc
jp
sub
mov
add
stos
mov
in
mov
je
int3
xchg
jmp
sub
xchg
or
orb
mov
inc
cmpsb
pop
leave
cmp
and
scas
cmp
fmull
adc
dec
aad
pop
cltd
jp
mov
add
inc
mov
in
movsl
push
repnz
sbb
lods
enter
xor
inc
rol
mov
test
xchg
lcall
and
test
mov
test
or
push
ror
fildl
jo
mov
push
xor
push
push
inc
mov
xor
jns
jae
repz
repnz
pop
push
stos
ljmp
cmc
or
clc
mov
out
sbb
cwtl
push
sub
adc
scas
sarb
mov
mov
sbb
mov
mov
cmpsb
push
mov
into
aam
leave
pop
addl
jmp
ret
bound
testb
adc
shl
pop
adc
push
gs
jb
adc
insb
addl
addb
dec
test
sub
pop
mov
int3
inc
in
lock
adc
push
ljmp
inc
mov
movsb
std
or
jecxz
mov
movsb
out
repz
call
cwtl
std
and
or
test
and
movb
or
cmpsb
or
cltd
insb
pop
mov
fistl
mov
js
ret
gs
loopne
bound
dec
mov
adc
push
fsubrs
push
mov
pop
xor
notl
es
xchg
dec
cmp
imul
mov
rcll
fistpl
fisttpll
dec
xchg
sarl
in
jle
ret
repnz
adc
in
lock
xor
loope,pn
mov
fidivrs
loop
subb
sub
xor
cmp
addb
scas
sub
pop
into
mov
mov
pusha
mov
pop
inc
and
imul
inc
pop
shlb
push
dec
mov
inc
cld
push
pop
jmp
out
fbld
addr16
sbb
lcall
xor
lea
hlt
clc
cmp
out
dec
and
dec
fsts
mov
sbb
fnstenv
pop
sub
pop
movsb
xor
inc
xlat
add
push
xchg
add
sub
jnp
lods
push
mov
inc
bound
les
cmc
fisubrl
xor
dec
mov
inc
test
ja
push
mov
add
add
sub
sub
fldt
pop
xlat
sbbl
iret
pop
adc
or
iret
sbb
bound
in
xchg
mov
adc
add
cmp
xor
or
sub
mov
aam
cmp
inc
shll
and
scas
testl
fs
push
sbb
mov
nop
mov
push
rcrl
into
std
aad
inc
out
dec
pop
int3
les
sub
ss
push
sbb
lods
xchg
pop
adcl
push
addr16
lods
sbb
bound
test
lods
sbb
das
sub
jle
fadds
pop
sbb
adc
cmp
aam
std
aam
bswap
int3
or
in
pop
sbb
out
data16
push
ret
loope
sahf
cmpl
xchg
and
add
sub
aad
inc
mov
lret
sub
and
inc
js
lret
push
dec
outsl
sbb
gs
jle
outsb
and
jle
repnz
mov
imul
xchg
int3
jecxz
cmp
cmp
jbe
rorb
xor
sub
xchg
mov
in
xchg
mov
cmpsb
sarl
cmp
mov
movsb
rol
call
jns
push
leave
mov
jmp
insb
imul
mov
xchg
in
cmp
inc
mov
cmp
jecxz
pop
jmp
mov
mov
test
cmp
pop
add
mov
into
pop
mov
push
call
outsl
dec
push
loopne
jl
rclb
adc
test
push
sbb
out
cmp
add
and
xchg
and
test
or
loopne
xchg
add
das
push
mov
mov
adc
fbstp
pop
loope
xchg
fstpl
popa
popa
daa
dec
aad
and
push
inc
push
add
xor
cmp
jns
push
test
les
xor
repz
loope
cs
pop
popa
sub
cwtl
lods
hlt
sbb
xchg
xor
addl
sti
mov
xor
inc
stos
dec
movsb
push
rcr
into
fisubs
cmp
sub
lahf
js
mov
addb
xchg
scas
dec
clc
icebp
inc
ret
or
jg
jle
fs
mov
daa
xchg
daa
sub
add
cmc
mov
pop
fidivrl
mov
cmp
repnz
test
jmp
mov
loop
popf
out
xchg
cmpsl
sub
pusha
cmc
push
inc
xchg
sbb
xor
imul
mov
aaa
cmp
fwait
cwtl
inc
lret
sti
int3
xchg
mov
mov
lds
repnz
fists
mov
rcll
rol
out
idiv
scas
fidivl
test
add
mov
jnp
lock
shl
push
popf
inc
popf
xchg
decb
or
and
inc
sub
mov
shlb
cmp
pop
stos
sti
nop
or
sbb
sub
pushf
or
subl
inc
lods
lahf
lods
mov
fcoms
cmc
pop
pop
sbb
fwait
push
ret
push
leave
je
inc
inc
ljmp
popf
cli
cmp
nop
int
cli
sbb
jne
outsb
arpl
cli
adc
in
mov
cld
sbb
sbb
add
pop
add
and
mov
jnp
outsb
jmp
pop
fbstp
lret
rorl
addr16
leave
inc
pusha
jecxz
xchg
fstpl
sub
sbb
ds
xchg
dec
popa
or
test
jns
in
sbb
ja
mov
mov
ljmp
das
mov
push
ja
fldenv
inc
pop
shrl
dec
lock
repnz
dec
ret
repz
in
cld
stos
or
or
lcall
mov
and
or
imul
xchg
mov
in
fbstp
and
xor
pop
pusha
and
sbb
cld
mov
popa
dec
punpcklwd
decl
js
pop
lds
xchg
sbb
lds
cmp
adc
pop
cmpsl
jle
mov
cmp
adc
xchg
or
push
rolb
mov
fbstp
cmp
es
ss
mov
push
sbb
lock
insb
inc
dec
dec
fs
hlt
mov
jb
in
pusha
fisubl
ss
insl
xchg
jmp
sub
jno
pop
fucomi
xchg
adc
xor
xchg
lock
jl
stc
add
fsubs
jg
push
fbstp
add
cmp
shrl
in
jg
adc
les
inc
in
push
fisttpl
data16
jb
sahf
je
dec
je
jno
leave
push
testb
pop
fisubl
lcall
lcall
add
xor
sbb
enter
fistl
mov
pusha
sahf
sarl
mov
xadd
shlb
aas
idivl
push
insb
in
xor
cltd
loopne
sub
and
mov
inc
lods
sbb
out
xchg
leave
mov
and
mov
stos
inc
inc
sub
stos
fld
call
pop
repz
not
pop
je
ret
xchg
xchg
xchg
mov
jnp
cmp
pop
in
xchg
in
std
jne
or
fs
sub
push
ja
icebp
xchg
xchg
xorb
int3
add
test
mov
cmp
pop
cmp
cmc
mov
test
dec
rcrb
fbstp
adc
push
xchg
out
in
je
jb
jno
push
lock
fbld
ffree
mov
callw
jo
sub
lcall
insl
popf
xchg
jnp
xchg
imul
leave
imul
pop
out
daa
mov
mov
in
scas
loopne
addl
jge
je
out
pop
jmp
enter
jno
ja
in
pop
pop
jg
loopne
insl
popa
push
mov
mov
orb
sub
mov
arpl
ss
xor
lahf
test
push
mov
stc
jmp
push
cmp
push
adc
aas
push
imul
fcmovb
jb
jnp
adc
aam
loop
mov
out
xchg
jle
imul
jo
add
xor
and
jle
pop
in
test
cmpsb
lret
and
lods
out
mov
stos
into
push
mov
inc
andl
jmp
fnstenv
popa
rcrl
mov
jmp
popa
arpl
fcmove
in
mov
outsl
fwait
xchg
jnp
push
xchg
push
dec
mov
pop
out
mov
sub
jg
shlb
and
and
in
int3
or
fcompl
or
xorb
mov
xchg
cltd
xchg
jns
std
or
imul
or
loop
adc
in
sbb
mov
subl
pop
ss
push
pop
jle
shll
lods
dec
fadds
mov
sbb
enter
lea
popa
out
inc
data16
sbb
jg
pop
imul
aam
push
addr16
fstpl
repnz
xchg
in
aaa
mov
mov
cmp
xchg
push
out
insl
push
xchg
xor
popa
aaa
aam
mov
fsubs
cmp
jecxz
aad
in
les
int3
sub
and
mov
jbe
cmpsl
dec
subb
dec
or
jecxz
scas
fs
and
sbb
cmpb
bound
or
add
add
mov
xchg
arpl
mov
das
in
mov
test
gs
lret
aad
dec
mov
mov
xchg
jb
shl
mov
jg
addr16
lock
in
ds
ja
insl
mov
rcrl
xchg
mov
in
mov
push
sub
cmp
add
dec
fldl
cmpsb
inc
aaa
xor
inc
pop
das
stos
sbbb
imul
orl
aam
dec
or
bnd
dec
outsl
call
shll
mov
data16
add
fwait
dec
inc
sbb
stc
nop
jnp
adc
fldenv
mov
fwait
ds
and
mov
push
lret
lods
daa
leave
int3
fldl
jle
call
je
lahf
push
push
cmovle
movsl
les
push
jns
mov
das
aaa
jbe
sbb
push
int
push
ss
aam
in
ficomps
lods
pop
movsb
gs
es
add
jecxz
sbb
lods
pop
xor
dec
das
cmp
push
mov
jnp
add
mov
jnp
ret
rol
push
js
mov
push
jmp
aam
jp
fwait
mov
jge
lcall
subl
xchg
push
leave
dec
in
cmp
popa
cmp
data16
nop
add
cmpsl
adc
mov
sub
xchg
leave
aad
fdivl
and
aam
aad
pop
dec
xchg
cmp
jle
mov
ret
inc
cmp
loop
test
loop
aam
and
xchg
sbb
jle
sti
stc
adc
or
adc
outsb
and
loopne
mov
jge
adc
sbb
and
lds
fisttpll
lahf
fwait
pop
push
clc
xchg
jg
ret
outsb
dec
mov
call
shll
jp
mov
ficoml
pop
in
or
leave
mov
in
sbb
adc
and
mov
bnd
cmp
es
cmp
push
adc
sbb
sub
mov
in
fcmovbe
les
mov
push
inc
push
mov
xchg
loop
jb
data16
stos
movsb
adc
pop
sbb
push
cmp
add
scas
nop
xor
or
inc
pop
cmpsl
and
dec
cs
cmc
pop
inc
inc
and
hlt
rcll
ret
xor
ljmp
fs
ret
ljmp
cmp
sahf
outsb
test
or
jo
notl
pop
xchg
lods
mov
xor
andb
inc
or
xchg
sub
pop
or
int
mov
insb
sar
gs
jb,pn
xchg
loop
adc
jne
out
jecxz
packuswb
mov
sahf
sbb
addl
adc
mov
dec
sub
add
cmp
or
push
jge
fdivl
mov
sbb
jl
lods
mov
cmp
xchg
clc
dec
jb
sub
pop
sti
xor
mov
outsb
push
xchg
imul
aaa
and
pop
loope
mov
pop
lcall
and
xor
xchg
icebp
xchg
sbb
scas
mov
and
aaa
sub
sbb
cmp
mulb
shll
xor
push
lock
je
pop
sbbl
or
mov
mov
add
stos
xor
pop
mov
mov
mov
or
pop
orl
repnz
or
lock
xchg
sar
mov
jg
shl
jecxz
lcall
mov
add
pop
icebp
sbb
imul
pop
test
mov
scas
sub
cmp
mov
and
push
xor
leave
mov
push
jb
inc
cmp
pop
jnp
int3
jb
pop
mov
js
je
pushf
jbe
xchg
imul
popf
xor
rclb
xchg
ret
mov
daa
add
jne
pop
out
xchg
sub
mov
sub
out
mov
scas
ja
adc
fstpl
imul
dec
stc
mov
inc
rolb
jge
int
lret
inc
gs
mov
loopne
fwait
hlt
adc
mov
pop
imul
scas
movsb
or
xor
pop
addl
cmp
mov
mov
ss
pop
and
mov
into
into
shlb
adc
pop
pop
add
jne
test
ja
loope
jle
test
repz
lock
cmc
lock
cmp
gs
push
push
aad
mov
jae
mov
cmp
popf
cmp
sub
imul
push
pop
and
xlat
cmp
pop
adc
and
xor
sub
jno
lods
in
jb
push
jbe
sahf
sub
fcomps
fwait
pop
sbb
mov
test
cmp
push
inc
out
mov
and
fisubrs
scas
lret
push
pop
das
adc
push
and
dec
pop
push
mov
mov
dec
not
dec
xorb
push
inc
mov
push
xor
lret
sbb
out
ljmp
lcall
sbb
mov
push
adc
or
pop
xor
sub
and
xor
outsb
ja
clc
adc
push
sbb
pop
pop
inc
dec
jge
aam
stc
test
push
iret
push
add
or
jmp
out
outsb
gs
adcb
in
fs
xorl
out
sub
stc
add
cmp
mov
push
mov
mov
adc
xchg
cmpsb
popa
int
call
mov
xor
fcmove
dec
xor
aam
cmpsb
into
or
xor
test
lahf
cmp
mov
sbb
add
dec
rcrl
adc
sbbl
mov
adc
ds
inc
push
icebp
xchg
cmpsb
lcall
mov
xlat
xor
test
pop
add
shll
ret
xor
clc
and
repnz
orl
push
xchg
cmc
mov
cmp
or
mov
mov
sbb
cmp
cmc
mov
xchg
mov
loopne
leave
sbbb
xchg
shrb
mov
jo
mov
dec
inc
push
add
lock
jae
mov
add
mov
loopne
jae
popf
movsl
add
loope
add
pop
add
rcll
or
insb
cmp
sbb
inc
test
add
fcmovnu
leave
fldcw
out
js
ficoms
ret
jmp
into
jbe
jb
sbb
inc
mov
push
fwait
aad
insb
push
sbbb
push
and
mov
xor
sarl
inc
cli
iret
inc
enter
rclb
sbb
and
rcrb
and
xlat
adc
push
rolb
out
enter
inc
ficoms
in
sarb
fbstp
insl
lds
sbb
imul
in
mov
jne
sbbl
mov
lea
aas
lds
mov
lret
and
cmp
cmpsl
ja
xlat
popf
cs
push
pop
and
cmp
adc
fadd
and
jo
cmp
mov
mov
push
pushf
out
bound
mov
mov
adc
js
mov
cmp
cmp
or
aaa
add
loope
mov
lea
das
pop
cmpsb
mov
mov
add
fnstcw
idiv
nop
arpl
xchg
bound
mov
push
pop
add
push
adc
mov
mov
push
jl
loopne
mov
sbb
xor
fchs
mov
ficoml
iret
rorb
mov
cmp
mov
je
add
jns
or
mov
fsubr
fnstenv
dec
add
hlt
jae
xlat
pusha
push
xchg
nop
stos
gs
lods
jp
cmp
cmpsb
xchg
xchg
sti
jg
push
push
idivb
add
test
jbe
stc
rcll
xor
repnz
adcb
test
in
aam
pop
lret
xor
jo
repnz
stc
addl
jecxz
imul
or
arpl
adc
pop
xchg
mov
adc
mov
mov
sti
xlat
mov
push
lret
and
sub
aad
pop
mov
dec
repnz
jb
iret
je
fwait
rcll
push
xchg
and
sbb
in
adc
dec
loope
loopne
insl
or
xchg
or
in
movsb
push
mov
aaa
movaps
scas
addr16
lods
int
sbb
pop
push
and
das
mov
mov
dec
dec
outsl
es
cmpsb
mov
push
push
inc
dec
orb
int3
loope
jle
jecxz
jo
icebp
stos
scas
sbb
lcall
xor
sbb
cmp
pop
aas
push
mov
loop
mov
push
inc
mov
mov
xor
stos
ss
xchg
fcomps
adc
fisubl
pop
jno
movsl
dec
mov
es
mull
icebp
fmuls
and
jg
andb
adc
push
arpl
test
roll
cmpl
jge
aaa
mov
movsl
jns
mov
int
push
gs
imul
rcr
mov
ja
mov
cltd
lds
pushl
pop
movsb
jb
cmc
pusha
mov
out
in
sub
inc
repnz
sbb
lahf
sbb
add
push
add
nop
add
int
cmp
mov
mov
scas
pop
pop
mov
pop
or
int3
push
add
inc
lret
dec
nop
add
sar
jo
clc
negl
jp
hlt
lahf
jl
fs
xlat
push
push
push
add
nop
test
bound
bound
sub
out
add
pop
mov
mov
xchg
cmp
iret
and
xchg
rorl
shll
dec
push
les
movsl
jno
xchg
jae
cmpsb
push
out
jno
jmp
sbb
mov
mov
rcrb
adc
jnp
pop
sbb
mov
mov
push
add
ret
je
inc
sub
mov
and
dec
adc
sbb
cmovo
hlt
icebp
push
rolb
int3
js
out
mov
lea
mov
jle
or
cmp
icebp
xchg
mov
loope
ds
enter
cmp
mov
stos
dec
js
pop
pop
call
fisttps
inc
lds
inc
aad
fidivrs
leave
les
jb
or
jp
jno
out
pushw
xchg
pop
out
pusha
imul
out
fcompl
pop
cmp
pop
xor
test
cmpsb
int
cmp
push
nop
ss
das
aad
icebp
ret
int3
mov
pop
sarl
jp
mov
xor
jb
xchg
or
rcll
dec
ficompl
lret
popa
cmp
mov
cmp
aad
add
movsl
daa
add
mov
ss
push
xor
je
push
jg
inc
leave
dec
push
movsb
inc
aam
lds
xchg
mov
hlt
sub
mov
sbb
popa
or
fwait
pushf
jmp
das
xchg
or
sbbb
mov
jg
and
ficompl
nop
mov
pop
fmuls
lahf
or
hlt
inc
shlb
insl
shll
jne
imul
leave
jb
in
iret
rcrb
test
imul
xchg
pop
mov
mov
sub
movsb
rcr
scas
andb
std
dec
cmpsl
popf
lret
inc
shrl
les
xlat
fwait
outsl
adc
jl
int
arpl
and
in
sub
xchg
pop
popa
adc
or
cmp
pop
mov
adc
mov
push
mov
ror
daa
cmpsb
lea
ss
cmc
jl
sbb
jbe
pop
dec
or
pop
dec
outsl
mov
fstpl
hlt
pusha
hlt
xorl
movb
es
sbb
mov
pop
fisubl
jecxz
mov
xchg
xlat
stos
mov
andl
movsb
gs
subl
daa
inc
cmp
and
test
inc
jl,pt
pop
jle
jne
jbe
jnp
call
loopne
nop
xlat
jae
lahf
or
fistl
aam
lret
mov
insl
adc
shll
mov
rolb
add
fisubl
mov
push
xlat
lds
cmpsb
nop
popa
xchg
jno
pushf
push
hlt
jge
adc
adc
arpl
or
movb
pop
cmp
mov
cmp
add
aas
xchg
xor
clc
aaa
xchg
lea
push
mov
xlat
out
jae
shll
pop
scas
int
shlb
dec
fsub
ljmp
arpl
jne
sbbl
in
pop
mov
cmp
add
scas
cmp
negl
dec
sub
rclb
dec
add
loope
pop
and
leave
cmpsb
lcall
dec
pop
dec
push
nop
addr16
inc
insb
dec
jg
pop
jp
lock
push
jae
pop
jmp
jle
in
insl
jb
sub
pushf
cltd
or
sub
cmc
ja
ljmp
push
hlt
gs
cmp
sbb
xor
imul
xlat
pop
mov
test
subb
xlat
ja
push
dec
push
xor
dec
inc
jns
inc
xchg
inc
jbe
std
lea
insl
int3
mov
gs
mov
sbb
decb
fwait
mov
mov
sarl
sub
test
jae
jae
shl
ds
mov
xchg
fs
int3
pop
cmpsb
lret
addb
push
rcrl
ret
jnp
dec
stc
pop
into
jl
inc
mov
jbe
jg
push
mull
mov
insl
sbb
adc
push
sbb
pushf
in
adc
xchg
lahf
cmp
jg
xchg
lock
sub
pusha
sub
or
daa
adcl
add
pop
cmp
or
mov
cmp
stc
mov
jb
loopne
mov
das
fs
nop
mov
push
cmpsl
adc
ret
or
inc
mov
add
jl
push
icebp
cmp
aaa
cmp
bound
fwait
mov
nop
fildl
pop
lds
incb
repz
hlt
mov
imul
jmp
imul
out
sbb
adc
or
add
mov
or
aaa
andl
in
test
mov
rolb
lret
popl
xchg
mov
adc
stc
popf
stos
jb
das
negb
out
arpl
cltd
jecxz
sbb
sbb
pushf
jae
adc
ret
inc
or
sti
addb
lock
jmp
repnz
jo
sub
es
pop
push
arpl
jno
push
js
inc
imul
std
add
jo
push
andb
jne
add
pop
loope
xchg
mov
and
or
jp
xchg
lds
inc
lds
mov
lock
cmpsl
outsb
lahf
in
sub
fstpl
sub
adc
dec
inc
leave
mov
push
nop
cld
cld
jge
adc
icebp
imul
xchg
xchg
mov
lock
ds
sbb
test
out
and
enter
adc
xor
fwait
xlat
pop
add
adc
cmpl
xor
pop
pop
aaa
xor
sub
push
lret
sti
and
push
mov
or
mov
insl
cld
aad
xchg
sub
ja
mov
loopne
jae
or
hlt
pop
add
sub
icebp
xlat
fcoml
and
adcl
lods
cmp
pop
push
xchg
mov
in
sbb
ds
ds
std
int
inc
pop
xor
jecxz
fildll
repz
push
sbb
xchg
std
sbb
sbb
stos
sub
sbb
shr
lahf
mov
add
xor
cltd
cmpsb
dec
mov
jmp
and
ds
movaps
mov
and
mov
shll
fnstsw
scas
dec
mov
jns
jg
jecxz
test
ja
mov
mul
xor
mov
shll
cli
sbb
scas
xor
sbb
and
out
and
xor
scas
jne
sahf
shrl
sub
mov
and
clc
pop
xlat
test
mov
xor
mov
cmp
cwtl
imul
pop
popf
mov
push
sbb
xchg
repz
jns
lret
aas
jo
faddl
pop
xor
sbb
outsl
mov
xor
push
dec
clc
push
std
sub
jns
frstor
ret
insl
rorb
notl
fmul
lret
jo
shlb
push
shrl
jmp
stos
lea
nop
movsl
mov
cwtl
call
xchg
mov
enter
leave
iret
add
jns
mov
fisubrs
shll
insl
and
cmpsb
pop
ror
bnd
aam
negb
xlat
popf
pop
inc
sub
out
lds
out
cmpsb
hlt
jns
out
jmp
sbb
stc
jne
adc
inc
jnp
fscale
xor
add
nop
xchg
adc
es
mov
cmp
rcll
loopne
and
mov
enter
push
jl
cmc
sbb
dec
sti
mov
push
inc
test
jne
xlat
arpl
add
in
dec
and
and
nop
xchg
fisttps
mov
clc
daa
cmp
stos
int3
mov
pop
dec
lods
sti
dec
arpl
sub
jnp
aad
ret
adc
rorb
xchg
dec
mov
in
sbb
nop
inc
jbe
sbb
test
test
rolb
mov
adc
sbb
mov
scas
mov
mov
fadds
jns
add
mov
pop
push
mov
mov
push
push
iret
and
xchg
push
cmp
sti
jae
arpl
gs
inc
je
jecxz
outsb
xor
xchg
jbe
in
push
jecxz
rcrb
sbb
mov
mov
icebp
mov
ds
pop
shlb
scas
cmpsb
ror
inc
movsb
aad
pop
bound
push
mov
mov
je
sub
std
and
jge
add
dec
push
test
and
adc
lahf
push
mov
xchg
ret
mov
movaps
std
incl
arpl
cwtl
mov
in
sub
scas
adc
and
or
pop
dec
pop
fldl
mov
dec
xchg
inc
sti
out
cmp
repz
adc
pusha
dec
xchg
inc
bound
xlat
or
mov
mov
aad
inc
or
sub
mov
mov
and
in
movsb
add
xchg
cwtl
dec
dec
jl
jmp
scas
dec
lea
add
mov
sub
jne
adc
bound
jle
jnp
push
xor
lea
or
mov
or
xor
data16
sub
mov
outsb
and
sub
jp
roll
push
adc
dec
mov
mov
xor
mov
jnp
and
jns
xchg
pop
lcall
mov
mov
mov
xchg
cmc
shll
push
outsl
mov
push
push
cmc
cmp
and
xchg
sub
insb
aam
shl
insb
sbb
dec
sti
fwait
sti
je
js
icebp
or
icebp
xchg
jbe
jecxz
shr
insl
and
ss
mov
popf
mov
stos
outsl
jno
cmp
sbb
xchg
jmp
add
mov
jb
sbb
scas
int
lret
fsub
pop
movsb
dec
dec
es
cmp
fisttps
inc
jne
roll
lahf
lcall
cmpsb
sbb
mov
cmp
cwtl
sbb
sbb
and
addb
fcmovbe
push
mov
mov
les
sub
dec
jmp
and
sub
lods
sbb
sahf
or
jne
jb
xchg
ret
jne
imul
mov
imul
outsl
xor
xor
push
mov
adc
mov
add
ret
push
shll
les
imul
scas
pop
ljmp
cmpsl
pop
push
xchg
jg
adc
inc
mov
cmc
add
jo
inc
in
fwait
jnp
jb
lock
test
cmp
in
in
mov
out
xchg
fsubr
loopne
pop
xchg
cmpl
cmpsb
jg
sbbl
jo
xchg
sub
push
leave
jecxz
dec
in
dec
dec
pop
ficomps
into
pop
sbb
outsl
dec
push
mov
xor
in
or
cld
pop
outsb
xor
subl
cmc
out
inc
dec
out
or
les
in
adc
push
mov
or
inc
outsb
test
loop
dec
out
and
rcrb
mov
push
out
out
repnz
and
jl
adc
sub
std
mov
sbb
testl
out
sub
sub
cltd
lods
xchg
inc
pushf
sub
sbbb
or
mov
dec
andb
addl
sub
adc
movsb
sub
faddl
dec
pop
cmp
mov
scas
jle
inc
jno
pop
jno
mov
icebp
data16
mov
in
or
xchg
gs
or
mov
mov
orb
lods
mov
xor
ret
adc
mov
xchg
scas
in
xor
andb
sbb
mov
popf
aam
push
dec
dec
movsb
cmp
cli
inc
xor
jb
popf
sbb
and
out
xor
inc
push
mov
mov
ss
adc
mov
mov
or
adc
mov
fistps
mov
and
pop
es
push
cld
jp
push
ret
lret
ret
je
jae
sbb
fwait
mov
repnz
test
repz
or
pmaxub
xchg
aas
push
mov
cltd
pop
inc
lods
ret
add
das
inc
ds
lret
and
test
push
and
shl
and
mov
nop
aad
ret
loop
sbb
aas
mov
jb
sub
push
jno
std
jecxz
in
fcomps
xchg
loope
push
popl
and
imul
aaa
out
lahf
mov
sub
jge
sub
shlb
add
dec
jge
cld
scas
push
lret
clc
xor
aas
or
pop
and
pop
pop
pop
popa
cmpsb
jmp
loope
pop
adc
jo
lea
inc
leave
cmp
dec
stos
hlt
push
sti
cltd
dec
rorl
push
mov
pop
push
stos
aaa
xlat
push
add
or
adc
push
dec
in
aad
stc
adc
inc
jno
fs
sbb
std
in
add
jmp
test
adc
xchg
and
xor
pop
dec
mov
js
add
mov
mov
pop
lods
mov
push
cmp
jl
clc
push
jmp
sahf
ss
lahf
fsubrs
add
add
mov
push
xor
icebp
mov
pop
fs
loop
lds
nop
add
jo
mov
out
mov
cs
mov
sub
xor
pop
stos
mov
adc
xchg
dec
push
jge,pt
movsl
cmpl
jo
shl
push
out
dec
sub
sub
jae
lods
negl
sub
xchg
clc
rcll
ljmp
mov
and
stos
icebp
add
fildll
xor
icebp
movsl
xor
aam
out
push
sti
cmp
sbb
or
rcll
jo
or
or
mov
sahf
and
jns
or
popa
sub
or
call
jg
and
bound
pop
movsl
add
adc
cmp
push
aam
xchg
mov
fildll
cltd
add
jl
mov
xchg
movsb
lock
je
inc
rcl
in
mov
pusha
push
mov
rclb
mov
xor
xchg
pop
lret
rcrb
scas
cmpl
popf
add
sub
stos
jmp
fisttpl
into
inc
sub
dec
js
or
sbb
outsb
pop
xchg
lcall
mov
sahf
stos
xchg
or
daa
jmp
and
dec
mov
cmp
aam
ret
mov
flds
je
roll
add
movsb
cmp
roll
outsb
scas
ljmp
aad
notb
out
and
sbb
out
sub
cltd
mov
and
movsl
fwait
push
out
xor
mov
mov
sub
mov
pop
adc
fcmovu
jne
enter
fmuls
mov
xlat
shlb
sub
inc
jno
dec
outsb
jbe
lds
inc
add
shl
pop
repz
popa
icebp
adc
jmp
xchg
sub
cwtl
arpl
test
aas
mov
ss
xchg
in
mov
movsl
inc
ss
mov
mov
push
dec
js
push
pop
rolb
pop
int
leave
cmp
dec
js
shl
xchg
mov
push
inc
push
icebp
das
sbb
ja
in
mov
xor
pop
je
adc
cltd
add
or
das
xchg
jb
enter
inc
mov
and
rcrb
fucomi
sub
pop
push
sub
dec
cld
gs
add
outsb
es
mov
sub
adc
adc
test
mov
in
sbbl
sub
mov
lods
xor
and
enter
push
pop
mov
mov
icebp
pop
push
mov
dec
xchg
ret
ljmp
out
out
arpl
outsb
mov
imul
mov
mov
and
rorb
mov
daa
mov
inc
ljmp
test
jbe
jno
jno
jns
jns
pop
dec
gs
jbe
jge
enter
fdivr
adc
ljmp
bound
xchg
dec
insl
cltd
in
aas
xchg
mov
sbb
xchg
aaa
test
push
lods
js
push
or
test
mov
push
mov
lret
imul
dec
xor
ljmp
fstpt
flds
push
adc
iret
outsb
fadds
cmc
mov
loopne
pushl
cmp
push
inc
jmp
arpl
out
out
out
rcrb
xchg
sbb
mov
add
jno
mov
mov
movsb
xchg
aaa
sub
sub
test
and
stos
push
pop
leave
stc
ficomps
push
cli
jnp
aam
jae
out
jmp
sbb
jmp
les
add
jns
icebp
cmp
out
jp
and
negb
out
adc
add
add
mov
test
movsb
mov
outsb
fldl
sub
mov
mov
cmove
pop
repz
mov
push
repz
imul
push
dec
outsb
ret
arpl
inc
adc
ret
imul
adc
jb
lret
add
test
popf
xchg
ljmp
arpl
and
sub
pushf
jbe
inc
mov
adc
dec
mov
ret
dec
cmc
dec
out
add
jmp
sub
mov
stos
outsl
aaa
jnp
mov
push
and
adc
fsts
mov
mov
mov
nop
test
inc
sub
fucomp
xchg
push
xor
cmc
jnp
lret
jmp
iret
popa
sar
mov
sbb
out
mov
stc
jecxz
mov
sbb
sbb
mov
add
incl
mov
mov
mov
mov
and
cs
cmp
mov
pop
dec
pop
jg
push
vxorpd
into
movsl
js
dec
gs
jle
jo
popa
data16
push
add
in
lahf
outsb
mov
gs
pop
rcrl
xor
popf
orl
sbb
stos
and
and
fstps
aas
arpl
stos
jmp
scas
pop
mov
fcoms
cs
xchg
mov
sub
push
fdivrl
push
incl
into
sbb
ss
jl
inc
lcall
rorl
stos
cld
in
push
xor
jge
add
repz
push
pop
add
pop
mov
inc
push
sub
adc
mov
xchg
xor
push
mov
aad
xor
mov
pop
sub
lods
sti
push
and
imul
jmp
lahf
out
xchg
fcompl
inc
pushf
pop
sti
adc
mov
jmp
outsb
cmp
sbb
adc
xchg
lods
dec
or
ret
movsl
jp
pop
cld
test
ja
push
imul
das
inc
xchg
mov
sbb
cmp
mov
pusha
lods
into
in
inc
cltd
fcmovnb
sbb
cld
or
pop
mov
jo
mov
cltd
mov
xchg
sub
push
mov
fisttpl
cmpsl
push
sbbb
fmull
push
xchg
sbb
lahf
cltd
jl
outsl
and
popa
pop
imul
dec
pop
test
in
jg
popa
icebp
iret
in
xchg
dec
stos
pop
add
xor
insl
cmp
aas
add
fs
out
xchg
lods
popa
mov
inc
out
mov
pop
stc
xor
push
jns
aas
call
into
movsb
subb
stc
push
sbb
jp
bnd
cmc
ja
jecxz
or
out
sbb
xchg
push
adc
iret
lahf
or
dec
insb
cmp
addb
mov
fnstsw
mov
mov
mov
sbb
mov
fidivl
adc
ror
or
pusha
adc
popa
dec
push
repnz
jno
out
sti
pop
call
ja
aad
pop
adc
jbe
xchg
mov
or
popf
icebp
test
mov
cmp
mov
lahf
push
and
scas
cmp
sub
aad
ret
pop
add
cmc
rolb
clc
std
leave
mov
std
jo
inc
cmp
mov
jae
sbb
and
pop
adc
lds
lret
adc
mov
call
mov
pop
pop
mov
test
imul
jae
movsl
push
cmc
push
iret
dec
arpl
shrb
sti
stc
push
mov
mov
outsb
js
push
arpl
push
mov
sub
xchg
and
mov
sbb
mov
in
pop
mov
orl
daa
dec
lea
sub
nop
cmp
push
bound
out
jnp
int3
stos
mov
pop
pop
mov
jge
sbb
add
movb
loop
jg
add
sbb
push
dec
adc
xor
fs
negb
mov
cmp
mov
mov
push
lods
mov
in
pusha
fistl
fiadds
add
mov
mov
mov
clc
std
xor
add
sbb
xchg
in
fidivs
sbbl
add
sub
and
jns
dec
scas
or
pop
clc
pop
dec
push
dec
test
pop
lods
sarl
lods
pop
repz
mov
ja
dec
cli
int3
loope
icebp
mov
and
mov
insb
jbe
jae
sbb
lods
adc
xor
mov
xchg
insb
cmp
outsb
push
mov
test
push
push
ret
loope
arpl
fcoms
shl
fcoml
scas
jo
dec
jecxz
loopne
sbb
and
sbb
xchg
aaa
or
push
mov
in
orb
sarb
cmpsl
xchg
cmp
mov
push
imull
jp
push
and
push
aam
pop
int3
cltd
pop
mov
hlt
clc
sbb
bnd
je
inc
mov
jg
xor
in
mov
pop
push
scas
and
inc
lcall
push
out
mov
inc
or
push
ret
and
inc
push
add
sub
pop
mov
cmp
leave
cs
dec
mov
jp
cld
repz
test
push
insb
leave
dec
call
xchg
push
jge
push
cmp
jne
xor
jnp
loop
sbb
ret
push
dec
lds
mov
mov
jbe
aam
push
es
push
movsl
lods
inc
rcrb
xlat
test
sbb
add
mov
jno
popl
rorl
cmc
xor
hlt
adc
imul
repnz
mov
sbb
mov
imul
xor
mov
mov
scas
pop
dec
mov
es
cs
fs
sub
jno
sub
std
sub
loope
sahf
sti
dec
sbb
jae
std
or
adc
jge
fs
adc
in
inc
mov
sbb
push
sahf
out
mov
dec
sti
aas
mov
mov
adc
nop
data16
rorb
sub
push
dec
pop
cwtl
ljmp
jnp
dec
std
rorb
push
add
lock
cwtl
je
cltd
adc
xchg
xchg
lret
jecxz
fcomps
xchg
add
xor
inc
aas
dec
inc
stos
addr16
scas
loopne
mov
mov
popa
rcrl
push
call
inc
or
inc
iret
or
lcall
jnp
push
std
fs
sub
sbb
and
jmp
sbb
adc
cwtl
mov
push
decb
push
mov
add
push
sti
sub
in
aad
jecxz
fmull
mov
leave
push
int
sub
jae
out
push
mov
xor
cmpsb
jl
data16
and
jno
aad
pusha
or
lret
dec
mov
or
iret
mov
js
out
xor
xor
mov
rcl
pop
aam
out
pop
fs
push
loopne
or
inc
jmp
dec
pop
jnp
jo
addr16
pop
inc
sti
out
ret
arpl
bound
jns
pushf
popfw
clc
out
pushf
les
add
test
loope
rcll
pop
test
mov
fbld
leave
cmp
xchg
sub
or
scas
push
pop
mov
test
sbb
cmp
rorb
jge
iret
cwtl
enter
les
jecxz
cld
gs
frstor
out
sbbl
int
daa
mov
orb
fidivs
insl
pop
mov
add
lock
test
pop
push
daa
mov
and
enter
cld
jnp
aad
std
sub
repnz
sub
jbe
xchg
es
in
std
call
fists
pop
sbb
adc
popa
xchg
cld
pushf
pop
pop
lods
adc
cmp
pop
loopne
push
or
push
jne
cmp
push
in
sub
xchg
sub
mov
push
jl
or
inc
lds
inc
cmp
pop
jp
mov
stos
dec
cltd
lahf
jecxz
cmc
imul
arpl
cs
push
adc
mov
cmc
pop
cmp
mov
mov
cmp
sub
cmp
mov
mov
pop
pusha
mov
dec
xlat
push
inc
dec
mov
inc
and
inc
in
mov
std
ffree
je
mov
insl
xor
push
mov
out
lcall
or
popf
xchg
add
or
or
push
stos
sub
cmp
mov
aaa
popf
imul
lods
lret
mov
shr
fdivrp
out
add
rcrb
xor
imul
neg
test
mulb
pop
sub
mov
sbb
xchg
push
test
mov
ss
and
aas
push
into
shrb
or
mov
push
dec
mov
push
mov
mov
leave
push
notl
imul
sbb
imul
or
adc
mov
sbb
and
xor
and
and
xchg
cmc
push
jo
pop
stos
xchg
fs
scas
or
lea
icebp
cmp
int
inc
jle
aad
fwait
and
mov
or
and
rcl
bound
mov
inc
cmpl
je
mov
xchg
mov
lcall
insb
inc
pop
xchg
xchg
dec
inc
aad
lret
jecxz
or
ds
repnz
jo
mov
lods
jp
and
fldenv
lret
dec
push
in
lret
popa
jns
in
rcrb
xchg
out
fstpt
fnsave
imul
data16
sbb
adc
jae
jnp
ret
dec
mov
bound
sub
imul
iret
pop
xor
dec
mov
sahf
cmc
addr16
and
sub
or
mov
stos
addl
mov
sub
pop
push
sub
sub
clc
push
pop
cmpsb
pusha
cmp
inc
into
push
push
inc
cli
inc
push
mov
add
jno
test
jne
jl
data16
pusha
icebp
mov
lahf
ret
test
mov
xchg
ljmp
add
fwait
test
sbb
aaa
roll
mov
and
cmpsb
in
push
or
xor
xorb
pop
jb
jg
int
jle
mov
int3
jns
out
push
jle
fs
repz
popf
mov
loop
adc
clc
jmp
mov
add
cmp
out
jne
xor
loope
adc
pushl
xor
jecxz
lahf
dec
pop
hlt
rcr
cmpsb
out
dec
adc
and
rorl
jbe
repz
std
inc
pushf
push
je
adc
js
jae
gs
sbb
push
jnp
push
or
scas
jecxz
add
mov
mov
xor
xchg
jno
test
mov
mov
sub
add
sbb
xchg
aad
mov
iret
cmc
sarb
pop
add
int
sub
sub
cmc
jae
aad
repz
pop
je
push
call
adc
mov
mov
sahf
js
adc
push
push
mov
sbb
jl
inc
fisubrl
cmpsl
daa
out
dec
pop
stos
aaa
mov
mov
stos
or
sbb
cli
inc
push
dec
jge
cmp
fs
std
out
mov
ss
leave
loopne
iret
imul
pop
push
sbb
outsl
je
xor
or
jmp
cwtl
sbb
std
pop
xchg
es
sub
jne
dec
pop
add
push
jecxz
iret
mov
add
mov
aas
imul
jns
jl
push
gs
pop
xchg
sub
pushf
ret
test
les
ja
cltd
idivl
test
mov
mov
or
and
or
mov
dec
xor
mov
and
and
pop
stos
mov
jle
in
imul
out
lret
mov
loopne
cmc
cmp
sbb
jle
lcall
iret
xlat
pop
inc
dec
mov
pop
or
add
int3
test
aas
out
jnp
lcall
test
mov
or
dec
inc
push
sub
mov
jo
dec
ljmp
sub
adc
mov
fs
test
bound
adc
sbb
stc
xchg
pop
ds
cltd
push
ja
int3
imul
mov
push
mov
xchg
sub
xchg
lods
rclb
adc
mov
jns
test
mov
pop
xor
jg
sub
jns
jno
xor
loopne
mov
xchg
nop
aaa
lahf
cvtdq2ps
cmp
adc
or
xchg
movsb
mov
mov
pop
dec
out
inc
sub
and
push
gs
aas
shrl
mov
xchg
das
mov
stc
je
ja
lret
fcomip
adc
push
lods
loope
fldenv
loop
sahf
pusha
out
pop
or
fsubrs
imul
rorl
outsb
push
in
enter
mov
and
insb
into
mov
cltd
mov
fsubs
jne
dec
addl
and
sbb
out
jo
adc
je
mov
test
fwait
sbb
cmpsb
xchg
and
loop
xchg
adc
lcall
das
add
aas
add
mov
out
and
inc
stc
and
popa
int3
bound
movsl
push
fsts
gs
mov
ret
fwait
test
inc
jo
hlt
out
imul
mul
ljmp
mov
popa
outsb
mov
cmp
mov
xor
cwtl
xchg
mov
xor
jmp
js
xchg
push
insb
and
jmp
aas
sti
push
faddl
jnp
rcr
enter
add
ljmp
add
cltd
add
outsl
mov
push
sub
sbb
pushf
mov
jl
rcl
mov
das
pushf
cmp
shll
daa
mull
adc
movsl
pop
sbb
or
sti
loope
fcoms
cmp
mov
mov
imul
and
imul
sub
and
xchg
sub
mov
adc
jl
inc
cmpsb
sub
imul
push
sbb
push
mov
push
add
adc
sbbl
push
cli
insb
cwtl
jno
jae
xchg
stos
add
ret
es
sbb
mov
push
out
stos
sub
mov
cmp
cmp
clc
push
xchg
cld
enter
scas
mov
cld
add
jo
jo
push
fcmove
add
fwait
arpl
sbb
or
flds
mov
inc
jmp
imull
es
sub
sbb
mov
mov
adc
lahf
mov
and
ja
nop
mov
test
jns
test
out
cltd
sub
and
loop
xlat
sub
or
mov
inc
roll
lds
std
inc
cmp
cmp
arpl
stos
and
bound
fwait
mov
dec
xchg
and
add
add
push
pop
shrb
sub
push
das
in
inc
or
sti
pop
sub
and
or
jne
cmpsl
push
adc
out
je
in
add
in
pushf
out
xchg
ja
adc
xchg
test
sarl
jl
xor
adc
fcoml
push
push
or
sub
push
fisubrl
jge
pop
mov
dec
add
dec
loop
dec
push
sub
clc
dec
dec
inc
dec
daa
jmp
les
dec
repnz
jne
add
mov
sbb
popf
dec
pop
fcmovnu
rcrb
iret
adc
push
xchg
xchg
fimuls
add
jbe
test
mov
mov
cs
lea
in
mov
push
in
rcrl
lret
inc
dec
subl
inc
out
push
jns
clc
mov
adc
xchg
loop
shlb
pushf
sti
sbbl
ss
xchg
or
cld
fsubr
inc
add
mov
pop
repz
popf
sub
fstpl
cmp
mov
pop
aad
repnz
xor
call
in
mov
jbe
jbe
add
jae
cmc
ja
cmc
add
mov
add
mov
or
sub
and
daa
lahf
test
pop
dec
cmp
cwtl
mov
inc
pop
push
pop
sbb
leave
or
rol
jp
cli
mov
inc
jle
mov
mov
sar
movsb
adc
gs
into
sbb
adc
adc
or
dec
add
mov
xor
mov
frstor
lods
push
mov
in
cmpsb
push
push
rcr
adc
dec
adc
jmp
sarl
in
jb
test
or
xor
xchg
repnz
loope
and
jmp
pop
lcall
subb
or
sub
xor
dec
lret
mov
xor
pop
and
pop
fldenv
les
dec
inc
imul
xchg
jmp
out
sbb
push
mov
mov
sub
sahf
mov
pop
push
jge
adc
pop
sbb
mov
imul
pushf
jo
mov
cmp
sub
pop
enter
and
dec
cltd
and
dec
xor
into
js
lret
testl
div
jns
mov
stc
lahf
push
out
jno
aad
loope
bound
or
mov
sbb
xor
sub
xor
xor
out
vpunpcklqdq
lahf
mov
inc
ja
cmp
or
js
jae
cmc
xchg
cld
dec
pop
jle
sub
lds
add
jge
lea
test
adc
mov
and
jmp
and
fcmovnbe
cmp
mov
and
fcmove
ret
mov
jp
int
add
shll
push
out
movsl
icebp
jmp
out
xchg
in
xchg
adc
sbb
loopne
or
popf
test
xchg
call
cmp
test
mov
and
sbb
fimuls
xor
data16
pop
fimuls
rcll
int
lock
mov
jno
data16
pushf
cmp
push
mov
or
xchg
mov
dec
pop
jbe
orb
adc
jo
in
mov
insb
fs
dec
mov
adc
cmp
jl
notb
lds
lret
int
subb
cmp
sbb
mov
sbb
cmp
mov
mov
scas
fcompl
cs
imul
ret
or
test
mov
pop
es
mov
lock
jl
enter
add
jge
notb
pop
or
popf
adc
cmp
sti
data16
in
or
mov
hlt
adc
es
fs
sbb
cmp
test
stos
mov
and
lods
shr
mov
pop
cs
mov
lock
loope
ljmp
and
jmp
ds
cmp
mov
sbb
popf
ljmp
push
adcl
jecxz
aaa
mov
pop
lods
xor
cmpsl
stos
movsb
test
and
add
insl
ror
addr16
mov
inc
dec
ja
jno
xor
imul
outsb
sbb
xchg
jecxz
jbe
jb
adc
cmpsb
adc
add
mov
lods
jp
pop
jl
xchg
mov
in
out
and
mov
xchg
push
fcoml
inc
into
or
adc
leave
jp
lahf
loope
ljmp
jl
int
ja
test
loope
out
icebp
pop
cmp
add
test
xor
and
mov
movsb
sti
mov
push
push
mov
test
jl
stc
lea
push
push
shll
sub
pop
mov
cmc
jns
cs
jmp
ljmp
in
sub
ret
inc
or
xchg
pop
scas
bound
sbb
imul
fdivl
mov
xor
aam
inc
or
pop
mov
aad
inc
or
dec
incb
loope
jmp
out
pusha
push
lea
int
push
xchg
ljmp
out
enter
nop
adc
jecxz
pushf
mov
mov
and
xor
movsb
dec
ss
and
shlb
dec
leave
insb
enter
in
mov
push
push
andb
jno
pop
jp
jmp
xchg
jno
mov
jmp
mov
xchg
or
lahf
popa
aas
cmp
xor
scas
xchg
add
mov
push
pop
out
sti
xchg
gs
mov
ror
inc
sti
mov
and
pop
ret
outsb
sti
lock
out
out
dec
jmp
mov
xchg
shlb
mov
or
mov
xorb
mov
and
mov
mov
sub
cmpsb
nop
jg
aam
xor
sbb
fwait
add
add
leave
jl
leave
fcomip
cld
fidivrl
and
xchg
pop
inc
outsb
pop
pusha
iret
adc
insl
sahf
push
mov
or
sub
or
subl
stos
mov
das
xor
subb
fsubl
frstor
push
xchg
jb
sar
add
stc
ja
add
inc
xchg
mov
out
mov
cltd
aaa
data16
adc
mov
xchg
popf
rcr
push
add
xor
mov
and
mov
push
aaa
test
shlb
test
ljmp
jg
mov
xchg
or
clc
xchg
dec
add
xchg
je
in
icebp
sti
test
or
adc
scas
outsl
cs
pusha
mov
sarb
sbb
xchg
mov
lea
faddl
movsb
lret
ds
xor
dec
or
sub
xor
mov
fcoml
rcll
lods
push
push
or
ljmp
out
push
addr16
or
xor
and
inc
or
xchg
add
xor
mov
mov
add
mov
mov
adc
aam
fucomi
aad
fucom
and
pop
ret
jnp
dec
mov
jo
jo
push
sbb
loope
mov
in
hlt
xor
arpl
mov
sbb
cmp
pop
fdivrl
jnp
enter
inc
repz
xchg
xor
sub
sbb
enter
adc
lock
sar
aam
les
decl
jno
mov
sbbl
mov
mov
or
xchg
mov
mov
pop
addr16
dec
test
mov
xor
xchg
push
mov
pop
dec
pop
mov
xchg
movsl
dec
repz
sti
adc
imul
cmp
inc
pusha
insl
popa
gs
pop
adc
sbb
xchg
cld
jecxz
jg
xor
lret
pop
roll
rorb
loopne
subl
mov
add
daa
push
xor
pop
ja
push
nop
and
xor
aad
cmp
cmc
mov
imul
stc
mov
pop
pusha
fdivrp
xchg
jmp
scas
xchg
frstor
add
adc
rcll
jg
and
fdivrp
xchg
imul
into
fistpl
mov
das
sbb
flds
lahf
sub
in
push
dec
lret
sub
out
ja
popa
push
std
mov
imul
hlt
aad
sub
or
fs
jne
add
mov
inc
add
fisttpl
xor
xchg
lods
jno
shrl
cmpsl
jmp
dec
sbbl
push
in
push
sbb
cmp
xor
inc
fsubrs
jg
lods
jo
add
mov
out
pop
dec
arpl
pop
cs
fisubrs
add
arpl
movsl
je
and
fbstp
mov
imul
js
push
fcoms
or
aas
pop
xchg
dec
push
adcb
cmpsl
jno
stos
movsl
jmp
stos
sbb
out
repnz
sbb
jnp
and
inc
mov
add
mov
stos
insl
outsl
stos
aas
xchg
cmp
xchg
and
push
movsb
cmp
jmp
jb
iret
out
iret
xor
outsl
inc
int3
mov
cmp
hlt
imul
jp
or
add
out
clc
xchg
xchg
dec
loop
xchg
push
lods
xchg
clts
lea
mov
sarb
paddw
jbe
add
sub
rcr
cwtl
orl
xchg
dec
adc
lahf
rorb
aas
enter
lds
aas
add
std
adc
test
lods
jmp
sbb
fsub
outsl
sub
dec
aad
push
and
push
in
rol
cli
sub
std
sub
loop
jae
cmpsl
mov
out
movsb
mov
fmul
cmp
rcll
pushf
les
daa
stc
arpl
out
mov
imul
xor
out
adc
pop
adc
scas
shll
imul
cmpsl
fsubs
pop
outsl
into
mov
mov
inc
roll
fsts
gs
fmul
mov
inc
clc
or
mov
std
and
push
cmpsb
inc
test
mov
ja
jne
mov
mov
mov
lcall
pop
add
push
mov
xchg
stos
enter
into
fldenv
stc
jecxz
inc
repnz
fisttps
aad
std
fdivs
xlat
mov
jle
jne
pop
fstps
mov
push
pop
call
hlt
scas
cs
push
aad
jnp
cltd
or
lahf
addb
xchg
lret
or
pusha
lock
mov
sub
inc
mov
aad
lcall
and
ficoms
xorl
inc
cld
dec
dec
jne
inc
inc
mov
dec
and
shlb
push
imul
adcb
xchg
dec
push
push
cmp
push
test
fisubl
mov
imul
pop
stc
test
add
inc
leave
aas
loopne
mov
aad
call
mov
test
pushf
jns
jl
icebp
inc
fs
ja
movsb
aaa
lea
stos
aad
inc
sbb
jns
mov
fimuls
inc
clc
shll
add
cmp
mov
ffree
stos
xchg
mov
pop
test
fstpl
push
cmpsl
mov
sarb
ja
mov
xor
xor
inc
fs
nop
cmp
jno
fwait
negl
push
nop
call
mov
rorb
call
sub
out
aam
cmp
lods
jge
push
stc
mov
pop
aam
faddl
aam
icebp
mov
iret
std
shrl
push
movsb
and
mov
in
fldln2
mov
arpl
or
enter
add
inc
sbbl
adc
xor
add
jp
inc
ss
xchg
pop
lock
dec
int3
iret
je
addb
insb
ja
jo
loope
push
mov
aam
test
lcall
ret
and
add
jge
sub
or
mov
loopne
shl
ror
iret
inc
call
pop
mov
bound
ljmp
or
leave
std
jge
xor
js
in
iret
insl
and
cmp
mov
mov
jle
lods
inc
test
test
test
loope
shrl
dec
sti
pop
and
pop
mov
stos
js
leave
cld
add
test
movl
bound
mov
repnz
inc
sbb
outsl
psrlw
sbb
push
pop
jnp
push
mov
xor
sub
jns
movsb
das
pop
or
pop
xchg
and
cmpsl
rorb
sbb
push
sti
stc
add
fucomip
out
out
xor
hlt
in
pop
in
push
push
stc
pushf
sarl
mov
ja
dec
call
lea
sub
or
cmc
mov
out
push
xorb
jb
out
mov
jae
jbe
cld
leave
nop
mov
or
or
out
inc
dec
cmp
jl
lds
push
fcoms
outsl
add
arpl
jle
ds
fdivrl
adc
test
stos
into
cmpl
mov
jbe
mov
and
std
jnp
sbb
fst
sbb
test
pop
aam
sbb
push
mov
je,pt
inc
mov
xchg
mov
sahf
leave
insb
out
data16
or
xchg
adc
jns
jmp
cs
sahf
ljmp
fbld
dec
lods
pmulhw
mov
popa
cmpsl
mov
xchg
cmc
inc
cmp
arpl
add
sub
push
jne
inc
dec
cmc
cld
das
scas
in
lock
pushf
shlb
or
xchg
dec
orb
addb
mov
push
mov
mov
pop
mov
cmp
mov
scas
and
push
in
popf
dec
lahf
pop
mov
push
inc
dec
or
sti
jnp
int
jae
cmp
bound
jg
gs
test
es
cmpsl
pusha
or
mov
jns
xchg
cwtl
push
cmovle
xchg
jmp
xchg
sub
mov
aaa
shlb
fcompl
mov
shlb
fistl
cli
and
js
stc
push
inc
insl
pop
jb
mov
xchg
out
jb
sub
pop
lods
push
repnz
mov
lea
mov
inc
push
or
xlat
xchg
fisttpl
inc
or
sub
xchg
sbb
add
push
push
insl
xchg
xlat
add
int3
add
inc
mov
jle
mov
loope
cld
daa
ss
push
lahf
mov
adc
dec
xchg
mov
lea
add
jne
add
xor
das
jp
testl
jl
aad
popf
ljmp
adc
jl
daa
clc
push
add
icebp
or
bound
xor
or
roll
pushf
adc
dec
push
repnz
mov
scas
cmp
iret
ret
lret
xchg
fnstcw
repnz
pop
dec
jmp
inc
test
js
iret
xchg
ja
jne,pt
sti
test
leave
in
mov
lods
pushf
add
sub
fstps
loopne
push
data16
pop
dec
adcb
and
test
and
mov
popa
icebp
cmpsl
int
bound
lock
mov
iret
ja
push
imul
imul
inc
lock
movsb
jb
push
mov
repnz
in
pop
rcrl
ret
mov
mov
jge
xchg
dec
aad
fimuls
cmp
push
cmp
sub
out
sub
movsl
rep
mov
inc
sahf
movsl
js
dec
sbb
aad
les
pop
out
jp
push
mov
dec
jp
xor
pushf
xor
xchg
xchg
push
in
mov
xlat
mov
popa
pop
in
xchg
xchg
or
push
sub
cld
les
fimuls
push
push
and
pop
cmc
cli
out
movsb
and
dec
inc
ja
inc
adc
pop
loope
lods
repnz
jl
in
jb
call
push
popa
arpl
popa
imul
pusha
xchg
popf
test
cmp
mov
test
jnp
jg
ret
sub
mov
cld
inc
lcall
inc
jecxz
pop
gs
test
push
cli
subb
add
in
jp
jnp
push
push
fistl
jne
rcrb
mov
xchg
inc
xorb
push
push
lds
mov
or
lahf
int
mov
cmp
pop
xor
lods
mov
ret
push
mov
stc
sub
loop
aaa
and
cwtl
rclb
rcll
imull
jecxz
imul
inc
cs
push
arpl
jbe
push
push
xor
nop
into
cmp
mov
adc
push
push
loope
xor
jne
ret
daa
fdivs
dec
rcr
cmp
pop
sub
push
jp
out
repnz
aas
lahf
cld
adc
fbstp
daa
mov
mov
jecxz
add
outsl
push
ds
mov
inc
lods
mov
aaa
mov
aaa
nop
cmp
mov
cmp
cmpsl
jecxz
mov
call
leave
inc
mov
lds
push
ja
daa
xor
cltd
fnstcw
call
adc
cmp
add
mov
jl
rolb
mov
xor
lods
adc
movsl
shll
cmpb
clc
orb
int
mov
cmp
vsubps
ja
sbb
nop
push
mov
insl
popf
imul
and
inc
test
mov
xor
aaa
lods
push
adc
push
daa
scas
test
pop
and
cmp
jle
out
dec
sti
sub
scas
cmc
sub
inc
or
mov
xchg
mov
xchg
ljmp
cli
aaa
nop
xchg
das
push
cmpsl
pop
lahf
inc
fistpl
add
cmpl
pop
mov
sbb
adc
push
adc
sbb
and
pop
cmp
cmp
aas
xchg
dec
inc
mov
xchg
rcr
stc
test
fucomp
add
arpl
in
gs
dec
push
push
cmp
xchg
scas
leave
mov
pop
testl
mov
rcrb
push
sub
std
scas
cmc
jbe
sarb
clc
fwait
dec
mov
dec
pop
dec
sub
bound
in
das
loope
cs
mov
sbb
je
mov
adc
aad
adc
gs
lahf
xor
psubsb
mov
lcall
mov
or
in
mov
inc
adc
ja
add
adc
pop
sbb
push
sar
inc
lea
mov
xor
repz
and
jbe
test
sbb
out
adc
adc
out
andnps
pop
mov
push
add
adc
mov
testb
push
js
or
lahf
outsl
andl
inc
push
adc
push
int3
sbb
inc
inc
stc
dec
inc
cli
dec
sub
lock
mov
jmp
mov
insl
das
add
lahf
mov
xchg
add
mov
cmp
or
adc
inc
xchg
data16
jmp
cmp
movsb
jle
stos
and
data16
mov
leave
inc
test
jb
nop
cld
insl
rol
ss
sub
aad
daa
insl
imul
test
je
or
xchg
out
jnp
mov
dec
pop
or
pop
push
in
pop
scas
aad
cs
mov
stos
jae
lods
jecxz
jle
pop
jecxz
cmp
sbb
insb
push
adc
stc
lret
mov
add
cmp
jne
dec
sahf
fimull
sub
pop
jne
pop
repz
aas
mov
mov
lods
or
das
ss
and
cmp
enter
iret
or
jns
shl
repnz
sarl
jae
subl
push
xor
out
rcrl
dec
jge
mov
xchg
mov
cmpsl
cmp
mov
and
mov
outsb
push
movsl
lods
aad
fistl
or
inc
mov
and
out
xchg
test
std
jno
testl
mov
push
jecxz
fsubp
mov
or
sti
mov
jno
sub
shlb
push
iret
mov
ret
jg
adc
fsubl
inc
leave
shrl
mov
or
hlt
out
notb
pop
fcompl
adc
mov
filds
or
push
cmp
test
cmp
mov
inc
xor
outsb
jg
rclb
dec
push
dec
imul
rcll
int
jl
dec
inc
outsb
jb
ret
cmc
mov
hlt
jg
ret
jecxz
jp
lock
mov
stos
mov
jae
push
mov
cmpsb
movups
mov
rcr
mov
sub
vmovntps
cli
pop
ljmp
inc
push
aaa
gs
sbb
mov
jnp
dec
jge
sahf
test
pop
xchg
mov
mov
lahf
cli
lods
mov
mov
mov
or
jp
xor
fildll
daa
xor
cmpsl
jecxz
cmp
ficoms
aam
test
dec
les
inc
dec
jge
inc
adc
clc
shrl
pop
jae
jge
ljmp
popf
mov
in
sub
orb
lea
xchg
iret
add
jge
sub
lods
or
mul
lea
push
hlt
sbb
jbe
mov
mov
jg
mov
inc
repnz
fistl
inc
imul
mov
jle
add
cwtl
popa
les
mov
xor
jmp
add
xor
xchg
cmp
rorb
xlat
push
adc
xchg
sti
mov
add
repnz
sbb
sub
mov
fidivrl
loopne
shll
out
pop
bound
pop
into
adc
mov
aam
outsb
aaa
push
cmp
popf
mov
mov
xchg
fldt
call
add
jae
pusha
lahf
xchg
pop
xchg
pop
xor
jns
mov
mov
enter
insl
push
jl
aad
roll
push
arpl
pop
scas
push
pop
or
jg
ljmp
loope
in
sub
jmp
sti
push
jbe
ret
divb
outsl
test
or
cmpsl
mov
rclb
and
xchg
adc
adc
add
cmp
jo
mov
mov
repz
push
inc
cmpsb
xor
pop
dec
rolb
leave
adc
or
jae
iret
das
inc
push
sub
push
in
imul
xchg
stos
outsb
lret
push
mov
xlat
adc
test
sbb
mov
lcall
nop
mov
mov
pop
dec
mov
mov
int3
test
push
outsl
movsb
cld
pop
jl
sarb
addl
cli
jno
stc
cmp
xchg
or
ss
fs
sbb
addl
cwtl
test
or
fcoms
or
aaa
lret
jae
sub
movd
jno
imul
repz
mov
adc
inc
insb
popa
adc
mov
push
nop
out
out
inc
sbb
jg
imul
scas
loopne
movsl
xor
andb
mov
cld
imul
movsl
cmp
jo
pop
xor
sbb
jmp
or
lods
in
mov
cmp
in
jmp
bound
data16
mov
pop
aas
out
xor
xor
imul
pop
cmpsb
dec
rolb
xor
push
and
add
inc
aad
xor
int
rol
sub
adc
testb
push
push
subb
mov
movsl
pop
sbb
stos
and
or
push
adc
flds
and
add
sbb
into
movsl
shll
ucomiss
jp
sti
sbb
rcrb
int3
int3
inc
fs
ret
stos
add
add
and
repz
push
outsl
pop
stos
loop
pop
lods
data16
xchg
cltd
enter
xchg
inc
fiaddl
cmp
int
xchg
test
cmp
xor
mov
mov
shll
mov
pop
lahf
imul
adc
ret
loopne
mov
dec
mov
cmp
jge
jns
loopne
xchg
fisubrs
xor
aas
out
mov
cld
pop
cmp
adc
xchg
inc
mov
daa
xchg
stos
jns
iret
fs
setbe
call
pop
jecxz
jb
fcmovnbe
lret
add
xchg
push
push
adc
cli
lahf
je
inc
jno
cs
sbb
xchg
add
add
push
dec
popa
pop
sub
les
push
test
pop
cs
idiv
fiaddl
jb
mov
sub
cwtl
dec
test
shrl
idiv
adc
je
mov
aad
gs
mov
xchg
jne
add
push
adc
xor
mov
push
xchg
xlat
mov
or
mov
cmp
lret
mov
int
hlt
inc
lods
outsb
cli
es
mov
add
jno
mov
push
add
cmp
fs
sub
adc
adc
dec
add
int3
xchg
mov
and
jne
sub
and
clc
jle
data16
das
sbb
mov
xchg
and
fdivrs
pop
dec
add
jns
imul
ljmp
inc
mov
adc
push
sbb
outsb
mov
nop
xchg
insb
or
mov
mov
imul
mov
or
mov
push
add
enter
and
xlat
fdivl
ret
push
xor
and
mov
insl
fsub
lcall
xor
outsb
sub
in
mov
add
int
add
test
mov
sub
mov
mov
lds
addr16
inc
xchg
xchg
sahf
jne
notb
inc
js
enter
roll
sarl
in
pop
into
push
data16
je
in
movsl
xor
or
inc
lea
jp
xchg
add
jp
scas
mov
xor
xchg
add
sub
sbb
mov
fcoml
jb
jb
push
push
popf
hlt
jl
cli
sahf
dec
movl
jle
push
mov
insl
lahf
jge
push
aaa
loope
mov
xchg
dec
in
adc
pop
pop
xor
inc
mov
mov
lods
sbb
aam
xor
and
dec
lods
mov
frstor
dec
das
adc
cli
leave
popw
int3
adc
js
inc
jnp
stc
gs
repz
vpshab
in
mov
cwtl
sbb
pop
lret
filds
cmpl
or
movsb
fsubrl
sub
into
bound
fwait
mov
nop
fistpl
pop
movsl
push
decl
mov
xchg
and
inc
cmpsl
mov
jbe
pop
enter
push
xchg
add
pop
in
out
jns
loopne
xchg
loopne
dec
adc
xchg
add
jae
or
push
mov
inc
cmpsb
inc
das
pop
ja
jle
push
outsl
cmp
fnsave
inc
stos
push
sahf
fdivrp
mov
jno
dec
repnz
lock
iret
cmp
test
and
daa
fs
pop
push
lcall
sub
cmp
or
and
or
sub
pop
and
pop
mov
test
xchg
cmp
lds
jge
sbb
mov
add
test
xor
cmpsb
xchg
pushf
lcall
aas
lret
dec
pushf
test
mov
mov
pop
lcall
xor
clc
cmpsb
fcoms
std
aad
pop
movb
inc
push
leave
aas
inc
popa
stos
bound
std
js
popf
pushf
loope
stc
cwtl
popf
push
mov
insb
inc
pop
xchg
loope
movsl
sbb
rorb
mov
cmp
ret
mov
daa
push
movsl
adc
fcoml
in
inc
fwait
push
std
add
outsb
inc
mov
pop
clc
pusha
scas
mov
jg
inc
aas
or
arpl
fs
xchg
test
mov
lret
pop
dec
mov
adc
push
adc
add
pop
adc
mov
inc
cmp
sub
sub
mov
mov
cmp
mov
sub
mov
ret
pop
push
jp
mov
or
mov
jge
cltd
xchg
gs
in
sub
sub
jae
pushf
mov
into
jo
xchg
cmp
lret
lahf
mov
movsb
sub
cmp
or
aam
push
xchg
dec
fidivrl
add
mov
push
fwait
loope
popf
jle
dec
inc
adc
inc
out
addr16
imul
fwait
stc
je
push
xchg
xchg
xor
cmp
sub
xchg
sub
adc
stos
mov
stos
adc
lahf
test
in
shlb
dec
shr
adc
push
inc
popa
mov
fucomip
loop
jae
add
mulb
call
lock
loop
and
fcomp
cmpb
mov
push
and
mov
pop
dec
xor
jge
dec
pop
or
mov
addr16
into
in
shlb
inc
jo
xor
js
bound
rorb
leave
pop
out
sub
add
or
push
add
or
push
mov
invd
cmp
lods
mov
xor
mov
sub
pop
sahf
fsubrp
fists
repnz
sahf
push
jmp
aam
xlat
xchg
inc
mov
and
fmull
pop
mov
cld
insl
mov
add
loope
call
sbb
xor
in
sub
jge
cmp
lock
jns
stos
icebp
or
fcoms
jnp
and
mov
push
dec
jle
pop
push
ret
aam
jp
sbb
jb
jl
add
jg
in
insl
xor
fs
mov
adc
dec
adc
xchg
xorl
mov
jge
xor
mov
mov
fstpt
sub
test
jns
dec
xchg
iret
ss
shrl
ja
decl
repnz
dec
ret
std
pop
pop
les
negl
mov
sbb
or
mov
add
aaa
xchg
adc
xchg
loop
loop
cmpsl
cmp
pop
push
mov
pop
es
inc
les
test
test
imulb
cli
out
sub
popf
jns
bound
pushf
mov
pop
in
outsl
loopne
outsl
adc
sub
push
jp
sub
mov
push
inc
push
jle
fidivrs
push
jg
push
and
lods
sub
gs
xlat
push
cmpsl
jge
cmpsl
pop
outsl
fsubl
inc
ret
dec
sti
push
jns
shll
mov
mov
jmp
bound
aaa
jecxz
xor
sbb
das
adc
cmpsb
out
pop
or
fstpl
xor
ss
das
stos
cmp
mov
lock
popf
repz
dec
imul
or
lret
rcrb
pop
mov
leave
movb
lock
adc
adc
and
mov
push
lahf
mov
addl
xchg
les
sub
sbbb
les
es
out
sub
in
mov
lret
mov
or
mov
cltd
push
ret
add
hlt
dec
adc
xor
insb
adc
aaa
xchg
sbb
pop
push
inc
rorb
mov
imul
jl
test
aaa
fmuls
mov
add
or
inc
add
movsb
push
rolb
fmul
mov
outsl
lret
jge
sbb
in
jle
data16
lock
sti
mov
push
in
adc
out
mov
and
mov
xor
and
repnz
mov
mov
xor
mov
sbb
inc
test
cmp
mov
dec
lret
scas
popa
dec
xchg
dec
fnstcw
cmc
test
xchg
pusha
or
mov
out
adc
cmpsl
mov
xor
fstl
inc
test
pop
mov
inc
xor
push
loope
call
and
inc
jae
mov
lahf
testb
dec
fcompl
push
pop
in
push
hlt
icebp
lods
push
xchg
jmp
addr16
mov
out
add
addr16
sbb
cmp
xchg
jl
or
shlb
pop
mov
inc
cmp
cwtl
stos
push
les
fisttps
jecxz
mov
data16
int
jmp
cmc
hlt
stc
sti
push
cmp
popa
je
sbb
insb
xor
ja
scas
mov
mov
xchg
gs
xor
add
mov
test
mov
mov
aas
fcmovne
addr16
popa
out
outsb
fcmovnb
fimull
jge
add
into
jge
test
sbb
mov
je
inc
ss
sub
in
cmpsl
aam
repz
lret
jecxz
addr16
or
test
jae
cmpsb
test
add
stos
mov
sub
jecxz
lods
aam
movsl
imull
addr16
sti
inc
out
std
mov
icebp
dec
xchg
pop
push
lahf
pop
dec
outsl
outsl
int
lcall
push
ljmp
pushf
and
xchg
fnstsw
lods
cmp
les
orb
stc
cmp
cmpsb
aas
sub
fsubrl
arpl
and
xchg
lea
inc
sub
pusha
ret
cmp
push
stc
rcrl
js
jne
outsb
push
das
ljmp
imul
lea
cs
addr16
add
lret
lret
inc
pop
dec
xorl
jb
mov
cmpsb
pop
add
lret
repz
es
stc
iret
std
repz
dec
jae
in
hlt
ljmp
hlt
cmp
xchg
and
sub
mov
xchg
subb
enter
or
adc
xor
repz
push
dec
scas
jge
ss
and
push
xchg
daa
rcl
xchg
enter
xlat
rcr
insb
in
inc
or
adc
push
jnp
out
push
mov
loop
in
je
loop
and
mov
enter
cmp
cmp
add
jp
loope
cld
lods
pop
ds
lret
aam
movsl
xchg
repnz
ja
sti
mov
popa
je
dec
out
lock
mov
dec
or
inc
shrl
mov
lock
cmp
sbb
and
xchg
jo
jno
sbb
and
fcompl
push
aas
imul
xor
out
mov
movsb
pusha
rcll
push
sub
dec
mov
mov
or
push
lret
iret
cltd
jp
cmp
ljmp
outsb
jl
outsl
xchg
adc
xchg
in
pop
fwait
ds
push
cmp
jge
je
dec
hlt
xor
jbe
mov
adc
xor
fists
arpl
jmp
mov
dec
push
inc
jl
inc
dec
out
jge
push
mov
pop
mov
popa
into
outsb
add
mov
movsb
cmpsb
pop
dec
fiadds
xor
ja
stos
add
xlat
sbbl
cmpxchg
cmp
mov
hlt
push
and
pop
fcoml
push
mov
cmc
out
mull
popa
mov
fiadds
pusha
popa
iret
jno
cmp
je
mov
pusha
sub
loopne
imul
mov
pop
mov
ret
xor
pop
adc
mov
out
xor
jl
lds
sub
lods
enter
ret
jge
mov
pop
jae
sub
dec
lds
dec
jmp
repnz
jnp
clc
testb
sbb
arpl
xchg
adc
mov
push
fmull
inc
mov
or
jle
cmp
shrb
lods
fwait
sbb
add
movsb
pop
int3
xchg
inc
mov
mov
flds
ffree
testb
in
push
mov
jge
cmpsb
add
stc
add
mov
ja
sbb
dec
out
lcall
test
jge
divb
ret
mov
mov
bnd
scas
and
ss
xorb
pop
cmpsb
cmpsl
test
dec
pushf
adc
lret
add
dec
nop
or
js
mov
test
outsb
xor
and
mov
add
xor
lds
cmp
jge
mov
aaa
jge
mov
lret
push
mov
int
push
pop
fcoms
pop
int
push
inc
fsub
roll
mov
inc
cmc
jae
pusha
andl
sbb
rcrl
push
rcl
nop
pop
repnz
dec
mov
fimull
out
into
rolb
xor
iret
lods
mov
xchg
cmpsl
sub
xor
and
jb
mov
loop
sahf
mov
sub
ret
mov
std
movl
mov
in
lahf
in
mov
in
cltd
push
add
or
cmp
daa
mov
mov
and
fcomps
push
inc
cmpsb
sbb
aad
push
shll
icebp
js
fwait
in
cmpb
cmp
imul
sub
in
lods
and
xchg
mov
pop
cwtl
adc
add
iret
mov
add
in
shlb
xor
cs
data16
sub
mov
pop
pop
outsb
dec
xchg
iret
add
jae
mov
rorl
inc
and
mov
arpl
jb
hlt
adc
cmc
outsb
mov
push
push
sub
inc
xor
test
xchg
mov
in
stos
inc
ds
mov
mov
push
pop
jle
jmp
sub
popf
cmpsl
jmp
popf
xchg
dec
push
jle
dec
push
xor
enter
imul
cltd
out
bound
sbb
callw
mulb
cmpsb
out
adc
sahf
or
mov
mov
movsb
mov
test
jb
popf
fidivs
das
mov
mov
xchg
pop
rcl
out
sub
mov
ret
ror
into
jns
mov
lea
mov
daa
subl
insb
inc
aam
sub
jecxz
pop
push
addr16
idivb
subl
movsb
testb
test
mov
icebp
ss
mov
inc
scas
push
mov
aaa
sahf
jge
adc
jmp
sub
xchg
dec
std
add
jno
mov
cmp
pop
imul
push
in
fstpt
add
mov
cli
sahf
mov
xor
sub
fimull
sahf
xor
sbb
push
pop
into
mov
cs
int3
dec
lret
jmp
or
inc
inc
jp
jno
jge
sahf
push
not
bnd
loop
ljmp
rclb
pop
mov
mov
xchg
mov
pop
lret
xlat
push
mov
inc
dec
shll
mov
pop
pop
push
or
aam
aam
inc
rol
stc
dec
fmul
lea
into
jb
jno,pt
outsb
push
out
jmp
out
arpl
inc
icebp
sbb
sbb
adc
mov
dec
sbb
push
ss
xorb
stos
lods
stos
or
xor
mov
aad
int
lret
inc
cli
jg
inc
ret
int3
or
cltd
lock
fisubrl
repnz
sarl
fdivs
stos
imul
mov
sbb
sbb
out
cmpsb
xor
adc
pop
mov
mov
mov
ret
sub
mov
pop
shlb
les
dec
out
or
inc
or
out
jl
lock
add
ret
pop
out
ss
xor
mov
or
aad
xchg
test
mov
in
pop
push
and
insb
cmpsl
pop
inc
int
adc
push
addb
incb
inc
stc
pop
sbb
inc
mov
loop
notl
rol
xchg
sbb
out
mov
insb
in
stos
jmp
xchg
adc
xorb
push
mov
mov
xchg
test
pushf
mov
pop
fcompl
pop
and
push
lret
fimuls
xor
clc
jge
fucomi
insl
addr16
jae
mov
xchg
adc
pusha
pop
out
or
gs
adc
cmp
addb
cmpsb
mov
sub
das
pop
pop
and
lods
inc
xlat
inc
out
sarl
jo
lret
inc
int
push
je
inc
jb
outsb
js
loope
jb
jl
in
in
mov
or
andl
add
daa
xchg
add
imul
mov
mov
out
fcmovu
lods
pop
iret
xlat
pushf
and
dec
xchg
pop
sbb
dec
mov
lock
inc
jl
dec
xchg
clc
clc
jno
add
ja
pushl
cltd
arpl
xchg
add
sbb
test
pop
push
xor
add
jg
das
mov
add
jp
push
scas
lods
out
sbb
add
popf
xchg
dec
fistps
jnp
sbb
jl
outsb
cmpsl
cli
imul
fbld
in
xchg
idiv
cmp
dec
icebp
cltd
fs
ret
sbb
sbb
push
nop
mov
mov
mov
mov
nop
test
sub
xor
add
movsb
push
pop
cmp
rol
push
or
jns
mov
sbb
push
or
dec
push
in
push
jns
leave
sbb
fwait
in
outsb
popf
sbb
mov
cmpsl
test
loop
test
fdiv
loop
mov
ss
lods
xorl
push
pop
dec
enter
xlat
inc
dec
js
lds
repnz
or
iret
call
arpl
pusha
xchg
jmp
push
mov
out
sub
jns
xorb
mov
xor
sub
xor
dec
and
pop
inc
das
xor
sbb
fisttpll
dec
icebp
je
add
outsb
loope
orl
outsb
sbb
sbb
and
sbb
push
or
add
mov
mov
xchg
test
jbe
sarl
test
pop
jns
imulb
imul
push
sbb
xchg
and
rclb
int3
in
fmull
and
jo
push
in
insb
lahf
push
push
stos
push
mull
or
mov
mov
fcom
cmp
scas
inc
mov
mov
mov
mov
aas
and
push
jns
cmc
fldenv
pusha
incl
into
push
pop
push
push
xchg
and
outsb
lea
or
icebp
lea
loopne
ja
cmp
mov
jne
sbb
stc
gs
jne
stc
hlt
ja
pop
fidivl
dec
mov
adc
add
aam
inc
sub
dec
ds
adc
xor
and
outsl
shrl
mov
popf
add
ret
push
push
dec
cmpsb
jle
inc
sbb
repnz
dec
insb
mov
arpl
jne
sub
jge
or
out
pushf
adc
and
mov
dec
cltd
mov
xor
push
sub
js
scas
pop
call
and
jne
outsb
dec
dec
mov
inc
repnz
inc
lds
aam
sub
ret
and
jmp
mov
insb
divb
sub
inc
jge
mov
sti
sbb
cmp
and
orl
pop
mov
xchg
sbb
neg
inc
test
pop
sub
lret
bound
int
push
ret
out
jp
pop
lahf
xchg
pop
jnp
inc
dec
test
loope
gs
cs
push
outsl
xchg
pusha
mov
pop
fistpl
and
adc
lret
add
jae
fdivrl
jmp
mov
arpl
add
int
int3
xchg
inc
and
mov
inc
ret
je
jns
jecxz
adc
in
insl
fstl
in
addr16
out
enter
sbb
inc
xchg
mov
popf
pop
out
cmp
sub
xchg
out
mov
xor
mov
and
mov
mov
fbstp
in
inc
adc
mov
jnp
push
jmp
call
arpl
and
out
xor
pop
test
mov
add
test
movsl
sub
repz
cmpsl
movsb
ljmp
pop
addr16
fimull
sahf
xlat
push
mov
inc
repnz
inc
inc
rcl
jae
xchg
jge
mov
jmp
sbb
movsl
call
aam
xchg
mov
xchg
mov
sub
stc
mov
and
das
jecxz
mov
stos
out
sbb
sub
daa
sub
dec
or
icebp
clc
aad
call
push
jbe
out
cmp
jo
jl
pop
sbb
out
adc
sahf
push
dec
sbb
xor
mov
in
stos
cmp
js
mov
in
and
push
add
pop
leave
xchg
dec
cmp
int3
das
dec
lahf
mov
xchg
in
jl
jmp
xchg
pop
jmp
jp
push
jae
loopne
lock
lds
add
or
jg
pop
sub
add
adc
or
pusha
mov
cmp
pop
add
xchg
or
and
push
xchg
and
lret
fldl
mov
lret
subl
jge
jb
dec
std
je
adc
nop
inc
fwait
enter
xor
insl
xor
push
pop
xchg
stos
fiadds
mov
push
xchg
fisubl
cmpsb
pop
pop
das
movsb
cmpsl
fs
pop
cmpsl
dec
mov
rclb
sub
sar
sub
adc
jbe
sub
adc
pop
out
or
inc
push
push
mov
ret
lea
mov
lahf
mov
push
stos
scas
mov
adc
cwtl
into
mov
sarl
add
jns
int
ret
push
jg
xchg
leave
test
sahf
roll
push
lcall
mov
mov
fistpll
andb
scas
mov
pusha
sub
ret
lds
push
cmp
cltd
bound
fsubrs
lret
shll
ret
fdivrl
dec
std
test
clc
fsubl
pop
xchg
lcall
insb
sbb
jp
out
lahf
mov
pop
mov
je
lcall
add
xchg
stos
in
cmp
mov
pop
jecxz
sub
scas
pop
enter
imul
rcrl
arpl
addl
sbb
pop
loop
rcrb
pushf
call
sub
stc
pop
lea
adc
ja
push
xor
mov
and
inc
test
movsl
cmc
xchg
push
push
jl
push
fcom
xchg
es
inc
aam
dec
sarl
cmp
jo
sub
jecxz
pushf
out
jbe
mov
cwtl
ja
mov
cmpsb
ss
dec
rcrb
orb
sub
stos
daa
leave
stos
mov
movsb
and
stos
sub
xlat
mov
mov
mov
gs
jnp
push
dec
mov
ja
jnp
jbe
jle
loope
stos
in
sbb
xor
shll
sbb
nop
addl
add
or
cmpsb
inc
cmpsl
in
mov
sbb
mov
xchg
mov
cmc
push
scas
lahf
pop
dec
sub
pop
das
dec
cli
fucomi
fcoms
test
leave
xlat
fisttpll
push
out
cli
xchg
stc
mov
jge
and
repz
js
and
ljmp
add
jmp
imul
subl
sub
lods
mov
mov
jmp
mov
insl
scas
test
in
and
adc
enter
pusha
cmovs
fwait
loopne
std
lcall
fcompl
cmp
and
and
cmpl
or
push
or
cmp
dec
test
test
push
sub
hlt
push
cli
daa
dec
jns
mov
jne
clc
push
lret
xor
jg
push
add
jnp
mov
stos
ja
in
jbe
jne
loope
loopne
movsl
push
xchg
in
cwtl
lods
adc
or
cmp
test
add
mov
fldcw
lods
imul
lcall
push
or
xlat
movsb
std
mov
mov
bnd
call
popf
and
decb
and
push
bound
pop
adc
mov
imul
fmuls
and
aaa
fcomps
imul
inc
rorl
dec
xchg
cmp
in
lds
movsb
imul
mov
repz
sahf
dec
neg
mov
inc
pushf
daa
sbb
cwtl
push
leave
popf
enter
xchg
sbb
xor
aas
add
negl
mov
inc
push
xchg
iret
pop
jno
decb
ds
rcll
rcl
pop
jnp
dec
jp
int
dec
js
sti
mov
inc
inc
xor
loopne
out
xchg
in
loope
lds
add
jno
mov
pop
xchg
xor
mov
lods
push
outsb
dec
enter
mov
insb
pop
dec
inc
lret
pop
aam
pop
pushf
cmp
rorl
into
rclb
in
sahf
repz
push
jecxz
adc
pop
xor
out
or
cltd
xchg
mov
adcl
jp
jl
mov
mov
mov
xor
cmpsb
mov
push
stos
xchg
add
pop
in
enter
pop
rol
lcall
iret
dec
mov
idiv
sbb
cs
jo
lds
clc
lahf
sbb
adc
fdivl
sbb
cltd
push
gs
loope
pop
popf
lock
leave
mov
out
pop
cs
mov
pop
inc
sbbb
fdivl
push
sbb
push
jo
das
xchg
lods
jp
mov
call
xchg
sbb
xchg
xchg
push
out
mov
cmp
xchg
outsb
out
mov
movsb
push
rorl
aaa
aad
inc
sub
xchg
movsl
xchg
outsb
mov
push
mov
jno
lret
add
mov
cmc
imul
xchg
ljmp
pop
push
xorl
push
fists
hlt
popl
fs
cmp
shlb
pop
xchg
test
mov
push
stos
scas
sub
stos
push
js
or
mov
dec
sub
push
push
or
faddl
dec
inc
sbb
in
cltd
jge
mov
jns
imul
ljmp
push
leave
xchg
push
inc
mov
xchg
inc
movsl
mov
jg
shll
mov
sub
bound
mov
pop
fcomi
scas
dec
sahf
cmc
dec
cli
push
mull
inc
int3
adc
lret
jbe
xchg
lock
jp
shr
push
rcrl
xchg
fwait
pushf
sbbl
push
push
mov
and
adcb
aas
add
movsb
dec
ficoms
daa
fadds
lods
mov
push
out
cs
ret
das
scas
sbb
outsl
enter
fsincos
sarb
aad
inc
jmp
int3
xor
dec
pop
cltd
in
out
outsw
and
stos
or
xchg
or
test
or
and
mov
mov
sub
mov
cld
fistps
movsb
popf
cwtl
aam
pop
ret
aam
repz
inc
popf
in
or
icebp
mov
sub
ret
outsb
jne
mull
sbb
push
adc
adc
mov
mov
js
das
push
mov
ss
addr16
pop
hlt
sub
xor
add
ss
fstl
xchg
cmc
and
jecxz
repnz
jg
movsb
out
jno
fnstenv
jb
lock
outsb
pusha
cmp
es
lcall
nop
mov
subb
cmpsb
lea
test
aas
cmp
xchg
test
mov
or
roll
into
mov
mov
cld
mov
jo
jmp
fs
iret
ret
in
push
cwtl
es
dec
xchg
pop
inc
or
fsub
jp
push
icebp
cmp
jne
dec
out
xor
bound
fwait
mov
nop
fildl
pop
sti
mov
jle
push
cld
xchg
jae
inc
icebp
mov
ljmp
lods
hlt
bound
imul
in
sbb
or
adc
adc
sti
add
cmp
xor
sub
es
fbstp
aam
xchg
cmp
test
cli
mov
repz
lods
je
and
fcomp
insl
pop
pop
loope
rcrl
enter
pop
lret
rorl
addl
inc
imul
in
mov
pusha
sub
in
jge
and
adc
or
imul
test
cmp
popa
mov
lcall
and
movsb
out
bound
pop
or
sbb
lahf
leave
adc
xchg
clc
or
std
incl
jae
mov
cmp
mov
mov
mov
and
and
out
shrl
daa
push
mov
inc
sub
inc
in
in
add
ret
lea
jecxz
clc
push
mov
cmpsb
mov
fsub
xor
or
sub
lret
xchg
stos
pop
cli
jno
sub
dec
sub
daa
pop
lcall
push
xchg
es
jno
nop
xchg
jle
lret
lea
mov
movsb
mov
jecxz
sti
stos
push
es
scas
cwtl
and
xor
cltd
mov
mov
xor
inc
sarb
xor
sahf
push
jo
repz
outsl
pop
jp
movsl
arpl
fmulp
dec
xchg
mov
pop
data16
aad
push
dec
jmp
inc
ljmp
xor
mov
cmp
adc
jge
in
stc
mov
lcall
and
or
adcb
das
inc
cmp
popa
mov
pop
iret
fadds
pusha
dec
push
cli
push
jae
sbb
fadd
data16
inc
dec
test
mov
imul
ss
sub
scas
and
daa
gs
mov
mov
mov
mov
push
andb
xor
aad
in
ljmp
das
mov
hlt
inc
rcrb
xlat
push
push
jns
cmpl
jecxz
test
lcall
jbe
popf
xchg
sahf
pop
call
fcmovne
std
sbb
push
jnp
sub
push
or
cmpsb
xchg
in
subb
cli
lock
and
insl
leave
mov
jg
leave
or
push
into
ljmp
ret
mov
inc
and
loopne
jns
sub
mov
push
mov
jb
adcl
push
in
cmp
test
xor
mov
cmpsb
inc
es
inc
sub
lret
fsubrl
adc
std
mov
jbe
int3
jbe
les
repz
xchg
mov
and
popa
daa
and
sbb
add
out
mov
test
and
mov
sub
out
jno
dec
and
imul
push
jg
ror
fldl
clc
jno
pop
out
hlt
cltd
imul
movsb
pop
rcrb
mov
imul
sub
out
aad
fs
inc
mov
insb
sub
pop
cmpsb
sub
lods
inc
dec
lea
rorl
inc
or
xchg
cmpsb
cli
inc
int3
dec
in
loop
jp
lret
jbe
jmp
push
lock
cs
push
mov
xchg
fwait
stos
lea
xchg
mov
mov
adc
stc
or
push
xor
cmp
jnp
cmp
imul
sub
or
lea
sbb
pop
icebp
gs
orb
lods
xor
or
dec
or
cltd
icebp
arpl
aad
xor
ss
lea
and
lea
fldl
es
mov
sub
jae
mov
pop
and
lea
enter
dec
push
out
cmp
gs
add
adc
cmp
push
jo
push
arpl
call
sbb
pusha
loop
adc
adc
mov
push
mov
pop
orb
sub
mov
mov
push
mov
jo
aam
cmp
pop
iret
mov
ficomps
and
sbb
pop
sti
pop
push
add
jge
dec
ljmp
imul
xchg
jle
sbb
data16
outsl
frstor
mov
icebp
xchg
lcall
mov
ficoms
pushf
xchg
sub
mov
scas
add
inc
shl
test
stos
push
push
and
ret
pop
push
out
add
pop
stos
movsl
push
jb
inc
ss
addr16
out
jbe
push
loop
or
inc
mov
push
sahf
fisttpl
pop
lea
cmp
push
cmpl
imul
scas
andl
aas
iret
cmp
aad
into
pop
aam
jle
push
into
test
ljmp
fwait
in
insb
mov
sbb
out
push
xchg
sbb
aas
dec
xchg
mov
mov
xchg
mov
fdivrs
ja
loopne
cmp
lahf
push
mov
call
dec
rcr
ret
sarb
nop
dec
xchg
ret
jno
push
lock
push
dec
dec
bound
bound
leave
fstps
inc
pop
fstl
inc
or
jae
ret
push
ja
cmp
aad
ss
test
pop
xor
jne
sub
pop
scas
mov
mov
push
inc
leave
or
jnp
push
cmp
leave
call
jmp
xor
int3
mov
pop
or
mov
add
clc
test
adc
sub
stos
fidivrs
std
pushf
pop
int3
in
stos
mov
movl
sbb
lahf
mov
pop
adc
iret
mov
roll
sbb
lock
xor
mov
xchg
data16
cs
pop
fnstsw
push
xchg
movsl
cmp
xor
shl
dec
inc
and
test
jne
pusha
sub
dec
cmpsl
fmuls
lcall
adc
inc
lahf
push
jbe
dec
out
mov
outsb
outsl
add
pusha
popa
sub
xchg
mov
mov
xchg
push
ds
mov
cmp
ret
aaa
fmull
push
dec
push
cmpsb
cmpsl
mul
push
int
aad
jg
js
dec
enter
sahf
ja
inc
hlt
fdivrs
fdiv
or
out
cltd
ljmp
popa
nop
pop
fwait
xor
adc
mov
mov
sub
dec
movsl
fidivl
push
and
minps
rcll
lret
lret
dec
int3
lock
ret
push
mov
dec
adcb
lret
xor
popf
arpl
mov
xchg
pop
fs
popa
int
in
jno
mov
xchg
sub
xor
or
test
mov
add
xor
lahf
sub
jae
out
push
shlb
into
iret
pop
sub
repnz
repnz
dec
jg
out
jne
lds
loopne
pop
jbe
das
mov
lret
or
scas
sbb
add
adc
or
ds
pop
ljmp
mov
and
mov
jae
mov
add
mov
es
jns
inc
dec
add
mov
std
arpl
or
arpl
sub
lods
movsb
or
out
popf
sbb
push
data16
adc
jo
push
pop
aas
push
ds
movsb
xchg
cmp
clc
mov
dec
cmpsl
jns
fcomip
scas
push
shll
aad
dec
mov
mov
adc
mov
inc
jnp
sarb
repz
outsb
cwtl
mul
adc
js
push
push
pop
jp
ficoml
xchg
mov
add
lods
jle
aaa
jae
xlat
mov
inc
lea
nop
sbb
mov
jbe
pop
dec
or
adc
pop
add
aas
inc
test
push
out
das
jg
clc
je
sbb
jne
outsl
adc
lds
pop
andb
mov
movsl
mov
cmp
add
adc
sub
mov
pop
xorb
jge
sbb
mov
mov
sub
movsl
ret
jp
out
int
pop
inc
lods
jmp
jnp
into
hlt
jne
mov
imul
push
cmpsb
in
notl
or
adc
push
pushf
adc
adc
add
or
cmp
jl
pop
sub
sahf
mov
nop
inc
xor
sub
jp
dec
cmpsb
movsb
dec
push
repz
inc
pop
dec
call
out
cld
ror
jo
in
je
out
or
adc
inc
mov
addb
je
mov
xchg
lock
jbe
cmp
sbb
jno
adc
cmpsb
dec
mov
dec
or
jnp
push
pop
orb
mov
imul
insb
sbb
add
mov
rcrl
fcoml
shlb
jns
or
pop
test
sub
push
cmp
movsb
das
dec
fstp
pop
in
mov
pop
adc
jne
in
insl
mov
push
jmp
mov
xor
fstps
mov
cs
sbb
dec
sbb
add
sbb
lock
jle
adc
das
mov
test
daa
fildll
jle
jmp
lahf
mov
and
mov
push
mov
inc
dec
jno
mov
ljmp
std
fdivs
pop
ljmp
cmp
xchg
sbb
jb
cmpb
leave
inc
mov
aaa
xchg
in
imul
data16
sbb
adc
mov
rclb
push
je
jmp
jnp
and
cmc
lcall
add
dec
pusha
cmp
cltd
les
mov
or
jno
aam
add
test
jecxz
jnp
mov
pushf
stos
out
adc
popa
xchg
mov
dec
out
jge
xor
imul
lcall
addb
ljmp
data16
mov
push
in
fldl
adc
test
test
jge
mov
inc
fimuls
inc
or
xor
pop
ret
fildl
jbe
das
fldl
icebp
cwtl
leave
ror
jge
int3
push
jae
sbb
jge
jecxz
repnz
cmp
out
in
pop
test
call
adc
pop
add
and
iret
dec
mov
mov
es
mov
aaa
and
lea
dec
popf
enter
pop
shlb
movsl
sbb
mov
jns
imul
repz
cmc
xchg
sbb
out
cmp
shll
cltd
xor
xchg
pop
xor
or
insl
fldl
mov
stos
std
hlt
jge
lods
ja
adc
and
je
sub
inc
jae
movsl
inc
pop
lcall
incb
dec
ret
cld
jge
hlt
clc
in
jg
jo
mov
cwtl
popf
addr16
xchg
fs
adc
pushf
arpl
mov
push
xchg
in
ss
or
lea
adc
ljmp
sub
and
push
push
es
and
mov
xchg
inc
cltd
mov
js
xor
xchg
inc
xchg
sbb
sbb
in
arpl
rolb
xchg
xchg
xor
ds
push
jle
cwtl
mov
outsb
fnsave
rorb
movsl
ds
dec
int3
mov
jge
xchg
jnp
mov
fistps
hlt
jns
sbb
pop
xchg
cld
or
in
mov
aaa
inc
fnstsw
dec
lds
xchg
inc
bound
push
ret
test
add
mov
in
test
cmp
mov
mov
int
sub
lods
cli
daa
loop
pop
jno
fcomip
dec
push
outsb
rcl
jnp
jp
pop
inc
in
sbb
xchg
jb
adc
ljmp
pusha
sub
movsb
lahf
and
xlat
fcmovne
fsub
dec
out
outsb
test
lds
dec
cld
or
jb
imul
test
xor
daa
lcall
lret
popa
pop
dec
in
rcrb
lret
sub
mov
add
out
test
cmp
in
inc
cwtl
lcall
call
and
sbb
pop
pop
push
cmp
clc
mov
jg
mov
cmpsl
cmc
and
jne
adc
lea
inc
dec
int
out
sbb
xchg
cwtl
cmc
mov
in
adc
pop
xchg
push
ljmp
xor
arpl
sub
xorb
cltd
inc
xor
sbb
aam
inc
outsl
sub
jle
pop
inc
add
les
std
std
imul
insb
shl
inc
stc
gs
popa
sub
lahf
sti
arpl
pop
xchg
aad
xchg
fsin
cmc
cmpsb
movhps
mov
xchg
pop
cmpsb
jae
iret
and
and
xor
dec
or
dec
in
lds
sub
and
inc
fimull
negb
jae
mov
sbb
call
and
jne
psubd
xlat
mov
mov
addr16
xchg
sahf
xor
push
or
adc
int
adc
sub
mov
lret
cli
inc
xchg
cmp
not
xor
push
idivb
pop
sbb
pusha
lahf
and
fldt
add
adc
and
add
mov
in
jecxz
hlt
sahf
add
sub
cli
push
fsubp
aam
stc
inc
sbb
sbb
cli
mov
call
outsb
js
jae
dec
imul
leave
sbb
dec
and
in
mov
xchg
sti
xchg
or
in
or
test
mov
mov
dec
fdivrs
cmp
sbb
xchg
sub
cs
dec
xor
dec
pop
push
cmpsb
sub
sbb
ja
in
fucomip
push
adc
lret
sbb
mov
lds
jle
icebp
cmp
testb
sub
cmp
loop
data16
rcrb
pop
pop
and
pop
mov
push
sub
inc
mov
ss
mov
sub
iret
jl
imul
and
out
adc
adc
adc
jp,pt
or
scas
mov
xor
test
in
mov
outsb
and
cltd
sub
push
xchg
and
xchg
and
fcoml
jl
enter
mov
pop
outsl
stos
jp
jecxz
jl
loop
and
mov
pop
jmp
mov
sub
adcb
pop
rclb
ds
or
mov
inc
or
aaa
jo
and
and
xor
mov
mov
clc
std
fwait
jbe
jle
jb
jo
loop
push
jecxz
cmp
loope
rcrb
insl
js
lods
icebp
inc
adc
add
xchg
nop
movsl
pop
data16
aas
in
sbb
or
int3
mov
or
and
dec
enter
pop
cs
push
fstps
cmp
push
dec
int
shrl
out
incb
inc
std
push
shll
dec
ljmp
inc
rcrl
dec
mov
mov
or
imul
mov
push
movsl
xlat
xor
divb
cmpl
add
mov
inc
push
jo
test
into
jge
push
xchg
jo
or
lret
cmp
push
inc
mov
lret
xchg
xor
cmp
and
add
addl
add
add
sub
cmp
outsl
xchg
mov
leave
xchg
fadds
rcr
push
jecxz
into
js
jge
sbb
xchg
jbe
or
inc
pop
outsb
sti
bound
test
movsb
out
mov
cmpb
mov
or
and
adc
sub
mov
add
imul
mov
test
pop
sub
push
xlat
jg
into
into
inc
cld
mov
mov
popf
daa
stc
push
insl
out
jo
push
mov
sub
sbb
ret
push
add
adc
sbb
orb
adc
cmp
mov
lea
jae
cmp
int
ret
pop
ret
xlat
addr16
xor
and
lods
jb
insb
vsqrtpd
dec
iret
inc
imul
js
call
ds
xor
nop
mov
sbb
jne
lret
out
nop
mov
push
aam
aaa
dec
addb
inc
mov
jae
hlt
ss
xlat
lret
fcomps
insl
adc
pop
jns
adc
shlb
or
dec
call
inc
pop
cmp
clc
xchg
es
in
push
inc
xor
in
pushf
cltd
push
mov
lahf
mov
mov
add
les
mov
mov
sbb
or
jmp
in
xor
or
icebp
je
dec
test
dec
js
int3
inc
push
in
cmp
in
ja
pushf
mov
xchg
mov
and
pop
push
mov
stc
xchg
xchg
push
mov
xor
ret
icebp
int3
inc
ljmp
movsl
and
push
push
jns
repz
je
cltd
cwtl
loopne
jbe
cmc
mov
inc
out
mov
ja
jecxz
imul
test
stos
addr16
adc
popl
xor
test
xor
xor
xor
aas
fdivrs
jg
int3
and
popa
xchg
movsl
in
mov
xchg
dec
ljmp
inc
pusha
or
les
xchg
insl
push
and
inc
sbb
jno
stos
jae
mov
bnd
aas
xchg
adc
mov
mov
inc
cmpsb
std
mov
scas
mov
and
in
sbbb
js
or
rcrl
push
adc
repnz
sahf
repz
inc
nop
imul
hlt
xchg
xchg
ja
inc
in
or
sbb
jecxz
lcall
add
es
mov
cmp
pushf
stos
dec
mov
dec
xor
and
adc
dec
mov
inc
cmp
gs
or
dec
addb
xchg
pusha
mov
call
mov
and
out
push
xchg
adc
mov
xor
repz
sub
out
movsl
shlb
loopne
sahf
push
fbld
out
push
lret
fsubr
je
leave
add
cmpsb
ret
ds
jmp
mov
jne
sbb
hlt
out
fwait
xchg
push
loop
ret
fwait
cmp
icebp
incl
jl
sub
cmp
cmp
stos
jo
fbld
push
and
mov
fdivrs
jo
cmpsb
and
adc
jb
shl
lds
dec
js
lret
icebp
sub
xchg
cmc
and
or
add
mov
or
outsl
mov
in
fcoms
inc
sbb
out
xchg
mov
lock
or
ljmp
and
mov
mov
xor
xchg
sub
cmpsl
ret
cmpsl
fcompl
xor
inc
push
sub
imulb
ret
cmp
push
pop
in
push
jecxz
lahf
imul
fcoml
fiadds
cmp
xchg
mov
mov
sub
in
push
out
or
es
inc
inc
or
lret
cwtl
stc
cs
push
jno
cli
dec
out
xor
arpl
jae
out
bnd
adc
dec
arpl
lcall
mov
ds
adc
xor
mov
andl
and
xchg
inc
aas
rorl
jp
inc
push
mov
inc
or
ljmp
data16
enter
ret
adc
adc
xor
mov
sub
mov
xor
insl
mov
movsl
mov
iret
sbb
push
mov
int3
incb
dec
inc
imul
cld
fdivr
jno
sarb
aam
add
out
in
or
fs
mov
sahf
mov
mov
add
les
inc
aas
es
mov
mov
out
push
out
dec
mov
and
sbb
js
add
insb
cmc
gs
insb
icebp
loopne
stc
imul
adc
inc
xchg
fs
iret
adcl
aaa
loop
shll
xor
fdivr
test
push
ror
cmc
fstp
clc
popa
sub
sarb
lret
aam
adc
rcrb
jae
imul
adc
loop
arpl
add
dec
sbb
xchg
dec
xchg
cmp
sbbl
sub
pop
mov
add
aas
push
jae
lds
push
rorb
mov
lock
mov
jae
loope
insl
push
fsubr
jno
xchg
imul
aas
or
mov
or
push
adcb
fs
aaa
int
and
sub
xor
pop
and
scas
cmp
fisubrl
sar
pop
jge
xlat
fildl
dec
dec
cmp
dec
inc
int3
pop
jae
pop
testl
xchg
push
jmp
pop
jle
sub
add
mov
mov
add
lahf
mov
mov
mov
fnsave
ds
jecxz
and
scas
out
adc
push
div
int3
nop
jnp
lret
pop
xor
shrl
ror
sbb
sahf
ret
fs
lahf
arpl
loop
push
cmp
insl
in
out
testb
dec
data16
xor
cmc
mov
and
and
push
cmp
sub
mov
dec
mov
mov
fadd
jp
mov
call
sahf
jl
sub
call
sbb
data16
xor
mov
setns
add
pop
add
cmp
mov
add
cmp
or
cmp
mov
lret
aas
sub
imul
sub
push
jae
clc
ret
pop
mov
in
adc
jns
push
cmp
pushl
loop
icebp
out
cltd
jno
jecxz
dec
push
fcoml
inc
push
xor
cmpsb
sub
fcmovu
add
rcll
lods
or
scas
in
scas
pop
add
jo
sub
into
mov
cld
nop
push
jb
xchg
in
fwait
out
andl
jecxz
cmpsb
pusha
lods
lods
fdivrl
xorl
or
xor
int3
mov
xchg
movsl
and
push
inc
mov
fdivrl
shrb
dec
inc
ret
ficompl
pop
out
clc
enter
fdivs
mov
gs
cld
sub
divl
les
clc
inc
or
outsb
sbb
andb
test
pop
cmp
fdivrs
into
pop
cmp
add
repz
dec
int
xlat
ror
mov
inc
jl
pushf
jmp
shrl
inc
lcall
add
cwtl
outsl
pop
cmc
sbb
xchg
sbb
mov
mov
xchg
xorl
add
aas
add
add
and
and
jecxz
cli
and
shrl
in
aas
mov
inc
ss
out
gs
cli
and
add
jbe
scas
mov
mov
out
jne
ficoml
sbb
test
or
push
mov
orl
and
mov
bound
loope
sub
ret
ja
stos
pop
push
mov
dec
mov
aas
mov
mov
xchg
icebp
inc
jg
xchg
jl
cmp
xchg
loope
dec
jmp
mov
in
mov
cltd
adc
lods
mov
mov
cmp
push
xor
inc
stc
pop
sub
xor
and
loope
mov
call
movsb
pop
jo
aad
iret
xorl
imul
jns
pop
bound
sbb
daa
call
ret
adc
ja
ret
andl
mov
mov
mov
aas
ljmp
sub
sub
lods
mov
xchg
and
mov
sahf
sub
loopne
xchg
mov
incl
fistpll
repz
mov
in
bound
inc
or
loope
and
mov
xchg
xchg
adc
sahf
imul
repnz
hlt
aas
cwtl
pop
ja
adc
outsb
mov
iret
sbb
ljmp
cli
into
or
inc
jb
repz
pop
jne
dec
jmp
lea
add
testb
pop
sub
pop
add
mov
lret
mov
or
cmp
add
xor
pop
mov
inc
lret
dec
sti
into
mov
arpl
inc
ret
xor
movb
rorl
lods
xchg
lcall
stc
orb
xchg
push
dec
outsl
or
ja
mov
call
xor
push
sub
sub
cld
and
pop
iret
outsl
jmp
mov
mov
fimull
in
pop
jl
sbb
imul
scas
hlt
sahf
and
into
and
xchg
dec
dec
ficompl
xchg
nop
mov
cmpsl
adc
mov
cld
repnz
pop
jbe
cmp
lods
outsl
and
adc
mov
fisubl
insl
push
fcompl
test
cmp
xor
mov
pusha
cmpsl
cld
mov
pusha
popa
inc
lcall
rclb
sbb
pop
pop
pop
and
ss
add
adc
cmp
push
pop
roll
sbb
popf
mov
loop
test
mov
adcl
pop
cmp
bound
fisubrs
loop
test
sbb
mov
jnp
sub
jge
stos
sahf
xchg
imull
test
push
adc
addr16
movsb
out
pop
sbb
add
push
pop
insl
add
xlat
jb
cmp
hlt
add
loopne
sub
and
in
add
mov
ds
rcl
inc
fs
scas
shrl
jbe
rcll
repz
in
icebp
add
lods
in
jns,pt
cmp
gs
cwtl
dec
movsl
adc
adc
lret
sub
jg
or
scas
and
mov
rol
pop
mov
inc
fcompl
mov
gs
adc
jns
cltd
sub
lock
sbb
and
jno
fs
adc
sub
push
adc
add
add
mov
add
xchg
and
icebp
xchg
cmpsl
push
dec
and
ror
pop
fisubrs
test
ja
or
ret
inc
cmp
fstpt
popa
loope
imul
cwtl
addr16
ret
fwait
xchg
cld
mov
add
test
and
out
and
cld
testb
loopne
mov
fstpl
pop
add
xchg
mov
std
jmp
cltd
jns
and
push
adc
subl
adc
and
sbb
mov
mov
mov
sub
loop
fcoms
mov
into
mov
lret
cmp
inc
loop
or
rcl
and
dec
pop
pop
inc
cmp
aaa
aam
adc
jnp
add
out
sbb
outsl
xchg
xchg
mov
xor
enter
jecxz
cli
and
mov
mov
cmp
sub
mov
mov
adc
test
stos
sub
pop
cmp
xor
pop
cld
jbe
lcall
mov
cld
cmp
pop
pop
outsl
lock
cmpsl
add
xchg
enter
in
rcl
sbb
les
cmp
add
xor
sub
shlb
dec
push
mov
data16
push
inc
shll
cmp
pop
inc
mov
and
inc
push
mov
imul
insl
mul
lahf
or
sub
lods
in
xor
lds
jns
cmp
fwait
xchg
lock
cli
push
and
xor
pop
dec
xor
fsub
sub
pop
sbb
int
pop
faddp
inc
mov
mov
inc
sbb
push
jp
shl
insb
insl
out
xor
imul
sbb
adc
sub
adc
hlt
pop
or
test
cltd
and
setb
mov
call
addr16
andb
push
lea
mov
insl
adc
stc
std
sbb
imul
arpl
pop
loop
daa
arpl
push
fwait
test
aad
ret
sti
pop
jns
push
test
xchg
repz
mov
arpl
mov
nop
pop
insl
pop
and
rorl
dec
rcrb
add
sti
je
inc
into
and
sub
test
cmp
gs
or
xchg
mov
bound
iret
mov
mov
or
mov
pop
mov
sbb
mov
rcrb
sub
mulb
and
pop
fnstcw
movsb
loopne
sarl
jecxz
mov
insb
sub
pushf
repnz
mov
ljmp
cmc
fs
mov
in
enter
loopnew
push
push
mov
pop
or
mov
mov
loop
and
pop
push
mov
imul
push
andl
gs
xchg
enter
js
enter
add
jns
mov
mov
mov
mov
dec
bound
adc
movsl
sbb
popf
sahf
lea
pop
nop
xchg
call
orl
and
mov
mov
mov
jmp
pusha
or
call
dec
andl
dec
outsl
rol
xor
aam
iret
sub
xlat
sar
mov
loop
in
mov
xchg
in
adc
mov
fwait
in
imull
sbb
mov
push
xor
jp
fs
and
lret
inc
pop
outsb
stos
das
outsl
icebp
jp
sahf
jl
push
cld
xlat
jp
repnz
dec
mov
dec
push
scas
ljmp
jnp
ljmp
std
rorb
and
xchg
andl
outsb
aas
mov
imul
add
sub
mov
popa
stc
in
dec
push
iret
mov
jle
jmp
into
bound
shlb
js
push
fstps
mov
pushf
xchg
pop
out
or
pop
or
push
es
mov
mov
xor
jae
and
jl
sar
lret
dec
xchg
pop
xor
inc
push
rolb
mov
add
insb
sbb
pop
daa
mov
add
loopne
insl
out
adc
mov
rolb
push
test
js
jecxz
sbb
test
mov
xor
mov
inc
int
push
subb
cmp
push
jno
dec
mov
mov
xor
ret
aaa
imul
mov
shlb
pop
imul
ds
mov
xchg
subl
cmp
push
and
lea
mov
xor
mov
imul
mov
cltd
mov
sbb
orl
pop
lods
mov
mov
mov
and
pop
mov
push
fcom
aad
dec
dec
ror
ret
inc
out
inc
and
idivl
in
mov
pusha
sub
in
jae
and
adc
or
jge
push
incb
lret
jp
dec
mov
and
jle
jl
lret
sti
add
xchg
out
mov
lods
or
nop
test
sub
push
cmpsb
test
pop
iret
cmp
pusha
mov
sbb
gs
dec
pop
sub
inc
aam
xlat
xchg
jg
cmp
iret
lret
mul
ja
es
xchg
dec
or
jb
mov
mov
repnz
xor
out
test
bound
out
jo
jecxz
cltd
mov
cmpsb
popf
bound
jno
push
decb
roll
rol
jo
mov
mov
test
push
repnz
xchg
xor
inc
lret
push
movsb
mov
jns
mov
aam
sbb
fldt
lahf
jnp
jns
push
lret
movsb
xor
in
sbb
pop
xchg
inc
cmp
mov
sub
inc
scas
rorl
iret
ficoms
mov
fisubrl
sti
xchg
ds
jnp
out
cltd
stc
arpl
jae
fmuls
adc
cld
push
scas
nop
mov
mov
dec
or
iret
fwait
xorb
sbb
jle
cwtl
inc
cwtl
xor
int3
aaa
lret
or
xchg
jo
test
pushf
out
xchg
cmp
arpl
mov
add
sti
cmp
fsubl
cmp
cmp
mov
testl
jle
mov
mov
jb
sub
scas
cmp
stc
pop
xchg
cmp
jnp
inc
sub
not
cli
dec
repnz
inc
and
and
mov
jg
mov
out
imulb
call
add
cmp
cmp
add
mov
insb
sub
xchg
jmp
sbb
fwait
cmp
shrl
inc
mov
cld
aaa
jmp
jnp,pt
add
fs
and
cmpsb
addr16
lods
push
or
cmpsl
xchg
repnz
push
add
pop
fistpll
sahf
xor
stc
mov
movsb
repz
hlt
stc
and
push
mov
sbb
fimuls
sub
dec
cmpsb
dec
cmp
add
imul
jo
gs
out
jmp
nop
jb
fisubs
sbb
adc
mov
cmp
jns
mov
xor
jle
fildl
cwtl
push
and
cld
sub
roll
rcrl
xrelease
stc
lret
adc
icebp
xchg
lcall
cmp
sbb
rcrl
call
add
mov
push
aam
cmp
cmc
ret
sub
test
xchg
iret
lock
inc
aad
mov
add
dec
cld
inc
mov
repz
push
cmc
lcall
nop
lods
call
popf
mov
bound
fwait
push
mov
leave
xor
cli
and
fnstenv
addr16
xor
adcl
pop
fcmovb
test
cli
jns
lret
in
leave
fbld
push
imul
and
sbb
and
scas
icebp
add
push
insb
divb
xchg
adc
push
sub
mov
pop
sub
shrb
mov
addb
subl
pop
push
sarl
inc
mov
push
rorb
stc
aam
enter
lret
fnstsw
lods
xchg
mov
subb
add
push
push
jmp
xor
pop
in
stos
popa
loop
dec
test
add
ds
mov
fdivl
add
test
or
xchg
mov
into
movsb
pop
cmc
and
push
push
mov
lds
dec
xlat
jge
inc
xlat
pop
fwait
cli
dec
or
inc
add
je
cmp
jmp
sbb
push
ret
push
mov
sbb
or
nop
mov
add
mov
mov
jle
xor
outsb
mov
dec
jmp
roll
adcl
cmp
aad
push
adc
cli
dec
push
out
inc
into
add
jb
sti
mov
or
xchg
mov
add
arpl
xor
mov
dec
test
inc
mov
aaa
add
lods
aaa
mov
cmp
xchg
fsts
mov
push
pop
sbb
inc
ret
dec
sti
testb
or
into
xchg
jns
stc
outsl
xor
jb
sbb
in
adc
sub
mov
push
fiaddl
mov
lods
cmp
daa
das
mov
dec
imul
outsl
mov
ret
addl
call
decl
adc
inc
xchg
jno
pop
jnp
jmp
shl
pop
cli
xchg
cmpsl
sbbl
or
push
mov
xchg
mov
inc
mov
mov
fisubrs
insl
pop
push
jno
pop
sbb
or
pop
icebp
mov
bound
je
insb
inc
mov
idivl
aad
adc
loopne
arpl
pop
jnp
sbb
nop
mov
fdivs
sub
xor
ds
sub
or
pop
dec
xor
sahf
in
pop
pop
rcrl
sbb
in
enter
sti
inc
not
dec
daa
insl
test
pop
jae
mov
sub
rcrl
movsb
adc
icebp
iret
mov
subb
cmp
and
imul
xor
jmp
pop
jno
cmpsl
push
imul
dec
addr16
dec
dec
sbb
int3
adc
jno
pusha
pop
out
lods
repz
bnd
adc
hlt
imull
push
scas
push
adc
adc
xor
lods
xrelease
imul
jb
inc
cmp
cmp
and
in
pop
imulb
or
jl
leave
les
test
xor
testb
mov
jge
jecxz
std
stos
dec
out
test
es
mov
pop
or
rorl
sub
mov
mov
lahf
mov
push
mov
pop
lods
loopne
push
push
fadds
pop
cltd
inc
sbb
xchg
les
dec
xchg
jle
dec
mov
pop
scas
jbe
cmp
sbb
ret
pop
xchg
lods
dec
xchg
dec
sbb
cmp
cmp
mov
cmpl
inc
arpl
es
sub
cmc
pop
pop
push
out
pop
dec
pusha
rcl
push
push
inc
pop
bound
not
repnz
hlt
or
jne
jns
jmp
ja
sub
sub
adc
mov
add
lods
add
xchg
xchg
cmp
mov
cmp
mov
xor
mov
push
out
fs
dec
push
or
testl
out
mov
insl
or
lret
out
sub
or
mov
mov
xchg
add
xor
xor
test
jae
mov
sub
dec
sub
xlat
ret
sbb
decb
aam
shl
jnp
or
push
outsl
mov
cwtl
mov
out
stos
into
out
sbb
and
mov
cwtl
xor
sti
add
sarb
iret
mov
jb
mov
and
xor
mov
cmpsb
fmul
pop
lods
xor
sub
jns
sbb
jae
lret
jmp
jb
call
or
push
hlt
std
or
sbb
add
in
adc
mov
jnp
sbb
out
or
test
sbb
and
pop
xor
popa
or
push
scas
bound
push
popf
ret
clc
mov
mov
xchg
jmp
cli
cmp
scas
pusha
inc
mov
fwait
cmpsb
mov
and
adcl
lea
fildl
xorl
mov
ret
imul
nop
test
inc
xor
fistps
and
xchg
mov
mov
sbb
adc
push
rolb
cmp
xor
sub
xor
es
mov
stos
sarl
push
mov
sub
dec
pop
xor
inc
ret
dec
scas
js
push
cmpsl
cli
das
mov
mov
cmp
mov
imul
jg
shll
mov
nop
test
lret
js
cmp
sub
cs
jo
cld
sub
aaa
pop
mov
cmpsl
ljmp
inc
push
or
jge
mov
out
add
ds
cltd
mov
hlt
rep
jl
xchg
outsl
sub
fldl2e
mov
push
xchg
push
mov
into
daa
xor
cmpsb
movl
jmp
je
notb
xor
lahf
vmwrite
push
fs
call
xchg
cli
decl
sbb
mov
jmp
fcompl
sbb
push
jmp
out
xchg
scas
adc
mov
mov
dec
adc
mov
push
lods
add
cltd
shrb
adc
enter
lea
jne
inc
push
adc
mov
sub
jbe
pop
data16
and
pushf
adc
add
xchg
aad
ja
addl
sti
xor
sub
lock
clc
sub
and
ret
fistpll
mov
jae
inc
inc
jmp
inc
inc
and
jne
divb
pop
stc
loope
sub
push
negb
jecxz
outsl
inc
loope
popf
xchg
cmpl
pop
jp
loop
incl
cmp
xchg
scas
mov
aaa
mov
out
mov
in
fiaddl
sub
add
hlt
and
inc
mov
out
inc
shll
inc
xchg
shr
icebp
dec
in
pop
cmp
sbb
outsb
xchg
sbbl
mov
mov
xchg
xor
mov
sub
mov
jmp
js
test
pop
ret
ja
mov
lcall
mov
enter
sbb
sbb
and
negb
cli
xchg
adc
lret
push
mov
sub
js
adc
or
ljmp
push
lods
or
stos
mov
aam
push
or
leave
mov
dec
lds
subl
pop
lahf
stc
xchg
testb
nop
pop
out
fs
cmpl
das
lods
call
clc
pop
xor
add
repnz
push
vpcmov
cmpsb
xchg
idiv
imul
push
aam
xchg
repnz
dec
mov
inc
jl
xchg
outsl
mov
loopne
mov
sbb
xchg
xchg
xchg
aaa
cmp
xchg
push
dec
js
daa
mov
ret
pop
xor
xor
xor
cld
ss
test
pop
das
and
cmp
rcl
into
or
jbe
insl
popf
inc
sbb
jge
mov
mov
out
popf
or
orl
insl
cmp
aam
jo
dec
xchg
sbb
dec
add
xchg
jle
push
rcl
mov
mov
lret
xor
fdivrs
jle
es
cli
cmpsl
pop
sbb
xor
int
inc
or
sbb
mov
data16
test
jle
add
xor
je
add
in
lods
loopne
mov
pop
cltd
mov
lcall
add
pop
add
mov
cmp
and
mov
lods
jno
inc
fldt
fstps
dec
mov
dec
jge
shll
adc
cwtl
sti
ret
cmp
push
fdivrp
lods
popf
mov
lods
xchg
int3
jmp
cmc
in
xor
mov
sub
adc
or
or
ja
cmp
je
jo
aaa
mov
repz
and
mov
adc
jl
stc
rcrl
icebp
bswap
lret
iret
out
ja
loope
js
cmc
xchg
push
inc
jno
out
stos
out
push
pop
sti
or
lcall
adc
in
dec
mov
or
adc
jp
mov
pop
mov
or
test
cmp
pop
ja
lret
out
out
inc
cli
or
clc
jbe
or
call
sub
iret
pusha
je
test
cltd
aad
xor
cmp
cmpb
xor
aas
es
jge
stos
sub
pop
in
sub
stos
inc
in
cs
mov
ja
aas
dec
inc
out
xlat
dec
jle
leave
dec
std
cwtl
inc
shll
clc
fucompp
in
mov
sbb
test
gs
sti
or
xchg
jnp
mov
mov
bound
inc
pop
test
cld
sub
jns
imul
fwait
pop
das
jle
sbb
lret
jne
jns
dec
cmp
lret
loope
inc
cmpl
cld
jo
xchg
jns
xor
sbb
dec
gs
mov
or
push
cmp
roll
stos
test
add
or
int3
jg
push
movsl
dec
push
pop
rolb
dec
jp
inc
dec
jns
inc
pusha
addr16
rcrb
lock
and
lods
in
loope
ljmp
adc
popa
or
icebp
pop
or
loope
cmp
aaa
arpl
mov
cmp
xor
lods
ret
in
xor
pop
mov
cmp
cld
popa
inc
inc
add
lahf
xchg
and
cld
and
push
data16
jecxz
mov
mov
out
add
movb
mov
cmp
hlt
and
test
out
and
int3
test
insl
xor
stos
lock
cmp
inc
inc
in
cmp
adc
sbb
notb
into
movsb
ljmp
jae
out
dec
fistl
call
mov
jae
mov
jp
mov
cmc
arpl
mov
and
fimull
orl
movsl
inc
pop
dec
jae
inc
std
sbb
jns,pn
repnz
std
dec
data16
mov
loop
mov
cwtl
or
test
xchg
add
push
es
test
mov
lds
hlt
push
pop
xlat
out
push
add
fists
push
sahf
adc
adc
cmc
mov
xchg
inc
adc
mov
lock
shlb
sahf
out
jbe
xchg
ret
xchg
adc
fcoms
call
aaa
mov
mov
xchg
inc
test
and
dec
shlb
and
sar
iret
int3
les
and
xor
aam
sti
or
pusha
sbb
out
jp
outsl
in
sar
sbb
add
into
pop
mov
push
add
loopne
aas
shll
fidivrs
mov
xchg
inc
fwait
lds
jle
pop
mov
push
imul
sub
fsubrs
dec
jns
jp
dec
xchg
call
nop
jne
idivl
dec
mov
in
fdivs
jae
movhps
int
aam
or
inc
gs
stc
sbb
mov
and
movsl
aad
add
iret
cmp
iret
ds
jecxz
jmp
jl
in
and
mov
push
and
jle
mov
enter
mov
pop
xchg
add
jns
sbb
jl
mov
pusha
adc
outsl
cltd
inc
cmc
aad
insl
dec
lea
gs
sbb
insl
xchg
fcoms
dec
jl
mov
mov
mov
repz
addr16
pop
fs
aad
dec
pop
lret
mov
push
lahf
mov
xchg
jge
inc
inc
pop
in
push
cwtl
aaa
mov
xor
mov
loopne
add
stc
sbb
mov
jp
add
cld
mov
add
xor
cmp
rolb
mov
aaa
movsl
mov
stc
es
es
inc
jb
shrl
push
movl
aam
push
loopne
outsb
jmp
cwtl
pusha
bound
push
dec
adc
adc
fistps
pop
cmp
andl
test
cmp
insb
rol
cltd
pop
arpl
ret
cs
xor
adc
int3
test
aas
rcl
add
and
outsl
jae
sbb
je
imul
xchg
nop
sbb
xchg
push
xor
adc
mov
in
lret
mov
fsubrs
pushaw
adc
fdivrp
sub
lods
xor
inc
lods
mov
pop
fiaddl
mov
inc
sub
test
icebp
add
cli
dec
js
jae
mov
in
outsb
push
movsl
mov
in
rcrb
lea
sbb
cltd
or
xchg
inc
mov
cmp
pop
adc
add
call
xor
in
adc
mov
adc
popf
push
test
and
add
fidivrl
dec
jge
jg
inc
mov
push
sahf
outsl
xor
aad
iret
sbb
scas
mov
fcompl
mov
cmp
ret
pop
test
sub
cmp
inc
shl
xchg
mov
and
sahf
xchg
clc
insb
loop
fucom
outsl
nop
inc
pop
mov
push
aam
lret
push
lock
loope
inc
jbe
stc
pop
popa
jle
inc
lahf
adc
sahf
outsb
ret
mov
outsl
cltd
arpl
aam
cmove
lret
addr16
xchg
test
and
mov
sub
aaa
shl
sub
imul
aad
push
inc
rcl
jmp
clc
jg
in
sbbl
sbbb
in
sbb
xor
adc
stc
subl
and
cli
add
and
jle
pop
adc
je
test
ja
call
dec
mov
dec
mov
push
xor
fsubr
sarl
pop
xchg
push
negl
bound
loopew
pushf
sbb
sahf
in
cmp
mov
cmp
stos
xchg
imul
pop
xlat
sub
aaa
mov
out
mov
es
leave
fnstenv
int
push
aam
lcall
jg
in
inc
inc
std
and
pusha
nop
adc
jbe
adc
adc
nop
fldl
jo
imul
or
cmp
mov
or
outsl
and
xor
xor
and
lds
sub
ljmp
cmpsb
movsb
sbb
call
jbe
inc
cltd
icebp
sti
jb
push
lock
or
cmc
lods
loopne
outsb
rclb
loope
mov
or
adc
mov
add
or
insl
mov
mov
mov
add
dec
inc
xchg
jle
or
repz
jecxz
int3
and
push
cmp
mov
push
mov
mov
add
add
or
or
mov
bound
in
xor
or
lea
cmp
mov
das
xchg
xor
pop
daa
cmpsb
push
mov
int
jne
daa
rcrb
jns
mov
mov
ja
lock
outsl
imul
pop
pop
out
or
mov
push
dec
push
fdivrl
sub
outsb
cmp
pushf
lret
mov
inc
push
cmp
scas
clc
mov
pop
xchg
cmpsl
or
in
lods
daa
cltd
xlat
in
push
xchg
scas
mov
inc
sub
jae
mov
inc
inc
addr16
dec
push
jo
sbb
enter
aad
sbb
loope
fs
mov
cltd
sahf
mov
push
rclb
jmp
stos
sub
dec
pop
cmp
daa
pop
mov
mov
dec
mov
mov
sub
rol
rorb
fsubr
ja
push
dec
iret
aad
pop
mov
das
iret
sarl
inc
jnp
pop
jns
pop
imul
push
loopne
lea
shrb
mov
bound
fisubl
mov
inc
sub
dec
movsb
pop
pop
inc
mov
enter
fdivp
adc
popa
jg
cld
add
ret
mov
pop
jmp
push
jb
pop
dec
or
insb
sbbl
pop
adc
mov
or
or
gs
scas
in
sub
push
repz
inc
pop
out
gs
dec
mov
fmul
repnz
cld
call
imul
sbb
jmp
into
adc
jbe
or
push
push
add
das
mov
or
popa
mov
mov
and
fldcw
in
lcall
dec
and
insl
pop
out
stc
jns
jl
clc
lock
lock
sahf
xor
sbb
cltd
push
icebp
out
pushf
lcall
mov
sbb
sbb
xchg
xchg
lret
mov
add
add
mov
inc
mov
xchg
mov
push
pop
push
inc
iret
shr
ja
ret
mov
cmp
out
sar
imul
push
ljmp
cwtl
data16
add
inc
ret
aaa
out
push
test
and
mov
mov
lds
ss
stos
xchg
rcrl
dec
dec
mov
xlat
adc
mov
mov
dec
pop
fsubr
lods
int
jl
jp
std
inc
insl
adc
push
popa
mov
mov
arpl
cwtl
mov
add
and
or
cmp
push
sub
xchg
aas
fisubrs
sub
push
mov
das
repz
shl
cwtl
shr
xchg
xlat
cli
jbe
dec
repnz
outsb
or
jmp
inc
mov
dec
out
insl
pop
jecxz
jae
sbb
cmc
inc
pop
sub
push
or
out
or
out
xor
loope
addr16
inc
cmpsl
push
add
dec
mov
pop
test
and
cmpsl
rolb
sub
ljmp
outsl
and
inc
popf
dec
jne
call
arpl
mov
sbb
insb
xchg
stc
pop
jge
sbb
or
adc
nop
andps
jb
dec
cmp
mov
cltd
mov
sti
loopne
orl
dec
inc
imul
ret
loop
test
outsb
fsubs
imul
mov
push
adc
sbb
adc
popf
or
loopne
pop
or
cmpb
mov
sub
out
cmpsb
pop
push
lahf
pop
leave
xor
push
mov
sbb
addr16
pop
lret
idivb
orb
bound
call
bound
repnz
je
sbb
test
bound
cmp
pop
loopne
xchg
test
add
pushl
xlat
cmpsb
ja
mov
cmp
scas
aam
mov
dec
push
popa
notl
sub
jl
std
dec
nop
jbe
scas
cli
cli
scas
jecxz
cld
test
cld
xchg
loope
setnp
cmovne
out
adc
sub
mov
mov
push
mov
sti
ret
je
fnstenv
mov
insb
dec
xor
sahf
ret
xlat
mov
jo
repnz
movsb
xor
mov
jecxz
mov
mov
out
repz
add
jle
lea
test
test
xchg
inc
sub
shr
in
fisubrs
out
loope
push
xchg
cmpsl
movsl
scas
cmp
pop
les
mov
fildl
sarl
mov
popa
jnp
sbb
jne
lcall
sbb
sbb
inc
test
scas
mov
cltd
mov
pop
xor
ficomps
jmp
adc
into
sbb
xor
cmc
dec
arpl
fistl
jl
add
aaa
pop
ret
sub
leave
jmp
in
cmp
imul
in
inc
xchg
movsb
mov
and
jbe
xchg
mov
mov
fnstenv
mov
dec
stos
fstl
push
dec
dec
repnz
sbb
into
jae
mov
stc
jmp
jg
jb
test
je
imul
or
dec
in
or
adcl
fdivs
pusha
fcomps
sub
loop
mov
mov
mov
mov
cli
aam
push
jl
dec
fcoml
lret
ds
push
dec
mov
pop
dec
mov
dec
inc
lcall
pop
or
sbb
xor
lds
mov
sbb
in
loope
xchg
test
lea
push
rclb
xchg
and
inc
mov
aas
mov
fnstcw
xchg
int3
test
inc
sub
lds
jle
dec
push
lret
js
dec
out
sti
inc
loope
lahf
pop
jne
lret
jge
cld
pop
mov
loop
mov
and
sub
test
ret
pop
ds
lret
or
mov
mov
mov
dec
pop
mov
stos
fwait
rcrb
stc
lcall
cmovno
xchg
pop
sbb
icebp
std
rcrb
std
inc
imul
jns
mov
sub
imul
or
stc
xor
and
adc
into
pop
add
sub
jnp
pop
pop
ror
test
dec
xor
dec
lods
adc
push
mov
leave
jne
inc
fsubr
sub
movsb
test
jg
ljmp
or
fs
mov
enter
and
xchg
cmp
sub
pop
add
cmp
fistpl
dec
pop
add
aam
mov
pop
pop
sbb
mov
push
xlat
iret
cmp
inc
roll
mov
fstpt
adc
call
in
xor
inc
mov
cmpsb
adc
mov
inc
mov
jb
inc
fldt
dec
lea
xor
leave
movsb
iret
and
pop
dec
stos
and
ljmp
inc
cli
in
adc
add
sbb
cli
dec
adc
adc
inc
jne
out
outsl
mov
loop
jge
testb
adc
xchg
pop
mov
pop
pop
xorb
enter
in
xchg
xor
leave
sahf
mov
int3
test
test
rol
enter
jmp
iret
mov
loopne
ljmp
sub
inc
add
xchg
pusha
pusha
pop
out
or
sbb
pop
call
push
push
pop
insb
cs
inc
cmp
test
fisubrs
pop
pop
sbbl
pop
push
rcll
jne
pop
cld
es
andb
mov
jmp
mov
inc
imul
xchg
push
mov
cltd
or
push
test
inc
adcl
into
pop
mov
pop
inc
mull
fsubrs
mov
pop
pop
imul
or
and
push
mov
stc
ret
dec
cwtl
cmp
fdivrs
adcb
push
or
ds
mov
mov
popa
aas
xchg
sahf
add
xor
jmp
xor
frstor
insb
jmp
and
in
sbb
fisttps
insb
movsb
gs
outsb
fists
xlat
adc
and
sbbl
mov
call
mov
sbb
sub
cmp
and
add
and
pop
xchg
cmp
aas
fsubl
mov
aas
dec
aaa
jne
clc
ss
dec
stos
mov
sti
pop
lret
dec
inc
inc
adc
pushf
push
or
outsb
cltd
add
inc
test
or
jecxz
jecxz
test
sub
in
mov
cmp
test
pop
cmpsb
add
xorl
pop
test
dec
inc
pushf
xor
pop
ljmp
mov
push
std
xchg
dec
scas
dec
and
inc
xor
cs
cmpsb
lock
jns
mov
mov
adc
andb
mov
add
out
fisttpll
lds
mov
mov
push
scas
or
andb
pop
daa
or
fmuls
adc
mov
js
lret
inc
push
test
mov
add
jne
call
call
int3
incb
or
mov
sub
xor
add
mov
pop
ss
lea
lret
vmulpd
jge
pop
into
sbb
inc
dec
jbe
inc
lock
push
cmc
std
hlt
push
pusha
stos
mov
aam
stos
pop
int3
ficoml
jns
aas
jp
xchg
lret
xchg
pop
mov
jb
mov
aad
test
xchg
mov
cs
mov
xor
and
cmpsl
rcrl
mov
lret
cmp
mov
test
ljmp
inc
push
in
mov
cmp
repz
and
add
hlt
sahf
in
cmp
lods
xorb
movsb
cmp
and
cmp
mov
call
push
or
push
insl
out
and
jne
lret
int3
push
or
stos
lds
cld
icebp
divb
push
clc
cmp
xor
xchg
or
push
xchg
lret
xlat
mov
fdivrs
nop
mov
pop
xor
mov
mov
sub
and
daa
pop
cmp
jmp
push
popf
adc
out
push
jae
dec
sub
movsb
arpl
mov
test
stos
sub
mov
jecxz
loop
stc
data16
add
adc
dec
push
mov
jle
push
push
lods
and
mov
sbb
pop
popa
mov
mov
loope
adc
dec
orb
inc
call
popl
lahf
xchg
popa
in
data16
imul
jecxz
mov
das
mov
mov
xchg
pop
out
cmc
mov
inc
cmp
cmp
mov
mov
sub
aas
cmpsb
iret
mov
clc
inc
ds
mov
into
lret
inc
jle
lock
mov
cmp
mov
sub
jl
adcl
inc
es
mov
cmp
adc
das
ds
mov
pop
lods
cltd
rcll
fcmovnu
push
and
out
dec
mov
inc
dec
pushf
mov
jp
dec
xchg
and
sub
push
mov
or
pop
data16
adc
xor
or
or
xchg
pop
fdivrs
jle
addr16
add
pop
sub
lods
jl
loope
leave
fbld
sub
dec
xchg
fcmove
outsb
aaa
ret
jb
int3
jl
in
lods
incb
adc
repz
ja
je
dec
outsl
imul
add
inc
inc
sbb
int
push
sub
lea
push
jae
mov
inc
sub
xor
std
cmp
and
jnp
sbb
fucomi
cmovl
roll
or
jb
mov
iret
lcall
outsl
cmc
xor
and
loope
and
addl
or
in
mov
inc
mov
sub
cmpsl
mov
pop
push
test
es
push
daa
fmull
push
fildll
dec
aad
push
jns
inc
pop
jns
inc
inc
test
js
arpl
jb
andl
push
imul
adc
sbb
inc
add
add
or
imul
and
jecxz
and
and
pop
or
movsl
lret
les
push
cmp
dec
mov
and
mov
in
imulb
jbe
loope
in
cmp
aaa
out
aad
mov
add
or
int
stos
xor
out
movsl
aaa
std
enter
mov
or
sub
xor
cmc
sbb
dec
lds
arpl
dec
repz
lock
out
push
xor
lea
adc
mov
loop
and
ljmp
cmp
mov
icebp
mov
frstor
sub
out
sub
ljmp
cld
push
fbld
mov
nop
jnp
movl
lret
stc
outsl
mov
xor
or
add
sbb
jmp
add
push
pushf
repz
or
add
xchg
xchg
cltd
xchg
mov
adc
in
adc
bound
in
orl
pusha
aam
stc
aam
mov
faddl
pop
iret
clc
std
inc
dec
js
insl
lock
notb
sub
out
adcl
mov
xchg
xchg
mov
xchg
xor
adc
es
js
jnp
or
pop
decb
test
lcall
jae
jns
dec
cld
das
std
xor
and
scas
xchg
jo
mov
add
xchg
fldl
push
xchg
fwait
out
scas
aam
cltd
leave
std
sub
rorl
adc
pop
sbbl
data16
jge
push
add
mov
insb
sub
xchg
mov
cmp
pop
ss
bound
mov
pop
and
push
mov
mov
rorl
pushw
push
mov
popa
bound
repz
pop
sahf
fwait
hlt
dec
jmp
or
add
add
xor
cmp
pop
push
test
scas
fs
lret
push
jns
xchg
dec
lret
pop
mov
clc
int3
into
dec
pop
iret
fdivr
jo
iret
insb
aas
stc
dec
ljmp
js
push
icebp
jmp
icebp
loope
arpl
adc
push
mov
pop
sarl
mov
mov
mov
push
test
test
mov
aas
jp
cld
mov
loopne
daa
mov
faddl
xor
call
pop
jmp
sbb
into
nop
jb
xchg
inc
repnz
popf
ds
xorl
pushf
lahf
cmp
pushf
or
mov
mov
jge
or
orl
mov
mov
push
pop
mov
or
int
pop
inc
fcom
fcoml
enter
idivl
lahf
mov
dec
mov
outsb
jo
push
in
nop
xchg
xchg
in
add
lahf
sub
sub
out
mov
cmp
call
mov
into
shll
push
add
mov
cmp
mov
dec
add
inc
out
adc
mov
fstpt
cmc
pop
stos
mov
scas
aaa
sub
mov
push
lcall
adc
cwtl
or
jne
jle
or
push
mov
out
pop
push
mov
inc
in
fimuls
pusha
cmpsb
pushf
adc
adc
les
dec
ret
pusha
icebp
inc
inc
or
lds
pop
cmp
xor
stc
sbb
sbb
lea
cmp
aas
or
xchg
mov
cmp
sub
push
sub
iret
jle
insl
inc
jbe
in
inc
rclb
dec
je
cltd
xchg
dec
jno
hlt
xchg
jns
mov
int3
lahf
mov
pushw
xchg
popf
rolb
test
cmp
or
xor
int3
scas
mov
scas
movsb
push
sti
inc
lcall
mov
push
icebp
aad
inc
sti
aad
iret
scas
dec
dec
pop
mov
adc
ja
outsl
push
in
jl
or
aas
out
inc
xchg
mov
mov
sbb
xor
cld
in
leave
inc
and
icebp
mov
mov
push
mov
das
jecxz
fdivrp
cltd
fcompl
cwtl
mov
pusha
mov
adc
cwtl
inc
sahf
push
cld
insb
int3
xor
sbb
les
imul
adc
out
in
sbb
and
mov
imul
xor
inc
outsb
inc
cmpsb
loopne
pop
cwtl
movsl
loope
pop
fistps
sub
sbb
xchg
lret
je
stc
imul
sbb
lock
loope
scas
loop
std
mov
out
sub
jb
sbb
dec
dec
addr16
and
mov
xchg
jecxz
leave
dec
dec
xor
sub
mov
cmc
daa
ss
xor
fdivl
aad
arpl
pop
dec
in
add
cmpsb
fdivrs
mov
fsubrp
das
sahf
enter
adc
adc
jb
and
lea
mov
mov
fcoms
dec
sbb
xlat
pop
mov
jo
pop
stos
pop
jle
inc
test
or
mov
lcall
cs
mov
outsl
sub
push
jbe
or
ljmp
test
lea
dec
cmpb
dec
and
js
mov
test
jnp
sub
push
push
or
iret
aad
push
inc
and
inc
ret
jno
push
out
mov
cmp
cltd
loopne
sbb
xchg
sarl
test
rcl
pop
jo
xchg
in
xor
into
mov
subl
fdivl
std
fdivs
dec
and
rcrb
inc
push
xor
jns
fwait
scas
std
inc
mov
jae
inc
mov
sub
adc
mov
inc
mov
sbb
mov
lea
mov
cwtl
lcall
xor
std
jl
out
mov
mov
add
jge
test
cmpsb
int3
adc
lea
dec
xchg
push
arpl
jb
jns
inc
or
mov
loop
sub
mov
into
fisubs
push
xchg
rorb
add
shll
f2xm1
into
push
jle
addr16
movsb
mov
stos
pop
and
test
adcb
pop
pop
fs
int
inc
or
js
and
cmpsl
jno
cmp
adc
fists
and
stos
lcall
mov
sbb
mov
cmp
sbb
mov
repz
and
sbb
fistps
test
cmp
mov
test
or
mov
ds
mov
insb
shll
push
lahf
jb
or
adcl
lahf
xor
adc
push
or
hlt
cmp
xlat
out
lcall
sub
xchg
push
into
daa
push
cmpsl
repz
mov
fbld
push
push
xchg
leave
push
push
pop
pop
cmc
inc
cld
call
xchg
jle
nop
add
data16
mov
adc
addr16
mov
rcrb
mov
lods
sub
adc
arpl
jmp
hlt
pop
push
lret
sub
add
cmpsb
movsl
sti
arpl
pop
ret
xchg
inc
imul
loop
dec
push
repnz
sbb
jno
inc
cwtl
ss
inc
bound
push
mov
xor
nop
add
or
test
or
mov
xor
inc
das
fdivl
popa
dec
jne
push
andb
xlat
mov
fmulp
or
jnp,pt
das
or
fwait
pushf
outsl
aas
stc
scas
mov
mov
repnz
xor
adc
sbb
adc
notl
pop
pop
rolb
mov
imul
and
lods
cmpsb
cltd
inc
inc
pop
fnclex
movsl
shl
sub
sbb
add
dec
in
mov
mov
jb
outsb
cmp
data16
push
imul
adc
cmc
lahf
cmp
scas
adcl
andl
and
movl
and
dec
daa
movsl
lock
mov
push
fsubrl
daa
mov
dec
jge
std
jg
inc
sub
icebp
adc
mov
out
mov
xchg
lcall
mov
fucompp
mov
xchg
xor
cmp
test
mov
in
and
loopne
stc
stos
rcr
cmp
cli
mov
xor
sbb
jo
mov
out
outsl
cmp
mov
adcl
adc
adcb
add
fdivrs
mov
lods
or
mov
lea
aaa
jns
mov
int3
inc
mov
push
adc
frstor
int3
add
jno
mov
cmpsl
xchg
mov
pop
lahf
cmc
sbb
test
lock
sbb
push
and
xor
mov
movsl
xchg
cli
lods
mov
jp
insb
mov
scas
lret
jb
sti
aas
jns
pop
jle
push
ret
cmpsl
xor
push
popf
and
push
xchg
inc
cwtl
into
rorl
pop
push
dec
jp
mov
lahf
mov
scas
pop
sub
hlt
loopne
adc
insb
cwtl
adcl
xchg
arpl
pusha
mov
xlat
sarb
movsb
roll
inc
sub
cmpsb
mov
pop
pop
and
gs
subb
adc
mov
out
mov
sti
inc
orb
imul
xchg
jmp
clc
out
adc
mov
xor
add
cmp
sub
insl
dec
pusha
movsl
dec
xlat
fbld
dec
pop
and
xor
push
sbb
ja
lahf
popa
insl
in
sbb
mov
pushf
adc
pop
mov
add
fsubrs
mov
xor
fsubs
scas
daa
stc
push
adc
out
aam
fmull
push
jne
iret
jp
jp
pop
shl
jns
outsb
ja
insb
outsl
call
popa
in
subl
outsl
test
xchg
adc
lock
xchg
decb
jp
rolb
shrl
mov
pop
sub
push
push
and
int
and
fsubrp
test
xor
insl
dec
inc
leave
cli
push
inc
jge
je
cmp
ja
lret
ja
jne
mov
movsb
lock
push
pcmpgtw
xchg
xchg
jae
pop
or
cmovno
xchg
addl
sbb
push
pop
jae
sub
in
jbe
es
sti
rol
or
inc
out
sbb
sbb
and
sti
ja
hlt
jno
cmp
leave
out
mov
sbb
mov
mov
adc
sub
hlt
mov
into
test
lock
inc
xchg
fsub
fsts
inc
push
ficomps
push
sub
nop
inc
mov
aas
xchg
jge
xor
add
je
jl
arpl
daa
fcmovnu
loop
ret
call
popa
inc
or
xchg
and
push
pop
mov
test
rorl
daa
add
xor
cmc
and
rcr
lods
add
cli
in
ds
imul
arpl
into
jmp
inc
cmp
cmc
pop
sub
outsb
gs
in
movsb
cwtl
ret
sbb
cmp
pop
lret
or
lahf
adcb
inc
add
aaa
sub
adc
into
mov
push
cwtl
pop
mov
push
out
cmpsl
ret
fldenv
out
push
dec
sarb
or
xchg
shl
xchg
stos
dec
sbb
out
shll
fstps
cld
out
test
stc
int3
mov
and
mov
xor
out
sub
inc
nop
shlb
int
xchg
out
jns
imul
xchg
fidivl
xor
nop
xor
xorl
pop
pop
xor
mov
push
mov
jne
addr16
sbbl
andl
mov
scas
les
bound
lds
fwait
jg
in
add
call
mov
or
sbbb
cmp
mov
lcall
rcll
add
push
xchg
das
mov
xor
lods
push
xor
lods
sarl
mov
stc
jl
sbb
clc
inc
push
cmp
push
adc
inc
ds
jnp
insl
mov
add
mov
popa
sub
sbb
addl
sahf
in
ja
adc
adc
mov
mov
pop
lcall
jnp,pt
sbb
sub
jle
pop
pop
pop
loopne
rol
jmp
jnp
sbb
mov
ja
lock
stos
jg
inc
ja
loop
testl
xchg
rcrl
push
pop
cmp
syscall
sti
mov
xor
loop
xor
jl
dec
mov
hlt
roll
push
mov
xlat
cmpb
mov
jo
ss
jmp
jmp
arpl
in
adc
in
fwait
adcl
inc
mov
add
add
xor
sub
jbe
mov
fimull
pop
and
ficoml
jg
inc
std
inc
mov
int
add
sub
cld
xor
xrelease
fs
lock
fcoml
xchg
stc
adc
xchg
sub
int3
adc
nop
xor
stos
fldl
mov
sbb
faddp
sub
das
pop
pop
rclb
dec
xchg
mov
out
jg
dec
enter
repz
imul
mov
jb
sbb
cmc
xchg
dec
test
xchg
in
sbb
mov
or
mov
enter
imul
xlat
in
in
dec
push
and
pop
xchg
aad
enter
fisttpl
rcrl
mov
sahf
leave
sbb
or
dec
cli
or
or
push
inc
out
mov
add
pop
aas
mov
cwtl
dec
lea
mov
cmp
call
stos
scas
mov
mov
sahf
out
ret
jle
cmp
jo
jle
std
dec
xlat
xchg
lds
outsl
mov
imul
cmp
movsb
mov
add
rolb
bound
and
ja
popf
jecxz
addb
or
fnstenv
mov
insb
mov
les
fcmovu
pop
mov
sbbl
clc
push
leave
sbb
jns
sbb
out
jne
or
lock
andl
outsl
add
mov
jecxz
pop
cmp
or
inc
adcb
mov
test
jb
mov
push
les
lods
mov
popa
and
cmpsb
sub
and
or
inc
push
mov
sub
mov
stc
incb
leave
sbb
mov
cmpsl
sbbl
loop
mov
hlt
xchg
pop
pop
jae,pn
xchg
push
mov
xor
dec
testl
mov
out
insb
push
mov
mov
repz
sbb
in
sbb
dec
jge
sub
jbe
andl
pusha
add
imul
xchg
addr16
or
xchg
mov
movhps
jge
sarl
xor
inc
fs
cmc
mov
adc
call
mov
xor
fimuls
inc
stos
cli
push
dec
jl
cwtl
lods
xchg
mov
add
mov
shll
jecxz
nop
pushf
in
dec
les
sbb
jmp
push
xchg
cmp
add
pop
mov
xlat
and
dec
add
imul
jge
and
fdivl
xor
fidivrs
bound
mov
adc
push
lea
push
cmp
sbb
fisubrl
iret
lods
inc
xchg
or
adc
mov
dec
pop
cmp
sbbl
jmp
repnz
xchg
subl
pop
aam
or
pop
dec
or
inc
stos
inc
imul
in
std
ja
mov
loop
adcl
pop
push
adc
mov
and
enter
and
cmp
push
pop
pop
xor
sbb
leave
cmc
dec
mov
loope
mov
push
dec
shll
cltd
out
add
imul
mov
cmp
adc
adc
mov
add
imul
imul
and
mov
inc
lods
stos
inc
daa
sahf
jl
inc
inc
push
scas
jle
fs
xlat
dec
aad
pop
into
mov
sbb
insb
popf
sbb
loop
les
lock
repnz
clc
push
cltd
sub
out
push
out
fs
aas
sub
nop
or
mov
andb
pop
sub
dec
xor
sub
fnsave
adc
pop
popa
movsl
push
cld
jb
imulb
xlat
mov
in
xchg
out
idivl
dec
mov
ja
aam
jae
jp
jno
outsb
cmp
sbb
jmp
imul
mov
pop
test
in
jecxz
divl
fstps
xchg
push
push
adc
xchg
or
cmpb
jb
aas
ja
cmc
jge
out
pop
sbb
push
sbb
xchg
mov
or
aaa
lods
mov
rclb
in
or
mov
sub
movsb
mov
xor
mov
clc
mov
in
pop
ret
insb
rol
movsl
int
sti
cmc
push
lock
xchg
daa
mov
pop
je
loop
int3
xlat
stc
cmc
fdivrl
pop
outsb
addl
cmp
lret
push
lret
add
js
cmp
lock
xor
pop
ljmp
and
pop
nop
adc
movsb
fidivl
loop
pop
daa
jle
imul
push
ljmp
add
in
lret
mov
dec
cwtl
jo
cmp
outsb
pusha
xchg
mov
addl
enter
cmp
in
mov
sbb
enter
lret
out
mov
push
push
lcall
inc
icebp
push
cmp
dec
test
dec
mov
sub
outsb
mov
loop
out
cmp
fwait
jp
mov
adc
sahf
adc
sbb
mov
rcll
cmp
add
popf
mov
mov
and
lret
sbb
je
into
jmp
int
dec
xor
test
mov
adc
pop
lock
mov
cmp
sub
sub
pop
xchg
movsb
addr16
push
fcoms
dec
hlt
xchg
push
pop
sarb
mov
les
sarb
ret
orb
jnp
xchg
and
hlt
jnp
adc
xchg
jle
sbb
sbb
aas
xor
push
cmc
and
outsb
adc
adc
push
repnz
fsubrs
mov
jno
pop
sbb
mov
pusha
cmp
xor
repnz
cmpsl
imull
flds
push
jne
fisttpll
pop
ja
push
sti
je
ss
ret
pusha
les
jmp
pushf
lock
imull
mov
xchg
test
je
daa
fiadds
mov
aam
dec
cmp
je
mov
movsb
pop
sub
push
test
leave
cmp
lret
iret
mov
shll
dec
xchg
cltd
inc
push
cmp
jbe
and
push
jne
sbb
outsl
xchg
dec
add
cmp
addr16
cmp
aas
xchg
dec
or
xor
mov
mov
pop
push
xor
cmp
jge
mov
bswap
rcr
adc
daa
inc
not
loop
sarb
in
leave
push
sub
jge
jae
mov
outsb
sbb
sub
ja
push
mov
jmp
jge
pop
or
mov
xor
sub
mov
mov
dec
psrlq
repnz
push
mov
jg
imul
jg
out
imul
sub
pop
popf
xchg
cmp
rorl
aam
inc
sbb
cmp
add
mov
cmp
cmpsl
hlt
push
pusha
outsb
dec
lds
les
fmull
adc
ret
jbe
push
and
cmpsl
mov
mov
std
je
mov
out
push
lds
add
addr16
push
int
add
inc
push
pop
jmp
xor
cli
push
fsubs
pop
inc
push
and
les
ret
fiaddl
flds
mov
inc
jle
jnp
pop
push
fs
jno
in
mov
test
mov
in
pop
nop
mov
negb
xchg
dec
pop
subb
cmp
xchg
jl
loope
xorb
ret
test
mov
xor
icebp
add
movsl
dec
push
adc
setp
inc
in
cmp
aad
jmp
adc
hlt
jb
mov
xor
popf
inc
add
sub
xchg
and
loop
mov
lods
sti
lcall
aas
imulb
mov
push
pop
loope
popa
xor
in
int
sbb
xchg
push
dec
in
sbb
inc
pushf
or
ljmp
xor
jmp
lock
jo
ljmp
cmp
inc
inc
cmp
movsl
dec
sbb
jl
out
mov
btc
mov
movsb
jge
adcb
pop
pop
mov
and
jno
push
stos
in
xor
jmp
jbe
call
cmp
jae
add
out
outsl
jl
loopne
out
fwait
cmc
jne
insl
or
pop
insb
sbb
lcall
inc
dec
aas
rcr
push
mov
pop
dec
pop
scas
cmp
add
sub
mov
pop
aad
jmp
pop
sahf
aas
inc
inc
jns
or
pop
push
mov
or
push
add
loop
add
sbb
mov
popf
xchg
std
popf
inc
loop
xor
test
xchg
mov
xor
int3
dec
fdivs
or
mov
push
pop
push
call
lea
rolb
adcb
cmpl
out
and
and
insl
push
in
out
mov
andl
dec
call
lahf
movsb
add
pop
pop
xlat
cmpsl
fbstp
mov
js
pop
or
out
cli
les
jg
aaa
js
xor
and
inc
in
sbb
rcrb
aas
jb
fistps
xchg
pop
mov
insb
inc
les
jecxz
xchg
fnstsw
call
pusha
lea
movsl
popa
ret
push
test
mov
and
pushf
mov
cmc
fcomps
shrb
xchg
xchg
pop
rorl
push
adc
icebp
cwtl
cltd
stos
sti
insl
push
ljmp
mov
ds
jnp
cmp
std
pusha
adc
sbb
neg
repnz
stos
add
lods
loop
xchg
or
es
or
inc
xor
cs
int3
pop
rcll
mov
mov
popf
xor
dec
loop
shll
ds
and
adc
mov
push
jecxz
cmp
cmpsl
hlt
aaa
in
fidivl
cmp
pushf
xor
or
dec
mov
sub
cmpsb
ficoms
ret
test
cmpsb
test
mov
test
lods
pop
xchg
pop
xor
hlt
sbb
ficompl
pusha
push
adc
lods
mov
push
jle
inc
mov
push
pop
stos
sub
mov
stos
xor
xchg
push
out
mov
jne
nop
ret
arpl
push
jo
lahf
push
cli
jo
pop
idivb
add
out
movsb
lds
or
mov
inc
or
xchg
mov
das
cmc
stos
and
jg
pop
lret
orb
fidivs
jbe
lret
iret
int3
cmpsl
data16
in
push
cmp
iret
push
fadds
dec
les
sarl
std
mov
xchg
je
cwtl
fwait
dec
stc
xchg
inc
jecxz
push
or
sbb
rclb
push
popf
jmp
cmp
enter
negl
ss
push
shr
call
adc
dec
xlat
dec
mov
imul
mov
push
dec
imul
pusha
inc
in
in
lods
push
adc
mov
mov
orl
mov
lods
add
shll
out
int
outsb
ret
aam
or
dec
add
les
lret
roll
scas
data16
mov
push
cs
ud1
and
test
sbb
mov
hlt
sbb
cltd
or
mov
hlt
mov
push
cmp
jecxz
add
cmp
call
aas
aam
sbb
shlb
mov
xchg
add
mov
std
addr16
mov
repz
imul
xchg
mov
sbb
cmp
popf
inc
xor
fdivrs
cmp
scas
add
dec
pop
pop
std
sbbl
rcrl
lret
lret
push
push
mov
and
jnp
and
inc
jae
pop
xchg
push
ljmp
pop
lcall
mov
sub
test
cmp
xor
xchg
adc
andb
cmpsl
xor
pop
pop
or
fnstcw
add
xor
mov
jno
int3
mov
xchg
out
inc
sub
and
neg
fdivl
xchg
imul
inc
or
add
in
or
mov
and
pop
lods
test
inc
testl
loope
ljmp
dec
inc
xor
pushf
bound
clc
testl
xor
cmp
lods
nop
test
ss
mov
lock
add
add
xor
dec
mov
lcall
cmpsb
xor
les
dec
cs
in
mov
push
mov
jge
jne
jno
or
push
insb
ficompl
leave
or
and
xchg
loop
xchg
mov
pop
mov
dec
nop
add
fldt
and
mov
stos
and
sub
rorl
dec
push
lret
sub
hlt
xchg
inc
push
mov
aaa
add
mov
call
or
sar
hlt
cmp
mov
push
scas
xchg
or
mov
sub
daa
xor
mov
pop
xor
test
jle
cli
mov
jne
rclb
xchg
pop
push
hlt
fs
mov
jnp
jo
inc
adc
sub
sarb
adc
mov
aad
test
addb
dec
push
imul
mov
sahf
add
xchg
mov
lods
jnp
add
icebp
push
xchg
clc
lret
inc
shll
in
xchg
ret
inc
shll
ret
sahf
inc
les
idiv
mov
repnz
sarl
adc
out
pop
add
popa
or
mov
in
rcrb
push
or
add
scas
and
cmp
int
mov
pop
cmp
ja
hlt
leave
add
daa
add
sub
icebp
add
xchg
push
jnp
imul
dec
rcrl
cwtl
in
pop
jnp
push
nop
jmp
shl
outsb
stos
out
xchg
popf
loopne
gs
cmpsl
pop
xor
xchg
pusha
inc
ss
in
add
xchg
and
imul
js
mov
push
mov
enter
clc
adc
xchg
add
or
idivl
je
pop
call
jbe
repz
ja
cmpsl
sbb
or
inc
or
push
dec
xchg
lods
add
lods
mov
sbb
push
sub
mov
dec
fisubs
je
pop
loopne
fsts
xchg
sahf
rclb
sub
push
xor
or
and
push
sub
nop
out
pop
fisubrs
mov
lcall
or
jmp
clc
mov
xchg
mov
pop
je
dec
push
pop
stos
mov
in
loope
push
or
rcl
lock
lret
out
push
test
push
in
lcall
mov
sub
adc
jecxz
rcrb
cmp
sub
mov
sub
out
mov
adc
pushf
fdivs
mov
cli
xrelease
add
inc
stc
add
lds
rcll
hlt
mov
mov
out
cwtl
push
imul
nop
lock
xchg
popa
mov
pop
sub
mov
cmpsb
ja
icebp
xor
imul
push
and
dec
fwait
and
popf
loopne
adc
in
mull
push
icebp
loopne
jl
sti
popa
sahf
pop
sbb
adc
adc
mov
int3
lds
psrld
jnp
mov
and
pop
ljmp
xor
push
mov
imul
push
inc
cmp
push
jns
lock
cmp
xchg
xchg
out
jp
or
xchg
loop
add
mov
xchg
cmc
dec
enter
or
clc
mov
ds
mov
mov
cmpl
je
ja
sub
aas
in
and
rorb
shlb
dec
lahf
ficoms
inc
mov
sbb
mov
loope
icebp
lcall
and
push
or
leave
xchg
loop
mov
inc
je
shlb
fcomi
stos
es
movsb
bound
lret
sbb
pop
adc
dec
inc
stc
lock
test
data16
jae
mov
xor
cwtl
jnp
repnz
add
pop
stos
sbb
andb
int3
lods
pop
cmp
sbb
cmp
shlb
movsb
mov
pop
cmp
and
int3
and
adc
push
add
sti
mov
jnp
test
jne
jle
outsl
jae
lock
push
lods
sub
scas
sar
and
or
add
ljmp
mov
movsb
mov
xor
push
mov
ss
cwtl
sub
cmpsb
fldcw
loopne
sub
shl
add
cmp
fildll
or
idivl
pop
out
fisubs
jmp
sbb
xor
sbb
mov
in
jmp
mov
mov
stc
stc
add
ret
in
inc
mov
fldenv
test
aam
cwtl
daa
push
lahf
xchg
mov
pop
popa
rcr
inc
jne
jo
sahf
lret
stc
cmp
iret
leave
jb
sub
cmp
addr16
dec
lcall
cmp
fwait
jne
mov
pushf
xor
aad
mov
cmp
and
daa
scas
ficoms
push
daa
dec
jbe
fsubrp
xchg
jne
push
ret
aam
or
push
inc
loop
add
jle
adc
and
insb
stc
jne
test
push
mov
rol
xlat
cmp
xchg
lcall
push
mov
scas
xchg
cmpsb
fiaddl
adc
cmpsb
add
mov
sub
adc
and
jb
adc
dec
push
sahf
sarb
popf
xchg
jmp
rolb
mov
adc
xchg
mov
stc
sub
notb
mov
sub
push
mov
ds
adc
sub
sbbl
movsl
rcr
jb
fxtract
adc
xor
addr16
inc
mov
xor
push
jp
jns
or
imul
cli
xorb
clc
xor
in
sub
push
add
loop
inc
mov
xor
std
cmp
adc
ss
dec
jge
js
fbld
pushw
out
imul
test
cld
bound
repz
cmp
lea
jb
lea
ret
fs
pop
or
add
cmpsl
xchg
xchg
loope
stos
cmp
mov
dec
inc
pop
daa
dec
pop
pop
es
sahf
xchg
fucompp
lds
pop
push
sti
cmp
mov
sbb
push
sahf
test
insb
push
push
nop
mov
adc
bound
push
imul
je
add
mov
cmp
sub
leave
xchg
push
mov
shll
out
shll
fstpl
imul
rcrl
mov
lds
dec
jbe
push
add
loopne
adc
loop
sti
loop
ja
mov
or
cwtl
xor
ds
or
test
xchg
or
inc
mov
jmp
xor
jge
jnp
xor
je
fstps
dec
ror
dec
scas
in
jecxz
lock
or
jb
dec
xor
jb
sahf
cmp
in
pop
addr16
out
adc
ficomps
out
pop
subb
add
mov
test
test
dec
stos
xor
xor
outsb
adc
lcall
push
shrl
cli
flds
out
mov
pusha
test
mov
in
arpl
inc
adc
fsincos
mov
imul
xchg
xor
sub
mov
push
jae
add
jge
sbb
jns
pop
scas
inc
cwtl
add
outsb
int
je
jae
xchg
push
sahf
or
jbe
push
push
popf
ret
jno
iret
push
cmp
xchg
mov
std
or
std
arpl
cmpsl
test
inc
enter
add
cld
xor
jno
cmc
cmp
outsb
mov
addr16
shrl
mov
dec
lds
xor
stos
jg
sub
imul
loop
adc
push
mov
push
sbb
push
sbb
pop
inc
or
les
std
test
cmp
ljmp
stos
inc
les
mov
adc
jg
pop
repnz
shll
push
std
pop
into
jns
inc
cli
mov
stc
inc
sub
scas
testb
lret
push
pop
arpl
fucom
pop
push
cwtl
fmul
sbb
ret
or
add
cmp
jecxz
bound
fwait
mov
nop
fisttpl
adc
adc
push
pushf
xchg
sbb
inc
gs
loop
ljmp
jo
and
je
pop
pusha
jge
data16
rcrl
jp
lahf
enter
xchg
iret
rorl
jp
aam
add
mov
push
daa
popa
test
lcall
movsl
mov
pop
xor
shlb
lret
mov
rolb
mov
xchg
mov
lahf
fldenv
shl
fs
nop
dec
sbb
inc
or
les
std
test
cmp
ljmp
stos
dec
addr16
sbb
adc
push
or
add
adcb
into
and
xor
mov
mov
jo
mov
cmp
loop
pop
pushw
rcrb
adcb
adc
sti
add
sbb
mov
push
outsl
popa
test
sbb
adc
xchg
fidivrs
push
cli
mov
inc
add
cmp
dec
dec
xor
lds
jle
stos
repnz
sub
fisubs
cmpsl
fchs
and
lods
sbb
dec
xchg
mov
mov
or
jg
shr
mov
sub
mov
cmc
out
call
call
mov
jns
ljmp
jnp
adc
imul
cltd
or
ficomps
mov
sub
enter
push
int
mov
dec
mov
pop
or
rcl
jp
aad
addb
data16
insb
add
mov
jge
loope
cs
roll
push
ljmp
xchg
mov
push
mov
cwtl
fildl
fcom
pop
cltd
adc
mov
sub
bound
pop
jmp
dec
xor
and
nop
aad
jle
roll
adc
stos
imul
push
jmp
inc
call
or
mov
mov
adc
jp
popf
mov
daa
jg
fidivrl
sahf
adcb
shrb
lods
xor
sub
dec
out
jbe
jmp
jp
sub
andl
jnp
push
ret
inc
clc
pop
sbb
jg
mov
popf
jne
movsl
jge
out
mull
sbb
dec
loopne
cwtl
addr16
dec
mov
mov
sub
clc
scas
js
xor
mov
pop
sbb
mov
shll
xlat
mov
inc
aaa
movsl
shll
xchg
dec
repnz
cmpsb
stc
arpl
jae
movsl
push
lret
sbbl
push
pop
xchg
popf
mov
cmp
and
cmp
stos
fabs
scas
jmp
mov
sub
dec
sti
dec
push
and
cmpsl
test
or
aad
adc
lea
ss
jp
and
add
mov
inc
pop
and
pushf
push
ret
sbb
xchg
or
xor
in
xor
jo
and
daa
stos
mov
xor
sbb
mov
out
stc
lret
mov
pop
stc
pop
adcl
or
sbb
add
mov
sbb
stos
mov
mov
add
icebp
and
nop
xor
test
ds
adc
shlb
mov
xor
push
push
mov
ss
and
mov
dec
shlb
std
adc
dec
sti
cld
inc
dec
push
insl
cmp
pop
icebp
insb
lahf
cmp
orb
es
mov
push
movsb
xchg
sbbl
mov
test
int
adc
cmpsl
push
std
insl
and
xchg
ffree
adc
in
dec
jl
aad
lock
mov
and
or
loop
add
dec
scas
xchg
sbb
sbb
sub
xor
scas
movsl
mov
jbe
pop
sub
and
aad
lods
int3
cmp
inc
xor
push
sbb
ficomps
lret
in
pop
adc
ret
scas
dec
sbb
pop
or
je
les
data16
fwait
dec
sbbb
fcmovnu
in
inc
mov
adc
mov
add
adc
idiv
cmp
sub
test
movsl
jns
enter
into
xlat
jne
push
lret
outsl
pop
or
pop
ljmp
dec
jae
ret
in
aas
jae
insb
add
addr16
pop
and
sbb
sbb
or
xchg
or
fsts
mov
sbbl
icebp
mov
mov
sub
test
cmpsl
jg
lds
fisubrs
rcl
xlat
sti
ror
leave
std
xlat
in
cmp
mov
sbb
call
pop
pop
pop
in
sub
push
cmp
or
cmp
cwtl
cmp
cld
xor
hlt
adc
pop
icebp
sub
xchg
dec
in
fsts
sahf
aad
lea
ds
jge
mov
jae
pop
insb
jl
and
mov
fmull
and
or
mov
dec
pop
movsb
sub
cmp
icebp
divl
and
mov
push
jmp
imul
xchg
xchg
leave
out
aad
inc
loope
cltd
jo
rcrl
add
mov
cmp
sub
mov
and
lods
cltd
shl
mov
fmull
mov
push
cmp
push
and
jnp
pop
pop
jge
pop
push
ja
in
imul
or
bswap
std
adc
jns
cmp
out
add
iret
adc
lods
popa
outsl
add
pusha
jecxz
nop
in
mov
pop
xchg
lret
mov
push
subl
lds
je
mov
ds
xor
std
mov
scas
insb
push
xor
mov
je
les
pusha
add
mov
ds
or
cli
aam
jp
fimuls
xchg
cmp
mov
jo
out
cmpsb
jp
in
fdivrs
push
mulb
fiadds
xchg
push
xchg
pop
dec
jmp
and
mov
inc
mov
mov
cmpsb
js
je
lods
jmp
mov
or
push
and
lahf
insl
push
or
jnp
pop
aas
jge
pop
aaa
ja
ret
mov
fisubl
lock
mov
outsb
push
or
sahf
push
jae
adc
test
rcl
das
xchg
sarl
pusha
mov
jo
insb
mov
negb
adc
loop
push
lret
int3
push
and
jnp
sarl
jge
mov
jmp
xor
subl
sub
xchg
movsb
lret
push
pop
pop
and
cli
cmp
xchg
jno
iret
jl
aaa
rorl
jl
data16
cld
repz
cmc
repz
loopne
cmp
and
xchg
bound
addr16
popf
test
push
mov
int
bound
fsubs
pop
sahf
sub
jecxz
pop
lret
imul
lret
mov
mov
pop
xlat
jle
addr16
loopne
ja
arpl
ljmp
aam
stos
into
sbb
or
mov
jo
stc
lds
loopne
cmp
xchg
sub
into
sub
lret
popa
int3
sbbl
les
jg
jl
cmc
xchg
inc
ja
out
in
loope
mov
enter
in
adc
jne
mov
mov
test
xor
outsl
outsl
pop
fildl
mov
pop
sahf
ss
mov
in
shrb
push
mov
pop
sarl
push
bound
aam
jb
into
outsb
cs
dec
ret
in
in
cli
jg
pop
ljmp
out
outsl
insl
and
shl
in
sbb
sbb
pop
mov
xchg
subl
and
loope
ss
shrl
sub
and
loop
pop
pop
hlt
mov
lret
bound
int
sub
jmp
sti
cld
outsl
aad
gs
insb
xchg
jne
mov
and
insb
int3
mov
cwtl
pop
xchg
mov
sub
cltd
cmpl
sbb
mov
sub
sub
and
insl
ret
xchg
mov
lret
lret
int3
insb
sub
mov
jns
cli
decl
pop
mul
sbb
in
adc
insb
mov
add
insl
sbb
jmp
adc
sbb
sub
mov
cmp
xor
bound
sub
shld
bswap
inc
pop
fbstp
push
dec
in
repz
dec
out
das
inc
test
clc
in
in
jp
cs
ja
lcall
outsl
aad
and
insb
in
js
jle
loop
mov
mov
jg
pop
mov
les
jp
jne
pop
out
pop
sti
and
flds
xchg
ja
push
clc
cmp
insb
jno
push
pop
popf
cltd
cmpsl
xchg
imul
lods
cwtl
push
lea
ljmp
sahf
sub
push
push
cmp
ss
lods
add
mov
jne
xchg
mov
sub
iret
jmp
bound
push
jo
test
push
add
push
sbb
sub
cmpsl
jmp
xchg
out
or
loop
jnp
mov
rcrb
xchg
maskmovq
dec
pop
pop
bound
mov
iret
mov
inc
sub
jne
movsb
and
in
cmp
inc
rcl
jp
aad
test
sbb
cld
mov
outsl
sub
imul
and
shlb
adc
fisttpll
sub
xchg
push
cmp
idivb
dec
das
bound
enter
mov
js
popf
sub
lock
adc
jb
dec
mov
jecxz
pop
shrl
js
dec
in
lock
imul
std
popl
adc
mov
test
mov
pop
fidivrs
push
rclb
ljmp
mov
jns
adc
pusha
adc
mov
movsl
sbb
jnp
dec
xchg
jno
in
cmc
dec
in
jge
popa
jae
test
or
push
repnz
or
rorl
mov
jns
divb
test
mov
or
xchg
and
loope
gs
out
sub
mov
jne
js
paddq
dec
inc
xor
pusha
sti
stc
jle
loope
sbbb
jno
lahf
insl
fbstp
sub
jnp
fwait
mov
or
sub
xor
adc
mov
in
les
cs
push
scas
test
fistps
inc
xor
mov
out
in
int
cmc
and
dec
lds
jge
fsubrl
inc
ja
mov
inc
ficomps
sub
cmp
nop
sbb
dec
cmpb
mov
and
dec
ficomps
enter
xor
stos
pop
add
xchg
lret
call
int3
xlat
inc
ret
ds
xchg
std
std
sti
xchg
in
out
jl
mov
mov
out
lods
fs
mov
push
xor
or
mov
or
mov
nop
test
jne
popf
add
add
mov
dec
fcmovnu
int3
outsl
hlt
rol
inc
mov
jae
mov
gs
je
loopne
hlt
js
mov
cs
jmp
insb
or
cmp
aas
and
xchg
mov
push
cmpsb
lea
cmp
push
add
punpckhdq
cmp
lret
sahf
lods
movsl
jge
insb
and
and
sbbb
filds
aas
push
add
clc
adc
clc
xor
fistpll
cwtl
sub
push
jl
outsl
jmp
sub
xor
cltd
mov
cwtl
addr16
add
mov
lahf
test
xchg
xor
test
lret
jmp
fcompl
nop
ficoml
mov
lahf
dec
sahf
and
add
stos
lret
dec
inc
or
jg
dec
adc
cmpsl
jno
fwait
push
sbb
lret
xor
sbb
leave
scas
fimuls
into
mov
enter
enter
dec
xchg
int3
pop
cmpsb
cmpsb
pop
add
push
lret
ret
rol
loopne
stos
push
stc
imul
lods
repz
fiaddl
push
mov
push
out
or
in
imul
popa
cmpsb
xchg
movsl
loope
adc
lods
pop
jge
mov
addb
out
mov
cmp
sub
mov
sbb
pop
and
fmul
lret
into
aam
inc
push
call
inc
imul
xchg
in
ret
in
out
cmp
or
mov
xchg
mov
xchg
fcmovnu
mov
stos
outsb
test
fs
mov
mov
lcall
pop
scas
rcl
and
cs
stc
dec
fcoms
xchg
imul
jg
stc
sti
les
sahf
clc
push
out
std
ljmp
popa
out
sub
popf
sbb
cmp
pop
add
xor
push
mov
scas
xchg
sub
push
fistl
scas
cmp
dec
cmpsb
test
ffreep
sub
stc
inc
rcl
dec
std
std
ja
rorb
mov
arpl
xchg
call
pusha
jp
sbb
mov
pop
xchg
pop
xchg
mov
dec
mov
mov
ss
xchg
sub
fsubs
insb
insl
stos
push
xchg
leave
mull
sbb
inc
imul
jecxz
dec
aaa
inc
out
mov
imul
mov
icebp
mov
loop
stos
fidivl
out
ja
lods
xchg
xchg
js
push
mov
iret
roll
icebp
push
or
cmp
inc
repz
scas
mov
and
dec
jmp
loopne
out
inc
aam
fwait
leave
cli
into
fstl
mov
jo
jno
mov
mov
inc
adc
jp
xchg
cltd
sub
push
xchg
test
pop
dec
pop
mov
mov
roll
mov
mov
clc
and
mov
cmp
fisubrl
add
pusha
push
out
pop
js
rol
in
sbb
into
jb
popf
push
out
hlt
xchg
sbb
xorl
gs
sbb
loope
out
mov
push
sbbb
push
mov
lods
pop
or
or
sub
jge
add
in
cmpsl
sub
clc
mov
sub
sbb
mov
movsl
pop
xchg
outsl
push
pop
inc
inc
aam
lret
dec
xchg
fcomps
int3
push
mov
sub
mov
mov
xchg
mov
xor
mov
sub
fldz
stos
push
mov
test
out
mov
testb
adc
imul
mov
inc
lcall
mov
popf
add
mov
add
pop
fwait
enter
sbb
cmp
add
test
lcall
mov
mov
fisubs
inc
push
into
int3
imul
ret
sbb
in
repnz
mov
iret
imul
ljmp
outsb
xor
mov
addr16
adc
sbb
or
sub
pop
lock
adc
adc
sub
in
sbb
stos
add
xchg
xchg
movsb
fwait
ds
shlb
jb
sbb
push
inc
or
mov
dec
fs
mov
stos
jmp
pusha
lahf
inc
mov
lahf
popa
sahf
adc
push
xchg
mov
push
rep
xchg
rcll
es
jae
adc
dec
or
fcoms
sbb
pop
push
mov
cmp
sbb
ret
test
mov
inc
out
cmove
fcomi
adc
mov
cmp
and
orl
pop
pop
cmp
push
xor
pop
adc
out
and
adc
mov
add
out
xchg
inc
cmpl
sub
sub
in
movsl
in
push
fbstp
push
jmp
dec
out
dec
push
fwait
xchg
sub
mov
mul
mov
sbb
push
xchg
fldenv
lret
dec
call
jecxz
aad
xor
mov
test
inc
mov
adc
dec
in
adc
cwtl
fistl
aam
mov
add
xchg
and
cmp
sub
mov
cwtl
jl
mov
and
cld
repz
mov
js
loop
sub
and
cwtl
es
es
iret
cmc
sbb
in
jb
cmpsb
push
mov
and
add
dec
sub
pop
pop
mov
nop
sbb
adc
fisttpll
cmp
outsl
icebp
fnsave
cmp
pushf
sub
xor
idivl
mov
in
jp
cmpsl
ficomps
mov
jp
pop
add
test
fisttpl
arpl
data16
adc
xor
add
ss
xchg
jno
adc
mov
adc
sbb
cmp
cmp
andb
pusha
in
mov
xor
bound
jl
fsts
jecxz
pusha
mov
leave
push
inc
jle
inc
or
rol
imul
mulb
xor
or
test
jl
sbb
cli
cwtl
xorb
and
ljmp
popf
xor
mov
fdivs
mov
cmc
leave
push
adc
cltd
into
push
outsb
negb
dec
jne
mov
inc
jmp
sbb
loopne
xchg
sbbb
pop
cmp
mov
or
sub
cmp
push
sub
dec
outsb
int
daa
je
pop
lods
jmp
fidivrs
inc
push
int
out
idiv
gs
push
ret
adc
fldt
jg
cltd
pusha
jb
in
xchg
jno
sbbb
popf
sbb
fs
xchg
popf
rcrb
orl
cmpsb
xchg
push
mov
inc
mov
test
push
mov
and
xchg
push
inc
aas
or
clc
loopne
jns
gs
hlt
jb
xchg
in
adc
xchg
imul
xor
add
les
iret
stos
mov
dec
mov
or
inc
inc
cmpsl
or
lahf
push
and
add
dec
push
xor
aas
push
cld
mov
addr16
sbb
jae
in
cs
mov
push
mov
cmp
jp
popf
sahf
add
xchg
dec
push
sbb
bound
mov
movsl
and
pop
mov
fisubrs
aam
cli
pop
nop
fisttps
fcompl
mov
lock
clc
lds
cwtl
js
sub
nop
mov
cs
pusha
ja
xchg
xchg
int3
or
test
add
or
das
cmp
xor
inc
std
test
cwtl
daa
scas
push
out
and
xor
mov
ljmp
lret
movsb
dec
insl
jns
imul
cmp
in
mov
mov
sbbl
out
adc
in
sub
pop
add
xchg
mov
cmp
and
inc
fcmovnu
lret
sahf
pop
and
in
int
adcl
iret
dec
aaa
shl
inc
dec
ret
je
or
hlt
cld
mov
jmp
insl
in
pop
xchg
fimull
mov
xlat
pop
xchg
addr16
roll
ret
xor
sub
add
push
mov
jge
ds
cs
sub
pop
jmp
push
inc
aad
aaa
ret
fstl
js
mov
ljmp
aaa
in
xchg
in
mov
sbb
aam
sub
adc
and
cmp
stc
sbb
das
insl
mov
cld
sub
pop
sti
xor
pusha
daa
jne
fistl
imul
clc
insl
dec
adc
add
and
std
sub
jle
loop
sbb
fsubp
push
nop
lcall
scas
add
xchg
xchg
stos
incb
mov
rol
out
push
mov
sbb
push
push
hlt
ja
neg
jo
xlat
ljmp
dec
sbb
int3
std
mov
lret
jmp
orb
jo
jmp
mov
pop
xorl
adc
xchg
enter
fstpt
cmp
xor
cmp
in
je
in
or
jp
daa
nop
pop
fistl
push
cmp
ret
into
add
scas
jns
sarl
in
icebp
sahf
outsb
sbb
fsubrl
gs
or
adcb
fisttps
adc
adc
mov
repz
inc
mov
es
movsb
sbb
or
jecxz
inc
das
aad
or
aaa
pop
lock
ret
jns
idivl
stc
cmp
loope
and
lcall
pop
adc
sahf
xor
cmp
mov
xor
adc
jmp
dec
and
aaa
pop
push
stos
inc
mov
mov
jecxz
outsb
mov
jge
push
pop
arpl
adc
mov
in
cltd
jno
fs
aaa
outsb
sub
mov
adcb
adc
pop
pop
movsl
push
adc
xchg
sub
mov
pop
jp
xor
jge
rcrl
fstp
ss
into
push
sbb
xor
xor
fs
cmpsl
push
jno
mov
imul
repz
mov
aas
or
out
mov
adcl
jp
movsb
jge
cmp
int3
fsts
jp
sub
jl
das
stos
cli
xchg
mov
pop
or
mov
cltd
out
je
call
mov
push
cld
aas
aad
movsl
jbe
cmpsb
fcoms
mov
sbb
sbb
xchg
or
mov
adcb
mov
scas
jns,pt
mov
std
inc
sub
mov
xor
pop
pop
jecxz
gs
and
dec
jb
adc
push
pusha
xlat
sahf
sbb
popf
dec
cmp
jae
icebp
ds
cmp
fisubrs
jmp
mov
out
and
mov
mov
movsb
adc
mov
lea
mov
sub
popa
mov
mov
lea
shr
and
inc
aad
adcb
lahf
lret
test
xchg
jno
pop
and
or
fwait
lret
sub
adc
icebp
add
loop
insl
cmp
lea
mov
mov
lcall
mov
mov
lcall
sub
es
jno
ret
into
and
ja
ret
adc
inc
jmp
push
cmp
hlt
dec
cmp
xchg
scas
push
lahf
ljmp
adc
cmpsl
scas
adc
mov
das
aam
sti
aam
dec
lds
and
pop
frstor
mov
pop
xor
movsb
mov
dec
sarb
push
loop
test
hlt
sbb
push
sub
fistpl
xchg
xchg
adc
mov
pop
sub
ds
cmc
aas
and
dec
and
outsb
ret
jle
out
jns
sahf
fists
out
out
icebp
dec
dec
loope
les
sbb
pushf
imul
sti
je
ljmp
xor
imul
and
lcall
adc
out
lret
push
sub
pop
jb
inc
movsl
shll
inc
sti
mov
aad
jl
lcall
outsl
in
add
push
into
mov
sbbb
repz
inc
xchg
inc
inc
insl
sub
test
sti
mov
rcrl
mov
pop
hlt
rorb
lods
lock
imul
push
ret
aad
jo
iret
in
inc
pusha
bnd
xor
aas
push
jnp
cmp
ficomps
rorl
xor
add
push
push
mov
fsincos
mov
and
push
dec
fstpt
int3
int
pop
jg
dec
pop
pop
int
xlat
ret
je
hlt
inc
inc
jb
jp
pop
jecxz
cltd
dec
loope
lea
or
sti
add
nop
adc
sbb
jo
sbb
bound
fnstsw
fidivl
pop
adc
xchg
into
sub
rclb
and
mov
jecxz
fs
sbb
in
lcall
out
out
pusha
icebp
popa
or
adc
mov
outsl
imul
adc
xchg
or
mov
add
sbb
mov
pop
sub
push
push
es
enter
push
sbb
xadd
jl
movsb
scas
mov
jmp
mov
imul
lods
adc
xor
pop
gs
xchg
sbb
rcrb
fcmovne
and
push
scas
mov
stos
add
sbb
shlb
lds
fcmovnu
dec
pop
insl
ret
or
jns
pusha
lods
jl
lcall
adc
jae
cmp
ret
dec
aad
popf
nop
sbbb
push
sahf
mov
xchg
lods
scas
and
stos
daa
xor
mov
jmp
pop
xor
out
or
dec
shll
pop
dec
shl
push
imul
in
push
jb
clc
stos
loop
add
lods
aam
sbb
out
insb
inc
fwait
loopne
js
gs
xor
pusha
xor
mov
xchg
xchg
mov
or
xchg
in
or
jle
sar
movsl
out
aaa
mov
insb
shlb
flds
clc
pop
lods
aad
inc
sbbl
inc
and
sbb
inc
mulb
clc
lds
add
mov
add
fisubrl
mov
out
adc
movsl
lahf
xchg
add
test
cmp
ja
cwtl
mov
mov
xchg
icebp
scas
out
call
cmp
lds
mov
sbb
xor
jne
je
lds
gs
out
call
in
cmp
mov
xchg
sti
mov
or
sbb
movsb
pushf
ss
mov
push
test
jns
sub
jae
adc
out
and
addl
cli
pop
xor
inc
nop
jg
std
inc
push
sar
mov
clc
stos
stc
add
outsl
inc
lods
loop
lea
ja
aam
jecxz
add
sbb
mov
or
add
mov
inc
cmp
mov
push
das
movsb
mov
into
dec
rcr
lea
mov
inc
in
movsl
in
inc
movb
mov
sbb
ds
ljmp
sti
ljmp
or
hlt
cltd
loope
and
push
out
mov
jb
add
mov
cmp
xor
cmp
cwtl
xor
pop
push
xchg
and
push
aam
mov
add
sbb
sbb
enter
dec
test
xchg
imul
insl
out
jg
iret
push
psadbw
dec
cmp
add
adc
fucomip
dec
pop
divb
cmp
mov
fwait
lods
push
movsb
dec
std
cmpsl
pop
jno
fadd
iret
xlat
dec
mov
lret
stc
lcall
jnp
sti
test
adc
and
or
sbb
push
mov
imul
mov
xor
xor
mov
mov
mov
push
repz
lods
test
dec
shl
mov
mov
pop
scas
js
inc
inc
mov
dec
inc
push
xor
xchg
pusha
sahf
pop
push
sahf
jp
jp
lods
pop
push
fadds
lock
out
push
cmp
jmp
in
cmp
inc
hlt
push
cmp
in
dec
subb
ret
mov
mov
ror
xlat
hlt
bndldx
inc
xchg
cmp
sbb
and
mov
xchg
stos
rolb
nop
pop
lret
pop
pop
test
mov
push
fsts
das
pop
sub
and
inc
xchg
es
jnp
ror
and
std
lret
frstor
jo
dec
imull
clc
test
mov
mov
loope
outsl
fwait
call
sbb
popf
add
cltd
xor
test
xchg
sarb
idivl
dec
es
divb
cmp
xor
sbbb
fcmovu
fadds
mov
pop
xor
mov
ret
js
mov
push
cwtl
pop
ret
hlt
nop
clc
std
js
std
loop
lods
arpl
loope
in
mov
or
mov
test
into
add
jle
stos
jl
ss
mov
test
cmp
ficoml
arpl
jle
fistpll
mov
ja
mov
je
mov
dec
imul
pop
jno
add
outsl
jno
testb
and
into
mov
repz
out
push
xor
mov
mov
js
jge
add
and
movsl
and
mov
lret
insb
add
push
mov
fwait
lret
popa
addl
inc
push
shrb
adc
xchg
pop
mov
ljmp
ficomps
adc
call
add
sbb
cmp
cli
and
mov
outsl
and
lret
sub
mov
popa
jge
sbb
push
ror
dec
int3
mov
into
inc
xchg
shlb
dec
pop
cmc
and
xlat
in
pop
sbb
adc
out
lcall
sub
add
cmpsl
je
mov
inc
cmp
pushf
xor
fistpll
push
frstor
and
mov
inc
into
inc
jg
dec
jnp
and
imul
add
push
cltd
cli
cmp
mov
sub
dec
das
or
cmpsb
push
mov
andl
push
lods
xchg
jp
xor
cs
push
fstpt
push
mov
mov
and
sti
je
aaa
in
ljmp
dec
rcrl
pop
arpl
push
mov
and
xchg
sub
xchg
xchg
int
or
and
mov
jae
sub
into
jnp
lods
aam
insb
pop
or
pop
push
shll
cli
rcll
mov
jne
or
jb
test
cmp
push
nop
andb
push
insl
daa
and
xchg
repz
adc
fnstsw
clc
mov
pushl
push
pop
pop
adc
les
jnp
icebp
int
pop
jmp
adc
pusha
clc
fidivl
fwait
ja
jl
call
and
lea
mov
cmc
add
pop
mov
lret
sbb
xchg
and
mov
jl
jnp
sub
lods
jmp
mov
mov
dec
pop
and
js
fadds
loope
ljmp
pop
and
mov
ds
outsb
std
sti
push
add
aaa
cmp
mov
inc
pushf
out
or
xor
add
pop
lods
and
rcl
mov
into
sub
jle
push
test
les
inc
ss
movsl
imul
jno
outsl
inc
adc
out
mov
mov
xchg
sbb
call
movntps
cs
daa
mov
popa
xchg
add
xor
add
jle
addl
add
in
mov
cmpsl
dec
mov
lds
pop
pop
inc
in
dec
shr
fcompl
xchg
mov
aam
insb
inc
js
adc
dec
sahf
clc
inc
xchg
repz
popf
jns
hlt
dec
jecxz
mov
mov
inc
hlt
xchg
gs
nop
popa
adc
mov
test
xor
dec
mov
mov
or
and
xor
inc
in
sub
xor
dec
sub
and
rolb
fcomps
xchg
popa
int3
jp
mov
in
jae
out
jmp
repz
jo
sbb
out
fs
add
or
add
push
add
and
aas
and
test
mov
push
sbbb
jecxz
dec
inc
dec
shrb
adc
enter
mov
lcall
imul
jecxz
or
out
xchg
xor
pop
xchg
bound
mov
cmp
xor
pop
cmp
or
movsl
nop
xor
hlt
dec
dec
sub
das
mov
aad
mov
or
mov
sarl
ret
jbe
push
sti
mov
gs
negl
push
popf
arpl
mov
jo
fcoms
movsb
mov
mov
lcall
imul
fdivr
cwtl
rcrl
adc
in
jl
repz
push
push
addb
lds
jns
lahf
xchg
jae
mov
jp
imul
fs
pop
lahf
ss
mov
pop
mov
mov
cmp
aaa
mov
lea
faddp
das
pop
dec
dec
pop
leave
push
inc
dec
rol
je
push
inc
jno
dec
repnz
cld
outsb
jb
jmp
cmc
nop
jmp
addr16
test
call
loopne
pop
adc
pop
cltd
loope
test
sub
mov
test
jae
sub
and
movsb
fisubrl
enter
aad
into
jns
xlat
cli
es
jmp
jp
push
mulb
loop
mov
mov
push
push
or
xchg
pop
xchg
add
or
mov
sub
xchg
test
repnz
fadds
rcrl
pop
dec
pop
into
fwait
dec
jge
ret
les
dec
stc
inc
inc
je
inc
testb
shl
jecxz
arpl
cwtl
das
or
in
adc
add
lea
or
aas
jl
pop
xchg
cs
mov
test
push
and
inc
xchg
push
rcl
inc
sub
mov
jg
push
cli
cmp
outsb
jb
jmp
ja
inc
imul
out
jnp
mov
xchg
lcall
add
xchg
in
xchg
jecxz
mov
jge
xor
imull
and
mov
cmpsl
push
sub
mov
fsin
push
aad
push
or
mov
repnz
inc
sahf
dec
add
and
push
xchg
inc
out
xchg
or
push
mov
scas
adc
leave
mov
sub
mov
scas
scas
fadds
xchg
lock
js
mov
push
loop
lods
mov
leave
hlt
es
cltd
pusha
inc
mov
push
pop
cli
dec
jmp
jge
in
jl
addr16
sti
push
adc
cmpsb
cmp
ljmp
xchg
xchg
nop
leave
repz
xchg
pop
mov
push
imul
inc
out
int
sub
js
xor
lock
lods
iret
pushf
bnd
push
iret
push
pop
xor
in
adc
jecxz
bound
pop
inc
in
pop
test
cmpsl
scas
imul
jae
insl
movsb
xchg
adc
iret
xchg
clc
xorl
mov
and
das
fdivrl
add
or
mov
ret
and
inc
in
int
cmpsb
jbe
ret
into
sub
rcrl
in
jge
stc
inc
mov
dec
cmc
negb
cwtl
jae
pusha
insb
sub
pusha
mov
push
mov
jecxz
add
mov
into
xor
or
lret
iret
add
dec
es
pop
jns
loop
ds
mulb
jle
xor
adc
hlt
stc
pop
pop
cmp
lock
fnstcw
jmp
push
push
in
xor
xor
hlt
scas
add
lret
clc
push
jl
pop
mov
mov
mov
add
cmc
cmp
out
std
jbe
int3
sub
fimuls
push
jmp
rcll
jge
lcall
jns
jmp
add
cmc
or
gs
sbb
cltd
jge
popf
xchg
cmp
xchg
adc
push
lods
mov
jmp
scas
jae
lods
fisttpl
dec
add
out
rcl
dec
jo
pop
dec
adc
or
inc
pop
repz
sbb
sarb
sti
popf
aam
xchg
repnz
testl
pop
mov
mov
sub
js
testl
mov
mov
jg,pn
leave
enter
daa
pop
je
in
sbb
inc
lret
add
mov
jnp
pushf
int
sbb
stc
daa
cltd
ljmp
adc
sbb
test
in
mov
push
insw
pop
setg
imul
push
add
sub
fstl
mov
push
movsl
sub
push
and
test
ja
ror
imul
ljmp
test
pop
mov
int
imull
test
mov
lods
out
mov
xchg
fnstcw
mov
adc
mov
and
mov
imulb
test
xlat
cwtl
negb
sbb
movb
add
xchg
ror
fxch
jns
movsl
daa
cmc
rcr
jno
jecxz
push
pop
insb
jb
sahf
int
pop
mov
cltd
or
js
es
movsl
push
ljmp
pushf
popa
or
xchg
and
int3
and
and
inc
lds
hlt
lock
enter
icebp
sti
and
ss
into
cmp
pusha
outsb
stc
notl
lock
and
pusha
sbb
dec
sbb
jno
dec
adc
xchg
lahf
lea
or
and
push
into
add
pusha
jp
xor
and
lods
xor
scas
cmp
fcmovnbe
xlat
sub
dec
jne
loop
fwait
enter
loope
jl
rcll
jnp
pushf
test
jb
roll
loopne
dec
dec
push
fcompl
mov
dec
hlt
int3
sbb
mov
movsl
inc
movsb
int
test
sub
popf
test
movsb
rol
cmpsl
jecxz
jle
daa
leave
cld
pop
cltd
or
dec
or
int
cli
xchg
loope
mov
mov
outsb
bound
jnp
jge
bound
pop
sub
aam
loope
aam
wbinvd
inc
push
cmovo
test
inc
cmp
movsl
repz
repnz
and
lea
inc
in
ja
dec
int
dec
mov
jns,pt
pushl
fistps
cmc
repnz
outsb
movsl
bound
imul
push
aas
mov
inc
xchg
mov
leave
cltd
mov
jbe
or
or
fmuls
jns
xor
stos
out
mov
push
scas
in
cli
xor
lret
xlat
fnstenv
stos
sub
mov
sub
std
test
sbb
insl
enter
mov
test
inc
fstps
out
and
ret
cmpsl
add
mov
mov
mov
push
and
ficompl
pop
xor
ret
in
push
mov
lcall
into
adc
or
repz
add
mov
sbb
dec
in
ffree
inc
fiadds
or
pop
mov
mov
and
ds
lret
adc
pop
divb
jg
mov
and
mov
dec
pop
push
jl
mov
fwait
push
iret
lahf
inc
push
mov
or
mull
andl
pop
fstpl
mov
push
imul
leave
add
movb
fs
aad
jmp
inc
sub
sub
pop
and
imul
insl
out
jl
adc
add
mov
cmp
cmp
das
xchg
inc
inc
std
push
stos
loopne
xor
in
xor
test
cmpsb
xchg
movsb
push
add
or
pop
jecxz
mov
fwait
out
xor
sub
cltd
xor
fldt
adc
inc
fstl
aam
dec
pop
mov
icebp
and
hlt
mov
imul
leave
adc
push
xchg
std
push
xchg
lods
cs
shll
sub
mov
jae
mov
lret
adc
scas
mov
in
push
and
adc
dec
adc
jo
pop
push
lcall
sub
ljmp
ljmp
pop
in
cmpsl
cmp
cmpsl
or
jmp
adc
shl
mov
sahf
int3
in
nop
inc
sbb
push
leave
aam
mov
jae
dec
jg
cmc
push
or
les
dec
push
dec
stos
cmp
xchg
add
and
test
in
add
rcrl
mov
enter
sarl
mov
mov
stos
and
xor
shl
push
stos
pop
pop
push
in
pop
push
notb
mov
xchg
dec
dec
fldl
clc
jbe
lock
repnz
adc
test
pop
jbe
inc
ljmp
lret
movsb
push
xchg
pop
lods
pop
rorb
push
lret
add
cmp
fldl
xchg
cmpsb
stc
mov
arpl
inc
cli
into
jmp
sbb
pop
mov
movl
nop
les
dec
fwait
and
push
repnz
jne
sbb
in
push
add
adc
cmp
add
mov
scas
insl
scas
clc
shll
cmp
mov
jp
push
jne
and
int3
dec
arpl
dec
inc
dec
dec
mov
sub
push
sti
xorb
xchg
inc
and
loopne
out
push
lods
out
and
mov
or
sbb
sub
inc
push
add
cmp
repnz
mov
rcll
sub
in
out
pushf
jbe
sarl
in
jno
aam
rcrl
dec
enter
jbe
movl
add
loope
lods
cmp
lods
mov
cmpsb
jno
in
or
xchg
cmp
mov
or
dec
mov
cmp
pushf
movsb
mov
lret
cli
adcl
mov
std
push
iret
jl
gs
lock
in
mov
in
rorb
push
iret
fwait
add
push
adc
add
in
ljmp
add
imulb
dec
sub
inc
scas
in
sub
adcb
testb
mov
das
jb
into
jo
inc
xchg
mov
in
dec
cld
ljmp
sbb
movsl
jo
gs
sti
cltd
or
orl
je
in
adc
xor
pop
mov
pop
popa
sub
mov
adc
cmpsb
dec
cmp
fcmovb
dec
sub
stos
jp
enter
jmp
cmpsl
testl
pop
inc
repz
shll
mov
jmp
lock
pop
xor
sahf
push
push
pop
std
rcll
jge
xchg
cmp
inc
xor
xchg
xor
jne
out
mov
mov
add
sbb
sbb
mov
pop
or
mov
jno
mov
js
nop
arpl
and
pop
in
pop
push
loopne
out
call
popa
orb
das
mov
outsl
add
sub
mov
outsb
insb
loope
test
fwait
das
push
adc
mov
push
pop
xchg
pop
push
daa
imul
aaa
adc
inc
jl
shr
mov
push
pop
out
outsl
mov
movsl
jecxz
inc
adc
lret
pushf
fcoml
mov
mov
sbb
mul
or
mov
lahf
inc
sbb
test
or
inc
int
xor
inc
xchg
add
popa
in
lock
xchg
xor
test
out
pop
cmc
xchg
mov
ficoms
dec
jnp
into
mov
aas
pop
mov
xor
mov
lock
jmp
pushf
xlat
mov
jp
movsb
pushl
mov
sbb
push
mov
lahf
adc
cs
notb
push
std
cmpsl
cmp
mov
outsl
mov
xchg
adc
adc
cmp
inc
les
fidivs
into
or
hlt
ljmp
pop
cltd
roll
xor
ljmp
ret
js
test
scas
repnz
sti
fstl
push
divl
sub
push
popa
out
ficompl
negl
or
lods
daa
cmp
mov
cmp
push
and
aaa
test
aas
sub
and
dec
sar
mov
mov
outsl
fimuls
in
je
adc
or
hlt
jmp
out
xchg
adc
sbb
dec
repnz
cmp
jle
push
shll
loop
cmp
sbb
mov
fwait
xchg
sub
mov
cmp
sub
shlb
rorb
sub
mov
xchg
xlat
jmp
test
pop
and
bound
jg
push
outsb
add
sub
mov
out
add
test
sbb
xor
and
cmp
mov
sub
cmpsl
push
mov
sbb
shll
testl
mov
icebp
push
outsl
decl
xchg
nop
dec
in
loop
add
fs
or
xchg
nop
faddl
cmc
mov
out
xchg
and
out
mov
es
xor
int
movsl
xchg
fisubrs
dec
pop
or
jne
cld
pop
int3
cmp
xlat
cmc
xor
ljmp
in
lret
repz
adc
or
mov
xor
or
xor
or
xor
pop
ficompl
mov
ror
daa
push
enter
dec
xor
lcall
dec
jg
fidivrl
movb
lret
cs
insl
nop
repnz
stc
push
ret
pop
add
add
mov
or
cli
test
jle
dec
sarb
add
mov
lock
faddl
push
shlb
sub
dec
stc
movsl
jo
inc
js
jp
bound
cmpsl
std
jae
addr16
xchg
scas
jmp
adc
jle
popf
xchg
icebp
mov
or
push
mov
fdivrl
xor
lea
test
mov
std
test
cmp
fistpll
xchg
mov
dec
xor
int
jns
hlt
cmp
div
mov
push
fwait
mov
loop
fsubl
push
sbb
xor
xchg
cltd
mov
sub
add
mov
movsl
addb
out
stos
mov
xchg
outsb
call
call
add
mov
sbb
fwait
mov
sbb
sbb
adc
lock
dec
mov
cmpsb
lods
add
mov
jge,pt
adc
test
int3
je
and
lods
jmp
add
jg
mov
ret
ret
and
subl
sbb
icebp
inc
pause
mov
sbb
scas
adc
cwtl
mov
sub
mov
jmp
mov
mov
push
icebp
add
mov
mov
cmpsl
aad
and
push
push
leave
hlt
inc
adc
jae
iret
out
pusha
adc
inc
iret
loop
outsl
stos
mov
sarb
cmp
insb
sahf
inc
mov
bound
cs
mov
cmp
push
cmp
cmpsl
or
lret
in
mov
pop
mov
and
pop
or
scas
jg
inc
xor
pushf
inc
sti
movsb
fs
incl
xchg
or
jge
sbb
pop
les
test
push
mov
adc
lods
mov
or
push
xchg
scas
and
and
push
stc
push
xchg
sbb
inc
jge
lahf
or
add
inc
test
adc
out
mov
call
xchg
xor
addr16
mov
and
mov
and
jmp
cs
and
je
jae
fmul
mov
xor
xchg
mov
arpl
inc
enter
push
jecxz
lock
lret
lock
mov
imul
dec
in
adc
cltd
jecxz
push
in
mov
or
lret
ficomps
and
mov
movsl
and
sti
mov
push
or
ljmp
xor
outsl
and
daa
jle
lods
sbb
sbb
stc
xchg
cli
popf
aaa
data16
andb
es
and
aad
and
call
repnz
jo
imul
xor
sarb
mov
mov
push
arpl
or
out
inc
std
add
push
sbb
call
xor
jecxz
mov
and
fwait
loope
aaa
adc
pop
cmp
xor
orb
cld
sbb
or
cmp
mov
fcoms
orl
xlat
lds
mov
inc
ret
ss
jle
xchg
xor
ret
in
movsb
lcall
lahf
sbb
xor
cs
mov
das
mov
dec
mov
divl
sub
mov
ss
ja
faddp
test
inc
fstl
loop
test
jne
jmp
mov
push
push
mov
cmp
mov
icebp
rorb
jne
add
fstl
stos
xor
int3
add
daa
mov
hlt
pop
and
ret
icebp
jle
fmuls
mov
mov
daa
fs
ret
inc
inc
add
lret
clc
add
ret
cmp
xchg
xchg
repnz
dec
sbb
lahf
mov
test
sarl
cwtl
push
add
inc
jne
add
and
and
out
jge
cwtl
mov
xchg
out
mov
push
push
mov
les
ss
in
imul
push
cltd
vpshab
icebp
pop
jge
mov
xchg
out
mov
es
mov
scas
mov
ficoml
das
mov
ficompl
fcoml
jg
push
mov
ret
ss
ret
jle
inc
sti
imul
subl
loopne
xchg
in
mov
sbb
nop
pop
pop
js
mov
fwait
xchg
push
test
jp
cmp
pop
mov
cmpl
arpl
sarb
dec
jo
jmp
and
cld
mov
ljmp
enter
icebp
subl
inc
fwait
sarb
ss
in
cltd
sbb
outsb
or
add
in
mov
bound
sub
xchg
rcl
test
xlat
es
xor
push
andl
jmp
mov
inc
cmp
scas
jbe
lods
adc
popf
add
xchg
fs
push
lret
lds
mov
cmp
sub
lea
das
adc
fidivs
push
push
pop
mov
push
dec
stos
cmp
inc
cld
aad
push
inc
jl
xchg
mov
cmp
adc
jle
std
stos
out
idivl
mov
fmul
or
pop
fwait
xchg
or
push
stc
lods
xor
mov
test
push
cld
jbe
aaa
xor
lods
sub
sbb
inc
pop
xchg
clc
xchg
dec
add
xchg
out
or
insl
addr16
jbe
aam
loope
pop
in
scas
sbb
pop
and
lods
cmp
xchg
ds
xorl
mov
mov
fisubrl
xor
addr16
stc
pop
pop
int3
sub
sbb
ret
movsl
outsl
dec
dec
jno
incl
cltd
leave
push
idivl
insl
xor
mov
mov
pop
test
addl
adc
add
or
lret
or
push
into
mov
cmp
cmp
cmpsl
mov
mov
push
popa
fmul
les
insl
inc
lret
bound
popa
jno
ret
lock
jbe
sti
xchg
dec
stos
fucomp
mov
sbb
into
xor
sub
leave
adc
popf
shl
shrl
aam
icebp
cmp
inc
and
mov
mov
cmpsl
loopne
inc
movsb
xlat
jge
ret
jecxz
aad
sti
or
dec
cli
repz
repz
sbb
xchg
fucomp
ljmp
jg
stos
mov
push
leave
xchg
push
pop
xchg
scas
daa
dec
or
mov
cmp
push
sub
leave
fnstsw
sarb
aad
dec
pop
lock
lret
jns
inc
jge
inc
push
cmp
mov
out
mov
ret
sbbl
mov
arpl
add
xor
fdivs
dec
test
nop
sub
scas
scas
clc
mov
sbb
cmpsb
fadd
push
lret
in
and
or
test
inc
mov
sahf
add
xor
jge
clc
adc
dec
push
fnstenv
xchg
imul
sbbb
fnstenv
inc
push
pop
lahf
add
xorb
jb
mov
cmc
outsl
test
mov
sub
call
pop
mov
sbb
dec
int
fcoml
push
repz
inc
clc
xchg
iret
loopne
clc
fs
mov
test
jae
pop
test
mov
bound
out
adc
lcall
pop
xchg
test
lea
add
pop
sub
cmp
mov
ja
mov
or
rclb
and
imul
and
xchg
inc
inc
mov
lds
mov
jbe
jb
xor
scas
loope
popf
insb
sub
mov
mov
push
stos
enter
push
loop
into
bound
mov
das
sbb
daa
ja
leave
pop
das
sar
mov
cmp
shlb
jae
popf
shr
out
jbe
mov
push
out
cld
xorb
push
cmp
in
xchg
fiaddl
lea
test
jo
aas
int
mov
es
xlat
jns
sbb
insl
pushf
cmpsl
mov
xchg
fidivs
sarl
jne
nop
xlat
push
inc
jbe
clc
push
div
jmp
jbe
stc
mov
fldl2e
push
sbb
cwtl
jmp
or
setne
xchg
adc
js
in
xor
xchg
test
mov
and
in
add
sbb
stc
aad
push
outsl
pushf
or
cmp
enter
xchg
xchg
xchg
mov
xadd
sahf
cmpsb
push
push
sub
outsb
push
aam
pusha
sbb
ljmp
pop
fs
scas
sub
xchg
scas
lcall
pop
loope
mov
lods
xor
out
jp
iret
mov
inc
cmp
loope
or
loopne
sbb
mov
lret
fistps
jne
jbe
sub
ret
cmp
mov
adc
and
mov
test
sub
push
fisttpl
movsl
int3
sub
stos
mov
jmp
mov
jno
mov
ret
bound
jmp
stc
jmp
sub
loopne
mov
mov
sbb
inc
pop
adc
add
out
popf
test
dec
imul
mov
xchg
mov
and
outsb
sub
push
mov
jno
rcl
test
loope
pushf
dec
popa
xor
filds
add
xor
jl
aas
jle
addr16
test
pop
out
adc
insb
mov
pop
fistps
jg
test
xchg
push
orb
popf
add
nop
add
mov
adc
pop
jno
popa
aam
xchg
fidivs
mov
xorl
clc
fnstcw
imul
fbld
push
loop
jbe
pop
stos
mov
notl
sbb
mov
cwtl
lock
js
xor
or
ss
push
sbb
in
jbe
push
lret
and
inc
push
push
xor
inc
pop
lahf
cmpsb
pop
xor
into
cmp
sbb
fstpl
mov
xor
mulb
pushf
pop
jecxz
leave
pop
and
lret
lret
adc
js
xchg
sbb
mov
add
jl
ss
jmp
cmpsb
inc
lods
sub
adc
and
lds
add
or
push
test
stc
es
gs
orl
mov
sbb
fistpl
nop
out
xor
sub
lds
fwait
jecxz
cmp
or
add
test
mov
fimull
and
aad
fisubl
cmp
fmuls
pop
inc
scas
orl
xchg
sbb
jmp
outsl
mov
popa
lcall
adc
sbb
mov
xor
cmpsl
cmpsb
lss
fwait
shlb
sti
divl
dec
add
stc
call
stc
xlat
mov
xor
xchg
mov
lea
pushf
sti
data16
mov
sahf
sub
pop
mov
mov
repz
add
fs
push
add
in
mov
xor
mov
bound
out
adc
stos
clc
add
dec
leave
int
aam
loop
mov
dec
jnp
jae
repnz
jle
ljmp
std
add
mov
or
js
sub
sbb
xchg
adc
and
dec
mov
movsl
inc
and
cmp
ljmp
inc
cli
mov
loope
jge
test
mov
bound
pop
sbb
loopne
cmc
adc
sbb
xor
jecxz
lcall
xor
xorb
add
out
nop
movsb
mov
inc
movsl
push
push
push
out
jp
arpl
fs
push
jns
dec
push
sti
pop
jle
mov
add
lcall
sub
sbb
adc
fs
sbb
sub
push
aaa
cmp
xor
add
cld
lds
mov
xor
pop
xlat
nop
cmpsb
fidivl
mov
shlb
xor
leave
orl
jns
out
and
cmp
sub
push
mov
stos
lds
mov
push
mov
filds
scas
jne
adc
in
lods
pop
mov
and
ret
lods
pop
jle
shrl
jns
enter
rcr
sbb
xor
leave
pop
xchg
inc
cmp
hlt
jmp
mov
sbb
or
and
mov
lcall
dec
sub
dec
jae
push
mov
adc
ss
lock
gs
mov
push
push
xchg
fdivl
mov
mov
jmp
aaa
push
ffreep
movsl
dec
mov
jb
sbb
ret
imul
les
mov
mov
loope
mov
sbb
in
cmpsb
or
sub
rorb
popa
cmp
cmpsl
stos
sub
and
inc
pop
fldcw
mov
jp
dec
fldt
int
mov
jbe
in
js
shlb
out
mulb
or
data16
stc
out
adc
adc
xor
cmpb
andb
xor
push
jb
sub
add
and
jge
jge
cmpsl
mov
xchg
pusha
loope
jnp
dec
pop
inc
or
and
push
xchg
inc
jg
adc
shl
fidivrs
dec
popa
inc
in
xor
fwait
ja
pop
jo
adc
push
cmp
xor
fidivrs
rcll
sbb
mov
ret
scas
jno
jmp
cs
arpl
mov
dec
push
inc
lahf
dec
jle
or
out
xorl
xor
js
lret
out
out
stc
push
mov
fs
repnz
push
mov
pop
mov
and
sbb
sub
mov
add
sub
mov
rcrb
rcrl
addb
lds
push
push
push
gs
mov
int3
sbb
fwait
stos
mov
or
xchg
xchg
ds
push
pop
jmp
aas
pushf
cmp
sub
mov
rcl
ret
and
lds
pop
push
xchg
rorb
jp
shrb
adc
std
gs
push
dec
dec
cwtl
int
in
pop
insl
loop
lcall
mov
orb
mov
xchg
frstor
in
les
dec
stos
daa
push
dec
lods
adc
push
nop
mov
or
hlt
jo
xchg
outsb
addr16
insb
jp
bound
or
fwait
out
sbb
arpl
shl
adc
adc
cmp
add
cs
mov
add
sub
mov
fchs
movsb
mulb
and
mov
imul
push
cld
push
jb
xor
div
or
loopne
sub
pop
loop
jmp
popa
or
fs
push
xchg
add
xor
add
das
gs
inc
sub
xchg
mov
nop
push
scas
mov
mov
inc
aam
dec
jnp
sbb
mov
fbld
std
lods
stos
adc
sub
repz
pop
xor
js
xchg
insb
push
mov
subl
sub
scas
stos
jp
add
movsl
imul
pop
cmp
adc
cmpsb
cmpsb
dec
cmp
aas
add
dec
dec
seta
xor
imul
hlt
inc
lahf
add
popf
push
add
lcall
sbb
into
xchg
aaa
inc
rcll
hlt
mov
and
mov
andl
sbb
adc
jbe
cmp
aas
leave
pop
dec
cli
inc
mov
cmpsl
mov
lock
hlt
xor
jo
sbb
jle
push
jle
mov
hlt
push
sbb
xchg
insb
xchg
nop
xchg
xchg
test
test
cmpsb
push
sub
and
sub
test
sbb
mov
sub
push
add
clc
aas
shll
jmp
sti
int3
xchg
adc
pop
in
ljmp
sub
pop
pop
sbb
mov
mov
mov
mov
test
fldt
xor
mov
mov
frstor
inc
or
scas
loop
and
inc
lret
pop
inc
nop
rclb
mov
cmp
xor
mov
js,pt
mov
sub
pop
pusha
fistl
push
pushf
mov
cmp
dec
nop
or
push
lock
push
subb
aaa
repnz
jmp
mov
pop
bound
pop
pop
mov
shlb
mov
and
mov
out
icebp
sbb
sbb
xchg
pop
bound
filds
or
and
test
and
out
dec
shrb
push
or
arpl
jp
xchg
lret
add
mov
mov
or
cmp
xchg
inc
jae
divl
out
in
in
in
jae
imul
cwtl
or
or
push
xchg
je
pop
xchg
mov
je
xor
cmp
outsb
imul
pop
test
mulb
mov
inc
ffree
outsl
fadd
stc
dec
pop
or
dec
jns
idivl
inc
cli
daa
xor
dec
jb
sbb
insb
xchg
enter
fwait
in
or
jl
jge
jno
mov
aam
arpl
stos
int
mov
mov
cmp
daa
pop
lods
js
dec
jmp
inc
sti
push
push
aam
xchg
shlb
je
js
ret
xchg
mov
adc
cmp
lahf
dec
adc
lcall
mov
xchg
hlt
push
call
mov
mov
xor
adc
clc
adc
push
pop
xchg
out
xchg
ljmp
cltd
mov
jae
mov
pushf
jl
xchg
insb
ja
inc
sbb
in
addl
adc
xor
dec
dec
testb
aaa
pusha
cmp
xor
cmp
das
or
xchg
push
adc
enter
sbb
jns
sbb
mov
jno
lret
jo
ret
push
mov
lock
adc
cmp
lods
mov
xchg
sub
push
ffree
cli
divl
movsl
dec
cmp
cmp
xor
cmp
shlb
and
xor
in
fsubl
sbb
lock
in
lods
jae
test
iret
ljmp
ja
repz
xchg
je
or
nop
xchg
mov
cmp
mov
mov
adc
mov
and
and
lret
aad
fnsave
lret
adc
insb
push
inc
jle
pop
ret
push
jae
mov
clc
loope
outsb
loopne
pop
sbb
mov
jl
xchg
icebp
pusha
or
iret
mov
mov
cmp
sbb
push
push
sub
in
mov
xor
lods
push
and
pop
dec
call
repz
sbb
int
xchg
add
outsb
or
in
in
pop
add
test
adc
rorl
xchg
dec
add
or
cmp
mov
pop
cmp
imul
xchg
dec
sbb
addps
movl
inc
pop
inc
lret
std
dec
mov
xchg
ret
sub
xchg
lds
fsubrl
in
icebp
and
mov
lds
fcoms
and
push
into
pop
jbe
mov
outsb
fiadds
dec
mov
pop
cs
mov
push
or
icebp
adcb
mov
les
jnp
orl
xlat
xchg
mov
adc
pop
sbb
aad
cmp
mov
xchg
std
jge
jno
pop
xor
pop
add
scas
fnstsw
lea
mov
jle
sub
push
mov
imul
jp
jo
push
xor
cli
flds
xchg
ret
xor
inc
xor
jb
sub
sbb
inc
sbb
inc
xchg
adc
mov
jge
add
add
stc
movl
std
push
sub
insb
cmc
scas
cs
add
in
aad
fistpl
test
xor
mov
push
std
sbb
xor
ljmp
test
ljmp
insb
mov
stos
push
popf
xchg
pop
fnstsw
lret
mov
fmuls
lret
jo
cmp
mov
lods
scas
pop
mov
call
fdivl
inc
or
sarl
pop
add
leave
mov
inc
sub
js
idivb
test
pusha
xor
or
xchg
push
xchg
das
subb
jbe
pushf
mov
sbb
and
mov
xor
mov
sbb
and
sahf
ljmp
mov
cld
mov
cmp
in
jae
sub
xchg
xor
sub
pushf
loope
mov
bound
xchg
fistpll
sti
xchg
xor
ret
add
xor
sub
aas
pop
xchg
stos
mov
inc
stc
rcll
add
or
xchg
cmpl
jno
shrb
mov
fwait
in
stos
cltd
sub
pop
shr
xor
mov
mov
mov
cmp
xor
cltd
cmp
dec
movsb
jne
mov
ret
ja
fnstsw
mov
jb
push
lods
bound
push
in
inc
lods
icebp
add
mov
sarl
xchg
adc
cwtl
sub
cmpsb
fsts
xchg
dec
je
fildl
out
lahf
std
call
jb
stc
pop
addb
push
jae
icebp
mov
pop
outsl
aaa
in
cmp
data16
pop
pushf
and
cmp
mov
lret
push
std
js
stc
leave
data16
jo
cmp
aam
adc
sbb
pushf
add
movsl
test
xchg
mov
xor
cmpb
shlb
stos
stos
cli
push
lods
lods
clc
mov
fdivs
shlb
in
insb
jl
dec
push
in
mov
inc
cltd
outsl
push
stc
inc
callw
loop
push
push
neg
fadds
addl
add
rol
test
movsb
and
mov
ficompl
out
fstl
rclb
cmpsb
enter
into
ret
test
cli
lods
aam
jg
into
sbb
call
fdivs
ja
jmp
cmpsb
mov
bound
sub
insl
mov
mov
pop
xor
mov
fnclex
lods
mov
push
shrl
push
push
rcrl
out
testb
mov
inc
iret
leave
adcb
inc
mov
scas
scas
or
jbe
scas
mov
fwait
pop
test
sbb
xor
and
xchg
mov
or
loopne
in
outsb
xor
xor
mov
jecxz
push
xor
cmpsb
scas
and
and
test
lds
adc
cmc
imul
push
and
sub
jno
push
sti
test
fwait
cmpsl
xchg
cli
mov
xchg
sahf
daa
lret
add
addb
cmpsl
dec
jmp
outsb
xor
mov
sub
jae
mov
test
ret
dec
inc
dec
jno
int3
out
mov
loope
lock
and
ja
lcall
ret
pusha
cwtl
in
lret
out
pop
loopne
add
in
or
mov
or
aas
pop
fnsave
mov
ss
mov
pop
fdivr
test
cmp
push
icebp
mov
jg
repz
xchg
jnp
inc
cld
jg
dec
aaa
cmc
movsb
imul
outsb
nop
add
sbb
insb
jbe
mov
movhps
or
cmpsb
push
bound
rolb
aad
lods
cmp
stos
das
dec
cmp
mov
fucomip
and
jg
int3
mov
jecxz
cwtl
shrl
jns
js
jbe
inc
mov
or
out
jmp
add
arpl
pusha
hlt
adcl
cmp
addr16
sbb
sbbb
test
scas
adc
mov
loop
sub
ljmp
ror
ffree
inc
lock
cmp
in
outsl
imul
xor
and
sub
sub
push
adc
scas
mov
cmp
gs
mov
mov
push
nop
pop
aaa
repz
stc
xor
xor
push
stos
xlat
pop
pop
dec
and
push
flds
lock
clc
sarl
pusha
inc
jns
lcall
xor
xor
sbb
negb
insb
aad
push
sub
sbb
mov
adc
mov
dec
rcrb
inc
or
cld
cmp
ljmp
push
pop
xor
dec
rcr
dec
mov
jg
lock
jb
insl
sahf
adc
ja
jp
lock
bound
jg
sbb
out
jecxz
pop
mov
loope
push
xchg
mov
jns
add
fs
test
mov
data16
xor
lods
push
pop
xor
cs
pop
inc
and
std
lret
jae
xchg
mov
jmp
inc
fs
mov
repz
xchg
in
popf
sbb
or
jl
test
lret
inc
sahf
mov
orl
cmp
shrl
popa
repz
push
repnz
push
add
in
and
aad
push
mov
lret
sbb
enter
cmp
fnstenv
sub
push
sub
xchg
or
sbb
xchg
push
sbb
xchg
adc
sub
sub
ret
inc
sbb
lds
mov
lcall
fsubl
lcall
push
sbb
jp
std
mov
cmc
add
mov
dec
sbb
or
or
or
xchg
mov
and
dec
xor
cmp
push
dec
into
mov
iret
xchg
mov
xor
mov
xchg
fistpl
xlat
lcall
push
cld
fmuls
into
int3
jge
leave
inc
cmp
adc
xor
in
jp
das
lds
mov
or
xchg
mov
xchg
ds
cmp
mov
sub
lret
mov
pop
int
notb
mov
js
inc
int3
dec
inc
dec
mov
push
sbb
inc
lock
mov
repz
lahf
sub
add
mov
loop
xor
scas
sarl
test
cmc
mov
mov
lahf
and
cwtl
dec
popf
sub
shll
nop
pop
test
adc
pop
push
sbb
popa
leave
pop
std
lret
adc
out
pusha
nop
repz
lea
out
cmp
fs
ret
in
cltd
lds
out
mov
push
push
xchg
xchg
mov
push
int3
lds
test
cmp
hlt
fiadds
out
push
cld
push
pop
int3
iret
lcall
inc
repz
jae
sar
lds
std
addr16
push
out
mov
lcall
pop
add
jnp
mov
xchg
cld
pop
xor
and
pop
and
leave
push
and
outsb
xchg
jecxz
dec
jecxz
push
pop
int
jnp
mov
inc
lds
imul
test
idivl
adc
xchg
adc
sahf
cwtl
xorb
add
fidivrs
xor
mov
push
cmp
xchg
pop
sub
and
js
shrl
jp
cmpsl
xchg
xchg
dec
ds
dec
jne
imul
add
and
jmp
push
adc
insl
mov
enter
pop
das
jae
mov
mov
mov
hlt
subb
addr16
sbb
push
push
fistpll
clc
mov
jl
insl
movsb
adcl
xchg
adc
cmp
mov
jg
jecxz
xchg
loope
decl
sbb
ljmp
pusha
loop
out
sbb
or
push
mov
cmp
sbbb
shrl
jb
aaa
pop
testb
jnp
sbbl
insb
lock
std
push
inc
mov
add
insb
enter
mull
fldcw
out
lods
pop
inc
addr16
movsl
mov
stc
xor
push
xor
jo
out
test
add
mov
test
repz
cwtl
mov
push
dec
insb
fcomi
xor
jp
xchg
push
mov
into
mov
push
mov
inc
adc
movsb
imul
scas
pushw
or
cwtl
pop
fwait
cmpsb
mov
dec
mov
add
clc
es
mov
push
fcomp
mov
push
mov
cmpsl
int
sahf
leave
dec
fld
lret
xchg
push
out
sub
aas
or
cmp
stc
sub
rcrb
cwtl
jns
sbb
ljmp
inc
cmpsl
mov
dec
iret
mov
cmp
into
hlt
std
lret
cmpsl
pop
push
or
ja
sbb
pop
outsb
jae
jg
push
adc
into
cmpb
ljmp
pop
insl
outsb
jl
cmp
push
popf
adc
mov
or
xchg
dec
cmp
jo
or
xor
mov
clc
mov
push
sub
sbb
fcoml
dec
push
es
inc
ret
inc
enter
shl
push
out
test
lcall
sbb
in
add
or
cmpl
mov
lret
pop
enter
enter
lods
cmp
cmpsl
xchg
sub
fxch
add
jge
bound
iret
jb
leave
inc
add
ret
xor
sbb
jle
ljmp
push
ljmp
dec
xchg
in
pop
or
mov
and
cmp
dec
add
dec
sub
sbb
mov
daa
fdivs
fsubrs
loop
fmul
jb
rolb
aam
push
dec
jb
jns
cld
inc
xor
outsl
sub
loop
jae
in
jne
push
call
mov
enter
and
sub
lret
xchg
mov
daa
arpl
fsubs
aam
dec
sub
pop
or
or
adc
push
js
cmp
aad
push
inc
jmp
jne
in
repnz
jecxz
shr
ja
repnz
sub
jg
xor
repnz
sbb
inc
or
and
jp
xchg
sub
arpl
ja
fildll
adc
add
mov
sub
mov
jle
aaa
jo
in
mov
stos
gs
and
push
pop
push
ret
fdivrs
lcall
sbb
adc
xchg
mov
add
sub
mov
iret
testl
jmp
jmp
in
std
orl
and
and
jge
stc
xchg
cwtl
test
mov
adc
cmp
andb
sbb
inc
push
mov
pop
test
inc
cmpsb
test
js
fadds
inc
and
daa
sbb
das
dec
dec
inc
pop
loopne
push
ret
push
push
jge
lds
cmp
lds
sbb
push
and
jne
das
jmp
xchg
xchg
stos
add
out
push
bt
add
out
insb
gs
pop
pop
fisttps
xchg
mov
jno
jae
fcos
push
test
lret
icebp
stos
mov
mov
lds
packssdw
dec
test
xlat
mov
insl
loope
dec
test
pop
cmp
imul
out
mov
sbb
cmp
mov
push
cli
pop
push
push
push
leave
or
sarl
lea
jne
cmpsl
out
fnstenv
das
call
and
adc
lcall
sbb
adc
mov
cmp
xor
lcall
jge
cld
out
aam
add
rcrb
rcl
pop
ljmp
jo
add
xchg
les
test
cld
jecxz
dec
out
cmc
sub
scas
sbb
test
sti
cmp
subl
mov
lods
int3
rorl
sub
jae
fisttpl
rcl
mov
or
lret
cli
movsl
and
loopne
lds
movsl
mov
cmpsb
es
sti
clc
std
out
not
lret
fldt
adc
pusha
sub
pop
fdivrs
loop
clc
mov
mov
addr16
ss
push
ret
pop
mov
cmp
cmpsb
rcr
cwtl
push
andb
dec
mov
mull
cmp
pop
pop
sahf
rcrl
xchg
lock
dec
jecxz
push
sub
nop
sub
aaa
imul
pop
fimull
in
mov
and
aas
test
ret
sbb
adc
aam
jne
mov
js
dec
repnz
fisubs
mov
pushf
fdivs
pop
ljmp
mov
lock
mov
aam
push
push
lret
ds
mov
and
js
shlb
imul
xchg
sbb
mov
push
sbb
and
or
pop
into
xchg
mov
inc
xchg
cld
cld
pop
adc
mov
mov
jbe
mov
mov
dec
mov
jp
sub
movsb
mov
mov
inc
push
push
dec
scas
into
inc
leave
mov
jnp
pop
jnp
dec
rcrl
fucomp
adc
cmp
cmp
in
pusha
xor
cwtl
mov
mov
adc
add
or
xchg
cmp
fnstsw
sbb
xor
inc
jo,pn
mov
out
frstor
pop
sbb
lret
cmp
aad
cli
js
jge
es
jg
aas
pushl
pop
outsl
stos
mov
pusha
popa
sbb
hlt
and
test
or
mov
mov
stos
popf
test
test
out
scas
out
sti
lods
and
and
and
ret
pop
stc
out
fsubs
iret
stc
stos
pop
jae
jb
jmp
jbe
loopne
jecxz
xchg
push
jecxz
add
jbe
add
lea
andl
cmp
add
sarl
fldt
mov
cs
fimuls
dec
cli
repnz
dec
sahf
decl
mov
sub
jae
cmc
mov
lcall
sahf
xchg
adc
lret
movsl
adc
adc
and
hlt
mov
inc
test
and
or
pop
mov
and
mov
sar
aad
fisttpl
inc
dec
push
dec
test
dec
flds
dec
repnz
daa
mov
jb
jno
ss
das
out
scas
shll
fnsave
nop
mov
cmp
push
cmpb
jmp
lods
aad
lods
and
std
jg
mov
cli
shll
mov
push
xchg
jmp
lret
adc
sti
xor
call
xchg
adc
fmuls
push
in
mov
add
adc
cli
mov
mov
xor
cmp
mov
movsl
fwait
mov
inc
les
es
fabs
les
pushf
dec
lea
xchg
mov
cmp
adc
jmp
ss
lcall
cmpsb
out
xchg
aad
mov
and
les
mov
pop
xor
xor
push
test
pop
cmp
add
xchg
lahf
int3
and
hlt
add
mov
xchg
aas
sub
adc
fs
icebp
aad
dec
icebp
daa
push
js
std
mov
call
lcall
adc
cwtl
jnp
mov
adc
cwtl
xor
pop
outsb
mov
ret
mov
fs
xor
vminps
test
jge
inc
xchg
jne
jnp
sbb
sbb
in
sbb
outsl
add
mov
aad
ud1
add
ds
add
push
fldt
mov
adc
movsl
fisubrl
rorl
out
cmpsl
imul
cmpsl
xlat
stos
cld
jl
outsb
mov
je
aaa
jg
xchg
jb
sub
jno
lahf
loope
xorb
sbb
mov
test
mov
add
cmpsb
scas
add
aas
pop
push
add
lcall
or
jno
push
movsb
fistps
xlat
inc
sub
into
pop
inc
jmp
pushl
fwait
push
icebp
dec
pop
jbe
mov
in
xor
sbb
sbb
dec
xchg
inc
xor
shlb
subl
or
je
dec
test
jg
pop
mov
insb
enter
in
loopne
inc
cmp
int
call
lcall
jmp
adc
or
sbb
mov
incl
add
filds
leave
mov
into
cmpsb
sub
rcll
inc
push
repz
cli
gs
cmpsl
inc
lret
cmp
jne
ret
sbb
shr
inc
jnp
jecxz
jge
stos
jg
and
dec
mov
dec
jbe
mov
sub
sbb
push
test
cmpl
inc
cmpsl
cs
movsl
insb
leave
jmp
push
or
adc
std
dec
lds
ja
or
ljmp
sbb
and
or
mov
push
push
mov
je
cmp
inc
dec
dec
fidivl
test
lea
pop
inc
jmp
jno
jbe
sti
mov
imul
add
outsb
aam
inc
ljmp
testb
jle
lds
push
arpl
or
rclb
mov
mov
out
movsb
sub
ds
sbbb
jnp
dec
fstpt
lock
jae
push
add
repz
shll
in
lret
hlt
pop
enter
sbb
insl
sbb
inc
xchg
cmp
mov
mov
rorb
pop
jle
scas
stos
mov
gs
pop
cmpsl
and
fdivrl
adc
cmc
rcr
addr16
mov
call
sbb
cld
mov
enter
icebp
fnsave
stc
add
push
js
pop
sub
lock
cmp
xchg
inc
ss
mov
test
sub
aas
add
xor
sahf
test
mov
sub
mov
dec
inc
ret
xor
repnz
loope
push
iret
cmc
dec
inc
je
jb
xchg
call
mov
dec
fwait
sbb
pop
sbb
sbb
jg
dec
inc
stos
enter
jge
pushf
test
addl
lods
cmp
ss
frstor
xlat
push
pop
push
pop
ja
pop
dec
jge
iret
loop
test
int
xchg
xor
cmc
push
jb
insl
pusha
push
imul
ss
fs
add
lds
xor
or
les
aaa
ds
insl
xor
lods
aaa
lods
mov
leave
sub
mov
pop
mov
aas
clc
jns
je
repz
inc
leave
jmp
inc
mov
je
mov
jbe
shlb
nop
lcall
sbbl
cmpsl
repnz
stos
sarb
and
fstpl
lahf
lret
in
sub
pop
push
out
push
xor
dec
xchg
fcomip
ret
popf
shr
inc
pop
aad
out
push
dec
jge
cmp
repnz
icebp
jecxz
clc
push
xchg
cwtl
loopne
and
jns
stc
nop
jno
push
lcall
lods
mov
push
xchg
insl
cli
out
add
into
call
pop
or
add
dec
icebp
jle
mov
int
push
jmp
jmp
loope
loop
adc
push
jmp
mov
xor
fisttpll
test
fstps
mov
xor
mov
fsubrl
and
movsl
fistpl
call
and
jno
ret
into
les
cli
sbb
lock
loope
ljmp
std
out
in
xchg
cmc
pop
or
cmp
mov
mov
cmp
mov
ss
das
fs
push
sbb
ss
and
leave
scas
push
lret
loope
inc
sub
sarl
or
xchg
sub
and
lahf
jecxz
pop
adc
jmp
or
enter
lock
xor
sub
and
bound
mov
aaa
fadds
inc
aad
dec
cmp
xor
mov
call
jg
out
bound
mov
pop
sbb
lcall
mov
add
in
jle
pushf
add
jg
and
iret
sbb
stos
imul
fcomps
jg
outsb
push
rcl
dec
jg
lcall
mov
mov
fstl
aas
jae
jns
and
bound
loop
add
mov
lahf
pop
jns
cmpl
hlt
sub
pop
out
pop
dec
das
pop
insb
testb
clc
lret
pop
repz
int
pop
push
lcall
loope
icebp
push
sbb
outsb
add
sub
mov
push
add
adc
sbb
or
mov
mov
push
jo
mov
pop
pop
bound
mov
movsl
flds
fldl
leave
cmc
inc
dec
adc
push
je
je
jo
sbb
sahf
dec
jmp
sbb
xchg
sbb
cmp
push
mov
sub
scas
dec
cmp
sub
add
mov
jg
daa
insb
cmpsl
or
sbb
dec
loopne
xchg
idivb
push
sub
inc
out
sub
icebp
test
jmp
adc
in
imul
popf
xchg
add
roll
adc
mov
cmp
mov
inc
mov
mov
movsl
push
into
mov
lods
cmc
adc
bswap
in
dec
mov
jecxz
or
adc
sub
icebp
mov
pop
jecxz
jnp
jnp
xor
sbb
adc
xchg
cmp
divb
sub
int
jbe
icebp
fstpt
sub
fidivrl
movsb
add
fdivrs
icebp
jbe
rol
lods
shll
aad
repz
dec
fwait
jae
inc
popf
imul
dec
mov
fs
ja
add
adc
mov
push
or
jmp
js
xchg
icebp
cmp
mov
adc
cld
xor
xor
mov
xor
fwait
push
test
in
dec
lret
and
inc
fisttpl
std
pop
dec
lock
lea
jb
fs
cmp
cmp
xchg
popf
cltd
inc
stos
lret
mov
mov
cld
cmpsl
adcl
clc
cltd
cmp
sbb
pop
xor
mov
imull
add
shll
pop
pop
mov
push
mov
adc
cmpsl
idivl
or
cmp
fs
mov
ss
aas
jo
xchg
lahf
sti
mov
and
jmp
lret
in
fcmove
aas
dec
fidivl
mov
and
lds
mov
stos
rcl
dec
pop
outsl
xor
cmp
dec
jae
nop
cld
inc
lahf
push
imul
loop
xchg
cmc
test
sbb
mov
sbb
xchg
pop
jp
adc
mov
mov
movsb
mov
addr16
xchg
sub
xor
sub
cmpsl
or
adc
rcrl
jmp
cmp
cmp
dec
pusha
pop
inc
sti
mov
jmp
jl
jl
in
mull
sbb
orb
iret
add
mov
jl
sub
add
cmpsl
mov
sub
add
add
fstl
bound
sub
fsubl
sbb
shll
pop
dec
les
sbb
inc
inc
clc
adc
jns
ret
sub
inc
outsl
sub
lds
out
adc
push
adc
adc
pop
and
test
mov
dec
js
cmpl
test
lret
mov
sahf
cmpsl
movsl
pop
test
fbld
pop
daa
mov
movsb
into
fbld
jle
lret
jmp
sbb
into
inc
arpl
js
imul
sub
lods
sbb
jne
pushf
pop
jge
mov
sub
out
in
pop
rorb
adc
mov
push
pop
out
movsl
test
mov
adc
sub
stc
add
dec
jbe
jae
fiadds
cld
inc
ljmp
imul
nop
adc
push
xchg
push
pop
or
cmp
pop
cmp
push
mov
pop
negb
shrl
daa
mov
pop
mov
push
fdivs
push
pop
rorl
repz
pop
inc
jb
jno
xlat
js
pop
popa
ss
loope
je
in
cli
in
xchg
lcall
mov
pushf
inc
or
test
mov
mov
pop
cli
out
jle
scas
mov
sub
in
fistps
mov
mov
insw
incb
lods
sar
idiv
pop
stc
cmp
ss
in
loop
sbb
fwait
or
xchg
push
or
jne
ds
push
mov
sub
mov
lods
jl
push
sbb
jl
fidivl
add
iret
push
mov
xchg
arpl
sub
pop
sbb
pop
cmp
pop
cmp
rolb
rcrl
in
test
sbb
fneni(8087
lahf
xor
mov
aam
push
and
cmpsb
mov
ficoml
inc
xchg
jmp
ret
jno
inc
and
inc
sar
push
push
inc
mov
adc
insl
add
and
adc
fcoms
arpl
lret
add
add
xor
test
mov
js
and
test
and
movsl
outsl
mov
fmul
cli
mov
clc
pop
dec
repz
rolb
pop
mov
dec
jnp
outsb
jmp
jae
loope
dec
ljmp
adc
lahf
bound
xchg
mov
add
rdpmc
mov
xchg
xchg
mov
mov
xor
aaa
es
sbb
stc
dec
popf
popa
cld
sbb
inc
or
fwait
jne
jle
sbb
adc
cwtl
push
mov
sub
adc
xchg
fstl
add
pop
andl
xor
sbb
stos
fldcw
icebp
mov
enter
inc
dec
sbb
jo
jl
nop
dec
icebp
int
and
mov
in
add
lock
cmp
xchg
loope
call
or
adc
add
movsl
cmp
sub
dec
cltd
cmpsb
mov
mov
push
out
add
mov
push
das
push
ljmp
andb
adc
repz
cli
xchg
mov
sbb
dec
xor
adc
out
test
out
and
cwtl
mov
or
and
leave
pop
aaa
push
cmp
mov
xor
mov
loopne
xchg
dec
and
aas
in
fld
ds
mov
pop
test
cmp
mov
jmp
xchg
push
sbb
xchg
loopne
cltd
jo
xchg
movsb
femms
or
mov
cmc
test
dec
cmp
mov
pop
aas
mov
sub
cmp
es
mov
sub
sbb
push
lcall
push
je
out
clc
out
dec
jns
je
je
outsb
xor
imul
mov
dec
push
pop
adc
fwait
adc
pop
pop
adc
lea
pop
add
test
xchg
add
mov
mov
mov
shlb
rcl
xor
cwtl
inc
out
aad
push
push
imul
pushf
mov
adc
dec
xchg
sahf
sub
pusha
pop
mull
test
clc
xchg
loopne
pop
push
pop
mov
pop
sti
add
mov
mov
imulb
xchg
xchg
sbb
daa
xchg
out
mov
push
test
add
and
mov
push
shll
pop
imul
mov
sbbl
scas
test
mov
mov
data16
loope
sahf
lds
fimuls
cmpsl
or
or
jp
lea
xchg
les
push
mov
xor
je
stos
jmp
loop,pn
cmpsl
lock
dec
lahf
dec
pop
imul
sub
xor
xor
outsl
dec
outsl
or
or
xor
sbb
sub
xchg
mov
fidivrs
and
fiadds
xor
pop
dec
or
jb
fnsave
outsb
inc
ret
push
leave
fscale
inc
or
rorl
xchg
test
insl
das
or
adc
loope
or
mov
dec
mov
sbb
xchg
sub
mov
push
cmp
mov
pop
into
sub
jb
arpl
fcmovne
jbe
sbbb
testl
dec
mov
inc
div
or
pop
bnd
mov
pop
adc
outsl
xor
or
fwait
xor
or
mov
outsl
xor
lods
add
mov
jp
rclb
fsub
shrl
in
and
adc
jnp
dec
ja
ret
adc
daa
lds
out
pop
ljmp
gs
or
xor
sub
lods
test
xchg
cmpsl
mov
aas
sbb
sub
xchg
lods
sbb
popf
and
inc
push
mov
push
andb
aam
cmp
push
xor
insb
lds
dec
jb
imul
adc
dec
loop
hlt
sbb
lcall
xor
sbb
pop
xchg
std
ss
push
nop
mov
aaa
or
xchg
jo
mov
stos
and
lods
pop
or
jg
fcmovnu
sbbl
xchg
sti
stc
fwait
rorl
jnp
sbb
loop
jno
popa
outsb
call
adc
loopne
or
sbb
adc
cmp
adc
ss
popa
xchg
xor
and
mov
pop
stos
dec
pop
subl
sarl
lock
xor
loopne
jnp
dec
mov
repz
js
out
jb
in
je
lcall
sbb
repnz
mov
xchg
popl
sti
cmp
xor
sub
and
inc
inc
and
idivl
pop
push
adc
xchg
dec
adc
jg
cld
sub
clc
mov
inc
or
outsb
cld
idiv
sbb
xchg
xor
imul
cmp
fcomps
pop
or
fisubrs
mov
adc
add
test
mov
addr16
mov
lock
test
fisubrl
lcall
outsl
in
push
dec
mov
addr16
inc
inc
stos
popf
jp
out
add
pop
jle
cld
inc
pop
out
inc
dec
jnp
aas
insl
adc
or
out
adc
pop
das
add
test
mov
cmp
push
cmp
mov
cmp
sub
cld
xor
divb
shl
fisttpll
and
aad
sbb
test
aad
stc
mov
hlt
aas
idivl
aaa
push
je
mov
out
je
imul
ficoml
or
mov
xor
or
das
mov
xor
test
and
rcrl
int3
pop
rol
inc
inc
xchg
dec
push
cli
les
or
je
mov
jno
loope
xor
lods
pusha
outsl
adc
pop
sbb
xchg
mov
cmp
mov
jb
xor
cs
test
mov
fisttpll
push
push
inc
ret
aad
jp
ret
lds
inc
add
icebp
mov
je
mul
fs
sub
xchg
sub
and
adc
xor
cmp
sarl
movsl
sub
divb
lods
repnz
fistl
sbb
push
fmul
popf
xchg
jnp
inc
cmovp
std
divl
inc
repz
push
shr
and
in
push
cltd
cwtl
sbb
fwait
cmc
xchg
roll
mov
push
mov
in
in
cmp
push
dec
mov
movsl
test
lods
outsl
pop
pop
add
ljmp
je
test
inc
js
movsl
inc
jb
lock
cld
popf
insl
ja
je
in
dec
out
ficompl
stc
cltd
push
or
imul
xor
pop
mov
push
cmp
mov
adc
lods
out
mov
xchg
push
mov
xor
repz
sub
add
outsb
jmp
popa
call
data16
out
fsubp
sbb
or
test
dec
mov
pop
mov
jnp
nop
das
mov
ss
pop
cmc
sub
fstps
rcl
mov
fstpl
pop
jbe
pop
movb
dec
inc
lods
loopne
jns
sti
cli
out
mov
xor
push
outsb
jecxz
pushf
out
xchg
pop
cltd
adc
xchg
mov
mov
xorl
test
and
cmpsb
int3
push
pop
lret
push
jno
fld
adc
roll
mov
icebp
add
hlt
je
mov
xor
popf
outsl
push
xchg
cltd
out
pusha
imul
pop
rcll
or
cmp
mov
out
scas
xor
xor
movsl
je
xor
insb
and
fcmovnbe
dec
push
inc
into
inc
mov
ret
les
iret
clc
jno
cmc
adc
in
loopne
pusha
inc
jmp
sbb
ja
pusha
xchg
adc
popf
in
in
xchg
mov
rclb
lcall
mov
cwtl
scas
jae
cli
das
mov
mov
pop
xchg
push
scas
xlat
in
mov
xor
lret
dec
aam
aam
les
dec
fdivp
addl
std
mov
hlt
repz
in
fs
pop
lcall
jo
subb
cmp
cld
mov
iret
imul
mov
movsb
cmpsb
sbb
test
fistps
and
pop
sub
pop
ffreep
and
inc
ret
fcmovne
push
stc
jnp
inc
xchg
jno
lret
call
pusha
in
sbb
insb
sbb
mov
cwtl
or
xchg
mov
add
or
mov
cmp
mov
daa
mov
pop
movsl
cmp
mov
repz
aam
fbld
dec
movsb
push
sbb
fmul
rol
jae
int3
js
ljmp
testb
popf
push
mul
adcl
or
adc
mov
cs
mov
mov
xor
xor
test
aad
jp
or
mov
jno
test
std
frstor
ret
js
jo
add
data16
out
insb
cwtl
mov
inc
xor
sub
adc
addb
xor
mov
push
fiadds
lcall
pusha
and
mov
out
int3
dec
out
push
dec
xchg
dec
sar
fbstp
push
cmp
cwtl
out
in
cwtl
lret
pusha
nop
inc
or
mov
or
pop
mov
cmpsl
movsb
ss
mov
mov
shlb
mov
cs
add
pop
pop
add
dec
in
inc
dec
push
je
enter
jno
ret
pop
pop
jg
pop
repz
mov
pushf
sbb
daa
lahf
mov
outsb
jg
adc
cmpsl
sub
scas
sub
mov
test
mov
sub
mov
out
shrl
mov
sti
pop
mov
mov
push
loopne
jo
mov
mov
sbb
xchg
xchg
push
add
xchg
ljmp
dec
mov
fcomi
add
lods
les
cmp
xor
rolb
imul
fcomip
popf
add
inc
mov
enter
sbb
punpckhbw
and
in
hlt
hlt
gs
cltd
sbb
mov
addl
mov
add
xor
adc
mov
xor
daa
data16
test
ds
and
icebp
sbbb
icebp
pop
cvtps2pi
nop
lods
insb
sarb
outsb
lcall
andl
pop
adc
push
xchg
or
mov
mov
mov
mov
imul
jb
icebp
mov
pop
test
push
pop
cmp
adcl
wbinvd
leave
nop
sbb
pop
sti
bound
mov
hlt
pop
xor
adcl
sbb
push
rcll
add
test
push
mov
jb
pop
sbb
xchg
jecxz
mov
dec
pop
pusha
lods
push
push
jb
scas
into
adc
dec
shll
je
and
mov
pop
ret
scas
jmp
jl
daa
push
xchg
fnsetpm(287
cmp
mov
out
and
sbb
add
sti
push
jb
pop
pop
mov
in
pop
xor
test
cmp
fcoms
rcl
sub
dec
or
adc
ss
fnstsw
push
div
jnp
xor
fsubrl
mov
mov
out
test
in
add
fstl
and
fisubl
cmp
and
push
pushf
es
inc
jecxz
adc
pop
cmp
jno
insb
lret
mov
int3
push
dec
std
repz
scas
jo
in
mov
call
ret
mov
push
jp
movsb
daa
push
pop
adc
test
pop
adc
imul
insl
mov
add
or
cmc
mov
adc
inc
sar
mov
les
pop
aaa
xor
dec
mov
jmp
xor
mov
adc
push
or
xchg
adc
mov
test
cmpsb
sub
dec
mov
sbb
push
call
push
sub
inc
fwait
idivb
out
cmc
jge
jno
jcxz
icebp
lods
shrl
cwtl
data16
aas
out
sbb
mov
xchg
int
add
add
mov
jle
ret
mov
mov
xor
pop
movsl
mov
jno
mov
mov
ret
lods
insl
stos
lret
pop
loop
sahf
fs
jecxz
imul
data16
jg
pushf
lock
adc
mov
into
lock
sub
xorl
xchg
xchg
jg
sub
xor
adc
filds
es
dec
pop
int3
stos
rcrl
pop
xchg
adc
sub
inc
fwait
int
adc
pop
dec
adc
das
push
pushf
std
fwait
sbb
ss
or
sbb
push
dec
loopne
xchg
dec
or
cmp
sahf
lret
xor
imul
arpl
or
cmc
imul
dec
sti
test
cld
mov
cs
cmp
mov
lods
and
popf
les
push
mov
into
xchg
or
mov
push
mov
mov
add
sub
out
sub
push
shlb
sahf
xor
shlb
dec
inc
into
or
hlt
add
push
in
test
imul
js
adc
pop
sti
mov
xor
add
xchg
test
dec
pop
mov
adc
stos
addr16
test
iret
lods
fistpl
les
scas
out
push
fistps
aas
jecxz
jbe
dec
shrl
jnp
sti
jno
jae
jmp
ja
jecxz
imul
out
into
rcr
sub
xor
or
pusha
adcb
pop
gs
add
out
arpl
mov
out
ja
mov
nop
pop
out
adc
insl
mov
or
in
int
mov
pushf
mov
adc
repz
lods
je
and
mov
insl
or
rcrl
enter
pop
test
mov
inc
or
incb
idivl
in
mov
pusha
sub
addr16
and
and
push
fisttpl
fdivrl
int
mov
mov
jae
test
daa
in
fsubp
jp
gs
xlat
push
jg
xchg
repnz
pop
jo
mov
lds
add
jmp
arpl
out
sub
sbb
and
pop
xchg
mov
adc
push
xchg
or
add
mov
lea
xchg
mov
arpl
mov
sbb
dec
xchg
stos
ret
inc
mov
xchg
mov
bound
fwait
mov
nop
pop
aam
fistpll
stc
add
movsl
test
shlb
mov
jb
das
idivb
mov
pusha
aaa
pop
in
cltd
sub
popf
dec
aas
sub
inc
mov
nop
cltd
xor
cmp
sbb
lret
pop
divl
hlt
and
push
dec
sbb
jmp
sti
adc
xor
out
call
mov
lods
out
fisttpll
jge
or
adc
adc
dec
jo
sub
out
dec
testb
ret
xor
inc
pop
dec
lods
inc
mov
jo
mov
sbb
xchg
xchg
adc
mov
lret
mov
add
add
xorl
cmpsl
in
cltd
cmp
sbb
insb
sub
add
xchg
xor
cmpsl
paddusb
fnsave
mov
in
loopne
push
push
mov
xchg
fcomps
pop
les
dec
add
push
jg
mov
ret
lcall
push
or
adc
mov
cld
lret
adc
lea
mov
movsl
ljmp
pop
add
cltd
dec
nop
dec
cmovb
or
inc
add
inc
push
xchg
mov
jns
add
xchg
jns
inc
lea
sbb
in
leave
jo
cmpl
pop
pop
cmp
push
mov
or
xor
outsl
jecxz
ret
lods
int
pop
cmpsb
dec
or
push
pop
or
insb
mov
loopne
fnstcw
fwait
xchg
pop
inc
lds
in
arpl
test
dec
outsl
in
xorb
divl
xchg
or
or
mov
adcb
sti
and
mov
cmpsl
hlt
rcl
pop
in
scas
test
inc
pop
mov
loopne
daa
aam
and
pop
sbb
sbb
inc
dec
inc
lea
sbb
icebp
jns
std
dec
lds
js
sbb
ds
mov
lcall
add
arpl
xor
enter
mov
aam
mov
cmpsl
mov
mov
repz
movsl
movsl
rorb
jns
lret
aam
dec
int
sub
jb
int3
jle
cltd
insl
sub
push
jb
out
insb
scas
nop
sbb
jecxz
adc
jg
mov
leave
mov
scas
lods
cmpsb
cmp
fldenv
mov
jns
xchg
fnsave
pop
int3
and
jbe
ss
adc
inc
push
ffreep
cld
aam
clc
cli
inc
icebp
or
fsubr
jmp
adc
add
jns
fwait
pop
cmpsb
loope
xor
xchg
xchg
push
xlat
cmpsb
enter
dec
fidivl
cld
mov
scas
and
insl
cs
shrb
adc
movsl
or
loopne
rolb
and
inc
pop
dec
cmp
clc
cli
mov
fwait
pop
mov
lea
mov
cmp
stos
fstps
push
sub
jp
aas
or
cmovae
nop
mov
inc
mov
mov
mov
fnstcw
xchg
jge
mov
loope
inc
push
or
std
std
lock
jg
dec
lcall
hlt
mov
arpl
mov
fadds
pop
pop
xchg
or
or
jle
xchg
jge
pushl
and
sub
lods
sti
aam
shrb
xchg
out
pop
mov
out
int
imul
jne
inc
push
repnz
sbb
out
cmp
pop
pop
popa
outsl
clc
mov
test
das
lahf
scas
adcl
and
sub
mov
stos
ja
or
das
fsts
fistpl
xor
pop
adc
pop
jg
fidivl
ret
inc
push
mov
jge
mov
add
dec
xor
mov
push
stos
call
push
imul
pop
fistl
xchg
pushf
es
add
mov
cmpl
mov
jns
and
sub
fstl
daa
faddl
jne
ret
inc
xor
push
cmp
addr16
and
not
mov
arpl
jmp
adc
xchg
or
adc
inc
or
add
test
cmc
aaa
push
jnp
aam
and
aam
pop
mov
movsb
cmp
add
pop
adc
aam
lea
out
add
mov
bound
xchg
out
lock
insl
and
flds
pop
fisubs
out
leave
inc
pop
xchg
inc
lds
cwtl
pushf
mov
cmpsb
mov
into
je
pop
mov
and
inc
dec
leave
shrb
arpl
fs
sbb
outsl
call
mov
xchg
fstl
test
cmpsl
sub
ljmp
out
rcll
fdivr
jns
mov
xorb
movsl
mov
je,pn
inc
mov
sahf
sahf
leave
pop
jmp
cmp
adc
push
or
outsb
cmp
les
call
movsl
push
push
pop
popa
xchg
mov
sbb
or
push
mov
mov
mov
mov
push
pop
shrb
fst
lods
loope
je
sbb
inc
inc
push
mov
std
adc
pusha
call
push
jg
test
jbe
adc
push
sbb
and
cmp
je
xchg
mov
pop
xor
test
cmp
add
cli
pop
and
cli
xlat
je
cld
ret
in
iret
mov
lock
rorl
outsl
and
sbb
jb
dec
cltd
loopne
repz
nop
aad
lods
pushf
xchg
pop
sbb
cmpb
je
test
es
pop
lcall
mov
leave
sbb
arpl
or
add
sbb
pop
cmp
rclb
mov
push
fmuls
sub
add
jp
and
push
push
hlt
xor
push
lahf
fs
cmp
cmp
popa
fisubrl
ja
call
jecxz
mov
scas
les
lcall
sub
cs
lret
cli
dec
call
leave
jp
dec
add
mov
std
cld
les
xchg
in
push
imul
cmpsl
mov
aas
ds
sbb
cmpsl
or
push
out
xchg
pop
vphaddwq
jb
sub
cmpsl
loop
dec
faddl
rcrb
dec
movsb
std
ror
dec
jnp
dec
leave
test
dec
jae
mov
push
arpl
cltd
or
sbb
cltd
pop
and
inc
dec
loopne
std
sbbl
push
leave
pop
ja
jecxz
dec
out
cmpb
add
mov
je
xor
adc
mov
out
push
int3
dec
lcall
rclb
bound
bnd
xchg
add
jne
dec
jno
in
jne
jmp
sub
cwtl
pop
aas
mov
clc
xor
int3
cmp
les
jle
add
push
cs
mov
push
sub
and
rclb
dec
aam
dec
lret
jmp
push
ret
pushf
inc
dec
int3
jae,pn
mov
cmp
mov
sahf
in
cmpb
sbb
pop
sub
fistpl
xchg
insb
jnp
orb
data16
adc
sbb
inc
cmp
fstp
xchg
scas
pop
std
push
popa
dec
xor
ret
dec
jnp
sar
push
sahf
xor
es
jno
aas
adc
jbe
mov
cwtl
dec
pushf
or
adc
mov
xchg
and
xor
xor
fldenv
and
pop
cmp
push
sub
push
dec
and
lret
push
jns
adcl
dec
repnz
dec
dec
hlt
jmp
andl
jle
dec
mul
sbb
jecxz
data16
or
or
pop
test
mov
mov
mov
pop
shll
cld
mov
mov
lret
sub
add
lret
adc
ret
std
xchg
inc
jl
pop
enter
jp
inc
cmp
test
jl
mov
outsl
mov
cmovns
cmc
stc
sbb
add
pop
mov
std
sbbl
xor
mov
pop
in
loope
rcll
add
iret
mov
les
fcomi
push
mov
mov
repnz
mov
mov
or
xorl
into
inc
aas
lret
push
lock
gs
and
push
stos
rcr
mov
pop
ss
add
sub
aam
ss
incb
inc
sbb
cmpb
jb
cmp
mov
fwait
out
dec
nopl
mov
xor
mov
mov
lea
xor
mov
jmp
jmp
mov
jno
fwait
pop
push
icebp
rclb
popa
jno
lods
nop
or
jmp
iret
icebp
adc
andb
scas
cmpsl
jno
mov
scas
fisubrs
and
mov
or
iret
inc
pop
sbb
xor
mov
dec
cmpsl
int3
fstps
icebp
shl
mov
push
jae
movsl
mov
outsl
sbb
mov
mov
jns
push
repnz
lods
idivb
jmp
cmp
jbe
jp
clc
xchg
sub
mov
cmp
mov
pop
add
test
mov
xchg
movsb
hlt
movsl
insb
dec
add
out
movsb
sarb
push
mov
or
and
dec
dec
rolb
and
jmp
repnz
scas
negb
dec
in
push
jle
mov
pushf
xor
bound
cmp
xchg
xchg
mov
pop
inc
push
ficoms
ficoml
and
and
sarl
test
mov
push
shr
jnp
daa
jl
out
ja
jne
imulb
mov
hlt
andps
in
mov
add
subb
and
or
cmpl
into
in
mov
xor
inc
stos
repnz
ret
inc
pop
call
push
fs
fadd
imul
out
jle
xchg
leave
jae
cmp
faddp
mov
aaa
cli
std
sub
icebp
xchg
mov
imul
loop
sub
pushf
daa
sbb
pushf
xlat
adc
lret
inc
push
cld
sub
jle
dec
jae
in
ja
pop
insl
add
cmc
gs
addr16
test
push
or
pop
stos
push
arpl
add
popl
cmp
or
scas
arpl
or
ret
in
mov
test
rorl
jne
movsl
out
fcmove
xchg
in
shlb
addr16
push
aam
add
jae
aaa
frstor
mov
lret
xchg
xor
lods
fnsave
sbb
loope
dec
lcall
stos
stc
pop
jb,pn
cmpsb
testb
sbb
mov
cltd
mov
sbb
call
and
dec
les
pop
out
cli
aam
andl
sbb
subb
fs
pop
adc
pop
sbb
fistps
inc
pop
test
call
mov
ja
pushf
call
mov
mov
push
mov
xchg
sub
and
push
fldl
into
mov
inc
ss
sti
stos
sarl
ljmp
fincstp
fwait
pop
imul
loopne
push
sbb
cltd
les
mov
pop
lock
je
iret
jmp
cli
out
jl
mov
pop
xor
in
in
fwait
movsl
adc
fisttps
push
xchg
mov
shrb
inc
scas
xor
add
pusha
das
add
scas
lahf
fs
out
push
shl
xchg
push
gs
sbb
inc
pushf
test
adc
jg
mov
or
je
mov
mov
xchg
stos
and
push
imul
and
dec
pushf
repz
dec
pop
loopne
test
jb
mov
js
sub
loope
std
jecxz
or
push
in
aad
dec
fs
cwtl
insb
ficoms
pop
jns
push
or
movsl
sbbl
ret
rorb
loope
or
les
jns
or
push
in
jle
cltd
fildl
sbb
imul
punpcklwd
inc
repz
or
imul
pop
xchg
lcall
jne
ss
outsl
popf
xor
fmuls
jnp
int
daa
mov
pop
mov
and
aaa
sbb
pop
out
jno
push
dec
sti
and
push
cmc
dec
sub
in
dec
cmp
jb
roll
jl
loop
std
mov
and
mov
popa
push
mov
fwait
sbb
mov
pop
testl
nop
and
add
aaa
push
push
inc
pop
imul
and
dec
out
push
pop
xor
pop
push
mov
add
int3
rcll
fwait
cltd
int
mov
mov
shlb
imul
sbb
inc
xchg
jnp
lods
fwait
or
xor
or
movsb
mov
inc
std
stc
or
ss
push
xor
andl
adc
lods
divb
and
lcall
arpl
loop
jno
push
add
pushf
sbb
push
push
fcompl
loope
cmp
xchg
adc
mov
movsl
mov
sarl
sbb
pop
movsb
push
mov
fwait
mov
mov
inc
adc
mov
dec
mov
jno
test
mov
jmp
in
xor
sbb
adc
or
pop
or
push
and
lahf
cmp
sub
hlt
and
push
movsl
jmp
mov
mov
lret
mov
out
add
test
mov
jmp
or
mov
pop
mov
sub
pop
push
xor
dec
lods
out
mov
and
scas
mov
outsb
mov
pop
push
or
push
jecxz
frstor
les
sbb
push
jp
xchg
jl
dec
cmpl
inc
mov
jp
movsb
popa
testl
cwtl
xor
sbb
aaa
call
movsl
addl
cmpsl
lods
mov
sub
pop
in
loop
inc
lret
or
outsl
jmp
iret
push
repz
mov
inc
das
lods
lcall
xchg
jb
dec
out
bound
in
add
pushf
out
sbb
or
cmp
nop
mov
fidivrl
or
pop
ja,pn
xor
sbb
dec
aaa
cmp
ljmp
mov
xor
ds
pop
dec
mov
xor
inc
cs
lods
mov
cmpsb
push
jbe
mov
pop
ds
les
ss
add
les
add
shl
mov
sub
cmp
loope
jg
xor
push
mov
adc
pop
out
push
or
sbb
ficoml
roll
enter
jne
push
sahf
lahf
inc
mov
mov
aad
outsb
dec
pop
jecxz
enter
lcall
mov
cmp
add
pusha
mov
cltd
mov
fisttpl
leave
and
xchg
pop
add
test
dec
cmp
mov
push
lods
cli
insl
and
movsl
repz
pop
je
pop
js
mov
loop
dec
addr16
out
aas
sub
xchg
das
into
cmpl
pushf
scas
shl
test
cmp
loope
inc
lcall
cmp
in
inc
popa
push
or
lahf
jae
adc
scas
bnd
jns
js
jmp
cs
jne
outsb
out
sub
sbb
shrl
push
jecxz
into
fs
inc
sbb
adc
push
xor
jg
or
inc
pop
js
and
nop
fisttpll
mov
push
adc
into
daa
or
cmp
mov
gs
ficoms
sub
add
je
sbb
aad
cld
push
jmp
imul
popa
inc
addr16
fwait
jae
movsl
push
xchg
popf
cwtl
add
fucomip
out
mov
cmp
dec
lahf
cmp
mov
sub
push
lods
mov
mov
jae
pop
adc
inc
xlat
push
pop
jp
ret
lds
inc
pushl
cmc
leave
inc
dec
push
jecxz
cmp
cmpsl
add
adc
out
clc
xor
xchg
adc
mov
pusha
mov
addr16
sub
mov
mov
fistpl
out
cmpsl
jns
xor
dec
insb
jnp
scas
repz
incl
and
ret
movsl
inc
fwait
xchg
testb
cmp
lahf
jnp
mov
inc
nop
popf
cmc
mov
lods
mov
add
das
arpl
mov
imul
jg
cmp
push
mov
jge
ljmp
cli
add
mov
lds
sbb
pop
loopne
data16
testl
push
sbb
imul
insb
mov
mov
stos
adc
sbbb
lods
and
mov
mov
jl
dec
rcl
mov
into
hlt
ffree
cmp
push
jo
repnz
into
rol
js
sahf
dec
sub
lock
imul
mov
lods
pushf
cwtl
push
sti
mov
push
xchg
ret
xchg
orb
clc
orb
mov
or
shrb
adc
jae
aaa
mull
les
push
cmp
push
ret
sbb
cwtl
push
sahf
adc
mov
xchg
inc
jp
jb
ljmp
bound
imul
jge
xor
push
test
mov
fmull
out
arpl
fcmove
pop
mov
mov
dec
in
cltd
xchg
pusha
andl
loop
push
lcall
in
adc
ret
sahf
cltd
mov
adc
lcall
push
inc
ds
mov
add
and
and
cmp
in
inc
das
pusha
pop
ljmp
aam
in
push
or
psraw
or
outsb
or
les
jnp
push
pop
mull
aam
out
into
mov
mov
aam
mov
clc
mov
push
jmp
cltd
xchg
sub
add
push
outsb
lods
es
jecxz
shrb
xchg
lds
push
dec
xor
jb
roll
jle
in
sub
icebp
pop
cmpsb
jo
ljmp
push
add
popf
jne
pop
sub
add
adc
inc
jp
inc
add
movsb
cmp
xor
mov
sub
sbb
and
xchg
lds
fsubrl
dec
lea
cmpsb
rcll
xor
in
jg
insl
out
lods
idivl
pop
insl
lcall
mov
ljmp
fldcw
push
cmp
xor
stos
cmp
adc
and
lods
sub
rolb
fisttpll
sbb
jns
jmp
popa
mov
arpl
xlat
adc
xchg
push
int
fists
iret
inc
xchg
mov
add
sbb
test
pop
cmpsl
mov
xlat
or
movsb
fwait
aad
push
xchg
rcl
sbb
inc
jo
data16
add
ret
jmp
shlb
arpl
adc
push
fwait
test
lahf
mov
test
jbe
das
mov
cmp
xor
fldt
push
push
loop
out
repnz
jno
ljmp
cmpsl
je
jp
cwtl
mov
xchg
cmpsw
divb
pop
insb
add
lods
pop
sbb
rcll
int3
or
mov
push
mov
ror
idiv
sbb
jle
xchg
sub
mov
jb
jmp
jp
adc
or
rorl
lcall
ds
xor
add
repz
and
mov
shr
cmp
cltd
sub
pop
sarb
sti
mov
pop
cltd
pop
xor
int3
push
dec
pop
add
xor
push
lcall
mov
int
xor
clc
jo
or
mov
divb
fbld
jno
jg
or
imul
push
sub
xchg
sub
jb
inc
lds
pop
mov
dec
jo
and
fdiv
int
std
ss
data16
push
aam
mov
or
rol
jl
jnp
pop
xchg
inc
jns
js
jae
sbb
adc
pushf
add
cmc
bound
or
sahf
gs
or
lahf
bound
push
lret
and
int3
inc
nop
les
xor
pop
cmp
ljmp
xor
mov
mov
mov
incl
push
inc
int
hlt
leave
jb
ret
loop
test
xchg
jle
stc
in
lret
dec
idiv
repz
out
fabs
ret
sub
xchg
mov
and
insb
cmp
in
dec
adc
nop
push
mov
cmp
adcb
scas
push
fcompl
push
push
insb
fimuls
mov
push
push
jo
or
dec
jbe
inc
or
in
sti
popf
jb
pusha
mov
sbb
insl
aas
insb
out
add
pushf
push
subl
and
das
adc
fmuls
sbb
lods
loopne
xor
mov
and
fstpl
les
dec
dec
lock
jne
sbb
imul
mov
mov
outsl
fildl
mov
push
add
outsl
xchg
xchg
adc
or
sbb
lahf
xchg
inc
test
ret
mov
add
mov
add
aaa
fidivrl
sub
mov
mov
les
ret
sub
out
jge
inc
jne
inc
xor
dec
jae
loopne
push
mov
mov
loop
imul
lea
outsb
enter
inc
push
xchg
cmp
dec
mov
pusha
mov
out
out
fistps
or
pop
ret
dec
into
cmp
ret
dec
xor
push
ret
mov
bound
in
push
xlat
pop
popf
push
je
push
xor
ret
adc
jbe
ss
cmc
sub
scas
lahf
scas
and
adc
out
icebp
push
add
jmp
xorl
dec
mov
mov
stc
lock
adcb
cmp
xchg
icebp
cld
fcoml
cmp
insl
insl
mov
dec
loop
xchg
pop
push
movsb
les
imul
pusha
cmp
ss
icebp
mov
add
cmp
jle
cmp
cmp
fst
pusha
hlt
add
enter
cwtl
das
lock
sbb
or
sbb
loop
out
addr16
xchg
nop
subb
jecxz
mov
xchg
addb
testl
ss
mov
cwtl
mov
ficoml
sub
into
inc
movsb
aad
ss
dec
lds
mov
ds
jno
pop
movsl
and
sbb
cli
sbb
insl
xchg
push
cwtl
fwait
lds
pop
testl
shl
xchg
or
subl
aam
cmp
mov
push
or
fstpt
mov
daa
aad
outsl
push
cltd
leave
xchg
shll
mov
mov
fdiv
lcall
xor
sbb
cmpsl
arpl
leave
lahf
popf
jge
push
jno
lods
outsl
mov
add
das
inc
cmp
fs
ja
mov
aam
push
pop
rolb
cs
lret
pop
and
int
push
ss
lret
jg
int3
jecxz
int3
mov
mov
sbb
inc
push
jecxz
movsb
in
insl
mov
in
addr16
sbb
pop
pop
mov
mov
outsl
jnp
mov
test
stos
mov
xchg
dec
dec
pop
pop
xor
imul
lret
dec
repz
jp
imul
out
outsb
in
pop
ljmp
mov
loope
sahf
lcall
or
mov
cmc
add
jg
push
mov
mov
sub
mov
pop
inc
inc
fxch
mov
inc
lock
add
ljmp
and
bound
jb
pusha
in
jmp
outsl
xchg
xchg
insl
call
add
or
adc
xchg
pop
int
das
sub
out
inc
jge
mov
pop
jns
daa
mov
stos
and
lret
inc
dec
in
iret
loope
les
dec
test
enter
push
ja
inc
and
adc
mov
lds
and
sub
adc
xchg
push
adc
sbb
cmc
sbb
add
pop
pop
xor
pop
jle
add
adc
cmp
lahf
add
pop
mov
push
aaa
fwait
cmp
xchg
lcall
mov
xor
mov
sub
and
xchg
lods
loope
fst
adc
addb
cmp
cmpsb
adc
andl
repz
mov
sub
jmpw
arpl
repnz
ss
push
jle
ror
jmp
pop
pusha
clc
gs
sbb
and
mov
insl
mov
call
in
test
cmp
loopne
andb
je
lock
fsubrs
shll
lods
push
push
sub
lods
enter
pop
pop
into
pop
mov
and
cmpb
cmpsb
mov
sti
shll
add
cmpsb
mov
addr16
loope
movsl
mov
cwtl
faddp
mov
loopne
rorb
sbb
mov
cmp
mov
arpl
pop
test
out
mov
sarl
xchg
out
mov
pusha
enter
cmp
insb
cmp
je
scas
dec
std
adc
mov
scas
fwait
popa
iret
sub
xchg
push
inc
pop
sbb
fwait
pop
xor
aam
in
add
aam
fsubrl
imul
lret
icebp
push
mov
dec
and
out
sub
inc
mov
push
cmp
shlb
fldenv
ja
mov
mov
repnz
loopne
sahf
jle
data16
sbb
rolb
adc
fsub
adc
add
sub
add
mov
xor
cs
sub
sub
in
mov
sbb
popl
jnp
lret
or
push
xchg
push
jl
out
dec
ja
mov
and
mov
sbb
lods
jle
or
aad
daa
test
arpl
mov
mov
loopne
mov
insb
aaa
aam
inc
cli
pop
pop
pop
jle
xlat
js
fwait
sbbl
jl
leave
sbb
sub
ret
ss
adc
int3
std
jae
leave
jno
imul
insb
ss
sbb
sbb
lahf
xchg
or
test
pop
dec
lret
aam
sub
pop
push
fdivs
and
sbb
in
pop
dec
scas
pop
in
and
inc
jnp
mov
rclb
mov
and
rorl
outsl
xor
call
imul
out
add
sbb
add
jo
add
je
ds
outsb
mov
add
cmp
xchg
jns
aaa
mov
push
sub
mov
and
mov
and
iret
fstps
fdivrl
push
push
pop
dec
mov
xchg
outsb
mov
mov
stos
jne
xchg
sub
ljmp
add
nop
jnp
mov
pop
add
inc
orl
cld
sub
sbb
and
ret
and
fcmovnu
repz
pop
push
dec
pop
cli
jg
std
inc
fsubs
shll
inc
imul
arpl
lcall
xchg
sahf
adc
ficoml
iret
mov
rolb
in
sbb
clc
pop
hlt
jb
mov
mov
push
and
push
adc
shlb
jno
dec
into
lcall
std
pop
shll
pop
xor
jno
and
call
push
adc
xchg
sub
lcall
mov
xor
xor
or
add
lods
dec
and
jns
mov
hlt
pop
xor
dec
xchg
dec
cld
lock
lret
popa
pop
jle
cli
add
out
imull
popa
in
pusha
gs
push
call
add
out
mov
add
mov
add
jno
xchg
sub
cmpsl
outsb
scas
push
fsts
and
cmp
ficoml
sub
add
pushf
pop
push
aaa
pop
pushf
addr16
jp
imulb
push
hlt
sarl
in
imul
jmp
data16
fwait
das
dec
imul
inc
mov
cmp
mov
jmp
and
sub
pop
call
out
shlb
lock
lahf
sub
cmpsb
stc
inc
dec
jecxz
pop
sarb
mov
inc
xchg
add
cmp
loope
sbb
sub
or
xchg
inc
mov
cmp
adc
shrd
testl
lods
cmp
push
lahf
into
mov
out
dec
mov
ret
lahf
dec
dec
sbb
dec
push
push
cmp
push
inc
and
outsb
xchg
cmpsl
mov
ljmp
sub
jne
lds
outsl
pop
std
xchg
pop
out
mov
mov
push
fcmovnu
fdivrl
xor
sahf
imul
pop
dec
in
daa
xchg
js
push
lret
or
in
scas
jns
aaa
lcall
add
cmp
cmpsb
push
cmc
sub
xchg
xor
cmp
leave
xor
imul
lret
push
fiadds
xor
inc
enter
mov
pop
ja
lea
rcll
mov
iret
jecxz
push
lds
ret
movsb
jb
sti
pop
push
jl
mov
jle
pop
lock
jno
fs
and
cmc
dec
xchg
aad
aas
divb
jne
add
cmp
cmp
mov
mov
adc
adc
fdivl
lahf
mov
pop
les
push
fisttpll
addr16
int3
loope
fistps
out
js
fbstp
adc
loopne
dec
add
mov
push
je
mov
js
cmp
mov
icebp
add
lods
cli
push
enter
fsubl
sti
push
fistpll
pop
movsl
hlt
cltd
inc
push
arpl
pop
jno
xabort
int
data16
inc
adc
sahf
in
jae
mov
adcl
iret
jmp
jbe
mov
out
push
sbb
mov
dec
ret
repz
lcall
mov
mov
mov
rorl
fdiv
inc
lret
xor
jnp
or
push
jmp
cmp
inc
cmp
pop
jns
lret
push
daa
jb
out
je
sti
jmp
fs
lock
lods
add
andb
add
add
cld
test
xor
leave
aas
nop
lahf
out
aaa
dec
aad
sbb
ror
push
add
rol
jae
inc
clc
mov
imul
ss
andl
test
pop
mov
je
lods
push
ret
add
sbb
adc
cmp
aaa
jnp
xchg
push
cmp
pop
add
call
mov
xchg
dec
sbb
movb
dec
jns
adc
xchg
jmp
lds
rcrb
idiv
xchg
adc
push
adc
push
movsl
xchg
sub
sbb
mov
sbb
and
movb
sbb
mov
addr16
pop
cmc
loope
imul
aam
lahf
testl
adc
mov
xor
lods
aad
and
xor
xor
xchg
lods
mov
cwtl
xor
out
xchg
invd
sbb
mov
js
dec
out
ss
cmpsl
lods
lret
or
ja
pop
repz
hlt
inc
cmpsl
and
sarl
mov
inc
mov
mov
data16
cmp
fsubr
xchg
enter
push
mov
loope
inc
mov
inc
mov
test
push
repz
xor
iret
jo
incl
sub
sbb
pop
test
roll
inc
pop
xlat
mov
push
push
icebp
dec
movb
imul
jmp
scas
pop
out
sbb
jecxz
push
aam
data16
test
lea
adc
negb
mov
xchg
test
or
and
mov
test
and
and
xlat
sub
dec
push
ficoms
adc
jp
repnz
fisttpl
xor
leave
or
call
incl
cld
jg
in
sbb
jle
and
cmp
fisttpl
xchg
popa
ds
inc
pop
out
pop
cmp
icebp
sti
inc
test
cmp
pusha
mov
callw
push
bound
imulb
and
xlat
les
cmp
mov
scas
out
mov
sub
adc
bound
and
lcall
dec
and
xor
cmp
shl
pop
inc
dec
jbe
dec
ret
gs
ret
adc
mov
push
mov
push
rorb
dec
adc
jns,pt
xorl
and
rolb
xlat
pop
call
ja
inc
mov
aaa
ljmp
addr16
inc
insl
ror
inc
inc
inc
std
enter
test
sub
testl
loopne
repnz
dec
in
ds
and
adc
mov
push
push
das
hlt
mov
and
pop
out
sbb
jb
es
aad
aaa
dec
outsl
push
and
push
dec
fisttpll
push
adc
xchg
jae
dec
push
fstpl
sbb
add
popf
xchg
mov
and
cmp
adc
mov
cmp
sub
test
xor
hlt
bound
dec
fwait
push
test
xor
fidivrs
xchg
enter
pop
cmc
add
adc
loope
addb
mov
push
out
inc
out
test
or
loopne
sbbl
leave
mov
leave
jmp
stos
mov
pop
sub
xor
jo
sbb
jg
popa
rcrl
dec
xorl
imul
movsb
push
jle
shrl
sti
pop
xlat
add
and
xor
jnp
sbb
sbb
stc
popa
xchg
inc
adc
xchg
imul
lock
inc
lret
into
mov
jle
gs
outsl
aad
cmc
data16
xchg
stc
hlt
push
scas
daa
out
push
sbb
add
rcrw
fmuls
inc
in
inc
fwait
in
addl
lahf
jne
rolb
jae
test
enter
mov
xchg
gs
rolb
je
shlb
pusha
test
scas
lcall
clc
mov
pop
stos
stos
cmovae
call
mov
iret
or
into
mov
out
testl
push
cwtl
sub
jl
stc
add
pop
push
push
fwait
daa
xchg
push
push
jnp
lock
mov
xchg
das
mov
push
mov
mov
xor
ja
pop
sbb
gs
dec
fists
fs
out
rolb
test
sahf
test
outsl
stc
mov
cmpsl
aaa
sbb
cmp
or
sub
adc
lret
mov
add
add
pop
mov
cmpsl
xchg
pop
in
sub
cmpsb
fadds
adc
xchg
push
das
pop
jp
lret
and
test
pop
outsl
mov
jo
sbb
insb
cmp
addr16
push
mov
enter
jo
pop
ja
cmp
mov
data16
adc
movsb
movsb
push
into
sub
and
cmp
xchg
test
sarb
mov
enter
sub
sub
test
or
enter
cmp
mov
cmpsl
and
jnp
inc
repz
hlt
into
nop
adc
dec
into
addr16
and
fildll
mov
xchg
movsl
jo
push
push
cmp
fsubl
loopne
inc
pop
jge
lock
mov
push
jae
popa
xchg
pusha
loopne
add
mov
sub
mov
mov
lock
scas
clc
subb
test
mov
xchg
push
jp
scas
adc
lret
xor
or
fisubrs
bound
lock
sti
and
enter
ret
dec
in
jecxz
mov
push
clc
ljmp
mov
push
xchg
inc
xchg
aas
mov
ret
mov
stos
test
push
sub
lods
adc
addr16
push
mov
add
shll
mov
jle
ret
inc
ret
inc
xchg
mov
add
xor
xor
jmp
adc
sub
fmuls
cmp
clc
adc
mov
hlt
cvttps2pi
cmp
mov
ret
dec
hlt
push
inc
imul
pop
dec
rcll
loopne
bound
shrb
loope
ret
cli
mov
js
push
sti
xchg
jne
repnz
or
cwtl
out
out
pushf
fwait
add
xchg
sahf
bound
test
ds
cmp
xlat
ror
pop
push
or
mov
fwait
mov
sub
pop
jns
push
push
iret
mov
inc
dec
sti
filds
push
mov
shr
cmc
add
add
mov
ljmp
loope
mov
sbb
enter
mov
lods
aaa
cmp
mov
and
movsb
and
mov
sub
addr16
rcl
cltd
aam
xchg
jle
into
jnp
sub
ljmp
imul
sub
out
push
movsl
adc
xchg
adc
mov
mov
add
sub
clc
xchg
pop
mov
cs
dec
andb
inc
mov
dec
inc
jb
inc
mov
stc
in
or
fs
inc
push
add
fistl
fcmovnbe
push
subb
xchg
add
inc
mov
fdivr
sub
push
mov
test
stos
inc
call
cltd
add
or
pushw
dec
scas
xor
in
in
test
fwait
and
rcrb
or
sub
mov
sbb
mov
mov
jle
scas
jge
inc
daa
inc
mov
pop
fld
fcoms
push
into
leave
cvtdq2ps
add
inc
mov
mov
push
repnz
or
nop/reserved
mov
xor
sbb
pop
subb
jns
mov
pushf
arpl
cmp
cmovp
adc
mov
outsb
and
xor
aas
test
and
es
inc
pop
scas
inc
inc
push
mov
fidivrs
jb
ret
xchg
ljmp
out
icebp
inc
cltd
cli
jne
adc
in
js
mulb
mov
sbb
add
push
fs
jecxz
mov
sub
ss
sub
aas
sahf
je
push
movsb
pop
jl
jae,pn
push
inc
jae
lcall
dec
inc
mov
jg
push
push
int3
out
bsf
out
mov
cltd
setle
xchg
fwait
pop
insl
jns
mov
cld
mov
fmuls
popf
xchg
add
and
bound
out
jge
insb
sahf
pop
inc
test
rcll
movsb
adc
adc
out
dec
inc
fnstsw
cmp
mov
jnp
jle
ja
bnd
ljmp
pusha
pop
fisubs
push
mov
and
pushf
ret
inc
into
xchg
sti
inc
pop
jg
nop
lock
je
xchg
jmp
mov
imul
add
cmp
aas
orl
mov
xor
mov
sub
sub
int
add
pop
lret
dec
xchg
pop
ret
or
inc
mov
add
jl
push
icebp
cmp
jne
push
out
xor
bound
fwait
mov
repnz
lods
mov
and
inc
add
inc
jmp
mov
dec
stos
outsl
cmc
add
in
test
in
xchg
mov
fisttps
into
jno
and
roll
and
inc
dec
fsub
lds
and
shl
mov
stos
pop
sbb
cmp
xlat
in
dec
dec
ljmp
mov
xor
add
jb
xchg
ja
in
outsl
jp
sbb
inc
xlat
mov
adc
jge
push
jno
sbb
add
ss
sbb
pop
cmpsl
mov
movsb
test
sub
outsl
fstl
lds
xor
stos
loop
outsb
dec
cmpsb
inc
xchg
jg
jns
cmc
or
imul
sahf
out
shrb
arpl
xchg
mov
mov
pusha
mov
mov
pop
add
cmp
shl
xor
popa
cmpsb
shlb
xlat
sub
frstor
loopne
mov
push
mov
mov
jb
ret
stos
fwait
sbb
nop
ja
push
sub
out
jo
addr16
xor
pushf
or
pop
xorl
mov
int3
rolb
mov
jmp
and
andb
and
inc
mov
lods
int
cltd
es
jg
ret
add
lds
jo
in
pop
or
mov
in
mov
jl
push
mov
mov
add
cmp
mov
scas
hlt
push
add
icebp
loopne
lret
mov
xchg
mov
sbb
iret
clc
jne
sarl
cmp
repz
jo
mov
sbb
xchg
out
loop
pop
lock
mov
test
inc
mov
cmp
lret
movsb
daa
stos
in
imul
shl
loopne
adc
sahf
adc
jg
dec
and
arpl
push
pushf
mov
jg
xor
test
jl
adc
loop
pusha
or
lcall
repz
dec
or
loopne
mov
hlt
xor
xchg
ja
repz
or
ja
push
ja
fldl
push
xchg
js
lret
mov
inc
lds
jle
mov
jno
cltd
fs
xchg
sub
shll
sbb
pop
xchg
pusha
mov
or
cmp
or
dec
mov
test
jns
scas
roll
and
push
push
lock
mov
dec
fidivrl
pop
int
dec
test
fs
imul
mov
loope
mov
outsl
or
arpl
push
in
mov
pop
mov
dec
xchg
pop
jbe
and
pusha
mov
js
repnz
int3
xchg
sub
pop
pop
sub
test
xchg
enter
out
or
pusha
mov
js
adcb
outsl
aaa
mov
je
sbb
sub
xchg
sahf
sbb
adc
jge
or
mov
out
pop
mov
movsl
xor
dec
push
xor
shlb
test
push
aam
jecxz
mov
sub
arpl
cmp
mov
cmp
call
xchg
repnz
jmp
add
loopne
cmp
mov
jl
xchg
imull
jecxz
add
cmp
sub
cs
in
cld
xchg
and
mov
aas
fisubs
jne
ret
or
dec
xor
and
nop
nop
testb
xchg
jp
dec
add
enter
adc
loope
xchg
mov
or
add
push
and
add
dec
movsb
mov
ljmp
lea
loop
and
cli
insl
jmp
or
inc
xor
adc
insl
fisubs
inc
gs
jle
add
inc
push
call
in
lea
in
add
jge
gs
test
mov
add
lods
inc
bound
movsb
inc
fs
jle
in
and
dec
pop
fisttpll
loope
out
push
in
subl
pop
repnz
inc
or
out
pop
popa
and
addr16
cs
adc
enter
cmp
xchg
cmpsb
aad
xor
sbb
fcom
mov
lods
lret
cmpsb
fnsave
das
pop
xlat
pop
imul
push
aaa
push
sbb
popf
enter
es
mov
iret
testb
dec
test
pushf
xchg
idivl
repz
mov
dec
imul
arpl
sbb
jnp
cwtl
adc
or
jno
mov
push
add
xchg
aas
cmp
mov
test
out
cs
sahf
sbb
rclb
or
mov
lea
xchg
mov
arpl
mov
sbb
dec
xchg
mov
mov
sti
add
jl
adc
cmp
jecxz
mov
scas
fisttpll
mov
jae
ret
jbe
jmp
rcrl
popa
mov
imul
pop
cwtl
setns
sbb
xchg
jmp
fmull
insl
push
xchg
xchg
lods
and
cld
int
inc
or
mov
inc
push
mov
mov
xor
mov
mov
movsb
sar
shlb
ret
and
xchg
lret
aam
lea
repz
jle
cwtl
mov
hlt
outsb
mov
sbb
sub
fcoms
or
call
adc
xlat
mov
sub
inc
xchg
jp,pt
std
sub
jmp
scas
and
outsl
mov
jns
gs
mov
jns
imul
jo
mov
mov
test
push
in
inc
in
insb
int3
push
sbb
iret
out
pop
push
addr16
xchg
xorb
mov
pop
loop
mov
push
adc
jne
scas
mov
mov
dec
mov
jns
push
data16
rclw
arpl
int
sbb
into
mov
xchg
dec
imul
sarb
outsl
mov
xor
aaa
cmc
cs
sub
and
and
mov
adc
mov
mov
add
bound
and
sbb
insl
jp
aaa
repz
lret
aad
pop
in
rorb
jnp
push
mov
or
sub
adc
mov
xchg
negb
ds
sbb
push
add
lahf
nop
sbb
fwait
xor
aaa
or
je
mov
cmp
cmp
cmpsl
jge
pop
daa
lahf
cmpsb
push
push
xchg
lcall
push
cwtl
mov
repnz
shl
jecxz,pt
cli
lcall
lahf
test
sbb
clc
cwtl
loop
pushf
mov
adc
popa
rclb
ffreep
mov
les
push
jae
andl
dec
int
movsl
fwait
iret
daa
dec
pop
pop
call
dec
es
lret
lea
sahf
xlat
in
pop
insl
out
cmc
pusha
sahf
outsl
icebp
mov
test
pop
mov
sbb
pop
out
mov
adc
stos
xchg
add
mov
sbb
pop
stos
ja
mov
xchg
xchg
cs
or
jnp
loopne
mov
pop
pop
rorb
push
cmc
lock
cmp
jne
fldcw
adc
insl
inc
rol
jne
shr
xchg
or
stos
push
xchg
fwait
adcb
or
in
jle
inc
adc
cmp
and
xor
xchg
sub
mov
xor
rcrb
shll
dec
or
inc
jmp
in
fmuls
xchg
popf
jns
int
fdivrp
fs
jle
stc
add
enter
push
in
mov
fsubrl
or
daa
mov
and
inc
and
inc
pop
mov
insl
into
scas
pop
xlat
pop
scas
pop
lret
repz
je
xchg
ljmp
jecxz
push
adc
fsubs
outsl
adc
and
mov
imul
in
idivb
jae
ljmp
xchg
pop
popa
lods
lds
inc
fistpl
lods
xchg
loop
jg
aaa
jo
push
insl
or
sarl
jmp
or
dec
stc
out
fsubrl
xor
inc
stc
loopne
add
popa
xor
xchg
sbb
push
mov
mov
mov
lret
or
ss
or
int
shlb
push
fisttpll
jne
inc
faddl
stc
dec
ds
inc
sti
inc
xchg
nop
push
jg
mov
push
sbb
fiaddl
pop
lret
adc
mov
out
mov
fldt
jmp
mov
cli
and
xchg
pop
icebp
xor
lret
cli
imul
sbb
jge
dec
push
xchg
out
xchg
pushw
push
mov
mov
nop
ficoms
push
sbb
mov
fnsave
mov
in
aaa
bound
sbb
data16
not
or
jge
sar
push
xchg
inc
test
mov
enter
gs
in
scas
iret
cli
icebp
in
xor
mov
imul
fs
mov
sbb
xchg
mov
adc
add
cmpb
fdivl
push
mulps
into
xchg
cmp
mov
lock
rorb
lret
sub
int
leave
imul
sbb
test
xchg
out
imul
std
push
or
push
movsb
lock
xchg
push
mov
xchg
sub
add
cs
jecxz
mov
ffree
movsl
pop
in
jns
sbb
adc
xchg
inc
or
jl
ja
jbe
mov
mov
std
out
cmpsb
sbb
adc
jle
sub
push
cmp
jne
mov
ja
loope
mov
loope
pop
dec
movsl
xchg
push
gs
cmpsb
sub
dec
cmp
push
push
imul
jno
jns
fcoms
jae
divl
stc
std
fwait
in
jmp
cwtl
push
bound
cltd
in
jo
pop
call
or
xor
inc
xchg
inc
fs
leave
les
movsl
das
rclb
and
shll
fisubl
les
dec
stc
jmp
inc
int3
dec
inc
stc
jnp
in
ret
imul
fldcw
clc
lahf
xchg
test
test
add
ss
mov
mov
rcrl
test
ret
xor
pop
push
enter
and
movsb
js
ljmp
xlat
sti
shlb
iret
clc
ret
shl
jnp
andl
or
sub
enter
sahf
repz
mov
dec
mov
int
mov
mov
cmc
cli
fldl2t
mov
sub
ret
lcall
mov
ss
dec
xchg
imul
or
lock
sahf
int
test
icebp
repnz
pusha
ficoms
xlat
add
icebp
pop
loop
shlb
mov
dec
pop
xchg
icebp
shlb
dec
das
adc
or
push
shll
pop
cmp
jb
sbb
or
push
pop
js
dec
loope
lods
inc
in
stos
int
cmp
mov
testb
push
jb
repnz
aam
cli
sbb
add
orb
cwtl
mov
add
inc
mov
or
mov
hlt
scas
popa
in
pop
inc
sbb
dec
and
fcmove
push
call
movsl
stc
inc
test
fs
repnz
mov
mov
dec
or
xchg
cltd
pop
mov
fidivrl
cmp
mov
push
and
aaa
add
stc
aam
adc
in
in
addr16
sub
out
sub
in
dec
fs
daa
cld
in
sub
xor
sti
or
pushf
pop
ljmp
daa
sahf
adc
jp
xor
repz
or
scas
mov
mov
adc
xor
sub
push
add
jns
mov
xchg
ljmp
rclb
neg
dec
iret
int3
jmp
ret
jns
push
jp
pushl
div
enter
hlt
loop
insl
lahf
addb
fldt
pop
adc
add
out
imulb
cwtl
pop
and
and
divl
jae
pop
hlt
xor
xor
or
rcrl
or
push
jmp
fwait
pop
loope
dec
call
jb
pushf
idiv
test
in
mov
fwait
lahf
adc
or
adc
stc
mov
cmp
cmp
xlat
mov
mov
dec
pop
or
lcall
sbb
clc
mov
xchg
out
and
test
popf
cmc
test
std
sub
push
fwait
cld
jne
lahf
jno
mov
popf
jg
es
or
loope
xchg
fstpl
popl
push
movsb
xor
inc
test
mov
scas
fbstp
lahf
xor
cmp
rcrb
xchg
and
leave
cltd
jns
daa
bound
jl
repnz
mov
or
nop
jmp
outsl
mov
or
test
add
xchg
dec
mov
or
inc
xchg
or
cmp
icebp
xor
jbe
in
cmpsb
movsl
mov
daa
repnz
dec
push
rcr
mov
dec
add
cmpsb
lret
cltd
push
mov
ljmp
jnp
sub
leave
or
adc
xchg
mov
psrlw
pop
lcall
cmpsb
dec
jb
fdivs
fstpl
inc
out
into
dec
xor
push
jnp
sarl
repz
adc
lods
push
data16
sbb
mov
fidivrs
push
pop
int3
lods
stos
out
cmpsb
pop
xlat
mov
int3
xchg
push
pop
ss
and
imul
int
mov
dec
add
lret
pop
lods
std
dec
cmp
jg
in
repz
gs
subb
pop
dec
out
testb
dec
or
mov
mov
cmp
fs
jo
js
test
dec
mov
pop
mov
add
daa
mov
divl
pusha
shl
ljmp
cmp
repnz
insb
push
loop
add
out
xchg
xlat
pusha
mov
push
int3
sbb
xor
dec
mov
inc
pop
outsb
mov
mov
out
je
sub
mov
pop
push
dec
popf
fucomip
push
call
dec
test
in
js
aaa
mov
pusha
push
icebp
sbb
lcall
cmp
test
or
xchg
or
cmp
mov
or
push
and
cs
mov
call
ffree
js
pop
out
andl
jno
divb
mov
in
inc
xor
mov
or
insl
inc
mov
insw
jl
mov
lret
jg
cli
mov
lea
mov
mov
scas
mov
sbb
es
lea
and
enter
pop
rol
push
divl
add
and
shlb
in
jb
jae
bound
test
sbb
cwtl
gs
push
push
rorl
sbb
mov
in
sub
jo
stos
push
sub
into
int3
pop
clc
adc
dec
adc
movsl
mov
sub
test
mov
add
stc
test
insl
dec
mov
pop
pop
or
cmpsb
pop
rcrb
aad
fidivrs
pusha
xchg
mov
mov
mov
cli
and
mov
mov
stc
fidivl
jecxz
mov
pop
inc
popf
rcrl
jle
jg
adc
mov
fimuls
jp
xchg
inc
xor
ja
push
mov
dec
xchg
xor
lea
xchg
bound
or
in
mov
pop
cmp
add
lods
cmp
pop
fldt
and
and
out
mov
mov
les
lods
sti
inc
mov
add
jp
mov
clc
outsb
aaa
bound
jne
add
cld
jp
sbb
out
add
push
loop
mov
subb
xchg
sub
jbe
and
data16
bound
cmc
es
out
xlat
loope
jno
shl
push
dec
jbe
pop
add
xchg
lock
push
jo
pushf
push
inc
scas
rorb
adcb
add
jno
xchg
push
cmp
or
adcb
dec
lock
int
inc
in
or
ret
dec
dec
flds
movsl
pop
fistps
pop
rolb
push
mov
sar
jb
pusha
subl
dec
cmc
sub
cmc
add
pusha
sbb
pushf
push
push
fwait
xchg
or
scas
shll
push
imul
addl
pop
mov
std
jge
xor
cmpsb
arpl
call
nop
repz
dec
jmp
sub
mov
test
mov
shr
faddl
sub
adc
in
push
mov
lret
fmul
in
ret
or
cmp
xchg
sub
mov
fdivr
jge
nop
push
ja
lret
xor
jae
adc
inc
push
repnz
dec
dec
shr
jecxz
mov
cmp
add
popf
cmpsl
cmp
in
mov
in
test
adc
xor
mov
test
dec
ds
mov
mov
in
fsub
out
pop
cmpsb
es
push
pop
or
mov
incb
and
out
jo
xor
leave
in
repz
sbb
popa
call
dec
xchg
adc
jg
adc
popf
or
mov
mov
mov
mov
mov
xor
adc
scas
xor
pop
mov
and
add
inc
jb
iret
adc
inc
fdivs
inc
pop
arpl
mov
call
popa
outsb
push
push
cld
popf
adc
push
addr16
add
adc
add
mov
dec
aaa
mov
cltd
cmpsb
jnp
xchg
mov
and
inc
adc
xor
call
pop
sub
mul
push
jb
cmc
sub
add
mov
rorb
sbb
call
mov
sbb
into
pop
fsubrl
out
xchg
es
inc
popf
push
orb
jg
push
fadds
stos
jnp
xor
mov
push
or
sahf
sbb
bound
rorl
sub
sbbb
lds
adc
fbstp
xchg
cmp
push
inc
sub
mov
les
mov
pop
stos
es
test
hlt
inc
cs
mov
sahf
rcrb
notb
adc
push
push
jl
popa
inc
xchg
loopne
mov
je
jl
sbb
inc
adcl
adcl
arpl
pushf
arpl
daa
rcll
cli
jp
xchg
stc
out
leave
mov
aaa
movsl
mov
mov
and
dec
iret
fists
jl
dec
insl
sti
jge
rol
inc
cli
lds
cld
or
in
jmp
cmc
scas
ret
push
in
pushf
push
bound
mov
xchg
mov
cmp
mov
cmp
mov
aas
adc
daa
and
loop
int
movsb
mov
jle
sub
inc
insl
ret
jo
rolb
aaa
xchg
popf
inc
fcom
fwait
out
adc
sbb
mov
mov
dec
pop
jae
xor
jle
fsts
std
das
ss
jno
and
and
cmpsl
xchg
push
jno
pop
call
nop
dec
gs
movsb
pusha
les
shl
aas
dec
mov
icebp
cld
xor
jno
lea
jg
and
mov
pusha
adc
insb
xor
sub
or
push
dec
push
fsubrl
pop
fdivl
xor
mov
adcb
cld
xlat
je
push
lahf
aam
adc
inc
fwait
mov
cmp
mov
loope
pop
add
in
sbb
cs
andl
mov
mov
push
cmp
adcl
xor
mov
and
mov
pop
and
and
in
fdivp
sub
adc
xor
push
inc
shl
les
dec
ret
jno
adc
pusha
pop
adc
sbb
movsb
lret
fstpl
or
adc
pop
rolb
mov
leave
mov
mov
data16
mov
xchg
dec
jg
and
mov
pop
dec
into
pop
stos
push
dec
test
aad
xchg
mov
insl
stc
sbb
jae
sub
and
fnstsw
lods
loopne
and
xchg
dec
xor
out
adc
jo
dec
mov
jl
dec
xor
repz
fcmovne
xor
mov
test
mov
testl
into
cmc
pop
sarl
sti
mov
out
negl
cmp
fucomip
test
sub
xchg
jnp
or
adc
adc
enter
stos
imul
mov
mov
mov
xor
push
out
mov
xlat
cwtl
sub
inc
cmc
jne
addl
sti
push
cmp
lcall
gs
ja
lahf
nop
imul
mov
call
push
leave
dec
xchg
idivb
shll
les
in
insl
push
push
cmp
mov
sub
xchg
cmp
dec
pop
iret
addr16
mov
inc
jecxz
sti
clc
xor
cmpsb
lahf
lcall
int3
mov
popa
movsb
fwait
xor
mov
xor
add
dec
pop
jl,pt
push
fwait
jp
xlat
add
pushf
push
std
aas
mov
xlat
into
sub
push
add
js
jge
fists
adc
cmp
dec
or
outsl
push
shl
sbb
pop
cmp
sahf
jmp
pop
fldl
mov
ljmp
xchg
jo
lahf
int3
sbb
xchg
lret
mov
int
in
ret
cmp
fwait
xor
and
jbe
dec
sub
mov
daa
inc
dec
pop
push
or
inc
or
mov
xlat
sete
jl
mov
test
xchg
lods
out
sub
bound
arpl
psrlq
add
mov
dec
cwtl
mov
cmp
inc
andl
rcrb
test
in
inc
idivb
mov
ret
leave
aam
jb
hlt
cs
imul
repz
in
loop
adc
add
xor
sbb
lret
pusha
mov
jae
test
inc
mov
stos
mov
jecxz
mov
push
mov
aad
dec
stos
ret
scas
add
ret
push
dec
cmpsl
leave
cmpsl
aam
std
test
mov
ljmp
sbb
insb
fwait
jle
jno
icebp
ret
push
mov
out
jo
repz
cld
cmp
xchg
xorl
push
lcall
jp
mov
cld
cmp
shrb
mov
sahf
sbb
dec
push
nop
inc
fsubs
jnp
dec
ret
or
xchg
or
cli
test
cli
jo
push
pop
jae
adc
jmp
clc
add
pop
adc
test
out
movaps
es
pop
test
pop
cld
xor
pop
es
ds
mov
repnz
out
cmp
push
out
cli
cs
ret
add
scas
dec
mov
mov
in
cmp
rclb
sub
stos
shlb
mov
adc
sbb
stos
fmulp
sub
cmp
lea
loop
and
icebp
gs
sub
js
xor
cltd
dec
mov
and
int3
push
inc
sbb
inc
outsl
jp
notl
pop
iret
sti
addr16
and
out
add
sub
push
rcrl
lahf
pop
stos
sub
fnstsw
push
or
and
or
xchg
leave
mov
sub
into
mov
daa
stc
movsl
cltd
aaa
jbe
ret
inc
rol
xchg
push
aas
cmp
rcrb
push
out
push
mov
xchg
sbb
push
cli
mov
add
cld
xor
mov
mov
jl
inc
mov
stos
push
push
leave
and
xor
jl
fcoml
push
loope
inc
pop
pop
insb
lock
xchg
into
lods
cmp
xchg
std
inc
arpl
arpl
add
or
pushf
mov
xor
test
orl
pop
mov
lods
clc
mov
cmp
fwait
cmpsb
int
inc
dec
frstor
leave
aam
movsl
pop
and
or
inc
mov
cmp
jbe
jg
or
cwtl
pop
or
sub
mov
mov
in
sahf
pop
adc
lret
outsb
popl
xor
cmpsb
push
pop
adc
movsl
cmpsl
xchg
and
and
lods
xchg
pop
mov
dec
rcrb
mov
inc
pop
mov
sbb
sbb
cmp
mov
insb
test
push
gs
call
xchg
movsb
mov
addb
dec
aas
jo
and
inc
pop
mov
aam
icebp
lret
xchg
cmpl
int
jle
mov
dec
xchg
roll
jl
inc
imul
in
aad
pop
mov
lret
mov
add
enter
daa
xchg
mov
bound
cwtl
pusha
mov
pop
mov
cmpsl
mov
sar
scas
push
cld
fistl
std
das
call
test
subl
cmp
fwait
notl
stos
insb
test
or
cli
xchg
pop
xchg
xor
out
pushf
push
push
mov
mov
fdivrl
mov
pop
mov
cmpsb
fcoms
cli
push
enter
fldcw
outsl
mov
lret
or
adc
jl
dec
or
push
adc
cmp
cmpsl
test
test
mov
insb
pop
cmp
fimull
fsubr
push
xchg
andl
pop
dec
jecxz
mov
push
shrl
mov
pusha
and
stos
mov
mov
xchg
aaa
mov
dec
adc
push
xchg
pop
cmp
xchg
mov
in
jp
mov
in
and
fisubl
das
dec
test
sbb
xor
xchg
lret
jmp
lret
je
cli
cmp
cli
popf
cmp
adc
dec
sbb
out
xchg
cmc
outsl
popa
xchg
outsl
popa
jnp
es
cltd
sub
pop
mov
idivl
into
mov
lds
hlt
and
rolb
inc
xor
es
out
outsl
in
push
push
out
xlat
loopne
sub
cld
push
hlt
add
inc
cmp
jmp
xor
cld
ss
cld
cmp
cmpsb
pusha
and
push
and
jge
or
loop
movsl
sbb
push
push
test
js
mov
nop
lret
sub
das
enter
enter
lret
xor
cwtl
repnz
inc
arpl
sti
int3
jb
cld
jl
lcall
outsb
sub
imul
aas
or
test
lods
sbb
adcb
add
dec
mov
aam
js
icebp
std
sub
mulb
add
pop
mov
cmp
push
and
dec
jl
in
mov
clc
adc
cmc
test
test
push
mov
xchg
aam
fwait
lods
sbb
and
clc
scas
pandn
jle
add
dec
mov
inc
mov
in
stos
dec
jl
in
icebp
mov
out
flds
push
jno
hlt
push
cli
mov
sbb
jns
inc
popa
adc
cwtl
add
stos
icebp
mov
dec
cmpsb
adc
js
cltd
lea
and
add
xchg
sub
inc
xor
les
inc
and
xlat
sub
movsl
gs
push
fs
inc
mov
mov
pushl
jne
stos
push
stos
sarb
loop
andb
xchg
cltd
pop
cmp
mov
mov
jnp
xlat
mov
xlat
pusha
push
mov
adc
jne
scas
inc
push
rcll
in
sbb
stc
mov
jb
int3
and
inc
rorb
cld
bound
xor
loopne
outsl
mov
in
mov
in
les
adc
push
push
add
mov
insl
cmp
sub
push
sub
les
insl
cli
mov
jo
dec
in
aad
or
push
lahf
leave
pop
out
mov
clc
mov
push
or
outsl
add
mov
mov
sbb
xor
sub
add
test
xor
mov
cmpsb
movsb
fcmovu
rcl
aam
enter
leave
fwait
bound
out
sbbl
mov
jno
xorb
push
call
repnz
mov
jecxz
xchg
ss
in
mov
cld
push
add
mov
dec
stos
lret
jmp
sub
mov
and
inc
ret
in
iret
jnp
iret
testl
imul
shld
vcvttps2dq
cmp
aam
pusha
out
lock
jo
repnz
jmp
or
mov
clc
add
xchg
push
xchg
jno
mov
bound
xchg
pop
push
dec
push
push
jo
loopne
xchg
adc
dec
push
outsl
insl
sahf
inc
push
push
push
stc
divb
jp
mov
int3
xor
jmp
rcrb
fidivl
cmp
mov
adc
dec
add
pop
fdivrl
ret
lea
rclb
inc
movsl
out
or
pop
jle
and
mov
dec
push
mov
loopne
dec
imul
sarl
adc
push
in
mov
cmp
mov
dec
or
arpl
test
mov
jle
stos
xor
and
push
sub
adc
ret
sbb
dec
mov
dec
adc
or
aam
test
test
xor
lcall
jmp
movsl
sbb
xor
xchg
scas
iret
xchg
inc
push
xor
pop
js
out
mov
mov
dec
push
and
push
pop
rcrl
imul
rolb
adc
push
enter
mov
lock
adc
lahf
out
cltd
fnsave
test
imul
or
jo
add
mov
dec
cmpb
mov
xor
pop
rcl
mov
mov
or
in
test
pop
pop
ljmp
sbb
out
les
cli
in
or
jo
insb
mov
xor
out
push
das
lods
iret
pop
xchg
popf
addr16
cmp
jne
adcb
enter
shlb
dec
xor
mov
pop
arpl
fnsave
lahf
pop
out
cmpsl
push
cwtl
daa
aas
push
xchg
jno
test
jmp
scas
push
js
dec
mov
xchg
cmpsl
mov
adc
jbe
jnp
aas
dec
sbb
cmc
lret
or
pushf
daa
sub
ss
scas
xchg
iret
xor
pop
int
pusha
and
rorl
fadds
jmp
jl
leave
daa
sahf
popf
sti
sbb
lock
push
jns
rcr
xchg
jae
cmp
in
out
and
xor
mov
repnz
jg
mov
jg
or
mov
mov
cmp
mov
ljmp
loopne
mov
sti
mov
out
dec
inc
mov
js
cmp
repnz
pop
lahf
aam
cmc
push
std
jnp
sbb
and
pop
shrl
add
mov
popl
jle
mov
dec
mov
cli
xchg
mov
sub
repz
ficoml
in
push
and
push
sub
dec
xchg
mulb
lcall
stos
mov
mov
sbb
in
sub
fwait
and
repnz
ja
fiadds
mov
mov
cmp
mov
or
mov
sub
xor
out
push
popf
sub
lcall
cltd
push
ljmp
test
lods
cmp
adc
cmp
enter
jae
dec
pop
cmp
fildl
inc
jl
inc
xlat
ljmp
cmp
mov
stos
or
int3
and
dec
inc
pop
jnp
jp
sub
jg
sbb
pusha
inc
push
push
jno
xchg
icebp
mov
push
lahf
or
xchg
mov
adc
mov
loop
cltd
popa
lods
pop
shll
sbb
pop
sbb
aas
xor
or
flds
fdivs
push
pop
pop
dec
lods
fbld
jmp
pop
daa
jbe
aam
mov
pop
lods
int
mov
out
int
aas
and
in
test
xchg
sub
sbb
into
push
data16
sbb
sub
adc
or
stos
pop
cli
add
push
sub
loope
xor
cmp
mov
xlat
stos
and
fmulp
js
fmul
jbe
mov
stos
loopne
mov
jns
out
ret
add
mov
nop
and
cli
fs
xor
fdivrl
rcrb
or
scas
cmpl
outsl
ss
andb
fbstp
fisttpl
fdivrs
fisubrl
sbb
testb
arpl
outsl
xor
movsl
xchg
fwait
or
or
jnp
mov
fldt
xchg
mov
cmp
mov
xchg
sub
test
lcall
push
push
outsl
mov
xor
inc
inc
mov
add
xchg
mov
jp
adc
xor
imul
data16
cmp
nop
dec
insl
cli
xchg
sub
stos
add
jno
ja
xchg
jo
in
outsl
dec
cmp
shlb
lods
pop
call
rcrl
lret
rcll
stos
insb
popf
fucomip
les
jae
ja
call
jbe
mov
fwait
lret
out
ljmp
dec
sahf
push
sbb
data16
cmp
xor
and
xor
and
repnz
inc
and
sbb
pop
imulb
mov
mov
sub
lret
ret
dec
insl
mov
pop
movsl
pushf
out
inc
stos
cmpsl
cltd
jge
es
repz
mov
mov
and
rcll
add
mov
jb
mov
sub
push
std
inc
cmpsl
sahf
add
scas
fstps
mov
dec
lea
clc
pop
notb
andl
xchg
test
pop
mov
repnz
pop
sub
mov
xorb
xor
inc
ds
mov
popa
and
addr16
pop
and
dec
loop
ret
jl
mov
sub
fimull
pop
cmpsb
xchg
sub
and
jp
adc
std
xchg
loopne
pop
iretw
cltd
arpl
out
mov
adc
xchg
and
lock
and
dec
cmp
mov
mov
test
ja
fwait
and
nop
dec
shl
ret
ljmp
cmc
inc
ljmp
add
and
inc
adc
lcall
push
and
bound
dec
aaa
push
xor
inc
pop
jl
dec
sub
js
scas
jmp
fdivrp
mov
push
jle
aam
inc
add
push
outsl
cwtl
sbb
mov
or
lock
mov
adc
sbb
scas
xchg
sbb
jae
sub
xchg
sbb
xor
dec
out
jle
stos
fidivrl
popa
dec
es
movsb
cli
mov
mov
notb
xlat
pop
dec
hlt
dec
dec
push
aad
rolb
movb
imul
loopne
cmp
insb
adc
pop
adc
movsb
movl
push
lods
loope
cld
lods
mov
cmpsb
lock
iret
pop
mov
arpl
mov
test
dec
sub
fildl
jl
rorl
jl
dec
push
mov
int
xchg
or
jge
enter
mov
les
lds
or
sti
mov
sbb
rcrb
xchg
in
dec
or
dec
repnz
dec
fcoms
hlt
and
add
add
icebp
sub
leave
and
mov
dec
inc
sahf
lret
push
sub
fcomi
jle
mov
mov
bound
sbb
push
loopne
in
mull
jae
loop
mov
cmp
jns
mov
jp
push
and
loope
sub
xchg
jnp
and
jge
sbb
sbb
imul
leave
xchg
ret
add
sti
bound
mov
push
int
xchg
or
sbb
xchg
cmp
loop
cmp
jno
cmp
fidivrs
dec
pop
ds
lods
inc
mov
add
lcall
inc
sub
mov
hlt
repz
dec
inc
repz
mov
in
xchg
add
das
in
ljmp
mov
push
bound
ljmp
adc
fisubrl
cmp
jg
pop
ficoms
test
add
out
and
addr16
insl
push
xlat
pop
mov
jge
jo
lret
shlb
imul
ret
inc
mov
outsb
jae
icebp
insb
pop
sbb
sub
adc
gs
je
aas
out
inc
add
cwtl
fstpl
xchg
pop
xlat
outsb
stos
mov
mov
ljmp
jle
pop
daa
std
mov
popf
fsubrl
pop
out
sub
jl
rcl
xor
cmp
or
push
je
enter
in
mov
imul
pop
jns
repnz
and
pop
rorl
data16
scas
mov
arpl
call
subb
dec
ror
xlat
mov
cmp
mov
jns
imul
mov
movsl
jbe
sbb
bound
push
and
jle
push
or
testl
mov
pop
loop
push
popf
xor
popa
popf
test
ftst
lcall
dec
in
xchg
stos
lret
jnp
inc
dec
dec
and
jmp
js
mov
pusha
je
adc
mov
fcmovu
mov
sbb
push
test
mov
and
sub
stos
push
sub
and
movsb
lea
mov
lcall
ret
ret
dec
addr16
add
stc
je
jl
out
dec
in
jbe
xchg
mov
xchg
lock
movsb
xor
aas
mov
subl
popf
stc
xchg
rcrl
incl
scas
les
push
pop
ret
adc
mov
fs
xor
lcall
decl
xor
mov
jecxz
mov
out
pop
das
lahf
insb
icebp
inc
out
push
data16
ds
adc
sub
int3
or
fmulp
test
ds
cmp
fcom
test
rcll
mov
into
insb
stos
adc
iret
xor
adc
jb
arpl
lock
lret
bound
andl
adc
add
mov
dec
push
fmulp
pop
sub
jecxz
notl
in
out
bound
loopne
dec
sbb
and
filds
mov
movb
mov
divb
stos
xor
pop
sbb
imul
cld
cmp
fwait
pop
fs
push
push
adc
dec
fstpl
or
out
mov
xchg
cmp
jnp
mulb
stos
into
lods
fcom
cmpxchg
loopne
jno
dec
rorb
popf
push
std
push
cld
hlt
cmp
mov
ljmp
add
adc
fimull
inc
dec
insb
rorb
mov
cmp
xor
ss
xor
mov
mov
sbb
jmp
inc
push
iret
mov
roll
and
test
mov
loope
lock
jmp
jne
icebp
push
mov
in
mov
mov
adc
jno
cmpb
jae
adc
or
popa
es
and
subl
movsb
push
outsb
jg
dec
inc
fwait
push
jl
jns
cwtl
jno
ljmp
in
gs
adc
push
lcall
ss
mov
push
dec
stos
mov
rcr
cmp
sub
cmpsl
push
mov
aaa
and
mov
out
shlb
call
sbb
sbb
bound
dec
loopne
cmp
sbb
sbb
xor
mov
orl
xor
xchg
sar
cmp
push
pop
scas
gs
call
and
rcr
push
mov
fmull
pop
int
add
ljmp
call
out
cmc
hlt
gs
decb
or
lcall
sub
push
sub
add
scas
push
mov
cli
mov
adcb
fldenv
xchg
pushl
mov
jb
ret
movsb
add
push
push
test
sti
test
and
fcompl
cmpl
ja
shr
movsb
jge
clc
icebp
cmp
cmc
cmp
inc
stc
adc
mov
adc
mov
and
push
pop
out
push
shrl
dec
dec
addl
sbb
call
popf
sbb
xchg
fs
mov
add
inc
mov
and
mov
int
mov
add
jae
bnd
lcall
das
and
lret
sbb
enter
dec
cmp
nop
and
pop
jbe
mov
out
cs
pop
imul
push
out
in
sbb
pop
cmp
in
dec
fildl
or
or
mov
outsb
xor
mov
aad
mov
sub
scas
fbld
jecxz
xlat
cmp
ret
imul
shll
pop
jle
fcoms
lcall
out
push
sub
mov
sbb
lahf
add
je
xor
out
sub
scas
sub
and
rorl
mov
fwait
or
push
lret
rorl
out
ja
fdivrp
cli
jmp
enter
repz
or
dec
out
adc
xor
fldt
jmp
pop
xchg
xchg
push
mov
pop
pop
mov
mov
fdivl
int
xor
dec
sub
or
adc
ret
xor
fnstsw
int
out
mov
or
pop
lds
xchg
imul
pop
lahf
pop
jmp
or
cmc
repz
mov
pushf
pop
pop
cld
cmp
and
dec
or
add
xchg
push
xchg
fcmovnb
add
push
or
sar
in
stos
fists
xchg
cmp
stc
nop
mov
fildll
pop
inc
xchg
arpl
jecxz
scas
add
lcall
xchg
test
in
push
xchg
or
leave
movsl
xchg
mov
push
lret
iret
movsl
xlat
pop
call
sub
add
lcall
mov
cmp
enter
pushf
and
adc
jbe
lret
stc
xor
stc
mov
push
call
xor
fdiv
hlt
bound
jmp
push
push
mov
bound
lahf
cwtl
lret
insl
xchg
adc
cmp
mov
dec
add
into
movsl
cltd
inc
cmp
pop
dec
jbe
mov
add
nop
adc
inc
cltd
jb
jp
sbb
andl
aam
mov
mov
sbb
mov
dec
mov
xchg
push
stos
call
and
cmp
movsb
or
cld
addr16
out
or
mov
adc
inc
mov
dec
add
fadds
push
xchg
inc
push
lcall
loop
iret
lcall
mov
ja
bound
or
je
fistps
mov
pop
push
pop
jecxz
scas
push
loop
daa
cwtl
pop
add
sbb
sub
cmp
and
push
cli
out
pop
lcall
fidivrs
out
adc
and
ljmp
jb
inc
dec
out
test
jbe
push
lock
in
lret
mov
arpl
lahf
mov
rcll
pop
and
xchg
cmp
jne
mov
mov
xor
subl
fldl
push
xchg
loop
stos
mov
iret
push
sbb
pushf
mov
sub
repz
sub
jmp
arpl
pmulhuw
outsl
into
mov
iret
jl
xchg
xchg
xor
shr
push
int3
sub
mov
sarl
int3
mov
in
aam
jno
out
insl
stos
or
jb
pop
mov
mov
lds
cwtl
shll
mov
add
and
adc
stos
xchg
mov
cmp
push
sub
jnp
sub
clc
loopne
and
push
mov
cmp
mov
push
jle
clc
in
or
cmpsl
adc
mov
xchg
aaa
push
sbb
xor
sub
mov
add
mov
mov
lods
aad
mov
test
xor
xchg
lret
jb
mov
sbb
fdiv
inc
ljmp
mov
pop
xor
cmp
movsb
sahf
xchg
jmp
dec
stos
push
arpl
ss
lahf
lcall
loope
test
lods
sub
jle
xchg
or
cmpsb
or
loope
mov
dec
cs
mov
sub
push
call
ficoms
es
arpl
out
hlt
fidivrl
loopne
lcall
cmpsb
icebp
push
enter
sbb
xorb
xchg
add
gs
xor
pop
outsb
push
movsl
hlt
xor
push
cmpsl
mov
shr
mov
lahf
adc
jae
pop
sti
js
lcall
inc
jns
xchg
fsubl
mov
or
testb
sbb
dec
and
and
mov
adc
js
fildl
jae
ret
mov
xchg
fcmovnbe
scas
xchg
push
sub
fimull
push
adc
or
int
mov
inc
lahf
std
ja
mov
adcl
lods
hlt
sbb
cmp
cmpsb
adc
test
ds
sub
cmp
and
mov
add
and
aad
push
push
pusha
dec
mov
int
cld
leave
ja
into
mov
jle
subb
in
push
call
lcall
nop
xchg
pop
or
pop
mov
jae
into
outsl
sub
imul
sbb
xchg
xor
movsl
push
das
push
dec
mov
pop
dec
fldcw
mov
shr
dec
mov
inc
pop
xor
lock
icebp
dec
pop
sbb
push
mov
add
cmp
mov
mov
push
inc
rcpps
push
pop
mov
scas
pop
mov
in
mov
inc
hlt
dec
push
or
adc
sti
dec
jno
mov
hlt
xchg
inc
jb
test
sahf
adc
stos
rcrb
leave
sbb
movsl
adc
cmp
jae
add
test
sub
and
pop
xor
and
add
inc
fisubrs
pop
mov
sbb
pop
inc
out
push
jnp
adc
cli
sbb
pushf
shl
das
sbb
cmp
mov
outsl
add
mov
in
push
hlt
or
mov
mov
ret
aam
add
mov
cmpsb
xor
fcomip
scas
cmpsb
loop
shlb
out
xlat
clc
dec
ret
xchg
dec
xlat
mov
popa
std
xchg
inc
cli
cmp
out
mov
stos
mov
sbb
push
sub
add
and
or
arpl
inc
lcall
mov
cmpsl
sub
or
daa
mov
es
pusha
push
roll
xchg
js
int
jb
repnz
hlt
test
hlt
cmc
rorl
out
push
and
mov
faddp
cmp
mov
adc
repnz
clc
pop
popa
sbbb
call
cmp
or
xor
out
and
ds
imul
sbb
rol
mov
call
cmp
jmp
xor
out
ja
test
dec
lods
nop
fs
arpl
mov
adc
cmp
popw
mov
jbe
rcrb
mov
scas
pop
movsb
fildl
pop
mov
int3
iret
mov
xor
inc
shrl
into
inc
repz
inc
clc
inc
pop
sub
mov
sbb
loope
je
inc
lcall
xlat
ljmp
sbb
push
push
xchg
sub
loopne
das
mov
rorb
fdivrl
daa
dec
xor
push
mov
sarb
popf
int
pop
stc
mov
xor
sub
mov
pop
sti
insb
leave
call
sbb
lcall
inc
mov
mov
ljmp
jg
mov
add
sub
aam
mov
pop
nop
and
adc
dec
jge
ret
in
dec
inc
out
inc
pop
jne
or
fld
fdivrp
cld
xchg
cmc
out
jge
push
pop
lock
cltd
stos
dec
ja
jp
lahf
mov
data16
cmpsb
mov
mov
std
negl
lds
test
fcoms
mov
lcall
sbb
loopne
jle
inc
int3
lea
aad
xchg
fwait
jno
cmp
jo
test
ds
xchg
ljmp
loop
shrb
add
ficompl
adc
lret
leave
sub
inc
js
je
jp
xor
ja
cmpsb
in
xor
and
pop
xchg
ret
cmp
sbb
pusha
call
int3
dec
push
mov
hlt
ja
in
hlt
in
pop
rcrl
out
dec
mov
sub
mov
bound
sbb
and
mulb
pusha
lods
call
and
rclb
dec
dec
aam
add
xchg
add
mov
jge
testl
mov
movsl
ficompl
mov
adc
lods
frstor
xchg
sub
ret
add
fneni(8087
or
sub
cwtl
and
jae
stc
sub
and
fdivrs
jle
js
out
ror
shr
sub
into
inc
xchg
cli
dec
push
sub
idiv
fstl
inc
imul
cld
mov
or
push
fdivrs
out
or
push
add
imul
ds
and
pop
adc
lods
rorb
pop
or
pop
xor
aad
addr16
data16
mov
jb
pusha
inc
pop
cld
cmp
add
out
rclb
pop
loopne
dec
fs
xchg
cwtl
dec
gs
sahf
fistpl
cmp
sub
cmp
ret
add
cs
fimuls
xchg
pop
push
mov
fcompl
xchg
sub
jns
outsl
dec
dec
jp
jae
ljmp
cmpsl
aaa
iret
or
jbe
and
jns
sbb
jne
xchg
repnz
in
xchg
lods
jno
call
mov
out
xchg
cs
push
test
call
popa
pop
pop
lcall
push
enter
ret
sbb
sahf
mov
xor
jne
rclb
push
insl
negl
test
test
mov
stc
mov
mov
and
enter
out
mov
dec
xor
or
sub
jno
shlb
ljmp
jns
push
es
dec
sbb
sub
mov
mov
jmp
sbb
call
rolb
cmc
je
or
pop
mov
test
and
push
lret
jbe
lcall
push
cmpsb
pop
push
in
sbb
pusha
orl
je
dec
xlat
insl
mov
jle
leave
add
sbbl
mov
loop
test
arpl
repnz
push
jmp
jae
ja
xchg
aad
incb
sub
fidivs
mov
and
orb
out
call
cmp
out
add
ja
aas
lret
cld
addr16
lret
andb
mov
call
bound
dec
xchg
push
mov
xchg
add
cltd
lea
test
cmp
cmp
mov
xchg
xor
insl
lods
in
iret
shrl
push
adc
jb
icebp
outsb
testb
mov
addr16
std
xor
popa
fbstp
sub
ja
pop
push
enter
and
dec
mov
cmp
jnp
pop
mov
ja
dec
fldz
stos
xor
pop
shll
inc
shlb
push
pop
cld
dec
push
xchg
shl
or
pop
leave
cltd
scas
insl
jge
testl
ja
xchg
mov
in
add
fs
imul
push
mov
cmp
xor
mov
xor
cwtl
test
cld
sub
xor
sub
popa
movsl
cmc
ret
fcomip
dec
call
push
fwait
lock
clc
addr16
std
insb
jo
loop
hlt
adc
js
cmpsl
bound
adc
mov
adc
jecxz
adc
xchg
xor
pop
aaa
or
or
jns
push
rorl
dec
add
dec
inc
nop
hlt
cmpsl
imul
cmp
scas
mov
mov
jae
ja
add
mov
std
icebp
test
mov
daa
cmpsl
mov
cmp
xchg
test
push
sub
aaa
lahf
push
pop
stos
push
push
cmpsb
pushf
dec
push
adc
xchg
mov
push
mov
mov
or
stos
rclb
mov
adc
add
xor
inc
sbbl
insl
cmp
or
shll
lods
pop
ja
sbb
add
mov
and
mov
mov
and
inc
fimuls
and
push
int
jns
sub
sbb
test
jg
ja
xor
hlt
sbb
lret
mov
jl
or
call
loopne
or
add
call
mov
mov
nop
movsb
popa
clc
xchg
mov
popf
hlt
mov
push
clc
cmpsb
ds
repz
ljmp
cmp
inc
ret
dec
sbb
repnz
mov
bound
fwait
sub
lret
cmpsl
nop
jge
out
xor
dec
or
xchg
pop
dec
sarl
xchg
add
inc
ds
dec
daa
mov
dec
dec
dec
leave
sub
sub
dec
pop
outsl
test
repz
cltd
mov
jl
scas
je
imull
in
aas
xchg
loope
fsts
push
lahf
adc
add
mov
sti
add
xchg
jo
stos
and
stc
xor
inc
icebp
inc
sub
sub
sub
dec
cwtl
jecxz
jl
dec
mov
inc
mov
popa
mov
or
dec
stos
aas
call
test
push
sub
inc
sbb
xchg
xorb
out
loop
aam
dec
movsl
sbb
shrb
call
fistpl
rcll
cld
neg
sbb
cmpsb
cmpsb
in
shl
cmp
int
int3
add
addl
call
push
aam
loopne
adc
adc
or
ja
push
js
lds
jp
xchg
xlat
mov
jmp
mov
mov
std
out
cmpsb
loope
xchg
arpl
rclb
pop
sarl
push
scas
fcmove
and
clc
xor
loop
std
je
and
fisubs
mov
dec
lahf
or
xchg
add
push
cmp
inc
sahf
pop
or
inc
pop
lahf
mov
stc
aaa
cmc
push
scas
loope
sub
and
mulb
icebp
lret
sbb
jmp
insb
rcll
adc
xchg
and
mov
jl
lret
dec
push
push
insb
test
mov
cs
cld
mov
jbe
sarl
lods
fs
mov
pop
pop
scas
pop
inc
or
rcrb
and
arpl
jo
inc
push
dec
or
xchg
dec
jae
inc
ret
sbb
ja
pusha
mov
stos
dec
add
mov
adc
repz
and
pop
mov
cmp
pop
mov
stos
push
add
movsl
ret
testb
pop
dec
popa
out
mov
cmc
pop
inc
dec
fucomp
inc
mov
test
dec
sahf
cld
sbbl
jp
push
xor
mov
movsb
mov
mov
mov
or
fnstsw
enter
add
aas
imul
push
xor
jb
xor
mov
ret
das
lods
jnp
adc
push
mov
xor
sbb
jecxz
lods
sar
xchg
jnp
cmpsb
cwtl
out
sub
out
sub
gs
mov
lea
test
push
adcb
add
aaa
stos
push
sarl
fxch
jo
xlat
test
cmp
loop
sbb
jae
lret
dec
sbb
shl
fwait
inc
push
mov
mov
fisttpl
add
jmp
xor
jne
mov
cwtl
or
sbb
dec
lret
mov
int3
stos
scas
dec
in
sub
pop
pop
clc
cwtl
fistl
xchg
enter
aam
out
pop
loop
out
or
cmc
nop
inc
sti
cmc
inc
pop
dec
pushf
jge
fbld
sub
pop
xor
loope
pop
xchg
aam
sbb
in
push
pop
cmp
pop
mov
leave
lss
sbb
mov
push
test
sub
jbe
push
aaa
inc
aam
pop
rcr
cmp
ret
in
in
int
cli
inc
jns
jno
xchg
outsb
cmpsb
insb
cwtl
or
xlat
or
shrl
sub
stos
mov
sbb
popf
lods
sbb
or
mov
add
cs
lods
mov
add
mov
ret
xchg
and
push
mov
lret
insb
lods
lock
jo
jmp
mov
test
jmp
loopne
adc
push
and
adc
lea
mov
and
mov
push
icebp
and
movsb
icebp
jecxz
jno
test
je
ret
icebp
lret
dec
dec
aam
jo
repnz
int
xor
in
aam
pop
dec
jg
std
repz
stos
push
js
mov
add
xchg
stos
cmp
lcall
xchg
cmpb
or
test
mov
push
sub
dec
aas
pop
pop
mov
cmpsb
js
icebp
pop
jb
es
pop
test
sbb
stc
xchg
out
inc
mov
ss
mov
sbb
sbbl
out
or
mov
pop
jns
xchg
pop
push
sbb
js
xorl
jg
sbb
sahf
mov
in
jb
xor
xchg
aas
aad
cltd
and
push
sub
aas
mov
into
pop
sub
in
cmc
push
test
xchg
dec
ljmp
stos
mov
cwtl
shrb
stos
inc
mov
rorl
and
cmp
mov
std
push
inc
les
fnstsw
xor
sbb
inc
sti
cmp
or
cld
mov
mov
out
or
in
cmp
xor
xor
ds
add
call
mov
test
jmp
fimull
and
in
shlb
rorb
push
lds
push
lret
push
fcmovb
xor
mov
sub
mov
adc
pop
inc
or
add
cmp
aas
fisttpl
aam
sahf
insb
push
sub
sbb
push
push
out
jns
pop
push
pop
jns
and
pop
clc
add
mov
dec
jge
test
push
push
xchg
loope
push
mov
in
pusha
adc
sahf
sbb
cmp
push
mov
mov
add
cmpsb
xor
out
sarl
fcompl
xchg
hlt
jp
repz
inc
cmpsl
jmp
fdivs
out
dec
pop
sbb
push
pop
sub
mov
jnp
inc
jl
adc
je
adc
ljmp
pop
cmp
xor
stos
pop
cmp
orl
push
dec
xchg
mov
mov
cmpsb
dec
das
movsb
sub
rorl
lret
dec
pop
dec
leave
lahf
mov
mulb
movsl
lcall
xlat
imul
out
stos
data16
mov
insb
add
sets
cmp
cmc
or
orl
fdivrl
lods
stos
xchg
and
fcoms
and
pop
ja
xchg
out
jecxz
dec
adc
inc
or
xchg
jge
es
idiv
cmp
jl
mov
jnp
popf
push
lcall
pushf
push
adc
aaa
arpl
add
outsb
ss
sar
mov
sbb
cs
inc
inc
lods
and
fldenv
outsl
pushf
cmc
cltd
pusha
test
inc
lret
sbb
fsubrl
cli
cmp
push
xchg
jb
pop
imul
push
rcr
fists
or
gs
mov
xchg
xchg
dec
xor
stos
loop
and
dec
out
movsb
lret
or
enter
mov
push
dec
adc
dec
leave
cmp
movsl
repnz
cmc
imul
mov
insl
mov
in
lahf
and
mov
xlat
lret
or
push
add
xchg
cli
pop
and
out
push
ss
lds
and
mov
repz
dec
push
pop
push
xchg
xor
rcrb
arpl
lods
mov
imul
in
xor
outsb
movsl
push
mov
xor
inc
pop
jnp
cmc
add
mov
mov
test
xor
dec
xor
pop
xor
and
arpl
mov
xor
jp
pusha
stos
sub
lcall
pop
insb
jbe
lcall
push
mov
inc
cmp
pop
or
push
dec
cmpxchg
into
mov
cmp
xor
ljmp
inc
jg
js
sub
rcl
test
inc
and
pop
add
push
adc
imul
insb
int3
out
lods
int
popa
dec
int
nop
hlt
push
xchg
xor
or
fcomps
out
test
xor
and
pop
lods
push
xchg
movsb
les
pop
mov
sahf
shll
lcall
push
lock
sub
adc
movsb
mov
mul
sahf
inc
sahf
xor
pop
in
cmp
xchg
mov
adc
addb
inc
cld
xor
jp
push
and
sub
push
movsb
cld
or
mov
push
pop
pop
bound
dec
jecxz
jae
add
or
sbb
cmc
dec
cmpsb
arpl
in
xchg
dec
out
lods
push
xchg
add
push
and
addb
mov
adc
cltd
xor
das
xchg
pop
scas
push
sub
rcr
cwtl
adc
push
inc
ss
sub
les
test
cmc
negl
clc
aas
jmp
jno
pop
outsb
addb
mov
inc
imul
es
movsb
xor
cmp
repnz
mov
sbb
mov
test
pop
jecxz
mov
adcl
push
into
int3
bound
das
jo
xchg
insb
xchg
das
fisubrs
sbbl
adc
popf
xor
jnp
fidivrl
jp
scas
jg
dec
cmp
sub
sub
loope
fcom
dec
fcomi
ds
xchg
push
stc
loopne
in
gs
sbb
xchg
mov
gs
imul
lock
and
xchg
inc
mov
ljmp
test
push
sahf
fisubrs
xor
movsl
inc
add
add
fildll
jmp
sbb
pop
and
push
sar
lret
int3
inc
dec
ja
sar
cmp
or
fsts
lcall
fldl
inc
sbb
repz
test
outsb
adc
cli
inc
sbb
and
popa
and
ljmp
cmp
inc
inc
mov
lret
ficompl
es
aas
adc
fldt
in
imul
sbb
enter
pusha
in
inc
lcall
pop
or
scas
cmp
mov
xorb
scas
dec
mov
xchg
push
es
push
cmp
mov
lds
cltd
idivl
aam
mov
cld
lcall
nop
lock
lretw
arpl
inc
imul
insl
add
sbb
test
hlt
das
push
das
add
stc
or
test
cmp
pop
mov
fcmovu
add
jb
push
push
rcrb
jnp
dec
lds
pop
pop
leave
hlt
in
shl
js
clc
cmp
call
push
dec
jecxz
adc
inc
pop
xchg
or
and
pushf
test
out
lock
fistpl
mov
fsts
adc
icebp
xor
ljmp
lds
leave
pop
dec
add
mov
push
ljmp
lods
sbb
sbb
cmp
adc
pop
or
stos
and
jns
repnz
mov
cmp
fisttps
sub
sbb
testb
pop
loope
inc
push
inc
mov
iret
jge
mov
hlt
stc
outsb
or
ja
sbb
data16
adc
outsb
and
adc
pop
pop
cmp
xchg
pushf
mov
xor
inc
fdivrs
xorl
jno
ficompl
dec
jo
xor
out
fisttpl
jp
inc
adc
mov
push
mov
loopne
je
mov
aam
cltd
push
push
insl
add
fs
sbb
scas
adc
scas
pusha
das
mov
add
fadds
lret
movsb
sbb
sbb
or
rcr
out
sbb
pushf
xchg
adc
jns
mov
dec
add
aam
jge
call
sbb
push
ljmp
adc
test
test
mov
xor
and
xchg
push
mov
stos
xchg
insb
ret
push
xor
jecxz
dec
scas
sarb
sarl
dec
add
dec
leave
jg
or
xchg
ja
pop
mov
xor
cmp
adc
iret
pop
sbb
insl
sbbl
cmp
and
mov
repnz
jge
roll
sub
pop
xchg
test
mov
lods
dec
aad
out
xchg
inc
add
or
xchg
cld
cmp
sbb
add
outsl
repnz
imul
add
test
cld
cmpsb
cmp
sbb
mov
dec
subl
das
add
into
add
push
rol
cmp
dec
lahf
in
pop
cs
mov
stc
mov
imul
sbb
sub
jge
sub
dec
mov
arpl
xchg
rorl
pop
test
adc
cmpsb
int3
and
push
jg
push
inc
lods
sub
imul
imul
faddp
or
jno
daa
enter
and
xor
pop
pop
ja
xchg
push
notb
div
cli
loop
divl
nop
lea
pop
xor
xchg
mov
fwait
sbb
add
inc
lret
xchg
sbb
mov
mov
movsb
pop
jl
lahf
inc
xor
push
insl
icebp
test
ljmp
iret
popf
or
jge
jecxz
mov
sbb
outsb
fstpt
sbb
jle
xor
roll
inc
or
aam
mov
dec
pop
push
addr16
repnz
cltd
xlat
insl
cli
iret
pop
outsl
mov
pop
into
sti
pop
cmp
or
into
cmp
mov
jb
inc
push
outsb
inc
sub
pop
out
or
mov
mov
pop
jns
cltd
aaa
jmp
cmpsb
pop
pop
or
aam
into
lea
inc
pusha
xchg
xor
lret
movsb
mov
inc
sarb
push
jp
fmull
adc
or
pop
ret
repnz
div
data16
jge
jno
jnp
or
sbb
or
fsts
jl
and
cmp
shrb
cmp
lods
fbld
xor
mov
and
shrb
pop
sbb
dec
jne
ljmp
mov
pop
xchg
jbe
jae
lahf
cmc
push
das
inc
arpl
std
or
xchg
lret
pop
xchg
out
sbb
mov
add
adc
into
das
mov
add
or
xor
xor
loope
sbb
push
and
lods
lret
cmpsl
pop
xor
fmuls
pop
sti
ljmp
into
fwait
addr16
pop
sbb
sbbl
jo
push
cmc
push
subb
loop
mov
pop
loope
sbb
lods
mov
and
movsl
subl
mov
ret
mov
inc
sub
shrb
movsb
sbb
pop
sbb
push
dec
outsl
lret
iret
mov
ret
and
inc
rcrb
clc
or
je
in
jmp
cmp
fildl
or
dec
mov
fsubs
sub
fdivrl
inc
dec
cmp
aad
arpl
pop
ret
inc
mov
jl
and
push
and
rorl
jecxz
dec
jo
inc
cltd
adc
xchg
js
adc
outsl
pop
stos
add
mov
mov
cwtl
fsubrs
leave
cmpsb
xchg
mov
or
dec
cmp
add
sarl
adc
fld
mov
dec
test
shrl
shlb
not
imul
dec
dec
pop
int
lcall
jle
adc
xlat
sub
or
xor
loope
mov
push
mov
iret
sub
movsb
or
pop
or
fldl
sarb
mov
xor
sub
js
into
cld
fstpt
pop
jp
push
push
push
pusha
leave
hlt
out
xchg
xchg
movb
jnp
nop
ljmp
adc
push
add
xchg
jl
data16
sbb
sub
and
pop
xchg
fdivrl
jl
mov
inc
mov
ret
inc
mov
jl
sub
fbld
aam
pop
ret
into
and
popf
js
mov
xorl
sub
loope
mov
mov
jne
xchg
movsl
lods
mov
andl
cmp
iret
pop
xor
scas
inc
mov
push
push
leave
out
ror
arpl
in
jne
dec
add
inc
repnz
inc
notl
stc
cmp
mul
aaa
lea
daa
sub
sahf
push
mov
iret
sub
jp
mov
and
fldl
lret
dec
xor
sub
fisubl
push
jg
iret
repz
push
imul
in
dec
xchg
popa
int3
mov
jg
inc
cmp
cmp
jae
or
mov
push
add
sbb
out
cmp
sub
add
mov
dec
cmp
test
mov
dec
mov
ret
inc
mov
je
in
call
push
jmp
xchg
out
mov
cli
lea
jp
je
or
sbb
xchg
in
adc
test
or
add
cmp
cmp
iret
stos
jbe
cs
les
std
fdivr
jmp
sub
sbb
pop
movsb
sbb
movsl
xchg
jl
jge
pop
jl
mov
mov
loop
jmp
movsb
xchg
mov
pop
cmp
mov
das
fstpt
mov
rorb
data16
and
inc
mov
jae
fldenv
imul
ret
iret
int
into
xchg
popf
inc
out
sar
lahf
loopne
repnz
hlt
mov
idivb
cmp
movsl
loopne
mov
mov
cmp
adc
cmpsl
xor
jne
bound
mov
aad
arpl
push
movsb
addb
lds
daa
mov
scas
pop
call
dec
leave
insb
add
out
cmpsl
cli
jle
adc
out
sahf
daa
imul
iret
xchg
shlb
push
pushf
xchg
stos
sub
or
mov
aaa
jns
pop
cmp
mov
pop
bound
fistl
es
lock
sub
mov
outsl
and
jne
fdiv
stos
mov
call
jo
jg
loop
xchg
das
imul
test
mov
nop
pusha
das
cmp
adc
or
xchg
cmp
stos
daa
xorl
adc
jae
pop
je
shl
push
in
imul
imul
sbb
dec
inc
xlat
jns
xchg
bound
xor
in
jne
mov
add
mov
aas
jmp
mov
mov
add
jp
in
fstpl
cmp
inc
into
mov
sub
test
pop
inc
sahf
add
dec
jo
jbe
sti
addr16
fists
cwtl
mov
or
jge
mov
out
xor
nop
adc
mov
mov
mov
cpuid
and
mov
cvtps2pi
inc
imul
push
mov
lcall
push
jns
inc
std
cld
out
jo
push
lock
add
addr16
cmpsl
xchg
scas
xchg
test
inc
add
inc
pop
fwait
mov
in
test
dec
mov
fsubrp
nop
scas
movsb
adc
daa
jbe
cmp
aad
inc
jp
cli
xchg
iret
adc
sbb
jmp
adc
sbb
push
imul
inc
outsl
ja
insl
pusha
mov
cltd
addl
mov
adc
dec
dec
and
mov
lods
pop
push
scas
pop
out
sbb
iret
hlt
movsl
dec
inc
jl
rorl
mov
dec
cmpsl
dec
and
jae
int
clc
out
adc
sbb
insb
mov
bound
imul
xchg
cmp
addl
sti
mov
aas
aas
movsl
jne
pop
lret
mov
push
jp
leave
dec
pop
cltd
int
pop
push
int3
jle
bound
outsb
hlt
in
xchg
adc
popa
jne
sbb
cwtl
or
add
and
jnp
xor
mov
or
pop
push
stos
dec
mov
aam
ficomps
jbe
jb
enter
bound
leave
dec
repnz
sub
adc
and
js
fs
arpl
pushf
in
out
xor
xchg
aam
gs
gs
xchg
mov
test
shll
rcr
cmpsl
sub
aam
mov
jge,pn
mov
jle
sbb
push
lods
add
cli
ss
ljmp
stc
push
pusha
pop
icebp
sub
sbb
outsb
into
insb
mov
mov
jecxz
mov
movsb
and
call
or
mov
cmp
movsl
test
ficompl
scas
shl
and
leave
pop
rol
dec
xchg
jp
pop
cli
ror
test
test
pop
jle
loop
std
ret
sbb
sahf
mov
adc
pushf
in
sub
sbb
xorl
pop
sbb
sbb
and
push
rcrb
int3
notl
adc
mov
mov
dec
cs
stos
je
cli
fimull
or
out
in
sub
test
sbb
cmpb
or
mov
test
and
jbe
push
pand
enter
dec
ret
int
adc
inc
mov
dec
and
popf
jbe
leave
iret
addr16
sbb
jae
popa
setb
pop
ja
mov
sbb
adc
cwtl
pop
fisttps
add
mov
xor
and
test
and
pop
fistps
rcll
push
lret
dec
into
dec
int
rolb
cli
jnp
jle
jge
jo
ja
push
imul
data16
sbb
adc
or
push
xchg
mov
xor
sub
and
pop
ficomps
rclb
push
lret
dec
int3
inc
ret
inc
movb
jle
jge
jo
ja
push
imul
out
sbb
adc
or
add
ds
aaa
mov
test
scas
sub
and
fcomps
pop
rclb
push
aam
lret
dec
into
dec
int
rolb
cli
js
jg
jb
jno
je
imul
out
insl
loop
loope
in
sbb
adc
or
push
test
mov
xor
sub
and
pop
fistps
rcll
push
lret
dec
into
dec
int
rolb
cli
jnp
jle
jge
jo
ja
push
imul
data16
sbb
adc
or
push
xchg
mov
xor
sub
and
pop
ficomps
rclb
push
lret
dec
int3
inc
ret
inc
movb
jle
jge
jo
ja
push
imul
out
sbb
adc
or
add
ds
aaa
mov
test
scas
sub
.byte
.byte
es
sub
pop
add
add
add
push
outsb
inc
insb
xor
cs
insb
add
xor
add
pop
add
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
in
push
push
push
call
jmp
ret
add
add
add
add
jmp
call
add
add
add
jmp
jmp
add
add
add
jmp
call
add
add
add
jmp
ret
add
add
add
add
jmp
ret
add
add
pop
sub
mov
add
push
call
ret
ret
call
jmp
call
add
sar
inc
call
jmp
jmp
xor
int3
ret
call
jmp
ret
pushl
mov
int3
ret
call
jmp
jmp
add
add
out
add
shr
add
add
add
call
xor
pushl
mov
int3
ret
nop
jmp
call
add
stc
jmp
jmp
enter
call
jmp
jmp
add
jmp
jmp
enter
call
rcll
jmp
jmp
call
add
jmp
ret
nop
rol
jmp
jmp
shr
add
jmp
call
stc
stos
loop
or
jns
stos
lea
adc
push
imul
jecxz
cmp
mov
sub
cs
insb
lea
fucomp
or
decb
out
mov
cs
pop
ds
outsl
cltd
fdivrl
leave
leave
xor
repnz
nop
lock
lahf
rolb
xchg
and
rcll
xchg
aaa
xor
xchg
into
xor
ret
mov
ret
jb
movsb
and
les
dec
pusha
add
daa
push
mov
mov
push
ret
cmpsb
mov
adc
lock
adc
mov
mov
jecxz
fbld
cmp
jno
inc
push
addr16
push
cwtl
sub
xchg
hlt
data16
sbb
push
push
mov
mov
xchg
sub
push
mov
sbb
imul
pop
pop
mov
sbb
pop
cmp
jnp
or
test
test
jno
lret
dec
stos
mov
pushl
sbb
mov
enter
fsubr
or
pop
fstpl
sarb
lods
and
nop
add
push
pop
or
or
outsl
out
xor
iret
xor
push
mov
adc
xor
aad
and
adc
mov
push
sbb
or
adc
adc
inc
bound
and
inc
xor
ret
and
ret
sub
cmp
add
stc
hlt
push
jmp
test
push
repz
push
xor
xor
aad
gs
aam
xor
or
call
out
xchg
push
call
cld
cmc
push
repz
and
out
cmp
cmpsb
lock
push
ja
pop
aaa
or
mov
pop
imul
sub
push
push
clc
cmp
arpl
dec
mov
sbb
stos
pop
sbb
subl
jl
or
fwait
cmp
jl
je
dec
pop
push
fistl
dec
imul
mov
pushf
jle
sbb
in
pop
sbb
lods
xchg
mov
mov
mov
sti
into
pop
push
xchg
mov
lcall
sbb
addb
stos
enter
mov
shlb
mov
xchg
mov
addr16
mov
xchg
push
xchg
arpl
mov
jecxz
inc
mov
lods
inc
xchg
mov
aad
je
sti
add
push
fadds
aad
push
les
cmc
xchg
push
mov
mov
iret
push
outsl
out
test
and
cmpsl
addr16
fdivrs
fadds
xchg
pop
fadds
shlb
enter
stc
mov
mov
sub
xor
jmp
jno
test
ljmp
in
leave
cld
mov
ficompl
pop
ljmp
sbb
jnp
fucomi
negb
push
mov
or
dec
in
pushf
adc
ret
insb
or
jmp
popf
ljmp
or
sarl
scas
and
jge
push
push
adc
lahf
adc
mov
jo
xor
shlb
test
shlb
inc
xchg
and
and
rcll
push
repnz
push
sbb
add
and
orb
adc
inc
arpl
xor
les
jle
add
es
cs
adc
xor
xchg
fists
cmc
push
mov
and
sbb
push
ss
inc
test
gs
es
dec
xchg
mov
or
data16
and
aaa
cmp
cltd
sub
aaa
xchg
pop
pop
ja
pushf
in
imul
mov
pop
cwtl
push
jnp
sbb
pop
cmp
sbb
mov
xor
mov
lret
sub
sti
pop
mov
out
xchg
mov
fistps
icebp
cmp
out
in
or
mov
out
imull
in
mov
arpl
push
lods
mov
repnz
fcompl
fisttps
outsl
adcb
scas
mov
iret
jo
inc
aam
xor
sbbl
adc
mov
adc
shrb
adc
xor
xchg
pushf
aas
mov
cmc
mov
rol
push
xchg
push
bnd
xor
inc
adc
adc
inc
in
mov
insl
aad
test
ss
inc
outsb
jbe
aad
out
mov
push
pusha
insl
mov
pop
aam
fdivrl
notl
pop
fldenv
jl
inc
aas
fwait
pop
negl
jns
fld1
mov
push
in
cmp
dec
sbb
sub
xor
scas
js
lcall
jge
sbb
pop
cmp
add
fstp
stc
out
xchg
mov
push
pop
mov
add
fsubr
leave
shrl
pushf
int
mov
les
jnp
and
dec
lret
mov
jns
sub
push
adc
and
shll
aam
xor
fs
xor
mov
dec
cmpl
xor
rcll
push
repnz
inc
jl
push
repz
xchg
repz
mov
xchg
daa
mov
js
aam
ret
mov
test
and
sbb
push
adc
mov
push
push
fs
popa
scas
mov
loope
in
sub
jbe
ja
mov
or
es
dec
out
push
pop
cmc
xchg
popa
inc
and
ficoml
cmc
sub
sbb
sbb
imul
sub
mov
sub
sub
mov
sahf
add
jo
fstps
cltd
pop
fisttps
lods
xor
push
lods
popa
dec
mov
dec
out
repnz
pop
sub
fucomi
popl
jmp
dec
jecxz,pt
dec
shr
or
fisubrl
sbb
add
lods
lea
fucom
jae
into
dec
ds
pop
loope
cmp
xor
stc
outsl
cltd
scas
lahf
scas
mov
stos
pusha
dec
inc
push
pusha
nop
push
jae
adc
pusha
inc
add
movsl
adc
mov
out
shl
shlb
lods
and
and
ret
push
repz
inc
xchg
adc
arpl
xchg
cld
xor
mov
pop
push
xchg
push
mov
movsl
add
cmp
dec
xor
xchg
push
jne
aad
push
jp
cmp
sbb
cld
cmc
push
stos
xchg
push
sbb
sbb
lret
mov
sub
stc
mov
mov
sub
or
adc
sub
enter
or
xor
cmp
pop
mov
out
ds
scas
imul
dec
cmp
mov
stc
fsubl
sbb
xor
mov
addr16
or
pop
addr16
jb
xor
sbb
inc
popa
add
pop
lret
mov
out
setae
decl
outsl
jp
sbb
pusha
and
rorb
jno
shl
jmp
roll
add
rcll
loope
add
inc
push
pop
mov
jae
loopne
add
mov
arpl
int
outsb
in
test
xchg
adc
movsb
cmpsb
xchg
fdivp
sub
outsl
jo
xchg
mov
rol
cmp
push
xchg
dec
emms
cmc
ja
xchg
add
stc
adc
push
xchg
push
jno
adc
ja
addr16
add
lods
js
in
cltd
fdivrs
cmp
dec
cmp
call
enter
int
jge
icebp
aas
pop
dec
jl
sub
mov
imul
adc
jnp
lods
fwait
jl
jnp
lods
cli
add
ficompl
scas
fimull
sbb
cmp
and
xchg
sub
cmp
in
cmp
sbb
lods
mov
push
inc
xchg
fistpll
push
push
cmp
out
sbb
out
into
dec
pop
inc
jg
in
xor
out
rclb
sbb
fstps
in
in
popa
mov
jle
adc
xor
orb
shll
bound
xchg
jecxz
mov
ja
and
repz
push
push
jecxz
adc
stos
mov
sbb
movsl
sbb
les
add
mov
cmp
mov
cwtl
ljmp
in
insl
cmp
sbb
xor
lds
jne
jb
jns
rcl
xchg
call
lret
sub
cli
ljmp
cli
dec
sbb
or
add
jge
call
in
mov
outsl
xor
test
fucomi
pushf
scas
movsl
mov
sbb
scas
mov
and
popa
stos
mov
inc
sub
pop
cmpb
and
push
out
pop
outsb
mov
into
int
scas
push
sbbb
lods
jbe
push
inc
test
fistpll
daa
mov
jnp
push
inc
mov
xor
xchg
mov
adc
jae
jno
icebp
adc
xchg
scas
fistpll
gs
fs
fidivs
ret
cmpsb
sub
add
cwtl
pushf
ja
or
test
aam
in
hlt
call
aam
pop
push
cmp
mov
push
out
mull
out
xor
notb
mov
mov
mov
push
lcall
fmul
jp
sub
cwtl
cmp
mov
in
mov
dec
pop
push
mov
test
inc
push
dec
das
or
test
lea
jg
test
mov
out
in
repz
mov
cmp
inc
mov
pop
xchg
pop
fnsave
cwtl
and
jne
jp
jns,pn
mov
rcrb
mov
push
pandn
lahf
repnz
adc
push
out
rorb
xchg
mov
cs
sarl
fstpl
shl
and
repz
ret
shl
andl
imul
fsub
mov
bound
test
daa
add
aam
mov
mov
mov
add
shrd
aam
je
mov
jno
and
cmpsb
mov
gs
pop
lret
test
sub
cltd
xchg
mov
repnz
repnz
mov
test
dec
sub
cmpsl
xchg
inc
cmp
xchg
mov
imul
adc
popf
pop
sbb
push
cmp
dec
fldln2
test
pop
or
jp
insl
fsts
pop
dec
movsl
mov
jmp
lock
fwait
dec
mov
mov
imul
mov
or
sbb
pusha
rorl
lods
xchg
inc
test
cmp
fidivrl
sahf
mov
mov
adc
xadd
orb
out
add
dec
lahf
out
stc
fisubs
scas
adc
pop
imul
cmpsb
stos
mov
sahf
lcall
out
stos
mov
cmp
push
ss
or
push
mov
add
add
or
test
aad
decb
jbe
push
push
outsb
test
mov
fists
dec
in
cmp
push
xor
jne
imul
push
pusha
xor
negl
je
pop
decb
jp
stos
push
stos
aaa
cld
sbb
cmp
and
out
leave
icebp
jne
sbb
push
mov
aaa
popa
xor
sti
popa
std
ja
pop
add
jge
lods
dec
scas
inc
add
in
and
arpl
adcb
push
inc
std
arpl
jns
mov
orb
popf
pop
push
sbb
sub
inc
fstpt
pop
jl
adc
pop
pop
sub
lahf
into
jmp
scas
lea
xor
pop
jae
pop
mov
ret
sub
gs
pop
fidivs
sbbl
adc
pop
mov
push
into
push
pushl
pop
pop
repnz
loop
adc
adc
in
inc
cmp
test
imul
xor
test
add
pop
in
adc
repz
cmpsb
cmc
cli
push
cwtl
je
push
cmc
ss
loopne
hlt
add
cmpsl
xchg
dec
xchg
jge
xchg
imul
dec
push
mov
enter
add
sub
push
and
cltd
fnstcw
add
jl
or
mov
inc
push
dec
mov
fs
pop
sub
sbb
fwait
sti
stos
popf
dec
mov
sub
dec
mov
lods
mov
adc
pop
repnz
dec
fnstcw
mov
sub
out
movsb
scas
push
into
roll
push
scas
outsl
loope
lcall
adc
and
inc
in
inc
mov
jae
out
cmpsb
mov
xchg
test
inc
inc
xchg
push
adc
movsb
aam
mov
or
arpl
shlb
jecxz
xchg
add
mov
xchg
push
ss
ret
pop
jae
push
in
xchg
movsl
mov
pop
mov
les
xor
push
mulb
push
fs
es
xchg
vmread
xchg
hlt
inc
xchg
test
cmp
nop
pop
jns
lods
cltd
dec
aaa
xchg
adc
ja
cltd
leave
call
repz
cmp
ret
mov
inc
sub
cmp
pop
icebp
cli
pop
mov
push
mov
mov
or
cmp
shll
jle
pop
jns
pushf
lods
mov
inc
adc
jo
or
or
jl
outsb
mov
nop
clc
adc
scas
fmul
sbb
xor
mov
inc
push
inc
in
inc
mov
jg
sti
scas
and
addr16
xchg
mov
iret
shll
in
bound
int3
fcmovb
push
xchg
push
clc
shlb
aad
ljmp
pop
xor
je
aad
ja
inc
jmp
gs
mov
xlat
jl
aad
push
xchg
push
or
xlat
aam
gs
not
stos
cwtl
cmc
imul
call
test
cwtl
mov
mov
cltd
sub
sbb
pop
jbe
adc
imul
mov
jle
pop
imul
mov
inc
inc
test
movsl
dec
sub
incb
push
jmp
xchg
xchg
mov
dec
mov
dec
icebp
loopne
cld
cmp
cmp
push
call
data16
mov
into
outsl
cs
sar
outsl
xchg
jb
pshufw
inc
movups
adcb
mov
adc
mov
xchg
test
movsb
inc
inc
xchg
xor
xor
rcl
movsb
xchg
clc
or
sub
xchg
pop
pop
addr16
stc
hlt
push
movl
xor
mov
movsb
in
push
or
fs
cmpsb
roll
sbb
ss
inc
push
addr16
aam
out
xchg
call
in
out
mov
push
enter
pop
xchg
lods
dec
pop
pop
negl
sbb
pop
test
or
fcomps
fsubr
sbb
dec
mov
xchg
dec
jnp
mov
in
pop
adc
ljmp
ljmp
iret
xlat
sub
mov
and
mov
lock
mov
mov
mov
out
sub
iret
xor
ja
into
mov
loope
mov
popl
pavgw
nop
pusha
jo
jae
xchg
xor
icebp
xor
stos
test
inc
xchg
and
jb
movsl
shlb
sbb
out
mov
adc
ret
arpl
arpl
icebp
imul
xchg
mov
inc
mov
movsb
test
mov
movb
aad
sbb
fwait
xchg
hlt
jp
mov
xchg
and
mov
add
inc
push
mov
cli
and
cmp
pop
daa
cld
int3
xlat
cmp
mov
adc
or
or
xlat
cltd
push
cli
enter
sbb
test
mov
sbb
bound
dec
mov
sub
push
stc
push
jmp
xor
xchg
fwait
stos
lods
shrl
lock
mov
or
or
or
into
bound
insb
shll
xor
mov
dec
outsb
sub
add
push
outsl
popf
sbb
push
jb
inc
and
rorb
lahf
pop
push
xor
inc
movsb
je
sbbb
test
nop
jno
inc
aad
mov
and
shlb
xchg
andw
ret
aam
jae
imul
rcl
in
and
arpl
loope
jne
adc
in
insb
cmp
adc
out
push
cwtl
pop
inc
nop
jns
xor
test
mull
test
ja
pop
out
rcrl
pop
mov
sbb
push
xchg
sbb
test
cmp
leave
fisubrl
cltd
enter
cmp
sbb
jge
lea
lahf
aam
push
sarl
and
jp
sbb
cli
mov
jmp
add
mov
andl
xor
and
lds
push
mov
lret
lock
nop
lock
xor
xchg
mov
iret
jno
mov
xchg
outsb
loope
fiadds
jb
push
mov
or
push
clc
repz
nop
inc
and
push
andl
push
cmp
add
loop
jmp
sarb
adc
arpl
and
ja
pop
mov
mov
or
fisubl
ret
jb
inc
jno
or
sbb
jecxz
fcoms
or
sub
xor
scas
jge
sub
cmp
mov
xor
and
imul
scas
mov
int3
ss
ja
repnz
mov
mov
lahf
push
mov
clc
ljmp
push
and
int3
sbb
nop
imul
push
mov
ja
adc
in
daa
inc
incb
cmpsb
adc
int
sahf
push
jns
or
lea
pusha
fidivrs
imul
dec
or
shrl
hlt
sbb
pop
pop
adc
sbb
mov
inc
and
xlat
rcll
mov
rcll
ds
fcoml
popf
jl
and
mov
aad
out
sbb
cmpsl
cmp
out
cltd
pop
sarb
and
mov
push
sbb
lahf
jo
jbe
mov
xor
mov
insl
in
jmp
mov
notl
insl
pop
popa
jb
inc
sub
insb
sbbb
mov
fidivrl
pop
mov
sub
mov
cmp
daa
xor
cmp
sub
leave
cmp
out
dec
push
in
leave
fisubrl
sub
sub
cmp
imul
mov
std
arpl
jns
fidivrl
rolb
int
in
loopne
jle
jae
scas
outsb
sbb
out
or
push
push
scas
xchg
insl
jle
outsl
push
xchg
iret
test
out
mov
outsb
push
pusha
jo
push
hlt
lock
xor
inc
push
popa
jno
dec
out
rcl
loop
enter
push
bound
xchg
mov
jecxz
adc
xor
arpl
xchg
mov
in
adc
xor
push
push
test
aad
add
push
push
xchg
out
push
es
inc
push
xchg
mov
daa
aaa
cmp
push
mov
sbb
cmp
dec
pop
imul
sbb
cmp
dec
pop
push
mov
sbb
cmp
dec
pop
imul
sbb
sub
dec
pop
push
lcall
or
sub
cmp
imul
fsubr
or
sbb
cmp
pop
insb
lea
fucomp
or
dec
pop
outsb
mov
fsubrp
push
push
push
cs
dec
pop
outsl
lahf
scas
mov
mov
inc
push
pusha
jo
nop
mov
lock
and
inc
push
popa
jno
xchg
mov
loop
adc
xor
bound
xchg
mov
jecxz
adc
xor
arpl
xchg
mov
in
adc
xor
push
push
test
aad
add
push
push
xchg
out
push
es
inc
push
xchg
mov
daa
aaa
cmp
push
mov
pop
jne
cmp
imul
sbb
cmp
dec
pop
push
push
call
sub
je
mov
cltd
test
xchg
sbb
sub
dec
pop
push
lcall
or
sub
cmp
imul
fsubr
or
sbb
cmp
pop
insb
lea
fucomp
or
dec
pop
outsb
mov
fsubrp
push
push
push
cs
dec
pop
outsl
lahf
scas
mov
mov
inc
push
pusha
jo
nop
mov
lock
and
inc
push
popa
jno
xchg
mov
loop
adc
xor
bound
xchg
mov
jecxz
adc
xor
arpl
xchg
mov
in
adc
xor
scas
call
fisubs
add
add
pop
mov
adc
das
call
nop
xchg
inc
push
xchg
hlt
xor
adc
ret
mov
test
lcall
fs
rcll
sub
or
sub
or
ret
rclb
xor
jmp
or
cmpsb
cli
xlat
out
ret
sbb
sub
ss
cmpsl
cs
es
or
sub
cmpsl
mov
or
mov
addr16
mov
xlat
cmp
lods
mov
sub
or
stos
imull
push
jmp
cwtl
out
cmp
sub
mov
mov
inc
push
xor
call
mov
dec
push
fnsave
or
popf
out
loope
add
and
outsl
xor
pop
pop
in
dec
loopne
jg
fisubrl
xchg
insb
arpl
xchg
mov
dec
out
rcl
decl
xchg
movsl
mov
aad
nop
shr
outsb
adc
and
or
mov
mov
out
loop
xchg
bound
inc
xchg
in
xlat
out
pop
jnp
popa
mov
roll
sub
out
fsubr
or
sub
arpl
jo
movsb
mov
jmp
mov
loopne
adc
jne
rcll
cmp
dec
pop
imul
hlt
jbe
push
and
pop
dec
mov
mov
fcomps
jne
cmpsl
xor
inc
sbb
in
lods
mov
inc
arpl
push
pop
insb
lea
fucomp
or
dec
pop
outsb
mov
fsubrp
push
and
inc
adc
mov
or
mov
mov
in
add
cmpsl
xor
adc
add
mov
add
add
