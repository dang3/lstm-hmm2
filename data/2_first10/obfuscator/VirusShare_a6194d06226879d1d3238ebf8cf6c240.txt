push
call
ret
ret
repnz
cld
cltd
xor
xor
sarb
jns
xchg
pop
xor
test
pop
mov
push
negb
lds
xor
push
dec
jl
mov
sub
jle
or
cmpsb
push
add
sbb
arpl
inc
fwait
sbb
pop
add
fsubl
push
loop
sub
addr16
mov
push
push
and
fst
mov
xor
rolb
out
jmp
and
and
mov
shl
test
rol
inc
es
cs
fiaddl
mov
repz
and
or
sbb
add
adc
shll
lret
hlt
repz
mov
aad
outsb
loopne
push
mov
jp
dec
mov
fimull
cmp
dec
les
dec
pop
adcl
into
jmp
or
fsubr
hlt
scas
mul
push
inc
sub
pop
and
push
test
xchg
enter
ss
mov
data16
pop
push
xor
dec
bound
sahf
cmc
cmp
xor
outsb
lcall
push
cmp
popl
in
push
jne
aam
and
inc
stos
lcall
dec
mov
push
and
in
iret
imul
mov
add
shll
insb
or
jne
inc
arpl
lret
andl
and
pop
push
cmp
push
sub
scas
sub
in
push
lea
sbb
incb
ret
imul
cltd
jbe
int
push
lret
jnp
mov
dec
fldcw
xor
push
and
mov
pop
add
inc
cmpsl
ljmp
and
adc
dec
fisubl
mov
insb
sbb
movsl
jno
dec
cmpsb
inc
push
xchg
xchg
cs
ja
mov
call
xor
mov
mov
push
fldl
lret
mov
pop
fdivrs
adc
fldcw
mov
adc
lahf
out
pop
add
adc
jns
test
jb
sub
repz
out
lret
sbb
call
cmp
sti
pop
and
mov
loope
sub
loope
fisubrs
sbb
fs
fsubrl
int
and
xchg
leave
or
push
push
mov
daa
pop
push
adc
mov
mov
mov
mov
pop
loopne
push
mov
dec
cmp
sbb
push
or
sbb
pop
inc
mov
mov
xchg
mov
jae
movsl
in
andl
pop
pop
push
mov
or
popa
xor
movb
mov
icebp
fcompl
addr16
and
sbb
hlt
push
ds
adc
jle
push
mov
cmpsb
xor
jb
aad
xchg
gs
test
scas
push
nop
adc
adc
int3
int
sub
into
pushf
and
addr16
enter
sub
jg
mov
sub
pop
dec
mov
sbb
adc
dec
pushf
cmpsb
leave
xor
clc
mov
mov
insb
mov
movsl
es
mov
sbb
dec
jno
fildll
into
mov
and
incb
mov
sbb
or
cmpsb
xchg
cmpsl
dec
enter
cmc
cmp
mov
js
or
daa
mov
adc
call
add
daa
dec
jb
ret
iret
js
add
mov
idivb
scas
idivb
ret
cwtl
jge
mov
sbb
pusha
inc
jmp
les
mov
in
repnz
cltd
decl
mov
cmp
jno
jno
pusha
std
lds
pop
rclb
fdivl
xlat
cmp
out
or
dec
pop
mov
int3
scas
ret
jge
call
jmp
shll
ror
rorb
pop
fidivrl
push
jae
por
jnp
jl
push
sub
push
sbb
lret
lret
xor
sbb
add
add
in
add
or
inc
out
aas
bound
out
popa
int3
sbb
mov
shlb
jne
ja
adc
dec
cmpsl
adc
dec
fwait
dec
mov
fldcw
jo
inc
mov
rcll
out
psllq
pushf
adc
test
xor
inc
clc
or
mov
xchg
mov
jl
mov
sbb
inc
outsl
push
pop
mov
jg
pusha
adc
push
xchg
rcrl
inc
fdivl
ja
push
and
mov
mov
and
xchg
xchg
popf
ds
hlt
xor
jmp
scas
push
pusha
in
xchg
mov
es
push
in
jmp
inc
daa
dec
jb
call
mov
pcmpgtw
mov
cmp
pop
jns
and
daa
outsb
jo
sbb
lods
lock
pop
push
idivb
shll
push
int
cmp
lock
push
aas
jns
xor
in
enter
jo
out
subb
fbld
xor
outsb
in
clc
push
adc
mov
mov
and
movsl
pop
rorb
xchg
pop
xor
dec
imul
cwtl
in
cmc
pop
mov
dec
lds
push
xchg
mov
jmp
jb
js
pop
xor
les
sti
icebp
inc
mov
mov
testl
sahf
cli
xlat
pusha
ret
cmp
repz
xchg
lret
popf
int3
mov
fwait
stc
mov
push
jnp
mov
push
jo
fisubl
dec
jnp
and
sub
sbb
loopne
sub
imul
and
mov
test
xchg
notb
scas
pop
add
insl
mov
imul
push
aad
jecxz
cmp
cmpsl
imul
ret
rcr
and
dec
jns
test
and
adc
mov
cs
sbb
repnz
lcall
or
or
xchg
and
inc
xlat
ret
sbb
push
in
psubq
push
lahf
sbb
das
mov
xor
jnp
test
out
pop
sub
mov
pop
adc
mov
cmp
adc
adc
jl
sbb
cmc
dec
ljmp
mov
jae
out
jns
unpcklps
inc
jne
push
dec
mov
or
les
xchg
stos
mov
js
lds
jno
mov
pop
xor
xchg
movsb
clc
push
repz
ljmp
and
movsl
pop
xchg
pop
lods
pop
mov
ret
sbb
and
mov
lcall
stos
jecxz
repnz
push
sti
cmp
lds
xor
pop
jle
add
ret
or
push
popf
cmp
pop
xchg
or
pop
inc
leave
shll
cli
or
aad
test
mov
adc
ret
les
mov
into
out
or
push
nop
jmp
or
inc
add
adcb
repz
cwtl
and
clc
mov
stos
mov
icebp
mov
adc
data16
push
push
jno
dec
in
test
mov
inc
adc
jle
jbe
dec
sub
subl
sub
pusha
call
lods
sub
adc
in
lea
dec
adc
cmp
jno
dec
sbb
xchg
pusha
cmpsb
inc
jp
jnp
out
inc
jmp
or
ljmp
setge
cmpsl
dec
push
ret
jg
pop
popa
cmp
push
pop
rcl
stc
es
fsubrs
mov
and
adcb
loope
cmp
js
enter
scas
lahf
jne
inc
movsl
push
arpl
cmpl
fs
test
dec
inc
jmp
mov
in
ja
std
mov
mov
sbb
in
inc
add
imul
clc
jbe
mov
mov
inc
inc
inc
ds
mov
xor
ljmp
mov
push
test
dec
sbb
adc
out
loop
lds
ss
loopne
inc
mov
mov
mov
mov
xchg
popa
adc
data16
mov
sub
adc
outsb
stc
jmp
movntps
mov
loop
mov
pop
or
ror
push
mov
jl
fidivrs
jnp
and
adc
jmp
fdivrs
jmp
cli
rolb
mov
cmp
push
cmpb
fadds
xchg
in
or
and
jns
inc
dec
sbb
jmp
jl
cmp
cmc
rorb
es
mov
xchg
push
hlt
pop
jl
pusha
cmp
jns
and
test
aas
movsl
mov
mov
outsl
adc
stos
frstor
lret
fs
adc
or
sub
inc
xor
test
in
jl
insl
negb
ret
aas
je
dec
ret
cmp
shl
das
orl
fwait
test
mov
inc
pop
inc
push
out
adc
push
ja
sub
xchg
clc
add
sbb
fwait
pop
arpl
mov
cld
jl
jnp
stos
jp
mov
dec
cmp
fwait
aam
mov
and
mov
loopne
mov
xchg
inc
xchg
mov
adc
or
rep
push
lret
fisttps
inc
adc
xchg
push
pop
push
push
sbb
cmpsb
rorl
jmp
rcll
adcl
pop
mov
lcall
sbb
xchg
pop
sbb
ss
xchg
pop
mov
imul
cmc
dec
inc
adc
adc
lods
cmc
pusha
dec
jb
or
cld
lds
popf
add
pop
into
fwait
cmp
ficomps
add
lcall
test
cmpsb
jl
scas
xchg
mov
and
movl
add
cltd
shl
ficoml
pop
jne
insl
jg
pop
stc
dec
lret
add
cmpsb
cmpsl
in
mov
push
inc
pop
dec
std
testb
mov
int
cmp
out
hlt
subl
inc
mov
mov
pushf
sahf
xchg
sbb
imulb
imul
fadds
xor
jne
sbb
sub
or
nop
or
in
cmpl
lcall
mov
xchg
fdiv
aas
sub
mov
clc
push
nop
jbe
jle
mov
scas
bound
loopnew
lea
mov
cltd
mov
pushf
and
mov
insl
in
call
mov
call
pop
dec
sarl
add
out
and
mov
stc
rcrb
push
mov
mov
cmp
in
rcl
xor
or
xchg
ljmp
mov
lcallw
jo
movsb
repz
sbb
nop
aad
imul
enter
xchg
cmpsb
ljmp
test
sbb
and
mov
test
data16
push
sub
or
add
mov
pop
testb
rclb
xchg
mov
mov
ds
aam
push
shll
dec
push
inc
xlat
mov
and
movsl
scas
xchg
repnz
adc
je
cmc
out
js
pop
loopne
add
adcb
sbb
xchg
stos
stos
push
xchg
cmpsb
sub
add
test
sbb
jmp
enter
out
aam
cmp
lahf
and
fsubrs
jb
aaa
cmp
jmp
dec
dec
and
jle
xchg
test
aas
popa
movsb
jp
cmp
sub
lea
dec
mov
xchg
pop
icebp
lds
inc
xchg
mov
loopne
mov
inc
std
add
adc
pop
dec
das
mov
hlt
lea
add
mov
call
xchg
rclb
dec
imul
push
out
push
cli
fcmovnu
push
dec
nop
fistl
push
movsb
mov
ret
repnz
fsts
lock
xchg
mov
in
movsb
add
jb
or
cltd
jmp
arpl
sub
into
imul
mov
or
add
popa
mov
pop
jnp
lret
decl
idivl
pop
mov
hlt
dec
fcmovnbe
mov
loopne
push
js
xchg
mov
fdivrp
jae
push
out
or
ret
dec
and
ficompl
dec
mov
dec
cli
testb
ds
sbb
jnp
lcall
imul
inc
jl
add
xchg
int3
xor
or
sbb
add
jp
nop
jecxz
out
aad
stc
pop
add
or
add
push
xor
push
push
es
jo
int3
jl
mov
cmpsb
inc
cmp
adc
pop
rcr
adc
dec
stc
imul
jle
and
mulb
aam
aam
fistps
xor
inc
push
jo
adc
cmpsb
push
test
fbld
or
stos
sub
syscall
addr16
aaa
mov
pop
sub
mov
aad
addr16
fisttpll
sbbl
fidivs
xchg
out
ret
into
sub
stos
and
and
call
adc
mov
xor
fiaddl
jbe
pop
in
cmp
or
adc
cmp
clc
test
std
fwait
shr
stos
roll
add
adc
ret
dec
pushf
ret
pop
push
xor
call
shll
les
sub
mov
cmp
iret
repnz
mov
mov
loopne
sbb
sbb
and
mov
cmpsb
test
pop
lcall
or
jb
arpl
push
push
pushf
imul
sub
xor
mov
push
mov
pop
push
sub
mov
stc
mov
orl
jge
push
int
test
inc
loope
aas
cs
popf
lods
xor
xchg
push
mov
nop
fisttpll
xchg
adc
push
daa
in
rcr
add
inc
cmp
std
pop
jnp
aad
mov
mov
lods
sbb
stc
mov
cmp
fidivs
inc
data16
mov
push
add
je
lock
in
push
aam
das
push
out
sbb
es
jg
call
sti
xchg
mov
add
mov
loopne
inc
adc
jecxz
mov
cmp
xor
dec
xchg
mov
lret
fstpl
pop
insl
hlt
or
int3
pop
jmp
jp
ss
pop
repz
pop
scas
adc
adcl
cmpsl
js
add
iret
arpl
mov
and
into
jmp
or
jmp
insl
xor
mov
pushf
mov
in
mov
adc
inc
or
cmp
es
pusha
lea
push
dec
in
push
es
leave
and
xchg
xor
pop
mov
insb
pop
push
subb
stos
pop
push
add
loope
push
iret
es
adc
std
xchg
popl
mov
int
call
pop
jae
lock
je
fidivrs
inc
lock
ret
insb
popa
mov
aam
ja
bound
imul
pop
enter
stc
add
ret
xor
cwtl
cmp
xor
push
xchg
mov
xor
jp
sbb
jbe
push
push
adc
lret
popf
jg
sarb
negb
gs
add
fnstsw
lcall
xchg
pop
ficomps
inc
mov
mov
cmc
addr16
fs
fwait
aam
or
decl
movsl
xor
fnstsw
mov
and
adc
xchg
scas
lcall
mov
cli
xor
or
sbb
test
push
cld
xchg
shl
mov
adc
test
adc
loop
pop
mov
pop
xlat
ja
daa
fmull
add
dec
or
imul
fs
in
cmp
sahf
insb
xchg
xchg
enter
xchg
xchg
mov
out
js
lahf
dec
mov
xchg
int
add
into
mov
inc
lods
sub
sub
les
cmp
cmp
add
test
add
add
cmpsl
sbb
ror
jp
push
clc
test
nop
and
xor
pop
test
aaa
mov
and
add
fimull
and
adc
repz
inc
xor
lahf
negl
xchg
in
out
cmp
xor
push
inc
add
cltd
mov
outsl
jns
cmp
in
test
fsubrs
and
mov
xor
aas
pusha
dec
push
mov
jmp
mov
int
lahf
cmp
mov
rcll
xor
shll
sarb
dec
loop
in
and
adc
push
sub
pusha
or
jecxz
xor
daa
lock
and
imull
hlt
jecxz
mov
dec
stos
mov
ficomps
xlat
into
nop
mov
xor
or
outsb
add
mov
xor
mov
sub
inc
sub
call
pop
or
inc
das
inc
or
testb
enter
aad
in
hlt
sysenter
lahf
push
sbb
test
out
fstpl
push
xchg
mov
shll
lahf
mov
add
notl
sbb
mov
icebp
xor
pop
out
fcomp
hlt
into
pop
add
hlt
aas
idivl
mov
adc
mov
shrb
pop
test
push
inc
jp
inc
je
mov
rol
enter
stos
fldenv
or
mov
cli
addr16
adc
adc
call
shll
sub
jle
std
jae
fistl
cltd
mov
jnp
faddl
dec
cmp
loop
pop
add
out
popf
xchg
call
push
test
jne
mov
in
fwait
sbb
and
scas
loop
jl
inc
add
dec
dec
ss
cmp
jne
test
mov
dec
std
xlat
adc
test
loop
lock
and
pop
add
lret
cmpsb
dec
rcrl
xor
dec
jns
ds
in
or
fisttpll
xor
daa
pop
mov
iret
and
mov
dec
push
mov
push
dec
adc
aam
inc
rcrb
cltd
adc
icebp
loop
jbe
adc
and
xchg
dec
enter
mov
jge
inc
sub
cmp
ss
notb
mov
popa
cmpsl
or
inc
daa
pop
and
pop
mov
and
push
dec
push
call
test
in
adc
shl
mov
sbb
fcomp
into
adcl
movsl
pop
call
adc
xchg
dec
push
cs
shll
aad
adc
movsb
cmp
sahf
and
add
xor
lods
adc
shrb
loop
pop
and
rcrb
add
cmp
aad
out
les
mov
pop
xor
dec
test
fsubrl
ja
out
push
pop
pop
cmp
fimuls
mov
popf
add
enter
nop
xchg
cld
arpl
jg
shl
out
bound
insb
scas
mov
jb
mov
jno
sub
push
xchg
fcmovnu
and
add
adc
divb
in
xchg
ja
cs
push
repz
jnp
mov
out
cmpsl
lods
in
jp
xchg
out
add
adc
aad
es
inc
out
roll
lret
lahf
insl
js
std
push
adc
mov
mov
dec
push
xchg
lea
xor
xor
addl
xchg
mov
loope
mov
push
inc
fsts
jmp
cmp
in
je
mov
ljmp
mov
fwait
adc
scas
sbb
dec
andl
cli
mov
sarb
or
pop
or
mov
and
add
in
mov
dec
das
lds
jg
mov
add
dec
dec
sub
cwtl
jnp
in
rclb
nop
leave
shlb
arpl
cmp
xchg
sub
les
pop
aam
lahf
xchg
adc
jnp
sbb
dec
push
cmpsb
pop
and
xorb
mov
adc
fcoml
loope
adc
add
testb
fcmovb
popl
push
dec
enter
mov
xor
jnp
xchg
push
pop
int3
jne
sub
enter
mul
scas
sub
push
popa
xlat
cmpsb
jge
pop
outsb
lock
inc
lods
sub
fsubs
rcrl
mov
inc
add
popa
movsb
mov
jecxz
adcb
pusha
test
and
outsl
dec
outsb
add
in
rcll
inc
sub
xchg
xchg
mov
xor
xorl
jbe
daa
mov
xchg
ret
icebp
hlt
sbb
dec
orb
js
jecxz
pop
stos
mov
ret
add
adc
push
outsb
popa
fdivp
inc
push
jns
pop
mov
or
out
out
or
fwait
adc
in
inc
mov
add
adc
xchg
or
mov
sbb
mov
sahf
std
repnz
gs
inc
movsb
mov
leave
out
and
icebp
popa
adc
cld
cmpsb
lods
orl
adc
jbe
push
popf
mov
push
adc
xchg
js
sahf
inc
outsl
cmp
sbb
test
or
jo,pn
shrb
jge
clc
dec
fwait
jp
ds
dec
lods
pushf
mov
push
mov
and
jae
xor
dec
xlat
push
popf
jnp
mov
push
bound
push
sbb
int
push
xor
nop
sub
push
lods
xor
push
fs
and
mov
push
es
push
loop
mov
cli
mov
out
push
aas
and
sub
sbbl
sbb
mov
sti
dec
pop
cmp
xchg
jnp
jnp
cmp
mov
and
insl
enter
gs
subl
dec
inc
lds
xlat
ljmp
iret
inc
xchg
fucomi
cmpsl
pop
hlt
sub
shlb
push
sbb
inc
mov
push
fistpl
cld
loopne
lock
push
xor
sub
and
jecxz
mov
lret
jbe
mov
test
xchg
aam
into
dec
inc
adc
popa
out
xchg
scas
mov
mov
or
daa
jnp
shll
cli
aaa
adc
and
dec
into
mov
pop
loope
lea
fucom
cli
in
outsb
xchg
ret
inc
test
sbb
daa
cltd
sub
jge
mov
sbb
cltd
and
xchg
dec
mov
bound
jne
xchg
sub
hlt
sub
pop
push
js
aam
cmp
cmc
das
movsb
mov
aas
repnz
lahf
push
mov
outsl
xchg
sbb
out
ror
mov
pop
sti
or
xorl
stos
imul
pop
mov
loop
xlat
dec
sbb
cmp
and
pop
add
lods
loopne
dec
mov
push
cmp
adc
sbb
inc
sar
mov
or
stos
adc
pop
test
ficoml
adcl
cld
mov
mov
push
mov
dec
scas
dec
bound
mov
cmpl
insl
mov
or
popf
xor
add
scas
and
xchg
pop
je
stos
loope
aas
dec
popf
fidivs
xchg
notl
hlt
and
mov
xor
gs
mov
sbb
mov
inc
mov
add
ljmp
sub
lcall
test
mov
push
xchg
adc
imul
add
cmp
mov
lods
or
jne
inc
xor
push
push
mov
xchg
dec
fs
addr16
or
cmpb
pop
and
mov
mov
dec
pop
xlat
xchg
dec
loope
pop
dec
lods
mov
imul
jne
push
lock
and
pop
mov
jecxz
ret
sbb
ss
enter
pop
xchg
mov
jb
push
dec
sub
sahf
loope
jl,pt
sub
pop
adc
repnz
dec
imul
mov
outsb
or
pusha
mov
mov
dec
data16
out
dec
ret
push
xor
push
push
aas
jp
xlat
mov
ret
dec
mov
pop
dec
or
or
lock
inc
decb
sbb
push
les
jae
stos
fisttpll
rcrl
and
mov
dec
out
inc
xchg
xchg
or
popf
adc
aas
mov
test
scas
addb
xor
scas
cld
xlat
add
lods
jb
int3
mov
sti
stos
sarb
out
aaa
xchg
pop
call
out
test
cmpsb
jbe
test
mov
cltd
popf
test
jl
mov
jecxz
lahf
insb
movsl
jns
cmp
cmp
cltd
out
and
test
repz
mov
sti
addr16
sub
adc
ret
pushf
int
cmp
es
and
pop
add
push
adc
sbb
clc
out
pop
popf
sub
push
addr16
pop
add
add
ljmp
popf
and
out
jmp
test
lret
fstpt
dec
pop
inc
and
ret
or
out
jno
fists
xchg
add
add
cmp
dec
flds
jne
jne
sahf
jns
xchg
mov
jmp
or
imul
filds
xor
popf
jns
push
mov
aam
or
stos
lcall
adc
sub
bound
mov
push
dec
bound
cli
push
insb
jb
fists
pop
mov
lods
pop
fisttpl
outsb
dec
test
cmp
push
sub
jno
mov
add
cmpsl
and
scas
lcall
jg
test
mov
add
mov
push
sbb
enter
ds
sub
sub
dec
push
sub
cs
outsl
xchg
add
mov
adc
adc
xchg
aad
jl
or
mov
add
xor
fstpt
adc
push
jo
inc
mov
mov
orl
clc
xchg
xor
cmp
inc
and
push
ljmp
lods
mov
or
aam
mov
jmp
loope
mov
inc
cmp
cmp
cmp
xchg
cmp
cld
xor
push
sub
lret
lret
cmpsb
mov
jnp
out
xchg
jo
inc
mov
inc
jno
gs
jmp
mov
sub
sahf
and
test
xor
xchg
shrl
scas
mov
and
jle
lret
sbb
sub
les
xchg
add
push
div
push
mov
mov
cmpsb
push
xchg
xchg
pop
mov
and
testl
cmp
dec
mov
pushf
xlat
mov
adc
sub
and
out
xor
addr16
adc
mov
mov
push
push
insb
cld
and
sbb
mov
adc
lock
sub
and
std
out
cmp
sub
repz
lock
in
fdivrs
test
jbe
xor
sbb
dec
cmp
and
jo
xlat
pop
hlt
pop
mov
sahf
out
and
fildll
cld
std
mov
pushf
cmpl
push
xor
xor
rorl
iret
es
ret
ror
add
sbb
inc
in
dec
xor
iret
ljmp
fcomi
mov
and
aaa
sarl
mov
jle
aas
loope
out
sub
divl
sub
add
mov
inc
mull
fsubrl
push
aaa
sahf
imul
dec
das
vmovapd
mov
xor
in
inc
sbb
jle
xor
lods
add
loopne
push
inc
mov
lods
jo
js
push
hlt
int3
fwait
nop
lea
outsl
scas
hlt
clc
sub
sbbb
cmpsl
sbb
push
mov
and
adcl
mov
push
or
punpcklwd
std
cmp
insl
inc
jge
cmp
inc
lods
popa
shr
dec
dec
pop
adc
test
adc
fs
xor
cld
sub
aas
add
loopne,pn
add
orl
lcall
stos
xchg
aad
test
add
hlt
mov
add
mov
jbe
add
xor
aam
out
mov
ret
xor
cmp
fdivr
icebp
push
mov
decb
pop
cld
mov
or
into
mov
mov
lea
jno
adc
pop
popl
mov
mov
push
xchg
in
lret
sti
in
pop
fdivs
jp
ja
int
fs
test
lea
cltd
xor
cmp
dec
push
gs
mov
faddl
test
sti
adc
test
notb
nop
cld
scas
popa
stc
test
jne
pushf
cmp
jae
pop
and
in
sub
and
mov
pop
pusha
divl
fiadds
inc
jl
push
test
mov
xor
lds
ficoml
stc
adc
pop
lods
fimull
ror
mov
mov
outsl
dec
cmpsl
insb
xlat
cmp
sub
jecxz
js
cmp
cmpsl
push
aas
cli
in
lods
fldt
dec
mov
mov
inc
and
sub
mov
adc
ljmp
jecxz
inc
cld
sbb
and
xchg
jae
ds
std
mov
cs
push
and
xor
push
daa
pushf
xchg
mov
lahf
mov
and
push
xchg
xor
cmc
lods
pusha
adcl
mov
sqrtps
in
sbb
lret
testl
xchg
push
push
negb
pop
mov
jae
aaa
outsl
adc
cwtl
bound
test
shl
cmp
dec
out
clc
stc
adc
sbb
sahf
mov
popf
cmpsb
xor
lock
sbb
pop
popf
pop
mov
add
mov
or
sbb
jge
mov
jne
fstp
scas
pop
mov
mov
lret
popf
sahf
xchg
and
push
add
imul
or
xor
mov
lcall
pop
shlb
mov
roll
xchg
cwtl
test
ret
adc
outsl
lret
xlat
loope
loope
adc
and
sbb
int
fcoml
sbb
mov
mov
inc
int3
jns
xchg
dec
sub
aas
xchg
or
and
rol
xor
mov
fstpl
jp
icebp
mov
stos
rolb
clc
movsl
fldenv
scas
mov
leave
testl
jb
pop
xchg
mov
rolb
orb
pop
adc
repz
js
daa
adc
sbb
ret
sub
pop
xchg
rorl
and
mov
aam
pop
xchg
je
lret
cmp
inc
scas
mov
mov
fstpl
pop
cmp
mov
or
outsb
mov
push
aas
mov
sbb
pushf
and
int3
push
or
xchg
rorl
inc
cmp
push
mov
pop
mov
jge
stos
popa
push
in
adc
push
pop
inc
xchg
aad
cmp
rcll
loop,pt
push
pusha
dec
mov
push
dec
dec
arpl
xor
cmpsl
rolb
fstps
pop
jnp
loop
mov
or
test
mov
lea
push
movsb
sub
mov
push
adc
dec
popf
and
in
adc
loope
sub
mov
arpl
addr16
mov
push
mov
scas
dec
adc
add
shl
or
push
popf
rcr
faddl
std
lods
in
ret
lcall
jo
xor
cld
decl
jge
jmp
xchg
cmp
adc
jnp
movsb
mov
mov
insl
js
fcompl
pop
pop
push
sub
mov
xchg
xor
jno
pop
arpl
pop
pushf
cmc
fdiv
add
mov
or
add
mov
xor
cmc
ja
mov
push
xor
mov
and
cmp
test
dec
out
mov
pop
ja
mov
xchg
inc
dec
push
or
filds
cmpb
add
adc
or
insb
sub
aad
cmp
pop
pop
cmpsb
shll
mov
mov
push
or
push
add
cmp
cmp
mov
lds
out
cs
sbb
shl
lahf
ss
leave
pop
test
imul
fwait
jecxz
sub
xor
movsb
int3
mov
repz
inc
insb
lcall
cmc
dec
push
arpl
mov
and
cs
adc
mov
and
sbb
lds
jg
stos
sbb
hlt
icebp
jns
iret
sbb
les
ficoms
adc
outsb
jle
mov
adc
inc
adc
jo
cmpsb
inc
sbb
out
and
repz
sub
push
or
into
test
les
lret
stc
or
cwtl
std
out
push
into
add
sbb
mov
mov
jns
xchg
push
lahf
mov
in
push
cli
and
enter
lds
mov
mov
cmp
add
jmp
loop
xor
mov
out
mov
cmpsb
push
sti
std
mov
mov
je
xchg
sbb
sbb
imul
push
stos
mov
in
cmp
fwait
mov
sbb
dec
xchg
jge
test
jmp
rorl
hlt
sbb
xor
pop
pop
xor
aad
jb
imulb
mov
in
insb
iret
das
mov
call
jbe
xchg
lcall
and
bound
pop
orl
loopne
icebp
mov
mov
jmp
in
inc
into
cmp
icebp
xor
aas
fists
and
pop
fmul
pushf
nop
outsl
add
in
int
cltd
or
insl
and
or
lcall
or
push
inc
pop
and
pop
inc
pop
and
aad
xchg
jg
sbb
inc
loop
xor
jmp
aas
inc
ja
adc
dec
mov
sbb
adc
cvtdq2ps
lret
cmpsl
mov
mov
std
xor
test
mov
pusha
roll
enter
sbb
popa
lahf
ljmp
pusha
dec
push
das
out
loopne
sub
fs
loop
js
fldt
in
ja
adc
addr16
sub
out
mov
sub
xor
sbb
jno
pop
test
or
enter
je
std
jmp
bound
mov
sbbl
push
sub
sti
dec
xor
and
fildll
xor
add
and
enter
fs
enter
and
aas
sub
je
push
inc
and
mov
lds
sahf
aaa
jns
and
add
adc
mov
fsubr
jno
fisubrl
aam
inc
mov
ljmp
or
xchg
test
add
sub
mov
rorl
cli
movsb
pop
sbb
stos
fdivrp
pop
int
lea
mov
xchg
push
mul
cmp
push
mov
mov
sub
mov
lods
rorl
nop
jg
pop
xor
cli
aad
ljmp
sbb
je
aad
out
push
hlt
out
jg
lock
call
add
push
in
or
xor
cmp
test
gs
jge
aad
iret
mov
pop
push
pop
inc
jnp
or
mov
mov
addr16
mov
jge
jnp
add
sahf
ret
dec
mov
adc
jno
inc
popf
jecxz
orl
mov
jne
lods
jg
xor
movsl
leave
push
sbb
sarb
fs
aas
adc
imul
cltd
and
dec
or
cli
pop
pop
popf
cld
stos
mov
pop
mov
lahf
cltd
js
je
lcall
mov
popa
jecxz
adcl
xchg
push
rolb
jnp
mov
mov
inc
out
push
ror
pop
cmpsb
push
ja
adc
pop
enter
adc
xor
adc
jbe
out
add
repnz
movsl
xchg
add
ljmp
lea
xchg
fildl
add
pop
cmpsb
sub
aaa
jle
sbb
sub
pushf
push
dec
rcrb
repnz
ja
pop
jg
jp
cmc
sti
loope
xchg
pop
xchg
out
out
inc
cltd
inc
inc
mov
xchg
mov
xor
fdiv
mov
out
int
jbe
mov
xchg
pushl
fs
mov
lods
fldl
lods
lret
lcall
mov
push
test
xchg
cmpl
mov
sub
push
mov
pushf
dec
psrlq
scas
loope
shlb
dec
cmp
js
mov
cmp
add
mov
push
shll
jmp
mov
xchg
push
ljmp
inc
gs
sbb
cltd
rorb
and
inc
inc
outsl
xchg
lahf
call
fmuls
mov
and
and
lods
sbb
fsts
xchg
sbb
pop
lea
sub
pop
lds
imull
dec
ds
inc
icebp
movsb
inc
aad
pop
shll
cmc
inc
dec
add
pop
mov
add
stos
dec
lods
mov
xlat
xchg
push
pop
pop
sbb
test
mov
xorps
fnsave
xor
adc
cld
push
xlat
cli
ja
sbb
fstl
dec
pop
int
and
adc
jns
cmc
repz
pop
arpl
mov
mov
pop
loope
out
sbbb
pop
jns
mov
and
mov
mov
imul
xor
pop
adc
pop
addr16
xchg
in
out
cmpsb
push
sbb
pop
adc
fnstsw
sbb
ds
cmp
pop
lds
cmc
imul
sbb
adc
cmpsb
pusha
mov
imul
or
pop
daa
mov
jbe
mov
stc
push
mov
gs
insl
outsb
jbe
cmp
daa
mov
mov
lcall
push
inc
rorl
xchg
pop
xlat
mov
add
scas
daa
aam
jbe
pop
mov
push
test
push
ss
bound
out
and
je
push
add
idivl
xor
ss
loope
push
pop
sbb
fisttpl
add
clc
xchg
xlat
pop
cwtl
test
pop
cmpsl
adc
xchg
dec
sub
pop
iret
mov
jb
pop
jne
jb
pop
aas
stc
sbb
mov
in
sub
repnz
ja
push
add
jge
lcall
mov
gs
cld
lods
mov
shr
pop
or
addl
pop
pop
ret
ficoms
test
sarl
jns
sub
lea
inc
cmp
lret
pushaw
mov
sbb
or
sbb
int
js
mov
and
outsb
mov
add
dec
jbe
call
js
pop
cwtl
xchg
xor
outsl
jns
aas
push
inc
xlat
iret
xchg
sub
in
xchg
add
mov
cltd
push
lahf
popf
movsl
lahf
ror
movsb
dec
repz
xor
aaa
mov
mov
mov
jb
adc
cwtl
and
ljmp
xchg
mov
dec
xor
mov
jecxz
xchg
xchg
and
cmp
jae
jo
mov
sbb
jnp
pop
std
negb
cs
subl
cmp
lret
inc
test
push
int
xchg
xchg
repz
fdivrs
mov
test
sbb
adc
dec
in
mov
xlat
dec
and
xchg
cmpb
loope
adc
dec
in
insl
push
inc
xor
dec
xchg
rorb
xchg
cmp
mov
xchg
mov
inc
mov
or
aad
sbb
ss
mov
cmp
pop
mov
cmp
sub
scas
or
std
out
iret
sbbl
xchg
sbb
int3
cmp
divl
jnp
xor
pop
and
push
test
enter
jg
nop
xchg
and
mov
sahf
sbb
in
push
hlt
dec
std
sub
adc
xchg
cmp
add
pop
inc
insb
ljmp
lcall
push
insb
adc
test
xor
movsb
xor
push
add
sub
inc
loopne
inc
dec
pop
js
fildl
leave
mov
mov
pextrw
je
or
into
mov
scas
jo
cmp
xchg
pop
shll
jne
or
jg
fisubrl
mov
jecxz
subl
orl
xor
push
andb
dec
dec
dec
movsb
test
mull
pop
insb
push
mov
cmpsl
add
pop
les
enter
lcall
into
jge
cs
daa
or
dec
pop
lods
fbstp
ljmp
ret
loop
or
xchg
jg
aam
xor
pop
sub
mov
cli
jge
xchg
int3
or
sub
lahf
mov
rcrl
addr16
inc
cmp
xor
inc
pop
aam
orb
jecxz
fwait
scas
push
outsb
xlat
ret
icebp
in
mov
cli
add
push
fwait
test
addr16
and
mov
ret
sahf
lods
inc
mov
repnz
sbb
mov
das
push
jg
xor
ret
xlat
fcmovnbe
push
leave
and
add
frstor
in
out
andb
and
pushf
pop
out
in
int3
jno
mov
or
scas
lret
repz
repz
pop
xorl
mov
sbb
inc
xchg
push
adc
in
mov
cmp
lods
mov
lock
aam
lods
bound
and
or
out
dec
ret
stos
inc
sub
loop
jno
mov
push
cld
jno
loope
mov
cwtl
mov
or
cmpsb
mov
pop
dec
or
dec
pop
inc
pop
sahf
jecxz
sbbb
and
movsl
sbb
jne
test
movsb
and
or
notb
cs
or
lret
je
jmp
lds
aam
add
lea
jge
dec
pop
jg
or
jae
in
shrw
scas
mov
dec
inc
xchg
push
lret
fistps
sub
push
mov
cli
inc
cmpsl
and
imul
inc
inc
shr
or
dec
pop
in
cs
add
add
bound
ljmp
xchg
repz
aas
or
insb
mov
cmp
mov
mov
xchg
mov
cmp
or
bound
or
lcall
xor
insl
dec
fdivrs
fsubl
pop
pop
xchg
es
mov
jmp
xlat
jl
cmc
js
xchg
test
int3
or
adc
out
mov
pop
scas
insb
loope
and
call
jge
lods
inc
xchg
mov
lret
mov
xor
xchg
pushf
loope
lret
add
jmp
fimull
dec
pop
push
jno
cmp
and
ss
cld
in
fcomi
fldenv
mov
lds
scas
push
cmp
mov
sub
int
fs
push
inc
xor
scas
or
cltd
xor
fs
push
lds
xor
dec
inc
inc
stos
cmp
call
jns
lods
jbe
int
and
mov
dec
call
push
and
push
dec
mov
movsl
aas
popa
mov
addl
add
rol
dec
add
xchg
and
jp
std
push
xlat
mov
js
inc
daa
jge
jo
nop
mov
jnp
lret
in
adc
nop
in
jne
mov
arpl
and
add
xor
jecxz
in
cli
repnz
fs
mov
xor
fcmovu
sbb
sub
push
inc
test
fnstcw
push
mov
arpl
mov
data16
ja
push
or
in
add
mov
aas
notl
out
inc
scas
push
push
or
or
inc
in
int3
xorl
stc
push
cli
mov
je
repnz
inc
dec
lods
repz
leave
mov
add
push
loop
adc
mov
mov
call
pusha
movsb
in
aad
dec
fsubp
or
xchg
in
call
lret
and
pushw
or
mov
ss
movsl
loopne
or
mov
cmp
inc
cmp
pusha
pusha
jne
sti
rcrl
jb
into
dec
mov
dec
xor
loop
sub
pop
mov
test
sahf
popf
adc
mov
jecxz
shll
test
sbb
add
flds
addr16
xor
xchg
aaa
fadds
mov
sbb
pop
fwait
lret
clc
stos
sbb
mov
popa
scas
iret
orl
repnz
mov
addr16
mov
and
nop
and
sub
mov
xor
jae
stos
scas
imul
mov
mov
icebp
and
loope
push
mov
je
icebp
mov
cltd
jge
jo
xchg
sub
push
jp
xor
push
ret
int3
push
dec
ja
dec
jns
and
leave
insb
pop
push
test
int3
jbe
outsl
test
pop
dec
cwtl
in
xchg
mov
pop
xor
pop
jge
dec
adc
loopne
hlt
and
add
lods
cmp
loope
faddl
dec
pop
fwait
pop
sub
outsb
push
stos
pcmpgtw
out
xchg
or
pusha
in
adc
xchg
xor
sti
mov
mov
pop
inc
lock
pushf
or
jle
rolb
out
loope
clc
push
aas
pop
or
mov
sahf
int3
ja
pop
out
inc
pop
fsts
cmc
push
xor
gs
int3
mov
icebp
add
pop
jg
sahf
push
test
pop
mov
mov
xchg
sbb
test
pop
pop
mov
and
sbb
inc
push
xchg
fcmove
cmp
jmp
les
sbb
adc
les
add
sbb
outsb
aam
xchg
cmp
roll
pop
add
xchg
or
int3
out
ss
cmp
test
cwtl
dec
stos
test
std
adc
in
jo
fwait
jg
lcall
jnp
cmp
add
jmp
xlat
sar
xchg
das
data16
mov
fwait
iret
ret
xchg
cld
insl
fcmove
push
add
push
sbb
test
inc
lcall
out
out
gs
rol
mov
inc
fidivrl
testl
mulb
mov
mov
sti
add
mov
cwtl
outsb
js
out
add
xor
mov
pop
aam
add
sti
flds
insb
ds
cld
xchg
xchg
dec
mov
popa
outsl
ret
dec
push
push
inc
test
xor
and
jecxz
adc
rcr
dec
or
aad
out
dec
sbb
xchg
imul
movsl
or
sbb
add
les
sahf
subb
cmp
rcrb
mov
dec
jns
out
cmp
aas
loope
adc
cmpsl
js
xchg
mov
mov
xchg
or
and
mov
les
lods
xchg
in
sub
out
inc
sub
add
cmp
push
or
pusha
mov
adc
sahf
cmp
xor
inc
push
enter
in
cmpsb
xchg
sahf
dec
lods
int
in
out
mov
icebp
cltd
mov
sbb
mov
sbb
outsb
popf
fwait
and
and
fndisi(8087
mov
addr16
xor
jg
das
cld
jo
scas
inc
test
xor
mov
xor
popf
mov
pop
insb
out
scas
xchg
sarb
xor
add
mov
fldenv
push
cmp
lahf
jmp
adc
ss
daa
lret
sbb
pop
lahf
add
mov
or
dec
pop
data16
in
push
or
jle
dec
loopne
inc
mov
fsubs
or
das
fiaddl
push
push
in
xor
data16
imul
mov
shl
dec
fiadds
aam
mov
xchg
clc
les
dec
push
jbe
mov
mov
inc
bound
shll
cmp
inc
call
jmp
fnstcw
mov
sar
xor
outsb
imul
insb
loope
hlt
jg
ret
xor
in
xchg
hlt
mov
popf
mov
and
fbld
push
xor
bound
je
mov
inc
repz
cmc
cwtl
sti
and
xlat
ljmp
js
sub
mov
mov
inc
mov
repnz
sub
mov
popa
push
negb
test
into
das
cmp
mov
push
mov
psubsw
pop
xor
push
sbb
pop
repz
stos
add
rcll
jbe
std
jbe
gs
and
adc
dec
xchg
aas
jnp
cld
jl
or
in
cmp
lret
outsb
loop
out
mov
mov
popa
lods
xor
cmc
mov
jbe
arpl
jae
jbe,pn
mov
pop
repz
ret
dec
jge
jnp
xchg
call
cs
mov
mov
jns
je
mov
xchg
xor
add
dec
and
and
jb
or
lea
pop
cmp
jno
out
testb
aam
aad
sahf
cltd
cmp
into
sbb
mov
xor
xor
inc
aas
stc
test
test
fsubrl
or
jae
push
popf
pop
sub
xchg
ret
ja
idivb
fdivl
dec
daa
lods
rcrb
lret
inc
pop
pusha
pop
xlat
xchg
shlb
add
in
push
add
or
push
mov
dec
jecxz
mov
cli
fs
sub
inc
test
sbb
jne
and
lret
mov
cli
movsl
lock
clc
sbb
cmpsb
jbe
mov
hlt
aad
inc
xchg
out
sbb
add
imul
in
mov
xchg
andb
lahf
mov
pop
xchg
mov
mov
shrl
mov
rcll
jmp
shrl
mov
insl
cmp
jo
lahf
mov
stos
inc
push
cli
out
orl
sub
push
cwtl
dec
pop
leave
and
dec
push
pushf
ss
fmul
add
mov
in
std
into
std
sub
adc
outsb
mov
jae
cmp
popa
lahf
sbb
dec
mov
add
mov
jbe
inc
ss
sbb
push
pop
out
add
sub
arpl
movsl
icebp
rorb
out
out
pop
mov
sub
fstps
test
jl
adc
adc
insb
loope
pop
mov
sti
pop
out
and
inc
ss
jb
or
jnp
adc
das
jne
test
push
fwait
jecxz
shrb
ss
int3
ss
cwtl
xchg
outsl
jecxz
orl
pop
pop
jne
shrl
sub
pop
test
or
imul
rorl
jl
inc
rclb
or
nop
and
jns
or
mov
fs
sbb
jp
xchg
mov
push
pushf
xchg
adc
fldt
cmc
loopne,pt
push
mov
sub
ljmp
test
push
pop
ljmp
mov
rclb
bound
lock
xchg
sbb
stc
ret
scas
fiadds
cmc
loopne
into
stos
pop
cltd
jo
mov
negl
push
loopne,pt
add
mov
popa
xlat
and
lea
incb
jnp
lret
ret
gs
ljmp
das
inc
pop
dec
mov
stos
iret
add
pusha
xchg
out
dec
loop
imul
ss
int
inc
xor
xchg
je
and
loop
sbb
mov
inc
aas
hlt
cmp
add
in
pop
push
ret
repnz
push
pop
push
out
mov
jp
outsb
lods
jmp
or
dec
push
pop
mov
xor
xor
pop
pop
pop
mov
dec
mov
pop
orl
jae
dec
xchg
jge
lods
push
mov
jecxz
push
mov
outsl
push
mov
repz
icebp
iret
and
incl
jno
lret
fstpl
mov
lcall
xor
add
das
out
iret
sbb
pop
in
push
or
arpl
cmp
sub
addr16
daa
cli
fs
pop
cltd
aad
and
push
ret
movsl
shrl
inc
fiadds
xor
cmp
test
ss
xor
int
mov
pop
dec
push
push
lcall
sbb
pop
movsl
inc
pop
mov
adc
shl
add
ret
nop
hlt
insl
or
or
fucom
dec
cwtl
loopne
cs
adc
inc
out
cmp
inc
loopne
xchg
insb
es
daa
mov
cmpsl
and
mov
pop
sbb
or
xlat
sub
stc
push
imul
js
jle
paddb
test
cli
roll
mov
arpl
xor
mov
imul
cmp
cmp
dec
xchg
shlb
sbb
shrb
sbb
mov
insl
mov
sbb
or
mov
fnstsw
out
add
xor
hlt
push
push
testl
insl
mov
sti
dec
mov
pop
sti
mov
lock
aad
dec
and
cltd
and
imul
sbb
in
jmp
add
icebp
jmp
inc
ds
xor
arpl
add
int3
iret
ljmp
lock
dec
dec
loop
sbb
shlb
int
movsb
mov
mov
and
enter
xchg
lds
loop
out
scas
pop
mov
mov
pushf
ror
jae
cmpl
das
pop
enter
adc
xlat
jae
ficomps
cmpsl
ljmp
push
in
mov
leave
test
stos
sub
pop
ret
add
pop
lahf
movsl
stos
negb
fcmovnb
psllw
jmp
ficoms
xchg
mov
and
xchg
push
pop
push
cmpsb
adc
push
dec
or
imul
out
push
es
jmp
cmp
jg
loopne
cmp
sti
lds
adc
inc
int
mov
jle
scas
push
icebp
sbb
adc
lds
and
stos
dec
mov
xor
and
cmp
and
shrb
in
insb
inc
push
insl
add
repnz
xchg
loopne
into
xchg
loop
push
jb
dec
in
inc
jb
sahf
inc
movb
sbb
mov
jb
cmp
out
and
mov
mov
outsl
add
and
scas
mov
pop
pop
and
out
test
jmp
mov
mov
cmp
mov
aam
loopne
clc
sbb
xor
dec
es
sub
xchg
xor
mov
cmpl
jecxz
jae
in
dec
fidivs
fidivl
pushf
mov
add
stos
icebp
ljmp
mov
jae
and
jb
rcl
repz
fs
inc
or
rcl
dec
lret
mov
sbb
out
jno
or
pop
clc
cmp
and
enter
lahf
shrb
out
mov
fsubrp
push
inc
dec
gs
aaa
jg
mov
pop
ss
arpl
dec
repz
ja
xchg
ljmp
repnz
pop
pop
push
bound
roll
das
push
mov
cmp
out
out
or
mov
imul
and
roll
cltd
xor
cmpsl
add
shrl
lea
cmp
xchg
mov
je
aas
jne
pop
xlat
pop
xchg
fstl
daa
pop
mov
and
dec
mov
out
or
cs
mov
adc
clc
lcall
sbb
mov
fists
cmp
loop
shl
out
loope
cmpsl
ror
pop
xchg
flds
jo
in
pop
add
loopne
push
in
fdivrl
pop
hlt
mov
sub
in
or
filds
jge
scas
stc
sbb
adc
out
mov
jecxz
pop
in
inc
test
pop
scas
adc
das
mov
popa
xorl
mov
rcr
outsl
sub
xchg
ret
cmp
test
jnp
sub
cmp
imul
loopne
and
fcmovnbe
js
cmp
xor
mov
jp
cs
inc
cwtl
dec
enter
in
int3
jmp
xor
jl
push
dec
test
mov
repz
mov
faddl
mov
lcall
inc
cmp
dec
ret
mov
loop
out
xchg
jecxz
dec
rorl
and
cmp
hlt
mov
sbb
and
pushf
sub
mov
subb
mov
adc
sub
mov
lock
test
push
pop
or
cmp
dec
or
and
mov
stc
adc
dec
jg
cmp
addr16
xor
mov
cs
inc
cmp
sarb
add
add
lea
mov
mov
xchg
xchg
rcl
sahf
loopne
mov
popf
fistps
xchg
mov
cmp
push
pop
xchg
inc
lret
orps
pop
stc
and
fwait
pop
cmp
mov
jmp
imul
lea
loope
mov
stc
push
pop
scas
mov
stos
jnp
inc
or
fistl
aad
push
in
pop
pop
scas
adc
orb
sub
loop
std
push
mov
pushf
pop
addr16
lds
pusha
repz
jns
inc
and
out
pop
fnstsw
lods
pop
in
push
mov
faddl
inc
mov
mov
xor
leave
sbb
ja
xchg
and
pop
int3
dec
insb
or
jg
mov
add
imul
into
and
sub
arpl
ficompl
mov
mov
out
in
inc
pop
int
sbbb
xor
loopne
rcrb
int3
xor
sbb
add
sbb
out
xor
push
fdivrl
sub
and
mov
jo
insb
sub
out
push
xchg
push
mov
je
jno
lods
jmp
hlt
pusha
adc
popf
xchg
rclb
adc
dec
pop
dec
or
adcl
ret
scas
out
mov
jb
daa
gs
and
add
xchg
imul
cmp
fcoms
int
fimuls
out
sbb
sbb
arpl
int
mov
hlt
popa
cmp
pop
fisubl
in
or
sbb
xor
mov
adc
pushf
gs
int
inc
push
and
jle
movsl
pop
dec
and
inc
cmc
xchg
push
push
inc
pop
call
rolb
inc
xchg
aad
xor
aad
mov
adc
inc
in
lds
mov
add
nop
adc
fwait
xor
sti
pop
fnsave
jne
mov
dec
jecxz
inc
in
andl
mov
mov
and
lock
pop
int
dec
sbb
mov
push
add
popl
inc
mov
jp
int3
push
jnp
stc
push
fidivrs
mov
cmp
push
push
pop
dec
add
pusha
out
scas
sub
repz
lods
pop
xchg
dec
sbb
push
jl
jno
cmpl
shll
and
cli
lods
and
pusha
loope
or
lds
and
leave
std
scas
inc
ret
iret
xchg
inc
fidivrl
daa
fbstp
or
inc
in
loope
xor
jecxz
xchg
sbb
xchg
stos
aad
xchg
stc
pop
cmpb
push
fldl
push
and
xchg
daa
in
int
cmp
mov
sub
in
lcall
inc
ret
lcall
das
xlat
xor
add
inc
mov
je
push
adc
cwtl
cmpl
and
imul
push
jnp
fcmovu
mov
cmp
fwait
or
lahf
jns,pn
hlt
std
ja
cmp
mov
and
inc
xchg
cmpsb
lea
movsb
mov
lea
mov
push
push
pop
xchg
mov
and
lret
shll
inc
cmp
xchg
pop
xor
pop
push
or
dec
jp
jp
jo
sahf
shlb
icebp
push
jbe
mov
jae
jbe
push
push
xchg
daa
in
shl
nop
pop
xchg
adc
outsb
nop
pop
ret
outsb
cmp
add
data16
dec
mov
xchg
sub
add
das
sbb
and
addr16
or
popl
cmc
xor
mov
jl
pop
leave
lods
pop
jle
scas
jle
mov
pop
mov
cmp
psadbw
bound
imul
mov
stos
sahf
negb
sahf
outsb
notb
imul
sbb
mov
xchg
ret
xchg
rorb
jb
dec
leave
test
mov
adcb
and
int3
fidivrs
fwait
das
fcos
sub
mov
and
inc
sub
pop
aad
jno
adc
int3
adc
or
mov
std
rclb
push
xor
inc
out
cmp
stos
sahf
pushf
ret
ja
ficoms
les
lret
es
push
test
imul
int
mov
cmc
in
cltd
cli
les
subb
mov
bound
cmp
lahf
xor
es
dec
mov
jg
in
je
enter
dec
add
jae
mov
pop
fildll
or
jle
pop
xchg
xchg
jle
cmp
xor
cmp
call
xchg
push
mov
jmp
dec
push
test
inc
adcl
pop
mov
stos
cli
loopne
cltd
inc
cmp
push
mov
cmp
inc
sub
push
loop
inc
cwtl
add
gs
movsl
mov
out
inc
inc
je
add
insl
xbegin
arpl
mov
fcmovb
jnp
jmp
adc
adc
dec
push
jg
xchg
test
xchg
lods
int
test
pop
lods
dec
clc
inc
pop
cmp
adc
mov
adc
in
cmp
push
mov
sbb
inc
xchg
lods
xor
in
push
sub
je
mov
sub
xchg
ljmp
mov
dec
insb
mov
inc
shlb
out
loopne
or
cmp
sbb
scas
mov
hlt
push
push
cli
cmp
sarb
cli
fiadds
xlat
jl
xchg
pop
jle
sbb
or
in
inc
push
cmp
in
mov
stos
stc
mov
push
jle
add
sbb
sub
mov
sbb
loop
push
xchg
xchg
xor
inc
movsl
int3
adc
cmpsb
std
xchg
aam
repz
dec
in
sub
add
iret
add
test
loop
andl
dec
adc
repz
mov
xor
mov
sahf
pop
test
pop
mov
sbb
imul
cmp
fwait
rol
inc
adc
ss
data16
mov
cs
jl
fnstcw
pusha
jb
mov
sbb
notb
sbb
lret
leave
shll
xchg
mov
in
and
xor
pusha
ret
jp
leave
out
xor
push
xlat
sbb
sub
push
dec
jns
jg
push
mov
xchg
sbb
inc
xchg
cwtl
mov
add
and
push
call
outsb
pop
mov
cmp
aas
add
clc
dec
pop
ljmp
jecxz
cmp
cwtl
data16
je
inc
aam
pop
mov
mov
negb
mov
in
mov
jno
hlt
push
add
and
cmp
imul
mov
mov
fcomi
repz
sub
cmp
add
addl
dec
mov
mov
bound
sbbl
push
cmp
enter
clc
dec
es
pop
dec
xor
ret
xor
xchg
add
les
mov
lock
mov
mov
aam
and
jmp
stc
or
jno
test
cmpsl
gs
in
jno
mov
cltd
lcall
mov
das
aad
xor
int3
cmp
mov
adc
mov
in
loope
int
repz
stos
fcmovbe
xor
and
pop
arpl
push
scas
fdivrl
jle
fistpl
cmpsl
mov
popf
int3
int
jne
add
sub
test
add
xchg
mov
mov
mov
cld
xor
movsb
nop
or
pop
outsl
sbb
jle
and
add
sbb
and
or
inc
add
sbb
adc
cs
inc
add
cmp
in
clc
sahf
push
imul
sbb
pusha
jg
mov
jae
adc
insb
push
xchg
sub
insl
xor
rcrb
mov
std
push
icebp
sbb
out
and
shl
ret
lcall
stos
test
xchg
cmp
cmp
stos
push
dec
and
dec
xchg
hlt
cwtl
cmp
ja
mov
inc
jmp
out
dec
inc
xchg
sub
mul
cmp
movsl
repz
punpcklbw
adc
add
mov
out
cwtl
or
rcl
in
testb
sub
subb
insl
loope
rorb
sbbl
or
stos
push
cwtl
int
mov
int3
pop
test
cmp
lahf
push
or
shlb
fmul
xor
mov
push
loop
jg
cmpsb
popf
dec
push
call
bound
mov
fsubrp
pop
andb
and
iret
mov
mov
outsl
movsl
xchg
inc
jnp
cmc
rcrl
xor
dec
loopne
jno
movsl
hlt
mov
dec
pop
jbe
sub
out
test
and
mov
aaa
cs
inc
jle
inc
in
jmp
fidivrl
lods
xchg
divl
mov
stos
inc
push
lret
mulb
inc
pop
xchg
mov
xor
xor
cmpsl
push
stos
adc
dec
das
sbb
pop
cltd
xchg
je
sub
aam
cs
xchg
push
loopne
pop
insl
lret
pop
xor
push
fisubrl
add
sub
sbbl
fwait
mov
lahf
call
inc
pusha
and
mov
daa
push
adc
imul
pop
fs
in
inc
shr
clc
adcb
mov
fimull
outsl
mov
popa
xchg
addr16
fwait
or
xchg
jecxz
nop
cmp
sbb
int3
cmp
and
leave
test
adc
in
cmp
adc
repnz
cmp
fsts
outsl
lock
stos
xor
add
jo
dec
push
andl
jecxz
mov
dec
xchg
add
sub
xchg
or
repz
mov
xor
fs
or
xchg
ds
call
int3
adc
notb
out
push
inc
xor
pusha
mov
les
scas
sub
jbe
inc
scas
cli
movsb
push
dec
loope
sub
jmp
fisubrl
inc
pop
push
add
iret
stos
aas
xchg
jae
aaa
orb
or
into
xchg
ss
cmpb
loop
hlt
cmp
fimuls
and
sbb
loop
mov
sbb
mov
insl
xor
out
ds
sub
das
hlt
add
cmpsb
mov
inc
je
inc
and
movsb
stos
jnp
pop
or
or
inc
xchg
xor
push
mov
fldl
cmp
test
mov
ss
jae
inc
cli
pusha
pushf
xor
stc
inc
mov
movsl
mov
lea
test
jmp
dec
int
mov
ret
jp
inc
mov
xlat
iret
mov
dec
pop
in
dec
lcall
cmp
pop
popf
mov
xorl
pop
test
stos
xor
and
sti
sahf
xorl
sti
lods
mov
xchg
scas
jecxz
mov
cltd
fsts
dec
mov
mov
or
mov
je
les
out
cmp
es
outsl
dec
mov
cmp
inc
xchg
xchg
rolb
jl
sbb
adc
xchg
xchg
ret
es
les
in
pop
cmp
pop
adc
subl
sub
fwait
imul
scas
enter
or
int
insl
jb
jno
jge
push
sbb
mov
fucomi
mov
in
mov
insb
push
mov
es
std
mov
push
std
jecxz
roll
ret
lea
adc
and
rol
push
ret
jle
mov
sub
stos
je
push
push
loope
idiv
dec
ss
mov
cmc
mov
daa
cmp
xchg
in
jl
cwtl
scas
in
mov
shrb
xchg
cmc
cmp
in
cmp
scas
sbb
add
lods
into
jbe
push
xor
mov
cmp
bound
ds
dec
mov
ret
ror
lds
mov
push
push
out
call
or
out
sbb
aam
cmp
mov
jg
rcl
das
jnp
enter
cwtl
sbb
mov
xlat
imulb
popf
cmp
sbb
stos
jns
les
push
divb
bound
dec
sarb
pop
shll
fcompl
xchg
jle
aas
pushf
lock
shll
sahf
and
pop
test
jmp
cmc
bound
mov
cmp
xor
mov
cmp
scas
insb
add
mov
push
mov
into
std
jp
mov
mov
shrb
xor
fadd
sub
sti
mov
inc
jle
jnp
out
or
adc
jns
pop
out
mov
test
push
ret
mov
lock
add
dec
iret
ftst
jl
lods
cmpsb
pop
xor
add
dec
gs
rcrb
sub
imul
dec
out
pop
cmp
call
adc
jl
cmp
popa
xor
xor
inc
pop
or
xor
adc
cmpsb
sub
jmp
call
push
out
rolb
jecxz
hlt
ret
sbb
jge
cwtl
xor
icebp
shr
ffreep
adc
loopne
pop
das
pop
pop
push
mov
push
or
xchg
jmp
sub
or
adcl
jge
lods
lahf
mulb
add
sbb
mov
pop
aam
push
push
icebp
outsl
ss
adc
or
movsb
mov
rorb
add
fcmovnbe
int
add
mov
test
fdivl
pop
mov
stos
int3
and
xchg
ds
rcr
pop
sti
mov
scas
pop
push
jg
mov
xor
jp
mov
mov
or
flds
std
mov
mov
rol
adc
mov
jnp
fld
out
mov
in
insb
clc
ret
rorl
outsl
add
adc
push
mov
push
repz
in
sbb
xor
and
cwtl
push
push
imul
daa
cmc
sub
dec
movsl
insb
sbb
test
insb
int3
adc
dec
cld
out
cmp
mov
or
pop
fisttpll
or
mov
sti
daa
pop
jle
fisubrl
mov
ljmp
sbb
jl
iret
push
and
cmpsb
or
jge
dec
pushf
push
jecxz
outsb
xchg
sub
xlat
dec
push
inc
cmpsl
andb
shrb
fwait
inc
loop
popl
les
push
rcll
arpl
movb
push
test
xchg
sub
or
cmc
and
loop
jne
fwait
mov
lock
mov
mov
push
sub
les
lcall
cmp
sahf
jl
test
fildll
hlt
push
aam
xchg
lock
repnz
shrl
pop
push
jg
mov
xor
ja
popf
jo
flds
push
or
cmp
inc
inc
or
xchg
fisubs
arpl
test
movsb
fisttpl
js
test
and
mov
loope
inc
les
filds
in
iret
mov
dec
sbbl
sub
outsb
mov
cli
fcmovbe
movsl
mov
jl
mov
scas
xchg
cmp
xchg
sbbl
int3
rcr
movsb
push
or
out
mov
fstps
fcmovu
setge
rcl
es
adc
movsl
fwait
jnp
mov
mov
movsb
pushf
fsubrs
in
xchg
jae
js
push
pusha
xorb
and
ss
iret
mov
fstps
cmc
arpl
mov
dec
fsubl
ljmp
inc
pop
cmp
ds
sub
loope
mov
cs
shrb
out
test
lds
cmp
xchg
test
dec
pop
lods
aad
lea
xchg
lods
inc
js
lret
fidivs
mov
shl
dec
std
jmp
inc
notl
imul
inc
pop
xor
movsb
incl
lret
xchg
or
sbb
shlb
inc
adcb
and
dec
add
xor
xchg
xchg
push
int
int
cwtl
shrb
data16
in
outsl
mov
rolb
rcrl
xorl
adc
push
pop
xchg
popf
xor
inc
mov
and
cli
je
rolb
mov
aaa
shlb
inc
push
push
add
out
jge
push
jmp
inc
push
push
sub
and
cmpsl
mov
xlat
lret
xchg
test
xchg
jno
sahf
push
xlat
xor
jmp
fldl
push
cmc
sbb
jbe
movsl
iret
mov
add
xchg
cmp
mov
sbb
popa
cld
mov
in
pusha
cmp
in
push
xchg
outsl
cmpl
flds
dec
xor
out
sbbl
and
ds
cli
mov
and
mov
insb
mov
adc
mov
subl
fdivrs
pop
mov
je
dec
mov
sbbl
dec
clc
xchg
pop
push
mov
enter
jl
lods
loop
inc
dec
in
lahf
push
add
xlat
jne
sub
inc
jl
add
ss
loopne
sub
std
bound
scas
bound
ss
es
movsl
mov
iret
lret
test
dec
outsb
mov
dec
xor
mov
imul
pushf
stos
jne
imul
enter
int3
sub
cli
lret
pop
popf
sub
jge
cltd
cmc
lahf
cmp
inc
and
mov
daa
mov
pushf
ja
cwtl
in
out
mov
in
inc
test
pop
out
cli
pop
fmulp
pop
cld
or
js
aaa
mov
ret
add
rorl
clc
jns
sub
cmpsl
cld
movsl
aad
xor
or
outsl
sub
pusha
or
cmp
fldenv
add
loope
sbb
adc
xchg
js
pop
int3
jle
lret
push
pop
add
rol
xlat
into
insl
jge
mov
loop
ss
inc
cli
dec
negl
mov
cmp
jecxz
mov
pop
and
test
incl
pop
or
xor
add
mov
cld
mov
lock
add
or
jns
out
cld
inc
ja
enter
mov
jno
das
outsl
inc
sbb
adc
cmpsl
addr16
push
sbb
mov
mov
lcall
mov
sbb
stos
test
push
movsl
std
mov
and
inc
sub
push
or
cmpl
mov
les
insl
das
jmp
jns
jp
scas
movsb
xchg
rorl
lea
mov
std
cwtl
mov
jmp
out
cmpsb
jecxz
js
dec
mov
mov
sbb
mov
cld
imul
or
xchg
icebp
sbb
fwait
xlat
lods
arpl
jg,pt
xchg
imull
ljmp
es
cli
ss
push
cmc
scas
inc
lcall
push
or
ljmp
jb
dec
sbb
mov
jbe
test
pop
adcb
fbstp
pop
fisttpl
ja
push
out
aam
nop
mov
push
jae
pusha
js
adc
data16
adc
sbb
add
sahf
ss
jae
jp
sbb
mov
jbe
lea
mov
xor
xlat
xor
fistl
jge
jo
ljmp
lcall
sbb
push
pushl
push
mov
xlat
mov
lret
pop
test
mov
add
insb
push
xlat
push
or
xchg
inc
sbb
add
out
fwait
lret
pop
outsb
add
dec
cmp
xchg
or
pop
ficoms
add
aaa
rcrb
outsb
fs
mov
repz
in
ds
push
cmp
les
popf
into
stos
xor
ss
inc
leave
and
addr16
push
jl,pt
in
sbb
mov
mov
repz
addb
sub
iret
rcrl
in
mov
cmp
ds
xchg
in
adc
xchg
lcall
int3
lret
scas
enter
dec
jge
xlat
sub
inc
add
xchg
ljmp
push
push
jno
test
jno
xchg
lret
adc
leave
das
pop
popf
pop
fdivl
rorl
add
cs
mov
inc
xorl
mov
add
xchg
adc
imul
xchg
cmp
jae
adc
daa
xor
dec
jge
push
fldenv
add
and
lret
inc
int
pop
in
xor
and
std
xor
in
bound
or
mov
mov
add
xor
stc
add
cltd
loop
push
pop
fdivl
xchg
mov
lods
fcomp
mov
xchg
mov
or
push
mov
aam
insl
testb
add
fdivr
jo
jb
loope
mov
pop
mov
enter
sub
std
sub
adc
push
push
push
or
lret
je
jne
sbb
out
jp
fisubl
pop
fisttpll
sub
inc
xor
sarl
xor
lods
sub
mov
outsl
push
mov
pop
pop
mov
loope
xor
mov
cs
in
dec
cmp
push
pop
enter
push
sahf
into
sub
sub
lock
iret
pop
sbb
divb
test
mov
xchg
push
fisubrl
leave
inc
mov
pop
orl
push
mov
push
mov
cmp
pop
repnz
in
and
dec
mov
xor
xchg
dec
lods
mov
mov
out
loop
rol
mov
in
ja
dec
pushf
es
xor
mov
arpl
jae
or
jbe
xor
insb
fcomps
scas
add
xchg
popa
fucomi
lods
dec
push
sbb
rcrb
ret
jns
adc
xchg
test
jmp
dec
mov
mov
push
sub
push
pop
xchg
out
push
pop
insb
nop
fs
xor
lods
out
test
outsl
pop
xor
push
cmpsl
cmove
or
out
mov
push
dec
cmpsb
ljmp
add
movsb
mov
jecxz
lock
pop
cli
xor
loop
fstps
dec
mov
mov
push
cmp
pop
xor
imul
dec
dec
adc
mov
push
inc
cmp
dec
add
outsl
or
or
sbb
and
imul
xor
pop
inc
notb
daa
jge
jnp
gs
leave
std
imul
outsl
jo
fists
popa
int3
nop
xor
jb
js
mov
mov
cs
inc
lods
cltd
mov
cmp
sbb
jb
pop
lahf
icebp
outsl
loopne
movsb
nop
mov
xchg
jno
mov
scas
sub
ret
inc
xor
cmp
ds
add
adc
adc
cmp
sti
sbb
jb
std
in
scas
sub
mov
mov
in
mov
or
jae
mov
dec
lahf
adc
in
shrb
add
ds
mov
mov
mov
pop
pop
add
or
fldenv
inc
mov
jns
fincstp
int
stc
addb
cmpb
dec
push
push
pop
scas
imul
mov
daa
xor
inc
cs
out
jle
mov
loope
ss
les
mov
mov
xor
movsb
mov
sub
es
and
jno
dec
and
dec
ret
lahf
add
xchg
out
xchg
xchg
sbb
dec
mov
cmpsl
rol
jnp
cmp
fadd
cwtl
sub
xor
adc
mov
add
dec
fsubr
push
push
sbb
add
add
cmp
inc
dec
pop
stc
sub
in
data16
xchg
cli
sub
add
jno
int3
mov
dec
adc
lea
lcall
mov
jns
das
pop
adc
fcoml
jmp
stos
int
sbb
xchg
jb
enter
pusha
jg
xchg
ret
jns
test
pop
dec
mov
outsl
lds
mov
xor
shrl
sar
add
mov
push
enter
mov
jns
popa
pop
inc
mov
fldcw
ret
mov
iret
bound
aad
fiaddl
push
cmp
arpl
aad
mov
adc
lea
out
aam
push
loopne
jge
sbb
das
out
adcl
rcr
or
pop
pushf
jnp
pop
cwtl
or
mov
pop
lea
and
pop
leave
cmp
push
mov
inc
xchg
data16
int
cmpsb
sub
sub
in
lock
mov
js
jno
shlb
and
fdivl
popl
mov
out
cmp
jle
xlat
adc
addr16
cli
mov
xchg
js
pop
cmc
mov
push
repz
xor
rcr
sbb
mov
movsl
fsubrs
icebp
mov
call
add
push
xorl
and
or
movsl
loop
dec
pop
push
fisttps
or
add
push
call
push
cmpsb
shr
hlt
mov
xchg
jle
lret
xchg
jns
mov
rorl
sub
xor
push
es
idiv
dec
mov
test
call
ja
fdivr
and
out
shll
add
mov
cmp
jnp
jecxz
push
movsb
js
imul
loopew
cmpsb
inc
mov
add
add
aad
inc
das
mov
repz
pop
xor
les
inc
or
add
and
pop
call
bound
inc
mov
outsb
lods
sub
xchg
jl
and
pop
push
sbb
iret
jne
shl
pop
mov
sub
cmp
dec
out
shlb
push
or
adc
loop
test
mov
and
fs
xor
into
es
and
jmp
mov
pop
mov
jno
aam
xchg
or
mov
xchg
push
icebp
push
or
sbbl
xor
andl
jmp
inc
sbb
sbb
sbb
jecxz
ss
or
loop
lock
sbb
sub
xchg
and
add
ret
repnz
xchg
mov
push
movzwl
fildl
shlb
inc
bound
scas
js
or
add
sub
jle
xor
xchg
insb
inc
sbb
nop
lea
loopne
in
mov
js
dec
push
enter
cs
into
cmp
call
adc
loop
ljmp
mov
in
xchg
aas
dec
dec
and
shr
daa
dec
loop
rcr
js
jbe
mov
xor
or
loope
es
ret
enter
mov
push
inc
ficomps
cmp
mov
out
movsb
jb
or
ss
mov
push
cli
in
arpl
mov
sbb
xchg
shll
lods
xor
cmp
fisttps
lret
je
xor
pushf
mov
outsb
mov
jge
mov
int
pop
pop
add
movsb
aas
sub
mov
sti
shrb
popa
sub
or
mov
adc
pop
sahf
sub
inc
jmp
xchg
cmpsl
sbb
xor
sub
and
lea
cmp
frstor
or
cmpsl
sub
std
lahf
into
mov
jmp
sub
sub
aas
addb
push
imul
stos
mov
pop
test
es
jnp
mov
sti
decb
stc
mov
cmp
and
add
shl
xchg
inc
cmp
sub
inc
nop
dec
xor
repnz
push
and
lods
mov
add
push
sbb
sarl
xlat
test
inc
dec
or
pop
mov
mov
xchg
adc
sub
daa
jmp
and
dec
fbstp
sbb
xor
rcrb
leave
pop
rorb
rclb
ljmp
fcoms
pop
jo
fidivrs
and
jb
insb
pop
push
xchg
cmp
sub
dec
cmp
mov
lret
adc
pop
mov
shrb
addb
and
dec
fwait
pop
pop
and
hlt
nop
sbb
rol
mov
int3
aaa
dec
pop
inc
inc
nop
jne
jns
test
jmp
adc
inc
daa
add
daa
xchg
dec
out
jns
mov
pop
stos
jnp
mov
mov
mov
ds
push
adc
xchg
mov
mov
cs
fidivrs
mov
jle
lods
test
sti
cmpsl
adc
fistpl
stc
mov
dec
pop
cmp
cmp
mov
shll
fdiv
lcall
clc
call
adc
pop
imul
xchg
adc
push
mov
fldt
test
jecxz
call
ficomps
adc
cli
add
sbb
rcrb
sti
out
sub
pop
fimuls
mov
lea
imul
fstl
mov
dec
push
js
fwait
add
cmp
lock
inc
clc
and
faddp
mov
pop
int
cmp
push
adc
lret
mov
mov
mov
and
push
pop
mov
dec
dec
sbb
adc
flds
call
xor
cmp
test
jae
jae
cwtl
jo
adc
test
sti
xor
sub
cmp
stos
jl
xor
mov
pop
sub
out
inc
fimull
mov
add
adc
cmc
hlt
or
mov
pushf
rcrl
cs
push
ds
sbb
in
xchg
jne
leave
sbbb
mov
xor
xchg
fists
adc
jp
inc
or
incl
mov
cmpsb
pop
mov
add
dec
xchg
popf
push
jne
loopne
sbb
push
mov
loopne
mov
inc
xchg
or
jl
push
bound
into
xor
push
sub
mov
fdivr
sub
dec
push
inc
insl
incl
cmp
ljmp
mov
add
add
testb
or
mov
add
jae
inc
adc
add
into
add
vpsubb
adc
ret
mov
aad
pop
negl
push
fwait
pushf
pop
dec
adc
pop
push
mov
insb
and
div
out
push
add
loope
ret
pop
jge
or
jp
mov
fsubs
inc
mov
cld
fistps
int3
xchg
push
out
popa
andl
in
int3
sbbb
sti
insb
inc
sub
mov
leave
lcall
dec
in
pop
sbb
mov
xor
mov
lret
pushf
filds
mov
aam
lret
sbb
mov
popa
mov
jecxz
negb
imul
adc
mov
mov
dec
mov
sti
sete
out
jnp
push
xchg
in
std
jp
testb
repnz
jbe
je
lods
push
ret
mov
mov
test
stos
jns
shlb
sarb
jg
push
into
dec
inc
inc
and
ja
push
sub
sbb
cs
mov
mov
fmull
sbb
es
pop
cld
jne
fcomps
ljmp
mull
sub
dec
and
ror
pop
cmp
jg
in
cmp
cli
push
std
mov
and
xor
mov
icebp
rolb
int
cmpb
and
add
out
enter
jne
inc
out
filds
pop
mov
sbb
into
jns
cmpsl
and
or
ja
push
fdiv
sbb
pop
ret
shl
jcxz,pt
jle
or
loopne,pt
add
pop
ja
xlat
dec
inc
cs
rclb
inc
sub
scas
scas
jb
mov
inc
cs
fwait
push
mov
pop
mov
push
inc
test
push
push
ds
adc
jge
mov
divl
sbbb
sub
push
gs
mov
imul
and
cmp
or
inc
jnp
push
xor
or
movsl
push
cmpsb
cmp
imul
lods
or
jae
dec
daa
inc
lcall
divb
dec
push
jg
loop
add
jns
sub
xchg
ret
adc
dec
jmp
lods
pop
push
jo
and
iret
sbb
incb
mov
and
jp
xchg
shrb
inc
nop
mov
push
out
or
sbb
inc
std
pop
int
pop
aam
sar
arpl
jb
push
imul
imul
scas
sbb
rcll
in
cs
dec
jge
jle
inc
push
loope
lds
cltd
shrl
out
rcl
adc
xchg
xchg
cli
mov
sbb
mov
adc
stos
lahf
repz
pop
mov
loope
insb
dec
xchg
mov
cmp
addr16
fdivrl
imul
into
sbb
mov
mov
sbb
out
jp
push
stc
inc
pushf
jbe
mov
adcb
in
lods
push
mov
pop
je
and
cli
in
inc
addb
rcrb
cmp
push
fdivrl
inc
xchg
push
xchg
adc
icebp
test
xor
inc
and
sbb
and
jne
xchg
popa
pop
jmp
aad
roll
lret
mov
cmpsl
jl
push
pop
xchg
sbb
addl
push
sbb
ret
lods
xchg
mov
cmp
inc
inc
outsl
push
enter
pop
sti
das
gs
divb
adc
lods
out
test
sbb
push
test
mov
das
adc
mov
jg
lds
shl
sbb
ret
push
imul
mov
sbb
dec
rcll
jge
mov
add
leave
in
popf
xchg
in
aas
int
sbb
jg
inc
cmp
push
jb
out
aad
imul
push
scas
cmpsb
pusha
or
xchg
ja
outsl
pop
mov
mov
pop
dec
ss
shrb
add
dec
inc
or
nop
pop
mov
sti
es
shlb
popa
mov
dec
jno
lods
and
push
and
mov
loopne
mov
dec
ds
dec
mov
bound
jge
xchg
popa
mov
cmc
inc
mov
push
cmp
gs
divb
mov
popf
mov
xchg
arpl
mov
jae
fbld
add
or
add
fmuls
jmp
mov
idiv
in
pop
outsb
mov
test
adc
mov
sub
mov
mov
cmp
mov
mov
or
mov
mov
das
add
inc
inc
mov
mov
cmc
cmp
in
jbe
mov
loop
push
fnstenv
and
ret
pop
and
mov
lods
ret
iret
mov
stos
cli
inc
repz
daa
jno
inc
mov
inc
and
loopne
jnp
push
push
lods
sbb
add
and
flds
dec
aam
in
jp
xlat
mov
imul
scas
sbb
add
fsubl
and
mov
mov
xchg
mov
sbb
mov
and
jno
cli
das
pop
dec
or
fwait
pop
cmp
cli
dec
pop
sub
mov
mov
jne
or
pop
notb
vcvttpd2dq
fadds
lods
je
mov
icebp
sti
sarl
testb
fwait
pop
loope
mov
and
ret
pop
test
mov
xor
or
xchg
loopne
test
mov
enter
shr
inc
push
ficoml
mov
mov
sbbl
out
jno
or
mov
inc
jb
adc
arpl
fdivrl
mov
push
add
push
ss
fisttpl
sbb
repz
sbb
sbb
ss
or
test
and
inc
add
or
aaa
push
mov
cmc
int
cmc
int
lret
mov
inc
repnz
xor
inc
ja
imull
cmp
cli
sbb
rcrb
les
outsb
in
fwait
pop
add
jmp
lock
xor
push
and
mov
fwait
add
sbb
int3
lret
test
push
push
pop
pop
in
jmp
adc
dec
jne
xchg
push
cmp
add
aad
mov
daa
cmpb
adc
clc
imul
rorl
outsb
sub
repz
mov
gs
mov
push
cmc
mov
sub
mov
inc
jb
pop
jnp
sbb
lret
mov
je
test
sbb
ljmp
push
stos
cmpsb
mov
xor
das
xchg
inc
or
clc
jge
cmpsl
xor
xor
scas
and
imul
sbb
insb
imul
in
jge
in
lods
lock
fdivrl
ja
sub
xchg
push
cmpsl
fisubrs
mov
push
mov
dec
insb
or
hlt
sub
shr
mov
outsl
mov
jo
loopne
stos
inc
dec
dec
div
cmp
cmp
popl
mov
jbe
inc
cltd
sbb
faddl
jecxz
popf
mov
aam
mov
or
cwtl
push
addr16
dec
test
cs
pop
cmp
sbb
daa
das
in
lods
xor
adc
push
imul
in
inc
xchg
pop
add
lcall
aaa
mov
ja
out
js
inc
sub
xor
xchg
lods
dec
mov
ljmp
lods
scas
jge,pn
enter
sbb
jns
add
mov
test
inc
adc
outsl
lock
in
push
mov
sbb
xlat
fwait
pop
mov
je
pop
push
mov
cltd
jo
jge
xchg
xchg
shll
frstor
mov
and
test
es
imul
sbb
inc
imul
iret
xchg
fsts
sub
es
fdivrl
cli
out
or
cs
push
js
loopne
mov
dec
inc
iret
and
lods
ret
sub
push
and
jg
push
inc
or
pop
and
int3
inc
mov
jo
sub
and
dec
ficoml
lahf
pop
push
out
adc
sti
ss
scas
mov
out
das
mov
adc
mov
shl
cwtl
push
addb
xchg
std
sub
mov
jb
add
stos
es
xchg
push
js
xchg
jmp
push
xchg
sti
or
out
adc
and
rolb
stc
movsb
xchg
cltd
cmp
sbb
jbe
mov
inc
imul
ja
mov
les
push
xchg
sub
mov
xchg
mov
notl
xchg
jbe
cwtl
sarb
fadd
sbb
sti
int3
ja
mov
cmp
jb
pop
stc
inc
insl
sti
sub
fwait
mov
sub
xchg
jge
mov
mov
xchg
mov
xchg
mov
jl
in
movsb
mov
pop
xchg
xor
cld
icebp
daa
add
lret
imul
out
nop
fs
pusha
xor
es
mov
ret
unpcklps
mov
jl
insb
mov
stos
test
mov
ret
aam
mov
push
pop
insb
ficoml
sub
sbb
shlb
in
sbb
test
inc
pop
pusha
pop
cwtl
push
mov
jmp
cmpsl
iret
jae
push
cwtl
cmpsb
push
sbb
pop
fisttpl
xchg
sbb
dec
mov
aam
pop
cmp
or
inc
out
inc
aam
mov
mov
test
push
les
xchg
pop
and
dec
pushf
dec
rcrb
pop
sbb
rorl
jl
sbb
or
out
or
push
enter
xor
mov
addl
repnz
or
cltd
xlat
into
rorl
pop
addb
scas
loop
sub
or
movsb
je
push
fidivl
push
ret
cld
incb
icebp
cmp
and
ljmp
addr16
jecxz
pop
jb
mov
sbb
jo
xor
les
out
push
xchg
je
in
add
mov
xor
adcb
pushf
lods
lret
sub
scas
leave
lock
repnz
xchg
pop
mov
imul
lock
lods
in
xor
xor
jl
and
cmp
lds
js
out
mov
cs
jb
fmulp
or
jle
mov
sub
jle
push
xor
dec
sbb
int3
hlt
psubw
jle
inc
push
dec
add
popf
test
adc
push
xchg
mov
addr16
repnz
jns
jl
loop
push
dec
sbb
scas
push
notb
test
gs
push
mov
xchg
pop
add
xchg
fstpt
lds
andb
filds
mov
add
adc
dec
leave
cltd
stos
jne
lcall
cmp
ss
jmp
inc
sbb
movl
cmp
jo
mov
jp
add
aas
call
mov
sub
fwait
inc
push
push
dec
jo
xorl
inc
push
push
jbe
xor
das
and
fs
jp
mov
push
jno
out
xor
ret
sub
into
shlb
or
pop
fwait
or
mov
scas
jne
cwtl
mov
jno
stos
mov
dec
cmc
xchg
xchg
sbb
xchg
bound
xor
les
cwtl
xlat
les
jmp
pop
xchg
mov
push
ja
or
imul
push
and
fwait
mov
dec
imul
adc
mulb
subl
add
cs
mov
cmpsl
mov
push
ja
scas
ficoml
loop
jmp
push
jmp
imul
fimuls
fbld
lret
mov
jne
into
lea
es
pop
push
pop
push
cmpl
xor
sub
fs
int
dec
jno
orb
int
jnp
push
insl
lcall
dec
mov
xorl
fisttpl
rol
dec
push
adc
into
dec
mov
dec
sbb
mov
cmpsl
cmp
scas
lret
push
call
jo
test
or
cli
jmp
mov
ljmp
aas
mov
mov
push
loopne
cmpsb
jecxz
outsl
add
arpl
cld
pop
out
aaa
cmp
sbb
dec
cli
lods
data16
adc
pushf
fisttps
mov
jmp
pop
dec
sbb
lods
arpl
andb
test
lcall
rolb
push
add
mov
rcrl
loopne
hlt
xor
adc
dec
in
add
mov
dec
xchg
shr
je
lcall
pop
dec
sub
outsb
scas
sbb
fsubrl
cmp
jg
push
test
aam
stos
sub
mov
and
pop
pop
std
pop
outsb
or
rcrb
add
sub
or
rorl
iret
iret
inc
lods
outsb
fdivs
mov
rolb
sbb
mov
sub
jbe
mov
pop
int
dec
xor
stos
xchg
fwait
push
outsl
int
lods
shrb
push
sbbb
xor
lds
push
hlt
mov
push
stos
and
jo
lea
in
push
xor
adc
sahf
push
push
mov
push
add
or
outsl
leave
push
jb
dec
and
inc
and
clc
ja
jnp
or
push
cli
rol
ss
iret
add
iret
rcl
jecxz
popa
sbb
mov
ret
movsl
cmpl
mov
rolb
outsb
or
inc
rorb
lods
cmp
add
loopne
adc
and
call
pop
mov
and
lds
push
cwtl
daa
shrl
cli
jge
ss
loopne
nop
pop
sbb
shrb
jbe
dec
mov
das
mov
adc
add
insl
daa
add
sbb
sub
f2xm1
cmp
cmpsl
push
pop
cmp
cli
inc
or
inc
mov
shl
mov
inc
aaa
bound
cltd
mov
sbb
add
dec
pop
call
xchg
and
jns
inc
insl
imul
and
lea
ss
or
or
mov
push
icebp
mov
push
mov
fnsave
pop
pop
jne
frstor
xchg
lcall
xchg
je
mov
lcall
mov
push
in
jle
adc
mov
and
repnz
aam
aam
mov
and
fsubs
push
jno
cmpsb
cmpl
dec
jbe
js
iret
xchg
std
icebp
mov
jecxz
stos
pop
pop
stos
pop
push
or
xorb
sti
insb
adc
and
std
test
out
dec
mov
addr16
mov
mov
push
sti
jge
std
movsb
push
pop
cli
js
and
je
fisubrl
shll
dec
mov
lcall
mov
fistps
push
sti
mov
cld
xchg
das
add
adc
mov
lock
pusha
in
movsl
push
dec
leave
fisubl
shll
sbb
mov
movsb
sti
dec
cmp
ja
mov
divl
or
in
add
mov
cmp
scas
push
hlt
call
xchg
fistpll
shll
ljmp
sbb
fcmovnb
lods
dec
jns
sub
es
sti
js
ret
inc
pushf
fstpt
jbe
mov
xor
xchg
out
or
mov
jg
cli
stos
push
cmp
setp
mov
incb
mov
fildll
imul
push
jb
int
jo
enter
xchg
adc
xchg
mov
jns
icebp
in
push
andb
xchg
xchg
mov
mov
sbb
aaa
mov
lcall
jle
mov
mov
rcr
push
iret
mov
idiv
inc
test
out
daa
imul
mov
add
xchg
repnz
ljmp
sub
sbb
das
jge
push
fistps
ljmp
add
lret
sahf
push
jge
ja
xchg
adc
mov
sbb
loope
sbb
push
pop
jnp
dec
pop
mov
mov
mov
jg
and
es
sub
cs
mov
inc
dec
jmp
xor
xchg
or
dec
pop
out
rclb
lea
cmp
ret
push
scas
sub
xchg
jb
ss
mov
jmp
pop
dec
aaa
cmpsl
cli
xor
jb
sub
jg
sub
daa
mov
push
jno
adc
les
into
cmp
nop
push
push
sbb
fwait
test
xchg
ret
dec
mov
inc
lret
mov
das
mov
jb
cli
movsb
addb
fimuls
insl
enter
pop
aad
cltd
adc
sahf
addb
out
and
mul
enter
pop
in
call
jg
aam
add
push
mov
imul
imul
gs
mov
fs
cs
jae
jmp
shll
mov
cmp
jge
iret
test
pop
sbb
scas
mov
xor
mov
push
in
test
dec
insl
leave
call
xor
addl
xchg
xlat
ffree
dec
push
popf
ret
mov
fcomi
xchg
mov
pusha
and
call
cltd
fimuls
imul
cmp
inc
fldenv
imul
push
inc
cltd
inc
repz
repnz
mov
jns
push
nop
scas
sub
gs
push
aaa
jns
pop
push
push
in
pop
push
push
sub
mov
in
mov
aam
xchg
cmp
ds
push
out
ret
xor
push
sarb
push
jnp
jle
adc
in
cs
mov
hlt
push
psubd
dec
jp
inc
dec
mov
cmpsl
imul
mov
lds
mov
shlb
and
mov
jns
sbb
repnz
dec
insl
sbb
insb
add
adc
adc
scas
in
std
fstp
cmc
jp
scas
imul
cmp
cmp
mov
cmp
jp
sbb
xchg
dec
lret
jns
daa
dec
stos
jne
or
sbb
push
aam
sbb
imul
es
push
mov
sbb
mov
jge
cmpsl
adc
out
mov
lcall
sub
or
movb
scas
mov
sbb
pop
fsts
cld
out
jp
adc
sbb
dec
insb
out
push
push
mov
scas
mov
movsl
cltd
inc
cmp
and
clc
xchg
pop
iret
idivb
pop
ret
mov
xchg
mov
mov
pop
jp
adc
dec
ds
hlt
xor
mov
sbb
or
mov
jo
cmp
dec
mov
subl
push
cmpl
mov
cmp
add
pop
mov
testb
inc
xor
or
jns
sbb
sti
jge
imul
mov
inc
out
imulb
mov
je
xor
popa
xlat
jp
adc
jno
mov
xor
loopne
mov
mov
dec
sbb
jge
mov
call
inc
mov
aaa
fstl
jmp
aam
xchg
sub
cmp
lds
mov
aad
xor
bound
pop
repnz
xchg
push
pop
and
push
and
in
jmp
nop
testb
out
ficoml
enter
ljmp
stos
lea
insb
rcrb
rcr
inc
pop
jnp
pop
mov
push
out
mov
arpl
fildl
inc
movsl
aas
rcl
lock
lods
sbb
stos
and
jl
mov
and
stos
mov
leave
pop
xchg
pushf
mov
into
sbb
sub
frstor
lock
xlat
sbb
jno
xor
and
mov
jno
lret
rorl
lock
xchg
lret
shrl
sub
and
xchg
in
adc
push
adc
inc
shrl
adc
idiv
inc
and
call
loopne
test
lret
mov
pop
repnz
int
add
es
loope
dec
adc
xchg
mov
test
dec
xor
call
push
cmp
iret
popf
int3
in
dec
insb
mov
cmpsl
or
jne
push
mov
push
mov
mov
push
out
mov
push
cs
mov
or
xchg
push
mov
sub
icebp
fnsave
pop
add
das
cs
jns
sbb
sub
mov
jmp
cli
outsb
int3
insb
sbb
test
test
push
popa
jnp
cld
pop
push
adc
sub
lret
loope
addl
add
and
imul
movsb
xor
scas
push
pusha
lea
or
rclb
or
fnstenv
xor
aad
out
pop
cmp
pop
int
cmpsl
fcomp
push
daa
int3
repz
lret
es
dec
xchg
pop
jae
xlat
mov
dec
xchg
xor
mov
pop
mov
pushf
mov
incb
iret
jae
inc
sbbb
and
out
notl
out
xchg
inc
sub
test
xchg
xorb
je
ljmp
out
lret
sub
lods
ljmp
xor
popa
pop
mov
andb
icebp
test
in
mov
sub
push
cmp
sbb
shll
inc
cmp
pop
xchg
inc
mov
ja
int3
push
xor
fs
jg
fldenv
imul
dec
fcmovu
push
lods
add
pop
repz
mov
or
jle
and
xlat
and
lret
xchg
sahf
dec
mov
sub
mov
pop
fists
out
test
mov
lret
test
pop
stc
jne
dec
jle
fiadds
sub
mov
dec
xchg
or
js
mov
flds
mov
testb
xchg
jmp
xchg
push
lret
outsl
shlb
addr16
cld
int
mov
je
stc
add
dec
push
aam
jbe
xchg
rorl
mov
movsl
jmp
push
jp
sbb
sbb
or
xor
pop
mov
cmpsb
lods
add
notl
cs
lret
sub
push
jae
or
sub
inc
sbb
or
cmpsb
call
mov
adc
mov
push
in
jns
cmp
mov
jnp
add
jb
mov
lds
stc
fcmovne
imul
cmpsb
mov
ds
or
imul
inc
pop
pop
es
push
arpl
gs
push
leave
sub
inc
inc
adc
and
icebp
jno
cli
dec
cld
js
cmp
mov
lret
iret
fnstsw
jecxz
sbb
shll
xor
xor
pop
xorb
cmp
insb
jno
sub
push
push
xor
es
jns
addr16
cld
jae
cmp
jnp
cmp
mov
in
xchg
fisubrl
mov
jae
wbinvd
ret
push
add
add
mov
pop
bnd
mov
movsl
scas
pop
stos
or
loope
sbb
imul
xor
stos
fsubs
repz
imul
xchg
inc
xor
mov
xchg
dec
xor
inc
enter
fstpt
adc
mov
shr
popf
jb
xchg
scas
lods
sbb
out
jne
vsqrtpd
dec
insb
push
and
jno
out
jnp
cmp
xchg
aas
cltd
out
add
insb
popa
or
mov
mov
xchg
fstps
and
sbb
mov
out
fisttpll
jne
into
mov
je
pop
sbb
into
mov
cmp
sti
or
push
sub
jno
in
rcrb
sbb
pop
xor
sub
pop
mull
mov
sti
sbb
adc
xchg
push
sub
out
adc
jl
xchg
movsb
outsl
pop
xchg
xchg
jbe
xrelease
ret
stc
mov
cmpsl
dec
les
jb
xchg
jno
ss
dec
xchg
das
push
mov
jo
stos
xchg
loopne
insb
mov
subl
pop
xor
mov
pop
aad
push
sbb
xor
dec
inc
in
std
sub
xchg
lea
inc
mov
mov
cmp
rcrl
mov
int3
mov
jge
movsb
cmp
xchg
xlat
mov
subl
cmp
loope
lret
cmp
call
js
std
gs
mov
inc
out
and
jmp
and
adc
add
les
jae
dec
int
sbbl
das
xchg
sub
jecxz
loopne
jb
jns
shlb
xchg
push
and
sub
or
adc
je
scas
bound
xchg
loopne
dec
xor
adc
mov
mov
pop
sub
sub
rcll
ret
out
push
add
jge
cltd
xchg
stos
adc
outsb
or
and
pop
cmp
xor
pop
add
jle
sub
movsl
test
enter
icebp
push
push
and
add
fmuls
mov
test
divb
iret
mov
and
sbb
lods
xor
ja
lret
adc
jmp
xor
imul
gs
insb
mov
sbb
stos
sbb
jo
shlb
jecxz
lea
int
movsl
and
mov
inc
pop
lea
sub
inc
stos
cmpsl
xchg
pop
xor
adc
jae
imul
mov
push
leave
pop
cmp
and
cmovne
rol
icebp
hlt
pop
mov
cmp
sub
adc
arpl
sbb
rorb
jno
iret
lret
xchg
inc
add
loop
adc
nop
or
sbb
mov
mov
or
xchg
js
xchg
das
push
std
sub
test
or
mov
mov
stos
add
aad
xchg
xchg
sub
mov
mov
inc
mov
mov
pop
data16
sahf
fidivrs
xlat
jns
test
stos
push
lods
scas
mov
inc
out
andb
mov
xor
mov
shrl
cmp
inc
or
rcrl
add
lcall
inc
jecxz
and
push
pop
cmp
popa
xor
ljmp
pop
xor
addb
rolb
xchg
insl
shll
cltd
push
and
jb
pop
jae
mov
pop
jae
pusha
jp
pop
push
jecxz
int
push
arpl
pop
mov
and
pop
xchg
sbb
pop
mov
xchg
lods
push
xchg
xchg
mov
das
mov
push
xchg
mov
adcb
lahf
dec
popf
gs
dec
aad
insl
clc
xor
repnz
mov
addr16
dec
and
jmp
push
dec
std
mov
lahf
mov
or
mov
add
inc
in
shrb
flds
cwtl
rorb
fnstenv
jge
jp
xchg
sub
xchg
shl
ret
sar
jae
adc
and
std
not
int
lahf
and
xlat
mov
aaa
dec
pop
call
pop
lea
inc
insl
aaa
cwtl
rorb
or
jo
cmpb
out
cwtl
adc
push
mov
loopne
lods
and
repnz
or
sahf
cmpsl
or
pushf
sti
jo
mov
pushf
loop
popf
mov
sbb
jp
filds
pop
xchg
cmp
inc
scas
imul
adc
daa
jge
mov
sbb
stos
adc
jns
lret
flds
es
in
loop
jae
jns
cwtl
fbstp
cmp
mov
loop
test
dec
cmp
pop
outsl
mov
movsb
add
and
enter
dec
xchg
clc
cli
lods
cmp
in
popf
out
int
xor
fs
test
outsl
sub
ret
jns
ret
add
ljmp
int3
mov
cwtl
cld
pop
mov
sub
sub
xor
test
or
outsb
sbb
call
bound
cmp
xor
mov
arpl
repz
sub
movsb
fisttpl
inc
sbb
lds
ror
pop
stc
stos
mov
stos
cmpsb
pop
leave
jg
ds
xor
xor
mov
and
test
sub
add
mov
dec
scas
dec
add
test
loope
and
cwtl
lea
out
cmc
or
loop
ret
int
cwtl
lods
cmp
and
je
sub
movsl
add
mov
out
repz
jg
movsb
mov
sub
adc
cwtl
lret
iret
and
jae
fsubrs
mov
stos
pop
xlat
inc
into
out
or
movsl
and
repz
and
jg,pt
push
dec
shlb
pop
dec
pop
xchg
push
js
sub
ss
jl
jmp
sub
jmp
adc
jge
cmpsl
mov
or
std
test
loop
mov
aas
jle
out
push
sub
mov
push
push
scas
and
shl
inc
ficoml
sbb
cltd
mov
insl
jl
lahf
jmp
mov
cmp
push
int3
icebp
mov
pop
fsubl
mov
cld
mov
data16
jge
and
in
push
and
pushf
cmp
cmp
xchg
push
xchg
outsl
adc
lcall
cmp
filds
push
push
mov
int3
push
ficomps
repz
movsl
inc
cmc
bound
mov
pop
sbb
adc
mov
das
rolb
push
sbb
lds
ds
dec
xor
xor
fs
les
aad
clc
dec
fistpl
push
xchg
incl
lcall
sbb
idivb
adc
ljmp
ja
data16
push
mov
or
mov
inc
ret
ljmp
cmpsb
outsl
xchg
push
pop
dec
push
loop
rcll
xchg
into
mov
sbb
rcrl
out
mov
pop
repz
popa
cli
sub
mov
sbb
jl
fbstp
jne
cmpb
and
sub
mov
inc
cmp
mov
adc
dec
dec
bswap
int
and
fistl
push
mov
mov
imul
push
pop
mov
imul
sub
mov
fnstsw
xchg
xchg
gs
mov
je
insb
ss
adc
pop
call
pop
jnp
xor
lcall
or
xor
adc
fbld
aas
rorb
jnp
or
xlat
sbb
aas
mov
lahf
sar
dec
jno
movsb
pusha
sbb
or
xchg
jno
lahf
mov
int
ljmp
jo
popa
imul
es
mov
dec
cmp
lcall
dec
movsl
xchg
push
mov
les
push
mov
popa
sti
add
pop
fcmovbe
mov
pop
inc
inc
out
or
pop
add
ds
cmp
ret
or
scas
ds
js
cmp
jno
into
cmpsb
ret
out
sub
adc
mov
lret
data16
jl
adcb
mov
push
inc
push
arpl
inc
out
shll
fs
cmc
bound
jbe
xchg
xlat
movsb
pop
lds
lahf
out
daa
xchg
bound
je
ljmp
mov
push
mov
popf
out
push
repz
insl
mov
roll
mov
cli
iret
fmul
mov
imul
pop
test
movsl
sbb
jp
mov
mov
inc
jbe
xor
jnp
push
leave
push
loopne
xchg
jae
stos
mov
imul
lcall
mov
shrl
pop
xchg
pop
ret
or
xor
xor
and
dec
jp
lcall
pop
push
xor
dec
cmpsb
push
xor
out
fisttps
in
popf
cmovne
mov
test
sarb
mov
xor
arpl
inc
aad
xchg
xchg
int3
das
loopne
mov
sub
xor
cs
or
repnz
mov
into
arpl
cmpsl
incl
and
adc
bound
cld
cmpsb
scas
or
hlt
sbb
in
or
loop
les
pushf
stos
jae
xchg
sub
mov
pop
loop
loop
pop
test
or
sub
aas
das
xor
adc
fbstp
push
out
jne
sub
mov
lea
test
jno
inc
push
adc
and
xor
shlb
pop
gs
and
jl
cltd
xor
dec
jle
and
mov
push
rolb
and
dec
add
int3
jmp
cmpsl
add
fnstsw
xlat
jne
cmp
mov
jp
and
jge
pop
mov
push
and
movsl
and
subl
pop
cmpsb
xchg
jg
add
rcll
or
push
insl
inc
mov
cmp
sti
lcall
outsl
jmp
cld
pushf
or
mov
in
cmp
push
xchg
or
loop
in
mov
pushf
jno
sub
in
sbb
dec
xlat
cmpsb
loop
cmp
pop
cwtl
sub
adc
sbb
dec
xchg
adc
popf
cmp
mov
pop
jle
out
rol
pop
mov
or
jl
push
imul
or
dec
out
xchg
ja
cmp
sbb
add
movsb
lea
aam
push
notb
sub
test
jo
sub
mov
andl
lcall
sub
out
jbe
mov
xor
sbb
xor
cmp
mov
mov
rorl
rcr
test
mov
cmp
fistl
xchg
shl
fdivrs
mov
adc
cmp
dec
jecxz
mov
lods
out
pushf
adc
mov
fs
or
sub
jg
sbb
hlt
sbb
testl
jp
inc
xor
adc
cmp
adcl
add
and
cmp
movsb
in
jo
arpl
mov
dec
mov
cmc
or
push
sbb
push
imul
adc
and
jae
push
daa
movsl
mov
jmp
cmpsl
inc
push
adc
dec
insb
jne
sbb
or
or
mov
bound
inc
inc
pop
invd
add
adc
inc
or
mov
cmp
sub
sarb
imul
mov
stos
jecxz
dec
sbbb
add
push
push
push
push
dec
add
rclb
rcll
aam
test
push
mov
fstps
mov
adc
into
mov
addr16
jge
icebp
push
push
in
push
mov
test
inc
cld
cmp
call
mov
lfs
cmp
out
sbbl
test
test
adc
test
inc
or
icebp
sbb
cmpsb
imul
lods
inc
rcr
xor
movsl
insb
cmpsb
push
iret
add
jnp
popa
call
loop
pop
scas
sub
jne
adc
stc
cmp
rolb
stos
test
test
sub
jmp
insl
test
shrb
cmc
pop
cmp
xchg
dec
gs
lock
lret
insl
push
clc
push
out
or
in
mov
mov
jl
or
rclb
jbe
stos
and
jmp
xchg
mov
call
testb
lods
adc
pop
andl
push
push
xchg
cmp
jo
fdivrp
pop
pop
push
loope
xlat
add
add
popa
jmp
mov
mov
sbb
icebp
jecxz
dec
je
jmp
and
jno
cmpsl
or
mov
cmp
add
fistl
dec
xor
push
and
fimull
push
into
push
fsubr
lret
add
scas
je
mov
jg
push
jecxz
xor
ljmp
das
pop
xor
testb
andb
pop
scas
insl
js
mov
mov
pop
and
adcl
push
jg
xchg
andl
and
fldenv
xchg
dec
or
fsubrl
pop
or
or
out
fstpt
and
jne
popa
pusha
cli
lock
and
test
gs
adc
sbb
ret
jno
xchg
int
pushf
jg
cmc
jo
loop
dec
mov
mov
bound
ja
cmp
jl
mov
mov
mov
popf
lods
mov
int
in
add
pop
mov
jns
aad
outsl
jnp
in
cmp
dec
jmp
mov
insb
ret
cmp
and
sub
jo
mov
fs
adc
mov
ret
filds
movsl
xchg
fidivs
inc
cmc
sbb
mov
scas
fcmovbe
mov
int3
aaa
pop
popa
sbbl
scas
lods
push
fsubrs
mov
sbbb
loop
ljmp
loope
call
or
inc
add
xchg
lds
fldt
cmpl
daa
shrl
andl
out
sbb
add
mov
and
pushf
into
cmc
xor
or
xor
rol
std
push
dec
mov
cmc
stos
outsl
jbe
pusha
push
test
fiaddl
stc
outsb
add
cmpsl
sti
dec
sahf
inc
xchg
push
and
jmp
xlat
rorl
or
inc
push
daa
nop
fcmovb
in
test
rcll
adc
sbb
jg
xor
or
cli
dec
mov
popf
sti
out
xor
imul
mov
jp,pt
icebp
pop
andl
subb
pop
leave
add
imul
inc
pop
leave
loop
lcall
fdivrs
out
push
cltd
icebp
add
jnp
jl
ds
gs
in
pop
mov
and
inc
pop
int
test
push
sub
jecxz
iret
adc
pop
push
loope
jb
cmpsb
jp
addr16
jmp
orl
leave
hlt
fsubrl
mov
push
sti
add
xor
mov
sbb
xchg
mov
sarl
cmp
ss
add
jno
es
stos
jle
fildl
test
xor
xchg
aas
pop
imul
sti
call
arpl
mov
push
jmp
arpl
pop
fildl
iret
or
inc
std
fwait
arpl
clc
mov
add
arpl
ds
and
das
adc
es
mov
aam
push
subl
int
out
xchg
mov
and
pop
insb
xor
mov
add
pop
bound
mov
inc
inc
sub
inc
sahf
jmp
enter
xlat
cmp
push
call
dec
hlt
aad
or
outsb
outsb
xlat
dec
cli
out
pop
push
ret
jne
jp
dec
stos
scas
dec
in
jno
call
lea
xchg
roll
mov
out
cmpl
out
or
jo
ffree
dec
lods
mov
mov
das
add
nop
push
add
or
mov
mulb
push
and
imul
add
popf
jne
or
leave
dec
mov
xchg
lds
and
push
stos
test
inc
sbb
scas
jp
in
test
das
sub
inc
pop
movsb
pop
das
ror
stc
pop
cmpsb
or
xchg
data16
and
out
push
inc
mov
ss
call
jbe
and
jge
in
mov
shlb
push
out
ja
pop
push
xor
xchg
sub
push
int3
int
inc
out
jmp
xchg
sub
mov
sbb
xchg
jb
mov
test
and
sbb
sub
pop
cmp
fs
scas
inc
scas
mov
and
sbb
mov
fadds
cmp
repz
mov
lahf
sbb
fisubrl
mov
lods
push
xchg
pop
loope
cmpsl
loopne
cmp
add
imulb
adc
inc
or
insb
insb
jmp
or
dec
inc
insl
xchg
repnz
xor
lcall
mov
push
xlat
xor
sbb
sub
push
sub
dec
clc
fstpl
les
sbb
into
dec
cmp
loope
cs
inc
testl
pop
roll
stos
shll
pop
out
mov
mov
push
iret
cmc
test
push
pop
dec
in
fisubs
mov
fstp
jnp
dec
fadds
shrb
cmc
iret
push
sub
mov
jg
push
xor
adc
inc
daa
bound
dec
repnz
xchg
in
adc
inc
daa
stos
xor
popa
daa
dec
jmp
push
or
jb
aam
mov
pop
lcall
fs
fs
leave
mov
mov
mov
stos
xlat
cwtl
test
ljmp
fiadds
xor
jp
push
lods
push
test
dec
inc
sub
ret
inc
popa
cltd
fcoml
push
nop
rcrb
out
adcl
or
lret
push
sub
aad
or
jmp
cs
inc
xlat
lret
mov
jmp
inc
and
inc
add
push
fidivrs
jns
shll
in
xchg
out
jmp
mov
call
mov
jae
push
inc
adc
bound
mov
xor
pop
push
rolb
into
pushf
push
push
leave
xor
mov
cmpsb
addr16
out
sbbb
mov
mov
jno
popf
mov
outsl
dec
and
adc
outsl
stos
insl
jle
mov
push
pop
aaa
xor
lock
inc
pop
jns
push
adcb
lret
cld
dec
icebp
scas
push
xchg
outsl
pushf
icebp
fnstsw
inc
sbb
imul
xchg
incb
in
adc
insl
rcr
push
jns
mov
ljmp
pop
xchg
ja
cmp
rorb
nop
push
iret
xor
dec
and
aam
sbb
xchg
xchg
pop
std
pop
pop
mov
ret
iret
lret
inc
adc
or
fstl
push
xchg
fimuls
orl
xor
lods
je
fiaddl
or
sub
and
dec
push
jecxz
pop
and
dec
incl
push
mov
mov
pushf
mov
imul
std
jbe
ret
push
add
nop
fs
loop
jae
push
sbb
call
or
ret
iret
or
or
fbld
lea
sbb
jno
std
xor
ljmp
addr16
and
sub
pusha
int3
pop
call
jmp
xchg
mov
ljmp
cmp
mov
mov
shr
mov
jmp
inc
div
lods
push
sbb
cli
inc
mov
stos
mov
fisubs
inc
stos
test
mov
pop
sub
gs
push
pop
jge
mov
push
dec
inc
dec
clc
mov
int3
lahf
mov
mov
std
mov
add
filds
mov
and
push
or
cmp
je
aaa
lret
cmpsb
cmpsl
sub
push
loopne
jb
push
cmp
loopne
mov
fsub
fisttpll
add
jge
shrl
fdivs
mov
pop
sbb
mov
mov
aaa
jmp
aad
call
xchg
adc
fs
mov
orb
fsubrl
int3
cs
ficompl
je
xchg
jge
and
mov
xchg
jb
rorb
adc
lock
loope
or
cwtl
aad
sub
fcoml
mov
push
insl
and
sub
adc
mov
sarb
sub
movsl
cmpsl
adc
adc
ficomps
lahf
push
cwtl
js
dec
enter
fbstp
in
push
mov
lret
cmp
jne
imulb
mov
lcall
inc
fdivs
loopne
xor
aad
scas
cli
pop
das
in
data16
xchg
mov
sti
and
xchg
fiadds
outsb
aaa
sub
push
jmp
mov
inc
aad
outsl
jge
sbb
sub
je
cmp
inc
out
push
dec
nop
cmp
sbb
xchg
stos
and
mov
cmp
ret
pop
cmpl
adc
xorl
lds
call
cli
sbb
and
mov
adc
pop
cmp
bound
pop
inc
into
pop
shrb
or
add
lret
push
data16
aad
add
dec
jnp
xchg
or
fcomi
xlat
rol
cwtl
ds
pop
pop
or
adc
pop
pop
rcrb
leave
fistl
dec
pusha
lret
fwait
dec
in
mov
adc
cmp
popf
cs
jmp
popa
and
lods
sti
popf
lods
in
push
into
loop
movsl
les
mov
mov
scas
leave
stc
cmp
xchg
rcrl
sbb
and
mull
lcall
lods
jo
bound
clc
or
test
dec
sub
fstps
push
scas
stos
test
mov
in
or
sub
test
xchg
jno
push
inc
negl
add
ret
gs
scas
xchg
xor
and
les
dec
dec
jns
fadd
scas
ss
adc
out
hlt
dec
inc
pop
dec
inc
pop
popf
in
sub
pop
sahf
and
jne
push
pop
hlt
push
jns
cmpsb
clc
push
cmp
xor
cmp
addb
pop
bound
movsb
das
dec
loopne
dec
rol
push
sbb
dec
push
pop
stos
inc
jle
addr16
jae
sub
rclb
mov
clc
mov
in
mov
adc
call
or
stos
dec
inc
pusha
int
mov
cli
xchg
arpl
or
jbe
sub
stc
ds
out
jmp
push
and
mov
loopne
stc
popf
push
test
pop
sub
scas
and
push
rcl
mov
test
dec
jne
mov
add
testl
cli
and
out
mov
fcompp
and
inc
pop
mov
adc
lock
aaa
fwait
arpl
lods
in
add
lods
sub
cmpsb
sub
push
mov
mov
mov
jmp
fbld
sbb
sub
add
cmp
inc
loope
xchg
dec
scas
jle
push
in
rcr
and
mov
clc
loop
fsubrs
mov
sub
and
pusha
sbb
test
cmpsl
lds
ljmp
push
popa
ret
xlat
mov
jne
xor
inc
xor
loop
xchg
out
ret
add
push
ja
aaa
leave
jns
lret
adc
inc
jl
scas
stos
ret
mov
test
into
ss
or
jbe
mov
je
lcall
rorl
jmp
dec
les
sub
js,pn
loope
mov
daa
leave
and
jmp
push
or
add
rorl
mov
push
rcll
mov
lds
lods
aad
in
inc
pop
pop
ret
ret
cmp
out
push
subl
jge
sub
mov
jbe
push
std
mov
shrb
pop
jecxz
mov
cltd
mov
inc
push
xchg
lock
data16
add
pop
mov
push
and
or
test
pmaxsw
shl
enter
rcrb
xchg
xchg
pop
add
lret
mov
push
arpl
mov
dec
mov
clc
inc
mov
mov
repz
add
adc
pop
mov
test
push
int
stc
sbb
cltd
cltd
out
adc
cli
inc
cmpsb
outsl
mov
xchg
notb
scas
and
imul
add
and
insb
mov
dec
cmp
in
fsts
in
loopne
fildl
push
cmp
or
xchg
das
cld
mov
icebp
shlb
test
mov
sub
lret
lods
in
ss
push
pop
cmp
fimull
inc
jnp
jnp
adc
xor
push
lods
fs
jp
push
xchg
stc
dec
call
xor
pop
dec
xchg
fimuls
inc
mov
and
shlb
inc
inc
stc
aam
pop
push
jbe
xchg
cwtd
sahf
xlat
xlat
js
mov
iret
and
stc
lret
or
mov
in
inc
mov
cmp
xchg
cmp
add
adc
push
inc
and
sbb
pushf
and
mov
out
and
and
mov
adc
fstps
dec
jbe
sub
popa
pop
insl
fsts
inc
adc
sbb
mov
or
movsb
outsl
ss
or
jnp
sub
das
and
movsb
fidivl
out
xchg
dec
dec
xor
pop
push
sbb
jb
cmpsb
enter
inc
sbb
mov
xorb
pop
or
jecxz
ja
push
jno
and
pop
push
xor
les
rorb
xor
jle
seto
js
jo
and
dec
and
lret
mul
or
sub
je
mov
nop
push
push
inc
cmp
sbb
jae
xorb
mov
mov
fcmovnbe
add
dec
imul
fdivr
jo
in
repz
data16
cmpsl
dec
add
fwait
into
jns
nop
stos
push
ret
jge
jp
iret
into
adc
inc
xchg
adc
dec
stos
fldcw
mov
adc
data16
fistps
rorl
adc
xor
icebp
fcomps
aas
pop
addr16
cltd
pop
sub
mov
lea
or
bound
adc
pop
lds
clc
dec
cmp
loop
cmpsb
pop
fstps
and
jo
xorl
or
mov
arpl
add
inc
jb
fdivs
out
cld
adc
pusha
jle
rolb
ret
fistpl
bound
and
insl
in
rcrb
inc
outsl
cmp
int
loopne
sub
cmp
dec
xchg
mov
inc
bound
jnp
dec
jcxz
es
dec
pop
push
lods
and
cmp
xor
divl
or
inc
repz
jmp
xchg
cmp
mov
dec
pop
jns
aaa
cltd
jle
jb
jg
fimull
aas
sbb
mov
jmp
cmc
jbe
lahf
or
dec
sub
lret
mov
or
lock
movsb
insb
mov
arpl
popf
inc
outsl
sbb
add
call
sub
push
mov
sahf
lcall
xchg
outsl
in
push
in
cld
mov
pop
mov
das
inc
imul
push
sub
mov
cli
sub
mov
pop
shrl
add
inc
cmpsb
push
hlt
mov
sbb
imul
sub
jl
jmp
outsl
jo
jns
shl
lods
cli
xchg
sti
gs
adc
mov
and
mov
mov
push
jns
mov
mov
xor
in
stos
dec
loopne
inc
cmp
sbb
fisubs
insb
cli
sbb
data16
lcall
and
lock
or
out
jmp
or
daa
lret
xchg
fidivl
jg
push
subl
push
inc
cmpsb
dec
jecxz
inc
in
push
mov
pop
mov
sub
and
sbb
sub
shll
sahf
fcoml
dec
xchg
aam
sub
inc
and
mov
sbb
or
lahf
push
pop
lcall
lds
movsl
jbe
jnp
sbb
sub
repnz
cli
and
adc
fnsave
add
xchg
sub
sub
push
dec
repz
into
ret
jne
cli
clc
aaa
shrb
orl
jnp
push
jg
daa
in
mov
movsb
xchg
stc
adc
lds
xchg
dec
andb
pop
cltd
pop
or
jno,pt
xor
addr16
mov
push
or
lods
paddsw
in
push
outsb
adc
loopne
sbb
mov
pop
cmpsb
decb
xchg
jne
jg
jge
mov
cmp
and
sub
btrl
sbb
js
fidivrs
push
es
mov
inc
pop
jbe
aam
call
std
lds
mov
repz
out
inc
loop
or
movsb
jo
xchg
sub
adc
addr16
out
pop
ret
dec
cs
out
fisubs
or
imul
or
iret
mov
call
add
imul
in
push
fstpt
pushf
fsubl
ret
enter
rcrl
das
cld
add
push
testl
aas
add
lcall
cmp
pop
shl
sub
lock
pop
and
push
push
jno
sti
dec
cli
xchg
pop
sahf
outsb
aad
mov
sub
adc
sbb
popa
push
ficoml
test
mov
push
iret
inc
push
std
xor
inc
mov
insl
cmpsb
inc
daa
jns
and
xchg
xchg
dec
jmp
cmpsl
into
push
pusha
mov
mov
push
test
jmp
jle
mov
push
mov
rcl
inc
aaa
xchg
arpl
test
push
jne
leave
sub
fisubs
fisubl
mov
mov
jle
jecxz
sbb
leave
sbb
popf
out
mov
jle
pop
scas
lds
xlat
mov
xchg
jbe
jnp
mov
adc
std
loop
push
imul
int3
popa
lret
fists
inc
mov
or
inc
push
jecxz
mov
cmp
lock
mov
xor
mov
push
mov
into
and
clc
shlb
adc
xor
mov
pop
and
or
test
lahf
arpl
lock
mov
dec
sbb
fucomip
bound
inc
outsl
mov
mov
shlb
mov
fcmovne
add
mov
scas
fcoms
cwtl
jmp
add
pop
pop
popa
and
das
xor
sti
inc
movb
mov
ucomiss
lock
inc
testb
jge
cmp
bound
mov
dec
sub
and
or
push
inc
divl
xor
push
mov
mov
mov
sub
arpl
and
insb
mov
lods
clc
adc
xchg
pop
ds
arpl
xchg
inc
jnp
movsb
mov
rcrb
movsl
inc
movsb
sti
push
push
jmp
pop
ret
pop
pop
lods
push
shrb
push
sets
mov
test
inc
xchg
lret
bound
mov
femms
and
jl
dec
repnz
mov
xchg
or
clc
and
inc
or
sbb
stos
bound
inc
push
inc
mov
cli
cmp
popa
fisubrl
pusha
adcl
push
insl
out
jbe
movhps
aas
call
dec
lret
adc
dec
inc
push
lock
push
and
lea
push
ret
mov
fs
and
and
repz
std
sti
mov
notl
jae
push
in
mov
bound
leave
push
sarl
addr16
push
hlt
xor
xor
fiadds
xchg
in
and
sbb
leave
mov
lods
pop
daa
mov
std
pop
mov
add
mov
adc
or
testl
inc
and
leave
jmp
fwait
sbb
mov
sub
inc
jg
cli
jnp
jnp
jle
mov
or
outsl
outsb
pop
cmp
das
addr16
mov
pop
xor
jno
repnz
xor
frstor
fisubs
adc
pop
sub
fidivs
lea
pop
iret
mov
iret
leave
pop
jb
mov
scas
dec
test
in
mov
cld
in
xor
xchg
mov
and
daa
mov
cs
and
test
mov
push
pushf
xor
xchg
xor
adc
and
jbe
jle
cwtl
sub
sbb
scas
dec
jb
bound
mov
daa
dec
xchg
dec
into
out
loope
xor
xor
scas
cmc
add
pop
mov
scas
ja,pt
ror
cwtl
mov
enter
xor
adc
inc
xor
push
repz
inc
xor
movsl
pop
pop
xchg
pop
pop
icebp
cmp
push
cmp
sub
dec
jns
ljmp
xchg
xor
pop
out
ja
andl
pop
cmc
pop
fcmovne
lret
mov
in
push
xchg
stc
pop
cmc
lcall
jnp
int
jg
adc
out
and
shlb
test
out
and
push
adc
or
outsb
xor
test
add
mov
cmp
daa
popl
pop
push
mov
xlat
and
out
mov
inc
scas
lods
xchg
push
mov
mov
lcall
fdivp
xchg
fidivrs
pop
dec
cmp
xchg
push
fistpl
call
jge
xchg
adc
mov
inc
sbb
sub
mov
repnz
stos
pop
loopne
mov
sahf
mov
sahf
sbb
push
stos
sub
das
pop
sti
mov
lds
jno
repnz
sub
mov
into
mov
and
mov
testb
inc
mov
jecxz
inc
jae
out
push
mov
mov
inc
aad
mov
and
test
pop
loope
dec
xor
jae
aaa
pop
loope
movsb
push
jecxz
arpl
xchg
push
xor
lds
jbe
jb
loop,pt
sbb
pop
outsl
daa
daa
mov
and
imul
call
mov
ljmp
stc
mov
xor
sub
cmc
add
dec
cmc
lods
popa
lret
aam
add
jns
std
xor
push
sarb
mov
xor
adc
rcl
xor
xchg
decl
pop
enter
cld
das
movsl
inc
push
sub
add
push
push
sbb
cmp
mov
inc
shll
mov
sub
dec
mov
nop
mov
adc
ds
adc
or
jmp
xor
loope
xchg
or
test
jmp
jle
in
in
daa
ja
int
cmp
or
mov
inc
xchg
movsl
adc
scas
pusha
jae
lods
mov
add
aaa
enter
xchg
movb
in
dec
sub
adc
iret
mov
loop
xor
loopne
jg
pop
andl
outsl
scas
add
cmp
jae
scas
or
loopne
out
pop
cmp
and
mov
inc
out
lcall
cmpsl
jp
sub
arpl
pop
int3
mov
in
mov
jno,pt
jo
lret
jg
movsb
or
sub
loop
lret
popf
sbb
in
and
fimull
adc
jl
in
rorl
faddl
adc
mov
je,pt
xor
mov
sahf
pop
les
js
dec
lret
jb
cltd
cmp
push
dec
adc
ljmp
cmp
xor
adc
test
les
or
add
xor
or
mov
inc
mov
cs
lods
jmp
mov
sti
test
or
imul
xor
add
jb
push
jns
dec
add
stos
out
add
clc
push
incl
stos
pusha
mov
mov
aad
mov
loopne
std
mov
cmp
jge
push
push
sub
mov
repnz
scas
cmp
mov
jns
mov
repz
mov
cmp
test
in
pop
out
add
imul
cmp
xchg
adc
pushf
daa
adc
xor
mov
scas
ds
aam
fcoms
or
pop
add
mov
sti
mov
fldl
das
and
dec
dec
lock
movsb
mov
stos
insl
mov
lds
cmpsl
mov
xor
add
jo
repnz
mov
pop
or
push
outsb
pusha
pop
ljmp
rcl
jmp
aad
bound
addb
mov
stc
cli
mov
mov
pop
mov
out
es
les
clc
cld
adc
mov
inc
int
or
clc
sub
jne
jg
jge
lods
lcall
pop
mov
mov
pusha
pusha
cmc
rorl
dec
nop
das
push
fcoms
clc
xor
push
int3
adc
loope
cs
fldcw
dec
pop
cmp
jno
sbb
jl
call
xor
sub
int
sti
addl
push
outsl
mov
mov
push
mov
inc
sub
hlt
mov
mov
jge
pop
mov
pop
std
xchg
lds
jns
addr16
shlb
hlt
das
dec
ja
cmpsl
xor
inc
jl
aaa
sahf
adc
adc
sarb
or
jbe
mov
in
pusha
dec
fs
or
adc
cwtl
int3
adc
push
or
xchg
fisubl
mov
xchg
mov
xchg
int3
mov
aaa
mov
mov
inc
pop
adc
push
outsl
xor
adc
or
jo
and
mov
jge
call
in
repnz
xchg
or
rcl
mov
inc
mov
or
jbe
sub
and
pop
fldcw
inc
lock
fistpl
pop
fwait
js
pop
push
mov
jge
int3
cmp
lahf
filds
jae
inc
stos
je
fmull
dec
mov
lds
jb
adc
test
nop
adc
in
fsts
fsubrs
test
mov
ss
xchg
jg
fs
add
fwait
cld
add
rorl
and
ja
jge
jmp
stos
xlat
aaa
decl
or
sbb
jle
sar
insl
adc
out
lock
cld
lods
and
and
jmp
xorb
mov
sbb
push
fwait
dec
cld
mov
fsts
cld
push
ds
dec
mov
xlat
lods
sub
cmp
push
mov
cmp
dec
dec
iret
sub
movsb
dec
pop
or
call
sbb
add
mov
jge
mov
dec
jl
fcomps
aas
mov
iret
push
mov
jne
cmc
jl
cmp
mov
mov
fiaddl
or
jp
imul
xchg
fidivl
fmul
push
in
lock
and
lcall
push
inc
es
rorl
mov
add
sub
xchg
scas
sub
pop
jbe
cmp
mov
rorb
xor
mov
divl
dec
push
shlb
scas
or
fwait
shlb
sbb
mov
sub
sub
adc
cmp
in
ret
ds
push
and
fistpll
jbe
jae
mov
pushf
and
push
les
cs
dec
mov
int
xchg
jg
pop
xchg
inc
in
test
and
xchg
and
cmc
les
popf
scas
je
stos
addl
outsb
popf
push
not
das
xchg
dec
pop
enter
test
or
jge
and
lret
jp
std
jg
jge
add
dec
imul
jno
jmp
pop
arpl
mov
out
pop
outsb
test
sbb
xor
loop
mov
dec
rorb
pop
mov
mov
adc
inc
ret
loope
fistl
or
outsb
rcr
popa
dec
hlt
inc
lahf
mov
outsl
sbb
mov
fists
sbb
adc
add
sub
xchg
incb
lcall
cltd
mov
enter
mov
mov
and
cmp
shl
push
jle
cmp
dec
mov
rol
jbe
and
shll
in
ljmp
leave
push
sub
or
fcmovnu
pushf
xor
mov
sarl
std
xorl
ret
jne
or
push
ja
js
sub
xchg
popf
loop
pop
or
xchg
jo
loop
jne
push
aam
in
xchg
jno
andb
mov
cmp
jmp
sub
jne
out
inc
in
scas
or
lock
cmpsb
pop
xor
cmp
jp
movsb
test
cltd
loope
movsb
pop
roll
popa
fxch
sub
mov
xor
sub
test
loope
sub
sbb
ja
add
out
cmp
xlat
repnz
pop
xor
fs
mov
sub
or
xlat
sub
scas
mov
mov
cltd
ds
and
adc
shrb
xchg
jmp
inc
out
xlat
idivb
jne
push
prefetch
stos
xchg
adc
adc
lea
cltd
cmc
mov
pushl
xchg
fucomp
popa
jmp
push
insl
xor
push
mov
adc
xor
adc
loopne
imul
dec
outsb
xchg
mov
push
push
push
xor
adc
decb
fcmovu
sbbb
outsb
movsb
in
repz
in
mov
cmp
push
add
pop
push
mov
pop
mov
mov
jo
dec
lea
jno
jo
cmp
jbe
sub
std
cmp
aad
test
jmp
or
sbb
mov
std
imul
data16
pop
or
xchg
pop
mov
or
mov
lods
inc
inc
mov
bound
jbe
push
inc
or
mov
btc
stc
xor
xor
fnstenv
pop
dec
mov
or
loope
xchg
inc
jne
ljmp
fucomp
adc
fadd
adc
cmp
pop
std
or
fistpl
add
add
mov
lods
sub
jl
je
pop
inc
cmp
xchg
mulb
es
out
xchg
test
je
push
or
mov
inc
rcl
add
mov
pop
adc
xor
ds
mov
mov
jle
icebp
in
repnz
das
xor
push
xchg
outsl
popa
adc
aam
negl
sarb
imul
sbb
aaa
mov
push
rorb
mov
xchg
mov
rcrl
jp
push
sub
or
mov
adc
cmp
lea
add
mov
sub
das
sahf
lret
or
mov
push
jl
ss
xor
sahf
cs
and
push
dec
jecxz
sub
mov
pop
mov
scas
in
dec
push
pushf
pop
out
jg
cld
jbe
mov
test
outsl
movsb
int3
xlat
int3
out
mov
lcall
xchg
gs
enter
scas
adc
pushf
imul
popf
out
cmc
mov
out
in
ds
jecxz
sub
cmpsb
icebp
jae
pop
jl
and
lods
mov
dec
mov
push
fcompl
mov
jecxz
and
in
sbb
loopne
addr16
aaa
fiadds
jge
bound
fisubl
insl
push
mov
cwtl
mov
popa
shl
movsb
mov
xor
lock
sarl
mov
insl
insl
ret
rorb
and
add
mov
ja
jg
push
jne
vmwrite
jnp
jle
sbb
xchg
or
hlt
push
iret
mov
cltd
mov
sarl
jmp
and
in
mov
rorb
aad
aaa
push
pop
or
insb
into
sub
and
cs
mov
jmp
out
mov
adc
les
aaa
stos
push
push
adc
ljmp
jno
insb
pop
xchg
ds
and
pop
stc
jnp
mov
cmp
or
sbb
jns
xchg
sbb
scas
sbb
mov
call
scas
sub
lods
pusha
loopne
shrb
sarl
push
mov
aad
xchg
inc
es
pop
aaa
xchg
lret
adc
xchg
push
inc
cmp
je
pushf
sbb
in
fsubrl
shl
jmp
rorb
or
shlb
js
int3
pop
aaa
lock
xchg
ret
pop
add
das
push
dec
mov
mov
pop
popf
in
arpl
cmpsb
jg
adc
aad
mov
or
fwait
pop
imul
dec
mov
leave
mov
and
in
rolb
aad
sti
xor
pop
adc
xchg
adc
sub
mov
mov
push
es
lds
cs
nop
sbb
repz
jge
jno
and
cmp
inc
cli
xor
jle
cwtl
sbb
xchg
lods
aam
lds
push
add
pop
loope
xor
in
and
xchg
adc
sub
into
add
push
lods
sub
test
cmp
sub
push
movsl
pop
pop
xor
inc
inc
or
test
pop
nop
jo
and
popf
or
enter
mov
cmc
adc
jnp
push
stos
or
ret
scas
jmp
icebp
dec
inc
je
mov
daa
clc
inc
mov
loopne
ret
mov
lcall
mov
hlt
xchg
mov
aad
xor
cmc
sub
add
imul
scas
pusha
popa
or
and
add
sbb
cmp
add
sub
es
insb
xchg
add
and
call
mov
fxtract
jecxz
and
dec
filds
testl
stc
int3
icebp
push
outsl
in
pushf
cld
mov
and
dec
jbe
icebp
and
ds
iret
push
jp
es
jbe
sbb
cmp
ret
cmp
into
imul
and
jns
cmpsb
mov
sbb
xor
repz
punpckhdq
daa
push
ret
lcall
mov
mov
jg
or
mov
pop
mov
jbe
mov
call
test
xchg
adc
iret
into
incb
add
fwait
imul
cli
cli
dec
xor
addr16
int3
jecxz
nop
xchg
movsl
mov
test
mov
jge
push
sbb
testl
leave
aaa
inc
or
inc
inc
dec
mov
flds
imul
mov
push
mov
iret
add
loopne
and
mov
sbb
xchg
das
out
pop
xchg
inc
imul
lock
test
imul
mov
dec
cmpsb
or
jo
xorl
call
rcr
in
jmp
test
xlat
push
jns
mov
xchg
nop
pop
andl
cmc
xor
sbb
pop
int
xchg
mov
and
pop
add
xor
xor
pop
lea
fidivl
out
shlb
movl
addr16
sub
bound
mov
pop
leave
aad
push
push
mov
jle
mov
cmp
mov
sub
mov
out
out
push
jp
mov
repz
pop
pop
aad
lret
jb
cmp
cmc
add
decl
pop
xchg
mov
lea
test
jmp
ret
mov
jmp
push
into
div
ss
fbld
hlt
ret
rclb
lahf
or
inc
repnz
fwait
push
inc
pusha
imul
mov
and
or
add
adc
add
lret
mov
add
cli
push
sub
aaa
sbb
test
scas
pop
mov
mov
ror
gs
add
test
int
sbb
or
inc
mov
cmp
std
out
pop
clc
rcll
cmp
mov
push
mov
cwtl
lea
std
pop
addr16
lock
mov
xor
in
adc
jb
iret
and
out
sahf
daa
insb
xor
xchg
add
daa
push
push
jne
xor
aas
loop
sbb
jnp
dec
divl
add
lret
in
loop
cmp
pusha
pop
cmpl
push
mov
cmp
mov
out
add
cmp
addr16
hlt
repz
adc
punpcklbw
add
mov
jo
imul
paddsw
outsb
mov
fwait
lret
jge
pop
arpl
fidivrs
xchg
inc
sub
call
stos
adc
loop
or
jno
aam
jge
outsb
push
and
out
xchg
leave
ret
mov
xchg
jle
fwait
inc
dec
mov
ds
inc
or
sub
pop
idivl
or
inc
scas
call
rolb
pop
pop
push
mov
rclb
inc
mov
mov
ret
fsts
lcall
cmpsb
mov
push
lods
pop
cmp
adc
stc
es
rol
jmp
fdivs
xlat
jp
sub
dec
es
enter
or
mov
mov
fists
xor
cltd
sub
out
dec
sbb
daa
sahf
out
mov
pop
test
pop
add
sub
jnp
cmp
cli
int3
ret
shll
loopne
les
dec
stos
lock
pushf
sti
mov
rcll
scas
ljmp
sub
mov
rcll
adc
pop
cwtl
xchg
pop
inc
loope
jl
mov
verr
rcll
mov
gs
push
loopne
jecxz
push
push
dec
push
ret
sar
cmpsb
mov
popf
loope
sub
push
sbb
sahf
xor
fcomp
cmpl
lods
les
sub
dec
sub
js
mov
mov
cmp
cltd
scas
jne
mov
repz
aad
dec
ljmp
loop
push
pop
cmp
shlb
cld
xlat
sbb
lahf
sbb
das
dec
jle
cmpsb
mov
jb
sub
shlb
test
mov
push
dec
inc
and
in
xor
push
dec
out
xor
mov
xor
dec
mov
mov
cmp
jbe
jp
popa
cmp
adc
jbe
stc
jp
push
jbe
fwait
mov
inc
setnp
push
lock
jge
push
mov
outsl
lea
int3
pop
repz
mov
jb
mov
idivb
into
sub
popa
push
loop
xor
scas
pusha
ret
int3
cld
scas
pop
inc
inc
adc
cmp
js
cli
mov
dec
ret
mov
ficoms
sbb
popf
iret
inc
gs
adc
out
or
lret
sub
pop
xorl
or
mov
adc
lock
inc
out
in
inc
int
pop
sti
jns
lods
cmp
push
clc
and
sub
lea
iret
test
push
add
mov
cmpsl
mov
sbb
int3
or
adc
and
xorl
ds
popf
cmc
orl
fdiv
or
inc
insl
cmc
fdivp
push
add
cmpsl
mov
push
pop
jnp
add
xorl
adc
push
gs
insl
sbb
iret
mov
aad
movsb
sub
adc
mov
add
xchg
mov
inc
loopne
inc
jecxz
fisubrs
outsb
push
dec
adc
push
pop
fdivrs
jge
cltd
mov
ljmp
add
cmp
adc
int3
and
mov
push
insl
in
push
pop
xlat
sub
fcomip
push
insb
lock
xlat
je
add
or
mov
cli
rcl
jbe
push
shl
out
out
xchg
imul
push
add
daa
sbb
cs
int3
or
or
sbb
sbb
jns
data16
cmpsl
cmpsb
xchg
icebp
mov
sbb
mov
jb
cmp
push
fcmovbe
add
insb
lds
aad
xor
inc
loop
push
add
jmp
out
cmp
cmp
in
ret
inc
xchg
pop
adc
cmp
out
and
pushf
movsb
repz
lret
jae
inc
mov
dec
insb
es
cwtl
xchg
pop
mov
push
nop
test
add
xor
lcall
lahf
mov
xchg
ret
clc
adc
jno
stos
adc
or
ret
or
jns
icebp
arpl
test
ljmp
aam
push
sbb
and
xor
pop
mov
push
leave
mov
add
adc
or
ret
or
shrb
sbb
js
outsl
ja
mov
aaa
dec
inc
cmpsb
adc
imul
inc
int3
lods
jp
insb
lret
dec
jo
aam
jnp
adcl
inc
sbb
xchg
xlat
fnstenv
inc
cmp
out
roll
repnz
scas
addr16
jno
mov
inc
into
xchg
cwtl
mov
cwtl
pushf
pop
fisttps
mov
lret
and
sub
mov
jns
cmpsl
and
shr
loope
mov
fcoms
std
dec
nop
add
aaa
lcall
notb
jg
mov
mov
cli
testl
lods
lock
lcall
out
gs
xchg
mov
and
dec
lret
stos
sub
ror
mov
mov
testl
pop
xor
cmpsl
loope
pushf
add
imul
xlat
aad
shll
mov
leave
ret
inc
add
push
or
outsl
call
xchg
pop
pop
mov
mov
pushf
fistpll
xor
adc
jns
scas
xchg
cwtl
orb
loop
repz
jecxz
and
push
adc
mov
jno
jbe
cld
push
je
rolb
cmpsl
push
inc
and
push
push
cmp
dec
dec
fwait
insb
addr16
xor
mov
mov
sbb
xor
mov
out
testb
pop
test
dec
xor
xor
cltd
and
leave
lods
outsb
add
in
pop
adc
mov
jl
ficoms
stos
bound
ljmp
push
cmp
mov
jnp
xor
sub
cmp
adc
jmp
test
push
les
lret
adc
sub
fsub
mov
pop
jecxz
inc
push
mull
mov
mov
push
jbe
sahf
insb
pmovmskb
test
mov
sbb
adc
sbb
sarb
and
mov
mov
dec
dec
pop
shrb
mov
das
push
jns
fidivs
loop
rclb
imul
in
pop
cs
lcall
mov
into
mov
das
jge
xchg
insb
movsl
sub
out
out
sub
xchg
ret
clc
jbe
aas
gs
push
inc
and
push
jb
mov
rol
out
orb
mov
or
cmpsb
pop
xlat
rol
fcmovnu
push
js
lods
aaa
mov
loopne
or
add
lcall
jne
test
jg
stos
push
add
jae
xchg
sub
cmpsb
ljmp
test
into
xor
sbb
cmpsl
cmp
outsb
sub
push
cli
xchg
lods
fwait
sbb
fnstenv
sbb
fcomip
scas
daa
and
stos
sbb
adc
xchg
outsb
jb
add
pop
inc
sub
les
jno
stos
dec
and
adc
cmp
push
xchg
and
cld
rcl
add
popf
dec
test
hlt
js
mov
cmp
cmpl
adcl
jle
and
les
pop
stos
add
rcr
stc
int3
dec
jle
jmp
add
loopne
cmp
jl
fnstcw
insb
adc
xchg
add
mov
inc
pushf
or
cmp
pop
shll
imul
adc
add
pop
push
shlb
andb
adc
dec
dec
scas
sbb
fistpll
xor
pop
mov
add
lret
xor
inc
adc
insb
adc
jge
add
adc
xchg
dec
or
les
mov
lret
pushl
mov
in
mov
xor
or
cli
sahf
mov
pop
bound
cmpsl
sarb
push
stos
mov
fwait
push
xchg
mov
icebp
pusha
adc
adc
xorl
addr16
outsl
lahf
mov
pop
jle
pop
mov
test
mov
jl
mov
pop
mull
pusha
xlat
cmpsb
inc
xchg
out
popf
int
fistps
out
loopne
movsl
int3
sub
fmuls
pop
hlt
jnp
or
pusha
cmpsl
into
add
out
mov
pushf
xchg
test
mov
add
popa
push
adc
rcrl
xchg
cmpsb
mov
and
sub
cmp
dec
or
popl
sub
in
mov
lahf
push
jmp
addb
pop
mov
xchg
mov
adc
dec
or
sub
sbbl
sbb
mov
jbe
adc
movsl
sub
mov
push
test
xchg
push
xchg
aaa
pop
out
jp
jns
and
movsb
sub
xchg
sar
fiadds
sub
hlt
jg
push
fcom
icebp
mov
xchg
xlat
repz
in
popf
xchg
mov
xor
inc
hlt
aad
fcoms
xchg
mov
mov
test
aaa
fists
lods
jmp
icebp
push
hlt
aam
in
pop
outsl
das
jmp
enter
pop
mov
insb
and
jo
shrl
dec
fidivrl
or
mov
fldenv
dec
lds
daa
das
fucomip
inc
mov
jmp
movsl
fidivrs
aam
or
test
fldenv
fidivs
mov
push
shr
push
add
in
shll
xor
sbb
fnstenv
push
ljmp
xchg
xor
lcall
bound
roll
cmp
loope
test
adc
or
test
stc
sbb
sub
rcll
push
jno
lcall
loop
test
sbb
movsb
out
and
jne
enter
pop
or
pop
add
pusha
clc
jne
jge
xchg
data16
jo
push
out
adc
pop
inc
js
popa
call
sub
dec
loopne
pop
pusha
popf
fmul
es
fisttpl
xor
sub
je
mov
roll
jmp
add
cmpsb
popa
int3
push
sbb
or
sbb
int
and
aas
inc
dec
loope
lret
mov
xchg
cli
mov
or
inc
dec
pop
shlb
mov
dec
sbb
dec
test
movsl
push
imul
push
movsl
mov
pop
out
out
stos
inc
repnz
and
dec
cmp
jae
jb
push
mov
es
push
dec
shlb
dec
movsb
pushf
sub
sub
push
notb
nop
push
cmpsl
adc
xor
dec
or
into
nopl
es
jne
mov
mov
xchg
je
dec
repnz
mov
out
cmp
out
mov
sbb
je
pop
xor
mov
mov
pop
sbb
jnp
iret
je
in
inc
es
sub
sbb
sub
cmp
or
jns,pt
lcall
xor
int3
push
dec
xor
add
dec
stc
jl
jno
mov
scas
stos
push
xchg
push
lret
ja
sbb
outsl
push
mov
pop
jb
mov
test
out
inc
ret
push
repz
add
inc
mov
loopne
add
cmp
xchg
add
add
stc
jnp
and
push
pop
and
xor
cmpsb
fcompl
out
cmp
xchg
or
lahf
call
mov
adc
dec
pop
ss
cmp
loop
add
fidivs
cli
insb
in
movsl
jge
dec
pusha
imul
hlt
ror
int3
inc
and
jne
mov
bound
mov
fdivrs
jno
inc
jb
mov
ret
lods
mov
jl
pop
mov
int3
jae
push
push
or
outsl
xor
pop
dec
sbb
orl
mov
data16
adc
jmp
mov
ror
insb
jg
hlt
mov
adc
or
fnstcw
dec
xchg
cmp
je
pusha
std
cmp
std
mov
in
mov
testl
ficoms
outsl
int
mov
or
bound
fwait
pop
arpl
cwtl
scas
jns
jae
int3
fists
cmp
outsb
shrl
add
mov
fadds
cmp
dec
adc
imul
daa
lcall
sbb
adc
mov
cli
hlt
mov
mov
fwait
cmp
leave
inc
leave
test
aas
repnz
add
dec
pop
repnz
mov
inc
sub
js
xchg
jmp
lea
data16
ret
hlt
cld
mov
mov
sbb
test
xor
jns,pt
pop
sbb
lret
adc
mov
dec
inc
div
push
push
sub
sahf
cmp
pop
divb
test
mov
mov
jo
mov
inc
pop
adc
xor
mov
and
and
sti
xor
out
shr
in
cwtl
data16
negl
cs
stos
cmp
arpl
or
mov
sbb
fldenv
xor
or
shrl
xchg
pusha
mov
out
hlt
jg
xchg
sbb
cmpsb
in
cmp
mov
scas
out
inc
test
les
dec
xchg
xchg
push
adc
outsl
jno
jae
out
movsl
stc
or
pop
add
dec
inc
ljmp
cmp
cmp
jmp
cmp
add
movsl
inc
adc
sbb
repnz
stos
add
xchg
mov
and
lret
jne
and
fcmovnu
pushf
mov
hlt
add
and
in
push
flds
rol
ficoms
js
insb
mov
push
and
fsub
inc
andb
es
pop
imul
adc
mov
in
das
add
aad
xor
pop
cs
and
add
test
loop
daa
xor
ret
mov
aad
into
mov
ret
in
inc
sub
add
and
dec
stos
ja
dec
cmp
lss
enter
test
aaa
mov
incl
mov
mov
jg
jns
cmp
or
or
or
fwait
pop
add
mov
inc
lods
insb
repz
push
push
mov
call
jne
repz
call
sbb
hlt
pop
jp
sbb
lret
les
dec
dec
adc
xor
repz
push
dec
shll
repz
loop
movsb
mov
outsl
fld
mov
adc
test
outsl
into
fdivrl
xchg
lret
cld
sub
pop
pop
push
lock
dec
in
loopne
cld
lds
jns
push
jg
outsb
sub
push
mov
inc
lea
inc
enter
cwtl
add
adc
pop
testb
and
and
mov
aas
mov
pushf
sub
dec
or
push
pop
mov
sub
mov
mov
in
mov
cmpsl
dec
mov
cmpsl
insb
cwtl
cltd
sti
addr16
add
test
dec
mov
imul
sub
xchg
and
xor
push
out
jecxz
stos
lock
or
mov
test
push
push
lret
into
mov
xchg
loopne
repz
lret
addr16
gs
fwait
popa
sti
xchg
and
push
inc
sbbb
and
inc
test
shlb
faddp
add
lds
cmc
jle
cs
sub
jnp
test
xchg
jae
jmp
push
outsb
repz
std
push
mov
xor
pusha
stos
jmp
fiaddl
insl
cmpsl
rolb
xchg
dec
add
pcmpgtb
xchg
daa
out
xchg
out
out
stos
mov
test
inc
mov
ret
push
adc
icebp
fs
inc
cli
mov
cmp
mov
adc
adc
aam
gs
pop
shrl
mov
xchg
lahf
lods
adc
aaa
ror
pop
test
mov
mov
xor
push
rcrl
adc
insb
aaa
push
inc
jecxz
test
sbb
and
in
mov
and
fld
popa
jb
out
jmp
mov
jb
sub
mov
add
lcall
mov
xchg
and
push
mov
xor
sub
cmc
popf
andl
imul
insb
jp
or
stc
nop
jb
test
pop
xlat
loopne
xlat
mov
fwait
cwtl
out
push
das
out
adc
push
xor
movsb
testl
mov
inc
fprem
jb
sbb
jl
xchg
jg
je
fwait
jo
xor
insl
cmpsb
sub
out
insl
dec
imul
inc
imul
out
sub
or
iret
jecxz
imul
pop
xchg
pop
xchg
fs
or
sub
mov
loop
jnp
stc
and
ret
xlat
imul
lahf
sahf
lock
inc
aaa
loope
xchg
fisttpl
popf
out
pop
jne
scas
add
movsl
mov
mov
sub
jl
test
loopne
out
iret
dec
cmp
in
or
or
in
push
dec
sub
bswap
or
and
shr
xor
mov
add
sub
sub
jle
cmp
int
cmp
cmpsl
jne
mov
dec
fs
xchg
popf
jmp
add
sub
bound
push
repnz
call
pop
repz
leave
aam
fidivl
lret
aam
repz
pop
mov
cmp
mov
dec
xchg
mov
pop
lock
into
push
add
mov
out
jmp
and
jne
cmp
incl
ss
cld
or
mov
mov
cmp
int
lcall
xchg
jmp
repz
sbb
outsl
cmp
push
mov
shrb
imul
test
dec
fiaddl
xchg
not
dec
aad
mov
xor
test
pop
dec
sbb
mov
std
cmp
mov
jle
jb
ret
adc
jne
daa
ss
adc
insb
add
dec
rorl
es
mov
mov
jp
rclb
call
dec
adc
call
mov
lahf
add
fisubrl
call
push
dec
in
jmp
test
sub
pop
xchg
xchg
xchg
int
movb
mov
or
pop
or
out
inc
fildll
in
adc
or
mov
rcll
repnz
xlat
in
inc
aam
lock
mov
jmp
jp
je
cmp
adc
pop
push
loope
xor
cld
jecxz
cmpsl
stos
mov
insb
dec
adc
stos
test
scas
sbb
sbb
mov
jno
int
adc
cmp
pusha
pop
push
mov
cmc
insb
pop
mov
jmp
rolb
stos
into
mov
add
fstps
mov
andl
into
ja,pn
imul
push
sub
add
mov
cmp
sbb
pushf
ret
jno
or
mov
in
movsl
lcall
pop
mov
push
shl
jle
xchg
and
lcall
lret
xchg
es
sbb
sbb
andl
jg
scas
xchg
das
in
mov
xchg
xlat
std
nop
sub
xlat
popf
lods
lods
dec
push
aam
mov
test
adcl
out
and
ja
out
push
decb
icebp
push
push
stos
stc
adc
call
int
test
mov
xor
adc
test
out
lods
aad
repnz
add
shrl
movsl
lock
movb
nop
push
pop
adc
push
mov
xchg
decb
outsl
mov
and
push
dec
mov
xchg
or
push
jbe
add
fldcw
mov
push
lret
ds
or
and
in
xor
pop
mov
push
test
push
mov
inc
xchg
push
sub
dec
push
xchg
roll
pop
adc
xchg
mov
ret
mov
icebp
cmpl
dec
add
and
in
je
sub
adc
stc
stc
rcrl
int3
movq
sub
add
fwait
icebp
mov
out
inc
add
cs
loopne
add
enter
inc
jae
cmp
cmpsb
mov
mov
sub
mov
xor
adc
lcall
inc
or
cmp
or
stos
sbbl
pop
test
add
xor
in
mov
mov
push
mov
cmp
dec
push
addb
cmc
movsb
ljmp
jge
lret
pop
push
cmpsb
fiaddl
push
outsb
ret
shrl
xchg
xor
adc
int
popa
sahf
mov
push
fistl
xor
pop
int
push
lcall
adc
push
push
dec
lcall
shll
mov
jo
mov
mov
outsb
call
pop
insl
push
jb
mov
movsb
jg
xchg
orb
pushf
sbb
cltd
fisubl
adc
lret
cli
lock
loop
jns
arpl
cmc
daa
out
pop
out
out
int3
js
jbe
cld
lods
test
inc
push
jecxz
sbb
cmp
leave
rcr
mov
sub
ja
push
add
mov
sti
mov
lret
movsb
mov
rcll
or
scas
and
xor
add
cmpsb
mov
loop
outsl
mov
cmpsl
add
lcall
ss
mov
ficomps
lods
cmp
inc
mov
lock
pop
rorb
out
sub
call
jb
cmp
aad
adc
adc
push
fsts
popf
mov
inc
adc
inc
pop
jle
test
inc
mov
jle
cvtps2pd
fwait
dec
pop
add
mov
or
pushf
daa
push
aad
or
xor
in
sbb
in
out
call
push
stc
jnp
cmpsb
jae
lds
loope
sbb
mov
pop
dec
mov
aam
js
and
sub
aam
inc
repnz
std
add
popf
gs
xor
push
xor
insb
mov
xchg
mov
ficoms
jg
inc
mov
sub
sub
xchg
dec
jo
sub
jae
dec
movsb
ljmp
ret
or
lock
mov
scas
add
mov
stc
inc
and
mov
pop
call
mov
pop
mov
outsl
adc
test
les
dec
push
and
inc
and
iret
insb
push
test
mov
inc
shll
subl
mov
cmp
pop
scas
cmp
mov
call
cmc
mov
test
xchg
inc
pusha
inc
js
stc
test
sub
add
ljmp
xor
into
mov
and
icebp
add
fbstp
repnz
and
xchg
push
push
pop
pushf
push
lock
test
xor
call
shr
mov
aam
fs
fiaddl
jp
adcb
outsb
push
rclb
mov
jae
lret
adc
mov
aad
push
je
xor
push
icebp
push
icebp
inc
xor
xchg
push
cmc
in
pop
mov
popa
sahf
mov
sub
mov
pop
cmc
push
clc
ret
mov
mov
inc
push
jae
rclb
inc
lock
dec
cmp
or
test
jmp
mov
outsl
xor
roll
scas
arpl
mov
adc
lods
in
sbb
rol
mov
jb
cmc
pusha
ljmp
sub
sbb
leave
and
mov
adc
xor
pop
add
lcall
lcall
sbb
dec
and
or
jo
jge
mov
cld
mov
xor
daa
push
push
in
arpl
xchg
xor
xchg
dec
jbe
loope
jecxz
xchg
sbb
cmp
xor
scas
icebp
mov
sub
sarl
push
outsb
dec
pop
jo
das
adc
lret
or
cwtl
or
lcall
gs
xor
lds
dec
pushf
pop
pop
pop
xlat
pop
es
add
jg
add
push
out
call
pop
fs
push
jbe
mov
cwtl
sbb
out
aas
mov
pop
xchg
nop
ja
repnz
imul
push
sahf
xchg
enter
rclb
outsb
mov
add
push
sub
cltd
nop
or
stc
rcll
or
push
dec
out
aam
push
pop
lock
xlat
out
dec
fnstcw
dec
out
ret
sbb
sbb
pop
and
push
sub
push
lahf
mov
cld
mov
js
ror
jmp
repz
rcl
cwtl
sbb
lds
hlt
in
fidivrs
and
cmpsb
pop
jp
out
inc
shlb
pop
sub
loopne
mov
cmp
mov
es
sarl
pop
adc
sbb
cli
xchg
addr16
shll
xor
adc
in
fadd
adc
lock
adc
mov
push
or
or
xchg
mov
pop
or
lcall
push
mov
mov
test
add
pop
sahf
scas
in
in
cmpsl
pusha
daa
lods
mov
imul
mov
mov
or
stos
insl
and
pop
out
dec
mov
pop
in
mov
xor
xchg
faddl
popf
clc
dec
icebp
cmpsl
or
or
sbb
orb
xchg
jl
fdivs
imul
push
nop
lcall
imul
mov
les
pop
pop
cmp
repnz
or
aaa
push
pop
push
pusha
jb
or
pop
movsl
push
and
subl
jno
xchg
push
push
iret
fstl
lahf
xchg
repnz
push
dec
insl
out
cmc
lds
int
jnp
push
aam
xlat
fstpt
mov
lret
add
enter
sub
dec
mull
call
sbb
mov
sahf
ds
sub
pop
in
sti
or
xchg
inc
test
xchg
aad
sbb
pop
jnp,pt
or
ljmp
std
icebp
test
pop
inc
fdivl
sbb
mov
test
es
sahf
test
sbb
movsl
sub
arpl
sub
jle
cmp
rcr
mov
adc
fiadds
pop
pop
adc
imul
xor
add
out
push
cld
sbb
cmp
xchg
mov
sub
mov
scas
shrb
sbb
mov
mov
imul
or
pop
or
mov
pop
cltd
shl
pop
push
in
sbb
jmp
or
leave
add
jnp
lds
sti
xor
fmuls
fdivs
inc
sub
lea
js
test
in
daa
inc
movsl
mov
jecxz
jl
test
sub
insb
xor
mov
pop
std
and
mov
xor
xor
sub
lds
pop
xor
push
push
mov
lods
sarl
adc
cltd
sbb
jecxz
rorl
and
les
inc
mov
and
jmp
loopne
xor
aas
sahf
cmp
call
xchg
test
int3
mov
xchg
add
sub
xchg
imul
test
outsl
add
aam
add
rcrl
fiadds
out
in
xor
nop
data16
xor
sahf
hlt
js
shrl
mov
das
mov
xor
and
push
or
inc
pusha
out
in
pop
cmp
stc
dec
xchg
insb
or
je
mov
add
cmp
ds
mov
or
and
jbe
jno,pt
add
sahf
jns
frstor
push
lods
lcall
shlb
scas
mov
call
xor
xor
or
aaa
int
clc
ds
mov
mov
and
es
sub
mov
push
mov
mov
in
andl
jg
mov
jmp
jg
insl
cwtl
nop
adc
cmpsb
push
mov
jne
lea
add
shrb
outsb
ja
mov
repz
push
notb
test
icebp
mov
or
mov
in
jge
cmpsl
or
out
inc
jg
lahf
fistl
jmp
in
jae
adc
cltd
cmp
insb
sub
subl
cs
or
or
jae
pop
push
and
add
sbb
out
sub
push
std
cmp
pop
sbb
sbb
test
leave
xchg
or
sbb
push
jecxz
add
pushf
add
xchg
and
adc
mov
xchg
outsl
fsqrt
outsb
cmpsb
push
cmp
inc
xchg
xor
cmpsl
loope
push
aas
dec
lcall
and
fidivrl
cmp
out
mov
into
aam
mov
jae
mov
popf
in
cltd
shl
cwtl
in
outsl
into
daa
xchg
push
push
push
jbe
pop
xchg
xchg
mov
call
loopne
or
adc
js
ret
cs
mov
mov
lret
mov
jmp
cmp
jl
nop
scas
cltd
shlb
or
and
xchg
jae
xor
orl
loope
out
in
mov
push
push
push
pop
ret
adcb
mov
and
mov
push
call
mov
fbstp
dec
mov
add
push
test
pop
adc
sbb
lret
inc
out
cmp
xor
jae
xor
aas
jo
jmp
jmp
mov
push
sahf
dec
pop
das
jo
loope
outsl
mov
ljmp
jge
and
xor
inc
enter
imul
or
aaa
lahf
clc
jae
je
scas
les
adc
jne
push
xchg
out
cld
pop
and
xor
inc
dec
mov
add
test
dec
daa
jae
push
fstpl
jecxz
jg
out
rolb
shr
push
cmp
in
xchg
sub
adc
jge
pop
inc
sub
jle
cmp
pcmpeqb
xor
loop
lds
mov
lret
push
subb
sbb
in
jbe
negb
jb
and
adc
add
jge
ficompl
add
in
lret
mov
or
adc
adc
adc
or
testl
sub
les
xor
and
addr16
icebp
ja
mov
jmp
mov
test
rep
mov
jb
into
or
jb
mov
mov
jnp
pop
mov
dec
movsb
clc
mov
je
inc
mov
and
repnz
sub
lods
stos
mov
mov
fs
mov
rorl
rcll
add
mulb
fnsave
addb
addb
cmp
fsubrs
cmp
aas
inc
xchg
or
imul
jle
popf
pop
mov
add
dec
inc
jne
shl
mov
xor
jb
cmc
shlb
insl
or
das
push
sub
mov
push
sub
cwtl
mov
sbb
xchg
in
sub
cmp
mov
sti
enter
and
cmp
shl
add
rep
xchg
push
loop
hlt
ffree
pop
mov
fdivrp
dec
aas
sbb
mov
and
dec
dec
scas
fists
mov
lret
out
nop
lds
addl
das
loop
mov
xchg
jae
imul
in
int3
daa
add
push
popa
cmp
push
cltd
je
xchg
dec
jmp
out
mov
test
cwtl
add
sbb
sub
cwtl
loope
aam
sub
out
or
popf
jns
fadds
repz
ss
cmp
mov
scas
and
ficomps
xchg
loopne
gs
rcrb
sub
jp
insl
cmp
xchg
clc
xchg
xchg
daa
add
in
push
sub
enter
fbld
sub
aas
test
mov
xor
dec
fisttpl
decb
sbb
xchg
add
cmc
sbb
gs
sub
ja
je
and
jle
jmp
insl
sub
in
stos
test
cltd
popa
xor
xchg
lret
je
das
sub
xchg
ja
sub
jns
cmp
cs
mov
stc
and
setp
je
je
icebp
sub
test
inc
faddp
push
outsb
sahf
mov
cmp
mov
fwait
xchg
neg
add
adc
sub
push
sbb
add
pop
in
ds
in
stos
imul
pop
or
push
xchg
fidivs
push
xchg
incb
xlat
sahf
sbb
popf
ja
xor
jg
push
cmp
nop
repz
popf
ss
dec
sub
lock
mov
ret
es
add
sub
cmpsl
or
or
inc
push
jp
cmp
push
sub
push
sub
mov
pusha
cli
xchg
xchg
mov
lea
xor
add
dec
imul
int
aas
arpl
dec
adc
movsl
insb
add
aaa
mov
jecxz
dec
mov
jno
jmp
lret
mov
push
add
cltd
or
push
fldl
test
dec
and
loop
popf
mov
bnd
rcrb
mov
inc
pop
js
mov
out
cmp
push
jbe
dec
xor
shlb
icebp
sbb
mov
and
push
testl
popl
cmp
xor
sbb
imul
cmp
fidivrs
inc
test
mov
xor
fs
mov
movsb
movsb
pop
jmp
je
mov
inc
or
out
in
inc
fnstcw
mov
repz
shlb
mov
lcall
fsubrs
aas
dec
mov
pop
jmp
and
fisttpll
into
fmuls
loopne
into
in
or
xchg
test
lcall
cmpsb
sbb
stos
mov
add
mov
aad
lds
imul
sbb
ja
cli
jge
inc
cmp
fdivs
loopne
clc
shl
lods
add
adc
jp
xchg
xchg
inc
push
nop
shl
lret
inc
fstpt
cld
enter
enter
das
mov
cmpsl
lcall
das
out
sub
xchg
mov
sbb
add
push
mov
outsb
fadd
xchg
push
cltd
sbb
out
test
cmp
push
insb
pop
ror
sbb
mov
ja
mov
pop
outsb
call
sti
sahf
or
pop
add
mov
pushf
sub
in
aaa
addb
adc
xor
in
bound
jns
and
shlb
test
inc
sub
sahf
ss
dec
mov
imul
cs
stc
popa
inc
pop
sahf
out
inc
cld
cmp
inc
add
pop
mov
cmp
pushf
fldt
mov
push
rcrb
mov
popf
lahf
ljmp
stos
loope
mov
lods
mov
and
loopne
adc
orl
jb
int
jnp
outsl
in
pop
mov
fcmovu
out
cmc
inc
fdivr
pop
mov
imul
add
push
pop
aam
int3
int
shrb
push
pushf
jge
mov
inc
out
ret
in
and
sbb
imul
ja
loope
xchg
popf
in
or
add
lock
and
lods
cs
pop
dec
dec
sub
xchg
inc
test
or
jb
cmp
pop
cltd
push
jbe
pop
xchg
faddl
xchg
mov
mov
pop
js
and
sbb
hlt
pop
pusha
push
out
enter
std
jl
mov
std
mov
mov
add
pop
lea
and
dec
push
push
add
inc
div
dec
xchg
inc
loopne
xchg
ds
js
lea
pop
hlt
aas
mov
mov
and
int3
and
jle
vmovdqu
out
pop
decb
mov
or
lods
mov
and
jp
call
shl
cmpsb
fwait
ljmp
faddl
pop
xchg
loopne
sti
jle
rcll
int3
sub
test
notl
js
dec
or
cmpsb
push
jl
mov
jp
shrl
jmp
pop
cmpl
incb
orb
push
imul
gs
pushf
mov
mov
push
and
jns
repnz
mov
add
xor
xchg
fimuls
loopne
jns
sbbl
aas
cmpsl
adc
sub
fisttpll
lods
mov
aam
rclb
stos
shrl
out
loopne
push
popa
lds
mov
mov
mov
sahf
dec
dec
mov
mov
adc
xlat
stos
outsl
stos
aad
dec
mov
xchg
ljmp
xor
mov
adc
and
xor
cmp
mov
jns
shrl
arpl
pusha
fwait
es
push
pop
add
dec
fiaddl
push
adc
push
push
xor
mov
push
sbb
mov
callw
xchg
mov
and
sti
jg
imul
mov
testb
insl
mov
adc
fcmovbe
imul
jg
ds
gs
dec
pushf
daa
jo
test
aas
adc
and
test
or
or
jp
and
or
das
fcomi
xor
push
sbb
mov
inc
int3
aam
push
mov
sti
lods
lahf
and
mov
sysret
fbld
mov
fcoms
jmp
xchg
clc
negl
cmp
push
repnz
pop
pop
scas
rorb
sbb
sub
gs
movsl
shr
pop
test
xor
mov
inc
add
insb
shl
inc
mov
mov
jle
neg
adc
fs
shlb
push
sbb
cmp
das
mov
pusha
push
shrl
test
stos
lods
in
mov
dec
shll
pop
insb
add
push
loop
dec
mov
push
stos
cmc
hlt
js
mov
pop
neg
inc
mov
cltd
push
cmp
pushf
pop
sub
dec
push
and
pop
test
and
dec
mov
push
xchg
pop
insb
adc
cmc
mov
jbe
pop
pop
std
aaa
lods
sarb
mov
adc
std
mov
sbb
or
jbe
outsb
fwait
cmp
pushf
cmp
cltd
lret
xchg
stos
add
ret
inc
loopne
mov
xchg
or
jmp
lods
icebp
inc
sbb
cli
xchg
leave
sbb
call
fldcw
mulb
hlt
cmc
dec
ret
imul
adc
int3
in
sbb
cmp
xor
sbb
mov
daa
sbb
mov
xor
pop
aas
ret
inc
inc
aaa
cmpsl
push
cli
lods
xchg
dec
shlb
push
lea
outsl
repz
fnstcw
mov
stc
in
sbbb
xchg
sbb
cli
loop
dec
fisubs
arpl
cmpl
daa
push
adc
jmp
ja
cmp
jb
xchg
outsb
inc
fisubl
add
jns
out
or
mov
pushf
cli
xchg
jns
dec
shlb
outsb
lahf
incl
mov
std
fisttps
pop
adc
push
mov
pusha
les
sbb
and
aaa
fcomps
gs
push
je
jp
lret
call
and
fildl
pop
jbe
inc
lcall
xorl
jb
jae
lret
pop
or
cmp
loope
xor
sub
adcb
dec
push
pusha
mov
mov
xchg
outsb
movsb
sti
out
ds
fcmovnb
xchg
dec
into
loope
fs
cmp
mov
xchg
and
dec
and
lahf
inc
push
dec
and
xchg
nop
dec
out
adc
inc
inc
adc
mov
jle
daa
shl
dec
inc
xchg
mov
icebp
int
pop
mov
sbb
call
aad
mov
xchg
mov
inc
out
xchg
mov
stos
mov
push
sbb
pop
lods
mov
lds
push
das
push
and
icebp
jns
int3
fidivl
sti
int
shlb
andl
xchg
scas
and
mov
mov
popf
bound
sbb
sti
cltd
inc
mov
mov
adc
pushf
cmpsl
or
imulb
int
sbb
push
cmp
cltd
fs
inc
adc
cmpsb
jle
outsb
lock
xor
pop
into
and
jbe
inc
std
in
jno
adc
and
lds
sub
xor
mov
mov
mov
mov
fsubrs
sub
sub
ret
test
xor
mov
mov
sbb
aas
sarl
mov
mov
xor
inc
fimuls
sbb
das
cmp
rcll
xchg
outsl
lods
sbb
ftst
xchg
dec
movl
sbb
movsl
mov
pop
and
lcall
pushw
js
and
aad
or
push
stos
popa
into
lds
scas
es
rcrb
sub
out
and
jb
les
push
nop
outsl
aaa
cmc
jne
mov
fucomip
push
add
cmp
lret
stos
jne
sub
push
jo
mov
fmul
icebp
adc
ret
data16
lods
jg
sub
sbbl
gs
repnz
inc
mov
es
fldt
les
push
addl
mov
adc
sub
stc
add
mov
push
shlb
in
pop
nop
scas
cmp
jecxz
push
push
std
ret
sbb
jns
jae
iret
bnd
mov
movsl
outsl
mov
ficoml
jbe
and
insb
mov
jge
ret
mov
pop
sahf
shlb
imul
out
lods
mov
aam
js
stos
nop
sbb
sbb
pop
adc
test
dec
orb
xchg
mov
jecxz
sti
pushf
jnp
in
imull
cs
dec
mov
adc
push
std
sti
inc
adc
xor
xchg
dec
and
ret
ds
add
jne
push
mov
shl
movl
loopne
fcomps
test
outsl
aaa
inc
cmc
adc
sub
out
mov
jae
in
addb
xchg
test
sbb
adc
stos
data16
insl
xor
inc
fcoml
fldcw
sbb
inc
xchg
jmp
mov
add
movsl
adc
pop
mov
movsl
adc
lods
cmpsl
testl
pop
fsubr
les
std
mov
fdivrp
pop
in
movsl
and
xchg
jp
out
dec
mov
mov
adc
sti
fildl
and
jnp
push
gs
les
jnp
roll
push
out
inc
mov
test
mov
inc
adc
inc
arpl
lcall
cmp
insb
jbe
xor
xor
adc
mov
add
icebp
aad
mov
ss
xor
push
das
sub
cltd
aad
or
data16
addr16
inc
xchg
test
rorb
in
into
sbb
jne
pop
xchg
cmp
mov
les
lcall
leave
in
push
es
in
fcoms
aas
dec
jns
lds
adc
dec
inc
cs
xchg
mov
out
add
xchg
je
xor
lahf
dec
pop
push
push
adc
insl
mov
push
mov
jp
mov
lods
jmp
fimuls
jae
int3
sbb
js
adc
mov
jmp
xchg
or
pop
cltd
inc
jae
sbb
fsubs
sub
lods
insb
fisttps
test
outsl
ret
fistl
jp
dec
sub
fs
cmp
cmp
jmp
idivl
add
xor
sbb
inc
icebp
imul
mov
sub
pop
mov
jmp
loope
inc
jno
lods
sbb
mov
sub
xlat
inc
pop
data16
in
mov
aas
out
outsb
test
rcl
jge
sub
sub
frstor
jnp
fwait
hlt
pop
aad
push
jbe
jecxz
adc
dec
mov
pop
dec
mov
mov
outsl
jb
int
and
inc
outsl
cld
pusha
sti
lods
mov
dec
cmpsl
repz
mov
mov
jns
insb
jbe
mov
dec
je
out
pop
pop
out
pop
push
mov
or
adc
sub
sub
pop
adc
jl
mov
lods
xchg
icebp
xor
mov
xchg
jl
cwtl
leave
out
xor
scas
and
bound
daa
je
push
fwait
mov
outsl
mov
or
pop
test
dec
jmp
fs
or
jmp
lcall
mov
std
or
cli
jnp
fidivrs
rol
jmp
in
in
and
ds
fwait
adc
out
mov
jp
dec
sbb
xchg
mov
sub
ja
lret
push
mov
push
xchg
inc
pop
xlat
fs
sti
js
and
ss
sbb
hlt
jns
fildl
cs
cmp
mov
pop
push
jmp
lds
jl
or
mov
arpl
jns
jns
out
test
jmp
loope
adc
push
shrb
ja
notl
or
insl
clc
push
mov
lds
movsl
test
mov
jecxz
popf
adc
add
xor
dec
movsl
stc
inc
or
and
mov
add
inc
fdivrl
xchg
out
fidivrs
jb
xor
adc
or
call
fmuls
xor
sbbl
jno
js
sahf
ja
sbb
sbb
and
jo
out
sti
hlt
push
sub
in
adc
rcrl
mov
cli
aaa
shrl
or
inc
mov
adc
push
jo
je
jecxz
dec
sbb
push
pop
inc
dec
dec
scas
adc
xor
jp
cmp
mov
sub
jmp
pop
cmp
cmp
xor
rcrl
fadds
test
mov
dec
in
inc
push
lea
cmpsl
pop
rolb
loop
inc
xchg
mov
daa
push
icebp
out
xchg
mov
sahf
les
ja
lods
or
pop
stc
mov
out
aas
inc
mov
out
push
ljmp
mov
sbb
mov
in
lahf
scas
mov
cmpsl
test
aam
sub
xchg
mov
mov
nop
repz
xchg
push
sbb
fdivl
outsb
and
sub
pop
cmp
mov
push
enter
jge
idivb
fildl
sub
pop
stos
xor
mov
mov
rcll
mov
jecxz
std
or
mov
aad
xchg
test
mov
adc
dec
out
out
outsb
push
pop
push
jnp
mov
sarb
mov
pushf
out
xchg
xor
enter
xchg
mov
dec
movsb
push
pushf
scas
mov
scas
stos
fmuls
addr16
aas
jo
jecxz
mov
in
fiaddl
mov
xchg
aaa
cwtl
fdivrs
cmp
mov
out
push
fdivl
nop
adc
jnp
les
out
mov
inc
cwtl
cld
stos
xchg
xchg
mov
cmpsl
xor
mov
mov
push
bndstx
fsubp
push
js
testb
out
das
mov
jb
iret
outsl
gs
aaa
movsl
in
pusha
stos
call
add
pushf
mov
add
jmp
sbb
ficompl
lds
mov
lods
cmp
int3
push
push
test
ret
and
xchg
inc
push
popa
pop
outsl
mov
mov
in
inc
jmp
sbb
push
mov
and
sbb
ret
xor
inc
xlat
and
je
ss
in
lds
inc
imul
lret
mov
movsb
push
imul
hlt
or
sti
pop
imul
xchg
cmc
jbe
mov
jp
lods
gs
cmc
dec
out
pop
jb
cltd
fisttpll
push
ss
add
or
les
sub
xchg
nop
inc
jns
mov
enter
jnp,pn
mov
sbb
cltd
adc
adc
insb
inc
jb
pop
dec
and
xchg
ja
add
adc
xchg
es
xor
shll
push
pop
fists
sti
dec
mov
push
mov
push
nop
rorl
fiaddl
arpl
pop
mov
cmp
out
xchg
movsl
jmp
xor
sub
and
pushf
or
dec
xor
cmp
sti
cmpsb
mov
out
xor
dec
and
xchg
or
jecxz
mov
cmp
arpl
aam
and
popf
cmp
insb
mov
jae
push
das
dec
scas
xor
push
idivl
sbb
fimuls
adc
sbb
das
scas
xchg
lods
push
sbb
pop
roll
daa
sahf
sub
test
sub
mov
cwtl
inc
xchg
jb
rcrl
dec
mov
movsl
lret
jo
das
inc
inc
or
push
test
jmp
inc
fwait
and
cmpsl
icebp
inc
mov
int
lods
clc
hlt
jmp
shlb
push
pop
inc
ds
mov
rorb
repz
add
data16
aam
out
fsts
adc
in
ret
fmuls
pop
mov
das
and
mov
movsb
cltd
or
mov
push
push
popf
rorl
ffreep
imul
sbb
sarb
outsl
mov
jae
pop
test
mov
fimuls
ljmp
xor
mov
pusha
jg
push
testl
and
mov
fdivs
rcll
cmp
sub
sbb
sub
xchg
fbstp
cmc
sub
out
jnp
mov
mov
scas
shrl
sbb
sbb
and
dec
mov
push
aam
xor
push
pop
jle
pop
pusha
test
push
test
jp
dec
and
aas
add
inc
aam
cmp
arpl
lahf
mov
out
loope
mov
jmp
and
dec
hlt
sbb
mov
sarb
adc
rcll
pop
xor
andb
and
js
scas
jnp
lds
stos
mov
gs
enter
ljmp
fldenv
out
cs
in
sub
imul
data16
xchg
mov
xchg
inc
sbb
inc
out
fdivrp
push
ret
sbb
mov
andl
popa
jno
loop
mov
jnp
mov
add
les
roll
push
lods
insb
pusha
inc
int
sub
xlat
scas
out
mov
mov
ss
aad
ret
int
jp
sbb
xchg
adc
mov
and
repz
loopne
pop
xchg
push
addl
imul
dec
or
xor
and
insb
sbb
cmp
add
add
pop
mov
sarb
inc
ds
fstl
repz
push
xchg
ret
pshufw
sarl
inc
cld
and
and
pusha
jne
dec
xchg
lods
fnstcw
or
mov
xor
sub
fimuls
insl
adc
adc
adc
jnp
mov
fistl
ret
mov
mov
in
lea
sarb
push
or
cmp
lds
inc
loop
mov
popa
int3
mov
inc
mov
std
sub
inc
loop
outsl
shrb
xchg
mov
insb
imul
jl
mov
dec
add
dec
dec
jno
daa
out
add
mov
sbb
outsl
cwtl
adc
and
mov
div
cmpsb
loop
scas
hlt
fadd
adc
xchg
cmpl
loope
shrb
mov
daa
leave
jb
cmp
cmp
cmp
mov
hlt
cmp
insl
and
jns
sub
push
shlb
inc
xchg
imul
mov
sub
mov
xchg
lods
lcall
shl
stos
aas
ficoml
xlat
adc
daa
subb
enter
movsb
scas
je
pushl
int
das
je
negl
cmp
lods
mul
inc
adc
mov
fs
mov
or
aas
sub
sbb
xchg
in
icebp
sbb
push
adc
xchg
jne
hlt
jecxz
xchg
add
mov
fwait
dec
push
jle
clc
int3
lea
adc
lcall
or
jecxz
jne
scas
adc
add
leave
adc
or
js
les
cmp
push
daa
jne
mov
int3
loop
xor
inc
mov
add
pop
inc
adc
dec
cmpsb
or
movsl
xorl
popa
and
jnp
pop
testb
das
xchg
ljmp
js
dec
cvtpi2ps
mov
mov
ss
mov
gs
nop
icebp
xor
test
xchg
sub
mov
push
lock
xor
repz
sub
bound
xor
jo
cmp
fsubrl
daa
mull
sarl
jbe
test
mov
xchg
cmp
lret
jmp
rorl
mov
xchg
sub
in
push
lret
loopne
idiv
jae
push
je
out
gs
mov
inc
mov
idiv
push
xchg
inc
dec
mov
xchg
xor
cwtl
test
shl
add
loop
pushf
std
fcoms
dec
fsub
out
cmpsl
addr16
mov
cmp
loopne
jmp
sbb
popf
push
in
fsubs
dec
jecxz
and
jb
xchg
xchg
int3
addb
mov
pop
subb
dec
es
and
jge
inc
xchg
ds
push
test
cwtl
sbb
xor
mov
sbb
and
adc
xor
push
aad
movsl
mov
cmpsb
cmpl
js
mov
mov
repnz
jmp
dec
xorb
das
jmp
imul
adc
jle
dec
xor
cmp
inc
les
fistps
adc
sahf
xlat
out
jge
or
dec
sbb
push
mov
in
dec
fsubrs
jg
ljmp
mov
iret
pop
fwait
das
xchg
sub
xchg
sti
repnz
mov
dec
bound
jle
subb
adc
cmp
xchg
repnz
nop
lahf
push
inc
ljmp
cs
inc
add
dec
jg
hlt
sbb
ja
push
mov
mov
xor
and
daa
out
addr16
xor
int
outsb
out
out
stos
sbb
loope
cmc
add
lahf
data16
popf
jmp
repnz
std
cwtl
pop
dec
dec
outsl
mov
sbb
les
gs
mov
push
jne
xor
aaa
pop
sub
ds
pop
lret
test
dec
xchg
adc
in
mov
jmp
adc
lcall
jl
fcoms
inc
mov
pushf
add
inc
cmc
mov
int3
add
adcl
lods
or
negl
daa
hlt
dec
or
pop
xchg
jbe
jg
daa
pop
push
scas
daa
jecxz,pt
dec
cmc
loop
xchg
inc
or
xor
mov
jbe
jg
mov
jge
addr16
out
sarb
xchg
pop
mov
pop
push
push
addr16
das
negb
mov
rorb
jbe
pusha
insl
stos
mov
mov
cmp
adc
outsb
sub
mov
add
shl
pop
nop
push
dec
lds
leave
iret
adc
popa
sbb
mov
lods
mov
push
sbb
shlb
in
lock
adc
test
push
mov
divb
aam
jno
insb
cmp
mov
pop
add
fcoml
fwait
lahf
mov
or
test
scas
imul
idivb
jmp
adc
dec
sbb
and
psubq
xchg
xchg
insb
add
or
pushl
xchg
pop
mov
cltd
neg
and
mov
rcrl
aaa
lret
and
nop
mov
xor
mov
jg
test
test
fidivs
jo
add
xor
mov
push
addl
cltd
add
je
and
jnp
xchg
inc
mov
fstp
xchg
and
sarl
stc
cmp
and
repnz
lahf
icebp
js
aad
mov
add
dec
in
das
xchg
addl
and
sbb
std
jns
and
sub
mov
test
adc
mov
jg
pushf
add
insl
out
xchg
into
scas
or
outsb
xchg
xor
dec
lock
int
jecxz
add
mov
mov
rorb
in
sbb
jns
loop
xor
scas
push
sbb
insb
fimull
pop
mov
cmpsl
push
pop
jns
das
jae
cwtl
negl
add
lods
mov
mov
std
lret
int3
ss
sbb
popf
or
xchg
lcall
loopne
rcrb
idivl
jg
popa
int3
inc
movsl
in
scas
sbb
ljmp
aam
lmsw
outsl
dec
adc
aad
mov
out
inc
or
divb
mov
pop
dec
lret
cwtl
loope
pop
fwait
xor
movsl
mov
movsl
dec
mov
es
negb
addb
popf
cmp
in
mov
jl
and
or
cmpsb
in
inc
mov
out
mov
push
ret
push
sahf
add
xor
imul
and
xor
xor
std
pop
pavgw
sbb
out
dec
adc
jb
inc
adc
nop
adc
loopne
loope
pop
fnstenv
jg
pop
test
ja
das
and
sbb
push
lods
push
and
xchg
pop
bound
fwait
adcb
sbb
sbbl
push
inc
popf
jge
lahf
or
xor
mov
dec
test
rclb
fbstp
adcl
push
js
xchg
mov
jnp
xchg
aad
js
mov
in
push
lds
popf
pushf
pop
jb
movsb
sbb
sub
dec
ljmp
inc
dec
mov
pop
iret
scas
push
dec
add
cmp
lret
out
jne
push
lods
cli
inc
sahf
lods
xorl
or
nop
jbe
arpl
xor
idiv
fs
or
rorl
dec
or
inc
dec
dec
test
in
roll
negb
movsl
imul
nop
inc
pop
les
in
fistpll
int
ja
cmp
aaa
mov
cli
cld
cld
jg
xchg
cmp
adc
pop
stc
testb
cmp
xchg
lds
pop
xor
ds
addr16
mov
rcr
sub
lcall
pop
out
test
dec
xor
and
int3
mov
dec
int
loop
sbb
lds
mov
popf
popa
daa
std
aad
lds
aas
mov
sub
xchg
jno
push
mov
hlt
testl
addr16
mov
outsl
into
mov
imul
pop
sub
sub
xchg
lret
xchg
jg
add
out
sbb
pusha
push
dec
stc
lock
inc
fidivrl
add
push
lds
cmpsl
das
orb
mov
pop
jg
jae
shrb
or
call
sub
add
in
push
sbb
mov
xor
in
or
aas
and
sbbb
popf
xlat
xchg
mov
cmpsl
xlat
mov
sub
jge
pop
cmp
mov
xchg
inc
jo
adc
jle
stos
cwtl
sub
push
push
add
push
xchg
dec
mov
push
and
roll
pop
out
cmp
mov
pop
jns
dec
jp
cltd
adc
std
mov
cs
push
imul
lret
jo
repz
push
sub
cmpsb
sbb
lret
mov
xor
sub
xchg
data16
dec
cmp
xchg
ss
mov
fcmovnu
jl
push
sbb
je
mov
add
aam
add
clc
inc
adc
push
adc
stc
add
mov
or
and
push
fs
push
mov
gs
sti
jmp
or
push
cmp
sbb
pop
xchg
in
dec
mov
test
adc
cmp
add
cmp
fcmovnb
lret
mov
insl
xor
repz
or
int
sub
mov
in
cltd
push
cmp
in
call
mov
xchg
mov
cwtl
shll
sbb
orb
mov
nop
sub
repz
filds
bound
xchg
pop
mov
test
mov
sbb
mov
movsb
out
call
push
fs
sbb
cmpsb
fstps
push
dec
out
mov
popa
jg
mov
test
lahf
jae
dec
xorb
mov
mov
in
lods
lods
popa
push
inc
std
icebp
add
mov
movsl
lahf
mov
sub
loopne
sub
mov
aad
jae
xchg
adc
and
jnp
lods
stos
adc
add
push
push
adc
lock
mov
mov
mov
std
sti
adc
pop
cmp
sbb
out
outsb
inc
sub
mov
icebp
shll
popa
lcall
cmp
leavew
push
and
sbb
xor
cmpl
call
mov
insb
fiadds
cmp
bound
lcall
push
scas
ds
imul
jl
imul
into
cmp
nop
mov
outsl
cmp
pop
mov
push
outsl
icebp
cmc
mov
xor
inc
mov
push
add
inc
shr
cmp
call
dec
out
xchg
decl
pop
sub
lahf
jg
test
add
cmp
mov
and
out
into
enter
xlat
mov
leave
push
and
jge
subb
cmp
and
pushf
add
mov
daa
jne
imul
cmp
mov
mov
clc
push
cmp
or
inc
mov
in
mov
sti
xor
jg
mov
mov
inc
lret
inc
loop
pop
mov
lcall
or
arpl
lea
cmp
xchg
and
cltd
dec
lret
adc
push
adc
jp
cwtl
inc
lods
rcl
iret
test
fsubrl
lahf
dec
ljmp
aam
sti
add
sub
hlt
loope
arpl
ja
push
imulb
adc
sarl
xor
mov
lcall
jno
jae
push
adcb
fidivrl
hlt
popa
adc
daa
aam
mov
enter
inc
add
mov
adc
xlat
xor
mov
pop
jg
and
xchg
out
out
loopne
jae
mov
dec
jecxz
ret
pop
fs
xor
fldl
xor
pop
mov
and
mov
js
mov
xorl
jne
sbb
repz
mov
mov
xchg
jmp
adcb
mov
enter
mov
add
push
fildll
lcall
fwait
push
sub
in
stos
mov
xchg
cwtl
sbb
out
xor
aaa
in
out
add
sub
lods
xchg
movsb
dec
add
dec
jge
sub
psubsb
dec
jne
sbb
out
movsb
lret
mov
insl
outsl
inc
je
mov
dec
lahf
stc
pop
sub
adc
lods
scas
xchg
movsb
sbb
mov
mov
sub
sub
add
mov
stc
cmp
outsb
jecxz
mov
lahf
xchg
fadds
jb
mov
mov
pop
sarl
mov
mov
push
rorl
cmpsb
jge
jbe
mov
xchg
inc
jmp
faddp
loopne
iret
dec
push
mov
xorl
jle
cltd
mov
or
lret
and
mov
push
inc
sbb
test
mov
sub
rolb
jle
stos
out
sti
vpmullw
cmp
out
scas
mov
fcomps
es
repnz
iret
adc
cmp
mov
loopne
je
jns
cmp
cld
fisubl
lret
adc
leave
xor
arpl
cmp
idivl
sub
in
scas
loopne
repnz
pop
test
jmp
orl
sbb
pop
lods
inc
int
fbld
adcb
mov
jge
repz
das
mov
lret
xlat
push
xor
pop
lock
jecxz
stos
mov
call
mov
cmp
fstpl
cmp
adc
mov
or
movsb
sbb
jecxz
addr16
jge
test
sahf
jnp
leave
cmp
lret
jns
movsl
lcall
xlat
fidivl
dec
popf
and
addb
fs
jns
mov
cmpsb
test
pop
dec
mov
push
pop
inc
es
and
xor
mov
popa
jae
fidivl
in
xor
ficoml
inc
pop
adcl
inc
mov
movsb
jmp
lret
orb
xorl
or
jnp
loopne
ljmp
adc
pop
je
mov
pop
insl
idivl
clc
cltd
cmp
mov
mov
cmc
pop
int3
sbb
roll
js
mov
cmp
incl
fmulp
pop
push
aas
arpl
fimuls
push
pop
or
out
out
shrl
lea
mov
or
jp
dec
xchg
rcll
setge
dec
jo
icebp
into
inc
addr16
insl
jmp
xor
push
jno
inc
gs
stos
ret
pop
enter
push
xor
fisubs
call
outsb
js
or
enter
dec
adc
pusha
cmp
dec
js
ret
xchg
les
pop
pop
xchg
arpl
xchg
sarb
ljmp
shlb
out
xchg
cmpsl
es
push
jmp
cmc
pop
jle
pop
push
movsb
jnp
mov
push
pop
inc
gs
inc
mov
enter
adc
mov
jmp
fnstcw
cli
in
inc
fistps
ljmp
or
out
push
ss
xorl
mov
add
jbe
push
mul
mov
shrl
jecxz
popa
pop
mov
in
xor
or
fidivrl
in
ljmp
mov
fstpt
or
jecxz
out
add
or
inc
int
into
and
fsubr
pop
es
pusha
inc
mov
imul
xor
icebp
stc
jo
and
jecxz
push
fwait
push
xor
xchg
push
pushf
dec
aas
in
push
pop
push
mov
imul
cmc
jne
xor
inc
or
ficoml
icebp
in
testl
scas
std
lea
dec
ljmp
pop
cmc
inc
stos
xor
test
pop
cmp
cli
lahf
pop
inc
mov
jno
in
cltd
push
cwtl
movsl
inc
ja
xchg
mov
divb
outsl
andb
inc
fdivl
ljmp
lock
lahf
inc
data16
cmpsb
adc
jns
inc
jo
mov
adc
xor
pop
mov
mov
add
idivl
mov
mov
xchg
adcl
imull
ljmp
pushf
xchg
cmp
jbe
jmp
sbb
pop
push
pop
fnstenv
pusha
mov
popf
jo
in
out
mov
sti
xor
incl
out
push
mov
mov
jo
pop
inc
jp
pop
push
out
test
inc
and
mov
call
sub
mov
lahf
aaa
imul
cwtl
cmp
mov
cmp
push
sub
shrl
adcl
cmpsl
cli
inc
mov
stc
loope
scas
shlb
arpl
aas
ss
dec
sahf
add
imul
aaa
push
sub
dec
ss
xor
inc
and
sbb
lret
jmp
push
push
loop
rolb
loope
sub
cmp
mov
sbb
jno
pop
or
push
sti
sbb
aas
dec
jg
mov
cmpsl
dec
loop
xor
aad
enter
bound
mov
dec
das
aam
xchg
aam
in
call
imul
or
or
xor
bound
outsb
jo
cmp
cmpsb
mov
xchg
fwait
jb
in
push
or
aad
stos
sbb
loopne
jns
fistpll
and
dec
dec
xor
jae
shlb
dec
sub
push
xchg
lcall
pop
stos
sahf
push
xchg
adc
loope
test
in
scas
cs
push
aam
adc
push
add
adc
adc
lods
dec
imul
or
loope
push
push
addr16
mov
in
pop
mov
push
icebp
insb
ja
cmp
or
mov
je
mov
daa
push
stos
sbb
sub
mov
mov
enter
mov
jle
rorl
in
mov
repz
stos
xor
push
jp
jmp
adc
and
lods
pop
das
xchg
dec
cld
or
lea
shrb
mov
leave
inc
and
clc
xchg
lea
xor
pusha
jns
clc
push
clc
test
sbb
inc
mov
sub
push
mov
fists
insb
mov
out
adc
fdivrs
jp
jmp
xchg
cli
push
sahf
dec
arpl
or
adc
or
xchg
push
push
xchg
lods
inc
enter
and
dec
sub
rol
jae
or
mov
lods
pushl
mov
jmp
pop
push
mov
repz
jo
sbb
fsubrl
scas
mov
scas
push
fidivl
xor
add
ret
xor
sub
mov
outsb
scas
stos
mov
movsl
shl
fwait
cs
xor
sub
inc
pop
call
pop
jmp
lcall
outsl
adc
mov
xor
add
stos
lret
bound
jo
jb
test
pop
pop
sbb
mov
sbb
iret
adc
fidivs
cld
lea
push
mov
ss
lret
xlat
jl
cwtl
push
int3
idiv
mov
testl
pop
cmp
mov
inc
or
int
ds
ljmp
jecxz
mov
jmp
into
movsl
jae
push
cmp
and
lea
xchg
push
inc
loop
xor
adc
loopne
xchg
test
mov
cld
icebp
inc
cltd
mov
mov
out
pop
sub
pop
push
addr16
movsb
sub
xchg
jl
or
outsl
push
mov
in
pop
fsts
add
cli
fstpt
mulb
add
push
call
sub
or
adc
inc
inc
fwait
outsb
leave
xchg
icebp
pop
add
clc
and
push
negb
aad
jno
shll
lcall
jbe
mov
in
lock
icebp
insl
roll
fldl
mov
xor
xchg
in
insb
bound
ljmp
pop
ret
pop
dec
cmp
iret
out
pop
bound
subl
push
testb
lods
xchg
xchg
push
cmp
fdiv
xchg
jmp
lahf
cmp
pop
inc
adc
imul
mov
xor
mov
xchg
mov
xor
ja
aaa
mov
popf
data16
jb
pop
movsl
pop
insl
or
ret
jnp
test
in
leave
sub
aad
cmp
ss
arpl
adc
dec
dec
push
int
xchg
das
or
lahf
out
xor
js
pop
add
mov
cltd
insb
adc
add
je
and
int3
push
fdivs
pop
sahf
std
mov
in
rcrb
inc
push
mov
mulb
jns
out
int
mov
push
pop
mov
add
gs
push
adc
outsl
push
jmp
push
inc
sbb
repnz
add
std
test
movl
outsb
stos
push
or
push
jg
andl
xchg
pop
cli
mov
addr16
in
inc
aaa
les
dec
fldt
inc
cmp
xchg
pop
lret
inc
lret
xlat
movsl
ret
xor
bound
out
scas
xchg
dec
jns
adc
sahf
jp
add
pop
mov
mov
cmp
xchg
adc
sub
push
movsl
adc
or
push
out
aad
outsl
test
ss
cmovle
push
cltd
daa
ss
push
add
adc
mov
add
enter
bound
jnp
add
push
mov
mov
pmaddwd
mov
push
flds
adcb
jnp
lcall
clc
je
sub
push
les
out
lods
shr
sbb
cli
xor
je
repz
imul
xchg
pop
rclb
pop
fcoml
xchg
xchg
into
dec
pushf
je
lods
cmp
jmp
cmp
fsts
inc
or
or
cwtl
enter
xchg
cltd
cmc
mov
iret
pop
aam
inc
iret
fsub
sbb
mulb
aas
cld
sub
jp
jl
pop
jbe
add
mov
or
cmp
in
das
enter
dec
ret
dec
movsl
scas
inc
pusha
jle
scas
cmp
xchg
in
jg
xchg
lahf
mov
push
inc
push
inc
bound
push
les
repnz
inc
rolb
rcrb
les
lea
pop
push
cmpsb
or
sahf
loopne
in
fimuls
insl
xchg
mov
insl
pop
mov
push
cmp
xchg
mov
xorb
pop
cltd
pop
cmp
in
push
pop
aam
addb
xchg
mov
mov
lock
mov
lock
fdivp
clc
cmp
js
push
xor
xchg
lock
popf
fisubrl
mov
sti
xor
mov
sub
js
cmp
popf
gs
dec
jno
mov
jmp
arpl
js
movsl
std
and
bound
sub
inc
mov
push
sub
push
ror
out
push
dec
sub
jo
sub
mov
pusha
adc
jns
inc
or
pop
push
push
push
jmp
mov
movntq
add
pusha
pop
cli
ja
idiv
and
fcomps
cld
imul
push
in
out
adc
lcall
ret
jp
xlat
daa
sbb
out
shrl
lds
test
push
jmp
dec
pop
out
outsb
jnp
cmpsb
pushf
add
pop
mov
mov
insl
dec
mov
mov
or
mov
adc
insl
out
jecxz
cld
adc
mov
mov
shl
cmp
pop
orb
dec
mov
mov
pop
jb
sub
rcll
push
and
and
mov
push
fmull
jle
lods
in
out
xchg
xchg
aam
mov
mov
sub
pop
fsubrl
push
aaa
mov
or
mov
scas
add
das
dec
xor
lods
in
cmc
imul
add
inc
ljmp
fiaddl
repz
sbb
or
scas
popf
mov
scas
cmc
xchg
cmp
imul
ljmp
les
das
dec
insl
jno
aad
call
adc
xchg
sti
mov
scas
dec
movsb
fwait
scas
mov
test
mov
mov
add
nop
loopne
or
xchg
aam
clc
cmpsl
inc
inc
xchg
jae
in
dec
push
lock
cs
xor
repz
shl
jb
bound
imul
jge
mov
enter
dec
xchg
jb
sbb
outsl
pop
adc
lahf
sbb
or
cmp
movl
pusha
rcr
sahf
push
xchg
jne
mov
xor
sub
jo
stc
sbb
jb
in
ret
pop
add
test
ljmp
fbstp
mov
ret
xchg
scas
or
inc
aam
lret
jne
loope
mov
ds
dec
loope
and
xchg
stos
fscale
pop
test
out
sbb
stos
fdiv
aad
pop
pop
pop
cmp
into
int
add
inc
jp
outsb
das
loope
cmp
dec
in
sbb
jns
leave
inc
inc
cmpl
ljmp
jl
adc
xor
cwtl
or
outsb
push
nop
aas
wbinvd
arpl
inc
js
sahf
or
mov
or
push
push
notb
aam
iret
test
xlat
cmp
lret
enter
nop
cmp
mov
jo
cmp
and
sub
or
jb
adc
add
lds
test
int3
fildll
incl
sahf
xchg
adc
outsb
aam
sbb
popa
insl
mov
fiaddl
push
mov
dec
lds
lahf
mulb
sub
rolb
addr16
rcll
insb
xchg
lret
sbb
xchg
push
add
cld
jmp
or
cltd
popf
inc
iret
movb
mov
scas
jnp
push
pop
outsl
cmp
movsl
inc
enter
lods
cmp
jecxz
pushf
movb
and
cmp
rorb
aam
loop
mov
and
test
fwait
lcall
jno
mov
adc
and
adc
and
jns
fwait
std
imul
scas
sub
push
push
sbb
cmp
call
mov
xchg
jne
shll
inc
xor
add
cli
cwtl
add
mov
lahf
testl
out
adc
pop
fsubl
daa
stos
push
jnp
lods
mov
clc
fwait
jbe
outsl
sbb
fiaddl
push
ror
test
xchg
fwait
dec
jge
push
loope
out
mov
nopl
stos
push
es
dec
lahf
ret
dec
pusha
ss
ret
jle
jnp
jb
push
into
les
daa
push
ljmp
xchg
pop
inc
into
jp
and
cmp
xchg
test
test
lret
fdivrs
cmc
jb
pop
dec
pop
mov
cltd
inc
mov
fwait
ja
cmpsl
stos
repnz
lahf
insl
hlt
cmp
cwtl
jbe
cmp
jmp
imul
push
es
addr16
test
cmp
jns
push
mov
test
cmpsl
ss
leave
sub
ds
test
mov
cltd
pop
pop
data16
shlb
jnp
xchg
clc
in
rcll
sahf
call
dec
iret
add
mov
mov
cmp
xchg
stos
das
mov
stos
xchg
sub
enter
xchg
push
lock
dec
jnp
mov
dec
or
enter
xchg
push
or
mov
jns
add
push
jbe
mov
pop
lret
dec
xchg
fsubl
gs
into
inc
jnp
and
js
jp
in
mov
adc
and
cs
test
cmp
dec
push
and
enter
inc
int
dec
mov
adc
jmp
adc
lcall
stc
notl
cmpsb
popf
adc
mov
jecxz
out
inc
std
dec
inc
ja
or
mov
mov
dec
test
pop
mov
aam
dec
insl
jb
pop
movsl
push
mov
bound
push
xor
sub
mov
lret
fists
fisttpl
out
sbbl
mov
andb
mov
cmp
adc
mov
loope
mov
pop
js
pop
cmp
bound
mov
mov
dec
inc
xchg
jge
mov
cmpsb
dec
sbb
ja
add
mov
cmp
push
fsubp
add
xor
adc
sbb
mov
mov
jp
pusha
cltd
xchg
adc
call
gs
fisttpll
push
into
mov
fstpt
mov
jle
fadd
cmpsl
jo
dec
test
mov
fisubrl
sbb
test
sub
rolb
cmp
faddl
enter
insl
movsb
mov
loope
cwtl
loopne
mov
push
shlb
daa
inc
out
int
js
std
mov
sbb
stc
xor
mov
pop
xlat
push
outsb
mov
mov
jle
add
outsb
push
leave
push
mov
adc
divl
add
mov
insb
cmpsb
xorl
pop
jns
mov
arpl
add
pusha
and
clc
lods
push
fstpl
sbb
sbb
insb
xor
rclb
aaa
cltd
sti
inc
icebp
push
movsl
dec
sub
jecxz
test
push
sub
xchg
bound
test
cmc
lods
mov
movl
icebp
dec
cli
cmp
sbb
xchg
xchg
mov
cmc
add
idivl
jno
dec
stos
pop
cmp
enter
mov
movsb
pop
lahf
repz
in
fs
stos
dec
jne
dec
test
lret
adc
fcom
in
xor
inc
xor
cmc
and
adc
std
mov
enter
outsl
movsl
xchg
add
pop
pusha
insl
or
jp
aam
fldenv
lret
sbb
jne
imull
add
xchg
mov
lock
scas
test
push
xor
dec
push
cld
movhps
xor
and
orb
jle
xchg
mov
xchg
out
pop
mov
out
movsb
cli
clc
and
cmp
notb
jno
lahf
inc
pusha
mov
mov
mov
sbb
frstor
addr16
push
cwtl
mov
mov
les
mov
mov
in
mov
ja
add
jmp
jecxz
es
xorl
xor
push
mov
inc
push
hlt
pop
mov
shll
arpl
shll
push
aaa
pushf
movsl
cld
mov
and
arpl
lods
sar
jnp
addr16
jb
ffreep
lods
insl
in
sub
pop
jmp
shlb
out
push
int
stc
pop
les
mov
data16
xor
iret
sbb
outsb
fyl2x
shll
out
mov
xchg
push
bound
mov
gs
xor
sub
repnz
out
pop
pushf
shll
xorb
mov
cmp
call
xor
pop
movl
stos
cmpsl
pusha
mov
sub
dec
aam
outsb
clc
leave
imull
cmp
in
stc
les
jmp
mov
je
or
out
bound
add
pop
jmp
xor
jno
das
repnz
dec
scas
jne
pop
aam
aam
lret
adc
inc
js
push
popa
pop
mov
jae
aad
in
int
aad
lcall
xor
cwtl
mov
inc
mov
mov
lods
inc
mov
aaa
lods
arpl
insb
add
sti
pop
rolb
test
add
lods
sub
arpl
mov
adc
inc
clc
dec
lcall
cli
ret
xor
pushf
leave
jnp
repnz
ja
rcll
aas
jecxz
fisubl
fs
mov
notl
fidivrl
lret
clc
stos
mov
cmp
daa
sub
dec
mov
dec
fs
jno
pusha
xchg
shll
sub
repz
cli
push
imul
stos
mov
ret
add
rorl
into
das
mov
cmp
xor
sub
shlb
adc
add
call
xchg
mov
addl
imul
shll
arpl
add
test
mov
mov
sbbb
daa
aad
fsubs
mov
and
mov
out
test
aam
sarb
lock
into
adc
int
mov
mov
daa
shl
add
cmp
in
pop
dec
sbb
shll
out
mov
and
dec
mov
mov
add
xchg
xor
xlat
dec
adcl
pop
mov
push
and
mov
mov
fcompl
popa
int3
mov
aaa
aad
mov
jecxz
pop
ret
in
dec
scas
mov
mov
jae
enter
sbb
pop
imul
mov
or
mov
enter
or
push
stc
push
mov
ja
mov
cmp
and
mov
adc
xor
adc
jae
pop
fadds
mov
shl
int
out
dec
sbb
int3
jge
bound
popf
pop
outsb
aas
cmp
xchg
lcall
movsl
jns
sbb
sbb
popf
or
jo
add
inc
test
cmpb
push
sub
xlat
cmp
stos
dec
mov
add
out
or
push
pop
adc
mov
xchg
sahf
inc
mov
aas
sub
mov
sub
mov
fsubrs
push
xchg
push
cmp
jge
jb
rcrl
cmp
scas
testb
addr16
cwtl
pop
cltd
dec
fsub
hlt
loopne
mov
lret
xor
add
adc
inc
iret
lahf
pop
sbb
push
lcall
test
and
mov
cs
push
pop
test
loopne
addr16
lcall
jo
dec
jne
add
push
ret
scas
xchg
fcmovnb
pop
jmp
dec
imul
xchg
jae
xor
xor
push
and
es
aaa
dec
mov
test
hlt
shr
cmpsl
pop
sbb
cmp
inc
dec
int
sbb
push
mov
cmp
lcall
ds
lock
fsubs
push
cmp
test
pop
movsl
xchg
mov
xorl
subb
fidivrs
sub
popf
hlt
push
repnz
std
addl
into
insb
mov
sub
xor
push
mov
int3
xor
adc
rolb
push
ret
or
xchg
xchg
pusha
enter
pop
mov
pop
andb
popf
cmpb
das
sarb
cmpsb
or
cmp
mov
mov
cmpsl
movl
mov
dec
testl
sbb
pop
shll
fcompl
aam
leave
out
ljmp
dec
mov
addr16
jp
mov
adcb
lods
repnz
sti
jb
test
pop
hlt
dec
ljmp
pushf
test
loope
jg
jb
in
mov
addr16
sti
sub
and
cmp
sub
inc
cmp
cmc
or
test
in
stc
xor
divl
ja
rcrb
scas
xor
or
hlt
jge
add
mov
or
add
outsb
insb
xchg
aaa
or
lds
dec
add
sbb
icebp
addb
sahf
call
cmc
inc
scas
add
pop
jle
stos
or
jo
pop
jl
dec
mov
fs
das
fs
push
mov
outsb
xor
test
push
xor
push
stos
bound
pusha
or
mov
dec
jg
jle
adc
cmp
call
pushf
je
cwtl
inc
mov
dec
lahf
mov
outsb
addr16
xchg
ds
nop
and
repz
stc
xchg
insb
jle
sub
int
sbb
adc
or
pop
rcrl
dec
leave
test
dec
addr16
ret
pop
aad
xor
js
clc
stos
jle
lcall
sarl
sub
sub
jno
inc
mov
out
aad
push
mov
pop
movl
movsl
ss
add
cltd
ret
in
gs
cmpsl
pop
arpl
pop
stos
scas
dec
leave
int
and
ds
es
mov
repnz
dec
addl
mov
jae
sub
inc
lret
adc
adc
test
fwait
loop
and
pop
test
inc
fcomps
or
test
pop
mov
insb
push
cmpsl
push
push
imul
mov
popa
sub
dec
xor
jmp
loop
pop
ja
push
mov
xor
icebp
pop
dec
inc
leave
inc
pop
sub
pop
and
push
leave
xor
outsb
inc
or
jge
icebp
pushf
scas
sub
loopne
lahf
fxch
bound
stos
jo
int3
jecxz
xchg
jnp
rep
insl
insl
ucomiss
inc
lods
pop
lret
int3
bound
or
jo
popf
jns
iret
dec
sbb
arpl
int
fimuls
arpl
mov
lret
lahf
das
cmp
cmp
lods
inc
mov
jmp
add
jb
and
mov
xchg
lds
insl
int3
push
mov
dec
mov
pop
inc
sub
cmpsb
test
cmp
insb
inc
push
or
xchg
or
dec
cwtl
sub
add
mov
adc
into
xor
sbb
add
mov
mov
roll
add
cmp
call
jo
pushf
pop
jl
add
dec
repz
and
mov
fldl
adc
and
sbb
pusha
cmp
cmp
push
in
not
adc
popf
pop
sarb
dec
je
in
pop
or
roll
xor
out
adc
pushl
test
test
jbe
or
or
icebp
fisttpll
inc
imul
add
push
hlt
fs
test
mov
push
mov
dec
mov
sub
dec
lahf
cmp
push
or
pop
push
inc
fs
or
aas
xlat
mov
fnstcw
cmp
mov
mov
outsb
mov
or
mov
or
outsl
and
ret
imul
fidivrs
cli
scas
mov
aad
test
cwtl
dec
and
jnp
cmpl
cmpsb
daa
lods
push
inc
in
push
test
push
push
out
popa
shl
insb
ja
lods
xor
inc
loope
mov
loopne
mov
dec
in
adc
ja
sbb
jb
insb
inc
fs
xchg
nop
push
sahf
or
lret
enter
cmp
test
xor
inc
xlat
cld
mov
mov
pop
mov
sbbb
or
ret
lods
cmpsl
push
dec
dec
and
or
loop
xchg
fwait
xchg
shrl
data16
push
imul
fcoml
enter
mov
xchg
sub
pop
mov
xchg
xlat
xor
cli
and
cmp
scas
jmp
scas
jge
sbb
test
add
xchg
and
add
fadds
andb
xchg
xchg
or
insb
mov
lret
xchg
les
pop
xor
je
imul
lcall
add
ljmp
add
jno
or
pop
sub
dec
xchg
jo
jne
jae
jns
insb
jb
negb
push
and
ret
and
mov
data16
adc
ss
roll
fisttpl
sub
frstor
mov
clc
fsubr
sub
push
pop
sub
jp
mov
sbb
push
out
imulb
jl
push
sub
adc
mov
std
xchg
std
or
shl
xor
lret
hlt
xor
sbb
sbb
mov
js
test
loopne
scas
popf
xchg
mov
lret
outsl
xor
fcom
lret
das
les
jp
or
or
inc
imul
jno
fnstsw
xorl
hlt
adc
sub
dec
mov
out
pop
test
arpl
jo
cmpb
xor
rcl
popa
inc
push
repz
jmp
and
mov
subl
cli
loope
or
shrl
std
scas
xchg
xchg
push
add
adc
int3
in
ja
sbb
pop
sbb
sub
and
repnz
js
push
push
pop
pop
xchg
and
pop
cltd
lcall
mov
inc
inc
or
push
adc
add
pop
or
movb
push
in
xor
or
or
ret
or
cmpsl
sahf
pop
fists
sbb
ljmp
and
mov
shll
cs
xorl
push
jl
call
inc
and
and
jg
daa
ficomps
aad
xchg
push
xchg
jb
aas
sti
je
xchg
push
rorl
movsb
gs
fldenvs
in
movsb
mov
jne
xchg
jns
dec
sub
stc
mov
cwtl
aam
scas
loopne
nop
aad
loopne
sarl
xor
popa
inc
ficomps
or
add
or
dec
xchg
loopne
clc
sbb
push
fstpl
fistl
pop
fwait
or
push
dec
pop
pop
push
lret
mov
sbb
dec
das
xchg
int3
or
addr16
outsb
mov
mov
adc
in
sub
mov
mov
mov
lahf
push
movsl
pop
xor
inc
fwait
test
dec
fsubrp
xchg
fidivl
mov
pop
inc
loopne
rorb
out
addb
daa
inc
sbb
fstpl
inc
loope
mov
pusha
adcl
jle
cmp
stos
adc
sbb
adc
and
push
xchg
sub
mov
loopne
lret
push
leave
pop
pop
pushf
pop
imul
stos
mov
and
es
clc
push
mull
pop
clc
sbb
outsl
push
lods
add
add
mov
push
loope
xor
xchg
ds
jo
and
mov
pop
imull
js
stos
popf
and
jmp
inc
inc
cltd
movb
mov
scas
push
stos
repnz
sbb
mov
push
fcomps
sbb
adc
rorb
cmp
cmp
loopne
stc
mov
pushf
addr16
mov
sbb
out
jp
pusha
sub
cmpsl
mov
mov
inc
cmp
add
inc
mov
fdivrs
and
mov
cli
sub
cmpsb
mov
ret
mov
loopne
lret
xlat
jo
mov
push
mov
pop
in
iret
gs
insb
aaa
roll
mov
and
pop
lods
jge
loop
mov
mov
fldl
shl
std
jmp
adc
imul
lods
mov
dec
mov
xchg
shll
xchg
jp
test
in
subb
in
push
cld
and
repnz
rorl
mov
enter
xchg
or
jb
cmp
adc
cli
pop
jl
adc
xchg
js
outsb
and
xchg
shrl
add
out
adc
adc
push
adc
aas
push
lea
shl
mov
dec
inc
dec
lret
fwait
push
mov
lock
push
cmp
clc
dec
xchg
mov
jae
add
xor
inc
xor
pavgw
pop
repnz
xor
popf
leave
outsb
xchg
jb
pop
inc
push
cmp
xchg
negb
jae
call
fidivrl
push
das
sti
xlat
lods
jmp
push
xchg
in
sahf
pop
jno
mov
lds
popa
jb
mov
push
lds
data16
lcall
mov
aas
dec
jnp
bound
aas
cmp
push
mov
fmull
lods
out
aas
and
pop
daa
push
addr16
jecxz
jecxz
daa
das
mov
sub
xor
cltd
enter
enter
mov
in
lea
movsb
and
stc
loope
cli
or
inc
cmp
pop
out
cmp
sbb
cmc
push
push
mov
sarl
mov
arpl
mov
lret
jmp
sub
sub
dec
mov
das
das
aad
cmp
shll
add
dec
adc
cmpsb
sbb
cmpsb
pop
dec
mov
mov
daa
push
decl
xchg
repz
pop
push
lahf
mov
pop
mov
push
jno
repnz
test
add
adc
lods
xor
xchg
loop
clc
push
aad
fisttps
adc
jl
mov
ret
adc
jecxz
mov
inc
rcll
mov
scas
add
push
pop
lret
or
lods
out
out
das
inc
mov
jmp
in
stos
add
imul
cltd
mov
pop
sbb
jp
xor
sarb
xchg
fildl
maskmovq
push
cltd
jno
in
jno
mov
lret
rclb
inc
in
imul
icebp
mov
jne
testb
push
shll
sub
mov
jmp
andb
jmp
addr16
mov
ret
push
dec
sub
std
subl
xor
mov
test
rcl
xchg
aaa
jbe
lock
fiaddl
out
pop
mov
ss
sarl
ss
xchg
jbe
pop
mov
inc
fs
push
and
sub
ss
xor
dec
cmpsb
mov
push
jb
sub
adc
pop
mov
mul
out
inc
pop
add
mov
cmp
dec
push
imul
out
inc
mov
in
xchg
bound
push
jbe
dec
mov
test
cmpsb
mov
cmp
jbe
sub
shlb
aam
jle
pop
push
adc
out
inc
push
je
leave
daa
xor
aas
xchg
or
outsb
mov
jle
mov
sbb
cmp
or
test
push
jl
outsl
adc
shlb
push
jg
add
cltd
pop
jne
xor
cwtl
add
nop
subl
xlat
xchg
testl
jbe
push
addr16
not
shlb
push
aam
cli
cmp
pusha
inc
mov
cwtl
xor
leave
lods
test
inc
icebp
push
cmpsl
pop
xchg
fs
push
and
mov
ja
xchg
mov
stos
inc
push
mov
ja
jmp
adc
ja
das
add
mov
pop
mov
adc
xchg
int3
push
sar
or
pop
pop
dec
insl
in
adcl
mov
shl
inc
jne
fiadds
pop
lret
aad
test
pop
imul
neg
test
cmp
pop
cld
stc
int
fcom
sbb
jns
sbb
testl
sub
mov
lods
outsb
xor
mov
imul
adc
mov
ds
cli
sbb
sub
adc
lcall
popa
fdiv
iret
inc
movsl
mov
enter
mov
cmp
adcb
fbstp
pusha
jbe
add
paddsb
jg
sub
xchg
inc
mov
test
in
fs
push
jb
inc
sub
push
mov
and
pop
insb
push
sub
bound
push
xchg
cmp
test
repnz
mov
decb
dec
dec
push
cld
mov
movsb
and
stos
dec
loop
popa
mov
mov
outsl
iret
dec
jne
mov
mov
push
in
dec
xor
mov
rol
dec
sub
popl
xchg
repz
stos
in
xchg
mov
mov
push
fldt
xor
fwait
in
stc
stos
cmp
lahf
inc
pop
pop
jb
js
cmp
xlat
gs
inc
jle
hlt
or
or
fstl
or
sbb
pop
sub
testb
mov
jne
dec
inc
push
sbb
loopne
das
push
mov
and
adc
push
mov
mov
ljmp
popa
push
xlat
sbb
inc
sbb
and
mov
mov
sbb
aas
sti
pop
lds
out
into
mov
mov
arpl
inc
push
or
mov
cmp
or
sbb
je
cwtl
dec
imul
shrl
in
dec
cmp
cmpsb
ret
movsl
cmp
xor
imul
imul
sbb
cmp
lods
push
push
sbb
movsb
add
mov
mov
push
inc
out
fdivs
ljmp
adc
xchg
aaa
lods
and
mov
idivl
and
cmp
cmp
jecxz
cmpb
cmp
mov
mov
mov
hlt
cltd
or
das
and
clc
cs
inc
or
cltd
aas
push
jmp
push
test
sub
jnp
imul
insl
call
bound
xchg
or
push
mul
in
cmc
daa
add
loop
add
mov
rorb
pop
ljmp
iret
mov
ret
insl
pop
lahf
jle
je
push
loop
mov
filds
pop
sub
mov
dec
stos
add
testl
je
push
scas
popf
stc
out
fs
data16
sbb
push
pop
cmpsb
fcmove
and
mov
mov
pushf
jp
insb
fwait
jge
xor
push
jns
es
push
dec
mov
cmpsl
out
mov
sbb
orl
mov
movsl
mov
dec
dec
call
scas
inc
push
mov
xchg
push
call
testl
imul
iret
movsb
lret
test
fcoms
ds
repz
outsl
insb
call
cmc
arpl
lock
dec
dec
hlt
aas
push
jae
aam
xchg
cmp
mov
sahf
mov
aad
xchg
nop
mov
pop
cmp
inc
and
loop
jmp
mov
loopne
or
repz
out
test
mov
lret
mov
xchg
lea
mov
add
dec
pop
jbe
insl
push
cmp
dec
mov
cmpsb
daa
es
loopne
mov
sbb
iret
xchg
pop
sbb
leave
jnp
xchg
cmp
lock
fcoms
movsl
mov
inc
mov
pusha
outsb
sbb
push
mov
loope
sbb
test
mov
jnp
arpl
movsl
cmpsb
mov
movsb
pop
addl
out
gs
mov
repnz
jl
loope
push
mov
std
bound
or
leave
jne
dec
xchg
lcall
xchg
dec
movsb
sbb
shl
pusha
sub
mul
mov
mov
sbb
pop
sbb
sahf
in
push
pop
mov
mov
push
sub
xor
mov
in
jb
pop
or
das
cmp
sti
loopne
pop
or
dec
sarl
mov
in
cltd
cmp
cmp
add
je
aaa
cmpsb
jg
push
test
or
pushf
add
cltd
mov
mov
clc
dec
cmp
cwtl
dec
cli
jno
loope
push
mov
out
int
repnz
insl
mov
movsl
push
xor
repz
out
adc
xor
jne
sub
std
xor
inc
add
or
and
pop
push
mov
sub
dec
adc
das
cli
adc
in
fistps
jp
lret
and
outsb
mov
faddp
inc
pop
jg
push
push
idivl
movsl
inc
inc
jmp
cmpsb
dec
stos
add
cmp
xchg
inc
sbb
push
sub
mov
jl
loop
mov
adc
sub
test
pop
call
sub
xchg
fimuls
roll
mov
lea
in
jp
add
jmp
cmc
mov
mulb
pop
push
notl
ds
mov
mov
rolb
enter
test
or
call
sbb
cmp
pop
add
xchg
scas
add
dec
addr16
mov
cld
and
mov
or
jnp
xchg
loopne
insb
jle
in
int
sub
les
push
lahf
clc
sub
sahf
cmp
adc
stc
adc
frstor
pop
or
or
lds
js
cmp
popf
incl
cmp
lods
out
daa
lahf
mov
xchg
ret
scas
hlt
xchg
sbb
inc
inc
dec
loop
clc
ja
lret
loope
test
jbe
jne
stos
das
pop
cmpsb
adc
pop
mov
mov
cmp
push
xor
pop
int
xchg
jb
mov
lds
jnp
adc
iret
addl
stos
jno
lock
fidivl
inc
pop
loope
push
sub
push
fldenv
xchg
negl
push
clc
jecxz
stos
or
pop
push
iret
jmp
inc
test
ljmp
aad
pusha
mov
in
sbb
insl
aam
jb
fdiv
inc
cmp
jl
int3
jp
xor
ds
jbe
mov
or
outsl
push
addb
mov
loope
nop
fmuls
data16
ret
mov
xchg
or
pop
test
push
mov
hlt
ds
add
fsubs
push
popa
dec
add
xchg
mov
push
fs
gs
shlb
lret
cltd
pop
jbe
adc
ljmp
inc
inc
mov
daa
mov
dec
shlb
sti
xor
sub
lods
adc
loopne
mov
subl
insl
std
sbb
fwait
pushf
fidivs
scas
adc
sub
daa
call
xor
imull
xchg
loopne
stos
and
popf
sub
xor
push
scas
sub
rcrl
push
or
or
add
sbb
add
push
push
addr16
mov
js
scas
repz
into
mov
inc
mov
cli
jae
out
cmp
xchg
pushf
xchg
xor
xchg
sbb
ja
repnz
iret
xor
daa
inc
jb
in
adc
xor
adc
adc
xchg
cwtl
std
inc
ret
popa
inc
xlat
lahf
push
inc
out
adc
xchg
mov
and
push
test
lea
fidivrs
xchg
loope
imul
enter
lds
test
scas
pop
div
mov
inc
test
les
cmp
mov
push
sbb
test
xor
movl
xchg
hlt
cli
imul
sbb
mov
aaa
stc
addl
cltd
loope
add
cmpsb
pop
dec
jne
mov
or
sbb
dec
pop
test
push
pop
push
dec
repnz
shl
scas
mov
fistpl
xor
loope
mov
push
scas
fwait
insl
inc
sbb
out
pop
mov
inc
aas
std
loopne
daa
dec
je
enter
dec
js
mov
pop
mov
cmp
dec
push
pop
xchg
out
xor
test
mov
je
xlat
xor
or
scas
popf
lea
adc
sbb
xchg
lret
in
xor
jge
adc
ficoms
cmp
pop
push
mov
cwtl
pushf
cmp
mov
fsubs
mov
mov
outsl
fstp
xchg
push
xlat
cld
pusha
int3
out
sub
and
or
xor
dec
aam
das
shlb
roll
insb
jmp
cmp
decl
negb
out
push
shrb
xchg
cmp
jb
addb
mov
inc
repnz
cmpsl
cli
mov
rcrb
decb
aaa
pop
gs
adc
add
lock
pop
aas
xor
sahf
push
jnp
pop
mov
sub
mov
ss
out
dec
les
cld
xchg
into
in
adc
push
lret
data16
fidivrs
mov
xchg
push
ja
jb
pop
insb
popa
fisttpll
mov
inc
cmovnp
xor
movsb
push
sbb
call
ret
sbb
sub
movsl
sub
or
mov
cmc
fscale
fwait
and
inc
cmc
add
xor
jge
pop
data16
push
pop
dec
adc
out
dec
push
mov
ret
or
shlb
add
mov
jae
mov
push
gs
push
out
cmp
or
pop
mov
scas
das
jge
jb
pop
cltd
inc
stc
cmp
cltd
push
xchg
fdivrp
push
jmp
orb
jne
rorb
cmc
sbb
adc
shl
mov
mov
lea
mov
int
ljmp
in
ja
jg
pop
mov
sub
pop
dec
aas
mov
fmuls
in
das
jp
ds
pop
push
daa
xchg
adc
cld
inc
fisubl
pop
daa
xor
cld
lcall
jg
loopne
cwtl
cwtl
mov
cli
fidivl
sbb
push
jo
popa
lods
jge
xor
cwtl
mov
cmp
pop
adc
jecxz
mov
cmp
mov
outsb
hlt
daa
jge
xlat
cmp
fbstp
test
cmp
in
test
loopne
js
xor
repnz
sahf
das
sti
inc
jecxz
in
arpl
add
xchg
xchg
mov
jecxz
push
dec
test
test
pop
xchg
je
rorb
cmpl
sahf
loop
pop
test
imul
jecxz
push
mov
outsl
incb
sbb
adc
popf
xchg
dec
inc
shl
lods
lods
orl
jb
jae
mov
jb
movsl
lret
push
test
loopne
stos
sbb
pop
mov
fcomps
and
jb
xor
aad
test
adc
cmp
pushf
out
inc
test
scas
jmp
xor
cmp
cmp
cli
mov
arpl
pop
jge
xchg
push
out
lcall
pop
mov
dec
test
mov
test
sti
rcll
push
xor
or
mov
jge
dec
fisttps
out
mov
xchg
or
aad
icebp
aaa
or
test
lret
pop
adc
incb
mov
sub
mov
idiv
xor
fildl
insl
sahf
and
loop
or
mov
in
mov
adc
pop
in
pop
pop
mov
mov
mov
add
pop
scas
mov
mov
dec
add
je
dec
adc
dec
sbb
and
dec
pushf
scas
or
xor
jbe
insl
psraw
movsl
test
add
xchg
rclb
lret
cmpsl
es
inc
jl
and
aas
adc
mov
mov
hlt
or
in
inc
rcrl
adc
mov
shl
mov
add
ret
xchg
fistps
or
jns
lds
mov
mov
sbb
out
add
add
enter
scas
push
imul
cmc
mov
mov
int
push
xor
inc
jge
sub
movsb
out
jbe
mov
inc
sub
ljmp
lods
mov
adc
mov
push
scas
push
mov
or
in
add
and
pop
cmp
add
rol
push
mov
movb
add
repz
jg
cld
cld
dec
adc
mov
faddl
stc
dec
orb
andps
add
fdivrs
jno
mov
outsl
jg
insl
push
cmp
les
outsl
cmp
iret
push
mov
push
cmp
int3
add
xchg
push
in
in
mov
sar
out
pop
jmp
jl
fldenv
popa
pop
loop
mov
repz
adc
ljmp
pushf
test
gs
pop
sub
fldl
subl
daa
inc
leave
aad
pushf
arpl
pop
sahf
ja
push
insb
mov
test
push
pop
enter
ficompl
cmp
cmpsb
lods
dec
mov
push
out
sbbb
aaa
pusha
sbb
inc
xchg
dec
je
js
dec
jns
out
lret
push
dec
mov
cltd
cltd
or
jecxz
outsb
cmp
mov
test
and
imul
or
xor
xor
fisttpll
lret
mov
xor
push
movsb
repnz
inc
lock
rcrl
sub
add
nop
aam
push
clc
inc
insl
sbb
les
dec
cld
sbb
xor
or
sub
in
xchg
jbe
iret
push
xchg
iret
nop
sti
and
fstps
out
mov
es
xor
pop
lcall
lock
xor
adc
dec
decb
mov
into
ret
scas
cmp
enter
dec
dec
pop
stc
mov
sahf
test
sbb
sahf
fistpl
std
inc
push
icebp
inc
push
cmp
cmp
popf
xor
unpckhps
pop
fst
test
jp
sbb
push
arpl
ret
cs
aas
mov
add
inc
mov
aas
jmp
jae
fidivrl
into
xor
into
insl
fidivrl
push
push
xor
ja
xor
mov
and
mov
ficoms
imul
rorl
out
push
jg
jg
jne
push
mov
lahf
cmp
jae
js
popf
pop
pop
mov
add
mov
jno
int3
mov
loope
jno
addr16
lret
jg
dec
push
xchg
repz
mov
shll
out
nop
int3
inc
imul
inc
in
test
mov
pop
push
inc
cmp
jb
push
sbb
bound
inc
mov
arpl
mov
fwait
ja
pop
mov
adc
add
pop
cmp
fistps
scas
into
pop
xchg
mov
add
sub
pop
fs
inc
jbe
add
and
xchg
xchg
sub
push
into
fistl
mov
push
bound
xchg
das
ret
adc
call
fwait
dec
insb
negb
xor
sbb
add
lds
sub
push
in
add
insl
mov
sub
and
pop
dec
inc
sub
pop
add
add
data16
mov
movsl
mov
test
cmp
cmp
out
push
ror
lods
dec
mov
add
lahf
out
dec
cmp
aad
pop
dec
sti
das
fistps
fs
pusha
push
inc
nop
dec
loop
sbb
and
inc
mov
test
cmp
mov
mov
loop
xor
mov
push
sub
mov
cwtl
insb
mov
ss
pop
aaa
mov
push
and
cld
lret
imul
xchg
out
hlt
pushf
jnp
xchg
fs
rcl
adc
cs
imul
push
push
or
pop
xchg
push
push
adc
nop
fadds
popf
xor
out
adc
xchg
lock
mov
add
adc
jbe
jns
add
cmp
std
repz
and
fwait
jp
in
in
mov
mov
and
imul
mov
lods
iret
movsl
incb
dec
lock
outsb
mov
aaa
xor
mov
sbb
jmp
mov
or
fsubl
stc
pop
pop
add
inc
xor
bound
or
jp
cmpsb
mov
or
jp
out
jnp
mov
sub
outsl
fadds
arpl
xlat
fwait
cltd
ret
push
dec
pusha
ret
dec
jl
xor
cli
addr16
lds
or
lds
dec
xchg
lea
ljmp
dec
je
sti
pop
jp
or
dec
nop
cwtl
push
dec
mov
push
xchg
icebp
mov
inc
sbb
aad
mov
jno
popf
jae
mov
cmp
cmc
push
inc
and
add
push
in
in
out
sarl
lods
jg
adc
lods
adc
mov
in
je
int
or
jmp
inc
mov
sub
pushf
adc
adc
cmp
fdivl
daa
mov
pop
xchg
cli
sub
fdivs
mov
and
aas
in
push
out
loope
out
xchg
lds
push
cmp
ja
xchg
fisubrs
xchg
add
std
cmpsb
add
jge
orb
xchg
ljmp
inc
adc
and
sbb
push
scas
dec
sbb
add
cs
imul
cld
xor
dec
cs
outsl
mov
mov
lcall
imull
cmp
std
jne
jmp
test
aaa
sti
mov
cmp
das
lock
mov
push
es
or
adc
push
fisubs
outsl
mov
pop
out
filds
imul
scas
fwait
mov
stos
rorl
inc
lods
add
inc
das
dec
push
dec
test
jp
dec
add
jae
insb
es
in
scas
fimull
cmpsb
jl
mov
jae
mov
rorl
mov
lcall
popa
pop
aaa
test
testb
iret
inc
ret
aad
das
fadd
xchg
out
xchg
xor
cmp
xchg
movsb
outsl
push
pop
cmp
icebp
andl
lret
andb
jb
out
mov
xor
int3
inc
dec
fwait
shll
int3
and
mov
lret
jo
arpl
lds
sub
jno
sbb
add
insb
inc
xlat
lock
lods
outsb
stos
xor
negl
xchg
sbb
dec
xor
adc
mov
aad
cmpl
pop
lea
insb
lea
xchg
out
sbb
insl
mov
xor
inc
jnp
push
lret
addr16
imul
cld
push
push
ret
scas
jnp
mov
push
dec
loope
das
cmpsl
xor
std
subb
pusha
in
pop
imul
push
inc
movsb
mov
insl
sub
jle
sti
lods
popf
bound
daa
jl
sarl
aaa
sbb
mov
std
xor
in
lahf
xchg
in
inc
push
xor
xor
mov
mov
jecxz
repz
or
push
mov
inc
insl
rol
inc
int3
jns
repz
jmp
fstps
call
ficompl
xchg
in
pusha
pop
inc
clc
int3
mov
pop
mov
xchg
xor
pop
sbb
jb
dec
aam
icebp
dec
rolb
mov
out
mov
bnd
mov
ss
pop
test
aaa
cmpsl
shlb
inc
or
ret
lds
jae
xchg
push
ficoml
xchg
and
mov
jmp
adc
xchg
mov
cwtl
and
adc
mov
ljmp
lcall
pop
jno
mov
or
dec
sub
cmp
lahf
add
xchg
jbe
push
fscale
sub
and
out
sbb
mov
mov
mov
popf
lock
or
iret
xor
fxch
test
loope
dec
cmp
cmpsl
adc
cmp
mov
mov
aas
jbe
mov
inc
jmp
xchg
jae
lods
pop
stc
sub
out
inc
pop
dec
test
into
cwtl
sub
iret
ret
push
movsl
rclb
mov
nop
push
gs
subl
dec
inc
inc
mov
pop
push
lret
jne
cmpsl
test
xchg
mov
rep
testb
push
adc
fcmovnbe
ret
cmpsl
divb
jno
imul
mov
lods
popf
test
inc
cwtl
scas
inc
into
out
aam
mov
cmpsl
jl
ss
out
fstcw
arpl
fwait
leave
mov
loopne
outsb
in
out
dec
std
dec
sarb
mov
jge
xchg
out
sti
xor
lahf
popa
lods
jge
lcall
movsl
out
mov
int
jg
into
addb
cmp
lahf
pop
ds
cmp
aaa
sbb
incb
es
lods
subl
dec
stos
mov
mov
mov
cli
xor
pop
shlb
pop
sti
pusha
frstor
xchg
jnp
shl
lea
out
stos
and
shrb
repnz
out
sar
aad
sub
popf
out
adc
jbe
inc
mov
add
adc
ds
and
in
cmp
out
sub
fwait
rorl
inc
aaa
push
push
adc
mov
push
mov
cmp
xor
sahf
or
or
sub
aaa
xorl
dec
clc
fmuls
rcrb
mov
xor
pop
dec
push
xchg
popa
xchg
icebp
sbb
into
mov
xchg
lret
int
and
mov
shrl
nop
dec
movsl
out
cmp
cmp
push
mov
cli
jbe
push
push
jbe
jmp
insl
sbb
pop
jno
ljmp
sub
fsub
xor
mov
sub
mov
jmp
fwait
add
pop
int3
inc
mov
push
xchg
mov
cli
sbb
gs
sarl
int3
push
adc
loopne
lods
pop
push
cmp
std
sbb
jns
or
lcall
popa
mov
popf
addl
pop
ja
inc
pop
leave
rolb
cmc
in
cwtl
test
sbb
outsl
cmpsb
fisubrs
adc
mov
in
sbb
scas
and
and
dec
mov
movsl
imul
inc
mov
rcrl
push
in
pop
dec
mov
test
lds
es
jg
lahf
xor
add
jne
inc
les
movl
addr16
inc
ret
adc
pop
mov
pop
sbb
inc
cmpl
call
repnz
push
pop
pusha
scas
dec
leave
mov
ffreep
push
dec
mov
cmp
nop
add
ret
mov
out
sbb
inc
or
xor
inc
fsubrl
jmp
sbb
inc
sbb
add
push
gs
les
push
mov
jae
outsl
pushf
inc
pop
mov
xlat
insb
dec
ja
out
movsb
xor
jp
xor
insb
push
call
mov
and
dec
ljmp
push
andb
cltd
mov
lods
fucom
in
mov
repz
or
dec
sbb
push
mov
jg
leave
push
mov
sbb
cmc
cli
std
adc
cwtl
mov
push
data16
pop
stos
pop
aas
pop
repnz
sub
pop
jp
mov
jae
mov
mov
mov
lcall
or
lret
jb
xchg
xor
fndisi(8087
roll
jge
fidivrs
mov
xlat
inc
test
adc
inc
add
push
call
pop
cmc
pop
pop
sbb
jno
test
hlt
lods
addb
mov
xor
dec
xchg
lcall
fsts
sub
lea
jns
lock
add
cmpsl
imul
jp
dec
mov
or
pop
xchg
cmp
loop
div
jns
pmullw
dec
dec
xchg
lods
in
push
mov
xchg
aad
cld
xor
xchg
mov
pop
xchg
mov
push
or
pop
push
inc
jp
lds
cmpsb
icebp
mov
test
and
mov
jns
jle
lahf
movsl
divb
sbb
lock
arpl
lods
lret
jbe
mov
imul
pop
test
add
xor
xor
mull
fmul
pusha
xchg
xchg
mov
push
xchg
cmp
adc
mov
stc
loope
outsb
mov
mov
je,pn
sbb
out
or
les
push
popf
ret
push
mov
sbb
int3
sub
inc
sahf
frstor
sbb
mov
ds
loope
xor
bound
aas
jns
outsl
iret
in
scas
cs
lods
outsb
sbb
mov
in
mov
stc
arpl
pop
rorb
push
jmp
lods
add
pop
or
push
push
or
mov
dec
push
std
or
std
jp
adc
repnz
cld
fnstsw
cmp
push
push
fists
adc
icebp
adc
xor
cmpsb
jbe
iret
testb
and
ja
mov
jae
pop
pop
lods
or
insb
jge
sub
aam
cmp
adc
adc
gs
cwtl
ficomps
lods
cmp
loope
mov
lods
pop
cmc
sbb
inc
cld
scas
lock
and
in
pop
repnz
or
std
mov
stc
test
jl
ficoms
clc
pop
or
add
cli
add
jg
aas
inc
and
out
sbb
xchg
mov
mov
in
and
xchg
sub
push
jg
jmp
and
icebp
lea
loopne
iret
jmp
fsts
pop
mov
push
push
jecxz
adc
push
cwtl
xor
push
in
pop
out
and
sub
mov
pop
lea
xor
das
jp
js
aas
ljmp
cmp
xchg
sub
stos
pop
pop
ret
loope
fnstcw
jae
mov
loop
cmp
push
sub
fistl
xchg
jmp
lcall
inc
insl
mov
inc
mov
imul
xlat
outsl
scas
jecxz
or
inc
add
es
das
pop
dec
shl
jne
pop
hlt
cmp
mov
ljmp
pusha
inc
repz
imul
dec
xor
pop
outsb
aaa
int
es
push
inc
shl
fnstenv
cmpsl
push
cmpsl
loope
jnp
dec
test
iret
mov
xchg
jmp
stos
and
or
and
sub
cmp
and
add
repz
les
push
das
fnstenv
mov
xchg
jmp
adc
push
mov
mov
js
inc
out
pop
scas
jo
fisttpll
out
bound
insb
cmp
and
jmp
test
mov
xchg
mov
xchg
pusha
aad
loopne
ds
mov
rol
push
adc
bound
call
inc
push
int3
xchg
jg
xchg
add
xor
movsl
rorl
cmp
sbb
mov
dec
fisttps
dec
mov
lods
xor
xchg
cli
add
fiadds
lea
jp
mov
pushf
sub
pushf
cs
push
cli
lcall
jle
es
cmp
out
xor
jns
mov
push
rclb
mov
out
pop
jno
divw
or
fldl
add
ja
das
xchg
in
add
rclb
push
imul
lret
stos
fsubrs
add
mov
mov
mov
aas
inc
ds
bound
or
or
lahf
mov
sbb
aad
test
jmp
faddl
and
and
sub
push
or
loopne
jl
lret
jecxz
push
inc
fsubrs
test
jae
cs
push
sub
inc
dec
xorl
xchg
and
es
test
and
je
or
les
mov
lock
bound
roll
test
push
cmpsb
popf
pusha
xchg
int3
jg
shll
out
fldt
push
pop
bound
sbb
imul
test
inc
gs
push
sbb
outsl
rorl
jo
es
dec
and
mov
ret
xlat
mov
xchg
xchg
jp
enter
sbb
ds
lret
xor
xchg
push
mov
xor
jmp
sub
cmp
outsl
fs
mov
sbb
adc
push
push
cmp
or
sub
idiv
fsubrs
rcrl
aaa
sbb
lea
adc
nop
test
and
inc
inc
inc
fwait
and
inc
and
test
mov
jge
mov
xor
clc
test
mov
test
and
les
cmpsb
push
wrmsr
xchg
jp
movsl
shll
aad
inc
jne
sti
sub
inc
out
and
mov
int
cmp
ss
adc
les
push
mov
pop
or
adc
pop
clc
dec
hlt
mov
test
push
xchg
ss
rcrl
into
fsubp
mov
add
adc
mov
cmp
xlat
push
je
data16
inc
hlt
popa
xorb
loop
movsb
lret
ljmp
in
cmpl
push
sub
cmp
mov
into
dec
fidivs
jns
dec
cwtl
fdivl
push
xlat
mov
push
xchg
cmpsb
inc
mov
stos
stos
jmp
cmp
popfw
mov
rclb
lods
mov
dec
mov
push
dec
popf
add
pop
xor
arpl
add
ljmp
in
jbe
out
or
push
std
stc
adc
jmp
les
int3
or
mov
out
mov
rcll
adc
inc
popf
in
cmpsl
sbb
jne
in
icebp
cmp
mov
scas
mov
xchg
sub
mov
movsb
or
push
pop
mov
in
jmp
pop
mov
dec
incl
int3
jnp
jmp
pop
pop
jecxz
cmp
sbb
xchg
and
pop
sti
pop
insl
add
aaa
sbbl
mov
push
mov
mov
pop
vpsraw
rcl
stos
nop
xor
lods
movsb
cmp
decl
push
es
mov
dec
cmp
mov
pop
mov
popa
push
stos
rolb
clc
nop
mov
inc
aam
xchg
shll
inc
pop
arpl
dec
mov
xchg
fwait
xor
push
stos
movsl
push
cmp
aam
lcall
mov
mov
push
aas
popa
or
mov
push
aad
lahf
je
sbb
push
mov
or
lds
push
sahf
sub
pop
push
jge
in
hlt
loopne
jecxz
insb
jle
enter
test
jnp
mov
adc
adcl
int
xlat
sub
aas
fimull
loopne
adc
nop
scas
mov
add
call
xlat
aad
gs
mov
cmp
inc
lahf
ret
fs
inc
stos
adcl
jmp
sub
out
test
pop
inc
lahf
cmp
lret
pop
int
aad
fsubrl
stos
xchg
bound
in
repz
in
cmp
or
or
pop
insl
movsb
add
jp
inc
sub
mov
and
mov
inc
jno
enter
mov
sar
adc
dec
cmp
popa
pop
stos
aad
jo
jmp
fldt
popf
sarl
popa
je
mov
mov
dec
int
pop
dec
imul
lods
hlt
mov
je
out
add
cld
lock
xor
lods
or
lret
mov
mov
or
jle
arpl
fcmovnu
std
mov
or
or
mov
push
mov
fisttps
push
mov
jmp
pop
daa
sarl
outsl
aas
cli
xor
sarb
cmp
inc
int3
pop
movsl
pop
push
fmuls
addr16
mov
mov
in
test
sbb
pop
mov
sub
push
cmp
fs
mov
inc
cld
add
shll
test
sbb
insl
ljmp
fcmovnu
pop
loop
pushf
mov
sub
gs
push
js
jmp
outsl
stos
sub
jbe
jne
mov
sbb
call
test
pop
fcoms
mov
push
sub
cmp
mov
jl
lods
aaa
xor
arpl
xchg
mov
xchg
fcomps
loop
pusha
pop
fcompl
mov
sti
dec
rcll
pushf
movsb
inc
into
aam
aad
mov
add
aad
dec
inc
call
loopne
push
add
stc
icebp
dec
cmp
mov
aad
daa
pushw
in
mov
push
out
mov
mov
pop
int3
adc
lods
mov
mov
jg
jo
sub
push
popf
out
les
inc
sbb
stos
mov
mov
or
inc
inc
xor
sbb
cltd
dec
pop
xchg
sbb
or
in
test
cli
scas
and
test
lret
sbb
lret
inc
es
movsb
and
and
push
outsb
push
mov
mov
movsl
cmp
test
mov
fildll
out
and
xchg
jp
pop
mov
std
pop
or
pop
and
cltd
call
int
mov
mov
jp
adc
shlb
pop
cmp
repz
je
repz
sbb
jge
pop
cwtl
xlat
daa
ret
pushf
stc
sbb
adc
ffree
dec
sub
shll
jl
icebp
jle
xor
int
mov
lret
cmp
xchg
sahf
out
inc
dec
inc
fistpl
scas
rcl
sar
cmp
out
pushf
add
aaa
faddl
ret
imul
sub
add
lds
pop
inc
pusha
lret
push
fadds
mov
mov
pusha
stos
push
rolb
pop
daa
pop
push
or
ja
mov
sbb
pushf
sbb
mov
dec
lret
sub
jo
in
xchg
imul
pop
pop
sub
or
ret
outsl
jg
pop
stos
ret
pop
lret
mov
xor
add
rcl
jbe
lock
xor
xchg
push
inc
das
push
dec
pop
and
rcr
inc
pop
sub
cmp
pop
scas
lcall
lret
stc
inc
sub
jbe
jnp
sar
cwtl
movsl
add
call
out
stos
ja
mov
or
and
mov
and
and
jp
cmpsl
mov
in
or
cmp
jae
std
and
push
mov
scas
mov
scas
xchg
push
dec
cmpsl
and
pop
add
in
dec
jo
ret
push
cmp
add
in
push
or
or
jbe
or
nop
outsl
mov
fnstenv
mulb
icebp
sub
add
lahf
mov
xor
in
shrd
adcb
int3
jge
test
xor
leave
cmpl
loope
xchg
outsl
push
sub
xchg
outsl
pop
insb
clc
push
pusha
sub
xchg
enter
std
das
mov
mov
loopne
jecxz
adc
cli
mov
call
movsl
ss
scas
orb
int
jbe
mov
mov
jbe
push
adc
add
xor
mov
mov
fs
mov
inc
cmpsb
inc
pop
fs
add
sbb
test
les
out
leave
in
das
push
xchg
hlt
sti
jo
push
fsts
mov
out
sahf
mov
mov
lods
das
lds
mov
pop
or
hlt
jmp
push
bound
mov
movsl
dec
in
icebp
push
or
ds
mov
das
test
xor
sbb
dec
mov
xchg
sbb
dec
clc
jp
mov
mov
jbe
mov
fimull
int
or
xchg
xlat
in
sti
outsl
add
jp
aas
sub
dec
and
neg
cli
inc
aam
pushl
mov
sub
jb
push
add
cmp
ret
ljmp
outsb
inc
pop
sub
or
lret
add
sbb
or
frstor
pop
or
dec
xor
push
dec
lds
je
xchg
daa
jo
dec
xor
cmp
dec
push
inc
out
mov
arpl
ret
into
ja
jp
push
sub
fmull
pop
je
out
push
xchg
andl
inc
cmpsl
add
aas
jl
add
pop
je
pop
fmull
xor
rcrb
jmp
shlb
push
fwait
pushl
adc
sub
push
lahf
sarl
dec
lret
adc
in
mov
push
imul
mov
imul
sbb
fistl
push
xor
aam
stc
add
or
ljmp
mov
test
push
adc
mov
push
sub
scas
je
adc
jmp
xchg
test
stc
arpl
xchg
jl
in
xorl
into
repnz
imul
inc
aas
sti
inc
add
jae
cmp
cwtl
cli
test
stc
lds
lea
jb
imulb
popf
jne
cld
test
ret
sbb
out
bound
xor
sahf
insb
and
sub
out
out
push
jg
loope
push
xchg
or
std
imul
xlat
int
pop
adc
jp
cmpsl
push
rclb
lock
push
call
ljmp
jge
add
dec
pop
pusha
je
mov
in
addl
icebp
and
in
cmp
add
xor
cwtl
push
or
jmp
push
cli
mov
sub
dec
popf
shll
inc
mov
fs
test
sub
in
popa
jnp
ja
lods
sub
mov
dec
mov
cmp
adc
mov
xor
fcompl
mov
add
xor
push
cltd
arpl
xlat
xchg
fdivrs
mov
out
xchg
seto
arpl
or
pop
sub
lret
lock
mov
pop
sahf
push
rol
jp
enter
or
add
jns
aam
movsl
adc
out
sub
sbb
sahf
mov
ret
stos
xor
push
mov
out
add
fisubs
jno
xchg
in
cs
or
mov
and
cmp
outsl
or
test
cmpsl
scas
lock
aad
aas
lods
test
dec
stc
test
loope
push
ret
sbb
ds
pop
out
add
and
out
dec
inc
xchg
or
out
adcl
adc
xchg
push
sbb
pusha
mul
leave
sub
fisubs
lret
and
inc
enter
pop
push
dec
in
push
jnp
push
fwait
jno
lahf
cltd
add
insl
rol
xchg
fisubrl
xor
insb
stc
lahf
dec
mov
rolb
aas
adc
int3
out
sbb
mov
dec
push
inc
lcall
sub
pop
pop
push
or
js
mov
or
out
mov
cmp
mov
in
scas
mov
stos
incl
mov
lock
pop
cs
cwtl
lods
popa
fs
cmp
adc
adc
pop
popa
xor
push
xor
adc
aaa
pusha
push
inc
add
sbb
pop
and
cmp
jg
adc
and
std
rolb
rcll
or
jmp
hlt
mov
dec
cs
mov
xchg
jne
into
mov
loope
add
push
inc
dec
into
adc
fdivrl
sti
shlb
test
int
lret
fistl
lock
aad
nop
out
mov
adc
in
push
addl
mov
sbb
mov
ja
mov
jecxz
and
pcmpeqw
aaa
repnz
cmp
and
and
arpl
sbb
and
ret
cmp
stos
in
loop
dec
sub
push
je
imull
loop
in
das
mov
inc
push
mov
inc
subb
push
xchg
push
push
test
andb
test
lods
sahf
sub
mov
jp
pop
gs
push
nop
stc
push
sub
lea
or
imul
jbe
enter
mov
ljmp
jae
dec
iret
mov
dec
std
int
fidivs
stos
cmpsl
dec
adcb
push
dec
xchg
push
or
fnsave
dec
jge
xchg
cli
add
add
mov
int3
stos
imul
push
inc
push
add
out
div
fwait
pop
fcoml
aam
add
pop
xchg
aas
xor
sub
cli
or
xorl
cmp
pop
aam
jnp
cmp
in
repnz
push
popf
les
addl
in
repz
sub
or
ss
popf
mov
daa
cmp
insb
int
into
int3
adc
jbe
pop
jg
mov
out
mov
lcall
sbb
inc
and
fmuls
adc
sar
pop
aad
sarb
add
lahf
push
mov
cmp
mov
aas
lods
mov
pusha
sub
imul
fistl
adc
rcrb
ljmp
mov
pop
cmc
push
data16
sbb
hlt
jl
icebp
mov
rcll
and
sti
arpl
mov
xor
dec
fisubl
push
and
jmp
or
shrb
mov
pop
mov
in
mov
repnz
sahf
jp
mov
sbb
shll
cmp
pop
dec
and
xchg
int
dec
push
jbe
jae
test
mov
popf
rcrb
ljmp
adc
jmp
add
mov
mov
mov
cmp
sub
jbe
cmpsb
or
rcr
mov
insl
dec
xor
pop
enter
cmp
aas
jge
cwtl
inc
pop
lock
cli
std
adc
add
outsb
cld
mov
daa
cwtl
mov
pop
leave
out
daa
jg
repz
std
jbe
or
cmp
js
dec
fwait
inc
xchg
jne
push
mov
lods
cmc
in
jecxz
add
cli
push
dec
xchg
daa
jp
pop
inc
mov
jge
stc
jne
cwtl
cmpsb
mov
fwait
loop
inc
and
icebp
lods
push
xor
mov
fcmovnb
cmc
fstl
rcl
jae
orb
andb
roll
fnstenv
lcall
xchg
pop
add
imul
or
push
rolb
and
popa
sub
fcoms
lea
imul
mov
bound
notb
dec
mov
lods
jp
arpl
stc
jbe
fadd
mov
mov
pop
lock
cld
pop
loope
loope
pop
aas
xchg
cmp
lcall
movsb
xchg
gs
xor
or
inc
jns
and
add
hlt
xchg
bound
sub
dec
dec
xchg
push
pop
jbe
jecxz
dec
dec
xchg
outsb
fmuls
insl
sahf
pushf
jl
mov
scas
and
mov
cmp
call
or
arpl
lea
adc
mov
push
sbb
push
mov
pop
cs
adc
jle
jae
pushf
mov
xlat
or
fsubp
imul
outsl
dec
in
or
or
sbb
or
fsts
xor
enter
cld
jb
inc
add
and
movsl
mov
cmc
out
movsb
dec
ljmp
and
push
dec
pop
es
test
jp
rorl
push
pop
test
inc
data16
test
pop
loop
ljmp
enter
dec
sub
lods
xor
jae
daa
inc
inc
aad
ret
ss
cmpsb
aaa
add
add
xor
sbbb
aaa
orl
add
sti
js
in
sbb
insl
sub
mov
pop
pop
push
mov
jnp
hlt
pop
loop
push
mov
ss
add
sarb
fwait
sarb
movsb
or
lret
pusha
aam
imul
sti
lret
xor
xor
repz
push
inc
je
adc
add
mov
and
imul
cwtl
xor
inc
push
je
and
mov
in
test
xchg
sub
jmp
testl
jl
xchg
in
dec
out
pusha
jbe
mov
jno
aad
pusha
xchg
jge
ljmp
cmpsb
aad
std
lods
dec
es
jge
int3
out
mov
xchg
push
test
rolb
sbb
dec
or
fstpl
pop
add
popf
rcl
cmp
lahf
leave
dec
ljmp
dec
jge
pop
mov
loop
pop
sub
imul
repnz
mov
jns
jbe
sbb
adc
push
hlt
test
pop
inc
sub
pusha
adcb
pop
inc
data16
clc
imul
ljmp
adc
jno
ds
adc
xchg
xchg
hlt
mov
jo
add
push
fdivrl
mov
js
iret
lcall
idivl
cli
stos
pop
cmp
mov
mov
lods
push
test
or
dec
pop
cmpsb
ret
divl
leave
jae
pop
add
hlt
and
lret
sbb
xchg
repz
fs
pushf
out
cmpsl
int
push
jg
out
sbb
pop
pop
repz
enter
mov
adc
fwait
mov
in
cltd
ret
je
sub
sarl
jbe
movsl
mov
movsl
push
in
push
or
lret
jl
data16
cmc
add
mov
mov
popa
fs
test
data16
sbb
addl
adc
repnz
pop
inc
gs
or
mov
push
sub
add
je
scas
cmp
jb
jp
mov
pop
add
mov
lcall
in
sub
aas
mov
fisubs
sub
xor
lods
push
jp
bound
insl
imul
jne
sbb
repnz
leave
into
or
cs
cmp
mov
dec
xor
mov
cmpsl
jge
mov
cmp
push
cltd
cmovb
pop
jg
in
fidivrl
jno
lahf
stos
sub
sbb
loop
xchg
inc
inc
lcall
orl
gs
xchg
test
pop
stos
push
jne
xor
sub
cmp
ds
popa
pop
pop
sub
icebp
push
pusha
inc
jp
xchg
pusha
stos
jp
inc
popa
mov
jns
mov
mov
cld
lods
push
adc
push
xor
pop
ds
xor
in
pushf
jbe
outsb
jns
xchg
nop
jg
aas
pop
pop
inc
scas
pop
add
xor
push
into
mov
xchg
rorb
filds
xchg
push
insb
push
sbb
push
and
and
mov
mov
sub
fs
jl
pop
or
aaa
pop
jnp
jge
mov
xorl
pop
mov
push
stos
sahf
pop
sbb
cmpsl
inc
cld
pop
scas
dec
insb
lret
leave
sahf
test
xchg
fs
xchg
lahf
ljmp
adc
xor
fs
fimull
pop
into
ja
inc
cmp
push
mov
jb
pop
jnp
movsb
insl
mov
cmp
test
cmpb
lcall
movsl
iret
mov
or
fwait
xor
and
aaa
sti
popf
fisubs
sbb
pop
ljmp
inc
in
push
sub
pop
adc
pusha
sbb
push
mov
jecxz
sbb
notb
dec
xchg
jb
sub
fldenv
xor
push
ficoms
cmp
aaa
push
mov
xchg
cmp
imul
addb
or
cmpsb
std
and
scas
in
cmp
jmp
push
mov
hlt
mov
add
dec
adc
frstor
jno
cmp
mov
sub
inc
shrb
jl
push
mov
push
mov
shll
ret
dec
pop
and
cmc
xchg
cmp
or
push
and
fwait
ljmp
push
jo
adc
dec
xor
js
out
add
clc
xor
cwtl
int
mov
cwtl
push
jmp
push
loope
fcmovne
pop
mov
and
dec
pop
jmp
mov
lock
xor
out
push
or
ret
scas
cmc
dec
cmp
add
mov
cs
loope
sbb
je
jmp
inc
cli
pop
push
out
xchg
int
mov
push
pop
push
cmp
pusha
pop
rep
sub
lods
mov
dec
inc
in
push
cmp
insb
xchg
pop
xchg
nop
lds
out
xor
xchg
sbb
pop
imul
aaa
sbb
xor
or
cli
mov
or
call
mov
inc
jae
gs
in
daa
sbb
push
shl
daa
dec
mov
outsb
lahf
add
jno
sbb
inc
ret
sub
bound
cwtl
dec
clc
add
jno
pushf
push
and
cmp
fistl
sub
aaa
rol
scas
outsl
push
ds
into
sbb
ds
jmp
and
push
cs
pushf
lods
addb
push
icebp
int
ficomps
jae
or
jp
iret
jno
notb
add
push
mov
sti
xchg
and
or
addr16
jo
into
scas
sbb
ss
std
adc
push
sbb
and
in
pushf
or
js
dec
sar
popl
hlt
inc
add
lret
int
fs
fmuls
xorb
je
movsb
lret
popa
loop
push
icebp
inc
inc
data16
push
inc
dec
arpl
sub
cltd
cs
xchg
in
xor
stos
sbb
mov
xchg
orl
addr16
push
cld
jae
mov
shll
sub
fidivrl
orl
cmpl
rol
test
sbb
scas
inc
adc
dec
loope
in
sub
mov
jae
push
pop
loopne
loopne
inc
mov
inc
das
mov
cmp
imul
rorl
shl
dec
adc
cli
add
inc
adc
movsl
pop
mov
sbb
and
fucomi
dec
sbb
xor
psubw
sbb
mov
popa
inc
inc
addl
xchg
out
cltd
imul
mov
mov
cmp
std
test
lds
scas
in
xchg
cmp
ds
jmp
inc
test
mov
jo
mov
hlt
xchg
and
lcall
ss
mov
jecxz
jl
dec
out
mov
cmpsb
pop
bound
out
pop
cli
jle
jp
sbb
adcl
dec
adc
sbb
ret
mov
rcrl
fstps
lret
fistpl
rol
inc
push
jp
add
add
cltd
cwtl
out
push
mov
test
data16
sbb
add
lock
dec
cli
fsts
test
xchg
mov
test
nop
lods
jl
xor
pop
or
mov
mov
inc
adc
xchg
outsb
cmpsb
cwtl
scas
jg
sti
jmp
pop
scas
inc
clc
pop
pop
add
fisttpl
sbb
jecxz
sbb
roll
shlb
test
loopne
jg
out
sbbb
pop
dec
lods
ss
in
cltd
or
shll
popl
cs
int3
divb
mov
imul
int
sub
mov
xor
jge
jne
mov
push
push
xchg
bswap
xchg
shrb
mov
inc
hlt
sbb
jmp
or
xor
shlb
lret
xchg
cli
inc
cmp
cmp
pusha
and
xchg
sbb
test
jae
stc
sbb
mov
nop
rcrl
outsl
ret
mov
inc
gs
nop
mov
enter
sub
mov
mov
ret
dec
sbb
inc
pop
and
out
jbe
xor
lret
cmp
test
cmpb
loope
aad
movsl
jmp
sub
jae
inc
mov
mov
fcmovbe
inc
icebp
add
imulb
sar
cmp
push
adc
stos
iret
movsb
xor
addr16
jmp
xor
and
mov
inc
or
enter
fldl
jno
sub
mov
or
push
std
mov
in
pop
dec
inc
enter
adc
test
daa
mov
sub
push
xchg
xchg
ss
mov
ljmp
in
lock
popf
xchg
mov
dec
fdivr
xcrypt-ecb
cmpsl
dec
push
sbb
data16
shrl
and
adc
insb
lock
pop
leave
out
push
jo
jle
hlt
pop
ficomps
mov
push
out
pop
push
clc
int3
iret
mov
adc
xor
push
and
in
mov
mov
or
mov
jecxz
lods
fisubs
inc
in
cmp
mov
test
fnstcw
sub
dec
push
stc
sbb
movl
icebp
xor
mov
jg
xchg
mov
clc
mov
bnd
xchg
cmovb
js
or
add
sbb
mov
sti
sarl
das
push
out
sbb
fdiv
xchg
and
jns
out
sarl
pop
xor
pop
push
loopne
insl
and
rcr
rcrl
mov
ljmp
mov
int
rclb
push
jae
cli
inc
dec
pop
in
mov
rorl
repz
insb
out
cmp
jbe
add
push
addr16
pop
inc
sub
lcall
and
jbe
jg
lret
faddp
inc
and
mov
int
in
mov
inc
imull
push
lods
lret
jge
loop
fistl
loop
adc
lds
xor
xor
repnz
pop
ljmp
out
js
fiaddl
in
lret
call
mov
push
add
sbb
ljmp
push
arpl
or
cmpsl
pop
jnp
dec
push
pop
movsb
mov
cld
and
push
mov
lahf
pop
dec
xchg
adc
sub
add
in
mov
push
dec
push
into
outsl
dec
push
repnz
sbb
inc
es
mov
mov
imul
xlat
jmp
sarl
adc
jno
dec
repz
jb
jo
repnz
inc
mov
dec
imul
dec
fisubrl
and
leave
mov
cmp
repz
scas
mov
and
adc
xor
stos
insl
mov
pop
aad
dec
mov
jno
adcl
outsl
out
push
add
mov
sub
aas
sti
mov
push
imul
in
jecxz
out
dec
and
outsb
mov
rcll
mov
fstps
popa
in
cmpsl
xor
sbb
insb
lds
pushf
xlat
cmpb
push
rcl
shrb
ljmp
jmp
sbb
leave
daa
sbb
xchg
and
lret
adc
subl
sahf
cmp
adc
or
pop
inc
inc
popa
test
dec
fwait
in
mov
jg
cmp
cltd
dec
inc
lret
add
cmpsl
fistps
std
mov
cli
out
xor
mov
inc
mov
inc
daa
lods
xor
mov
jp
leave
aam
fnstcw
rorb
xchg
adc
pop
repnz
in
filds
push
mov
inc
sarb
pop
jmp
push
pop
es
mov
sarl
aaa
push
je
add
dec
loope
mov
or
lods
pop
mov
mov
mov
movsb
inc
cmpl
enter
push
add
out
ja
jge
jb
mov
jnp
inc
xor
push
jae
aad
adc
jg
mov
jb
mov
sub
mov
mov
and
hlt
add
inc
inc
xchg
pop
ficoms
mov
mov
sbb
xchg
xor
adc
xchg
fcomp
mov
adc
lods
fmull
pushf
sbb
jbe
jg
out
in
call
hlt
mov
jp
cmpsb
loop
addr16
sbb
cmp
sbb
cvtpi2ps
add
mov
push
jg
shll
loopne
movsb
jno
pop
in
jb
ljmp
stos
sub
or
and
ds
shll
pop
fdivl
mov
mov
mov
add
push
mov
repnz
mov
pop
mov
push
jp
jbe
rcrl
sub
aaa
sub
dec
and
je
rcr
stos
jmp
cltd
shrl
adc
popa
or
outsl
pmulhw
and
push
mov
and
call
sub
mov
rol
adc
mov
int
push
or
dec
jge
mov
jmp
fcmovne
ss
mov
xchg
add
push
or
dec
or
and
js
xor
adc
mov
int3
add
out
jle
fs
aas
pop
push
inc
pusha
clc
mov
stos
les
push
xor
xor
jmp
iret
aam
add
mov
xchg
je
jne
lds
mov
test
fiaddl
add
jecxz
inc
pop
pushf
push
outsl
cld
pop
data16
cmp
lret
ljmp
stos
add
insb
cmp
jl
shrl
pop
mov
jo
inc
nop
jne
sahf
inc
daa
out
mov
xchg
mov
dec
sbb
jp
icebp
addr16
test
in
and
loop
pop
cld
adc
sub
jae
rclb
fistps
faddl
fdivrl
cmpsb
push
jne
adc
loopne
sub
add
mov
jp
and
sub
aaa
push
iret
inc
mov
adc
pop
jae
jne
dec
ret
jno
clc
out
mov
out
inc
sar
sub
testl
cmpsb
sbb
jns
out
fldcw
xchg
push
dec
repz
fidivs
push
std
push
dec
sti
sub
and
pushl
out
sbb
in
mov
mov
stos
stos
and
stos
out
std
cmp
add
test
cmpsl
loopne
int
fwait
xor
gs
mov
call
movsb
outsl
fs
imul
xchg
push
add
mov
push
loop
mov
js
add
sbb
and
sbbl
inc
mov
and
pop
jl
cmp
stos
jns
add
sarl
cld
ret
stos
js
clc
or
pop
lret
mov
mov
cmp
int3
mov
fsubrl
aad
pop
inc
xlat
fwait
aas
xchg
ret
mov
xor
mov
pop
lahf
pusha
adc
cmp
std
fsts
xor
pop
push
leave
adc
in
mov
test
add
rclb
das
mov
test
mov
bound
outsb
sub
cmp
das
adc
lods
fwait
jne
cmp
roll
fsubs
enter
pop
lods
idivl
jnp
push
test
mov
xchg
jne
aad
sub
cmp
inc
sub
add
jmp
xor
push
mov
jg
es
mov
mov
rorb
mov
pop
rcrl
in
mov
dec
cld
pop
jge
in
jmp
divl
pop
fwait
lock
cmpsb
out
add
adc
xlat
xchg
les
or
mov
test
lret
call
inc
or
daa
and
lds
mov
rolb
fldenv
adc
mov
jecxz
xlat
add
movsl
stos
pop
adc
ds
sub
mov
jns
or
sub
adc
mov
xchg
les
push
fildl
dec
mov
push
sbb
push
dec
pop
xchg
mull
inc
pop
mov
add
lock
add
fprem
adc
sbb
jnp
ja
outsb
inc
fistpl
mov
xchg
test
mov
fwait
dec
cmp
jecxz
std
inc
xsaveopt
xor
cmp
push
data16
pop
js
leave
aas
mov
ds
push
jbe
xor
daa
pop
sbb
ss
cmp
sbb
cmpsl
jecxz
jmp
inc
jno
cltd
aaa
push
sub
xchg
xchg
in
xor
sub
jae
loope
dec
loope
repz
je
push
inc
dec
sub
mov
popa
rorb
pop
pop
andb
sub
push
jp
push
in
push
xchg
notb
imul
and
push
push
add
rorb
daa
scas
or
in
in
dec
cmp
mov
mov
xor
stc
push
jg
mov
call
sbb
out
rclb
out
inc
cmp
mov
dec
dec
dec
fwait
jp
fptan
dec
adc
cmp
lea
test
push
adc
xlat
xchg
mov
call
and
shll
pushf
push
or
jns
nop
repz
jo
js
lock
and
ss
in
xchg
scas
push
inc
and
int3
mov
mov
cmp
in
sub
cli
stos
arpl
loop
std
cmp
fisttpll
icebp
pop
cmp
xor
add
push
test
xchg
ds
hlt
int
sub
aaa
sbb
jle
add
ds
or
mov
cmp
mov
arpl
sti
shlb
ss
mov
jae
mov
dec
fdivs
mov
ja
xchg
cmpb
hlt
fdivrl
mov
cmp
adc
or
and
pushf
sbbl
jo
cmp
mov
hlt
push
stos
cs
in
adc
or
ljmp
sub
fisubrs
xlat
rcl
hlt
mov
icebp
movsb
pushf
adc
cmp
xor
xchg
push
xchg
jne
aaa
xor
pop
xchg
inc
push
dec
mov
stc
cmc
scas
jo
mov
dec
pop
pop
insl
pop
pop
fsubrp
dec
jle
fisubs
jno
xor
lahf
adc
xchg
pop
int
inc
jb
mov
adc
mov
and
stos
ss
or
add
movups
dec
mov
jmp
shll
popf
xchg
cmp
int3
mov
or
das
add
or
cltd
mov
out
shll
inc
bound
jmp
js
or
sbb
mov
fcompl
lods
cs
rcrl
iret
xor
push
loop
in
xlat
push
data16
mov
pop
cmpl
sbb
je
mov
cmp
es
mov
xchg
mov
jnp
jp
or
fs
add
jnp
test
push
je
jne
cmpsl
push
push
adc
ss
shll
xchg
push
mov
in
jle
pushf
add
pusha
dec
pusha
pusha
in
popf
lods
int
mov
imul
hlt
dec
mov
adcb
fs
cmp
and
std
repz
pop
sbb
or
int3
in
fcoml
xor
mov
fld
inc
push
addr16
repz
rol
outsb
ficompl
rcll
dec
or
repz
mov
cli
sub
lds
cmp
scas
jnp
xor
out
add
xchg
in
std
dec
mov
iret
clc
int3
es
push
ljmp
mov
sbb
sub
in
or
repnz
outsb
arpl
cmp
rorb
inc
mov
inc
and
fidivl
xor
enter
dec
shll
xchg
pop
fdivrl
out
adc
imul
inc
add
andl
inc
mov
lcall
inc
lods
ret
sarb
mov
inc
and
sub
pop
test
adc
ds
and
mov
sub
negl
and
out
jp
cs
ds
adc
inc
add
stos
inc
and
add
jg
jl
pop
push
xchg
scas
jp
mov
pusha
out
daa
icebp
lahf
pop
mov
mov
pop
jne
out
in
pop
sbb
iret
stos
mov
sbb
arpl
jnp
add
clc
pop
add
inc
pop
movsl
bnd
pop
scas
test
mov
jb
in
adc
jae
cmc
das
sbb
jo
loop
je
sub
push
rorl
cld
das
andl
mov
xor
jg
jmp
pop
test
cmc
add
andl
icebp
shrb
xlat
pop
pop
xchg
sub
mov
repnz
push
mov
sti
fisubl
push
int
jg
adc
cwtl
mov
jg
inc
loopne
mov
mov
xor
mov
mov
push
imul
jns
mov
sbbb
mov
fidivrs
in
push
scas
cmp
enter
pop
push
jg
or
lods
xorb
inc
push
mov
jbe
lcall
lret
push
pop
push
cmpsl
fdivrl
and
mov
xor
xlat
mov
stos
popa
jno
loop
push
movsb
mov
mov
cmp
xlat
loop
pop
xor
inc
push
loope
xchg
repz
inc
adc
cmp
push
push
mov
sub
add
sbb
call
bnd
lods
dec
roll
sbb
aad
and
inc
xchg
jl
lods
repnz
in
dec
sbbb
movl
cmp
flds
into
mov
sti
adc
sub
lcall
dec
adc
jle,pn
flds
mov
add
dec
dec
xor
sub
je
pop
fwait
jge
dec
loope
sbb
aad
mov
pop
push
aas
cld
fsts
shrb
movsb
jecxz
pop
add
sub
out
or
adc
xlat
dec
push
inc
insb
jmp
clc
mov
mov
xor
movsb
inc
xchg
jmp
sahf
push
sarl
and
pop
mov
or
mov
pop
insb
es
loop
imul
nop
inc
fcoml
cmp
jb
mov
jl
repnz
inc
lds
push
mov
xlat
xlat
mov
pop
fistpll
jge
sub
enter
jmp
xor
fbld
fdivs
and
fld
inc
addl
cmp
mov
insb
sti
dec
cmp
jg
test
pop
ja
inc
and
push
movsl
xchg
divl
jmp
testb
rcll
push
js
cmpsl
movsl
xchg
shlb
push
rcll
and
mov
dec
mov
lods
ja
and
in
jb
mov
sub
xlat
sbb
das
jg
push
aas
mov
adc
mov
lret
out
imul
add
test
lods
mov
jp
cmp
arpl
loopne
jo
fsts
mov
pusha
cmp
mov
repz
xchg
add
rorl
fnstsw
xchg
jb
leave
cmp
add
inc
pop
fcmovne
ret
mov
je
divl
stc
hlt
fsubl
xor
imul
test
jg
mov
cmp
cmpl
ret
and
or
jg
mov
popf
sub
xchg
mov
sbb
in
sub
pushf
mov
cwtl
das
js
aas
into
ret
pop
ja
aas
cmp
cmp
jle
mov
mov
cmpsb
test
andl
inc
and
or
push
test
jecxz
xchg
and
int
mov
pop
lods
loop
mov
jge
dec
inc
and
adc
pushf
pop
ret
dec
iret
shl
mov
jmp
js
stos
das
jmp
dec
push
outsl
sbb
insb
ficoml
jne
loopne
lret
push
jne
and
aaa
test
xchg
aas
inc
repnz
stos
das
xlat
jge
loope
addr16
in
pop
cwtl
arpl
or
push
cmpb
mov
scas
push
ss
psrad
xor
mov
mov
push
and
jg
pop
ja
adc
shrl
cwtl
lods
lea
cld
cld
xor
ret
inc
sub
jbe
int
or
mov
jbe
lret
mov
std
xchg
adcl
mov
inc
mov
sub
push
lret
pop
pop
push
cmp
cmc
sbb
movsb
push
ret
repz
cli
inc
inc
cmp
xor
insl
inc
jmp
out
push
int
cmc
stos
jmp
repnz
mov
cltd
cmc
mov
mov
jmp
lcall
mov
lret
test
outsl
inc
sbb
mov
push
xchg
fistpll
adc
cmp
das
iret
pop
mov
push
cmp
in
fstpl
mov
pop
shrb
mov
xchg
hlt
add
insb
loopne
push
dec
mov
sbb
cmpl
mov
sbb
mov
xchg
xor
xchg
cs
pop
aaa
cmpsl
jb
or
cltd
outsb
sub
cmc
sub
jle
inc
add
imul
jae
sti
dec
cld
jg
sbb
mov
mov
sbb
fwait
xor
lods
aam
ret
mov
push
jecxz
aaa
loope
aad
cmpsl
cmpsb
lahf
mov
leave
arpl
mov
push
dec
adcb
jbe
push
mov
sub
adc
test
call
jp
sbb
add
xor
mov
cmp
pusha
les
out
ret
lret
mov
adc
inc
inc
movsl
out
mov
dec
stc
arpl
push
inc
jp
stc
loopne
inc
sub
inc
cli
ljmp
iret
adc
inc
adc
daa
and
test
call
xchg
push
out
inc
jl
adc
pop
addr16
jmp
lea
jge
add
push
movl
jl
adc
aaa
adc
or
into
roll
aad
and
ret
cs
loope
pop
pop
dec
xchg
mov
mov
test
ror
pop
bound
imul
lahf
lock
adc
xlat
adc
outsb
mul
mov
cmp
add
stc
sub
in
test
cmp
sub
or
lcall
add
cld
lret
cmc
push
insl
jecxz
aad
scas
jg
jbe
inc
outsl
adc
stos
xor
xchg
cwtl
fcomip
add
test
decl
and
dec
lods
std
inc
push
jb
or
lret
stc
int
cmpsl
orb
pop
and
mov
data16
xor
mov
cmc
dec
popa
jae
mov
cmpsl
adc
dec
mov
xchg
mov
lock
lcall
sub
mov
cmp
cmpsb
mov
pop
call
cmp
inc
adc
push
xor
inc
lret
mov
fcomip
jb
fxch
loopne
inc
in
das
jecxz
imul
dec
insb
addb
mov
sub
cld
lods
jb
push
fcoml
pop
fadds
jmp
mov
adc
cltd
cmc
out
into
sub
stc
inc
cmc
pop
add
jne
fidivrs
pop
sti
push
rorb
mov
ret
fs
dec
xchg
int3
xor
fwait
cmp
and
movsl
or
imul
sbb
movl
ret
cmpsb
nop
fisubs
test
push
xchg
jae
mov
decl
xor
cmp
lret
mov
adc
fdivs
inc
xor
int3
fidivl
ljmp
push
mov
xor
push
xor
mov
stc
dec
cmpsl
call
das
jbe
int
dec
aaa
in
ljmp
cltd
cwtl
ss
ret
lock
lea
cmc
fsubr
and
jae
jp
loop
pop
cmp
xor
dec
mov
xor
jnp
iret
jmp
push
mov
xchg
xor
jmp
gs
outsl
sub
mov
jae
out
push
mov
add
dec
sbb
addb
and
mov
test
test
scas
jae
push
fildll
pop
repz
mov
cmp
mov
in
pop
std
fildl
add
in
in
mov
dec
dec
cmp
sub
mov
cld
rorb
pop
paddd
xor
shlb
jecxz
and
mov
lret
mov
shrl
mov
loop
cmp
dec
push
inc
int3
test
and
mov
cmp
or
push
lret
pop
cmp
mull
fcomip
adc
add
push
popf
test
jg
test
insl
adc
push
loop
cmp
ss
add
and
sub
rcr
loop
push
bound
jle
push
push
xchg
mov
addr16
mov
add
sbb
pop
test
or
in
push
in
addr16
xchg
cmp
and
push
cld
out
push
ljmp
jno
jle
bound
fisubrs
imul
xchg
cld
out
rol
mov
sub
rcll
ret
or
clc
lret
in
dec
mov
xchg
or
xchg
xor
repz
sbb
inc
loop
andl
xlat
notb
mulb
sahf
and
daa
xchg
adc
jp
daa
sub
nop
push
inc
xor
and
dec
cs
sub
fsubp
adcb
dec
push
mov
lcall
mov
pop
arpl
jle
out
push
scas
mov
pop
pop
inc
pop
ret
sub
sub
ror
insl
or
cmp
or
and
cs
add
inc
sub
jle
or
cmpsb
fsub
rcll
inc
pop
jmp
push
add
mov
inc
mov
addl
test
jp
add
test
and
or
push
fsubrl
gs
jge
ficomps
int3
sub
scas
lock
int3
mov
rorl
mov
in
pop
mov
mov
jnp
stos
cmp
bound
dec
loop
ret
inc
jmp
push
and
std
ret
jnp
int3
push
sbb
dec
sub
pop
or
cwtl
xor
inc
push
push
imul
push
lahf
stos
rcrb
cmp
or
mov
dec
add
aam
out
fwait
shrl
lods
sub
lods
shlb
sbb
mov
jno
mov
inc
int
pop
sbb
scas
push
ficompl
inc
mov
adc
inc
lods
mov
in
inc
mov
in
xorl
xor
les
into
fcmovnu
out
xor
and
sahf
xchg
mov
fs
adc
scas
nop
pusha
push
mov
jp
out
mov
push
inc
loop
pop
xchg
xchg
test
mov
sbb
add
adcl
push
mov
addr16
addr16
add
and
push
push
stos
in
outsb
aas
dec
test
jle
jle
fstl
mov
mov
fsubrs
dec
es
movsb
xor
andl
pop
stc
repz
pusha
mov
mov
or
jge
fiaddl
popa
cwtl
in
cmpsb
outsb
pushf
push
in
pop
cmc
cmp
inc
ja
fstps
cmp
xchg
jge
lea
sbb
jns
fs
xchg
xchg
movsl
loopne
push
je
ljmp
lds
cmpsb
dec
inc
mov
cltd
jl
and
lods
popf
adc
mov
rcr
xchg
jae
in
mov
inc
adc
jb
lahf
mov
call
pop
xor
fimuls
add
lcall
xor
xchg
pop
dec
out
jns
xor
js
stc
push
psubusw
or
ret
mov
ss
cwtl
outsl
insl
cli
pop
or
add
std
sbb
mov
ljmp
and
cmp
cmc
add
cmp
arpl
or
sbb
mov
and
cmp
pusha
push
mov
and
mov
jp
sbb
out
inc
sbb
push
test
push
mov
mov
fstpl
aaa
jne
dec
stc
lea
sbb
std
and
pop
push
ljmp
mov
lret
pushw
rdmsr
sti
loope
mov
leave
or
jg
rorl
fidivs
jle
cmp
inc
adc
cmp
cli
loopne
enter
push
insl
mov
mov
ror
sub
inc
mov
in
out
es
cmp
movsb
pushf
push
pop
sahf
aad
push
xor
lahf
mov
push
jmp
fs
std
lcall
icebp
inc
sbb
xor
in
cmp
cli
ret
xor
hlt
mov
sub
cli
fwait
shlb
sbb
inc
fimull
sbb
out
pusha
cmp
outsb
dec
jmp
cmp
pop
mov
andl
lret
int
jno
stos
popl
lret
out
out
mul
es
adc
pop
loopne,pn
into
or
out
pop
int
out
out
mov
ficoms
pop
cmp
jae
inc
mov
jmp
inc
add
mov
xor
push
out
movsl
lods
lcall
into
adcb
mov
mov
setno
jae
hlt
dec
pop
lret
mov
jp
jae
push
cld
das
mov
out
push
loope
shll
push
jmp
fs
sti
jb
mov
in
cmpsl
inc
mov
sbb
fdiv
inc
sbb
xchg
sti
orb
inc
loope
stc
cmpsb
into
push
sbbb
sbb
cld
aam
and
xchg
push
jb
xchg
popa
push
mov
js
push
mov
pusha
push
sub
into
jns
mov
ss
dec
shrb
jbe
imul
nop
jo
cltd
push
push
jne
daa
mov
fildll
jae
xchg
rcll
push
sub
sub
inc
cmp
mov
and
xor
sarl
cmp
sbb
imul
imul
mov
jo
pop
cmpsl
dec
jae
cmp
pop
scas
mov
daa
pop
xchg
cmpsb
daa
mov
mov
lcall
pop
and
xchg
and
std
push
je
loopne
out
pop
jmp
rcl
mov
hlt
sub
repz
cltd
xchg
add
aad
fnstsw
pop
aad
mov
sahf
fwait
out
pop
push
insb
add
fwait
int3
jmp
jb
cmpsb
cmpsb
push
inc
sbb
popf
jno
pop
pop
cmp
ficoml
out
jle
or
addb
pop
mov
jmp
icebp
add
es
or
fs
shl
pop
out
js
add
lea
leave
sub
std
lods
push
and
aad
mov
bound
sbb
daa
xlat
dec
xor
int
cmp
and
enter
data16
je
mov
mov
xor
and
lahf
gs
iret
jl
sbb
jp
divb
mov
push
call
fistps
vcvttpd2dqy
mov
jae
push
push
mov
pop
insb
in
cmc
pop
je
push
das
imul
pop
mov
push
mov
pop
loope
jp
movsb
inc
gs
sbb
xchg
or
mov
popa
aaa
out
cmp
push
shrb
or
mov
sbb
and
int3
sub
je
fcmovne
push
mov
pop
dec
mov
xchg
xor
adc
push
dec
cmc
dec
sub
mov
call
cmpl
mov
mov
sub
mov
xchg
test
mov
push
mov
fnstenv
insb
xor
sub
test
cmp
aas
adc
test
mov
stos
jmp
push
or
lret
mov
xor
pop
rorb
mov
xlat
ds
dec
in
mov
mov
fdivl
mov
loop
stc
mov
or
gs
mov
cmpsl
push
adc
push
es
addl
scas
and
jl
fldt
xlat
xor
popa
gs
push
adc
inc
popa
divb
pop
pushf
mov
cmovb
mov
ja
xor
loop
js
pop
ret
jno
mov
stos
sub
push
ret
mov
xchg
add
loopne
outsb
icebp
inc
xchg
movsb
fimuls
insl
test
adcl
mov
sub
mov
jmp
arpl
fstpt
xor
mov
adc
test
mov
jecxz
cmc
pusha
push
adc
dec
mov
adc
imul
fs
push
dec
pop
push
enter
shll
andl
push
fcompp
out
jno
rorl
fstps
out
popa
roll
out
arpl
sub
push
sub
xchg
mov
push
xor
lcall
push
ret
inc
push
inc
lods
push
adc
mov
push
mov
fisubl
adc
xorl
mov
leave
jg
ja
add
shrl
cmp
xchg
sub
push
xlat
je
pop
cld
jmp
cs
jnp
loop
js
pop
aas
int3
cwtl
xor
hlt
lahf
lods
mov
out
repz
sbb
mov
or
ds
mov
outsl
push
pop
or
addr16
bound
jne
inc
dec
sub
push
rcrb
ja
das
add
frstor
mov
test
test
hlt
and
pop
jb
movsb
lock
aam
in
fisttpll
loopne
mov
aad
push
xor
xchg
sarl
mov
lahf
push
into
mov
leave
loope
pusha
in
jmp
sub
lret
adc
cmpsb
xor
xor
cmp
int
cwtl
roll
inc
sbb
push
pop
iret
adc
popf
data16
mov
and
fimull
daa
fs
fadds
jp
and
lret
pop
popf
mov
or
fimull
clc
pop
pop
pop
mov
ja
in
fidivrs
add
and
sub
mov
push
add
cmpb
inc
out
mov
lods
stos
ljmp
int3
faddp
or
fs
call
aas
test
dec
and
cmp
dec
jecxz
dec
inc
add
adc
inc
div
cltd
iret
sti
or
rcl
subl
or
movsb
gs
stos
mov
daa
or
lahf
adc
repnz
fbld
cmp
push
and
aaa
mov
and
sbb
sti
xor
js
call
lods
cmp
fldt
rcrl
push
int3
sub
mov
push
mov
dec
enter
pop
xor
inc
scas
and
ret
int
dec
xlat
iret
shlb
inc
push
cli
inc
mov
dec
outsb
sub
out
ja
loope
jno
or
adc
outsb
adc
ficoml
cmp
call
push
pop
and
mov
pop
incb
fistps
mov
jmp
adc
mov
repnz
mov
mov
popa
push
aaa
lock
pop
ret
pushf
fimull
test
ljmp
xor
adc
lods
mov
xlat
or
and
aaa
sub
aas
ss
mov
stc
add
push
int3
inc
in
loop
push
je
sbb
insb
imul
popa
push
cltd
in
mov
mov
dec
cld
imul
lea
ret
clc
das
popa
scas
in
jge
xor
jns
andps
outsl
mov
xchg
fldenv
pop
add
ljmp
int
call
mov
sarl
scas
adc
into
inc
repnz
in
test
xchg
movsb
ss
xor
xor
or
fldcw
je
jbe
push
push
jnp
fnstsw
rolb
push
jae
or
imul
push
leave
repz
insl
sti
pop
ret
into
aas
pop
fcoml
andb
sub
push
xor
cwtl
xor
dec
js
fisubrl
out
push
mov
fcmovb
bound
test
and
fiaddl
xchg
fists
jmp
and
mov
mov
sub
add
sar
push
mov
shlb
xchg
dec
pop
sbb
cmp
jmp
sbb
inc
xor
mov
sub
add
in
push
imul
int
xor
xchg
loope
shrb
adc
dec
int3
or
out
mov
shr
pusha
xchg
cs
mov
es
mov
push
inc
test
mov
xchg
cltd
sub
in
and
push
pop
adc
cmc
xchg
cmc
push
rcr
lret
call
mov
xor
adcl
cli
pusha
xorps
mov
jo
roll
cmpsb
push
inc
xchg
hlt
sbb
inc
scas
popf
rcpps
mov
cs
aas
shrl
add
mov
add
sub
shr
out
dec
sbb
pop
repz
or
cmpsl
lock
mov
cwtl
mov
bound
shrb
or
leave
adc
adc
dec
cmp
xchg
cmpsl
sub
mov
or
xchg
pop
int3
jl
and
fsubl
stos
add
xor
push
fistps
cmp
sbb
push
xchg
mov
rorb
pop
mov
pop
pop
add
mov
sbb
dec
in
sub
and
mov
les
add
lods
pop
pushf
cmp
and
je
dec
mov
xor
or
mov
in
inc
int3
pop
sub
push
sarb
repnz
cmp
adc
mov
sub
pop
mov
push
xorb
paddw
test
lcall
loop
into
cmp
cltd
es
out
aaa
aam
mov
or
rorl
xchg
dec
std
push
cmp
mov
inc
enter
push
ljmp
or
ret
mov
pop
pushf
mov
mov
xchg
adc
out
inc
test
test
mov
loopne
mov
fwait
mov
inc
jb
dec
xchg
jp
das
mov
and
push
dec
shlb
outsl
cmp
test
inc
sub
inc
aad
pop
vmread
ss
paddw
in
add
insb
in
jg
sub
pop
or
xchg
add
pop
sub
cmp
vandnps
fsubl
loopne
ljmp
adc
mov
or
mov
lods
mov
pop
addr16
adc
dec
xchg
ljmp
or
lds
aad
xchg
scas
aas
and
int3
xor
xchg
inc
pop
addb
lods
jnp
jecxz
push
movsb
inc
lds
call
sub
lahf
cwtl
movsb
mov
or
rclb
ja
push
jne
mov
call
cmp
jb
pminsw
lock
and
jno,pt
mov
jae
pop
mov
fistl
outsb
pop
subb
adc
pop
inc
lock
push
out
stc
inc
rclb
pop
fstpt
xchg
stc
sbb
clc
popf
cmc
lods
mov
fcmovnb
push
mov
xchg
lret
cmp
jno
sbb
dec
loope
and
xor
shrb
or
add
enter
test
xchg
and
ja
add
fisubrl
jg
dec
int
sbb
mov
lods
outsb
mov
add
sub
hlt
loop
push
adc
xchg
mov
jmp
sbb
mov
outsb
xor
push
sub
pop
push
pop
js
shrl
mov
or
sub
inc
out
dec
pop
cli
cwtl
in
mov
bound
push
sbb
push
pop
pop
add
outsl
out
sbb
mov
int
ret
or
mov
mov
pop
pusha
adc
rorl
pop
pop
out
test
sub
sub
loop
sbb
sub
xor
fisttps
mov
or
xor
lods
scas
mov
fisttps
mov
adc
cmp
jle
es
mov
rolb
paddsb
sarb
pop
pop
adc
push
lock
jp
hlt
jecxz
shll
bound
add
pop
mov
out
movsl
cmpsb
xchg
sub
int
scas
xor
mov
xchg
or
imul
mov
sbbb
mov
out
out
rcl
sarl
mov
sub
popa
paddb
or
into
sub
cmp
push
xchg
jne
mov
cmp
les
rcr
add
and
push
dec
add
jb
jle
jbe
jecxz
mov
add
fsub
jmp
pop
jge
cmpsb
lods
scas
jb
scas
jno
fistl
addl
cmp
cld
push
in
xchg
or
ret
cmp
mov
arpl
dec
test
adc
mov
mov
jl
in
and
mov
seta
fmul
jp
pop
pop
pop
push
fucomip
ret
ljmp
lret
push
inc
sub
and
dec
mov
push
in
test
cld
lret
push
data16
xchg
lcall
js
jecxz
push
in
mov
divb
pop
cmp
dec
push
call
fisubl
notl
sbb
mov
add
scas
cmpsl
das
inc
aaa
outsb
stc
mov
lods
dec
sbb
sbb
fiaddl
mov
pop
fadd
add
add
fldenv
ja
test
lock
ret
sbb
push
subb
jle
mov
pop
movsl
sahf
push
std
sub
roll
sub
pop
or
pop
and
mov
arpl
sarb
mov
pushf
pop
cmpsb
aaa
stos
add
xor
out
dec
in
jmp
xor
rcrl
jecxz
adc
and
dec
sbb
push
mov
mov
aaa
or
lret
mov
mov
mov
sub
mov
fimuls
popa
imul
out
mov
jno
mov
push
mov
in
lahf
cli
push
jb
loopne
sti
push
fnstcw
mov
push
stos
jg
sbb
push
mov
test
popf
add
sbb
aaa
test
arpl
fldcw
lcall
enter
sahf
mov
and
mov
mov
test
dec
jmp
or
jecxz
xrelease
xchg
pop
xchg
cmc
xor
xor
aas
jg
rcll
mov
pop
mov
dec
sbb
and
sub
lock
loope
lock
jmp
push
add
test
adc
pusha
cmp
cmpsl
or
pushf
or
inc
test
sarl
ljmp
popf
mov
adc
cmpsl
pop
daa
ss
int3
lret
mov
push
cltd
push
lods
jl
add
mov
lret
xlat
lea
push
push
sbb
popf
add
lcall
push
in
and
in
adc
into
mov
out
insl
push
pop
pop
mov
jp
repnz
pop
ss
fmul
add
adc
or
aas
ds
sub
pop
aas
loopne
mov
ss
arpl
in
lret
sub
cli
mov
movsb
or
push
dec
xchg
pop
gs
cmp
dec
dec
fldl
mov
negl
push
jle
xor
in
mov
rorl
lcall
aam
and
mov
cmp
push
addl
xor
mov
mov
jg
cli
mov
inc
fists
mov
push
into
je
mov
jle
das
and
push
lods
inc
bound
push
nop
jno
cltd
movsl
jb
cmc
ret
or
xor
dec
mov
dec
scas
xor
cmp
jbe
sti
fs
std
push
inc
jle
jmp
lock
popf
pop
mov
mov
mov
adc
pop
xchg
and
pop
mov
cli
loopne
dec
hlt
xor
lock
ror
push
insb
mov
push
add
loope
adc
lock
inc
sbb
popf
jmp
es
and
sbb
mov
push
int
out
mov
daa
clc
cmp
inc
push
add
out
pop
das
mov
xchg
mov
mov
inc
shll
ss
ds
aas
dec
int3
ja
add
cli
sahf
xchg
mov
cmp
or
mov
ljmp
out
repz
pusha
out
movlps
ss
lds
or
pop
add
es
mov
dec
push
sarl
cwtl
fimuls
dec
fdivs
jp
xor
shlb
add
and
cli
cmp
mov
adc
dec
pop
cmp
push
pop
gs
pop
mov
mov
imul
movsb
xchg
and
sbb
sub
imul
addl
add
mov
inc
fistl
fstp
mov
mov
ret
enter
jmp
xor
mov
xor
mov
int
pusha
pop
add
imul
cld
fsubrs
cwtl
test
rcll
pushl
dec
out
sbb
pop
in
fnstcw
ja
xor
cmp
dec
jle
dec
inc
mov
add
mov
movsl
adcb
popl
std
div
inc
adc
loope
inc
cmpsl
data16
mov
lock
jnp
repnz
movsb
nop
sub
leave
cmp
rorb
xchg
mov
insb
scas
and
lcall
mov
fbstp
jmp
cmpsl
popa
sub
mov
xchg
pop
outsl
lock
inc
lret
arpl
xor
enter
inc
addl
lock
ja
inc
xchg
cmp
jl
fistpll
shl
mov
add
idivb
cs
pop
mov
shlb
cmp
pushl
jno
popf
mov
push
icebp
cmpsl
aaa
xor
sbb
ja
fdivrs
push
int
and
and
imul
mov
adc
test
out
inc
push
fucom
rsqrtps
ds
xchg
inc
adc
dec
xchg
fistpl
cmpsl
sarb
pushf
stos
clc
inc
fucomi
jns
int
enter
sub
in
xlat
out
addr16
jnp
dec
xor
rcl
movsb
inc
mov
sub
or
sub
out
sahf
mov
es
iret
cmovnp
mov
loop
ja
adc
mov
imul
jle
adc
mov
cmp
stos
outsl
adc
mov
or
jle
sbb
push
lods
stos
mov
insl
popf
and
test
inc
xchg
xor
in
dec
dec
lahf
enter
sarb
mov
jl
movsl
mov
xchg
push
cmpsl
mov
push
inc
popf
lods
mov
ret
push
mov
mov
lods
stos
add
and
cmp
mov
jbe
mov
sbb
pop
cmp
pop
dec
cmpsb
gs
scas
and
pop
cmp
add
mov
aas
add
pop
push
xchg
and
scas
pop
rolb
out
int
inc
jle
popf
fiaddl
call
jecxz
aam
mov
dec
cmp
mov
xchg
fs
cmp
push
cli
popf
mov
mov
mov
sbb
mov
pop
dec
adcb
mov
push
in
sub
add
cmpsl
loop
adc
and
pop
cs
out
add
sbb
imul
dec
cmc
adc
mov
or
adc
lcall
push
push
imul
adc
loopne
jae
pop
arpl
rcr
scas
fcomps
mov
sti
push
sbb
clc
lods
idivb
xchg
and
sti
out
xchg
xor
xorb
jo
sub
push
in
out
mov
fidivrl
cmpsb
aaa
sub
das
scas
mov
cmpsb
scas
test
add
push
nop
aas
jmp
jo
loopne
and
aam
pop
into
add
push
jbe
aaa
push
jnp
push
stos
xchg
stc
or
jo
repnz
aaa
cmp
in
mov
push
fildl
or
inc
xchg
dec
ret
andb
sbb
inc
cmp
lahf
rcl
push
jecxz
idivl
mov
or
adc
jge
fsubrs
jg
std
fcmovnb
stos
xchg
clc
mov
insb
insl
scas
addr16
enter
jns
inc
mov
jge
fcoms
mov
add
sub
testb
ljmp
and
sbb
push
mov
jmp
lock
mov
jne
mov
fnstcw
xor
and
ds
iretw
movsl
call
add
aad
test
sbb
xchg
push
mov
loope
pushf
push
or
hlt
out
movsb
out
mov
cmp
outsb
in
or
xchg
icebp
mov
cltd
ficoml
fldl
xor
xchg
std
mov
adc
inc
jbe
popl
add
cmp
jbe
push
jae
cwtl
xlat
cmp
ret
xchg
ret
clc
fs
in
add
or
jle
out
push
mov
stos
fnstcw
gs
mov
mov
xor
jmp
jge
pop
mov
jb
xor
jb
mov
adc
das
orb
roll
sub
mov
insb
xor
shrb
aas
fstpl
aad
data16
mov
aaa
mov
mov
add
addr16
mov
rorl
and
jp
iret
and
lds
out
jno
mov
and
xor
xchg
sbb
inc
cmpsb
stos
clc
mov
jo
lret
add
cmp
push
sbb
mov
fcoms
mov
mov
out
aas
push
shrb
hlt
test
xor
push
and
bound
jo
cli
lds
xor
in
rdpmc
dec
xor
jns
movsb
sahf
lret
fbstp
addr16
inc
cmpsl
lret
imul
jne
push
xchg
loope
inc
mov
je
pusha
inc
add
lods
and
je
movsl
subl
mov
push
repz
mov
pop
test
xchg
push
std
sub
push
jp
cmpsl
mov
inc
scas
fstl
aaa
mov
mov
xor
add
enter
js
sub
sarb
push
movsb
sarl
inc
add
pop
es
int
mov
sbb
lds
lock
dec
das
adc
xchg
mov
insb
xor
sbb
inc
popf
dec
mov
in
cmpsb
xchg
push
aas
mov
movsb
mov
scas
in
push
or
stos
arpl
push
andl
imul
mov
movsb
or
out
subb
cld
pop
rcrl
insl
cmp
fs
dec
ret
or
push
xchg
push
or
push
and
ljmp
cs
and
xchg
add
pusha
sbb
and
inc
cs
orb
inc
mov
and
or
popa
insb
xor
dec
movsb
and
rorl
push
jne
push
mov
cmp
das
or
pop
inc
cld
test
push
call
insb
mov
mov
jns
scas
pop
dec
aam
sub
sub
stos
jns
xor
addr16
dec
add
mov
or
cmp
mov
jno
scas
and
leave
xchg
outsb
in
dec
jge
call
mov
and
pushf
test
outsb
or
ret
out
sbb
inc
adc
lcall
outsb
mov
in
adc
lds
dec
hlt
dec
xor
imul
pop
jp
inc
xchg
push
fmul
push
call
xchg
jle
or
loop
movsb
mov
fbld
xor
pushf
scas
or
addr16
cli
sbb
dec
bound
xor
jl
jno
mov
jns
ret
sbb
jge
iret
div
test
jg
lods
pop
pop
xor
dec
mov
inc
fsubp
cltd
popf
int3
adc
xor
inc
cwtl
loope
mov
sbb
inc
ss
lock
imul
pop
add
pop
roll
rorb
insb
push
cli
pop
dec
jl
in
mov
getsec
popa
jecxz
lock
jle
std
cmp
dec
data16
into
testl
xor
add
xchg
sbb
add
jns
xchg
rcl
inc
jge
and
mov
in
les
jno
fildl
xchg
test
jecxz
jg
addb
shr
sbb
loopne
enter
cmc
lret
mov
ret
imul
je
fldl
ret
push
cmpsb
rorb
dec
cmp
inc
cwtl
iret
aas
jo
sti
ret
xor
push
icebp
sub
mov
cmpsb
in
ja
scas
inc
insl
mov
push
fsin
lds
cmp
ret
insb
stc
lret
inc
or
jns
ret
mov
adc
cmp
sbb
push
repz
sub
fisttps
mov
adc
cmpsl
lcall
cmp
stos
gs
cmpl
mov
mov
loope
adc
or
lret
jl
xchg
sub
iret
dec
jno
pop
pop
shrb
add
test
test
scas
lret
cmp
fstps
and
aad
fcoml
add
mov
je
push
mov
addr16
pop
loop
ljmp
push
in
xlat
cld
insl
xchg
scas
fcmovu
aam
adc
gs
stos
je
mov
pop
fimull
adc
mov
movsb
adc
mov
push
jbe
push
mov
sbb
fcmovnb
mov
stc
testb
ret
lods
jp
mov
fildll
mov
push
aam
adc
xchg
pusha
xchg
mov
or
pop
jno
jecxz
push
idiv
push
adc
push
mov
or
or
fsubr
in
ret
pop
adc
in
push
cmp
push
jp
arpl
loop
test
addr16
add
pop
xor
insl
ffreep
inc
jp
testb
push
fs
ds
leave
lock
in
clc
ffreep
negb
and
xor
and
cmpsl
and
cmp
dec
push
adc
cmp
pop
push
sti
cmp
sbb
xchg
int3
les
lods
movsl
call
push
pop
xchg
mov
imul
dec
sbb
stos
imul
adc
orb
insb
test
mov
xor
jb
adc
sbb
pop
scas
inc
mov
mov
pop
stc
cmp
dec
test
icebp
fwait
sbb
scas
mov
sahf
out
loope
ljmp
pusha
stos
loope
outsb
and
cmc
pop
jnp
ficompl
or
xor
jecxz
mov
adc
sub
mov
out
std
shrl
adc
rorb
cmovnp
shrl
mul
int3
inc
stos
xor
push
insb
hlt
inc
sti
pop
ds
or
and
gs
data16
mov
sub
mov
in
push
inc
mov
add
xlat
or
xchg
aad
popa
and
jcxz
pop
loop
ret
jecxz
filds
popf
push
dec
loop
add
call
adc
test
xor
inc
mov
cld
js
sti
sbb
cltd
sbb
int
fbstp
pop
aas
in
fsubl
mov
dec
repnz
cmp
push
jb
int
ret
lock
cmpsl
push
mov
sahf
and
loope
jno
in
cmp
add
dec
aad
jle
pop
xchg
pop
xchg
xor
mov
sbb
jnp
shlb
bnd
pop
lret
dec
xchg
push
lret
xor
clc
mov
rcrb
mov
aas
jae
popf
cmp
repz
test
sbb
repz
xchg
popf
add
mov
in
fisubrl
rcll
rorb
outsb
pushf
cltd
cmp
mov
cli
aaa
xchg
enter
dec
sbb
roll
xlat
stos
stos
lret
mov
add
inc
xchg
or
ss
enter
or
fwait
xchg
rorl
ds
out
jle
mov
push
clc
or
loope
jae
imul
call
enter
push
pop
jle
aaa
imul
ss
cld
sub
popa
call
in
xchg
add
sahf
mov
je
and
add
std
mov
repnz
ret
adc
cmp
inc
mov
dec
pop
mov
mov
and
mov
sti
insb
sbb
cmp
dec
xchg
into
adcb
pop
mov
xchg
lahf
cmp
js
mov
aaa
push
dec
cwtl
cmp
cltd
push
cmpb
add
inc
sbb
pop
and
mov
sbb
or
test
cmp
fisubrs
je
aam
lds
stos
sbb
sbb
shll
sahf
cmp
ss
sbb
mov
xlat
mov
sbb
les
add
ret
push
xchg
adc
sbb
test
sub
imul
arpl
clc
in
mov
mov
fisubrs
ja
push
mov
pusha
fnsave
inc
pop
mov
mov
inc
mov
push
push
xchg
test
xor
sub
xchg
cmp
mov
xchg
mov
mov
or
jo
adc
or
sbb
pop
mov
pop
loope
fdivp
dec
aaa
lds
xchg
mov
pop
push
cmpsb
cmp
sub
aam
cmpsl
bound
xchg
dec
aad
jno
dec
pop
push
inc
int3
jo
test
lods
sahf
fistpll
and
sbb
pushf
movb
inc
lahf
jp,pn
lods
lret
lods
lret
cwtl
sbb
jmp
gs
jmp
clc
xchg
scas
xor
jp
mov
xchg
mov
test
dec
stos
xchg
out
sbb
test
add
push
jp
or
pop
jne
add
lock
sbb
fs
test
js
outsl
push
xor
jp
negb
add
popa
jg
adc
movsl
mov
insb
pop
repnz
lret
mov
or
mov
jl
mov
push
jge
in
jae
notl
mov
dec
addr16
push
xchg
aad
nop
mov
push
out
loope
pop
lcall
popa
sub
mov
push
cld
clc
daa
lods
popa
les
pushf
mov
push
pushf
aas
jno
inc
jno
int3
int3
shlb
adc
sbb
rclb
ja
sbb
add
lods
xor
enter
and
add
xorb
or
mov
xor
mov
sub
and
shll
imul
negb
mulps
mov
xor
sarl
or
adc
push
loop
jg
inc
dec
jb
xchg
stos
mov
movsl
sub
or
push
js
test
fucomip
add
imulb
dec
add
fmull
ret
and
bound
dec
test
xor
mov
push
and
les
sbb
repz
inc
inc
repnz
add
in
mov
jg
adc
xor
xor
xchg
mov
mov
jl
mov
pop
adc
aad
add
push
es
xchg
cmp
int3
mov
push
mov
adc
rolb
sti
xor
scas
or
lock
cwtl
dec
push
cmp
xor
fimull
mov
pop
pop
aas
add
pop
test
xor
rcll
ja
std
popf
cmpsl
jp
dec
mov
cmp
push
mov
inc
cwtl
sub
xor
lcall
dec
std
jecxz
repz
gs
lods
nop
or
jno
addl
sub
push
insb
sahf
pop
dec
daa
inc
mulb
sarl
cltd
cwtl
mov
adc
ret
cmpl
pop
loope
cmp
sti
push
cmp
xchg
xor
jnp
js
fsubs
cwtl
lods
mov
and
xchg
ficoml
dec
fs
push
mov
stos
stos
push
test
or
std
or
dec
mov
or
lahf
adc
push
out
or
loope
pop
dec
js
adc
inc
or
call
mov
push
mov
outsb
movsl
cli
push
cwtl
roll
inc
jne
mov
jo
sbb
in
and
pop
inc
gs
cmp
and
dec
inc
pop
jne
adc
inc
xchg
mov
mov
cltd
pop
shrl
cmp
cmp
ret
cs
popf
xchg
sub
fs
insl
iret
jecxz
inc
mov
stc
jecxz
sbb
aam
jns
mov
mov
dec
aaa
mov
mov
loope
lret
fldl
jns
repz
dec
cltd
sub
cs
cmp
jecxz
std
inc
cld
push
xchg
loopne
stos
mov
and
in
es
dec
stc
xlat
jl
cmpsl
pop
mov
push
sub
jne
sub
xchg
jmp
iret
cwtl
pusha
push
add
adc
int
ljmp
test
cltd
addr16
dec
mov
jecxz
insl
icebp
adc
mov
lea
test
cmp
in
in
in
aad
fsubrs
push
pop
fstl
popf
icebp
repnz
bound
shrl
xchg
xchg
xchg
dec
sahf
in
das
addr16
fwait
loopne
or
pusha
mov
pop
jle
ljmp
daa
ja
orl
jno
mov
int3
sbb
mov
sub
xor
js
xor
pop
jl
mov
lahf
xor
mov
mov
out
xor
in
shrl
add
repz
cmp
lods
orl
lods
cwtl
sub
mov
xchg
xchg
adc
stos
sub
jae
gs
and
aad
pop
sahf
mov
adc
jns
inc
cwtl
jnp
lahf
add
xchg
ja
xor
jmp
and
loop
cltd
fs
popa
mov
push
jno
and
and
cmpsb
popa
pop
xchg
xor
cmc
dec
orb
lods
test
xor
out
xor
ja
sbb
in
flds
ret
loopne
push
pop
aad
mov
test
xorl
daa
imull
cmp
dec
mov
imul
add
ja
mov
scas
pop
push
pusha
out
mov
ss
xchg
lret
outsb
negb
dec
cmp
add
clc
bound
icebp
push
test
fisttpl
push
jge
cltd
add
icebp
enter
add
mov
mov
or
jne
add
rol
sti
mov
add
fiaddl
mov
xchg
fdivl
and
stos
imul
xchg
test
xor
dec
icebp
add
jge
addr16
mov
mov
jbe
xchg
or
cltd
or
mov
jmp
mov
les
idivl
push
fcoms
jl
rclb
push
xor
inc
mov
data16
ret
pop
pop
in
adc
mov
addl
push
mov
adc
lret
cmc
xor
add
mov
and
filds
lcall
and
inc
cld
sbb
cmp
xchg
xchg
insb
lret
lret
and
mov
pushf
lea
sub
ja
fsubrs
and
bound
sbb
cmp
das
in
in
xchg
push
dec
add
push
loope
rol
in
xor
push
xchg
cs
adcl
int
sbb
ss
push
xchg
xchg
mov
xchg
outsb
data16
dec
mov
int
out
mov
cmp
mov
inc
outsl
fwait
rcrb
jae
imul
adc
inc
mov
push
pop
xchg
or
sbb
mov
scas
add
inc
clc
jne
dec
test
mov
cmpsl
orb
xor
out
arpl
mov
icebp
and
pop
mov
xrelease
ljmp
push
jge
out
popa
add
jne
jnp
cmpsb
adc
fdiv
inc
sbb
insb
xlat
cmp
stos
lret
dec
adc
cmp
cmpsl
and
stos
bound
lret
add
mov
scas
test
pop
pop
mov
or
pushf
mov
mov
lods
adc
mov
xor
xchg
pop
das
repz
jge
dec
int
out
leave
mov
out
lds
or
mov
insl
add
sbb
cltd
and
and
xchg
sarl
call
int3
je
dec
stos
pop
xlat
push
inc
lock
repnz
jo
mov
jg
imul
and
lret
push
sbb
mov
lock
std
push
inc
daa
fmuls
xor
and
icebp
cli
or
xlat
inc
pushf
lret
and
lods
mov
xchg
stos
imul
cmpsl
fimull
push
cmp
and
addr16
cmp
and
stos
fidivs
pop
mov
mov
aas
cmp
jle
enter
enter
jnp
cmpsl
xchg
xchg
push
and
push
xor
hlt
push
fmuls
out
outsb
fstps
lea
mov
jae
test
ljmp
pop
shll
jae
mov
rep
arpl
icebp
cmp
cmp
mov
mov
pusha
in
ficompl
xchg
mov
sub
pop
loopne
pop
adc
repnz
inc
dec
adc
sub
lock
and
es
mov
aam
sbb
data16
outsb
inc
jb
ret
or
cmp
fs
out
rclb
testb
push
repz
aaa
add
daa
jbe
inc
negl
jae
mov
hlt
pop
dec
js
sbb
out
aam
jg
cmpsl
in
testl
movsb
adc
xor
clc
aas
dec
movsl
ss
push
jbe,pt
pusha
int
mov
adc
pop
and
lock
and
mov
mov
jg
mov
roll
testl
jg
jnp
mov
repz
movsb
clc
jo
sub
movsb
hlt
jecxz
loop
push
pop
add
jp
mov
or
les
fdivl
stos
frstor
imul
js
test
mov
ficoms
mov
int
movsb
inc
pop
dec
push
enter
cmp
mov
fcoml
sbb
jnp
push
fsubrs
das
cmpsl
clc
das
aaa
push
into
adc
hlt
mov
push
add
cmp
out
mov
in
pop
je
stc
pop
inc
pop
and
cmp
mov
pop
loopne
fldt
add
addb
repnz
mov
fcomip
pop
pop
and
and
jns
ret
fwait
pop
jb
fiadds
dec
mov
in
adc
cmp
dec
pop
cmp
inc
dec
into
xor
sub
loope
push
jnp
std
lds
jnp
pop
out
cwtl
loope
xchg
movsl
cmp
pop
cld
sbb
test
imulb
lcall
fs
adc
xlat
mov
inc
pop
xchg
xlat
filds
lahf
inc
pop
pop
mov
in
or
push
jmp
daa
add
fsts
push
pop
aad
andb
popa
inc
das
idivl
mov
jb
nop
ss
dec
and
add
cmp
sahf
outsl
outsb
mov
imul
cmp
testb
mov
push
sub
push
int3
pusha
pop
inc
fsubrs
scas
dec
enter
jp
movsl
and
pop
js
aas
je
lds
enter
mov
fs
adc
cmp
mov
stos
mov
sahf
jo
xor
sub
xor
push
xor
sbb
mov
fwait
sbb
into
insb
sbb
aam
lods
push
scas
jecxz
repz
movl
out
xor
aam
push
push
imul
outsl
xor
aas
lock
notl
and
cwtl
enter
pop
test
rcrl
cwtl
xchg
push
je
arpl
fwait
das
rolb
rorb
sbb
cmp
dec
into
scas
xor
aad
push
in
xor
push
mov
js
mov
cwtl
xchg
inc
adcl
mov
jno
or
sub
xchg
popf
cld
shrl
adc
shrl
sub
xchg
mov
dec
pusha
cmpsb
aas
pop
cmp
pop
mov
cmpsb
ss
and
hlt
rolb
inc
fwait
dec
xor
sub
repz
pop
mov
mov
xor
and
int
cmc
adc
add
mov
stos
and
push
ljmp
pusha
sub
cmp
xlat
je
loope
lods
decb
lods
out
dec
mov
loop
adc
sarb
push
imul
sub
mov
outsl
jae
ljmp
sub
dec
sub
outsb
rcl
pusha
out
cmpsb
mov
sub
rclb
dec
mov
sbb
hlt
pop
movsl
cmpsb
jbe
test
jmp
in
lret
int3
insl
ja
xchg
ret
iret
popa
mov
pop
inc
xchg
pop
jae
and
loopne
idivb
mov
mov
adc
dec
jle
cmp
dec
in
sub
cmpsb
cmp
inc
pop
scas
jnp
xor
mov
ds
or
mov
mov
adc
sub
stos
mov
jmp
mov
vandps
jmp
inc
fidivs
in
or
pop
in
sub
icebp
xchg
jle
mov
mov
fcmovnb
neg
test
outsl
and
pop
xor
ljmp
xor
mov
push
and
jmp
mov
pop
lock
bound
out
add
dec
cmp
xabort
push
pop
pop
mov
movsl
push
mov
pop
mov
rorb
enter
lret
pushf
mov
sbb
jge
cmp
cmp
inc
mov
xor
inc
adc
outsl
arpl
push
mov
adc
cli
fstpl
int3
dec
test
es
mov
mov
push
and
mov
adc
clc
xchg
push
push
xchg
cmpsb
inc
std
insb
xor
pushf
adc
jmp
sub
aas
scas
xchg
ds
pop
sub
push
sub
pop
cmp
xchg
and
test
sub
sub
xor
loop
clc
scas
inc
sub
dec
lock
fwait
dec
push
pop
mov
loop
data16
pop
int
sub
xlat
mov
xor
outsb
ljmp
cmc
maskmovq
idivl
and
fcoms
das
mov
mov
rcl
pushf
jmp
in
mov
adc
scas
add
xor
sub
add
mov
cmp
leave
test
inc
mov
mov
int3
cmp
add
xchg
push
mov
mov
cltd
add
test
jne
stos
out
cli
fld1
jmp
aad
pop
push
sarl
addb
push
add
mov
fcmovnu
and
add
cmp
push
iret
adc
stos
xor
adc
xchg
inc
jl
cld
inc
hlt
sub
sbb
sub
adc
rcrb
add
pop
pop
gs
popf
arpl
pushf
or
mov
inc
mov
push
xchg
mov
mov
mov
sub
sub
and
repnz
pop
mov
fidivs
pop
aam
sti
call
stos
imul
xchg
daa
push
inc
mov
in
push
jo
mov
daa
push
icebp
cmp
pop
sahf
mov
xor
loopne
xor
and
hlt
sub
insb
ss
adc
shlb
mov
test
testb
mov
in
std
sarb
vpackuswb
test
sub
and
sub
mov
mov
in
fldt
lret
mov
int
aas
cmpsb
das
push
enter
popf
adc
add
add
pusha
gs
dec
or
bound
xchg
xor
icebp
mov
cltd
xorb
adcb
mov
sbb
pop
loop
bound
fs
mov
cmc
into
outsb
sub
pop
mov
cmovae
or
adc
mul
dec
ret
aas
js
xor
lods
mov
lahf
xchg
sub
jae
mov
stos
jl
shrb
insl
add
dec
push
daa
das
jg
fiaddl
sbb
sub
fcompl
fdiv
popf
mov
out
fnop
lcall
int3
push
inc
andb
imul
fistps
shrd
adcl
mov
add
or
pop
xor
loop
push
test
sub
cmp
nop
test
xor
push
pop
mov
mov
iret
mov
jne
es
xor
hlt
js
or
mov
fdivrl
pop
insl
mov
mov
pop
das
cmpsl
insb
add
stc
inc
adc
or
and
push
int
clc
repz
hlt
inc
cmpb
sub
in
cmc
push
mov
lahf
dec
xor
pop
sbb
xor
inc
inc
jecxz
sub
push
pop
enter
cs
jmp
push
sarl
subb
xor
out
testb
sub
les
repz
mov
daa
jo
call
sub
lock
or
bound
sbb
cmpsb
mov
inc
mov
or
push
mov
mov
loop
lret
or
icebp
mov
xchg
xlat
cmpsb
cs
mov
jnp
andl
xor
mov
mov
inc
xchg
int
inc
mov
jge
sbbb
xchg
outsl
arpl
push
inc
stc
pop
inc
jecxz
xchg
inc
insl
inc
outsb
clc
aas
xor
cmp
dec
imul
xchg
leave
sub
adc
imul
sub
cmp
or
xor
add
push
cmc
rol
jg
or
stos
jae
sub
and
andb
cmp
sbb
xchg
jg
rcrb
popa
and
push
insb
cwtl
add
jno
out
insb
out
test
mov
repz
push
or
sbb
or
mov
cmc
lahf
pushf
pop
jne
insl
jmp
push
mov
faddl
mov
repz
enter
lret
leave
pushf
out
dec
cmp
stos
sub
lods
cmpsl
jo
dec
pop
fs
testl
mov
mov
xor
int
idivl
push
stc
mov
pop
insb
loop
cmp
mov
nop
lahf
fcomp
js
add
stos
addb
xor
ja
pop
jg
loope
push
std
ficoms
int
sbb
pushf
je
jnp
mov
or
data16
cmpsl
push
xor
int
std
data16
mov
int
imul
cld
out
pop
out
in
jo
or
lcall
out
test
dec
mov
add
xlat
pop
mov
mov
loopne
subl
pop
jl
pop
mov
pop
mov
cmp
dec
iret
nop
fisubl
js
jo
outsl
bound
sub
aad
fcompl
lcall
mov
pop
test
int3
xchg
cmp
mov
rclb
xlat
fyl2x
into
and
cmp
shrb
fcmovne
ss
dec
ficoms
jmp
rcrb
adc
cmp
dec
nop
das
ja
leave
pop
xlat
pop
mov
sti
aaa
mov
pusha
faddl
test
into
push
jne
cmpsl
sub
test
push
shlb
loop
mov
fs
in
xor
pop
jmp
cs
push
lods
xchg
sbb
gs
xchg
repnz
ret
push
js
out
push
fisubs
mov
enter
sbbl
ficomps
fisubl
cmp
int3
mov
mov
loope
pop
xor
or
mov
fcoms
or
leave
out
sub
add
dec
or
repz
addr16
bound
mov
fistpl
clc
push
cmp
xchg
stc
mov
jnp
and
mov
fsubrs
je
pop
cmp
mov
xchg
inc
hlt
jnp
or
hlt
aam
outsl
mov
dec
clc
mov
cmpsl
pop
stos
mov
add
jo
into
sbb
enter
cmc
push
adc
or
in
jecxz
loop
add
fisttpll
dec
jnp
pop
pop
sbb
sub
les
out
les
dec
sub
sbb
icebp
jl
push
inc
pop
cmpsb
in
push
or
imul
rolb
mov
pop
inc
orl
xchg
sahf
and
add
or
cmp
mov
mul
mov
loop
into
aas
mov
push
in
dec
pusha
out
sbb
in
out
stos
lds
jmp
xor
push
das
xchg
push
rorb
leave
pop
jl
cmp
xchg
sub
pop
incb
shll
adc
aaa
lcall
mov
jns
mov
cs
fucomp
icebp
lahf
jle
push
sub
push
add
pushf
or
mov
repnz
out
test
lods
add
add
mov
les
fdivrp
inc
loop
cmpsb
xlat
cmp
ret
in
mov
and
and
xor
aas
and
addr16
jb
sbbl
inc
loope
outsl
jl
inc
cli
mov
popl
add
inc
loop
lods
ljmp
aaa
shlb
daa
clc
out
shr
xchg
mov
jmp
pop
into
fcompl
xor
cmp
and
dec
inc
sbb
dec
outsl
sub
ret
adc
adc
sbb
movsb
imul
jbe
iret
xor
cmp
test
lea
cwtl
mov
cmp
adc
push
inc
cmp
dec
imul
xchg
jge
mov
inc
pop
pop
inc
out
cs
mov
stos
jns
mov
dec
arpl
and
push
aad
cltd
inc
daa
aam
js
mov
icebp
es
dec
fisubrs
cmp
sbb
inc
inc
mov
mov
into
shlb
pslld
adc
pop
mov
addps
or
loope
loop
cltd
add
xchg
xor
popa
xchg
pushf
repz
ret
pop
jno
sub
inc
stos
cmp
dec
sbb
ret
sub
into
cmp
test
subl
loope
adc
push
lcall
das
push
and
div
adc
push
or
xor
mov
mov
rclb
mov
sbb
frstor
loop
imul
xor
popa
cmc
lcall
lret
rolb
pop
or
lahf
sarl
cmc
or
and
adc
icebp
xchg
sbb
lret
popf
imul
roll
push
std
or
mov
lock
xor
cmp
inc
popa
pop
jb
aas
pop
and
mov
pop
imul
fcoml
mov
xchg
into
pop
adc
leave
jg
or
sub
lds
cmp
add
cmp
fldenv
icebp
sub
out
shl
jae
xabort
cmp
or
jae
aaa
je
sub
insb
lcall
xor
imul
sbb
gs
gs
in
fs
fsubrs
push
mov
fnstsw
xchg
add
leave
push
jb
jl
jmp
adc
sarb
out
test
cltd
test
rcl
imul
inc
xchg
shrw
cli
pop
ss
mov
mov
sbb
fidivrl
pop
or
xchg
call
jne
in
pop
scas
mov
lret
and
js
jns
and
add
adc
xchg
adc
test
loopne
sub
cmp
jle
xchg
xchg
sbbl
jl
fwait
push
test
aaa
xor
popa
cmc
xchg
mov
das
stos
outsb
fildl
pop
sti
outsb
xor
xor
lahf
fcompl
outsl
adc
hlt
adc
xchg
sbb
fcmovnb
add
sahf
subb
fidivrs
xor
add
jge
push
inc
cmp
pop
fbld
push
fdivl
jns
pop
fbstp
dec
imul
add
iret
lret
out
dec
sbb
filds
inc
add
xchg
shrl
into
mov
movsl
out
pop
or
push
data16
loope
aam
cld
clc
mov
leave
push
pop
add
mov
mov
arpl
fmuls
sbb
aas
loop
adcb
mov
lock
pop
xor
adc
push
jmp
xor
mov
add
dec
pop
jp
rolb
add
rcl
sbb
pop
out
mov
fcmovnb
fsubs
repnz
ficompl
cmp
call
and
cmpl
jmp
jbe
mov
push
icebp
cmp
cli
push
inc
out
jo
mov
add
arpl
inc
int3
pop
cmpsl
cmp
ret
jmp
jae
sti
ficomps
aaa
std
aad
xor
es
rorb
jp
testb
jno
mov
push
outsb
out
fs
iret
sbb
out
xchg
xchg
insb
sub
fnstcw
dec
rolb
jae
dec
mov
shlb
clc
mov
fs
cmp
ret
iret
mov
mov
sbb
xor
adc
insl
data16
dec
mov
lock
int
test
jns
gs
movsl
push
xchg
mov
das
cmovs
pop
scas
loope
outsb
pop
pushf
scas
push
andb
call
pop
aas
lods
dec
imul
add
and
cmp
lret
xor
loop
mov
nop
pop
roll
repnz
push
jmp
mov
or
cmp
push
mov
test
cmpsb
std
fcos
cltd
outsl
or
sub
pop
sub
icebp
shlb
aas
inc
adc
add
xor
mov
mov
lds
fcmovbe
pop
and
addr16
and
xor
fwait
sub
push
xchg
xor
jbe
pop
mov
push
pushf
std
xor
xchg
xor
rolb
loope
clc
popf
mov
std
mov
inc
enter
aas
clc
sbb
inc
lds
js
stos
mov
loope
je
jnp
xchg
sub
push
inc
js
xchg
push
imulb
mov
mov
pop
mov
mov
and
out
cmp
add
test
mov
insb
and
mov
push
ljmp
rol
movsb
mov
mov
stos
sbb
cmp
pop
repz
in
in
dec
out
in
daa
xor
notl
pop
xor
int3
pusha
outsb
lea
mov
into
or
xchg
sbb
shlb
ljmp
push
adcl
bound
leave
ljmp
pop
add
inc
aad
aad
cmp
jb
push
sub
ficompl
stc
sbb
push
fwait
lret
lods
push
pop
sub
push
in
and
mov
int3
sub
mov
cmc
lods
mov
mov
lret
pop
inc
pop
sahf
pop
inc
adc
add
movsb
lea
push
jb
out
sbb
add
mov
dec
and
add
and
adc
add
push
imul
ljmp
adcb
dec
pop
mov
cli
sub
dec
bound
movsl
mov
pop
cmc
rclb
mov
push
push
lret
dec
inc
inc
pop
inc
dec
add
ss
shr
sarl
jns
push
or
pop
push
imul
push
sub
sub
out
outsl
sbbb
or
add
les
jno
xchg
int
pop
xor
jns
fmuls
test
fdivrl
adc
add
dec
loopne
mov
fnstsw
fidivs
push
pop
mull
sbb
xchg
aad
push
jmp
and
fisttpll
outsl
aas
or
xchg
cmp
inc
out
xchg
dec
mov
xchg
jge
cmc
jmp
inc
imul
cmp
lcall
mov
cmp
adc
push
imul
sbb
pop
jne
or
pop
and
pushf
movsl
mov
push
pushf
out
stc
lods
mov
cmp
fwait
mov
sbb
pop
in
imul
sub
in
out
pop
pop
out
xor
add
daa
sub
cmpsl
int
lea
mov
stos
xor
insb
mov
jg
mov
xlat
rolb
xor
jae
and
lock
std
scas
pop
and
enter
orb
and
xlat
mov
sbb
fmull
jl
xchg
mov
sub
fnstsw
fstpl
or
les
imul
inc
out
fildll
xor
sbb
push
dec
mov
daa
xor
adc
aas
fst
xor
js
rol
push
cmp
add
add
cmp
mov
pop
dec
test
ret
aad
fcompl
test
into
fnstenv
xor
adc
repnz
jmp
iret
mov
loope
dec
jp
subb
and
jae
into
fwait
and
mov
adc
out
fucomi
mov
jbe
pusha
mov
or
pushf
ss
ret
out
push
movsl
iret
xchg
insb
je
jo
adc
jle
popw
adc
scas
js
fnstenv
rclb
movsl
pop
subb
dec
xchg
lock
push
test
pop
fistpl
lock
jle
dec
lea
push
sbb
js
pop
and
xor
add
inc
mov
ds
repz
mov
call
sub
sub
push
repnz
mov
imul
dec
add
sahf
xchg
sbb
inc
outsb
sub
shl
pop
or
loope
xor
cltd
in
repnz
into
push
cltd
jo
jle
repnz
cmp
addr16
pop
xor
test
sbb
fdivrp
aam
dec
or
aad
dec
and
lock
imul
cmp
adc
jne
movsb
fdivr
movsl
hlt
xchg
das
xchg
les
cli
ret
ret
std
nop
push
in
cmp
xor
stos
xchg
xor
adcb
jo
add
pop
xchg
cmp
cmpsb
aam
bound
sbb
imul
pop
cmpsl
out
stos
mov
rorl
sti
call
rolb
sbb
orb
fcom
int3
mov
mov
aaa
fidivl
mov
fwait
push
or
inc
jbe
mov
lret
push
sub
xor
scas
fs
pop
jge,pn
sbb
mulb
xor
xlat
mov
sbb
mov
pushf
das
mulb
push
scas
jb
cmp
ret
mov
jbe
pop
sub
test
andb
push
push
pop
cmp
push
xchg
fstl
jns
dec
insl
pop
add
inc
and
imul
ljmp
mov
loope
jo
jmp
inc
sar
jge
push
push
ja
xchg
iret
jmp
mov
sahf
sub
cli
ret
arpl
test
cmp
add
push
rcl
xor
mov
jb
hlt
stos
aaa
ret
shrl
dec
or
addl
test
pushf
sbb
push
loope
cmp
dec
mov
std
jle
pusha
call
or
sbbl
sbb
mov
xor
cs
mov
test
cwtl
pusha
mov
pop
movlps
jnp
sbb
movsb
dec
adc
push
fcoml
cmp
andb
xor
and
aam
push
call
add
pop
mov
mov
xchg
loopne
icebp
mov
inc
stc
rcrl
addr16
in
dec
cld
fisubl
das
movsb
push
lahf
loopne
stc
add
jle
adc
mov
pop
jae
out
aad
mov
xor
push
cld
mov
push
insb
or
lods
xor
and
stos
sti
or
push
mov
aas
mov
test
ljmp
stos
jbe
int3
jnp
es
fisubs
loop
ds
jl
in
mov
clc
and
outsl
sub
push
mov
dec
out
adc
imul
ret
out
xchg
movl
sbb
inc
inc
inc
in
cmp
les
jnp
pushf
mov
sti
jg
cmp
pop
fcoml
jl
push
add
inc
repz
mov
leave
mov
sbb
mov
add
adc
das
adc
sub
jbe
lahf
mov
push
dec
pop
mov
dec
je
pop
adcb
aam
adc
test
clc
sub
rcrl
mov
icebp
xchg
leave
shlb
and
js
js
loop
movsb
or
pusha
pshufw
std
mov
pusha
mov
iret
loope
sbb
fisttps
shll
rcrl
das
cmp
je
cmpsl
jge
ljmp
into
stc
js
rcl
xor
mov
adc
mov
cmpsb
xor
es
push
outsb
jae
out
leave
nop
cmc
pusha
in
out
gs
push
test
popf
je
ds
xor
movl
inc
insb
iret
xchg
data16
scas
enter
sahf
adc
lds
xchg
add
sbb
mov
jmp
xlat
mov
jp
pop
sbb
popf
pop
sub
sub
xchg
stc
push
push
shl
push
cltd
aam
cld
mov
jne
jge
jae
scas
dec
xor
push
inc
sub
in
and
or
ds
test
fcoms
je
pop
insl
lods
cmp
fldenv
lods
testl
movsb
pushf
dec
mov
sti
rol
push
push
inc
lcall
xlat
sti
mov
in
jl
dec
or
mov
fisttpll
test
fmuls
cmp
mov
imul
cmpsb
mov
xchg
insl
pop
outsb
adc
xor
bound
pop
jne
lahf
test
mov
xchg
push
inc
xchg
pop
mov
lahf
hlt
dec
adc
xchg
test
imul
xchg
ret
push
fnstcw
jp
cmp
xorb
pushf
mov
sub
rcrl
dec
loopne
adc
frstor
jb
ljmp
mov
dec
lret
mov
and
sbb
jbe
jb
jle
imul
test
nop
mov
add
movsl
outsl
cwtl
and
icebp
push
mov
add
pusha
loopne
or
popa
jge
lret
pop
loope
mov
cmp
mov
pushf
sub
mov
mov
fcompl
call
pop
out
cmp
cld
mov
add
xchg
mov
pop
mov
jb
loope
loope
sti
jbe
fildl
jnp
ficomps
inc
mov
imul
mov
loop
cmpsb
inc
aad
cwtl
jle
add
decb
adc
xchg
cmpsb
jb
dec
lret
cmc
test
movsb
push
out
push
adc
inc
nop
add
les
push
out
lret
aam
cmp
repz
push
nop
aas
pop
xchg
mov
mov
inc
mov
mov
or
xor
test
mov
sbb
mov
mov
inc
sbb
push
add
or
ljmp
jns
add
loopne
mov
inc
dec
aaa
stos
mov
and
stos
pop
sbb
sbb
out
pop
pushf
dec
insl
push
ja
js
nop
add
xchg
jns
int3
xorb
dec
pop
icebp
dec
jae
cmp
leave
shll
subb
xlat
mov
test
stos
cmpsl
mov
adc
add
sub
pop
xchg
push
imul
jnp
test
xchg
fcomi
xchg
lods
addl
push
fwait
adc
subps
and
mov
xchg
pop
pop
aaa
push
aad
int3
jbe
insl
and
adc
or
push
ret
cs
xchg
mov
daa
cmp
xchg
shl
inc
insl
gs
cmp
lock
adc
cmp
dec
cmp
stc
out
lods
call
imul
sarb
mov
mov
or
sbb
enter
mov
xchg
ss
outsl
dec
pushf
insl
jp
add
add
test
ds
jmp
xchg
outsb
mov
mov
stc
jae
rclb
shl
scas
lds
sbb
or
cltd
or
outsl
in
mov
jl
cwtl
xor
testl
and
decl
in
out
xchg
lods
iret
sub
push
popf
ret
xor
jmp
and
pop
jns
and
and
mov
jmp
mov
daa
lret
adc
xchg
shr
add
aaa
enter
pop
adc
lods
jge
jp
ja
insb
popa
xor
inc
push
jb
outsl
cltd
push
rorl
push
leave
fucomi
sub
jno
jnp
add
pop
mov
movsb
and
daa
mov
sub
xchg
jl
aas
fidivl
push
into
sbb
lock
mov
mov
sbbl
cmp
xor
add
ja
shrl
loopne
jo
pop
mov
mov
pop
or
push
outsl
ljmp
adc
dec
cmp
xorl
mov
mov
shlb
aam
sub
notb
in
cmpsb
xchg
add
xor
and
sbb
lods
andps
aam
ss
out
lods
pop
nop
psubsw
outsb
mov
dec
add
xchg
out
or
inc
jb
dec
and
fisttpl
xchg
adc
pop
pop
arpl
cwtl
mov
dec
shll
push
shrl
mov
inc
xor
xor
dec
shrl
das
cmp
cmp
dec
inc
gs
mov
pop
dec
ja
xchg
pop
dec
push
movsb
jl
jg
adc
shl
inc
sbb
insb
adc
mov
mov
loope
adc
mov
inc
pop
insl
ret
and
movsl
syscall
mov
fdivr
mov
scas
aaa
roll
pop
test
jo
pushf
daa
and
stc
rorb
and
mov
aas
outsb
pop
pop
push
outsl
mov
push
jnp
adc
ds
xchg
mov
in
pop
add
jmp
adc
fdivr
cld
sbb
pop
sbb
scas
sbb
push
je
jle
inc
adc
enter
lods
xchg
pop
ss
add
insl
pop
pop
and
jmp
out
mov
enter
pop
in
fisubrs
fildl
lret
in
lahf
out
pop
cmp
mov
das
xchg
outsl
and
mov
and
mov
push
daa
cmp
pop
call
test
or
fcompl
popl
out
hlt
lret
les
dec
loope
mov
das
ljmp
bound
js
mov
aaa
adc
sbb
mov
je
or
aaa
push
push
xchg
push
loope
dec
mov
je
mov
mov
sub
lea
pop
adc
bound
fs
push
outsb
dec
inc
pop
mov
xlat
movntq
dec
call
jo
lea
nop
push
ds
out
xor
pop
subl
mov
fs
push
ljmp
sub
xchg
ds
mov
pop
jns
xor
sub
or
lahf
push
mov
mov
idiv
dec
xlat
xor
jne
push
push
sbb
mov
sbb
lret
fcomps
andl
pusha
addr16
dec
lret
lods
sbb
lods
orb
sub
and
loopne
icebp
adc
cwtl
xchg
rol
push
mov
into
addl
mov
movsb
sbb
imul
cmp
mov
add
bnd
xor
xchg
push
sub
pop
mov
jo
scas
sbb
insl
movsl
cmp
cmpb
pop
inc
dec
mov
fisttpl
inc
outsb
insb
xor
xchg
xchg
pop
mov
mov
jae
sbb
mov
fxam
xor
cmp
jo
ds
cs
sub
insb
xchg
fistps
jns
cmpsb
popf
fwait
mov
mov
pop
test
adc
jmp
jmp
inc
mov
dec
movsl
jl
fcomps
stc
jae
xlat
inc
mov
in
jo
dec
add
test
cmp
ret
mov
rorb
push
xchg
pop
rcrl
lods
orb
enter
push
mov
shrb
repnz
push
add
gs
lock
fcoms
je
stc
sbb
jnp
pop
jp
xchg
inc
or
dec
add
scas
cmp
fidivs
jl
les
mov
sti
rorl
jns
xlat
and
pop
enter
cwtl
sbb
sbb
imul
mov
xchg
cmc
jg
dec
fs
push
ljmp
insl
loopne
test
cmp
push
outsl
and
stos
dec
pushf
loop
ds
lods
jl
int3
push
test
repnz
fucom
pop
cmp
insl
push
bnd
lcall
lea
xchg
xchg
pop
adc
xorl
push
dec
or
mov
lret
aas
dec
popl
popf
in
and
adc
stos
mov
fs
dec
pop
icebp
cs
fnsave
adc
sbb
cmp
pushl
or
rorb
aad
in
das
pop
fs
hlt
ficomps
push
lcall
negb
sbb
xchg
sub
pusha
cmp
inc
lds
out
mov
bound
dec
fildl
mov
clc
cmp
adc
test
cs
adc
fimuls
lahf
xor
scas
mov
lahf
clc
cmp
movsb
jp
je
cmpsl
lret
or
and
lcall
mov
sti
scas
nop
outsl
jns
sbb
rol
outsb
sbb
imul
fdivl
andb
push
movsb
imul
mov
clc
test
fsts
sahf
je
inc
pop
std
lods
push
in
pushf
fsubrp
data16
inc
adc
xlat
mov
outsl
pusha
sahf
fs
ret
lret
sbb
inc
sbb
je
jle
and
pop
cmp
iret
mov
dec
repnz
add
adc
sarl
ja
push
push
jb
arpl
inc
sub
aam
push
in
in
adc
pop
out
bt
push
dec
dec
decb
lcall
mov
xchg
inc
inc
lods
mov
aam
dec
mov
mov
cmp
add
das
inc
jle
and
cmp
cltd
lret
js
lea
outsb
xlat
dec
or
pop
sbb
cmp
popf
je
xchg
adc
and
pushf
push
out
lcall
mov
jp
mov
jmp
push
sbb
mov
popf
sub
mov
or
push
sbb
jl
and
mov
mov
sub
mov
test
mov
xor
jne
mov
aad
jmp
push
xor
rep
lcall
aam
data16
mov
mov
das
cmpb
and
loop
mov
inc
and
mov
out
test
cmp
aam
imul
adc
pop
mov
pop
repz
adc
leave
mov
pop
or
sub
adc
fldcw
dec
sahf
ret
add
lcall
fcmovu
jb
mov
jnp
xchg
insl
inc
imul
stc
idivl
fmuls
loope
mulb
push
cltd
pusha
cmp
pop
jecxz
cmc
mov
inc
jp
enter
inc
jb
xchg
mov
mov
rcr
inc
cmp
fucomi
cmpsl
jmp
mov
int
mov
sbb
cmp
sbb
in
mov
popf
push
sub
lret
cmp
fdivrs
xor
aas
sbb
out
in
cmpsb
inc
cmp
aaa
loope
inc
inc
pop
out
jb
mov
sarb
addb
xor
ds
adc
mov
dec
push
insl
jmp
outsb
and
mov
test
lods
or
xchg
xor
inc
and
popf
cmp
ret
xchg
xchg
jnp
mov
jae
and
scas
aam
or
fistpl
xchg
xchg
xor
mov
lret
scas
push
nop
insb
mov
xchg
imul
push
mov
mov
vpunpckhdq
pushf
iret
adc
icebp
mov
imul
andl
pop
cmp
xchg
pop
push
push
sub
push
push
cli
scas
fs
or
mov
or
and
mov
les
inc
or
xor
das
jns
adc
int3
sti
inc
mov
ljmp
jnp
sbb
shr
cli
mov
test
mov
cwtl
mov
sbb
xchg
push
sbb
dec
inc
mov
movsl
loop
jo
shrb
xchg
add
in
cvtdq2ps
pop
jecxz
pop
movsl
les
cmp
subl
sub
ja
icebp
xor
or
dec
or
ja
cmp
test
inc
popf
xor
js
inc
bound
scas
jbe
int3
pusha
dec
lock
mov
ljmp
cmc
ret
jmp
adc
aaa
loop
push
outsl
pop
aas
movl
pop
add
lcall
mov
int3
or
lea
mov
sbb
rolb
mov
std
cmp
mov
adc
pop
insl
or
jae
push
lds
push
lock
pop
mov
scas
sbb
jecxz
je
bnd
lods
cs
cld
sub
dec
inc
sbb
dec
inc
sub
push
fimuls
sub
mov
push
hlt
xchg
and
movsl
lods
std
mov
jo
aam
or
repz
sarl
outsb
loope
jnp
jne
jnp
cmp
and
in
cmp
imul
fwait
std
mov
push
mov
or
lcall
sbbb
fcmovnu
xor
faddl
mov
clc
push
sbb
sub
adc
cwtl
xchg
and
clc
dec
addl
daa
fadds
pmullw
mov
popf
sub
add
arpl
mov
movsb
push
dec
dec
repnz
nop
mov
xorb
sbb
pop
cli
pop
in
mov
leave
lea
and
leave
sbb
jo
push
jne
lods
inc
or
fsubr
cmp
js
mov
xor
aam
and
push
sub
cli
push
movsl
push
and
in
jmp
data16
cwtl
inc
sub
cmpsb
data16
dec
lea
dec
dec
lcall
pusha
mov
loope
adc
insl
pop
xchg
imul
lret
mov
fdivr
int
outsb
push
sub
xor
sub
mov
lea
hlt
cmc
iret
mov
insb
cld
pop
test
stos
dec
sub
out
mov
mov
aas
fxch
or
mov
stc
jns
pushl
arpl
jmp
and
mov
and
jbe
cmp
fadds
xor
rorb
adc
jo
cmpsb
mov
sti
dec
lock
fnstcw
into
cs
leave
pop
ret
shll
adc
loope
addb
jle
int
xchg
add
push
xor
int
ds
sbb
dec
mov
jg
cwtl
ljmp
xor
xor
or
push
pop
enter
lret
inc
aad
fistl
or
or
stos
cmpsb
jmp
push
xor
add
jns
push
push
and
push
mov
mov
xchg
add
and
pop
adcb
enter
mov
es
mov
pop
sbb
push
add
xor
loopne
and
ret
imul
fdivrl
add
add
hlt
mov
mov
fisubrl
stos
cmp
jo
pop
leave
sbb
into
dec
leave
pop
rorb
into
adc
in
adc
arpl
push
jbe
addr16
aad
jne
xchg
adc
push
jne
jo
mov
xorl
add
mov
imul
xlat
push
and
or
fnsave
xchg
mov
fs
dec
xor
cltd
subb
insl
dec
xor
push
cmp
inc
xchg
or
adc
in
mov
movsl
shl
lods
add
repnz
cmpsb
dec
mov
pop
jae
loop
mov
mov
std
push
cmpl
mov
loop
cwtl
mov
sti
insb
or
cmc
out
xchg
sbb
mov
int
lahf
push
inc
fwait
push
call
imulb
pusha
cmp
fld
call
jp
fsts
fistps
push
stos
adc
ror
cmp
imul
mov
mov
xchg
pop
out
cmp
aas
pop
mov
fidivrl
push
pusha
pop
pop
addr16
ss
mov
xor
cld
aas
sbb
xchg
cmc
push
mov
ljmp
insb
xor
shlb
push
adc
dec
repnz
in
mov
stos
les
and
mov
out
frstor
les
rcll
sub
les
jne
test
add
xor
inc
cmp
in
push
divb
push
imul
jge
in
cltd
in
pop
lret
push
mov
cmpsl
xor
arpl
cmp
cmp
inc
xchg
cmp
sbb
mov
sti
repnz
mov
orb
js
js
imul
cwtl
sub
movsl
pop
push
or
jnp
movsb
mov
jg
dec
pop
mov
popa
or
sub
dec
push
shl
fiaddl
sub
push
fcmovne
stos
mov
mov
mov
sub
stc
loopne
ret
sbb
add
pop
pop
fimull
int
hlt
sub
insb
out
roll
sbb
push
mov
lods
aaa
push
fisttpl
dec
imull
add
nop
scas
je
rcll
pop
lahf
adc
fimull
xchg
leave
and
arpl
aam
xor
loopne
inc
test
std
test
fwait
mov
pop
add
hlt
dec
mulb
add
push
cmpsb
push
push
xor
xchg
fistpl
lcall
xchg
imul
adc
scas
sbb
cltd
inc
xchg
inc
sahf
jne
insb
and
jo
and
call
adc
ds
mov
nop
insb
fs
and
inc
cwtl
adc
imul
jnp
dec
pop
gs
cltd
fstps
adc
lcall
add
mov
mov
sub
dec
push
pop
or
test
inc
stos
inc
subl
adc
in
repnz
dec
xchg
mov
in
leave
mov
push
out
push
inc
jno
shlb
push
in
mov
in
adc
sahf
les
mov
enter
or
and
or
pop
dec
insl
or
dec
push
fisubs
sub
sbb
cmp
insb
adc
aad
sahf
push
sbb
and
loop
mov
add
into
jbe
popf
repz
sti
pop
mov
mov
mov
hlt
mov
aaa
xor
adc
jle
testb
adc
in
sti
xchg
mov
xchg
ret
add
mov
pop
jnp
pusha
xor
scas
push
outsb
pop
lret
push
pop
xlat
out
jae
adc
mov
cmp
fnsave
dec
out
sub
push
loopne
rcrb
test
repz
dec
push
arpl
and
outsl
dec
call
test
inc
inc
add
pop
aaa
les
int3
enter
cmp
inc
bsr
lret
jmp
cld
add
sbbl
inc
sub
int3
fwait
stos
mov
add
in
cwtl
push
mov
xchg
xor
in
test
adc
pop
aam
inc
jmp
or
insb
fdivrl
dec
sbbl
cmp
push
jo
xchg
popf
clc
lock
mov
adc
push
and
test
push
xor
pop
shrb
sahf
jae
insl
xchg
movsl
js
xchg
lcall
pop
incl
pop
mov
sub
add
mov
into
test
mov
dec
lahf
jbe
pop
or
mov
ljmp
inc
lcall
pop
stos
jp
lods
cmp
mov
mov
push
sub
sub
std
mov
and
rcr
out
sbb
ds
sub
js
jns,pt
rol
scas
sbb
sbb
std
ja
jp
repz
dec
jbe
and
fcoms
fisubrs
cmp
jnp
cwtl
imul
xlat
push
push
lods
mov
inc
mov
shl
mov
call
stos
jge
push
jbe
add
mov
aam
das
xchg
mov
ds
push
in
jecxz
xchg
ja
lea
mov
add
fmuls
fistpll
pop
sub
movsl
sub
test
jmp
es
mov
test
xor
add
cmpsb
mov
lock
push
lahf
mov
clc
add
dec
add
dec
mov
cmp
mov
pusha
xor
add
pop
xchg
adcb
xchg
cltd
in
cltd
stos
iret
and
sub
pop
mov
sbb
jl
insl
addl
push
jne
movsl
filds
call
xor
pop
jle
bound
pop
les
and
xor
test
aaa
push
jns
mov
movsl
and
sbb
sbb
lods
pop
enter
daa
lcall
repnz
test
xor
jne
loope
and
mov
or
xor
jo
push
add
pop
add
dec
push
dec
stos
sar
mov
cmpsl
mov
inc
or
dec
pop
and
insl
fnstcw
int
sub
mov
std
jmp
dec
sbbb
imul
cmc
mov
mov
into
adc
jno
test
scas
mov
xor
das
push
outsl
lret
cltd
lahf
iret
dec
call
jg
add
xor
adc
mov
jmp
inc
movl
pop
sub
rcll
mov
repz
adc
inc
sub
das
mov
cmp
call
dec
mov
adc
sbb
sub
lcall
and
addr16
cltd
jmp
add
leave
call
push
ficomps
leave
push
out
pushf
jecxz
lds
cmpb
sub
xchg
fldcw
addr16
pop
repz
inc
fcmovu
scas
xchg
movsl
mov
pop
dec
mov
insl
cmp
sbb
das
arpl
xchg
push
lock
pop
xchg
jmp
xchg
mov
xor
mov
xlat
jmp
push
mov
adc
or
mov
dec
pop
dec
repnz
sti
lret
inc
cmp
xor
inc
repnz
dec
or
dec
pop
xor
pop
dec
mov
cmpsl
mov
int3
fcomip
sub
fwait
jle
xchg
push
ret
cmp
jp
out
inc
push
cld
mov
cli
push
in
push
inc
mov
mov
add
out
jle
stos
dec
outsb
jae
push
jo
jl
mov
hlt
cltd
das
mov
outsl
test
mov
fldl
outsl
pop
hlt
adc
mov
and
out
cmp
icebp
leave
sarb
jne
fiadds
sub
call
les
sti
testl
stos
iret
push
jge
lret
inc
movsb
dec
add
ljmp
jae
nop
push
test
shlb
jo
dec
imul
xor
push
insl
sahf
in
das
cmpb
es
jne
cmpsb
sub
fs
popa
push
fs
mov
pushf
jno
int3
push
fnsave
lock
xor
jae
scas
lock
add
mov
or
mov
pop
cmpb
xchg
fucom
mov
xlat
and
mov
mov
xor
loopne
cwtl
xlat
mov
xor
scas
pop
add
dec
in
decb
jae
sub
test
pop
or
clc
xchg
mov
movl
sbb
loope
insb
cmpsl
push
pop
cli
popf
xchg
les
dec
daa
and
sbb
aad
les
and
arpl
and
int
das
push
decb
mov
xchg
mov
out
cmp
jle
sub
sbb
or
icebp
sti
mov
xor
dec
sbb
jp
inc
mov
sbb
outsb
lds
aad
mov
xchg
xchg
repnz
or
mov
push
xchg
outsl
insb
or
pshufw
loop
mov
mov
aad
pusha
pop
out
loope
cld
outsl
aad
jge
hlt
lea
lods
test
insl
loopne
pushf
cwtl
insl
outsb
dec
test
dec
sub
sub
push
je
xchg
shrb
dec
test
xor
pop
andl
scas
jle
sti
ret
lds
jp
dec
xor
lret
add
daa
mov
popf
pop
xchg
dec
fmuls
outsb
push
push
mov
and
xor
rorl
movsb
mov
jle
lret
mov
das
push
rcr
mov
or
cmpb
js
mov
inc
stos
out
jae
jns
int
fdiv
inc
mov
cli
int3
ret
sub
add
cmpl
test
or
sbbl
add
add
fs
sub
adc
repnz
fcmovb
adc
xor
aad
mov
pop
fcmovu
sub
jne
mov
push
sub
cmp
mov
leave
dec
xchg
xchg
mov
mov
push
ss
and
xor
cwtl
mov
int3
decb
mov
inc
sti
adc
pop
ret
pop
dec
ret
adc
xchg
out
inc
jbe
arpl
les
mov
mov
mov
add
scas
je
ss
adc
rcrb
lret
mov
loope
shll
add
pop
add
pop
or
mov
pop
cmp
js
mov
inc
shl
or
dec
movsb
mov
lret
test
mov
xchg
inc
and
mov
test
push
pop
sub
inc
in
xor
lret
sbb
shrb
jo
idivl
push
ror
lods
cmc
mov
lcall
scas
pop
mov
movsl
push
loop
jb
push
aas
insb
out
aaa
cltd
pop
mov
cmp
push
jge
mov
add
imul
mov
xlat
cmp
jmpw
pop
sub
push
ss
mov
rclb
mov
outsb
lods
jg
push
mov
fdivr
ret
mov
jne
or
cmp
test
loop
jge
stc
test
xchg
mov
cltd
aam
in
insb
push
lods
jb
or
nop
xor
cmp
and
es
pop
sub
outsb
adc
fidivl
and
mov
sbb
test
sbb
mov
sub
pushf
addb
and
or
gs
dec
adc
mov
adc
test
mov
ja
jns
add
ss
jb
notb
outsl
and
xor
idivb
xor
and
cmp
jp
in
mov
cs
shrl
popa
lahf
and
mov
adc
nop
iret
pop
xlat
jne
js
adc
lret
icebp
xchg
test
dec
and
data16
mov
jns
iret
mov
in
mov
ret
push
cmp
les
xor
fsubr
sbb
iret
pop
shrb
hlt
sar
cwtl
mov
sub
mov
sub
lcall
test
testb
xor
imul
clc
mov
inc
fdivl
sub
lock
jns
aaa
roll
inc
add
ret
popa
cmp
stc
mov
inc
inc
cmpsb
pop
mov
shlb
aas
in
xchg
leave
mov
out
sbb
ret
adcb
gs
mov
cld
mov
idivb
push
add
fcomps
shr
in
mov
test
dec
jecxz
mov
lods
mov
hlt
call
xchg
pop
mov
or
xchg
sahf
inc
scas
repnz
xchg
adc
xchg
loope
or
test
adc
lods
xor
or
mov
repnz
or
add
sbb
sub
shlb
in
cmp
fcmovnbe
or
cmpsl
jle
jmp
addb
mov
outsb
push
jbe
adc
bound
xchg
cmp
shll
jno
aam
fisubrl
cwtl
jp
aas
jl
inc
loop
int3
icebp
bound
aad
inc
push
pushf
xchg
mov
sub
mov
xor
cmp
xlat
adc
jnp
fnstsw
push
mov
push
int
enter
fldenv
and
sbb
mov
push
sarb
inc
inc
dec
mov
mov
xor
push
sti
mov
pop
pop
fnstcw
xor
mov
fmul
or
std
inc
xchg
push
pop
fwait
push
cwtl
fsubrl
mov
mov
cmp
cld
mov
scas
mov
rorl
pop
pop
testb
inc
adc
or
push
sub
dec
xchg
loopne
inc
mov
rcr
jge
dec
dec
dec
mov
int
sti
jl
jp
inc
in
or
decl
push
lock
xchg
or
fs
movsb
icebp
inc
pop
ljmp
loop
cmp
addr16
les
clc
mov
inc
pop
mov
outsb
dec
mov
lret
xorl
jmp
dec
xor
shlb
fisttpll
and
test
aaa
mov
jmp
mov
leave
in
add
sub
and
cli
xchg
in
cmp
loope
dec
outsb
mov
mov
dec
dec
push
or
xlat
cli
cld
dec
push
loopne
ret
fiaddl
inc
adc
repz
adc
mov
mov
popf
jae
sahf
pusha
dec
and
adc
clc
js
or
packsswb
cmp
je
pop
mov
mov
dec
scas
out
scas
insl
loopne,pt
mov
dec
bound
xor
rorb
shlb
fbld
cmp
push
testb
push
sbb
adc
mov
jns
pop
jns
jg
mov
iret
pop
adc
adc
int3
dec
adc
xchg
and
inc
incb
cmp
aas
insl
adc
adc
xor
mov
aad
add
sub
cmp
mov
mov
std
in
dec
je
cmp
test
lds
add
std
push
push
scas
mov
mov
incl
fwait
xchg
out
cmovbe
add
sahf
mov
sti
lahf
or
inc
adc
sti
sub
fsubr
aam
testl
andb
jnp
hlt
sub
mov
jb
xchg
pop
jno
mov
mov
fdivrs
outsl
inc
loopne
mov
cmc
into
out
or
push
mov
xchg
dec
push
shl
or
stos
out
push
add
mov
repz
sbb
mov
loopne
lods
cmp
insb
inc
jbe
or
loopne
add
ret
testb
dec
xor
nop
mov
and
out
or
sub
jb
pushf
lret
add
xor
sbb
cli
mov
dec
mov
sub
and
jno
mov
jl
daa
dec
cmp
sarb
std
mov
insl
add
repnz
pop
xchg
dec
jne
and
stc
mov
mov
aaa
lds
mov
out
int3
push
fs
push
test
js
cmp
xor
test
rclb
imul
lock
sti
mov
or
mov
imul
shrb
mov
iret
sub
pop
and
inc
xchg
lea
mov
lea
stc
shll
es
sub
popa
cmp
out
jg
dec
aad
xor
xchg
inc
adc
stc
cmpsl
cmp
push
cmp
or
jns
js
addb
sti
jnp
sbbl
loopne
mov
in
or
imul
dec
fldt
popa
or
lds
aad
cmp
push
inc
dec
shl
leave
cmpsb
fs
aaa
imul
repz
mov
dec
and
and
push
adc
and
lock
add
ficompl
and
fs
adc
arpl
outsb
shr
insl
or
insb
in
and
sahf
outsb
mov
jns
mov
aaa
shl
jecxz
shrl
dec
adc
sbb
jecxz
pop
les
imul
iret
filds
push
fiadds
xchg
loop
mov
cld
test
aaa
movb
cmc
mov
jnp
mov
rolb
sbb
in
sbb
mov
push
mov
jmp
fmull
cld
xchg
aad
stc
mov
mov
fisttpl
and
mov
sbb
mov
and
xchg
inc
pop
dec
arpl
outsl
out
dec
daa
xor
dec
loope
lret
movsb
dec
rolb
push
into
and
mov
cwtl
gs
pop
stos
jbe
cmpsl
out
xchg
sbb
pop
fsubrp
jg
das
rcrl
inc
mov
push
out
lea
ds
pushl
movsb
mov
scas
lcallw
adcb
fistl
scas
push
mov
cli
pop
push
lcall
and
in
inc
popa
fsubl
push
jnp
inc
shl
xor
pop
sbb
scas
mov
xchg
ljmp
mov
pop
pop
movsb
or
fistpl
jmp
pop
jns
add
mov
fadds
repz
jmp
fwait
or
push
mov
mov
push
addb
mov
xchg
inc
adc
mov
xor
xor
arpl
nop
push
sub
mov
ret
pop
cmp
lods
xchg
xchg
arpl
hlt
push
call
inc
xlat
dec
or
xor
adc
jmp
repz
les
call
mov
mov
sub
imul
addr16
test
ja
pop
es
mov
pop
mov
fcmovnbe
sub
xchg
mov
inc
out
xchg
and
outsl
jmp
cmp
orb
loop
inc
or
lret
fildl
test
xor
mov
add
fsts
int3
out
popa
jmp
popa
and
pop
cmp
mov
sbb
inc
mov
insl
movsb
sub
pusha
jecxz
inc
jbe
mov
mov
insb
lds
in
push
push
and
and
aad
or
fwait
inc
pop
pop
outsb
movsl
mov
mov
push
mov
mov
jne
mov
addr16
mov
push
and
cld
loopne
je
repnz
or
mov
test
and
fsubr
gs
daa
je
pop
dec
or
in
sbb
mov
mov
loop
aad
test
mov
out
test
inc
push
stos
repnz
cmc
into
fndisi(8087
pop
push
xchg
ja
icebp
add
xchg
sub
inc
std
mov
jae
or
sbb
sbb
cmp
mov
iret
mov
or
dec
in
std
or
adc
push
repz
fwait
push
adc
arpl
ds
ror
in
sub
fwait
push
mov
stos
imul
inc
and
cmpsb
out
insl
nop
shrb
shrl
dec
addr16
push
pop
ret
cltd
sbb
dec
cltd
aaa
ljmp
or
shll
imul
enter
out
aad
sbb
imul
in
pop
loopne
or
dec
imul
outsl
sub
mov
fdivrl
and
xor
ret
repnz
pop
adc
adc
xor
mov
xchg
or
and
repnz
out
cltd
pop
stc
stc
outsb
addl
rol
addr16
pop
popf
test
icebp
nop
fldenv
push
mov
icebp
icebp
or
pop
cmc
cltd
fdivrl
mov
pop
sbb
repz
mov
imul
xor
sub
xchg
push
sbb
mov
pop
into
xor
lret
out
pop
jae
in
adc
jbe
cld
cltd
enter
inc
fstpl
fnstenv
add
mov
cli
gs
push
xorb
sbb
adc
fidivrs
lcall
sbb
jl
push
adc
jo
xchg
pop
and
popf
push
or
and
icebp
pusha
jge
mov
jle
mov
rclb
lods
mov
int
jle
push
pop
xchg
lret
sbb
cmp
jnp
out
cmpsl
test
inc
or
lcall
mov
jg
das
push
dec
loopne
mov
sub
lods
fnstenv
icebp
cmp
pushl
loopne
subb
jl
rep
mov
push
int
cmp
fmulp
fiadds
xchg
pop
nop
scas
xchg
outsl
xchg
push
ja
pop
adc
inc
or
sub
sarb
push
cwtl
cmp
movsb
dec
or
hlt
xchg
xchg
and
adc
out
lods
testb
mov
jp
pusha
das
repnz
add
ja
insb
rcll
out
pop
xchg
std
int
xor
push
adc
das
xor
mov
jne
or
mov
fbld
pop
lcall
add
jmp
add
xchg
in
repz
mov
add
adc
jnp
out
pop
sbb
sub
subb
adc
into
push
nop
mov
int
inc
sbb
insl
std
stos
inc
xchg
out
lock
push
push
mov
shr
sub
out
imul
jnp
push
fsubl
into
testl
mov
cli
roll
aaa
xchg
mov
mov
mov
pushl
adc
sub
mov
pop
or
inc
roll
rclb
das
and
jmp
andl
icebp
push
loope
cmc
loope
lods
ds
adc
mov
mov
cmpl
xor
roll
int3
lret
scas
test
pop
das
stc
or
sbb
pop
cmpsl
dec
pop
and
sbb
pop
ljmp
arpl
lods
mov
mov
mov
lock
mov
ljmp
adc
jnp
mov
jmp
ret
sarl
sbb
inc
into
xor
int
nop
sub
ret
inc
fbld
scas
hlt
movl
cltd
mov
adc
subl
loop
je
mov
sarb
adc
je
ficoml
mov
decl
mov
popf
leave
das
dec
repnz
mov
sti
shll
ret
mov
cmp
jmp
xchg
sub
int3
mov
shrb
imul
cltd
and
sbbb
fists
cmp
lods
test
jmp
push
fistps
sub
stos
lret
pop
clc
shrl
mov
inc
inc
jo
in
xor
mov
adc
and
and
cmpsl
in
mov
rcll
imul
aam
imul
cwtl
es
or
iret
and
mov
adc
fwait
mov
fsubp
add
in
xchg
fimuls
pop
mov
add
xchg
out
insb
addr16
lods
xchg
outsb
sub
in
pop
jl
xor
mov
aaa
or
shll
add
stos
addr16
pop
xor
xor
cmp
cmp
jns
jne
enter
jle
inc
mov
mov
sbb
pop
jb
mov
in
dec
push
and
dec
sub
mov
out
out
mov
scas
pop
or
pusha
xor
lds
loope,pt
or
je
xchg
dec
cmc
xchg
dec
xchg
cmpsb
dec
mov
testb
cmc
and
dec
fists
test
dec
pop
hlt
jno
adcb
rorb
stos
fnstsw
xchg
in
ss
cld
lret
pop
outsl
push
or
adc
hlt
push
dec
insb
je
dec
addr16
add
adc
add
xor
push
ds
mov
in
or
in
xor
cwtl
add
rclb
mov
pop
inc
test
stos
lock
dec
push
or
idivb
jns
jne
sub
movsb
movb
dec
lock
push
push
xor
fisttps
jnp
mov
in
push
pop
inc
cmp
int3
sub
dec
add
xchg
mov
mov
je
pop
inc
xchg
push
cmp
outsb
inc
push
cmp
cmp
jb
jbe
lret
mov
push
mov
mov
and
inc
in
adc
xchg
out
xchg
lods
mov
lock
ja
sbb
rolb
pop
sbb
adc
add
mov
aaa
out
or
rcll
sbb
lock
cmp
xchg
sbb
movsl
mull
fildl
jno
pop
outsl
in
lcall
sub
mov
pop
les
rcll
mov
aas
xor
nop
scas
jb
or
mov
pop
jno
adc
jns
cmp
inc
and
ret
movsl
lock
cmpsl
leave
mov
xor
cmp
ljmp
in
jno
fwait
push
add
cmp
mov
and
sbb
sbb
pop
mov
out
sbb
xlat
sub
test
in
mov
aaa
jp
subl
jnp,pn
mov
push
sub
shrl
in
mov
call
dec
iret
les
sbbl
icebp
fcmovbe
jno
mov
in
std
jo
mov
or
inc
aas
rorl
inc
jnp
rcl
data16
mov
lret
aad
sub
sub
pop
inc
ret
jb
xor
sti
dec
mov
and
add
sarl
in
mov
bound
ffreep
iret
lods
shlb
push
adc
repnz
cmp
rorb
adc
insb
lret
pop
adc
inc
stos
mov
xchg
mov
je
inc
test
test
dec
mov
jmp
std
daa
loop
xor
sbb
insl
fiadds
xchg
pop
int
push
add
cmpl
js
adc
xor
dec
mov
cld
hlt
push
sbb
mov
das
pop
push
or
jo
mov
push
cltd
push
inc
cs
mov
fadds
mov
xor
mov
cs
sti
imul
mov
and
xchg
jmp
shl
xor
ds
xor
pop
mov
loope
mov
jns
xchg
dec
push
dec
sbb
cltd
inc
test
push
test
aam
sbb
imul
arpl
dec
aam
mov
repnz
movsb
cmp
pop
sub
out
hlt
sbb
fs
out
fildll
cmp
cltd
sbb
cld
shl
or
sub
xor
xor
push
inc
pop
xor
pop
push
jl
push
adc
jo
jae
loope
or
enter
jbe
gs
push
xor
dec
sub
ds
ja
scas
cmp
adc
mov
mov
cmp
into
inc
inc
cmp
mov
fistl
jnp
rcrl
pop
out
ret
inc
dec
mov
dec
mov
inc
rorl
loope
pop
mov
ljmp
mov
fsubrs
inc
inc
push
lods
outsb
mov
push
lods
call
fcomp
push
out
push
push
testb
inc
mov
and
les
jp
ss
jle
xlat
out
sub
out
arpl
push
es
mov
push
or
inc
aaa
divl
xlat
addl
mov
decl
iret
mov
mov
and
gs
rcll
lods
add
mov
enter
mov
pushf
sarb
mov
jp
xchg
dec
dec
lret
xor
jo
inc
push
cmp
ss
sub
sub
daa
xor
rcrb
mov
push
adc
xchg
dec
out
popf
lret
call
xchg
pop
repz
lods
stc
fisubl
mov
add
ds
and
xchg
jmp
mov
incl
sbb
dec
push
mov
sbb
pop
dec
mov
push
and
jne
mov
xlat
enter
mov
pop
inc
sbb
jge
arpl
fimuls
cmpsb
inc
daa
repz
lds
insl
jbe
stos
push
lea
mov
out
pop
pop
shll
mov
push
mov
pushf
inc
mov
xor
mov
fs
add
loop
push
push
in
js
outsl
popf
stos
test
mov
into
mul
push
cpuid
stc
jae
cltd
pop
mov
pop
pushl
xor
sbb
pop
or
add
xor
adc
outsb
lds
dec
subl
aam
push
xor
and
ljmp
add
cmp
sti
sbb
mov
clc
insl
addr16
jb
xor
adc
dec
xchg
movsb
pop
not
negl
test
xchg
sub
int
sub
inc
and
add
shlb
pusha
cmpsl
adc
xchg
push
pop
push
imul
inc
test
orb
movsl
mov
xchg
or
fsubl
add
sbb
clc
xchg
or
inc
sub
push
lds
aad
pusha
inc
scas
inc
fstpl
clc
stos
sti
or
aaa
icebp
cmp
adc
sub
jo
outsb
jg
mov
mov
cmpsb
cmp
jbe
dec
xchg
pop
pusha
shll
push
pop
lret
or
test
lahf
mov
das
in
cld
add
call
jg
test
imul
int
rcrl
sbbl
jb
push
fs
xchg
movsb
das
mov
mov
push
add
mov
sbb
dec
icebp
dec
jecxz
or
lods
lcall
push
loope
dec
sbb
mov
xchg
or
lods
pusha
incb
aas
push
ljmp
mov
rorb
cld
mov
sub
out
fbld
int
mov
mov
dec
cs
imull
jmp
xor
mov
std
mov
xchg
cmp
test
push
pushf
jge
cmp
pop
or
fisttpll
and
mov
mov
xlat
mov
loop
ds
push
imul
push
lcall
inc
and
in
loope
jl
jns
push
cmp
rolb
push
push
push
mov
add
xchg
fwait
gs
jne
adc
mov
push
inc
mov
cmp
loope
add
or
and
mov
adc
in
dec
push
sbb
rcrb
int3
shll
in
shrb
xor
add
jbe
inc
xor
subb
pop
out
inc
les
dec
sbb
xchg
mov
cmpsb
dec
xor
mov
in
xor
cmp
inc
ja
xchg
add
loopne
xorb
add
psadbw
or
enter
dec
push
dec
and
ja
outsl
movl
dec
mov
insb
lea
mov
cmp
pop
pop
and
add
es
inc
jle
adc
dec
sti
out
xchg
add
cmp
iret
lods
out
outsl
cmpsl
cmp
jge
pop
or
mov
inc
jecxz
ds
outsl
add
lcall
adc
jo
inc
and
adc
shll
jg
mov
inc
outsb
jbe
fs
stos
rcr
sub
clc
or
test
cwtl
cmp
mov
xchg
pop
je
cmpsb
fwait
mov
jno
pop
pop
cmp
and
xchg
jmp
push
les
incl
jae
pop
fistl
jb
repz
mov
ds
and
fsubs
inc
mov
das
imul
iret
push
mov
mov
xchg
lahf
cmpsl
jmp
dec
in
xchg
xchg
inc
mov
and
or
dec
mov
aaa
lfs
dec
lea
call
mov
pop
sub
mov
xchg
test
icebp
or
ret
fneni(8087
stc
sbb
data16
fisttpll
sbb
jg
xchg
push
adc
jns
mov
out
mov
xor
inc
loope
adc
sahf
cs
jno
and
test
sbb
push
jbe
xor
pop
cld
lock
insl
xchg
push
sbb
dec
subb
lods
lret
cmpsb
dec
sbb
mov
adc
loope
dec
xchg
add
hlt
icebp
mov
xor
and
or
rolb
mov
fnsave
rcl
and
arpl
mov
push
mov
adc
jmp
mov
cmp
test
sub
xorl
jmp
stos
clts
jl
imull
inc
cmpsl
or
inc
inc
repz
lea
sahf
ja
jno
xor
cltd
filds
insl
jae
addr16
stos
lds
stc
cmc
loop
mov
sbb
inc
sarb
dec
imul
jno
das
adc
and
pushf
xchg
jnp
mov
lods
lea
pop
pop
cltd
add
cmp
popf
int3
stc
mov
fildll
xor
aas
xchg
push
bound
loopne
mov
or
ss
dec
popa
into
bound
nop
cmc
mov
fsubs
fucomip
mov
nop
xchg
mull
adc
lock
and
mov
lds
scas
dec
test
into
pop
mov
inc
mov
cmpsl
push
test
jmp
loop
loope
fs
and
es
adc
in
push
and
mov
mov
mov
frstor
inc
test
jmp
sub
mov
sbb
push
dec
neg
mov
mov
idivl
in
pusha
imul
pusha
mov
hlt
inc
mov
icebp
mov
dec
icebp
cmp
stc
mov
stc
mov
cmp
add
adcl
int
push
cmp
stc
pop
and
punpckhwd
lods
aad
aaa
or
xlat
jns
bound
xchg
xor
mov
push
int3
jns
mov
je
push
xor
mov
aam
enter
and
or
outsb
jg
rolb
fldlg2
add
mov
sub
add
aaa
mov
pop
je
mov
mov
pop
mov
jne
pop
push
fsubl
jb
push
push
fs
and
repz
xor
out
mov
mov
test
and
lahf
pushf
das
bound
les
sub
lret
cld
test
mov
js
xor
add
movsb
mov
test
sbb
push
ss
es
mov
test
fs
enter
imul
and
lcall
dec
test
jns
pop
cmp
lret
or
sahf
cmc
inc
push
cmpb
and
test
out
sub
mov
adc
js
std
repz
lods
popf
loopne
mov
mov
push
mov
fcompl
inc
mov
cmpl
daa
or
jp
add
fadds
mov
xor
or
xor
mov
mov
lock
and
outsl
or
loop
dec
lds
push
xchg
lods
insb
xor
fistps
roll
dec
arpl
jecxz
sub
inc
jnp
rcll
fistps
xchg
cmp
and
xor
sbb
inc
cmp
icebp
lods
inc
or
movb
out
lock
xor
dec
icebp
addb
cmp
nop
sarl
mov
push
mov
data16
and
sbb
mov
cmp
cli
mov
and
inc
or
mov
adc
nop
dec
mov
mov
xchg
loopne
jb
jno
xchg
in
loop
jb
adc
jns
sbb
xor
cmc
xchg
push
push
xlat
inc
ds
mov
and
pop
hlt
sub
orl
imul
lret
test
cmp
cli
mov
insl
or
divb
mov
cli
hlt
sbb
jge
cmp
xorb
xchg
xor
lea
lods
xchg
mov
ficomps
jo
and
dec
sub
inc
jl
push
jae
inc
inc
jp
cmc
arpl
cli
cs
and
push
aad
push
xchg
pushf
mov
push
aas
popf
or
fnstenv
sub
sbb
cmp
aaa
aaa
bound
mov
sti
es
test
mov
or
inc
popa
sbb
ds
out
pop
arpl
pop
add
pop
mov
sbb
nop
ret
lods
mov
int
lret
js
cmpsl
sbb
mov
cli
pop
rcrb
push
scas
std
call
decl
cld
imulb
sbb
dec
icebp
push
rcrl
mov
xorl
addr16
cmpsb
clc
popf
adc
push
lahf
dec
xor
sti
push
inc
out
js
cmp
or
xchg
mov
mov
jge
mov
or
fldl
stc
ja
adc
push
gs
iret
cld
cwtl
fcmovb
mov
jmp
pop
test
mov
gs
insl
adc
jno
stc
cmc
push
inc
cmp
data16
adc
test
mov
stos
js
sub
aaa
shl
sub
ljmp
fsubl
jge
xor
mov
jne
ds
mov
and
shll
fdivrs
test
or
inc
xor
jo
inc
lahf
cmp
sbb
ljmp
mov
cs
jge
mov
pusha
call
mov
pop
out
or
clc
or
dec
cmp
xor
int
stos
fldl
sbb
mov
enter
shl
mov
outsl
and
loopne
ss
xchg
mov
std
aam
inc
push
hlt
add
jl,pn
mov
js
inc
notl
shr
in
adc
ss
ss
jge,pt
rcll
ficompl
jp
add
mov
pusha
mov
mov
pop
fidivs
scas
and
into
mov
test
lcall
adc
orb
in
sbb
add
mov
mov
inc
jle
daa
js
sbb
dec
or
xor
pop
lret
sahf
dec
scas
mov
push
popa
or
mov
sub
push
or
rep
test
xor
sbb
fsubrs
sbb
nop
aaa
push
jnp
movsb
dec
dec
lods
fsts
dec
jecxz
sti
les
mov
cmp
mov
add
call
or
ja
lds
sti
std
or
inc
jg
cmpsb
incb
stos
mov
sahf
repnz
push
inc
movsl
push
mov
imul
pop
dec
sbb
adc
push
jge
test
sub
std
pop
mov
in
xchg
enter
xchg
push
ja
mov
int
push
xlat
mov
jge
in
in
mov
inc
lods
movl
fstp
inc
pop
push
ficomps
fistpl
sbb
sub
inc
les
xor
shll
jno
pop
out
jp
add
dec
out
xchg
pop
add
addb
arpl
inc
mov
cmpsl
inc
lock
xchg
inc
adc
xlat
notl
es
and
int3
and
mov
addr16
inc
fcoml
int3
lret
sbb
dec
inc
mov
sub
push
xor
pusha
xchg
push
inc
clc
cmp
lods
andl
dec
jo
mov
incl
roll
lock
gs
das
bound
lods
std
lret
es
sub
dec
das
sbb
pop
out
adc
xchg
xchg
arpl
test
or
push
push
jle
xchg
hlt
adc
dec
jbe
and
jbe
pop
out
and
cwtl
loopne
sti
jp
loopne
dec
pushf
aam
dec
fnstsw
xor
insb
lods
inc
bound
cmc
sub
fdiv
mov
sub
or
push
or
or
xchg
cmp
sbb
xlat
imul
sbb
sub
rdmsr
mov
addr16
mov
sub
flds
insl
mov
sti
cwtl
pop
xchg
je
mov
mov
scas
mov
add
andl
scas
xorb
dec
mov
jmp
pushf
rorl
daa
pushf
cmc
or
adc
test
sub
sbb
cmp
cwtl
cmp
imul
cwtl
jp
cmpsb
mov
sub
adc
mov
repz
int
mov
push
hlt
cmp
cmp
in
sbb
stos
dec
mov
jns
ds
ja
hlt
lods
fwait
enter
inc
push
jbe
push
pop
cmp
mov
loope
adc
inc
fs
sti
mov
mov
sbb
lcall
shlb
dec
out
in
add
sub
and
daa
aas
jp
push
and
sbb
lds
sub
decb
jae
inc
std
ds
adc
mov
stos
push
xor
or
lret
arpl
enter
jg
or
mov
push
in
pushf
je
inc
lcall
dec
int
lahf
mov
or
xor
repz
cmp
mov
stos
xchg
lret
addr16
cmpsl
sbb
popf
aam
iret
icebp
xchg
aaa
rcll
xor
push
inc
add
cmc
xor
and
dec
jle
or
jo
mov
repnz
stc
lock
pop
lret
add
das
pop
cmp
fbstp
test
push
out
sbb
push
outsb
cmpsb
lret
jge
popl
xor
es
cmp
insb
jno
lcall
adc
popf
mov
mov
movsb
sub
mov
es
push
mov
data16
or
loop
addr16
repnz
xchg
lods
ljmp
fs
push
xlat
es
cmp
test
test
xor
cmpsl
lods
dec
nop
jne
push
fists
push
ja
jo
popa
pop
out
lods
js
lret
push
idivb
imul
and
jmp
in
push
inc
ret
faddl
xchg
adc
mov
sub
inc
ss
vmwrite
enter
mov
dec
jno
sub
and
sarl
or
test
cmp
ret
movsb
jae
or
loopne
sbb
fisttpll
cltd
xor
sarb
js
xchg
xchg
shll
adc
jle
push
in
cltd
stos
lds
loopne
mov
push
mov
lods
notb
cmp
inc
clc
xlat
xor
pop
dec
pop
shrb
ds
sub
cli
dec
rcrl
adc
push
popf
adc
pop
dec
sub
jg
jnp
iret
out
das
sub
clc
out
mov
mov
jbe
mov
adc
invd
push
xor
inc
mov
pop
js
jmp
adc
adc
popf
es
mov
mov
inc
rcrl
add
ret
add
and
dec
mov
lock
sti
lock
mov
pusha
push
lods
mov
movb
imul
add
or
push
sti
push
mov
out
adc
push
jmp
scas
cmp
mov
jb
jge
mov
mov
cmp
test
xor
bound
aam
test
enter
lret
xchg
cs
xor
in
or
mov
in
test
xchg
nop
sahf
pop
dec
xchg
gs
adc
shrl
jl
test
movsb
bnd
cmp
lods
fwait
or
fbld
mov
loopne
out
mov
hlt
jae
jp
es
jl
xchg
or
lret
insb
addb
pop
inc
test
or
pop
mov
bsr
repnz
scas
ret
out
or
jecxz
das
xchg
lahf
scas
xor
cmp
montmul
cmpsb
ret
mov
pop
rclb
das
stos
adc
cmc
sub
lock
dec
cs
push
cmc
pop
adc
leave
mov
repnz
je
and
pop
pop
inc
cltd
rorl
add
in
mov
xor
aad
mov
fwait
mov
sub
cld
pop
push
mov
add
mov
inc
ds
fsubs
cmp
fimull
xor
les
mov
ja
rclb
adc
xor
jno
dec
sbb
sarl
xor
adc
scas
in
and
pop
imul
fsubl
out
dec
in
shrb
mov
push
add
shl
aam
hlt
push
sbbl
cmpsb
sub
ret
mov
fistpll
in
divb
mov
cmp
xor
loope
adc
aaa
pop
in
jl
repz
arpl
pop
scas
fsts
jae
repnz
stos
andb
mov
push
add
mov
sub
mov
jmp
sub
rorb
aas
adc
push
cmpsl
pop
movsl
rorb
sbb
xchg
mov
fs
es
push
pop
lods
xor
cmp
in
scas
cmp
movsb
in
push
jl
sub
xor
and
ja
sub
jae
mov
xchg
push
popf
sbb
or
and
jle
mov
jmp
shl
aas
sbb
in
pusha
int
sbb
pop
jb
adc
es
daa
pop
scas
cmp
popa
dec
test
fwait
je
repnz
mov
adc
mov
rclb
loopne
push
mov
push
jne
scas
std
pop
cltd
nop
and
lea
push
movsl
sbb
sbb
xlat
sbb
pop
ljmp
call
aad
add
lea
std
sahf
cld
pop
dec
push
ss
xlat
jno
xor
ljmp
lahf
sub
jno
pop
jp
lods
pusha
call
and
cmp
ja
sub
inc
xlat
out
and
fldl
jl
xor
mov
jbe
test
add
mov
or
xor
loop
bswap
cmp
iret
mov
lock
and
std
adc
shlb
das
movsb
fisttpll
mov
test
cmp
inc
nop
imul
int3
dec
dec
fdivrp
inc
add
pop
hlt
sbb
lods
pop
jp
mov
mov
adc
sbb
out
aas
aas
pop
sahf
pop
jle
pop
js
sub
jb
arpl
sbb
loopne
loope
push
cmp
enter
mov
std
cs
lret
pop
inc
push
aam
mov
adc
aam
cltd
xor
insl
sbb
packuswb
add
out
mov
ja
cwtl
pushf
xchg
jb
add
add
enter
sahf
push
cltd
out
repnz
js
mov
int3
ss
xchg
fwait
negb
push
clc
dec
pop
xor
into
and
in
fdivl
daa
or
filds
aas
shll
stos
mov
pop
sbb
adc
fs
rcl
push
cmp
sub
into
mov
push
imul
adc
adcb
movsb
ss
sub
lock
inc
adc
mov
movl
pop
ss
xor
jl
or
repnz
xlat
mov
fists
cli
push
in
xor
cmp
mov
push
repz
ljmp
sub
int3
dec
clc
jno
sbb
xchg
inc
sub
mov
cmp
pusha
leave
and
gs
int3
leave
sbb
sarb
cmp
push
push
cmp
testb
cmp
imul
mov
push
dec
cmpsl
xor
push
mov
outsl
cmc
clc
mov
sarb
shl
fnsave
test
shll
out
popf
test
movl
les
lret
jp
push
call
fs
ret
aam
xchg
xor
mov
stos
adc
xorb
mov
adc
shrl
mov
mov
insb
nop
gs
mov
jbe
inc
ja
xchg
iret
push
dec
fmull
stos
arpl
sahf
ret
xor
xchg
sub
jbe
add
mov
fcmovnu
add
jmp
sbb
add
or
add
mov
repz
sbb
arpl
cld
insb
jecxz
data16
pop
enter
mov
or
mov
pop
inc
fdivl
fisttpl
loop
sbb
jl
xor
mov
adc
insb
xchg
rolb
test
fmull
mov
mov
popf
rolb
ret
scas
dec
or
leave
cli
es
repnz
das
mov
sub
mov
pop
xchg
xchg
mov
inc
sub
mov
mov
dec
mov
pop
push
scas
into
xchg
dec
adcb
mov
stos
dec
fisttps
dec
cmpsl
mov
push
jae
cmp
xor
sbb
push
call
daa
in
jne
orl
inc
fiaddl
jmp
push
outsl
mov
jae
sbb
push
sbb
mov
lret
das
aad
adc
movsl
fbstp
scas
pop
push
sbb
push
sbb
jle
mov
shll
pop
lahf
sahf
clc
nop
inc
xor
imul
sub
adc
jmp
clc
outsb
je
jnp
sti
push
call
bnd
jl
mov
out
lea
mov
push
add
fisubrs
inc
xor
jmp
mov
jbe
mov
cli
mov
shrb
sbb
outsb
jp
xor
dec
jno
mov
cld
out
call
sub
call
loopne
sbb
add
rorb
cli
ss
incb
pop
and
out
or
pop
inc
fbstp
ds
scas
xchg
sbb
xor
or
ds
sbb
inc
xchg
jmp
dec
cmpsb
gs
dec
push
push
and
and
pop
enter
pop
mov
sub
shlb
xchg
mov
push
fnsave
mov
or
cmp
sub
hlt
stc
ficompl
inc
lahf
ffree
xchg
ret
ja
pop
fwait
arpl
adc
pop
je
jge
adc
sub
add
jns
cs
adc
subl
and
stos
mov
les
mov
lret
hlt
in
push
and
leave
out
ret
dec
ret
das
push
pop
push
inc
lret
ss
stc
ret
xchg
adc
and
repz
ffreep
xchg
jmp
fnstsw
xchg
pop
lods
push
fidivrl
cmp
notb
pop
into
inc
mov
mov
cmp
mov
add
jnp
cmpsl
pop
movsl
push
inc
pop
pushf
clc
cmpsb
cmc
pusha
mov
adc
imul
fidivs
adc
lods
cmp
movsb
stos
adc
notb
push
xor
ds
xor
outsb
adc
rclb
push
jae
icebp
test
dec
shr
xchg
mov
pop
sub
sub
mov
lret
fdivs
pop
jo
push
lea
mov
pop
rclb
pop
jg
fwait
mov
sub
pop
push
loope
cmp
jno
adc
stc
scas
cld
shlb
mov
pushf
sub
or
enter
dec
lods
popa
sbb
jp
cmp
jmp
mov
dec
lcall
mov
adc
iret
add
std
lret
lcall
jns
add
jns
push
adc
cmp
xor
push
add
out
inc
inc
xlat
push
gs
push
xor
out
pop
ret
lcall
pop
bnd
mov
aaa
adc
inc
shrb
pop
pop
mov
xor
push
cld
aam
ss
idivl
adcl
shlb
pop
mov
xor
mov
das
jno
cmp
add
in
jo
push
inc
sub
bound
cmpsb
lock
scas
mov
inc
jmp
hlt
dec
mov
imul
xchg
sbb
push
ret
fisubs
stos
push
mov
fwait
fwait
lds
lahf
dec
adc
lcall
lds
jl
dec
fmulp
nop
decb
push
in
pop
push
outsl
jp
iret
rol
or
pop
dec
sarl
sub
push
sub
lods
mov
mov
push
mov
jbe
pusha
and
ds
inc
iret
adc
lock
ret
shl
add
pop
xchg
pushf
out
jmp
xacquire
lahf
repnz
sub
add
mov
pop
in
lret
je
lods
mov
loopne
cmp
aas
andps
rcr
sbb
cmc
fbstp
ljmp
sahf
mov
sbb
lret
sbb
hlt
fs
lods
cmp
loopne
inc
out
dec
sub
rolb
gs
sbb
and
sbb
fmuls
decb
daa
lret
popl
pop
pop
mov
cmc
dec
add
loop
out
jge
dec
sahf
sub
push
in
inc
dec
add
cs
xor
outsb
push
lock
imul
pop
or
sub
stos
movsb
fwait
out
mov
cmpsl
xchg
subl
fwait
xorb
add
adc
push
jp
mov
dec
rcrl
and
jmp
adc
aaa
les
xlat
mov
mov
loope
imul
xchg
xchg
repnz
jle
sub
in
bound
out
loop
xchg
xchg
and
pusha
rcr
or
mov
lcall
es
cmpsb
adcb
xchg
inc
cmp
xor
xlat
js
aad
mov
and
shlb
jmp
out
aad
pop
mov
shl
sbb
loope
popa
cmp
lret
ret
xor
scas
push
dec
in
or
push
dec
aam
loopne
push
frstor
movsl
push
shll
xor
les
adc
test
test
fistpl
cli
je
hlt
xlat
cmp
push
fldl
xchg
pop
add
mov
sub
jl
insl
jle
sbb
popa
mov
or
out
jne
inc
fiadds
hlt
pop
push
mov
xchg
out
fiadds
jle
ret
cmpsl
cmp
orb
fcomps
orl
pop
scas
js
movsl
and
adc
dec
mov
les
dec
jle
inc
mov
cmp
sub
jg
fildll
iret
add
aad
cmc
add
push
sub
inc
rorb
jno
mov
xchg
pop
push
mov
adc
pusha
clc
pusha
jg
jle
dec
out
cmpsb
mov
mov
mov
pop
loope
xor
sub
mov
stos
xchg
leave
push
sbb
shlb
das
test
iret
lods
cmp
in
jno
xchg
push
dec
nop
leave
or
pop
push
xchg
pop
push
movsl
fdivrs
push
and
mov
push
aam
icebp
in
xor
into
jb
sbb
push
call
xchg
shufps
out
xchg
dec
jle
gs
and
ljmp
loope
mov
mov
pop
xor
loop
inc
mov
insl
xor
aad
and
cs
mov
add
mov
out
xor
out
in
daa
jp
xor
ret
xchg
fmuls
mov
insb
loope
sub
mov
mov
dec
inc
arpl
nop
es
mov
mov
imulb
bound
cmpsl
cs
mov
adc
push
popa
xor
iret
pop
pop
call
push
mov
mov
xor
mov
int
pusha
dec
inc
sbb
pop
lods
icebp
xchg
shrb
dec
sub
mov
push
lock
pop
aaa
pop
push
add
adcb
in
push
add
in
mov
sahf
fbstp
fnstcw
xchg
data16
sub
sub
mov
add
cwtl
std
xchg
rorb
cmpsb
cmc
xchg
enter
push
cmp
dec
add
out
dec
mov
jbe
pop
pusha
fidivs
mov
jg
mov
dec
sti
mov
fimuls
arpl
int
inc
xor
dec
inc
push
lock
rcrb
outsl
dec
out
mov
mov
shrb
mov
push
rcll
and
push
mov
xchg
sarl
into
scas
pop
loop
mov
cwtl
jne
ret
dec
movsb
pop
arpl
xor
std
add
mov
leave
jg
sub
xor
inc
sub
mov
imul
pop
daa
cmp
xor
cmp
pop
jmp
mov
cmp
sahf
and
xor
or
add
inc
roll
mov
fimuls
mov
jecxz
test
ds
lock
pop
sar
in
addl
xchg
into
xchg
jb
cmpsb
sbb
or
sub
dec
push
pop
out
fimull
inc
pop
xorl
add
pop
sbb
cmpsl
and
xchg
hlt
repz
pusha
push
addl
ss
sub
cli
rcrl
ds
mov
push
out
sub
jb
outsl
push
enter
cmp
loopne
mov
cmp
pop
pop
int3
arpl
push
adc
xchg
mov
aad
andb
push
dec
std
mov
sbb
int
iret
jb
sbb
mov
adc
shrl
inc
dec
pop
pusha
jle
xor
add
in
jo
out
arpl
daa
pop
dec
sbb
loopne
pop
sbb
xor
cmp
push
sub
sbb
notl
aad
or
dec
lcall
cmpsb
xchg
mov
out
dec
cmp
or
int3
adc
inc
sub
or
fisubrs
sub
xor
mov
sbb
call
mov
popf
pop
jl
js
jnp
mov
stos
sbb
mov
xor
sbb
and
pop
jb
lock
loopne
nop
aam
sbb
aaa
xchg
loope
sbb
lret
subb
jle
push
xchg
out
cmp
jmp
adc
js
push
mov
fdivrs
and
outsb
push
xchg
jecxz
push
add
nop
push
fisubrl
xor
fiaddl
stos
daa
inc
daa
addb
adc
push
idivb
add
jb
fnstenv
cltd
scas
inc
aas
mov
or
dec
daa
jle
daa
scas
sbb
sbb
xchg
movsl
dec
nop
std
icebp
and
int3
xor
xchg
jne
sub
adc
out
sub
push
sbb
add
sahf
xchg
lods
push
lcall
sbb
data16
adc
mov
xchg
nop
and
out
sub
ljmp
clc
sbb
sub
cmp
adc
xchg
ja
add
push
call
add
inc
imul
mov
or
loop
fnsave
xchg
xor
mov
pop
and
clc
jp
adc
dec
adc
and
insb
mov
pop
mov
jne
outsl
mov
jmp
mov
loope
jbe
icebp
sub
xchg
xor
sbb
mov
lea
or
outsl
jmp
or
stc
mov
pop
hlt
dec
loope
lea
shl
jae
lret
fwait
jns
push
ss
xchg
mov
cs
inc
cmp
cmp
sbb
hlt
mov
sub
lock
fimull
std
sub
dec
clc
inc
xor
xor
mov
jo
mov
nop
mov
adc
add
push
outsl
popf
xor
xchg
pop
cmp
mov
sarl
xchg
test
xor
mov
andl
ja
scas
nop
pop
jl
inc
mov
out
cmpsb
and
xor
sub
and
adc
cwtl
and
in
cs
sar
inc
pop
dec
loope
xlat
cmp
xor
jne
andb
adc
in
repnz
push
fs
jmp
push
jecxz
lcall
dec
ret
mov
pop
sub
cmp
rorb
movsl
cmp
xor
add
mov
and
push
push
push
sub
rorb
xlat
sub
inc
rol
sub
jae
ja
loop,pn
jle
xchg
jl
jo
jle
fcomp
fsubl
test
dec
cmp
sbb
or
dec
mov
mov
mov
pop
fwait
jp
add
or
popa
cmp
loop
nop
movsb
pop
cltd
cmp
push
das
mov
add
aaa
jo
daa
ljmp
jb
or
lret
adc
ret
jo
or
shl
inc
cmp
ret
loopne
or
je
mov
addr16
mov
cmp
mov
popa
lea
clc
mov
xlat
hlt
dec
push
in
ljmp
test
xchg
sbb
xor
pop
jae
or
mov
fmull
out
sbb
lret
or
mov
mov
mov
dec
hlt
aam
or
mov
insl
or
cmp
pop
mov
ror
arpl
ja
faddl
lahf
mov
xor
jno
dec
aad
ds
cld
cmp
xchg
dec
dec
ljmp
pop
fcompl
xorb
adc
sub
or
test
or
aaa
dec
ret
sub
push
jp
or
sub
shlb
xor
push
leave
test
push
jecxz
xor
shll
int
jnp
je
adc
inc
pusha
push
fsubl
arpl
ficomps
mov
outsw
pop
sbb
sub
leave
jbe
ja
or
out
fisttps
sub
and
outsl
les
or
or
cmpl
pop
dec
dec
or
push
cld
shrl
push
push
pusha
insl
dec
push
sbb
aad
pushf
addr16
xor
pop
fmull
cwtl
lods
adc
pop
je
sbb
fstpt
ror
jbe
cmp
js
jbe
dec
jae
loopne
ret
or
mov
aas
add
adc
pop
lock
jle
push
cmp
push
outsl
out
stos
fdivs
pusha
jns
test
xor
aaa
cmp
dec
xchg
push
aad
testl
dec
data16
or
sub
mov
xchg
jns
scas
shlb
jl
mov
xchg
ficomps
push
jnp
mov
mov
sbb
call
gs
dec
lahf
adc
sub
rolb
adc
or
ljmp
dec
outsl
adc
int3
jle
push
pop
fnstcw
jno
mov
adc
outsl
repz
pop
leave
orl
repnz
mov
test
dec
iret
imul
imul
mov
in
push
bound
xchg
or
jmp
and
adc
loop
push
shrb
push
icebp
clc
xlat
xchg
ret
lret
clc
pop
das
arpl
shrl
call
cli
mov
mov
das
loopne
lcallw
in
push
mov
mov
and
push
mov
jp
lret
mov
repz
dec
add
or
mov
mov
mov
test
imul
cmp
mov
jbe
pop
cmp
xor
pop
xchg
mov
mov
jl
jp
pop
and
les
sbb
push
or
movsb
push
les
and
jb
aaa
push
xchg
mov
popa
xor
roll
jmp
mov
cltd
or
cs
test
adc
push
pop
push
fdivl
and
std
push
xchg
les
iret
scas
add
enter
aam
test
in
xchg
sub
pop
mov
fldcw
stc
stos
push
cmpsl
stos
jbe
dec
into
mov
mov
addr16
mov
adc
xchg
sub
lret
inc
inc
lret
scas
inc
stc
inc
aaa
dec
push
mov
xchg
imul
fxch
jne
inc
loopne
out
int
mov
cmc
mov
aad
fdivs
mov
js
js
push
dec
xor
mov
cmc
adc
or
data16
mov
repz
mov
push
mov
sbb
scas
sahf
and
lods
push
lret
xlat
cmp
testl
add
cmp
cmp
push
mov
fmuls
cli
call
push
lcall
adc
outsl
stos
movsl
sbb
ja
sub
mov
iret
or
xchg
hlt
testl
adc
push
push
xor
mov
xchg
outsl
pop
ss
push
fisubrs
inc
jo
jnp
stos
int
xchg
pop
mov
arpl
and
jmp
cmp
lea
lods
jl
fnsave
mov
in
cmp
push
mov
stc
insl
lahf
mov
shrl
fidivl
cmpl
mov
mov
data16
jnp
out
icebp
jnp
es
in
and
cmp
nop
sbb
xchg
pop
lea
cmp
int3
jo
sub
loope
ds
inc
xchg
jb
pushf
jae
mov
jp
aaa
xor
xor
lods
sbb
out
loopne
imul
jg
outsl
test
and
roll
cwtd
dec
rolb
cld
js
jnp
pusha
in
sub
cmp
mov
data16
icebp
jg
aad
ss
lods
push
leave
mov
pop
test
dec
pushf
or
std
push
jle
sub
mov
scas
add
add
fwait
psrld
leave
shrl
imul
inc
inc
push
pop
sarb
and
aam
inc
loop
shll
pushf
add
ss
les
inc
fistpll
mov
in
scas
aam
cltd
pop
aas
jecxz
ret
lods
out
push
fldenv
ja
cmp
ljmp
lods
arpl
cmp
sub
xor
iret
out
sub
es
jns
mov
jp
xchg
mov
testb
xchg
or
mov
lahf
jbe
xor
testl
fdivs
ret
cmp
xchg
jae
jl
and
xorl
xchg
stos
inc
out
add
popa
mov
icebp
jno
pop
mov
lock
add
popf
or
int3
xchg
adc
jp
das
sbb
inc
negl
mov
cmpsb
mov
dec
mov
int3
test
insb
cmpsb
xchg
or
outsb
xchg
test
imul
fwait
in
in
xchg
xor
lds
notb
fwait
arpl
pop
jmp
jl
cs
jg
cwtl
adc
fs
outsb
stc
aam
cwtl
mov
or
mov
jecxz
stc
rolb
adc
mov
push
xchg
push
gs
out
adc
or
rcl
xchg
paddw
js
cli
cli
and
push
xor
xor
cs
push
mov
cmp
mov
stos
cld
xchg
xchg
or
pop
les
and
scas
and
gs
aas
outsl
in
cli
sbb
insb
inc
adc
rclb
mov
bound
pushl
add
push
cld
cmpsb
inc
adc
call
push
insl
data16
or
fwait
cs
jmp
jnp
repnz
sbb
shrl
and
aam
xor
cmovle
mov
jae
ret
sbb
sbb
bnd
lcall
push
mov
inc
mov
adc
push
cmp
jecxz
fiadds
dec
or
fnstenv
adc
inc
sbbl
jo
cmp
adc
jb
or
cmpsb
push
mov
mov
in
shll
jbe
cmp
lahf
ficoml
cmp
daa
and
nop
mov
inc
sti
cld
jg
add
inc
sbb
stos
push
dec
cli
dec
pop
sbb
cltd
les
pop
pushf
aad
lahf
push
popa
mov
iret
jecxz
popa
aad
movsb
dec
dec
push
adc
dec
dec
inc
dec
fcmove
mov
cmpsl
xchg
enter
mov
mov
outsl
jl
movsb
xor
rorb
mov
jmp
mov
shlb
xchg
pop
movsb
test
fcomip
mov
sbb
scas
in
popa
inc
leave
cltd
jno
xor
fstps
mov
dec
lcall
sub
push
fldl
aas
mov
adc
popf
incb
js
mov
std
in
sub
inc
push
shll
fmuls
lock
call
sub
mov
jmp
repz
in
xchg
stos
xchg
scas
addr16
ret
mov
popa
sbb
jne
push
test
xchg
mov
or
cmp
dec
mov
push
stos
fistpll
popf
mov
xor
in
into
inc
add
dec
pop
mov
xchg
xor
icebp
or
rcr
lods
outsb
fbstp
mov
aas
push
push
aaa
or
fisubrl
adc
paddw
jle
test
cld
xor
loopne
pusha
test
mov
sahf
movsb
int
es
mov
lahf
mov
lods
test
sub
pop
out
and
gs
dec
stc
xchg
add
and
mov
or
sbb
cmc
loop
adc
sbb
mov
outsl
adc
cmp
cwtl
mov
ret
pop
pop
mov
mov
sub
clc
push
xchg
mov
lcall
add
arpl
jmp
outsb
cmp
xchg
fsubrs
sub
cmp
xor
push
xor
fildl
iret
inc
repnz
xchg
jge
mov
outsb
sbb
mov
push
fcoml
add
or
and
add
rclb
xchg
mov
jge
iret
jnp
or
inc
pop
or
sti
sub
jmp
xlat
cmpsl
lods
sbb
outsl
pushf
cmp
test
addr16
jmp
insl
test
jne
xor
daa
mov
jecxz
and
cmp
xor
mov
sub
xchg
shrb
mov
adc
mov
push
xor
cs
xchg
shl
jge
loope
adc
dec
xchg
ret
or
out
mov
dec
in
adc
rcll
test
xchg
out
out
loope
lds
mov
stc
push
test
push
ja
jmp
lahf
cmp
push
test
push
inc
rol
or
dec
jnp
mov
sbb
popf
sarl
or
and
repnz
xchg
test
aas
jg
fcoml
test
insl
sub
ljmp
mov
stos
lea
dec
stos
movsl
sbb
add
jl
pcmpeqd
mov
mov
addr16
jno
and
mov
ficomps
adc
lret
dec
cmp
dec
cs
sub
xor
insb
ror
into
dec
or
mov
pop
stos
mov
cmp
repnz
mov
mov
cmp
scas
mov
bound
int
push
lock
insl
push
dec
adc
sub
testb
and
xor
jns
cmc
aam
inc
jns
pop
sbb
pop
cmp
sbb
pop
dec
pop
jae
push
pop
ja,pt
aam
rcll
push
cld
sarb
faddl
aas
iret
jle
das
fneni(8087
sbb
add
fsubrs
andb
inc
faddl
ficoms
loop
mov
les
pop
call
inc
push
push
xchg
adc
stc
movsl
cmp
in
lret
sbb
xor
xor
xchg
int
pop
pop
push
push
mov
mov
lea
push
pop
repz
add
js
aad
inc
lret
in
rcrl
gs
mov
inc
loop
fsub
cli
nop
lret
sahf
jae
fldenv
and
jge
call
mov
push
dec
jbe
test
mov
sahf
xor
ficoms
nop
pusha
sub
and
pop
leave
ja
sbb
mov
pusha
mov
mov
xchg
test
push
sbb
mov
sbb
dec
andb
lret
xchg
sub
adc
jae
scas
add
nop
or
add
sti
into
fmulp
jnp
sub
dec
movsb
jecxz
jmp
adc
enter
adc
cwtl
fisttpl
mov
and
inc
out
cwtl
xor
xchg
repnz
stos
lahf
xchg
ljmp
push
js
pop
aas
movsb
rcrb
mov
fildll
push
cmp
cli
shlb
xchg
mov
push
negl
and
xor
stc
test
xchg
xor
hlt
xchg
out
jmp
cmp
int3
xchg
scas
mov
pop
sbb
data16
push
in
push
ljmp
xchg
nop
cs
cltd
cmpsl
mov
and
mov
ret
jle
cmc
mov
lahf
add
add
fisubs
movsl
jb
icebp
pop
ficomps
jo
push
dec
movsb
or
sub
jmp
rcr
mov
xchg
test
adc
test
loope
insb
mov
mov
mov
loope
cmp
int3
stc
repz
fisttps
cmp
and
ret
adc
xlat
push
cmp
fcoms
mov
mov
push
push
testb
and
and
jg
fbstp
or
and
test
lods
movb
jne
or
mov
frstor
mov
ss
jmp
xor
hlt
sahf
adc
push
pushf
jmp
in
insl
mov
les
cmpsb
xchg
fidivrl
nop
xor
mov
or
add
std
pop
insl
lock
mov
lret
push
mov
xor
pop
xor
mov
pop
pushf
test
arpl
loope
sub
or
je
shll
div
xchg
out
or
mov
pop
in
push
xor
mov
movsb
jae
cli
mov
sbb
dec
scas
shll
test
cmpsl
sbb
scas
sarb
add
jne
jmp
sbb
push
pushl
test
sub
mov
loopne
or
shl
in
or
and
mov
dec
mov
stc
xor
pop
push
addr16
lret
adc
lds
push
mov
xor
aas
add
mov
pusha
loopne
std
lahf
ss
or
push
mov
int
test
pop
or
mov
pop
jle
sbb
adc
mov
or
fimull
inc
repz
dec
pop
loop
vmread
cwtl
repz
xchg
cld
jns
or
aam
mov
mov
outsl
lock
in
loop
out
rorb
pusha
pop
icebp
lret
xor
lahf
out
sbb
pop
mov
fwait
clc
cmc
and
ljmp
cwtl
dec
cltd
xchg
dec
adc
inc
ret
mov
aaa
sub
push
xor
pop
ljmp
clc
push
sbb
clc
into
in
adc
into
dec
lcall
jmp
jne
loope
inc
fldcw
cltd
xchg
iret
into
xor
shl
testl
add
xchg
ds
xor
mov
adc
pop
and
adc
stc
xlat
add
lcall
jge
jbe
dec
shr
lods
and
cmp
das
fbstp
mov
fisttps
fldcw
push
sbb
lock
jl
js
movsl
addl
outsb
lods
jle
jl
mov
inc
fistps
cmpsb
mov
push
pop
xlat
xbegin
ret
andl
notb
sub
push
inc
test
test
pop
in
and
nop
leave
push
cltd
outsb
push
cmp
arpl
push
xchg
cli
test
xor
mov
and
dec
xchg
sti
dec
push
and
mov
sub
shll
xor
lock
lock
cmc
push
leave
jg
addr16
mov
test
in
jmp
movsb
lahf
xchg
jns
inc
lods
test
pop
and
pusha
je
ret
dec
mov
pop
cli
pop
popa
and
fs
fldl
leave
in
mov
xchg
push
leave
jle
push
notb
xchg
sbb
jge
les
inc
ljmp
jb
jo
lret
xchg
cmp
fsubrs
mov
dec
cli
mov
mov
mov
out
scas
enter
std
scas
imul
dec
push
push
rcll
sbb
sti
in
cmpsl
scas
mov
shrb
jae
aam
jge
test
outsl
adc
mov
inc
sahf
repz
lods
sub
call
fsubrl
mov
mov
mov
xor
popl
fabs
mov
jmp
mov
or
aam
xor
je
cmp
ffreep
pop
inc
jl
shll
cmpsb
mov
out
fimuls
lods
adc
ss
push
lock
sbb
ljmp
in
js
ja
add
mov
mov
dec
mov
adc
xchg
pop
and
cwtl
cmpsl
mov
push
cmc
sahf
xchg
leave
pusha
and
arpl
leave
mov
pop
inc
mov
jae
mov
js
xchg
dec
ds
loope
adc
dec
jle
fs
mov
aaa
add
cld
adc
cmp
arpl
xchg
cmp
fbstp
shl
retw
dec
popa
cs
cmp
imul
and
push
or
dec
and
dec
imul
pop
push
std
jmp
stc
aas
rorl
sarb
les
sbb
cmp
push
cmp
sbb
pop
pop
add
sub
repz
sub
adc
fcmovbe
inc
sbb
adc
add
xchg
repnz
aas
sbb
sub
insl
dec
mov
push
push
lret
jne
imul
pop
adc
or
xlat
aad
dec
inc
in
mov
push
xchg
add
jecxz
pop
sbb
adc
mov
into
rolb
mov
adc
cltd
icebp
loop
and
and
xor
pop
jno
mov
ss
cmp
jg
jae
or
inc
inc
cmpl
andb
and
lods
push
pop
ds
shlb
outsb
mov
sbb
jno
dec
sti
neg
add
fcmove
iret
imul
mov
jne
mov
call
aam
or
and
mov
sbb
xchg
sbb
add
insl
insl
jo
xchg
or
push
out
icebp
xchg
push
mov
inc
test
idivl
ret
pop
adc
int
scas
mov
aas
cmp
daa
pusha
mov
add
inc
jns
fisubl
gs
inc
ret
xor
or
mov
lret
imul
xor
sbb
mov
xchg
scas
dec
cmc
cmpsl
add
imul
cmp
push
jle
push
mov
fcomps
pop
cmp
mov
icebp
xchg
xchg
inc
ja
jl
cmp
scas
jae
add
shrb
jnp
sti
in
mov
fucomp
cmpl
movhps
sbb
or
iret
out
adc
in
pop
fldt
mov
jmp
loop
inc
mov
jo
in
out
push
sbb
nop
mov
les
addr16
cld
lret
jne
cmp
stos
cmc
xchg
xlat
frstor
add
imul
push
int
jge
adc
sbb
inc
mov
inc
std
pop
lcall
sbb
xchg
pop
or
push
push
sbb
lret
push
ljmp
push
fnstsw
cmp
jbe
jp
loop
xchg
adc
lods
cld
jbe
adc
mov
add
mov
in
rorl
mov
orl
mov
inc
xchg
xchg
adc
sub
cmp
xor
mov
mov
push
mov
xor
out
cltd
lds
xchg
cmpl
mov
push
jle
movsb
push
aas
inc
nop
stos
xchg
aaa
stos
js
loop
cwtl
cmp
pop
push
scas
das
xor
outsb
xchg
in
and
stos
inc
js
add
cmp
sub
sub
arpl
jecxz
dec
or
push
push
popa
mov
cmpsl
repz
inc
dec
xor
cmp
add
mov
int3
pushf
stos
adc
or
xchg
sbb
adc
mov
jne
add
sub
mov
push
fs
rcl
testb
pop
stos
cmpsl
pop
pop
sub
cltd
or
lds
add
fbld
inc
ss
and
test
nop
pop
pusha
lret
clc
lock
and
mov
or
dec
iret
call
xchg
jmp
shl
lds
es
push
xchg
sbbl
into
push
jae
mov
mov
sarl
fildll
adcb
movsl
cmpsl
outsl
call
mov
bound
divb
add
decl
mov
jge
mov
aaa
pop
adcl
ret
mov
jp
inc
add
push
mov
xchg
popf
aad
mov
mov
jp
addb
pusha
sub
jno
pop
jo
xchg
test
vmovntpd
and
inc
lahf
outsl
pop
cmp
jb
mov
and
mov
mov
lds
dec
push
dec
cmp
push
sbb
lret
push
sbb
inc
mov
mov
ret
movsb
stc
lret
fbld
mov
jb
mov
test
adc
fidivrl
das
pusha
pusha
loope
out
decl
mov
cmpsb
std
mov
cltd
pop
add
stos
jne
add
lret
lds
out
xor
jmp
or
ss
iret
jmp
xchg
jg,pt
cmp
add
gs
rcll
insb
jg
pop
aad
pop
stc
xor
in
aad
mov
ret
sub
fnstcw
pop
cmpsl
mov
stos
add
mov
ret
cmp
testb
into
jge
mov
cmpsb
xor
add
and
sub
push
out
sbb
js
jmp
aaa
in
mov
pop
pop
mov
mov
sub
lahf
and
enter
jo
mov
and
mov
call
jle
lret
and
arpl
xlat
push
mov
push
cwtl
push
inc
cmp
jae
dec
xor
stos
xor
out
mov
sahf
hlt
or
adc
xor
out
mov
mov
in
addr16
mov
test
inc
push
lret
dec
fs
push
lds
mulb
mov
cmp
lcall
je
imul
push
fsubl
push
aas
std
push
loope
sub
mov
or
bnd
cwtl
adc
mov
dec
negb
sti
outsl
adc
cmp
aam
in
fidivs
pop
loopne
in
fstpl
fimuls
jmp
sbb
cmc
jge
add
jecxz
arpl
fcompl
cs
insl
lcall
fmuls
movsl
jmp
dec
loop
sub
andb
adc
pop
out
mov
and
addb
jno
xchg
mov
mov
enter
pop
outsb
pop
addb
dec
jge
ja
pop
mov
ja
xor
mov
pop
sub
sub
gs
inc
xor
sub
rorb
add
fnstenv
shlb
cs
cmp
xchg
push
lea
int
and
pop
add
or
cmp
aam
aas
jl
shll
iret
bound
ja
adc
mov
jne
sub
in
cli
xor
dec
pop
sub
nop
sbb
push
out
pop
les
xor
or
gs
jae
dec
pop
pop
stos
sbb
or
decb
sar
lds
and
nopl
loop
or
mov
jl
outsl
fwait
icebp
mov
out
scas
fisttpl
cmp
enter
cwtl
les
sbb
sbbb
dec
fbld
or
lock
loope
ljmp
and
shlb
jbe
xchg
add
sub
mov
mov
loope
movsl
je
fmul
lods
fucom
sbb
add
xchg
mov
sbb
xchg
dec
mov
dec
jp
lds
pushf
into
arpl
inc
add
aam
jnp
gs
dec
ja
aaa
adc
das
cld
mov
pop
popa
or
sbb
dec
into
lds
in
sub
mov
push
lahf
in
jae
push
dec
in
test
add
adc
inc
popf
rcrl
adc
ds
cmpsl
in
ds
movsb
push
enter
enter
iret
xchg
shll
stos
les
add
dec
cmc
or
push
out
rcrb
enter
lock
sub
clc
fimuls
cmp
push
out
push
test
sub
inc
test
arpl
mov
cmpsb
jno
and
or
das
jle
frstor
lods
jno
popa
add
sub
push
rcll
push
ss
sahf
sar
lea
mov
and
pushf
dec
imul
ret
push
loope
or
xor
jnp
out
fwait
jle
out
loop
or
fcomps
scas
adc
mov
inc
mov
ret
icebp
adc
jp
imulb
pop
dec
lret
dec
adc
lds
das
ret
xchg
mov
cmp
cmp
nop
sahf
xor
stos
addr16
mov
sbb
jns
lea
es
sbb
outsb
popa
add
fildl
decl
mov
mov
pop
push
ficompl
and
pop
cmp
das
mov
fadd
std
das
pop
test
jo
out
adc
popf
movsl
mov
xor
push
dec
aam
xor
dec
sbb
add
pushf
imul
fadds
lret
inc
lods
imull
or
xchg
pop
jmp
sub
mov
sub
ret
das
enter
sahf
repz
imul
add
js
cld
loop
imul
mov
xchg
mov
mov
loopne
leave
xlat
aas
push
into
mov
xor
das
xor
inc
pop
inc
into
es
sbb
lock
addb
sahf
imul
mov
cmpsb
imul
jo
cmp
adc
cmp
mov
add
test
mov
sbb
or
or
dec
push
push
mov
jl
leave
xor
mov
inc
and
push
das
push
cmpsl
mov
fistpll
or
mov
in
test
cmp
je
sub
aam
leave
inc
cmpsl
and
sbb
and
cmc
and
sub
shl
push
mov
add
add
aaa
push
dec
dec
jge
into
fnsave
jge
std
and
push
adc
pop
pusha
cwtl
cwtl
xor
aas
sub
dec
pop
sub
fwait
or
aas
mov
adcl
cmp
xor
out
and
pop
sub
mov
scas
inc
mov
adc
pop
mov
les
mov
mov
push
xor
out
push
das
push
aas
jmp
cmp
mov
mov
and
pop
idivl
xchg
ds
rolb
scas
sti
mov
les
and
cmp
jns
and
iret
dec
mov
testl
jl
shrl
cli
shlb
adc
in
pop
pop
jns
xchg
dec
in
shr
sarb
push
xchg
xchg
sub
cmp
std
loopne
jmp
int3
int3
loopne
mov
enter
mov
dec
popa
inc
cli
je
addr16
cmp
sbb
repnz
fnstsw
rsqrtps
into
or
xchg
mov
pop
movsb
adc
mov
jne
mov
test
sbbl
xchg
lods
faddl
fidivrs
mov
dec
aad
sub
sbb
roll
jno
insl
scas
jns
mov
insb
lods
sbb
orb
into
push
and
push
scas
dec
fsubrl
stos
and
dec
int
adcl
stos
mull
call
mov
lods
ja
jbe
loope
cmp
jbe
xchg
push
lds
mov
mov
inc
dec
sbb
mov
ds
imul
mov
inc
das
sub
outsl
das
in
test
jo
lret
outsb
add
push
rcrl
mov
and
repz
pop
fs
cwtl
mov
nop
shll
add
jbe
test
inc
adc
aaa
and
sar
sub
add
mov
aaa
test
push
push
dec
cmp
add
jge
dec
mov
mov
orl
cld
jb
movsb
in
ficoml
outsl
inc
pop
rcr
pop
cmpsb
imul
jnp
outsb
and
push
icebp
jnp
add
mov
insl
xlat
dec
ja
das
jmp
movsb
inc
test
cwtl
pop
cmp
stos
cmpsl
cld
xchg
int
cmp
jbe
or
stos
cmp
rcr
stos
ja
fldenv
lods
dec
push
fisubrs
push
and
movsb
jmp
jb
mov
inc
and
movsb
jno
and
ret
scas
popf
mov
mov
scas
cmp
ds
inc
and
call
test
pop
dec
jmp
lahf
push
dec
sub
pop
orl
roll
push
stos
sub
scas
rcrl
mov
movsb
and
sbb
xchg
pop
movsb
imul
mulb
imul
and
xchg
shlb
adc
mov
rorl
mov
mov
daa
sub
add
repnz
sub
and
mov
and
xchg
or
push
adc
mov
dec
lods
call
add
cmpsb
imulb
in
std
in
fisubrl
ljmp
push
pusha
int3
outsb
mov
or
cmpsb
sahf
or
xor
movhps
mov
mov
adc
add
and
leave
lods
and
insb
cmpsb
add
loop
push
xor
cmc
xor
mov
dec
aas
xor
push
add
lcall
jecxz
lea
imul
add
add
jle
jle
icebp
sub
xor
push
das
jge
aam
stos
push
xchg
in
ret
mov
mov
inc
leave
mov
je
or
sbb
out
mov
imul
lods
inc
mov
mov
jmp
fwait
lds
in
pop
xchg
mov
out
pop
btc
js
sarb
ds
call
cs
ds
xor
fwait
lods
lret
filds
addr16
jle
mov
in
stos
cwtl
mov
int
mov
pop
and
push
push
dec
adc
xchg
and
sub
das
setp
xchg
sti
std
movsl
jmp
pushf
and
repnz
pop
pop
imul
cltd
sti
hlt
mov
xchg
fwait
mov
jns
pop
in
dec
sahf
fistl
in
shr
int3
icebp
cmpsl
jae
test
mov
sbb
pop
icebp
scas
lds
mov
test
mov
aam
inc
subb
cld
inc
les
xlat
or
dec
push
imul
fidivs
cmpsb
xchg
cltd
ret
movsl
add
mov
push
push
mov
add
or
jae
xchg
pop
pop
rorb
insb
or
fdivs
xor
ret
or
rcrb
xor
inc
test
js
push
jp
rcrl
pushf
add
outsl
daa
stc
negb
or
cmp
push
mov
cmp
mov
mov
xor
xor
jnp
sub
adc
fwait
rcll
test
fwait
js
dec
mov
into
jecxz
out
test
ficoml
das
mov
mov
push
mov
into
push
sbb
lahf
aas
andl
cmp
mov
in
insb
jbe
add
jp
out
addl
int3
jmp
scas
fstpt
mov
mov
imul
dec
bound
int
dec
loope
pop
or
js
sti
mov
fwait
and
xchg
subl
cltd
dec
scas
pop
sub
lcall
push
lea
inc
fisubrl
push
pusha
fs
cwtl
imul
ud1
insb
xor
insb
pop
lods
dec
add
pop
xor
pop
xor
out
out
stos
bt
mov
push
mov
or
jne
enter
mov
call
popf
cs
push
out
sbb
add
into
test
cltd
cld
pop
into
xor
lret
add
arpl
jae
repnz
movsl
lock
xor
xchg
pop
movsb
fs
mov
push
sub
sbb
das
ret
xor
sbb
or
out
push
pop
aad
inc
cwtl
inc
mov
xor
repnz
and
daa
mov
push
mov
jmp
xchg
pop
and
cmp
imul
mov
and
ret
mov
fs
pop
mov
sub
outsb
test
jl
adc
out
adc
xor
adc
push
test
sub
and
lret
pop
fdiv
or
subl
movsb
push
fcompp
mov
xchg
lock
jg
rorb
imul
mov
mov
test
and
ret
lods
jno
sbb
inc
test
inc
or
or
cmc
iret
sub
call
add
je
fdivrl
pop
shlb
outsl
push
loopne
cmp
in
jns
dec
jp
imul
push
jg
pop
and
sbb
xchg
xchg
cmp
lea
jb
popf
shl
cmc
fildll
jecxz
xchg
xorb
icebp
xchg
scas
jmp
stc
mov
xlat
mov
aad
mov
or
adc
cld
sub
xchg
in
mov
enter
in
cld
popa
adc
xchg
in
pop
sahf
icebp
pop
icebp
nop
vmovsldup
les
add
fidivl
add
pop
test
cmpsl
ret
push
pop
lret
in
hlt
xchg
or
mov
push
lret
xchg
cmc
into
add
sub
mov
jmp
mov
stos
gs
jl
imul
jge
arpl
mov
adc
rorb
faddp
and
jns
mov
nop
cmp
adc
push
fs
dec
imul
das
sbb
lea
ja
pop
iret
mov
int3
jns
imul
lods
and
cmpsl
jmp
je
movsl
call
iret
in
pushf
lahf
rorl
daa
mov
lds
aad
lock
inc
insl
pushl
cmp
pop
add
pop
faddl
sbb
repnz
lock
cmc
dec
sti
xorb
cltd
sti
sub
pop
add
xchg
mov
fwait
sbb
in
jae
sbb
faddl
leave
xchg
scas
sub
sarl
call
in
xchg
adc
jnp
add
stos
lods
outsl
ss
mov
das
inc
cmp
adc
test
and
xor
fadds
fiaddl
mov
sbb
lret
xor
xor
stc
dec
ret
sub
dec
add
cmp
or
dec
sar
ja
imulb
jae
lds
xchg
sbb
into
sub
out
sti
adc
jb
je
popl
jge
and
mov
push
xlat
xlat
push
fistpl
jbe
movsb
push
xchg
adc
adc
and
mov
sbb
jns
sbb
or
mov
fidivs
push
wrmsr
or
lods
mov
scas
mov
mov
xlat
mov
sbb
jae
ds
xchg
into
and
pop
das
xchg
mov
or
adc
jl
push
leave
xor
dec
roll
jp
add
sub
sbb
ss
pop
mov
js
push
jecxz
push
or
adc
in
jle
test
imul
lahf
cmp
mov
cmp
mov
adc
push
aaa
mov
incl
pop
pop
push
xchg
loop
sub
sub
cmc
xchg
and
les
insb
repz
in
jge
xchg
jns
mov
into
jecxz
pusha
leave
mov
fwait
pop
fisttpl
and
mov
daa
shrb
lds
sti
lret
ret
sub
test
into
outsb
jge
gs
jg
pop
xorb
sar
addr16
cmc
mov
mov
adc
mov
cmpsl
test
mov
insl
pop
shll
jp
pushl
pop
jno
popf
stc
in
loopne
dec
mov
orl
pop
mov
and
jno
dec
lahf
cmp
xchg
rorb
das
mov
jbe
leave
es
ss
pop
aaa
rcll
aaa
inc
and
mov
sub
clc
add
popa
mov
mov
repz
pop
loopne
ficompl
out
sbb
sub
mov
popa
cwtl
lret
fwait
and
mov
jne
push
stos
ds
rolb
xorl
adc
sbb
jp
fsubs
xchg
andb
imul
shll
jb
stos
push
push
das
lcall
xor
xlat
aad
andl
dec
inc
stos
jae
push
sbb
dec
sar
push
lret
out
insl
nop
xor
cmp
fistpll
mov
fcomps
scas
fwait
dec
imul
cmp
xorl
xchg
stc
sub
sti
in
cmp
insb
fsub
xor
adc
sbb
int3
rolb
leave
ds
xor
add
mov
push
or
int
cmp
or
mov
mov
mov
pushf
mov
or
pop
insl
push
enter
dec
mov
dec
mov
test
jmp
neg
test
sub
in
addr16
inc
test
popa
or
mov
pushf
dec
pop
lds
fstl
jle
flds
push
inc
mov
aam
adc
add
mov
pop
fidivl
mov
jne
adc
imul
pop
int3
mov
xor
roll
jp
inc
adc
xor
mov
push
push
mov
loope
lds
ss
cmp
ss
jmp
pop
scas
adc
and
addr16
movsl
aam
xor
cmpsl
lea
add
mov
roll
rolb
inc
mov
cltd
dec
dec
xlat
xchg
aas
decl
push
or
mov
add
inc
popf
int3
test
gs
xchg
fdivr
pop
inc
and
iret
repnz
xchg
push
mov
stos
xor
push
mov
dec
xchg
repnz
sbbl
daa
inc
std
inc
cmp
push
les
pop
adc
daa
js
xchg
jno
fisttps
icebp
push
and
inc
stc
push
pop
in
rorb
lods
sbb
xor
mov
das
shlb
adc
ret
push
mov
cmova
jl
insl
jbe
aam
shlb
test
push
xchg
mov
push
ficoml
mov
push
inc
push
mov
aam
sub
ffree
test
mov
mov
push
icebp
rcrb
das
inc
jns
lahf
xchg
dec
inc
inc
mov
adc
inc
cmp
or
divl
rcrl
mov
lods
into
sti
mov
sub
sbb
cmp
lods
xchg
sbb
stos
add
mov
ljmp
xor
and
push
stos
lea
sti
jb
fucomip
mov
sbb
sbb
sarb
test
sub
cmc
cmp
daa
cmp
lret
push
and
jne
mov
in
mov
pushf
jl
or
sub
fwait
xor
pop
negb
sub
adc
inc
sub
cmp
sub
mov
xchg
fstpt
lahf
jecxz
lods
ds
ja
insb
test
push
sub
pushf
push
repz
jne
inc
inc
lock
ds
mov
add
xor
pop
jecxz
lea
or
mov
sahf
adc
inc
jbe
and
or
sti
mov
mov
pop
cmp
sbb
clc
mov
cmc
and
in
test
cmc
stos
pop
lret
hlt
and
jp
dec
and
mov
jo
and
ret
js
div
fisubrs
in
pop
je
push
adcl
dec
test
ret
xchg
pusha
lock
rorb
push
scas
sbb
xchg
dec
out
push
cvttps2pi
and
adcb
cmp
and
daa
roll
dec
aad
dec
push
int3
adc
add
fistpl
mov
adc
xchg
loope
loope
lods
add
jns
ja
int3
mov
fwait
jo
lds
subb
nop
ficoml
scas
adc
out
les
fmuls
cltd
and
scas
pop
push
int3
add
popa
test
xchg
clc
add
mov
xchg
out
scas
addr16
add
dec
pop
imul
es
insb
or
pusha
fisubs
cmp
repz
cmp
cs
mov
jmp
test
jp
dec
out
shrb
cmp
lock
fldl
aad
or
jl
xor
cld
dec
jne
pop
mov
sub
push
push
iret
mov
pop
inc
mov
sub
pop
jno
ja
mov
jecxz
aad
movsl
dec
fyl2xp1
das
pop
dec
mov
loope
mov
jbe
mov
outsb
sub
js
ss
sbb
bnd
cmp
lcall
imul
jmp
stc
dec
inc
mov
add
int3
hlt
jns
imul
push
mov
and
adc
jnp
dec
jne
add
scas
jle
cmp
int3
mov
add
jne
cmpsb
out
loopne
or
xor
sub
xor
dec
jecxz
add
sar
dec
mov
adc
xchg
xor
cwtl
addps
enter
shlb
in
adc
out
push
mov
insl
iret
pop
or
subb
aam
mov
push
jo
mov
dec
xor
bnd
sub
ss
popf
add
fisttpll
add
dec
dec
nop
jle
adc
mov
sub
add
pop
pop
push
sub
xchg
add
cmp
cld
dec
jnp
lea
xlat
data16
push
push
jmp
push
add
nop
push
or
fsubrp
lret
mov
les
js
in
hlt
add
test
enter
or
clc
sub
push
test
push
out
mov
xor
adc
movsw
das
jg
in
and
mov
movsb
push
pushf
xor
mov
aas
lea
ficoms
gs
xorl
cmp
arpl
fldcw
and
mov
cmp
cmovge
movsb
ds
sbb
add
dec
data16
sub
and
jl
cld
mov
add
push
mov
into
push
out
pop
scas
xor
ror
dec
lea
mov
mov
andl
mov
cli
insb
or
pushf
mov
sarb
xchg
xchg
adc
int3
mul
add
jge
adc
pcmpeqd
cmpsb
es
test
xlat
cmp
int3
lret
gs
xchg
pop
into
add
xor
sbb
roll
in
add
adc
fucomip
sub
fisubl
fistpl
rcrw
and
push
mov
xchg
add
sub
mov
push
popf
fsubl
inc
fildl
mov
hlt
mov
rorl
push
xor
lcall
jno
push
push
test
ficoml
cmpsl
mov
into
out
jbe
jmp
mov
push
xor
idiv
mov
sarb
notb
jmp
es
pmaxsw
stc
imul
rorb
inc
push
loop
push
sbb
adc
iret
pop
sub
cmp
mov
ds
popf
lret
test
fs
xor
and
pop
aam
sar
push
push
outsb
out
jno
push
mov
push
pop
xchg
dec
scas
ffree
ret
adc
divl
addr16
lea
and
test
push
pop
jmp
cmp
jnp
ljmp
push
xchg
std
clc
imul
mov
cli
sbb
mov
nop
push
fmul
in
xchg
lods
jle
adc
inc
jno
fdivrl
test
jp
pop
dec
les
rcrb
cli
fcompl
ds
mov
sub
icebp
jecxz
jo
push
fmuls
xor
loope
leave
mov
rcl
cmp
and
nop
es
mov
arpl
sub
dec
and
xor
add
data16
daa
mov
adc
push
in
orb
add
adc
aas
push
loope
addr16
aam
pop
sbb
cmp
sub
loopne
push
insb
out
jle
xorb
jmp
clc
decl
insb
jmp
jne
pop
pop
int
aas
shrl
or
shrl
xor
inc
push
lret
and
xchg
adc
sub
imul
arpl
mov
pop
xchg
mov
jns
or
mov
cwtl
out
outsl
dec
mov
imul
add
scas
add
jmp
popf
xor
gs
test
or
push
inc
jl
mov
push
nop
addr16
push
fwait
pop
dec
movsb
sub
cmp
push
jno
dec
imul
xchg
mov
mov
mov
clc
rcrl
cmp
sbb
fisttpll
loop
pop
cmp
sbb
outsb
lcall
cwtl
mov
mov
in
sub
and
cmpsb
popa
cmpsl
mov
pop
mov
enter
mov
fisubrl
insb
cmp
insl
jecxz
popf
mov
dec
cmp
arpl
inc
cmpsb
testb
add
in
into
mov
pop
js
xchg
scas
test
imul
out
movsb
lock
sahf
pop
mov
imul
sub
jecxz,pt
or
xchg
cmp
ja
testb
xchg
xchg
cli
jb
and
lods
jp
add
xchg
jbe
mov
shrl
mov
daa
pop
add
into
into
adc
int3
and
sub
cmp
add
es
jge
sub
out
push
mov
je
call
ret
cmp
push
adcl
in
mov
pop
lds
mov
or
loopne
in
mov
call
or
les
xor
outsl
hlt
mov
sub
xor
int
jno
adc
pop
fldt
in
jo
mov
shrb
fsubl
jge
jle
inc
xorl
jo
and
push
push
clc
and
or
scas
loopne
pop
jp
mov
pop
xchg
xlat
cltd
notb
xor
daa
inc
mov
insl
lret
maxps
je
cltd
pop
sub
lret
pop
adc
popa
orb
mov
cltd
adcl
in
out
sub
push
mov
cmp
pop
insb
loop
enter
mov
push
sub
push
mov
mov
test
sub
adc
lret
sbb
jno
xchg
xchg
cmp
ljmp
push
jecxz
in
jmp
inc
clc
xchg
mov
adc
mov
xchg
pop
xchg
sub
scas
ljmp
jbe
jns
das
jp
shrl
xchg
pop
dec
push
out
xor
out
xchg
out
cs
lcall
ret
pop
dec
xchg
xchg
loop
je
or
test
sbb
or
out
mov
cmp
inc
in
add
mov
stc
cmpsb
push
adc
adc
call
and
dec
mov
dec
out
fsubs
ficompl
inc
add
pushf
inc
es
jo
outsl
jb
dec
and
ss
ficompl
mov
xor
pop
cmp
mov
inc
andb
rcr
iret
mov
loop
das
out
cs
dec
imul
cmp
iret
jmp
mull
pushf
mov
sub
jl
sbb
fiadds
leave
or
inc
cld
mov
subb
in
sbb
sbb
mov
sbb
mov
jecxz
sub
cltd
loopne,pt
repnz
push
xchg
pop
pushf
pop
ret
daa
push
push
int
push
xchg
jg
dec
popf
or
push
aaa
sbb
stc
lcall
and
movsb
mov
mov
add
in
mov
fcmovb
xor
mov
pop
dec
sbb
imul
sub
les
test
movb
cli
std
xor
aaa
int
hlt
and
push
imul
out
xchg
icebp
ret
mov
sarb
rol
repnz
stc
cltd
or
sarb
xor
dec
jno
or
adc
jp
mov
nop
mov
dec
test
out
aas
outsl
jecxz
mov
and
int
inc
sub
fidivl
test
cmc
mov
xchg
or
popl
dec
lods
in
cwtl
mov
sub
and
inc
decl
ds
jl
cmp
add
lock
dec
push
aas
cmp
leave
lret
jno
mov
cmp
adc
in
pop
mov
or
daa
lea
mov
fwait
push
das
idivb
test
stc
inc
or
dec
sub
ja
or
inc
pop
into
mov
xchg
fadd
out
sbb
xchg
xchg
fdivrp
jg
adc
mov
mov
xor
ljmp
popa
outsl
iret
mov
inc
ljmp
rolb
outsb
int3
shlb
jne
subl
cwtl
dec
divb
lods
push
incb
ret
mov
in
js
mov
jae
mov
cmp
into
scas
push
or
inc
test
push
push
mov
ss
popfw
and
add
push
jle
jae
sahf
mov
pop
xor
jmp
stos
sbbl
xor
add
mov
push
shlb
cwtl
lds
divl
xor
in
xchg
bound
or
adc
jno
pop
mov
test
mov
bound
or
mov
movsl
and
adc
pop
mov
add
cld
stos
fnsave
and
jecxz
mov
jecxz
mov
adc
push
stos
shlb
push
aam
jmp
or
adc
inc
arpl
imul
mull
mov
lahf
ljmp
pop
or
mov
pop
mov
pop
out
dec
outsl
mov
call
cmpsb
into
inc
iret
and
sbb
fistl
mov
xlat
daa
jp
pop
pop
std
test
mov
leave
mov
xlat
and
pop
std
sub
sub
and
arpl
pop
sahf
fimuls
jnp
xor
outsl
test
lock
inc
into
jecxz
ss
push
fwait
sti
or
and
fcoml
adc
cmp
cmp
and
push
dec
shlb
and
sub
stc
fisubrl
cld
jne
dec
jb
scas
mov
xor
add
push
dec
je
shlb
stos
cmp
repz
in
add
push
lea
push
push
aaa
jecxz
bound
push
jno
cli
jmp
imul
mov
pop
xchg
xor
pop
icebp
lcall
xchg
push
cwtl
or
xchg
fnstcw
mov
outsb
jmp
repnz
xchg
ds
fmuls
rcll
scas
sub
rcll
xor
xchg
inc
aam
mov
add
xchg
insl
pop
dec
fisubs
adc
push
jg
lret
inc
cmpsb
lahf
divl
or
mov
sti
and
sub
sbb
lods
fs
and
stos
jb
inc
jbe
xlat
mov
or
xor
ljmp
inc
divl
es
repnz
out
jp
aam
mov
in
mov
push
in
movups
leave
enter
bound
sbb
lock
xor
popf
addl
in
adc
leave
pop
add
pop
mov
mov
push
es
sarl
lea
xor
xor
fimull
push
add
mov
jmp
in
or
mov
add
pop
inc
lods
push
xchg
and
cmp
in
loope
xor
pop
mov
cmp
ljmp
dec
cld
jecxz
bound
sbb
inc
sub
sub
shlb
push
lods
popf
adc
mov
adc
and
les
iret
inc
xchg
mov
je
push
cld
add
pop
sub
pop
inc
hlt
int3
sub
jp
dec
das
mov
sub
bound
inc
mov
pop
addb
push
mov
cmp
push
push
enter
aam
std
push
push
loopne
push
pop
mull
in
mov
cmc
inc
negl
pop
arpl
aad
enter
sti
stc
repnz
jae
les
add
ds
loop
pop
xchg
out
xlat
jg
out
bound
add
popf
mov
mov
das
loopne
pop
dec
lods
repnz
and
xchg
push
cmp
andb
in
fucomip
mov
cli
test
xor
dec
das
mov
nop
aad
cmpsb
xor
bound
scas
shlb
lcall
arpl
dec
stos
pop
push
lret
lret
mov
je
loop
and
and
mov
push
pop
enter
jecxz
lock
jnp
hlt
inc
popf
inc
lds
repz
jno
dec
mov
sub
daa
pop
mov
adc
repz
out
cmpsl
push
ljmp
cmc
sbb
andl
mov
mov
or
incl
stos
jne
or
notb
adc
mov
dec
dec
sbb
aas
push
or
jg
addr16
mov
ja
popw
arpl
sbb
pop
sub
pop
push
test
inc
xor
or
xchg
xor
jb
pushf
cltd
inc
lahf
xchg
adc
xchg
cmc
push
inc
cmp
lret
dec
lcall
cmp
inc
shrb
sub
adc
add
sar
movsb
sahf
mov
adc
adc
jecxz
and
lods
cmp
in
sbb
adc
push
fisubrl
insl
cltd
addb
jg
cmp
inc
icebp
mov
xlat
push
xchg
jl
das
xchg
int3
mov
fldenv
add
lods
shrl
pop
test
pop
push
movsb
cmp
outsb
bound
cmpsb
mov
and
iret
pop
pop
push
outsb
xlat
cmc
dec
test
fldenv
call
lcall
ds
cmpsl
imul
mov
xlat
test
in
negb
add
fisubrl
pop
in
and
inc
addb
mov
jle
pusha
movsl
test
adc
popf
sub
pop
inc
ja
js
mov
inc
sub
icebp
ja
xchg
test
int
add
fucom
inc
jae
data16
jmp
mov
js
outsl
add
push
adc
push
std
popf
mov
adc
add
or
out
insb
jbe
jnp
cwtl
mov
ss
pop
loope
mov
push
outsl
fnsave
xchg
sub
adc
adc
cmp
xchg
gs
je
jae
and
mov
xchg
in
mov
cli
sbb
ljmp
jmp
mov
adc
jnp
add
mov
loop
test
xor
add
pusha
or
test
lret
sub
cltd
inc
xchg
add
jo
call
test
jmp
lret
inc
lods
fimuls
ret
jmp
fstl
fs
je
enter
and
sub
clc
xchg
sbb
stos
mov
mov
lahf
bound
adc
aam
out
sbb
add
mov
dec
sbb
imul
mov
jmp
cwtl
inc
xchg
lds
adc
dec
shlb
mov
mov
mov
sub
rclb
fwait
test
and
es
hlt
mov
lock
and
and
mov
stos
jb
mov
sbb
mov
insl
into
das
ret
mov
aad
leave
mov
outsb
jo
aas
dec
mov
movsb
sti
push
mov
into
pop
mov
hlt
sti
sub
adc
inc
jne
lods
mov
fildl
stc
xchg
rcl
ja
xor
pop
imul
jb
push
aam
cli
les
lahf
mov
pop
inc
bound
adc
fists
pop
neg
pop
into
mov
lss
mov
and
push
fdivrl
push
inc
stos
ficompl
pop
fistl
pop
xchg
mov
imul
fcompl
xor
xchg
jnp
cmpsb
dec
sub
cwtl
jnp
dec
nop
insl
push
xchg
lods
out
loop
adc
xor
cmp
pop
addr16
jo,pn
rolb
pop
test
sti
push
dec
push
or
pusha
fwait
sti
outsl
cmpsb
dec
jl
jle
inc
xchg
jno
sub
xrelease
dec
pop
arpl
ret
hlt
pop
inc
mov
mov
pop
test
leave
fildl
into
movsl
mov
orl
mov
mov
lds
jp
sbb
sbb
pop
shlb
xchg
lret
inc
jmp
mov
sub
mov
xor
out
ficompl
orl
xchg
out
gs
mov
jg
push
cmp
mov
cltd
mov
test
adc
inc
ja
dec
loopne
repnz
mov
arpl
add
inc
mov
and
je
out
pop
loop
pushf
push
ret
iret
ljmp
addr16
lock
es
insl
adc
lahf
js
dec
jbe
dec
movsl
or
push
mov
aad
push
xor
fwait
pop
in
xchg
pushf
push
sub
in
loope
lahf
popa
adc
sub
fs
js
bound
fdivs
nop
xchg
mov
xchg
aas
jbe
pushf
push
ss
sbb
cmpsb
mov
in
cmp
inc
adc
jnp
mov
push
pop
adc
outsb
jmp
adc
push
adc
fbstp
and
dec
int3
pop
add
add
push
sub
inc
cmp
add
push
adc
cmp
sahf
inc
mov
mov
idivb
out
push
movsb
pop
cmpxchg8b
push
icebp
fdivrl
cld
add
inc
xor
jno
and
add
icebp
stos
pop
mov
sub
ljmp
and
pop
xchg
and
test
push
mov
add
mov
outsb
dec
sar
pusha
sti
aas
xlat
sbb
push
xchg
or
out
lcall
mov
mov
jo
je
repz
dec
and
pop
cmc
adc
pop
cmp
pop
mov
adc
jbe
in
into
data16
outsb
cli
shl
out
jmp
ret
mov
push
mov
stos
push
inc
fs
cld
push
mov
jmp
cli
xor
mov
pop
jmp
push
mov
add
jae
mov
clc
divb
xchg
xchg
mov
sbb
insb
xchg
stc
int
pop
sub
add
movsl
xchg
inc
sub
ja
xchg
mov
mov
jo
out
stos
sti
je
mov
sbb
push
push
mov
flds
mov
pop
sub
arpl
mov
xor
or
and
movsb
push
in
and
aad
or
icebp
stos
push
mov
cltd
mov
daa
lea
daa
push
andb
jg
sbb
push
fwait
pop
cmp
addr16
sub
and
mov
ja
jnp
js
cmp
or
ss
orb
jae
cs
int
cltd
push
adc
mov
lret
adc
daa
xchg
lcall
pop
inc
cmpsl
fwait
push
out
je
test
lds
sub
jmp
clc
into
mov
sahf
dec
cmp
pop
mov
push
lcall
push
sbb
repnz
loopne
xchg
xor
imul
out
jns
xchg
cmp
repz
xor
int
int
icebp
mov
dec
icebp
ret
push
sbb
mov
leave
aaa
inc
adc
xor
call
jnp
enter
sub
mov
insb
rorb
int
cmp
out
xor
xlat
xor
insl
mov
inc
out
jl
rorl
adc
sub
pop
loop
daa
insb
ss
mov
xor
jp
loopne
mov
sbb
adc
jo
and
fcmovu
mov
push
cmp
shrb
jns
jae
jge
inc
jae
sbb
and
clc
mov
ja
add
jle
push
pop
cmp
jmp
dec
push
stos
in
rorl
in
loope
cli
ds
add
mov
xchg
fstpt
jmp
imul
sub
push
xor
out
mov
aaa
adc
std
insl
sti
or
rcr
das
pusha
cwtl
sbb
pop
cwtl
iret
push
aad
ds
aam
push
jo
jle
jno
shlb
stos
dec
ds
mov
pop
mov
lods
xor
paddb
mov
aad
ds
int3
jp
dec
add
cs
mov
add
dec
xlat
push
sub
xor
scas
cld
push
xor
cltd
mov
xor
stos
inc
and
cs
mov
sub
jg
cmp
in
enter
mov
mov
pushl
sub
std
or
xchg
cmp
cmp
jb
and
fcomp
and
mov
jp
es
jge
stc
idivb
push
xchg
mov
mov
xor
pusha
rcrb
das
mov
xchg
outsb
clc
jns
movsb
outsl
jp
add
out
inc
add
sbb
subb
cs
pushf
stc
xchg
jecxz
pop
xor
push
mov
and
pop
fimull
and
or
cmpsb
or
sti
outsb
orl
ja
mov
cmpsb
add
stos
mov
pop
sub
jne
push
pop
cmp
repnz
aam
cmc
and
and
and
cltd
pop
stc
add
mov
xchg
dec
cs
mov
add
add
loope
sbb
lahf
outsl
cmp
pop
sbb
movsl
cmp
rcll
iret
adc
cmpsb
mov
push
mov
aad
and
lcall
int3
in
lds
cmpsb
mov
repnz
pushf
sub
ljmp
sbb
mov
fwait
jp
adc
insb
mov
mov
mov
dec
inc
and
test
fdiv
mov
cmp
in
sub
std
adc
sub
sbb
xor
jns
mov
movb
cmp
jmp
mov
ds
addr16
sbb
xchg
jl
adc
or
cli
dec
or
pop
mov
cltd
pop
inc
mov
ret
inc
inc
xor
push
fwait
sub
xlat
cmp
lea
fbld
data16
xlat
out
sahf
iret
mov
bound
mov
xor
andb
aas
jae
push
cmp
loope
fcomi
dec
mov
lock
dec
jno
lahf
xchg
push
push
xchg
add
adc
mov
xor
and
sti
je
xchg
push
ret
and
call
out
sbb
sub
repz
lds
add
mov
pop
mov
cmpsl
push
rolb
sti
mov
inc
jmp
jae
mov
adcl
cmpsb
test
mov
add
mov
ffreep
and
inc
iret
add
sub
cli
dec
sbb
mov
sbb
jbe
inc
cmp
fldt
sub
les
dec
push
sbb
dec
jp
inc
ss
dec
sar
loop
jne
imul
jg
inc
dec
in
movsb
lcall
mov
mov
mov
loopne
cmp
fadds
sub
pop
aas
out
rclb
mov
pusha
fsubr
lods
je
and
pusha
push
jge
scas
js
sbb
and
xor
pop
inc
cmp
paddsb
lds
xchg
push
cmp
jb
sbb
testb
dec
cmc
inc
dec
jb
sti
sbb
and
pop
push
icebp
testb
data16
clc
xlat
lret
push
notb
mov
adc
inc
pop
mov
dec
xor
cmp
je
ret
inc
or
xchg
jl
xor
sbb
push
movsl
popf
std
pop
lods
mov
idivl
mov
mov
jmp
out
pop
jns
or
lahf
int
lock
jo
decb
cmp
call
mov
xchg
xchg
aaa
es
cmp
movsb
add
and
xchg
mov
inc
in
pop
fadds
inc
lods
cwtl
mov
sbbl
and
aaa
notb
mov
jne
pop
and
outsb
push
jp
add
addb
mov
dec
loop
test
lods
stos
sub
out
pop
pop
ret
xchg
bound
cmp
out
fdivrs
cwtl
mov
pop
xchg
push
mov
jmp
call
push
std
add
enter
into
jmp
loopne
sarb
dec
jp
int
push
aas
lods
dec
jle
add
out
nop
jnp
or
xchg
shrl
stc
or
inc
jmp
add
cld
rorl
nop
fmul
sub
adc
rorb
push
rolb
xchg
or
sub
fistpl
cwtl
jmp
jecxz
add
or
push
mov
lcall
iret
xor
jo
push
mov
lea
mov
cli
test
jl
jne
inc
scas
pop
out
xchg
loopne
dec
shrb
sub
mov
cmc
jo
icebp
scas
cltd
movsb
mov
dec
sahf
ljmp
icebp
mov
sub
and
jecxz
es
dec
arpl
inc
scas
pop
pop
and
fbstp
rcrb
pop
mov
push
inc
call
inc
xor
push
adc
jno
pop
inc
enter
call
jmp
mov
stos
arpl
mov
negb
inc
int
or
dec
xchg
push
scas
cmpsl
test
adc
push
xchg
lahf
das
out
sti
and
scas
pop
jecxz
pop
sub
je
aas
jno
sub
dec
out
cmp
rolb
xchg
sub
cmp
scas
fucomip
push
pop
popa
jge
jg
push
mov
fidivrl
push
out
arpl
lcall
cmp
cltd
or
jge
push
xor
gs
mov
xor
add
aam
inc
sub
push
pop
idivl
daa
inc
mov
jl
je
pop
wbinvd
hlt
hlt
imul
lret
mov
shrb
and
jmp
mov
subb
xlat
push
test
sbb
daa
pop
dec
je
and
push
insb
scas
fcmovnb
fmull
sub
pop
mov
sahf
mov
add
arpl
ss
cwtl
jecxz
fldlg2
mov
test
jnp
pushl
mov
sbb
nop
jno
dec
stc
call
pop
outsb
xor
arpl
movsl
lcall
push
jnp
push
sub
mov
push
ljmp
add
arpl
ret
sbb
int
jnp
ja
jmp
jl,pn
mov
dec
scas
ret
or
lcall
jmp
cmp
outsb
pop
mov
adc
gs
mov
std
jne
push
fnstenv
psubb
mov
repz
lret
xor
lret
sti
mov
mov
cmp
int
js
sbbl
jb
sahf
sbb
aad
push
xchg
nop
cltd
cmpsb
xor
sub
adc
xor
pop
jne
sahf
mov
pop
stc
sub
std
daa
pop
enter
mov
push
xchg
pushf
xor
adc
fs
hlt
out
scas
movl
jb
stos
dec
xchg
repnz
xchg
cmp
push
and
imul
ret
fisubl
push
and
mov
inc
xorl
scas
mov
cli
leave
dec
fildll
sbb
push
rol
aas
xchg
jl
enter
inc
mov
push
push
js
mov
inc
push
sbb
mov
jno
jle
and
rcrb
jb
or
and
pushl
jecxz
rorl
fs
ss
sbb
adc
sub
outsl
lea
mov
push
push
leave
movsl
lods
in
dec
mov
decb
mov
pop
and
sub
mov
pop
push
fs
ds
mov
ret
cld
push
dec
in
xchg
pop
push
dec
hlt
mov
sub
adc
inc
push
cmpsb
pop
in
lds
addr16
fstl
lea
lds
add
add
pop
int3
aaa
mov
ds
sbb
filds
or
jnp
arpl
repz
sub
jmp
xor
dec
pop
cmpb
add
mov
inc
stos
xlat
ret
cmpsb
push
xchg
insb
scas
push
adc
movsl
push
mov
mov
mov
mov
push
mov
mov
push
cmp
pusha
cmp
push
inc
cmc
pop
xor
inc
sarb
test
js
jnp
xor
dec
add
inc
dec
cwtl
mov
pop
addl
sbb
pop
push
inc
cmp
cmpl
je
test
jg
add
cmp
cltd
and
adc
inc
push
and
mov
sub
fimuls
mov
int
inc
cmp
mov
xchg
std
das
fcomi
test
roll
pop
cmp
xchg
hlt
stos
test
mov
clc
sbb
sbb
das
push
push
and
or
xchg
mov
inc
lods
sub
and
jg
fildl
fdivr
jae
push
xchg
insl
cmp
jo
add
inc
push
loope
dec
out
ret
jbe
loop
sahf
cli
sarl
cld
mov
pop
into
cmp
xchg
enter
cmc
shll
push
sarl
test
and
mov
sbb
dec
fisubs
clc
pusha
sar
xchg
xchg
pusha
adc
ret
aas
add
or
pop
pop
sar
lock
inc
push
cwtl
or
jg
dec
mov
jmp
or
pop
xor
dec
aad
inc
in
out
add
sub
ljmp
cmp
sub
cmpsb
inc
jl
rorl
mov
ss
cld
jb
clc
pusha
sub
cmpsl
fdivr
mov
ja
mov
es
adc
jb
sub
leave
mov
clc
xor
cwtl
xchg
lret
test
int
js
mov
daa
mov
arpl
mov
fdivrp
sub
jecxz
jle
cwtl
mov
das
test
pop
sarl
fnstenv
sbb
or
pop
xchg
xchg
rcrb
ds
clc
sub
outsl
jge
xlat
stos
or
arpl
xchg
and
mov
jge
add
push
out
xchg
mov
test
push
add
int3
cmpsb
jne
ds
enter
or
inc
push
xchg
mov
aad
jp
aaa
cwtl
fwait
test
test
sub
xor
add
lods
pop
stc
stc
jbe
mov
and
bound
push
mov
xchg
mov
dec
add
sarl
xlat
mov
inc
adc
push
pushf
push
imul
fsqrt
iret
std
inc
xor
inc
sbb
cwtl
pop
call
pop
loopne
add
sbb
decl
mov
xchg
out
sbb
imul
arpl
stos
mov
in
in
movsb
or
test
outsl
mov
pushf
inc
pop
xor
or
inc
jne
lock
cltd
mov
sbb
mov
mov
into
mov
and
mov
cmp
aam
cli
call
dec
aas
in
lods
mov
clc
rcrb
and
fcmovne
fwait
cmpsb
mov
xchg
mov
shll
in
mov
daa
adc
add
push
xchg
cmp
pop
hlt
stc
mov
mov
jne
stos
lret
cmpsb
mov
push
push
ret
in
jl
jns
test
dec
add
add
orl
xchg
out
xor
mov
and
or
mov
jmp
ljmp
fdivrl
pop
sbb
fcoms
pop
aaa
mov
lahf
jmp
cmc
ds
dec
pop
inc
mov
xor
lret
pop
xchg
pushl
jb
cmp
adc
cmp
sub
dec
mov
mov
add
fimuls
dec
mov
xchg
es
xchg
fbstp
int3
ret
inc
sub
cmpb
sub
dec
pop
push
addr16
insl
dec
lds
scas
mov
xchg
test
cwtl
sbbl
push
mov
push
int
idiv
adc
inc
aad
enter
lahf
xchg
in
jl
dec
push
out
fldt
sbb
movsl
out
lods
fistpl
mov
xchg
adc
daa
arpl
mov
adc
aas
ljmp
les
inc
mov
mov
negb
or
jmp
push
lea
mov
jle
leave
jle
sbb
je
insb
mov
xor
aad
xlat
pop
mov
rcrl
lea
lahf
mov
pop
clc
iret
test
pop
or
mov
nop
push
lock
cmpsb
pop
aas
fistl
cmc
jp
cmp
sub
rcr
ds
push
xor
movsl
and
jmp
mov
sbb
mov
mov
mov
xchg
xchg
das
jle
cmp
mov
notb
mov
sarl
mov
les
pop
addr16
xlat
push
push
mov
jae
push
xchg
lret
sub
xchg
fisttpll
notl
cmp
in
out
or
loope
and
movsb
sbb
xchg
push
lret
inc
mov
or
repnz
jno
addb
jmp
popa
mov
mov
data16
repz
ljmp
xchg
mov
imul
pusha
mov
stos
mov
push
adcb
mov
js
pop
pusha
call
cmp
jb
ljmp
fistl
mov
mov
cmc
cld
mov
jge
dec
movsl
add
jnp
movsl
dec
add
mov
fldcw
sbb
sbb
cmp
popa
add
xor
sti
cmp
mov
mov
ret
repz
stos
or
cmp
pop
pop
dec
push
cmp
or
sub
divb
hlt
sarl
sub
in
lds
std
add
cmc
movsb
mov
das
add
pop
push
aad
push
cmp
pop
pop
shrl
jg
push
pusha
mov
jge
shlb
push
push
xchg
cmp
das
sub
sbb
loope
sahf
cmp
fdiv
imul
fsubl
sub
jle
dec
mov
push
mov
in
test
lcall
dec
loope
daa
dec
push
filds
push
fimuls
mov
dec
mov
inc
sbb
dec
fwait
xor
sahf
add
scas
xchg
lahf
dec
stos
mov
inc
push
rol
js
int
lods
mov
or
mov
popf
pop
mov
sbb
dec
in
shlb
mov
iret
jb
jno
xchg
popf
leave
adc
cmp
mov
jno
mov
popf
call
push
ss
arpl
outsl
clc
push
dec
lret
mov
sbb
xchg
outsl
loopne
cmpl
fidivrl
mov
lea
sbb
cmp
push
test
push
adcb
cltd
stos
and
inc
hlt
mov
mov
es
push
loopne
mov
popa
mov
sub
cmp
xlat
push
mov
aaa
mov
mov
add
adc
jmp
pop
test
mov
xor
hlt
jne
mov
add
insl
push
and
mov
dec
jp
sti
mov
and
daa
or
fistpll
scas
or
mov
movsl
lahf
lcall
sbbl
ss
and
outsb
test
fnstcw
sub
outsb
pop
push
mov
mov
xchg
mov
in
lret
pop
or
sub
xlat
negb
cmpsb
ja
or
insl
push
movsb
pop
pop
stos
mov
pop
lods
push
pushf
iret
xchg
nop
push
push
fcompl
imul
and
add
out
xchg
sbb
pop
push
add
cmpsl
shrd
mov
mov
xor
popa
dec
jecxz
pusha
xchg
int
cmp
mov
push
out
inc
jo
movsb
mov
subl
inc
xchg
popf
int3
fmulp
shl
aas
cmp
lret
popa
pop
cwtl
inc
push
xlat
cmc
scas
f2xm1
loope
mov
enter
fidivrs
pop
sahf
mov
adc
cmp
movsl
cwtl
cwtl
je
cmp
stos
jo
mov
jno
imul
sarb
adc
daa
dec
rorb
jne
push
add
popf
ds
rep
cmp
es
stc
aaa
aaa
fnstsw
xchg
adc
xchg
imul
imul
out
sub
inc
sub
jb
mov
inc
or
ret
outsl
repz
daa
sub
push
cmc
cli
les
mov
push
enter
and
jmp
stc
jnp
out
add
ret
jmp
mov
xchg
cmp
mov
mov
stos
test
push
out
xchg
mov
xlat
pop
lods
outsl
and
ds
cmp
xchg
lea
push
sbb
sub
aad
ss
add
xchg
cmp
neg
mov
jl
orb
stc
xchg
cld
adc
fdivrs
pop
dec
out
mov
xchg
or
add
popf
jae
shld
cltd
inc
fcmove
sub
sbb
nop
mov
lahf
clc
adc
jecxz
adc
js
sbb
mov
aad
call
jg
adc
aaa
sahf
cmpsl
jmp
out
add
repnz
cmp
mov
iret
mov
out
lret
imul
add
out
test
imul
std
aaa
aas
out
es
mov
or
cmpsl
cmp
inc
xor
loop
mov
push
gs
xor
inc
sbb
pop
ja
daa
cmp
jge
stos
or
sbb
mov
fwait
inc
cmp
divl
popf
mov
xchg
or
lcall
sub
mov
je
jecxz
cmc
push
mov
xchg
lret
test
ficomps
bound
dec
js
cltd
and
push
or
aad
mov
test
leave
dec
and
jb,pn
adc
xor
int
mov
push
bnd
fdiv
fnstenv
inc
push
dec
jo
pop
testb
clc
xor
cmp
aam
ja
mov
add
das
jnp
cmpsl
ret
mov
and
inc
pusha
ffreep
jb
sub
in
stos
inc
das
pop
sub
jle
inc
pop
mov
pop
jnp
sti
fmul
cmp
imul
sbb
enter
inc
das
mov
stc
xchg
std
xchg
fisubl
dec
aaa
ljmp
and
xlat
jo
cmp
xor
ja
cmp
faddl
mov
jecxz
ss
mov
mov
mov
push
adc
mov
xorl
fucomp
or
cmp
repnz
movsl
mov
sub
dec
sbb
mov
stc
mov
cltd
lret
cmpsl
rcr
xor
mov
jmp
sbb
cmpl
or
xor
movsl
xor
out
clc
adc
and
mov
icebp
addl
out
pop
sbb
push
xchg
es
push
jge
adc
fstl
ret
ret
fs
pop
fwait
js
dec
add
insl
pop
xor
aad
mov
sub
jb
ds
jno
outsl
int
sti
idivb
xor
adc
cld
jnp
jg
add
decb
subl
push
test
push
lods
mov
push
push
push
sub
jno
adc
xor
sub
cmc
fisubrs
int
push
xchg
rcrb
or
mov
add
scas
lods
xor
mov
pop
ds
cmpsl
mov
and
adc
loopne
ja
scas
jnp
insl
or
ljmp
scas
jl
xor
mul
cli
pop
fistpl
cli
xor
sbb
xorl
push
xchg
adc
outsb
cmp
adc
push
mov
xor
xor
das
dec
sahf
lea
popa
subb
out
push
push
inc
jb
pop
js
push
push
push
mov
xor
xchg
mov
sub
mov
dec
and
mov
push
icebp
sub
and
data16
sbb
and
mov
into
mov
ja
or
cs
sbb
lcall
and
jge
xor
dec
adc
in
and
outsl
push
xchg
pop
ss
sub
in
dec
lods
pushf
ss
mov
out
pop
nop
lret
adcl
mov
orb
mov
cltd
ror
sub
out
lahf
stos
push
aam
out
adc
and
in
push
sub
cmp
push
mov
xor
add
adc
push
mov
mov
cmpsb
push
push
nop
neg
adc
nop
sub
add
jmp
mov
pop
dec
inc
lret
rorb
sub
popa
mov
mov
adc
cmp
out
pop
xchg
movups
js
xchg
fldt
nop
mov
cmc
lods
pusha
inc
movsb
fidivl
sub
inc
fiadds
movsl
mov
sbb
jno
fcmove
dec
adc
icebp
push
out
ret
out
pop
int3
sbb
ss
push
aad
fstps
mov
mov
cs
sbb
or
and
daa
scas
push
sbb
fidivs
add
mov
stc
cmp
mov
mov
mov
jmp
mov
xchg
imul
dec
incl
outsl
add
xor
jb
pop
xor
addr16
lock
mov
xor
loop
jno
xor
cmp
cmpsb
pop
xchg
push
sub
sub
adc
stc
test
test
movsb
in
inc
pop
or
inc
cmpsl
and
loope
cwtl
fisubrl
fmuls
in
adc
orl
out
iret
inc
icebp
push
imul
dec
int3
push
popl
mov
mov
lcall
sub
lea
add
repnz
pop
push
push
push
mov
sahf
mov
rcll
daa
dec
adc
xchg
push
lea
sahf
repz
es
shufps
mov
in
push
test
gs
fucomi
and
push
xor
sub
or
shr
push
jle
lds
dec
adc
fdiv
pop
scas
test
in
pop
dec
js
xchg
in
mov
mov
popf
je
cwtl
xchg
add
movntq
out
imul
rcrb
shll
add
jle
outsb
into
push
or
out
jae
div
insb
inc
or
insb
lods
mov
shrl
xchg
push
push
jp
std
loop
imul
ret
icebp
ficompl
cld
cmp
jns
mov
xor
mov
icebp
cmc
push
mov
lock
in
pop
es
cmpsl
jb
inc
dec
jo
adc
xchg
mov
outsb
movsl
xchg
fs
ret
adc
sbb
jg
xchg
jmp
imul
aas
xchg
add
jmp
adc
or
addr16
cli
xor
sub
sub
insb
xchg
push
clc
mov
mov
pop
xchg
hlt
push
sub
cmc
sbb
divb
call
pop
aad
add
insb
pushf
jge
scas
adc
dec
ficoms
popf
lods
pop
sbb
jns
inc
dec
outsl
dec
pop
push
dec
loop
xor
push
or
dec
add
mov
mov
jae
push
xor
repz
sub
pop
add
gs
out
jb
inc
mull
dec
jle
imul
into
pushl
xchg
mov
push
inc
rorb
enter
arpl
xchg
imul
inc
mov
sub
clc
or
mov
outsb
mov
ja
and
mov
xor
rcr
adc
out
push
bound
ss
inc
invlpg
inc
outsl
or
fisubrs
push
inc
mov
ss
inc
repnz
dec
push
inc
jle
es
push
sbb
lods
inc
enter
ficompl
jae
dec
addl
gs
lret
sub
mov
xchg
js
stos
dec
test
fsubs
jb
mov
gs
bound
xchg
push
not
rcrb
adc
dec
imul
nop
cmp
arpl
in
mov
sub
add
sarl
pop
adc
or
pop
les
dec
iret
xor
jbe
sbb
dec
insb
test
movsb
shrb
movsl
pop
push
jle
cmpsb
call
outsl
xchg
imul
jbe
mov
int
popa
clc
sub
decl
xchg
loopne
loope
cmpl
mov
cmp
das
push
call
pop
lret
addb
inc
mov
xchg
out
add
and
push
popf
std
ja
jg
icebp
lret
and
into
pop
inc
lret
or
fisubrl
pop
pop
xchg
pop
popf
icebp
pop
fs
dec
rolb
int
imul
cmp
pop
shll
xor
jnp
enter
sub
out
sbb
pop
mov
mov
scas
push
jecxz
dec
mov
call
mov
dec
mov
gs
lods
mov
push
adc
sub
mov
div
push
loop
das
xlat
je
push
jecxz
je
arpl
pop
outsl
and
dec
in
inc
or
jp
fdiv
mov
push
mov
cmc
mov
loope
inc
lcall
mov
fimuls
aad
mov
mov
jmp
dec
push
int
mov
aad
jl
adc
aas
or
daa
inc
push
js
xchg
mov
icebp
and
xorl
jge
or
sbb
mov
and
adc
jg
xchg
hlt
lock
pusha
add
lea
push
fwait
sarl
xlat
add
call
sbb
sbb
ret
xlat
test
iret
add
ficoms
dec
nop
cmpsl
insb
lds
jns
inc
lret
icebp
push
or
stos
rcr
add
mov
xchg
sub
sub
add
dec
aaa
insl
sub
pusha
or
ficompl
push
ret
ja
cmp
out
mov
push
dec
mov
int
and
in
push
decb
adc
addr16
jo
xchg
push
sub
je
or
push
imul
mov
jecxz
loope
ffreep
inc
and
int3
ja
imulb
ret
mov
sub
push
mov
xlat
cld
sub
gs
notl
dec
push
jb
push
lcall
inc
inc
loope
and
js
leave
fidivs
shlb
sbb
jecxz
pop
jb
mov
pop
jle
xchg
mov
iret
fmull
adc
fistps
in
or
push
mov
and
and
int3
pop
out
incb
adc
addl
sub
mov
ds
dec
and
mov
and
inc
mov
jp
dec
sub
test
out
dec
sub
lds
cwtl
psubusw
loop
jp
divb
pushf
push
lds
aad
sbb
out
jle
mov
pop
scas
push
mov
sbb
jl
pop
or
clc
add
sbb
neg
pop
mov
fdivs
lcall
cmpsb
mov
test
call
mov
jno
call
sbb
jl
mov
inc
add
or
push
dec
into
push
cmpsb
sti
pop
cmp
jae
push
movsl
fadd
mov
cld
fisttpl
inc
stos
sub
sbb
mov
adc
mov
jmp
test
push
movsl
clc
repz
inc
or
verr
pop
lock
inc
mov
xchg
fisttpll
mov
dec
push
jnp
dec
lcall
stos
movsl
add
fwait
xor
fabs
jno
push
jnp
loope
pushf
arpl
out
mov
mov
push
xor
lods
outsl
jge
test
sarl
cs
mov
mov
fcmovnu
mov
push
jo
mov
notl
rorl
mov
faddl
out
out
sti
adc
fnstcw
sub
push
testb
xor
notl
xorb
jmp
mov
pop
dec
cwtl
dec
xchg
sahf
shrl
gs
out
fwait
movsl
cmp
adc
orb
jns
xor
xor
cmpsb
shll
adcb
das
mov
or
xchg
std
iret
dec
lret
js
bound
out
push
xchg
outsb
mov
adc
stos
aas
xor
iret
mov
cli
test
pop
pop
sarl
insl
jmp
js
hlt
cld
jmp
sbb
shrb
aam
test
jne
lcall
pop
lahf
les
in
daa
std
inc
sti
inc
push
jo
xchg
ds
xchg
lock
jp
dec
clc
mov
sub
das
cld
std
push
iret
ja
dec
jmp
push
movsl
cwtl
xchg
and
mov
inc
push
push
or
inc
jmp
adc
pop
pop
or
gs
xlat
mov
mov
push
leave
movb
dec
add
sbb
clc
dec
out
xchg
add
out
jb
stos
xchg
test
mov
mov
sahf
movsb
rorl
sti
loop
stc
rcll
sahf
xchg
mov
mov
mov
rcll
shll
fcom
jecxz
xchg
xor
inc
sub
adc
rcrb
cmp
or
mov
push
out
std
or
roll
sbb
fsubl
clc
xor
xlat
adc
push
outsl
mov
dec
imul
icebp
lcall
lahf
ret
mov
cmc
icebp
fwait
jle
fwait
jnp
adc
leave
mov
xchg
xor
mov
ret
aaa
out
mov
sub
mov
cmc
sub
cmp
mov
call
cmpb
push
mov
add
aas
dec
or
lds
push
clc
cmp
push
adc
inc
xlat
test
mov
adc
sub
mov
jl
out
or
movsb
out
sahf
pop
xchg
dec
sub
or
jb
testb
sti
mov
pop
lret
jo
xchg
xor
sarl
mov
cmp
xchg
and
cmp
sbb
mov
mov
jb
jns
adc
dec
mov
sbb
not
dec
and
xlat
or
or
adc
or
mov
lahf
dec
cmp
pushf
jecxz
jle
fmull
daa
adc
sbb
repnz
inc
pusha
push
lds
push
mov
mov
inc
or
sbb
dec
push
loop
out
test
sub
lods
es
jo
jo
adcb
xchg
cmc
mov
xor
cmp
mov
sbbb
fcoml
out
adc
or
nop
push
test
xor
fnstsw
mov
jmp
int3
aas
add
dec
loopne
mov
dec
out
fadds
test
pop
adc
pop
cmc
and
dec
mov
mov
push
and
int3
mov
ds
shl
iret
lahf
sbb
mov
mov
xor
sub
add
xor
repz
or
mull
out
xchg
fdivrs
lret
push
mov
xor
cmpsl
pop
mov
outsl
repz
pop
mov
or
sbb
jle
dec
arpl
insb
mov
int
sub
xchg
psadbw
mov
adc
mov
fbld
jbe
andb
mov
jl
fsts
pop
mov
scas
push
sbb
add
dec
and
notb
mov
push
in
pop
xchg
adc
adc
pop
push
xchg
cs
or
pop
pop
or
shlb
leave
in
and
outsb
add
inc
push
inc
mov
mov
out
jb
sub
test
mov
inc
mov
setae
xchg
xor
das
jb
jb
sbb
ljmp
mov
mov
es
xor
and
test
mov
mov
add
out
adc
test
dec
xor
mov
jmp
adc
cmc
repz
dec
stos
mov
inc
mov
mov
jns
mov
pop
mov
and
pop
push
leave
mov
orb
push
out
jg
xor
cwtl
test
sub
pop
jo
pop
outsb
cli
mov
jmp
int3
xchg
xor
sbb
leave
mov
adc
ss
pushf
mov
dec
sbb
and
or
repnz
xchg
push
loop
mov
push
sbb
test
out
cli
outsb
pop
imul
in
dec
mov
cmp
jmp
fsubrl
fs
dec
jp
and
cmc
cltd
mov
pop
mov
cs
arpl
push
insl
fiaddl
cmpsb
pop
inc
stos
jae
inc
aas
subl
flds
xchg
cmp
xor
gs
add
or
insb
lea
arpl
xchg
jb
push
and
xor
add
xchg
es
jnp
imul
ds
loopne
pop
dec
mov
aam
into
imul
xor
jp
cli
pop
push
jl
dec
mov
repnz
push
or
mov
test
mov
lea
xor
push
mov
subl
data16
ljmp
cmp
aaa
push
cli
dec
mov
fdivrs
in
inc
jae
cmpsb
insb
sti
stc
stos
xor
movsb
xor
inc
into
jle
push
aaa
mov
sarl
test
mov
or
xchg
outsb
pop
xor
pop
inc
and
scas
pop
pop
mov
mov
les
inc
out
cmpb
mov
ja
push
mov
in
fucompp
cmp
data16
fcoml
dec
dec
jge
fnstcw
and
xor
cmpsb
push
sbb
lcall
pop
jge
jl
jp
or
or
or
sub
ds
sbb
adc
inc
push
shrb
iret
xchg
cmp
repnz
dec
jl
or
add
rcrb
mov
ss
testb
insb
shl
jg
mov
add
mov
xchg
mov
sti
push
dec
jl
lds
shll
out
andl
or
sbb
pop
mov
fistl
loopne
push
pop
sti
fdivs
sub
mov
rcll
decb
imul
sub
and
and
cld
sarl
in
cmp
in
outsl
mov
inc
jge
dec
imul
jg
xlat
cld
pop
imul
pushf
pop
es
add
stos
hlt
and
xchg
sti
dec
movb
sti
lcall
out
xor
in
push
cmp
popa
out
jecxz
cld
shlb
sub
ja
or
cli
jbe
pop
jno
pop
fldt
xor
cld
push
aam
jb
add
sahf
lret
mov
fs
in
je
les
test
orl
enter
lcall
sub
lds
pop
mov
addb
xchg
push
pop
pop
sbb
arpl
jne
fiaddl
add
ljmp
aad
push
std
movsb
cld
xchg
or
cli
cmp
jp
mov
stos
lcall
pop
jmp
lea
cltd
inc
dec
cmp
jl
mov
push
sbb
vandnps
dec
dec
and
push
jmp
push
pop
lret
push
and
data16
leave
mov
sbb
lods
mov
pushf
jno
mov
testl
add
dec
lds
or
aam
repz
xchg
and
insl
ret
bound
nop
divl
dec
adc
adc
lea
loopne
pushf
dec
mov
sbb
shlb
bound
cmp
mov
jnp
dec
push
dec
lods
pop
outsl
jmp
cmp
sti
ja
dec
loope
pop
sub
inc
movsl
mov
dec
sub
rcrl
sarb
xor
mov
pop
nop
push
ds
jmp
adc
pop
cltd
jb
xor
cmp
cmp
cmc
fsubs
mov
test
into
ret
out
lock
cmp
mov
ja
imul
xor
iret
cmc
mov
pop
push
and
das
loopne
stos
mov
je
add
mov
imul
addl
push
or
int
pushf
dec
test
stc
lea
test
push
sub
add
or
outsl
rclb
rorl
xor
pop
xchg
push
adc
mov
and
mov
stos
gs
sub
aam
aas
test
jne
sbb
in
sub
ret
rcr
xor
push
loope
mov
cmc
rcll
mov
xor
add
or
into
xorb
fs
cmp
inc
clc
ret
jns
xchg
adc
adc
adc
cmpl
shll
push
int3
ja
mov
ret
sbb
xchg
mov
inc
cli
sti
sarl
dec
ret
dec
or
sub
bound
or
mov
xor
cmp
push
pop
mov
pop
inc
jo
cmp
shrb
iret
push
movsb
cmp
jge
out
fdivr
push
add
and
inc
imul
cmpsb
mov
mull
cmp
sbb
pop
adc
enter
out
insb
add
cmpsb
xorb
pusha
adcl
dec
cmp
fsubl
push
daa
fstpl
lock
call
lds
add
cmp
inc
pop
fdivl
int
jb
jb
mov
lahf
mov
int3
clc
xchg
gs
push
adc
push
sub
shll
mov
mov
mov
or
cmpsb
dec
dec
fsubs
pop
addb
xlat
lea
faddl
push
jmp
gs
jp
xor
lahf
xor
or
push
movb
orl
into
enter
mov
das
test
or
sahf
outsb
stos
mov
int
push
arpl
push
mov
add
rolb
sbb
jns
sbb
mov
mov
or
dec
fmul
mov
push
test
addl
cmp
leave
cmp
int
xor
adc
mov
mov
xor
shl
orps
push
inc
test
sbb
dec
insl
dec
and
pushf
fldenv
jl
add
mov
rclb
or
mov
fs
adc
iret
out
push
scas
pushf
mov
js
fmull
push
adc
or
popa
push
adc
scas
push
pop
cmp
cld
pop
mov
mov
gs
or
sbb
or
push
stos
inc
push
push
pop
mov
pop
repnz
dec
sbb
add
ret
cs
mov
inc
out
shlb
push
inc
jno
mov
mov
pcmpgtw
jmp
jp
movsb
sub
adc
mov
ljmp
pushf
mov
fyl2xp1
ret
mov
mov
ret
or
loop
scas
fdivs
ds
and
mov
sub
mov
or
loop
lahf
add
mov
leave
fcmovnu
negl
mov
inc
push
int
cmpsl
pop
stos
xlat
in
adc
xor
sbb
mov
pop
stos
xchg
lea
jno
f2xm1
ljmp
out
repnz
icebp
sarb
sbb
inc
inc
rcll
dec
stos
mov
sbb
add
and
jl
arpl
xchg
dec
lea
imul
popa
mov
data16
or
dec
sbb
out
je
lods
xchg
test
mov
sub
adc
js
in
and
in
cmp
out
aaa
mov
jne
dec
mov
dec
jle
es
lods
push
into
sub
pop
rol
inc
fldl
imul
ja
add
lds
dec
fdivrl
imulb
rcr
pop
mov
mov
inc
push
cli
or
das
or
arpl
out
mov
add
lock
fldl
nop
pop
in
inc
bound
dec
xchg
scas
movsb
dec
aas
or
adc
sarb
aad
push
add
inc
mov
dec
es
mov
and
imul
push
push
cltd
fwait
inc
orb
les
ljmp
fstps
push
and
int3
test
clc
or
cmc
bound
and
rol
aaa
xchg
fcomps
cwtl
stos
pop
adc
sub
stos
add
push
fs
lea
sub
and
lods
mov
leave
mov
aas
sbb
vmovaps
icebp
sub
scas
rorl
mov
xor
xchg
xchg
add
pop
mov
add
lods
xchg
shlb
repz
mov
xor
lds
mov
mov
inc
push
jae
fwait
daa
mov
pushf
cmp
rcrb
push
mov
pop
jb
insb
add
cli
xchg
lods
fsub
cwtl
xchg
push
popa
ljmp
in
outsl
sub
cld
xchg
popa
hlt
scas
insl
mov
stos
ret
je
cmp
js
adc
adc
cmp
inc
inc
loope
add
aas
lods
xchg
mov
in
test
popa
shll
mov
push
or
fdivrl
cmpsl
sbb
lds
fimull
ja
dec
xchg
mov
mov
mov
lods
adc
mov
sub
scas
sbb
daa
mov
filds
in
and
fisubl
out
in
mov
or
mov
movsb
push
cmp
mov
cmpl
mov
mov
rcll
jle
mov
repz
sub
pop
hlt
cmp
mov
enter
lcall
lret
and
mov
inc
aad
fmull
mov
dec
cmp
dec
lahf
subl
xor
inc
call
nop
mov
cmpsl
icebp
xor
repnz
ja
aam
xlat
fistpl
jp
mov
dec
subb
pop
sbb
xchg
test
test
fbstp
outsl
add
clc
push
mov
inc
push
mov
mov
imul
lea
xor
out
mov
mov
jp
dec
xor
bound
cmp
inc
sbb
xor
xchg
mov
mov
and
pop
pop
insb
mov
jno
movsl
sbb
fwait
xchg
aad
cmc
push
std
fiaddl
inc
or
add
jne
cli
sbb
xchg
daa
push
and
xor
and
mov
out
dec
push
lahf
rol
idivl
jbe
pop
ret
inc
lods
dec
dec
sub
ja
loope
xorb
lcall
adc
mov
stc
mov
cmpsl
mov
mov
divl
pop
imulb
loope
xor
and
je
ret
es
fisubl
repnz
xor
cwtl
repnz
sbb
ss
aaa
and
imul
ret
or
add
pavgb
jmp
add
push
in
leave
nop
push
mov
jp
cmpsb
movsb
sub
out
dec
xor
popa
add
call
push
aam
xor
cli
mov
and
leave
les
lret
fcmovnbe
fstp
loop
pop
push
aas
push
pop
or
add
push
idivb
mov
adc
negb
sub
jae
lcall
push
mov
push
push
push
jb
inc
push
adc
icebp
int3
or
cmp
dec
test
scas
mov
jns
mov
ljmp
stc
ret
mov
fisubl
rdmsr
iret
dec
je
out
sbb
sub
repnz
inc
xor
sub
aaa
loopne
mov
jae
sbb
mov
pop
lcall
mov
js
outsl
dec
cmpsl
sbb
scas
rcrl
dec
xor
jne
push
mov
insl
dec
sahf
xor
mov
icebp
or
pop
shll
out
insl
sbb
mov
sahf
xchg
push
jno
xchg
fbstp
mov
and
fwait
shrl
lahf
or
jp
ret
in
xlat
jmp
add
mov
loop
or
sub
mov
jle
ja
sahf
adc
fdivrs
cltd
mov
jmp
jecxz
lock
mov
ret
adc
sbb
xor
int
movsl
outsl
jmp
testb
sbb
loope
scas
ret
pop
shrb
cli
xor
nop
loope
sub
and
fcmovnb
outsb
mov
cmp
out
inc
or
add
mov
pop
adc
jo
sahf
lahf
movl
icebp
adc
lods
in
addb
xchg
pop
fnstenv
lods
out
ret
mov
mov
xor
mov
inc
jp
ds
ret
out
xchg
dec
out
cli
popa
cmp
pop
dec
aas
outsl
mov
fdivs
mov
jnp
rorb
imul
xlat
ret
dec
add
and
das
xor
cmpsl
xchg
prefetchnta
push
gs
jge
into
lods
lods
jo
jbe
fnstcw
loopne
mov
cmp
movsl
scas
jge
dec
cmc
stos
cmp
movsb
or
roll
int
gs
mov
test
out
js
lret
jle
sbb
mov
push
dec
loop
pop
ljmp
enter
push
mov
jl
mov
loopne
cmpsb
push
xor
and
outsl
movsl
xorl
data16
call
lock
cmpsl
mov
jmp
pusha
hlt
fisubrs
aad
xor
xchg
out
or
popa
jne
mov
fisubs
add
sbb
pop
jecxz
divl
out
in
xchg
push
cmp
cld
fs
inc
cs
fistpl
mov
adcl
call
cmp
add
cli
in
push
les
scas
pop
call
cmpsb
in
in
mov
mov
fwait
mov
mov
enter
fsubrp
bound
cwtl
sahf
mov
dec
fsubrs
fdivl
jnp
pop
fsts
aam
lods
pop
sbb
iret
sub
inc
mov
stc
into
outsl
in
and
gs
inc
jne
ss
fimuls
push
cld
xor
aad
mov
aas
lret
rorl
push
and
notl
xchg
mov
rol
loop
pusha
xchg
mov
shl
add
cmc
mov
testb
es
push
in
sahf
iret
jmp
repnz
cmp
xor
mov
adc
cmp
fisttpl
test
adc
xchg
fwait
or
cmp
outsl
fs
in
push
aam
jo
sarl
push
iret
cld
movsl
mov
mov
cld
mov
and
test
pop
divb
jnp
mov
add
addr16
adc
mov
push
fldt
cltd
pop
dec
mov
aaa
fcmovb
jb
dec
arpl
pop
mov
mov
mov
xchg
scas
inc
cmp
mov
xor
ret
bound
into
sarl
pop
js
xor
imul
sub
jmp
inc
pop
push
cmp
jno
imul
pop
xchg
iret
rolb
bound
pop
mov
pop
inc
sub
dec
aas
or
mov
test
mov
sbb
push
xchg
mov
push
push
popa
repz
mov
lahf
sub
lahf
mov
add
lea
xor
idiv
inc
cmp
mov
mov
in
jne
sahf
mov
enterw
in
repz
jne
fwait
sub
mov
sbb
or
dec
add
mov
pop
mov
inc
jle
popa
insl
fisubrl
jl
dec
mov
pop
sub
frstor
and
fisttpll
jnp
cs
aaa
lods
pushf
mov
rorl
inc
fmull
push
fwait
xchg
mov
xchg
sbb
cmp
ret
inc
andb
imul
clc
into
fsubrs
movsl
pop
pop
loopne
dec
push
jno
adc
fstps
out
in
insl
addl
es
das
fcompl
popf
xor
xor
or
cmp
fsubrl
pushf
fsubrs
enter
adc
push
push
push
mov
lret
out
jns
cmpsl
std
xor
out
clc
sbb
jg
testb
mov
aam
jle
fistpl
mov
xchg
in
movsb
push
lret
leave
pop
pop
dec
mov
or
stos
mov
push
jne
imul
pusha
lcall
pusha
lock
mov
in
scas
and
int
fwait
xchg
stc
mov
dec
test
add
pop
pmaddwd
inc
bound
xor
call
mov
xlat
fwait
loopne
adc
adc
inc
xor
les
out
dec
test
jnp
out
and
hlt
adc
rcr
xor
fnstenv
divb
addr16
or
rcll
outsl
lahf
push
inc
xchg
jne
out
jg
lock
fidivl
mov
bound
cmp
testb
jne
fwait
scas
inc
loope
imul
cwtl
hlt
fcomps
les
das
inc
add
in
mov
mov
xchg
stc
fwait
and
cli
pushf
and
inc
jno
addr16
dec
inc
cmp
insl
push
xchg
mov
sub
les
jl
jnp
hlt
notl
aaa
jae
and
push
mov
in
sti
push
sub
mov
mov
sub
xchg
add
enter
xor
jg
stos
jge
push
aaa
jmp
mov
dec
pcmpeqw
cmp
cwtl
xor
cli
xchg
jle
xor
cmc
and
nop
add
fcomps
ret
pop
test
cltd
push
dec
or
sahf
cmp
xchg
adc
jnp
outsb
inc
sbb
sbb
test
cmp
xchg
xor
sbb
int
or
jg
cmp
mov
adc
rcr
popa
dec
cmp
xchg
data16
pop
jp
mov
jg
push
repz
jecxz
inc
dec
stos
daa
loopne
test
xor
loopne
sub
push
test
adcl
neg
clc
arpl
iret
test
adc
lock
sbb
mov
cwtl
pop
stc
mov
ja
pusha
and
cmpsb
into
lods
pushf
ds
jb
test
stc
int
jecxz
mov
cmp
movsb
inc
push
sub
adc
ret
mov
faddl
into
les
cli
add
nop
cmpsb
xor
push
cmp
cld
loopne
jne
add
imull
lret
xor
mov
sbb
out
mov
and
or
cmc
nop
sahf
jg
fninit
aaa
out
or
push
faddp
sub
aas
mov
add
pop
stc
or
cmp
sbb
and
scas
jecxz
negb
movsb
ret
push
mov
dec
mov
fstp
clc
fsubp
add
or
mov
ret
sbb
sub
or
jne
lcall
pop
hlt
stos
add
mov
test
andb
shlb
repnz
and
push
aas
das
inc
mov
push
dec
popa
ret
or
inc
lods
les
out
dec
test
mov
jb
jbe
mov
cmp
xor
out
push
mov
outsl
and
popf
movsb
inc
dec
push
stc
outsl
adc
cmp
aad
dec
out
je
andl
ret
pop
out
lahf
mov
call
cmp
pop
xor
push
jecxz
add
mov
enter
xchg
pop
lea
add
je
and
fildl
add
mov
int
mov
jp
ror
mov
push
daa
loopne
lea
int3
lret
xlat
jns
cmc
ret
loopne
push
insl
xor
std
mov
mov
lds
jno
pop
loop
aam
test
jmp
xor
outsl
push
push
mov
xchg
shrl
repnz
jecxz
sti
pop
jns
push
xchg
jne
xchg
mov
pop
mov
mov
out
mov
sti
xor
and
rcll
lock
pop
sahf
mov
cmc
out
or
fcomps
fxch
pop
add
nop
out
add
and
ja
ret
arpl
test
leave
es
stos
cwtl
icebp
inc
xor
test
cmp
pop
out
adc
xlat
repnz
repnz
fcmovnu
scas
mov
stc
mov
inc
mov
pop
popa
inc
mov
mov
sti
pop
rcrb
lret
sbb
and
popf
or
sbb
daa
push
pop
pop
aad
jb
and
pop
inc
das
popa
or
rorb
and
dec
mov
ljmp
sub
out
cltd
or
jne
into
mov
pusha
xchg
inc
mov
je
rcrb
push
xchg
push
xor
add
push
pusha
push
dec
pop
cmp
pushf
cmpsb
jmp
fcoml
aaa
test
gs
iret
jg
aad
enter
mov
aam
mov
or
mov
ljmp
mov
add
sub
mov
repz
mov
jo
or
ljmp
sarl
xor
test
mov
addb
mov
lods
leave
jecxz
call
xchg
sub
add
dec
scas
lea
sub
aad
loop
or
push
insl
loopne
jge
mov
insb
fcmovbe
mov
xchg
inc
jmp
imul
jle
mov
xor
xchg
cltd
sbb
and
inc
push
test
jmp
mov
sub
adc
jnp
mov
fsubrl
es
cld
adc
jae
fs
mov
jne
cmp
lret
jl
imul
pop
lods
inc
mov
jb
jecxz
sbb
popa
loop
imul
fiadds
mov
xchg
repnz
adc
cmp
inc
test
adc
scas
add
in
cltd
push
imul
loope
pop
sub
loopne
jle
stos
xchg
inc
test
and
jae
xor
inc
inc
out
test
fucom
sar
xchg
push
mov
icebp
sub
repnz
scas
hlt
in
hlt
and
and
pop
ja
xchg
in
lea
out
add
pop
movsl
fsubrs
roll
sub
or
std
or
mov
jae
repnz
sti
and
jmp
dec
jmp
jnp
lods
stos
inc
in
int3
mov
push
clc
je
stos
rolb
arpl
lds
movsl
xchg
mov
mov
icebp
inc
push
ja
pop
out
pop
out
scas
negb
push
int3
ret
leave
cmp
mov
daa
sbb
pop
inc
pop
sbb
scas
mov
inc
mov
orb
or
xor
push
mov
cmpsl
fldcw
or
pop
hlt
lcall
je
mov
cmp
bnd
or
inc
or
mov
xchg
in
addr16
adc
lods
loop
dec
jbe
loop
mov
enter
push
repnz
cmpb
inc
add
popf
sbb
stos
mov
jno
mov
mov
sbb
in
out
mov
popf
cmpsb
jp
jp
lods
inc
cmp
aam
lcall
mov
hlt
xlat
lea
or
popf
shlb
mov
jae
pop
pop
stos
scas
cmp
mov
je
loope
jp
out
sar
rdpmc
cli
imul
push
sub
jae
enter
or
jle
jge
mov
cltd
call
pop
mov
jb
push
sahf
test
dec
test
and
popa
mov
lock
in
push
sbb
mov
and
jle
sub
loop
js
xor
dec
andb
push
mov
int3
push
xor
out
cli
jae
push
lods
loop
lods
xchg
nop
mov
ficoml
ds
sbb
jbe
fstpl
lods
and
jge
add
fwait
pop
add
repnz
cmp
and
inc
into
sub
mov
or
xorb
xchg
mov
scas
stos
ud1
scas
xor
xchg
cli
test
push
dec
xchg
aad
xchg
mov
movb
mov
mul
cmc
push
fldz
adc
movsl
lock
ja
and
xchg
roll
aaa
ds
pop
stos
xor
sub
mov
mov
std
mov
sbb
and
xor
stos
dec
pushf
jge
xchg
sub
xchg
mov
mov
xchg
dec
imul
jbe
pop
leave
into
pop
fistpll
cmc
lods
popf
inc
aas
mov
mov
push
pop
inc
in
in
lds
and
mov
xchg
cmc
jbe
repz
inc
ss
stc
adc
mov
shll
add
push
sbb
loope
jo
roll
imul
xchg
rcll
cmp
loop
adc
xlat
sbbl
outsl
es
shlb
sbb
psllw
shll
sub
sub
pop
push
aam
pop
inc
rcrb
lahf
addr16
push
xlat
jmp
repnz
rorl
jp
push
lahf
or
xor
orb
inc
test
xor
cmpsb
cmpl
aad
mov
sub
jmp
push
or
cmp
push
test
and
lcall
les
mov
jl
and
andl
dec
jbe
inc
inc
cmpl
lds
mov
sbb
add
cmp
movl
add
cmc
stc
cmpsl
inc
xchg
mov
aas
bound
jbe
adc
cmpsl
xor
sbb
insl
inc
aad
push
and
mov
xchg
cltd
sbb
fdivl
xchg
jl
sbb
fdivrl
arpl
mov
pusha
in
cwtl
imul
in
imul
cmp
pop
adc
xor
cli
cmp
cli
mov
xchg
fiadds
outsb
ffreep
add
nop
ljmp
xchg
adcb
test
insb
fwait
add
mov
mov
mov
icebp
mov
mov
daa
pop
jecxz
mov
push
jge
and
mov
popf
ret
jnp
xchg
out
and
mov
fldl
jmp
andb
test
adc
sbb
lea
push
add
mov
sbb
xor
adcl
mov
jae
enter
push
in
cmp
clc
out
pop
dec
bound
xchg
xor
sti
repz
adc
call
jns
imul
in
sbb
mov
xor
adc
pop
lahf
cmp
jge
push
test
pop
xchg
fwait
aaa
mov
inc
and
or
pop
jae
aam
mov
cltd
pop
in
inc
pop
cmc
lret
loop
addr16
jg
xchg
test
nop
cmpsb
cmp
pop
dec
mov
pop
mov
mov
xlat
hlt
aaa
xchg
lahf
or
out
cmp
addr16
jg
mov
jae
fistl
push
push
test
xor
mov
or
pushf
lock
mov
inc
nop
mov
xchg
inc
pop
out
cmp
or
dec
xchg
xor
xchg
jecxz
cmp
call
inc
lret
je
sub
lds
push
pop
outsb
loopne
test
ror
movb
mov
push
pop
xchg
lret
ljmp
xor
sbbb
xchg
jae
repnz
xlat
mov
push
inc
add
insl
and
or
push
and
addps
cmp
scas
jne
ss
std
loopne
stos
xchg
addl
and
adcb
push
outsl
xchg
adc
push
and
shl
pusha
aaa
lods
inc
into
mov
adc
lock
mov
lret
xchg
decb
and
stos
adc
repnz
js
inc
mov
or
pop
cwtl
jbe
mov
sub
pop
test
push
jmp
bound
popa
inc
xchg
pop
je
pop
daa
inc
sub
pop
sbb
aaa
shl
sti
int3
jne
xor
jg
pop
xchg
cmpsl
cmp
or
sti
sub
dec
bound
sub
xchg
ficompl
add
jl
jae
push
dec
enter
fiadds
out
into
int3
and
into
mov
cmp
dec
in
clc
cmpsb
movsl
sub
mov
mov
add
dec
jne
jmp
imul
pop
push
imul
mov
ss
lods
imull
notb
dec
cmp
push
in
jns
or
inc
jl
xor
dec
aas
mov
mov
stc
push
push
push
push
and
movsb
cmp
shlb
shll
xor
cbtw
push
int
mov
cmpsb
xchg
cmpsl
inc
xorl
lret
lea
push
mov
insb
aad
insl
int
loop
adc
and
lock
popf
mov
and
and
xchg
jns
fsts
add
xor
sbb
stos
popa
cs
ljmp
xchg
loope
xor
insl
pusha
xchg
iret
xor
lods
adc
cmpsb
inc
idivb
pop
inc
popf
lds
sarb
pop
lret
sub
lret
mov
into
jo
fdivr
add
fldl
dec
mov
fucomip
out
sbb
scas
and
cmc
cli
in
dec
gs
push
cmp
jle
imul
pop
insl
jmp
inc
cmpsb
das
and
roll
popa
pop
pop
fs
xor
sbb
in
fstps
rclb
xlat
mov
cwtl
xorb
jb
mov
push
push
push
das
es
hlt
push
out
cmpsb
cltd
test
ds
lcall
mov
cltd
add
mov
hlt
ficoml
aam
lds
gs
xor
xor
sbb
test
and
insb
jb
mov
cmc
shrl
mov
fs
jecxz
std
cmp
clc
mov
jbe
and
push
ja
scas
pop
ja
add
cld
cs
add
in
add
gs
xchg
mov
popa
adc
and
mov
jne
pusha
stc
xor
jo
adc
add
cs
mov
mov
cmp
xchg
or
cmpsl
add
adc
cwtl
jno
push
jl
shrl
xor
out
xchg
and
push
call
testl
shlb
addl
cmp
outsl
push
dec
xchg
aad
nop
add
repz
adc
jge
push
pushw
pop
add
inc
in
adc
pop
les
xor
pop
movsb
jp
mov
ljmp
jne
pushf
xchg
repz
enter
in
jb
push
in
clc
push
or
and
shlb
mov
cmpsl
pop
sarl
jl
mov
cltd
popf
je
cwtl
mov
add
test
cs
push
test
cmpsl
pop
and
xchg
xchg
aas
sub
scas
jne
jbe
xor
pop
cmc
lds
dec
pushf
into
fbld
mov
mov
and
pop
mov
daa
lcall
repnz
xlat
loop
or
loopne
lret
pop
cmpsl
mov
xchg
mov
cmp
aaa
call
movsl
cmp
mov
aaa
jne
aam
int
js
ljmp
idivb
inc
loop
daa
and
cmc
imul
jae
mov
sub
pop
and
arpl
mov
cli
pop
sub
inc
sbb
popa
inc
mov
adc
sbb
jle
push
fistl
fisubl
int
pop
pop
icebp
shll
sub
adc
push
or
inc
push
dec
je
movsl
mov
nop
dec
push
inc
repz
insl
inc
or
jmp
add
shll
aaa
mov
adc
in
mov
sbb
repz
fwait
stos
push
push
and
in
movl
sbb
xor
in
test
cmp
push
lcall
pop
xchg
inc
fsts
mov
mov
fwait
jp
mov
sub
xor
mov
stc
sub
shl
leave
cmc
notb
ret
adc
jl
sbb
mov
mov
call
cmpsb
in
mov
cmpsb
scas
xchg
pop
iret
mov
ret
repnz
lds
mov
xlat
and
mov
in
int3
mov
jae
jbe
pop
paddsw
fwait
pushf
jg
daa
js
pop
insb
sbb
cmp
ror
xchg
out
cltd
int
jle
xchg
lods
in
mov
aam
pop
push
cld
mov
icebp
add
je
std
and
and
cmp
cmp
pop
cmpb
pop
pop
inc
cmp
cmc
mov
mov
jb
mov
mov
cmp
fs
sub
or
sti
xor
inc
rolb
sub
mov
push
cli
movsl
mov
aad
imul
loop
test
add
popa
push
xchg
adc
scas
arpl
cmovge
pop
inc
fistpll
pop
cmp
push
movsl
movsl
cmpsb
rcrb
xchg
inc
push
jne
xchg
inc
movsb
rorb
jno
mov
ja
out
dec
mov
fxch
xor
pop
mov
imul
popa
decl
pusha
or
pop
mov
mov
sbb
mov
sbb
pop
popf
sub
data16
imul
stos
adc
push
ret
bound
sbb
fcomp
cmpsb
iret
jo
cmpl
jle
xchg
jp
xor
jno
xchg
or
rcll
cmp
inc
cmp
and
in
inc
or
das
cmp
jecxz
mov
clc
jbe
pop
pop
push
bound
gs
pushf
pop
push
add
mov
pop
mov
mov
mov
cmovp
mov
cli
das
rol
or
test
iret
cs
stc
shrl
nop
mov
cwtl
addr16
pop
je
xor
or
pop
jg
jecxz
cwtl
and
sbb
jl
jmp
push
fdivrs
mov
inc
fucomip
sti
jne
daa
mov
sub
jbe
jno
xchg
sub
test
fdivl
cmp
popa
scas
mov
sbb
mov
pop
jne
imul
fsubs
loopne
pop
fcoml
xor
cld
test
jge
jle
pop
fcoml
dec
pop
add
inc
push
insl
push
adc
cmp
stos
jae
xchg
mov
jno
js
fildl
cmp
add
cmp
inc
ljmp
jne
arpl
mov
adc
xlat
dec
xchg
push
and
lock
shr
xor
call
mov
sbb
lods
loop
aam
adc
xchg
movsb
or
loop
pop
or
aaa
test
cld
std
jo
pop
adc
adc
xor
sub
mov
lret
mov
rcrl
mov
pop
aas
sub
inc
shlb
adc
mov
sbb
test
or
fisubrs
in
ret
sbb
jnp
jo
int
sbb
popf
enter
mov
stos
sub
add
clc
xchg
xor
or
in
mov
int
iret
add
xchg
pop
addb
mov
cmp
push
or
loopne
fidivl
test
popf
pop
adc
mov
xchg
test
negb
or
mov
adc
lods
sahf
inc
insl
dec
add
pop
mov
repz
or
fs
dec
jmp
nop
sti
test
pop
daa
cmpsl
sbb
xchg
cld
inc
test
cmpsl
xor
lds
dec
popa
pop
cmp
cmpb
les
aad
pop
ljmp
push
xor
mov
das
popa
push
les
lods
ret
inc
and
incl
in
bnd
xor
test
mov
inc
ljmp
push
sbb
mov
add
dec
cmp
mov
in
jne
insl
clc
imul
lcall
or
incb
and
jmp
jmp
repz
icebp
xchg
sub
jns
pop
cmp
jle
mov
xor
mov
and
lods
pop
popa
shrl
mov
mov
not
cld
inc
push
mov
dec
data16
xchg
stos
in
xor
mov
xchg
push
jg
lret
repz
jl
lods
xchg
test
add
cltd
xor
ds
mov
mov
and
mov
jnp
add
adc
dec
inc
sbb
xlat
push
mov
xchg
adc
imul
pop
push
dec
sub
out
adc
jg
lds
cmp
scas
ret
sbb
mov
call
push
lods
cmp
or
dec
mov
pusha
mov
mov
sbb
frstor
sbb
lock
inc
mov
add
mov
addr16
insb
fbld
test
sbb
mov
ss
mov
pop
inc
xchg
addr16
addr16
fdiv
or
add
jge
arpl
or
adc
xor
lods
sbb
shlb
test
sbb
mov
cmp
outsl
mov
xchg
cli
lahf
jns
push
add
xor
repnz
inc
pop
dec
pop
aas
insb
fstp
jge
cli
fdiv
outsl
lea
mov
mov
movb
mov
cmp
in
lahf
adc
inc
push
ja
leave
aad
jb
cmp
dec
adc
sub
cs
sub
out
cmp
int
add
jb
push
pop
sbb
ss
jnp
push
bound
cmp
js
push
sarl
test
fsubl
lret
sarl
sti
pop
mov
dec
js
lcall
shll
push
mov
sahf
mov
or
inc
ljmp
lahf
adc
lods
dec
sbb
insb
aam
dec
pop
xchg
call
pushl
sbb
or
pop
add
in
fnstcw
ljmp
inc
push
pushf
pop
mov
out
or
std
mov
inc
or
pop
sbb
test
mov
popf
sbb
imul
fbstp
into
in
movb
xor
adc
in
test
jbe
lds
push
adc
xor
push
movsb
cs
test
clc
pushw
notl
dec
sbb
out
add
andb
push
mov
inc
mov
add
ret
dec
mov
loope
dec
jp
fwait
mov
sub
out
ljmp
push
mov
or
test
jg
fistl
xchg
cmp
lcall
cmp
add
adc
repz
stos
int
mov
push
test
mov
or
cmp
aam
add
js
sbbl
xor
imulb
add
mov
push
je
jg
jecxz
in
push
fidivl
in
push
es
dec
ss
push
xchg
inc
adc
outsb
js
mov
ror
shll
cwtl
xchg
jg
stc
cmpsb
xchg
pusha
push
adc
mov
int
push
fistl
pushf
adc
gs
push
pop
lods
stc
xchg
jge
mov
stc
sbb
aaa
dec
rclb
test
in
sbb
and
divl
test
sub
ljmp
mov
lods
je
out
jl
sub
mov
jo
adc
ja
push
aam
cmp
push
inc
int3
mov
mov
loope
mov
mulb
nop
mov
mov
test
mov
and
mov
je
mov
rcr
inc
or
cmp
lds
mov
movsl
cmp
jg
syscall
adc
cmp
test
cmpsl
fsubl
xor
iret
loopne
push
sahf
mov
imul
mov
fs
jl
js
lods
fcomps
xchg
pop
push
mov
scas
loopne
mov
push
mov
pop
pop
fwait
xchg
push
jmp
dec
cmp
test
jbe
adc
and
mov
inc
pop
sub
scas
mov
push
pop
movsl
aam
mov
inc
xor
js
adc
nop
sub
mov
xor
std
cmp
loope
inc
mov
lods
rolb
adc
pop
sub
sbb
jl
cmpsb
and
fs
jg
cmp
push
jns
outsl
push
loop
ret
and
or
out
and
sbb
cmp
push
dec
dec
cli
jnp
fadds
adc
mov
mov
scas
xlat
aaa
hlt
mov
andb
dec
cmp
cli
popf
in
rcrl
icebp
jnp
fmull
or
sbbb
push
mov
ja
movsb
dec
jl
inc
loopne
jnp
mov
stos
repz
xor
xchg
data16
imul
cli
aam
mov
int3
inc
dec
push
mov
shlb
jae
mov
push
or
fxch
inc
pop
int
fwait
je
mov
cmp
cmp
push
andl
test
cltd
jge
mov
lods
cmp
sbb
dec
mov
loop
dec
jp
fcmove
iret
push
xor
cmp
orb
cld
or
int
dec
popa
movsl
lds
xchg
or
fistpl
add
imul
lea
movsl
out
lret
add
in
int
pop
fstps
aam
sub
dec
and
inc
xchg
or
subb
pop
mov
sahf
sbb
lods
jbe
sbb
mov
shll
sbb
and
xor
test
dec
jmp
dec
sub
push
loopne
sub
sub
cwtl
jne
aas
cs
popa
mov
loopne
mov
sbb
mov
iret
insb
add
and
cmp
cmp
lahf
jnp
movsl
xchg
mov
adc
mov
int3
push
ss
xchg
xor
push
aas
pop
les
scas
aad
cmp
shlb
add
sti
mov
aad
xlat
addr16
jae
cmp
inc
dec
cmp
jno
xor
mov
cmp
mov
xor
call
inc
fwait
dec
xchg
outsl
xchg
or
lds
xchg
adc
cmpsb
inc
loope
or
jp
mov
jae
sahf
inc
popf
cltd
push
mov
leave
lahf
mov
adc
enter
push
xchg
xchg
in
pop
repz
incb
push
in
pop
pop
mov
aam
jo
push
push
scas
xchg
stos
mov
cwtl
jae
cmp
push
jne
cld
cmp
int
mov
ds
cmp
xor
scas
repnz
adc
add
into
or
arpl
pop
push
cmp
lock
cltd
jno
sbb
rcrl
fsubrp
testb
dec
fs
js
sarl
inc
and
xchg
push
mov
jp
dec
add
test
ret
jno
fldenv
xor
jl
arpl
rcrl
rorb
loopne
mov
jg
lahf
cmp
mov
and
mov
ds
cmpsb
movsl
and
repnz
in
sahf
popf
loopne
add
outsl
pop
or
bound
cmpsl
or
dec
adc
or
inc
rol
mov
fwait
loop
pop
imul
int3
mov
xor
pop
push
mov
decb
dec
call
dec
rcrl
mov
pop
push
fldcw
sbb
cmp
jle
mov
into
test
xchg
movsb
add
lret
lret
fldt
imul
xor
fldenv
sahf
fiadds
sarb
and
lret
ja
jg
xlat
xor
push
lock
pop
xor
rol
popf
mov
aam
xchg
leave
add
inc
push
sti
xor
aas
inc
sahf
cmp
sbb
ficompl
in
push
pop
push
or
push
lods
je
xchg
lea
aaa
xor
leave
je
inc
fidivrs
fildll
adc
mov
lds
sti
scas
add
into
add
mov
dec
mov
add
mov
xor
mov
mov
inc
pop
mov
in
int3
xchg
mov
aaa
cwtl
addb
jmp
mov
sbbb
ljmp
lods
sahf
lahf
sbb
mov
ficomps
test
adc
cmpsl
jno
jl
fimull
sbb
mov
inc
lock
insl
in
lods
out
popa
sarb
fsubl
aam
and
nop
jl
cmp
test
dec
push
addr16
mov
adc
sbb
mov
nop
je
xor
in
and
stos
mov
clc
mov
push
iret
xchg
stc
loope
adc
push
ret
sub
rcll
cmp
out
repz
es
jmp
mov
mov
or
inc
test
add
sbbb
inc
loop
into
sub
push
pop
jno
pop
adcb
mov
icebp
dec
cmp
daa
and
ds
jae
stc
mov
pop
mov
mov
fisttpl
sahf
xchg
pop
push
cmp
xchg
mov
xchg
pop
fdivrl
add
push
cmp
inc
xchg
adc
imul
sbb
add
pmaxub
push
pop
add
pop
call
cmpsb
jne
divl
data16
dec
scas
inc
push
mov
xor
lahf
inc
add
jae
mov
xchg
pop
mov
data16
jb
cmp
pop
lea
je
cmp
test
and
gs
jns
lods
mov
imul
scas
ljmp
cmp
push
mov
aas
arpl
arpl
xchg
cmp
jecxz
push
lcall
outsl
fwait
jmp
inc
gs
stc
mov
lods
xor
add
and
adc
scas
hlt
adc
jmp
jbe
lret
mov
ss
iret
or
repz
push
jo
jg
vmwrite
sub
fidivrs
and
imul
jge
mov
cwtl
fcmovnb
fwait
mov
push
and
stc
shl
or
in
jno
xchg
mov
inc
dec
xchg
jb
inc
rol
xor
cmp
lcall
es
push
pop
nop
xor
cmp
cmc
push
iret
ret
and
mov
sbb
dec
jb
ja
mov
or
jl
jbe
mov
xchg
out
pushf
xchg
dec
cmpsl
aam
push
imulb
pop
mov
cltd
sahf
sbb
xor
insb
adc
inc
loopne
cmp
lahf
out
das
daa
xchg
or
out
push
outsl
dec
loop
stc
loopne
mov
loopne
jns
dec
and
inc
fildl
adc
das
inc
xchg
mov
sub
data16
sub
out
adc
mov
nop
or
jbe
loopne
das
test
push
jno
jg
mov
ret
sbb
cwtl
lea
push
pop
push
push
pop
int3
loop
aad
test
and
pop
or
mov
sub
inc
je
xlat
clc
add
push
inc
data16
test
idiv
les
ja
add
shlb
aad
sub
stos
cmp
pop
shrb
fwait
out
mov
aam
in
ljmp
jle
fnstsw
push
inc
adc
add
adcl
cmp
jnp
pop
jae
xor
pop
xchg
dec
stos
leave
ret
rcrb
sarl
xchg
lret
sub
dec
pop
clc
add
jbe
imul
rorb
fwait
xchg
sub
inc
push
jns
mov
jge
and
icebp
push
pop
in
cwtl
ret
aaa
lods
jp
xor
mov
cmp
cmp
mov
int
dec
xorb
push
mov
sub
movsb
aam
xchg
fnsave
or
stc
icebp
inc
mov
inc
aaa
lods
jbe
cwtl
outsb
into
mov
add
lret
push
roll
pop
es
fdivs
mov
adc
adc
pop
arpl
mov
pop
stos
arpl
cmpsl
jae
das
pop
shr
push
dec
ficompl
out
enter
jle
dec
pushf
outsb
dec
mov
clc
inc
test
cmp
test
cmp
cmp
and
push
cs
scas
inc
jmp
mov
xchg
stos
inc
fs
cmp
xor
repnz
adc
push
dec
cmp
xor
lcall
push
das
mov
mov
mov
outsl
push
dec
xchg
inc
adc
sbb
sbb
imul
xchg
or
jbe
ret
cmp
mov
shlb
cld
lds
in
mov
stos
push
cmp
outsb
pop
cli
push
sbb
lcall
adc
jg
shrb
fildll
cmp
dec
je
jbe
push
cli
lea
push
push
sarl
loopne
loopne
mov
ss
lods
rolb
pop
hlt
jl
push
xchg
add
scas
adc
add
cmp
mov
pop
sub
lods
or
mov
push
jmp
jne
adc
sbb
xchg
insl
stos
inc
cmc
mov
cwtl
shlb
or
inc
sbb
outsl
std
in
or
daa
mov
lcall
xor
pop
int3
mov
xor
pop
out
add
sub
adc
idivl
mov
jle
mov
mov
gs
adc
loopne
lods
movsb
mov
xor
xor
adc
add
lcall
dec
inc
cmp
test
int
xor
cmpsl
mov
inc
xor
jno
xor
addb
push
push
dec
rcl
xlat
jle
int3
and
mov
sub
mov
mov
out
das
fwait
aam
dec
ds
sub
mov
leave
mov
mov
repz
loop
xchg
mov
jg
loope
std
cmpsl
pushf
add
hlt
adc
pop
in
push
and
xchg
pop
mov
hlt
or
or
int3
mov
push
dec
lcall
mov
cmpsb
mov
mov
pop
insl
xchg
cmpsb
in
divb
or
test
add
notl
addr16
fwait
jp
jmp
inc
fdivp
mov
cmp
mov
insb
xchg
inc
or
sub
stos
xor
or
cmp
stos
test
loopne
stos
repz
pusha
sbb
fisubrl
pop
add
and
sti
loop
cmpsl
and
jno
xor
nop
pop
jg
mov
mov
jb
add
sbb
pusha
mov
outsb
aaa
xchg
sub
and
push
jne
fsubp
xchg
push
inc
mov
in
shrl
add
rclb
ljmp
or
push
repnz
mov
mov
sbb
shll
pop
shlb
lahf
out
cli
mov
iret
aad
shll
xchg
sbb
fisubrl
jae
xor
aad
push
and
outsb
pop
fxch
pushf
in
movsl
hlt
xor
movsl
xor
xor
push
jno
mov
js
mov
int3
xor
in
ja
divl
insb
popa
mov
lock
jl
sbb
jecxz
add
les
ja
or
dec
movsl
cld
push
data16
inc
jecxz
xorb
push
xchg
push
cmpsl
push
inc
mov
scas
out
jmp
sahf
pop
leave
das
dec
rol
dec
cmp
insl
jb
sbb
jle
jecxz
mov
push
outsb
add
mov
add
movsb
leave
imul
int
jne
clc
std
jno
ficoms
dec
rolb
sub
sub
inc
out
adc
add
fs
ja
mov
pop
push
ja
mov
pop
jno
xor
test
nop
stc
xor
mov
movsb
and
jnp
mov
jno
iret
ljmp
jecxz
or
jg
rclb
adc
mov
or
mov
in
xchg
mov
xchg
lret
mov
fsubr
cmp
icebp
push
pop
dec
sub
movsl
scas
lcall
and
dec
gs
cmp
pop
cmpsl
sbb
lock
cmp
insb
pop
lods
sbb
imul
scas
mov
inc
jb
jnp
jmp
adc
sti
dec
loop
in
cmp
jl
inc
loop
fldenv
inc
lea
mov
inc
out
pop
outsl
in
iret
cmp
sub
push
xchg
mov
test
imul
inc
and
sbb
inc
lret
and
push
bound
xor
cld
mov
jno
mov
incb
push
fwait
and
dec
and
call
pop
not
cli
pop
add
xor
xchg
in
or
sub
pop
jge
dec
sahf
into
add
pushf
int3
mov
sub
movsl
mov
fs
mov
mov
movsb
test
mov
stc
sub
jo
and
aad
insb
ret
sti
rcll
fmuls
in
push
pushf
div
int3
and
lods
cmp
aas
popa
dec
add
jne
cmp
sbb
popf
lret
xor
icebp
in
xchg
and
xchg
sbb
fdivs
leave
jne
adc
jecxz
jbe
mov
cmp
dec
mov
in
in
jne
adc
subb
push
ljmp
mov
xchg
add
ret
mov
sbb
or
hlt
or
and
fiadds
ljmp
je
pop
inc
and
mov
push
in
outsb
dec
clc
or
sbb
ret
int
pusha
sub
dec
cmp
dec
mov
insl
sbb
sbb
sahf
push
sarb
pop
mov
test
pop
lea
ret
lret
xor
jge
dec
adc
mov
sbbb
inc
js
xorl
sbb
xchg
sbb
xor
cmp
xchg
sbb
inc
cmpsb
inc
add
cmp
les
outsb
inc
push
mov
jns
push
sbb
test
inc
lods
out
out
and
dec
dec
loopne
mov
pusha
icebp
movsl
fmuls
jmp
in
mov
dec
lret
lods
roll
mov
aaa
iret
sbb
push
jmp
cltd
mov
pop
sub
mov
fadds
pusha
jp
and
call
jg
xor
pop
jns
lock
mov
jbe
push
dec
sbb
gs
pop
push
mov
sbbl
xchg
aas
mov
adc
sub
fwait
out
ror
sbb
cmp
xor
inc
lahf
add
pop
cmp
fisttps
mov
jb
paddusb
sbb
mov
stos
push
jo
fbstp
lds
dec
mov
icebp
cmp
and
cld
xchg
stos
mov
test
iret
pop
dec
jno
scas
or
mov
and
mov
add
jmp
inc
shll
stos
mov
fwait
jnp
push
adc
call
enter
pop
and
div
imul
xchg
jl
lock
adc
add
xchg
pop
shlb
shr
pop
mov
adc
mov
sbb
mov
push
ja
jge
int3
decb
cmc
jb
xchg
sbb
add
movsb
jp
pushf
mov
pop
enter
sbb
mov
loopne
cvtps2pi
adc
ljmp
icebp
or
cmp
in
aas
lods
jge
jns
fists
jo
and
xchg
lret
mov
push
lock
negb
outsb
sbb
pop
jb
push
xor
test
fisttps
xor
sub
sub
mov
pop
mov
shlb
dec
xor
sbb
loop
sbb
sti
test
jmp
inc
sti
lea
fbld
mov
cs
icebp
lock
mov
mov
pop
sbb
js
sbb
jnp
test
dec
ljmp
sti
xchg
push
add
popa
mov
mov
jnp
dec
shrl
adc
xchg
xchg
je
enter
iret
addr16
and
inc
pop
push
gs
cmp
rorl
lahf
mov
nop
testb
lret
adc
rorl
fsts
lds
das
js
jge
sbb
jecxz
mov
repnz
jno
adc
xor
dec
sahf
dec
shrb
cli
sbb
fistps
pop
mov
movsb
pop
push
ficomps
push
fmull
push
and
nop
adc
ror
out
lock
lods
mov
mov
jle
jge
insb
xor
arpl
dec
shll
popa
mov
and
call
fildl
mov
pop
imul
mov
es
leave
ud2
ficoml
fsubrs
stc
lret
aam
jge
hlt
inc
dec
ss
and
pop
mov
outsb
inc
adc
lock
or
shrb
mov
mov
mov
cmc
movsb
push
sbb
std
pushf
inc
push
js
adc
shr
dec
dec
or
jp
lods
adc
cmpsl
mov
inc
xchg
movb
dec
stos
sarl
jnp
int
shrl
or
outsb
sbb
scas
pop
enter
pusha
mov
sbb
mov
int
sarl
adc
mov
ja
push
xchg
pop
push
fmull
pusha
adc
das
addr16
mov
mov
popf
or
mov
in
aam
xor
lea
mov
jbe
test
addb
pop
inc
iret
pop
gs
cwtl
aaa
fwait
mov
mov
mov
imul
xor
mov
sub
mov
movsl
add
xor
mov
mov
daa
cmp
xchg
and
mov
cld
xor
in
push
loop
imul
cmp
movsl
js
jl
das
xchg
shll
inc
pop
adc
sbb
push
cmp
add
das
pop
dec
popa
cmp
dec
mov
js
mov
ds
arpl
inc
aam
mov
xlat
dec
cmpsl
stc
cmp
pop
leave
adc
adc
scas
mov
loopne
inc
lcall
mov
mov
aam
jne
sbb
pop
add
in
fs
pop
lds
inc
push
xchg
dec
clc
pusha
testb
fwait
adc
pop
jnp
bnd
shll
xor
loopne
jae
xchg
cmp
xor
fisubrl
inc
inc
xchg
aaa
sub
cmp
shll
dec
jp
and
xchg
xor
add
mov
cmpl
mov
inc
cmp
jbe
adc
and
inc
cwtl
xor
jg
loope
les
add
enter
fdivrl
movsb
mov
daa
js
les
xlat
and
sbb
xlat
daa
ljmp
add
xor
ret
leave
ljmp
mov
jge
sahf
dec
cmpsb
inc
mov
out
xor
insl
fdivrs
repz
int
or
iret
mov
shrb
mov
mov
push
call
dec
loope
and
adc
aad
dec
shlb
dec
sub
adc
sbb
adc
mov
cs
rcr
idivl
push
and
cmpsb
xor
cli
movsb
aam
mov
fwait
mov
iret
outsl
test
scas
es
clc
mov
call
pop
ss
rcrb
filds
lods
iret
in
sbb
add
jne
cmp
sarl
mov
lods
cmpsl
pop
and
lods
lock
pop
out
rorl
jp
mov
cs
lock
pop
jae
sbb
jecxz
mov
mov
negl
xor
fcmovnu
mov
cs
lcall
in
sbb
imul
icebp
jns
hlt
aas
or
push
decl
jle
xchg
mov
push
insb
jnp
jb
mov
leave
pop
jmp
mov
xchg
jb
pop
outsb
je
shrb
test
sbb
sub
gs
adc
and
lock
or
or
test
mov
into
lea
xchg
mov
and
push
xchg
cmc
inc
sarb
dec
fwait
loopne
cmp
push
divl
lock
inc
pop
jge
rolb
pop
push
pop
iret
call
xor
hlt
das
imul
pushf
push
dec
add
stc
int3
in
mov
test
mov
outsl
sbb
pop
test
cwtl
jl
pop
cld
dec
jbe
mov
cmp
pop
into
xor
xchg
dec
xchg
push
lret
fs
xorb
xchg
or
inc
rcrb
scas
pushf
mov
push
fisubrl
inc
add
mov
mov
je
lahf
sbb
ror
sbb
jne
stc
pusha
leave
pop
push
popa
shlb
push
xor
push
push
mov
dec
leave
cmp
mov
cli
cmp
mov
xchg
push
ds
mov
leave
sub
sahf
inc
sub
dec
or
icebp
int3
jmp
rcrb
and
rorb
scas
jp
cmp
add
pushf
jmp
xor
fdivrs
cmc
addr16
roll
dec
push
mov
in
leave
mov
inc
adc
in
or
addr16
mov
jmp
mov
sbb
inc
mov
adc
pop
repnz
push
andl
imul
test
es
cltd
inc
push
jge
inc
pop
push
xchg
bound
ja
push
lds
fisttpll
push
pushf
mov
adc
lret
fcom
sahf
mov
jae
mov
in
push
dec
lcall
in
add
jmp
mov
scas
inc
js
arpl
lea
mov
fstp
dec
bound
jle
out
xor
xor
mov
fcomp
sub
mov
shrl
popa
popf
or
lahf
lods
inc
test
scas
lock
nop
pop
push
jge
push
mov
fsubl
test
xlat
stos
cmpsb
jmp
daa
test
lea
or
pushf
push
adc
mov
arpl
adcb
add
mov
fisubrl
xchg
clc
mov
scas
xor
mov
ret
pop
mov
inc
dec
lods
int
inc
out
push
roll
xor
mov
push
add
andb
loopne
sub
inc
mov
push
xor
inc
sub
sub
imul
mov
cmp
movsl
out
jmp
xor
xor
int3
cwtl
add
imul
imul
idivl
shlb
xchg
jp
xor
shrl
xchg
in
pandn
arpl
inc
inc
lds
les
jno
sahf
xor
outsb
imul
int
movsl
cmc
cmp
add
or
mov
add
pop
scas
and
int
push
dec
movsb
cli
mov
jl
notb
mov
pop
fsubs
aaa
iret
ljmp
jne
push
xor
insl
or
pop
test
sub
jmp
enter
adc
xchg
leave
sbb
ffree
jl
sbb
notb
mov
adc
xlat
pop
mov
clc
inc
jo
push
in
std
scas
mov
cmp
jge
and
fwait
jle
push
xchg
mov
xor
sub
loopne
fwait
bswap
je
add
push
xor
mov
rorl
jns
adc
pop
jne
minps
pop
pop
cli
mov
xchg
sbb
cmp
ss
pop
push
cwtl
test
mov
fisubs
movsl
sub
sbb
jmp
scas
sbb
mov
lea
adc
dec
popa
cmp
fisttpl
stos
shl
jg
mov
lcall
xor
sahf
push
push
push
lods
insl
xchg
mov
jae
sbb
add
sub
addr16
std
cmpb
lods
ss
call
push
push
cmp
xor
xchg
les
lock
cwtl
add
andl
int
leave
outsb
fstps
repz
xor
mov
mov
cmp
push
shrb
pop
jns
push
int
jo
push
adc
jo
push
cmp
sub
mov
mov
subb
mov
shrb
cmp
cwtl
inc
jg
jbe
filds
jl
mov
xchg
jg
jo
adc
mov
xchg
mov
sub
repnz
and
outsb
icebp
dec
push
pop
lds
je
fildl
xor
in
adcl
stc
orb
in
lret
inc
fbld
xor
mov
mov
mov
add
jl
fbstp
cmp
dec
sbb
inc
mov
xchg
call
dec
mov
pop
call
sbb
and
repnz
lahf
lea
fnstcw
std
sti
mov
lea
sbb
out
mov
daa
ljmp
ja
adc
outsb
int3
stos
or
mov
mov
cmc
sbb
outsl
dec
ss
adc
mov
mov
pop
pop
jne
jnp
inc
xchg
mov
push
cmp
pop
mov
in
sub
shl
popf
cli
or
jmp
out
idiv
je
aam
and
cmp
sahf
xor
jl
pop
rcrb
inc
sbb
mov
xor
cwtl
fwait
pop
jae
inc
adc
icebp
cmp
jg
fdivl
mov
pop
mov
aad
in
int3
int3
jl
jg
mov
lea
ljmp
out
cmp
xchg
and
insb
pop
inc
mov
pop
mov
repz
mov
jl
adc
sub
repz
loope
xor
add
lcall
add
jecxz
aaa
bound
add
cmp
jle
xchg
dec
push
out
movsl
xor
inc
arpl
inc
mov
adc
enter
jg
mov
or
repz
sarb
jnp
shlb
in
lea
or
dec
push
in
push
cmp
out
sub
cmpsb
test
sub
inc
mov
push
mov
lods
repnz
sub
push
lea
adc
cli
ror
lea
scas
lods
or
jns
ja
imul
cmp
cltd
mov
pop
adc
mov
xor
xchg
adc
sbb
or
movsl
into
sbb
stc
stos
add
gs
push
mov
loop
sub
mov
and
push
sar
cmp
mov
fistpl
jae
scas
add
ss
add
pop
mov
dec
sub
add
sub
arpl
mov
mov
and
and
aam
imul
scas
ret
es
push
push
or
pop
negl
jmp
mov
out
adc
sub
cs
adc
fbld
sub
push
lods
inc
xchg
jecxz
cmp
and
ljmp
mov
int3
gs
cmp
jnp
call
inc
mov
ret
mov
fisubrl
nop
sub
inc
out
pop
stos
mov
hlt
xchg
sarb
aas
out
cmp
push
test
xor
cmp
inc
push
sbb
and
dec
ds
scas
lcall
fldcw
scas
mov
test
push
sbb
add
sbbb
push
mov
push
sub
or
cmp
scas
mov
sbb
movsl
jmp
inc
jmp
ja
cmc
push
sbb
aam
jg
dec
icebp
inc
dec
and
push
pop
enter
mov
add
jbe
aaa
adc
es
mull
outsb
lea
arpl
and
cmp
aaa
mov
mov
aas
mov
addb
divl
sub
adc
call
and
push
pop
stc
sbb
or
mov
iret
add
rcll
fs
lods
sub
in
dec
sub
xor
xchg
and
push
xchg
cmc
jo
push
test
lret
jnp
popf
or
pusha
into
jmp
hlt
in
push
xchg
mov
in
fstpl
and
mov
idivl
sub
lds
jne
outsl
idivb
es
insb
push
shrl
push
mov
cld
aam
lcall
jge
pop
cmpsb
jecxz
jb
insb
jge
or
jge
adc
jle
repnz
push
add
xchg
lahf
in
xor
aam
add
and
dec
mov
xchg
pop
mov
pop
and
adc
gs
mov
popa
aaa
stos
mov
shll
mov
loopne
jp
pusha
cmp
outsl
int
nop
call
and
outsb
cmp
fisttps
push
xchg
sub
incl
dec
xor
pop
scas
inc
std
push
iret
sub
adc
jae
dec
les
scas
out
inc
fisttpll
bound
aaa
push
mov
mov
cltd
in
int
dec
mov
je
xor
fmul
and
push
xchg
adc
xchg
dec
icebp
add
dec
mov
test
pop
out
hlt
sbb
or
and
add
mov
cmpl
sub
mov
out
and
fidivrl
push
lret
cltd
arpl
adc
out
lds
arpl
mov
fmuls
test
jl
insl
out
inc
lahf
loope
lahf
xchg
cmc
outsb
aam
cltd
shl
dec
mov
in
repnz
movsb
arpl
scas
xlat
std
mulb
cmc
add
cmc
sbb
xor
pop
pusha
dec
inc
push
clc
push
mov
repz
pop
xchg
inc
adc
sbb
and
and
dec
lahf
loope
rclb
fisubrs
mov
outsb
cmp
cmpsl
xlat
es
fwait
dec
mov
sbb
jmp
jbe
cmp
sbb
jb
rorl
jno
ret
out
insl
cmp
xchg
fwait
xchg
jo
dec
shl
mov
outsl
dec
arpl
lcall
leave
pop
out
ret
icebp
outsl
sbb
stc
stos
repz
jne
pop
call
cs
mov
popf
xchg
inc
push
sarl
pop
ljmp
cmp
push
xor
pop
push
cmpsl
fldenv
movsb
cmc
add
icebp
sbb
push
push
pop
mov
cmp
xor
dec
mov
addb
ss
pusha
movsb
xor
mov
mov
or
mov
out
xchg
push
jecxz
repz
aaa
or
cmpl
xchg
add
pop
mov
js
orps
leave
and
pop
popf
inc
mov
call
aas
mov
stos
fmull
mov
sub
lods
mov
add
popf
aas
ljmp
jle
cs
and
mov
mov
in
in
mov
mov
incb
cmp
add
lcall
cli
push
xchg
iret
xchg
or
fdivl
push
push
inc
fisttpll
lfs
xchg
lods
scas
rcll
sub
icebp
movb
xor
cwtl
push
pop
mov
fisttpl
arpl
clc
mov
jae
sub
sub
adc
lret
sbb
leave
sbb
bnd
rorl
in
inc
push
sbb
sub
cltd
pop
cld
icebp
test
roll
vprotw
sbb
loopne
in
mov
pop
in
sub
cmp
xchg
mov
pop
mov
mov
pop
pop
insl
add
mov
popa
sbb
cmp
inc
int
popa
leave
xor
fists
add
test
test
lea
popa
popf
enter
push
sbb
andb
sbb
shr
test
mov
shlb
jb
dec
mov
ljmp
or
mov
insl
and
jno
sub
fisubs
daa
imul
popa
xchg
inc
ds
dec
out
xchg
cli
push
push
add
movsb
sub
inc
imul
clc
ss
arpl
xchg
xchg
pusha
or
mull
push
inc
jnp
imul
test
inc
mov
scas
mov
mov
xor
pop
jo
scas
ffreep
or
add
add
sahf
or
lods
lods
bound
fsubr
jo
orb
pop
push
sbb
sbb
jg
rclb
into
jae
add
cmp
adc
mov
mov
push
cmp
movsb
inc
fcomp
adc
sub
fdivl
inc
jle
lds
pop
sbb
adc
jg
jb,pn
mov
add
adcb
xchg
mov
in
in
daa
push
push
pop
xchg
loope
push
inc
sub
cld
add
add
cmp
cs
mov
add
mov
daa
out
shrb
dec
sbb
loop
cmp
in
adc
in
pop
les
add
std
xchg
push
mov
mov
jns
inc
add
push
xchg
jo
or
ds
gs
rcrl
outsl
ret
push
bound
hlt
push
pop
andl
call
cmp
lods
imul
aas
add
daa
shrl
mov
xor
aas
fucom
pop
addb
daa
loope
pop
mov
test
cmp
sbb
lahf
push
out
popf
sub
cmpsl
in
shl
mov
cs
mov
or
flds
ret
inc
add
ror
mov
cmc
popf
shl
aad
jbe
ss
loop
mov
inc
out
push
nop
ds
fiadds
mov
mov
xor
adc
mov
push
or
push
lret
rclb
in
mov
cmpsb
rclb
icebp
push
xor
cmpsl
jno
lea
stos
fsts
xchg
orb
xchg
xchg
int
cltd
jle
xchg
sbb
cwtl
or
mov
shrb
sbb
sbbl
seto
insb
sub
or
stc
xchg
xchg
sub
sub
in
filds
and
add
test
test
ss
sub
or
or
jmp
es
movsb
sbb
repnz
xchg
fistpl
cltd
movsb
xchg
and
push
mov
cld
pop
push
jp
repz
and
repnz
xchg
mov
add
push
jl
inc
dec
pushf
adc
push
into
xor
mov
fsubrl
nop
lret
and
cmp
enter
pop
stos
popa
sarl
cli
cmp
mov
inc
pop
cmpsl
push
ljmp
data16
mov
cmp
in
push
mov
lea
leave
pushl
xchg
fcmovne
daa
adc
lods
cwtl
sbbl
int3
sbb
sub
or
jp
pop
mov
aad
adc
dec
mov
repz
daa
jg
loop
and
jae
mov
jne
xor
sub
popl
in
mov
mov
sub
dec
dec
mov
adc
lret
stos
xor
adc
or
out
daa
mov
or
div
push
pop
or
cmp
adc
frstor
pop
add
xchg
xor
lods
jno
push
imul
push
fisttps
mov
cwtl
rolb
pop
dec
jae
insb
sti
push
sbb
scas
inc
inc
insb
mov
jae
in
gs
daa
fdivr
ficoms
jg
les
dec
pop
lret
inc
mov
imul
fadds
or
sbb
push
xor
push
pusha
adc
lcall
push
push
test
dec
mov
xor
ds
sub
fidivs
fldenv
repz
dec
nop
js
and
xor
adc
lock
and
hlt
xor
fcomps
cmc
mov
cmp
fidivrs
add
in
inc
sbb
mov
fcmovne
jbe
sub
stos
fstp
push
or
pop
pop
push
cs
fwait
pop
sbb
ret
cmp
ss
add
and
pop
and
fmuls
sub
int
mov
jae
lock
push
inc
pop
fs
cmpsb
fimuls
push
jecxz
fnstsw
int3
mov
aad
hlt
test
cmpsl
das
mov
adc
out
push
insb
pop
mov
lcall
cwtd
in
add
mov
ret
in
add
cmpsb
lds
je
inc
data16
xchg
jge
test
testb
pop
and
dec
cmpsb
inc
or
daa
arpl
dec
pop
cmp
xor
inc
inc
xchg
mov
or
add
push
daa
arpl
arpl
push
adc
lods
xchg
mov
fwait
adc
xchg
lret
fyl2x
lcall
mov
std
std
xchg
cmpsl
sub
push
sub
xchg
repz
dec
flds
mov
aaa
sbb
shrl
cmp
jns
jge
push
mov
cmp
xchg
sub
loopne
les
rorl
cld
jge
je
sbb
aam
stos
lret
mov
lea
xchg
mov
arpl
fisubs
push
and
fs
mov
push
cmp
inc
addr16
int
cmpb
int
cmp
bound
lock
icebp
adc
push
pop
into
rorw
iret
push
bound
xchg
push
lods
loope
mul
js
or
shr
push
pop
in
addr16
cmp
or
inc
push
and
mov
jg
push
lahf
mov
fwait
sar
daa
cltd
sub
pop
push
sti
push
test
fimuls
sbb
cli
mov
push
lods
xchg
cmp
xor
or
or
mov
cltd
es
add
jge
push
mov
adc
mov
ret
cmp
xor
xor
data16
jecxz
xchg
or
movsb
inc
fisubs
xchg
sbb
incb
sub
pop
shlb
outsl
sarb
loope
mov
cs
pop
lahf
fs
cmpsl
rcr
iret
pop
sub
ret
inc
movl
shrl
gs
test
mov
outsl
mov
lea
dec
jnp
pop
sub
pop
sub
mov
sbb
in
pop
in
shll
cltd
out
xor
mov
fidivrl
mov
rcrb
xor
in
xor
mov
jmp
das
or
mov
fnstcw
stc
fistpll
movsl
pop
sub
int3
cmpsb
pop
repz
xor
cmp
xchg
inc
or
adc
mov
mov
bswap
mov
cld
enter
in
fildl
lret
dec
sbb
or
mov
sub
mov
jge
lods
push
iret
or
mov
mov
mov
aad
push
sub
hlt
adc
ja
xlat
dec
inc
cld
fisttpl
xchg
outsb
adc
insl
mov
xor
dec
cmpsl
sbb
je
adc
jns
mov
adc
cs
in
notl
mov
int3
scas
sbb
mov
xor
loopne
push
shll
mov
les
jbe
ret
and
test
test
les
or
out
push
loop
and
push
inc
ds
jmp
jo
out
mov
jns
mov
test
dec
int
jmp
sub
out
aas
xor
sub
mov
in
testl
test
dec
mov
or
ficoml
mov
jns
or
xchg
add
push
push
je
push
xchg
lret
movsb
stos
dec
push
loope
cmpsb
xchg
dec
sub
or
dec
jmp
jne
sbb
pop
movsb
in
movsl
xchg
push
cmp
orb
inc
cmp
outsl
stos
mov
popa
fidivs
inc
pop
dec
inc
movsb
pop
jns
mov
hlt
inc
mov
out
loope
push
cmpsl
pop
negb
das
cltd
call
or
clc
orl
jge
push
or
push
sub
sbb
cmpsb
and
mov
aas
test
adc
push
pop
in
push
cmp
jge
pusha
push
test
pop
testl
inc
xchg
bnd
lret
sbb
subl
pop
push
inc
cld
gs
and
daa
popa
ficompl
ffree
push
movsl
xchg
fsts
mov
sub
inc
xchg
xor
mov
rolb
andl
adc
lds
dec
insl
ficoms
fsubrs
or
in
enter
lret
cmpb
push
xchg
inc
xor
mov
in
dec
and
and
or
mov
inc
push
mov
cmp
movsb
jae
sub
mov
xor
ficoml
cmpsl
data16
dec
pop
jo
int3
pop
jecxz
in
push
clc
pop
sub
push
inc
cltd
ljmp
xorl
jmp
insb
popa
stos
lret
jp
mov
sbb
jle
jl
mulb
pop
out
pop
xchg
loope
pop
fmuls
cld
cltd
mov
shlb
aad
dec
orb
in
mov
cmp
clc
test
mov
repnz
lret
ds
insl
push
std
inc
push
sbb
sub
lods
sbb
add
in
inc
pop
push
push
fcomp
dec
addr16
pop
test
cmp
lods
out
cmp
cwtl
inc
adcb
es
mov
mov
sub
in
addr16
cmp
stc
ffree
icebp
in
insl
out
pop
jecxz
adcl
imul
xor
inc
pop
in
fdiv
mov
lret
outsl
mov
call
aas
icebp
or
add
das
pop
jb
data16
pop
mov
cmp
test
rcrb
sti
cli
fcomp
mov
js
xor
in
mov
xchg
mov
cltd
in
cs
stos
loopne
jl
or
in
xor
cmpsb
cs
inc
push
fstl
cmp
inc
inc
loop
push
incb
and
fisttpl
xchg
inc
jae
insl
jmp
insb
jne
clc
mov
leave
out
data16
js
ja
loopne
and
and
pop
and
lahf
enter
sbb
lock
push
inc
int
lds
lods
mov
pop
pop
mov
sub
pop
mov
adc
xor
cmpsb
fdivrl
gs
sub
xlat
adc
shr
aam
add
cmp
jae
jns
mov
push
mov
lret
pop
aam
sbb
xor
ret
movl
jo
cmp
lock
fsubl
sub
jb
inc
mov
lds
adc
mov
add
jno
jnp
mov
sub
in
and
push
mov
in
out
xchg
lock
xchg
inc
out
or
push
out
stos
dec
clc
out
cli
jg
fwait
jnp
add
faddp
sbb
push
and
in
loope
sbb
leave
cli
push
adc
inc
mov
sbb
pop
jne
or
stos
mov
dec
js
aas
sub
cmp
enter
data16
repnz
mov
arpl
lret
ss
mov
pop
cmp
addr16
push
push
cmp
adc
or
cs
push
mov
sbb
enter
call
cmpsl
push
mov
pop
jbe
stc
out
pop
push
lret
mov
cltd
xchg
test
les
fidivrl
mov
outsb
lahf
inc
xchg
imul
xchg
sbb
xchg
pop
jl
sub
dec
pop
mov
mov
test
scas
fists
pop
push
cltd
into
dec
call
fdivrl
ss
outsb
idivl
mov
dec
mov
xchg
mov
ja
data16
xchg
enter
inc
mov
cmp
in
xchg
stc
jbe
leave
adc
out
das
sub
pop
or
test
mov
and
mov
push
fcmovnb
imul
imul
clc
pop
int3
push
xchg
add
push
mov
xchg
mov
into
mov
xor
repz
dec
into
lret
xchg
pop
fiadds
mov
xor
outsl
fildll
mov
mov
xchg
fisubrl
dec
inc
or
cmp
addb
outsb
xlat
inc
mov
sbb
dec
aaa
sbb
xchg
ja
in
xor
add
mov
sub
in
fcmovb
dec
xchg
lret
imul
pop
arpl
pop
leave
inc
xchg
pop
inc
popf
push
and
xchg
mov
or
sarb
inc
outsb
das
push
and
ljmp
xor
adc
push
sub
sbb
shrb
lock
pop
outsl
jle
gs
ds
inc
add
add
lret
pushf
mov
test
pop
jo
push
sti
mov
and
into
jb
add
in
stc
adc
push
mov
scas
or
ljmp
jp
ss
mov
ret
sbb
push
in
lret
leave
sbb
out
inc
fsincos
lret
sub
adc
pop
inc
sub
hlt
fdivrl
sub
xchg
mov
ja
popa
int
cmp
test
add
arpl
dec
push
jecxz
into
cmp
or
pop
mov
mov
lea
jno
inc
add
xchg
xor
mov
add
mov
jns
and
sti
rolb
movsb
stos
jo
enter
fistpl
enter
inc
scas
pop
mov
mov
push
iret
aad
jne
jb
pop
fnstsw
pop
jle
adc
stos
imul
inc
out
jnp
inc
xor
sub
dec
clc
sbb
imul
ds
test
add
sbb
push
mov
sbb
das
push
cwtl
or
mov
mov
xchg
cltd
jne
dec
push
mull
cmpsl
cmp
pop
inc
sub
mov
pop
rcrb
xchg
data16
mov
xchg
xchg
pop
or
xchg
faddl
xor
xor
rclb
mov
fwait
out
cld
jl
dec
fsubrl
mov
ror
mov
scas
aas
and
inc
pop
shll
test
xchg
xor
add
lds
push
movsb
ret
jecxz
xchg
cli
shl
push
dec
sbbl
adc
loope
mov
pop
sbb
mov
mov
arpl
pop
mov
pop
and
sbb
cmp
sub
pop
xor
enter
movsb
andl
shll
nop
cltd
sbb
inc
mov
or
pop
into
daa
add
subb
and
xchg
imulb
or
clc
fstps
cmp
leave
ficoml
jne
cmpsb
xchg
adcl
lahf
repz
clc
sub
mov
jecxz
jo
sub
add
cmpsb
pop
dec
stc
aad
sarl
aas
inc
movsb
jns
push
sti
test
cmp
rol
aas
adc
shr
jno,pt
lret
cmp
mov
or
push
hlt
and
ror
or
inc
push
and
add
jbe
add
js
xor
xchg
and
mov
cmpsl
shr
push
mov
push
dec
jno,pn
icebp
mov
xchg
adc
sbb
adc
and
fucomp
dec
mov
loope
mull
js
out
cltd
xchg
adc
scas
add
gs
adc
lods
push
stc
test
aas
out
lds
inc
pop
push
cltd
andl
pop
jge
mov
sub
in
or
mov
rol
mov
pop
mov
push
inc
push
movsl
xchg
sub
insl
push
test
mov
outsb
pop
lret
cmp
pop
pop
sti
pop
and
ljmp
nop
mov
mov
es
inc
js
mov
cmp
cmp
into
push
mov
ret
dec
outsb
lret
mov
adc
testl
mov
mov
fdivrp
fisttps
mov
cmp
das
xchg
mov
jnp
or
ja
sub
pop
inc
aas
push
dec
xlat
or
in
mov
add
aaa
cmp
and
cmpsl
push
lahf
nop
sub
jge
xchg
cmpl
ret
insb
pop
push
ss
cli
jle
inc
rcll
pop
les
ds
rorb
shll
lods
or
iret
repnz
jnp
push
imul
js
addl
sarl
pop
sub
iret
lods
xchg
je
mov
inc
mov
mov
rolb
push
and
insb
and
sub
dec
and
das
or
or
xchg
pop
test
les
mov
xor
out
cmp
sub
xchg
sub
jno
cmp
mov
jo
or
jecxz
dec
gs
adc
jo,pt
jno
insb
shrb
bound
ljmp
jno
sbb
ret
cld
mov
mov
sub
and
subl
push
ret
or
jl
ficomps
aaa
bnd
pop
mov
ja
std
mov
mov
mov
jb
pop
cli
jae
or
jmp
rclb
push
or
scas
mov
xchg
mov
ret
mov
mov
sbbl
jle
fldt
addr16
mov
add
lcallw
sub
mov
jo
mov
or
cmp
outsl
push
xchg
sbb
mov
cmp
lods
shrl
xor
sub
pushf
stos
test
adc
sbb
test
pop
nop
lret
repnz
cs
and
out
fcomps
push
mov
dec
mov
dec
mov
mov
ret
into
mull
xchg
sbb
xchg
shlb
fdiv
pop
sbb
enter
out
mov
cwtl
in
sahf
cmp
and
call
inc
lret
test
push
repz
into
mov
ret
fnsave
scas
aas
xor
shll
sarb
add
mov
jl
adc
xor
jne
or
jb
sbb
mov
mov
inc
out
cmpsb
rclb
xchg
xor
and
cmp
std
mov
dec
mov
or
hlt
mov
or
cltd
and
pop
cmp
lahf
adc
xchg
push
loopne
cmc
cmp
stos
nop
dec
sahf
pop
bound
ss
aaa
dec
fcomps
mov
mov
fisubs
pusha
orl
mov
pop
shrl
mov
mov
loope
push
cmp
cli
push
cmp
cmpb
push
jg
ss
jl
mov
sarl
pop
fidivs
jo
xchg
sbbl
mov
sahf
fcompl
int
iret
xchg
mov
je
aam
bound
lea
call
in
fcomp
mov
sbb
inc
pop
lcall
xor
popl
fisubl
xor
es
cmpsl
bound
xor
mov
xchg
aad
hlt
imul
cli
repz
mov
jb
aaa
jb
dec
jns
jne
sub
push
mov
test
dec
push
dec
in
fwait
jnp
int
out
or
mov
arpl
mov
cmp
cmc
fmull
adc
sbb
pop
mov
arpl
adc
data16
clc
movb
push
rorl
mov
dec
into
fstpl
mov
jl
scas
lahf
scas
xchg
and
sub
xor
inc
ret
outsb
mov
imul
mov
ljmp
insl
sub
mov
lret
popf
xchg
cmpsb
out
push
outsl
stc
test
icebp
mov
repz
insb
jne
dec
jge
popf
cmc
ljmp
inc
mov
jb
std
dec
inc
jbe
jno
push
aas
cmc
nop
xchg
shlb
dec
loope
jecxz
std
clc
pushf
sub
repz
pop
push
jecxz
adc
iret
pop
js
lods
sub
aaa
lcall
nop
ss
mov
shrb
push
xlat
pop
pop
cmc
mov
push
loope
inc
aaa
cld
cmp
sbb
xchg
mov
push
jg
popf
ret
notl
in
in
xchg
fucomi
push
fwait
in
mov
push
stos
push
negb
cmp
inc
pop
inc
xorl
jno
jle
and
mov
in
scas
mov
adc
imul
jbe
into
ret
arpl
lret
insl
repnz
sub
inc
insb
movl
mov
movsl
test
shr
sbb
jmp
xchg
cmpsl
sub
repnz
push
pushf
arpl
mov
daa
enter
loop
mov
and
pop
roll
xchg
loopne
aas
xor
repz
std
cwtl
mov
mov
stos
repnz
cltd
lds
lea
cmp
ds
adc
shrb
mov
mov
cli
ret
popf
jae
pusha
cmp
jge
push
cwtl
ljmp
mov
repnz
shlb
lret
mov
cmp
fdivr
pop
dec
in
inc
pshufw
sub
sahf
sti
mov
lret
loope
fsub
xlat
movsl
push
xor
repz
mov
loopne
xor
mov
mov
sub
push
mov
jb
sub
ljmp
cmp
xchg
pop
pop
push
dec
push
pop
subb
xchg
sbb
jmp
pop
gs
add
repz
sarb
pop
lcall
jl
aaa
add
lret
divb
leave
aas
pop
arpl
mov
es
clc
lcall
insb
xor
fcomp
xor
jmp
sub
aam
jle
aaa
lods
cwtl
jnp
repz
das
cmp
out
clc
bsf
cmp
push
pop
clc
sbb
aad
movsb
out
xor
xchg
outsl
pop
fistpll
scas
sahf
sub
rolb
shlb
enter
jnp
aas
enter
int
call
or
jae
psubusb
add
mov
or
adc
nop
lods
sbb
jne
lock
pop
jne
les
int3
aam
sub
mov
mov
sbb
das
sub
ljmp
push
xchg
stos
jae
je
sbb
inc
out
xor
repnz
imul
cmp
or
jb
sub
scas
pushf
scas
add
mov
aas
pop
popa
fdivr
insb
popa
xchg
or
shr
and
enter
test
mov
cmp
mov
loopne
jp
into
and
xor
mov
lea
sub
sbb
mov
jg
sbb
dec
aaa
push
cmpsl
dec
xchg
mov
mov
push
xor
cmpsb
push
imul
adcl
incb
add
pop
mov
lcall
xor
mov
add
and
xor
iret
lret
out
xchg
fs
out
ficomps
call
xlat
roll
sbb
out
mov
jb
gs
mov
xlat
clc
sub
push
inc
xchg
fstps
jno
ret
adc
and
push
out
cmpb
adc
leave
fwait
in
xchg
test
aaa
cltd
movsb
mov
dec
ret
push
push
adc
fs
push
and
imul
push
stc
adc
pop
fsubr
dec
mov
repnz
jb
je
outsb
cmp
inc
or
in
sub
orb
or
mov
testb
stos
adcl
adc
fwait
xor
test
mov
mov
add
pop
push
mov
push
rcrl
xlat
inc
lret
shrl
mov
out
dec
mov
xchg
xchg
xor
add
pop
xor
pop
xor
gs
dec
mov
std
outsl
jle
mov
into
addr16
xor
jnp
ret
add
jne
popa
jp
cmpsl
in
mov
loopne
ret
bound
jl
xrelease
leave
les
and
inc
ljmp
pop
out
ret
mov
sub
jl,pn
jae
enter
lods
cs
mov
sub
xor
out
adc
cwtl
inc
cmp
scas
inc
lea
js
add
aad
das
mov
lret
add
push
lods
aas
inc
iret
cwtl
out
jmp
jp
push
jge
add
lds
jge
dec
out
mov
cli
adc
and
ret
cmp
int
cli
mov
stos
ds
ja
rcll
cld
cmp
lea
icebp
insl
test
rolb
test
xchg
loop
bound
jmp
cmc
add
stos
es
les
ljmp
mov
lds
cmp
inc
add
jp
gs
fnstcw
inc
ljmp
rcrb
dec
pop
jg
sub
stos
jmp
sarl
lock
jmp
fldt
pop
call
stos
es
sub
jg
sbb
xchg
shll
add
jb
inc
cltd
imul
insb
pushf
arpl
fistpll
insb
cmp
andl
in
out
push
lea
pop
pusha
xchg
je
sub
sub
mov
xchg
mov
je
call
inc
adc
jle
int
inc
cmp
sti
insl
and
and
cmpsb
add
mov
sub
pop
rclb
mov
pusha
and
mov
data16
lret
push
mov
cmpsl
jnp
divb
pextrw
insl
fs
jne
dec
daa
dec
pop
data16
into
or
in
pop
cmpsl
add
and
jp
jae
add
add
mov
xchg
pop
inc
add
into
push
popf
adc
les
outsb
dec
aas
mov
push
stos
scas
lods
cmp
mov
loop
mov
mov
inc
mov
sub
sub
jg
jns
daa
push
xchg
fnstcw
pop
jp
adc
dec
aad
xchg
ja
in
xchg
stos
pop
sahf
xchg
test
jg
pop
cmpl
push
into
iret
pop
js
out
ljmp
inc
mov
popa
leave
cmp
cmp
dec
daa
mov
loop
adc
cmp
stc
mov
rorb
loope
imul
add
push
lret
jbe
fsubrl
mov
les
push
daa
mov
cwtl
imul
add
xor
mov
jle
mov
push
mov
sbb
cwtl
test
dec
jb
data16
lods
popa
and
cmc
dec
ja
mov
push
xor
test
add
test
cwtl
popa
int3
adc
jbe
or
sbb
and
cmp
xchg
mov
sbb
loopne
xor
lea
out
test
stc
jmp
js
nop
sub
fdivrl
mov
ljmp
ficoml
das
shll
ror
loopne
ficompl
roll
loopne
cmpsw
addl
xor
inc
cmp
dec
push
add
into
add
test
inc
aad
sarb
es
sub
hlt
dec
jge
jp
dec
push
xchg
out
aad
sahf
mov
mov
hlt
jo
inc
lret
pop
pop
or
mov
jnp
iret
xchg
scas
movsb
or
hlt
mov
pop
dec
sbb
pop
mov
divb
push
mov
pop
jecxz
cmc
or
mov
sbb
xchg
cmp
jne
sarl
fistpll
inc
sub
mov
sub
or
loop
add
push
repz
rclb
pop
enter
loope
mov
dec
rcr
xor
ffree
xchg
int
inc
loopne
pop
and
cmc
mov
outsb
push
fucomi
sbb
icebp
dec
mov
nop
inc
lods
jle
outsb
dec
xchg
cld
push
and
ret
mov
aam
add
rcrb
cmp
cltd
cmp
ljmp
mov
sbb
sahf
jl
mov
mov
push
icebp
cld
lods
and
sub
cwtl
inc
pusha
cmp
test
push
push
push
js
ja
cli
sub
arpl
in
mov
cmp
mov
mov
push
mov
pop
outsb
cwtl
das
jge
outsl
push
shlb
dec
or
jp
mov
in
popf
mov
pop
and
je
mov
dec
call
icebp
cwtl
jnp
fldt
fwait
shlb
push
movsb
lret
cltd
mov
adc
pxor
sbb
xor
adc
lret
push
cmp
incb
adc
add
call
add
aad
test
and
leave
pusha
adc
int3
pushf
adc
jbe
mov
fsubr
ja
push
dec
jl
cs
add
push
jnp
popf
cli
pusha
scas
fucomi
xchg
popa
movl
inc
dec
es
or
push
cmp
daa
insb
out
pop
aaa
pop
lods
sub
mov
mov
dec
fisttpl
mov
xchg
fs
pop
rclb
cmp
jge
outsb
scas
xor
xchg
sarl
testb
dec
call
pop
mov
mov
arpl
mov
test
pop
mov
sub
lods
jb
lret
enter
add
dec
lret
or
add
xchg
jl
lret
shlb
dec
push
filds
aad
les
add
rol
imul
int3
mov
xor
loopne
sub
pushf
pop
pop
pop
inc
int3
cs
mov
mov
insb
sbb
movsb
jmp
push
and
addr16
sub
into
jae
repz
sbb
jl
lea
push
inc
inc
popa
lahf
cld
fistps
sbb
pop
push
cltd
cltd
pop
jnp
cmpsl
je
sbb
push
into
cmp
and
mov
inc
add
xchg
idivl
xchg
push
inc
lret
jo
decb
pop
stos
xchg
dec
insl
sarb
or
pop
pop
push
jnp
cmp
push
testl
sub
and
mov
cmp
sbb
lret
cmpsl
cmp
sbb
xchg
xlat
jecxz
mov
cmp
scas
addr16
add
cmp
xchg
mov
test
jb
pop
mov
xchg
cmp
xor
andl
ds
popa
iret
jae
jno
cs
lret
popa
mov
dec
int3
xlat
pushf
mov
mov
add
push
shrb
add
sub
sbb
jl
rorl
add
std
je
lcall
loopne
in
pop
data16
pop
repnz
dec
sbb
sub
movsb
loope
stc
pop
pushf
in
sbbb
jbe
movaps
pop
pop
imul
fcmovb
xor
jo
push
push
ja
jg
or
dec
push
fwait
lods
or
sub
or
inc
rclb
ret
jo
inc
ret
orl
or
rcr
sub
insb
push
test
xlat
pop
movsb
and
xor
pop
cmp
test
dec
popa
mull
clc
pmaddwd
shrl
test
and
inc
and
loopne
stos
cmp
pop
cmp
ljmp
leave
in
mov
mov
xchg
pushf
mov
lret
int
je
push
lods
adc
punpckhdq
inc
sub
xchg
and
icebp
cmp
shlb
mov
aas
lahf
sub
push
in
std
popa
xchg
inc
ss
shlb
in
xchg
jae
adc
repnz
cld
fldcw
out
pop
jbe
popf
ret
stos
push
loope
mov
out
jmp
arpl
idivl
cmpsb
adc
adc
pop
mul
hlt
xlat
dec
adc
lea
insl
jl
out
sbb
mul
xchg
mov
cmp
or
xchg
xchg
lock
xor
mov
inc
in
xchg
popf
xchg
inc
call
sbb
push
or
cmp
add
dec
fnsave
xor
jle
mov
in
pop
lcall
push
repnz
out
pop
aad
pop
xchg
hlt
jne
out
adc
js
std
ljmp
aad
add
mov
push
jo
lahf
jo
fistl
cmp
add
scas
sbb
int
stos
mov
in
dec
pop
cli
movsl
gs
pop
lea
rcl
ffreep
insb
es
stos
push
mov
adc
lea
fldenv
or
jne
xor
addr16
push
clc
mov
cld
shl
mov
jnp
cli
test
adc
in
mov
jns
cmp
lea
fldenv
in
fidivrs
dec
sbb
mov
movsb
xorl
push
es
aam
js
push
clc
xchg
test
xchg
test
call
push
inc
mov
mov
sub
stos
mov
sbb
jg
mov
aad
out
in
mov
gs
js
iret
jno
sbb
iret
repnz
inc
int3
bound
hlt
mov
pop
testl
lfs
ficompl
push
das
or
or
mov
frstor
mov
aam
pop
stos
and
insl
dec
shrd
inc
mov
out
shll
sbb
or
jb
pop
push
mov
mov
loopne
cmp
mov
xchg
int3
add
xchg
sbb
pop
stc
cmpl
adc
dec
ret
rcll
js
out
mov
pop
sub
jae
xchg
xor
inc
dec
mov
lea
pop
jmp
xchg
ret
mov
mov
push
inc
out
push
testb
lcall
or
test
arpl
push
push
cltd
pop
inc
stos
es
orb
cmp
enter
outsl
imul
mov
cmp
push
cld
ret
xor
cmpsl
loop
pop
inc
movsb
push
cltd
ljmp
mov
add
xor
add
f2xm1
cmp
mov
stos
out
fimull
dec
loopne
jp
jmp
movb
rcll
xchg
ja
iret
test
jbe
lds
lret
add
xchg
shll
add
mov
std
mov
repz
leave
fldcw
jmp
arpl
jo
jle
pusha
mov
mov
sbb
mov
stc
lods
jg
paddusb
sbb
daa
add
insb
out
adc
sbb
iret
push
adc
jecxz
cs
repz
data16
adc
outsb
lret
jmp
outsb
insb
lahf
cwtl
cmp
leave
mov
in
leave
aad
sub
hlt
inc
cld
sbb
lcall
cmp
xor
ret
mov
lcall
jae
pop
pop
lods
or
aam
ret
dec
jb
or
and
push
adc
sbb
sbb
ljmp
popf
fmull
les
xchg
icebp
and
jb
dec
test
push
fcomps
aad
nop
mov
adc
mov
fdivs
test
stc
scas
das
jmp
in
xchg
sbb
dec
in
cmpb
xchg
mov
fmull
lock
mov
sbb
mov
push
xor
loop
loope
xchg
scas
enter
pop
pop
xor
sbb
and
lea
sbb
popa
and
out
and
xor
adc
in
cmp
jo
cmpsl
jmp
jae
mov
add
jle
inc
nop
aam
mov
mov
pop
sub
adc
aaa
sub
das
les
add
movb
add
int3
sbb
cmp
cmp
es
insl
addb
iret
push
push
fwait
sbb
mov
pop
enter
fnsave
xor
out
and
dec
div
ljmp
ret
data16
bsr
xchg
push
outsb
xor
std
mov
sbb
dec
addr16
in
scas
xor
cld
mov
and
xchg
imul
je
cmp
push
pop
mov
scas
enter
das
jo
or
js
sarl
adc
adc
lret
push
jmp
inc
mov
icebp
cltd
push
add
icebp
test
sub
cs
roll
lcall
jns
pop
clc
call
xor
jbe
add
sub
lcall
xchg
div
adc
sub
stc
pusha
cltd
xor
jmp
inc
inc
ja
ds
adc
insb
xchg
inc
stc
aaa
int3
fistl
decb
sub
pop
cmpsb
popf
stos
lcall
pushf
mov
sub
movsl
sar
jo
repz
dec
mov
pop
pushf
push
mov
sbbb
mov
bound
outsb
loop
sub
push
sahf
stc
clc
cwtl
pop
je
mov
mov
push
in
or
ss
mov
cmpsb
or
mov
mov
in
outsb
push
jecxz
loope
jb
cmp
dec
sbb
das
lcall
cmp
int3
repz
inc
push
int
in
fdiv
add
lds
adc
loop
lret
call
cli
insb
insb
into
mov
mov
notrack
pop
in
lahf
jno
addl
fidivrs
mov
cmp
fcmovnu
cmc
mov
outsb
std
into
lcall
add
hlt
sti
nop
lock
pop
repz
cmpsb
icebp
lds
mov
jecxz
imul
xchg
mov
sub
push
push
shl
xlat
icebp
mov
add
and
insb
push
fadds
bound
popa
push
psrlq
mov
scas
add
lret
push
pop
je
xor
mov
pop
leave
cmp
pop
lods
and
fisubl
jb
push
push
stc
xchg
sbb
dec
push
gs
jnp
xchg
and
dec
cld
cmp
adc
mov
pop
mov
fisubrs
push
jecxz
ret
cwtl
das
xchg
inc
lock
imul
dec
loope
mov
pusha
rorb
pop
mov
arpl
push
scas
lret
xchg
scas
mov
scas
cmp
xchg
push
dec
mov
das
jmp
ret
jo
cmp
addl
cs
test
mov
addr16
je
mov
stos
lret
sti
lds
add
mov
out
xor
mov
mov
shlb
pop
jle
cld
jne
and
addr16
mov
aas
out
sub
loopne
pop
aas
add
xchg
xor
lcall
add
adc
jle
xchg
adc
sbb
jno
mov
or
sub
lods
ja
cmpsl
inc
loopne
enter
pop
lods
or
pop
ja
mov
adc
cmp
fistl
and
in
mov
dec
int
xlat
loope
decl
xorb
test
es
dec
inc
outsl
inc
into
fs
cmc
sahf
push
mov
iret
arpl
add
push
loope
sbb
cld
fwait
cmp
xlat
xlat
and
jb
mov
mov
cmp
insb
addr16
jns
imul
push
clc
dec
mov
and
repz
sar
hlt
jne
fwait
push
push
xchg
les
stos
jmp
jmp
jb
xchg
insl
addb
jb
and
cmp
sbb
aad
xchg
cmpsl
out
stc
ljmp
out
out
mov
cmp
inc
pop
orl
jne
inc
or
outsb
out
jb
lcall
push
call
scas
xchg
jecxz
aam
clc
push
data16
mov
xchg
lret
pusha
push
or
and
xor
inc
fisttps
pop
mov
loope
mov
roll
aas
mov
mov
leave
xchg
out
fs
adcb
mov
push
xacquire
add
fnstenv
cmc
ret
adc
cs
cmp
cmp
clc
shl
subl
inc
das
cmpsb
and
adc
in
add
xor
fidivl
loope
inc
dec
jno
push
adc
inc
mov
sub
push
sbb
decb
or
fdivrp
jp
cmpsb
out
pop
and
mov
loopne
sar
or
outsl
ljmp
pop
hlt
aas
xchg
jecxz
adc
jnp
int
sub
test
pop
gs
movsb
sbb
jbe
or
rolb
ds
pop
cld
ds
in
mov
aam
lods
sbb
push
push
vshufpd
mov
insl
jno
in
aaa
loope
xchg
mov
inc
xor
mov
mov
nop
sbb
enter
and
and
mov
push
mov
out
adc
dec
sbb
jmp
lea
loope
pop
or
sti
sub
and
test
add
pop
jno,pt
loope
xor
in
mov
enter
clc
jp
in
sub
loope
pop
nop
sub
sub
cmp
xchg
dec
aad
sbb
hlt
lock
lods
inc
fwait
ds
push
dec
fistps
test
idiv
push
nopl
test
mov
ss
fimuls
pop
pop
push
lcall
notl
iret
movsl
fwait
lcall
pop
iret
add
lcall
cwtl
sarb
lods
in
pop
arpl
jne
dec
out
test
adc
inc
ret
leave
outsb
in
aad
sbb
sbb
xor
pop
in
jmp
mov
adc
xor
xchg
call
pop
clc
in
sub
sub
scas
mov
push
out
sbb
cli
fisubrs
insb
repnz
dec
mov
inc
xor
nop
mov
push
push
push
xchg
push
pop
lcall
fcom
inc
xor
ds
jge
xor
inc
sub
gs
testl
xchg
cli
int
cs
pop
push
test
jg
jno
jne
out
jnp
adc
add
stc
lods
xor
jno
pusha
hlt
inc
stos
push
call
shl
cmp
test
xchg
push
loope
cmpsl
sbb
test
test
push
int3
pop
out
pop
mov
mov
lds
xchg
imul
fstpl
addr16
outsl
dec
std
pop
sbb
adc
cltd
pop
cli
popf
jecxz
dec
aad
mov
inc
std
test
add
int
scas
scas
xor
lea
pop
gs
push
xchg
mov
fwait
jbe
sub
push
jg
repnz
jmp
jbe
test
fcomps
pop
out
adc
inc
outsb
push
shll
mull
dec
dec
rclb
jns
sahf
repz
fisttps
xchg
inc
out
sub
mov
ljmp
jecxz
inc
push
add
lock
int
int3
leave
inc
mov
mov
sub
movsb
mov
out
in
xor
pop
adc
pop
shl
xlat
stos
mov
xchg
mov
sbb
inc
aas
roll
test
adc
inc
xor
imul
les
or
pop
out
xchg
mov
out
mov
sub
cs
xor
xchg
inc
and
adc
xor
sbb
mov
push
mov
push
and
movsb
int3
cs
sbb
test
cmp
fwait
push
jae
xor
popf
in
sub
push
xlat
addr16
ret
adc
stc
or
and
cmp
inc
in
sub
addr16
cmc
mov
xchg
stos
in
xchg
xor
sub
mov
dec
xorl
pushf
movsl
push
pop
mov
xor
fldenv
ss
push
dec
adc
leave
outsb
or
mov
inc
dec
stc
int
mov
clc
test
mov
xchg
and
or
test
push
leave
je
pop
mov
inc
je
arpl
scas
push
xchg
pop
xchg
jb
notl
into
dec
fwait
pop
mov
jo
adc
xchg
imul
fisttpll
dec
movsl
dec
xor
ret
sbb
mov
cmp
cmpsb
leave
push
les
ss
cltd
xor
aas
popf
rcl
je
jb
cmpsl
xchg
and
pop
orl
mov
mov
rclb
hlt
je
movsb
cld
xchg
pop
outsl
adc
or
mov
inc
push
or
adc
xor
cwtl
out
mov
lret
jb,pt
arpl
ja
dec
shlb
push
pop
xchg
loope
mov
es
pop
lods
dec
mov
jb
mov
dec
or
push
sbb
test
adc
ror
nop
or
and
jne
and
int3
movsl
cwtl
js
popf
stos
lea
popf
xorl
lods
mov
cs
inc
fnsave
sbb
jp
jae
inc
popf
test
or
xchg
sub
and
adc
ret
pop
adc
inc
inc
mov
dec
out
sub
pop
lock
mov
std
test
add
ds
adc
mov
scas
adc
lea
cmc
and
xchg
and
jo
fisubrl
dec
sub
jmp
repnz
test
inc
cmp
insb
jg
pop
jno
cmp
sbb
dec
xor
dec
out
ret
popf
mov
sub
sbb
cmp
stc
add
mov
or
pop
mov
and
aaa
icebp
sub
ret
hlt
add
add
mov
sub
jp
inc
cmp
dec
dec
cltd
xorl
cmpsb
cmpsl
scas
ds
fstl
inc
cli
mov
dec
sarl
dec
jp
idiv
rclb
add
repnz
jb
pop
int
push
push
adc
and
add
jbe
push
jg
mov
pop
lcall
cmp
mov
fnsave
mov
sbb
loopne
fwait
push
subb
jb
jecxz
xor
push
lahf
rcl
add
lret
inc
lret
in
xchg
xor
cli
pop
cmpsl
push
cmp
enter
shrb
dec
sub
push
sub
inc
fprem1
daa
imul
mov
aam
enter
jle
sub
jne
or
xchg
add
pop
mov
sbb
xor
sub
cmp
imul
rol
xlat
loopne
mov
movsl
jmp
jp
or
movsl
loope
mov
mov
popf
jns
cmp
popf
roll
cmpl
cmp
sbb
and
aaa
dec
mov
xlat
test
mov
cmpsb
xchg
add
scas
add
xorb
mov
sahf
aad
xchg
psubb
imul
sti
js
xor
enter
push
lods
jns
repnz
std
in
mov
mov
sti
cld
movsb
lea
pop
bswap
pop
popf
mov
mov
push
shl
cmp
adc
and
repz
push
fwait
cmc
mov
xchg
dec
adc
cmpsb
dec
int
cmpsl
imul
loop
lock
jno
nop
xchg
loope
jl
pop
or
mov
xor
xor
mov
sbb
aam
imul
cmp
stos
push
mov
and
lea
pop
js
mov
pushf
inc
je
lret
pop
cmp
jae
add
cmp
idivb
mov
shrl
dec
xor
push
and
jle
dec
sub
push
mov
ret
mov
mov
mov
push
add
add
sbb
mov
sub
push
lcall
sbb
and
out
int
out
ftst
movups
mov
dec
dec
xlat
std
jne
sbb
cmovs
sub
leave
icebp
ljmp
std
sahf
xchg
xchg
mov
popa
mov
pop
lcall
mov
add
js
out
add
push
ret
sub
add
adc
or
push
inc
into
mov
popa
nop
out
adc
dec
push
and
push
pushf
jp
pop
pop
aad
cwtl
imul
jae
xchg
adc
inc
rcll
xchg
push
loope
testb
dec
inc
xchg
ret
mov
and
pushf
jno
in
cmp
dec
push
loope
pop
push
sbb
cmp
pop
jae
or
pop
imul
shlb
pop
xchg
mov
popf
cmc
out
add
sahf
mov
pop
es
cmpb
add
cli
enter
mov
inc
sub
insb
mov
adc
ror
sub
mov
xlat
jl
lds
mov
add
adc
ret
arpl
mov
mov
push
mov
leave
out
jp
mov
inc
shlb
scas
mov
pushf
lods
addr16
sbb
pcmpeqd
xor
shlb
sub
inc
mov
lea
mov
out
test
mov
adc
or
mov
jnp
jbe
mov
mov
int3
int3
stc
fs
rcr
loop
in
push
and
movsl
setp
ret
mov
mov
fstpt
enter
mov
insl
mov
sbb
jae
inc
repz
frstor
sub
es
mov
jo
jns
xchg
jl
xchg
dec
out
push
sarb
dec
lods
jmp
mov
lret
andb
xchg
ret
push
fistl
or
mov
mov
ficomps
andb
jmp
push
mov
xchg
pop
mov
movsl
jmp
cmc
push
jge
ret
test
clc
jo
inc
outsb
and
fiaddl
ss
jmp
ds
aad
mov
stos
loopne
mov
dec
push
lret
in
test
sbb
loopne
insl
inc
mov
mov
mov
xlat
in
pop
pop
dec
add
mov
gs
dec
repz
jg
call
pop
jmp
and
jno
pop
js
fwait
push
stos
iret
lds
sbb
xor
lock
jo
addr16
xchg
mov
dec
push
mov
cmp
pop
xchg
and
jnp
inc
mov
jp
xchg
mov
fxch
ficoml
cmpsl
push
sbb
fnstsw
adc
xchg
mov
mov
inc
ss
mov
mov
cltd
rcll
jns
ljmp
aas
imul
and
jnp
adc
sub
test
and
push
setle
mov
fnstenv
sahf
js
jae
and
sbb
das
push
scas
inc
and
les
dec
push
xorb
lods
add
pop
sub
rclb
call
sub
mov
mov
out
mov
push
icebp
push
lods
fadds
mov
jmp
mov
add
mov
test
fldt
xchg
ljmp
daa
push
sti
arpl
sub
stc
cmp
mov
hlt
push
pop
or
rclw
rcrb
jg
xchg
jl
fwait
sub
inc
shrb
mov
and
pop
adc
mov
insb
xor
imul
lret
jle
lock
mov
sub
hlt
pop
test
in
mov
data16
ljmp
mov
dec
jp
mov
out
xchg
pop
cmpsl
je
imul
cmp
xlat
lods
inc
or
mov
imul
ss
in
or
fstpl
push
scas
sbbb
ret
scas
or
addr16
xor
add
bound
and
cmp
jge
wrmsr
movsl
inc
popl
insb
mov
pushf
dec
call
int
dec
jns
inc
xor
mov
ljmp
mov
mov
ret
xor
enter
imul
lea
subl
in
inc
ret
adc
or
icebp
cmp
jns
sub
inc
sti
imull
xor
xchg
test
add
das
adc
inc
add
leave
cmp
jnp
dec
dec
scas
dec
icebp
sbb
bound
in
das
jne
shrb
cmc
jo
sub
shlb
movsl
mov
adc
xchg
xchg
aad
ret
cmp
push
mov
and
or
cmpsb
push
dec
nop
sbb
dec
lea
xchg
rorb
ss
adcb
adc
shll
dec
add
cmc
cmp
jo
pop
adc
inc
and
das
add
cltd
push
cmp
mov
inc
mov
push
mov
fs
xor
jae
or
xor
popf
dec
cs
shrl
ret
in
test
push
xlat
enter
xor
hlt
pop
sahf
aad
push
sahf
xor
int
fnstcw
jg
add
push
sbb
cmp
loope
call
jns
cmpsl
je
or
cvtdq2ps
pop
dec
push
cmp
jmp
and
mov
out
cld
aas
shrb
cmp
mov
mov
add
push
out
mov
dec
fisttpll
lock
mov
jmp
push
mov
xchg
push
push
or
in
adc
outsl
jmp
in
stc
pop
fwait
pop
add
mov
mov
sub
js
push
push
xchg
pusha
mov
cmp
stos
stos
je
cltd
jp
cmp
jnp
mov
cld
popa
mov
jmp
inc
mov
cld
fcompl
stos
cmpsb
mov
fisubrl
loope
ss
sub
lock
push
mov
xchg
dec
adc
mov
out
dec
jns
sbb
nop
push
adc
xor
scas
mov
test
inc
in
add
aaa
push
inc
dec
and
fildl
pop
ljmp
jl
mov
cmp
jle
hlt
int
inc
jmp
cli
cmp
push
fwait
lods
and
jg
out
leave
cmpsl
and
cmp
adc
scas
sub
cmp
loop
es
xorl
pop
shrl
cmp
push
xor
mov
imul
and
jecxz
xchg
faddl
xchg
shrl
test
sub
shll
add
idivb
mov
je
icebp
lock
adc
out
ffreep
xlat
pop
adc
sbb
add
ljmp
outsb
clc
mov
fstl
cmc
fsubr
pusha
imul
adc
repz
xor
pop
addr16
into
dec
sub
mov
es
mov
mov
sbb
jmp
sub
add
imul
pop
in
mov
xor
jmp
or
sets
add
arpl
movsl
mov
sar
cmc
push
xor
dec
jne
mov
cmp
lds
fldcw
sub
shll
push
pop
mov
test
ljmp
xchg
and
repz
out
fidivs
mov
sahf
cmp
imul
push
mov
movsb
xlat
dec
cld
mov
jl
xor
fnstenv
xchg
mov
cmp
cmc
jl
daa
sahf
std
push
enter
adc
cmp
push
adcl
mov
or
jo
pop
mov
popa
inc
fisubrs
jae
mov
or
stc
add
xchg
dec
fistps
xor
rcrb
inc
jae
mov
push
adc
stos
cmp
testb
xorl
pushf
cmpsb
mov
or
std
or
loope
sahf
adc
fwait
xchg
je
xor
test
lret
jp
jmp
mov
loope
mov
popf
imull
push
loopne
fcompl
jno
add
cld
mov
cwtl
add
movsl
aas
cmpsl
sub
dec
popf
mov
mov
and
addr16
aaa
pop
adc
out
push
jle
mov
sbb
pop
jno
push
cli
adc
sti
sub
mov
xor
xor
rorl
stos
mov
daa
pop
sbb
sahf
xlat
mov
sbb
dec
pop
inc
add
pop
pushf
sbb
leave
sub
call
and
push
jle
xor
mov
mov
das
mov
xchg
movsl
sub
push
int3
clc
gs
enter
or
jp
xor
mov
pushf
or
movl
gs
mov
ret
arpl
lods
movsl
or
clc
sbb
xchg
push
mov
shrl
test
sub
out
addr16
lods
adc
lret
inc
push
es
fidivrl
les
andb
mov
adc
cmp
inc
outsb
inc
int3
lcall
push
sub
inc
jb
inc
fstps
add
clc
rcll
mov
xchg
adc
cltd
jno
push
cmp
mov
ja
push
jbe
addr16
test
fcoms
inc
clc
fwait
sti
push
jg
aaa
push
pop
ds
lods
stos
mov
ljmp
mov
pop
cwtl
hlt
mov
sti
dec
aaa
int
cli
in
pop
dec
test
in
sbb
insb
mov
cmp
or
fnstenv
in
jg
jge
push
mov
cmp
shrl
jg
lcall
mov
sahf
mov
outsl
mov
repnz
and
mov
jne
inc
xor
pop
sub
pop
inc
sbb
notl
subl
hlt
push
mov
jbe
jbe
cmp
fimull
jbe
and
pop
ja
mov
or
inc
push
js
push
into
out
cmpsl
imul
pop
inc
adc
cltd
mov
xchg
xor
leave
pop
aad
xchg
and
jp
addr16
mov
push
jne
out
push
mov
or
scas
ficoml
or
adc
cmc
adc
or
aas
and
lds
mov
or
mov
imul
push
jmp
stos
mov
stos
mov
std
xchg
sbbb
addr16
sub
rol
ja
sbb
aam
pop
xchg
xor
shl
fisubrl
sbb
add
xchg
sub
or
les
ljmp
adc
xchg
nop
jno
push
in
inc
xor
mov
sub
repnz
xor
icebp
stos
les
outsb
fwait
andl
pop
nop
faddl
mov
sti
or
xchg
mov
adc
out
fldz
mov
movb
out
and
dec
jle
ret
xlat
fwait
in
stos
int3
je
gs
mov
adc
add
aad
cmp
es
fnsave
fstps
lcall
cwtl
mov
pop
sbb
adc
pop
jbe
jne
out
subb
xchg
lcall
arpl
nop
xchg
jp
push
inc
mov
inc
sahf
enter
xchg
js
loope
mov
repz
test
xchg
rcll
adc
movsb
movl
mov
lea
jmp
nop
and
mov
mov
xchg
std
outsb
ss
repz
adc
dec
mov
jge
imulb
out
jg
hlt
out
cmc
repz
cmpsb
sti
push
lret
fsts
xor
sti
out
sub
rcll
test
mov
push
adc
dec
sahf
std
test
sub
pop
test
rcll
ds
aaa
std
cmp
loope
pop
mov
xor
mov
or
mov
imul
xor
std
leave
ja
xchg
iret
xchg
outsl
fcom
jns
into
dec
mov
fdivs
mov
ds
fwait
adc
mov
ja
jo
pop
out
inc
es
lahf
faddl
das
mov
sbb
dec
and
rolb
push
shll
jno
arpl
jle
inc
pop
cmp
mov
daa
and
cmpsl
adc
imul
mov
mov
sub
dec
mov
int3
sub
xchg
fs
fistl
dec
inc
push
xchg
jmp
pusha
ret
lods
dec
fisttpll
iret
in
icebp
orb
push
aas
sub
es
pop
xchg
test
ss
push
adcl
into
les
movb
popa
rclb
jns
inc
pop
aaa
jp
stos
stos
lock
jle
mov
push
stos
ret
lret
fimull
je
and
mov
aad
mov
mov
stc
jne
idivl
dec
fcomps
ret
push
fstl
mov
cs
push
ss
stos
pop
push
test
ficoml
adc
imul
bnd
jp
repz
pop
out
xchg
lods
enter
fsubl
cmp
adc
rorb
in
jno
icebp
sbb
fcompl
mov
aad
mov
ljmp
cmp
js
mov
sub
scas
sti
inc
mov
jbe
rcrl
insl
adc
push
pop
sbb
cmp
das
cltd
xchg
pop
or
pop
pop
adcb
sub
ljmp
mov
adc
mov
scas
enter
ss
dec
jl
xchg
push
sbb
je
and
xchg
js
lock
jge
lods
lock
add
adc
sbb
mov
movsl
pusha
jne
push
loopne
repz
jecxz
dec
jge
jp
stc
stos
ljmp
inc
ficoml
and
mov
into
push
cmc
mov
pop
divl
mov
cmpsb
mov
outsl
or
inc
fistpll
daa
mov
sub
adc
lock
sub
arpl
mov
dec
lods
xor
test
adc
sbbl
dec
jb
or
std
inc
pop
stc
mov
mov
scas
into
lods
push
cmp
mov
daa
adc
push
xor
ja
scas
dec
flds
ljmp
jne
scas
push
pushf
pusha
sub
cvtps2pd
and
mov
xchg
mov
int
into
imul
dec
fists
mov
xchg
ret
movsl
dec
pop
adc
aas
dec
jmp
and
and
movsb
xchg
int3
and
cmpsl
jg
pushf
je
inc
dec
sbb
repnz
sbb
daa
in
ror
addr16
aaa
scas
ret
lock
mov
movlps
ret
cli
ret
jae
dec
cmp
dec
xorl
inc
push
pop
ds
xor
or
addr16
test
out
fs
cs
cmpsb
jb
mov
std
ja
loopne
lds
cmpsb
pop
mov
jmp
mov
int
xlat
pop
enter
scas
rolb
cmp
push
mov
cmp
fsubs
add
dec
mov
mov
data16
fs
pusha
xlat
sbb
pushf
cmc
movsl
testl
std
inc
aam
dec
lret
sbb
mov
dec
push
fwait
mov
test
xchg
outsl
push
or
push
sbb
xor
es
les
sahf
dec
les
push
ret
cltd
pop
push
aas
xchg
pop
inc
mov
clc
cmp
jbe
out
cmp
in
mov
or
inc
cs
mov
scas
cmp
repnz
int3
jle
ss
adc
test
lcall
clc
mov
pusha
and
jmp
iret
inc
je
out
into
fnstcw
insb
sbb
leave
xor
inc
outsb
pop
fsubrl
xor
and
jb
mov
iret
je
xchg
cmc
sub
shl
cmpl
and
push
cmp
and
dec
jno
xchg
jns
xchg
adc
dec
xchg
loopne
test
add
pushf
cmc
mov
mov
outsb
fildll
incb
insl
bound
adc
lods
inc
outsb
xor
pop
push
mov
or
adc
imul
cmpsl
xchg
loop
lds
mov
mov
imul
das
jns
jge
sbb
hlt
push
stc
and
data16
inc
jae
xchg
fimull
dec
ret
pop
std
pop
cmp
ja
push
inc
jge
flds
mov
lcall
call
ds
call
faddp
push
jle
xchg
movsb
mov
das
xchg
mov
xor
ja
sbb
pop
roll
xor
popa
inc
jp
inc
push
dec
mov
mov
bound
cmp
leave
pusha
sub
pushf
xchg
jle
pop
push
mov
scas
jp
cmp
adc
fs
sbb
ret
enter
jnp
jne
aaa
inc
pop
jmp
xchg
sarl
sti
sub
sub
hlt
mov
mov
add
cmpsb
out
mov
adc
lods
adc
imul
cmc
fcmove
xor
inc
dec
in
xor
loope
cs
fstp
add
stc
pop
sbb
inc
jns
sub
cltd
cmpsb
stos
cmp
mov
pop
cmp
ret
cmc
addl
pop
scas
movsl
dec
jo
fldcw
aam
fs
in
xor
mov
pop
xor
in
pop
add
and
clc
and
xchg
ss
std
cwtl
seta
mov
mov
fwait
xchg
rcl
xchg
fcmovbe
adcl
addb
sbb
adcl
das
or
dec
in
xchg
add
push
mov
push
insl
mov
in
mov
sbb
fildll
ss
mov
ljmp
int3
cltd
or
jo
shl
mov
les
sbb
fcompl
repz
aaa
xor
cmovp
xchg
or
jp
cmpsb
adcb
xchg
jge
sub
inc
sbb
popf
push
add
push
js
mov
fwait
ror
cmpsl
int3
add
cmp
imul
int
mov
jno
mov
imul
mov
mov
sub
pop
enter
jns
fldln2
arpl
mov
mov
inc
iret
mov
sbb
les
sahf
lea
jbe
mov
pop
insl
sub
jmp
cmp
cmp
aas
push
idivb
xor
fwait
mov
dec
push
fcomps
imul
or
sbb
lds
arpl
pop
inc
or
fadd
dec
sub
ds
adc
xchg
jb
dec
sbb
xchg
cmp
add
nop
mov
push
xlat
mov
int3
dec
cmp
cmp
subl
ljmp
inc
test
jb
push
lock
ja
jmp
rorl
hlt
in
ret
test
jbe
sti
int3
push
cwtl
in
dec
inc
ja
sbb
dec
mov
dec
and
mov
adc
adcb
jg
stos
push
xchg
enter
push
xchg
jb
sub
sub
hlt
mov
pop
mov
rcll
sub
imul
int
xor
dec
imul
push
lock
add
pop
xchg
push
dec
cmpsb
mov
or
xor
pop
imul
mov
jae
jge
pop
aam
sub
pop
or
repz
sub
push
aas
dec
adc
lods
sbb
pop
jbe
jnp
cvtps2pd
adcb
out
shrl
jg
ficoms
sbb
andl
pop
mov
xor
xor
and
int
subl
nop
addr16
iret
jge
icebp
mov
adc
mov
pop
push
push
cli
add
imul
xchg
daa
das
mov
inc
and
push
into
cmpsl
mov
jae
daa
daa
lahf
sti
cmp
vxorps
pop
push
mov
xlat
sahf
inc
jo
xchg
mov
push
and
push
cmp
sbb
push
ret
cmp
fldl
fs
cmpsl
jne
xorl
sub
std
push
imul
loope
inc
ret
ljmp
mov
scas
jns
je
gs
fwait
push
cmp
push
aad
mov
jl
jo
add
mov
das
jnp
aas
stos
inc
add
xchg
cwtl
cmp
fldl
inc
ficoml
mov
sub
test
inc
sarl
loope
jmp
insl
sarl
dec
lods
push
fldt
mov
aas
enter
jae
lahf
xlat
mov
push
clc
pop
ss
mov
mov
daa
push
jp
out
hlt
stos
sbb
out
pop
pop
mov
or
inc
inc
sbb
mov
jnp
adc
jecxz
or
dec
or
in
sbb
popf
cmp
adc
jno
cli
sbb
xor
add
mov
add
sar
inc
adc
and
dec
mov
aam
es
xor
dec
test
or
push
jg
lds
add
add
int
adc
push
inc
jno
dec
int
pop
add
pminub
push
loop
mov
mov
adc
repnz
psubusb
lret
adc
adc
test
sub
cs
xor
mov
push
add
mov
sahf
or
xchg
sti
push
fisubs
in
jo
sbbl
jns
inc
popa
sbb
inc
out
ds
pushf
mov
lods
test
xor
mov
loop
mov
rclb
lahf
es
mov
nop
xor
fsts
loopne
add
jge
loopne
sbb
sbb
lods
rcl
sbb
out
pop
xlat
mov
xor
push
mov
fimull
mov
pop
mov
mov
jno
cmc
xchg
outsb
jns
lods
adc
iret
idivl
pop
pusha
push
call
lret
push
sti
jb
ret
sbb
xbegin
jmp
bnd
jno
or
addr16
ds
addr16
mov
push
inc
outsb
arpl
insb
or
rcr
xchg
fstpl
pop
lock
cmc
inc
dec
push
xchg
das
inc
xchg
cmp
sbb
enter
je
cmpsl
in
lea
mov
addr16
lahf
ljmp
out
mov
pop
xchg
xchg
hlt
dec
jle
call
shll
pop
outsl
fstpt
mov
lea
push
mov
emms
adc
repz
jb
cltd
or
outsb
xor
push
cmp
out
test
cli
push
inc
xorb
aaa
xchg
jmp
out
push
sbb
in
dec
nop
mov
nop
mov
sbb
xor
call
cmp
dec
data16
and
test
popa
push
pop
push
mov
adc
lret
inc
add
sub
cmpsl
stos
and
aad
jo
cmpsb
mov
or
push
pop
sub
cs
stos
sub
lret
mov
repz
pop
js
int
icebp
mov
mov
fbstp
je
pop
fidivl
aad
outsl
fildll
cmp
scas
inc
lds
mov
inc
mov
sub
sub
xchg
shll
pushf
dec
sub
add
dec
outsb
repnz
sar
int
cmp
jnp
add
dec
and
jp
sbb
mov
sbb
int3
sarl
jp
push
arpl
imul
jg
iret
lea
fmuls
sbb
jno
movsb
imul
loope
mov
ljmp
fsts
mov
out
int
xchg
or
fldl
js
dec
cmp
sahf
inc
pusha
call
push
int
push
jmp
inc
or
dec
into
ret
xchg
orb
mov
cmc
or
add
add
mov
dec
ljmp
dec
aas
imul
insb
mov
js
and
insb
or
mov
pop
pop
push
test
jne
and
jmp
ds
dec
enter
iret
add
pop
mov
test
push
fsub
inc
cwtl
pushf
xchg
mov
fs
push
int
loop
loope
pop
or
orl
loop
sbb
cs
insb
lds
pop
pop
cwtl
scas
icebp
mov
add
dec
mov
push
xchg
pop
je
aam
sbb
push
mov
ret
loope
shr
aaa
or
lock
sbb
ja
xor
push
or
push
dec
add
jl
outsl
pop
mov
shlb
sbb
fadds
incb
mov
xchg
jns
fs
sbb
push
cmp
sbb
nop
adc
adcl
xchg
cld
ljmp
popf
mov
push
push
sub
adc
gs
jmp
dec
cmc
outsb
ret
xchg
xor
jmp
out
std
gs
mov
sbbb
adc
cld
xchg
mov
das
pop
cmc
subl
test
or
mov
lahf
sub
pop
xlat
pop
inc
xchg
dec
pusha
cmp
arpl
pusha
cs
or
push
add
insb
inc
xchg
in
nop
jmp
cmp
fisubl
pop
jg
jp
cwtl
lods
jp
orb
insl
mov
jne
imul
xor
mov
je
shll
hlt
push
rcll
test
jbe
mov
arpl
out
dec
jp
shrl
mov
pop
xlat
jns
push
icebp
in
jnp
aaa
inc
and
or
inc
xchg
out
loop
int
fwait
xchg
dec
add
imul
jmp
push
bound
mov
movsl
add
push
xchg
cmp
xchg
test
mov
add
pop
pop
daa
es
leave
or
lods
dec
xor
sti
xor
adc
add
cli
mov
in
clc
sbb
inc
outsl
cmp
jne
cmp
das
lea
loope
ss
gs
pushf
cmp
push
sub
cmpsl
or
xchg
cmp
xchg
cmp
lcall
lret
mov
iret
mov
xchg
popf
dec
test
repnz
inc
sub
sub
fidivrl
mov
fstps
inc
xchg
imul
sti
push
sbb
cwtl
cmp
jmp
out
cld
cmpsl
push
cmp
xor
pop
loop
jmp
mov
mov
pop
fdivrs
mov
xchg
lahf
loopne
mov
mov
out
fwait
mov
movsb
add
dec
pusha
jle
dec
mov
aaa
push
dec
into
ja
cs
rol
xchg
rcrl
push
scas
mov
pop
cmp
cli
test
fdivs
adc
ja
or
mov
stos
lcall
gs
or
and
mov
mov
sbb
mov
inc
cmp
jnp
push
or
ja
insl
cmp
push
cs
jmp
push
shll
sub
pushf
dec
int
cld
mov
mov
add
fucomp
xchg
push
push
or
mov
cmp
std
faddl
aad
adc
cmp
dec
pushf
xchg
cmp
mov
lret
pushf
jecxz
fs
fs
mov
and
mov
xor
loope
pop
mov
cmpsb
xchg
and
fwait
xchg
sar
cmovne
cmp
nop
sub
mov
fwait
out
sub
fst
stos
mov
lret
test
outsl
cmp
std
imul
nop
pop
lea
inc
popf
nop
gs
lret
add
movsl
test
sub
out
aaa
out
sub
adc
data16
leave
cmp
mov
jb
xchg
test
sbb
xor
fildl
sti
cmpsl
pop
shlb
push
mov
jae,pt
xchg
mov
cmpsb
push
orb
test
xchg
es
mov
mov
insl
aas
sahf
pop
testl
cmp
repnz
lret
mov
cli
xor
push
ret
xchg
push
pop
movsl
push
sbb
std
dec
jns
mov
ret
pop
add
cmpsb
jb
cli
pop
shlb
out
sbb
cmp
pushf
int
push
jge
xchg
sub
mov
xchg
stc
push
mov
imul
push
ss
push
pop
pusha
mov
fsubs
sar
fdivrl
sub
push
xchg
dec
shlb
test
arpl
hlt
add
stos
mov
cmp
xor
push
mov
xchg
mov
jae
and
stos
mov
cltd
ja
out
xchg
icebp
out
out
or
movsl
and
inc
adc
xor
icebp
jg
repnz
jle
pop
ret
es
mov
sbb
xchg
call
sti
jne
xor
js
adc
sbb
mov
test
or
cmp
sub
and
push
sbb
mov
fcmovu
or
rolb
loop
mov
out
std
sbb
out
sbb
mov
outsb
and
adc
and
mov
lock
push
test
in
lock
bound
movb
gs
test
add
cmp
sbb
adc
xchg
xchg
cld
lods
lahf
mov
cmp
clc
add
lea
or
cmp
push
jg
cltd
mov
rep
add
xchg
add
or
aam
je
xor
cmc
mov
push
xchg
cmc
push
xchg
repz
or
mov
test
mov
enter
daa
cmp
fwait
stos
idivl
adc
pop
in
ds
push
repz
or
mov
daa
into
add
imul
xchg
in
scas
aam
popf
lea
dec
rolb
hlt
push
call
sub
pop
add
addr16
out
aad
sub
fcmovbe
pop
mov
dec
jg
add
shlb
xchg
scas
mulb
test
insl
in
popf
pop
sbb
mov
scas
test
push
mov
rcrl
aad
imul
fucomi
decb
in
sbb
push
filds
pop
neg
loopne
mov
push
mov
in
ficompl
or
loopne
stc
iret
xchg
sbb
ljmp
inc
pop
dec
sub
xchg
xchg
shll
push
sub
fisubl
add
sub
mov
shll
sub
push
fldenv
sbb
push
sub
loope
mov
xor
sarb
cs
dec
pop
loopne
xchg
mov
jne
jmp
mov
out
shrl
mov
pushf
dec
das
in
lods
les
push
movsl
dec
in
jb
mov
pop
pop
cli
pop
and
inc
loopne
xchg
mov
clc
cs
add
js
imul
fisubl
inc
jecxz
nop
sub
test
inc
cmpsb
je
cs
push
xchg
sbb
mov
enter
fistl
mull
xchg
sarb
lods
jge
mov
cmp
push
sbb
daa
mov
mov
mov
jbe
ss
push
or
xchg
and
adc
js
and
xchg
into
notl
sub
jl
test
mov
cmp
cmp
jg
ljmp
outsb
pusha
sbb
leave
sbb
or
sbb
int
or
xchg
enter
xchg
sub
cmpb
jo
mov
push
add
int3
repz
adc
jp
icebp
rorl
pop
jmp
or
and
je
outsl
or
sti
cmp
sub
or
pop
jmp
shrb
out
xchg
xor
int
sub
lock
aam
sbbl
or
mov
pop
push
mov
mov
mul
fiadds
sub
sub
sti
dec
fucomp
mov
xor
pop
add
fcoms
repz
sbbl
cmpsl
ret
sub
inc
cmp
bound
sbbb
sub
fcmove
mov
ja
stos
fdivp
lahf
xchg
imul
mov
mov
pop
adc
sbb
push
push
cld
outsb
push
dec
xchg
fistps
ljmp
pushf
add
sbb
stos
imulb
sbb
lods
insl
jmp
mov
aas
add
jo
insl
push
xor
sub
shrb
lods
sub
mov
dec
shlb
dec
dec
and
xor
sub
xchg
ja
mov
sub
insb
out
aad
push
pusha
cmpsb
mov
orl
insl
lcall
bound
push
lcall
cmpsb
bnd
mov
ljmp
inc
cld
cwtl
jns
mov
dec
fisubl
mov
sbb
add
lds
movsb
mov
pop
cmp
jle
stc
clc
lret
sbb
mov
mov
cmc
testl
mov
cwtl
dec
fimull
inc
ficomps
fildl
notl
fsubp
inc
push
subb
decl
sub
cmpl
mov
lcall
flds
mov
loope
add
shll
jnp
mov
popf
push
mov
push
lahf
xorl
out
xor
adcb
test
xor
xchg
out
or
mov
add
pop
adc
cmp
and
clc
mov
mov
push
cmp
aam
cmp
dec
pop
sbb
cmp
pushf
or
ror
stos
cmc
mov
mov
and
pop
aaa
sub
js
scas
jns
hlt
adc
xchg
mov
and
test
cmp
rcll
sub
push
push
imul
or
pop
mov
repz
es
mov
dec
xchg
roll
jl
cmp
xor
setns
mov
sbb
mov
dec
cmpb
ss
jns
or
inc
fsts
cmp
rcl
add
add
popl
enter
push
cmpl
fs
xchg
rolb
jnp
mov
inc
mov
into
mov
push
loopne
add
mov
hlt
xor
push
cmp
push
jg
sbb
xchg
fdivs
rorb
jo
xchg
loopne
repnz
xchg
dec
xchg
addr16
xchg
xchg
negl
xchg
fcompl
mov
or
inc
pop
divl
push
decl
das
cmp
das
sub
add
push
fidivl
cld
mov
or
lahf
xchg
sbb
pop
mov
xor
or
icebp
sub
jne
je
mov
subb
xchg
mov
or
cmp
in
mov
and
imulb
cmp
cmp
out
bound
ja
stos
pop
outsb
cmc
pop
inc
cli
mov
mov
pop
cmc
mov
loope
gs
cmpsb
shll
mov
push
test
jmp
fldt
icebp
pop
jns
in
iret
test
or
in
push
inc
push
sub
pusha
jbe
adc
inc
pop
in
adc
insl
sbb
or
jmp
mov
addr16
xchg
xchg
inc
inc
pop
movsl
add
adc
jo
enter
iret
push
lea
pop
sbb
setns
fisubs
dec
lret
mov
mov
shrl
pop
add
xchg
stos
cmc
pop
lods
sarb
lds
je
adc
mov
mov
xchg
push
hlt
shl
daa
push
shl
or
outsl
out
in
sarb
call
mov
enter
push
and
out
std
ficompl
or
fs
mov
aas
es
stos
pushf
lcall
adc
sbb
push
mov
fstpt
sahf
pop
pop
pusha
jns
outsl
and
and
xchg
inc
and
mov
fs
pop
enter
iret
fistps
fs
push
xor
insl
cmc
test
adc
pop
lret
cmp
xor
or
adc
out
iret
lret
test
sbb
add
rcl
inc
in
and
xor
inc
mov
pop
xchg
test
inc
adc
pop
push
xchg
and
dec
frstpm(287
mov
cmpsb
sbb
aam
push
dec
insb
jbe
mov
jns
mov
loop
mov
push
nop
out
insb
add
loope
fistps
cmc
aad
sbb
mov
daa
add
adc
adc
add
cmp
nop
adc
repnz
stos
and
or
cmpb
pop
in
shlb
xchg
add
cmp
xor
popa
pop
mov
fwait
mov
push
fiadds
cmp
mov
std
mov
outsb
mov
es
push
push
cmp
push
sub
or
jp
iret
push
jns
sarb
popf
cs
cltd
mov
cltd
aaa
xor
fisttps
jo
out
dec
mov
mov
addr16
add
or
pop
push
push
jb
imul
fdivrl
je
loope
inc
outsl
and
loopne
popa
cs
jle
jmp
mov
mov
call
mov
and
xor
nop
popa
insl
sub
negl
mov
aas
xchg
jecxz
lea
xchg
das
cmp
inc
out
js
push
xchg
xchg
jle
push
xor
jae
push
mov
or
xor
mov
sti
in
jmp
cmp
xchg
pop
sbb
mov
lret
sub
fwait
jno
cmp
inc
inc
sbb
fcomps
xlat
xor
xor
xchg
pop
loopne
sbb
lret
loopne
dec
bound
fidivs
mov
mov
pop
jmp
cmpw
mov
inc
enter
or
xorb
ficomps
jo
cltd
div
popf
or
mov
les
out
in
xchg
mov
xchg
pop
rorb
in
xor
pmulhw
nop
int
add
in
in
add
jg
addr16
sbb
xchg
sub
out
push
adc
cld
sub
push
jb
dec
cld
pushfw
mov
int
mov
pop
push
scas
out
lret
icebp
std
mov
push
push
mov
mov
cmp
push
xchg
adc
inc
and
fwait
repz
mov
stos
sbb
enter
xor
cmpsb
push
inc
sbb
int3
push
or
push
pop
mov
xchg
test
dec
in
pop
mov
lock
mov
lcall
cli
roll
dec
add
cmc
scas
lret
xlat
push
pop
sbb
out
inc
jae
inc
push
jp
cmpsl
sub
aam
pop
mov
mov
xchg
shr
mov
mov
gs
jmp
fcompp
fmuls
dec
movsl
and
mov
jp
and
jnp
sbb
popa
jge
shl
pop
gs
cltd
push
push
and
stos
push
int
popf
mov
loopne
dec
inc
lret
or
xchg
scas
push
jmp
iret
divl
sub
xchg
xor
xchg
or
daa
ja
lds
adc
mov
int3
test
inc
lock
or
mov
push
pop
lods
call
sub
push
dec
jno
cmpsb
pop
jle
lods
mov
test
inc
mov
sbb
pop
roll
xchg
inc
adc
dec
xchg
gs
ds
or
cmc
sbb
inc
adc
cmpsb
fnstenv
push
jbe
dec
xchg
inc
sar
xlat
rorl
pop
mov
jnp
addl
es
test
add
stos
sbb
jg
fnstcw
andl
pop
pop
int
jno
jg
test
xchg
sub
dec
xor
xor
adc
stos
fucom
cmp
mov
push
push
in
push
pop
jge
sbb
sub
mov
pop
pop
gs
pop
popf
and
dec
inc
pop
and
jmp
fld
fisubrl
cmp
mov
sbb
jb
mov
in
shlb
lds
daa
add
fcoms
out
std
mov
cld
dec
and
movsb
mov
adc
addb
cmp
ficoms
mov
adc
pop
stos
adc
mov
insb
xchg
fsubrl
xor
add
ret
xor
mov
inc
cmc
push
dec
adc
ljmp
jns
push
pop
sahf
jle
pusha
sbb
loop
lcall
pop
xchg
stos
incl
mov
jno
add
jne
pop
idivl
sbb
call
fstl
inc
sbb
and
inc
je
jns
test
stc
jecxz
adc
dec
or
xor
xchg
nop
mov
jae
add
jle
pop
lock
mov
ret
xchg
adc
push
neg
jle
aam
pop
cmp
mov
aam
shlb
push
adcl
dec
xor
xor
sub
lods
or
push
stos
sbb
nop
icebp
mov
mov
xchg
mov
repnz
pop
lcall
jmp
mov
fdivp
mov
adc
jmp
or
push
or
inc
push
xchg
pop
add
rcrl
cmc
push
inc
and
outsb
and
test
stc
iret
sahf
inc
test
test
sbb
push
je
mov
or
jp
mov
add
clc
shll
or
aad
fsubs
mov
push
bound
jbe
sahf
pop
pop
xchg
adc
mov
lcall
lcall
fnsave
mov
xchg
repnz
adc
pop
fldl
fucom
jle
lret
jne
jbe
sarb
mov
mov
or
sub
repnz
and
fsub
scas
in
cmc
or
hlt
fcom
clc
add
ror
cmp
hlt
les
and
cmpsb
mov
leave
aas
push
js
testb
in
mov
jae
cwtl
dec
mov
out
add
clc
shll
xor
xor
adc
xor
inc
jecxz
mov
or
sarb
pop
fwait
loopne
pop
push
xchg
in
dec
iret
ljmp
ja
push
sbb
and
lods
or
sbb
xchg
adc
jne
push
cmpb
fucomp
js
xor
je
mov
xchg
jge
mov
sub
stos
shl
mov
aaa
sbb
mov
sub
leave
es
jns
xor
pop
repnz
cltd
in
or
fiaddl
xor
loop
in
pusha
aam
or
icebp
aaa
push
mov
cs
addr16
cli
addr16
test
je
jg
out
popaw
cmp
aas
mov
scas
jne
mov
ficoms
jecxz
mov
mov
mov
add
scas
inc
cltd
cmc
jo
dec
nop
lods
xchg
jmp
mov
popa
inc
jp
imul
mov
jnp
cmp
lret
lea
arpl
jo
popf
in
popa
sbb
outsb
lods
cltd
adc
sub
or
lods
sbb
cmp
xor
es
jnp
pop
xchg
jmp
lock
pusha
jmp
in
adc
pusha
jl
std
fisubrs
mov
or
outsb
adc
push
out
bound
push
jg
pop
mov
or
sbb
xor
aaa
int
test
xor
cmp
sbb
or
movsl
mov
aas
inc
or
sbb
and
inc
xlat
mov
cs
in
mov
leave
sti
or
lea
aaa
enter
lock
popf
mov
sbb
roll
out
cmp
iret
mov
push
ljmp
lods
loope
and
mov
lods
pop
push
iret
outsb
mov
mov
test
sbb
dec
inc
xor
xchg
xchg
jp
test
or
xchg
repnz
icebp
stos
loope
decb
imul
sub
loope
fs
xor
and
mov
sub
push
add
xchg
ja
mov
stos
lret
in
pop
das
sbb
and
push
in
inc
push
ret
adc
or
fiaddl
dec
stc
dec
sub
stos
test
mov
and
sbb
ja
or
sub
test
popf
xor
dec
out
push
stc
mov
into
dec
mov
idivb
test
sub
or
adc
and
fstpt
or
xor
xchg
cwtl
jnp,pt
movsb
push
fcoms
sbb
sbb
or
mov
push
or
data16
pop
cmp
std
enter
and
dec
mov
push
outsb
jb
aad
insl
orl
inc
mov
xchg
test
mov
dec
jl
fadds
add
sbb
jp
xor
inc
jmp
sub
dec
mov
dec
imul
sahf
popf
pop
rclb
iret
loope
push
test
or
lret
mov
sbb
cld
mov
outsl
sub
sbb
mov
mov
mov
sbb
shll
out
in
and
arpl
inc
jp
clc
inc
jg
pop
test
inc
cs
adc
mov
jae
aas
jp
rclb
loopne
loope
push
sub
fsubp
jge
mov
lcall
fwait
push
sbbl
adc
sahf
push
pop
idivb
inc
pop
push
jmp
mov
fiaddl
stos
div
adc
xor
lahf
push
call
push
out
bound
test
add
xor
into
loope
sarb
add
mov
cwtl
movsl
mov
push
outsb
mov
sub
scas
cmp
arpl
cmpsl
xor
xor
pop
rcll
sbb
dec
rcrl
jb
outsb
lds
sub
xchg
stos
je
hlt
mov
out
sbb
add
sahf
rep
cmp
mov
push
sbb
xor
sbb
or
mov
or
jb
jg
xchg
outsl
xor
xchg
les
std
or
adc
inc
mov
sub
and
pop
cld
fstpt
jle
jno
jb
fldenv
aaa
outsl
notb
inc
pop
mov
and
sub
xor
xchg
sub
inc
mov
out
shrb
adc
lcall
fildl
xchg
mov
outsl
ret
push
ret
inc
push
mov
jb
cmp
pop
addr16
mov
add
inc
scas
mov
dec
jns
inc
xor
mov
hlt
pop
push
cmp
cmc
int
dec
subl
xchg
in
fnsave
outsl
jne
enter
inc
mov
push
push
mov
mov
cmp
sbb
cli
imul
jne
jge
mov
andl
pop
leave
mov
jle
add
test
add
xor
xorb
popa
jecxz
popf
push
add
cmc
imul
lcall
pop
mov
and
jo
pop
add
jbe
xchg
movsl
sbb
mov
mov
or
jno
insb
xor
stos
pop
jmp
js
shrl
pop
pusha
fidivs
enter
dec
clc
out
mov
js
add
outsl
mov
mov
mov
test
data16
inc
mov
outsb
mov
inc
mov
ror
mov
xchg
ficoms
jmp
lahf
into
jg
ret
mov
mov
fs
mov
pop
add
test
sarl
push
pop
loop
adc
dec
ret
lret
bound
iret
sbb
mov
jmp
push
das
add
inc
cmpsb
gs
ljmp
js
xor
into
cmp
pop
jecxz
shlb
rorb
repnz
fwait
sbb
xchg
dec
add
pop
addl
push
sbbb
push
xchg
cwtl
xor
push
pop
pushf
inc
add
inc
add
mov
std
imul
pushf
and
xchg
pop
push
mov
mov
jecxz
mov
fildl
xlat
jmp
out
add
or
cmpsl
inc
mov
pop
jne
fsubp
lds
imulb
push
and
pop
mov
or
adc
jnp
addr16
mov
andb
mov
sbb
cmpsb
add
insl
sbb
testl
decl
xor
inc
rcl
arpl
test
movsl
lods
fcomps
jmp
incb
into
dec
fbld
pushf
into
push
dec
pop
repnz
ds
nop
iret
loope
cmp
pop
and
sti
sub
scas
call
jno
jg
mov
push
xchg
push
movsb
pop
mov
jns
cltd
cmp
sbb
arpl
addr16
ds
test
and
dec
iret
ds
int
cmp
jbe
xchg
mov
into
icebp
sti
nop
andb
inc
dec
nop
add
push
xchg
test
stos
jecxz
mov
adc
push
xchg
xchg
jne
and
cmc
scas
inc
push
das
fcom
stos
je
hlt
std
fisubrs
in
push
add
push
push
jns
icebp
xchg
pop
int
roll
dec
test
pop
daa
add
dec
jb
pushf
into
cli
jbe
insb
aaa
jecxz
and
mov
jae
lods
xchg
fwait
jl
aaa
mov
sub
int
push
test
push
push
setb
aad
in
aam
stc
cmpsl
icebp
inc
cmp
repz
push
imul
fwait
movb
cmp
ljmp
das
xchg
sub
in
ss
push
mov
adc
inc
mov
and
mov
cmp
cmp
nop
lods
imul
arpl
loopne
mov
js
es
jbe
jge
mov
inc
ds
xchg
subl
dec
imul
and
add
mov
fnstsw
and
ret
pushf
adc
cmp
adc
push
stos
sbb
in
loopne
cmp
push
pop
push
shrl
adc
mov
pushf
and
inc
movsb
cmp
data16
cmp
or
clc
or
inc
cs
pop
inc
pop
lret
xor
scas
and
in
cmpb
add
hlt
pop
icebp
pusha
xchg
and
xor
sbb
xchg
mov
js
scas
cmp
cmpsl
push
sbb
in
xchg
inc
jmp
adc
pop
outsl
push
leave
mov
lret
add
sbb
cld
xor
pop
lea
mov
xchg
nop
fnstenv
movsb
sahf
xchg
xchg
imul
add
arpl
aaa
cmpsl
xchg
mov
repnz
mov
pop
icebp
mov
loopne
test
pop
xchg
clc
iret
push
dec
scas
sbb
adc
shlb
cs
shlb
mov
jae
adc
repnz
xchg
mov
cmp
into
mov
je
divb
aas
setbe
dec
mov
mov
out
cmp
dec
dec
mov
push
fs
neg
cli
mov
xchg
ja
xor
es
mov
shll
movsl
mov
js
push
mov
scas
cmp
pop
jecxz
or
mov
loope
push
xor
test
and
dec
xchg
cwtl
pop
xor
xchg
jnp
scas
mov
iret
aam
push
and
add
pop
enter
ret
mov
stc
add
aad
pmovmskb
xor
mov
push
ljmp
test
leave
movups
stos
push
cmp
push
mov
dec
inc
jbe
xor
ss
outsb
jnp
cwtl
adc
xchg
inc
mov
mov
lock
pop
and
cmpsl
xlat
add
adcl
push
lea
push
xor
and
stos
jbe
dec
inc
xor
or
icebp
add
xchg
lahf
pop
ss
mov
jb
cmp
xchg
xchg
adc
push
mov
mov
mov
data16
lret
fxch
adc
mov
outsb
je
aaa
pop
or
add
sbb
out
mov
stc
pop
or
pop
add
testl
aaa
int3
or
lds
push
xor
sub
cmpsb
cmp
pop
fmul
sub
fwait
into
xchg
cmp
rcr
gs
je
push
jmp
cmp
pop
mov
jae
fnstenv
adc
pop
mov
leave
shufps
sbb
and
jmp
lods
sub
fidivl
call
jle
adc
add
dec
pop
fsubs
ss
lret
repz
iret
lahf
hlt
shlb
shl
mov
movsb
shlb
lcall
sbb
mov
mov
xchg
xor
rorl
cmpsb
xchg
mov
push
jo
pop
cli
mov
mov
cmp
stc
in
pinsrw
leave
dec
icebp
fisubl
ja
or
es
jl
push
xlat
cwtl
leave
xchg
push
mov
jae
repz
insb
or
loop
or
or
or
push
loope
and
in
add
adc
daa
cmp
and
add
out
sbb
mov
cmp
mov
jo
cld
push
mov
jne
inc
sti
imul
cmp
mov
sahf
add
push
and
adc
enter
xchg
lcall
push
push
lods
ret
rclb
xchg
iret
cli
jne
fs
jecxz
loop
mov
inc
sub
jno
mov
mov
mul
mov
xchg
cmc
in
mov
xor
mov
pop
in
pop
rclb
add
stc
push
xor
push
iret
test
xchg
outsb
gs
adc
pusha
addl
cmp
test
push
push
mov
push
or
dec
sbb
cs
and
push
mov
test
mov
fdivs
add
daa
jnp
imul
inc
jg
cmp
sub
jns
fdivl
or
lods
icebp
and
nop
negl
pop
cmpsb
cmp
idiv
jmp
lock
hlt
movnti
mov
xor
addr16
cmp
mov
loopne
mov
push
sub
add
es
push
lock
sub
xor
test
fimuls
pop
test
ja
add
data16
arpl
mov
into
or
out
pop
xchg
pop
sahf
cmpsl
and
cmp
lea
or
ret
sahf
xor
or
mov
mov
and
pop
imul
push
dec
jo
cmc
push
movsl
sbb
and
iret
loopne
add
lret
push
imul
stos
daa
ds
call
insl
inc
je
into
push
push
sbb
insl
fnstenv
fiadds
adc
mov
jne
loopne
add
xor
test
test
sbb
xor
ja
jnp
pop
fs
sahf
dec
sub
inc
and
mov
ljmp
pop
int3
push
xchg
mov
add
das
daa
stos
pop
test
lret
dec
cli
add
scas
mov
jbe
sahf
test
xor
faddl
data16
mov
seta
xchg
push
xchg
out
cmpl
loope
xor
sbb
inc
movsl
and
arpl
adc
ljmp
not
adc
xor
std
cmc
test
lcall
sbb
cmp
jge
test
jb
xchg
aam
dec
or
or
inc
ficompl
dec
test
test
add
pop
adc
add
lahf
push
jo
inc
stos
into
loopne
jb
test
fs
stc
test
adc
aad
movsl
adc
stos
inc
fsts
out
lds
adc
aas
out
inc
in
mov
stc
push
cmp
sub
aad
fisubs
outsl
arpl
aad
in
mov
sub
or
jecxz
adc
jnp
mov
int3
pop
or
imulb
adc
xchg
cmp
test
int
pop
dec
ret
lods
stc
rorl
dec
pop
data16
mov
sub
gs
and
jno
pop
nop
fcom
ss
andl
icebp
out
ss
roll
cmpsb
push
push
push
iret
shll
repnz
push
sbb
dec
mov
js
or
lock
mov
mov
mov
mov
cmpsl
in
pop
add
inc
cmpsl
xchg
lahf
shlb
sarl
add
int3
xchg
mov
jno
xchg
and
lcall
dec
xchg
int3
mov
adc
stos
rolb
jge
cmpsb
xchg
adc
sub
add
bound
push
dec
xor
pop
cmpb
lods
push
rolb
push
push
jmp
mov
lds
and
jnp
repnz
xchg
mov
notl
neg
jp
jl
xchg
sub
pop
sub
mov
mov
and
loopne
xchg
ret
js
popa
dec
ljmp
aam
adc
push
fistpl
cld
push
les
push
arpl
popa
fiadds
fists
sbb
mov
mov
mov
push
mov
mov
mov
ljmp
mov
ss
xor
push
fmuls
fiaddl
push
fnsave
adc
daa
xchg
fdivrl
cmp
mov
adc
stos
ss
xchg
and
push
nop
insb
mov
mov
xor
test
call
shll
cwtl
sbb
pop
lds
test
pop
add
imul
cmp
jg
popa
movb
dec
and
popl
pop
mov
int
sbb
loopne
and
sbb
cmc
leave
insl
dec
adc
and
jp
add
jno
adc
iret
lret
sbb
mov
pop
inc
push
push
add
loope
stos
setge
mov
mov
cwtl
jmp
cmp
in
cmp
jecxz
dec
mov
lea
jle
mov
fldl
aas
dec
push
jmp
dec
pop
sub
mov
and
arpl
pop
cmp
in
fstpt
sbb
push
call
orl
mov
std
outsl
jns
subl
jecxz
mov
test
xor
shrl
sub
mov
pusha
fisubrs
mov
lret
lahf
fucomip
fldt
mov
xor
daa
ror
push
lock
pop
notb
mov
mov
pop
push
xor
jbe
andb
pop
jb
mov
push
xor
popf
add
fdivs
sahf
psrlq
lea
xor
enter
cli
pop
xchg
or
sarl
mov
or
sbbl
in
hlt
sbb
iret
xor
mov
hlt
xacquire
sub
into
imul
xchg
dec
xor
mov
push
data16
pop
test
in
xor
outsl
shll
push
cmp
in
ss
into
lock
ljmp
dec
mov
sbb
jmp
test
jge
dec
fyl2x
or
int
mov
repnz
and
repz
dec
push
movsl
sub
outsb
push
push
lcall
xchg
cmc
int3
push
or
leave
setle
inc
add
xor
popl
into
bound
and
adc
push
jecxz
adc
mov
ret
cmp
xor
inc
xor
mov
lods
add
add
lds
lods
or
stos
push
add
cli
in
sahf
icebp
dec
imul
loope
inc
inc
sub
mov
in
into
jecxz
or
pop
or
outsb
xchg
inc
inc
mov
or
movsb
int3
shl
movsl
pop
ret
lea
lcall
fcmovbe
nop
scas
mov
or
inc
rcrb
arpl
push
or
iret
js
dec
sbb
dec
test
ljmp
cmp
bound
sbb
dec
imul
xchg
mov
pop
xor
mov
insl
sbb
pop
call
and
jno
dec
and
cltd
pop
fmul
pop
or
push
add
inc
push
mov
push
cwtl
inc
adc
outsb
fcoml
mov
mov
inc
cli
xor
in
movsl
movl
cmpb
out
xchg
mov
cmpsl
pop
jecxz
dec
mov
push
jmp
or
jo
arpl
in
sbb
mov
pop
sar
fstl
cmp
push
nop
mov
aaa
mov
push
xor
jecxz
ljmp
adc
scas
dec
jo
and
fcmovnb
ja
cltd
test
cmp
fs
pop
pop
arpl
mov
fprem
pop
repz
imul
pop
adcl
stos
sbb
mov
ss
push
popf
movsl
scas
fs
loopne
movsb
jmp
mov
inc
push
jl
push
leave
mov
push
push
inc
addb
push
fs
add
aas
pop
sbb
mov
imul
xchg
xor
or
xchg
xor
push
mov
call
imul
or
sarl
pusha
ja
out
loope
dec
jne
pop
mov
test
inc
lock
out
cwtl
stc
xchg
pop
push
loope
jmp
push
lock
xor
stc
into
fwait
push
inc
fcmovbe
cmc
fstpl
xor
push
mov
daa
sub
icebp
jg
pop
sub
popf
js
push
iret
inc
ds
and
das
ret
or
movsb
enter
add
push
sbb
insb
cwtl
xor
test
and
fs
push
sub
decb
mov
ja
and
popa
sub
icebp
inc
imul
xorl
shlb
lret
ds
jmp
addb
pop
xor
push
pop
lock
sbbl
test
xor
push
xlat
adc
mov
loope
push
xchg
fstps
jo
scas
mov
bound
stc
add
add
aaa
push
adc
cmp
and
je
sub
pop
mov
or
rcrb
sub
sub
sahf
mov
add
mov
xchg
divl
inc
aam
jne
lret
push
scas
pop
out
mov
add
test
fisubl
sbb
push
pop
push
test
loope
mov
xor
daa
hlt
push
movsb
pop
out
cmpsl
cmp
mov
popa
sbb
in
push
loope
sub
out
xor
mov
jbe
fnsave
cmp
nop
add
adc
dec
mov
xor
cmp
lock
cmp
xchg
scas
in
push
push
jmp
add
dec
movl
jmp
aad
push
xlat
rorb
nop
leave
adc
fwait
ljmp
sub
mov
xchg
mov
fimuls
cs
lods
adc
jl
jg
jo
adc
rol
push
cmp
mov
std
mov
mov
adc
insb
pop
xchg
cs
divb
add
adc
add
or
cmpsl
xor
push
cli
addr16
cmp
rorb
sbb
inc
incb
sub
jp
movl
mov
fcmovnb
and
out
jg
xor
sub
pop
add
pop
mov
jae
mov
ret
ret
jmp
xor
push
lds
nop
jecxz
mov
out
std
adc
jl
and
ret
sbb
mov
inc
pop
sub
jl
lret
xor
fwait
add
xchg
divl
rorb
fisubrs
sbb
mov
lds
and
addr16
repz
rorb
push
call
cmp
pop
cli
fwait
sbb
mov
mov
cmp
fs
pop
and
repnz
or
int3
out
popa
and
not
mov
adc
adc
icebp
mov
mov
imul
mov
and
leave
and
or
push
lock
rorb
mov
xchg
mov
or
nop
test
sbb
push
hlt
adc
hlt
inc
jns
mov
mov
xchg
sbb
pushf
add
mov
shll
xor
inc
inc
push
mov
daa
outsb
das
jbe
lock
jg
mov
add
sub
cld
pop
hlt
dec
push
or
cmpsl
pushf
cmp
add
ret
dec
lret
jmp
pop
gs
popf
lret
in
push
sub
sub
adc
inc
mov
vpaddsw
pop
xchg
adc
mov
decl
jno
adc
mulb
lea
mov
xchg
in
shrb
dec
out
and
inc
les
sbb
inc
mov
popf
int
addr16
enter
sub
jge
ds
push
sub
movsb
cmp
lea
jecxz
push
inc
in
loop
fs
cmpsb
ret
inc
iret
in
mov
arpl
or
imul
or
or
dec
xchg
or
dec
pop
leave
or
pop
faddl
mov
je
xor
ret
xor
dec
loope
push
push
push
xor
pop
mov
fidivrs
in
pushl
or
mov
or
outsb
movsl
cmc
leave
aad
xor
sti
push
or
add
outsl
pop
divl
dec
pop
scas
pavgw
test
popf
ficoml
adc
adc
in
in
js
add
and
or
js
mov
fwait
bound
mull
ljmp
xor
test
cld
jbe
imul
aam
pop
push
xchg
mov
mov
cmpl
into
frstor
int
mov
ds
jl
jbe
mov
call
dec
imul
inc
mov
jmp
add
test
dec
pop
jle
fistpll
pop
aam
loop
and
adc
cmp
dec
push
jl
popa
sub
sub
jno
pop
faddl
mov
in
cmp
mov
push
pop
les
sbb
push
xor
pop
mov
mov
out
cmp
outsb
fsubr
scas
push
imul
std
out
cmc
cld
xlat
and
jp
lahf
push
jmp
dec
xchg
inc
mov
movsl
xlat
cli
mov
or
jp
and
mov
xchg
sahf
jp
lods
lods
adc
push
inc
pop
pop
bound
mov
jecxz
and
jl
pop
add
pop
aas
xchg
icebp
addl
mov
sbb
sub
test
mov
addl
xchg
fisttpl
xchg
clc
test
or
xor
sub
push
xchg
sbb
rorb
jnp
pushf
ffreep
add
add
jg
aaa
ljmp
push
mov
add
out
cmp
addr16
push
mov
jmp
dec
dec
adc
add
jecxz
ficompl
push
mov
aad
inc
mov
lds
pop
mov
fcompl
pop
mov
repz
sbb
lret
mov
fildl
jmp
mov
dec
push
cmp
xorl
mov
mov
cld
outsl
pop
adc
lods
or
jge
push
adc
das
mov
or
pop
pop
movb
and
mov
jo
mov
div
es
ret
push
loope
cmp
dec
icebp
out
aas
xchg
jecxz
inc
arpl
arpl
scas
push
mul
std
xor
lcall
test
loopne
sub
test
sahf
call
repz
fisubrs
mov
es
test
out
in
mov
add
mov
test
mov
inc
adc
jmp
sbb
jg
imul
mov
jl
outsl
inc
push
subl
dec
mov
fsubr
stos
mov
jno
mov
mov
ficoml
jmp
push
imul
gs
popf
sub
mov
and
mov
out
dec
mov
andb
jecxz
inc
pop
pop
sbb
dec
sti
pop
inc
imul
jg
dec
je
sbb
mov
hlt
outsb
mov
xor
js
outsl
dec
inc
ficoml
mov
and
pop
aaa
dec
lods
or
dec
loope
jmp
ficoms
lahf
movl
fisttpll
inc
lcall
pop
fwait
cli
icebp
mov
jg
and
cwtl
adc
lock
call
cwtl
inc
ss
ss
dec
jle
xor
xchg
gs
pop
fdiv
mov
in
clc
push
and
popf
cmp
mov
addr16
cmp
adc
fmull
or
repnz
je
stos
psrlw
enter
movsb
notl
pop
dec
xor
push
ja
jmp
sub
pop
out
scas
sbb
fwait
jg
xor
flds
add
xor
leave
mov
fcmovnb
push
pop
adc
mov
arpl
ret
mov
mov
movsb
push
cld
cmp
or
lahf
lods
cs
dec
aas
call
sbb
pop
daa
mov
bound
test
xchg
sbb
sub
cwtl
movsl
divl
adc
xchg
xchg
pop
jne
and
fstl
jge
rcrb
pop
push
jne
ret
mov
ret
dec
jl
jmp
enter
add
pop
mov
enter
test
cltd
pop
mov
adc
movsl
jp
jle
xchg
ja
test
or
pop
or
mov
jle
and
fs
stos
pop
mov
aas
bnd
jle
dec
fmuls
inc
push
in
sbb
sbb
bound
push
add
jb
push
mov
inc
lea
ja
add
cmp
inc
loopne
cli
data16
dec
xchg
js
das
in
test
mov
or
mov
adc
mov
test
push
test
nop
data16
popa
pop
sarb
int3
js
test
divl
das
js
notb
sti
movsb
sbb
aam
pop
sub
or
dec
pop
rcr
lcall
fmuls
ret
xchg
out
nop
pusha
xlat
xchg
sarl
jle
inc
jne
lahf
ja
in
or
imulb
ljmp
add
les
mov
push
lret
ljmp
ljmp
orb
pop
push
pop
int
das
push
jmp
stc
lods
jns
add
cmpsl
outsb
add
ret
pop
mov
mov
pop
sbb
stc
in
lahf
fmull
fdiv
mov
mov
out
mov
adc
stos
sti
lahf
xor
in
int3
xchg
mov
loop
dec
sbbb
out
cmp
and
push
arpl
add
mov
add
jecxz
dec
mov
fstl
aaa
jp
popf
ljmp
imul
dec
mov
enter
or
mov
fisubrl
mul
or
pop
add
push
mov
fisttpll
rol
jle
xor
pusha
ret
popl
push
std
aam
and
and
call
jno
or
rclb
mov
sbb
xor
push
dec
xchg
xor
add
sub
cmp
cltd
mov
mov
sub
stos
mov
scas
test
inc
or
xchg
decb
jg
inc
jecxz
mov
lock
xor
mov
enter
adc
in
adc
pop
iret
aas
js
cmpsl
pop
js
jp
std
xchg
out
and
inc
sub
sbb
xchg
test
push
sub
out
ret
ja
out
and
ja
dec
popf
dec
scas
out
pop
stos
jns
outsl
outsb
xor
jns
add
stos
jl
or
int
dec
pop
mov
xchg
adc
in
jle
mov
dec
icebp
sbb
jge
sub
sbb
cmpb
int3
cli
aaa
sub
adc
movsl
cld
addb
push
xchg
and
popl
lods
pop
sbb
addr16
push
push
popl
dec
int
push
inc
lods
jne
inc
outsl
stos
data16
jae
pop
cmp
js
mov
loopne
mov
sbb
mov
push
popa
shl
hlt
ret
mov
xor
push
mov
clc
mov
and
aam
sbb
jno
test
xor
mov
inc
xchg
popa
inc
jb
mov
mov
sub
cmp
add
mov
sub
lahf
ljmp
test
incl
mov
jns
mov
pop
inc
cmpsb
test
pop
jne
dec
xchg
pop
and
mov
test
pop
push
jg
xor
jecxz
imul
add
jp
mov
adcb
mov
jecxz
adcl
xlat
hlt
jg
xorl
cld
testb
fisubl
sti
shll
add
sarb
test
push
enter
xchg
push
or
inc
pop
pop
inc
cs
scas
push
inc
scas
mov
xor
and
mov
xor
bswap
ja
ja
dec
pop
xchg
lahf
cli
adcl
sub
mov
push
add
scas
xor
cmp
ljmp
cli
pop
mov
ja
shlb
xor
inc
push
jecxz
pushf
lea
jmp
dec
mov
lds
in
push
sahf
xchg
sbb
or
std
mov
sbb
cmp
lods
xchg
mov
pop
cmp
mov
mov
dec
loopne
aas
xchg
pop
sub
cmpsb
dec
or
aad
cmp
lcall
add
pop
repnz
nop
bnd
add
movsb
sbb
int
dec
lret
mov
sub
and
and
sbb
and
stc
aam
dec
repnz
movsb
icebp
pop
adc
jl
cmpsb
push
jbe
fs
adc
mov
add
jnp
jbe
push
cltd
or
and
mov
fnstenv
mov
sub
aad
pusha
push
jne
mov
decl
lods
jnp
cmp
in
jp
mov
ficompl
test
ss
xor
pop
jnp
jae
scas
test
mov
das
test
dec
shll
xchg
orl
mov
stos
stc
loope
mov
jae
rol
in
in
sbb
pop
rcrb
shrb
bound
stos
popa
mov
in
mov
or
xchg
stos
xor
adcb
lea
mov
roll
push
out
int3
push
call
loop
push
shll
and
jae
dec
test
test
push
ret
inc
mov
inc
xlat
jb
test
mov
sub
out
jp
ss
stos
jmp
aam
xchg
repnz
push
pop
add
mov
xchg
or
or
clc
int3
adc
pop
out
sbb
cmp
cmp
int3
popf
pop
push
pop
inc
add
fistpl
pop
icebp
loope
push
push
mov
cli
cmp
iret
xchg
push
cmp
ja
push
ja
loopne
inc
sub
lods
sbb
hlt
cmp
or
sub
inc
mov
push
xor
inc
pop
mov
dec
test
sti
push
xchg
lds
mov
dec
jmp
jno
cli
jp
aam
mov
outsb
mov
js
inc
push
insb
fldcw
xlat
cmpsl
and
decb
aad
jns
jp
cmp
adc
sub
test
cmpb
cmp
inc
add
dec
dec
pop
int3
dec
cmp
mov
sahf
cmp
data16
clc
jl
dec
mov
add
xchg
and
dec
sbb
or
cmp
xor
mov
xchg
popf
testl
xchg
push
pop
imul
incl
nop
push
push
dec
pop
cltd
das
outsl
mov
fwait
hlt
pushf
std
or
cmc
lahf
pop
pop
mov
sar
insb
sub
mov
insl
and
inc
pop
stos
push
lods
hlt
adc
sbb
mov
aaa
xorl
or
rorb
xor
sub
int
mull
movsb
xor
inc
jg
stos
mov
adc
fs
pop
mov
psubsb
jl
mov
out
or
adc
xchg
xchg
punpcklbw
pop
mov
push
cmp
ret
jp
pusha
les
jl
push
ss
cs
xchg
xchg
jecxz
sbb
je
mov
int
pop
xor
jmp
cmp
mov
scas
xchg
mov
mov
in
dec
frstor
inc
inc
orl
jmp
les
das
adc
xchg
popl
mov
bound
lea
in
fldt
dec
and
and
push
imul
adc
enter
scas
mov
adc
dec
repz
inc
movsb
dec
in
sub
imul
pop
fdivr
add
mov
add
pop
dec
outsl
das
xor
ret
into
cs
dec
pop
test
sahf
mov
mov
pop
xor
out
or
or
popa
jbe
popf
inc
xchg
into
stos
mov
cmc
mov
js
cmc
push
fsub
xlat
rcr
cmp
mov
mov
iret
inc
mov
jmp
sub
mov
shll
negb
mov
shlb
push
movsl
cmp
outsb
cmpsl
xor
mov
xor
test
clc
sti
mov
push
push
lds
mov
cmp
loope
insb
leave
std
sub
dec
lahf
stc
pop
sti
mov
dec
rol
call
mov
js
fnstcw
mov
or
pop
jno
loop
aad
push
sub
lods
cmp
dec
push
cmp
test
add
or
in
jae
inc
les
les
adc
or
nop
or
sar
aaa
mov
popa
into
xchg
ret
adc
jne
imul
jecxz
testl
dec
xchg
outsl
jns
aaa
lcall
aas
sbb
add
aad
cmp
jae
rcll
shlb
cmpsb
nop
jne
fstps
push
pop
mov
aaa
lds
cmc
cltd
xor
mov
and
sub
or
pop
movl
sti
sub
xchg
data16
jp
jbe
xchg
cmpsb
pop
shlb
or
fcmovb
pusha
xor
fs
jo
jb
xor
pop
jnp
jbe
fnstsw
dec
lret
and
lods
cmp
into
rolb
imul
std
and
dec
lahf
push
jle
out
incb
jle
or
icebp
andb
add
rolb
pop
inc
ret
xchg
ds
bound
cmp
mov
mov
in
push
mov
mov
add
mov
mov
add
fwait
js
xor
inc
rolb
sbb
movsb
add
cltd
cli
iret
mov
mov
sub
movsb
int
testl
loope
fisttpll
mov
rcrl
push
popa
out
xlat
fsubs
mov
mov
cmp
mov
jnp
mov
mov
fcomi
pusha
xor
push
stos
cmp
mov
adc
popf
call
bound
jae
andb
rcrl
scas
xor
nop
cmp
xchg
ja
cmp
pop
mov
pop
adc
pop
aas
inc
mov
inc
mov
in
push
sahf
fadds
and
insb
stos
jle
aaa
or
idivb
aam
fstl
push
mov
inc
push
or
xor
test
ret
pop
jle
dec
test
fdiv
pop
out
or
fwait
enter
inc
cwtl
pop
mov
decb
fcoml
leave
xlat
mov
add
mov
pusha
cltd
xchg
jl
jb
cmpsl
cmp
ret
or
fs
mov
push
and
mov
or
leave
push
mov
and
add
sub
shlb
and
out
das
pop
enter
cs
dec
or
lret
xor
and
mov
mov
xor
loopne
or
psllq
aaa
andb
sbb
adcl
fidivrs
sti
imul
fistps
pop
dec
ret
or
sub
xor
jb
hlt
mov
cmc
rcrb
lds
loope
add
mov
ret
enter
dec
mov
inc
sub
adc
in
aad
in
sahf
xchg
sbb
test
sbb
push
stos
ret
leave
orl
jnp
outsb
jns
dec
pop
rcll
into
dec
into
jl
addr16
cmp
dec
imul
sub
sti
xlat
bound
test
loope
testl
scas
dec
out
xor
test
inc
dec
inc
negb
adc
mov
inc
push
fimuls
test
push
push
jp
adc
js
jb
shll
and
or
pop
add
pop
sbb
push
jae
fmull
adc
dec
std
mov
dec
dec
cmp
xchg
arpl
mov
daa
cmp
mov
lods
mov
dec
mov
xchg
pop
aam
std
push
in
lret
mov
xchg
xor
lret
mov
add
ds
std
mov
mov
icebp
arpl
sbb
cvttps2pi
daa
lds
sbb
decb
lret
jnp
hlt
or
cmp
arpl
sub
mov
fiadds
cmp
inc
sub
adc
aad
and
add
pop
dec
and
jle
xchg
rcll
sarl
pop
add
jo
cmp
fiaddl
mov
out
or
add
sub
lahf
pop
in
mov
mov
jo
xor
fidivrl
mov
popa
jno
jae
in
mov
xor
and
fidivrl
cmc
mov
push
ljmp
jg
es
push
stos
std
iret
out
in
leave
mov
cmp
add
movsb
adc
cmp
sub
js
lods
mov
xchg
cmp
fnsave
or
pusha
inc
add
stos
push
cmp
xchg
aad
push
sub
mov
pop
jnp
adc
arpl
xchg
orb
loopne
cmp
adc
xchg
frstor
stos
adc
mov
or
popf
jbe
or
lret
aad
mov
fistl
sub
pop
sahf
xlat
inc
mov
mov
ret
fs
and
popf
pop
hlt
insb
sbb
int
iret
in
in
dec
dec
js
add
ss
mov
and
je
push
xor
hlt
fs
mov
ja
add
dec
push
idiv
outsl
add
popf
int3
lcall
dec
push
adc
lds
test
xor
dec
dec
cmpsl
mov
test
jmp
push
cmpl
les
sub
sub
push
sti
repnz
xor
leave
mov
push
cs
in
std
and
add
and
fwait
mov
outsl
fldz
addb
shl
clc
jnp
cmpsb
mov
sub
dec
xor
xchg
push
idiv
cmpsb
push
pop
loop
push
fcoms
jg
pop
rcl
and
call
repnz
lret
ficompl
fsubrl
daa
cmp
jmp
icebp
sahf
pop
pop
cwtl
pushf
ss
push
fucomi
sbb
popf
xchg
rorb
cs
sarb
jne
pop
push
adc
sbb
dec
loop
mov
je
wrmsr
roll
sub
test
add
in
lea
in
add
and
lods
aam
xor
mov
add
jne
sbb
lret
or
add
stos
adc
mov
cmc
sti
out
push
xor
fsubp
fcmovu
adc
movsb
adc
lods
mov
push
mov
imul
pop
leave
inc
int3
in
xor
mov
bound
push
aad
mov
mov
in
loopne
push
in
mov
lret
and
and
adc
sbb
insb
inc
jae
xchg
sti
xlat
cmp
out
mov
push
lock
repnz
or
loop
mov
divb
imul
imul
and
out
aad
mov
shll
mov
xor
jne
std
faddl
fisttps
into
jns
jle
aaa
js
jmp
push
pop
sarl
add
stc
lock
xchg
rcrb
int
mov
insb
je
ds
ret
jl
xchg
jne
popf
out
pop
jge
or
mov
clc
ret
js
jno
sub
mov
test
in
in
dec
movsl
dec
notb
and
inc
pop
mov
cli
mov
pushf
add
or
out
hlt
inc
cld
testl
mov
mov
sub
inc
xor
jb
pop
push
or
xchg
xor
outsb
rclb
inc
imul
mov
sbb
inc
sub
ljmp
add
lea
daa
gs
sbb
mov
sub
inc
and
dec
lcall
push
sub
movsb
lds
xchg
pop
push
fsubp
mov
sbb
cwtl
jo
jg
dec
adc
pop
fisubs
jo
jno
and
inc
xchg
sbb
incl
mov
xor
scas
ds
push
or
enter
cmp
out
mov
clc
aas
aam
add
mov
sub
test
andb
mov
lret
rol
into
mov
push
out
jecxz
add
lds
int3
fdivr
fucomp
pop
xchg
andb
lcall
inc
jle
ficompl
adc
sarl
xor
sbb
ljmp
inc
je
data16
push
xchg
jmp
mov
popa
roll
pop
loope
pop
sbb
roll
pop
push
push
mov
vmwrite
lcall
cmp
not
mov
mov
lcall
adc
mov
daa
cmp
and
aam
daa
mov
push
nopl
or
negl
inc
mov
xor
pop
leave
fadd
pop
inc
movsl
aam
mov
test
xchg
pop
mov
lret
adcl
and
ja
out
pushf
sub
push
pop
sub
mov
notl
das
or
mov
mov
in
sbbl
fsubrl
jge
mov
out
bound
rcll
rol
mov
ret
xorl
mov
xchg
aam
popa
inc
ljmp
inc
mov
xor
mov
orb
or
jmp
xchg
in
adc
sub
xchg
pop
js
cli
pop
pop
mov
in
test
mov
inc
jmp
ret
mov
lret
dec
iret
icebp
les
push
pusha
adc
push
outsb
xlat
nop
data16
fistl
mov
pop
dec
adc
xchg
cmc
pop
lahf
ret
or
cmpl
fs
xchg
into
lcall
std
mov
scas
mov
out
jl
jno
jno
push
lods
pop
sbb
inc
mov
xor
mov
pop
pushf
ficoml
rorb
add
es
int
adc
fnstenv
mov
loopnew
inc
mov
mov
jo
push
jb
pop
mov
sub
push
dec
pop
add
shrb
lods
out
jmp
test
fsubl
and
and
dec
or
push
inc
sahf
std
fisttpl
arpl
fiaddl
and
movsb
jnp
outsl
shrb
mov
xchg
jnp
fsts
cmp
dec
inc
xchg
cmp
mov
mov
std
mov
inc
cs
cmpl
aad
in
rorb
dec
xor
mov
sbb
push
cmp
bnd
jl
dec
jb
inc
xchg
lret
mov
aad
insb
insb
push
jmp
or
jle
movsl
add
inc
outsb
cmc
out
xchg
add
popa
inc
lret
imul
addr16
fistpl
sub
jbe
adc
mov
inc
and
nop
lds
out
cmp
fstpl
push
sbb
push
dec
xchg
movsb
dec
psubw
adc
into
scas
mov
lock
cmpsb
std
notl
insl
cmp
hlt
cwtl
or
fistps
cmpsl
lret
andb
sub
jg
inc
int3
mov
insl
stc
lret
mov
sbb
jns
pop
mov
xchg
pop
inc
ficompl
mov
cld
pop
xchg
repz
int3
cmp
add
push
xchg
ffree
decl
mov
ljmp
setg
frstor
lea
push
in
xchg
popa
and
stos
xor
lods
push
xor
jecxz
cs
jnp
pop
cmpsl
xor
cmp
mov
outsl
out
push
lock
pop
cmpsl
in
jns
or
xchg
pop
neg
stos
imul
adc
mov
sbb
push
cmpsb
ret
sti
and
lds
jecxz
popa
pop
out
test
jb
lahf
dec
fmull
mov
ret
inc
push
cmp
jne
addr16
cmp
sub
std
adc
or
push
js
adc
add
imul
sub
jp
mulb
cmp
repnz
push
sbb
mov
pop
jb
iret
push
cmpsl
mov
pavgb
xchg
lock
subb
adc
loope
int
and
mov
cli
js
mov
push
in
mov
into
mov
outsb
mov
into
inc
or
push
std
adc
xchg
xchg
cmc
push
lret
mov
rcrb
jle
bound
xchg
jbe
ja
loopne
mov
ja
data16
insb
in
divl
mov
xchg
mov
rolb
popf
pop
or
and
daa
xchg
push
mov
jle
les
dec
push
dec
push
shl
in
test
stc
push
add
mov
int
inc
sub
dec
je
pushf
mov
mov
popf
inc
fs
push
pop
add
mov
mov
arpl
jne
push
pop
add
addl
push
out
xor
aas
mov
lods
arpl
cmp
xor
and
xor
repnz
jecxz
fcom
jb
outsb
popf
mov
push
xchg
lds
push
cmc
push
sahf
dec
jno
mov
imul
jmp
stc
add
leave
sub
push
sbb
inc
or
test
rcr
mov
ret
and
stos
push
sub
jmp
push
cmp
jg
mov
or
pop
popf
add
orb
cs
imul
loopne
xchg
jecxz
in
pop
popa
pop
jg
idiv
cwtl
mov
loope
popf
cwtl
mov
popf
xchg
mov
adc
adc
les
add
fwait
sub
adc
add
mov
outsl
stc
insb
int3
cmpsl
mov
stc
sti
decl
in
lret
cmp
shlb
mov
and
mov
and
dec
inc
xchg
jo
fcompl
dec
inc
in
xchg
shrl
sahf
push
aaa
sahf
shlb
mov
mov
sbb
loop
dec
and
mov
test
cmp
into
mov
imul
out
xchg
daa
cwtl
adc
inc
fnstsw
push
lcall
xchg
push
or
mov
stc
jne
inc
jmp
push
push
in
lods
ret
dec
cmp
testb
clc
add
fdivs
mov
dec
mov
mov
stos
test
sub
bound
pop
mov
push
cmpsl
and
stos
xor
rol
divb
addr16
fxch
std
xor
orl
jbe
enter
in
lds
dec
dec
sbb
cmpsl
push
push
cwtl
fmulp
inc
rcrb
or
xchg
pop
xchg
mov
or
dec
cwtl
xchg
mov
stos
push
mull
mov
movsb
pop
mov
mov
sbb
rcrb
fimuls
rol
arpl
mov
or
aaa
cmc
call
pop
stos
adc
scas
lea
leave
sub
add
push
push
or
das
or
test
mov
and
call
fisttpll
scas
push
loopne
dec
in
divb
add
adcl
ja
sahf
xor
out
and
sti
fs
clc
add
in
adc
adcb
hlt
popa
cltd
xor
mov
mov
mov
in
sarb
pop
pop
lods
les
les
fsubrs
test
les
cmp
lea
mov
sahf
test
das
js
mov
add
xor
add
adc
lcall
std
inc
loop
mulb
out
imul
cs
jle
sbb
adc
movsb
jmp
xchg
mov
sbb
jnp
leave
test
push
adc
in
imul
add
xlat
imul
ss
test
cld
sbb
jge
loop
repz
and
fiaddl
pop
jb
jno
pop
mov
xor
dec
dec
test
sbb
and
and
sbb
enter
xchg
ljmp
and
or
inc
scas
push
icebp
les
sbb
insl
inc
dec
out
sbb
flds
add
xchg
or
or
jge
lds
repnz
lods
jge
pop
repnz
lea
xchg
pop
jbe
or
pop
out
roll
jns
add
jmp
in
cwtl
std
sbb
out
hlt
cmp
pushf
jne
and
insb
rclb
iret
faddl
mov
rcr
xor
fildl
stc
and
mov
mov
shr
lds
shl
enter
pop
int
repz
movsb
jne
pop
test
subb
mov
shlb
test
je
pop
dec
jl
lahf
ds
test
jb
cmp
mov
ds
xchg
in
cwtl
pop
je
or
std
inc
xchg
inc
and
sub
jmp
into
inc
iret
mov
in
mov
les
cmpsb
das
shrb
bound
xchg
lahf
ja
hlt
dec
xchg
clc
scas
xchg
fstl
adc
movsb
loopne
imul
out
adc
ret
lds
pop
or
sub
adc
cmc
popa
es
dec
movsl
jge
cmp
popf
cwtl
fnstsw
xlat
dec
pop
jecxz
sub
fwait
sub
mov
sub
inc
hlt
out
pop
sbb
mov
cmpsb
jl
push
loop
jl
dec
lods
ret
loopew
push
stos
hlt
mov
jo
insb
add
in
mov
aam
mov
add
stos
push
jbe
xchg
sbb
fistps
jmp
rcrl
loope
aad
xlat
shrl
mov
mov
test
jbe
jl
ljmp
cmc
push
les
xor
mov
in
lret
imul
ret
aam
push
xchg
gs
testb
or
sbb
xchg
mov
stos
and
jns
inc
push
das
lods
push
test
or
push
mov
ror
jmp
sarb
push
jns
push
cmp
jmp
mov
sub
mov
cmp
jmp
or
ficoms
aaa
popf
fisubrl
dec
or
je
jge
aam
sbb
mov
sbb
arpl
add
mov
adc
std
sbb
js
loope
mov
ljmp
addr16
jo
and
roll
add
xor
loopne
outsl
fadds
or
jecxz
ror
or
repz
cmp
mov
lcall
xchg
pop
icebp
cmpl
negb
sti
xlat
mov
dec
pop
mov
nop
dec
jecxz
div
mov
imul
xchg
dec
mov
hlt
rorb
int
push
ja
in
in
xor
mov
in
adc
lret
jo
inc
popf
xchg
pushf
lret
popa
push
mov
dec
cltd
pop
push
xor
out
inc
cli
mov
test
stc
outsb
pop
test
int3
sub
sbb
or
inc
cli
out
xchg
sub
insb
clc
jmp
out
aas
mov
dec
mov
and
pop
ds
sub
mov
das
aaa
inc
aaa
addr16
pusha
add
inc
in
adc
push
jp
popf
cld
mov
fwait
ja
pop
je
imul
adc
in
push
pop
mov
negl
sarb
cvtps2pi
fucomp
xchg
aad
xor
mull
loopne
mov
iret
call
insb
packuswb
dec
lret
hlt
xchg
sub
in
mov
xchg
mov
fcomi
jl
fs
mov
sarl
shll
cmp
or
xchg
dec
jae
and
jg
cmpb
push
and
aad
sbb
test
and
pop
hlt
xchg
fwait
test
mov
mov
push
insb
sbb
pop
std
gs
adc
jecxz
into
pop
lret
stc
aaa
cmp
mov
jl
adc
xor
inc
clc
mov
test
push
lds
sbb
push
stos
lahf
add
in
scas
sub
jbe
or
push
outsl
mov
dec
and
mov
or
ss
adc
enter
pop
mov
jbe
jl
sbb
xlat
jle
push
insb
push
leave
push
mov
xor
or
jl
roll
in
test
ret
or
jne
lock
xchg
cmp
dec
lds
push
shrl
mov
negl
jb
js
push
ljmp
xor
xchg
jl
xor
pop
xor
rcll
int
rcr
bound
cmpsl
sub
scas
xor
and
pop
nop
andl
stc
loop
cmpsb
test
xor
emms
lret
fdivrl
shlb
enter
sub
pop
sarl
imul
les
sub
xor
jl
dec
loopne
aam
ficompl
push
and
dec
pop
and
iret
jmp
cmp
cltd
cmp
jl
popa
xor
lds
movsb
jmp
adc
inc
outsb
jge
outsl
sub
stos
push
xchg
stc
sub
xor
icebp
dec
aaa
outsl
fsubs
test
pop
bnd
lods
mov
je
dec
mov
aaa
cmp
jbe
lret
add
cmpsb
insl
ret
out
jp
jb
cmp
and
std
cltd
or
sbb
lea
mov
scas
daa
shll
mov
xchg
in
ja
jbe
inc
pop
mov
enter
rcl
sub
pop
push
or
push
lahf
repz
inc
or
ret
stc
daa
push
outsb
pop
sub
popl
clc
sbb
adc
jg
mov
push
mov
adc
aam
cmp
mov
push
push
xchg
aam
insb
loopne
jg
mov
mov
out
pusha
bound
cmp
inc
cltd
jns
ds
gs
jp
mul
adc
xor
loop
mov
inc
dec
mov
les
loop
jmp
lods
ds
leave
les
ret
imul
dec
aad
xorps
ret
ds
scas
das
sub
test
in
push
pop
imul
xchg
sti
lret
jno
jecxz
ss
pop
clc
imul
mov
scas
pusha
xchg
sbb
inc
pushf
rorl
repz
jae
loope
or
dec
or
mov
icebp
or
mov
adc
js
cmp
sahf
insb
inc
dec
in
inc
addr16
stos
sarl
adc
js
push
sbb
mov
data16
inc
push
cmp
hlt
addr16
out
or
push
xchg
mov
aas
xchg
pop
push
testb
push
dec
jg
fldcw
ja
mov
mov
jns
and
sbbl
mov
popf
add
xor
pop
mov
outsb
push
or
mov
add
sbb
push
add
ljmp
mov
mov
adc
mov
push
inc
mov
cltd
cmp
fwait
in
es
sub
jp
jnp
leave
fstpl
mov
or
sbb
adc
lods
cs
jmp
outsb
lretw
scas
and
mov
xchg
pop
sbb
aas
xchg
mov
sub
xlat
mov
xchg
subb
loope
jnp
sbb
xchg
cmp
shlb
lcall
sbb
mov
mov
inc
mov
fnstcw
nop
lahf
sahf
pop
int
andb
insl
adcl
in
mov
inc
andl
pop
inc
jge
sbb
jo
lret
cmpsb
cld
or
ljmp
lret
and
cwtl
push
xchg
push
jb
cmp
mov
jne
nop
outsl
pop
jbe
pop
cmp
fnstenv
lods
lds
fimull
shlb
test
movsb
pop
fs
inc
jmp
int3
mov
shll
sbb
lcall
push
xor
cmp
inc
ja
mov
je
addl
cmp
pusha
test
sbb
ret
push
sahf
jo
or
push
daa
sub
pop
or
cmp
inc
xchg
sub
or
insl
mov
sbb
jnp
mov
push
pusha
loope
or
andb
sbb
adc
xor
lahf
pop
mov
pop
jnp
inc
cmpsl
cmp
sub
sbb
mov
inc
cmpsb
test
pop
sub
test
mov
hlt
xor
jecxz
mov
pop
jbe
mov
sub
fsubs
add
insb
clc
lds
fldl
push
or
cmp
mov
jno
or
es
cs
insl
imul
xchg
pop
sbb
jmp
and
dec
push
test
pop
mov
inc
in
dec
jle
adc
mov
xchg
out
and
sarl
jmp
sub
scas
rcll
cmp
outsb
test
mov
imul
lock
mov
arpl
mov
xor
cmc
push
xor
cld
push
clc
test
jp
sbb
mov
in
jo
jbe
mov
push
pushf
push
and
imul
insb
dec
and
mov
lds
mov
mov
or
sub
mov
xchg
xor
sti
sub
mov
sub
adc
xchg
clc
add
fisubrs
cmp
mov
and
scas
popf
jmp
inc
cmp
push
xor
pop
xor
jmp
pop
and
jle
xchg
arpl
and
leave
ds
stc
stos
out
push
lds
test
dec
inc
insl
aad
mov
jmp
mov
lds
aaa
and
jle
and
mov
jns
jl
jbe
inc
cmp
dec
and
fwait
adc
xor
lods
inc
pop
fs
pop
sbb
mov
call
out
cwtl
sbb
adc
sahf
pop
andb
das
cmpsl
loop
push
scas
push
mov
ss
xor
adc
xchg
or
push
mov
outsl
push
push
xchg
add
jne
jp
mov
les
inc
dec
xchg
out
cmp
fisttps
jbe
push
adc
shl
lock
xchg
neg
das
lcall
mov
icebp
xchg
lcall
mov
jb
hlt
inc
pop
push
and
ds
and
pusha
jmp
mov
mov
or
mov
adc
js
frstor
push
insl
das
hlt
ss
shrl
jge
dec
lods
cmp
ret
mov
aad
push
mov
loop
insl
mov
lea
xchg
daa
jge
or
data16
pushf
adc
pop
cmp
mov
je
adc
fiaddl
popf
mov
xor
push
inc
cmp
or
sbb
adc
mov
mov
sub
xchg
mov
mov
inc
stc
sub
pop
pop
data16
mov
stc
mov
inc
data16
cld
mov
outsb
in
xor
cmp
mov
adc
inc
jne
repz
rcll
xlat
loop
gs
and
orb
ds
fiaddl
cs
sub
rclb
fucomi
mov
sub
sub
jo
dec
push
negl
orb
sbb
pop
rep
inc
jmp
dec
movsl
test
mov
add
ss
xchg
inc
cld
push
idivl
hlt
cmpsb
dec
ss
push
lea
cmp
adc
test
xchg
std
leave
inc
push
cmp
movsb
loop
and
or
pusha
sbb
fwait
push
scas
pop
inc
out
jae
jge
fdivr
mov
mov
sub
std
in
repnz
mov
repnz
insl
dec
jne
mov
sub
je
pop
arpl
mov
in
aas
inc
imul
dec
popf
adc
jbe
inc
cmp
push
enter
iret
lods
fnstcw
pop
push
stos
sub
call
jecxz
mov
ret
insb
daa
std
jo
xchg
enter
addr16
daa
sub
incl
stc
int
adc
lods
ljmp
outsl
in
sub
cmp
ret
subb
out
adc
js
mov
aas
test
movsb
shlb
and
sub
push
daa
arpl
sub
test
mov
cs
cltd
out
scas
lock
and
fcmovu
mov
adc
out
out
sbb
pop
outsb
insb
loopne
xor
fdivl
in
mov
sbb
sbb
loope
enter
mov
pushf
adc
and
shlb
in
jg
jg
cmp
pop
push
dec
pusha
pop
rcrl
push
loope
inc
mov
mov
imul
mov
out
enter
add
jbe
xor
scas
jo
fidivrl
dec
mov
sub
jg
idivb
js
shll
je
mov
pop
ret
pop
lcall
mov
lea
xchg
push
adc
xor
mov
rcll
adcb
xlat
insb
mov
sub
mov
leave
push
mov
adc
mov
data16
pop
xchg
xchg
in
sbb
pop
cmp
.byte
sbb
mov
add
lock
jbe
sub
push
jecxz
push
enter
push
mov
addr16
xorb
xchg
loope
sarb
mov
cmp
or
popf
aaa
dec
mov
cmp
lea
xchg
imul
dec
lds
mov
xchg
lret
addr16
push
rcr
pop
insb
mov
jp
fdivr
and
push
xor
int3
adc
add
outsb
pushf
fwait
fwait
xor
pushf
cmpsb
push
xchg
in
mov
das
mov
cmp
dec
ss
add
data16
pusha
rcrl
pop
push
mov
sarb
hlt
int
cmp
pop
push
or
pop
sbb
dec
fs
dec
les
iret
int3
ds
or
mov
sbb
movsl
imul
gs
jl
repz
xchg
rcl
dec
aam
mov
pop
repz
imul
lret
sbb
jns
sub
push
xlat
mov
mov
sbb
xchg
xor
loop
out
xchg
popa
lret
dec
loop
ss
or
add
in
ljmp
mov
adcl
jp
fdiv
xchg
add
xchg
scas
rcrl
jbe
out
push
jb
and
mov
pop
in
mov
sbb
and
or
mov
push
push
ret
inc
int3
mov
cmc
arpl
jge
pop
sub
xor
or
stos
lret
popf
jb
jo
or
dec
adc
ss
xor
xchg
rcrl
pop
mov
test
test
and
dec
test
jbe
jl
fs
add
xchg
xlat
cmp
aad
sahf
cmp
mov
lds
dec
cmpsl
mov
push
sub
andb
sbb
jg
pop
sub
or
dec
test
leave
adc
std
jle
add
cmpsl
sarb
leave
xor
xor
cmp
sub
or
fwait
in
add
mov
xchg
test
call
mov
loop
es
xchg
outsb
add
aad
shl
mov
xorb
jnp
mov
dec
scas
adc
sub
shl
jno
jns
mov
sahf
stos
or
dec
add
or
cmc
sbb
xor
xor
inc
outsl
or
mov
and
ja
sahf
mov
sub
test
scas
rorb
dec
lds
jg
sub
or
fistpll
mov
adc
imul
push
movsb
lcall
jne
mov
std
sbb
mov
jbe
push
insl
stos
pop
adc
xorb
push
sbb
in
test
dec
stos
push
push
pop
fists
push
sahf
xor
inc
loop
mov
cld
movsb
orb
xor
sbbb
mov
sbb
push
nop
lahf
pop
int
sbb
icebp
roll
jg
out
daa
inc
rep
mov
or
and
daa
xchg
and
daa
shrb
fwait
sub
xor
cld
and
lock
addr16
mov
test
and
mov
and
jns
aaa
out
push
call
in
cmp
mov
leave
scas
mov
xchg
sub
dec
jbe
cli
xor
lcall
sahf
pushf
pop
xchg
aam
add
dec
xlat
xchg
bnd
fsubp
ss
call
int3
and
outsb
push
jae
sub
adc
and
es
push
lds
or
xchg
adc
xorb
jae
and
mov
xchg
add
and
fmuls
icebp
cmp
push
jg
ja
mov
sbb
fadd
in
movntq
test
in
into
add
fnsave
pop
and
dec
imul
fsubrl
and
mov
lahf
ret
pusha
xorb
adc
stos
mov
cmp
jb
mov
rcrl
test
mov
mov
out
push
mov
sub
into
xor
jo
mov
mov
ret
sub
inc
or
js
sub
dec
fcmovnbe
imul
xor
cmp
mov
mov
pop
xor
mov
jbe
and
lds
fbstp
jp
sbb
cmpsl
pop
mov
test
sti
jmp
add
add
xor
std
adc
aam
jle
pop
pop
popf
cs
lret
cs
sbb
loop
fimuls
mov
mov
mov
or
loope
jbe
pop
stos
pop
sbb
iret
mov
repnz
mov
rolb
outsl
gs
jl
pop
test
mov
push
inc
daa
in
imul
hlt
negl
fadds
cmpsl
sbb
pop
test
cmc
adc
pop
ja
push
fsubrs
mov
testb
cmp
and
fld1
cmp
sahf
lcall
mov
sti
ret
xchg
mov
dec
inc
xchg
js
or
cmpsb
inc
adc
pop
mov
adc
jno
dec
adc
movsb
mov
mov
cld
mov
cmp
xchg
enter
jmp
pop
in
xor
ret
shrl
mov
mov
mov
ror
inc
das
dec
cs
fiaddl
mov
int
mov
sbb
sub
pop
rcll
fistps
subl
jmp
xor
sbb
stos
mov
in
dec
andb
sub
cmc
fucomip
das
cmpps
add
sub
fstl
mov
push
mov
iret
push
outsl
jns
jns
fwait
xchg
ljmp
mov
rcrb
mov
nop
pop
fucomp
les
dec
and
js
push
sbbl
mov
jo
or
test
mov
enter
ljmp
rcr
stos
and
pushf
mov
sahf
outsb
vcomiss
dec
mov
lret
xchg
mov
cmp
sqrtps
ss
dec
inc
test
rcl
adc
lcall
insb
insb
and
or
adc
add
enter
sub
push
dec
adc
cs
xchg
dec
mov
in
lock
fwait
enter
daa
lahf
in
mov
fldl
mov
dec
cmp
mov
cmp
rorb
mov
mov
cltd
out
daa
add
or
lret
sub
xchg
mov
mov
adc
mov
jo
jne
jle
sbb
jb
jmp
inc
sub
mov
xor
push
dec
push
cmp
xorl
jne
mov
imul
jns
arpl
sub
lret
cmp
mov
test
pop
inc
sbb
push
jno
insl
fildll
push
sahf
lock
loop
push
pop
stc
xor
stos
jne
mov
jnp
imul
cmp
out
cmp
clc
pop
pop
and
aas
sarb
bound
adc
push
mov
lret
xchg
dec
scas
and
inc
xchg
ljmp
aam
sbbb
pushf
gs
cmpsb
jno
xorps
or
sub
mov
cmpsb
or
outsb
adc
xor
cmp
in
sbb
aam
jge
mov
jecxz
jno
out
cmp
dec
adc
sbb
lret
sbb
cmpsb
xor
sbb
aam
stos
xchg
jecxz
jae
stos
cltd
fld
fldcw
repz
mov
jae
cmpsb
push
cwtl
lods
sub
stc
mov
sub
mov
mov
scas
mov
andb
pop
or
sbb
lcall
scas
sbb
push
cmpb
adcb
nop
xchg
jb
pop
and
addb
dec
shl
dec
sub
leave
and
or
fs
testb
ss
xorb
lahf
mov
jle
jno
outsb
push
enter
lret
adc
ljmp
mov
push
dec
inc
adc
mov
pop
shr
clc
imul
xlat
ja
ljmp
movsb
sbb
test
mov
lds
dec
lcall
sbb
lea
and
fildl
lock
xchg
jb
loop
add
rclb
jge
in
mov
sbb
push
rorl
ficompl
into
xor
test
hlt
roll
out
lods
xchg
cmpsb
mov
negb
arpl
mov
sub
xor
adc
ja
inc
sqrtps
and
inc
lock
fists
mov
mov
sbb
decl
out
sub
test
lods
mov
testl
test
mov
das
clc
ja
shll
rolb
test
adc
xlat
xchg
xchg
pop
push
sub
xorl
and
push
dec
loop
aaa
cmp
aad
sbbb
jmp
dec
fildl
push
fidivs
adc
and
movl
dec
cmpb
mov
jge
xlat
jecxz
imul
sbb
lods
xor
call
and
sti
in
push
pop
cmpsl
pop
testl
jg
add
push
cli
lods
jmp
sbb
sub
shlb
dec
jp
mov
dec
and
aam
or
into
sub
or
jne
jle
dec
je
mov
mov
mov
mov
and
fldt
sub
lock
adc
inc
inc
pop
int3
in
add
xchg
call
mov
into
fbstp
lcall
inc
mov
and
xchg
mov
test
in
adc
mov
jae
jnp
loope
cmp
aam
leave
cmp
push
adc
es
or
mov
mov
fcomip
notb
les
test
dec
inc
lret
testb
pop
repz
jg
xchg
dec
mov
sbb
in
in
lock
jmp
insl
mov
in
sbb
mov
jne
sub
shlb
cmp
sbb
hlt
mov
sarb
std
adcb
imul
enter
mov
xor
dec
mov
stc
es
insb
jno
or
dec
dec
rcrl
and
ja
loop
inc
cmp
adcl
loop
xlat
out
jmp
fildll
xlat
js
ja
leave
pop
fwait
add
add
add
pop
add
add
add
add
fadds
add
lock
addb
add
or
add
dec
add
adcb
add
js
add
nop
add
addb
add
add
add
add
add
add
adc
add
add
test
add
rolb
addb
add
fadds
add
lock
addb
add
and
add
cmp
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
orb
add
loopne
add
clc
add
adcb
add
adc
add
add
add
add
add
add
add
cmpsb
add
add
add
addb
add
add
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
push
add
add
add
add
jo
add
mov
add
mov
add
add
add
add
add
addb
add
add
add
add
add
add
add
mov
add
andb
add
sbb
subb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
or
add
js
add
or
add
mov
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
or
add
sub
add
or
add
cmp
add
or
add
dec
add
add
or
add
pop
add
add
or
add
push
add
add
add
add
add
add
add
or
add
js
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
or
add
cwtl
add
add
add
add
add
add
add
add
or
add
test
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
or
add
enter
add
add
add
add
or
add
fadds
add
add
add
add
add
add
add
or
add
call
add
add
add
add
add
add
add
or
add
clc
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
sbb
add
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
or
add
dec
push
add
and
or
xor
add
hlt
and
add
add
add
add
add
add
add
add
sbb
add
add
hlt
sbb
add
add
add
sbb
add
add
add
or
test
add
jl
or
test
add
adc
or
push
add
add
add
add
cli
or
sub
add
in
add
add
add
stc
or
sub
add
in
add
add
add
pushf
clc
or
sub
add
in
add
add
add
je
or
sub
add
int3
lret
test
add
and
or
test
add
mov
add
add
mov
add
add
in
add
add
add
inc
mov
add
add
add
add
add
add
add
mov
add
add
in
add
add
add
jo
or
lods
add
add
add
add
add
add
add
add
add
add
add
add
nop
or
or
add
in
add
add
add
add
add
add
add
add
add
xchg
or
push
add
add
add
add
mov
add
add
add
add
in
mov
add
add
in
add
add
add
fdivs
add
add
add
add
add
mov
add
add
in
add
add
add
xor
add
in
add
add
add
mov
add
in
add
add
add
add
addb
add
add
lret
jg
in
jo
lock
jae
pushaw
xor
xor
fidivrl
sbb
push
out
pcmpgtw
clc
sub
jle
push
outsl
pop
add
sarl
cmp
clc
xchg
cmp
and
pushf
adc
or
pop
scas
test
daa
loopne
lret
daa
xchg
push
andl
lret
lret
add
cmp
add
cmc
xlat
scas
and
out
insl
mov
pusha
test
aam
pop
mov
mov
pop
pop
xlat
adc
lock
addr16
clc
xchg
or
jmp
sbbb
xchg
repnz
pop
mov
insl
mov
loop
jb
xor
adc
pusha
xchg
iret
and
gs
jge
xchg
cmp
pusha
sub
inc
cmpsb
xor
es
ds
or
sbb
lcall
ljmp
adc
mov
hlt
jg
lret
movsl
push
sbb
dec
adc
fdivs
pop
push
add
insl
shrl
push
jge
clc
out
imul
mov
pop
mov
shrb
jb
roll
xor
or
pop
andb
mov
cwtl
xchg
lcall
idiv
dec
pop
pop
aaa
repz
push
fildll
movsl
dec
outsb
xor
imul
xor
push
cmp
jmp
push
stos
and
scas
mov
loop
mov
jns
add
rcll
dec
dec
mov
in
stos
push
pop
sbb
fwait
mov
cwtl
mov
call
inc
les
pop
pop
or
mov
xchg
inc
imul
jne
mov
cmp
fwait
add
stos
imul
xchg
pop
mov
push
pop
mov
jmp
sbb
stc
out
and
fs
cwtl
adc
out
ror
movsl
xor
cli
dec
or
xchg
dec
outsb
xor
or
div
xor
xchg
iret
mov
sub
test
in
dec
aad
inc
add
inc
jmp
roll
std
push
addb
insl
sub
mull
bound
pop
popa
cmp
push
pushf
scas
adc
out
or
in
jle
loope
in
sbb
testb
in
or
in
hlt
and
in
and
jns
into
negl
dec
cmc
lret
iret
cmpsb
or
sarl
push
loopne
cmp
cltd
push
mov
or
mov
jge
test
popa
jnp
mov
dec
jbe
mov
test
lods
pop
fmul
test
sub
dec
dec
mov
pop
jo
mov
cmpsb
jnp
mov
jmp
xchg
into
add
mov
mov
and
lcall
xchg
lahf
hlt
scas
sbb
lods
call
jns
adc
mov
jle
xchg
xchg
mov
add
ret
hlt
popa
leave
cld
inc
rol
xchg
mov
mov
push
xor
sbb
xchg
sbb
push
pop
aam
fstpt
and
popf
les
xchg
aam
cmp
mov
mov
mov
or
test
xchg
xchg
dec
hlt
sub
leave
mov
imul
sbb
adc
addb
push
bound
cmc
lea
scas
mov
iret
push
test
inc
pop
cltd
lods
adc
ja
push
popf
cmp
stos
mov
push
mull
jg
dec
pop
mov
movsl
in
sahf
pushf
arpl
push
cmpsl
jne
sbb
sub
icebp
adc
repz
incl
mov
imul
add
cmp
xchg
scas
sub
iret
cmpb
inc
loopne
shr
push
stos
pusha
repz
psllq
cli
imul
cmp
cmc
rcl
inc
xor
mov
lock
cmp
push
jle
fcomps
repz
push
and
add
xor
sbb
mov
sbb
movsb
pop
xchg
int
icebp
jge
or
jbe
add
xchg
mov
pusha
pop
js
cmpsb
push
sbb
push
insb
ds
enter
adc
push
mov
mov
aad
lcall
push
or
cmp
and
jae
fisubrl
sbb
lret
or
jl
push
repnz
pop
sbb
insl
lea
or
imul
sub
mov
imul
jo
lcall
cmc
js
testl
add
cli
xchg
xchg
xchg
mov
loope
adc
mov
rclb
sub
jno
add
jmp
cmp
jo
dec
pop
imul
cmp
pop
mov
inc
aaa
filds
lret
add
push
pusha
out
ret
mov
inc
in
sti
ss
pop
jns
xor
rorl
aaa
sahf
sub
mov
iret
jbe
pop
js
fstpl
mov
adc
jmp
add
dec
icebp
hlt
sub
jge
icebp
mulw
jns
xchg
push
xorl
mov
pop
hlt
xchg
out
gs
lea
lds
push
pop
movsl
mov
imul
push
sub
jg
shll
jl
mov
loop
push
sysenter
aam
inc
test
add
adc
mov
gs
neg
or
inc
sbb
shlb
js
sbb
xlat
scas
xor
mov
mov
push
iret
add
cs
jae
sub
pop
sub
movsb
cmp
cmp
jne
mov
imul
jno
mov
or
mov
xchg
push
inc
pop
iret
cmp
test
flds
cmc
arpl
clc
mov
iret
or
pushl
push
movsb
mov
lds
pushf
push
in
sbb
aam
mov
push
jecxz
jge
add
xor
xchg
idivl
leave
pop
mov
push
lahf
inc
adc
sbb
pop
adc
clc
or
or
adc
in
cltd
dec
xchg
fbld
sti
mov
ss
sbb
pop
mov
mov
mov
push
jl
mov
xor
ret
pop
ljmp
cmp
std
fwait
mov
or
popf
cmpsb
jno
or
in
test
adc
cmp
or
dec
and
sti
subb
fdiv
testl
sbb
xchg
cmc
aas
mov
ret
movsb
jp
shll
push
daa
data16
nop
jge
mov
jo
push
into
cmp
xchg
leave
iret
pop
adc
jg
or
xchg
adc
mov
xorl
pop
mov
cmc
adc
pop
int
in
loop
cmp
jae
add
shlb
mov
and
scas
rcrb
adc
jae
push
mov
dec
aas
negb
xor
jae
mov
imul
jbe
push
lret
ljmp
sbb
mov
sbb
sbb
ret
pop
mov
imul
orb
adc
cmpsb
fdivrl
lods
xor
lahf
or
xchg
imul
cmc
mov
and
pavgb
imul
push
sahf
std
das
jmp
mov
add
mov
and
les
scas
adc
rolb
pop
shrb
bound
jnp
jns
xchg
insb
xlat
or
inc
insb
es
cmc
inc
jmp
leave
mov
xchg
push
xor
push
lods
and
xchg
jmp
leave
mov
cli
popa
jge
xchg
jmp
dec
iret
inc
or
cmc
lds
in
leave
movb
inc
test
outsb
mov
xor
leave
dec
mov
push
imul
mov
sbb
sarb
mov
xor
pop
fmulp
sub
movsl
pop
fs
popf
lock
mov
jae
mov
test
jl
gs
ljmp
sbb
iret
add
shl
adc
mov
sbb
xchg
xchg
mov
sub
mov
push
jmp
mov
jne
andb
cmp
out
popa
xor
xor
xor
jp
jmp
sbbb
test
xchg
lret
sbbb
lds
lock
test
jb
sub
jo
adc
dec
and
aam
add
mov
mov
outsb
jecxz
mov
icebp
dec
je
mov
lret
sub
das
addr16
lods
fistpll
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jae
mov
call
push
mov
and
inc
push
nop
mov
mov
repnz
cmp
lret
pop
add
jmp
fdivs
push
xchg
test
xor
imul
stos
xor
or
pushl
pop
call
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
dec
and
inc
add
xor
movzwl
add
mov
push
add
popl
mov
mov
sub
jbe
mov
add
call
or
das
cmp
call
inc
out
aam
jb
inc
jns
pop
insb
xor
add
and
pushf
movsl
pop
pop
cmp
jne
dec
inc
in
sbb
xor
xchg
dec
mov
pop
inc
lods
popa
jae
pop
arpl
fcoml
jae
xchg
xor
jmp
fldenv
cmp
lods
js
sub
sub
cwtl
dec
or
cmp
adc
imul
lret
inc
mov
arpl
pop
das
mov
pop
add
sub
dec
inc
in
sbb
mov
pop
dec
sub
fwait
aad
scas
nop
mov
jg
sbb
xor
arpl
sub
xor
fcmovb
ret
jge
sbb
insl
adc
leave
aad
adc
clc
aam
pop
xchg
sub
adc
sbb
loope
jge
hlt
pop
mov
sbb
fsubr
push
loope
mov
stos
cmp
lods
push
add
repnz
sub
sbb
push
ficompl
push
sar
add
push
in
sbb
cltd
add
leave
aad
sbb
jp
pusha
push
test
pop
xchg
decl
xchg
jecxz
push
inc
adc
dec
mov
pop
push
inc
mov
pop
test
mov
mov
inc
jae
shrl
pop
push
les
cmc
pusha
lcall
cmp
adc
push
mov
int
hlt
movb
push
sub
inc
adc
sbb
shrl
inc
adc
aam
fildl
lcall
adc
repz
cmp
mov
aam
pop
shr
jne
jp
mov
imul
inc
adc
out
push
jbe
jmp
xchg
cmp
mov
dec
mov
fisttpll
or
test
mov
lret
aaa
ss
mov
rcl
or
mov
es
cmp
pop
push
push
in
xchg
pop
inc
adc
lret
test
jecxz
jge
aas
cmp
or
ss
arpl
aaa
mov
in
fimuls
outsb
add
repz
scas
in
adc
xchg
cltd
sub
inc
lcall
inc
sbb
mov
outsl
sub
xchg
dec
into
cmp
and
out
daa
rclb
pop
inc
in
fs
inc
xchg
insb
lea
imul
ja
and
shl
or
js
std
lcall
push
je
ficoml
scas
add
inc
xchg
inc
cmp
dec
rclb
xchg
cmp
pop
fcmovne
ja
xchg
or
jb
mov
jae
stos
roll
repz
flds
and
data16
push
ret
or
push
xor
fs
inc
xchg
shll
sbb
rcrl
cmp
lcall
inc
inc
add
jnp
stos
pop
push
cmp
jo
ljmp
aam
std
jne
jle
or
xchg
movsb
cmp
sbb
in
movsl
sub
push
mov
push
xchg
pop
test
sub
xor
popa
cmp
cltd
push
loopw
loopne
or
imul
inc
jge
and
jo
pusha
aas
jle
xchg
inc
mov
out
jge
and
mov
or
xchg
or
daa
jnp
fstpt
inc
popa
jg
push
fldenv
sbb
into
arpl
push
xchg
aam
into
rsqrtps
push
xchg
lcall
xchg
scas
adc
pop
repz
and
lods
jmp
or
arpl
jle
sbb
stos
mov
dec
mov
aam
mov
sub
das
xchg
popl
push
lahf
add
xchg
cmp
int3
mov
push
xchg
or
mov
sti
xor
int
xor
mov
sub
das
xchg
xor
push
push
adc
xchg
bound
xchg
or
das
xchg
jnp
pop
sbb
xor
xor
sub
or
sahf
bound
loope
mov
or
sub
jecxz
and
or
popl
pop
adc
test
adc
or
push
pop
sbb
popa
lahf
mov
fisubrl
or
das
xchg
cmp
out
jmp
or
cltd
mov
sub
or
sub
jecxz
ret
adc
xchg
sub
inc
movsb
mov
mov
addr16
es
or
sbb
das
xchg
jnp
lcall
mov
dec
popl
inc
out
xor
mov
push
lahf
or
xchg
or
fisttps
or
xchg
or
pop
inc
or
jns
loope
lods
pop
jnp
imul
fs
mov
and
inc
jle
xchg
mov
sub
fs
std
mov
add
jge
mov
cli
addr16
std
pop
outsl
into
or
push
pusha
rcl
xchg
mov
sub
fs
add
setge
pop
out
inc
add
es
pusha
rcl
xchg
mov
sub
fs
sahf
inc
xor
or
or
pushf
jle
pusha
rcl
jmp
sub
fs
sahf
inc
das
sub
jmp
pop
or
push
pop
into
das
xchg
or
mov
cli
addr16
std
pop
outsl
daa
push
and
rcl
leave
test
mov
or
sub
jmp
push
sbb
mov
mov
xor
and
inc
adc
mov
popa
enter
pop
pop
add
jecxz
or
and
inc
movsb
push
mov
jecxz
mov
and
stos
or
xchg
popl
push
xchg
mov
xchg
popl
push
push
mov
xchg
jge
jb
sbb
xor
mov
stos
xor
or
js
or
mulb
adc
xchg
xor
sbb
or
push
fldenv
or
mov
sarl
stc
or
leave
jo
call
xchg
popl
imul
or
jecxz
inc
jno
stc
ror
sahf
or
cmp
mov
mov
leave
mov
lahf
jmp
or
std
or
sub
push
sarb
ljmp
cmp
and
fs
movsl
call
jge
loopne
push
inc
fistpl
push
push
out
negb
cmc
mov
imul
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
jnp
bound
dec
cs
or
xchg
or
push
mov
xchg
or
xchg
or
xchg
mov
lahf
or
xchg
or
xchg
or
xchg
or
xchg
push
sbb
push
mov
lods
das
out
add
jecxz
push
xor
outsb
aam
dec
or
jbe
add
cli
dec
and
cmp
add
test
and
sbb
ja
mov
fwait
pop
mov
pop
xchg
out
loope
in
push
add
cmpsl
adc
repz
dec
pop
adc
enter
jno
push
loopne
into
sub
jmp
mov
aaa
outsb
outsb
mov
cmp
and
jne
cwtl
push
mov
xor
jmp
sub
inc
sub
xor
dec
adc
ljmp
or
push
mov
pop
ret
daa
lret
movsl
cli
xchg
rorb
in
aaa
ret
movsb
shr
sbb
out
out
adc
cmp
and
jg
decb
pop
loopne
lds
cmp
xchg
repnz
mov
rcrl
fnsave
test
sub
xchg
xor
out
data16
pop
xlat
ja
adc
ret
adc
jne
std
es
fists
sub
xchg
dec
dec
mov
pop
in
iret
inc
xor
pop
fxch
pop
xchg
repz
insb
sub
int3
stos
mov
outsl
push
scas
inc
jb
push
rcr
movsl
dec
insl
stc
xchg
scas
mov
pmulhuw
jg
mov
mov
jno
test
jbe
xchg
je
cld
adc
sti
repz
mov
out
cmp
stc
push
fldcw
dec
stos
jne
scas
lea
sub
jbe
jmp
mov
ret
pop
outsb
cld
je
inc
inc
les
jecxz
int3
out
jb
sahf
cmp
in
or
in
xor
sub
jb
mov
or
push
jp
mov
jb
or
test
aaa
and
and
dec
subw
jns
mov
xchg
or
sahf
xchg
out
icebp
leave
sub
movsb
add
push
lock
pusha
gs
out
sub
push
jecxz
push
adc
jge
jne
push
fnstsw
mov
dec
xchg
pushf
loop
es
insl
push
push
adcb
lea
icebp
jae
fsubl
jmp
jle
ret
xchg
gs
sarl
nop
addps
aaa
rcll
dec
mov
mov
push
or
mov
pop
cmpsl
xchg
pop
lea
xorl
rcll
sub
sbb
fidivs
pop
dec
mov
adc
xchg
sbb
xlat
sub
push
out
cmpsb
inc
mov
mov
mov
add
add
jmp
shlb
mov
push
aas
mov
lret
rolb
add
and
add
add
add
lods
or
cmp
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
or
hlt
stos
or
mov
or
xchg
lods
or
xor
add
mov
scas
or
stos
lods
or
inc
scas
or
mov
or
dec
scas
or
mov
scas
or
lret
add
or
aam
or
arpl
add
loope
or
imul
add
lods
or
jae
or
cli
lods
or
jnp
or
add
or
subl
add
scas
or
mov
add
push
scas
or
xchg
scas
or
ja
outsl
arpl
xor
fs
insb
add
jb
imul
add
outsb
insl
insl
cs
insb
add
insl
arpl
xor
fs
insb
add
jb
fs
insb
add
gs
xor
fs
insb
add
imul
insb
add
insl
fs
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
scas
or
add
add
fisubrs
add
imull
add
add
or
add
add
push
scas
or
add
add
and
add
cmp
add
dec
scas
or
add
add
mov
add
add
or
add
add
js
or
add
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
ja
jbe
dec
jne
push
gs
outsl
insb
jne
add
add
popa
addr16
imul
addr16
outsb
je
jb
add
push
dec
gs
popa
outsb
arpl
inc
outsl
outsb
outsb
arpl
outsb
xor
add
inc
gs
jne
dec
outsb
jne
add
inc
insb
insb
imul
inc
gs
popa
jbe
inc
imul
add
add
imul
jb
jbe
insb
gs
popa
insb
jne
inc
add
add
addr16
jne
jb
push
outsl
imul
insb
gs
gs
outsl
outsb
je
imul
arpl
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
or
and
je
jo
cmp
xor
and
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
jbe
jb
imul
xor
xor
xor
or
and
outsb
popa
insl
gs
ja
aaa
xor
or
or
gs
jb
jo
imul
ja
aaa
and
cmp
fs
jb
jo
imul
or
cmp
sub
outsb
je
data16
je
and
jo
imul
and
arpl
imul
imul
jae
and
or
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
jae
arpl
imul
or
gs
gs
gs
jb
jbe
insb
gs
or
or
gs
gs
gs
js
arpl
imul
insb
or
or
insb
gs
insb
cmp
outsb
jbe
imul
or
or
jne
inc
arpl
jae
cmp
jae
and
ds
cmp
jb
jno
gs
gs
jb
jbe
insb
gs
or
das
jae
arpl
imul
das
je
jne
je
outsb
outsw
ds
cmp
sub
outsb
je
data16
je
and
jo
imul
and
outsb
fs
arpl
jae
and
or
gs
outsb
fs
arpl
or
fs
outsb
fs
je
jae
gs
bound
or
cmp
jae
gs
bound
fs
je
je
or
or
gs
xor
and
or
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
or
jb
imul
xor
xor
xor
or
or
addr16
addr16
or
or
or
outsl
arpl
jae
jb
jb
push
je
jb
cmp
or
or
or
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
das
ds
das
fs
outsb
fs
je
jae
gs
bound
or
fs
outsb
fs
arpl
or
jae
gs
bound
or
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
or
add
add
hlt
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
rolb
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
insl
add
outsb
add
add
add
data16
push
add
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
jae
add
jb
add
add
sub
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
add
outsb
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
adc
or
add
add
sub
add
or
add
add
add
adc
or
add
add
sub
add
or
add
add
add
adc
or
add
add
sub
add
or
add
add
or
add
add
add
add
add
add
and
add
add
add
add
add
add
adc
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
addb
add
or
add
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
adc
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
xor
jg
inc
add
pop
sub
js
or
sub
add
add
sbb
loop
incl
testb
or
add
adc
add
and
add
sbb
add
add
add
push
inc
add
psubq
decl
decl
incl
incl
incl
incl
incl
incl
lcall
mov
lcall
sub
test
add
add
add
add
and
push
dec
scas
aaa
call
push
cmp
xor
sub
adc
daa
lcall
adc
adc
or
or
push
incl
jmp
cwtl
add
and
add
or
add
add
add
inc
push
mov
popa
scas
dec
jmp
dec
or
or
aas
add
and
and
incl
hlt
add
or
add
push
fildl
lcall
add
add
add
xchg
mov
stc
xchg
add
add
add
add
add
add
or
cmp
and
adc
adc
or
or
add
push
call
sub
jne
add
add
and
dec
bound
add
add
add
add
add
push
xchg
xor
xchg
out
xchg
incl
fldcw
push
xlat
push
decl
dec
pushl
mov
or
add
sbb
mov
decl
lret
add
and
ficoms
and
jne
add
push
add
add
nopl
inc
imul
jmp
jmp
dec
or
push
add
push
loop
clc
or
add
add
add
add
push
leave
add
sbb
push
add
add
add
add
sub
push
push
lahf
lcall
std
jp
push
cld
add
add
add
add
sub
imul
sbb
sbb
sbb
incl
incl
incl
incl
decl
testl
mov
add
add
add
add
add
add
or
sub
addr16
and
add
adc
add
add
into
inc
ljmp
fldcw
call
adc
add
add
add
add
adc
add
sbb
xchg
add
aas
add
sbb
lds
add
add
add
add
sbb
insl
fldt
inc
rolb
dec
fisttpll
aas
filds
daa
ljmp
adc
pop
add
add
adc
add
bound
int
fldl
decl
out
add
sbb
add
add
add
add
add
add
pop
adc
pushf
leave
mov
lods
out
scas
jmp
arpl
ss
xor
sub
or
pop
mov
decl
repz
add
add
pop
xchg
add
or
add
add
adc
sbb
mov
clc
jge
cmp
fildl
daa
fisubrs
lcall
repz
lcall
and
pop
add
add
xor
mov
ljmp
fiadds
pushl
mov
or
pop
daa
add
add
add
sbb
inc
and
pop
mov
pop
push
scas
sub
movsb
sbb
add
pop
add
clc
pop
add
loopne
add
rolb
add
add
add
add
add
add
add
addl
add
roll
add
add
add
add
rolb
add
sldt
clc
pop
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
or
push
sbb
dec
bndldx
pop
push
sbb
pop
or
inc
add
add
or
add
sbb
dec
add
xor
cmc
xor
pushl
insl
add
xor
pushl
gs
xor
jmp
inc
add
add
add
add
add
push
xor
lea
pop
add
test
lcall
mov
call
roll
decl
in
incl
out
add
or
add
push
fadds
lcall
mov
add
xor
dec
add
adc
add
add
or
add
add
adc
sub
dec
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
daa
cwtl
add
aaa
fs
pop
cmp
cmpsb
add
sbb
add
add
adc
sub
push
add
das
xchg
pop
call
jecxz
decl
cld
or
incl
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
sub
int3
xor
aad
jmp
fisubs
lcall
in
sbb
adc
pop
decl
stc
adc
or
or
incl
std
add
add
add
add
add
add
add
add
add
add
add
adc
add
aaa
insb
add
sbb
add
pop
add
add
add
add
sbb
add
dec
into
dec
incl
dec
incl
inc
cmp
pushl
shll
ljmp
mov
pop
ljmp
scas
adc
es
pop
call
repnz
or
or
or
or
add
incb
incl
incl
lcall
mov
add
and
add
daa
inc
add
or
add
add
add
adc
sub
fs
push
jecxz
ljmp
jno
dec
mov
cmp
add
sub
inc
add
xor
add
cs
adc
fsubs
lcall
jmp
adc
decl
cmc
or
es
add
sub
add
and
add
sub
push
add
sbb
add
in
movsb
jmp
aad
decl
sub
xor
cmc
and
add
add
add
or
add
and
xor
add
xor
pushl
xor
lcall
in
decl
icebp
ud0
incb
incl
incb
incl
incl
incl
incl
call
lret
add
xor
adc
cmp
add
add
pop
add
pop
add
lcall
call
jns
jmp
dec
add
or
add
add
adc
sub
dec
add
xor
pushl
mov
jmp
in
and
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
pop
add
add
add
add
sbb
cmp
jbe
out
sti
in
ljmp
outsb
or
push
inc
add
add
add
or
add
cmp
ljmp
fsubrs
jmp
frstor
lcall
loopne
lcall
in
call
out
adc
or
or
or
or
add
add
jmp
mov
add
add
add
add
add
sub
outsb
jp
push
inc
shlb
cli
pop
xor
mov
add
add
sbb
inc
cmp
fldt
fildll
pop
pop
call
push
decl
dec
incl
inc
cmp
cmp
xor
xor
sub
fsubs
jmp
fbld
lcall
fistpl
pushl
add
sbb
add
sbb
add
insb
adc
sub
jecxz
pop
add
add
pop
lldt
xor
jecxz
mov
scas
lcall
incl
fidivrs
fdivl
push
push
popa
xlat
popa
call
push
call
push
incl
sub
xor
clc
or
add
sub
mov
and
add
xor
std
sub
rclb
and
js
add
and
add
add
and
add
subl
fdivr
ret
bnd
pushl
in
scas
jmp
out
call
mov
inc
test
jmp
inc
add
or
add
and
add
add
add
add
add
pop
in
add
sbb
ljmp
dec
add
adc
add
adc
add
add
push
add
push
add
pusha
mov
inc
aad
cli
cli
stc
sti
jmp
in
jmp
clc
loope
fdiv
fdivr
fdivr
mov
add
or
add
add
add
inc
add
or
or
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
ljmp
inc
add
or
add
add
add
add
bound
call
leave
mov
jmp
out
dec
jl
lcall
cmp
add
push
sbb
cmp
mov
adc
or
or
add
add
add
add
add
add
add
add
add
add
pop
out
add
and
add
xor
in
adc
add
add
add
adc
and
popa
add
arpl
mov
ret
ljmp
inc
ljmp
pop
add
or
add
and
mov
and
and
sbb
sbb
adc
adc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
repz
add
add
add
adc
sbb
dec
add
xor
ljmp
outsb
add
das
bound
in
add
add
or
add
xor
lock
sbb
jmp
fsubl
lcall
in
call
in
adc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
push
das
add
push
or
adc
dec
add
daa
mov
lcall
mov
add
add
add
pop
sub
data16
incl
inc
pushl
sarl
ljmp
aam
jmp
fsubl
lcall
in
call
in
adc
or
or
add
add
add
add
add
add
add
add
or
add
xor
add
add
add
adc
xor
dec
add
sub
add
add
mov
jmp
xor
add
and
mov
pusha
fsubs
dec
rorl
ss
ljmp
aam
jmp
fsubl
lcall
in
decl
in
ud0
testb
add
add
jmp
sahf
add
xor
clc
and
add
adc
add
push
add
sub
add
add
add
sub
and
push
add
add
inc
add
jge
cmp
dec
fsts
cmp
cmp
sub
sub
sub
loopne
ljmp
fldt
ljmp
xlat
sub
sub
and
ljmp
push
add
or
add
add
add
or
add
cmp
movsb
ss
and
add
add
add
adc
add
xor
out
push
or
and
add
add
add
imul
decl
incl
sub
xchg
fisttps
incl
incl
inc
pushl
shlb
ljmp
into
daa
pushl
or
in
pop
xor
add
sub
test
aas
add
sub
add
adc
add
add
add
add
add
add
add
sub
add
adc
add
sub
add
das
pop
add
xor
lock
add
cs
add
xchg
aad
stos
ljmp
jo
jo
push
aam
cmp
cmp
sub
sub
pushl
cwtl
or
ljmp
lea
jmp
movsl
push
call
add
add
add
add
add
add
add
add
add
adc
add
xor
lock
add
add
add
add
add
add
add
imul
loopne
jecxz
mov
mov
jge
jge
pusha
xlat
pusha
incl
pushl
aad
ljmp
fisubrl
jmp
fsubl
lcall
sbb
adc
push
decl
ud0
cli
or
add
add
add
add
or
add
xor
add
sbb
add
add
add
add
and
mov
mov
sahf
in
out
dec
cmc
lret
ljmp
outsb
fldt
push
rcll
cmp
cmp
sub
sub
lcall
loope
lcall
out
call
out
adc
or
or
pand
pushl
jg
jmp
add
add
dec
add
mov
fcos
loopne
mov
call
jge
pop
fcomps
inc
roll
shll
ljmp
fldcw
jmp
in
lcall
sbb
and
add
and
add
sbb
add
dec
jge
decl
fldcw
jmp
jecxz
ljmp
insl
decl
dec
pushl
shrl
das
test
pushl
test
pushl
pop
add
sbb
add
add
add
add
add
adc
and
cmp
test
pop
add
cmp
std
dec
jle
lcall
xor
push
xor
dec
mov
pushl
insb
add
xor
fisubs
cmp
mov
adc
and
add
and
ds
das
add
cmp
mov
inc
add
sbb
add
pop
add
or
sldt
add
push
ud0
rolb
incl
add
incb
add
add
aas
clc
add
pop
clc
add
add
add
add
add
add
pop
add
loopne
add
loopne
add
loopne
add
loopne
add
rolb
add
add
add
add
pop
add
incb
add
cld
pop
add
clc
sldt
rorb
add
pop
add
add
addb
aas
clc
add
aas
cld
add
jg
add
incl
ud0
ljmp
add
add
add
add
add
add
and
add
add
andb
or
add
and
add
add
push
add
add
add
add
add
add
add
add
add
or
and
sbb
push
pop
add
push
add
cs
add
xor
cmc
xor
in
cs
add
sub
sbb
add
or
add
add
and
add
push
add
add
push
cmp
xchg
xor
call
cmp
pushl
push
pushl
add
xor
pushl
outsl
add
xor
pushl
insb
add
xor
addr16
cmp
pushl
add
sub
and
jbe
add
sub
add
add
add
add
or
sbb
cmp
xchg
xor
in
popa
add
xor
add
and
mov
add
or
add
pop
ljmp
pop
jmp
decl
loope
decl
add
adc
add
and
add
cmp
pushl
fs
sub
push
sub
addb
add
add
add
or
push
add
cmp
pushl
jae
jmp
lahf
add
or
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
jmp
add
sub
add
aaa
fs
ss
lcall
cmp
add
add
add
adc
add
addr16
cmp
jmp
mov
incl
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
cmp
ljmp
push
add
push
or
inc
add
add
nopl
inc
xor
fnsave
lcall
or
or
pop
clc
or
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
jo
pushl
gs
sub
pop
or
inc
add
add
add
add
adc
and
xor
cmpsl
adc
sbb
out
lcall
out
call
ljmp
psllw
decl
or
or
or
push
cli
push
incl
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
jne,pn
cmp
jmp
dec
add
add
add
pop
or
sbb
gs
xor
xor
sub
sub
sub
sub
fisubl
jmp
fsubl
jmp
fbld
lcall
out
call
in
sbb
adc
push
call
repz
push
testb
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
cmp
jmp
inc
add
add
add
add
add
add
add
add
add
sbb
push
pop
decl
dec
incl
inc
ds
ds
cmp
cmp
xor
shll
ljmp
xor
sub
sub
sub
and
es
sbb
and
sbb
and
push
lcall
out
call
out
adc
psllw
decl
or
or
or
add
cld
add
add
add
add
add
add
add
add
add
adc
add
xor
pushl
add
push
sub
add
das
add
sbb
add
push
or
cmp
add
or
add
add
and
aaa
xor
divl
insl
add
jmp
lcall
pop
call
push
call
push
decl
incl
dec
cmp
xor
xor
add
xor
imul
xor
push
pushl
jg
jmp
mov
and
sbb
sbb
call
in
adc
ud0
or
or
or
push
stc
push
incl
cld
add
add
add
push
movsl
add
cmp
pushl
arpl
cmp
cmp
cmp
cmp
pushl
push
add
pop
push
add
add
and
popf
xor
add
pusha
lods
dec
jle
cmp
fnsave
jo
jo
insb
fsubrl
fsubrl
push
mov
and
xor
data16
xor
in
sub
add
and
dec
add
xor
addr16
cs
adc
sub
and
jmp
fisubs
lcall
loope
lcall
in
lcall
out
call
ljmp
adc
adc
or
push
call
loope
ljmp
test
ljmp
mov
jmp
xchg
add
and
add
and
add
cmp
lcall
xor
xchg
add
add
add
add
sub
add
dec
sbbb
xchg
out
decl
out
incl
sahf
cmp
xor
pushl
add
push
cmp
jns
adc
sbb
push
sub
add
sub
shlb
or
xor
sub
ljmp
sub
sub
sub
sub
sub
and
loopne
lcall
out
decl
icebp
or
incl
std
add
add
add
add
add
add
add
add
add
add
add
adc
add
aaa
data16
es
add
sbb
add
bound
pushl
push
mov
jmp
ljmp
int3
jle
inc
jg
pushl
data16
xor
out
sbb
add
add
add
xor
jns
incl
cmp
inc
roll
xor
xor
sbb
out
adc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
ss
es
add
add
add
sub
add
aas
jno
pushl
not
dec
cmc
lret
les
pushl
fs
sub
les
add
pop
sbb
add
pop
add
xor
add
jo,pn
pushl
mov
jmp
in
sub
or
or
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
call
data16
sbb
fwait
add
add
or
pop
add
jp
pop
push
push
in
push
decl
arpl
pushl
imul
lea
add
or
add
add
add
add
inc
add
xor
ljmp
pushf
push
jmp
shlb
lcall
fistps
lcall
jecxz
lcall
in
call
out
call
adc
adc
adc
or
testb
pop
clc
pop
incl
add
add
add
add
add
add
add
add
add
add
add
pop
mov
add
adc
add
add
add
add
mov
popf
lcall
push
add
sbb
jo
add
push
or
gs
adcl
incl
dec
incl
inc
cmp
sarl
pushl
shll
ljmp
shrb
ljmp
aad
jmp
xlat
daa
jmp
fisubl
jmp
fbld
lcall
out
call
ljmp
ud0
clc
or
push
in
pushl
jb
pushl
add
or
add
add
add
insl
add
aad
lret
aad
ljmp
pusha
add
xor
sbb
add
add
sbb
add
pop
mov
pushl
jl
imul
arpl
pop
pop
call
push
call
push
decl
dec
incl
aas
into
aas
cmp
cmp
xor
shlb
ljmp
sub
sub
sub
and
fsubl
lcall
stos
adc
xor
pop
add
add
add
and
xchg
inc
je
call
jno
pushl
gs
sbb
add
add
add
fs
dec
mov
call
call
mov
test
test
jge
jge
js
js
jno
jno
imul
jmp
lcall
pop
lcall
pop
call
push
decl
incl
inc
incl
inc
cmp
cmp
pushl
ud0
data16
sbb
add
add
add
cmp
cmp
ljmp
pop
add
ss
add
es
add
push
sub
mov
push
add
add
sbb
add
add
add
add
add
add
cwtl
inc
pushl
icebp
mov
jmp
sahf
lcall
in
decl
xchg
and
jp
jp
jae
jae
outsb
fldt
push
fsubl
push
dec
pushl
insl
add
in
pop
or
add
add
add
xor
in
xor
add
xor
ljmp
mov
jmp
mov
pushl
outsl
add
aaa
addr16
ss
add
es
add
or
add
push
add
add
sub
stos
xor
call
sub
ret
loopne
into
hlt
iret
inc
icebp
out
mov
pushl
jmp
jmp
call
lcall
in
decl
sub
xor
jmp
add
sbb
add
imul
ss
add
push
movsl
add
add
add
add
add
pop
call
add
and
add
xor
dec
add
adc
add
add
add
add
add
add
push
add
inc
add
addr16
inc
jne
call
cld
repz
push
jmp
clc
loop
fcomi
aam
aam
into
repz
dec
icebp
enter
ret
out
mov
call
addr16
xor
testl
add
add
push
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
pushl
fs
pop
cmp
add
add
add
and
pop
xor
out
sub
ljmp
inc
xlat
cld
cld
push
std
idiv
icebp
cld
icebp
jmp
jmp
in
in
loopne
loopne
jecxz
out
jp
pop
ljmp
inc
add
adc
add
add
das
ja
call
loop
incl
push
incl
incb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
stc
add
adc
add
sub
add
cs
add
adc
add
add
adc
add
sub
jb
js
push
dec
fdivrs
pushl
data16
xor
sti
or
add
add
add
or
adc
pop
add
bound
jmp
or
maskmovq
notl
decl
hlt
or
add
incb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
clc
add
sbb
add
aaa
fs
pop
cmp
add
add
add
add
add
xor
dec
es
add
xor
add
andl
out
call
jge
ljmp
add
and
mov
adc
add
addr16
xor
sbb
jmp
call
out
adc
or
or
push
stc
push
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
in
add
sub
add
sub
rolb
push
add
add
add
nopl
aaa
sub
pop
add
xor
incl
adc
jns
pop
lcall
jns
ljmp
push
add
add
add
add
add
push
add
sub
lcall
sbb
pop
call
adc
or
or
push
stc
push
incl
incb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
cmc
add
sbb
fs
and
mov
add
pop
sbb
add
and
jo
push
add
and
pop
add
xor
xor
out
add
add
adc
add
push
xor
ljmp
fldt
jmp
frstor
lcall
call
adc
or
or
add
incb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
cld
add
and
data16
adc
add
add
nopl
aas
xor
out
addr16
and
add
cs
add
add
and
add
add
inc
add
mov
ljmp
sub
daa
fsubs
jmp
frstor
lcall
sbb
pop
call
adc
or
or
push
stc
push
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
decl
in
pushl
outsl
add
push
cmp
mov
or
bound
in
cmp
jmp
cwtl
add
add
add
sub
inc
add
add
add
add
add
xor
mov
cmp
into
xor
sub
sub
daa
fsubs
jmp
fisubs
lcall
sbb
pop
call
adc
or
or
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
clc
add
push
cmpsb
add
cmp
lcall
add
or
pop
add
cmp
jmp
mov
incl
out
add
push
out
add
xor
add
and
scas
add
add
or
add
xor
repz
lcall
push
decl
cmp
cmp
xor
xor
sub
sub
fldenv
jmp
fisubs
lcall
sbb
push
jmp
adc
or
or
add
incl
incl
incl
incl
incl
incl
incl
decl
xchg
cmp
ljmp
pop
add
pop
push
add
adc
add
bound
in
cmp
jmp
popl
incl
testl
lcall
mov
cmp
sbb
add
sbb
add
push
and
push
xlat
pop
decl
cmp
iret
xor
sub
sub
fldenv
jmp
fisubs
lcall
in
call
out
ud0
testb
add
add
push
cld
pop
call
jmp
mov
pushl
push
add
daa
dec
add
add
add
xor
popa
add
push
movsb
add
add
add
add
add
add
add
sub
add
or
add
sbb
add
push
xchg
xor
js
jp
fisubl
pop
pop
decl
dec
cmp
into
xor
sub
sub
and
and
sbb
jecxz
jmp
and
and
and
and
and
daa
fldt
ljmp
into
and
xor
arpl
ljmp
push
add
add
add
add
add
push
add
add
cmp
pushl
insb
add
sbb
add
add
add
add
add
or
add
ss
jmp
add
sbb
mov
data16
push
xchg
cmp
mov
xchg
jp
jl
imul
lcall
decl
push
incl
inc
cmp
cmp
dec
data16
insb
fsubrl
xlat
pop
decl
cmp
cmp
das
into
das
ljmp
xlat
sub
daa
aad
pushl
jl
pushl
add
or
push
add
add
add
add
add
add
add
add
add
adc
push
add
dec
add
cmp
ljmp
jle
decl
in
incl
incl
incl
incl
incl
incl
incl
incl
lcall
scas
add
cmp
call
and
add
add
sbb
add
push
incl
push
ljmp
pop
ljmp
pop
lcall
dec
call
incl
sub
inc
lcall
mov
mov
mov
loope
pushl
ja
fsubs
rcll
ds
pushl
into
xor
sub
sub
pushl
xchg
pushl
addr16
xor
lock
mov
add
sbb
add
xor
fs
das
je
lcall
movsb
add
push
jmp
incl
incl
incl
incl
incl
incl
incl
incl
decl
out
pushl
je
pushl
pop
add
pop
push
add
add
add
xor
imul
pushl
insb
add
xor
gs
sub
add
insl
xchg
dec
call
not
mov
call
xchg
jg
jg
insl
fldt
pop
aad
incl
inc
pushl
aam
ljmp
xlat
sub
sub
push
pushl
push
pushl
imul
pushl
add
das
js
lcall
mov
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
add
add
add
adc
sbb
xor
pop
sbb
add
sbb
add
inc
add
imul
jmp
call
ljmp
out
decl
fnsave
fsubs
push
rcll
cmp
iret
xor
sub
ljmp
shll
jmp
lds
jmp
adc
and
adc
sbb
ud0
jmp
incl
decb
incl
incl
add
add
add
add
add
add
add
add
add
add
adc
add
xor
push
add
add
add
and
jns
addr16
inc
jo
mov
jmp
pushl
call
xchg
jle
jle
imul
lcall
pop
incl
pushl
shrb
ljmp
fisubrl
jmp
jmp
in
lcall
ljmp
adc
adc
psllw
decl
cmc
or
add
incb
incl
incl
incl
incl
decl
filds
pushl
push
pushl
add
adc
add
add
add
pop
add
outsb
adc
into
ffreep
push
push
call
cmc
aam
mov
jmp
lcall
loope
pushl
jmp
popa
decl
dec
cmp
cmp
xor
xor
sub
sub
daa
fsubs
jmp
frstor
lcall
loope
lcall
in
call
ljmp
or
clc
or
add
add
or
add
ja,pn
cmp
call
add
add
adc
or
xor
cmp
ret
idiv
stc
jmp
stc
loope
enter
mov
mov
mov
jecxz
jge
jge
imul
call
push
incl
pushl
shrl
ljmp
aad
jmp
fbld
lcall
sbb
sbb
sbb
adc
adc
push
testb
sbb
push
pushl
jae
pushl
fs
push
cmp
addb
add
or
add
xor
mov
sub
lods
ja
repz
repnz
jmp
out
call
not
mov
ljmp
and
ljmp
outsl
lcall
decl
dec
pushl
into
aaa
ljmp
iret
ljmp
aam
jmp
fldenv
jmp
fbld
lcall
call
or
xor
addr16
and
lahf
or
add
and
insb
add
cs
push
subb
lcall
jmp
jmp
dec
clc
iret
pushl
ljmp
jns
jp
fldt
push
push
incl
inc
pushl
shll
ljmp
shlb
ljmp
stos
adc
das
addb
ss
add
sbb
add
push
add
sbb
add
push
add
das
push
add
dec
jns
decl
xchg
ljmp
fisubs
decl
fdivrs
addr16
popa
call
inc
cmp
pushf
sbb
xor
pushl
bound
pushl
push
add
add
add
pop
add
xor
cld
sub
xor
cmp
cmp
cmp
or
cmp
cmp
cmp
pushl
imul
ss
pushl
data16
xor
cli
cs
add
push
sbb
add
pop
push
add
adc
add
sbb
add
dec
add
pop
add
xor
stc
xor
add
xor
add
xor
out
das
pop
add
and
pop
das
add
sbb
xor
add
add
add
add
add
add
adc
sub
xor
sub
xor
ltr
add
add
incl
add
push
pop
incl
add
incl
add
incb
add
incl
add
clc
add
ud0
add
lock
pop
incl
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
add
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
add
add
add
addb
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
add
clc
paddd
add
add
lock
add
add
add
add
add
add
lock
addb
add
loopne
pavgb
pop
add
loopne
pop
lock
add
rolb
cld
add
add
rolb
incl
pop
add
addb
inc
pop
add
addb
push
pop
add
addb
jmp
pop
add
add
add
rcrb
add
add
incl
add
incb
aas
add
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
addb
add
add
inc
add
ud0
add
loopne
add
incl
add
clc
add
aas
incl
add
cld
add
incl
add
incl
add
incl
add
push
pop
incl
add
incl
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
push
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
sbb
add
and
add
sub
add
xor
add
cmp
xor
data16
add
sub
mov
pop
add
cs
add
cs
add
xor
xor
pushl
data16
xor
cs
add
cs
add
cs
add
sub
mov
and
sbb
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
jge
push
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
add
add
add
add
add
add
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
sbb
inc
and
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
add
add
inc
add
add
add
add
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
and
jp
push
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
popa
add
and
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
das
and
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
sub
adc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
bound
call
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
mov
lcall
mov
lcall
mov
decl
flds
decl
flds
decl
mov
add
sbb
add
sub
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
adc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
pop
add
bound
call
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
jo
jmp
xchg
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
or
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
pop
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
jo
jmp
lahf
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
mov
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
and
xchg
add
add
add
cmp
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
jne
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
mov
call
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
jo
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
cs
add
adc
add
add
inc
add
add
add
add
add
or
add
add
add
add
add
add
add
add
nopl
ss
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
sbb
add
inc
add
add
add
and
add
adc
add
push
add
add
add
add
add
add
add
add
sbb
pusha
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
xchg
add
push
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
mov
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
pop
add
or
add
add
cmp
add
add
add
add
add
add
add
add
add
add
daa
dec
add
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sub
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
das
pop
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
dec
add
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
ja
call
decl
cmc
or
or
or
or
or
push
stc
push
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
daa
dec
add
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
nop
push
call
in
call
out
adc
ud0
icebp
push
decl
hlt
or
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jo
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
fs
adc
add
inc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
daa
dec
add
add
xor
pushl
data16
xor
pushl
data16
xor
jmp
cmpsb
or
call
jmp
adc
call
in
adc
adc
adc
adc
adc
ud0
icebp
push
decl
repz
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
in
add
sub
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
fs
adc
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
es
add
add
xor
pushl
data16
xor
pushl
data16
xor
jmp
mov
lcall
jecxz
lcall
in
lcall
in
lcall
out
lcall
out
call
call
adc
call
in
adc
adc
adc
adc
adc
adc
adc
ud0
repz
or
or
or
or
or
or
or
or
pop
clc
pop
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
fs
or
add
add
add
add
add
add
add
add
add
add
add
adc
inc
add
fs
xor
pushl
data16
xor
pushl
data16
xor
ljmp
scas
pop
jmp
fsubl
jmp
frstor
jmp
fisubs
jmp
fbld
lcall
loopne
lcall
loope
lcall
in
lcall
in
lcall
out
lcall
out
call
call
push
call
jmp
call
in
adc
adc
adc
adc
adc
ud0
icebp
push
decl
repz
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
pushl
data16
xor
pushl
data16
xor
ljmp
pop
add
or
add
add
add
add
add
add
add
add
add
add
add
or
and
add
xor
pushl
data16
xor
pushl
data16
xor
ljmp
stos
sbb
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
and
and
and
and
and
and
pop
loopne
lcall
loope
lcall
jecxz
lcall
in
lcall
in
lcall
out
call
call
push
call
jmp
call
in
adc
adc
adc
adc
adc
ud0
icebp
push
decl
repz
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
add
add
add
xor
add
sbb
add
or
add
add
add
add
add
or
add
sbb
pop
add
xor
pushl
data16
xor
pushl
data16
xor
xor
das
shrb
ljmp
shrl
sub
sub
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
and
and
and
and
and
and
and
and
pop
loopne
lcall
jecxz
lcall
in
lcall
in
lcall
out
lcall
out
call
call
push
call
adc
adc
adc
adc
adc
adc
adc
adc
adc
ud0
icebp
push
decl
or
or
or
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
dec
add
add
sub
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
xor
pushl
data16
xor
pushl
data16
ss
sbb
cmp
cmp
ss
pushl
xor
xor
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
shrl
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
and
and
and
and
and
and
pop
loopne
lcall
loope
lcall
jecxz
lcall
in
lcall
out
lcall
out
call
call
push
call
jmp
call
in
adc
adc
adc
adc
adc
ud0
icebp
push
decl
repz
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
xor
pushl
data16
xor
pushl
data16
xor
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
pop
add
add
add
sldt
add
add
add
add
add
add
add
sbb
add
xor
pushl
data16
xor
pushl
data16
xor
cmp
inc
incl
inc
aas
iret
aas
cmp
into
cmp
cmp
cmp
aaa
int
pushl
int
pushl
into
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
shrl
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
and
and
and
and
and
and
pop
loopne
lcall
loope
lcall
jecxz
lcall
in
lcall
in
lcall
out
lcall
out
call
jmp
adc
call
in
adc
adc
adc
adc
adc
adc
adc
push
icebp
push
decl
repz
or
or
or
or
or
or
or
or
push
stc
push
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
adc
pop
add
add
add
add
add
add
add
add
add
xor
add
xor
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xor
pushl
data16
xor
pushl
data16
aaa
je
decl
dec
decl
decl
dec
decl
dec
incl
inc
incl
incl
inc
incl
inc
ds
ds
cmp
cmp
cmp
cmp
cmp
cmp
ss
pushl
xor
xor
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
sub
sub
sub
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
and
and
and
and
and
and
and
and
and
pop
loopne
lcall
loope
lcall
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
push
call
in
adc
adc
adc
adc
adc
adc
adc
ud0
icebp
push
decl
hlt
or
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
dec
add
sbb
add
aaa
add
dec
add
sub
mov
cs
add
cs
add
cs
add
cs
add
daa
dec
add
push
sub
outsb
add
add
add
cmp
add
sub
add
sbb
add
or
add
add
add
add
daa
dec
add
data16
xor
pushl
data16
xor
pushl
data16
push
mov
push
call
push
call
push
call
push
decl
dec
decl
dec
decl
dec
decl
dec
incl
inc
incl
inc
incl
inc
incl
inc
ds
ds
cmp
into
cmp
cmp
cmp
ss
pushl
xor
xor
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
mov
adc
pushl
orl
xor
or
das
test
ljmp
test
ljmp
test
ljmp
mov
adc
and
sbb
push
loope
lcall
jecxz
lcall
in
lcall
out
lcall
out
call
call
push
call
jmp
call
in
adc
adc
adc
adc
adc
ud0
icebp
push
decl
repz
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
pop
add
push
cmp
mov
add
inc
add
add
add
add
add
add
add
add
add
pop
adc
gs
xor
pushl
data16
xor
pushl
data16
dec
lahf
xor
fsubs
pusha
xlat
pusha
lcall
pop
lcall
lcall
pop
lcall
pop
call
push
call
call
push
decl
dec
decl
dec
decl
decl
dec
incl
inc
incl
inc
incl
inc
incl
inc
aas
iret
aas
cmp
into
cmp
cmp
cmp
ss
push
pushl
jns
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
stos
adc
and
sbb
and
and
push
loope
lcall
jecxz
lcall
in
lcall
in
lcall
out
lcall
out
call
call
adc
call
in
adc
adc
adc
adc
adc
adc
adc
ud0
repz
or
or
or
or
or
or
or
or
pop
clc
pop
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
add
add
xor
add
sbb
add
or
add
add
add
add
add
push
sub
data16
xor
pushl
data16
xor
cmp
ljmp
insl
ljmp
imul
fldcw
fldenv
fldenv
arpl
arpl
popa
xlat
popa
lcall
pop
lcall
pop
lcall
pop
lcall
pop
call
push
call
call
push
call
push
decl
dec
decl
decl
dec
decl
dec
incl
inc
cmp
and
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
int
jmp
frstor
jmp
fisubs
jmp
fbld
lcall
loopne
lcall
loope
lcall
in
lcall
in
lcall
out
lcall
out
call
call
push
call
jmp
call
in
adc
adc
adc
adc
adc
ud0
icebp
push
decl
repz
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
sti
add
add
add
add
add
pop
jmp
pushl
jo
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
add
add
add
add
add
add
add
pop
adc
gs
xor
pushl
data16
xor
pushl
data16
addr16
jbe
je
je
jb
jb
jo
jo
outsb
fldt
insb
fisubrl
fisubrl
push
fldenv
fsubs
fsubs
pusha
xlat
pusha
lcall
pop
lcall
pop
lcall
pop
call
push
call
push
decl
dec
cmp
insl
add
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
shlb
and
and
and
and
and
and
and
pop
loopne
lcall
loope
lcall
jecxz
lcall
in
lcall
in
lcall
out
call
call
push
call
jmp
call
in
adc
adc
adc
adc
adc
ud0
icebp
push
decl
repz
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
mov
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
lcall
xor
add
add
add
add
add
add
add
add
add
sub
data16
xor
pushl
data16
xor
decl
incl
fistpll
jge
jge
jnp
jnp
jns
jns
ja
ja
jne
jne
jae
jae
jo
jo
outsl
fldt
insb
fisubrl
fisubrl
imul
jmpw
jmp
lcall
pop
incl
and
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
xor
xor
icebp
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
sub
and
sub
sub
sub
sub
daa
fsubs
jmp
and
and
and
and
and
and
and
and
pop
loopne
lcall
jecxz
lcall
in
lcall
in
lcall
out
lcall
out
call
call
push
call
adc
adc
adc
adc
adc
adc
adc
adc
adc
ud0
icebp
push
decl
or
or
or
or
or
or
or
js,pn
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
mov
jmp
mov
lcall
mov
lcall
mov
lcall
mov
lcall
mov
lcall
mov
jmp
xchg
add
sub
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
add
add
add
and
add
or
add
add
add
push
push
sub
and
xor
pushl
data16
xor
pushl
data16
adc
mov
mov
mov
xchg
xchg
test
test
and
incl
fistpll
jl
jl
jns
jns
js
js
jne
jne
jae
jae
jno
jno
outsl
fldt
insl
fldt
dec
mov
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
repnz
pop
add
push
add
add
adc
add
or
add
add
add
add
add
add
daa
dec
add
cs
add
popa
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
mov
sub
ljmp
aad
ljmp
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
and
and
and
and
and
and
pop
loopne
lcall
loope
lcall
jecxz
lcall
in
lcall
out
lcall
out
call
call
push
call
jmp
call
in
adc
adc
adc
adc
adc
ud0
icebp
push
call
enter
xchg
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jo
pushl
data16
xor
pushl
data16
xor
pushl
data16
or
push
add
add
add
add
add
add
add
add
add
add
data16
xor
pushl
data16
xor
lcall
cmp
xchg
in
call
jecxz
decl
loop
decl
loope
incl
loopne
incl
filds
jl
jl
jp
jp
mov
cmp
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
das
pop
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
inc
add
das
pop
add
gs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
xor
das
shrb
ljmp
shrl
ljmp
shrl
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
and
and
and
and
and
and
pop
loopne
lcall
loope
lcall
jecxz
lcall
in
lcall
in
lcall
out
lcall
out
call
jmp
push
decl
testl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
lcall
data16
xor
pushl
data16
xor
pushl
data16
sbb
add
add
sub
add
adc
add
add
add
add
add
adc
arpl
in
data16
xor
pushl
data16
xor
call
out
lcall
lcall
in
call
in
call
jecxz
decl
loop
incl
fnstcw
push
fwait
cmp
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
repnz
sub
add
add
add
add
add
add
add
add
add
add
add
push
xor
xchg
gs
xor
pushl
data16
xor
pushl
data16
xor
pushl
adc
ss
pushl
xor
xor
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
sub
sub
sub
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
and
and
and
and
and
and
and
and
and
sbb
sbb
adc
adc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
data16
xor
pushl
data16
xor
pushl
data16
sbb
add
add
sub
add
adc
add
add
add
or
push
add
data16
xor
pushl
data16
xor
jmp
inc
ljmp
jmp
movsl
jmp
out
lcall
out
lcall
in
call
in
call
int3
jne
jbe,pt
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
repnz
add
add
add
add
add
add
add
add
add
sub
add
xor
xor
pushl
data16
xor
pushl
data16
xor
pushl
lea
cmp
into
cmp
cmp
cmp
ss
pushl
xor
xor
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
shrl
sub
sub
sub
sub
sub
sub
sbb
sbb
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
data16
xor
pushl
data16
xor
pushl
data16
sbb
add
add
sub
add
adc
add
add
add
add
add
push
xor
mov
xor
pushl
data16
xor
call
mov
mov
mov
scas
jmp
ljmp
ljmp
movsl
jmp
mov
lcall
out
jmp
dec
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
sub
sub
add
sldt
add
add
add
add
add
add
add
adc
pop
add
xor
pushl
data16
xor
pushl
data16
cmp
inc
incl
inc
aas
iret
aas
cmp
into
cmp
cmp
cmp
aaa
int
pushl
int
pushl
int
ljmp
aad
lcall
in
decl
icebp
push
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
decl
data16
xor
pushl
data16
xor
pushl
data16
sbb
add
add
daa
add
add
add
add
add
add
das
add
xor
pushl
data16
xor
pushl
data16
inc
ja
mov
out
mov
pushl
in
mov
mov
mov
mov
mov
scas
jmp
ljmp
stos
jmp
xor
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
popa
add
and
dec
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
sub
inc
add
data16
xor
pushl
data16
xor
pushl
data16
xor
incl
das
decl
dec
decl
dec
incl
inc
incl
incl
inc
incl
inc
ljmp
fisubrs
lcall
jmp
pop
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
decl
data16
xor
pushl
data16
xor
pushl
data16
sbb
add
add
and
add
or
add
add
add
or
push
add
data16
xor
pushl
data16
xor
incl
icebp
inc
lock
inc
lock
out
sar
out
mov
mov
in
mov
mov
mov
fwait
rcll
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
add
add
add
add
add
add
add
add
add
push
add
add
das
pop
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
dec
mov
push
incl
inc
ljmp
sub
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
pushl
data16
xor
pushl
data16
add
add
add
add
add
add
add
add
add
add
xor
mov
xor
pushl
data16
xor
inc
jmp
dec
repz
dec
repnz
dec
repnz
dec
icebp
enter
inc
lock
inc
out
sar
les
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
popa
add
and
dec
add
add
add
or
add
add
add
add
add
push
add
add
sub
mov
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
das
ja
jmp
mov
push
decl
hlt
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
pushl
data16
xor
pushl
bound
jmp
add
add
add
add
add
add
xor
and
data16
xor
pushl
data16
xor
ljmp
inc
xlat
cmc
xlat
call
cmc
aad
aam
aam
shl
sar
iret
repz
dec
repz
lret
repnz
call
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
cs
add
add
add
add
add
add
add
add
add
add
add
add
push
sub
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
mov
pop
call
jmp
adc
call
in
adc
adc
adc
adc
adc
push
icebp
push
decl
repz
or
or
or
or
or
or
pop
stc
pop
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
data16
xor
pushl
data16
xor
ljmp
pop
add
add
add
add
add
add
add
add
add
sub
add
data16
xor
pushl
data16
xor
jmp
clc
jecxz
loopne
loopne
fdivp
fdivrp
fdiv
fdivr
fdiv
fdivr
cmc
jns
pop
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
jnp
add
sbb
add
or
add
add
add
add
add
add
add
or
add
sbb
pusha
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
orl
daa
mov
and
and
and
pop
loopne
lcall
loope
lcall
in
lcall
in
lcall
out
lcall
call
push
call
jmp
call
in
adc
adc
adc
adc
adc
ud0
repz
or
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
in
add
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
add
adc
add
add
add
or
pusha
add
xor
pushl
data16
xor
call
call
in
jmp
stc
out
in
in
jecxz
jecxz
loope
loope
jae
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
fs
pop
cmp
add
add
add
add
add
add
add
cs
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
orb
mov
ljmp
sub
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
fsubl
jmp
frstor
jmp
fisubs
jmp
loopne
lcall
loope
lcall
jecxz
lcall
in
lcall
out
lcall
out
call
call
push
call
adc
adc
adc
adc
adc
adc
adc
ud0
icebp
push
decl
hlt
or
or
or
or
or
or
or
push
stc
push
incl
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
pushl
data16
xor
pushl
data16
xor
lcall
xor
add
add
add
add
add
add
add
add
add
push
xor
xor
pushl
data16
xor
lcall
das
push
std
idiv
hlt
cld
hlt
push
cld
repnz
sti
lock
out
sti
out
in
cli
in
pushl
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
popa
add
sbb
add
add
adc
add
pop
add
add
add
add
pop
aas
add
data16
xor
pushl
data16
xor
pushl
data16
xor
add
cmp
cmp
cmp
cmp
ss
pushl
xor
xor
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
aam
ljmp
aad
ljmp
sub
sub
sub
fldenv
jmp
and
and
and
and
and
and
pop
loope
lcall
jecxz
lcall
in
lcall
in
lcall
out
call
call
push
call
in
adc
adc
adc
adc
adc
adc
adc
push
icebp
push
decl
repz
or
or
or
or
or
or
pop
clc
pop
incl
cli
push
incl
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
pushl
data16
xor
pushl
fs
add
add
add
add
add
add
add
add
sbb
add
xor
pushl
data16
xor
pushl
data16
mov
std
std
sti
sti
stc
stc
push
std
idiv
jnp
pop
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
popa
add
adc
add
add
add
add
add
add
add
add
add
das
pop
add
xor
pushl
data16
xor
pushl
mov
dec
decl
dec
incl
inc
incl
incl
inc
aas
iret
aas
cmp
into
cmp
cmp
cmp
ss
pushl
xor
xor
xor
xor
xor
shrl
ljmp
shrl
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
fisubl
jmp
and
and
and
and
and
and
and
pop
loopne
lcall
loope
lcall
in
lcall
in
lcall
out
lcall
out
call
jmp
adc
call
in
adc
adc
adc
adc
adc
ud0
repnz
decl
or
or
or
or
or
or
or
pop
clc
pop
decl
lock
pushl
data16
xor
pushl
data16
xor
ljmp
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
mov
jg
pop
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
and
add
add
add
add
add
add
xor
icebp
xor
pushl
data16
xor
pushl
insl
push
call
dec
lcall
pop
lcall
pop
call
push
call
call
push
call
push
decl
dec
decl
dec
decl
dec
incl
inc
incl
incl
inc
incl
inc
ds
ds
cmp
cmp
cmp
cmp
aaa
int
pushl
into
xor
xor
xor
xor
xor
das
shrb
ljmp
shrb
ljmp
sub
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
fsubl
and
and
and
and
and
and
push
loope
lcall
jecxz
lcall
in
lcall
out
lcall
out
call
call
push
call
adc
adc
adc
adc
adc
adc
adc
ud0
add
xor
pushl
data16
xor
pushl
data16
and
add
add
add
add
add
add
add
cs
add
xor
pushl
data16
xor
jmp
in
incl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
add
pop
add
add
add
add
add
add
add
or
data16
xor
pushl
data16
xor
decl
sub
insb
fisubrl
fisubrl
fldenv
fldenv
arpl
arpl
popa
fsubs
pop
xlat
pop
lcall
lcall
pop
call
push
call
push
call
push
call
push
decl
dec
decl
decl
dec
decl
dec
incl
inc
incl
inc
incl
inc
ds
ds
cmp
cmp
cmp
cmp
cmp
cmp
ss
pushl
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
aam
ljmp
aad
ljmp
sub
sub
sub
daa
fldenv
jmp
and
and
and
and
and
and
pop
loopne
lcall
loop
lcall
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
call
pop
pushl
data16
xor
pushl
data16
xor
pushl
data16
or
add
add
add
add
add
add
xor
mov
xor
pushl
data16
dec
jns
incl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
add
pop
add
add
add
add
add
or
bound
xor
pushl
data16
xor
lcall
ds
jp
jp
js
js
jbe
jbe
je
je
jno
jno
outsl
fldt
insl
fldt
imul
ljmp
push
jmp
jmp
popa
lcall
pop
lcall
pop
lcall
pop
lcall
pop
call
push
call
call
push
decl
dec
decl
dec
decl
dec
decl
dec
incl
inc
incl
incl
inc
aas
iret
aas
cmp
into
cmp
cmp
cmp
aaa
int
pushl
into
xor
xor
xor
xor
xor
das
shrl
ljmp
shrl
sub
sub
sub
sub
sub
sub
daa
fsubs
jmp
fisubl
jmp
and
and
and
and
and
and
and
and
sbb
xor
pushl
data16
xor
pushl
data16
xor
ljmp
add
add
add
add
add
add
add
add
or
xor
pushl
data16
xor
jmp
inc
incl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
add
and
add
sldt
add
add
add
xor
pushl
data16
xor
incl
sbb
mov
mov
xchg
xchg
test
test
and
incl
fistpll
jnp
jnp
jns
jns
ja
ja
jne
jne
jb
jb
jo
jo
outsb
fldt
imul
ljmp
imul
fldenv
fsubs
pusha
xlat
pusha
lcall
pop
lcall
lcall
pop
call
push
call
push
call
push
call
push
decl
dec
decl
decl
dec
incl
inc
incl
inc
incl
inc
incl
inc
ds
ds
cmp
cmp
cmp
cmp
aaa
int
pushl
int
pushl
into
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
aam
ljmp
aad
ljmp
xlat
sub
sub
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
and
jnp
add
and
add
or
add
add
add
add
add
adc
data16
xor
pushl
data16
xor
lcall
decl
add
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
add
add
add
add
add
add
add
add
add
add
xor
movsl
xor
pushl
data16
xor
pushl
data16
ja
call
call
in
decl
loop
decl
loope
incl
loopne
incl
fistpll
jl
jl
jp
jp
js
js
jne
jne
jae
jae
jno
jno
outsl
fldt
insb
fisubrl
fisubrl
push
fldenv
arpl
arpl
popa
fsubs
pop
xlat
pop
lcall
lcall
pop
lcall
pop
call
push
call
push
call
push
decl
dec
decl
decl
dec
decl
dec
incl
inc
incl
inc
incl
inc
aas
iret
aas
cmp
into
cmp
cmp
cmp
ss
pushl
xor
xor
xor
xor
pushl
data16
xor
pushl
data16
xor
pushl
bound
jmp
add
add
add
add
add
add
push
add
data16
xor
pushl
data16
xor
pushl
lahf
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
add
add
add
cmp
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
push
add
xor
pushl
data16
xor
pushl
data16
cmp
call
call
lahf
lcall
out
lcall
in
call
xchg
decl
jecxz
decl
loope
incl
loopne
incl
fistpll
jge
jge
jnp
jnp
js
js
jbe
jbe
je
je
jb
jb
outsl
fldt
insl
fldt
imul
ljmp
imul
fsubs
fsubs
pop
xlat
pop
lcall
pop
lcall
pop
lcall
pop
call
push
call
call
push
call
push
decl
dec
decl
dec
decl
dec
incl
inc
incl
incl
inc
incl
inc
cmp
add
xor
pushl
data16
xor
pushl
data16
sub
mov
add
add
add
add
add
add
sub
add
data16
xor
pushl
data16
xor
incl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
and
mov
add
add
add
cmp
add
xor
add
add
add
add
adc
add
or
add
push
add
add
add
add
xor
movsb
xor
pushl
data16
xor
pushl
data16
dec
jg
ljmp
jmp
ljmp
ljmp
movsl
call
mov
lcall
out
lcall
in
call
in
call
jecxz
decl
mov
xchg
xchg
test
test
and
incl
fistpll
jl
jl
jns
jns
ja
ja
jne
jne
jae
jae
jo
jo
outsb
fldt
insb
fisubrl
fisubrl
fldenv
fldenv
arpl
arpl
pusha
xlat
pusha
lcall
pop
lcall
lcall
pop
call
push
call
push
call
push
call
push
decl
dec
cmp
add
xor
pushl
data16
xor
pushl
data16
adc
add
add
sbb
add
or
add
add
add
or
pop
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
das
pop
add
and
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
and
data16
xor
pushl
data16
xor
pushl
data16
dec
jg
pushl
out
mov
pushl
in
mov
mov
mov
scas
jmp
ljmp
stos
ljmp
jmp
mov
lcall
out
lcall
in
call
in
call
jecxz
decl
mov
mov
mov
xchg
xchg
and
incl
fistpll
jge
jge
jp
jp
js
js
jbe
jbe
jae
jae
jno
jno
outsl
fldt
insl
fldt
push
push
push
fldenv
fsubs
fsubs
pop
xlat
pop
call
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
sub
add
adc
add
add
add
or
bound
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
push
cmp
mov
add
dec
add
add
add
add
add
add
add
sbb
add
sldt
add
add
add
add
add
add
add
gs
xor
pushl
data16
xor
pushl
data16
cmp
or
stos
xlat
mov
inc
lock
inc
lock
out
mov
mov
out
mov
pushl
mov
scas
jmp
ljmp
ljmp
cmpsb
jmp
movsb
jmp
out
lcall
out
lcall
in
call
xchg
call
jecxz
decl
loop
incl
loopne
incl
filds
jnp
jnp
jns
jns
ja
ja
je
je
jb
jb
jo
jo
insl
fldt
dec
xchg
sub
xor
pushl
data16
xor
pushl
data16
xor
lcall
cmp
insb
add
add
add
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
dec
add
add
add
add
xor
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
data16
xor
pushl
data16
xor
pushl
data16
xor
decl
sar
shl
sar
into
repz
dec
repnz
dec
repnz
inc
icebp
inc
icebp
vcmpsd
inc
out
sar
out
mov
mov
in
mov
mov
mov
mov
mov
mov
mov
scas
jmp
ljmp
test
jmp
call
mov
lcall
cltd
call
in
call
jecxz
decl
loop
decl
loope
incl
loopne
incl
fistpll
jae
insb
pushl
data16
xor
pushl
data16
xor
pushl
data16
cs
add
add
add
add
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
call
iret
add
adc
add
sbb
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
es
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
icebp
xor
pushl
data16
xor
pushl
data16
xor
ljmp
inc
call
out
sar
fdiv
fdivr
fdiv
fdivr
aad
aad
shl
sar
shl
sar
iret
repz
dec
repnz
dec
repnz
icebp
enter
inc
lock
inc
lock
out
mov
mov
in
mov
pushl
in
mov
scas
jmp
ljmp
ljmp
cmpsb
jmp
mov
lcall
out
lcall
in
call
in
call
jecxz
decl
xchg
xor
xor
pushl
data16
xor
pushl
data16
xor
jmp
add
and
add
or
add
add
add
add
add
or
dec
add
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
decl
loop
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
call
iret
add
and
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
adc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
data16
xor
pushl
data16
xor
pushl
data16
xor
outsl
push
pushl
cli
call
jmp
clc
in
loop
loop
fcomip
fcomi
fdecstp
fcos
cmc
call
hlt
aam
shl
sar
shl
sar
int
int
lret
repnz
dec
repnz
inc
icebp
inc
lock
inc
lock
out
sar
out
mov
mov
in
mov
mov
mov
mov
mov
mov
mov
lods
jmp
ljmp
ljmp
movsb
call
mov
lcall
xchg
xor
pushl
data16
xor
pushl
data16
xor
pushl
bound
call
add
add
add
add
add
add
sub
test
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
adc
add
add
inc
add
add
add
and
add
add
add
add
add
add
sub
xor
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
outsl
xchg
dec
call
cld
repnz
sti
lock
out
sti
out
in
cli
in
jmp
stc
out
in
in
jecxz
jecxz
loopne
loopne
fdivp
fdivrp
fdiv
fdivr
xlat
cmc
xlat
call
cmc
aad
shl
sar
shl
sar
into
repz
dec
repnz
dec
repnz
icebp
inc
icebp
lock
inc
out
sar
out
mov
mov
in
mov
mov
mov
mov
mov
mov
mov
scas
jmp
ljmp
aas
pushl
data16
xor
pushl
data16
xor
pushl
data16
and
add
and
add
or
add
add
add
add
add
or
add
xor
repnz
pushl
data16
xor
pushl
data16
xor
pushl
data16
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
in
add
and
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
es
add
add
inc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
arpl
movsb
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
inc
jo
jmp
std
cld
cld
cli
cli
clc
std
clc
push
std
idiv
repz
repz
cld
icebp
out
sti
out
in
sti
in
ljmp
jmp
stc
out
jecxz
jecxz
loope
loope
fcomip
fdiv
fdivr
cmc
call
hlt
sar
shl
sar
iret
repz
dec
repz
lret
dec
icebp
enter
inc
lock
inc
lock
out
mov
ljmp
data16
xor
pushl
data16
xor
pushl
data16
xor
call
add
add
add
add
sub
data16
xor
pushl
data16
xor
pushl
data16
xor
call
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
fs
es
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
dec
jns
dec
fnstcw
cld
cld
sti
sti
stc
stc
push
std
idiv
hlt
cld
hlt
push
cld
repnz
sti
lock
in
sti
in
jmp
jmp
jmp
stc
out
in
in
loop
loop
loopne
loopne
fcomi
fdecstp
fcos
xlat
cmc
xlat
call
hlt
aam
shl
sar
shl
sar
into
repz
dec
repnz
lcall
xor
xor
pushl
data16
xor
pushl
data16
xor
jmp
add
pop
add
add
add
add
add
add
add
add
es
add
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
cmp
mov
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
and
pop
xor
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
inc
iret
std
std
sti
sti
stc
stc
push
std
idiv
cmc
std
cmc
push
cld
repz
sti
icebp
out
sti
out
in
cli
in
ljmp
jmp
stc
in
jecxz
jecxz
loope
loope
fdivp
fdivrp
fdiv
fdivr
movsl
leave
xchg
pushl
data16
xor
pushl
data16
xor
pushl
data16
das
pop
add
add
add
add
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
jmp
add
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
cs
add
adc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
gs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
incl
in
std
std
cld
cld
cli
cli
clc
std
clc
push
std
idiv
hlt
cld
hlt
push
cld
icebp
out
sti
out
in
sti
in
fcomip
fdivr
dec
js
pushl
data16
xor
pushl
data16
xor
pushl
data16
pop
add
add
sbb
add
or
add
add
add
add
add
or
push
add
data16
xor
pushl
data16
xor
pushl
data16
sub
add
pminsw
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
es
add
add
cmp
add
sub
add
sbb
add
or
add
add
add
add
add
add
bound
xchg
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sbbb
cld
cld
sti
sti
call
data16
xor
pushl
data16
xor
pushl
data16
cs
add
add
add
add
add
add
add
add
push
add
add
xor
in
data16
xor
pushl
data16
xor
pushl
data16
pop
aad
decl
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
das
pop
add
adc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
sub
xor
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sbbb
iret
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
adc
add
sbb
add
or
add
add
add
add
add
or
xor
pushl
data16
xor
pushl
data16
xor
jmp
cwtl
pop
call
in
adc
adc
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
in
add
and
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
fs
and
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
data16
mov
push
cmc
out
decl
and
xor
pushl
data16
xor
pushl
data16
xor
jmp
dec
add
add
push
add
add
add
add
push
sub
and
xor
pushl
data16
xor
pushl
data16
xor
lcall
fcoms
adc
adc
adc
adc
adc
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jns
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
or
add
add
cmp
add
sub
add
adc
add
add
add
add
add
add
xor
loop
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
decl
and
cmpsb
mov
out
pushl
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
add
add
add
add
add
add
add
add
push
add
xor
pushl
data16
xor
pushl
data16
daa
movsl
or
call
jmp
adc
adc
adc
adc
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
pop
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
loop
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
jae
push
mov
incl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
dec
add
add
add
add
add
add
add
xor
in
data16
xor
pushl
data16
xor
pushl
outsb
add
push
fistpl
lcall
in
lcall
out
call
call
adc
adc
adc
adc
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jns
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
adc
add
inc
add
add
add
add
add
add
add
add
add
add
xor
xor
loop
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
inc
jo
pushl
push
pushl
loop
push
cmc
out
pushl
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
and
add
add
add
add
add
add
add
add
add
sub
xor
pushl
data16
xor
pushl
data16
xor
ljmp
mov
pop
lcall
in
lcall
out
call
call
adc
adc
adc
adc
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
pushl
data16
xor
pushl
data16
xor
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
xor
les
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
lcall
xor
data16
add
add
add
add
add
add
add
add
adc
arpl
in
data16
xor
pushl
data16
xor
pushl
insl
add
and
and
and
and
pop
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
fs
adc
add
cmp
add
and
add
push
add
add
add
add
add
add
push
add
xor
movsl
xor
icebp
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
incl
add
add
add
add
add
add
add
add
add
es
add
data16
xor
pushl
data16
xor
pushl
data16
cs
push
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
pushl
data16
xor
pushl
data16
xor
ljmp
pop
add
or
add
add
xor
add
sbb
add
or
add
add
add
add
add
add
inc
add
das
pop
add
arpl
les
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
pop
add
add
add
add
add
add
add
add
add
add
add
xor
mov
xor
pushl
data16
xor
pushl
data16
sub
and
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
add
add
add
add
add
add
add
add
add
add
add
das
pop
add
bound
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
data16
xor
pushl
data16
xor
ljmp
add
xor
add
push
add
add
add
add
pop
add
xor
pushl
data16
xor
pushl
data16
xor
sub
sub
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
pushl
data16
xor
pushl
data16
xor
call
and
add
add
add
sbb
add
push
add
add
add
add
add
add
and
bound
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
jo
incl
in
add
xor
pushl
data16
xor
pushl
data16
sub
movsl
add
add
add
add
add
add
add
or
pop
add
xor
pushl
data16
xor
pushl
data16
xor
sub
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
pushl
data16
xor
pushl
data16
sub
mov
add
add
add
add
add
add
add
add
add
add
adc
add
xor
out
data16
xor
pushl
data16
xor
pushl
data16
xor
decl
loop
decl
data16
xor
pushl
data16
xor
jmp
aas
add
add
add
add
add
add
add
add
adc
arpl
in
data16
xor
pushl
data16
xor
pushl
jae
pushl
into
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushl
data16
xor
pushl
data16
xor
incl
add
inc
add
add
add
add
add
add
add
or
add
adc
pop
add
popa
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
jo
decl
loop
incl
incl
call
mov
add
xor
pushl
data16
xor
lcall
xor
data16
add
add
add
add
add
add
pop
sub
bound
data16
xor
pushl
data16
xor
pushl
data16
mov
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
pushl
data16
xor
pushl
data16
add
add
add
and
add
add
add
add
add
add
add
add
xor
data16
xor
pushl
data16
xor
pushl
data16
xor
call
iret
add
add
add
add
add
sbb
data16
xor
pushl
data16
xor
incl
add
cmp
add
add
add
add
add
add
pop
add
data16
xor
pushl
data16
xor
cmp
into
cmp
xor
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
pushl
data16
xor
pushl
data16
adc
pop
add
add
add
or
add
add
add
add
add
add
push
cmp
push
xor
out
data16
xor
pushl
data16
xor
pushl
data16
xor
call
movb
add
add
add
add
add
add
mov
pushl
data16
xor
pushl
data16
xor
fiadds
add
aaa
add
add
add
add
add
add
add
adc
gs
xor
pushl
data16
xor
pushl
data16
cmp
inc
ds
ds
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
push
icebp
push
decl
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
pushl
data16
xor
lcall
cmp
outsb
add
add
add
add
add
add
add
add
add
add
sbb
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
adc
add
add
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
sub
mov
add
add
add
add
add
pop
sub
xor
pushl
data16
xor
pushl
data16
xor
incl
decl
dec
incl
ds
ds
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
ud0
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
xor
pushl
data16
xor
pushl
data16
xor
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
adc
add
add
add
add
add
add
add
add
add
or
data16
xor
pushl
data16
xor
jmp
dec
add
add
add
add
add
add
add
add
add
das
pop
add
xor
pushl
data16
xor
pushl
data16
push
int
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
ud0
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
data16
xor
pushl
data16
xor
pushl
data16
sub
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
dec
add
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
adc
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
pushl
data16
xor
lcall
xor
add
add
add
add
add
add
add
add
add
add
xor
xor
pushl
data16
xor
pushl
data16
cmp
aad
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
ud0
or
or
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jns
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pop
das
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
sub
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
call
movb
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
xor
pushl
data16
xor
add
add
add
add
add
add
add
add
dec
add
data16
xor
pushl
data16
xor
pushl
data16
dec
cmpsb
aaa
lcall
pop
lcall
pop
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
ud0
cmc
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
and
bound
add
sbb
add
or
add
add
add
add
add
add
add
or
add
pop
nopl
xor
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
decl
loop
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
cmc
add
xor
pushl
data16
xor
pushl
data16
sub
add
das
add
add
add
add
add
push
sub
add
data16
xor
pushl
data16
xor
pushl
data16
pop
les
arpl
arpl
pop
xlat
pop
lcall
pop
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
ud0
cmc
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
add
sbb
add
or
add
add
add
add
add
push
add
add
add
add
sub
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
decl
loop
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
call
movb
xor
pushl
data16
xor
pushl
data16
and
mov
add
add
add
add
add
add
add
das
pop
add
xor
pushl
data16
xor
pushl
data16
outsb
fldt
imul
arpl
pop
xlat
pop
lcall
pop
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
ud0
cmc
or
or
or
push
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
gs
and
add
add
adc
add
or
add
add
add
add
add
add
add
or
add
adc
add
and
inc
add
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
pushl
data16
xor
call
daa
add
add
add
add
add
add
xor
xor
pushl
data16
xor
pushl
data16
inc
test
pushl
jae
outsb
fldt
imul
arpl
pop
xlat
pop
lcall
pop
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
ud0
hlt
or
or
or
push
stc
push
incl
add
pop
clc
pop
decl
icebp
push
call
call
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
cs
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
stos
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
fldl
add
xor
add
push
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
call
aaa
js
js
jae
jae
outsb
fldt
imul
arpl
pop
xlat
pop
lcall
pop
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
into
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
adc
call
out
adc
ud0
in
adc
sbb
sbb
and
and
sub
sub
fldenv
jmp
and
and
and
sub
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
popa
add
sbb
add
add
xor
add
sbb
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
bound
call
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
xor
pushl
data16
xor
jmp
dec
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
lcall
inc
jle
jle
js
js
jae
jae
outsb
fldt
imul
arpl
pop
xlat
pop
lcall
pop
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
into
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
lcall
in
lcall
out
call
call
sbb
and
and
sub
sub
das
shrb
ljmp
shrb
ljmp
shrl
sub
sub
sub
sub
daa
fsubs
jmp
fsubl
ljmp
data16
xor
pushl
data16
xor
pushl
data16
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
pop
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
jo
call
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
data16
xor
pushl
data16
xor
call
add
add
sbb
add
or
add
add
add
or
data16
xor
pushl
data16
xor
pushl
data16
pop
movsb
inc
incl
fistpll
jns
jns
jae
jae
outsb
fldt
imul
lcall
pop
lcall
pop
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
into
xor
das
shrb
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fsubl
jmp
fisubs
lcall
loopne
ljmp
loopne
fdivrl
incl
inc
decl
dec
incl
inc
cmp
cmp
xor
int
pushl
iret
xor
shrl
ljmp
aam
ljmp
sub
daa
fsubs
jmp
fldenv
jmp
and
xor
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
or
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
sub
mov
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
mov
incl
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
data16
xor
pushl
data16
xor
ljmp
add
sub
add
adc
add
add
add
or
data16
xor
pushl
data16
xor
pushl
data16
pusha
movsb
inc
decl
loopne
jle
jle
jns
jns
jae
jae
outsb
fldt
imul
lcall
pop
lcall
pop
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
int
ljmp
shrb
ljmp
aam
ljmp
sub
xor
xor
inc
faddl
pop
fstpl
imul
ljmp
imul
pop
pop
call
decl
incl
inc
ds
ds
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
shrl
sub
sub
sub
sub
daa
fldenv
jmp
shll
pushl
jl
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
xor
addb
add
add
cmp
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
or
add
push
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushl
data16
xor
pushl
data16
xor
jmp
inc
add
add
and
add
or
add
add
add
or
data16
xor
pushl
data16
xor
pushl
data16
push
xchg
decl
loope
incl
fistpll
jns
jns
je
je
outsb
fldt
imul
lcall
pop
lcall
pop
call
decl
dec
decl
dec
incl
aas
iret
aas
cmp
cmp
xor
int
decl
dec
ljmp
insl
incl
jecxz
decl
loopne
jp
jp
jae
jae
insb
fisubrl
fldenv
pop
xlat
pop
call
push
call
push
decl
dec
incl
inc
cmp
cmp
xor
into
xor
xor
xor
shrl
ljmp
sub
sub
sub
sub
sub
daa
fsubs
jmp
shlb
pushl
jl
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
adc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
mov
decl
loop
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
decl
data16
xor
pushl
data16
xor
pushl
bound
jmp
add
add
add
add
add
add
xor
icebp
xor
pushl
data16
xor
pushl
data16
cmp
decl
jecxz
decl
loopne
jle
jle
jns
jns
je
je
outsb
fldt
imul
lcall
pop
lcall
pop
call
decl
dec
decl
dec
incl
xor
pop
les
in
ljmp
jmp
ljmp
out
lcall
in
decl
loopne
jge
jge
jbe
jbe
outsl
fldt
push
fsubs
pop
pop
call
push
decl
incl
inc
ds
pushl
int
pushl
int
pushl
into
xor
das
shrb
ljmp
aam
ljmp
aad
ljmp
xlat
sub
fldenv
ljmp
xchg
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
push
cmp
mov
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
movsb
xor
fidivs
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
call
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushl
data16
xor
pushl
data16
xor
jmp
dec
add
add
or
add
add
xor
movsl
xor
pushl
data16
xor
pushl
data16
xor
cmp
lcall
pushl
push
jae
data16
jle
jnp
jle
jle
jo
push
arpl
push
lcall
dec
decl
xor
inc
xchg
sub
cmp
push
pushl
je
pushl
data16
xor
incl
sbb
icebp
inc
out
sar
in
mov
ljmp
call
popf
call
jecxz
decl
filds
pushl
jae
imul
jmp
lcall
pop
call
push
decl
dec
decl
dec
incl
inc
cmp
cmp
xor
xor
xor
xor
xor
xor
shrl
ljmp
sub
sub
sub
sub
sub
daa
fsubs
ljmp
adc
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
pop
add
sub
mov
daa
dec
add
daa
dec
add
cs
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sbb
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
data16
xor
pushl
data16
xor
pushl
fs
or
add
sbb
add
pop
add
add
sub
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
incl
repnz
lock
mov
in
mov
scas
jmp
jmp
out
lcall
in
decl
loopne
jge
jge
jbe
jbe
outsl
fldt
push
xlat
popa
lcall
pop
call
push
decl
dec
incl
cmp
int
pushl
int
pushl
iret
xor
das
shrb
ljmp
aam
ljmp
aad
ljmp
xlat
sub
sub
pop
pushl
jl
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
xor
pushl
data16
xor
ljmp
push
add
add
add
add
add
add
add
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
cmp
loop
dec
repz
inc
icebp
mov
in
mov
ljmp
call
pushf
call
jecxz
incl
filds
pushl
jb
imul
jmp
lcall
pop
call
push
decl
dec
decl
dec
incl
inc
cmp
cmp
xor
xor
xor
xor
xor
xor
shrl
ljmp
sub
sub
sub
sub
sub
daa
fsubs
ljmp
scas
sbb
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
jo
lcall
mov
incl
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
xor
pushl
data16
xor
pushl
fs
or
add
push
add
add
add
add
and
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
lcall
aaa
fdiv
fdivr
shl
sar
lret
inc
lock
mov
in
mov
scas
jmp
jmp
out
lcall
in
decl
loopne
jl
jl
jne
jne
outsb
fldt
fldenv
pusha
xlat
pusha
lcall
pop
call
push
decl
dec
incl
cmp
int
pushl
int
pushl
iret
xor
das
shrb
ljmp
aam
ljmp
sub
sub
sub
fldenv
ljmp
scas
pop
pushl
jl
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
in
add
xor
pushl
data16
xor
pushl
data16
xor
jmp
add
and
add
or
add
add
add
add
dec
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
call
aam
aam
int
int
icebp
mov
in
mov
ljmp
call
pushf
call
incl
fistpll
js
js
jno
jno
push
push
arpl
arpl
pop
pop
call
push
decl
dec
incl
inc
incl
inc
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
sub
sub
sub
sub
sub
daa
fsubs
jmp
int
ljmp
test
or
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
ljmp
mov
and
or
or
or
or
or
pop
clc
pop
incl
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
pushl
data16
xor
pushl
data16
xor
pushl
pusha
add
add
add
add
add
add
add
add
add
add
add
sub
xor
js
arpl
les
gs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
arpl
aad
bound
xor
stos
cs
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
ret
fnstsw
call
cmc
xlat
call
repz
leave
icebp
leave
inc
lock
out
mov
ljmp
jmp
lahf
lcall
in
decl
loopne
jl
jl
jne
jne
insl
fldt
fldenvs
pop
xlat
pop
lcall
pop
call
push
decl
dec
incl
inc
cmp
cmp
ss
pushl
int
pushl
iret
xor
shrl
ljmp
aam
ljmp
sub
sub
sub
fldenv
jmp
and
and
and
and
and
pop
loopne
jmp
ret
and
adc
lcall
adc
push
enter
ljmp
adc
adc
adc
adc
push
icebp
push
decl
hlt
or
or
or
pop
clc
pop
incl
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
xor
pushl
data16
xor
pushl
data16
and
add
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
aas
add
xor
loop
data16
xor
pushl
data16
xor
pushl
data16
dec
js
loope
loope
fcomi
shl
sar
int3
repnz
inc
icebp
out
mov
pushl
jmp
mov
call
incl
fistpll
js
js
jno
jno
push
push
arpl
arpl
pop
pop
call
push
decl
dec
incl
inc
aas
iret
aas
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
shrl
sub
sub
sub
sub
daa
fsubs
jmp
fsubl
jmp
frstor
jmp
fbld
lcall
loope
lcall
in
lcall
out
call
call
push
call
adc
adc
adc
adc
adc
ud0
repz
or
or
or
or
pop
stc
pop
incl
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
pushl
data16
xor
pushl
data16
xor
ljmp
push
add
add
add
add
add
add
add
cs
add
data16
xor
pushl
data16
xor
pushl
data16
xor
jmp
cmp
in
cli
in
jmp
clc
in
fdivp
fdivrp
xlat
cmc
xlat
call
repz
leave
icebp
leave
inc
lock
out
mov
ljmp
movsl
lcall
in
call
loop
incl
fidivrs
je
je
insl
fldt
fldenvs
pop
xlat
pop
lcall
pop
call
push
decl
dec
incl
inc
cmp
cmp
xor
int
pushl
iret
xor
shrl
ljmp
aam
ljmp
sub
sub
sub
fldenv
jmp
and
and
and
and
and
pop
loopne
lcall
jecxz
lcall
in
lcall
out
call
call
adc
call
out
adc
adc
adc
push
icebp
push
decl
or
or
or
or
or
pop
clc
pop
incl
stc
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
bound
call
add
add
add
add
add
add
add
add
xor
xchg
data16
xor
pushl
data16
xor
pushl
data16
xor
jnp
pop
out
sti
out
call
mul
shl
sar
int3
repnz
inc
lock
out
mov
pushl
jmp
mov
call
loop
incl
fistpll
ja
ja
jo
jo
imul
lcall
pop
call
decl
dec
incl
inc
aas
iret
aas
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
shrl
sub
sub
sub
sub
daa
fsubs
jmp
fsubl
jmp
frstor
jmp
fbld
lcall
loope
lcall
sbb
sbb
sbb
sbb
sbb
pop
call
push
call
adc
adc
adc
adc
adc
ud0
hlt
or
or
or
or
or
push
stc
push
incl
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
xor
pushl
data16
xor
pushl
data16
sbb
add
add
sbb
add
or
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
jl
pop
push
cld
repnz
jmp
jmp
in
in
cmc
dec
repz
dec
icebp
enter
sar
out
mov
ljmp
movsl
lcall
in
call
loope
incl
fidivrs
je
je
insb
fisubrl
fldenv
pop
xlat
pop
call
push
call
push
decl
dec
incl
inc
cmp
cmp
xor
into
xor
xor
xor
shrl
ljmp
sub
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
and
and
and
and
and
pop
loopne
lcall
in
lcall
in
lcall
out
call
jmp
adc
call
out
adc
adc
adc
push
icebp
push
decl
or
or
or
or
or
pop
clc
pop
incl
cli
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
pushl
data16
xor
pushl
data16
sub
popl
add
push
add
add
add
add
add
add
gs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
jge
pop
push
std
idiv
out
sti
out
jmp
stc
out
loopne
loopne
fdecstp
fcos
shl
sar
lret
repnz
inc
lock
mov
in
mov
scas
jmp
ljmp
out
lcall
in
decl
test
jle
jle
ja
ja
jo
jo
imul
popa
lcall
pop
call
push
decl
incl
inc
ds
pushl
int
pushl
int
pushl
into
xor
das
shrb
ljmp
shrl
sub
sub
sub
sub
fldenv
jmp
fsubl
jmp
fisubs
jmp
fbld
lcall
loope
lcall
sbb
sbb
sbb
sbb
sbb
pop
call
push
call
adc
adc
adc
adc
adc
ud0
hlt
or
or
or
or
or
push
stc
push
incl
cld
add
add
add
add
add
add
add
add
add
and
add
xor
pushl
data16
xor
pushl
data16
cs
add
add
add
add
add
add
add
add
add
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
jle
pop
stc
std
stc
push
cld
repnz
jmp
jmp
in
in
cmc
dec
repz
inc
icebp
inc
out
sar
out
mov
ljmp
call
popf
call
jecxz
decl
loopne
jp
jp
jae
jae
insb
fisubrl
fsubs
pop
xlat
pop
call
push
call
push
decl
dec
incl
inc
cmp
cmp
xor
xor
xor
xor
xor
xor
shrl
ljmp
sub
sub
sub
sub
sub
daa
fsubs
jmp
fldenv
jmp
and
and
and
and
and
pop
loopne
lcall
in
lcall
in
lcall
out
call
jmp
adc
call
out
adc
adc
adc
push
icebp
push
decl
or
or
or
or
or
pop
clc
pop
incl
sti
add
add
add
add
add
and
add
xor
pushl
data16
xor
pushl
data16
xor
fistl
pop
add
add
adc
add
add
add
add
sub
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
jg
pop
out
cmc
in
push
cld
cmc
out
sti
out
jmp
stc
out
loopne
loopne
fprem1
fcos
shl
sar
lret
repnz
inc
lock
mov
in
mov
scas
jmp
ljmp
out
lcall
in
decl
loopne
jge
jge
jbe
jbe
outsl
fldt
push
fsubs
pop
pop
call
push
decl
incl
inc
ds
pushl
int
pushl
int
pushl
iret
xor
das
shrb
ljmp
aam
ljmp
aad
ljmp
xlat
sub
fldenv
jmp
fsubl
jmp
fisubs
jmp
loopne
lcall
loope
lcall
sbb
sbb
sbb
sbb
sbb
pop
call
adc
call
in
adc
adc
adc
ud0
hlt
or
or
or
or
or
push
stc
push
incl
icebp
add
sub
add
xor
pushl
data16
xor
pushl
data16
xor
out
pop
add
add
add
add
add
add
add
das
pop
add
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
pop
xorl
in
fdivrp
clc
std
clc
push
cld
icebp
ljmp
fdiv
fdivr
aad
aad
into
repz
inc
icebp
inc
out
sar
in
mov
ljmp
call
popf
call
jecxz
incl
filds
pushl
jb
imul
jmp
lcall
pop
call
push
decl
dec
decl
dec
incl
inc
cmp
cmp
xor
xor
xor
xor
xor
xor
shrl
ljmp
sub
sub
sub
sub
sub
daa
fsubs
jmp
and
and
and
and
pop
loopne
lcall
in
lcall
in
lcall
out
call
jmp
adc
call
out
adc
ud0
icebp
push
decl
or
or
or
adc
pop
ljmp
addl
pushl
data16
xor
pushl
data16
xor
pushl
fs
push
cmp
push
add
add
add
add
add
add
xor
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
incl
adc
mov
sti
push
cld
hlt
in
sti
in
jmp
stc
out
fcomip
fdiv
fdivr
shl
sar
lret
inc
lock
mov
in
mov
scas
jmp
jmp
out
lcall
in
decl
loopne
jge
jge
jbe
jbe
outsl
fldt
fldenv
pusha
xlat
pusha
lcall
pop
call
push
decl
dec
incl
cmp
int
pushl
int
pushl
iret
xor
das
shrb
ljmp
aam
ljmp
aad
ljmp
xlat
sub
fldenv
jmp
and
and
and
and
and
pop
loopne
lcall
loope
lcall
sbb
sbb
sbb
sbb
sbb
pop
call
adc
call
in
adc
adc
adc
push
icebp
push
lcall
mov
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
fs
pop
cmp
add
add
add
add
add
cs
add
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
decl
in
clc
std
clc
push
sti
icebp
ljmp
fcomi
aam
aam
int
int
icebp
mov
in
mov
ljmp
call
pushf
call
jecxz
incl
filds
pushl
jb
imul
jmp
lcall
pop
call
push
decl
dec
decl
dec
incl
inc
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
sub
sub
sub
sub
sub
daa
fsubs
jmp
and
and
and
and
push
loope
lcall
in
lcall
out
lcall
out
call
jmp
adc
adc
cltd
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
arpl
out
add
add
adc
add
or
add
add
add
add
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
decl
and
mov
sti
push
cld
hlt
in
cli
in
jmp
stc
out
fcomip
fdiv
fdivr
shl
sar
lret
inc
lock
mov
in
mov
lods
jmp
jmp
out
lcall
in
decl
loopne
jl
jl
jne
jne
outsb
fldt
fldenv
pusha
xlat
pusha
lcall
pop
call
push
decl
dec
incl
cmp
int
pushl
int
pushl
iret
xor
das
shrb
ljmp
aam
ljmp
sub
sub
sub
fldenv
jmp
and
and
and
and
and
pop
loopne
lcall
loope
lcall
sbb
sbb
sbb
sbb
sbb
pop
rclb
das
ja
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
popa
add
adc
add
add
add
add
add
add
add
add
add
and
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
data16
in
idiv
idiv
lock
lock
jmp
clc
loop
fcomi
aam
aam
int
int
icebp
mov
in
mov
mov
mov
stos
ljmp
pushf
out
call
incl
fistpll
js
js
jno
jno
push
push
arpl
arpl
pop
pop
call
push
decl
dec
incl
inc
incl
inc
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
shrl
ljmp
sub
sub
sub
sub
sub
daa
fsubs
jmp
fsubl
jmp
frstor
jmp
fbld
lcall
loope
lcall
rcrl
ljmp
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
cs
add
add
add
add
add
add
add
add
add
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
jg
pop
jmp
jmp
push
cld
repz
in
cli
in
jmp
stc
in
fdivp
fdivrp
xlat
cmc
xlat
call
repz
leave
icebp
leave
inc
lock
out
mov
ljmp
jmp
lahf
lcall
in
decl
loopne
jnp
jnp
jne
jne
insl
fldt
fldenvs
pop
xlat
pop
lcall
pop
call
push
decl
dec
incl
inc
cmp
cmp
ss
pushl
int
pushl
iret
xor
shrl
ljmp
aam
ljmp
sub
sub
sub
fldenv
jmp
and
and
xchg
or
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
add
add
add
add
add
add
add
add
add
pop
add
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
dec
inc
xlat
mov
call
clc
loope
shl
sar
int3
repnz
inc
lock
out
mov
pushl
jmp
mov
call
incl
fistpll
js
js
jno
jno
push
push
arpl
arpl
pop
pop
call
decl
dec
incl
inc
aas
iret
aas
cmp
cmp
xor
xor
xor
xor
das
shrb
ljmp
shrl
sub
sub
sub
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
arpl
out
dec
add
add
adc
add
or
add
add
add
add
bound
movsl
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
dec
jns
call
out
jmp
clc
in
fdivp
fdivrp
xlat
cmc
xlat
dec
repz
dec
icebp
enter
sar
out
mov
ljmp
movsl
lcall
in
call
loop
incl
fidivrs
je
je
insl
fldt
fldenvs
pop
xlat
pop
lcall
pop
call
push
decl
dec
incl
inc
cmp
cmp
xor
int
pushl
ret
xor
push
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
sub
sub
sub
add
push
add
add
add
add
add
add
add
add
pop
add
gs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
decl
sbb
ljmp
in
int3
call
hlt
sar
int3
repnz
inc
lock
out
mov
ljmp
jmp
mov
call
loop
incl
fistpll
ja
ja
jo
jo
imul
lcall
pop
call
decl
dec
incl
xor
cmp
or
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
fsubs
add
adc
add
or
add
add
add
add
add
add
add
add
xor
loop
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
push
subl
incl
into
xchg
lcall
scas
pushl
ljmp
sahf
out
call
jecxz
decl
loopne
ljmp
pop
jmp
push
decl
xor
cmp
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
gs
sub
add
add
add
add
add
add
add
add
xor
xor
loop
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
arpl
in
push
add
add
adc
add
add
add
add
add
add
add
add
cs
add
arpl
les
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
popa
add
sub
jb
add
adc
add
or
add
push
add
add
add
add
add
add
push
add
xor
js
fs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
js
bound
mov
gs
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
bound
enter
andb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
cmp
pop
add
pusha
add
xor
icebp
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
pushl
data16
xor
xor
xor
stos
cs
add
dec
add
add
adc
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
sub
add
push
add
push
add
add
push
add
push
add
push
add
push
add
add
add
add
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
aas
inc
add
add
incb
add
add
push
add
add
ud0
inc
add
add
add
incl
add
add
add
cld
add
add
add
pop
push
add
add
add
ud0
jmp
add
add
add
add
incl
add
add
incl
add
add
add
add
incb
add
add
add
add
cld
pop
clc
ud0
push
pop
jmp
add
inc
add
incl
add
add
add
incl
add
incb
add
incb
add
cld
add
pop
clc
jg
clc
pop
push
ud0
lock
add
pop
jmp
add
jmp
add
inc
add
inc
add
incl
add
incl
add
incl
add
add
jl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
jmp
add
add
add
add
incb
add
add
jmp
add
add
add
add
incb
add
add
inc
add
add
add
add
incb
add
pop
incl
add
add
add
add
cld
add
add
incl
add
add
add
add
cld
add
add
incb
add
add
add
add
cld
add
add
cld
add
add
add
add
cld
add
add
cld
add
add
add
add
clc
add
add
cld
add
add
add
add
clc
add
pop
cld
add
add
add
add
clc
add
ud0
cld
add
add
add
add
clc
add
pop
cld
add
add
add
add
clc
add
jg
cld
add
add
add
add
push
add
cld
add
add
add
add
push
add
aas
cld
add
add
add
add
push
add
ud0
cld
add
add
add
add
push
add
add
incb
add
add
add
ud0
add
add
incb
add
add
add
pop
push
add
add
incl
add
add
add
pop
jmp
add
add
incl
add
aas
jmp
add
add
inc
add
add
add
aas
inc
add
add
jmp
add
add
add
jg
rolb
add
aas
push
add
add
add
jg
addb
add
ud0
add
add
add
incl
pop
cld
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incb
add
add
add
jmp
add
add
add
incb
add
add
add
push
add
add
add
cld
add
add
add
ud0
add
add
pop
cld
add
add
add
pop
incl
add
add
clc
add
add
add
add
inc
add
add
clc
add
add
add
add
push
add
add
push
add
add
add
add
cld
add
add
push
add
add
add
add
incl
add
pop
jmp
add
add
add
add
inc
add
pop
jmp
add
add
add
add
clc
add
pop
jmp
add
add
add
add
incb
add
inc
add
add
add
add
cld
add
pop
inc
add
add
add
add
clc
add
pop
inc
add
add
add
add
push
add
aas
incl
add
add
jmp
add
aas
incl
add
add
inc
add
aas
incl
add
add
incl
add
aas
incl
add
add
add
add
incb
add
aas
incl
add
add
add
add
cld
add
add
push
add
add
add
add
add
add
jmp
add
add
add
add
add
add
incl
incl
add
add
add
pop
incl
add
add
incl
add
add
add
ud0
add
add
incl
add
add
add
add
loopne
add
add
incl
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
pop
incl
pop
incl
ud0
addb
add
ud0
rolb
add
pop
jmp
pop
clc
aas
push
add
aas
clc
add
jg
cld
add
cld
add
incb
add
incl
add
incl
add
add
pop
inc
ud0
jmp
pop
push
aas
clc
jg
cld
incl
add
add
add
add
incl
add
pop
inc
add
add
add
ud0
push
add
add
add
aas
cld
add
add
add
incl
add
add
add
inc
add
add
ud0
push
add
add
aas
incb
add
add
jmp
add
pop
inc
ud0
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
jmp
jns
ljmp
pavgb
sub
filds
cs
fadds
sub
xlat
add
sbb
add
outsb
add
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
add
add
add
add
incl
add
incl
add
incl
add
pop
add
fcomip
add
fcomip
add
fdivp
add
fdivp
add
fdivs
add
fdivp
add
fdivp
add
fcomip
add
fcomip
add
rolb
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
rolb
add
jmp
jns
ljmp
pavgb
sub
filds
cs
fadds
sub
xlat
add
sbb
add
outsb
add
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
add
add
cltd
add
add
add
add
add
mov
add
add
or
add
and
mov
add
pop
lock
add
add
add
add
push
jp
add
add
add
add
add
add
imul
add
add
add
push
pop
add
aam
add
in
add
or
add
add
add
add
add
incl
add
incl
add
jecxz
add
movl
add
pop
add
clc
aas
add
cld
aas
add
clc
pop
add
icebp
popl
add
movl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
jmp
jns
ljmp
pavgb
sub
filds
cs
fadds
sub
xlat
add
sbb
add
outsb
add
mov
pop
inc
mov
inc
sub
add
out
cmp
int3
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
int3
incl
cltd
incl
data16
incl
xor
incl
add
incl
dec
incl
int3
int3
incl
cltd
int3
incl
data16
incl
xor
incl
add
incl
lcall
incl
cltd
cltd
incl
cwtd
incl
xor
incl
jmp
add
incw
cltd
incw
data16
xor
add
incw
pushl
incl
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
lcall
add
lcall
add
lcall
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
xor
add
xor
add
xor
add
add
add
cltd
add
add
add
jmp
int3
jmp
cltd
jmp
jmpw
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
data16
data16
data16
data16
data16
xor
int3
xor
cltd
xor
xor
xor
data16
xor
incl
data16
add
cltd
add
data16
xor
data16
add
pushl
add
pushl
add
pushl
add
pushl
add
pushl
add
int3
xor
int3
int3
xor
cltd
int3
xor
data16
xor
xor
xor
add
xor
lcall
xor
cltd
cltd
xor
cwtd
xor
xor
xor
jmp
add
xor
cltd
xor
data16
xor
add
xor
pushl
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
int3
add
int3
int3
add
cltd
int3
add
data16
add
xor
add
add
add
lcall
add
cltd
cltd
add
cwtd
add
xor
add
jmp
add
data16
cltd
data16
data16
xor
add
data16
pushl
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
ljmp
call
mov
push
jmp
mov
ljmp
mov
out
dec
dec
jnp
ljmp
mov
push
jp
dec
mov
mov
sar
lcall
jbe
call
hlt
ljmp
dec
mov
ljmp
ljmp
mov
ljmp
lcall
push
sarl
jne
outsl
lcall
loop
sar
call
lret
dec
jne
mov
dec
and
mov
ljmp
jmp
ljmp
clc
pop
add
loopne
add
rolb
add
add
add
add
add
add
add
addl
add
roll
add
add
add
add
rolb
add
sldt
clc
pop
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
int3
incl
cltd
incl
data16
incl
xor
incl
add
incl
dec
incl
int3
int3
incl
cltd
int3
incl
data16
incl
xor
incl
add
incl
lcall
incl
cltd
cltd
incl
cwtd
incl
xor
incl
jmp
add
incw
cltd
incw
data16
xor
add
incw
pushl
incl
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
lcall
add
lcall
add
lcall
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
xor
add
xor
add
xor
add
add
add
cltd
add
add
add
jmp
int3
jmp
cltd
jmp
jmpw
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
data16
data16
data16
data16
data16
xor
int3
xor
cltd
xor
xor
xor
data16
xor
incl
data16
add
cltd
add
data16
xor
data16
add
pushl
add
pushl
add
pushl
add
pushl
add
pushl
add
int3
xor
int3
int3
xor
cltd
int3
xor
data16
xor
xor
xor
add
xor
lcall
xor
cltd
cltd
xor
cwtd
xor
xor
xor
jmp
add
xor
cltd
xor
data16
xor
add
xor
pushl
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
int3
add
int3
int3
add
cltd
int3
add
data16
add
xor
add
add
add
lcall
add
cltd
cltd
add
cwtd
add
xor
add
jmp
add
data16
cltd
data16
data16
xor
add
data16
pushl
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
push
jmp
ljmp
lret
jmp
call
lret
mov
jecxz
lret
dec
lret
mov
mov
lret
dec
mov
mov
mov
dec
mov
lcall
mov
lret
call
lret
lcall
mov
loope
mov
lret
ljmp
lret
lret
lcall
in
lret
call
mov
lret
ljmp
fwait
mov
mov
push
out
add
lret
push
call
mov
mov
ljmp
ljmp
xchg
mov
mov
call
jnp
lret
ljmp
cltd
lcall
sar
call
dec
jne
push
dec
je
push
jne
cltd
jbe
lret
call
lret
lret
jmp
and
dec
push
sar
jmp
loope
lret
ljmp
lahf
sub
add
and
ljmp
loope
mov
sar
push
ror
lahf
testb
add
leave
call
ljmp
mov
lret
ljmp
lret
call
les
mov
mov
ljmp
dec
mov
loope
mov
sar
dec
lret
call
lret
lcall
mov
push
lret
mov
jmp
lahf
cltd
jbe
lcall
lret
jmp
lret
call
lahf
dec
jne
lcall
lret
ljmp
lret
call
les
mov
jne
lcall
ror
les
sar
ljmp
and
lcall
mov
loop
call
lret
dec
push
dec
cltd
jbe
lcall
mov
dec
lret
and
lcall
loop
sar
call
lret
and
push
push
lcall
lret
jmp
and
lcall
ljmp
lahf
lret
shr
ljmp
jmp
push
ud0
rolb
incl
add
incb
add
add
aas
clc
add
pop
clc
add
add
add
add
add
add
pop
add
loopne
add
loopne
add
loopne
add
loopne
add
rolb
add
add
add
add
pop
add
incb
add
cld
pop
add
clc
sldt
rorb
add
pop
add
add
addb
aas
clc
add
aas
cld
add
jg
add
incl
ud0
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
incl
int3
incl
cltd
incl
data16
incl
xor
incl
add
incl
dec
incl
int3
int3
incl
cltd
int3
incl
data16
incl
xor
incl
add
incl
lcall
incl
cltd
cltd
incl
cwtd
incl
xor
incl
jmp
add
incw
cltd
incw
data16
xor
add
incw
pushl
incl
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
int3
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
cltd
int3
add
data16
add
data16
add
data16
add
data16
add
data16
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
lcall
add
lcall
add
lcall
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
int3
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cltd
cltd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
cwtd
add
xor
add
xor
add
xor
add
add
add
cltd
add
add
add
jmp
int3
jmp
cltd
jmp
jmpw
xor
data16
jmp
dec
data16
int3
data16
int3
data16
int3
data16
int3
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
cltd
data16
data16
data16
data16
data16
data16
xor
int3
xor
cltd
xor
xor
xor
data16
xor
incl
data16
add
cltd
add
data16
xor
data16
add
pushl
add
pushl
add
pushl
add
pushl
add
pushl
add
int3
xor
int3
int3
xor
cltd
int3
xor
data16
xor
xor
xor
add
xor
lcall
xor
cltd
cltd
xor
cwtd
xor
xor
xor
jmp
add
xor
cltd
xor
data16
xor
add
xor
pushl
xor
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
int3
add
int3
int3
add
cltd
int3
add
data16
add
xor
add
add
add
lcall
add
cltd
cltd
add
cwtd
add
xor
add
jmp
add
data16
cltd
data16
data16
xor
add
data16
pushl
add
int3
xor
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
out
out
add
fstp
add
stos
stos
add
ja
add
push
add
add
and
add
adc
add
add
add
ljmp
push
ljmp
lret
shr
call
lret
lret
lret
lret
lret
call
lret
loope
loope
mov
lret
ljmp
mov
mov
loope
lret
sar
dec
lret
mov
mov
mov
mov
ljmp
loope
loope
mov
mov
mov
lret
jmp
lret
xchg
mov
xchg
mov
mov
mov
lret
ljmp
mov
loope
mov
mov
mov
lret
call
lret
lcall
lcall
loope
xchg
loope
loope
mov
lret
shr
rcl
jmp
jne
jbe
lcall
lret
xchg
loop
mov
mov
lret
lret
lret
call
lret
outsl
jne
jne
mov
out
lret
lds
lcall
lret
lret
push
lret
push
push
dec
jne
lret
shr
jmp
lcall
mov
mov
lret
call
lret
es
je
lret
ljmp
jmp
lret
cltd
lcall
mov
mov
dec
lret
sub
lret
call
lret
mov
mov
mov
mov
jmp
push
lret
call
lret
lcall
xchg
mov
mov
sar
jmp
lret
jmp
lcall
loop
loope
mov
lret
call
lret
lret
ljmp
jne
jne
lcall
mov
call
movsl
je
lret
jmp
push
push
outsl
jne
jne
jne
jne
jbe
lcall
dec
lret
lret
call
lret
and
push
dec
jne
jne
jne
outsl
cltd
lret
dec
lret
lret
shr
dec
lret
add
and
dec
push
mov
jmp
mov
lret
ljmp
cmc
cmc
and
and
ljmp
dec
lret
mov
mov
call
lret
testb
add
cmc
cmc
and
sar
jmp
mov
mov
lret
jmp
sub
add
add
add
lret
push
lret
mov
mov
mov
call
ror
lret
add
add
lret
ljmp
mov
mov
lret
ljmp
movsl
lret
dec
lret
lcall
mov
mov
call
ror
lret
lret
call
lret
lcall
mov
mov
lret
ljmp
call
lcall
mov
mov
sar
jmp
sar
dec
leave
mov
mov
mov
mov
sar
jmp
mov
ljmp
lcall
mov
loop
lret
ljmp
lret
call
lret
jne
lcall
xchg
loope
loope
lret
ljmp
jmp
ror
lret
mov
call
lret
jne
lcall
mov
lret
jmp
mov
sar
call
lret
outsl
jne
outsl
cltd
lcall
lcall
jmp
loop
mov
jmp
call
lret
jne
mov
dec
push
jne
cltd
lcall
rcl
rcl
lret
lret
mov
lret
dec
lret
lret
lret
and
jne
lcall
lret
lret
mov
mov
ljmp
lret
cmc
and
jne
lcall
jecxz
loop
mov
mov
call
lret
and
je
jne
lcall
xchg
loope
mov
lret
dec
lret
add
jne
jbe
lcall
mov
lret
dec
lret
add
push
outsl
jne
lcall
mov
sar
ljmp
and
outsl
jne
lcall
lret
ljmp
cmc
and
jne
jbe
lcall
call
lret
cmpsb
je
dec
es
dec
jne
cltd
lcall
push
ror
lret
lret
lret
lret
lret
jmp
lret
lret
shr
jmp
incl
add
push
pop
incl
add
incl
add
incb
add
incl
add
clc
add
ud0
add
lock
pop
incl
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
add
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
add
add
add
addb
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
add
clc
paddd
add
add
lock
add
add
add
add
add
add
lock
addb
add
loopne
pavgb
pop
add
loopne
pop
lock
add
rolb
cld
add
add
rolb
incl
pop
add
addb
inc
pop
add
addb
push
pop
add
addb
jmp
pop
add
add
add
rcrb
add
add
incl
add
incb
aas
add
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
addb
add
add
inc
add
ud0
add
loopne
add
incl
add
clc
add
aas
incl
add
cld
add
incl
add
incl
add
incl
add
push
pop
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
and
add
add
and
and
add
add
and
and
jo
add
daa
and
and
daa
add
jb
and
and
add
add
and
and
loop
add
sub
and
and
add
clc
clc
and
and
and
sub
and
add
add
and
and
add
add
and
pop
and
add
sub
add
add
jb
and
add
add
xchg
add
add
add
and
add
clc
pop
add
loopne
add
rolb
add
add
add
add
add
add
add
addl
add
roll
add
add
add
add
rolb
add
sldt
clc
pop
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
jo
add
add
jb
and
add
pop
and
and
and
add
and
and
and
daa
add
add
add
add
and
and
and
and
add
add
add
add
and
and
and
and
daa
add
add
add
loop
and
and
and
and
jb
add
add
daa
daa
loop
jb
and
and
and
and
add
mov
and
and
and
and
add
clc
and
add
add
and
and
and
add
das
andb
add
and
and
and
and
add
jb
add
add
daa
sub
and
and
add
jb
add
add
daa
xchg
add
add
and
add
add
mov
add
add
and
and
add
daa
decl
jb
and
and
add
add
push
and
add
and
and
and
add
add
loop
add
loop
and
and
and
add
add
add
add
and
and
and
add
add
and
add
add
and
and
and
add
add
and
add
jle
daa
and
and
jo
add
and
and
add
ja
and
and
add
add
and
add
xorb
and
loopne
and
and
and
add
and
call
and
and
daa
add
add
add
js
ja
jb
and
and
add
add
add
and
and
and
add
add
add
add
xchg
and
daa
and
mov
add
jb,pn
and
add
add
add
add
push
ud0
rolb
incl
add
incb
add
add
aas
clc
add
pop
clc
add
add
add
add
add
add
pop
add
loopne
add
loopne
add
loopne
add
loopne
add
rolb
add
add
add
add
pop
add
incb
add
cld
pop
add
clc
sldt
rorb
add
pop
add
add
addb
aas
clc
add
aas
cld
add
jg
add
incl
ud0
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
jb
and
add
and
and
and
sub
add
jb
and
and
and
and
add
and
and
and
and
and
add
add
and
and
and
and
and
and
add
add
and
and
and
and
and
and
add
and
and
and
and
and
and
and
add
and
and
and
and
and
and
and
jb
daa
and
and
and
and
and
and
pop
ja
add
add
add
daa
jb
and
and
and
and
and
and
and
add
add
pop
and
jb
and
and
and
and
and
and
and
add
add
sub
loop
and
add
and
and
and
and
and
and
add
and
jle
and
add
add
daa
and
and
and
and
and
add
jb
clc
and
add
add
pop
jb
and
and
and
and
add
add
cs
and
add
add
and
and
and
and
and
and
add
add
clc
and
add
add
add
and
and
and
and
daa
add
add
sub
add
pop
and
daa
and
and
and
add
add
and
add
add
add
daa
xchg
xchg
and
and
add
add
loop
ja
add
add
add
mov
ja
ja
andb
add
add
and
daa
add
add
add
daa
mov
daa
and
add
add
and
and
add
add
add
jle
clc
clc
mov
add
and
and
and
and
add
add
and
clc
and
add
add
and
and
and
and
add
add
jb
incl
add
and
and
and
and
add
add
and
clc
jb
add
add
loop
and
and
and
and
add
add
add
jle
add
add
and
and
and
and
and
and
add
add
and
and
add
add
and
and
and
and
and
add
add
add
ret
add
add
and
and
and
and
and
daa
add
add
add
and
loopne
add
add
and
and
and
and
and
add
add
jb
and
add
add
loop
daa
and
and
and
and
add
add
add
and
daa
add
add
jb
and
and
and
and
add
add
jb
and
and
add
and
and
and
jb
jo
add
add
and
and
jo
add
add
xorb
jb
and
and
add
ja
and
and
add
add
and
out
ja
xchg
and
and
and
and
and
and
add
add
and
daa
mov
daa
daa
and
loop
and
and
and
add
add
add
and
and
jb
and
and
and
and
add
add
add
add
clc
mov
and
and
and
and
and
add
jb
and
and
and
jo
add
sub
mov
and
and
and
add
and
clc
mov
and
jb
and
jb
mov
mov
and
add
js,pn
mov
and
and
add
and
and
and
and
and
and
add
add
add
and
add
incl
add
push
pop
incl
add
incl
add
incb
add
incl
add
clc
add
ud0
add
lock
pop
incl
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
add
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
add
add
add
addb
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
add
clc
paddd
add
add
lock
add
add
add
add
add
add
lock
addb
add
loopne
pavgb
pop
add
loopne
pop
lock
add
rolb
cld
add
add
rolb
incl
pop
add
addb
inc
pop
add
addb
push
pop
add
addb
jmp
pop
add
add
add
rcrb
add
add
incl
add
incb
aas
add
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
addb
add
add
inc
add
ud0
add
loopne
add
incl
add
clc
add
aas
incl
add
cld
add
incl
add
incl
add
incl
add
push
pop
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
nop
add
adc
xchg
add
xor
add
push
add
sub
push
sbb
add
add
add
add
push
xor
add
mov
add
add
add
clc
pop
add
loopne
add
rolb
add
add
add
add
add
add
add
addl
add
roll
add
add
add
add
rolb
add
sldt
clc
pop
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
inc
add
adc
aam
add
push
add
aad
nop
add
sub
push
add
or
mov
add
pop
or
fadds
adcb
or
sub
mov
pop
je
and
add
push
add
ja
push
addb
pop
add
aad
addb
push
add
std
stos
add
pop
pop
add
or
add
add
add
push
ud0
rolb
incl
add
incb
add
add
aas
clc
add
pop
clc
add
add
add
add
add
add
pop
add
loopne
add
loopne
add
loopne
add
loopne
add
rolb
add
add
add
add
pop
add
incb
add
cld
pop
add
clc
sldt
rorb
add
pop
add
add
addb
aas
clc
add
aas
cld
add
jg
add
incl
ud0
ljmp
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
es
mov
add
add
adc
add
add
stos
pop
inc
add
add
add
add
dec
push
test
add
mov
sub
jp
pop
xor
call
add
add
add
add
add
add
add
add
add
dec
add
add
add
outsb
rolb
add
mov
pmullw
add
push
add
inc
add
add
add
add
mov
and
jg
add
adc
inc
add
add
add
add
push
test
add
add
or
push
add
add
add
pop
stos
add
add
add
addb
pop
xchg
push
add
insl
addb
add
add
add
add
insl
and
add
add
ljmp
aas
push
es
add
add
fcmovbe
add
add
pmullw
add
add
pop
mov
add
add
xchg
inc
add
add
add
push
add
add
add
add
add
add
adc
add
add
add
add
incl
add
push
pop
incl
add
incl
add
incb
add
incl
add
clc
add
ud0
add
lock
pop
incl
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
add
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
add
add
add
addb
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
add
clc
paddd
add
add
lock
add
add
add
add
add
add
lock
addb
add
loopne
pavgb
pop
add
loopne
pop
lock
add
rolb
cld
add
add
rolb
incl
pop
add
addb
inc
pop
add
addb
push
pop
add
addb
jmp
pop
add
add
add
rcrb
add
add
incl
add
incb
aas
add
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
addb
add
add
inc
add
ud0
add
loopne
add
incl
add
clc
add
aas
incl
add
cld
add
incl
add
incl
add
incl
add
push
pop
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
mov
push
cmc
sbb
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
sti
jle
fbld
cmp
div
push
sub
cmpsl
movsl
mov
sub
cld
sarl
pop
mov
add
lods
mov
dec
xchg
mov
mov
out
mov
outsl
in
and
in
push
sub
scas
test
lds
push
sti
pop
mov
outsb
jge
cmp
and
lods
or
jb
or
push
adc
shrb
mov
and
not
mov
push
mov
mov
lret
cltd
or
mov
stc
dec
sbb
push
idivl
dec
inc
jg
js
sub
scas
and
mov
sbb
inc
sub
repz
negl
insb
jo
push
cmp
loope
jl
dec
stc
mov
ja,pn
js
icebp
lret
out
cwtl
push
and
push
pop
out
fisttps
push
push
jbe
sbb
jno
jbe
dec
cmpsb
lods
jle
dec
punpcklwd
sbb
mov
mov
nop
insb
inc
sub
inc
sub
loop
outsl
out
adc
lret
jecxz
sub
xor
and
inc
lcall
sbb
jge
insb
xchg
or
push
fdivrp
loope
fsubl
ror
call
xor
aad
dec
pop
push
outsb
dec
mov
inc
dec
std
adc
das
xor
mov
pop
fs
push
mov
bound
sub
ret
negl
dec
ds
es
popa
xchg
push
cld
sarl
mov
xorl
and
out
inc
xor
loop
shlb
in
adc
ss
addr16
mov
lods
push
xor
adc
cld
imul
lds
jmp
xchg
iret
jp
cltd
filds
call
scas
fwait
jb
or
lods
pop
mov
or
sarb
push
xor
test
xlat
jae
inc
mov
xor
dec
add
jmp
jne
sub
scas
jg
dec
inc
rclb
sub
into
lcall
jecxz
mov
mov
pusha
or
mov
shlb
sub
xchg
cmp
pop
inc
mov
lods
cmp
imul
cwtl
gs
sbb
dec
xchg
cmp
stc
jl
ret
test
ds
dec
fwait
aas
cmpsb
mov
out
insl
xor
fbstp
xlat
mov
sahf
sti
dec
into
pop
cld
push
push
ljmp
add
daa
or
loop
jl
repz
push
jg,pn
sub
mov
popa
mov
test
or
sbb
lcall
mov
mov
shl
xor
fs
mov
test
mov
add
fstl
loopne
or
stc
jle
leave
pop
sbb
sbb
cmpsl
ja
mov
mov
ljmp
insb
xchg
mov
gs
fwait
int
jmp
jmp
rol
sbb
cld
cmp
adc
imul
cmpsl
pusha
push
sbbl
xchg
aaa
dec
mov
cmc
enter
aaa
fidivrl
fs
loop
pusha
rorl
mov
in
adcl
stos
or
sbb
jne
imul
loopne
mov
nop
aam
mov
mov
mov
mov
lea
pop
inc
fucomp
sbb
outsl
das
dec
or
jecxz
mov
and
or
test
mov
in
sub
dec
jo
xchg
adc
pop
adc
jnp
mov
fdiv
xchg
adc
adc
popl
mov
outsb
mov
scas
adc
es
test
jmp
and
jmp
incb
daa
outsb
mov
orl
lods
das
sbb
xchg
fimuls
insb
daa
fimull
iret
sub
scas
loopne
js
leave
bound
mov
testb
inc
adcl
sub
sbb
in
mov
ds
pop
out
push
pop
cmp
dec
stc
mov
ds
ret
imul
js
add
mov
push
xchg
lahf
xorb
sbb
mov
or
inc
jmp
into
and
jecxz
or
sbb
mov
add
shr
sub
mov
pop
mov
jno
fcmovu
adc
inc
pushf
dec
jae
imul
or
lds
bound
scas
push
fcomip
xchg
test
andl
enter
mov
lea
ss
iret
daa
push
mov
outsb
xchg
add
outsb
cmp
dec
decl
mov
mov
dec
xchg
std
sub
xlat
mov
mov
mov
rolb
cmc
lret
imul
bswap
sbb
push
in
pop
fcomip
lds
movsl
leave
inc
int3
cld
adc
arpl
fs
add
mov
cmp
jmp
pop
mov
iret
and
cmp
push
and
add
xorl
mov
sbb
mov
xchg
dec
ss
and
jge
sbb
in
push
aam
push
sbb
fs
sbb
add
mov
out
and
in
xor
xor
movsb
sub
mov
push
dec
adc
fisubs
cmp
mov
adc
and
imul
pop
xor
mov
pop
mov
es
mov
in
imul
in
mov
and
or
xor
sahf
test
jae
sbb
out
sub
mov
js
sbbb
out
scas
test
mov
mov
dec
ja
sub
adc
fbstp
mov
movsl
jnp
push
sti
mov
and
push
insb
sub
arpl
out
lret
push
cmp
xor
mov
je
inc
mov
lock
imul
mov
fs
xor
daa
outsb
into
lret
xor
icebp
push
dec
sub
mov
lds
xor
jns
inc
popa
xor
es
insl
cmp
jl
loopne
out
inc
push
sarb
cltd
leave
test
aaa
jle
xor
adc
in
xchg
shr
cmc
mov
cmpb
push
sub
push
fnstsw
mov
fidivrl
push
cltd
sub
mov
and
in
loope
cs
push
das
cmp
pop
dec
ret
fsubs
rcrb
sbb
pop
cli
sub
mov
ficoml
mov
in
inc
cmc
test
mov
fmul
xlat
sub
popa
add
in
jnp
push
xlat
pop
mov
add
je
xchg
stos
outsb
aam
pop
in
push
adc
push
outsl
or
lret
xor
inc
inc
lods
jns
insl
fcomi
add
in
imul
xor
mov
inc
aas
push
and
mov
sub
xchg
and
pop
pop
or
mov
mov
in
insl
mov
jp
xor
inc
xchg
imull
fistpll
pop
aad
jns
mov
int
adc
xorl
cwtl
mov
jmp
hlt
popf
loopne
je
pop
xchg
inc
in
jmp
and
ljmp
sub
sub
out
sbb
xchg
int3
inc
ret
xchg
ja
mov
xor
mov
push
sbb
jmp
sbb
ja
xchg
cld
mov
dec
andb
and
fisubs
jo
inc
cwtl
or
adc
lahf
lahf
sub
xchg
out
add
outsb
inc
sbb
dec
pop
cmp
mov
push
icebp
inc
movb
inc
int
push
les
jmp
outsb
mov
xor
rcrb
mov
sahf
out
mov
jne
push
pusha
inc
ret
rclb
or
push
cmc
lds
sbb
mov
cli
jo
push
cwtl
test
mov
aaa
sbb
cmpsl
mov
sub
jb
ja
jmp
test
xchg
pop
loopne
add
sarb
inc
xchg
cmc
icebp
mov
lods
inc
dec
dec
mov
dec
and
cmpl
jp
or
pop
test
data16
shlb
adc
imull
loopne
fistl
cmp
xchg
daa
sbb
push
mov
mov
lret
mov
fsubl
jmp
cmp
loopne
js
xchg
enter
sbb
cmp
push
and
into
addb
in
jg
fs
icebp
sbb
mov
leave
int3
jmp
daa
mov
mov
pop
mov
jmp
movsl
push
jmp
in
cmp
mov
jle
xchg
ja
mov
push
lcall
pop
pop
cmc
stos
test
sub
xchg
inc
scas
dec
fidivl
and
or
int3
int
pop
mov
or
push
fcomi
add
cmp
out
push
cmp
ja
aam
and
aad
mov
cmp
xchg
xor
or
sbb
cmp
sbb
shrb
rcl
lret
mov
jb
jbe
shrb
popf
out
mov
pop
xchg
imul
pop
mov
push
pop
insb
icebp
xorb
inc
cmp
cs
movsl
pop
adc
je
ret
and
lret
dec
lret
sub
adc
enter
add
std
test
call
addr16
cmpsb
sbb
or
andb
data16
out
mov
push
jne
or
mov
jp
pop
xchg
add
inc
js
into
sub
xchg
jbe
xor
lret
inc
aas
add
pop
scas
push
loop
mov
movsl
lret
leave
inc
daa
in
inc
ja
lret
ret
sbb
test
in
test
dec
pop
mov
sub
pop
xor
sbb
add
cmp
lods
sbbb
imul
adcl
dec
dec
and
popf
das
in
pop
lcall
nop
add
sub
loopne
and
inc
scas
dec
fiaddl
sbb
adc
fistpll
shll
mov
sbb
mov
test
xor
data16
nop
jge
enter
in
sbb
sub
sub
or
in
nop
popf
adc
sbb
ret
imul
cwtl
mov
cmc
lret
mov
je
jmp
fcmovb
jp
in
mov
push
loop
adcl
inc
pop
mov
xchg
out
loope
or
pop
adc
add
adc
dec
mov
lea
pop
dec
ljmp
mov
test
dec
push
mov
das
stos
add
mov
jmp
jl
sub
adc
adc
mov
push
movzwl
movsl
xchg
int3
mov
addr16
std
dec
mov
add
xchg
cmp
jne
icebp
dec
jb
imul
xchg
jo
aad
scas
and
jb
cld
je
pop
xlat
xor
dec
inc
sbb
sbb
gs
cltd
dec
repz
icebp
sbb
mov
pop
mov
or
popa
loopne
loopne
mov
jo
loope
out
pop
or
or
mov
xchg
sarl
mov
dec
imul
add
adcl
cld
sti
and
xchg
subl
jecxz
or
pop
or
adc
icebp
push
dec
sub
shrb
xchg
cmp
mov
xchg
adc
rol
andl
inc
clc
or
xchg
outsb
push
pop
xchg
popf
or
incb
lahf
push
cmp
sbb
dec
mov
mov
fdivs
push
test
xchg
sbb
mov
mov
loopne
lods
xor
sbb
jg
xchg
shll
sub
cmc
mov
jns
sbb
mov
mov
xor
outsb
out
imul
cs
push
dec
mov
fldt
mov
dec
xchg
cld
clc
xor
iret
mov
add
testl
pop
adc
pop
jne
mull
lret
jle
sbb
jbe
sub
pop
insl
mov
cs
push
xor
sub
mov
jl
test
aad
cmp
stc
fcomip
test
xchg
jl
lea
lods
sbb
ljmp
xchg
sbb
cmp
push
cmc
lods
xlat
add
popf
lds
movsb
stos
jecxz
sbb
lahf
cmpsb
jecxz
mov
cmc
jl
loop
and
mov
cmp
insl
mov
aad
mov
mov
mov
lock
mov
fwait
test
jb
fmuls
leave
mov
jae
dec
lret
and
mov
push
mov
sahf
and
data16
xor
adc
jmp
jmp
pop
sub
jle
test
mov
pop
push
loopne
scas
jg
mov
pop
dec
ret
mov
aam
enter
pop
dec
add
pop
push
mov
repz
or
outsb
call
pop
or
mov
clc
xlat
mov
fmull
cmpsl
repz
and
ret
sti
mov
pusha
push
rdmsr
xlat
outsb
cli
jecxz
int
shll
push
dec
mov
aas
pop
pusha
push
xchg
ret
shl
leave
or
xor
mov
push
out
push
cwtl
insl
sahf
insb
das
call
push
popf
fldt
mov
xchg
movl
add
xor
adcl
stos
mov
in
pop
dec
and
mov
jbe
add
jp
popf
rcr
fmull
leave
cmc
es
jecxz
dec
mov
out
or
lock
out
inc
and
xor
push
jg
pop
dec
pop
nop
jae
scas
dec
mov
aas
mov
cmp
xor
mov
cld
in
addl
mov
insl
sbb
xor
jbe
push
xchg
sub
lods
sub
iret
shr
mov
or
movsb
mov
xchg
aas
push
in
cmp
add
cli
pop
les
fisubrs
cmp
pushf
ret
add
push
push
inc
sub
inc
mov
decl
popf
je
mov
in
lods
mov
cmp
jecxz
nop
and
aam
sbb
jl
sub
add
insb
mov
jb
rcrb
pop
ja
push
jge
insb
es
popf
test
ss
xchg
cmp
mov
pop
mov
testl
adc
pop
and
push
pusha
daa
sbb
jl
cmp
jbe
inc
mov
lds
jg
out
xchg
jnp
nop
or
je
mov
mov
dec
call
mov
repz
or
lods
dec
movsl
adc
jo
mov
mov
dec
and
gs
cmc
dec
out
mov
sub
stos
and
fmull
or
jbe
push
inc
ss
xchg
nop
xchg
add
les
gs
sub
es
sub
cmp
jbe
lds
push
inc
test
inc
nop
ss
leave
dec
gs
popa
mov
jb
lret
or
push
shlb
jle
push
mov
xor
fnstsw
mov
dec
mov
test
shrb
xor
loope
fiaddl
ret
xchg
dec
outsl
cltd
int
aaa
mov
imul
imul
shl
dec
scas
xchg
roll
in
stos
lret
mov
push
pushf
jle
aas
xchg
mov
insb
mov
arpl
cmp
xorl
dec
sub
push
aam
test
mov
mov
decl
dec
cmp
xchg
add
pop
and
and
mov
mov
add
ret
sbb
aad
jge
push
mov
ja
mov
test
mov
pop
fisubrl
in
sti
mov
sbb
xchg
sbb
pop
fildll
and
push
sub
and
and
fsubp
mov
divb
les
shrl
dec
add
sbb
fsubrl
push
mov
mov
enter
pop
pop
jecxz
std
pop
movsl
scas
shll
dec
in
stc
fists
inc
xchg
or
repnz
jmp
sbb
clc
testb
ljmp
mov
mov
sbb
and
jbe
xlat
stc
fcos
jbe
dec
pop
sub
xchg
pop
fdivl
test
mov
subb
ja
and
cli
cwtl
mov
pop
popa
cmc
fistl
or
xchg
shll
and
and
neg
xlat
push
mov
mov
les
out
out
mov
add
pushf
dec
xchg
xor
adc
test
xchg
in
pop
outsl
call
int3
mov
leave
sarb
das
insl
aad
aad
fdivs
and
ja
cmc
incl
iret
scas
lret
and
inc
ss
lret
addl
sub
add
leave
and
test
xor
xchg
cli
mov
push
inc
loope
adc
repnz
add
jge
cmp
and
test
arpl
push
les
dec
cmpl
movsl
mov
gs
testl
iret
lret
ja
xchg
outsl
push
add
call
fists
dec
mov
lret
cmpsl
push
movsb
push
push
nop
scas
sbb
xchg
fwait
and
mov
mov
mov
push
aam
notb
sub
lcall
jne
test
mov
sub
push
inc
xor
cld
cs
stos
fisubrs
sub
mov
jge
inc
or
ss
or
sbb
pop
rcll
pop
mov
push
dec
sbb
sbb
mov
aaa
and
rorb
mov
loop
ret
in
mov
ds
scas
dec
xchg
sarl
cmp
dec
outsb
out
std
jno
inc
fisttpl
cwtl
xchg
scas
ret
test
in
mov
push
adc
push
jle
jnp
or
xchg
shl
imul
inc
push
cld
cwtl
xchg
and
in
mov
xor
sbbb
stos
fistpl
fisubs
addr16
dec
sbb
sub
lret
pop
movsl
push
cld
pop
pop
mov
data16
lcall
mov
or
or
sub
or
sbb
popa
fistl
cli
and
dec
and
inc
dec
xchg
adc
inc
xchg
xor
aam
fwait
pushf
and
aam
sbb
rcr
and
data16
hlt
nop
out
jle
les
imul
std
aam
cmp
sub
negb
mov
icebp
sarb
and
sti
cwtl
adc
mov
cmc
sub
in
or
add
cs
shlb
lock
xchg
idivb
sbb
jecxz
js
mov
xor
add
stos
repz
popf
das
test
sub
rorl
mov
pop
cmpsl
jns
push
pop
dec
daa
mov
rsm
cmp
pop
pop
add
loope
mov
out
out
inc
das
mov
sbb
insb
scas
cltd
in
push
repnz
frstor
aaa
outsl
pushf
pop
rol
cmp
xor
dec
test
out
mulb
or
enter
inc
gs
lea
sar
and
lds
or
push
pop
xor
jecxz
repz
mov
or
and
adc
xchg
in
ret
insl
add
xor
negb
adcl
aad
mov
rcrb
vpsubw
add
lods
in
and
int3
pop
test
fs
gs
std
jae
in
decl
push
sub
sbbl
fmull
mov
inc
test
adc
pop
cmp
into
cmpb
push
sti
sub
cmp
xlat
add
dec
loope
inc
jb
inc
jl
jge
xor
icebp
out
dec
mov
adc
mov
adc
hlt
enter
dec
or
pop
push
push
dec
stc
and
out
shll
fnstcw
xor
sbb
mov
dec
jg
lds
in
repz
enter
xor
in
std
js,pn
insb
jge
push
aas
fwait
and
clc
add
adc
mov
push
push
cwtl
cmp
fdivl
mov
push
inc
out
outsb
test
nop
push
into
push
and
clc
pop
mov
sub
nop
mov
mov
ffreep
outsb
mov
jae
inc
mov
mov
mov
aad
xlat
movsl
les
jl
sbb
dec
xor
lods
push
test
aad
aam
adc
or
mov
mov
imul
sub
je
cmp
push
nop
mov
mov
call
mov
pop
push
mov
test
out
mov
movsl
std
subb
pop
fsubrp
pop
dec
dec
test
sbb
clc
jbe
mov
call
enter
xlat
sub
in
imul
push
push
push
pusha
cmpsl
ret
pop
inc
and
or
mov
xor
aaa
flds
lds
mov
push
les
mov
inc
int3
dec
lods
cld
adc
aad
sbb
aas
sub
pop
sahf
lods
dec
pop
xor
dec
mov
ss
xor
popf
mov
ljmp
clc
icebp
lock
push
mov
dec
in
ret
inc
or
push
dec
mov
push
test
icebp
sub
sub
ret
leave
xchg
sbbl
cli
dec
adc
xor
test
pushf
outsb
fsubrp
or
pop
add
sub
test
xor
fsubr
xchg
add
pop
push
or
shrl
mov
sbb
dec
test
dec
daa
or
ror
adc
inc
mov
aaa
into
mov
inc
sti
pop
mov
orl
repnz
add
xchg
mov
std
jmp
popa
dec
ja
cmc
dec
mov
in
loopne
cmp
jg
in
sahf
jg
mov
stos
insb
mov
add
sarl
cmpsl
loopne
sbb
jns
pushf
inc
mov
mov
jno
adc
sub
xchg
inc
jae
jmp
xor
or
in
mov
or
fcoms
in
mov
adc
les
inc
or
test
mov
out
mov
lock
movsb
scas
mov
cmp
xchg
mov
into
jb
fisttpll
dec
inc
iret
add
fstps
loope
mov
jne
aam
or
jne
or
je
adc
or
sahf
popa
jnp
and
rorb
and
xchg
in
mov
mov
or
add
adc
int3
dec
push
imul
mov
mov
push
add
jecxz
test
push
stos
mov
xchg
ljmp
lret
jb
jae
mov
xchg
jnp
sub
bound
dec
jns
sarl
mov
insb
mov
xchg
insb
mov
pop
loop
test
pusha
sbb
leave
inc
mov
mov
add
pop
mov
addr16
add
inc
sbb
xchg
stos
push
cld
sbb
loope
leave
jb
addr16
outsb
cmp
fnsave
cmp
pusha
mov
ljmp
movsb
inc
stc
xchg
push
sarl
dec
add
add
rol
cmc
push
dec
mov
imul
iret
je
and
xorb
out
stos
add
lea
push
inc
or
lods
push
js
stos
add
mov
push
or
add
dec
pop
cmp
jns
push
push
mov
and
fwait
sbb
or
pop
xchg
jle
cmp
std
add
pop
mov
inc
or
fcmovnbe
pop
insl
add
or
push
sti
ljmp
imul
mov
and
sarl
neg
xor
jb
and
int3
es
add
jo
pop
jns
movsl
lock
shl
mov
in
in
mov
inc
imul
lret
adc
jb
cwtl
fldl
scas
adc
inc
mov
cmc
iret
add
push
xchg
fisttpl
inc
fs
sbb
sti
mov
jae
adc
push
dec
jp
jmp
cmc
stos
imul
or
aas
cli
sbb
sub
stos
fcmovnb
pusha
xchg
jecxz
xchg
addr16
loopne
vmovsd
mov
clc
movsl
and
dec
movsb
push
push
testl
mov
pushf
icebp
imul
out
leave
mov
and
ret
ds
mov
and
cmp
mov
test
fldcw
cmp
pop
lds
stos
sbb
pop
jns
roll
xor
das
rorb
sbb
and
arpl
or
sarl
test
je
imul
adcb
xor
fcomps
roll
xchg
pop
in
or
cmc
sbb
and
sub
push
sub
sbb
int3
in
fs
sub
mov
add
and
add
and
pop
adc
xorl
dec
cmp
xchg
out
testb
push
mov
mov
mov
push
xor
mov
nop
test
pop
gs
sbb
add
rcl
in
out
cwtl
add
fcmovnu
cmc
push
lret
xor
jae
jnp
or
mov
repnz
sub
loopne
int3
dec
cmp
mov
fimuls
ljmp
sub
iret
jecxz
lea
popf
xlat
daa
bswap
dec
jae
lahf
scas
inc
cmp
jmp
push
lods
in
push
add
orl
lds
ds
sbb
cmp
fimull
sbb
pushf
insb
and
popa
in
out
shl
xchg
loop
test
sub
xor
add
cmp
pop
xchg
mov
in
pop
mov
push
gs
pop
mov
cmp
aad
sub
ja
bound
fsubrl
adc
out
aas
scas
mov
and
inc
sahf
or
pop
pop
jno
xchg
xchg
icebp
arpl
dec
inc
cmc
int
push
sub
and
jb
daa
inc
push
out
adc
lea
in
aad
out
mov
or
jae
or
pushf
sub
jl
xchg
adc
lret
push
dec
notl
orl
push
imul
andb
stc
sub
in
rorl
clc
pop
inc
in
int
jecxz
pop
mov
sub
push
mov
pop
xchg
pop
mov
js
sahf
xchg
incb
daa
js
repz
push
cmpsl
rclb
push
dec
cmp
std
mov
add
sbb
out
mov
push
adc
add
arpl
test
cltd
dec
push
test
int
pop
test
or
push
mov
xlat
mov
cmovg
lods
pop
into
cmc
mov
xchg
pop
incl
lret
jno
mov
out
es
jne
ja
adc
jae
rcrb
into
mov
test
mov
gs
mov
sbb
or
push
mov
xor
adc
or
iret
cmp
sbb
or
lret
push
stos
and
test
or
cld
in
push
inc
jp
sbb
repz
daa
cmp
int
cmc
mov
push
or
ret
cld
inc
cwtl
jge
jle
cmc
push
pop
iret
jb
xchg
data16
add
stc
lods
js
lret
sbb
ljmp
push
and
out
lock
kandnw
xchg
mov
inc
iret
sti
push
dec
xor
in
fistps
lds
leave
mov
sub
fldl
sbb
jmp
mov
aam
repnz
push
add
enter
mov
or
std
and
push
push
and
add
add
mov
jp
xchg
add
mov
subl
add
adc
test
rol
fdivs
inc
lea
xchg
pop
jmp
pop
mov
jne
ja
pop
push
jl
pop
inc
push
and
lcall
mov
stos
lret
lcall
cmp
dec
loope
xlat
nop
cmpsl
jo
cmp
cmp
and
mov
aaa
cld
addr16
xchg
and
or
js
pop
sub
jnp
aam
jp
push
sarl
outsb
imul
sbb
fidivrs
pop
push
stos
ljmp
xchg
test
cmp
fsubrl
imul
ljmp
ds
xchg
mov
and
aaa
cmp
fistl
sahf
lods
xchg
and
push
sbb
xchg
and
jl
mov
dec
cmp
in
jmp
inc
inc
jne
cmpsl
aaa
mov
shr
sarl
mov
repnz
and
daa
or
jle
pop
movsb
inc
fimull
add
pop
addr16
leave
jp
jnp
pop
iret
mov
inc
push
push
jnp
sbb
in
pop
outsb
sub
ds
cmp
lods
std
addr16
shlb
sahf
icebp
cmpsl
fidivl
test
arpl
add
jno
and
mov
xchg
mov
push
pushf
jecxz
rcrb
rorl
push
in
icebp
xor
jns
js
test
fsubrl
clc
outsb
andl
mov
mov
push
cmp
pop
xchg
stos
xchg
sbb
push
mov
cli
xchg
cs
insl
lods
sarb
repnz
mov
in
xchg
pushf
mov
loopne
adc
fs
adc
and
mov
rorl
in
xor
xchg
lock
pop
fbstp
lret
cmp
fdivr
cwtl
and
negl
lds
sbb
cltd
or
fisubrs
fst
sub
dec
inc
mov
and
sahf
and
into
add
cmc
fcoms
ja
or
pop
loope
into
xchg
xchg
mov
test
mov
les
mov
push
mov
jo
rorb
nop
loope
fstpl
cltd
leave
mov
sbb
pop
push
mov
ds
pusha
dec
cmc
jnp
out
sar
arpl
aad
sarl
clc
jl
or
add
mov
call
faddl
cmp
ror
rcrb
out
xchg
add
and
add
pop
xor
jns
pusha
adc
inc
in
mov
adc
push
adc
pop
cmp
adc
mov
ds
sahf
sbb
xchg
push
imul
es
add
cmpsl
sub
or
dec
cli
sub
das
test
shlb
lods
inc
cmpsl
das
pop
inc
aam
mov
sbb
fisubl
imul
inc
push
add
xchg
add
push
das
insb
ds
aaa
mov
ljmp
add
mov
push
int3
mov
push
stos
add
cmpsl
mov
sbb
in
jle
push
inc
mov
rep
cmp
add
and
xchg
call
mov
mov
inc
pop
bswap
in
fcomps
movsl
ss
imul
mov
test
jae
push
out
xchg
dec
and
notl
or
test
sti
roll
ficomps
inc
jo
fwait
and
es
cmpsb
gs
xchg
dec
mov
xorl
mov
jge
mov
fs
iret
xchg
mov
aad
loope
ja
push
test
cmp
vphaddudq
add
xchg
pop
test
sbb
dec
pop
lret
test
insl
lea
int
cmpsl
push
outsl
frstor
ss
push
aad
mov
pop
dec
dec
mov
jecxz
sub
pop
shll
add
inc
icebp
ret
inc
push
pop
fsts
mov
pop
jmp
mov
lods
ss
pop
pop
push
test
pop
pop
aas
rorl
xor
inc
jecxz
cmp
daa
jmp
mov
nop
mov
or
cmp
mov
test
mov
sbb
mov
adc
loopne
sti
js
fisubrl
jo
insb
addr16
add
testb
mov
lcall
xor
push
xchg
insl
int
adc
xor
cmp
lods
lods
movsb
dec
idiv
or
enter
lods
ficompl
xchg
xor
stc
push
sbb
sbb
clc
pop
ja
loopne
les
push
stos
xor
ja
out
or
dec
filds
add
mov
nop
loop
popa
add
jmp
out
adc
scas
pop
mov
es
mov
les
shr
test
pop
xchg
push
imul
in
lret
ss
xchg
fildll
adc
std
clc
imul
or
lahf
enter
stos
lret
add
mov
dec
cmc
and
mov
mov
adc
out
xchg
jno
push
mov
jmp
fistpl
fistps
sbb
cld
int
jmp
out
mov
inc
mov
adc
fs
mov
mov
ds
es
pop
mov
mov
in
xor
or
inc
negb
sbb
fsubl
dec
pop
pop
dec
push
shlb
mov
mov
xchg
xchg
xor
inc
js
fisubrs
inc
bound
ja
movsl
jo
filds
jge
call
cmc
sbb
ja
mov
cmpsl
cmpsl
dec
pusha
push
data16
mov
cmpsl
mov
dec
adc
push
dec
call
stos
loop
dec
push
insb
or
sub
imul
cmp
int3
imul
cmc
hlt
add
cmp
adc
sbb
or
lods
jp
xchg
lods
xchg
mov
dec
aad
mov
mov
xor
je
mov
fmull
xor
xor
jbe
fst
mov
add
xchg
test
das
cmp
jge
jno
or
cmp
xor
adc
mov
jg
xor
and
and
cmc
nop
cltd
mov
or
adc
mov
mov
mov
lcall
mov
insb
xlat
mov
adc
or
and
test
lock
adc
dec
jo
call
leave
leave
dec
scas
mulb
adc
fldenv
mov
lcall
cmp
scas
popa
ss
out
adc
jmp
pop
insb
lret
cmc
mov
movsl
nop
mov
sub
popf
notb
test
xchg
pushl
lcall
mov
xchg
xchg
lret
cs
adc
push
fidivrl
mov
dec
mov
int
push
in
jb
push
cmp
inc
into
fisubrs
fldl
dec
add
aam
popf
fucom
ret
mov
xchg
adc
out
jg
push
or
cs
in
shlb
mov
imul
and
test
mov
xchg
mov
das
cmpsb
hlt
ja
mov
mov
jno
aas
jno
clc
xchg
in
xor
push
ret
test
fmull
push
push
bnd
mov
sbb
dec
mov
adc
push
mov
dec
in
lret
xchg
xchg
cmp
std
int
pop
cmc
mov
sbb
mov
push
shrb
fisttps
pop
ret
push
push
pop
pushl
xchg
jb
mov
mov
lcall
popa
insl
jmp
shlb
test
inc
or
mov
arpl
push
pop
mov
mov
xor
and
dec
out
sbb
cs
out
jo
test
fwait
ljmp
and
aaa
jno
sub
and
sub
sar
fnstcw
sbb
test
pop
cmp
paddd
sbb
dec
fdiv
inc
xor
in
int
je
or
mov
bound
mov
test
into
sbb
popa
xchg
mov
imul
test
xchg
sub
movsl
xor
aam
out
xor
enter
pop
pop
test
adc
aaa
addb
pop
push
js
scas
fldcw
push
sbb
mov
outsl
xchg
fdivs
test
js
mov
inc
lret
sub
iret
ja
iret
in
and
or
push
js
call
lock
add
or
cmp
movsb
addr16
loopne
push
shrl
sub
mov
inc
aad
gs
cmp
dec
xchg
int
dec
inc
lret
into
call
nop
cmp
jge
cmp
imul
push
sub
ret
lock
push
xor
pop
dec
xchg
pop
ficoms
clc
roll
arpl
push
and
aaa
sub
aad
xchg
out
clc
cmp
enter
add
fnstcw
pop
or
cwtl
scas
add
imul
stos
push
sti
les
xchg
repz
test
or
loopne
std
sub
xor
bound
out
shrb
cmp
test
clc
fisttpl
xor
inc
adcl
pushf
and
fadds
or
in
inc
cmp
repz
out
dec
rcll
mov
mov
mov
and
je
jne
sbb
enter
cmp
mov
int
dec
nop
jnp
inc
pop
in
cmp
jecxz
mov
pop
addr16
cmpl
fs
mov
push
pop
add
insb
xor
sti
imulb
in
and
insl
mov
adc
pop
pop
pop
cmc
repnz
lock
mov
leave
xchg
mov
mov
and
cmp
mov
fcmovnu
adc
in
insl
adc
pushf
subb
pop
aaa
push
and
shrb
push
add
outsb
mov
mov
lret
gs
jne
push
jb
call
sub
jmp
push
sbb
imul
mov
jae
dec
outsl
and
arpl
les
pop
and
into
xchg
nop
ss
jp
sbb
stos
ja
daa
xchg
mov
pop
in
inc
xor
int
mov
mov
jecxz
push
fnstcw
cmc
movsl
divb
imul
rcll
js
mov
pushf
add
ss
push
jns
into
jmp
test
lcall
icebp
push
jl
outsl
leave
pop
push
sub
test
cs
push
rorl
fcmovne
inc
xor
xchg
adc
inc
or
inc
fisubrs
jge
sbb
lahf
sub
or
adc
jecxz
hlt
push
xor
push
lret
std
rcl
rcll
cmpsb
pop
sahf
push
dec
jnp
push
or
aam
into
pop
mov
insl
xchg
ret
arpl
mov
jae
sub
lret
mov
testl
and
mov
pop
in
mov
inc
scas
lret
scas
hlt
mov
dec
pop
or
push
daa
xchg
fs
je
cwtl
lods
pop
jmp
jae
into
mov
addr16
adc
lods
mov
in
clc
sahf
xor
and
jge
push
ja
mov
les
add
sbb
xchg
fadds
mov
xchg
lds
and
xchg
pop
mov
adc
inc
mov
jns
clc
push
dec
mov
pop
insl
pop
data16
pop
jmp
js
xchg
pop
push
lods
fdivrl
pop
pop
clc
jno
loope
fisttps
jb
movsl
jle
jo
insl
push
inc
pop
or
pop
sub
and
pop
add
rcl
repz
sub
das
jne
cs
mov
sub
mov
pop
jnp
ljmp
jb
add
int3
and
lds
stos
fildl
xchg
dec
push
sbb
cmpl
aas
clc
fisttpl
lret
mov
sub
xor
js
cwtl
mov
dec
std
shrb
push
in
mov
loope
mov
sbbl
pop
add
cwtl
nop
mov
fsubs
or
jno
movsl
push
pop
lcall
nop
jns
loop
sbb
das
movsl
std
stos
sbb
pop
loopne
iret
ja
test
stos
jae
pop
push
mov
mov
dec
daa
push
mov
repz
data16
outsl
push
push
xchg
dec
and
ljmp
in
push
jbe
mov
test
iret
xchg
jmp
mov
pop
pop
xchg
jmp
notb
aas
popa
rcl
sub
add
mov
shl
cmpsl
sbb
hlt
rol
fsts
cmp
xorl
stos
pop
xchg
andl
jle
popf
add
cld
xchg
or
or
push
aas
push
inc
sbb
cmp
int
or
mov
jno
mov
in
push
adc
jbe
popa
mov
outsl
xchg
jne
cmp
sub
loop
pop
stos
int
cmp
ret
pop
dec
jp
and
mov
scas
enter
or
xor
cmpsb
in
cmc
sub
faddl
cwtl
testl
ljmp
insb
jns
pushf
adc
cwtl
jns
ret
sbb
movsb
stos
mov
sub
and
data16
dec
aas
out
ret
fistl
pop
xchg
sub
insb
xchg
ds
sbb
mov
jno
pusha
xchg
cmp
fsubr
cmpsb
jl
push
ret
cmp
cli
std
int
and
add
incb
add
idivb
push
fs
mov
jecxz
adc
xchg
sbb
movsb
leave
xchg
pop
ret
stos
mov
iret
sbb
mov
ret
mov
scas
lock
add
add
mov
outsb
lods
pop
jnp
jle
or
pop
sti
inc
ss
in
add
imul
lods
add
fbstp
rolb
lea
mov
add
inc
dec
cmp
or
adc
sbb
std
inc
enter
outsl
in
icebp
cmpsb
test
shrl
stc
jne
and
ds
xor
and
das
cmpsb
push
into
adc
or
call
and
mov
fwait
stos
lret
jo
sub
pushl
mov
cmp
loope
jge
cmp
and
jo
stc
shlb
sbb
pushf
inc
sbb
popf
ja
inc
pushf
mov
mov
das
leave
clc
jp
clc
movsb
mov
je
xor
enter
dec
popa
pop
add
push
inc
popf
adc
loopne
outsl
mov
cs
mov
insl
fbstp
adc
lock
inc
std
mov
mov
stos
iret
cs
enter
mov
sbb
adc
adc
dec
pop
inc
push
aas
clc
shlb
fldt
inc
xor
jb
push
data16
iret
add
arpl
mov
cltd
mov
xor
pop
push
inc
das
dec
push
add
fsubl
pop
repz
pop
pop
xchg
add
addb
mov
mov
je
xchg
mov
inc
hlt
fldcw
mov
test
leave
pop
xchg
stos
aam
push
jnp
out
sbb
shlb
mov
xlat
sub
das
shld
es
in
jne
xor
mov
and
adc
lock
ss
out
pusha
in
aaa
je
mov
shl
mov
icebp
jo
test
xchg
pushf
push
or
xor
les
std
test
pop
jbe
and
int
add
aaa
inc
xchg
mov
testb
lock
jnp
xchg
adc
mov
adc
lret
jmp
cs
test
cmp
fistpll
mov
sub
in
repz
push
inc
nop
notl
sbb
int
sub
jo
stc
xor
movsl
jb
add
mov
push
aad
add
jge
ss
iret
movsl
repnz
shlb
and
and
mov
mov
add
shl
lret
ja
pop
fcomip
xor
sahf
out
pop
sub
imul
sbb
dec
test
shlb
test
and
mulb
sbb
gs
pop
dec
int
xchg
insb
es
movsl
inc
pop
out
mov
inc
xor
imul
push
push
test
pop
xchg
test
pushf
int3
arpl
call
mov
sbb
shrl
outsb
fs
sbb
fldl
in
insb
cmp
lods
mov
mov
out
adc
aad
out
mov
insl
mov
mov
mov
or
xchg
imul
outsb
sub
xor
loope
lcall
test
loopne
and
push
mov
cmc
add
push
cmp
pop
je
lea
call
cltd
xorb
adc
bound
mov
jge
mov
mov
shrb
dec
imul
leave
imul
mov
cltd
mov
inc
cli
sbb
xor
and
stos
out
out
and
ss
xchg
leave
xchg
jg
add
mov
inc
mov
pop
adc
mov
popf
xchg
xor
leave
cmc
sbb
adc
loop
pop
insb
jo
scas
mov
test
loopne
lock
pushf
pop
arpl
mov
xchg
adc
std
adc
call
inc
pop
loop
lret
inc
repz
jo
aaa
rorb
sahf
clc
rcll
enter
xor
scas
leave
adc
mov
mov
and
pop
pusha
and
stc
xchg
mov
pop
xor
gs
pop
ja
aam
loope
jno
lods
mov
aaa
scas
mov
adc
je
scas
lret
stos
testb
subl
lods
lods
mov
fcoms
mov
sbb
push
or
jne
xor
xor
shll
shlb
popa
loop
cwtl
pop
pop
xchg
cmp
add
add
add
sub
mov
and
test
pop
sbb
mov
inc
push
jnp
ds
lock
shrl
ljmp
push
xor
mov
xchg
in
push
xchg
xchg
inc
pop
lret
and
inc
pop
or
out
jae
js
shrl
das
cmp
dec
add
pop
inc
popf
or
faddl
cmp
iret
adc
scas
out
je
and
in
ficoml
mov
scas
adc
push
jecxz
add
jle
mov
pop
fwait
xlat
subb
cmc
xor
scas
ds
mov
mov
movl
push
imul
jle
sub
cmpb
lods
mov
adc
xchg
fidivrs
leave
int
cli
rclb
leave
fldl
cmpsl
cmpsl
push
aas
xor
loopne
jmp
es
dec
rcll
cmp
dec
jmp
gs
lea
out
aas
sbb
sub
lret
inc
lea
sub
ljmp
mov
shl
mov
jae
sub
enter
push
cmp
lods
pop
dec
stos
ss
sbb
dec
mov
mov
mov
jnp
out
fstp
inc
pusha
shrd
mov
inc
xor
add
jo
std
mov
test
dec
cwtl
mov
inc
jnp
sbb
sub
in
inc
cld
dec
ljmp
ljmp
fstpt
lahf
and
mov
sbb
movsl
cli
addr16
test
jg
mov
mov
mov
lods
sbbb
cwtl
sahf
out
das
mov
inc
adc
and
loop
pop
cmc
mov
js
mov
inc
xor
push
fdivrp
push
mov
fs
add
dec
sbb
sbb
xor
pop
cmp
popf
mov
cmp
loop
fistl
xchg
test
out
insb
bound
cmp
cmp
pop
sub
xchg
sub
int3
out
mov
cld
cmp
aam
xchg
lods
mov
jmp
mov
aad
stos
popf
stos
push
je
dec
push
add
add
dec
scas
adc
dec
jg
or
push
test
enter
cs
mull
xchg
add
daa
lcall
shrb
pop
push
add
aaa
testb
inc
fs
fsubl
cmp
mov
xchg
xor
jno
inc
mov
cmc
ss
xlat
push
and
cmpl
mov
hlt
addr16
adc
jmp
xchg
popf
add
movsb
xchg
and
inc
popa
dec
mov
inc
ss
cmc
scas
cmpsb
jns
push
push
cmpsb
mov
sub
outsl
imul
xchg
adc
cltd
add
insb
push
push
push
inc
adc
sti
outsb
outsl
inc
fs
bound
mov
leave
jnp
imull
stos
or
cmp
inc
aas
fisubs
push
mov
xor
add
jecxz
cld
cmp
pop
ret
push
fst
add
dec
jmp
pop
out
dec
mov
insl
xor
cmp
test
dec
in
ret
ja
mov
pop
out
lret
repnz
pop
xor
mov
ljmp
xchg
negb
xlat
popf
daa
or
iret
push
adc
movsb
jns
lahf
pcmpeqb
push
ret
push
cwtl
xor
addr16
repz
pop
xor
icebp
jns
jp
pop
insl
inc
lret
mov
add
xor
sbb
inc
dec
lcall
lahf
or
push
ret
cmp
imul
dec
inc
jns
mov
sub
jns
xchg
je
cmc
fmull
in
int
mov
pusha
fldcw
xchg
out
pop
fdivrl
mov
sarl
repz
lods
adc
jo
in
push
mov
mov
aaa
and
xchg
add
add
sub
rcrb
sub
inc
push
sbb
int
and
lahf
lahf
xchg
push
je
mov
sub
add
inc
jmp
in
or
xchg
ret
sbb
dec
aas
xor
jecxz
or
jne
mov
sahf
movsb
push
xchg
xor
push
dec
testl
adc
imul
inc
enter
int
mov
mov
mov
pop
dec
ret
icebp
and
cmp
ljmp
mov
mov
dec
test
add
sub
cmp
scas
je
cwtl
xor
enter
add
daa
adc
mov
mov
and
mov
fcmovnu
ss
ljmp
add
mov
cmc
cmp
cmpsl
popf
pop
pop
mov
push
fists
lahf
rcr
test
popf
mov
push
and
dec
mov
fsubr
adc
test
inc
add
inc
movsb
ret
sub
cmc
xchg
lret
test
mov
mov
xor
sbb
gs
or
test
mov
adc
add
cwtl
jge
inc
fidivrl
daa
mov
push
or
pushf
in
imul
les
scas
orb
ds
rcl
sbb
mov
cmpsl
xchg
and
mov
shrl
jg
push
mov
cltd
pop
lcall
sub
out
sti
idivb
add
into
jo
addr16
jmp
inc
xor
es
adc
lcall
sti
iret
inc
cmpsb
in
loope
pavgb
mov
xchg
sub
pop
outsl
xchg
lahf
lret
jb
xorl
mov
sub
loope
ljmp
aad
sub
prefetcht1
mov
push
mov
or
push
mov
mov
dec
movsl
pop
jo
jo
xor
mov
xor
cld
cltd
fsubs
add
pop
cld
xlat
dec
les
pop
shrl
outsl
sarl
jo
cmpsb
cmpsb
popf
cmp
ret
andb
movsl
lahf
pop
shll
data16
adc
out
iret
add
xchg
and
loopne
push
sbb
inc
nop
scas
sub
inc
pop
mov
sbbl
int3
int3
xchg
addr16
push
or
sbb
sub
nop
jmp
add
cmp
xor
inc
jl
push
adc
pop
movsb
inc
gs
movsl
push
jecxz
inc
push
lea
iret
mov
adcb
mov
xchg
call
mov
jno
mov
mov
mov
xchg
sbb
pop
out
mov
sub
popf
push
pop
imul
dec
pop
pop
xlat
fadds
in
in
jo
xchg
fstps
inc
sbb
sub
nop
hlt
std
jge
lods
sbb
xor
or
std
and
les
or
pusha
fs
mov
out
mov
lret
add
sbb
sub
lods
xor
fdivs
jmp
and
hlt
enter
pop
aam
addr16
sub
xor
adc
stos
add
fsubp
and
shlb
jo
xchg
daa
ret
mov
xor
clc
mov
mov
xor
or
loopne
idivb
pusha
or
fs
add
xor
aad
lock
push
and
outsl
cmc
or
arpl
subl
jnp
xor
rcl
inc
stos
pop
call
cmp
jbe
add
mov
daa
leave
jbe
inc
jns
push
mov
shr
inc
fiadds
ret
push
jmp
scas
fsubrs
shl
push
stos
xor
and
stc
fisubrl
jnp
jbe
addr16
mov
movsb
loop
sti
loop
sbb
xchg
cmp
ret
xchg
outsl
xchg
cmp
test
aam
add
fcompl
inc
mov
and
lock
je
lock
ja
sarl
sub
inc
je
fcoms
jbe
push
or
pop
in
inc
jp
mov
inc
test
jbe
pop
add
popa
jb
dec
pusha
clc
inc
jno
lods
dec
sti
cmp
inc
mov
jmp
pop
divb
lds
bound
jb
cmp
mov
push
imul
inc
jmp
pushf
add
xor
lods
rcl
mov
repz
rorb
xchg
iret
test
pop
out
iret
es
inc
lds
cld
outsl
cmpsl
fildl
lea
adc
and
xchg
movsb
xchg
inc
pop
aaa
mov
fcmovu
dec
divl
ret
or
rcl
push
aaa
lds
aam
pop
fimull
imul
js
aas
lods
jl
rcl
lret
mov
cs
int3
js
dec
into
push
addl
cmp
mov
xorl
stos
inc
sub
clc
stc
adc
inc
je
std
jno
stos
mov
int3
jne
out
xchg
into
pop
add
mov
loope
sub
push
cmp
icebp
fwait
ret
rolb
add
jae
cmp
pop
rcr
fcomp
rcrl
inc
out
mov
jmp
std
loopne
jns
or
lret
sahf
ds
and
out
in
mov
inc
enter
and
std
int3
sub
movsb
mov
loop
inc
mov
rorb
scas
pop
fidivs
jg
inc
sub
xlat
leave
fsubl
cmp
test
movsl
into
xlat
cmp
test
sub
push
push
rcll
mov
call
xchg
mov
scas
push
xchg
stos
sti
add
pop
inc
adc
aam
sbb
lods
aaa
out
cmpsl
loope
lcall
mov
enter
mov
stos
inc
dec
stc
mov
call
leave
jns
jae
ret
loop
sbb
into
jbe
xchg
dec
cltd
insb
mov
sub
sbb
mulb
rcrb
xchg
xchg
jae
fmuls
mov
mov
push
movsb
pop
push
bound
icebp
sub
cli
pop
mov
jb
push
fisttpl
fdivrs
adcb
data16
xchg
sbb
cmp
push
sbb
mov
add
outsl
xchg
lret
loop
push
push
cli
mov
push
xlat
mov
movl
loopne
sti
sbb
sub
fdivr
gs
test
das
or
mov
shl
pop
or
idiv
pushf
negl
aam
sbb
pop
leave
sbb
xchg
xchg
bnd
dec
and
add
cld
mov
mov
test
mov
stos
rorl
out
jne
adc
xchg
push
inc
mov
add
stc
jecxz
push
and
sahf
jbe
mov
ds
cmpl
pop
cmp
add
addr16
divb
pop
xor
jne
test
pusha
js
test
sbb
sbb
jnp
jbe
movsl
dec
sub
mov
cmc
adc
mov
pop
ficompl
xchg
dec
addr16
sub
push
lahf
xlat
fidivrs
rcll
push
lahf
pushf
lret
daa
mov
and
lahf
test
adc
or
jmp
sbb
in
lahf
cmc
ljmp
inc
push
jp
xor
push
cmpsb
iret
mov
add
jno
push
jae,pt
pop
imulb
pop
sbb
pop
daa
xchg
push
test
aas
or
mov
and
push
cltd
inc
mov
shl
cmp
jecxz
xorb
cvtps2pi
dec
imul
mov
repz
movsl
mov
dec
fwait
mov
mov
std
cmp
cmp
xchg
aam
js
iret
iret
mov
sub
insb
shrb
outsl
dec
cmpsl
mov
popa
fwait
or
adc
movsl
pop
frstor
mov
ljmp
jle
iret
in
pop
pusha
jo
mov
xor
mov
sahf
out
mov
jo
fnsave
or
inc
inc
lret
xchg
subb
or
mov
jno
jne
lds
sub
lods
mov
adc
pop
jle
imul
dec
pushf
sub
xchg
dec
push
jbe
push
push
addb
cmp
sub
mov
jb
push
outsb
cltd
addr16
pop
sbb
repz
aas
inc
lahf
loopne
push
cmp
inc
add
sbb
mov
push
push
push
or
sbb
inc
fcomps
pop
hlt
push
add
sub
pushf
fxam
pop
icebp
xchg
decb
push
out
stos
mov
outsb
sub
pushf
inc
push
dec
test
push
lods
sub
mov
lret
ja
push
jg
pushf
cmp
fistpll
dec
cmp
add
out
pop
xor
lcall
dec
mov
sub
test
xor
daa
pop
imul
mov
jb
and
out
sbbb
adc
je
jmp
cmp
lahf
andl
popa
ja
or
lret
mov
nop
in
stc
aad
rcrb
adc
sbb
lds
imul
push
sbb
fisttpll
xor
pop
cmpsb
gs
sahf
pusha
dec
imul
push
pop
mov
stc
add
inc
dec
mov
popa
sbb
mov
pop
dec
movsb
enter
call
cs
arpl
pop
jne
xor
or
outsl
pushf
mov
ja
fbstp
mov
stos
inc
lock
aas
xchg
jo
pop
loope
loop
insb
mov
cmp
mov
fwait
clc
lcall
rcrl
vmovaps
ja
cmp
iret
popa
mov
pop
fadd
out
gs
sti
mov
icebp
cmp
dec
subb
dec
mov
pusha
adc
lret
ljmp
dec
pop
lahf
sub
mov
movsb
lret
mov
xor
xchg
mov
pop
fnstenv
push
pusha
cmpsb
dec
scas
out
add
inc
ret
shrl
pop
cmp
pusha
gs
sbb
jo
jmp
push
dec
subl
fisubl
sbbb
popf
and
mul
sbb
cwtl
addl
mov
sbb
rcrl
insl
jo
push
lock
mov
roll
sub
mov
xor
imul
dec
jb
inc
inc
cmpb
pop
cmp
imul
or
or
lret
je
mov
xchg
arpl
cmc
fdivrs
shrb
stos
cmp
cmc
sbb
cltd
adc
mov
cmp
push
cli
dec
cmpl
and
cmp
aad
mov
and
or
or
les
pop
jnp
or
or
and
pop
insl
add
adc
int3
icebp
aad
mov
sbb
sub
sub
adc
int
mov
sbb
aas
add
xchg
inc
jg
in
and
dec
repz
cmp
sbb
jp
dec
fmulp
xor
push
bound
iret
repz
sbb
cmpsl
jae
imul
lret
jl
mov
repnz
mov
mov
lcall
add
outsl
cltd
int3
sbb
call
pop
lret
movsl
lret
test
data16
int
data16
add
repz
out
fadds
xrelease
push
xchg
or
adc
mov
push
cld
stos
lret
nop
add
aad
outsb
jo
pop
push
push
int
mov
or
jb
sub
movsb
out
scas
outsl
pop
insb
add
jno
call
push
push
out
stos
stos
in
pop
shlb
mov
sbb
sbb
ss
es
pop
scas
sbb
and
mov
push
ficoml
lock
mov
lods
xlat
xchg
inc
xor
mov
into
adc
pushf
dec
in
negl
sbb
mov
mov
sbb
imul
stos
mov
iret
jl
pop
insl
iret
adc
jecxz
sahf
jp
cli
fldenv
dec
sub
xor
and
aam
insb
je
or
aas
pop
mov
lock
pop
mul
popf
cmpsb
insl
xor
mov
cmp
and
imul
or
outsl
dec
adc
lods
inc
imul
mov
jmp
jb
dec
dec
mov
xchg
inc
fs
cmp
push
pop
ret
xchg
xlat
and
xor
xor
fdivp
add
stos
or
cli
data16
fwait
inc
and
cmp
mov
aaa
and
adc
cmpsb
fistl
mov
dec
mov
adc
es
cmp
sbb
mov
orl
fmull
mov
jge
sub
shlb
cmpsl
xchg
and
loop
xor
incb
sub
xchg
int3
fs
jle
mov
mov
sub
fstpl
subb
dec
sbb
push
mov
hlt
notl
shll
or
outsb
out
cwtl
pop
das
stos
icebp
sub
jp
push
loop
arpl
test
cwtl
and
into
jb
fstps
mov
fs
std
test
shlb
xchg
or
outsl
loope
or
add
jnp
mov
aam
pop
lea
adc
cmc
pop
cmpsl
les
xor
mov
sbb
cmp
xchg
sub
dec
dec
mov
add
sbb
jmp
mov
xchg
notl
nop
fsubrl
mov
xchg
inc
subl
outsl
psrld
push
movsl
adc
fst
pop
mov
pop
imul
sbb
push
sub
xor
cmp
sarb
push
xchg
cld
push
pop
push
jmp
ret
testb
sub
int3
addb
or
scas
push
push
stos
pop
rorb
mov
push
lahf
popf
leave
sub
nop
dec
aad
xchg
enter
xor
xchg
or
add
jmp
andl
push
mov
and
xor
inc
xchg
push
movsb
stc
lret
or
xchg
icebp
pushf
inc
dec
popa
stos
xchg
mov
cmp
pop
idivb
into
repnz
dec
scas
fbstp
shll
out
je
push
bound
adc
nop
mov
jo
les
ljmp
inc
rorl
stos
jno
mov
jmp
add
inc
out
dec
xchg
int
pusha
xchg
das
push
int
jbe
mov
mov
mov
and
ret
add
and
sub
cli
mov
jle
lret
jo
sbb
fisttps
stos
xor
test
pop
push
enter
xlat
xor
scas
inc
cmpsb
xchg
shl
subb
imul
xchg
xchg
ret
or
push
cmp
test
sbb
inc
nop
xchg
inc
call
pop
add
daa
cltd
ja
mov
out
movsl
cli
inc
sbb
push
mov
push
add
pop
mov
push
jnp
repz
mov
or
lds
mov
addl
test
pusha
push
mov
mov
jbe
inc
pushf
sub
cmp
or
aas
and
xchg
push
inc
pusha
xor
mov
sbb
aad
jo
cwtl
adc
jnp
sub
jge
sahf
or
xor
jmp
pop
mov
mov
daa
add
clc
incb
lea
dec
cmp
leave
and
add
pop
and
sub
ret
sti
inc
jle
and
xchg
sub
inc
adc
adc
mov
and
rcrb
clc
xchg
push
xorl
loopne
xchg
jae
inc
sub
cmp
test
add
repz
adc
sub
push
adc
sbb
iret
mov
scas
popf
push
xor
outsb
dec
add
mov
addl
jno
sbb
push
out
adc
nop
jg
inc
fidivrl
mov
push
jl
cs
cli
popf
xchg
in
push
and
fnstcw
push
dec
in
lods
pusha
mov
xor
test
lds
inc
lock
lea
aaa
sbb
pop
cld
xchg
bnd
jmp
stc
cld
inc
mov
sbb
inc
roll
dec
into
rolb
xor
cli
and
in
movsl
popa
mov
jl
or
sub
inc
cmp
mov
mov
lcall
subb
stos
dec
push
negl
add
sub
scas
add
aas
and
jge
and
iret
cld
sbb
rcr
popa
aad
dec
jmp
loopne
ror
sbb
pop
mov
pop
cltd
icebp
loop
sub
stos
lcall
daa
mov
mov
clc
pop
pop
bound
jmp
push
mov
mov
cmp
and
mov
mov
xchg
jbe
outsl
in
popa
jne
jbe
pusha
inc
pop
xchg
mov
insb
mov
dec
dec
mov
mov
push
pop
cld
pop
movsl
sub
xchg
rcrb
jecxz
or
fwait
push
pop
hlt
xlat
not
std
or
mov
js
lea
jbe
imul
inc
and
push
xchg
enter
lods
inc
int
lret
in
ret
es
jne
mov
out
inc
adc
pop
enter
out
ror
and
cmp
ret
aas
ret
mov
mov
and
daa
pop
sbbb
and
ret
enter
xlat
sti
and
fwait
lods
mov
xor
and
fs
pusha
mov
sub
pusha
mov
ret
or
mov
inc
fadd
adc
mov
loope
movups
push
xchg
mov
addr16
or
lcall
jae
push
inc
mov
loope
or
call
test
mov
push
sbb
xor
lahf
gs
xchg
push
mov
rorb
sti
aad
and
push
lea
out
addr16
mov
pop
ret
into
mov
test
fbld
xchg
les
cs
pop
mov
sub
jg
aam
addr16
or
or
call
repz
das
push
fsubr
test
lock
leave
and
ja
and
lahf
mov
mov
cld
mov
cmp
mov
xchg
inc
mov
mov
or
mov
outsl
int
test
leave
xlat
inc
aaa
stos
pop
mov
and
je
repz
mov
push
ja
int
sbb
shlb
xchg
je
add
inc
lret
jp
fndisi(8087
jle
cmpb
and
or
dec
mov
adc
test
pop
sub
jecxz
mov
jecxz
cmc
out
mov
lret
stos
icebp
mov
jecxz
clc
jp
pop
sti
xchg
ja
stos
mov
xchg
loope
es
lods
pop
push
or
in
inc
dec
aam
lcall
in
sub
xchg
out
pop
push
add
push
push
aam
out
and
insl
dec
push
leave
lahf
adc
xchg
outsl
faddl
popa
filds
into
pushf
mov
mov
dec
and
cmp
adc
sti
xor
mov
cmp
and
cmp
pop
xor
sbb
aaa
cld
adc
arpl
mov
jmp
xor
mov
cmp
std
hlt
push
sbb
mov
pop
push
cmp
pop
mov
fcmovb
fucomi
jb
xlat
icebp
in
frstor
fwait
movsb
xor
adc
rcrb
dec
pop
inc
mov
sub
mov
mov
fbstp
fmull
pop
jns
cmp
clc
inc
lcall
push
sahf
test
adc
add
inc
jno
xchg
xchg
out
outsb
call
jb
mov
shll
sahf
and
outsb
aad
mov
iret
ret
or
stc
rcrb
adc
push
ret
push
and
das
xor
push
mov
or
insl
xchg
xchg
jg
loopne
add
push
lcall
pop
jle
cmc
cmpsw
mov
in
push
cmp
daa
enter
mov
jmp
xor
inc
jg
fwait
aaa
inc
adc
cwtl
xchg
jne
outsb
xor
fcmovnbe
jge
insb
lret
icebp
dec
adc
mov
rorb
mov
add
mov
data16
jmp
loopne
fistps
loopne
hlt
addr16
inc
sbb
pslld
je
add
push
pop
jb
insl
mov
outsb
xor
jo
fidivrs
push
dec
imul
cmp
sbb
add
ret
leave
dec
xchg
jle
mov
jae
adc
mov
push
incb
ds
stos
or
xchg
clc
and
out
pop
mov
jns
inc
adc
mov
stos
sbb
xor
jle
cmp
pop
enter
push
push
or
jg
mov
aam
clc
pop
lahf
testl
mov
or
scas
sub
imul
jno
sub
pusha
or
or
sbb
dec
cmp
cmc
xor
fsubl
mov
inc
out
mov
rcll
bound
cmp
loopne
repz
or
popa
insb
xchg
inc
aad
jne
cmc
mov
frstor
push
jp
add
dec
in
dec
mov
test
ja
loop
fstps
lods
out
mov
popa
repnz
cli
js
pop
push
insb
sbb
pop
jb
gs
repz
call
aaa
mov
sub
sahf
or
xchg
xchg
add
and
lret
and
xor
loope
and
repz
in
or
shr
sub
cmp
cmp
mov
push
loope
xchg
cwtl
dec
add
add
hlt
iret
mov
ja
sub
mov
loop
in
jge
inc
es
dec
aam
mov
stc
jnp
mulb
xlat
ret
aad
fistpl
inc
xor
push
jge
inc
lea
repnz
cmpb
clc
int
std
fwait
and
ret
or
rclb
call
pop
push
jne
xor
loopne
xchg
insl
or
aad
insl
jp
pop
popf
sbb
pop
loope
mov
add
add
fisubrs
mov
nop
jmp
mov
inc
ss
sti
push
push
adc
sti
call
and
mov
and
jae
scas
jnp
jns
pop
jae
test
js
mov
lock
scas
and
out
push
lret
sub
mov
dec
out
or
fcomps
jle
jns
xchg
imul
pop
into
dec
inc
lock
aad
lods
scas
cmp
mov
adc
leave
sub
in
aaa
lds
xchg
and
sub
es
aaa
or
dec
lret
cltd
mov
push
xor
push
or
je
mov
xor
out
popf
lock
es
push
cmpsb
jns
cltd
mov
cmpsb
push
sbb
inc
or
mov
mov
inc
ja
pop
out
jp
xchg
xlat
push
mov
or
xchg
stos
aad
fdivl
jl
stc
cmpsb
fdivr
test
sub
push
pop
inc
push
cmc
and
cmpsb
call
mov
push
sti
mov
add
mov
ret
cmpsl
and
loop
les
mov
jg
dec
lds
bound
test
and
jb
shrl
jo
push
sbb
out
inc
movsl
shlb
and
adc
sbb
xchg
pop
dec
lods
push
jp
repz
and
push
push
inc
cwtl
mov
lret
mov
lods
mov
pop
push
push
imul
mov
mov
push
adc
push
cmpb
lods
notl
push
add
ficoml
fildll
je
ret
shl
adcb
flds
lret
test
mov
in
shlb
jecxz
nop
pop
lods
daa
xchg
mov
adc
ljmp
push
sub
ja
lods
scas
jnp
les
int
push
add
sub
and
sti
loop
fstps
push
dec
icebp
xor
mov
outsl
ja
dec
ja
int3
ss
and
shlb
cmp
cmpsl
jo
jmp
inc
dec
jb
loopne
jge
leave
push
mov
arpl
lret
pop
cld
popa
out
xchg
outsb
enter
sti
imul
aas
fimuls
push
jge
in
fisttps
sub
fsubr
mov
lret
sbb
pop
fisubrl
rolb
in
inc
jp
sti
aas
adc
inc
rcrl
stos
sbb
repz
ljmp
lock
cmc
cltd
ret
ss
and
in
cs
sub
jge
add
lcall
xor
out
es
arpl
btr
xchg
cmp
dec
push
adc
fnstcw
in
sbb
mov
imul
xchg
std
filds
mov
mov
insl
int3
cmpsl
cmp
sub
aas
int
aaa
push
fwait
repnz
fisttps
pop
inc
push
jne
mov
in
scas
xor
jo
xchg
lret
or
int
bound
aas
jae
cmpsl
jmp
mov
rol
and
mov
loope
nop
sub
jae
mov
repnz
cmp
mov
and
dec
daa
movsl
mov
mov
xchg
cmp
and
jle
ret
inc
pop
movsl
fstpt
push
inc
add
insb
xlat
or
pop
rclb
jp
mov
inc
xchg
jae
roll
roll
clc
push
out
pop
push
test
minps
fcoms
loop
hlt
in
push
in
jmp
fsubr
in
imul
adc
pop
add
fcmovne
ret
mov
rcrb
ljmp
imul
idivb
pop
dec
sub
aas
push
imul
stos
mov
cmp
icebp
xor
mov
cmp
shlb
out
cltd
in
add
loop
adc
pop
idiv
mov
loop
adc
inc
iret
mov
xchg
mov
jge
insl
mov
les
lcall
out
cmp
mov
divb
jns
mov
mov
push
push
dec
test
add
or
mov
sti
movsb
lods
int
pop
inc
mov
pop
out
jge
dec
gs
dec
test
jecxz
xchg
jae
sbb
pop
adc
shlb
mov
pop
push
add
push
sub
push
pushf
inc
mov
jns
xorl
jge
jl
test
ds
dec
sbb
add
lret
repnz
jo
jecxz
or
daa
in
inc
jle
sub
or
xchg
test
jge
rorl
jg
xor
lock
sub
inc
mov
sbb
pop
loope
es
mov
stos
jecxz
cmp
lahf
fdivrs
in
adc
dec
fisttps
aam
push
mov
push
pop
lea
pop
int
popf
jb
mov
cltd
aam
adc
sti
sub
dec
mov
scas
das
adc
mov
jb
mov
mov
and
dec
clc
aad
sub
lcall
adc
pop
sbb
jg
add
dec
inc
pop
ds
pop
testl
and
cltd
inc
xor
mov
nop
test
out
jnp
jge
sub
xor
test
lret
scas
sarb
mov
mov
iret
dec
aaa
lahf
aad
fs
fucomip
jo
incb
insl
mov
xchg
mov
xchg
data16
leave
push
pop
in
xchg
mov
adc
push
jae
dec
out
fistps
sub
mov
lods
cmp
pop
cmpb
adc
insb
aas
and
inc
push
in
cli
adc
arpl
push
push
cmp
push
mov
jle
or
fwait
add
sbb
mov
sub
sbb
in
cs
push
cmp
push
aad
pusha
jmp
cltd
pop
xor
xor
ds
repz
aas
cltd
sub
xchg
cli
inc
leave
sub
adc
call
ds
jmp
fcmovnbe
rep
nop
pop
dec
std
fcmovnbe
sbb
call
lock
fisttpll
sahf
pop
adc
xchg
ror
and
fsubrl
adc
imul
rcrb
daa
lret
imul
popf
movsl
pushf
sub
out
mov
cmp
bound
cmpl
jmp
shll
xor
fwait
jmp
mov
nop
scas
stos
sub
out
mov
pop
sub
inc
cmp
xchg
mov
popf
test
sub
mov
shl
xlat
cwtl
cld
mov
pop
ljmp
js
mov
les
cltd
out
call
cs
push
push
xchg
imul
sbb
andb
js
ret
sbb
leave
les
inc
iret
or
lret
arpl
sub
push
loopne
out
sbb
lods
jno
mov
pop
mov
pop
inc
pop
mov
cmp
fwait
orb
jg
xor
push
arpl
ret
mov
mov
lret
hlt
into
xor
add
ret
cwtl
scas
dec
sbb
inc
bound
out
fnstcw
into
pop
and
xchg
cmpl
sub
shrl
and
adc
adc
fcoms
inc
sarl
std
leave
imul
lods
mov
cwtl
outsb
mov
and
mov
jmp
and
sub
sub
cmpsl
push
jg
in
lds
sub
scas
push
or
dec
fwait
gs
mov
xor
notb
push
jmp
sub
inc
fdivp
test
xchg
fists
imull
or
jecxz
pop
stos
inc
xor
or
int
mov
repnz
mov
pop
icebp
push
mov
lods
lds
les
notl
ds
js
push
or
popl
xor
mov
xchg
or
sbb
das
dec
lcall
sub
push
mov
and
dec
pushf
ljmp
pop
shlb
lods
push
bound
mov
xor
test
out
daa
xor
hlt
in
sti
mov
ret
inc
xchg
das
fidivrs
adc
jle
ret
mov
mov
sar
repz
xchg
mov
testl
push
fnstsw
pop
shrb
rcr
pop
xlat
ss
mov
loop
dec
outsl
mov
add
push
inc
push
mov
clc
and
loope
adcb
loopne
jecxz
ja
xlat
jne
cmp
xchg
and
inc
dec
dec
or
sbb
and
and
inc
sub
push
xchg
push
cmpsb
jg
cmp
popa
inc
pop
jnp
lcall
mov
inc
sti
or
test
testl
pop
mov
sbb
fwait
adc
out
jecxz
pop
sbb
add
mov
pop
mov
jno
sbb
add
push
pop
ds
sub
call
or
aam
cmpsb
sub
outsb
add
mov
in
xchg
pop
cmp
push
pop
xchg
mov
ret
jl
shrl
les
mov
inc
scas
aam
lret
lock
push
and
idivb
insl
dec
jae
addr16
adc
sub
imul
sti
movl
cmc
cmp
or
movsb
stos
jp
int3
jae
sbb
ja
aad
lods
adc
fcoml
es
and
mov
imul
mov
cmp
push
pop
pop
sub
gs
mov
sub
inc
pop
xor
popa
movsb
xchg
fidivrs
lods
xor
insl
lds
adc
shll
dec
insl
clc
mov
mov
mov
movsb
shlb
test
push
cmc
mov
dec
inc
hlt
jle
pop
pusha
int3
cmpsl
fs
dec
jp
mov
pushf
clc
xchg
lods
pop
outsb
xchg
jecxz
or
adc
paddd
das
mov
mov
jmp
clc
loopne
adc
stos
lock
dec
popf
adc
xchg
cmc
mov
or
sti
lret
inc
push
inc
shl
push
call
xlat
lods
dec
mov
out
pop
out
and
loop
mov
or
dec
imul
flds
xchg
mov
xor
push
inc
lods
adc
add
gs
add
mov
sahf
call
movaps
scas
mov
or
sbb
dec
and
sub
out
inc
mov
repz
inc
fisubs
sub
in
gs
pop
sub
shlb
sub
loopne
dec
sbb
sbbb
and
cmp
in
cmpsb
mov
repnz
sub
xor
outsl
bound
jmp
rep
pop
and
xor
les
into
loopne
sbb
push
xlat
push
aad
sub
cmpsb
dec
mov
in
mov
adc
mov
inc
inc
mov
xlat
and
pop
lret
inc
in
pop
pop
cmp
mov
pop
jne
xor
enter
mov
fs
cmc
stos
dec
mov
jns
jb
adc
knotb
mov
inc
movsl
in
add
add
bnd
mov
pop
xchg
jb
xor
and
xor
xlat
in
es
loop
test
or
jmp
imul
xchg
push
mov
push
push
imul
rcrb
xchg
imul
out
mov
pop
imul
dec
sbb
xchg
mov
rcll
addl
mov
cmc
push
clc
xchg
rcll
rclb
and
xor
jge
lods
inc
fcoms
push
xor
jns,pt
pop
push
scas
cmpsl
aam
or
xor
pop
insl
mov
lock
aam
adc
notb
xchg
fdivr
cmpsb
sbb
adc
fistl
sub
adc
jb
cmp
mov
loop
in
push
icebp
adc
fstl
dec
dec
negb
cli
dec
ret
and
test
aad
dec
mov
push
stos
bound
mov
dec
and
adc
pop
mov
jp
lcall
popf
testl
mov
inc
andb
dec
add
orb
or
mov
mov
shlb
mov
repz
mov
ja
addr16
in
dec
adc
xchg
std
sbb
es
mov
out
loop,pn
iret
pop
pop
aaa
pand
adc
and
addb
fidivs
jge
ss
jl
ficoms
test
test
int3
xor
int
hlt
lods
imul
aas
lock
mov
add
and
cltd
fsubrs
std
test
push
xchg
fnop
ja
aaa
sub
mov
jae
test
out
mov
jb
stos
sbb
stos
popf
lahf
mov
sbb
inc
mov
out
imul
gs
adc
dec
add
insl
aaa
rcll
outsl
fisubl
adc
mov
nop
loope
cmp
jnp
sub
ret
push
hlt
xor
dec
jmp
inc
jb
mov
and
sarl
jmp
rorb
cmp
outsb
cld
in
mov
inc
lock
arpl
mov
imul
jnp
xor
outsb
lret
js
lret
push
mov
push
aaa
mov
jecxz
shl
xchg
and
cltd
mov
jg
and
ljmp
lsl
mov
add
insl
pop
add
lea
cmpsb
icebp
mov
dec
shr
jle
jbe
loopne
jbe
and
fsubrl
cwtl
stos
mov
fcomip
xor
and
je
push
push
pop
mov
imul
nop
aad
adc
cmp
pop
dec
je
jge
jae
dec
aaa
leave
stos
in
push
inc
sbb
lods
jae
pop
sahf
setl
not
lahf
test
loope
in
data16
lds
scas
mov
js
and
and
add
je
lcall
push
adc
cmp
fnsave
dec
push
in
clc
adc
sub
popf
lock
les
in
push
xchg
out
sbb
jle
insb
fcmovbe
fldt
addr16
movsl
lret
jmp
add
mov
fadd
xlat
arpl
xor
dec
pop
jle
jp
sarl
and
and
xchg
xchg
inc
out
sub
adc
mov
add
enter
movsl
jbe
fdivrs
sbbb
mov
pop
jl
cs
cmp
stc
int
mov
adc
cmc
cld
xor
cld
scas
or
and
mov
pop
dec
jg
lret
and
push
jmp
xchg
add
jp
mov
or
insl
mov
push
push
lods
inc
test
cmpsl
pop
dec
call
push
stos
pop
andl
jle
xor
insb
incl
shlb
xchg
inc
cmpsl
shll
or
mov
jne
jns
orl
test
xchg
addl
push
push
inc
push
pop
sub
fwait
es
test
and
lret
int
pop
sbb
sub
test
scas
loope
xchg
push
mov
adc
roll
cmp
or
jmp
inc
mov
xchg
fwait
mov
inc
lret
les
rorb
hlt
and
xchg
stos
adc
nop
out
xchg
adc
repz
and
pop
out
pop
xchg
and
adc
fwait
ret
push
sub
jecxz
pop
xchg
pop
push
repz
push
and
xor
mov
adc
sbb
push
xchg
inc
jmp
loopne
leave
aam
outsl
add
xor
inc
addr16
pop
dec
adc
sbb
andb
jl
test
push
es
lret
iretw
sub
lret
dec
jle
aas
cmpb
dec
mov
cmpsb
cmpsb
movsl
mov
loopne
stos
or
outsl
cmpsl
arpl
into
dec
xchg
mov
jge
leave
enter
mov
pop
cmp
cltd
cmpb
test
andl
sti
in
test
call
cmc
dec
xchg
nop
hlt
repz
dec
xchg
xor
dec
xchg
lahf
add
arpl
xchg
lods
ret
mov
inc
popa
bound
inc
lcall
lods
xor
push
fs
scas
mov
sarl
iret
lcall
cmpl
ss
dec
xchg
inc
xor
fwait
pop
lods
jns
cmpsl
fisubrl
or
pop
lods
sti
push
or
adc
enter
insl
push
mov
or
cmpsl
sti
ljmp
inc
sub
sub
mov
testl
ds
lods
mov
int3
push
cmp
adc
push
mov
imul
push
mov
xchg
sbb
sbb
add
std
outsb
mov
mov
dec
test
insb
add
or
mov
jmp
sub
sub
ret
gs
dec
and
mov
mov
mov
insl
movsb
adc
or
jecxz
sbb
dec
fcoml
push
cld
outsl
ja
or
je
xchg
into
in
out
and
outsb
into
iret
push
adc
dec
clc
mov
in
xchg
clc
mov
pop
es
xlat
es
psrld
mov
adc
cmp
and
sub
popf
inc
adc
les
sahf
jne
push
push
imul
gs
lcall
lcall
out
filds
mov
xchg
sbb
jns
dec
imul
and
imul
addps
mov
pop
inc
repz
dec
clc
les
rcrb
js
xor
notb
test
or
verw
scas
push
lods
xchg
sbb
mov
mov
push
stos
shlb
mov
mov
pop
lret
jg
push
push
jl
sub
in
xor
jb
imul
lock
ret
xchg
subl
sbb
cltd
xchg
outsb
lods
popf
push
push
lret
pop
shrb
pushf
pop
inc
sahf
and
in
rcrl
mov
imul
pop
xchg
jle
xchg
inc
sub
les
jp
mov
inc
shrl
adc
cmpsb
xadd
jno
jp
ficoms
cltd
jle
ja
scas
xchg
in
cmp
sub
sub
orl
pop
pusha
lods
aam
les
xorl
cli
cmc
shrl
xor
out
int
and
jmp
push
notl
mov
gs
movsb
and
pop
jno
xchg
sbb
ljmp
pop
pop
lods
mov
dec
fadd
cmp
scas
outsl
testl
xchg
hlt
and
mov
add
arpl
pop
int
add
mov
decb
push
sar
mov
push
test
enter
sub
pushf
lcall
lea
push
jno
xor
inc
adcb
xchg
xor
subb
jbe
and
adc
jmp
icebp
es
push
fbstp
add
pop
addr16
mov
cltd
pushf
sub
sti
and
dec
inc
mov
jecxz
jl
xchg
clc
lds
pop
xor
mov
adc
stos
mov
fmulp
xor
push
pop
jo
movsb
mov
data16
jmp
insb
or
rcrb
pop
clc
sbb
stc
or
call
jb
dec
cmp
test
mov
add
or
fwait
test
and
mov
mov
inc
adc
pop
inc
push
inc
cmp
and
in
stc
mov
push
jo
popf
stos
cmpsb
xchg
xchg
mov
bound
mov
movsb
cli
aaa
sub
or
hlt
imul
into
scas
shrb
push
shrl
out
aaa
xchg
cmpsb
dec
pop
jl
lcall
divl
int3
cli
add
movb
and
pop
movsl
jp
xchg
pop
xor
jns
mov
call
mov
mov
das
fs
mov
push
xchg
xchg
inc
jg
cmp
into
stos
shll
and
fmul
loopne
ret
test
xor
icebp
mov
bound
pop
xchg
pop
lahf
in
in
js
ljmp
mov
ficoml
sbb
and
leave
leave
out
lds
cmp
pop
sub
lods
sbb
arpl
in
lahf
aaa
lcall
fmuls
ret
cmp
out
lret
cmp
ds
js
cmp
data16
add
loop
or
adcl
fsub
popl
dec
inc
and
sbb
mov
addr16
enter
data16
sti
filds
xlat
cmp
addr16
add
pop
repnz
out
js
nop
clc
adc
xchg
cmp
repz
inc
loopne
inc
cmc
out
clc
cmpsl
mov
push
repnz
fwait
add
pusha
hlt
test
out
aam
mov
push
inc
xorb
jno
push
sti
push
jb
xor
lock
or
jo
and
jbe
addl
add
mov
rcrl
out
outsb
cmp
xor
pop
cli
mov
jnp
loope
inc
test
repz
push
xchg
mov
sbb
mov
mov
jne
or
add
adc
push
aam
push
push
sti
push
or
popf
xor
push
js
push
sti
add
sbb
mov
pusha
aas
pop
leave
pusha
lcall
and
je
push
xchg
adc
xchg
andb
or
adc
mov
in
pop
push
lock
mov
mov
imul
or
cmp
cltd
rorl
inc
xor
pop
mov
out
dec
das
xchg
xchg
mov
xor
cmpsl
sub
in
scas
push
mov
fsubl
add
and
movsb
sub
shl
cmpsb
bound
add
jle
pushf
daa
adc
push
mov
lods
addr16
pop
int3
rcrl
jne
push
xchg
inc
das
in
sbb
imul
call
inc
jle
xor
add
push
cli
daa
sbb
push
lea
cmp
cmp
cld
mov
cmp
rcrb
adc
cs
sbb
sub
sbb
dec
mov
in
mov
inc
sbb
cmpsb
fmul
xchg
sbb
int3
lret
fldcw
pop
cmpsl
outsb
pop
repz
mov
insb
mov
scas
imul
jbe
subl
and
fsubs
enter
outsl
add
enter
stos
jmp
std
mov
mov
mov
pop
xlat
aaa
fadds
sbb
aaa
mov
sub
mov
fs
jne
aaa
jp
shrb
lds
cltd
mov
mov
jmp
pop
hlt
jg
icebp
jae
jae
arpl
mov
push
push
arpl
add
aad
out
hlt
xchg
mov
push
mov
jecxz
stc
sub
cmp
inc
rolb
outsl
sarl
jo
rcr
pop
jg
sbb
mov
fistl
and
cmp
mov
out
fs
sarl
sbbl
or
pop
xchg
mov
jmp
push
mov
lods
pop
sbb
cmc
push
adc
mov
xor
push
sbb
pop
adc
xsha1
cmpsb
iret
in
imul
lods
jae
es
mov
les
jbe
movsl
adc
lock
gs
and
rcrb
mov
aam
pop
cmpsb
pop
outsb
inc
fsubrs
inc
xor
push
call
mov
xor
cmp
pop
and
fistps
cmpl
jns
sbb
cmp
cmc
push
jecxz
mov
scas
aas
mov
pop
loope
fisttpl
sbb
dec
or
mov
and
push
cmp
movsb
cld
divb
daa
popf
mov
xor
push
cld
or
stos
sub
add
imul
dec
mov
cltd
rol
mov
addl
jns
cmp
jmp
add
pushl
popw
mov
add
pop
cld
out
xor
mov
scas
push
xorb
daa
or
jo
and
mov
loope
mov
ja
stos
fwait
pop
push
push
mov
addb
sub
int3
mov
adc
insl
cmpsb
jne
push
mov
dec
daa
jmp
dec
jmp
dec
clc
stc
testl
cmpsb
xor
pop
dec
jge
push
fsubs
cmpsb
adc
pop
sbb
sahf
inc
ret
jb
addb
add
jnp
lds
adc
push
cmp
pop
jns
int
ret
loop
cmpsb
mov
add
jae
pushf
mov
out
pop
cmp
jmp
in
fcomps
in
mov
jg
mov
mov
add
mov
repnz
cs
cmp
pop
imul
xchg
xorb
cli
jae
jno
mov
sub
daa
ss
xchg
mov
insb
mov
jmp
pop
cwtl
mov
pop
xor
out
or
adc
and
sub
cmp
dec
into
sbb
aam
fldcw
xchg
cmp
inc
xchg
sahf
xor
mov
aas
xor
hlt
push
fsubrp
sub
mov
mov
xchg
ucomiss
pop
into
clc
jae
ror
scas
xchg
sbb
bound
subl
cs
roll
das
push
in
sbb
icebp
test
shrl
push
mov
adc
test
pop
push
insb
dec
das
push
mov
scas
orb
push
mov
mov
cmp
movsb
cmpb
jmp
imul
xlat
sub
lret
dec
jg
cs
out
hlt
mov
push
cltd
xchg
aas
jo
push
xchg
popw
pop
and
dec
pop
inc
dec
jnp
icebp
lds
cs
out
andb
daa
pop
out
rorl
cmp
fwait
in
imulb
popf
pop
push
push
popf
out
or
jo
mov
in
push
loope
fbstp
bound
push
shlb
jo
or
jge
loopne
cmpsl
lret
dec
jecxz
jo
or
bound
lahf
dec
and
clc
xor
lret
push
adc
cmpsl
loope
js
jns
mov
in
jbe
adc
sbb
sti
or
pop
bound
mov
daa
mov
adc
loopne
std
ficompl
and
push
push
cs
push
mov
out
adc
fs
jl
xchg
pop
movlps
std
pop
jne
push
push
jmp
jb
jmp
lock
cmp
rcrb
imul
push
pop
popl
stc
xchg
mov
lods
dec
cltd
fwait
pop
mov
add
aaa
lahf
cmp
xor
push
cmp
adc
add
sbb
test
push
sbb
nop
call
out
imul
repz
sub
push
sub
lea
and
aas
pop
sbb
push
jp
xor
pop
mov
xchg
out
dec
in
mov
add
icebp
xor
mov
dec
scas
xor
lret
pushf
enter
pushf
movsb
xchg
in
mov
xchg
mov
shrl
jo
and
inc
ss
out
mov
aad
mov
fisubs
bound
cmp
jo
cltd
int3
lret
sbb
shr
fwait
shl
mov
sbb
ja
mov
test
repz
adc
push
jg
add
nop
js
sbbl
push
mov
outsl
dec
sti
mov
dec
xor
imul
rcrl
mov
popa
mov
pop
dec
fcompl
mov
or
jnp
out
lods
insl
or
fs
xor
sbb
xor
sahf
imul
stos
test
pop
leave
sub
pop
and
and
mull
jle
ss
shlb
repz
xchg
scas
xchg
jbe
fistpll
gs
scas
sub
lcall
shl
jl
push
popf
xor
fs
sbb
pop
mov
ret
cmp
inc
dec
add
inc
test
in
outsb
cmp
mov
outsb
jae
sbb
push
dec
ds
and
sub
xchg
movsl
test
sbb
lahf
xlat
decl
and
test
push
or
mov
xchg
cmpsl
push
xor
mov
sbb
push
aam
mov
fadds
test
iret
inc
sti
add
jo
pop
sub
or
pop
fwait
push
rol
push
push
dec
pop
ret
andb
pop
xchg
movb
in
stos
add
adc
and
and
scas
mov
adcb
dec
sti
sub
mov
mov
xor
sub
loop
push
mov
icebp
dec
movsl
mov
add
add
cmp
mov
ficomps
inc
ss
es
stos
pop
movsb
aas
jne
xor
sub
insb
test
dec
xlat
or
icebp
dec
cld
jp
icebp
jne
mov
or
pop
or
or
pop
cltd
and
pop
adc
sti
mov
lcall
mov
das
cmp
or
sub
push
into
iret
clc
adc
dec
jg
mull
add
xchg
out
and
outsb
xchg
dec
cmp
sarb
adcl
mov
mov
mov
lods
mov
addr16
pop
jl
xor
test
mov
mov
std
xor
sbb
fcomps
or
adc
in
push
xor
push
fldenv
xchg
xchg
daa
dec
sahf
cld
push
mov
sbb
xchg
std
pop
adc
xchg
pop
push
popf
fs
imulb
fs
jmp
cmp
aaa
orl
mov
adc
lcall
pop
mov
inc
cs
jecxz
out
xor
lret
movsl
pop
stos
push
sbb
pop
xor
lret
or
add
mov
shll
and
fimull
jge
bsr
in
aas
or
enter
call
popa
mov
cmc
fistpll
pop
inc
cs
ret
popf
jg
adcb
push
pop
or
add
mov
pop
sbb
test
cs
jp
rcl
jle
enter
dec
jbe
sahf
inc
mov
lret
lock
fwait
dec
cmpsb
inc
loopne
add
lds
mov
cmp
ljmp
imul
sub
sbb
bound
out
pop
fsubl
jb
shrb
fwait
adc
out
or
push
sbb
inc
mov
pop
xor
popf
repz
pop
jae
fadds
adc
push
mov
and
and
test
or
mov
pop
xorl
dec
jg
outsl
push
test
nop
push
cli
jbe
clc
lret
es
sarl
gs
int
jne
or
mov
in
or
into
arpl
xor
mov
mov
das
ja,pn
inc
test
adc
mov
cli
push
cwtl
test
lret
mov
xchg
and
stos
jbe
or
ret
and
sbb
cld
mov
sbb
ret
andl
or
xchg
inc
fwait
dec
mov
lahf
pop
dec
fstpt
lcall
jno
sub
adc
inc
shl
jg
data16
mov
test
push
jp
rcr
adc
gs
jecxz
mov
sbb
mov
or
push
pop
repnz
push
data16
fst
add
dec
idivb
iret
cmc
dec
loop
sub
or
pop
repz
into
loopne
sub
sbb
ljmp
sub
shrb
cmp
mov
sbb
incl
jbe
and
inc
leave
mov
inc
cmp
pushf
pop
pop
icebp
das
jb
loopne
dec
popf
in
jle
pop
jge
mov
jns
cltd
decl
mov
stos
int
sub
cmpsl
inc
mov
sbbb
jns
movsb
dec
test
sub
xchg
icebp
aam
clc
jg
ds
jb
jnp
ss
adc
xlat
pop
gs
bound
sahf
test
shl
sbb
jmp
or
pushf
out
outsl
mov
cmpsl
xor
pop
jp
or
scas
leave
out
int3
std
add
cmc
in
mov
push
in
mov
xchg
lcall
outsl
add
push
pop
dec
mov
mov
sub
es
ficoml
mov
int3
lahf
into
sub
add
jp
pop
stos
addr16
mov
push
stc
jo
cmp
dec
sbb
mov
inc
rolb
add
pop
jmp
push
int
pusha
ss
stos
lret
or
mov
mov
unpcklps
push
jae
jnp
push
pop
jo
test
notb
adc
cmp
or
movb
es
movl
push
mov
jle
mov
gs
test
insb
icebp
sbb
xor
or
jp
jge
sbb
and
daa
pop
jb
mov
dec
sbb
jl
mov
fldl
rorl
ffree
mov
mov
test
pushf
add
insl
jae
ret
iret
push
sbb
shl
cld
pop
ror
clc
xlat
and
cwtl
mov
and
mov
hlt
icebp
stos
pop
lret
andb
push
mov
out
stc
test
inc
mov
in
enter
cmp
add
ljmp
addr16
or
inc
mov
xchg
pushf
dec
mov
sbbb
jae
das
xchg
sub
inc
dec
or
rcl
repz
inc
mov
add
mov
push
out
lcall
jb
dec
loope
fistl
incl
das
adc
enter
xor
repnz
sub
cmp
mov
mov
in
jg
test
pop
add
data16
mov
add
int3
cltd
add
and
sub
dec
fxtract
jbe
cmp
rcr
mov
testb
pop
js
jns
and
stos
push
rcll
dec
out
test
mov
inc
dec
movl
pusha
cmp
cmp
jecxz
xchg
xchg
ja
sti
xor
lods
imul
das
hlt
fs
sub
add
jb
fwait
insl
ss
jb
add
push
dec
lods
fdivrl
ss
add
out
jecxz
scas
xlat
punpcklbw
repz
mov
je
add
mov
hlt
and
pop
bound
scas
sbb
mov
lcall
scas
add
cmpsl
push
mov
fldl
push
test
cs
mov
shl
xchg
mov
xchg
and
into
ret
imul
ret
jp
pop
cmp
sbb
ficompl
dec
subb
jg
popf
neg
ds
insl
mov
insl
fwait
mov
jp
fildl
pop
cld
lahf
loopne
add
mov
stc
hlt
lods
outsl
rcll
jb
sahf
std
inc
cld
inc
xlat
cltd
mov
add
mov
push
adc
insl
ret
cwtl
iret
inc
push
mov
call
jo
fcompl
lret
mov
fisttpll
outsl
mov
add
roll
mov
cs
push
and
push
jnp
pop
sbb
dec
push
test
dec
inc
sbb
sbb
or
xchg
imul
and
ret
ds
sbb
std
rcr
add
inc
sub
jo
xor
push
in
loope
pop
or
scas
imul
mov
xchg
pop
fcomps
xchg
pop
imull
cmp
adc
sbb
sbb
sbb
lahf
mov
aam
adc
inc
lods
mov
lret
add
adc
ret
fidivrl
inc
sub
pop
ret
cmp
out
inc
inc
mov
sbb
add
sub
enter
addr16
mov
adc
loope
xchg
fistl
fmuls
stos
push
xchg
cmpsl
clc
and
out
push
nop
movsb
inc
cmpl
dec
vpunpcklqdq
bound
cltd
xor
dec
fdivrs
js
mov
stos
sbb
sub
jbe
push
push
pop
jne
fldcw
add
adc
sub
cmc
aaa
rorb
sbb
push
out
add
fsubr
lods
xchg
jne
leave
adc
dec
jg
ficompl
scas
in
lock
iret
mov
cmp
and
jge
and
lds
or
aam
mov
into
dec
xchg
xchg
fnstsw
jg
jne
pop
fnstsw
add
pop
rcl
xorl
popf
mov
push
cmp
jp
adc
and
iret
xchg
lret
test
lret
push
cltd
fiadds
xor
imul
stos
out
mov
rcll
pcmpgtd
push
lcall
and
mov
sbb
loopne
push
fstpl
sbb
mov
inc
mov
stos
add
and
and
js
aas
shll
cmp
mov
or
icebp
sub
jb
lcall
and
add
ss
or
pop
pop
jmp
jno
mov
lea
imul
call
sbb
ds
dec
mov
es
negb
test
out
sub
lcall
xchg
mov
jns
dec
push
jp
icebp
mov
inc
pop
mov
adc
cmc
sub
cs
mov
out
add
add
xchg
push
out
out
stos
enter
nop
pushl
shll
sub
push
sbb
jge
call
cmp
xchg
sub
ja
cltd
cltd
mov
movb
loopne
xchg
loop
das
push
sahf
lahf
xchg
push
and
pop
daa
xlat
pop
xlat
hlt
stc
fwait
cmc
fstpl
dec
lea
jbe
mov
mov
movzwl
mov
das
xchg
mov
xor
je
or
cmp
iret
rclb
stc
ds
push
fstps
cltd
push
js
shll
or
cmp
jnp
je
and
pushf
xor
xchg
lcall
cld
out
mov
adc
push
xor
ljmp
js
lahf
fimuls
pop
stc
cmp
mov
mov
addb
daa
add
sbb
xchg
jno
jp
add
mov
xchg
lahf
mov
daa
and
cmp
xorl
shll
or
xor
inc
cmp
and
sbb
mov
scas
add
xchg
insl
lock
fs
or
push
mov
cmp
arpl
adc
push
lock
gs
fistpll
lcall
add
xchg
push
iret
xchg
jp
push
xchg
lods
mov
jecxz
adc
jge
adc
xchg
insb
scas
adc
ds
jmp
jecxz
mov
xchg
xchg
cmpsb
ds
and
xchg
sti
push
ljmp
cmp
push
xor
scas
mov
icebp
dec
sub
roll
insb
sbb
sbb
data16
xor
xchg
bound
pop
push
jne
adc
add
ljmp
mov
inc
call
jle
jae
movsl
mov
and
xor
fwait
jl
sub
xor
xor
push
daa
mov
out
dec
sbb
test
and
repnz
scas
and
data16
cwtl
addl
push
push
cmc
mov
roll
adc
fwait
stos
adc
cli
mov
sub
pop
aas
mov
push
daa
movsb
das
xor
bound
mov
xchg
jle
shrl
fmull
pop
shrb
subl
pop
rcrb
int
aaa
mov
mov
in
sub
cmp
test
mov
xor
es
and
add
arpl
or
mov
iret
pop
cli
mov
sahf
adc
test
xchg
rcrl
add
mulb
mov
mov
xchg
outsb
inc
sbb
jo
sbb
push
enter
adc
push
mov
push
jae
orb
mov
push
jns
pop
xchg
mov
adc
sbbb
bound
push
or
adc
and
mov
sub
add
repz
aaa
pop
mov
or
ja
cmpsl
push
in
and
dec
mov
mov
dec
cmp
out
push
push
adc
pop
jb
aaa
popf
rcll
std
cmpsb
mov
push
and
int3
rorb
scas
pop
xor
lcall
fidivl
mov
adc
xchg
jle
mov
ja
cld
ja
push
mov
cmp
mov
scas
shl
addl
fistpll
rcll
dec
lret
loop
add
xlat
jnp
xchg
jle
mov
sbb
mov
dec
and
fdivs
pop
add
push
jns
sarb
add
inc
movsl
bound
mov
in
in
xchg
pop
dec
cmp
xor
jecxz
adc
and
ja
mov
jecxz
sbb
xlat
ret
test
insb
stos
dec
mov
sub
cld
dec
ja
jne
xor
adc
hlt
add
sarl
mov
add
dec
inc
out
icebp
loope
stos
adc
push
push
data16
xchg
add
adc
les
jle
and
out
ss
mov
mov
mov
inc
xor
jmp
insl
jge
mov
adc
sbb
in
movsl
adc
or
pop
xrelease
popf
xor
frstor
jl
idivl
push
adc
dec
mov
push
push
data16
xchg
aad
ret
xor
ret
mov
arpl
mov
mov
mov
lds
xchg
and
call
in
pop
call
adc
lea
fidivs
bound
mov
sti
jb
popa
jns
imul
cmc
cmp
sub
cwtl
jl
inc
loopne
outsl
mov
push
sti
mov
fstl
xchg
jbe
fisubrl
lock
add
and
push
shll
sub
sti
insb
fwait
shlb
movsb
add
repnz
lods
scas
sahf
call
addb
mov
je
xor
mov
mov
add
stos
cli
sarb
enter
shll
cmc
adc
xchg
lock
subb
test
lret
stos
mov
mov
and
cmp
test
int
push
pop
out
cwtl
enter
push
fsubl
inc
jl
clc
push
out
pop
jns
test
push
lea
lahf
adc
lcall
add
cwtl
fsts
lret
mov
cmp
cmp
shr
cmpsb
scas
ret
cmc
sub
mov
pop
cltd
bound
or
pop
cmp
lds
cmpsl
mov
ss
rcr
or
sub
cmp
hlt
out
dec
mov
add
mov
jbe
or
add
and
jmp
mov
bound
push
icebp
jb
cmp
fcom
cld
jns
mov
or
and
jb
ret
mov
loopne
mov
mov
movsl
ds
adc
outsl
sti
push
ds
movsb
adc
data16
pushf
push
add
scas
imull
test
cmpsb
push
adc
inc
daa
fmuls
xor
mov
mov
or
outsl
dec
gs
aas
lcall
pop
jmp
aaa
pop
cld
scas
lahf
sti
lcall
mov
icebp
inc
cmpb
ficomps
push
arpl
jb
repz
insl
cmp
lcall
mov
fdivl
mov
mov
das
cld
jnp
test
inc
cmp
pop
jge
sub
je
les
out
jp
loope
pop
movsb
mov
jne
jno
ret
push
cmpsl
push
pop
pop
int
jmp
mov
test
mov
in
lcall
push
lods
rclb
pushl
gs
push
lds
fsubrp
enter
mov
jns
pop
xor
adc
fwait
and
jge
pop
jnp
add
stc
mov
mov
mov
pop
adc
jmp
push
ds
xlat
cld
xrelease
jmp
dec
in
scas
xchg
rcrb
test
fnstcw
adc
outsb
pop
xor
ret
lods
into
movsl
inc
scas
pop
leave
or
jmp
cmp
cmpsl
add
xor
outsl
inc
inc
pop
mov
shll
xchg
outsl
cs
xor
push
inc
dec
pop
lret
imul
jmp
iret
push
fstps
and
jmp
mov
jae
inc
decb
dec
mov
andl
das
aas
sub
jb
mov
jecxz
sub
jl
out
gs
daa
movsb
movb
out
ret
jge
lret
add
mov
adc
mov
mov
jl
xchg
xlat
imul
push
xchg
icebp
js
scas
xlat
push
mov
mov
push
xchg
in
nop
jnp
mov
inc
sub
sbb
xchg
jb
sbb
lea
pop
dec
and
ret
jmp
test
sahf
lock
cmp
je
mov
jnp
add
ja
popa
jge
xor
add
and
mov
push
sub
fsubr
shlw
jnp
std
mov
dec
jge
addb
mov
or
loopne
lret
int
js
mov
imul
cmp
dec
adc
lcall
imul
mov
outsb
pop
cmp
dec
pop
popa
mov
or
sbb
mov
outsb
nop
mov
add
outsb
bound
cmp
sub
aam
out
leave
movsl
jo
mov
ljmp
lea
std
pop
sub
push
cmp
js
notl
xchg
mov
pop
mov
adc
mov
mov
popa
mov
jp
cs
pop
jl
xchg
cmpsb
mov
jl
sub
ljmp
push
aam
arpl
jae
inc
sbb
fisubrs
cwtl
jl
xlat
xchg
out
mov
mov
sahf
dec
int
jecxz
nopl
mov
popa
adc
int
ljmp
push
nop
inc
pop
outsl
stos
dec
dec
cmc
fisubs
and
push
hlt
mov
mov
ds
roll
xorb
mov
scas
xchg
movsl
out
add
pop
cmp
fs
inc
in
xchg
jb
repnz
sbb
mov
push
dec
sbb
loopne
sub
in
xchg
call
ds
mov
test
xchg
pop
cltd
sbb
fldl
sahf
dec
dec
subb
mov
aaa
orl
mov
gs
pushf
mov
inc
inc
out
test
cli
or
rorl
mov
sbb
lock
push
add
lds
mull
xchg
push
or
mov
cmp
sbb
jns
xchg
ss
fsts
std
jne
das
and
les
sub
jp
add
add
lock
dec
pushf
jmp
pop
cli
push
mov
gs
mov
sub
mov
mov
test
cld
lahf
inc
sbb
and
stos
mov
pop
mov
sub
and
in
sub
js
das
enter
add
xor
into
notb
rcrl
adc
xor
in
leave
arpl
js
fdivrl
pop
cs
enter
pop
repz
xchg
push
lock
xor
mov
push
cltd
sbb
aas
shlb
insl
sbbb
inc
ret
jmp
sbb
daa
adc
jbe
pop
push
sub
repnz
cmpsl
imul
repz
adc
xchg
mov
adc
in
out
cld
lcall
inc
or
lret
push
xchg
and
ret
es
mov
xchg
push
push
add
js
pop
jmp
aaa
repnz
je
jbe
and
test
mov
mov
fs
pop
cmpsl
clc
aam
out
in
mov
int3
imul
mull
push
adc
xor
jns
idivb
push
pop
in
jp
ljmp
and
iret
jg
out
push
pop
ss
jo
icebp
sbb
jg
jnp
repnz
xor
mov
ror
or
loop
mov
sbb
add
and
add
inc
cmp
push
xchg
push
mov
test
add
in
inc
pop
cmp
jle
sarb
aas
test
jl
outsw
lahf
or
les
lahf
sbb
out
js
mov
or
pop
inc
push
hlt
adc
adc
dec
jb
imul
xchg
mov
fldenv
in
mov
sub
dec
inc
push
and
mov
idivb
push
ret
insb
mov
push
lret
rcll
sub
push
sahf
adc
sbb
and
insl
dec
in
dec
lds
adc
add
jge
cmp
loopne
and
cli
pop
lret
sbb
in
aad
jno
pop
imul
stc
test
mov
fnstenv
mov
popf
mov
icebp
pusha
jg
lret
paddusb
mov
add
jg
sbb
dec
repz
mov
mov
xchg
dec
int
jmp
das
pop
jmp
fs
mov
mov
jnp
jne
mov
outsb
roll
insl
stc
loop
inc
mov
mov
inc
push
sub
lret
sbb
icebp
jp
iret
cmp
mov
add
lahf
into
fdivrs
outsl
cmp
dec
cwtl
aas
jle
or
and
cmpsl
stc
xchg
aad
mov
inc
pop
jp
pop
lods
cltd
inc
jo
jbe
imulb
in
stc
push
mov
dec
arpl
aas
addr16
lds
sub
ror
imul
xchg
and
scas
mov
shll
ja
mov
push
popa
mov
aas
xchg
xor
cmp
cmp
add
popa
scas
mov
cmp
lcall
push
test
pop
mov
or
inc
push
sub
mov
mov
out
cld
xchg
insl
cli
pushf
xchg
cmp
lock
cmp
aam
les
mov
ret
push
push
pushf
gs
fwait
xchg
or
xlat
in
ret
in
sbb
orb
repz
in
dec
jne
repnz
rcrb
xchg
scas
lods
mov
daa
jns
in
or
dec
jge
repz
cmc
pop
inc
and
xchg
and
pop
movsb
pop
mov
test
push
ja
movd
out
push
sarb
loop
pusha
jl
stc
mov
inc
dec
cmpsb
into
sub
adc
mov
xchg
push
adc
imul
adc
into
cmp
inc
sbb
mov
pop
and
mov
je
loopne
sbb
into
popa
sbb
imul
cmp
push
inc
adc
add
xchg
iret
jmp
cmp
dec
sub
loop
test
cld
pusha
mov
mov
nop
sub
sub
lods
fdiv
pop
into
stos
popl
sbb
clc
loop
xor
and
cmp
imul
xchg
paddd
ret
push
push
mov
lds
mov
push
push
fldl2t
fldl
sbb
cmp
addw
int3
call
jns
out
push
jbe
pop
cmc
mov
out
push
pushf
xchg
xchg
nop
imull
push
mov
add
sbb
addr16
mov
jg
xchg
add
std
fcmovb
jmp
mov
adc
fistpll
push
cmp
sbb
xor
repz
inc
pop
push
loope
insl
iret
cli
jns
lock
iret
dec
out
adc
leave
push
testl
je
sbb
nop
ss
cmp
pusha
sub
jle
xchg
stos
lods
mov
data16
add
pop
ja
mov
rorl
mov
scas
and
fcmovnu
mov
or
and
cmc
pop
sub
mov
xchg
lret
push
arpl
dec
into
sti
jmp
sbb
shrl
dec
sbb
xchg
mov
cmp
sar
testb
jle
pop
dec
and
outsl
test
and
xchg
xor
mov
jno
adc
aaa
mov
daa
or
add
cmp
into
into
add
cmp
mov
into
imul
xorb
mov
jmp
mov
inc
into
inc
cmp
or
xchg
inc
sbb
sbb
mov
call
pop
jle
aas
sub
jns
shll
sub
xchg
and
aad
xchg
cmp
sub
sarb
mov
enter
jnp
cwtl
adc
aam
inc
jae
lods
in
cld
in
mov
adc
or
sbb
leave
mov
into
pop
in
test
.byte
.byte
